add
push
add
add
add
add
mov
add
add
push
add
nop
or
orb
add
add
add
adc
addb
add
loope
and
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
push
add
addb
add
js
add
loope
and
add
add
add
add
add
add
mov
rorb
add
insb
and
add
add
add
add
add
add
enter
clc
rorl
add
insb
and
add
add
add
add
add
add
lock
add
add
loope
and
add
add
add
add
add
add
sbb
add
pusha
or
add
insb
and
add
add
add
add
add
add
inc
add
add
add
loope
and
add
add
add
add
add
add
push
fmuls
add
insb
and
add
add
add
add
add
add
nop
add
add
add
insb
and
add
add
add
sbb
add
add
nop
add
addb
add
mov
add
add
add
addb
add
add
addb
add
pop
add
addb
add
addb
orb
add
test
add
rolb
add
clc
add
orb
add
and
orb
add
add
jo
add
cwtl
add
orb
add
rolb
adc
add
call
add
add
add
add
cmp
add
pusha
add
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
push
add
js
add
mov
add
add
push
add
loope
and
add
add
add
add
push
add
add
adc
add
add
add
insb
and
add
add
add
add
push
add
add
add
add
js
push
add
add
insb
and
add
add
add
add
push
add
add
add
add
sbb
push
add
add
insb
and
add
add
add
add
push
add
add
add
add
js
push
add
add
insb
and
add
add
add
add
push
add
add
add
mov
js
call
add
add
insb
and
add
add
add
add
push
add
add
add
lcall
add
insb
and
add
add
add
add
push
add
add
sub
dec
pop
add
loope
and
add
add
add
add
push
add
add
add
add
or
add
insb
and
add
add
add
add
push
add
add
add
add
cmp
add
add
add
insb
and
add
add
add
add
push
add
add
add
add
aas
js
test
add
loope
and
add
add
add
add
push
add
add
add
add
inc
js
test
add
loope
and
add
add
add
add
push
add
add
add
push
js
test
add
loope
and
add
add
add
add
push
add
add
gs
push
add
add
insb
and
add
add
add
add
push
add
add
imul
push
add
loope
and
add
add
add
add
push
add
add
add
add
jp
add
add
add
insb
and
add
add
add
add
push
add
add
add
js
test
add
loope
and
add
add
add
add
push
add
add
add
js
push
add
add
insb
and
add
add
add
add
push
add
add
add
fcmovb
js
sub
add
loope
and
add
add
add
add
push
add
add
add
add
js
sub
add
loope
and
add
add
add
add
push
add
add
vmwrite
sub
add
insb
and
add
add
add
add
push
add
add
add
jns
call
add
add
insb
and
add
add
add
add
push
add
add
add
jns
test
add
loope
and
add
add
add
add
push
add
add
push
add
loop
jns
test
add
loope
and
add
add
add
add
push
add
add
add
mov
add
loope
and
add
add
add
add
push
add
add
add
xor
add
loope
and
add
add
add
add
push
add
add
ret
sub
loope
and
add
add
add
add
push
add
add
push
jnp
sub
add
loope
and
add
add
add
add
push
add
add
push
add
ljmp
add
insb
and
add
add
add
adc
out
sldt
cwtl
pop
add
rolb
xor
add
call
sldt
adc
add
cmp
add
pusha
or
xor
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
cmp
add
js
add
mov
sldt
enter
std
sldt
lock
cmp
add
sbb
add
inc
or
addb
add
push
add
add
insb
and
add
add
add
add
add
add
mov
add
lock
adc
pusha
add
add
insb
and
add
add
add
add
add
add
fadds
add
push
cmpsb
adc
adc
add
insb
and
add
add
add
add
add
add
add
add
pusha
stos
adc
loopne
add
loope
and
add
add
add
add
add
add
sub
add
inc
scas
adc
rolb
add
insb
and
add
add
add
add
add
add
push
or
add
mov
add
add
loope
and
add
add
add
add
add
add
js
add
movsb
mov
add
add
loope
and
add
add
add
add
add
add
mov
mov
add
loope
and
add
add
add
add
add
add
enter
mov
add
add
insb
and
add
add
add
add
add
add
lock
add
add
add
insb
and
add
add
add
add
add
add
sbb
add
cwtl
mov
add
loope
and
add
add
add
add
add
add
inc
or
add
add
add
add
insb
and
add
add
add
add
add
add
push
adc
test
add
loope
and
add
add
add
add
add
add
nop
or
add
leave
adc
je
add
loope
and
add
add
add
add
add
add
mov
int
add
add
insb
and
add
add
add
add
add
add
loopne
add
mov
adc
fadds
add
loope
and
add
add
add
add
add
add
or
add
mov
adc
mov
add
add
insb
and
add
add
add
add
add
add
xor
add
dec
rclb
add
add
loope
and
add
add
add
add
add
add
pop
or
add
add
add
insb
and
add
add
add
add
add
add
orb
add
fsts
add
add
loope
and
add
add
sbb
add
push
adc
cmpb
sbbb
andb
add
jle
add
mov
add
xchg
adc
addb
sbbb
andb
add
mov
adc
and
add
or
add
rclb
add
fcoms
add
loopne
add
out
adc
adc
add
clc
or
add
sbb
add
sub
add
cmp
add
dec
adc
add
add
call
adc
adcb
add
cmp
add
pusha
sldt
mov
add
loope
and
add
add
add
add
add
add
nop
or
add
fistl
add
add
add
insb
and
add
add
add
add
add
add
mov
fistl
add
add
add
insb
and
add
add
add
add
add
add
loopne
add
xchg
loopne
add
add
loope
and
add
add
add
add
add
add
or
add
in
adc
add
insb
and
add
add
add
add
add
add
xor
add
and
jp
add
loope
and
add
add
add
add
add
add
pop
or
add
jmp
add
insb
and
add
add
add
add
add
add
orb
pop
inc
and
popf
add
loope
and
add
add
add
add
add
add
test
add
pop
loopne
add
push
add
loope
and
add
add
add
add
add
add
rorb
add
add
push
add
loope
and
add
add
add
add
add
add
clc
or
add
ja
add
insb
and
add
add
add
add
add
add
and
sub
add
add
loope
and
add
add
add
add
add
add
dec
or
sub
lcall
add
insb
and
add
add
add
add
add
add
jo
add
aam
sub
add
insb
and
add
add
add
add
add
add
cwtl
or
cmp
stos
sbb
add
insb
and
add
add
add
add
add
add
rorb
add
add
add
insb
and
add
add
add
add
add
add
call
bound
add
add
loope
and
add
add
add
add
add
add
adc
add
cmp
cmp
jno
add
loope
and
add
add
add
add
add
add
cmp
add
lods
cli
cmp
lret
sgdtl
loope
and
add
add
add
add
add
add
pusha
push
add
js
cmp
add
insb
and
add
add
add
add
add
add
mov
add
cmp
cmp
add
insb
and
add
add
add
add
add
add
mov
add
mov
adc
add
insb
and
add
add
add
add
add
add
fmuls
add
enter
cmp
add
loope
and
add
add
add
add
add
add
add
add
add
dec
add
add
add
insb
and
add
add
add
add
add
add
sub
add
test
push
add
push
add
loope
and
add
add
add
add
add
add
push
sldt
nop
sub
add
and
loope
and
add
add
add
add
add
add
js
add
or
add
loope
and
add
add
add
add
add
add
mov
in
add
add
add
insb
and
add
add
add
pop
add
jg
add
sldt
and
add
dec
adc
cmp
add
jo
add
cwtl
adc
cmp
add
rclb
cmp
add
call
add
add
insb
and
add
add
add
add
add
add
adc
add
inc
jns
add
add
loope
and
add
add
add
add
add
add
cmp
add
pop
jns
add
add
loope
and
add
add
add
add
add
add
pusha
adc
add
add
add
loope
and
add
add
add
add
add
add
mov
add
cmpb
adc
add
loope
and
add
add
add
add
add
add
mov
add
xchg
jns
add
add
loope
and
add
add
add
add
add
add
fcoms
add
test
ja
adc
add
loope
and
add
add
add
add
add
add
add
add
mov
add
add
insb
and
add
add
add
add
mov
add
add
add
loope
and
add
add
add
add
push
add
add
add
les
js
mov
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
xor
add
push
add
xor
xor
add
push
add
xor
xor
add
push
add
xor
xor
add
push
add
xor
xor
add
push
add
xor
xor
add
push
add
xor
add
push
add
xor
add
aaa
add
add
add
add
add
add
add
push
add
xor
push
add
add
push
add
xor
push
add
add
push
add
xor
pop
add
add
dec
add
dec
add
add
add
add
dec
add
dec
add
add
add
add
dec
add
push
add
add
add
dec
add
push
add
add
add
add
dec
add
push
add
add
add
add
dec
add
push
add
push
add
dec
add
add
add
add
dec
add
push
add
push
add
dec
add
add
add
add
dec
add
push
add
dec
add
add
add
dec
add
push
add
dec
add
add
add
add
add
push
add
inc
add
or
dec
add
dec
add
dec
add
dec
add
add
add
sbb
adc
add
add
add
sub
add
add
adc
add
add
or
push
add
adc
add
add
add
add
add
adc
add
add
and
push
add
sbb
add
add
call
add
sbb
add
add
add
push
add
push
add
sbb
add
add
add
add
pop
add
sbb
add
add
add
add
and
add
add
call
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
xor
add
add
push
add
xor
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
add
add
add
push
add
add
add
or
sub
add
adc
inc
inc
add
add
sbb
sub
add
adc
inc
inc
add
add
and
sub
add
pusha
pusha
add
add
add
call
add
add
add
or
test
add
push
add
add
add
sbb
test
add
pop
add
add
add
and
test
add
sbb
addb
add
add
sbb
addb
add
dec
add
sbb
addb
add
enter
add
add
add
or
add
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
clc
add
add
add
mov
add
jo
add
add
jo
addb
add
add
clc
ja
add
pop
decl
incl
add
pop
incl
add
pop
clc
add
add
clc
add
add
jg
incl
pop
mov
add
js
add
add
incl
add
incl
add
aas
add
clc
aas
add
clc
pop
add
lock
add
lock
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
lock
add
clc
pop
add
cld
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
rol
rcr
add
lret
add
add
adc
adc
sbb
sbb
and
and
xor
xor
inc
aas
aas
add
inc
add
dec
add
push
add
push
add
pop
add
pop
add
add
jno
jp
js
cmpb
mov
mov
xchg
xchg
xchg
add
movsl
movsb
add
lods
add
mov
roll
lret
lret
add
rcl
add
aad
flds
loopne
fildl
ljmp
add
lock
add
lock
hlt
hlt
add
clc
testl
iret
lret
lret
add
int3
lret
add
rcl
add
aad
add
fcom
add
add
loopne
add
loope
add
loope
add
call
call
add
icebp
lock
repz
clc
testl
iret
leave
leave
add
lret
aad
iret
add
rcl
add
rcl
add
fcom
add
fcomp
add
add
loopne
add
loopne
add
in
add
call
call
add
lock
add
icebp
lock
repz
clc
testl
loopne
fiaddl
in
fiadds
out
loopne
call
call
call
add
ljmp
repz
lock
lock
repnz
clc
testb
idiv
add
clc
clc
add
repnz
clc
testb
idiv
add
clc
clc
add
loope
add
loop
add
call
call
add
ljmp
cmc
icebp
icebp
add
repnz
clc
testb
idiv
add
clc
clc
add
cltd
pop
add
add
add
add
cltd
pop
add
cmp
add
adc
hlt
pop
or
in
or
jo
adc
add
add
lods
xchg
dec
add
adc
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
push
or
add
adc
pop
add
sbb
add
push
push
add
pop
pop
add
pop
push
add
and
add
and
add
and
es
daa
add
cs
das
xor
inc
aas
aas
add
inc
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
add
add
jno
ja
jne
jp
js
jge
js
jge
jnp
cmpb
mov
mov
xchg
xchg
xchg
add
xchg
xchg
add
movsb
add
lods
add
mov
roll
les
ror
lret
add
int3
lret
add
into
int
xlat
rcl
add
aad
flds
flds
fiaddl
loopne
fildl
loope
fiadds
jecxz
filds
out
filds
ljmp
add
call
jmp
out
in
in
add
lock
add
lock
icebp
icebp
add
icebp
icebp
add
repz
repnz
repz
repz
hlt
repz
hlt
hlt
add
cmc
cmc
add
div
add
div
add
div
add
div
add
div
add
clc
testl
sti
clc
clc
add
stc
stc
add
stc
clc
add
cli
cli
add
cli
cli
add
sti
cli
add
cld
sti
add
cld
sti
add
std
std
add
std
add
incb
incb
incb
incb
incl
incl
loop
faddl
jecxz
fldl
in
faddl
in
fldl
in
fiadds
in
filds
in
filds
out
filds
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
dec
cwtl
test
add
adc
add
adc
sub
daa
sbb
pop
and
add
or
push
add
or
das
sub
or
add
add
add
add
adc
sub
das
and
push
add
add
add
add
and
das
das
das
das
daa
and
add
add
add
sbb
das
cs
add
add
add
add
sub
das
das
das
das
sub
add
add
add
add
sub
sub
sub
das
das
das
sub
add
add
add
sub
sub
add
and
add
add
sbb
add
add
incl
add
incl
add
aas
add
clc
aas
add
clc
pop
add
lock
add
lock
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
lock
add
clc
pop
add
cld
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
ror
lret
mov
lods
pop
push
push
add
pop
div
in
call
aam
int
fsts
fldcw
test
add
jno
and
in
jmp
jge
jnp
add
imul
add
pop
push
push
adc
adc
jne
jmp
xor
xor
pop
pop
pusha
pop
pop
add
aas
push
push
push
jp
js
in
in
sti
clc
clc
inc
mov
push
add
add
lret
div
repnz
stc
clc
std
cli
cli
sti
stc
stc
cld
sti
fcmove
les
lcall
div
std
cld
sti
cli
clc
div
hlt
repz
icebp
add
repnz
div
std
std
std
std
cld
cli
cli
repz
add
dec
div
out
clc
div
std
std
std
std
std
sti
cli
div
repz
aad
add
add
jecxz
hlt
repz
std
std
std
std
std
std
cli
clc
clc
clc
hlt
hlt
xchg
xchg
nop
jge
js
cmc
cmc
clc
div
hlt
icebp
icebp
out
filds
add
shl
loopne
fcmovne
ret
inc
inc
add
push
pushf
xchg
xchg
mov
add
incl
add
incl
add
aas
add
clc
aas
add
clc
pop
add
lock
add
lock
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
lock
add
clc
pop
add
cld
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
adc
add
sub
add
cmp
add
inc
sbb
sbb
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
pop
pusha
pop
pop
ror
lret
pushl
push
push
xchg
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
mov
div
in
call
idiv
aam
int
push
push
or
adc
add
or
add
add
add
add
add
add
and
call
fcmovu
lods
test
mov
test
add
or
add
add
add
or
es
add
in
jmp
jge
jnp
add
add
imul
xor
jge,pn
add
add
add
add
add
add
add
add
sbb
pop
pop
push
push
call
adc
sti
ja
jne
loope
fdivrp
xor
xor
pop
pop
pop
std
pusha
pop
pop
loop
add
or
add
add
add
add
aas
scas
push
push
push
jp
js
out
in
in
sti
clc
clc
inc
mov
push
cld
push
or
add
add
add
cmpb
ror
lret
div
repnz
cld
stc
clc
std
cli
cli
sti
stc
stc
cld
sti
lret
and
and
add
add
add
add
add
add
cld
sti
cli
div
std
std
cld
sti
cli
clc
idiv
div
repz
div
icebp
sub
daa
je
add
add
add
add
add
add
repz
sti
div
cld
std
std
std
std
cld
cli
cli
push
lock
ljmp
arpl
add
add
add
add
add
add
add
add
dec
mov
clc
div
cli
std
std
std
std
std
sti
cli
div
repz
aad
or
or
add
add
add
add
add
add
add
add
push
adc
loop
hlt
repz
std
std
std
std
std
std
cli
clc
clc
sti
clc
hlt
hlt
std
xchg
xchg
nop
fldl
add
or
add
add
add
push
jge
js
sti
cmc
cmc
clc
div
cld
hlt
icebp
icebp
out
and
push
pop
add
add
add
add
add
add
add
add
add
add
nop
mov
stc
jecxz
loopne
enter
dec
inc
inc
test
add
add
add
add
add
add
add
add
add
push
push
push
push
mov
add
and
push
add
add
add
add
incl
add
pop
add
loopne
add
lock
lock
add
lock
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
lock
add
cld
aas
add
sub
add
sbb
add
xor
add
add
add
add
add
and
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
pop
mov
add
add
add
jo
add
add
add
add
add
add
add
or
add
add
add
js
pshufw
add
add
add
addb
addb
add
add
add
jo
push
add
add
add
add
ja
pushl
add
add
add
ja
incl
add
or
mov
add
add
pushl
add
add
pushl
add
add
pushl
add
add
pushl
add
add
clc
add
add
add
clc
add
add
add
mov
push
add
add
add
jg
clc
addb
add
add
or
clc
js
mov
add
add
add
add
add
add
incl
incl
jmp
incl
incl
incl
incl
incl
incb
incl
cld
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
incl
incl
incl
inc
incl
sub
add
sbb
add
xor
add
add
or
add
add
inc
add
add
add
add
addb
addb
add
rol
rcr
add
lret
add
add
adc
ltr
sbb
add
and
add
sub
xor
add
xor
add
cmp
add
inc
add
inc
add
inc
add
add
push
add
pop
add
pop
add
pusha
add
data16
imul
outsb
outsb
add
jo
jnp
jbe
jge
js
cmpl
add
lea
add
mov
mov
add
mov
add
mov
mov
add
enter
lret
lret
add
int3
lret
add
rcl
add
aad
add
fcom
add
add
loopne
add
loope
add
loope
add
call
call
add
icebp
lock
repz
clc
testl
iret
leave
leave
add
lret
aad
iret
add
rcl
add
rcl
add
fcom
add
fcomp
add
add
loopne
add
loopne
add
in
add
call
call
add
lock
add
icebp
lock
repz
clc
testl
loopne
fiaddl
in
fiadds
out
loopne
call
call
call
add
ljmp
repz
lock
lock
repnz
clc
testb
idiv
add
clc
clc
add
repnz
clc
testb
idiv
add
clc
clc
add
loope
add
loop
add
call
call
add
ljmp
cmc
icebp
icebp
add
repnz
clc
testb
idiv
add
clc
clc
add
cltd
pop
add
add
add
add
cltd
pop
add
cmp
add
adc
hlt
pop
or
in
or
jo
adc
add
add
lods
xchg
dec
add
adc
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
push
or
add
adc
pop
add
sbb
add
push
push
add
pop
pop
add
pop
push
add
and
add
and
add
and
es
daa
add
cs
das
xor
inc
aas
aas
add
inc
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
add
add
jno
ja
jne
jp
js
jge
js
jge
jnp
cmpb
mov
mov
xchg
xchg
xchg
add
xchg
xchg
add
movsb
add
lods
add
mov
roll
les
ror
lret
add
int3
lret
add
into
int
xlat
rcl
add
aad
flds
flds
fiaddl
loopne
fildl
loope
fiadds
jecxz
filds
out
filds
ljmp
add
call
jmp
out
in
in
add
lock
add
lock
icebp
icebp
add
icebp
icebp
add
repz
repnz
repz
repz
hlt
repz
hlt
hlt
add
cmc
cmc
add
div
add
div
add
div
add
div
add
div
add
clc
testl
sti
clc
clc
add
stc
stc
add
stc
clc
add
cli
cli
add
cli
cli
add
sti
cli
add
cld
sti
add
cld
sti
add
std
std
add
std
add
incb
incb
incb
incb
incl
incl
loop
faddl
jecxz
fldl
in
faddl
in
fldl
in
fiadds
in
filds
in
filds
out
filds
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
dec
cwtl
test
add
add
sldt
add
adc
add
xor
aaa
xor
add
add
cmp
cmp
cmp
add
add
cmp
sub
xor
cmp
add
xor
add
sub
daa
or
add
xor
add
and
add
add
aas
aas
sbb
or
add
add
adc
cmp
aaa
adc
add
adc
sub
cmp
sbb
pop
adc
add
cmp
cmp
sub
add
cmp
aas
aas
cmp
add
xor
aas
aas
aas
aas
aas
cmp
add
aas
aas
aas
aas
aas
cmp
sbb
add
cmp
aas
aas
aas
aas
aas
aas
aas
aas
cmp
adc
add
add
add
sub
aas
aas
aas
aas
aas
aas
cmp
add
add
add
add
aas
aas
aas
aas
aas
cmp
add
xor
aas
aas
aas
aas
cmp
sbb
add
add
cmp
aas
aas
aas
aas
aas
cmp
add
add
cmp
ss
add
sbb
xor
sub
sbb
sbb
add
add
add
add
incl
incl
jmp
incl
incl
incl
incl
incl
incb
incl
cld
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
incl
incl
incl
inc
incl
sub
add
sbb
add
xor
add
add
sbb
add
add
rolb
add
push
push
push
xor
add
add
inc
inc
inc
mov
aad
into
jnp
jbe
add
inc
xlat
jecxz
fucom
loope
loop
fsubr
loope
mov
xlat
rcl
jmp
icebp
out
jmp
out
call
popa
pop
pop
add
out
enter
mov
iret
lret
lret
mov
fcomip
jmp
add
add
popa
aad
iret
dec
dec
dec
add
add
cmp
decl
add
sub
mov
add
sldt
add
add
xchg
xchg
xchg
fcmovbe
pop
pop
pop
add
add
add
xchg
add
inc
dec
dec
dec
and
and
das
das
sub
sub
out
sti
stc
clc
jmp
sbb
sbb
cs
jl
jge
js
dec
dec
pop
pop
pop
xor
xor
push
hlt
hlt
cld
sti
sti
jecxz
loope
inc
inc
dec
dec
dec
push
push
push
jl
jbe
jge
js
inc
inc
push
push
push
scas
lods
lods
std
clc
hlt
hlt
cld
stc
stc
stc
div
cld
cld
fcom
aad
pusha
pusha
inc
inc
inc
pop
pop
pop
aas
cmp
add
add
mov
jmp
cld
cmc
icebp
icebp
cli
div
std
cli
cli
cld
cli
stc
div
repz
clc
clc
div
lock
mov
data16
add
cs
out
cmc
icebp
lock
div
clc
cmc
cmc
std
cli
cli
std
std
std
cld
cld
stc
div
div
repnz
repz
out
out
jg
jnp
add
xor
das
in
fucomp
in
cld
stc
stc
std
cli
cli
cld
sti
std
cld
cld
stc
stc
cli
div
lock
jmp
jl
add
jmp
out
cli
cli
cli
cli
std
cld
std
std
std
std
cld
stc
stc
cli
clc
div
in
in
ljmp
add
aad
jmp
out
cli
cli
cld
sti
std
std
std
std
cld
cld
cli
stc
cld
stc
stc
out
jmp
jmp
dec
add
ret
jmp
in
div
std
std
std
std
std
std
std
cli
cli
std
cli
cli
jmp
faddl
jne
jo
loop
lock
in
std
std
std
std
std
std
std
std
cld
sti
sti
sti
div
out
loope
ret
add
add
in
cld
cld
std
std
std
std
std
std
cld
std
std
in
call
fs
pusha
jle
jns
in
call
cli
std
out
jmp
in
faddp
mov
add
add
loope
in
repnz
out
cmc
hlt
repz
icebp
icebp
in
out
out
mov
jb
outsb
mov
ror
lret
iret
enter
mov
bound
test
add
add
incl
incl
jmp
incl
incl
incl
incl
incl
incb
incl
cld
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
incl
incl
incl
inc
incl
sub
add
sbb
add
xor
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
sbb
add
and
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
adc
push
stos
xor
cs
add
add
add
pop
add
add
add
inc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
mov
mov
call
iret
into
jnp
jbe
add
add
add
arpl
add
pop
add
add
add
sub
add
adc
add
pop
add
add
add
add
add
add
add
or
add
add
add
add
dec
inc
inc
test
jecxz
out
loope
loop
fdivr
call
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
sbb
jmp
repnz
out
jmp
out
out
call
jecxz
popa
pop
pop
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
mov
out
out
dec
mov
icebp
dec
lret
lret
mov
loopne
sti
lock
pop
push
add
add
add
add
add
add
add
add
popa
scas
aad
iret
decl
dec
sti
add
add
cmp
cmp
decl
add
ljmp
sub
mov
out
add
add
add
add
add
add
or
or
movsb
mov
cld
add
add
add
add
xchg
xchg
xchg
fcmovbe
incl
pop
pop
incb
add
incl
add
sti
xchg
cmp
add
add
add
add
add
add
dec
dec
inc
mov
and
and
das
das
das
ljmp
sub
ljmp
jmp
lcall
sbb
cs
sbb
jge
ljmp
add
jge
js
dec
dec
dec
pop
pop
pop
std
xor
xor
scas
lods
lods
push
hlt
hlt
cld
sti
sti
jmp
loope
incl
inc
decb
dec
push
push
push
cld
jl
jbe
push
adc
add
add
add
add
add
add
add
femms
push
inc
jge
js
inc
inc
inc
push
push
push
scas
lods
lods
std
clc
hlt
hlt
cld
stc
stc
stc
div
cld
cld
fcom
aad
bound
incl
inc
cli
pop
pop
pop
aas
cmp
add
add
add
add
add
add
add
and
and
mov
test
std
cld
push
icebp
icebp
cli
div
std
cli
cli
cld
cli
stc
push
hlt
repz
cld
clc
clc
push
repnz
mov
mov
push
mov
add
add
add
add
add
add
add
das
cs
in
cmc
icebp
lock
sti
div
clc
cmc
cmc
std
cli
cli
std
std
std
cld
cld
stc
div
push
repz
clc
repz
cmc
out
out
jg
jnp
add
add
add
add
xor
das
and
in
sti
cld
stc
stc
std
cli
cli
cld
sti
std
cld
cld
stc
stc
cli
div
push
jmp
cld
jmp
jge
into
add
add
add
add
and
and
jmp
out
std
cli
cli
cli
cli
std
cld
std
std
std
std
cld
stc
stc
cli
clc
idiv
icebp
in
in
sti
ljmp
mov
add
add
add
add
adc
cmovl
aad
jmp
out
std
cli
cli
cld
sti
std
std
std
std
cld
cld
cli
stc
cld
stc
stc
out
jmp
cli
jmp
dec
dec
mov
add
add
add
add
ret
stc
jmp
in
cli
div
std
std
std
std
std
std
std
std
cli
cli
std
cli
cli
jmp
fstp
jmp
and
insb
add
add
add
add
add
add
add
add
jne
jo
jmp
out
in
sti
std
std
std
std
std
std
std
std
cld
sti
sti
sti
div
out
loope
leave
ret
add
add
add
add
add
add
add
add
add
add
sbb
sbb
jmp
cli
cld
cld
cld
std
std
std
std
std
std
cld
std
std
in
call
loop
fs
pusha
mov
add
add
add
add
add
add
jmp
in
call
cli
cli
std
out
jmp
sti
in
fdivrp
les
pop
xor
add
add
add
add
add
add
add
and
loop
jmp
out
out
push
hlt
repz
icebp
icebp
in
out
jmp
loopne
dec
mov
add
add
add
add
add
add
add
add
add
add
mov
mov
dec
enter
mov
nop
int3
and
pop
dec
add
add
add
add
add
add
sbb
sbb
bound
mov
jno
cmp
data16
add
incl
cld
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
incl
incl
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
mov
add
add
or
add
mov
add
clc
clc
incl
add
add
add
xchg
popl
add
add
add
add
add
addb
add
add
add
addb
push
add
test
add
add
add
pop
jo
or
clc
add
or
add
add
add
or
jo
pushl
pop
add
add
add
add
ja
push
pop
ja
add
add
add
ja
jg
pushl
jo
add
add
add
clc
mov
add
incl
add
mov
clc
addb
add
add
mov
clc
addb
add
add
mov
clc
addb
add
add
js
clc
addb
add
add
js
clc
jo
add
add
add
decl
add
add
decl
add
add
mov
decl
add
add
mov
clc
addb
add
add
add
js
decl
add
add
add
mov
clc
mov
add
add
pop
mov
add
add
add
add
add
add
cld
aas
push
pop
jmp
ud0
loopne
inc
pop
incl
add
incl
add
incl
add
incb
add
incb
add
cld
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
incb
add
incl
add
incl
add
incl
pop
jmp
ud0
cld
jg
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
addb
addb
add
rol
rcr
add
lret
add
add
or
pop
add
or
add
adc
add
sbb
add
and
add
sub
add
das
add
xor
add
xor
add
cmp
add
cmp
add
inc
add
inc
add
dec
add
dec
add
push
add
push
add
push
add
add
pop
add
add
add
add
imul
js
jae
jl
jns
test
addl
lea
mov
xchg
lea
lcall
add
mov
mov
add
stos
test
add
mov
add
mov
mov
add
sarl
into
enter
leave
leave
add
lret
aad
iret
add
rcl
add
rcl
add
fcom
add
fcomp
add
add
loopne
add
loopne
add
in
add
call
call
add
lock
add
icebp
lock
repz
clc
testl
loopne
fiaddl
in
fiadds
out
loopne
call
call
call
add
ljmp
repz
lock
lock
repnz
clc
testb
idiv
add
clc
clc
add
repnz
clc
testb
idiv
add
clc
clc
add
loope
add
loop
add
call
call
add
ljmp
cmc
icebp
icebp
add
repnz
clc
testb
idiv
add
clc
clc
add
cltd
pop
add
add
add
add
cltd
pop
add
cmp
add
adc
hlt
pop
or
in
or
jo
adc
add
add
lods
xchg
dec
add
adc
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
push
or
add
adc
pop
add
sbb
add
push
push
add
pop
pop
add
pop
push
add
and
add
and
add
and
es
daa
add
cs
das
xor
inc
aas
aas
add
inc
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
add
add
jno
ja
jne
jp
js
jge
js
jge
jnp
cmpb
mov
mov
xchg
xchg
xchg
add
xchg
xchg
add
movsb
add
lods
add
mov
roll
les
ror
lret
add
int3
lret
add
into
int
xlat
rcl
add
aad
flds
flds
fiaddl
loopne
fildl
loope
fiadds
jecxz
filds
out
filds
ljmp
add
call
jmp
out
in
in
add
lock
add
lock
icebp
icebp
add
icebp
icebp
add
repz
repnz
repz
repz
hlt
repz
hlt
hlt
add
cmc
cmc
add
div
add
div
add
div
add
div
add
div
add
clc
testl
sti
clc
clc
add
stc
stc
add
stc
clc
add
cli
cli
add
cli
cli
add
sti
cli
add
cld
sti
add
cld
sti
add
std
std
add
std
add
incb
incb
incb
incb
incl
incl
loop
faddl
jecxz
fldl
in
faddl
in
fldl
in
fiadds
in
filds
in
filds
out
filds
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
dec
cwtl
test
add
pop
sub
or
add
adc
inc
inc
inc
cmp
add
add
ds
inc
inc
inc
inc
inc
adc
add
add
dec
inc
inc
aas
adc
xor
inc
dec
dec
dec
dec
dec
dec
inc
cmp
add
add
inc
dec
dec
inc
inc
dec
dec
inc
dec
dec
inc
sub
add
inc
inc
sub
or
push
add
es
dec
adc
xor
adc
add
inc
push
inc
or
add
xor
add
or
or
adc
dec
push
sbb
or
add
adc
add
add
push
movups
or
cmp
das
add
add
adc
sbb
sbb
push
push
push
and
sbb
adc
add
adc
push
dec
push
push
push
push
push
dec
sbb
push
and
and
dec
push
dec
push
push
push
push
push
dec
es
sbb
sub
xor
cs
push
dec
dec
push
push
push
push
push
dec
dec
push
inc
das
sub
add
cmp
push
dec
dec
push
push
push
push
push
push
push
dec
dec
push
push
dec
add
add
add
push
push
push
push
push
push
push
push
push
push
dec
inc
aas
add
inc
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
inc
add
add
add
push
push
push
push
push
push
push
push
push
push
push
dec
inc
cmp
sub
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
inc
xor
and
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
inc
daa
add
inc
inc
dec
push
push
push
push
push
push
push
push
push
push
push
dec
inc
inc
sbb
add
dec
push
push
push
push
push
push
push
push
push
push
push
dec
inc
inc
add
add
inc
inc
push
push
push
push
push
push
push
push
push
push
push
dec
inc
xor
add
add
push
push
push
push
push
push
push
push
push
dec
inc
inc
adc
add
add
push
push
push
push
push
push
dec
inc
inc
sub
add
inc
inc
dec
dec
push
push
push
dec
dec
inc
inc
aaa
sub
inc
inc
inc
dec
inc
inc
inc
inc
xor
add
cmp
ds
sbb
add
and
cld
aas
push
pop
jmp
ud0
loopne
inc
pop
incl
add
incl
add
incl
add
incb
add
incb
add
cld
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
incb
add
incl
add
incl
add
incl
pop
jmp
ud0
cld
jg
sub
add
and
add
inc
add
add
add
add
add
add
or
add
add
pop
lea
adc
sub
sub
rcr
rcl
sarb
cmp
add
add
das
cs
aam
fstp
xlat
jecxz
fstp
fcomp
fcmovbe
aam
lret
lret
cmp
add
sarl
fsubr
out
in
out
in
out
in
rcl
into
leave
sub
sub
add
scas
test
fcom
shl
hlt
out
out
repz
in
lock
out
out
loopne
ror
mov
add
outsl
insb
imul
out
icebp
jmp
xlat
rcl
in
fdivp
out
out
out
loopne
rcl
out
jmp
loope
fiaddl
add
add
aad
iret
mov
or
or
pushl
pop
sub
sub
jnp
leave
leave
out
loopne
xor
add
add
mov
sub
add
add
add
add
add
rcl
cld
cld
loope
fimuls
add
add
and
and
mov
add
mov
or
add
or
or
add
ds
sti
sti
hlt
out
out
push
push
push
add
add
pop
pop
add
add
add
cmpsl
mov
add
inc
and
and
sub
xor
xor
adc
cmpsl
movsl
movsb
push
icebp
lock
std
std
mov
adc
and
xor
sahf
cltd
cwtl
add
xor
push
push
push
push
xor
xor
push
cld
cli
cli
stc
cmc
cmc
cld
stc
idiv
cmc
hlt
addr16
sub
push
push
xor
das
mov
add
add
jns,pt
je
push
push
insb
insb
insb
inc
inc
inc
inc
inc
inc
in
jecxz
clc
clc
stc
div
sti
stc
clc
cli
div
sti
clc
div
out
out
push
push
push
cmp
cmp
push
pop
pop
pop
insb
push
add
add
jae
push
push
inc
inc
inc
inc
inc
inc
jno
outsl
jmp
div
repz
clc
idiv
stc
clc
cld
stc
clc
stc
cmc
hlt
cli
div
lock
in
jl
jns
inc
inc
dec
dec
dec
dec
inc
inc
mov
mov
cwtl
cltd
xchg
xchg
ror
int
sti
sti
div
repnz
lock
stc
hlt
cmc
sti
clc
clc
std
stc
stc
cld
clc
clc
sti
div
div
icebp
hlt
lock
cli
stc
xlat
rcl
popf
cltd
cltd
xchg
xchg
xchg
mov
add
in
cmc
hlt
cli
cmc
cmc
repz
out
div
hlt
sti
clc
idiv
cli
cli
std
std
std
std
std
std
std
std
cld
sti
cld
clc
clc
div
repz
out
in
clc
repz
hlt
hlt
in
out
lret
add
add
mov
jmp
cmc
cld
stc
stc
cld
cli
stc
sti
sti
std
std
std
sti
sti
cld
stc
clc
stc
div
stc
hlt
repz
out
fst
into
enter
add
fldln2
jmp
sti
stc
stc
std
cli
stc
sti
sti
std
std
std
std
std
std
sti
sti
sti
clc
clc
stc
div
cli
cmc
hlt
out
jmp
fxch
mov
add
scas
stos
test
call
std
stc
stc
cli
cli
cld
cld
std
cld
cld
sti
stc
clc
stc
div
cli
div
out
ljmp
mov
add
add
fldl2t
in
cld
clc
clc
cli
cli
sti
sti
std
std
sti
sti
cld
stc
stc
cli
clc
clc
cli
div
in
call
lods
test
add
add
fs
ftst
sti
div
sti
sti
std
cld
cld
sti
cld
cld
cli
cli
sti
clc
clc
cli
div
out
loop
fcmovu
test
xor
xor
fcom
fincstp
repz
std
cld
std
std
std
std
std
cld
cld
std
cli
stc
cld
cli
stc
div
cmc
fcompp
fchs
dec
dec
inc
add
ror
enter
out
ljmp
std
cld
cld
std
cli
cli
sti
sti
repnz
out
fcmovbe
aam
rcl
add
xlat
in
fdivrp
div
std
std
std
std
std
cld
sti
sti
sti
sti
clc
clc
in
loopne
mov
add
fcmovnbe
rcr
rcl
out
jmp
std
std
cld
cld
std
sti
sti
out
jmp
fcom
rcr
fcom
xor
xor
add
add
loopne
lock
jmp
cli
cli
cld
cld
cld
lock
in
fst
xchg
mov
add
xlat
ljmp
clc
clc
cli
cli
cli
cli
stc
stc
cmc
repz
aad
mov
xchg
lea
loopne
in
aad
ror
mov
push
dec
dec
popf
xchg
xchg
mov
ror
ret
enter
mov
pop
pop
push
add
fs
pusha
js
jae
data16
add
add
cld
aas
push
pop
jmp
ud0
loopne
inc
pop
incl
add
incl
add
incl
add
incb
add
incb
add
cld
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
incb
add
incl
add
incl
add
incl
pop
jmp
ud0
cld
jg
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
inc
add
add
add
xor
add
sub
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
or
pop
mov
push
lds
add
popa
add
add
add
pusha
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
sub
pushf
mov
stos
neg
rcl
fcom
sar
sar
mov
cmp
test
add
add
add
pop
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
das
cs
enter
fcmovbe
sar
fstp
xlat
cld
jecxz
fdivr
fcmovbe
aam
ror
lret
ds
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
adc
add
pop
add
add
sbb
sbb
sarl
loope
fdivr
jmp
out
in
out
in
out
jmp
fcom
sar
into
leave
ljmp
sub
test
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
test
icebp
fcom
sar
loope
fdivr
hlt
out
out
push
out
in
lock
div
out
jmp
loope
std
aad
iret
cld
mov
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
outsl
insb
imul
fcmovnu
in
out
cli
icebp
jmp
call
rcl
in
fdivrp
repz
out
jmp
loope
call
rcl
out
jmp
jmp
incl
add
or
add
add
add
add
add
add
add
add
pop
push
push
call
ror
cli
mov
xor
or
or
mov
pushl
pop
pop
ljmp
sub
jle
jnp
iret
leave
leave
stc
out
loopne
xor
xor
add
add
add
push
cmpsl
mov
mov
sub
add
incl
add
incb
add
call
rcl
cld
cld
jmp
decl
add
incl
add
jmp
and
cld
test
mov
icebp
add
add
add
add
add
add
sub
jno
mov
decl
or
cli
add
add
or
or
add
add
aas
ds
cld
sti
sti
push
out
out
call
push
incl
add
decl
pop
pop
incb
add
incl
add
cli
cmpsl
mov
aas
lea
add
add
add
add
add
add
inc
inc
inc
std
and
and
sub
sub
xor
xor
adc
adc
cmpsl
movsl
movsb
push
icebp
lock
std
std
mov
adc
ljmp
and
sbb
std
sahf
cltd
cwtl
ljmp
add
add
add
adc
cmovb
xor
std
push
push
push
push
push
push
xor
xor
push
push
push
cld
cli
cli
stc
cmc
cmc
cld
stc
idiv
stc
cmc
hlt
jmp
ljmpw
push
push
push
push
xor
das
cli
mov
sbb
add
add
add
add
add
add
add
add
mov
je
push
push
push
cli
insb
insb
insb
incl
inc
incl
inc
jmp
jecxz
sti
clc
clc
stc
div
sti
stc
clc
cli
div
sti
clc
idiv
lock
out
call
push
cmp
cmp
push
imul
insb
push
push
test
add
add
add
add
add
add
jae
push
push
push
incb
sti
inc
inc
inc
jno
outsl
jmp
div
push
repz
sti
clc
idiv
cld
stc
clc
cld
stc
clc
stc
cmc
hlt
cli
div
push
in
in
jl
jns
inc
inc
inc
decb
dec
cld
dec
inc
inc
decb
add
add
add
or
cwtl
cwtl
lcall
int
sti
sti
push
repnz
lock
stc
hlt
cmc
sti
clc
clc
std
stc
stc
cld
clc
clc
sti
div
push
icebp
icebp
push
lock
cli
stc
call
rcl
lcall
xchg
xchg
mov
add
sbb
add
add
add
add
add
pop
mov
mov
in
out
cli
cmc
hlt
std
cli
cmc
cmc
push
out
out
push
hlt
hlt
sti
clc
idiv
std
cli
cli
std
std
std
std
std
std
std
std
cld
sti
cld
clc
clc
push
hlt
repz
out
in
clc
repz
cli
hlt
hlt
in
out
dec
push
push
xor
add
add
add
add
add
add
add
sarl
jmp
cmc
cmc
cld
stc
stc
cld
cli
stc
sti
sti
std
std
std
sti
sti
cld
stc
clc
stc
div
stc
hlt
repz
in
out
std
fst
std
into
enter
or
cmp
add
add
add
add
add
add
add
add
add
and
loope
fcos
in
jmp
idiv
sti
stc
stc
std
cli
stc
sti
sti
std
std
std
std
std
std
sti
sti
sti
clc
clc
stc
div
cli
cmc
hlt
out
jmp
std
fsin
int
or
add
add
add
add
add
add
scas
stos
test
in
call
clc
std
stc
stc
cli
cli
cld
cld
std
cld
cld
sti
stc
clc
stc
div
cli
div
out
ljmp
lds
add
add
add
add
add
add
add
loope
fcos
jmp
clc
clc
cli
cli
sti
sti
std
std
sti
sti
cld
stc
stc
cli
clc
clc
cli
div
in
call
fsin
lods
test
out
add
add
add
add
add
add
fs
in
sti
div
sti
sti
std
cld
cld
sti
cld
cld
cli
cli
sti
clc
clc
cli
div
out
loop
loopne
fsin
test
add
add
add
add
add
xor
xor
fsqrt
div
repz
std
cld
std
std
std
std
std
cld
cld
std
cli
stc
cld
cli
stc
push
cmc
cmc
fcompp
fsqrt
loopne
fdivr
dec
dec
inc
mov
add
add
add
add
add
add
or
or
fstp
xlat
std
out
ljmp
std
cld
cld
std
cli
cli
sti
sti
repnz
out
fcmovbe
aam
sar
adc
adc
add
add
add
add
add
add
addl
in
fdivrp
clc
div
std
std
std
std
std
cld
sti
sti
sti
sti
clc
clc
jmp
loopne
cld
fst
std
mov
add
push
add
add
add
add
and
push
addr16
sar
fcom
sar
out
jmp
sti
std
std
cld
cld
std
sti
sti
out
jmp
fcom
sar
pushl
xor
test
add
add
add
add
add
add
add
add
loopne
fcos
cli
lock
jmp
sti
cli
cli
cld
cld
cld
lock
in
cli
fst
call
add
sldt
add
add
add
add
mov
xlat
cli
ljmp
stc
clc
clc
cli
cli
cli
cli
stc
stc
cmc
repz
ljmp
cli
fcmovnbe
aad
mov
scas
clc
push
or
add
add
add
add
add
add
add
or
or
xchg
lea
fst
jmp
fcmovu
jmp
jmp
loopne
jmp
fcos
aad
xlat
ror
jmp
adc
add
add
add
add
add
add
add
add
add
push
dec
dec
test
mov
sar
ret
sarb
ficomps
push
xchg
add
add
add
add
add
add
add
add
add
add
add
add
fs
pusha
mov
imul
outsl
add
add
add
add
inc
add
incb
add
add
aas
clc
add
aas
cld
add
aas
incb
add
addb
incl
add
incl
add
incb
add
incb
add
cld
add
jg
add
jg
add
jg
add
aas
clc
add
aas
clc
add
aas
clc
add
aas
clc
add
aas
cld
add
aas
cld
add
jg
add
jg
add
jg
add
incb
add
incl
add
incl
add
incl
pop
clc
pop
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
js
xchg
add
add
mov
add
jo
or
xchg
js
decl
add
mov
mov
add
add
mov
mov
add
add
clc
mov
pop
mov
xchg
push
ja
clc
addb
add
add
jo
pop
push
add
add
add
push
add
pop
mov
add
add
clc
add
add
addb
add
addb
add
incl
add
pop
xchg
add
or
add
add
add
js
add
js
add
pop
push
pop
add
add
add
clc
pop
ja
or
add
incl
add
xorb
clc
add
addb
add
add
add
add
jo
pop
incl
or
incl
add
add
add
add
clc
xchg
or
decl
add
add
add
or
clc
mov
or
clc
mov
or
clc
xchg
or
clc
xchg
or
clc
xchg
or
clc
xchg
pop
mov
decl
add
add
add
pop
mov
decl
add
add
add
add
decl
add
add
add
add
clc
mov
add
clc
mov
add
or
clc
mov
add
or
decl
add
clc
mov
js
decl
add
or
clc
mov
add
mov
clc
mov
add
add
mov
mov
js
mov
add
mov
add
ja
add
add
incl
add
incl
add
incl
add
incl
add
cld
jg
incl
add
push
pop
incl
add
jmp
ud0
add
inc
pop
incl
add
incl
add
incl
add
incl
add
incb
add
incl
add
cld
add
incl
add
cld
add
jg
add
clc
add
jg
add
clc
add
aas
incl
add
lock
pop
incl
add
lock
pop
incl
add
loopne
add
incl
add
loopne
add
incl
add
rolb
ud0
add
rolb
pop
incl
add
rolb
pop
incl
add
addb
pop
incl
add
addb
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
add
pop
incl
add
rolb
pop
incl
add
rolb
ud0
add
loopne
add
incl
add
loopne
add
incl
add
lock
pop
incl
add
lock
aas
incl
add
clc
add
aas
incl
add
cld
add
jg
add
incb
add
incl
add
incl
add
incl
add
inc
ud0
add
cld
jg
incl
add
add
add
add
add
add
add
or
add
add
add
addb
addb
add
add
addb
add
rol
rcr
add
lret
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
add
xor
add
ss
cmp
add
add
aas
add
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
popa
add
arpl
imul
push
push
add
jb
jp
je
jl
ja
jge
jns
cmpb
test
addl
mov
add
xchg
nop
add
cltd
cwtl
add
mov
mov
add
mov
add
mov
mov
add
sarb
into
enter
leave
enter
enter
iret
add
rcl
add
rcl
add
fcom
add
xlat
fadds
fcmovnu
flds
loopne
flds
in
loopne
in
loopne
call
call
call
add
lock
add
lock
repnz
clc
testb
idiv
add
clc
clc
add
add
fcmovu
add
loopne
add
loope
add
loop
add
call
call
add
ljmp
repz
lock
lock
repnz
clc
testb
idiv
add
clc
clc
add
repnz
clc
testb
idiv
add
clc
clc
add
loope
add
loop
add
call
call
add
ljmp
cmc
icebp
icebp
add
repnz
clc
testb
idiv
add
clc
clc
add
cltd
pop
add
add
add
add
cltd
pop
add
cmp
add
adc
hlt
pop
or
in
or
jo
adc
add
add
lods
xchg
dec
add
adc
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
push
or
add
adc
pop
add
sbb
add
push
push
add
pop
pop
add
pop
push
add
and
add
and
add
and
es
daa
add
cs
das
xor
inc
aas
aas
add
inc
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
add
add
jno
ja
jne
jp
js
jge
js
jge
jnp
cmpb
mov
mov
xchg
xchg
xchg
add
xchg
xchg
add
movsb
add
lods
add
mov
roll
les
ror
lret
add
int3
lret
add
into
int
xlat
rcl
add
aad
flds
flds
fiaddl
loopne
fildl
loope
fiadds
jecxz
filds
out
filds
ljmp
add
call
jmp
out
in
in
add
lock
add
lock
icebp
icebp
add
icebp
icebp
add
repz
repnz
repz
repz
hlt
repz
hlt
hlt
add
cmc
cmc
add
div
add
div
add
div
add
div
add
div
add
clc
testl
sti
clc
clc
add
stc
stc
add
stc
clc
add
cli
cli
add
cli
cli
add
sti
cli
add
cld
sti
add
cld
sti
add
std
std
add
std
add
incb
incb
incb
incb
incl
incl
loop
faddl
jecxz
fldl
in
faddl
in
fldl
in
fiadds
in
filds
in
filds
out
filds
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
dec
cwtl
test
add
adc
add
add
xor
cmp
sub
daa
cmp
cmp
cmp
add
cs
inc
inc
cmp
das
ds
inc
inc
inc
cmp
sbb
add
sub
ds
inc
dec
dec
dec
dec
dec
inc
inc
cmp
sbb
add
add
ds
dec
dec
dec
dec
dec
inc
inc
cmp
add
add
cmp
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
cmp
add
aaa
cmp
dec
push
dec
dec
dec
dec
dec
dec
dec
push
dec
inc
cmp
add
es
inc
xor
adc
push
dec
dec
sbb
cmp
cmp
ds
inc
sub
add
add
push
dec
dec
sldt
add
ss
xor
add
inc
cmp
add
add
add
push
dec
push
and
or
add
and
inc
push
add
add
add
add
dec
dec
dec
push
add
add
add
adc
add
add
das
xor
add
add
push
dec
dec
dec
dec
sldt
add
add
push
inc
push
add
add
or
push
pi2fw
inc
push
dec
dec
dec
push
sub
femms
push
or
add
and
or
push
or
push
dec
dec
dec
dec
dec
dec
movhps
adc
adc
cmp
add
sbb
sbb
sbb
adc
dec
dec
push
dec
dec
push
cmp
sbb
sbb
sbb
sub
add
cmp
sbb
push
and
push
inc
push
dec
dec
push
push
push
dec
dec
push
cs
and
adc
sbb
adc
and
push
adc
dec
dec
dec
push
push
dec
dec
dec
push
xor
adc
add
sub
sbb
dec
dec
dec
dec
dec
dec
push
push
push
push
dec
dec
dec
push
sbb
adc
push
cmp
add
add
xor
and
dec
push
dec
dec
dec
dec
dec
dec
push
push
push
dec
dec
dec
dec
dec
dec
push
sub
sbb
add
aas
dec
dec
push
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
push
dec
inc
ds
add
cmp
inc
inc
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
inc
inc
sub
add
cmp
inc
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
inc
ds
add
ds
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
inc
ds
add
ds
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
inc
ds
add
cmp
inc
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
inc
inc
ds
add
add
ds
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
inc
inc
and
add
xor
inc
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
inc
ds
add
es
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
inc
ds
add
sbb
inc
inc
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
inc
cmp
ds
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
inc
xor
ss
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
inc
inc
and
and
inc
inc
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
inc
ds
add
ds
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
inc
inc
xor
add
cs
inc
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
inc
ds
cmp
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
inc
inc
cmp
add
ds
dec
dec
push
push
push
push
push
push
push
push
push
push
push
dec
inc
inc
cmp
add
add
cmp
dec
push
push
push
push
push
push
push
dec
dec
inc
inc
cmp
pop
xor
ds
inc
inc
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
cmp
add
cs
inc
inc
inc
inc
inc
inc
inc
inc
inc
ds
sbb
ds
aas
inc
aas
aas
ds
sbb
xor
ss
and
add
sbb
add
add
incl
add
incl
add
incl
add
incl
add
cld
jg
incl
add
push
pop
incl
add
jmp
ud0
add
inc
pop
incl
add
incl
add
incl
add
incl
add
incb
add
incl
add
cld
add
incl
add
cld
add
jg
add
clc
add
jg
add
clc
add
aas
incl
add
lock
pop
incl
add
lock
pop
incl
add
loopne
add
incl
add
loopne
add
incl
add
rolb
ud0
add
rolb
pop
incl
add
rolb
pop
incl
add
addb
pop
incl
add
addb
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
add
pop
incl
add
rolb
pop
incl
add
rolb
ud0
add
loopne
add
incl
add
loopne
add
incl
add
lock
pop
incl
add
lock
aas
incl
add
clc
add
aas
incl
add
cld
add
jg
add
incb
add
incl
add
incl
add
incl
add
inc
ud0
add
cld
jg
incl
add
add
add
add
add
add
add
sbb
add
add
add
xor
xor
cmp
and
add
inc
movsb
sahf
pushf
les
mov
andl
add
into
enter
into
enter
ror
enter
push
dec
dec
add
pushf
xchg
xchg
ror
lret
rcr
fcom
fcomp
ror
int
mov
enter
pop
lahf
lcall
leave
fcompp
fsub
out
loope
jecxz
out
loopne
fcmovbe
aam
mov
int3
lret
bound
add
mov
ror
lret
loopne
loope
ljmp
out
jmp
out
jecxz
in
lret
mov
into
int3
dec
dec
dec
push
gs
iret
into
into
enter
loope
jmp
in
jmp
out
ljmp
out
in
in
aad
int3
mov
xor
int
mov
fstp
out
loop
out
out
call
lock
out
jmp
in
call
out
loopne
ror
enter
stos
add
mov
xlat
rcl
out
loope
repz
stc
stc
cld
div
clc
repz
icebp
in
in
icebp
in
in
sti
div
std
clc
idiv
stc
clc
hlt
out
out
loop
fcmovne
lret
lret
int
js
jge
js
int3
lret
ror
int3
hlt
out
out
out
loop
movsb
movsb
imul
aas
aas
nop
mov
out
in
in
out
push
push
push
dec
dec
dec
jl
jns
mov
in
out
lret
aad
int
add
add
leave
enter
out
loopne
mov
add
add
add
add
push
in
in
clc
cmc
hlt
sub
sub
add
add
add
add
inc
inc
inc
mov
in
lret
movsl
movsb
add
cwtl
xchg
xchg
aad
mov
add
add
add
add
add
add
add
std
cli
sti
out
in
in
pushl
jb
add
or
or
add
add
add
add
imul
int3
int3
roll
inc
add
add
mov
adc
add
add
add
add
add
add
sub
cmc
repnz
repnz
lock
mov
add
add
add
add
add
add
add
mov
add
sahf
cltd
cwtl
mov
mov
adc
add
add
push
push
add
add
add
or
or
add
jg
jle
push
lock
hlt
hlt
cli
hlt
hlt
hlt
repnz
sub
add
add
add
add
add
add
push
push
add
add
aam
inc
inc
add
rcl
aas
cmp
pop
push
push
daa
daa
es
sub
sub
daa
daa
daa
adc
fdivr
stc
stc
div
repz
div
div
icebp
call
add
and
and
and
sbb
sbb
sbb
add
mov
scas
add
jbe
jno
xchg
xchg
sbb
sbb
dec
aas
aas
aas
ds
cmp
inc
push
push
push
jle
jl
push
icebp
icebp
cli
div
sti
clc
cmc
stc
div
stc
cmc
cmc
repnz
sub
inc
cmp
cmp
aas
aas
inc
inc
inc
cmp
cmp
sub
int
lds
add
mov
cmp
cmp
push
dec
dec
dec
dec
dec
dec
pop
pop
pop
sub
sub
cmp
hlt
repz
repnz
cmc
cmc
cli
clc
idiv
clc
stc
sti
clc
div
repz
std
std
mov
push
dec
dec
dec
push
push
push
dec
dec
dec
dec
dec
dec
pop
push
push
and
nop
je
jo
add
mov
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
insb
insb
imul
cmp
and
sti
clc
clc
div
icebp
cli
div
cli
idiv
cld
idiv
cld
stc
clc
cli
div
div
icebp
lcall
adc
pop
push
pop
arpl
aas
ds
pop
pop
mov
add
pop
pop
pop
lods
cmpsb
movsl
xor
jge
jne
bound
and
and
ss
frndint
cli
stc
hlt
out
out
stc
cmc
cmc
cli
div
sti
clc
idiv
clc
clc
sti
clc
stc
sti
div
stc
cmc
hlt
repz
out
jmp
sbb
aas
aas
insl
insl
outsb
jl
jnp
addr16
inc
aas
ror
lret
add
cwtl
xchg
xchg
lea
dec
dec
dec
sub
sub
jle
icebp
icebp
cli
clc
div
out
out
clc
hlt
repz
hlt
hlt
sti
div
cld
stc
clc
cld
clc
stc
sti
stc
stc
sti
clc
clc
cli
div
clc
repz
icebp
out
in
ror
into
push
push
push
and
and
xor
dec
dec
dec
es
leave
ret
ss
add
add
mov
outsl
outsb
movsl
mov
push
lock
out
in
div
repnz
repz
cmc
cmc
sti
div
sti
clc
clc
std
stc
stc
cld
clc
clc
cli
clc
idiv
div
div
repz
repnz
out
in
jmp
cmc
hlt
cli
stc
ror
lret
mov
popa
pop
pop
ror
enter
add
mov
lock
clc
hlt
out
out
out
ljmp
lock
repnz
hlt
repz
div
cld
stc
stc
cld
cli
cli
sti
sti
std
cli
cli
sti
stc
stc
cli
div
clc
hlt
hlt
cmc
repnz
hlt
lock
lock
out
clc
clc
clc
repnz
iret
iret
jp
jne
lret
leave
loopne
jecxz
in
call
div
repz
cmc
cmc
cli
clc
idiv
stc
stc
cli
sti
std
cld
std
cld
sti
sti
cld
stc
clc
stc
div
div
repnz
icebp
lock
in
in
jmp
in
fcom
rcl
into
int
mov
add
mov
jmp
out
repz
div
cld
clc
clc
cld
stc
stc
cld
cli
cli
sti
cli
cld
cld
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
cli
cli
sti
stc
clc
cli
div
stc
cmc
cmc
cli
cmc
hlt
hlt
lock
aam
int
xchg
xchg
add
mov
lret
lret
fucomp
out
div
hlt
cli
div
sti
clc
clc
std
stc
stc
cld
cli
stc
std
cli
cli
cld
cld
std
std
std
std
sti
sti
cld
stc
stc
sti
clc
idiv
div
clc
div
stc
repz
lock
aam
int
xchg
xchg
add
lret
lret
fucomp
out
clc
hlt
hlt
sti
clc
clc
sti
stc
stc
cld
stc
stc
sti
cli
std
sti
sti
cld
std
std
std
std
cld
cld
cld
cli
stc
sti
clc
clc
stc
div
stc
div
stc
hlt
hlt
cmc
icebp
icebp
call
aad
into
int
mov
add
ret
lret
lret
fucomi
out
clc
cmc
cmc
cld
clc
clc
std
stc
stc
cli
cli
cli
sti
sti
sti
std
std
cld
sti
std
cli
cli
cld
stc
stc
cli
clc
clc
cli
div
stc
cmc
cmc
hlt
icebp
icebp
out
loop
aam
iret
into
test
add
int3
loope
out
clc
cmc
cmc
cld
stc
stc
cli
cli
sti
sti
std
sti
cld
cld
cld
std
std
std
cld
cld
std
cli
cli
sti
clc
clc
sti
clc
idiv
div
cli
div
hlt
icebp
icebp
out
loope
rcl
aad
into
outsb
push
add
fsubr
in
div
repz
cli
cli
std
cli
cli
sti
sti
cld
sti
std
std
cld
cld
std
sti
cli
cld
stc
stc
sti
clc
clc
cli
div
cli
div
repnz
out
in
loopne
iret
iret
aad
int
dec
dec
add
jp
int
fcmovnbe
aad
loop
cmc
icebp
lock
cli
cli
sti
cli
cld
cld
cld
cld
std
std
std
cld
sti
std
cli
cli
cld
stc
cli
sti
clc
stc
sti
clc
clc
cli
clc
clc
lock
jmp
ror
int3
ror
lret
dec
dec
dec
aam
int3
rcl
out
loopne
in
in
std
cli
cli
sti
sti
cld
cld
std
std
std
std
std
std
cld
sti
sti
sti
cld
cli
stc
cld
stc
clc
sti
clc
clc
cli
div
in
out
loopne
fcmovbe
lret
lret
lret
add
ror
enter
jecxz
fucomp
call
std
cld
sti
std
std
std
cld
cld
cli
cli
std
sti
cli
cld
stc
stc
sti
stc
stc
div
hlt
call
fcom
int
lods
test
add
add
lret
fcompp
fldl2t
jecxz
div
repz
cld
cld
std
std
std
std
cld
cld
std
sti
sti
cli
cli
std
stc
stc
cld
cli
cli
icebp
out
out
in
rcl
aam
int3
imul
add
jb
insl
ror
int3
rcl
out
loopne
jmp
std
cld
cld
std
std
std
std
std
cld
cld
cld
sti
sti
sti
std
cli
cli
sti
clc
clc
jmp
in
ror
lret
leave
add
lret
leave
ror
enter
ljmp
std
std
std
std
cld
cld
cld
sti
std
cli
cli
sti
sti
repz
out
in
loopne
ror
leave
scas
test
add
leave
shl
loope
out
jmp
std
std
std
std
std
std
cld
std
sti
sti
cld
sti
stc
cmc
imul
jecxz
loope
lret
lret
aad
int
inc
inc
ror
enter
loopne
loop
icebp
in
in
cld
cld
cld
std
std
std
std
std
std
std
cld
std
cld
sti
std
sti
sti
cli
clc
clc
jmp
out
fcom
ror
enter
cmpsb
add
add
je
into
int3
ror
lret
loop
fsubr
jecxz
icebp
in
in
sti
sti
sti
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
stc
clc
clc
in
out
in
xlat
xlat
lret
ror
lret
add
enter
loope
fsub
loop
out
jmp
sti
sti
sti
std
std
std
cld
std
std
std
std
std
std
std
std
cld
std
std
sti
sti
sti
hlt
icebp
icebp
jmp
fstp
xlat
int3
mov
int
push
add
mov
test
lret
lret
xlat
jecxz
fsubp
loope
in
call
hlt
repnz
hlt
hlt
hlt
repnz
in
ljmp
fcmovu
fcom
ror
mov
jnp
add
pushf
xchg
xchg
ror
leave
ror
lret
iret
fcmovnbe
aad
loopne
loop
fndisi(8087
fcmovnu
fcomp
xlat
rcl
ror
lret
ror
leave
lret
insb
push
add
pop
mov
stos
ror
enter
iret
into
rcl
xlat
ror
xlat
rcl
ror
aad
iret
ror
int
int
lret
lahf
cltd
cwtl
push
push
push
mov
mov
scas
mov
mov
mov
mov
stos
mov
jbe
add
push
pop
push
push
dec
dec
dec
add
incl
add
incl
add
incl
add
incl
add
cld
jg
incl
add
push
pop
incl
add
jmp
ud0
add
inc
pop
incl
add
incl
add
incl
add
incl
add
incb
add
incl
add
cld
add
incl
add
cld
add
jg
add
clc
add
jg
add
clc
add
aas
incl
add
lock
pop
incl
add
lock
pop
incl
add
loopne
add
incl
add
loopne
add
incl
add
rolb
ud0
add
rolb
pop
incl
add
rolb
pop
incl
add
addb
pop
incl
add
addb
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
add
pop
incl
add
rolb
pop
incl
add
rolb
ud0
add
loopne
add
incl
add
loopne
add
incl
add
lock
pop
incl
add
lock
aas
incl
add
clc
add
aas
incl
add
cld
add
jg
add
incb
add
incl
add
incl
add
incl
add
inc
ud0
add
cld
jg
incl
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
daa
add
add
add
add
add
cmp
add
add
add
add
inc
add
add
add
inc
add
add
add
aas
add
add
add
dec
add
add
add
inc
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
pop
add
add
add
pop
add
xor
xchg
inc
cmp
and
add
add
add
arpl
add
pop
add
add
add
push
add
add
add
dec
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
push
add
add
add
add
push
add
push
dec
inc
inc
mov
sahf
pushf
lock
mov
decl
and
xchg
add
add
add
outsl
add
add
add
data16
add
add
pop
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
or
pop
jnp
jge
fcmovne
mov
dec
mov
cld
int3
mov
ror
enter
mov
mov
add
add
add
insb
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
or
ja
xchg
xchg
jmp
lret
lret
mov
xlat
rcl
fstp
fdivr
ror
int
int3
mov
iret
enter
pop
pop
movb
add
add
popa
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sub
add
add
add
aas
pop
pop
pop
pusha
lahf
lcall
iret
lret
fcompp
fdivr
in
fdivrp
out
loope
call
loopne
loop
fdivr
fcmovbe
aam
lret
mov
ror
lret
jmp
pop
ret
add
add
dec
add
add
add
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
and
add
add
mov
int3
call
lret
lret
cld
loopne
fsin
out
loope
ljmp
in
out
jmp
out
jmp
dec
mov
aad
int3
decl
dec
test
add
and
add
xor
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
adc
add
punpckhdq
rcl
into
dec
enter
fcmovnu
jmp
loope
jmp
in
in
jmp
jmp
out
jmp
out
ljmp
fcmovnbe
aad
int3
mov
int3
es
jbe
add
or
add
sbb
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
into
int
int3
mov
jecxz
out
loop
jmp
out
out
call
ljmp
jmp
in
call
in
out
loopne
loop
fdivr
sar
into
enter
lods
stos
testb
push
cmp
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
or
int
sti
xlat
rcl
std
out
loope
stc
repz
stc
stc
cld
div
clc
repz
jmp
push
in
in
push
in
in
sti
div
std
clc
idiv
stc
clc
push
out
out
loop
iret
lret
lret
iret
int
jl
ja
add
add
add
add
add
add
add
add
add
add
jge
js
ror
lret
call
int
sti
hlt
out
out
jmp
loop
cmpsl
movsb
movsb
ljmp
push
call
stc
stc
push
out
in
in
out
call
decl
dec
jl
jns
sarl
in
out
dec
cli
aad
int
das
sub
add
add
add
add
add
add
add
es
enter
sar
out
loopne
nop
mov
add
add
add
add
add
add
test
push
in
in
clc
cmc
hlt
ljmp
sub
incl
add
incl
add
incl
add
incl
inc
mov
in
std
ror
leave
cld
stos
movsl
movsb
repz
add
add
add
add
add
add
add
add
add
xchg
xchg
out
aad
mov
aaa
aaa
incl
add
incb
add
incl
add
incl
add
add
mov
out
in
in
pushl
jb
add
add
or
or
add
add
add
add
add
add
imul
ror
int3
cli
sar
inc
inc
inc
sahf
add
add
add
add
add
add
add
add
sub
sub
jmp
adc
incb
add
incb
add
incl
add
incl
add
ljmp
sub
push
repnz
repz
lock
mov
add
incl
add
incl
add
incl
add
incl
add
cmp
mov
testl
add
add
add
add
add
adc
mov
adc
adc
add
add
push
push
push
incl
add
incl
add
decl
or
incl
add
jg
jle
push
lock
clc
hlt
hlt
cli
hlt
hlt
push
repnz
sub
incl
add
incl
add
incl
add
incl
add
incl
push
push
incb
add
incb
sti
aam
inc
inc
inc
cwtl
add
add
add
add
add
add
add
add
sbb
rcl
aas
cmp
sti
pop
push
push
daa
daa
es
and
sub
ljmp
sub
jmp
daa
daa
call
cld
stc
stc
push
repz
cli
div
push
icebp
icebp
call
add
das
jmp
and
jmp
and
lcall
sbb
lcall
sbb
push
add
jle
mov
scas
out
add
add
add
add
add
add
jbe
jno
pushf
xchg
xchg
sbb
sbb
dec
dec
dec
aas
aas
aas
ds
cmp
cmp
inc
inc
inc
decl
push
push
jle
jl
push
icebp
icebp
cli
div
sti
clc
cmc
stc
div
stc
cmc
cmc
push
lock
sub
incl
inc
cmp
cmp
inc
aas
aas
incl
cmp
cmp
cs
sti
int
and
insl
add
add
add
add
add
add
add
add
add
mov
push
cmp
cmp
push
push
push
decb
decl
dec
lcall
pop
ljmp
sub
cmp
cmp
hlt
repz
repnz
stc
cmc
cmc
cli
clc
idiv
cld
clc
stc
sti
clc
idiv
div
icebp
std
std
mov
femms
decl
dec
call
push
decl
dec
decl
dec
lcall
push
jmp
xchg
nop
je
jo
add
add
add
add
and
sarb
pop
pop
pop
pop
pop
pop
jmp
pusha
ljmp
cmp
cmp
es
sti
clc
clc
push
repnz
cli
div
cli
idiv
cld
idiv
cld
stc
clc
cli
div
push
icebp
icebp
lcall
adc
lcall
pop
ljmp
push
jmp
aas
ds
pop
pop
pop
mov
add
and
add
add
add
add
add
add
add
add
pop
scas
lods
cmpsb
movsl
xor
jge
pushl
jne
bound
jmp
and
aaa
ss
fcmovnu
fcos
cld
cli
stc
push
out
out
stc
cmc
cmc
cli
div
sti
clc
idiv
sti
clc
clc
sti
clc
stc
sti
div
stc
cmc
hlt
push
out
out
jmp
sbb
aas
aas
aas
ljmp
outsb
jl
jnp
push
inc
aas
sti
ror
lret
adc
push
add
add
add
add
add
add
cwtl
xchg
xchg
fimull
and
std
dec
dec
dec
sub
sub
sub
jle
push
icebp
icebp
cli
clc
idiv
repz
out
clc
hlt
repz
clc
hlt
hlt
sti
div
cld
stc
clc
cld
clc
stc
sti
stc
stc
sti
clc
clc
cli
div
clc
repz
push
out
in
call
into
into
call
push
jmp
and
pushl
xor
decl
dec
es
cli
leave
ret
cmp
mov
add
add
add
add
add
add
add
pop
mov
movsb
mov
std
jno
outsb
jmp
jecxz
push
lock
out
in
push
repnz
repz
stc
cmc
cmc
sti
div
sti
clc
clc
std
stc
stc
cld
clc
clc
cli
clc
idiv
stc
div
push
repz
repnz
out
in
jmp
cli
cmc
hlt
cli
stc
call
lret
lret
mov
jmp
pop
sti
ror
enter
pop
mov
add
add
add
add
add
add
add
add
or
cmp
mov
iret
cld
lock
clc
clc
push
out
out
out
ljmp
hlt
icebp
lock
repz
clc
hlt
repz
cli
div
cld
stc
stc
cld
cli
cli
sti
sti
std
cli
cli
sti
stc
stc
cli
div
clc
hlt
hlt
push
repnz
push
lock
push
ljmp
div
out
clc
clc
clc
repnz
sti
iret
iret
jp
jne
add
add
add
add
add
add
adc
adc
lret
loopne
fsin
out
loop
in
call
out
push
repz
clc
cmc
cmc
cli
clc
idiv
std
stc
stc
cli
sti
std
cld
std
cld
sti
sti
cld
stc
clc
stc
div
push
repz
icebp
lock
in
in
jmp
in
in
fdivrp
fcom
sar
aam
int
lea
add
add
add
add
add
push
push
adc
ror
lret
jmp
out
div
repz
sti
div
cld
clc
clc
cld
stc
stc
cld
cli
cli
sti
cli
cld
cld
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
cli
cli
sti
stc
clc
cli
div
stc
cmc
cmc
cli
cmc
hlt
push
lock
call
cld
aam
int
cltd
xchg
xchg
in
add
push
add
add
add
add
pop
push
push
pop
int
lret
lret
jmp
out
div
hlt
cli
div
sti
clc
clc
std
stc
stc
cld
cli
stc
std
cli
cli
cld
cld
std
std
std
std
sti
sti
cld
stc
stc
sti
clc
idiv
stc
div
clc
div
stc
repz
lock
call
xlat
std
aam
int
fwait
xchg
xchg
in
add
sldt
add
add
add
adc
adc
ror
lret
in
out
clc
hlt
hlt
sti
clc
clc
sti
stc
stc
cld
stc
stc
sti
cli
std
sti
sti
cld
std
std
std
std
cld
cld
cld
cli
stc
sti
clc
clc
stc
div
stc
div
stc
hlt
hlt
push
icebp
icebp
call
aad
cld
aad
int
xchg
mov
or
add
add
add
add
ret
ror
lret
in
out
clc
cmc
cmc
cld
clc
clc
std
stc
stc
cli
cli
cli
sti
sti
sti
std
std
cld
sti
std
cli
cli
cld
stc
stc
cli
clc
clc
cli
div
stc
cmc
cmc
push
icebp
icebp
jmp
loop
aam
iret
into
incl
add
add
add
add
add
mov
cld
ror
int3
std
loope
jmp
in
clc
cmc
cmc
cld
stc
stc
cli
cli
sti
sti
std
sti
cld
cld
cld
std
std
std
cld
cld
std
cli
cli
sti
clc
clc
sti
clc
idiv
stc
div
cli
div
push
icebp
icebp
jmp
loope
xlat
rcl
sti
aad
into
ljmp
imul
add
add
movsb
lahf
sahf
in
aam
int3
fdivr
ljmp
std
cli
cli
std
cli
cli
sti
sti
cld
sti
std
std
cld
cld
std
sti
cli
cld
stc
stc
sti
clc
clc
cli
div
cli
div
push
out
out
jmp
fnstsw
call
iret
iret
cli
aad
int
dec
dec
dec
movsb
add
add
add
add
add
add
jg
jp
aam
int3
fcmovnbe
aad
call
icebp
lock
cli
cli
sti
cli
cld
cld
cld
cld
std
std
std
cld
sti
std
cli
cli
cld
stc
cli
sti
clc
stc
sti
clc
clc
cli
clc
clc
push
in
jmp
jecxz
ror
int3
cli
ror
lret
sub
add
add
add
add
add
add
add
add
dec
movsb
aam
int3
rcl
sti
out
loopne
icebp
in
in
std
cli
cli
sti
sti
cld
cld
std
std
std
std
std
std
cld
sti
sti
sti
cld
cli
stc
cld
stc
clc
sti
clc
clc
cli
div
in
out
jmp
fcmovnu
ror
lret
cld
lret
adc
adc
add
add
add
add
add
add
add
add
pop
push
push
leave
enter
lret
sti
jecxz
in
call
clc
std
cld
sti
std
std
std
cld
cld
cli
cli
std
sti
cli
cld
stc
stc
sti
stc
stc
push
hlt
hlt
call
xlat
fdivr
ror
int3
ljmp
add
sbb
add
add
add
add
add
add
add
add
mov
cli
ror
lret
fcompp
fscale
jmp
repz
cld
cld
std
std
std
std
cld
cld
std
sti
sti
cli
cli
std
stc
stc
cld
cli
cli
push
out
out
jmp
fcom
sar
aam
int3
imul
add
add
jb
insl
ror
int3
rcl
sti
out
loopne
lock
std
cld
cld
std
std
std
std
std
cld
cld
cld
sti
sti
sti
std
cli
cli
sti
clc
clc
jmp
in
loop
ror
lret
lret
leave
jmp
add
add
add
add
add
add
add
add
pop
pop
imul
leave
call
lret
loop
ljmp
std
std
std
std
cld
cld
cld
sti
std
cli
cli
sti
sti
push
out
out
jmp
loopne
std
ror
leave
scas
test
repz
add
add
adc
lret
sar
out
loopne
out
jmp
cli
std
std
std
std
std
std
cld
std
sti
sti
cld
sti
stc
cmc
idiv
call
ror
lret
sti
aad
int
inc
inc
inc
popf
add
add
add
add
add
add
add
add
es
jno
lret
int
cli
loopne
call
in
in
cld
cld
cld
std
std
std
std
std
std
std
cld
std
cld
sti
std
sti
sti
cli
clc
clc
jmp
out
jecxz
fdivrp
fcom
sar
into
enter
test
hlt
add
add
add
add
add
add
add
add
add
pop
jp
je
aad
int3
call
int3
lret
sti
loop
fdivr
jmp
in
in
sti
sti
sti
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
stc
clc
clc
in
out
in
fdivrp
fst
xlat
dec
stc
ror
lret
pushl
cs
add
add
add
add
add
add
add
add
pop
pop
cmpsl
mov
enter
int3
cli
loope
fdivr
out
loope
out
jmp
hlt
sti
sti
sti
std
std
std
cld
std
std
std
std
std
std
std
std
cld
std
std
sti
sti
sti
push
icebp
icebp
jmp
fstp
dec
mov
aam
int3
ljmp
arpl
add
add
add
add
add
add
adc
stos
test
call
lret
lret
fcom
jecxz
fdivrp
out
loope
in
call
out
push
repnz
hlt
hlt
push
repnz
in
in
ljmp
loopne
fcom
sar
int3
mov
jg
jns
add
add
add
add
add
add
adc
adc
xchg
xchg
in
lret
ror
lret
ror
sti
fcmovnbe
aad
fsin
loopne
loop
loop
loope
fdivr
xlat
rcl
cld
ror
lret
sti
ror
leave
dec
ret
ret
push
add
add
add
add
add
add
add
add
add
add
add
pop
pop
popf
mov
stos
clc
ror
enter
int3
call
iret
into
call
rcl
call
ror
call
rcl
call
ror
call
ror
call
int
call
int
dec
ret
ret
cltd
cwtl
in
cmp
jo
add
add
add
add
add
add
add
add
adc
das
push
push
push
mov
movsl
mov
idivb
mov
mov
lods
stos
repz
ja
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
cmp
jno
push
push
mov
push
mov
dec
test
sub
or
or
add
add
add
add
incl
add
incl
add
clc
add
pop
incl
add
rolb
add
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
inc
add
pop
incl
add
repnz
lahf
incl
add
cld
add
jg
add
clc
add
jg
add
clc
add
aas
incl
add
lock
pop
incl
add
loopne
add
incl
add
loopne
add
incl
add
rolb
ud0
add
rolb
pop
incl
add
rolb
pop
incl
add
addb
pop
incl
add
addb
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
inc
add
pop
incl
add
rolb
pop
incl
add
rolb
ud0
add
loopne
add
incl
add
lock
pop
incl
add
lock
aas
incl
add
clc
add
aas
incl
add
cld
add
jg
add
incb
add
incl
add
incl
add
push
pop
incl
add
add
add
add
addb
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
pop
mov
add
add
mov
pop
mov
add
mov
add
add
mov
mov
add
js
mov
xchg
add
mov
clc
mov
add
or
decl
add
add
clc
mov
pop
mov
decl
add
mov
decl
add
clc
js
decl
add
add
mov
push
add
js
mov
add
mov
add
add
clc
add
add
xchg
mov
clc
add
add
mov
add
add
incl
add
add
mov
add
or
pop
pushl
add
add
add
add
addb
add
or
incl
or
add
add
add
add
ud0
push
add
add
add
add
add
add
add
add
add
add
xchg
ja
ja
pushl
ja
jo
jo
or
ud0
push
pop
ja
ja
addb
add
add
jo
ja
add
incl
ja
ja
addb
add
add
jo
ja
or
incl
xchg
js
ja
pop
pushl
ja
mov
mov
jo
clc
add
jo
add
clc
ja
mov
mov
clc
mov
mov
decl
add
mov
clc
mov
add
add
clc
mov
add
add
clc
mov
add
add
clc
mov
add
add
decl
add
mov
clc
mov
add
add
decl
add
mov
decl
add
mov
decl
add
js
decl
add
js
decl
add
or
clc
mov
add
mov
clc
mov
add
mov
clc
mov
add
mov
decl
mov
decl
js
decl
or
clc
mov
add
add
mov
decl
add
mov
decl
add
js
clc
mov
add
mov
clc
mov
add
add
clc
mov
or
clc
mov
add
mov
mov
pop
mov
mov
pop
mov
mov
js
mov
add
add
push
aas
inc
ud0
incl
incl
add
incb
add
cld
add
clc
add
jg
clc
add
aas
push
add
aas
jmp
add
pop
inc
add
ud0
inc
add
ud0
incl
incl
incl
add
add
incb
add
add
incb
add
add
incb
add
add
cld
add
add
cld
add
add
clc
add
add
jg
clc
add
add
jg
clc
add
add
jg
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
clc
add
add
jg
clc
add
add
jg
clc
add
add
jg
cld
add
add
jg
cld
add
add
cld
add
add
incb
add
add
incl
add
add
incl
add
add
incl
inc
add
pop
jmp
add
ud0
push
add
aas
clc
add
jg
incb
add
inc
pop
ljmp
add
add
add
addb
add
add
add
add
add
adc
add
add
add
addb
addb
add
rol
rcr
add
lret
add
add
or
pop
add
or
add
lldt
adc
add
adc
add
sbb
add
and
add
and
add
es
sub
add
cs
add
ss
add
cmp
add
cmp
add
inc
add
inc
add
dec
add
dec
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
popa
add
add
imul
jb
jb
js
jae
jge
ja
jp
jp
cmpb
test
addl
lea
mov
xchg
nop
popl
xchg
xchg
xchg
add
cltd
xchg
add
fwait
cltd
add
mov
mov
add
stos
test
add
mov
add
mov
mov
add
rol
enter
into
enter
leave
enter
movl
aad
iret
add
rcl
add
rcl
add
fcom
add
xlat
fadds
fcompp
fadds
loopne
fiaddl
in
fiadds
out
loopne
call
call
call
add
ljmp
repz
lock
lock
repnz
clc
testb
idiv
add
clc
clc
add
repnz
clc
testb
idiv
add
clc
clc
add
loope
add
loop
add
call
call
add
ljmp
cmc
icebp
icebp
add
repnz
clc
testb
idiv
add
clc
clc
add
cltd
pop
add
add
add
add
cltd
pop
add
cmp
add
adc
hlt
pop
or
in
or
jo
adc
add
add
lods
xchg
dec
add
adc
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
push
or
add
adc
pop
add
sbb
add
push
push
add
pop
pop
add
pop
push
add
and
add
and
add
and
es
daa
add
cs
das
xor
inc
aas
aas
add
inc
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
add
add
jno
ja
jne
jp
js
jge
js
jge
jnp
cmpb
mov
mov
xchg
xchg
xchg
add
xchg
xchg
add
movsb
add
lods
add
mov
roll
les
ror
lret
add
int3
lret
add
into
int
xlat
rcl
add
aad
flds
flds
fiaddl
loopne
fildl
loope
fiadds
jecxz
filds
out
filds
ljmp
add
call
jmp
out
in
in
add
lock
add
lock
icebp
icebp
add
icebp
icebp
add
repz
repnz
repz
repz
hlt
repz
hlt
hlt
add
cmc
cmc
add
div
add
div
add
div
add
div
add
div
add
clc
testl
sti
clc
clc
add
stc
stc
add
stc
clc
add
cli
cli
add
cli
cli
add
sti
cli
add
cld
sti
add
cld
sti
add
std
std
add
std
add
incb
incb
incb
incb
incl
incl
loop
faddl
jecxz
fldl
in
faddl
in
fldl
in
fiadds
in
filds
in
filds
out
filds
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
dec
cwtl
test
sbb
ss
xor
add
add
xor
inc
inc
inc
dec
cmp
add
dec
dec
dec
inc
dec
inc
add
add
pop
dec
dec
dec
dec
dec
dec
dec
dec
inc
dec
sub
add
dec
inc
dec
dec
dec
push
push
push
push
push
dec
dec
inc
dec
xor
add
and
inc
dec
dec
push
push
push
push
push
push
push
push
dec
dec
pop
dec
sub
add
inc
dec
dec
push
push
push
push
push
push
push
push
push
push
push
dec
pop
dec
sub
add
add
dec
dec
push
push
push
push
pop
pop
pop
pop
push
push
push
push
dec
dec
inc
dec
sbb
add
dec
dec
dec
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
dec
dec
inc
inc
add
dec
dec
dec
push
push
push
push
push
pop
pop
pop
pop
pop
push
push
push
push
push
push
dec
dec
dec
cmp
add
sbb
pop
dec
push
push
push
pop
pop
popa
popa
pop
pop
pop
pop
pop
popa
popa
pop
push
push
push
dec
dec
dec
sub
add
dec
dec
push
pop
pop
dec
xor
pop
pop
pop
pop
inc
xor
dec
pop
pop
push
dec
dec
inc
dec
add
dec
dec
dec
pop
push
sbb
add
popa
pop
pop
popa
and
xor
push
dec
dec
cmp
add
add
push
push
adc
add
add
cs
pop
pop
popa
cmp
add
add
adc
push
push
pop
dec
push
add
ss
push
dec
sbb
add
add
add
inc
popa
pop
pop
popa
dec
or
add
add
add
inc
push
inc
aas
add
dec
dec
cmp
add
add
add
add
pop
pop
pop
pop
pop
popa
sbb
add
add
add
or
dec
dec
and
add
add
dec
cmp
or
add
add
add
popa
pop
pop
pop
pop
popa
xor
add
add
add
add
dec
aas
dec
inc
adc
add
add
add
add
pop
pop
pop
pop
popa
push
or
add
add
add
or
cmp
add
cs
sbb
adc
push
or
popa
pop
pop
pop
pop
pop
pop
popa
add
adc
ud2
adc
dec
ss
sbb
sbb
push
push
sbb
add
pop
pop
pop
pop
pop
popa
dec
or
sbb
sbb
sbb
sbb
add
add
dec
sbb
push
sbb
sbb
sbb
add
pop
pop
pop
pop
popa
pop
pop
pop
popa
xor
push
sbb
sbb
sbb
push
adc
add
cmp
sbb
and
push
push
and
adc
pop
pop
pop
popa
pusha
popa
pop
pop
pop
popa
sbb
and
push
and
and
inc
dec
xor
and
and
sub
dec
popa
pop
pop
pop
popa
popa
pop
popa
pop
pop
pop
popa
push
adc
and
and
adc
dec
add
add
push
and
sub
adc
dec
popa
pop
pop
pop
pop
pop
pop
pusha
pusha
popa
pop
pop
pop
popa
push
adc
sub
sub
sbb
add
sub
push
xor
push
popa
pop
pop
pop
pop
pop
pop
popa
popa
popa
popa
pop
pop
pop
pop
popa
pop
and
push
es
add
cmp
sbb
or
cmp
pop
pop
pop
pop
pop
pop
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
pop
popa
inc
sbb
sbb
adc
add
inc
dec
push
adc
sub
popa
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
pop
pop
popa
pop
pop
sub
dec
add
inc
dec
dec
push
pop
popa
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
popa
popa
popa
pusha
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
pop
push
dec
dec
dec
add
dec
dec
dec
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
dec
dec
sbb
add
add
dec
dec
push
push
pop
pop
pop
pop
pop
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
pop
push
push
push
dec
dec
pop
pop
dec
dec
dec
push
push
pop
pop
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
push
push
push
dec
dec
and
add
add
dec
dec
dec
push
push
pop
pop
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
pop
pop
push
push
dec
dec
and
add
add
dec
dec
push
push
push
pop
pop
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
pop
pop
push
push
dec
dec
and
add
add
dec
dec
dec
push
push
pop
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
push
push
push
dec
dec
and
dec
dec
dec
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
push
push
push
dec
dec
sbb
dec
dec
dec
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
push
push
dec
dec
dec
push
add
dec
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
popa
pop
pop
pop
push
push
dec
dec
dec
add
ds
dec
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
push
push
dec
dec
inc
add
xor
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
popa
pop
push
push
dec
dec
aas
add
es
dec
push
push
pop
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
popa
pop
push
push
dec
dec
xor
add
dec
dec
dec
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
push
push
push
dec
dec
and
add
inc
dec
dec
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
push
push
dec
dec
dec
cmp
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
push
push
dec
dec
inc
and
push
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
push
push
push
dec
dec
das
add
dec
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
push
push
dec
dec
dec
push
add
dec
dec
push
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
push
push
push
dec
dec
aas
add
adc
push
push
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
push
push
dec
dec
dec
and
add
cmp
dec
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
push
push
push
dec
inc
inc
add
dec
push
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
push
push
push
dec
dec
dec
push
add
dec
dec
dec
push
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
push
push
push
dec
dec
dec
add
add
dec
dec
push
push
push
pop
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
push
push
push
dec
dec
inc
inc
add
dec
dec
push
push
push
push
pop
pop
popa
popa
popa
popa
popa
popa
pop
pop
push
push
push
push
dec
dec
inc
inc
pop
add
aas
dec
dec
dec
dec
push
push
push
push
push
pop
pop
pop
pop
push
push
push
push
push
dec
dec
dec
inc
inc
sbb
add
add
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
aas
add
add
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
add
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
xor
add
sub
cmp
aas
cmp
add
add
push
aas
inc
ud0
incl
incl
add
incb
add
cld
add
clc
add
jg
clc
add
aas
push
add
aas
jmp
add
pop
inc
add
ud0
inc
add
ud0
incl
incl
incl
add
add
incb
add
add
incb
add
add
incb
add
add
cld
add
add
cld
add
add
clc
add
add
jg
clc
add
add
jg
clc
add
add
jg
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
clc
add
add
jg
clc
add
add
jg
clc
add
add
jg
cld
add
add
jg
cld
add
add
cld
add
add
incb
add
add
incl
add
add
incl
add
add
incl
inc
add
pop
jmp
add
ud0
push
add
aas
clc
add
jg
incb
add
inc
pop
ljmp
add
add
add
addb
add
add
add
add
add
xor
add
cmp
cmpb
xchg
xchg
lahf
cltd
xchg
mov
and
and
mov
sarb
mov
lcall
add
inc
mov
lds
into
enter
lret
mov
ret
mov
add
pop
lret
ror
aam
int
rcl
fcmovbe
rcr
aam
fcom
rcl
iret
iret
int
mov
enter
add
add
ror
enter
ror
lret
rcr
xlat
xlat
loope
fninit
fstp
loop
fucom
fcmovnu
fcomp
aam
ror
int3
ror
leave
test
add
popa
pop
pop
ror
enter
ror
int3
fcmovnbe
aad
fcmovnu
in
loop
call
jecxz
loop
in
aad
into
mov
jg
jns
add
dec
inc
inc
ror
mov
int
loop
fsub
loope
ljmp
out
in
out
jmp
out
in
call
fstp
fcom
ror
mov
ror
lret
push
lret
mov
loop
fsub
loop
ljmp
jmp
out
jmp
in
out
in
in
call
xlat
xlat
aad
iret
les
dec
inc
inc
add
mov
lods
enter
lret
aad
fstp
out
loope
in
in
call
out
ljmp
ljmp
in
call
call
fstp
xlat
ror
int3
mov
mov
int3
mov
aad
loope
fsub
loope
call
in
out
in
out
lock
lock
lock
lock
in
jmp
ljmp
loop
jecxz
fstp
aad
leave
enter
stos
movsl
mov
add
inc
aam
int3
mov
fstp
jmp
out
std
clc
idiv
cld
cld
clc
clc
lock
jmp
in
in
repnz
in
out
jmp
cli
div
sti
stc
clc
div
icebp
jmp
out
loope
fcmovu
aad
leave
leave
outsb
imul
ret
mov
ror
int
aam
out
loop
cmc
cmc
div
lock
iret
lods
test
nop
mov
lock
in
in
lock
jmp
repz
mov
icebp
in
in
std
div
in
in
rcl
mov
add
add
lret
mov
aad
repnz
in
in
loopne
xchg
xchg
inc
aas
aas
or
add
add
inc
inc
inc
cld
sti
cli
icebp
in
in
out
jmp
bound
add
add
add
or
or
xor
xchg
imul
out
fstp
fmul
enter
ret
lahf
into
mov
fcomp
in
out
lcall
add
add
jle
push
in
in
lock
in
mov
add
add
sbb
sbb
fsubp
mov
ror
enter
add
pushf
xchg
xchg
enter
int3
mov
add
add
add
add
add
add
add
add
add
add
std
icebp
out
out
repz
out
cld
stc
stc
aad
rorl
pop
pop
add
add
add
add
add
add
add
add
add
xor
mov
faddp
mov
add
add
xor
xlat
rcl
cmpsl
mov
add
add
push
push
add
add
add
add
add
add
add
add
call
icebp
icebp
div
repnz
icebp
icebp
cli
clc
clc
cmp
cmp
add
add
add
add
add
add
add
pop
push
pop
add
add
or
mov
int3
vxorps
cltd
xchg
xchg
xlat
rcl
mov
or
add
or
or
add
add
add
add
add
gs
push
out
out
clc
hlt
repz
repz
hlt
out
out
decl
add
add
add
add
add
add
add
add
or
or
or
add
add
mov
scas
ror
lret
mov
mov
sbb
add
pop
add
add
add
add
add
pop
pop
or
or
or
add
add
sarb
icebp
stc
cmc
cmc
stc
cmc
cmc
div
repz
cli
cli
fimull
add
add
add
or
or
sahf
lcall
dec
add
test
fcom
rorb
inc
or
and
and
and
and
sub
sub
xor
xor
or
inc
aas
aas
sti
cli
cli
div
repnz
hlt
cmc
stc
cmc
cmc
stc
cmc
cmc
stc
cmc
cmc
div
icebp
jmp
bound
add
cs
and
and
sbb
pop
adc
adc
adc
or
pop
xor
sub
cmpsl
cmpsb
add
ror
enter
adc
cmp
ds
cmp
cmp
aaa
aaa
xor
cmp
xor
add
add
div
icebp
cli
cmc
idiv
div
sti
clc
cmc
cli
div
div
repz
cli
cli
fcom
or
or
sub
cmp
cmp
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
fcmovnbe
roll
add
push
dec
dec
fcmovnbe
aam
inc
inc
and
and
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
add
pop
push
icebp
repnz
cmc
cmc
cli
div
sti
clc
idiv
clc
clc
sti
clc
cmc
stc
div
div
icebp
incl
add
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
dec
dec
xor
xor
sub
jge
ja
add
add
mov
sbb
dec
inc
inc
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
and
and
in
in
cli
div
div
repnz
cmc
cmc
sti
div
cld
stc
clc
cli
idiv
cld
stc
clc
cli
div
stc
cmc
hlt
clc
repz
cli
cli
inc
inc
inc
adc
adc
dec
dec
dec
dec
dec
dec
push
push
push
push
dec
push
push
push
push
push
push
push
pop
adc
mov
add
int
mov
bound
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
sub
iret
iret
std
sti
sti
cmc
lock
cmc
hlt
cli
div
cli
clc
clc
sti
clc
clc
sti
clc
idiv
clc
stc
sti
clc
idiv
div
div
repnz
stc
clc
out
out
and
sbb
sbb
data16
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
data16
and
fs
aam
cmp
cmp
fcom
pop
pop
pop
sub
outsb
gs
addr16
sbb
sbb
int3
lret
std
std
repnz
in
clc
hlt
hlt
stc
cmc
cmc
cli
div
cli
div
sti
clc
idiv
idiv
sti
idiv
sti
stc
clc
cli
div
cli
cmc
cmc
cmc
lock
sti
cli
fisubrs
adc
pusha
jae
jae
push
fs
outsb
outsb
ds
fcom
shlb
pop
add
outsl
insb
imul
rolb
inc
dec
dec
dec
xchg
insb
insb
insb
cmp
cmp
pop
pop
inc
inc
inc
std
cld
lock
in
div
repnz
hlt
repz
cmc
cmc
stc
div
sti
clc
idiv
stc
clc
sti
clc
clc
sti
clc
clc
sti
clc
clc
cli
div
stc
cmc
hlt
clc
hlt
hlt
repnz
out
cld
clc
clc
out
in
in
pop
pop
pop
add
add
xor
addr16
jns
addl
sub
xchg
xchg
add
sahf
cltd
cwtl
ror
leave
sub
sub
cmp
inc
sbb
or
xor
mov
clc
stc
cmc
cmc
lock
in
cmc
repnz
div
repnz
cmc
repz
hlt
cmc
cli
div
sti
stc
clc
cld
stc
cli
std
clc
clc
cld
clc
clc
cli
clc
stc
cli
clc
idiv
div
clc
repz
div
repnz
out
in
cmc
lock
std
cld
mov
scas
aas
ds
or
sbb
cmp
cmp
dec
sbb
sbb
mov
add
mov
dec
dec
dec
das
cs
inc
inc
jb
outsl
mov
icebp
std
cld
icebp
in
in
icebp
in
in
hlt
icebp
lock
repnz
clc
repz
hlt
hlt
stc
cmc
idiv
div
cld
stc
stc
std
cli
cli
std
stc
stc
cld
stc
stc
sti
clc
stc
sti
stc
idiv
div
stc
hlt
cmc
div
repnz
icebp
lock
in
in
out
ljmp
cmc
mov
jge
jnp
dec
dec
xor
xor
cmp
mov
les
add
sarb
aam
loope
clc
repz
cld
cld
std
div
repnz
in
out
ljmp
out
hlt
lock
icebp
div
repnz
repz
cmc
cmc
sti
clc
clc
sti
clc
clc
cld
stc
stc
std
stc
stc
cld
clc
clc
cli
idiv
sti
clc
idiv
cmc
hlt
clc
repz
repnz
hlt
lock
out
icebp
in
in
in
call
cli
hlt
repz
cli
cli
cli
hlt
repz
xlat
int3
mov
add
fcmovnbe
aam
loopne
call
in
out
icebp
jmp
repnz
in
hlt
lock
cmc
lock
repnz
hlt
repz
cmc
cmc
cli
div
cld
stc
stc
std
sti
sti
std
cld
cld
std
std
cld
cld
std
cld
cld
std
sti
sti
std
sti
sti
cld
stc
clc
sti
div
clc
cmc
cmc
div
repnz
lock
repnz
in
icebp
in
in
out
ljmp
jecxz
loop
in
fcom
int
movb
das
cs
lret
vpaddusb
aad
loopne
ljmp
out
out
div
icebp
clc
hlt
hlt
stc
div
sti
div
sti
stc
clc
std
sti
cli
sti
sti
cld
cld
std
std
cld
cld
sti
cli
sti
stc
stc
cli
div
clc
div
div
repnz
icebp
icebp
repz
out
lock
jmp
in
loopne
fst
fmul
leave
enter
push
dec
dec
cmp
ss
mov
xlat
xlat
out
fucomip
out
repz
out
cli
div
cli
div
cld
clc
clc
sti
stc
stc
cld
cli
cli
cld
stc
stc
cld
sti
cli
cli
cli
std
sti
sti
std
std
std
std
std
std
std
std
cld
cld
sti
cld
std
cli
stc
cld
stc
stc
sti
stc
clc
cli
div
stc
div
stc
cmc
hlt
stc
cmc
hlt
div
repnz
out
out
loopne
into
lret
enter
pop
cmp
cmp
mov
mov
xlat
in
fucomip
in
hlt
lock
div
cli
div
sti
clc
clc
cld
clc
clc
cld
stc
stc
sti
cli
cli
std
cli
stc
sti
sti
std
cld
cld
std
std
std
std
std
std
std
cld
cld
cld
std
cli
cli
cld
cli
clc
cli
clc
idiv
div
cli
div
clc
cmc
repz
repz
icebp
icebp
in
call
loopne
fcom
lret
leave
popa
pop
pop
cmp
aaa
int
vshufpd
fcom
in
loopne
in
hlt
icebp
icebp
cli
div
cli
div
sti
clc
clc
cld
stc
clc
std
stc
stc
sti
sti
std
cli
cli
cld
cld
std
std
std
sti
sti
sti
sti
sti
stc
clc
sti
clc
idiv
div
stc
div
clc
hlt
hlt
clc
repz
repnz
call
fnop
lret
enter
pop
xor
xor
mov
xlat
out
loopne
in
cmc
icebp
icebp
sti
clc
idiv
clc
clc
cld
stc
stc
cld
stc
stc
cli
cli
sti
cli
std
cld
sti
sti
sti
std
cld
std
std
std
std
std
std
std
cld
cld
std
sti
cli
cld
cli
stc
cld
stc
clc
cli
div
clc
div
stc
div
stc
hlt
hlt
div
repz
out
in
fcomp
iret
leave
enter
push
push
push
add
add
mov
aad
in
fucomip
in
cmc
repnz
sti
clc
clc
cld
clc
stc
std
cli
cli
std
cli
stc
std
cli
cli
cli
sti
sti
cli
std
cld
cld
cld
sti
sti
std
cli
cli
sti
stc
clc
cli
clc
idiv
clc
idiv
div
stc
hlt
hlt
div
repnz
out
in
fcom
into
enter
movb
add
add
ret
ret
fcmovbe
shl
ljmp
stc
clc
sti
stc
clc
cli
cli
sti
cli
std
cli
cli
sti
cld
cld
sti
cld
std
std
cld
cld
cli
cli
cld
cli
stc
cld
stc
clc
cli
clc
clc
cli
clc
idiv
div
stc
div
div
hlt
in
out
in
xlat
int3
mov
mov
add
ret
int3
mov
rcl
jecxz
fucomp
in
repz
lock
clc
clc
cld
clc
clc
cli
cli
cli
cli
cli
sti
cld
sti
std
cld
std
std
std
std
std
sti
sti
std
stc
stc
sti
clc
clc
sti
clc
idiv
clc
clc
cli
div
cli
div
div
repz
aad
lret
add
xlat
ror
loop
fsubr
jecxz
icebp
out
in
sti
clc
stc
stc
stc
sti
sti
sti
sti
sti
cld
sti
sti
cld
cld
std
std
std
std
std
cld
cld
sti
sti
cli
cli
sti
stc
stc
cld
stc
clc
sti
clc
clc
cli
div
cli
div
cmc
repnz
fstp
rcl
int
mov
mov
add
xchg
lea
int3
loope
fucomi
loop
lock
cld
clc
clc
std
stc
stc
cli
sti
sti
cld
cld
sti
cld
cld
std
std
cld
cld
cli
cli
std
sti
cli
cld
cli
cli
sti
cli
clc
sti
stc
idiv
div
cli
clc
clc
repz
loope
ror
into
mov
add
into
mov
out
loope
call
std
stc
cli
std
sti
sti
cld
cld
std
cld
cld
std
cld
std
std
cld
cld
sti
sti
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
clc
cli
clc
idiv
clc
clc
lock
in
in
loopne
fcmovu
ror
int3
into
enter
mov
add
xor
into
mov
xlat
out
fucomip
in
div
repz
cli
sti
sti
sti
cld
sti
std
std
std
std
std
std
std
sti
cld
sti
sti
sti
std
stc
stc
sti
stc
cli
cld
clc
stc
sti
div
cli
div
in
out
in
fcom
iret
leave
enter
pop
push
push
add
sarb
shl
jmp
in
std
sti
sti
std
sti
cli
std
cld
cld
std
std
std
std
cld
sti
sti
cli
sti
sti
cld
cli
cli
cld
cli
stc
sti
clc
clc
sti
clc
clc
div
repz
fstp
aad
lret
les
add
add
int
fcmovnu
call
call
sti
sti
std
std
std
std
std
std
cld
cld
sti
sti
std
cli
cli
cli
sti
stc
stc
sti
stc
clc
sti
stc
stc
icebp
out
out
out
loope
xlat
rcl
int3
mov
add
push
into
mov
enter
xlat
in
loopne
in
div
icebp
std
std
std
std
cld
std
std
std
cld
cld
cld
cld
sti
sti
cli
cli
cli
cli
std
stc
stc
cli
div
jmp
out
fcom
lret
mov
add
leave
ret
shl
call
ljmp
std
std
std
std
std
cld
cld
std
sti
sti
cld
cld
std
sti
sti
std
cli
cli
sti
sti
cmc
lock
loope
fstp
fcmovbe
ror
lds
xor
add
xchg
lea
int3
lret
xlat
out
loopne
in
cmc
repz
std
std
cld
std
std
std
std
cld
cld
sti
sti
sti
std
cli
cli
std
cli
cli
cli
div
jmp
out
loopne
into
into
lret
mov
lods
add
xor
das
int
ret
shl
fstp
jmp
out
stc
stc
std
std
std
std
std
cld
std
cld
sti
cld
sti
std
sti
sti
cld
cli
cli
std
sti
sti
lock
in
out
loopne
fstp
fcmovnbe
aam
mov
sahf
cltd
cwtl
leave
ret
rcl
leave
fst
in
fucomip
in
lock
in
cld
cld
cld
std
std
std
std
std
std
std
std
std
cld
std
cld
std
sti
cld
std
cli
cli
std
cld
cld
hlt
repnz
fcom
ror
int3
mov
add
add
vshufps
ror
loopne
loope
jmp
in
out
out
cld
std
std
std
std
std
std
std
std
std
std
std
sti
std
cld
sti
std
sti
cli
std
sti
cld
div
hlt
jmp
fnstsw
fcmovu
fcom
ror
ret
enter
dec
add
add
jae
mov
rcl
loope
loop
jmp
in
out
in
sti
cli
cli
cld
std
std
std
std
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
std
cld
cld
cld
cld
cld
std
std
std
div
repz
fnstsw
fcmovnu
fcmovbe
ror
mov
ret
xchg
xchg
add
ror
aam
fcmovnu
out
loope
in
out
ljmp
cld
cld
cld
cld
std
cld
cld
cld
std
cld
std
cld
cld
cld
cld
cld
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cli
cli
cli
icebp
out
out
out
loop
loopne
fcmovu
aam
ror
leave
lds
add
add
mov
rcl
fxam
out
loop
in
lock
in
div
cmc
cli
stc
stc
sti
sti
sti
sti
cld
sti
cld
cld
cld
sti
sti
sti
cli
cli
cli
clc
div
repz
fstp
fcompp
rcl
into
leave
enter
lds
add
mov
lods
leave
ret
iret
loopne
out
fucomip
loop
jmp
in
ljmp
in
out
jmp
jmp
out
loope
in
fucom
aad
rcl
lret
vshufps
inc
inc
mov
leave
ret
leave
enter
fcmovbe
aam
loopne
fcmovnu
loope
fnclex
loope
fcmovnu
loope
fst
xlat
fcmovbe
rcl
ror
iret
leave
enter
int3
stos
add
imul
int
leave
aam
int
ror
fcom
rcr
rcl
rcr
rcl
ror
ror
int
lret
mov
mov
add
jnp
jne
stos
test
mov
leave
enter
iret
enter
iret
leave
into
leave
enter
int
lret
mov
addl
jns
je
nop
mov
cmpsb
mov
stos
mov
stos
scas
test
xchg
xchg
xchg
cmpb
dec
add
push
aas
inc
ud0
incl
incl
add
incb
add
cld
add
clc
add
jg
clc
add
aas
push
add
aas
jmp
add
pop
inc
add
ud0
inc
add
ud0
incl
incl
incl
add
add
incb
add
add
incb
add
add
incb
add
add
cld
add
add
cld
add
add
clc
add
add
jg
clc
add
add
jg
clc
add
add
jg
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
clc
add
add
jg
clc
add
add
jg
clc
add
add
jg
cld
add
add
jg
cld
add
add
cld
add
add
incb
add
add
incl
add
add
incl
add
add
incl
inc
add
pop
jmp
add
ud0
push
add
aas
clc
add
jg
incb
add
inc
pop
ljmp
add
add
add
addb
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
push
add
add
add
add
add
push
add
add
add
add
add
daa
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
pop
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
dec
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
add
add
add
push
add
add
add
pop
add
add
add
push
add
add
add
imul
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
dec
add
add
add
pop
add
add
add
bound
add
add
add
add
popa
add
add
cmp
sahf
xchg
xchg
lock
cltd
xchg
repnz
inc
scas
add
add
popa
add
add
add
imul
add
arpl
add
pusha
add
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
arpl
add
add
add
add
add
and
and
mov
sar
sarb
mov
sar
lcall
add
add
add
outsl
add
add
add
imul
add
add
add
add
add
pop
add
add
add
add
add
add
xor
add
sub
add
and
add
sbb
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
pop
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
add
add
add
imul
add
dec
inc
mov
mov
dec
lds
ret
std
into
enter
enter
lds
sar
mov
pusha
leave
add
add
add
insl
add
add
add
push
add
add
add
add
pop
add
add
add
dec
add
add
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
cmp
add
add
add
push
add
add
add
bound
add
arpl
add
arpl
pop
lret
rol
lret
aam
int
fcom
sar
fcmovbe
sar
fcmovbe
aam
fcom
sar
aad
iret
dec
enter
mov
enter
js
add
add
add
arpl
add
imul
add
pop
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
addr16
ror
enter
mov
std
sar
fst
xlat
loope
jecxz
loop
loope
fdivr
fcmovbe
aam
ror
int3
inc
sarb
test
add
add
push
add
add
add
push
add
add
add
inc
add
add
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ror
enter
mov
fcmovnbe
aad
loopne
in
out
loop
call
in
jmp
loop
jmp
loopne
jmp
call
iret
into
inc
rol
iret
leave
enter
jns
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
dec
inc
inc
cmpsl
ror
inc
sarb
jmp
fstp
out
loope
ljmp
in
out
in
out
jmp
out
jmp
in
call
fstp
xlat
call
ror
inc
rol
ror
lret
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
es
ret
sar
mov
int3
jmp
fstp
out
loope
ljmp
out
jmp
jmp
out
call
out
in
in
call
fst
xlat
call
iret
iret
inc
mov
lret
decl
inc
movsb
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
lods
stc
enter
iret
lret
fcmovnbe
aad
loop
fdivr
out
loope
ljmp
out
jmp
ljmp
ljmp
out
jmp
call
call
call
int
inc
sarb
and
push
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
adc
leave
dec
mov
fcmovbe
aam
loope
fdivr
out
loope
call
in
jmp
in
in
out
push
jmp
push
jmp
push
jmp
push
jmp
in
jmp
in
ljmp
call
fstp
aad
iret
leave
enter
ret
movsl
mov
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
inc
inc
mov
mov
sar
jecxz
jmp
out
out
std
clc
idiv
cld
cld
clc
clc
push
in
jmp
icebp
in
in
push
in
in
out
jmp
cli
div
sti
stc
clc
push
repnz
jmp
out
in
loope
fcmovbe
aam
leave
lret
leave
ljmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
cmovge
mov
sar
into
int
fcmovbe
aad
out
loop
cli
cmc
cmc
push
lock
ror
ljmp
mov
mov
lods
push
lock
in
in
push
in
jmp
div
repnz
mov
mov
dec
leave
push
in
in
std
div
in
in
call
rcl
inc
mov
ljmp
es
add
add
add
add
add
add
add
or
mov
fcmovbe
aam
repnz
in
in
loopne
cwtl
xchg
xchg
incl
aas
decl
add
incl
add
incl
inc
cld
sti
cli
push
in
in
out
jmp
jmp
pop
incl
add
incl
add
decl
or
pushl
xor
incl
xlat
push
out
out
fstp
fdivr
into
enter
mov
add
add
add
add
add
add
add
add
add
sub
sub
mov
sti
fdivr
in
out
lcall
daa
daa
incl
add
incl
add
incl
add
incl
add
incl
push
in
in
push
in
in
jmp
add
incl
add
add
add
add
add
add
add
sbb
sbb
addl
in
fdivrp
mov
sti
ror
enter
dec
mov
add
add
add
add
pushf
xchg
xchg
call
fcompp
fdivr
int3
mov
incb
add
incl
add
incl
add
add
add
add
add
add
add
add
add
mov
mov
std
std
push
out
out
push
out
out
cld
stc
stc
call
rcl
decl
pop
pop
incl
add
incl
add
incl
add
incl
add
add
add
add
add
xor
xor
mov
std
lds
scas
clc
or
pop
xor
add
add
add
add
add
add
add
add
xor
xlat
rcl
sti
cmpsl
mov
sbb
add
add
pop
push
push
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
call
cmc
push
icebp
icebp
push
repnz
icebp
icebp
cli
clc
clc
cmp
cmp
add
add
add
add
add
add
add
add
add
add
pop
push
pop
incl
add
decl
or
decb
sar
int3
push
push
push
scas
add
add
add
add
add
add
cltd
xchg
xchg
jmp
mov
or
incl
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
gs
push
out
out
clc
hlt
repz
stc
repz
push
out
out
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
decl
or
incl
add
incl
sar
mov
scas
stc
or
or
add
add
add
add
add
add
add
add
sub
es
int3
lret
pushl
sbb
incb
pop
pop
incl
add
incl
add
incl
add
pop
pop
pop
decl
or
decl
or
incl
add
inc
sarb
cmc
icebp
icebp
stc
cmc
cmc
stc
cmc
cmc
push
repz
std
cli
cli
or
add
incl
add
incl
add
incl
add
incl
add
incl
or
decb
or
sahf
lcall
dec
dec
dec
movsb
add
add
add
add
add
add
test
xlat
fcom
sar
dec
dec
inc
cld
or
and
jmp
and
jmp
and
jmp
sub
ljmp
sub
pushl
xor
decl
or
incl
aas
sti
cli
cli
push
repnz
stc
hlt
cmc
stc
cmc
cmc
stc
cmc
cmc
stc
cmc
cmc
push
icebp
icebp
jmp
incl
add
ljmp
cs
and
jmp
and
lcall
push
pop
call
adc
call
adc
decl
pop
pop
xor
sub
lods
cmpsl
cmpsb
repz
add
add
add
add
add
add
add
add
add
adc
adc
leave
enter
xchg
std
adc
paddd
cmp
cmp
cmp
cmp
aaa
aaa
aaa
pushl
cmp
pushl
xor
incl
add
mov
std
std
push
icebp
icebp
cli
cmc
idiv
cli
div
sti
clc
cmc
cli
div
push
repz
cld
cli
cli
fcom
decl
or
ljmp
sub
cmp
cmp
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
paddd
sti
fcmovnbe
sar
sub
daa
jns
add
add
add
add
add
add
add
add
dec
stos
fcmovnbe
aam
dec
inc
inc
sti
and
and
dec
dec
dec
incl
incl
incl
inc
incl
inc
incl
inc
decl
incl
pop
pop
push
icebp
repnz
stc
cmc
cmc
cli
div
sti
clc
idiv
sti
clc
clc
sti
clc
cmc
stc
div
push
icebp
icebp
incl
add
decl
dec
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
call
dec
pushl
xor
pushl
sub
enter
ja
add
add
add
add
mov
mov
lcall
sbb
std
dec
inc
inc
call
push
call
push
call
push
decl
dec
decl
dec
lcall
lcall
pop
pop
jmp
and
in
in
in
cli
div
push
repnz
stc
cmc
cmc
sti
div
cld
stc
clc
cli
idiv
cld
stc
clc
cli
div
stc
cmc
hlt
clc
repz
sti
cli
cli
incl
inc
call
adc
lcall
decl
dec
decl
dec
call
push
call
push
call
push
call
pop
adc
cltd
inc
mov
pop
add
add
add
add
add
add
add
add
adc
adc
int
decl
sbb
std
bound
pop
pop
pop
lcall
pop
lcall
pop
lcall
pop
ljmp
push
call
adc
call
iret
iret
std
sti
sti
push
lock
stc
cmc
hlt
cli
div
cli
clc
clc
sti
clc
clc
sti
clc
idiv
sti
clc
stc
sti
clc
idiv
cli
div
push
repnz
sti
stc
clc
jmp
out
jmp
sbb
lcallw
pop
lcall
pop
lcall
pop
lcall
jmp
jmp
and
imul
sub
daa
jp
add
add
add
add
add
add
add
add
cmp
xchg
pop
pop
pop
sti
sub
outsl
outsb
jmp
ljmp
imul
addr16
sbb
lcall
sbb
int3
lret
std
std
push
out
in
clc
hlt
hlt
stc
cmc
cmc
cli
div
cli
div
sti
clc
idiv
cli
idiv
sti
idiv
sti
stc
clc
cli
div
cli
cmc
cmc
push
lock
std
sti
cli
fdivrp
sub
adc
jmp
pusha
pushl
jae
push
push
fs
outsb
ds
cmp
popa
pop
pop
mov
add
add
outsl
insb
imul
rcl
incb
inc
cld
dec
dec
dec
incl
jnp
ljmp
cmp
cmp
pop
pop
pop
incl
inc
std
cld
push
in
in
push
repz
clc
hlt
repz
stc
cmc
cmc
stc
div
sti
clc
idiv
cld
stc
clc
sti
clc
clc
sti
clc
clc
sti
clc
clc
cli
div
stc
cmc
hlt
clc
hlt
hlt
push
out
out
cld
clc
clc
out
in
in
lcall
pop
incl
add
pushl
xor
jmp
addr16
jp
jns
test
pusha
sub
pushf
xchg
xchg
out
add
adc
add
add
add
sbb
lret
sub
sub
cmp
cmp
inc
inc
inc
lcall
or
pushl
xor
jmp
clc
clc
stc
cmc
cmc
push
in
in
push
repnz
push
repz
clc
cmc
repz
stc
hlt
cmc
cli
div
sti
stc
clc
cld
stc
cli
std
clc
clc
cld
clc
clc
cli
clc
stc
cli
clc
idiv
stc
div
clc
repz
push
repnz
out
in
push
lock
std
cld
pushl
decl
or
sbb
sbb
cmp
cmp
dec
dec
dec
lcall
sbb
std
mov
mov
or
add
add
add
add
add
add
add
add
pop
pop
pop
xor
into
enter
dec
dec
std
das
cs
inc
pushl
outsl
mov
icebp
icebp
std
cld
push
in
in
push
in
in
push
icebp
lock
repnz
clc
repz
clc
hlt
hlt
stc
cmc
idiv
sti
div
cld
stc
stc
std
cli
cli
std
stc
stc
cld
stc
stc
sti
clc
stc
sti
stc
idiv
cli
div
stc
hlt
cmc
push
repz
icebp
lock
in
in
out
ljmp
sti
div
inc
ret
jge
jnp
dec
dec
dec
pushl
xor
cmp
cmp
mov
mov
sbb
pop
pop
add
add
add
add
add
add
add
add
adc
adc
sarb
fcmovnbe
aam
out
loopne
clc
repz
cld
cld
std
div
push
in
in
out
ljmp
hlt
out
out
push
lock
icebp
icebp
push
repnz
clc
repz
stc
cmc
cmc
sti
clc
clc
sti
clc
clc
cld
stc
stc
std
stc
stc
cld
clc
clc
cli
idiv
sti
clc
idiv
stc
cmc
hlt
clc
repz
repnz
push
lock
out
out
push
in
in
in
call
jmp
cli
cli
cli
hlt
repz
jmp
xlat
xlat
dec
mov
sub
add
add
add
add
add
add
add
add
and
insl
lret
lret
sti
fcmovnbe
aam
in
fdivrp
call
in
in
out
push
jmp
push
in
in
push
lock
push
lock
repnz
clc
hlt
repz
stc
cmc
cmc
cli
div
cld
stc
stc
std
sti
sti
std
cld
cld
std
std
cld
cld
std
cld
cld
std
sti
sti
std
sti
sti
cld
stc
clc
sti
div
clc
cmc
cmc
push
repz
lock
push
in
in
push
in
in
out
ljmp
jmp
loop
jmp
fstp
xlat
dec
mov
incl
ds
add
add
add
add
add
add
add
add
das
cs
vpsubd
aad
in
fdivrp
ljmp
push
out
out
push
icebp
icebp
clc
hlt
hlt
stc
div
sti
div
sti
stc
clc
std
sti
cli
sti
sti
cld
cld
std
std
cld
cld
sti
cli
sti
stc
stc
cli
div
clc
div
push
repz
icebp
icebp
push
out
out
push
jmp
jmp
in
in
fst
fdivr
into
leave
enter
call
dec
cmpsb
add
add
add
add
add
add
add
add
cmp
ss
mov
sti
xlat
jmp
loopne
ljmp
cli
div
cli
div
cld
clc
clc
sti
stc
stc
cld
cli
cli
cld
stc
stc
cld
sti
cli
cli
cli
std
sti
sti
std
std
std
std
std
std
std
std
cld
cld
sti
cld
std
cli
stc
cld
stc
stc
sti
stc
clc
cli
div
stc
div
stc
cmc
hlt
stc
cmc
hlt
push
repnz
in
out
jmp
loopne
fcompp
fcos
into
lret
into
enter
pop
pop
mov
add
add
add
add
add
add
add
add
cmp
int
xlat
in
jmp
in
hlt
lock
stc
div
cli
div
sti
clc
clc
cld
clc
clc
cld
stc
stc
sti
cli
cli
std
cli
stc
sti
sti
std
cld
cld
std
std
std
std
std
std
std
cld
cld
cld
std
cli
cli
cld
cli
clc
cli
clc
idiv
stc
div
cli
div
clc
cmc
repz
clc
repz
clc
icebp
icebp
in
call
loopne
fdivr
ror
leave
cld
into
leave
jmp
pop
mov
add
add
add
add
add
add
cmp
aaa
mov
mov
int
fcom
jmp
loope
ljmp
cli
div
cli
div
sti
clc
clc
cld
stc
clc
std
stc
stc
sti
sti
std
cli
cli
cld
cld
std
std
std
sti
sti
sti
sti
sti
stc
clc
sti
clc
idiv
cli
div
stc
div
clc
hlt
hlt
clc
repz
repnz
in
call
loopne
fcos
ror
leave
sti
iret
enter
pop
pop
mov
add
add
add
add
xor
test
mov
cli
fst
out
loopne
jmp
in
cmc
icebp
icebp
sti
clc
idiv
sti
clc
clc
cld
stc
stc
cld
stc
stc
cli
cli
sti
cli
std
cld
sti
sti
sti
std
cld
std
std
std
std
std
std
std
cld
cld
std
sti
cli
cld
cli
stc
cld
stc
clc
cli
div
clc
div
stc
div
stc
hlt
hlt
push
repz
in
out
jmp
fdivr
iret
leave
enter
call
stos
add
add
add
add
add
add
add
add
daa
and
fcmovnbe
aam
in
jmp
in
cmc
repnz
sti
clc
clc
cld
clc
stc
std
cli
cli
std
cli
stc
std
cli
cli
cli
sti
sti
cli
std
cld
cld
cld
sti
sti
std
cli
cli
sti
stc
clc
cli
clc
idiv
cli
clc
idiv
cli
div
stc
hlt
hlt
push
repnz
in
out
jmp
loopne
fstp
xlat
dec
enter
enter
inc
inc
fwait
add
add
add
add
add
add
add
add
sbb
pop
pop
lret
dec
fcmovbe
sar
in
fdivrp
ljmp
sti
stc
clc
sti
stc
clc
cli
cli
sti
cli
std
cli
cli
sti
cld
cld
sti
cld
std
std
cld
cld
cli
cli
cld
cli
stc
cld
stc
clc
cli
clc
clc
cli
clc
idiv
stc
div
stc
div
push
hlt
hlt
in
out
jmp
dec
mov
into
mov
mov
add
add
add
add
add
add
add
add
or
mov
std
sar
jecxz
jmp
out
lock
cld
clc
clc
cld
clc
clc
cli
cli
cli
cli
cli
sti
cld
sti
std
cld
std
std
std
std
std
sti
sti
std
stc
stc
sti
clc
clc
sti
clc
idiv
cli
clc
clc
cli
div
cli
div
push
repz
ljmp
fcmovbe
aam
lret
lret
and
and
add
add
add
add
add
add
add
add
add
scas
test
call
ror
std
loop
fdivr
jmp
out
in
sti
clc
stc
stc
stc
sti
sti
sti
sti
sti
cld
sti
sti
cld
cld
std
std
std
std
std
cld
cld
sti
sti
cli
cli
sti
stc
stc
cld
stc
clc
sti
clc
clc
cli
div
cli
div
push
repnz
call
fstp
sar
int
std
lds
cmovl
add
add
add
add
add
setb
aam
int3
cld
loope
call
jmp
cld
clc
clc
std
stc
stc
cli
sti
sti
cld
cld
sti
cld
cld
std
std
cld
cld
cli
cli
std
sti
cli
cld
cli
cli
sti
cli
clc
sti
stc
idiv
sti
div
cli
clc
clc
push
lock
loope
jmp
call
ror
std
into
mov
testl
add
add
add
add
mov
ror
leave
cld
fdivr
out
loope
in
call
idiv
std
stc
cli
std
sti
sti
cld
cld
std
cld
cld
std
cld
std
std
cld
cld
sti
sti
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
clc
cli
clc
idiv
cli
clc
clc
push
in
in
jmp
loopne
ror
int3
cld
into
enter
mov
or
add
add
add
add
ss
mov
mov
sti
out
jmp
in
div
repz
cli
sti
sti
sti
cld
sti
std
std
std
std
std
std
std
sti
cld
sti
sti
sti
std
stc
stc
sti
stc
cli
cld
clc
stc
sti
div
cli
div
in
out
jmp
xlat
dec
leave
enter
pop
push
push
mov
add
add
add
add
add
add
add
add
adc
dec
mov
dec
rcl
in
jmp
out
in
std
sti
sti
std
sti
cli
std
cld
cld
std
std
std
std
cld
sti
sti
cli
sti
sti
cld
cli
cli
cld
cli
stc
sti
clc
clc
sti
clc
clc
push
repz
jmp
fcmovbe
aam
lret
mov
jns
add
add
add
add
add
add
add
add
add
sbb
mov
aam
int
loopne
call
jmp
stc
std
sti
sti
std
std
std
std
std
std
cld
cld
sti
sti
std
cli
cli
cli
sti
stc
stc
sti
stc
clc
sti
stc
stc
push
out
out
jmp
loope
jmp
xlat
rcl
std
int3
mov
or
cmp
add
add
add
add
add
add
add
add
push
mov
mov
int
sti
fstp
xlat
jmp
loopne
ljmp
std
std
std
std
cld
std
std
std
cld
cld
cld
cld
sti
sti
cli
cli
cli
cli
std
stc
stc
cli
div
jmp
out
in
fdivr
ror
lret
mov
xlat
add
add
add
add
add
add
pop
push
push
pop
leave
ret
lret
cld
sar
loop
fdivr
call
ljmp
std
std
std
std
std
std
std
std
cld
cld
std
sti
sti
cld
cld
std
sti
sti
std
cli
cli
sti
sti
push
lock
loope
jmp
fstp
fcmovbe
sar
lret
enter
xor
mov
add
add
add
add
add
adc
ror
lret
fcom
jmp
loope
jmp
in
cmc
repz
std
std
std
cld
std
std
std
std
cld
cld
sti
sti
sti
std
cli
cli
std
cli
cli
cli
div
jmp
out
in
loopne
fcos
aad
into
std
lret
std
mov
lods
clc
push
push
push
add
add
add
add
add
add
add
add
xor
das
or
ret
ret
rcl
loop
fdivr
jmp
call
stc
std
std
std
std
std
cld
std
cld
sti
cld
sti
std
sti
sti
cld
cli
cli
std
sti
sti
push
in
in
jmp
loope
jmp
fstp
fcmovnbe
aam
lret
sti
int
pop
push
push
mov
add
add
add
add
add
add
add
add
add
sbb
ret
sar
lret
leave
cld
fst
jmp
ljmp
cld
cld
cld
std
std
std
std
std
std
std
std
std
cld
std
cld
std
sti
cld
std
cli
cli
std
cld
cld
push
repnz
call
fstp
xlat
call
int
std
mov
mov
or
or
add
add
add
add
add
add
add
add
sub
js
mov
cli
ror
loopne
out
loope
jmp
in
repnz
out
cld
std
std
std
std
std
std
std
std
std
std
std
sti
std
cld
sti
std
sti
cli
std
sti
cld
push
hlt
hlt
jmp
loopne
jmp
fcmovu
fcom
sar
enter
into
enter
dec
dec
movsb
add
add
add
add
add
add
add
add
js
jae
into
mov
sti
sar
loope
out
loope
jmp
in
repnz
in
sti
cli
cli
cld
std
std
std
std
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
std
cld
cld
cld
cld
cld
std
std
std
push
repz
jmp
loopne
jmp
fcmovnu
fcmovbe
sar
int
cld
leave
ret
lcall
pop
add
add
add
add
add
add
add
add
or
or
mov
sar
mov
fcmovbe
aam
loopne
out
loope
ljmp
clc
div
cld
cld
cld
cld
cld
cld
std
cld
cld
cld
std
cld
std
cld
cld
cld
cld
cld
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cli
cli
cli
push
out
out
jmp
loop
jmp
jmp
fcmovnu
sar
ror
leave
std
lds
mov
sbb
sbb
add
add
add
add
add
add
add
add
sbb
mov
inc
sarb
sar
fsin
in
out
loop
jmp
in
lock
in
push
cmc
cmc
cli
stc
stc
sti
sti
sti
sti
cld
sti
cld
cld
cld
sti
sti
sti
cli
cli
cli
clc
div
push
lock
ljmp
jmp
fstp
fcompp
fsin
fcom
sar
into
leave
enter
mov
cmp
xor
add
add
add
add
add
add
add
es
lods
cld
leave
ret
lret
cli
ror
jmp
fcmovnu
in
fdivrp
out
call
out
out
ljmp
lock
in
out
jmp
jmp
out
call
jmp
fsin
fcmovnbe
aad
rcl
dec
mov
mov
mov
add
add
add
add
add
add
add
add
push
sbb
out
int3
mov
leave
ret
into
leave
enter
sar
fcmovbe
aam
fcompp
fdivr
loopne
loope
loope
loop
loope
loope
loope
fcos
fdivr
fst
xlat
fcmovbe
sar
aad
iret
dec
leave
enter
sar
stos
stos
sti
aaa
xor
add
add
add
or
or
outsb
push
mov
mov
dec
int3
mov
int
lret
leave
cld
aam
int
ror
std
fcom
sar
sar
sar
fcom
sar
ror
ror
int
ror
leave
cld
int3
mov
std
int3
lds
jg
sbb
pop
inc
add
add
es
jne
mov
test
dec
mov
call
leave
enter
dec
enter
enter
leave
dec
leave
enter
enter
dec
mov
decl
xor
add
add
add
add
add
add
add
sbb
sbb
inc
inc
inc
jg
jne
mov
mov
cmpsl
cmpsb
repnz
stos
divl
test
popf
jmp
xchg
xchg
fiadds
dec
dec
mov
and
inc
add
add
add
add
add
add
add
add
sbb
sbb
xor
arpl
cmp
insb
cmp
data16
and
add
sub
add
add
clc
add
pop
incb
add
add
clc
add
add
pop
push
add
add
ud0
loopne
add
add
inc
add
add
pop
inc
add
add
pop
jmp
add
add
pop
jmp
add
add
ud0
lock
add
pop
clc
add
add
aas
call
add
add
jmp
add
pop
inc
add
ud0
inc
add
ud0
incl
incl
incl
add
add
incb
add
add
incb
add
add
cld
add
add
cld
add
add
cld
add
add
jg
clc
add
add
jg
clc
add
add
jg
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
aas
push
add
add
aas
push
add
add
aas
push
add
add
aas
clc
add
add
jg
clc
add
add
jg
clc
add
add
jg
cld
add
add
cld
add
add
incb
add
add
incl
add
add
incl
add
add
incl
inc
add
ud0
jmp
add
pop
push
add
aas
cld
add
incl
add
jmp
pop
ljmp
add
add
add
rolb
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
pop
mov
add
mov
js
mov
jo
add
mov
mov
add
add
mov
or
mov
mov
clc
mov
add
mov
clc
mov
js
mov
clc
mov
add
pop
mov
decl
add
add
mov
clc
mov
add
decl
add
mov
clc
mov
add
add
mov
decl
mov
decl
add
add
mov
clc
mov
add
mov
js
pushl
mov
clc
mov
add
jo
add
incl
add
pop
clc
mov
add
add
mov
add
ud0
pushl
add
pop
add
or
add
add
pushl
add
add
decl
add
add
add
add
incl
add
mov
add
add
add
push
add
add
add
add
add
mov
add
pop
push
add
add
add
pop
mov
or
add
add
clc
add
add
add
add
jo
add
mov
add
add
incl
add
add
add
pop
mov
add
add
add
add
jg
pushl
add
add
add
mov
add
pop
mov
add
add
add
push
add
add
add
add
mov
add
mov
add
add
add
pop
push
add
add
add
add
mov
add
add
add
add
or
incl
add
add
add
jo
mov
ja
add
incl
ja
add
add
ja
jo
push
add
ja
ja
js
pop
mov
ja
ja
jo
incl
ja
ja
ja
or
or
ja
add
incl
ja
pop
mov
add
add
xchg
ja
ja
jo
clc
add
ja
ja
mov
add
add
xchg
ja
ja
add
incl
ja
mov
add
js
pop
ja
ja
or
clc
jo
ja
ja
mov
add
add
add
clc
add
ja
jo
addb
add
pop
incl
mov
add
add
clc
jo
add
mov
decl
add
mov
decl
add
add
mov
clc
mov
add
add
mov
decl
pop
mov
decl
pop
mov
decl
pop
mov
decl
pop
mov
decl
pop
mov
decl
pop
mov
decl
pop
mov
decl
pop
mov
decl
pop
mov
decl
pop
mov
decl
add
decl
add
decl
add
clc
mov
mov
clc
mov
js
mov
clc
mov
js
mov
clc
mov
or
clc
mov
or
decl
add
or
decl
add
pop
mov
decl
add
add
clc
mov
add
mov
clc
mov
add
js
mov
clc
mov
add
or
decl
or
decl
pop
mov
clc
mov
mov
decl
add
js
mov
decl
add
or
clc
mov
add
mov
decl
js
mov
clc
mov
add
add
mov
decl
add
mov
clc
mov
add
mov
clc
mov
add
pop
mov
clc
mov
add
mov
clc
mov
mov
add
mov
mov
add
add
mov
mov
mov
add
js
mov
mov
jo
add
mov
mov
add
add
js
mov
xchg
add
ja
mov
clc
inc
pop
incl
pop
incb
add
cld
add
clc
add
jg
jmp
add
aas
jmp
add
pop
inc
add
ud0
incl
incl
add
pop
incb
add
add
cld
add
add
cld
add
add
clc
add
add
push
add
add
jg
push
add
add
aas
jmp
add
add
aas
inc
add
add
pop
inc
add
add
ud0
incl
ud0
incl
add
add
pop
incl
add
add
pop
incb
add
add
add
incb
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
clc
add
add
add
clc
add
add
add
jg
push
add
add
add
jg
push
add
add
add
jg
push
add
add
add
aas
jmp
add
add
add
aas
jmp
add
add
add
aas
jmp
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
inc
add
add
add
ud0
inc
add
add
add
ud0
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
jmp
add
add
add
pop
jmp
add
add
add
aas
jmp
add
add
add
aas
push
add
add
add
aas
push
add
add
add
jg
push
add
add
add
jg
clc
add
add
add
jg
clc
add
add
add
clc
add
add
add
cld
add
add
add
cld
add
add
add
incb
add
add
add
incb
add
add
add
incl
add
add
pop
incl
ud0
inc
add
add
ud0
inc
add
add
pop
jmp
add
add
aas
push
add
add
jg
cld
add
add
incb
add
add
incl
add
pop
inc
add
pop
clc
add
jg
incl
pop
ljmp
add
add
add
rolb
add
add
add
add
add
and
add
add
add
addb
addb
add
rol
rcr
add
lret
add
add
or
push
add
or
add
or
add
push
push
add
adc
add
pop
pop
add
sbb
add
push
push
add
and
add
es
sub
add
cs
xor
add
xor
add
ss
cmp
add
cmp
add
add
inc
add
inc
add
dec
add
dec
add
push
add
push
add
pop
add
pop
add
pop
add
popa
add
arpl
push
add
imul
jo
outsl
add
jo
jp
jae
jl
ja
jns
js
cmpb
addl
xchg
mov
mov
xchg
nop
popl
xchg
xchg
nop
add
cwtl
xchg
add
fwait
cltd
add
mov
mov
add
test
test
add
mov
add
mov
mov
sarb
add
sarb
enter
into
enter
leave
enter
movl
aad
into
add
rcl
add
rcl
add
fcom
add
xlat
fadds
fcompp
fadds
loopne
fiaddl
in
filds
loop
loop
call
call
call
add
ljmp
repnz
repnz
clc
testb
idiv
add
clc
clc
add
loope
add
loop
add
call
call
add
ljmp
cmc
icebp
icebp
add
repnz
clc
testb
idiv
add
clc
clc
add
cltd
pop
add
add
add
add
cltd
pop
add
cmp
add
adc
hlt
pop
or
in
or
jo
adc
add
add
lods
xchg
dec
add
adc
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
push
or
add
adc
pop
add
sbb
add
push
push
add
pop
pop
add
pop
push
add
and
add
and
add
and
es
daa
add
cs
das
xor
inc
aas
aas
add
inc
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
add
add
jno
ja
jne
jp
js
jge
js
jge
jnp
cmpb
mov
mov
xchg
xchg
xchg
add
xchg
xchg
add
movsb
add
lods
add
mov
roll
les
ror
lret
add
int3
lret
add
into
int
xlat
rcl
add
aad
flds
flds
fiaddl
loopne
fildl
loope
fiadds
jecxz
filds
out
filds
ljmp
add
call
jmp
out
in
in
add
lock
add
lock
icebp
icebp
add
icebp
icebp
add
repz
repnz
repz
repz
hlt
repz
hlt
hlt
add
cmc
cmc
add
div
add
div
add
div
add
div
add
div
add
clc
testl
sti
clc
clc
add
stc
stc
add
stc
clc
add
cli
cli
add
cli
cli
add
sti
cli
add
cld
sti
add
cld
sti
add
std
std
add
std
add
incb
incb
incb
incb
incl
incl
loop
faddl
jecxz
fldl
in
faddl
in
fldl
in
fiadds
in
filds
in
filds
out
filds
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
dec
cwtl
test
add
adc
add
adc
cmp
inc
aas
cmp
adc
or
inc
dec
inc
inc
dec
inc
sub
add
add
cmp
inc
dec
dec
dec
dec
dec
inc
inc
dec
inc
and
add
add
dec
inc
dec
dec
dec
dec
push
dec
dec
dec
dec
inc
dec
dec
xor
add
dec
inc
dec
dec
dec
push
push
push
push
push
push
push
dec
dec
dec
inc
dec
cmp
add
or
dec
push
push
push
push
push
push
push
push
push
push
push
dec
dec
inc
dec
aas
adc
cmp
dec
push
push
push
push
push
pop
pop
pop
pop
pop
push
push
push
push
push
dec
dec
dec
inc
adc
add
add
dec
inc
dec
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
dec
dec
dec
inc
adc
xor
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
dec
dec
dec
inc
sub
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
dec
dec
dec
cmp
add
dec
inc
dec
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
dec
inc
dec
xor
add
add
dec
dec
dec
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
dec
inc
push
daa
add
add
dec
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
dec
inc
dec
sbb
cmp
dec
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
dec
dec
inc
and
dec
dec
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
dec
dec
cmp
add
dec
inc
dec
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
dec
inc
dec
and
ds
pop
push
push
push
pop
pop
pop
pop
pusha
gs
pop
pop
pop
pop
pop
pop
bound
bound
pop
pop
push
push
push
dec
dec
dec
and
dec
dec
push
push
push
pop
pop
bound
cmp
push
bound
pop
popa
pop
sub
pop
bound
pop
push
push
push
dec
dec
xor
add
add
dec
push
push
push
pop
bound
and
add
add
add
pop
pusha
pop
bound
add
add
or
pop
push
push
push
dec
dec
dec
sbb
add
dec
push
push
push
pop
pop
aaa
sbb
add
add
add
pop
pop
bound
popa
pop
and
add
add
add
adc
push
dec
dec
inc
sbb
dec
push
pop
pop
inc
sbb
and
pop
popa
popa
pop
gs
adc
pop
push
push
dec
dec
add
add
dec
dec
dec
pop
push
daa
add
add
gs
popa
popa
popa
pop
gs
add
add
dec
inc
add
sbb
dec
pop
inc
push
add
add
popa
popa
popa
bound
add
add
aaa
pop
push
dec
dec
sub
cmp
pop
cmp
add
add
add
add
sbb
popa
popa
popa
popa
sub
add
dec
dec
inc
sbb
push
aaa
or
add
bound
gs
add
add
dec
dec
daa
add
add
inc
push
prefetchw
add
add
add
add
push
gs
bound
bound
bound
add
add
inc
inc
add
add
dec
adc
add
add
or
add
bound
bound
xor
add
add
add
add
dec
and
xor
add
movups
adc
adc
adc
add
pop
bound
bound
bound
pop
adc
adc
adc
or
add
dec
dec
add
add
add
movups
sbb
sbb
sbb
sbb
adc
gs
bound
bound
bound
popa
xor
adc
sbb
sbb
sbb
sbb
xor
sbb
add
and
and
sbb
sbb
sbb
sbb
or
bound
bound
bound
bound
adc
sbb
sbb
sbb
sbb
dec
xor
add
cmp
adc
pop
sbb
sbb
adc
das
gs
bound
bound
arpl
bound
gs
add
sbb
sbb
pop
push
or
add
dec
push
sub
pop
pop
pop
pop
pop
pop
sbb
pop
bound
bound
arpl
arpl
bound
add
pop
pop
pop
pop
pop
and
or
add
dec
pop
sbb
and
and
and
and
add
dec
gs
bound
bound
arpl
bound
popa
bound
add
and
and
and
adc
inc
dec
xor
add
dec
inc
adc
and
and
and
add
pop
popa
popa
bound
arpl
gs
bound
push
adc
pop
and
and
and
and
sbb
xor
add
add
xor
es
or
popa
popa
bound
arpl
gs
bound
pop
adc
sbb
es
add
add
dec
push
sub
sub
sbb
push
inc
gs
popa
popa
bound
bound
arpl
gs
bound
pop
gs
adc
sub
es
sub
adc
dec
dec
sub
add
sub
pop
movaps
sub
sub
ltr
pop
gs
popa
popa
popa
popa
bound
fs
bound
pop
gs
and
or
sub
sub
adc
cmp
add
cmp
dec
sbb
xor
das
es
pop
gs
pusha
popa
popa
popa
bound
bound
gs
bound
popa
popa
popa
pop
bound
adc
or
xor
cmovb
add
add
dec
adc
and
sldt
movaps
bound
pusha
popa
popa
bound
bound
gs
bound
popa
popa
popa
pop
pop
gs
xor
add
or
cmp
add
add
dec
adc
add
bound
popa
pusha
popa
popa
popa
popa
popa
bound
gs
bound
popa
pusha
pop
pop
pop
popa
gs
inc
es
cmp
push
add
dec
dec
push
cmp
inc
dec
pop
gs
pop
pop
pusha
popa
popa
popa
bound
bound
gs
bound
popa
pop
pop
pop
pop
pop
pusha
gs
dec
inc
cmp
dec
dec
dec
add
add
add
dec
dec
push
pop
pop
pusha
pusha
pop
pop
pop
pop
pop
pop
pop
popa
popa
popa
popa
popa
popa
popa
bound
bound
gs
bound
popa
popa
pop
pusha
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
dec
dec
das
add
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
popa
bound
bound
gs
popa
popa
popa
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
dec
dec
xor
sub
pop
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
popa
bound
gs
gs
popa
pusha
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
dec
dec
cmp
xor
pop
push
push
pop
pop
pop
pop
pop
pop
popa
bound
gs
gs
arpl
bound
pop
pop
pop
pop
pop
push
push
dec
dec
add
add
add
dec
dec
push
push
pop
pop
pop
pop
popa
bound
gs
gs
arpl
bound
bound
pop
pop
pop
push
push
dec
dec
inc
add
pop
pop
pop
pop
popa
bound
arpl
gs
gs
bound
bound
pop
pop
pop
push
push
dec
dec
inc
add
pop
pop
pop
pop
popa
bound
gs
gs
gs
bound
bound
pop
pop
push
push
dec
dec
inc
add
pop
pop
pop
pop
bound
bound
gs
gs
bound
bound
pop
pop
pop
pop
push
push
dec
dec
inc
add
dec
dec
push
push
pop
pop
pop
pop
popa
arpl
arpl
gs
gs
bound
bound
popa
pop
pop
pop
push
push
dec
dec
inc
add
dec
dec
push
push
pop
pop
pop
pop
bound
gs
gs
gs
bound
bound
pop
pop
push
push
dec
dec
add
add
add
dec
push
push
pop
pop
pop
pop
popa
bound
gs
gs
gs
bound
popa
pop
pop
pop
push
push
dec
dec
cmp
es
pop
push
push
pop
pop
pop
pop
bound
gs
gs
gs
bound
popa
pop
pop
pop
push
push
dec
dec
xor
add
pop
dec
push
push
pop
pop
pop
pop
bound
gs
gs
gs
bound
popa
pop
pop
pop
push
push
dec
dec
xor
sbb
push
push
pop
pop
pop
pop
popa
bound
gs
gs
gs
bound
pop
pop
pop
pop
push
push
dec
dec
sub
add
dec
push
pop
pop
pop
pop
popa
gs
gs
gs
bound
pop
pop
pop
pop
push
push
dec
dec
and
add
push
push
pop
pop
pop
popa
gs
gs
gs
bound
pop
pop
push
push
push
dec
dec
sbb
add
dec
dec
push
push
pop
pop
pop
pop
gs
gs
gs
pop
pop
pop
push
push
push
dec
inc
add
add
dec
push
push
pop
pop
pop
pop
gs
gs
gs
bound
pop
pop
pop
push
push
dec
dec
inc
add
add
pop
push
push
pop
pop
pop
pop
bound
gs
gs
gs
popa
pop
pop
pop
push
push
dec
dec
cmp
add
sbb
push
push
push
pop
pop
pop
bound
gs
gs
gs
pop
pop
push
push
dec
dec
sub
add
add
dec
push
push
pop
pop
pop
pop
gs
gs
gs
pop
pop
push
push
push
dec
dec
sbb
add
add
dec
dec
push
push
pop
pop
pop
pop
gs
gs
gs
pop
pop
pop
push
push
dec
dec
dec
add
dec
push
push
pop
pop
pop
pop
bound
gs
gs
gs
pop
pop
pop
push
push
dec
dec
cmp
add
dec
push
push
pop
pop
pop
pop
gs
gs
gs
pop
push
push
push
dec
dec
and
add
dec
dec
push
push
pop
pop
pop
pop
bound
gs
gs
gs
pop
pop
pop
push
push
dec
dec
dec
add
add
pop
dec
push
push
push
pop
pop
pop
popa
gs
gs
gs
pop
pop
pop
push
push
dec
dec
cmp
add
add
dec
push
push
pop
pop
pop
pop
gs
gs
gs
pop
pop
pop
push
push
dec
dec
dec
and
add
add
dec
dec
push
push
pop
pop
pop
pop
pop
gs
gs
gs
pop
pop
push
push
dec
dec
inc
add
push
pop
pop
pop
pop
popa
gs
gs
gs
pop
pop
pop
push
push
push
dec
dec
add
ds
dec
push
push
pop
pop
pop
pop
pop
gs
gs
gs
pop
pop
pop
pop
push
push
dec
dec
dec
add
add
push
pop
pop
pop
pop
pop
gs
gs
pop
pop
pop
push
push
push
dec
dec
sub
cmp
push
push
push
pop
pop
pop
pop
popa
gs
gs
pop
pop
pop
push
push
push
dec
dec
inc
add
dec
dec
dec
push
push
pop
pop
pop
pop
pop
popa
gs
gs
pop
pop
pop
push
push
push
dec
dec
dec
and
add
dec
dec
dec
push
push
pop
pop
pop
pop
pop
pop
gs
gs
pop
pop
push
push
push
dec
dec
dec
cmp
add
add
dec
dec
dec
push
push
push
pop
pop
pop
pop
pop
gs
gs
pop
pop
pop
pop
push
push
push
push
dec
inc
inc
add
inc
inc
dec
dec
push
push
push
pop
pop
pop
pop
pop
popa
gs
bound
pop
pop
pop
push
push
push
push
dec
inc
dec
pop
add
sbb
dec
dec
push
push
push
pop
pop
pop
pop
pop
pop
popa
gs
pop
pop
pop
pop
pop
pop
push
push
push
push
dec
inc
dec
daa
pop
inc
inc
dec
dec
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
dec
dec
inc
dec
sub
add
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
dec
dec
inc
dec
sub
ds
inc
pop
dec
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
dec
dec
dec
dec
inc
and
add
xor
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
cmp
add
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
inc
and
pop
cmp
dec
dec
dec
dec
pop
dec
dec
dec
dec
dec
dec
dec
pop
dec
dec
dec
dec
dec
inc
cmp
add
sub
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
cmp
pop
add
add
and
xor
cmp
cmp
xor
and
add
clc
inc
pop
incl
pop
incb
add
cld
add
clc
add
jg
jmp
add
aas
jmp
add
pop
inc
add
ud0
incl
incl
add
pop
incb
add
add
cld
add
add
cld
add
add
clc
add
add
push
add
add
jg
push
add
add
aas
jmp
add
add
aas
inc
add
add
pop
inc
add
add
ud0
incl
ud0
incl
add
add
pop
incl
add
add
pop
incb
add
add
add
incb
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
clc
add
add
add
clc
add
add
add
jg
push
add
add
add
jg
push
add
add
add
jg
push
add
add
add
aas
jmp
add
add
add
aas
jmp
add
add
add
aas
jmp
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
inc
add
add
add
ud0
inc
add
add
add
ud0
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
jmp
add
add
add
pop
jmp
add
add
add
aas
jmp
add
add
add
aas
push
add
add
add
aas
push
add
add
add
jg
push
add
add
add
jg
clc
add
add
add
jg
clc
add
add
add
clc
add
add
add
cld
add
add
add
cld
add
add
add
incb
add
add
add
incb
add
add
add
incl
add
add
pop
incl
ud0
inc
add
add
ud0
inc
add
add
pop
jmp
add
add
aas
push
add
add
jg
cld
add
add
incb
add
add
incl
add
pop
inc
add
pop
clc
add
jg
incl
pop
ljmp
add
add
add
rolb
add
add
add
add
add
insb
add
adc
sbb
adc
add
sbb
sbb
push
cltd
xchg
xchg
lods
cmpsl
movsl
mov
cmpsl
scas
test
mov
arpl
and
femms
push
gs
pusha
mov
test
mov
sarb
mov
mov
jae
and
add
aaa
xor
lret
mov
mov
mov
mov
lds
mov
mov
stos
push
push
push
bound
mov
mov
sarb
into
enter
enter
int
lret
enter
mov
mov
adc
sldt
add
ret
mov
leave
enter
aam
into
ror
rcl
rcl
aad
into
ror
lret
iret
lret
mov
mov
lahf
fwait
cltd
sbb
pfrcp
xchg
xchg
into
enter
mov
ret
leave
ror
int3
rcl
rcr
aad
xlat
xlat
fst
xlat
fcmovbe
rcl
rcl
ror
into
iret
leave
lret
ret
mov
shrl
add
add
lds
ret
ror
lret
iret
rcr
xlat
fabs
fcmovnu
loop
fucom
fstp
loop
fucom
fcomp
fcmovbe
aam
rcl
ror
lret
int3
mov
sarl
sub
cwtl
xchg
xchg
lret
mov
ror
int3
rcl
fcmovnbe
aad
loop
fsub
in
loopne
loope
out
loope
loope
out
loopne
loop
fstp
fcmovu
fcom
rcl
into
int
enter
mov
scas
scas
and
and
add
xchg
mov
mov
ror
int3
xlat
rcl
loopne
in
loopne
loop
jmp
in
in
jmp
jecxz
jecxz
out
loope
loope
xlat
xlat
rcl
into
int3
into
enter
mov
test
add
je
mov
mov
ror
int3
fcom
rcr
fcom
loope
fnsetpm(287
out
loope
in
ljmp
out
in
out
in
out
in
out
jmp
in
jecxz
call
loopne
fstp
fcompp
fcomp
rcl
ror
int
enter
mov
pushf
pushf
add
pop
pop
pop
iret
mov
mov
int3
int3
fcom
rcr
fcom
loope
frstpm(287
out
loop
jecxz
in
out
in
call
out
jmp
out
out
out
call
in
out
jmp
in
loop
out
fstp
fcomp
rcl
aam
into
into
enter
mov
mov
aaa
xor
sarb
lret
lret
xlat
rcl
fstp
loope
fsub
loopne
call
in
out
in
call
out
jmp
out
jmp
out
call
in
out
in
out
jmp
in
jecxz
out
loopne
fstp
fcompp
fcomp
aam
ror
int3
int
mov
imul
add
mov
lret
lret
rcr
xlat
loop
fnsetpm(287
out
loop
in
jmp
out
call
out
ljmp
ljmp
lock
call
out
jmp
in
jecxz
out
loopne
fstp
fcomp
rcl
ror
int3
lret
mov
mov
cmp
add
rol
mov
rcl
fcmovnbe
aad
fcmovnu
in
fsubp
loope
jmp
out
jmp
out
jmp
out
jmp
out
ljmp
ljmp
out
ljmp
call
in
jmp
fst
fcom
rcl
lret
lret
enter
mov
popa
pop
pop
iret
enter
mov
iret
iret
fcmovnbe
aad
fcmovu
in
fsubp
loop
ljmp
call
out
jmp
out
ljmp
jmp
in
jmp
in
in
lock
ljmp
out
jmp
in
call
in
in
jmp
loopne
fcmovnu
fst
xlat
rcl
ror
leave
ret
mov
cwtl
xchg
xchg
add
mov
mov
into
int
aam
fcompp
out
loopne
in
jmp
jecxz
in
in
call
out
ljmp
in
icebp
in
jmp
in
jmp
in
in
icebp
in
in
out
jmp
in
ljmp
call
in
ljmp
loope
in
fsubp
fcmovnu
fcmovnbe
aad
ror
into
enter
mov
push
push
add
add
mov
lret
lret
rcr
xlat
fsub
in
loope
jmp
out
lock
sti
stc
std
std
stc
stc
std
div
cli
stc
div
lock
in
icebp
in
in
icebp
in
out
repnz
in
lock
jmp
out
out
stc
cli
sti
div
std
clc
idiv
std
sti
sti
sti
stc
hlt
repz
jmp
out
fstp
aam
ror
int
mov
bound
int3
mov
mov
aad
iret
fabs
jmp
out
hlt
hlt
stc
repnz
rcl
cmpsb
mov
push
push
push
dec
dec
dec
pop
pop
pop
rcl
cli
div
out
ljmp
jmp
icebp
icebp
in
out
insb
push
inc
inc
inc
push
push
push
push
addr16
xchg
xchg
lret
repnz
in
std
div
icebp
ljmp
fcmovu
xlat
xlat
xlat
rcl
ror
leave
les
xchg
lea
add
mov
lret
aam
int
aad
fcmovnbe
aad
loope
stc
hlt
hlt
call
mov
adc
pop
push
pop
lret
cld
sti
out
jmp
hlt
lock
icebp
in
jmp
repz
jmp
pop
pop
push
or
or
cmp
sti
cmc
hlt
in
out
xlat
fcmovnbe
aad
iret
iret
int
mov
mov
inc
inc
add
add
mov
lret
lret
rcr
repz
in
call
nop
xor
add
add
add
add
add
xor
das
repnz
in
clc
cmc
hlt
icebp
out
out
repz
lock
out
in
std
std
pop
push
push
add
add
add
add
pop
push
push
jp
ja
rcl
div
lock
fcmovnbe
rcl
ror
int3
lret
sarl
add
add
xor
mov
into
enter
lret
loopne
f2xm1
ljmp
xor
add
add
add
add
add
add
add
add
repnz
out
repz
out
hlt
icebp
icebp
hlt
icebp
icebp
icebp
in
in
decl
add
add
add
add
add
add
add
and
mov
loope
ror
int
leave
leave
lds
fs
pusha
add
mov
leave
enter
fcmovnbe
aam
gs
add
add
add
add
add
add
add
add
push
in
in
cmc
repnz
cmc
icebp
repnz
repnz
out
inc
ret
add
add
add
add
add
add
inc
inc
inc
ret
mov
ror
int3
lret
ret
mov
aas
cmp
ret
int3
mov
loope
mov
mov
das
add
add
add
push
push
push
add
add
or
or
into
into
cld
cld
repz
lock
repz
repnz
repnz
icebp
icebp
stc
div
lock
in
sub
sub
add
add
push
add
add
adc
out
loopne
int3
lret
ret
mov
outsb
push
add
add
les
cltd
xchg
xchg
adc
adc
add
or
or
add
add
add
add
add
add
add
inc
clc
cmc
cmc
clc
hlt
repz
repnz
repnz
icebp
div
repnz
repz
lock
outsl
insl
insl
add
add
add
add
add
add
add
or
add
add
insb
fxch
mov
mov
ss
mov
fst
xchg
xchg
nop
or
or
pop
pop
or
or
add
add
add
add
add
add
add
add
mov
lock
repnz
hlt
repz
hlt
repz
repz
clc
hlt
repz
icebp
lock
mov
add
add
add
add
add
add
add
add
or
or
or
add
imul
mov
imul
add
mov
movsl
movsl
adc
adc
or
femms
push
pop
push
push
add
add
add
add
add
add
add
adc
aam
sti
sti
cmc
lock
repz
cmc
stc
repz
hlt
cmc
stc
repz
icebp
sti
div
icebp
lock
aaa
add
add
add
add
add
add
add
add
add
add
femms
push
add
add
aam
mov
add
mov
mov
das
sub
push
or
add
add
add
add
add
add
pop
pop
or
or
or
or
adc
adc
add
pusha
pop
pop
sti
cld
cld
cmc
icebp
lock
repz
hlt
hlt
stc
hlt
cmc
stc
cmc
cmc
cli
cmc
hlt
clc
cmc
cmc
clc
repz
out
out
decl
push
push
push
or
or
push
push
add
add
add
add
add
push
add
push
push
adc
adc
leave
ret
pop
pop
pop
add
add
ror
arpl
add
sbb
pop
adc
sbb
and
and
and
daa
sub
sub
sub
sub
sub
or
add
hlt
out
out
stc
hlt
hlt
cli
cmc
cmc
stc
cmc
cmc
stc
cmc
cmc
cli
cmc
cmc
stc
div
cli
cmc
cmc
div
icebp
cld
stc
stc
loop
loop
sbb
add
add
sub
sub
sub
and
and
and
push
push
sbb
sbb
adc
or
or
pop
push
push
push
push
or
push
cmp
cmp
mov
cmpsb
cmpsb
add
add
lods
cmpsb
cmpsb
pop
adc
sbb
sbb
cmp
cmp
ss
ss
xor
xor
xor
xor
xor
xor
xor
das
das
das
xor
xor
and
push
push
push
std
cld
div
icebp
clc
repz
hlt
hlt
stc
cmc
idiv
cmc
hlt
cli
div
cli
div
stc
cmc
idiv
cmc
idiv
cmc
cmc
div
lock
incl
add
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
sbb
or
pop
test
ror
int3
sarl
push
push
push
lds
pop
push
push
or
pop
cmp
aaa
inc
inc
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
aaa
aaa
aaa
aaa
aaa
cmp
cmp
cmp
or
or
or
int3
int3
std
cld
cld
hlt
lock
hlt
hlt
stc
cmc
cmc
clc
hlt
cmc
cli
div
sti
clc
cmc
sti
clc
cmc
cli
div
stc
cmc
cmc
stc
cmc
idiv
hlt
hlt
sti
clc
clc
jmp
ljmp
xor
xor
cmp
aaa
aaa
aaa
aaa
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
inc
inc
inc
inc
adc
adc
xor
mov
test
add
cltd
xchg
xchg
iret
enter
lods
sbb
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
and
and
add
jl
jp
push
icebp
icebp
clc
hlt
hlt
clc
cmc
cmc
stc
cmc
idiv
div
sti
clc
idiv
clc
idiv
clc
idiv
clc
cmc
cli
div
stc
cmc
cmc
cli
cmc
cmc
div
icebp
ljmp
add
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
xor
or
or
leave
mov
add
add
mov
jl
jbe
pop
push
ds
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
push
push
push
cmp
add
xor
stc
div
cmc
icebp
icebp
stc
hlt
hlt
stc
hlt
hlt
cli
div
sti
clc
cmc
cld
stc
idiv
idiv
sti
clc
clc
sti
clc
clc
sti
clc
cmc
cli
div
stc
div
clc
hlt
hlt
div
repz
sti
sti
bound
add
add
cs
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
dec
dec
dec
or
or
dec
lret
ret
dec
dec
add
add
push
enter
rol
inc
inc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
push
push
push
dec
dec
dec
push
push
push
adc
int3
std
std
hlt
out
in
clc
repz
hlt
repz
cmc
hlt
cli
div
cli
div
sti
clc
clc
sti
clc
clc
cld
stc
idiv
clc
clc
cld
stc
idiv
div
clc
cmc
cmc
cli
cmc
cmc
cmc
lock
div
jmp
ljmp
inc
inc
inc
pop
pop
pop
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
and
and
push
mov
mov
ret
ret
mov
add
pushf
xchg
xchg
lret
mov
lods
sbb
sbb
popa
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
popa
popa
popa
push
push
push
adc
adc
stos
push
in
in
div
repz
hlt
stc
hlt
hlt
cli
div
stc
idiv
sti
clc
clc
cld
stc
idiv
clc
stc
sti
clc
clc
sti
stc
clc
sti
clc
stc
sti
clc
idiv
div
stc
hlt
hlt
stc
hlt
hlt
hlt
out
out
rcl
rcrl
sbb
add
add
dec
arpl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
arpl
inc
inc
aas
or
or
mov
add
mov
xchg
lea
inc
push
imul
popa
bound
popa
pusha
pusha
pusha
pusha
arpl
insb
insb
insb
push
push
push
or
pop
mov
push
out
out
div
icebp
div
repz
repz
cli
hlt
cmc
stc
div
cli
clc
idiv
clc
idiv
stc
clc
sti
clc
clc
cld
stc
stc
cld
clc
clc
cld
clc
stc
sti
clc
clc
cli
div
stc
cmc
cmc
stc
hlt
hlt
clc
repz
out
inc
les
sbb
add
inc
inc
inc
imul
pusha
pusha
pusha
pusha
pop
bound
bound
bound
addr16
pop
pop
or
popa
ror
lret
mov
aas
cmp
sarl
push
pop
pop
pop
outsb
insl
insl
addr16
imul
jo
imul
cmp
rsm
test
push
out
out
cmc
icebp
lock
repnz
repz
hlt
cmc
stc
cmc
cmc
cli
div
cli
clc
clc
cli
idiv
cld
stc
idiv
clc
stc
cld
stc
stc
cld
stc
stc
sti
stc
clc
cli
div
sti
div
cli
div
clc
cmc
cmc
stc
repnz
repnz
in
dec
lret
sub
add
add
sub
gs
jno
imul
addr16
insb
insb
imul
sbb
sbb
cmp
int3
mov
outsl
outsl
add
imul
lret
dec
dec
dec
adc
adc
jo
outsl
jo
outsl
jbe
jne
jns
jno
jno
push
push
adc
add
xor
push
in
in
hlt
lock
repnz
icebp
div
repz
cmc
hlt
stc
div
cli
div
stc
idiv
sti
clc
clc
sti
clc
clc
cli
idiv
sti
stc
stc
cld
stc
clc
sti
clc
clc
cld
stc
stc
cli
div
stc
cmc
hlt
stc
hlt
idiv
repz
repnz
icebp
lock
in
std
loope
ficoms
push
add
add
or
inc
inc
inc
insl
insl
insl
js
js
jbe
jno
jno
outsb
outsb
jne
jae
sub
and
mov
lahf
popf
add
ror
xor
xor
es
addl
js
data16
inc
inc
sbb
sbb
add
adc
adc
js
ljmp
jmp
lock
cmc
icebp
icebp
cmc
icebp
icebp
div
repnz
repz
clc
hlt
cmc
cli
cmc
cmc
stc
div
cli
div
cld
stc
idiv
stc
stc
sti
clc
clc
cld
stc
stc
sti
stc
stc
cli
div
sti
clc
clc
sti
clc
idiv
div
clc
cmc
cmc
stc
hlt
hlt
div
repnz
icebp
cmc
icebp
icebp
out
in
jmp
div
sti
div
cwtl
xchg
xchg
and
and
add
cmp
pop
ja
jne
jge
mov
push
adc
mov
lods
into
leave
enter
add
les
and
dec
xor
xor
adc
add
add
add
adc
adc
insb
ror
int3
clc
repz
hlt
lock
cmc
icebp
out
cmc
icebp
icebp
div
repnz
hlt
repz
hlt
hlt
stc
cmc
cmc
cli
div
cli
div
sti
clc
clc
sti
clc
clc
std
cli
cli
cld
cli
cli
std
stc
stc
cld
stc
stc
sti
clc
clc
cli
div
cld
stc
idiv
clc
idiv
div
stc
hlt
hlt
div
repz
repnz
lock
lock
repnz
out
loopne
fildl
add
add
add
or
sub
dec
cmp
adc
push
movsb
lahf
lahf
ror
lret
mov
mov
and
pop
add
add
pop
pop
mov
and
push
pushf
cltd
cwtl
fcos
sti
sti
cld
div
out
jmp
icebp
in
in
hlt
lock
lock
hlt
repnz
icebp
icebp
div
repnz
repz
hlt
stc
cmc
cmc
stc
cmc
cmc
sti
div
cli
stc
stc
cld
stc
stc
cld
stc
stc
cld
cli
cli
std
clc
clc
cld
stc
stc
sti
clc
clc
sti
clc
clc
sti
clc
idiv
div
stc
cmc
cmc
stc
hlt
hlt
clc
repz
icebp
cmc
lock
repz
out
repz
out
lock
jmp
jmp
cli
stc
jmp
in
test
sub
sub
adc
or
or
add
mov
lret
mov
add
xor
mov
lret
lret
lahf
xchg
xchg
xchg
scas
stos
stos
enter
loop
clc
clc
std
cld
cli
repz
lock
lock
out
repz
cmc
icebp
lock
repnz
cmc
repnz
clc
repz
hlt
hlt
clc
hlt
hlt
stc
cmc
cmc
cli
div
cld
div
sti
clc
clc
cld
stc
stc
cld
cli
cli
std
stc
stc
std
stc
stc
std
stc
stc
cld
clc
clc
sti
clc
stc
cld
stc
clc
sti
clc
idiv
div
stc
cmc
cmc
clc
repz
div
lock
icebp
icebp
repz
in
repnz
in
icebp
in
jmp
jmp
cmc
lock
cli
stc
stc
stc
out
call
mov
scas
sahf
lcall
enter
sarb
add
dec
mov
ror
lret
fcomip
jmp
cmc
lock
div
out
icebp
in
in
in
out
in
out
out
jmp
repz
in
hlt
out
out
repz
lock
icebp
lock
repnz
div
repnz
repnz
repz
repz
hlt
hlt
cli
div
sti
clc
clc
cli
div
sti
clc
clc
sti
stc
stc
cld
clc
clc
stc
stc
cld
clc
clc
sti
div
cli
idiv
sti
clc
idiv
div
stc
cmc
hlt
clc
hlt
hlt
div
repz
icebp
icebp
hlt
repnz
out
out
repz
repnz
in
icebp
in
in
icebp
in
in
lock
out
ljmp
in
jmp
hlt
out
out
icebp
jmp
ljmp
sarb
js
add
fs
pop
mov
ror
lret
fcom
rcr
fcom
jecxz
fucom
loope
ljmp
jmp
icebp
in
jmp
in
in
repnz
in
repnz
out
repz
out
hlt
out
out
hlt
lock
hlt
icebp
lock
repz
repz
hlt
repz
hlt
hlt
stc
cmc
cmc
sti
clc
clc
cld
stc
stc
sti
cli
cli
cld
cli
cli
cld
sti
sti
std
cli
cli
sti
sti
std
sti
sti
cld
cli
cli
sti
stc
stc
cld
cli
cli
sti
stc
stc
cli
div
stc
div
clc
hlt
hlt
div
repz
repnz
hlt
lock
in
icebp
in
in
lock
jmp
jmp
out
ljmp
ljmp
out
loope
fstp
rcl
aam
into
leave
ret
ret
mov
add
ja
jb
sarb
int3
aad
out
loopne
out
in
call
out
ljmp
in
repz
out
hlt
icebp
icebp
div
icebp
div
repz
cmc
cmc
cli
div
sti
div
std
clc
clc
cld
cli
cli
std
cli
cli
sti
sti
std
std
std
std
std
cld
sti
std
sti
sti
std
stc
stc
cld
stc
clc
cli
div
clc
div
clc
hlt
repz
icebp
repz
repnz
in
icebp
in
in
lock
out
out
jmp
in
loop
loop
fstp
xlat
aad
into
lret
mov
popf
xchg
xchg
add
add
rol
rcl
int
aad
fstp
out
loope
in
in
call
hlt
out
out
div
icebp
clc
hlt
hlt
cli
div
cli
clc
clc
sti
clc
stc
sti
clc
clc
cld
stc
stc
cld
sti
cli
std
cli
cli
sti
sti
cld
cld
cld
cld
std
std
std
std
cld
std
cld
cld
cld
cld
cld
sti
cli
cld
stc
stc
sti
clc
stc
sti
clc
clc
cli
clc
idiv
div
clc
cmc
hlt
clc
hlt
repz
icebp
hlt
icebp
lock
in
out
call
out
loope
fstp
xlat
ror
lret
mov
sarb
add
mov
into
into
aad
out
loopne
in
out
jmp
cli
div
stc
div
sti
div
cld
clc
clc
sti
stc
clc
cld
cli
stc
sti
clc
stc
cld
stc
clc
sti
cli
stc
cld
stc
stc
cli
cli
std
sti
sti
sti
sti
cld
cld
std
std
std
std
std
std
std
cld
sti
std
cld
cld
sti
sti
std
cli
stc
sti
clc
clc
sti
stc
clc
cli
clc
idiv
div
clc
cmc
hlt
stc
cmc
cmc
cli
div
stc
cmc
hlt
stc
hlt
hlt
stc
repz
out
ljmp
fstp
fcom
ror
lret
mov
mov
add
add
mov
iret
int
loop
fucomi
loop
jmp
call
cmc
cmc
stc
cmc
cmc
cli
div
sti
clc
clc
sti
clc
idiv
cli
clc
cld
clc
stc
std
stc
clc
cld
sti
stc
std
cli
cli
sti
stc
sti
cli
sti
sti
std
std
std
std
std
std
std
std
std
std
cld
cld
sti
cld
cld
cld
cld
sti
stc
sti
clc
clc
std
cli
stc
sti
stc
idiv
clc
idiv
div
clc
cmc
cmc
stc
cmc
hlt
clc
hlt
repz
repz
repnz
out
out
ljmp
fstp
fcompp
xlat
xlat
rcl
int3
mov
mov
add
add
mov
iret
into
jecxz
fsub
loope
jmp
jmp
div
cli
div
sti
clc
clc
sti
stc
stc
cld
stc
clc
cld
stc
stc
cld
stc
cli
cld
cli
cli
sti
cli
cli
cld
stc
stc
sti
cli
std
cld
sti
cld
cld
cld
cld
cld
std
sti
sti
sti
sti
sti
sti
cli
cld
stc
stc
cld
stc
clc
sti
clc
clc
cli
div
cli
div
stc
div
cli
div
stc
hlt
hlt
stc
repz
repz
lock
fcom
rcl
int
mov
mov
add
xchg
mov
ret
into
into
fst
aad
call
in
ljmp
idiv
div
sti
div
cld
clc
clc
std
cli
stc
sti
clc
cli
std
cli
cli
sti
sti
std
sti
sti
cli
cli
cli
sti
cld
cld
std
std
std
std
cld
cld
cli
cli
sti
sti
std
cli
cli
cld
stc
idiv
idiv
cli
idiv
cli
div
stc
div
cli
div
stc
repz
repz
repnz
out
out
jmp
out
loop
jecxz
fstp
xlat
rcl
int3
mov
sarb
add
mov
iret
into
jecxz
jecxz
jmp
in
jmp
div
cmc
cli
clc
idiv
div
cli
div
sti
clc
idiv
cli
clc
cld
stc
stc
cli
cli
cli
cli
cld
cli
sti
sti
sti
cli
cld
sti
cld
std
std
sti
sti
cli
cli
sti
cli
cld
stc
stc
sti
clc
idiv
clc
idiv
clc
clc
stc
div
clc
div
cli
cmc
cmc
clc
hlt
hlt
stc
hlt
hlt
stc
repz
icebp
icebp
in
in
call
fstp
fcomp
ror
int3
mov
mov
add
add
ror
rcl
into
aad
call
in
ljmp
idiv
div
sti
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
cli
std
stc
cli
sti
cli
std
cld
sti
sti
cli
cld
sti
cld
sti
std
cld
std
std
std
std
cld
cld
cld
sti
std
sti
sti
sti
cli
cli
cld
stc
stc
cld
stc
clc
cli
clc
idiv
div
stc
div
cli
div
stc
cmc
cmc
clc
hlt
hlt
clc
hlt
hlt
hlt
icebp
icebp
jmp
in
loop
jecxz
xlat
xlat
aad
iret
int3
mov
mov
add
add
jae
ret
rol
int
aad
out
loope
in
out
ljmp
idiv
clc
clc
cld
stc
stc
std
cli
stc
cld
cli
stc
std
cli
cli
cli
stc
cli
stc
sti
cli
cli
sti
cld
cld
std
std
std
std
std
cld
sti
cli
cli
cld
cli
cli
cld
cli
stc
cld
clc
clc
stc
idiv
cli
clc
idiv
clc
cmc
cli
div
cli
hlt
hlt
stc
repz
repz
icebp
icebp
jmp
out
loope
loop
fstp
xlat
xlat
aad
into
lret
sarl
add
mov
ror
lret
fcmovnbe
aam
fcmovnu
out
loopne
in
out
ljmp
idiv
div
cld
clc
clc
stc
clc
sti
stc
stc
sti
sti
cli
sti
sti
cli
sti
sti
cli
std
cld
std
std
cld
cld
sti
cli
sti
sti
std
stc
cli
sti
stc
clc
sti
stc
clc
cli
clc
stc
stc
stc
idiv
div
cli
div
stc
cmc
hlt
cli
cmc
cmc
div
hlt
repz
fstp
aad
iret
leave
ret
ret
mov
add
push
push
push
mov
ror
lret
fcmovbe
shl
fcmovnu
out
loopne
jecxz
out
jmp
sti
clc
clc
sti
clc
clc
sti
stc
stc
std
cli
stc
cli
cli
cli
cli
sti
sti
cld
cld
sti
cld
cld
sti
sti
std
std
std
std
std
sti
cli
sti
std
sti
cld
cld
cli
cli
cld
clc
stc
cli
stc
stc
sti
stc
clc
cli
clc
idiv
clc
idiv
div
cli
div
stc
div
clc
cmc
cmc
bnd
loopne
fcmovnbe
aad
into
into
enter
ret
jge
add
add
mov
lret
lret
shl
fcmovnu
out
loopne
in
out
jmp
cld
div
sti
clc
idiv
stc
stc
cli
sti
stc
stc
std
cli
cli
cli
cli
cli
sti
sti
cld
sti
sti
cld
cld
std
std
std
std
std
std
std
cld
sti
std
cli
cli
cld
cli
cli
cld
cli
cli
cld
clc
clc
cli
idiv
stc
clc
idiv
stc
idiv
div
stc
div
stc
div
clc
div
repnz
out
call
loopne
fcmovnu
fcmovnbe
aad
int
mov
outsb
push
add
sarb
leave
enter
loopne
fxam
loopne
ljmp
repz
clc
clc
cld
clc
clc
cli
cli
sti
sti
sti
sti
sti
sti
sti
sti
cli
sti
cld
sti
cld
cld
std
std
std
std
cld
sti
sti
cli
std
sti
stc
sti
stc
stc
sti
stc
clc
sti
stc
stc
sti
stc
idiv
clc
idiv
div
cli
div
cli
cmc
cmc
stc
cmc
cmc
icebp
in
in
out
loop
loopne
loopne
fcmovu
aam
ror
lret
mov
push
push
push
add
mov
mov
sarb
rcr
in
fsubrp
jecxz
jmp
out
repnz
cli
stc
stc
std
stc
stc
stc
stc
cli
cli
cld
cld
cli
cli
cld
cld
cld
cld
sti
sti
cld
std
std
std
std
std
std
cld
std
std
sti
cld
sti
sti
sti
cli
cld
stc
cli
sti
cli
stc
cld
stc
clc
cld
clc
clc
sti
clc
idiv
div
sti
div
stc
div
clc
div
out
in
in
out
loope
rcl
ror
lret
mov
aaa
aaa
add
lods
cmpsb
movsl
mov
ror
fstp
jecxz
fsubrp
jecxz
jmp
in
out
out
cld
stc
stc
std
clc
cli
std
stc
stc
sti
sti
sti
sti
std
sti
sti
sti
sti
cld
std
cld
cld
std
std
std
std
std
cld
sti
cli
sti
std
cli
sti
cld
sti
cli
cld
stc
clc
cld
clc
clc
cli
stc
clc
sti
stc
clc
cld
idiv
stc
div
stc
div
clc
cmc
cmc
in
call
jecxz
fcomp
fcom
rcl
enter
mov
mov
lret
aam
into
fcmovnbe
aad
fstp
call
in
in
in
std
clc
clc
cld
stc
stc
std
cli
cli
sti
sti
sti
sti
std
sti
sti
sti
sti
sti
cld
std
sti
std
std
std
std
std
sti
sti
cli
sti
sti
cli
sti
cli
cli
sti
cli
stc
sti
stc
clc
sti
cli
idiv
clc
idiv
div
cli
div
cli
div
div
repz
out
loopne
loop
fstp
xlat
xlat
xlat
ror
into
mov
lods
stos
add
pop
les
ror
lret
fcmovnbe
aam
out
loope
in
out
ljmp
stc
cli
stc
sti
cli
cld
cld
sti
cld
cld
cld
cld
std
cld
cld
cld
std
std
std
std
cld
std
cld
cld
sti
sti
cli
cli
cld
sti
cli
cld
cli
stc
sti
clc
stc
cld
cli
stc
sti
stc
clc
cli
clc
idiv
clc
idiv
div
hlt
icebp
icebp
call
loopne
aad
into
lret
mov
add
ss
mov
ror
leave
rcr
fcmovu
in
fucomip
in
in
out
clc
hlt
hlt
cld
cli
cli
cli
cli
std
sti
sti
std
sti
std
sti
std
std
std
std
std
std
cld
std
sti
cld
sti
std
sti
sti
cli
stc
std
cli
stc
cld
stc
cli
std
stc
cli
cld
clc
stc
cli
stc
stc
cli
idiv
cli
div
icebp
out
in
out
loope
loopne
loopne
fcmovu
aam
ror
int3
enter
mov
ret
ret
into
enter
rcr
fcom
in
fucomp
jecxz
jmp
in
out
out
std
cli
cli
std
sti
sti
cld
sti
cld
sti
cld
std
std
std
cld
std
std
cld
cld
sti
cli
cli
stc
cli
std
cli
cli
sti
sti
stc
cld
cli
cli
cld
stc
stc
sti
clc
clc
sti
div
stc
cmc
cmc
in
call
in
fcom
rcl
lret
mov
cmp
aaa
mov
mov
iret
into
jecxz
fsubr
loop
jmp
in
jmp
cld
clc
clc
std
cli
cli
std
sti
cli
std
cld
cld
cld
cld
std
std
std
std
std
std
std
cld
cld
cld
sti
sti
cli
sti
sti
std
cli
sti
cld
stc
stc
std
cli
cli
cld
stc
stc
sti
clc
clc
sti
div
sti
clc
clc
div
repz
fstp
fst
xlat
xlat
ror
into
mov
mov
arpl
mov
ror
lret
shl
fcmovnu
out
loopne
in
in
out
clc
cmc
hlt
std
sti
sti
std
cli
sti
std
cld
sti
std
std
std
std
cld
sti
sti
cld
sti
sti
cli
stc
stc
cli
cli
cli
cli
std
stc
stc
cld
cli
stc
cli
stc
stc
cli
clc
clc
repnz
out
call
loopne
fcmovnu
aam
int
leave
ret
mov
add
mov
into
leave
xlat
rcl
fcompp
fsub
jmp
in
out
out
std
cli
sti
std
cli
cli
sti
sti
std
std
std
std
std
cld
cld
sti
std
cld
cld
cli
cli
std
sti
sti
sti
sti
std
stc
stc
cld
clc
clc
sti
stc
stc
cli
clc
clc
stc
div
in
out
out
loop
rcl
ror
lret
ret
mov
pop
pop
pop
add
stos
mov
lret
aad
int
xlat
loop
fsub
loope
jmp
in
jmp
std
cld
cld
std
cld
cld
std
std
std
std
cld
cld
cld
cld
sti
sti
sti
sti
cld
cli
sti
cli
cli
cli
cli
stc
cld
clc
clc
cld
stc
stc
cmc
lock
jmp
loope
fstp
fst
xlat
xlat
rcl
into
mov
mov
add
insl
imul
mov
aam
jmp
in
lock
sti
cld
cld
cld
cld
std
std
std
std
std
cld
cld
cld
cld
std
std
sti
sti
cli
cli
sti
sti
sti
std
cli
cli
std
cli
cli
std
cli
cli
std
stc
stc
cld
clc
clc
in
jmp
in
fcmovnu
fcmovnbe
rcl
int
enter
mov
sarb
mov
xlat
jecxz
fsub
loop
jmp
in
ljmp
std
std
cld
cld
std
std
std
std
std
std
std
cld
cld
cld
sti
std
cld
cld
cld
cld
sti
sti
std
sti
sti
cld
stc
stc
std
cli
cli
cmc
icebp
icebp
call
loope
fstp
xlat
fcom
ror
leave
enter
lds
lcall
ret
rcl
lret
fcmovnbe
shl
fcmovu
out
fucomip
jecxz
in
out
repz
out
cld
std
std
cld
std
std
std
cld
cld
std
std
std
std
std
std
std
std
cld
cld
cld
std
sti
cld
sti
cli
cli
std
sti
cli
std
cli
cli
cld
stc
stc
cli
div
in
out
out
loop
loopne
loopne
fcmovu
aad
aad
int
mov
mov
add
add
inc
mov
iret
enter
rcr
xlat
xlat
jecxz
fsub
loope
jmp
in
call
std
std
cld
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
std
cld
sti
std
cli
cli
std
cli
cli
cld
cli
cli
std
cli
cli
icebp
out
out
call
loope
fstp
fcomp
rcl
ror
lret
mov
js
add
test
mov
int3
lret
shl
fcmovu
in
fsubrp
jecxz
in
out
out
ljmp
std
std
cld
cld
std
std
std
std
std
sti
cld
std
std
sti
cld
std
sti
sti
cld
cld
cld
cli
cli
std
sti
sti
div
repz
loopne
fcmovu
aam
aam
int
mov
mov
add
mov
int3
mov
ror
loope
loope
jmp
in
out
repnz
in
sti
cld
cld
cld
std
std
std
cld
cld
std
std
std
std
std
std
std
std
std
std
cld
std
cld
cld
cld
sti
sti
std
sti
sti
std
sti
sti
cld
sti
sti
clc
div
in
out
out
loope
loopne
loope
fcmovnu
xlat
xlat
rcl
ror
enter
lds
pushf
xchg
xchg
ret
mov
ror
leave
fcom
rcr
in
fsubp
loope
jmp
in
out
hlt
lock
cld
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
cld
std
sti
std
cld
sti
cld
sti
std
cld
sti
sti
stc
stc
cld
sti
sti
cli
clc
clc
in
jmp
out
loope
fstp
fcomp
rcl
ror
int3
leave
ret
ret
mov
add
xor
das
ret
mov
lret
mov
int
shl
in
fsubrp
loop
in
out
in
out
cmc
icebp
icebp
cld
cld
cld
std
std
std
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
sti
std
cld
cld
cld
std
sti
sti
cld
sti
cli
cld
cli
sti
cli
clc
stc
out
ljmp
loope
aam
aam
int
mov
sarb
jae
insl
lds
int
aam
int
aad
loopne
call
in
out
hlt
out
out
sti
sti
sti
sti
cld
cld
sti
cld
cld
cld
cld
cld
std
std
std
std
cld
std
cld
std
std
std
std
std
std
std
std
cld
std
std
std
std
std
std
std
std
cld
cld
cld
sti
cld
sti
cld
std
std
stc
clc
imul
jmp
out
loopne
fcmovu
aad
aad
into
iret
leave
enter
ret
lahf
fwait
cltd
movsl
lahf
popf
sarl
leave
iret
iret
fcmovnbe
aad
fcmovu
in
fsubrp
jecxz
jmp
in
in
icebp
in
in
clc
clc
clc
cld
cld
cld
sti
cld
cld
sti
sti
sti
cld
cld
cld
std
std
std
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
std
std
std
cld
cld
cld
sti
sti
sti
sti
cld
cld
cld
sti
sti
div
repz
out
loope
out
loopne
aad
iret
iret
ror
leave
enter
mov
add
mov
mov
leave
iret
into
fcmovnbe
aam
fcmovu
jecxz
fucom
loope
jmp
in
call
cli
stc
stc
sti
sti
sti
sti
cld
cld
cld
sti
sti
sti
sti
sti
cld
cld
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
sti
sti
sti
sti
sti
cld
sti
cli
cld
cld
sti
sti
sti
sti
clc
div
lock
in
out
loop
loope
in
loopne
fstp
fcompp
aam
aad
into
ror
lret
ret
mov
mov
add
cmp
mov
mov
iret
leave
enter
fcmovbe
rcr
loop
frstpm(287
loopne
out
jecxz
jecxz
ljmp
repnz
clc
clc
clc
cli
cli
cli
cld
sti
cli
sti
sti
sti
cli
sti
sti
cli
sti
sti
sti
sti
sti
cli
sti
sti
sti
cli
cli
sti
cli
cli
cli
cli
stc
div
div
in
in
ljmp
loopne
in
fsubp
xlat
aam
into
into
ror
enter
mov
mov
add
add
mov
mov
sarb
int3
fcom
rcr
aad
fcmovnu
loop
fsub
loope
out
loopne
loop
jmp
out
jmp
repnz
repnz
cmc
cmc
div
div
cmc
cmc
cmc
hlt
hlt
repz
in
in
in
call
out
in
fcompp
fcomp
aad
rcl
ror
int
enter
sarb
ja
jb
add
inc
mov
mov
mov
lret
lret
iret
rcr
xlat
loopne
fcmovnu
jecxz
fsubp
in
loopne
out
loope
call
loop
in
out
loopne
out
fsubp
jecxz
fsub
loopne
fcmovnu
fcomp
aad
rcl
aad
iret
ror
lret
int3
mov
mov
outsb
push
add
add
mov
ror
ror
int3
rcl
fcom
rcr
aad
fst
fcomp
fcmovu
loopne
loop
fsub
loop
fninit
loop
fnclex
loop
fndisi(8087
fcmovnu
fst
fcmovbe
aam
rcl
aad
into
ror
lret
into
enter
ret
mov
scas
scas
push
push
push
add
mov
mov
into
enter
lret
int3
ror
fcom
rcr
aam
fcmovnbe
aam
aad
aad
xlat
fst
aad
aad
fcmovnbe
aam
rcl
xlat
rcl
ror
ror
int3
ror
lret
into
mov
mov
enter
xchg
xchg
add
inc
inc
inc
pushf
xchg
xchg
sarl
mov
leave
ret
ror
leave
ror
lret
lret
aam
int3
aad
int
iret
into
aad
int
into
into
aad
int
into
int
int
ror
lret
leave
int3
mov
ret
rol
mov
mov
mov
lods
pop
pop
pop
add
add
sahf
cwtl
xchg
mov
scas
leave
ret
ret
rol
mov
mov
leave
ret
int3
ret
ret
rol
mov
mov
lret
mov
lahf
push
jbe
jno
mov
rol
rol
mov
sarl
mov
ret
mov
xchg
xchg
cmpb
dec
dec
add
inc
pop
pop
pop
jno
insb
xchg
pushf
xchg
xchg
sahf
cltd
xchg
popf
cwtl
xchg
xchg
xchg
xchg
mov
fs
pusha
push
dec
dec
add
clc
inc
pop
incl
pop
incb
add
cld
add
clc
add
jg
jmp
add
aas
jmp
add
pop
inc
add
ud0
incl
incl
add
pop
incb
add
add
cld
add
add
cld
add
add
clc
add
add
push
add
add
jg
push
add
add
aas
jmp
add
add
aas
inc
add
add
pop
inc
add
add
ud0
incl
ud0
incl
add
add
pop
incl
add
add
pop
incb
add
add
add
incb
add
add
add
cld
add
add
add
cld
add
add
add
cld
add
add
add
clc
add
add
add
clc
add
add
add
jg
push
add
add
add
jg
push
add
add
add
jg
push
add
add
add
aas
jmp
add
add
add
aas
jmp
add
add
add
aas
jmp
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
inc
add
add
add
ud0
inc
add
add
add
ud0
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
jmp
add
add
add
pop
jmp
add
add
add
aas
jmp
add
add
add
aas
push
add
add
add
aas
push
add
add
add
jg
push
add
add
add
jg
clc
add
add
add
jg
clc
add
add
add
clc
add
add
add
cld
add
add
add
cld
add
add
add
incb
add
add
add
incb
add
add
add
incl
add
add
pop
incl
ud0
inc
add
add
ud0
inc
add
add
pop
jmp
add
add
aas
push
add
add
jg
cld
add
add
incb
add
add
incl
add
pop
inc
add
pop
clc
add
jg
incl
pop
ljmp
add
add
add
rolb
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
and
add
and
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
sldt
add
add
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
add
add
add
add
add
xor
add
xor
add
xor
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
add
add
dec
add
add
add
dec
add
add
add
inc
add
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
cmp
add
cmp
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
add
push
add
add
add
pop
add
add
add
push
add
add
add
push
add
add
add
add
push
add
add
add
dec
add
add
add
dec
add
add
add
inc
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
bound
add
pop
add
add
add
insl
adc
adc
adc
add
add
add
add
pop
add
add
add
add
add
add
popa
add
add
add
pop
add
add
add
pop
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
cmp
add
cmp
add
xor
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
pusha
add
add
add
add
add
add
add
add
add
bound
add
arpl
sbb
mov
push
les
cmpsl
movsl
cli
mov
cmpsl
cld
scas
test
sti
mov
fs
daa
and
add
add
add
push
add
push
add
push
add
add
add
add
add
add
popa
add
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
add
add
push
add
add
add
insl
add
add
push
push
test
pusha
int3
mov
test
inc
mov
mov
sarb
mov
mov
mov
jp
jae
and
and
add
add
add
add
outsb
add
add
add
add
imul
add
add
add
add
pop
add
add
add
pop
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
cmp
add
aas
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
add
add
push
add
insb
add
add
add
imul
add
xor
repz
mov
mov
std
ret
mov
mov
inc
mov
mov
std
mov
lods
stos
cld
push
push
push
ret
add
add
push
add
jae
add
jo
add
outsb
add
add
add
imul
add
add
data16
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
xor
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
data16
add
add
push
add
jo
add
data16
add
pop
int
mov
mov
sti
mov
dec
dec
mov
call
leave
enter
enter
dec
ret
mov
mov
mov
loope
jns
add
add
add
add
insl
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
add
add
insb
add
add
pop
pop
jl
jl
ret
ret
mov
mov
dec
leave
enter
int3
aam
into
call
ror
call
rcl
call
rcl
call
ror
call
int3
lret
dec
lret
int3
mov
mov
ret
ret
fwait
cltd
repnz
add
arpl
add
outsb
add
add
add
add
add
add
add
bound
add
pop
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
sub
add
das
add
add
add
cmp
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
add
jno
into
enter
mov
sar
leave
call
int
rcl
sar
fcmovnbe
aad
fst
xlat
fst
xlat
fcmovbe
sar
xlat
rcl
call
into
into
dec
leave
lret
mov
ret
sar
test
clc
sub
es
add
add
add
add
add
add
bound
add
pop
add
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
push
add
add
add
dec
femms
push
jnp
xchg
xchg
in
int
mov
ret
ror
lret
ror
sar
fst
fcos
loope
loop
loop
loop
loope
fdivr
fcos
fdivr
fcmovbe
aam
rcl
call
int3
lret
dec
mov
std
enter
mov
lods
cld
sub
sub
add
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
or
imul
ret
mov
mov
ror
int3
call
rcl
fcmovnbe
aad
fcos
loop
fdivr
in
fdivrp
in
loopne
out
loope
out
loope
out
loope
out
loopne
in
fdivrp
loop
fcom
sar
ror
int
into
enter
mov
mov
sti
and
and
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
xchg
mov
inc
mov
ror
int3
xlat
rcl
jmp
fcmovu
jmp
jmp
loope
call
jecxz
jmp
in
jmp
jecxz
jmp
jecxz
jmp
loope
jmp
jmp
fst
xlat
sar
aad
int3
dec
enter
mov
mov
clc
sbb
pop
jle
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
sub
add
cmp
je
int
mov
mov
fcom
sar
fstp
xlat
jmp
jmp
jmp
loope
jmp
out
in
in
in
out
in
out
in
out
in
out
jmp
in
ljmp
jmp
loopne
jmp
fstp
fcompp
fdivr
sar
ror
int
into
enter
mov
sar
pushf
pushf
lock
or
add
sub
add
cmp
add
xor
add
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
mov
mov
mov
ror
int3
fcom
sar
fstp
xlat
jmp
jmp
jmp
loop
ljmp
in
call
out
out
jmp
call
out
call
out
in
out
jmp
in
jmp
loopne
jmp
fstp
fdivr
sar
aam
into
dec
enter
mov
decl
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
aaa
xor
sar
mov
ret
ror
lret
call
rcl
fstp
jmp
jmp
loopne
call
in
jmp
out
in
call
out
out
jmp
jmp
out
ljmp
out
out
in
out
in
out
jmp
in
jmp
loopne
jmp
fstp
fcompp
fdivr
sar
ror
int3
dec
mov
cld
ror
ljmp
movb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
push
arpl
mov
sar
lret
lret
rcl
fst
jmp
jmp
jmp
loop
ljmp
in
call
call
out
ljmp
lock
lock
out
jmp
call
jmp
in
jmp
loope
jmp
fstp
fdivr
fcom
sar
ror
int3
dec
mov
mov
ret
sar
cmp
lcall
add
add
adc
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
enter
lds
enter
sar
fcmovnbe
aad
loopne
in
fdivrp
out
loope
jmp
out
in
jmp
call
push
jmp
out
jmp
out
ljmp
out
ljmp
lock
out
jmp
call
jmp
in
jmp
loopne
jmp
fst
fcom
sar
ror
lret
dec
rol
sarl
sti
adc
adc
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
or
pop
mov
sarb
aad
iret
fcmovnbe
aad
loopne
in
fdivrp
out
loope
ljmp
in
call
call
out
ljmp
lock
push
jmp
push
in
jmp
lock
in
push
in
ljmp
ljmp
out
call
out
in
call
in
jmp
loopne
jmp
fcmovnu
fst
call
rcl
ror
leave
inc
mov
sar
xchg
xchg
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
daa
jnp
mov
into
int
fcmovbe
sar
fcompp
fcos
jecxz
fdivrp
out
loopne
ljmp
call
in
in
call
jmp
out
ljmp
icebp
in
in
push
in
jmp
icebp
in
jmp
icebp
in
in
push
in
in
out
jmp
in
ljmp
out
ljmp
jmp
in
ljmp
jmp
jmp
fcmovnu
fcmovnbe
aad
aad
iret
dec
enter
mov
call
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
std
ror
lret
rcl
fst
fdivr
loop
fdivr
in
out
loope
jmp
out
cmc
lock
sti
stc
std
std
stc
stc
std
div
cli
stc
push
repnz
in
in
push
in
in
push
in
out
push
out
in
push
in
jmp
repz
out
stc
cli
sti
div
std
clc
idiv
std
sti
sti
sti
stc
hlt
repz
out
jmp
loope
out
in
fcos
sar
ror
int
lret
sarb
jmp
and
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
mov
ret
mov
aad
iret
fcos
loope
fdivr
jmp
out
cli
hlt
hlt
stc
repnz
rcl
jmp
jae
call
push
decl
dec
lcall
pop
call
rcl
cli
div
out
ljmp
icebp
jmp
push
icebp
icebp
in
out
ljmp
incl
inc
call
push
ljmp
lcall
dec
mov
repnz
in
std
div
push
ljmp
loopne
fst
xlat
call
rcl
ror
leave
inc
mov
sar
lea
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
mov
mov
std
aam
int
fcmovbe
aam
fcmovnbe
aad
out
loope
stc
hlt
hlt
call
mov
dec
call
adc
incl
add
incl
add
incl
add
incl
add
incl
push
pop
dec
leave
enter
sti
out
jmp
push
lock
push
in
jmp
clc
repz
out
jmp
lcall
pop
push
incl
add
incl
add
incl
add
incl
add
decl
or
cmp
cmp
mov
sti
cmc
hlt
in
out
xlat
fcmovnbe
aad
iret
iret
dec
mov
sti
int
incl
inc
popf
add
add
mov
mov
cld
ror
lret
rcl
push
in
in
call
xchg
nop
pushl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
xor
das
push
out
in
clc
cmc
hlt
push
out
out
push
icebp
lock
lock
out
in
std
std
lcall
push
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
pop
push
push
jp
ja
sar
div
lock
fcmovu
call
rcl
ror
int3
dec
mov
stos
testb
add
add
xor
xor
ret
mov
call
lret
lret
loopne
fsin
lock
cmp
xor
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
push
out
out
push
out
out
push
icebp
icebp
push
icebp
icebp
push
in
in
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
and
decl
jecxz
jmp
loope
call
int
ror
leave
inc
mov
mov
mov
add
add
xchg
xchg
jmp
lret
std
iret
leave
enter
loope
fcmovnbe
aam
push
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
xchg
push
in
in
push
repnz
push
icebp
repnz
repnz
out
out
inc
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
inc
inc
mov
out
ror
int3
dec
ret
std
ret
std
mov
adc
add
add
add
add
add
add
add
aas
cmp
mov
cld
int3
mov
out
loopne
mov
mov
xor
incl
add
incl
add
incl
push
push
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
or
call
into
into
cld
cld
push
icebp
lock
repz
repnz
repnz
icebp
icebp
stc
div
push
in
in
ljmp
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
incl
add
call
adc
nop
jmp
loope
call
int3
lret
inc
mov
mov
lds
add
or
add
add
add
add
add
add
push
add
jmp
les
fdivr
cltd
xchg
xchg
call
adc
incl
add
decl
or
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
inc
clc
cmc
cmc
clc
hlt
repz
repnz
repnz
repz
push
repz
repz
lock
ljmp
insl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
or
or
add
add
pushl
insb
fcos
int
std
sarb
sti
pop
push
push
pop
add
add
add
add
add
add
add
add
ss
mov
mov
mov
xchg
xchg
nop
decl
or
incl
pop
pop
decl
or
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
push
lock
repz
clc
hlt
repz
clc
hlt
repz
clc
repz
clc
hlt
repz
icebp
lock
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
or
or
or
or
add
add
imul
inc
mov
mov
mov
add
add
add
add
add
add
cltd
xchg
xchg
out
mov
into
cld
stos
movsl
movsl
call
adc
decb
or
decl
push
push
incl
push
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aad
cld
sti
sti
push
lock
stc
repz
cmc
cmc
stc
repz
clc
hlt
cmc
stc
repz
icebp
icebp
sti
div
push
lock
cmp
aaa
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
add
or
femms
push
incl
add
cmpl
mov
mov
std
adc
adc
add
sub
sub
mov
sar
sarb
pop
push
add
incl
add
incl
add
incl
add
incl
add
pop
pop
pop
decl
or
decl
or
or
adc
call
adc
incl
add
jmp
pop
sti
cld
cld
push
icebp
lock
repz
clc
hlt
hlt
stc
hlt
cmc
stc
cmc
cmc
cli
cmc
hlt
clc
cmc
cmc
clc
repz
out
out
decl
add
push
push
push
decl
or
incl
push
push
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
push
add
decl
push
push
call
adc
test
mov
cld
ret
pop
pop
pop
mov
add
push
test
xlat
sarl
std
arpl
add
pop
pop
call
sbb
lcall
and
jmp
and
jmp
daa
daa
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
or
incl
add
mov
push
out
out
stc
hlt
hlt
cli
cmc
cmc
stc
cmc
cmc
stc
cmc
cmc
cli
cmc
cmc
stc
div
cli
cmc
cmc
push
icebp
icebp
cld
stc
stc
jmp
loop
lcall
add
ljmp
sub
ljmp
sub
jmp
and
jmp
and
lcall
push
push
lcall
sbb
call
adc
decl
or
incl
pop
push
incl
push
push
decl
push
push
cmp
cmp
int
inc
sarl
or
or
add
add
add
add
add
add
add
add
push
push
push
pop
mov
leave
lods
cmpsb
cmpsb
pop
adc
sbb
sbb
cmp
cmp
cmp
pushl
ss
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
ljmp
das
das
pushl
xor
and
add
call
std
cld
push
icebp
icebp
clc
repz
cli
hlt
hlt
stc
cmc
idiv
stc
cmc
hlt
cli
div
cli
div
stc
cmc
idiv
stc
cmc
idiv
stc
cmc
cmc
push
lock
incl
add
lcall
sbb
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
xor
xor
xor
xor
sub
es
lcall
sbb
or
pop
incl
int3
cld
sarl
xchg
add
add
add
add
push
push
push
scas
lds
lret
push
push
decb
or
cmp
aaa
incl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
aaa
aaa
pushl
aaa
aaa
cmp
cmp
cmp
cmp
or
or
or
or
into
int3
int3
std
cld
cld
push
lock
stc
hlt
hlt
stc
cmc
cmc
clc
hlt
cmc
cli
div
sti
clc
cmc
sti
clc
cmc
cli
div
stc
cmc
cmc
stc
cmc
idiv
clc
hlt
hlt
sti
clc
clc
jmp
ljmp
add
pushl
xor
cmp
cmp
aaa
aaa
aaa
pushl
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
incl
notrack
adc
pushl
xor
ret
sti
lret
incb
add
sbb
add
add
add
add
add
add
add
add
add
xchg
ljmp
lods
std
sbb
push
sbb
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
jmp
and
incl
add
jl
jp
push
icebp
icebp
clc
hlt
hlt
clc
cmc
cmc
stc
cmc
idiv
cli
div
sti
clc
idiv
sti
clc
idiv
sti
clc
idiv
sti
clc
cmc
cli
div
stc
cmc
cmc
cli
cmc
cmc
push
icebp
icebp
ljmp
add
call
pop
pop
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
inc
decl
dec
pushl
cs
or
decl
lret
mov
push
push
pop
add
add
add
add
add
add
add
add
and
and
mov
leave
cld
jl
jbe
or
push
ds
push
decl
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
incl
inc
call
push
cmp
add
pushl
xor
out
stc
div
push
icebp
icebp
stc
hlt
hlt
stc
hlt
hlt
cli
div
sti
clc
cmc
cld
stc
idiv
cli
idiv
sti
clc
clc
sti
clc
clc
sti
clc
cmc
cli
div
stc
div
clc
hlt
hlt
push
repz
sti
sti
sti
jmp
popa
incl
add
ljmp
cs
push
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
decl
call
push
decl
dec
decl
or
dec
dec
dec
dec
lret
decl
dec
movsl
add
add
add
add
pop
push
push
mov
ret
sar
rol
inc
inc
inc
adc
adc
push
push
push
call
push
call
call
push
call
push
call
push
call
push
call
push
decl
dec
call
push
decl
dec
incl
push
push
call
int3
int3
std
std
push
out
in
clc
repz
clc
hlt
repz
cli
cmc
hlt
cli
div
cli
div
sti
clc
clc
sti
clc
clc
cld
stc
idiv
cli
clc
clc
cld
stc
idiv
cli
div
clc
cmc
cmc
cli
cmc
cmc
push
lock
cli
div
jmp
ljmp
add
incl
inc
lcall
pop
decl
dec
call
push
call
push
call
push
call
push
call
push
call
call
push
lcall
jmp
and
jmp
pop
push
pushl
ret
ret
lea
sbb
add
add
add
add
add
add
add
and
ret
mov
lods
std
sbb
sbb
sub
popa
popa
lcall
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
call
push
jmp
popa
call
call
adc
incl
stos
stos
push
in
in
push
repz
repz
stc
hlt
hlt
cli
div
stc
idiv
sti
clc
clc
cld
stc
idiv
sti
clc
stc
sti
clc
clc
sti
stc
clc
sti
clc
stc
sti
clc
idiv
stc
div
stc
hlt
hlt
stc
hlt
hlt
push
out
out
call
rcl
lcall
sbb
incl
add
decl
dec
jmp
arpl
pop
pop
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
jmp
incl
aas
decl
or
xchg
lea
cld
mov
adc
push
add
add
add
add
add
add
add
add
pop
push
push
pop
sarb
cld
xchg
lea
dec
inc
inc
ljmp
imul
arpl
jmp
jmp
pusha
jmp
pusha
jmp
arpl
insb
insb
insb
call
push
decl
pop
pop
jmp
push
out
out
push
repnz
push
repnz
clc
repz
cli
hlt
cmc
stc
div
cli
clc
idiv
sti
clc
idiv
cld
stc
clc
sti
clc
clc
cld
stc
stc
cld
clc
clc
cld
clc
stc
sti
clc
clc
cli
div
stc
cmc
cmc
stc
hlt
hlt
clc
repz
out
out
inc
lcall
sbb
add
add
inc
inc
inc
ljmp
imul
pusha
pusha
pusha
jmp
pop
jmp
popa
jmp
jmp
jmp
lcall
pop
decl
popa
popa
call
lret
lret
mov
cmp
aas
cmp
xchg
sarl
cld
insb
push
or
pop
pop
pop
ljmp
insl
jmp
ljmp
jmp
ljmpw
push
jo
jo
imul
cmp
add
call
pfsubr
test
push
out
out
push
icebp
lock
repz
clc
repz
stc
hlt
cmc
stc
cmc
cmc
cli
div
cli
clc
clc
cli
idiv
cld
stc
idiv
sti
clc
stc
cld
stc
stc
cld
stc
stc
sti
stc
clc
cli
div
sti
div
cli
div
clc
cmc
cmc
stc
repnz
repnz
out
in
dec
lret
sub
sub
add
add
sub
sub
gs
jno
imul
addr16
ljmpw
ljmp
imul
push
lcall
sbb
aas
cmp
dec
mov
pushl
outsl
leave
add
add
add
add
push
les
lret
cld
dec
dec
dec
adc
adc
insb
insb
imul
jo
pushl
outsl
pushl
jne
jns
jns
jno
jno
push
push
push
call
add
pushl
xor
mov
push
in
in
push
lock
repnz
repnz
push
hlt
repz
stc
cmc
hlt
stc
div
cli
div
stc
idiv
sti
clc
clc
sti
clc
clc
cli
idiv
sti
stc
stc
cld
stc
clc
sti
clc
clc
cld
stc
stc
cli
div
stc
cmc
hlt
stc
hlt
idiv
clc
repz
repz
icebp
lock
in
in
std
jmp
call
push
incl
add
decl
or
incl
inc
ljmp
insl
js
js
ja
jbe
jno
jno
outsl
outsb
outsb
pushl
jae
sub
sub
and
mov
ret
lahf
popf
lock
add
add
add
fwait
xchg
xchg
jmp
int
std
xor
xor
daa
es
test
cmp
js
jmp
incw
inc
lcall
sbb
incl
add
call
adc
jnp
js
in
ljmp
lock
jmp
hlt
lock
push
icebp
icebp
push
icebp
icebp
push
repz
clc
repz
clc
hlt
cmc
cli
cmc
cmc
stc
div
cli
div
cld
stc
idiv
cld
stc
stc
sti
clc
clc
cld
stc
stc
sti
stc
stc
cli
div
sti
clc
clc
sti
clc
idiv
stc
div
clc
cmc
cmc
stc
hlt
hlt
push
repnz
repnz
push
icebp
icebp
out
in
jmp
sti
div
sti
div
lcall
and
incl
add
decl
ud0
cmp
lcall
pop
pushl
jne
jle
jge
mov
inc
call
adc
pushl
leave
enter
scas
cld
adc
adc
add
add
add
add
add
add
add
add
push
push
inc
mov
stos
stc
lret
inc
mov
and
and
dec
dec
pushl
xor
call
adc
incl
add
incl
add
call
adc
ljmp
insb
call
int
clc
repz
jmp
push
lock
push
icebp
out
push
icebp
icebp
push
repnz
clc
hlt
repz
clc
hlt
hlt
stc
cmc
cmc
cli
div
cli
div
sti
clc
clc
sti
clc
clc
std
cli
cli
cld
cli
cli
std
stc
stc
cld
stc
stc
sti
clc
clc
cli
div
cld
stc
idiv
cli
clc
idiv
stc
div
stc
hlt
hlt
push
repz
repnz
lock
icebp
lock
jmp
push
out
out
jmp
incl
and
add
add
add
add
or
sub
decl
dec
cmp
call
push
push
jmp
lret
mov
sub
add
add
add
add
add
add
add
add
push
push
imul
mov
pop
incl
add
incl
pop
pop
decl
ud0
and
call
push
lcall
fcos
sti
sti
cld
div
out
jmp
push
in
in
push
lock
lock
push
repnz
icebp
icebp
push
repnz
repz
hlt
hlt
stc
cmc
cmc
stc
cmc
cmc
sti
div
cli
stc
stc
cld
stc
stc
cld
stc
stc
cld
cli
cli
std
clc
clc
cld
stc
stc
sti
clc
clc
sti
clc
clc
sti
clc
idiv
cli
div
stc
cmc
cmc
stc
hlt
hlt
clc
repz
repnz
push
lock
push
icebp
out
push
out
out
push
in
jmp
out
jmp
repnz
cli
stc
jmp
in
lods
test
arpl
sub
sub
adc
adc
or
or
push
add
or
mov
int3
lret
mov
inc
lahf
add
add
add
add
add
add
add
add
xor
mov
mov
cmpsb
mov
xchg
ljmp
ret
ret
loop
clc
clc
std
cld
cli
repz
push
jmp
push
ljmp
repz
out
push
lock
push
icebp
lock
repnz
push
repnz
clc
repz
clc
hlt
hlt
clc
hlt
hlt
stc
cmc
cmc
cli
div
cld
div
sti
clc
clc
cld
stc
stc
cld
cli
cli
std
stc
stc
std
stc
stc
std
stc
stc
cld
clc
clc
sti
clc
stc
cld
stc
clc
sti
clc
idiv
cli
div
stc
cmc
cmc
clc
repz
push
repnz
icebp
icebp
push
lock
out
in
push
in
in
push
in
jmp
out
jmp
call
cli
stc
stc
stc
out
call
lret
scas
scas
lcall
xchg
xchg
dec
enter
mov
bound
add
add
add
add
dec
dec
dec
cmpsl
mov
mov
out
bnd
push
lock
push
lock
push
in
in
in
out
in
out
out
jmp
in
push
in
in
push
out
out
push
lock
lock
icebp
lock
repnz
push
icebp
repnz
repnz
repz
clc
repz
clc
hlt
hlt
cli
div
sti
clc
clc
cli
div
sti
clc
clc
sti
stc
stc
cld
clc
clc
stc
stc
cld
clc
clc
sti
div
cli
idiv
sti
clc
idiv
cli
div
stc
cmc
hlt
clc
hlt
hlt
push
repnz
icebp
icebp
push
repnz
out
out
push
lock
push
out
in
push
in
in
push
in
in
push
jmp
out
ljmp
jmp
in
lock
out
push
out
out
push
jmp
ljmp
inc
sarb
jge
js
add
add
add
add
add
add
add
add
fs
pop
mov
mov
cld
ror
lret
fcom
sar
xlat
jmp
fstp
jmp
loope
ljmp
push
jmp
push
in
jmp
repnz
in
push
in
in
push
out
out
push
out
out
push
out
out
push
lock
push
icebp
lock
repnz
clc
repz
clc
hlt
repz
clc
hlt
hlt
stc
cmc
cmc
sti
clc
clc
cld
stc
stc
sti
cli
cli
cld
cli
cli
cld
sti
sti
std
cli
cli
sti
sti
std
sti
sti
cld
cli
cli
sti
stc
stc
cld
cli
cli
sti
stc
stc
cli
div
stc
div
clc
hlt
hlt
push
repz
repnz
push
lock
out
in
push
in
in
push
in
jmp
lock
out
ljmp
out
ljmp
ljmp
jmp
fstp
fcos
fcom
sar
aam
into
dec
ret
ret
sarb
add
add
add
add
add
add
add
add
add
add
ja
jb
enter
mov
int3
std
aad
loope
out
loopne
jmp
in
in
call
call
push
jmp
push
in
in
push
out
out
push
icebp
icebp
push
repnz
push
hlt
repz
clc
cmc
cmc
cli
div
sti
div
std
clc
clc
cld
cli
cli
std
cli
cli
sti
sti
std
std
std
std
std
cld
sti
std
sti
sti
std
stc
stc
cld
stc
clc
cli
div
clc
div
clc
hlt
repz
icebp
icebp
push
lock
push
out
in
push
in
in
push
ljmp
in
out
in
out
jmp
in
out
loope
loop
fst
call
iret
into
dec
sarl
pop
push
push
xor
add
add
add
add
add
add
add
add
add
sbb
rol
mov
int
fst
aad
loop
fdivr
out
loope
jmp
in
in
call
jmp
hlt
out
out
push
icebp
icebp
clc
hlt
hlt
cli
div
cli
clc
clc
sti
clc
stc
sti
clc
clc
cld
stc
stc
cld
sti
cli
std
cli
cli
sti
sti
cld
cld
cld
cld
std
std
std
std
cld
std
cld
cld
cld
cld
cld
sti
cli
cld
stc
stc
sti
clc
stc
sti
clc
clc
cli
clc
idiv
stc
div
clc
cmc
hlt
clc
hlt
repz
repnz
push
icebp
lock
in
in
out
call
in
out
loope
jecxz
fdivr
xlat
call
ror
dec
mov
test
or
cmp
add
add
add
add
add
add
add
add
add
pop
mov
mov
cld
aad
into
aad
jecxz
fdivr
out
loopne
ljmp
push
repnz
cli
div
stc
div
sti
div
cld
clc
clc
sti
stc
clc
cld
cli
stc
sti
clc
stc
cld
stc
clc
sti
cli
stc
cld
stc
stc
cli
cli
std
sti
sti
sti
sti
cld
cld
std
std
std
std
std
std
std
cld
sti
std
cld
cld
sti
sti
std
cli
stc
sti
clc
clc
sti
stc
clc
cli
clc
idiv
stc
div
clc
cmc
hlt
stc
cmc
cmc
cli
div
stc
cmc
hlt
stc
hlt
hlt
stc
repz
out
out
ljmp
jmp
fstp
fdivr
ror
dec
mov
lds
lods
clc
or
add
add
add
add
add
add
add
add
add
and
mov
dec
ret
iret
int
fst
jmp
fstp
call
in
out
ljmp
stc
cmc
cmc
stc
cmc
cmc
cli
div
sti
clc
clc
sti
clc
idiv
std
cli
clc
cld
clc
stc
std
stc
clc
cld
sti
stc
std
cli
cli
sti
stc
sti
cli
sti
sti
std
std
std
std
std
std
std
std
std
std
cld
cld
sti
cld
cld
cld
cld
sti
stc
sti
clc
clc
std
cli
stc
sti
stc
idiv
stc
clc
idiv
clc
div
clc
cmc
cmc
stc
cmc
hlt
clc
hlt
repz
clc
repz
clc
repnz
out
out
ljmp
jmp
fstp
fcompp
xlat
call
rcl
dec
mov
ret
mov
mov
adc
cmovnp
add
add
add
add
add
add
add
add
add
xchg
mov
dec
ret
aad
into
jmp
fstp
jmp
loope
jmp
ljmp
clc
div
cli
div
sti
clc
clc
sti
stc
stc
cld
stc
clc
cld
stc
stc
cld
stc
cli
cld
cli
cli
sti
cli
cli
cld
stc
stc
sti
cli
std
cld
sti
cld
cld
cld
cld
cld
std
sti
sti
sti
sti
sti
sti
cli
cld
stc
stc
cld
stc
clc
sti
clc
clc
cli
div
cli
div
stc
div
cli
div
stc
hlt
hlt
stc
repz
stc
repz
lock
ljmp
jmp
fdivr
rcl
dec
mov
std
mov
adc
dec
add
add
add
add
add
add
add
add
add
add
mov
dec
ret
into
into
fst
aad
loop
fdivr
call
in
push
ljmp
stc
div
stc
div
sti
div
cld
clc
clc
std
cli
stc
sti
clc
cli
std
cli
cli
sti
sti
std
sti
sti
cli
cli
cli
sti
cld
cld
std
std
std
std
cld
cld
cli
cli
sti
sti
std
cli
cli
cld
stc
idiv
cli
idiv
cli
idiv
cli
div
stc
div
cli
div
stc
repz
clc
repz
clc
repnz
out
out
jmp
out
out
loope
jecxz
fcompp
xlat
call
rcl
dec
mov
mov
mov
cmovnp
add
add
add
add
add
add
add
add
add
and
sarb
aad
into
jmp
fstp
jmp
jecxz
jmp
in
lock
push
hlt
cmc
cli
clc
idiv
stc
div
cli
div
sti
clc
idiv
std
cli
clc
cld
stc
stc
cli
cli
cli
cli
cld
cli
sti
sti
sti
cli
cld
sti
cld
std
std
sti
sti
cli
cli
sti
cli
cld
stc
stc
sti
clc
idiv
sti
clc
idiv
sti
clc
clc
stc
div
clc
div
cli
cmc
cmc
clc
hlt
hlt
stc
hlt
hlt
stc
repz
icebp
icebp
in
in
call
fstp
fdivr
ror
dec
mov
lds
stos
clc
or
add
add
add
add
add
add
add
add
add
sbb
rol
enter
aam
into
aad
loop
fdivr
call
in
out
ljmp
cli
clc
idiv
cli
div
sti
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
cli
std
stc
cli
sti
cli
std
cld
sti
sti
cli
cld
sti
cld
sti
std
cld
std
std
std
std
cld
cld
cld
sti
std
sti
sti
sti
cli
cli
cld
stc
stc
cld
stc
clc
cli
clc
idiv
stc
div
stc
div
cli
div
stc
cmc
cmc
clc
hlt
hlt
clc
hlt
hlt
push
icebp
icebp
jmp
in
out
loope
jecxz
fdivr
fst
xlat
call
ror
dec
mov
mov
mov
cmp
add
add
add
add
add
add
add
add
add
emms
jae
int3
mov
sar
int
aad
loop
out
loope
ljmp
push
div
cli
div
sti
clc
clc
cld
stc
stc
std
cli
stc
cld
cli
stc
std
cli
cli
cli
stc
cli
stc
sti
cli
cli
sti
cld
cld
std
std
std
std
std
cld
sti
cli
cli
cld
cli
cli
cld
cli
stc
cld
clc
clc
stc
idiv
cli
clc
idiv
sti
clc
cmc
cli
div
cli
hlt
hlt
stc
repz
clc
repz
icebp
icebp
jmp
out
out
loopne
loop
fst
xlat
call
ror
dec
mov
xchg
jmp
add
add
add
add
add
add
bound
mov
sar
int3
lret
std
fcmovnbe
aam
loop
out
loopne
jmp
jecxz
out
ljmp
cli
div
cli
div
cld
clc
clc
stc
clc
sti
stc
stc
sti
sti
cli
sti
sti
cli
sti
sti
cli
std
cld
std
std
cld
cld
sti
cli
sti
sti
std
stc
cli
sti
stc
clc
sti
stc
clc
cli
clc
stc
stc
stc
idiv
cli
div
cli
div
stc
cmc
hlt
cli
cmc
cmc
push
hlt
hlt
push
lock
ljmp
jmp
fstp
call
iret
iret
dec
ret
ret
sarb
add
add
add
add
add
add
push
push
push
stos
mov
mov
fcmovbe
sar
loope
out
loopne
ljmp
stc
cmc
cmc
sti
clc
clc
sti
clc
clc
sti
stc
stc
std
cli
stc
cli
cli
cli
cli
sti
sti
cld
cld
sti
cld
cld
sti
sti
std
std
std
std
std
sti
cli
sti
std
sti
cld
cld
cli
cli
cld
clc
stc
cli
stc
stc
sti
stc
clc
cli
clc
idiv
sti
clc
idiv
cli
div
cli
div
stc
div
clc
cmc
cmc
push
lock
jmp
loope
jmp
fcmovnbe
aad
aam
into
dec
ret
leave
ret
cmpl
pop
add
add
add
add
add
add
add
add
cmp
mov
mov
sar
loope
out
loopne
jmp
jmp
hlt
cld
div
sti
clc
idiv
cld
stc
stc
cli
sti
stc
stc
std
cli
cli
cli
cli
cli
sti
sti
cld
sti
sti
cld
cld
std
std
std
std
std
std
std
cld
sti
std
cli
cli
cld
cli
cli
cld
cli
cli
cld
clc
clc
cli
idiv
stc
clc
idiv
sti
stc
idiv
cli
div
stc
div
stc
div
clc
div
push
out
out
call
loope
jmp
fcmovnu
fcmovnbe
aad
ror
int3
inc
sarb
outsb
push
les
add
or
add
add
add
add
es
mov
mov
fcom
sar
loopne
fcos
in
ljmp
push
repz
sti
clc
clc
cld
clc
clc
cli
cli
sti
sti
sti
sti
sti
sti
sti
sti
cli
sti
cld
sti
cld
cld
std
std
std
std
cld
sti
sti
cli
std
sti
stc
sti
stc
stc
sti
stc
clc
sti
stc
stc
sti
stc
idiv
sti
clc
idiv
stc
div
cli
div
cli
cmc
cmc
stc
cmc
cmc
push
in
in
jmp
loop
jmp
loopne
jmp
fcmovu
fcmovbe
aam
ror
lret
std
sti
mov
push
push
push
stos
add
add
add
add
adc
mov
cld
mov
dec
mov
xlat
jmp
jmp
out
push
repnz
cli
stc
stc
std
stc
stc
stc
stc
cli
cli
cld
cld
cli
cli
cld
cld
cld
cld
sti
sti
cld
std
std
std
std
std
std
cld
std
std
sti
cld
sti
sti
sti
cli
cld
stc
cli
sti
cli
stc
cld
stc
clc
cld
clc
clc
sti
clc
idiv
cli
div
sti
div
stc
div
clc
div
out
in
in
jmp
loope
jmp
fcos
sar
ror
lret
mov
mov
lea
add
add
add
add
add
add
add
add
pop
pop
xor
mov
ror
fstp
jmp
jmp
out
push
out
out
cld
stc
stc
std
clc
cli
std
stc
stc
sti
sti
sti
sti
std
sti
sti
sti
sti
cld
std
cld
cld
std
std
std
std
std
cld
sti
cli
sti
std
cli
sti
cld
sti
cli
cld
stc
clc
cld
clc
clc
cli
stc
clc
sti
stc
clc
cld
idiv
stc
div
stc
div
clc
cmc
cmc
in
call
loope
jecxz
fdivrp
fdivr
fcom
sar
ror
std
mov
mov
and
and
add
add
add
add
add
add
add
adc
mov
ret
std
aam
into
fcmovnbe
aad
loop
fdivr
call
in
push
in
in
std
clc
clc
cld
stc
stc
std
cli
cli
sti
sti
sti
sti
std
sti
sti
sti
sti
sti
cld
std
sti
std
std
std
std
std
sti
sti
cli
sti
sti
cli
sti
cli
cli
sti
cli
stc
sti
stc
clc
sti
cli
idiv
cli
clc
idiv
sti
div
cli
div
cli
div
push
repz
jmp
out
out
loopne
loop
fst
xlat
call
ror
dec
mov
pushl
or
add
add
add
add
add
bound
mov
mov
lret
fcmovnbe
aam
loopne
out
loope
ljmp
cli
div
std
stc
stc
cli
stc
sti
cli
cld
cld
sti
cld
cld
cld
cld
std
cld
cld
cld
std
std
std
std
cld
std
cld
cld
sti
sti
cli
cli
cld
sti
cli
cld
cli
stc
sti
clc
stc
cld
cli
stc
sti
stc
clc
cli
clc
idiv
cli
clc
idiv
stc
div
push
icebp
icebp
call
loope
jmp
call
into
into
dec
mov
cwtl
jmp
add
sbb
cmp
ss
mov
mov
sar
fcos
in
jmp
out
clc
hlt
hlt
cld
cli
cli
cli
cli
std
sti
sti
std
sti
std
sti
std
std
std
std
std
std
cld
std
sti
cld
sti
std
sti
sti
cli
stc
std
cli
stc
cld
stc
cli
std
stc
cli
cld
clc
stc
cli
stc
stc
cli
idiv
cli
div
push
out
in
jmp
loop
jmp
loopne
jmp
fcmovu
fcmovbe
aam
ror
int3
dec
ret
lds
addr16
add
add
add
add
add
adc
mov
mov
xlat
rcl
xlat
jmp
call
out
push
out
out
std
cli
cli
std
sti
sti
cld
sti
cld
sti
cld
std
std
std
cld
std
std
cld
cld
sti
cli
cli
stc
cli
std
cli
cli
sti
sti
stc
cld
cli
cli
cld
stc
stc
sti
clc
clc
sti
div
stc
cmc
cmc
in
call
loop
in
fdivrp
fcompp
fdivr
fcom
sar
ror
leave
inc
mov
mov
lea
add
add
add
add
add
and
mov
ret
iret
into
jmp
fstp
call
in
push
jmp
cld
clc
clc
std
cli
cli
std
sti
cli
std
cld
cld
cld
cld
std
std
std
std
std
std
std
cld
cld
cld
sti
sti
cli
sti
sti
std
cli
sti
cld
stc
stc
std
cli
cli
cld
stc
stc
sti
clc
clc
sti
div
sti
clc
clc
push
repz
ljmp
jmp
fstp
fst
xlat
call
ror
dec
mov
cld
sarb
push
add
add
add
add
add
add
arpl
mov
lds
lret
aam
jmp
fcmovnu
jmp
loopne
ljmp
clc
cmc
hlt
std
sti
sti
std
cli
sti
std
cld
sti
std
std
std
std
cld
sti
sti
cld
sti
sti
cli
stc
stc
cli
cli
cli
cli
std
stc
stc
cld
cli
stc
cli
stc
stc
cli
clc
clc
push
out
out
call
loopne
jmp
fcmovnu
aam
aam
int
leave
ret
les
xchg
jmp
add
add
add
add
add
add
add
add
sub
sub
mov
mov
std
xlat
rcl
fcompp
fdivr
in
fdivrp
jmp
in
push
out
out
std
cli
sti
std
cli
cli
sti
sti
std
std
std
std
std
cld
cld
sti
std
cld
cld
cli
cli
std
sti
sti
sti
sti
std
stc
stc
cld
clc
clc
sti
stc
stc
cli
clc
clc
stc
div
in
out
jmp
loop
jmp
fcos
fcmovbe
sar
ror
lret
inc
mov
mov
mov
add
add
add
add
add
add
or
cmp
les
ret
std
aad
int
jmp
jmp
loope
jmp
in
out
jmp
idiv
std
cld
cld
std
cld
cld
std
std
std
std
cld
cld
cld
cld
sti
sti
sti
sti
cld
cli
sti
cli
cli
cli
cli
stc
cld
clc
clc
cld
stc
stc
push
lock
jmp
loope
jmp
fstp
fst
xlat
call
rcl
dec
mov
sti
ret
mov
and
add
add
add
add
add
or
push
inc
mov
lret
fcmovbe
sar
in
fdivrp
jmp
out
push
lock
cld
sti
cld
cld
cld
cld
std
std
std
std
std
cld
cld
cld
cld
std
std
sti
sti
cli
cli
sti
sti
sti
std
cli
cli
std
cli
cli
std
cli
cli
std
stc
stc
cld
clc
clc
in
jmp
loop
in
loope
fcmovnbe
sar
aam
int3
dec
ret
lds
xchg
call
add
add
add
add
add
add
add
add
sub
es
mov
mov
std
ror
fst
jmp
fstp
jmp
loop
jmp
in
out
ljmp
std
std
std
std
cld
cld
std
std
std
std
std
std
std
cld
cld
cld
sti
std
cld
cld
cld
cld
sti
sti
std
sti
sti
cld
stc
stc
std
cli
cli
push
icebp
icebp
call
loope
jmp
fstp
xlat
fcom
sar
iret
leave
enter
mov
push
push
push
lods
add
add
add
add
add
add
lcall
dec
ret
sar
into
lret
fcmovnbe
sar
loope
fcos
out
jmp
out
push
out
out
cld
std
std
cld
std
std
std
cld
cld
std
std
std
std
std
std
std
std
cld
cld
cld
std
sti
cld
sti
cli
cli
std
sti
cli
std
cli
cli
cld
stc
stc
cli
div
in
out
jmp
loop
jmp
loopne
jmp
fcmovnu
aad
aad
int
int3
mov
les
mov
adc
add
add
add
add
add
add
inc
cltd
mov
mov
xlat
rcl
fst
xlat
jmp
fstp
jmp
loope
jmp
in
in
call
cmc
std
std
cld
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
std
cld
sti
std
cli
cli
std
cli
cli
cld
cli
cli
std
cli
cli
push
out
out
call
loop
jmp
fstp
fdivr
fcom
sar
ror
lret
sarl
jl
ja
add
add
add
add
add
add
push
push
xor
mov
sar
int3
lret
sar
loopne
fcos
in
fdivrp
jmp
out
out
ljmp
std
std
std
std
cld
cld
std
std
std
std
std
sti
cld
std
std
sti
cld
std
sti
sti
cld
cld
cld
cli
cli
std
sti
sti
push
repz
ljmp
jmp
jmp
fcmovu
fcmovnbe
aam
aam
int
lret
mov
sarl
pop
push
push
add
add
inc
inc
inc
fwait
mov
mov
aad
into
jmp
jmp
loope
jmp
in
in
out
push
in
in
sti
cld
cld
cld
std
std
std
cld
cld
std
std
std
std
std
std
std
std
std
std
cld
std
cld
cld
cld
sti
sti
std
sti
sti
std
sti
sti
cld
sti
sti
clc
div
in
out
jmp
loope
jmp
loopne
jmp
fcmovnu
call
rcl
ror
enter
mov
jp
jne
add
add
add
add
add
add
push
add
xchg
jmp
mov
mov
fcom
sar
fcompp
fdivr
in
fdivrp
out
loope
jmp
in
in
out
push
lock
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
cld
std
sti
std
cld
sti
cld
sti
std
cld
sti
sti
stc
stc
cld
sti
sti
cli
clc
clc
in
jmp
loop
out
loope
jecxz
fdivr
fcmovbe
sar
ror
int3
dec
ret
ret
mov
mov
sbb
sbb
add
add
add
add
add
add
add
add
das
das
add
mov
ret
std
ror
int3
sar
loopne
fcos
in
fdivrp
call
out
in
out
push
icebp
icebp
cld
cld
cld
std
std
std
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
sti
std
cld
cld
cld
std
sti
sti
cld
sti
cli
cld
cli
sti
cli
clc
stc
out
ljmp
out
loope
jecxz
fdivrp
fcos
fcmovbe
sar
aam
int
int
inc
mov
mov
mov
add
add
add
add
add
add
jae
insl
leave
lds
mov
call
iret
int
fcmovnbe
aam
loopne
in
fdivrp
call
out
in
out
push
out
out
sti
sti
sti
sti
cld
cld
sti
cld
cld
cld
cld
cld
std
std
std
std
cld
std
cld
std
std
std
std
std
std
std
std
cld
std
std
std
std
std
std
std
std
cld
cld
cld
sti
cld
sti
cld
std
std
stc
clc
idiv
in
jmp
loope
out
loopne
jecxz
fdivrp
aad
aad
into
dec
leave
enter
mov
std
lahf
fwait
cltd
out
or
pop
xor
add
add
add
add
add
add
or
cmp
mov
mov
call
iret
iret
fcmovnbe
aad
in
fdivrp
call
in
in
in
push
in
in
clc
clc
clc
cld
cld
cld
sti
cld
cld
sti
sti
sti
cld
cld
cld
std
std
std
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
std
std
std
cld
cld
cld
sti
sti
sti
sti
cld
cld
cld
sti
sti
push
hlt
repz
jmp
out
call
loope
jmp
fcos
fcmovbe
aad
iret
iret
ror
leave
dec
ret
mov
mov
jmp
and
add
add
add
add
add
add
add
and
and
mov
mov
sarb
iret
into
fcmovnbe
aam
fcos
jecxz
out
loope
jmp
in
out
call
repnz
cli
stc
stc
sti
sti
sti
sti
cld
cld
cld
sti
sti
sti
sti
sti
cld
cld
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
sti
sti
sti
sti
sti
cld
sti
cli
cld
cld
sti
sti
sti
sti
clc
div
push
in
in
jmp
jecxz
jmp
loope
jmp
loopne
jmp
fstp
fcompp
fcos
fcmovbe
aam
aad
into
ror
lret
ret
mov
mov
dec
mov
add
add
add
add
add
add
cmp
mov
mov
sarl
aad
int
fcmovbe
sar
fcompp
fdivr
loop
in
out
jecxz
call
in
out
jmp
icebp
clc
clc
clc
cli
cli
cli
cld
sti
cli
sti
sti
sti
cli
sti
sti
cli
sti
sti
sti
sti
sti
cli
sti
sti
sti
cli
cli
sti
cli
cli
cli
cli
stc
push
div
push
in
in
ljmp
jmp
loopne
jmp
jmp
xlat
aam
aam
into
ror
enter
sar
mov
stc
mov
gs
add
add
dec
dec
dec
cltd
mov
mov
mov
call
int
fcom
sar
aad
loopne
fcos
loop
fdivr
in
loopne
out
loopne
call
jecxz
in
out
out
jmp
push
lock
repnz
cmc
cmc
push
div
push
cmc
cmc
push
hlt
hlt
push
repnz
in
in
in
call
loop
out
in
in
loop
fdivr
fcompp
fdivr
aad
fcom
sar
ror
int
into
enter
rol
mov
sarl
add
add
add
add
add
add
add
add
inc
inc
inc
xchg
mov
mov
mov
ror
lret
ror
sar
fst
jmp
fcmovu
jmp
fcmovnu
jmp
fstp
jmp
jmp
loopne
jmp
jmp
loopne
jmp
loope
call
jecxz
jmp
in
jmp
loop
jmp
jmp
jmp
jmp
fstp
jmp
jmp
fcmovnu
fdivr
aad
sar
aad
iret
ror
lret
dec
mov
cld
mov
mov
imul
add
add
xor
xor
movsl
movsb
clc
lds
mov
std
into
enter
int3
int3
rcl
fcom
sar
fcmovnbe
aad
fst
fdivr
fcos
loopne
loop
loop
fdivr
loope
fdivr
loop
jecxz
loop
loop
loop
loope
fcos
fstp
fdivr
fst
fcmovbe
aam
xlat
rcl
call
iret
into
call
int3
lret
dec
enter
ret
ret
mov
mov
call
push
mov
add
add
add
add
add
add
pop
push
push
dec
cmpl
ret
mov
mov
std
leave
ret
ret
enter
lret
lret
into
int3
call
ror
fcom
sar
fcmovbe
sar
fcmovnbe
aam
aad
aad
fst
aad
aad
fcmovnbe
aam
fcom
sar
xlat
rcl
call
ror
ror
int3
ror
lret
dec
mov
inc
mov
mov
lcall
xor
jae
add
add
add
add
add
add
add
add
add
add
add
sbb
inc
xchg
mov
inc
mov
mov
cld
int
leave
leave
ror
lret
int
aam
int3
call
iret
int
aad
into
call
into
int
aad
into
call
int
call
into
int
ror
int3
ror
lret
leave
leave
dec
mov
leave
ret
sar
mov
mov
inc
mov
lods
lcall
pop
stos
femms
push
xor
add
add
add
add
add
add
add
add
push
push
sub
dec
dec
xchg
sahf
cwtl
xchg
call
leave
ret
ret
ret
lds
mov
sti
mov
ret
lret
vpaddd
lret
dec
ret
ret
ret
cld
ret
mov
mov
dec
ret
ret
mov
jmp
fs
sbb
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
ss
jb
mov
mov
stos
dec
rol
int3
lret
dec
rol
mov
mov
inc
sarb
enter
enter
lret
dec
mov
lcall
jnp
lret
dec
dec
dec
mov
add
add
add
add
add
add
add
add
cs
pop
dec
inc
inc
xchg
pop
test
xchg
in
xchg
xchg
call
popf
cwtl
xchg
ljmp
xchg
ja
jb
fs
pusha
mov
dec
dec
xchg
ss
sbb
pop
cmp
add
adc
add
add
add
add
add
or
add
push
add
add
or
or
push
adc
sbb
sbb
sbb
sbb
sbb
pop
pop
push
das
adc
movaps
add
sbb
add
or
add
add
add
add
add
add
incb
add
add
inc
add
add
add
cld
add
add
add
aas
push
add
add
add
ud0
inc
add
add
add
add
incl
add
add
incl
add
add
add
add
incb
add
add
add
add
incb
add
add
add
add
incb
add
add
add
add
incb
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
pop
push
add
add
add
pop
cld
add
add
add
aas
incl
add
add
call
lahf
push
add
add
jg
push
add
add
aas
jmp
add
add
aas
inc
add
add
pop
inc
add
add
ud0
incl
ud0
incl
add
add
pop
incl
add
add
pop
incb
add
add
add
incb
add
add
add
cld
add
add
add
cld
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
jg
push
add
add
add
jg
push
add
add
add
aas
jmp
add
add
add
aas
jmp
add
add
add
aas
jmp
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
pop
incl
add
pop
incl
add
pop
incl
add
add
add
pop
incl
add
add
add
pop
incl
add
add
add
pop
incl
add
add
add
pop
incl
add
add
add
pop
incl
add
add
add
pop
incl
add
add
add
pop
incl
add
pop
incl
add
pop
incl
add
pop
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
incl
add
ud0
inc
add
add
add
ud0
inc
add
add
add
pop
inc
add
add
add
pop
inc
add
add
add
pop
jmp
add
add
add
pop
jmp
add
add
add
aas
jmp
add
add
add
aas
push
add
add
add
aas
push
add
add
add
jg
push
add
add
add
jg
clc
add
add
add
clc
add
add
add
cld
add
add
add
cld
add
add
add
incb
add
add
add
incl
add
add
add
incl
add
add
pop
incl
ud0
inc
add
add
pop
jmp
add
add
pop
push
add
add
aas
clc
add
add
jg
cld
add
add
incb
add
add
incl
jmp
add
aas
cld
add
inc
pop
ljmp
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
mov
add
add
mov
add
add
mov
add
add
mov
mov
add
mov
mov
add
add
mov
mov
add
or
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
or
decl
xchg
add
clc
mov
or
decl
addb
add
mov
decl
add
add
mov
decl
addb
dec
mov
decl
add
mov
clc
mov
add
add
mov
clc
mov
add
add
mov
clc
mov
add
mov
clc
mov
add
mov
decl
add
js
mov
clc
mov
mov
decl
decl
clc
mov
add
add
mov
clc
xchg
pop
incl
decl
js
mov
add
add
incl
mov
clc
mov
add
mov
add
add
add
push
add
add
add
mov
add
mov
add
add
add
push
add
add
add
js
mov
or
add
add
add
ud0
push
add
add
add
add
add
mov
add
add
add
jg
clc
add
add
add
add
add
mov
add
add
add
incl
add
add
add
add
clc
mov
add
mov
add
add
add
pushl
add
add
add
add
mov
js
mov
add
add
add
add
incl
add
add
pop
mov
add
add
add
add
add
push
add
mov
add
add
add
add
add
add
push
add
mov
add
add
mov
add
add
add
jg
clc
add
js
addb
or
add
add
add
add
incl
add
mov
add
js
jo
pop
incl
add
add
add
mov
add
mov
add
add
add
or
push
add
js
jo
add
add
mov
add
add
add
jg
clc
add
or
add
mov
add
add
add
pushl
add
add
add
add
pop
mov
or
inc
inc
inc
inc
inc
add
incl
inc
inc
inc
inc
jo
mov
js
add
ja
ja
je
je
jg
push
add
inc
inc
je
ja
jo
mov
mov
ja
ja
jo
incl
ja
ja
ja
ja
js
mov
ja
ja
add
incl
ja
ja
add
mov
add
mov
ja
ja
add
clc
add
ja
ja
ja
jo
mov
add
or
ja
ja
add
incl
ja
ja
pop
mov
add
or
ja
ja
add
clc
add
ja
ja
ja
pop
mov
add
dec
mov
ja
ja
je
pop
incl
ja
ja
mov
add
js
jo
ja
ja
add
clc
inc
add
ja
ja
mov
add
mov
ja
add
push
add
ja
ja
add
add
add
jo
add
incl
ja
mov
add
mov
add
incl
add
jo
mov
js
incl
js
jo
add
add
mov
clc
xchg
mov
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
decl
add
add
mov
clc
mov
add
pop
mov
clc
mov
add
pop
mov
clc
mov
add
pop
mov
clc
mov
add
add
clc
mov
add
add
clc
mov
add
add
decl
add
mov
decl
add
mov
decl
add
mov
decl
add
mov
clc
mov
or
clc
mov
pop
mov
clc
mov
add
clc
mov
add
decl
add
add
mov
decl
add
add
mov
clc
mov
add
or
clc
mov
add
pop
mov
clc
mov
add
add
decl
add
decl
add
mov
clc
mov
or
decl
add
pop
mov
decl
add
add
clc
mov
add
js
mov
decl
or
decl
add
clc
mov
js
mov
decl
add
or
clc
mov
add
mov
clc
mov
add
add
mov
decl
xchg
add
add
mov
decl
mov
add
mov
decl
mov
add
pop
mov
decl
mov
js
mov
clc
mov
mov
add
add
mov
mov
mov
add
mov
mov
mov
mov
js
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
add
js
mov
mov
inc
ja
ja
ja
add
jmp
jg
incl
incb
add
clc
add
push
add
jg
inc
add
aas
incl
incl
add
ud0
incb
add
pop
cld
add
add
clc
add
add
push
add
add
jmp
add
add
jg
jmp
add
add
aas
inc
add
add
pop
incl
pop
incl
add
add
ud0
incl
add
add
pop
incb
add
add
add
cld
add
add
add
clc
add
add
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
jg
jmp
add
add
add
aas
inc
add
add
add
aas
inc
add
add
add
pop
incl
add
pop
incl
add
add
add
ud0
incl
add
add
add
ud0
incb
add
add
add
pop
incb
add
add
add
pop
cld
add
add
add
add
cld
add
add
add
add
clc
add
add
add
add
clc
add
add
add
add
push
push
push
jg
jmp
jg
jmp
jg
inc
aas
inc
aas
inc
pop
inc
pop
incl
add
add
pop
incl
add
add
pop
incl
add
add
ud0
incl
ud0
incl
ud0
incl
ud0
incl
pop
incl
pop
incb
pop
incb
pop
incb
pop
incb
pop
incb
pop
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
pop
incb
pop
incb
pop
incb
pop
incb
pop
incl
pop
incl
pop
incl
ud0
incl
ud0
incl
ud0
incl
ud0
incl
add
add
ud0
incl
add
add
pop
incl
add
add
pop
incl
add
add
pop
inc
pop
inc
aas
inc
aas
jmp
aas
jmp
jg
jmp
jg
push
push
clc
clc
add
add
add
add
cld
add
add
add
add
cld
add
add
add
add
incb
add
add
add
pop
incb
add
add
add
pop
incl
add
add
add
ud0
incl
add
ud0
inc
add
add
add
pop
inc
add
add
add
aas
jmp
add
add
add
jg
push
add
add
add
clc
add
add
add
cld
add
add
add
incb
add
add
pop
incl
ud0
inc
add
add
aas
push
add
add
jg
cld
add
add
incl
add
ud0
jmp
add
jg
incl
pop
ljmp
add
add
add
add
add
add
add
add
inc
addb
addb
add
add
addb
add
rol
rcr
add
lret
add
add
or
push
add
or
add
or
add
push
push
add
adc
add
adc
add
pop
push
add
sbb
add
sbb
add
pop
push
add
and
add
and
add
es
sub
add
das
add
xor
add
xor
add
ss
cmp
add
aaa
cmp
cmp
cmp
inc
cmp
add
aas
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
pop
add
pusha
add
arpl
push
push
add
imul
jo
add
jno
js
jb
jns
ja
jl
js
jp
jns
cmpb
test
addb
addb
mov
mov
nop
mov
add
xchg
xchg
add
lcall
movsl
mov
mov
add
stos
test
add
mov
add
mov
add
mov
mov
sarb
add
sarl
enter
int
movb
enter
enter
leave
add
ror
add
rcl
add
rcl
add
fcom
add
add
fcmovu
add
loopne
add
fnstsw
add
loope
add
loop
add
call
call
add
ljmp
cmc
icebp
icebp
add
repnz
clc
testb
idiv
add
clc
clc
add
cltd
pop
add
add
add
add
cltd
pop
add
cmp
add
adc
hlt
pop
or
in
or
jo
adc
add
add
lods
xchg
dec
add
adc
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
push
or
add
adc
pop
add
sbb
add
push
push
add
pop
pop
add
pop
push
add
and
add
and
add
and
es
daa
add
cs
das
xor
inc
aas
aas
add
inc
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
add
add
jno
ja
jne
jp
js
jge
js
jge
jnp
cmpb
mov
mov
xchg
xchg
xchg
add
xchg
xchg
add
movsb
add
lods
add
mov
roll
les
ror
lret
add
int3
lret
add
into
int
xlat
rcl
add
aad
flds
flds
fiaddl
loopne
fildl
loope
fiadds
jecxz
filds
out
filds
ljmp
add
call
jmp
out
in
in
add
lock
add
lock
icebp
icebp
add
icebp
icebp
add
repz
repnz
repz
repz
hlt
repz
hlt
hlt
add
cmc
cmc
add
div
add
div
add
div
add
div
add
div
add
clc
testl
sti
clc
clc
add
stc
stc
add
stc
clc
add
cli
cli
add
cli
cli
add
sti
cli
add
cld
sti
add
cld
sti
add
std
std
add
std
add
incb
incb
incb
incb
incl
incl
loop
faddl
jecxz
fldl
in
faddl
in
fldl
in
fiadds
in
filds
in
filds
out
filds
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
dec
cwtl
test
add
add
or
sbb
dec
push
push
push
push
push
and
add
add
inc
push
push
push
push
push
push
push
push
push
push
dec
es
add
add
cmp
push
push
push
push
push
push
push
push
push
push
push
push
dec
sbb
and
push
push
push
push
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
xor
add
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
inc
adc
add
adc
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
sbb
adc
push
push
push
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pop
pop
pop
pop
pop
push
push
push
push
and
add
add
push
push
push
push
pop
pop
pop
pop
pusha
pusha
pusha
bound
bound
pusha
pusha
pusha
pop
pop
pop
pop
pop
push
push
pop
sub
sbb
push
pop
pop
pop
pop
pop
pusha
pusha
bound
arpl
arpl
bound
pusha
pop
pop
pop
pop
push
push
push
sub
add
add
push
push
push
pop
pop
pop
pop
pusha
pusha
bound
arpl
data16
bound
pop
pop
pop
pop
push
push
pop
sub
push
push
push
push
pop
pop
pop
pop
pusha
pusha
arpl
data16
pusha
pop
pop
pop
pop
push
push
push
sub
add
adc
push
pop
pop
pop
pop
pusha
popa
arpl
data16
bound
pop
pop
pop
push
push
pop
and
add
push
pop
pop
pop
pop
pusha
bound
addr16
push
addr16
pusha
pusha
pop
pop
pop
push
push
push
sbb
add
add
pop
pop
pop
pop
pusha
bound
addr16
push
push
push
push
addr16
pusha
pop
pop
pop
push
push
push
adc
add
push
push
pop
pop
pop
pop
pusha
bound
addr16
push
push
push
push
push
addr16
pusha
pusha
pop
pop
pop
push
push
dec
add
push
push
pop
pop
pop
pop
pusha
bound
addr16
push
imul
imul
push
addr16
pusha
pop
pop
pop
push
push
inc
pop
push
push
pop
pop
pop
pusha
bound
addr16
push
imul
imul
push
push
addr16
pop
pop
pop
pop
push
push
sub
add
push
pop
pop
pop
pusha
pusha
arpl
addr16
push
imul
imul
imul
push
addr16
pusha
pop
pop
pop
push
push
pop
push
cmp
pop
pop
pop
pusha
popa
arpl
addr16
push
imul
imul
imul
push
push
push
arpl
pop
pop
pop
push
push
push
add
add
push
push
pop
pop
pop
pusha
pusha
arpl
addr16
push
imul
imul
imul
imul
push
push
arpl
pop
pop
pop
push
push
aas
add
pop
push
push
pop
pop
pop
pusha
bound
addr16
imul
imul
imul
imul
push
push
addr16
pusha
pop
pop
pop
push
push
pop
inc
push
push
pop
pop
pop
pusha
bound
addr16
imul
insb
imul
imul
imul
insb
imul
addr16
pop
pop
pop
push
push
push
add
add
push
push
pop
pop
pop
pusha
pusha
arpl
addr16
outsb
jno
arpl
imul
imul
imul
pusha
data16
outsl
jno
imul
arpl
pusha
pop
pop
pop
push
push
inc
add
push
push
push
pop
pop
pop
pusha
bound
data16
outsb
bound
and
adc
adc
imul
imul
adc
adc
sbb
inc
pop
imul
data16
pusha
pop
pop
pop
push
push
sbb
add
add
push
push
pop
pop
pop
pusha
bound
outsb
push
sub
add
add
add
add
insb
insb
imul
add
add
add
or
imul
pusha
pop
pop
pop
push
push
push
push
push
pop
pop
pop
pusha
pusha
arpl
addr16
pop
add
push
jno
insl
insl
insl
insl
insl
outsb
adc
adc
pop
insl
arpl
pop
pop
pop
push
push
das
add
inc
push
push
pop
pop
pop
pusha
bound
dec
sbb
add
adc
insl
insl
insl
insl
insl
insl
insl
outsl
and
add
adc
arpl
pusha
pusha
pop
pop
pop
push
push
add
push
push
pop
pop
pop
pusha
arpl
add
add
add
outsb
insl
insl
insl
insl
insl
insl
insl
insl
jno
add
inc
addr16
pop
pop
pop
push
push
cmp
add
add
push
pop
pop
pop
fs
add
jno
insl
insl
insl
insl
insl
insl
insl
jno
add
add
pop
addr16
pop
pop
pop
push
push
add
add
push
push
pop
pop
pop
addr16
and
add
add
insl
insl
insl
insl
insl
insl
insl
insl
jno
push
add
add
inc
addr16
pop
pop
push
push
inc
add
dec
push
pop
pop
pop
fs
adc
or
add
push
outsb
insl
insl
insl
insl
insl
insl
insl
insl
outsb
jno
add
or
pusha
pop
pop
push
push
add
push
pop
pop
arpl
or
add
jno
insl
insl
outsb
outsb
outsb
outsb
insl
insl
insl
jno
add
or
pusha
pop
push
push
aas
inc
push
pop
pop
bound
or
add
dec
jno
insl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jno
adc
add
pop
pop
push
push
add
add
push
push
pop
bound
or
sbb
insl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jno
add
add
pusha
pop
push
push
cmp
add
inc
push
push
pop
dec
push
or
add
cmp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jno
add
add
cmp
push
push
add
push
push
pop
pop
and
add
add
add
adc
or
insl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jno
pop
add
adc
add
add
add
add
dec
pop
push
push
xor
add
add
or
adc
adc
push
push
sbb
sbb
sbb
push
add
das
jno
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jno
add
adc
push
push
push
push
adc
adc
or
pop
pop
push
push
push
push
pop
push
pop
or
sbb
sbb
sbb
sbb
sbb
sbb
adc
or
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jno
sbb
or
sbb
sbb
sbb
sbb
adc
adc
adc
aas
pop
push
push
add
sub
push
pop
xor
sbb
sbb
sbb
sbb
sbb
add
xor
outsb
outsb
outsb
outsb
outsb
outsb
outsl
outsl
outsl
outsb
outsb
outsb
outsb
outsb
outsb
jno
add
push
pop
sbb
sbb
sbb
sbb
sbb
pop
pop
push
sbb
push
inc
add
dec
push
pop
push
push
nop/reserved
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
adc
insl
outsb
outsb
outsb
outsb
outsb
outsb
outsl
outsl
outsl
outsl
outsb
outsb
outsb
outsb
outsb
outsb
jno
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
and
pop
adc
ds
push
push
add
push
push
pop
ss
and
and
and
and
and
and
sbb
add
insl
outsb
outsb
outsb
outsb
outsb
outsb
outsl
outsl
jno
outsl
outsl
outsb
outsb
outsb
outsb
outsb
jno
or
and
and
and
and
and
and
and
pop
push
xor
add
add
pop
pop
pop
or
and
and
and
and
outsl
outsb
insl
outsb
outsb
outsb
outsb
outsb
outsl
outsl
jno
jno
outsl
outsl
outsb
outsb
outsb
outsb
outsb
jno
add
sbb
and
and
daa
and
adc
push
dec
dec
push
pop
inc
adc
and
sub
sub
and
adc
adc
insl
outsb
outsb
outsb
outsb
outsb
outsl
outsl
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
outsb
outsb
insl
and
or
and
and
sub
or
sbb
add
push
push
pop
xor
sub
sub
sub
sub
sub
sub
add
dec
jno
outsb
outsb
outsb
outsb
outsb
outsl
jno
jno
jno
jno
jno
outsb
outsb
outsb
outsb
insl
jno
push
add
sub
sub
sub
sub
sub
sub
sub
or
xor
add
push
pop
pop
and
sub
sub
sub
sub
sub
sbb
add
insl
insl
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
outsb
insl
jno
adc
adc
sub
sub
sub
sub
sub
das
adc
dec
pop
push
dec
add
dec
push
pop
dec
adc
das
das
das
cs
sub
sub
das
sbb
add
jno
insl
insl
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
outsb
outsb
outsb
outsb
insl
insl
jno
or
sub
das
sub
cs
das
das
das
cs
push
cmp
push
add
push
push
pop
inc
push
adc
xor
das
das
das
das
das
das
das
xor
add
ss
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
outsb
outsb
outsb
outsb
outsb
insl
insl
jno
adc
adc
das
das
das
das
das
xor
sbb
and
and
pop
xor
xor
xor
xor
or
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
outsb
outsb
outsb
outsb
outsb
insl
insl
insl
jno
adc
add
das
xor
xor
xor
pop
push
cmp
xor
pop
sub
and
xor
add
push
dec
jno
insb
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
outsb
outsb
outsb
outsb
outsb
insl
insl
insl
insl
jno
and
add
and
xor
xor
pop
push
dec
inc
push
pop
pop
pop
or
cmp
xor
add
bound
insl
insl
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
insl
insl
insl
insl
insb
jno
cmp
add
adc
xor
dec
pop
push
push
dec
push
pop
push
sbb
sub
adc
add
sbb
imul
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
insl
insl
insl
insl
insb
imul
sub
add
adc
sub
cmp
push
or
pop
add
add
pop
push
push
adc
pop
push
or
and
jno
imul
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
outsb
insl
insl
insl
insb
imul
outsb
push
sub
add
add
or
das
add
and
pop
dec
adc
add
add
or
jno
imul
insl
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
insl
insl
insl
insl
imul
imul
inc
and
add
add
pusha
push
push
cmp
add
sub
dec
pop
imul
imul
insl
insl
insl
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
insl
insl
insl
insl
imul
imul
jno
pusha
dec
aas
xor
and
dec
pop
pop
push
inc
add
cmp
pop
pop
arpl
imul
imul
imul
insl
insl
insl
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
jno
outsl
outsl
outsb
outsb
outsb
outsb
insl
insl
insl
insl
insb
imul
imul
push
outsb
outsb
imul
pusha
pop
pop
push
dec
add
inc
push
pop
pop
pop
pusha
arpl
addr16
imul
imul
insl
insl
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
jno
outsl
outsl
outsb
outsb
outsb
outsb
insl
insl
insl
insl
insb
imul
imul
push
addr16
pop
pop
push
push
add
dec
push
pop
pop
pop
pusha
arpl
addr16
imul
imul
insl
insl
insl
insl
insl
insl
outsb
outsb
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
jno
jno
outsb
outsb
outsb
outsb
insl
insl
insl
insl
insb
imul
imul
push
addr16
pop
pop
push
push
add
dec
push
pop
pop
pop
pusha
arpl
addr16
imul
imul
insl
insl
insl
insl
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsb
insl
insl
insl
imul
imul
push
push
arpl
pop
pop
push
push
sbb
push
push
pop
pop
pop
pusha
arpl
push
imul
insl
insl
insl
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
insl
insl
insb
imul
addr16
pusha
pusha
pop
pop
push
push
and
push
push
pop
pop
pop
pusha
arpl
addr16
imul
outsb
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsl
outsb
outsb
outsb
outsb
insl
insl
insl
imul
data16
pop
pop
push
push
add
add
add
pop
pop
pop
pusha
arpl
push
outsb
outsb
outsb
outsb
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
imul
arpl
pop
pop
push
push
sub
push
push
pop
pop
pusha
pusha
arpl
push
outsb
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
imul
arpl
pop
pop
push
push
das
add
pop
pop
pusha
pusha
arpl
push
outsb
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
imul
arpl
pop
pop
push
push
xor
push
push
pop
pop
pusha
popa
arpl
addr16
outsb
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
outsb
outsb
imul
arpl
pop
pop
push
push
xor
push
push
pop
pop
pusha
popa
arpl
push
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsl
outsb
outsb
outsb
outsb
outsb
outsb
imul
arpl
pop
pop
push
push
xor
push
push
pop
pop
pusha
pusha
arpl
push
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsl
outsb
outsb
outsb
outsb
outsb
outsb
imul
arpl
pop
pop
push
push
sub
add
pop
pop
pop
pusha
arpl
push
outsb
outsl
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
outsb
outsb
imul
arpl
pop
pop
push
push
sub
push
push
pop
pop
pop
pusha
arpl
push
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsl
outsl
outsb
outsb
outsb
outsb
outsb
imul
arpl
pop
pop
push
push
and
add
pop
pop
pop
pusha
arpl
insl
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsl
outsb
outsb
outsb
outsb
outsb
imul
arpl
pop
pop
push
push
pop
add
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsl
outsl
outsb
outsb
outsb
outsb
outsb
imul
arpl
pop
pop
push
push
sbb
dec
push
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsl
outsb
outsb
outsb
outsb
insl
imul
arpl
pop
pop
push
push
add
inc
push
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsb
outsb
outsb
outsb
insl
imul
arpl
pop
pop
push
push
add
cmp
pop
pop
pusha
bound
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsb
outsb
push
data16
pop
pop
pop
push
dec
add
xor
pop
pop
pusha
bound
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsb
outsb
outsb
outsb
push
data16
pop
pop
pop
push
inc
add
and
pop
pop
pusha
popa
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsb
insl
push
data16
pop
pop
pop
push
add
add
pop
pop
pusha
popa
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsb
insl
addr16
pop
pop
push
push
xor
add
push
push
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsb
insl
addr16
pop
pop
push
push
add
add
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsb
outsb
imul
arpl
pop
pop
push
push
ds
push
pop
pop
pusha
bound
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
outsb
outsb
push
data16
pop
pop
pop
push
push
das
push
push
pop
pop
pusha
popa
arpl
imul
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
push
data16
pop
pop
pop
push
dec
pop
push
push
pop
pop
pusha
popa
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pop
pop
push
push
cmp
push
push
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
imul
arpl
pop
pop
push
push
and
add
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
push
data16
pop
pop
pop
push
push
add
xor
push
pop
pop
pusha
bound
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pop
pop
pop
push
dec
add
sbb
push
pop
pop
pop
pusha
arpl
imul
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
imul
arpl
pop
pop
push
push
cmp
add
dec
push
pop
pop
pop
pusha
bound
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
push
data16
pusha
pop
pop
push
push
and
add
ds
push
pop
pop
pusha
bound
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pop
pop
pop
push
push
and
push
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
imul
arpl
pop
pop
push
push
inc
add
pop
pop
pop
pusha
bound
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pop
pop
pop
push
push
and
ds
push
pop
pop
pusha
popa
arpl
push
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
imul
arpl
pop
pop
pop
push
dec
add
sbb
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pop
pop
pop
push
push
cmp
add
dec
push
push
pop
pop
pusha
popa
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
push
data16
pop
pop
pop
push
push
sub
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pusha
pop
pop
push
push
inc
add
push
pop
pop
pusha
pusha
arpl
push
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pusha
pop
pop
pop
push
push
pop
add
pop
pusha
bound
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pop
pop
pop
push
push
inc
add
add
push
pop
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pusha
pop
pop
pop
push
push
pop
add
add
push
push
pop
pop
pop
pusha
popa
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pusha
pop
pop
pop
push
push
inc
add
push
pop
pop
pop
pusha
arpl
addr16
insl
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pusha
pop
pop
push
push
push
add
sbb
push
pop
pop
pop
pusha
arpl
addr16
insl
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pusha
pop
pop
pop
push
push
xor
add
add
pop
pop
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pusha
pop
pop
pop
push
push
dec
add
push
pop
pop
pop
pusha
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
addr16
pusha
pop
pop
pop
push
push
push
sbb
add
push
pop
pop
pop
pusha
pusha
arpl
addr16
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
push
arpl
pusha
pop
pop
pop
push
push
push
das
add
add
dec
push
push
pop
pop
pop
pusha
pusha
bound
addr16
outsb
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
imul
data16
pusha
pusha
pop
pop
pop
push
push
push
cmp
add
push
push
push
pop
pop
pop
pusha
pusha
bound
addr16
insl
jno
jno
jno
jno
jno
jno
jno
jno
imul
data16
bound
pop
pop
pop
push
push
push
inc
add
add
push
push
push
pop
pop
pop
pop
pusha
pusha
arpl
data16
insl
jo
jno
jno
jno
insl
insl
imul
data16
bound
pop
pop
pop
pop
push
push
push
inc
add
push
push
push
pop
pop
pop
pop
pusha
pusha
bound
arpl
addr16
push
push
push
addr16
bound
pusha
pop
pop
pop
pop
push
push
push
inc
add
add
pop
pop
pop
pop
pusha
pusha
bound
arpl
data16
arpl
arpl
pusha
pusha
pusha
pop
pop
pop
pop
pop
push
push
push
inc
add
dec
push
push
push
pop
pop
pop
pop
pop
pusha
pusha
pusha
bound
arpl
arpl
arpl
arpl
arpl
bound
pusha
pusha
pop
pop
pop
pop
pop
push
push
push
push
xor
inc
push
push
push
push
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
pusha
pusha
bound
bound
bound
pusha
pusha
pusha
pusha
pusha
pusha
pop
pop
pop
pop
pop
pop
pop
push
push
push
dec
and
add
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
add
ss
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
inc
sbb
ss
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
inc
and
es
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
xor
add
and
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
ds
add
add
sub
cmp
ds
das
and
jmp
jg
incl
incb
add
clc
add
push
add
jg
inc
add
aas
incl
incl
add
ud0
incb
add
pop
cld
add
add
clc
add
add
push
add
add
jmp
add
add
jg
jmp
add
add
aas
inc
add
add
pop
incl
pop
incl
add
add
ud0
incl
add
add
pop
incb
add
add
add
cld
add
add
add
clc
add
add
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
jg
jmp
add
add
add
aas
inc
add
add
add
aas
inc
add
add
add
pop
incl
add
pop
incl
add
add
add
ud0
incl
add
add
add
ud0
incb
add
add
add
pop
incb
add
add
add
pop
cld
add
add
add
add
cld
add
add
add
add
clc
add
add
add
add
clc
add
add
add
add
push
push
push
jg
jmp
jg
jmp
jg
inc
aas
inc
aas
inc
pop
inc
pop
incl
add
add
pop
incl
add
add
pop
incl
add
add
ud0
incl
ud0
incl
ud0
incl
ud0
incl
pop
incl
pop
incb
pop
incb
pop
incb
pop
incb
pop
incb
pop
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
pop
incb
pop
incb
pop
incb
pop
incb
pop
incl
pop
incl
pop
incl
ud0
incl
ud0
incl
ud0
incl
ud0
incl
add
add
ud0
incl
add
add
pop
incl
add
add
pop
incl
add
add
pop
inc
pop
inc
aas
inc
aas
jmp
aas
jmp
jg
jmp
jg
push
push
clc
clc
add
add
add
add
cld
add
add
add
add
cld
add
add
add
add
incb
add
add
add
pop
incb
add
add
add
pop
incl
add
add
add
ud0
incl
add
ud0
inc
add
add
add
pop
inc
add
add
add
aas
jmp
add
add
add
jg
push
add
add
add
clc
add
add
add
cld
add
add
add
incb
add
add
pop
incl
ud0
inc
add
add
aas
push
add
add
jg
cld
add
add
incl
add
ud0
jmp
add
jg
incl
pop
ljmp
add
add
add
add
add
add
add
add
rolb
add
or
sbb
sbb
sub
push
push
sub
sub
insb
mov
test
mov
mov
mov
mov
mov
addb
or
add
add
xor
xchg
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
dec
or
or
sbb
sbb
mov
mov
mov
mov
mov
sarl
mov
mov
mov
xor
add
add
mov
mov
mov
lds
enter
ret
ror
ror
ror
rol
mov
mov
mov
mov
or
add
add
or
jnp
jbe
mov
sarl
sarl
iret
enter
leave
ror
leave
iret
leave
enter
int3
mov
enter
mov
mov
mov
pop
pop
add
adc
lds
ret
mov
int
ror
leave
ror
lret
ror
int
iret
into
aad
iret
aad
iret
aam
into
aam
into
ror
int3
ror
lret
enter
enter
mov
sarl
ss
add
pop
pop
mov
stos
ret
sarb
ret
ret
ror
leave
ror
int3
aad
iret
xlat
rcl
rcr
aam
fcmovbe
aam
aam
fcmovbe
aam
aam
fcom
rcl
ror
aam
into
ror
lret
into
enter
ret
mov
ret
mov
mov
sub
sub
mov
sarl
lret
int
ror
fcom
rcr
aad
fcomp
fcomp
fst
xlat
fcmovnbe
aad
rcl
rcl
ror
into
ror
lret
vcmpps
mov
enter
pop
push
add
add
sub
mov
ret
enter
mov
lret
lret
into
xlat
rcl
fcmovbe
aam
xlat
fchs
fcmovnu
loop
fsub
fstp
jecxz
fsubp
jecxz
fucom
fstp
loope
fcmovnu
fcmovu
fcomp
aad
fcom
rcl
iret
iret
ror
lret
int3
enter
ret
mov
sarb
add
add
daa
es
mov
les
int
ror
lret
aad
iret
rcr
fcompp
fsub
fcmovnu
jecxz
fucom
in
loopne
loope
out
loope
loope
out
loope
loope
in
fstp
loop
fcmovu
fstp
xlat
fcmovbe
rcl
rcl
ror
int3
into
enter
ret
mov
rol
pop
pop
add
add
and
sarb
mov
into
enter
int3
rcl
fcmovbe
aam
xlat
xlat
loopne
fstp
in
loope
out
loop
jecxz
jmp
in
in
jmp
jecxz
loop
out
loope
loopne
jecxz
fucom
fcompp
fcomp
aad
xlat
rcl
aam
int
leave
enter
mov
sarb
push
push
add
adc
mov
mov
ret
ret
ror
int3
rcl
fcmovbe
aam
fcom
loopne
fstp
in
loopne
loop
call
in
in
ljmp
out
jmp
out
in
ljmp
loop
in
loopne
loope
fcmovnbe
aad
rcl
aam
int
lret
mov
leave
ret
inc
aas
add
stos
movsl
movsb
ret
ret
mov
into
leave
enter
xlat
rcl
fcmovnbe
aam
loope
fnsetpm(287
out
loope
jecxz
jmp
in
out
in
out
in
out
in
call
in
call
in
out
jmp
in
in
jmp
loope
jecxz
fsub
fcmovu
fcom
rcl
into
into
iret
lret
vshufps
sarl
sub
lcall
mov
int
ror
int3
xlat
rcl
fcmovnbe
aad
loop
fsub
out
loope
jecxz
jmp
in
out
in
call
out
call
out
jmp
out
call
out
call
in
out
in
in
ljmp
loopne
jecxz
fstp
fcmovu
fcom
rcl
iret
into
ror
leave
lret
mov
mov
add
outsl
imul
mov
rol
mov
rcl
fcmovnbe
aam
loope
fsub
out
loope
jecxz
ljmp
call
out
jmp
out
ljmp
jmp
jmp
out
call
in
out
in
in
ljmp
jecxz
fstp
fcmovu
fcom
rcl
into
int
leave
enter
les
mov
lods
add
add
inc
enter
mov
int
ror
lret
rcl
fcmovbe
aam
loope
fsub
out
loope
jecxz
jmp
in
out
in
jmp
out
ljmp
ljmp
lock
lock
lock
jmp
call
in
out
ljmp
loopne
jecxz
fstp
fcmovu
fcom
rcl
into
int
enter
ret
mov
mov
leave
ret
mov
lret
mov
lret
lret
iret
fcmovbe
rcr
fcomp
loop
fnsetpm(287
out
loope
jecxz
ljmp
jmp
out
ljmp
ljmp
icebp
jmp
icebp
in
ljmp
lock
out
ljmp
call
out
in
out
ljmp
loopne
in
fstp
fcmovu
fcmovnbe
aad
rcl
ror
int3
int
enter
mov
pop
pop
pop
add
mov
scas
sarl
leave
aam
into
rcr
xlat
loope
fnsetpm(287
out
loope
jecxz
ljmp
jmp
out
ljmp
jmp
in
in
lock
lock
lock
lock
lock
lock
icebp
in
ljmp
out
ljmp
call
out
ljmp
loop
fcmovnbe
aam
rcl
ror
lret
int
mov
ret
and
add
mov
ret
ret
enter
rcr
fcom
loopne
fnsetpm(287
in
loope
loop
ljmp
jmp
out
ljmp
jmp
jmp
lock
icebp
jmp
icebp
in
in
icebp
in
in
icebp
in
in
icebp
in
in
lock
jmp
jmp
icebp
in
ljmp
out
ljmp
call
in
ljmp
loopne
loop
fcom
fcmovnbe
aad
iret
iret
ror
lret
lds
mov
add
add
cmp
mov
enter
enter
int3
fcom
rcr
loopne
fstp
out
loopne
jecxz
ljmp
jmp
out
ljmp
jmp
jmp
icebp
jmp
icebp
jmp
repnz
in
repnz
in
repnz
in
repnz
in
repnz
in
icebp
in
in
icebp
in
jmp
in
ljmp
lock
out
ljmp
call
in
ljmp
loope
fcmovnu
fcom
rcl
iret
into
iret
lret
ret
ret
mov
mov
add
enter
mov
int3
mov
int3
lret
xlat
rcl
fcmovnbe
aad
fcmovu
jecxz
fucom
loopne
out
loope
in
jmp
out
out
in
jmp
out
ljmp
jmp
jmp
icebp
in
jmp
in
in
repnz
in
repnz
in
repnz
in
repnz
in
repnz
in
repnz
in
icebp
in
in
lock
in
lock
ljmp
out
jmp
out
ljmp
call
in
jmp
loopne
loopne
fcmovnu
xlat
fcom
rcl
into
int
enter
rol
mov
cmp
xchg
sarb
leave
aad
iret
fcmovnbe
aam
fcomp
loope
fsub
loopne
out
loop
in
in
out
in
out
in
call
lock
hlt
out
out
clc
repnz
repz
repz
lock
repnz
in
repnz
in
repnz
out
repnz
out
repnz
out
repnz
in
repnz
in
repnz
in
repnz
out
div
repz
hlt
repz
repz
out
repnz
in
out
jmp
in
jmp
jmp
in
loop
out
loopne
fstp
aad
rcl
ror
int3
int3
mov
sarb
mov
add
cmp
sarb
ror
ror
int
rcl
xlat
loopne
fnsetpm(287
out
loope
jecxz
jmp
in
jmp
cld
div
cli
stc
clc
repz
out
fcmovbe
aam
fstp
icebp
in
in
repz
out
repnz
out
repnz
out
repnz
out
repnz
out
repnz
out
repnz
in
repnz
in
hlt
out
out
in
loopne
aam
fcmovbe
out
loopne
lock
stc
idiv
stc
clc
div
icebp
lock
in
out
ljmp
loop
fcmovbe
rcl
ror
ror
leave
lret
ret
mov
xchg
nop
mov
add
mov
mov
int3
lret
rcl
aad
fcmovu
jecxz
fucom
loope
out
loop
out
stc
repz
repz
fsubrs
jae
inc
inc
daa
es
sbb
pop
pop
sbb
sbb
cli
repz
out
repz
out
repz
out
hlt
out
out
hlt
out
out
repz
out
std
stc
clc
mov
pop
pop
push
push
sbb
sbb
and
cmp
ss
xchg
xchg
int
enter
cld
div
icebp
jmp
jmp
loope
loope
fcmovnu
xlat
fcom
rcl
int
into
enter
rol
mov
xor
jnp
jbe
mov
lret
ror
leave
aad
iret
fcmovbe
aam
loop
fsub
in
out
stc
repz
jmp
mov
scas
pop
pop
pop
and
pop
add
std
hlt
lock
hlt
lock
hlt
lock
hlt
lock
hlt
lock
hlt
out
in
sti
stc
mov
add
add
push
push
inc
inc
inc
xchg
xchg
xchg
loope
hlt
hlt
repnz
jmp
loope
jecxz
fstp
fcmovu
xlat
rcl
ror
lret
int3
mov
sarb
mov
add
add
mov
enter
int
rcl
fst
loope
loopne
hlt
out
out
call
cwtl
cmp
cmp
push
push
add
add
add
add
mov
std
cld
hlt
icebp
lock
icebp
lock
icebp
lock
icebp
lock
icebp
lock
icebp
lock
cmc
cmc
out
loop
sbb
add
add
add
add
pop
pop
jp
ja
iret
iret
div
icebp
ljmp
fcomp
fcmovbe
aam
iret
into
iret
leave
leave
lret
ret
mov
gs
pusha
add
fwait
xchg
xchg
mov
mov
lret
lret
rcr
aad
fldz
call
movsb
mov
add
add
add
add
add
sbb
fstp
fscale
stc
clc
hlt
icebp
icebp
hlt
icebp
icebp
hlt
icebp
icebp
hlt
icebp
icebp
hlt
icebp
icebp
hlt
icebp
icebp
cmc
repnz
sti
clc
testl
add
add
add
add
add
sbb
sbb
jnp
fcmovnu
hlt
out
out
jecxz
fstp
aad
rcl
ror
int
enter
sarb
add
add
cmp
mov
leave
enter
shl
fcmovnu
icebp
jmp
push
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
cmp
div
hlt
hlt
icebp
icebp
cmc
icebp
icebp
cmc
icebp
icebp
cmc
icebp
icebp
cmc
icebp
icebp
cmc
icebp
icebp
cmc
icebp
lock
jge
jnp
add
add
add
add
add
add
add
add
add
add
add
sub
sub
out
loop
fcmovnbe
aad
ror
ror
lret
lret
lds
jl
js
add
add
mov
sarb
lret
rcl
out
loopne
loopne
test
add
add
add
add
add
add
add
add
add
add
add
jp
js
push
lock
icebp
div
repnz
repnz
repnz
repnz
repnz
repnz
pushl
add
add
add
add
add
add
add
add
add
add
add
pop
push
push
ror
lret
out
aam
ror
int3
into
enter
sarl
dec
inc
inc
mov
mov
lret
ror
call
ret
dec
inc
inc
add
add
add
push
push
push
add
add
add
add
add
add
add
add
mov
mov
cmc
icebp
icebp
div
repnz
repnz
repz
repz
repz
repnz
repnz
cli
cli
in
loop
and
add
add
add
add
add
add
add
add
add
add
push
add
add
and
and
in
aad
ror
lret
lds
add
mov
mov
loopne
movsl
mov
add
add
or
pop
push
push
add
add
add
add
add
add
add
add
add
add
and
call
div
repz
repz
repz
repz
repz
repz
repz
repz
hlt
hlt
cld
cld
push
push
push
add
add
add
add
add
add
add
add
add
add
push
push
or
or
add
or
or
fcomp
aad
into
enter
ret
mov
add
dec
dec
inc
mov
mov
int3
lret
fisttpll
add
or
or
push
push
push
add
add
add
add
add
add
add
add
add
add
arpl
std
std
div
repz
repnz
repz
repz
repz
hlt
repz
hlt
repz
repz
repz
repnz
jmp
add
add
add
add
add
add
add
add
add
add
or
or
or
add
add
push
xlat
rcl
ror
mov
mov
xchg
add
add
mov
int
fcompp
fmuls
or
or
or
or
push
push
add
add
add
add
add
add
add
add
push
repz
repz
hlt
repz
hlt
repz
cmc
hlt
stc
cmc
cmc
stc
hlt
hlt
stc
hlt
hlt
clc
hlt
hlt
clc
hlt
repz
stc
clc
jecxz
loopne
sbb
add
add
add
add
add
add
add
add
add
add
push
push
or
pop
or
or
or
push
push
push
aad
iret
ror
int
ret
mov
add
cmp
mov
fcomps
adc
or
push
push
or
or
pop
pop
push
push
push
add
add
add
add
add
add
add
add
add
add
sub
icebp
out
out
sti
clc
div
repz
repz
cmc
hlt
stc
cmc
cmc
stc
cmc
cmc
stc
cmc
cmc
stc
cmc
cmc
stc
hlt
cmc
stc
hlt
hlt
clc
hlt
hlt
clc
hlt
hlt
arpl
add
add
add
add
add
add
add
add
pop
or
or
syscall
add
arpl
fcmovnbe
aad
enter
mov
addb
add
mov
mov
mov
scas
and
and
or
adc
or
or
or
push
push
add
add
add
add
add
add
add
add
add
add
push
repnz
hlt
repz
hlt
hlt
stc
cmc
cmc
stc
cmc
cmc
stc
cmc
cmc
cli
cmc
cmc
cli
cmc
cmc
cli
cmc
cmc
stc
hlt
hlt
stc
hlt
hlt
clc
hlt
hlt
mov
add
add
add
add
add
add
add
add
add
add
add
or
or
or
or
jle
aad
ret
mov
add
add
das
das
mov
mov
leave
enter
or
or
adc
or
or
or
add
add
add
add
add
add
pop
pop
or
or
or
adc
adc
adc
adc
push
push
push
sbb
sbb
push
push
add
add
adc
fcom
aad
sti
sti
div
repnz
hlt
hlt
stc
cmc
cmc
cli
cmc
cmc
cli
cmc
cmc
cli
div
cli
div
cli
div
cli
div
cli
div
cli
hlt
hlt
stc
hlt
hlt
cld
clc
clc
div
idivb
cmp
add
add
add
adc
or
or
or
add
add
add
add
add
add
add
add
pop
push
push
or
or
adc
femms
sbb
sbb
into
les
jae
outsb
xchg
lds
jge
js
or
adc
adc
adc
adc
adc
adc
pop
push
push
sbb
sbb
pop
pop
and
and
daa
sub
sub
sub
sub
sub
sub
sub
sub
sub
daa
daa
daa
push
push
push
add
add
fs
stc
hlt
hlt
clc
hlt
hlt
stc
hlt
hlt
cli
cmc
cmc
cli
div
cli
div
cli
div
cli
div
cli
div
cli
div
cli
div
cli
cmc
cmc
cli
hlt
hlt
clc
repz
jmp
add
add
pop
pop
pop
sub
sub
daa
daa
and
and
and
sbb
sbb
pop
pop
adc
adc
or
pop
push
pop
add
add
add
add
or
adc
inc
iret
leave
enter
sarb
add
add
mov
mov
sub
and
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
das
das
das
das
das
cs
xor
xor
sbb
add
add
or
int
std
cld
clc
repz
hlt
hlt
cli
cmc
cmc
cli
div
cli
div
cli
div
cli
div
sti
div
sti
div
cli
div
cli
div
cli
div
cli
div
stc
hlt
hlt
cld
clc
clc
hlt
icebp
icebp
xor
xor
add
push
push
push
das
das
das
das
das
das
cs
das
das
xor
xor
xor
xor
xor
das
das
sub
sub
sub
and
and
adc
femms
adc
adc
femms
mov
ret
mov
push
dec
dec
add
pop
pop
pop
mov
mov
gs
or
sbb
pop
cmp
cmp
ds
cmp
aaa
aaa
ss
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
das
das
add
add
push
repz
hlt
hlt
stc
hlt
hlt
cli
cmc
cmc
cli
div
cli
div
cli
div
sti
clc
idiv
clc
idiv
clc
idiv
div
cli
div
cli
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
ljmp
add
add
and
cmp
xor
xor
xor
xor
xor
xor
xor
xor
ss
aaa
cmp
cmp
cmp
cmp
cmp
aaa
cmp
xor
prefetchw
ret
ret
ret
mov
fwait
lcall
lods
cmpsl
movsl
mov
mov
and
adc
das
das
cs
inc
inc
inc
aas
aas
aas
ds
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
pop
pop
add
add
sbb
fstp
fscale
sti
sti
div
repz
hlt
hlt
stc
cmc
cmc
cli
div
cli
div
cli
div
sti
div
cld
stc
idiv
stc
idiv
stc
idiv
stc
idiv
div
cli
div
cli
div
cli
div
cli
hlt
hlt
sti
div
stc
stc
stc
dec
inc
inc
add
add
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
aas
inc
inc
inc
cmp
cmp
adc
mov
sarl
add
xor
cs
mov
jne
or
sbb
inc
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
das
das
das
add
add
add
xchg
nop
nop
push
repz
repz
cmc
cmc
cli
cmc
cmc
cli
div
cli
div
cli
div
cld
stc
idiv
stc
idiv
stc
clc
cld
stc
idiv
stc
idiv
clc
idiv
div
cli
div
cli
div
cli
hlt
hlt
clc
repz
dec
mov
add
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
sub
daa
or
inc
int3
mov
ret
mov
outsb
push
jne
outsl
mov
ror
ret
cmp
cs
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
inc
inc
inc
or
or
add
dec
inc
inc
stc
clc
idiv
div
div
repz
hlt
hlt
stc
cmc
cmc
cli
cmc
cmc
cli
div
sti
div
cld
stc
idiv
stc
idiv
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
idiv
clc
idiv
div
cli
div
cli
div
stc
hlt
hlt
stc
cmc
cmc
incl
add
add
xor
xor
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
inc
inc
inc
inc
dec
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
dec
inc
aas
aas
adc
pop
movsl
mov
sarb
add
add
mov
popf
pushf
sbb
pop
adc
inc
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
sbb
sbb
add
sbb
pop
fcom
div
icebp
clc
repz
hlt
hlt
stc
cmc
cmc
cli
cmc
cmc
sti
div
sti
clc
idiv
stc
idiv
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
cld
stc
idiv
div
cli
div
cli
div
cli
cmc
cmc
clc
hlt
hlt
cld
div
cmc
cmc
hlt
inc
inc
inc
add
add
or
inc
inc
inc
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
and
and
imul
mov
das
das
add
mov
imul
or
pop
pop
push
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
es
add
stos
push
repnz
repz
hlt
hlt
stc
hlt
hlt
stc
cmc
cmc
sti
div
sti
clc
idiv
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
sti
stc
idiv
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
div
repnz
cld
cld
xlat
and
and
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
cmp
prefetchw
ret
sarb
add
push
rol
les
cmp
cmp
bound
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
popa
xor
xor
add
add
add
push
repnz
repnz
hlt
repz
hlt
hlt
stc
hlt
hlt
cli
div
sti
div
sti
clc
clc
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
idiv
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
clc
hlt
hlt
div
repnz
inc
mov
add
add
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
pusha
push
dec
dec
adc
sbb
cmpsb
movsl
ror
enter
movsl
mov
add
add
mov
mov
and
push
adc
push
push
push
data16
popa
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pop
pusha
pusha
pusha
pop
pop
pop
pusha
pusha
pop
pop
pop
pop
fs
popa
popa
sub
sub
add
add
add
ja
cld
cld
div
hlt
div
icebp
div
repz
hlt
repz
hlt
hlt
cli
cmc
cmc
cli
div
sti
div
sti
clc
clc
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
sti
clc
idiv
div
cli
cmc
cmc
cli
cmc
cmc
stc
hlt
hlt
div
repz
icebp
ljmp
add
add
sbb
pop
pop
pop
gs
pop
pop
pop
pop
pop
pusha
pusha
pusha
pop
pop
pop
pusha
pusha
pop
pusha
pusha
pop
pusha
pusha
pusha
popa
pusha
pusha
bound
arpl
popa
pusha
pop
and
and
push
push
test
aam
int
mov
add
mov
mov
mov
mov
push
arpl
imul
data16
gs
insl
insl
pop
pop
pop
push
push
push
add
add
add
jns
ja
std
std
clc
cmc
cmc
cmc
icebp
lock
repnz
repz
hlt
repz
hlt
cmc
cli
cmc
cmc
cli
div
sti
div
sti
clc
clc
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
sti
clc
idiv
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
clc
repz
repnz
repnz
ljmp
add
add
adc
dec
dec
dec
insl
insl
insl
imul
gs
addr16
insb
imul
xor
or
pop
pop
pop
ror
lret
mov
dec
inc
inc
inc
mov
mov
outsl
outsb
or
or
cs
outsl
imul
imul
imul
imul
push
imul
jo
outsb
outsb
outsb
inc
inc
inc
or
add
or
lea
div
hlt
hlt
icebp
lock
icebp
div
repz
repz
hlt
repz
cmc
cmc
cli
div
cli
div
sti
div
sti
clc
clc
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
sti
clc
idiv
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
stc
repz
repnz
icebp
cmc
icebp
icebp
mov
push
add
add
add
xor
data16
jb
insb
insb
push
push
push
imul
imul
imul
jno
dec
dec
dec
or
or
cmp
ret
mov
addb
add
add
imul
aam
int
push
push
or
push
inc
inc
aas
ja
jbe
jo
jo
outsl
jo
outsl
outsl
outsl
outsl
jb
jb
jbe
jne
jne
pop
pop
and
and
add
add
add
and
mov
lods
clc
hlt
hlt
hlt
icebp
out
cmc
repnz
div
repnz
repnz
repz
cmc
hlt
stc
cmc
cmc
cli
div
cli
div
sti
div
sti
clc
clc
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
sti
div
cli
div
cli
div
stc
cmc
cmc
stc
hlt
hlt
div
repz
icebp
cmc
icebp
icebp
cmc
icebp
lock
std
xlat
rcl
inc
inc
inc
add
add
add
adc
adc
dec
dec
jo
jo
js
jae
jae
outsl
outsl
outsl
outsl
outsl
jo
outsl
jo
outsl
jbe
je
pop
pop
adc
movaps
es
mov
mov
add
add
lret
int3
mov
cmp
push
push
push
jnp
jp
je
jbe
jbe
jp
jl
jnp
jb
push
push
push
sub
sub
add
add
add
add
pop
push
push
fdivr
push
lock
icebp
lock
icebp
lock
repnz
repnz
repnz
hlt
repz
cmc
hlt
stc
cmc
cmc
cli
div
cli
div
sti
div
sti
clc
clc
sti
clc
clc
std
cli
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
std
stc
stc
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
sti
clc
idiv
div
cli
div
stc
cmc
cmc
stc
hlt
hlt
div
repz
icebp
div
icebp
hlt
icebp
icebp
hlt
lock
cli
stc
repnz
in
cmpl
add
add
add
sbb
dec
dec
dec
imul
jp
jnp
jnp
ja
jbe
jne
js
imul
sbb
sbb
push
lods
test
ror
lret
mov
add
add
mov
mov
push
or
test
jo
pop
pop
pop
cmp
cmp
sbb
add
ss
test
std
div
hlt
out
out
hlt
lock
icebp
lock
repnz
div
repnz
repnz
repz
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
cli
div
sti
div
sti
clc
clc
cld
stc
clc
std
cli
stc
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
cld
stc
idiv
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
div
repz
repnz
icebp
hlt
icebp
icebp
hlt
icebp
out
repz
in
div
repnz
std
lret
mov
push
push
add
add
add
add
add
adc
das
das
das
push
push
push
imul
js
cmpb
jnp
and
or
xchg
xchg
aam
into
ret
mov
ds
add
mov
mov
and
adc
inc
cmp
cmp
es
add
inc
mov
in
std
cld
cmc
lock
out
hlt
lock
lock
repnz
repnz
cmc
repnz
repnz
hlt
repz
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
cli
div
sti
div
sti
clc
clc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
cld
stc
idiv
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
clc
repz
repnz
icebp
hlt
icebp
icebp
hlt
icebp
out
repz
out
repnz
in
repnz
in
stc
clc
cli
div
mov
pop
adc
add
add
add
add
or
pop
push
push
xor
xor
inc
inc
and
and
mov
rcl
les
bound
add
aas
mov
mov
lods
lods
push
adc
add
add
push
push
push
cmp
aaa
jnp
js
mov
sti
sti
div
lock
in
hlt
out
out
hlt
lock
lock
icebp
lock
repnz
cmc
repnz
div
repnz
repz
hlt
repz
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
sti
div
cld
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
cli
cli
std
stc
stc
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
cld
stc
idiv
clc
idiv
div
cli
cmc
cmc
stc
cmc
cmc
clc
repz
repnz
icebp
cmc
icebp
icebp
hlt
icebp
lock
out
repz
out
repnz
in
icebp
in
in
repnz
in
cld
div
cld
div
aam
iret
mov
sbb
sbb
add
pop
push
push
add
add
rol
sarb
jg
add
pop
mov
mov
pop
pop
inc
ds
push
dec
arpl
jg
jl
mov
repnz
in
cli
stc
clc
clc
div
lock
in
repz
out
repz
out
hlt
out
out
hlt
lock
lock
icebp
lock
repnz
cmc
repnz
div
repnz
repz
hlt
hlt
stc
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
sti
div
cld
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
cli
cli
stc
stc
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
idiv
clc
idiv
div
cli
cmc
cmc
stc
cmc
cmc
clc
repz
repnz
icebp
hlt
icebp
icebp
hlt
icebp
lock
out
repz
out
repnz
in
repnz
in
icebp
in
in
out
ljmp
hlt
stc
clc
div
icebp
xlat
mov
scas
mov
push
push
push
dec
inc
inc
dec
inc
inc
mov
stos
aad
into
mov
pushf
xchg
xchg
add
cmpb
mov
mov
int
ror
loopne
fsub
fcmovu
ljmp
repnz
stc
hlt
repz
lock
jmp
jmp
repnz
in
repnz
in
repz
in
repz
out
hlt
out
out
hlt
lock
lock
icebp
lock
icebp
icebp
cmc
repnz
cmc
repnz
div
repz
repz
hlt
hlt
stc
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
cld
clc
clc
cld
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
cli
cli
cli
cli
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
idiv
clc
idiv
div
cli
cmc
cmc
stc
cmc
cmc
clc
repz
repnz
icebp
cmc
icebp
icebp
hlt
icebp
lock
lock
repz
out
repnz
in
repnz
in
icebp
in
in
icebp
in
in
lock
lock
out
ljmp
in
stc
repnz
repnz
in
in
out
jecxz
fstp
ror
leave
enter
sarl
add
mov
rol
enter
int
aad
fstp
out
loopne
in
ljmp
jmp
lock
repnz
in
repnz
in
repz
in
repz
out
hlt
out
out
hlt
lock
lock
icebp
lock
icebp
icebp
cmc
repnz
cmc
repnz
repz
repz
hlt
repz
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
sti
clc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
cli
cli
cli
cli
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
idiv
clc
idiv
div
cli
cmc
cmc
stc
cmc
cmc
clc
repz
repz
icebp
cmc
icebp
icebp
hlt
icebp
lock
lock
repz
out
repnz
in
repnz
in
icebp
in
in
icebp
in
in
lock
icebp
in
ljmp
out
call
ljmp
loope
jecxz
fstp
rcl
iret
lret
ret
ret
mov
add
mov
leave
enter
fcmovnbe
aam
fcmovu
in
fsubrp
jecxz
ljmp
jmp
icebp
jmp
repnz
in
repnz
in
repz
out
repz
out
hlt
lock
lock
icebp
lock
icebp
icebp
cmc
icebp
icebp
cmc
repnz
div
repnz
repz
repz
hlt
repz
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
sti
div
cld
clc
clc
cld
stc
stc
cld
cli
cli
cld
cli
cli
std
sti
sti
std
sti
sti
std
sti
sti
sti
sti
sti
sti
sti
sti
std
cli
cli
cld
cli
cli
cld
cli
cli
cld
stc
stc
cld
stc
stc
sti
clc
idiv
div
cli
cmc
cmc
stc
cmc
cmc
clc
hlt
hlt
div
repz
icebp
cmc
icebp
icebp
hlt
lock
lock
repz
out
repnz
in
repnz
in
icebp
in
in
icebp
in
in
lock
lock
ljmp
out
call
ljmp
fnstsw
loope
fcmovnu
xlat
xlat
rcl
ror
lret
ret
ret
mov
add
mov
test
mov
ror
leave
iret
iret
aad
fcmovnu
in
fsubrp
jecxz
jmp
in
call
lock
lock
repnz
in
repnz
in
repz
out
repz
out
hlt
lock
lock
cmc
icebp
lock
icebp
icebp
div
repnz
repz
cmc
hlt
stc
div
sti
div
sti
clc
clc
cld
clc
clc
std
cli
stc
std
cli
cli
cld
cld
std
std
std
cld
sti
sti
sti
sti
std
cli
cli
cld
clc
clc
cli
div
stc
div
div
hlt
div
repnz
icebp
lock
out
out
repnz
in
repnz
in
icebp
in
in
icebp
in
in
lock
icebp
in
ljmp
out
call
jmp
in
jecxz
in
fstp
xlat
xlat
rcl
ror
lret
ret
ret
mov
xor
xor
add
mov
mov
lret
rcl
fst
aad
fcmovnu
in
fucomip
in
jmp
in
call
lock
lock
repnz
in
repz
in
hlt
lock
icebp
div
hlt
stc
cmc
cmc
cli
div
sti
div
sti
clc
clc
std
cli
cli
std
sti
cli
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
sti
std
sti
cli
cld
stc
stc
cld
cli
stc
sti
clc
idiv
div
clc
div
div
repnz
repnz
hlt
lock
repz
in
repnz
ljmp
out
out
in
call
call
xlat
fcom
rcl
int3
lret
lret
mov
mov
inc
ds
add
mov
lret
lret
rcr
loope
loope
jmp
in
call
repz
out
cmc
lock
clc
repz
cmc
cmc
sti
div
cld
stc
stc
cld
stc
stc
cld
stc
cli
cld
stc
cli
cld
stc
stc
cld
stc
stc
std
sti
cli
std
sti
cli
std
sti
sti
sti
sti
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
clc
sti
clc
idiv
clc
idiv
div
cli
div
stc
div
stc
cmc
cmc
div
repz
repz
lock
in
in
call
jmp
loopne
fstp
fcomp
rcl
ror
int3
int3
mov
mov
push
dec
dec
add
add
mov
lret
lret
rcr
xlat
loop
frstpm(287
loope
jmp
out
call
stc
hlt
hlt
cli
div
cli
div
cli
div
cld
clc
clc
cld
stc
stc
cld
stc
stc
cld
cli
stc
cld
cli
cli
cld
cli
cli
cld
cli
cli
std
sti
cli
std
sti
cli
std
sti
sti
sti
sti
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
cli
std
cli
cli
cld
cli
cli
cld
cli
stc
sti
stc
clc
sti
clc
idiv
clc
idiv
div
cli
div
cli
div
cli
div
stc
cmc
hlt
cli
cmc
cmc
stc
hlt
hlt
clc
repz
ljmp
loopne
loop
fcom
rcl
int
int3
mov
mov
pop
pop
pop
add
add
mov
lret
lret
rcr
loop
frstpm(287
loope
jmp
out
call
clc
cmc
cmc
cli
div
cli
div
cli
div
cld
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
std
cli
cli
std
sti
cli
std
sti
cli
std
sti
sti
sti
sti
cld
sti
cld
cld
std
std
std
std
std
std
std
std
std
std
std
cld
cld
sti
cli
std
cli
cli
std
cli
cli
std
cli
stc
sti
stc
clc
sti
clc
idiv
clc
idiv
div
cli
div
cli
div
cli
div
stc
cmc
hlt
cli
cmc
cmc
stc
repz
repz
in
in
jmp
in
jecxz
out
loopne
fcompp
fcomp
rcl
ror
int3
int3
mov
mov
bound
add
mov
mov
lret
rcl
xlat
loop
frstpm(287
loopne
jmp
out
call
clc
div
cli
div
cli
div
sti
div
cld
stc
stc
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
std
cli
cli
std
sti
cli
std
sti
cli
std
sti
sti
sti
sti
cld
sti
cld
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
cli
std
cli
cli
std
cli
cli
std
cli
stc
sti
stc
clc
sti
clc
clc
cli
clc
idiv
div
cli
div
cli
div
cli
div
stc
cmc
hlt
cli
cmc
hlt
stc
repz
repz
in
in
ljmp
loopne
jecxz
fstp
rcl
int
int3
mov
mov
imul
add
mov
mov
lret
lret
rcr
fcom
loop
loopne
jmp
out
call
stc
div
cli
div
cli
div
sti
div
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
std
cli
cli
std
sti
sti
std
sti
sti
std
sti
sti
std
sti
sti
sti
sti
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
sti
std
sti
sti
std
cli
stc
cld
cli
stc
sti
stc
clc
sti
clc
clc
sti
clc
clc
sti
clc
idiv
clc
cmc
cli
div
cli
div
stc
hlt
hlt
cli
hlt
hlt
stc
repz
repz
in
ljmp
loope
jecxz
rcl
int
int
mov
mov
data16
add
mov
lret
lret
rcr
fcom
loop
frstpm(287
loopne
jmp
out
call
stc
div
cli
div
cli
clc
clc
sti
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
cli
cli
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
std
cld
std
std
std
std
cld
cld
cld
cld
sti
sti
std
sti
sti
std
cli
stc
cld
stc
stc
sti
stc
clc
sti
stc
clc
sti
clc
clc
cli
clc
idiv
clc
cmc
cli
div
cli
div
stc
hlt
hlt
cli
hlt
hlt
stc
repz
repz
out
jmp
out
in
out
loopne
fstp
fcomp
rcl
ror
int3
int
mov
data16
add
mov
lret
lret
rcr
xlat
loop
frstpm(287
loope
jmp
out
call
stc
div
sti
clc
idiv
clc
clc
sti
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
cli
cli
sti
sti
cld
sti
cld
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
cld
cld
cld
cld
sti
sti
std
sti
sti
std
cli
stc
cld
stc
stc
cld
stc
clc
cld
stc
clc
sti
clc
clc
cli
clc
idiv
clc
cmc
cli
div
cli
div
stc
hlt
hlt
cli
cmc
cmc
stc
repz
repz
out
jmp
in
jecxz
out
loopne
fcompp
fcomp
rcl
ror
int3
int
mov
pop
pop
add
add
mov
lret
lret
xlat
rcl
fst
loop
frstpm(287
loope
jmp
out
call
stc
div
sti
clc
idiv
clc
clc
sti
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
sti
sti
sti
sti
cld
sti
cld
sti
cld
cld
cld
cld
std
cld
std
std
std
std
std
cld
cld
cld
cld
sti
sti
std
sti
sti
cld
cli
stc
cld
stc
stc
cld
cli
clc
cld
stc
clc
sti
clc
clc
cli
clc
idiv
clc
idiv
div
cli
div
stc
cmc
cmc
cli
div
stc
hlt
hlt
clc
cmc
cmc
repz
out
jmp
in
jecxz
out
loopne
fcomp
rcl
ror
int3
int
lds
pop
push
push
add
add
mov
lret
lret
rcr
xlat
loope
loope
jmp
out
call
cli
div
sti
clc
idiv
clc
clc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
sti
sti
sti
sti
cld
sti
cld
sti
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
cld
sti
sti
std
sti
sti
std
cli
cli
std
cli
cli
cld
stc
clc
cld
stc
clc
cli
clc
clc
cli
clc
idiv
clc
idiv
clc
idiv
div
stc
cmc
cmc
stc
cmc
cmc
stc
hlt
hlt
clc
hlt
hlt
repnz
out
jmp
in
jecxz
out
loopne
fstp
fcomp
rcl
ror
int3
int
mov
dec
dec
add
add
mov
lret
rcl
aad
in
fucomip
in
in
out
in
out
hlt
icebp
icebp
cli
clc
clc
sti
clc
idiv
clc
clc
cld
stc
stc
std
cli
cli
std
cli
cli
std
sti
cli
std
sti
sti
std
sti
sti
sti
sti
sti
sti
cld
sti
cld
sti
cld
cld
cld
cld
std
std
std
std
std
std
std
std
cld
cld
sti
sti
std
sti
sti
std
cli
cli
std
cli
cli
cld
stc
stc
sti
stc
stc
sti
stc
stc
sti
stc
idiv
clc
idiv
clc
idiv
div
sti
cmc
cmc
cli
cmc
cmc
clc
hlt
hlt
clc
hlt
hlt
repnz
out
jmp
in
jecxz
in
fstp
xlat
fcom
rcl
int3
lret
int3
mov
mov
cmp
add
add
mov
lret
ror
aad
fcmovnu
in
fsubrp
jecxz
in
out
in
call
cli
clc
clc
cli
div
cld
clc
clc
cld
stc
stc
std
cli
cli
cli
cli
sti
cli
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
sti
cld
cld
cld
cld
std
std
cld
cld
cld
sti
sti
sti
sti
std
cli
cli
std
cli
stc
cld
stc
stc
sti
stc
stc
sti
stc
stc
sti
stc
idiv
clc
idiv
clc
idiv
div
sti
cmc
cmc
cli
cmc
cmc
clc
hlt
hlt
clc
hlt
hlt
repnz
out
jmp
in
jecxz
in
fst
xlat
xlat
rcl
ror
lret
ret
les
xor
xor
add
movsl
mov
enter
leave
enter
fcmovnbe
aam
fcmovnu
in
fsubrp
jecxz
in
in
in
call
sti
clc
clc
sti
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
cli
cli
cli
sti
cli
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
cld
std
std
cld
cld
cld
cld
cld
cld
sti
sti
std
cli
cli
cld
cli
cli
cld
cli
stc
cld
stc
stc
sti
stc
stc
sti
stc
clc
sti
clc
idiv
clc
idiv
div
sti
div
cli
div
clc
cmc
cmc
div
cmc
icebp
in
in
ljmp
loopne
loope
fcmovnu
xlat
xlat
rcl
ror
lret
ret
les
add
lcall
rol
leave
enter
fcmovnbe
aam
fcmovu
in
fsubrp
loop
jmp
in
out
hlt
lock
clc
clc
sti
clc
clc
cld
cli
cli
cld
stc
stc
std
cli
cli
cli
cli
sti
sti
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
cld
std
std
cld
cld
cld
cld
sti
cld
std
sti
sti
std
cli
cli
cld
cli
cli
cld
cli
stc
cld
stc
stc
sti
stc
clc
sti
stc
clc
sti
clc
clc
sti
clc
clc
cli
div
sti
div
cli
div
clc
div
div
div
in
in
ljmp
loopne
fcmovu
xlat
rcl
ror
lret
ret
mov
add
mov
sarb
int
aam
ftst
out
loop
in
in
call
sti
div
cld
clc
clc
std
cli
stc
cld
stc
stc
std
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
std
cld
cld
sti
sti
std
sti
sti
std
sti
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
stc
sti
stc
clc
sti
stc
clc
sti
stc
clc
cli
div
sti
clc
clc
cli
div
stc
div
clc
cmc
cmc
out
in
jmp
in
out
loop
loopne
fcmovu
aad
ror
ror
enter
sarl
add
arpl
mov
int
rcr
in
fucom
loop
jmp
in
out
icebp
in
in
cli
div
cld
clc
clc
std
stc
stc
std
stc
stc
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
std
cld
cld
sti
sti
sti
sti
std
sti
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
stc
sti
stc
clc
sti
stc
clc
sti
clc
clc
cli
div
sti
div
cli
div
stc
div
clc
hlt
hlt
out
jmp
out
loop
aad
aad
iret
iret
leave
enter
sarl
add
inc
mov
mov
int3
lret
rcr
fcom
jecxz
fsub
loope
ljmp
jmp
cli
div
sti
stc
stc
std
stc
stc
cli
cli
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
cld
std
std
std
std
std
cld
cld
cld
cld
cld
sti
cli
cli
cld
cli
cli
cld
cli
cli
cld
cli
stc
cld
cli
stc
cld
stc
clc
cld
clc
clc
sti
clc
clc
sti
div
cld
clc
clc
cli
div
stc
div
div
hlt
in
call
out
loope
fstp
aam
aad
into
into
enter
sarb
add
mov
int3
lret
rcr
fcom
loop
loopne
ljmp
ljmp
stc
std
cli
cli
cli
cli
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
sti
sti
sti
cld
sti
sti
std
cli
cli
cld
cli
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
sti
stc
clc
sti
clc
clc
sti
stc
stc
stc
div
stc
div
div
repz
out
call
loope
fstp
fcompp
fcomp
aam
aam
int
mov
mov
jno
outsb
add
mov
lret
ror
aad
in
loopne
jecxz
in
out
out
jmp
sti
cli
stc
std
cli
cli
cli
cli
cli
cli
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
sti
sti
sti
sti
sti
std
sti
cli
std
cli
cli
cld
cli
cli
cld
cli
stc
cld
cli
stc
cld
stc
stc
cld
clc
stc
cld
clc
clc
cli
clc
clc
stc
div
stc
div
hlt
icebp
icebp
ljmp
loopne
loope
fcom
rcl
int3
lret
int3
mov
push
dec
dec
add
mov
leave
enter
fcmovnbe
aam
fcmovnu
in
loopne
jecxz
in
out
in
call
stc
stc
cli
cli
cli
cli
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
sti
sti
std
sti
sti
std
sti
cli
std
cli
cli
cld
cli
cli
cld
cli
stc
cld
cli
stc
cld
stc
stc
cld
clc
stc
cld
clc
stc
cli
clc
clc
cli
div
cli
div
repnz
out
ljmp
loope
fcmovnu
fcom
rcl
lret
leave
lret
mov
mov
mov
aam
into
fcmovbe
rcr
fcmovu
in
fsubrp
loop
jmp
in
out
repz
out
std
stc
stc
std
stc
stc
sti
cli
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
cld
std
cld
cld
cld
sti
sti
sti
std
sti
sti
std
sti
sti
cld
sti
cli
cld
cli
cli
cld
cli
stc
cld
cli
stc
cld
stc
stc
sti
clc
clc
cld
stc
clc
sti
clc
clc
cli
div
stc
div
out
jmp
jmp
loop
loopne
fcmovu
aad
xlat
ror
ror
leave
leave
ret
rol
mov
add
add
arpl
int3
mov
int
rcr
jecxz
fsub
loope
ljmp
jmp
cld
div
std
stc
stc
cli
cli
sti
sti
cld
sti
std
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
sti
sti
sti
std
sti
sti
std
sti
cli
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
cld
stc
stc
sti
cli
stc
cli
clc
stc
cli
clc
clc
div
cmc
in
call
out
loope
fcompp
aam
aad
into
into
enter
rol
mov
add
add
cmp
mov
int
fcom
rcr
fcom
loope
fsub
loopne
ljmp
jmp
std
cli
sti
std
cli
cli
sti
sti
sti
sti
std
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
sti
sti
cli
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
stc
cli
clc
clc
cli
clc
clc
cmc
repz
in
jecxz
in
loopne
fstp
fcomp
rcl
aam
int
mov
mov
add
add
mov
lret
ror
aad
fcmovnu
in
fsubrp
jecxz
jmp
in
call
std
sti
cli
std
cli
cli
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
sti
sti
sti
sti
std
sti
sti
std
sti
cli
std
sti
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
stc
sti
clc
clc
cli
clc
clc
repnz
out
jmp
loop
loope
fcmovnu
xlat
fcom
rcl
int3
lret
lret
mov
dec
dec
dec
add
add
mov
rol
enter
into
fcmovnbe
aam
fcmovu
in
fucomp
loop
jmp
in
out
repnz
in
std
stc
stc
std
cli
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
sti
sti
sti
sti
std
sti
sti
std
sti
cli
std
sti
cli
std
cli
cli
cld
stc
stc
std
stc
stc
sti
clc
clc
sti
clc
clc
cli
div
out
jmp
out
loop
loope
fcmovu
xlat
ror
ror
leave
lret
ret
mov
add
jne
outsl
mov
mov
int
rcr
fcomp
jecxz
fsub
loope
ljmp
ljmp
sti
sti
sti
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
sti
cld
sti
std
sti
sti
std
sti
cli
std
sti
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
cld
stc
stc
sti
clc
clc
sti
clc
clc
div
repz
in
jecxz
out
loope
fstp
fcompp
aam
aad
int
enter
rol
mov
add
aaa
aaa
mov
mov
int3
lret
rcr
xlat
loope
loopne
jmp
out
out
div
icebp
std
sti
sti
std
sti
sti
cld
cld
std
cld
std
std
std
cld
cld
cld
cld
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
std
sti
cli
sti
cli
cli
sti
stc
stc
sti
stc
stc
repnz
out
ljmp
loopne
loop
fcom
rcl
int3
int3
int
mov
jge
add
mov
leave
aad
into
fcmovbe
aam
fcmovu
in
fsubrp
jecxz
jmp
in
out
icebp
in
in
cld
cli
cli
std
sti
sti
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
std
cli
cli
cld
cli
cli
cld
cli
cli
cli
clc
clc
stc
div
in
jmp
out
loop
loope
fcmovu
xlat
fcom
rcl
lret
mov
inc
inc
add
mov
sarb
int3
rcr
jecxz
fsub
loop
ljmp
jmp
sti
cld
std
sti
sti
std
std
std
cld
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
cli
cli
std
cli
cli
cld
cli
cli
sti
stc
stc
cld
stc
stc
cmc
icebp
icebp
ljmp
loope
jecxz
fstp
fcmovnbe
aam
iret
iret
iret
leave
enter
sarl
add
add
inc
mov
mov
lret
lret
iret
loope
frstpm(287
call
out
call
std
cli
cli
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
sti
cld
sti
sti
sti
sti
sti
cli
cli
sti
cli
std
stc
stc
std
stc
stc
sti
idiv
lock
jmp
loop
loop
xlat
xlat
rcl
int
int
mov
mov
add
add
mov
leave
enter
fcmovnbe
aam
fcmovu
jecxz
fucom
loope
ljmp
ljmp
cld
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
sti
sti
cld
cld
sti
sti
std
cli
cli
cli
cli
div
repz
loop
in
fsubp
fcmovnu
aam
rcl
ror
lret
ret
les
inc
inc
inc
add
add
mov
mov
ror
lret
rcr
fcom
loop
frstpm(287
loopne
call
out
call
std
sti
sti
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
sti
sti
sti
cli
cli
std
cli
cli
cld
stc
stc
lock
ljmp
loopne
jecxz
fcmovbe
rcl
into
int
leave
enter
mov
add
xor
mov
mov
iret
lret
ror
fcmovnbe
aam
in
fsub
loop
ljmp
ljmp
std
std
std
std
std
std
std
std
std
std
std
cld
std
cld
cld
cld
sti
sti
cld
sti
std
sti
sti
std
cli
cli
std
cli
cli
div
repz
in
jecxz
out
loope
loopne
xlat
rcl
ror
lret
lds
jle
js
cmpsb
mov
mov
aam
int3
rcr
fcom
loop
loopne
jmp
out
jmp
cld
cld
cld
std
std
std
std
std
std
std
std
std
cld
std
cld
cld
cld
sti
sti
cld
sti
sti
sti
std
cli
cli
std
cli
cli
sti
clc
clc
out
jmp
call
loopne
fstp
fcomp
aam
aad
into
iret
leave
enter
ret
mov
add
push
push
push
mov
mov
lret
ror
fcmovnbe
aad
in
fucom
loop
ljmp
call
std
std
std
std
std
std
std
cld
std
cld
std
cld
sti
sti
sti
sti
sti
sti
std
sti
sti
std
cli
cli
std
cli
cli
repz
out
ljmp
loope
jecxz
fsubp
fcmovu
fcom
rcl
int3
lret
int
mov
xchg
xchg
add
add
mov
mov
int
fcom
rcr
xlat
xlat
loop
loopne
jmp
out
call
cli
clc
clc
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
std
sti
sti
std
sti
sti
std
sti
sti
clc
cmc
cmc
jmp
out
in
out
loop
loop
fcom
fcmovbe
rcl
into
into
into
leave
enter
ret
mov
cmp
add
popa
pop
pop
mov
mov
leave
enter
fcmovnbe
aam
jecxz
fucom
loope
ljmp
call
cld
sti
sti
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
std
sti
sti
std
sti
sti
sti
clc
clc
out
jmp
call
loopne
fstp
aad
xlat
rcl
ror
lret
mov
mov
pushf
add
mov
mov
ror
lret
rcr
loopne
out
loop
in
in
call
hlt
lock
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
std
sti
sti
std
sti
sti
sti
cli
cli
icebp
in
in
ljmp
loop
in
fsubp
fcmovnu
fst
fcom
rcl
int
into
mov
mov
aas
cmp
add
push
push
push
mov
mov
leave
aam
int
rcl
fstp
xlat
jecxz
fsub
loopne
call
in
jmp
div
repz
std
std
std
std
std
std
std
std
std
std
cld
std
cld
std
std
cld
cld
std
sti
sti
std
sti
sti
std
sti
sti
cld
cli
cli
repz
out
ljmp
loop
in
xlat
fcmovnbe
rcl
iret
into
ror
leave
lret
les
xchg
xchg
nop
add
add
mov
mov
ror
leave
ror
fcmovbe
aam
jecxz
fucom
loope
jmp
in
jmp
div
hlt
std
std
std
std
cld
cld
cld
std
cld
cld
std
cld
cld
std
cld
sti
std
sti
sti
cld
cli
cli
cld
sti
sti
hlt
icebp
icebp
jmp
in
in
out
loop
loopne
loop
aad
rcl
ror
lret
int
mov
mov
add
xor
xor
mov
mov
rcl
aad
fcmovu
in
fucom
loope
jmp
in
call
div
hlt
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
std
cld
cld
std
sti
sti
cld
sti
cld
hlt
icebp
icebp
ljmp
loop
in
loopne
fstp
loopne
fcmovu
aad
rcl
ror
int3
into
enter
rol
mov
je
add
jb
mov
ret
enter
enter
int3
xlat
rcl
fst
loopne
out
loope
in
in
out
in
call
div
repnz
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
cld
std
std
cld
sti
sti
repz
ljmp
jecxz
in
loopne
fstp
fcmovu
rcl
int
iret
leave
enter
les
test
add
les
into
leave
aam
int
rcl
fst
xlat
loopne
fninit
out
loope
in
jmp
out
out
out
call
cli
cli
cli
cld
std
std
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
cli
stc
stc
lock
in
ljmp
loop
in
fstp
fcmovu
xlat
xlat
rcl
into
into
ror
leave
lret
mov
mov
xor
add
mov
mov
iret
leave
enter
rcr
xlat
xlat
loopne
fninit
fstp
out
loopne
jecxz
jmp
in
out
in
out
icebp
jmp
div
idiv
cld
cld
cld
std
std
sti
cld
cld
cld
cld
cld
std
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
cld
cld
cld
cld
sti
sti
sti
div
repz
call
call
loope
loop
fcmovu
fcom
rcl
iret
into
ror
lret
mov
mov
popa
add
inc
mov
mov
mov
iret
lret
into
int
rcl
fst
fstp
in
fucomip
loop
ljmp
out
out
call
stc
div
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
cld
std
std
cld
std
std
cld
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
cld
cld
sti
cld
cld
cld
sti
sti
sti
clc
div
lock
jmp
loop
jecxz
in
loopne
loop
fcmovnbe
aad
rcl
aam
int
lret
lret
mov
mov
xchg
arpl
mov
mov
mov
iret
leave
enter
fcom
rcr
aad
loop
frstpm(287
out
loope
in
jmp
out
in
out
call
div
cmc
cli
cli
cli
sti
cld
sti
cld
sti
sti
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
sti
sti
sti
sti
sti
sti
sti
sti
cld
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
cli
div
cmc
lock
in
jmp
in
loop
out
loope
loope
in
fstp
loopne
fcmovnu
fcomp
fcmovnbe
aad
rcl
ror
int
lret
vshufps
ret
mov
xchg
add
insb
mov
mov
mov
into
enter
lret
xlat
rcl
fcmovbe
aam
xlat
loopne
fstp
in
fsubp
loope
out
loop
in
ljmp
out
out
ljmp
hlt
stc
idiv
stc
clc
clc
cli
cli
cli
cli
sti
sti
sti
cli
sti
cli
cli
cli
cli
cli
cli
stc
stc
stc
div
div
repz
out
in
call
call
loope
loope
in
fstp
loope
fcmovnu
fst
fcmovbe
rcl
rcl
ror
int3
into
leave
enter
mov
sarl
sahf
popf
add
add
push
mov
mov
mov
mov
iret
into
rcr
aad
loope
fstp
in
fsubp
loopne
out
loopne
loop
jmp
loop
loop
ljmp
call
out
in
in
out
in
in
out
in
jmp
jmp
in
call
jmp
loope
loope
out
loopne
loopne
in
fsubp
fstp
loope
fcmovnu
fcmovu
fstp
xlat
fcmovnbe
aad
rcl
aad
iret
ror
lret
into
enter
ret
mov
mov
movsb
sahf
pushf
add
pop
mov
mov
mov
int3
lret
int
rcl
rcr
aad
fcomp
loopne
fcmovnu
loop
fucom
in
loope
out
loope
out
loopne
loope
out
loopne
loope
in
loope
out
out
in
fsubp
loop
fsub
loopne
fcmovu
fst
fcmovnbe
aam
rcl
rcl
ror
int
lret
mov
ret
mov
mov
popl
add
inc
aas
ds
scas
mov
mov
ret
ror
leave
ror
int
rcl
fcom
rcr
aad
fcomp
fcmovnu
loopne
loop
fsub
fstp
loop
fucom
jecxz
fsub
fstp
in
fucom
fstp
jecxz
fsub
fstp
loop
fsub
fcmovnu
loopne
fcmovu
fcmovu
fcompp
xlat
xlat
fcmovnbe
aad
aam
fcom
rcl
iret
into
ror
int
lret
mov
sarb
mov
mov
jbe
jno
add
add
mov
mov
ret
mov
leave
ret
ret
ror
lret
int3
aad
into
xlat
rcl
rcr
aad
fcmovnbe
aam
fst
xlat
fcomp
fcomp
fcomp
loopne
fsub
fcmovu
fcomp
fcomp
xlat
xlat
fst
fcmovnbe
aad
aad
rcr
rcl
rcl
aam
into
ror
int3
ror
leave
int
lret
mov
sarb
scas
scas
dec
dec
inc
add
pop
pop
pop
mov
scas
mov
mov
sarb
ror
leave
ror
lret
aam
int
iret
iret
xlat
rcl
xlat
rcl
fcom
rcr
rcl
rcr
aam
fcmovbe
rcr
rcl
fcmovbe
rcr
rcl
rcr
rcl
xlat
rcl
aad
iret
aad
iret
ror
int
int3
lret
ror
leave
into
enter
ret
mov
mov
mov
test
add
jbe
mov
mov
mov
mov
enter
ret
ret
into
mov
lret
lret
lret
lret
ror
lret
aam
int3
aam
int3
aam
int3
aam
int3
aam
int3
aam
int3
ror
lret
ror
lret
ror
lret
leave
into
leave
enter
int3
mov
ret
ret
rol
mov
mov
mov
fwait
cmp
aaa
add
add
je
mov
mov
mov
mov
lds
enter
ret
ret
ret
lret
mov
mov
mov
mov
mov
ror
ret
rol
mov
mov
mov
mov
nop
mov
cmp
add
add
dec
sahf
cltd
cwtl
mov
mov
mov
mov
mov
mov
lds
mov
mov
mov
les
les
sarl
mov
mov
mov
mov
stos
test
dec
inc
inc
jle
js
fwait
lcall
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
mov
add
inc
pop
push
push
jno
insl
cmpb
addb
test
jle
je
gs
pusha
dec
dec
dec
xor
add
add
jmp
jg
incl
incb
add
clc
add
push
add
jg
inc
add
aas
incl
incl
add
ud0
incb
add
pop
cld
add
add
clc
add
add
push
add
add
jmp
add
add
jg
jmp
add
add
aas
inc
add
add
pop
incl
pop
incl
add
add
ud0
incl
add
add
pop
incb
add
add
add
cld
add
add
add
clc
add
add
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
jg
jmp
add
add
add
aas
inc
add
add
add
aas
inc
add
add
add
pop
incl
add
pop
incl
add
add
add
ud0
incl
add
add
add
ud0
incb
add
add
add
pop
incb
add
add
add
pop
cld
add
add
add
add
cld
add
add
add
add
clc
add
add
add
add
clc
add
add
add
add
push
push
push
jg
jmp
jg
jmp
jg
inc
aas
inc
aas
inc
pop
inc
pop
incl
add
add
pop
incl
add
add
pop
incl
add
add
ud0
incl
ud0
incl
ud0
incl
ud0
incl
pop
incl
pop
incb
pop
incb
pop
incb
pop
incb
pop
incb
pop
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
pop
incb
pop
incb
pop
incb
pop
incb
pop
incl
pop
incl
pop
incl
ud0
incl
ud0
incl
ud0
incl
ud0
incl
add
add
ud0
incl
add
add
pop
incl
add
add
pop
incl
add
add
pop
inc
pop
inc
aas
inc
aas
jmp
aas
jmp
jg
jmp
jg
push
push
clc
clc
add
add
add
add
cld
add
add
add
add
cld
add
add
add
add
incb
add
add
add
pop
incb
add
add
add
pop
incl
add
add
add
ud0
incl
add
ud0
inc
add
add
add
pop
inc
add
add
add
aas
jmp
add
add
add
jg
push
add
add
add
clc
add
add
add
cld
add
add
add
incb
add
add
pop
incl
ud0
inc
add
add
aas
push
add
add
jg
cld
add
add
incl
add
ud0
jmp
add
jg
incl
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
sldt
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
xor
add
das
add
add
add
add
add
sub
add
sub
add
add
add
add
and
add
and
add
push
add
add
add
sbb
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
cmp
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
pop
add
add
add
adc
add
adc
add
push
add
add
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
add
dec
add
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
xor
add
sub
add
add
add
add
add
and
add
pop
add
add
add
add
add
add
add
add
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
dec
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
pop
add
add
add
pop
add
add
add
add
pop
add
add
add
pop
add
add
add
push
add
add
add
push
add
add
add
pop
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
add
pop
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
dec
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
cmp
add
xor
add
xor
add
sub
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
adc
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
cmp
add
cmp
add
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
add
push
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
bound
add
bound
add
arpl
add
add
add
add
popa
add
add
add
imul
sbb
popf
sub
sub
and
add
add
add
pusha
add
add
add
data16
add
add
data16
add
add
add
add
add
add
bound
add
popa
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
pusha
add
add
add
arpl
add
add
add
add
add
add
add
imul
add
data16
add
add
sub
mov
test
mov
mov
mov
mov
mov
test
rorl
add
add
add
add
add
imul
add
add
push
add
imul
add
add
add
add
add
add
add
bound
add
pusha
add
add
add
pop
add
add
add
push
add
add
add
add
dec
add
add
add
inc
add
add
add
inc
add
add
add
cmp
add
xor
add
xor
add
sub
add
sub
add
and
add
and
add
sbb
add
add
add
add
add
adc
add
sldt
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
daa
add
add
add
add
add
add
add
cmp
add
cmp
add
inc
add
add
add
dec
add
add
add
add
push
add
add
add
pop
add
add
add
add
popa
add
add
add
add
add
add
add
push
add
imul
add
add
add
insl
add
add
add
ja
xor
mov
nop
mov
sarl
mov
mov
mov
mov
mov
mov
mov
mov
movsb
stc
push
dec
dec
int
or
mov
add
add
add
add
outsl
add
add
add
outsb
add
add
add
insb
add
add
add
push
add
push
add
add
add
add
add
add
pop
add
add
add
add
push
add
add
add
push
add
add
add
add
inc
add
add
add
cmp
add
cmp
add
xor
add
xor
add
sub
add
daa
add
add
add
and
add
sbb
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
pusha
add
add
add
add
add
add
imul
add
insb
add
add
add
outsb
add
add
add
insb
add
add
sbb
popf
test
mov
mov
mov
inc
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
add
je
add
imul
add
add
jno
add
jo
add
jo
add
outsb
add
add
add
insb
add
add
add
imul
add
add
add
add
pusha
add
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
bound
add
add
add
add
imul
add
insl
add
add
add
jo
add
jno
add
imul
add
inc
inc
les
mov
mov
sarb
inc
mov
sar
rol
leave
ret
sar
ret
sar
ret
enter
inc
mov
mov
mov
mov
insl
fisttps
or
add
add
add
jb
add
jb
add
jb
add
jo
add
jo
add
outsb
add
add
add
imul
add
add
add
add
add
bound
add
pop
add
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sldt
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
sbb
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
bound
add
add
add
add
push
add
imul
add
add
outsb
add
add
add
or
or
lds
mov
sarl
dec
sarl
int3
mov
into
enter
enter
lret
ror
leave
dec
leave
enter
enter
dec
dec
ret
lds
mov
inc
mov
popf
hlt
and
pop
cmpsb
add
add
add
jo
add
jae
add
jno
add
jo
add
outsb
add
add
add
imul
add
add
add
add
add
bound
add
pop
add
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
add
add
xor
add
sub
add
daa
add
add
add
add
add
add
add
add
add
add
add
adc
add
sldt
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
popa
add
add
add
add
push
add
add
add
add
adc
repnz
mov
ret
inc
rol
lret
dec
mov
call
int3
lret
call
into
int
aam
into
call
iret
iret
call
ror
call
iret
into
call
iret
into
call
int
call
lret
into
leave
enter
ret
les
mov
inc
mov
ss
add
add
add
jo
add
outsl
add
add
add
insb
add
add
add
push
add
add
add
add
pop
add
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
cmp
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sldt
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
sub
add
sub
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
popa
add
add
add
data16
add
add
add
add
pop
pop
movsb
mov
stos
clc
ret
inc
mov
mov
dec
mov
call
int
call
ror
call
rcl
sar
fcmovbe
sar
fcmovbe
aam
fcmovbe
aam
fcmovbe
aam
fcmovbe
sar
fcom
sar
aad
iret
call
into
into
call
int3
lret
dec
enter
sarb
mov
mov
dec
enter
outsb
add
add
add
insb
add
add
add
imul
add
data16
add
add
popa
add
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
popa
add
add
add
pop
sub
sub
sarl
inc
sarb
iret
lret
ror
int3
call
ror
fcom
sar
fcmovnbe
aam
fdivr
fdivr
fcos
fcos
fcos
fcos
fst
xlat
fcmovnbe
aad
sar
rcl
call
into
into
call
lret
int3
mov
inc
mov
mov
lcall
push
rolb
add
insb
add
add
add
data16
add
add
add
popa
add
add
add
pop
add
add
add
push
add
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
add
pop
add
add
add
push
sub
sub
sarl
dec
rol
int3
mov
ror
lret
iret
into
call
rcl
fcmovbe
aam
fst
fcos
loopne
loop
fdivr
jecxz
jecxz
fdivrp
jecxz
fdivrp
jecxz
loop
loope
fcos
fdivr
fcmovnbe
aad
fcom
sar
aad
iret
call
int3
lret
dec
enter
ret
ret
mov
mov
jmp
pop
rolb
add
data16
add
add
pusha
add
add
add
add
pop
add
add
add
push
add
add
add
dec
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
add
dec
sub
mov
sarl
dec
ret
int
call
int3
lret
call
ror
sar
fcompp
fdivr
loope
jecxz
in
fdivrp
in
loopne
out
loope
out
loope
out
loope
out
loope
in
loopne
in
jecxz
loop
fdivr
fstp
xlat
fcmovbe
sar
rcl
call
int
dec
enter
mov
mov
lcall
pop
iret
add
add
add
add
push
add
add
add
add
dec
add
add
add
add
inc
add
add
add
add
aas
add
add
add
add
add
add
add
xor
add
sub
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
add
add
add
add
add
cmp
add
cmp
add
add
add
add
inc
add
add
add
inc
add
add
and
and
sarl
dec
ret
ret
enter
int
call
rcl
fcmovbe
aam
fst
xlat
jmp
fcmovnu
jmp
fstp
jmp
jmp
loope
jmp
loop
call
jecxz
jmp
in
jmp
jecxz
call
loope
jmp
loopne
jmp
fstp
jmp
fcompp
fdivr
fcmovnbe
aad
xlat
rcl
call
into
int
ror
enter
ret
inc
sarb
mov
push
movl
add
dec
add
add
add
add
dec
add
add
add
inc
add
add
add
cmp
add
cmp
add
cmp
add
xor
add
xor
add
add
add
add
add
add
add
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
ret
inc
mov
ret
enter
int
call
rcl
fcmovbe
aam
xlat
jmp
fcmovnu
jmp
fstp
jmp
loopne
jmp
loop
call
in
ljmp
jmp
in
jmp
in
jmp
out
jmp
in
ljmp
call
loopne
jmp
jmp
fcompp
fdivr
fcmovnbe
aad
fcom
sar
aam
int
iret
lret
lret
inc
mov
mov
incl
aas
mov
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
movsl
movsb
hlt
ret
inc
mov
ret
leave
enter
int3
call
rcl
fcmovnbe
aam
fcompp
fdivr
loope
in
fdivrp
out
loope
call
in
jmp
in
in
out
in
out
in
out
in
call
call
in
out
in
out
jmp
in
jmp
in
jmp
loop
jmp
jmp
fstp
jmp
fcmovu
fcom
sar
aam
into
dec
lret
lret
mov
inc
mov
mov
mov
add
add
add
add
add
add
add
xor
add
xor
add
sub
add
add
add
add
add
add
add
and
add
pop
add
add
add
sbb
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
inc
mov
ret
enter
int
call
rcl
fcmovnbe
aad
fcompp
fcos
loop
fdivr
in
fdivrp
out
loope
jmp
in
in
out
in
call
call
out
jmp
jmp
out
call
call
in
out
in
out
in
in
ljmp
jmp
loopne
jmp
fstp
fcom
sar
aam
into
call
lret
lret
les
mov
lcall
pop
pop
addl
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
imul
mov
mov
dec
mov
call
rcl
fcmovnbe
aam
fcompp
fcos
loope
fdivr
in
fdivrp
out
loope
jmp
in
in
out
in
call
call
out
ljmp
out
ljmp
out
jmp
jmp
out
call
call
in
in
ljmp
jmp
jmp
fstp
fcom
sar
ror
int
iret
leave
enter
ret
mov
mov
testl
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
push
add
add
add
adc
add
adc
add
sldt
add
add
add
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
inc
inc
inc
scas
enter
sarl
dec
mov
call
rcl
fcmovbe
aam
fcompp
fdivr
loope
fdivr
in
out
loope
jmp
in
in
out
in
jmp
call
out
ljmp
lock
push
jmp
push
jmp
push
jmp
push
ljmp
out
jmp
jmp
in
out
in
out
ljmp
jmp
loopne
jmp
fstp
fcom
sar
ror
int
into
enter
ret
ret
mov
mov
in
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
sbb
sbb
ret
sarb
dec
mov
ror
lret
ror
fcmovbe
sar
fdivr
loop
in
fdivrp
out
loope
call
in
in
out
in
jmp
call
out
ljmp
lock
push
in
jmp
icebp
jmp
push
in
ljmp
in
jmp
lock
out
ljmp
out
call
call
in
out
ljmp
jmp
loopne
jmp
fstp
fcos
fcmovnbe
aad
xlat
rcl
call
int
dec
enter
ret
sar
mov
mov
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
test
mov
ret
dec
lret
aam
into
sar
fst
jmp
jmp
jmp
loope
call
in
in
out
in
jmp
call
out
ljmp
icebp
in
in
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
in
ljmp
jmp
out
ljmp
in
jmp
out
in
out
ljmp
jmp
jmp
fcompp
fdivr
fcmovnbe
aam
rcl
call
int3
lret
dec
mov
mov
mov
jmp
and
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpl
ret
inc
mov
ret
leave
enter
int
sar
jmp
fcmovnu
jmp
jmp
loope
call
in
jmp
out
in
jmp
call
out
ljmp
icebp
jmp
push
jmp
push
jmp
push
in
in
push
in
in
push
in
in
push
in
in
push
in
jmp
lock
push
in
ljmp
ljmp
out
jmp
call
in
in
ljmp
jmp
loopne
jmp
xlat
fcmovnbe
aad
iret
iret
call
lret
lret
lds
mov
stc
or
or
add
add
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
ret
dec
ret
into
enter
int
fcom
sar
jmp
fcmovu
jmp
fstp
jmp
loope
jmp
in
in
out
in
jmp
call
out
ljmp
icebp
jmp
push
jmp
push
jmp
push
in
in
push
in
in
push
in
in
push
in
in
push
in
in
push
in
in
push
in
jmp
lock
ljmp
in
ljmp
ljmp
in
jmp
out
in
in
ljmp
jmp
jmp
xlat
sar
aam
into
dec
lret
leave
ret
ret
mov
mov
filds
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
sarb
dec
mov
ror
lret
call
rcl
fcmovnbe
aad
fcos
jecxz
in
loopne
out
loope
ljmp
in
out
in
jmp
jmp
push
jmp
push
jmp
push
jmp
push
in
jmp
repnz
in
push
out
in
push
out
in
push
in
in
push
in
in
push
in
in
push
in
in
push
in
in
push
in
in
push
in
ljmp
in
ljmp
ljmp
out
jmp
out
jmp
in
jmp
loope
jmp
jmp
fcmovnu
fcom
sar
ror
int
int
dec
ret
ret
inc
sarb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
loop
mov
mov
call
lret
aad
iret
fcmovnbe
aam
fdivr
loope
fdivr
in
out
loop
ljmp
in
out
in
call
call
push
out
out
clc
repnz
stc
repz
stc
repz
lock
push
out
in
push
out
in
push
out
out
push
out
out
push
out
out
push
out
in
push
out
in
push
in
in
push
in
out
push
repz
clc
hlt
repz
clc
repz
icebp
out
push
in
in
out
jmp
call
in
out
jmp
in
jmp
loope
jmp
fstp
fcos
fcmovnbe
aad
xlat
rcl
call
int3
int3
dec
mov
mov
mov
std
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
ret
dec
ret
into
enter
into
int
sar
xlat
jmp
fcmovnu
jmp
jmp
loop
call
in
out
jmp
out
cld
div
cli
stc
clc
repz
jmp
out
loopne
fcos
fcmovbe
aam
loopne
fdivr
icebp
in
in
push
out
out
push
out
out
push
out
out
push
out
out
push
out
out
push
out
out
push
out
in
push
in
in
push
out
out
jmp
fnstsw
aad
fcmovbe
jmp
loope
push
lock
stc
idiv
stc
clc
push
repnz
push
jmp
in
out
ljmp
jmp
jmp
fcompp
fdivr
fcmovbe
sar
aad
iret
call
lret
lret
inc
mov
mov
loope
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
dec
mov
mov
mov
call
int3
lret
call
rcl
aad
jecxz
in
loope
out
loop
in
out
stc
repz
stc
repz
fdivr
stos
cmpsl
cmpsl
pushl
jae
inc
inc
inc
jmp
es
sbb
call
pop
pop
lcall
sbb
decl
cli
cli
push
out
out
push
out
out
push
out
out
push
out
out
push
out
out
push
in
out
std
stc
clc
mov
pop
pop
call
push
push
lcall
sbb
jmp
and
cmp
jmp
lcall
leave
enter
in
cld
div
push
jmp
jmp
loope
jmp
jmp
fcmovnu
fst
fcom
sar
ror
int
into
enter
ret
ret
inc
mov
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
jbe
sarl
dec
lret
aad
iret
fcmovbe
aam
fcompp
fdivr
loop
fdivr
in
in
out
stc
repz
out
jmp
pushl
pop
pop
jmp
pop
pop
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
std
push
lock
push
lock
push
lock
push
lock
push
lock
push
out
in
sti
stc
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
push
push
incl
inc
call
fcmovnu
sti
hlt
hlt
push
in
jmp
out
loope
jecxz
call
rcl
call
int3
lret
dec
mov
mov
inc
mov
mov
push
push
add
add
sub
mov
inc
mov
sar
enter
int
fcom
sar
fst
jmp
fcmovnu
jmp
loopne
push
out
out
call
cltd
cwtl
cmp
cmp
push
push
push
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
mov
mov
std
cld
push
icebp
lock
icebp
lock
icebp
lock
icebp
lock
icebp
lock
icebp
lock
stc
cmc
cmc
jmp
jecxz
lcall
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
pop
jp
ja
aad
iret
push
icebp
icebp
ljmp
fstp
fdivr
fcmovbe
aam
aam
into
dec
leave
leave
dec
mov
mov
mov
add
add
fwait
xchg
xchg
jmp
lds
call
lret
lret
rcl
aad
fcos
out
call
ljmp
xor
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
sbb
fstp
fcos
std
stc
clc
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
clc
idiv
inc
inc
inc
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
sbb
jle
jnp
loopne
hlt
out
out
jmp
fstp
aad
fcom
sar
ror
int
into
enter
rol
mov
mov
lcall
sbb
pop
cmp
cmp
ret
mov
ret
leave
enter
into
sar
loope
icebp
jmp
inc
sarb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
cmp
idiv
div
hlt
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
icebp
lock
jge
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
mov
out
jmp
loop
fcmovnbe
aad
ror
call
lret
lret
dec
inc
mov
mov
jl
js
add
add
add
pushf
fwait
out
mov
sarb
ror
lret
call
rcl
jmp
loope
jmp
loopne
incl
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
js
push
lock
icebp
icebp
push
repnz
repnz
repnz
repnz
repnz
repnz
pushl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
incl
add
lcall
push
call
lret
lret
out
fcmovbe
aam
ror
int3
dec
enter
sar
mov
mov
and
and
add
add
inc
sahf
mov
mov
ret
dec
lret
aad
iret
call
inc
inc
incl
add
incl
add
incl
push
push
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
pushl
push
icebp
icebp
push
repz
repz
repz
repz
repz
repnz
repnz
std
cli
cli
jmp
loop
jmp
and
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
push
add
incl
add
jmp
and
jmp
in
fcmovbe
aam
ror
lret
lds
mov
add
add
pop
pop
pop
xor
mov
sar
mov
jmp
loopne
jmp
pop
pop
incl
add
decl
or
incl
push
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
call
div
push
repz
repz
repz
repz
repz
repz
repz
repz
clc
hlt
hlt
cld
cld
call
push
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
push
push
decl
or
incl
add
decl
or
pushl
fdivr
fcmovnbe
aam
into
enter
ret
ret
mov
mov
sub
sub
add
add
inc
mov
ret
mov
ret
int3
lret
fstp
decl
or
decl
or
or
or
push
push
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
std
std
push
hlt
repz
repz
repz
clc
repz
clc
repz
stc
hlt
repz
clc
hlt
repz
hlt
repz
repz
repnz
jmp
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
add
pop
decl
or
decl
or
incl
add
lcall
push
call
rcl
sar
lret
inc
sarb
lea
add
push
push
push
xor
mov
dec
mov
decl
or
decl
or
decl
or
incl
push
push
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
pushl
push
repz
repz
clc
hlt
repz
stc
hlt
repz
stc
cmc
hlt
stc
cmc
cmc
stc
hlt
hlt
stc
hlt
hlt
clc
hlt
hlt
clc
hlt
repz
cld
stc
clc
jmp
loope
lcall
sbb
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
push
push
decl
or
decl
or
push
or
add
push
push
push
call
iret
iret
call
into
int
enter
ret
mov
and
add
inc
ds
inc
mov
ret
fdivr
cltd
xchg
xchg
call
adc
decl
or
femms
push
decl
or
decl
pop
pop
incl
push
push
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
icebp
out
out
sti
clc
idiv
div
repz
stc
repz
stc
cmc
hlt
stc
cmc
cmc
stc
cmc
cmc
stc
cmc
cmc
stc
cmc
cmc
stc
hlt
cmc
stc
hlt
hlt
clc
hlt
hlt
clc
hlt
hlt
jmp
popa
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
push
pop
decl
or
decl
ud0
pusha
pusha
fcmovnbe
aad
into
enter
sarb
xchg
add
add
add
lahf
lcall
mov
iret
pushl
and
decl
or
call
adc
decl
or
or
or
pop
push
push
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
push
repnz
clc
hlt
repz
stc
hlt
hlt
stc
cmc
cmc
stc
cmc
cmc
stc
cmc
cmc
cli
cmc
cmc
cli
cmc
cmc
cli
cmc
cmc
stc
hlt
hlt
stc
hlt
hlt
clc
hlt
hlt
mov
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
push
add
or
or
or
prefetchw
decl
jg
aad
enter
sarl
lcall
push
sbb
add
das
das
cmpb
mov
call
leave
enter
inc
decl
or
call
adc
decl
or
or
pop
incl
add
incl
add
incl
add
incl
add
pop
pop
pop
decl
or
decl
or
adc
adc
adc
adc
adc
adc
push
push
push
lcall
sbb
push
push
push
incl
add
call
adc
fcom
aad
sti
sti
push
repz
stc
hlt
hlt
stc
cmc
cmc
cli
cmc
cmc
cli
cmc
cmc
cli
div
cli
div
cli
div
cli
div
cli
div
cli
hlt
hlt
stc
hlt
hlt
cld
clc
clc
push
div
cmp
cmp
add
add
add
add
adc
adc
or
or
or
or
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
push
push
decl
or
decl
adc
call
femms
lcall
sbb
scas
stos
test
inc
mov
mov
jae
outsb
enter
or
add
add
add
adc
addl
lds
sar
jge
js
or
adc
call
adc
call
adc
call
adc
call
push
push
lcall
sbb
lcall
pop
pop
jmp
and
jmp
daa
daa
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
jmp
daa
daa
incl
push
push
incl
add
jmp
fs
stc
hlt
hlt
clc
hlt
hlt
stc
hlt
hlt
cli
cmc
cmc
cli
div
cli
div
cli
div
cli
div
cli
div
cli
div
cli
div
cli
cmc
cmc
cli
hlt
hlt
clc
repz
jmp
add
incl
add
lcall
pop
pop
ljmp
sub
jmp
daa
daa
jmp
and
jmp
and
lcall
sbb
pop
pop
pop
call
adc
decl
or
incl
push
pop
incl
add
add
or
decl
adc
decl
inc
inc
dec
leave
enter
inc
mov
mov
cmovns
add
add
pop
pop
pop
mov
mov
mov
es
jmp
and
pushl
xor
pushl
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
das
das
ljmp
das
das
ljmp
cs
cs
cs
cs
cs
xor
lcall
sbb
incl
add
decl
or
iret
int
std
cld
clc
repz
stc
hlt
hlt
cli
cmc
cmc
cli
div
cli
div
cli
div
cli
div
sti
div
sti
div
cli
div
cli
div
cli
div
cli
div
stc
hlt
hlt
cld
clc
clc
push
icebp
icebp
pushl
xor
incl
add
decl
push
push
ljmp
das
das
ljmp
das
das
ljmp
cs
cs
das
das
pushl
xor
pushl
xor
pushl
xor
ljmp
das
das
ljmp
sub
sub
sub
and
and
sbb
push
adc
call
femms
call
adc
call
femms
decl
sar
ret
mov
mov
push
dec
dec
test
add
add
pop
mov
mov
inc
mov
into
ljmp
decl
or
lcall
sbb
cmp
cmp
aas
ds
cmp
aaa
pushl
aaa
pushl
xor
xor
pushl
xor
pushl
xor
xor
xor
xor
xor
xor
xor
ss
das
das
incl
add
ljmp
push
repz
clc
hlt
hlt
stc
hlt
hlt
cli
cmc
cmc
cli
div
cli
div
cli
div
sti
clc
idiv
sti
clc
idiv
sti
clc
idiv
sti
div
cli
div
cli
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
ljmp
add
incl
add
jmp
cmp
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
cmp
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
pop
decl
or
xor
dec
ret
ret
mov
lcall
add
add
push
add
idivl
mov
jmp
adc
ljmp
das
incl
inc
incl
aas
aas
ds
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
pop
pop
incl
add
lcall
sbb
fstp
fcos
std
sti
sti
push
repz
stc
hlt
hlt
stc
cmc
cmc
cli
div
cli
div
cli
div
sti
div
cld
stc
idiv
cld
stc
idiv
cld
stc
idiv
cld
stc
idiv
sti
div
cli
div
cli
div
cli
div
cli
hlt
hlt
sti
div
stc
stc
stc
decl
inc
incl
add
decl
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
aas
incl
inc
cmp
cmp
pop
adc
ud0
into
int
sarl
ljmp
daa
es
add
add
das
cmpl
ror
jns
je
or
sbb
incl
inc
decl
dec
incl
inc
incl
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
ljmp
das
das
incl
add
incl
add
call
push
repz
clc
repz
stc
cmc
cmc
cli
cmc
cmc
cli
div
cli
div
cli
div
cld
stc
idiv
cld
stc
idiv
cld
stc
clc
cld
stc
idiv
cld
stc
idiv
sti
clc
idiv
cli
div
cli
div
cli
div
cli
hlt
hlt
clc
repz
dec
mov
incl
add
lcall
pop
pop
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
incl
inc
incl
inc
decl
ljmp
daa
daa
decl
inc
inc
dec
mov
enter
mov
push
les
add
or
add
or
jo
lret
mov
leave
ret
lret
cmp
or
pushl
das
call
push
decl
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
incl
inc
incl
inc
decl
inc
incl
inc
incl
inc
incl
inc
decl
dec
incl
inc
decl
or
incl
add
decl
inc
stc
clc
idiv
stc
div
push
repz
stc
hlt
hlt
stc
cmc
cmc
cli
cmc
cmc
cli
div
sti
div
cld
stc
idiv
cld
stc
idiv
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
idiv
sti
clc
idiv
cli
div
cli
div
cli
div
stc
hlt
hlt
stc
cmc
cmc
incl
add
incl
add
pushl
xor
dec
dec
dec
incl
inc
incl
inc
incl
inc
incl
inc
decl
inc
incl
inc
decl
inc
decl
dec
decl
dec
decl
dec
decl
dec
decl
call
dec
incl
aas
call
sbb
jmp
lret
leave
inc
mov
stos
sti
or
or
or
or
scas
test
mov
jmp
sbb
call
inc
inc
call
push
call
push
call
push
call
push
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
call
push
lcall
sbb
incl
add
lcall
pop
pop
fcom
push
repnz
clc
repz
stc
hlt
hlt
stc
cmc
cmc
cli
cmc
cmc
sti
div
sti
clc
idiv
cld
stc
idiv
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
cld
stc
idiv
cli
div
cli
div
cli
div
cli
cmc
cmc
clc
hlt
hlt
cld
div
push
cmc
hlt
incl
incl
add
decl
or
incl
inc
call
push
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
call
dec
call
push
call
push
call
call
push
jmp
and
or
imul
ret
mov
das
das
addb
add
sub
mov
inc
mov
int
outsl
imul
or
jmp
pop
pop
lcall
pop
call
push
call
push
call
push
call
call
call
push
call
push
call
push
call
push
call
push
call
push
lcall
pop
jmp
es
add
incl
stos
stos
push
repnz
clc
repz
clc
hlt
hlt
stc
hlt
hlt
stc
cmc
cmc
sti
div
sti
clc
idiv
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
sti
stc
idiv
cli
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
push
repnz
cld
cld
xlat
jmp
and
incl
add
call
push
push
call
push
call
push
call
push
call
push
call
push
call
call
push
call
call
call
call
push
call
push
call
push
lcall
pop
cmp
decl
or
cmp
leave
ret
ret
rol
mov
insl
imul
add
push
add
add
insl
push
mov
mov
incl
cmp
cmp
cmp
bound
lcall
pop
lcall
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
jmp
popa
pushl
xor
incl
add
incl
add
decl
push
repnz
repnz
clc
hlt
repz
clc
hlt
hlt
stc
hlt
hlt
cli
div
sti
div
sti
clc
clc
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
idiv
cli
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
clc
hlt
hlt
push
repz
inc
mov
adc
add
add
sbb
sbb
pop
pop
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
jmp
pusha
call
dec
call
sbb
ljmp
leave
enter
mov
movsl
mov
push
xor
add
add
add
cmpsl
mov
mov
int
pushl
and
call
adc
call
push
jmp
jmpw
popa
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pop
jmp
pusha
lcall
pop
jmp
pop
lcall
pop
jmp
jmp
popa
ljmp
sub
incl
add
incl
add
js
ja
cld
cld
push
hlt
hlt
push
repnz
push
repz
clc
hlt
repz
clc
hlt
hlt
cli
cmc
cmc
cli
div
sti
div
sti
clc
clc
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
sti
clc
idiv
cli
div
cli
cmc
cmc
cli
cmc
cmc
stc
hlt
hlt
push
repz
repz
ljmp
or
add
add
sbb
sbb
pop
pop
pop
jmp
lcall
pop
lcall
pop
jmp
pusha
lcall
pop
jmp
pop
jmp
pop
jmp
pusha
jmp
pusha
jmp
popa
jmp
arpl
popa
pusha
pop
jmp
and
call
push
push
incl
int
ret
mov
pop
pop
imul
add
add
sbb
pop
mov
mov
int
xchg
mov
adc
ud0
pop
push
jmp
arpl
push
imul
data16
jmpw
jmpw
jmp
jmp
jmp
ljmp
insl
lcall
pop
lcall
push
push
incl
add
incl
add
jns
ja
std
std
clc
cmc
cmc
push
icebp
lock
repz
repz
clc
hlt
repz
stc
hlt
cmc
cli
cmc
cmc
cli
div
sti
div
sti
clc
clc
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
sti
clc
idiv
sti
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
clc
repz
repz
repz
ljmp
adc
add
add
adc
adc
dec
dec
dec
ljmp
insl
ljmp
imul
gs
jmp
jmp
jmpw
jmpw
ljmpw
ljmp
imul
xor
decl
or
lcall
pop
call
int3
lret
inc
sarb
dec
dec
dec
movsl
inc
inc
inc
cwtl
mov
mov
sar
jae
outsb
decl
or
ljmp
cs
outsl
ljmp
push
imul
imul
imul
imul
push
push
imul
jno
jo
outsb
outsb
outsb
incl
inc
decl
add
decl
or
decl
std
cld
push
hlt
hlt
push
icebp
lock
repnz
push
repz
repz
clc
hlt
repz
cli
cmc
cmc
cli
div
cli
div
sti
div
sti
clc
clc
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
sti
clc
idiv
sti
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
stc
repz
repz
repnz
push
icebp
icebp
mov
push
push
incl
add
incl
add
pushl
data16
jb
insb
insb
insb
ljmp
push
push
push
imul
imul
imul
insb
insb
imul
jno
decl
dec
decl
or
inc
cmp
dec
ret
ret
mov
sbb
add
add
jo
imul
mov
inc
sarb
push
push
push
decl
pop
push
incl
aas
pushl
jbe
jo
outsl
pushl
outsl
pushl
outsl
ljmp
outsl
pushl
jb
jbe
jbe
jne
jne
pop
pop
pop
jmp
and
incl
add
incl
add
jmp
and
pushl
clc
hlt
hlt
push
icebp
out
push
repnz
push
repnz
repz
clc
repz
stc
cmc
hlt
stc
cmc
cmc
cli
div
cli
div
sti
div
sti
clc
clc
sti
clc
clc
cld
stc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
sti
div
cli
div
cli
div
stc
cmc
cmc
stc
hlt
hlt
push
repz
repnz
push
icebp
icebp
push
icebp
lock
std
call
rcl
incl
inc
incl
add
incl
add
call
adc
dec
dec
dec
pushl
jo
js
js
jae
jae
jo
outsl
ljmp
outsl
pushl
outsl
pushl
outsl
pushl
je
pop
pop
pop
call
adc
ljmp
es
mov
mov
pushl
pop
pop
xor
add
add
add
and
xchg
xchg
ljmp
ret
dec
mov
aas
cmp
or
push
push
push
jnp
jp
jne
je
jbe
jbe
jp
jp
jl
jnp
jb
jb
push
push
push
ljmp
sub
incl
add
incl
add
incl
add
lcall
push
fdivr
push
lock
icebp
lock
icebp
lock
repnz
repnz
repz
clc
hlt
repz
stc
cmc
hlt
stc
cmc
cmc
cli
div
cli
div
sti
div
sti
clc
clc
sti
clc
clc
std
cli
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
std
stc
stc
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
sti
clc
idiv
cli
div
cli
div
stc
cmc
cmc
stc
hlt
hlt
push
repz
repnz
push
icebp
icebp
push
icebp
icebp
push
lock
cli
stc
push
out
in
incl
adc
incl
add
incl
add
lcall
sbb
decl
dec
ljmp
imul
jp
jnp
jnp
js
ja
jbe
jne
jns
ja
imul
sbb
sbb
sbb
push
ljmp
lret
mov
mov
sbb
add
add
push
push
inc
mov
scas
inc
mov
inc
mov
decl
or
incl
jp
jo
jo
pop
pop
pop
cmp
cmp
sbb
sbb
add
add
add
add
add
add
aaa
ss
stc
stc
std
div
push
out
out
push
lock
icebp
lock
repnz
push
repnz
repnz
hlt
repz
stc
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
cli
div
sti
div
sti
clc
clc
cld
stc
clc
std
cli
stc
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
cld
stc
idiv
cli
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
push
repz
repz
repnz
push
icebp
icebp
push
icebp
out
push
in
in
push
repz
std
dec
mov
push
push
push
incl
add
incl
add
incl
add
call
adc
ljmp
das
das
call
push
ljmp
push
jns
js
cmpb
jl
jnp
and
or
xchg
call
iret
into
inc
mov
mov
ds
xchg
and
and
mov
inc
mov
lret
mov
jmp
adc
incl
inc
cmp
cmp
es
incl
add
incl
add
incl
add
incl
inc
inc
jmp
in
in
std
cld
push
lock
out
out
push
lock
lock
repnz
repnz
push
repnz
repnz
clc
hlt
repz
stc
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
cli
div
sti
div
sti
clc
clc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
cld
stc
idiv
cli
div
cli
div
cli
cmc
cmc
stc
hlt
hlt
clc
repz
repz
repnz
push
icebp
icebp
push
icebp
out
push
out
out
push
out
in
push
out
in
stc
clc
cli
div
mov
pop
pop
call
add
incl
add
incl
add
decl
or
lcall
push
push
pushl
xor
inc
inc
inc
jmp
and
or
mov
inc
mov
mov
bound
add
add
inc
aas
aas
cwtl
mov
mov
int
mov
lods
call
adc
incl
add
incl
add
incl
add
incl
add
decl
push
push
cmp
aaa
jnp
js
sarb
sti
sti
push
icebp
lock
out
in
push
out
out
push
lock
lock
icebp
lock
repnz
push
repnz
push
repnz
clc
repz
clc
hlt
repz
stc
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
sti
div
cld
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
cli
cli
std
stc
stc
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
clc
cld
stc
idiv
sti
clc
idiv
cli
div
cli
cmc
cmc
stc
cmc
cmc
clc
repz
repz
repnz
push
icebp
icebp
push
icebp
lock
out
out
push
out
out
push
out
in
push
in
in
push
in
in
cld
div
cld
div
call
ror
decl
dec
dec
lcall
sbb
incl
add
add
add
add
add
add
add
pop
push
push
incl
add
incl
aam
inc
sarb
test
xlat
add
add
add
add
pop
mov
lds
leave
dec
popa
pop
pop
incl
notrack
dec
jmp
popa
jg
jl
cmpsb
mov
int3
push
in
in
cli
stc
clc
clc
push
lock
in
in
push
out
out
push
out
out
push
out
out
push
lock
lock
icebp
lock
repnz
push
repnz
push
repnz
clc
repz
clc
hlt
hlt
stc
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
sti
div
cld
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
cli
cli
stc
stc
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
idiv
sti
clc
idiv
cli
div
cli
cmc
cmc
stc
cmc
cmc
clc
repz
repz
repnz
push
icebp
icebp
push
icebp
lock
out
out
push
out
out
push
out
in
push
in
in
push
in
in
out
ljmp
sti
cmc
hlt
stc
clc
push
icebp
icebp
xlat
pushl
xchg
imul
push
push
push
decl
inc
decl
inc
pushl
iret
into
inc
rol
mov
xchg
xchg
ljmp
add
cmpb
mov
sarb
ror
jmp
jmp
fcmovu
ljmp
clc
repnz
stc
hlt
repz
lock
in
jmp
lock
push
in
in
push
in
in
push
out
in
push
out
out
push
out
out
push
lock
lock
icebp
lock
icebp
icebp
push
repnz
push
repnz
push
repz
clc
repz
clc
hlt
hlt
stc
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
cld
clc
clc
cld
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
cli
cli
cli
cli
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
idiv
sti
clc
idiv
cli
div
cli
cmc
cmc
stc
cmc
cmc
clc
repz
repz
repz
push
icebp
icebp
push
icebp
lock
lock
push
out
out
push
out
in
push
in
in
push
in
in
push
in
in
push
jmp
push
jmp
out
ljmp
hlt
in
in
stc
repnz
clc
repnz
in
in
in
out
jmp
fstp
fcompp
fdivr
sar
iret
leave
enter
sar
mov
lods
sti
or
or
add
add
add
sbb
xchg
xchg
jmp
mov
call
into
int
fst
aad
jecxz
fdivr
out
loopne
jmp
in
jmp
out
in
jmp
ljmp
in
in
push
in
in
push
out
in
push
out
out
push
out
out
push
lock
lock
icebp
lock
icebp
icebp
push
repnz
push
repnz
repz
clc
repz
clc
hlt
repz
stc
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
cli
div
sti
clc
clc
cld
stc
stc
cld
stc
stc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
cli
cli
cli
cli
cli
cli
std
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
cld
stc
idiv
sti
clc
idiv
cli
div
cli
cmc
cmc
stc
cmc
cmc
clc
repz
repz
repz
push
icebp
icebp
push
icebp
lock
lock
push
out
out
push
out
in
push
in
in
push
in
in
push
in
in
push
jmp
push
in
ljmp
jmp
call
ljmp
jmp
loope
jmp
fstp
fcompp
fdivr
rcl
dec
lret
lret
inc
mov
mov
push
adc
add
push
push
push
xor
mov
sar
leave
enter
into
fcmovnbe
aam
loopne
fcos
in
fdivrp
call
in
in
call
jmp
push
jmp
push
in
in
push
in
in
push
out
out
push
out
out
push
lock
lock
icebp
lock
icebp
icebp
push
icebp
icebp
push
repnz
push
repz
repz
clc
repz
clc
hlt
repz
stc
hlt
hlt
stc
cmc
hlt
stc
cmc
cmc
sti
div
cld
clc
clc
cld
stc
stc
cld
cli
cli
cld
cli
cli
std
sti
sti
std
sti
sti
std
sti
sti
sti
sti
sti
sti
sti
sti
std
cli
cli
cld
cli
cli
cld
cli
cli
cld
stc
stc
cld
stc
stc
sti
clc
idiv
cli
div
cli
cmc
cmc
stc
cmc
cmc
clc
hlt
hlt
push
repz
repz
push
icebp
icebp
push
lock
lock
push
out
out
push
out
in
push
in
in
push
in
in
push
in
in
push
jmp
push
in
ljmp
jmp
call
ljmp
jmp
fnstsw
jmp
fcmovnu
call
rcl
call
lret
lret
mov
mov
es
add
or
stos
test
sarl
call
lret
iret
iret
aad
loope
in
fdivrp
call
out
in
call
jmp
push
jmp
push
in
in
push
in
in
push
out
out
push
out
out
push
lock
lock
push
icebp
lock
icebp
icebp
push
repnz
repz
clc
cmc
hlt
stc
div
sti
div
sti
clc
clc
cld
clc
clc
std
cli
stc
std
cli
cli
cld
cld
std
std
std
cld
sti
sti
sti
sti
std
cli
cli
cld
clc
clc
cli
div
stc
div
push
hlt
hlt
push
repz
icebp
lock
out
out
push
out
in
push
in
in
push
in
in
push
in
in
push
jmp
push
in
ljmp
jmp
call
jmp
in
call
loopne
jmp
fstp
xlat
call
rcl
call
int3
lret
ret
mov
mov
xor
xor
adc
mov
inc
mov
ret
lret
xlat
rcl
fst
aad
loope
in
jmp
out
in
call
jmp
push
jmp
push
in
in
push
out
in
push
lock
icebp
icebp
push
hlt
hlt
stc
cmc
cmc
cli
div
sti
div
sti
clc
clc
std
cli
cli
std
sti
cli
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
sti
std
sti
cli
cld
stc
stc
cld
cli
stc
sti
clc
idiv
cli
div
clc
div
push
repz
repnz
push
lock
push
out
in
push
in
ljmp
jmp
out
in
call
in
call
loopne
jmp
xlat
fcom
sar
ror
lret
dec
mov
les
mov
inc
ds
sbb
sbb
mov
inc
mov
ret
call
lret
lret
rcl
fst
jmp
jmp
loope
jmp
out
in
call
jmp
push
lock
clc
repz
stc
cmc
cmc
sti
div
cld
stc
stc
cld
stc
stc
cld
stc
cli
cld
stc
cli
cld
stc
stc
cld
stc
stc
std
sti
cli
std
sti
cli
std
sti
sti
sti
sti
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
clc
sti
clc
idiv
cli
clc
idiv
cli
div
cli
div
stc
div
stc
cmc
cmc
push
hlt
repz
repz
lock
in
in
in
call
in
jmp
loopne
jmp
fstp
fdivr
fcom
sar
ror
int3
dec
mov
lds
mov
push
dec
dec
cmpsb
and
and
mov
inc
mov
ret
call
lret
lret
rcl
fst
jmp
jmp
loope
jmp
out
in
call
in
stc
hlt
hlt
cli
div
cli
div
cli
div
cld
clc
clc
cld
stc
stc
cld
stc
stc
cld
cli
stc
cld
cli
cli
cld
cli
cli
cld
cli
cli
std
sti
cli
std
sti
cli
std
sti
sti
sti
sti
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
cli
std
cli
cli
cld
cli
cli
cld
cli
stc
sti
stc
clc
sti
clc
idiv
cli
clc
idiv
cli
div
cli
div
cli
div
cli
div
stc
cmc
hlt
cli
cmc
cmc
stc
hlt
hlt
clc
repz
jmp
ljmp
jmp
loopne
jmp
fcompp
fdivr
fcom
sar
ror
lret
dec
mov
lds
mov
pop
pop
pop
mov
add
add
es
mov
inc
mov
ret
call
lret
lret
rcl
fst
jmp
jmp
loope
jmp
out
in
call
out
clc
cmc
cmc
cli
div
cli
div
cli
div
cld
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
std
cli
cli
std
sti
cli
std
sti
cli
std
sti
sti
sti
sti
cld
sti
cld
cld
std
std
std
std
std
std
std
std
std
std
std
cld
cld
sti
cli
std
cli
cli
std
cli
cli
std
cli
stc
sti
stc
clc
sti
clc
idiv
cli
clc
idiv
cli
div
cli
div
cli
div
cli
div
stc
cmc
hlt
cli
cmc
cmc
stc
repz
clc
repz
in
in
jmp
in
jmp
loopne
jmp
fcompp
fdivr
sar
ror
int3
dec
mov
mov
bound
add
add
sub
sub
mov
inc
mov
ret
call
lret
fcom
sar
xlat
jmp
jmp
loopne
jmp
out
in
call
out
clc
div
cli
div
cli
div
sti
div
cld
stc
stc
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
std
cli
cli
std
sti
cli
std
sti
cli
std
sti
sti
sti
sti
cld
sti
cld
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
cli
std
cli
cli
std
cli
cli
std
cli
stc
sti
stc
clc
sti
clc
clc
cli
clc
idiv
cli
div
cli
div
cli
div
cli
div
stc
cmc
hlt
cli
cmc
hlt
stc
repz
clc
repz
in
in
ljmp
jmp
loopne
jmp
fstp
fdivr
sar
ror
int3
dec
mov
mov
data16
add
sub
sub
mov
ret
mov
ret
call
lret
lret
rcl
jmp
fstp
jmp
loopne
jmp
out
in
call
lock
stc
div
cli
div
cli
div
sti
div
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
std
cli
cli
std
sti
sti
std
sti
sti
std
sti
sti
std
sti
sti
sti
sti
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
sti
std
sti
sti
std
cli
stc
cld
cli
stc
sti
stc
clc
sti
clc
clc
sti
clc
clc
sti
clc
idiv
cli
clc
cmc
cli
div
cli
div
stc
hlt
hlt
cli
hlt
hlt
stc
repz
clc
repz
in
in
ljmp
jmp
loope
jmp
fstp
fdivr
sar
ror
int3
dec
mov
mov
data16
add
sub
sub
mov
inc
mov
ret
call
lret
lret
rcl
jmp
fstp
jmp
loopne
jmp
out
in
call
icebp
stc
div
cli
div
cli
clc
clc
sti
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
cli
cli
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
std
cld
std
std
std
std
cld
cld
cld
cld
sti
sti
std
sti
sti
std
cli
stc
cld
stc
stc
sti
stc
clc
sti
stc
clc
sti
clc
clc
cli
clc
idiv
cli
clc
cmc
cli
div
cli
div
stc
hlt
hlt
cli
hlt
hlt
stc
repz
clc
repz
out
out
jmp
out
jmp
loope
jmp
fstp
fdivr
sar
ror
int3
dec
mov
mov
data16
add
daa
es
mov
inc
mov
ret
lret
lret
rcl
fst
jmp
jmp
loope
jmp
out
in
call
icebp
stc
div
sti
clc
idiv
sti
clc
clc
sti
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
cli
cli
sti
sti
cld
sti
cld
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
cld
cld
cld
cld
sti
sti
std
sti
sti
std
cli
stc
cld
stc
stc
cld
stc
clc
cld
stc
clc
sti
clc
clc
cli
clc
idiv
cli
clc
cmc
cli
div
cli
div
stc
hlt
hlt
cli
cmc
cmc
stc
repz
clc
repz
out
out
jmp
in
jmp
loopne
jmp
fcompp
fdivr
sar
ror
int3
dec
mov
mov
pop
pop
mov
and
and
mov
inc
mov
ret
lret
lret
call
rcl
fst
jmp
jmp
loope
jmp
out
in
call
icebp
stc
div
sti
clc
idiv
sti
clc
clc
sti
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
stc
std
cli
cli
std
cli
cli
sti
sti
sti
sti
cld
sti
cld
sti
cld
cld
cld
cld
std
cld
std
std
std
std
std
cld
cld
cld
cld
sti
sti
std
sti
sti
cld
cli
stc
cld
stc
stc
cld
cli
clc
cld
stc
clc
sti
clc
clc
cli
clc
idiv
cli
clc
idiv
cli
div
cli
div
stc
cmc
cmc
cli
div
stc
hlt
hlt
clc
cmc
cmc
push
out
out
jmp
in
jmp
loopne
jmp
fdivr
fcom
sar
ror
int3
dec
mov
lds
mov
pop
push
push
mov
add
add
sbb
pop
mov
mov
ret
call
lret
lret
rcl
fst
jmp
jmp
loope
jmp
out
out
call
icebp
cli
div
sti
clc
idiv
sti
clc
clc
cld
stc
stc
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
sti
sti
sti
sti
cld
sti
cld
sti
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
cld
sti
sti
std
sti
sti
std
cli
cli
std
cli
cli
cld
stc
clc
cld
stc
clc
cli
clc
clc
cli
clc
idiv
cli
clc
idiv
cli
clc
idiv
cli
div
stc
cmc
cmc
stc
cmc
cmc
stc
hlt
hlt
clc
hlt
hlt
push
out
out
jmp
in
jmp
loopne
jmp
fstp
fdivr
fcom
sar
ror
int3
dec
mov
lds
mov
dec
dec
dec
mov
adc
adc
mov
inc
mov
ret
lret
xlat
rcl
aad
loope
in
jmp
out
in
out
push
icebp
icebp
cli
clc
clc
sti
clc
idiv
sti
clc
clc
cld
stc
stc
std
cli
cli
std
cli
cli
std
sti
cli
std
sti
sti
std
sti
sti
sti
sti
sti
sti
cld
sti
cld
sti
cld
cld
cld
cld
std
std
std
std
std
std
std
std
cld
cld
sti
sti
std
sti
sti
std
cli
cli
std
cli
cli
cld
stc
stc
sti
stc
stc
sti
stc
stc
sti
stc
idiv
sti
clc
idiv
sti
clc
idiv
sti
div
sti
cmc
cmc
cli
cmc
cmc
clc
hlt
hlt
clc
hlt
hlt
push
out
out
jmp
in
call
loopne
jmp
fstp
xlat
fcom
sar
ror
lret
dec
mov
lds
mov
cmp
xchg
or
or
test
test
ret
ret
lret
ror
aad
loope
in
fdivrp
call
out
in
call
icebp
cli
clc
clc
cli
div
cld
clc
clc
cld
stc
stc
std
cli
cli
cli
cli
sti
cli
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
sti
cld
cld
cld
cld
std
std
cld
cld
cld
sti
sti
sti
sti
std
cli
cli
std
cli
stc
cld
stc
stc
sti
stc
stc
sti
stc
stc
sti
stc
idiv
sti
clc
idiv
sti
clc
idiv
cli
div
sti
cmc
cmc
cli
cmc
cmc
clc
hlt
hlt
clc
hlt
hlt
push
out
out
jmp
in
call
loope
jmp
fst
xlat
call
rcl
call
int3
lret
les
mov
xor
xor
add
add
add
sahf
icebp
sarb
call
leave
enter
into
fcmovnbe
aam
loopne
in
fdivrp
call
in
in
call
lock
sti
clc
clc
sti
clc
clc
cld
stc
stc
cld
stc
stc
std
cli
cli
cli
cli
sti
cli
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
cld
std
std
cld
cld
cld
cld
cld
cld
sti
sti
std
cli
cli
cld
cli
cli
cld
cli
stc
cld
stc
stc
sti
stc
stc
sti
stc
clc
sti
clc
idiv
sti
clc
idiv
cli
div
sti
div
cli
div
clc
cmc
cmc
push
cmc
cmc
push
in
in
ljmp
jmp
loopne
jmp
fcmovnu
call
rcl
call
lret
lret
mov
mov
and
and
add
add
add
sbb
mov
sar
leave
enter
into
fcmovnbe
aam
loopne
fcos
in
fdivrp
call
in
in
out
push
lock
sti
clc
clc
sti
clc
clc
cld
cli
cli
cld
stc
stc
std
cli
cli
cli
cli
sti
sti
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
cld
std
std
cld
cld
cld
cld
sti
cld
std
sti
sti
std
cli
cli
cld
cli
cli
cld
cli
stc
cld
stc
stc
sti
stc
clc
sti
stc
clc
sti
clc
clc
sti
clc
clc
cli
div
sti
div
cli
div
clc
div
push
div
push
in
in
ljmp
jmp
jmp
fcmovnu
call
rcl
call
lret
lret
mov
mov
push
push
push
pop
add
add
cmpb
mov
sarb
aam
int
fcmovbe
sar
fcos
in
out
loop
jmp
in
in
call
out
sti
div
cld
clc
clc
std
cli
stc
cld
stc
stc
std
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
std
cld
cld
sti
sti
std
sti
sti
std
sti
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
stc
sti
stc
clc
sti
stc
clc
sti
stc
clc
cli
div
sti
clc
clc
cli
div
stc
div
clc
cmc
cmc
out
in
jmp
jmp
loop
jmp
jmp
fcmovu
fcmovnbe
aad
aad
iret
call
leave
enter
sar
mov
lods
cld
or
or
push
mov
inc
sarb
aam
int3
sar
fdivr
in
out
loop
jmp
in
in
out
push
in
in
cli
div
cld
clc
clc
std
stc
stc
std
stc
stc
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
std
cld
cld
sti
sti
sti
sti
std
sti
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
stc
sti
stc
clc
sti
stc
clc
sti
clc
clc
cli
div
sti
div
cli
div
stc
div
clc
hlt
hlt
out
jmp
jecxz
out
loop
in
fdivrp
fcos
fcmovnbe
aad
aad
iret
dec
leave
enter
sar
mov
lcall
add
add
inc
mov
lds
call
int3
lret
sar
xlat
jmp
fstp
jmp
loope
ljmp
out
jmp
cli
div
sti
stc
stc
std
stc
stc
cli
cli
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
cld
std
std
std
std
std
cld
cld
cld
cld
cld
sti
cli
cli
cld
cli
cli
cld
cli
cli
cld
cli
stc
cld
cli
stc
cld
stc
clc
cld
clc
clc
sti
clc
clc
sti
div
cld
clc
clc
cli
div
stc
div
push
hlt
hlt
in
call
jecxz
out
loope
jecxz
fcos
fcmovbe
aam
aad
into
dec
enter
rol
mov
xchg
sbb
add
add
mov
inc
mov
ret
call
int3
lret
rcl
fstp
jmp
fstp
jmp
loopne
ljmp
out
ljmp
sti
stc
stc
std
cli
cli
cli
cli
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
sti
sti
sti
cld
sti
sti
std
cli
cli
cld
cli
stc
cld
stc
stc
cld
stc
stc
cld
stc
stc
sti
stc
clc
sti
clc
clc
sti
stc
stc
stc
div
stc
div
push
repz
in
out
call
loope
jmp
fstp
fcompp
fdivr
sar
aam
int
into
mov
mov
outsb
outsb
movl
add
add
adc
mov
ret
mov
ret
lret
xlat
ror
aad
loope
in
loopne
jmp
out
out
jmp
repz
sti
cli
stc
std
cli
cli
cli
cli
cli
cli
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
sti
sti
sti
sti
sti
std
sti
cli
std
cli
cli
cld
cli
cli
cld
cli
stc
cld
cli
stc
cld
stc
stc
cld
clc
stc
cld
clc
clc
cli
clc
clc
stc
div
stc
div
push
icebp
icebp
ljmp
jmp
loopne
jmp
fstp
xlat
sar
ror
lret
dec
lds
mov
push
dec
dec
cmpsl
or
or
mov
test
sarl
dec
leave
enter
iret
fcmovnbe
aam
loopne
in
loopne
jmp
out
in
call
lock
stc
stc
cli
cli
cli
cli
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
sti
sti
std
sti
sti
std
sti
cli
std
cli
cli
cld
cli
cli
cld
cli
stc
cld
cli
stc
cld
stc
stc
cld
clc
stc
cld
clc
stc
cli
clc
clc
cli
div
cli
div
push
out
out
ljmp
jmp
jmp
fcmovnu
fst
fcom
sar
ror
leave
dec
ret
mov
mov
das
cs
add
add
sbb
mov
mov
call
iret
into
fcmovbe
sar
fcos
in
fdivrp
call
in
in
out
push
out
out
std
stc
stc
std
stc
stc
sti
cli
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
cld
std
cld
cld
cld
sti
sti
sti
std
sti
sti
std
sti
sti
cld
sti
cli
cld
cli
cli
cld
cli
stc
cld
cli
stc
cld
stc
stc
sti
clc
clc
cld
stc
clc
sti
clc
clc
cli
div
stc
div
out
jmp
jmp
loop
jmp
jmp
fcmovnu
aad
xlat
ror
call
lret
leave
ret
sar
mov
mov
adc
add
add
mov
mov
int
sar
fcompp
xlat
jmp
fstp
jmp
loope
ljmp
push
jmp
cld
div
std
stc
stc
cli
cli
sti
sti
cld
sti
std
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
sti
sti
sti
std
sti
sti
std
sti
cli
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
cld
stc
stc
sti
cli
stc
cli
clc
stc
cli
clc
clc
push
cmc
cmc
in
call
jecxz
out
loope
jecxz
fcompp
fcos
fcmovnbe
aam
aad
into
dec
enter
ret
sarb
clc
add
add
add
cmp
les
call
int
fcom
sar
fstp
jmp
jmp
loopne
ljmp
out
jmp
cmc
std
cli
sti
std
cli
cli
sti
sti
sti
sti
std
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
sti
sti
cli
std
cli
cli
std
cli
cli
std
cli
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
stc
cli
clc
clc
cli
clc
clc
push
repz
jmp
in
call
loope
jmp
fstp
fdivr
fcmovbe
sar
aam
int
int
inc
sarb
jle
jp
add
add
sbb
pop
pop
mov
mov
ret
lret
ror
aad
loope
in
fdivrp
jmp
out
in
call
icebp
std
sti
cli
std
cli
cli
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
sti
sti
sti
sti
std
sti
sti
std
sti
cli
std
sti
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
sti
stc
stc
sti
clc
clc
cli
clc
clc
push
out
out
jmp
loop
jmp
jmp
fcmovnu
fcom
sar
ror
lret
dec
lds
mov
dec
dec
dec
mov
add
add
test
mov
dec
rol
into
enter
iret
into
fcmovnbe
aam
loopne
in
call
in
in
out
push
in
in
std
stc
stc
std
cli
sti
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
sti
sti
sti
sti
sti
std
sti
sti
std
sti
cli
std
sti
cli
std
cli
cli
cld
stc
stc
std
stc
stc
sti
clc
clc
sti
clc
clc
cli
div
out
jmp
jecxz
out
loop
in
fdivrp
loope
call
ror
call
lret
lret
inc
mov
mov
and
and
add
add
jno
lret
mov
mov
int
sar
fdivr
jecxz
fdivr
out
loope
ljmp
out
ljmp
sti
sti
sti
sti
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
sti
cld
sti
std
sti
sti
std
sti
cli
std
sti
cli
std
cli
cli
cld
stc
stc
cld
stc
stc
cld
stc
stc
sti
clc
clc
sti
clc
clc
push
repz
jmp
in
jmp
loope
jmp
fstp
fcompp
fcos
fcmovbe
aam
aad
int
iret
enter
ret
sarl
cmc
or
or
cmp
aaa
lea
mov
ret
call
int3
lret
rcl
jmp
jmp
loopne
jmp
out
out
out
push
repnz
std
sti
sti
std
sti
sti
cld
cld
std
cld
std
std
std
cld
cld
cld
cld
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
std
sti
cli
sti
cli
cli
sti
stc
stc
sti
stc
stc
push
out
out
ljmp
jmp
loopne
jmp
fstp
xlat
sar
ror
int3
dec
mov
mov
mov
jge
aam
add
or
adc
adc
mov
inc
mov
sar
leave
call
iret
into
fcmovbe
aam
fcos
in
fdivrp
call
in
in
out
push
in
in
cld
cli
cli
std
sti
sti
cld
cld
cld
cld
std
cld
std
std
std
std
std
std
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
std
cli
cli
cld
cli
cli
cld
cli
cli
cli
clc
clc
stc
div
in
jmp
jecxz
out
loop
in
fdivrp
loope
fst
fcom
sar
ror
lret
mov
mov
inc
inc
inc
lcall
add
add
add
lea
mov
mov
call
into
int3
sar
fcompp
fdivr
jecxz
fdivr
out
loope
ljmp
out
jmp
hlt
sti
cld
std
sti
sti
std
std
std
cld
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
cli
cli
std
cli
cli
cld
cli
cli
sti
stc
stc
cld
stc
stc
push
icebp
icebp
ljmp
jmp
loope
jmp
fcos
fcmovnbe
aam
iret
iret
dec
leave
enter
sar
mov
mov
adc
adc
add
add
inc
mov
les
ret
call
lret
lret
ror
jmp
fcmovnu
jmp
call
in
in
call
out
std
cli
cli
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
sti
cld
sti
sti
sti
sti
sti
cli
cli
sti
cli
std
stc
stc
std
stc
stc
sti
idiv
push
jmp
jmp
loop
jmp
jmp
xlat
sar
ror
int3
dec
mov
mov
mov
mov
push
adc
adc
mov
inc
mov
sar
leave
enter
into
fcmovnbe
aam
jecxz
out
loope
ljmp
out
ljmp
cld
cld
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
sti
sti
cld
cld
sti
sti
std
cli
cli
cli
cli
push
repz
ljmp
jmp
loop
jmp
jmp
fcmovnu
aam
xlat
rcl
call
lret
lret
inc
mov
mov
inc
inc
inc
pushf
add
add
mov
inc
mov
int
sar
fstp
jmp
jmp
loopne
call
out
out
call
out
std
sti
sti
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
sti
sti
sti
sti
cli
cli
std
cli
cli
cld
stc
stc
push
jmp
ljmp
jmp
loopne
jmp
fstp
fdivr
fcmovbe
sar
aam
int
iret
leave
dec
ret
sarl
sti
adc
cmovnp
add
add
mov
inc
mov
sar
lret
aad
into
fcmovnbe
aam
loopne
fcos
in
fdivr
out
loope
ljmp
out
ljmp
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
cld
cld
cld
sti
sti
cld
sti
std
sti
sti
std
cli
cli
std
cli
cli
push
repz
jmp
in
jmp
loope
jmp
jmp
fcmovu
fst
call
rcl
call
lret
lret
mov
lds
mov
jle
js
add
add
pop
pop
pop
xor
mov
mov
call
into
int3
sar
xlat
jmp
jmp
loopne
jmp
out
out
jmp
in
cld
cld
cld
std
std
std
std
std
std
std
std
std
cld
std
cld
cld
cld
sti
sti
cld
sti
sti
sti
std
cli
cli
std
cli
cli
sti
clc
clc
out
jmp
in
call
loope
jmp
fstp
fdivr
fcmovnbe
aam
aad
into
dec
leave
enter
sar
mov
mov
sub
sub
add
add
push
scas
mov
mov
ret
lret
ror
fcmovnbe
aad
loopne
fcos
in
out
loop
ljmp
out
call
repz
std
std
std
std
std
std
std
cld
std
cld
std
cld
sti
sti
sti
sti
sti
sti
std
sti
sti
std
cli
cli
std
cli
cli
push
out
out
ljmp
jmp
loope
jmp
jmp
fcmovu
fcom
sar
ror
lret
dec
mov
mov
mov
xchg
xchg
jmp
add
and
add
add
push
push
inc
mov
scas
mov
mov
int
fcom
sar
fst
xlat
jmp
jmp
loopne
jmp
out
out
call
ljmp
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
std
sti
sti
std
sti
sti
std
sti
sti
clc
cmc
cmc
jmp
out
ljmp
jmp
jmp
xlat
fcmovbe
sar
aam
into
dec
leave
enter
sar
mov
mov
aas
cmp
add
pop
pop
mov
ret
mov
ret
leave
enter
into
fcmovnbe
aam
fcos
jecxz
out
loope
ljmp
out
call
in
cld
sti
sti
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
std
sti
sti
std
sti
sti
sti
clc
clc
out
jmp
in
call
loope
jmp
fstp
fcos
aad
xlat
rcl
call
lret
lret
mov
mov
sahf
pushf
lock
add
add
push
push
inc
mov
test
inc
mov
call
int3
lret
rcl
jmp
fcmovu
jmp
jmp
loop
jmp
in
in
call
call
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
std
sti
sti
std
sti
sti
sti
cli
cli
push
in
in
ljmp
jmp
loop
jmp
jmp
fcmovnu
fst
fcom
sar
aam
int3
dec
mov
inc
mov
mov
aas
cmp
add
push
push
push
lods
mov
mov
sar
leave
call
into
int
sar
fstp
xlat
jmp
fstp
jmp
loopne
call
in
out
jmp
jmp
std
std
std
std
std
std
std
std
std
std
std
cld
std
cld
std
std
cld
cld
std
sti
sti
std
sti
sti
std
sti
sti
cld
cli
cli
push
out
out
ljmp
jmp
loop
jmp
jmp
xlat
fcmovnbe
sar
aad
into
call
lret
lret
inc
mov
mov
xchg
xchg
nop
out
add
and
push
push
push
xor
mov
inc
mov
ret
call
lret
leave
call
ror
fcmovbe
aam
loopne
fcos
jecxz
out
loope
jmp
out
out
jmp
jmp
std
std
std
std
cld
cld
cld
std
cld
cld
std
cld
cld
std
cld
sti
std
sti
sti
cld
cli
cli
cld
sti
sti
push
icebp
icebp
jmp
in
ljmp
jmp
loopne
jmp
fstp
fcos
aad
fcom
sar
ror
lret
dec
mov
mov
mov
ljmp
sub
add
add
xor
test
mov
mov
call
int3
lret
call
rcl
aad
loopne
fcos
in
out
loope
jmp
out
in
call
jmp
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
std
cld
cld
std
sti
sti
cld
sti
cld
push
icebp
icebp
ljmp
jmp
loop
jmp
loopne
jmp
fstp
jmp
fcmovnu
aad
fcom
sar
ror
int3
dec
enter
ret
ret
mov
je
int
add
or
add
add
ja
jb
mov
mov
sar
enter
int
call
rcl
fst
jmp
fcmovu
jmp
jmp
loope
jmp
out
in
call
jmp
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
std
std
cld
std
std
cld
sti
sti
push
lock
ljmp
jmp
jecxz
jmp
loopne
jmp
fstp
fst
sar
aam
int
iret
leave
enter
ret
mov
mov
test
or
add
or
or
mov
mov
ret
leave
call
into
int
sar
fst
xlat
jmp
fcmovnu
jmp
jmp
loope
jmp
out
in
out
out
call
lock
cli
cli
cli
cld
std
std
cld
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
std
std
cli
stc
stc
push
in
in
ljmp
jmp
loop
jmp
loopne
jmp
fstp
xlat
sar
aad
into
call
lret
lret
lds
mov
pushl
xor
test
add
add
and
scas
mov
mov
ret
leave
enter
int
sar
xlat
jmp
fcmovu
jmp
fstp
jmp
loope
call
in
in
out
in
out
push
jmp
push
div
cld
cld
cld
cld
std
std
sti
cld
cld
cld
cld
cld
std
cld
cld
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
cld
cld
cld
cld
cld
sti
sti
sti
push
repz
in
call
jecxz
call
loope
jmp
jmp
fstp
fcos
fcom
sar
aad
into
call
lret
lret
mov
mov
jmp
popa
mov
dec
inc
inc
sahf
mov
mov
mov
dec
lret
aad
int
sar
fst
fcos
loop
fdivr
in
call
in
in
out
in
out
out
call
out
stc
div
sti
sti
sti
sti
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
std
std
std
std
std
std
std
std
cld
std
std
cld
std
std
cld
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
sti
sti
cld
cld
sti
cld
cld
cld
sti
sti
sti
clc
div
push
jmp
jmp
loop
jmp
jecxz
jmp
loope
jmp
jmp
fcompp
fcos
fcmovnbe
aad
fcom
sar
aam
int
ror
lret
mov
inc
mov
mov
xchg
add
add
add
mov
mov
mov
dec
leave
enter
int3
fcom
sar
fcmovnbe
aad
fcompp
fdivr
loop
in
fdivrp
out
loope
call
in
jmp
out
in
in
out
call
out
push
div
cli
cli
cli
sti
cld
sti
cld
sti
sti
cld
cld
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cld
sti
sti
sti
sti
sti
sti
sti
sti
cld
sti
sti
sti
sti
sti
sti
sti
sti
cli
cli
cli
push
cmc
cmc
push
in
in
jmp
in
call
loop
jmp
loope
jmp
jmp
fstp
jmp
fdivr
fcmovnbe
aad
xlat
rcl
call
into
int
ror
leave
dec
mov
inc
mov
mov
pushf
xchg
xchg
in
or
or
add
add
jno
insb
enter
mov
mov
ret
enter
int3
lret
call
rcl
fcmovbe
aam
fst
jmp
fcmovu
jmp
fstp
jmp
jmp
loope
jmp
jecxz
jmp
in
ljmp
out
ljmp
div
hlt
stc
idiv
stc
clc
clc
cli
cli
cli
cli
sti
sti
sti
cli
sti
cli
cli
cli
cli
cli
cli
stc
stc
stc
push
div
push
repz
out
out
in
call
jecxz
call
loope
jmp
loope
jmp
jmp
fstp
jmp
fcmovnu
fcos
fst
fcmovbe
sar
rcl
call
int
dec
leave
enter
ret
inc
sarb
mov
sahf
popf
repnz
adc
add
add
add
push
outsl
imul
mov
mov
mov
sar
mov
call
iret
into
sar
fcmovnbe
aad
fcompp
fdivr
loope
loop
fdivr
in
fdivrp
out
out
loopne
call
jecxz
jmp
loop
ljmp
in
call
ljmp
in
in
out
in
jmp
out
jmp
in
call
in
jmp
loope
jmp
loope
jmp
loopne
jmp
loopne
jmp
jmp
fstp
jmp
fcmovnu
fcos
fstp
xlat
fcmovnbe
aad
fcom
sar
aad
iret
call
int3
lret
dec
enter
mov
mov
jmp
adc
add
add
pusha
pop
pop
mov
mov
mov
mov
call
lret
ror
int3
call
rcl
sar
aad
fdivr
loopne
loop
loop
in
fdivrp
in
in
loope
out
out
loopne
out
loopne
out
loope
out
loopne
out
loopne
in
out
loopne
out
in
fdivrp
out
out
in
fdivrp
in
fdivrp
loop
fdivr
loope
fdivr
loopne
fcompp
fcos
fst
fcmovnbe
aam
sar
rcl
call
int
call
lret
int3
mov
enter
les
mov
call
push
push
inc
add
add
aas
ds
mov
scas
mov
mov
mov
dec
mov
call
int
call
rcl
fcom
sar
fcmovbe
aam
fdivr
loopne
loop
loop
fdivr
jecxz
fdivr
loop
jecxz
jecxz
fdivr
in
in
jecxz
jecxz
fdivr
jecxz
fdivr
loop
fdivr
loop
loopne
fcos
fcompp
fcos
fst
xlat
fcmovnbe
aad
sar
fcom
sar
aad
into
call
int
call
lret
int
dec
ret
ret
sarb
mov
mov
pushl
jno
pop
pop
pop
xor
add
add
sbb
xchg
ljmp
mov
ret
mov
mov
dec
mov
call
int
call
iret
into
call
rcl
sar
fcmovbe
sar
fcmovnbe
aam
fst
fst
xlat
fdivr
fdivr
fdivr
fcompp
fdivr
loopne
fdivr
loopne
fdivr
fdivr
fdivr
xlat
xlat
fst
fcmovnbe
aad
fcmovbe
aam
sar
fcom
sar
rcl
call
iret
into
call
int3
int3
call
leave
leave
dec
mov
inc
rol
les
mov
pushl
dec
inc
mov
push
push
push
xor
pop
mov
mov
mov
mov
mov
dec
mov
iret
leave
call
lret
leave
call
int
call
into
int
iret
iret
call
rcl
call
rcl
fcom
sar
sar
sar
fcmovbe
sar
fcmovbe
sar
fcmovbe
sar
fcmovbe
sar
sar
sar
fcom
sar
xlat
rcl
call
ror
call
iret
iret
call
int
call
int3
lret
call
lret
into
enter
mov
lret
inc
sarl
sarl
mov
xchg
pusha
add
add
add
add
sbb
sbb
jbe
shll
mov
mov
mov
mov
dec
ret
ret
mov
into
mov
call
lret
ror
lret
int3
lret
call
int
call
int
call
into
int3
call
int
call
int
call
int
call
int
call
int3
lret
call
int3
lret
call
lret
lret
lret
into
leave
enter
dec
mov
leave
ret
ret
ret
lds
mov
mov
mov
jmp
aaa
aaa
mov
add
sbb
add
add
and
and
je
mov
mov
mov
mov
mov
inc
sarb
leave
ret
ret
int3
mov
dec
mov
dec
mov
dec
mov
int3
mov
lret
dec
ret
sar
ret
ret
rol
lds
mov
mov
mov
mov
nop
mov
inc
ds
sub
add
add
adc
adc
dec
test
cltd
cwtl
in
mov
mov
mov
mov
mov
inc
mov
mov
inc
mov
mov
inc
sarb
les
mov
inc
mov
mov
mov
mov
mov
mov
pushl
imul
es
add
add
add
add
add
sbb
sbb
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
test
sub
sub
or
aaa
add
add
add
add
push
push
push
xor
adc
sub
inc
inc
cltd
pop
push
push
mov
outsb
insl
enter
aad
addb
mov
test
test
fdivrs
jb
gs
pusha
mov
xor
sbb
or
or
add
add
cld
add
incl
add
jmp
add
add
add
pop
cld
jg
jmp
ud0
incl
add
add
add
incl
add
cld
add
jg
cld
add
jg
clc
add
aas
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
push
add
pop
clc
add
aas
clc
add
aas
cld
add
jg
incb
add
incl
add
inc
pop
jmp
pop
cld
jg
incl
add
add
add
add
push
add
add
add
pop
cld
add
add
add
clc
add
add
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
jg
jmp
add
add
add
aas
inc
add
add
add
aas
inc
add
add
add
pop
incl
add
pop
incl
add
add
add
ud0
incl
add
add
add
pop
incb
add
add
add
pop
incb
add
add
add
add
cld
add
add
add
add
cld
add
add
add
add
clc
add
add
add
add
clc
add
add
add
add
push
push
jmp
jg
jmp
jg
jmp
aas
inc
aas
inc
aas
inc
pop
incl
add
add
pop
incl
add
add
pop
incl
add
add
ud0
incl
ud0
incl
ud0
incl
ud0
incl
pop
incb
pop
incb
pop
incb
pop
incb
add
incb
add
incb
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
cld
add
incb
add
incb
add
incb
add
incb
pop
incb
pop
incb
pop
incb
pop
incl
pop
incl
ud0
incl
ud0
incl
ud0
incl
add
add
ud0
incl
add
add
pop
incl
add
add
pop
incl
add
add
pop
inc
pop
inc
aas
jmp
aas
jmp
jg
jmp
jg
push
jg
push
clc
clc
add
add
add
add
cld
add
add
add
add
cld
add
add
add
add
incb
add
add
add
pop
incl
add
add
add
pop
incl
add
add
add
ud0
incl
add
pop
inc
add
add
add
pop
jmp
add
add
add
aas
jmp
add
add
add
jg
push
add
add
add
clc
add
add
add
incb
add
add
add
incl
add
add
pop
incl
pop
jmp
add
add
aas
push
add
add
incb
add
add
incl
clc
add
incl
add
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
scas
seto
ficoml
or
or
and
sbb
adcl
inc
in
push
fs
into
or
fistpl
or
mov
cltd
inc
in
jg
xor
mov
push
in
mov
dec
and
xor
sbbl
sbb
sbb
jp
loope
inc
test
test
ss
dec
dec
mov
ja
insl
sbb
aaa
lret
fsubrs
sbb
and
fidivs
loope
inc
pop
in
sti
test
jge
inc
cwtl
mov
push
scas
mov
add
cmpsl
cmp
mov
cli
adc
outsl
push
or
and
sbb
push
fincstp
push
mov
popf
mov
pop
repz
rcl
stos
and
pop
push
sbb
jb
sbb
or
add
hlt
add
roll
and
lret
push
jno
mov
sarb
and
and
cmp
imul
jmp
sbb
adcb
fistpll
int3
repz
cmp
xor
push
movsb
push
sbb
add
mov
shrb
and
mov
sub
inc
outsb
sti
push
jp
inc
popa
lahf
loop
sub
insb
jb
jecxz
dec
pop
mov
stc
mov
popf
loop
out
movsb
pop
jecxz
ret
loope
push
add
inc
repz
ss
mov
add
fidivs
adc
pusha
cmp
dec
gs
into
roll
push
test
mov
sbb
sub
or
icebp
mov
ja
stos
inc
push
lcall
xchg
je
fxtract
cmpsb
sub
xchg
jno
in
or
sbb
jl
dec
mov
inc
cmp
pop
rorl
inc
xor
add
mov
pop
sbb
pop
jge
xchg
es
inc
bnd
fucom
imul
fwait
dec
xor
std
mov
mov
int3
fwait
cmp
xchg
out
mov
stc
iret
in
fisttpll
stos
xchg
mov
icebp
ret
mulb
in
mov
and
xchg
xlat
jle
dec
cmp
jecxz
xor
jb
lods
inc
cmpsl
test
jbe
ret
cld
repz
fwait
adc
cli
pop
fwait
push
xchg
jo
stc
aas
ja
pushf
sbb
pop
mov
mov
or
mov
adc
push
fdiv
inc
mov
mov
mov
mov
arpl
mov
loope
test
or
scas
xchg
inc
jbe
push
ror
mov
addb
insb
iret
je
xor
jg
mov
sahf
sbbb
jge
arpl
daa
les
push
sbb
pop
popa
shlb
mov
mov
mov
je
cmp
hlt
xlat
pop
or
nop
lock
ljmp
xor
jne
dec
mov
push
mov
push
sarl
fidivl
or
lret
mov
adc
cmp
mov
clc
lds
mov
adc
adc
xchg
sub
fisubrs
aas
xlat
mov
inc
dec
mov
push
lahf
mov
adc
cmp
mov
add
or
ret
clc
sub
xchg
arpl
call
aam
mov
mov
and
jp
mov
cwtl
nop
xchg
xchg
inc
stc
rcrl
add
lods
cs
cmpb
loop
xchg
adc
pop
dec
mov
dec
test
cmp
jle
xlat
lea
inc
and
adc
loope
jle
push
repnz
stos
push
jno
mov
cmpsb
pop
lods
and
xchg
test
pusha
adc
test
inc
les
jl
push
jns
out
mov
inc
bound
rcrl
inc
ror
mov
loope
stc
clc
aaa
mov
push
mov
and
adc
ljmp
bound
xor
and
xchg
inc
and
ljmp
xlat
sub
inc
mov
test
arpl
mov
push
imul
mov
sub
sarl
or
arpl
fmul
pop
push
ret
inc
insb
andb
fs
notl
mov
loopne
shl
xchg
and
jge
fs
fadd
or
aad
imull
mov
cmpsl
xlat
or
subl
ja
pop
into
pop
xchg
jb
in
ljmp
xor
sub
dec
js
popa
cmc
inc
test
jne
and
test
and
sti
loopne
dec
xor
dec
and
sbb
sbb
enter
mov
cmc
cltd
stos
out
mov
mov
shrl
pop
pop
xor
inc
cmc
iret
push
mov
movaps
dec
lods
sti
mov
jae
rep
xor
inc
and
movl
insl
or
mov
push
into
sbb
cmp
popf
inc
mov
fisubl
fbstp
jb
je
adc
add
push
bound
mov
out
scas
or
call
rol
xlat
jl
inc
jl
or
mov
adcl
loop
inc
das
jo
ret
outsb
jae
jecxz
mov
sbbb
test
clc
inc
lods
and
insb
mov
in
fstpt
pop
sub
pop
loop
test
sbb
push
dec
dec
scas
jg
pop
xor
lods
insl
jnp
in
popf
das
test
sahf
or
mov
cmp
mov
leave
outsl
sub
ljmp
sbb
scas
repnz
sub
fwait
orb
movaps
mov
mov
les
icebp
ds
ret
addr16
jl
iret
jns
sub
mov
mov
outsb
sbb
sbbl
mov
xchg
pop
out
or
rorb
inc
or
sub
movsl
pop
sbb
dec
add
jecxz
adc
push
pop
sbb
out
ds
xchg
xchg
ret
sub
pop
and
ljmp
or
in
jle
rcrb
fprem1
jmp
out
jne
jo
orb
cmc
mov
sub
lea
in
data16
rolb
sbb
pop
mov
jo
std
popf
rorb
mov
movsl
sbb
xchg
xchg
inc
ds
imul
push
fbld
ds
jbe
cmp
or
adc
loope
aas
das
rcrb
sbb
testl
shr
push
stc
fstpt
push
out
xchg
and
inc
shlb
adc
adc
lcall
nop
add
int3
decb
cmpsb
nop
ja
loop
sarb
sub
add
mov
inc
scas
jne
add
fisubs
push
ds
add
movsb
xor
sbb
fnstsw
push
xchg
hlt
sarb
out
jno
pop
scas
fmuls
int
xorb
xchg
cmp
mov
xor
inc
mov
push
jae
test
mulb
in
add
jns
sarl
fsubrs
or
jne
test
push
out
pop
ljmp
idivb
push
or
adc
pop
sar
mov
cmp
nop
int3
xor
scas
insb
andb
push
mov
jp
mov
fsts
std
push
adc
xchg
lds
pushf
pop
pop
push
int
xlat
xchg
mov
fcmovbe
mov
xor
cmp
pushf
pop
pop
gs
jne
int
mov
xchg
shrb
sub
adc
hlt
mov
sub
cs
inc
push
push
shrb
aad
aas
xorb
fists
repz
sub
mov
outsl
mov
xchg
pop
in
pop
aaa
xor
lods
adc
in
es
add
mov
hlt
jp
cld
jno
inc
cmpl
jns
push
hlt
cld
aam
mov
cwtl
pop
mov
sub
mov
repnz
test
jge
lods
nop
sbb
sub
enter
ret
mov
ret
dec
or
adc
push
jnp
jmp
mov
jnp
dec
mov
out
daa
xchg
sbb
sbb
cmp
add
push
push
popf
cmp
clc
pop
pop
movsb
ret
pushf
int
enter
call
pop
into
outsb
adc
mov
dec
fnstenv
inc
inc
jns
int
pop
leave
adc
shrl
out
stc
imul
adc
mov
roll
or
jge
js
pop
xchg
mov
push
les
loop
cmpsl
cmpsl
inc
jmp
mov
call
aas
aad
inc
pop
sbb
hlt
into
xchg
sub
jge
mov
dec
cmpsl
repz
mov
cld
cmpsl
mov
dec
in
push
pop
push
fldt
js
pop
pop
xchg
mov
movb
and
nop
xor
pop
push
cmp
mov
clc
outsl
push
lock
fbld
push
dec
nop
add
xor
cmp
sbb
mov
fs
imul
fwait
push
mov
sbb
jo
mov
aam
shl
xchg
adc
sbb
cmp
fwait
xlat
aad
jae
pop
lcall
enter
rcrb
and
aad
scas
cli
pop
pop
rcrb
jae
and
xor
jae
bound
gs
xor
mov
or
cmpsb
repnz
add
pop
lds
push
mov
jge
xchg
shlb
push
push
arpl
cwtl
xor
sahf
ljmp
mov
int
andb
test
enter
ds
adc
and
leave
adc
lods
popa
movsl
sbb
lods
fldenv
mov
imul
cmp
and
xor
std
mov
jmp
push
aad
addr16
int
fbld
adc
jns
jne
xlat
inc
bound
idivl
out
cmp
push
cmp
dec
pop
cmp
stos
js,pn
ret
nop
repz
mov
cli
test
or
lret
mov
test
out
adc
pop
test
mov
and
push
scas
push
aas
sbb
into
insl
cld
aas
add
dec
bound
rep
outsb
xchg
repz
mov
cmpsb
jg
jbe
outsl
shlb
dec
xchg
and
add
ret
sub
les
cmp
mov
adc
loop
dec
fnstcw
inc
or
mov
mov
mov
dec
lds
jne
push
adc
lds
xchg
stos
adcb
lea
cmpsl
iret
mov
xor
sbb
test
inc
mov
ret
xchg
dec
stc
mov
push
loop
cld
inc
lcall
add
push
xor
sbb
jne
das
pop
aam
xchg
dec
mov
lock
jmp
cmp
xchg
jnp
in
rcll
jnp
aam
dec
outsl
sub
cmpsb
ret
pop
add
pop
mov
push
ss
lcall
lret
xchg
mov
ror
adc
test
lret
mov
in
inc
popa
fnstcw
xchg
int3
push
cmp
add
mov
out
xor
cmp
mov
mov
mov
jns
ficoml
lret
dec
inc
and
add
push
pop
imul
pop
cmpsb
jo
jne
out
les
rclb
sub
orl
dec
dec
lods
lock
aas
mov
pop
cmp
xchg
xchg
in
movsb
xchg
push
push
jecxz
mov
mov
cmpsb
int
or
and
in
jmp
js
hlt
jp
or
testl
inc
daa
ja
adc
and
adc
sub
pop
js
adc
div
xchg
sub
add
inc
shrl
or
and
cmpsb
icebp
dec
sar
jmp
imul
cmc
stos
repnz
ret
hlt
aam
ds
xchg
dec
sti
movsl
mov
xor
lahf
adc
hlt
push
sbb
jno
add
fwait
lock
adc
imul
inc
pop
cmpsl
aam
jae
in
jbe
xor
sbb
push
jle
pop
mov
jl
cmp
stos
cmpsl
mov
cmp
and
cmpsl
mov
jo
or
xchg
mov
fcmovb
mul
gs
mov
adc
vandps
mov
and
xlat
add
adc
in
mov
dec
dec
and
loop
xchg
mov
mov
fs
mov
adc
dec
ror
stos
in
xorb
adc
ret
jns
or
mov
lahf
xor
and
or
scas
shll
mov
sbb
aaa
fwait
ret
mov
jnp
mov
outsl
mov
cmp
mov
xor
mov
cmc
mov
xor
jecxz
out
pop
add
cwtl
cs
cmp
mov
adc
mov
cltd
cmp
inc
xor
cmp
jg
subl
lahf
into
pop
and
mov
inc
out
sub
or
ret
xchg
jbe
sti
mov
pop
sbb
test
jne
aam
pop
int
jbe
push
jecxz
mov
pop
mov
add
fwait
into
mov
mov
mov
jmp
lods
inc
mov
mov
pop
pop
lock
scas
xchg
push
rorl
gs
mov
mov
cld
or
push
add
movsl
ss
and
mov
out
clc
pop
call
lcall
cmp
adc
btsl
push
dec
stos
push
int
push
repz
push
dec
mov
clc
repnz
testl
adc
loop
mov
mov
int3
jno
test
gs
sbb
push
push
adc
dec
dec
lock
js
je
lcall
xchg
test
out
push
arpl
jle
int3
cli
or
nop
cmp
mov
jbe
mov
rorb
jge
cmp
and
fdivs
mov
fcmovbe
dec
ss
int3
push
mov
mov
pop
inc
sub
lret
cmpsl
movsb
adc
add
add
cli
cwtl
or
push
mov
loop
inc
inc
ss
outsl
lds
jl
insb
push
stos
xchg
fidivrl
inc
push
sub
pop
int
mov
scas
dec
sarl
push
cmc
mov
inc
in
jne
repz
sahf
cmp
lock
sahf
shrl
loopne
outsb
sub
fsub
or
les
and
mov
mov
adc
mov
filds
cmpsb
dec
sub
mov
cmpsl
sub
mov
inc
mov
jns
lcall
jo
clc
xlat
mov
inc
mov
popa
xchg
sub
add
dec
out
adc
mov
xor
jl
and
jo
les
inc
pop
push
fnstenv
clc
stos
lods
push
ret
stos
ret
inc
test
mov
xor
xchg
mov
lods
cmovs
mov
push
fisttps
pop
pusha
push
scas
and
xchg
jmp
test
pop
rolb
jnp
shlb
loope
cmp
fldt
leave
mov
add
xorb
fstpl
std
cmp
andb
pusha
mov
test
jne
xchg
mov
arpl
dec
lock
pop
jmp
pop
loopne
mov
sbb
and
fs
mov
mov
xor
xchg
loopne
orb
divl
loope
pop
call
dec
xchg
jecxz
xchg
inc
test
jmp
call
jo
adc
stc
es
xchg
loop
int3
cmc
xor
dec
inc
or
xchg
iret
cmc
dec
jnp
icebp
les
movsb
lock
cmp
inc
push
dec
jge
pop
xor
js
sbb
cs
mov
aaa
inc
dec
lahf
lahf
adc
cmp
sub
mov
and
lret
adc
sub
fdivrl
adc
outsb
das
mov
in
adc
ja
out
fildll
ds
testl
push
xchg
das
fisubl
push
sti
shr
outsl
sub
dec
leave
inc
stos
sbb
sti
inc
cmc
dec
sahf
mov
bound
jae
sbb
dec
pop
jg
aas
adcb
hlt
adc
cwtl
fadds
jae
cmp
cmp
fmull
cltd
inc
xchg
sub
sbb
fidivl
cli
mov
popa
cmp
xor
inc
sub
or
andl
push
mov
sub
fs
call
xchg
orl
fmul
cmpsl
sbb
sub
sti
fimuls
xor
push
dec
out
mov
cli
lcall
aaa
lret
inc
mov
cmp
stos
adc
dec
sbb
dec
fs
fs
xchg
ja
daa
push
cmp
mov
cmp
inc
imul
dec
fistpll
out
mov
shrl
pop
out
dec
fwait
mov
lret
ss
push
jno
mov
or
cli
push
movsl
insb
xchg
dec
iret
dec
call
ljmp
or
repnz
mov
jp
loope
aam
sbb
enter
inc
push
add
fs
fidivs
sbb
out
sbb
mov
mov
xchg
xchg
sub
mov
rcll
pop
int3
jne
fsubrl
lock
mov
pop
cs
and
jl
lea
jecxz
mov
lods
mov
int
ds
lcall
fistpll
mov
and
inc
fwait
data16
clc
in
sbb
sub
pop
sbb
jl
cld
loope
or
in
sbb
sbbb
or
lds
outsb
mov
adc
int3
push
hlt
roll
ljmp
popl
shll
pop
adc
pop
push
daa
ret
xchg
mov
imul
jbe
adc
cld
pop
mov
push
inc
lcall
pop
insl
testl
notl
cmp
ret
xchg
jmp
lret
das
mov
xchg
stos
mov
insb
in
mov
cli
sti
stc
fisttps
mov
loopne
dec
cld
mov
push
or
and
movsl
pop
push
int
sub
lahf
in
in
enter
sbb
lret
repz
xchg
popa
push
and
and
push
jl
aam
sar
mov
shll
leave
xor
repnz
and
cmpsl
mov
push
loop
sbb
adc
and
outsb
stos
dec
and
cmp
jle
lea
cli
fmul
mov
sbb
neg
out
loop
stos
xor
pop
daa
mov
inc
movsl
movsb
call
cmp
push
call
and
dec
je
mov
addr16
mov
adc
xchg
xchg
aad
sbb
ret
pop
xchg
mov
jno
push
jge
in
jae,pn
in
mov
mov
loopne
xchg
pop
mov
cmpsb
test
xchg
sub
xor
jo
dec
add
arpl
repz
std
push
mov
xchg
call
sub
ficoms
mov
sub
addb
jecxz
fucom
and
sub
push
repnz
pop
mov
add
add
outsl
mov
inc
enter
and
dec
lds
fs
test
loope
xchg
lret
sbbl
mov
subl
clc
mov
aaa
notl
mov
or
fldt
mov
lahf
adc
mov
subb
push
cwtl
int
xchg
pop
sahf
int3
or
jecxz
inc
push
push
aas
pop
jge
sbb
sub
sub
fwait
jg
aas
loope
shlb
xor
int
sbbl
cmp
loop
adc
out
inc
data16
and
lods
inc
insl
push
sbb
sbb
popa
arpl
mov
inc
lods
push
test
jbe
or
sahf
inc
fcomi
sbb
push
inc
cld
push
pushf
test
lret
pop
pop
push
loope
mov
cmp
dec
into
dec
insl
or
popl
sbb
jmp
and
call
idivl
push
in
cmp
out
lock
dec
pop
sub
ret
movsl
mov
ror
and
add
cwtl
sarl
stos
and
adcl
sbb
loop
lcall
pushf
xchg
sub
cld
mov
call
rclb
jmp
addr16
adc
scas
xor
fildll
lds
inc
jns
xchg
sbb
xlat
fcmovnu
jb
dec
mov
or
pop
dec
mov
mov
xchg
sbb
inc
sti
jae
dec
or
mov
repz
ror
scas
pop
ljmp
push
inc
cmp
inc
or
cmp
and
and
and
jg
or
outsb
scas
ficoms
push
jb
repz
fcompl
ret
ret
test
inc
lock
stos
push
add
pop
cld
sub
addr16
outsl
fidivs
adc
aad
and
adc
nop
loope
popa
filds
test
inc
rcrl
je
add
mov
adc
insl
xchg
subb
jle
lock
or
mov
int3
jnp
cld
arpl
xor
dec
ljmp
call
int3
mov
sub
pop
xchg
add
sub
jge
cs
cmp
je
lock
aam
push
inc
loopne
dec
in
add
sbb
adc
mov
jae
lock
pop
inc
pop
std
scas
pop
dec
movsb
xor
int
outsb
nop
jno
xorb
outsl
nop
cs
inc
loopne
sbb
cmp
xchg
les
enter
mov
das
cmp
push
fildll
pop
leave
sbb
jno
jns
sbb
rclb
pop
jb
ss
fstps
pop
lock
cwtl
pop
mov
pop
adc
test
sub
fisttps
adc
xchg
imul
or
jnp
rorb
rcrb
jnp
mov
mov
cmpsl
mov
gs
jp
shll
cmp
ret
fisttps
sbb
mov
and
in
rcrl
lock
push
rclb
fmull
adc
cmp
or
aad
ret
aad
iret
in
aam
incl
mov
pop
fs
leave
jmp
pop
mov
xor
mov
add
jle
insl
insb
adc
push
into
xchg
sbbb
out
dec
dec
xchg
mov
ja
fisttpl
notl
adc
addr16
mov
mov
insl
lret
jge
mov
sbb
mov
lcall
lcall
fmul
ja
out
adc
sahf
repnz
xchg
psubq
pop
fs
push
mov
loope,pn
add
js
pop
push
int3
loope
out
mov
das
ds
aas
je
push
dec
and
mov
in
daa
push
inc
lret
insl
dec
cmpsl
loopne
scas
push
fwait
mov
mov
mov
pop
cmp
popl
lods
and
add
pop
pop
mov
es
cmp
and
inc
loop
mov
push
sbb
add
inc
mov
into
lock
xchg
push
mov
mov
pop
pop
sub
xlat
movl
loopne
fnsave
orb
sbb
cltd
sub
jne
sbb
add
and
enter
inc
push
leave
pushf
mov
mov
sub
inc
mov
push
sbb
cmp
out
iret
sub
popf
add
mov
decl
push
push
lahf
clc
mov
push
pop
push
jecxz
fbld
jmp
dec
cs
loop
push
pop
dec
scas
jno
or
fisubrs
jl
lahf
inc
sub
add
push
test
or
xor
pop
lock
sbb
pop
xor
popf
jmp
scas
and
mov
mov
mov
fwait
mov
adc
xor
push
xchg
sub
push
pop
ret
call
out
jg
jns
cmp
mov
xchg
rcrb
or
jbe
mov
adcl
fbld
mov
jl
xchg
mov
inc
mov
out
clc
insb
adc
mov
outsl
and
lods
dec
outsb
jb
pop
xor
jno
insb
jno
outsb
jecxz
dec
and
jns
mov
hlt
inc
adc
out
lods
mov
mov
push
movsb
sahf
daa
pusha
pop
mov
je
xchg
cld
and
fs
add
jbe
pop
or
xor
loope
mov
push
mov
rorb
mov
fwait
movsl
ja
das
bound
fwait
cmpsb
xchg
mov
mov
call
adc
addb
xchg
jne
aas
daa
cmc
sub
dec
jb
inc
je
dec
inc
mov
mov
push
pop
stos
mov
dec
pop
mov
pop
fstps
popa
fadd
and
cmpsl
xchg
sbb
pop
and
inc
cld
aad
adc
fdivrs
jnp
sub
xchg
in
push
pop
addr16
in
inc
sarl
sti
or
popf
xchg
shlb
add
rcll
mov
dec
jbe
push
sub
mov
dec
adc
or
into
dec
outsl
push
add
xor
add
mov
es
sub
daa
les
imul
mov
cmpsb
dec
scas
in
mov
das
je
daa
call
push
test
cmp
fsts
outsl
shll
xor
pop
cmc
sbb
xor
and
daa
mov
rclb
out
xchg
enter
cmp
imul
inc
sti
push
loope
lods
ljmp
push
shr
jnp
fidivs
test
mov
dec
pop
cmp
dec
mov
cs
adc
ret
lcall
stos
xchg
out
jnp
cmp
pop
hlt
test
push
stos
sbb
mov
mov
dec
adc
test
or
arpl
fmull
fstps
loopne
sub
shr
xchg
ret
cmpsl
mov
push
xorb
rcr
ficompl
fs
fcoms
xor
loope
das
or
shll
outsl
mov
sbb
jl
outsb
pop
ds
mov
fxch
into
nop
insl
loopne
in
fdivrp
lret
xlat
popa
lret
testb
cmpsl
push
fistps
es
stos
aam
adc
jmp
fnstsw
jnp
pop
cltd
gs
enter
sbb
mov
iret
iret
adc
lods
stos
test
mov
scas
xchg
icebp
mov
mov
jnp
pushw
aaa
aam
aas
jbe
in
cmc
add
jne
lds
mov
setne
test
std
in
add
inc
pop
in
or
stos
punpcklbw
jae
pop
inc
mov
mov
dec
fmull
rcll
add
sub
xchg
pop
jne
pop
test
xchg
jl
cs
jno
xor
fldcw
mov
or
gs
shlb
pop
push
and
daa
xchg
sbb
imul
sub
fisubrs
subl
pop
rcrl
roll
loop
pop
jl
in
mov
mov
jae
cmp
test
jp
test
int3
pop
nop
jo
aad
and
mov
aam
lods
fucomi
pop
rolb
scas
sbb
ja
jbe
lock
cmp
sbb
and
or
jo
nop
sti
repz
daa
js
pop
rol
mov
sarb
adc
xchg
sti
dec
rorb
in
xchg
mov
call
xchg
xchg
ret
push
dec
cltd
or
adc
adc
inc
lret
mov
in
stc
jmp
cmpsb
ja
je
cmp
jbe
stos
mov
lods
rclb
negl
arpl
push
jle
fstpl
jmp
mov
notb
push
or
dec
aad
ror
data16
popa
movsb
xchg
jo
icebp
cmp
sub
bound
leave
adc
jns
jbe
into
mov
loope
mov
add
xchg
dec
cmpl
fwait
pop
sbb
in
inc
adc
dec
aam
fcom
pop
scas
or
sbb
adc
sbb
sbb
xor
dec
jb
repnz
mov
xchg
pop
ret
jmp
inc
stos
or
xchg
scas
xchg
jae
inc
fdivr
jl
mov
insb
arpl
into
scas
test
fs
jbe
mov
outsl
out
clc
lret
mov
sbb
sub
fstpt
fs
dec
ds
mov
into
adc
inc
sub
inc
imul
int
cmp
sbbl
mov
sub
fdivrs
xchg
or
push
jp
mov
jge
pop
add
xchg
lods
push
roll
inc
mov
sbb
inc
mov
into
jns
in
push
jb
adc
filds
std
cmc
xchg
ret
das
loope
mov
out
cs
or
push
mov
cli
sub
fwait
xor
mov
shlb
sub
mov
aaa
sub
fs
and
call
xor
lods
loopne
sub
ja
cmpsb
sub
sub
push
mov
test
xor
mov
mov
fstps
mov
add
push
imul
dec
out
adc
fidivrl
xchg
mov
pop
xor
dec
mov
mov
pop
and
jb
pushf
les
pop
inc
sbb
push
lds
icebp
sbb
dec
outsb
aaa
xchg
push
test
jb
fisttpl
mov
adc
jno
push
rcrb
jle
and
pop
mov
xor
cltd
sub
insb
jb
lcall
or
push
decl
popf
fwait
cs
stos
lods
lods
dec
stos
push
xor
shl
addr16
les
ja,pn
subb
mov
js
sub
cmc
inc
mov
xlat
jecxz
and
xlat
fs
or
pop
test
ljmp
cmp
xor
push
rcrl
ds
cmc
dec
scas
test
mov
aas
rol
das
xor
mov
xlat
int
pop
sbb
push
bnd
ja
mov
lods
fwait
es
lock
push
mov
xchg
mov
cmp
dec
mov
xor
fwait
loope
lret
ja
cmp
dec
and
mov
scas
xchg
popf
cmp
adc
bound
xor
leave
adc
inc
insb
lea
insb
sub
loopne
dec
cmp
xchg
stos
sahf
fsubrs
adc
outsl
xor
cmpb
inc
shrb
or
mov
pushf
mov
out
shlb
sub
pop
test
push
mov
push
add
push
in
pop
cmp
xor
dec
mov
or
icebp
cmp
inc
into
inc
and
test
fsub
xchg
cltd
orb
sahf
cwtl
pop
leave
adc
cmc
sbb
cmp
or
jne
jmp
mov
mov
inc
xchg
push
jecxz
xchg
jmp
or
sbb
jmp
xor
jmp
imul
mov
sub
lret
cmp
hlt
dec
call
cwtl
push
je
lods
push
call
ljmp
js
or
loop
popa
sahf
xchg
clc
jne
inc
mov
xchg
cmpsl
cli
popa
cmp
les
cs
imul
xchg
sbb
andl
shl
mov
iret
mov
in
mov
xor
adc
xor
or
inc
cmp
inc
movl
mov
outsb
rorl
inc
dec
stc
ret
ljmp
cmpsl
loope
sbb
andl
inc
dec
lods
mov
jmp
fnstenv
jo
aas
inc
or
outsl
fistpl
mov
stos
in
xor
dec
int3
xor
or
pop
out
pop
repnz
loop
pop
inc
ror
mov
sbb
jl
mov
pop
adc
xor
mov
xchg
pop
sub
fstpl
inc
mov
in
inc
mov
adc
lods
dec
mov
pop
xor
int3
mov
mov
add
lret
pushf
sahf
lret
pop
rorl
out
pop
lahf
pop
mov
repnz
repz
jge
pop
or
testl
pushf
daa
xchg
popf
pop
add
xchg
je
sbb
jmp
cmpsl
sarb
loopne
notb
sbb
add
cmp
jno
mov
inc
dec
sbb
adc
jg
add
sub
jecxz
les
push
mov
mov
pop
push
loop
cmp
int3
mov
mov
aaa
pop
outsb
jno
fbstp
jnp
push
xchg
imul
mov
loope
das
inc
orb
lock
jns
pop
xorb
xor
push
jp
inc
xlat
movsb
scas
mov
pusha
sub
lret
negl
rolb
test
xchg
imul
bound
js
imul
add
add
or
sub
adc
test
jge
mov
push
hlt
cmp
inc
mov
imul
or
dec
jo
xor
push
clc
jae
mov
jp
pop
into
and
pushf
sbbb
mov
fincstp
out
bound
stos
jb
ret
xchg
lea
out
xor
and
mov
adc
jle
fstpl
dec
nop
push
ljmp
pop
orb
or
ja
dec
and
xchg
push
subb
test
lds
push
xor
sub
adc
mov
add
stos
mov
je
or
mov
and
dec
roll
or
inc
mov
es
push
aaa
jne
lret
sti
jle
push
adc
xchg
dec
mov
jno
fsub
scas
shrb
push
jb
or
and
lds
enter
or
pop
aad
ja
repz
xor
out
bound
lret
lds
andb
call
inc
test
inc
int3
and
icebp
inc
frstor
test
daa
insl
js
push
test
test
in
imul
dec
or
fcmove
mov
sbb
pop
shl
jb
shrb
popa
mov
into
or
lds
inc
xchg
xchg
pop
sbb
int3
push
fsubrp
leave
cltd
push
xlat
clc
es
xchg
dec
xchg
push
std
adcb
push
bound
adc
popa
lret
mov
adc
lahf
inc
inc
or
mov
sbb
and
out
pushf
xchg
or
xchg
xor
lds
ficompl
mov
movsb
push
sarl
mov
cvttps2pi
sti
push
xchg
dec
pop
jle
sub
iret
jmp
lret
aas
push
mov
jle
cmc
mov
ret
inc
rorb
sbb
lahf
mov
dec
sbb
sbb
push
sbb
pop
mov
fildl
je
jb
pop
jbe
cmc
push
mov
xor
and
mov
lods
sbb
jecxz
mov
pop
pop
mov
movb
dec
nop
iret
pop
inc
xchg
xchg
cmpsl
imul
cmp
cld
xchg
adc
cld
cld
pusha
sbb
divl
cs
sahf
xchg
sti
adc
in
ja
mov
sbb
or
clc
pop
pusha
sub
gs
in
ds
imul
cld
lods
or
mov
lea
push
sub
inc
aam
iret
pop
fcmovne
inc
pop
sbb
or
jnp
jo
fisttpll
ret
mov
scas
mov
mov
pop
mov
rcl
sbb
in
hlt
into
rol
popf
fs
ss
aaa
enter
pop
jecxz
ret
mov
test
stc
clc
lods
mov
test
stos
sbb
mov
bound
insb
lods
jle
fdivl
cmpb
in
cmp
shll
sbb
mov
gs
jns
pop
jp
repz
mov
lea
cli
mov
xor
inc
pop
dec
push
cs
lea
setns
add
push
fcoms
subb
rorb
orl
call
mov
notb
loope
or
xchg
divl
fstpl
cmpl
shrb
lea
in
and
xor
clc
sbb
sub
add
pop
mov
jbe
adc
pushf
int
aad
loop
cmp
fdivrl
into
repz
mov
lods
mov
aas
push
or
xchg
mov
std
jle
cmpsb
fidivs
notl
push
loop
ja
stos
mov
lret
dec
dec
je
into
mov
or
mov
adc
inc
xor
mov
inc
push
dec
cltd
icebp
cmpxchg
dec
call
data16
jo
fs
inc
decl
xchg
jle
imul
xor
js
jne
insl
add
mov
outsb
sub
inc
mov
mov
loop
dec
lock
test
push
incl
fldenv
sahf
jne
jns,pn
rolb
mov
cmp
lods
pop
add
jmp
aad
inc
xchg
testl
dec
shlb
jo
sub
mov
fisttpl
fmuls
cmpps
outsl
push
lds
outsb
call
mov
mov
unpcklps
scas
out
and
pusha
ficomps
mov
ret
lret
jmp
fldt
pop
int
fcmovnbe
mov
or
mov
test
int3
xorl
mov
push
cltd
mov
push
insl
test
mov
nop
jle
mov
inc
gs
movsb
lcall
lret
dec
repz
add
imul
or
stos
fimuls
push
mov
jecxz
sbb
lods
test
mov
dec
frstor
popa
in
test
push
lds
push
out
test
cmp
jmp
xor
push
shufps
dec
pop
fildl
mov
pop
fmul
clc
mov
icebp
xchg
inc
outsb
pop
lcall
dec
fbstp
mov
stos
das
lea
push
mov
jl
pusha
fcmove
stos
xor
mov
and
icebp
push
push
add
xchg
cmp
movsb
jns
lock
mov
dec
insl
loopne
mov
loopne
insl
xor
add
pop
shlb
loope
lahf
sbb
and
adcl
mov
cmp
filds
push
dec
rclb
adc
mov
out
cli
push
dec
fsubrl
pusha
add
mov
inc
mov
push
and
push
lea
shl
mov
lret
inc
test
scas
dec
mov
in
push
sub
fdivrs
nop
cmp
mov
pop
fwait
or
addl
cld
mov
iret
ljmp
lods
xor
pop
andl
arpl
push
pop
push
jecxz
enter
inc
ret
jecxz
xor
add
imul
xchg
lock
push
dec
jne
push
lret
adc
mov
xchg
imul
movsb
mov
loope
mov
adc
and
hlt
cmp
jnp
push
loop
xorb
les
sbb
jmpw
push
dec
leave
ret
call
rorb
pop
cld
push
lods
mov
dec
mov
pusha
loopne
sub
insl
sarb
test
push
mov
mov
push
xchg
ja
pop
cltd
dec
and
sub
cmp
les
insb
lds
call
arpl
bound
sbbb
adc
mov
cwtl
mov
stos
push
jmp
sub
cmpsb
mov
cmp
pop
jo
test
subl
repnz
sub
insb
sahf
scas
push
or
fwait
outsl
xor
fdiv
jb
cmp
sbb
repz
xorl
push
cmpsb
les
push
adc
jle
sbb
pop
or
or
and
andl
or
ret
fnsave
imul
sbb
add
cmp
sub
xchg
fcoml
push
jge
lret
mov
ds
jmp
mov
jle
jb
gs
xchg
inc
sub
pop
test
sbb
pop
lock
mull
sarl
aad
fildl
ds
push
mov
int3
xchg
xor
scas
jg
les
mov
lret
jle
outsb
negl
out
push
pop
enter
iret
dec
in
and
jno
push
pusha
loopne
ffreep
jbe
jle
xlat
xchg
fisttpll
movsb
mov
xchg
or
cmp
dec
xor
leave
dec
mov
pop
test
out
jle
int
ds
out
mov
xor
stc
ds
add
xor
mov
jne
ss
sar
mov
push
push
xor
jle
push
scas
inc
aam
imul
mov
jbe
in
insl
xor
clc
scas
push
pop
inc
and
sub
mov
pop
mov
sbb
jno
jmp
orl
lcall
add
repz
sub
stos
sub
add
adc
push
scas
mov
add
inc
dec
cmc
push
popf
sbbl
in
bound
xchg
pushf
inc
pop
dec
mov
leave
xor
mov
call
add
xor
mov
gs
mov
cmc
inc
lods
xchg
ss
xchg
add
dec
orb
sub
ds
jbe
inc
sub
sahf
inc
roll
repnz
inc
mov
adc
repz
inc
jl
bound
lret
push
shrb
sub
in
stos
adc
insl
das
adc
mov
inc
cmp
mov
scas
outsb
rcll
jns
ret
jne
scas
jp
jle
add
jbe
dec
or
jl
cmp
mov
stos
test
or
sbb
ljmp
test
test
js
inc
daa
sub
lods
fildl
adc
test
loopne
jbe
or
ror
sub
adc
dec
stc
into
clc
pop
cmp
in
sub
or
dec
jmp
test
js
lds
scas
out
add
or
enter
push
mov
pop
dec
jg
cmp
ja
cmpl
xor
jle
outsl
cmc
sub
cmc
mov
jns
insl
sub
pop
decl
adc
ds
das
dec
adc
jge
push
and
stos
dec
loopne
test
or
xor
aad
xchg
mov
das
pop
and
scas
pop
or
inc
aam
add
scas
into
xor
jbe
rcrl
push
cs
loopne
movsl
or
and
cmp
pop
in
test
push
and
loope
push
cmp
cmp
sbb
jecxz
and
repnz
sbb
icebp
pop
jo
jp
icebp
xor
xchg
mov
sub
inc
or
test
dec
inc
and
stos
iret
xchg
into
sub
out
ret
xchg
xchg
adc
jecxz
js
lods
push
test
mov
sbb
xor
fstl
aad
mov
pop
test
outsl
hlt
adc
data16
pop
mov
outsl
lret
out
pop
jns
xor
xor
push
adc
mov
mov
mov
cwtl
mov
jnp
fs
inc
andb
mov
sahf
movsb
fiaddl
sub
mov
push
push
hlt
mov
pop
cmpsl
mov
das
cld
sbb
or
jo
aaa
call
jp
push
std
call
mov
psubsb
sbb
or
mov
and
pop
outsl
adc
pushf
dec
sti
test
sub
movsb
pop
sbb
cmp
sahf
mov
and
mulb
enter
sti
mov
test
or
cmp
cwtl
jg,pn
sbbl
push
ds
ljmp
out
xchg
xor
movsl
insb
pop
pusha
push
mov
fistpll
or
lret
aam
sbb
mov
mov
push
xchg
outsl
test
pop
and
ds
stc
popa
stos
ja
pop
divb
cld
add
mov
aad
dec
loop
sbb
pop
cmpsl
xchg
sub
jle
inc
add
jle
pusha
jns
popf
cld
mov
hlt
inc
bswap
mov
jbe
fidivl
inc
jle
loop
xor
std
xchg
mov
icebp
pminub
data16
js
xor
lods
push
in
lret
push
lea
subb
push
pop
js
or
adc
pop
test
stos
mov
mov
lcall
pop
push
cmpsb
mov
jmp
push
call
add
sahf
pop
inc
jns
lea
jg
lods
add
faddl
jl
pop
jge
daa
xchg
mov
mov
xchg
mov
pushf
scas
repz
in
pop
mov
mov
jmp
int3
add
xchg
sub
ret
fisubs
push
loop
dec
inc
std
xchg
or
jb
mov
mov
dec
popa
mov
adc
xchg
int
cld
icebp
xor
pop
sbb
xchg
mov
jns
hlt
scas
fisubrl
ss
pop
iret
stos
add
xlat
repnz
in
bound
shr
mov
ret
out
mov
popl
jp
cmpsl
mov
inc
pop
cmpsl
and
bnd
fwait
xchg
inc
dec
inc
xchg
fcom
mov
pop
xchg
xor
das
adc
cmc
dec
inc
sub
jmp
pop
xor
mov
add
inc
fdivrl
fstpt
daa
sahf
popa
test
sar
add
iret
in
pop
add
fs
dec
dec
imul
stc
push
scas
xor
popl
or
adc
fcoml
sbb
mov
xor
jge
add
aad
dec
lods
in
and
xchg
mov
pop
test
sbb
mov
ljmp
mov
test
ret
pop
xor
mov
fisttps
pop
gs
hlt
andb
sub
xlat
pop
push
iret
and
pop
test
popf
cmp
xchg
cmp
adc
repz
bound
ret
sub
into
pop
mov
ja
mov
mov
loop
cmp
or
push
xchg
ljmp
scas
add
btc
cmp
cltd
aas
mov
daa
push
pushf
mov
loopne
out
sbb
out
pop
mov
lock
mov
xchg
mov
sbb
sub
clc
and
pop
mov
int
loop
dec
cld
je
call
adc
loop
ljmp
icebp
jg
fsts
or
push
jno
xlat
repnz
bnd
out
cmpb
mov
jo
stos
movsb
xorb
jb
call
out
ljmp
sub
push
xlat
lahf
pop
lcall
bound
andl
and
xchg
dec
xchg
cmp
in
popa
sarl
jno
dec
xor
mov
sahf
lret
sub
jmp
push
sti
je
jmp
popf
mov
jmp
jne
mov
dec
out
std
dec
sbb
add
jbe
mov
mov
movsl
sbb
gs
cwtl
sub
push
outsb
xor
lret
es
out
mov
mov
inc
add
fcomi
cmp
dec
mov
xchg
popa
or
popa
pop
mov
push
jl
lea
jl
or
jmp
pop
mov
cmp
jge
int3
mov
xor
fprem
cmc
loopne
lcall
cld
sbb
rorl
cmc
push
mov
or
add
sub
jl
dec
out
mov
cmp
adc
mov
xor
mov
dec
jae
cmp
cmc
ja
sbb
bnd
jne
mov
cmp
dec
inc
xchg
jl
hlt
cmp
cmp
sub
push
fmull
ss
mov
adc
int
orl
lds
nop
mov
sbb
shlb
out
fnsave
sahf
mov
lods
pop
imul
lea
add
sbb
xchg
into
and
in
add
pop
jns
adc
add
aas
movsl
xorl
inc
jno
xchg
or
lahf
and
xchg
dec
bound
jne
jo
cmp
hlt
push
sub
xchg
arpl
fidivs
test
add
out
xchg
or
sbb
lcall
repnz
rcl
test
int
or
mov
mov
nop
cmp
call
enter
jecxz
in
inc
xor
mov
mov
mov
xor
or
subb
xchg
inc
icebp
rcrb
cmp
mov
jecxz
xor
add
icebp
jo
shrb
mov
ss
mov
cli
pop
inc
cmc
push
lret
mov
sbb
int
lods
mov
clc
retw
xchg
out
aam
ds
xchg
data16
xorl
dec
push
loope
push
or
bound
mov
xor
and
sub
xor
xchg
mov
test
mov
push
xchg
aam
inc
imul
xor
mov
cmp
dec
out
jo
mov
jbe
out
inc
xor
cmp
cwtl
loop
fs
sub
mov
int
adc
adc
mov
repz
iret
jp
xchg
loopne
imul
aaa
add
sub
lret
push
push
shlb
std
jle
inc
push
scas
inc
fisttpll
and
mov
fcomps
add
cltd
jp
add
ret
enter
xor
push
add
test
and
ljmp
dec
dec
push
xor
mov
xrelease
scas
movl
andl
icebp
repz
pop
mov
ret
pop
add
data16
xlat
add
in
scas
mov
adc
je
mov
cmp
mov
fisubrl
out
push
xor
jl
xor
pusha
dec
add
push
movsb
aad
jnp
into
push
mov
jmp
add
mov
cmp
jecxz
jno
xor
lock
inc
cmp
in
fstl
clc
outsl
mov
out
lcall
add
cwtl
stos
and
xor
out
pop
mov
lock
mov
inc
inc
fs
lret
pop
rcll
bound
dec
cmp
lods
and
lret
cwtl
jge
arpl
sbb
inc
dec
xor
push
jbe
jl
fdivrs
adc
insl
into
das
lret
or
out
xor
push
call
or
or
sub
or
out
repnz
cmpsl
mov
or
ds
int3
mov
sub
cmpsl
je
sbb
call
mov
lods
pusha
mov
or
cmp
dec
pop
pop
into
xor
fwait
stc
ret
jl
xchg
push
add
cmpb
ja
inc
xor
push
sbb
pop
dec
add
test
es
sbb
cmp
dec
popa
cli
pop
push
sbb
sub
outsl
pushf
cs
mov
lods
and
sti
cmp
sbb
pop
mov
add
mov
dec
cltd
pop
pop
mov
stos
out
das
std
mov
add
mov
test
ds
cld
out
es
arpl
test
push
pop
fidivl
in
or
mov
out
sar
mov
stos
shrb
push
les
lds
les
pop
lea
nop
sbb
scas
cmp
outsl
rcl
or
push
clc
jnp
mov
sbbb
jnp
test
xchg
push
sahf
push
adc
cmp
in
xor
insb
cld
push
lea
pop
out
inc
subb
xor
jb
loopne
sub
loope
or
popf
or
and
mov
and
movsb
or
rcll
adc
jbe
mov
jmp
jno
mov
or
add
rcrl
fcoml
imul
sbb
mov
jns
int
mov
xchg
mov
mov
inc
pop
adc
jmp
mov
xchg
cld
into
lods
jbe
jns
stos
push
sbb
add
lds
mov
cwtl
frstor
push
dec
out
push
in
add
loopne
cmp
mov
mov
and
cmp
lret
sbb
stos
addl
cltd
int
pop
and
xchg
outsl
xor
and
fsubrs
out
pop
add
mov
pop
popa
inc
jb
aaa
jg
mov
mov
int
lea
sub
add
ja
inc
mov
rol
mov
icebp
sahf
fstps
das
xchg
mov
cmp
ret
xor
pop
rorb
jne
pop
lret
negb
cmp
adc
and
cmp
out
stc
mov
in
jmp
icebp
loop
sti
fsub
cwtl
adc
or
outsl
xchg
gs
push
pop
mov
retw
les
pop
js
mov
mov
jle
out
mov
lods
jnp
pop
jl
popa
lahf
push
sbb
cld
jb
dec
jnp
stos
xor
sub
pop
stc
mov
jg
cld
push
ljmp
pop
bt
shll
pop
andl
cmpsl
mov
jae
mov
jo
fiadds
mov
or
out
pop
stos
mov
push
xchg
jmp
cltd
ret
jo
xor
test
mov
loop
pop
fisttpl
sbb
dec
sub
mov
xor
popf
mov
scas
movsl
mov
idivl
insb
mov
stos
ret
stos
fs
sub
int
dec
pop
popf
test
sti
movsl
ds
add
jl
jnp
adc
dec
xchg
push
pop
test
das
pop
push
out
sbb
pushf
dec
jge
sti
repz
scas
and
or
jns
adc
dec
fiadds
mov
shlb
sbb
scas
adc
outsb
add
add
sbbb
sahf
sbb
insl
inc
cmp
jo
stc
fildl
jne
popa
insl
xor
js
sar
dec
push
xor
pop
push
out
out
test
enter
mov
inc
cmp
addr16
sbb
stc
jl
aad
cmp
sub
sub
cmp
jp
pop
and
lods
cmp
xchg
lahf
insl
mov
mov
test
aaa
xchg
iret
or
and
pop
fidivs
push
mov
xor
sub
jns
or
out
daa
in
sub
addr16
das
insb
cmp
ret
inc
bound
jnp
and
loope
xchg
and
insb
push
and
or
dec
mov
xorl
mov
jge
mov
sub
aas
dec
and
sbb
insb
dec
and
sub
fstpl
pop
or
adc
sub
aad
jp
ljmp
lcall
dec
sbb
mov
cmp
mov
call
test
adc
xchg
int
or
cmpsl
and
dec
dec
out
add
adc
xor
daa
in
fbld
mov
icebp
scas
mov
mov
mov
jns
or
out
mulb
ds
push
or
mov
xor
adc
inc
gs
adc
inc
jecxz
dec
mov
mov
ljmp
bound
cmp
xor
push
loop
fdivr
jle
push
and
or
pop
dec
pop
ret
mov
push
scas
adc
testb
cld
pusha
shlb
dec
clc
jle
lods
or
popa
xchg
stc
int
jne
push
mov
js
xor
call
cmpsb
addl
or
pop
data16
fs
mov
stos
mov
cmpsl
dec
rorl
adc
inc
xchg
jnp
xchg
lret
cli
add
insb
dec
or
lock
pop
test
add
ja
into
mov
repnz
push
into
sbb
shll
xchg
out
sahf
inc
xchg
sarb
cmc
rclb
test
cmp
push
mov
mov
fsubr
mov
jno
std
aas
push
dec
shlb
sub
dec
push
inc
inc
jle
sub
test
push
jp
out
into
enter
arpl
mov
loop
dec
adc
shrb
out
icebp
xchg
mov
loop
leave
cmp
gs
dec
fists
fwait
outsb
mov
int3
hlt
popa
lret
ficoms
mov
and
sub
mov
mov
rcr
adc
mov
mov
fldl
mov
mov
inc
sub
mov
movsb
or
mov
icebp
stc
or
cmc
push
mov
pusha
xlat
or
mov
inc
mov
mov
cmp
cmp
jmp
andb
mov
adc
dec
ret
repz
and
lock
stos
out
in
push
xchg
xor
sub
and
and
hlt
ret
insb
gs
or
or
mov
cmc
popw
addr16
in
or
fs
nop
lock
inc
push
xchg
jno
pop
pop
adc
mov
mov
xchg
jecxz
inc
jle
and
adc
sub
cmpsl
cmpsb
or
xor
sti
ficompl
cmp
je
xor
sbb
or
adc
mov
stc
test
je
pop
arpl
cmp
dec
cwtl
mov
xchg
je
fdivrs
cltd
dec
rcrl
adc
xor
shlb
add
or
mov
sbb
mov
stos
test
daa
scas
bound
aas
adc
jae
int3
in
ljmp
inc
cmp
test
jo
rclb
mov
mov
mov
push
add
inc
and
inc
adc
out
ja
jle
push
addr16
and
fimull
shlb
mov
mov
and
push
cs
roll
movsb
jl
iret
and
mov
movsl
leave
sub
inc
xor
aas
clc
shll
pop
xor
cmpsb
cli
mov
cmp
in
inc
es
add
stos
cli
fs
mov
cmp
inc
push
xchg
out
inc
cmp
outsb
sub
pop
inc
adc
in
pop
dec
adc
sbb
mov
jl
add
daa
aas
outsl
mov
push
gs
ficoms
mov
out
jne
test
push
test
into
pushf
neg
jno
popf
pop
mov
mov
pop
xor
mov
sbb
pop
cmp
es
nop
jae
js
into
pop
mov
push
xorb
shlb
pop
xchg
mov
pop
and
test
xor
pop
inc
pop
add
bound
pusha
out
movsl
push
cmp
movsb
add
mov
jl
adc
sub
push
enter
fldcw
xor
push
jle
sbb
mov
call
jecxz
mov
pop
shrl
lods
pushl
ja
out
pop
enter
and
mov
cli
jle
mov
aad
lock
stos
cmp
push
les
pop
adcl
cmc
adcl
das
dec
call
jb
aam
pop
rclb
inc
stc
cmc
and
pop
fsubl
dec
aas
mov
rcll
adc
sub
jns
mov
inc
jp
jle
xor
xchg
jae
scas
and
lock
test
and
mov
push
outsl
mov
jge
dec
test
je
mov
daa
pop
inc
arpl
pop
dec
rolb
dec
mov
cmc
push
es
ret
scas
cmp
inc
jl
repz
lea
jl,pn
outsb
fwait
mov
lock
dec
pop
icebp
and
outsb
test
mov
inc
pop
subl
add
arpl
enter
pop
pop
pop
inc
inc
frndint
inc
xchg
sbb
in
cld
in
sub
fsubr
out
iret
cmpsl
pop
in
int
mov
add
mov
pop
mov
jle
push
or
mov
mov
cmp
xchg
cmc
lcall
mov
call
cmpsb
add
mov
inc
jmp
dec
mov
hlt
jge,pn
xchg
dec
push
add
js
pusha
or
js
xor
ljmp
subl
pop
pop
cmpsb
outsl
inc
and
sbb
bound
lods
test
adc
js
push
push
outsb
mov
idivl
and
incl
xlat
lcall
jl
cmp
mov
jb
sub
rcr
add
rol
xchg
sbb
xor
fisttpll
push
xor
cmc
pop
mov
inc
gs
and
popf
loope
movsl
cs
mov
andb
fdivrl
xchg
and
mov
xor
movsb
ficompl
xlat
pop
fcoms
or
dec
mov
nop
adc
push
add
faddl
dec
imul
adc
push
mov
dec
pop
push
inc
shrb
and
paddd
in
cmpsb
jp
cmp
inc
push
popf
dec
mov
mov
test
add
enter
cwtl
movb
mov
out
mov
inc
add
xor
movsl
movsl
push
rolb
mov
and
insl
mov
xor
dec
ret
outsl
adc
rcrl
ret
jnp
or
push
cmpsb
shrb
push
and
inc
or
mov
subb
lock
in
cmpsl
arpl
daa
ficoms
icebp
setle
imul
lods
and
jg
pop
dec
add
xchg
lret
mov
and
push
and
jne
in
rcrl
push
outsl
ficompl
ret
xlat
jbe
lea
lock
pop
lods
leave
test
mov
cmp
stos
loop
pop
icebp
push
sbb
mov
repnz
mov
sarb
sbb
cmovae
scas
data16
sbb
cmpsl
int3
aad
aam
inc
sti
je
gs
shlb
add
xchg
ret
sbb
jmp
mov
push
pop
mov
pop
pushf
pop
rcrl
cmp
pushf
mov
and
rcrb
in
lds
sub
enter
fsubr
and
testl
mov
int
and
cmc
shll
pusha
jle
insb
rcll
mov
loopne
cmc
dec
fidivs
xchg
and
push
mov
or
into
xchg
test
imul
fstpt
out
shl
xchg
mov
fcomps
addr16
inc
out
cmpsb
pop
mov
pop
scas
test
clc
ficoml
adc
mov
ljmp
push
inc
popa
adc
test
or
sub
push
sar
jae
jl
mov
shll
test
mov
sub
into
pop
mov
dec
pop
inc
push
mov
es
mov
out
out
add
mov
xchg
dec
inc
inc
out
outsb
lret
jmp
movsb
sbb
arpl
adc
inc
cmp
cli
mov
ja
fldl
es
jb
xchg
pop
pop
loope
sub
dec
or
addl
aad
or
dec
jg
movsl
ret
fisubl
jecxz
mov
sahf
rolb
jns
inc
cmp
mov
test
jne
sub
xchg
pop
addl
sub
pop
in
into
shll
xchg
in
cli
push
sbb
setge
mov
mov
cmc
seta
and
xor
int
push
push
sub
iret
imul
je
jp
or
dec
outsl
inc
mov
jo
bound
out
pop
rcr
cli
imul
push
dec
insl
shr
fdiv
cmp
cmp
cmpsb
fmuls
sbb
idivl
push
mov
mov
push
dec
pusha
xchg
mov
and
fs
jne
dec
in
sub
sub
stc
mov
adc
push
hlt
icebp
enter
aas
xlat
push
rcr
stos
dec
and
mov
je
adc
jl
mov
cmpsb
push
mov
shlb
jle
jecxz
xchg
xorl
daa
das
ljmp
lock
sbb
arpl
lds
mov
notl
clc
gs
cmp
xor
loopne
aaa
mov
jle
ret
sub
enter
stc
out
push
ds
inc
xchg
in
fsubl
xor
push
sub
cmp
aaa
outsl
sub
in
cmc
sti
andl
imul
fildll
icebp
pop
jns
sbb
hlt
xchg
sbb
addr16
cwtl
cmc
inc
leave
filds
sbb
mov
inc
and
cmp
dec
out
pop
adc
pop
out
inc
out
into
mov
pop
into
std
mov
cmp
loope
cmp
loopne
rcll
jg
mov
or
xor
dec
cltd
dec
je
pushf
jmp
sbb
dec
xor
mov
and
ror
mov
xor
sub
xchg
lcall
fs
cmp
ret
fs
mov
scas
jp
loope
inc
gs
jge
sahf
mov
mov
testl
in
sbb
std
not
aad
cmp
and
cmp
out
loope
popf
daa
pop
lret
mov
lret
stos
push
jl,pn
daa
lea
fisttpll
push
pushf
fcomps
sahf
outsl
in
pop
subb
insb
adc
mov
aaa
push
scas
mov
mov
push
out
fsubs
sub
rorb
cmpsb
fwait
push
sub
dec
mov
lods
sti
xchg
jbe
mov
out
or
lahf
xchg
js
in
xor
push
in
jb
gs
pushf
addr16
cmpsl
pop
ja
cmp
mov
push
es
push
or
adc
out
and
data16
pop
mov
xchg
mov
xchg
stos
push
imul
xchg
aad
xor
mov
inc
clts
icebp
inc
imul
pushf
cli
ljmp
push
lods
sar
test
notl
xchg
push
or
cmpl
xchg
inc
out
lds
or
cmc
or
int
std
add
push
incb
mov
sahf
enter
sub
shlb
push
test
pop
mov
int
repz
por
push
xor
cwtl
ret
mov
jmp
sub
movaps
jae
cmp
in
not
mov
movsb
and
jp
or
and
add
fisubs
pushf
sbb
pop
xor
outsb
sbb
inc
xchg
fistpll
pop
cmpsb
rcrl
adc
das
ljmp
xor
vpmadcsswd
xchg
imul
adc
das
and
stos
adc
test
lcall
xchg
data16
pop
ljmp
stos
aaa
jae
addr16
lret
dec
imul
in
mov
adc
outsl
shlb
sbb
cli
into
out
popf
stc
leave
call
inc
lret
pop
lret
jp
pop
sub
sub
dec
dec
fnstsw
out
inc
jge
ret
mov
adc
adc
add
or
pop
sbb
inc
cmp
aam
xor
in
add
js
and
sti
imul
pushf
popf
push
loope
out
pop
mov
push
mov
jle
inc
movb
nop
rcll
push
in
pop
enter
and
addl
scas
add
cwtl
dec
in
out
xor
xchg
or
xor
fwait
xchg
or
stc
insl
je
cmp
loop
mov
dec
jo
fisubrs
cs
mov
jne
jp
notb
push
jno
iret
lds
das
dec
pop
insl
jnp
lods
jge
loop
shll
mov
in
mov
cmc
mov
lea
in
pop
mov
out
shll
daa
fwait
data16
cmp
fdivs
shrl
mov
pop
mov
sub
addb
cmp
mov
xchg
add
lock
xchg
andl
cmpsb
mov
hlt
stos
outsb
je
adc
mov
cmp
jge
cmp
aaa
cmp
mov
xlat
pandn
jne
test
ss
in
mov
mov
xchg
clc
loope
shlb
jb
xor
mov
pop
imul
jbe
adc
fisttpll
sub
fstps
cmpsb
pop
imul
sub
and
dec
fs
cmp
clc
in
inc
into
fsubs
push
and
push
insl
mov
mov
mov
outsl
mov
xchg
out
and
fstl
cltd
cmp
dec
pop
movsb
xor
call
subl
clc
dec
aas
or
xchg
inc
je
xor
sub
and
pop
loopne
lret
test
jbe
or
adc
jg
mov
and
push
mov
xchg
inc
loop
cmp
stos
xchg
lret
pop
inc
sub
push
fsubp
pushf
xor
cmp
cmp
jg
movsl
mov
xchg
dec
push
ja
cmp
dec
push
adc
mov
mov
mov
jne
cmpl
jns
dec
xor
jb
cmp
std
jecxz
fcmovne
nop
sub
mov
push
sbb
ss
test
lcall
aad
inc
inc
loopne
inc
es
adc
pushf
loopne
cmp
jb
xorb
jecxz
push
pop
in
call
jnp
xchg
mov
out
shr
shrl
jmp
xor
xor
adc
cmp
popa
push
push
mov
xor
into
out
dec
mov
jl
popa
inc
cmp
sbb
pop
arpl
xchg
repnz
movsl
ss
ret
cmp
inc
dec
int3
in
jecxz
jno
mov
xor
xchg
mov
pop
pop
bound
jb
dec
jo
repz
add
jb
dec
xchg
jecxz
xor
mov
mov
pop
pop
stc
js
add
xchg
lock
jg
daa
cmp
call
ret
mov
mov
bound
pop
fistpll
mov
aad
xor
sahf
xor
xor
rcll
test
lret
loope
je
into
insb
test
push
repnz
testl
outsb
pop
push
cwtl
fsts
jmp
out
stos
loop
mov
or
outsl
mov
into
in
popa
mov
lea
pop
sti
ja
dec
mov
and
inc
mov
pop
xor
fimuls
pop
loopne
mov
nop
sbb
enter
mov
icebp
scas
adc
jbe
sbb
or
dec
es
out
imul
push
imul
test
mov
mov
imul
out
insl
sub
jbe
das
mov
xor
movsb
mov
mov
cld
stos
sti
dec
jp
unpcklps
and
gs
mov
adc
or
mov
imulb
cwtl
jo
xor
stc
jp
xchg
lods
sbb
xchg
lods
cmp
sub
adc
push
pop
mov
fsubrl
fwait
add
sbb
pusha
push
adc
popf
sub
clc
add
jnp
mov
mov
movl
gs
in
dec
not
imul
xlat
jg
and
out
cmp
scas
loop
mov
jle
pop
mov
and
pushl
testb
out
push
pop
push
push
cmp
add
js
push
push
xchg
xchg
dec
fs
test
pusha
enter
xchg
xchg
call
jmp
sbb
xchg
push
cmp
test
aas
std
xor
repnz
push
xor
sub
dec
ja
pushf
repz
inc
out
iret
mov
mov
sub
xor
pop
out
dec
mov
mov
inc
mov
mov
lea
bound
idivb
fisttps
push
pop
jo
jns
out
adcl
sti
push
pop
cmc
jo
mov
daa
cmp
lock
mov
jbe
mov
jne
sub
add
stos
sub
mov
dec
adcb
insl
outsl
mov
pop
push
mov
or
xchg
sub
fs
xlat
mov
cmpb
and
jmp
pop
mov
add
inc
test
fwait
out
push
pop
jne
xchg
jge
fdiv
fbld
sbb
mov
mov
lds
bound
cmp
insl
ret
mov
repnz
xchg
xchg
xor
cwtl
adc
ljmp
rcl
or
mov
loop
xchg
jb
pusha
stos
and
arpl
punpckhdq
loopne
mov
mov
mov
inc
in
bound
push
andl
xchg
mov
cmp
push
int
inc
aad
push
add
lret
pop
cmp
or
in
dec
inc
xchg
push
pop
add
pushf
ror
sbb
or
notl
push
adc
xor
sbb
pop
pop
repz
cli
mov
and
adc
fidivrl
sub
cmp
movsb
testl
push
dec
pop
xchg
enter
mov
push
inc
jb
fnstsw
gs
or
mov
sbb
loope
pushf
call
xchg
ret
ja
bound
sbb
out
daa
jecxz
add
fisubl
xor
mov
adc
daa
test
xlat
jecxz
inc
pusha
pusha
inc
imul
sub
jno
fsubr
mov
and
pop
rolb
or
jl
xchg
mov
int
cwtl
orb
mov
test
adc
stos
inc
adc
or
mov
ja
xor
dec
in
fcomps
fld
popa
call
mov
or
nop
loope
cld
xchg
cltd
xchg
or
ficomps
inc
add
pop
jbe
addr16
cmpsl
mov
cmp
pop
sbb
icebp
fwait
xchg
inc
cmpsl
jle
adc
adc
insb
mov
mov
sbb
pop
ljmp
lcall
in
mov
movsl
xor
fstpt
pop
and
sbb
popf
cmpb
xchg
xchg
sbb
leave
cltd
jmp
jne
call
jae
notb
fistpl
mov
cmp
scas
add
negl
jae
stos
jae
push
mov
mov
pushf
ja
sbb
ljmp
pushf
jns
dec
imul
cmp
test
inc
cltd
in
adc
stos
flds
arpl
and
jbe
nop
jne
ret
and
or
mov
mov
and
rclb
push
cmpsl
mov
mov
jns
ja
mov
stos
ss
les
pushf
dec
cmpsl
fldt
test
pop
inc
test
jp
lds
out
arpl
jb
rclb
mov
stc
or
add
arpl
lcall
push
lret
inc
pop
subb
xchg
adc
pop
sbb
cmp
aam
les
mov
fcompl
fisubrl
aam
fwait
cltd
sub
mov
ror
push
in
jmp
adc
dec
cmp
mov
sbb
iret
jge
arpl
aam
roll
jl
movsl
ret
xchg
es
seto
js
dec
lcall
out
rol
pop
push
mov
cmp
sbb
in
ds
mulb
push
ljmp
call
cmc
sub
xchg
lock
mov
xchg
int3
xor
es
outsb
cmp
shrb
cmp
jns
rep
imul
mov
push
mov
xor
loope
fsub
shll
ret
shrl
fld
mov
sti
push
jne
stc
sti
fidivrl
jp
shrl
or
cmpb
popa
cmp
sbb
pop
xchg
dec
xchg
adc
leave
xchg
gs
pop
in
cmp
sub
jo
push
das
les
add
lock
ficoms
mov
or
cmp
mov
sub
mov
sub
xlat
cli
enter
jge
and
sti
lea
and
adc
fs
mov
fcompl
into
sbb
test
pop
out
pop
scas
fdivs
mov
loopne
or
out
mov
jae
sbb
out
or
mov
sbb
mov
scas
and
jns
cmp
jb
add
xchg
outsb
ss
pop
pop
dec
nop
sbb
pop
push
xor
lcall
mov
gs
ja
push
mov
clc
xor
sbb
or
jg
dec
inc
jge
cmpsl
xor
jne
adc
outsb
push
dec
rclb
mov
lds
dec
or
pop
add
jnp
xor
pop
jae
inc
dec
mov
lret
push
cmp
xchg
xchg
or
js
insb
sbb
inc
pop
movsl
popf
les
sti
add
mov
xchg
fbstp
push
mov
jae
aam
je
or
imul
cmp
pop
mov
sbb
jp
mov
xchg
mov
inc
ss
sub
mov
and
dec
and
sbb
jl
iret
jge
push
lock
mov
cmp
or
negl
cmp
sbb
mov
mov
xlat
mov
fidivs
cmp
sbb
outsl
mov
push
push
scas
fidivrs
or
mov
push
jb
fidivrl
fisubrs
mov
daa
ljmp
mov
popa
sub
mov
adc
or
mov
outsl
sub
test
test
les
loop
pop
jne
nop
cmp
adcl
aaa
jle
movsb
mov
stos
int3
xchg
movsl
jmp
sbb
daa
ficompl
dec
mov
js
mov
push
int3
popa
repz
inc
movl
sbb
daa
inc
fbstp
mov
pop
jns
and
repz
xchg
pushl
mov
sarb
ret
push
mov
push
add
xchg
insl
testb
insl
out
mov
xor
jmp
lcall
iret
es
popf
xor
inc
in
test
push
pop
push
cmp
orl
jbe
jno
fsubp
pop
add
enter
lods
test
push
out
mov
mov
cs
nop
xor
insl
movsl
clc
rorl
or
push
xor
mov
sub
mulb
out
dec
fstpt
push
add
imul
out
in
repnz
dec
jo
in
push
xchg
ficoms
or
jp
lods
push
add
bound
gs
add
add
push
aaa
lea
je
mov
jmp
pushf
cmpsb
fxam
fsubrs
and
fstpt
jne
and
mov
or
stc
dec
mov
aad
icebp
insb
loop
data16
fistps
test
or
popa
cmp
insl
and
stc
pop
outsb
or
maxps
push
mov
movsl
jb
mov
mov
enter
pop
movsb
pop
jb
xchg
push
sbb
cmp
je
mov
mov
jb
popa
pop
pushl
jle
into
xchg
mov
lds
fcoml
fiadds
and
push
insb
add
push
sub
jnp
int3
scas
xor
pop
je
cmp
pop
popl
jns
sbb
int3
in
mov
loopne
dec
hlt
sub
jnp
sahf
mov
jns
out
enter
js
pop
and
aas
or
lock
addl
out
out
sbb
out
mov
cmp
iret
and
or
movsb
sub
push
lahf
jbe
pop
aad
out
dec
sbb
sub
fldcw
cs
mov
xchg
out
xchg
cmp
mov
daa
shrb
lret
call
jge
in
cmpsb
in
mov
pop
xchg
mov
or
outsl
xchg
mov
pop
and
hlt
add
fwait
dec
movsl
cmp
mov
pop
inc
push
push
mov
mov
in
not
repz
xchg
mov
mov
and
das
cmp
mov
lret
mov
aam
xor
outsb
cld
faddp
add
sbb
jle
in
fadd
test
xor
inc
shlb
lret
adc
jnp
out
imul
ljmp
sub
arpl
or
mov
inc
push
pop
fdivrl
push
lock
jbe
and
mov
lock
jmp
cmp
es
js
cmpsb
xor
dec
testl
lret
stc
add
push
test
rcrl
jae
mov
lods
cmc
xchg
or
movsl
movsb
xlat
pop
inc
dec
stos
cmp
xchg
cmp
xchg
out
cld
cld
loopne
mov
pop
adc
pop
cmpsl
xor
lods
or
insl
test
sbb
pushf
inc
iret
adc
and
lods
jae
mov
jl
lea
mov
clc
and
sbb
cmp
xchg
inc
pop
add
xchg
mov
dec
iret
xor
pop
inc
sub
xchg
ret
jmp
xor
stos
mov
in
outsl
popa
gs
js
lock
mov
jg
arpl
dec
inc
push
push
fdivrs
shrb
enter
mov
iret
mul
cmp
les
stos
std
outsb
add
pop
xor
push
fs
push
iret
mov
mov
sbb
mov
xor
dec
nop
stc
adc
movsl
xor
mov
shrb
sub
loope
xchg
loop
pop
mov
mov
and
clc
out
test
stc
int3
int3
jmp
test
and
push
cmp
popf
lods
hlt
stos
dec
sbb
out
and
dec
cmpsl
call
add
sub
popf
jns
fnstsw
lcall
pop
jnp
mov
daa
jmp
test
out
sbb
sub
jo
fwait
out
xchg
rclb
mov
mov
dec
mov
repnz
mov
sbb
push
adc
scas
cltd
outsb
int3
nop
fdivp
xlat
dec
ds
int3
push
fwait
daa
orb
fisubs
pop
popf
sub
mov
inc
stc
out
push
add
inc
test
neg
aam
loop
out
add
cmp
lods
loopne
mov
xchg
pop
icebp
bound
popf
inc
ret
pop
xor
mov
mov
xchg
sbb
xor
es
sti
aad
mov
or
jne
daa
mov
push
ds
jg
mov
test
pop
insl
push
xor
and
xchg
lret
popl
pop
dec
insb
insl
mov
add
mov
mov
lret
xchg
inc
sbb
test
test
mov
inc
imul
roll
add
sbb
dec
xor
dec
cmp
and
adc
mov
inc
lcall
cmp
push
mov
popf
outsl
add
outsl
es
clc
sbb
loop
adc
js
das
push
mov
adc
pop
or
cli
aad
inc
sub
enter
jae
lcall
inc
stc
jmp
push
iret
insb
pop
int3
inc
aam
icebp
addl
loope
jbe
mov
push
dec
loop
addl
add
aad
lcall
call
mov
call
cmp
test
out
adc
mov
popf
xchg
mov
mov
mov
out
lahf
mov
xor
imul
stc
mov
gs
mov
js
dec
push
out
popf
pop
pop
es
sbb
enter
cmpsb
mov
in
mov
xchg
lea
test
mov
dec
enter
cmpsb
mov
out
xor
lods
pop
cli
pop
in
divb
mov
jmp
mov
cmpsl
aas
aad
lcall
setge
lds
orb
or
repnz
push
jge
rcr
rorb
fldl
dec
arpl
or
sub
xor
xchg
stc
add
pop
sbb
jg
scas
mov
sub
mov
fisubrs
dec
stos
pop
sub
jg
cltd
pop
add
push
jb
and
add
dec
shrl
movb
lahf
inc
jg
fisubrs
out
stc
pop
ret
sarl
dec
mov
in
sub
incl
or
mov
cmp
cmp
sub
loop
imul
cmc
xor
push
outsl
lcall
repz
xchg
test
in
and
das
ds
xor
sti
push
aaa
fisttpl
add
out
ja
sub
jae
cld
mov
push
jo
push
lahf
je
neg
arpl
jne
test
loop
fldt
jge
cmp
daa
jbe
jl
add
xor
adc
pop
xor
xor
cld
jb
pop
or
mov
inc
mov
cmc
enter
cli
xchg
xchg
jle
push
pusha
out
outsb
sub
mulb
inc
mov
jae
xor
cmpsl
popa
cli
mov
mov
ljmp
cmp
adc
mov
mov
shl
or
cwtl
push
pop
lret
or
das
mov
add
jbe
and
jnp
sbb
insl
inc
cmp
cwtl
pusha
jne
pop
repz
mov
addr16
push
push
cltd
enter
out
lret
sarb
nop
out
jnp
shrl
mov
sbb
cwtl
sahf
sub
sub
mov
repz
imul
mov
fadds
enter
push
repnz
movsb
test
pushf
int3
sahf
outsb
mov
hlt
cmp
jl
xor
cmp
sbb
push
pop
outsb
je
pop
ja
mov
adc
mov
xor
pop
stos
and
mov
xor
or
mov
jge
push
mov
add
push
in
cmp
and
enter
push
cmp
add
test
arpl
or
gs
mov
cwtl
mov
xchg
loopne
fstps
aam
jmp
mov
clc
pushf
out
adc
in
push
test
sub
mov
jle
dec
inc
cli
adc
sub
ret
sub
jp
cmpsb
and
sbbb
arpl
aad
int3
cmp
jb
and
pop
sti
sbb
cli
xorl
mov
xchg
dec
loope
fwait
jmp
xor
out
aam
ficomps
mov
dec
mov
inc
mov
out
fs
adc
test
xchg
rcrl
in
cwtl
das
dec
jl
cld
jge
and
incb
jle
dec
pop
fisubrl
mov
enter
ljmp
jbe
icebp
cs
jle
popa
mov
mov
or
dec
mov
and
ss
jo
cmp
mov
lea
or
sub
mov
push
dec
pop
mov
aam
stc
cmp
jns
testl
xor
mov
scas
jb
jno
xchg
inc
cli
mov
int3
mov
mov
push
repz
push
adc
push
sub
scas
call
pop
add
mov
push
ja
adc
data16
rorb
je
push
xor
pop
inc
ret
push
fnsave
push
mov
lcall
sub
inc
mov
mov
stc
push
jle
lods
pop
dec
xchg
push
mov
ds
sub
pop
pop
ret
stos
mov
ds
adc
testl
sbb
pusha
push
jnp
or
repnz
mov
ds
je
or
daa
das
call
pop
lahf
push
xchg
ljmp
add
es
adc
pop
xchg
mov
insb
mov
mov
stc
mov
out
cli
xor
adc
shrb
test
stos
dec
xor
fs
and
lods
inc
jge
mov
rcrb
aad
pop
jecxz
mov
sub
mov
jo
mov
loopne
arpl
imul
jecxz
or
stos
lea
les
xchg
ret
ja
ret
fisubrs
adc
mov
push
jo
aad
cmc
xchg
pop
ret
outsb
cmp
inc
pop
cmp
mov
in
inc
stos
dec
icebp
les
cmpsl
adc
mov
xor
sbb
int
loop
sub
mov
jl
push
sbb
out
sbb
jne
mov
mov
jae
stos
fidivrl
in
xchg
push
xchg
cs
imul
rcpps
in
stc
scas
sub
mov
outsb
mov
cmp
lock
subl
insb
sbb
outsb
xchg
sbb
mov
xor
xchg
mov
je
cmpsl
xor
loopne
dec
loop
sub
adcl
into
shr
call
mov
lods
add
sti
jge
loop
and
inc
test
xchg
sbb
insb
rorl
pop
mov
fsubl
orl
bound
aas
ret
bndstx
out
mov
cmc
das
repnz
fistpl
mov
int3
mov
in
test
or
fs
jnp
xchg
mov
cmpsl
cs
pusha
ret
fdivr
mov
and
adc
push
cmpsl
inc
xchg
xor
mov
out
div
imul
ja
and
std
ss
daa
rcrl
cmpsl
xchg
pushf
std
pop
daa
mov
add
scas
sti
lret
popf
pop
mov
pop
adc
push
xchg
dec
in
clc
in
icebp
cmp
movsl
push
fmulp
jns
mov
inc
loopne
fadds
push
leave
ret
andnps
cltd
es
adc
adc
push
mov
and
jnp
dec
mov
fistpl
mov
ja
sub
xor
loopne
xchg
imul
mov
cltd
and
movb
stos
mov
xor
clc
sbb
gs
mov
dec
xor
sti
pop
clc
adc
in
movsb
push
mov
and
mov
mov
lcall
xor
cwtl
arpl
inc
fisubs
inc
jns
mov
jne
sub
add
popa
sarw
in
mov
cmp
xor
inc
out
je
and
enter
or
ret
ficoms
loope
xor
pop
js
cs
pusha
inc
clc
sbb
pop
mov
jae
test
mov
mov
mov
or
and
mov
aad
pop
xchg
ja
adc
in
push
sbb
movsb
jmp
fdivs
sub
jne
and
das
sub
jmp
scas
xor
in
mov
scas
push
push
or
jb
lret
push
out
mov
shrl
mov
ss
lahf
movsl
adc
sub
sar
xor
or
sbbl
add
push
rolb
lret
inc
cmp
ss
repnz
jle
sub
add
mov
je
fildl
ds
nop
scas
and
into
js
xchg
or
stos
pop
scas
sbb
daa
and
jle
cmp
arpl
int3
inc
adc
mov
add
popf
dec
das
out
jmp
cwtl
dec
cmp
idivb
ret
or
add
ss
fnstenv
fisttpll
jmp
jg
ds
mov
push
sbb
sbbb
rcl
xchg
mov
aas
enter
ss
je
sbb
loopne
fisttps
pushf
hlt
pop
xchg
lahf
pop
jbe
xor
xlat
cs
push
fcom
pop
pop
iret
cmp
popf
loop
push
rcrb
jo
and
das
mov
sub
int3
clc
push
leave
mov
stc
jnp
in
jle
out
or
sub
mov
loop
pushf
fcomps
js
fildl
movsl
loope
loope
sbb
adc
push
fildll
test
test
xchg
xchg
lods
imul
arpl
adc
je
stos
jbe
lahf
daa
jmp
sub
stos
in
cmp
ret
mov
and
dec
cmp
ds
stos
ret
sub
and
popa
cwtl
lcall
sahf
ljmp
dec
xchg
push
pop
mov
test
mov
push
add
icebp
stos
cmp
lret
arpl
ret
ljmp
mov
movsb
hlt
repz
mov
pop
movsl
push
pop
mov
add
mov
inc
xchg
pop
xchg
sti
jb
or
dec
stos
push
sbb
jl
or
lahf
push
addb
jo
or
mov
sarl
pop
test
inc
pop
and
lds
add
mov
push
pop
sbbl
fcompl
fcoml
mov
add
mov
lods
cwtl
push
mov
arpl
pop
test
call
inc
adc
in
bnd
nop
lds
in
jmp
rcrl
push
sbb
add
inc
pop
pop
and
lods
les
xor
pop
sub
rcr
hlt
ret
push
mov
imul
lock
aas
ja
add
mov
inc
mov
xchg
cmpsl
jns
lahf
lcall
jmp
outsb
mov
push
sub
lret
cmp
adc
lcall
pop
sti
inc
out
xor
mov
adc
jo
add
adc
adc
rorb
dec
mov
aad
push
mov
loopne
push
clc
mov
movsl
popa
or
jmp
data16
mov
icebp
jge
sti
pop
test
xchg
dec
adc
decb
push
or
xchg
in
sub
sbb
stc
insl
jg
outsb
ljmp
sbb
aas
cmp
cmp
xchg
fnsave
add
mov
xchg
mov
inc
sarb
ss
popa
jo
andl
push
aas
pop
gs
xor
std
clc
add
insl
sub
or
cltd
pusha
pop
jg
loop
sub
xor
popa
das
aaa
jae
pusha
aam
cmc
outsl
lret
lret
adc
mov
pushl
or
xchg
mov
cmp
subl
imul
stos
insl
cmp
inc
xchg
inc
xchg
fwait
xor
ja
mov
mov
mov
cmpl
cmc
inc
in
in
dec
add
xchg
arpl
sub
sbb
aad
fdivs
push
add
clc
and
adc
arpl
insb
das
jmp
repz
lods
inc
xchg
loop
pop
push
adc
push
xchg
inc
ficompl
add
cs
xor
mov
das
inc
xchg
pop
andb
xchg
fldl
movl
mov
cmp
rcrl
inc
nop
lcall
mov
or
std
jo
push
inc
pop
add
sub
pop
ret
mov
aaa
les
pop
pop
iret
pop
gs
repnz
stos
xchg
add
int
shll
pop
lds
jae
stos
sti
sub
incb
jle
dec
jne
sub
pop
pop
sbb
int3
daa
mov
test
mov
lcall
or
movsl
cli
in
jmp
stc
mov
lock
inc
addb
arpl
xchg
bound
in
sub
les
mov
push
sub
lea
sahf
ja
flds
adc
repz
push
jg
movl
test
lret
and
adc
add
or
and
and
sbb
shrl
sub
jnp
pop
lods
or
add
arpl
cmp
in
sbb
inc
xchg
push
pop
inc
hlt
add
mov
lods
cmpsl
cld
repz
and
lock
pushl
leave
xor
sbb
cli
add
decb
or
out
ficoml
jl
lcall
popa
sti
leave
push
fstpl
jno
or
inc
ds
jle
mov
push
sbb
jl
fcoms
lds
nop
dec
sub
pop
mov
cmp
sub
jg
xor
popf
pop
xchg
aam
mov
pop
pop
or
loop
sbb
pop
pop
out
fcomi
cmc
xor
jae
das
imul
pop
pop
add
daa
test
cmp
icebp
in
popf
in
xchg
add
mov
testb
sbb
jg
das
out
dec
add
pushf
xchg
add
adcb
jae
and
fs
dec
pop
dec
scas
fsubp
xchg
add
loope
or
push
sbb
lods
pop
lods
add
fmuls
mov
enter
cwtl
dec
jle
cwtl
mov
xor
push
add
lret
add
scas
lret
test
adc
inc
add
mov
add
mov
mov
out
rorl
mov
ret
loop
xchg
fcmovnbe
sub
pop
rorb
adc
andl
insl
in
jge
inc
pop
push
xchg
lock
out
push
fwait
aaa
cmp
jle
jo
push
arpl
ljmp
outsb
in
mov
hlt
sbb
aam
int3
out
out
popf
add
add
or
in
dec
jno
sbb
lds
enter
sbb
jl
pop
dec
mov
push
je
mov
inc
push
xor
int
mov
outsb
rorl
push
inc
xchg
imul
xor
mov
stos
mov
lahf
pop
dec
leave
xchg
inc
negl
push
sub
jmp
ja
loop
sub
out
out
pop
gs
fdivrs
outsb
pusha
push
cld
mov
iret
xchg
push
mov
sbb
add
sub
lea
andb
mov
negl
mov
fchs
xor
xor
mov
sub
das
nop
adc
dec
aaa
mov
pop
dec
les
jae
add
push
xorb
inc
pxor
loop
out
cmpsl
xor
and
sahf
das
in
call
sub
mov
cmc
xchg
subb
mov
mov
adcl
nop
add
insl
fbld
jne
jae
pop
pop
fldcw
fists
push
xor
loope
cli
cld
dec
cmc
es
rclb
inc
shl
fstp
mov
pop
loope
in
adc
fiaddl
adc
mull
dec
rorl
cmpsl
and
dec
int
fdivl
xchg
pop
jb
inc
mov
mov
xor
mov
les
repnz
stos
std
shll
loop
out
or
mov
jle
jg
push
lret
and
cmpsl
jo
dec
pusha
sbb
pop
andb
test
xchg
mov
and
sahf
jle
cmp
cmp
shlb
rclb
sub
adc
imul
popf
mov
pop
add
add
out
cmp
out
sub
sub
jle
inc
mov
mov
out
add
mov
cmpsl
push
mov
or
loopne
aam
dec
int3
mov
jns
test
clc
mov
push
xor
dec
enter
mov
scas
cmp
pop
outsl
dec
xchg
leave
in
xor
push
stos
pop
xor
or
push
jno
out
daa
gs
and
or
dec
iret
testl
imul
mov
jo
mov
add
fcoms
subl
daa
aas
imul
cmpsb
mov
jl
jbe
test
add
testb
out
mov
pop
ret
fsubs
mov
push
or
push
mov
hlt
js
adc
cli
sub
jle
shll
xchg
xor
leave
xchg
pop
scas
adc
mov
outsl
pop
les
gs
adc
icebp
scas
call
std
jnp
sub
scas
dec
mov
ljmp
roll
mov
stos
sahf
sbb
or
addb
xchg
push
shll
insb
push
or
fs
lret
or
scas
cli
dec
xchg
push
inc
jae
dec
in
push
imul
xchg
mov
inc
and
xchg
out
jge
out
dec
or
push
mov
add
enter
jnp
lds
adc
xchg
jl
push
or
adcb
lds
les
iret
ja
sti
push
sub
icebp
and
mov
cmp
dec
dec
aas
cmp
insb
inc
jecxz
dec
sbb
call
dec
ficoml
das
add
out
out
or
adcb
fiaddl
fildll
dec
inc
mov
incl
bound
or
mov
xor
jg
fldz
sub
jne
dec
xchg
cs
mov
test
xlat
dec
int
out
cmp
movntps
mov
stos
xchg
xchg
nop
jmp
or
xor
testb
mov
add
subl
xchg
push
movsl
mov
sub
sti
aaa
arpl
pusha
jge
adc
mov
push
out
lds
nop
push
jmp
pop
pushf
or
mov
jle
and
out
in
test
jmp
adc
jge
xchg
xchg
cmp
cmpl
jle
fildll
dec
arpl
xchg
xchg
mov
and
sahf
sub
in
ss
adc
adc
lret
stc
push
mov
idivb
fidivs
jp
push
call
pop
jle
mov
cltd
ss
ljmp
ficompl
cltd
xor
decl
mov
sbb
lea
cwtl
sbb
ja
add
out
pop
lods
das
xor
ret
mov
adc
jg
cmc
xchg
mov
cmpsb
xchg
add
cld
test
or
fnstcw
aaa
xchg
addr16
jno
sarl
dec
sub
fsqrt
adc
pop
hlt
out
fs
mov
mov
mov
add
or
jge
incl
push
popf
xchg
or
jnp
cmp
add
lds
lret
mov
shll
or
mov
popf
or
mov
js
lret
fidivl
loope
mul
scas
pop
outsb
mov
push
mov
outsb
adc
lret
mov
pop
mov
lea
xchg
lea
or
jg
pushf
xchg
or
shr
add
call
adc
xchg
sub
mov
and
mov
insl
adc
insb
dec
and
cwtl
insb
pop
fnsave
fcoml
mov
inc
push
daa
into
dec
pop
xchg
sti
fcmovu
push
and
clc
jno
bound
hlt
adc
mov
popa
sub
mov
push
xchg
inc
push
and
mov
and
xchg
jp
sub
std
and
fiaddl
mov
stc
dec
aam
fiaddl
arpl
enter
and
mov
push
sub
inc
subl
xlat
cmc
cmp
pop
shlb
es
lcall
inc
xorb
dec
es
fsubrl
roll
add
mov
mov
shll
cmpsl
cmp
push
mov
arpl
mov
cmp
sti
clc
jle
push
lret
inc
dec
je
xor
inc
xchg
dec
aad
cmp
mov
dec
adc
aad
mov
and
mov
and
or
pop
pushf
lods
ret
test
xor
loopne
mov
cld
cmpsl
xor
cld
pop
repz
lods
lods
out
and
xchg
arpl
negl
and
test
cmp
push
shll
mov
add
cmp
imul
mov
clc
push
lods
pushf
cmpsl
rcrb
iret
or
dec
pop
pop
adc
outsb
ret
push
imul
pop
cltd
sar
call
pop
adc
addr16
sbb
das
push
js,pn
outsl
div
test
scas
mov
jge
outsl
jne
xchg
mov
test
xchg
movsb
or
in
jo
jle
jl
aam
or
imul
mov
popa
cli
sbb
out
data16
jg
leave
push
fsubp
inc
and
pushf
jno
stos
mov
dec
and
push
stos
jg
xor
repnz
scas
out
push
sti
adc
xor
cmpsl
jge
loope
andl
adc
das
pop
push
sti
jecxz
push
sahf
fwait
lret
cs
std
aas
mov
push
test
mov
cmc
mov
jne
push
cltd
iret
mov
mov
orb
je
sub
adc
inc
and
insb
dec
rolb
mov
ja
cld
mov
jbe
imul
lret
cltd
push
jecxz
orl
rorl
xor
stos
jle
out
push
jae
aam
movsl
and
loop
jb
clc
out
mov
or
addb
lahf
add
xchg
ret
jmp
daa
popa
or
popa
xor
shlb
xchg
lret
mov
nop
or
cmpsl
cld
jno
test
arpl
sbb
mov
insl
addr16
mov
xor
pusha
data16
daa
mov
into
lds
aas
inc
insl
pop
mov
dec
xchg
in
sbb
jb
mov
mov
ret
mov
cmp
add
jns
or
sbb
in
mov
sbbb
xchg
pop
mov
fisubrl
fxch
mov
sbb
mov
xchg
rolb
dec
sahf
or
push
xor
inc
push
outsl
aaa
jg
aam
push
popa
cltd
jb
cmc
arpl
push
in
leave
mov
pushf
pushf
add
adc
or
sti
popa
mov
lods
fildll
sbbl
push
lret
sbb
jb
pushl
packsswb
stc
cmpsl
je
jbe
sbb
das
push
dec
ja
add
cmp
pop
lods
jno
ljmp
insl
enter
lret
mov
sub
mov
xor
mov
into
mov
sbb
ds
insl
inc
in
add
cli
call
sbb
leave
mov
mov
rorl
stos
pop
and
pop
shr
enter
add
inc
and
xor
ficoml
xchg
aaa
jecxz
mov
icebp
test
clc
jnp
mov
insl
push
xchg
data16
shrl
sub
shll
mov
cmp
push
or
mov
punpckhbw
lahf
data16
mov
xchg
and
lret
imul
lret
xor
fistpl
mov
aas
jnp
cltd
adc
jb
pop
jno
mov
sub
push
xor
sub
in
pop
decl
mov
fwait
imul
mov
pop
dec
or
jecxz,pt
and
test
xorl
aam
out
jns
int
lret
movsb
cmp
cmp
pop
stc
lret
mov
fwait
pop
mov
cli
fcoms
pop
std
fsub
adc
xor
cmp
aas
inc
push
jge
push
inc
adc
mov
push
lea
lret
aaa
mov
shrl
loop
mov
in
add
dec
pop
idivb
call
in
jg
mov
iret
out
sbb
sbbl
jle
sbb
sbb
inc
pop
mov
adc
mov
push
cmp
out
testw
lahf
and
inc
jnp
dec
and
adc
lea
xor
cmc
lcall
repz
cmc
xchg
ret
adc
cmp
pop
pop
imul
ror
xor
int3
sub
nop
aas
mov
add
inc
mov
sbb
enter
pop
je
xchg
shlb
call
cmpsb
outsb
or
jge
cli
push
insl
mov
out
push
loope
xorb
and
pop
sbb
mov
cmp
dec
outsb
pop
push
adc
fisubrs
xor
adc
push
outsb
lret
fisubs
add
or
adc
push
ret
aad
sub
pop
mov
mov
cmc
or
aaa
ss
jecxz
outsb
rcll
xchg
push
nop
rcl
jns
mov
xchg
mov
popa
xchg
insb
xchg
mov
fnsave
clc
sbb
cmpsl
sbb
sub
sbb
aaa
cmc
or
lds
dec
out
jo
decl
inc
or
push
call
xchg
push
in
cmpsb
sub
pop
add
leave
add
outsb
jns
add
loop
jo
jae
xchg
data16
cmp
aad
jns
aam
push
inc
rcrb
mov
aam
or
in
push
sbb
pushf
and
fdivrs
mov
mov
insl
rcll
mov
vmread
inc
lods
lock
pop
sub
cmpsl
ficompl
adc
shll
add
ja
inc
dec
aas
dec
and
jbe
jle
add
call
xchg
shll
mov
js
jns
data16
das
out
xchg
pop
sbb
movsl
leave
lock
mov
mov
add
arpl
xor
mov
cmp
cli
js
lret
lea
jnp
push
lods
xchg
pushl
dec
jecxz
and
inc
inc
mov
lcall
mov
add
jo
ret
test
test
loopne
sub
jbe
add
lods
imul
xchg
push
lods
push
dec
mov
push
test
pop
and
push
xor
repnz
shll
push
adc
test
push
add
mov
addr16
mov
pop
pop
mov
add
push
push
ds
js
outsb
outsl
mov
mov
inc
in
xor
scas
out
xlat
stc
repz
pusha
shlb
inc
sbb
jl
repnz
rcrl
cli
inc
or
pop
enter
imul
mov
fsubrl
mov
sub
and
pop
pop
mov
imul
jbe
pushf
cwtl
mov
adc
pop
dec
and
pop
lods
xchg
sub
fistps
and
jne
add
mov
pop
xor
fsubl
mov
jg
sub
cmpsl
add
jne
popa
xor
dec
dec
ss
mov
notl
ret
int
inc
and
roll
lea
ret
mov
xor
inc
aaa
mov
lods
sarl
push
das
xor
jg
aam
out
aaa
nop
dec
sbb
sbb
fiaddl
xor
addb
add
fsubl
jl
jecxz
and
push
pusha
call
stc
adc
sbb
push
ss
in
and
mov
scas
add
and
out
lcall
dec
push
mov
test
rcll
or
jae
lods
push
repnz
xor
fs
inc
jae
in
bound
jno
fstl
popl
inc
andl
mov
xchg
into
fists
bswap
ss
lea
in
cmp
stos
fsubl
xor
adc
sbb
mov
push
popa
mov
jecxz
arpl
andl
rol
ficompl
jne
xchg
icebp
stc
daa
xchg
cmp
mov
loopne
jl
imul
test
pop
cmp
pop
sbb
and
lahf
lock
aas
mov
lret
fstpl
xlat
aaa
les
cmc
bound
iret
pop
cwtl
sbb
xchg
sbb
cld
adc
jne
mov
pop
pushf
inc
and
cld
xchg
sti
leave
mov
aaa
adc
pusha
dec
xchg
lods
inc
std
adc
or
mov
push
push
nop
and
scas
xor
and
dec
mov
icebp
scas
adc
test
mov
std
loopne,pn
outsl
mov
dec
jp
add
scas
sahf
sub
lds
adc
xchg
ret
ja
push
fildll
inc
test
xchg
dec
stos
in
mov
xor
jmp
rcrl
sbb
mov
cmp
in
lods
dec
cmc
pop
js
add
aas
test
rclb
lock
xchg
clc
aam
inc
sub
lret
inc
fists
ljmp
shll
or
xor
hlt
jo
movsb
jg
jp
ret
arpl
stc
or
add
in
fwait
stos
push
test
adc
pop
pop
je
movsb
repz
fdivl
popf
addr16
pop
mov
or
xchg
xchg
push
rorl
push
xor
stos
mov
std
adc
into
push
and
sti
jp
repnz
mov
and
adc
out
xor
inc
rcl
in
xchg
add
imul
je
jge
add
jns
lods
push
iret
xchg
jg
outsl
sti
std
mov
sarb
cmc
and
jae
xor
je
jno
in
popa
or
xor
pop
repz
fs
loopne
call
bound
test
in
xlat
xchg
lcall
push
scas
push
fstpl
lods
mov
pushf
lea
xlat
pop
dec
nop
enter
jne
sub
addl
test
data16
out
xor
mov
stc
inc
fcoml
sahf
movsl
adc
xorb
pop
dec
dec
inc
jo
and
leave
lods
andl
xchg
xor
cmp
jnp
stos
int3
aam
or
cmp
dec
data16
or
jns
mov
out
push
or
jb
mov
jmp
call
adc
mov
scas
pop
mov
add
mov
jmp
lock
loop
inc
dec
mov
inc
movsl
xor
push
pop
fsub
push
pop
repz
xchg
iret
mov
inc
inc
mov
jb
repnz
and
xor
jno
mov
fcmovu
mov
inc
and
les
mov
mov
push
adcl
out
movsb
sub
movsl
lods
addb
call
sti
mov
adc
in
faddp
pop
xchg
rcrl
fnsave
aas
lahf
or
sbb
leave
je
inc
pushf
jne
add
outsb
sahf
adc
test
xchg
add
or
popf
pop
jecxz
outsb
sbb
hlt
mov
push
loope
sub
std
mov
mov
mov
mov
jmp
out
scas
test
addr16
xchg
inc
subb
xor
add
popf
and
fcompl
pop
stos
add
and
inc
stos
pop
ffree
jg
jne
lret
enter
fsts
pop
jnp
incb
jo
ljmp
add
out
lahf
push
dec
mov
xor
cmp
in
jge
dec
testl
gs
das
popf
aas
movsb
sub
inc
jg
rorb
ds
jge
cmp
or
jbe
sbb
push
lret
push
mov
xor
test
pop
mov
nop
rolb
cmc
xor
push
xchg
push
orl
mov
sahf
rolb
jle
sbb
inc
and
cwtl
mov
jl
mov
ret
stos
negb
aad
mov
xchg
out
jnp
mov
insl
bound
pop
mov
and
movsb
adc
popa
inc
jno
jno
ja
jp
fstps
ficoms
into
sub
xchg
pop
leave
fnstsw
mov
mov
cld
dec
xor
jecxz
mov
adc
ret
push
orl
jge
mov
dec
lea
pusha
imul
leave
push
movsb
loop
jl
xchg
adc
add
jnp
mov
int3
insl
sbb
in
sub
pop
xchg
cmp
test
xor
mov
aam
adc
cld
xor
dec
ret
sbbl
andb
sahf
fmull
in
push
in
pop
mov
fildll
sbb
mov
cmp
rcrb
mov
adc
cltd
inc
addr16
ljmp
xor
popf
out
mov
addr16
test
mov
ficoml
mov
les
sar
test
sub
xchg
mov
cmp
test
jo
je
int
xchg
push
out
mov
adc
idivb
and
sub
aad
jge
mov
push
incb
mov
bound
xchg
rorb
rcrl
lock
jle
dec
or
jp
mov
adc
ja
sbb
adcb
icebp
cltd
xor
fdiv
mov
xorb
sub
or
jns
jg
loopne
sbb
and
sub
mov
clc
fisubrl
iret
ret
mov
cmp
adcl
mov
mov
repz
imul
cmpsb
mov
inc
int3
icebp
pop
xchg
lea
insl
pop
inc
add
fcompl
loop
lret
aad
add
cmc
in
ja
clc
mov
dec
mov
mov
loop
mov
leave
lods
push
sbb
in
testb
fdivrp
int3
mov
mov
int3
jb
into
dec
neg
xchg
xchg
ljmp
test
mov
pop
jge
imul
lea
mov
jmp
mov
aaa
pusha
inc
movsl
mov
icebp
addr16
out
xor
movsl
sbb
int
or
aam
pmaxub
xchg
or
mov
push
xlat
test
bnd
test
add
out
mov
xchg
loope
popf
mull
outsb
adc
pop
mov
xor
xor
mov
stos
pusha
cmp
rorl
inc
sub
pop
cli
popa
test
mov
add
popa
hlt
gs
xchg
add
lods
ss
es
call
mov
pop
ss
enter
cmpsl
jb
and
adc
cs
inc
add
sub
cwtl
pop
int3
adc
outsl
inc
stos
push
mov
xchg
aas
lea
leave
bound
into
cmc
lds
inc
mov
fbstp
jbe
jle
int
inc
pop
in
stos
sbb
lret
or
test
mov
pop
or
pop
pop
rcr
mov
add
cmp
sub
dec
fists
mov
push
scas
push
inc
push
icebp
arpl
adc
and
xchg
mov
rolb
cmp
pop
jnp
mov
and
mov
mov
fdivrp
leave
dec
das
ja
sbbb
xchg
xor
lret
xor
mov
rcr
jno
jns
sub
dec
dec
imull
push
pusha
jecxz
xlat
inc
inc
inc
push
mov
and
sub
adcb
sahf
and
dec
jecxz
sub
faddl
stc
ret
cmpl
stos
and
out
xlat
repz
sbb
in
aam
stos
stos
jmp
add
dec
adc
int
jns
outsb
aad
xor
stos
add
adc
adc
imul
adc
dec
inc
out
jecxz
scas
repnz
adc
and
imul
xor
jb
push
in
stc
jbe
nop
cltd
fsub
shll
std
aad
arpl
xchg
ret
gs
push
int
jae
pop
jb
xchg
insb
pop
jl
pop
iret
pushf
scas
mov
xchg
xor
sarl
pop
mov
hlt
lods
inc
loope
add
xorb
xchg
mov
push
or
mov
sarb
int
mov
aaa
sub
push
lds
adc
loop
pop
fiadds
and
cmpsb
and
and
sahf
sub
mov
stc
push
adc
or
xchg
arpl
or
lahf
das
xchg
lods
iret
rol
jnp
jno
dec
jns
clc
jmp
cmp
jmp
loope
add
add
push
filds
jp
shr
rclb
jb
mov
iret
mov
sub
mov
push
loop
add
aad
lds
mov
jbe
sbb
push
adc
add
xorb
cli
mov
js
ret
inc
popf
and
hlt
in
mov
aad
push
xor
xor
sub
insb
rcrb
imul
or
cwtl
int
neg
cmpsl
std
jl
pop
lcall
mov
inc
es
xor
roll
xchg
xor
sbb
cli
pushf
into
int
and
or
and
mov
mov
pop
dec
xchg
xchg
cmp
mov
xor
xor
or
arpl
idiv
push
cmpsb
in
in
jp
and
ffreep
mov
rorl
jg
insl
mov
cmp
push
pop
mov
mov
js
mov
mov
out
sub
or
cmpsl
jne
mov
push
shlb
mov
mov
stos
cli
test
out
lcall
xchg
gs
cli
lret
push
rclb
icebp
xchg
xor
mov
mov
repz
out
push
xchg
mov
mov
aaa
dec
ret
sbbb
and
out
fdivs
mov
shlb
popf
outsl
xor
dec
in
adc
stc
pop
sbbb
test
jae
push
xor
cld
fninit
push
dec
sub
std
outsl
and
push
ss
outsl
in
and
imul
pop
rcl
pop
outsl
xchg
cmp
jmp
pop
popf
or
add
out
cs
or
shrb
cmp
std
je
xor
jl
aad
xchg
lods
sub
sub
sarl
jl
jle
pop
cmc
cltd
mov
in
bound
sarl
scas
shrl
arpl
pop
std
push
mov
mov
push
orl
addr16
mov
in
add
xchg
fisubs
inc
add
jnp
notb
cmp
dec
push
cmpsb
cwtl
enter
in
call
std
or
xor
jg
push
out
clc
xchg
jnp
xor
xor
adc
dec
push
out
mov
hlt
mov
cmp
mov
loop
in
push
or
add
dec
ret
mov
ror
mov
pop
pop
sbb
sub
repz
mov
push
movsb
or
daa
pop
lret
subl
addr16
xchg
cltd
jmp
xor
jns
pop
push
add
adc
push
mov
jns
outsl
mov
xchg
dec
xlat
leave
mov
ficomps
jo
lret
loopne
sbb
imul
or
orb
sub
jns
xchg
lods
scas
mov
inc
cwtl
inc
adc
push
ljmp
push
add
push
adc
jbe
mov
pop
mov
outsb
decl
push
cmp
pop
arpl
jecxz
dec
pop
mov
xchg
jns
xchg
cwtl
xchg
sbb
and
rsm
fisttpll
lods
mov
test
jmp
rclb
sub
inc
ljmp
mov
sub
pop
ljmp
mov
mov
mov
xchg
and
push
shlb
and
xor
das
or
out
sub
std
cli
fsubrs
sar
ds
lock
int3
inc
ret
jmp
stc
adc
lock
and
pop
jle
and
stos
scas
sbb
pop
roll
bnd
test
push
lods
push
aad
adcl
push
add
popf
jb
inc
clc
aam
jo
push
adc
xlat
shlb
sbb
loop
pop
sub
pop
xchg
in
in
mov
dec
or
outsl
icebp
mov
xor
pop
jne
ret
inc
add
dec
xor
adc
repz
push
fiaddl
out
xor
test
xchg
and
lahf
pop
nop
or
sarb
mov
out
inc
add
sbb
sub
mov
or
negb
mov
jl
lock
fninit
stc
cltd
cmpsb
or
pop
and
xor
mov
add
or
subl
ror
fs
dec
hlt
jmp
rcrl
jb
dec
push
pop
imul
xchg
mov
aad
aad
test
clc
loope
bound
nop
lock
jp
and
sbb
pop
and
ja
jecxz
push
and
scas
xchg
and
adc
adc
out
xchg
jg
lods
and
mov
mov
lahf
loopne
xor
cmc
and
sbb
dec
test
pop
xor
cs
jns
repz
xor
das
jecxz
push
sbb
pop
cmp
fcmovbe
mov
add
pop
fbstp
jge
jb
cmpsb
fcmove
outsb
adc
out
xchg
outsb
adc
jl
outsb
mov
andb
pop
out
pop
test
mov
add
pop
test
cmc
and
jge
fdivrl
lahf
or
sub
int3
inc
push
add
add
psllw
hlt
cmp
sahf
outsl
addr16
maxps
rcrb
insb
scas
hlt
jnp
in
xchg
mov
jl
jl
in
ss
lea
and
mov
mov
popf
push
stc
jmp
fisubrl
dec
scas
jmp
test
mov
pop
fildll
push
adcb
out
pop
mov
jne
push
pop
cmpl
outsl
push
loope,pt
xchg
scas
xchg
push
iret
jmp
addr16
cs
inc
loopne
in
sahf
and
stc
scas
adc
mov
push
push
test
or
std
add
pop
or
ret
mov
mov
push
lods
jo
mov
pop
decb
in
dec
gs
bound
push
jne
xor
leave
xchg
sbb
inc
lds
fisttpl
add
inc
shrl
xchg
cmc
pop
cmp
adc
or
daa
add
inc
dec
lahf
xchg
pop
int
cmc
xor
push
mov
add
sar
gs
cltd
lock
add
aad
filds
js
cmp
nop
jl
sub
cltd
adc
dec
or
movsb
aam
mov
xchg
nop
or
ffree
pop
loope
push
ja
mov
adc
popa
jbe
jno
jno
cmpsb
jne
pop
fbld
shlb
pop
mov
aad
jae
xorb
lds
orl
sbb
lods
and
mov
test
or
mov
mov
rep
push
and
aas
jle
dec
add
outsl
cmp
mov
cld
dec
scas
movsl
jg
push
flds
jb
cmc
mov
ret
jmp
sbb
pop
cld
out
xor
fisubrs
dec
cmp
dec
cmp
enter
mov
mov
aas
add
ffreep
stos
arpl
jl
push
xor
xchg
incl
outsb
mov
push
lret
dec
dec
test
pop
xchg
mov
lret
in
dec
sub
adc
enter
sbb
mov
hlt
cmp
lcall
cmp
out
stos
fcoml
xor
xor
or
fstps
sti
shrb
mov
not
stc
rcll
fsts
mov
test
les
jg
or
test
adc
hlt
mov
mov
aad
lahf
mov
hlt
and
xor
cltd
pop
cmp
jmp
movsb
and
test
sbb
inc
ja
movsb
jecxz
sbb
jb
hlt
jp
adc
loop
mov
cmp
ljmp
insl
mov
int3
das
scas
xor
fdivrs
insl
dec
and
mov
cli
jl
movsl
lahf
xchg
jbe
outsb
inc
push
repnz
data16
mov
outsb
or
loope
adc
jb
out
pop
mov
out
push
ret
ret
es
adc
xchg
mov
fstpl
int3
shrb
mov
fwait
scas
or
and
mov
daa
pusha
adc
pop
in
jg
aam
inc
or
push
in
pop
adc
jne
inc
stos
push
dec
jecxz
xor
scas
mov
nop
jbe
neg
shll
push
and
dec
repnz
jo
iret
mov
mov
inc
xor
mov
das
ret
ss
dec
std
or
fcoms
cwtl
xor
pusha
cmp
pop
sub
jnp
aad
push
xor
stos
jp
imul
adc
mov
mov
sub
push
pop
stc
and
and
jle
inc
jl
jg
pop
sahf
int
outsl
push
pop
roll
dec
dec
popf
sahf
mov
testb
jecxz
sbb
cmp
ljmp
hlt
hlt
lsl
mov
jo
mov
cli
out
push
mov
lahf
cmp
sub
dec
or
popa
sub
popa
test
in
inc
je
pop
pop
fbld
and
push
mov
pop
push
cli
sub
sub
jecxz
shr
out
sahf
inc
xchg
mov
adc
dec
insl
retw
xor
lods
insl
popf
push
mov
sub
sub
push
sbb
cmp
rcl
pusha
insl
push
test
cmp
pushf
scas
leave
shrb
adc
out
out
push
jmp
mov
fsubrl
pop
xor
std
test
sub
dec
std
add
add
fcoml
scas
push
cmpb
lret
xchg
pop
mov
lret
jge
pop
imul
fnsave
push
sbb
adc
in
daa
or
mov
stc
add
sbb
cld
ret
movsb
xchg
mov
jmp
out
xchg
or
ret
and
insb
enter
test
movsl
stc
out
pop
xchg
xchg
sbb
mov
sub
ret
arpl
xchg
xchg
xchg
les
xchg
xchg
or
and
xchg
stos
stos
rolb
inc
movsb
sbb
or
dec
xchg
jecxz
pop
mov
out
out
xchg
insl
test
and
xorb
inc
ret
add
mov
jae
ss
je
jle
cmpsb
sarb
cwtl
fstpl
sub
jmp
std
repz
xchg
pop
mov
and
sarl
xchg
pusha
jne
popa
push
fcoml
in
sub
jecxz
out
mov
pop
cmp
sarl
int3
xchg
push
out
jno
out
sub
xlat
roll
inc
mov
lahf
and
xor
jmp
xchg
xchg
and
fmull
mov
adc
add
jg
xorb
aam
push
sbb
icebp
jnp
rorl
outsb
xor
int3
outsb
imull
push
loope
test
mov
into
adc
pop
repz
jmp
cltd
and
popa
add
xor
leave
rcl
sbb
jno,pn
push
xchg
push
lret
sub
xor
stc
mov
out
push
pop
lods
cmp
add
or
pushf
lcall
pop
jne
push
cmc
add
inc
and
pop
shll
mov
sbbb
push
popf
sti
xlat
out
cltd
data16
es
lcall
syscall
jge
mov
das
pop
cld
sbb
ds
and
imul
dec
adc
into
or
xchg
xchg
mov
mov
mov
inc
dec
dec
icebp
je
cltd
loop
std
dec
inc
arpl
in
pop
sahf
inc
incb
push
jb
stos
insb
fidivl
add
stos
maxps
sub
out
sar
rcl
sbb
aaa
pop
push
les
mov
sub
mull
cmp
push
out
xchg
sub
outsl
pop
call
mov
mov
pop
sub
out
cld
negb
loop
lods
pop
mov
xchg
rorb
push
mov
ret
xchg
jmp
in
out
jecxz
sahf
jne
jb
pop
inc
cmp
xchg
icebp
mov
jl
mov
cltd
clc
sub
inc
fldl
xchg
cwtl
cmp
test
sub
sbb
and
mov
jmp
push
push
cmp
pushf
cmc
nop
es
bnd
stos
mov
sub
in
in
loopne
stc
hlt
inc
push
push
push
sarb
mov
js
inc
test
sahf
xor
jo
mov
in
je
mov
or
aas
or
cltd
lds
movsb
movsb
fidivrs
xor
mov
sub
sbb
push
sbb
push
scas
bound
mov
push
push
neg
jnp
jbe
push
pop
xchg
sub
lock
inc
pop
or
jg
and
dec
js
mov
pop
push
add
divb
mov
or
sub
push
jg
lock
push
adc
sbb
arpl
jns
into
enter
out
int
add
std
jo
xchg
fiadds
sbb
jg
cmp
or
push
cwtl
pushf
push
sarb
movsl
xchg
inc
inc
out
pusha
mov
xchg
sub
popa
cmp
popf
js
pop
push
mov
xchg
xor
inc
push
cs
orb
rcrb
adc
cltd
dec
repnz
mov
js
xchg
push
mov
adc
xlat
mov
adc
test
call
and
in
add
dec
iret
imul
insl
fildll
push
xor
mov
lods
xlat
loopne
data16
loope
cmc
add
lahf
cmp
sub
pop
gs
ja
out
cmpsl
inc
adcb
xchg
xor
std
mov
clc
pop
outsb
loope
stos
sbb
js
scas
xchg
test
or
clc
sbb
inc
lahf
je
mov
lds
push
repz
jl
cvtdq2ps
sbb
fistpl
in
test
adc
jmp
dec
cld
outsb
dec
jmp
jae
cli
and
icebp
and
add
scas
je
xchg
loopew
jge
ja
cmp
cli
out
js
pop
clc
mov
sub
jae
or
sahf
add
sahf
cmp
insl
jb
xor
mov
push
jl
movsb
dec
mov
mov
rorl
imul
in
xor
pop
xchg
imul
cmpl
loopne
jbe
ja
das
xchg
ret
decb
pop
dec
mov
pop
mov
adc
adc
add
sbb
inc
add
pop
jno
adc
adc
mov
jecxz
push
pop
bound
mov
or
push
pop
sub
cmp
cld
stos
and
pop
pop
negb
or
movsl
movsl
jcxz
scas
or
sbb
inc
les
iret
test
inc
cs
xlat
jns
push
shl
mov
je
add
mov
inc
icebp
xchg
out
imul
cld
bound
xchg
and
cmp
js
loope
test
dec
int
mov
test
leave
les
mov
adc
jg
xor
jnp
adc
loopne
sbb
test
ja
jp
fimull
scas
push
adc
test
jbe
hlt
subl
out
pop
adc
push
xor
rorl
mov
dec
sahf
xchg
xchg
mov
push
stos
ss
rorl
jb
sbb
cmc
adc
fstps
gs
enter
movsb
mov
out
ret
add
ss
add
cmp
adc
dec
xchg
lods
in
xor
fisubs
jecxz
enter
leave
lea
repz
cmpsl
or
dec
push
adc
cli
mov
pusha
dec
inc
std
aaa
xor
cli
in
push
xor
adcb
cld
dec
ret
cmp
dec
mov
ds
jae
push
adc
push
or
dec
dec
xlat
in
je
pop
push
lds
in
loop
sar
push
cmp
sbb
stc
clc
push
leave
hlt
sarl
adc
jb
mov
sub
pop
mov
mov
cmp
daa
push
jo
cmp
fcmovnu
out
dec
ret
jae
dec
into
int3
sahf
fs
pop
out
int3
jns
in
test
add
xor
std
dec
xchg
int3
dec
ljmp
aad
test
add
pop
jg
lods
push
stos
scas
lock
addr16
jp
xor
jg
jmp
xor
mov
xchg
adc
and
nop
iret
cli
das
cld
jge
inc
xchg
movsl
jmp
shl
push
and
enter
xlat
add
inc
fsubr
stos
or
shrl
ljmp
movsl
push
and
mov
inc
test
add
push
xchg
loop
rorl
fstpl
jae
adc
ljmp
sti
repnz
jmp
bound
out
and
js
xchg
adc
mov
fistps
ret
dec
pop
sbb
enter
sub
xor
xchg
mov
mov
andl
cltd
shrl
inc
dec
je
push
dec
dec
xchg
das
sti
cmp
xchg
rcl
scas
gs
push
pop
push
and
stos
hlt
clc
ds
icebp
test
xchg
sub
js
dec
ljmp
aam
xor
call
bound
cmc
mov
lock
inc
pop
test
lods
insl
repnz
inc
ret
movsb
jle
pop
pop
lods
adc
xchg
cld
pusha
or
inc
insb
enter
imul
scas
dec
ret
push
sub
fldt
cwtl
mov
pushf
cmp
inc
test
jbe
lods
in
movsl
inc
and
sub
jp
fdivs
sub
clc
lahf
add
jle
fbstp
ds
cmp
scas
inc
add
test
movsl
sub
mov
imul
jne
enter
push
push
xor
test
dec
jnp
inc
scas
cmp
mov
lock
adc
and
push
das
cmp
loopne
cmpsb
lods
sti
dec
xchg
bound
and
dec
sti
pop
pop
in
xchg
mov
imul
inc
push
sbb
add
xor
pop
jbe
aam
pop
int
inc
adc
pop
int
fists
popf
push
es
xor
sti
pop
mov
fldl
scas
cmpsl
xchg
sub
xchg
mov
call
mov
xchg
testl
xchg
adc
dec
push
mov
inc
push
out
cmp
mov
and
sub
call
ja
scas
jns
xor
daa
addr16
cmp
fcompl
fisttpl
or
and
xlat
sub
push
xchg
repz
and
leave
mov
mov
gs
xchg
xchg
insb
int
clc
xor
in
mov
mov
cmpl
fmull
test
or
loope
hlt
mov
sti
xchg
cmp
mov
xor
pop
cs
adc
adc
adc
push
xor
inc
std
hlt
shlb
jae
cwtl
into
and
xchg
push
test
inc
ret
pop
gs
cwtl
mov
add
pop
dec
cmp
mov
fadds
push
sbb
adc
cmp
sub
mov
cmp
rcll
mov
cmpsl
dec
cvttps2pi
faddl
fstl
shrb
ljmp
mov
pop
mov
mov
push
pop
movsl
jl
pop
shll
mov
iret
dec
call
lea
packsswb
nop
xor
mov
scas
sbbl
push
sahf
jne
and
sti
adc
insb
lock
dec
or
xchg
dec
mov
lods
xor
xor
test
jge
daa
mov
jecxz
cld
dec
pop
and
xor
loop
dec
int3
hlt
iret
jae
sub
jmp
ret
inc
sbb
out
repz
ficompl
int
fldl
xor
add
push
pop
fnstcw
jae
stos
enter
loop
sub
scas
adc
push
sbb
mov
iret
pop
mov
mov
push
add
jge
repz
aam
lret
xorl
xor
mov
addr16
imul
jb
add
adc
leave
pop
inc
dec
cmp
mov
sahf
inc
push
push
push
push
push
js
cmp
fldenv
mov
inc
incl
rol
call
mov
dec
repnz
je
mov
pop
xchg
dec
insl
test
cmpsb
aam
sub
or
aas
iret
mov
jns
pop
or
popf
fstps
mov
and
dec
cmpsl
rcll
cmp
into
or
adc
adc
les
ficoml
test
or
lods
shll
pop
xor
dec
ja
fsts
adcl
jnp
add
xchg
sahf
leave
pop
xchg
jbe
je
and
inc
sub
push
or
pop
outsb
adc
movsb
int3
add
push
in
inc
push
and
adc
arpl
paddq
fcmovne
sub
xchg
mov
xor
jmp
pop
cmp
dec
daa
sti
mov
scas
push
clc
xchg
or
pushl
xchg
and
push
in
fisubs
sub
data16
lahf
repnz
js
loope
mov
sbb
or
jle
fs
iret
or
or
mov
add
pop
in
mov
imul
lea
cmc
repz
repnz
inc
out
out
cltd
sbb
xchg
mov
out
in
shll
insl
inc
cltd
out
mov
xor
sbb
test
mov
cmc
loop
pop
sbb
dec
hlt
fldpi
ret
jae
nop
imul
imul
icebp
fisubrs
rclb
jle
mov
jle
repz
fldt
popf
xchg
repz
jecxz
sbb
xchg
adc
imul
cmp
fs
cmp
loope
push
mov
rclb
adc
jl
add
outsb
and
pop
push
mov
mov
add
icebp
dec
dec
inc
clc
int3
out
jno
mov
movsb
sarb
aaa
jl
lret
mov
push
mov
dec
push
xchg
cmp
and
xchg
movl
xchg
push
pop
adc
movsl
inc
leave
movsb
cmp
inc
call
shrb
pop
in
inc
mov
jmp
push
cs
or
inc
sbb
sbb
test
int3
xor
das
and
add
cmp
jb
lea
inc
or
cmpsb
push
fwait
es
and
cmp
stos
loopne
xchg
sarl
mov
sub
xlat
aaa
jmp
xor
mov
orl
rorb
cmp
or
adc
roll
call
push
inc
push
pop
popa
inc
ss
push
pop
aad
out
ret
arpl
mov
aaa
aad
push
xor
out
ja
insb
popl
lods
cmc
into
jp
arpl
scas
out
imul
in
pusha
sub
hlt
xchg
iret
movsl
call
nop
pop
and
ja
lret
push
iret
xor
sub
es
gs
lds
sbb
inc
or
ss
aam
mov
daa
cld
shl
int
jge
sbb
inc
stos
sarl
cmp
mov
fisttpll
pop
xor
mov
jmp
fcomps
movsl
pop
mov
pop
dec
jg
mov
dec
pop
pop
xlat
add
jnp
hlt
jl
inc
cwtl
stc
push
mov
sti
out
jae
ret
outsb
lods
addr16
dec
adc
cli
pusha
nop
mov
cmpw
mov
test
orl
dec
adc
adc
or
das
pop
fs
das
sbb
sarb
mov
mov
sahf
cli
enter
xchg
dec
dec
xor
es
cmp
mov
fstp
test
pop
leave
xor
fstl
shrl
mov
cmp
movsl
cmpsb
pop
jecxz
xchg
jecxz
sbb
cmpsb
add
shlb
lahf
dec
movl
jbe
jmp
mov
in
or
sub
dec
ljmp
movsb
inc
or
dec
jbe
call
sub
push
shlb
mov
mov
out
mov
sti
ret
inc
shll
adc
clc
jmp
lcall
and
outsb
xor
subl
sub
std
cmpsb
push
ffree
int3
adc
fnstsw
sahf
dec
add
es
fucom
inc
scas
out
pop
mov
shlb
scas
inc
jae
and
ljmp
ucomiss
ret
push
jnp
stos
mov
stc
push
clc
pop
cmp
test
pop
sub
cmp
fmuls
pop
enter
adcb
push
xchg
pushf
and
out
sbb
mov
scas
fwait
fwait
lds
push
sbb
mov
pop
xchg
and
push
addr16
orl
cltd
push
sbb
aad
jle
js
adc
pop
pop
pop
aas
add
outsl
insl
test
mov
cmp
push
ss
sbb
out
test
in
fsts
shll
test
subl
inc
mov
ljmp
rorb
dec
inc
stc
sbb
xor
call
fwait
adc
sub
mov
notb
mov
dec
inc
bound
test
cmp
mov
inc
push
jecxz
repz
repz
jp
or
inc
adc
push
cmp
call
jp
adc
sbb
jg
dec
sti
sub
lods
ret
test
aad
mov
repz
sub
xchg
sbb
mov
les
andnps
mov
sub
int3
lcall
dec
jb
dec
shl
push
rcrl
cmp
mov
jp
js
inc
loope,pn
add
pop
add
mov
scas
fs
xor
mov
add
stc
jmp
mov
mov
xchg
loopne
push
test
jmp
test
leave
push
inc
xchg
jmp
lock
xchg
out
add
cmpsl
popa
xor
pop
inc
scas
cltd
cs
push
rorl
jae
or
decl
or
pop
gs
popf
mov
pop
jecxz
push
adc
lret
fwait
xchg
inc
movl
adc
movsl
and
lahf
push
pop
jmp
test
pop
lret
mov
sub
push
fldcw
sub
sahf
and
mov
idivb
mov
mov
push
insb
test
xchg
mov
loope
outsb
adc
mov
mov
int3
int
or
add
cli
pop
mov
jb
xor
gs
cmp
adc
lret
inc
push
inc
sbb
lret
pusha
imul
lods
int3
add
jecxz
mov
add
fcomip
js
mov
je
push
idivb
hlt
call
mov
shll
data16
pop
mov
mov
dec
std
ja
jg
out
out
jb
loope
test
daa
aas
inc
cld
push
repnz
aaa
mov
cmp
loopne
and
mov
ret
pop
adc
cmpsb
inc
add
ss
test
pop
jp
fldt
mov
jno
and
imull
enter
xchg
mov
mull
icebp
dec
mov
pop
lcall
std
nop
ret
in
test
icebp
xchg
or
jno
jp
fwait
mov
popf
sahf
nop
wrmsr
add
lret
xor
adc
in
in
mov
das
pop
icebp
sbb
push
add
pop
shll
ljmp
in
inc
cmp
cmpsb
mov
push
dec
dec
nop
inc
push
scas
addl
test
cmp
fiaddl
cli
ret
popf
ret
mov
fwait
push
lods
dec
imul
fwait
ret
data16
xchg
shufps
repz
jecxz
jns
lret
sbb
and
mov
inc
push
jne
stos
mov
mov
sub
mov
dec
jp
jge
jns
daa
jl
in
add
mov
xchg
pushf
ret
dec
sub
xchg
jns
gs
adc
add
push
ret
adc
aam
and
sbb
enter
jnp
leave
test
stos
ds
sahf
lea
pop
mov
adc
int3
sub
orb
cmp
jae
leave
lods
or
xchg
jns
mov
add
repz
ss
xchg
repnz
inc
dec
int
test
add
leave
gs
ja
cmp
jns
xchg
add
sub
sub
mov
popf
nop
pop
sbb
divl
out
xor
loop
cmpsb
pusha
lcall
jo
lods
sbb
and
pop
shll
rcrb
ljmp
lods
out
pop
jbe
adc
imul
or
aaa
nop
xor
mov
out
xchg
jo
xchg
call
xor
pop
dec
push
cli
mov
popa
add
add
imull
rcrl
jecxz
popf
in
out
fistpl
clc
jl
mov
out
imul
mov
push
add
push
lcall
lahf
addl
arpl
mov
push
xchg
stc
test
aaa
imul
jl
mov
fstps
mov
xchg
mov
ret
jo
jae
xor
adcb
add
mov
iret
nop
xor
int
jecxz
ja
movsl
or
xor
fldt
and
adc
fisubrl
push
jo
jne
lret
jb
dec
or
repz
pushf
in
jns
cmp
adc
popf
xor
jmp
test
jge
pop
aas
ljmp
cmp
xrelease
mov
inc
mov
cld
xchg
push
lods
sbb
mov
jp
jge
mov
orl
mov
loope
das
push
int
xchg
cmp
pop
movsl
into
out
sarl
push
or
mov
outsb
and
push
lcall
xor
adc
sbb
fcoms
es
fs
cld
loopne
or
es
ret
inc
cwtl
les
es
add
adc
in
outsl
mov
jo
mov
test
ret
arpl
loopne
push
test
subl
sub
xchg
das
push
xor
filds
jg
inc
out
imul
xchg
in
or
xchg
sti
pcmpgtb
aaa
xchg
ret
push
and
jecxz
pop
rcr
pop
mov
jge
sar
mov
push
jmp
inc
ret
jnp
pop
pop
cmp
jne
sbb
ja
leave
mov
incb
jg,pt
sub
xchg
mov
loope
mov
jb
push
adc
jg
mov
outsl
sub
int3
sub
sahf
insb
shrb
mov
and
cmpsb
push
icebp
sub
dec
insb
popf
ror
hlt
push
or
push
aad
mov
out
scas
xor
adc
pusha
jns
daa
mov
mov
pop
sub
inc
inc
jnp
repz
mov
xor
xor
jnp
lcall
ret
clc
insl
testb
cmc
jg
jbe
lods
dec
scas
cmp
push
add
or
ret
jmp
push
fsubrs
lds
into
inc
mov
ret
cs
push
je
mov
es
loopne
stos
fwait
es
pop
out
ss
shl
push
cmp
call
cmpsl
sti
cld
mov
icebp
jmp
push
add
into
lea
sub
jnp,pt
out
fildll
mov
inc
out
pop
outsl
ret
imul
gs
xor
insb
sbb
test
sub
adc
mov
cmp
jp
dec
sbbb
fcom
jecxz
xchg
and
ljmp
xchg
addb
jp
push
lea
and
lahf
cmp
adc
and
scas
add
cmp
call
mov
je
fsubp
or
pop
xor
or
enterw
loope
es
xor
jo
or
repnz
lods
pop
outsb
mov
lods
jp
inc
arpl
rcr
cmp
jnp
out
inc
outsl
cmc
stc
dec
lock
pop
dec
fcompl
push
ja
dec
fcmovbe
mov
add
sti
lods
pop
pop
xor
in
push
arpl
mov
add
stc
scas
sub
cltd
popf
mov
fldl
add
out
fisttps
jae
sbb
imul
xchg
or
or
xor
loope
sub
out
lods
cmc
or
mov
cmp
mov
ds
incl
ret
sub
ret
ror
popf
cmc
inc
sbb
fcmovne
outsb
sbb
icebp
inc
into
push
jb
arpl
ret
mov
jl
push
cmpsl
sbb
inc
pusha
loop
popf
lcall
xor
inc
shlb
lret
cli
out
sub
xchg
mov
mov
xchg
jl
jnp
dec
das
pop
lds
or
mov
push
inc
push
lcall
dec
ja
sbb
fwait
and
lret
pusha
xchg
cmc
pusha
nop
pop
nop
aad
xor
mov
lcall
inc
push
push
sbb
or
mov
pop
mov
out
fucom
push
adc
xchg
addr16
pop
sub
subb
mov
hlt
test
and
popa
aaa
push
sub
pop
ds
aam
mov
incb
and
into
fnsave
icebp
xchg
add
mov
jge
push
push
and
inc
lahf
negl
ss
fwait
push
adc
and
cmovne
mov
test
ds
out
mov
pushf
loopne
pop
in
pop
jp
lret
stos
shr
and
pop
inc
dec
fnstsw
dec
pop
fidivs
cmp
jno
push
dec
fnstsw
xchg
aam
out
imul
sbb
ljmp
jge
add
sub
loopne
adc
or
push
int3
cli
fdiv
daa
adc
adc
push
in
rcrl
pop
push
pop
ljmp
sub
or
mov
xchg
add
xor
int3
add
sbb
mov
in
inc
dec
das
cli
out
mov
into
loop
and
cld
and
jge
inc
sbb
es
shufps
pop
xor
or
jns
xor
aaa
or
and
push
das
int
jp
aad
sbb
lret
pop
fbld
mov
push
add
loope
or
fxch
add
push
xor
mov
lods
push
int3
inc
loope
mov
jecxz
mov
mov
xor
sbb
scas
mov
shl
gs
aam
bound
xor
cmpsb
sub
popa
aam
subb
jge
negl
mov
jnp
fdivrs
es
stc
mov
stos
pop
sarl
pop
aaa
inc
mov
mov
pop
sub
cld
ljmp
cmpb
cmp
and
das
xor
out
mov
in
aas
insl
es
push
cmp
dec
lock
repnz
mov
insb
adc
add
rol
pushf
pop
and
or
pop
sti
or
in
lret
scas
sub
jl
mov
scas
sub
dec
push
icebp
sub
mov
stos
push
mov
jnp
jno
cmpsl
lock
mull
inc
insb
jbe
push
xor
repnz
inc
inc
insb
outsb
test
dec
in
cmpsb
cld
jne
and
dec
shrd
out
outsb
insl
loopne
shl
in
popf
xchg
cli
stc
insl
sbb
clc
dec
icebp
in
xor
push
mov
idiv
hlt
call
cli
fsts
subb
xchg
mov
cmp
jp
xor
lcall
push
push
mov
les
enter
fldcw
or
repz
cmp
jno
fdivrs
iret
and
scas
sbb
test
dec
lcall
movsl
inc
jp
in
stc
out
and
mov
imul
adc
fcom
sub
push
lret
fisttps
sahf
push
inc
mov
iret
movsl
insb
xor
xchg
pop
cmc
jge
rol
add
ror
jecxz
mov
mov
stos
jne
popw
pop
es
js
push
mov
int3
lock
cwtl
add
or
adc
push
jge
cmpsl
mov
in
ret
adc
insl
jge
mov
xor
aam
sbb
iret
sahf
push
std
sahf
lahf
and
rcr
fimull
lds
sbb
mov
pop
cmc
bound
push
lea
lcall
lea
roll
xlat
loopne
testl
cmpsb
test
rcrb
divl
add
push
rcrb
adc
mov
mov
push
clc
loop
jl
test
cmc
ja
in
loope
outsl
dec
roll
push
jmp
mov
sbb
mov
pop
sub
add
push
cmp
xchg
stc
popl
mov
hlt
cwtl
push
dec
scas
push
cmp
and
stc
mov
dec
push
mov
sub
jns
mov
xchg
mov
outsw
arpl
inc
hlt
lods
sahf
adc
scas
fdivs
std
mov
jne
jle
sub
cmpsl
loopne
mov
mov
push
mov
cmp
mov
push
push
movsl
out
jo
adc
mov
jne
pop
sbbb
adc
sbb
add
pop
sub
mov
insb
sbb
inc
sub
aam
mov
dec
shlb
dec
cmp
pop
dec
shlb
fdivs
mov
insl
lods
push
dec
xor
lret
xor
pop
mov
xchg
mov
in
pop
inc
xchg
out
lcall
add
sub
pop
clc
loop
jb
xor
mov
adc
loope
in
pop
rcr
mov
inc
daa
jge
mov
sbb
movsb
cs
sbb
outsb
and
xchg
gs
pop
xchg
and
mov
neg
imul
xchg
mov
mov
data16
sarl
cmp
popa
mov
jecxz
lods
rorl
push
fnstenv
push
rcrb
jmp
jns
aad
and
ja
in
or
mov
pop
shrl
cmp
sarl
iret
inc
pop
mov
sub
or
pop
and
inc
lods
leave
lock
adc
jno
mov
lods
mov
cmpsl
mov
or
jge
jle
int
xchg
rorb
jo
test
ds
or
outsb
adc
bound
or
fdivs
sub
and
cmp
mov
icebp
jbe
out
jecxz
mov
out
std
mov
sub
rorl
int
mov
sub
in
sbb
lret
dec
arpl
sahf
mov
out
xchg
inc
popa
push
inc
pinsrw
dec
or
xchg
insl
pop
add
pop
add
shrl
mov
fs
ja
mov
mov
push
jno
cld
jmp
into
add
dec
cmp
jecxz
mov
sub
or
and
jb
dec
dec
addr16
out
mov
sbb
mov
punpckhwd
out
lock
mov
pop
or
in
mov
shrl
ja
xchg
pop
movsl
fwait
ret
jne
outsb
sbb
xor
xchg
adc
push
push
enter
jmp
xchg
push
lods
fcoms
push
subb
dec
dec
call
rorl
aad
mov
push
xchg
imul
icebp
mov
sbbl
adc
cmpl
cmpl
dec
ss
insb
sahf
inc
pusha
mov
mov
test
mov
xchg
sbb
inc
int3
xchg
push
cmp
or
scas
rcrb
mov
jb
mov
jno
cmp
incl
xlat
push
in
add
popf
mov
les
add
jnp
adc
dec
jmp
in
cmp
or
notl
mov
ret
mov
repnz
enter
dec
mov
inc
sub
pop
inc
insb
or
xchg
aad
jecxz
gs
dec
adc
rorb
sub
pop
mov
jne
dec
lret
aaa
push
mov
dec
loopne
mov
pop
insl
jl
jo
dec
pushf
ljmp
icebp
nop
xchg
jle
dec
sar
addb
das
int
fisttpll
sbbl
outsl
mov
cs
std
mov
xchg
xor
jmp
push
lret
jbe
mov
shlb
pop
icebp
push
cs
add
rol
test
jne
in
mov
pop
outsb
xor
inc
mov
fwait
pop
push
loopne
mov
imul
mov
frstor
movsl
movsb
pop
and
dec
inc
nop
lret
data16
fsubrl
and
loopne
popf
adc
fisttpll
jle
stos
and
int
inc
adc
mov
outsl
dec
ret
cmp
enter
iret
call
sahf
pop
xchg
xor
pop
mov
icebp
sbb
inc
mov
and
jge
jmp
jle
pop
sbb
leave
mov
pop
push
mov
call
in
nop
loope
shll
div
xchg
inc
filds
pop
lods
xchg
imul
jecxz
enter
mov
push
sahf
push
adc
sar
cmp
stc
mov
cmp
repnz
cmp
arpl
hlt
and
lcall
daa
mov
or
arpl
inc
xlat
cmp
aam
cli
or
xchg
dec
xchg
cmpsb
xchg
adc
mov
cmc
jb
xchg
lret
fcomip
sub
je
out
pop
daa
sub
push
stc
inc
test
outsl
jne
or
insb
pop
fsubs
dec
jmp
rcll
out
aas
imul
sub
jp
addr16
insl
jecxz
jno
cmc
jg
aas
pop
mov
mov
lret
dec
cmpsb
mov
push
cmp
inc
xor
imul
test
imul
mov
inc
xchg
es
mov
ror
in
sub
mov
add
addb
lret
cmp
addr16
lahf
scas
outsb
or
icebp
mov
push
ret
cwtl
pop
lahf
cltd
dec
xchg
and
fldl
dec
mov
call
adcb
cmp
ss
sub
out
gs
aaa
push
mov
fwait
add
sub
in
dec
repnz
pop
sbb
mov
push
icebp
int
mov
out
mov
sarb
xor
hlt
int
cmc
out
lock
in
test
xlat
mov
and
dec
arpl
push
sar
mov
jne
pop
jg
xchg
cmove
insb
xor
push
push
cmp
inc
adc
push
popf
and
in
notb
sub
pop
ljmp
andb
nop
push
adc
xchg
xadd
sahf
stc
ss
adc
fdivl
nop
cmp
mov
into
fistpll
inc
or
mov
int
fbstp
imul
xchg
add
mov
cmp
pusha
xor
les
mov
imul
pop
cmpsl
mov
push
lods
mov
test
dec
xchg
fsubrl
loope
aam
scas
mov
xchg
push
jge
test
mov
pop
dec
mov
mov
jns
dec
fiadds
sbb
inc
out
xchg
mov
sbb
adc
add
adc
in
in
add
call
pushw
ja
ja
push
mov
add
sub
scas
incl
sbb
pop
inc
int
jecxz
ljmp
inc
pop
cwtl
pop
mov
push
rcll
xchg
cli
or
xorb
scas
dec
stos
adc
sub
mov
xor
ljmp
test
clc
cmpsl
dec
das
add
insb
lret
in
fildl
leave
scas
cmp
popf
test
xchg
pop
jmp
mov
pop
push
in
movsb
mov
dec
lahf
mov
pop
xchg
and
adc
inc
addb
test
insb
jge
adc
push
sbb
dec
dec
or
sub
pop
out
mov
pop
fs
sbbl
xor
lock
in
add
aam
dec
inc
cmp
lret
bound
xor
adc
std
sub
sub
xor
mov
mov
xor
pop
push
fs
pop
ret
out
jg
pop
xchg
ja
sub
sbb
mov
sbb
in
cmp
add
test
loop
cmp
push
incl
jno
cmp
enter
lds
adc
mov
pop
adc
dec
stos
in
pop
push
imul
insb
inc
mov
adc
push
and
fprem1
test
cld
sbb
adc
fisubrl
pushf
pop
push
xor
jo
sub
out
int3
pop
ss
push
imulb
dec
popa
pusha
cmp
fildll
jecxz
repnz
cmpsl
jge
test
mov
out
xor
hlt
fnstcw
xchg
in
cmp
js
inc
jns
movsl
cmp
adc
xchg
mov
mov
loopne
lahf
push
int3
or
arpl
jg
lahf
scas
xchg
sub
cwtl
cmp
dec
sbb
cli
cmp
repz
imul
or
movsl
xor
push
fbld
pop
and
jns
jnp
daa
jbe
movsb
out
xchg
jo
icebp
mov
mov
aaa
std
xlat
add
cs
inc
dec
ds
pop
jp
xlat
fimull
adc
xchg
xor
popf
jb
sub
hlt
push
enter
stos
movsb
jae
inc
xlat
in
aam
loop
mov
adc
adc
movsb
and
scas
sub
sbb
popf
jmp
scas
pop
dec
inc
xor
stos
pop
sub
push
mov
adc
cmp
mov
pop
loope
xchg
popf
sub
sarb
add
shr
or
push
les
push
cwtl
xor
fs
push
repnz
inc
cld
cmp
cli
dec
cmpsl
scas
xor
dec
xchg
outsb
or
imul
std
xchg
rcrb
pop
inc
cmp
adc
insl
mov
mov
adc
mov
mov
ret
divl
or
mov
push
xor
lods
nop
jle
outsb
jmp
lret
popa
aas
pusha
test
cmpl
sti
imul
jae
dec
and
inc
movsb
and
sti
push
stc
in
mov
js
cmp
adc
jmp
bound
mov
std
xchg
add
lock
mov
out
push
xor
in
xchg
xchg
int
adcl
sti
and
cli
mov
shlb
jp
fildll
out
sbb
xchg
xlat
je
fisubs
bound
pushl
flds
sarl
lret
stos
xor
lcall
sub
pop
push
aaa
mov
es
mov
push
xchg
pop
inc
sbb
adcb
test
js
lock
pushl
xbegin
aam
call
and
add
adcb
cli
push
adc
das
movsl
out
sub
movsbl
mov
loope
test
jmp
mov
aad
mov
js
insb
sub
jmp
pop
pop
imul
clc
ss
iret
ret
imul
adcb
pop
xor
cltd
jle
sti
out
push
jp
inc
cli
int3
jmp
rolb
mov
stc
jo
sbb
pop
cmp
push
jge
fcompl
bound
inc
xchg
inc
ja
cmp
cmpsb
movsb
add
push
mov
popa
not
fwait
mov
xor
mov
xchg
push
cs
dec
out
test
dec
mov
pop
jbe
sbb
icebp
fwait
aaa
adc
adc
dec
loope
jae
or
pop
mov
lods
lret
mov
in
pop
cwtl
int3
filds
sub
and
cltd
testl
js
mov
shll
push
test
jbe
mov
mov
add
jns
adc
sbb
fs
xchg
dec
popfw
lds
insb
aaa
shlb
inc
sbb
push
sbb
movsl
pop
and
dec
stos
arpl
shrl
out
pop
push
or
jp
nop
lret
xor
adc
addr16
ljmp
xor
jno
push
daa
inc
shll
andl
push
mov
test
arpl
xor
sub
das
add
ljmp
inc
push
and
cld
xchg
cmpl
or
loopne
lods
cmp
fsubs
fdivs
loope
je
or
adc
test
sbb
cld
stc
xlat
jp
sub
and
hlt
jae
mov
fdivs
xor
mov
std
test
je
push
xchg
mov
cmpsl
or
cmp
push
sub
sub
mov
and
scas
daa
int
fsubl
out
mov
xchg
push
popf
push
add
xchg
push
insb
cltd
and
xor
pusha
pop
shr
out
imul
adc
nop
mov
pop
ljmp
mov
dec
insl
sub
lret
pop
mov
mov
xchg
and
test
fisttpll
lea
call
cmpsl
das
lods
cli
stc
out
jns
mov
mov
push
add
out
xlat
lock
scas
popa
fs
lea
cmp
imul
lods
inc
int
or
ret
in
cmp
push
subl
bound
jbe
cmc
mov
mov
test
icebp
mov
and
aaa
inc
pop
adc
xor
dec
mov
in
or
mov
sahf
addr16
or
aas
lods
xchg
jecxz
repnz
insl
leave
pop
mov
jmp
inc
leave
mov
jl
subb
sub
das
loopne
adc
in
jp
mov
xchg
hlt
push
cmc
inc
adc
sub
mov
sbb
xor
mov
ja
ja
push
pop
int
mov
mov
cmp
sbb
sbb
jle
rcll
test
and
jae
test
ss
sbb
out
clc
dec
dec
inc
push
jg
xchg
jecxz
icebp
lret
sbb
mov
jmp
sub
and
cmp
pop
nop
into
lea
pop
and
adc
or
sbb
ja
dec
cmp
jge
shll
pop
cli
xchg
mov
cmp
and
jle
mov
jno
mov
push
pop
xchg
adc
test
add
into
jo
out
pop
stos
inc
arpl
sbb
pop
cs
lds
mov
in
pushf
pop
ret
out
add
xchg
mov
xchg
clc
mov
pop
sahf
sub
sbb
insl
fdivrs
push
dec
add
iret
lock
lret
rorl
fildl
imul
repz
js
mov
sub
fwait
stos
xor
and
lea
sahf
adcl
stos
adc
pushf
mov
xor
aas
cmp
imul
fistps
out
pushf
mov
ret
mov
add
pushf
mov
sti
or
push
sub
jo
jno
cs
fwait
movb
and
jbe
fistpll
repz
cmp
xor
push
jecxz
rcrl
sbb
enter
jmp
or
sbb
pop
and
enter
cwtl
inc
dec
movsl
and
fimull
popf
dec
movsl
fs
or
or
xor
jl
int3
mov
or
insl
pop
stc
hlt
cltd
mov
and
inc
mov
dec
pop
inc
jae
pop
sub
stos
bound
insb
cld
lds
pusha
or
bound
js
jns
imul
mov
pushf
xchg
mov
xor
add
jne
lret
sti
cld
add
aam
sub
out
mov
or
fidivl
inc
dec
in
cmp
sbb
out
inc
aad
sar
scas
mov
cmc
pop
mov
faddl
dec
mull
push
lea
rclb
shr
push
dec
pop
xchg
lods
stc
pop
mov
sub
xchg
movsb
repnz
scas
popf
and
mov
sub
into
ds
mov
mov
addr16
and
inc
sub
xor
jl
xchg
test
xchg
fmuls
jge
insl
mov
mov
adcl
cmp
inc
pop
cmc
mov
ds
sub
test
dec
push
outsb
int3
call
fldenv
fistpl
dec
jo
xor
imul
inc
dec
rolb
clc
enter
aaa
mov
mov
arpl
mov
hlt
movsl
xchg
in
std
shlb
imul
mov
xor
adcb
ljmp
loopne
pop
dec
loopne
xchg
mov
inc
xchg
inc
cmp
cmp
testb
aas
gs
xlat
jbe
push
mov
sub
mov
shld
dec
sub
imul
pop
ret
sbb
sbb
movsb
shl
and
and
push
or
stc
mov
and
pop
std
insl
popf
or
jl
sbb
cmc
mul
jo
outsl
xchg
cmp
cmp
push
aas
das
push
aam
sbb
and
jnp
lods
aas
pop
cli
mov
pop
mov
imul
out
mov
pop
push
fs
in
pop
aad
xor
add
out
xor
out
ret
pop
test
sbb
inc
jb
test
movsl
add
repnz
in
xchg
inc
pop
xchg
jp
dec
jp
cwtl
in
sahf
je
mov
arpl
mov
outsb
ss
fs
call
lret
rcrl
fistl
push
push
mov
negl
std
in
sub
xchg
xor
sbb
loop
imul
push
popa
stos
dec
mov
int
cld
xchg
iret
jle
jp
lds
lods
jnp
fwait
in
cmp
and
into
pop
shrb
imul
xchg
mov
iret
cmp
mov
addl
push
mov
sbb
popf
mov
jp
mov
mov
cmp
jae
aad
push
sub
lahf
add
mov
or
iret
out
mov
lret
mov
xor
jno
mov
adc
outsb
stc
pop
push
inc
inc
in
mov
push
call
xchg
and
mov
lret
xchg
fwait
enter
lods
adc
cmp
jg
and
cmp
fsub
repnz
int
lock
cs
icebp
jl
or
or
push
xchg
pushf
xchg
jo
repnz
loope
add
shrl
mov
inc
lret
pop
jecxz
movsb
je
cmp
mull
inc
jle
fidivrl
nop
cwtl
lds
xchg
jnp
jne
in
mov
jae
push
mov
js
push
lcall
mov
dec
inc
dec
cmp
or
cmp
movsb
pop
inc
dec
sub
int
sbb
mov
mov
andb
das
mov
add
out
lcall
pop
mov
mov
xchg
push
mov
jo
lcall
fbld
jle
adc
aaa
adc
leave
jb
cld
outsl
js
mov
adc
push
pop
das
pop
sub
dec
test
add
pop
or
lds
push
add
idiv
lahf
sub
cmp
aam
pushf
scas
movsl
sub
out
cmc
pusha
jl
add
jo
repz
mov
repz
dec
adc
xor
jb
out
lcall
sub
lods
outsb
xchg
sub
adc
cmp
testb
mov
jne,pn
call
lret
and
add
int
mov
nop
sti
cmpsl
cmpl
in
fmulp
cli
xlat
and
dec
mov
dec
ljmp
test
nop
rorl
popf
fcomi
dec
ss
dec
fdivrp
dec
lcall
ds
jno
push
mov
loopne
push
sub
addr16
enter
inc
mov
lods
cmp
movsl
aam
and
push
jbe
dec
cmp
mov
jns
add
push
xchg
xchg
mov
lret
lds
sahf
mov
add
mov
mov
dec
and
jg
dec
cmp
in
xchg
xor
cltd
mov
ja
shll
pop
xor
pushf
push
insb
jae
shll
clc
fistps
add
dec
fcmovnbe
aaa
fidivrl
or
xchg
out
cld
sbb
js
out
inc
mov
push
xchg
sti
sbb
and
in
daa
and
push
jns
leave
dec
or
les
add
pushf
jne
inc
mov
mov
cmp
lcall
repnz
cmp
out
xchg
xchg
out
pop
jp
or
adc
ret
int3
mov
leave
stc
lock
call
sbb
and
popf
mov
mov
rorl
xor
or
sbb
sub
jns
out
daa
cmc
push
jne
pop
push
fs
pop
and
fbstp
pop
dec
pop
test
jno
sub
jmp
lcall
lock
and
aad
repnz
inc
rolb
fimull
pop
xchg
push
test
cmp
and
sbb
jcxz
mov
mov
jae
rcrl
addl
fistps
mov
lcall
jge
pslld
push
xchg
push
inc
jl
aam
xchg
aaa
pop
arpl
pop
cltd
mov
mov
jecxz
imul
and
mov
cmp
gs
ja
mov
dec
sbb
popa
jle
jmp
cmp
jae
pop
shll
jb
lea
adc
mov
push
xchg
mulb
in
pop
lret
xchg
pop
lret
mov
mov
decb
sub
cmpb
jne
leave
push
or
repnz
loop
inc
mov
jbe
cmp
mov
fwait
test
cmp
jp
dec
orb
xchg
or
mov
inc
loopne
xlat
xchg
dec
repnz
fs
push
inc
adc
cmpsl
and
push
test
loopne
iret
in
lret
add
or
int3
sub
and
mov
xchg
adc
jmp
cmp
bnd
or
inc
pop
inc
das
xlat
jmp
lahf
add
fisubrs
inc
fs
iret
out
mov
out
dec
inc
fsincos
mov
je
mov
mov
jl
mov
testl
mov
pop
std
int3
or
dec
fwait
xchg
cwtl
subb
loop
pop
scas
jne
lock
insl
mov
cltd
shrb
push
movsl
push
ja
add
mov
mov
ds
xor
sahf
in
lret
mov
sub
inc
mov
mov
mov
into
ret
cmp
mov
pushf
inc
and
and
sub
mov
dec
push
jne
in
aaa
int
sbb
and
fsubp
test
mov
or
pop
adc
pushf
mov
arpl
outsb
or
in
fimuls
sbb
push
sbb
xor
test
in
lds
aam
xchg
mov
push
or
lret
push
int
iret
sbb
out
sub
jno
jp
addr16
out
fisubrl
sub
in
adc
mov
pop
mov
popf
nop
inc
ja
mov
fldl
int
adcl
ret
les
in
jbe
cmp
pavgb
pop
shrb
repnz
xchg
outsl
and
mov
scas
mov
outsl
mov
add
mov
dec
imul
sbb
movsb
stos
push
js
in
xchg
jae
pmaddwd
jg
out
pop
push
adc
dec
lcall
mov
sarb
rcrb
notb
dec
push
lods
xchg
fists
pushf
push
jl
movsl
pop
or
jb
dec
lds
dec
lock
in
pmaxsw
adc
dec
mov
inc
clc
jmp
pop
in
fsts
and
clc
nop
in
mov
or
pop
sarl
inc
jne
ljmp
xor
sbb
mov
mov
push
mov
jmp
or
icebp
and
test
js
popa
out
ret
sbb
insb
js
push
je
mov
jnp
int
cmc
bound
daa
pop
inc
push
jl
mov
cmp
sbb
pop
xchg
aam
jno
mov
arpl
push
xor
fsubr
sbb
les
dec
cwtl
lcall
dec
insb
cmp
jmp
cld
icebp
sbb
jo
xchg
fnsave
fcoms
inc
movsb
jp
cmc
push
jg
mov
imul
cmp
mov
dec
data16
aad
sbb
jbe
sbb
pop
daa
and
dec
scas
cmp
popf
gs
das
dec
sti
jmp
icebp
sbb
mov
fwait
or
scas
loop
ds
pop
loop
scas
sub
call
ds
push
xorb
dec
dec
and
pop
ja
push
stc
pop
loope
xchg
inc
aad
and
rcrl
mov
loopne
mov
mov
cwtl
mov
jo
int3
and
push
gs
adc
ds
mulb
sbb
lcall
imul
ds
cmp
std
pop
mov
xchg
cmpsb
daa
xchg
jns
mov
cmpsl
je
xchg
data16
int
add
loopne
dec
add
xor
adc
sbbb
call
in
push
filds
sbb
fldenv
add
sub
mov
sub
or
dec
popf
add
shlb
cmp
mov
das
cmpsl
pop
rolb
imul
dec
push
addr16
fwait
pop
dec
fidivrs
sbb
fildll
pop
out
mov
inc
dec
sbb
fiadds
push
es
test
in
pop
lods
loop
fsubl
fmuls
xchg
jle
inc
push
push
cmp
in
repnz
xor
ret
cmp
inc
sbb
mov
movsl
push
and
sbb
fdivs
jbe
mov
repz
lods
mov
push
stos
popf
cmp
cltd
fwait
xor
fucom
mov
pop
add
dec
and
imul
xchg
cmp
movsb
adc
outsl
js
mov
mov
call
jmp
jnp
inc
inc
data16
adc
pop
repnz
push
cmpsb
and
movsl
inc
jmp
push
int
sbb
xchg
lcall
jnp
pushf
sbbb
stos
pop
js
out
inc
gs
enter
cmp
call
mov
xchg
inc
mov
fs
cmp
loopne
clc
imul
mov
xor
sub
sub
dec
xchg
ja
bound
pop
shll
lcall
inc
subl
push
into
push
pop
mov
mov
adc
orl
pop
jo
popf
into
or
xlat
stos
loopne
pop
test
cmpsb
rclb
jecxz
sbb
inc
mov
ficoms
inc
sbb
movsb
ja
leave
into
xchg
xchg
adc
adc
rolb
scas
enter
lcall
gs
in
cli
lea
mov
lahf
imull
or
xchg
add
scas
xor
rclb
push
test
add
adc
fdivrp
fdivrl
das
or
adc
push
mov
es
pusha
mov
and
sub
adc
nop
leave
and
dec
clc
stos
xor
mov
mov
ljmp
push
sbb
les
and
stc
nop
xchg
fsts
push
xor
xor
add
ret
je
fnstsw
push
mov
cmc
fucomi
cltd
lock
loopne
test
pop
dec
outsb
xor
push
add
mov
pop
jne
mov
lahf
loope
or
fnstsw
mov
adc
icebp
cmp
std
and
outsl
imul
sbb
pop
and
std
sub
push
pop
xor
mov
add
fwait
data16
mov
xchg
aam
cld
jmp
mov
movsb
fs
fildll
roll
lods
movsb
or
push
cmp
sbb
sbb
sbb
int3
movsb
mov
lea
repz
movsb
jmp
add
pop
sti
les
lahf
dec
rcl
fdivl
and
inc
cmpl
jmp
jmp
shr
lret
std
adc
xor
xor
repz
faddl
pop
add
std
cs
dec
imul
xchg
data16
inc
add
fcomi
and
pop
loope
repnz
jp
leave
repnz
and
push
in
cwtl
fsubl
mov
inc
lret
js
out
repz
test
ret
ret
xchg
jae
scas
enter
push
or
mov
mov
dec
mov
push
lods
inc
mov
or
mov
mov
mov
push
call
push
adc
xlat
in
int3
xor
xor
inc
fnstsw
pop
loop
pop
scas
xchg
sub
test
lock
out
xor
fdiv
add
sbb
in
fadd
rorl
out
sub
xchg
into
dec
xor
or
loop
cmpsb
shld
ret
mov
movsb
cmp
movsb
and
shlb
jl
add
int3
sub
aas
dec
xor
cli
xor
xor
aam
sbb
je
sbb
sbb
lret
inc
mov
mov
push
pop
pop
mov
adc
xor
pop
pop
in
or
inc
cmc
icebp
or
xchg
adc
cmp
test
or
pop
xor
mov
push
mov
lret
cmp
or
add
xor
in
sub
mov
pop
push
outsl
movsb
xchg
push
aaa
push
add
gs
into
jp
test
ds
cld
das
mov
test
jo
cmp
pusha
decb
and
sti
dec
out
test
or
sbb
sahf
out
inc
popa
xor
ficomps
stos
jb
into
fs
sub
in
pop
rclb
inc
dec
repnz
adc
in
cmpb
sbb
scas
cmc
lea
pop
sub
arpl
rclb
pop
ja
adc
mov
jnp
cmpsl
push
shll
push
addr16
mov
data16
pushf
push
scas
sahf
lahf
test
inc
in
dec
or
and
pop
mov
rolb
xor
scas
push
fisubrl
pusha
out
jbe
sti
mov
aas
lods
jo
out
mov
and
outsb
push
mov
in
popa
ss
addr16
out
mov
mov
aas
pop
xor
adc
xchg
or
pusha
into
xor
push
jae
lret
cmp
fsubrl
xor
rorl
pop
xchg
push
cmpb
pop
mov
icebp
xchg
or
cli
incb
daa
sbbb
jp
subl
mov
or
lods
push
aaa
sub
adc
mov
add
test
sbb
jge
pop
outsb
xor
inc
lds
call
pop
clc
cmp
dec
es
add
cwtl
aas
add
test
aad
repnz
popf
adc
arpl
les
inc
aas
mov
pop
mov
cmp
rcrl
test
scas
and
cwtl
shll
adc
xchg
andb
hlt
bnd
pop
in
jl
imul
ret
lods
cmpsb
mov
mov
bound
mov
xor
test
sbb
sbb
sbb
jle
fs
or
and
stc
fwait
loope
sbbb
clc
cmp
mov
pusha
jl
inc
xor
fnsave
dec
jnp
xor
call
or
test
jbe
or
sbbl
insb
sub
fst
mov
adc
divb
aam
xchg
cli
mov
cltd
outsb
add
arpl
or
lods
add
call
or
mov
push
mov
subl
mov
aad
bnd
loop
fiaddl
or
ja
add
or
mov
mov
flds
mov
mov
mov
fisttpl
in
lods
repz
sub
repnz
jg
push
mov
pop
fs
dec
daa
add
fcmovnb
xor
lcall
add
fdivrl
pop
mov
mov
lcall
dec
test
outsb
add
cmpsb
jb
test
jg
add
and
insl
call
scas
xchg
out
lret
ds
sbb
inc
clc
jmp
es
int
push
out
cmp
dec
cltd
xor
sti
add
mov
pop
jg
xchg
sbb
sti
loope
sub
insl
enter
add
outsl
inc
jae
jb,pt
jg
icebp
xchg
daa
or
cmp
shr
shrb
cmp
aas
and
iret
inc
xchg
mov
or
xor
xor
scas
cmpsl
add
mov
jge
mov
scas
push
push
mov
pop
popf
mov
dec
add
lods
and
lret
pop
mov
add
jo
pop
mov
into
pop
push
aad
out
jl
mov
jbe
mov
shrl
sub
push
fadds
enter
rclb
fs
bound
and
mov
lcall
std
lds
ljmp
data16
lods
lods
push
loope
std
dec
leave
imull
ret
daa
jl
das
xor
out
daa
das
imull
sub
repz
loop
jl
add
sbb
xor
popf
iret
cmp
sub
or
xor
push
call
orb
aad
mov
jmp
push
mov
in
sti
scas
xchg
xor
cmp
inc
or
pop
pushf
sbb
data16
int3
mov
ret
push
or
popa
sti
or
fwait
sbb
out
call
std
inc
push
adc
jno
mov
test
dec
imulb
es
es
cli
loop
cmp
jno
gs
fwait
mov
and
in
rolb
push
mov
in
jge
andb
popf
xor
fwait
ss
in
lods
push
cld
hlt
inc
repz
stc
fistpl
or
sbb
jnp
dec
or
jmp
ret
fadds
inc
dec
arpl
fdivrs
or
mov
jb
mov
punpcklwd
inc
sbb
or
mov
mov
pop
movsl
out
push
adc
les
push
push
jle
push
lcall
inc
sub
ja
pop
jmp
adcb
inc
imul
pop
push
into
pop
push
add
mov
and
roll
nop
pop
sbb
mov
dec
sbb
mov
clc
stos
out
arpl
sub
int3
xchg
rolb
pop
lds
add
loop
lods
and
mov
sbb
pop
xor
dec
jmp
cltd
pushf
jno
mov
cmp
je
xchg
sahf
push
lds
sbb
push
hlt
sub
idivl
fincstp
add
mov
jl
jnp
repz
mov
cld
daa
dec
scas
adc
cmp
sbb
sbb
mov
ret
stos
icebp
stc
push
imul
dec
test
mov
and
mov
sbb
aaa
xchg
stc
div
jle
jo
cwtl
or
cmpsl
lds
push
mov
cltd
adc
stos
xchg
xchg
inc
inc
jmp
orl
adc
lock
jl
call
dec
lds
xchg
jge
pop
or
stos
mov
je
loop
or
mov
jecxz
popl
mov
and
sbb
stc
inc
fsubp
in
adc
jmp
push
add
loop
cmpsl
rorb
addl
outsl
out
mov
sub
sbb
pop
adc
pop
xor
out
test
push
jmp
lret
mov
out
jecxz
lret
andb
mov
mov
inc
jle
jae
xchg
xchg
and
sub
mov
sub
inc
fs
das
les
jnp
lahf
outsb
into
lcall
fildl
xorl
push
dec
push
dec
mov
pop
fmull
sub
stc
push
sahf
shll
xlat
sub
pop
mov
js
pop
and
out
mov
test
mov
lahf
mov
xor
rcll
mov
xor
xor
jmp
fsts
xchg
cld
inc
mov
cwtl
ss
mov
gs
xchg
mov
adc
mov
cli
mov
gs
and
adc
pop
out
inc
lret
out
mov
push
mov
xchg
cmp
xchg
add
imul
out
inc
or
in
jns
cmp
and
and
ret
xchg
pop
mov
add
fnsave
sbb
movsb
fistps
into
ret
cmc
aaa
enter
outsb
les
xor
js
cmpsl
test
lds
or
push
lods
xchg
lock
lea
adc
insb
mov
rorb
imul
pop
das
and
neg
idivl
pop
xor
arpl
icebp
adcl
jmp
push
xchg
adc
shrl
or
sbb
mov
insl
ds
xorps
mov
shrl
out
jnp
dec
xor
lea
sub
inc
mov
push
addr16
dec
cwtl
push
adc
xor
lahf
fdivs
cwtl
cmp
in
xchg
dec
adc
out
pop
and
jno
andb
fidivrl
pop
push
pop
add
clc
dec
pminub
out
cmpsl
dec
inc
inc
xchg
cs
gs
fstpl
mov
in
imul
cmpsl
or
xchg
inc
jbe
fistps
cltd
push
roll
mov
stc
fists
outsb
sti
xor
outsb
mov
jns
call
cmpsb
outsl
dec
loop
cli
imul
mov
in
add
mov
mov
data16
outsb
hlt
jnp
out
or
ret
cmp
pop
mov
cmp
nop
mov
idivb
xchg
aas
dec
lock
lock
stos
lods
pop
mov
push
je
mov
addl
cld
ficoms
add
std
cmp
insl
jnp
lcallw
push
aam
pushf
cmp
rcll
out
xorl
add
fadds
sub
sub
adc
in
lahf
clc
jp
pop
mov
cmp
out
push
jle
xchg
sub
loopne
cmp
inc
ljmp
aam
cmp
push
xor
or
pop
aam
iret
icebp
sub
jecxz
push
mov
pop
inc
sub
mov
leave
repnz
out
push
pop
mov
push
and
jp
or
out
into
add
inc
fbld
dec
cmc
icebp
lods
and
movsb
xchg
sub
xchg
or
shll
mov
mov
fbstp
and
movsb
out
stos
jns
aam
push
pop
xchg
xor
add
push
and
dec
adc
mov
add
mov
cmp
clc
fnsave
cmp
push
enter
cmp
jbe
sarb
arpl
xchg
std
xchg
ffreep
push
fstpl
pushf
pop
pop
jg
test
mov
ret
outsl
add
cli
pop
fistpl
push
mov
cmp
cltd
cmp
xor
addb
fnstcw
int3
add
pop
push
inc
mov
ss
dec
test
popf
cmp
or
cmp
js
andb
pusha
fdivl
jno
xorb
mov
imul
dec
dec
push
cmp
movsl
jnp
test
scas
aam
sub
int
das
jecxz
lods
push
ror
sbb
sbb
or
push
push
scas
pop
scas
lods
mov
ljmp
adc
push
dec
xor
xor
lret
imul
lret
and
xchg
outsb
mov
push
push
sub
push
push
sbb
xchg
dec
adc
and
das
lods
cmp
mov
cmp
sub
mov
or
int
repnz
int3
fdivrs
ljmp
shl
mov
xchg
mov
xchg
cmp
mov
out
add
inc
aas
int3
jae
outsb
add
push
jnp
mov
fiadds
jno
jnp
mov
xor
pop
cmp
or
enter
and
xlat
mov
sub
je
push
sbb
ret
inc
xchg
cmpsl
adc
mov
pop
popa
fiaddl
fwait
or
sti
daa
or
nop
cmp
jo
push
dec
jo
sub
loope
sbb
mov
adc
hlt
mov
jb
or
adc
pop
mov
in
repz
fs
imul
or
les
imul
aam
and
mov
stos
lea
dec
data16
push
adc
xchg
and
push
data16
idivl
or
and
test
shlb
sub
out
popf
jg
add
or
imul
es
push
xor
mov
jno
xchg
mov
mov
lahf
jno
test
sbb
mov
mov
lahf
dec
in
movsb
cmp
cmp
dec
scas
mov
jo
scas
mov
xchg
popf
push
xchg
ret
insl
cltd
aas
cld
xlat
xchg
fcmovbe
hlt
cltd
imul
lds
jmp
jge
mov
loop
pop
push
je
cmpsl
call
testl
dec
mov
jl
in
mov
rorb
in
mov
lret
bnd
out
in
mov
inc
je
pop
mov
mov
push
insl
std
adc
fnstenv
fsubs
xchg
in
fs
scas
mov
add
mov
ss
mull
adc
in
movsb
std
push
pop
out
lahf
inc
in
mov
pop
scas
push
outsb
jae
in
sbb
add
mov
iret
sti
xor
loope
push
push
rorb
push
cmpsb
xor
sbb
mov
leave
jl
xchg
stos
lock
push
aad
lock
pushf
call
jg
test
out
xchg
cld
leave
test
aam
in
adc
imul
mov
mov
sbb
xchg
mov
out
std
jp
stc
scas
cmp
adc
xor
or
mov
xchg
inc
imulb
or
sbb
test
rol
mov
jb
cmp
bound
pop
sbb
lahf
jo
mov
or
aam
pusha
std
pushf
mov
xor
push
lods
dec
repnz
cmp
imul
adc
test
push
test
sub
mov
inc
adc
lahf
leave
xchg
ror
popa
mov
sti
aas
lods
cmp
mov
mov
push
decb
dec
or
or
movb
add
jne
push
lea
mov
xchg
stos
stos
mov
sub
jns
outsb
mov
movsl
lcall
lock
push
inc
jo
inc
in
jae
ds
pop
xor
adc
hlt
cwtl
sbb
movsb
xchg
lret
inc
push
mov
sbb
shrb
adc
fcomps
lret
lcall
pushf
pop
out
inc
adcl
adc
sahf
std
mov
inc
mov
into
lret
movsl
sbb
adc
jg
xor
out
pop
mov
inc
sub
jl
sub
lea
testl
sarb
jae
aaa
fists
xchg
stc
out
mov
dec
popa
mov
test
cmpsb
mov
sub
imul
je
addb
push
fwait
xchg
sbb
sbb
sub
xor
leave
push
cmpsb
and
out
cwtl
cld
sbb
jnp
push
mov
add
insl
mov
or
push
or
pop
mov
mov
or
lds
flds
mov
fcomi
add
inc
hlt
cmpsl
sbb
out
push
push
loopne
aad
or
add
insb
outsl
mov
or
dec
adc
out
test
xor
jg
pop
xchg
mov
arpl
push
add
loopne,pn
mov
add
insl
sbb
pop
sbb
push
dec
je
mov
or
mov
dec
mov
mov
xor
and
leave
fisubs
jmp
stos
test
pop
fadds
push
fwait
pop
xchg
cmp
out
cmpb
in
xchg
jmp
jle
subl
outsb
xlat
rorb
pop
add
adc
sbb
add
mov
jne
sub
adc
lcall
movsb
fs
fwait
leave
insl
inc
shlb
jmp
js
insb
sbb
ret
mov
sahf
adc
mov
and
leave
mov
and
xchg
or
sub
lret
shll
test
into
mov
cmp
or
sbb
pop
sbb
xchg
xor
data16
shrl
or
mov
imul
jbe
xchg
and
int
or
and
xchg
add
in
out
fadds
xchg
dec
pop
enter
mov
fcmovu
jl
pop
xor
fisubl
jmp
push
test
inc
mov
cmpsl
sbbl
into
mov
lods
cmpsl
pop
ljmp
dec
movsb
push
jo
cmpsb
inc
xchg
jb
rcrl
cltd
setne
sbb
xchg
xchg
dec
aad
mov
test
test
jg
mov
jno
inc
mov
filds
mov
pop
push
adc
xchg
lods
push
mov
mov
ds
fiaddl
scas
mov
jae
scas
add
sbb
inc
and
or
rcll
dec
lahf
aaa
ficoms
fidivrl
and
mov
mov
cmp
jge
outsb
mov
cmp
mov
movsl
inc
jle
add
pop
out
mov
jmp
scas
js
out
dec
mov
rcrl
out
das
js
call
icebp
adc
cmpsl
mov
ss
xorb
ljmp
mov
repnz
pop
addr16
or
push
clc
arpl
std
loope
dec
les
add
sub
inc
rcrl
int3
repz
stos
lret
insb
rcrb
sbb
sahf
xor
scas
xor
adc
in
enter
pop
sub
int3
add
out
inc
dec
dec
mov
push
dec
in
popa
and
aad
loop
js
mov
pop
sub
decb
mov
push
xor
es
fisttpl
xchg
movsl
jp
sbb
stc
jbe
xchg
mov
push
inc
xor
mov
add
imulb
jo,pn
xchg
fdivl
push
js
dec
popf
ficomps
mov
ret
shr
out
or
or
popf
cmp
jmp
rclb
mov
pusha
or
or
scas
inc
sti
and
push
mov
adc
mov
in
orl
mov
loope
je
daa
xor
repnz
mov
movsb
dec
jns
rorb
es
jg
pop
sbb
mov
mov
dec
xchg
loope
jl
shlb
movsb
adc
movsl
int
daa
mov
jne
je
stos
inc
sbb
loope
int3
andl
jmp
adc
pop
cmpb
cmc
cwtl
cltd
or
js
cli
mov
mov
push
mov
notb
push
xchg
in
xchg
dec
icebp
sub
outsl
pop
lcall
mov
pop
jo
sbb
lret
lcall
lahf
sub
rcrl
sub
sbb
mov
inc
ret
sub
imul
outsl
or
jns
cli
sbb
jne
mov
xor
push
fdivl
adc
xor
pop
lahf
push
jo
or
sbb
adc
cmp
mov
das
mov
icebp
stc
jmp
test
xchg
xor
insb
scas
mov
sbb
jo
jnp
xor
sti
mov
mov
jne
pushf
mov
int3
sbb
les
lods
adc
pop
fucomi
mov
mov
lods
push
bound
fnop
shrl
cmp
jns
inc
gs
repz
jmp
or
add
inc
push
sub
iret
fwait
cld
loopne
mov
stc
adc
jns
mov
lods
or
out
fwait
pop
mov
mov
scas
push
sub
xchg
testl
stos
or
cltd
dec
dec
nop
add
pop
push
jns
test
mov
ljmp
insl
out
mov
cmp
jmp
jbe
or
xlat
dec
out
test
sub
js
xchg
outsb
push
mov
insl
jo
fiaddl
movups
pop
mov
cmp
mov
aam
cmp
in
mov
pop
sbb
pusha
mov
mov
ja
and
test
fisubrs
xlat
pop
mov
and
outsl
lret
mov
repnz
xchg
mov
push
or
or
inc
cltd
jecxz
push
push
mov
stc
fimull
push
ljmp
add
incw
notb
pop
data16
out
or
mov
mov
es
in
and
js
jb
ljmp
push
insb
dec
loope
call
fs
je
movsl
dec
jge
and
mov
insl
sbb
negb
stc
cmp
add
mov
jno
leave
add
jae
iret
mov
jbe
push
insb
push
and
inc
push
aam
sbb
pop
aaa
cmpsb
aam
daa
lahf
sti
cmp
fiadds
call
cmc
subl
jp
in
mov
xlat
ret
fnstsw
in
outsb
adc
cmp
nop
int
mull
jecxz
mov
xor
pop
pop
cltd
push
mov
dec
ret
arpl
inc
xchg
imul
add
dec
insb
xchg
jns
bound
aam
test
inc
sub
xchg
pop
fsts
fwait
push
in
shlb
cmp
xchg
dec
push
sub
arpl
in
stos
mov
dec
push
popf
cltd
lds
pop
pop
imul
in
scas
clc
xchg
add
cld
shll
shrb
inc
pop
sti
cmp
lock
xchg
dec
sub
adc
push
stos
add
xor
mov
out
lret
inc
adcl
cwtl
aaa
and
scas
gs
mov
xchg
sbb
dec
add
shrl
dec
mov
int3
stc
repz
adc
mov
xchg
popf
js
std
jmp
pop
dec
cwtl
cmpsl
enter
xor
xchg
sub
dec
popa
cmp
insl
sti
gs
js
lock
ss
pxor
mov
fdivrs
scas
incb
dec
sbb
add
ret
jle
sti
icebp
pop
xor
mov
insb
iret
lahf
lods
dec
imulb
nop
lcall
insl
fisttpl
jl
sub
adc
push
stos
sub
push
addb
cmpsl
push
jecxz
ljmp
xchg
pusha
outsl
ja
pop
cld
pop
sbb
lret
jne
xchg
cmpsb
cmp
out
xor
push
mov
cmp
push
call
jbe
lret
out
jno
das
mov
cmp
mov
aam
mov
adc
push
sti
push
loop
jmp
pop
out
shll
clc
fildl
stos
sbb
lods
sub
dec
mov
scas
mov
and
or
push
neg
push
and
or
mov
xor
adc
push
ljmp
push
jb
std
in
jo
jbe
jne
fmuls
ret
sub
movsb
jmp
or
cmp
adc
mov
rcrl
imul
jno
jne
loop
sbb
mov
out
mov
scas
outsl
cli
aas
and
and
push
jno
rcll
hlt
and
scas
mov
dec
fists
icebp
inc
stos
insb
pop
add
pop
xchg
stos
sub
jmp
loope
mov
jp
int3
sub
lahf
lret
scas
dec
insb
sub
push
push
sub
in
mov
xor
fisubrl
outsb
imull
add
fistps
xchg
sub
sbb
mov
add
cli
xor
xchg
lcall
xchg
hlt
je
sbb
fcmovne
cli
pushf
sub
addr16
mov
mov
or
cmp
hlt
lret
fwait
cmpl
mov
push
clc
bnd
ror
cmpsl
mov
dec
cli
aaa
lock
dec
push
call
dec
std
sar
in
popa
inc
jo
adc
sub
insl
xlat
sbb
movsl
add
sub
xlat
xor
cs
or
jp
sbbl
aaa
fidivrs
neg
cmovae
sbb
andb
cmpl
sbbb
cmp
or
ljmp
push
sbbb
data16
nop
add
sar
mov
push
mov
pop
fwait
inc
gs
cmp
sarb
or
push
sahf
lock
cmp
lret
aas
xchg
or
and
jp
push
xchg
in
adc
lcall
nop
xchg
mov
sub
popf
push
jb
mov
mov
push
and
lcall
call
add
xor
rcrb
push
push
pop
jp
arpl
adc
sbb
dec
repz
dec
mov
in
jl
add
cmp
out
mov
cmp
nop
cmp
push
cmpsl
jmp
xchg
xchg
pusha
mov
lds
scas
or
fnstenv
and
fadd
add
dec
inc
in
ljmp
mov
and
mov
arpl
ja
add
xchg
ret
xchg
and
jnp
xchg
mov
stos
fdivrl
repz
dec
cmp
test
jnp
in
push
scas
inc
mov
ret
addr16
hlt
outsl
lret
or
push
add
mov
and
in
xchg
or
mov
sbb
repz
xchg
arpl
sbb
pop
xor
movsb
xorl
mov
jno
call
movsb
test
das
xchg
incl
stc
and
jge
push
dec
fisttpl
popa
add
xchg
out
daa
in
aad
cs
sahf
mov
cwtl
or
in
push
jne
pusha
add
pop
jge
push
push
and
xchg
or
hlt
shrl
mov
mov
mov
pop
pusha
mov
xorb
dec
jne
push
imul
shlb
lds
data16
sub
inc
add
enter
pop
push
pop
jge
mov
ja
pop
fstps
fildl
push
jle
stos
sbb
orl
xorl
inc
testb
std
bound
repnz
or
int3
cmp
xchg
mov
movsb
outsb
out
mov
movsb
fidivrl
ret
loope
mov
fwait
in
xlat
icebp
mov
adc
mov
scas
adc
jle
jle
dec
and
test
mov
xor
ja
dec
jle
pushf
pop
push
dec
fnsave
jg
or
or
fbld
aaa
jne
mov
xor
push
loopne
sub
aam
fbstp
adc
inc
mov
mov
xlat
rol
pop
enter
js
push
jnp
dec
je
fcmovu
stos
repz
pop
jecxz
pop
imul
pop
ss
inc
aad
negl
pop
loope
call
sbb
cmp
pop
or
xchg
out
orl
les
cwtl
cmp
lock
dec
push
dec
decl
imul
movsb
xor
add
sub
fisubrs
or
mov
sub
insl
std
xchg
pop
out
and
pop
push
dec
adc
or
fldl
lret
adc
push
and
mov
bound
cmp
out
rcrl
movsl
test
xor
jno
and
aad
insb
inc
std
out
or
mov
jbe
add
dec
out
jno
xor
adcb
mov
sbb
enter
jge
out
mov
and
stos
jge
dec
fxtract
dec
negl
adc
sbb
xchg
jg
loop
jb
lahf
mov
hlt
repz
fldcw
mov
xchg
mov
sahf
dec
xor
pusha
push
pop
shl
sbb
cwtl
mul
and
inc
cmp
cs
cltd
xlat
push
sbb
jb
jo
lahf
arpl
in
pop
fiadds
xor
cmp
sub
jae
imul
jbe
fidivrs
test
add
or
mov
or
lcall
out
pop
js
push
leave
sbb
cmp
xor
roll
xlat
popa
push
out
iret
mov
dec
push
jmp
sub
std
shrl
jmp
jle
fidivl
dec
xchg
dec
repnz
lds
enter
mov
cmp
sarb
sahf
xor
xchg
mov
in
jmp
sub
into
aam
stos
lcall
cld
cmpsb
rcr
outsb
int
icebp
sbb
adc
in
inc
daa
mov
into
push
fisubs
lock
test
mov
into
in
jle
dec
lcall
test
xchg
pop
outsb
pusha
sbb
in
pusha
mov
cli
xchg
enter
mov
cmp
ja
lods
loop
adc
push
aas
mov
hlt
insb
arpl
and
jl
adc
int
xchg
dec
xor
loopne
ds
jp
in
stos
sub
xor
cmp
aas
push
sub
sti
jge
pop
mov
loope
mov
jle
fucom
iret
mov
rorb
out
stos
leave
xchg
jb
idivl
popf
sbb
sbb
cwtl
dec
mov
arpl
sar
cs
inc
sarl
cmp
iret
xlat
cltd
pop
lcall
xchg
insb
data16
pop
hlt
insl
xor
jb
push
lods
push
jb
or
adc
cmc
push
jp
sbb
pop
adc
test
jnp
dec
mov
out
sbb
rol
fisubs
cmp
mov
scas
fiadds
mov
psubsw
into
xchg
mov
loopne
ret
pop
clc
leave
push
aaa
pop
jo
mov
aaa
fcompl
pusha
fidivrl
popf
push
aam
jo
add
ja
mov
test
daa
imul
cmpsl
stc
or
pop
xor
roll
nop
mov
xchg
mov
push
and
push
in
xchg
hlt
dec
jecxz
int
adc
mov
mov
out
xorl
or
jmp
jp
in
sbb
out
insb
into
push
loop
sbb
in
lcall
dec
and
daa
add
ss
fisubs
pop
pop
xchg
cmp
cmc
out
ds
and
mov
movsb
addb
sahf
cmp
inc
test
inc
stos
inc
dec
xor
lahf
push
push
movb
lcall
add
arpl
ret
xor
orl
jg
lret
pop
xor
cmp
cltd
jmp
pop
sub
sub
in
loop
fildll
inc
pop
aam
jmp
cwtl
rcrb
adc
inc
push
xchg
cmp
enter
dec
jmp
sti
inc
xchg
pop
push
inc
xchg
mov
aaa
mov
enter
shr
inc
push
imul
pop
std
fstpt
iret
push
sbb
sbb
scas
imul
idiv
aad
and
outsl
mov
mov
loop
dec
sub
scas
xchg
dec
out
scas
aas
mov
std
int
jne
or
in
lock
push
loop
mov
leave
les
and
mov
pop
mov
in
scas
js
aam
push
push
mov
push
aas
lds
in
and
sbb
add
std
add
psadbw
inc
add
cltd
fcoms
adc
push
mov
xchg
cli
jae
cmp
and
ret
xchg
hlt
dec
popf
stc
fimull
add
xchg
xchg
mov
cmp
stc
add
pop
es
mov
test
mov
xchg
cltd
scas
push
pop
mov
pop
ja
xor
sub
mov
or
cmc
into
adc
idiv
in
add
repnz
lahf
cmpl
jge
add
andl
sbb
nop
jae
inc
jg
repz
xor
and
arpl
lods
dec
data16
ret
cs
rorl
jge
xor
mov
in
es
popa
ds
mov
mov
push
clc
push
int3
insb
mov
lahf
test
adcl
xor
je
pop
and
or
das
inc
mov
in
push
and
or
jle
add
jge
fcmovbe
jp
paddsw
lcall
mov
push
mov
push
lock
rclb
cmp
adc
jmp
ficoms
jle
pop
jle
pushf
and
sbb
addr16
scas
jecxz
pop
mov
hlt
xor
adc
mov
popf
mov
add
mov
adc
clc
ficoml
sbb
ja
xchg
push
in
inc
sub
gs
mov
fnstsw
add
inc
test
jle
out
adc
ja
jle
xchg
adc
cmp
mov
fs
adc
aad
mov
jecxz
inc
jnp
jp
pop
ror
std
sar
test
lds
and
dec
mov
ja
sbb
push
cmp
push
mov
or
cmp
mov
inc
sbb
enter
pop
bound
mov
pop
sub
inc
nop
pushf
sub
mov
pop
repnz
or
pop
fistpl
sbbb
bnd
out
or
movsb
push
jno
dec
pop
sub
mov
inc
inc
jle
or
ds
cli
jecxz
xchg
push
call
lods
inc
lcall
and
jg
jbe
xchg
int3
sbb
jb
pusha
test
jmp
jle
pop
outsb
cmp
xor
cmp
insb
jmp
push
push
fnstcw
daa
addr16
push
pop
pop
or
outsl
pop
test
in
add
jo
push
and
pusha
jns
sbb
jp
out
and
mov
repnz
push
pop
and
sbb
sbb
neg
in
xor
cmp
or
or
out
in
mov
aas
mov
adc
lods
fisttpl
pushf
xchg
out
sbb
ds
pop
ss
in
mov
stos
fsubrp
pop
mov
mov
test
pop
pushf
shlb
addr16
fstpt
push
loop
rcl
outsl
mov
and
jb
inc
xlat
in
bound
fldenv
dec
xor
in
push
mov
sbb
sub
xchg
xchg
loopne
sbb
stos
rolb
pop
roll
push
out
adc
jae
mov
stos
xor
pop
in
pushf
jl
sbbb
in
dec
pop
xor
icebp
sub
mov
xorb
popa
std
out
lret
scas
xchg
cmp
pop
subl
sbb
xchg
mov
mov
mov
movsl
xchg
icebp
push
cli
int3
ss
jo
loop
movsl
mov
mov
or
pop
mov
sbb
cmpsb
pop
cwtl
push
std
dec
loopne
test
inc
das
dec
testb
out
xor
std
in
aam
sub
mov
add
cld
mov
es
and
mov
jae
pop
es
mov
and
push
add
fistpll
sub
scas
adc
cmp
xchg
fidivl
test
add
imul
sub
mov
jecxz
cmp
push
fnsave
xchg
sbb
push
int
mov
je
cmp
lcall
cmp
jns
push
roll
pop
sbb
in
dec
cmp
sti
scas
xor
lods
push
mov
add
adc
mov
addw
out
mov
mov
inc
adc
andl
sbb
bswap
call
jno
pop
ret
cmpsl
enter
sub
sbb
push
fildll
jae
fildll
es
push
mulb
cmp
xchg
in
test
sbbl
lds
fistps
repnz
bound
lret
dec
sbb
push
push
xchg
shll
pop
call
fwait
lea
jle
push
lret
js
movsl
in
mov
inc
stc
scas
insb
cmp
pop
dec
mov
das
cmpsl
sub
or
dec
std
rcll
or
mov
test
adc
inc
inc
sbb
dec
pushf
out
testb
lret
aam
sub
push
lcall
mov
mov
push
pop
push
fbstp
stos
scas
inc
into
mov
ds
fsubrl
adc
adc
in
and
stos
mov
adc
mov
cmp
fdivrp
mov
sti
mov
or
shll
sub
lret
jae
les
or
inc
xchg
sbb
addr16
ss
push
loope
loope
adc
mov
xor
outsl
inc
addb
divb
clc
movsb
mov
cmp
jmp
mov
jo
mov
enter
and
sub
cmp
fmuls
stc
into
popl
pusha
packsswb
out
sbb
fwait
inc
mov
fs
sahf
mov
loopne
in
mov
xchg
xchg
xchg
fsubl
mov
test
inc
enter
xor
push
repz
out
and
das
fwait
jbe
mov
dec
divl
xchg
imul
ljmp
gs
lock
mov
testb
and
rclb
mov
in
out
data16
and
dec
push
lret
dec
ret
push
insl
fsubrl
aaa
add
xor
xchg
adc
fsubr
out
jmp
jb
xlat
mov
sub
jb
fwait
sbb
jns
pop
cs
aam
jo
add
cmp
das
or
push
mov
and
roll
repnz
jecxz
aad
mov
mov
nop
xor
test
mov
fldcw
xchg
arpl
clc
es
pop
sbb
mov
xor
push
push
xchg
lahf
xorb
cmp
add
adc
call
sbb
mov
pop
and
stos
add
xor
fxch
mov
cmpsl
adc
and
outsb
adc
cmpb
dec
jle
aaa
push
cs
inc
fldenv
jmp
mov
adc
add
push
add
sbb
pop
xchg
lret
pop
sub
and
xchg
and
popa
inc
idiv
inc
mov
out
enter
mov
icebp
xchg
nop
and
leave
out
out
aad
add
out
repnz
or
fdiv
fisubrs
mov
out
xor
xor
aad
or
sbb
stos
and
add
mov
xchg
mov
pop
fistl
fcomps
xor
mov
mov
add
sub
xchg
clc
mov
mov
scas
fdivrl
sbb
arpl
cmp
lret
ret
and
mov
cwtl
dec
adc
dec
jge
repz
test
and
scas
int3
orl
jns
xchg
push
cwtl
sub
fisubrs
sbb
aaa
aas
sub
aaa
xchg
fcoml
or
gs
jge
dec
sti
stos
jne
loopne
fdiv
test
fnstcw
test
mov
cmpb
ljmp
push
dec
and
repz
outsl
rcrb
cwtl
mov
in
jno
push
jbe
into
ja
rcll
ljmp
sub
fldenv
in
test
xchg
gs
jne
repz
jecxz
pop
jmp
es
jg
push
mov
dec
std
inc
clc
cmp
pop
adc
shrb
sub
arpl
and
lahf
insl
mov
cmp
pop
jb
mov
or
out
push
fadds
mov
mov
fisttpl
inc
inc
out
and
iret
mov
mov
adc
imul
xchg
xchg
xor
inc
push
or
or
mov
lock
cmp
nop
pushf
fidivrs
shlb
stos
nop
xchg
xchg
pop
xchg
icebp
push
lock
test
push
outsl
mov
push
fistpll
xor
shrb
ds
xchg
loope
int3
mov
adc
mov
das
inc
outsl
xor
mov
xchg
out
xchg
lds
mov
jne
sub
ret
shl
roll
pushf
call
je
adc
push
push
sub
movsl
rcrb
js
rolb
data16
pop
xor
push
in
int3
es
pushf
inc
bound
in
clc
jg
pushf
enter
popf
dec
mov
andl
clc
or
add
in
cli
add
je
add
stos
cmp
ljmp
lahf
shlb
in
mov
xchg
adc
sub
xor
adc
cmp
ficompl
add
xchg
sbb
aam
dec
add
lret
add
inc
call
ljmp
cld
mov
out
jg
scas
leave
xor
and
jmp
xchg
pushf
xor
jecxz
mov
inc
jmp
fbld
and
inc
pusha
aad
mov
fs
pop
in
mov
insl
pushl
fprem1
bound
push
insl
arpl
push
in
push
or
dec
sti
inc
sbb
ljmp
mov
jns
shlb
les
mov
fldenv
test
jnp
addr16
arpl
mov
cwtl
call
cmp
call
push
xor
test
mov
jne
call
daa
movsb
mov
xchg
mov
int
xchg
sbb
shlb
fnstenv
aad
mov
imul
pop
jge
fcmovbe
or
xchg
insl
sbb
cmpsl
cmp
call
dec
out
mov
cmp
test
in
loope
test
dec
sti
ss
dec
sub
data16
sub
cli
lock
rep
imul
mov
mov
mov
pop
and
or
loopne
addr16
fs
inc
adc
push
mov
les
mov
cmp
icebp
push
fstps
add
mov
sub
push
push
das
and
sarb
xor
cmp
dec
ss
pop
mov
imul
fs
xchg
xchg
shrb
aad
scas
push
sti
dec
cmp
or
add
inc
hlt
lock
mov
scas
cltd
add
pop
cmp
mov
jecxz
adc
mov
mov
pop
rcll
cwtl
sti
jge
add
pop
push
inc
cmp
and
jp
pop
andb
cmp
add
mul
out
pop
out
gs
pop
ss
addr16
aad
inc
hlt
testb
cmp
jns
pop
hlt
add
jno
int
sub
pop
test
lods
push
fdivl
ljmp
push
mov
rolb
mov
stos
cli
lds
sbb
stos
jo
cwtl
je
push
es
inc
mov
loope
hlt
mov
push
aam
mov
sbbl
inc
fsts
cmpb
scas
sub
ss
sub
ret
adc
xchg
pop
ficompl
dec
push
std
mov
sub
push
inc
jno
cmp
sub
ret
lds
ficomps
stos
int3
fldenv
push
lods
iret
pop
sub
jle
xchg
or
gs
and
inc
ljmp
repnz
cmp
dec
xchg
mov
add
iret
shll
lds
push
or
or
adc
inc
push
hlt
xchg
pop
cmp
int
cwtl
iret
lea
jb
stos
test
fidivrs
inc
repnz
loopne
movsl
imul
lock
dec
decb
add
sbb
imul
or
fisttpll
pop
jns
xchg
aaa
stc
cld
lds
repz
mov
cli
dec
stc
je
stos
outsl
dec
mov
push
ret
jle
mov
dec
jbe
rclb
inc
xchg
mov
sub
icebp
es
mov
sbb
jle
jmp
and
out
lods
push
popa
sub
pop
xchg
ss
jb
jbe
sbb
std
stos
test
jg
xchg
in
ficoms
movsb
push
enter
mov
mul
push
fsubp
movsl
and
addr16
xor
mov
fwait
inc
sahf
add
jno
push
out
leave
insb
and
loope
lea
daa
addr16
insb
jecxz
scas
data16
mov
lcall
push
adc
xchg
jns
xor
into
call
sub
mov
aad
mov
dec
pop
pop
add
sub
xchg
jb
cwtl
pop
lret
cltd
or
cmp
dec
xor
sarl
xlat
loope
pop
enter
stc
lock
cmp
in
and
jne
jmp
jmp
adc
cmp
fnstcw
repz
sub
jne
xchg
mov
jg
mov
cs
stos
ret
or
dec
push
cmc
clc
pop
xchg
push
dec
xor
jno
mov
scas
cs
shrl
mov
inc
test
cmpl
and
fwait
out
pusha
xchg
outsl
fadd
sbb
xor
ljmp
orb
mov
dec
out
call
sub
push
in
iret
pop
or
mov
iret
stos
stc
sar
push
adc
iret
cmp
mov
les
imul
xchg
inc
addr16
aad
ja,pt
sahf
inc
push
je
pop
xor
pop
xor
pop
clc
and
out
sbbb
test
adc
mov
sub
mov
add
lret
ss
mov
add
inc
mov
cwtl
popf
inc
gs
dec
cmpsb
clc
mov
pop
mov
inc
cmp
enter
xchg
pop
out
enter
andl
lahf
sbb
rcrb
cmpsb
inc
adc
lret
xor
es
icebp
cli
cltd
popf
movsb
cmp
inc
adc
adc
adc
scas
inc
fs
pop
mov
sahf
in
movsl
addr16
push
mov
aam
cwtl
popa
add
out
pop
pop
loopne
arpl
mov
jl
mov
in
fldt
leave
jae
and
xchg
jne
xor
xor
movsl
push
jle
jbe
lahf
movsb
jne
add
int3
mov
sbb
popa
inc
enter
add
les
push
fstpl
adcb
mov
js
pop
dec
cmp
cmovs
push
mov
mov
mov
jbe
xor
mov
xor
and
mov
dec
test
push
dec
fsub
jl
push
cld
push
inc
fcomps
pop
rol
hlt
mov
loop
iret
cmp
lahf
das
jno
sbb
js
pop
cmp
test
aam
sbb
sub
add
fsts
sbb
in
cmpsb
mov
inc
mov
add
inc
and
dec
arpl
fnstcw
mov
add
bound
cmp
mov
pushf
mov
add
jg
lret
cmp
pop
mov
jae
addr16
mov
sub
in
add
lret
mov
je
sub
cmp
movsb
mov
in
cmp
in
sub
or
xchg
pop
sbb
cmpsb
out
inc
insl
pop
in
testl
cmc
dec
jb
std
rcll
lods
push
in
fstps
mov
inc
daa
pusha
jne
in
or
repz
xor
sub
jae
push
into
shr
call
das
mov
inc
pop
push
inc
pop
pop
adc
mov
fisubrs
in
dec
ljmp
mov
shlb
mov
add
rcll
fwait
pop
stc
mov
sbb
js
fcompl
fdiv
repz
sbb
sbb
aaa
cs
jb
jae
pop
lods
mov
mov
insb
or
nop
sbb
imulb
hlt
hlt
inc
aam
mov
inc
subb
pop
pop
add
jg
out
mov
fwait
mov
mov
dec
mov
xchg
lock
add
mov
test
sub
movsl
std
call
lods
xchg
sahf
int
hlt
or
dec
int3
xor
mov
mov
jp
cmp
mov
jnp
mov
and
push
je
inc
call
mov
mov
add
mov
repz
dec
test
pop
jl
rcll
mov
shl
in
fisttpll
mov
adc
adc
pop
push
adc
add
enter
scas
clc
push
loopne
xchg
in
dec
rcl
and
movsl
sbb
jecxz
hlt
dec
sbb
pop
adc
pop
out
insb
inc
mov
jge
adc
rorl
vcvtsi2sdl
xchg
jnp
cmp
mov
pop
pop
and
orb
in
and
mov
cmp
xchg
sbb
stos
cmp
stos
movsb
cmp
stos
insl
inc
cli
mov
inc
xor
fistl
das
enter
das
inc
lock
in
sub
rolb
jp
cmp
or
inc
cmp
icebp
sbb
bound
addr16
cltd
sbb
aaa
inc
pop
push
inc
adc
mov
xor
pusha
imul
cmp
mov
mov
shl
xchg
xchg
cmp
add
fdivl
pop
mov
cmp
push
loop
sub
orb
popf
xchg
jp
cmp
fcomi
repz
inc
movsb
out
outsl
adc
jb
pop
repz
xchg
xchg
sbbb
adc
adc
stos
push
xchg
ja
sbb
ficoml
shlb
insl
sub
pop
mov
cli
mov
je
lods
mov
fisttpll
mov
mov
dec
sbb
push
cmpsl
mov
fcomps
mov
mov
adc
out
jne
adc
fnstcw
popf
jge
and
push
call
push
pushf
mov
je
out
mov
aad
xchg
cmpsl
sub
imul
sub
pop
fmulp
mov
jne
or
xchg
call
mov
sbb
inc
add
sarb
xchg
mov
in
push
dec
bound
mov
mov
subb
add
addr16
scas
call
mov
stc
icebp
cmp
lahf
lret
pop
mov
hlt
cwtl
or
sbb
adc
repnz
push
adc
jne
sub
jns
xor
fsubrl
sbbl
jb
jp
aas
jg
xor
insb
popa
add
mov
dec
movl
cld
jbe
fsubrs
dec
movsb
xchg
clc
push
lds
mov
icebp
add
jb
xor
test
sbb
das
pop
fstps
rcrl
adc
es
add
adc
hlt
pop
mov
sub
adc
cld
pop
dec
mov
f2xm1
dec
jo
sub
ja
pop
int3
scas
stos
pushf
push
dec
xchg
jns
sub
lcall
test
stos
cmpsl
outsl
pop
call
cs
test
pop
xchg
or
mov
sub
ret
test
aad
inc
adc
aaa
pop
lods
out
mov
in
aas
pop
out
mov
mov
mov
sbb
cli
add
cmp
inc
test
inc
clc
sub
int3
fcoms
fwait
push
jnp
aam
pusha
lret
in
add
mov
outsl
mov
cmpsb
sbb
lock
pop
popf
ja
xor
jp
aam
jmp
push
mov
adc
push
ret
dec
pop
les
mov
mov
cli
nop
mov
pop
out
mov
das
jmp
pop
clc
js
nop
in
jg
js
shrl
sahf
adc
jecxz
dec
adc
cmpsb
lea
incb
ret
shrb
xchg
shll
shll
fwait
ds
movsb
cmp
std
das
dec
js
mov
push
rcrl
enter
push
in
push
faddl
iret
mov
inc
iret
pop
movb
mov
xchg
cwtl
push
enter
gs
push
insl
jmp
add
clc
mov
mov
fmull
push
adc
cwtl
jbe
hlt
aad
sbb
mov
sbb
inc
shll
inc
out
stos
test
test
jp
fcmovnu
xorl
cmp
cld
dec
jecxz
lret
mov
xchg
addb
fs
outsb
popf
xlat
cs
pushf
hlt
jns
cwtl
out
neg
outsl
sbb
mov
push
aam
fcos
cmp
and
paddw
sub
and
les
arpl
jne
pop
jns
icebp
xor
sbb
cmpsb
mov
insl
push
ret
popf
xchg
add
leavew
dec
loopne
arpl
test
pusha
iret
jmp
sbb
loopne
inc
outsl
dec
add
popa
mov
test
fldt
xor
std
xchg
js
pushf
cmp
aaa
ret
xorb
push
mov
jns
push
leave
or
dec
and
out
push
scas
repnz
je
jl
nop
xchg
pop
mov
push
push
fsubs
jge
data16
call
dec
cmpsb
and
sub
cli
imul
push
rolb
adc
rcr
push
fdivr
imul
icebp
jg
lods
and
cli
xlat
jg
clc
jbe
inc
xchg
adc
jnp
arpl
in
push
inc
or
pop
std
fiaddl
mov
mov
stos
lods
in
or
xchg
orb
sbb
xor
push
mov
cli
inc
push
and
mov
sub
xchg
cltd
sarb
call
and
mov
and
out
lods
cltd
stc
mov
push
pushf
ret
and
xchg
shlb
jne
mov
ss
xlat
sbb
cmpsb
cmp
mov
xchg
jp
mov
and
adc
adc
imul
mov
data16
add
xor
adc
repnz
call
arpl
sub
dec
pop
insb
loop
cmp
sti
fildll
sti
lock
ja
lret
push
add
pop
cmp
out
aad
imul
xor
lret
cli
and
push
pop
xor
iret
nop
gs
sbb
in
and
stos
std
jnp
cmpsb
jl
xchg
cs
aad
bound
xor
in
jl
adc
les
es
out
outsb
addb
subb
ret
pop
inc
cmpsl
out
xor
insl
je
jae
mov
ljmp
dec
daa
push
and
adc
push
lret
int3
enter
es
inc
out
movsb
sbb
sti
xchg
and
cltd
jp
push
xchg
jns
xchg
adc
jae
mov
adc
jp
bound
dec
mov
mov
xor
adc
or
lahf
sahf
jo
loop
movsb
pop
in
pushf
pop
int
adc
insb
fstpl
fidivs
data16
sub
xor
adc
cmp
add
dec
inc
push
fdivl
fisubrl
aad
ss
push
xor
rorl
jg
add
mov
movsl
lods
mov
in
shll
jb
push
cmp
jb
fld
pusha
fwait
inc
nop
lea
scas
test
out
mov
jmp
cwtl
icebp
aaa
add
mov
scas
mov
jle
dec
enter
out
nop
sbb
shr
jo
pusha
jbe
push
xor
fwait
mov
sbb
stos
nop
pushf
jb,pn
jne
stos
jmp
or
imul
test
jecxz
dec
rcrb
fsubl
icebp
lods
jecxz
mov
sbb
and
pop
ja
xchg
pop
xchg
mov
xchg
push
jne
lahf
mov
loopne
dec
int
xchg
push
sbb
popa
mov
add
xor
and
mov
mov
into
and
xor
add
mov
dec
mov
add
adc
mov
mov
cwtl
pop
pushl
xchg
std
mov
out
mov
inc
imul
dec
iret
pop
in
lea
imul
fdivrs
mov
xor
dec
xchg
add
loope
lods
in
pop
repz
xor
loope
jne
fwait
mov
pop
jl
out
daa
sbb
mov
out
dec
inc
sti
push
inc
hlt
pop
rcrl
ficoms
mov
jae
imul
sahf
dec
jne
xchg
aas
sub
fmull
cmp
test
add
and
test
aaa
mov
jmp
fmul
xchg
xchg
dec
push
xchg
lret
imul
push
sub
ss
xchg
xor
fs
shr
jl
in
xchg
push
ss
push
ror
je
pop
adc
cmpsb
or
movsb
push
ds
filds
lahf
aas
pop
sub
pop
xor
outsl
push
jb
es
inc
push
aam
test
imul
xchg
in
faddp
popa
sbb
sub
mov
xchg
adc
xchg
mov
xor
xchg
testb
andl
stc
fldt
rcl
mov
int3
jae
xchg
popf
sbb
cmp
dec
repz
andb
mov
dec
mov
pop
icebp
or
push
jae
pop
mov
in
and
sub
ficompl
adc
inc
stos
xchg
add
movsb
inc
push
out
mov
mov
jge
push
adc
jnp
inc
jle
aas
jmp
xchg
ss
dec
scas
xlat
adcb
mov
dec
cmp
popa
push
mov
cmp
add
mov
addl
pop
adc
cli
int
mov
sbb
movsl
dec
leave
adc
inc
jmp
push
das
test
or
aam
std
push
cmp
fadds
jg
xchg
and
mov
jbe
sub
and
shlb
andl
jp
fists
xchg
jae
sbb
and
pop
mov
xchg
xchg
or
mov
cs
test
sub
push
dec
adc
jp
test
add
faddl
add
xor
and
pop
xor
push
adc
inc
xor
ja
dec
dec
outsb
cmp
dec
pop
data16
rcrb
fldln2
gs
mov
pop
adc
pop
fsts
inc
mov
xor
mov
test
sbb
arpl
sti
ret
std
mov
mov
pusha
sub
lahf
mov
imul
subl
or
dec
cld
gs
js
scas
cld
outsb
sub
rclb
and
jg
int3
adc
nop
or
xor
lea
or
inc
pop
rorl
jbe
and
cmpsl
outsb
andb
sbb
xchg
jbe
inc
aaa
pop
sbb
adc
in
or
js
add
jno
fsts
or
cmp
out
mov
add
pop
jb
ret
cld
into
hlt
add
aas
xchg
mov
scas
mov
mov
push
fcoms
out
loope
in
xchg
mov
js
mov
xchg
jne
fld
mov
xchg
push
jl
push
int3
cld
in
je
pusha
stc
scas
lcall
ds
jns
insb
out
pop
xor
sbb
jno
fs
sub
iret
adc
xchg
mov
dec
shrl
out
bound
aad
out
stos
adc
ficompl
out
adc
fadds
xor
loope
icebp
or
mov
mov
pop
ds
aaa
xor
sbb
int
sbb
xlat
iret
notb
push
jle
and
sbb
xchg
dec
add
xchg
stos
in
stos
mov
mov
inc
mov
jnp
add
in
daa
xor
inc
cmp
shlb
in
loop
xor
jbe
add
and
cmp
mov
or
ja
lods
push
lahf
cltd
and
sbb
mov
stos
arpl
loope
cmp
sbbl
addr16
mov
or
mov
ljmp
je
dec
movsb
out
dec
psubsb
leave
xchg
cli
inc
or
repz
mov
push
xlat
or
divl
lods
inc
scas
inc
mov
mov
adc
aad
jno
jp
test
dec
aaa
ret
xchg
fdivrl
jp
sbb
mov
xchg
in
pop
loopne
test
shlb
stos
mov
insl
mov
outsl
out
fprem
dec
cmp
lods
xchg
arpl
mov
hlt
out
jl
push
int3
sub
sub
mov
xchg
fmuls
out
outsl
sarl
or
mov
jnp
popa
pop
rclb
mov
sub
outsl
pushf
or
add
rcrb
sub
lds
sub
arpl
sbb
frstor
jecxz
and
dec
dec
imul
cmp
clc
repnz
pop
int3
xchg
pop
loope
add
mov
and
jp
pusha
and
fisubrs
loope
je
adc
int
xchg
mov
rorl
das
dec
fidivrs
push
bound
xor
cmp
fcompl
xor
and
jl
mov
shlb
call
dec
lock
push
xor
pop
dec
xchg
add
dec
loop
xor
and
int
xchg
lahf
xchg
cmp
push
and
add
and
and
stos
jecxz
mov
jmp
add
in
data16
lret
outsl
xchg
fsubrl
jo
sbb
pop
rcrb
mov
pop
and
lods
push
ret
lds
xchg
mov
push
xchg
jbe
lock
test
add
mov
fldcw
enter
xor
ds
dec
in
lea
pop
cmpsl
cmp
xchg
stos
fs
mov
data16
adc
scas
push
xchg
mov
mov
pop
lcall
in
jnp
lcall
or
std
jmp
insl
ret
out
adc
and
and
sbb
or
mov
and
adcl
test
jg
imul
or
or
mov
cwtl
xor
cmp
adc
in
cmp
in
sahf
lret
icebp
popa
push
cltd
mov
js
call
push
add
popf
add
ret
cmp
int3
xor
xchg
fdivrl
sahf
fsubrs
push
sub
mov
pop
add
ret
mull
fs
jg
push
push
aam
or
push
out
add
cmpsl
mov
adc
bound
adc
pop
xor
inc
xchg
adc
jle
fs
lahf
xchg
insb
push
es
cld
push
dec
mov
lods
and
ds
fmuls
add
fsubl
cmp
sub
mov
sti
adc
mov
sub
addr16
inc
and
notb
shrb
pushl
jle
or
ret
orb
aas
push
mov
push
fidivrl
aas
out
nop
and
jns
sbb
inc
xor
test
xor
mul
clc
xchg
cmpl
hlt
aad
ret
aad
lea
popf
movsl
push
test
pop
sub
subl
ja
jb
test
xchg
push
repz
stc
pusha
push
add
stos
sub
pop
daa
sahf
dec
cmp
mov
cmpsb
rorl
pushf
loopne
sub
mov
adc
mov
push
pop
aad
mov
in
sbb
jno
cmp
add
or
inc
mov
xchg
inc
jns
jns
add
test
add
mov
inc
adc
mov
sub
jns
sbb
xchg
xchg
inc
add
fucompp
sbb
cld
ret
mov
sub
inc
add
xchg
pop
push
jo
xchg
movsl
data16
mov
lods
add
repz
adc
pop
lret
dec
into
loope
sub
cli
or
fadds
mov
mov
dec
out
popf
clc
mov
sub
sub
daa
cs
icebp
mov
jp
xchg
movsb
sbb
xor
loopne
daa
sbb
std
sub
movsb
int3
or
or
sub
aam
aam
outsb
pop
cli
pop
ljmp
add
out
and
pop
je
lods
sti
divb
cwtl
hlt
shll
into
int
lahf
rcll
mov
je
sbb
and
pcmpeqw
iret
sub
jecxz
shrb
adc
sbb
or
iret
push
inc
mov
push
cmp
ljmp
rcl
mov
fstps
pushf
std
in
jno
scas
inc
popa
loope
fisubrl
cmp
imul
leave
adc
push
rcll
imul
xchg
pop
and
int
push
xchg
pop
fistl
scas
rcll
call
test
insb
jp
mov
xchg
cmpb
incl
popa
jne
out
mov
xchg
cmp
dec
mov
or
push
jl
rcr
pop
je,pn
cli
cmp
movb
mov
inc
xchg
cwtl
cmp
stos
ret
cmp
xchg
sbb
xchg
xor
ja
fwait
mov
loop
sti
mov
jmp
pop
ficoml
pusha
fsubs
pop
jecxz
outsb
cs
jl
add
xor
cmp
lods
dec
mov
cwtl
ror
dec
lock
aam
sbb
push
or
sbb
jbe
sbb
cmp
xchg
punpcklwd
into
sti
das
dec
cmp
push
pushf
ja
pusha
jae
cmp
mov
adc
in
add
xchg
mov
out
mov
xor
push
lahf
clc
les
inc
push
xchg
cmp
dec
xchg
insb
fs
sahf
mov
cmpsl
sub
jle
adc
test
or
cs
aam
and
cmp
xchg
mov
dec
dec
mov
subb
in
les
push
rcrl
test
pop
ret
jmp
push
xchg
sub
cwtl
insl
xchg
ds
enter
imul
jno
lcall
or
dec
insb
imul
rorl
icebp
push
mov
hlt
hlt
or
leave
sub
cvtpi2ps
add
aad
pop
sbb
in
inc
test
fsubrs
leave
push
insb
xor
ljmp
pop
xchg
mov
dec
test
jnp
mov
fsubl
inc
push
add
in
popf
inc
ljmp
push
test
rclb
std
or
mov
subl
inc
push
ljmp
jb
sbb
test
jae
push
or
movsb
and
add
push
cli
movsl
testb
in
jecxz
push
mov
js
pop
add
ret
imul
popf
ret
roll
mov
inc
pop
sub
adc
and
mov
adc
fucomp
sbb
rcl
and
adc
mov
shll
je
imul
mov
hlt
fwait
adc
cmp
and
ss
fcompl
sbb
cmp
ss
sub
pop
xor
test
mov
adc
xor
imul
loopne
jbe
mov
or
es
xchg
ret
mov
sbb
jb
jno
movsl
adc
das
repz
sbb
test
sbb
daa
push
pusha
pop
jp
aas
or
or
mov
mov
cmp
adc
mov
jecxz
xchg
push
push
jecxz
mov
out
jge
mov
jg
dec
fwait
arpl
push
add
ror
or
sbb
xchg
cmp
sub
dec
jp
add
lods
outsl
scas
imul
das
addb
xor
mov
lock
mov
gs
push
or
jmp
xchg
in
jo
dec
jle
mov
dec
inc
push
adc
cmpsb
sti
lret
mov
xor
into
subl
addr16
clc
inc
mov
xor
iret
jb
pop
and
mov
iret
aam
enter
fildl
cli
and
stos
icebp
pop
jbe
sbb
in
test
iret
xor
inc
xchg
outsb
mov
test
push
mov
dec
pop
jnp
add
loope
or
je
mov
jno
imul
ret
add
mov
push
mov
xchg
out
out
xchg
addr16
mov
adc
stos
or
push
jbe
and
test
push
addr16
repnz
cmc
add
mov
cmovns
xchg
call
pushf
jno
call
cmpsb
in
inc
mov
pop
leave
das
cmp
mov
cmp
pop
xchg
adc
ja
mov
sbb
je
push
add
imul
out
test
fmull
rcl
stos
mov
jmp
imul
lock
cltd
mov
loopne
je
pop
adc
dec
dec
cmp
jnp
std
cmpsl
test
vpsubusb
cltd
and
sub
mov
cltd
sub
jmp
adcl
sub
inc
lods
pop
aaa
arpl
sti
jg
mov
jne
subb
adc
addl
pop
loop
xchg
clc
or
arpl
sub
push
loope
arpl
jg
and
rcrb
std
inc
or
test
xor
cmp
dec
xchg
sub
test
push
xor
roll
out
add
mov
push
mov
les
xor
notb
outsl
sub
cmpsl
in
fcom
jg
fucomip
inc
mov
pop
xlat
dec
sub
aas
adcb
jmp
in
repnz
push
test
cmp
push
push
pop
in
insl
dec
imul
mov
sbb
or
incl
mov
ret
dec
daa
mov
add
clc
mov
jns
adc
jp
mov
cmp
or
or
mov
and
rcrl
push
popf
jno
mov
les
sahf
fcmovnu
fnstsw
add
loopne
lods
mov
cmp
mov
lea
filds
andb
sbb
xchg
insb
dec
shr
jle
or
idivb
sarb
repz
push
mov
cmp
outsb
xor
lock
loope
aaa
test
icebp
xchg
int3
cmpsl
xchg
push
xor
inc
and
adc
pop
inc
push
fiadds
push
jle
clc
data16
pop
inc
jl
mov
adc
outsl
das
lds
or
icebp
push
jne
push
scas
push
pop
push
mov
rdpmc
addr16
xor
rorl
mov
push
adc
xor
aam
mov
lods
clc
iret
lock
mov
mov
mov
mov
lods
add
insb
xchg
pop
push
inc
mov
lret
adc
repnz
sub
js
pusha
jmp
lahf
mov
cmp
and
stos
mov
imul
iret
inc
push
lcall
or
lcall
cs
jae
or
idiv
jmp
imul
ljmp
lahf
mov
push
ds
popf
pop
xor
jnp
dec
inc
sbb
aad
xchg
push
add
filds
ds
pusha
out
add
mov
adc
stos
inc
dec
mov
and
push
sbb
jecxz
in
aas
fstpt
cmp
dec
int
mov
mov
jg
pusha
cmp
xorb
clc
pushf
outsl
push
lods
int
cmp
add
push
xchg
bound
idivb
inc
adc
mov
sbb
push
add
cmp
test
or
ret
data16
mov
mov
sti
cld
outsl
shl
insl
xchg
hlt
pop
push
test
imul
dec
sar
loop
ss
insl
xchg
sub
int
dec
jns
pop
add
xchg
jnp
outsb
dec
jnp
test
adc
push
shll
xor
cltd
adc
repnz
cwtl
sub
adc
jo
push
ss
loope
daa
cmp
mov
or
push
or
cmp
push
lahf
and
es
pusha
push
xchg
test
pop
daa
jecxz
lahf
aam
xchg
fmull
mov
mov
adc
stos
jp
jae
sbb
cmp
mov
sub
push
or
inc
mov
out
mov
or
xchg
lods
jb
xchg
push
movsb
add
adc
push
inc
pop
cmp
xchg
cli
inc
inc
out
shl
cld
int3
aas
fmul
and
mov
mov
movups
mov
and
bound
in
xchg
push
inc
mov
lret
mov
lods
push
and
lahf
arpl
movsb
mov
out
inc
shr
les
mov
scas
mov
xchg
jl
pusha
das
mov
int
movsb
xchg
and
cli
dec
sahf
rorl
adc
imul
fdivl
mov
pop
xor
mov
dec
repnz
sub
jnp
xchg
mov
inc
or
xchg
aas
dec
or
or
lods
xchg
mov
movsl
test
sbb
out
or
stos
adc
fisttps
int
fmul
out
xor
and
push
pop
and
test
add
or
sub
sarb
add
jnp
movsb
cs
lds
in
test
insl
jle
nop
arpl
xchg
sbb
std
push
cli
cmp
inc
and
test
inc
bound
ljmp
neg
js
mov
or
popa
mov
out
insl
xchg
jecxz,pt
sbb
mov
dec
movlhps
mov
shll
lret
aas
stc
gs
push
or
dec
pop
pusha
orl
mov
xchg
test
fisubs
sarb
pop
mov
or
add
enter
lds
ret
lahf
cli
or
adc
inc
pop
lea
jmp
push
lret
loope
sti
xor
xor
jl
les
lods
hlt
addr16
lret
jmp
jl
hlt
cld
push
mov
jno
cmpsl
out
xor
arpl
stos
pop
pop
mov
adc
jb
mov
jmpw
mov
fldl
mov
mov
imul
repz
jle
xchg
test
xchg
adc
mov
insb
ja
pop
jle
leave
fldcw
mov
lods
int3
and
loop
xor
sub
dec
sub
sbbl
mov
jl,pt
test
mov
test
lret
test
sbb
add
mov
fst
fiadds
arpl
dec
xor
add
lahf
mov
insb
cld
stc
andl
lcall
sbb
jecxz
inc
lock
or
sbb
rol
adc
dec
cmc
ret
sub
mov
xor
loop
cli
push
xchg
adc
lret
arpl
and
lcall
sub
add
out
sub
mov
insl
push
rorb
sarl
pusha
and
add
movsl
in
rorl
jb
push
jo
jl
dec
in
mov
jg
iret
mov
inc
push
aad
xchg
and
adc
xchg
or
lods
cs
xchg
push
and
leave
xchg
or
popa
add
mov
mov
fbld
fwait
cmp
mov
scas
mov
mov
or
add
xor
dec
push
mov
dec
mov
sarl
push
out
dec
adc
in
shlb
mov
mov
cld
aad
sbb
xchg
push
and
imul
shll
adc
fcmovnbe
cmc
jmp
inc
xor
mov
jecxz
outsl
data16
fadd
jle
bound
xor
or
in
push
dec
test
aam
sub
and
jne
insb
les
movsl
xchg
cmpsl
pop
jg
add
sbb
jb
fsubl
mov
xchg
xchg
sbb
std
dec
in
movsl
flds
test
push
or
add
mov
aas
out
mov
xor
fistps
push
nop
or
dec
notl
jae
and
cwtl
lret
leave
mov
jecxz
loopne
in
aad
test
cli
daa
bound
sbb
and
mov
js
pop
mov
jo
push
pop
out
inc
inc
iret
jl
out
xor
cmp
pop
mov
outsl
sbb
pop
jecxz
mov
pop
ljmp
test
rolb
sbb
and
xchg
mov
sbb
cmpsl
inc
jns
adc
cltd
fnstenv
shrb
push
xchg
dec
sti
sub
mov
shr
dec
xor
add
mov
mov
in
pusha
icebp
xchg
cmp
repnz
out
int
xor
ret
mov
sbb
je
or
dec
push
cmpsl
mov
test
xchg
add
fwait
lods
and
mov
ss
in
mov
aad
test
jno
rcll
or
dec
sbb
es
add
scas
stos
cltd
clc
sbb
and
mov
mov
cmc
xchg
imulb
pop
and
push
xor
xor
sahf
dec
hlt
mov
fisttpll
popa
adc
sbb
je
or
or
jecxz
out
jmp
push
push
in
inc
roll
sbb
or
mov
cmp
pop
stc
push
lret
nop
mov
ja
pushl
pop
imulb
push
add
pushf
jecxz
adc
mov
inc
xchg
insb
mov
in
cmp
arpl
jb
add
lret
sbbl
cli
or
mov
mov
fldcw
sahf
insl
sub
mov
pop
cli
and
jb
aaa
ljmp
mov
movsb
repz
inc
shll
pop
push
and
mov
ja
lods
push
fisttpll
xchg
icebp
mov
addl
pushf
inc
lods
ret
repnz
pushf
rcl
dec
jnp
xchg
dec
jns
dec
xchg
mov
mov
and
lock
lcall
fmuls
xor
andl
lds
xorb
and
into
loopne
mov
sub
divb
insb
dec
mov
xlat
inc
mov
es
jecxz
pop
mov
cmp
pushf
daa
lea
mov
aam
pop
sub
xor
inc
push
imul
push
pop
jne
mov
movsl
pop
fldl
shlb
repnz
in
jnp
xor
dec
xchg
jae
aad
lods
sub
mov
sahf
mov
jl
pop
lock
push
test
gs
mov
sbb
or
lods
movsb
or
out
pop
test
mov
jns
int3
insl
mov
es
push
mov
hlt
icebp
mov
outsb
imul
popf
mov
jb
sarl
mov
adc
hlt
in
jmp
imul
stos
iret
shlb
iret
loopne
lahf
je
add
sub
lods
stos
push
arpl
fmuls
notl
sub
daa
hlt
pop
add
dec
adcb
fwait
insb
mov
dec
std
data16
fidivl
imull
push
repz
setl
cmp
aad
xchg
mov
or
push
ret
fiaddl
ret
push
xchg
and
jb
test
sub
fadd
adc
inc
or
xchg
aaa
mov
xchg
mov
xchg
jo
add
in
add
adc
sbb
loop
or
jecxz
pop
mov
pop
and
je
pop
fsub
test
adc
xor
lds
dec
mov
jbe
push
jns
fdivl
dec
arpl
fiadds
fists
dec
rorl
mov
push
pop
cmp
add
push
mov
or
sbb
xor
fildl
bound
pushf
sub
and
cwtl
cmp
sub
loopne
pop
test
leave
addr16
mov
xor
push
fstl
in
hlt
sahf
test
dec
dec
and
out
push
into
add
cs
add
int3
push
or
movsb
lret
out
stc
cmp
push
jnp
mov
pop
dec
aad
add
iret
adc
fcmovb
notb
stos
jno
imul
push
call
and
mov
cmpsl
jmp
adc
sbb
adc
andl
fdivrl
cmpsb
movsb
sbb
xchg
mov
cmp
push
sub
push
repz
xchg
stos
call
fs
ja
outsl
inc
sbb
sbb
jp
push
jmp
ret
lahf
cwtl
rcrb
adc
jnp
jmp
xor
repnz
je
int
dec
pop
sahf
xor
ret
xchg
call
inc
dec
fisttps
xchg
or
bound
into
pop
inc
cmp
mov
and
or
int3
rcrb
cmc
movsb
dec
test
sbb
test
icebp
fwait
or
nop
outsb
adc
in
inc
je
dec
inc
inc
or
pop
loop
out
ret
shlb
mov
test
es
daa
pop
fsub
data16
into
add
test
pusha
add
cmp
stos
xchg
dec
xchg
lcall
jge
bound
repz
mov
or
and
mov
jbe
xchg
movsl
mov
push
arpl
or
scas
lret
fs
ret
int
outsb
cmpsl
shlb
adc
push
rclb
sbb
push
sbb
lds
fwait
leave
sti
pop
add
lock
or
lock
lahf
dec
xor
js
push
sbbl
out
pop
sbb
in
into
scas
int3
pop
cmp
sbb
outsb
xor
orl
jge
call
dec
popf
ja
packsswb
sub
cmpsl
xor
ficoms
inc
lret
pusha
inc
imul
or
imul
jl
pop
add
xchg
outsl
fs
push
in
add
cmp
mov
adc
stc
mov
int3
pop
mov
insl
xor
mov
jnp
and
adc
es
lock
jle
xor
inc
push
out
nop
mov
inc
popf
out
mov
sahf
andb
aas
adc
rol
shl
mov
mov
cmp
push
xchg
cmpsb
lahf
push
inc
lods
das
mov
mov
sub
cmpl
lods
mov
pop
popa
mov
push
std
jmp
sbb
mov
sub
xor
xor
iret
mov
mov
adc
data16
adc
inc
add
shlb
lret
sbb
aas
mov
loopne
inc
call
push
push
xlat
pop
lock
in
pop
inc
out
push
xor
push
sbb
xchg
mov
jg
call
cmpsl
sub
movsl
ds
push
inc
outsl
push
inc
sbb
push
cld
arpl
decb
mov
mov
into
jne
inc
push
dec
incl
mov
fst
int3
lds
sub
iret
mov
sub
and
movsb
pop
pop
sbb
cmp
popf
or
dec
or
pop
add
movsb
mov
stos
rclb
fisubrs
jbe
fwait
jbe
lock
inc
in
jge
xchg
adc
fwait
mov
mov
mov
jecxz
popa
roll
jmp
cmc
jne
push
mov
dec
push
adc
mov
popa
jecxz
inc
ljmp
inc
dec
iret
aas
shrb
jg
into
scas
inc
fcoml
dec
out
std
jmp
mov
dec
addb
inc
mov
andb
ret
ljmp
cltd
shlb
sti
mov
scas
xchg
loop
lret
imul
cmpsl
imul
cmp
dec
mov
adc
inc
sub
xchg
mov
cmp
in
daa
push
scas
push
pusha
add
int3
sub
int
sti
out
and
mov
lods
push
jo
mov
mov
jl
les
adc
fnstcw
lds
hlt
pop
fidivs
and
push
push
insl
xchg
sbb
inc
push
pop
mov
push
movsb
lret
repz
and
dec
lcall
ljmp
fsubrp
je
pop
iret
xchg
fwait
rol
jg
dec
xchg
inc
xchg
mov
fs
inc
mov
cmpsl
mov
add
pop
jmp
subl
sub
or
or
sahf
incl
mov
insl
mov
lods
rcr
arpl
or
cwtl
arpl
and
cmp
shrl
push
mov
inc
or
pop
push
inc
mull
repz
fs
push
xchg
rclb
and
lods
pop
aaa
inc
popf
ljmp
xchg
repz
stos
jbe
enter
fldt
js
push
lods
pop
leave
mov
jbe
add
jne
pop
leave
or
gs
mov
adc
or
and
out
loop
mov
or
leave
imul
push
aaa
or
popa
inc
rolb
xchg
aam
mov
or
mov
rolb
icebp
lcall
mov
inc
mov
fldz
mov
insl
and
push
popa
xor
test
xchg
inc
movsb
xor
mov
aad
loop
inc
push
fcmovnb
sbb
dec
add
pop
or
lea
jg
std
outsl
leave
mov
push
xchg
ret
mov
add
in
mov
daa
push
mov
fs
fsub
mov
out
pop
cld
jp
shll
xchg
insl
jmp
dec
dec
ret
ret
movsb
cwtl
mov
dec
cwtl
es
aad
or
mov
rcr
mov
loopne
jo
push
and
sub
imul
sbb
mov
add
jle
test
cltd
or
push
lret
push
mov
mov
in
mov
cs
pop
call
scas
out
mov
add
dec
dec
ds
lahf
aaa
cs
add
aaa
pop
push
sbb
leave
push
mov
js
cmp
sub
jnp
mov
out
cmp
ljmp
cmp
jne
out
mov
loope
push
js
repnz
inc
and
pusha
or
sub
loop
scas
imul
inc
pop
or
repz
pop
aad
and
mov
lods
pop
gs
arpl
cmpsl
popa
imul
adc
leave
lahf
xor
daa
sub
pop
pop
jbe
cmpsl
add
xchg
and
mov
pop
mov
lea
dec
cmp
in
sbb
xchg
das
testl
jp
hlt
dec
jae
shl
lahf
stos
cld
mov
ret
out
mov
mov
pop
inc
push
loop
cmpsl
xchg
jecxz
xchg
mov
cli
lods
fcmovu
add
push
mov
movsb
in
jg
out
out
mov
nop
add
adc
pop
lods
movsb
daa
daa
mov
leave
rcrl
mov
dec
cmp
lcall
or
repz
popf
xor
fstpl
xor
fisttpll
imul
cs
int
shlb
or
shr
outsl
mov
mov
inc
test
lahf
negb
ljmp
jl
push
pop
mov
lods
loope
mov
jg
cmpsb
scas
inc
es
lods
or
dec
adc
lock
into
lret
dec
and
jmp
mov
jle
or
or
mov
das
adcb
sbb
lcall
add
testl
imul
data16
mov
rorb
js
and
push
dec
jle
lcall
repnz
bndldx
mov
sbb
icebp
or
mov
addb
xchg
sub
aam
jmp
out
pushf
sbb
iret
pop
push
cmpb
clc
aaa
add
and
mov
mov
leave
push
mov
xchg
lahf
test
cmp
shll
fcmovne
ret
in
call
aas
mov
cs
sbb
push
ficoml
xchg
lret
dec
adc
jecxz
and
loope
scas
lods
ss
or
mov
lods
ror
adc
xor
mov
ret
push
cmp
int3
or
mov
sub
adc
adc
xor
add
hlt
dec
pop
xor
aad
pop
inc
sbb
aaa
inc
mov
mov
bound
mov
test
shll
fcmovnbe
lret
outsb
add
fs
fucomi
lahf
mov
cld
push
ljmp
pop
scas
pop
lods
loop
dec
adc
mov
stos
clc
mov
cmp
adc
sti
in
lock
mov
test
jecxz
push
pop
xor
sub
sahf
sti
shrl
bound
imul
ret
xor
dec
dec
callw
mov
sbb
push
sbb
loopne
mov
adc
jnp
cwtl
lcall
lock
inc
out
xchg
mov
pop
dec
cvtps2pi
dec
les
aam
movsl
mov
stos
fcoms
pop
and
sub
stc
nop
and
jbe
sahf
sahf
sbb
scas
xor
jbe
pop
out
outsb
xor
or
dec
test
or
orl
pop
sub
jbe,pn
js
shll
das
aad
adc
cmpsb
in
hlt
rcrb
lcall
push
push
ljmp
xor
sub
mov
mov
jno
pusha
adcl
inc
xchg
and
repnz
je
aaa
out
inc
outsb
fidivl
sub
mov
sub
outsb
xor
and
mov
movsl
loopne
movsb
xchg
sbb
gs
out
popa
int3
mov
push
mov
sub
aaa
sbb
mov
add
enter
sub
xchg
jne
mov
movsb
xor
dec
inc
xor
pop
sbb
scas
adc
mov
jl
aad
shlb
adc
push
fistl
les
mov
repnz
aad
add
aaa
mov
xchg
or
inc
dec
mov
sub
adc
or
and
int3
xchg
ret
xchg
xor
mov
push
sub
sub
jecxz
mov
imul
aas
mov
cmp
sahf
dec
in
dec
xchg
xchg
adc
sahf
jo
pop
addw
adc
xlat
or
enter
pusha
mov
mov
daa
and
push
lret
mov
jne
mov
decb
cwtl
xchg
jmp
insb
push
pop
aad
mov
scas
dec
inc
xchg
int
pop
sti
das
lret
push
jne
bound
xor
lret
daa
fmulp
fs
sub
and
es
imul
push
jl
cltd
aaa
out
gs
popf
std
push
jmp
int3
mov
jg
xchg
cmp
xchg
mov
in
jnp
test
pusha
ret
popf
es
in
movsl
cmpps
push
xor
push
sarl
mov
rorb
inc
cs
ret
jne
push
ficompl
inc
ret
and
mov
mov
mov
mov
mull
add
sbb
and
fs
movsl
aad
push
inc
xchg
out
arpl
enter
add
arpl
in
int
mov
addr16
int3
gs
xchg
ret
nop
fsubs
jmp
pop
pop
push
daa
or
jae
in
adc
sub
sbb
popf
adc
xor
repnz
pop
mov
sahf
loopne
repz
out
xchg
jno
xchg
test
mov
fstp
and
into
mov
lea
aad
test
adc
aaa
add
aad
jmp
jp
es
cmp
xor
loope
out
mov
loopne
cli
sti
lret
cld
in
pop
add
sbb
jle
xor
mov
js
pop
sub
rclb
xchg
sub
and
movsb
mov
dec
scas
cmpsl
fsubrs
stos
sahf
pop
ljmp
cli
push
adc
add
inc
mov
or
insl
jg
ss
movsl
and
sbb
jnp
jb
xor
out
call
mov
xchg
push
sbb
cmp
subb
or
mov
dec
mov
out
mov
out
lret
xor
daa
lea
add
mov
xor
xchg
xor
jle
cld
adc
mov
ret
add
add
roll
sbb
ret
popa
out
xor
push
sbb
mov
icebp
shll
cmpsl
xlat
in
leave
mov
popf
sbb
pop
outsb
mov
mov
in
insb
xchg
mov
mov
jne
sub
lods
sarl
xor
inc
aad
sbb
fmull
dec
pop
mov
es
and
lret
scas
test
or
addb
jo
add
or
add
jl
subl
mov
enter
pop
pop
or
shrb
adcl
mov
xchg
sub
xor
stc
cmc
in
das
or
xor
movsb
mov
inc
dec
enter
stos
and
pop
sbb
pop
leave
xor
jns
mov
pusha
cmp
mov
sub
lcall
or
rcl
int3
mov
je
in
shlb
mov
mov
rolb
stos
inc
cmc
sub
and
fcomps
popf
and
mov
jp
add
ret
mov
mov
pushf
das
test
das
mov
cmc
push
mov
dec
xchg
jne
cmpsl
mov
sbb
mov
sub
push
jo
inc
lea
aaa
mov
inc
sub
filds
bound
cmp
sub
mov
fsts
jp
sbb
cltd
jbe
pop
jg
insl
dec
das
notb
sbb
test
push
iret
orb
rcl
rorl
in
imul
test
ret
cmp
fidivrl
shlb
push
stc
push
mov
loopne
sub
divl
inc
fdivs
cli
mov
sub
mov
fcomps
negb
pop
pop
daa
fs
dec
int
pusha
mov
push
sbb
mov
or
push
mov
fnstcw
ret
daa
insl
testl
and
incl
sbb
repnz
push
and
ljmp
dec
je
mov
jbe
push
xchg
sub
sub
adc
adc
cld
add
lcall
push
sub
push
or
icebp
lret
mov
dec
push
push
shl
push
pushf
pop
pop
pop
pop
fwait
mov
out
cmp
movsb
dec
xor
es
push
cmp
sahf
ret
shl
xchg
fwait
jle
mov
add
sub
push
xor
lret
clc
xor
sbbl
mov
xor
cmp
pop
out
pop
xchg
mov
dec
loopne
aam
mov
mov
cmc
lret
mull
jp
in
shlb
ds
push
les
rcrl
dec
iret
and
imul
shrl
mov
repz
jecxz
sbbl
cmpsl
cmp
enter
mov
push
cli
mov
cmpsb
stos
inc
movsl
cmp
cmpsb
and
xchg
je
mov
and
es
lret
inc
shrb
or
mov
sub
pop
addb
nop
fcmovb
push
js
shrl
cmp
icebp
imul
or
fcomps
outsl
enter
inc
je
insl
push
dec
orl
popa
cmc
jmp
mov
insl
push
push
cltd
adc
gs
and
pop
adc
popf
push
out
jae
pop
fisubs
push
into
jae
push
or
mov
dec
add
mov
ss
mov
outsb
iret
leave
adc
push
nop
imul
mov
popl
inc
mov
stos
sahf
dec
insb
jmp
fimull
rclb
sub
movsl
cmp
ret
push
xor
mov
pop
inc
fwait
mov
dec
fmulp
inc
test
pop
pop
fisubrs
mov
or
daa
fsubrp
mov
or
and
popf
mov
and
test
sbb
fnstsw
cmp
mov
xor
xchg
stos
lods
scas
jle
sub
stc
daa
xchg
mov
ret
shll
lret
push
or
aad
or
ja
mov
xchg
pop
into
sub
pop
cmp
pop
fbstp
imul
rcrl
pusha
pop
loopne
fisttpl
out
and
cmp
ja
lret
rorb
outsl
xchg
outsl
push
adc
cmp
fs
outsl
je
scas
add
ds
xchg
out
movsl
push
in
adc
jae
mov
aas
mov
adc
jmp
rcll
jns
cmp
out
das
shlb
fldl
xor
shrb
mov
jmp
ror
xchg
mov
jbe
cmp
daa
pcmpeqb
xchg
daa
pop
xor
push
in
call
lds
adc
cld
or
stos
fcoms
shlb
repnz
dec
fsubl
pusha
stc
sub
movsb
ds
xchg
sbb
lock
cmp
test
inc
cmp
jp
cmp
add
mov
lods
dec
addr16
mov
push
sub
dec
add
mov
das
movsb
call
jnp
jnp
xchg
jge
and
push
dec
jecxz
call
mov
mov
jnp
cmpsb
xchg
data16
aam
pop
ljmp
dec
jne
pop
aad
sbbl
cmp
add
lahf
dec
cld
xchg
test
ficomps
stos
pop
add
add
in
add
cmp
push
jne
testb
push
cmp
inc
out
rcrl
or
mov
out
cmpsb
notb
clc
inc
scas
out
aaa
sub
add
pop
sbb
mov
call
pop
fisttpl
nop
push
pop
and
cmp
push
sbb
mov
stc
pop
xlat
les
jmp
lea
arpl
test
stos
test
mov
jb
fisubrs
sub
and
stos
std
into
dec
packsswb
jle
sub
dec
mov
in
pop
les
jbe
or
mov
lods
add
jp
pop
jno
and
jecxz
push
cmp
push
imul
cmp
jae
popf
add
or
push
inc
and
add
cltd
mov
data16
ljmp
lods
cs
repz
add
inc
loop
xor
mov
mov
cmp
dec
adc
mov
xchg
fs
jmp
cwtl
mov
dec
rclb
and
int3
subl
ljmp
mov
or
xchg
dec
inc
stc
mov
js
or
adc
aas
pop
jae
or
clc
lods
lods
or
lea
ret
push
add
xor
lret
outsl
insb
into
inc
fmuls
inc
in
cmp
adc
xor
and
adc
shlb
add
cmc
jns
rolb
xor
sbb
cmp
xor
mov
push
hlt
test
sbb
imul
and
pop
lea
mov
and
es
test
movsb
sub
add
and
ror
enter
sub
jne
push
outsl
lods
xor
adc
jns
sub
jl
and
push
imul
jns
mov
jbe
push
cli
aad
das
fildl
mov
arpl
aad
cmp
ret
cmp
mov
adc
pop
adc
or
not
data16
pop
add
cmp
mov
cld
xchg
pop
mov
sahf
sub
add
out
fsubrl
popa
loopne
push
cmp
jmp
test
not
adc
test
push
or
das
mov
scas
repnz
incl
cmp
mov
sbb
xor
loop
mov
je
pusha
ss
ret
test
and
mov
andb
push
jno
mov
and
pop
fiaddl
jp
sub
xchg
out
jecxz
fldenv
dec
dec
mov
and
movsl
xor
out
scas
mov
pop
sub
cmp
sbb
mull
push
ds
xor
movaps
inc
inc
pop
mov
mov
sbb
movl
sub
lcallw
out
int
pop
add
imul
fs
fdivl
jo
pop
lods
shlb
mov
repz
or
xchg
daa
adc
cmpsl
or
mov
adc
sub
lock
data16
lods
ss
inc
jmp
add
fdivrl
pop
push
or
std
jnp
push
addl
mov
mov
push
std
dec
push
and
xchg
enter
push
dec
sarl
mov
das
int3
xchg
cmpsb
cmp
test
push
sub
and
mov
mov
scas
ret
outsl
inc
icebp
xlat
pop
adc
sahf
adc
mov
test
sbb
sahf
mov
loope
mov
and
cld
dec
and
sbb
out
mov
sub
mov
dec
rolb
ret
lret
xor
packuswb
mov
push
daa
xadd
arpl
fisttpll
jno
in
mov
pop
dec
popa
outsl
inc
add
lods
in
jge
fwait
jb
cmp
sahf
cld
dec
and
jp
and
xchg
rorl
mov
mov
sbb
pop
pop
adc
negb
pop
pop
or
push
add
mov
or
pop
ds
int
fs
fs
xor
push
in
imul
addr16
loope
mov
cmpsb
pop
ds
call
jns
and
out
cmpsb
jb
ret
xchg
mov
leave
xor
xchg
xchg
mov
daa
andl
lret
lahf
lcall
rclb
inc
fistpll
enter
loop
sti
js
pop
out
sbb
push
xchg
mov
lea
mov
iret
daa
push
lods
shrb
mov
pusha
repz
jg
push
jns
mov
ds
hlt
mov
xchg
xchg
or
test
data16
mov
mov
pushl
mov
in
test
sbb
idivb
xchg
mov
mov
lret
sub
jecxz
leave
ss
jnp
popa
xchg
push
sbb
sub
sub
pop
jbe
add
out
imul
ljmp
mov
inc
jecxz
les
icebp
jb
aas
mov
xchg
ja
outsb
test
sbb
lcall
aaa
out
push
mov
xchg
aaa
cwtl
xchg
gs
mov
outsb
hlt
xchg
pushf
xchg
rcr
sub
test
testb
hlt
sbb
inc
iret
call
cltd
insl
jge
icebp
adc
inc
pop
sbb
push
mov
loop
sub
push
dec
cltd
push
sbb
sbb
or
push
in
ret
and
adc
cmpsb
dec
int3
pusha
hlt
rorl
and
dec
inc
jno
jge
addb
pop
outsl
jg
cli
in
or
xchg
imul
push
or
and
push
jle
pop
insb
cs
fs
xor
xchg
out
rcrl
push
scas
por
push
xor
and
aam
scas
mov
pop
cmp
insb
mov
movsb
mov
scas
push
push
int3
insb
popf
cmpl
imul
ds
mov
pcmpeqw
sub
dec
dec
pop
ficoml
xchg
add
lods
and
in
fmull
lcall
pop
jne
repz
cmp
dec
cmp
mov
mov
gs
movsb
loopne
mov
jl
mov
adc
mov
ja
xlat
pop
dec
mov
mov
or
pop
cld
imul
gs
sbb
inc
clc
pop
mov
jecxz
inc
mov
sahf
pop
das
and
mull
shl
push
jb
aam
fldl
push
pop
vcvtss2si
or
inc
ss
aam
int3
iret
in
inc
popa
cmp
jg
clc
mov
lods
in
sub
out
inc
iret
push
jnp
fdivs
out
xchg
pop
xchg
xor
jg
pop
out
fcmove
sbbl
xor
arpl
ret
repnz
cmpsb
and
mov
jne
cs
int3
pusha
mov
iret
aam
add
xchg
push
sub
dec
fmuls
add
test
ss
fistl
cmc
outsb
loopne
jge
push
das
js
cmp
je
test
pop
das
iret
test
jle
or
mov
push
int3
xchg
data16
and
repz
hlt
adc
mov
shlb
aad
inc
fucomi
xor
rcrl
pop
mov
fisttpll
xlat
stos
rcr
loopne
enter
adc
shll
ds
outsl
mov
xor
pop
data16
out
leave
adc
mov
lods
ss
adc
je
pop
fucomp
pop
ret
and
sub
xchg
mov
xchg
xor
shlb
mov
sti
imul
lds
push
loope
lock
adc
jb
inc
fldt
std
cmp
adc
sahf
add
mov
xchg
movsl
ss
sti
mov
imul
xchg
mov
lcall
daa
adc
jns
insl
or
stos
mov
subb
jmp
push
rcll
pop
xor
hlt
xchg
xchg
inc
mov
pop
in
push
bound
jo
jle
mov
enter
pop
lods
popa
sbb
addr16
sar
sub
rcr
xchg
adc
cli
push
xchg
and
int3
mov
jb
xlat
jb
fldt
andb
cld
fdivr
and
mov
lret
cmp
mov
and
cmp
jp
push
sbb
rcll
and
mov
lret
fistl
dec
add
xor
fldenv
insl
push
adc
mov
cmpsb
addr16
pop
jns
mov
mov
rorb
xor
cltd
inc
fs
jle,pt
or
xor
inc
ss
psllw
int
xor
cld
sbb
test
cmpsl
adc
push
pop
jmp
pop
ret
fcoms
sub
ja
push
xchg
cld
jle
jl
pop
cmc
sarb
imul
addr16
aam
shl
mov
filds
jne
mov
mov
xor
mov
lcall
lods
sbb
xchg
and
xchg
sbb
in
adc
sbb
jp
scas
cmp
fisubl
shlb
adc
insb
cmpsl
mov
jg
mov
xchg
mov
in
cmp
sub
mov
sbb
out
call
adc
mov
jbe
cmpsb
push
xchg
adc
adc
dec
add
lock
lds
sbb
mov
jnp
xor
ljmp
test
xchg
imul
sahf
pusha
mov
call
mov
dec
cmp
push
or
and
mov
xchg
add
xchg
sub
mov
shll
notl
loopne
lds
call
frstor
fs
outsl
dec
xchg
mov
add
push
mov
rclb
cs
jge
into
push
rcll
mov
stc
or
shll
mov
xor
out
push
jecxz
dec
jp
lods
mov
aas
call
ljmp
mov
mov
dec
adc
jp
dec
jne
lret
sbb
jne
ret
pop
inc
and
jle
dec
aam
out
and
shlb
or
push
lcall
shll
xchg
dec
cltd
ret
hlt
sub
mov
jb
fcompl
jge
pop
lea
inc
adc
sarb
aas
std
sahf
jo
cmp
or
int3
repnz
sub
jns
inc
jne
loopne
into
stos
mull
sub
sahf
das
push
cmpl
pop
rolb
or
lock
mov
push
xchg
in
test
std
jns
pop
imul
insb
mov
call
icebp
into
sbb
test
movsl
xchg
popa
push
mov
fwait
aaa
jl
fwait
imul
scas
repz
add
movsl
loop
sub
dec
dec
jmp
xchg
add
pop
imul
sbb
fmull
mov
sti
cmp
inc
inc
sub
pop
pop
pop
shll
or
in
push
aaa
lock
imul
push
aaa
inc
xchg
xor
sarb
ret
jmp
dec
stos
xchg
mov
cltd
test
dec
outsb
lret
loope
add
std
mov
sub
jne
xchg
pop
mov
test
stos
mov
cmp
push
test
filds
jle
cmp
push
sub
jle
jne
stos
call
cmpsl
shlb
nop
pop
jnp
inc
mov
inc
xchg
icebp
jp
mov
jbe
mov
test
cwtl
jbe
clc
adc
ja
push
mov
xor
push
insb
cmp
call
js
sub
fistpl
mov
addb
and
jmp
rclb
shll
fisubs
sbb
cmp
xor
fildl
clc
pop
cli
jg
stc
test
sahf
mov
mov
or
mov
clc
lods
add
ds
nop
jl
and
lock
in
inc
pop
cld
dec
mov
push
xchg
popa
push
push
dec
inc
sbbl
push
repnz
js
pushf
mov
sbb
outsb
aas
mov
or
ja
rcrb
inc
hlt
push
stos
jne
pop
movsl
sub
push
xor
inc
notl
or
jmp
pop
sub
clc
mov
xchg
jne
cmpsb
inc
test
insb
sti
jmp
ljmp
push
inc
mov
fisubrl
and
mov
inc
in
pop
fs
jl
mov
fwait
cwtl
in
dec
outsl
mov
mov
stc
jecxz
outsb
sub
add
ficoml
cmpb
in
arpl
cs
mov
scas
popa
das
fptan
xor
fisttpl
std
repnz
data16
sarl
lods
aaa
lods
mov
cwtl
mov
test
bnd
sub
adc
push
ss
jne
xchg
add
stos
xchg
cmp
cmc
mov
stos
cld
in
lahf
push
in
lret
jo
push
push
mov
aaa
adc
std
jnp
inc
in
mov
stc
inc
sub
mov
push
lea
jae
jp
and
cmp
jg
push
mov
shrl
inc
nop
ja
ficoml
and
jbe
mov
imul
pextrw
sbb
test
inc
jge
aad
stc
leave
js
and
dec
xor
sbb
outsl
aaa
ret
push
xor
cmp
pop
xchg
add
std
daa
push
in
flds
imul
xlat
arpl
popa
lret
sbb
dec
push
jmp
lcall
cmp
outsb
lods
pop
jbe
xor
movsl
sub
jno
pop
push
into
ret
mov
and
int3
addr16
cmp
sbb
xor
push
and
fsubl
mov
xor
xchg
movsb
lahf
push
mov
inc
dec
jne
sahf
adc
in
jno
fiaddl
rcrb
mov
fiaddl
xor
lds
pop
and
sbbl
aaa
cmp
adc
or
and
sub
xlat
xor
bound
pop
sbb
cmpsb
sub
out
xchg
lret
mov
paddw
out
add
or
jnp
dec
das
dec
iret
fdivrl
jno
inc
inc
pop
jmp
mov
jne
or
jno
sti
sbb
test
and
es
xchg
test
out
adc
les
push
pusha
xor
xor
xchg
sub
ffree
push
iret
ljmp
adc
in
cmp
push
cltd
adc
repnz
xor
jno
xor
adc
mov
mov
in
mov
sbb
xchg
adc
cld
cltd
and
pop
in
sub
mov
std
add
xor
orl
and
loop
call
or
movsb
loopne
stc
js
je
dec
jns
and
cltd
xchg
inc
or
pop
mov
ret
mov
dec
sub
inc
pop
xchg
xchg
jmp
push
nop
push
pop
push
mov
movsb
fadds
mov
xor
adc
out
sbb
xor
mov
sbb
ss
in
shlb
push
mov
cmp
cltd
xor
jmp
cmp
lret
inc
pop
jns
pop
inc
xchg
scas
dec
push
or
adc
jle
or
jne
mov
sbb
pop
inc
repnz
push
aam
cmp
or
and
outsl
pop
shrl
shr
dec
xchg
and
fnstsw
cltd
int
cmp
inc
pop
add
js
push
in
sbb
sbb
pop
dec
jns
cmc
jge
sub
insl
loopne
hlt
dec
lret
scas
clc
sub
sub
clc
jb
lcall
pop
and
sbb
fiaddl
pop
mov
shll
cmc
lret
jo
clc
xchg
jne
cmp
ljmp
mov
imul
add
lods
mov
lock
mov
mov
inc
mov
sub
dec
es
test
dec
add
xchg
or
aas
fdivs
pop
or
sti
imul
jne
sub
push
clc
mov
jbe
cmp
add
aad
cld
lods
fidivl
stos
clc
xorps
dec
lds
mov
inc
inc
sub
movsb
jns
mov
lds
lret
xchg
mov
fsubrl
rcl
sbb
sbb
sub
leave
mov
pop
insb
test
jns
in
leave
ja
lods
or
pushf
xor
js
psllq
pop
jno
arpl
mov
shll
cmp
loop
mov
cmp
adc
jnp
or
cli
test
cltd
into
aad
mov
and
jb
sti
stos
nop
dec
scas
inc
pushf
imul
pushf
sub
test
fists
adc
insb
jae
pop
scas
pop
cld
push
mov
jmp
jecxz
add
pop
int
jmp
mov
pop
shrb
sarl
aas
jp
jbe
mov
xchg
std
popa
push
inc
mov
test
pop
in
js
lret
pusha
out
or
mov
int3
sub
mov
test
divl
mov
shl
in
mov
or
adc
or
push
clc
pop
inc
out
gs
inc
dec
in
pop
push
popw
inc
icebp
ljmp
xor
sub
loope
mov
daa
pop
dec
cmp
mov
sub
jp
stc
xlat
aas
ret
dec
loop
call
in
mov
or
sbb
mov
and
push
cmpsl
negl
ljmp
pop
scas
xor
nop
jmp
add
and
fs
inc
add
mov
pop
arpl
mov
pop
add
inc
push
aas
push
add
and
push
divl
jp
out
jne
lahf
lds
inc
hlt
cmp
adc
shr
stos
pusha
jecxz
insb
rcrb
fcomip
add
stos
adc
repnz
insl
xchg
cmp
and
push
lret
push
mov
mov
cmc
popa
mov
lods
loopne
andb
int3
pop
nop
mov
xchg
addr16
dec
or
mov
mov
scas
pop
dec
vmread
add
and
cmp
cmp
pop
incb
in
sbb
and
out
push
scas
out
sbb
popl
mov
cmp
push
and
jge
call
loop
xor
iret
ret
loop
and
mov
out
pop
xchg
adc
bound
jmp
push
sbb
mov
add
sar
sub
lea
aas
bound
pop
mov
adcb
repnz
cld
and
mov
and
sub
adc
mov
mov
xor
jg
clc
add
xlat
push
and
dec
pop
mov
adc
vmwrite
mov
xor
and
arpl
or
ret
test
insl
inc
dec
pop
fsts
push
insb
icebp
out
mov
pop
xchg
pop
sbbl
sbb
push
aam
inc
daa
mov
cmpsl
test
out
je
sbb
rcr
adc
or
xorl
mov
rclb
mov
xor
in
daa
movsl
lds
xorl
xchg
xor
pop
into
pop
sti
cmc
inc
adc
test
pop
mov
add
mov
loopne
mov
and
pushf
addl
push
loope
arpl
or
stc
xchg
pusha
push
and
cmp
xor
cs
sub
sbb
and
pop
sub
jb
jno
and
ja
sbb
shlb
inc
gs
imul
neg
imul
es
pop
js
pusha
mov
jne
inc
sbb
lret
inc
add
jmp
sbb
mov
inc
shl
cmpl
and
dec
ljmp
std
push
cld
mov
fwait
pop
pop
sbb
jle
adc
dec
push
fldcw
xor
out
fildl
adc
sub
ficoml
jmp
jae
pop
dec
cmpl
pop
pop
adc
inc
mov
jp
into
adc
ret
in
leave
lret
sbb
push
nop
mov
or
push
xchg
cmp
not
roll
outsl
or
add
js
and
pop
jl
sti
sbb
push
popf
mov
andl
jae
ds
pop
test
cmpsb
rolb
jmp
xchg
daa
scas
aas
xor
mov
mov
mov
jmp
lea
push
mov
and
ss
test
jl
test
add
movsb
shlb
mov
cmpsb
jg
or
fucom
nop
lcall
adc
es
xor
sbb
fsubrs
mov
pop
mov
inc
pop
data16
fiaddl
lret
mov
pop
or
lcallw
cli
addb
xchg
adc
imul
lcall
sub
or
sbb
xor
call
dec
push
adc
addr16
movsb
sti
dec
and
inc
ss
mov
in
pop
mov
xor
mov
insl
cmp
sub
fadds
mov
xor
jecxz
or
in
outsb
pop
repnz
mov
dec
inc
jbe
popa
call
mov
filds
xor
lea
lods
fisttps
or
sbbl
repz
insl
cwtl
ret
rcr
ss
inc
add
rol
ret
and
cmc
out
outsl
pop
loopne
movsb
mov
push
rorb
sub
repnz
add
jo
pusha
rorb
lods
insl
sub
push
in
adc
hlt
jg
xchg
adc
push
xor
sar
fwait
mov
sub
jp
dec
sbb
mov
addr16
xor
push
cld
jnp
pop
sbb
dec
fwait
mov
pop
sbb
xchg
mov
pop
dec
in
cltd
jnp
es
fsubp
mov
daa
push
sbbb
jo
inc
shll
js
cwtl
mov
cltd
fbld
pop
bound
xchg
xor
mov
bound
jmp
icebp
lret
sbb
mov
sbb
jb
sub
std
addr16
imul
and
inc
lgs
add
fs
ljmp
ret
call
pop
or
mov
sahf
jmp
cmp
cmpsb
xchg
mov
test
sub
imul
push
stos
je
dec
bnd
sub
lods
xchg
mov
jmp
decl
popf
jae
imul
fistl
inc
cld
mov
cmp
add
fstp
int3
js
mov
sub
xlat
ret
pop
cmpsb
xchg
ds
xchg
push
xchg
inc
out
lret
pop
push
in
jmp
xchg
sbb
adc
mov
fwait
add
jge
jle
and
jmp
xchg
adcb
mov
jmp
inc
out
aam
mov
mov
gs
aad
push
iret
mov
out
imul
push
jge
stos
jg,pn
bound
mov
cwtl
arpl
mov
dec
mov
push
adc
roll
add
sbb
cwtl
mov
leave
inc
push
sbb
or
scas
fdivrl
jno
aam
ret
xlat
out
inc
inc
push
jmp
mov
dec
adc
repz
and
cmp
pop
insl
aad
sbb
mov
lcall
or
data16
xor
mov
sub
jge
cmp
js
jg
int3
jne
out
data16
into
push
adc
pop
test
mov
mov
cltd
fists
push
cmp
sbb
into
push
mov
pop
shrl
adc
pop
repz
jo
mov
sub
mov
dec
es
xlat
adc
jae
jl
or
in
cwtl
mov
rcr
cmp
mul
mov
sub
dec
in
add
push
mov
js
shll
push
adc
or
and
sarb
pushf
iret
lods
mov
sbb
fs
push
rcrb
and
loop
lods
dec
mov
mov
test
inc
dec
jo
cmp
lods
fidivl
sbb
jno
pop
scas
cmp
dec
xor
dec
jmp
lahf
dec
lret
push
cmp
cwtl
sub
xchg
sub
inc
push
mov
pop
xchg
cld
or
jbe
cmp
dec
dec
lcall
aaa
fs
xor
clc
mov
ljmp
ds
cmpsl
gs
test
xor
and
aad
inc
rcrl
aam
cmp
push
shl
sbb
xchg
push
mov
call
cmpsl
add
mov
ret
add
push
loope
push
dec
loopne
jns
xor
aaa
loop
insl
ret
enter
sub
add
mov
into
lret
sbb
pushf
mov
inc
ja
xlat
inc
leave
pop
idivb
or
pop
leave
fwait
in
inc
adc
xchg
mov
outsl
xor
adc
iret
cmp
lcall
or
and
lahf
call
xchg
pop
cmp
les
sub
cmpl
or
aas
lds
mov
ret
push
jg
mov
inc
stos
loopne
pushf
fsubl
pop
pop
jmp
lods
lahf
aaa
sbb
scas
jne
sbb
inc
cmp
pop
mov
add
pop
and
inc
cltd
mov
fsubrl
lods
ret
repnz
sti
ss
divl
adc
cltd
cmpsb
add
lods
dec
sub
push
cmpl
cmp
mov
stos
or
sub
loope
dec
cmp
mov
xchg
fcomps
jg
stos
in
pop
add
push
xchg
sub
sub
in
imul
call
push
outsb
mov
ret
add
jo
and
int3
fimull
gs
outsb
je
mov
push
cmpb
stc
and
test
and
pusha
cli
and
sbb
mov
adc
stos
inc
repz
jo
stos
jno
dec
xor
cmc
test
sub
xchg
add
movsl
loop
xchg
aas
cmp
fimuls
arpl
pop
out
into
cmp
sar
fadds
enter
dec
jno,pt
shrl
pop
pop
mov
mov
or
insl
into
nop
pushf
repz
pop
fiaddl
cmpsl
mov
push
sbb
push
fs
adc
cli
mulb
js
sbb
xor
inc
insl
push
adc
inc
popf
gs
pop
sbb
pop
mov
in
add
cmp
fidivl
sbb
out
xlat
je
jnp
jnp
adc
lahf
inc
adc
and
aam
and
pop
jns
addr16
add
jb
lahf
sbb
fisubl
cmpsl
pop
adc
cmc
sbb
cmp
enter
add
pop
dec
pusha
test
ljmp
fcmovnu
jns
dec
xor
fdivr
cld
shlb
les
and
push
xchg
push
mov
push
dec
push
popa
cmp
std
cmc
add
xchg
pushf
jno
and
movsl
cwtl
xchg
sbb
and
sbb
mov
mov
xor
pop
lahf
sbb
mov
pop
mov
mov
popf
adc
jmp
mov
pop
and
xchg
lods
fs
cwtl
movsb
stc
or
sbb
cmp
out
inc
jmp
and
jg
pop
xchg
daa
jbe
pop
add
pop
popf
gs
dec
insl
comiss
stos
cvtps2pi
jmp
sar
in
mov
adc
lret
aam
adc
inc
xchg
xor
push
loop
and
pop
inc
movd
and
in
sub
xchg
adc
insb
lret
cli
dec
outsb
fwait
and
nop
rorb
fcmovu
cmp
mov
movsb
push
inc
sar
test
rcll
mov
push
mov
cli
cmc
pop
mov
lods
aam
cltd
inc
lret
adc
aam
insl
dec
loope
sub
imul
xchg
cmp
jl
shrb
scas
repnz
mov
shrl
jmp
popf
xchg
pop
into
fwait
or
popa
sbb
sbb
xlat
mov
das
push
in
fucomp
jns
sbbb
leave
xchg
repz
jbe
xor
inc
mov
push
shrl
inc
xor
push
sbb
testb
call
cs
xor
push
xchg
movsb
cmp
ret
mov
dec
push
into
call
pop
repz
data16
push
cmpl
cmp
jae
aaa
pop
mov
dec
shlb
sbb
dec
pop
iret
xchg
notl
ret
pop
or
inc
pop
repnz
xchg
inc
data16
movsb
subb
aad
sub
dec
and
sbb
push
mov
imul
test
pusha
pop
sti
imul
jl
pop
or
ret
pop
mov
das
test
add
sbb
nop
cmp
fxch
inc
daa
es
adc
lret
out
sub
movsl
jg
mov
inc
or
pop
push
adc
inc
xor
loopne
cltd
filds
das
push
add
rcrb
arpl
jns
ss
mov
scas
sbb
fisubl
mov
insl
xchg
loope
inc
mov
mov
adc
dec
jnp
add
mov
jmp
and
cmpb
inc
inc
test
add
les
cmpsb
sbb
fwait
mov
push
dec
std
push
cmp
dec
push
sarb
les
data16
mov
daa
pop
orb
mov
cltd
mov
adc
clc
enter
aam
loop
add
or
mov
nop
add
mov
out
push
in
scas
jge
out
pop
lret
js
test
cmp
ret
push
sahf
cmp
cmp
inc
cmpb
push
in
sbb
jg
sbb
cmc
and
mov
imul
pushf
adc
ficoms
out
shl
jge
dec
mov
adcl
xchg
add
sub
ja
cmp
push
mov
push
lds
pushl
aad
lods
aaa
addr16
jb
pop
in
mov
pop
in
push
dec
loopne
mov
out
dec
out
pushf
mov
xchg
jnp
clc
test
fildl
mov
add
clc
xorb
aad
sbb
ret
push
mov
je
jbe
lea
arpl
enter
in
int3
dec
dec
adc
adcb
dec
inc
xchg
fsubrl
ret
mov
sbb
imul
mov
scas
cld
and
jae
lods
jno
sub
jmp
ds
out
into
mov
scas
icebp
cmp
cmp
dec
aas
out
dec
shrb
mov
and
fpatan
xchg
loop
inc
neg
sbb
sbb
ret
mov
stc
jmp
jg
dec
jbe
rcrl
mov
rol
in
mov
lods
std
popa
mov
vpsrlw
and
sub
push
xchg
lahf
add
adc
jns
out
mov
shl
or
idiv
or
push
nop
sub
lret
jns
leave
shlb
es
cltd
push
adc
ljmp
lock
popf
dec
cmp
push
add
cld
fisubl
in
and
dec
in
cmpsb
xchg
inc
bound
test
push
jmp
aam
cmp
clc
bound
cmp
mov
adc
aaa
add
push
add
sbb
rcl
inc
push
ljmp
lock
add
lds
jl
xor
in
mov
mov
inc
loope
or
fwait
xor
fstl
jge
outsb
inc
test
test
and
inc
jge
fs
lahf
addr16
and
and
sbbl
inc
divl
mov
enter
sti
and
arpl
psllq
std
jne
xchg
push
enter
adc
jae
and
xchg
aas
jnp
add
jae
inc
cli
lods
insl
std
jecxz
scas
push
pop
repnz
inc
xchg
int
je
shlb
pusha
cmp
add
adc
cmp
ret
je
outsl
in
cmp
push
add
add
insl
pop
inc
add
add
mov
xor
xor
lahf
xchg
dec
jge
pusha
push
sbb
xor
in
repnz
ljmp
and
sbb
sub
je
stos
mov
mov
bound
add
lret
es
out
or
sbb
pop
adc
pop
inc
inc
mov
add
sti
jnp
cld
les
sti
and
inc
rcl
orb
divl
mov
xchg
std
in
popf
xchg
lea
fldenv
xchg
test
pop
mov
push
fadd
jge
shll
les
repnz
ja
xchg
or
lock
add
mov
sbb
add
addr16
loope
je
pusha
adc
push
nop
cmpsl
repz
cmp
lods
pop
mov
and
out
pusha
lret
mov
inc
adc
icebp
cmp
or
pop
cmp
loop
sahf
sub
mov
sub
jecxz
repz
push
sub
pop
je
push
in
push
nop
fisttpl
and
and
pop
cmp
daa
sbb
fdivrp
dec
and
jge
mov
int3
in
mov
dec
mov
outsb
js
inc
or
mov
xor
inc
pop
pop
sti
mov
jbe
or
cmpsb
in
adcb
adc
ss
repz
pop
out
mov
in
ja
xchg
jns
movsl
es
mov
inc
call
jno
cs
push
jmp
xor
cmp
sbb
call
dec
push
punpckldq
idivl
lods
or
outsl
xor
inc
adcl
xor
pop
lods
cltd
xchg
pop
add
sbb
pushf
mov
pushf
inc
jp
jbe
adc
inc
xor
mov
in
add
push
add
mov
cmp
mov
rolb
sbb
fsts
jge
cmpsl
add
inc
std
fdivs
cmc
data16
push
pop
je
add
sahf
and
lcall
je
add
aas
add
adc
mov
ja
bound
loopne
fcmove
add
push
imul
xchg
orb
xchg
mov
notl
lret
shrl
cmp
jns
xor
xchg
scas
es
push
out
adc
add
dec
loope
mov
enter
jle
test
rclb
lods
ss
pop
lock
mov
mov
loop
fdivr
enter
push
xor
loopne
dec
cmp
aas
mov
and
xor
push
mov
cmp
nop
out
pop
addb
xchg
cld
push
mov
insl
mov
dec
cmp
mov
popa
jge
int
pop
jns
push
fildll
test
out
rolb
sub
cmp
xlat
mull
inc
repnz
jmp
jg
repz
cmpsl
movsl
dec
mov
dec
mov
in
sbb
stos
or
fistl
jmp
jne
aaa
sub
jmp
scas
and
cltd
pop
add
in
mov
mov
add
mov
loopne
les
adc
inc
sub
mov
ror
ss
aam
in
mov
aad
jns
mov
loop
adc
cmp
testl
cmp
mov
cmp
out
pop
lahf
and
dec
fstps
or
fadd
scas
subl
add
sarl
add
mov
mov
out
jmp
xor
xchg
push
lret
xlat
iret
mov
and
push
inc
fsubrl
dec
pop
lock
mov
dec
sub
jl
addr16
inc
loop
mov
nop
out
pop
and
jae
dec
jbe
mov
jae
xor
mov
inc
rorb
sbb
add
xor
aas
mov
js
adc
inc
sub
rol
mov
sti
add
mov
dec
std
xchg
lods
loopne
mov
and
jle
push
hlt
aas
cmp
addr16
outsb
xchg
bnd
jb
into
sbb
adc
jl
shl
pop
inc
or
mov
xchg
pop
aas
movsl
out
inc
lfs
cwtl
xlat
sbb
sar
dec
and
movsl
enter
jl
int3
test
into
pop
cmp
inc
icebp
sub
lods
jbe
loopne
fildl
movsl
adc
shrl
or
pop
cmp
les
out
pop
cmpsl
sti
jl
mov
popa
in
pop
js
lds
sbb
pushf
push
loop
mov
outsl
pop
sub
lret
sete
inc
xchg
cmp
jp
repz
out
std
mov
mov
cli
fsubs
hlt
and
popa
aam
out
jmp
or
scas
or
push
xlat
adc
int3
jo
lods
sbb
imul
mov
sub
pop
bound
mov
scas
comiss
outsl
aaa
jb
outsl
loopne
cmp
add
sbb
mov
cmp
sti
and
fwait
push
mov
inc
push
in
jbe
stc
inc
sub
cmpsl
push
insl
dec
inc
insl
sti
jle
ret
jne
xchg
fsubrp
xor
pop
push
jmp
jmp
stos
decb
outsl
sbbl
cli
iret
push
dec
test
push
push
lock
stos
mov
push
mov
scas
mov
ljmp
jae
jl
sti
and
inc
pop
mov
xchg
popa
cli
rcrb
aas
fwait
std
cmc
pop
xor
xchg
test
dec
ds
or
loopne
push
pop
subb
cmp
int
push
rcrb
pop
test
fwait
jb
lea
or
into
push
iret
and
pop
ficomps
jmp
sbbb
leave
inc
mov
cmp
test
out
fsubl
fldl
popa
icebp
sub
or
push
push
loop
push
sbb
sub
sbb
outsl
pop
add
sti
inc
jge
mov
push
jno
pop
and
insl
ret
xor
aaa
sbbl
xchg
rcl
pop
pop
or
jg
pop
mov
sbb
out
mov
pop
xchg
test
adc
and
cmp
daa
divb
mov
sti
ds
nop
pop
sub
inc
aaa
loope
jge
cmc
pop
lcall
adc
inc
das
mov
cmp
fidivs
js
mov
orl
repz
scas
in
or
mov
out
in
mov
notl
andl
mov
inc
idivl
sahf
inc
mov
mov
push
es
fsubs
mov
je
mov
add
into
jmp
push
out
lret
sub
stos
xlat
out
dec
lock
sub
jmp
stc
not
cmp
mov
stos
dec
popa
push
inc
imul
or
mov
xor
mov
cmp
pop
and
pushf
add
xor
fs
gs
jae
enter
stos
iret
xor
and
and
mov
mov
pop
test
cmp
dec
es
int
dec
mov
push
pop
movsb
sbbl
fnop
outsb
xchg
dec
xor
xor
pop
pushf
loop
xor
fcoml
mov
out
mov
in
mov
in
outsb
arpl
mov
lock
sub
stos
inc
les
mov
sahf
in
in
pop
sahf
pop
dec
mov
imul
sbb
inc
jmp
dec
lcall
or
mov
iret
mov
add
in
sbb
into
ret
adc
or
sbb
daa
push
lds
xchg
xchg
pop
inc
adc
insl
lahf
inc
or
lret
push
hlt
pusha
repnz
adc
bound
data16
pop
and
je
or
loopne
push
in
and
jno
sub
inc
and
sub
stos
mov
or
lret
xchg
jns
inc
jbe
lods
dec
mov
jne
lds
cmc
pop
aaa
std
insl
or
enter
mov
mov
add
aaa
dec
adc
aaa
fistpll
jg
lcall
or
je
mov
in
mov
rcrl
ret
loop
jp
repnz
pop
push
add
adc
rolb
ret
or
movsb
data16
inc
adc
dec
jns
cmp
gs
jns
loopne
cs
std
aas
addr16
shrb
pop
out
jno
sub
loope
and
std
xlat
mov
adc
lods
lods
cmpsb
es
push
sbb
cmp
call
add
and
and
imul
pop
sbb
sub
sub
fisttps
rorb
inc
lea
sti
or
data16
loopne
sub
gs
aad
clc
data16
jg
sar
stos
leave
outsl
mov
push
out
push
pushf
adc
pop
push
jle
shlb
fistl
idivb
jb
inc
mov
xchg
or
push
sbb
jne
in
outsb
out
dec
push
jb
popa
adc
sbb
cmpsb
mov
jbe
fdivr
xchg
xchg
jae
xlat
repnz
fnclex
orl
sbb
cmpsl
fsubrl
cmpsl
ror
in
iret
mov
cmp
push
sub
insb
push
fucomip
testl
dec
testb
dec
test
pop
mov
jmp
mov
stc
out
mov
mov
or
add
inc
xchg
jge
sar
or
enter
into
add
sub
or
mov
les
out
inc
inc
sub
jge
sbb
loop
sub
adc
sub
addl
dec
cmpl
push
jge
jb
xor
jnp
push
or
jbe
shlb
dec
ret
mov
sarl
mov
inc
or
jl
mov
insl
cltd
shr
icebp
mov
jae
or
pushf
loopne
ret
stc
jle
enter
rcrl
xor
mov
push
or
xor
lahf
add
push
or
push
cmp
jnp
adc
in
jmp
outsl
mov
lds
or
leave
les
push
jle
xchg
jle
out
push
movsl
femms
ds
lods
jge
jae
scas
inc
in
jl
adc
pop
cmc
and
lret
xor
cld
inc
push
mov
sbb
and
pop
sbb
pop
cmp
push
jb
mov
popf
shll
scas
cwtl
cmp
push
and
js
or
pop
cmp
push
jecxz
test
add
add
arpl
shll
xchg
jo
fistpll
xor
mov
into
mov
out
int3
popf
cmp
pop
pop
filds
pop
inc
lods
jl
in
stos
cltd
jle
inc
mov
inc
dec
mov
xor
stos
idivl
mov
in
int3
arpl
lret
pop
adc
or
adc
sub
loop
iret
jo
xchg
and
enter
iret
sub
arpl
fldl2e
sbb
loope
cltd
mov
mov
sbb
adc
loop
sub
xchg
nop
or
push
sub
cmp
lea
cld
sbb
inc
js
pushf
hlt
bound
loope
mov
lods
cmp
jecxz
fadds
sti
and
das
jge
mov
sti
inc
stc
pop
mov
xchg
push
jecxz
push
popf
inc
push
cmp
jecxz
jmp
jb
hlt
ja
pop
sub
inc
jg
adc
lret
and
mov
inc
mov
pop
mov
or
pop
mov
dec
cmc
cmp
or
out
mov
shlb
push
enter
scas
xor
ljmp
xchg
mov
in
push
jge
mov
inc
and
xchg
pop
add
roll
gs
xor
push
xorl
in
push
imul
and
jecxz
in
push
orl
repnz
testb
mov
scas
fcmovu
lahf
shlb
cmpb
insl
add
hlt
inc
add
mov
lock
mov
stc
xchg
mov
sarl
scas
dec
cmpsl
out
add
pop
mull
sub
inc
int
push
jle
rcl
xor
repnz
jle
test
ss
sub
nop
and
mov
std
mov
add
inc
or
cmp
subb
cmp
stos
sbb
inc
scas
test
ret
push
jnp
pop
pop
pop
je
loop
pop
jno
adc
pop
stos
je
or
movsl
push
sarl
sub
stos
aaa
fmull
push
leave
mov
ljmp
inc
mov
or
es
mov
add
mov
inc
mov
nop
xchg
int3
fwait
data16
cli
mov
jecxz
test
sub
or
rorb
xor
jle
adc
out
loop
sub
out
lods
popa
sub
nop
negl
fsubl
loopne
cwtl
call
pushf
out
push
adc
sub
mov
adc
mov
pop
cmp
jno
ljmp
movsl
or
jo
fwait
ja
and
xor
mov
add
int3
sub
inc
pop
mov
jge
or
dec
out
mov
sbb
mov
in
loop
push
xchg
mov
fistps
imull
mov
leave
ds
outsb
hlt
add
test
not
ds
out
push
pop
dec
pop
addr16
jg
pop
aam
and
push
xchg
test
push
aam
mov
inc
test
add
fisubs
and
lds
test
mov
lea
cwtl
mov
fnstsw
data16
mov
lods
or
sti
mov
cmp
xlat
or
lods
xor
and
aas
inc
addb
std
ror
in
push
inc
movsb
and
mov
mov
push
inc
sbb
sub
sub
sub
cmpsl
pop
mov
jbe
dec
outsl
movsl
mov
sbbl
ret
sbb
add
or
les
push
add
pushf
gs
stos
mov
in
cwtl
mov
movsb
hlt
pop
cmpsb
mov
into
enter
stos
cltd
cmp
aaa
fstps
lods
xchg
fnstcw
stc
push
cltd
lret
jp
cld
fcomps
dec
sbb
and
xchg
mov
aaa
pop
xchg
movsb
sub
scas
adcb
in
ds
pop
icebp
jne
adc
lret
pop
shrl
test
scas
adc
xor
fisttpl
out
push
sub
jb
icebp
cmc
leave
bound
push
dec
jecxz
popa
dec
wbinvd
add
loop
inc
movsb
jp
or
lret
test
ljmp
sbb
into
add
inc
lock
inc
mov
enter
inc
cmpsb
out
test
lods
jae
int
dec
call
push
repnz
popf
addb
jb
enter
loopne
pop
or
leave
cmc
sub
add
ret
xchg
jp
mov
popa
mov
test
sahf
jnp
push
dec
adc
xchg
popa
arpl
clc
fdivrp
and
cmp
nop
push
idivl
push
in
jo
arpl
cmc
icebp
lret
mov
aas
push
jne
mov
mov
mov
movsb
mov
jnp
mov
loope
aaa
mov
pop
push
mov
xor
cld
pop
daa
push
pop
bound
std
adc
adc
aaa
xor
dec
sbb
cmpsl
sbb
in
mov
sbb
loop
mov
popf
mov
lcall
jne
mov
ss
mov
inc
lret
cwtl
sahf
mov
and
dec
aaa
adc
dec
sub
jmp
jae
daa
xor
and
sti
pop
mov
lret
andl
mov
decb
dec
sub
push
aas
scas
pop
cmp
lret
out
rorb
and
fstpl
inc
negb
es
mov
lods
pop
push
sub
xchg
jnp
mov
mov
jne
sti
movsl
and
pop
and
jp
in
jae
cltd
dec
imul
jb
daa
jnp
mov
mov
daa
mov
out
inc
fadd
push
jb
insb
adc
int3
mov
repnz
xchg
test
sub
mov
jo
out
aad
inc
sbb
fmull
out
les
aad
hlt
enter
cs
mov
jg
fld
pop
nop
cmp
dec
les
fucomi
xchg
push
pop
adc
insl
cmpsl
dec
js
out
push
pop
jle
mov
insb
cmp
movsb
dec
es
inc
push
shr
inc
push
into
je
aaa
dec
jno
dec
daa
call
pop
xor
mov
mov
movsb
jno
daa
sbb
add
jns
popa
shll
jl
loop
subl
dec
jae
jno
jbe
jg
mov
sub
or
xlat
mov
es
loopne
mov
rclb
lds
rclb
adc
push
sahf
xchg
and
mov
movaps
call
js
fstl
test
jbe
mov
mov
stos
inc
popa
or
pop
in
test
mov
scas
hlt
hlt
and
repnz
std
stos
pop
pop
aad
mov
mov
sub
int3
je
push
fimull
mov
jnp
adc
lret
clc
fstps
adc
pop
sbb
repnz
or
mov
xchg
sub
cmp
lahf
mov
xchg
lods
inc
mov
pop
jmp
mov
sbb
xchg
pop
pop
pop
mov
or
mov
std
push
jmp
add
or
push
lcall
cmp
add
mov
jmp
mov
int
push
aad
xchg
sahf
xchg
jle
push
cmpsl
nop
push
insb
roll
or
lret
inc
cs
pop
xchg
cli
fcompl
sti
sbb
js
aam
fcoml
xor
jae
mov
lret
fidivrs
pop
cmp
cmpb
dec
push
sbbb
xchg
in
in
push
xor
rorb
enter
in
ret
subl
aas
jmp
cmc
or
out
imul
xor
mov
ss
mulb
outsl
inc
fwait
sbbl
mov
lods
mov
loop
enter
inc
fsubp
cmpsl
shlb
xor
in
movsl
xchg
jmp
ljmp
cmp
out
push
and
cmpsb
push
loope
insl
sbb
lods
dec
test
ret
leave
pop
ds
mov
test
adc
lret
jbe
jno
jmp
and
sbb
and
clc
or
ds
add
test
pop
xchg
jge
mov
or
test
and
push
stos
aam
jle
and
add
push
pop
shlb
mov
sbb
stos
not
or
popa
push
mov
cmp
sub
bound
mov
mov
jmp
push
sub
stc
jle
xchg
nop
jns
jae
or
addr16
mov
push
imul
std
push
sbb
push
xor
fsubrl
or
aad
cmp
mov
js
sub
mov
cmpsb
pop
lahf
in
repnz
mov
pop
push
into
dec
jbe
jl
fiaddl
ret
fs
rorb
cld
andl
in
loop
and
mov
repnz
push
dec
pop
add
jp
xlat
movsb
and
aad
mov
inc
aas
or
imul
mov
jae
nop
and
std
imul
inc
outsl
stc
iret
fnstsw
pushf
ds
mov
das
addl
xor
inc
and
jns
adc
sub
cmp
out
fnstcw
push
mov
mov
hlt
add
jno
call
xchg
pop
add
push
repnz
out
xor
fsubrl
int
xchg
push
in
sub
jb
adc
cmp
loope
push
xchg
cmc
add
adc
int
push
insl
insl
adc
pusha
mov
mov
fbstp
hlt
negl
mov
cmp
lcall
dec
mov
sbb
dec
pusha
lcall
adc
cld
sbbb
sbb
pop
dec
xchg
sub
pusha
ficoms
bound
lcall
aam
in
mov
sbb
int3
push
gs
sbb
fmul
lahf
inc
sahf
lods
sahf
and
mov
inc
rclb
pop
ror
mov
ljmp
jb
fildl
ficompl
mov
jmp
rorb
fcoml
pop
push
xchg
lods
xchg
sbb
enter
adc
aam
ret
bound
jne
repnz
jl
nop
lods
clc
pop
scas
mov
ds
or
scas
adc
and
add
xlat
mov
inc
jnp
jg
stos
test
hlt
jnp
push
scas
add
jl
test
rorb
mov
stc
fs
les
test
imul
dec
jne
rcll
sbb
dec
adc
mov
out
div
or
inc
pop
mov
cmp
iret
lods
scas
mov
bound
scas
aaa
jp
stc
adc
dec
cmp
mov
or
lods
xor
dec
loop
hlt
lret
pop
and
cmp
out
nop
and
adc
xor
loop
xchg
arpl
xchg
sbbb
movsl
pop
push
sbb
jns
out
repz
pop
xchg
sbb
push
add
aam
mov
mov
sub
xor
call
leave
icebp
pushf
out
pop
or
es
mov
hlt
fdivl
mov
in
mov
out
lret
sub
mov
xor
cmp
mov
pop
pop
filds
push
test
push
jg
sahf
fwait
add
imul
sub
out
jle
sbb
scas
dec
repz
stos
inc
ljmp
repnz
mov
jg
mov
push
cli
or
mov
mov
sti
sbb
clc
or
sbb
outsb
test
in
out
push
inc
xchg
fisubrs
pop
mov
jne
cmp
insl
addb
or
jns
ds
xor
lea
mov
rcll
or
xchg
push
je
push
and
pop
jbe
in
hlt
add
jg
out
push
rorl
xchg
add
or
and
call
icebp
push
xchg
fimuls
pop
inc
dec
call
mov
push
inc
push
mov
push
xchg
mov
xor
ret
aad
into
and
push
cld
mov
push
dec
xor
mov
movsl
push
inc
mov
dec
in
movsb
xchg
inc
in
fs
pop
or
repz
loope
mov
mov
fnstsw
mov
icebp
sub
cmp
lock
inc
subl
into
sub
mov
popf
pop
xchg
lods
outsl
mov
xchg
jmp
xchg
rolb
or
sti
jnp
clc
adc
and
es
mov
pmaxsw
mov
sub
and
std
jnp
lods
popf
movb
iret
mov
orb
insl
sbb
pop
dec
in
pushf
out
push
inc
mov
stc
into
test
in
into
ja
pop
outsl
mov
sbb
outsb
gs
daa
sbb
das
mov
xor
jg
xor
mov
sub
imul
sarb
jb,pt
mov
mov
or
add
mov
test
inc
aad
test
cmp
mov
test
dec
mov
mov
push
out
aam
push
repz
inc
out
mov
jno
xor
stc
mov
test
inc
add
clc
xchg
mov
add
cli
je
adc
jecxz
mov
mov
push
lods
or
popf
push
xchg
add
int
scas
mov
mov
aaa
adc
aaa
sti
push
or
sbb
and
cmp
push
and
pop
xchg
fs
jnp
xor
jp
push
loop
andb
fs
sub
lds
aad
out
jecxz
call
mov
data16
push
sub
hlt
sbb
jge
insl
xchg
fisubs
mov
ret
or
inc
pop
inc
fldl
push
pop
sbb
call
das
jno
fisubrl
stos
fldz
std
xor
rclb
bound
sbb
inc
cmp
pop
jecxz
mov
in
xchg
in
fcoml
pop
sub
stc
ret
cmc
dec
insl
enter
outsl
and
dec
data16
xchg
mov
outsb
and
xor
xor
addr16
jnp
xchg
push
loope
mov
lea
sti
push
fstpl
cmp
and
addr16
mov
es
in
aas
je
mov
andb
stos
sbb
jl
add
test
sub
leave
jnp
pop
in
lcall
cmpl
test
mov
dec
out
outsb
jne
dec
out
lods
mov
lds
insb
stc
lcall
mov
pop
pop
cmp
sahf
lods
cmpsl
bound
movsl
jb
cmp
scas
jp
cmpsb
cmp
pop
dec
push
push
pop
gs
mov
add
test
adc
fst
sbb
dec
inc
scas
push
cmc
jp
lret
cmpsb
int3
push
ds
cltd
or
sbb
dec
dec
mov
les
and
cmp
push
jo
les
sub
mov
or
outsl
fs
xchg
leave
pusha
jmp
and
add
ret
aas
ds
xorb
xor
inc
outsb
sub
mov
jns
pop
stc
std
sub
adc
loop
addb
or
jno
mov
adc
aad
xchg
mov
mov
sub
clc
call
shrb
std
push
and
in
dec
xlat
ret
dec
jbe
mov
les
cwtl
mov
jne
ja
or
sub
inc
incl
incl
and
and
nop
out
and
jg
add
push
add
jge
pushf
popa
sahf
sbb
jle
cld
int3
jb
pop
push
jno
lahf
popf
mov
mov
jbe
push
imul
jnp
xor
js
inc
outsb
fisubrs
xchg
aam
cld
shlb
inc
adc
jno
mov
cmp
add
test
cmpsb
xchg
pop
lods
mov
jge
js
cmp
add
adc
sub
inc
js
int3
cs
push
aas
faddl
pop
cmp
lods
add
inc
cmp
cld
push
sub
inc
cmpsl
xchg
mov
scas
int3
jl
jbe
mov
lea
dec
mov
icebp
inc
mov
jmp
pop
push
mov
lret
cmp
ljmp
pop
imul
mov
sbb
adc
mov
dec
mov
fsts
ja
dec
shlb
aam
stos
push
xor
xor
and
push
lcall
test
or
jo
jns
add
stos
int3
add
fs
dec
jl
push
mov
sbb
sbb
daa
inc
push
loop
out
inc
jl
aam
out
nop
jne
sahf
xchg
inc
mov
ljmp
stos
xlat
out
in
xchg
jmp
stc
or
mov
scas
xchg
adc
jle
mov
lock
call
subl
mov
les
aad
mov
or
xchg
jp
fcmovnu
pop
ljmp
and
mov
adc
xor
jl
mov
sub
jl
sbb
pop
in
inc
mov
cmpsb
cltd
jmp
loopne
add
cs
mov
jb
int
sbb
push
mov
ds
stc
xor
jns
mov
and
push
scas
std
add
push
cmp
mulb
lds
repz
lods
popf
xlat
int
mov
cmp
pop
xor
and
in
adc
sti
test
pop
fidivrs
ss
dec
ret
add
pop
mov
orl
int
jp
cmp
sbb
ljmp
xchg
sub
xchg
pusha
dec
cmp
xchg
push
xor
pop
sub
repz
push
and
adc
inc
hlt
cmc
jb
xor
jmp
cmp
outsb
cmp
adc
adc
cmp
inc
dec
popf
jmp
clc
or
push
mov
gs
push
mov
push
push
loop
mov
dec
fstpt
dec
into
add
call
mov
push
into
mov
pop
push
imul
dec
push
bound
cmpsl
popa
sahf
mov
fisttpll
pop
inc
and
inc
in
das
or
cmpsb
add
xor
fsubp
jge
xor
mov
inc
ror
inc
bound
push
bound
shrb
aas
fxch
cmpb
out
jne
jge
out
mov
stos
cs
xor
movswl
aaa
xchg
sbb
dec
out
cmc
xchg
xchg
add
int
testl
mov
mov
jne
mov
mov
and
cmp
lahf
inc
and
scas
test
mov
mov
loope
pop
cmp
adc
test
sub
rcrb
inc
cmpsl
mov
imul
sub
cmc
addb
cltd
mov
loop
mov
lock
dec
mov
mov
lea
andl
jecxz
or
xor
sbbl
inc
and
xchg
lock
popa
sub
movsb
bound
popa
hlt
out
and
cmp
js
push
jnp
add
sbb
push
jg
lds
ja
pop
push
sahf
mov
pop
js
adc
in
aad
push
call
jmp
adc
insb
adc
pop
mov
ja
mulps
gs
mov
jo
xchg
push
mov
pushf
push
mov
fs
aam
cli
sbb
js
add
cmp
pop
stc
popf
dec
ret
lahf
push
lret
ljmp
mov
ja
stos
jl
xlat
lret
xlat
arpl
out
mov
inc
jns
xchg
cmpsb
popf
pop
inc
jge
mov
add
movsb
cmp
or
pushf
jo
pop
testb
andl
mov
test
es
movsb
fisttpll
lock
sub
scas
out
rcl
jns
add
and
rcrb
mov
aam
mov
adc
or
add
imul
mov
dec
and
push
push
cmp
jmp
xchg
pop
lock
mov
stos
mov
fwait
xor
add
mov
insb
fsubrs
sbb
push
push
dec
mov
sbb
mov
mov
std
mov
aad
and
repz
xlat
mov
pop
mov
lock
pop
ret
loopne
sub
sbb
adc
in
xchg
stos
push
adc
lcall
sub
neg
repz
xchg
sub
pop
aas
mov
fidivrl
stos
ret
rorb
mov
xchg
addr16
insb
arpl
push
mov
sbb
shll
xchg
cmp
sbb
lods
sub
pop
jmp
ret
lcall
mov
dec
imul
mov
cmpsl
push
andb
jge
ja
push
cmc
jae
rcrl
movsl
mov
mov
aam
jnp
sbb
cmc
adc
cltd
sub
ss
and
pop
sbb
sbb
clc
sti
outsb
xchg
xchg
cwtl
inc
sahf
cwtl
insb
or
or
push
aaa
push
and
xor
dec
call
mov
enter
cltd
sbb
push
mov
xchg
sahf
outsb
jae
adc
jno
sti
test
inc
aam
mov
imulb
inc
jle
call
or
iret
dec
sub
mov
stc
fnstenv
mov
cmpsl
fs
imull
outsb
mov
mov
lret
cs
icebp
inc
fs
dec
test
icebp
add
data16
pop
pop
dec
mov
adc
cltd
inc
mov
mov
js
push
adc
fnstsw
pop
mov
jg
inc
mov
inc
aas
xchg
insl
cmp
sub
adc
or
dec
mov
sub
imul
icebp
aas
call
imul
fwait
sbb
mov
xor
popf
sub
into
xor
in
scas
xchg
jge
jp
or
jle
mov
ret
psadbw
lds
out
imul
cmc
sub
push
dec
xor
mov
incb
shrl
xchg
add
and
jns
test
rorb
lock
sub
cmc
pop
pusha
lods
movsl
push
int3
mov
scas
or
idivb
xchg
roll
jecxz
aas
or
stos
pop
lea
add
pusha
lock
mov
mov
pop
push
pop
xchg
cs
fildll
fistps
scas
enter
pop
cmp
out
pushf
mov
inc
xor
inc
les
outsb
loopne
aad
add
jbe
fcomip
imul
adcb
stos
cmp
jg
jbe
pusha
cltd
xor
adcl
cmp
lods
ja
pop
in
jns
test
ret
cld
arpl
push
and
in
test
add
mov
jmp
xlat
lods
ljmp
insl
xchg
out
add
add
jle
sbb
mov
stc
cmpsb
add
out
push
mov
nop
add
rcrb
shrl
les
push
aad
and
mov
push
jle
cmpsb
aad
roll
xchg
jne
jg
lret
or
div
repnz
gs
cmp
mov
sub
inc
outsl
jmp
orb
mov
add
cmp
mov
adc
pushf
pop
sbb
or
push
sub
ret
add
test
lret
pop
mov
aaa
jne
cmp
lods
imul
loop
and
push
fs
cltd
ss
ljmp
insl
test
daa
lock
xchg
adc
add
dec
jl
push
outsb
push
inc
pusha
jno
sbb
push
mov
jge
pop
andb
lcall
add
and
sub
ss
xor
inc
or
dec
call
sbb
leave
push
push
aaa
jbe
repz
push
add
int3
mov
push
pushf
xchg
repnz
and
ds
jecxz
or
xchg
and
sub
push
adc
popl
fisttps
push
mov
sbbl
xlat
fldl
pop
sub
xor
xchg
pop
repnz
xlat
in
arpl
xor
pusha
push
clc
jp
jp
jmp
mov
jnp
mov
lea
data16
lock
clc
jl
adc
cmp
cmp
loope
jecxz
cmpl
xor
jbe
or
pop
fistl
arpl
xlat
xchg
test
scas
pop
mov
and
insl
or
inc
sbb
ret
mov
sub
cmp
lods
and
mov
scas
push
or
xor
test
rcrl
lret
push
jb
dec
pop
popf
dec
stos
push
cmp
es
add
loop
pop
adcb
mov
test
sbb
xchg
adc
stos
cli
push
or
das
mov
daa
aas
sub
sbb
out
mov
insb
mov
pop
lock
jns
pop
sub
mov
cwtl
imul
xchg
repz
sub
add
and
jmp
out
rdtsc
aas
xor
ja
sahf
cld
or
mov
aam
in
es
push
mov
lods
add
addr16
rclb
sub
ret
aam
sub
mov
sub
nop
inc
lahf
push
outsb
mov
pop
mov
push
aaa
fidivl
fs
int3
loop
sbb
or
sbb
sub
pop
inc
sub
jbe
ret
xor
and
nop
scas
into
or
outsl
std
and
fistps
push
push
xchg
or
xchg
test
rol
sbb
mov
lahf
mov
addr16
bound
imul
test
lods
test
jmp
cld
aaa
ja
arpl
and
mov
jno
adc
lahf
adc
pusha
outsb
pop
test
add
out
lret
testb
or
data16
aaa
adc
sahf
mov
arpl
or
mov
inc
jae
sbb
lahf
enter
or
or
inc
sbb
sub
movsl
imul
sbb
push
lods
cmc
push
mov
loopne
sbb
lcall
out
into
std
push
popf
push
fstl
and
mov
movsl
pop
mov
cmp
mov
xchg
or
add
jns
pop
add
movsl
add
xor
insl
iret
mov
aaa
add
mov
daa
cmpsb
outsb
lds
aas
xor
cld
mov
cld
ss
gs
mov
mov
dec
dec
adcb
dec
or
pop
mov
cmc
mov
xchg
mov
pop
inc
pop
add
pop
addl
pop
shrl
cli
ret
push
fcoms
lret
sub
lds
mov
and
push
jmp
je
cwtl
pop
into
test
lea
adc
push
jno
je
push
insl
aam
nop
out
cltd
xchg
cmp
ficompl
loope
cwtl
lds
push
pop
std
ja
jmp
push
jne
push
gs
sbb
ljmp
mov
jg
adc
and
fiadds
push
xchg
lcall
pop
push
push
xor
icebp
mov
inc
pop
mov
fimull
push
into
jge
mov
shl
cmp
or
push
scas
mov
adc
adc
inc
fnstenv
inc
or
out
or
cld
daa
stc
movsb
mov
stos
outsb
lret
scas
lds
jno
push
jge
push
test
mov
pop
lds
jge
sarb
sbb
fildl
pushf
inc
cmpsb
dec
xor
add
fmuls
adc
push
dec
test
clc
lea
js
xchg
mov
lret
or
xchg
lret
mov
and
fmuls
mov
aam
add
jae
mov
lahf
stos
decb
loop
test
adc
es
pusha
adc
xchg
pop
shl
sbb
and
sbb
lcall
int
outsb
rorl
push
test
pop
aas
push
mov
jle
mov
js
cmp
mull
sbb
cli
pop
arpl
call
cmpsb
fists
movsb
and
dec
mov
push
subb
push
xchg
jg
mov
xchg
lcall
out
lret
mov
int3
adc
xor
rcr
notl
adc
pusha
cli
dec
mov
fists
or
adc
into
sbb
pop
jae
mov
lods
dec
dec
push
cli
movsl
std
push
sub
scas
and
or
jecxz
dec
int3
add
cli
mov
hlt
xor
dec
push
fsubl
mov
loope
mov
jle
sbb
ret
pusha
mov
xchg
rcrl
cs
lds
adc
fwait
jns
fwait
and
jb
or
sbb
stc
or
mov
in
aad
loopne
cmpsl
dec
insb
push
lds
iret
pop
lods
rclb
xor
dec
ficoms
lods
fdivrs
cld
out
or
rorl
xor
push
push
add
loope
call
push
mov
cmp
mov
int3
div
push
xchg
push
jl
jo
cmp
mov
xchg
test
iret
xchg
gs
cmp
ficomps
lret
out
xchg
aam
xchg
ss
cwtl
pop
icebp
in
xchg
cmp
jbe
in
sub
adc
xchg
jns
fidivrs
inc
dec
daa
sub
dec
or
xor
cmc
scas
andl
ds
aam
xchg
dec
ret
addr16
mov
aas
add
mov
pop
inc
pop
xor
jns
movsb
mov
ja
sti
jno
and
pusha
ror
test
pushf
sub
mov
and
data16
sub
xchg
and
imul
inc
outsl
or
rclb
in
mov
sbb
icebp
mov
pusha
rcll
add
inc
rsm
fwait
outsb
and
jne
shlb
jbe
pop
sub
adc
aad
sti
mov
out
push
push
movb
icebp
repz
adc
insb
dec
cs
sbb
cmp
pop
adc
out
jle
inc
and
iret
pop
jns
mov
in
dec
pushf
sub
mov
mov
mov
xchg
xlat
jp
les
dec
jle
sub
mov
jo
push
frstor
jne
mov
xchg
xchg
add
mov
add
mov
in
dec
push
imul
or
mov
test
dec
lahf
xchg
test
xor
adc
dec
or
mov
lcall
aaa
mov
cmp
add
mov
jg
mov
test
add
addr16
leave
fadds
xor
push
cs
popa
add
dec
mov
pop
pop
xor
sub
ret
mov
ret
sub
popa
xchg
pop
popf
out
aas
jnp
xchg
adc
ret
pop
xchg
cwtl
pop
mov
push
adc
adc
pop
shrb
sbbb
ret
test
iret
adc
sahf
xchg
sbb
xchg
arpl
xor
lods
mov
cmc
cld
std
mov
cmp
pop
fisttps
pop
pop
add
mov
js
sbb
fmul
insl
jecxz
js
xchg
ljmp
jl
repz
stos
daa
jp
cmp
adc
cli
mov
stc
or
dec
adc
movsb
sub
mov
mov
out
imul
adc
stc
xor
push
mov
adc
dec
dec
pop
sub
in
dec
xchg
pop
scas
lock
daa
xor
mov
mov
jne
jb
jne
cmp
mov
add
cli
xlat
nop
xchg
bound
jecxz
out
mov
bound
es
clc
shrl
mov
popa
mov
popf
mov
dec
aas
rorl
test
mov
xor
mov
mov
lock
test
pushf
and
scas
aad
fwait
sbb
dec
cld
fsts
sub
mov
xlat
cmp
dec
stos
ficomps
adc
cmp
pop
cli
test
jecxz
repz
sbb
ljmp
mov
inc
cmp
stos
mov
pop
sbb
mov
xchg
dec
dec
jmp
pop
sbb
mov
mov
data16
dec
cmpsl
aas
pop
gs
sbb
add
adc
test
adc
data16
fildll
xchg
and
xchg
movsb
sub
sub
cmp
xor
mov
data16
scas
mov
dec
adc
add
out
xchg
xchg
fstps
popf
fs
aam
clc
sub
inc
shr
adc
mov
fsubs
stos
adc
sub
mov
adc
test
daa
push
fdiv
ss
pop
jo
inc
xchg
xchg
fisubs
insb
lock
fstps
popf
push
adc
test
jne
sbb
xor
and
enter
jno
out
inc
push
aad
call
shl
fst
aaa
mov
dec
out
push
jb
repz
or
adc
mov
push
push
in
sti
jmp
mov
push
cmc
repz
pop
xor
xchg
jb
in
cmc
jle
jbe
or
xor
gs
push
fmull
testl
pop
mov
adc
mov
lahf
cmp
push
xchg
sbb
adc
xor
xchg
orb
int3
outsl
jo
pop
pop
outsw
push
add
sub
js
dec
arpl
lret
lret
mov
sti
adc
pop
adc
ljmp
idiv
add
mov
pusha
sbb
inc
xor
fmul
je
cmpsb
mov
mov
shlb
in
inc
add
cld
push
mov
in
test
push
add
add
pusha
inc
push
iret
out
sbb
mov
cmpsl
add
xchg
add
ucomiss
pop
inc
push
enter
or
push
jle
cmpsb
subb
xchg
push
inc
ljmp
cmpsl
testb
std
cld
or
sahf
arpl
add
lds
adc
xchg
jle
je
pushf
outsl
test
push
pop
cs
jmp
jno
scas
insl
pop
dec
in
imul
mov
ljmp
pop
fiaddl
dec
mov
mov
fcomps
call
lcall
pop
mov
adc
into
js
jno
leave
lret
mov
pop
jne
repz
call
push
xor
cmp
lret
dec
std
inc
cmp
jne
popa
ja
ss
and
adc
mov
gs
mov
in
shl
xor
lds
repz
push
mov
daa
jno
mov
fcomps
ss
and
inc
sub
or
mov
dec
repnz
fsubrs
and
scas
fcmovne
xor
inc
xor
push
flds
push
outsb
les
pop
inc
pop
loopne
es
sbb
jo
push
popa
push
in
aam
push
sub
dec
jne
into
xchg
dec
mov
repz
mov
add
dec
test
scas
push
xchg
mov
js
sarl
xchg
aas
add
jo
int3
lods
cmp
out
fcomip
dec
inc
cmp
gs
pop
in
xchg
stos
push
fildll
in
add
sub
aad
clc
dec
adc
lret
push
lahf
test
mov
pop
lahf
into
push
sub
sbb
pop
mov
cmp
push
xchg
dec
int3
jns
cs
mov
xor
jne
cmp
mov
cld
fcompp
jg
arpl
es
aaa
test
scas
dec
jo
jns
inc
adc
hlt
cltd
push
and
js
mov
xchg
jns
in
ret
loopne
dec
aas
test
inc
mov
movsl
scas
mov
aam
dec
inc
clc
mov
orb
mov
pop
shrl
add
sub
ret
add
mov
addl
dec
push
cli
cmp
push
push
xor
subl
or
nop
inc
inc
das
jle
adc
shlb
xchg
or
dec
fld
xchg
stc
push
push
movsl
std
arpl
pop
push
xchg
mov
std
insb
dec
pop
jnp
inc
dec
mov
jl
and
and
xor
es
gs
add
inc
dec
and
iret
cmpsb
or
ss
nop
cld
pusha
mov
pop
fbld
mov
std
les
cmpsb
dec
inc
lret
mov
pop
int
xor
mov
aaa
fstl
mov
cmpsw
mov
lods
aam
popf
cld
lea
loope
pop
pop
fwait
add
jo
imul
mov
xchg
cltd
icebp
cmpsl
push
and
pop
sarb
clc
shll
pushf
fistps
in
jns
fnsave
and
sub
inc
in
es
or
je
arpl
xor
sbb
xchg
sub
aas
mov
mov
loope
adc
shrb
in
in
fdiv
rcll
sub
xor
pop
inc
and
leave
dec
test
mov
mov
negl
dec
scas
push
outsl
inc
cmc
pop
int
fcomp
mov
inc
call
rcll
fmulp
cmp
xchg
insl
cltd
imul
and
pusha
es
pop
mov
stc
pop
jecxz
in
add
mov
mov
inc
push
xchg
mov
cmpsb
pop
outsb
push
sub
insl
mov
mov
ss
mov
scas
jecxz
mov
jle
rclb
lods
adc
push
and
jb
cmp
shrl
inc
xor
lret
cli
cmp
sahf
inc
mov
xlat
rcrb
lret
jmp
in
sub
xchg
cmp
xchg
pop
fists
pushf
loopne
out
addr16
cmp
insb
and
mov
mov
sbb
rolb
test
arpl
imul
pop
push
arpl
in
xchg
cmp
sbb
cmp
mov
mov
ret
jnp
out
mov
xchg
mov
into
jmp
xchg
sbb
pusha
js
ret
mov
hlt
rcrb
mov
or
test
dec
insb
jg
test
xor
test
mov
cmp
push
jo
pushf
pusha
cmp
sbbl
pop
cmpl
push
jmp
movsl
loopne
push
out
mov
sbb
inc
sbb
mov
imul
jp
fidivrs
arpl
inc
ret
and
xor
mov
mov
pop
lods
push
push
sub
nop
xchg
dec
pop
cmp
jns
mov
push
ja
idivl
fs
ljmp
push
popf
dec
mov
nop
lods
cmp
stos
sub
sbb
loope
pushw
imul
rolb
pop
and
in
stos
xchg
adc
adc
cltd
add
mov
loopne
xlat
mov
push
xchg
shrb
sarb
lock
lock
sbb
aaa
cli
and
nop
and
xchg
loop
xor
push
stos
dec
out
lods
mov
add
mov
cmp
mov
sub
stos
sahf
dec
mov
dec
add
popa
scas
push
fisttpl
push
gs
mov
pop
or
idivl
mov
ljmp
sub
loope
and
sub
pop
push
add
pop
pusha
data16
sbb
loop
cmp
int
out
or
jle
shlb
add
jle
imul
inc
ss
mov
sarl
pop
enter
mov
lret
or
xchg
fcoms
outsl
adc
adc
pop
push
fwait
sub
stos
jo
push
out
add
in
fdivs
js
es
mov
cli
stos
out
dec
or
repz
jp
or
xor
sub
test
rcrb
and
stos
inc
pop
push
add
mov
std
dec
mov
push
into
and
xor
pop
push
add
cltd
subl
pop
push
jle
mov
mov
fcmovb
out
fistl
adc
mov
pop
lods
cltd
lcallw
popa
jno
add
add
sub
xchg
dec
mov
and
pop
inc
cmp
adc
jo
inc
mov
dec
mov
jbe
dec
in
xchg
mov
into
icebp
out
sub
dec
nop
out
cli
sbb
div
and
mov
outsl
in
jecxz
icebp
push
push
jge
inc
lea
or
pop
shlb
ss
push
xchg
pop
call
jb
jmp
mov
pop
and
or
ljmp
xchg
cmp
add
xorb
mov
data16
leave
ret
pop
add
sub
in
mov
repnz
sub
sbb
xchg
repz
mov
lods
sub
jne
lahf
and
repnz
aam
clc
cmpsl
sbb
shll
out
and
cmpsb
push
xchg
push
jp
xor
mov
cld
or
cmp
ja
imul
pop
dec
js
push
jg
and
shlb
mov
pop
adc
in
popa
les
mov
jns
mov
movsl
cmpsl
jno
pop
clc
out
adc
adc
test
bound
or
push
and
mov
cmpsb
jge
push
push
xchg
ja
lret
push
lahf
sub
bound
inc
inc
jle
dec
mov
scas
add
out
sbb
arpl
jmp
cli
repz
pop
enter
orb
mov
push
sahf
pop
inc
into
imul
inc
insb
stc
rcll
frstor
adc
push
sahf
leave
mov
mov
sub
adc
iret
fs
jge
enter
shrb
add
mov
bound
jge
leave
xorb
cmp
push
dec
scas
js
mov
sub
xor
fndisi(8087
or
je
mov
js
ror
rol
jnp
gs
call
add
sbb
das
mov
sub
push
aad
das
sbb
ret
dec
add
pop
mov
xchg
sbb
ljmp
out
lcall
popa
inc
ret
ljmp
or
xor
cmp
mov
cmc
in
insl
push
fsubl
nop
push
push
loopne
scas
jmp
scas
lret
mov
xor
jg
push
cli
and
push
cld
jb
shll
or
or
mov
cs
mov
loop
inc
ret
add
mov
jge
mov
mov
sbb
adc
aas
pop
nop
aam
jno
jge
out
aaa
dec
pop
or
pop
xchg
inc
adc
roll
popa
cmp
xchg
stos
into
sbb
into
test
push
dec
inc
dec
adc
stc
mov
adc
jbe
mov
cmp
mov
sub
cmpsl
push
cli
ficomps
mov
cmp
test
pop
cmp
sti
into
sti
add
ret
clc
mov
call
cmp
rorb
aad
xor
xchg
jg
flds
xchg
sahf
sbb
and
cs
movsl
hlt
fwait
xchg
ds
cwtl
xor
mov
pop
sbb
xchg
cld
jl
push
push
test
sbb
sar
cmp
cltd
xlat
dec
inc
jle
sbb
push
lret
push
cmp
out
in
in
arpl
mov
adc
or
add
gs
inc
pop
nop
push
and
lret
and
mov
pop
sti
mov
lcall
arpl
pop
adc
jb
je
adc
fcompl
mov
dec
mov
call
mov
sbb
cltd
pop
aas
or
out
and
sub
fsubrl
pop
bswap
test
cmp
loope
enter
mov
mov
jp
xorl
fisubs
cli
daa
dec
imul
dec
pop
cmp
iret
loope
scas
mov
push
lcall
shr
loope
mov
pop
xor
mov
push
insb
enter
and
out
pop
pusha
cwtl
out
jecxz
incb
xor
or
pushf
add
or
jg
scas
mov
jno
cmc
jp
lds
popa
gs
lea
cmp
add
push
cmp
sub
add
push
jmp
cmp
stc
mov
xchg
mov
mov
ds
leave
xchg
push
data16
push
leave
pop
inc
xor
mov
xor
mov
lret
jnp
insl
sbb
adc
ja
mov
in
dec
sub
dec
hlt
sbb
into
xchg
xchg
mov
inc
add
imul
mov
xchg
mov
pop
xchg
lods
rcr
mov
add
sbb
mov
cmp
addl
shll
std
push
jp
inc
inc
xchg
pop
in
inc
pushf
arpl
data16
loope
call
adcb
sbb
call
xchg
sub
sbb
enter
lret
push
sti
out
popa
pop
js
cwtl
lods
inc
out
aam
je
ljmp
mov
add
je
out
lahf
or
repnz
inc
sarb
aad
push
sub
jae
call
fs
jo
jl
mov
clc
xchg
add
xor
mov
jo
inc
inc
clc
cmpsl
push
fmul
popl
cmp
push
cs
call
test
push
or
ja
xor
xchg
sub
mov
out
pop
jg
out
scas
addb
mov
sbb
or
aas
sub
daa
mov
stc
inc
mov
pop
push
dec
aas
or
mov
pushl
stos
sub
stc
add
jle
push
in
inc
les
iret
and
sbb
mov
cmp
xor
adc
xchg
int3
inc
mov
or
and
ret
imul
xchg
bound
push
lahf
stos
testl
pop
mov
pop
inc
mov
mov
sub
mov
push
xchg
inc
cli
iret
or
mov
movsl
cs
ds
cltd
mov
loope
je
mov
lods
lret
into
repnz
jg
cltd
movsl
add
push
loopne
adc
stos
jbe
inc
sbb
movsl
jno
mov
mov
jg
ret
xchg
test
adc
sbb
push
loop
lret
jno
pop
mul
xor
pop
mov
or
jmp
mov
imul
out
sub
adc
dec
xchg
cmc
pop
dec
mov
insb
cmc
xchg
lahf
mov
cmc
cmpsb
lds
js
loopne,pt
nop
pop
enter
addl
jae
imul
pushf
mov
std
push
mov
xchg
clc
outsb
or
xor
push
jb
cmp
fstpl
mov
push
inc
outsl
cmpsb
mov
in
dec
pop
enter
push
jns
outsb
in
inc
mov
je
or
push
adc
xchg
xchg
ja
or
dec
mov
push
jge
insb
mov
inc
push
sub
mov
jne
movsb
aam
adc
add
aas
and
inc
hlt
mov
rcr
mov
shll
lret
inc
fldenv
sbb
add
cmpsb
scas
data16
stc
andl
insl
les
mov
push
mov
pop
mov
or
mov
mov
lret
inc
fsubrl
out
mov
sbb
fbstp
xor
lea
cli
in
jecxz
push
push
lret
mov
xor
jg
test
sti
and
jno
mov
ret
fldcw
fs
push
lods
push
sub
imul
sub
and
ficompl
fsubr
into
lret
test
cmp
xchg
mov
mov
lock
stos
loopne
mov
subb
xor
aam
test
add
cmp
into
data16
inc
push
push
sbb
fs
jo
int
and
ss
lahf
gs
mov
push
das
jns
xchg
jp
jp
lock
lahf
lock
mov
jo
push
cmp
lods
lea
xor
adc
jmp
jg
jecxz
xlat
jne
test
out
stos
inc
and
xchg
dec
imul
mov
add
aaa
dec
mov
adc
and
mov
fcoml
cmp
inc
push
cld
aam
test
das
push
andb
jmp
sub
inc
ja
xchg
ss
pusha
imul
scas
cli
add
test
loopne
push
adc
aam
or
mov
imul
xchg
sub
scas
sbb
sti
push
inc
cmp
add
dec
mov
daa
loopne
or
pusha
mov
inc
push
mov
or
jo
xchg
dec
xchg
push
inc
lods
inc
mov
loopne
xor
imul
movsb
and
jge
mov
ret
cwtl
dec
pop
scas
into
mov
push
pop
pop
in
stc
bound
and
mov
jae
push
cmp
insb
insb
out
imul
dec
pop
js
clc
js
hlt
test
sub
mov
pusha
cmc
push
jmp
outsl
dec
pop
cmpl
xor
out
int
lods
stos
inc
into
xorl
push
adc
paddusb
fs
test
mov
dec
ret
mov
push
add
xlat
ret
pop
fdivs
mov
inc
adc
stc
ljmp
leave
lds
aas
cmp
adc
popa
push
push
into
adc
out
int3
or
adc
outsb
jl
decl
out
lds
sahf
rclb
orl
inc
addr16
sub
lock
pop
xor
cmp
repz
dec
imul
pop
dec
jmp
mov
adc
js
mov
jmp
xchg
ljmp
test
int
mov
in
sbb
sbb
xor
cmp
and
xchg
test
xchg
mov
notl
lds
add
mov
lods
sbb
mov
dec
mov
mov
stos
cmc
cs
sbb
jmp
xchg
inc
xor
movsl
fsubrp
aad
adc
and
scas
lods
ficoms
or
cmpsb
sbb
addl
in
pop
jno
ficomps
sti
out
sti
lahf
out
push
ja
sbb
pop
lcall
pop
iret
dec
subb
ret
pop
sbb
movsl
mov
stos
shlb
insb
jecxz
fwait
xchg
adc
loop
idiv
dec
push
cld
dec
imul
pop
data16
mov
outsl
add
xchg
dec
popf
rorl
outsl
std
test
jmp
xor
mov
dec
out
xchg
jbe
nop
fisttpl
hlt
lods
push
mov
mov
xchg
sub
xchg
jo
shrb
mov
cmpsb
xor
push
and
push
cmp
jne
stos
mov
pop
rorb
dec
lcall
adc
or
mov
cmpsb
dec
bound
xor
cmp
cmp
push
or
cmpb
call
mov
les
sbb
xchg
xor
push
cltd
jp
adc
jg
pusha
lea
or
imul
out
sub
mov
fst
adc
subb
sbb
adc
lods
lcall
mov
and
rcrl
outsl
push
dec
mov
xchg
cld
sti
in
jno
adc
fnsave
in
das
mov
xchg
ret
cltd
movsb
and
xorb
xchg
std
loopne
pop
sub
jle
push
aad
insb
xchg
xchg
testl
jbe
shl
add
cld
cmpsb
jne
and
bnd
xor
pusha
aam
push
fabs
mov
inc
mov
sti
insl
inc
dec
lods
loope
movsl
xor
aam
pop
push
out
and
xchg
and
lods
mov
es
cmp
ficompl
mov
sub
dec
or
xor
cmp
test
test
int3
fidivl
inc
mov
cld
int3
xchg
or
bound
addr16
cmp
dec
or
jp
dec
jmp
push
mov
mov
arpl
pop
pusha
cmp
iret
or
int3
pmulhw
inc
and
xchg
dec
mov
lcall
inc
pop
sahf
insb
push
in
je
mov
mov
mov
and
rcr
cmp
xchg
mov
mov
dec
mov
jnp
data16
fnstcw
lea
aad
shrl
pop
mov
mov
pop
lahf
test
rcll
push
call
cmp
mov
sbb
mov
out
inc
and
xor
push
mov
sub
mov
into
lahf
movsl
fnstcw
jo
or
sbb
scas
xlat
pop
bound
imul
jae
dec
xor
dec
sbb
inc
and
imul
xor
cmpsl
inc
jnp
sbb
pop
leave
mov
mov
mov
cmc
pop
cltd
gs
xor
mov
mov
test
push
pop
pop
mov
and
sahf
stos
lret
pop
push
inc
jecxz
or
sarl
cmp
test
test
popf
push
push
pmaxsw
in
xchg
cmp
test
jge
cmp
cmp
mov
rorl
cmp
mov
inc
idivb
lahf
stos
ja
lret
dec
cmpsb
in
inc
movsb
outsl
xor
mov
dec
cmpsb
ja
es
test
test
mov
lcall
cmpsb
xchg
outsl
cmp
add
dec
mov
pop
aas
xchg
fs
out
mov
pushf
call
nop
xor
sub
cmp
sub
xlat
cmp
fisubrs
mov
xchg
int
xchg
push
cmp
push
imul
sub
testb
pop
sub
es
mov
cmp
mov
sbb
or
cltd
inc
cmpsl
add
lea
jp
fdivs
lcall
xor
cmp
dec
fsts
out
cmp
cld
lret
ljmp
lcall
mov
xchg
pop
sarb
xor
sub
and
mov
ret
out
cmp
adc
xorl
jnp
cltd
test
or
pop
ficoms
out
cld
dec
push
pop
or
xchg
fbld
sbb
popa
adc
jbe
sbb
push
roll
inc
scas
test
pop
cmp
dec
xchg
mov
dec
adc
push
add
sbb
bound
lret
inc
lds
stc
lds
and
popl
xchg
inc
dec
xchg
push
push
cltd
imul
cli
xor
inc
sahf
faddp
jmp
jecxz
xchg
push
inc
and
test
xchg
xor
push
xchg
inc
xchg
ss
cmp
sahf
pop
push
scas
pop
sbb
popf
mov
sbb
ds
fucomi
lret
andl
sti
in
inc
xor
out
and
hlt
inc
faddl
inc
je
mov
cmc
fcompl
addr16
add
and
les
dec
sti
mov
jle
in
jmp
jne
std
add
insb
das
jecxz
sbb
jb
fs
add
mov
mov
pop
movsl
mov
sub
ja
xor
push
push
outsl
inc
pop
icebp
xchg
push
push
mov
cmpsl
lds
enter
xchg
sbb
roll
setae
dec
and
or
sbb
pop
add
je
xorb
xor
jno
test
loop
mov
push
lods
imul
sub
sub
mov
das
imul
fsubs
mov
cmpsl
push
in
push
adc
pusha
ja
pop
lods
call
repnz
imul
loope
in
cmp
push
xlat
cmp
pop
pop
push
loop
xchg
dec
sahf
sub
and
outsb
push
mov
outsl
comiss
xchg
lret
lods
or
xchg
and
xor
adc
xchg
xlat
mov
cld
sbb
push
dec
test
lock
ffree
lods
xor
add
fstl
pop
sub
data16
cli
js
and
mov
cltd
shr
inc
inc
outsl
xchg
pop
sbb
movsl
xchg
pushf
cmp
mov
push
fidivrs
inc
ja
sub
aaa
mov
roll
imul
in
lea
jp
mov
dec
push
dec
fwait
jno
ret
xor
mov
cmp
pop
pop
dec
lea
out
and
xchg
dec
arpl
scas
or
jbe
xor
inc
xchg
jns
xlat
jp
ss
or
cmp
mov
hlt
mov
mov
leave
clc
sub
dec
pop
ds
jecxz
movsl
int
in
ds
ljmp
and
jg
sbb
mov
and
enter
int
mov
aas
xlat
aad
mov
xlat
stos
dec
popa
mov
leave
and
or
sub
sahf
shrb
mov
sub
cwtl
mov
nop
mov
jge
scas
shll
inc
subps
dec
repnz
sbb
push
sub
test
push
dec
jl
mov
xchg
scas
or
sbb
mov
mov
mov
js
mov
stos
or
shll
nop
testl
mov
cmpsb
loope
std
inc
xorl
mov
stos
jmp
ret
xchg
cwtl
sub
and
adc
push
lret
or
add
add
mov
mov
mov
pushf
fsubrs
cmp
mov
or
xchg
hlt
adc
das
pop
sti
scas
iret
or
lds
test
lds
scas
cmpsl
aaa
adc
scas
push
xor
cmp
iret
push
movsb
call
imul
inc
lods
dec
xor
cmp
or
insl
movsl
pop
testb
push
popf
mov
xchg
mov
dec
cmpsl
cmp
and
popf
adc
adc
repnz
ds
cmp
and
and
popl
popa
adc
std
xchg
adc
mov
out
fisubl
inc
xchg
stos
sti
or
fistps
or
lods
pop
cwtl
push
jp
push
mov
call
pop
xor
ljmp
push
inc
jmp
es
aaa
repz
lea
cli
ret
push
dec
xchg
imul
inc
loopne
lea
and
cmpb
pop
mov
xchg
jle
cvtpi2ps
jge
fstpl
push
xchg
push
jb
cld
sub
ret
daa
ds
ja
xlat
fwait
inc
fcoms
push
leave
sti
adc
daa
xchg
inc
xchg
inc
stos
aaa
ret
xor
or
sub
add
jle
cmp
xor
sbb
loop
and
sub
jg
mov
jne
fsub
sahf
in
cmpl
mov
and
outsb
pushl
mov
push
test
iret
pop
mov
jp
jmp
dec
pop
cmpsb
aam
shr
jp
or
and
jmp
popf
negb
dec
adc
xchg
fwait
mov
push
sub
out
repz
out
sub
jp
push
push
sbb
adcb
add
adc
inc
gs
fiaddl
test
icebp
jnp
jae
lret
js
popl
faddp
lahf
ljmp
dec
cwtl
sub
fcmovbe
fwait
hlt
and
mov
pop
mov
leave
pop
sti
lret
in
ficomps
inc
mov
add
pop
movsb
sti
lea
icebp
sbb
sbbw
cmpb
fistpl
stos
sbb
hlt
popa
xor
jo
leave
pop
pusha
fwait
dec
nop
mov
inc
and
mov
or
std
andb
test
push
push
cmova
sbb
testb
push
data16
jns
and
jl
inc
adcb
jecxz
cmp
or
add
cmpsb
push
aaa
mov
mov
lods
roll
dec
ds
rcrl
mov
pop
mov
cmc
stc
cs
mov
mov
hlt
int
adc
scas
jecxz
loope
sub
pop
add
pop
inc
add
shld
sbb
and
movsl
mov
jne
out
int3
sbb
push
jno
mov
inc
dec
cs
cmp
cmp
loopne
inc
sbb
mov
jmp
push
test
jne
or
adc
pop
in
fiaddl
mov
and
loope
int3
in
mov
inc
sub
and
cltd
add
fcompl
testb
ja
test
aaa
dec
shlb
fldenv
push
add
sub
ret
sub
xor
lods
and
idiv
lret
xor
cs
rorb
hlt
movsb
leave
ret
xlat
scas
dec
shll
fnstsw
pop
test
dec
and
dec
xchg
pusha
pop
jo
in
push
enter
xor
js
adc
push
sbb
mov
sbb
scas
cmpl
fimull
and
jg
sub
mov
mov
nop
scas
mov
clc
adc
sbb
stos
xor
out
add
cmc
imul
rep
dec
jmp
mov
pop
cmp
pop
fistps
xor
adc
and
push
popa
lahf
lds
dec
xor
dec
testb
scas
pop
jl
js
lock
fsubs
arpl
insl
push
stc
mov
fnstenv
insl
mov
adcb
jl
cli
xor
es
dec
xor
stc
rcll
cs
or
test
das
ror
stos
jmp
fimuls
push
ds
xlat
sbb
or
movsb
fidivs
mov
test
dec
mov
mov
pop
mov
faddl
push
pop
or
and
jb
lea
insl
fisubs
stos
fisttpll
fprem1
and
inc
mov
mov
orl
orb
clc
pop
xchg
int3
out
xchg
aas
or
fcmovnbe
or
lret
mov
pop
and
xchg
xchg
push
or
lods
push
sbb
stc
in
hlt
mov
mov
aam
hlt
push
stc
push
rol
imul
and
stos
insb
mov
mov
cmpsl
int
loopne
pop
pusha
jns
xor
test
outsl
cmp
cmp
sub
stos
outsb
jo
into
cmpsb
xchg
insl
push
xchg
scas
and
or
popf
out
and
xor
sbb
cmp
xchg
fwait
sti
subl
sub
js
sbb
or
mov
lock
daa
cmp
sti
rolb
sub
cmp
xor
dec
aad
xchg
ja
pop
jns
cmp
adc
inc
pop
add
inc
enter
outsb
inc
popa
insl
dec
int3
mov
sub
fists
fisubrl
fs
lret
mov
xor
pushl
out
push
push
xchg
jle
cmpb
insb
cmc
sub
sub
loope
sbb
mov
int
xorl
incb
mov
adc
shlb
add
push
add
add
inc
push
aad
mov
push
js
mov
test
and
mov
dec
push
cs
test
insl
push
sbb
push
rcrl
mov
subl
xor
lds
clc
fs
sub
pop
insb
cli
sub
les
cmp
pop
faddl
mov
stos
sub
xchg
inc
xor
mov
jns,pn
add
iret
ss
push
popa
add
fidivs
sti
mov
mov
in
sbb
sub
mov
int3
sub
push
out
cli
inc
sub
inc
and
and
cmp
pop
out
in
pop
and
and
push
xlat
in
xor
lret
iret
out
mov
xchg
jg
and
rol
xor
cmp
int3
fmulp
xchg
mov
roll
push
shrl
ret
adc
aaa
cmp
xlat
pop
jg
ljmp
pop
popf
lahf
push
pop
sbb
jns
shrl
ret
sahf
adc
rolb
ljmp
mov
icebp
mov
lret
mov
ret
push
flds
push
pop
adc
inc
add
xchg
shlb
jb
inc
jno
pushf
and
mov
xchg
je
xchg
mov
cltd
arpl
or
pop
dec
or
mov
roll
lret
sbb
pop
lea
and
addb
push
movsb
arpl
movaps
mov
loope
clc
cmpsb
inc
mov
or
notb
sti
sub
mov
ljmp
lret
add
mov
jns
push
ljmp
cmp
cmp
ret
and
test
mov
bound
mov
push
cwtl
push
and
pop
out
mov
clc
lds
aam
out
mov
sub
sahf
test
into
cmpsb
dec
aad
fnstcw
add
pop
and
cmpsl
push
pop
mov
push
scas
out
das
lret
or
loope
repz
movsl
fadds
cmp
enter
sahf
pop
lret
adcl
sub
sti
dec
aaa
dec
mul
jg
pop
pop
mov
sub
bound
in
lret
mov
jecxz
cltd
jp
stos
aad
add
dec
fcoml
inc
or
inc
iret
inc
mov
filds
xchg
mov
in
mov
mov
adc
lret
inc
dec
jp
mov
mov
mul
and
sub
lret
pop
shlb
adc
or
jnp
lods
andb
shlb
jnp
add
or
fs
hlt
movsb
pop
movsl
xor
pop
stos
or
loope
mov
jno
mov
xlat
inc
scas
aam
sbbb
lock
cmp
popf
test
pusha
jb
ja
repz
sub
jmp
ret
popl
mov
sbb
push
pop
cmp
sbb
xchg
push
push
mov
mov
cwtl
jecxz
lret
imul
sbb
mov
popl
fimuls
imul
ret
mov
out
frstor
cltd
mov
push
and
or
adc
out
inc
lods
sub
jo
dec
pop
mov
lcall
pop
mov
add
and
sbb
inc
jbe
enter
loopne
je
pop
in
jmp
xor
or
mov
scas
and
or
nop
fwait
js
pop
clc
pusha
addr16
inc
jmp
pop
sbb
sbb
sbb
xchg
aaa
aad
sar
idivb
sbb
ja
xchg
test
cmpsb
jbe
and
add
out
lcall
cmp
sbb
gs
xchg
int
pop
das
mov
mov
lods
mov
xchg
aam
fucomi
fs
dec
cwtl
fisttpl
push
sub
mov
out
lar
shlb
cmpsl
xchg
aad
lret
pusha
xchg
out
mov
add
insl
adc
xchg
stos
push
jle
and
subl
ret
fwait
sbb
mov
movb
fidivrs
xor
ret
xlat
divl
rolb
lcall
sarl
cmp
mov
xor
jo
shlb
cmp
out
dec
out
stc
sub
jecxz
or
icebp
adc
jno
pop
jp
push
and
xchg
shr
xor
mov
test
inc
daa
into
subl
pop
repz
stos
xchg
and
cmp
rorl
and
mov
xchg
cmpsb
mov
and
fwait
sbb
cld
pushf
pop
xlat
xchg
xor
inc
notl
cwtl
out
lcall
mov
dec
cmpsb
mov
sahf
xchg
insb
bound
pop
xor
pop
insb
push
cmpsl
inc
jle
sbb
dec
shl
fwait
pop
sahf
xor
lods
icebp
dec
dec
xchg
inc
or
divl
sarb
out
sbb
rclb
cmp
cmp
in
inc
fucomi
inc
int
push
push
and
je
mov
rcl
add
push
push
or
dec
add
mov
mov
cltd
or
xchg
rcll
adc
ss
xchg
test
scas
std
mov
mov
sbb
and
aad
insb
and
xor
mov
xchg
pop
fidivrl
popf
and
pop
pop
mov
push
push
sahf
push
fidivs
jmp
or
mov
and
subl
mov
pop
adc
bound
cmp
jmp
fdiv
into
xchg
mov
cmpsb
lods
clc
add
push
xchg
inc
add
pop
scas
adc
imul
push
les
fildl
or
jg
mov
push
fmull
xchg
and
out
test
icebp
rcrb
jge
mov
loop
insb
fwait
test
mov
or
mov
in
adc
test
scas
clc
adc
insl
mov
and
enter
add
push
fs
mov
lret
or
push
mov
cmpsl
ret
xchg
rcrl
div
xchg
iret
cmc
in
inc
and
push
bound
addb
cmp
inc
insl
je
ss
lods
sbb
sub
dec
loop,pt
push
outsl
jmp
push
loopne
add
popa
lcall
into
ljmp
mov
cmp
movsb
push
xor
addr16
mov
out
sub
xchg
mov
mov
stc
xchg
dec
andb
lcall
lret
lret
sbb
clc
leave
jb
mov
gs
outsl
dec
stc
icebp
push
andb
adc
jl
outsl
repz
int
jbe
fs
andb
out
dec
test
rcrl
sbb
ret
xchg
xchg
std
or
mov
fwait
mov
dec
pop
add
movsl
dec
imul
mov
fcmove
mov
cmc
jae
pop
xchg
jno
mov
and
or
in
xchg
ss
pop
pop
nop
xchg
push
shlb
loop
or
mov
xor
jnp
cld
pop
add
mov
push
int3
or
add
pop
mov
push
fdivr
jae
mov
aad
and
cmpsb
or
sub
adc
push
adc
xchg
sub
int3
and
xor
dec
mov
js
icebp
cs
insl
pop
fbld
rcll
cmp
dec
or
and
xlat
test
xor
jge
gs
add
adc
add
pop
cld
xchg
mov
mov
enter
inc
rclb
adc
cmp
pop
add
pop
dec
lods
repz
push
sbb
dec
popf
test
mov
outsb
xor
cmp
inc
ja
lds
mov
sub
stos
jbe
add
aad
bswap
scas
popa
out
rcrb
push
mov
iret
mov
add
popf
in
cmp
test
movsb
aas
push
push
jns
adc
lcall
rorb
aas
inc
pop
mov
inc
mov
int3
loopne
sbb
subl
mov
sbbl
call
ss
xor
push
sub
mov
inc
mov
stc
mov
mov
mov
iret
sbb
mov
jnp
rcrl
jbe
mov
pop
sub
adc
sbb
xlat
sub
iret
shlb
push
idivb
adc
iret
jmp
cmpsb
mov
inc
cld
mov
cmpb
adc
inc
popa
in
cli
ds
ficoml
xchg
ret
push
adc
pop
xor
dec
call
jmp
pop
inc
test
and
sahf
mov
dec
cmc
out
and
scas
in
jne
nop
push
add
cmpsl
iret
mov
into
stc
xchg
jb
push
popf
sbb
push
int
sub
scas
sub
repnz
aam
mov
cmp
mov
adc
adc
adc
mov
test
test
pop
add
std
pop
jmp
imul
inc
repz
push
dec
jae
mov
in
xchg
fstl
cmc
imul
and
mov
xchg
cmp
jo
sub
mov
rclb
fsubrs
movsl
cld
pop
comiss
cmc
addr16
popf
jne
jnp
arpl
imul
shlb
cltd
sbb
sarl
lret
lret
mov
fidivs
mov
call
test
repz
lret
push
mov
push
in
cwtl
inc
push
icebp
test
and
loope
in
ficomps
xchg
loopne
outsb
push
fidivrs
inc
sarl
lea
cmp
jl
jg
loop
out
cmp
lret
sbb
dec
mov
into
xchg
in
lods
lods
push
movsb
xchg
nop
imul
sbb
jmp
push
and
and
shll
sub
out
xchg
fistpl
push
inc
sahf
or
cmp
repnz
mov
inc
je
test
popf
push
aam
mov
xor
insb
aad
add
dec
jge
dec
lock
hlt
push
dec
adc
mov
sbb
loopne
fsts
mov
jbe
cld
and
adc
xchg
dec
pop
mov
sub
adc
push
fs
shrb
xorl
jb
outsb
je
mov
out
xchg
cmpsb
xor
adc
push
out
sbb
movl
mov
xchg
test
outsb
out
cmp
jb
cmc
std
fiaddl
rolb
cs
sbb
jmp
or
cmp
dec
bound
mov
stc
aad
lock
rcr
insl
ror
orl
inc
sub
jnp
mov
or
mov
test
out
loopne
inc
rep
js
dec
pop
inc
loope
in
push
pop
imul
dec
or
decb
mov
jle
subl
jbe
push
xor
js
jl
jo
pusha
lret
inc
dec
repz
popf
jecxz
xchg
lcall
cs
sub
mov
stos
pop
es
jae
pop
xchg
sti
ret
fs
dec
cmp
pop
out
xlat
hlt
or
mov
mov
rcll
jnp
push
mov
jbe
add
xor
sub
xor
dec
movsl
cwtl
or
xchg
lods
int3
xchg
stos
loop
cmp
cmc
ljmp
pop
mov
push
aas
pusha
lods
sbb
dec
out
icebp
pop
xchg
xor
mov
pushf
std
stc
in
mov
cmp
pop
mov
lret
popf
sbb
pop
pop
int
imul
idivl
movsb
cmpsb
insl
std
ja
sub
lds
jge
jmp
jl
fisttpll
push
pop
movsl
jle
sarb
and
add
add
pop
mov
xchg
mov
enter
and
or
bound
sbb
jae
adc
je
fldcw
and
addl
mov
jg
inc
xchg
lds
aam
mov
je
push
push
push
fcmovnu
sub
pop
sbb
xchg
push
mov
movsb
or
mov
cmpb
mov
cld
stos
inc
les
mov
jle
dec
xor
cwtl
pop
scas
mov
dec
ss
fldcw
bound
in
push
or
xorb
in
pop
hlt
cmpsl
sbb
push
fdivrl
ror
jbe
clc
lahf
mov
or
fsubr
ja
aaa
in
fimull
xchg
sbb
lret
cmp
ds
sub
or
ss
insl
nop
mov
cmpsl
cltd
aad
xor
pop
mov
lcall
in
cli
xchg
cmc
out
sbb
sbb
les
fsts
xchg
stc
inc
mov
mov
adc
test
testb
loope
rcrb
jmp
jl
xor
jb
dec
push
scas
insb
pop
jno
lahf
and
std
cmp
xchg
and
repnz
mov
inc
inc
in
stos
pop
xchg
push
fadd
cmp
loope
popa
xchg
nop
rclb
movsb
int
pop
inc
repnz
and
lea
adc
rclb
jno
mov
xor
negb
ficompl
out
xor
jae
adc
orl
push
mov
pop
and
pop
out
adc
sbb
cmp
je
cltd
jne
icebp
mov
mov
mov
bnd
xchg
sub
pop
adc
loopne
fidivrl
inc
and
cmpb
je
push
push
push
add
test
dec
inc
std
ss
push
mov
mov
insb
ljmp
lock
inc
in
fsubrs
rcrl
mov
imul
sub
inc
xchg
cmpsl
or
jno
xchg
call
sub
adc
lds
cmp
daa
pop
push
jmp
adc
or
mov
in
nopl
ja
or
pop
outsl
fdivrp
or
pop
in
add
fiadds
or
ret
or
and
insb
push
mulb
xor
mov
lret
sbb
int
popa
sti
roll
rcrb
fwait
or
scas
movsl
test
or
sahf
lods
out
adc
mov
mov
or
scas
in
sahf
cvtpi2ps
mov
pop
mov
pop
bound
scas
negb
mov
xlat
lcall
pop
pop
inc
testl
mov
ja
fistl
dec
jnp
ss
shl
in
lcall
add
push
lret
or
in
rcll
inc
jo
mov
mov
cltd
adc
out
cmp
aaa
notl
lret
mov
cwtl
jge
lock
call
inc
repz
pop
insb
xchg
loopne
lahf
sbb
ljmp
pop
inc
in
mov
inc
and
imul
negb
jnp
scas
scas
jne
mov
add
pop
cmp
cmp
or
repnz
int
xchg
repz
repnz
inc
xchg
or
adc
and
jecxz
adc
lahf
dec
or
imul
inc
jle
je
test
hlt
and
notl
mov
mov
imulb
push
or
pop
out
lahf
ljmp
imul
je
movsl
mov
inc
mov
and
push
arpl
ljmp
shlb
mov
mov
mov
in
push
add
fidivrl
cmp
mov
fxch
push
or
jo
inc
sbb
dec
jno
shrl
xchg
out
leave
or
sub
stc
sub
dec
vorps
ds
in
lret
pushf
dec
mov
push
cli
mov
stos
dec
sar
mov
mov
out
addb
cmp
jb
and
dec
and
xor
js
mov
inc
insb
clc
mov
and
sbb
pushf
push
cld
sbb
daa
xchg
or
sbb
xor
mov
lods
sbb
add
dec
mov
sub
sub
clc
mov
mov
adc
popf
mov
mov
ljmp
imull
push
add
pop
arpl
adc
cltd
mov
shl
notl
dec
push
loope
xor
xor
inc
addr16
scas
lods
pop
add
out
pop
sub
repnz
xorl
mov
out
cmp
loop
das
xor
jo
lods
lret
dec
jnp
aaa
mov
popa
out
das
into
fmull
rclb
dec
xor
mov
movsl
mov
leave
pop
mov
mov
inc
cmp
scas
mov
push
or
push
pop
stc
xor
xor
push
hlt
lock
inc
sbb
mov
jg
ficoms
cmp
or
xor
mov
hlt
jg
push
dec
add
sbb
sar
mov
cwtl
scas
and
jge
js
cmp
popa
dec
push
inc
fadds
cs
js
repnz
jo
icebp
rorb
pop
cmp
push
aaa
lds
je
sbb
test
jmp
push
cli
imul
jae
out
pop
neg
adc
inc
mov
gs
popa
ss
repnz
lods
pop
aam
arpl
cmpsb
mov
xchg
aaa
hlt
rolb
or
cmp
pop
dec
nop
lods
fnstcw
cmpsl
add
and
shl
add
call
dec
ljmp
cltd
loopew
or
lods
xor
pop
scas
inc
adc
adc
nop
test
pop
cmp
leave
push
cmp
int3
out
hlt
fstpt
xchg
dec
roll
mov
leave
sahf
xchg
pop
mov
inc
jge
inc
cmc
int
adc
fidivrl
fdivrp
aaa
push
test
data16
ret
loopne
inc
push
adc
jne
arpl
dec
xchg
add
inc
lods
xchg
adc
mov
jp
enter
jmp
into
dec
fcompl
sub
fildll
scas
xchg
or
xor
aam
ret
push
outsl
xchg
and
adc
pop
hlt
pop
frstor
addb
cltd
adc
push
mov
int
jmp
push
mov
fdivs
sbb
inc
in
push
mov
cmp
aad
xchg
dec
cmp
aad
aad
in
mov
pop
mov
loopne
out
cmp
xchg
lcall
lds
ficoml
cmp
outsb
ss
lret
int3
mov
push
stos
rcrl
xchg
out
repnz
mov
xchg
and
fwait
aam
subb
push
inc
pop
and
jge
dec
cmp
cltd
xlat
cltd
lock
lcall
sbb
rorb
rolb
or
popf
pop
cmp
xchg
ss
dec
xchg
lcall
jecxz
mov
inc
js
outsl
aad
and
cltd
xor
mov
in
mov
ror
aas
das
loop
sbb
dec
and
out
and
inc
xor
jp
or
sti
sbb
out
nop
cwtl
cmp
mov
sub
fdiv
push
push
pop
xor
popf
push
sub
test
xor
cmpsb
fsubr
pop
or
or
roll
cltd
xor
jmp
aam
into
popa
cmp
cmc
insb
lahf
call
mov
inc
pop
add
sar
aam
jns
xor
fcoml
mov
ds
adc
sbb
and
jb
mov
xor
push
insb
xlat
pop
clc
outsl
mov
into
fsub
inc
adc
adc
push
xchg
daa
dec
mov
sub
or
mov
pop
mov
mov
test
xchg
push
je
xchg
push
xchg
sub
int
addl
mov
add
xor
cmp
test
test
movsl
sbbl
cwtl
mov
insb
andl
xor
ljmp
leave
insl
fsubp
pop
cmp
dec
xor
cmpsb
sbb
mov
enter
sbb
fisubrs
or
test
repnz
jo
cmp
sub
iret
pop
imull
call
sub
or
nop
int
jecxz
or
xor
ret
xchg
push
mov
mov
jp
pop
jecxz
jmp
cld
sub
ret
fsubl
in
push
mov
in
incb
or
sbbl
dec
ss
popf
dec
jo
iret
adc
test
decb
mov
sub
jae
in
sub
mov
adc
and
dec
popf
outsl
jnp
and
aas
sub
test
xor
mov
add
pop
xchg
push
imul
jnp
sbb
mov
cld
push
mov
loop
and
mov
gs
sbb
sbb
and
dec
push
add
xchg
mov
add
out
jle
xchg
icebp
inc
adc
rcl
lret
or
nop
push
dec
loope
xchg
jno
xor
mov
mov
sub
nop
into
loop
jne
lret
loope
jg
hlt
arpl
lea
jmp
jno
popa
inc
cmp
mov
sub
enter
stc
fcomps
pop
push
jb
xchg
inc
punpckldq
push
roll
sub
fildll
insl
push
insb
cld
push
mov
shll
lock
leave
xor
inc
dec
jbe
test
xchg
jg
xor
mov
loopne
add
dec
and
call
adc
jl
ljmp
out
mov
rcrl
sbb
and
adc
dec
inc
jo
out
xor
sub
test
cs
cwtl
lock
cmpsb
ret
sbb
jmp
jl
dec
divb
lahf
jecxz
xchg
inc
dec
xchg
mov
outsb
xchg
pop
daa
outsl
std
dec
mov
mov
xchg
test
add
cs
dec
pushf
mov
int3
dec
adcl
rorb
loop
stos
in
ficompl
mov
push
pop
jl
repz
nop
mov
cmpl
dec
stc
sbb
fs
divl
cmpl
divl
cmp
mov
js
aas
test
push
or
mov
add
addb
insb
stos
sbb
mov
sub
stos
lods
enter
movsb
mov
lods
jb
jbe
mov
jge
xchg
gs
mov
or
repnz
mov
lret
xchg
fxrstor
push
leave
jl
leave
mov
dec
popl
ljmp
out
aam
sub
movsl
jmp
pop
xor
jp
ds
test
jb
push
je
cltd
pushf
sahf
negb
nop
sti
jmp
sbb
outsl
jno
scas
pop
aaa
dec
arpl
and
test
daa
sbb
notl
xor
jnp
ja
cmp
imul
cli
add
ret
cmp
add
pop
out
xorl
adc
bound
pop
inc
lret
sbb
sbb
test
add
test
stc
aad
pop
mov
imul
push
repnz
or
popa
mov
sbbb
movsb
and
sbb
or
insb
lds
pop
mov
mov
adc
jl
out
sbb
cmpsl
mov
loopne
aad
mov
adc
adc
cmp
mov
and
int
das
cmp
insb
imul
xlat
xchg
push
xor
push
mov
aam
mov
cmp
pop
xor
fs
mov
dec
pop
mov
jo
loopne
mov
add
cmp
add
and
in
mov
into
or
mov
and
mov
dec
mov
jmp
mov
addr16
icebp
jnp
push
push
jae
or
or
inc
adc
gs
xchg
subb
mov
cld
rcl
fwait
cli
push
gs
jge
cs
add
lcall
mov
cmpl
insl
lds
mov
cmp
lcall
fcomps
sub
into
push
aaa
insl
es
mov
lahf
cltd
and
dec
aad
mov
dec
adc
test
je
xchg
xlat
repnz
push
sti
mov
mov
outsl
es
mov
xchg
lods
mov
or
push
jns
and
xchg
mov
mov
jmp
push
xor
pop
das
outsb
sbb
adc
shl
and
icebp
fnsave
insb
adc
imul
mov
lea
mov
or
mov
repz
sub
xchg
popa
sub
and
inc
xchg
pop
lahf
adc
testl
fldl
popf
scas
add
sbb
js
pop
aad
cmp
push
call
mov
mov
mov
sarb
iret
dec
push
sbb
dec
out
inc
fimuls
jp
imul
inc
and
fsubrp
jno
addb
pushf
add
cmpsb
int3
testb
popa
or
mov
daa
pop
jmp
std
out
mov
fidivrs
mov
xor
mov
aam
data16
jne
loope
rcrb
outsl
das
mov
fistpl
decl
das
int3
xchg
cmc
cmp
pop
dec
xchg
adc
cli
loopne
or
ljmp
xchg
test
fdivr
dec
daa
fs
cmp
pop
pop
jne
xchg
imul
outsb
lock
mov
cmc
in
aam
idivl
cmp
fmul
jbe
cmp
and
sub
movb
cmp
insl
sbb
sub
adc
adc
loop
movsl
push
lock
mov
sub
fsubs
scas
inc
mov
push
push
subb
push
push
andl
inc
int3
push
jge
push
inc
js
xchg
cwtl
mov
hlt
mov
push
hlt
lcall
outsl
in
push
sahf
mov
or
adc
test
inc
in
jnp
cmpsb
scas
mov
adc
je
out
lods
clc
inc
lret
mov
testb
lods
sbb
adc
jae
pop
lods
dec
xor
xor
mov
shll
sbb
dec
sub
out
stos
fiadds
mov
jge
push
inc
shlb
fcomps
mov
mov
xor
fistpl
jmp
xchg
pop
or
xchg
dec
sbb
pop
push
and
aad
fs
or
or
mov
xchg
xor
cmp
out
push
scas
mov
add
ljmp
mov
popf
sub
fwait
into
jmp
mov
mov
les
cwtl
data16
data16
mov
loope
hlt
aam
aaa
and
out
sbb
mov
mov
push
je
test
and
out
mov
mov
dec
adc
add
sbb
pop
mov
aad
push
ljmp
jge
test
insl
mov
mov
push
roll
scas
repz
out
cmp
mov
les
or
mov
in
idivl
xor
inc
push
cmc
rorb
cmp
jno
inc
pusha
jl
jecxz
sub
bound
fcompl
decb
cmp
xor
into
loopne
or
push
test
icebp
mov
sti
push
stos
test
xor
push
mov
test
sbb
and
jo
inc
xor
xor
out
mov
repnz
outsl
movsl
jns
call
rcrl
mov
jo
std
aaa
leave
adc
push
pop
ret
nop
xorb
gs
insl
hlt
inc
inc
rclb
lds
pop
fstpl
pop
inc
push
push
cmp
cmp
dec
dec
pop
push
mov
mov
je
lock
dec
pop
addb
adc
xor
scas
pop
xor
push
adc
pop
in
lret
mov
add
pop
lods
sarl
jo
hlt
inc
push
add
imul
inc
add
shll
mov
sub
mov
inc
std
int3
xchg
sub
cmp
xor
test
js
stos
pop
int3
jne
fidivs
push
int
rcrl
cmpsb
pop
and
pop
xchg
jbe
fwait
gs
mov
sub
jmp
sub
or
or
arpl
das
cmp
xor
out
into
sbb
inc
sti
fisubrs
cmp
pop
cltd
lods
pop
push
outsl
adc
xchg
pop
sbb
pop
xor
mov
and
mov
sahf
shll
shrb
insl
aam
jmp
jnp
jmp
push
jae
lea
xchg
ret
cltd
outsb
sbb
data16
sbb
xlat
call
test
popf
hlt
jge
mov
enter
clc
mov
xchg
daa
cli
lods
and
cwtl
aaa
addl
outsl
std
lahf
clc
fsubrp
jp
ret
fisubl
shrb
rcr
or
or
jae
nop
aam
push
xchg
das
incl
jne,pn
or
mov
testb
push
testl
jmp
push
cmp
int
aad
lds
dec
mov
cmpsb
xchg
out
push
out
scas
ljmp
sahf
inc
xchg
js
mov
sahf
sarb
lds
dec
mov
dec
aad
jae
orl
xor
iret
inc
adc
shll
or
adc
xchg
add
repz
jl
js
inc
pop
loope
repnz
cmp
add
mov
push
cmpsb
push
out
mov
jp
clc
js
dec
sbb
outsb
in
mov
mov
insb
leave
cli
or
bound
xlat
jmp
xchg
fisubrl
call
rcrb
les
xchg
dec
add
add
test
fs
movsb
pop
dec
in
pop
xchg
xchg
xor
mov
cmc
inc
pushf
out
shrb
inc
mov
imul
adc
xchg
jmp
stc
int
loope
shr
int
xchg
out
out
test
rcl
shr
jg
mov
cltd
push
into
sbb
inc
xchg
dec
shlb
xchg
mov
es
mov
jne
addr16
pop
pop
pop
adc
nop
loope
sub
jg
mov
jb
or
mov
mov
shr
insb
icebp
add
push
add
ds
cmc
outsl
jne
cld
popa
xchg
push
movsb
mov
mov
or
les
xlat
mov
adc
insl
inc
dec
adc
inc
loop
dec
sbb
jle
nop
fsubrs
mov
push
sbb
pshufw
daa
push
je
mov
mov
imul
stc
andl
rorb
sahf
mov
enter
dec
xchg
jbe
add
out
jae
out
xchg
mov
sahf
mov
sbb
sub
cmp
bound
out
mov
jno
sbb
lea
movsl
mov
sub
addr16
xor
ja
out
pop
or
cltd
dec
or
xchg
xor
bound
jne
sbb
sahf
sub
xlat
jmp
mov
jle
ljmp
mov
in
xchg
repz
mov
rcrl
jne
cld
or
notb
add
jnp
mov
jns
dec
addb
aad
mov
jo
mov
test
xchg
dec
insl
stos
imul
aaa
mov
dec
add
aas
push
std
call
cs
jg
fstpl
jns
call
sbb
jg
gs
jbe
popa
cmp
mov
dec
mov
mov
jl
mov
mov
xorl
mov
int3
fstpl
cltd
jo
or
scas
pop
inc
jmp
movsb
test
ljmp
mov
add
loopne
mov
fisttpll
lods
or
cmpsb
xchg
out
adc
pop
pop
js
cmpsb
shll
fldenv
imul
in
sbb
cltd
stos
adc
add
in
sar
mov
dec
lods
int3
jecxz
jecxz
into
in
jo
pop
arpl
cmpsl
in
mov
mov
pop
loope
gs
int3
or
loope
aam
insl
fldcw
lods
jae
pop
fsubl
xchg
jno
aad
pop
mov
lcall
xchg
es
push
cmp
ret
ret
lock
adc
in
push
and
repnz
push
mov
lods
fmuls
stos
add
fiaddl
sub
xor
div
inc
mov
adc
rcrb
cmp
pop
pop
inc
iret
sbb
out
cltd
mov
jb
mov
cmp
add
mov
ljmp
mov
sbbl
fldt
jle
notb
push
loopne
mov
push
dec
jge
pusha
dec
jl
fcomps
or
mov
repnz
gs
out
xchg
mov
aas
pop
mov
xchg
lcall
add
mov
in
loop
out
lock
icebp
es
push
jbe
lret
adc
inc
jb
mov
sbb
clc
sbb
pusha
pop
aam
shrb
mov
mov
mov
jo
xor
or
jmp
orb
xchg
jb
mov
cmpsb
fiaddl
dec
pop
ljmp
stos
mov
negb
sbb
rcrb
jo
bound
ret
rorb
and
lret
inc
mov
or
fcompl
or
xchg
dec
lret
cmpsb
les
ret
in
sbb
mov
xchg
adc
mov
xor
cmp
out
mov
and
imul
popa
pop
pop
ud0
sbb
test
iret
jl
out
or
insl
sarl
fidivrs
mov
scas
shrl
pusha
lods
cmp
pop
outsb
mov
inc
xchg
adc
cld
jmp
lcall
sub
mov
inc
mov
adc
xor
out
shrb
and
cmpsl
leave
in
bound
imul
rclb
in
sti
push
jns
and
jle
jbe
jnp
adcb
decl
jbe
int3
shll
and
fwait
movl
push
lcall
xchg
sbb
inc
fldenv
mov
into
cmp
pop
push
rcrl
jbe
sub
scas
cwtl
dec
movsb
popa
ds
fs
mov
iret
or
scas
inc
aam
sub
push
mov
push
mov
jb
movsb
mov
out
sbb
daa
mov
ljmp
and
xor
jecxz
scas
add
add
sub
inc
sbb
inc
dec
cmp
xlat
push
fsubs
add
mov
mov
add
inc
lods
jge
lds
mov
jp
outsb
out
sahf
inc
inc
lret
adc
cmp
ds
xchg
add
loope
ds
xor
in
xchg
xchg
cmc
stos
jno
popf
lret
xor
loopne
mov
mov
adc
in
out
insl
mov
lret
inc
xchg
imul
rorb
lahf
arpl
add
lds
sub
repnz
push
ret
aas
inc
pop
incl
rcrl
jmp
jl
std
pop
shll
not
push
fimull
iret
pop
imul
lahf
cmp
pop
enter
xor
adc
xlat
testb
xorl
out
add
jns
sub
movl
loope
loopne
std
pusha
push
xchg
inc
pop
inc
and
mov
xchg
fcmovb
push
pop
jmp
mov
sub
pushf
sbb
xor
int3
jecxz
ffreep
lea
dec
aam
stos
fstps
sbb
push
into
add
jo
mov
dec
xchg
in
mov
imul
jl
movsl
sarl
ret
push
cltd
leave
jbe
je
cmp
lahf
cmp
popa
sbb
das
jo
int
pop
maskmovq
mov
adc
andl
mov
mov
sbb
pop
repz
jae
enter
imull
out
jnp
inc
pop
cmp
stos
je
or
sub
inc
je
cmp
jp
icebp
and
test
cs
cmp
sbb
test
in
xor
outsb
add
jle
xchg
push
out
andl
sub
mov
push
aad
test
cwtl
add
mov
aas
cmp
pop
xlat
cmp
mov
ja
inc
stos
and
and
pop
mov
imul
sbb
mov
jp
lock
out
add
sbb
dec
xchg
ljmp
adc
dec
movsl
das
lcall
int3
dec
or
jmp
dec
inc
ret
movsl
cmp
or
lods
sub
mov
push
jb
add
test
cwtl
cmp
xor
xor
cmp
xchg
inc
rorl
call
cli
xchg
repnz
lret
pushf
xor
test
push
fwait
mov
xor
pop
pop
bound
pop
and
stos
leave
jne
push
aad
pop
xor
fwait
mov
outsb
pushf
int
aad
loopne
mov
pop
add
repz
cs
stos
inc
lret
jne
int
mov
es
xchg
cli
dec
sub
add
add
popf
pusha
cmp
rorb
cmp
cmpsb
pop
mov
ds
mov
inc
push
stos
jnp
pop
int3
js
cmp
packuswb
dec
push
js
mov
cmc
loope
push
lock
push
fnstcw
imul
fildll
icebp
lds
dec
fdivrs
lds
fimull
push
xchg
xor
mov
out
dec
psllw
std
aam
xchg
mov
xchg
repz
das
sbb
cmp
mov
add
std
repnz
push
repnz
jecxz
mov
mov
sahf
jbe
fsubrs
xchg
mov
push
dec
mov
pop
aas
inc
push
mov
ds
mov
xchg
xor
into
test
in
and
jmp
insl
and
xor
out
cwtl
fnstenv
and
ljmp
cmp
sahf
popf
js
cmpb
mov
xchg
jge
aaa
sbb
fcoms
cmp
cmp
cmp
add
push
lret
add
add
xor
pop
dec
add
inc
outsb
pusha
std
sub
xor
cs
or
mov
lret
rcrb
scas
int3
loope
dec
lods
inc
lret
jecxz
xor
jge
xor
pop
pop
daa
pop
insl
repz
push
andb
jmp
enter
mov
xchg
mov
repz
add
xchg
icebp
fisubrl
jg
add
dec
adc
adc
lds
insl
imul
lods
cltd
adc
jo
scas
decb
cmp
loope
push
out
and
js
in
pop
xorb
clc
lret
hlt
ja
sbb
jmp
dec
cs
cltd
or
mov
xor
push
pushf
imul
adc
dec
ja
lahf
dec
push
lret
pop
scas
dec
sbb
mov
aaa
xchg
mov
mov
mov
pop
jg
xchg
mov
fcomip
rclb
mov
nop
lods
xchg
mov
pop
cltd
iret
push
addl
jge
jne
fcmovne
mov
cmp
mov
dec
cmc
mov
mov
pop
ljmp
dec
sti
in
stos
mov
notb
mov
imul
cld
dec
push
mov
adc
add
mov
addr16
xor
out
sub
xchg
je
pop
sbb
dec
in
test
or
fs
stc
xchg
lcall
push
xchg
xor
daa
adc
frstor
jecxz
jmp
and
or
test
fwait
test
adc
dec
test
call
jecxz
xchg
popf
outsl
sahf
lods
sub
mov
cmpsb
sbb
mov
mov
fldl
push
adc
adc
cmp
repz
pop
enter
pusha
movsl
mov
data16
cmc
and
mov
and
xor
xor
jb
sub
and
xchg
repnz
clc
daa
pop
popf
and
jnp
lock
xchg
mov
insb
xor
adc
mov
xchg
jg
xchg
xchg
leave
xchg
andl
cmp
pushf
push
mov
adc
sbbb
or
movsl
sbb
xor
xchg
cli
mov
movsl
mov
jle
std
leave
iret
arpl
push
or
cmp
mov
lret
pop
nop
or
jnp
push
and
sbbl
in
cltd
adc
gs
xlat
push
inc
push
jno
pushf
cmp
sub
and
lret
mov
ds
in
dec
pop
out
add
jmp
call
mov
add
mov
inc
les
out
pop
clc
cs
mov
mov
dec
arpl
push
pop
or
inc
imul
pushf
out
stos
mov
hlt
adc
scas
and
in
loopne
ret
pop
fldenv
mov
jg
imul
aam
iret
adc
dec
xchg
mov
xchg
fs
mov
shll
icebp
mov
mov
aad
jbe
mov
lret
mov
mov
arpl
inc
push
pop
ss
sbb
xchg
or
movsb
fisttpl
fdivs
mov
xchg
jns
mov
pop
cltd
lahf
cmp
xor
adc
movsl
mov
mov
pushf
add
sub
sbb
add
dec
sbb
mov
sub
outsl
cmp
test
push
or
dec
dec
rcll
addr16
push
imul
dec
pop
or
in
mov
imul
and
cmp
add
int
in
mov
fucomp
push
push
jae
scas
push
fninit
or
sub
ja
push
sbb
and
gs
adc
mov
aas
mov
in
arpl
lock
loope
inc
subb
jg
inc
mov
pop
int
inc
xlat
xchg
push
sbb
jp
cmp
or
mov
jmp
fcmovu
imulb
pop
sub
inc
dec
add
dec
shr
mov
inc
adc
aad
cmpsl
es
cwtl
ficompl
mov
sub
jnp
mov
mov
sbb
andb
mov
xor
push
pop
jl
add
int
loope
aad
xchg
fwait
mov
push
mov
rcrb
or
mov
movsb
dec
cmc
iret
repnz
fs
lea
call
sbb
adcl
or
dec
call
xor
cmp
jnp
mov
stos
mov
jg
pushf
out
in
inc
pop
stc
hlt
pop
je
jno
data16
fstpl
jmp
pop
aas
faddl
clc
sbb
add
inc
push
mov
mov
pop
decl
ss
inc
xor
out
cmp
das
mov
js
xor
fistpll
movsb
movsl
jecxz
lods
nop
xor
into
outsl
jno
sahf
mov
sbb
jge
popf
adc
xchg
cwtl
dec
pop
add
outsl
pushl
sahf
jno
outsl
or
int
ja
lcall
outsb
outsb
fsubrs
lret
enter
movsb
cmc
jecxz
leave
mov
rcr
add
mov
jmp
mov
push
push
sbb
pop
cmp
mov
push
xor
mov
iret
scas
popf
ficomps
add
sub
int
pop
push
add
inc
aam
mov
scas
xor
pushf
cmp
pop
das
adc
cs
call
mov
xchg
fwait
loopne
sub
pop
mulb
and
test
data16
jl
mov
rorl
fidivrl
hlt
lahf
out
push
lret
or
xor
fadds
repz
ret
addb
test
jecxz
or
ret
mov
push
adc
aam
jecxz
pop
dec
pop
push
jmp
sti
and
es
sub
in
addr16
adc
adc
jmp
sub
incb
mov
xor
fnstsw
mov
jbe
int
and
push
xor
stc
or
push
xor
mov
mov
mov
cmp
push
xchg
sub
xchg
inc
push
fmuls
std
popf
or
test
fsubr
aam
lods
mov
push
test
sbb
mov
dec
ja
cs
lods
aad
dec
or
out
out
cld
test
inc
adc
lret
pop
cld
mov
dec
gs
stos
mov
cwtl
mov
dec
daa
ret
sahf
or
xchg
mov
xchg
sub
pop
aam
jecxz
xchg
in
jne
arpl
cli
lret
negb
push
ret
jb
sti
sub
push
mov
insl
ret
cmp
dec
pop
jno
mov
in
ret
mov
add
dec
mov
gs
pushf
repnz
and
jne
das
jmp
xor
out
dec
lret
out
adc
xchg
mov
jecxz
and
ljmp
mov
dec
sub
cmp
sub
fidivs
mov
mov
pop
push
xlat
adc
xor
es
jmp
push
inc
or
lock
xor
add
cltd
push
jo
xchg
lock
loopne
divl
ficoms
scas
ja
inc
icebp
test
and
push
je
popf
clc
mov
jns
stc
mov
mull
fcom
pop
xor
sbb
movsb
cmpsb
add
inc
mov
stos
lods
sahf
jle
cltd
rclb
ret
cld
or
sahf
mov
pop
repz
mov
inc
sti
mov
pushf
sbb
test
popa
push
mov
add
out
pop
inc
shld
pop
loopne
outsb
cld
in
inc
out
mov
mov
sbb
mov
jecxz
aaa
sarb
lret
adcb
outsb
pop
cmpsb
ret
ds
pop
or
popf
push
testl
xlat
and
pop
push
fnstsw
mov
jg
mov
rclb
inc
mov
gs
fdivrp
andl
adc
bound
jg
pop
push
ss
mov
jbe
movsl
pop
adc
pop
addr16
add
dec
mov
pushf
loop
pop
inc
mov
xchg
fnstsw
push
inc
pop
in
cmp
scas
mov
inc
inc
sarb
push
insl
push
mov
push
out
test
fsubs
add
pop
or
sub
mov
cmp
add
dec
sub
cltd
incl
test
adc
pop
popa
xor
xlat
std
in
fdivrl
std
sub
push
and
cli
xchg
or
ja
in
mov
not
pop
xorb
cmp
and
ja
jmp
ja
lods
jle
scas
shll
test
shrb
jmp
mov
push
dec
dec
sub
or
jno
dec
ljmp
xchg
arpl
or
mov
adc
and
push
pop
leave
jmp
mov
xchg
mov
fistpl
xchg
subb
dec
mov
and
jo
movsb
cmp
loope
dec
fnstcw
xchg
lahf
loope
mov
or
add
push
cs
int
mov
stos
mov
or
int
movsb
imul
xchg
repnz
inc
lea
dec
xchg
repnz
cmp
ds
sbb
mov
clc
sbb
add
dec
add
sub
xor
into
outsl
xchg
jecxz
or
jecxz
mov
mov
push
mov
and
fildl
dec
in
rcr
pop
das
lcall
xchg
and
push
or
xor
xor
inc
pusha
cmpsl
loope
or
dec
pop
enter
rep
sub
and
std
iret
xchg
in
add
sbb
adc
dec
jno
test
leave
mov
ds
outsb
mov
push
cmp
pop
ret
shrb
inc
call
add
jmp
pop
imul
jg
fldl
jecxz
push
mov
push
ret
mov
push
nop
in
xchg
outsb
jge
push
push
mov
pop
fs
dec
adc
pop
mov
push
fstpl
ffreep
xchg
aam
mov
lods
inc
push
movd
shll
dec
jo
jg
mov
add
lds
repz
call
insl
xchg
or
pop
sbb
lock
push
arpl
and
add
push
sub
fadds
rorb
lock
stos
int
cmp
pop
shll
cmc
lahf
fwait
gs
push
cmc
xor
lock
sbb
or
mov
add
pusha
pop
aas
test
sbb
or
stc
arpl
cmc
pop
add
dec
dec
mov
and
fsts
jo
sbb
jo
inc
lret
cld
jns
and
xor
out
jnp
push
decl
mov
push
or
mov
xchg
push
cmpsb
int
pop
push
lret
loope
cs
cmovo
das
stos
adc
clc
sbb
daa
sbb
jl
scas
outsb
loop
pusha
test
dec
mov
ret
and
inc
dec
cmp
dec
xchg
pop
sub
rorl
xor
mov
icebp
push
jmp
div
ficompl
or
inc
pop
or
ds
or
imul
push
dec
insl
enter
xchg
xor
jmp
fistl
lret
ret
aam
out
or
pcmpgtb
push
mov
mov
out
mov
hlt
sti
mov
push
or
pop
cmp
les
pop
out
fbld
std
loopne
mov
lahf
cmp
push
in
data16
or
mov
xor
inc
sbb
mov
sar
pop
movsb
mov
fldt
jmp
or
dec
fwait
mov
add
adc
add
std
and
movb
sbb
pop
jecxz
mov
mov
add
out
gs
xor
sub
push
xchg
nop
leave
xor
ds
xchg
adc
addr16
mov
cmp
out
cmp
cmp
mov
add
in
nop
mov
push
mov
es
xchg
adcb
push
decb
adcb
daa
lcall
dec
xor
inc
cmp
adc
inc
iret
xorl
cmpsl
hlt
in
dec
cmp
xchg
lds
rcll
cli
mov
loope
mov
xor
pop
scas
scas
ret
bound
and
gs
addr16
pop
in
fbstp
sub
xchg
pop
shrb
cmp
and
out
sbb
xor
sbb
subl
sbb
cld
cmpsb
repnz
and
cmp
xor
push
enter
test
aad
dec
cmp
push
xchg
scas
sbb
ss
pop
pop
lock
ss
loope
add
movsb
pop
jmp
insb
pop
xor
add
mov
js
pop
push
jne
cmp
mov
add
movsl
fwait
sarl
icebp
adc
aas
sahf
dec
pop
adc
mov
pop
push
xchg
jg
pop
push
ljmp
scas
cmpsb
lock
cmpsl
aas
jb
xor
jg
jbe
outsl
clc
fwait
inc
inc
xchg
scas
arpl
sbb
jge
jns
arpl
roll
incl
mov
mov
adc
roll
mov
sub
pusha
int
mov
fldl
xor
inc
loopne
jg
lea
clc
aam
jae
adc
xchg
push
dec
inc
mov
jbe
jb
iret
lds
mov
mov
fsubp
bound
dec
loop
scas
sub
adc
cmpsb
adc
out
lcall
mov
out
add
push
ret
insb
mov
cmpsb
push
je
pop
ffreep
aas
sub
es
stos
lahf
add
jmp
sbb
test
je
je
imul
sub
lcall
inc
fstpt
xor
fucom
adc
into
pop
cld
xchg
bound
jb
xchg
mov
mov
daa
ljmp
cmp
lock
pushf
adc
imul
or
sub
mov
pop
mov
inc
cmp
cmpsb
mov
xor
repnz
out
mov
fs
ficompl
fsts
bsf
out
dec
mov
mov
int3
test
test
pop
pop
inc
inc
cld
mov
adc
or
mov
or
movsb
mov
xchg
dec
insb
cli
jo
mov
or
pop
addr16
mov
shl
xchg
mov
xor
xor
filds
sti
sub
sahf
outsb
scas
imul
pop
rcll
addl
fs
add
add
fstps
into
cmp
mov
mov
cwtl
pop
ljmp
shl
dec
mov
and
cmp
add
mov
push
hlt
cwtl
fldcw
sbb
and
cmp
pop
hlt
sbb
fdiv
outsb
pop
mov
test
jmp
jae
inc
mov
push
xchg
enter
out
divb
push
test
add
movsl
rorb
inc
fwait
dec
cmp
movsl
cmpb
add
lock
adc
mov
pop
jae
bound
pop
mov
push
bound
pop
in
xchg
mov
lods
sbb
scas
mov
push
jns
jbe
jb
cmc
out
repnz
and
or
lock
push
add
out
mov
sbb
xchg
popa
xacquire
das
adc
pop
xchg
or
or
fnstenv
stos
and
adc
bound
incb
js
or
push
out
add
mov
mov
movsb
jp
push
arpl
lds
push
dec
xchg
out
xlat
shll
jo
es
scas
into
or
lods
in
add
jle
test
jo
xchg
dec
movsb
out
imul
popa
inc
lea
inc
adc
fmull
in
rcr
jmp
mov
jp
lods
lods
push
lods
lds
jnp,pt
imul
fstpl
testl
jecxz
or
jle
pop
int3
inc
fiaddl
jno
adc
out
insb
push
lcall
xchg
les
je
cmp
aas
lods
jae
enter
xlat
xor
or
int
mov
mov
sbb
nop
mov
xchg
jbe
pop
inc
pop
cli
jb
mov
out
loope
arpl
lcall
push
loope
cmp
push
das
aas
ret
pop
push
out
aad
in
or
jnp
pushf
icebp
sub
push
shrb
mov
or
mov
pop
dec
jecxz
mov
test
mov
mov
push
adc
leave
sti
xchg
and
sbb
cld
mov
cmp
loop
sbbb
imul
xchg
push
xchg
pop
cli
lds
fwait
bound
xchg
jl
mov
leave
mov
jp
mov
aam
imul
je
cmpsb
mov
arpl
mov
push
sub
lea
movb
jmp
and
mov
das
ret
std
adc
jecxz
sbb
sbb
sarb
cmp
cmp
xor
mov
sub
push
in
mov
xor
or
outsl
dec
sbbb
and
jns
cmp
dec
das
mov
lock
pop
add
mov
mov
mov
mov
test
pop
xchg
icebp
sub
inc
loop
adc
repnz
fs
mov
jnp
and
dec
and
inc
jge
mov
xchg
and
imul
mov
inc
outsb
shl
lcall
sbb
hlt
js
push
sub
dec
push
test
out
pop
call
xchg
mov
mov
sahf
mov
jecxz
imul
adc
xor
inc
push
stos
jecxz
decb
pop
xor
xchg
imul
dec
adc
and
and
imulb
pop
mov
roll
dec
divb
add
sub
jge
ret
pop
mov
ret
sub
arpl
mov
out
cmp
bswap
xchg
inc
mov
pop
imul
jns
inc
dec
xchg
lods
xor
hlt
xchg
pop
fcoms
push
fnstsw
adc
mov
repnz
fcom
fs
ss
xchg
xorl
pop
fidivs
or
test
xor
outsl
sbbb
cmp
mov
xchg
and
adc
arpl
into
jp
loopne
cwtl
int3
mov
inc
xor
add
jmp
pop
push
hlt
pop
pop
in
clc
inc
ljmp
mov
adc
sub
add
stos
xor
fldcw
push
xlat
jo
jg
xchg
cld
xchg
pop
mov
mov
sub
pop
sbb
mov
int3
nop
jne
mov
cmp
faddl
stc
jecxz
dec
or
test
adc
sti
xchg
add
scas
or
lea
lret
push
mov
inc
fwait
sbb
aam
mov
mov
pop
xchg
loop
scas
int
ficompl
outsl
or
imul
enter
or
cmpsb
or
mov
jmp
and
int3
in
iret
bound
pop
or
or
jae
dec
daa
aaa
cmpsl
mov
mov
inc
mov
jne
cmp
pop
aad
jl
xchg
rol
loopne
sub
leave
dec
or
adc
mov
cltd
ficomps
jnp
mulb
push
sub
inc
popa
lret
jge
add
lahf
sub
leave
ss
xor
adc
test
test
insb
jo
dec
sarl
push
loop
pop
movsl
sub
daa
inc
jmp
hlt
roll
aas
cmp
cltd
pop
dec
xchg
adc
and
in
ljmp
outsb
aam
jbe
xchg
jle
shrb
inc
clc
jmp
cmp
inc
icebp
push
push
pop
aas
clc
inc
adc
jns
addl
xor
mov
and
loop
stos
frstor
or
pop
cs
push
adc
push
clc
adc
and
adc
in
js
or
mov
dec
rcl
jo
xchg
inc
fsts
mov
cs
hlt
ret
push
push
sub
dec
sub
jns
iret
dec
xor
aas
nop
push
jmp
fcom
xchg
cmp
pushf
xchg
notl
mov
in
jl
dec
icebp
loop
sarl
xor
jmp
divl
outsb
xor
and
shl
sbb
add
aas
sub
nop
cmp
movsb
mov
mov
fimull
sbb
je
mov
je
outsl
inc
out
lds
jle
sarl
movsb
jp
xor
mov
mov
lods
pop
inc
daa
lds
sbb
repz
push
loop
pop
dec
mov
in
imul
push
xchg
add
addr16
int3
leave
cs
test
push
iret
xor
or
bnd
idivb
enter
mov
jl
repz
mov
mov
aas
cs
dec
mov
xchg
shrl
push
in
js
cli
cmp
cmpsb
mov
cmpsb
aad
arpl
sbb
add
outsb
mov
icebp
xchg
or
aas
and
mov
adc
out
xor
les
cmp
push
mov
xorb
sub
adc
xor
push
cmp
xchg
lcall
insb
mov
pop
lret
je
mov
inc
icebp
lahf
sbb
dec
lahf
into
jno
inc
stos
aas
js
jnp
adc
loop
movsb
pop
push
aam
sbb
cmpl
int
xchg
cwtl
sub
xor
cmc
adc
aas
popa
ret
jge
pushf
mov
or
icebp
add
sbb
stos
hlt
lcall
hlt
ss
ds
test
dec
adc
fstpt
lret
lret
fs
bound
daa
add
sahf
stos
mov
mov
push
xchg
popf
inc
shlb
iret
jae
stos
mov
inc
and
mov
ljmp
sub
stos
mul
clc
std
cmp
adc
xor
sub
icebp
mulb
mov
out
js
jnp
popl
mov
adc
mov
jge
icebp
jno
andl
enter
adc
jae
out
test
mov
aas
jo
mov
enter
xor
or
fcoms
mov
mov
mov
cmp
sti
icebp
sub
andl
or
mov
ret
lahf
pop
pcmpeqb
ja
jb
and
xor
sub
or
loopne
movsl
shrb
mov
les
lods
lods
adc
cltd
cmc
push
ljmp
sbb
and
inc
clc
ret
frstor
scas
shll
aas
pushf
stos
xchg
adc
xor
ljmp
xchg
pushf
add
stos
popa
js
ret
cwtl
push
mov
mov
cwtl
test
das
xchg
and
dec
fstps
subl
sbb
call
cmp
rorb
mov
ljmp
push
xorb
out
inc
mov
inc
mov
add
or
push
cmp
inc
iret
add
outsb
fildll
adc
push
jno
in
mov
in
xor
call
nop
sbb
add
jae
insl
mov
mov
cmp
xchg
xor
pop
leave
lret
leave
pop
mov
mov
pop
pop
xchg
inc
push
jne
jg
mov
jae
mov
leave
aas
push
sti
mov
out
iret
inc
sbb
mov
ss
mov
xchg
jmp
mov
dec
mov
les
popa
out
in
fcmovu
out
scas
out
adc
ss
sti
out
mov
push
mov
arpl
fiadds
lret
movsb
push
push
popa
jecxz
rclb
fsubs
xlat
cltd
xchg
mov
dec
lods
xor
in
mov
or
in
arpl
cmp
rorl
lcall
movsl
mov
lahf
movsl
sub
mov
sub
jmp
ret
test
movsl
cltd
sbbl
xchg
mov
sbb
daa
jmp
mov
pop
cmpsb
fwait
cmp
insb
mov
mov
mov
lret
ret
in
inc
leave
imul
fdivs
and
or
add
pop
mov
xchg
das
xchg
fcompl
mov
jne
es
cltd
pop
repnz
jae
repnz
xchg
pop
js
lret
fstl
push
mov
xor
popa
or
mov
mov
push
movsl
out
ret
pop
xor
pop
and
push
das
aas
arpl
and
loopne
or
xchg
lret
jnp
bound
lret
mov
outsb
mov
mov
rorb
je
lea
fisttps
mov
jg
les
jle
loop
repnz
xlat
cmp
add
data16
cli
pop
mov
lretw
cwtl
mov
insb
xchg
test
cmp
bound
outsl
insl
popf
pop
inc
andb
loopne
and
fnsave
sbb
xor
fwait
stos
stc
int3
mov
dec
lahf
fcmovbe
and
cltd
xor
int
lahf
adc
out
xor
push
jl
mov
sbb
adcb
scas
loopne
mov
les
fucomp
adc
repnz
out
and
inc
jmp
cwtl
push
int
add
jns
bound
jg
add
pop
dec
jge
sub
and
jne
movsl
cwtl
or
mov
xorb
aad
arpl
scas
jp
clc
and
cld
dec
pop
addr16
out
fdivl
cmpl
xchg
xchg
mov
cmp
xor
int
dec
sarl
xchg
insb
jbe
shlb
mov
setno
dec
fcom
out
push
mov
cwtl
int3
xlat
fsub
pop
cmp
sub
movsb
jmp
jnp
addb
fcoml
or
loopne
test
pushf
cmpsb
cmc
insb
or
aaa
xlat
jmp
lock
sahf
xor
jno
cmp
les
xor
roll
popa
and
push
stos
sbb
adc
push
pop
add
pop
inc
inc
push
insb
xor
sub
ficomps
outsb
inc
test
xchg
popa
ljmp
in
movsb
adc
in
iret
adc
sbb
and
jo
mov
xchg
ljmp
adc
mov
lods
js
dec
aam
mov
push
add
xlat
movsb
scas
mov
and
inc
pop
add
repnz
mov
inc
inc
and
shr
xlat
sbb
fnstsw
les
mov
mov
lcall
test
addl
xor
pop
sbbb
xor
daa
movsb
jmp
rcll
jge
jmp
cltd
and
mov
dec
and
adc
dec
inc
add
xchg
mov
roll
add
cmp
je
mov
pop
inc
je
mov
push
sbb
mov
add
pop
clc
test
sbb
pop
in
mov
xlat
sti
mov
cmp
push
mov
mov
inc
fcoms
subb
nop
sbb
xor
or
adc
mov
test
inc
repz
or
adc
mov
sbb
fcoml
dec
test
mov
jbe
add
or
pushl
or
or
rorl
push
jb
jnp
dec
mov
mov
in
push
in
inc
dec
dec
pop
es
jmp
hlt
add
cmp
subb
icebp
push
std
cmpsb
movl
jns
xchg
mov
inc
sub
scas
xchg
decl
dec
gs
mov
push
lret
inc
mov
push
orl
rol
insl
out
popf
xlat
push
cld
push
adcb
mov
fisubrs
inc
cmp
nop
popa
pop
insl
jae
adc
push
dec
mov
fbld
mov
xchg
dec
test
les
imul
mov
stos
icebp
push
ds
pop
sub
xchg
cmp
mov
fdivrp
jns
popa
mov
push
inc
push
repnz
std
dec
sbb
adc
orl
aam
xchg
imul
cmc
loop
fnsave
scas
mov
dec
std
cmp
cmpsb
daa
and
sub
mov
shll
imul
sub
jge
jmp
in
shr
sub
movsb
in
dec
sbb
pop
loopne
fsubs
xor
cld
sub
jne
mov
xchg
cltd
rcrb
fdivl
lret
sarb
loop
pop
sbb
cli
les
push
and
push
xchg
aaa
lret
aas
shl
fistpl
and
insb
lcall
jge
sbb
add
or
push
sub
add
jge
lds
sub
leave
in
sahf
gs
int
cltd
sub
jl
ljmp
addr16
adc
mov
ret
outsb
mov
sub
cs
test
mov
adc
cmc
jg
popa
inc
xchg
xchg
repnz
outsb
sub
pop
adc
mov
mov
aad
icebp
cmp
sub
decb
jnp
xorl
mov
stc
insl
ficompl
mov
and
stc
negl
sbb
into
mov
adc
stos
je
fdivrl
or
icebp
and
xorl
mov
in
lcall
arpl
and
icebp
adc
out
xor
aad
cmp
cwtl
push
or
insb
add
out
push
pop
push
cmp
aaa
jae
cmpb
xchg
mov
popf
std
sbb
mov
xlat
mov
lods
xchg
lock
and
jmp
rcll
and
fidivl
push
aas
test
push
add
dec
adc
inc
pop
jo
push
in
jo
jl
or
mov
cmp
mov
addr16
in
fcomip
or
fisubs
dec
or
sbb
jns
call
pop
cmp
je
sbb
test
loope
xchg
mov
mov
paddsw
mov
and
imul
insl
mov
mov
or
repnz
test
out
mov
cld
scas
ds
jge
xchg
int
sbb
inc
outsb
insl
adc
lahf
notl
or
divl
cmp
lods
mov
cli
fisttpll
test
dec
mov
xor
mov
jo
push
out
mov
xor
inc
aas
push
lahf
push
jmp
mov
sti
jmp
inc
iret
call
clc
stos
fwait
inc
adc
in
xchg
jg
imul
xor
std
cmc
cmp
mov
and
fidivs
pop
cmpsb
loope
mov
and
and
test
lret
pop
lcall
es
cmc
and
mov
sub
lcall
test
jno
pop
call
hlt
or
test
xchg
shrd
or
and
in
mov
loopne
and
gs
pop
out
adc
or
ds
dec
cmp
iret
dec
xlat
arpl
cs
cmp
loopne
push
push
adc
inc
mov
xchg
jmp
jge
pop
adc
push
out
fildl
dec
pop
or
mov
in
cli
sub
faddl
in
pop
int
mov
mov
xor
fs
inc
pop
in
loope
out
and
decl
lcall
mov
jecxz
mov
aaa
push
out
loope
adc
mov
mov
inc
leave
sahf
or
cmp
lods
or
iret
mov
mov
cli
cli
mov
cmp
pop
lcall
xchg
pop
or
lcall
and
xor
push
idivb
dec
xlat
cmc
fdivrs
ds
imul
push
mov
mov
cltd
pop
xchg
xlat
push
pop
xor
sub
pop
rclb
xor
movl
and
loope
pusha
mov
movsb
jnp
ds
sbb
mov
negb
sti
fstpl
mov
test
int
or
jne
xor
add
inc
outsl
jbe
jae
movsb
jne
or
add
jg
icebp
in
dec
jecxz
adc
test
sbb
daa
stc
lret
divb
adc
iret
xchg
aas
sbb
dec
in
cltd
cmpsl
mov
cmp
fisubrl
lcall
jb
adc
in
cmp
xchg
xor
outsb
dec
push
jl
loope
inc
push
or
fdivrl
sub
aad
sti
js
lret
inc
mov
out
push
popf
sub
lods
inc
enter
jle
mov
icebp
dec
jbe
fmuls
lret
or
repnz
movsl
out
mov
sbb
outsl
or
jno
lret
lods
rcrl
pop
cli
mov
jge
fisttps
jg
cmpsl
mov
cli
stc
pushl
jne
jmp
fisttpl
add
xorb
test
lock
push
out
push
mov
adc
mov
les
mov
popf
sbb
shll
mov
aaa
out
xchg
cmc
ret
cmpsl
stc
fsubs
dec
rcll
movsl
lahf
xchg
mov
sar
repz
cltd
jns
inc
movsl
lods
pop
fbstp
clc
bndstx
dec
ljmp
test
jae
daa
mov
fcomip
adcl
adc
leave
xchg
mov
push
push
mov
adc
bound
mov
adc
and
ds
cmp
sbb
xlat
xor
fnstenv
jnp
mov
stos
mov
cltd
loop
or
mov
sahf
push
cmp
loope
add
aas
mov
inc
imul
dec
pop
xchg
cmp
fiadds
jp
fcoml
mov
ljmp
xchg
stc
lret
sbb
cmp
dec
rolb
inc
popa
inc
in
dec
push
icebp
movsl
insb
hlt
push
outsb
xchg
mov
mov
jno
ds
xor
or
pop
mov
dec
jp
inc
add
or
pop
xlat
jmp
repz
cmp
bound
scas
cmp
lret
ret
inc
pop
cmp
lea
insb
test
mov
inc
in
in
std
mov
jl
add
int3
inc
popf
jmp
iret
push
xchg
cmpsb
insb
push
lret
jge
loope
and
xchg
subl
jo
inc
pop
bound
mov
adc
shll
fsubrl
cmpsb
paddb
movsl
mov
and
mov
inc
idivl
fldenv
popa
mov
mov
xor
add
sbb
mov
jns
flds
ja
sub
test
add
cmp
fsubl
aam
dec
sbbl
xchg
mov
xchg
jg
dec
add
rorb
aas
jno
dec
movsb
jg
fwait
push
cmp
push
rorl
sbb
scas
push
inc
lret
leave
shlb
fs
sti
je
inc
hlt
lea
jp
shlb
push
aad
lea
inc
mov
add
insl
sub
lds
lods
pop
add
add
fldcw
mov
aas
repnz
inc
and
jle
adc
xchg
pop
xchg
push
mov
shlb
adcb
cmpsl
cmpl
xor
nop
test
fcoml
adc
pop
jmp
pop
xor
fimull
jo
jnp
sub
mov
test
and
mov
or
mov
adcl
xchg
xchg
dec
add
adc
js
mov
adc
cmp
fcoml
pusha
loopne
repnz
and
mov
add
loopne
adc
mov
fadd
cwtl
mov
mov
stos
xchg
sahf
shll
adc
jb
aad
adc
hlt
xchg
das
filds
sub
sbb
adc
mov
call
mov
push
aad
pop
jge
adc
sbb
xchg
adc
mov
imul
sub
and
lds
aad
jge
cltd
and
in
test
lcall
dec
pop
subl
push
dec
pusha
adc
sbb
and
loop
add
mov
fwait
shrb
frstor
lahf
rorl
mov
or
xchg
or
mov
pop
xchg
dec
push
shl
dec
push
jmp
cmp
mov
int
inc
fwait
add
jge
mov
add
or
mov
cmp
test
shlb
cmc
dec
adc
mov
cmp
lods
lcall
lretw
mov
jmp
mov
enter
in
adc
fsubrl
inc
repz
push
adc
sahf
push
mov
push
mov
sarb
std
repnz
lret
or
add
jno
stos
dec
pop
cmp
mov
jge
mov
mov
in
cmp
outsb
xchg
jl
push
fimuls
mov
xchg
sti
push
scas
cld
imul
mov
pop
xor
xchg
sub
add
adc
push
out
or
insl
imul
push
push
mov
iret
insb
sbb
xor
leave
xchg
add
dec
push
iret
sub
xor
aas
mov
sub
inc
rcl
loope
push
jp
in
lcall
xchg
icebp
or
or
sub
ds
popa
mov
lahf
lret
sub
xchg
arpl
xchg
hlt
xchg
pop
fists
adc
dec
inc
std
lea
inc
loopne
aaa
aaa
in
inc
xor
test
dec
push
test
mov
add
lret
dec
adc
repnz
cmp
ret
mov
sub
mov
divl
dec
pop
mov
daa
cmpsw
inc
and
hlt
std
shrb
je
and
ficoms
nop
stos
movsb
not
sbb
cmp
add
jnp
push
lcall
std
cmp
mov
sbb
dec
adc
imul
cmpsb
insl
mov
orb
lret
shll
mov
jl
aad
inc
inc
inc
xrelease
inc
jl
popa
cltd
movsb
and
sub
movsb
pop
loopne
cld
sahf
mov
dec
and
clc
xchg
mov
mov
fisttpll
cmp
push
cmp
into
lods
pop
out
add
int3
orb
jecxz
cmpsl
inc
and
decb
fsubrl
xchg
push
dec
imul
pop
repz
mov
sbb
xchg
addr16
xor
adc
jns
inc
jge
cmpsl
fmull
lcall
and
sub
mov
and
mov
cmp
mov
popa
shlb
xchg
sbb
mov
iret
cli
xor
js
sti
addr16
pop
add
sbb
test
loopne
shlw
mov
mov
pop
and
arpl
inc
std
dec
xchg
aam
cmc
pop
out
cmp
cmc
sbb
int
adc
sub
jg
sub
mov
pop
scas
ret
mov
sub
add
lods
dec
mov
daa
movb
inc
sub
fcoms
hlt
leave
cmp
mov
sub
xchg
nop
mov
in
add
xor
aam
mov
in
and
gs
icebp
mov
mov
lea
shr
std
xor
push
addb
lods
xchg
xor
xor
push
pop
xor
pushf
test
mov
mov
pop
les
pop
and
add
jae
fsts
dec
jecxz
pushf
test
fidivrl
xor
mov
xor
sub
xchg
and
sub
repz
es
imul
and
or
enter
shrb
test
or
xchg
iret
add
jecxz
fwait
std
sbb
roll
inc
dec
popf
inc
jmp
imul
adc
rol
sbb
jl
adc
mov
insb
xor
movsb
jmp
ds
or
repz
repz
xchg
popa
rorl
cmpsb
filds
jne
aaa
inc
fs
ds
sbb
addr16
ret
addr16
jl
push
pop
push
loop
adc
pop
sub
jecxz
and
lcall
dec
pop
jg
mov
iret
pop
jb
push
xchg
loopne
or
xchg
inc
sub
js
cld
mov
hlt
pop
test
mov
cmp
add
sbbl
jmp
mov
popa
shrb
mov
sbb
ret
sbb
idivl
mov
sti
imul
inc
sbb
adc
shrb
add
and
pushf
cmp
repnz
test
xchg
mov
inc
inc
push
sahf
stos
mov
aam
adc
cmp
jmp
ss
add
sahf
pop
add
ja
cli
push
cmp
pop
mov
dec
pop
test
or
mov
inc
push
xchg
sub
push
rolb
add
notb
dec
dec
stos
sahf
fwait
jp
out
push
mov
xchg
sti
int3
daa
in
imul
mov
add
xor
aas
push
sarb
mov
pop
ret
pop
pop
xchg
cmp
push
leave
mov
mov
out
mov
jle
push
inc
mov
test
fstps
inc
add
push
mov
jne
loope
sti
inc
lea
mov
push
adc
add
aaa
scas
pushf
and
and
sbb
addr16
xor
xchg
ret
scas
inc
mov
adc
fistpl
test
push
adcl
ficompl
jne
stos
xchg
mov
jb
outsb
xchg
fcmovnu
mov
push
ljmp
je
sub
mov
jns
xchg
push
mov
popa
sub
lcall
sbb
xchg
jb
sbb
mov
pop
sbb
or
add
mov
neg
stos
mov
inc
addr16
inc
push
or
mov
mov
hlt
mov
mov
or
sbb
stos
xchg
inc
test
pop
aam
and
mov
xchg
push
xor
movsb
stos
lock
and
pop
fcoms
inc
popa
jbe
mov
gs
punpcklwd
pop
aas
cmp
iret
or
add
addl
push
bound
les
jae
sbb
fisttps
xor
fists
ds
sub
movl
mov
jbe
adc
xchg
push
sub
mov
into
mov
cld
adc
rcrb
and
dec
cmp
jo
jne
inc
sarb
adc
and
lcall
and
sub
or
stos
scas
xchg
sub
aas
mov
push
mov
jg
movsl
popf
push
rclb
add
adc
sarl
test
lock
pause
out
sbb
adc
lcall
pop
cmpsl
sti
pop
push
cmpsb
imul
add
push
jae
fmull
xchg
push
cmp
ljmp
mov
in
stos
shrl
sbb
jge,pt
stos
mov
cld
push
cmpsl
adc
jbe
arpl
test
imulb
mov
ja
inc
filds
mov
push
arpl
inc
fwait
les
xchg
mov
cli
pushf
pop
nop
sbb
mov
stos
movsl
shl
jl
cmp
xor
hlt
mov
inc
notb
ret
xor
cmp
loope
mov
sbb
mov
out
xor
inc
aaa
enter
es
push
dec
mov
pop
jno
pop
add
gs
std
divb
mov
push
fdivrs
js
dec
and
fsubr
in
ds
mov
sbb
or
xchg
mov
lcall
adcl
push
repz
sahf
sub
nop
xorb
inc
jp
mov
iret
ficomps
fnstcw
fisubrs
sub
adc
or
sbb
fsubr
adc
push
inc
mov
movsl
xchg
sub
mov
aam
pop
scas
or
js
xor
mov
jle
mov
and
pop
xchg
insb
fwait
mov
push
adc
js
stos
ror
test
ficompl
pusha
cmpsb
adc
sub
jne
mov
fisttpl
mov
stos
or
imul
push
in
aad
flds
dec
adc
xlat
rcl
push
ret
popf
mov
aas
sti
inc
incb
add
aad
call
fs
adc
in
cld
cld
into
rclb
stos
sub
pop
hlt
xlat
into
ret
pop
pop
je
cmpsl
aas
jp
pop
std
jge
je
jb
mov
adc
add
cwtl
popa
mov
xchg
lods
sbb
and
push
loop
movsb
pop
push
shll
lock
out
xor
push
pop
jno
nop
js
inc
jns
push
std
and
lock
lret
loopne
enter
xchg
xchg
sub
push
pop
sbb
xor
xchg
mov
mov
cltd
ficomps
xchg
pop
mov
outsb
dec
imul
test
inc
push
test
xchg
jbe
jmp
js
pop
adc
jne
sbb
movsl
sub
outsl
inc
inc
idivb
xor
cli
xchg
das
push
aad
lods
das
outsb
adc
dec
add
jne
mov
fists
jecxz
sbb
mov
mov
cmc
adc
ss
mov
sti
mov
call
sbb
cli
ss
pop
jb
iret
cwtl
and
popf
mov
jp
lret
pushf
orb
adc
and
adc
inc
fwait
stc
fldt
insb
xor
xchg
xchg
push
jg
mov
rcrb
out
fcomps
addr16
add
cld
ss
pushf
pop
test
out
out
sub
nop
stos
dec
cmp
jno
pop
jmp
cmp
cmp
mov
mov
rolb
mov
repz
subl
mov
cmp
xor
nop
mov
loope
ss
imull
dec
cmp
add
rcll
bound
out
lods
cld
loope
add
aad
sbb
adc
aaa
aad
push
data16
sbb
mov
jmp
fiaddl
sbb
fldenv
push
rcr
mov
aad
into
and
es
aad
and
inc
sub
shrb
rorl
push
adc
and
adc
push
lea
je
out
rolb
bound
add
dec
push
sbb
loop
inc
pop
into
adc
pop
mov
inc
in
data16
sub
and
push
pop
mov
add
int
lock
rorb
rclb
pop
clc
les
mov
pop
mov
xchg
mov
mov
test
mov
cmp
mov
pop
bound
xchg
xchg
enter
cmpsl
fimull
lret
xchg
xchg
mov
pop
orl
fistpll
mov
or
mov
hlt
mov
scas
dec
mov
leave
lock
mov
loop
sub
les
xchg
das
and
in
cmp
adc
out
adc
leave
mov
xor
and
mov
mov
pop
loopne,pt
aas
fsubrp
cmp
cmc
in
divl
inc
pop
xor
cmp
dec
call
adc
cli
rclb
test
nop
lret
adc
sbb
cmpsl
cmp
fidivl
in
lahf
je
and
mov
mov
cwtl
das
int3
jmp
popf
fwait
and
incl
ljmp
test
push
jb
movsb
sti
dec
shrl
movsb
inc
fcmovu
pop
mov
inc
mov
sbb
insl
cwtl
cli
repz
add
out
xchg
add
mov
and
insl
pop
lds
stos
je
jmp
test
outsl
call
mul
in
and
pop
cmp
cmovp
scas
les
mov
out
inc
insl
stos
scas
inc
or
pop
or
jb
xchg
call
inc
dec
or
fidivrs
mov
jbe
loop
dec
scas
jne
mov
push
cmp
dec
ret
ja
xchg
xor
call
loop
das
sti
xor
clc
cmp
push
cmc
add
push
aam
mov
popa
pop
jns
dec
cmp
mov
cmp
insb
lock
cmp
mov
or
pop
push
fadds
mov
sbb
in
imul
bound
sarb
jnp
xor
xlat
mov
lock
fsubrs
xor
add
std
sbb
nop
mov
push
in
mov
mov
push
add
cmp
jmp
push
dec
cwtl
jmp
cmp
add
mov
std
push
mov
das
loopne
jae
or
test
movsl
adc
xor
mov
mov
dec
dec
dec
push
jmp
add
add
cld
in
push
incb
ss
cs
pop
and
stos
into
or
test
mov
imul
scas
bound
insb
xchg
popa
orl
push
sbb
shll
inc
xchg
xlat
adc
aaa
mov
cmp
loopne
test
xor
push
or
adc
jae
push
cmp
mov
mov
cmpsl
imul
mov
sub
or
pusha
adc
push
lods
stos
lret
clc
mov
push
sbb
sub
cmc
aad
push
loopne
jnp
lret
test
or
add
mov
insl
push
cmp
shrb
mov
es
jp
pusha
xor
xchg
test
mov
das
mov
aas
push
or
js
std
stc
dec
dec
cli
fstps
jnp
test
mov
iret
inc
xor
rcrl
jg
push
lock
data16
addr16
xor
pop
or
jp
push
sti
and
es
ds
lods
push
and
lods
sahf
mov
cmpsl
sbb
jge
es
inc
xchg
rcr
sarl
pop
call
and
xchg
lock
cs
jbe
cmpsb
and
and
push
pop
mov
dec
add
rolb
sbb
jl
stos
mov
loop
mov
push
add
xor
icebp
mov
hlt
cmp
cmc
adc
test
insb
mov
fisttpll
idivl
sub
outsb
sahf
stos
xor
dec
stos
pop
xor
cmpsb
sbb
xor
or
jg
lods
imul
in
aas
lcall
mov
divl
stos
aam
inc
pop
pop
add
test
and
test
push
gs
jmp
dec
sbb
loope
mov
nop
adcl
inc
sti
push
std
and
arpl
and
das
cmpsl
dec
pop
dec
mov
icebp
push
enter
lcall
jmp
fistpll
sub
mov
sbb
sub
sbb
lret
jo
xchg
pop
jne
les
iret
mov
jne
mov
mov
outsl
jns
aas
or
outsb
pop
rorl
cmp
cmpsb
jbe
push
dec
movsb
or
jp
mov
stc
and
push
cmp
mov
dec
push
and
mov
mov
test
and
aas
and
popf
inc
adc
cmp
add
cltd
neg
and
xchg
stos
cmc
mov
add
ds
dec
mov
cmp
sbb
or
out
push
xchg
jbe
sub
dec
sarl
dec
aam
out
xchg
incb
pop
sbb
lret
sbb
cmp
mov
hlt
cmpsl
or
sub
cmp
inc
dec
lcall
cld
pop
mov
mov
lcall
adc
out
orb
das
mov
push
and
pop
in
loop
fs
adc
jge
inc
jbe
lock
loop
cmp
or
or
shlb
cwtl
jecxz
in
test
ss
fadds
in
mov
adc
mov
test
repz
inc
mov
and
shlb
cmp
xor
test
enter
outsl
push
negl
fisubl
fisubl
outsb
sub
movsl
lcall
shl
test
xchg
fnstcw
lret
inc
pop
adc
mov
cmp
jae
cmp
xor
mov
mov
imul
adc
jmp
mov
cmp
pop
pop
pusha
cld
mov
sub
notb
push
xor
test
movsb
cmpsl
scas
int3
mov
inc
xor
inc
lcall
test
adc
inc
jnp
pop
jo
mov
popa
dec
push
lds
pop
cmc
lock
jge
fcmovnu
sti
push
out
adc
int
mov
mov
mov
jbe
inc
jnp
out
lds
cmpsb
pusha
push
lods
repz
add
adc
xchg
lods
mov
dec
sbb
cmp
xchg
or
inc
sbb
push
mov
movsb
mov
sub
ret
mov
and
divl
leave
test
xchg
inc
xor
or
lahf
ja
cmc
mov
mov
inc
jb
xlat
test
xchg
cmp
mov
stos
pop
jge
xchg
xchg
gs
jmp
and
in
out
test
bound
cld
dec
in
stos
adc
inc
push
add
hlt
dec
ljmp
cmpsl
pop
addl
rclb
cmp
arpl
loopne
adc
and
insb
test
inc
add
pop
mov
mov
popl
push
andl
add
push
sbb
add
loop
lcall
pop
mov
xchg
jge
ficoms
pop
stos
int3
dec
or
ret
loope
and
rcll
mull
movsb
add
mov
fidivl
push
test
inc
xchg
lods
out
lea
xchg
mov
xor
inc
lods
pop
mov
xor
xor
jae
and
inc
stc
xchg
sbb
addb
psrad
mov
repz
js
push
jmp
cmp
in
or
xchg
mov
mov
imul
pop
xor
insl
push
fnstenv
out
adc
out
sub
jno
mov
mov
aas
out
add
inc
shlb
ret
lods
sub
fs
gs
mov
cmp
or
jg
xchg
fdivrs
jne
jecxz
loopne
clc
jb
sbb
inc
add
sahf
xor
jb
sti
fisubs
mov
xor
cld
inc
push
xchg
and
sbb
frstor
insb
inc
fmulp
inc
mov
or
out
mov
xchg
arpl
mov
out
loop
repz
sub
xchg
ljmp
cmpl
jp
sbb
jnp
loope
fsub
nop
jno
daa
push
ljmp
icebp
pop
xor
cltd
notl
loopne
hlt
fidivs
sbbl
fs
mov
popa
in
sub
fucomi
sbb
adc
adc
in
je
xchg
out
sub
in
mov
mov
adc
mov
adc
sub
sub
mov
and
lret
nop
lds
jecxz
hlt
jae
call
cmp
sbb
pop
test
push
hlt
bound
gs
out
nop
arpl
jo
xor
push
cmp
cmp
pop
mov
inc
lcall
cmp
lahf
dec
pop
int3
dec
mov
xlat
mov
cmc
sar
test
imul
dec
loop
mov
lret
andl
jge
out
cmpsb
pushf
les
xor
popl
ss
roll
imul
xchg
sbb
sahf
jno
je
repnz
jecxz
out
in
in
movsb
call
mov
sbb
fistpl
test
dec
add
pop
add
add
paddw
popf
pop
repnz
push
mov
lret
mov
cmp
lret
pushf
jo
xchg
xor
lods
and
movsl
ljmp
fcmovbe
in
adc
adcb
cmpsb
subl
pushl
imul
pop
xchg
repz
pop
and
cmpsl
mov
sbb
call
movsl
jp
out
ret
test
add
imul
xchg
jmp
clc
push
xchg
call
int
call
je
aas
sub
in
xor
push
jno
mul
sahf
pushf
mov
ret
cmp
sub
sti
mov
popa
test
xchg
jg
dec
mov
or
mov
jg
sbb
cmp
pushf
xchg
mov
push
push
adc
fnstcw
xchg
lods
lcall
jmp
push
ret
mov
xchg
dec
jb
stos
gs
cld
mov
aas
xchg
das
mov
add
pop
repz
xorb
fwait
mov
cli
pop
ljmp
dec
out
or
inc
into
xchg
daa
or
sahf
imul
test
or
mov
sbb
xchg
and
xorl
pop
lock
add
fdivs
mov
inc
imul
hlt
test
xchg
push
inc
pop
mov
jg
pop
or
pop
aam
popf
sbb
rorl
mov
insl
adc
pop
jge,pt
in
adc
mov
xor
lods
daa
mov
add
mov
mov
das
stos
fcoms
pop
jns
fisubl
aas
sbb
xchg
xchg
std
mulps
pop
stos
daa
xor
movsl
push
add
xchg
push
and
ret
pop
divb
xor
jmp
cmp
pop
mov
push
pop
test
pop
xchg
popf
inc
rcr
jl
imul
mov
add
inc
pushf
cmp
mov
cwtl
in
je
jbe
pop
mov
pop
push
xchg
sbb
shrl
xor
mov
fistpl
add
movsl
sbb
aas
mov
or
pop
mov
cmc
lret
push
ljmp
sub
mov
cwtl
mov
cmp
dec
mulb
inc
js
mov
sbb
sahf
out
es
mov
xchg
sbb
negb
cltd
add
adc
dec
es
jg
jle
jnp
inc
adc
push
jbe
push
scas
cmpsl
adc
pop
loop
push
shl
test
mov
dec
into
pusha
xor
repz
adc
push
adc
cmp
dec
xchg
sub
mov
test
adc
addr16
and
jmp
hlt
pop
loop
in
in
cmp
into
pusha
inc
ja
adc
ja
test
sbb
int3
jp
mov
lahf
pop
dec
pop
cltd
aad
xchg
stc
or
bound
push
push
lock
jns
jp
cmp
lods
sub
jle
mov
lahf
or
daa
je
mov
in
iret
out
adc
or
and
push
movsl
popa
push
out
insl
nop
lods
xlat
std
ljmp
ficoml
sub
jmp
inc
cmp
xor
pop
stos
mov
mov
cmp
add
sbb
rcll
adc
lods
cmp
mov
inc
push
adc
sub
jl
mov
rolb
sbb
adc
cmpsl
aam
ljmp
add
mov
jo
les
sbb
mov
mov
xor
push
rcrb
mov
insb
lock
jp
sub
mov
scas
lcall
adc
mov
push
pop
mov
adc
sbb
sahf
mull
fdivr
cmp
dec
out
js
cltd
ja
pcmpeqb
lret
xlat
xor
xor
cmc
jno
daa
imul
lahf
jnp
jp
mov
mov
dec
movsl
sub
rolb
lea
jo
sbb
hlt
push
out
mov
push
mov
in
mov
out
push
mov
in
mov
movsb
inc
inc
rolb
outsb
mov
test
movsl
loope
mov
aad
fsub
movsl
xchg
inc
insb
push
popa
je
pop
or
orb
nop
adc
cmp
movsb
and
inc
hlt
xchg
or
mov
pop
out
ret
ds
out
cmpsb
repnz
arpl
outsl
mov
push
mov
cli
loope
mov
xchg
fstl
pop
sbb
adc
addr16
das
imull
or
jmp
flds
out
pop
leave
cli
lret
sahf
sub
lcall
mov
push
aaa
jle
xlat
and
mov
xchg
xor
mov
xor
inc
mov
add
imul
pop
xor
lock
mov
jmp
jno
ret
pop
xchg
jle
sub
lcall
xor
in
aas
nop
rcll
rclb
cwtl
adc
or
test
lret
mov
dec
in
cs
fwait
jbe
pop
je
or
pop
lretw
loopne
jp
mov
stc
mov
scas
pop
pop
xor
xchg
call
xchg
sbb
or
xor
cmpsb
mov
bound
and
jge
jmp
sti
or
hlt
inc
push
mov
lock
bound
test
andb
aas
cmp
test
test
add
psllw
push
pop
xlat
les
frstor
cmc
ss
sub
cmp
mov
or
jle
pop
ret
js
pop
stos
aas
cmp
pusha
mov
xchg
fistpll
push
fsts
cmova
mov
insl
ja
stc
jl
out
aas
mov
add
mov
ss
gs
sbb
cmpsb
add
test
xlat
mov
insb
imul
repnz
and
jl
data16
aaa
cmp
movsl
call
pop
enter
sub
xor
or
xchg
fisttpll
pop
arpl
ficoms
xor
out
insl
adc
inc
mov
popa
xor
adc
mov
stos
cmp
jp
stos
dec
mov
imul
and
inc
xor
popf
sar
ja
push
stos
xchg
daa
rcrb
pop
cs
mov
sarl
add
movsl
push
sbb
scas
xor
scas
adc
fmul
loop
stos
xchg
jg
nop
mov
jnp
dec
add
pop
out
jne
loop
cmc
inc
sbb
inc
and
xchg
or
xor
arpl
push
aaa
scas
lods
inc
jecxz
sub
sar
out
cltd
arpl
in
cs
gs
xor
dec
mov
imul
mov
or
sbb
mov
pop
jmp
pop
gs
adc
hlt
das
lock
xchg
repz
repnz
test
daa
daa
test
cmp
dec
pop
sub
inc
mov
mov
jb
test
rcrl
add
jmp
mov
mov
and
cmpsb
addl
sti
xchg
pop
ret
adc
call
jmp
insb
add
mov
scas
or
adc
jae
cmpsb
dec
xchg
sahf
inc
sub
fimuls
dec
push
popf
psubsw
pusha
sahf
pop
repz
cmpsb
stc
mov
mov
fnsave
sbb
adc
xor
mov
xchg
sti
and
repnz
mov
add
lods
inc
out
dec
push
dec
dec
cmp
push
mov
bound
and
dec
jnp
push
add
adc
adc
test
fidivs
and
jp
mov
mov
pop
adcb
inc
loopne
mov
shrl
adc
mov
pop
jb
mov
adc
arpl
cmp
cmp
out
cld
ja
loopne
lcall
shrb
add
popf
int3
les
and
xor
es
or
mov
inc
dec
push
aaa
pop
dec
repnz
lods
sti
fdivp
jae
sub
and
mov
inc
jns
fld
mov
pusha
jo
mov
inc
mov
fcmovu
les
rcrl
push
xor
in
pop
stos
push
and
adc
out
sbb
pushf
idivb
addps
add
stos
adc
push
or
out
fisubrl
pop
les
hlt
repnz
lcall
or
fs
enter
cmpsl
add
shll
jge
dec
das
mov
add
test
js
or
cmp
pop
mov
mov
xchg
negl
es
adc
mov
pop
or
daa
outsl
inc
pop
pusha
adc
push
sbb
popa
mov
test
mov
pop
sahf
jno
mov
leave
jno
mov
push
adc
or
adc
adc
add
cmpsb
movl
push
push
add
roll
mov
ret
in
mov
rcrl
push
dec
add
push
aas
ficoml
cwtl
inc
inc
sub
loop
xchg
insb
in
jo
mov
insb
inc
lock
add
fsts
cmp
shrb
sbb
mov
xor
cmp
pop
xchg
lretw
scas
std
mov
lds
popa
movsl
loopne
mov
push
addr16
adc
push
fnstcw
fnstcw
jg
leave
xchg
je
in
jo
cmp
sub
xchg
fistpl
xchg
fwait
pusha
jo
in
incb
pop
xor
sub
hlt
mov
push
and
jnp
and
sbb
mov
sub
lea
mov
push
xlat
cmp
mov
xor
mov
mov
sub
arpl
lret
int3
mov
push
add
pushf
adc
sbb
mov
adc
jne
xchg
pop
fwait
out
adc
int3
mov
sti
sub
lock
dec
loopne
xchg
cmpsb
pop
jb
adc
cs
xchg
movsl
pop
dec
sub
out
add
nop
push
dec
adc
lret
fcomps
fwait
sbb
sub
inc
cmp
mov
sbb
pop
inc
push
ja
mov
loopne
jecxz
pusha
scas
mov
aam
hlt
xchg
push
roll
jle
fistl
iret
enter
mov
daa
push
pop
xor
clc
jge
test
push
out
lods
js
lahf
mov
fstl
aam
xchg
adc
inc
add
ret
mov
arpl
jecxz
les
pop
test
pop
cmp
inc
aas
xor
xlat
movsl
stos
xchg
into
inc
sbb
cli
cld
sbb
ljmp
ja
daa
sub
pop
cmpsb
mov
adc
lahf
les
dec
jns
lret
in
and
shrl
ficomps
mov
lcall
fildl
hlt
dec
or
fildll
push
cltd
cmp
sbb
popa
xorb
cmp
in
test
lods
adc
daa
push
out
loopne
shrl
lcall
leave
cmp
jb
xor
cli
adcl
jo
gs
bnd
jnp
pushf
mov
test
mov
cmp
or
cmp
xchg
les
aaa
xor
stos
mov
jmp
int3
jns
xchg
dec
jmp
mov
and
inc
movsl
mov
push
rcrb
ret
icebp
fisttpl
jne
inc
jp
dec
xchg
pushf
jb
and
or
call
outsb
sub
cld
inc
inc
daa
ret
jnp
cwtl
sbb
mov
cmp
iret
fmull
repz
outsl
xchg
aad
push
dec
sbb
mov
dec
cmp
cmp
push
out
add
xchg
mov
mov
xchg
mov
dec
aam
lock
mov
pop
in
xor
bound
add
test
inc
jbe
ljmp
mov
sbb
out
mov
roll
mov
jmp
inc
loopne
test
sub
ljmp
cmp
das
or
mov
xchg
shll
fwait
sbb
clc
push
xlat
cltd
outsb
movsb
jnp
pop
mov
repnz
xchg
adc
xor
xchg
add
popf
roll
mov
mov
add
sub
daa
jns
push
subb
jb
sbb
mov
out
mov
pop
aas
pushf
mov
cmp
orb
ss
push
adc
push
loop
mov
iret
cld
cmpsb
cltd
adc
sbb
jb
pop
or
and
or
mov
das
std
pop
mov
andl
jp
push
mov
sub
js
hlt
mov
mov
mov
cld
out
mov
negb
mov
stos
mov
xor
mov
sbb
lcall
or
cmp
mov
cltd
shlb
and
push
test
cwtl
mov
loop
sbbl
into
xchg
jge
outsb
fsts
imul
dec
cmp
insb
mov
mov
cs
push
mov
xchg
jecxz
sub
lea
and
mov
jo
inc
mov
pop
mov
aam
xor
sbb
mov
mov
rorb
or
call
xor
sbb
mov
loop
data16
push
inc
enter
bound
lret
lcall
xorb
popf
mov
dec
adc
mov
js
mov
das
shll
sub
inc
jne
cmp
hlt
dec
cmp
shlb
scas
bound
fidivs
ljmp
daa
into
adc
sti
hlt
mov
aad
jo
jg
xchg
mov
or
sarl
mov
daa
cmc
cld
fildll
xlat
loop
stos
push
rol
mov
push
aad
and
mov
ror
inc
mov
int
mov
in
dec
andb
int
inc
mov
daa
andl
jns
bound
pop
mov
in
mov
addr16
adc
xor
fnstcw
shl
adc
jle
pop
in
inc
jg
imul
int
lret
mov
sbb
aam
mov
out
mov
call
dec
push
mov
test
xchg
cmp
xchg
loop
ja
dec
js
or
xor
jmp
pop
sub
cmp
lret
mov
adc
push
add
aad
xchg
inc
mov
push
inc
fndisi(8087
adc
jl
mov
jo
inc
jo
lock
push
insl
fsts
fs
mov
xor
mov
dec
push
sbb
mov
mov
jno
adc
andl
xchg
mov
add
mov
popa
inc
shl
xchg
test
sbb
ja
jg
insb
out
inc
aam
ret
dec
xchg
add
push
jae
lret
lret
sub
pop
outsb
gs
cmpsb
cmp
out
xchg
adcl
out
lcall
xor
ffree
cli
xor
das
aas
ret
mov
mov
jne
or
jg
and
and
and
and
fidivs
andb
add
mov
push
xor
mov
movsb
js
inc
xchg
mov
push
cmp
and
push
into
fildl
mov
hlt
push
cwtl
jp
out
dec
mov
pop
push
jno
sti
or
jge
cld
jne
sbb
mov
int
in
bound
adc
jecxz
push
les
inc
sbb
cmp
or
mov
or
or
clc
add
in
pop
pop
mov
mov
cmpsb
aas
pop
sub
pop
call
inc
push
push
inc
out
push
icebp
ljmp
insb
pop
jl
adc
loopne
aad
aam
lret
mov
mov
or
inc
addl
dec
cmc
pop
jecxz
sbb
fsubl
mov
sub
mov
sub
pop
lret
lds
ds
cmpsl
and
adc
inc
cmpsl
bound
popa
cld
mov
call
xchg
xor
testl
dec
push
hlt
movsb
cld
xchg
jl
cmpsl
add
das
mov
or
sbb
and
aam
or
insb
and
and
or
mov
jne
dec
rorb
xchg
lods
rclb
push
pop
das
mov
sbb
movsl
sub
jnp
ljmp
mov
add
arpl
inc
outsl
ret
dec
dec
xlat
dec
aas
xchg
push
nop
jno
xchg
jge
addr16
xchg
repz
dec
jp
icebp
int3
jns
pop
cmpsb
add
test
test
lret
loope
jnp
aas
bnd
idivl
pushf
or
add
push
mov
xor
lods
popf
push
fsubl
mov
mov
divl
jle
xchg
push
sbb
mov
shlb
test
pop
hlt
insl
mov
xchg
loopne
stos
outsl
test
dec
in
add
pop
sbb
cwtl
repz
std
andb
jecxz
add
mov
movsw
mull
jg
lds
loop
push
test
sarl
jno
mov
xlat
popa
call
xor
insl
adc
xor
push
sti
daa
iret
out
mov
negl
loopne
stos
xor
adc
cmp
out
test
data16
lret
sbb
stos
mov
out
jle
lods
or
stos
push
push
out
das
repz
pop
lods
aaa
out
les
or
test
clc
push
addl
add
cmpsb
cld
pushl
data16
push
stos
push
pmulhuw
outsb
andl
repnz
fstps
mov
in
jmp
mov
and
nop
sub
mov
or
jle
pop
das
jbe
int
jecxz
mov
icebp
adc
push
into
rcll
faddl
mov
mov
test
sbb
lret
test
push
in
pop
movsb
ss
pop
inc
enter
movsl
shrb
and
xchg
push
jecxz
ljmp
xchg
dec
jne,pn
adc
cmp
dec
lea
lods
shl
addr16
sar
ljmp
jmp
sub
in
inc
dec
mov
add
xchg
je
sti
sub
addl
and
sbb
imul
es
stc
xchg
lds
ret
pop
push
repnz
lds
dec
adc
jg
xor
ss
sub
rcrb
stc
jp
sbb
enter
mov
xor
pop
lods
dec
push
xchg
notb
cs
mov
adc
popf
lcall
ja
xchg
fcom
outsb
int
repnz
out
out
aad
mov
inc
fcoms
push
sbb
fwait
jecxz
xor
repnz
dec
cmp
xor
push
sub
mov
repnz
out
sbb
mov
leave
push
xchg
stos
push
leave
jle
ljmp
insl
das
sub
cmpsl
push
ss
jae
mov
mov
jle
jnp
test
faddl
mov
into
stos
aas
pop
outsl
decb
les
add
jns
cs
xor
mov
in
or
inc
out
and
or
or
cmp
jne
adcb
sub
stos
cmp
dec
mov
ret
fnsave
mov
js
push
sarl
std
test
push
jge
cmp
mov
mov
and
xor
jp
push
or
sbb
pop
mov
add
ror
fdivs
jecxz,pn
shlb
sahf
addr16
mov
insl
stc
ss
stc
inc
pop
sbb
ret
int3
push
sub
out
test
mov
push
push
mov
out
into
or
iret
pushf
lahf
inc
imul
outsb
adc
lock
ljmp
es
pop
negl
inc
sbb
bound
clc
add
inc
es
stc
cmpsl
imull
fmul
push
sahf
repnz
fbld
test
push
cmp
jl
jp
in
mov
aas
xchg
fwait
test
mov
or
sub
movsl
mov
mov
popa
das
gs
inc
and
lds
sbb
mov
fprem
cmp
mov
das
push
fcmovnbe
add
jbe
cmovnp
imul
fs
dec
fisttps
mov
or
push
and
ret
push
imul
sub
pop
mov
daa
fmull
mov
add
mov
and
add
hlt
ret
test
imul
inc
mov
and
call
ficoml
pop
dec
jnp
ss
out
popa
ds
insl
push
insb
sar
cli
sbb
or
iret
xchg
mov
jnp
in
xchg
xchg
movsl
jnp
icebp
and
mov
imul
mov
cld
ret
lahf
dec
jbe
std
pusha
sbb
push
mov
or
idivb
ds
xchg
mov
shr
xchg
gs
out
mov
add
es
popf
mov
loope
mov
mov
imull
popf
mov
rcr
pop
xchg
sub
mov
lds
fstpt
fsubl
je
test
jns
mov
shlb
imul
push
jecxz
int3
lahf
cmp
adc
cmp
mov
add
push
repz
sub
fdivs
sar
add
push
jmp
repz
pop
cld
sbb
ljmp
aad
xchg
pop
cli
cmp
out
and
and
mov
mov
aam
cvtdq2ps
mov
dec
add
das
mov
aad
inc
inc
int3
call
inc
lret
sub
bnd
xchg
in
addb
ficomps
cmp
xchg
int3
int3
mov
cmpsb
or
push
ljmp
test
mov
sub
test
or
fidivs
js
pushf
lcall
dec
daa
es
mov
mov
lahf
sbb
sbb
into
imul
in
stos
arpl
icebp
sahf
push
fldln2
rcr
sbb
fnsave
ljmp
jl
dec
dec
xor
push
jge
addr16
repz
adc
das
out
dec
and
jno
repz
call
bnd
gs
addl
adc
icebp
cli
jg
ja
fimull
adc
xchg
pop
mov
pop
add
movsb
lock
sbb
mov
mov
xchg
adc
fildll
dec
xchg
sbb
ss
mov
pop
mov
mov
add
enter
out
loope
sub
movsb
fistpll
je
xlat
fdivl
out
sub
test
loopne
xchg
cltd
std
mov
cmp
and
sbb
cmc
mov
repz
xchg
mov
shrb
aas
fs
data16
xchg
xor
ja
push
imul
cwtl
popl
cltd
mov
inc
pop
out
out
cmp
inc
mov
pop
fmull
rcrl
mov
mov
pop
icebp
cmp
sub
out
xchg
push
gs
mov
or
test
sbb
pop
cmp
popa
ret
pop
orb
lret
sbb
inc
pop
sbb
out
cmc
cmp
mov
sahf
add
jl
rorb
xchg
push
shll
outsb
lea
and
es
pop
inc
fidivs
fldenv
and
mov
push
pop
sahf
and
mov
cli
mov
and
inc
jle
repnz
mov
xlat
and
nop
mov
push
test
push
pop
sti
outsb
leave
pop
mulb
dec
bnd
fsave
mov
dec
inc
daa
dec
add
repz
cmp
lret
xlat
push
in
call
inc
je,pn
push
cmp
pop
mov
std
pop
sbb
xor
jecxz
movsb
pop
fistpll
add
mov
nop
and
sub
cmpsb
repnz
dec
iret
jle
sub
out
push
xchg
pop
lret
imul
sbb
mov
mov
orb
add
and
cmp
imul
in
mov
add
repnz
xor
iret
in
jae
mov
or
dec
jae
push
jp
leave
xchg
dec
push
scas
lea
xchg
shll
ljmp
cs
inc
sbb
orb
pop
push
mov
cmpsl
incb
sarl
or
into
shl
dec
in
pushf
sub
rcrl
pop
aam
sbb
inc
mov
push
xchg
cld
push
ja
jp
mov
popf
cmp
ljmp
ds
inc
and
mov
pop
jbe
hlt
call
cmp
sbb
inc
pop
adc
cmp
pop
movsl
les
leave
cli
dec
inc
or
mov
mov
mov
pop
push
aas
mov
mov
test
mov
mov
add
sbbb
jp
sti
pop
jmp
xor
pop
jge
xchg
xchg
or
mov
pop
jl
pop
push
pop
rcrl
dec
mov
dec
jg
xchg
pop
dec
mov
test
push
leave
gs
dec
mov
xchg
mov
pop
dec
pop
imul
movb
xor
scas
cmpb
and
insl
jo
mov
inc
xchg
das
mov
inc
repnz
and
adc
push
jne
xchg
adc
mov
jl
popf
rcrl
std
aad
out
xor
lods
pop
mov
ret
inc
ret
xchg
ljmp
mov
add
notl
aas
jle
int
dec
xchg
xchg
roll
dec
xor
xor
lea
push
dec
lahf
or
push
mov
ror
adc
jle
adc
cmp
dec
repnz
pop
and
adc
fsubs
inc
jmp
dec
dec
add
or
ret
lret
add
pop
jecxz
dec
and
pop
inc
xlat
sub
cmp
loope
stos
add
test
lods
scas
and
data16
cld
fiaddl
loopne
pop
mov
pusha
dec
jp
mov
dec
sbb
movsl
aam
push
cwtl
mov
lcall
add
cmc
xor
jbe
fdivr
outsl
imull
inc
fcmovbe
mov
movsb
or
adc
and
fadds
rcl
and
push
or
mov
cltd
test
mov
aad
pop
adc
cmp
pop
ret
dec
lock
stos
shl
lods
jle
add
dec
and
mov
dec
imul
push
mov
mov
mov
daa
gs
stos
xchg
outsb
cwtl
jns
mov
sbb
add
pop
sub
cwtl
sbb
pop
xor
out
repnz
mov
mul
jo
jg
or
das
popf
xor
cmc
outsl
aaa
push
repnz
or
sbb
in
rcrl
hlt
push
jle
mov
mov
push
sbb
sbb
int3
lock
jo
rcl
pop
sbb
pop
dec
push
sbb
pop
enter
test
out
in
inc
into
mov
sbb
call
mov
icebp
mov
push
jmp
scas
int3
lods
xor
jmp
test
mov
adc
sahf
loope
les
sbb
pop
leave
add
insl
inc
iret
push
mov
fisubrs
outsl
ret
xchg
xchg
push
mov
cli
xchg
mov
sub
addr16
ss
stc
jge
subb
pop
pop
xchg
and
cmc
xchg
mov
pop
fnsave
push
sub
and
mov
icebp
dec
xchg
dec
jmp
popa
cwtl
dec
push
arpl
mov
lret
push
push
int
jns
sub
cmp
movsl
mov
idivl
adc
and
push
and
mov
cmp
fstpt
dec
and
pop
xchg
rcl
addl
push
lahf
inc
fndisi(8087
mov
rcl
pop
pop
test
jmp
mulb
cs
stc
sti
mov
add
inc
test
mov
add
cwtl
ja
loope
jae
mov
sbb
mov
iret
int3
pop
repz
pop
aaa
pop
push
je
cs
inc
sahf
test
ljmp
inc
repnz
lret
shrb
stos
cmpsl
fmull
es
dec
stc
pop
loope
push
fstpt
mov
sbb
clc
mov
mov
cmpsb
xor
sbb
lds
and
mov
std
in
fldl
push
jne
cmp
idivb
fstps
loopne
sbb
lds
int
sub
daa
push
adc
arpl
imul
sbb
jb
xchg
ror
push
add
movl
pop
lret
ficoml
sti
jo
notb
inc
dec
imul
jae
push
push
add
movsl
daa
fwait
mov
ss
jg
popf
test
repz
jo
fs
mov
mov
fwait
popf
xor
int3
lcall
movsl
movsl
lret
movsl
or
mov
push
rep
shrl
adcb
jmp
push
mov
jne
jnp
mov
out
scas
je
and
or
or
or
or
or
aad
cmp
push
pop
push
addb
xor
xor
mov
push
pop
mov
movb
dec
mov
andb
mov
pop
push
cs
ret
jge
sti
mov
divb
ret
movsl
nop
je
and
daa
add
adcb
les
lock
arpl
mov
ja
pop
ret
mov
add
xchg
movsl
adc
scas
mov
xchg
sbb
jmp
sbb
ja
cli
jle
out
push
in
dec
sahf
int
or
lds
mov
pop
pop
gs
leave
rcr
mov
ret
dec
dec
lcall
add
pop
dec
lret
push
sbb
sbb
jae
shrb
mov
scas
iret
push
mov
add
xor
xor
jecxz
cmpsl
mov
aad
ret
call
mov
push
gs
sub
mov
scas
int
pusha
mov
add
shr
stc
clc
clc
xor
xchg
insl
xor
icebp
div
xchg
fnstenv
shl
xchg
mov
fnsave
pop
jnp
aas
bound
mov
shr
dec
mov
divb
enter
push
mov
in
pop
push
cmc
push
mov
je
inc
sub
inc
iretw
pop
jg
into
mov
movsl
inc
std
xlat
xchg
ret
xor
or
das
inc
fcmovbe
sub
or
fsubrp
in
push
sti
mov
sub
popf
lret
aad
aad
sbb
daa
cli
mov
mov
aas
mov
inc
rol
pop
adc
and
sub
das
adc
cmp
and
lods
xchg
push
insb
test
fisubl
and
test
jnp
jmp
mov
out
pop
push
cmc
sub
pop
outsb
cmpsb
addb
mov
sbb
inc
bound
bound
jo
repnz
push
cwtl
jo
sbb
clc
mov
inc
pop
jne
outsl
mov
push
push
add
mov
mov
push
push
xchg
enter
fldt
add
dec
enter
mov
bnd
fs
push
cmpl
sbb
xor
es
xor
loop
icebp
stos
ljmp
ja
mov
addr16
add
and
dec
dec
inc
scas
xchg
lds
shrl
xor
adc
jb
iret
les
cld
popf
push
jbe
into
inc
and
inc
jbe
sub
loopne
mov
xchg
and
pop
pop
xor
out
push
xchg
lods
insl
mov
mov
out
fwait
call
in
xchg
test
add
in
jno
popa
xor
leave
clc
je
cli
cmpsb
adc
imul
sub
test
adcb
maxps
adc
cmp
mov
adc
fstpl
movsl
lret
fldl
or
aaa
test
sahf
xchg
dec
mov
cwtl
es
sub
jge
xchg
sub
sub
clc
mov
add
div
and
add
pop
leave
iret
sbb
xchg
sti
dec
and
test
xchg
xchg
stos
es
rorb
mov
xor
or
icebp
sub
enter
or
add
js
xchg
mov
aam
mov
les
and
xchg
mov
fbstp
inc
pop
push
sarl
jo
imul
xor
xor
xchg
rcl
hlt
cmp
xchg
hlt
jmp
lcall
xchg
stos
test
xor
stos
loop
push
mov
cld
jmp
clc
or
ror
clc
sbb
jge
push
enter
adc
or
call
loope
dec
or
int
test
add
lock
loop
jne
xor
inc
lahf
mov
mov
icebp
mov
fstl
and
inc
lret
orb
scas
mov
addr16
int3
lea
lret
int
cwtl
inc
daa
adc
dec
lea
pop
mov
dec
adc
push
jle
cmp
cs
sub
arpl
std
enter
xchg
xor
sub
push
adc
shll
clc
and
fwait
imul
mov
cli
rcrb
pop
mov
push
xorl
loop
mov
js
xor
aaa
add
in
inc
inc
repnz
das
pop
fs
jno
cmp
pop
jl
xor
jp
jge
mov
mov
bound
push
jae
test
stos
movsl
mov
dec
push
les
test
mov
or
jecxz
jge
sbb
shlb
ljmp
iret
mov
loope
jmp
jge
sbb
mov
mov
mov
fidivs
push
jmp
nop
adc
cmp
outsl
out
xor
mov
cld
jle
mov
rorl
xor
add
mov
mov
mov
xchg
jae
lock
dec
mov
mov
dec
loopne
mov
lock
xchg
and
arpl
mov
iret
fistl
rclb
fwait
lods
insb
mov
fldl
inc
xor
or
or
push
aad
sub
mov
fwait
mov
xchg
xor
pop
ljmp
inc
rorb
sbb
jnp
mov
in
icebp
lods
lcall
nop
pop
scas
dec
jb
es
test
inc
popa
lea
xchg
das
xchg
les
lcall
cmc
jmp
in
icebp
mov
sbb
stos
mov
idiv
mov
int3
icebp
jo
mov
jbe
push
loop
push
sub
lret
shll
pop
push
xor
movsl
mov
mov
sub
pop
rcll
sbb
mov
bswap
push
cld
fimull
ror
or
add
xor
jecxz
rclb
mov
in
dec
mov
incb
das
and
adc
je
mov
popa
lret
ja
jae
push
mov
pop
pop
imul
es
sbb
jbe
mulb
cmp
popa
pop
hlt
js
and
lock
mov
rcll
xchg
adc
fistps
ljmp
fmull
push
les
sti
fistpll
pop
es
fnstenv
aad
fadd
sub
pop
dec
rcll
add
imul
cmp
into
xchg
in
and
fnstenv
fldcw
jnp
aaa
dec
nop
cmp
inc
stc
fcomip
pushf
jnp
inc
and
cltd
nop
sub
mov
inc
icebp
cmp
jle
dec
cmp
pop
ret
jae
outsl
add
jp
pop
jle
mov
stos
not
ret
lahf
xchg
rorl
add
je
or
cmc
mov
subl
fsubrs
data16
int
roll
jle
jb
aas
cmp
push
data16
jnp
lret
xchg
sahf
scas
inc
xchg
jmp
pusha
cld
inc
ja
iret
inc
aaa
notb
sub
xor
xor
push
xchg
jmp
ljmp
shl
jns
stc
int
mov
mov
push
stc
sub
call
add
lods
popf
ret
inc
bound
push
mov
sbb
les
fidivs
push
or
mov
push
jne
sbb
call
and
add
pop
ret
jo
cld
mov
jle
or
add
inc
cwtl
mov
inc
mov
xor
jle
repz
and
push
dec
in
sub
divl
adc
aaa
cmpsl
xchg
lret
out
test
jmp
pop
orb
mov
and
outsb
sbb
rcl
orl
fidivrs
mov
ds
in
imul
xchg
mov
inc
movsl
and
dec
or
std
lahf
mov
push
arpl
xchg
sub
sbb
xor
push
sub
sbb
mov
pop
and
into
testl
cmp
scas
jae
imul
jns
js
sbb
pop
and
lods
mov
push
xor
pop
lods
pop
into
push
mov
jp
ret
call
adc
adc
dec
in
xchg
jae
mov
adc
out
xor
or
clc
add
dec
lea
lcall
mov
in
dec
mov
shlb
xchg
xor
jb
cmpsl
sbb
sub
movsl
test
sub
jg
adc
out
repz
fmull
mov
mov
das
leave
aas
sbb
popf
and
fucomip
xchg
mov
les
push
inc
fiaddl
xchg
mov
and
push
fisttpl
and
shrl
rcrl
lret
mov
sbb
shll
mov
pushf
mov
call
or
imul
lahf
mov
test
cmp
cmp
jg
cwtl
mov
faddl
pop
push
mov
adc
cmp
fwait
cmpsb
mov
test
hlt
xchg
mov
loopne
cld
cs
ljmp
push
adc
cmpsb
inc
mov
sub
mov
fcom
mov
jns
fcoms
ret
dec
add
jns
pop
push
pop
mov
adc
lods
sub
andb
popa
inc
sar
loope
test
push
sbb
fisubrl
sahf
stos
mov
inc
cmpsb
dec
test
lahf
shl
cmc
or
sub
leave
addr16
out
sub
jg
mov
pusha
mov
and
mov
dec
cltd
mov
and
pop
pusha
je
mov
andl
mov
inc
sbb
and
stos
aaa
insb
loopne
into
in
lods
push
sbbb
sbb
inc
test
xchg
outsb
arpl
inc
testb
mov
mov
inc
les
testl
mov
sbb
and
cld
test
fcompl
sub
fsubs
mov
ret
adc
and
lret
xchg
jo
rclb
cmp
xor
xchg
movsb
or
iret
mov
sbb
int3
in
push
sbb
neg
pop
xchg
push
pushl
dec
or
push
dec
in
cltd
test
push
in
jl
jbe
notl
loop
daa
js
cwtl
inc
fidivrl
ret
cli
icebp
pop
les
arpl
lea
mov
pop
dec
cmp
cmc
inc
cmp
jne
out
xchg
fwait
rorb
adc
inc
arpl
dec
jecxz
dec
fisttpl
push
daa
jmp
sarl
push
addr16
pop
sti
pushf
rep
mov
or
mov
icebp
dec
jmp
mov
out
in
lcall
stos
and
gs
fistpll
cmp
pusha
pushl
cld
call
es
es
pop
add
xchg
push
push
jp
pop
imul
lods
shl
js
aas
xchg
sbb
xchg
mov
enter
mov
inc
lds
pop
mov
ret
dec
or
jecxz
xchg
or
push
out
dec
outsb
push
negl
xchg
sub
insb
aaa
dec
or
dec
cmp
or
fnstenv
xor
lcall
xor
push
scas
adc
test
mov
sub
jge
sbb
lret
inc
add
jp
or
pop
arpl
jo
imul
mov
dec
cmp
mov
adc
cmc
cltd
cmc
shll
mov
xchg
leave
jle
pop
hlt
jo
add
mov
cwtl
dec
xchg
mull
dec
xchg
test
aam
pushf
sub
pop
loopne
push
int
scas
inc
jmp
subb
and
fisttpll
out
push
jge
test
pop
aas
loop
mov
cwtl
sub
ds
mov
lret
nop
jle
push
jno
aam
or
xchg
and
fimull
mov
mov
enter
cld
push
jp
xchg
and
pop
or
mov
mov
mov
mov
xchg
xchg
pusha
jge
lahf
ljmp
pop
cltd
sbb
inc
mov
fsubrl
fadd
outsl
and
cmpsl
into
cs
pop
and
pop
rcrb
push
mov
test
mov
pop
int3
fiadds
sahf
push
mov
mov
push
test
adc
rol
xor
nop
scas
lods
pop
add
push
fisubl
sbb
addb
mov
fisttpll
out
inc
test
add
cmpsb
or
ljmp
pop
jp
add
jo
sub
sub
mov
add
sub
add
cmpsl
mov
imul
mov
mov
dec
imul
pop
mov
nop
fs
push
xor
aam
cld
mov
shll
and
sbbb
mov
repnz
in
jge
inc
sbb
cmpsb
insl
lock
add
pop
insl
fsubl
cmpsb
adc
imul
jo
mov
jl
sbb
popa
mov
jp
mov
addr16
out
sahf
ds
ds
cmp
pop
filds
test
int
adc
stos
lret
int
cmc
fildl
in
shll
dec
pop
push
add
movsl
data16
and
pop
push
inc
clc
cmp
and
cwtl
inc
pop
out
sub
adc
or
pushf
cmp
mov
sub
xor
inc
shrb
ffree
mov
packssdw
mov
fcomi
sub
dec
repnz
pop
andl
les
cld
cmpsb
fcomps
push
cltd
inc
aaa
arpl
ret
test
xchg
dec
test
cs
xorl
mov
aad
cmp
into
adc
jecxz
pop
jns
xor
push
fwait
rcr
pushf
add
lods
lahf
and
fisubrl
jno
mov
mov
lods
and
call
mov
inc
sbb
mov
ret
or
sub
xchg
fwait
or
jne
std
movsl
in
arpl
outsl
fisubl
dec
adc
loopne
add
leave
xchg
xor
fisttpl
mov
push
pop
movsb
push
push
loopne
add
mov
mov
addr16
jmp
cmp
inc
in
push
mov
and
xchg
sub
adcl
fcoml
leave
cmp
cmp
test
cmp
scas
out
sub
mov
dec
stos
popa
push
les
enter
lea
lret
mov
jp
out
insb
cld
ja
jle
dec
jb
mov
shll
lret
out
xor
sub
inc
push
cmp
sub
fwait
andb
ja
lret
fs
iret
sub
jge
imul
push
subb
int
stos
call
cmp
stc
jmp
sub
mov
rcll
sub
inc
xor
ret
inc
fs
popa
rcpps
movb
pop
bound
jnp
in
ret
pop
push
jns,pn
jne
sbb
jmp
cmp
fdiv
into
in
xlat
inc
out
pushf
gs
or
sub
aas
push
pop
popf
je
inc
ja
cmpb
push
fadd
inc
mov
push
insb
shrb
test
shr
lahf
sbb
pushf
push
mov
andb
outsl
ja
int3
jo
loop
and
mov
sub
or
xchg
mov
pop
aad
sbb
jbe
lods
jbe
clc
push
sub
mov
ret
xor
fdivs
ffree
and
sbb
imul
icebp
push
lds
roll
cltd
out
xor
mov
mov
div
pop
mov
sub
das
cmpl
and
loope
fdivp
out
stos
xor
inc
leave
sub
jbe
mov
or
icebp
mov
lods
out
or
rorl
xor
sub
outsl
jnp
jmp
imul
hlt
mov
clc
call
in
add
xor
adc
ja
jno
cmp
ret
jecxz
shr
ja
sub
test
daa
and
and
xlat
mov
addr16
mov
jnp
add
sbb
mov
loopne
mov
add
mov
fists
repnz
xchg
les
aad
xor
inc
mov
lods
inc
lea
fstl
nop
mov
insb
jno
cmc
cmpsb
popf
cltd
jnp
jl
xor
aad
ljmp
aaa
pop
xor
mov
addr16
ret
push
jmp
mov
test
fcomi
sbb
lods
jecxz
jns
clc
xor
rcrl
xchg
data16
push
xor
mov
ret
jecxz
imul
test
loopne
mov
jne
jo
and
pushf
testb
popf
loopne
aas
ds
add
mov
sub
aaa
mov
fstps
lods
stc
jg
mov
xor
lahf
popa
iret
push
push
js
outsl
push
mov
sbbl
popa
mov
lds
add
ret
aaa
js
lods
sbb
mov
xchg
clc
xor
dec
xlat
call
imul
mov
pushf
jp
fimuls
sub
cld
add
leave
addr16
mov
mov
arpl
lret
xor
and
xor
mov
loope
imul
sbb
test
leave
stc
stc
loope
stos
xor
mull
inc
roll
cmp
imul
daa
mov
push
xchg
ja
dec
xor
pop
sub
dec
sub
sub
mov
mov
insl
aad
jle
loopne
and
stc
mov
cltd
dec
xchg
pop
add
ret
push
add
fcoml
lcall
daa
enter
aam
push
pop
adc
adc
jg
fisubs
jmp
sbb
xchg
loope
jnp
jmp
in
daa
sbb
scas
leave
jp
xor
mov
add
outsb
sub
adc
mov
jno
add
or
iret
les
dec
test
jo
fildll
negl
lods
or
inc
sbb
std
enterw
jecxz
sbb
mov
lods
pop
cmp
insb
popf
jns
and
pushf
pop
fimuls
xor
add
cmp
jecxz
or
sahf
ret
pop
lcall
push
jmp
sbb
out
xchg
test
xchg
into
popa
loope
scas
dec
in
test
sub
cmp
add
in
jecxz
imul
and
int3
pop
in
ja
addb
sub
popl
jb
fdivrs
dec
rcrb
fnstsw
jnp
stos
dec
xor
dec
fdivl
loope
outsb
les
ret
pop
mov
sar
cmpb
stc
pop
leave
mov
inc
pop
cmp
adc
sub
add
stc
pop
xor
cmpsl
or
das
add
fiaddl
inc
call
lods
mov
outsl
add
sbb
fimuls
cmp
mov
cmpl
mov
push
and
xchg
push
mov
push
xor
aaa
insl
stos
lods
lcall
hlt
ret
lcall
outsl
inc
mov
int
jo
jmp
scas
sbb
test
dec
movsb
stc
mov
jb
mov
dec
sub
in
sbb
and
aam
add
repnz
lea
mov
bound
aam
mov
xor
jns
mov
movsb
mov
test
mov
mov
xchg
adc
imul
out
arpl
pop
xchg
ret
sbb
cli
adc
lahf
jnp
imul
jecxz
xlat
mov
adcl
in
pop
popa
cmp
sar
add
xchg
add
and
add
mov
and
pop
outsl
xor
mov
orl
out
scas
add
jnp
push
fwait
cmp
divl
pop
test
push
or
cld
idivl
stos
jl
adc
xchg
adc
mov
scas
xor
in
mov
and
pop
adc
or
add
cmp
push
es
add
xchg
in
inc
xlat
add
mov
jnp
sahf
rcll
mov
mov
sub
pop
gs
pop
add
and
mov
pop
div
pop
imul
dec
push
cmp
rcl
xlat
fs
mov
movsb
aas
mov
sub
out
mov
ret
cmpsb
jne
inc
ret
and
mov
jns
pop
out
adc
inc
addb
mov
mov
inc
clc
inc
sub
sub
mov
jge
cld
testb
mov
and
sahf
std
cmp
add
mov
popa
cmpb
and
inc
mov
xor
shll
lds
add
xchg
in
push
mov
cld
fwait
adc
xchg
adc
or
mov
add
movsb
xchg
inc
mov
cmpsb
fistps
jb
inc
out
lcall
repnz
leave
lea
pop
jne
jg
imul
fs
je
cmpb
popa
push
mov
pop
outsl
push
aad
loop
fistpl
add
cmp
mov
push
aam
cpuid
mov
popa
jno
sbb
loopne
or
pop
hlt
sub
enter
xor
push
mov
lret
hlt
sub
xor
push
cli
rcll
hlt
cwtl
mov
inc
cmp
sbb
mov
in
pop
or
stc
subb
xchg
adc
fmuls
cli
and
add
in
hlt
pop
xchg
pop
shll
insb
sbb
fldenv
pop
add
jg
mov
jp
push
mov
loop
es
add
add
push
and
imul
mov
ficomps
stos
xchg
sub
ret
sub
xchg
adc
jecxz
mov
insl
out
cld
jne
jb
jne
cltd
cmp
in
push
lods
jle
movsb
sub
ss
cld
jle,pt
jbe
mov
stc
fmuls
jl
sub
inc
into
mov
sahf
mov
push
movsl
pop
cmc
movsb
es
pop
lock
mov
push
pop
fadds
popf
bound
out
out
pushf
ds
xchg
jnp
outsl
pcmpgtb
jbe
xor
das
jae
push
aas
mov
push
push
test
xor
imul
pushf
adc
inc
sbb
mov
and
inc
mov
cmpsb
cltd
jecxz
gs
loopne
jmp
or
in
movsl
pop
jo
adc
mov
mov
into
pop
stos
and
jecxz
mov
adc
mov
imul
and
andl
into
cli
sbb
das
hlt
mov
fstpt
sbb
aas
dec
loopne
icebp
inc
xor
daa
out
movsb
pextrw
fs
aaa
mov
sbb
inc
push
push
dec
cmp
pushf
int3
adc
je
push
ja
inc
imul
fidivl
adc
adc
sbb
arpl
mov
add
mov
dec
mov
pop
xchg
movsl
add
addr16
add
jo
or
mov
ret
mov
dec
insb
sbb
dec
sar
mov
faddl
es
cs
xor
push
outsb
in
push
cmp
imul
push
inc
xchg
test
and
sub
jge
mov
mov
dec
and
xlat
mov
aas
out
pushf
out
mov
add
jnp
sub
in
int
rcl
and
inc
lods
imul
mov
jae
adc
pop
xchg
xchg
pop
dec
xorb
dec
lret
sbb
ret
dec
decl
sbb
push
les
xor
mov
and
out
das
mov
rorl
clc
or
jnp
imul
xchg
and
push
lahf
xor
jp
daa
xor
in
ret
mov
ja
add
shlb
mov
jbe
jle
push
cmpb
mov
xchg
imulb
pop
cmp
push
cwtl
in
mov
cmp
insb
mov
xchg
das
pop
cs
jnp
daa
sbb
dec
pusha
ja
repz
es
pop
xor
mov
pop
call
movsl
aam
stos
sub
fbstp
mov
add
mov
push
popa
je
lret
jl
jg
dec
jg
jmp
roll
stos
pop
imul
xchg
jecxz
sub
sbb
loopne
insb
jns
lock
inc
push
cltd
stc
les
fld
loopne
or
in
fwait
enter
int3
sbb
ss
insb
nop
mov
push
shl
test
push
adc
xchg
mov
out
dec
scas
xchg
lcall
xchg
outsl
pop
mov
sbb
enter
xchg
cmp
into
sbb
xchg
scas
cmp
ss
dec
jge
pop
pop
xchg
pop
jge
shrb
push
push
mov
js
out
mov
out
jnp
call
sbb
sub
xchg
cmpsl
xchg
idivb
inc
jle
pop
fadd
js
xor
dec
loopne
push
adcl
or
cli
divl
inc
mov
loope
pop
xchg
inc
add
sahf
fs
lods
inc
loop
push
pusha
cwtl
int3
mov
ds
fsubs
fldl
lea
dec
dec
xchg
xor
push
cmp
iret
pop
adc
nop
jae
fldt
or
xor
lds
jle
cltd
sbb
stos
shlb
mov
mov
xsaveopt
xor
pushf
mov
mov
leave
nop
sbb
daa
pop
xlat
pop
icebp
fs
in
iret
lcall
and
sbb
add
xchg
lret
push
rcll
and
cld
cmpsb
cmp
nop
imul
scas
mov
pusha
es
sti
sbb
xor
scas
aam
adc
xor
add
push
pop
mov
inc
or
and
insb
push
jp
cld
gs
outsl
push
xchg
aad
jb
aad
fdivs
mov
cmp
mov
rcrl
dec
insl
cmp
idivb
sbb
dec
push
out
cmp
mov
cmpsl
cmpsb
push
out
push
jae
data16
jne
xor
enter
and
pop
stos
or
lcall
ja
and
fimull
jae
into
and
sbb
add
fsubs
sub
ret
pop
inc
dec
call
inc
dec
test
push
sbb
ret
xor
mov
or
pop
mov
mov
adc
add
or
xor
movsb
in
push
fwait
sub
loopne
inc
dec
lret
dec
xor
cmp
test
add
inc
and
shl
pop
mov
out
add
testl
add
test
ds
mov
dec
pop
scas
nop
fisttpl
sub
mov
adc
add
and
push
cmp
cmp
or
mov
inc
pop
ds
push
movsl
sub
ljmp
sbb
lock
push
je
daa
repz
cmp
jno
pop
jg
jae
mov
aas
add
rolb
add
jnp
sub
adc
dec
les
mov
xchg
pop
loop
cli
flds
push
scas
add
and
push
cmp
lds
push
lea
ja
in
sub
pop
movsb
test
in
stos
data16
icebp
pop
cltd
call
and
ds
push
or
pop
pusha
lret
sub
mov
repz
mov
mov
lret
insb
pop
push
cld
jbe
and
ret
ljmp
gs
aam
lret
enter
push
mov
sbb
faddl
pop
jbe
test
dec
movsb
int3
lcall
lcall
repnz
add
out
xor
mov
fwait
les
in
or
push
into
adc
inc
inc
es
ljmp
mov
stos
push
fstps
pop
dec
movsl
mov
push
pop
mov
rcr
aas
fsubp
mov
repnz
loopne
fistpl
pop
inc
flds
icebp
and
xchg
jp
sbb
xorl
mov
pop
or
sub
push
cmp
cmpsl
xor
adc
mov
or
andb
insb
jle
mov
aaa
addr16
jmp
lret
push
mov
adc
xor
xor
dec
xor
push
cmp
cs
jb
inc
cmp
cltd
stos
push
pop
sahf
pop
lea
leave
cmp
xchg
mov
das
inc
cmp
xlat
mov
mov
lods
pop
dec
jo
fldenv
push
ljmp
cmp
mov
mov
sarb
add
jo
mov
data16
arpl
inc
sahf
pop
ljmp
jg
dec
sub
inc
xchg
pop
sub
xchg
js
push
stos
sti
lahf
addl
mov
and
xor
mov
aaa
hlt
xor
inc
pop
icebp
or
cmp
mov
cmp
std
pop
sub
fiadds
adc
outsl
ja
or
data16
jp
addb
cmp
daa
rclb
adc
push
and
jge
sub
clc
stos
stc
push
stc
call
inc
popf
loopne
and
lods
stos
pusha
lods
popf
enter
add
stc
mov
rorb
stos
out
sbb
cmpsb
fsubs
icebp
cmp
cltd
mov
filds
xchg
mov
jno
or
pusha
push
into
mull
inc
push
fsubs
inc
int3
xchg
insb
sub
stc
xorl
movsl
or
sbb
cmpl
imul
push
stc
aad
inc
adc
lods
fidivrl
iret
push
push
pushf
xor
mov
loop
ret
mov
mov
negl
jo
aas
jle
call
push
sbbb
xchg
adcb
clc
mov
lahf
hlt
cmp
push
in
pop
shll
imul
sub
aaa
call
out
lock
iret
dec
rcrb
ss
push
or
sub
fcmovnb
sbb
std
xchg
push
aaa
ja
jge
js
push
iret
add
lret
adc
int
or
cmc
loopne
dec
iret
test
mov
cmpsw
lcall
cmpsl
adc
pop
mov
inc
dec
pop
mulb
and
add
dec
or
imul
jb
sub
mov
xchg
pop
cmp
das
cld
dec
aas
jnp
push
das
stos
cmp
inc
fs
add
mov
scas
adc
and
movsl
xchg
mov
push
jl
push
add
add
mov
inc
aad
je
fidivl
and
lods
xchg
push
or
inc
jp
and
andl
or
je
xor
test
cmpsl
gs
inc
inc
cltd
loope
rclb
adc
inc
cmpsl
call
fsts
in
cmp
andl
gs
je
mov
retw
repz
add
push
push
cli
mov
adc
push
xchg
xchg
dec
cmp
mov
inc
inc
jne
test
ss
into
jp
rcl
mov
and
or
and
adc
cmp
dec
mov
pushf
into
test
adc
jmp
push
in
jne
adc
mov
mov
dec
push
pop
mov
clc
lods
roll
and
loop
pop
inc
mov
jae
cmp
gs
imul
shl
jo
fstl
xchg
add
int
xor
add
lock
pop
out
mov
mov
inc
lahf
out
xchg
ja
mov
insl
sub
bound
cmp
into
test
inc
sahf
xorl
cld
jnp
jmp
mov
int3
jnp
fldenv
dec
arpl
inc
and
es
xchg
test
sbb
pop
daa
inc
fidivs
adc
sub
movsl
mov
ljmp
xorl
sub
out
jecxz
pop
insb
sbb
ss
push
nop
cltd
daa
lret
pop
loop
xor
cmovle
pop
xor
push
push
jecxz
les
jbe
and
fimuls
mov
mov
mov
bound
cmp
cmc
inc
test
adc
mov
lret
shll
imul
pop
mov
out
cli
mov
in
jno
xor
inc
sbb
mov
rol
stos
add
sbb
mov
lcall
ja
inc
or
into
loope
imul
ftst
xchg
rorb
dec
adc
frstor
jg
cmp
fisttps
xchg
icebp
jle
aad
ja
insl
jle
or
mov
ja
int3
sub
push
or
mov
data16
sub
xchg
pop
or
or
pop
mov
insb
and
xlat
inc
dec
jg
cmp
push
push
pusha
push
out
cs
xor
ds
andl
out
test
pop
outsl
push
gs
fs
xor
sahf
imul
and
sub
js
inc
add
test
sti
mov
sub
dec
rol
mov
jle
cmp
orl
pop
fxch
dec
decb
in
add
xor
mov
add
shll
pop
out
pop
pop
rorl
lods
cmp
bound
enter
shl
lock
out
xorl
shlb
icebp
push
movsl
cwtl
adc
adc
cmp
inc
xor
outsl
lea
mov
push
into
xchg
aaa
push
adc
outsb
and
fsts
push
mov
stc
inc
rcrb
push
std
cld
and
xorb
adc
imul
shrl
rolb
cwtl
addr16
add
inc
xchg
cmc
imul
mov
adc
cmpsl
into
in
int3
mov
sbb
gs
xchg
imul
cmp
out
es
loope
jne
sbb
loopne
add
sti
sbb
xor
rcr
inc
jg
cmp
inc
cmp
mov
iret
dec
xchg
cmp
dec
pop
rcrl
mov
cwtl
cltd
jmp
popf
jge
hlt
pop
jns
sarb
mov
mov
pop
add
push
cmp
adc
in
leave
push
jle
test
test
dec
sahf
mov
jo
sub
hlt
test
sub
loope
cmp
pop
and
fsubrl
inc
out
aas
loop
in
mov
dec
jno
adc
icebp
std
cmc
cwtl
cmpl
clc
pushf
jecxz
mov
cld
stos
subl
sub
scas
in
sub
out
and
cmpb
clc
scas
ljmp
out
lods
mov
mov
jecxz
inc
lret
mov
and
in
ss
cld
js
pop
dec
xlat
jnp
cmp
push
lret
enter
cmp
or
cmp
inc
xchg
pushf
xchg
mov
dec
push
jno
push
call
fs
jg
xchg
cld
fimuls
mov
pop
stc
or
das
sbb
mov
sub
jbe
movsb
sbb
out
sub
push
inc
adc
pop
addr16
adc
pop
add
mov
int3
push
cmp
in
add
push
add
or
inc
adc
mov
mov
lods
mov
push
out
jnp
jbe
jmp
xchg
orl
and
outsl
test
shll
cmpsl
out
out
mov
pop
cli
clc
cmp
push
mov
in
mov
test
lret
push
andb
xor
fildll
mov
insl
mov
mov
cmpsl
mov
jg
pop
imul
test
in
fisttps
jge
push
cmp
push
pop
stos
aas
inc
pusha
mov
sahf
sti
stc
or
cli
lahf
and
pop
stos
lds
dec
stos
dec
jns
outsb
outsb
or
xor
jmp
dec
sbb
mov
adc
in
loope
push
int
loope
shlb
test
xchg
repnz
popf
mov
xchg
jge
adc
icebp
fdivs
fwait
and
cmp
jle
in
push
sub
insb
dec
test
or
jge
std
fld
add
scas
and
mov
arpl
dec
jbe
adc
xor
sahf
or
addl
ret
jae
leave
pop
ficoml
loope
inc
push
inc
inc
inc
cld
xor
stc
inc
push
iret
out
xor
jne
scas
mov
xchg
rorb
jnp
fcompl
je
ret
sub
leave
shr
and
aad
push
pusha
mov
mov
mov
push
cmpsb
pop
or
je
fsubrs
gs
aaa
adc
test
fistps
and
stos
out
mov
cmp
ficomps
js
xchg
scas
jmp
cmpsl
pop
mov
cmp
xchg
divb
lods
mov
clc
xlat
cmpsl
cltd
in
inc
xchg
nop
loop
pusha
insl
mov
xchg
cmp
and
dec
mov
lods
add
jns
mov
cltd
fcmovnu
std
fsubl
xchg
fidivl
sub
out
cmp
jecxz
inc
popf
xchg
cmpsl
sahf
push
fdivr
push
fs
push
mov
test
mov
pop
int3
outsb
push
mov
scas
sbbb
out
push
adc
push
aas
xlat
imul
mov
lret
xorb
pop
sbb
cmp
mov
rol
lds
rcrl
add
jle
jns
pop
sub
adc
loope
jns,pn
adc
cmc
pop
mov
and
cmpsl
push
subb
ja
xchg
repnz
sub
sub
into
jmp
js
push
adc
jge
mov
lea
mov
roll
fdivr
xor
sub
andb
sub
fcomip
mov
pop
testb
mov
push
cmpsb
loop
in
jecxz
scas
mov
inc
and
test
ljmp
push
cli
lods
mov
mov
xchg
jae
test
std
sti
push
mov
sti
push
pop
push
xor
aam
out
outsb
out
pop
jb
push
mov
xchg
in
push
filds
jle
add
aas
fwait
cmp
add
xor
dec
iret
dec
xor
mov
adc
mov
es
sbbl
repnz
rcrl
dec
inc
xchg
ret
popa
pop
push
add
cmpsl
aaa
lahf
movsb
xlat
xor
mov
call
ja
add
add
cmp
cmpl
sub
movsb
and
ret
mov
cmc
icebp
scas
ds
cmpsl
outsb
arpl
repz
mov
gs
cmp
sti
jl
sarb
rol
adc
pusha
test
inc
sub
test
scas
cwtl
mov
sarb
xor
fidivl
out
pop
enter
dec
loopne
sbb
cmp
fsubrs
sbb
cwtl
out
sbb
fnstsw
sub
addr16
adc
dec
jb
and
inc
sbb
sbb
add
pop
mov
es
lret
inc
dec
jbe
test
sbb
push
sub
lcall
lods
imul
xchg
adc
and
or
pop
add
arpl
int3
jmp
adc
lahf
rcl
adc
sti
xor
imul
movsb
repnz
inc
adc
push
mov
mov
jmp
jb
push
test
insl
jle
push
jae
pop
iret
dec
xor
sub
mov
and
out
dec
lret
mov
ljmp
adc
jne
fnsave
pushf
mov
pop
outsl
stc
mov
shl
and
outsl
adc
lds
add
add
aas
nop
jp
cwtl
adcb
iret
sahf
dec
aaa
inc
mov
add
movsb
xor
or
xor
sub
add
mov
mov
lret
xchg
stc
aam
pop
sarb
jmp
jb
adcb
push
mov
add
cltd
add
xor
test
sbb
fcompl
mov
fisttpl
xor
shl
es
shll
cmpsb
je
les
test
jbe
xchg
adc
pushf
dec
loop
xor
pop
adc
mov
test
cmp
mov
addr16
sarl
lods
ljmp
loop
sbb
sbb
cmp
add
ljmp
mov
fwait
xor
rol
out
push
or
rorl
ja
push
adc
in
jbe
push
int
push
add
enter
mov
test
js
xchg
xlat
sar
xchg
pop
iret
fnstcw
add
mov
adc
clc
mov
jnp
inc
shll
out
pop
sub
ljmp
js
ds
jmp
xchg
adc
shlb
dec
push
shl
push
gs
test
inc
jo
jae
inc
push
xchg
cwtl
sbb
jecxz
js
shll
dec
sbb
test
sbb
das
in
mov
sub
test
lods
loopne
fdivrs
cmp
jnp
cpuid
mov
je
sbb
mov
cmp
imul
out
rorb
lock
push
xor
xor
scas
sbb
and
pop
aas
int3
les
pop
xchg
pop
add
fdiv
sub
mov
add
jo
test
dec
and
dec
es
out
xor
pushf
loope
cmp
xchg
mov
push
in
push
dec
pop
sbb
jp
outsb
push
pop
mov
mov
or
add
dec
jle
push
dec
lea
jne
hlt
pop
imul
je
or
cmp
jb
xchg
daa
mov
ss
pop
push
in
xchg
ljmp
outsb
int3
push
idivl
push
clc
cltd
push
iret
push
sbb
xor
cmpsl
jb
cmp
stc
sbb
xor
mov
pop
fists
stos
add
aaa
in
jb
lret
inc
xor
arpl
shrb
sbb
xor
int
xchg
pop
mov
andb
sbb
jge
stos
xchg
mov
test
pop
scas
insb
mov
pop
mov
and
loop
sub
leave
das
mov
movsl
in
xchg
xchg
mov
push
inc
sbb
push
mov
push
or
inc
cmpsl
and
sub
mov
arpl
fiaddl
pop
pop
dec
cmpsl
lods
lods
and
cmp
inc
dec
pusha
stos
test
ljmp
stos
xlat
std
into
xchg
adc
xchg
inc
outsl
clc
inc
cmpsl
stos
ret
insb
das
xlat
orb
je
sbb
mov
scas
adc
sbb
clc
pusha
push
dec
pop
cld
xor
jge
or
out
aam
pop
test
sub
lock
aam
je
repz
out
xchg
or
jnp
gs
sub
push
lds
xchg
cmp
fisttpll
out
xor
cs
mov
fsubrs
mov
inc
pop
pop
add
fsubrs
mov
pop
xor
out
out
in
pushf
dec
aad
cmp
ss
cld
data16
xchg
imulb
dec
leave
lods
mov
adc
sbb
jnp
sbb
imul
mov
pop
jno
lret
and
pop
incb
jbe
sti
xorb
and
daa
and
addr16
dec
sbb
arpl
int3
xchg
mov
mov
in
movsl
cli
sti
ficompl
add
lahf
and
inc
ljmp
test
pop
xchg
xor
adc
xchg
jbe
iret
push
shll
mov
movsl
mov
mov
loop
arpl
mov
lcall
movsb
and
adc
push
mov
nop
das
das
das
push
ds
insb
movsl
lret
fwait
add
into
enter
add
rcr
cmovns
fdivrs
stos
dec
mov
lret
inc
pop
pusha
popf
and
cmpsb
addr16
ret
rclb
pop
and
adc
test
lahf
jnp
pop
lods
call
and
adc
and
stos
lea
icebp
std
mov
int
dec
mov
shr
out
cmp
in
daa
cmpsb
pop
cli
clc
out
xchg
adc
add
fnstsw
enter
jg
or
jmp
dec
subl
sub
push
fmuls
ja
pop
les
icebp
in
xchg
lock
inc
xor
ret
lods
icebp
out
mov
lock
mov
aaa
imul
dec
dec
push
jne
enter
addr16
cmp
lods
pop
stos
jbe
test
jmp
or
mov
shrl
push
stc
fcomps
pop
ss
push
push
out
into
fwait
adc
mov
andl
push
scas
insb
cltd
rcll
xor
xchg
mov
mov
aas
xor
pop
mov
jmp
call
fs
xchg
pop
das
xchg
dec
mov
xchg
mov
jl
ja
or
rorb
je
movsb
push
jecxz
jge
jecxz
js
jmp
push
and
lcall
add
mov
fcompl
pop
ret
lds
call
testl
push
mov
test
cmp
jbe
repnz
xchg
ljmp
push
mov
cmp
dec
or
lcall
vpsrad
test
lcall
std
xchg
xor
cmp
push
aas
test
sbb
fwait
mov
lcall
xchg
loopne
adcl
js
testb
and
and
mov
lock
cwtl
gs
bound
or
jne
stc
adc
test
andl
jns
cmp
sbb
and
or
jg
cmp
inc
cltd
xor
mov
icebp
movsl
inc
mov
and
stos
mov
pop
je
cmp
mov
dec
or
mov
lock
mov
cwtl
mov
shll
pop
sub
ret
add
enter
add
test
mov
xor
sbb
inc
dec
sub
je
testb
xchg
push
cmpsl
daa
outsb
sbbb
pop
add
shl
pusha
jne
mov
push
cmp
daa
push
sbbl
cmp
fcoml
dec
icebp
mov
sarb
push
xchg
mov
xchg
mov
jle
jmp
dec
mov
bound
outsl
andb
xlat
cltd
jb
xchg
cli
imul
or
ret
out
jnp
testb
cmc
mov
subb
repnz
adc
orb
insb
and
orl
and
loopne
push
jbe
fs
cld
add
cld
inc
jo
mov
push
xor
push
outsb
push
movsl
or
shrb
sbb
sbb
test
push
adc
insl
sahf
test
mov
jg
cmp
mov
scas
fwait
adc
popf
add
inc
ljmp
std
js
inc
in
inc
mov
repnz
ficoml
pop
ds
cs
inc
fcmovne
pop
and
ret
insb
or
insb
jns
push
add
sub
cmpb
and
movsl
out
fwait
mov
jnp
mov
stc
int3
outsl
sub
mov
inc
push
pop
mov
xchg
mov
push
mov
lds
lds
imul
insl
cld
sbb
and
popa
cltd
push
aam
lret
cmp
fmul
inc
enter
pop
push
jge
dec
leave
fisttpll
and
bound
or
rcll
or
mov
dec
xor
jbe
push
mov
imul
jge
dec
pop
test
ss
shrb
cwtl
mov
cmp
cmpsb
mov
inc
loopne
ljmp
jno
push
xor
or
inc
ljmp
jg
cmp
cmpsl
movsl
inc
xor
fisttpl
fwait
xchg
adc
jne
push
shl
clc
cmp
jb
test
mov
jbe
stos
popa
ret
adc
sbb
adc
xchg
insb
and
aam
jae
pop
inc
xchg
je
xchg
stos
pop
or
xor
daa
mov
lcall
mov
or
mov
adc
or
je
popa
sbb
sub
adc
int3
adc
ffreep
idivb
imul
xorl
pop
sub
mov
sub
mov
stos
loop
ss
loop
int3
data16
adc
mov
cwtl
push
xor
xchg
daa
jle
adc
imul
jae
pop
test
out
add
stos
idivl
sti
loopne
lods
push
dec
mov
jne
pop
out
mov
inc
mov
dec
shll
mov
push
mov
mov
mov
add
insb
jge
out
and
mov
mov
jnp
push
pop
dec
roll
das
push
mov
imull
lods
lds
outsl
or
loope
std
rep
add
and
outsb
push
dec
mov
pop
or
mov
and
xchg
stos
xchg
push
xor
shr
mov
cli
xchg
lods
std
arpl
out
mov
jb
xchg
in
push
test
movsb
push
xchg
jl
mull
pop
inc
lret
fnstenv
or
repz
rcrb
in
aas
xor
fisubs
push
inc
lds
ret
xor
push
shll
cmovs
iret
lock
and
lahf
mov
xor
add
push
imull
push
fiadds
cmp
sub
movsb
stos
xchg
inc
ja
pushf
out
adc
sbb
int
jl
imul
mov
lods
push
xchg
std
divl
and
int3
aam
xor
jp
mov
jo
pop
or
cmp
repnz
pop
xchg
je
fisttpl
adc
dec
jmp
sub
push
mov
enter
sub
jg
repz
das
lods
fsubrp
xchg
out
add
sub
into
mov
clc
scas
cmc
mov
dec
lahf
push
int3
inc
cltd
mov
sbb
and
stos
or
in
lret
pop
add
fs
pop
jmp
sbb
xchg
rcl
and
repz
lret
jb
pop
in
xchg
rorl
add
fistpll
rcr
jne
sbb
in
pop
add
insb
stos
imul
add
test
fsts
lcall
les
hlt
aaa
in
jl,pt
jle
rolb
scas
cmp
xchg
insb
dec
mov
dec
negl
ja
out
or
sub
cmp
mov
mov
dec
xchg
or
pop
iret
push
pop
repz
gs
sub
aad
stos
repz
ja
jo
push
and
push
mov
cmp
mov
stos
loope
push
in
jecxz
mov
popa
sub
pop
xor
inc
mov
rcl
add
out
cmpsl
sbb
push
nop
mov
gs
fdivrs
push
aas
cld
rorb
iret
loopne
sahf
iret
insl
adc
test
xchg
jmp
push
hlt
es
or
in
lods
adc
push
fcompl
jl
loopne
das
adc
clc
into
adc
push
cmp
mov
mov
push
dec
or
sub
in
mov
out
pop
enter
xchg
or
fisubs
fmul
adc
iret
mov
scas
mov
cltd
rorl
adc
mov
mov
mov
notl
mov
sub
dec
xchg
adc
push
ja
les
inc
cmp
shrl
cwtl
movsb
fistl
mov
out
sub
outsl
test
and
arpl
xchg
mov
adc
stos
jmp
pop
int3
cmp
xorb
sub
cmp
iret
push
unpcklps
hlt
rol
ret
xchg
cld
fwait
mov
mov
loopne
in
nop
stc
xlat
inc
push
loop
jo
push
and
fcompl
sbb
inc
push
lret
mov
into
je
xor
mov
adc
daa
je
pop
adc
pop
test
stc
daa
icebp
inc
scas
cmp
push
xor
dec
push
lcall
pushf
in
rorl
es
xchg
cmpsb
mov
inc
dec
lods
cmp
mov
add
mov
or
xchg
xor
roll
popf
pop
adc
pop
fstl
mov
jecxz
cmp
out
cmp
sub
scas
andb
nop
out
mov
daa
lcall
jnp
or
push
sub
nop
popf
pop
cmp
pushf
or
daa
xchg
xchg
popa
pop
jno
out
lods
stos
call
inc
mov
xchg
mov
jne
inc
int
imul
test
inc
xchg
or
pop
testl
cmp
inc
inc
mov
jl
add
cld
fsubrp
xor
mov
loope
mov
xchg
hlt
mov
lret
call
mov
jge
arpl
loopne
andl
cmpb
or
mov
and
push
aad
or
filds
mov
lahf
sahf
pop
cmp
add
sub
mov
ja
movsl
add
in
gs
xchg
out
sub
and
js
rcrl
inc
lea
adc
push
push
bound
and
aam
nop
scas
roll
clc
sub
cmpsl
les
ret
insl
jns
out
jne
pop
mov
push
js
add
cmp
xchg
pushf
daa
xorl
sbbb
jle
cmc
pop
push
lods
inc
bound
jecxz
icebp
outsl
pop
lcall
outsb
xchg
mov
xor
iret
lods
les
aas
dec
hlt
testb
push
aam
cmp
lahf
or
and
cmp
push
push
ret
or
icebp
movsb
adc
icebp
pop
sbb
daa
push
xchg
or
ss
dec
push
lea
xlat
cmp
adc
sarl
cmp
cltd
push
dec
add
push
sub
xchg
aam
mov
inc
out
add
sbb
cwtl
mov
hlt
aam
mov
mov
aad
rcll
xchg
popf
xlat
dec
inc
in
shrd
roll
out
xchg
pop
jne
les
cs
pop
push
mov
inc
cmp
xchg
xchg
rcl
dec
dec
repz
imul
sbb
fcoml
mov
mov
sub
test
push
outsl
pop
mov
gs
mov
addl
loopne
pop
push
movsl
out
mov
pushf
push
loop
pop
add
hlt
adc
mov
jo
push
mov
pop
jns,pn
imul
ja
ret
je
daa
ljmp
subb
divl
insb
cmpsb
push
mov
gs
pop
inc
mov
sbb
insl
sub
cmpsb
mov
lahf
cmp
lods
test
add
pop
shll
xchg
hlt
adc
mov
and
stos
push
cmpb
sub
xor
xchg
fisttpl
ss
inc
test
sbb
mov
mov
push
cmp
aas
cwtl
popa
pop
pushf
inc
or
mov
dec
pop
ds
addr16
adc
xchg
bound
lea
inc
xchg
push
and
sti
cmc
shl
ficompl
divl
aas
repnz
fisubrl
outsb
lds
clc
daa
add
mov
xor
out
in
pop
xor
xchg
add
sub
imul
and
mov
test
inc
mov
orb
dec
out
fsubr
imul
xchg
sti
sub
test
jbe
sbb
inc
aas
pop
movsb
jns
mov
and
xchg
push
xor
pop
push
inc
sarb
mov
fwait
jb
fistpl
pushf
mov
das
pusha
xorb
jbe
arpl
add
or
lods
cwtl
inc
mov
push
xor
push
dec
jge,pt
or
dec
test
cmpsl
sub
mov
jns
pop
mov
imul
in
int
adc
adc
add
mov
xor
mov
filds
je
or
hlt
scas
js
or
mov
inc
movsl
xchg
push
ljmp
imul
or
sti
pushf
push
lods
mov
cli
lea
es
mov
add
cs
push
mov
mov
mov
mov
jge
sub
add
xlat
aam
sbb
jle
ret
scas
xor
dec
sbbl
and
mov
outsl
mov
lret
sub
push
sbb
pusha
jbe
or
xchg
cli
fcom
jno
movsb
aaa
les
js
inc
pop
mov
pop
in
mov
mov
cmp
jb
stos
sub
push
loope
lret
xchg
lahf
xchg
sahf
shr
push
xchg
and
ljmp
jp
arpl
in
mov
and
mov
and
test
int3
xchg
fdivrl
or
lret
and
sbb
iret
xor
mov
xchg
inc
mov
clc
les
mov
add
mov
aad
fistpll
jge
mov
gs
ucomiss
lea
mov
fs
es
jle
stos
push
data16
mov
mov
xchg
loop
dec
pop
shll
add
stos
push
sbb
xchg
lock
adc
int
jae
jecxz
inc
and
jnp
js
mov
jp
jnp
mov
mov
push
in
or
adc
and
sbb
cli
mov
and
rorl
pop
mov
gs
xchg
inc
mov
sbb
lret
icebp
pop
cmp
jle
das
out
and
xchg
rclb
cli
push
jnp
cwtl
cmp
aam
adc
cmc
pop
cmp
mov
nop
mov
lahf
jb
sub
jmp
lahf
outsb
push
jae
sub
pop
rorb
lods
add
add
inc
xor
and
aas
jge
sbb
fisttpll
inc
mov
inc
cmp
xchg
popa
hlt
movsb
lcall
mov
leave
sti
mov
pop
outsb
stos
enter
test
pop
movsb
jl
test
add
inc
push
mul
push
rolb
popa
fcoms
inc
outsl
xchg
lock
jmp
out
push
jl
stos
adc
xchg
fnstcw
xchg
add
pusha
in
cmp
xchg
andl
idivl
jbe
xor
xchg
add
mov
sbb
push
das
in
sahf
mov
and
sub
pushf
clc
mov
xor
xor
iret
sub
fiaddl
xor
push
inc
aaa
pop
aas
loopne
dec
push
movsl
leave
jecxz
addb
mov
lret
dec
popf
adc
xrelease
sbb
xor
popa
lret
mov
movsl
test
pop
stc
sub
cmp
mov
aam
fucomp
mov
mov
lock
in
dec
mov
dec
xchg
shll
dec
out
jge
into
or
xor
lahf
out
cs
inc
xchg
into
mov
scas
icebp
std
xchg
dec
leave
fdivrp
fsubrs
test
sbb
adc
add
mov
or
pop
inc
arpl
out
dec
mov
test
bound
cltd
adc
xor
jmp
mov
int3
loop
out
inc
repz
push
jle
push
fs
inc
jae
bound
inc
inc
inc
xor
outsl
std
test
jnp
js
filds
jnp
jp
outsb
cmp
rcr
aaa
mov
in
leave
adc
add
in
jbe
push
xor
cmpsl
pushf
enter
xor
xchg
pop
sub
and
inc
leave
inc
jbe
lahf
es
icebp
sbb
push
cld
stc
mov
cwtl
aaa
and
sbb
and
es
and
pop
insb
sbb
ljmp
cmp
mov
imul
push
cld
and
adc
popa
push
ficomps
and
push
inc
test
push
mov
js
out
cmpsl
xlat
and
pop
jl
xchg
dec
mov
jmp
jecxz
dec
adc
shr
mov
int
pop
push
fstpt
mov
data16
icebp
mov
aad
loop
mov
cmpsb
cmp
cs
or
in
aas
gs
call
jmp
and
sbb
mov
inc
int
pop
dec
fwait
shrl
fst
mov
div
les
sub
mov
icebp
or
sbb
cmp
les
mov
rcr
aam
pop
xchg
push
stos
dec
xlat
sbb
jb
jmp
mov
or
out
popa
mov
push
aam
movsl
push
pop
shrb
sahf
cmpsb
push
xchg
insl
jno
mov
lret
mov
fldenv
mov
lods
ficoms
icebp
xchg
arpl
les
mov
xchg
sub
incb
daa
rorl
lcall
adc
mov
repnz
sarl
adc
jne
dec
add
adc
mov
popfw
cmp
jne
icebp
aas
or
clc
pop
inc
loopne
ficoml
sub
fbstp
xchg
inc
into
testb
sub
xor
in
inc
addr16
xchg
imul
mov
mov
inc
push
cltd
fnstsw
stos
push
scas
sarb
shr
mov
lods
xchg
xchg
out
add
xchg
push
out
and
push
movl
addb
test
xchg
das
xchg
test
push
adc
incl
pop
outsb
fs
xor
faddl
in
cmp
add
sbb
mov
hlt
mov
flds
adc
in
movsl
insb
test
cli
xchg
inc
pop
or
mov
xchg
insl
std
cmc
xor
jp
cmp
notb
lods
fimuls
sbb
and
sub
rolb
lret
dec
aaa
dec
int3
outsb
sub
stos
mov
in
lock
jo
test
fimuls
xchg
and
mov
out
mov
loope
test
add
leave
xchg
fisubrl
sbb
inc
xor
and
jecxz
and
adc
add
dec
mov
out
es
cmpl
mov
inc
jb
jb
stos
mov
insb
mov
mov
sub
mov
mov
imul
push
cmp
sub
lret
mov
test
icebp
push
lds
sub
push
mov
jbe
and
cltd
adc
stc
xchg
js
hlt
into
sub
and
cmp
mov
adc
jge
dec
in
daa
ret
repnz
push
and
cwtl
adc
scas
clc
push
lahf
out
es
adc
fbstp
adc
inc
push
mov
add
push
cwtl
stos
inc
call
sbb
add
pop
adc
mov
jb
pop
fsubs
pop
mov
sbbl
test
lods
jp
sub
xchg
sbb
std
nop
shlb
xchg
inc
into
inc
cmp
clc
jl
inc
xor
push
xchg
mov
enter
push
pop
outsl
mov
mov
cwtl
mov
cmp
sbb
roll
and
outsb
mov
sub
inc
int
sbb
jmp
int3
dec
adc
jns
gs
mov
iret
or
sbb
xor
insb
das
pop
xor
loope
xor
xchg
jb
sub
push
push
lods
mov
mov
or
pop
scas
and
fwait
add
ljmpw
dec
in
xor
out
push
icebp
sub
gs
adcl
adc
in
in
loop
jp
xlat
sbb
jmp
ret
xor
jno
clc
pop
ja
dec
push
outsl
push
push
clc
jp
loope
cld
mov
addl
jno
or
inc
pop
adc
repz
cs
arpl
sub
mov
in
sub
cltd
push
js
stos
lret
sbb
jb
mov
inc
fimull
mov
jbe
test
std
and
xlat
mov
push
dec
pop
sbb
mov
inc
cld
pop
test
shll
notb
mov
sar
dec
out
fsubrs
repz
inc
xchg
sub
mov
lret
ficoms
andb
add
out
cmp
pop
inc
xorl
pop
test
mov
mov
fidivrl
xor
andl
test
mov
dec
jne
xor
nop
sbb
pop
dec
imul
pop
inc
sub
ret
mov
jmp
cmp
mov
sbb
aaa
dec
clc
adc
in
imul
mov
mov
adcl
rorb
repz
out
pop
leave
mov
test
mov
add
mov
call
ja
jecxz
test
jo
inc
or
stos
fucomi
lds
xor
sub
cmc
fcomps
push
outsl
inc
imul
add
pop
dec
pop
pop
cs
xchg
into
or
add
jno
sar
in
xchg
aam
bound
pop
mov
and
mov
std
outsl
ret
xchg
shlb
aad
jne
imul
jae
xor
ja
mov
xchg
jmp
cmp
fisttpll
xchg
aam
cmp
mov
in
jno
cmp
push
fdivs
jnp
lods
fdivrl
jl
call
imul
fisttpl
adc
in
mov
inc
out
js
xchg
add
xor
xor
dec
cli
mov
mov
cmpsb
shlb
pop
sbb
add
test
pusha
inc
imul
sbb
push
movsb
cmp
in
inc
in
xchg
outsl
jb
mov
inc
roll
stc
or
push
mov
pop
push
or
pop
cli
inc
pusha
mov
xchg
cmpsl
push
adc
mov
lock
cmpsl
or
hlt
sub
push
lcall
nop
push
dec
inc
negl
xchg
out
mov
test
andb
mov
push
cmpsl
pushf
aas
inc
or
fs
addr16
adc
inc
es
inc
jge
inc
pop
test
and
imul
call
inc
ds
add
shrb
mov
push
ljmp
addr16
cmp
push
in
and
sub
fneni(8087
push
gs
rcll
push
lea
jmp
les
jge,pn
mov
mov
repz
scas
fildl
popf
test
xor
mov
addr16
leave
lock
xor
jnp
repnz
sbb
sub
sar
or
subl
stos
xor
fadd
aaa
add
or
mov
lods
mov
mov
out
idivl
iret
loopne
mov
push
enter
icebp
subl
xor
sub
jbe
subb
in
ss
fst
test
js
cli
mov
setnp
ss
inc
pop
js
vmwrite
mov
movsb
fldt
mov
and
push
insb
mov
std
iret
pusha
mov
jo
loope
push
rol
test
aas
cwtl
jbe
push
add
adc
das
xchg
push
mov
insb
cltd
adc
pop
ficomps
and
pop
dec
aad
pop
leave
push
addr16
jg
and
push
lcall
imul
xchg
push
iret
mov
mov
cmp
cwtl
aas
cmp
and
bound
sbb
push
add
insl
xchg
push
das
fmul
sub
mov
lods
inc
jns
adc
fwait
sbb
sbb
mov
fdiv
mov
out
fistps
mov
in
psubb
jecxz
cmpb
iret
inc
jp
pop
cmpsl
or
aad
push
pushf
mov
test
jl
xor
push
daa
sbb
ret
xchg
xor
lds
inc
xchg
xor
mov
rorl
lea
adc
int
test
fwait
push
xchg
push
and
cmpsb
and
lret
cltd
sti
mov
call
fcoms
xchg
stos
push
mov
mov
push
into
mov
pop
push
cwtl
fcmovne
inc
inc
into
jge
cmpsb
loopne
not
lods
and
add
je
les
adc
into
daa
int
jno
cmpl
and
adc
pusha
std
jne
xlat
and
les
mov
inc
mov
cmp
push
cmpsb
fistl
mov
lods
jbe
bound
shll
lea
fcomps
ds
scas
frstor
test
xor
mov
fcmovb
orl
aam
cmp
inc
out
test
push
jb
fimull
push
push
aad
sti
lcall
mov
or
jae
out
mov
cld
sbb
popf
lret
cli
or
mov
popf
and
decl
rorl
lret
or
or
lret
cmpl
iret
lds
pop
ret
mov
lds
test
movsb
sub
jnp
xchg
cmp
insl
jae
out
fisttpl
loopne
addb
xor
sarb
insb
sub
sahf
inc
push
scas
cli
jg
sahf
mov
xchg
mov
mov
add
push
inc
inc
movsb
sahf
mov
adc
fucomp
in
ja
push
sub
pop
push
inc
popf
test
inc
sbb
pop
xchg
mov
inc
and
jle
aas
pop
pop
xor
ja
test
jmp
lahf
push
xor
fwait
iret
enter
fs
xor
cmp
mov
inc
incl
push
sbb
gs
hlt
imul
mov
dec
mulb
das
sahf
les
movsl
mov
push
adc
sub
sbb
push
aad
cs
pop
and
cmpsl
ljmp
imul
mov
mov
clc
lahf
repz
js
clc
ljmp
push
cmc
mov
mov
add
xor
adc
mov
sbb
call
idivb
ficoml
mov
shrl
adc
int
pop
or
andb
les
adc
mov
xor
imul
orb
loopne
mov
xchg
lds
aaa
pop
sub
sub
test
jp
js
nop
test
pop
push
arpl
sbb
pop
pop
daa
lret
xchg
inc
mov
mov
lahf
aas
shll
fidivs
dec
pusha
test
push
test
xor
cmc
cmp
in
cmp
push
emms
movsb
cs
push
out
jge
jae
addr16
cwtl
xchg
push
xor
xchg
stos
and
sbb
movsb
or
adc
or
rcr
sbb
jae
pusha
icebp
mov
adc
insb
xchg
push
pop
leave
pop
aaa
mov
fcomi
negl
and
xchg
lcall
test
mov
adc
bound
or
stos
pop
out
mov
xchg
loope
add
test
xor
cmp
andb
dec
jbe
mov
cmp
int
mov
push
scas
add
fs
in
testb
add
loope
pop
loopne
jb
arpl
mov
clc
mov
insb
inc
xor
shrb
lret
mov
sbb
stos
cmp
int3
pop
xor
mov
and
decl
xlat
in
cltd
dec
push
pop
enter
mov
lret
mov
cmpsb
inc
and
in
xchg
test
dec
mov
out
jmp
ret
lret
inc
sbb
mov
xor
sbb
xchg
ja
ss
pop
mov
popl
in
rol
dec
into
mov
dec
cmp
push
lods
repz
out
ret
imul
push
add
test
jo,pn
or
xchg
shl
call
int
imul
fsubrl
fstl
ja
push
repz
hlt
push
aad
cmp
or
xor
jecxz
pop
ficoml
xor
scas
lds
daa
or
inc
fdivrl
cwtl
rol
shll
pop
and
icebp
mov
mov
sti
mov
stos
inc
xchg
negl
add
and
lods
mov
mov
mov
push
mov
cltd
out
cld
testl
int
jb
jecxz
add
incb
out
int3
fwait
loopne
or
pusha
in
inc
pusha
push
and
sbb
sub
sub
adc
mov
sbb
pop
sbb
or
push
test
icebp
stos
orb
dec
sahf
mov
or
jno
mov
cs
cmc
mov
rorl
mov
jo
cmp
std
sbb
dec
cmp
fnstcw
xor
and
jnp
std
pop
sbb
subl
push
sbb
mov
push
fbstp
flds
lock
roll
hlt
push
xorl
je
fcomp
pop
push
fbstp
repz
mov
fldt
sub
cltd
mov
add
cmc
in
xor
cli
lock
and
mov
dec
and
dec
sbb
inc
sub
insl
push
push
mov
lret
sarl
stos
ljmp
fisttps
mov
dec
incb
add
dec
mov
pop
mov
test
std
push
mov
data16
mull
inc
mov
inc
test
lds
xor
and
into
lea
adc
iret
pop
lods
movsb
popf
cmp
sub
push
out
ljmp
jmp
and
aas
inc
movsl
inc
mov
ret
das
jmp
sbb
fimull
cmp
jnp
js
add
sbb
popf
push
ret
aad
outsb
sbb
pusha
jp
lcall
mov
fsts
sub
jg
mov
cs
xor
add
ret
dec
loopne
in
mov
sub
addl
jp
repz
xorb
sbb
icebp
cltd
fucom
mov
cs
pop
sub
insl
jne
shrb
out
pop
test
xchg
add
enter
fcmovu
js
pop
inc
sarl
xor
or
test
lahf
push
cmp
idivb
lret
dec
negb
pop
pusha
mov
jnp
test
mov
fs
adc
xchg
out
in
or
fnstenv
inc
hlt
pop
scas
jle
dec
jae
jg
mov
popa
lcall
ljmp
jnp
cmpsb
jns
stos
mov
mov
sbb
movsl
dec
imul
mov
in
stos
cld
lea
das
push
pop
fistpll
jl
xchg
push
mov
int
pop
mov
gs
xchg
inc
push
fsubrl
dec
cmpl
sub
xchg
stos
fdivs
and
cmp
dec
imul
in
ja
xchg
or
xor
lods
dec
scas
push
jl
pop
jno
or
xchg
push
add
pushf
test
pop
movsb
lds
arpl
mov
imul
test
xorb
fldl
inc
add
inc
cmp
loope
lods
in
gs
inc
push
pop
xchg
mov
dec
icebp
ret
insl
adc
push
pop
sbb
dec
addl
cmovp
fmull
aad
inc
imul
adc
inc
outsb
jge
or
xchg
gs
or
push
and
sbb
dec
push
int
cmpsl
setb
bound
in
sub
movsb
mov
aaa
sbb
and
xchg
push
insb
xor
mov
and
mov
xchg
cmp
lret
popa
cmp
sbb
lahf
mov
lret
movntps
mov
ljmp
je
int3
in
and
and
js
cmpsl
andb
jae
dec
sub
add
daa
int
mov
subb
repz
out
add
or
roll
lods
adc
cld
ja
and
add
int3
fsubl
sbb
stc
or
or
cwtl
mov
push
xchg
and
mov
push
mov
cs
push
gs
clc
xlat
addl
push
or
andl
cmp
or
jb
jo
dec
dec
push
inc
repz
and
out
mov
pop
sarb
aaa
andb
sub
mov
in
es
dec
daa
ret
or
imul
cmc
jp
orl
xor
mov
jbe
sub
xlat
sub
lret
jle
bound
inc
pop
scas
sbb
popa
and
insb
aad
imul
shll
int
ja
xchg
repz
or
jno
addr16
push
xlat
cmp
push
mov
adc
fstpl
lds
in
push
mov
push
pusha
xlat
inc
pop
data16
mov
mov
pop
adc
pop
cmpsb
and
movsb
add
pop
cmp
stos
ret
lds
pop
dec
mov
dec
ljmp
xor
arpl
repz
and
rcll
iret
dec
pusha
push
lcall
stos
jmp
xchg
jmp
cmp
adc
jbe
sbb
out
dec
test
movsl
shl
nop
fdivrl
sbb
scas
or
adc
xchg
mov
adc
push
in
mov
in
mov
or
dec
lods
imul
sub
and
lds
mov
add
xor
addr16
pop
and
xchg
in
xchg
cmpb
mov
pop
sbb
sbb
ucomiss
jecxz
sub
stc
mov
dec
sahf
sbb
out
jnp
jp
clc
ss
call
lock
push
adc
mov
imul
lret
mov
out
or
test
shlb
lret
push
xor
mov
mov
push
add
add
xchg
cmp
sbbb
push
mov
push
lret
mov
test
mov
lods
enter
mov
lcall
or
pop
mov
push
push
fwait
ljmp
sti
inc
ja
xlat
jbe
imul
adc
push
jb
ljmp
sahf
ds
mov
out
fmull
inc
push
in
pop
ret
stc
scas
push
int3
jmp
in
ficompl
daa
loop
mov
cmpsb
jl
adc
jmp
mov
xchg
or
out
stos
sbb
movsb
jno
repnz
lock
jo
out
adc
adc
sub
xchg
lahf
mov
push
insb
ljmp
mov
stc
adc
mov
inc
arpl
fildll
push
negb
ja
cmp
sub
int3
into
add
pop
cmpsb
sub
insb
out
lds
stos
es
in
stc
xor
fcomi
fstpl
xor
mov
into
cmpsb
pop
in
xchg
and
je
repnz
ret
repnz
div
popf
fstl
nop
xor
cmp
aaa
stc
popa
mov
iret
push
movsl
ljmp
aam
scas
push
imul
scas
jmp
pop
mov
insl
add
add
shl
lods
lock
xor
cmp
aam
or
pushf
repnz
or
mov
sbb
sbb
les
mov
out
rclb
xor
jo
jl
push
sbb
mov
and
outsb
repz
rcl
add
xchg
xlat
ljmp
mov
cmpsl
cmpb
cmp
sarb
lock
lock
enter
xchg
jl
test
lods
lea
and
pop
jo
push
stos
outsb
test
xchg
lcall
inc
pop
les
push
out
ss
inc
ds
rol
push
mov
mov
or
and
mov
iret
pushf
roll
sbb
mov
sti
lret
jbe
test
jbe
xlat
or
push
push
test
insb
loop
jle
push
dec
pusha
jp
push
xor
sti
dec
fmuls
lock
adc
jge
loopne
outsl
jb
dec
out
jecxz
cld
push
lret
jmp
push
adc
decb
int
xor
rorb
out
mov
insl
mov
out
lds
jne
cmp
in
xor
xor
ficomps
sub
std
ret
or
loope
cmc
mov
aaa
call
add
in
pushf
rcll
aaa
clc
xchg
and
add
dec
cmp
jns
jne
cmp
lret
pop
sub
sbb
hlt
mov
mov
and
push
mov
mov
jb
cmc
mov
insl
or
cmc
cmpb
sbb
xor
lds
or
bound
mov
mov
add
int
add
rcll
lds
iret
inc
lret
scas
fcmovnb
mov
ficoms
sub
sbb
xchg
lret
out
fsubrs
ret
iret
or
inc
not
and
test
fstpl
push
sub
xor
aaa
popa
repnz
and
dec
mov
xor
jo
xlat
rep
lock
cmpsb
xchg
fmul
jg
push
or
ret
lret
add
stos
mov
xor
mov
adcl
cwtl
cmpsb
leave
lods
clc
jecxz
aad
xor
lock
mov
cmp
dec
inc
mov
test
lods
dec
in
push
pop
mov
xchg
cld
shlb
or
jle
mov
icebp
cmp
mov
pop
in
jp
ljmp
jecxz
mov
popa
sahf
es
sbb
es
xchg
aad
sbb
cmc
mov
dec
adc
jo
nop
popf
int
mov
jp
jg
popf
ss
scas
pmaxsw
scas
pop
or
pop
push
jnp
ds
orb
cmpsb
cmpsb
mulb
int
sub
fstl
or
pop
test
or
xorb
push
into
xor
fisttpl
dec
jmp
popa
ljmp
adc
xorb
inc
and
or
cs
and
sbbb
out
jl
or
sbb
cmp
add
pop
cmp
push
mov
movsl
pop
insl
les
daa
mov
inc
jmp
out
pop
out
imul
mov
xchg
ljmp
mov
dec
dec
loopne
xor
lods
test
movhps
pop
pop
fisubrs
mov
insb
mov
adc
sbb
sub
inc
dec
test
imulb
mov
inc
sub
inc
pop
stos
inc
pop
lea
sub
les
repnz
inc
sub
flds
jno
shrl
addr16
or
and
testl
insb
aas
jne
inc
inc
clc
mov
mov
jae
xchg
pop
dec
push
cmpl
fwait
rcrl
push
scas
gs
adc
pop
call
cmpsb
pop
mov
jle
sub
jl
xlat
or
cmpsl
popf
mov
bnd
insb
aad
lret
xchg
mov
add
jge
xor
test
popf
fidivl
nop
pushf
xor
in
or
mov
notl
sub
xchg
mov
sar
jb
test
test
aaa
cltd
xor
mov
ds
mov
inc
lret
jnp
out
jne
cld
pop
stos
mov
xlat
add
adc
sarl
shrl
inc
push
cmpb
repnz
movsb
ret
nop
xor
stc
aad
inc
and
popf
xor
out
add
les
jns
mov
out
and
xchg
mulb
dec
dec
fmulp
push
pop
mov
sbb
in
pop
push
adc
and
mov
jle
gs
or
loope
lods
dec
subl
and
ret
cmp
cmpsb
mov
fsubs
pusha
rolb
aam
cwtl
pushf
jnp
cmp
push
mov
and
jge
je
dec
mov
add
lret
stc
bound
data16
fucomi
xor
insb
mov
scas
mov
aam
call
push
jnp
imul
sbb
pop
js
or
insb
enter
xor
fildll
aaa
das
jb
mov
nop
adcl
test
das
mov
sbb
jge
pop
subl
scas
inc
outsb
sub
add
ja
inc
arpl
xlat
jne
xchg
insl
aaa
stc
inc
sub
roll
subb
sub
or
cwtl
lret
cmpsb
adc
jo
subb
leave
std
xor
enter
dec
cmpsb
inc
inc
xlat
lret
outsb
lds
hlt
inc
mov
shll
shl
push
add
repnz
popa
mov
leave
adc
sahf
adc
mov
rcll
xor
adc
push
push
cmp
outsl
testl
mov
jnp
in
loop
mov
insb
roll
xor
daa
pop
imul
flds
arpl
sbb
arpl
ret
fsubrl
adc
jns
mov
out
push
mov
sub
sub
das
cltd
iret
sbb
xlat
and
mov
jle
mov
aas
and
imul
cmp
xor
and
movsb
push
push
aaa
lds
jno
repnz
ret
pop
out
inc
mov
xchg
repnz
push
cmpsb
mov
pop
sti
incl
xchg
pop
out
push
mov
mov
dec
cmpsl
mov
ja
push
jno
imul
dec
jecxz
xchg
cmp
xor
lea
insl
lods
sahf
xchg
inc
adc
ret
test
leave
xchg
mov
pop
cmp
mov
fisttps
push
in
out
xor
xchg
shlb
cltd
loopne
es
fnstenv
or
out
pushf
jnp
mov
cmp
jl
aaa
or
ficompl
aas
push
into
stc
lcall
cli
stos
pop
push
xor
sbb
xor
movsl
insb
adc
roll
sbb
stc
dec
lods
xchg
inc
xchg
testb
jne
in
pop
xchg
mov
cmpb
push
mov
cvttps2pi
mov
and
pop
add
mov
or
outsl
enter
xchg
inc
std
dec
pusha
ret
jecxz
adc
or
cmp
pop
mov
inc
lods
xor
pop
imul
cmp
cmp
int3
mov
push
iret
jle
ret
and
xorl
push
imul
es
dec
push
sbb
inc
dec
les
pop
xor
cmpsb
or
or
out
pushl
clc
dec
jge
push
pop
adc
cmp
sbb
test
jnp
fimull
pandn
push
cmc
cwtl
mov
in
es
or
popf
shrw
cmp
cltd
inc
or
jb
add
sbb
lret
push
cmp
mov
dec
mov
pop
rolb
adc
push
mov
pop
outsb
rolb
iret
lea
cltd
sbb
testb
test
jo
sbb
add
xor
cmpb
push
mov
dec
lods
fsubr
cltd
mov
pop
inc
mov
push
mov
call
pusha
in
lahf
inc
or
inc
xchg
mov
mov
push
xchg
sub
into
adc
subb
js
rorl
iret
call
loopne
les
movsb
lock
xor
mov
mov
inc
ret
xor
cli
mov
jl
inc
les
clc
fidivrl
push
sub
add
push
fistps
xchg
jle
rcrl
pop
ror
movsb
mov
stc
cwtl
jge
and
or
xor
jp
jbe
xchg
aaa
fs
xchg
dec
or
int
es
push
leave
popa
outsl
push
je
mov
xchg
xlat
shrb
xor
xchg
dec
movsl
sbb
push
adc
fdivl
pop
add
ret
xchg
mov
pop
inc
les
cmp
cli
cmpsl
shlb
push
int
lret
xchg
out
pop
leave
xchg
lea
pop
pop
xor
mov
adcl
mov
or
rol
xchg
xor
stc
js
mov
pusha
insb
xchg
repz
jge
inc
clc
pop
jae
sub
test
cmp
pop
dec
jo
xchg
loop
push
ror
and
or
enter
cwtl
ljmp
mov
sub
pusha
mov
sub
in
mov
lods
add
loop
inc
or
sbb
outsl
mov
push
cld
sbb
mov
cmp
out
mov
cmp
push
pop
pop
out
imul
mov
adc
shrl
pop
pop
mov
or
push
lock
jmp
std
adc
or
cwtl
xor
jp
mov
jg
inc
jmp
fnstsw
les
arpl
xchg
xor
sbb
fimuls
lds
jo
cmpl
cwtl
fistpll
lods
push
cltd
push
mov
out
in
or
sub
add
shll
aas
and
aad
test
in
push
sub
xor
sbb
iret
lds
pop
or
stc
imul
outsb
in
mov
or
xor
push
mov
or
push
jge
inc
cwtl
dec
and
les
dec
outsb
call
push
clc
pop
das
pop
test
and
dec
mov
cmpl
pushw
imul
out
xchg
out
gs
js
mov
sub
lcall
jns
mov
lods
test
xor
scas
lahf
movsl
xchg
inc
pop
loopne
mov
add
jb
sbb
mov
sub
cltd
int3
mov
xorl
sbb
add
arpl
xchg
stos
push
stos
in
hlt
inc
daa
add
pop
mul
push
fdiv
divb
pop
scas
pop
std
xor
adc
fcom
inc
push
mov
add
dec
push
pop
sahf
mov
rorl
insb
mov
push
jno
add
cmpsl
sbb
mov
xor
and
mov
push
outsl
dec
add
out
lret
jne
inc
xchg
mov
fwait
cli
sub
fwait
jnp
push
ja
fs
add
mov
jno
jo
jge
cmpsb
adc
cmp
xchg
fsubrp
dec
cmp
sub
fdivrl
lds
sbb
push
test
insl
movsb
inc
enter
cmc
addr16
rclb
dec
jne
jno
ja
aad
call
divl
ret
cltd
movsb
cmpsb
imul
daa
inc
pop
jle
je
xchg
sti
flds
gs
int3
dec
sarb
lock
pop
mov
sbb
gs
call
push
pushaw
pop
xchg
cmp
mov
xchg
into
push
cmp
xchg
pop
sbb
repz
xchg
in
jbe
jl
xchg
sub
mov
lock
ds
das
sbb
dec
aaa
fsubl
sub
sbb
or
sbb
pusha
adc
imul
dec
into
jecxz
or
les
pop
aad
mov
sub
push
fdivr
sbb
mov
xchg
out
loopne,pt
mov
rorl
push
and
sbb
mov
push
pop
jle
xchg
test
je
shl
cmc
das
insb
mov
xor
cmc
and
dec
test
and
fwait
rcrl
add
or
les
cli
mov
dec
add
mov
mov
xchg
repz
dec
pop
cmpsb
xor
js
cmp
stos
push
imul
out
dec
iret
and
mov
mov
dec
shlb
addr16
mov
add
mov
ret
mov
sbb
jmp
cmc
aaa
dec
in
and
mov
aam
xor
pop
dec
add
in
lods
and
inc
add
jnp
pusha
test
fidivl
push
std
icebp
aaa
add
sub
cmpsl
dec
rol
xchg
push
push
and
cmp
xchg
push
add
mov
sub
or
les
cld
mov
xor
popl
std
icebp
or
adc
mov
sub
add
mov
stos
movsl
daa
sbb
aad
mov
mov
mov
ljmp
rcrl
sub
or
cmp
ljmp
cs
add
xor
imul
repz
xchg
push
adc
push
lods
mov
and
push
pop
xor
icebp
leave
pop
dec
sub
jmp
iret
into
add
lods
sbb
xchg
test
faddp
in
pop
mov
mov
xorb
adc
ss
cmp
scas
pop
decb
pop
loope
lret
cmp
lods
movsl
xchg
xor
push
shlb
xchg
sub
pushf
clc
rep
jl
repnz
adc
xchg
pop
push
div
lahf
or
inc
push
ss
pushf
sub
out
push
pop
stos
movsl
xchg
arpl
pop
imul
xchg
xor
cmc
pushf
adc
enter
cmpsl
fucomi
hlt
lock
xorb
pop
mov
outsl
dec
insl
jle
or
jp
ljmp
out
mov
ret
or
fldenv
jb
and
sbb
xor
into
outsl
xor
mulb
mov
cwtl
and
jecxz
push
sub
in
popf
pop
xlat
in
xor
out
pop
scas
lea
add
xor
lock
ljmp
sub
les
outsl
in
inc
sbbb
jnp
mov
dec
lret
xchg
or
xchg
test
sub
jg
loope
daa
test
stc
bound
mov
xor
inc
lds
mov
fidivrs
sub
ljmp
pop
sub
aas
out
xchg
or
call
mov
pop
stc
jl
roll
adc
or
xchg
mov
mov
mov
hlt
fwait
inc
push
pop
mov
mov
fstpt
ret
or
cli
insl
fwait
lahf
test
inc
repz
lahf
nop
mov
jo
inc
dec
in
loop
shrb
pushf
mov
and
shll
xor
psrad
jecxz
sbb
mov
pop
xchg
lcall
test
les
out
push
xor
popa
xor
mov
stos
das
mov
adc
add
jp
cmp
pop
adc
out
cmpsb
and
fisubrs
enter
ljmp
lea
mov
pop
sbb
pop
jne
jge
aaa
mov
push
push
cmp
jmp
test
fmulp
inc
data16
pop
add
test
cmpb
push
loopne
adc
fs
pop
cmp
adc
fiadds
and
and
lahf
daa
fdivrs
scas
mov
xchg
loop
into
push
push
mov
pop
mov
mov
shlb
loopne
mov
repnz
ja
adc
pop
mov
inc
jmp
daa
push
fwait
jbe
scas
xlat
lock
rol
jbe
adc
sbb
and
outsl
mov
lods
test
rol
push
shrl
inc
cld
pop
xor
insl
xchg
mov
cmpsb
cmp
ja
dec
adcb
imul
lea
push
jb
outsb
rolb
int
mov
dec
cmc
add
or
sbb
sbb
adc
insl
xchg
aas
sub
fstpt
or
inc
push
repz
adc
add
stc
int
inc
cwtl
cld
jns
mov
shll
dec
jg
divl
negl
cmpsb
stc
push
adc
sahf
lahf
daa
out
add
stos
jp
push
xchg
pop
jp
stc
fimuls
add
gs
js
cmpsl
adc
and
cmpsb
adc
jb
dec
pushf
gs
imul
push
cmpb
lea
mov
mov
leave
inc
push
sub
xchg
adc
dec
mov
adc
xchg
rclb
in
inc
pop
fnstsw
xchg
stos
cmp
insb
lahf
loope
and
fdivs
idivl
push
mov
and
mov
leave
mov
jb
sbb
mov
lret
test
mov
lret
cmp
hlt
outsl
pop
nop
pushl
dec
xchg
pop
movsl
or
mov
cmpsb
test
and
adc
ret
cld
jmp
ljmp
mov
test
adc
jecxz
shlb
push
out
repnz
inc
mov
xor
inc
inc
or
roll
cmc
stos
daa
shll
hlt
inc
mov
cs
les
inc
rorb
mov
lea
movsb
sbb
cmp
xchg
mov
clc
cmp
inc
adc
adc
stos
cltd
lods
repz
inc
in
and
dec
adc
loope
lcall
sbb
inc
cmp
mov
out
inc
jae
jg
jle
stos
add
mov
inc
testb
jle
xor
lahf
lods
testl
je
and
shl
add
mov
lods
xor
or
mov
bsf
movsb
push
push
rep
add
push
push
hlt
inc
jge
cmpsl
enter
jb
inc
fisttpll
fucom
lea
xchg
in
xlat
cs
xchg
pusha
and
ficompl
arpl
out
jmp
sbb
ss
xor
cmp
shll
mov
cmp
enter
repz
jbe
aas
add
pop
mov
imulb
pop
xor
pop
jbe
add
and
jne
addr16
popa
sbb
cld
adc
scas
push
dec
mov
pushf
pop
push
push
cmp
push
test
or
pop
xlat
mov
lret
sbb
insl
jge
imul
aaa
or
lret
pop
pushf
lock
inc
push
mov
xchg
sti
mov
lahf
cmpsb
dec
aam
xchg
test
mov
sar
cli
scas
dec
fisttpl
mov
dec
insl
inc
popa
jns
shl
fdivrs
pop
aam
push
xchg
xchg
sub
int3
mov
sub
push
nop
sub
mov
sub
in
pushf
clc
pusha
dec
adc
addr16
adc
scas
jl
sbb
push
xchg
shlb
icebp
sub
mov
pop
mov
movsl
shll
jns
cs
and
pop
pop
add
ret
aaa
cld
and
jp
ror
cmp
xchg
bnd
cmc
aam
cltd
mov
xchg
dec
xchg
adc
jno
and
cmp
adc
adc
mov
fidivs
bound
sub
nop
addb
xchg
cmp
cmp
lods
cltd
cwtl
pop
push
push
call
shl
jo
pop
mov
xchg
popf
fsubs
adc
dec
sub
in
jno
or
or
and
inc
cmp
mov
arpl
xor
stc
imul
loopne
stos
call
inc
mov
sub
mov
inc
jp
cmc
enter
mov
adcb
into
push
test
in
loopne
mov
gs
jnp
pop
ss
and
xchg
repz
test
iret
mov
push
and
inc
xor
jmp
or
cmp
xchg
xchg
push
or
xor
pushf
push
xlat
or
ss
shlb
nop
orb
add
xor
lods
mov
pop
adc
mov
cmp
add
lahf
dec
in
xchg
xchg
loopne
loop
leave
loope
inc
lds
push
pop
testb
jb
movsb
xchg
push
xlat
ret
mov
mov
cwtl
mov
ds
sbb
dec
push
in
cmpl
subb
and
xchg
leave
es
xlat
inc
hlt
lock
sub
mov
xor
cmp
daa
xor
imul
lds
and
sar
out
or
cmp
cwtl
push
out
call
aam
je
pusha
cltd
pop
add
sbb
inc
mov
inc
xor
aas
insb
xchg
pushf
jns
push
mov
push
lock
repnz
out
ret
fwait
cmp
push
adc
movb
xorb
mov
scas
int3
dec
push
mov
xor
sub
aam
sarl
test
cmp
aas
repnz
std
xor
adc
das
inc
out
lcall
shrb
adc
rcr
push
jl
in
jne
call
push
out
scas
mov
jg
inc
std
mov
mov
imul
dec
dec
pushw
es
cmp
out
pusha
sub
fs
les
push
sti
cld
xor
xor
in
test
xor
mov
jnp
es
sbb
notl
pop
push
cmp
jnp
notl
xchg
cmpsb
add
in
cmp
aaa
add
sahf
pop
in
inc
shll
loope
out
cmp
aam
int3
das
mov
mov
pop
push
clc
lcall
mov
mov
std
or
push
jmp
sbb
add
lret
int
inc
xchg
dec
pop
xor
in
mov
cmp
mov
arpl
push
pop
andl
sbb
mov
stos
popf
scas
fiadds
lahf
lock
and
adc
inc
push
leave
jle
aaa
aaa
test
cwtl
dec
movsl
pop
pushf
mov
cmc
test
aad
and
xchg
xchg
outsl
jne
pop
and
and
rcll
push
pop
inc
int
orb
jecxz
adc
and
lcall
je
push
out
xor
push
jg
xor
insl
mov
mov
cmp
hlt
push
mov
call
sti
dec
dec
sbb
mov
and
cmp
imul
clc
xor
rcll
mov
or
xor
push
fisubrl
addl
mov
xor
add
and
mov
addr16
ficomps
pop
mov
rcrb
mov
mov
int
mov
push
lds
clc
imull
pushf
out
inc
pusha
mov
xchg
jmp
clc
mov
cwtl
call
shr
jb
mov
test
dec
lcall
dec
adc
add
mov
xchg
fmul
jb
inc
in
sbb
xchg
fdiv
jmp
out
or
ret
dec
add
mov
inc
popa
mov
mov
insb
push
lods
pop
pop
jnp
push
and
inc
and
lock
or
cmp
in
xchg
xchg
sbb
cmc
cmpb
mull
fisttpl
scas
sbb
loope
loopne
hlt
popf
mov
insb
mov
cmp
jg
xor
jmp
mov
inc
shr
test
arpl
fs
push
xlat
in
xchg
and
cmp
movsb
adc
cmp
mov
fwait
lret
clc
xchg
jp
outsl
and
cmpsl
insb
add
add
sbb
inc
cs
push
arpl
mov
sbb
call
divl
pop
outsb
mov
push
xchg
mov
or
mov
imul
lret
xchg
rcrb
xor
and
lea
lret
rcrb
arpl
fwait
popf
sbb
xchg
imul
dec
lock
adc
pop
fs
cmp
xor
push
inc
dec
test
dec
push
nop
pop
add
lock
mov
dec
mov
pminub
imul
and
cmp
outsl
sub
pushf
notb
out
fdivp
cmp
enter
out
mov
leave
adc
imull
fcmovb
ss
inc
cmp
mov
cli
repz
dec
pop
gs
mov
pop
insl
jbe
xchg
imul
loopne
hlt
call
pop
lret
push
jae
xor
and
dec
cltd
push
pop
movsl
inc
mov
imul
out
mov
cmp
mov
lock
popf
push
fnsave
pusha
cmpsl
int3
mov
or
cwtl
imul
test
fcmove
push
sub
jb
rolb
sbb
mov
stc
out
jnp
outsl
sub
je
lock
cmp
fldcw
inc
mov
dec
xor
mov
lds
orb
inc
in
mov
adc
sbb
mov
sbb
cmc
mov
pop
cmpsl
sbb
adc
arpl
sahf
cmpb
fucomp
xchg
imul
mov
enter
fadds
xor
lods
adc
ja,pn
data16
mov
jae
pop
subl
pop
jae
xor
repz
out
or
dec
ljmp
mov
imul
jb
or
cmpsl
rorb
sbb
in
xchg
sub
mov
lods
sbb
adc
ret
inc
arpl
dec
imul
mov
aad
fisttpll
jno
or
dec
push
cmpsb
stos
add
stos
outsl
mov
mov
movsl
outsb
dec
lock
push
movsl
mov
cwtl
scas
dec
out
sahf
decl
mov
inc
add
xchg
xorb
jns
add
push
test
cmp
cmpsl
mov
sbb
hlt
cmp
hlt
dec
jg
sub
adc
imul
clc
or
dec
mov
stos
pop
cld
lret
push
pop
lret
imul
cwtl
or
xchg
fistl
xchg
push
test
mov
cmp
bound
adc
adc
mov
push
andb
mov
ret
aaa
arpl
lcallw
pop
pop
sbb
out
imulw
imul
insl
stos
pop
inc
mov
jnp
xor
sbbb
lret
jo
cmc
sbb
loope
std
pop
gs
jecxz
xor
mov
cmp
mov
push
mov
and
jb
inc
popf
jg
int
cmp
mov
mov
cmpsb
dec
out
mov
adc
in
inc
js
jb
cmp
ja
lds
sbbl
int3
scas
scas
add
leave
pop
out
pop
or
jae
pop
or
fbld
dec
pop
fsubl
mov
jbe
mov
and
cmpl
xchg
das
mov
mov
sub
andb
cmp
arpl
xor
ss
pop
mov
sahf
mov
xlat
xchg
cmp
push
inc
lret
push
in
leave
mul
jecxz
fnstenv
cmp
cmpsl
fildll
push
inc
cmp
into
xchg
popa
test
aad
cmp
cmpsb
xor
test
jae
or
fimull
cmc
and
repz
shlb
xchg
mov
outsl
push
xchg
out
or
cmp
sbb
loope
rorb
in
addr16
push
call
dec
fcoml
dec
jnp
pop
lgs
movsb
mov
arpl
dec
add
add
test
pop
sti
outsb
jmp
stc
stc
aas
inc
shrl
pop
sub
adc
repz
xlat
jg
xchg
loope
and
push
xorb
mov
in
fnstcw
mov
int3
mov
cmp
mov
hlt
rolb
push
scas
mov
dec
in
pop
add
sti
sbb
in
pushf
out
mov
sbbb
shll
std
mov
aas
test
push
push
fldenv
add
jno
adc
mulb
xchg
sub
fisubl
ljmp
xchg
sub
pop
jae
test
cmpsb
xchg
add
ds
inc
rclb
movsl
insb
jmp
outsb
cmpsb
movsl
mov
pop
arpl
lock
xchg
ss
dec
mov
xor
add
rclb
sub
jge
fsubs
mov
fadd
push
fidivrs
inc
rol
arpl
icebp
sub
jnp
and
push
mov
lods
pushf
loopne
test
out
jb
xchg
test
fnstcw
adc
mov
dec
mov
popf
insb
test
cli
inc
je
push
mov
xchg
icebp
jge
loop
inc
push
roll
jle
sbb
lahf
je
add
and
ficompl
loope
mov
or
test
fimuls
imul
fadd
xchg
jne
xchg
xor
out
mov
call
addb
jb
rcl
sbb
pop
cltd
jns
clc
inc
ret
nop
lea
cmp
mov
ds
inc
fs
xor
inc
jne
out
push
fdivrl
insl
outsl
or
incl
shll
pop
sahf
jae
outsb
test
push
in
js
popf
mov
test
imul
add
mov
lods
dec
hlt
inc
add
dec
arpl
mov
cld
adc
ret
sbb
push
dec
outsl
push
adc
jb
or
repz
jle
push
pop
fimuls
xor
sbb
dec
and
lcall
jno
pop
pop
pop
push
jl
repnz
insb
push
sti
cmp
push
lret
in
xor
ret
add
jae
lcall
lcall
loope
movsl
sub
out
xchg
mov
scas
lods
enter
scas
call
push
sbb
outsl
cmpl
or
mov
pop
out
jle
aam
jb
int
xlat
js
out
push
not
mov
push
lock
in
cmp
out
sti
rol
enter
sbb
mov
jae
mov
mov
jl
lret
cmpsl
xor
push
sbb
add
pop
sub
adc
pusha
and
out
iret
inc
ret
aam
cld
sti
movsb
fsubrl
jmp
push
jmp
bound
xor
pop
icebp
xchg
cmp
pop
pop
pusha
scas
mov
ret
push
pusha
aaa
xchg
inc
outsb
imul
mov
test
leave
stos
lcall
and
lods
xchg
cmpsl
std
push
mov
imul
jl
adc
mov
imul
mulb
jle
test
push
mov
ret
sbbb
cmp
and
rcr
mulb
mov
imul
dec
push
lcall
sbb
cmpsb
add
dec
lods
adc
sub
icebp
fcmove
xchg
pop
mov
push
mov
mov
dec
sub
fadd
mov
jo
push
fwait
sub
orb
insl
pop
sbb
cmc
push
add
out
or
xchg
adc
dec
xlat
pop
and
inc
add
mov
mov
ret
xchg
and
aad
hlt
push
adc
pusha
shl
iret
add
or
daa
dec
sbb
inc
mov
addr16
clc
aam
sar
push
out
push
xchg
mov
rcrb
mov
pop
inc
outsl
int
mov
fs
xor
std
rorb
xchg
jns
movb
sbb
dec
cld
out
sbb
sbbb
pop
jne
ljmp
sub
and
cmpsb
adc
adc
outsl
cmp
fsubrl
add
mov
mull
push
inc
fnstcw
xor
add
nop
and
mov
lea
sbb
xchg
stos
scas
pop
aaa
mov
mov
fwait
imull
gs
icebp
xlat
inc
hlt
les
ficoms
loopne
mov
xor
mov
xor
cmp
pop
cmpsb
scas
pop
shll
insl
sahf
aam
sub
mov
imul
sub
aaa
sbb
fwait
jns
outsb
call
test
sti
xor
adc
pop
or
loopne,pn
xchg
push
daa
cltd
int3
ret
mov
sbb
xchg
or
push
lret
mov
pop
adc
ret
xor
push
adc
adcl
jne
nop
out
adc
cld
jmp
pusha
incb
sbb
pop
fisubrl
or
rcrb
out
fidivrl
cmpsl
sub
shrb
add
adc
jnp
inc
int
xor
jle
or
push
sbb
sahf
lods
mov
stc
imull
in
sub
test
insb
xlat
jecxz
mov
push
mov
dec
jnp
and
push
gs
lret
mov
rol
outsb
inc
mov
ss
mov
xlat
adc
scas
cmp
movsb
xchg
data16
mov
mov
call
xchg
xchg
inc
scas
icebp
pop
dec
pop
insl
mov
xor
out
notb
adc
and
fscale
leave
jg
sub
jo
xchg
fwait
lods
cltd
mov
push
push
fwait
dec
mov
jo
fwait
inc
je
adc
daa
sbb
add
mov
sub
sbb
stos
cmpsb
cmpsl
jg
sti
mov
insb
movsb
mov
cmpsl
xor
out
inc
lret
cmp
clc
aaa
sub
rclb
lock
mov
sbb
xor
push
push
insb
sarb
test
and
cmp
fsubrl
adc
aaa
mov
xchg
lret
add
lds
mov
imul
lcall
daa
or
jmp
mov
mov
xlat
aam
test
daa
bound
jmp
mov
leave
jb
inc
gs
test
lock
adc
and
data16
jno
mov
jmp
jecxz
es
loop
dec
add
jge
call
dec
icebp
aad
add
push
mov
cmp
or
jle
test
sub
daa
jne
xchg
pop
pop
xchg
add
aaa
inc
and
lcall
xchg
gs
mov
loopne
add
fs
into
mov
dec
jl
pop
mov
push
in
paddusw
sub
mov
adc
jo
pop
rcll
cld
test
fdivrl
push
adc
arpl
mov
jne
out
sbb
test
loop
adc
lret
lcall
enter
push
add
gs
cwtl
push
dec
leave
push
push
inc
sub
cli
out
icebp
adc
adc
test
dec
push
and
test
or
sub
mov
cmp
jecxz
imul
imul
jb
mov
and
testb
mov
fwait
sbb
mov
jne
jmp
add
icebp
push
pop
jnp
and
jmp
cld
test
dec
and
sbb
cmc
dec
repnz
xchg
fstl
daa
repnz
enter
dec
negb
and
test
mov
sbb
mov
daa
pop
or
js
aas
rclb
lods
sbb
dec
add
push
sarb
pop
mov
mov
sbb
fwait
cwtl
cmp
mov
mov
push
cli
mov
pop
in
sub
shrb
pop
push
aaa
mov
decb
addr16
mov
outsl
push
xchg
test
pop
stc
aad
jg
fdivl
orl
cs
sub
sbb
pop
shlb
pop
mov
mov
mov
xor
leave
fisttpl
movsb
inc
popl
fisttpl
test
fwait
ds
inc
add
or
leave
push
xor
add
ja
xchg
xchg
add
dec
lahf
fstpt
add
xchg
test
cmp
push
xabort
mov
add
pop
inc
lcall
fisubs
mov
rcl
mov
clc
pop
dec
pop
outsb
nop
scas
mov
cltd
mov
es
loopne
jbe
cmc
dec
jge
xchg
dec
ffree
call
pop
imul
sahf
pop
data16
sub
in
dec
clc
or
inc
das
imulb
sti
outsl
mov
xor
xlat
cwtl
jns
adc
jo
sarl
mov
repnz
fimuls
push
push
sbb
imul
cmp
in
out
mov
push
lock
stc
xchg
pushl
sub
push
shll
rcl
mov
repz
jb
xchg
sti
ljmp
xlat
and
xlat
fsubrl
mov
jb
and
inc
ret
inc
xchg
push
mulb
das
mov
add
rorl
fwait
xor
popf
dec
sbb
cltd
jne
jb
push
push
jnp
aas
xchg
repz
pop
cmpps
jne
in
mov
pop
lcall
clc
xchg
movsl
rol
lods
sahf
mov
outsl
jae
mov
ret
mov
push
xchg
xlat
mov
popf
imul
insb
pop
stos
fwait
cmc
pop
jbe
pop
test
mov
aaa
add
sti
pop
or
pushw
stos
out
sbb
clc
pusha
or
test
stos
sub
iret
ss
jae
mov
mov
repnz
dec
icebp
jno
imul
ret
mov
sbb
shrb
negb
imul
mov
mov
pop
push
xchg
test
jl
jmp
inc
mov
push
je
imul
lahf
addr16
cwtl
mov
lock
neg
in
popf
add
push
insb
mov
xchg
rclb
xchg
pushf
lcall
dec
inc
lock
shrb
push
cmpsb
add
add
decl
add
pop
scas
xor
lret
sarb
dec
aaa
dec
push
inc
hlt
push
fs
xchg
or
cli
pop
out
dec
pop
mov
add
push
scas
sub
scas
sub
push
in
adc
out
jb
int
push
mov
cltd
in
cmpsb
jne
fwait
sbb
in
pop
stc
int3
aad
scas
test
push
fcmovu
loope
add
mov
loope
xchg
push
or
aam
imul
push
inc
fdivp
cli
fwait
mov
data16
aad
adc
pop
bound
or
leave
push
sbb
add
in
or
mov
jl
adc
pop
pop
scas
mov
jns
or
mov
cmp
andb
pop
cmp
fcompl
add
mov
xor
cmp
add
jns
mov
aas
add
ds
pop
adc
sets
inc
cmpsl
xchg
sub
imul
or
mov
fstpt
push
or
ss
adcl
rolb
pop
test
and
dec
pop
out
repz
xchg
test
je
sbb
leave
push
push
xchg
in
xchg
push
shll
mov
test
xchg
xor
pop
push
bound
add
add
mov
rol
mov
dec
ljmp
insb
pop
lods
call
out
pop
sarb
jae
cli
inc
lcall
xor
xor
dec
add
pop
push
lea
outsb
ljmp
push
out
jmp
pop
adc
add
loope
jb
xchg
push
xor
and
fists
mov
add
imul
int3
jns
mov
mov
out
xchg
pop
insl
pushf
mov
jne
xor
sti
jge
enter
add
push
pop
jle
std
in
xchg
pop
jp
pop
mov
and
or
ja
xchg
mov
arpl
xor
jb
jmp
inc
add
jns
leave
xlat
jbe
dec
push
cmp
pusha
ret
cmp
vprotd
neg
jnp
pop
xor
je
mov
mov
xchg
pop
les
or
push
push
in
das
and
pop
int3
popa
test
and
cld
mov
sbb
push
sub
mov
dec
shrl
xchg
push
daa
jns
jp
dec
inc
stos
popf
loope
xchg
xchg
xchg
pop
add
fs
sbb
sub
pop
mov
or
ja
sbb
push
loopne
mov
pop
icebp
and
jne
adc
in
pushf
push
inc
fsub
ja
in
aaa
lahf
lret
jp
cmp
cli
into
fs
dec
mov
jnp
dec
stos
cli
sub
incl
test
sbb
popa
xor
dec
aas
ljmp
out
bound
sub
mov
cltd
adc
xor
push
shl
and
xor
fstpl
xor
in
insl
jl
mov
fstps
inc
adcl
fwait
insb
adc
mov
int
iret
xchg
mov
fadd
or
mov
or
scas
inc
cmp
loop
testl
cmp
sbb
mov
dec
fstpt
and
cmp
pusha
or
sbb
fldl
xor
in
xchg
ficoml
and
sbb
test
inc
cmpsb
in
and
in
add
ds
jl
dec
fldt
sbb
je
sub
es
inc
call
xchg
cmpsl
jns
ja
rolb
mov
das
lods
or
xchg
mov
arpl
out
outsb
xchg
inc
orl
pop
push
pop
lahf
xor
stos
mov
pop
dec
pop
jle
lods
subl
push
dec
ret
nop
int3
xor
lods
pop
pop
lret
int3
mov
or
lret
fcos
cmp
dec
in
in
cltd
mov
lret
fcoml
in
mov
and
mov
mov
xor
movsb
std
mov
cmp
aam
movsl
mov
cmp
mov
jb
pop
popa
mov
lret
mov
jnp
push
movsb
cmp
nop
push
loopne
sub
aaa
lcall
arpl
test
lcall
adc
lock
or
xchg
sub
lahf
lahf
loop
movsl
mov
aad
pop
pusha
cmp
sahf
mov
inc
outsl
sub
call
dec
dec
jne
cmpsb
repz
cli
inc
divl
mov
or
fmuls
xchg
std
pop
int3
enter
lock
loopne
inc
lock
ss
sahf
pop
cli
out
xor
mov
int3
addb
fidivrl
sahf
mov
add
xchg
in
or
stos
xchg
push
pop
and
xor
icebp
ds
sbb
xlat
cmc
mov
push
jge
hlt
sahf
sub
sbb
push
sub
stos
inc
dec
xor
or
arpl
jg
dec
cmp
mov
mov
fidivs
mulb
push
sub
dec
test
mov
in
shrl
loopne
jns
shrl
fistpll
cwtl
mov
hlt
mov
fcomp
test
xor
fidivrl
fidivs
imul
jecxz
fists
cmp
cmp
or
ficomps
cltd
jbe
push
and
lahf
xor
mov
mov
icebp
cltd
cmp
add
repz
cmpsl
xor
notl
sbb
js
jae
pcmpeqw
jmp
push
add
test
mov
movsb
xchg
movsl
mov
or
cld
cmp
data16
xor
ss
das
pop
fcomip
lret
sub
xor
ja
lahf
sub
mov
cwtl
fnstsw
stc
jmp
pop
mov
mov
xchg
jmp
mov
push
nop
fcmovnu
in
sbb
into
push
mov
jb
stos
incb
sbb
aaa
xchg
or
test
jnp
insl
pop
dec
adc
gs
insb
rorl
add
sbb
push
data16
test
icebp
lret
in
mov
inc
jmp
js
les
pop
jp
sub
daa
outsb
adc
clc
enter
xchg
cs
mov
scas
fwait
push
fadd
sarb
cs
mov
jnp
sub
pop
adc
into
mov
aam
or
pushf
popf
sbb
cmp
in
loopne
sbb
fsubs
and
pop
jg
or
pop
cmp
lcall
scas
adc
xor
mov
pusha
cmpsb
push
or
insb
push
adc
lods
push
imull
orl
inc
orb
stc
dec
rcr
and
xchg
mov
inc
ret
bound
cmp
mov
out
out
jae
leave
mov
gs
nop
negl
jle
fildll
ds
adc
shrb
mov
pop
dec
pop
fcomp
imul
jae
mov
xchg
fsubs
add
fwait
out
lods
push
test
jnp
inc
mull
shlb
sub
push
icebp
fbstp
inc
add
in
pop
jnp
dec
dec
ds
and
mov
ds
mov
jle
mov
pop
divb
popl
cs
leave
popf
fxch
xor
xor
sbbl
sbb
jns
add
cmpsl
inc
or
inc
lret
inc
test
jns
iret
jno
rorl
cs
push
je
sbb
lret
cwtl
jmp
mov
imul
cmp
dec
jl
leave
xchg
test
mov
pusha
nop
aam
inc
jae
dec
lret
push
xchg
in
inc
dec
xor
lds
inc
xchg
shrl
dec
cs
push
sub
add
jns
inc
iret
movsl
addl
mov
cmpsl
in
jae
mov
mov
cmc
test
xchg
fsubrl
dec
sti
das
testb
pop
adc
fdivr
sarb
xlat
pusha
xor
sub
rclb
daa
push
mov
cwtl
pop
in
mov
ljmp
cmpsb
addb
mov
adc
ja
jbe
pop
ds
loope
mov
sub
add
xchg
fucomp
dec
scas
and
int3
in
jg
fwait
div
or
rep
mov
test
jle
cmp
mov
xor
scas
jecxz
mov
div
ret
scas
add
popa
and
clc
fisttps
xchg
mov
sub
sub
and
shrl
mov
xor
dec
stos
and
xor
pusha
or
scas
fucomp
mov
ljmp
push
jns
dec
jns
or
out
out
xor
and
jecxz
negb
call
mov
lahf
mov
or
jne
cltd
xor
push
call
into
lret
sbb
push
scas
cld
jle
lock
inc
and
pop
jne
scas
fisttpl
xchg
psrlw
dec
aaa
cmp
xorl
pop
adc
xchg
or
or
cltd
rcrb
aaa
sbb
mov
fldl
add
icebp
outsl
in
adc
mov
mov
js
dec
jle
inc
pop
inc
mov
iret
jp
mov
cmpl
fildl
xchg
aad
cmpsb
lea
sub
adc
push
loop
in
push
sahf
popf
test
dec
dec
push
mov
sbb
xor
aad
xor
punpckldq
cmp
aam
loope
mov
outsl
mov
fisttpll
incb
or
and
cmp
sub
dec
jno
mov
mov
shll
sbb
jl
xor
repnz
xchg
push
cmpsb
xchg
pop
sbb
fs
out
shll
fbld
dec
jge
jne
das
arpl
or
add
popa
inc
push
rorb
and
or
dec
xchg
cmpsb
xchg
fs
dec
movsb
jo
nop
pusha
iret
add
jl
je
shl
gs
scas
shll
push
out
pop
mov
jmp
jle
mov
xchg
cmp
inc
hlt
ds
into
push
fisubrl
mov
bnd
das
movsb
and
mov
int3
mov
sbb
mov
xor
loopne
imulb
cld
aas
xchg
loope
jo
and
jecxz
imul
adc
sub
addl
mov
inc
in
add
ret
jl
fists
arpl
pop
add
sub
btc
stc
mov
mov
xchg
xor
lea
or
xchg
outsl
mov
add
inc
stc
outsb
sub
inc
jecxz
fnstenv
cmp
xchg
dec
cmp
mov
addb
mov
gs
mov
add
pop
sbb
lock
add
jns
int3
xchg
pop
and
stc
mov
int3
insl
pop
cmp
jmp
xchg
mov
out
sub
enter
inc
pop
inc
or
push
jp
das
loope
mov
mov
jmp
cs
mov
lret
shrl
mov
xor
cmp
mov
mov
lods
xor
cli
dec
xchg
jne
inc
pop
clc
sbb
and
dec
punpckhbw
cs
je
xlat
fdivl
or
pop
push
movsb
cli
sub
lods
mov
jmp
xor
mov
ss
inc
cmp
and
icebp
pop
add
rcll
adc
jmp
sbb
mov
jl
aaa
push
iret
cmpsl
cli
cmpsl
into
dec
cli
mov
in
mov
mov
mov
xlat
lods
bound
pop
stos
subb
out
pushf
daa
pop
push
xlat
mov
xchg
dec
mov
shll
push
inc
shrl
mov
ljmp
add
mov
and
cld
outsl
inc
or
inc
rcl
mov
daa
push
popf
add
or
xor
or
arpl
daa
inc
or
mov
adc
repz
addl
inc
add
lds
inc
lahf
divb
jno
xchg
jo
cmp
inc
push
js
sti
dec
adc
pop
add
lret
pop
das
xor
jb
and
aad
daa
hlt
leave
xlat
lods
in
scas
fldt
mov
aas
scas
sbb
dec
test
fmull
dec
adc
aad
mov
andl
sbb
jno
inc
inc
push
mov
jae
fistl
adc
ret
loop
or
orl
pushf
repnz
loopne
pop
pop
cld
push
cmp
les
in
adcb
jno
sub
push
pusha
adc
xchg
test
enter
faddl
faddl
dec
imul
mov
scas
and
ds
cs
ret
lock
test
mov
inc
dec
movsb
sarl
dec
lds
inc
addb
inc
cmp
lods
cmp
in
pop
lret
inc
sub
adc
fimull
or
sahf
or
rcrb
or
popl
lcall
jmp
mov
scas
and
add
cmp
jge
into
xlat
ss
inc
or
push
fucomp
pushf
int3
xchg
inc
fidivrs
xchg
xor
inc
jne
pop
cmp
xor
cmpsl
movhps
daa
pop
stc
cmp
jbe
mov
bound
stc
mov
pop
cmp
mov
xor
jns
shrb
inc
jp
decl
pop
imul
jb
jge
jno
mov
add
stc
dec
push
psllq
adc
int
mov
mov
dec
cmp
lods
daa
pop
ljmp
mov
imulb
pop
enter
xor
into
jl
xchg
mov
pop
fwait
pop
sbb
movsb
sbb
xor
dec
leave
nop
enter
and
clc
dec
subb
scas
ja
loopw
sbb
jl
mov
push
push
fmull
or
cltd
in
sub
sbb
push
xor
icebp
and
push
loope
jnp
cmp
adc
out
add
cltd
enter
sub
and
insb
fisubs
jbe
dec
arpl
xor
ljmp
sub
mov
push
mov
add
jae
sbb
ja
mov
fiadds
xchg
adc
andl
imul
xchg
pushf
xlat
dec
fcompl
ds
icebp
sub
test
xchg
mov
insl
xor
jp
insl
icebp
ljmp
mov
pop
dec
stos
rcrl
cs
stos
jge
or
xor
mov
testl
shr
xor
sbbb
push
outsl
dec
icebp
xchg
loop
add
leave
inc
and
fists
outsl
mov
js
ljmp
test
push
adc
inc
fisubrs
aam
inc
dec
mov
outsb
js
data16
sarb
xlat
cmpsb
xchg
aad
ds
mov
pop
testl
cmp
sub
jl
int3
cmpsl
dec
push
pop
push
sbb
shl
sub
gs
rcll
xchg
sbb
sbb
cli
stos
and
mov
dec
iret
ja
pop
mov
inc
ljmp
dec
pop
add
adc
mov
insl
jle
pop
xchg
imul
outsl
call
dec
pushf
push
jo
dec
sub
push
cmp
cmp
jns
xor
sub
mov
in
xor
mov
jo
and
out
dec
decb
or
cmp
fidivrl
lds
outsl
jecxz
test
es
in
addr16
scas
mov
pop
enter
rorb
adc
mov
xchg
sub
js
cmp
push
leave
push
inc
les
fwait
pop
rcrl
icebp
mov
pop
inc
mov
xor
push
or
mov
aam
push
push
inc
or
dec
add
movsl
imul
aad
sbb
mov
and
test
lock
stos
pop
or
push
mov
pop
stos
pop
add
imul
bound
xchg
cli
push
imul
add
stos
mov
adc
lods
cld
lcall
call
outsl
pop
xor
in
mov
sahf
loopne
dec
fsubp
aad
clc
bound
scas
and
dec
lods
mov
test
test
stos
movl
and
aam
lret
cld
pushf
mov
push
call
ret
cltd
in
adc
outsl
add
push
pop
repz
sub
out
outsb
pop
mov
popa
ret
sbb
stos
push
sbb
adc
fiaddl
stc
pop
push
pop
rorl
inc
loop
jmp
pop
add
mov
mov
cmpsl
mov
shr
mov
and
add
sub
add
sub
mov
cmp
mov
adc
lcall
inc
shll
in
aad
dec
mov
push
cmp
stos
addr16
add
jmp
or
and
xchg
sbb
lahf
mov
mov
xchg
ficoml
lods
jnp
fbstp
xlat
in
mov
out
cmp
clc
in
fisttps
cmp
jp
addr16
and
dec
mov
dec
jae
sarb
cltd
xor
imul
dec
xchg
insb
aas
ja
xchg
imul
sub
mov
outsb
inc
add
sub
movsl
dec
xchg
dec
mov
movsb
clc
gs
stc
pcmpgtb
jnp
sub
enter
sub
lods
ja
pop
push
and
push
aam
mov
mov
dec
and
out
imul
pop
ret
jo
push
cmp
sahf
inc
mov
pop
fimuls
inc
lcall
in
jb
cmc
or
sahf
movsb
fsubs
hlt
mov
rcr
mov
sbb
pop
adc
lds
push
dec
pop
ret
cmp
mov
popf
fsts
std
fwait
mov
je
shll
sub
in
or
add
stos
jne
andl
dec
inc
mov
out
xchg
sti
push
and
popf
loopne
sti
jle
dec
xchg
fstps
push
sub
mov
in
mov
stc
and
adc
fcoml
mov
mov
mov
sub
cltd
mov
insb
push
popf
ljmp
lret
xchg
icebp
sbb
dec
test
jae
aad
xchg
fmuls
call
lods
test
shrl
mov
in
xchg
cltd
pop
hlt
mov
data16
subl
jbe
jp
dec
out
mov
inc
push
pop
jecxz
cmp
ror
insl
aaa
push
scas
pop
and
jne
push
push
fld
fprem1
push
lss
xchg
push
cltd
push
repz
inc
jns
das
add
xchg
cmp
enter
mov
arpl
mov
and
movsl
out
repnz
aaa
sbb
or
movsl
shl
push
movb
push
mov
js
sbb
push
mov
pop
insl
loope
push
es
addr16
jp
sub
or
xchg
leave
insb
lcall
ljmp
mov
test
mov
imulb
in
add
push
mov
cmp
adc
int
inc
sbbl
push
roll
movsl
and
es
lods
push
into
dec
cwtl
das
and
loope
mov
mov
adc
lret
add
xor
xor
sbb
sub
enter
inc
aaa
nop
movsl
pop
inc
imul
xchg
or
int
das
mov
mov
imul
cmp
stc
int3
add
stos
jp
test
movsl
in
aaa
shrb
mov
shll
or
xchg
clc
add
or
div
adc
xor
movsb
or
xchg
xor
aaa
adc
loop
stc
fmuls
negb
scas
sbb
and
mov
jge
push
mov
mov
or
mov
dec
cmp
xor
orb
aam
and
xchg
sub
bound
mov
leave
or
push
lret
test
test
rcrb
cmp
dec
or
std
clc
sub
in
xchg
pop
xor
dec
push
stos
xchg
test
ret
repnz
jo
jbe
popf
cmp
jp
int3
xor
dec
mov
int3
fdivrp
fs
stos
pop
push
out
sbb
rorl
ret
dec
pop
enter
inc
cli
push
sahf
sub
push
cmp
scas
mov
push
sbb
mov
fdivrl
aaa
jg
sti
clc
dec
test
sbb
pop
jns
sub
test
fcmovnbe
mov
xchg
push
add
movsb
xor
test
sahf
adc
stc
mov
aam
xchg
dec
push
in
jnp
xchg
lret
andb
cmpsb
ret
cmp
cmp
rorl
xchg
push
pop
xor
xchg
out
out
jp
mov
jge
and
scas
rcrl
lahf
icebp
stos
mov
fstpl
ret
mov
adc
into
push
iret
jo
push
pop
ret
pop
cmp
and
into
adc
loopne
dec
xor
jb
lahf
mov
cmpsb
sbbb
jae
pop
test
js
addb
cs
inc
sub
cmpsl
icebp
cli
push
push
pop
repz
jno
shll
sti
int
push
shlb
cmp
jp
push
imul
adc
call
pop
and
mov
ret
push
xchg
fs
dec
cmp
cmpl
xor
out
loop
mov
repnz
rorl
xchg
dec
mov
inc
test
mov
mov
sub
dec
push
inc
int
and
andl
push
dec
mov
or
pop
sbbl
add
push
fadd
mov
mov
pusha
xchg
bound
lret
add
and
and
jae
clc
adc
cmp
stos
std
pop
out
mov
dec
dec
ret
mov
aas
xor
mov
mov
in
mov
cld
loopne
or
adc
pop
in
pop
dec
push
push
cltd
add
jp
inc
xor
adc
xor
cld
insb
fbstp
push
popa
aaa
jg
mov
cs
jl
jae
cli
aad
pop
jb
cli
lret
push
movsb
sub
adc
dec
xchg
in
out
xlat
sbb
popa
addb
ja
sub
pop
dec
mov
sbb
mov
pusha
cmp
aas
scas
lcall
and
push
sbb
fcoml
sub
push
ret
lea
divb
pop
into
mov
mov
mov
inc
xchg
inc
jecxz
jbe
pop
mov
test
subb
bound
jge
lea
xchg
adc
push
lods
pop
fistps
or
mov
jg
xor
leave
xor
ds
push
daa
and
xchg
and
adc
pop
push
mov
rcrl
dec
dec
dec
jo
mov
add
xchg
push
imul
or
rol
sub
xchg
sub
cmp
roll
jp
sub
mov
repz
inc
dec
sub
hlt
add
sbb
inc
mov
push
jo
icebp
repnz
push
pushf
movsl
mov
lret
xchg
jl
sbbl
pop
sbb
jge
rclb
xor
pop
in
outsl
xchg
repz
dec
arpl
add
xor
inc
jae
cmpsb
inc
insb
mov
or
jnp
loop
dec
fsubs
dec
repnz
mov
jne
cld
into
inc
fisubrl
xchg
jb
lahf
shrb
mov
sub
dec
mov
rcll
movsb
xor
imull
cld
mov
add
xorb
std
pop
jns
stos
int3
fwait
inc
rclb
dec
pushf
sbbl
push
dec
mov
sti
dec
pop
mov
cmp
out
cltd
outsb
cwtl
sbb
push
and
push
adc
fisttpll
sub
dec
mov
aad
nop
daa
xchg
cmp
jecxz
push
mov
enter
cmpsb
pop
pop
sbb
adc
xor
adc
clc
mov
dec
jbe
cmp
sbb
scas
stc
xchg
cmpsl
or
sbb
sbb
cmp
mov
adcb
jle
mov
in
inc
sti
ljmp
jecxz
cld
adc
and
repz
mov
add
aad
lea
fisttpl
xor
mov
xchg
mov
into
cld
stos
std
jge
in
data16
add
jmp
pop
mov
loopne
lret
mov
fs
test
sbb
sbb
cmc
sub
test
and
push
in
mov
cmp
mov
dec
addr16
push
jle
inc
popf
push
leave
or
cmp
push
xor
dec
lahf
rcll
jmp
xchg
lock
mov
sub
aam
xor
dec
repnz
inc
in
or
push
test
xor
and
ret
mov
mov
hlt
jle
xchg
in
sub
lret
stc
mov
popa
out
dec
jmp
xor
shrl
cmp
inc
push
pop
lea
pop
jle
or
fiadds
push
cmpsl
lea
jmp
lcall
dec
fwait
sti
mov
push
xchg
push
xchg
lods
jle
cmp
mov
mov
adc
sti
sbb
pusha
dec
stc
imul
xor
test
aaa
push
pop
in
dec
outsl
pop
cltd
sub
xor
jp
cmp
les
mov
push
in
psubb
movsb
das
mov
rorb
cld
and
add
inc
insl
imul
call
ficompl
mov
stos
add
mov
lahf
popa
in
out
adc
fst
sahf
daa
iret
mov
aam
clc
cs
jno
fisttps
sbb
mov
push
sub
mov
pop
adc
adc
push
popf
imul
pop
pop
outsb
ss
or
test
sbbl
insb
push
inc
lea
and
add
test
sti
ficoml
jp
subl
data16
test
add
adc
adc
xor
xchg
test
in
roll
sub
outsl
rcl
stc
es
push
add
std
sub
cmc
lret
sub
push
mov
mov
in
popf
icebp
xchg
xor
nop
adc
enter
adc
mov
outsb
cmpsl
mov
adc
adc
mov
sahf
dec
xor
mov
int3
hlt
or
xchg
mov
mov
cwtl
and
jg
das
andl
dec
enter
push
and
mov
movsb
insb
lods
push
in
pop
adc
xchg
xlat
fisttps
bound
lahf
test
push
popf
test
push
inc
xchg
imul
pop
sub
movsb
enter
idivb
and
fbstp
lcall
xchg
sbbb
mov
cmp
xchg
stos
mov
mov
xchg
jl
mov
sub
imul
cmpsl
movb
sarl
pop
fcom
lods
dec
inc
sahf
aas
int3
or
adc
xchg
adc
jmp
psadbw
cwtl
repnz
sbb
jno
stos
loopne
sbb
inc
pop
dec
insl
sub
mov
testl
cld
ss
adc
cmp
cmp
fisubrs
mov
mov
stos
ret
pop
arpl
sbb
lods
fstl
loop,pn
fsubp
ljmp
dec
sbb
punpcklwd
aam
mov
insb
xor
scas
sbb
jno
rep
test
adc
cld
outsl
lock
mov
dec
scas
stos
add
loop
adc
xchg
push
ret
xor
sbb
push
cs
lods
test
sub
dec
mov
pusha
xchg
jb
adc
cmpsb
push
sub
fsts
mov
ds
lahf
push
lret
cld
cmp
loop
xor
subl
sub
push
out
enter
pop
mov
sbb
add
lahf
push
dec
es
dec
mov
inc
or
add
add
sbb
pop
cmp
push
push
mov
add
pop
push
sub
les
andb
cmp
inc
or
xchg
jg
test
sti
hlt
mov
dec
lea
cmp
gs
aad
pop
pop
clc
sahf
je
aad
addr16
mov
in
xor
push
and
push
mov
int
add
adc
inc
test
fcoml
push
btr
icebp
shrl
and
lock
scas
push
mov
pop
sahf
nop
pop
add
shlb
mov
pushf
add
fdivl
push
repz
iret
mov
in
cmp
mov
sub
or
xor
stc
dec
inc
push
aad
push
cmp
adc
mov
test
fs
jae
pop
pop
lods
add
popf
push
cld
xchg
mov
pop
lods
nop
sbb
inc
jae
push
mov
test
jns
xchg
int3
push
add
mov
cli
adc
leave
arpl
jno
imul
repnz
cmovbe
arpl
and
popf
jb
cli
xchg
sarb
mov
mov
and
xor
test
adc
sub
adc
push
inc
nop
movsl
in
or
fldt
outsb
sbb
shl
aas
mul
call
punpckldq
mov
jecxz
int
es
xchg
pop
out
mov
xor
cmpsl
aad
test
add
nop
or
xchg
lret
mov
test
adc
push
push
pusha
fistl
lret
and
mov
mov
cmp
clc
faddl
jmp
mov
inc
out
addr16
jle
loope
pop
xchg
bnd
int
xchg
outsb
lock
aas
popf
lods
push
mov
movsb
jbe
jnp
scas
jnp
mov
pop
lret
mov
adc
fs
jne
add
cmpsb
cltd
adc
push
mov
scas
test
sahf
jl
sub
adc
gs
ret
sub
adc
test
mov
or
xchg
in
jecxz
sub
xchg
rcll
iret
sti
sbb
add
jnp
sbb
push
enter
lods
andb
add
xchg
jmp
sub
xor
mov
xchg
out
xchg
mov
ljmp
out
dec
loop
cltd
stc
mov
xchg
cltd
icebp
add
xor
into
and
rcrl
pop
jae
mov
xor
push
iret
insb
dec
fsubs
lret
jmp
lods
push
ret
insl
or
push
iret
inc
cmpsb
outsb
push
cs
mov
xchg
mov
add
fldcw
lgs
loopne
jb
mov
ds
mov
xlat
mov
fstpl
inc
xchg
pop
mov
jne
js
pop
lret
cwtl
out
jns,pt
shr
inc
bndstx
stos
lahf
aam
movsb
stos
add
jno
push
loop
out
bound
and
pop
outsb
xchg
fs
mov
rcll
nop
lcall
inc
or
push
push
inc
mov
sub
xor
jbe
lock
mov
sti
push
int
lcall
inc
inc
push
adc
fdivrs
and
lea
or
push
or
jb
or
xor
and
fdivrl
push
dec
pop
shrl
add
test
pop
lahf
inc
pop
or
movsb
push
in
jg
cmp
repz
mov
push
leave
mov
mov
push
sarb
mov
jg
aam
and
sbb
aas
mov
jnp
push
rorb
arpl
adc
adc
enter
jns
xchg
in
rol
loope
push
in
mov
or
mov
jae
lds
mov
popa
int
pop
test
xor
pop
mov
repz
movl
ljmp
fstl
pushf
or
rorl
cltd
jmp
popf
xor
out
ret
xchg
loopne
pop
mov
into
aam
out
cmc
dec
mov
mov
pop
mov
or
pop
and
pop
mov
mov
mov
xchg
rorw
mov
pop
or
push
mov
mov
rol
insb
xorb
lahf
push
sbb
call
adc
test
and
lods
dec
push
mov
adcl
pushf
jl
or
sbb
xchg
and
sbb
leave
cmpsl
movsl
push
or
inc
pop
jecxz
push
das
push
inc
cmp
sub
lods
xchg
jbe
and
popf
or
loop
in
lahf
sub
sub
add
call
mov
xchg
jmp
sahf
dec
xchg
cmp
xchg
lahf
adcl
xchg
out
loop
ljmp
dec
hlt
adc
or
rcr
scas
mulb
push
mov
nop
call
repnz
sbb
nop
pop
cmp
fdivrl
repz
adc
inc
mov
mov
jne
cmp
fstps
jns
orb
push
push
cmpsl
fisttpll
add
mov
ret
adc
push
lods
push
lret
enter
sbb
leave
popa
in
mov
ret
mov
dec
fsubl
xor
jmp
add
stc
xchg
rcrl
fwait
push
mov
sbb
xor
pop
push
and
icebp
test
mov
push
out
call
mov
cmp
mov
pop
scas
lret
rclb
fidivl
dec
in
jno
dec
repnz
cmp
and
mov
idivb
push
pusha
shrb
ficoms
cli
cltd
test
xor
add
push
cs
int
negl
and
popf
nop
inc
scas
jmp
jecxz
mov
fwait
out
dec
test
movsl
inc
jg
in
and
hlt
push
mov
mov
fisttpll
jg
pop
sub
out
sbb
lret
cltd
pop
push
push
pop
xchg
mov
fldl
lret
test
scas
in
xchg
mov
or
xchg
dec
mov
push
insb
jb
les
nop
insb
push
shlb
enter
insl
test
jg
xchg
pop
jge
sti
adc
sar
cmp
leave
lret
xor
sbb
sbb
or
lcall
ljmp
scas
test
lret
lods
and
xchg
inc
sbb
cmp
mov
pusha
mov
out
ljmp
push
xor
dec
add
add
add
cmp
cmp
test
out
cwtl
repz
lea
jnp
push
pop
test
sub
mov
call
fcoml
sub
lahf
out
jl
je
pusha
inc
pop
adc
sbb
imul
aam
shlb
mov
gs
bound
sbb
jne
xchg
cmp
nop
std
je
xchg
sub
pop
js
loopne
mov
mov
jns
mov
sub
in
pop
mov
cwtl
jmp
fldenv
daa
mov
nop
pop
sbb
xor
push
subl
pop
dec
xor
fnstsw
shl
jge
ret
aaa
insb
clc
inc
ret
pusha
xchg
stos
dec
jnp
fs
mov
xor
stos
push
mov
xlat
ss
lcall
clc
cmp
es
imulb
xchg
add
test
xor
aas
fadd
fstl
ja
push
dec
mov
pusha
jo
outsb
xor
gs
mov
test
andb
js,pn
in
cmpl
in
add
arpl
imul
push
dec
pop
cltd
imul
inc
out
imul
sub
cwtl
mov
cmpsb
lods
js
imul
xchg
pop
and
stos
int
or
inc
ficomps
inc
arpl
jmp
mov
lods
mov
pop
lods
push
cmp
xadd
shlb
or
sub
addb
mov
fldt
test
inc
scas
xchg
adc
xchg
dec
loope
shll
xor
pop
xor
in
and
or
repnz
xchg
lahf
and
adc
out
add
inc
cli
mov
jge
imulb
dec
sub
daa
test
dec
sahf
mov
or
addb
sti
sub
scas
pop
mov
mov
pop
lods
xor
in
cmp
fwait
cmpsl
lock
lahf
push
xchg
inc
addb
pusha
je
repz
lods
pushf
mov
sbb
and
lea
aad
inc
mov
mov
lods
sarb
add
and
or
xchg
dec
mov
adc
xor
leave
es
push
scas
sub
ja
mov
loope
or
sahf
imul
sub
aaa
xlat
loop
sub
adc
or
push
imul
imul
or
jb
or
jl
sub
popa
push
push
xor
pushf
out
xor
cmp
lret
test
insb
insb
and
jge
adc
test
std
cld
sub
inc
mov
ror
cwtl
jl
lahf
cwtl
rolb
inc
imul
in
cltd
sbb
movsl
cmpsb
sarb
stos
popf
dec
clc
imul
test
scas
cmp
mov
push
in
push
out
adc
jge
aaa
mov
inc
or
loop
mov
testb
outsb
out
dec
push
pop
mov
mov
add
lods
pop
and
mov
in
xchg
adc
pop
mov
mov
add
or
lret
xchg
sbb
jecxz
inc
test
notl
jle
push
pop
sub
sbb
or
sbb
bound
iret
xchg
and
jno
sbb
xlat
jge
mov
enter
rcll
mov
add
pop
stos
mov
push
jne
testl
fistpll
or
cmp
cmpsb
xchg
jns
adc
les
jnp
pushf
sbb
mov
decl
xor
gs
repz
mov
sarb
pop
sarl
mov
lods
dec
push
imulb
dec
mov
jecxz
lret
push
dec
mov
cs
xorb
and
pop
pop
sbb
xchg
pusha
fstpt
push
xchg
adc
roll
or
dec
cmp
nop
sub
dec
clc
cwtl
call
pop
xchg
lret
ficompl
xchg
mov
insl
es
adc
adc
xor
repz
and
jb
js
or
bnd
pop
fstpl
cmp
sbb
enter
cmpsb
imul
and
test
mov
add
div
outsl
xchg
pop
push
cmp
mov
fdivrl
push
or
addr16
mov
stos
push
or
test
fcomps
mov
xchg
icebp
lret
and
imul
mov
lret
pusha
rcrl
xchg
pop
mov
insl
jns
mov
rolb
and
icebp
lcall
in
xor
fsts
xchg
inc
push
dec
xor
jns
pop
jmp
xchg
mull
es
jle
mov
pop
pushf
jg
xchg
push
out
jno
sub
and
add
pop
inc
cmpsb
call
cmp
fstps
sbb
in
stos
pop
lock
push
cwtl
jno
and
andb
les
add
jb
push
mov
icebp
mov
pop
push
mov
mov
inc
push
xchg
test
rcll
ficompl
or
idivl
dec
pusha
sub
test
sahf
sbb
push
mov
stos
insl
add
xlat
sub
or
xor
out
or
dec
inc
add
cs
jae
test
out
lods
es
mov
sbb
jne
pushf
and
lret
repz
dec
test
loopne
cli
dec
xor
fbld
ds
sarl
pop
mov
adc
mov
aam
xchg
mov
or
icebp
lahf
fwait
aaa
pop
adc
loop
xchg
adcl
sub
enter
or
adc
push
mov
arpl
loope
inc
int3
jmp
cli
and
adc
mov
shufps
or
or
mov
in
dec
mov
cmp
sbb
fcoms
shll
les
xchg
adc
cltd
cmp
jno
icebp
push
lds
xchg
or
xor
jecxz
mov
add
into
push
dec
insl
adc
or
cmp
in
push
sti
push
lods
and
pause
mov
std
cmp
and
sub
ds
divl
addr16
push
sub
leave
sbb
mov
rolb
add
stos
fbstp
mov
mov
addr16
ja
inc
push
outsb
aaa
fsubrl
sbb
loope
loope
clc
push
mov
jmp
mov
pop
in
push
dec
jae
es
sub
aam
push
inc
sbb
dec
and
outsb
pop
insl
in
into
sahf
mov
jnp
int
cmpb
mov
fadds
fdivr
dec
sbb
mov
arpl
ja
lcall
in
fcoml
mov
jecxz
into
mov
jae
mov
sysexit
pop
and
mov
cmp
jle
ss
xchg
jne
ret
cmp
retw
std
inc
pop
scas
mov
xchg
mov
jg
sbb
bound
int
out
mov
in
dec
out
dec
dec
test
sbb
add
addr16
push
fwait
push
or
sbb
push
aas
out
or
outsb
out
mov
mov
add
mov
in
or
fisttpl
sub
and
dec
test
add
jmp
icebp
pop
sub
negl
mov
inc
inc
push
push
add
jg
in
xor
leave
inc
jno
sti
outsb
out
jle
sub
xor
inc
add
sub
fucomip
fcmovne
xchg
pop
cli
ret
bound
and
test
dec
inc
fistl
adc
outsl
cmp
jno
sbb
xor
xchg
xlat
cs
and
arpl
movsl
or
jecxz
mov
leave
mov
or
aam
add
std
es
imul
push
std
dec
cmp
xor
dec
or
lcall
daa
insb
fs
push
fwait
loop
xchg
in
aaa
lock
cmp
xchg
mov
insb
or
jnp
mov
mov
pop
jns
mov
fildll
repz
mov
leave
xor
or
mov
sbb
xorb
insl
and
leave
cltd
mov
jbe
jae
inc
mov
lret
add
shlb
cltd
fwait
daa
xlat
sbb
sarb
mov
jle
mov
sub
sub
ja
mov
and
test
shlb
lcall
in
pop
jecxz
sbb
cmp
jbe
aaa
mov
addr16
inc
mov
xchg
cmc
decb
or
push
mov
xchg
scas
xchg
cmpl
ret
lahf
testb
ffree
dec
js
sub
jnp
mov
push
rclb
push
sub
int
mulb
leave
call
cmc
inc
pop
jo
lds
jmp
lods
daa
clc
pop
out
push
call
sarb
pusha
jns
mov
test
loopne
dec
adc
jbe
mov
rclb
push
bound
fs
jnp
jne
mov
jg
sahf
ror
jbe
hlt
mul
cmp
popa
dec
mov
inc
adc
dec
push
shlb
mov
cmpsl
pushf
fs
jo
insb
mov
mov
fiadds
orb
nop
inc
push
stos
xchg
lcall
xchg
mov
push
mov
add
inc
outsb
mov
cmp
test
test
mov
sahf
dec
xchg
out
ja
mov
fstpt
jne
mov
subb
or
or
xor
lahf
push
imul
fdivrl
push
ret
push
xor
bound
dec
ja
xor
imul
movsl
add
sbb
cmc
jae
scas
dec
je
cmpsl
jp
test
outsb
pop
sub
negl
add
loope
mov
cmpsb
mov
pop
insl
je
adc
out
mov
data16
std
dec
mov
mov
sub
mov
jno
jne
mov
into
in
adc
push
mov
mov
xchg
ljmp
xor
movsb
hlt
and
fidivs
mov
mov
cmp
lahf
shll
fisubl
jmp
push
cmp
add
pop
aad
aas
rclb
clc
enter
jae
sbb
xor
mov
sbb
test
sub
mov
pop
cmp
outsb
addr16
daa
mov
fisubs
ficompl
out
mov
ss
push
lods
xor
insb
mov
lock
or
loope
push
jne
andb
cmp
xchg
lret
aad
pop
leave
insb
mov
adc
lahf
or
jmp
idivl
dec
mov
cmpsl
or
pop
fsubs
push
inc
jb
test
push
mov
pop
filds
xor
jbe
push
xchg
std
pop
icebp
aaa
rorl
sbb
movsl
jbe
xchg
mov
sbb
push
jge
jns
pop
call
je
cmpb
inc
loopne
pop
dec
jp
pop
in
ss
xor
test
push
jg
roll
sub
mov
push
outsl
aam
jle
pop
test
sub
test
mov
dec
mov
fidivs
roll
pop
lahf
leave
cmp
mov
xchg
negl
jg
in
outsb
sbb
cmp
aam
xor
push
dec
add
es
sbb
cmp
inc
adc
outsl
out
orb
movsb
lods
jnp
pop
or
aaa
push
notl
pop
loope
inc
jg
dec
jp
fcmovu
cmp
sahf
mov
mov
xchg
clc
das
dec
test
xor
add
add
jp
shl
cli
mov
psrlw
loop
sub
fldcw
pop
aad
sahf
and
xor
jecxz
sbb
dec
out
push
mov
aam
lahf
out
rclb
mov
cmp
jnp
fnstsw
mov
push
xchg
and
push
jl
call
fdivrl
inc
push
push
pusha
xchg
cmc
mov
cmc
jne
inc
or
xor
add
add
cmpsl
pop
fidivl
xchg
sbb
cmp
in
adc
icebp
jo
enter
lods
adc
mov
test
ja
xor
cmp
adc
push
add
push
sbb
or
cmp
je
mov
inc
pop
incl
aad
movsb
push
jmp
popf
dec
sarl
aaa
fst
lea
fwait
sbb
addr16
mov
pop
sub
adc
movsl
jle
mov
mov
dec
mov
aad
sub
add
nop
mov
cmp
sub
out
ss
jo
and
mov
sarb
faddl
cs
test
into
test
nop
shll
inc
lds
add
xchg
push
flds
pusha
inc
movsl
push
outsl
bound
or
sahf
sti
cmp
popa
or
sub
mov
out
mov
sub
jo
push
mov
fbstp
mov
movsl
lods
fisubl
mov
jp
push
inc
adc
and
lods
jg
lods
pop
in
push
sbb
inc
push
fildl
inc
sbb
and
cmc
push
nop
add
call
adc
sti
scas
or
add
mov
insb
xor
rolb
adc
mov
rep
stos
sti
mov
mulb
pop
movsb
je
xchg
int3
dec
mov
xor
stos
std
dec
stos
dec
adc
das
mov
add
inc
mov
xchg
xor
ss
out
stos
sbb
jecxz
mov
stos
xor
or
fidivl
ss
addl
mov
cmpsb
or
xchg
mov
fsubrl
in
fnstenv
rcll
xchg
push
insb
pusha
test
out
rcl
dec
push
test
push
adc
pop
add
cmp
cmc
in
cmpsl
fldl
jb
xchg
aam
in
addr16
insl
cwtl
add
and
cmp
adc
popf
mov
add
iret
lret
pop
int
adc
cwtl
pop
fwait
sub
das
ficompl
jmp
add
inc
stos
add
cli
lahf
and
sub
xchg
adc
inc
enter
cmp
dec
jge
clc
aaa
dec
cs
xchg
mov
ret
loopne
jne
adc
push
lods
stos
jae
cmp
rep
notl
sbb
outsl
add
es
cwtl
das
sahf
popf
je
fldcw
inc
mov
inc
icebp
add
addr16
invd
lahf
ficompl
inc
mov
mov
int
in
mov
inc
jp
mov
nop
sub
lahf
adcb
andb
sbb
movsb
xchg
sub
mull
dec
push
sub
stc
and
jmp
jnp
cmp
arpl
dec
sbb
mov
gs
add
fdivs
and
cltd
xchg
into
xor
xchg
lea
in
mov
sbb
leave
mov
mov
comiss
cmpl
or
in
add
pop
subl
fmul
dec
lock
jge
xchg
sti
dec
fs
ds
cmp
lret
iret
and
xchg
pop
ficoml
mov
mov
stc
fs
faddp
cli
movsb
je
mov
enter
jno
xor
pop
sbb
dec
adc
mov
negl
mov
mov
std
hlt
inc
dec
das
scas
sbb
insb
sbb
fmull
xor
adc
out
pop
je
mov
xchg
pop
cwtl
mov
loope
ficoms
dec
insb
add
nop
xchg
fdivl
lock
jecxz
or
mov
shrb
adc
test
dec
leave
add
pop
mov
xor
data16
lret
mov
andb
cwtl
aam
sub
cs
popf
adc
mov
jl
loopne
mov
call
aas
push
inc
mov
out
xchg
sahf
pop
fnsave
push
cltd
xor
rorb
inc
aaa
mov
mov
jno
dec
aam
sti
scas
psrlw
mov
or
and
sbb
mov
pop
mov
dec
xchg
fbld
test
sbb
lcall
mov
jmp
cwtl
sbb
xchg
stos
ret
mov
fistpl
loope
jg
sahf
scas
ds
add
push
fsubl
repz
inc
cmpsb
popf
movsb
in
mov
push
add
push
sub
stc
call
roll
push
sbb
jmpw
dec
std
fisubrs
mov
push
or
sti
cmp
adcb
lret
mov
in
push
fcoms
mov
ja
jnp
push
push
inc
mov
ds
jnp
sbb
dec
int3
dec
xor
mov
das
cmpsl
cld
jl
sbb
fdivs
and
push
shr
inc
jae
jo
xchg
iret
and
adc
movsl
mov
lret
loope
or
or
repz
push
je
push
addr16
push
jmp
test
jge
test
in
jne
jno
shll
dec
dec
aas
sbb
xchg
roll
addb
push
int
adc
cmp
addl
mov
cli
insl
xor
andl
movsl
test
movsl
xlat
adc
cmp
jmp
sub
movsl
sbb
imul
scas
push
pop
inc
or
xchg
and
lret
xchg
inc
in
imul
mov
mov
push
push
xor
test
sub
in
mov
pop
mov
cmp
and
pop
or
mov
xchg
mov
cmp
inc
pop
fadds
stos
inc
negb
mov
out
xor
inc
cmp
jnp
push
jecxz
mov
jg
jb
dec
arpl
fisttpll
and
mov
add
inc
iret
cltd
imul
sarb
inc
cmc
push
jmp
mov
pusha
aas
jno
mov
dec
fstpl
lcall
aam
push
ficoml
out
push
repnz
insl
cld
ficompl
rorl
cmp
push
push
add
mov
cmc
xchg
repnz
je
decl
mov
lock
lret
mov
pop
stos
mov
mov
lods
stos
call
mov
cld
mov
shlb
and
push
xchg
jne
icebp
push
mov
cld
mov
add
outsb
loopne
fwait
dec
pop
cmp
cmp
and
ret
imul
cmc
or
xchg
fdivrl
cmc
movsb
push
out
jmp
test
mov
inc
cmp
dec
subl
mov
xchg
mov
jo
cli
mov
xchg
sbb
mov
dec
or
es
je
add
and
inc
add
ljmp
nop
bound
sub
jl
testb
xchg
and
mov
mov
stos
mov
aas
test
mov
dec
mov
shrb
pop
push
filds
and
push
in
add
aaa
mov
xchg
rcl
jb,pt
and
dec
test
mov
inc
in
pop
xchg
stc
lret
lahf
call
sbb
sahf
ret
syscall
fsts
cmpsb
mov
sub
jnp
mov
xchg
sbb
fistpl
cmc
andb
mov
nop
jl
xor
rcll
pusha
std
faddl
fistps
jmp
std
push
shl
sar
addr16
inc
jnp
fbld
and
jp
jge
ficomps
pop
rorl
shlb
shlb
pushf
sub
pop
sbb
mov
aad
loop
ret
loope
cmp
inc
cmp
pop
adc
fdivs
push
pop
jne
xchg
in
leave
mov
outsl
or
movsb
loopne
xchg
ss
je
xor
inc
out
scas
out
divb
mov
push
enter
add
pop
push
push
adc
inc
shrl
stos
rclb
lock
sahf
sub
ds
cmc
push
ja
daa
xchg
push
inc
lds
sarb
cmp
repnz
popa
push
outsl
cmp
xorb
mov
insb
aam
dec
add
xor
les
nop
ja
iret
test
aam
fidivrl
lods
xor
loop
xchg
xchg
xor
decl
je
mov
adc
les
clc
popa
iret
jl
mov
pop
test
jecxz
inc
adc
inc
xor
fwait
xchg
fdivrs
jb
push
fwait
push
sub
push
ljmp
pop
leave
mov
pusha
sbb
mov
popf
daa
mov
push
lock
xchg
in
out
push
icebp
cmp
or
fs
aaa
mov
ret
mov
int
cs
not
adc
int3
imul
jae
jg
shr
xchg
pop
mov
push
pop
repz
out
mov
mov
and
sub
imul
stc
pop
inc
sub
in
stos
addb
pop
mov
sbb
inc
scas
stc
push
xlat
imulb
mov
fcompl
mov
dec
shll
xor
outsl
jmp
mov
nop
subl
je
fyl2xp1
pop
dec
addr16
push
dec
dec
ret
iret
mov
adc
test
jne
out
scas
outsw
cli
lcall
xchg
mov
int3
mov
mov
pop
sub
xchg
inc
and
test
stos
mov
daa
and
das
sbb
pop
pop
sbb
pop
fwait
add
das
js
in
mov
pop
cli
or
inc
ja
pop
mov
flds
push
aad
shl
andl
call
sti
or
fs
xor
mov
pop
bound
lock
fiadds
cmp
jle
inc
xchg
loopne
loop
cld
pop
lretw
push
lahf
push
lahf
lret
mov
ret
std
outsl
xor
lret
sub
sub
iret
icebp
popf
imul
mov
or
lcall
dec
xor
push
and
jnp
out
out
out
push
test
xchg
cli
lret
test
xchg
std
bound
sbb
shll
gs
cltd
jb
push
mov
in
cltd
mov
data16
push
fsubrp
xorl
xor
adc
jl
cmp
or
mov
into
xchg
xor
mov
arpl
fidivs
mov
insl
jg
stc
sub
stos
test
js
fcom
xchg
in
mov
sbb
xchg
cli
xchg
inc
mov
and
test
mov
repnz
cmc
xchg
shll
sbb
sbb
lret
out
roll
nop
cmp
subb
dec
bound
popf
ljmp
les
mov
sti
sbb
xchg
jmp
sub
pusha
xchg
mov
push
and
shll
mov
push
cmp
ret
sub
lahf
push
int3
or
mov
sub
sbb
hlt
mov
and
shll
clc
mov
xchg
cmpsb
int3
or
movsl
cmp
mov
or
js
int3
mov
insb
in
jle
adc
int3
clc
pop
lock
iret
xchg
mov
ret
icebp
imull
ret
xchg
push
mov
mov
or
xor
xchg
pop
sub
dec
xor
push
movsl
nop
dec
lcall
xchg
mov
inc
test
pop
mov
dec
imul
call
stos
adc
mov
xor
mov
out
pop
scas
enter
test
insb
mov
sub
shll
int
push
decl
jl
push
xchg
popa
and
add
test
popf
sub
popf
cld
cmpsb
stos
test
adc
sahf
addr16
adc
jnp
xlat
jbe
daa
push
stos
add
imul
addl
sarb
mov
pop
inc
loop
push
mov
jg
mov
ret
es
sarl
sub
xor
jae
addl
mov
nop
fs
sbb
bound
out
xor
push
cmpsb
dec
in
inc
inc
mov
lret
rclb
xchg
ret
addl
pushf
jp
xor
nop
out
add
xchg
insl
mov
sbb
mov
or
jecxz
pop
ret
jne
stos
jmp
popa
push
push
fnstsw
pop
sbb
xor
jns
je
sbb
ror
cs
cli
push
in
fmulp
adc
dec
pop
mov
shrl
fld
add
ljmp
add
leave
mov
pop
rclb
aam
inc
faddp
out
cld
xor
add
ljmp
aam
icebp
sub
mov
adc
sarb
mov
fnstsw
mov
mov
dec
addr16
xchg
aas
add
shl
mov
push
cld
les
out
scas
mov
inc
pusha
std
mov
fs
jl
xor
out
pop
cli
xlat
lods
dec
loop
daa
popl
test
rcll
test
enter
mov
add
pop
or
or
jb
mov
jnp
xchg
xor
dec
fstpl
cwtl
jp
add
mov
push
mov
decl
fcomps
stos
inc
mov
jno
dec
mov
fwait
push
adc
inc
iret
sbb
add
push
loopne
mov
add
popa
sub
mov
aaa
jl
mov
cwtl
pushf
sub
mov
jl
inc
arpl
xor
imul
ror
incb
push
fsubr
out
inc
rol
leave
xchg
orb
int3
mov
je
adc
mov
pop
push
arpl
aaa
and
js
arpl
iret
into
pop
push
push
push
mov
cmpsl
popf
shl
adc
cltd
jne
jae
xor
fwait
dec
sbb
je
cmc
mov
and
test
adcb
out
aad
pop
fstps
push
xchg
push
loop
aam
jns
scas
adc
mov
pop
xor
pop
pop
xchg
pop
push
and
orl
xlat
jp
aam
xchg
and
add
mov
aad
pop
ret
add
aad
cmp
sub
sti
adc
data16
mov
xor
test
sbb
adc
pop
mov
inc
xor
xchg
xlat
scas
mov
movsb
popa
lock
out
cmp
out
pusha
add
and
mov
mov
xchg
mov
xchg
scas
sbb
adc
out
add
and
enter
push
scas
or
adc
lea
mov
outsl
inc
adc
push
xchg
pushf
ds
repz
mov
fs
add
data16
std
or
outsl
lods
test
in
xchg
xlat
jbe
jno
popa
or
mov
xor
inc
lret
mov
imul
test
or
cmp
push
jbe
mov
clc
pop
mov
mov
aam
sbb
fimuls
sub
jnp
repnz
or
loopne
fdivrl
stc
cmp
pushf
fistl
mov
xchg
and
adc
cmp
lahf
outsl
popf
add
insb
outsb
test
negl
jb
lret
daa
into
xchg
mov
stos
imul
push
inc
and
xchg
cmp
mov
clc
mov
mov
jnp
add
cmp
outsb
gs
sbb
fcomp
mov
cli
in
adcl
int3
stos
enter
test
dec
jno
adc
ret
pop
sbbl
sbb
xlat
pop
add
jmp
mov
sub
call
out
pop
mov
xor
pop
test
imul
inc
es
adc
jb
dec
mov
pop
push
pusha
in
les
jns
or
xchg
sbb
lret
clc
adc
or
sahf
mov
repz
xchg
xchg
lds
test
sub
mov
repnz
push
es
subb
jo
clc
adc
out
lods
imul
and
or
imul
faddp
xor
xor
sub
lahf
push
push
dec
outsb
mov
adcb
pop
andb
dec
pop
test
mov
shll
add
push
pop
sbb
mov
cli
movsl
and
call
sub
inc
mov
scas
andb
bound
rclb
or
mov
xor
outsl
mov
mov
push
js
xchg
cmpsl
inc
arpl
in
sub
pusha
in
cmp
xchg
or
popf
mov
mov
mov
pop
jl
add
jg
popf
icebp
mov
std
imul
push
int
subb
int3
sbbl
xchg
in
ja
or
sub
or
cli
andl
jle
and
dec
fcmove
xor
jecxz
mov
sbb
mov
stos
xchg
push
cs
lret
shr
inc
mov
xchg
dec
mov
mov
and
dec
popf
cmpsw
rclb
pop
mov
sbb
cltd
movsb
stc
stos
roll
iret
test
push
insb
out
cmp
sbb
in
je
add
jae
mov
xlat
loop
push
pop
adc
xor
into
xchg
jae
stos
jg
je
mov
fs
sbb
fcoms
pop
inc
imul
lcall
add
push
or
xor
sub
xlat
inc
scas
mov
daa
int
lea
es
inc
movsb
mov
pop
inc
pop
cmpsl
cld
jb
mov
push
push
test
sarl
sub
cmpsb
lcall
sbbl
xchg
mov
xor
adc
cld
imul
out
mov
sub
cmpsl
lock
hlt
sub
sbb
scas
sahf
out
stc
lcall
in
fdivs
jl
cmp
sti
jo
cmpsb
and
xor
push
test
das
xchg
inc
pop
mov
loope
cmp
mov
jnp
dec
push
dec
fmull
jae
icebp
pop
mov
bound
sahf
test
mov
fs
fsubrs
jo
pop
enter
adc
mov
pop
sbbb
scas
daa
into
das
vmread
and
int
in
add
scas
inc
jb
dec
cmp
push
stc
cld
lahf
sbb
out
sub
fidivrl
xchg
add
fldenv
add
mov
dec
loop
push
ds
stc
mov
arpl
push
stc
push
leave
sub
sarb
fwait
cmp
jecxz
sbb
or
mov
mov
pop
scas
in
fsts
gs
aaa
mov
bnd
mov
cmp
sub
mov
subl
sbb
jecxz
xchg
or
pushf
ss
std
dec
cmp
cmp
pop
stc
adc
mov
mov
pop
ds
dec
inc
or
fistpl
inc
xchg
pop
mov
dec
adc
xchg
or
inc
aad
dec
xlat
imul
pop
adc
adc
cli
and
ret
xchg
mov
and
push
dec
add
fistpll
lret
fcmovnbe
out
rcl
ja
daa
xor
sub
lea
push
fs
arpl
or
cmp
dec
or
push
mov
push
sbbl
push
push
xchg
push
pushf
ja
cmp
pop
int3
repz
pop
cs
dec
nop
sbb
imul
in
test
cmpb
pop
int3
les
xchg
push
mov
mov
inc
dec
out
add
test
outsb
xchg
std
mov
xchg
add
mov
arpl
push
cld
jno
and
or
xchg
pusha
stos
inc
inc
leave
fmull
or
pushf
ljmp
adc
into
sbb
xor
clc
xor
sbb
loope
mov
sbb
loope
fimuls
shlb
jg
loop
fnsave
out
ret
scas
leave
sub
add
into
aam
jp
movsb
ret
out
movsb
inc
cmpsl
out
insl
call
je
pusha
and
enter
cmp
scas
mov
mov
jecxz
or
repz
test
inc
std
leave
testb
pop
rorl
mov
xchg
mov
or
ret
push
repz
outsb
dec
pop
fldenv
pop
adc
mov
je
lea
inc
dec
lea
cmp
mov
sar
test
xchg
inc
sub
cmp
dec
add
dec
rolb
sbb
xlat
xchg
xchg
loope
ss
mov
sahf
fistpl
ret
pop
mov
mov
push
inc
xchg
test
add
je
mov
leave
mov
jecxz
cltd
pushf
pop
inc
jae
or
imul
cmpsl
adc
mov
sub
filds
mov
pop
jge
scas
cs
mov
cld
adc
push
in
into
mov
mov
cld
in
jp
cwtl
mov
scas
push
cmpsl
dec
jbe
mov
pop
aas
repz
mov
outsb
xlat
cmp
add
clc
call
adc
mov
daa
inc
jecxz
and
dec
and
mov
ret
call
xor
lcall
cwtl
adc
mov
xchg
ds
cmp
cmc
aad
push
rorb
dec
jl
xor
hlt
xchg
aam
pop
xchg
movl
mov
hlt
xchg
fldenv
bound
dec
int
fcoml
out
fists
das
dec
jns
outsb
dec
test
lahf
cmp
pop
jecxz
imul
fimull
mov
push
xor
dec
icebp
sbb
lds
test
xchg
aad
lea
pop
popa
icebp
and
add
sbb
or
xor
out
ds
jnp
push
sbb
leave
push
mov
xchg
jle
or
add
sub
mov
xchg
mov
into
add
push
loopne
clc
bound
mov
fs
out
adc
lret
enter
xor
pushw
and
into
test
nop
xchg
fwait
jl
test
mov
pop
mov
push
inc
int3
mov
out
xchg
inc
and
sub
stos
out
scas
or
dec
mov
cmp
mov
clc
cmpsb
mov
cld
adc
arpl
test
add
dec
mov
rcrb
lret
pop
out
pop
inc
repz
jmp
popa
ret
add
xor
pushf
lods
adc
addr16
lahf
mov
lock
dec
test
push
bound
les
and
push
adc
mov
add
xchg
pop
sbb
inc
push
push
xchg
dec
loopne
test
mov
insl
nop
pop
lret
push
loope
pop
xchg
scas
and
enter
cmp
push
mov
lahf
movsb
and
xchg
sub
push
mov
aas
xor
push
scas
pop
test
insl
loopne
es
fs
inc
sbb
js
dec
push
mov
jg
cmp
stos
add
xor
jne
sub
mov
push
lock
outsl
and
pxor
test
sbb
add
ljmp
adc
sbb
pop
jbe
sub
add
mov
hlt
sbbb
push
bound
adc
fwait
dec
stos
aaa
inc
mov
add
fisttps
iret
enter
adc
stc
into
pop
flds
addb
out
sub
or
and
bound
mov
stos
jns
loop
fcoms
push
mov
adc
jg
in
arpl
iret
jmp
sub
pop
fadds
lcall
xor
fdiv
int
aam
adc
cmp
js
jae
or
nop
pop
lahf
adc
mov
push
adc
lahf
mov
cli
dec
cld
or
mov
xor
fcoms
in
mov
and
mov
dec
adcl
ljmp
mov
fs
mov
negl
adc
mov
insb
mov
or
test
loope
ljmp
int3
roll
xchg
mov
push
ret
loopne
ljmp
aaa
shll
cmp
movsb
std
pop
das
popf
testb
rcrl
pop
inc
inc
ret
mov
sbb
test
out
fwait
mov
sub
or
in
mov
xlat
test
pop
push
test
sub
out
outsb
jmp
adc
test
imul
pop
jae
xchg
das
pop
cwtl
lock
push
fs
cli
jo
mov
iret
and
and
jg
iret
push
sbb
sbb
sub
aas
mov
xchg
pop
push
mov
pop
test
mov
mov
mov
mov
dec
xorb
lret
hlt
in
loope
cmp
pop
lret
repnz
repnz
xor
pop
push
imul
ljmp
mov
cmp
sub
inc
pusha
xor
in
jl
jmp
inc
mov
ss
ljmp
lcall
test
or
jae
xchg
imul
daa
and
ficoml
loope
jle
popf
inc
fwait
iret
add
mov
mov
jle
cld
mov
imul
addr16
test
cmpb
int3
sbb
sbb
adc
lret
shll
or
fdivl
sbb
sti
mov
jl
arpl
test
clc
push
xor
rolb
and
test
lods
inc
push
in
adc
aaa
enter
jne
loope
push
ljmp
fadds
xor
cmp
leave
xlat
mov
jnp
cld
repnz
insl
lret
ljmp
loop
lds
inc
push
mov
in
sub
dec
mov
ljmp
inc
in
out
inc
out
pop
fld
gs
fldenv
dec
push
test
adc
sti
xchg
mov
push
dec
leave
mov
dec
xchg
push
aas
cmp
ret
pushf
jle
shrb
leave
add
xchg
mov
or
mov
cmc
or
dec
lock
enter
cs
pop
or
mov
adc
stc
fwait
mov
mov
negl
icebp
adc
cmc
sub
adc
pop
or
xchg
sub
cmp
sub
pop
out
test
and
xchg
fs
fbstp
fsubl
add
and
add
mov
mov
scas
fs
or
scas
mov
loopne
sbb
clc
dec
dec
jne
pop
mov
insl
repz
popa
adc
cltd
sbb
xchg
xlat
orl
pop
pushf
adc
sub
andb
fnstsw
int
dec
js
add
pusha
pop
nop
lock
mov
add
push
fisttpl
xchg
dec
cmpsb
fdivp
inc
shr
sbb
lea
daa
xchg
stc
movsl
fwait
sbb
inc
add
into
xor
adc
jnp
stos
mov
dec
jae
push
mov
adc
imul
dec
popf
dec
and
cmp
xchg
repz
mov
sbb
push
loope
int3
stos
imul
inc
jp
shr
push
and
fstpl
fs
pushf
test
jl
out
sbb
int
sbb
xor
out
std
jbe
push
jl
or
arpl
roll
out
pop
xor
scas
in
sbb
fsubrs
mov
xchg
mov
outsl
fs
jns
scas
dec
sbb
mov
xor
icebp
xchg
mov
insb
mov
xor
pushf
bound
mov
test
adc
pop
mov
je
ret
movsl
xor
xchg
test
jbe
adc
outsl
or
dec
xor
idiv
mov
not
pushf
mov
roll
mov
fidivrs
sub
xlat
pop
and
add
lods
bound
push
jns
mov
mov
sub
ja
es
je
cmp
movsb
stc
repnz
std
pop
fwait
dec
mov
lret
mov
inc
popf
adc
cmc
fwait
jae
outsl
mov
or
mov
push
dec
ds
imul
out
push
sbbb
jnp
and
inc
sahf
inc
pusha
shr
pusha
jno
push
sbb
mov
push
mov
out
pusha
into
imul
sbb
bswap
xchg
xchg
js
jg
ja
fistpl
or
out
mov
lods
cmp
mov
sbb
enter
rclb
sub
cltd
jnp
inc
xchg
adc
sub
lret
lea
push
adc
shll
xchg
roll
cltd
xchg
pusha
xchg
mov
mov
add
pop
cld
addl
mov
daa
and
mov
push
mov
jecxz
xchg
push
dec
daa
pop
cmp
mov
mov
jmp
ljmp
mov
mov
cs
cltd
mov
sub
push
adc
mov
stos
adc
mov
out
push
jo
mov
or
cltd
add
jp
sub
dec
xor
sti
pusha
rorb
sahf
push
sub
arpl
and
iret
ret
sbb
mov
mov
push
mov
jl
cmp
mov
sub
mov
mov
fidivrl
mov
movsb
mov
and
mov
or
ss
xor
mov
jmp
adc
xor
pop
negb
add
outsl
stos
mov
xchg
cltd
cli
mov
adc
fwait
xchg
sub
popf
jmp
mov
sar
call
sub
aaa
shrb
push
test
iret
sbb
rorl
test
and
dec
cmpsb
jb
clc
mov
mov
xchg
pop
jne
xor
sub
sub
mov
mov
mov
mov
shll
fsubrp
repnz
jmp
sbb
mov
push
sub
push
insl
aam
push
into
fs
jae
jns
inc
or
mov
jns
push
arpl
mov
or
loop
mov
repnz
ja
mov
data16
lret
fs
xor
xchg
les
xor
loope
in
add
fsubrs
fisttpll
add
dec
aad
pop
mov
mov
out
jb
outsb
ret
imul
shl
testb
cmp
adc
lea
cmp
mov
adc
xchg
sarl
add
push
fcomps
fisubrl
mov
xchg
int3
xor
mov
push
push
jns
decl
cs
and
call
dec
hlt
mov
test
loope
xchg
fdivl
jne
xchg
sti
fdivr
rcl
cmpsb
xchg
adc
push
addr16
adc
lahf
cmp
bound
aad
pop
or
shlb
adc
sub
ljmp
or
mov
loop
inc
jo
push
or
inc
lds
mov
sub
sub
sbb
sahf
mov
mov
stos
test
insb
mov
push
shrb
imul
add
sahf
pop
inc
movl
lock
or
mov
shrl
jge
mov
jge
sub
pop
pop
lods
fadd
add
ja
pop
cmpsb
sbb
test
mov
hlt
dec
sub
bswap
jmp
pop
push
out
out
cltd
orb
xlat
cwtl
insb
jno
cltd
icebp
dec
adc
adc
add
pop
lahf
mov
sub
xchg
mov
xchg
and
divb
fistpl
in
dec
mov
or
mov
push
lods
popf
mov
ret
cltd
jp
cli
or
sbb
mov
mov
or
in
mov
test
sub
js
in
hlt
dec
jg
jnp
and
outsl
imul
ja
xchg
movsb
int
lock
mul
sub
fcomps
add
pop
add
adc
ret
in
mov
inc
dec
aas
or
fisttpl
imul
lods
ret
add
pusha
xor
addr16
lods
jg
dec
jg
mov
adc
mov
xor
out
xlat
ljmp
hlt
sti
pop
cld
mov
loop
lret
mov
pop
push
mov
clc
push
das
jmp
inc
fstpt
cmp
sahf
jae
sarl
mov
out
stos
xor
out
mov
lret
or
push
inc
into
mov
add
pop
adc
xchg
pop
push
aam
nop
cs
lock
shlb
imul
sbb
in
inc
xchg
mov
lcall
fldt
lahf
xchg
pusha
or
mov
mov
fs
out
fstpt
push
cwtl
popa
gs
push
or
cmp
xchg
leave
jg
dec
mov
or
ret
pop
mov
adc
push
cmp
jo
les
or
sbb
adc
lods
ds
sarb
aas
int
dec
roll
adc
cli
dec
pop
dec
dec
mov
lahf
negb
mov
jle
mov
push
stos
jno
sbb
jb
and
ja
sbb
rol
mov
cli
cwtl
test
cmc
push
mov
fimuls
jne
sbb
jp
dec
cmp
adc
push
cmp
movsb
jge
sub
mov
test
adc
pushf
mulb
adc
sarl
sbb
fstpt
xor
adc
stc
jns
and
xchg
xchg
mov
ljmp
sub
push
in
clc
cmc
insb
mov
in
sub
imul
jle
mov
stc
cmpsl
xchg
outsb
xchg
addr16
push
pop
adc
aaa
adc
mov
leave
sub
jecxz
fmuls
adc
inc
lods
cmp
adc
pmaxub
sub
xchg
xor
sbb
xchg
mov
popl
mov
negb
or
pop
enter
repnz
int
loopne
daa
xor
subb
mov
rcrb
xor
xchg
mov
fmuls
leave
xchg
mov
pop
cli
mov
mov
in
add
mov
insl
xchg
and
cs
or
mov
mov
push
push
insb
outsb
inc
mov
mov
std
arpl
sub
inc
out
lcall
iret
in
shr
mov
lods
nop
mov
imul
inc
ret
rclb
add
icebp
jne
out
jp
or
xchg
bound
jmp
pop
lods
nop
aas
pop
jmp
mov
test
ljmp
sbb
dec
xor
jecxz
adc
loop
or
lcall
adc
cmp
or
arpl
sub
pop
inc
adc
idivb
ror
add
sbb
je
cmpsl
std
push
add
pop
in
in
outsb
pushf
dec
push
fwait
sbb
loopne
sti
gs
lret
std
insl
dec
mov
mov
cld
aaa
or
cmp
enter
sub
mov
dec
stc
imull
aaa
pop
inc
jb
adc
faddl
sub
popa
nop
mov
add
or
outsb
sbb
cmc
or
sub
dec
jmp
mov
fisubrs
mov
pop
pop
sub
xlat
lock
sbb
xchg
fwait
mov
hlt
lahf
push
push
rolb
inc
bndstx
add
mov
cli
sbb
add
adc
addl
insl
xor
test
adc
scas
mov
stos
sbb
pushf
dec
cmp
push
mov
pop
fwait
pop
in
or
sbb
sbb
pop
pop
lahf
jne
cmp
orl
sbb
fstpl
mov
mov
xchg
icebp
jmp
in
sub
pop
adc
mov
add
xor
jecxz
loope
mov
jle
add
pop
sub
mov
or
lock
leave
int3
decb
movsl
jnp
js
or
addl
iret
dec
xor
out
insl
jmp
cmp
dec
sbb
adc
jp
jns
xor
frstor
dec
jg
xlat
push
mov
sub
add
add
repz
xchg
xchg
adc
jne
movsb
cltd
fnsave
fs
add
dec
fimuls
pop
xor
or
sbb
jle
dec
lahf
outsl
inc
test
scas
inc
add
xor
sbb
add
call
mov
lock
jnp
add
std
loop
cltd
push
dec
cmp
stos
inc
adc
aas
xchg
mov
push
pop
mov
cltd
jne
movsb
outsl
int3
jo
mov
subl
pop
ds
push
add
push
xchg
cmp
jns
in
jnp
mov
leave
sub
mov
fsubp
inc
jmp
pusha
push
adc
dec
stos
leave
mov
xor
cmpsl
dec
jg
stos
push
adc
test
sbb
or
add
imul
loope
mov
ja
int
stos
sbb
adc
pushf
xchg
divl
sub
jmp
inc
xchg
push
lea
push
cmp
test
push
dec
jp
push
xchg
push
jae
jle
xor
call
lcall
fcoms
push
shl
arpl
cs
inc
outsl
leave
sbb
xchg
xchg
mov
mov
mov
sub
or
jge
movsl
test
in
int3
mov
xor
and
das
xor
xor
jb
jp
repz
jbe
jae
add
shlb
mov
out
in
pop
aad
dec
into
adc
sbb
cmp
movsb
popf
sub
aad
std
rol
cld
adc
mov
mov
int
xor
lods
test
push
inc
add
insb
adc
repz
divb
and
cmp
jne
js
mov
xor
aas
jae
sub
call
sbb
lds
inc
ret
inc
add
in
and
cmpl
outsb
dec
or
int
sub
jl,pt
jmp
ljmp
mov
mov
int3
xor
mov
xchg
movb
test
out
fwait
xor
loop
in
outsb
shrl
shlb
arpl
push
arpl
ds
ror
and
enter
hlt
dec
andl
xchg
push
lcall
outsb
add
cmp
aad
jne
mov
push
dec
jecxz
out
inc
mov
int3
test
imul
pop
movsl
xor
movsb
xor
jmp
mov
mov
adc
fbld
jnp
cmp
cs
mov
iret
cmp
jae
inc
ljmp
xchg
mov
fcmovne
ljmp
cmp
inc
add
pop
cmp
cmp
xchg
in
xchg
jno
mov
jne
cmc
lock
pop
pop
scas
sub
lret
cld
in
fsub
jb
loope
and
out
out
xchg
or
xchg
pop
push
jne
js
sub
or
mov
fwait
inc
mov
inc
bound
xchg
jbe
imul
lock
fwait
xchg
js
adc
rclb
mov
xlat
push
rclb
jae
mov
sub
aam
xchg
pushl
sbb
notb
clc
in
iret
xchg
outsb
xor
rcl
push
repnz
adc
rclb
mov
adcb
daa
adc
fimuls
push
jne
cltd
and
push
push
insb
xchg
and
cli
mov
sbb
fisubl
and
out
jp
jle
sbbl
add
xchg
iret
sub
or
jno
mov
xchg
xchg
das
jnp
sub
cmp
insl
mov
or
sub
in
rorb
shll
mov
mov
or
xchg
push
adc
push
cmp
cmp
xor
cmp
aam
dec
xchg
fdivrs
push
adc
repnz
or
ficomps
inc
ss
int3
jl
cwtl
test
sbb
ret
iret
gs
xchg
js
and
mov
jecxz
fsubl
xor
imul
gs
sbb
sbb
movsb
orl
fdivl
push
out
jl
jp
out
mov
fnsave
lods
popf
add
or
and
pop
add
inc
mov
aad
cltd
jb
decl
push
std
mov
shlb
sbbb
cli
or
sahf
pop
jecxz
push
xchg
ja
pushl
add
cmp
jne
int3
into
xchg
fistpl
and
orl
xor
push
sbb
push
repnz
fwait
mov
das
pop
es
lods
cld
adc
shll
rcll
sbb
fsubs
inc
bound
dec
aaa
movsl
movsl
push
jle
jp
mov
js
ss
cmp
or
cltd
mov
in
pop
cmp
stos
jnp
or
ret
add
adc
jne
mov
mov
std
push
arpl
fidivs
fidivl
mov
xor
pop
mov
push
testb
mov
adc
cmp
jae
scas
adc
cmpsl
imul
sbb
mov
loopne
lock
js
jl
mov
xor
adc
inc
push
stc
lea
aas
fisubl
int3
adc
es
jle
daa
cmp
push
notb
and
xor
shrl
es
fldcw
aaa
add
mov
lock
rolb
mov
int
sub
call
pusha
pop
inc
mov
lahf
shufps
inc
push
das
icebp
int3
push
mov
push
xor
sahf
andb
push
out
jge
pop
test
dec
loop
mov
sub
lret
jecxz
pop
xor
out
and
imul
inc
fwait
xor
mov
in
ss
mov
sarb
out
sti
pop
jne
ja
out
iret
or
mov
scas
sub
dec
out
dec
icebp
push
loopne
cmpl
jns
xchg
push
jnp
mov
je
lea
sub
loop
push
scas
insl
mov
gs
out
mov
lods
fmul
scas
push
shr
in
push
push
div
and
adc
out
xchg
sbb
xor
ss
and
call
sti
add
inc
dec
in
xchg
or
out
popa
xchg
aaa
dec
call
inc
adc
jp
pop
mov
loopne
or
add
sarl
mov
dec
andl
cmp
mov
xchg
dec
mov
dec
fdivr
sub
jnp
adc
mov
push
sub
mov
fs
scas
dec
mov
jecxz
fcmovnbe
shrl
push
and
push
aas
sbb
pushf
fldl
xlat
push
sub
imul
pop
inc
cld
xor
test
stc
mov
mov
cmc
test
aam
and
or
lods
and
iret
xchg
mov
or
popa
loopne
jmp
cltd
inc
scas
xor
or
int
leave
decw
mov
lods
dec
adc
cmpsb
dec
push
mov
lret
or
ret
adc
lahf
testl
or
or
incb
clts
cltd
inc
mov
outsl
test
subb
in
es
lret
add
mov
dec
sbb
push
jne
ljmp
aaa
aas
inc
ret
sbb
xor
cmc
push
xlat
addr16
xor
mov
daa
filds
pop
shrl
je,pn
and
sbb
aas
mov
movsl
add
cmp
js
je
cmc
iret
pusha
and
mov
movsl
scas
cltd
and
popa
push
xchg
xchg
imul
xor
shl
sub
inc
test
addr16
mov
test
add
adc
sbb
push
les
sbb
pop
rcrb
mov
dec
push
cmp
hlt
ja
inc
out
das
inc
and
in
mov
jbe
push
mov
ret
jl
lahf
jmp
cmp
adc
out
jno
enter
out
push
and
xchg
and
aam
pop
fcom
leave
jb
push
xor
repnz
test
push
and
mov
sbb
mov
inc
repnz
testl
mov
pop
jae
loope
sbb
dec
sub
push
xchg
jo
addl
lods
or
es
or
aaa
mov
out
jl
cmpsb
lmsw
jecxz
cs
sbb
loope
sbb
leave
and
scas
lods
int
rcrl
cs
inc
lods
mov
out
push
stos
cmpsl
push
sub
cltd
insl
cmp
inc
inc
clc
daa
mov
dec
lret
stos
cmp
dec
aam
outsb
in
sub
push
clc
stos
sub
push
push
rolb
add
jmp
cmp
sarl
insl
jecxz
xlat
icebp
sub
mov
flds
arpl
fidivrl
mov
lods
mov
pop
push
sub
popf
in
in
in
mov
fwait
push
jns
mov
push
scas
sahf
sahf
and
sub
xchg
leave
lods
repz
std
mov
push
and
scas
xlat
outsb
cmc
jl
sbb
sbb
pop
cli
sti
mov
adc
repz
cmpsl
adc
iret
notl
lcall
xchg
mov
hlt
pop
jl
cld
jb
lea
adc
lahf
xlat
lea
pop
into
xor
fcomip
adc
scas
cmp
fidivrl
icebp
in
aas
std
scas
jecxz
stos
ja
xchg
xor
fsubs
lcall
pushf
icebp
call
add
and
lea
gs
jge
dec
mov
int3
and
and
int3
fwait
hlt
stos
frstor
mov
mov
dec
scas
stos
fs
movsb
outsb
inc
je
inc
pop
negb
out
test
int
pushf
mov
stc
stc
jl,pn
fists
ret
loope
lahf
pop
xchg
mov
push
rcrl
fisttps
cmc
lahf
sub
popa
scas
jbe
inc
rcr
cli
jg
fwait
je
dec
call
or
icebp
mov
popa
stc
push
stos
in
lret
test
lahf
dec
fsubrl
adc
lea
sbb
shll
mov
rorb
push
cmp
int3
xor
inc
add
and
mov
aam
sti
push
fistl
adc
andl
xor
cmp
mov
stos
stos
fsts
mov
mov
in
push
jl
or
and
iret
push
push
ret
or
push
push
lea
stc
stos
mov
mov
mov
inc
sbb
test
es
dec
push
pop
rcrl
mov
mov
sti
test
or
das
push
or
repnz
clc
nop
addl
add
lock
mov
jae
and
pop
add
mov
popa
fldt
jg
adcb
add
dec
in
inc
add
jo
pushf
pop
mov
dec
push
xchg
cwtl
cmp
in
sub
push
cmpsl
dec
mov
cmpsb
aad
pop
inc
bound
test
jmp
ja
and
cmp
sub
lret
jo
in
xchg
pop
fldenv
xchg
notl
popa
sar
push
mov
idivb
xchg
ret
mov
cmp
or
and
mov
loopne
xchg
and
mov
dec
and
fsubrl
insl
js
mov
pushf
push
mov
fcoml
fsubrp
movsb
out
dec
sub
loop
int3
nop
sbb
int
lods
inc
ret
cltd
out
sub
xchg
insb
push
push
jl
push
arpl
or
pop
movups
out
inc
out
jl
mov
shll
cld
enter
mov
inc
push
xchg
adc
push
mov
sub
cmp
push
ds
jl
mov
xor
jnp
adc
jecxz
add
enter
outsl
repz
dec
mov
and
adc
or
inc
adc
into
xchg
arpl
shrl
push
jmp
mov
pushf
xchg
aaa
ret
in
add
add
mov
icebp
dec
loop
dec
adc
add
rorl
adc
mov
jmp
sbb
jbe
outsb
inc
xlat
and
cli
dec
jmp
std
push
jg
popa
mov
cmc
sbb
or
icebp
lock
bound
int3
test
scas
imul
and
ficompl
bound
dec
add
push
add
jns
cltd
repnz
sbb
mov
outsb
mov
popf
nop
xchg
loop
fidivl
gs
cmp
jge
sbb
and
xchg
dec
out
sub
dec
xchg
mov
adc
and
call
pop
mov
xchg
add
aam
xchg
push
jbe
fcoms
jne
adc
pop
cli
sub
xor
outsb
push
adcl
inc
outsb
leave
loop
mov
dec
xchg
shl
jb
je
pop
aaa
mov
aad
sub
lret
insb
dec
lret
in
mov
ss
sub
enter
shll
and
adc
mov
pop
cmp
ror
pusha
imul
adc
mov
fisubl
lock
push
xchg
sti
pslld
scas
sub
push
in
movsb
jl
or
repnz
pop
in
icebp
pop
imul
and
cs
push
stos
popf
jle
aaa
mov
into
or
xchg
ss
pop
mul
mov
push
shrb
push
jnp
fstps
cmp
inc
outsl
push
mov
fsts
xchg
pop
pop
adc
popf
dec
inc
adc
ss
xchg
xor
ficomps
inc
ljmp
fcomps
inc
xchg
cs
mov
fistl
mov
xchg
or
stos
sub
mov
cmp
cmp
xchg
sub
div
xor
adc
add
mov
stos
daa
cs
jae
daa
cmc
jno
cmpsb
sarl
fldcw
outsb
pop
jb
xor
xchg
add
gs
mov
xchg
ret
add
xchg
iret
pop
mov
dec
cli
test
push
push
ret
aas
es
pop
dec
jno
dec
andb
xchg
jmp
sub
fs
hlt
jns
ja
js
xor
adc
xor
mov
popa
out
xlat
mov
clc
je
inc
xor
mov
cmpsb
std
sti
pop
imulb
dec
cmc
andl
mov
inc
insl
cwtl
iret
pop
mov
inc
cwtl
movsb
pop
xor
xchg
incb
or
loop
insb
mov
push
mov
fnstsw
sbb
sarb
jnp
inc
add
mov
or
popf
into
cmp
pop
adc
test
xchg
push
pusha
push
xchg
adc
or
test
mov
mov
add
loop
bound
push
push
popf
test
xor
test
aad
dec
push
sub
or
stos
add
sbb
out
inc
add
xor
int
push
mov
arpl
xor
fbstp
xchg
fcoml
movsb
loop
mov
fwait
mov
dec
xchg
dec
jb
and
mov
sbb
aam
xchg
push
hlt
jae
ja
jl
mov
jmp
pushf
into
arpl
or
push
mov
push
adc
push
addr16
mov
sub
mull
test
and
or
xor
in
loop
xchg
dec
aas
out
popf
xchg
sub
sahf
sub
daa
rolb
jge
xchg
dec
rcr
mov
inc
dec
sub
aaa
jg
mov
jecxz
aas
pop
stc
in
sub
and
negl
jle
pop
ss
scas
lret
push
xchg
inc
or
les
repnz
outsb
sbb
sbb
xor
mov
sub
mov
or
jb
aaa
insl
insl
cmp
lret
lods
in
dec
aam
mov
imul
jae
aad
movsl
sub
loop
dec
add
orb
sub
leave
dec
or
inc
lds
mov
stos
scas
pop
push
cs
lods
scas
mov
cmp
in
repz
xorl
adc
imul
dec
mov
sub
lods
sbb
mov
jmp
jge
imul
push
cmp
loop
cwtl
iret
movsb
insb
lods
adc
cmp
xchg
inc
js
adc
push
cltd
mov
push
add
lret
jecxz
pop
fildll
and
arpl
sub
out
adc
movsb
std
pusha
xchg
mov
xchg
dec
std
jmp
adcb
inc
jbe
pop
xchg
jne
sub
insb
mov
mov
int
aam
inc
mov
mov
sub
das
loopne
add
inc
sub
push
inc
popa
idivb
hlt
sti
pop
mov
jb
mov
out
iret
les
xchg
add
jmp
cmp
mov
push
mov
cmp
push
adc
ret
cwtl
jo
and
mov
push
loope
out
sub
pusha
push
mov
xor
jns
std
insb
outsl
xlat
and
aas
scas
pop
inc
sbb
and
sar
aam
inc
stos
dec
xchg
pop
pop
inc
icebp
mov
fildl
pop
mov
sub
dec
out
mov
sti
push
mov
lret
adc
insb
sbb
ret
push
lock
cs
mov
jmp
pop
call
mov
das
adc
xchg
lea
andb
ret
xchg
ficomps
push
sub
or
pop
call
sub
xchg
inc
rolb
cmpsl
cmp
mov
dec
jnp
mov
mov
fsubrl
jno
adc
jg
inc
add
xlat
fadds
iret
loope
xchg
xor
fnstcw
jg
jnp
out
push
sti
cltd
sub
jno
cs
cmp
mov
lds
jmp
in
add
repz
icebp
jae
xor
xchg
adc
jl
or
sar
into
cmp
inc
jbe
sbb
adc
shl
and
push
jbe
dec
mov
xchg
out
cld
mov
mov
mov
mov
mov
lret
fwait
cs
pop
or
dec
data16
or
subl
fnstsw
xor
jne
cld
addl
loopne
in
inc
frstor
fisubl
xchg
cmpsb
mov
dec
sub
je
test
out
or
jae
cmc
hlt
jl
inc
xchg
lea
sub
push
fucom
cmpl
sbb
mov
push
jg
outsb
xor
xor
add
aad
scas
xchg
iret
mov
jmp
push
sub
mov
lret
hlt
std
iret
sub
rorl
std
repz
dec
into
jl
pushf
inc
mov
scas
shll
jne
mov
inc
pusha
sub
test
xchg
gs
mov
inc
mov
jmp
mov
xchg
je
popa
dec
int3
outsl
in
loop
cmpsl
mov
das
fsubrl
pop
subl
icebp
pop
fcmovu
jge
insl
std
ret
jle
lret
loop
sbb
imul
sub
mov
pop
into
arpl
das
outsl
jp
rcr
fstl
dec
sbbb
pop
add
cmc
or
jge
ficoms
popa
and
arpl
out
fildll
out
cli
xor
js
pusha
mov
mov
icebp
mov
popf
repz
add
ss
add
leave
or
xor
jmp
mov
stc
push
dec
adc
or
out
mov
mov
aam
lea
cli
add
xchg
mov
mov
addr16
insl
shr
push
adc
dec
je
push
push
lock
ds
daa
push
xchg
imul
push
mov
incl
lods
pop
divl
inc
xlat
insl
jl
push
or
clc
push
shrl
push
aas
lcall
inc
cmpxchg8b
xchg
mov
inc
fs
inc
adc
pusha
pop
bound
sub
pop
jmp
pop
jmp
inc
clc
dec
sub
jno
xchg
inc
jecxz
fmuls
mull
ss
out
les
test
sub
cmc
test
jge
or
mov
pop
dec
push
bound
lret
adc
addb
dec
pop
and
gs
sub
jp
daa
jb
push
xor
mov
jno
or
xlat
cs
pop
mov
insl
cs
lods
sub
subl
mov
int
sbb
adc
dec
call
mov
js
insb
and
movsl
mov
and
jo
cmc
xor
rorb
in
sub
call
ljmp
cwtl
cltd
mov
cmc
mov
mov
and
pop
cltd
cmp
enter
or
xchg
std
or
and
push
xchg
popa
pop
cmpsl
cmp
data16
add
jae
repnz
mov
repnz
pushf
insl
jmp
in
xor
xchg
jae
outsb
add
std
jl
imul
mov
outsb
pop
loopne
jp
ljmp
push
inc
test
rep
xor
dec
in
lea
jns
xor
pop
add
sbb
push
bound
ds
mov
ss
pop
adc
aaa
mov
xor
mov
xchg
out
lcall
imul
cmp
aaa
test
mov
and
push
mov
ja
adc
leave
jbe
mov
and
add
mov
int3
dec
inc
jo
out
inc
ficompl
cwtl
fisttpll
fisubrs
jmp
sbb
cmp
pusha
int3
icebp
push
lds
cwtl
sub
imul
fisubrl
lods
loopne,pn
dec
xchg
and
es
fisubrl
add
scas
jbe
mov
gs
jne
dec
push
hlt
lret
push
das
dec
mov
xor
cmp
mov
push
adc
arpl
outsb
push
pop
mov
xchg
aaa
jnp
sti
in
es
or
out
dec
cli
xor
shrl
inc
lods
mov
adc
pushf
notl
jo
dec
push
lea
inc
std
cwtl
mov
and
mov
fisttps
xor
shl
pop
mov
in
gs
stc
cmp
pop
sahf
enter
fs
jbe
aam
mov
pushf
push
add
sub
add
ret
call
pop
mov
cmp
mov
fs
dec
mov
mov
inc
inc
xchg
js
loopne
mov
call
jae
xor
sbb
popf
push
push
and
mov
cmp
inc
icebp
inc
cmp
jae
add
outsl
cmp
icebp
aaa
adc
int3
pop
pop
and
and
pop
in
addb
aam
jecxz
leave
pop
int
loope
sahf
push
jp
aas
mov
stc
popf
mov
sub
mov
fwait
jnp
cltd
nop
add
ljmp
fs
ljmp
insb
jmp
add
pusha
jmp
jge
out
rorl
jns
and
fs
data16
aas
leave
cmp
dec
push
mov
std
jge
sbb
mov
hlt
jb
es
js
mov
xchg
inc
xor
adc
push
les
mov
aas
adc
push
lods
mov
add
arpl
ds
mov
sarb
stos
adc
xchg
movsb
dec
int
pop
cwtl
sarb
aas
jmp
mov
xchg
inc
repz
jbe
push
sahf
andb
mov
stos
rcrb
sti
mov
dec
repnz
xchg
je
mov
rclb
push
dec
lcall
test
xor
les
mov
jmp
subl
add
js
mov
xor
sahf
test
ds
fsubrs
je
stc
cltd
xchg
lods
inc
xchg
sahf
cltd
fcmovbe
cmp
push
pop
mov
iret
scas
push
xor
or
mov
sub
das
and
mov
add
popf
rolb
xchg
mov
cli
flds
or
lret
sub
cli
addl
data16
orb
cmp
jno
cmpsl
inc
lock
mov
mov
out
std
pusha
sbb
jbe
or
out
xorl
pop
dec
stos
push
dec
jle
inc
inc
imul
sbb
sbb
test
jp,pt
sbb
in
xor
cmp
mov
mov
inc
mov
stc
mov
or
cwtl
cwtl
sub
cltd
mov
out
es
pop
fldcw
add
push
cmpsb
cmc
adc
jmp
cwtl
lahf
add
pop
adc
or
shrb
fnsetpm(287
jp
adc
mov
aas
out
cmp
test
inc
ljmp
inc
outsb
aam
jp
mov
bound
push
jne
gs
jo
push
push
pusha
push
mov
push
dec
sbb
mul
movl
fsubrp
xor
shrb
pop
or
jge
sub
mov
fcmovb
xor
pop
push
xor
or
inc
push
adc
gs
cmp
mov
cltd
scas
fisubs
push
add
mov
jl
in
sbb
xor
out
sti
push
adc
mov
and
ds
jle
adc
sti
pop
jne
faddp
cltd
sub
out
sarl
jl,pt
out
nop
std
mov
daa
add
mov
mov
or
jecxz
in
enter
enter
jecxz
pop
sbb
push
add
inc
jg
sbb
cmp
test
out
pop
xchg
inc
int3
cmp
jns
adcl
cmp
fs
mov
insb
mov
mov
icebp
out
xor
mov
sarl
and
sti
movsl
push
cmp
arpl
push
push
sti
push
sbb
mov
aas
jae
out
les
lret
daa
js
mov
push
push
jns
xchg
cmp
leave
jecxz
lea
push
xlat
insb
pop
xchg
fwait
jl
loop
inc
push
fadd
loopne
data16
stc
or
test
leave
scas
mov
ss
cltd
bound
and
jb
push
mov
xchg
lret
ja
or
shrl
mov
js
in
inc
jae
fidivrs
aaa
stos
scas
lcall
xchg
aas
xchg
xor
test
adc
add
xchg
push
pop
and
pop
mov
nopl
mov
or
sbb
or
mov
test
inc
mov
daa
aaa
stc
push
movsb
shlb
xor
dec
jle
cmp
xchg
inc
xchg
add
into
mov
cmp
jne
in
xchg
mov
adc
mov
loopne
ds
ljmp
cmp
jne
push
rcll
mov
stos
xor
in
shrb
enter
mov
aas
dec
mov
movsb
popa
adc
into
mov
sti
dec
leave
movsl
or
or
shlb
xor
or
ja
inc
sti
divb
insl
push
cwtl
mov
sub
ret
dec
ds
mov
mov
ss
cmpsl
stos
loop
mov
add
mov
xor
and
sub
sub
jns
and
int3
outsl
xchg
push
xlat
stc
push
cli
jnp
mov
shrb
addr16
xor
test
jle
sbbl
insl
fsubr
mov
call
jp
inc
les
mov
pop
ja
rclb
pop
mov
mov
je
imul
jecxz
jns
pop
js
add
shl
fists
xor
lret
sbb
mov
aaa
jecxz
ret
fucomip
movl
jne
mov
into
movsl
jb
test
sub
shll
insb
adc
sbb
loope
xor
xor
lods
fs
xabort
or
fcomps
popf
or
xor
in
xchg
test
ret
xor
xor
and
xchg
inc
out
jge
cmpsl
sti
inc
jae
xchg
pop
mov
jg
pop
push
int3
adc
fsubrp
outsb
dec
out
dec
sub
les
rclb
xchg
cs
aas
mov
cmp
lods
hlt
insb
xchg
or
xor
dec
mov
bound
ds
fistpll
push
sbb
inc
aad
popa
mov
aad
call
fcoml
mov
dec
shr
xor
mov
sbb
and
and
bound
stc
lcall
push
jbe
jbe
dec
mov
push
sbb
outsb
in
jae
sub
pop
lods
dec
shl
out
jns
fidivrl
mov
sub
outsl
fnsave
push
fsubl
cmpsb
mov
shlb
lock
jmp
popf
movsb
jge
jmp
xchg
adc
adc
inc
std
pop
adc
mov
popl
sub
or
pop
hlt
loop
ret
or
stos
mov
jns
fistps
iret
fcoms
in
jge
cmp
dec
add
and
add
xchg
mov
nop
jno
inc
ret
sub
lea
lret
cmp
fwait
sbb
leave
aam
lods
int
loope
sti
add
and
scas
xlat
outsb
push
lahf
sbb
iret
cld
bound
in
xchg
or
push
daa
push
fmuls
pop
lds
lods
sar
xchg
ds
lahf
and
hlt
mov
enter
aaa
xchg
fsubrp
xchg
aas
lea
outsb
fsubrs
jl
cmp
sub
das
mov
sub
xorl
popa
mov
jmp
sub
pop
movsl
aas
push
push
cmc
fmull
lret
arpl
push
xor
imul
test
xchg
jle
loopne
ljmp
aaa
lahf
arpl
cmpsl
pusha
push
nop
mov
movsl
push
pop
cmpsl
into
add
adc
ds
pushf
and
jbe
sub
jns
sarb
out
cmp
mov
mov
mov
fsubl
in
mov
xchg
jnp
popl
rcrb
mov
addr16
cmc
pop
mov
cmpl
push
call
imul
mov
js
jg
jge
pop
mov
es
das
mov
pop
ds
pop
mov
aad
inc
dec
lahf
mov
je
jne
cltd
int3
jae
lret
lret
sub
pop
pop
push
ret
dec
jne
shl
rolb
lcall
mulb
outsb
jp
inc
loope
das
xor
lods
add
and
mov
xorb
nop
xlat
push
arpl
in
aas
mov
xchg
cmpsb
cltd
shlb
orl
dec
test
call
lds
cmp
pushf
test
mov
push
movb
adc
push
test
jecxz
gs
add
mov
sub
dec
test
cmpsl
repz
sbb
adc
xchg
push
das
xor
fidivs
mov
and
sbb
nop
fcomip
and
xorl
lret
push
pop
les
dec
es
mov
incl
adc
mov
ljmp
mov
xlat
xchg
cmp
leave
fs
xchg
nop
inc
push
popf
dec
ror
aas
fwait
lods
cmpsb
aam
mov
imul
hlt
pushf
int
ja
inc
dec
cld
pushf
das
sub
std
in
loopne
sarb
pop
fcmovnu
jnp
push
add
and
mov
test
arpl
mov
es
pop
lahf
fstl
xchg
push
mov
dec
jp
dec
cwtl
sarb
mov
or
out
dec
push
into
pop
xor
andb
in
in
sub
lods
pop
in
push
bound
push
ret
dec
sub
out
lock
rorb
mov
cmp
pop
in
out
adc
sahf
push
jg
push
push
les
jo
test
inc
sahf
mov
fdiv
add
leave
jp
jp
hlt
ret
test
ret
xor
aam
xchg
mov
cld
das
outsb
inc
into
push
lcall
pop
adc
xchg
xor
adc
sar
loop
mov
daa
adc
cltd
ljmp
repz
xor
icebp
ret
aaa
imul
clc
sub
inc
lahf
dec
ficoms
mov
arpl
xor
fwait
enter
xor
cmp
popa
pop
and
jo
lret
dec
loopne
popl
pop
test
lods
and
jo
xor
shl
es
add
xchg
jb
adc
pop
ds
xchg
or
data16
test
add
rcll
sub
dec
push
push
stos
inc
push
les
mov
test
les
inc
lcall
sub
cltd
xor
scas
imul
xor
out
testb
add
cmpsb
lahf
cmpsl
sti
aam
into
adc
movl
push
xor
mov
mov
lods
mov
popa
adc
xchg
sbb
add
pop
push
sub
sbb
mov
hlt
mov
xor
jecxz
add
mov
mov
shlb
bound
xchg
or
int
lods
negb
cmp
loop
bound
or
aas
dec
in
add
push
mov
out
pop
out
and
imulb
bound
ficomps
jmp
pop
mov
cmp
lea
lea
inc
fisubrs
lret
mov
add
mov
test
inc
cwtl
cmpsb
aad
popa
pop
xorl
je
mov
push
loop
aad
scas
ret
scas
mov
ljmp
jne
aam
inc
pop
inc
stc
push
fisubrs
dec
cmp
add
xor
fwait
mov
or
sbb
adc
enter
scas
in
adc
in
push
adc
push
cld
leave
loope
int3
sub
ficomps
aaa
sbb
sbb
inc
cmc
pop
jnp
sub
mov
and
call
push
aad
iret
je
jl
xchg
clc
fisubrl
lahf
bound
mov
jns
adc
or
in
mov
stos
mov
pop
jno
mov
xchg
pop
mov
jl
push
jns
mov
cmpsl
in
and
shlb
call
mov
xor
xor
repz
clc
pop
push
xchg
les
dec
fmul
movsl
xor
cmp
push
in
repz
cltd
add
push
cmpsl
jne
jo
and
roll
and
in
pop
in
imul
and
leave
dec
lea
shl
insl
cmp
fsub
dec
xchg
push
push
xchg
bound
xchg
jge
loop
inc
or
sbb
movb
out
xchg
rclb
jb
iret
adc
jne
jl
and
pop
comiss
pop
pop
hlt
sbb
inc
jmp
xchg
call
hlt
lds
into
cmp
add
ret
out
cmp
lahf
stos
lahf
mov
inc
callw
lret
inc
cmpb
xchg
mov
das
push
iret
or
push
dec
xlat
or
fwait
adc
dec
cli
or
add
fidivl
add
xor
or
fidivl
sbb
sbb
add
leave
mov
pop
shrb
pop
jb
push
cmp
add
test
sbb
lea
cmp
imul
incl
push
rcrl
test
and
sahf
push
out
ss
das
seto
inc
pop
sub
pop
int
xor
add
movsb
pop
in
sahf
and
ficoml
xor
subl
xor
lcall
sbb
rep
imul
cli
dec
or
add
loop
jae
sub
leave
jmp
scas
fnstsw
sub
js
bound
rorl
hlt
addr16
inc
push
push
push
sub
mov
cld
lods
xchg
idivb
sbb
jecxz
stos
inc
and
aas
sub
and
pop
int
xor
lea
dec
adc
shlb
arpl
sar
dec
adc
cs
sbb
add
leave
mov
push
adc
add
mov
jle
add
cld
jns
lahf
int3
xchg
movsl
xor
in
icebp
jbe
mov
mov
jbe
mov
cli
pushl
rcrb
sub
jg
test
inc
ja
push
ret
pop
and
xchg
stos
mov
dec
or
push
push
xor
mov
ftst
jb
insl
in
in
adc
outsb
mov
outsl
mov
sub
sbb
cmp
cmp
push
push
dec
pop
cmp
sbb
mov
xor
push
push
or
mov
push
rcll
cmp
repz
stc
xchg
cmpsl
out
scas
fld
xlat
loopne
jl
jmp
mov
out
xchg
mov
dec
aaa
adc
dec
lods
jae
loop,pt
mov
jb
push
iret
xchg
dec
mov
mov
mov
testl
fcomp
inc
nop
ja
xor
mov
inc
into
fwait
pop
imul
iret
sbb
mov
push
sub
lahf
mov
cmpsb
push
lds
lcall
cs
xor
push
xchg
hlt
out
jno
div
xor
pop
push
mov
mov
push
out
cmp
sub
jbe
ret
adcb
mov
call
xchg
lods
adc
push
and
mov
xor
daa
loop
jnp
mov
jle
test
push
push
cmp
fidivs
pop
pop
nop
imul
mov
pop
aas
dec
aas
pop
push
andnps
jbe
push
jecxz
xchg
mulb
andb
or
sahf
nop
push
or
mov
push
push
lret
jno
and
push
outsb
fisubl
in
outsb
out
pop
mov
inc
lock
mov
rolb
arpl
ret
in
pushf
leave
jne
cmp
daa
je
js
testl
xorl
ret
jmp
jmp
das
insb
cmp
adc
aas
ja
ds
and
add
xchg
push
mov
lret
push
jno
dec
aaa
push
inc
push
inc
mov
ret
and
sub
aaa
adc
aaa
adc
sbb
dec
cmc
or
test
imul
cs
dec
ret
xor
or
sub
shl
push
ss
mov
jge
cmp
fbld
xchg
push
sub
push
cmpsl
xchg
sbb
mov
adc
scas
cmp
jmp
test
mov
jbe
xchg
sbb
jno
ljmp
push
hlt
out
decb
cmc
inc
sub
inc
xor
sbb
pop
cmp
mov
sbb
nop
mov
mov
scas
mov
das
mov
add
mov
ljmp
dec
imul
xchg
clc
pusha
fdivr
sub
aaa
adc
sahf
mov
pop
mov
divl
mov
arpl
cmpb
or
lret
mov
cld
jle
aaa
xchg
cmp
pop
lds
and
mov
inc
lds
xchg
scas
mov
cmp
sbb
test
fsubp
jg
xor
mov
ss
test
scas
mov
ja
test
popa
mov
xchg
out
addr16
int3
lock
in
int3
out
mov
push
out
inc
leave
jb
ret
lock
fidivl
sub
sti
pop
arpl
mov
pop
cmpsl
push
mov
sbb
mov
mull
inc
lret
push
jecxz
dec
pop
mov
push
mov
test
mov
sbb
test
cli
mov
popa
test
std
test
xlat
mov
loopne
jmp
xchg
lret
jmp
push
sahf
dec
cwtl
out
xchg
jle
mov
mov
pop
mov
push
mov
dec
sbb
int
nop
jbe
adc
out
mov
add
daa
add
iret
or
cwtl
mov
adc
je
lahf
test
add
stc
sub
test
cmp
pop
mov
enter
das
add
cmp
xor
mov
fnstcw
repz
out
fdivr
push
aaa
lods
lds
scas
mov
and
cmpsb
jb
dec
mov
mov
inc
adc
or
fbstp
or
cmp
xor
insb
xor
cwtl
mov
ret
rcr
mov
jl
add
xlat
sti
rcrb
repz
pop
repz
movsl
lret
ss
outsl
cld
les
xchg
pop
adc
mov
add
movsl
sti
sbb
mov
pushf
mov
and
gs
fadd
inc
iret
loopne
and
add
cli
lods
test
inc
fistps
fsubrl
je
scas
xchg
mov
rolb
cmp
enter
xlat
rcrb
call
pop
imul
aam
ja
mov
lods
mov
rcrl
in
xor
lods
shr
inc
mov
imul
lcall
mov
sbb
mov
mov
adc
movsl
xor
mov
push
jns
lock
mov
aaa
jmp
sbb
push
sbb
push
xchg
xor
pop
out
xchg
push
mov
subl
inc
xchg
push
shufps
popa
cltd
int3
add
adc
add
sub
xor
ret
das
and
lcall
test
sub
xor
mov
fldt
iret
push
lock
dec
out
adc
xor
testl
and
lock
sub
mov
jg
push
subl
mov
clc
scas
lods
sub
pop
pop
mov
xchg
jge
popf
push
jbe
testb
sbb
fptan
cli
xchg
es
pcmpeqb
je
pop
mov
inc
pop
jo
loop
xchg
hlt
pusha
repnz
ret
cmpsl
xor
jbe
subb
popf
cwtl
or
add
rolb
pop
das
aaa
and
mov
test
and
sbbl
stos
orl
je
aas
movsb
outsl
ja
jno
loopne
and
jg
jo
cmp
rcrb
mov
jg
xchg
jg
push
in
mov
fisubl
mov
adc
jb
rolb
insb
mov
pop
mov
mov
jne
mov
jae
mov
test
inc
mov
sbb
cld
cli
leave
mov
jge
sbb
cmpxchg
jo
mov
adc
pop
adc
dec
loopne
add
jmp
fisubrl
mov
adc
push
xor
add
popf
cmc
inc
iret
jle
sbb
push
ljmp
mov
test
push
fidivl
stos
or
pop
xor
and
mov
pop
std
push
adc
gs
push
add
add
lock
fmulp
fidivs
adc
rcrl
call
aad
enter
jb
insb
mov
je
enter
sbb
mov
fcompl
push
mov
js
pop
xchg
xor
dec
cmpsb
inc
xchg
add
or
int
bound
cs
out
jge
movsl
or
ucomiss
lds
lods
addr16
jo
push
dec
pop
movsl
mov
dec
stos
fs
in
mov
pop
in
cmpsl
fmul
mov
out
adc
xchg
push
mov
je
fists
sub
dec
ret
cmp
adc
push
xor
jo
and
mov
adc
aaa
push
aaa
fisubrl
push
push
sub
out
jae
and
stos
cltd
cmp
cmp
mov
repz
dec
ja
aaa
icebp
pop
sti
aad
add
xchg
dec
es
sub
das
jo
dec
test
xchg
sbb
push
xor
dec
dec
fnclex
or
mov
mov
sub
push
jecxz
int
adc
pop
pop
adc
xor
addr16
add
shll
icebp
rorb
xchg
and
mov
xor
and
adcl
sbb
call
loop
fdivrs
fs
or
incl
xor
push
test
and
dec
addr16
stos
push
repnz
jb
jne
movsl
xor
stos
aad
or
movsl
and
mov
incb
notl
mov
lcall
add
pop
xor
fsubrl
inc
jno
das
addr16
xchg
sub
push
push
imul
out
mov
xchg
lea
shll
mov
lahf
and
test
adc
nop
rcll
repnz
inc
out
jecxz
mov
push
jbe
inc
dec
stos
lock
add
mov
push
xorl
lcall
stos
push
xchg
jmp
push
jae
cmpsb
mov
sbb
lea
daa
pop
push
push
mov
ja
ljmp
push
arpl
stc
or
mov
mov
push
sub
out
pusha
dec
xlat
test
push
rorl
mov
inc
xor
push
push
mov
add
ljmp
pop
lret
daa
movsl
scas
stos
push
aam
aaa
jno
xchg
and
or
mov
out
or
xchg
scas
adc
leave
enter
mov
inc
stc
pop
or
push
push
mov
subl
push
inc
jl
scas
mov
mov
push
mov
pop
test
es
push
sub
popf
arpl
add
loope
inc
inc
sbb
test
repnz
mov
jo
test
ret
push
stos
add
pop
jno
mov
xor
cmp
xor
and
adc
jno
sub
bound
icebp
out
adc
xchg
xchg
ss
jae
pop
xor
fimuls
pop
mov
xlat
cmpsb
paddsw
sbb
mov
cmp
insb
sbb
jp
inc
lock
into
push
add
cmp
push
mov
push
imul
sub
cmp
pop
sub
imul
push
mov
mov
std
fwait
cwtl
push
cmp
dec
jl
pushf
push
std
jle
push
fdivl
xor
lcall
inc
pusha
iret
rcrb
call
aam
test
mov
pop
push
xchg
ds
sbb
out
mov
sbb
jo
fnstenv
push
cmp
sbb
imulb
xor
in
sbb
rcr
inc
jecxz
sub
push
int3
cmp
mov
pop
mov
out
sahf
dec
push
repz
fwait
mov
dec
movsl
lods
and
addr16
jnp
mov
pop
or
xchg
lea
add
ret
add
popf
rcr
dec
add
and
xchg
lods
xor
dec
pop
movsl
jp
cmpsb
mov
sbb
rcl
stc
mov
inc
fcompl
loop
or
adc
lcall
aam
mov
insl
xor
inc
mov
push
jno
mov
out
push
repnz
ffreep
outsl
cmp
dec
fsubs
and
mov
nop
mov
adc
cwtl
sarb
cli
or
inc
or
inc
das
mov
sbb
fsubr
sbb
push
sbb
in
das
arpl
cmp
sub
mov
ljmp
sti
mov
push
stos
hlt
push
cli
aad
mov
movsb
xor
es
repz
mov
addr16
faddp
enter
sub
lds
mov
sbb
popa
dec
iret
push
icebp
sbb
jl
push
add
cmpsb
cmc
sbb
pushf
and
sub
or
xor
xorb
sbb
loopne
inc
dec
in
imul
xor
xchg
mov
cwtl
lahf
xorl
movsl
stos
std
adcl
out
js
jl
movsb
cmp
iret
jne
loope
inc
sti
inc
into
imul
sub
push
icebp
push
or
scas
and
fnstcw
rcl
pop
push
dec
xchg
inc
mov
out
popf
cltd
mov
loope
jns
sub
fisttps
ja
push
ret
movsb
and
cli
xchg
xchg
push
jns
inc
pop
jle
scas
pusha
cmp
sub
lret
mov
cmp
divb
mov
ljmp
push
add
dec
inc
xchg
jb
addr16
stc
mull
lret
and
pop
inc
call
xchg
sub
push
push
jmp
fwait
pop
lret
dec
test
inc
jo
and
mov
nop
sbb
loop
je
in
mov
lcall
das
sbb
nop
inc
or
fwait
mov
in
clc
bound
int
mov
adcl
outsl
add
mov
lcall
jnp
fisubrl
mov
mov
lahf
xchg
lcall
rclb
cmp
out
fmuls
inc
lea
xor
mov
mov
pop
inc
shll
out
jne
mov
sbb
hlt
mov
lret
mov
iret
sbb
mov
mov
inc
sub
divl
jp
addr16
cmp
push
enter
scas
cmpsb
sahf
scas
fld
test
xor
out
arpl
xchg
and
shll
dec
add
fidivrl
aaa
push
rclb
or
jb
jbe
mov
sbb
outsb
mov
lods
push
in
push
int3
inc
jno
adc
mov
mov
in
cmovne
stos
movsb
inc
cmp
movsb
scas
adc
mov
xor
repnz
movsl
dec
and
mov
sarb
push
mov
push
fdivs
or
jns
add
add
and
in
push
mov
mov
adc
sbb
cmp
maxps
sbb
add
sbb
aam
fwait
pop
pop
stc
out
mov
sub
xchg
push
ret
fmul
imul
lea
dec
jne
adc
push
das
cmp
mov
and
add
mov
dec
cmp
cmp
fsubr
iret
mov
imul
cld
dec
fimull
pop
sbb
ljmp
xchg
push
fcmovu
push
adc
mov
enter
imul
adc
mov
inc
cmc
in
lret
or
fwait
jp
jg
fs
in
enter
js
inc
dec
fidivs
adc
cmc
push
imul
shll
mov
xchg
sub
stc
imul
inc
insb
push
cmc
nop
in
jecxz
and
das
popa
push
bound
insl
and
enter
push
xor
adc
sarb
mov
iret
adc
std
loopne
mov
sbb
out
ret
dec
je
aas
sub
stc
test
ficoms
sub
imul
mov
push
sbb
insl
xchg
cmp
imul
xchg
sbb
in
repz
mov
out
or
mov
sub
cmc
pop
mov
into
sbb
leave
inc
adc
loopne
out
mov
sub
sti
cs
stos
fldt
mov
sbb
push
fistl
dec
outsb
test
push
sbb
cmpsl
sbb
lods
movsb
mov
lret
daa
jb
mov
ja
pusha
or
sbb
and
in
inc
inc
pop
stos
jb
cmp
adc
pop
jne
push
pop
popf
dec
int
xor
xchg
inc
push
or
das
cmpsb
mov
sbb
jmp
mov
xchg
sbb
pop
mov
testl
mov
jmp
sub
cmpsl
icebp
mov
pop
mov
fdivs
dec
xor
stos
jbe
cld
dec
inc
rcrl
jne
mov
push
stc
pop
push
sbb
in
scas
fisubl
inc
js
bound
jmp
pop
into
rorl
out
dec
stc
sub
fimuls
call
shrl
push
mov
clc
ret
ret
or
jns
cmp
sahf
aad
test
pop
jae
fcmovne
xchg
and
push
cmpsb
cmpsb
jle
adc
push
and
pushf
cltd
adc
lods
xor
mov
mov
hlt
in
pop
xor
push
lock
inc
fistpll
dec
mov
repnz
jg
test
leave
divl
in
xrstors
adc
push
mov
test
pushl
ficompl
ljmp
cmp
stos
mov
sub
stc
imul
jno
or
dec
insl
nop
fwait
add
lcall
or
push
xor
pop
or
call
in
push
adc
int3
sub
pop
mov
mov
jp
cmpsl
je
mov
sahf
mov
test
mov
cld
int
repnz
loopne
imul
out
shll
sub
push
in
adc
mov
int
jmp
aad
rcll
push
test
sbb
xchg
shlb
imul
insb
outsb
pop
test
xchg
adc
dec
or
addb
mov
hlt
lcall
sti
les
cltd
cmp
cld
mov
fs
xchg
and
xor
mov
hlt
lods
xchg
pushf
stc
sub
out
push
or
push
cmp
fwait
out
push
cmpsl
outsl
or
sub
jle
rolb
mov
push
sti
test
int3
jl
inc
ja
xor
sub
xchg
or
or
fidivrl
jo
loope
imul
orb
mov
movsb
jb
sub
test
insb
push
cmc
fs
pushf
sub
push
daa
inc
sub
pop
or
cmpsb
aaa
lahf
add
jg
out
and
adc
out
mov
pop
cmp
lret
pop
jl
pop
xor
ret
sti
shl
je
call
sub
inc
test
fisubrs
pop
fs
sbb
pop
clc
pusha
jbe
pop
sub
sti
pop
add
pop
inc
mov
mov
jns
int3
mov
jb
xor
arpl
lea
sub
ds
inc
scas
push
shlb
sub
adc
cli
inc
js
dec
dec
sub
out
fsts
ficomps
add
repnz
cmp
mov
push
xor
fsubrs
jnp
mov
mov
sub
xchg
jnp
and
xchg
rolb
ficompl
mov
scas
call
loope
shlb
jl
fdivrl
cmp
sbb
es
mov
cmpsl
movl
push
cmove
jno
insb
popf
xchg
and
xor
imul
push
push
adc
lret
or
imul
in
stos
inc
add
das
stos
mov
jle
pop
cmp
mov
sub
pop
stc
jecxz
in
test
mov
addr16
les
out
xchg
movsb
or
cwtl
push
mov
sub
jg
inc
hlt
sahf
inc
xor
add
and
jecxz
call
inc
icebp
inc
bound
mov
pop
out
sbb
lods
pop
inc
fidivrs
adc
pop
adcb
pusha
mov
add
mov
mov
daa
mov
loope
addr16
dec
dec
filds
gs
mov
das
jns
enter
adc
push
mov
xor
movsb
popf
or
cmpsb
jmp
mov
les
ja
pushf
sub
xchg
mov
mov
jns
mov
data16
push
cli
shll
xor
cmpsb
addr16
in
cld
outsl
cmp
out
insb
or
fstps
iret
imulb
jbe
fldl
adc
push
les
cld
lods
shrb
mov
push
mov
pop
xchg
jb
adc
adc
inc
lahf
mov
in
push
imul
sbb
jno
mov
loope
aas
cmp
pop
pushl
mov
mov
sbb
gs
sbb
sahf
movl
cmc
sti
inc
mov
mov
das
mov
or
sbb
push
fiadds
out
rorb
jl
stos
or
xor
sub
test
xchg
das
adc
lret
fsubl
repz
imul
xchg
outsb
jecxz
popa
outsb
or
pop
xor
mov
inc
stos
inc
iret
jg
shll
sbb
lods
ss
jne
scas
sub
jge
push
xchg
bound
jno
in
fs
arpl
scas
cmpb
mov
dec
bound
xor
loop
lods
mov
loope
outsl
lock
lahf
jp
sub
xor
iret
lds
pop
loope
cli
mov
jnp
jg
bound
adc
bound
and
enter
adc
sub
das
mov
jg
cli
ss
cmp
mov
mov
data16
aaa
or
jbe
or
xor
mov
test
aaa
adc
jne
out
dec
hlt
int3
add
or
jns
mov
push
js
mov
push
jl
fcoml
mov
mov
aaa
mov
or
adc
mov
add
andb
loop
fs
cmp
cltd
jmp
xchg
loop
xorb
lea
add
or
xchg
push
pop
out
add
cmpxchg
pop
and
repz
adc
pop
cld
sub
arpl
push
arpl
inc
dec
dec
or
ds
faddp
or
js
pushf
add
adc
scas
mov
fwait
out
pushf
cmp
inc
xchg
mov
mov
popf
insb
pop
mov
punpcklbw
inc
shrl
or
fnstcw
lret
inc
push
or
lret
xchg
ja
add
jae
add
inc
inc
xlat
shl
pop
divl
mov
pop
lds
rorl
mulb
dec
sub
mov
xchg
mov
or
int
rorl
xchg
hlt
push
xor
lcall
sahf
in
xor
out
sarb
jge
inc
xchg
mov
insb
add
rorb
cmp
loope
icebp
repz
add
loop
fldl
sub
xor
orl
xchg
andl
inc
test
inc
adc
add
fwait
cmp
lock
aad
xchg
fldenv
loop
add
pop
sbb
adc
cmp
fcmovb
sub
adc
pop
inc
sub
mov
leave
xchg
dec
or
or
into
mov
sti
add
lret
sub
cmp
sarl
and
divb
and
pushf
rcrb
sbb
xor
ds
mov
dec
or
ret
cmpsb
inc
mov
xchg
push
xchg
addr16
jl
stos
xor
sub
mov
sahf
xor
jb
sbb
add
pusha
imul
sbb
jns
jns
push
cmpsl
push
and
pop
xlat
inc
adcb
mov
ljmp
fdivrl
push
mov
jle
out
imul
out
sub
out
ljmp
clc
add
imul
pop
faddl
jmp
cwtl
push
pop
sub
mov
mov
xchg
sbb
and
mov
aaa
dec
cs
imul
mov
loope
outsl
xchg
or
ror
addb
ficoms
scas
aaa
pop
mulb
push
inc
idivl
dec
mov
xchg
adc
fiadds
cmpsb
xorl
out
shlb
add
insb
lods
xchg
mov
stos
aaa
mov
xchg
push
inc
ret
or
push
flds
rorl
add
mov
add
pop
test
sbb
adc
jecxz
into
dec
xlat
lahf
out
das
fsts
xor
sub
mov
popf
stos
sub
popa
sbb
fwait
rolb
int
call
jmp
jge
adc
adc
sbb
jl
js
sbbl
mov
out
in
les
rcrb
loope
mov
ret
jns
xchg
mov
stc
pop
cs
fsubrs
pop
inc
ss
and
xchg
stc
pop
inc
mov
mov
sbb
push
adc
sbb
cli
sbb
mov
lods
sub
push
int
stos
jecxz
rcl
les
inc
add
aad
jmp
loop
out
fiaddl
mov
leave
cwtl
mov
fdivs
sub
dec
js
mov
shl
stos
loope
js
out
add
dec
adcl
push
sub
pusha
insl
dec
insl
fnstsw
push
pop
cltd
out
inc
mov
jl
sub
mov
dec
out
mov
js
divl
pop
mov
and
push
clc
loope
xchg
push
cli
ror
out
sbb
and
push
out
test
les
mov
call
fsubrl
ficoml
stos
ret
push
shll
sahf
or
shrb
stos
push
xchg
mov
pop
jae
sub
sbb
pop
mov
jno
add
inc
cmpsw
test
pushf
sarb
sub
popa
orl
xchg
push
andl
cwtl
pop
outsl
dec
sub
iret
jecxz
mov
or
push
lods
lcall
ja
cmp
sahf
imul
and
push
adc
mov
jbe
rclb
loope
outsl
cmp
jge
xchg
ret
out
lahf
enter
ss
es
imul
out
sahf
mov
inc
loope
in
repz
int
stc
stos
mov
push
loop
les
add
push
mov
into
test
nop
outsl
hlt
enter
jnp
jp
xor
ss
add
cmp
call
imul
xor
push
notb
xchg
stc
mov
adc
adc
jle
add
jp
je
or
mov
dec
fistl
push
fisttpll
std
mov
je
add
das
mov
mov
jle
sti
es
fwait
cmp
inc
call
movsb
mov
sub
or
and
in
jae
fcmovnu
ss
adc
pop
lret
fisttpll
cs
xchg
xor
add
lcall
addb
dec
jmp
push
sbb
mov
int3
mov
xchg
test
fstpt
lahf
inc
lods
dec
dec
lret
js
cltd
jbe
lret
adc
shrl
sarb
sti
mov
test
fimull
loope
pop
rcrl
pop
repnz
aad
rcrb
inc
adc
pop
xlat
movsl
or
mov
push
inc
inc
out
inc
cmpsl
adc
pop
sbbb
dec
dec
and
dec
jmp
xchg
subb
lcall
adc
mov
mull
sub
sub
mov
adc
ds
gs
punpcklwd
lods
mov
sbb
rclb
mull
adc
enter
movsb
sbb
mov
jno
lret
inc
bound
dec
enter
sub
xchg
les
jo
mov
sub
dec
gs
or
nop
inc
xchg
pusha
jg
mov
jl
and
paddusw
mov
int3
imul
mov
adc
add
loop
ficomps
push
xchg
mov
test
insb
sub
bnd
push
lds
jge
push
xchg
ljmp
outsl
lret
xor
testb
mov
lods
pusha
xchg
subl
lds
sarb
inc
cmp
mov
or
add
adc
push
lret
jno
pop
jg
sub
nop
sbb
loop
lds
and
out
das
repz
insb
mov
aas
into
mov
ret
xor
pop
pop
mov
jle
push
test
ffreep
je
outsl
aaa
cld
push
imul
sub
xchg
mov
popf
dec
arpl
add
fnstcw
mov
or
insl
jge,pt
in
lcall
xchg
std
stos
popa
rcl
clc
int3
iret
shrb
lea
cltd
mov
sbb
inc
das
pusha
scas
inc
stos
mov
dec
out
lods
dec
xchg
stos
xchg
sbb
mov
mov
push
fdivrs
shlb
fcoml
push
ja
clc
dec
icebp
push
movb
aas
cmp
pop
jo
aaa
pop
imul
mov
mov
and
sub
popf
push
xlat
mov
sbb
pusha
jmp
sbb
ss
sti
test
lds
popa
sbb
cmp
int
cwtl
movsb
sbb
sahf
addr16
inc
pushf
lods
sbb
adc
mov
xchg
std
fcoms
push
mov
cmp
inc
ret
jae
push
and
xchg
mov
dec
jge
stos
mov
and
jecxz
mov
int
out
into
fwait
add
dec
ss
popf
ret
jne
xor
sub
mov
cmp
sahf
fisttpl
inc
mov
cmp
ret
xlat
dec
push
stos
push
popa
mov
das
mov
nop
mov
jae
adcb
sbb
lcall
xor
imul
ret
pop
xchg
mov
cmpb
pop
xor
test
xor
sbb
xchg
jno
std
cmc
icebp
jbe
cwtl
jg
mov
scas
push
out
mov
je
lahf
shlb
orl
aad
jo
xchg
push
sbb
es
adcl
fdivl
pushf
or
push
rclb
inc
dec
subl
push
inc
pushf
adc
pop
fdivs
jae
xor
adc
push
inc
int
sbb
mov
xor
mov
mov
jno
cmp
lahf
jbe
cmp
jp
rclb
je
xor
lret
fsubr
add
or
push
adc
push
dec
js
lahf
mov
xchg
es
pop
aam
push
add
or
arpl
nop
pop
xlat
fdivl
push
sbb
mull
fisttpll
mov
push
jg
shrl
lods
mov
out
and
mov
sarl
fcmovu
sub
insl
sahf
mov
in
add
lahf
out
outsb
ss
mov
fisttpl
loope
lret
aas
in
imul
add
pop
dec
and
jecxz
mov
xchg
and
mov
inc
push
mov
and
test
addl
int3
cmpsb
stc
jae
jge
hlt
push
imul
sub
and
jl
jmp
xchg
cmp
jl
ficoml
mov
es
stos
pop
loopne
cltd
bnd
mov
rolb
cmpsb
ret
mov
mov
or
int3
push
mov
xchg
add
stos
mov
aaa
je
and
icebp
jns
inc
cmp
sbb
dec
shll
stos
pop
dec
test
rclb
js
pushf
push
in
jbe
add
rorb
jo
movsl
cld
iret
insl
dec
adc
xor
push
movsl
xchg
mov
push
inc
inc
into
jo
inc
mov
adc
sarl
cwtl
iret
jmp
jle
xlat
sub
xlat
xor
aam
lea
mov
add
rolb
inc
scas
inc
push
mov
rcrb
inc
outsl
and
outsb
in
mov
adc
xlat
xchg
cmp
mov
push
inc
into
sbb
cmp
icebp
sbb
jl
jo
mov
addl
in
sbb
inc
inc
jle
add
mulps
in
xchg
loope,pt
std
dec
xor
pop
fstps
loope
shrl
dec
sbb
mov
cmp
pusha
push
add
enter
mov
push
add
addb
out
lods
sub
xlat
loope
push
mov
ret
mov
cs
add
ss
mov
push
imul
loope
outsl
sti
daa
add
push
push
stc
add
outsb
sub
aam
jge
out
or
mov
push
int
fdivrl
push
scas
or
push
mov
test
stc
bound
pop
mov
push
lods
fcompl
push
fs
fsubl
pop
push
and
lcall
stc
lcall
push
sub
lret
idivb
jl
mov
ficompl
out
imulb
inc
out
aaa
push
lret
ret
pop
sub
push
fst
pop
mov
rcll
daa
sub
das
cltd
dec
and
mov
icebp
jmp
xor
xchg
adc
outsl
sbb
push
push
scas
dec
int3
ret
sbb
rorl
jp
jns
mov
dec
add
ret
repnz
adc
push
xor
mov
push
repnz
popa
das
dec
or
sbb
enter
sbb
mov
adc
add
or
aam
ds
femms
stos
sub
xor
jge
push
mov
jp
cmp
mov
sub
scas
dec
in
mov
rolb
mov
aam
decl
jno
es
fsts
or
nop
mov
dec
stos
aad
xor
push
lea
test
lods
mov
sbb
sahf
push
dec
jge
add
sbb
nop
aam
stos
xchg
or
pushf
sub
popa
push
in
in
pop
lahf
mov
mov
mov
ljmp
imul
inc
icebp
int3
pop
cmp
cltd
ud1
sbb
dec
dec
adc
mov
push
cmp
pop
les
jecxz
mov
or
or
xchg
cli
repnz
stos
sub
out
lea
imul
jne
push
ret
push
dec
sub
jnp
or
jae
cmp
filds
shr
mov
pusha
inc
outsl
lds
jle
mov
pop
jle
mov
mov
sub
mov
dec
lods
lods
out
sub
ret
xchg
jmp
mov
or
push
and
cs
div
dec
lcall
or
pop
sub
jle
lret
out
loop
aam
sub
inc
push
xor
into
cs
mov
sub
shl
mov
xlat
mov
inc
loope
pop
shll
outsl
cmp
pushf
cmp
dec
addl
mov
pop
mov
mov
popa
rcl
or
sub
cmc
nop
fsts
push
out
push
push
mov
jae
fnstcw
and
push
fstpt
add
loop
icebp
inc
mov
imul
cmp
aam
sbb
das
xor
imul
cmc
pop
loop
fldl
jmp
enter
popa
sbb
imul
xchg
es
mov
mov
mov
ljmp
mov
movsl
mov
jnp
lods
jg
cmc
fdivl
mov
xchg
fbld
add
xor
inc
ret
cmp
je
pop
lret
mov
cwtl
std
adc
adc
push
fnsave
test
insb
push
cmp
imul
fsubl
ret
ds
xor
fwait
jmp
insb
inc
mov
push
mov
shll
sub
stc
mov
in
push
pop
jae
mov
pusha
in
mov
mov
dec
fistpl
push
in
sbb
mov
out
mov
movsb
mov
mov
les
dec
repz
sub
sbb
mov
push
es
inc
ret
xchg
jnp
fcomps
dec
fadds
and
loop
mov
fstl
dec
cmp
hlt
mov
lcall
xor
add
adc
and
add
inc
in
pop
mov
cltd
leave
es
inc
insl
lods
dec
mov
push
out
pop
dec
lret
inc
fnsave
mov
and
sub
jmp
stos
adc
lret
or
cmpsl
lret
bound
sarl
stos
or
loope
test
int3
jo
xor
js
call
sub
clc
jno
jg
nop
aaa
clc
xor
xchg
xor
mov
dec
loope
push
inc
fldenv
mov
shlb
xor
nop
pop
mov
lret
xor
add
xor
mov
add
pop
aad
and
xchg
roll
rorl
push
inc
lds
xlat
lods
test
lds
incb
or
inc
jge
clc
aaa
push
push
cmpsb
mov
mov
in
mov
xor
sbb
adc
enter
push
pop
mov
out
xchg
lcall
jge
jg
jb
ret
shl
outsb
aas
in
mov
xor
dec
bound
cltd
xchg
jp
or
ja
jno
mov
mov
sbb
add
or
repnz
fs
xchg
cli
xchg
mov
xchg
mov
and
lret
pusha
in
mov
imul
outsl
push
or
push
adc
pop
push
std
mov
xor
xchg
sbb
icebp
stos
int3
and
in
in
pop
adc
stos
pop
mov
xchg
and
popf
stc
jp
rclb
lds
jg
outsl
gs
ja
jno
adc
dec
cmp
mov
cmp
negl
cmpsb
mov
call
xchg
push
enter
pop
lcall
mov
test
and
pop
mov
fidivl
in
and
inc
dec
ret
fistl
clc
addr16
xchg
pop
adc
out
call
outsb
ds
stos
scas
xor
dec
jnp
adc
jecxz
sbb
inc
add
pushl
incl
jle
or
lods
in
repz
add
pop
int
mov
in
std
add
pushf
jae
inc
mov
stos
jecxz
pop
mov
loopne
ljmp
test
push
int3
lcall
pop
push
or
sbb
fbstp
repnz
sahf
neg
inc
mov
or
dec
sub
rorb
ret
push
test
out
lret
insl
enter
icebp
jno
and
jg
lcall
or
sub
xor
inc
adc
pop
repz
push
sbb
jae
or
dec
into
bound
mov
rolb
aam
mov
ss
pop
js
cmp
sub
and
out
push
fidivs
fidivrs
xchg
fdivrl
xchg
push
mov
sbbl
cwtl
clc
es
icebp
mov
inc
inc
fwait
ds
outsb
iret
aas
fmull
es
push
lret
pop
in
dec
in
push
adc
out
jae
cmpsl
ror
sub
lea
scas
stc
pop
lock
call
pop
xor
mov
mov
imul
inc
fcomps
in
shrw
jno
addr16
dec
insb
mov
cmp
jns
sahf
pop
or
and
mov
adc
and
call
stos
stos
rcl
popa
call
shrl
test
jmp
add
int
mov
mov
mov
popf
in
icebp
daa
add
aaa
in
push
xor
in
test
mov
scas
cmp
cli
pop
add
cs
adc
pop
adc
outsl
dec
push
divl
pop
into
add
inc
sub
cmp
push
jg
and
xchg
or
cmp
push
dec
scas
sahf
xchg
adc
push
lgs
sub
jnp
cmp
xorl
or
dec
lods
std
cmp
mov
insb
push
ret
mov
mov
dec
and
pop
fidivs
add
mov
mov
sub
and
fsubr
pop
xor
xor
ret
adc
rorl
lea
mov
jg
pop
popa
aad
enter
outsl
outsb
sbb
xchg
mov
aaa
das
mov
pop
mov
xchg
sbb
pop
sub
cmp
aas
insl
das
aaa
aaa
popa
pop
xlat
xor
into
daa
inc
or
sti
pop
push
inc
shl
clc
pop
lcall
js
fisubrs
jne
mov
or
mov
xlat
scas
and
inc
sbb
adc
repnz
loope
xchg
imul
mov
mov
aam
aaa
loope
ficoml
mov
shll
cmp
lcall
cld
mov
dec
jl
jb
mov
mov
mov
and
hlt
movsl
shll
and
stc
popf
push
adc
lds
int3
aas
mov
mov
lods
icebp
mov
je
mov
int3
imul
mov
jg
fwait
repnz
mov
int3
mov
mov
pop
mov
jecxz
mov
mov
mov
shr
dec
push
movsb
shlb
or
cmpsb
or
dec
push
cmp
xchg
ret
cmp
pushf
mov
es
dec
aas
adc
mov
sbbb
clc
fs
daa
sub
lods
inc
adc
xchg
xor
sub
rcl
dec
test
aam
inc
cmpsb
add
out
jg
dec
cmc
das
sub
mov
and
enter
mov
lods
pushf
mov
mov
fdivs
jo
mov
inc
jae
add
rorb
test
addl
jae
mov
sbb
inc
sahf
pop
and
push
mov
in
push
add
outsb
sub
mov
inc
add
inc
gs
sbb
pop
pop
xchg
mov
dec
inc
fistps
aam
or
test
jle
mov
adc
jge
addr16
mov
fbstp
cmpsl
scas
mov
clc
pushf
fildl
xor
data16
jle
aam
scas
gs
dec
xchg
lds
pop
cmp
jp
lock
arpl
push
pop
cmp
sti
jge
rolb
scas
inc
pushf
push
dec
adc
iret
sbb
inc
cli
cltd
int3
mov
pop
jge
repz
push
add
loop
fsubrl
jb
ljmp
leave
pop
sbb
incl
shrl
ss
mov
out
mov
cmc
push
push
sbb
jb
dec
jno
inc
and
pop
lods
ja
mov
mov
ds
cmc
push
cmp
inc
push
leave
out
xchg
inc
stos
mov
cwtl
and
data16
push
dec
sub
lcall
call
jo
push
mov
fcmovnbe
jp
lea
mov
mov
xor
in
nop
add
addr16
and
into
dec
stos
fcmovnbe
rcrl
mov
xlat
xchg
inc
mov
jnp
pop
dec
mov
inc
pop
push
xchg
add
mov
mov
lock
ret
test
aam
jmp
lock
shl
loopne
inc
insl
dec
mov
cmp
sub
push
daa
and
fsub
add
repnz
mov
add
js
outsb
test
pop
xchg
sbb
pop
pop
jge
cmp
cmpsl
leave
rol
in
lea
mov
xor
jl
dec
jnp
into
push
pop
clc
sub
cltd
mov
out
pop
imul
aam
loopne
sti
fiadds
jbe
popf
jns
sti
jbe
call
mov
cmp
lea
lods
dec
cmc
arpl
outsl
test
aaa
ja
mov
inc
sar
cmpsl
dec
lahf
fsubrs
clc
mov
inc
dec
je
hlt
jo
loope
add
jbe
xor
mov
jecxz
fistps
sbb
push
xchg
outsb
jne
sbbl
mov
cli
fldt
sbbb
mov
pop
push
jl
movl
arpl
ret
dec
sbb
sahf
push
sbb
cmp
ret
loopne
dec
xchg
enter
push
pop
lock
sub
pop
pop
test
xchg
push
dec
in
xchg
ficoml
andl
filds
push
inc
adcb
jbe
push
lret
in
jle
pop
dec
sub
setae
fsubr
pusha
cli
movsb
fabs
sbb
inc
and
and
cmp
lcall
loope
lcall
fnstenv
mov
xlat
nop
xchg
in
rcr
mov
xchg
or
add
emms
push
mov
or
arpl
cltd
movq
adc
push
xchg
adc
imul
fnstenv
lahf
popf
fldenv
les
sub
pusha
dec
push
pusha
and
cli
test
dec
mov
and
outsb
inc
push
roll
iret
push
inc
daa
mov
ss
aaa
jne
mov
out
cmp
jo
fistpl
ljmp
jmp
inc
sub
inc
and
and
ret
sub
loope
or
sarl
iret
mov
push
cmpsl
adc
test
xchg
push
out
add
push
pop
testl
xor
jle
pop
mov
push
dec
lcall
xchg
inc
sbb
push
lcall
xor
ljmp
pushf
xor
ror
xor
fimuls
rcl
jle
xchg
dec
fs
out
jle
mov
xchg
dec
shl
stos
xlat
out
xchg
xor
sub
fwait
xchg
test
or
jns
and
cmc
ret
xor
ret
fdivl
pop
sub
push
std
mov
test
cmp
or
je
fnsave
repz
mov
xor
pop
adc
fildll
iret
adc
jbe
mov
sbb
mull
or
lret
sbb
lret
push
inc
aas
fsubs
sbb
xor
sbb
xor
nop
cmpb
pop
mov
lcall
jnp
mov
mov
in
sub
shll
push
out
adc
testb
dec
clc
sbb
cs
in
leave
adc
mov
daa
mov
xchg
jmp
cwtl
loope
mov
notl
imul
and
push
leave
fldlg2
dec
mov
mov
sahf
xor
scas
pop
hlt
jl
push
and
mov
push
xchg
addr16
push
sbb
mov
mov
sub
mov
lret
pop
loope
cmp
jecxz
jae
outsb
push
add
sbbb
jl
cmpsb
loop
adc
dec
mov
and
mov
in
orl
mov
inc
lahf
shrl
push
push
dec
xor
or
cmp
jle
lret
idivl
testb
mov
cmp
int
repnz
jecxz
mov
jg
int3
pop
pushaw
test
mov
mov
psubusw
bound
mov
jnp
pop
int
mov
jge
and
ret
sbb
sub
cmp
stos
fs
arpl
clc
scas
mov
and
sub
sbb
dec
add
cltd
dec
repz
mov
adc
mov
imul
out
mov
fs
pop
lret
lock
pop
adc
cmp
xor
mov
or
inc
movsbl
fstpl
fimull
call
in
int
test
in
nop
fsts
es
test
sub
inc
imul
dec
scas
inc
and
pslld
mov
cmp
and
lock
outsl
push
fmuls
push
sub
sub
sbb
aaa
lock
dec
rclb
add
xor
sub
pop
mov
int
rclb
or
shrl
cmpb
sbb
cmc
xchg
pop
xor
cwtl
cmp
idivl
dec
sti
sub
pop
jmp
rcl
pop
mov
bound
flds
cmc
clc
arpl
test
lret
mov
dec
pop
pop
adc
nop
cld
scas
push
sub
enter
push
and
push
cli
outsl
lds
int
in
test
movsl
xchg
fisttps
and
sbb
mov
stos
push
sti
push
mov
add
aas
dec
jecxz
repnz
mov
or
or
outsl
punpckldq
lds
gs
jmp
lret
inc
mov
add
jg
lcall
pop
jns
jbe
sub
enter
mov
pop
sub
mov
ja
ja
sbb
rcll
movsl
xor
data16
jmp
sbb
xor
test
fcmovu
add
iret
ret
lcall
outsb
adc
push
int
outsb
jns
jp
inc
pushf
adc
jp
mov
and
popf
xor
dec
pop
les
lret
arpl
mov
imul
out
popa
out
cmp
xchg
xor
mov
cmp
sub
out
dec
hlt
mov
fwait
arpl
cmpsl
push
mov
inc
and
sbb
push
add
aam
aas
jnp
out
adc
aad
adcb
pop
test
and
and
insw
int3
dec
into
adc
popf
daa
call
out
outsb
dec
and
mov
pop
js
xor
roll
jmp
sub
daa
mov
adc
mov
gs
mov
out
ficoml
mov
lds
vmwrite
es
push
push
xchg
and
jge
xor
sub
or
testb
add
jecxz
aaa
sar
sub
bound
push
imul
repnz
ret
rolb
repnz
lods
lock
push
lret
aas
add
outsl
jnp
and
or
ljmp
aaa
fstps
cmp
fsts
into
scas
sbbl
inc
pop
arpl
ret
xor
mov
xlat
pop
or
shrb
ss
lods
push
inc
les
cmp
or
mov
pop
jb
inc
or
add
lcall
icebp
adc
jmp
inc
add
je
out
stc
lods
jo
push
push
mov
cmp
pop
pop
jp
adc
shl
test
mov
bound
mov
mov
aas
inc
mov
idivb
pop
je
mull
scas
push
aam
sbb
push
push
in
add
lods
pop
mov
push
push
iret
dec
mov
jg
fwait
les
jle
hlt
cmp
or
in
xor
ret
jecxz
pop
push
loop
inc
push
movsl
mov
clc
pop
sbb
out
push
mov
lea
mov
lcall
cwtl
std
shrb
add
xchg
popf
ljmp
push
stc
mov
jne
test
xchg
sbb
movsb
sub
jb
inc
sub
pavgb
mov
push
mov
mov
ljmp
pop
scas
popf
fimuls
xor
lods
add
roll
fbstp
lds
lahf
sbb
in
adc
dec
push
jb
adc
icebp
imul
dec
mov
hlt
lcall
fsubs
mov
lock
pop
ret
jbe
pop
outsl
outsb
bound
movsl
dec
push
loope
xor
pop
lahf
dec
test
mov
adc
inc
xchg
aaa
xchg
loope
push
aad
arpl
jnp
inc
sub
pop
pop
fwait
pop
pop
insb
int3
pop
or
mov
or
stos
fstl
lods
subb
add
cmp
and
fwait
out
adc
dec
sahf
fcmovb
mov
xchg
outsb
push
mov
sub
ret
sti
sbb
fstl
fldcw
cmp
add
xor
test
lods
int
mov
roll
mov
mov
push
adc
int3
push
je
adc
outsb
stos
idivb
mov
shll
das
inc
bound
mov
adc
in
outsb
pop
inc
mov
rcrl
fistpl
and
shrb
cmc
dec
xchg
push
idivb
mov
fdivr
push
pop
sbb
or
iret
inc
push
notb
das
lods
ja
nop
adc
push
jl
insb
or
popf
cmp
sar
sub
popa
add
ret
adc
sub
xor
inc
movsb
xlat
int
ficompl
and
pop
adc
or
cwtl
test
mov
mov
xchg
jo
adc
or
xor
stos
mov
cmpsl
call
insl
pop
push
and
movsl
icebp
push
outsb
fs
iret
ds
loopne
hlt
xchg
cs
dec
push
cli
push
jno
in
or
jmp
icebp
outsl
mov
es
lret
shl
mov
in
iret
es
fimull
stos
cmp
repnz
push
scas
sbb
sbb
sbb
jns
dec
imul
mov
jo
int3
popf
js
test
jecxz
and
fidivrs
test
sub
js
insl
jecxz
fcomps
inc
xorb
addr16
cmc
adc
mov
ss
mov
add
cmp
fisubs
imul
xor
test
loopne
test
es
xlat
pushf
ds
icebp
int3
js
div
jo
shlb
mov
ds
cmpsl
inc
jb
xorl
push
inc
and
add
stos
cld
in
adc
insl
push
scas
std
jg
xchg
scas
jmp
jnp
push
rcll
add
loop
push
out
es
jmp
push
sbb
js
paddw
fxtract
inc
mov
mov
fcmove
inc
mov
add
iret
fiadds
inc
dec
shrl
jb
jge
cs
mov
adc
pop
sbb
and
inc
test
movsl
sbb
lock
ret
pop
mull
sbb
shll
and
iret
push
jo
lcall
sub
jo
add
popl
xchg
rol
out
nop
lret
xchg
stos
push
sub
mov
lods
jae
jo
in
cld
pop
mov
pop
cmp
cltd
mov
xchg
fucom
hlt
xchg
punpcklwd
gs
rclb
xchg
xchg
cmpsl
lds
js
push
fmull
pop
xchg
cmp
and
adc
pop
rcr
cltd
pushl
loop
dec
jmp
push
les
or
sub
jnp
pop
push
jle
xchg
jb
xor
xor
out
cmp
jnp
lcall
xchg
leave
sahf
shrb
jae
in
aad
call
jnp
pop
push
push
ret
sub
pop
adc
fsubr
mov
pop
rcl
bsf
bnd
mov
and
ret
mov
stos
jecxz
push
and
add
pushf
jle
leave
adc
bound
scas
sub
lods
icebp
mov
sub
cld
inc
iret
add
sub
mov
jmp
ds
push
insl
xchg
push
lods
ja
out
mov
xchg
sub
je
jno
xchg
mov
mov
sbb
cmc
mov
aam
xchg
mov
into
or
cmpsb
insl
xchg
adc
adc
cmc
sbb
aas
mov
dec
popa
xchg
fs
cmpsl
push
gs
fmuls
push
sub
sub
fidivs
dec
fistpll
popf
sti
pop
dec
pop
sbb
mov
xchg
ss
ja
out
mov
sub
sub
cli
sub
sbb
mov
xchg
jbe
shrb
aam
arpl
push
jl
and
pop
je
pushf
cmp
sbb
push
cmpsl
jnp
jb
daa
pop
and
jmp
subl
cmpsl
call
addr16
cltd
sbb
jl
sbb
sbb
adc
in
jo
movsb
or
inc
fcoms
lret
flds
add
js
sub
adc
das
mov
cs
mov
xchg
mov
sub
leave
push
repz
and
jge
pop
mov
ficoml
cmpsl
faddl
or
mov
cld
inc
stos
xor
imul
stos
add
push
adc
rclb
repnz
cmp
cmp
sub
imul
lods
mov
fsubrl
fistl
cmp
mov
jl
add
mov
and
and
gs
scas
xchg
dec
adc
ror
mov
inc
pop
cmp
roll
pop
adc
inc
jno
fadd
inc
adc
xchg
insb
mov
scas
pop
push
xchg
sub
imul
in
movsl
mov
sbb
jns
cmc
xor
and
or
pop
cmc
jae
pusha
testb
daa
push
ljmp
jb
ja
sub
andl
xchg
sbb
mov
loopne
cmpsb
lcall
add
daa
cmp
mov
movsl
repz
test
incb
adc
test
push
idiv
add
dec
mov
inc
shr
call
lods
sub
jno
xor
xor
das
jecxz
mov
push
and
daa
sub
loop
pop
push
xor
std
pop
mov
imul
ss
andb
and
adc
dec
sub
or
sub
lods
in
pop
flds
push
mov
negb
aam
add
int
adc
mov
cmpsb
inc
icebp
out
ret
jmp
add
cmp
pop
mov
push
stc
cmpsb
add
mov
push
xor
lea
mov
loop
ja
adc
int
loope
inc
vpsraw
pushf
inc
test
jo
lods
cmp
xchg
pop
mov
in
pop
push
fs
sub
adc
dec
testl
adc
cmc
push
lods
orb
fs
mov
mov
adc
xor
shl
sub
lret
mov
aam
stos
jmp
sub
movsb
and
mov
insb
cmp
xchg
cli
and
rcl
imul
cmc
int
shrl
sbb
je
sbb
arpl
push
mov
xor
mov
lock
clc
lret
mov
aam
iret
in
fnstenv
fcoml
cld
addr16
dec
es
pop
add
xchg
vpshufd
mov
and
sarl
lret
dec
movsb
out
add
cltd
jo
cli
inc
ficomps
mov
or
cmp
loope
test
and
fwait
mov
int
cmp
add
inc
push
push
cmp
adc
dec
enter
mov
je
or
xor
pop
push
mov
inc
scas
in
inc
or
jne
rcll
adc
push
loopne
cld
cli
add
push
fnstcw
int
push
sahf
shll
or
sti
pop
mov
incl
jo
pusha
push
jmp
lods
scas
out
aaa
test
call
pop
out
sbb
lcall
or
outsl
sbb
dec
int3
xchg
test
mov
daa
or
divl
cmpb
mov
xchg
aam
test
push
cltd
rcl
in
movsl
jecxz
outsb
and
movsb
pusha
push
lcall
loopne
or
xchg
mov
cmp
pop
inc
jo
jle
inc
in
stc
out
int
xor
hlt
add
cwtl
clc
mov
out
mov
pop
dec
dec
add
sub
jle
or
stos
mov
rcrl
adc
fimuls
dec
call
in
push
mov
xchg
stos
outsl
movsl
sub
pop
dec
test
inc
in
xlat
lods
jge,pn
mov
jnp
das
mov
dec
movsb
xorb
icebp
push
mov
int3
dec
lret
xchg
push
popf
in
lret
movsl
push
cs
hlt
adc
data16
cmp
cmp
movsb
mov
adc
dec
das
sbb
mov
cmp
loop
jmp
outsl
jns
mov
inc
mov
popa
xor
adc
pop
and
inc
push
js
jge
dec
fcmovnb
into
rcll
adc
fs
sub
repnz
xchg
sub
dec
mov
test
cmp
je
and
xchg
and
aas
push
xchg
push
popf
mov
int
sub
xchg
insl
jb
and
and
dec
fwait
shl
mov
jno
out
in
imul
std
sub
shrb
mov
mov
adc
or
shrl
leave
xchg
cli
sub
lea
repz
cwtl
sbb
jmp
inc
add
add
aad
hlt
and
in
pop
mov
int3
ret
mov
xor
dec
add
sub
inc
push
inc
sbb
in
and
or
fsubrp
adcl
sub
lods
lcall
out
and
add
sbb
add
int
xchg
rorl
mov
adcl
cmpsb
fstp
das
orb
hlt
test
out
sbb
movsb
push
push
mov
push
test
mov
or
rcrl
loop
dec
js
je
mov
sbb
popf
in
add
rorb
in
mov
adc
rcl
mov
jecxz
popa
inc
mov
dec
xchg
addr16
out
repz
mov
ds
sbb
out
imul
cli
push
aad
in
mov
cmovbe
lcall
std
out
xor
cmpsl
jnp
adc
push
es
add
inc
icebp
pop
dec
sarb
mov
fwait
pop
push
pop
insb
movsl
sbb
inc
cmpsl
rclb
xor
nopl
imul
lods
xchg
jne
sub
insl
xor
jl
dec
bnd
das
jne
push
int3
dec
xor
xchg
jge
push
pop
mov
pop
stos
sti
mov
ret
dec
in
pop
xchg
call
pop
adc
mov
pop
sbb
or
mov
scas
clc
add
loop
pop
in
lahf
pop
push
dec
lahf
ss
lcall
dec
dec
add
xchg
insb
cltd
adcl
mov
sar
mov
lock
ljmp
popf
adc
fstps
nop
mov
adc
jmp
xchg
pop
dec
fndisi(8087
lea
orl
in
cmp
stos
aaa
or
jg
and
or
xchg
adc
and
jo
pop
test
mov
dec
xchg
jge
jecxz
lds
push
push
pop
add
jge
mov
cwtl
pop
mov
dec
iret
loop
mov
sub
dec
push
outsl
jge
out
jl
ljmp
xchg
std
lahf
sub
test
mov
mov
imul
daa
sarb
xchg
pop
inc
push
lret
xor
call
jecxz
movsb
loopne
sbb
fdiv
dec
dec
rcrl
cmc
sub
mov
fwait
loope
ja
cmc
jl
jg
outsb
sti
je
xchg
testl
sbb
out
or
mov
sub
mov
dec
xchg
cltd
mov
cmp
rcr
fistps
outsb
sarb
or
pop
lock
mov
xchg
fisubl
data16
daa
mov
sub
imul
loop
mov
cmp
sub
mov
sahf
adc
test
and
mov
xchg
in
lods
pusha
mov
aam
test
nop
les
cli
in
xor
nop
jo
and
jae
lret
mov
ret
sub
call
mov
dec
fnsave
xchg
clc
test
xchg
fs
pushf
sub
push
or
lcall
test
pop
loopne
mov
enter
out
mov
ss
fcomip
pusha
call
jge
xorb
pand
test
ds
push
out
lods
iret
aad
pop
mov
addr16
ljmp
in
dec
push
and
push
rcll
cld
xchg
push
push
jnp
fsub
test
rep
add
pushl
dec
into
sbb
mov
shll
or
mov
int
pop
or
cmp
mov
repnz
and
jp
mov
test
xchg
aaa
in
in
fldt
sub
and
adc
cwtl
jo
xor
xor
xor
add
int
jnp
pop
push
ljmp
add
ja
jae
lds
mov
insw
clc
mov
rorl
into
movsb
jo
aas
mov
in
stos
xchg
aaa
push
lea
es
dec
sbb
mov
loop
imul
adc
xchg
xor
or
rcl
es
mov
mov
fs
or
icebp
dec
adc
jmp
mov
sub
jg
ret
call
pop
xor
jmp
cli
xchg
pop
adcl
add
jp
cmp
scas
andl
xchg
cmp
lods
adc
shrl
lods
cltd
mov
stos
adc
scas
lcall
movsb
mov
test
pop
pop
push
sti
xor
lea
or
insl
scas
ljmp
popa
loope
xchg
iret
aam
iret
inc
xlat
lret
adc
iret
aad
ja
xor
out
jno
sbb
or
dec
icebp
cs
clc
xchg
xlat
cs
out
inc
rclb
sahf
scas
incb
addr16
jae
push
sub
push
push
cltd
adc
mov
in
adc
lmsw
daa
xor
mov
mov
ljmp
movsl
sarl
mov
push
iret
pop
mov
mov
in
hlt
add
fcmovnbe
mov
out
xchg
cltd
mov
mov
leave
add
add
or
add
and
insl
fmull
and
mov
stos
xchg
js
cmp
std
pusha
rolb
mov
lcall
or
stc
jp
or
in
pushf
cmpsl
xchg
jl
loopne
shrl
pop
jg
add
mov
pop
mov
test
int
stc
ja
aas
jp
test
movhlps
pop
int3
addr16
cmpsb
lock
xchg
jle
pushf
cli
lds
iret
and
rolb
lods
dec
iret
cwtl
xor
roll
lods
mov
lods
clc
std
mov
pop
arpl
mov
push
imul
movsb
or
out
push
dec
mov
pop
dec
add
sbb
sub
lods
cmpsb
jno
xlat
es
mov
mov
les
xor
sbb
sub
adc
mov
and
sub
push
ror
cmpsl
inc
jl
ja
ss
frstor
aaa
ret
fsts
dec
fadds
icebp
push
popf
adc
mov
and
xchg
adcl
push
xchg
out
push
sbb
mov
mov
mov
dec
out
sbb
cmpsl
mov
movsb
inc
jge
lret
dec
cmpsb
xlat
jnp
ret
jp
inc
std
dec
loopne
or
int3
cmp
and
xchg
mov
rcrl
sub
dec
and
lea
inc
push
loopne
sbb
stos
adc
pop
mov
in
sbb
out
push
dec
dec
imul
inc
xor
push
mov
nop
add
and
xor
xor
add
push
push
pop
lods
lea
fsubrl
fcomip
xchg
cmp
popf
add
popf
ficompl
push
fs
jbe
popf
mov
mov
mov
fldt
cmp
push
and
xchg
dec
in
lret
xor
xchg
dec
repnz
jno
jge
stos
aaa
loop
add
stos
dec
push
dec
or
xchg
push
xor
lahf
fsub
lret
jae
mov
mov
lods
ds
iret
sub
ljmp
nop
and
inc
jo
sbb
les
cld
add
jns
or
sub
dec
pusha
fs
enter
adc
fildl
xor
cmc
lock
xor
or
mov
sub
mov
xchg
mov
cli
pop
pop
in
imul
bnd
push
mov
inc
mov
push
mov
inc
xchg
das
push
outsl
inc
addl
aas
outsl
movsl
movsb
sub
xchg
xchg
stc
pop
outsb
fwait
sbb
jnp
mov
mov
stos
popa
aaa
pop
sbb
xchg
clc
push
sti
cltd
movb
insb
mov
xor
pop
fcmove
xchg
cmp
cmpsl
push
sub
popf
or
stos
mov
cmp
cmp
js
and
cmc
decl
dec
dec
push
xor
mov
sub
sti
jae
pop
fstpt
sub
nop
subb
shrb
pop
shlb
jecxz
jae
loop
or
insl
inc
pop
mov
pop
ljmp
scas
dec
xchg
push
imul
sbb
and
sub
and
sarb
dec
movsb
testl
pop
mov
jns
mov
dec
inc
inc
test
fnstenv
sub
pop
cmp
add
mov
pop
add
outsl
daa
push
jb
sbb
fdivrs
aas
dec
idivl
frstor
clc
out
aas
pop
lahf
jp
std
loop
push
insb
fdivrp
jp
fcmovnu
jg
mov
lea
lds
out
cmpsl
xchg
int3
jae
in
and
inc
jp
sar
scas
jmp
or
or
pop
gs
push
rcl
aam
cltd
push
sbb
aam
adc
cli
xor
mov
xchg
sbbl
adc
out
jno
mov
jle
and
mov
ljmp
in
mov
mov
in
rolb
inc
fsubrl
leave
mov
xchg
xchg
hlt
pop
cmpl
inc
pusha
xor
mov
lds
and
cmpsb
push
or
jb
or
sub
mov
repnz
and
mov
push
sub
mov
or
std
push
out
ds
sahf
stc
xor
push
dec
pop
test
scas
aad
mov
pop
call
clc
mov
adcb
out
mov
adc
dec
pop
in
sbbb
ds
out
inc
dec
insl
and
cmp
jns
push
adc
cli
cmp
jae
xchg
cmc
adc
fldt
leave
fwait
aad
xchg
push
mov
rcr
pop
dec
inc
mov
or
cmpsb
xchg
lahf
or
popa
test
jmp
ss
push
jnp
adc
lods
and
ss
stos
in
popf
lods
loope
push
fs
mov
sub
inc
mov
cwtl
inc
xor
pusha
or
aas
mov
sbb
sar
in
std
mov
out
out
mov
outsb
jecxz
jecxz
push
fwait
dec
out
push
pusha
sar
outsl
in
mov
jae
push
cmp
bound
in
mov
mov
out
dec
scas
sub
repz
cmpsb
sbb
and
jne
fs
scas
out
mov
push
leave
pop
jbe
ss
es
mov
sub
push
ljmp
das
jecxz
pop
adc
int3
jb
std
aas
sub
inc
cmpsb
mov
mov
mov
sti
xchg
test
ror
push
xorb
insl
add
jge
adc
ficompl
cmp
add
mov
mov
adc
adcb
adc
stos
and
mov
mov
lods
mov
lea
mov
bound
inc
push
stos
jbe
and
imul
mov
cltd
jp
mov
ja
mov
scas
iret
xor
enter
adc
jmp
or
orl
je
cmc
push
pop
out
push
mov
sahf
repnz
repnz
cld
test
lcall
es
mov
clc
andl
aas
mov
data16
punpckhdq
inc
xor
mov
aas
cltd
fistps
cli
xorb
cmp
cmpsl
sahf
xchg
data16
adcl
push
aas
push
popa
shrb
adc
cmc
sbb
xlat
mov
mov
in
rcl
dec
loope
pop
mov
mov
sub
aas
ds
jmp
mov
mov
lcall
jmp
inc
lea
int3
and
push
mov
pop
loopne
rolb
and
aaa
rcrl
jmp
xchg
jbe
rorb
ret
push
lcall
daa
lock
int
inc
rcrl
xor
fwait
sub
pop
jmp
ljmp
sub
cld
mov
and
sbb
mov
xchg
sub
and
lret
les
fld
xchg
jno
lods
je
push
cs
shll
jecxz
icebp
cmp
pop
fiaddl
jge
xchg
rorb
and
xchg
subb
outsb
fcomps
cld
fsubp
jl
mov
pusha
ja
xor
mov
mov
sbb
xchg
ss
orl
flds
out
test
mov
stos
fisubrs
jae
push
mov
mov
push
out
pop
or
mov
outsl
jo
leave
mov
test
and
cs
pop
outsl
add
pop
sbb
xor
xchg
and
jge
xchg
popf
adc
mov
dec
inc
push
lret
xchg
push
xchg
loopne
cmpsb
mov
cmp
jbe
adc
outsb
inc
jns
xor
adc
ss
insb
out
cmpsb
dec
dec
leave
push
xchg
hlt
jecxz
test
dec
stos
std
mov
jnp
push
or
mov
les
cwtl
movsl
pop
push
mov
pop
in
testb
enter
inc
pop
inc
push
fldz
jl
dec
and
add
cli
lock
pop
jne
inc
pop
sub
in
adcl
cmp
xchg
push
lods
call
in
pop
mov
push
roll
pop
sbb
pusha
lods
or
cmp
pop
dec
decl
and
mov
loop
cltd
or
mov
les
inc
fcompl
xor
andl
mov
pop
sti
insl
jl
sbb
shrl
fcomps
jbe
jl
jp
inc
fmuls
pop
mov
cld
ja
out
mov
mov
dec
xor
dec
lods
pop
dec
loope
lods
dec
cmc
sub
fsubrs
cmp
popf
push
mov
or
out
arpl
test
insb
push
push
push
out
outsb
cmc
jo
mov
xchg
enter
loopne
and
insl
inc
int3
jnp
roll
call
mov
add
fcomps
out
push
mov
push
or
pop
adc
pop
mov
dec
enter
les
sahf
loope
cmp
pop
xchg
mov
aam
mov
aad
mov
or
and
packssdw
xchg
mov
lret
cvtps2pi
std
pop
mov
mov
mov
jns
inc
push
jg
push
cmp
lahf
inc
sbb
cmc
mov
out
pop
enter
mov
sub
jle
jmp
lret
repnz
adc
xor
sub
and
pop
or
arpl
cmp
ds
movsl
cld
lret
push
mov
push
dec
ja
xorb
push
cwtl
mov
outsl
out
es
gs
xor
xrelease
xorl
adc
cwtl
loope
sti
ljmp
add
rep
ss
pop
or
dec
or
mov
mov
or
lret
push
cli
mov
mov
push
hlt
test
sub
popa
repnz
mov
je
push
dec
jmp
andb
cltd
jle
lods
inc
scas
roll
xor
mov
push
insb
mov
inc
dec
mov
mov
and
inc
inc
int3
and
jb
or
leave
sub
gs
xchg
fidivl
mov
andl
gs
mov
xchg
mov
dec
stos
add
push
insb
lret
mov
gs
sub
sti
imul
pop
daa
pop
orl
bound
lret
into
les
ds
leave
popa
test
adc
shl
movsb
and
jo
inc
lods
mov
cwtl
mov
dec
movsl
test
xchg
jmp
lcall
cld
cmpsb
push
rolb
xor
mov
mov
in
xor
or
leave
pop
sbb
xor
xchg
mov
ds
and
xchg
push
cltd
fdivrl
orb
pop
stos
shr
fwait
imul
hlt
iret
push
push
sbb
inc
int
shr
popf
xor
push
std
push
aam
mov
insl
adc
or
jno
mov
rcr
in
imul
and
fwait
jbe
adc
cmp
stc
adc
pop
ljmp
fs
test
lret
pop
mov
dec
rolb
and
lcall
iret
cmc
leave
pop
sub
mov
hlt
sub
out
and
push
ljmp
popa
dec
inc
sub
jae
jl
imul
pop
push
ret
jb
sub
into
daa
pop
xchg
je
and
je
sub
imul
aas
mov
fisttps
and
add
fstpl
pop
pop
scas
insb
insl
xchg
inc
add
fdiv
mov
test
sbb
sub
jns
dec
xor
andb
sbbl
jle
lcall
add
jle
dec
testl
mov
cmp
xor
adc
mov
imul
push
adcb
repz
xor
or
pop
outsb
aas
mov
stos
xchg
ret
insl
roll
pusha
testl
punpcklbw
mov
cmp
lcall
aaa
pop
dec
cmp
or
ss
jns
pop
insl
test
into
call
push
lods
sub
pop
loop
dec
fdivl
out
xor
lods
das
mov
in
jmp
or
rclb
sub
adc
xor
mov
out
sub
iret
ja
stos
mov
jo
cmp
inc
add
stc
cmpsb
incb
loopne
inc
mov
outsl
sub
jns
aam
divl
adc
cmp
add
jo
jbe
sub
sub
adc
xchg
xchg
add
out
adc
adc
and
aam
cmp
or
jb
sar
leave
test
nop
scas
push
psadbw
aam
shll
cmp
inc
mov
cs
ja
pop
mov
push
das
stos
in
imul
inc
scas
push
jae
pop
ficomps
xor
imul
and
push
out
stos
cs
mov
pop
push
in
ret
loop
xor
outsb
ss
push
repz
jbe
inc
mov
add
pop
sub
dec
xor
subl
out
mov
sbb
jnp
data16
inc
pop
push
xchg
and
xor
repnz
dec
sbb
or
dec
mov
xchg
push
rolb
inc
test
mov
push
stos
mov
loopne
push
out
xor
leave
shrl
adc
xor
insb
or
popaw
test
shlb
push
outsb
xsha256
cmpsb
sarl
movsl
and
or
jl
and
subb
mov
lahf
push
pop
dec
call
xchg
or
fcoms
dec
aaa
jb
mov
lret
xlat
mov
das
dec
std
inc
xchg
lret
mov
mov
and
mov
pop
sub
add
js
push
push
mov
and
mov
es
insl
sbb
mov
je
les
xchg
popf
mov
lahf
mov
imul
outsb
insl
adc
jp
or
mov
rcrl
jb
mov
add
or
add
loope
cmp
pushf
jns
ss
in
jl,pn
int
loope
dec
jb
int
mov
mov
dec
mov
ljmp
das
jge
mov
add
test
rol
mov
fwait
fs
mov
aas
push
mov
pushf
dec
inc
insl
scas
loopne
cmc
adc
inc
stos
sahf
fdiv
adc
lahf
hlt
add
ret
jo
jae
imul
lret
enter
jl
lds
mov
and
fsubrs
mov
push
shrl
inc
imul
mov
sub
mov
lods
adc
cmp
aam
je
sbb
xchg
int3
enter
mov
inc
sahf
movsb
mov
sbb
push
in
into
pop
fimuls
pop
and
fisubrs
outsb
sbb
mov
adc
aas
inc
frstor
imul
je
mov
es
aam
mov
xchg
outsb
xor
pop
stos
xchg
xlat
add
mov
hlt
xchg
ret
ja
cmpsl
mov
pop
mov
jnp
fdivs
add
inc
lea
jns
ret
pop
sbb
dec
outsb
or
or
fisubs
dec
dec
and
mov
dec
loopne
lea
scas
pop
sbb
cmpsl
mov
push
test
sub
xchg
jg
xchg
mov
mov
inc
enter
icebp
mov
leave
sbb
shll
mov
dec
xchg
sub
adc
jnp
shll
arpl
push
es
jecxz
pop
leave
dec
sbb
jns
dec
andps
fsts
wbinvd
xor
scas
adc
clc
jl
mov
lods
jge
mov
rolb
cmc
addr16
pop
inc
ret
rcrl
xlat
mov
xorb
add
dec
jge
pop
frstor
push
ja
mov
dec
mov
stos
mov
sbb
aad
jle
dec
bound
leave
out
pop
mov
repnz
add
fcompl
pop
and
lcall
or
addl
dec
les
outsb
sbb
iret
call
stc
mov
jns
mov
sbbl
cs
andb
xlat
or
cmpl
or
xorl
inc
pop
out
jecxz
jmp
fwait
aad
pusha
pushl
mov
and
repnz
push
lods
cltd
jle
mov
fcomps
out
dec
mov
pop
shrl
xor
mov
cwtl
mov
pop
fiaddl
nop
movsb
sbbl
inc
jae
dec
adc
sbb
fucompp
push
ja
outsl
and
or
pop
and
xor
insb
add
aas
jle
mov
ret
lcall
mov
mov
shlb
cmp
pop
jnp
mov
enter
test
jg
or
xchg
mov
sub
out
pop
adcb
das
loop
jbe
dec
test
in
pop
sbb
gs
data16
mov
movsl
dec
divb
sahf
add
xchg
cs
cmp
aas
scas
int
pop
push
inc
xor
aam
loop
mov
shll
pop
cmpsl
or
or
push
jne
mov
cs
inc
in
stc
xor
sti
nopl
fisubrs
dec
movsl
shrl
aaa
rolb
xchg
xlat
or
fnsave
adc
adc
in
xlat
cld
sbb
push
jmp
negl
addr16
push
fwait
lods
in
lret
arpl
and
jmp
xchg
mov
or
dec
or
fcompl
xchg
fs
divl
mov
movsb
ficompl
test
push
dec
mov
out
outsl
xchg
sahf
xchg
dec
xchg
in
repnz
push
cmp
mov
dec
fldcw
jo
aad
dec
push
pop
mov
fs
xor
repnz
lods
movsb
inc
inc
mov
mov
mov
insl
std
and
rolb
mov
icebp
sbb
or
loope
std
popa
ss
addb
push
jne
and
test
jns
push
cmp
pop
xor
jmp
pop
adc
push
pop
insl
repnz
popa
mov
push
call
add
jno
xchg
or
in
aad
lahf
cmpsl
adc
sti
jecxz
ljmp
popa
xchg
es
ds
das
mov
xchg
mov
lahf
out
dec
jl
test
adcb
push
pop
fdivrs
aaa
icebp
movsl
fwait
cs
movb
jae
jle
hlt
outsl
and
paddd
addr16
cwtl
sbb
pusha
test
fidivl
adc
mov
mov
and
arpl
test
lods
cmc
sbb
push
sahf
sbb
mov
mov
sub
int3
xchg
mov
jle
and
mov
mov
cmp
mov
add
add
ds
xor
cmp
sbb
and
mov
out
push
outsl
cs
leave
orl
icebp
aas
es
sub
cli
sub
lahf
lahf
int3
fmul
mov
jns
fnstenv
bound
stc
shlb
jbe
add
loope
xchg
ret
hlt
xor
and
es
call
ljmp
fxam
or
sbb
mov
enter
push
lcall
stos
dec
xchg
dec
and
ss
in
bswap
pop
xchg
mov
dec
dec
fisubrl
decl
cmpsl
cmp
inc
ret
push
insl
cmp
aad
mov
xchg
push
mov
xlat
cmc
add
pop
repz
dec
outsb
cmp
sbb
or
sub
mov
xor
fcmovb
xchg
adc
ret
add
roll
lods
es
in
mov
cltd
mov
hlt
vxorps
xchg
push
repz
fdivr
aad
lret
xchg
or
repz
xor
imul
loopne
lods
test
ss
stos
sub
inc
into
dec
in
lock
xchg
push
fs
sbb
sti
rcrl
inc
inc
inc
xchg
andl
jns
inc
or
jns
adc
imul
add
sbb
or
xchg
test
pop
add
and
andb
mov
xchg
les
xchg
or
in
xlat
sbb
and
scas
sbb
jo
lret
arpl
int
hlt
dec
push
lods
leave
add
or
cmp
jns
mov
dec
sub
loop
pushf
negb
mov
mov
jne
dec
mov
shlb
sub
cmpsl
loop
ret
cs
add
inc
pop
sbb
xor
adc
mov
dec
pushf
jb
pop
or
mov
push
push
into
adc
cmpb
add
in
sbb
sahf
frstor
jge
sub
cmp
loopne
test
jns
cmp
ret
inc
jae
push
jo
fisubrl
psubw
xchg
and
add
mov
mov
cmp
jns
mov
in
fbstp
xchg
out
fwait
mov
mov
dec
mov
and
out
xor
add
add
adc
add
mov
je
mov
repz
arpl
fnsave
pop
in
dec
lcall
cmp
add
mov
or
gs
mov
mov
rcll
sub
mov
pop
inc
addb
int3
push
lods
dec
adc
cwtl
jbe
nop
popf
sub
shlb
outsb
lds
mov
out
xchg
xchg
and
fisttps
iret
mov
jp
fnstenv
leave
lds
push
mov
add
sub
xor
lret
xor
insl
or
je
daa
xor
jl
or
lea
mov
mov
or
cmp
add
loop
lock
add
inc
call
push
sbb
loope
fimuls
lret
jp
dec
adc
imul
ret
pushw
fs
mov
imul
lds
push
popa
jb
rcll
mov
inc
test
out
out
xor
stc
mov
lahf
and
jecxz
mov
dec
inc
into
aaa
xchg
jmp
loope
imulb
fidivs
mov
xor
sbb
xchg
push
jp
sbb
mov
cmp
or
hlt
push
andb
clc
mov
adc
out
int
sbb
xchg
jbe
sbb
test
sub
loop
cld
lods
mov
mov
and
scas
push
jecxz
jb
in
jle
inc
mov
shr
lock
and
xor
sahf
inc
fcoml
lods
out
shr
lcall
fbstp
mov
das
ret
and
arpl
jp
addl
and
jno
pop
push
jp
dec
shl
cld
scas
aam
cmp
push
mov
push
mov
mov
les
into
scas
ljmp
daa
mov
pop
mov
inc
mov
cmp
shrl
test
lret
cmp
dec
dec
invd
sub
clc
mov
cmp
shll
xor
loopne
bound
jo
jmp
jge
mov
inc
cmpl
or
popa
cwtl
addb
cwtl
daa
in
fdivs
aaa
mov
sbb
hlt
scas
inc
xchg
mov
sub
iret
jp
loope
daa
mov
add
sti
mov
aas
test
lock
lret
sub
mov
mov
dec
repnz
cmp
sub
or
int3
push
jmp
adc
sbb
cli
jge
imul
sbb
and
xchg
adc
cld
adc
push
push
cld
fsubp
mov
int
add
std
inc
push
xor
test
inc
lock
hlt
mov
in
jl
loope
lahf
loop
mov
rcr
ret
movl
aad
test
inc
out
testb
popf
mov
js
push
inc
mov
insb
cmp
fcomp
rorb
enter
mov
popa
mov
insl
or
lods
sub
bswap
scas
loopne
adcl
enter
int3
andb
jne
xchg
dec
mov
adc
mov
arpl
cli
inc
mov
or
fwait
pop
mov
dec
or
push
cmp
xchg
fisubrs
div
add
xchg
pop
fiaddl
scas
cmp
ret
aas
push
mov
or
xchg
je
addr16
or
les
gs
js
dec
push
fwait
or
js
xchg
cli
sub
cmp
movsb
xchg
inc
pushf
mov
imul
jl
push
aad
int
or
das
popf
or
mov
cmpsl
adc
mov
repnz
mov
movsb
push
cmp
inc
popf
xchg
xor
outsb
xlat
xor
clc
sub
je
sti
in
into
imul
jge
popf
ds
cmp
sub
js
add
int
cltd
je
subl
in
cmp
test
mov
push
lock
movsb
clc
cli
mov
jl
sbb
mov
mov
pop
jae
dec
stos
subl
lret
xchg
or
sub
in
lds
cmp
xchg
pop
outsb
pop
repz
rorb
push
add
leave
jo
ja
cmp
inc
lcall
sbb
push
cmp
std
pushf
je
push
rcl
je
xchg
inc
bound
andb
jb
fnstsw
mov
aaa
pop
lds
or
lret
mov
adc
add
loop
rorl
testl
pop
fildl
add
pop
pop
mov
mov
aas
sbb
push
mov
arpl
jle
inc
dec
or
addr16
or
lock
cmove
in
sti
mov
add
insl
or
cs
mov
cs
cli
sub
push
popf
or
loop
or
call
adc
xchg
mov
cmpsb
and
mov
jnp
imull
aaa
fimull
cld
repz
inc
or
addr16
movsb
and
inc
jnp
leave
and
test
scas
mov
mov
mov
mov
jmp
pop
and
cmp
jp
sarl
lea
or
sub
popa
outsl
and
int
add
sub
jp
mov
xor
in
mov
imul
mov
mov
mov
sub
or
leave
xor
cltd
pop
pop
test
test
mov
stc
fistpll
leave
xchg
out
dec
jmp
pop
fwait
jl
mov
cmpsb
mov
cli
scas
fwait
adc
icebp
sbb
mov
dec
inc
mov
lret
inc
mov
cwtl
add
aad
lcall
jle
push
arpl
movsl
xchg
mov
aas
loope
loope
rorl
cmc
div
push
mov
and
test
pushf
cmpsb
jg
xchg
arpl
sbb
aad
aaa
shrl
gs
outsl
adc
jnp
push
rcrb
mov
insb
test
sbb
ret
inc
mov
mov
jge
movsl
cs
mov
ljmp
lea
mov
fildll
fidivrs
lods
mov
or
mov
cs
jle
dec
lcall
popa
loopne
mov
xchg
enter
in
mov
loop
out
xchg
lea
cwtl
pop
cs
sub
insl
inc
xor
push
incl
inc
or
std
jno
rorb
inc
jp
insb
xor
mov
jmp
pop
mov
lods
xchg
add
xor
cli
lea
jl
push
push
popa
leave
and
pop
cmc
rorb
mov
lds
jnp
mov
pop
sub
inc
and
cmpsl
mov
fcompl
cli
cmp
push
push
pop
pop
xchg
jg
xor
gs
mov
sub
lods
mov
push
fstpl
int3
mov
pop
push
mov
mov
test
stos
insl
fildl
inc
incb
and
adcl
cmpsb
push
test
sub
icebp
das
cmpsl
xchg
pop
xor
pushf
jns
icebp
imul
in
imul
xchg
sub
jmp
pop
mov
push
sti
movsb
pop
and
push
add
mov
hlt
jmp
aaa
and
ss
repz
out
out
mov
jmp
sub
mov
push
loop
push
adc
inc
lds
incl
lock
aam
add
mov
add
ret
dec
les
sub
add
push
mov
jno
in
addr16
xchg
adc
add
xlat
sbb
lret
shr
jbe
pop
adc
push
sahf
movsl
int3
data16
out
push
rolb
scas
jae
push
pop
pushl
stc
movsb
xchg
lss
inc
xchg
icebp
or
mov
outsb
imul
inc
icebp
pop
inc
sub
lret
mov
test
dec
cmp
sahf
mov
inc
cmpsl
rcr
jg
roll
mov
enter
pop
xor
adc
cs
pop
jb
in
push
push
call
hlt
jg
sti
and
or
repnz
xlat
and
subl
fistpll
pop
lea
js
call
sub
idivl
mov
sbb
shll
and
push
cmp
aas
cld
jns
mov
rorl
repz
fdivs
mov
cmp
or
mov
scas
rcl
mov
sar
data16
stos
int3
rol
movsb
pop
sbb
pop
sbb
testb
xor
and
xor
fbstp
orb
cld
out
test
jl
adc
xor
cmp
mov
cltd
mov
mov
xor
ss
add
jno
cmpsl
icebp
cmp
rolb
out
ja
outsb
mov
data16
ret
addr16
xchg
notl
clc
push
inc
push
xor
sahf
pop
cli
adc
add
rorl
pop
pop
pop
and
add
or
sbb
add
loopne
loop
push
pushf
mov
push
pop
mov
mov
test
filds
mov
jb
fs
pop
jbe
popa
mov
lret
je
imul
pusha
xchg
adc
cmp
ss
imul
cmp
xor
add
cmpsl
mov
dec
inc
add
fcmovne
xchg
mov
xor
jg
mov
adc
and
mov
es
call
andb
rcl
les
int
aaa
sbb
mov
pop
pop
push
aad
xchg
shll
stos
push
std
lret
stos
mov
dec
xor
fildl
into
sub
dec
or
movsl
jge
cmp
xchg
imul
or
push
dec
pop
cli
mov
adcl
dec
popf
lret
js
lret
xor
fimull
and
test
in
mov
mov
push
push
jno
mov
pop
lret
lea
pop
add
cmp
ljmp
out
repz
inc
sub
pop
adc
adc
xchg
cmpsl
pop
addr16
fstl
bound
into
sahf
and
insl
cld
jecxz
adc
cmpsl
push
push
jne
mov
xchg
cmpsb
xchg
push
mov
push
bnd
sarb
das
arpl
sti
jns
push
cmp
mov
pop
js
sahf
negl
nop
std
inc
testl
mov
scas
lret
jbe
cmpsl
mov
pusha
mov
sub
sbb
inc
fisubl
dec
mov
mov
pop
sti
fiadds
mov
pop
mov
push
xchg
adc
jbe
ss
cmp
faddl
dec
insb
test
push
fisubrs
js
pop
aam
pop
push
ja
lret
lea
shlb
out
and
sbb
push
push
outsb
in
int
mov
xchg
inc
mov
add
andl
jle
repz
fldcw
inc
stos
das
mov
push
es
sbb
shll
pop
cmp
shrb
popa
or
push
push
cs
jns
jge
sub
cmp
pop
jo
jo
repnz
movsb
pop
sbb
mov
fimull
mov
clc
pop
mov
cmp
rcl
int
adc
les
mov
or
xchg
int3
pop
push
cmp
bound
shl
mov
aas
es
sbb
jb
sbb
jno
stc
mov
lcall
pusha
or
ficomps
cmp
xor
sbb
inc
rcrl
pop
leave
mov
pop
das
push
pop
pop
mov
sbb
xor
mov
sub
dec
add
xchg
and
mov
mov
lods
adc
xor
mov
lret
call
gs
sub
mov
push
dec
jno
es
imulb
push
pop
imul
insb
jg
mov
enter
sbb
or
lcall
stos
jae
dec
loop,pn
dec
cmpb
add
mov
dec
in
std
ja
out
adc
or
and
out
xchg
xchg
sub
xor
into
dec
mov
push
call
neg
into
ss
test
mov
mov
inc
into
push
xchg
or
mov
inc
push
gs
test
test
sub
jle
push
out
fmul
sub
jecxz
cltd
lock
sbb
inc
pop
lcall
jmp
or
add
repz
sbb
pop
pusha
cmpsb
and
dec
cld
lcall
and
mov
push
push
adc
cmpsl
xchg
cmp
loop
ret
aaa
sub
mov
das
lods
xor
cmc
data16
jge
nop
lods
sbb
mov
or
sahf
aad
mov
mov
adc
cmpsl
mov
stos
sahf
pusha
lret
mov
dec
repnz
fisttpll
mov
lret
xchg
roll
jb
mov
ss
add
xor
add
mulb
cli
jmp
nop
push
xlat
mov
stos
fadd
push
or
xchg
aas
mov
jns
lahf
ss
cmpl
shlb
sbb
xor
mov
mov
mov
jge
pop
sub
or
in
cmc
cltd
out
js
jne
lods
inc
mov
pushf
and
mov
and
ja
sub
mov
jno
scas
lret
popa
push
ret
push
or
jecxz
pop
mov
insb
out
sub
into
cmc
mov
fldl
jle
dec
adc
xchg
mov
ljmp
mov
cmp
fldl
lock
lock
imul
rorb
adc
insb
push
pop
inc
mov
test
fwait
in
in
mov
pop
jle
aam
mov
cmp
jle
jne
repnz
jg
mov
shl
mov
mov
adc
sbb
mov
sbb
shr
cmp
push
pop
push
dec
in
push
popa
jge
jp
icebp
xor
pop
pop
xchg
pop
dec
sbb
imul
mov
in
or
xor
dec
test
and
dec
lcall
dec
adc
sbb
cmp
sbb
enter
push
scas
cld
cmp
das
ret
sbb
sub
jo
xor
in
dec
fcmovnb
pop
enter
outsb
rcrb
xor
mov
cwtl
mov
inc
xchg
xor
sbb
xor
leave
mov
cmpsl
into
adc
push
movsb
cmp
in
iret
shrl
cmc
bound
fisttpll
pop
add
shrb
fdivrl
je
push
scas
fcmovne
jns
mov
dec
push
xor
mov
fbld
add
repz
and
mov
leave
fs
repnz
lods
jo
popa
movsl
lahf
int
mov
adc
outsb
mov
lret
stos
xor
pop
sbb
or
mov
test
out
movsl
iret
sub
push
movsb
test
aad
das
inc
add
rcrl
mov
data16
mov
mov
adc
daa
popf
cltd
xchg
xchg
adc
int
push
or
mov
sub
xlat
cltd
and
dec
pop
ja
sbb
push
xor
shrb
mov
pop
fidivs
lret
clc
xchg
jb
pop
jecxz
adcl
push
or
ficompl
fcomps
into
mov
sub
pushf
cmc
xor
mov
mov
push
jecxz
loop
adc
jo
in
ret
cwtl
bound
inc
mov
outsb
lea
stos
sub
into
xlat
lret
dec
sti
xor
adc
jae
dec
sub
shlb
sub
out
int3
push
fidivl
lods
push
addr16
rclb
mov
add
xor
outsb
lret
popf
add
lret
mov
clc
mov
sbb
pop
in
iret
lock
jne
sub
push
cmp
and
mov
jmp
pop
push
cwtl
cmp
push
jp
sub
popf
jns
pop
xor
pop
clc
data16
mov
cmp
js
dec
xor
shl
in
pop
orb
xchg
stos
les
add
fwait
and
jg
lods
dec
or
lahf
loop
and
jle
lock
and
jo
jmp
mov
mov
rorb
pop
sub
mov
and
int3
icebp
pop
inc
test
subl
inc
fsts
out
pop
int
mov
add
adc
inc
fwait
lods
lahf
in
imul
call
xchg
pop
imul
out
inc
and
sbb
lahf
arpl
scas
adc
out
add
mov
test
push
adc
aad
cs
sub
fcmovnu
pop
or
xor
push
fstpl
mov
dec
adc
fimull
aas
jecxz
fldt
push
mov
ret
pop
repz
mov
ret
or
mov
scas
add
pop
je
in
jmp
xor
jne
xchg
enter
adc
sub
adc
jae
cmpsb
jns
jb
inc
pop
pop
jmp
jle
repnz
and
loope
xchg
aad
ss
test
mov
add
mov
xchg
mov
sahf
dec
pop
add
sbb
xor
and
jl
daa
mov
add
aas
dec
sub
xchg
fnsave
cmp
fstps
mov
mov
test
arpl
arpl
mov
sbb
test
es
mov
lcall
xchg
push
cmp
test
cmp
aam
mov
insb
mov
mov
add
js
sub
jns
sub
mov
sub
enter
orb
adc
sbb
pop
sbb
xor
lcall
lods
sbb
leave
nop
rcll
int3
jg
mov
call
imul
xchg
ret
push
sbb
icebp
test
mov
push
add
jmp
xor
aas
int
xchg
repz
mov
cs
or
insb
inc
mov
notl
pand
fbld
or
loop
fstp
xchg
inc
cmpsb
jg
pop
pushf
push
or
icebp
jno
cmpsl
push
je
jae
or
inc
mov
inc
mov
ja
pop
aad
popa
sub
dec
pop
hlt
or
andl
cltd
xchg
pop
sub
fildll
mov
jae
jno
jle
adc
in
push
dec
ds
lock
push
push
mov
fistpl
mov
scas
inc
inc
mov
popa
call
or
arpl
xchg
fnsave
and
jae
jb
jmp
adc
repnz
int
sub
testb
push
xlat
fisttpll
icebp
mov
test
popa
int
mov
addr16
xchg
push
les
fcoml
cmp
loop
push
and
dec
mov
push
lods
pop
push
fnstenv
inc
call
mov
sub
leave
xchg
das
cmp
dec
xor
insb
mov
daa
pop
mov
in
adc
ret
icebp
outsb
mov
dec
mov
jns
aas
outsl
mov
dec
sbb
ret
sub
adc
push
mov
jbe
mov
fldcw
addr16
or
call
pushl
insl
jns
pusha
scas
je
popf
shl
mov
jge
loope
in
mov
mov
inc
ljmp
lret
adc
call
sub
push
jbe
inc
dec
fcompl
adc
xor
sbb
popf
sbb
jp
insb
mov
push
popf
aaa
inc
je
jle
stc
pop
push
add
mov
outsl
loope
pop
stos
pushf
push
xchg
and
jecxz
icebp
adc
sub
sub
cwtl
js
add
outsl
out
pop
dec
icebp
add
pop
aaa
mov
ss
pop
ss
jmp
das
pushf
es
rcll
jnp
and
xchg
enter
das
jp
test
jnp
xchg
cltd
push
stc
or
mov
out
cwtl
and
xchg
dec
dec
push
jg
and
ljmp
dec
pop
jnp
inc
jno
or
push
push
call
shrb
mov
incl
test
or
inc
mov
outsb
push
lret
scas
jle
xlat
movsl
xor
and
fs
jl
aam
sbbb
add
cmc
data16
insl
push
int3
shll
jbe
pop
sbb
pop
mov
sbb
gs
arpl
inc
jecxz
inc
pop
and
cld
add
into
ljmp
bound
fidivl
lds
xorl
leave
dec
idiv
lcall
add
stos
dec
mov
pop
sbb
setns
adc
jae
sub
adc
dec
push
cmp
xchg
sub
adc
jecxz
cmp
jg
xchg
test
inc
subl
xor
jl
jl
cwtl
test
cmp
ficoms
jle
jae
push
inc
stc
je
out
add
cltd
push
push
pusha
sbb
stos
clc
inc
dec
repz
jmp
add
or
test
pop
rcrb
aam
aaa
jmp
int
mov
shll
xchg
push
or
inc
xor
mov
push
inc
inc
nop
or
je
inc
jmp
mov
leave
mov
rorl
faddl
shl
pop
xor
mov
jb
adc
rcr
xchg
adc
mov
push
xchg
cmp
je
push
je
int3
xchg
and
and
push
push
pop
mov
xchg
xchg
push
adc
or
dec
pop
clc
lea
inc
cmp
xor
sbb
iret
hlt
sub
xchg
mov
mov
gs
shr
fucomi
dec
jp
cs
sbb
sbb
jnp
fcmovu
mov
jne
xchg
mull
pop
repz
fucomip
mov
cs
out
sahf
insb
aad
mov
arpl
dec
push
push
cmp
rorb
pop
cmp
cmp
or
inc
xchg
sub
cmp
std
sub
stos
jae
add
pushf
xchg
adc
ja
add
hlt
leave
push
imul
and
es
inc
fwait
shrl
loop
jno
dec
inc
out
pop
rclb
adc
cmp
xlat
or
mov
mov
repz
sahf
jns
push
das
mov
jbe
test
cmp
mov
fs
hlt
scas
pop
cmovp
or
or
pop
ja
repnz
popf
pop
iret
mov
jo
mov
xchg
sub
sub
jp
cmc
jbe
cltd
sbb
push
sarb
stos
sbb
out
scas
ret
push
stc
imull
fsubs
lret
push
push
imul
mov
shlb
add
jle
lret
rcl
arpl
lock
dec
fstl
inc
mov
inc
lods
inc
jne
mov
inc
cmp
ss
add
scas
aad
enter
sti
rorl
mov
push
cwtl
mov
lock
mov
daa
sub
leave
lods
cld
subb
mov
mov
mov
enter
ja
movsb
mov
arpl
or
mov
mov
loopne
xchg
dec
icebp
mov
in
inc
lods
repz
mov
pop
orb
lcall
mov
cmp
pop
cmp
fdivrl
imul
or
out
and
pop
xor
ds
ljmp
lds
lods
jl
xchg
popf
push
push
inc
dec
test
mov
sbb
inc
cmc
fs
aam
imul
jb
jo
lock
jae
jne
je
lds
imull
and
mov
or
int3
xchg
inc
in
cmp
out
test
stc
or
add
hlt
mov
cmp
pop
fwait
pop
mov
pop
or
pop
inc
add
inc
fbstp
mov
xlat
leave
adc
or
push
arpl
xor
pop
add
scas
nop
leave
pop
mov
clc
push
cmc
aaa
sub
cmp
fdivr
jg
push
jo
mov
mov
jp
sbb
stos
insb
adc
jnp
lock
data16
outsl
pop
in
xor
jbe
pop
xor
movsl
jne
adc
cmp
push
popf
mov
sub
rcl
dec
into
push
les
sbb
mov
mov
cwtl
mov
mov
cld
mov
xor
jbe
das
nop
mov
mov
xchg
jne
nop
stos
fmuls
iret
pop
fsubs
std
daa
jmp
aas
mulb
xchg
je
icebp
aas
cli
pcmpgtb
pushf
cmp
test
sub
popf
pop
dec
or
fcompl
push
ficompl
out
pop
orl
xor
loopne
arpl
cmp
add
ds
rol
mov
pop
es
mov
and
push
jp
mov
roll
push
mov
xchg
and
lea
pop
xlat
mov
rcll
jl
iret
ljmp
dec
nop
and
inc
jb
daa
mov
pop
mov
or
xor
adc
cmp
cmp
lea
sbb
neg
inc
in
sahf
int3
dec
iret
shll
xchg
adc
bnd
clc
and
sbbb
sbb
pop
test
fwait
js
sbb
jnp
pop
sub
push
pop
fists
or
mov
xor
shrl
or
cli
cmc
repz
lods
cvtps2pi
cmc
cmpb
jb
movsb
sbb
pop
xchg
je
fisubrs
subl
fcomps
add
mov
add
mov
lods
popa
and
adc
fisttpl
ds
jl
mov
pop
jle
movsl
pop
fcompl
xor
xchg
rcll
push
jae
popf
ret
loopne
cli
faddp
sub
loop
gs
js
jno
xor
dec
adc
pop
outsb
fstps
inc
sti
imul
clc
setbe
scas
xor
pop
pop
out
pop
cmp
dec
sub
inc
daa
out
adcb
pop
add
sbb
imul
sbb
dec
outsl
add
mov
mov
std
cli
jbe,pt
cltd
mov
or
gs
cmp
das
gs
pop
in
fmuls
aad
and
clc
sub
jns
addr16
xchg
out
cs
xchg
xor
int
insl
fisttpll
mov
pop
sbb
ss
in
adc
mov
pop
cmp
mov
dec
inc
cld
lods
das
std
int3
out
xchg
loop
sbb
sbb
xor
pop
mov
arpl
daa
push
mov
xlat
jns
jecxz
lods
shrb
push
pop
fidivs
adc
test
fldl
and
and
xchg
push
fstp
aas
outsb
sub
or
and
aam
jmp
in
pop
insb
add
ds
les
dec
jns
xor
and
outsb
push
dec
xor
dec
mov
ficompl
lahf
cmpb
add
rorl
das
sbb
xor
lods
fcoms
nop
dec
or
je
jo
pop
or
or
push
or
xor
mov
bound
cmc
mov
cld
daa
imull
jp
fisttpll
inc
cmp
cmpsb
test
scas
push
pop
nop
inc
push
cmp
test
fdivrl
mov
leave
add
decb
imul
mov
addb
and
sbb
js
js
mov
xor
push
scas
test
add
xchg
jg
and
das
push
cmp
adc
pop
std
pop
enter
push
sbb
lea
mov
mov
icebp
rolb
jbe
inc
mov
and
leave
adc
outsl
stc
out
fstp
fwait
mov
dec
data16
adc
xchg
sub
push
clc
aad
sbb
pop
jo
incb
and
inc
nop
xchg
push
imulb
pop
adc
adc
jne
les
inc
pop
test
js
adc
push
cli
imull
mov
or
inc
jns
scas
les
xor
sub
jecxz
push
andb
repnz
or
into
pop
or
and
xor
test
push
adc
jbe
xor
dec
inc
divl
mov
aam
inc
pop
jno
xchg
daa
jno
and
adc
lret
lods
pop
sub
div
lds
ret
test
push
call
xchg
jno
movsb
and
jl
jbe
adc
push
rcrl
mov
punpcklwd
jle
jno
scas
fistpll
or
daa
add
mov
adc
test
pop
fwait
xchg
data16
xor
push
sti
aaa
test
in
out
add
shl
andl
cli
jle
sbb
add
mov
ret
andb
stos
daa
mov
pusha
aam
ds
and
adc
pop
out
lds
pushf
push
das
cld
incb
adc
push
icebp
rclb
stc
push
dec
xlat
push
mov
lods
and
jg
dec
push
clc
adc
and
and
and
subl
subb
mov
jb
mov
filds
add
or
inc
cmpb
pop
std
xchg
or
sbb
in
and
ficoms
jbe
add
sti
push
sti
sbb
sub
or
rcl
cmp
push
lahf
push
jae
fistl
jne
addr16
mov
outsl
mov
leave
addb
jnp
add
outsb
loop
push
es
or
adc
leave
fidivrl
dec
and
sbb
jmp
jmp
aam
or
xchg
add
popf
test
enter
mov
sbb
fistl
in
cmp
cltd
xchg
out
inc
mov
jmp
sub
ja
push
sub
dec
push
xchg
xchg
ja
or
loop
lea
insl
dec
into
cmp
shlb
pop
lods
mov
sti
clc
ds
jmp
adc
xor
jne
pop
aam
ds
inc
jge
insb
imul
or
leave
xor
sbb
pop
fwait
je
dec
fwait
xchg
out
pop
test
push
fsubl
add
and
mov
gs
js
push
call
mov
out
mov
subl
mov
sub
sbb
and
rcrl
mov
jno
push
scas
adc
push
outsb
mov
call
mov
mov
and
sbb
enter
sub
sub
mov
out
xor
data16
or
les
test
mov
in
xchg
iret
sub
xchg
adc
push
shrb
mov
adc
adc
rcr
xor
ret
pop
sbb
insl
ds
loopne
fnstcw
jnp
or
mov
mov
pop
pop
out
sarb
xchg
out
xchg
loopne
xor
pop
ror
adc
in
imul
pop
pop
jnp
lods
sbb
adc
pop
and
and
and
mov
mov
push
and
cmovno
aas
movsl
lcall
jecxz
es
pop
jp
pop
addl
insl
lret
mov
clc
aam
cmp
icebp
mov
jecxz
push
ret
jnp
jno
xor
clc
cmpsb
xor
adc
inc
out
sahf
pop
sti
and
int3
jmp
pop
mov
xor
movsl
and
and
jne
xor
mov
push
push
mov
das
mov
outsb
adc
add
add
popa
fcmovu
jno
or
int3
inc
mov
inc
out
jmp
pop
and
roll
cli
shlb
lahf
mov
jg
cmp
mov
hlt
sub
mov
js
push
arpl
nop
sbb
popf
movsl
mov
addb
pop
mov
inc
insb
cmpsb
or
imul
xchg
xlat
mov
xlat
hlt
xchg
inc
aad
lods
insb
test
and
outsb
mov
nop
xor
pop
adc
loop
mov
shrl
bound
ret
addr16
repz
jl
int3
add
sti
sub
pop
testl
adc
aaa
sbb
cmp
cmp
rorl
dec
sbb
int
je
and
jge
outsb
aad
loop
outsl
xchg
inc
lds
cwtl
lds
outsl
sub
aas
test
pop
pop
test
push
enter
fs
stos
es
mov
ret
jge
or
stc
or
xorb
fwait
lret
pop
push
int
js
lods
inc
dec
push
fdivr
xchg
sahf
sti
pop
cli
add
dec
faddl
test
jnp
jmp
iret
dec
inc
mov
sbb
lcall
lods
loope
mov
ret
mov
cmp
mov
es
ds
mov
sbb
dec
adc
and
stc
dec
sub
inc
adc
push
cmp
sbb
insl
inc
pop
into
das
fstpt
in
out
mov
inc
jmp
sub
mov
cmp
out
out
lret
dec
xchg
ror
add
or
adc
sub
jp
jp
mov
repnz
push
repnz
xchg
pusha
mov
mov
incb
or
in
fsubs
fildll
xor
xchg
in
sbb
inc
push
pusha
movsl
movsb
mov
add
xchg
sub
pop
nop
sbb
movq
fucomp
cmp
add
ljmp
push
icebp
fistpll
adc
push
dec
insl
push
ret
in
mov
add
test
fs
sbbb
pop
orl
xchg
lods
jg
or
loope
sub
mov
loop
add
jl
sub
addl
cmp
rorl
add
pushf
pop
jnp
movsl
loop
xor
adc
fwait
adc
add
and
inc
pop
sbb
jle
jno
jo
mov
nop
popl
push
xor
leave
fnstcw
in
mov
lds
lock
cmp
lods
pusha
jle
aas
push
shll
insb
jle
inc
or
je
insb
js
cs
pop
jmp
sub
jb
loop
shlb
fwait
push
dec
push
xor
inc
or
dec
outsl
pop
or
fisubrs
mov
jnp
cli
mov
and
shrb
jg
mov
dec
cmp
cmc
push
dec
lock
popf
dec
jno
mov
outsl
push
pop
ja
push
addb
inc
stc
or
aas
loope
mov
mov
and
mov
jbe
jp
aam
adc
jae
out
into
ja
insl
xor
xchg
add
test
das
insl
test
mov
adc
les
outsb
idivl
adc
jecxz
or
cmpsl
jmp
test
hlt
jmp
and
leave
push
or
xabort
in
mov
call
adc
push
repz
xor
xor
or
dec
icebp
js
push
sub
data16
mov
dec
mov
stos
sub
or
jg
cmp
cmp
sbb
nop
iret
ljmp
cltd
mov
pop
jae
fisubs
xor
and
lods
or
jl
int3
cmc
fsubrs
stos
pop
add
push
pop
int
and
in
sbb
jae
xor
loop
dec
pop
in
outsb
imul
adc
or
cli
js
dec
cs
pop
and
add
in
jmp
daa
push
enter
sbb
and
lret
push
jne
mov
ret
sub
aam
pop
sahf
sarl
cltd
sub
std
mov
ljmp
jecxz
xlat
out
in
xchg
sub
addr16
xchg
leave
fcoml
add
aad
jno
dec
sub
xor
pop
and
push
pop
or
lds
shl
cwtl
test
mov
mov
jg
mov
fcomps
pop
dec
xchg
movsb
enter
inc
xor
int
inc
xchg
outsb
xorl
adc
add
test
out
mov
je
fadd
gs
fisubrl
lds
in
dec
mov
stc
movb
mov
push
dec
imul
in
cmc
mov
pop
leave
push
ret
jb
pushf
sub
lods
sbb
adc
inc
pop
sub
hlt
mov
xchg
fwait
adc
xchg
in
addl
imul
shll
jo
andb
and
ret
add
lret
xor
jle
movsl
lret
popa
cmp
dec
das
bound
mov
lret
out
mov
es
lahf
cmp
adc
mov
pop
mov
loop
out
ljmp
in
push
fmull
jmp
cmpsb
jle
adc
push
inc
stos
cmp
pop
stos
sub
mov
or
pop
nop
stc
dec
in
ss
jecxz
ljmp
cltd
repz
xor
sahf
jecxz
mov
aaa
xor
imul
fistpl
test
jecxz
jb
es
dec
sbb
xchg
dec
movsb
cmp
aad
sub
xchg
adc
xchg
or
mov
jbe
popf
inc
faddp
mov
dec
push
hlt
push
mov
push
jb
fisttpl
pop
push
or
hlt
push
sub
push
inc
icebp
ja
pop
loop
push
cmpsl
int3
xchg
ds
mov
pop
jns
or
call
mov
in
sub
cmp
jmp
fcmovnbe
adc
repnz
inc
int3
in
shlb
cwtl
xchg
adc
xchg
cmp
aad
ljmp
fistl
mov
and
in
inc
adc
sub
sub
jb
std
fldl
xor
jp
mov
cmc
add
out
stos
fdiv
fisttpl
push
cltd
xchg
ds
and
xchg
fidivrs
xor
xor
jo
mov
push
push
pop
inc
out
cmpsb
scas
les
ret
or
push
push
loop
push
addl
andl
divb
cmp
inc
pop
xchg
mov
sub
xchg
sbb
jl
mov
idivb
andl
xchg
daa
mov
push
push
aaa
push
in
ret
fisubs
jne
adc
stos
mov
and
pop
loop
cld
mov
adc
aas
loop
gs
xlat
push
cltd
out
jecxz
ret
sahf
mov
mov
cmp
push
push
and
fnstsw
xor
aam
jbe
cmp
xchg
fildl
xchg
sti
pop
cmpsl
push
cmpsb
jle
outsl
xor
jle
mov
ret
icebp
push
xor
cld
push
fidivl
adc
inc
add
or
mov
dec
cmpsb
fcoms
imul
out
or
add
cld
in
test
xchg
aad
in
push
sbb
dec
in
mov
in
fcoml
test
adc
clc
test
push
dec
lahf
mov
test
lods
cld
cmc
lea
sbb
pusha
stc
test
cmc
fistps
cld
push
adc
mov
ljmp
jb
into
jecxz
lods
mov
jecxz
cmp
xchg
push
or
inc
ficoml
sahf
pop
icebp
int3
rcr
inc
xchg
xchg
xchg
lret
sbb
cmpb
add
nop
mov
iret
sarl
pop
mov
popf
jge
xor
sbb
bsr
xchg
gs
mov
addr16
insb
xorb
fisttps
fidivrl
stos
ss
sbb
stc
rolb
adc
cmp
mov
mov
movsb
jae
and
and
mov
jo
daa
lock
jo
push
movsl
pop
jle
pop
bnd
std
mov
shrb
out
inc
fisttps
xor
cmp
cvttps2pi
lds
aas
or
pop
inc
dec
test
adc
mov
ja
ret
ficomps
das
push
jg
enter
and
ret
insb
into
mov
adc
dec
les
mov
ja
mov
stos
lods
jle
or
add
bound
pusha
sarl
and
shrb
int3
jge
out
sub
pop
lret
dec
mov
xor
mov
scas
jmp
out
jo
imul
scas
inc
sahf
mov
popa
movsb
lock
fstpt
jne
xchg
jl
sub
adc
fsubrl
icebp
xor
dec
lret
leave
mov
xchg
lods
in
jns
lret
and
ss
in
iret
mov
pop
ja
fnstsw
add
shrb
sti
sahf
rolb
leave
pop
push
push
hlt
ret
movsb
lock
cs
scas
sub
leave
push
mov
test
testb
sbb
dec
mov
shrb
ss
cmc
movsb
mov
push
mov
inc
add
sbb
cmp
sti
jge
mov
inc
stc
pop
mov
fisttps
mov
jbe
nop
jecxz
adc
stos
sahf
mov
fadd
mov
fstpt
sete
es
sub
js
and
sahf
mov
fisttpll
add
adc
push
lcall
aaa
enter
mov
inc
mov
jge
cltd
rorb
std
fistps
shll
add
push
in
loopne
xor
out
mov
lds
aad
xor
jge
aas
mov
sub
jge
and
enter
clc
adc
or
rcrl
add
jno
imul
popa
pop
insl
adc
xor
shlb
idivl
mov
faddp
xor
xlat
pop
sub
lods
clc
popf
cwtl
mov
push
cmp
xor
pop
mov
filds
ljmp
test
dec
mov
clc
inc
repz
xor
out
cli
mov
push
pop
inc
xchg
std
push
or
das
shll
pop
arpl
inc
push
stos
mov
mov
rcr
xor
dec
jae
inc
or
repz
dec
add
inc
jecxz
xchg
lret
call
repz
push
les
loopne
sti
addb
pop
cs
int3
adc
nop
sarl
sub
mov
jecxz
es
ss
xchg
ja
insl
sbb
push
push
or
cs
negl
out
cmp
or
sub
push
xchg
lret
push
lret
fwait
xlat
mov
xchg
mov
mov
or
cltd
outsb
hlt
pop
pop
xor
xchg
das
das
jecxz
mov
push
inc
xchg
sbb
call
out
jne
cltd
dec
and
pushf
test
dec
in
pushf
inc
lods
sbbb
jmp
fistl
pop
push
inc
imul
lret
stos
add
jmp
into
jnp
or
hlt
inc
sbb
push
iret
dec
jae
and
bound
inc
mov
pop
sbb
in
fwait
outsl
adc
add
add
inc
dec
pop
cmpsb
sbb
push
jno
into
data16
fdivs
daa
shl
cmp
shll
cltd
xorl
enter
pop
fnstsw
mov
jb
adc
popf
shrl
jl
sbbb
mov
or
bound
in
bound
cld
push
push
pop
sbb
in
jns
push
fisttpll
sub
and
das
adc
std
scas
mov
cmp
fwait
cmpl
std
aam
pop
sub
sub
inc
and
xor
mov
xchg
cmp
gs
sbb
dec
mov
rolb
sti
rolb
push
xchg
inc
pusha
int3
fisubl
pop
repnz
sub
push
lods
mov
mov
test
and
daa
das
test
in
stc
in
adc
inc
cs
sbb
inc
jo
jge
icebp
cld
call
adc
in
xor
stos
pop
lds
clc
mov
mov
in
mov
popf
push
jp
mov
mov
mov
adc
push
add
cli
mov
lahf
jae
jno
add
push
cmp
push
mov
fcoms
xor
test
cwtl
sahf
mov
jmp
into
aaa
movsl
test
xor
ret
jmp
adc
mov
insb
and
cmp
mov
xor
jae
cmp
arpl
in
out
fldcw
out
lds
inc
add
pop
repnz
clc
push
push
dec
dec
push
mov
mov
ret
loopne
sarl
cmp
fwait
and
arpl
imul
pushf
repnz
jl
xor
push
adc
add
lcall
cmc
pop
call
mov
iret
test
push
adcb
fistpl
mov
adc
push
mov
mov
adcl
nop
or
push
push
mov
sbb
mov
mov
ficoms
js
jb
in
jnp
push
andl
push
or
fwait
cmp
frstor
adc
add
sub
inc
rcll
jno
pop
cmp
jge
fs
bound
pop
push
mov
insl
mov
add
mov
inc
fidivrl
test
adc
pop
mov
sub
into
cmp
notb
cmp
jge
dec
jb
sbb
push
pop
imul
jo
mov
xchg
xchg
push
push
pavgw
bnd
lea
ss
xchg
lret
push
pushf
and
popa
aas
or
movsb
loope
push
pop
outsb
ja
and
je
push
test
add
das
cltd
incb
sbb
and
mov
enter
pop
inc
ss
jnp
mov
pusha
int
rol
lds
mov
adc
mov
and
and
pmullw
xchg
les
out
mov
aad
mov
pop
fs
pop
icebp
mov
and
jge
dec
pop
cwtl
inc
into
add
fidivrl
out
lods
add
movsl
imul
data16
fwait
xchg
mul
rcl
sbb
mov
sarb
out
pop
je
xchg
stos
js
dec
or
mov
or
jnp
sbb
addr16
aas
aas
cmp
cld
ds
int3
int3
jle
pop
lret
in
sbb
scas
and
xchg
lcall
add
mov
sub
leave
mov
push
sti
push
fcomip
in
cmpb
mov
sahf
sub
or
pop
sbb
ljmp
testl
lahf
mov
adc
cmc
and
mov
adc
mov
pop
xor
aaa
inc
cmp
xor
lcall
movsb
mov
mov
daa
pusha
hlt
or
aaa
dec
pop
inc
cmp
pop
mov
outsl
outsb
cmc
xchg
in
pop
mov
lahf
dec
sbb
sti
mov
jo
jecxz
push
sub
imul
in
fwait
pop
fcom
jl
push
sub
ja
and
sub
pop
sub
rcrl
lahf
sub
push
loope
sbb
mov
dec
xchg
dec
xor
and
adc
xchg
cltd
scas
xor
out
add
mov
dec
test
inc
add
popf
sarb
lds
out
and
fnstcw
push
iret
pop
gs
imul
push
sub
push
pop
ffreep
lretw
cmc
xchg
loop
cwtl
lock
dec
jb
std
cmp
sbb
mov
sub
lcall
lret
sbb
int3
sbb
xchg
cld
loop
inc
mov
mov
cmp
cli
cltd
xlat
fsubl
inc
out
std
or
inc
xchg
mov
push
and
mov
scas
xor
cmpsb
push
pop
scas
sarl
pop
mov
lock
inc
add
mov
push
hlt
fs
pop
mov
adc
js
or
stos
add
dec
and
mov
insb
sbb
inc
xor
popf
inc
pop
adc
pop
clc
mov
loop
lret
inc
rcrb
jne
xor
aaa
dec
mov
and
sub
push
ret
sbb
mov
pushf
movsl
push
neg
cli
rol
jge,pt
xchg
popa
in
pusha
push
lock
inc
shl
scas
xchg
ljmp
xchg
scas
add
mov
sub
loop
aad
repz
rorl
int3
cmc
jb
push
pop
mov
mov
popf
jp
outsb
inc
lea
test
cmpsl
adc
and
or
sbb
mov
cmp
pop
cmp
or
scas
pmulhw
nop
mov
and
xchg
ficoml
mov
cmp
mov
pop
jo
cwtl
negl
mov
ficoml
push
movsl
ror
jle
adcl
mov
xchg
jmp
cld
inc
cmp
inc
loopne
cmp
sub
scas
in
mov
fldenv
dec
pop
sub
sahf
imul
into
xor
xor
pushf
ret
xchg
clc
test
fs
jmp
and
cmc
repnz
aas
mov
ds
dec
push
mov
fwait
cs
lret
mov
mov
iret
loopne
nop
lcall
inc
orb
mov
sbb
sbb
aas
push
pop
pop
pop
push
dec
sbbb
mov
sahf
sti
loop
mov
cmp
dec
repz
sub
push
scas
mov
adc
xor
push
scas
inc
lods
mov
pop
test
jge
sarb
adc
lea
jbe
idivl
cs
or
subb
mov
pop
xor
fs
gs
notb
dec
inc
cwtl
mov
repz
add
inc
shl
int
adc
xchg
pusha
das
inc
and
out
pop
mov
fst
sbb
repnz
mov
jg
pushf
lds
sbb
mov
fs
mov
loope
inc
ficoml
xchg
xor
loopne
pop
sbb
pushf
xchg
add
xor
and
insl
mov
stos
mov
adc
fisttpll
xchg
daa
in
imul
add
jb
lods
inc
pop
xchg
insl
add
pop
aaa
cwtl
enter
out
sub
jae
dec
out
out
pusha
psubsw
inc
lods
sbb
pop
pop
and
ljmp
sbb
bound
pop
push
xor
out
push
jae
mov
movsb
cmp
ss
push
pop
sti
jnp
lret
scas
flds
lds
adc
sub
fisubrs
pop
mov
push
lods
cltd
movq
sbb
inc
daa
out
outsb
imul
int3
lea
outsb
sbb
cmp
mov
dec
sub
mov
fbstp
hlt
mov
test
pusha
fwait
scas
xchg
inc
jbe
jge
insb
pop
pusha
jnp
ret
in
ljmp
mov
imul
enter
or
sbb
sub
xorl
inc
enter
sarb
pop
mov
xchg
lret
test
adc
push
data16
mov
ja
or
sbb
xor
lgs
ljmp
lahf
rcrb
mov
lock
xchg
testb
sbb
inc
mov
adc
mov
sub
pop
fucomi
flds
lea
or
outsl
adc
jecxz
push
and
inc
shlb
data16
clc
outsb
repz
movsb
xchg
push
rorl
mov
cwtl
inc
jns
mov
out
push
and
bnd
lret
sub
dec
add
cld
shlb
lret
lock
ljmp
aad
sbb
sub
add
or
in
jl
ret
mov
cltd
fdivl
or
sbb
add
inc
fcompl
mov
and
nop
cli
xlat
lret
sub
jmp
dec
jne
sub
iret
jge
ret
push
or
push
divb
jg
pop
mov
cmc
test
fcomps
mov
call
outsb
xlat
sbb
stos
ret
repnz
ret
aaa
jo
lahf
inc
popf
pop
cmc
xlat
cmpsb
pop
xchg
fisttps
das
js
mov
imul
adc
push
movsl
xor
push
mov
out
xchg
rcr
sbb
iret
mov
xor
push
dec
test
dec
add
sub
dec
mov
das
adc
push
sbb
hlt
xchg
jecxz
sbb
add
pop
sti
stos
mov
add
dec
insl
inc
lret
aaa
mov
dec
arpl
mov
xor
cmpsb
fldln2
cmp
cmp
jecxz
shrb
jo
xchg
add
jns
gs
cmp
and
push
xlat
cltd
push
cmpsb
mov
add
add
or
aaa
jns
cmc
jno
stos
adc
scas
push
sbb
hlt
clc
jmp
push
cmpsl
pop
loop
ds
out
cli
mov
mov
xor
stc
sbbl
movsb
push
xchg
ret
ud2
out
mov
cwtl
inc
inc
ja
mov
dec
mov
xchg
cmpsb
adcl
cmp
mov
mov
jbe
sub
sub
js
into
push
out
mov
bound
mov
addr16
fsubs
push
cmp
dec
mov
movsl
aaa
arpl
sbb
das
push
push
and
xchg
clc
mov
or
mov
repz
loope
xchg
outsl
dec
jne
inc
pop
push
sub
mov
adc
das
les
mov
pop
jmp
shrl
adc
mov
jne
testl
inc
in
inc
dec
xchg
adc
std
cmpl
xor
jg
jno
fldl
jecxz
jg
fadds
sbb
sbb
inc
pusha
test
xor
cwtl
mov
imul
adc
test
jle
pop
lods
ss
lcall
cmp
aam
pusha
cmp
jmp
xchg
mov
sti
inc
popa
das
loope
xorb
loopne
pop
int3
mov
and
bound
ljmp
xchg
mov
xor
popf
lods
loope
pop
mov
cltd
je
test
notl
mov
in
les
in
test
imul
mov
jae
iret
xor
mov
mov
popf
pop
pop
xor
out
sbb
jb
icebp
add
sbb
cld
push
mov
xchg
das
out
hlt
cmp
pop
mov
push
mov
ljmp
and
repnz
aad
inc
mov
mov
mov
xor
dec
pop
pop
dec
fwait
int3
filds
jp
lret
inc
add
mov
movsl
and
mov
jge
mov
or
dec
or
sbb
or
sub
sbb
sub
adc
es
and
arpl
mov
jecxz
mov
hlt
push
jnp
in
js
xchg
popf
sbb
xor
ss
jecxz
loope
fbstp
adc
and
pushf
mov
in
cmp
sti
jmp
xor
inc
repz
inc
xor
shlb
popf
icebp
jge
and
shlb
xchg
data16
pop
rorl
sbb
call
popa
jl
aas
cmp
or
inc
or
inc
scas
shl
jp
xchg
iret
mov
ss
adc
test
out
adc
mov
push
jl
mov
scas
popf
mov
sbb
and
push
inc
lock
xchg
repz
xor
lods
insb
call
outsl
jae
repnz
insb
ror
mov
push
aaa
aaa
jge
jbe
push
sub
jo
mov
or
xchg
or
aad
js
cmp
lods
add
test
and
cltd
test
insl
and
test
dec
adc
seto
popf
jmp
idivl
or
mov
adc
mov
pop
fbstp
in
push
scas
mov
aaa
outsl
mov
orb
sbb
sbb
jbe
repz
push
jb
sti
fldpi
insb
addl
fwait
cmp
pop
mov
and
mov
add
or
fsts
lret
cmpb
push
push
adc
pusha
jns
test
pop
roll
les
mov
mov
sub
add
xchg
mov
add
xchg
rcrl
adcb
jbe
mov
mov
aaa
ret
in
outsb
jl
jno
test
in
popf
ljmp
adcb
imul
psadbw
push
mov
mov
es
in
xor
sahf
sbb
pop
inc
and
jb
mov
push
enter
mov
insb
fsubrs
cltd
pusha
mov
mov
stos
sbb
cmpsb
sbb
fcomps
outsb
jmp
iret
mov
loope
push
je
outsl
dec
out
pop
mov
xor
mov
bound
out
lods
dec
es
cmp
lret
xchg
mov
pop
xchg
ret
fwait
stos
insb
in
dec
cmp
je
xchg
daa
sbb
lods
ljmp
xchg
xor
jg,pt
jle
in
inc
pop
dec
shll
sbb
ljmp
dec
aam
cli
sti
pushf
jae
fdivrs
push
fs
cmp
stos
ror
sarl
push
ret
lods
inc
mov
scas
or
sbb
or
stos
xor
loop
adc
rorl
cmp
or
mov
pop
mov
jb
loop
fidivrl
xchg
mov
ss
filds
push
inc
fsubrl
nop
gs
sahf
mov
daa
jge
outsb
imul
filds
push
mov
out
fists
test
mov
or
push
add
mov
ret
ud0
adc
xchg
mov
mov
mov
xor
dec
push
xor
negl
clc
pop
xchg
into
mov
push
iret
rclb
repz
shl
sub
mov
push
out
in
or
pop
mov
fstl
pop
push
in
repnz
push
jecxz
pop
pop
imul
cld
rclb
mov
test
mov
test
outsb
add
ds
popf
adc
out
shl
popa
xor
mov
pusha
dec
dec
out
cli
popf
sub
es
out
dec
lods
sbb
leave
movsl
or
jns
pop
ds
pop
inc
fldcw
sub
mov
sub
shl
sahf
ret
pusha
add
dec
mov
sbbb
sub
jmp
lahf
clc
fisubrs
add
daa
mov
iret
mov
aaa
sti
outsb
outsl
fdivrs
xchg
popa
sbb
adc
jecxz
mov
sub
jae
addl
scas
nop
mov
and
mov
nop
inc
jbe
cmp
out
or
xor
popa
cwtl
mov
dec
ficomps
xchg
rcl
or
repnz
pop
push
call
or
sbb
sbb
sbb
mov
imul
pushf
pop
pusha
shlb
mov
pusha
mov
mov
dec
push
and
pop
enter
adc
xor
mov
rcrl
stos
ret
dec
adc
xlat
mov
cmp
repnz
cmpsl
jl
bound
dec
bound
loope
loop
dec
xor
cmp
icebp
lret
movb
enter
or
xor
jbe
mov
incb
mov
push
imul
gs
stos
pop
leave
push
jge
movsl
inc
adc
mov
mov
fldt
sub
jecxz
loop
adc
mov
jae
loope
test
push
mov
popf
bound
jg
pushf
cwtl
mov
or
pop
fmul
pop
jle
cltd
stos
push
in
enter
jge
movsl
jecxz
movsl
cmp
repz
push
or
mov
inc
cwtl
push
push
mov
dec
shlb
xchg
mov
mov
stc
or
lea
nop
cmp
ljmp
divb
stos
mov
ds
sbb
jle
out
sbb
dec
aad
data16
sbb
push
fisttpll
cmpl
mov
loop
push
fisubrs
jle
jno
jnp
cltd
inc
repnz
ds
push
dec
jae
mov
fnstenv
cmp
dec
movsl
fwait
cmpsb
flds
add
mov
jo
ljmp
insb
mov
rcr
mov
dec
push
dec
fsubs
mov
arpl
and
into
mov
dec
fcmove
mov
js
fwait
mov
imul
outsb
xchg
jne
xor
icebp
aas
sbb
jg
inc
lret
out
xchg
xorl
mov
dec
out
cli
mov
dec
sub
cltd
cmp
movsl
filds
call
mov
mov
shlb
repnz
negl
ret
test
mov
mov
shrb
popa
mov
mov
jno
sub
cmp
hlt
cli
jle
pop
inc
xor
leave
and
cmp
iret
ss
inc
xor
sbb
xchg
jb
lcall
and
jae
adc
inc
aas
add
pop
pop
add
hlt
mov
call
push
cmp
jno
jp
in
xchg
mov
add
pop
pop
push
lock
and
xchg
pop
nop
insb
movsl
xchg
imul
cmc
imul
cmp
push
and
mov
adc
xor
lea
inc
mov
pushf
mov
cmp
ret
xchg
call
out
jns
fnstsw
scas
jne
js
add
mov
jo
xchg
pop
cmp
fs
and
addr16
daa
mov
xchg
inc
jo
push
loop
cmp
idivl
mov
les
adc
cmc
fnstenv
outsl
data16
ret
jno
cltd
pop
adc
lock
aaa
add
sbb
inc
cmp
popf
lret
inc
cmpsb
sarb
and
arpl
fs
push
int
lds
xor
cmpsb
popf
jae
dec
mov
lea
sahf
pop
in
add
ficomps
and
cmc
cmp
push
imul
es
or
jge
popf
cmpsb
psubusw
ret
lahf
addr16
mov
movsl
mov
jno
add
jmp
repnz
dec
popf
ja
inc
loop
and
hlt
push
sub
inc
jnp
adc
clc
push
test
pop
and
adc
fwait
push
sub
xor
sub
or
popa
out
add
pop
adc
stc
nop
dec
sub
ljmp
push
adc
add
cmpsb
push
push
bound
fstps
iret
aaa
sar
mov
sub
sbb
lahf
fs
and
pop
jecxz
mov
out
mov
into
sub
xlat
repnz
inc
lock
stc
push
pop
call
mov
mov
ds
xor
rclb
xchg
inc
test
adc
inc
jp
adc
xchg
pop
jae
xor
rcrb
cmp
int3
sub
adc
push
inc
adc
fsub
outsl
repnz
or
jg
sub
pop
in
scas
test
std
and
scas
mull
push
lcall
rclb
adc
movsl
popa
loope
mov
sbb
add
mov
scas
loopne
icebp
repnz
movl
add
test
cmp
mov
pop
insl
jle
cmpsb
xchg
push
lods
mov
repnz
fcmovne
ds
push
inc
or
loope
mov
dec
sub
inc
rorl
inc
cmc
mov
ret
lods
mov
sahf
adc
and
sbbl
push
js
mov
mov
xchg
jns
and
repnz
or
dec
lds
xor
or
aas
jo
movsl
or
cmp
outsb
and
jbe
daa
stc
add
cmpsl
rorl
test
adc
std
pop
imul
arpl
add
jns
aad
cmp
pusha
jbe
sbb
rcrl
cltd
jmp
mov
lahf
mov
dec
lock
rcll
cld
cmp
out
orl
pop
push
mov
xchg
ret
cmpsl
and
call
pop
ret
andl
sub
ja
ret
sbb
mov
or
outsb
push
mov
adc
fildll
ret
xchg
xor
jmp
lret
push
jne
mov
inc
cmp
fisttpll
sub
icebp
out
daa
idiv
xor
mulb
xchg
loop
adc
and
mov
push
sbb
adc
je
xor
mov
cmc
lret
call
push
mov
jg
push
lods
lods
fsubrl
movsb
and
xchg
adc
dec
ljmp
cwtl
fwait
je
cmp
cmpb
or
bound
cs
inc
movb
dec
es
mov
mov
mov
imull
xchg
push
push
pop
pop
es
pop
mov
add
ss
mov
push
mov
mov
into
sub
loopne
out
out
push
sbb
fisubl
movsl
pop
in
and
xchg
inc
dec
mov
and
shrl
inc
cld
and
add
data16
or
mov
jo
adc
popa
jno
scas
xchg
lds
jecxz
or
xchg
or
lcall
push
loop
cmpsl
cmp
inc
in
sbb
jbe
xor
in
subl
es
lahf
das
pop
into
sahf
jmp
les
mov
cmpl
push
or
mov
xchg
add
adc
sbb
popa
mov
fwait
xlat
popl
ret
sub
cmc
loop
les
push
adc
xchg
xchg
jmp
or
in
pop
push
sbb
pop
or
adcb
faddp
push
in
mov
adc
cmc
and
sub
js
loopne
and
mov
mov
fxch
mov
mov
mov
jp
sbb
mov
rcr
or
adc
sub
cmp
and
xchg
insl
incb
pop
adc
aam
in
rcrb
loopne
shl
and
jecxz
outsb
std
data16
cmpsl
dec
daa
lret
xor
dec
sub
xchg
fcmovne
add
and
dec
aaa
pop
pop
pop
hlt
jae
mov
jle
xor
in
fcoml
insb
add
adc
mov
out
cmp
jp
mov
lret
jb
sti
add
pop
setno
int3
es
popf
lahf
xlat
test
fxch
mov
and
je
int
loope
mov
repz
and
jmp
push
mov
aaa
repz
xchg
jecxz
dec
cltd
or
inc
aad
call
pop
shrl
lret
aam
shrb
clc
test
adc
loopne
cmpsb
lds
cmpsl
stos
jecxz
mov
inc
adc
mov
outsb
aas
int
inc
inc
cmp
inc
sbb
jbe
adc
in
sbb
negb
add
mov
push
scas
addl
add
jae
jp
cli
cmp
or
cmc
hlt
jne
add
add
nop
loop
inc
cmp
xor
jo
dec
es
push
xchg
xchg
pushf
sub
lret
cmpsl
inc
mov
and
testl
sbb
das
xchg
addr16
cmc
and
xchg
outsl
aad
mov
sub
loope
mov
or
outsl
and
popf
scas
or
dec
out
loopne
lock
pop
arpl
inc
jle
mov
clc
mov
lock
jbe
cli
out
push
lea
cltd
fstl
jbe
sbb
adc
xchg
add
adc
pop
sahf
xor
cltd
add
jle
dec
jae
push
icebp
cmpsl
adc
adc
pop
sub
iret
xor
mov
scas
pop
push
frstor
mov
pop
mov
aam
mov
jecxz
jns
pop
jmp
xchg
movsl
sub
push
sbb
scas
and
cmp
mov
cmp
push
jl
inc
or
mov
daa
icebp
mov
stos
test
dec
mov
in
jns
test
inc
xchg
add
imull
aad
repz
lock
xchg
fnstenv
push
mov
scas
sti
fwait
or
lret
lods
mov
sub
mov
dec
outsb
and
lods
or
and
ljmp
aam
addr16
or
mov
lods
adc
lds
add
pop
or
and
hlt
mov
sbb
pop
cmp
jb
add
jae
add
dec
ljmp
icebp
jge
dec
fst
mov
xlat
rclb
pop
pusha
sbb
inc
popa
imul
call
push
adc
data16
mov
sbb
jnp
inc
fistpl
cmpsb
xchg
leave
mov
stc
adc
push
movsl
xor
mov
cmc
bnd
mov
push
rcr
test
scas
fnstenv
lahf
idivb
sar
jne
pop
inc
iret
cwtl
jbe
cmp
pop
xchg
testl
inc
fnstcw
cmp
fwait
mov
mov
es
in
ficoms
sbb
cmpsl
mov
loope
and
mov
outsl
pop
into
lock
shlb
pop
mov
add
sti
xchg
out
int3
push
push
out
mov
mov
idiv
xor
hlt
push
sub
add
adc
ficomps
inc
mov
xor
adcl
jl
or
xor
lcall
movsb
ud2
jne
xchg
cld
mov
jbe
jmp
dec
lock
xor
stc
addr16
sub
mov
int
sub
mov
test
stos
stos
into
fildll
or
rcrl
es
xchg
jge
or
cs
pop
jg
wbinvd
jmp
cmp
jle
push
pop
ljmp
lret
dec
jo
push
into
ret
movsb
xchg
xor
mov
jnp
fcoml
dec
push
outsl
xchg
pusha
mov
pop
shrl
mov
movsb
jne
sarb
mov
fistpll
sub
mov
iret
xor
fistps
jns
pop
adc
cmp
outsb
or
dec
push
ret
ds
jb
mov
push
call
mov
test
sbb
mov
jg
or
nop
pop
adc
jge
jl
sbb
push
xchg
jae
xor
dec
xchg
inc
xchg
cmp
addr16
mov
mov
add
das
loopne
or
clc
fstps
notl
idivb
or
or
pop
push
add
sbbl
ret
or
mov
jg
sbb
jl
stos
into
xchg
ss
push
xlat
xor
mov
repnz
add
xor
push
mov
aaa
jne
test
and
loope
rol
in
sub
cmp
adc
sub
push
add
sub
mov
dec
xchg
pop
or
aad
inc
sbb
cmp
dec
add
icebp
decb
jae
lock
adc
cmp
jae
mov
jp
sub
aas
popa
fcomi
arpl
jg
xchg
mov
ja
or
test
in
mov
stc
add
pop
lret
cmp
pop
adc
lret
repnz
push
lods
mov
and
dec
mov
pop
aad
jg
aam
pop
fadd
data16
mov
mov
adc
jl
and
cli
pop
incb
inc
mov
mov
pop
push
and
mov
out
je
push
cmp
push
jne
sbb
push
enter
mov
sub
imul
cmp
push
repnz
xchg
push
push
roll
sbb
stos
xor
adc
stos
test
stos
cwtl
jmp
sbb
stos
pop
ja
jmp
inc
scas
cmp
mov
cmp
cmp
adc
gs
cli
and
pop
dec
orl
pop
mov
push
mov
cmp
jge
adc
or
mov
in
out
clc
cld
sbb
cltd
mov
gs
inc
push
test
mov
into
lock
sbb
stos
inc
mov
pop
shlb
and
ss
and
unpckhps
cmc
dec
sub
add
pusha
mov
cltd
ds
mov
cmpsl
test
stos
xchg
mov
and
or
pusha
cli
push
fldcw
mov
shrl
and
add
mov
stos
add
inc
xchg
adcb
mov
leave
push
ret
adc
jg
push
int
rcll
gs
sbb
adc
push
xchg
loope
int3
fcompl
cltd
mov
mov
repz
xlat
sti
loopne
pop
cli
and
jmp
pop
adc
pop
pop
pop
int
add
pop
dec
cld
adc
cmpsl
paddd
inc
xchg
cwtl
jb
aad
pop
into
divl
mov
push
es
cmc
fwait
cmp
dec
jl,pn
sbb
subb
repz
pop
cmpb
das
push
bound
push
scas
cmpsl
xchg
cmp
mov
out
nop
xor
inc
addr16
sbb
lods
popf
inc
pop
imul
stos
pop
rcll
cmp
push
adc
aad
jne
sub
fadds
adc
andb
pop
fs
xor
outsl
dec
and
push
inc
lahf
shrl
push
adc
cmp
loope
out
xchg
jp
fucomp
outsl
loop,pt
test
daa
js
pop
mov
cmpsl
mov
sub
push
lds
xor
sbb
xchg
jl
ja
outsl
push
enter
jbe
fdivl
stc
add
hlt
pop
repz
cmp
andb
fmull
ret
push
or
mov
enter
arpl
jo
add
jbe
sub
pop
jle
dec
jbe
mov
jbe
pop
pop
xor
xchg
insl
mov
popf
cmp
pop
repz
cmc
adc
scas
jecxz
adc
sub
mov
repnz
xchg
fst
xchg
pop
and
ret
mov
loopne
mov
mov
sub
cmp
pushl
lock
dec
js
xchg
hlt
push
dec
shrl
push
jmp
orb
xorb
pushf
push
add
sti
gs
in
sbb
push
push
mov
cmp
or
jge
sub
jmp
lret
push
es
aam
jns
or
arpl
aaa
xchg
and
pop
lods
test
subb
outsb
adc
jp
fisttpll
outsl
shlb
cmpsl
nop
daa
cltd
mov
mov
inc
outsl
push
or
ljmp
or
je
es
leave
ret
jp
rcll
mov
jl
stc
loope
pop
in
call
leave
cmp
aam
ss
fidivrl
iret
xor
xchg
pushf
sub
mov
cltd
mov
scas
popa
mov
adc
add
inc
mov
fisttpl
scas
dec
inc
sbbl
sbb
call
jbe
fisubl
sbb
outsb
xchg
and
push
int
ljmp
movsl
xor
xchg
nop
push
jne
ljmp
lods
cmp
push
jmp
divl
shlb
mov
std
into
repz
popa
fs
jo
or
lock
sub
loope
inc
imul
pop
movsb
lahf
mov
sub
fisubl
lods
in
xchg
repz
imul
rcl
xchg
sbb
add
mov
lcall
pushf
addl
cmp
add
push
sbb
xor
mov
vpinsrw
dec
outsb
out
or
and
pop
push
sub
or
shrb
stos
fcoms
xchg
jmp
inc
xor
lea
add
mov
inc
push
enter
lret
xchg
dec
std
dec
xor
sbb
outsb
jnp
popa
arpl
and
mov
enter
inc
mov
out
lcall
xor
mov
adc
xor
test
xchg
lds
pop
adc
jo
cli
addr16
sbb
inc
in
repz
jne
fdiv
mov
adc
insb
ss
std
fdivs
popa
lods
jbe
pusha
adc
add
sub
call
sar
jnp
mov
add
xorl
test
test
dec
xchg
push
out
and
xchg
sbb
pop
cmp
mov
loope
pusha
adc
loope
adc
xchg
cmp
dec
push
cwtl
scas
shll
scas
push
jle
cltd
negb
jnp
push
mov
mov
movsl
dec
shrl
cmp
sub
mov
push
or
movsb
mov
sub
test
mov
jecxz
push
aad
pushf
or
inc
test
xor
cmc
dec
and
jmp
or
sub
dec
fwait
add
add
dec
mov
xor
or
dec
fdivp
scas
mov
push
mov
cmp
and
daa
out
add
repnz
fcmovnbe
cli
mov
add
and
in
inc
int3
push
fstpt
add
arpl
xchg
mov
daa
cld
je
push
jns
mov
sub
rcrb
loopne
shrb
movsl
jns
imul
adc
mov
mov
lret
pop
ds
jnp
mov
cmp
or
test
daa
lahf
fisubrl
loopne
and
adc
rclb
lock
pop
xchg
sbb
pop
sarl
xchg
adc
lods
aam
pusha
sub
xor
aam
push
movsb
shrl
inc
add
inc
out
jmp
cltd
jbe
mov
mov
jb
and
pop
adc
xchg
fcmovb
push
and
outsb
daa
xor
pusha
push
xor
imul
add
ficompl
std
lcall
stos
inc
xchg
lret
and
shl
pushf
or
xchg
lea
out
pushf
push
jb
and
sub
dec
mov
mov
fcompl
push
inc
xchg
push
sahf
sti
inc
mov
das
adc
xor
and
jbe
int3
push
push
gs
dec
dec
test
jb
enter
ljmp
or
test
mov
scas
sti
enter
dec
push
xor
xor
xchg
ret
jo
dec
fcomip
repnz
aas
sbb
adc
jmp
lods
fdivr
mov
das
adc
es
stos
pop
sbb
int
adc
popa
int3
cmp
sub
push
jg
push
pop
xor
jnp
pop
jg
lahf
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
cwtl
pop
ljmp
stc
mov
add
push
cmp
shll
cmp
in
into
int
mov
int3
mov
xchg
fisubs
mov
add
add
fstps
add
push
xchg
dec
inc
sub
or
mov
out
lret
ret
cs
adc
std
testb
loopne
frstor
jae
xchg
and
ljmp
loop
insl
in
pop
xchg
and
call
aam
imul
push
or
xlat
fnstcw
inc
shl
scas
test
sbb
fwait
jle
scas
rcr
andl
les
push
mov
xchg
xchg
mov
adc
mov
push
cmp
arpl
icebp
cltd
adc
jge
out
mov
outsl
push
jl
push
imul
clc
mov
cvtdq2ps
addr16
scas
xchg
pop
loopne
jg
out
pushf
sub
fwait
pop
out
inc
pop
leave
orl
sub
je
stos
inc
insl
xlat
cmpsb
dec
andb
stos
test
repz
in
sti
dec
aaa
and
lahf
jo
sub
pop
xchg
nop
mov
fisttpll
sub
xchg
cwtl
push
sbb
or
call
stc
cld
test
xchg
test
add
dec
imul
dec
jl
mov
dec
ret
insl
loope
pop
mov
stos
pop
push
xorb
pop
bound
scas
cmp
jo
jbe
adc
mov
or
nop
xor
imul
icebp
jecxz
das
inc
jmp
dec
lcall
out
mov
movsl
add
insl
mov
ffree
adc
sbb
ficompl
cmpsb
dec
iret
outsl
adc
dec
mov
pop
mov
arpl
sub
shrb
std
xlat
ljmp
fwait
mov
push
in
iret
cmpsb
les
popa
add
rcrl
fdivrs
xchg
jno
jl
shlb
in
loopne
in
cmp
hlt
dec
rorl
pusha
cmp
dec
xlat
and
por
add
sub
fisttpll
xchg
test
pop
push
orb
mov
lods
lret
cld
or
inc
repnz
in
adc
int3
int3
or
repnz
xor
or
fdivl
pop
pop
shr
mov
aam
mov
idivb
cli
mov
loope
lods
sti
add
ret
outsl
sub
mov
sbb
inc
and
mov
movb
addl
orl
lock
push
push
out
dec
mov
frstor
cmpb
ja
movsl
mov
sahf
and
jns
stos
pop
ret
out
pushf
xchg
fnsave
je
or
cmp
pop
pop
ret
mov
outsb
mov
inc
mov
jno
sbb
fs
jb
jmp
faddp
dec
mov
int3
or
add
sbb
push
rcrb
cmp
fstpl
dec
inc
push
std
sub
pop
mov
jo
shll
rorb
imull
fildl
mov
dec
stc
fcoml
adc
fisttps
shl
stos
daa
mov
inc
movsb
es
iret
sbb
dec
lcall
jne
pushf
insl
inc
add
psadbw
daa
pop
sbb
mov
sbbb
cmpsl
xchg
stos
fwait
xor
cmp
rep
mov
fdivrl
xchg
repz
xor
ss
push
xor
insl
lds
sahf
pop
mov
movl
and
jbe
imul
mov
xor
mov
fnsave
fistpl
imul
cmp
loopne
out
xor
push
mov
andl
jmp
out
cmpsl
into
popfw
mov
daa
push
mov
mov
sub
or
movsb
mov
jmp
arpl
test
mov
push
das
jp
or
lret
xchg
push
test
ja
cmovle
in
mov
test
or
inc
aaa
loopne
lea
mov
addb
or
iret
sub
push
sbb
pop
push
jne
and
fs
daa
pop
jo
inc
mov
setae
sbbl
mov
pop
pop
and
adcl
repnz
sbb
addr16
xchg
pop
loope
cmpsl
push
xchg
loop
std
popl
aaa
adc
outsl
cmc
insl
mov
mov
js
jnp
xchg
mov
mov
lods
gs
sti
leave
shll
cld
test
cli
cli
adc
pop
xor
sbb
sbb
sahf
ja
inc
xlat
push
push
out
jo
mov
sub
jb
sbb
xchg
mov
dec
lea
sub
and
movsl
stos
mov
jecxz
add
daa
xor
adc
mov
fwait
insb
sahf
or
mov
test
and
ss
inc
inc
add
sbbb
fadd
xchg
ds
inc
inc
stc
negl
or
push
inc
pop
xchg
call
jae
add
xor
push
jmp
cmc
push
push
xchg
fbld
lret
aad
mov
sbb
repz
lcall
push
test
stos
lret
dec
pop
ds
jle
push
mov
cmc
cmpsb
lds
sub
jae
bound
ja
call
cmp
insb
fstpl
cmp
pop
addr16
add
rcl
es
mov
jnp
mov
stos
push
xchg
mov
aam
loopne
je
sbb
test
test
pop
clc
rcll
notl
out
loop
mov
notb
iret
sub
mov
addr16
jb
mov
adc
mov
lahf
push
nop
in
xorl
jle
stc
jle
inc
cmp
insl
orl
cwtl
into
js
push
rolb
fsubs
mov
xchg
fld
mov
pop
xchg
adc
pop
xor
mov
sbb
nop
pusha
dec
adc
mov
push
mov
bound
loopne
stos
enter
push
int3
mov
dec
out
xor
ja
jmp
xor
lods
dec
cmp
push
mov
jle
mov
xor
test
xchg
sbb
inc
jmp
pop
sub
data16
and
sub
fdivrs
enter
xchg
mov
pop
xor
or
jle
icebp
dec
fs
mov
outsb
int
in
lret
sbb
or
mov
mov
lock
rorb
fstpt
cli
jge
loopne
es
roll
iret
int
ja
rol
int
add
mov
push
sarb
mov
addr16
push
adc
mov
pushf
rcrb
test
cld
popf
jmp
add
cltd
and
out
pushf
and
dec
pusha
ss
push
dec
xor
mov
divb
dec
add
sbb
ret
xor
ficomps
jne
dec
add
xchg
cltd
rcll
loopne
sbb
jo
lock
ret
mov
pop
add
inc
pop
shlb
push
dec
xor
in
popf
cmp
lret
out
test
lea
xchg
lods
sub
clc
push
lret
and
ret
test
test
add
and
daa
stos
addr16
xlat
mov
add
imulb
xchg
push
pop
mov
mov
pop
cmpsl
icebp
jle
jno
test
aas
rorb
or
sahf
insb
jle
jns
loop
imul
cmp
jmp
cmc
cwtl
stos
pusha
mov
cmpsb
mov
arpl
and
inc
sbb
insl
pop
sarl
mov
pop
or
or
xchg
in
mov
mov
cmpsb
clc
and
call
popf
and
in
cwtl
inc
data16
int3
xor
dec
pop
lea
test
or
pop
or
sahf
in
and
lcall
movsb
xor
imul
inc
xchg
push
or
mov
xor
daa
push
cs
lds
fnsave
popa
inc
lods
shr
push
int3
xlat
sub
pop
out
or
adc
scas
ds
clc
idivb
mov
jbe
mov
lods
test
lret
ljmp
add
sti
pop
adc
lret
add
or
xchg
inc
pushf
testb
out
inc
cli
inc
roll
adc
subb
push
ret
or
jp
push
lret
test
fwait
mov
or
movsl
adc
popf
push
mov
dec
sbb
push
loope
sub
fwait
add
mov
mov
or
sub
and
sub
cmc
jnp
xor
fs
fcomps
pop
enter
or
and
or
arpl
movsb
in
fnstenv
movsl
pop
add
jmp
mov
ss
xor
inc
inc
fmul
fdivrs
sub
adc
adc
dec
xor
mov
jmp
lea
sti
popf
push
add
xor
pop
push
adc
mov
imul
jns
pushl
cmp
stc
pushf
fistl
stc
outsb
mov
add
incb
in
push
insb
pop
adc
mov
dec
mov
mov
cld
mov
inc
fimull
test
pop
ds
xorb
and
pop
inc
mov
jecxz
cmp
push
add
pop
and
sub
xor
mov
insl
jae
pop
subb
jl
dec
fwait
pusha
ret
fldl
mov
sahf
and
mov
sub
or
ljmp
out
jmp
icebp
or
fsts
sbb
loope
inc
xor
or
cmp
out
ljmp
dec
xchg
jmp
cmpsb
xchg
stc
incb
inc
pop
cmp
jg
jns
pop
decb
mov
adcl
arpl
or
stc
push
sub
in
pop
fdivrs
mov
mov
in
hlt
clc
push
push
and
sub
insl
jp
inc
xchg
enter
dec
jae
add
sbb
pop
ret
and
fcomps
leave
mov
out
push
push
cltd
stos
cli
sub
cmpsl
shl
lret
call
lea
nop
ret
vpunpckldq
adc
mov
and
icebp
xchg
push
add
jge
cmpl
dec
pop
test
jmp
or
mov
lds
mov
and
or
jno
inc
fld
pop
in
sub
mov
aaa
outsl
cwtl
push
fwait
jbe
fcoms
ret
xorb
dec
loop
and
mov
aaa
mov
sub
movsb
not
icebp
fwait
jns
imul
insb
int
jb
adcb
call
jmp
imul
out
incl
rolb
pop
mov
inc
jb
js
and
aaa
cli
push
adc
push
insl
adc
out
mov
xor
mov
dec
or
cltd
lods
mov
iret
add
inc
pop
jbe
aaa
pop
push
cmp
rcrb
les
repz
mov
jle
add
rclb
movsl
stos
sub
sub
or
xchg
or
adc
or
loope
adc
push
add
jecxz
std
xor
lcall
sub
ja
xor
jo
sbb
insl
scas
outsl
addl
fnstsw
mov
das
adc
inc
push
cmp
mov
into
lods
adc
mov
out
insb
pop
add
jmp
inc
pusha
xchg
in
rorl
cwtl
sbb
negl
push
in
add
lcall
fsts
dec
into
and
imul
and
xor
clc
and
xor
das
sbb
cmp
dec
loop
pop
aam
xlat
pop
daa
out
lea
adc
xchg
repz
jns
dec
lock
lea
xor
cmp
aas
roll
jg
inc
fbstp
out
inc
pop
arpl
scas
xor
ja
arpl
scas
sub
jg
cwtl
mov
xor
call
mov
xchg
mov
ljmp
je
call
lahf
dec
xor
jecxz
scas
cmp
cmp
push
out
jge
fwait
jae
add
es
cwtl
add
adc
mov
push
push
lcall
in
fdivl
jg
inc
jnp
ss
test
ret
out
inc
jl
sarb
sub
lods
xchg
mov
push
xchg
scas
cmp
clc
mov
and
pushl
push
fcmovbe
and
movsb
in
lods
notb
adc
push
movsb
ret
fs
sbb
pop
adc
sub
clc
pop
aad
out
xlat
jne
lds
mov
pop
daa
or
nop
fistpll
ficoms
sub
pop
out
mov
fsts
xchg
sub
imul
inc
and
cmpsl
jge
add
ficoms
cltd
shlb
les
fistpll
ja
push
pop
adc
mov
cmp
ret
aam
cmp
inc
aad
pop
pop
ret
leave
sub
push
loopne
cmpsl
mov
push
jg
inc
dec
das
cmp
int3
mov
mov
fs
repz
sahf
push
push
aam
pop
add
cmp
in
mov
sti
pop
fsubs
add
push
scas
cmp
std
fdivs
sbb
out
pop
repnz
mov
ss
outsl
lret
jl
pop
xlat
cmp
mov
mov
nop
jmp
pop
je
mov
mov
popf
sbbb
loope
adc
fstps
aam
mov
dec
in
add
jmp
imul
xor
cwtl
sarb
aad
push
mov
leave
repz
mov
cmp
xchg
mov
enter
es
dec
enter
repz
jge
sbb
mov
jp
jo
gs
jmp
in
lods
sbb
js
dec
cmpsl
stos
fistps
ret
imul
rolb
mov
lock
dec
dec
cld
data16
fistps
inc
iret
cli
lock
jl
and
ret
jo
das
and
cld
mov
sub
add
rcrb
add
add
sahf
dec
xchg
das
icebp
sbb
movsl
or
incb
add
xor
lcall
xor
dec
lahf
push
pushf
jle
lcall
cltd
inc
das
or
inc
cs
cmpsb
sub
push
repz
test
imul
leave
xchg
jne
gs
lret
ja
and
pop
pop
out
sahf
jmp
stc
int
xor
cmp
adc
push
ret
pop
adc
arpl
jg
rorb
ljmp
inc
mov
roll
dec
loope
shlb
xor
mov
add
lods
movl
repnz
push
push
jmp
push
stc
out
or
cltd
lods
inc
out
and
outsl
movsb
dec
outsb
sbb
aam
out
jo
repnz
in
dec
cmp
leave
or
cmp
int3
mov
fidivrl
pop
push
inc
lret
and
push
filds
xchg
ja
inc
scas
jecxz
jle
das
jns
inc
cmp
sbb
sub
mov
push
xor
push
sub
loopne
jno
lret
outsl
mov
repz
push
fdivl
mov
lret
or
and
in
or
rcll
lea
out
push
cmp
mov
jnp
lcall
rorb
push
idivl
and
mov
dec
dec
popf
movsl
mov
mov
add
lret
stos
mov
mov
testl
in
in
mov
and
xor
int3
int
pop
jnp
xor
mov
pop
je
aam
sbb
test
push
insl
jecxz
fisttpll
inc
jbe
mov
jg
xor
jmp
pop
ret
sbb
sarl
push
mov
shlb
xor
sub
sti
jae
dec
or
and
xor
xchg
scas
jl
cld
sbb
dec
push
jae
mov
sub
xchg
xor
push
mov
movb
hlt
mov
stos
mov
int
mov
mov
mov
inc
sti
mov
shr
mov
stc
xor
and
xchg
push
or
fcomi
adc
xchg
pop
mov
inc
aaa
push
jnp
xor
pop
pushf
mov
cli
jl
xchg
jp
sub
int3
cmpsb
mov
jo
jmp
or
sbb
inc
mov
sub
sub
cmp
stc
in
clc
mov
jb
mov
addb
rcrl
inc
xchg
add
call
push
mov
out
xchg
sub
insl
jle
mull
pop
das
aad
sub
jl
ljmp
pop
das
call
sub
jl
shll
push
add
sub
leave
aad
mov
repz
dec
mov
add
jg
out
sub
movsb
mov
cli
ret
loopne
and
lds
loope
sub
push
mov
fidivl
stos
call
cld
jmp
fstl
adc
xchg
daa
add
push
ja
sbb
das
cmpl
sbbb
stos
sbb
xchg
fstps
pop
mov
mov
xchg
jle
sbb
xchg
aam
xchg
into
and
or
adc
icebp
mov
js
sub
cmp
cld
xor
dec
sub
mov
cmp
ds
cmp
jecxz
mov
scas
shrb
push
jae
shrl
mov
jae
sub
push
jle
je
add
out
cmc
loop
xchg
adc
out
xchg
mov
les
repz
out
dec
or
add
dec
pop
jg
cmp
jmp
gs
fistpl
sbb
xor
xor
pop
pop
fistps
and
lret
jo
inc
jae
mov
xchg
dec
data16
mov
push
mov
or
repnz
cmp
out
stos
cmp
jbe
popa
int
lds
cmp
pop
outsl
xor
mov
sub
lcall
push
cld
movl
cmp
fiadds
or
mov
bound
jmp
adc
and
dec
call
sub
imul
cmc
insl
lods
pop
repz
stos
jl
mov
adc
pop
pushf
mov
fnstcw
aad
add
mov
fwait
cmp
ljmpw
repz
and
sahf
test
imul
mov
test
sbb
jg
mov
xor
or
xchg
mov
test
outsl
push
pop
and
xor
lahf
das
mov
push
sbb
out
xor
mov
orl
mov
push
mov
and
xchg
jbe
paddusb
jae
jecxz
cmp
inc
pop
rcrb
std
mov
rolb
sahf
jne
std
jbe
in
outsl
gs
daa
inc
inc
jmp
sbb
push
add
mov
aas
cmp
into
mov
cmp
lock
sarb
push
fdivs
scas
push
mov
xor
xchg
scas
aam
mov
in
and
mov
cmpsb
pusha
das
fs
ret
jle
mov
mov
daa
dec
pushf
and
pop
jl
fcompp
dec
cld
repnz
sbb
xchg
mov
jge
andb
jo
mov
pusha
in
push
mov
sahf
arpl
jnp
xchg
xchg
pop
pop
js
cmpsl
data16
sahf
fldl
pop
dec
push
rcrb
mov
daa
imull
sarl
sbb
add
pushf
and
mov
popa
jl
sbb
ror
das
gs
rorl
insl
pusha
sbb
fbstp
stc
out
mov
loop
cmp
jmp
pop
dec
mov
mov
mov
shll
ds
mov
dec
ret
push
mov
mov
rclb
inc
or
jmp
xor
lock
push
pop
testl
jae
mov
mov
jb
mov
push
sub
pop
clc
pop
and
jae
dec
add
push
shrb
push
in
test
jmp
jmp
inc
xchg
in
push
clc
je
outsb
fmull
jb
xchg
pop
dec
fidivrl
in
mov
xor
cmp
inc
mov
sub
ret
jl
int3
add
inc
gs
les
xchg
cmp
std
repnz
mov
mov
aas
cmp
ret
xor
insl
mov
test
inc
xchg
dec
sahf
in
add
push
popf
lret
dec
into
cld
ds
mov
shll
pop
ljmp
pop
enter
clc
insl
fldcw
imul
rcrb
xor
fcomi
sbb
jg
movb
and
mov
pop
add
or
mov
pop
stos
xor
cmp
sbb
add
test
test
jp
add
outsl
dec
ljmp
subl
das
loop
cld
ds
add
insl
mov
adc
ss
xor
inc
fs
pushf
add
cmp
mov
lods
adc
xchg
jmp
es
stc
xchg
shll
test
nop
out
xchg
imul
fnstcw
pop
sbb
push
enter
jecxz
stos
pop
sub
stos
daa
lods
mov
cld
and
mov
jle
movsb
and
call
js
stc
inc
pop
inc
mov
pop
sti
inc
or
and
lahf
in
sub
lret
in
adc
push
mov
pop
fiaddl
ja
sub
pop
mov
push
in
std
and
jae
imul
jnp
jno
mov
mov
out
sarl
loopne
sbb
repz
test
and
jns
jb
and
cs
adc
dec
ret
xlat
sub
add
mov
fisubrs
addr16
pop
cmp
popf
fs
jb
mov
dec
cmp
fst
lret
stos
aam
jge
pop
mov
pop
mov
leave
xor
jge
icebp
icebp
pop
or
cltd
iret
or
and
xor
loopne
insl
pusha
xor
mov
js
xchg
repnz
mov
xor
movsb
push
mov
leave
dec
bound
arpl
ss
mov
pop
pop
iret
lock
or
add
add
jmp
cmp
repz
xchg
enter
imul
sti
stc
pop
cmp
dec
xor
and
out
pop
dec
ljmp
pop
cmp
aam
push
sbbl
lcall
pop
andb
pop
mov
sahf
cmp
data16
inc
sarb
imul
mov
std
mov
movsl
or
mov
loope
outsb
mov
in
jg
jle
pop
test
mov
xchg
jbe
xor
testl
lea
call
mov
sub
jo
jp
in
fmuls
lock
fwait
pop
cwtl
cmp
or
sbb
lret
call
jp
xlat
arpl
sbb
push
sbb
sub
xor
inc
dec
jl
or
mov
cwtl
pop
jmp
fidivl
mov
cmpsb
cmp
sub
dec
or
jnp
das
sbb
nop
adc
cld
jbe
jl
and
int3
in
rolb
or
add
pop
dec
mov
sbb
lcall
inc
dec
sub
dec
mov
jl
adc
mov
push
lcall
jae
mov
lea
fdiv
rol
es
into
lret
mov
aam
and
pop
fidivrs
mov
push
das
shll
fwait
in
push
outsb
pop
pop
pop
arpl
push
je
frstor
cmp
adc
pop
inc
rclb
jge
fbstp
pop
scas
cli
mov
push
loopne
iret
xchg
mov
pop
push
fnstcw
fsubp
adc
insb
adcl
xchg
xlat
jp
stc
insl
inc
pusha
lahf
sbb
cmp
scas
imul
ljmp
jno
cmpsb
nop
inc
dec
das
ss
and
mov
jae
scas
jg
inc
mov
test
jno
cwtl
jno
jmp
cmpb
cld
xor
push
mov
mov
aaa
push
pop
pop
jg
xchg
pop
push
das
inc
maskmovq
negl
cmp
nop
mov
adcl
push
movsl
xor
popa
inc
test
adc
cld
shl
imul
test
cli
xor
out
int
adc
adc
loopne
mov
cmp
shl
xchg
sub
jp
push
cmp
mov
xor
mov
jge
fbld
js
mov
in
add
inc
cwtl
pop
jne
inc
pop
inc
aas
adc
bound
mov
xor
mov
cmpsb
adc
add
xor
mov
sub
sti
lock
fisttpll
fsubrp
int3
push
xchg
push
addr16
cmp
enter
inc
movsl
popa
ds
push
shl
ret
sbbl
add
adc
dec
mov
addr16
cmp
mov
add
cwtl
mov
cld
mov
in
xchg
xchg
cmpsb
pop
jge
sub
jge
cltd
xchg
ret
ljmp
xchg
test
dec
fcomp
jg
hlt
xorb
mov
xchg
cmp
adc
enter
pop
cmpsb
pop
shrl
fbstp
gs
aad
pop
push
imull
pop
cs
mov
cmp
cmpsl
mov
enter
push
mov
jmp
xchg
pop
pause
shr
outsl
adc
push
fwait
add
add
sbb
jns
sbb
shrl
aas
sub
or
xchg
insl
cld
dec
xor
and
inc
push
mov
push
jge
pusha
fwait
mov
sar
in
jmp
adc
scas
dec
stc
xor
loope
sbb
sbb
into
and
pop
push
jecxz
inc
jp
mov
popf
pop
mov
add
pop
and
xchg
call
jae
inc
mov
rcl
ljmp
test
mov
push
jno
in
inc
cmp
or
scas
mov
mov
out
cmp
cmp
in
mov
sub
mov
mov
pushf
xor
loope
cld
fcmovbe
mov
sbb
scas
sbb
popa
sbb
pop
push
leave
inc
inc
and
mov
jl
mov
leave
xor
sarb
out
out
mov
add
cltd
leave
mov
cmp
hlt
mov
or
dec
or
sti
xor
in
cmp
mov
jp
or
hlt
add
and
xor
pop
jbe
add
pop
or
aam
push
mov
mov
add
cmc
add
cmp
push
aaa
mov
ror
pop
in
bnd
add
inc
xor
adc
inc
cltd
loopne
mov
stos
movsb
sub
xchg
ja
cmp
xor
inc
cwtl
call
test
call
mov
lds
push
lahf
stc
xchg
daa
mov
mov
ss
ljmp
sbb
insb
imul
jge
scas
std
push
jo
out
jg
sub
lahf
mov
mov
mov
int3
in
mov
dec
fwait
iret
mov
test
bound
push
fisubrl
mov
ja
jmp
scas
stos
adc
add
or
imul
mov
add
ljmp
xchg
jp
es
mov
inc
mov
dec
adc
rcrl
mov
imul
jno
add
js
fnstsw
add
aaa
jg
lret
fmuls
mov
mov
pop
and
xchg
inc
pop
loopne
testb
cmp
mov
std
jae
movsb
jno
shrb
aas
dec
stos
mov
dec
jo
sarl
mov
inc
and
in
jne
sub
nop
or
enter
out
cmp
rclb
nop
mov
fisttps
lods
lods
icebp
inc
rclb
scas
gs
jle
sub
push
mov
cmp
inc
outsl
hlt
push
mov
or
int
mov
faddp
push
jb
mov
mov
cmp
push
cmp
push
daa
xchg
inc
push
and
imul
sub
and
mov
jl
jecxz
mov
xchg
icebp
stc
pop
leave
sahf
imul
mov
aaa
nop
popf
xchg
inc
roll
div
sbb
addr16
mov
popf
mul
pushf
in
mov
cs
pop
in
outsl
push
cwtl
jmp
sub
pop
jbe
aad
push
repz
cmp
out
mul
ljmp
ja
jge
hlt
xchg
ds
xor
add
adc
mov
pusha
mov
jnp
xchg
push
push
scas
push
mov
mov
lret
ret
testl
xchg
mov
xor
sbb
cmp
test
rcrb
mov
mov
loop
sahf
popl
lret
clc
popa
cmp
xor
pop
or
and
adc
ja
addb
ds
pop
sub
jle
ss
arpl
or
push
fimuls
mov
stc
stc
mov
ud0
xchg
sbb
nop
or
out
fwait
das
test
je
pop
adc
xor
aad
mov
adc
jle
rcl
inc
daa
cmp
in
pushf
stc
shrl
jl
mov
fisttpl
ja
lock
add
in
ss
data16
out
mov
jno
cmp
jg
je
mov
jnp
gs
negl
mov
and
cmp
dec
out
and
dec
loop
mov
xchg
push
dec
scas
sarl
jg
jns
xor
pop
mov
push
pop
mov
pushl
call
jbe
sbb
mov
cmp
movsb
jle
jp
sub
ficompl
xchg
call
stos
xor
fsincos
jns
aad
mov
mov
jne
sub
push
push
or
mov
fucomip
fdivl
pop
in
icebp
addb
je
ljmp
and
aam
xchg
cmp
daa
xchg
mov
leave
lret
movsl
inc
adc
mov
pop
xor
aam
pop
add
mov
test
cmp
mov
adc
inc
dec
out
jmp
fwait
jle
and
dec
cmp
dec
fldl
dec
scas
sub
and
push
jbe
push
dec
xor
push
jecxz
mov
rorb
pop
mov
cmc
xchg
dec
es
sbb
mov
or
stc
mov
in
mov
push
pop
pop
std
fstl
hlt
sahf
mov
ret
jp,pt
fdivrs
mov
sub
or
jl
push
divb
in
and
vdivsd
dec
test
mov
cmpb
insl
adc
mov
cld
lds
inc
das
push
daa
push
pop
mov
and
mov
in
lret
addb
cmp
xchg
fmull
sub
mov
mov
repz
sbb
int
int
inc
mov
fldcw
les
cli
add
call
or
pushf
inc
adc
dec
pop
inc
pushf
aad
cmp
mov
fmuls
hlt
pusha
push
test
fmull
les
daa
icebp
out
popf
or
fsts
mov
cmpsb
or
aas
inc
lret
scas
cmc
cmc
jo
and
into
idivb
es
stos
hlt
push
or
xchg
mov
push
dec
push
bnd
cwtl
mov
dec
loope
inc
sbb
loopne
xchg
ljmp
jecxz
or
adc
cmp
lods
fnsave
mov
imul
pop
inc
jle
push
sbbb
mov
mov
rcrl
lods
xchg
sub
pop
outsb
fld
sbb
mov
and
push
sbb
into
test
orl
xchg
add
lret
int
sbb
rol
jle
stos
jmp
dec
push
iret
push
shrb
ds
mov
add
idivl
inc
scas
in
xor
or
cmp
ss
scas
add
cmpsl
jne
add
loope
xor
rorl
sub
repz
dec
dec
or
stos
dec
and
xor
dec
les
pop
mov
cmp
daa
or
iret
inc
and
imul
push
push
adcb
xchg
mov
mov
das
icebp
popa
aad
int
je
pop
jge
pop
addr16
pushl
lret
push
xchg
xor
adc
sub
xchg
pop
call
stc
xchg
pusha
push
test
sbb
notb
push
jns
or
fwait
mov
push
jp
mov
pushf
mov
in
xchg
fs
testl
shlb
dec
xchg
stos
mov
sbb
pop
or
pop
pop
lds
jns
inc
fcmovb
dec
jb
xor
repz
cmpsl
add
psubd
pop
mov
and
lahf
add
xor
in
dec
mov
loop
xchg
adc
cwtl
sbb
cs
push
fs
shll
pop
fimull
fldcw
fcompl
mov
into
pop
arpl
rcl
leave
sub
lret
movsl
inc
pop
arpl
xchg
fcoms
scas
adc
imul
xchg
cmpsl
pop
shll
jbe
std
std
add
push
rclb
ljmp
jns
dec
lcall
sti
dec
out
mov
in
ljmp
xchg
ret
mov
nop
cmp
adc
mov
sub
add
incb
xor
lcall
pop
or
movsl
into
mov
call
fidivrl
xchg
pop
scas
jp
adc
and
inc
enter
sbb
nop
inc
mov
in
pop
pusha
inc
jns
and
ret
cmp
fbld
popf
or
push
jle
movsl
mov
cmp
je
fadd
xchg
inc
mov
jne
dec
adc
addr16
lea
dec
mov
mov
mov
fdivrs
es
outsl
sbb
sub
dec
sub
hlt
sahf
xor
xchg
pop
add
shll
jb
push
imul
add
hlt
lret
and
int3
in
icebp
push
inc
cmp
xchg
jns
int
in
xor
test
jmp
dec
dec
adc
das
hlt
jp
or
jnp
mov
adc
adc
cmpsl
inc
or
cmp
and
ja
dec
add
scas
adc
cltd
ljmp
loopne
mov
inc
aaa
bound
imul
sbb
addr16
xchg
call
adc
fisubl
dec
loop
test
xchg
repz
push
mov
sub
or
cltd
ja
inc
cmp
pop
pcmpeqw
and
fisubrl
enter
adc
sti
sbb
mov
std
frstor
lahf
inc
or
enter
or
test
leave
ret
jb,pn
popa
insl
rcll
ja
cmpsb
sub
xor
aad
adc
cmc
lds
pop
fwait
cmp
imul
stos
sub
cltd
inc
or
mov
mov
scas
jge
les
pushf
add
test
mov
xchg
fstl
or
arpl
ds
dec
mov
test
xchg
xchg
fldcw
xor
push
mov
repz
push
sub
fsub
cmpsb
xor
mov
rolb
mov
cmp
int3
loopne
mov
mov
or
sub
mov
adc
insb
dec
or
xor
mov
adcl
push
xor
mov
xor
insl
dec
or
nop
jecxz
cltd
push
pop
xor
jbe
popa
sbb
sub
jae
jnp
insl
pop
mov
adc
mov
lcall
adc
pushf
lret
insb
inc
lock
stos
jne
fisubs
daa
jge
cmc
and
cmp
mov
sub
test
in
mov
dec
sar
push
scas
or
fisttpl
add
lret
adc
movsl
popa
jae
inc
mov
sbb
jo
scas
scas
push
push
adc
mov
test
push
xor
mov
ds
enter
cmp
rcl
mov
test
sub
add
shr
hlt
and
push
rolb
and
test
popf
or
inc
jmp
repz
mov
jg
movsb
sahf
in
mov
ja
pop
je
arpl
enter
lahf
push
in
pop
xchg
movsb
sti
dec
mov
inc
cmp
call
jmp
sbb
mov
adcl
sti
pusha
jo
in
mov
insl
mov
jbe
sbb
add
je
jne
je
nop
mov
in
insl
fs
sbb
leave
push
adc
pop
inc
gs
push
xor
sub
or
in
sbb
jmp
pop
jnp
adc
inc
popa
in
mov
rcrb
loop
lds
cmp
mov
es
sub
sti
in
decb
stos
inc
mov
xchg
pop
insb
and
inc
mov
jge
cld
mov
inc
hlt
fsubl
clc
fcmovb
mov
jge
lea
jl
pop
sbb
mov
rolb
enter
addl
cwtl
pop
jmp
lds
cmovp
push
mov
dec
loopne
stos
cmp
push
movsl
push
cmc
mov
out
shll
addr16
cwtl
mov
jmp
mov
adc
jl
xlat
fmull
add
in
mov
filds
ds
imul
shlb
fs
ds
pop
sbb
scas
xor
add
mov
das
sbb
push
shlb
mov
mov
jae
xor
cli
jne
ljmp
xor
cmp
sbb
pushf
mov
add
jp
int3
push
stos
and
out
sub
sbb
pusha
jmp
mov
inc
adc
rcrl
jge
jo
mov
sti
xor
mov
lods
xchg
inc
mov
ja
in
mov
fs
mov
mov
mov
mov
sub
fs
scas
inc
pop
mov
jl
inc
push
bound
stos
add
mov
jmp
dec
clc
ficomps
xchg
aas
jp
daa
inc
cld
adc
jnp
cmc
js
nop
jno
je
jno
or
outsw
lods
mov
mov
aas
pop
jmp
dec
sbb
pusha
cmp
xchg
dec
enter
imul
rorb
call
rorb
push
fcompl
orl
mov
pop
lcall
js
iret
xor
negl
sub
mov
mov
xlat
cmp
imul
inc
dec
test
pop
push
jbe
jmp
jmp
lea
sub
jae
bound
xor
je
inc
pop
bound
cmp
test
xor
lods
inc
jmp
lea
jl
mov
dec
aad
mov
sub
cmp
lret
xlat
cmp
mov
popa
mov
sti
jns
lcall
pop
sub
lea
push
jecxz
scas
xchg
dec
add
lret
cmpsl
push
mov
test
or
push
movsb
loop
clc
push
lret
mov
in
lret
testl
iret
pop
cwtl
je
js
mov
inc
mov
dec
mov
add
fwait
je
dec
arpl
mov
xor
mov
add
mov
call
xor
mov
popa
mov
lcall
sub
jb
shl
sahf
pop
inc
lods
add
mov
sbb
or
push
xor
push
pop
jle
xor
mov
pop
xchg
cmp
add
or
mov
aam
mov
add
imul
fld
loop
jle
xor
xor
inc
cmp
adc
clc
nop
xchg
ds
jecxz
pop
sub
fbstp
loope
xchg
loopne
aas
je
shll
insl
and
or
jb
sub
mov
rorb
divl
sub
push
push
dec
inc
dec
xchg
sbb
or
pop
les
fcoms
sti
div
xor
mov
dec
lea
insb
sub
jmp
insl
add
cmp
sbb
add
cmpb
repnz
sahf
inc
and
dec
pop
mov
lahf
mov
pop
jecxz
lret
mov
or
xchg
xchg
cmpsb
jbe
pusha
ljmp
in
pop
and
imulb
fbld
and
push
cmpsl
mov
iret
cmpsl
test
movsb
push
mov
sub
data16
stos
pop
pop
aas
jb
add
pop
enter
jno
xor
fnop
jne
out
pusha
popa
nop
jge
popf
hlt
sbb
addr16
repz
fstpt
jl
pop
and
arpl
or
inc
ret
sbb
shl
mov
sbb
clc
pop
pop
test
imul
mov
dec
sub
mov
push
and
ret
jne
inc
mov
cld
sub
xchg
movsl
stos
xor
rorb
insl
loope
xchg
icebp
rcr
adc
mov
repz
xlat
std
mov
das
mov
xchg
xor
enter
cmp
jp
or
aam
fisubrs
mov
pop
int
push
aaa
fldt
jecxz
cmp
lods
mov
inc
inc
dec
add
and
sub
pop
fmulp
xlat
push
xor
out
scas
iret
daa
pop
and
gs
adc
sbb
cmp
cmp
add
pop
shll
pop
adc
test
adc
mov
jg
xchg
jno
cmpsb
lock
xchg
and
jle
or
subb
inc
dec
xor
mov
out
fwait
mov
push
pusha
or
adc
xchg
xor
or
push
dec
fiaddl
mov
popf
jmp
pop
add
xchg
aad
in
mov
push
es
cmp
pop
push
pop
call
pop
sahf
popf
pop
js
leave
test
dec
xor
aaa
std
mov
xchg
sub
sahf
dec
out
mov
aaa
test
insl
fadds
sbb
jno
lods
lods
xchg
int
addl
adc
jecxz
mov
lock
clc
jecxz
stos
push
stos
mov
in
fwait
push
sbb
stc
mov
jbe
add
push
lds
mov
xor
or
ret
mov
repnz
dec
sarb
aas
sarb
loopne
sti
mov
mov
sub
ja
xchg
inc
das
cmc
lock
clc
or
dec
aaa
pop
pushf
lret
sub
lods
imul
in
cmp
push
and
dec
cmc
lods
pop
xor
test
push
movsl
ljmp
mov
adcl
sbb
pop
outsb
sahf
gs
mov
call
int3
xor
sub
add
push
dec
repnz
cld
jp
push
dec
shrb
pop
fidivrl
aaa
jecxz
xchg
fildll
pop
pop
lahf
xchg
dec
pop
pop
jmp
lcall
inc
dec
sub
or
xor
jmp
fnstcw
call
in
mov
insb
out
jns
mov
mov
in
movsb
pusha
fmulp
enter
jo
loope
jle
loopne
add
fwait
sbb
pop
sub
or
nop
les
cmpsb
mov
lcall
jae
loop
sbbb
bound
mov
sti
pop
or
push
sbb
les
int
adc
xchg
mov
push
cld
or
mov
jecxz
mov
out
sub
lods
rolb
pop
dec
xchg
cmpsb
fisttpl
sbb
mov
shr
out
and
rorl
ret
or
sbb
mov
outsl
fbstp
xchg
iret
scas
iret
popa
cmp
add
mov
cmp
lret
mov
push
sahf
and
sub
xchg
cwtl
mov
sbb
mov
add
push
cwtl
jae
sub
or
mov
insb
js
xor
and
jg
pop
cmp
pushfw
aam
mov
adc
and
push
pushf
jae
xor
int
arpl
int3
add
test
ja
leave
sti
call
mov
rorl
inc
sub
icebp
cltd
pop
pop
int3
ret
mov
mov
ja
jbe
ss
xchg
dec
sti
int3
cmc
fnstenv
jmp
mov
xchg
movsl
aaa
cmp
inc
mov
or
pop
flds
sub
mov
or
jo
xor
dec
sub
inc
int
or
mov
fbld
xor
je
not
and
mov
faddp
aaa
enter
adc
jle
xchg
adc
shll
fcmovbe
mov
out
inc
jb
pop
rcr
in
xlat
xor
lcall
popf
adc
push
mov
pop
push
fbstp
lods
inc
imulb
div
enter
les
xchg
fldl
pushl
sub
jp
cmp
hlt
xchg
loop
jp
std
and
lret
data16
mov
daa
clc
cmp
push
clc
loopne
outsb
jl
sub
or
sbb
scas
sti
sbb
call
imul
fimuls
mov
ljmp
cmp
test
jmp
add
out
sub
jb
xor
in
aas
mov
push
mov
lea
jo
xchg
xor
fdivrl
sbb
fldt
and
loope
jg
arpl
push
test
js
push
ds
movsb
test
and
mov
dec
loop
int
les
push
loop
and
cwtl
or
gs
jecxz
jbe
pop
icebp
xchg
sub
sbb
js
dec
and
adc
lock
push
mov
lahf
push
inc
inc
jmp
lea
insb
push
lahf
jne
les
push
mov
and
pop
sbb
bnd
loopne
push
or
adc
in
mov
cmp
sbb
push
push
xor
inc
xor
ja
xchg
insl
aaa
adc
ret
or
dec
jg
cmc
dec
cltd
adc
jae
mov
push
adc
scas
loopne
mov
imul
add
inc
rcll
fcmovnu
subl
filds
jl
and
ljmp
cmp
leave
and
xchg
xchg
mov
int
cmp
xchg
or
movsl
lods
pop
lret
and
hlt
aad
adc
cmp
push
or
cwtl
dec
into
notb
ja
out
addr16
or
mov
mov
pop
xchg
sahf
adc
and
mov
cmp
daa
jmp
pop
cmpsb
orl
pop
shrb
scas
or
fnstcw
xor
mov
arpl
inc
stos
das
jle
or
stc
sbb
cmpsb
add
xchg
jns
sub
sbb
cmc
sub
add
mov
adc
cmp
cmp
fisubrl
cmp
pushf
out
mov
cmpsb
rcl
cmp
cmp
movsl
mov
dec
pusha
insb
cmpsl
in
mov
xor
rcl
sub
pop
push
xchg
clc
mov
lret
sbb
xchg
dec
jl
xor
add
int3
ret
cld
adc
mov
sub
sub
mov
mov
aad
jle
mov
pop
xchg
loope
mov
push
dec
test
aas
dec
std
sub
and
push
hlt
mov
dec
lahf
stc
dec
inc
adc
or
xorl
cmc
mov
aad
lea
in
jnp
lea
xor
xor
cmc
outsl
add
jecxz
mov
mov
or
stos
cli
out
xchg
xor
cmpsb
and
outsb
aas
mov
and
out
adc
xchg
push
ret
mov
inc
aas
nopl
add
and
stos
sbb
push
sahf
xor
dec
int
mov
sbb
mov
jp
scas
push
les
fstps
pushf
mov
test
cltd
mov
xchg
js
xor
lea
mov
sub
jecxz
jns
call
lahf
mov
lcall
mov
inc
jns
outsb
adc
sahf
call
dec
cltd
je
mov
cmp
push
out
test
fsubl
rol
sahf
push
insl
mov
push
fadd
sbb
sub
mov
mov
sbb
testl
out
arpl
ficomps
outsl
call
cmpsl
push
xchg
pop
add
into
and
adc
imul
jne
add
sahf
es
sub
sbb
ds
cmp
hlt
test
sub
jnp
pop
fcmovbe
rorb
mov
inc
in
test
jno
and
push
xchg
or
jp
xchg
clc
shrb
mov
cmpsb
out
popf
mov
mov
pop
clc
mov
mov
cwtl
inc
or
mov
pop
sbb
mov
shll
rorb
lahf
leave
negb
sub
mov
lret
pop
jmp
fisttpl
in
mov
xor
push
xchg
xchg
jne
cmp
fiadds
in
inc
jae
mov
subb
cwtl
jl
push
das
push
pusha
popf
sub
dec
movsb
mov
pop
push
inc
dec
add
mov
outsl
testl
push
adc
out
lcall
push
sbb
jp
sbb
aad
shr
lods
jp
xor
aaa
mov
insb
sbbb
sub
jecxz
lret
mov
jb
or
sub
sub
jae
mov
out
movl
pushf
or
dec
mov
mov
repz
in
out
shll
shl
mov
lods
dec
negl
mov
test
cli
aas
push
daa
add
add
xchg
add
adc
les
cmp
mov
adc
shr
fwait
aad
xchg
loope
cltd
int3
mov
cmp
pop
or
pop
mov
xor
imul
cmp
mov
adc
adc
je
nop
xchg
add
jg
push
popa
lods
mov
push
rcl
and
test
pop
idivl
pusha
dec
push
das
and
test
daa
repnz
xor
lret
es
sbb
mov
mov
in
pushf
push
jmp
xacquire
std
jmp
repnz
mov
fdivrs
out
roll
lock
out
mov
or
ss
inc
imul
test
mov
lret
inc
xor
dec
stos
inc
cmpsl
xor
dec
daa
lock
add
lds
mov
add
sbb
xor
inc
push
mov
ja
xchg
dec
xlat
mov
repnz
push
pop
shll
inc
xchg
adc
jo
push
jno
mov
mov
in
or
cmpsb
jmp
ret
jb
paddb
and
ja
mov
xchg
lock
mov
xor
test
or
jns
push
lcall
bound
jle
and
mov
inc
mov
cmp
movsb
adc
ljmp
xchg
sub
fimull
pusha
incl
out
xchg
sub
jl
test
cs
sub
imul
mov
nop
pop
inc
dec
mov
push
movl
in
cmp
inc
push
daa
pop
push
faddl
xlat
das
xchg
jne
aaa
mov
lcall
mov
adc
icebp
testl
sub
test
lods
in
orb
popa
inc
or
push
xchg
jb
cmp
dec
xor
rcr
in
sbb
sbb
mov
pop
iret
fbld
xlat
dec
test
lods
outsb
addb
data16
or
inc
jbe
shll
test
or
xor
xchg
pusha
ds
jbe
mov
mov
lock
lods
add
mov
xchg
xor
mov
mov
std
sbb
test
or
mov
enter
and
data16
hlt
push
pop
pop
mov
cmpsl
icebp
sahf
cs
frstor
or
dec
push
fdivl
push
push
mov
mov
stc
jg
adc
test
sti
cs
cmp
push
xor
popa
cmc
jns
outsl
xchg
nop
push
sbb
sbb
nop
mov
in
rcrl
push
fdivr
cmp
inc
jae
repz
lods
scas
jg
push
insl
mov
mov
sub
test
fcmovbe
mov
call
pop
inc
sbb
pop
dec
addr16
scas
adc
adc
cmpb
add
or
mov
icebp
scas
and
cmp
fisubrl
pop
shlb
lret
sti
sbb
mov
and
jae
mov
pop
ss
das
xor
sbb
sub
add
mov
sbb
add
icebp
js
out
ds
mov
sbb
and
and
ljmp
iret
lret
sbb
movsb
mov
stos
cmp
clc
jns
mov
in
sbb
or
cmpsb
mov
mov
push
mov
aaa
out
push
test
mov
jmp
cmp
push
sub
mov
mov
adc
add
aam
lret
data16
shlb
lahf
ret
fwait
das
cmp
mov
sub
dec
cwtl
sbb
or
ja
bound
call
cmp
jb
cmpb
xor
jo
mov
repnz
push
or
sub
js
adc
repnz
sahf
cli
popa
out
sbb
jmp
cwtl
xchg
in
call
cmp
addr16
sub
jbe
into
in
mov
lock
add
cwtl
mov
jns
push
scas
andl
lcall
and
dec
jg
xchg
rcll
bound
shll
imul
fsts
notl
aas
xchg
sub
xor
orl
jnp
insb
jb
insl
int3
out
rol
lret
gs
jno
popf
and
mov
mov
mov
cmc
mov
js
xor
jecxz
cmc
ret
sub
or
or
jb
cmp
dec
add
sub
jbe
cmpsb
xchg
int
mov
fnsave
imul
pop
adc
push
fiaddl
call
in
inc
in
fprem
xor
and
inc
or
jmp
decb
sbb
cmp
int3
filds
rorl
add
mov
adc
loop
shlb
push
and
mov
aas
test
stos
inc
js
loope
aam
lret
mov
in
and
iret
mov
xor
out
xchg
fwait
dec
lret
stos
repz
xorl
int
leave
push
pop
ds
mov
push
rep
inc
outsl
out
and
jecxz
push
fisttpll
test
cwtl
push
popa
fisttpll
setbe
dec
cmp
sub
push
mov
inc
jmp
subb
shlb
push
sub
xlat
add
in
test
or
xlat
sub
jbe
xor
add
push
mov
cs
fisubs
out
mov
sbb
mov
aaa
or
call
mov
mov
add
lret
lea
add
inc
jle
stos
movsb
lret
sub
push
dec
and
jo
les
cli
add
xor
in
pushf
lret
popf
out
movsl
push
sbb
jl
xchg
popa
mov
jmp
cwtl
inc
push
pushf
aas
add
ficompl
xchg
nop
cld
inc
pop
pusha
mov
adc
les
mov
loope
xchg
stc
inc
and
in
mov
or
jle
inc
loopne
enter
dec
xchg
sub
mov
push
mov
test
pop
inc
sub
fwait
inc
xchg
out
mov
test
push
jns
mov
adc
mov
cmp
lock
mov
sbb
sbb
adc
mov
orl
aam
pop
int
les
iret
and
or
enter
cmp
daa
fsub
xchg
pushf
imul
push
mov
xchg
rorb
xor
in
ljmp
inc
jp
pop
jnp
popa
fisubs
pop
fidivrl
hlt
mov
lahf
scas
in
push
test
xor
dec
push
repz
into
cli
adc
stos
int3
lea
popa
fnstcw
mov
inc
xorl
push
adc
inc
mov
cmpsb
ret
out
fiaddl
push
push
popa
aaa
or
and
adc
ja
addr16
add
mov
dec
imull
jo
lds
mov
out
and
mov
jb
imul
scas
repz
push
adc
and
imull
insb
sub
add
jg
mov
cs
sarl
add
mov
or
xchg
xchg
rolb
in
gs
pop
mov
cmp
mov
cs
dec
and
jp
out
push
sbb
aad
or
mov
ja
xchg
loop
lds
aam
clc
jl
mov
pop
add
sub
cmp
dec
inc
popa
dec
inc
push
stc
fsubrs
push
mov
adc
dec
xor
rcrl
add
es
lds
jae
sarl
and
add
push
xchg
push
and
orl
test
and
inc
xchg
sub
int3
fisubs
push
mov
shll
scas
mov
xchg
mov
sub
repnz
sahf
test
les
pop
pop
and
std
dec
pop
les
stc
and
addl
add
cli
push
xor
push
bound
negl
mov
sub
cmc
int3
into
in
mov
and
mov
stos
xor
movsb
loope
jne
loope
nop
das
jle
in
std
outsl
dec
add
jecxz
out
or
push
xchg
jo
jge
sahf
movsb
push
dec
call
mov
bound
lock
loope
sbb
dec
push
fildl
xor
shrb
ja
enter
fisttpll
pop
lcall
jmp
push
jno
cli
sub
push
and
and
lret
adc
cmp
stc
pop
rclb
sbb
ret
test
lods
and
lcall
in
xorb
xchg
jns
adc
mov
nop
pop
int
sbbl
cmp
add
fists
test
dec
mov
jg
jnp
out
adc
push
lret
xchg
pushf
push
add
cmp
fisubrs
push
push
mov
or
xchg
and
mov
pop
sub
sti
stos
or
or
cltd
or
cmp
inc
loopne
sbb
and
jecxz
cmp
enter
lods
in
aas
pop
into
pop
dec
adc
pushl
je
mov
stos
or
add
iret
sti
or
popf
xchg
push
add
jno
cltd
andl
add
ds
fdivrl
gs
imulb
mov
lret
xchg
repnz
inc
jnp
sti
mov
arpl
and
ja
fwait
in
insb
sub
jg
sub
mov
mull
scas
push
ret
jmp
testl
icebp
rcll
daa
xor
mov
inc
stc
sub
sub
les
sti
ret
divl
pop
je
clc
outsb
inc
js
jmp
and
inc
movsl
inc
push
or
fld
insl
push
or
xchg
test
int3
jne
cmpsl
mov
lret
jnp
mov
or
scas
ja
mov
jl
add
xorl
movsb
mov
mov
nop
or
push
push
test
addr16
test
pop
xor
and
in
test
int
ret
inc
jmp
push
mov
arpl
push
mov
stc
addr16
rcrb
lea
jmp
fistps
push
jg
sub
insl
into
inc
loope
cld
daa
rcl
ss
fmul
ljmp
jno
pop
lea
cmpsl
dec
shl
or
inc
loopne
or
nop
cmp
lods
dec
add
and
sbbl
adc
cmp
inc
sub
jle
push
pop
shl
xchg
int3
push
jmp
in
hlt
sub
cmpsb
les
movsb
test
push
sub
push
stos
add
aaa
cwtl
mov
and
adc
sti
shl
mov
mov
inc
imul
iret
jl
gs
sub
mov
insb
sbb
pop
sub
aam
or
xor
xor
mov
std
or
incb
loop
adc
mov
dec
shll
sbb
jle
pop
cmp
add
adc
inc
mov
cs
lcall
cltd
jp
in
arpl
pop
inc
lea
push
xor
nop
mov
mov
ja
daa
xchg
dec
mov
movsl
fdivrl
loopne
dec
jp
ss
scas
or
sbb
mov
adc
imul
pop
ss
outsb
fnstsw
fs
pop
cmp
lret
jmp
mov
and
xchg
out
pop
mov
mov
movaps
repnz
movsb
xchg
push
or
test
pop
jnp
mov
add
ret
sbb
add
mov
push
pop
ljmp
pushf
add
ja
mov
xchg
jbe
iret
xchg
leave
jo
xor
sbb
out
in
jo
dec
insl
adc
xchg
inc
dec
in
int3
daa
hlt
gs
mov
scas
cmp
pop
adc
mov
cmp
aam
inc
pop
subl
jg
jnp
mov
aam
div
fistps
shl
or
dec
lds
inc
sbb
xchg
scas
mov
push
or
cs
xchg
jno
sub
ja
sub
idiv
push
jo
mov
sub
sub
cltd
or
leave
push
inc
std
in
scas
inc
popa
aas
or
scas
ja
shl
xchg
fnsave
pushf
push
adc
mov
xchg
fsubrp
out
cld
adc
jmp
fiaddl
gs
lret
mov
dec
xchg
jne
ficoml
test
xor
in
enter
pop
loopne
je
repz
push
into
ss
ret
js
lods
sti
jle
outsb
or
and
push
dec
pop
adc
movsb
ret
daa
fxch
rcrl
cmp
pop
sub
iret
inc
and
rcll
xor
jae
pop
stos
pop
call
in
ljmp
shl
int3
out
inc
pop
adc
mov
push
insb
subb
pusha
std
mov
daa
jmp
sti
popa
or
stos
jbe
sbb
lret
in
fldt
inc
int
aaa
sub
inc
cmc
jae
pop
and
jo
push
outsb
test
xor
mov
mov
adc
push
or
notl
sbb
lcall
repnz
roll
mov
cmp
and
jp
push
mov
andb
pxor
jp
inc
in
lcall
movsl
mov
negb
dec
inc
add
ljmp
stos
jge
mov
insb
pop
dec
sbb
js
insb
loop
pop
shll
stos
adc
push
jo
dec
in
mov
mov
in
push
pop
nop
sarl
dec
xchg
xchg
loopne
mov
shll
ficompl
ja
mov
adc
stos
test
imul
add
push
andb
ja
xchg
jle
icebp
mov
mov
insl
dec
lods
fwait
test
xor
push
lock
test
inc
mov
and
dec
ja
adc
das
lret
pop
loopne
pop
jmp
sub
int3
and
fldt
mov
dec
insb
cmp
mov
stos
lret
mov
fcoml
jecxz
jo
mov
add
mov
mov
and
push
adc
dec
sbbb
fstpl
jae
popf
xor
fucomi
ds
sbb
pop
xor
ficompl
clts
sub
inc
ret
xchg
and
dec
pusha
mov
ds
fbld
xor
fcompl
aad
mov
es
pop
add
int3
and
mov
push
lret
aas
add
negl
int3
insb
jns
cmp
rcll
aam
aas
ret
arpl
int
lret
adc
scas
push
pop
mov
rsm
fs
pop
adc
and
repz
jmp
xor
push
jmp
popa
fs
test
ds
es
pop
push
xchg
outsb
pop
cmp
lods
nop
sbb
fimull
popf
notl
add
jge
dec
stos
push
clc
mov
push
jg
cld
scas
inc
jecxz
imul
jno
fs
notb
shlb
fdivl
or
add
xchg
cld
push
stos
mov
sbbb
int
mov
in
push
jecxz
mov
cwtl
jae
mov
cwtl
fimuls
mov
mov
lahf
xor
xchg
setge
in
adc
fdivrl
ljmp
xor
stos
into
adc
jp
ljmp
daa
ret
jle
outsb
mov
xchg
or
addr16
out
iret
mov
stos
enter
inc
xor
push
sub
cld
jecxz
loope
inc
stos
sbb
adc
rcll
out
aad
aad
push
inc
andl
mov
push
je
flds
test
cmpsl
add
mov
out
mov
in
fs
fsubrl
mov
mov
fmuls
enter
sbb
xchg
das
in
rcr
sub
xchg
cli
aas
lds
int
outsb
insb
jmp
mov
bndstx
filds
push
xchg
mov
and
leave
shl
cli
in
mov
sbb
sbb
lahf
fldenv
icebp
and
mov
aad
add
jp
sti
jmp
or
int3
ror
xchg
pushf
loopne
xor
fs
adc
mov
iret
mov
push
loop
mov
sub
add
add
lcall
outsl
dec
cmp
xchg
add
dec
cli
pmaxsw
and
lahf
hlt
test
sub
dec
jb
cmp
cmpsb
lock
sbb
lret
popf
popf
aad
sub
cmp
arpl
in
jle
lds
ret
xor
cltd
out
shlb
loopne
push
roll
lods
out
das
sub
inc
imul
outsl
inc
stos
test
push
outsl
or
jle
pop
xorb
stos
stc
dec
stos
in
lock
xor
loopne
jp
inc
fsubrl
sbb
sub
insb
or
pop
rcrb
std
sub
cmpsl
adc
mov
insl
mov
int3
in
pop
push
mov
stos
jbe
ds
mov
or
sarl
xor
fldt
hlt
jo
data16
inc
add
pop
daa
sbb
mov
adc
test
and
call
jmp
jae
test
mov
fcmovb
aam
add
adc
pop
movsl
lea
xchg
mov
mov
xchg
lret
out
test
jae
pushaw
sub
inc
push
fwait
jle
pop
aas
call
and
jns
mov
push
dec
gs
lret
xor
xor
aaa
mov
out
push
mov
xor
out
dec
pop
rclb
and
ret
jo
cmp
xchg
fldln2
dec
std
cmc
cmp
mov
or
adc
in
shrb
sahf
lock
mov
inc
loop
aad
lds
xchg
pop
popa
rcll
mov
jmp
dec
inc
or
addr16
lock
sub
scas
mov
test
inc
xor
sub
xchg
lcall
sbb
ja
lock
js
push
lods
hlt
dec
adc
xchg
scas
inc
or
dec
repnz
cmpsl
or
jmp
fstl
cmp
push
push
mov
ja
and
neg
mov
mov
test
int
mov
stc
jl
fistps
stc
arpl
cwtl
adc
nop
dec
mov
and
data16
call
lahf
clc
xchg
int
test
push
repz
sbb
clc
mov
cltd
xchg
or
int3
push
sbb
lahf
and
inc
mov
dec
cmpsl
jbe
out
pop
fs
mov
lock
push
xchg
xchg
or
out
xor
mov
loopne
push
aam
fildll
int3
jns
pop
inc
xchg
inc
lea
inc
sti
arpl
jle
rolb
lods
cmpsb
lods
pop
ljmp
scas
or
push
push
sub
jle
shl
cmpl
mov
and
movsb
ret
mov
icebp
xchg
shl
mov
sbb
mov
daa
xchg
mov
jle
outsl
push
hlt
or
cwtl
fdivrl
push
push
pusha
dec
addr16
cwtl
aaa
fildll
insb
cmc
test
repnz
and
ja
adc
stos
popf
fwait
mov
and
mov
xor
dec
sub
ret
mov
lock
pop
mov
push
std
mov
and
mov
lcall
ret
ret
in
inc
dec
sub
adc
sub
sahf
mov
shrl
sub
daa
mov
adc
and
push
inc
je
hlt
sbb
sub
cli
ficompl
jo
xor
enter
mov
fildl
mov
dec
daa
xchg
xor
or
jne
xchg
mov
shl
mov
xchg
inc
test
mov
push
cmp
punpckhdq
mov
dec
popa
fistl
mov
lock
pop
push
cmp
and
into
or
dec
pushaw
mov
cmpsb
dec
iret
jg
sbb
or
sbb
jo
je
or
movsl
mov
adcb
fldt
add
gs
scas
aas
adc
jne
stos
dec
xchg
shlb
repnz
cs
add
insl
push
insb
ficomps
mov
iret
cmpsl
movsl
dec
icebp
cmp
insl
and
mov
clc
inc
rcrl
dec
dec
jp
test
push
mov
fldcw
outsb
popa
iret
sub
es
or
mov
out
sbb
jle
xchg
imul
jmp
dec
push
movsb
hlt
add
mov
dec
or
jnp
xchg
jle
inc
pop
push
cmp
mov
cs
mov
lahf
aas
sub
call
popa
mov
ret
mov
or
jmp
add
adc
or
or
insb
dec
jnp
fcompl
push
getsec
int3
in
push
decb
ret
xchg
jle
fdivrs
adc
imul
ret
jbe
mov
or
jecxz
rep
pop
fs
add
mov
movsl
adc
xchg
clc
xchg
test
jnp
and
test
push
aas
into
mov
pop
imull
jne
cmpsl
in
push
cmc
xchg
imul
add
test
add
xchg
ja
iret
adc
es
das
dec
shlb
leave
repnz
test
mov
push
ds
mov
bound
pop
dec
and
stc
dec
clc
inc
adc
fcoms
pop
mov
mov
wbinvd
mov
or
or
in
mov
outsl
cmp
pop
sbb
cmp
mov
mov
xor
ds
cltd
call
jno
dec
jecxz
cmp
sub
and
inc
mov
in
sub
cltd
inc
cmp
xorl
out
dec
insl
es
jnp
jl
dec
mov
mov
lahf
mov
mov
push
adc
xchg
aad
jle
inc
fwait
loop
pop
jge
jae
jb
jl
sahf
ss
data16
bound
test
mov
subl
sub
out
and
push
ret
cmp
enter
dec
ficomps
push
aad
xor
cmp
inc
cwtl
lods
mov
mov
mov
xor
push
mov
xchg
ss
push
out
imul
je
pop
data16
out
adc
mov
aad
dec
idivb
pusha
sbb
rclb
dec
jge
mov
insl
mov
shl
mov
pusha
fnsave
xchg
sbb
data16
cmp
stos
push
gs
mov
shrb
jno
mov
sarb
jae
jae
int
fadds
cmpsb
std
icebp
lds
aad
das
sbb
jnp
cwtl
stos
or
push
push
sub
inc
sub
mov
cltd
cmp
outsl
sarl
lea
lahf
stos
or
in
call
cmp
testl
stc
jns
jge
repz
stos
jg
aas
jo
push
mov
scas
sbb
mov
call
lea
mov
jo
test
jbe
out
sbb
int
dec
shll
push
popa
mov
or
jle
and
mov
cwtl
data16
repz
mov
insb
les
insl
dec
cmp
mov
incb
dec
gs
xchg
stos
data16
ds
dec
fisttpl
push
add
aam
inc
push
add
mov
inc
mov
bound
sbb
rcrl
xchg
popa
dec
inc
das
int
jns
xor
ljmp
jo
dec
movntq
mov
xchg
lcall
imul
fwait
jl
push
insb
mov
jns
stos
sub
popf
push
pop
je
fstp
dec
xor
ficoml
jns
incb
mov
inc
dec
cmpsl
loop
out
sub
mov
jno
nop
xchg
push
jbe
addr16
adc
adc
sub
rcrb
lcall
shll
push
imulb
push
mov
subl
js
push
ret
imul
xchg
jno
jge
pop
add
cmp
popa
and
aaa
shll
add
dec
jnp
cmp
arpl
mov
mov
or
fsubrs
fimuls
xchg
mov
jo
jl
jg
enter
xchg
testl
pop
push
dec
and
cltd
and
sbb
cli
cmp
adc
add
out
bound
hlt
mov
fiaddl
cmp
push
seta
fildll
or
cmp
jg
jnp
xchg
fsubl
inc
and
icebp
jmp
andl
dec
and
jns
mov
pop
in
pop
adc
dec
pop
xchg
push
pop
sar
loopne
mov
inc
loopne
and
adc
inc
mov
mov
mov
test
ret
in
sarl
push
mov
dec
icebp
add
shll
mov
int
lea
inc
cmp
test
arpl
cli
int3
sub
mov
sub
and
pop
push
xor
xchg
push
in
cmp
addb
aaa
push
repz
push
jmp
leave
mov
add
dec
and
sar
test
sub
and
inc
xor
pop
xor
stos
xor
and
and
inc
dec
cmp
out
addr16
pop
fwait
push
aad
cli
mov
jp
mov
js
jmp
ljmp
mov
scas
xchg
inc
dec
pop
cmpb
sub
mov
and
aam
mov
mov
jnp
xchg
inc
inc
in
mov
mov
jmp
push
or
add
fstl
or
or
cld
add
dec
test
nop
cld
pop
jne
cld
andl
aas
mov
pop
adc
or
lret
and
mov
imul
scas
loopne
outsb
sti
add
dec
inc
scas
dec
cmp
dec
adcl
inc
or
imul
lea
je
mov
mov
daa
std
pop
push
mov
test
jmp
add
lea
shr
xor
or
mov
sti
iret
loopne
pop
data16
jl
cmp
sbbl
sub
jno
mov
push
test
int
mov
fimull
mov
das
out
mov
mov
cli
xchg
mov
std
enter
sub
repnz
aam
scas
test
adc
push
xchg
rcl
push
sub
neg
sub
clc
push
movsb
mov
jmp
mov
mov
push
cmc
xor
mov
or
outsl
hlt
arpl
jnp
dec
pop
jne
cmp
andb
addb
clc
out
cmp
insb
sahf
pop
ret
adc
inc
dec
pop
adc
mov
sbb
out
mov
jno
nop
subl
dec
dec
jp
sub
in
dec
mov
aaa
jmp
and
stos
push
cmp
mov
out
and
cmc
shll
cmp
mov
sarb
add
int
jne,pn
into
mov
stc
and
jge
sar
cmp
pop
inc
aad
jns
test
mov
push
cwtl
lret
call
jl
scas
les
adc
adc
xchg
inc
pusha
push
insb
pop
mov
in
sbb
add
movl
xchg
imul
ljmp
insl
lods
repz
add
aaa
push
adc
imul
inc
sti
sub
out
adc
push
cli
hlt
test
fisubs
jmp
repz
jno
loope
adc
mov
push
ds
ret
xor
jecxz
mov
sbb
in
mov
cmp
js
rclb
jns
aaa
icebp
xor
test
out
or
lock
jp
es
mov
sub
jbe
cmp
test
jecxz
push
adc
cs
inc
cmp
pop
mov
fisubl
push
lods
adc
sub
cmp
jecxz
cmp
and
scas
push
inc
pop
adc
sbb
rclb
aam
notb
cltd
out
inc
mov
jl
mov
enter
insl
movsl
and
aas
or
cmc
scas
imul
pop
xor
mov
mov
mov
pop
daa
pop
adc
loope
pop
cld
or
sbb
xor
stos
inc
daa
loopne
std
and
testl
cmp
loope
push
mov
sub
inc
repnz
into
push
add
rcrl
pop
lahf
adc
cmp
cli
insl
sahf
dec
inc
test
push
lahf
xchg
lock
adc
mov
xor
adc
movb
lea
push
out
pop
and
mov
sbbb
ss
test
mov
xchg
sub
es
push
cmpsl
jecxz,pn
push
jb
dec
dec
ljmp
loop
mov
int3
test
outsb
out
lds
ficompl
fs
aas
jb
scas
ret
lods
jb
mov
stos
cmp
in
xchg
jge
loopne
roll
sub
push
popa
mov
xchg
push
js
rclb
mov
dec
ss
cmp
inc
xchg
flds
dec
mov
push
mov
ja
dec
dec
lods
xor
enter
add
mov
iret
cmp
popa
or
mov
or
xor
dec
das
fsts
test
fdivrs
cmp
jle
xchg
push
xor
adc
lds
sub
out
push
xor
filds
mov
addb
test
jo
cmpb
mov
sub
scas
inc
and
movsb
inc
mov
fwait
ds
out
cmp
adc
fwait
cmpsb
lret
mov
inc
into
je
movsb
aam
out
pop
lds
pmovmskb
jnp
fidivrs
push
mov
add
arpl
xor
cmp
adc
adc
hlt
mov
jae
mov
jns
ss
cmp
ficompl
ja
mov
fdiv
pusha
add
in
inc
aam
mov
dec
jb
pop
andb
lret
and
add
jle
jns
adc
push
jp
sub
inc
arpl
sbb
xor
mov
sub
cmpsl
pop
mov
adc
lcall
jg
mov
sub
xchg
mov
outsb
mov
into
outsl
addb
icebp
pop
js
pop
pop
jmp
aam
or
dec
adc
and
enter
and
js
cs
out
bound
jle
mov
mov
dec
dec
push
pusha
xchg
insl
sbb
inc
push
test
incb
jge
fmul
jg
fadds
daa
or
or
sub
pop
int3
push
pushf
mov
mov
data16
scas
movsl
and
fsubr
add
loope
mov
xchg
lahf
jae
outsb
aam
xchg
push
inc
repnz
mov
sti
pop
inc
or
pop
andl
cmp
xchg
cltd
mov
in
xchg
inc
stos
rorl
outsb
popf
mov
sub
pop
mov
inc
jl
dec
in
adc
out
push
jle
xor
adc
out
sub
push
je
and
mov
inc
add
inc
dec
push
cmp
mov
aaa
lock
sub
dec
jle
mov
xchg
or
mov
add
insl
or
mov
jns
sub
test
dec
and
loopne
and
rcll
mov
add
or
mov
adcl
inc
aaa
xor
sbbb
sbb
mov
subb
aas
jmp
dec
mov
frstor
pop
dec
jno
jno
ret
shlb
push
cmc
cs
andb
sbb
jle
cs
leave
sbb
in
loope
mov
jle
cmpsb
dec
jne
cmp
jb
testl
xlat
in
xor
jno
mov
adc
aaa
or
leave
scas
fadds
lret
ret
stos
mov
cmpsl
sahf
jns
enter
xor
jns
ret
mov
mov
jne
or
or
jge
pop
popf
movsl
mov
jmp
insl
incl
mov
jb
in
rolb
outsb
add
sub
mov
ss
in
cmp
xor
fimuls
mov
out
pop
in
mov
std
dec
lret
jge
mov
adc
ja
ss
jae
cmc
out
fstpl
xchg
fldt
pop
adc
rcl
pop
cmp
lock
verr
jne
aas
sbb
es
test
adc
or
icebp
mov
les
inc
jne
arpl
scas
jo
fsubl
hlt
inc
xchg
ja
testb
mov
icebp
xor
pusha
cmp
gs
jg
lret
cmc
xchg
movsb
mov
jg
inc
jb
adc
hlt
dec
sub
test
cmc
cltd
lcall
jle
mov
or
aaa
js
movsb
loopne
xchg
out
jl
imul
add
or
mov
push
imul
xor
arpl
add
xchg
inc
les
out
jo
lock
popf
lods
outsl
in
push
cmpsl
mov
stos
fld
cmp
aaa
xchg
out
outsl
mov
lds
jecxz
adc
fidivs
mov
mov
fisttpll
fbld
xchg
loop
adcl
inc
int
jmp
and
mov
or
jbe
fisubrl
push
inc
stc
jnp
cmp
pop
adc
push
clc
push
out
push
sbb
jmp
jne
dec
push
xchg
xor
cld
xor
frstor
inc
mov
and
insb
jmp
fdivrs
mov
cmp
ljmp
sbb
jns
add
incb
sbb
fisubrs
or
movsb
call
test
inc
mov
sbb
sarb
or
aad
call
imul
mov
ja
fcomps
outsl
lret
sbb
and
iret
push
daa
lahf
push
sbb
mov
inc
xor
js
push
mov
mov
sbb
and
jge
loop
push
dec
ret
fadds
xor
pop
adc
adc
imul
daa
mulb
mov
outsl
jecxz
hlt
lret
mov
stos
push
pop
sbb
lds
subb
mov
or
shlb
in
fstpt
jge
fldcw
loope
loopne
inc
ret
jb
addr16
out
jo
push
fsubrs
loope
lds
enter
enter
push
loopne
push
mov
int3
mov
aad
repz
pop
jae
jl
sub
xchg
sahf
pushf
iret
std
jl
sub
or
cwtl
sbb
xchg
lds
add
and
jo
mov
mov
push
idiv
cli
pop
rcrl
jne
or
insb
sub
into
cli
mov
jle
aam
les
push
xchg
xchg
cmpsb
sub
push
sar
or
mov
mov
mov
in
or
popa
loop
mov
push
xchg
mov
xor
call
and
xchg
mov
and
sub
icebp
dec
ret
fs
fildll
push
scas
push
mov
ja
xorb
in
jp
imul
cmpsb
xlat
ja
pop
mov
jo
dec
xchg
rorb
xlat
mov
out
cmp
repz
in
pop
repnz
adc
xchg
out
shl
imul
pop
cmp
enter
adcb
or
push
jl
sbb
jmp
cmp
push
pusha
push
call
and
push
push
out
push
nopl
xor
lret
imulb
add
xor
cmp
sahf
out
mov
mov
ds
inc
push
cs
pop
ret
pop
out
mov
ljmp
mov
adc
bound
ja
push
test
lret
es
mov
add
or
push
jb
pop
adc
loop
xor
daa
mov
pushf
jg
aas
inc
aam
jp
and
insb
xchg
jo
inc
rclb
jo
cmp
mov
sti
pushf
in
jge
cmpsb
outsb
fs
xchg
pop
test
cld
sub
dec
pusha
loop
stc
in
or
mov
pop
cmp
add
jnp
sti
cmp
in
js
cmp
mov
or
push
bound
pop
out
cwtl
data16
shll
lock
adc
fnsave
xchg
jge
out
mov
add
pushf
js
lds
xor
mov
pusha
mov
cmp
mov
insl
jge
ss
and
sub
xchg
or
adc
jo
pop
iret
push
je
lret
lds
dec
or
sub
out
scas
cmp
leave
jle
pop
cwtl
dec
iret
mov
pop
lds
inc
adcl
arpl
xor
test
ret
hlt
cmpsb
dec
sbb
test
jmp
stos
es
test
sub
push
cmp
mov
shrl
lods
iret
pop
xlat
leave
xchg
push
adc
mov
cmpsb
adc
gs
cmp
popa
sbb
ljmp
inc
inc
cli
xchg
pop
xchg
pop
jle
push
popf
cmp
mull
or
ss
jae
inc
mov
fimull
test
movsl
imul
xlat
out
pusha
ret
std
cmp
and
xchg
std
pushf
stos
decb
jbe
cmp
add
sbb
mov
popf
lea
mov
adc
cltd
in
sbb
xchg
jns
sbb
aad
fwait
nop
push
xor
push
call
rol
inc
jae
and
stos
push
adc
xchg
ret
adc
imul
adc
adc
adc
xor
stos
popa
test
and
ret
or
mov
mov
pop
add
jb
mov
pop
sbb
add
rorb
subw
orl
insl
ss
leave
iret
imul
sti
lahf
sbb
add
jo
mov
in
cmp
push
sti
out
je
scas
and
cmp
dec
imul
aaa
pusha
call
cwtl
push
push
fwait
enter
fidivrs
jmp
rorb
mov
dec
rorl
scas
pop
sar
ret
jns
fwait
aad
pop
int
fdivp
test
lret
movsl
mov
movsb
and
jl
mov
mov
fnstsw
sub
popf
cmp
jmp
mov
lods
jo
or
jo
xchg
aaa
and
popa
mov
insl
pop
mov
arpl
and
rorb
fsubr
ret
pop
sbb
pop
pop
pop
jb
jno
add
insb
inc
ret
cwtl
stc
test
cli
insl
push
mov
lods
fnstsw
mov
stc
loope
imul
push
out
mov
jecxz
cmp
pushf
cwtl
fsubrs
mov
pop
xchg
pop
js
js
xchg
and
cmpsb
lock
lods
add
lea
push
and
call
je
mov
imul
arpl
decl
je
cli
ja
fisubrs
push
lock
pop
js
test
fidivrl
mov
subb
push
and
mov
cmp
sbb
leave
sahf
add
int
dec
nop
cmp
enter
adcb
push
aaa
aad
sbb
shl
mov
movsbl
push
pop
into
fidivs
movsl
cld
in
mov
xor
or
xlat
or
dec
lea
jge
in
lea
call
aas
or
int
push
dec
mov
xor
mov
fdivrs
adc
fcoml
or
push
int
sti
inc
push
sbb
in
or
cmp
mov
lds
or
add
dec
xchg
jae
fidivrl
lea
xor
fldt
pop
dec
mov
lock
test
cwtl
jg
or
pushf
lcall
negl
fs
popw
imul
or
pop
or
xlat
mov
pop
inc
scas
cmp
add
inc
or
lods
cmp
daa
hlt
cmp
dec
mov
xor
imul
cmpsl
gs
mov
jns
pop
mov
jle
mov
repz
push
in
dec
pop
stc
mov
pop
popa
add
add
das
cmp
aam
fistl
jg
push
and
xor
ficoms
les
loope
fmull
pop
pop
rclb
pop
or
popf
sahf
mov
sbb
jge
mov
daa
stc
dec
and
xchg
cmp
fimuls
lret
or
popa
leave
xor
sub
lcall
pop
xchg
cmp
stos
dec
jae
icebp
leave
inc
scas
pop
out
and
sahf
mov
jo
test
enter
test
sbb
xor
push
fmulp
jne
call
and
pop
fdivrs
mov
xchg
lds
lahf
and
inc
mov
lods
xor
xchg
jo
mov
dec
mov
std
push
xor
mov
cltd
xchg
and
push
jae
aaa
jns
adc
sbb
insl
push
neg
lods
add
addr16
icebp
inc
sbbb
mov
in
inc
imul
outsl
jge
ficomps
les
cmc
setno
in
push
add
fmull
addr16
xchg
adc
and
inc
sahf
fsts
loop
and
por
dec
aaa
nop
inc
sbb
add
nop
js
adc
rcll
js
arpl
jp
adc
clc
mov
ficoms
outsb
sti
cli
icebp
mov
cmp
or
movsl
fcomi
jl
dec
mov
mov
mov
hlt
subb
push
inc
cmp
cli
adc
outsl
add
pop
cmpsb
and
inc
fisttps
xchg
sbb
and
lea
rcrl
jb
jb
shll
xchg
pop
aaa
lods
mov
dec
lret
cld
inc
loope
or
jmp
popa
fdivr
lds
sub
xor
out
mov
scas
jnp
cs
sarb
xor
xchg
pop
jmp
stos
mov
addr16
shll
xor
sub
addl
andb
dec
ret
in
insb
pusha
inc
push
adc
jno
mov
jo
xchg
or
bound
insb
mov
jle
imull
insl
and
pop
repnz
lea
lea
jno
push
cmp
adc
pop
lahf
test
pop
xor
lret
fwait
mov
pop
roll
nop
shl
or
sub
jmp
add
cmpsb
dec
pop
in
push
in
fnstenv
pushf
addr16
hlt
or
pushf
push
mov
and
sbb
pop
dec
pushf
add
mov
cs
into
int3
clc
sub
mov
cmp
cmpsb
dec
pop
inc
cwtl
or
das
fldl
lods
xor
rorl
mov
loopne
mulps
rcr
std
jmp
enter
shrl
out
jge
fmull
lahf
or
or
jge
aas
addb
mov
lods
inc
ret
lods
ja
mov
movb
adc
jl
jns
lahf
dec
imull
jnp
mov
subb
sub
fistpl
xchg
in
shll
cltd
ret
mov
push
sbb
loop
outsb
jg
fs
gs
or
dec
lock
mov
push
or
sbb
sub
dec
adcl
push
push
decb
clc
sbb
cmp
jo
jb
push
ljmp
in
test
fdivs
jae
in
cmpl
jecxz
out
inc
jmp
fs
out
mov
adc
rolb
sub
test
rolb
mov
pusha
inc
ds
add
test
push
xchg
addr16
bound
outsl
lret
sub
clc
xor
fwait
aad
ja
push
xchg
lcall
push
sbb
ljmp
add
inc
push
xor
icebp
cmp
jns
out
imul
pop
clc
mov
or
and
add
mov
aas
leave
mov
das
xchg
pop
and
fidivrl
xor
ljmp
push
addr16
pop
lods
mov
in
mov
sub
jecxz
xlat
pop
xchg
and
push
inc
sub
jmp
dec
push
mov
pop
push
inc
loop
push
aam
imul
outsl
pushf
faddl
push
or
adc
inc
scas
mov
or
sahf
movsl
mov
out
xlat
ja
mov
addr16
or
fdivs
or
cmpsb
push
pop
add
outsl
add
hlt
add
in
or
xchg
notl
enter
cmp
inc
pop
call
les
add
insb
pop
leave
cmp
sub
lahf
inc
iret
mov
or
sbb
inc
bound
or
fsub
push
mov
pusha
jnp
lcall
mov
xlat
pop
cmp
cmp
dec
push
pop
aad
into
orl
jmp
sbb
test
dec
rcrl
push
mov
xor
iret
cmp
daa
cmp
sarl
loopne
mov
sbb
data16
sub
leave
dec
mov
cmp
pop
jo
mov
aad
lds
jge
stos
xchg
bound
cmpb
jne
in
fmuls
popa
insb
out
aas
inc
iret
enter
sbb
cs
jo
lods
pop
mov
stos
aam
xchg
aad
dec
xor
and
xor
aad
inc
push
fbld
jb
xor
in
mov
int
sbb
shrb
adc
push
sbb
jo,pt
adc
cmc
dec
fisttpll
aam
jl
push
in
call
dec
xchg
sbb
leave
in
orb
jae
fimuls
adc
mov
mov
jle
stos
lock
in
jae
addr16
int
sti
iret
aaa
pop
enter
cld
pushf
cmp
mov
movsl
sti
addr16
pop
sbb
outsl
int
xchg
loop
pop
cmp
movsl
imul
imul
xor
cmp
je
ljmp
bound
loopne
ret
cmpsl
mov
into
pop
cmp
mov
lods
and
sbb
cmp
pop
lds
hlt
call
cmp
sbb
sub
inc
mov
pop
sub
xlat
aam
insl
pop
push
std
ficoms
hlt
sahf
sub
scas
lods
stos
sbb
std
adc
dec
fidivs
jecxz
int
cld
xor
lahf
hlt
and
xchg
or
and
dec
sub
cmc
sbb
hlt
cmc
out
and
movb
adc
movsl
mov
mov
pop
jmp
pop
fisttpll
in
cmc
mov
xchg
hlt
andb
jmp
and
jecxz
fdivrs
or
dec
lret
xchg
ljmp
fimuls
cmp
gs
sbb
sbb
sub
enter
adc
cvtps2pi
sbb
enter
push
lret
roll
inc
adc
mov
sti
add
jo
decb
mov
xor
sahf
dec
ljmp
dec
pop
mov
xor
add
jmp
add
pop
cmp
inc
fucom
mov
jge
push
and
pop
arpl
pop
pop
and
sbb
out
gs
and
sub
cmp
fidivrl
sti
ds
in
shrb
inc
add
das
mov
xor
sub
dec
mov
imul
xchg
mov
sub
dec
xor
insl
lret
pop
loope
mov
out
mov
js
push
in
pushf
jmp
out
inc
inc
addr16
or
mov
in
mov
pop
lahf
mov
dec
rolb
mov
iret
ja
mov
or
adcb
fimuls
pmuludq
cmovns
repz
in
loopne
pop
loope
jnp
sbb
aas
cmp
inc
enter
lods
fdiv
fld
xlat
jae,pt
enter
inc
dec
xchg
push
cmp
xchg
shlb
sarb
pushf
fimuls
cmc
xchg
xchg
ror
mov
dec
lcall
stc
test
stos
mov
mov
stc
jle
into
add
subl
lahf
sub
stos
hlt
js
scas
add
pusha
das
mov
fistpll
fcoml
dec
push
mov
in
out
popl
mov
pop
xor
xlat
das
sbb
in
es
pop
fcmovne
notl
lahf
sbbb
lret
ss
insb
rcrl
dec
cmc
icebp
or
outsl
jge
divl
aad
scas
xchg
cli
sar
stos
xchg
mov
cs
pop
xchg
clc
call
or
inc
mov
sub
xchg
test
pusha
push
adc
shlb
shr
dec
push
pop
popa
xchg
jecxz
mov
clc
scas
jmp
adc
xor
adc
or
cmc
fs
enter
fs
or
pop
rorl
lock
mov
xor
xchg
lahf
jle
mov
xchg
out
xlat
cmpsb
pop
test
cltd
test
sahf
repnz
adc
shlb
and
xchg
jge
or
and
sub
adcb
out
mov
pop
cmp
daa
xor
push
pop
cltd
mov
leave
adc
pusha
xchg
cmp
lret
movsl
push
out
int3
imul
ret
cltd
and
shlb
int3
lods
mov
mov
cmpsl
loopne
cmp
movb
ja
shll
testb
lret
adc
or
hlt
cmc
cltd
lods
push
or
ds
sub
inc
push
mov
mov
iret
pop
cmpsl
sbb
add
adc
cmp
adc
aaa
mov
push
jns
xchg
jne
xchg
clc
mov
mov
pusha
sub
ljmp
mov
xor
pop
mov
xor
insb
mov
push
shl
dec
jle
gs
jo
mov
cmc
pop
sub
iret
xor
mov
sub
adc
hlt
or
daa
mov
or
imul
fisubl
pusha
xchg
cs
andb
pop
stos
lahf
and
nop
mov
cltd
xor
adc
xchg
hlt
ja
dec
adc
lods
or
sbbl
test
loopne
fadds
or
pop
xchg
cmp
call
dec
inc
mov
in
lcall
mov
mov
and
sub
test
dec
jne
lock
mov
sar
sahf
stc
mov
jnp
pop
mov
inc
sbb
aad
xor
mov
aaa
adc
imul
cs
xor
jbe
fwait
test
sahf
pop
lret
rcrb
ficomps
xor
add
int
sub
jno
lret
jp
push
cltd
int3
or
popl
mov
mov
cltd
xchg
push
rol
push
mov
cs
jno
mov
jl
mov
stos
aas
cld
jl
outsb
mov
or
je
xchg
mov
rol
adc
pop
insb
mov
and
push
roll
xor
jle
pop
and
inc
adc
shll
adc
mov
pop
lods
jecxz
push
dec
dec
xor
sub
add
inc
pop
sbb
stc
pop
shl
jecxz
mov
jnp
in
or
mov
lea
jle
dec
in
push
mov
clc
mov
xchg
lods
movb
cmpsb
aas
jle
stos
pop
daa
dec
xchg
fistpll
dec
jg
jle
div
cmpsl
dec
xchg
and
xchg
xor
outsl
sub
xor
sahf
test
outsl
push
lahf
cmp
pop
fnstsw
mov
clc
cli
ss
insb
sbb
mov
and
mov
sub
mov
or
hlt
hlt
sub
push
sarl
push
xchg
stc
dec
inc
mov
add
dec
sbb
imul
cmp
idivb
loopne
out
or
push
dec
scas
scas
popf
push
stos
leave
cmp
jb
in
adc
mov
cmpsl
aad
mov
jne
lds
lret
shrb
out
dec
in
mov
loop
inc
adc
daa
inc
mov
xchg
adc
ljmp
jnp
bound
and
into
lock
dec
dec
push
add
test
add
mov
scas
xor
pop
jno
and
xor
xor
das
lcall
sbb
out
out
in
cld
cmp
mul
fdivl
cltd
xchg
xchg
add
cmp
pop
mov
dec
inc
pop
and
mov
inc
xor
mov
mov
js
dec
xchg
fwait
rorl
test
adc
adc
and
out
inc
pop
push
in
jl
inc
in
out
jns
lods
adc
mov
push
add
iret
cli
jmp
pop
mov
add
adcl
stos
jg
stos
lods
insl
imul
into
xchg
sub
xlat
cs
add
loope
xchg
xor
and
inc
faddp
test
aaa
out
jbe
inc
into
push
daa
int
sbb
fsubrl
fcomi
out
arpl
xchg
and
fistl
pop
lret
xor
addr16
dec
fbstp
cld
sarl
mov
inc
inc
test
stos
imul
dec
mov
sub
xorb
mulb
or
mov
sub
rol
xchg
sbb
sahf
jae
out
push
push
xor
movsl
repz
pop
inc
push
push
push
outsl
xor
jno
cmpsb
cmpsl
cmp
dec
iret
xor
adc
xchg
lret
mov
mov
jnp
repz
adc
add
push
out
jne
or
xchg
hlt
inc
aad
xchg
cs
jae
fiadds
gs
gs
push
scas
and
mov
jp
push
push
pop
inc
adc
or
mov
and
adc
cmp
dec
xor
cmp
jg
add
xchg
mov
mov
iret
ljmp
ja
aam
sbb
push
pop
lock
push
test
push
call
cmpsb
mov
leave
mov
add
icebp
and
imul
icebp
adc
mov
cmp
mov
lods
mov
out
sub
push
and
xchg
inc
loop
pop
xor
in
inc
imull
cmc
mov
dec
adc
rcll
scas
sysexit
js
sbb
xchg
and
push
mov
or
push
scas
push
or
sti
sbb
push
fstpl
add
mov
xor
loope
mov
test
pop
shlb
mov
inc
test
inc
into
sbb
mov
fucomp
in
mov
test
mov
cmp
push
dec
test
or
inc
in
repz
dec
xchg
dec
xchg
push
push
std
rcrb
notl
mov
stc
and
add
ret
scas
inc
arpl
xorb
inc
aad
push
sbb
sub
push
jg
inc
inc
dec
adc
movsl
lods
aad
cli
fistpl
pusha
jo
mov
test
fcomps
jae
mov
adc
lcall
mov
add
lcall
sub
cmpsb
push
fs
sub
pop
add
clc
ja
inc
pop
inc
icebp
fs
mov
jge
aas
fwait
mov
lret
out
fwait
xchg
popf
iret
js
in
loope
ficoml
xor
sbb
mov
or
inc
cmpsl
andb
insl
enter
scas
in
sub
jge
cmp
test
add
mov
shlb
enter
jne
push
fwait
ret
xchg
pop
jmp
imul
dec
dec
loope
mov
mov
mov
inc
mov
mov
clc
mov
and
jno
movsb
adc
icebp
in
mov
xlat
pushw
jmp
test
cld
jmp
and
inc
inc
xor
out
xor
fs
rclb
sub
xchg
mov
je
hlt
xor
das
mov
mov
hlt
outsb
lea
bound
pop
cld
jl
pop
push
aas
testb
jp
dec
mov
mov
into
jmp
in
push
adc
sarl
gs
jge
movsb
jb
cli
push
sub
mov
mov
repz
mov
inc
and
mov
fcomps
sub
xor
jbe
cwtl
test
orl
jmp
imul
out
aad
mov
outsl
test
fwait
and
xchg
test
cmpsb
jne
pushf
enter
pusha
movsb
jnp
test
js
cmc
hlt
adc
or
inc
jae
in
mov
nop
push
pop
mov
loope
pop
inc
add
lcall
pusha
push
mov
sbb
xchg
lds
sbbl
aad
jge
dec
into
pusha
xlat
adc
adc
xchg
out
std
les
adc
bound
out
outsl
bound
mov
mov
xlat
addl
nop
cmp
fwait
add
jl
sub
sub
xor
dec
mov
mov
lcall
and
xchg
dec
pop
lcall
lcall
aaa
aas
lea
and
and
xchg
std
sub
mov
inc
pusha
or
pushf
or
movsb
inc
add
call
fsubl
pusha
adc
sti
pushw
fdivrl
fwait
mov
sbb
mov
or
stc
xor
sbb
cld
xlat
and
fiaddl
or
add
inc
mov
xchg
mov
pop
shrl
add
into
ret
cmpl
ss
movb
bound
arpl
in
sbb
andb
xchg
ja
insb
jle
mov
jbe
ljmp
xlat
ret
inc
mov
mov
pop
adc
jb
aad
test
sub
push
sub
jo
push
icebp
cmc
jp
loop
inc
aam
jmp
aam
repz
mov
add
fwait
adc
jp
add
mov
push
jmp
sbb
outsl
in
mov
inc
or
and
mov
repnz
inc
icebp
xor
movsb
mov
pop
shlb
out
push
adc
mov
leave
shl
lods
cmp
sbb
xchg
cmpsb
lock
jge
lahf
repz
mov
aam
push
inc
cmc
loope
dec
insl
dec
cmp
dec
pushf
cmp
mov
dec
jne
mov
ficomps
mov
xchg
sahf
jne
pop
mov
pop
andb
lea
out
xor
sub
or
push
xchg
xor
mov
stos
rorb
xchg
nop
fistpl
das
jo
cmp
adc
dec
scas
scas
movb
repz
mov
jb
movsb
fstpt
in
sbb
and
mov
stc
or
outsl
fs
das
jle
add
jg
outsb
in
mov
ja
lahf
add
xchg
mov
stc
lods
push
xor
pop
cwtl
mov
fisttpl
test
jns
sahf
mov
mov
popf
jecxz
popf
fidivrs
imul
sar
xchg
jb
pop
mov
sbb
mov
xor
cmpsl
fmuls
or
in
pop
test
clc
sbb
addl
push
lock
stos
iret
lds
rcr
inc
ret
in
mov
test
adcl
push
shrb
push
movsl
push
mov
and
jae
in
push
jnp
out
insl
dec
xor
in
cwtl
and
mov
rclb
leave
and
mov
dec
cld
push
nop
and
and
sub
pop
out
cmc
dec
addr16
lock
push
dec
lret
inc
shrb
out
stos
arpl
clc
leave
es
lods
jle
cli
mov
movsl
xor
xor
dec
xchg
sbb
jge
mov
pop
stos
arpl
gs
dec
iret
roll
xchg
popf
sbb
or
dec
test
lods
push
es
movb
sub
mov
jo
inc
movsb
int3
or
test
mov
lret
mov
dec
xchg
or
test
imul
jne
repz
test
jb
or
jp
repz
xchg
imul
daa
jl
push
repz
lods
scas
add
mov
pop
stos
lret
push
shll
push
or
repnz
xchg
in
xchg
scas
sub
lea
les
rolb
or
sub
jns
xchg
dec
mov
insl
adc
cmpsb
mulb
sbb
sub
sbb
stos
fwait
xlat
fld
stos
inc
gs
aad
pushf
hlt
dec
pop
pop
inc
inc
xor
mov
xchg
push
jecxz
out
pushf
out
nop
stos
movsl
call
push
sub
movsb
fwait
xchg
push
pop
gs
out
or
fnstcw
enter
cli
inc
or
decl
pop
lret
xchg
cmp
loop
test
dec
pop
mov
jno
mov
push
xchg
xchg
loopne
ret
mulb
mov
std
jno
jno
inc
xchg
add
nop
cwtl
mov
push
iret
mov
scas
and
out
out
xor
imul
out
ret
rep
in
int3
daa
test
xchg
or
sbb
pop
int3
rorb
mov
cs
scas
cmpsb
sbb
dec
xchg
dec
test
or
add
fnstcw
movsb
fildl
cli
cmc
xor
pop
ret
int3
cmp
sub
icebp
ficoms
fdivs
or
pop
cmp
idivb
fisubrl
les
adc
mov
mov
nop
cmp
add
dec
int
push
sub
xor
push
push
xor
xchg
cmp
lcall
insb
jnp
test
mov
lods
dec
mov
sub
mov
fldl
repnz
les
mov
test
push
push
ss
push
cmc
sub
jb
fcomip
adc
mov
inc
mov
push
push
pminub
pop
mov
int
jnp
push
jne
loopne
sbb
test
add
faddl
les
ficoms
sbb
ficomps
mov
jmp
push
pusha
fwait
xchg
ljmp
fwait
xchg
and
cmp
mov
dec
and
mov
push
cmp
test
dec
sar
pop
adc
jb
out
mov
xor
push
xor
push
outsl
fisttps
mov
inc
insl
mov
mov
or
jne
jecxz
adc
ds
addr16
xchg
out
sti
xor
shlb
dec
mov
pushf
enter
aam
jge
shr
and
inc
mov
sub
inc
gs
adc
jne
pusha
pop
sahf
xor
push
add
ljmp
jmp
add
fcmovnu
imul
daa
jle
push
dec
mov
out
mov
bound
enter
mov
fxch
shrb
iret
js
nop
scas
addr16
cmpsb
fcomps
movsl
fcmove
cltd
dec
sub
test
adc
push
mov
sub
mov
pop
and
or
add
xor
lret
mov
test
xchg
jl
lock
add
pop
inc
push
cwtl
jmp
lret
inc
jmp
cmpsb
pop
xchg
inc
sub
arpl
dec
addb
pop
xchg
pop
into
pop
mov
shrd
mov
and
cmp
jle
mov
clc
aas
scas
push
popf
sbb
aaa
dec
mov
jnp
icebp
mov
clc
cmp
xlat
pop
mov
xor
clc
out
ja
push
sub
mov
add
xchg
jnp
sub
inc
jne
les
mov
cmp
repz
jae
adc
mov
push
mov
out
lret
repnz
mov
dec
mov
mov
loope
mov
push
jne
test
cmp
push
aam
test
mov
mov
leave
shlb
aaa
sub
dec
loopne
insl
mov
sahf
xlat
fstl
imul
and
sbb
fs
xor
jo
inc
cld
scas
xchg
sbb
sub
mov
mov
or
rcrb
testb
bound
push
adcl
or
divl
pop
leave
popf
jp
in
out
pop
xlat
mov
mov
xlat
push
es
push
push
mov
clc
pusha
aam
adc
ficompl
rcrl
and
xor
push
jo
lcall
mov
jns
sbb
push
addr16
aaa
js
insl
mov
mov
leave
movsl
mov
fwait
fwait
cmp
jmp
loop
hlt
dec
mov
jno
lcall
loope
and
jecxz
cmp
scas
xchg
test
pop
loopne
push
les
mov
outsb
add
enter
or
scas
dec
push
stos
dec
pushl
ret
dec
test
addr16
or
push
jno
mov
aam
ja
sbb
sub
repz
jecxz
out
out
push
pop
out
jp
mov
incl
rclb
cmp
dec
add
out
enter
aaa
pusha
in
ret
mov
push
push
ljmp
cmp
sti
subl
sub
sbb
mov
inc
xchg
adcl
pop
scas
push
sub
inc
inc
inc
aas
mov
dec
in
scas
pop
aam
jle
imul
mov
rolb
lret
adc
out
or
ret
mov
int3
hlt
stc
cmpsb
mov
iret
mov
push
cmp
imul
inc
mov
jb
pop
lret
mov
mov
mov
addr16
loopne
or
dec
mov
and
lret
and
fwait
cmp
aad
call
inc
adc
sbb
mov
jp
fbld
jns
push
adc
hlt
rorl
dec
jp
push
mov
ss
cltd
fdivrl
cmp
jne
ss
dec
mov
fsubr
aam
cmp
in
adc
push
inc
inc
nop
mov
xchg
mov
jbe
lcall
inc
pop
inc
mov
pop
adc
xchg
addr16
test
mov
xor
popa
or
andb
clc
pop
add
iret
dec
dec
lret
inc
test
repnz
push
ja
mov
pop
sbb
arpl
fadds
mov
adc
mov
clc
jbe
dec
fs
mov
sbb
stos
mov
adc
mov
xor
cld
dec
out
lret
or
sbb
mov
inc
inc
mov
movsl
inc
mov
iret
sbb
adc
rcrb
in
mov
sub
xchg
dec
mov
popf
xchg
outsb
mov
mov
stc
test
jbe
nop
add
mov
xor
dec
pop
test
xchg
cltd
testb
pop
fbld
dec
cld
mov
arpl
xchg
add
cmp
push
push
fs
xor
lods
shlb
hlt
lcall
mov
inc
outsl
sub
inc
jl
gs
pop
call
pop
lds
loope
push
loop
mov
xchg
lahf
loop
arpl
jbe
cmp
popf
fidivrl
fmuls
sbb
icebp
out
sbb
jmp
je
sahf
sub
xchg
push
ss
pushf
scas
mov
jmp
xor
inc
mov
adc
cmp
adc
sub
dec
mov
or
je
or
inc
add
neg
repz
aam
repz
aas
loop
test
xchg
xor
fs
mov
mov
cs
fidivrs
sbb
fsts
mov
sbb
lret
inc
sahf
pop
nop
cmc
cs
add
outsl
ret
mov
push
push
jno
lret
dec
inc
outsl
daa
cmp
push
loopne
sets
mov
jb
lods
fmuls
cs
adcl
rcll
movsb
add
mov
call
dec
mov
mov
hlt
adc
subb
imul
loope
cmp
gs
icebp
lret
lock
xor
into
cmpsb
std
nop
nop
dec
sarb
add
cwtl
pop
loop
int
mov
enter
notl
lahf
pop
es
cmp
dec
ds
sub
push
pop
pop
xor
loopne
pop
cli
inc
push
std
sub
lret
push
mov
data16
popa
push
mov
pause
lds
adc
loope
repz
pop
frstor
xor
xchg
or
test
pop
jae
cli
xchg
insl
xchg
aas
push
sti
pop
or
clc
jecxz
pop
jl
mov
inc
jge
mov
daa
mov
clc
adc
fistps
and
and
and
stos
test
mov
xor
jle
mov
push
or
cmp
cmc
add
rol
shl
pop
sti
jmp
add
addb
xrelease
inc
mov
das
jno
add
add
fsubs
movd
call
xor
and
and
and
adc
add
jge
adcl
in
cmpsb
push
mov
in
mov
push
add
inc
mov
cltd
je
sbb
rorl
jp
cli
sbb
data16
and
jl
push
lock
cltd
es
loopne
rorl
xchg
add
jmp
decb
xchg
scas
dec
mov
jle
jge
push
bnd
push
jnp
xor
xchg
int
lock
mov
ret
pop
or
push
clc
aam
js
mov
adc
roll
jmp
push
cmp
mov
cmp
cld
jle
xlat
and
cmpsb
dec
inc
xlat
loope
popf
int3
add
addb
fsubl
xchg
mov
jecxz
pushf
mov
add
in
jp
fs
aad
or
idiv
stos
aaa
push
negl
inc
jno
adc
inc
sbb
adc
xor
cmp
loope
inc
mov
add
out
cwtl
in
test
jg
lahf
in
jb
cmpsl
jge
pop
aaa
pop
push
mov
xchg
dec
sbb
ljmp
sub
in
loope
push
and
sub
add
or
stos
jno
jge
cld
cmp
out
sbb
jne
mov
nop
daa
icebp
imul
fists
sbb
mov
xchg
mov
sub
sbb
jp
cld
cwtl
fists
mov
sbb
mov
paddw
xchg
scas
jo
mov
aam
pushf
fcomi
sbb
add
das
sahf
and
cwtl
aaa
dec
dec
and
jne
mov
adc
les
pop
lret
scas
in
inc
std
out
push
mov
mov
imul
mov
push
shlb
push
push
pop
out
sub
in
mov
scas
sbb
les
pop
adc
xor
int
add
int3
lret
bound
dec
out
dec
fdivrp
ret
ja
sub
sub
sbb
adc
flds
push
lods
sti
gs
stc
and
lods
imul
and
pop
mov
push
mov
cmpsl
addb
sti
inc
jle
dec
lods
xchg
clc
push
jnp
or
in
movsl
mov
push
cmpl
int3
mov
push
and
add
fmuls
adc
jge
ror
pushf
out
inc
lahf
pop
addl
or
flds
cmpl
sbbl
jecxz
or
sahf
jl
negl
jmp
push
por
push
cmp
adc
fcmovne
repnz
pop
xor
sbb
hlt
push
mul
mov
and
imul
cwtl
lods
daa
jnp
or
or
sbb
push
into
movsb
les
inc
mov
xor
and
dec
imul
mov
fisubs
dec
negb
sahf
push
fwait
inc
sbb
out
push
and
in
psrad
mov
test
push
lahf
xorl
cmpsb
or
mov
dec
lock
cmpsb
push
pushf
cltd
sbb
inc
movsl
dec
push
pop
mov
dec
mov
out
ret
push
xor
jno
jb
dec
sahf
ficoms
movsb
rcrl
sbb
push
or
and
movsb
push
popa
xor
ljmp
sub
roll
jo
ljmp
or
movsb
ja
int3
cld
push
call
imul
movsb
or
mov
pop
xorl
push
stos
inc
repz
pushf
in
pop
xchg
imul
push
pop
and
mov
sub
lock
scas
leave
lret
xchg
fs
test
mov
mov
and
rcll
addr16
and
push
add
xchg
cmp
push
clc
inc
lods
push
mov
cli
es
fcomi
jmp
subb
pusha
jecxz
int3
pop
mov
pusha
xchg
sub
movsl
or
iret
decb
push
into
xor
push
test
sbb
mov
xchg
in
lods
pop
mov
cmp
out
repz
jge
sbb
mov
dec
push
cmp
xchg
jbe
loop
mov
loopne
inc
jmp
jmp
lock
inc
es
les
ljmp
push
hlt
jmp
popa
shl
pop
pop
cmp
jns
std
and
rorb
jge
int3
fidivrl
jae
add
sarl
lcall
xor
jle
sbb
dec
dec
cmp
jmp
dec
je
and
js
push
lock
sar
mov
push
sub
xchg
push
cmp
sbb
sbb
push
pop
push
test
mov
pop
pop
jle
push
rorl
add
fsubrp
mov
out
push
and
imull
add
jne
movsb
push
shrb
mov
cs
shl
and
orl
lret
ja
mov
pop
insb
das
sysexit
mov
mov
rclb
roll
push
inc
in
bswap
push
dec
fs
icebp
push
lock
scas
jnp
je
mov
cmp
pop
inc
fwait
lcall
inc
add
sub
fsts
aam
dec
push
push
mul
jg
cmp
leave
leave
aas
jp
cmp
sbb
sti
dec
sub
and
lock
aad
jae
test
jnp
mov
andb
cmp
cmp
fs
outsb
jge
xor
adcl
fldenv
dec
addb
fmuls
mov
clc
dec
jne
addb
lret
in
xchg
sti
adc
pop
pop
scas
bound
loop
scas
xchg
mov
pop
imul
push
dec
movsl
icebp
jb
bound
test
mov
mulb
mov
scas
test
xor
and
lret
jnp
sbb
adc
mov
adc
ficompl
pop
mov
test
mov
cld
sub
jae
add
jae
inc
xor
data16
ret
push
pop
sbb
xchg
sti
mov
rcll
mov
pop
jo
jne,pn
mov
and
dec
aas
hlt
fmulp
xchg
xor
add
aaa
pop
sub
mov
cmc
imul
loope
cli
push
adc
aad
sbb
cmp
repnz
mov
add
push
pop
cmpsl
jnp
lahf
stos
out
clc
shll
mov
dec
stos
mov
cli
idivl
dec
test
xchg
or
push
mov
and
stos
or
mov
imul
pop
insb
loope
jl
xchg
lea
fmuls
add
cld
pop
adc
mov
xchg
adc
mov
rorb
xchg
adc
mov
rcrb
jno
jns
in
xorb
or
cmpsb
pushf
cmpsl
aam
scas
mov
lret
mov
pop
push
xor
nop
in
sub
outsb
add
dec
or
aas
jne
xchg
pop
mov
inc
cmp
inc
dec
pop
jp
jmp
xor
mov
lock
inc
lret
jne
push
xor
xor
mov
dec
mov
repz
rcrb
pop
adc
movsb
jge
lds
cmp
outsb
repz
rorb
scas
pop
dec
sbb
push
adc
idivl
xchg
push
mov
inc
fisttps
popf
add
bound
insb
push
les
sub
lea
sahf
mov
jecxz
nop
and
rcrb
rol
aas
mov
pop
cmp
mov
negb
fldcw
sub
imul
mov
shl
cltd
lret
cmc
dec
add
cmp
lcall
mov
ljmp
cmpb
push
sub
fldt
cwtl
sti
adc
daa
repz
arpl
shl
jno
pop
pop
push
push
pusha
inc
push
adc
mov
xor
push
and
dec
xchg
roll
sub
ja
xor
repnz
ja
js
fdivrs
xchg
dec
dec
mov
insb
sbb
push
mov
pop
imul
iret
aad
int
lds
cmpsb
stos
std
std
incb
jmp
mov
push
test
std
divl
xor
jg
xor
stos
stos
jg
cmpsl
adc
or
or
push
push
xor
inc
mov
xchg
push
adcb
cmpsb
adcb
push
add
ss
data16
push
lcall
push
sbb
ret
out
or
mov
mov
add
push
pop
adc
mov
sbb
or
cmp
jae
and
mov
pop
sahf
adc
mov
dec
inc
jecxz
xchg
xorl
inc
sti
cltd
xor
repz
imul
sub
jl
mov
push
inc
icebp
subl
jge
je
and
jnp
mov
sbb
stc
xor
cmp
inc
add
push
or
xlat
in
push
fld
jecxz
inc
in
pop
ss
mov
pop
jmp
outsl
out
loopne
sub
lahf
mov
jno
cmpsl
cmp
mov
mov
movsl
pop
nop
enter
inc
xor
dec
xchg
lret
jl
and
jl
inc
mov
adc
lods
ljmp
cmc
push
adcb
jmp
sbb
fwait
out
popa
jae
or
add
inc
push
sub
pop
call
iret
jle
cmp
shlb
ja
testl
push
jge
jo
pop
out
stos
mov
mov
int
xchg
jg
mov
cwtl
mov
subl
xor
sub
xchg
adc
ds
sub
inc
mov
push
sub
push
fsubrs
imul
add
dec
popf
dec
out
pop
stc
lock
push
test
ss
xchg
dec
rorl
imul
outsl
stos
lock
test
mov
cltd
push
mov
jbe
xchg
dec
push
loop
popf
pop
or
loope
fisttpll
hlt
rcrl
or
cmpsl
mulb
out
add
ret
dec
inc
mov
clc
popl
stc
subl
xchg
js
xor
sbb
mov
xor
push
mov
and
cmp
jns
lods
mov
jg
int
jl,pn
jg
lock
mov
leave
iret
pushf
stc
xchg
flds
faddl
aaa
fidivl
xlat
ficoms
loope
fnstsw
loopne
sub
loopne
mov
dec
sbb
push
outsl
xor
adc
test
shrb
dec
mov
sub
xchg
sbbb
sub
or
xchg
lahf
push
dec
mov
jnp
xchg
jnp
shrl
mov
and
pushf
bndstx
pop
loopne
sbb
lret
lock
jl
das
and
xchg
add
inc
adc
push
mov
pop
mov
sbb
inc
data16
or
fcmovnu
xchg
sbb
sbb
js
sahf
pusha
lds
inc
and
ja
xor
mulb
mov
out
cmp
mov
mov
cmp
xchg
inc
ja
arpl
pop
mov
lods
insl
adc
push
lods
mov
inc
push
in
imul
mov
outsl
loop
dec
addb
call
repnz
movsb
shl
stos
rolb
push
lcall
pop
ljmp
test
xchg
leave
push
sub
dec
sar
and
addl
cmp
cmovnp
add
lret
enter
or
subl
push
and
outsl
sub
sub
jecxz
gs
lods
inc
cmp
jnp
add
sbb
fdivs
xorb
pop
cld
movsb
lahf
dec
inc
lahf
lret
ds
and
push
pop
mov
push
in
insl
loopne
data16
ds
xchg
pop
sarb
cld
mov
emms
push
pop
inc
mov
stos
pop
cltd
cmc
les
int3
mov
jecxz
std
mov
and
leave
fcmovnb
add
and
fistps
flds
scas
mov
dec
adc
mov
xor
dec
out
popa
xchg
pop
mov
fs
lahf
pop
xor
loopne
adc
inc
adc
mov
add
fiaddl
imul
imul
mov
xchg
sti
fildll
sbb
ret
or
or
aam
fdivrs
imul
es
lahf
divb
sub
lods
aam
pop
jae
imul
xor
pop
add
xchg
xchg
lods
mov
cmpsb
ret
jmp
pop
push
mov
fstps
cmpsb
cmp
xchg
inc
sbb
mov
adc
mov
jecxz
jl
rolb
fstp
iret
sbb
popa
or
int3
pop
inc
push
xor
push
aad
pop
xchg
push
enter
jns
or
jo
push
sbb
push
es
mov
ja
inc
sbb
inc
mov
jb
add
xchg
adc
cmpsb
add
adc
mov
adc
push
xchg
xchg
add
loop
adc
push
push
cmp
inc
out
repnz
sbb
xchg
mov
mov
push
int3
lahf
out
es
xor
cld
outsb
imul
dec
in
daa
scas
push
mov
adc
mov
lret
xchg
inc
sbb
in
and
mov
hlt
fists
aaa
jno
les
dec
add
outsl
fsubs
inc
insb
repz
insb
aas
lcall
dec
lds
sbb
push
add
jmp
repnz
cmpsb
out
xchg
mov
pop
inc
inc
lcall
out
scas
aas
mov
arpl
push
hlt
stos
test
or
dec
outsl
ret
arpl
inc
pop
cltd
call
sub
pop
es
imul
cld
stos
int3
inc
lcall
popa
cltd
pushw
mov
jle
adc
mov
sbb
push
repz
popa
in
dec
inc
jns
mov
xchg
fs
out
rcrb
mov
ss
xor
xchg
dec
cmp
or
test
out
lret
test
mov
xchg
xchg
imul
jmp
cmp
pop
mov
push
flds
ljmp
popa
fldenv
test
jno
stos
test
mov
mov
jmp
repz
stc
or
inc
push
and
gs
lock
or
lods
cmpsl
inc
mov
jmp
filds
mov
cmp
add
cwtl
out
lahf
pop
psubusb
dec
pop
test
imul
sbb
mov
mov
pop
stos
push
ja
leave
dec
scas
fmull
test
shl
lods
sub
sbb
sbb
adc
bound
xchg
adc
scas
sub
in
sbb
sub
mov
clc
push
jmp
adc
cmpsb
out
repz
aaa
dec
mov
or
mov
add
mov
in
sbb
std
movsb
out
push
data16
mov
or
cld
mov
insl
fs
cmp
xchg
sub
push
in
sbb
test
add
fwait
shlb
fistl
xchg
mov
jp
cltd
inc
sbb
push
outsl
jl
push
dec
pop
or
dec
mov
rclb
inc
aam
fsubrl
add
psllq
mov
lret
xchg
fimuls
sti
subl
mov
inc
mov
fstps
jle
int
dec
xchg
push
dec
or
aam
jns
push
xor
cmp
bound
pop
pop
cld
loope
dec
push
cmpsb
test
xor
enter
xor
stc
aas
xor
or
test
cli
mov
lds
inc
std
out
dec
mov
dec
std
pop
insl
lock
jecxz
gs
sbb
in
stc
fmul
inc
out
pop
out
jg
fldcw
sbb
dec
jno
lock
out
pushf
inc
rorb
inc
xchg
mov
mov
imul
adc
mov
sarb
leave
jp
push
cmp
out
add
popf
addb
pop
push
pushf
hlt
fcoms
pusha
jne
mov
jae
mov
mov
and
adc
push
push
inc
cmpb
pushf
js
lods
je
mov
sub
out
jne
sbb
and
insl
dec
lds
scas
inc
fnstenv
sub
int3
fdivl
mov
pop
fstps
or
popf
ja
loope
adc
xchg
int3
out
sbb
and
out
xor
and
mov
bound
out
je
mov
fisubrs
ret
lret
addr16
jb
cmp
mov
repz
mov
xchg
push
in
and
mov
mov
mov
test
sub
jg
xchg
int3
add
and
iret
in
pop
dec
dec
ficoms
aam
jg
push
mov
sub
fidivrs
std
cmc
mov
aam
ljmp
xor
pop
adc
popf
cwtl
sbb
jmp
inc
inc
mov
imul
mov
jne
sub
mov
push
fnstcw
es
aad
fcos
mov
ss
pop
xchg
mov
lods
mov
in
cs
mov
dec
mov
das
mov
jle
pop
mov
mov
and
mov
jb
dec
and
cmp
ss
push
dec
xor
jbe
clc
add
clc
jmp
fcomps
inc
adcl
xchg
cs
xchg
dec
imul
jne
dec
sub
int3
and
outsl
push
adc
xchg
mov
mov
xlat
adc
pop
sahf
dec
push
xchg
push
subl
scas
cmp
out
sbb
push
mov
ja
cli
cmpsb
dec
je
mov
cmc
andl
or
sub
inc
and
mov
call
addr16
and
cli
icebp
aas
lret
xor
sub
and
lret
out
jl
jge
daa
and
lock
xchg
adc
adc
cmp
cmpsb
pop
mov
jnp
inc
fnstenv
fnsave
jns
fsubrs
test
adc
std
ja
sahf
sub
adc
xchg
nop
repz
movsb
sub
and
pop
or
arpl
lds
lret
aas
jle
adc
push
mov
cmp
xchg
pop
stos
xor
test
or
mov
or
xor
cli
cli
mov
test
test
std
mov
test
or
aad
mov
lahf
ds
sarb
arpl
movsl
or
cwtl
sub
pop
and
jl
jae
jle
jecxz
xor
jnp
pushf
inc
xchg
and
scas
pop
sub
pusha
movsb
push
or
jbe
call
mov
leave
pushf
sub
dec
cmpsl
ss
mov
popw
pop
sbb
mov
lods
sbb
and
out
xor
and
dec
psadbw
outsl
ja
jb
add
xor
subl
repz
test
sub
fcoml
mov
popa
push
mov
icebp
out
adc
mov
fisttpl
cmp
lea
mov
jb
adc
mov
or
enter
pop
idivb
and
jae
inc
pop
call
rclb
cwtl
inc
jmp
adc
sbb
scas
pushf
loope
lea
push
fldenv
out
push
jnp
punpckldq
jae
cmpsl
jnp
adc
inc
lahf
xchg
out
pop
or
rcll
push
and
jmp
xchg
dec
test
push
adc
dec
lahf
aas
outsb
stos
cmpl
cmp
cli
fisttpll
stc
mov
nop
fildll
push
cmp
inc
or
add
xchg
pop
jmp
sbb
sub
sahf
ss
loop
adc
loopne
pop
or
xchg
ss
test
adc
shl
xlat
fdivp
pop
jl
inc
xlat
inc
lods
lock
stos
clc
cmp
jmp
ja
enter
xor
mov
jmp
ds
ret
enter
or
out
sbb
adc
sahf
fisttps
mov
or
mov
adc
adc
fildll
aaa
movl
adc
pop
pop
mov
push
int
out
xchg
iret
xchg
in
xchg
push
jbe
loop
outsb
lock
ja
lea
filds
mov
and
pop
mov
mov
mov
fcmovnu
dec
rorb
cld
fiaddl
cmpsb
xchg
xchg
pusha
pop
adc
mov
and
inc
mov
fidivrl
sti
and
scas
jmp
loope
pop
xchg
mov
mov
cwtl
xchg
rcrl
add
jg
out
xor
inc
enter
jb
cmp
into
dec
das
cmp
outsl
loopne
ja
sbb
repnz
mov
outsb
unpckhps
mov
push
lods
lcall
bound
lret
clc
dec
add
xor
inc
inc
adc
inc
adc
adc
mov
ljmp
sar
pop
das
shrd
rolb
scas
orb
dec
aam
xchg
rcll
lock
mov
lds
mov
dec
and
lret
dec
sbb
push
cmc
mov
or
xchg
mov
inc
mov
fs
mov
lcall
jecxz
xlat
das
or
adc
add
mov
and
sbb
dec
lock
inc
xor
inc
int3
mov
adc
lret
inc
mov
push
push
mov
and
je
imul
add
out
lahf
mov
cmp
push
pop
lret
add
mov
sbb
das
stos
inc
or
cmp
or
xor
jb
push
sahf
mov
nop
push
imul
bound
fcom
pop
andb
shrl
jmp
dec
ja
mov
int3
mov
sbb
nop
lret
fistl
in
add
and
push
subb
push
mov
pop
inc
mov
sub
out
sbb
jns
into
and
push
sub
ret
mov
in
test
arpl
imul
jg
pushf
jecxz
sti
test
xchg
pop
fwait
pop
sub
or
movsb
rcrb
mov
jns
pop
adc
pop
add
mov
and
jno
fistpll
xlat
notl
pop
out
mov
push
outsb
insl
jl
daa
jg
insl
cmp
and
push
pop
or
adc
test
and
fisttps
in
cltd
and
xor
push
add
rol
mov
lahf
icebp
ret
scas
mov
mov
mov
jbe
ret
add
add
and
mov
rolb
xor
outsl
push
clc
sahf
ss
add
sub
inc
mov
stc
pop
push
jae
insb
adc
cld
and
push
push
fdivp
mov
lret
mulb
jg
mov
jnp
pop
xorb
arpl
xchg
adc
es
xchg
jmp
std
imul
sti
leave
addl
daa
mov
fisttps
inc
insl
mov
lock
pop
sub
and
sbb
loopne
add
push
adc
movsb
mov
les
inc
lret
jecxz
push
and
dec
pop
dec
fsubp
sub
jmp
xchg
dec
lods
sbb
sbb
movl
std
mov
jp
jmp
and
jle
sbb
sbbb
cwtl
xchg
mov
mov
cmpsb
lret
sbb
and
adc
mov
and
inc
xor
push
mov
push
dec
hlt
shrb
add
stos
in
fbstp
mov
xchg
dec
rcl
sub
cmp
push
mov
mov
pop
enter
test
push
lret
add
mov
jno
outsb
dec
hlt
sbbb
sbb
clc
push
fwait
sub
ja
sbb
leave
xchg
std
adc
lods
cmp
into
hlt
aas
jle
fimull
fldcw
jae
xor
mov
sbb
rorl
es
xchg
xor
or
cmpsl
popf
dec
ds
sub
jnp
sahf
pop
andb
test
and
mov
cmp
cwtl
icebp
loopne
enter
xchg
add
ret
fdivrl
push
fstpl
shrl
out
pop
aas
pop
jp
aaa
loopne
sbb
xlat
cmp
xchg
cs
push
mov
sub
mul
dec
xor
int
sub
sub
push
je
push
repz
scas
aam
into
outsl
jecxz
pop
aas
dec
cltd
mov
ss
add
arpl
push
call
sub
adc
rcll
jb
mov
cld
rcrb
dec
orl
sbb
add
lods
aaa
xor
sbb
sub
cmp
jmp
add
nop
adc
pop
inc
cmp
push
jbe
aaa
xchg
jno
inc
pop
mov
push
das
adcl
xchg
jmp
mov
jbe
push
repz
inc
inc
jb
test
mov
adc
sti
sub
orb
test
adc
iret
add
jne
cltd
test
es
and
adc
xchg
inc
or
inc
xchg
cmp
out
mov
cmp
pop
pop
lods
inc
loopne
adcl
pop
aam
add
or
lods
sbb
sub
cmp
ja
mov
rorb
scas
dec
or
mov
stos
push
rcrl
push
call
xlat
sbb
cmpps
lods
outsb
test
pop
push
jnp
test
pushf
in
push
std
jb
loopne
in
stos
fbld
pop
cmpsb
adc
push
xchg
mov
lcall
mov
filds
test
mov
xchg
es
jne
dec
es
stos
out
movb
insl
cmc
mov
sar
insb
or
testl
add
pushf
dec
cmp
push
es
mov
push
aam
mov
out
insb
dec
movsl
jp
push
stos
mov
in
xchg
mov
cli
and
cli
adc
sbb
loop
clc
add
ffree
mov
in
inc
orl
mov
jmp
icebp
lods
out
adcb
repz
in
les
bound
lahf
int3
fisttpll
xchg
aas
rcl
xchg
ds
mov
sahf
cmp
push
mov
stos
sbb
jmp
push
or
in
cmp
mov
and
pop
in
orb
outsl
movsl
xor
ret
push
loop
cld
or
ja
popf
lcall
movsb
popf
shlb
into
mov
cs
or
mov
adc
hlt
inc
mov
adc
or
fnstsw
add
adc
loop
notl
jl
sarl
enter
and
dec
sub
lret
dec
and
dec
clc
adc
jno
jle
fmuls
sbb
mov
or
mov
add
adc
jmp
loope
jno
sbb
dec
lahf
xor
sub
negl
jge
mov
add
mov
push
mov
scas
jne
jo
pop
and
mov
cmpsb
lret
add
stos
pinsrw
fsubrs
nop
rcrb
pop
out
stos
das
pop
fmul
and
movsl
pushf
cltd
fdivs
hlt
clc
push
push
iret
or
negl
push
jmp
nop
dec
xchg
out
fxch
dec
scas
xor
mov
sub
mov
pop
lret
inc
pop
les
sahf
das
inc
stos
xchg
mov
mov
imul
decb
inc
leave
mov
out
dec
pop
fmuls
call
push
pop
aaa
test
xor
xor
cmp
sbb
push
unpcklps
movsl
cmp
inc
xor
jb
addr16
pusha
ficoms
in
loop
cld
add
xor
inc
sahf
clc
pop
and
cld
mov
pop
adc
add
js
es
push
cmpsb
pop
inc
shlb
aad
insb
or
mov
in
mov
jo
ss
and
lret
mov
and
shlb
cmp
xor
mov
push
in
mov
lahf
xor
pop
mov
ror
iret
dec
ljmp
stos
mov
mov
in
inc
test
scas
testl
arpl
in
ret
stos
inc
mov
cmp
jp
hlt
xor
push
imulb
and
add
in
adc
mov
dec
shrl
jp
jl
testb
mov
pop
jl
mov
sub
fwait
stos
xchg
jns
aas
test
aaa
xor
adc
jmp
lds
xchg
push
clc
inc
push
sbb
push
shlb
repz
rcr
adc
imul
ficomps
bound
lock
sub
testl
xchg
xchg
ret
stos
push
ss
sahf
xorb
inc
and
icebp
test
push
hlt
jno
popf
inc
lods
jo
or
ret
fistps
outsb
push
mov
add
cmpsb
bound
mov
mov
push
pop
aaa
pop
add
mov
dec
push
mov
hlt
cld
sbb
lock
xchg
outsl
loop
add
or
push
dec
insb
pop
jge
aad
dec
push
inc
jg
mov
aam
outsl
cmp
dec
aad
mov
jmp
mov
mov
aaa
mov
inc
or
loopne
inc
lods
gs
lea
test
je
add
or
loopne
or
outsb
loop
pop
sbb
cmp
cli
xchg
dec
mov
adc
out
imul
xor
mov
pop
jge
mov
repz
insl
mov
movsl
or
pop
fisubrs
xchg
ds
xchg
ret
scas
scas
mov
bound
ljmp
insb
movsl
movsl
out
sub
in
sub
sbb
dec
sbb
xchg
dec
and
sbbb
pop
adc
in
push
inc
es
std
push
js
inc
aad
push
jge
outsb
pop
pop
lods
xchg
mov
out
repz
and
lods
lret
pop
js
rorl
fs
jbe
loop
sahf
popa
and
or
loope
and
or
les
mov
aad
pop
lret
sub
cmp
jb
sbbb
mov
std
push
fucomi
push
test
mov
jns
stc
fwait
into
sti
xchg
xchg
jmp
sub
push
movsb
pushl
cmp
arpl
add
push
add
sub
in
push
xchg
stos
into
outsb
neg
sub
sti
mov
test
jp
mov
jecxz
cs
test
test
jnp
dec
outsl
insl
movsl
xor
jg
xor
out
xor
test
lods
xor
scas
std
test
or
xchg
int
adc
push
addl
push
nop
aaa
in
in
mov
lds
xchg
in
push
mov
sub
ret
adc
arpl
mov
mov
es
dec
xchg
cmp
mov
mov
in
notl
addr16
push
outsb
fdivrs
rclb
jle
sub
stos
cltd
mov
aam
push
push
xchg
sub
push
inc
add
hlt
jecxz
push
rol
arpl
jge
add
xchg
ja
push
sbb
or
push
sbb
imul
mov
lret
mov
fwait
lock
xor
test
push
jle
outsb
fmull
hlt
dec
dec
mov
sub
daa
das
adc
out
ljmp
xlat
dec
mov
fiaddl
mov
arpl
mov
lret
sbb
xor
inc
shl
or
sub
mov
mov
or
ljmp
cltd
int3
cwtl
aad
or
dec
sbb
xor
fucomi
cmp
add
mov
lret
xchg
pop
js
cs
inc
notb
cmpb
xor
in
in
movsb
or
fistps
mov
mov
lret
sub
fwait
inc
push
mov
daa
pop
xor
jne
push
mov
adc
mov
jge
push
int
std
cmp
aas
lds
adcb
inc
lods
in
xor
sub
sub
push
data16
outsb
shlb
ja
xchg
jns
push
outsb
in
sub
sub
or
sub
ss
pop
push
das
add
int3
out
pop
leave
cmp
and
lret
imul
std
xrelease
or
add
shlb
adc
xlat
dec
or
shlb
scas
xchg
pop
in
or
imul
notl
cmc
ret
mov
sub
mov
cmc
mov
push
int
adcb
outsb
xchg
jnp
loopne
jl
sub
ret
jecxz
xchg
mov
add
adc
mov
pop
push
orl
stos
loop
adc
sub
mov
mov
aam
es
dec
out
mov
idivl
out
dec
sbb
in
out
push
mov
push
out
push
in
mov
sub
ja
adc
mov
andl
cmp
roll
aad
ljmp
pop
lret
pop
xchg
pop
inc
imul
jg
pop
mov
xor
mov
js
fstl
or
sti
pop
lret
add
jb
pop
push
pop
sbb
lods
pop
mov
xchg
je
mov
insl
inc
adc
test
or
sub
loop
inc
mov
inc
dec
insl
test
in
rolb
or
call
add
dec
mov
xor
adc
xor
mov
lock
inc
lahf
fwait
xor
pop
in
mov
enter
aad
pop
popf
cmp
shlb
out
fldl
inc
cmp
mov
or
enter
test
lcall
inc
clc
adc
push
mov
fcmove
dec
scas
inc
or
pop
xor
icebp
daa
into
pop
or
xchg
aas
add
push
sahf
js
push
lret
ffreep
out
cmp
repnz
sub
cmp
je
outsl
push
cmp
sbb
lds
xor
imul
cs
stos
es
adc
xchg
push
mov
cmp
dec
pop
fldt
adc
das
ds
or
mov
idivb
fs
mov
mov
loopne
lahf
mov
xchg
test
mov
negb
xchg
mov
and
push
xor
pusha
test
xchg
js
sahf
jmp
pop
pop
stc
jle
pop
add
adc
jmp
push
cmpb
xor
jns
jne
sbb
inc
imul
cmp
xor
pop
je
loop
test
scas
aam
stos
icebp
fucompp
jo
ficoms
out
orl
sbb
jnp
lret
xchg
adc
jp
cli
xchg
or
out
lods
or
aad
popf
dec
cmpsl
adc
cli
mov
int3
jmp
cld
push
mov
xchg
inc
gs
call
mov
xor
jo
sbb
cltd
mov
dec
push
xchg
rorb
sbb
push
jo
pop
mov
les
pop
call
out
fdiv
mov
or
jl
xor
fs
pop
adc
nop
cmpsl
es
jb
dec
leave
xorl
jae
testb
and
cmp
iret
xor
jae
mov
jnp
adc
mov
sub
jae
lea
cmp
jge
and
stos
sbb
mov
daa
dec
mov
cmp
push
jns
loope
clc
push
xor
xor
imul
decb
into
dec
add
inc
test
call
repz
mov
aam
inc
dec
add
sub
mov
je
push
repnz
push
mov
inc
xchg
scas
daa
imul
xor
pop
sbb
test
iret
popa
orl
mov
sub
mov
fdivrs
femms
mov
hlt
cmpsl
dec
or
pop
add
add
push
arpl
int
ret
xchg
and
push
pop
jno
aas
mov
add
or
jne
dec
daa
or
stos
je
imul
mov
mov
adc
pop
adc
mov
sbb
lret
jge
fwait
jns
xor
mov
push
cmp
or
movsb
jae
xorb
icebp
lock
dec
xchg
and
xor
lock
cld
jl
fsubrs
loopne
push
movsl
sub
rol
cwtl
cmp
cmpsl
test
lcall
mov
repz
gs
cs
cmp
iret
sub
adc
dec
cmp
je
mov
add
in
pushf
add
xchg
push
push
out
pop
in
cltd
cmp
pusha
popf
hlt
ret
xchg
movsbl
icebp
xchg
js
dec
std
fs
dec
push
es
mov
shr
push
imul
adc
shll
rorb
push
insl
xchg
sti
jnp
rclb
fstps
cmp
dec
sahf
inc
mov
push
rol
mov
pusha
adc
pop
mov
rcr
jle
mov
mov
roll
mov
mov
jbe
ss
into
mov
fucom
jb
adc
mov
or
sbb
cmp
mov
add
mov
enter
pop
lds
sub
out
pop
mov
aaa
cmc
sar
or
rep
int3
mov
mov
sbb
mov
sub
cmc
jl
cmp
sub
dec
fmull
daa
xchg
das
mov
jae
mov
ror
ljmp
test
sbb
xchg
push
je
mov
sbb
xor
mov
outsb
xchg
mov
hlt
sub
add
mov
pop
mov
shll
imul
lea
mov
jo
loopne
aam
jl
jmp
cwtl
mov
test
shl
push
sahf
push
push
popa
or
xchg
loop
movsl
sbb
fidivl
add
adc
test
mov
adc
data16
mov
sbb
mov
int
add
push
lahf
push
add
lea
arpl
cmpsb
stos
xchg
jb
inc
push
adc
call
adc
mov
xlat
mov
das
mov
pop
fisttps
dec
mov
jae
xchg
sub
cmp
inc
testl
rcll
daa
imul
mov
cmp
aad
in
adc
test
aad
in
imul
push
into
out
out
adc
in
xor
sub
aaa
ret
mov
push
call
or
jmp
adc
xchg
fmul
xchg
mov
xor
shrb
pop
fadds
cwtl
pop
add
movsl
sbb
stc
jno
repz
adc
push
or
xchg
push
dec
pmuludq
adc
or
loopne
mov
aas
outsl
pop
xor
inc
dec
xchg
xchg
jecxz
adc
inc
cltd
xor
xchg
inc
mov
clc
outsb
sub
cmc
je
cmp
andl
hlt
dec
or
les
mov
stos
ficompl
pop
es
dec
add
lret
add
into
cmpsb
or
jl
cltd
cmp
push
inc
hlt
clc
cli
imul
dec
popf
mov
adc
pop
sbb
out
aad
add
pop
or
jo
xor
cltd
fs
sub
pop
dec
pop
push
leave
popf
in
pop
fsubrl
test
std
filds
pop
and
pop
popf
cmp
inc
lds
add
cmpsl
cmp
push
pop
push
pop
xor
test
inc
mov
data16
addl
add
cmpl
sub
lcall
bndldx
inc
orl
jle
icebp
mov
pop
pop
shl
je
adc
sub
in
pop
add
sbb
fcompl
jns
ret
add
fistps
loopne
pop
sub
fwait
sbb
incl
or
inc
xor
pop
cli
fidivrl
cltd
push
insb
loopne
lret
mov
lods
mov
arpl
insb
out
or
lds
fs
or
test
or
mov
mov
rcrb
xor
mov
xor
mov
xor
lds
in
jbe
lcall
aaa
adc
add
pushf
inc
outsb
icebp
mov
in
push
outsb
daa
arpl
mov
out
adc
je
test
pushf
jg
mov
xor
in
popa
inc
loop
ja
adc
jge
cmpsl
je
mov
mov
inc
sbb
push
gs
adc
pushf
arpl
mov
icebp
xchg
cmpsb
push
dec
or
ficomps
jge
ja
and
sbb
cwtl
xor
inc
jbe
xchg
iret
mov
adc
adc
add
cmp
mov
test
jecxz
pop
scas
movsl
push
imul
mov
jne
sub
ret
xor
int3
loope
movsb
xchg
cs
adc
and
loope
mov
ja
pusha
mov
and
jne
cmp
pop
int
jp
sub
or
cmp
or
mov
inc
repz
push
jns
and
jae
add
addr16
cwtl
ljmp
mov
sub
mov
dec
out
fwait
mov
scas
and
jp
jo
mov
and
xor
pop
jg
pop
jp
jle
jmp
jecxz
jno
sbb
jns
lret
testb
popf
bound
addr16
xchg
clc
push
dec
cmpsl
pop
sbb
jb
out
fwait
sub
pop
xchg
inc
add
mov
jbe
xchg
push
addr16
jecxz
shrl
jns
inc
xchg
adc
adc
shrb
int3
mov
adc
jmp
push
fucomip
repnz
aas
or
data16
mov
repz
pop
lods
xor
push
mov
enter
jle
jmp
adc
fs
dec
fsubrs
mov
scas
ret
jmp
xor
xor
pop
ss
gs
test
cmp
data16
sub
mov
pusha
mov
leave
xchg
pop
mov
sub
das
inc
pop
mov
out
rcll
faddl
mov
pop
add
leave
inc
std
mov
jmp
inc
add
movsl
cmp
pop
pop
inc
in
add
push
push
call
lcall
mov
addb
mov
push
add
fmull
pop
cs
adc
data16
mov
out
les
xchg
xchg
in
mov
jb
push
dec
pop
mov
xorb
std
dec
loopne
xchg
daa
mov
jge
fistpll
lods
cld
pop
sarb
adc
xchg
cmpb
sub
pop
je
xchg
and
and
push
jle
mov
je
xor
divl
push
dec
cmc
jmp
fnsave
jne
cmpsb
loope
loope
ret
xchg
cmpsb
int
lods
inc
pop
movsb
lock
mov
insl
test
jnp
jae
icebp
enter
jge
cmp
sub
rolb
movsb
xchg
add
minps
or
subl
fwait
jge
aaa
add
repnz
xor
add
pop
push
sub
ds
insl
pop
out
mov
je
sub
sti
inc
jbe
dec
xchg
aas
sub
enter
push
lea
loope
push
add
add
out
int3
jmp
push
in
outsb
jmp
adc
dec
jg
test
dec
out
aas
idiv
and
outsl
add
rorb
jae
mov
adc
dec
sub
add
and
loopne
inc
sbb
sti
mov
test
jbe
pop
cmpsb
clc
mov
insl
sbb
mov
push
out
sarl
push
das
pop
inc
mov
jmp
es
dec
jg
cmpsb
xchg
mov
cwtl
mov
faddl
sbb
call
pop
out
xchg
inc
push
and
jb
popa
adc
repnz
sbb
sub
mov
pop
je
clc
adc
pop
test
test
xchg
jns
mov
push
roll
frstor
loope
ds
sti
test
pop
lods
jb
inc
add
addr16
jecxz
or
ret
cli
les
scas
jnp
pop
cld
lret
sbb
mov
fldt
xor
xchg
add
jbe
mov
dec
cmp
mov
subl
xchg
and
repnz
add
sub
mov
sbb
dec
aas
aam
pop
xor
push
jle
dec
push
ss
fisttpll
cmp
and
lea
pop
and
jg
xor
fnsave
icebp
inc
add
cmp
adc
lods
xchg
pop
mov
and
xor
mov
imul
ljmp
outsb
pushl
jecxz
bound
cmp
lcall
pop
mov
xchg
sub
cmp
shrl
mov
mov
cltd
imul
cmp
aaa
xchg
subb
inc
inc
loopne
mov
shll
cmp
decl
repz
pop
sbb
test
pop
mov
mov
push
xchg
shl
dec
push
sub
cmpsb
setle
mov
or
sub
das
fsubl
js
test
sarl
dec
in
lods
out
inc
fwait
out
js
jmp
xor
stos
stos
lea
mov
sub
insl
mov
jo
scas
cs
scas
xor
pusha
loopne
sbb
test
addb
jno
jmp
adc
icebp
rcrb
ds
mov
out
and
pushf
push
imul
or
pop
stos
mov
int3
sub
adc
cmp
out
icebp
or
repnz
push
hlt
push
shlb
rorb
jo
push
mov
dec
mov
in
push
aad
ja
jae
enter
push
sub
inc
and
xor
add
imul
mov
mov
aam
mov
mov
popf
adc
je
cmp
xchg
jmp
movsb
and
pop
lock
push
fmul
pop
adc
jbe
repnz
cmp
fs
push
scas
pop
in
aas
jns
inc
cmc
test
xchg
mov
out
cli
test
push
cmp
cmp
movsl
mov
psubusw
jns
jmp
insl
lahf
mov
xlat
addb
or
scas
out
mov
fimull
xor
incb
test
jnp
ljmp
lock
mov
icebp
mov
imull
pop
cmp
test
or
add
cs
pop
hlt
lcall
movsb
push
xlat
stc
movsl
inc
pusha
mov
xor
nop
add
ret
mov
jmp
into
adc
cwtl
rclb
inc
and
repz
pop
ret
jne,pt
mov
decl
add
std
push
mulb
xor
xor
addr16
mov
adc
adc
scas
jp
fbld
and
or
jmp
cmp
cmp
repnz
dec
xor
mov
stos
scas
vmwrite
cmp
inc
out
lods
in
jle
psubusb
push
sbb
outsl
test
lds
test
jle
push
out
jle
or
mov
jnp
adc
push
ss
mov
std
push
insb
hlt
mov
cmpsb
jmp
fwait
into
push
and
lds
es
push
mov
stos
rorl
inc
mov
inc
or
jg
loope
das
add
inc
testl
push
push
sub
xor
jle
xchg
lods
xchg
jb
jle
inc
mov
mov
sahf
cmc
inc
add
insb
mov
insb
fisttpll
fwait
es
pop
loope
sub
repnz
mov
cmc
stos
les
popa
or
and
pop
mov
imul
sbb
icebp
xchg
jp
xchg
movsl
sub
push
jns
scas
inc
jecxz
sub
and
and
fisubl
aas
mov
jp
adc
adc
dec
repnz
stos
push
out
pusha
add
push
mov
add
mov
aad
lds
sti
mov
or
pusha
sub
mov
movsl
cmp
sub
test
xor
mov
inc
mov
pop
sarb
adc
repnz
xor
addr16
cmp
xor
pop
inc
xchg
mov
scas
push
sub
jp
mov
pop
sbb
push
dec
add
push
les
inc
cmovbe
and
pop
cmc
xor
add
enter
je
fs
iret
iret
jmp
in
sbb
fisubrs
aad
ja
mov
loopne
jnp
add
push
fstpl
mov
int3
popf
int3
fwait
cmp
mov
roll
mov
leave
xchg
xchg
je
stc
pop
or
pop
xor
lahf
in
pop
stos
jge
dec
pop
add
jo
loop
mov
mov
cmp
rcrb
jno
loope
and
adc
je
push
or
movsb
sub
lcall
leave
scas
pushf
pop
sbb
inc
or
outsl
xchg
mov
add
pop
das
mov
movsl
insb
int
jnp
iret
popf
in
cmp
or
lahf
mov
fs
cmpsl
testl
imull
out
ftst
lds
imul
and
inc
test
xor
mov
push
mov
add
jns
adc
nop
mov
adc
xor
loop
test
jbe
aaa
jecxz
and
sahf
push
jle
sbb
mov
add
into
call
iret
mov
mov
pop
pop
dec
adcl
call
movsl
jp
inc
enter
test
pop
scas
mov
out
add
mov
add
xor
mov
sarl
movsb
cmpsb
fwait
push
jg
push
dec
pop
mov
lret
mov
outsl
jae
movsb
jbe
lcall
in
adc
scas
imul
xor
aas
and
insl
dec
mov
fsubs
sub
pop
movsl
inc
cltd
lret
cmp
fisubs
ss
sub
movb
dec
jle
push
mov
rcrl
sbb
mov
fsts
push
loopne
or
in
xchg
rorb
fwait
fwait
cmp
pop
adc
adc
sbb
loop
mov
jns
popa
pop
dec
test
fisubs
add
mov
sbb
js
add
jecxz
call
int3
xchg
je
andl
je
push
sub
enter
jmp
aam
sahf
sbb
lods
test
sub
les
jmp
dec
jp
pop
outsb
pop
daa
cmp
pop
adc
ret
jns
mov
push
jns
jne
imul
in
xor
push
mov
insb
mov
pushf
or
addl
mov
rorb
mov
sbb
inc
in
and
xchg
mov
adc
hlt
mov
cmp
js
scas
or
mov
sbb
test
cli
xor
push
nop
loop
adc
or
cmpsl
mov
push
bound
adc
mov
cmp
cltd
ds
xor
mov
call
daa
add
dec
lret
mov
popf
push
test
jns
cmp
ds
mov
test
xlat
clc
loopne
and
out
push
pcmpgtw
inc
scas
mov
dec
mov
add
add
or
push
cmpsb
sbb
incb
shl
xor
nop
jne
imul
jp
test
sbb
enter
jl
iret
fimuls
push
xchg
cmc
and
addr16
fiaddl
and
pop
test
jo
adc
push
lea
rcll
stc
inc
xchg
stos
xlat
bound
leave
and
fadd
push
cld
xchg
nop
dec
pop
test
cltd
pusha
loopne
iret
cmpsb
or
dec
jecxz
fwait
gs
stos
xlat
sub
les
js
pop
lock
add
xor
xchg
fs
out
subl
rcl
popf
jno
std
pop
lcall
push
mov
popf
add
adc
cld
mov
repz
push
sbb
add
jne
mov
sub
out
sbb
sbb
xchg
push
cli
je
xchg
ret
popl
into
imul
stc
mov
xchg
adc
pop
mov
jb
imul
repnz
mov
adc
test
or
sahf
dec
pusha
dec
push
xchg
or
push
shll
sti
adc
mov
sbb
and
cmp
vpavgw
pop
push
test
cmp
cmp
test
or
ljmp
add
xchg
ret
and
in
dec
fwait
test
rcrb
out
gs
mov
jo
push
scas
sub
and
jno
adc
out
xlat
add
sti
paddusb
iret
cmc
fidivs
mov
mov
js
push
in
icebp
pusha
scas
xchg
lock
cmp
cwtl
mov
aam
lret
iret
sub
arpl
mov
repz
das
rol
pop
into
out
add
jns
mov
lret
mov
sub
mov
xorb
add
or
xlat
dec
pop
insb
adc
inc
inc
sbb
push
hlt
mov
stc
dec
clc
jb
orb
adc
mov
mov
xchg
sub
mov
pop
sbb
add
ja
shr
mov
fldl
mov
icebp
stos
dec
or
or
pop
xlat
mov
lcall
clc
pop
push
or
dec
movsb
xchg
outsb
data16
pop
scas
xor
mov
pusha
pop
lock
push
sub
mov
leave
lods
and
push
popf
add
imul
data16
in
xchg
add
loop
mov
shll
xchg
pusha
out
mov
decl
loop
or
leave
jle
mov
dec
push
shll
out
loopne
andb
clc
subb
jbe
aad
dec
cli
out
sahf
add
sub
push
bound
in
enter
stos
mov
int
mov
rorl
lcall
jne
outsl
das
daa
stos
in
jns
pop
pop
jb
or
xchg
cld
adcb
shrb
cmp
cmp
ja
or
mov
call
cmp
mov
leave
pop
stc
sbb
into
out
mov
jo
xlat
xchg
and
flds
sbb
in
imul
cmc
dec
ljmp
jge
xchg
aad
pop
push
roll
mov
jmp
shll
xchg
push
xchg
sbb
mov
jne
psubsb
imul
and
xor
lcall
jge
les
int3
push
xor
mov
sbb
xlat
push
setbe
cmp
or
leave
mov
movsb
stos
inc
mov
xor
jp
dec
push
push
dec
out
push
fdivl
push
hlt
out
pop
push
xchg
repz
fmuls
mov
pop
in
cwtl
mov
out
cld
dec
rclb
int3
std
mov
mov
inc
jbe
push
pop
mov
les
and
xor
scas
leave
lret
inc
jno
push
push
repz
inc
sbb
movsl
mov
dec
in
ja
ds
ja
hlt
std
inc
stos
push
cmp
das
or
lcall
pop
ss
jge
test
test
or
push
mov
sub
inc
sub
jno
pop
push
in
cmp
ljmp
dec
jle
or
or
inc
in
and
mov
stc
in
clc
push
in
lret
test
add
fisubl
inc
pop
cli
scas
movsl
jno
xchg
call
loop
cmp
sub
and
inc
cwtl
cwtl
and
das
popf
mov
dec
adc
dec
daa
movsb
pop
add
sarb
cmp
pop
xchg
sbb
cmpsl
icebp
mov
inc
push
sub
mov
cmpsb
cmpsb
adc
jne
mov
inc
fsubr
cltd
sub
push
inc
lock
mov
in
mov
sbb
rclb
pop
xchg
sbb
xor
mov
sahf
cli
test
lcall
sub
fstps
push
pop
fstpl
push
frstor
aad
cltd
ja
xchg
dec
hlt
or
mov
popa
pop
daa
nop
jo
dec
xor
shlb
lret
mov
and
push
fisttpll
fiadds
pop
scas
add
cmp
fs
int3
dec
sub
imul
notb
xchg
rclb
add
addr16
outsl
cli
cs
les
stos
xchg
fcomps
xchg
mov
adc
sbb
or
add
jae
jnp
lea
lcall
shll
xchg
cmp
mov
bound
mov
sahf
addl
push
xor
xchg
out
mov
add
sub
pop
lock
xor
pop
xchg
addr16
xchg
pop
dec
insb
vpmacswd
jb
mov
sbb
pop
call
adc
mov
cmp
dec
pop
in
mov
inc
rolb
push
subl
pop
adcb
mov
or
iret
inc
movhps
cmpsl
xor
xor
fistpl
adc
jecxz
and
outsl
xchg
ljmp
xchg
shl
sbb
ja
mov
in
sub
fmull
adc
bound
aaa
dec
adc
adc
enter
push
jmp
add
insl
sarb
shrl
or
in
sub
xor
fcmovu
fcos
inc
out
pop
adc
mov
sahf
pop
dec
pop
dec
test
xchg
jg
in
xchg
icebp
mov
mov
mov
pop
lock
int3
cmp
mov
lock
outsb
cmp
rdtsc
addl
sbb
adc
out
xor
sbb
add
pop
adc
lds
fisttpll
shll
or
aad
dec
adc
insb
jnp
xchg
xor
mov
jns
cmp
ror
shrb
and
pop
insb
and
sub
repnz
sub
sub
adc
cmpsb
movsl
dec
mov
mov
loop
cld
dec
loop
icebp
xchg
jg
shlb
jno
jmp
jb
daa
pop
dec
mov
push
fdivp
ja
inc
and
push
jecxz
mov
pop
out
clc
mov
pop
sarl
andl
gs
sbb
xor
xchg
pop
test
mov
arpl
icebp
mov
sbb
ficoml
mov
cmp
push
dec
loope
mov
adc
hlt
mov
push
fucomi
cs
notl
jb
imul
jns
adc
cld
push
divb
popa
test
adc
cld
push
mov
bound
xchg
adc
xor
data16
sbb
pop
popf
mov
stos
xchg
addr16
dec
push
loope
loope
cwtl
imul
cmp
sbb
dec
and
jge
lods
jecxz
mov
add
push
add
aas
mov
pusha
pop
inc
outsl
movsb
scas
repnz
lahf
fwait
idivl
xor
mov
test
movl
outsl
mov
jns
arpl
push
inc
jae
add
ret
inc
lods
repz
out
orb
lret
scas
jle
and
cs
cs
mov
jmp
push
add
outsb
arpl
mov
mov
mov
arpl
nop
mov
rol
and
xchg
div
notl
fmuls
bound
insl
xor
ret
out
cmpsl
cmpsl
inc
add
aas
clc
daa
je
dec
or
push
or
jnp
in
js
das
and
inc
sbb
pop
flds
push
addb
jnp
xor
push
inc
out
leave
shlb
push
inc
and
ret
add
and
sub
test
mov
in
adc
fldcw
mov
sbb
pop
mov
shlb
xor
xor
xor
xchg
push
fdecstp
pop
enter
cmp
xor
xchg
push
int3
insb
jno
push
lock
bound
jmp
sbb
loope
movsl
sub
xchg
testb
shlb
dec
sub
aaa
pop
sbb
mov
mov
inc
mov
scas
call
inc
cs
stos
aad
or
sub
or
inc
or
mov
pop
int3
mov
dec
sahf
or
test
test
mov
mov
and
inc
ds
add
icebp
mov
jno
scas
pop
mov
fdivl
inc
movsb
popf
mov
pop
push
jno
pop
cmp
jae
mov
cmp
pusha
shrl
cmpsb
adc
or
mov
fsubp
outsb
pop
push
pop
push
xor
fmull
xlat
sbb
mov
pusha
xor
xor
movsb
in
cmp
jge
add
cmp
cmpsl
sbb
out
iret
xor
loope
popaw
adc
aaa
pop
rorl
pop
adc
xchg
mov
dec
push
or
in
cli
and
lret
jno
or
sub
xchg
xchg
enter
and
js
lds
xchg
popa
jle
pop
dec
in
shl
jne
sbb
sub
cmp
data16
add
xchg
push
pushl
jnp
repz
push
push
fcomp
mov
lahf
mov
cmp
pop
andb
lock
lea
or
movsb
ret
rcr
mov
enter
shll
xor
repnz
inc
cmp
stc
test
les
mov
jg
in
adc
test
rcrl
jg
orl
cmp
shlb
mov
jae
mov
aam
lds
ds
in
push
push
outsb
sub
cwtl
xor
push
pop
out
ljmp
sub
cwtl
into
or
pusha
mov
and
iret
ret
jl
dec
stos
xlat
dec
xor
cmc
or
aad
mov
mov
mov
dec
pop
push
jns
xchg
jbe
and
cmp
lods
sbb
lods
aas
jne
pop
add
mov
call
inc
or
popf
scas
xchg
popa
mov
and
add
mov
xor
jl
push
daa
notl
xor
add
cmp
mov
add
mov
or
mov
lcall
cmpsb
lret
or
and
mov
orb
jmp
daa
data16
notl
lea
dec
scas
andl
popa
bound
or
vmwrite
or
rcll
mov
add
jmp
cli
loope
ljmp
hlt
pop
nop
lock
xor
bound
fs
pop
fs
mull
xchg
xchg
and
stos
push
nopl
bound
adc
jns
sti
clc
or
out
stos
cmpb
push
lods
add
out
mov
stos
frstor
lea
mov
sbb
scas
rol
imul
jmp
jecxz
jns
or
jbe
lods
outsl
addl
lret
outsb
jae
xor
push
xor
xchg
jge
outsl
inc
jecxz
roll
mov
in
mov
mov
ret
mov
pusha
rclb
pop
shl
add
or
jmp
sti
push
iret
enter
xlat
mov
stos
mov
and
aaa
faddl
cmpsb
movsb
adc
pop
pop
sbb
sub
jecxz
pop
mov
jns
sub
aaa
adc
mov
data16
mov
shrb
ret
xchg
push
testb
mov
dec
mov
pop
adc
paddusw
mov
outsl
das
or
adc
leave
jno
clc
pop
pop
xchg
mov
adc
adcl
jne
nop
pop
push
sbb
test
addr16
leave
shrl
hlt
imul
xor
ret
sub
xor
add
rcrl
pop
or
dec
data16
scas
into
arpl
and
push
cmp
in
in
push
bound
xchg
cmp
sbb
xchg
jmp
sti
inc
push
lcall
pop
cmc
jo
sub
jae
jecxz
dec
cmp
sub
fidivl
je
xorb
stos
ret
clc
lret
rolb
jae
gs
dec
jle
aas
and
int3
add
inc
xchg
dec
jns
fldl
mov
test
cmpsb
adc
push
inc
mov
in
ljmp
loope
shll
cmp
cld
mov
sbb
xor
dec
sub
pop
pop
jne
jl
ret
and
inc
or
jae
pop
jmp
jle
pushf
das
gs
push
inc
cli
arpl
subl
jp
outsl
fists
dec
cli
cltd
in
int3
lret
xchg
out
xchg
js
outsb
jle
cmc
nop
pop
test
jp
into
dec
or
pop
aaa
xchg
sti
ds
xor
cwtl
lea
lahf
ljmp
dec
sbb
inc
jge
inc
fmuls
lcall
negb
sbb
inc
fistpl
insl
inc
ret
gs
fmull
mov
call
es
jnp
pop
test
sbb
outsb
mov
or
xchg
add
ret
mov
imul
sbb
mov
cmp
leave
add
sarl
in
dec
fcmovnbe
fstpl
cmp
mov
lods
das
cwtl
or
or
jne
sarb
test
loopne
int3
inc
pop
jge
xchg
cmp
cmp
cmpsb
push
cmp
xlat
inc
loop
adc
shll
std
jmp
add
bound
mov
aad
pop
pop
adcb
in
and
test
push
sbbl
adc
popa
inc
inc
jae
sbb
xchg
sub
in
cmp
dec
sbb
leave
and
push
push
inc
mov
xchg
pop
pop
ret
jno
inc
pusha
mov
mov
ret
jnp
pop
jp
sbb
sbb
xchg
jg
lds
sub
das
aas
mov
bnd
sarl
sub
test
push
cmp
xchg
sbb
loope
pop
loopne
pop
mov
inc
insb
lret
jg
pop
pushf
lock
sub
outsb
xor
mov
into
fidivl
adc
xchg
sbb
and
imul
jne
clc
adc
jmp
mov
daa
insb
push
fdivs
fidivs
sbb
cmc
int
pop
sub
pop
mov
adc
jle
inc
adcb
aas
dec
inc
test
xor
push
mov
inc
mov
cmp
ja
je
fwait
ljmp
mov
outsb
ss
loope
jne
call
mov
leave
movsl
aaa
pop
xchg
pop
adc
push
aam
cmp
shrb
into
and
daa
jmp
xor
push
sbbl
aas
fimull
pop
add
push
std
ljmp
dec
pop
jo
add
dec
hlt
adc
jmp
std
imul
lock
sahf
mov
outsb
xchg
sbb
lret
push
mov
adc
xor
push
xchg
pop
inc
push
ds
imull
movsb
jg
jmp
out
dec
call
xchg
mov
pop
inc
clc
mov
hlt
sti
mov
das
push
das
mov
dec
adc
lret
mov
lret
inc
cmp
sub
out
mov
push
sbb
mov
jo
rcll
mov
dec
pop
jo
cmc
ja
inc
in
sub
xchg
fwait
add
sub
cmpsb
lea
enter
sbb
in
addl
das
xor
xor
sub
cmp
lret
aaa
adc
divb
hlt
cmp
xchg
scas
xlat
xor
or
insb
cvttps2pi
cmp
adc
mov
test
cli
xchg
adcb
daa
push
sub
pop
and
dec
mov
fildll
mov
inc
xchg
pop
xchg
dec
pop
mov
mov
sbb
or
cld
aad
xchg
sbb
jb
cmp
xlat
mov
ds
stos
cmp
repnz
push
pop
daa
push
add
iret
xchg
fsincos
in
add
mov
test
gs
pop
ss
lods
es
sbb
pop
fldenv
xor
popf
add
and
xchg
rclb
cwtl
sub
dec
push
lea
cld
jl
pop
popf
leave
jmp
push
sbb
and
int
push
sub
outsl
aaa
mov
cmpsb
xchg
add
sti
mov
js
pushf
xchg
in
add
mov
push
test
orb
pop
jmp
mov
xchg
pop
stos
and
pop
adc
push
ret
push
rorb
scas
hlt
xor
xadd
adc
ret
jmp
mov
es
inc
imul
push
pop
add
data16
xchg
test
cmp
or
cmp
xchg
jl
ds
add
outsl
shlb
xchg
cwtl
js
dec
adc
fsubl
xlat
inc
mov
sarb
xchg
and
lods
and
neg
sbb
push
mov
fcoms
notb
fwait
dec
mov
jnp
pop
sub
imul
push
testb
cwtl
push
out
movsl
jecxz
jne
xchg
xor
mov
mov
popf
lea
out
mov
dec
xor
jnp
popa
std
daa
jmp
inc
outsb
xor
jmp
lcall
xor
enter
mov
push
hlt
repz
sahf
push
cmp
adc
lret
pop
xor
inc
pushl
mov
lock
aad
inc
imul
mov
arpl
in
enter
and
pushf
mov
lahf
xchg
dec
push
pop
outsb
ljmp
dec
jno
jnp
lret
jmp
scas
ja
jmp
mov
mov
mov
lods
sub
xlat
imul
push
mov
sbb
testb
in
lea
clc
sub
adc
int3
add
ds
adc
rcrl
clc
movsl
and
psraw
fstps
scas
in
mov
movsl
mov
pushf
xchg
cli
pushw
push
inc
push
cmp
nop
xor
mov
mov
jmp
sub
js
and
int3
jo
jl
adc
stc
lret
sbb
jbe
xor
cmp
add
and
pop
push
push
cmp
xor
repz
inc
sti
dec
ror
push
jl
pop
divl
push
repnz
lock
push
push
push
jmp
inc
arpl
sub
aas
add
pop
adc
push
stc
in
cltd
notb
adc
add
cs
repz
in
lds
and
leave
int
mov
jnp
mov
dec
pop
sbb
xor
insl
iret
mov
pop
loop
or
cmp
scas
xchg
loopne
pop
push
dec
cmp
push
sub
mov
sbb
push
dec
or
xchg
scas
inc
mov
stos
lcall
jns
and
es
je
repnz
or
inc
sub
int3
jecxz
push
into
jge
data16
or
jae
xor
xchg
jg
jae
scas
pop
out
rcll
dec
mov
adc
push
inc
ret
movsb
xchg
jmp
mov
rorb
adc
adc
pop
jle
adc
cmpsb
mov
outsb
shl
ret
adc
push
sbb
sub
mov
out
lods
pop
cmp
cmp
sbb
mov
addb
mov
mov
fsubrs
arpl
dec
call
test
jno
int
js
test
sub
cmp
xchg
scas
push
xchg
outsb
adc
pushf
xlat
insb
jo
popa
ret
pusha
jmp
jno
scas
adc
shll
jmp
fs
pop
negb
sbb
addb
jmp
mull
cmp
ret
cs
paddsb
jo
orl
pop
pop
xchg
movsl
nop
loopne
jae
int3
sahf
in
push
icebp
xor
lahf
cld
sub
pop
jp
and
jb
push
divb
push
mov
inc
imul
pop
xor
pop
aam
add
xor
add
insb
cld
int
cmp
gs
xor
addr16
mov
sbb
rcr
ss
stos
data16
mov
jg
movsl
clc
xor
mov
pop
and
stc
rol
mov
subb
or
or
jmp
aas
and
inc
adc
or
jnp
ds
mov
ss
sbb
daa
pop
push
fidivl
sbb
out
push
xchg
mov
in
and
cmp
xor
icebp
stos
xor
repz
ficoms
mov
notl
pushf
std
dec
xlat
mov
sub
pop
dec
das
into
push
pop
sbbl
dec
lret
pop
loop
xchg
imul
sub
mov
in
mov
mov
push
mov
test
push
enter
lods
cli
jb
push
pushf
in
push
icebp
push
xor
jmp
mov
cmp
shl
daa
xor
out
mov
push
aas
inc
or
idivb
pushf
push
pop
std
repz
or
sbb
int
mov
fld
lret
xchg
scas
or
cmp
xlat
out
jmp
jmp
mov
xor
fnstsw
sbb
add
dec
cli
dec
shl
in
in
movsb
bound
adc
pop
cmp
mov
aad
jne
addb
xlat
movsl
push
int3
and
repnz
pushw
lods
add
mov
fcompl
pop
jle
ja
lea
icebp
hlt
imul
std
adc
call
inc
inc
addl
pop
dec
jge
ret
scas
movsl
test
enter
pop
leave
movsl
hlt
outsb
test
rcll
add
fnstsw
jae
daa
mov
jecxz
daa
inc
dec
sahf
mov
mov
mov
fldt
xchg
sub
xchg
push
sbb
rorl
xlat
iret
pop
shlb
pop
lret
jnp
daa
cmp
into
push
or
fcomi
xor
mov
not
sbb
das
test
mov
pop
cmp
jo
in
mov
pusha
dec
and
xor
in
outsb
pop
push
cmp
cmp
in
or
cli
inc
fcomps
push
pop
or
out
jge
push
pop
add
jg
sti
repz
dec
fcomip
xor
xchg
sbb
inc
cld
sub
pop
loopne
cmp
dec
mov
cmpsl
pop
stos
sbb
int
inc
sbb
jbe
adc
mov
adcl
je
push
lods
or
ja
xor
aaa
adc
mov
imul
mov
sub
out
cmp
les
dec
sar
ss
call
aas
aas
mov
lcall
or
add
in
es
pop
push
lods
lea
fsubrl
jge
add
jmp
sahf
mov
inc
lret
imul
cld
imul
insl
into
pop
test
pop
inc
sbb
stos
daa
hlt
mov
inc
movsb
jmp
fstpl
aam
loop
pand
das
stos
and
test
das
push
adcb
movb
mov
repnz
sbb
ret
dec
popa
cmp
and
push
cld
adc
ljmp
jmp
movsb
jle
and
dec
outsl
loope
aas
sub
loopne
cltd
arpl
inc
loope
ljmp
dec
je
outsl
dec
bound
or
inc
idivl
rorl
push
sbb
mov
sahf
lcall
mov
xchg
bound
and
fwait
mov
pop
and
fstl
mov
cmp
les
mov
cli
arpl
push
ss
mov
mov
add
js
cmpsl
jg
sbb
mov
dec
or
lahf
and
add
mov
fwait
xchg
scas
mov
clc
cmp
sbb
xor
or
loopne
push
ret
sub
popf
bound
mov
loop
popf
inc
mov
fstl
ljmp
pop
adc
sbbl
mov
mov
xor
stos
fs
pop
hlt
in
mov
in
xchg
je
xor
mov
ljmp
cltd
lret
sti
mov
jbe
sbb
jmp
push
mov
andb
mov
push
arpl
xor
adc
icebp
sbb
repnz
push
cs
mov
nop
sbb
mov
ds
clc
rorl
xchg
xor
lods
sbb
loope
rcll
dec
sub
mov
sub
cmp
cmp
xlat
pop
lret
in
mov
inc
xchg
jo
cmp
xor
aam
jp
dec
pop
loope
in
xor
sub
dec
xor
fwait
int
pop
pusha
inc
mov
xchg
push
push
loopne
stc
imul
add
leave
cmp
leave
loop
xor
mov
notl
xchg
movl
lock
inc
scas
jb
mov
imul
cld
mov
inc
xchg
cmp
loopne
ret
ret
sbb
adc
test
movsl
test
add
lahf
pusha
inc
fdiv
enter
cmpb
dec
jnp
pop
cmp
pop
out
and
lret
ja
adc
push
paddw
pop
out
push
inc
in
pop
sbb
clc
es
loopne
cwtl
jae
aam
or
clc
ret
jb
mov
xchg
mov
and
sub
dec
scas
jnp
add
inc
add
ret
popf
adc
pop
scas
outsb
add
cmpsl
fimuls
add
xor
scas
leave
dec
mov
jg
lret
out
jecxz
and
cmp
fisttpll
xchg
push
imul
pop
iret
push
mov
sub
push
and
inc
inc
mov
imul
jmp
int3
cmpsl
fbld
and
jnp
cmc
ljmp
mov
cmpb
cmpb
jg
inc
call
rorl
mulb
inc
leave
paddsb
cld
nop
inc
lret
adc
orb
movsb
xorb
cld
cmp
jecxz
inc
sub
xor
sbbb
or
enter
jnp
test
lods
lret
mov
lea
sub
pop
xor
adc
pop
push
adc
xor
mov
pop
loopne
out
popf
mov
mov
inc
mov
cli
add
cmpb
fcom
add
lods
cmpb
mov
push
jno
fdivrs
dec
sub
jnp
pop
jg
mov
sarl
pushf
or
jae
add
aam
mov
mov
adc
roll
inc
xor
mov
es
dec
pop
mov
cmp
clc
rcrb
push
pushf
or
ljmp
jp
hlt
xchg
dec
incb
mov
pop
pop
jle
ss
dec
mov
fisttpll
pop
mov
push
cmp
adc
les
int
jb
jno
add
pop
stos
sbb
fnstsw
sub
ljmp
faddl
xor
out
repnz
push
and
xor
loopne
dec
fs
es
lods
fwait
pop
dec
or
mov
jno
xor
sub
pop
or
and
and
nop
xor
repz
aaa
gs
outsl
fldenv
loopne
xor
xor
add
frstor
call
push
outsl
into
cmp
loop
push
enter
add
ja
clc
sub
xchg
lret
in
xlat
jns
pop
lods
or
lods
bound
jno
loop
aam
in
aaa
shlb
sub
inc
push
mov
mov
jne
push
xor
xchg
pushf
shrb
jle
jle
xlat
rcrb
mov
adc
mov
mov
ror
push
movsb
push
insb
or
outsl
pop
ss
or
dec
and
flds
out
and
mov
pop
idivb
cld
dec
cmp
push
js
adc
jne
imul
xchg
out
pop
push
pop
cmp
push
pop
mov
mov
mov
in
xchg
out
test
mov
pusha
shlb
pop
add
cmp
jecxz
add
pop
push
bound
into
push
jno
imul
add
or
add
dec
push
sbb
mov
sub
xchg
sbb
xchg
scas
lock
jne
clc
in
gs
out
outsl
mov
call
fsubrl
iret
cmp
lods
rcrl
cmpsl
fdivl
jae
push
mov
repnz
je
sbb
lret
and
pop
add
addr16
sahf
imul
cmpsb
subb
push
das
push
cmp
push
sub
xchg
cmc
pop
and
or
dec
mov
cmp
dec
push
inc
cmc
fcomps
into
aaa
jg
dec
call
mov
push
cmpb
and
scas
and
push
fst
jno
pop
xchg
and
add
sub
adc
fsubr
pop
lds
movsb
inc
and
shrb
add
cmp
add
rorb
stos
jle
sbb
mov
jno
jno
ljmp
int3
sti
mov
sbb
or
jns
aas
js
or
xchg
mov
cs
mov
cltd
push
inc
dec
rcrb
mov
cmpb
cli
and
pop
mov
popa
xchg
adc
jle
xorl
push
adc
jno
fwait
dec
lods
ret
pop
out
ljmp
std
jecxz
popf
xchg
push
push
fwait
into
jp
push
dec
mov
jae
icebp
scas
loope
mov
push
dec
jns
movsb
jge
loope
sahf
ss
loope
xchg
loope
gs
inc
scas
shrl
decb
inc
dec
mov
dec
xor
mov
fistl
into
xlat
ret
in
pop
mov
out
aad
inc
int
aam
xchg
add
clc
lods
push
mov
fwait
ja
lock
mov
mov
mov
xor
lret
xor
out
sub
mov
mov
je
adc
call
push
out
xchg
mov
add
cmp
mov
outsl
cmp
jmp
jnp
popa
out
mov
and
pusha
pop
jge
push
or
jmp
loopne
psllw
mull
insb
jns
cmp
dec
adc
add
popa
int3
pop
ja
pushf
and
test
leave
nop
dec
rolb
and
sbb
sti
rcl
rorl
adc
mov
adc
fstp
stc
inc
popa
xchg
fistps
xchg
lods
mov
loop
cmp
aad
jbe
fistpl
mov
rorb
out
mov
rol
add
adc
repz
loop
icebp
add
insb
test
inc
sub
or
cltd
aad
push
test
jle
out
mov
outsb
pushf
stos
fwait
mov
roll
sub
sbbb
outsl
fs
rclb
cltd
addr16
lret
jle
rolb
and
mov
dec
rorb
mov
mov
test
and
shlb
sbbb
jo
pop
jg
dec
jmp
test
mov
mov
xor
xlat
inc
fs
pop
ljmp
mov
pop
xlat
dec
and
ja
ja
pop
cmpsb
or
mov
pop
xor
paddq
insl
mov
roll
shll
test
add
enter
mov
jl
mov
inc
ds
push
mov
outsb
pop
xor
mov
pop
inc
sbb
les
decl
mov
inc
lcall
mov
movsb
cmp
mov
mov
jmp
cli
outsb
or
jl
cmp
jg
outsl
test
fldl
mov
in
adc
addr16
insb
addr16
push
dec
mov
into
dec
push
scas
jbe
repnz
incl
rol
js
mov
scas
pop
outsb
je
stos
cwtl
fistps
outsb
xor
in
out
and
pushf
pushaw
xchg
and
mov
cli
or
mov
subb
push
sub
ljmp
mov
aad
cmp
xchg
ja
call
sahf
test
push
outsb
pop
xlat
das
scas
jmp
cmp
out
jle
mov
mov
popf
inc
adc
loopne
jmp
xchg
mov
cmp
push
shll
adc
fimull
arpl
dec
jl
inc
jo
pushf
js
push
into
fcomps
dec
push
jge
adc
pop
cmp
lcall
dec
mov
cmp
ljmp
in
jne
xchg
push
outsb
pop
cmp
add
xchg
mov
cmp
aam
lahf
jle
iret
cltd
xchg
sbb
in
cmp
nop
mov
xor
xlat
mov
pop
clc
les
shll
sbb
xchg
dec
lods
loop
lods
dec
and
xor
adc
push
cmp
andl
lret
cli
movsb
push
stc
fisubrs
pop
cmp
xchg
pop
leave
adc
mov
adc
adc
pop
adc
js
xor
lea
adc
pop
xchg
imul
jle
les
jnp
jp
sub
xor
negb
jmp
dec
andl
icebp
mov
add
ja
lock
out
and
sbb
or
mov
push
out
fs
or
xlat
pop
add
shrl
pop
mov
clc
mov
out
test
test
jp
leave
test
repnz
ret
mov
test
out
les
xchg
pushf
loopne
pop
lds
das
into
mov
fwait
push
negb
movsb
xchg
in
dec
imul
stc
mov
imul
inc
imul
lret
jo
aad
aad
loopne
cmc
sbb
int3
mov
cmp
hlt
lcall
incl
mov
data16
or
sbb
pop
aam
sbb
lret
push
das
repz
xor
xchg
dec
enter
lods
lods
in
dec
jg
sbb
and
adc
rcr
repnz
jl
mov
pop
mov
pusha
cmp
mov
inc
or
gs
fwait
in
ror
push
push
push
xchg
dec
dec
je
cltd
pushf
mov
mov
pop
and
sub
testb
xchg
dec
jl
stos
testb
jl
dec
std
mov
adc
out
repnz
mov
mov
push
or
mov
add
jmp
mov
fsubs
test
ret
aas
push
pop
scas
ja
ret
pop
sub
int
testb
ficompl
popf
jle
cmp
sub
xor
and
mov
dec
sub
fcmovnu
sbb
shl
push
xorl
repz
addr16
call
xchg
mov
inc
fimull
lods
pop
jp
inc
jg
xchg
imul
shlb
imul
sub
sbb
ficomps
cmp
cs
sbb
imul
xlat
xchg
jb
and
mov
lret
fwait
out
inc
pop
mov
and
jle
data16
jne
movsb
add
dec
adc
test
imul
mov
sbb
mov
scas
sbb
arpl
mov
push
test
and
xor
xchg
lahf
lret
addr16
jmp
shrb
xchg
inc
scas
push
and
jae
cmp
xor
mov
fsubl
dec
enter
jmp
jo
or
push
xchg
std
rcrb
into
add
mov
dec
stos
cli
das
clc
insb
xlat
mov
ljmp
mov
xor
xchg
add
xorl
pop
cmp
dec
test
and
loopne
testb
xor
lret
push
push
push
push
adc
ficoml
adc
pop
or
sub
pop
mov
mov
mov
xchg
mov
xor
mov
mov
and
xchg
add
aas
push
dec
inc
cld
aam
mov
aas
inc
xlat
repnz
mov
test
or
dec
inc
add
push
je
xchg
mov
subl
add
dec
push
data16
adc
repnz
bound
jmp
or
cmpsb
ss
mov
push
bnd
aad
fadds
and
cmp
sub
and
leave
outsl
adc
cmpsb
pop
sbb
adc
out
add
sub
xchg
fnstenv
sub
inc
jecxz
jge
inc
fcoml
test
mov
jbe
fs
lock
pop
sbb
test
mov
hlt
push
fildll
bound
lcall
aam
shrb
jl
push
ror
push
push
and
jecxz
popf
fs
ljmp
popf
loope
leave
sar
rcll
popf
mov
fidivrl
leave
pop
add
outsl
shr
cwtl
push
divl
dec
mov
mov
dec
jns
fidivs
lcall
push
dec
dec
mov
xchg
aam
or
jns
int
adc
lret
lcall
jl
inc
jmp
or
icebp
pop
arpl
sbb
push
dec
ss
mov
clc
jmp
sbb
cld
xchg
push
sub
jmp
int
push
adc
mov
cmp
dec
scas
mul
cmpsb
pop
inc
rcll
daa
test
aam
pop
and
sbb
cmp
test
xchg
and
xor
inc
ds
mov
jp
or
clc
adc
xchg
and
int3
mov
push
and
stc
dec
jge
pop
jmp
call
push
jl
inc
cmpsl
pop
jmp
lret
in
int
imul
inc
rcrb
xchg
test
mov
subl
mov
ljmp
and
pop
cli
mov
adc
and
xchg
cli
jns
rolb
aas
jecxz
xchg
das
leave
xchg
xchg
in
test
out
repz
pop
mov
mov
faddp
or
jecxz
or
enter
fs
je
aas
dec
dec
xor
aad
in
push
xchg
fwait
nop
jecxz
lods
lahf
sub
in
push
lret
lods
add
push
jo
dec
and
repz
js
sub
inc
fsubs
lds
lea
cwtl
fwait
mov
mov
pop
push
push
out
xchg
loopne
nop
dec
lea
jmp
les
and
lds
pop
mov
pop
rorb
shrb
jb
sahf
imul
enter
test
rorb
or
jl
add
dec
mov
fwait
movsl
mov
pop
jae
jp
mov
pusha
addr16
popf
stos
sbbl
mov
js
and
in
sahf
jno
iret
cld
sbb
in
bound
cmp
adc
mov
mov
pusha
mov
pop
pop
cmpsb
mov
hlt
popa
les
cli
cs
push
xchg
xchg
push
xchg
test
pop
dec
dec
mov
lret
sarb
mov
sbb
and
pushl
jns
ret
inc
mov
stos
inc
dec
jl
xchg
sbb
das
mov
pop
jns
adc
sbb
ja
mov
mov
pop
cwtl
cwtl
cmp
push
pop
pushf
cmc
repnz
or
dec
dec
and
rcll
rcrb
push
leave
mov
ret
or
ja
lcall
aad
and
sti
decl
adc
rorl
jne
pop
jle
mov
sub
jg
jbe
arpl
call
xchg
cwtl
and
les
cmovl
jae
mov
fstpl
movsb
mov
adc
xlat
xchg
aas
mov
gs
cs
or
rolb
mov
das
pop
push
int
scas
inc
ja
mov
lock
inc
mov
cwtl
mov
xor
jge
fsub
stos
mov
adc
jg
push
imul
mov
das
rclb
and
scas
dec
stos
ljmp
outsb
pop
jo
mov
cli
dec
lahf
push
enter
fmul
cli
and
add
movsl
push
xchg
stc
pop
out
adc
test
sbb
out
jecxz
pop
cmp
add
push
push
out
xor
outsl
push
mov
xchg
leave
xor
shr
mov
loope
push
int
and
adcb
mov
cmp
in
in
jno
fsubl
mov
pusha
movb
lahf
fidivl
xor
das
push
bound
push
arpl
fsubs
sub
pop
repnz
push
and
mov
pop
imul
lods
mov
dec
jae
adc
lods
jmp
add
mov
insl
idivl
xor
mov
sbb
popa
lret
mov
rolb
sbb
lock
std
push
adc
cmp
enter
stos
sbb
out
inc
mov
in
enter
es
xchg
andl
push
cld
imul
clc
add
or
or
test
movsl
dec
push
rorb
fmuls
sahf
push
aas
mov
idivb
aad
inc
mov
xor
ss
sti
add
add
xlat
sbb
hlt
pop
mov
or
rcrl
or
push
push
cmp
in
push
int
stos
iret
adc
jge
pop
ret
sbb
or
xorb
mov
mov
sbb
mov
add
xchg
push
push
insl
adc
fiaddl
es
mov
sti
aam
push
sahf
inc
imul
lahf
add
mov
sub
or
inc
and
das
mov
hlt
insl
push
sbb
push
add
movsb
outsb
pop
cmp
sbb
test
in
inc
ja
scas
mov
and
mov
push
cmc
jge
aaa
xchg
dec
mov
mov
in
out
rorl
mov
loopne
ds
les
sbb
jb
sbb
pop
jbe
dec
das
add
sbb
cmpsb
movsb
add
push
mov
mov
adc
arpl
ljmp
repnz
roll
jb
loopne
cmc
add
fdivl
fstps
jnp
bound
xchg
sarb
adc
test
jecxz
cmp
xchg
and
cld
dec
adc
out
pop
xor
fidivs
pusha
cli
scas
lods
divl
xor
pop
stc
adcb
popa
jmp
or
or
in
insb
cmp
popf
push
mov
dec
or
push
test
andb
cmpsb
cmpsb
call
inc
pop
sbb
mov
int3
mov
ljmp
mov
mov
sahf
push
pop
js
mov
push
jp
fidivs
jnp
dec
add
mov
jge
cltd
popa
adc
jmp
stc
enter
aaa
inc
bnd
ljmp
loop
ljmp
mov
and
out
ja
insl
mov
inc
andb
push
xchg
add
imul
cmp
in
outsb
stc
out
mov
loopne
sub
push
int3
mov
cmp
fwait
and
dec
out
pop
stos
bound
mov
aas
inc
arpl
fadds
rolb
pop
jmp
cmc
pop
mov
movsl
xor
lock
test
outsb
cwtl
mull
lahf
inc
pop
mov
adc
pop
cli
mov
jge
mov
or
jge
addl
push
sub
sbb
sbb
dec
sub
or
fmul
mov
int
pop
imul
cs
clc
xchg
js
repnz
xchg
hlt
push
jmp
lret
mov
ja
int
int
jo
idivb
push
outsb
adc
push
sub
and
dec
jg
in
or
mov
js
and
xor
pusha
jp
mov
xor
mov
lea
daa
pop
jne
mov
fcom
inc
sti
adc
and
push
decl
pop
jo
xlat
imul
cwtl
mov
mov
test
jle
enter
xor
lret
shrl
xchg
xor
jns
repz
fidivrs
shl
or
jg
rcr
nop
in
xchg
divb
jno
dec
cmpsl
adc
mov
fldcw
movsb
mov
repnz
or
xchg
fildl
popl
xchg
icebp
cmpsl
inc
xchg
ja
push
lret
push
jb
or
aas
mov
scas
pop
pop
jge
dec
or
lods
clc
or
mov
aam
push
cmpsb
push
mov
mov
enter
aad
outsl
sti
xchg
stc
push
addr16
popa
push
xchg
icebp
cwtl
nop
push
or
xacquire
gs
cmp
add
jb
inc
imul
mov
cmp
int3
vpmacswd
js
inc
int
inc
dec
inc
out
outsb
pop
addl
lea
dec
mov
nop
cltd
cltd
cli
subb
xorl
adc
add
mov
mov
roll
or
stos
push
jmp
pop
xor
pop
jns
out
sbb
inc
mov
jecxz
nop
adc
test
test
and
mov
mov
das
insl
stos
and
in
xor
int
sub
jnp
je,pt
or
iret
mov
jne
mov
sub
sbb
imul
push
fsubr
je
mov
push
fs
cmp
cmpsb
insb
out
data16
out
and
nop
shl
test
adc
add
pusha
mov
sbb
dec
xlat
sbb
pop
lret
add
xor
imul
testb
je
pop
inc
pop
shlb
push
xlat
out
add
mov
cltd
lock
aaa
inc
xchg
xchg
cs
sbb
sub
adc
sarb
mov
stos
mov
ja
jno
inc
inc
call
ret
pop
mov
xchg
sahf
fidivl
pop
ds
jg
adc
and
inc
xchg
push
loope
pop
xor
dec
test
xor
jo
inc
mov
push
jl
fiaddl
mov
lahf
ret
pop
sbb
enter
ds
inc
cltd
cmpps
outsb
clc
je
or
gs
xchg
es
pop
mov
data16
and
adc
or
pop
pop
cld
fwait
stos
rolb
adc
mov
cmpl
xchg
scas
inc
jmp
js
out
mov
jnp
xor
jae
testl
rorb
push
adc
mov
int3
or
dec
fldt
mov
sub
fwait
scas
cmpsb
rcrl
sub
add
cwtl
sbb
mov
pop
das
xor
test
int3
cltd
and
int3
daa
pop
hlt
hlt
jg
andl
dec
mov
push
inc
jmp
scas
jmp
and
cmp
cmpsl
mov
dec
aad
sbbl
sub
mov
mov
cmp
mov
aaa
pop
push
cli
das
push
cwtl
int3
cld
fistpl
popl
pop
test
mov
push
pop
mov
ret
fidivl
add
jne
ss
adcb
inc
dec
arpl
push
xchg
cmp
xchg
stc
lret
sub
mov
push
pop
dec
out
mov
pop
mov
and
ss
jp
sub
pop
cmpb
iret
or
mov
shll
jge
repz
sub
push
jle
pop
mov
xchg
dec
outsb
jl
int
sub
aad
rcr
dec
cmp
adc
mov
rol
inc
addr16
aas
iret
xchg
lret
stc
pop
bnd
popa
loop
ja
loopne
push
xchg
repnz
mov
loope
daa
push
cmp
mov
movsl
add
stos
cld
mov
cmpsl
xor
cli
push
sbb
push
jb
test
push
mov
mov
insb
mov
jno
out
fs
repz
mov
out
and
cltd
pushl
sbb
xchg
xlat
je
push
sub
enter
mov
outsl
aad
mov
pop
out
xchg
mov
mov
xor
inc
and
pop
or
fmull
jns,pt
daa
inc
add
out
ja,pn
fildll
cwtl
cli
aad
sub
out
mov
sub
call
bound
adc
sub
repnz
sub
pop
insl
fwait
dec
jle
scas
inc
push
pop
xor
test
fst
xchg
and
inc
cmpsb
aam
sbb
popf
sbb
or
dec
adcb
inc
lret
or
xchg
xor
popa
loope
or
mov
popa
cld
call
add
mov
add
mov
insb
lahf
dec
out
xorb
xchg
out
mov
inc
fidivrl
fucomi
sbb
and
test
repnz
test
pop
es
or
imulb
xlat
jne
enter
test
ljmp
icebp
rcrb
test
adcb
jecxz,pn
aam
or
fmul
cwtl
sahf
add
or
jp
mov
loop
pop
repz
mov
movsl
fucomp
popa
dec
or
pop
test
dec
popa
sbb
dec
bound
jae
pop
pushf
fwait
mov
lret
push
jp
sahf
test
cwtl
loop
sti
imul
push
lods
cmpsb
dec
loope
ljmp
mov
xor
or
mov
cmpsb
rclb
fsubrp
jl
dec
mov
or
sti
sti
inc
cmp
aad
aad
sub
int
das
push
lret
and
jno,pt
idivl
jl
sub
cmp
in
shrl
mov
cmc
push
je
inc
enter
adc
call
repz
sub
xor
mov
shlb
orl
lret
pushf
cmpsb
push
loope
movsl
cmpsl
ret
aas
push
jo
cmc
or
push
add
mov
lock
decl
stc
xor
mov
int
aas
std
inc
add
lods
jmp
out
or
imul
jb
sbb
jne
test
mov
cmp
out
xchg
std
pop
test
xlat
stos
movsb
inc
movsb
ret
pop
adc
sub
sbb
ficoms
adc
xor
sub
pop
or
outsl
mov
lock
xchg
fisubs
clc
fptan
push
adc
or
and
arpl
add
shlb
fldenv
add
jne,pn
xchg
stos
mov
aas
push
cmp
loop
pop
xlat
xchg
fildl
negl
pop
push
je
bnd
mov
push
dec
and
mov
jge
idivl
fnstenv
popa
daa
test
pusha
in
pop
je
or
push
decb
push
ss
xor
in
lods
loop
lock
pusha
mov
sarl
jmp
es
lret
mov
stc
add
idivb
sbb
jo
movsl
push
add
je
filds
cmp
push
lds
adc
test
cs
es
bound
mov
jmp
iret
jecxz
push
ss
cmovae
jnp
adc
addr16
jb
call
push
sub
insb
stos
arpl
pusha
dec
sub
lods
cmp
dec
mov
and
fisubrs
sti
mov
mov
xchg
jecxz
inc
sbb
dec
or
gs
daa
push
es
cmp
adc
icebp
jns
sbb
xor
ret
adcl
inc
mov
cmp
push
in
mov
mov
mov
mov
cwtl
cwtl
push
sti
stc
enter
lcall
out
scas
imul
and
dec
jge
sub
dec
xchg
loopne
jmp
inc
daa
outsl
jg
mov
test
cmp
push
or
xor
cmpsb
inc
sahf
push
xchg
stos
sarl
ret
rol
sahf
test
sub
xchg
and
ret
idiv
pop
shl
jmp
out
cmpsb
cmpsb
das
jbe
mov
mov
xchg
sub
mov
mov
ljmp
mov
pushf
cmp
andl
fsubr
and
stc
pop
jg
or
daa
rcr
cmc
and
enter
cmp
das
cs
inc
jo
ret
dec
test
cs
pop
int
inc
adc
repnz
cmpsl
cld
dec
dec
loopew
mov
leave
mov
andb
or
lahf
jecxz
neg
pop
test
pop
and
fsubrs
lcall
addps
filds
test
orb
aam
push
xchg
mov
jnp
loope
ja
shll
cmc
pop
pop
xchg
roll
fstpl
lcall
push
inc
leave
imul
mov
dec
adc
stos
xchg
and
inc
add
mov
and
clc
jns
test
dec
and
sbb
popa
dec
inc
mov
or
mov
es
xchg
out
adc
xchg
lods
jmp
out
insb
or
rclb
dec
sub
inc
cmp
sbb
cs
jg
sub
insb
es
or
jmp
xor
mov
and
insb
cmc
jno
pop
fadd
arpl
test
and
sub
hlt
hlt
and
cmp
outsb
jp
or
jp
stc
cmpsl
fs
orb
push
inc
and
lahf
dec
jnp
shrb
mov
push
loop
pusha
add
lahf
xchg
and
sar
jno
mov
adc
jecxz
xor
mov
loop
sahf
or
xor
push
fucomip
xor
imul
sbbb
cmp
sti
enter
cmc
cs
xor
ret
fisttpl
mov
dec
cli
sbb
aaa
mov
mov
int3
mov
xchg
sub
cltd
inc
jmp
aas
push
cmp
pop
mov
mov
inc
div
or
cwtl
mov
pusha
cmp
dec
mov
dec
mov
shrl
pop
stos
xchg
add
outsb
out
add
sbb
cmp
jp
mov
and
js
xor
lret
aad
xchg
hlt
mov
lret
cmp
adc
or
mov
push
and
xchg
out
jmp
cmpsb
dec
adc
push
fsubrl
pusha
adc
popa
cmp
push
in
in
xor
std
mov
pop
mov
or
pushl
dec
test
sub
out
xor
gs
or
aas
sahf
das
les
push
call
xchg
lock
adcb
or
inc
repnz
enter
lcall
adc
pushf
aas
xchg
in
mov
xorb
clc
aad
xor
cmp
ret
jae
pop
imul
mov
lods
faddp
xchg
notb
jae
adc
push
popf
outsb
sub
gs
adc
jge
mov
push
out
jae
xchg
std
stos
xchg
push
cmp
add
movsb
fwait
add
test
sbb
shl
and
outsb
jae
or
rcrb
movsl
cli
mov
fwait
pop
push
add
jmp
je
pop
mov
out
xor
fsubrl
mov
shl
daa
pusha
inc
lahf
lea
cmp
insl
pop
jmp
mov
dec
lds
pop
add
stc
jp
out
inc
stc
movsb
jne
xchg
mov
mov
fwait
cmpsb
mov
xchg
bswap
call
lea
outsl
sub
jl
adc
push
adc
xor
test
out
inc
mov
fcomps
cld
sub
jl
stos
lcall
or
pop
push
call
mov
mov
inc
scas
out
sahf
movb
sbb
sbb
pushl
je
outsl
mov
clc
add
push
faddl
and
int3
jb
lahf
icebp
out
cli
pusha
mov
lret
icebp
mov
dec
popa
or
pusha
int3
cld
pop
lret
xchg
lea
or
push
cmp
mov
dec
daa
daa
xchg
loopne
mov
out
negl
or
xlat
js
lds
iret
pop
leave
jecxz
decb
imul
sub
or
xlat
pop
iret
inc
pop
inc
les
cmp
xchg
fdivs
fwait
test
mov
adc
fstps
hlt
add
stc
stos
cmp
daa
push
push
cmpsb
int
pop
cmp
sbb
cmp
jbe
daa
je
loopne
test
mov
xor
into
sbb
add
es
push
mov
xchg
push
and
mov
stos
dec
insl
dec
out
mov
ja
imul
dec
dec
cmp
mov
pop
sbb
jns
sub
icebp
pop
or
stc
push
shr
inc
push
out
push
jo
test
mov
movsl
cmpsb
sub
xor
push
aam
jge
cmpsb
sbb
inc
aas
repz
shrl
mov
or
cs
mov
sti
adc
stc
xor
fwait
dec
cmc
and
adc
adc
dec
xchg
nop
and
mul
ss
outsl
inc
dec
sahf
mov
cwtl
mov
mov
xchg
mov
test
in
stos
pop
je
setg
das
call
mov
jmp
imul
add
cmc
pop
lcall
jne
imul
push
dec
or
insl
dec
popf
cmp
lock
xchg
jmp
or
pop
pop
vpmacssww
dec
jl
stos
test
gs
loopne
scas
divl
fldcw
and
outsb
out
pop
cmp
pop
ret
pop
adc
pusha
inc
out
jo
push
cmp
dec
test
js
shrl
outsb
aas
jne
jl
jnp
adc
mov
loop
bound
bound
in
and
xlat
je,pt
xchg
mov
add
movsl
das
pop
xchg
repz
mov
scas
mov
inc
lock
lea
fiadds
pop
add
sbb
stos
sti
lea
inc
sti
fisttps
frstor
push
mov
mov
scas
xor
jne
gs
xchg
test
clc
push
lahf
into
push
mov
dec
aaa
cwtl
cmp
arpl
pop
mov
mov
push
lods
in
lret
in
xchg
adc
adc
jb
scas
orb
xchg
mov
insb
jp
mov
lods
adcl
inc
xor
xchg
out
xchg
aad
nop
insl
notb
in
cltd
mov
hlt
jmp
pop
jl
xchg
dec
mov
adc
xor
adc
cmpsl
and
loopne
lea
xlat
scas
lock
pop
jno
int
push
mov
aaa
scas
mov
xchg
lods
sti
sbb
fwait
adc
ret
movsb
dec
fistps
pop
adc
pop
gs
sbb
sbb
xorb
stos
or
enter
pop
inc
jo
dec
mov
adc
les
adc
fs
jl
sahf
lret
fdivs
jno
negl
test
cld
xor
dec
jae
xchg
cmpsl
pop
or
rcrb
jge
jl
insl
orl
call
stos
cwtl
cmp
dec
enter
enter
jle
cmpb
jp
and
push
xor
jnp
add
out
sub
adc
movsb
mov
pop
or
imul
lcall
xor
cld
lods
iret
xchg
pop
faddp
jo
aaa
aas
data16
jae
sub
sub
jno
add
mov
daa
lahf
pop
loop
in
movsl
mov
or
lcall
pusha
fidivl
aaa
mov
jle
push
inc
sbb
addr16
sub
mov
add
mov
or
sub
ficomps
int3
loopne
fcmove
ljmp
jnp
pop
xchg
outsb
lret
xchg
cmpsb
add
movsl
leave
xor
xor
cmp
stc
inc
add
jnp
popf
cs
cmp
sti
aad
sub
xor
add
xadd
nopl
repnz
and
and
xlat
sub
sub
inc
inc
push
imul
in
test
pop
add
adc
push
mov
js
enter
push
std
or
stos
js
loop
mov
add
adc
mov
hlt
xor
and
dec
sbb
mov
jo
sub
aad
iret
cmp
cmp
test
mov
cli
jmp
mov
setl
xchg
lods
jns
inc
mov
test
fnstsw
rolb
jb
push
stos
test
dec
or
hlt
xor
xorl
mov
hlt
pop
incb
push
xchg
mov
xor
push
sahf
mov
sahf
sbb
not
ficompl
xchg
push
sahf
sbb
arpl
mov
pushf
jnp
pop
fcmovu
pop
sbb
cmpsb
dec
jmp
mov
test
mov
mov
loopne
gs
fwait
sbb
test
inc
mov
mov
push
xchg
out
cs
jecxz
jo
xchg
mov
sbb
fmuls
push
xor
cmpsl
sub
cli
fisubs
xor
or
jecxz
mov
pop
mov
pop
test
jle
or
in
inc
jle
js
add
xchg
jnp
add
mov
or
insl
arpl
sbb
into
movnti
fiadds
jns
mov
pop
mov
pop
xchg
lahf
pushf
jl
in
bound
fs
rol
cmp
je
scas
or
mov
test
pop
inc
cs
adc
push
pop
dec
push
xor
sub
stc
fstl
lock
scas
adc
jno
aas
bound
add
stos
fdivrs
pop
lcall
stos
adc
out
les
cmp
aad
es
fildll
jb
sbb
push
jmp
fsubs
or
adc
mov
xchg
sub
push
jmp
sbb
fildll
insl
pusha
xchg
dec
push
xchg
fwait
aaa
ss
push
mov
daa
scas
fidivs
cs
push
mov
jecxz
and
scas
jge
lcall
lret
adc
imul
jno
in
fiaddl
popa
push
pusha
fdivr
cmp
stc
jne
jge
pop
inc
fldenv
cld
jb
iret
push
loop
add
mov
mov
dec
or
mov
ja
lds
insb
adc
ljmp
pop
push
movsb
js
pop
fisubrs
scas
adc
stc
pusha
jne
push
cmc
pop
inc
and
int
ja
fimuls
and
sbb
punpcklbw
cs
pop
add
sarl
pop
in
ret
mov
pop
mov
decl
xchg
daa
nop
mov
les
jo
lock
fdiv
pop
insl
pop
xor
aad
sub
xorl
and
sbb
sbb
mov
std
test
mov
and
imul
cltd
ret
lods
adc
sbb
or
mov
dec
add
dec
add
fisubrl
mov
inc
inc
test
pop
or
push
xor
jge
dec
out
jge
jle
movsb
push
cld
or
mov
pop
jl
dec
sub
inc
pop
cmpl
xor
mov
mov
test
jno
inc
rcrb
add
sbb
dec
cwtl
mov
mov
pop
mov
jl
int
negb
cmp
or
mov
or
mov
std
fsubr
incb
push
mov
fcomps
test
iret
sub
or
xchg
xchg
mov
jmp
push
xor
or
addr16
daa
popa
xchg
stos
shll
adc
and
cmp
jmp
cmp
cmc
loope
push
mulb
dec
fdivrl
fistps
movsl
jecxz
stos
xor
cs
cmp
fsubrl
dec
xor
arpl
jbe
xchg
mov
lea
loop
fimull
ljmp
inc
sbb
inc
mov
dec
test
imul
lea
mov
xchg
jae
lret
xchg
sbb
leave
sbb
ret
shlb
sahf
push
fidivrs
imul
je
mov
and
ja
adc
pop
and
inc
xor
stc
jecxz
cs
cmp
stos
mov
cmp
inc
cmpsl
xchg
pop
jns
push
push
cmp
cwtl
das
arpl
or
stc
test
mov
jae
push
pusha
sub
in
loopne
out
adc
test
mov
test
sbb
data16
mov
out
in
fldcw
xchg
je
in
popf
int3
les
lods
push
push
ss
and
jae
push
fstpt
inc
and
or
lret
jg
shrb
gs
mov
lds
xchg
jnp
cld
cltd
inc
out
or
xchg
shll
dec
and
lds
out
mov
push
push
dec
leave
dec
insl
mov
push
cmpsb
repz
push
hlt
mov
sub
es
mov
mov
stc
ret
fmulp
popf
mov
addr16
sub
psubusw
frstor
std
mov
push
inc
enter
mov
loopne
and
sbb
jge
push
or
into
mov
sbb
dec
push
cwtl
addr16
mov
sarl
mov
dec
push
and
fsubl
jl
shr
push
out
xor
outsl
sti
inc
mov
lret
jle
or
mov
ds
fidivl
sbb
movsl
ja
lods
adc
mov
stos
mov
push
sbb
out
jmp
mov
scas
call
lahf
fmull
or
pusha
and
inc
repz
aam
mov
adc
xlat
sub
lahf
idivl
lea
repz
clc
jno
out
int
fadd
jg
mov
mov
fwait
dec
sbb
dec
shlb
sahf
xchg
pop
inc
mov
out
ss
inc
or
xchg
jae
repz
decb
push
jmp
xchg
mov
mov
negb
sbb
push
mov
add
dec
int3
jnp
clc
inc
sbbl
cmc
mov
pop
dec
enter
push
and
sub
loop
sarb
and
mov
sub
out
adc
sbb
mov
inc
out
or
jns
enter
cmp
sub
loop
fsubl
cmp
repz
adc
adc
notl
mov
ljmp
sarl
dec
daa
xchg
je
popf
jge
jae
mov
dec
pop
shll
lcall
nop
loope
sbb
je
jnp
cltd
imul
out
pop
xlat
push
outsl
jle
pop
lock
sub
jl
cltd
mov
cmp
aas
jl
movb
scas
and
orb
or
jg
mov
in
ret
out
pusha
lret
add
adc
pushf
sbb
idiv
xchg
pop
repz
cmpsl
jp
and
inc
dec
sbb
lods
sbb
mull
cmp
je
add
loopne
push
add
xchg
es
idivl
sbb
cltd
xchg
and
mov
xor
adc
push
rcl
add
or
xchg
dec
jbe
add
and
add
cmpsb
scas
adc
dec
jns
int
in
adc
jo
sbb
ficoml
jb
repz
and
clc
add
daa
adc
js
push
ds
icebp
sbb
sbb
pop
js
mov
mov
enter
leave
add
pop
and
test
flds
xorb
repz
sub
ja
out
js
pop
scas
mov
xchg
and
or
mov
pop
imul
sbb
cld
cmp
dec
fcmovu
pop
lods
das
pop
push
jp
xorb
fsts
shll
pusha
pusha
jae
jnp
adc
nop
sbb
rcr
addr16
sub
sbb
mov
fprem1
loop
cmpsl
repz
mov
adc
push
xlat
sub
dec
insl
fidivl
pushf
in
add
push
jg
mov
inc
fldl
cli
mov
insb
cmp
lahf
or
lahf
mov
inc
push
jecxz
or
lcall
mov
dec
sahf
lcall
jg
and
mov
cld
cld
jecxz
sbb
push
push
lret
mov
sub
test
fwait
xor
sub
sbb
dec
lea
pop
les
mov
and
lcall
sbb
sbb
enter
push
filds
sub
mov
frstor
or
sti
add
jl
sbb
pop
stos
dec
mov
and
push
sahf
xor
adcl
xor
mov
mov
pop
leave
pushf
int
mov
xchg
stos
loopne
inc
enter
in
jecxz
popf
and
shl
fistps
mov
cmp
into
xchg
sbbb
and
arpl
gs
lea
hlt
inc
pusha
dec
pop
loopne
xchg
in
insb
out
movsb
cmp
orl
cmc
cmp
xchg
scas
mov
testl
adc
xor
xchg
data16
dec
fcomi
aaa
sub
popa
mov
and
mov
fisubrs
pop
cmpl
xchg
outsl
imul
adc
push
shlb
pop
push
repnz
call
push
sbb
aam
int
leave
test
lret
mov
dec
in
add
out
mov
jle
mov
movb
pop
pop
mov
dec
lcall
mov
pop
jecxz
out
scas
out
out
pop
or
lret
adc
mov
and
and
shl
jge
lods
xchg
or
popa
and
andl
mov
clc
sub
add
leave
or
cmpsl
inc
ror
repnz
or
loopne
pcmpeqb
shll
xchg
xchg
icebp
cmpsb
pop
loopne
hlt
cmc
pop
mov
inc
adc
jo
inc
jmp
inc
or
lcall
or
push
rcrl
jge
push
std
stos
iret
mov
vmwrite
xor
pushw
mov
loopne
xchg
dec
xor
repz
shlb
pop
sbb
xlat
test
jmp
aaa
xor
data16
pusha
adc
pop
jmp
and
adc
into
leave
sub
adcl
lods
in
push
subb
xor
jne
push
sbb
push
or
lea
dec
xchg
mov
faddp
and
inc
icebp
mov
loope
adc
outsb
xor
push
andl
mov
jmp
mov
repnz
int
int3
mov
mov
fwait
test
in
clc
push
mov
cwtl
sahf
mov
scas
ret
dec
sbb
sub
fildl
mov
fildll
nop
adc
out
ss
sub
or
sbb
aam
jecxz
xchg
lret
in
push
rol
mov
repz
ja,pt
jmp
jge
push
aam
ret
sbb
mov
or
scas
xchg
jmp
dec
das
cli
icebp
pop
mov
mov
cld
decb
xlat
imul
jmp
xchg
pusha
adc
fdivrs
add
cs
xor
int
jp
arpl
push
int3
sub
inc
dec
fdivl
lods
sub
jno
xor
jmp
jnp
aad
shrb
movsl
mov
mov
xchg
sbbb
dec
or
mov
xchg
lret
addb
jb
call
push
bound
fidivl
sti
cltd
repnz
das
cmpb
lods
lock
repz
daa
idivb
xor
ss
out
dec
mov
xchg
cltd
mov
jnp
lock
ds
jb
scas
fs
rorl
sbb
sub
adc
test
push
repz
mov
fnstenv
cs
cmc
mov
ret
pop
or
xor
movsl
xor
cmp
jle
out
scas
push
dec
jb
leave
adc
or
ret
lea
mov
pop
add
andl
popf
adcl
xchg
jg
fwait
call
jbe
lcall
cmpsb
out
fists
and
sbb
in
pop
cltd
mov
jle
mov
sub
sbb
or
sub
hlt
pusha
in
pop
push
xor
fmulp
in
push
out
adc
fcomps
push
popa
pusha
sub
es
aad
add
mov
lock
scas
xchg
cld
iret
add
jno
inc
ret
sbb
arpl
mov
fldl
sbb
sub
jmp
sub
inc
cmpsl
repz
cmp
lods
pop
add
mov
test
notl
mov
cltd
sti
jb
pop
dec
push
movsb
scas
inc
mov
outsl
jo
cmpsl
out
imul
push
pop
dec
push
add
xor
mov
daa
rcrl
lods
sbb
xor
movsb
pop
movsb
xlat
pop
fs
add
sbb
out
sub
jg
arpl
and
lods
jb
cmc
pusha
aas
push
dec
mov
sub
fnstcw
xlat
add
adc
scas
icebp
mov
es
cmpsl
sbb
mov
notb
mov
ds
pop
in
ret
repz
cmp
rcl
js
sti
scas
cmpsl
je
imul
add
je
ret
mov
lret
hlt
arpl
out
xchg
sarb
inc
pusha
out
and
cmp
lea
mov
mov
dec
xor
in
les
xchg
mov
pop
test
lret
jnp
add
popa
adcb
shrb
popf
mov
cli
sbb
mov
inc
call
fwait
sbb
andb
jno
addr16
fwait
inc
mov
movsb
fs
outsl
push
push
lea
test
pop
loopne
mov
loope
push
outsl
test
jge
sub
lds
xlat
lea
mov
xchg
sbb
js
fs
lock
andb
scas
rol
fsubl
out
test
loope
lret
out
loopne
mov
imul
sbbb
add
out
or
int3
in
out
xchg
push
jno
pusha
inc
or
sbb
adc
xor
cmp
movsl
cmp
jno
aaa
push
dec
mov
sahf
sbb
shrl
repz
pop
insb
ret
jns
int
push
imul
dec
bound
adc
pushf
mov
out
test
pop
sub
sti
cli
out
outsl
sbb
cld
inc
pop
stos
xchg
or
icebp
cltd
fildll
idivl
inc
das
pop
fsubrs
idivl
aad
mov
out
cmp
push
icebp
cmpsb
in
mov
lcall
movl
pop
and
xchg
mov
and
dec
sub
enter
fisttpl
jp
add
xchg
or
xchg
cmpsb
xlat
mov
xchg
xlat
fsubrl
out
cmp
lea
jge
mov
or
add
push
ficompl
test
sbb
dec
cmp
pop
cmp
loop
imul
cs
sbb
repz
cltd
dec
jmp
loop
push
imul
into
mov
mov
pop
jo
and
or
inc
int
xchg
mov
insl
jp
mov
dec
nop
xor
cmp
and
add
push
add
dec
pop
inc
mov
pop
mov
mov
and
subb
mov
xchg
add
int
sbb
pop
mov
dec
jl
xor
mov
jl
xlat
pop
ja
cmp
or
cs
out
jae
add
push
movsl
nop
inc
outsb
cmp
sbb
pop
movsl
mov
repz
popa
add
test
dec
xor
fsubl
fwait
test
lods
mov
ret
rolb
jbe
cmp
jmp
mov
cmc
mov
rcr
hlt
lahf
test
lahf
xchg
add
shlb
mov
jnp
movsb
sub
and
int3
xor
and
out
or
stos
shll
xchg
xchg
daa
pop
or
subb
aad
mov
jmp
enter
insl
mov
mov
test
stc
adc
or
push
mov
xchg
push
jb
outsl
cmp
imul
adc
dec
arpl
ret
lods
ljmp
pusha
aas
test
mov
dec
mov
mov
inc
rolb
xchg
mov
loope
mov
mov
test
or
pop
and
jne
cltd
rcr
push
insl
inc
mov
cs
xchg
test
or
frstor
imul
add
and
dec
cmp
jp
adc
loopne
icebp
fwait
lret
xchg
or
cltd
ret
cwtl
pop
jo
cld
gs
jnp
dec
call
xor
int3
movsb
push
jg
push
imul
push
js
cmpsl
push
les
in
aaa
pop
mov
cmp
sub
jbe
pop
out
lret
xor
pop
ret
push
sbb
fnstcw
cmp
mov
js
mov
mov
movhps
adc
add
std
mov
lret
arpl
sbb
stos
test
lret
notl
sub
lods
jge
scas
jae
pop
scas
mov
shrl
jbe
into
lods
daa
xchg
jbe
roll
jle
jp
push
jne
xor
mov
inc
xchg
xchg
mov
lds
jmp
mov
xor
lods
xchg
lret
cltd
push
insb
in
pusha
sub
adc
cltd
mov
push
adcl
inc
lods
popa
aas
cmp
daa
sub
push
out
sub
and
sub
stc
icebp
mov
insb
pop
icebp
jae
popa
fs
adc
dec
mov
adc
mov
dec
loope
or
or
mov
or
or
cwtl
in
mov
mov
mov
add
insl
lock
rorb
subb
ds
push
mov
mov
pusha
vmovups
mov
mov
cmp
jno
xor
mov
out
sarb
add
push
xchg
jbe
dec
enter
mov
inc
dec
je
pop
pop
iret
enter
call
in
dec
xchg
xchg
movb
pop
mov
cmpsb
fnsave
ja
and
pop
in
mov
inc
and
aaa
mov
push
iret
jecxz
das
cli
lret
lods
sbb
into
add
push
lret
fidivrs
imul
cwtl
dec
sub
and
mov
jmp
xor
in
je
into
cmc
in
rcl
sub
inc
int
inc
mov
inc
dec
js
mov
pop
enter
mov
jg
pop
lods
insl
push
jno
rcr
in
jno
fiaddl
sub
in
and
or
push
xchg
push
int
jbe
ret
ror
popf
or
or
imul
pushf
fcoml
push
mov
dec
push
sub
mov
xchg
fiaddl
cmp
push
mov
and
shl
dec
cld
xor
pop
jp
cwtl
mov
call
in
lods
cmp
jle
push
outsb
push
mov
cmp
cmp
movsb
pop
jo
test
loope
std
pop
or
pop
lahf
xor
sahf
add
data16
xchg
aas
push
scas
mov
cmpsb
je
shlb
dec
mov
mov
aas
and
and
jnp
lods
add
mov
and
leave
jge
dec
imul
dec
sahf
cmp
ljmp
add
jb
and
in
dec
jae
out
xchg
jnp
fldt
add
orb
jecxz
test
jne
imul
mov
loop
imul
pop
les
testl
das
add
outsl
lods
push
pop
fcoml
cmp
dec
stos
and
xchg
mov
dec
and
cmp
pop
loope
movsl
repnz
rcll
cmp
cmc
mov
pop
cmpsl
mov
cs
pop
jno
add
jns
xchg
or
cli
lock
leave
gs
cmp
and
sbb
cld
mov
rol
jbe
or
xor
pop
jle
loop,pt
je
adc
pop
inc
test
add
xchg
pop
sub
mov
push
or
imul
popa
or
pop
jbe
mov
jne
xor
fildl
mov
dec
stos
add
xlat
mov
lahf
cmp
jmp
test
test
pop
ljmp
fldl
push
enter
cmc
shrl
or
xlat
in
out
ret
adc
pop
in
adc
or
mov
in
shl
sarb
or
out
stos
xchg
push
xchg
roll
mov
loope
add
aam
pushf
and
fsubs
fadds
sahf
adc
fstpl
xor
leave
dec
in
push
movsl
mov
dec
fsubp
jp
mov
es
mov
es
sti
lret
push
mov
out
fcoms
in
mov
filds
push
pop
mov
rcll
ja
sub
pushf
repnz
xor
push
inc
icebp
aaa
fldt
adc
dec
xor
lods
test
jle
add
jne
sbb
mov
lock
pop
stos
xchg
std
movsb
push
inc
or
popf
mov
jne
cmp
jns
pusha
mov
lods
add
sub
jmp
gs
rclb
call
mov
xorb
insl
cmp
es
sbb
pop
clc
add
inc
add
loopne
mov
nop
call
es
cmp
and
ss
add
aad
fucomi
aas
mov
pushf
adc
popf
lret
fcompl
stos
divb
add
push
jns
or
shrb
andl
add
push
jbe
fisubs
movsb
dec
xchg
scas
sbb
fcoml
ss
int3
dec
sub
mov
mov
and
mov
pop
and
popl
lods
insl
sub
stc
fnstenv
icebp
std
push
dec
aaa
in
push
out
xlat
cli
bound
add
loopne,pn
int3
repnz
sub
xchg
cmp
in
addb
jle
imul
clc
mov
pop
inc
mov
in
and
push
sub
jecxz
or
inc
and
or
addr16
sub
xchg
fucomi
push
cwtl
pop
aaa
mov
sub
sahf
mov
sbb
mov
sub
das
push
xor
and
enter
mov
dec
adc
js
pop
fists
fwait
jae
push
sbb
fstpl
or
nop
jb
cmp
mov
fwait
shlb
les
les
popa
sbb
xor
lret
loopne
cmp
dec
fnstcw
dec
mov
insb
push
push
push
lahf
mov
jmp
ja
inc
add
pop
adc
jle
jo
adc
fmul
cmpsb
dec
orl
test
add
sbb
push
mov
cmp
enter
loope
cmp
cmp
push
fs
fs
sti
xor
inc
outsl
jb
push
sbb
mov
out
adc
xor
insl
sbb
dec
mov
sarb
cmp
lods
push
dec
pop
enter
aas
sub
jmp
call
sbb
pop
mov
cli
jg
inc
out
int3
fmuls
aaa
dec
add
inc
adc
iret
mov
add
cmc
fcmovnbe
add
repnz
cs
out
ret
push
or
mov
pusha
lods
mov
and
std
dec
pop
js
jnp
pop
push
and
call
mov
xlat
xor
mov
repnz
inc
rclb
adc
push
cmp
xor
dec
test
jbe
je
sub
sbb
sub
aaa
popf
outsb
push
lea
test
lret
in
jbe
ss
jl
adc
addr16
pushf
insl
xchg
movsl
adc
inc
sub
jmp
pushf
inc
add
or
cmp
inc
std
jecxz
test
mov
adc
and
or
cmp
and
cmpl
jns
daa
lock
jo
or
adc
es
mov
and
and
lods
movsl
jno
or
dec
lret
xor
adc
add
push
xchg
mov
iret
fisttpll
pusha
movsb
mov
xchg
iret
int
in
and
stos
js
and
mov
les
mov
jp
popf
mov
jne
in
les
push
mov
cli
stc
inc
cs
mov
inc
cmpl
roll
mov
mov
or
mov
stos
mov
andl
sub
or
jae
mov
or
std
push
test
xchg
lcall
mov
int3
inc
sub
int3
vpmaddwd
ss
insb
loope
mov
mov
fnop
inc
insl
sbb
mov
pop
adcl
mov
sti
adc
loope
cld
shr
pop
push
or
icebp
pop
cltd
inc
leave
fdivl
jb
daa
xchg
js
cld
jg
clc
pushf
ds
mov
mov
push
out
loopne
out
sub
repz
xchg
lahf
xchg
lret
in
xchg
arpl
outsl
jmp
xchg
int3
push
aaa
push
mov
clc
jg
icebp
cmc
sub
std
popf
rolb
sbb
cmc
or
mov
xchg
inc
mov
cltd
xor
or
loopne
mov
and
aad
sub
sub
imul
out
mull
cli
popa
daa
mov
rorl
xchg
jg
lcall
add
sub
sub
inc
jg
popa
lcall
sbb
ja
notl
lahf
dec
hlt
cli
mov
jle
pushf
mov
int3
test
mov
mov
mov
inc
and
push
dec
pusha
add
inc
data16
in
jbe
repz
and
jl
sbb
mov
jmp
xor
div
sbb
rcr
xor
and
bound
sub
push
xor
shr
adc
jp
sbb
or
and
pusha
imul
pusha
js
inc
aas
decb
lahf
inc
mov
ds
iret
out
scas
test
es
dec
add
sbb
sbb
and
fdivrp
das
loope
jo
loop
add
jecxz
mov
mov
popa
xchg
movsb
aad
jl
repz
xchg
scas
sarl
insb
mov
fucomip
sbb
aaa
in
adcb
mov
and
pop
pop
mov
sbb
adc
mov
inc
push
sbb
mov
jmp
lods
data16
mov
mov
call
bound
testl
push
dec
adc
xor
pop
call
in
jmp
push
lahf
cltd
scas
jnp
jnp
sub
sbb
mov
sub
pop
lds
js
mov
pushf
xor
mov
test
push
sub
jp
fs
fdivl
call
jae
pop
ret
add
in
imul
aas
out
push
xor
jb
dec
insb
add
sbb
or
sbb
add
sbb
imul
xchg
jnp
and
divb
jecxz
faddl
lea
mov
dec
idivl
es
stos
imul
push
sbb
xor
cmpsl
hlt
fcoml
cmc
xor
cmp
or
cmp
cld
mov
out
dec
mov
in
sbb
dec
data16
jg
out
out
addr16
inc
push
icebp
mov
jle
pop
pop
data16
sbb
fnstsw
movb
clc
aas
stos
cld
sub
lods
mov
dec
testb
adc
mov
xchg
test
pushf
icebp
loop
jge
int3
add
and
pushf
out
fwait
popf
mov
lock
cltd
mov
shlb
inc
aad
bswap
out
jae
ss
ja
mov
add
fildll
je
ja
mov
andl
ja
insb
repnz
dec
and
xchg
xchg
lret
and
loop
dec
hlt
mov
insl
jb
xor
icebp
mov
outsl
jmp
cmp
mov
push
xlat
ja
jp
fldln2
mov
clc
cvttps2pi
pop
mov
in
shl
out
out
dec
stos
test
cmpsl
jbe
movsl
sti
sahf
inc
sahf
pusha
shl
push
lock
dec
cli
mov
cli
dec
ficoml
add
sbb
dec
sub
inc
in
aas
adcb
test
mov
cmp
out
and
mov
popf
test
popf
fsubrs
fistpl
and
out
push
popa
xchg
loop
gs
jnp
and
mov
dec
cli
ret
jne
or
aad
push
into
ss
or
push
fwait
into
xchg
and
insl
add
dec
push
idiv
mov
icebp
xchg
dec
lea
jecxz
leave
or
sahf
cwtl
add
in
sbb
shrb
xchg
lea
jno
pop
or
lds
mov
adc
add
sbb
pop
fcomps
add
push
repnz
lcall
dec
and
mov
rorl
pop
push
lahf
bound
push
push
dec
push
lods
xlat
cwtl
inc
nop
pop
out
or
sbb
fldenv
sti
push
mov
loop
sub
inc
push
cli
in
sub
jno
subl
call
adc
shll
aaa
or
loope
cld
ja
inc
add
fsubrp
mov
sub
mov
test
fwait
fwait
jecxz
mov
push
jb
ret
mov
xchg
push
sbb
mov
cmp
movsl
mov
nop
fucomi
mov
add
jbe
gs
mov
adcl
jb
mov
or
insl
popf
das
push
sbb
mov
inc
pop
push
clc
pop
xchg
outsl
gs
andb
cwtl
insl
rolb
repz
push
push
or
or
sbb
xor
repz
loopne
and
mov
xlat
int3
mov
mov
mov
int
mov
fwait
jecxz
jl
fidivrs
xchg
mov
add
outsl
arpl
mov
pusha
fnstcw
adc
arpl
vfrczss
es
insl
and
xor
cmp
rol
enter
mov
pop
jl
call
stos
cli
in
in
mov
add
imul
xchg
daa
fdivrs
insb
ficoms
and
aas
mov
jae
fidivl
hlt
mov
jno
add
xor
in
in
dec
mov
pop
cs
ret
mov
mov
shll
out
jns
popf
fiadds
jl
push
or
das
adc
mov
addr16
lea
stos
mov
mov
push
inc
jl
loope
mov
and
shlb
mov
fnstcw
push
sub
dec
lea
es
je
lcall
enter
movl
adc
adc
pop
enter
insb
mov
jnp
pop
push
sub
lds
push
arpl
insl
add
dec
movsl
push
ficomps
xchg
stc
jbe
xchg
sub
pop
jne
sar
xchg
mov
inc
add
push
in
jge
jne
push
cmp
add
lret
mov
shl
mov
fsubl
in
fmull
shlb
jmp
pop
jecxz
sub
pop
mov
pop
lret
cmp
xchg
sbb
inc
cld
lods
leave
mov
mov
imul
inc
mov
adc
push
lahf
mov
pushf
cmpsb
jne
in
inc
fs
xchg
pop
mov
xor
int
aad
ret
aam
mov
pusha
mov
lcall
jmp
repz
push
nop
mov
dec
aam
mov
js
or
ret
fsubrl
popf
repz
or
lahf
cmp
sbb
repz
enter
xor
sbbl
addr16
imul
fwait
imul
test
or
xor
inc
mov
popa
jg
xchg
sbb
cs
decl
aam
adc
imul
popa
gs
clc
fstl
pop
pop
out
mov
push
and
mov
andl
cmp
testb
cmp
or
add
data16
out
push
pop
inc
in
loop
mov
icebp
adc
sub
ljmp
pop
lret
or
pop
add
push
jge
dec
fdiv
fists
pop
sub
lret
pop
es
mov
ret
xchg
mov
das
mov
cmp
repnz
push
neg
dec
fsubrl
scas
fidivrl
das
pop
sbb
lea
ja
testb
mov
nop
pop
sarl
sbb
roll
push
xor
jle
pop
cmp
dec
rep
popf
bound
or
cmpl
xchg
mov
pop
repnz
mov
pop
das
mov
jmp
lea
test
add
popa
insb
notb
xchg
mov
imul
lret
inc
inc
lea
xchg
stos
add
out
and
fildl
cmp
cli
addb
dec
sti
repz
cli
stc
xchg
inc
jmp
pop
sbb
loop
jo
test
mov
jecxz
cmpsl
xor
stc
mov
sbb
dec
push
push
mov
imul
das
scas
fnstcw
push
mov
mov
loope
mov
or
lea
sub
stos
mov
dec
xchg
js
outsb
cmp
mov
loope
and
cltd
cmp
xchg
adc
mov
or
out
xor
hlt
sbb
repnz
jnp
mov
jae
cld
sbb
std
inc
int
fadds
xchg
stos
jbe
lret
shlb
cmovge
inc
xchg
jmp
testl
push
dec
push
and
inc
insl
enter
sarl
roll
test
xchg
lahf
dec
cmp
out
popa
rcr
add
jbe
fistl
lret
ds
pop
jle
das
pop
ret
loope
addb
xchg
cmpsl
jbe
push
jno
sahf
rcl
inc
stos
pushf
or
xchg
mov
dec
addr16
fxch
aad
ret
inc
sub
mov
mov
repz
dec
cltd
inc
cmpl
jns
xchg
or
and
jb
xchg
movsb
movsl
dec
int3
nop
mov
cmp
inc
lcall
pusha
sbb
fmuls
mov
xor
adc
fsubs
mov
add
dec
data16
mov
pop
mov
movsb
subl
ror
xor
std
popa
xchg
sbb
lahf
adc
or
and
add
fbstp
add
add
mov
call
lmsw
daa
adc
loopne
cmpsb
push
cmp
dec
addr16
mov
mov
fwait
lahf
jmp
cltd
dec
mov
adc
mov
cmp
push
sbb
test
jge
loope
cmp
popa
cmp
aad
int3
push
adc
aaa
adc
and
add
dec
in
popf
lahf
inc
iret
mov
gs
js
inc
mov
call
inc
lret
sub
jmp
hlt
and
cmp
cmp
inc
xchg
lods
in
insl
adc
sbb
dec
cmp
lret
add
xchg
repnz
je
mov
jns
dec
xor
gs
push
pusha
nop
xchg
mov
jmp
int
sub
mov
mov
pop
lds
push
add
mov
test
sbb
adc
xchg
sti
adc
cwtl
sbb
sahf
inc
int3
lods
imul
adc
mov
aad
lods
adc
sbb
std
fcomip
test
cmpb
fdiv
or
pusha
or
in
push
dec
ficoml
pop
aaa
dec
hlt
mov
add
lret
jle
fistpl
add
jmp
scas
xor
sbb
fs
adc
sarw
sub
sti
pop
cmpsl
mov
lock
mov
adc
stos
jl
or
pop
mov
cli
jno
aad
mov
into
or
or
mov
sub
ss
push
int3
test
mov
iret
add
ret
sbb
repnz
pop
push
push
jno
xchg
or
cmpsb
sbb
idivl
mov
jno
in
jle
out
jp
icebp
xchg
mov
jmp
out
sub
roll
mov
mov
dec
int3
and
lret
jmp
mov
jp
mov
cmp
hlt
push
or
insb
lock
out
mov
add
and
and
add
pop
rclb
jg
imul
add
adc
xchg
cmp
rolb
adc
stos
es
xchg
fldt
call
out
sahf
mov
push
cltd
sub
xchg
jne
test
inc
pop
mov
jge
js
movsl
pop
push
mov
stc
fbld
inc
test
test
jno
shrl
cltd
push
lahf
iret
push
jp
pop
arpl
push
mov
mov
nop
adc
ja
daa
mov
sarb
mov
xchg
loope
push
xor
or
xchg
daa
xorps
dec
mov
inc
stos
in
sub
mov
mov
mov
int3
fs
in
mov
lret
mov
dec
aad
xchg
push
mov
jp
ss
cwtl
push
ss
add
xor
mov
add
iret
jle
rorl
fnstsw
sub
sahf
sub
inc
aam
jp
sub
iret
xchg
in
inc
inc
add
fdivrp
arpl
lret
outsl
cltd
roll
cltd
movsl
pop
fucomip
das
shr
sub
movsb
sbb
add
sahf
pop
cld
lret
test
cmp
mov
pmulhw
adc
xchg
stos
push
out
sahf
push
adc
ficomps
scas
sbb
fwait
mov
pop
fstps
or
jge
popa
jecxz
and
mov
and
fisubl
out
inc
movsl
xchg
adc
push
mov
in
xor
add
imul
insl
in
sbb
jno
out
xchg
loop
lret
loopne
inc
cmp
mov
repnz
sbb
faddl
cmpsl
ja
mov
sub
subl
ficoms
xchg
cmpsl
insb
cmp
cmp
daa
cld
cmp
pop
lds
sahf
cltd
outsl
and
fs
add
cmp
jbe
push
inc
dec
mov
sbb
push
push
xchg
fildl
insb
shll
cmp
xor
stos
push
or
pop
ficompl
mov
mov
sub
inc
adc
cmp
insl
jo
pop
push
movsl
subb
pop
je
fisubl
xchg
mov
cli
jg
adc
and
and
hlt
and
pop
or
add
jp
sbb
add
test
movsb
call
sahf
repnz
fadds
sub
pop
lret
scas
xchg
xor
add
int
xchg
inc
xchg
mov
inc
movlps
mov
in
fimull
jbe
lea
sub
jge
imul
inc
lcall
push
xchg
push
popf
mov
les
xor
mov
imul
pop
mov
pushf
mov
jp
jge
xchg
pop
fwait
mov
xchg
jnp
sarb
xchg
mov
mov
imulb
adc
orb
test
fmuls
jp
sbb
call
xchg
jg
mov
jmp
mov
cwtl
cmp
add
loope
cmpsl
insb
das
scas
cmpsl
into
inc
push
jge
clc
xchg
lahf
js
sub
je
stc
xor
mov
sub
sbb
lock
ds
test
jae
push
xchg
mov
xlat
or
sbb
fisubrl
jnp
mov
cmpb
jle
cmp
xor
mov
push
cli
inc
or
jmp
push
cmp
and
pop
sbb
ja
cmpsl
mov
jno
icebp
xchg
mov
cwtl
bound
popa
lds
lret
mov
lds
faddl
pop
lods
int
xchg
fistpll
xchg
int
or
adc
pop
xchg
addr16
dec
inc
sbb
xor
nop
fwait
loopne
test
xor
inc
adc
push
cmp
stos
add
sbb
std
cld
clc
test
out
scas
add
or
cvtdq2ps
add
sbb
cwtl
aaa
daa
inc
or
or
bound
ds
stos
dec
push
dec
jle
fwait
adc
adc
cmpsb
inc
cli
lods
imul
test
cmpsl
fistpl
ret
iret
jnp
fisubl
sub
xchg
daa
mov
addr16
loopne
sti
shrl
jge
mov
cs
outsb
mov
sub
int
test
adc
mov
addl
dec
test
jge
push
mov
cwtl
test
jl
lret
pop
in
adc
data16
jae
movsb
mov
jbe
xor
out
add
dec
mov
ret
lea
add
cmp
cmpb
sub
sti
xchg
pop
sahf
jmp
frstor
outsl
and
inc
mov
mov
cmc
clc
xor
popa
fidivs
pop
outsl
pop
lods
xor
shrl
repnz
jo
xchg
or
or
add
leave
lret
push
pop
lock
push
adcb
cmc
cmp
loope
mov
push
inc
mov
push
dec
mov
xor
cli
xor
lret
lret
add
std
jns
cmp
dec
cmp
jmp
sub
ficoml
test
insl
xchg
cmp
push
mov
and
add
sub
bnd
icebp
scas
sbb
pop
clc
imul
out
xlat
push
int
sub
dec
or
cmp
fidivl
ja
dec
cmp
jne
xor
dec
in
jg
inc
test
add
add
aad
pop
fs
sbb
add
cmp
and
push
ss
push
jbe
iret
out
adc
lods
fmuls
jne
pop
daa
add
mov
lds
lods
xchg
fistps
sub
sti
or
in
lods
pop
push
pusha
or
mov
cmp
xchg
jbe
push
scas
pop
inc
iret
mov
jg
dec
or
xchg
repz
aas
cmpsl
enter
cli
or
clc
clc
add
das
test
push
cmpsl
rorb
sti
or
cmp
xchg
pop
cltd
sbb
cmpsb
pop
add
je
loopne
shrb
sbb
imul
orb
pop
sbb
push
cltd
xchg
pop
pop
shll
jnp
adc
rcrb
js
pop
call
xor
fs
push
insb
cwtl
mov
sbb
cmc
pushf
imul
lods
jle
scas
inc
repnz
mov
sbb
dec
dec
jae
orl
jne
mov
mov
dec
aam
xchg
mov
adc
gs
ja
and
add
jns
cmp
push
or
cmp
fwait
push
daa
inc
cmc
jns
adc
inc
and
lods
inc
dec
sub
mov
negb
ss
jo
mov
xchg
xor
out
adc
andb
std
and
imul
leave
jnp
movsb
popa
clc
and
jbe
icebp
pop
jge
subl
adc
cmp
sub
sbb
xchg
xchg
sub
mov
adc
sub
push
movsl
add
insl
xchg
cmpsb
jecxz
out
push
roll
aaa
ftst
add
mov
pop
hlt
push
fcomps
inc
les
inc
xor
mov
push
jne
pop
test
mov
rclb
cltd
mov
xor
pop
jno
rcrl
stc
and
jmp
jecxz
fdivrs
sarl
addr16
mov
test
jnp
sti
loop
enter
sti
jg
cmp
push
xchg
mov
mov
pop
mov
mov
roll
outsb
mov
bnd
sub
push
jge
adc
sub
inc
out
iret
cmp
sti
xor
fstpt
movsb
cli
shrb
arpl
stos
mov
dec
or
xchg
push
jg
jnp
sbb
mov
sahf
jmp
adc
into
xchg
sub
cwtl
scas
xor
sbb
mov
dec
nop
movsl
out
faddl
push
ret
not
cli
mov
adc
andl
dec
loope
jle
sub
loope
mov
lahf
sub
fmull
push
nop
mov
fistpll
std
in
push
loop
jecxz
adc
add
fs
sbb
lods
fsub
daa
push
shr
in
mov
imul
xor
sahf
and
cmpsl
xchg
aas
and
dec
test
adc
inc
adc
in
aas
or
ds
and
test
cmp
jmp
out
out
cltd
in
test
push
call
aam
stos
adc
mov
enter
enter
dec
inc
sub
int3
xchg
add
insl
mov
pop
xor
xchg
mov
cltd
iret
jnp
mov
jecxz
xor
cs
or
xlat
adc
mov
xor
ja
stos
bound
xchg
insl
cli
xchg
jnp
mov
in
aas
iret
negl
sbb
ss
lret
and
cmpsl
pop
sbb
pop
bound
jne
jno
ds
and
xchg
mov
add
xchg
add
jp
adc
pop
push
dec
push
sbb
out
jae
adc
lods
mov
ds
or
jge
sub
sbb
movsl
and
jg
test
sbb
cmp
sub
sub
lcall
lcall
ret
inc
ret
xchg
mov
xor
and
xor
call
push
or
or
insb
sbb
pop
sub
mov
xchg
jnp
mov
mov
outsl
iret
or
mov
xlat
mov
push
sahf
adc
mov
repnz
stos
rol
hlt
lea
fdivl
sar
int
nop
fldl
subl
ljmp
or
mov
pop
fcomps
push
sub
shlb
xchg
enter
mov
fstpl
mov
mov
xlat
popf
stos
pop
push
ja
push
cmpsb
cmp
shlb
mov
test
mov
push
push
add
push
dec
loop
je
dec
jnp
cs
nop
push
sarb
enter
inc
and
jp
loope
stos
lods
fwait
sub
cmpsl
call
xchg
pop
fs
xchg
cmp
jg
add
xchg
imul
scas
rclb
lods
inc
fwait
movsb
sub
scas
add
mov
aam
and
mov
mov
lock
sti
outsb
xlat
adc
in
jge
jbe
call
call
les
aad
sbb
jge
fsubl
mov
cltd
dec
jne
ss
loop
pushf
jp
dec
test
int3
fucom
dec
push
jg
imul
inc
dec
enter
jg
test
jmp
pop
cmpsl
stc
aam
xchg
jle
xor
push
jae
pusha
adc
push
inc
jo
push
aas
mov
jb
inc
push
cmpsl
adc
pop
imul
mov
ja
jp
dec
xlat
aaa
inc
in
mov
push
cmp
cmpsb
xchg
cmp
outsb
outsb
ss
pop
test
or
popf
or
outsb
das
lahf
sub
sbb
cmpsl
jnp
mov
arpl
or
xor
mov
lock
repz
enter
add
bound
mov
mov
add
push
mov
pop
insb
mov
mov
aam
test
adc
in
lods
adc
sub
mov
inc
inc
repnz
dec
sub
movlps
movsl
test
inc
push
jecxz
cmp
clc
push
lahf
jl
push
push
sbb
lods
clc
or
andl
ja
push
push
popa
stos
mov
dec
jg
shlb
push
inc
push
iret
std
push
lret
mov
add
stos
xor
adc
incb
in
sbb
shl
insb
inc
xlat
rcl
jb
cltd
sub
xor
inc
mov
and
icebp
icebp
call
es
rorl
push
xor
push
adc
pop
inc
mov
mov
je
pop
popa
push
lods
jnp
xor
fstl
sbb
cmp
ljmp
inc
pop
cld
popa
mov
fdivrs
fs
mov
jbe
inc
das
ljmp
push
sbbb
fisttpl
add
rdpmc
jl
cmp
add
push
jo
mov
mov
pop
xchg
lds
notl
in
stos
lods
mov
add
insl
rclb
and
int3
mov
pop
mov
push
outsb
xorb
rclb
add
testb
daa
int3
mov
test
inc
and
iret
das
cmc
xchg
stos
mov
in
pop
xchg
imul
cld
loopne
mov
out
ficoms
pop
leave
out
jmp
cmp
jge
pop
jle
push
mov
xor
push
xor
xor
mov
insb
push
cmp
cmpsb
sub
sbb
inc
ds
push
into
add
sbb
enter
pusha
dec
nop
mov
lret
lret
mov
addl
pop
out
movsb
sub
das
shll
pop
jle
jae
cmp
add
iret
ss
inc
cmp
lcall
clc
shll
sar
jl
push
xchg
mov
jecxz
mov
rcll
ja
shrb
add
sub
inc
out
sahf
movb
movsb
pusha
loopne
repnz
dec
iret
dec
sub
pop
ds
ljmp
arpl
decb
add
pop
fcmovnb
add
dec
cmc
lcall
js
inc
arpl
rorl
mov
lcall
scas
enter
das
out
adc
clc
repz
fisttps
sub
inc
sbb
add
mov
loope
in
mov
imul
and
cmc
cmc
jns
pusha
adc
dec
adc
inc
rcll
sub
and
pop
sub
mov
sbb
int3
cmpsl
in
push
push
fwait
rorl
imul
cmp
pop
add
mov
fisubrl
js
inc
sbb
adc
aas
cmc
ret
or
or
fidivl
jno
fstps
jle
inc
pop
sub
mov
and
mov
jmp
cmp
mov
dec
pop
lahf
je
mov
out
pop
push
dec
repz
lret
adc
push
dec
push
inc
xor
repz
xchg
mov
sti
mov
push
ret
adc
mov
sub
loope
sti
or
push
push
fwait
sbb
add
aaa
lea
repz
xchg
or
mov
ljmp
aam
aaa
mov
sbb
popf
xchg
push
mov
push
dec
fsts
push
das
xor
out
dec
pop
pop
outsb
xchg
xchg
dec
sub
jno
cs
mov
sub
jg
inc
xor
push
popa
test
xchg
cmpsb
repnz
jb
mov
xchg
frndint
push
mov
mov
or
sar
sti
push
mov
pop
or
shll
sbb
jae
sahf
cli
lret
rcll
cmp
fsubrp
fcoms
testl
ja
nop
fsubrp
aad
xchg
cmp
test
pop
cmp
icebp
pusha
fcoms
aas
jecxz
repnz
xor
ja
mov
xchg
in
outsl
xor
cmpb
stos
add
cs
repz
aaa
mov
mov
push
xchg
lahf
mov
arpl
je
scas
sub
push
repz
mov
negl
outsb
leave
sub
push
aad
pop
xchg
decl
in
and
test
negb
insl
sub
mov
jns
xor
dec
loop
ret
xchg
std
out
add
cmp
and
cs
xor
inc
fwait
cmp
cmp
lahf
jns
and
mov
out
mov
ret
and
xchg
and
pop
rcrl
in
movb
in
pop
mov
mov
enter
and
jo
mov
notb
out
add
inc
repnz
or
arpl
outsl
or
adcb
lea
adc
pusha
aaa
xchg
loope,pt
and
notl
out
inc
sti
dec
cmp
sub
mov
cmc
lock
pop
or
fldt
cmp
xchg
push
call
cld
xchg
mov
sbb
in
std
ja
dec
data16
mov
fsubrs
movsl
out
pop
test
sbb
mov
xchg
iret
ffreep
push
sbb
divl
fwait
outsl
push
cld
or
in
outsb
test
push
mov
push
ja
rclb
add
pop
xor
or
in
mov
mov
outsb
cmpsb
mov
dec
jle
stc
inc
pop
inc
mov
lock
xor
pop
stos
sbb
or
jnp
pop
jmp
outsb
sbb
sbb
in
xor
sub
push
and
add
sub
sbb
mov
loopne
sub
ss
dec
leave
pop
add
int
xor
sbb
pop
repnz
mov
movsl
xor
mov
ficomps
sti
cwtl
mov
mov
jp
decl
fcoml
leave
imul
jns
lahf
jbe
add
or
int3
int
xor
popf
data16
xlat
out
xchg
sub
rol
jle
dec
mov
ja
adc
jne
repz
dec
sub
fnsave
dec
scas
jle
sti
cmp
adc
rcl
cmp
mov
call
int3
loopne
fnstenv
dec
sub
jnp
aam
mov
pop
mov
divl
or
mov
int
and
xchg
jb
and
imul
mov
js
ljmp
gs
xchg
adc
outsb
jbe
int
mov
popa
ret
ljmp
loop
push
mov
xor
and
std
jbe
pop
cmpsl
adc
mov
mov
int
int
xlat
mov
mov
movsl
push
out
lods
enter
cli
int3
dec
in
lret
mov
push
pop
ja
sbb
loop
clc
xor
ja
lock
sti
add
es
addr16
xor
pop
mov
sbb
push
ds
push
inc
push
xor
fsub
xchg
or
xor
cmpsl
sbb
xchg
arpl
sbb
xor
xor
lcall
inc
out
inc
or
movswl
outsb
sub
scas
pop
sub
hlt
ficompl
loope
or
cltd
cwtl
stos
adc
sbb
loope
es
lret
fucomp
pop
into
test
adc
pop
jge
xchg
insl
bound
jns
jmp
out
jne
inc
inc
xorb
popa
inc
jnp
in
xor
frstor
lcall
pop
sub
mov
stos
imul
shld
popf
add
notl
sbb
push
pop
ja
cld
cld
cmp
push
mov
dec
push
add
pop
cmp
jecxz
movsl
pop
xorl
jecxz
pop
loopne
test
movsb
arpl
push
je
inc
push
scas
sahf
jb
enter
inc
mov
inc
or
nop
ja
pop
xor
xorb
pop
ret
push
mov
shrl
enter
adc
mov
pop
add
das
mov
jb
cmp
aad
js
fmuls
call
lock
fnsave
adc
mov
or
mov
fldl
jbe
xor
stc
jl
test
dec
jp
fldenv
add
scas
pop
adc
xchg
int
jo
mov
adc
sbb
call
in
xor
inc
pop
insl
mov
ret
pop
aad
mov
fstpt
in
jo
xchg
lods
int
pop
push
mov
jae
mov
push
mov
add
out
cmp
cld
push
xlat
es
cmp
add
mov
daa
jne
sub
mov
push
pop
inc
mov
aas
cmp
imulb
inc
fstpt
dec
mov
sub
sub
aas
inc
push
pop
aam
out
movsl
push
test
cmpsb
addr16
sarb
shr
orb
xchg
clc
adc
fucomip
rclb
mov
jb
push
fistl
cmc
xchg
pop
sub
movsl
and
andl
jb
or
bound
mov
ror
xchg
jnp
mov
mov
inc
pop
jbe
jmp
xchg
jp
jle
adc
in
aaa
bound
adc
pop
rcrl
stc
das
ja
scas
movsl
xchg
and
cmp
rclb
aaa
cmc
dec
repnz
sbb
test
mov
add
or
mov
mov
xchg
enter
sbb
scas
or
mov
push
or
jae
fbstp
in
fmuls
cld
imul
mov
ds
jb
icebp
nop
cmc
push
pop
add
rcrl
jns
es
clc
lret
icebp
push
int
test
sbb
pop
or
mov
adc
ret
movsl
and
dec
mov
loopne
sub
mov
leave
icebp
test
icebp
sbb
sub
pop
mov
nop
mov
mov
lea
add
lea
movsb
jge
inc
int
and
inc
mov
cmc
mov
mov
test
xor
arpl
loope
adc
ds
push
cmp
pop
and
or
lcall
mov
pop
push
loop
shrb
sbb
sbb
mov
data16
xlat
xchg
push
xchg
mov
adc
pop
lahf
shlb
mov
adc
cltd
adc
enter
xor
add
cmc
mov
ret
ret
rolb
mov
add
xor
jnp
mov
push
lods
daa
xchg
push
and
push
sub
push
jp
in
mov
jl
mov
jb
xchg
push
or
fmul
push
xor
add
push
je
clc
cwtl
jnp
enter
clc
push
or
adc
mov
xchg
out
movsb
xchg
jo
out
clc
stos
movsb
out
out
xchg
push
jns
jnp
pop
lds
hlt
fwait
inc
imul
lods
or
dec
mov
sub
das
mov
jae
fdivr
je
mov
fisubl
inc
xchg
roll
ja
mov
movhps
cmpsl
lret
jmp
pop
mov
xor
out
add
scas
jmp
push
int3
sbbb
lods
outsl
pop
push
mov
aas
std
ljmp
in
in
push
push
inc
test
xchg
test
jno
fadd
mov
xchg
ja
mov
lds
shrb
loopne
jns
and
inc
out
jl
sub
test
in
nop
lret
push
push
mov
int
cmp
mov
adc
imul
cltd
in
iret
cmp
xor
pop
xchg
or
mov
ret
push
jns
inc
sub
fsubs
repnz
call
sub
fwait
out
push
mov
cmc
shr
notb
mov
inc
cs
and
enter
cld
push
mov
sub
inc
jg
xor
sub
pop
enter
xlat
ds
pop
dec
enter
mov
mov
pop
push
push
or
fistl
mov
adc
ret
in
ja
test
mov
adc
fisubrs
out
jnp
inc
inc
pop
or
inc
ret
pushf
mov
aaa
and
mov
out
push
in
mov
imul
xor
xchg
jmp
aas
mov
jno
jno
pusha
sub
sub
xchg
cmpl
or
lahf
es
dec
mov
dec
and
mov
push
repnz
jmp
fsubs
inc
mov
lds
std
fadd
movsl
aad
cmp
pushf
mov
lock
push
loope
and
inc
jno
lret
push
fwait
mov
cld
dec
dec
loop
jmp
imul
stos
and
cmp
rcl
faddl
addr16
sbb
fdivs
mov
push
dec
pop
xor
mov
cmp
inc
sbb
push
ss
aas
cmp
insb
jne
orl
jae
mov
add
and
pop
mov
movsl
in
jle
aaa
dec
mov
insb
mov
dec
mov
pop
in
out
lea
push
orb
ja
push
pop
mov
add
xlat
jo
vsqrtss
fsubrs
mov
pop
dec
test
les
sar
pop
sbb
gs
fldcw
pop
popf
popa
inc
aam
push
cmp
mov
and
inc
ret
scas
repz
sti
sub
andl
mov
mov
mov
cmp
repnz
lock
stc
xor
push
mov
sbb
nop
xchg
push
loop
sbb
call
outsb
aas
sbb
leave
and
jb
or
xsha1
cmpsb
lret
cmp
ds
aaa
fisubl
fstps
push
pop
mov
and
xchg
ljmp
leave
mull
mov
pop
rcr
jle
lds
push
lcall
add
lret
sbb
inc
mov
into
sub
xor
push
rep
lds
xchg
dec
fs
sbb
adc
xchg
aad
add
pop
add
mov
jno
out
mov
or
cmpb
nop
fdivs
push
fbstp
or
cmp
inc
adc
insl
add
xor
jo
push
jns
and
dec
clc
cmpsb
out
jg
call
lods
add
out
mov
scas
int3
mov
nop
push
jb
ja
cmp
fnsave
dec
mov
add
mov
xchg
rorl
mov
jbe
pop
pusha
sbb
jo
pusha
push
insl
mov
mov
rorb
ficompl
test
add
pop
imul
adc
adc
test
stc
cwtl
cmp
dec
insb
add
in
push
mov
inc
leave
inc
inc
hlt
in
xchg
dec
or
cmp
sbb
dec
cmp
mov
push
or
sub
out
shrb
lret
fs
jae
cld
scas
jb
shrb
fiaddl
sbb
mov
cmp
in
pusha
cwtl
jg
mov
in
push
test
push
clc
out
xor
inc
jb
push
lea
sub
and
pop
es
dec
arpl
dec
stos
mov
pop
ljmp
or
aam
push
int3
shlb
jae
cmc
out
inc
xchg
bound
inc
push
xchg
test
cli
sbb
stos
inc
ds
fdivl
inc
repnz
fidivrs
xor
xchg
lret
stos
xorl
movsl
int
aas
mov
mov
jne
clc
pop
cli
pop
sbb
dec
outsb
sub
loope
mov
push
adc
repnz
in
fcoml
shll
cwtl
or
repnz
test
ds
sarl
xchg
js
push
push
push
jb
daa
in
push
imul
stos
pop
jg
out
jg
xchg
lock
stos
sub
adc
mov
adc
cltd
dec
out
and
push
ret
xchg
bnd
insl
cmp
sarl
rcrl
xor
and
movsl
jl
cwtl
adc
mov
aaa
enter
loope
pop
mov
inc
or
mov
mov
fsubrs
mul
pop
push
pop
and
int3
lahf
and
shrb
jae
mov
cltd
mov
aad
outsb
inc
rorb
jnp
cld
daa
or
cmpsb
jne
imul
cmp
jnp
jb
jge
pop
cmpsl
outsb
test
add
stos
jne
adc
iret
ds
lcall
mov
mov
ja
nop
aas
sub
lods
aad
insb
dec
cmp
jo
mov
jns
scas
int3
shlb
pusha
or
aaa
cmpsb
fwait
outsb
les
repnz
jmp
call
push
sarl
out
fs
and
mov
movsl
out
fistpl
mov
mov
jo
pusha
test
ds
stos
int3
dec
xor
inc
and
pop
adc
jecxz
scas
ffree
les
xchg
push
dec
je
fadds
pop
aaa
cmp
dec
mov
rorl
mov
pop
or
add
aad
popf
sbb
cwtl
or
leave
xchg
int
push
hlt
jno
dec
jp
dec
xchg
sub
mov
imul
mov
mov
or
cmp
inc
xchg
pop
mov
insl
jecxz
mov
xchg
dec
rcrb
das
and
dec
fscale
inc
jno
dec
xor
pop
xor
mov
push
dec
ss
js
and
inc
adc
add
xchg
mov
mov
mov
ror
inc
int
jp
add
repnz
xchg
and
mov
add
pop
fwait
mov
add
cmc
push
push
xlat
outsb
sub
inc
dec
movl
aas
ds
dec
inc
icebp
fidivrl
push
cmp
js
lret
fnstsw
jo
inc
sub
xchg
inc
and
xchg
cltd
adc
cwtl
test
cs
xor
insl
test
cmpsb
dec
scas
int
aaa
pop
pop
xchg
add
pop
sub
cmp
xchg
jle
mov
xchg
cwtl
sbb
sub
add
fisttpl
mov
loop
mov
push
ja
inc
cmp
loop
andb
lret
lods
or
cmpsb
sahf
xor
pop
int
mov
jmp
data16
fcompl
dec
je
xchg
test
pop
or
ds
dec
mov
mov
out
mov
jle
lods
dec
les
adc
pop
pop
mov
imulb
aaa
loopne
lods
push
xor
daa
outsl
cli
jae
cmc
clc
bound
pusha
add
aam
push
adc
push
xchg
movsb
xor
mov
xchg
adc
pusha
clc
pop
outsb
adc
repz
mov
inc
add
jae
fdivrl
fadds
movsl
in
mov
or
leave
arpl
cmp
xchg
jne
dec
movl
dec
ja
out
or
loopne
int3
das
sti
xorl
sbb
repnz
sbbb
sarl
testb
mov
movsl
xor
pop
pushf
mov
mov
mov
rcr
add
fcoms
pusha
add
addr16
push
lea
mov
mov
mov
in
into
jno
call
xor
xchg
adc
mulb
mov
sbb
std
mov
jecxz
adc
inc
inc
in
cmc
test
mov
outsb
pusha
cld
push
pop
cmp
cmp
lds
sarl
dec
jno
sub
jp
push
jge
xchg
fnstsw
mov
das
repnz
mov
and
push
loope
lods
xchg
mov
adc
mov
das
rcrb
in
movsb
shll
in
je
jnp
shlb
loop
dec
adc
das
fcomi
mov
sub
cmpsl
mulb
bts
into
test
inc
cltd
sbb
call
add
std
fdivl
xor
sbbb
int
xor
push
pop
bound
ret
cmp
push
dec
mov
cs
and
outsb
pop
jp
fs
push
dec
imul
pushf
test
movsl
fimull
pusha
or
push
lret
mov
test
inc
sub
push
in
ja
clc
cmp
jns
cltd
addr16
adc
mov
sub
data16
xchg
mov
add
outsl
rcll
ret
mov
pushfw
cltd
mov
int3
fisubrl
inc
js
lods
mov
addr16
push
int3
dec
mov
xchg
dec
jmp
pop
jp
fadd
leave
mov
notb
xchg
jo
pop
xlat
xor
test
je
adc
stc
pop
data16
mov
mov
mov
mov
scas
mov
and
cld
sbb
out
xor
and
xor
xchg
sbb
sub
xorl
push
shlb
sbb
repz
jg
jmp
out
in
in
fisttps
test
gs
xchg
jl
cli
push
lret
in
inc
adc
pop
stos
sub
mov
or
rcrl
lahf
mov
mov
pop
pop
cld
adc
jecxz
xchg
jle
inc
sbb
sbb
adc
lds
icebp
cli
inc
add
movsb
aad
addr16
js
pop
daa
stos
imul
stc
les
sbbb
js
sub
test
in
fwait
or
pusha
popa
xchg
adcl
mov
outsb
xchg
in
inc
rcl
shl
fs
push
aas
pop
push
mov
dec
adc
popa
adc
cmp
int3
xor
cmpb
push
inc
fwait
mov
mov
adc
cmp
clc
cmp
pop
or
outsb
push
out
pop
cli
ffree
in
and
nop
pop
sub
daa
mov
mov
sbbb
in
je
jb
nop
cmp
mov
addr16
cmpsb
xchg
dec
ror
sub
pop
or
ss
jae
sbb
das
cltd
pop
sbb
mov
cmpsl
imul
pop
xor
hlt
inc
mov
lods
mov
adc
pop
out
adc
sub
add
popf
arpl
das
imul
xchg
loope
fbstp
fs
mov
push
shll
scas
dec
fidivrl
mov
mov
mov
into
inc
jmp
lea
jns
ljmp
cltd
push
test
mov
pop
xchg
mov
in
scas
mov
or
ss
xor
pop
dec
lret
enter
scas
cmp
fisubrl
movb
outsl
pop
cmp
js
push
add
cwtl
push
and
test
cs
out
cmp
cld
loope
in
in
sub
jne
arpl
xlat
js
repnz
dec
rorb
add
fimuls
lcall
cmp
mov
je
pop
fbld
cmp
and
cmp
stos
mov
sub
inc
daa
or
fldcw
aad
fs
mov
repz
jbe
cmp
lock
mov
aam
aas
mov
cmp
inc
jns
icebp
mov
adc
js
adc
loope
loope
adc
cmp
jmp
ja
adc
movsl
mov
fisttpl
pop
negb
sub
mov
cmp
loope
mov
movlps
xchg
adc
mov
mov
idivb
rolb
and
lods
sbb
mov
sub
add
aaa
out
inc
mov
fwait
divl
xchg
dec
cmp
int3
xor
sub
cmp
cmp
xor
ret
or
adc
adc
push
fsub
into
mov
hlt
out
sbb
in
aaa
decl
cmp
sbb
adc
xchg
in
xchg
or
push
lcall
sub
mov
mov
mov
hlt
js
or
jg
fwait
jle
pop
pushf
test
mov
cmpsl
fwait
aas
data16
sbb
mov
or
xor
xchg
inc
inc
mov
mov
and
add
add
loopne
xor
jecxz
adc
movsb
fimull
cmpsb
mov
adc
lds
push
outsb
mov
and
scas
adcb
stos
adc
inc
mov
jecxz
adc
inc
pop
adcl
rcl
sbb
movl
jns
and
inc
cmpl
or
enter
jns
test
hlt
mov
jecxz
insl
jmp
stc
sub
lock
mov
mov
mov
shll
mov
sbb
xor
ficomps
xor
mov
add
leave
push
ret
cltd
gs
lret
sub
xor
xor
rcll
lret
and
push
addb
xor
jl
jge,pn
or
rorb
fs
imul
out
das
dec
subl
sbb
xchg
sahf
lret
add
idivl
aaa
cmp
xchg
and
jg
mov
ret
movsl
jne
in
subb
es
sbb
mov
add
mov
push
ljmp
aaa
cltd
repz
aam
mov
ret
mov
repnz
mov
push
and
xor
jbe
adc
movsl
pushf
lahf
push
rcrb
popf
jmp
xchg
jno
and
sub
outsb
pop
ret
icebp
std
stos
pop
cmc
adc
popf
push
push
jb
cmp
popa
mov
or
xor
jmp
cli
xchg
aam
add
enter
jecxz
inc
cmp
dec
mov
dec
jae
stos
inc
insl
cs
sub
popf
inc
into
sub
insb
bound
aaa
fbld
lods
dec
frstor
aaa
lock
callw
imul
and
mov
sub
push
dec
es
sbb
int
lret
pop
mov
sbb
mov
cmp
adc
add
push
rorb
sub
pop
je
inc
insl
in
dec
addr16
mov
mov
roll
xor
stos
sbb
jns
sub
rcl
jg
pushf
jbe
imul
pop
in
xchg
std
lods
adc
mov
out
and
or
leave
loope
arpl
lret
iret
test
or
insb
adc
ja
ret
xor
sub
cmp
sub
aad
jl
loop
mov
inc
xor
movsb
mov
mov
or
lret
and
sub
cmc
gs
out
push
dec
loope
outsb
or
mov
xchg
sbb
inc
lds
imul
out
push
enter
pop
ret
adc
nop
adc
test
shlb
shlb
ret
sbb
cmpsb
jno
mov
scas
loope
sbb
add
xor
in
pop
lds
mov
int
adc
jnp
filds
out
xor
ret
mov
sarl
or
inc
stos
push
imul
mov
mov
insb
add
sub
mov
xchg
push
popa
arpl
xor
xor
pop
push
gs
push
pop
add
jl
enter
cmp
jmp
xchg
push
xchg
data16
stos
int
icebp
push
insb
loopne
mov
xchg
les
imul
cltd
or
sbb
pop
push
stos
xor
int3
mov
sbb
iret
cmc
aad
sbb
xchg
jge
scas
fildll
les
cmp
and
dec
inc
or
sub
cmp
call
jecxz
sub
fcmovne
push
nop
mov
xor
das
cmp
xchg
and
shlb
and
jle
dec
jbe
sbb
fwait
mov
push
mov
ds
xor
sbb
mov
mov
xchg
cmp
or
xchg
or
cmp
clc
fisubrl
ds
xchg
stc
xchg
in
mov
popf
jmp
ret
rcr
xchg
inc
mov
inc
mov
mov
push
push
shlb
push
cmp
les
lds
push
ret
xchg
mov
pop
and
mov
pop
push
dec
cli
pmaxub
sbb
sti
nop
add
cmc
push
xchg
test
pop
aaa
loope
lahf
out
popf
insl
sbb
aaa
fcomp
loope
xchg
xchg
sbb
add
sub
adc
xor
movsb
pop
arpl
pop
push
mov
int
outsb
add
fsubl
cmp
scas
enter
inc
fnstsw
mov
jg
stos
scas
outsl
sbb
scas
in
pop
int
cmc
add
push
fld
out
push
test
testl
or
cmp
jbe
sbb
cld
mov
shr
and
jbe
ja
pusha
lret
sub
testb
push
jecxz
add
ja
jp
sti
cmp
in
int3
aam
outsb
aam
jl
inc
cmpsl
loopne
sub
int3
mov
cmpsl
xchg
fdivrl
xchg
scas
sbb
pop
jne
je
ret
cmp
out
icebp
mov
sub
add
mov
nop
mov
stos
jg
dec
rcll
repnz
pop
shlb
push
sub
cwtl
add
push
mov
xor
push
fwait
or
push
xchg
cmpsl
cmp
ret
mov
in
ret
mov
dec
dec
xorb
mov
and
mov
or
or
aaa
nop
lea
push
in
sbb
ds
inc
mov
pop
call
sbb
aad
mov
movsl
or
and
iret
add
jae
out
mov
or
or
or
in
mov
out
sti
aam
loope
xchg
add
insb
xorb
push
inc
dec
add
in
dec
dec
jae
int3
inc
pusha
or
inc
test
inc
in
mov
mov
sub
mov
sbb
adc
dec
jnp
xchg
adc
fcmovne
jo
incl
lds
mov
jne
fisubrl
dec
cmpsl
mov
dec
outsl
push
mov
mov
inc
sub
in
sub
jge
les
lods
fists
mov
dec
je
xlat
push
sub
je
and
xchg
dec
sti
lea
addr16
cmc
sub
orb
ss
iret
outsl
mov
aaa
stc
dec
add
inc
mov
mov
repz
loop
lock
das
add
fsubr
imul
enter
andl
enter
xchg
xchg
fidivl
jmp
push
dec
add
les
vmovd
mov
enter
and
shr
arpl
stos
mov
dec
rolb
xor
xchg
daa
mov
movsl
sub
mov
je
jb
mov
jne
test
stc
outsb
rcrl
mov
mov
fcoml
jbe
adc
sub
fadds
cmp
js
movsb
iret
inc
mov
orl
jmp
push
cmpsb
loope,pn
mov
inc
push
cmpsb
shll
clc
std
cld
pop
mov
andl
mov
fs
ret
aas
sbb
iret
cmp
push
cmc
sub
adc
scas
out
cli
push
popa
push
push
out
or
mov
sub
fdivp
mov
imul
adc
std
cmp
ds
fidivs
les
xor
iret
out
stos
aaa
ljmp
mov
pop
imul
cmc
sub
inc
pusha
js
mov
xor
pop
roll
and
mov
xor
lods
lcall
out
mov
int3
das
frstor
xor
dec
sub
xor
dec
mov
mov
or
mov
sub
xorb
cmp
or
jb
adcl
add
mov
or
leave
and
stos
xchg
mov
mov
dec
jb
lcall
icebp
push
popa
cmp
xchg
xchg
rdtsc
dec
lcall
pusha
sub
and
pop
lods
into
fs
into
sahf
sbb
testl
sbb
in
rcr
shl
xor
clc
pushf
leave
fldenv
cmpsl
inc
je
mov
push
clc
in
fwait
jle
hlt
cmp
pop
lret
add
mov
sub
pop
inc
xor
lds
test
pop
testb
and
xchg
test
push
cmpb
addl
into
shrb
outsl
push
lret
mov
add
push
pusha
hlt
ret
mov
sub
insl
in
jnp
mov
leave
data16
cmp
cmp
and
pop
dec
clc
flds
mov
adc
inc
and
inc
rorb
jbe
lcall
mov
cld
mov
lret
fwait
mov
mov
les
and
imull
pop
mov
inc
mov
vmwrite
into
lcall
mov
sbb
push
lock
inc
or
out
add
js
sub
push
hlt
sbb
xchg
mov
mov
fldenv
mov
bound
jbe
imul
pop
adc
lahf
repnz
test
add
test
enter
int
movsl
std
lds
aad
std
jecxz
sub
adc
in
subl
add
jge
lods
js
and
sub
scas
nop
inc
or
imul
shrb
inc
mov
repnz
cmc
rolb
and
scas
pop
mov
hlt
ljmp
xor
add
and
call
repz
subb
das
lahf
jg
and
cmp
mov
sub
jns
add
xor
mov
inc
js
bound
repz
cmp
dec
cli
sti
insl
pusha
outsb
lret
or
xchg
in
jge
push
pop
mov
or
sub
sub
jmp
xchg
fldt
pop
xor
lret
call
pop
fsts
push
or
jle
mov
in
cmp
jge
insb
rcll
jmp
aaa
xlat
movl
loopne
mov
loope
cli
insl
aam
mov
fxch
sbb
jmp
jnp
repnz
movsb
cmp
sbb
aad
cltd
sub
inc
push
scas
xor
cs
fldlg2
int3
inc
and
aad
js
or
scas
fnstsw
dec
cltd
loope
mov
or
xor
add
stc
clc
or
call
aad
mov
xchg
lea
mov
xchg
in
inc
push
repnz
popf
jmp
scas
jo
cmpb
dec
and
adc
pop
fdivs
sti
pop
mov
stc
cwtl
cmpsb
vmulps
cmp
jae
scas
adc
add
sti
lcall
lcall
lods
das
and
ret
movsb
in
sahf
fidivrs
sbb
cmc
xchg
sbb
and
in
js
and
addl
fnsave
shlb
sahf
and
mov
loope
mov
cmpb
xchg
inc
les
imul
add
adc
and
sbb
and
pop
test
aam
xor
roll
cld
ss
stc
mov
ja
add
dec
int3
jl
pop
ljmp
andb
inc
mov
and
stos
test
pushf
or
scas
test
into
sbbl
js
shl
popa
mov
fistpl
push
pop
xor
adc
ror
test
in
cs
jbe
orl
out
sub
sbbl
std
sbb
adc
inc
dec
push
mov
jbe
jg
and
dec
es
insb
push
in
daa
push
adc
fildll
cmpsb
xchg
mov
insl
movsl
call
addl
test
pop
popa
mov
jmp
pop
pop
or
cs
mov
cltd
and
enter
or
pop
ret
mov
pop
jne
jl
out
stos
js
lock
mov
xor
sarl
sub
in
jb
dec
push
mov
push
bswap
icebp
mov
outsb
jnp
jg
mov
ret
inc
pop
fwait
sub
das
aaa
arpl
in
jmp
mov
rclb
sub
in
dec
mov
mov
push
sub
add
test
add
shrb
cld
cmpsl
fidivl
jns
push
cmovl
cmp
outsb
pop
pop
in
or
ds
fucomip
fidivrl
add
push
jno
and
int3
into
int
cmp
jb
and
sub
dec
sbb
mov
push
orb
dec
test
push
popf
mov
sub
arpl
dec
cltd
xchg
iret
inc
popf
pop
mov
mov
pop
mov
mov
es
add
imul
push
lea
mov
std
cmp
lahf
mov
and
aam
or
test
cmc
adc
sbb
or
push
mov
fidivl
mov
arpl
sbb
lea
adc
push
and
hlt
incl
aad
push
sub
xor
push
jns
arpl
mov
aaa
cmp
call
mov
sbb
dec
mov
lea
int3
sub
mov
adc
sub
add
cli
xor
dec
bound
mov
xorl
sub
dec
mov
sti
lods
and
test
lods
add
lods
lret
and
adc
shrl
cli
dec
mov
mov
or
and
lcall
ss
push
in
pop
push
inc
jmp
adc
stc
pop
std
jb
jae
sbb
jge
cmp
jg
or
mov
cmp
imul
out
cmp
outsl
jnp
mov
xchg
lret
cs
push
adc
lahf
aam
arpl
test
repnz
fldl
cmpsl
mov
dec
xor
call
adc
fadd
sbb
xchg
push
les
sub
mov
aam
and
fdivrl
push
fcmove
enter
pop
mov
lods
bound
sbb
aad
dec
fmuls
xchg
xor
sub
test
dec
dec
mov
inc
pop
xchg
cmpsb
mov
scas
insl
mov
repz
in
sbb
xchg
inc
loopne
in
test
dec
and
out
xor
in
int
lock
push
pop
or
imul
mov
push
ret
push
scas
sub
dec
cld
push
adc
sub
or
out
and
xchg
je
lret
mov
sarl
gs
dec
cmp
mov
and
inc
jle
fsubr
je
loope
pop
stc
aaa
call
out
cltd
outsl
lcall
stos
outsl
test
aam
divb
imulb
mul
sarb
mov
jae
gs
leave
cmp
arpl
sub
or
std
add
sysexit
cmp
pop
lods
mov
imul
bound
push
inc
mov
fildl
mov
jecxz
cmp
pop
cmp
xchg
out
xchg
push
mov
je
ljmp
sbb
sub
scas
cli
xchg
xor
mov
push
bound
and
ss
jns
push
in
mov
rorb
xor
stos
mov
in
stc
inc
jl
and
mov
inc
sarb
lods
mov
mov
jle
sbb
inc
cld
xchg
test
xchg
inc
lods
das
pop
and
bound
mov
aas
js
xchg
jge
dec
jno
shrl
mov
test
jne
xor
inc
out
jo
mov
xchg
adc
add
pop
pop
outsl
in
xchg
mov
jbe
loope
and
adc
push
fistpl
xchg
dec
in
mov
xchg
mov
and
xchg
xor
dec
cld
mov
icebp
xchg
add
arpl
insb
jns
jle
jl
jne
and
mov
stos
mov
and
or
leave
dec
pusha
pushf
sbb
inc
lods
mov
pop
aad
hlt
push
jo
jp
cmpsl
jne
jle
out
fiaddl
pop
pop
xor
jmp
inc
inc
cli
pop
lahf
dec
pop
rorl
out
test
iret
ficoms
mov
xlat
mov
sbb
jns
pop
ret
or
inc
mov
std
loope
adc
mov
shr
repnz
leave
lds
test
xchg
mov
sub
pop
push
mov
inc
and
add
ljmp
or
jg
push
jp
in
cmp
lds
jecxz
mov
or
push
xchg
sbb
xor
pop
movsl
in
leave
pop
sbb
fisubrl
adc
sub
sbb
test
sub
pop
repnz
jl
add
dec
adc
sub
dec
sarl
jecxz
lea
mov
sub
sub
lret
js
stos
pop
out
bnd
incb
pop
and
cli
data16
fwait
repz
into
inc
adc
inc
pop
or
jo
jl
xor
inc
and
loop
decb
mov
rclb
adc
mov
orb
sub
or
int3
repnz
pop
cmp
pop
jge
shll
push
and
push
sub
setno
test
lret
sub
inc
iret
in
out
push
stos
xlat
jmp
out
fwait
out
insl
addr16
push
mov
out
mov
pushf
add
lahf
mov
int3
pushf
xor
pop
ss
add
rorl
xchg
adc
repz
xor
movsb
jne
repnz
dec
xor
loopne
push
jb
sub
sbb
hlt
mov
jg
sbb
lods
xchg
cmp
dec
leave
jp
pop
pop
jge
aad
mov
xor
cld
mov
xor
mov
cmp
popf
sbb
jl
pop
and
mov
cld
ja
push
dec
xlat
and
testl
cmpsl
sbb
movsb
sbb
adc
cmp
sbb
push
fsubrp
aad
fwait
stc
inc
addl
sub
dec
ret
inc
aaa
imulb
pop
pop
mov
in
test
xchg
cmc
test
into
pop
ds
mov
enter
xchg
out
push
inc
std
xchg
cmp
mov
cmpsb
ds
popf
add
adc
rorb
mov
sub
pusha
jb
push
mov
mov
enter
rol
jl
jl
sahf
mov
mov
shlb
sub
push
push
jmp
mov
ds
popf
clc
cltd
jnp
sbb
adc
std
adc
and
mov
adc
insb
pop
inc
push
jecxz
mov
jmp
stos
sbb
jg
mov
xchg
push
xchg
leave
sarl
sub
push
pushf
push
int
sbb
or
cli
xchg
addr16
adc
sbb
jl
dec
xchg
aad
stos
jmp
mov
push
icebp
or
sub
mov
pop
aad
icebp
xchg
lret
scas
jmp
xchg
out
dec
pop
push
icebp
cmp
cmp
jno
cmp
or
nop
cmp
mov
push
loope
inc
stc
aaa
adc
push
xchg
lock
dec
imul
lds
nop
and
sarl
scas
test
fs
cmp
push
or
aam
shl
lcall
xor
mov
push
lds
gs
xlat
scas
pop
addr16
ja
lahf
mov
popf
das
dec
rcrb
stos
movsb
mov
in
fsubl
mov
and
dec
sbb
imul
push
add
mov
mov
out
pop
xor
push
cmp
cwtl
push
mov
mov
ja
cli
jl
lcall
sar
fcoml
mov
mov
scas
xor
cmp
adc
pop
test
repnz
loopne
jne
jb
fstpt
addb
adc
aam
xchg
xorb
jns
fwait
xor
imul
dec
fnstenv
faddl
popf
jg
lret
xchg
push
pop
es
mov
or
pop
adc
std
lock
arpl
jp
lahf
aad
testl
adc
jp
fs
cmpsb
mov
or
js
sub
pop
ja
sahf
xchg
xchg
push
xor
pop
pop
pushf
stos
sbb
sub
adc
xchg
lret
push
adc
xor
and
jb
lret
push
aas
push
adc
mov
imul
outsb
mov
pusha
cmpsb
jo
cmp
dec
nop
and
dec
enter
sbb
xchg
out
pop
arpl
je
push
cmpsl
push
mov
je
push
mov
sub
in
fbld
pusha
je
cmp
cmpsl
fcoms
jl
es
notb
adc
mov
and
xchg
fsubr
xor
sbb
sbb
adc
cmp
adc
pop
int
imul
inc
mov
mov
fwait
xchg
mov
xchg
in
jecxz
sub
sbb
inc
into
in
mov
push
cltd
mov
pop
lea
shll
aaa
and
pop
aam
cwtl
sub
inc
loopne
push
push
pop
cld
sub
stos
inc
push
or
pushf
daa
jno
add
push
inc
push
es
xor
and
pop
push
and
inc
daa
movsl
adc
sbb
and
dec
xor
pop
mov
push
fldl
pop
ja
sub
cwtl
mov
aaa
into
lods
rep
mov
dec
jecxz
in
xchg
cld
and
mov
inc
outsl
inc
pop
dec
mov
push
mov
addb
sub
cli
and
lds
push
add
push
dec
data16
in
dec
inc
inc
jae
adc
or
enter
push
aas
pusha
mov
ficompl
mov
mov
jle
sbb
pop
pop
adc
jne
push
push
pop
push
stc
lea
xchg
jmp
mov
int
loope
xor
and
and
aam
mov
sar
ret
and
dec
push
decb
mov
pop
subl
dec
inc
ret
jecxz
cmpsb
mov
inc
push
xorl
data16
out
movsb
xchg
adc
jnp
adc
les
stc
into
cs
aam
mov
sbb
ret
jb
or
cltd
test
outsb
xor
in
jne
lods
stc
xor
orb
sti
fcoml
pop
mov
push
jge
add
lahf
sbb
inc
adc
mov
push
sarb
adc
ja
mov
fistpll
push
ss
out
pop
jp
cmpsl
xor
ret
lcall
rol
loopne
jmp
dec
les
jp
movsl
jl
push
out
test
pushf
iret
mov
pop
xor
or
sub
xchg
out
pusha
sub
cmp
cmp
xorl
mov
push
int3
xchg
and
notl
mov
fcmovnu
stc
icebp
pop
push
inc
stos
in
push
add
es
pop
into
enter
xor
jnp
xchg
insb
mov
jo
or
mov
jle
mov
jmp
daa
ja
rclb
pop
lahf
sub
lock
lods
push
lock
xchg
scas
sub
clc
out
stos
adc
jecxz
sti
mov
in
test
jns
jp
fdivl
push
sbb
or
push
pop
mov
and
gs
out
mov
mov
pop
fisubrl
push
fnstenv
out
ret
push
sar
call
call
loopne
jo
ds
rcr
jge
call
jmp
jae
push
nop
jge
sbb
lock
xor
xor
idiv
or
push
adc
mov
cmp
sub
jno
push
or
outsl
bound
sbb
mov
mov
fcompl
arpl
shr
cli
outsb
js
and
xor
call
lret
cmp
fisubrs
aam
xor
clc
icebp
pop
hlt
sbb
mov
sub
repz
repnz
stos
sti
loop
dec
idivb
add
push
aam
inc
or
jnp
scas
pop
inc
or
and
pop
scas
xchg
lahf
adc
xchg
into
loope
xor
clc
cli
mov
insl
pushf
mov
frstor
movsb
cwtl
jl
and
mov
jnp
jae
xchg
sub
cld
dec
cmp
push
cmp
xchg
push
sar
pop
loopne
scas
jp
jge
push
inc
clc
adc
sub
mov
add
clc
decl
sub
push
jbe
repnz
mov
dec
insb
loopne
lret
lock
mov
cmp
jno
aas
inc
in
ficoml
jae
insl
mov
mov
pop
in
insb
ds
in
mov
dec
xor
in
loop
mov
daa
lret
jp
enter
scas
movl
enter
data16
inc
sbb
aad
sbb
jmp
push
xchg
hlt
xchg
arpl
lret
js
in
mov
cmp
or
mov
ret
jae
pop
addl
es
push
push
add
push
fldt
and
icebp
jp
or
aaa
pop
sub
and
popa
mov
icebp
dec
aaa
jmp
jl
dec
pop
loope
jg
dec
jbe
dec
push
push
mov
pushf
nop
std
mov
inc
and
roll
pop
movsb
and
cmp
cmp
aaa
mov
mov
mov
cwtl
inc
outsl
and
lret
xchg
icebp
repz
fs
pop
jge
int3
in
cld
xor
fsubp
aas
inc
movl
int
outsb
jno
fidivs
frstor
insb
xchg
xchg
lock
jg
mov
and
inc
icebp
sbb
adc
add
sbb
adc
mov
pop
imul
cmp
sbb
push
imul
ds
jge
pop
aaa
and
int3
ja
sub
jecxz
fcmovne
sub
ret
faddl
jle
and
add
mov
lahf
movsb
xchg
dec
push
dec
fwait
lds
mov
jno
lahf
shl
repnz
outsl
adc
jmp
mov
fistl
sbb
cltd
xor
adc
cmpsb
lcall
cltd
pop
lods
mov
test
outsb
out
sub
arpl
adc
mov
repnz
jp
push
in
test
pop
rcrb
xchg
ficoms
fiadds
mov
fndisi(8087
scas
notb
scas
adc
cmpsl
pop
pop
les
jno
hlt
lahf
inc
add
iret
popf
and
xchg
cmp
push
icebp
inc
jmp
std
popa
ljmp
sahf
pop
cmp
xchg
rorb
std
daa
jmp
sub
jge
mov
ljmp
daa
fdivl
mov
je
in
repz
addl
jl
mov
std
bound
mov
sbb
icebp
cli
fisttpll
mov
mov
push
lods
and
loope
outsb
int3
jl
push
sbb
sbb
ficoml
adc
cwtl
jae
test
sub
test
movb
push
loopne
cmpsb
jmp
push
icebp
in
inc
arpl
pushf
shlb
jb
lods
in
adc
xchg
rep
int3
and
fdivrl
fstpt
inc
sub
mov
mov
push
pop
pusha
test
push
jp
jbe
mov
jbe
xor
sbb
stos
je
xorl
test
ja
mov
xchg
add
ljmp
in
mov
xor
push
sub
cmpsb
imul
inc
cmp
and
aam
test
push
mov
repz
sub
jno
mov
xchg
xor
fadds
mov
stos
gs
rcll
fwait
mov
call
pusha
pop
mov
cmp
shrl
xor
xchg
inc
negl
xor
sub
pop
rcr
and
push
shll
js
add
or
xchg
out
dec
or
inc
fsts
std
es
push
jns
pop
inc
adc
cmpsl
cmp
and
cmpsl
xchg
iret
push
popa
outsb
add
cli
movsl
ljmp
add
pop
xchg
imul
arpl
dec
jl
mov
mov
pop
hlt
mov
cmp
insl
dec
lds
fwait
pushf
mov
jge
pop
movsb
outsl
cmp
lcall
xor
pushl
sub
mov
xor
out
insb
mov
pop
jge
xor
jmp
lahf
pop
lds
jo
fimuls
ljmp
lret
fcomi
jl
and
enter
xor
jp
cmpsb
pop
jl
mov
sbb
nop
pop
cld
pusha
leave
repnz
sahf
xchg
mov
insb
stos
jbe
dec
mov
mov
adc
sub
mov
inc
adc
jle
icebp
mov
jns
xchg
push
ret
mov
loope
leave
rorb
fdivl
mov
inc
fnstenv
int3
mov
mov
sbb
lock
in
adc
mov
in
test
outsb
or
and
inc
inc
shr
ret
nop
pop
ret
movsl
sub
movsb
sbb
lret
jp
in
xor
into
sbb
mov
xor
push
cmpsb
xchg
test
imul
xchg
cmp
cmpb
lods
mov
ja
imul
leave
push
mov
outsl
xlat
test
ss
sub
popf
popa
addr16
and
adc
movsb
sub
cmp
xchg
lretw
mov
xchg
inc
pushf
push
push
test
push
mov
xor
mov
rolb
xchg
xchg
jle
jp
test
lret
sbb
mov
jmp
addb
cli
inc
fwait
std
push
sub
jae
pop
lods
jl
movsb
outsl
dec
inc
pop
loop
mov
push
jae
push
xchg
xchg
cs
cmc
inc
xor
jnp
inc
sub
cmp
fisttpll
mov
push
add
xchg
int3
adc
shll
andb
mov
sub
lcall
mov
cmp
pushf
inc
pop
lahf
mov
leave
mov
push
xchg
add
xchg
cmp
mov
cmp
jnp
pushf
cmp
lods
ret
pushf
into
xchg
push
sbb
pop
jo
lods
jo
inc
push
ljmp
fwait
in
in
std
mov
decb
out
and
mov
cmp
jnp
or
fwait
push
mov
dec
add
imul
loop
and
push
in
cmpsl
je
int
push
lcall
iret
dec
adcb
cmp
sub
repnz
insb
sbb
cmpsb
leave
scas
pop
pop
cli
rclb
in
stc
stos
push
inc
inc
adc
jb
movsb
push
mov
xor
push
in
mov
add
dec
scas
mov
in
hlt
jg
leave
dec
or
sbb
pop
std
mov
sahf
out
lds
ret
add
inc
and
dec
mov
cmpsl
fs
mov
jg
and
xorb
dec
movsl
lret
es
enter
jo
imul
mov
cmpl
xchg
test
or
jg
jg
adc
das
iret
adc
dec
sub
jge
je,pn
je
adc
pop
call
add
loop
cmpsl
jnp
and
push
cmpsb
fisubs
mov
popa
faddl
xorl
adc
and
jmp
jecxz
aad
mov
cli
repz
xchg
push
out
mov
ss
stc
pop
cmc
push
sbbw
test
aad
std
sbb
movsb
sub
add
push
adc
in
mov
lcall
lods
fwait
dec
or
aas
lret
lods
cld
mov
xchg
xchg
dec
jnp
std
dec
repz
add
cmp
mov
fiaddl
pop
or
lahf
loope
repnz
movsl
dec
pushf
jno
mov
mov
aas
mov
jle
mov
adc
dec
xchg
stos
test
inc
xor
sub
mov
int3
push
mov
push
addb
popa
testb
sarb
mov
clc
mov
push
shll
imul
aad
mov
and
in
notb
iret
clc
adc
adc
jle
mov
pop
loopne
pop
mov
lahf
imull
out
add
ljmp
dec
xchg
bound
testl
addr16
out
inc
mov
dec
ret
addr16
cmpsb
mov
mov
add
or
aad
xor
xchg
push
lcall
shrb
arpl
in
test
imul
cmp
mov
pop
adc
adc
icebp
jb
popf
test
data16
or
sarb
cwtl
fdivrs
or
push
adc
inc
pop
push
push
ret
push
in
push
push
push
mov
ljmp
shlb
jae
rorb
aas
outsb
mov
sub
outsl
inc
sbb
jl
loopne
xchg
jo
ja
inc
stc
subb
jne
jnp
sahf
push
mov
push
xor
std
into
rcrb
lea
std
xor
fstl
push
push
cli
pop
das
push
jmp
je
lcall
mov
test
cwtl
test
leave
enter
sub
repz
mov
shll
xor
in
sbb
or
sbb
cmp
lcall
dec
ljmp
lahf
ja
data16
arpl
movsb
ds
mov
and
mov
mov
pop
aam
out
and
mov
and
xor
ss
push
movsb
das
cmpsl
nop
test
icebp
dec
dec
lret
lahf
imull
sub
addb
inc
jmp
imul
mov
ret
mov
scas
scas
adc
lret
mov
sbb
int3
fwait
lahf
jae
negb
jae
jbe
pop
dec
jne
mov
mull
sbbl
pop
ljmp
adc
gs
scas
into
in
cmp
pop
jbe
push
shlb
or
data16
mov
mov
es
jns
xchg
mov
cmp
mov
stos
aam
lea
pop
shll
xchg
popa
xor
aad
mov
imul
sub
leave
mov
inc
into
jge
xchg
nop
mov
das
fcoml
cltd
inc
fbstp
gs
pop
sub
out
test
aaa
dec
add
scas
or
jge
cmc
mov
adc
mov
mov
test
jbe
push
hlt
add
into
cmpsl
imul
mov
test
movsb
ss
jl
mov
push
push
inc
jnp
cld
and
int3
and
lods
inc
adc
push
jmp
cltd
jns
outsb
int
pop
mov
mov
sub
cmp
bound
call
ss
mov
out
add
movsl
sub
dec
and
mov
cmp
push
movsl
ret
lret
aam
mov
push
and
inc
mov
movsb
mov
inc
lods
aad
push
dec
add
lret
jmp
repnz
sbbl
mov
mulb
push
iret
out
pushf
pop
test
imul
lock
cmp
call
js
mov
mov
adc
lods
xchg
outsb
cmp
cmp
popf
gs
cmc
lea
insl
sbb
xor
testl
dec
mov
inc
lcall
jle
jb
jle
popf
fsubs
and
aaa
outsb
test
xchg
ja
push
push
mov
sbb
push
pop
arpl
clc
jne
dec
loopne
pop
enter
push
ss
adc
add
mov
lret
cmpsb
pop
inc
mov
mov
fs
aam
sbb
hlt
pusha
mov
int3
xor
mov
adc
push
into
or
jns
filds
pop
cltd
outsl
jp
sbb
jge
nop
idiv
ss
js
adc
je
aas
add
imul
daa
xchg
mov
push
sarb
inc
popf
jmp
mov
lea
sbb
mov
test
inc
fldcw
leave
mov
mov
ljmp
ror
in
aad
jb
es
add
mov
mov
es
cmp
test
aaa
dec
out
jb
int3
jne
lea
scas
lods
fbstp
lods
insb
push
adc
mov
mov
jle
pusha
xor
bound
inc
lea
aas
dec
test
repz
insl
stos
pop
and
mov
xchg
fidivrl
cmpsl
mov
dec
push
and
adc
inc
xrelease
jmp
xchg
jb
bound
mov
sbb
pop
mov
add
xchg
jb
lock
test
adc
jbe
shl
add
fadds
sarb
and
leave
fidivs
stc
divps
stos
test
dec
in
xchg
gs
jg
mov
pop
push
movb
pushf
addb
fisttps
or
jbe
in
cld
call
arpl
mov
cli
pop
stc
loopne
cmc
cmp
xor
add
push
fstps
push
mov
cmp
inc
rcrb
mov
daa
xchg
mov
out
outsl
enter
insl
push
fmull
sub
gs
mov
fsubrs
ds
cmp
fcomps
add
jg
lds
aam
sub
sbb
dec
pop
iret
mov
xchg
mov
shll
faddl
mov
es
addr16
sti
test
or
ds
imul
sbb
int
sub
xchg
mov
stc
testl
pusha
fsubl
push
and
stos
pop
mov
cld
and
pop
sti
dec
mov
lods
adc
fistpll
mov
sub
dec
es
sbb
insb
push
arpl
arpl
mov
pop
es
push
mov
cltd
aam
mov
in
xlat
pop
add
int
loopne
ljmp
insb
rcrb
sahf
addr16
mov
sbb
cli
adc
push
sti
add
icebp
mov
xchg
pop
repz
rcrl
iret
mov
mov
push
xor
loop
mov
pop
lret
dec
test
test
int3
test
js
ret
cmp
push
or
xor
insb
mov
cs
add
cmp
push
inc
popa
fsubp
daa
fwait
jb
push
lods
lret
out
mov
ret
test
shr
xchg
jb
mov
push
push
hlt
jg
mov
pusha
repnz
mov
repnz
js
dec
sahf
pop
cmc
mov
xor
dec
ss
cmp
leave
inc
fcomi
mov
pop
and
mov
imul
adc
push
aas
dec
inc
xchg
and
sti
sbb
pushf
xor
mov
sub
xchg
mov
les
pop
mov
dec
ja
div
cmp
sahf
inc
cmp
test
sub
dec
icebp
fisubl
xchg
inc
std
in
ret
popf
mov
jae
pushf
fldt
mov
jecxz
sub
mov
adc
sub
sub
mul
lea
ficoms
stos
xchg
int
sub
add
mov
mov
ds
sbb
imul
mov
cmpsl
push
lret
pop
push
stos
ds
scas
stc
sbb
ret
push
es
enter
loop
insl
push
inc
dec
jno
push
xor
inc
xchg
mov
xchg
out
lret
xor
aam
jo
and
adc
ret
push
push
mov
cmc
mov
adc
jg
in
dec
adc
int
jge
les
cmc
jl
pop
xchg
pop
sbb
mov
in
pop
jae
cmovae
adc
ret
fistpl
shlb
inc
xchg
cmp
aad
xchg
xchg
aaa
outsl
mov
aas
repz
mov
outsl
pop
push
lock
sub
mov
or
cmp
ret
or
std
or
call
xor
cmp
mov
cld
pushf
pop
bound
add
xchg
xor
subl
mov
and
lock
add
cmp
sub
in
sbbl
subb
and
jno
xlat
jmp
sahf
stc
mov
mov
sbb
jns
movsb
mov
mov
mov
mov
pusha
ds
sbb
lods
insl
loope
loope
mov
xchg
push
je
dec
inc
xor
adc
mov
mov
pop
add
fisttps
test
lea
ss
lock
and
mov
test
scas
mov
faddp
dec
int
jl
add
ret
stos
add
xchg
js
je
out
mov
shl
sbb
cwtl
test
outsl
mov
fs
mov
gs
xor
and
inc
in
test
std
jbe
mov
std
adc
dec
xlat
mov
call
dec
xor
mov
icebp
sub
js
or
xchg
mov
rcl
or
arpl
popa
mov
js
xorb
pop
mov
push
inc
test
adc
or
nop
jecxz
aas
lret
and
ret
mov
xchg
and
hlt
aad
push
loope
lret
mov
dec
mov
mov
jo
sti
das
pop
push
mov
repnz
popf
subl
mov
rcrb
cmpsl
dec
adc
test
cmpsl
jae
in
lcall
nop
sti
loopne
sub
daa
iret
xchg
inc
bound
icebp
sbb
jp
cld
dec
push
out
mov
cld
cmp
call
dec
lret
mov
stc
ret
and
add
add
pop
mov
fstl
inc
mov
adc
push
mov
test
add
shl
out
add
pusha
xor
cmp
pop
hlt
pushf
lods
fsubrl
mov
push
data16
repz
xlat
cld
je
pop
iret
in
xchg
outsl
in
enter
icebp
mov
dec
xchg
imul
cmp
test
out
ja
pop
jno
pop
out
or
pop
iret
cmc
and
mov
sahf
aas
pop
xor
into
mov
cmp
xchg
xor
or
popf
imul
push
lcall
mov
negb
and
orl
jbe
dec
test
cwtl
dec
jle
push
adc
clc
in
inc
xchg
test
fisubrl
lock
adc
and
nop
xchg
rcll
out
nop
insl
out
xchg
and
shlb
cld
dec
ficompl
stos
dec
stc
inc
inc
inc
ss
cmp
push
cmp
mov
cltd
and
lret
xor
xchg
mov
mov
ja
and
add
in
pop
rorb
or
sub
lahf
lcall
shrl
fnstsw
movsb
or
pop
dec
in
ret
mov
jle
fs
test
out
das
xchg
dec
and
pop
push
sub
and
sbb
call
push
lods
insl
stos
jmp
jbe
imul
shrl
sbb
jns
add
lods
cld
lret
repnz
sub
mov
clc
and
cwtl
scas
mov
pop
nop
or
popf
push
cmp
push
jp
out
addb
loop
jle
imul
mov
ret
or
jmp
xchg
int3
stos
insb
dec
lahf
pop
pop
ss
movsl
mov
loope
lcall
mov
dec
mov
das
sbbl
dec
xchg
jbe
stos
mov
insb
sahf
sbb
es
dec
jne
xchg
insb
cmp
in
filds
push
inc
into
rcrb
fnstcw
mov
fdivl
pop
push
loope
xchg
fsubl
mov
cmpsb
mov
pop
cmpsb
dec
lcall
mov
inc
sbb
out
dec
bound
repz
add
adc
fimull
dec
in
clc
or
and
shll
push
psllq
jno
dec
sti
jne
js
cmp
outsb
in
mov
les
adc
adc
mov
and
stos
pop
add
les
jmp
aaa
dec
ss
mov
dec
push
push
les
fmul
sub
mov
in
xor
xchg
pop
push
cli
fucom
out
sub
or
es
lcall
adc
test
arpl
sbb
add
xchg
out
xchg
sti
std
pop
ss
mov
imul
or
and
roll
pop
xlat
push
data16
mov
pop
cmp
out
mov
test
jle
jns
pop
outsl
out
loop
xchg
jp
xchg
mov
jmp
add
pop
dec
loop
xor
push
icebp
in
mov
jo
jo
hlt
int3
scas
push
jo
pop
ret
sub
push
pop
xor
std
sti
or
pop
jns
inc
and
subl
dec
cld
pop
aaa
jmp
pop
test
cmp
test
cmpsl
xor
sbb
cmp
cmc
rolb
movsl
imul
ret
adc
sarb
sbb
loope
jle
in
incb
jo
orb
imul
push
add
fwait
int
xchg
test
adcl
addb
mov
repz
sub
mov
jle
inc
jmp
push
pushf
cmp
jb
lock
adc
cmc
inc
cmpsl
decl
insl
sbb
cwtl
loop
enter
je
iret
sti
add
or
daa
imul
sub
stc
aas
push
xchg
dec
inc
mov
push
inc
adc
xchg
cmpsl
or
popf
cwtl
adc
cli
mov
stc
jg
xorb
ds
and
stc
xor
or
mov
push
mov
aas
adc
xlat
out
jl
mov
into
push
fdiv
scas
mov
pop
mov
pop
rcr
cmc
fnsave
lcall
test
outsl
aas
push
xor
sub
ljmp
inc
push
cmp
stos
mov
cltd
mov
cmpsb
ret
inc
mov
lcall
clc
rclb
push
inc
mov
mov
test
or
sti
je
gs
fimull
cmp
pushf
call
repnz
pop
in
out
mov
push
incb
test
cwtl
in
test
sbb
and
fidivrs
dec
mov
fisubrs
fiadds
leave
lahf
call
ja
jno
jmp
adc
fwait
push
mov
adc
in
jae
sbb
scas
andb
xlat
jno
iret
stos
inc
dec
pusha
lret
jge
pop
mov
and
sahf
jb
divl
inc
hlt
jne
shlb
lret
call
pop
sub
call
add
pop
cmpsb
add
xchg
loopne
out
xor
movsb
mov
jp
ret
imul
pop
dec
xlat
xchg
aam
sar
push
inc
or
ja
cmpsl
lock
scas
fisttpl
cmc
push
fdivs
and
xchg
cltd
adc
mov
pop
mov
cmp
ret
cmp
push
movsb
or
jg
cmc
ljmp
sbb
lods
dec
add
jb
sub
mov
cmpsl
and
ffreep
std
mov
inc
scas
movsl
mov
arpl
mov
stos
divl
out
es
loopne
xchg
and
fsubrl
xor
sbb
push
gs
lcall
mov
mov
dec
bound
subb
sbb
xchg
sarl
movb
ret
stos
and
inc
lret
cmp
push
push
mov
out
hlt
jp
pop
fisttpl
daa
fucom
incb
xchg
out
jg
push
mov
xchg
pop
test
out
mov
push
xchg
test
and
mov
xchg
jge
sbb
mov
jecxz
dec
stc
and
aam
xchg
add
and
jl
in
int
push
mov
in
stos
lds
ja
out
loope
jno
je
lcall
sub
add
mov
cmpsl
gs
sbb
roll
push
fsubl
ds
lahf
and
push
aad
cs
mov
lods
push
mov
pop
lods
notl
scas
movsb
in
mov
std
mov
popf
mov
les
mov
pop
cmp
lret
hlt
inc
xor
loop
addb
inc
xchg
dec
in
orb
jne
repnz
insb
test
in
mov
lret
call
pop
sbb
out
test
push
jnp
pop
jge
pop
sbb
push
jne
mov
shlb
flds
test
and
test
ja
repz
mov
cmp
ja
test
push
dec
lods
pop
xchg
enter
adc
adc
aam
xlat
push
lods
int
adc
inc
loop
mov
fwait
insl
push
cmp
dec
loop
or
pop
out
jecxz
cli
mov
xlat
jmp
inc
mov
ss
xor
ljmp
arpl
add
xor
xlat
int3
sbb
fsubr
lock
jg
imul
push
inc
jg,pt
hlt
movaps
jns
push
out
call
cmpsl
fs
ds
fists
jle
xor
adcl
clc
push
popf
das
add
push
cmp
mov
test
pop
dec
xor
jecxz
dec
aad
push
data16
or
fists
adc
xor
addr16
cld
and
test
mov
xchg
int3
fwait
data16
jmp
sarb
xorl
rol
fwait
lods
xor
mov
negb
ss
and
jl
inc
xchg
call
enter
aad
test
mov
movsl
leave
out
lahf
dec
mov
dec
push
int
pop
cmc
mov
adcl
xchg
cmp
outsl
mov
jecxz
pop
js
xchg
sub
or
jg
popa
sahf
aas
mov
pop
sbb
movsl
fidivrl
sahf
fcmovbe
pop
adc
adc
or
cltd
inc
dec
in
daa
popf
pop
out
movsl
lret
lret
inc
insl
jnp
sbb
cltd
sub
and
jecxz
cmp
loopne
sti
aad
xchg
xor
aam
jg
push
popa
mov
jns
mov
in
fbld
push
dec
pusha
inc
addr16
sbb
adc
or
pop
mov
mov
cltd
mov
imul
pop
push
push
imul
loop
cs
addr16
test
xor
jno
adc
in
cld
sbb
sbb
or
or
adc
test
scas
testb
imul
push
inc
xor
call
stc
sub
out
cmp
iret
mov
icebp
jno
lret
sub
in
lock
xor
in
dec
pop
inc
sbb
xchg
lds
cltd
adc
arpl
xor
pop
loopne
push
pushl
dec
or
movsb
aaa
insb
dec
jnp
ljmp
les
inc
pop
pop
push
dec
add
ret
add
out
aad
cwtl
clc
out
pusha
inc
jbe
aas
in
mov
test
ljmp
lea
jns
jo
mov
lret
xchg
ljmp
sbb
mov
nop
inc
imul
imul
mov
in
mov
xchg
pop
enter
push
sti
addr16
push
jg
push
push
pop
mov
xlat
push
pop
dec
and
mov
icebp
pop
call
add
lcall
push
inc
adc
xorl
jmp
pop
pop
in
fdivr
repnz
adc
push
sti
inc
or
and
cs
enter
inc
and
lret
xchg
ds
aaa
sub
mov
mov
pop
ja
imul
pop
filds
pop
imul
pop
shlb
mov
xor
stos
add
lea
jl
scas
add
or
dec
in
sub
out
in
cs
adc
notl
sub
push
movsl
les
popa
and
cld
call
mov
lret
xrelease
ljmp
jmp
xchg
dec
cmp
sti
push
lahf
sahf
add
cld
cmp
ljmp
xlat
pop
shll
in
pop
in
sbb
lcall
adc
or
out
ret
sbb
xor
scas
mov
push
or
pop
or
or
stos
push
push
mov
scas
repz
mov
rclb
fwait
movb
mov
add
mov
out
sbbb
sbb
jle
pop
mov
aas
add
cmp
jno
sti
addr16
dec
loop
xchg
sarb
sub
sahf
fs
adc
pushf
pop
xor
fcmovb
fistpl
mov
sbb
das
imul
testb
adcl
add
std
out
mov
test
mov
pop
add
jne
jp
sahf
outsl
lods
xchg
out
mov
out
fstps
lods
jne
lock
ret
movsl
cld
inc
ficomps
loope
push
lea
jecxz
loopne
stc
push
mov
xor
xchg
xchg
insl
sub
pop
xchg
sub
push
mov
les
cli
je
mov
out
pop
add
sbb
pushf
pop
sub
and
add
pusha
loopne
cmp
xorl
pop
mov
xor
mov
pushf
push
sbb
xchg
ffree
test
andl
jae
test
inc
add
mov
jnp
in
mov
or
fmull
orb
addr16
cli
decb
in
xor
divb
and
ret
mov
popf
add
and
stc
aam
lock
in
push
add
jae
sub
pop
imul
jbe
push
fsubp
mov
bswap
idiv
lods
out
xor
popf
jg
or
mov
push
inc
pop
inc
and
js
jbe
and
dec
mov
aaa
aas
mov
mov
inc
cmp
je
xor
sar
sub
inc
push
test
lea
imul
out
iret
add
mov
add
add
sub
stos
stos
add
sub
sarl
cmp
in
xor
je
add
std
cmp
xor
je
cltd
and
shrl
pushf
nop
pop
mov
rcrb
inc
cmp
clc
out
test
mov
cmp
jnp
mov
xor
mov
xchg
xchg
popf
xor
pop
outsb
outsb
test
cli
sub
out
and
lock
mov
push
pop
cld
bnd
xchg
loopne
sub
mov
and
test
pop
fiadds
std
mov
pop
out
push
lods
mov
sbb
lret
daa
cmpsl
lcall
movsb
push
cli
push
push
jp
stc
lret
mov
xchg
popf
and
dec
sub
mov
and
outsb
push
sbb
mov
pop
rcrb
add
mov
mov
sbb
iret
fldt
or
or
push
mov
mov
test
lret
inc
ret
sbb
xor
loop
xchg
ja
xor
push
jnp
push
leave
lds
ja
mov
test
stc
bound
or
sub
jnp
sbb
inc
lcall
nop
cmpsb
cmp
adc
xchg
dec
iret
movl
jmp
rcl
mov
inc
sub
sub
repnz
push
mov
dec
mov
scas
fcoml
les
mov
fisttps
pop
movsl
pop
rorb
jbe
cmp
jb
or
andb
push
cmpsb
cmp
out
test
lock
jge
xor
sbb
mov
loopne
cli
mov
test
cwtl
stos
dec
orb
or
or
cmpsb
add
ja
cmp
or
xor
mov
or
cmp
mov
packuswb
fimull
mov
scas
jo
dec
pop
mov
out
pusha
rcrl
push
test
test
icebp
lds
imul
loop
xor
popa
jge
insl
add
xor
lods
ljmp
push
sub
aas
leave
inc
jb
aas
pop
scas
mov
pusha
imul
xlat
negb
imul
adc
cs
jbe
pop
and
stos
fucom
dec
iret
xchg
sbb
nop
sub
lock
fistl
cmp
pop
sbb
jbe
sub
xchg
addr16
adc
dec
xor
or
jo
adc
mov
popf
stos
add
pop
in
test
nop
cmp
pop
mov
aam
enter
pop
addr16
inc
stc
jge
adc
clc
sbb
xchg
ja
mov
dec
jmp
into
jle
mov
pop
das
push
mov
loop
stos
fs
iret
jns
add
jnp
fsubs
stc
testl
xchg
jnp
filds
cld
cld
imul
xor
push
jae
mov
xchg
roll
sub
sub
pushf
cmpsb
pop
mov
lods
fcmovnu
mov
test
cmp
iret
test
add
lahf
xor
test
movsb
dec
xor
pop
inc
xor
rolb
dec
in
jmp
adc
cmp
mov
repz
jmp
call
push
popf
stc
or
push
xor
das
add
imul
sub
adc
inc
push
lock
and
push
inc
push
jmp
adc
and
mov
lods
push
pop
mov
fstp
mov
lea
fdivrp
push
or
sub
scas
popf
pop
inc
lds
add
sub
popa
mov
mov
popf
pop
arpl
fs
ja
rolb
popa
test
std
push
mov
cmc
pusha
mov
rcl
es
mov
out
je
cmpsb
sbb
sbb
dec
ret
pushf
xchg
pop
xor
xor
sub
pop
imul
out
inc
sbb
adc
xchg
out
xor
or
xchg
inc
enter
in
jp
lds
loope
jge
xor
mov
test
mov
mov
aad
pop
mov
inc
rcl
es
loop
jne
jne
lahf
mov
cmp
mov
xchg
imul
fiadds
shll
xor
into
scas
xchg
cmp
call
cmp
push
pop
xor
aas
cmp
aaa
ds
pop
aam
sbbb
movsl
fs
jnp
scas
push
sti
movsb
jns
inc
clc
out
xchg
movsb
xchg
insl
pop
push
mov
sbb
mov
inc
popa
rcll
cmp
into
adc
dec
or
jp
mov
pop
cmp
jmp
xchg
mov
inc
addr16
lea
xor
nop
fwait
gs
and
sbb
inc
in
xlat
adc
imul
xchg
xor
jle
out
mov
inc
nop
push
shlb
mul
outsb
jge
push
stc
enter
sbb
in
jmp
outsl
dec
adc
mov
sub
into
jg
cmpl
arpl
jmp
adc
mov
mov
sub
sbb
repz
jne
cmpsb
les
mov
mov
or
popf
arpl
push
or
aam
pop
out
bound
je
and
rcrl
fs
dec
dec
in
sbb
int
inc
and
sub
mov
dec
rolb
rol
push
mov
orb
ja
jno
out
cltd
inc
dec
repz
dec
add
and
aas
ljmp
dec
loopne
addr16
inc
ds
pop
shlb
adc
ljmp
out
jl
add
repnz
xor
into
fnstcw
xchg
mov
lcall
push
push
adc
dec
not
mov
fnsave
inc
scas
jecxz
mov
and
adc
insl
jge
dec
cmp
ja
in
data16
or
sbb
sub
inc
hlt
popa
ss
movsb
inc
aas
or
xchg
pop
das
into
jne
cmp
les
fdivl
or
jb
stos
inc
call
ret
aaa
cmp
gs
cltd
roll
js
or
xchg
arpl
adc
cmp
mov
int3
pop
lret
call
sarl
icebp
addr16
fs
lcall
mov
test
sbb
fldcw
push
rcrl
nop
mov
int
shl
mov
adc
fwait
inc
jl
in
jnp
fistpll
fists
pop
jmp
lahf
jnp
push
clc
repnz
or
sbb
ds
out
push
movups
cmp
xor
das
push
xor
call
mov
mov
daa
loop
hlt
mov
cmp
imull
cld
rolb
lret
pop
orb
aam
clc
dec
fs
inc
mov
xchg
adc
lcall
and
loopne
xchg
shrb
jae
jbe
sub
lds
arpl
loop
or
iret
pop
mov
shrl
sub
daa
loope
rcrb
cmp
mov
cld
sbb
fmulp
and
jno
lds
jno
mov
inc
cmp
aam
lahf
pusha
mov
rolb
lret
jbe
jmp
pop
mov
rcrb
xor
mov
addr16
test
int3
sbb
push
daa
sbb
sbb
xlat
inc
test
adc
pop
cmp
fldlg2
mov
orb
and
add
ja
andl
pop
jns
xorb
lds
pop
or
gs
inc
fisubs
mov
sub
out
fmul
pop
mov
into
aas
lock
dec
mov
xchg
mov
test
inc
outsl
mov
lods
fcomi
cli
aas
daa
mov
adc
adc
mov
es
ss
f2xm1
das
into
repnz
dec
push
pop
dec
cmp
push
sbb
hlt
or
rcrb
cmp
ret
popa
popa
cli
dec
mov
pop
outsl
dec
push
flds
sbb
mov
jne
aad
sbb
push
mov
xor
in
pop
pop
xchg
mov
ss
test
int
test
loopne
adc
pushf
sbb
jb
lret
ret
movsl
cld
pop
gs
push
cmpsl
push
fisubl
xor
out
mov
fbld
xchg
mov
adcb
pop
test
out
cwtl
inc
pop
data16
push
pushf
adc
push
sub
push
push
mov
cltd
es
adcb
cs
mov
leave
jae
icebp
pushf
mov
ret
popa
push
pmulhuw
and
push
cli
imul
xor
icebp
mov
mov
or
push
std
addr16
and
push
xchg
adc
nop
cli
stos
and
xor
adc
mov
les
mov
push
dec
sub
call
fdivrs
xchg
inc
push
or
je
lret
mov
test
icebp
push
scas
sbb
inc
test
aas
test
add
push
fiaddl
fcoml
ret
jg
int
xor
or
int
add
dec
call
push
mov
fstl
xchg
aad
dec
lock
mov
and
and
aam
sbb
dec
inc
adc
mov
and
cli
inc
ficoms
out
pop
test
ss
mov
out
cmp
shrb
test
adc
aam
mov
sti
pop
scas
xor
iret
sub
xlat
push
sbb
fsubs
mov
mov
lods
fdivrl
xchg
push
or
mov
pop
inc
pop
mov
into
rcrl
mov
fistl
sub
cld
push
jle
lods
jo
jns
inc
inc
xchg
cmp
sub
jl
or
fdivr
shrl
in
faddl
cltd
dec
push
je
mov
movsb
lds
outsl
sub
and
incl
sbb
sti
cs
or
movsb
jne
sbb
std
clc
fcomp
sub
pop
jbe
push
inc
sbb
sbb
cmp
aaa
loopne
xchg
aam
mov
aas
pop
and
cmc
insl
inc
subl
std
mov
loopne
lds
in
pop
iret
lods
jbe
lret
adc
xor
sbb
mov
ds
subl
loopne
push
int3
rol
movsl
rcrb
ja
orb
arpl
mov
mov
ss
psrlq
mov
movl
ds
inc
call
jne
cmp
arpl
xchg
mov
das
xchg
stos
shll
leave
or
or
pop
push
notl
mov
jecxz
lret
je
sub
inc
jo
xchg
push
pop
pop
cmpl
gs
std
rolb
leave
xor
xchg
in
mov
push
lods
insb
push
sub
add
lahf
fstp
addr16
movsl
or
inc
sub
dec
xchg
add
or
scas
jae
dec
loopne
test
add
aad
jb
lds
cmp
shl
popa
outsb
jbe
sub
pop
out
add
popa
pop
adc
dec
aad
ss
cltd
ds
daa
fcomip
out
xchg
and
outsl
clc
jae
adc
mov
ljmp
inc
fildl
fstl
pop
subb
sbb
inc
jo
in
dec
mov
into
xorl
push
jg
add
shlb
fisubl
inc
cli
mov
xchg
outsb
rcrb
int
insl
popa
or
dec
out
mov
and
int
test
or
rol
cmpsl
mov
int
fsubr
aaa
cmpsb
xor
cmc
in
push
addl
stos
lea
test
push
mov
sbb
outsl
add
sbb
inc
add
or
pop
imul
enter
faddp
and
stos
and
cmp
and
push
add
push
mov
mov
pop
adc
psubd
sub
fwait
mov
rorb
test
fsubrl
sahf
push
pop
pop
loop
jp
mov
xor
push
jecxz
daa
xor
loope
jb
aad
xor
scas
push
mov
sub
test
jne
scas
arpl
in
aad
dec
dec
xchg
das
add
xor
xchg
rolb
clc
add
and
icebp
jns
pop
push
hlt
xchg
jo
sbbb
sbb
imul
pop
xor
sub
jns
sbb
clc
fldenv
icebp
loop
push
test
cmp
cmp
add
jno
outsl
out
cmpb
fldcw
arpl
lock
mov
sbb
imul
sub
movsb
jl
call
aas
les
imul
outsb
xchg
in
sbb
pop
pop
cmp
jno
aad
idivb
ror
and
xor
dec
or
xor
mov
sub
xchg
mov
xor
hlt
cmc
rcl
add
or
cli
sti
xor
push
push
rolb
repz
loope
sbb
std
lret
nop
cmpsb
adc
xor
mov
lea
sub
pushl
inc
out
dec
cmpsb
aas
pop
and
ljmp
in
xchg
imull
call
stos
test
xor
jno
mov
dec
push
in
loopne
mov
repnz
sti
stos
sub
inc
mov
int
or
jmp
test
enter
pop
jne
add
outsb
sub
jmp
xchg
pop
xchg
sbb
xor
jle
pop
cmp
test
jo
inc
arpl
pop
mov
out
xchg
pop
aad
adc
hlt
push
mov
cmpl
jmp
and
stos
mov
call
ljmp
sbb
jne
xor
mov
cwtl
test
iret
sbb
movsl
orl
push
negl
mov
aaa
pop
jmp
adc
pusha
stos
mov
mov
ret
aas
cmp
cmp
repnz
call
pop
jns
jl
pop
jecxz
pop
dec
mov
loope
add
ds
mov
sub
jmp
push
jno
aas
and
mov
sbb
or
push
xchg
mov
dec
loope
add
pop
dec
cltd
cmpsl
orl
pop
adc
mov
je
dec
push
popf
dec
mov
mov
lret
stos
mov
push
pop
or
push
cmc
loop
imul
iret
add
jecxz
pop
jo
mov
jo
jne
leave
jl
dec
pop
bound
sbb
roll
cmpsb
call
pop
jl
cmc
mov
dec
insl
jno
jmp
sub
push
cmpl
ret
xor
push
cmc
in
call
jb
fidivrs
pop
insl
xor
and
aas
or
or
icebp
fidivrs
rcll
adc
push
push
cmp
mov
and
xor
ret
push
leave
push
stos
mov
cmp
mov
jg
lret
adc
push
add
rorb
jecxz
adc
test
fcoml
mov
mov
das
cli
inc
sbb
out
test
xor
daa
mov
jno
jo
or
addr16
popa
inc
add
pop
ficoms
sub
mov
aam
out
addr16
test
les
sbb
clc
std
adc
aad
out
aaa
cmp
enter
repz
jg
enter
loope
push
mov
sbb
in
add
and
xchg
shlb
mov
sub
cmpsl
cmp
and
cld
roll
scas
daa
shlb
mov
insl
jle
inc
call
mov
lahf
pop
movsb
sbb
sbb
mov
int3
push
in
mov
jmp
mov
cld
ljmp
and
add
jl
lret
mov
jbe
xchg
sbb
jns
int3
rcr
add
push
cmc
dec
mov
inc
cmp
sahf
dec
mov
repnz
jns
mov
lea
adc
jbe
ret
mov
imull
pop
enter
adc
dec
lret
sbb
cmpb
lods
scas
add
clc
jnp
popf
ja
cmp
cmpsl
cwtl
out
sti
fnstsw
aad
xchg
addr16
lods
adc
fisubl
nop
push
add
mov
les
mov
pop
rorl
sbb
std
xor
xchg
mov
inc
add
mov
xor
pop
repnz
fdivs
sub
mov
jnp
insb
push
sub
pushf
inc
scas
cwtl
add
std
int
in
xor
fdivr
aas
arpl
outsl
daa
cmp
push
dec
add
and
jns
out
inc
adc
mov
xchg
lea
cmp
jbe
jg
push
fwait
sahf
jle
insb
jb
mov
jnp
sbb
pop
or
push
sub
daa
dec
push
push
and
xchg
mov
loop
or
mov
mov
fisubs
or
push
and
xor
sbb
adc
aad
xor
mov
and
push
test
stos
popa
push
push
xchg
add
movl
xchg
aaa
cmp
inc
dec
sbb
and
fildl
dec
or
pop
adc
imul
fsubr
sub
leave
push
call
aad
jmp
imul
dec
pop
inc
fstpl
cltd
pop
pop
sbb
inc
loop
das
fisubl
dec
bound
mov
xor
push
idivl
sub
arpl
jmp
mov
outsb
ret
mov
jge
adc
sbbb
stc
outsl
movsb
mov
sbbl
fwait
ja
xor
popf
rcrb
mov
jbe
lock
xchg
inc
movsl
mov
loopne
or
mov
xchg
xlat
mov
push
or
insb
pop
icebp
popf
add
jge
shrl
push
repz
pop
in
dec
jp
pop
js
xlat
push
in
outsb
ret
dec
into
mov
fs
cmp
push
sti
mov
push
dec
pop
add
scas
movsb
jae
push
movsb
mov
inc
pop
xor
jae
adc
adc
int
dec
in
sbb
inc
mov
cmc
mov
iret
sub
loope
lret
cmp
in
enter
lret
repz
cs
mov
push
xor
push
test
sbb
push
int
je
movsl
jp
add
cmpsl
test
rorl
jb
in
inc
mov
scas
adc
call
push
lock
outsl
cli
cmp
xor
adc
dec
and
cmp
aad
jmp
insl
cs
out
mov
xchg
adc
lea
and
mov
ss
lods
inc
es
push
fs
ss
subb
mov
xchg
push
sub
bound
push
sbb
and
dec
test
jg
dec
mov
mov
and
in
mov
mov
pop
in
int
nop
sbb
or
aam
loopne
inc
movsb
mov
scas
xchg
inc
or
loope
lahf
stos
inc
or
fwait
inc
scas
push
push
or
clc
adc
mov
xchg
xchg
pusha
aaa
out
rcrb
push
jne
ljmp
rcrb
lods
negb
cmp
adc
xor
xor
inc
cli
stos
inc
insl
mov
mov
mov
es
pop
jp
xchg
scas
int3
add
stos
pushl
mov
sub
mov
push
notb
xor
shrl
or
sahf
dec
das
fsubrs
pop
cmpb
std
adc
or
test
inc
push
stc
xchg
outsb
mov
xor
lds
mov
xchg
clc
or
faddl
jnp
mov
dec
daa
out
add
jnp
lcall
mov
aaa
sbb
aaa
pop
mov
call
or
repnz
pushl
lea
and
fildl
push
push
pop
mov
out
xor
call
cmp
ds
mov
pusha
jbe
mov
lock
stos
ds
test
jle
and
push
sti
mov
inc
jno
mov
dec
sub
mov
push
xchg
sbb
jmp
sti
push
into
mov
and
or
mov
ficomps
or
icebp
cmp
movsl
pop
bound
fwait
mul
pop
adc
push
jnp
mov
icebp
lds
adc
lret
cmp
or
mov
push
inc
cmp
inc
add
dec
ss
inc
jle
adc
mov
push
shr
leave
jae
idiv
push
mov
sar
xlat
cmp
inc
out
lods
in
ja
inc
cmc
lret
push
and
pop
fcom
mov
mov
stos
xchg
mov
int3
sbb
mov
or
xchg
jecxz
testb
push
add
pushf
xchg
shlb
jl
fildll
repz
shll
or
push
mov
mov
ss
cmp
jecxz
dec
in
aas
roll
xchg
js
lret
sarb
xor
fs
xchg
sub
inc
or
xor
lock
fstps
loop
lcall
arpl
jle
addr16
cmpsl
aaa
dec
pop
push
or
adc
fcmovne
sbbl
xchg
stos
pop
pop
xor
or
arpl
out
xor
xchg
jb
pop
popf
jge
cld
ret
mov
int
sbb
xchg
lahf
nop
push
ret
nop
dec
imul
cmp
push
xor
das
ljmp
and
lret
push
movsl
push
add
cli
add
push
xchg
out
lods
sar
mov
sub
lcall
sub
push
je
arpl
xchg
mov
icebp
inc
test
mov
ja
mov
adc
mov
sbb
hlt
pop
xor
mov
mov
pop
push
dec
push
cmp
and
nop
popa
sub
mov
xlat
sub
dec
loopne
scas
mov
movsl
pushf
vgf2p8affineqb
fs
sarl
inc
hlt
adc
andb
ss
out
in
cwtl
mov
shlb
xchg
pusha
sub
jmp
out
mov
cwtl
adc
mul
rcrl
fwait
inc
imul
jecxz
sub
xchg
ret
mov
js
xor
lock
and
movsb
sti
and
cmp
mov
xchg
mov
xchg
aam
add
imul
inc
outsb
adc
rolb
mov
cld
dec
int
add
mov
cs
jle,pt
rorl
dec
aam
adcl
popa
rcll
push
sbb
aam
loope
cwtl
add
inc
rclb
fsubrs
adc
jnp
mov
sti
inc
pop
adc
inc
mov
loop
test
pop
cmp
ja
cmp
inc
xchg
mov
ljmp
sub
cld
daa
orl
push
dec
sbb
lods
fldl
add
int
add
mov
pop
loop
dec
les
shrb
clc
adc
jecxz
in
dec
repz
cli
xchg
pop
dec
outsb
cs
stos
sarb
icebp
movsb
xor
ret
outsb
dec
faddl
shrl
xor
aam
sub
cltd
cs
scas
inc
pushf
inc
and
push
clc
outsl
sahf
fsubrp
mov
jp
test
mov
mov
mov
int3
stos
bound
xor
cltd
and
xchg
ret
lds
ror
mov
sahf
imul
popl
in
into
mov
aas
inc
adc
sub
add
fbstp
rcll
mov
ret
cltd
fsubrl
aad
ds
sbb
and
mov
sbb
stos
adc
in
push
ss
pop
jns
sub
mov
mov
cmp
mov
mov
push
mov
push
out
fwait
lahf
jne
fiaddl
push
into
sub
dec
mov
and
and
cmp
leave
stos
inc
int
push
outsb
dec
loopne
adc
adc
sbb
pusha
sbb
imul
pop
sbb
push
cmp
hlt
aaa
xor
subb
xchg
pusha
nop
sub
fildl
add
sbb
repz
adc
test
loopne
cmp
les
jns
adc
lahf
sub
sub
loope
iret
ja
xor
adc
sub
icebp
jbe
adc
or
mov
icebp
xchg
dec
repz
cmp
sbb
cmp
or
lock
data16
rcrl
jbe
stos
dec
jmp
mov
mov
mov
xchg
pop
mov
lock
hlt
inc
lods
pop
xchg
lahf
daa
jb
popa
mov
xchg
mov
mov
js
cli
pop
loope
cmp
scas
add
popf
js
not
aas
rorl
and
and
shll
mov
inc
es
addl
in
sub
aas
push
aad
dec
leave
pop
mov
into
sahf
pop
adc
and
inc
xor
xor
push
mov
jecxz
addl
stos
mov
sub
xlat
lcall
ds
scas
cmc
mov
rorl
daa
movsl
repz
addl
pusha
xchg
inc
mov
rolb
stos
insl
xlat
shr
add
jp
mov
pop
dec
xchg
sbb
repnz
movsl
and
idivl
push
fldcw
or
adc
shl
insl
pop
repz
fisubl
popf
mov
flds
icebp
and
xchg
dec
cmpsl
cmp
out
push
xchg
gs
pop
leave
fistl
sbb
dec
cs
pop
repz
jne
mov
inc
xor
push
filds
inc
test
push
dec
dec
dec
sub
in
sbb
cmp
lds
or
fnsave
cmc
divb
daa
jno
sub
out
repnz
or
aad
inc
cld
into
sbb
scas
pop
std
jge
mov
sbb
ds
xchg
out
xor
pop
inc
leave
mov
fwait
pop
jo
das
sbb
movsl
sbb
mov
nop
adc
fnstsw
sub
dec
xchg
sbb
mov
lcall
inc
cmp
movsl
fistpll
mov
push
cmp
test
cltd
mov
mov
mov
in
arpl
or
popf
mov
cs
icebp
jns
sub
xchg
mov
jnp
push
mov
jge
inc
std
sub
in
or
or
loopne
mov
ds
inc
icebp
and
dec
lahf
xor
shll
imul
mov
and
lea
outsb
int3
and
jg
jno
pop
imul
aas
loopne
pop
mov
push
sub
jne
mov
sub
push
jae,pt
add
cmp
fiaddl
or
cmp
scas
sbb
ds
pusha
fisttpl
pop
fs
pusha
lcall
int3
mov
stc
add
xor
ficompl
pusha
insl
adc
mov
and
sbb
adc
jnp
cmpsb
sbb
xor
mov
cld
dec
sbb
cmp
sbb
xorb
xor
fcmovne
jne
mov
dec
cli
jne
mov
aaa
nop
data16
fisubl
cmp
loop
loope
lds
xor
fwait
jne
nop
int
sbb
ret
lods
decb
mov
repz
mov
insl
adc
out
movsl
sbb
pop
mov
es
push
xor
std
add
lea
scas
cmp
lret
adc
scas
sbb
mov
mov
push
shl
stc
leave
fldenv
push
lods
push
push
pop
jae
loope
add
adc
lds
lret
rorl
mov
jle
enter
jb
mov
mov
push
mov
std
scas
loopne
imul
std
idivl
mov
rorl
jne
pop
or
xor
into
or
sahf
leave
test
loope
add
sbb
nop
mov
adc
mov
or
lcall
cmp
fcompl
jb
inc
cmp
cmp
or
aad
pop
push
push
enter
sub
push
or
lret
jb
aaa
inc
xlat
das
mov
cltd
push
bound
mov
push
cmpl
lret
mov
rclb
addl
out
jp
push
push
arpl
xchg
cmp
pop
mull
mov
cmp
sbb
loopne
push
arpl
jb
pop
into
or
iret
jae
or
adc
pop
cmpsl
cld
or
insl
mov
addr16
push
outsb
mov
xor
and
popf
inc
outsb
js
adc
ficompl
iret
mov
je
mov
es
enter
shlb
lcall
aaa
lret
or
pop
leave
outsl
and
mov
icebp
sbbb
imul
jno
adc
xchg
or
pop
jle
pop
xchg
sbb
sbb
fcmovb
sbb
test
xchg
cli
xchg
pop
sbb
loopne
cmp
fldenv
test
adc
or
pop
aam
add
je
jo
mov
sub
adc
sbb
jns
pop
pop
rorb
or
repz
pop
fcmovnbe
int
jp
mov
clc
stos
cmp
outsl
sub
jae
inc
divl
cs
jecxz
xor
dec
subl
mov
xor
pop
and
ficompl
into
roll
enter
jns
loopne
rcll
jecxz
adc
jo
xchg
pop
adc
cmpsb
nop
push
adc
adc
mov
out
mov
movsl
mov
xor
or
pop
sarl
jg
outsl
pushf
mov
mov
push
repnz
mov
push
pushf
or
or
mov
or
andb
pushf
je
cmp
mov
bound
mov
call
shrb
out
adc
nop
or
repnz
sbb
dec
xchg
adcl
adc
add
outsl
rolb
xlat
addr16
lahf
mov
shrb
xchg
popa
ret
dec
lock
pusha
aam
dec
in
xchg
ss
ret
mov
cs
movsl
icebp
adc
xor
jmp
push
pusha
jb
int3
dec
sahf
repz
mov
mulb
in
stc
mov
mov
mov
add
push
lods
lret
fadd
xor
arpl
stc
bnd
pop
mov
clc
xchg
jne
push
cli
xchg
cmp
decl
xor
fbstp
or
test
mov
push
insb
push
xchg
jo
das
aaa
cmp
add
and
mov
scas
pop
adc
mov
jae
mov
mov
int3
mov
or
cmpsb
idivb
lret
cmpsl
enter
int3
sbb
push
lcall
mov
adc
fisubrl
inc
bound
aam
inc
cwtl
aam
mov
inc
testl
cmc
or
sub
mov
xchg
sbb
sti
mov
lods
adc
xchg
bound
jle
mov
out
push
outsb
iret
fwait
testl
xchg
add
ss
push
mov
inc
add
packsswb
ffreep
add
sbb
sbb
and
test
jmp
pop
inc
inc
addr16
pop
clc
repnz
inc
loop
es
sti
pop
mov
pop
in
repnz
das
cmp
jp
into
movsl
and
jno
adc
mov
xlat
jb
fs
loope
mov
mov
clc
leave
xor
sbb
inc
in
ficompl
add
adc
mov
fwait
xchg
jae
pushl
dec
repnz
aad
sbb
roll
imul
dec
sbb
sub
and
pop
mov
movsl
loopne
jge
sbb
ret
lock
sbb
cs
pop
cmp
roll
les
in
adc
mov
xchg
ret
mov
push
cmp
cltd
mov
xchg
xchg
mov
pushf
dec
fstpl
sarb
jge
arpl
sbb
nop
ljmp
pop
mov
inc
add
push
clc
cli
inc
xchg
mov
dec
pop
loope
pop
cmc
jg
adc
push
dec
cli
cs
les
sub
cli
or
fisttps
sarb
inc
out
loope
in
inc
sub
pop
dec
popf
mov
jae
call
push
test
sub
inc
dec
or
mov
cmp
sbb
cwtl
popw
loopne
or
dec
rcr
stc
cmc
lods
jle
inc
aad
jecxz
mov
jae
ja
fildll
xchg
lods
jns
dec
jg
sub
test
add
mov
imul
mov
fisubrl
sub
fdiv
add
pop
sub
sbb
ss
mov
pop
push
dec
dec
mov
call
ja
adc
jmp
push
adc
xor
aas
push
and
movsl
or
adc
pop
lcall
lcall
ds
inc
adc
sub
cmp
popf
mov
add
xor
into
push
adc
and
jno
jmp
push
xchg
jb
xchg
and
inc
adc
jae
pop
nop
pop
dec
rcr
or
cmpsb
bound
mov
sbb
jp
or
pusha
sti
test
in
nop
arpl
jne
jae
push
xchg
xor
xchg
inc
pusha
and
cmp
mov
push
jl
xor
in
mov
mov
ljmp
repnz
push
pop
mov
shl
dec
mov
out
inc
pop
dec
mov
pcmpgtw
mov
add
std
xor
xor
xor
dec
insb
xor
sahf
clc
aad
push
sti
pop
pop
xor
dec
pop
inc
or
pop
dec
jmp
and
inc
dec
mov
data16
je
mov
dec
enter
rcrb
das
push
mov
movsb
sub
sub
cmp
xchg
insb
lock
imul
lods
sbb
shll
sub
cld
ret
in
test
xchg
add
cld
jo
push
sbb
mov
rcrl
outsb
jl
mov
in
inc
xlat
mov
data16
adc
lea
or
arpl
mov
sub
and
fwait
lds
jne
sub
and
or
in
sbb
or
xchg
or
cmp
add
jl
xor
cmp
in
dec
jle
shlb
adc
push
and
sbb
es
insb
stc
mov
daa
loop
shl
loope
pop
sbb
xchg
dec
push
clc
push
push
fistpll
sub
cltd
jmp
xor
call
les
scas
out
jge
dec
add
orb
fisttpll
or
cli
sbb
inc
ret
lret
iret
aam
push
sbb
jnp
popl
stos
sub
pop
outsl
pop
movsb
xchg
aad
enter
arpl
inc
in
insb
shlb
lret
fdivrs
ret
xchg
mov
mov
into
mov
jns
mov
shrl
dec
lret
loopne
jmp
jae
mov
enter
cwtl
inc
push
into
inc
iret
cmp
or
or
in
test
jns
add
fiadds
add
jne
xlat
xchg
dec
ljmp
test
fwait
outsl
push
and
testb
cmc
scas
enter
data16
xchg
push
sbb
adc
lds
stc
int3
xchg
mov
cltd
push
into
outsl
outsb
repnz
pop
scas
into
int3
push
jbe
cwtl
lds
mov
dec
jbe
clc
pop
insb
xor
test
testb
push
sub
mov
aam
bound
push
sub
rcll
xchg
mov
xchg
xor
sub
hlt
inc
stc
call
sahf
cmp
imul
push
mov
mov
int
sbb
ds
mov
mov
bound
adc
fcmovnbe
xor
pop
cs
xchg
dec
orb
les
sub
xor
shl
clc
xchg
dec
sub
or
xor
cmp
mov
stos
pop
pop
sub
cs
dec
inc
pop
out
sti
pop
xchg
sbb
idiv
adc
ja
dec
int
mov
outsl
loopne
lahf
movsl
rcll
sub
loop
mov
cmp
pop
daa
adc
jnp
add
inc
lea
rorl
outsb
cmp
or
cmp
pop
push
ret
clc
inc
inc
cmp
ja
leave
sbb
inc
stos
mov
dec
int
ret
or
jno
lahf
jbe
lcall
pop
dec
push
int
jae
sub
dec
cli
cld
rclb
psubsw
jp
xchg
mov
dec
push
lock
in
push
or
andl
xchg
je
mov
pusha
jbe
adc
int3
imul
loope
fnsave
jae
out
jbe
jg
and
rcrb
xor
mov
iret
cld
mov
lret
adc
mov
ror
push
or
fnstsw
push
pop
js
pop
jmp
fisttpll
pop
jmp
sub
push
dec
adcl
scas
jno
sahf
mov
ret
or
lahf
push
in
xor
cmp
test
movsb
mov
mov
push
pushf
dec
mov
push
add
add
or
ret
jmp
sub
push
mov
add
sbb
inc
jg
inc
inc
shlb
or
mov
dec
imul
or
pushf
pop
push
cmp
xchg
outsl
ja
ja
jae
sbb
inc
ss
or
in
or
push
dec
dec
in
push
push
jnp
sub
fidivrs
shld
ljmp
or
push
mov
and
or
jl
xchg
movsl
repz
sub
cmpsb
aas
sub
sbbl
pop
fldl
lods
jmp
fwait
pop
mov
mov
add
aam
push
mov
mov
inc
sbb
incl
jl
stc
pusha
mov
fidivl
cmp
pop
ds
test
and
pop
push
call
inc
out
sbb
clc
inc
lcall
data16
outsl
add
adcb
maskmovq
negl
pop
or
push
dec
ljmp
push
pop
inc
pop
ljmp
ljmp
push
cltd
adc
push
repnz
dec
aad
jmp
out
aam
test
nop
lods
aas
movsb
pop
test
in
mov
addr16
inc
and
bsr
sub
js
sbb
fstps
pusha
push
imul
pop
pop
dec
adc
dec
mov
leave
aad
dec
sti
fwait
jg
mov
or
imul
enter
jg
fsubl
mov
pop
xchg
fiadds
mov
xor
push
shlb
fmuls
adc
gs
popl
mov
out
mov
add
jbe
mov
inc
push
movsb
push
lret
mov
test
mov
rorb
xchg
add
push
pop
call
add
out
iret
cld
adcb
cmp
sub
xor
xchg
pop
or
nop
or
lods
push
inc
xlat
xlat
es
add
negb
outsl
lock
mov
das
loope
xor
imul
adc
in
pop
jns
adc
cmp
imul
jb
lret
rcr
push
add
loopne
cmp
fdivl
sub
fists
sbb
lods
fs
dec
pop
mov
mov
xlat
cwtl
pop
bound
imul
imul
sbb
or
xor
ret
mov
flds
dec
movsb
sub
stc
popl
lock
xor
dec
jnp
fstpt
test
xchg
jecxz
sbb
push
push
ret
pop
jae
sub
mov
pop
mov
cmpsb
mov
mov
adc
add
out
imul
popa
out
push
or
cli
sbb
push
ficoml
or
inc
dec
popa
sahf
rol
mov
mov
or
xor
or
aam
pop
out
movsl
push
mov
es
pop
int3
in
decb
das
test
aas
imul
inc
add
testl
sbb
sbb
mov
or
inc
mov
shll
fxch
adc
sbb
cwtl
xor
dec
outsl
xor
lcall
and
sbb
addl
push
test
mov
sarl
scas
int3
inc
je
dec
loope
adc
xor
cmp
loopne
idivl
call
mov
inc
mov
lahf
test
test
sti
bound
dec
dec
aad
out
lahf
inc
adc
hlt
iret
cmc
cwtl
push
fstpl
cmp
out
out
into
dec
cmp
push
and
ljmp
pusha
enter
adc
or
pushf
adc
add
mov
jge
sbb
inc
pop
push
push
out
jo
pop
mov
mov
mov
mov
gs
les
sti
or
addr16
in
outsl
cmp
nop
push
cmp
in
imul
jo
jl
bound
test
adc
mov
pushf
add
shll
stos
out
cmc
outsb
fiadds
xchg
adc
out
push
enter
test
mov
and
mov
xor
in
out
sub
insb
xchg
sub
orl
dec
out
push
fdivl
dec
add
fld
ret
jg
insl
sbb
push
sub
dec
pop
mov
dec
xor
push
pop
cmp
jg
test
push
dec
sarb
sbb
ja
loopne
push
icebp
xchg
jne
mov
inc
xor
shrb
fadd
mov
out
push
sub
gs
push
pop
aad
out
inc
mov
xchg
jg
jl
mov
sahf
test
sub
das
push
adc
fucomip
fbstp
movsl
mov
jl
outsb
mov
stc
int3
mov
ds
xchg
data16
inc
divl
sbb
cli
xlat
mov
mov
flds
pushf
out
xchg
cltd
lret
in
jle
mov
loopne
or
daa
inc
ja
mov
pinsrw
push
add
lahf
or
inc
xorl
dec
pop
shll
pushf
mov
nop
jge
sub
addr16
or
fnstsw
dec
mov
pop
repz
cwtl
adc
sar
in
xchg
lds
sub
pop
scas
out
pop
sub
enter
sbb
addr16
pop
call
push
repz
jo
add
jo
ret
inc
test
rcl
in
mov
jg
fcoms
daa
push
test
adc
rol
mov
das
leave
inc
popa
data16
ja
in
push
mov
xchg
jno
or
loop
pop
mov
mull
dec
imul
mov
xchg
push
xor
lea
pop
xchg
mov
lods
push
adc
mov
sub
sub
mov
or
push
stc
xor
push
pop
mov
cltd
mov
lret
mov
and
ds
sbb
movsb
insb
dec
xchg
loopne
das
or
add
cwtl
xchg
cs
bound
adc
jl
ret
inc
and
scas
push
nop
cmpb
mov
or
cmpsl
mov
in
push
std
push
push
xchg
xchg
stc
scas
push
or
xchg
std
insb
mov
mov
sbb
sbb
addl
sub
pusha
movsl
lods
mov
flds
movsl
push
idiv
lret
aas
add
popf
cmc
test
mov
loopne
inc
adc
sbbw
xchg
jge
aad
cwtl
jg
ret
pop
push
cmp
or
mov
lret
outsl
sbb
push
mov
inc
and
andl
stos
adc
repnz
popf
mov
aad
rclb
xchg
mov
inc
ss
adc
fisubl
inc
jne
cmc
cmp
jecxz
inc
mov
fisubl
xchg
jle
andl
or
or
fcmovu
pop
pop
xor
dec
std
ds
mov
xchg
popf
sub
adcb
inc
out
outsb
dec
mov
xchg
addb
xchg
in
shll
stos
pop
repz
addr16
mov
and
mov
fdivrp
mov
jmp
xor
push
roll
outsl
test
pop
sub
inc
iret
xchg
adc
aas
ret
mov
imul
xor
push
ds
dec
enter
shll
inc
ja
outsb
cld
push
adc
mov
ljmp
add
lods
test
mov
das
pop
cmp
clc
cmc
cmp
xor
lret
daa
add
adc
push
imul
shll
leave
js
push
mov
sti
dec
or
testb
mov
loope
mov
sbb
mov
cmpb
cmp
sbb
jae
mov
pop
int3
cwtl
stc
sub
loope
sbb
dec
push
pusha
bound
adc
lret
int3
test
aas
mov
ret
hlt
sub
iret
mov
out
cld
xor
outsl
or
inc
es
loopne
push
jo
xor
ret
pop
adc
stos
push
stc
mov
out
icebp
test
scas
xchg
pop
imul
es
call
inc
ret
push
sahf
and
xchg
jns
ja
jp
sbb
adc
jbe
pop
out
and
hlt
mov
inc
push
popa
test
adc
sub
inc
lock
or
xchg
inc
rcll
pop
scas
imul
lcall
outsb
scas
jle
scas
dec
test
inc
fwait
scas
and
ja
sub
and
imul
mov
push
pop
in
nop
or
in
sub
testb
cmp
mov
push
test
inc
lods
add
adc
mov
push
mov
int3
idiv
fs
aaa
inc
fisttpll
iret
sub
int
cmp
push
daa
push
ret
pop
fwait
lea
ljmp
mov
popa
pop
ret
ljmp
ret
sbb
inc
ljmp
insl
sub
ficoms
pop
in
data16
outsl
out
or
ljmp
enter
xlat
fcmovb
xor
vandpd
insb
push
adc
out
mov
ret
jg
add
push
mov
lret
ret
mov
inc
out
mov
mov
sahf
ja
stos
test
out
outsl
add
cli
pushl
in
push
mov
push
lret
dec
icebp
insb
lds
dec
sbb
push
mov
jp
adc
mov
sarb
stc
or
cwtl
adc
push
loopne
xchg
lret
into
mov
pop
add
imul
movsl
mov
stos
lret
pop
and
pop
add
inc
stc
cmc
push
mov
add
adc
addr16
or
fcompl
stc
and
js
jecxz
adc
imul
je
stos
scas
xlat
aas
call
fisubrl
or
and
mov
xor
sarb
cmp
push
mov
add
pop
and
shlb
xchg
inc
cmp
pop
imul
mov
ss
mov
iret
push
mov
arpl
jp
mov
pop
xchg
mov
cld
xchg
pop
adc
adc
in
jge
jno
testl
stos
jns
fwait
pop
cmp
xor
pop
hlt
and
and
sar
into
mov
test
adc
dec
imul
jl
fpatan
repz
enter
loope
movsl
inc
movsb
push
enter
add
scas
ljmp
xor
cmpsl
ja
idiv
sbb
or
and
test
mov
pusha
pop
jb
insl
push
sub
sbb
mov
mov
push
movsb
rorl
sub
push
add
mov
pop
dec
lea
mov
mov
ds
fdivrp
mov
frstor
leave
adc
fwait
pusha
mov
mov
addr16
mov
icebp
cmc
ret
jecxz
jb
sbb
sbb
xchg
sarb
push
xchg
stc
ja
xor
out
mov
mulb
popf
mov
clc
cmp
or
movsb
add
repz
out
ljmp
arpl
dec
mov
mov
sbb
popf
pop
in
sbb
push
xor
pop
xchg
cmc
push
pop
sbb
sbb
jne
aas
in
std
inc
loop
sbb
sbb
push
jl
push
fs
ret
add
xorl
xchg
sti
orb
pushf
mov
in
and
push
data16
movsb
scas
mov
mov
sub
add
xlat
dec
cmp
lock
inc
xchg
pop
loop
mov
int
cmpsl
subb
jb
cmp
pop
decl
cltd
inc
out
xor
mov
stos
jmp
jl
scas
sbb
sbb
divb
jb
iret
outsb
scas
mov
cwtl
ja
outsl
xor
cmp
cs
jne
aam
in
mov
dec
dec
mov
lahf
cmc
and
mov
sti
sbb
sbbb
adc
push
nop
inc
sbb
lds
pmulhw
sbb
sbb
or
in
dec
nop
dec
arpl
dec
fdivs
test
adc
in
adc
and
push
scas
xor
xchg
out
sbb
fadd
daa
mov
sti
sahf
or
push
mov
je
xchg
push
inc
xchg
mov
mov
or
mov
mov
inc
mov
ja
jecxz
outsl
dec
fs
gs
add
and
in
adc
cmpsl
int
inc
xchg
adc
mov
sub
jmp
sti
jl
sbb
jmp
jns
or
pop
cmp
jne
roll
jb
mov
dec
inc
mov
add
adc
adc
addr16
outsb
mov
cmp
std
sti
rcl
out
xor
add
stos
jb
test
aas
pop
jnp
test
cmp
clc
xchg
lock
pop
push
fisubrs
std
xor
jge
push
popa
sub
xchg
jnp
in
adcl
jae
xor
bound
add
cmpsl
push
sub
jo
jp
mov
cmp
nop
inc
pusha
push
pop
pop
and
sti
adc
xor
mov
adc
inc
dec
arpl
hlt
mov
mov
jp
jp
mov
fstpt
shrb
dec
enter
mov
mov
xor
mov
lcall
dec
xor
mov
cmp
xchg
addl
sbb
xchg
test
cli
stos
sub
pop
cmp
lret
ljmp
cmp
jns
call
mov
or
fnsave
ror
mov
xor
and
lds
js
cwtl
jo
cmp
ss
cmp
and
sbb
cs
lahf
ja
adc
xchg
sub
lret
or
sub
adc
pop
out
lds
add
jne
in
adc
icebp
data16
cld
scas
test
addb
add
mov
dec
mov
loope
call
or
mov
push
pop
lds
sub
loopne
jbe,pt
enter
mov
fwait
push
mov
sub
and
stos
ds
xchg
sbb
mov
jmp
lret
movsb
rcrb
cwtl
push
jns
test
pop
dec
sbb
adc
scas
sbb
push
pop
out
lcall
gs
mov
out
or
mov
mov
mov
scas
pop
cmp
es
popf
cmp
and
mov
xchg
or
jns
loopne
std
inc
sub
push
mov
or
or
sub
dec
xorb
fisubs
dec
ds
adc
or
cmpsl
pop
fs
ret
cli
dec
sub
jge
mov
mov
daa
xor
arpl
push
scas
not
ljmp
add
cmp
movsl
cmp
adc
jge
mov
push
les
out
pop
les
inc
sahf
push
adc
mov
shlb
and
es
mov
faddl
imul
movsl
dec
xorl
jns
cmpsb
test
xchg
shlb
loope
data16
xchg
add
pop
dec
sbb
pushf
jnp
test
xchg
fsubrl
stos
shlb
add
jge
shlb
pop
in
mov
jnp
mov
xlat
inc
push
outsb
loop
cmp
es
add
push
adc
cmpsb
loopne
push
lds
in
push
cmc
sub
push
pop
pcmpeqw
sbb
sarl
push
aas
je
fisubl
addl
std
test
daa
jecxz
sbb
mov
add
js
sarl
inc
sbb
mov
dec
mov
in
dec
and
cli
dec
xchg
imul
adc
pop
sbb
adc
pop
stc
add
push
je
enter
jmp
fisubrs
jmp
jmp
in
in
lahf
call
jo
ret
lahf
inc
das
incb
sti
inc
mov
sub
notl
mov
sub
leave
mov
cli
inc
les
mov
mov
xchg
mov
nop
pop
pushf
adc
cmpb
aaa
xchg
add
inc
nop
mov
imul
sub
nop
out
mov
jb
ret
aad
add
mov
xor
cmp
or
cmc
jb
push
loopne
cmpsb
std
cs
movsl
loopne
jp
test
push
jmp
mov
or
lods
stc
mov
or
popf
cltd
add
into
stos
shll
lods
mov
add
lods
fbstp
fildl
mov
in
xlat
mov
int
cmp
mov
add
pusha
jge
aad
push
or
cmpsb
push
xchg
cmp
sub
out
xchg
adc
test
dec
fisubrs
mov
xchg
call
dec
cmp
pop
and
push
adcl
jne,pt
sub
pop
and
inc
dec
dec
jo
jl
add
stc
push
push
jbe
cmp
mov
and
jbe
sahf
jno
or
mov
inc
adc
cs
jo
mov
push
cld
cli
jge
sbb
push
popf
scas
bound
test
pop
fstpt
pop
pop
mov
mov
xor
xchg
pop
and
into
mov
insl
lods
and
pop
mov
jg
ds
add
inc
pop
cmp
andnps
sub
idiv
mov
dec
adc
add
sbb
adc
rcrl
shlb
rcr
frstor
add
mov
lds
jns
paddusw
ficompl
or
xchg
cld
jg
xor
add
mov
clc
or
xor
pop
mov
psraw
pusha
jno
pop
sub
cmp
dec
mov
cld
push
imul
jle
shlb
dec
std
lods
std
pushf
dec
in
mov
sub
orb
xchg
in
pop
outsl
lds
adc
mov
cmpsb
fbstp
ja
ss
mov
ret
jp
lret
inc
arpl
outsl
mov
xchg
int3
add
out
clc
xlat
cmp
cwtl
push
aad
add
outsl
cmpsb
stos
push
sub
and
cmp
mov
ja
mov
mov
daa
js
call
fwait
mov
push
cmc
adc
jnp
fucomip
mov
inc
cld
xor
fadds
dec
cmc
or
add
popa
inc
inc
pusha
adc
popl
js
xchg
sub
xchg
pop
adc
pop
or
loopne
sbb
cmp
outsl
leave
dec
addl
lret
cltd
fwait
sub
dec
lods
loop
inc
inc
sbb
test
add
popa
dec
ret
pshufw
dec
sub
xchg
leave
icebp
andb
add
stos
sarb
mov
data16
js
jnp
lahf
mov
jmp
add
jo
sub
cmpl
jno
xchg
cmpsl
push
xchg
pop
mov
rcl
xchg
jp
pop
xchg
push
mov
adc
lods
les
dec
sub
out
cwtl
rclb
out
mov
pop
xor
loope
or
jmp
adc
jmp
adc
fs
pop
mov
dec
popa
sarl
lds
lahf
arpl
or
loopne
addr16
mov
nop
jne
ficompl
std
shlb
mov
push
push
cltd
jle
add
and
aam
inc
inc
sub
add
xchg
sbb
clc
mov
push
push
das
xchg
mov
dec
and
inc
adc
jg
outsb
add
clc
testb
cltd
rol
pop
sbb
es
repnz
mov
aam
inc
push
and
push
int
enter
and
call
sub
sub
lock
js
jns
idivl
cmc
push
mov
imul
lret
fnstenv
sbb
aam
xor
push
or
fbld
movsb
ret
lret
in
in
test
sub
cmp
dec
lea
mov
pusha
movsl
adc
mov
mov
xchg
out
rclb
pop
push
pop
aaa
and
sbb
sahf
data16
push
inc
mov
test
aas
mov
xchg
insb
shrb
daa
push
jmp
fsubl
lahf
sahf
inc
loopne
pop
mov
jb
stc
mov
and
push
mov
lods
push
test
pop
ljmp
into
pop
sub
jecxz
cmp
xchg
outsl
mov
mov
xchg
add
ss
mov
xchg
test
push
iret
xor
cmc
fmul
clc
or
adc
and
push
push
outsb
dec
mov
into
sbb
xchg
divb
roll
xchg
and
mov
repnz
dec
xor
adc
push
fcmovbe
ret
push
push
pop
in
pop
pop
stc
xchg
test
fcmovnu
mov
sarl
or
mov
ja
mov
inc
les
push
cmp
out
dec
or
imul
lret
jg
jnp
ljmp
add
cmp
mov
and
ja
mov
mov
xchg
mov
jbe
imul
add
mov
sahf
lret
rorb
mov
push
mov
lcall
in
es
repz
mov
lods
jno
cs
or
jp
pop
aam
enter
pop
loop
or
repnz
mov
xchg
jb
mov
lods
jnp
cmp
loopne,pt
mov
lahf
cmp
leave
sti
cs
insb
jb
addr16
sub
test
aaa
pop
std
cmpsl
inc
test
add
inc
sub
into
push
lds
je
stos
mov
jae
fs
push
xor
push
adc
pop
dec
out
xor
dec
ret
or
inc
out
jg
adc
pop
or
or
pusha
rcrb
gs
ljmp
or
test
sub
jecxz
dec
mov
jo
and
loopne
push
push
and
adc
inc
inc
sbb
push
cmp
adc
jge
call
xor
aas
fsubs
cmp
xchg
les
sbb
inc
lods
loop
cmp
adc
lea
pop
fimuls
lds
push
cmpsb
dec
orb
push
xchg
std
add
test
add
push
xlat
test
in
shrb
xchg
sbb
mov
dec
adc
jno
jle
fdivrs
rcrb
xor
xchg
cld
mov
decb
dec
call
mov
hlt
jno
jp
pop
cli
sahf
mov
dec
sbb
push
and
aad
in
mov
dec
notb
jno
mov
push
dec
aad
mov
cmp
mov
or
xlat
jns
dec
rol
jne
dec
in
push
leave
loope
out
adc
rcrl
mov
lahf
popf
pop
stos
push
push
cli
hlt
add
stos
push
cmc
push
xchg
mov
in
clc
into
test
ljmp
pop
pop
in
in
mov
mov
jl
in
sbb
or
addr16
out
or
loopne
out
sbb
pop
sbb
inc
push
aaa
sbb
in
pop
ss
add
aaa
arpl
add
rorb
push
push
xor
dec
xchg
ret
loop
in
xchg
scas
test
sub
mov
xchg
out
sbb
insl
jns
int3
repz
mov
aaa
faddl
int
dec
adc
aad
popf
dec
hlt
popa
arpl
js
and
sub
xchg
mov
movsw
and
push
mov
aad
mov
sub
sbb
add
add
pop
aaa
mov
mov
sbb
sub
and
adc
mov
ljmp
cli
cmp
jne
test
jne
mov
ret
clc
std
std
push
add
push
fcmovb
or
xchg
paddw
subb
xchg
pop
mov
jbe
jmp
icebp
cs
push
xchg
push
or
mov
fmulp
rcll
test
mov
cs
scas
bound
jge
jne
inc
fnstenv
xchg
sbb
dec
imul
mov
sub
arpl
mov
sbb
dec
inc
sbb
loop
jmp
fnsave
fdivrp
pop
aad
sub
add
cmpsb
repnz
pushf
or
data16
addr16
lds
ss
inc
inc
pop
sub
int
fidivl
mov
in
xchg
imul
lock
fcompp
add
movsl
sbb
jmp
or
cmpsl
repz
push
add
inc
cmp
leave
xor
push
sub
or
jge
dec
and
xor
sbb
jg
add
sbb
lds
pop
mov
lret
mov
xor
and
mov
push
movsb
xchg
pop
jl
pop
cmp
pop
cmp
popf
pusha
pop
icebp
dec
nop
dec
xchg
test
inc
in
fdiv
into
push
sbb
add
fstl
pop
out
pop
pop
jmp
in
jnp
dec
push
add
in
mov
push
cli
inc
test
sbb
pop
add
aad
addr16
xor
arpl
int3
stos
xchg
mov
stos
mov
push
lea
mov
cmc
pop
and
daa
insb
notb
jnp
movl
add
xor
je
int3
jp
loope
mov
and
adc
cld
ljmp
rclb
insb
int
ds
movsl
dec
mov
clc
sub
push
mov
movsb
and
daa
sar
bnd
addr16
inc
lret
pop
stc
loope
pop
psrlw
cmp
push
inc
cmp
popf
sub
ja
and
mov
sti
and
flds
push
push
adc
cmpsl
push
stc
xor
aad
jb
in
pop
sub
subb
jmp
repz
mov
push
in
int3
out
push
in
ljmp
insb
enter
dec
scas
orb
lret
jge
dec
dec
cmp
aas
fs
movsl
rol
movsl
stos
cs
xor
jo
cs
iret
test
movsl
mov
mov
inc
shlb
cmp
mov
mov
outsb
mov
adc
sbb
lahf
dec
mov
lods
stos
sub
out
mov
inc
dec
or
movsb
and
sti
lds
pushf
jp
push
int3
mov
js
loope
fnstenv
jecxz
das
push
cmpl
mov
mov
inc
enter
sub
sub
pop
adc
push
xor
push
jg
movsb
sub
sub
rorb
xchg
fiadds
mov
dec
cmp
pop
rolb
sarb
mov
xchg
jnp
or
ss
pop
lret
sbb
mov
jg
leave
lea
repz
out
push
popf
mov
sub
push
pop
xor
test
jbe
push
adc
jb
sbb
add
push
dec
out
jle
push
and
fstl
xchg
mov
adc
jg
popa
pop
adc
add
int3
popf
sbb
hlt
push
call
mov
int
out
jg
pusha
out
addb
shl
mov
pop
or
es
int3
insb
xorl
imul
outsb
xchg
in
push
cmp
out
shrb
adc
adcl
jecxz
test
mov
insb
mov
fdivl
cli
in
pop
pop
arpl
mov
mov
jne
addr16
pushf
mov
sbb
pop
lock
mov
stos
or
jbe
pop
push
pushf
cmp
mov
xchg
cmp
imulb
mov
das
jae
mov
fprem
inc
mov
sbb
mov
std
pop
xor
std
int
sub
mov
fcmovnb
bound
sbb
lret
sbb
add
cwtl
adc
cwtl
xor
sbbb
cmp
fs
in
lret
adc
mov
insl
mov
js
jl
daa
sti
mov
sub
pop
inc
stos
cmp
mov
lds
lret
fcomip
mov
cwtl
or
repnz
jnp,pt
inc
adc
out
and
aad
mov
ss
and
xchg
mov
nop
sub
mov
lret
test
imul
nop
push
add
and
xor
outsb
shld
decb
sbb
or
fnstenv
outsl
xor
jb
rol
repnz
add
fidivrs
stos
ds
in
lea
xchg
test
inc
sub
fsub
enter
inc
stos
gs
jbe
gs
or
rol
pop
mov
jle
je
test
dec
sub
je
jecxz
icebp
mov
add
clc
mov
into
mov
aaa
push
dec
les
sub
mov
xchg
push
and
sub
inc
rol
push
push
in
xchg
loope
push
fldl
jb
pushf
cli
xchg
mov
das
adc
in
xchg
jecxz
insb
or
sbb
sub
or
in
repz
loop
insl
xor
push
mov
sub
test
pop
or
push
jns
leave
xchg
cmpsl
inc
fucomi
pop
inc
dec
jmp
test
pop
lods
rclb
stc
mov
in
jge
popa
xchg
aaa
dec
loop
stc
out
ss
popfw
fdiv
xchg
imul
mov
scas
test
and
dec
mov
and
sarb
mov
in
adc
mov
xor
inc
mov
loope
sbb
je
iret
mov
xchg
mov
push
sub
pop
jbe
push
lretw
xor
xor
jmp
in
xchg
adcl
iret
mov
adcb
cmpsl
mov
inc
dec
xchg
jb
insl
stos
movsb
dec
ja
out
cmpb
add
aas
in
mov
inc
lods
cmp
clc
or
add
mov
jle
fimuls
repz
std
sub
push
lret
lods
sbbl
inc
xor
mov
mov
mov
push
add
jmp
leave
jo
sub
cmp
fisubl
cwtl
lock
aam
or
mov
cld
cmp
movsb
out
sti
and
mov
xchg
jecxz
push
in
push
ds
mov
dec
or
dec
xor
cli
sbb
movsl
xchg
cmpsl
stc
xlat
push
rorl
cmp
push
add
popl
rorb
jbe
in
xor
mov
aam
sbb
lods
pop
dec
and
fisubrs
cmp
mov
jg
jnp
andb
idivb
sbb
es
fiadds
or
xor
repz
iret
ret
cmc
popa
pop
jg
lods
test
out
jp
cmpsl
fsubs
push
sbb
add
mov
push
aam
pop
push
mov
xchg
cmc
data16
cltd
adc
xor
sahf
loope
pushf
lahf
ret
adc
mov
add
or
out
mov
adc
jge
jle
mov
int3
push
and
or
shrl
mov
imul
int
push
aaa
pop
and
out
clc
push
jo
cltd
xchg
ror
push
xchg
std
ficoml
cmp
dec
popf
mov
push
pop
fiadds
mov
lods
cmpl
xor
inc
cli
pop
sub
push
stc
insb
out
pushf
fbld
inc
add
jmp
cli
daa
pop
dec
pop
inc
fildll
jo
loop
mov
xchg
push
add
mov
pop
xchg
pop
push
mov
jg
fwait
stos
jg
scas
test
jae
sbb
and
loopne
lods
in
mov
mov
pop
mov
les
rolb
mov
pop
mov
movsb
xor
cmp
sbb
iret
inc
fwait
inc
sub
mov
sub
lods
inc
aad
push
pop
inc
rcr
cmpsl
push
adc
scas
pushf
int3
in
stc
add
out
mov
cmp
and
ljmp
mov
rorb
lret
pop
xchg
ja
xchg
aam
fcoml
out
mov
xchg
shlb
mov
int3
jbe
call
jnp
adc
mov
out
aad
imul
adc
dec
push
xor
mov
ret
push
cmp
cli
out
mov
popf
lds
rol
sti
sbb
pop
test
les
push
mov
or
aas
pop
xchg
and
mov
lahf
jns
dec
mov
std
dec
mov
mov
push
ja
push
fisttpl
stos
jno
mov
jp
mov
xchg
sbb
inc
or
mov
call
push
cmp
movsl
adc
dec
cltd
jl
mov
cmp
repnz
sarb
sahf
inc
mov
sbb
lahf
pop
dec
lcall
mov
pushf
xor
out
jo
add
movsl
imul
xor
inc
sub
mov
inc
in
and
out
mov
mov
je
std
add
pop
lods
sti
pop
mov
lret
popf
push
and
ss
and
dec
jge
lds
ret
call
in
pop
movl
pop
movsl
loopne
add
jns
lea
sbb
dec
shr
mov
push
lods
gs
ja
add
add
aad
mov
push
pop
jno
shlb
mov
cmp
das
mov
or
push
add
lret
fucomip
jne
out
scas
sbbl
xorb
adc
cmp
shlb
scas
jns
aad
bound
xor
cwtl
bound
shl
ret
mov
movsb
lret
push
and
int
sahf
shl
out
sti
adc
jle
call
xchg
add
pop
mov
jp
push
js
mov
shrl
cmpb
lods
or
sub
push
xchg
inc
pop
push
std
popl
or
and
jp
jno
mov
iret
rcrl
sarb
jmp
jne
and
jle
rolb
setge
lret
add
imul
push
jg
jnp
and
cmp
inc
dec
push
outsb
ret
dec
scas
dec
das
mov
add
repnz
adc
jb
push
lret
sub
jns
jl
adcl
push
popa
dec
mov
jmp
xlat
je
sub
sbb
das
inc
jecxz
xchg
sbb
cltd
adc
dec
loope
repnz
ja
lcall
mov
mov
push
clc
repz
es
mov
dec
rcrl
hlt
and
sub
mov
mov
cmc
sbb
aam
test
jb
icebp
aad
loope
pop
cmp
dec
xchg
movsb
es
xor
pop
inc
lret
or
push
lods
mov
cmp
inc
add
adc
sti
dec
cs
test
lods
cmp
fistl
dec
mov
fbld
push
les
xchg
and
sbb
data16
add
push
fcom
ss
or
ja
or
inc
test
ss
adc
ror
in
sbb
loop
sub
or
push
xor
or
xchg
cmp
cltd
addps
into
mov
push
lods
imul
iret
jecxz
gs
push
push
or
in
stos
aam
mov
pop
push
pushf
xor
push
leave
outsb
cs
cli
jns
testb
inc
cld
push
aaa
or
sub
aad
arpl
pop
mov
jb
outsl
mov
jae
add
inc
xchg
jb
in
out
dec
adcb
pop
pop
jae
nop
adc
stc
pop
cmpsl
xor
push
jge
push
fdivl
mov
ret
outsl
mov
sarl
cmp
mov
inc
mov
xchg
shl
sti
popf
lret
imul
cmpl
cmpsb
pop
cmc
jns
sahf
xor
lahf
ja
fucomip
sub
and
or
es
cltd
cld
mov
push
dec
outsb
jmp
jno
mov
out
mov
loop
movsl
test
jecxz
jo
addr16
sub
rcr
mov
insb
add
lds
lock
rorb
mov
jmp
add
cmpb
jns
dec
dec
cmpsl
adc
inc
or
scas
and
mov
test
in
mov
sub
outsl
cmp
movlps
push
xchg
in
xchg
dec
jnp
lods
or
dec
stos
xchg
dec
rcrb
outsb
or
jle
xchg
lcall
icebp
mov
and
repz
iret
popf
jmp
mov
sub
lea
fdivl
outsb
fwait
pushf
sbb
inc
pop
outsb
orl
push
dec
sti
fists
push
sarb
push
popa
fadds
imull
pop
fistps
into
pop
movsb
loopne
mov
mov
aaa
imul
sub
jmp
mov
pop
lcall
push
aas
adc
lock
ss
mov
repnz
rcll
enter
mov
int
pop
data16
inc
mov
pop
push
mov
dec
pusha
dec
gs
and
fstpt
ret
xchg
inc
jp
sbb
jns
push
cltd
push
pusha
dec
mov
xchg
fistpll
bound
pushl
imul
mov
mov
pop
jae
jecxz
sub
repnz
jmp
addb
aaa
add
inc
sub
out
fimull
sbb
mov
int
gs
add
and
push
xchg
jnp
mov
lea
xchg
mov
popf
pop
sbb
arpl
mov
in
dec
push
iret
adc
jmp
pop
lret
inc
jle
inc
adc
call
cld
cmp
sarb
push
pop
int
lds
in
adc
test
add
mov
into
cmp
sbb
xchg
sar
xchg
add
sub
sub
pop
dec
sub
repnz
repz
inc
xchg
mov
icebp
inc
std
xchg
cmp
add
mov
insl
sbb
xchg
cmpsl
xchg
or
adc
push
lcall
ret
sarb
jae
leave
inc
daa
mov
pop
sub
scas
out
rol
call
mov
dec
fdivr
test
ss
into
jo
cs
test
imul
rorb
jo
mov
sbb
movsl
push
xchg
push
adcb
rcrl
adc
xchg
movsl
jno
lock
out
mov
pop
jno
cmp
sbb
mov
add
adc
sub
in
push
cmpsb
ret
fistps
fmul
stc
int3
aad
mov
xchg
rorb
sub
cmp
sub
add
xchg
sbb
pop
shrb
fisttpl
mov
pop
xchg
ret
outsb
cmp
cmc
sarb
jl
xor
mov
ds
in
jmp
sbb
mov
jne
popf
addl
bound
enter
fisubrl
xchg
lods
dec
or
icebp
mov
fwait
loopne
lcall
out
fisubl
in
stc
insb
xor
icebp
sub
je
test
out
push
jp
ds
push
jo
cmpsl
lahf
scas
and
pop
sar
jae
jae
add
inc
nop
call
mov
popf
or
adc
adc
int3
hlt
loop
ljmp
fidivs
std
lods
pop
lds
mov
sub
lds
pop
iret
pop
loopne
add
xor
xchg
mov
push
icebp
mov
pop
sub
sbb
out
jns
popf
sub
xchg
rclb
addb
scas
jmp
mov
es
fsubrl
fstl
pop
mov
sarb
mov
or
loope
mov
ret
sbb
dec
int3
jo
push
mov
xor
fs
notb
push
dec
cwtl
push
dec
xor
xor
lcall
into
int3
push
sub
inc
out
mov
stc
push
into
or
mov
and
push
or
ljmp
pop
pop
out
xor
aas
mov
sbb
xorb
iret
into
mov
cmp
out
pushf
xor
shl
lahf
shl
pop
dec
daa
data16
in
xchg
xor
xchg
je
dec
and
repnz
cmp
sbb
inc
sub
test
popa
adc
push
pop
icebp
fldl
mov
sbb
adc
icebp
mov
dec
and
adc
inc
mov
ljmp
xchg
shll
addr16
mov
dec
pop
mov
fwait
dec
push
or
aad
enter
out
mov
ror
mov
sub
mov
jb
rol
mov
inc
in
pop
call
add
test
out
repz
fs
pusha
out
insb
push
hlt
popf
outsb
ds
cmp
mov
cmp
sbb
jge
pop
jns
push
fldl
cld
pop
and
mov
xor
je
pop
mov
lcall
sub
jl
sarb
popa
pop
or
in
and
mov
inc
mov
addl
mov
shlb
ljmp
setb
mov
pop
mov
mov
adc
xchg
aaa
decb
mov
inc
movsl
sub
in
out
mov
xchg
repnz
sub
mov
jmp
sbb
or
fwait
pop
xor
insb
push
cmp
xchg
mov
xchg
sbb
sub
push
stos
test
int3
movsl
gs
cmp
jle
dec
and
je
in
xor
ret
xorb
pop
out
xor
test
rorl
jmp
pop
lds
push
jecxz
fdivrl
rcll
gs
pop
push
repnz
ret
ret
fs
cmp
in
call
loope
mov
and
mov
cmpb
adc
loop
adc
in
xlat
and
fldl
fiaddl
sbb
rcll
popf
jns
dec
or
dec
mov
mov
and
inc
and
les
xchg
mov
push
jnp
inc
pop
pop
mov
xchg
sbb
push
ja
int3
cli
shrl
jnp
cs
loopne
stc
add
repz
and
mov
mov
int3
inc
and
mov
arpl
hlt
int
gs
pop
mov
addr16
add
sbb
pop
dec
loope
insb
jle
les
insb
mov
sbb
mov
add
inc
inc
push
outsl
mov
sub
js
inc
shll
ret
sub
rcrl
bound
sbb
inc
les
rolb
mov
push
cld
push
xor
jge
pop
pop
in
loop
pushf
push
jns
lds
jmp
jmp
out
pop
fisttps
dec
nop
push
fsubrl
mov
jnp
mov
or
pop
fadds
pusha
arpl
pop
cmpsb
add
mov
roll
or
mov
sbb
shr
dec
dec
pop
test
es
xchg
popw
adc
xchg
stc
push
mov
xchg
jmp
xor
rcrb
roll
adc
xchg
int
out
fs
sbb
pop
loopne
jmp
xlat
dec
ljmp
push
mov
adc
jae
cmpsl
iret
ja
rorl
mov
mov
and
cmp
in
pop
insb
lock
out
mov
lea
iret
xchg
out
loop
and
jp
scas
mov
popf
mov
pop
in
mov
jle
sbb
jecxz
ror
out
scas
mov
ret
mov
adc
xchg
xor
xor
xchg
sub
test
aad
add
xor
mov
sbb
adc
add
arpl
mov
shrl
mov
jno
or
std
mov
add
loop
jne
xor
or
mov
addl
inc
jns
sarb
xor
popa
mov
in
sbb
sub
ljmp
lock
icebp
add
pusha
mov
pop
cltd
sti
lods
in
xlat
ja
sarb
jp
sbb
xor
int
adc
mov
inc
pop
fistpll
jo
or
mov
in
mov
pop
imul
repnz
inc
pop
test
add
xchg
subb
mov
xor
xchg
mov
jns
mov
inc
cmp
pop
pop
mov
mov
outsl
scas
outsl
sbb
in
iret
lahf
push
inc
mov
and
ljmp
adc
jle
cli
aad
xchg
jp
lock
aam
jge
sahf
fistps
jnp
and
jl
leave
pop
pop
aam
cmpsl
aaa
pop
mov
mov
and
inc
inc
cmp
and
shrl
and
mov
mov
adc
mov
es
fcoms
dec
outsb
testl
and
popf
lock
dec
loopne
loopne
mov
mov
cmp
js
rclb
lahf
pop
inc
stos
aad
fstl
xchg
sbb
in
loope
jg
push
mov
fisttpl
mov
inc
mov
filds
push
jbe
xchg
mov
sub
mov
aas
sahf
inc
and
cmp
out
je
mov
fistps
xchg
gs
dec
jle
lahf
in
sub
shlb
stos
loop
movsl
ss
lcall
jg
dec
mov
fwait
cwtl
ljmp
in
push
lret
pop
in
int
mov
out
out
or
ret
cs
int3
push
jge
mov
std
lret
shrb
dec
jae
push
inc
out
adc
lcall
cwtl
adc
mov
insb
and
in
bnd
lock
fisubrl
lock
xchg
out
out
dec
fisubl
mov
xchg
sar
mov
and
mov
add
mov
or
faddl
sub
es
pop
call
pop
hlt
repnz
loop
sub
push
hlt
imul
mov
pop
sbb
out
sbb
sbb
inc
pusha
mov
into
sub
stos
outsb
daa
adcl
mov
inc
or
or
sub
push
cmp
sbb
sbb
andl
test
fwait
vpextrw
lds
dec
pop
mov
mov
sub
or
pop
mov
mov
loope
outsb
repnz
into
xor
fsubp
adc
ds
mov
es
cltd
in
inc
cmp
sti
lods
flds
add
and
movsb
mov
push
mov
sub
push
push
push
mov
inc
es
xchg
movsl
gs
sbb
in
cmp
iret
jp
ret
sub
dec
out
inc
add
addr16
mov
jmp
mov
push
pop
push
test
movb
stc
rcll
fisubrl
push
loope
mov
xchg
push
push
mov
icebp
fnstenv
das
cmp
and
cmc
pop
sbb
test
loop
insl
dec
ljmp
insb
and
out
pop
xchg
add
pop
ret
clc
fists
in
outsb
mov
mov
les
xor
inc
mov
sbb
imul
fldenv
je
jnp
popa
rclb
leave
arpl
sub
loope
mov
sub
mov
sahf
outsb
iret
lret
mov
fwait
jg
pop
dec
jno
out
in
mov
xor
and
pop
inc
in
jg
gs
and
shl
pop
cmp
add
hlt
aaa
sbb
ja
loope
add
js
aaa
aam
sbb
mov
out
neg
jge
pop
loop
gs
xchg
fstl
loop
dec
lcall
roll
cmc
data16
xchg
mov
jbe
push
jle
stc
ror
sbb
scas
jg
lahf
daa
mov
insb
or
movsb
cmp
inc
sub
push
pop
dec
pop
pop
scas
push
push
insb
fidivl
test
pop
in
pop
ror
mov
mov
call
add
dec
movl
and
inc
add
int3
or
fwait
or
pop
push
movsl
fcmovnbe
in
mov
pop
stos
fistpl
sti
test
lahf
rsm
mov
sub
in
fnstcw
ret
dec
andl
adc
jno
ss
and
test
jl
rcrb
out
fsts
mov
mov
movsb
sti
nop
xlat
in
push
push
nop
jb
sti
movsb
push
in
int3
push
xchg
fimull
jmp
adc
xor
jnp
xor
push
or
cmpsl
adc
jb
jmp
cmp
aaa
leave
push
popa
jnp
mov
xchg
dec
mov
mov
filds
dec
push
cmpb
push
xor
sub
mov
mov
pushf
movsl
push
sub
test
lea
pop
mov
adc
sub
or
or
pop
aad
loop
fcos
and
xor
push
xchg
int
loop
xorl
sub
dec
inc
jg
mov
dec
mov
add
xchg
xchg
jo
sub
adc
test
mov
xor
push
in
scas
jae
jnp
sahf
clc
scas
imull
shl
mov
xchg
mov
jge
pop
pop
fisubs
sbb
jae
js
pop
out
mov
pop
aaa
iret
enter
cltd
int3
cmp
loop
rcrl
inc
hlt
push
pop
arpl
test
hlt
push
or
fs
inc
dec
add
test
les
sub
je
ss
clc
pop
popa
ret
nop
xor
mov
outsl
or
xchg
sarl
sub
mov
push
inc
jge
push
pop
lret
insb
jb
push
jnp
es
lahf
lock
data16
rorb
mov
inc
in
pushf
pop
rorb
push
push
lret
cli
popf
cmp
dec
add
xchg
sti
sbbb
cmp
pop
xor
insl
leave
andb
mov
sbb
fisttpll
cmpsl
xchg
mov
in
mov
data16
movb
pop
data16
cld
adc
and
cwtl
out
cwtl
pop
addb
stos
mov
adc
in
bound
addr16
std
inc
fdivrs
fs
out
and
int3
push
mov
mov
jp
bound
mov
insl
lock
mov
clc
rcl
add
mov
pop
mov
add
or
cwtl
popa
lds
hlt
outsb
or
scas
aas
fs
imul
loop
ds
dec
imul
push
aaa
loopne
xchg
fs
push
xlat
dec
xchg
mov
imul
mov
jno
nop
push
and
mov
loop
dec
and
cmp
mov
out
push
aaa
inc
cli
sbb
push
sub
sbb
test
push
adc
and
decb
pop
sbb
inc
out
xchg
bound
jle
clc
mov
cmp
test
mov
xor
aas
cltd
insl
pop
test
daa
lods
inc
in
fsubl
cmpsb
jecxz
mov
ffree
std
inc
jecxz
repz
in
scas
cmp
ficomps
mov
dec
mov
sti
testl
xor
pusha
out
rorb
add
jl
jb
lret
hlt
and
adc
or
add
arpl
xchg
andb
dec
sub
and
pushf
and
repz
dec
fsubrs
sbb
and
push
add
jns
adc
loope
fsubl
cltd
gs
jnp
ds
cltd
fwait
ret
popl
and
cmp
popf
lret
sub
nop
popa
hlt
test
fcoml
and
adcb
cs
push
sete
inc
insb
xchg
test
mov
aad
jns
push
or
sahf
pop
test
pop
jle
jns
ljmp
mov
adc
push
mov
sub
popf
xchg
cwtl
adc
sub
iret
jnp
sbb
aaa
pop
pop
aaa
mov
je
push
rclb
out
js
cmp
sub
and
stos
out
jne
cli
gs
shrd
call
dec
cmp
ja
fbstp
out
lea
push
sbb
xor
loop
popa
mov
cs
std
mov
imul
xor
sti
rol
mov
test
jne
cmp
dec
mov
and
sub
lahf
dec
fcompl
add
add
dec
or
out
nop
mov
nop
cmp
dec
ret
mov
dec
mov
sub
push
lcall
icebp
rclb
ds
into
inc
repnz
push
xchg
movsl
movsb
clc
mov
adc
daa
mov
adc
push
mov
adc
outsl
ljmp
lret
fwait
mov
imulb
push
repnz
mov
aad
mov
cli
push
or
loop
nop
stos
xchg
fcmovnu
ret
dec
jne
pop
bound
pop
dec
xchg
or
les
push
cwtl
dec
inc
xor
or
lahf
jg
push
xchg
rorl
leave
push
loopne
jle
xor
pushf
inc
adc
add
ljmp
pop
cli
je
mov
pop
mov
cltd
adc
or
repz
push
cmp
idivb
sub
shlb
cmp
aaa
int
adc
mov
mov
test
andb
mov
sbb
movsb
fbld
clc
xor
mov
std
or
inc
and
popa
loop
ficoms
push
xor
jg
jp
das
dec
sbb
sub
jo
pop
pop
xor
jmp
out
pop
cmp
xchg
jg
xlat
xor
pop
cmp
in
dec
and
daa
adcb
ja
xor
cmp
aas
sbb
daa
cmp
dec
sbbb
out
xchg
and
fwait
mov
loope
enter
in
les
push
cmp
sti
push
xor
push
mov
shlb
roll
icebp
jo
stc
into
repz
outsb
iret
lcall
xor
ss
inc
dec
xchg
inc
adc
movsl
popa
and
testb
or
jmp
cmpsl
jecxz
mov
mov
sbb
jp
cmpl
jg
add
jp
and
xchg
popf
mov
and
cltd
adc
pop
inc
fs
test
fiadds
mov
cmp
rcl
aas
out
inc
movsb
aam
enter
orl
fwait
test
lods
add
imull
jnp
dec
mov
mov
enter
lcall
int3
and
in
pop
xor
loop
push
sub
fdivp
cmp
jle
insl
les
fcmovb
add
lahf
xchg
fistpl
lods
sbb
shlb
jbe
cmp
dec
mov
jecxz
adc
call
outsl
xor
sbb
stc
sub
mov
add
push
popf
and
dec
arpl
sub
push
cmp
push
jp
clc
insl
jmp
xor
push
mov
push
es
dec
into
add
in
inc
pop
adc
enter
dec
push
xchg
es
xchg
mov
popa
jp
sbb
rorl
and
fs
add
sub
or
push
aad
jp
testb
xor
or
leave
into
cmp
out
adc
and
pop
gs
pop
mov
aaa
in
shl
cmp
nop
mov
lahf
stos
out
sbb
and
sub
sahf
int
jge
pushf
lds
sahf
inc
std
push
cmp
test
xchg
adc
jg
fbld
in
gs
mov
repnz
sbb
nop
mov
rcll
push
jnp
in
testl
faddl
adc
jnp
fs
jo
mov
jle
loop
gs
jne
pusha
xchg
xchg
mov
and
jecxz
call
inc
jecxz
in
cmp
stc
test
sbbl
shl
pop
push
and
mov
jns
jmp
loop
pusha
fsubr
sub
repnz
rcrb
outsl
mov
iret
and
jge
leave
sti
sub
fwait
dec
mov
cmp
icebp
test
insl
sub
inc
pop
pop
outsl
aam
fs
add
cld
jb
jo
cmc
jmp
push
sbb
xchg
inc
test
add
fisttps
mov
loope
and
adc
xchg
testl
iret
in
sub
ja
dec
xchg
decl
sub
push
lock
dec
push
out
loope
mov
jns
mov
inc
leave
test
cltd
das
maxps
push
xchg
in
sbb
outsl
ret
push
sbb
in
adc
fs
push
xor
subl
dec
sbb
or
in
mov
add
aam
adc
aam
into
pushf
cmp
aas
push
nop
and
lods
lret
hlt
push
dec
test
ja
cmp
out
xchg
stc
pop
icebp
jns
mov
int3
daa
nop
scas
jo
sbb
dec
dec
mov
sbb
jnp
js
jecxz
jae
cmp
or
aam
and
rcll
ret
fwait
mov
bound
push
filds
gs
cltd
push
cwtl
stos
gs
cwtl
sbb
xlat
aas
test
sbb
mov
ja
inc
cmp
cmp
sub
lods
mov
xor
movsb
lret
and
inc
add
inc
testb
stos
cmp
push
aaa
xor
dec
mov
pop
cmpsb
inc
and
ds
push
mov
mov
push
jge
sub
add
xchg
xchg
push
sub
xchg
adc
pop
dec
out
pusha
xchg
cmpsl
push
rclb
mov
sbb
in
movsl
cmp
lds
xor
stos
push
aaa
in
pop
add
xor
popf
adc
sbb
xchg
fcoms
test
adc
sbbb
inc
call
jbe
and
test
mov
iret
or
jmp
pushf
jmp
mov
pop
shl
jecxz
lret
adc
cwtl
xor
dec
int
shrb
dec
sub
xor
cli
lods
in
int
pop
leave
aaa
jbe
fbld
inc
fsubl
sub
inc
lock
xchg
adc
cld
mov
pop
jnp
cmc
sbb
sub
std
xchg
mov
adc
shrb
inc
push
cs
pop
shlb
jo
into
sub
faddl
lods
das
push
test
jb
cwtd
daa
pushf
cmp
xlat
movsb
cmp
andb
push
cmp
repnz
sarb
mov
sti
and
pushw
mov
xchg
jbe
mov
jl
lods
sub
fs
mov
xchg
cmc
hlt
pop
cli
mov
jge
insb
test
in
inc
mov
ret
and
aas
xchg
xor
adc
pushf
loopne
andb
fists
sbb
test
push
cld
sub
pop
or
push
int3
das
movsb
lret
mov
add
lcall
xor
enter
into
out
cmpl
int
jno
inc
mov
repz
notb
hlt
es
mov
in
jmp
mov
adc
adc
sar
cmpsl
or
inc
mov
dec
mov
xchg
xor
jge
out
push
movsl
mov
ficoml
cmc
gs
adc
cmovns
dec
scas
lcall
xchg
repnz
out
ret
xor
xor
jmp
js
adc
cmp
mov
mov
loope
sbb
mov
fldenv
movsl
dec
sub
inc
jmp
jg
testb
insb
daa
hlt
mov
pushf
or
daa
inc
push
shll
sub
adc
les
repnz
ret
adc
mov
sarl
push
loopne
xchg
dec
jnp
mov
and
int3
addr16
imul
cmp
ret
push
ret
mov
mov
sub
scas
mov
or
xor
stos
lods
inc
std
or
mov
dec
jno
bound
push
xor
mov
scas
jne
arpl
das
mov
por
jbe
mov
add
hlt
xorl
in
xor
dec
or
pop
ljmp
loopne
stos
and
lds
xchg
sub
mov
xchg
aaa
outsl
xchg
and
addb
rclb
pop
stos
and
daa
jle
lods
mov
iret
imul
mov
stc
std
jns
in
iret
popl
popf
xor
xchg
sbb
jmp
out
adc
test
pop
mov
xchg
mov
shll
cmpsb
jns
add
sub
shrl
adc
mov
mov
push
pop
push
push
lcall
add
clc
fnstsw
inc
fwait
add
fmull
imul
mov
cmp
xchg
dec
shlb
cld
icebp
je
fistl
repz
in
and
fwait
aas
dec
insl
insb
jnp
sbb
jbe
sbb
stc
xchg
popa
sbb
dec
fs
jns
sbb
fdivrl
arpl
sub
fldcw
addr16
lahf
mov
sti
iret
xchg
aaa
push
ret
push
inc
imul
gs
fchs
ds
jne
fstpt
push
insb
xor
jbe
mov
shrl
out
loope
sub
ljmp
nop
or
mov
or
jle
testb
fimull
dec
adc
subb
popf
icebp
movsb
xchg
int3
or
sub
push
push
daa
setns
lret
aad
sub
outsb
jp
test
jecxz
test
cmpsb
outsb
mov
xlat
pop
je
out
dec
and
sahf
push
stc
xchg
imul
inc
dec
cmp
adc
xor
stc
ret
and
call
push
enter
into
xor
or
or
es
sub
mov
shl
insl
lods
adc
addl
cmp
xchg
mov
sahf
sti
mov
jb
xchg
arpl
daa
mov
mov
cmp
cmp
shr
jae
leave
pop
pushf
mov
dec
imul
ret
mov
add
mov
std
in
jle
punpckhwd
cmp
adc
stos
out
inc
loop
push
imul
dec
mov
inc
fisttpll
sbb
sbb
addb
pop
adc
mov
sbb
jno
sbb
fisubrs
cld
addr16
lods
popf
fmul
inc
add
fprem1
dec
cld
jle
add
mov
cwtl
mov
mov
movlps
js
adc
cmpb
xchg
nop
rorb
insb
sub
out
sti
fld
inc
sub
adc
jmp
das
in
mov
ds
cmp
insl
cmp
or
xchg
jecxz
mov
adc
mov
dec
push
inc
push
test
arpl
call
outsb
mov
sbb
ficoms
mov
pop
fnsave
dec
inc
icebp
lods
fldl
and
sub
call
repnz
mov
ret
cmp
fs
rcrl
or
mov
aas
fsts
sub
js
mov
inc
push
pop
sub
sbb
imul
jecxz
mov
cmpsb
push
pop
push
out
inc
sub
xor
jnp
xorb
ss
in
push
popa
cmpsl
cmpsl
dec
pop
ljmp
fbstp
enter
xchg
adc
xorl
jne
outsb
aad
out
lods
jl
decl
xchg
imul
insl
mov
push
repz
or
stos
dec
jmp
nop
cmp
int3
and
adc
sbb
scas
shrl
testl
or
pushf
sub
add
fnstcw
jp
in
cmp
lret
mov
sbb
pop
xor
push
mull
pop
mov
shll
push
push
dec
je
add
adc
inc
mull
lods
fs
das
scas
cmp
mov
or
or
movsl
bswap
sbb
xor
mov
aam
stc
sti
arpl
mov
cmpsl
push
adc
jl
xchg
out
xchg
push
xor
fimull
xor
loop
push
aaa
and
dec
fcomp
fwait
mov
idivl
aas
mov
xchg
decl
jmp
pop
subb
xchg
in
movsb
lret
jp
cltd
dec
repnz
adc
insb
or
jle
sub
addb
cmp
mov
stc
mov
pushf
cwtl
ss
xchg
ss
or
xchg
xchg
pop
push
imul
dec
fxch
cmpsl
or
jp
les
mov
cs
sahf
add
mov
xchg
pop
mov
in
jns
fists
push
jp
lea
jb
pusha
lret
cmp
sbb
out
mov
lock
inc
xor
stos
test
cwtl
fdivr
jbe
ret
shlb
push
inc
in
jno
jno
xchg
call
cmp
fildl
jns
add
fstps
add
jmp
pop
or
xor
inc
pop
lock
jne
mov
ret
sbb
add
stc
adc
dec
aam
gs
icebp
lods
mov
outsb
push
js
popa
orl
lcall
cmp
out
push
dec
xor
int3
orps
push
jle
stos
mov
mov
sub
cli
jb
mov
out
popa
rcrl
sbb
jb,pt
sbb
xor
test
stos
cmp
cli
test
popf
inc
push
xlat
pop
sub
xor
push
cs
sbb
dec
sub
gs
dec
fistl
add
test
dec
cs
mov
js
mov
push
data16
dec
xor
adc
out
or
push
mov
mov
js
jecxz
push
fadd
sub
out
daa
scas
adc
cmp
fisubl
push
cmp
in
and
lods
push
pop
xor
imul
jmp
fistps
pop
subb
inc
into
mov
inc
jns
pop
in
xor
andl
test
dec
pushf
subb
lcall
ret
mov
inc
out
jbe
test
jmp
std
lahf
mov
aaa
aad
xor
jnp
pop
enter
xchg
std
jnp
sub
test
mov
cmp
icebp
and
loopne
xor
sub
mov
aaa
lret
js
in
loopne
xchg
repz
sarb
push
outsb
icebp
dec
and
add
gs
mov
add
ss
pop
es
call
stos
xchg
and
jg
or
jne
mov
xor
xor
outsb
stos
imul
call
aas
addr16
dec
imul
aad
and
jb
daa
jg
iret
dec
mov
adc
test
pushf
enter
sub
add
jg
mov
or
add
stos
push
inc
cmp
cmc
jg
xor
imul
cmc
mov
insb
cmp
mov
in
mov
popf
jo
jbe
ret
jl
mov
popf
or
jne
push
sub
dec
jns
inc
pop
in
dec
sbbl
mov
fnstenv
pop
adc
xchg
and
jle,pn
mov
les
or
sbb
jne
push
repz
in
add
in
pusha
push
dec
mov
daa
out
imul
or
sbb
scas
sahf
out
mov
dec
les
int3
mov
inc
dec
out
ret
mov
stc
pop
sbb
mov
or
faddl
pop
add
adc
mov
mov
xchg
or
adc
jmp
lock
fidivrl
popa
sbb
jp
push
roll
iret
add
adc
push
jae
mov
xlat
fisttps
mov
push
fistpll
in
and
dec
cmpsl
dec
jp
sbb
pop
cltd
nop
out
push
push
aam
fidivl
fimuls
sub
mov
pop
shlb
iret
add
stos
jmp
imul
js
xor
xor
pushf
les
loopne
jno
aaa
sbb
lret
cmp
push
xor
mov
cmpsb
sbb
dec
leave
push
pop
cli
fldt
and
push
rclb
imul
lahf
lods
shrl
popf
mov
jo
cmpsb
lret
xorl
daa
push
mov
test
add
pop
sbb
mov
lahf
inc
loop
inc
shll
sub
mov
jae
or
and
rolb
mov
test
jo
sub
aas
jae
xchg
or
jmp
inc
lret
cmc
mov
dec
in
push
out
adc
outsb
push
jne
rolb
cmp
lret
xchg
xor
lret
mov
popf
out
jno
inc
ret
jbe
jno
jns
jne
sarl
out
dec
lods
xchg
mov
stos
sbb
mov
js
jp
inc
and
jle
dec
repnz
dec
cwtl
jg
out
sbb
pop
je
push
ret
push
insb
mov
mov
push
mov
jge
mov
je
idivl
adc
mov
sub
int3
cmc
dec
movl
adc
jae
cmp
sti
sbb
fnstcw
sbb
cmp
inc
push
stos
xor
dec
int3
ja
ffreep
fsubl
mov
scas
fdivr
iret
sub
clc
mov
inc
jmp
shrl
mov
sbb
out
dec
in
in
sbb
lods
push
ret
jg
repz
jb
aaa
out
cmp
sub
pop
adc
scas
scas
cmp
sbb
or
lret
jmp
fstl
sub
xchg
jno
and
adc
cltd
push
cli
jmp
mov
cltd
arpl
dec
xlat
cmp
add
lcall
dec
inc
dec
insb
pop
sbb
adcb
sahf
cs
fbstp
sub
and
hlt
xchg
scas
sub
adcl
in
pop
sub
adc
fs
cs
scas
outsb
popf
cs
jae
pusha
icebp
mov
sub
inc
jecxz
xchg
lds
add
jns
jle
lret
int3
sub
adc
or
push
add
sbb
jmp
push
dec
clc
pminub
jge
xchg
negb
call
icebp
enter
je
push
xchg
inc
add
loope
mov
fsubs
mov
or
movlps
mov
sub
test
loopne
add
xchg
sbb
out
xor
lahf
xchg
dec
jl
orl
jne
ret
mov
inc
loopne
imul
call
testl
imul
cmp
sbb
add
adc
rcrb
jnp
mov
fdivr
add
mov
fwait
inc
xorb
add
repz
leave
xchg
jb
in
adc
push
das
mov
jp
lds
sbb
movsb
movl
add
mov
xor
jmp
sbb
ficoml
jb
dec
and
pop
mov
fiadds
repz
cmp
cmc
dec
adc
mov
dec
mov
dec
add
data16
stc
cmpl
adc
out
jge
mov
shrb
mov
mov
ror
xor
mov
test
mov
in
sbb
fmuls
fwait
and
sub
cmp
ss
sbb
mov
cmp
lods
pop
cmp
or
mov
push
jl
cs
add
inc
mov
fcmovbe
rolb
gs
xor
xchg
mov
cld
aam
pop
pop
sar
or
dec
stos
and
movsb
mov
mov
sbb
sbb
push
je
aas
cmp
mov
mov
add
push
popf
lock
sarb
and
iret
jbe
jmp
mov
je
adc
pop
add
int
sub
icebp
pop
adc
test
orb
subl
int3
cmpsb
mov
daa
adc
xor
add
popf
ret
ja
sbb
mov
outsb
imull
mov
out
mov
mov
mov
shll
clc
data16
dec
cmp
inc
imul
sar
lret
xor
loopne
add
pop
pop
das
pop
roll
hlt
jl
xchg
leave
stos
mov
out
push
pop
sub
inc
mov
lret
pop
sub
nop
test
sub
sbb
add
pop
outsl
out
mov
and
cmp
add
jmp
sub
sub
daa
pop
js
movl
cld
jmp
dec
dec
cli
jl
jne
ds
das
es
andb
add
loop
dec
lret
inc
and
fnstcw
and
mov
dec
repnz
inc
cmp
inc
dec
hlt
pop
imul
ja
xchg
pop
add
jae
xlat
mov
aaa
ja
test
in
xchg
inc
sub
iret
jb
sbb
jmp
dec
fwait
xchg
gs
std
push
jae
dec
mov
adc
push
cld
clc
pushl
xchg
mov
or
pusha
daa
pushf
push
inc
pop
lock
jns
and
mov
ds
andl
or
fcmovnb
inc
sahf
jns
in
mov
sahf
cmp
xor
lcall
in
sub
mov
and
mov
mov
fisubs
xchg
leave
out
pop
lret
mov
mov
push
arpl
push
mov
push
jae
fdivs
ljmp
es
sub
js
pop
popa
sub
je
adc
fmul
enter
sbb
sti
pop
sub
ja
fwait
or
dec
add
jecxz
xchg
ss
loop
xchg
cmp
push
leave
es
jg
psraw
aad
stos
or
sbb
fsubrs
and
jle
sub
leave
and
es
fnstsw
fistl
mov
ret
loope
stos
sti
push
push
cmp
xchg
stos
pusha
push
push
icebp
icebp
decl
adc
lcall
xorb
je
cld
cmp
add
push
pop
xchg
push
or
fldt
adc
ljmp
mov
cli
mov
cwtl
clc
pop
imul
cmpl
pop
stos
inc
mov
sbbb
test
pop
xchg
sub
repnz
jg
outsl
movsb
imul
xchg
mov
jae
mov
mov
popa
pop
inc
cld
sub
call
mov
filds
xor
adc
pushf
or
xchg
fidivs
leave
pop
into
scas
adc
in
jnp
push
push
dec
jne
inc
pop
mov
shlb
xlat
inc
push
pop
in
daa
mov
or
cmp
dec
dec
cltd
sbb
jge
mov
jmp
jne
popf
xchg
cmc
push
xchg
in
bound
sbb
push
es
out
in
lret
adc
mov
shrb
jg
mov
js
scas
imul
dec
fdivrs
dec
push
xor
notb
leave
or
adc
sub
mov
js
je
pop
rorb
xlat
adc
jno
push
jecxz
scas
sarl
or
adc
clc
in
push
push
mov
or
sub
int
or
add
mov
jmp
in
pop
push
or
xchg
inc
loopne
fsub
mov
cmp
lret
cmp
mov
mov
jne
xchg
and
adc
not
fistps
dec
mov
in
jge
adc
loopne
mov
sbb
mov
emms
adc
hlt
adc
aas
clc
gs
and
pop
fwait
ss
dec
scas
jbe
mov
pop
and
jae
dec
adc
rcrb
jle
inc
cli
xor
js
push
push
in
outsb
out
orl
add
insl
sbb
lods
cmpsb
sbb
clc
in
adc
mov
push
mov
into
mov
or
mov
mov
arpl
mov
add
sahf
insl
mov
filds
xchg
adc
mov
mov
pop
stos
imul
test
xchg
sbb
pop
enter
mov
mov
sbb
jp
scas
add
ja
push
dec
adc
dec
mov
jp
adc
mov
enter
mov
adc
adc
cltd
fiadds
add
std
icebp
push
or
loope
dec
add
lods
push
es
inc
in
lahf
mov
lods
mov
je
ror
jge
jecxz
inc
in
lret
aad
and
mov
inc
inc
jbe
outsb
add
sbbl
or
mov
cwtl
lock
push
pop
or
leave
jne
inc
testb
or
fs
lret
mov
aad
add
dec
add
out
xor
push
xchg
sahf
daa
xor
lods
icebp
dec
xor
into
mov
int3
mov
out
lcall
sbb
lods
and
sbb
xor
cmp
insl
mov
jno
or
pop
call
mov
mov
imul
sti
fwait
adc
arpl
shlb
inc
push
pop
sar
cmpsb
and
int
lods
imull
xor
or
xchg
movsb
dec
push
orl
flds
les
mov
mov
mov
adc
xlat
gs
stc
in
xchg
mov
mov
pop
mov
jg
and
dec
mov
pusha
mov
rcrb
int3
sbb
ret
mov
ror
adc
into
lock
jmp
mov
jp
or
add
inc
cld
ficompl
pop
js
pop
lods
and
or
pop
jp
xchg
sub
sarl
subb
loope
inc
jmp
sti
inc
in
aad
insb
test
add
loope
bound
icebp
adc
in
sub
or
js
pushf
cmpsl
divb
hlt
mov
movsb
adc
out
push
push
sub
out
pop
imul
andb
js
mov
cmp
inc
adc
jno
outsb
subb
vcvtpd2dq
jnp
xchg
and
int
adc
cmp
push
arpl
mov
sub
out
out
mov
nop
push
xchg
data16
rolb
jmp
sbb
mov
aam
pop
sti
shlb
shr
lods
sbb
jns
xchg
fldl
dec
sub
mov
jnp
fwait
pop
dec
js
cmpsl
hlt
into
cmp
std
xchg
es
pop
movsl
out
pop
ljmp
adc
push
incl
mov
jmp
sub
xorl
pop
cld
mov
insb
sbb
repnz
or
outsl
pushf
jne
cld
adc
adc
aad
or
pop
aam
loope
jg
push
push
add
stc
outsl
pop
or
test
and
test
es
mov
mov
xchg
test
add
mov
mov
xchg
fdivl
xor
adc
mov
pushf
pushf
fnop
imul
or
jns
je
jae
es
fdiv
ret
mov
lds
in
dec
xchg
dec
mov
cmpsb
shll
push
loopne
int3
scas
add
add
rcrl
sbb
pop
lea
ret
jns
push
lods
lock
pop
mov
fwait
sahf
adc
cld
out
add
shlb
cld
ds
and
adc
bound
arpl
xor
loope
notb
xchg
and
popa
jge
push
ja
jno
dec
addl
jge
cwtl
xchg
xor
insl
pop
ds
sub
insl
push
cwtl
sbb
outsb
lret
ffree
jg
les
add
xchg
lea
adcl
mov
xchg
daa
sbb
or
add
dec
sub
daa
jmp
mov
arpl
dec
movb
pop
mov
xor
mov
icebp
imul
aaa
je
sub
jg
inc
sub
stos
xchg
mov
adc
fwait
push
loop
fcmovnu
and
lea
hlt
push
enter
dec
cmp
xor
fucomp
das
xlat
out
loop
lcall
inc
popa
mov
aaa
mov
iret
in
dec
mov
xchg
xor
and
cmc
rcrl
add
mov
loope
repz
pop
call
jp
test
pop
jle
or
in
push
jmp
test
out
pop
dec
movsl
mov
ljmp
sbb
add
xchg
pshufw
xchg
pop
arpl
and
lds
mov
sub
add
mov
cs
push
mov
xchg
cmp
stos
pop
sub
imul
scas
jb
ret
les
andl
jo
movsb
int
push
fistl
sbb
sbb
insb
jne
push
ret
je
cmp
es
imul
add
cli
in
add
or
ret
dec
pop
adc
fwait
mov
sub
jbe
pushf
xor
xchg
mull
cmp
and
insb
inc
jl
pop
mov
xor
stos
xor
xchg
popf
je
neg
sbb
cmp
sahf
sarl
js
dec
jl
add
outsl
mov
and
cli
lret
mov
std
popa
or
lret
cmpsl
cmp
out
or
or
in
or
stos
dec
pop
lcall
push
xor
and
sub
push
outsb
shl
fldt
push
xchg
jne
test
imul
and
loop
dec
xor
mov
dec
lret
mov
push
out
push
cmp
cmp
outsb
cmp
pop
fld
fs
sub
js
xchg
mov
movl
push
imul
dec
dec
push
scas
out
adc
dec
fldt
jp
pusha
fisubl
outsl
or
pop
inc
in
out
stos
ret
test
cmp
mov
test
mov
mov
pop
cmp
sbb
test
out
pop
mov
mov
mov
inc
mov
cwtl
dec
mov
lret
iret
mov
insl
or
jne
add
xchg
mov
arpl
and
lock
jne
jbe
or
aaa
push
icebp
xorb
pushf
stos
jp
aam
clc
test
aas
mov
mov
and
adc
or
rcrl
movsb
mov
add
adc
mov
pushf
mov
mov
push
jg
and
jecxz
mov
or
js
and
lret
adc
cli
aad
fcmovnu
push
inc
inc
adc
shrb
lods
inc
push
ss
test
movsl
mov
insl
iret
fs
cmp
lods
xor
or
dec
xor
xchg
ret
sbb
stc
aaa
or
popf
test
jge
mov
outsb
jl
daa
xchg
repnz
outsb
iret
ja
push
mov
call
add
notl
es
pop
call
leave
je
jp
aam
in
mov
and
dec
das
int3
xchg
mov
arpl
mov
sub
lea
call
inc
pop
in
adc
aad
or
sbb
clc
dec
mov
icebp
mov
cmp
push
xchg
jle
sub
shrb
aad
and
cmpsl
adc
aam
test
pop
and
mov
out
inc
sub
dec
je
cmp
sahf
mov
gs
or
sbb
loop
leave
xchg
cmp
outsl
or
ret
fildll
mov
jnp
ljmp
scas
stos
movsl
rol
xor
out
inc
lret
fisubrs
push
mov
fs
andl
jbe
pop
scas
cmp
out
xor
repnz
xor
sahf
bound
fidivs
incb
inc
ljmp
iret
mov
scas
popa
pop
cmp
lea
mov
inc
adc
jmp
ds
sub
movsl
negl
in
ret
or
cmpsl
pop
js
jmp
stos
insl
jmp
mov
hlt
dec
ficoms
cli
adc
xchg
mov
loop
or
xchg
jecxz
mov
icebp
test
imul
add
out
jecxz
popa
jno
clc
shr
jne
jb
jle
xchg
jbe
repz
mov
jge
enter
push
inc
and
rorb
xor
daa
mov
sbb
jnp
mov
shll
iret
add
mov
xor
testl
and
xchg
in
cmp
bound
mov
pop
cmpsb
mov
in
xor
ljmp
dec
mov
fldenv
arpl
sbb
xchg
xchg
aas
mov
bound
stc
int3
lahf
popa
push
push
bound
fldl
icebp
dec
mov
popf
jbe
int3
mov
cmp
inc
fs
pop
sarl
lcall
ret
mov
xchg
sahf
push
xorl
mov
loop
or
pushf
pop
lock
pop
adc
mov
push
adc
bound
inc
sti
rcll
nop
push
xchg
or
mov
pop
clc
jb
nop
cwtl
out
daa
iret
rol
cltd
cmp
das
pop
shlb
pop
test
mov
push
test
dec
sbb
aam
mov
push
jnp
imul
dec
fs
lret
inc
xlat
mov
rcrl
or
mov
or
jg
pusha
or
xor
imul
popf
or
adc
outsb
xor
xor
imulb
scas
push
adc
into
mov
jbe
add
mov
repz
jg
lahf
getsec
dec
sub
sub
cmp
stc
jmp
psrlq
push
jmp
jo
xlat
and
xor
xchg
sbb
pop
in
cmp
cmp
and
sets
mov
sti
push
fcomps
test
mov
sbb
cli
leave
fimuls
mov
mov
icebp
lahf
inc
mov
push
pop
add
mov
push
mov
iret
mov
cmc
pushf
out
or
cmp
insb
adc
aam
jno
jae
mov
divb
cwtl
insl
mov
pop
dec
cltd
inc
xchg
fcmovnb
jecxz
pop
mov
in
hlt
mov
fwait
lods
fistpl
cmp
lods
lods
dec
shlb
and
jno
ds
mov
sub
jns
sbb
xchg
dec
mov
xchg
cmp
or
push
icebp
icebp
iret
nop
xchg
jbe
mov
sti
or
fdivp
push
dec
sbb
mov
in
jo
into
or
imul
sub
push
sub
out
push
movsb
into
adc
add
hlt
pop
nop
pop
int
inc
jbe
orl
repnz
inc
or
stos
lods
rcrb
add
and
in
and
fsubrl
aas
scas
adcl
mov
imul
stc
push
cltd
cwtl
cmp
rorl
jl
dec
daa
mov
in
int
add
out
inc
fcoml
in
call
jge
mov
call
aaa
mov
dec
jmp
push
push
push
xchg
lcall
mov
enter
or
cmp
sbb
lret
cmp
and
adc
mov
in
pusha
repnz
in
insl
jmp
mov
inc
adc
lret
inc
add
sub
lret
mov
nop
sub
mov
xchg
call
repz
push
andb
push
das
pop
inc
add
enter
sahf
cwtl
add
mov
daa
pop
ret
testl
sbb
push
lds
jecxz
jecxz
aas
movsb
adc
xor
ret
je
inc
xchg
mov
sub
xchg
int
add
adc
mov
pop
sub
and
fcmove
dec
rorl
xchg
jne
jno
lahf
jl
rclb
out
mov
movsb
add
and
cmp
sbb
adc
das
add
xchg
mov
lds
addr16
outsb
sub
addr16
or
lahf
ret
addb
sub
mov
xor
push
dec
push
dec
dec
or
push
xchg
xchg
ret
pop
xchg
mov
lea
mov
dec
xlat
xor
jmp
test
lds
rorb
and
mov
ficompl
xlat
xchg
icebp
movsl
mov
cmp
aam
mov
and
jnp
arpl
cmc
jg
subl
adc
stc
scas
shll
adc
loop
lods
xor
cmp
adc
adc
push
shlb
jecxz
mulb
out
pop
sarl
ret
rcrb
test
inc
daa
rcrl
loopne
inc
dec
inc
nop
addl
mov
cmp
dec
scas
fisubrl
out
adc
sub
dec
mov
add
or
mov
inc
shr
movsb
in
add
lds
dec
cmp
xor
call
mov
pop
stos
test
inc
sbb
xchg
add
push
push
sbb
idivb
cli
popf
sbb
gs
sti
dec
fwait
test
or
enter
adc
jp
jb
rcll
fwait
iret
bound
fincstp
addl
dec
out
jbe
mov
xor
iret
adc
into
scas
sub
shlb
dec
mov
mov
mov
xchg
inc
inc
sub
imul
fisttps
lds
jns
ljmp
je
nop
cmp
das
xchg
xchg
jg
push
fsin
fsubl
sub
push
xor
inc
in
pop
xchg
mov
ss
jmp
out
into
ret
inc
popf
aaa
shl
pop
call
das
dec
add
test
mov
pop
and
pop
ds
sbb
cmpsb
inc
lea
mov
sbb
pop
and
sbbb
cmpb
loope
xor
inc
insb
movsl
dec
pop
pop
lret
or
adc
xor
aaa
pop
xor
mov
jne
mov
pop
fiaddl
aad
dec
data16
sbb
vxorpd
fmull
insl
adc
dec
popf
mov
fisubrs
xchg
andb
adc
xchg
xchg
jae
ljmp
clc
lret
fcmovnu
fiadds
ds
add
inc
mov
imul
lock
jb
add
inc
xorb
cmp
mov
sub
sahf
mov
cmp
add
lods
loopne
mov
xchg
in
cmp
mov
testl
out
fldt
xchg
add
in
sbbb
push
test
adc
js
sub
jbe
inc
mov
test
jns
sub
and
das
test
push
and
es
lds
or
mov
ret
pop
adc
push
cs
jbe
je
and
push
repz
movsl
je
jae
paddd
daa
sub
mov
and
add
jnp
in
xchg
nop
lcall
jle
loope
sbb
push
pop
es
mov
jnp
fadds
int3
fsubrs
push
jnp
xchg
pop
xchg
xchg
pop
in
mov
adc
dec
push
mov
sbb
or
cmpsl
mov
fs
push
cmp
addr16
scas
mov
push
inc
cmpsl
aam
outsb
outsb
lret
pop
adc
in
add
adc
mov
mov
shrb
std
pop
xchg
arpl
ja
lock
push
jg
movsb
adc
shlb
test
sbb
sub
pop
pop
dec
insl
lret
aam
push
push
xchg
cmc
lret
orb
push
mov
dec
cmp
push
repz
insl
xchg
pop
stos
push
movsl
jle
out
xchg
pop
dec
xchg
sbb
in
aam
icebp
mov
test
pop
lcall
adcb
xchg
mov
add
sbb
hlt
bound
push
stos
sbb
jle
mov
and
sahf
movsb
iret
sub
inc
in
stos
inc
inc
lret
sub
out
aam
sub
cmp
or
xchg
mov
iret
mov
testl
xor
mov
pop
mov
mov
in
sbb
outsl
mov
push
pop
sub
xchg
push
push
jmp
xchg
mov
push
pop
pop
xchg
aas
mov
insl
imul
add
dec
cmp
jp
ss
mov
mov
mov
in
test
and
adc
mov
or
adc
lods
jge
scas
loopne
mov
mov
xchg
out
leave
xor
xchg
repz
nop
iret
cld
push
sub
and
nop
adc
pop
push
out
cmp
push
sarl
out
cmp
int
mov
fistps
sub
sbb
ds
popa
in
cmp
add
and
cmp
jb
sbb
xchg
sub
hlt
pop
sub
lahf
sbb
and
dec
movsb
lock
mov
push
rcrb
pop
addr16
xor
xchg
and
xchg
call
in
cltd
or
cli
dec
ret
ljmp
inc
test
daa
dec
sub
das
outsl
dec
addl
mov
adc
mov
lock
mulb
fwait
cmpl
in
cmp
xor
sbb
adc
xor
shrl
mov
xchg
push
lods
jp
xchg
subb
and
loopne
in
call
ret
sahf
ja
into
pextrw
xor
adc
ja
lahf
arpl
test
xor
fildl
bnd
fwait
in
cmp
ficomps
lea
push
in
test
repz
scas
mov
fistpll
xchg
gs
hlt
jo
ret
add
pop
movsl
inc
push
or
loope,pt
pop
je
int
mov
xor
lods
push
jne
cs
mov
addr16
dec
test
cmc
mov
xchg
aaa
pop
push
sub
sarb
adc
xchg
pusha
sbb
out
cmp
lret
push
push
mov
mov
aad
andl
xlat
mov
xor
cmp
adc
mov
call
xor
mov
loop
andb
pop
xor
or
push
test
dec
lods
sbb
xor
aas
jae
popa
rcll
scas
cmpl
lret
subb
fwait
loopne
sbb
dec
mov
aaa
or
mov
push
shl
int
negl
inc
cmp
inc
dec
cmp
cmp
adc
nop
pop
scas
cmc
pop
sbb
jb
out
sub
dec
xor
lcall
dec
mov
cmc
pop
push
mov
imul
add
mov
cmpsb
popf
xor
fldenv
fs
vmovaps
adc
std
push
mov
inc
jecxz
dec
gs
clc
rorl
in
in
std
loop
lods
ss
push
xor
add
addr16
xor
dec
pushl
and
int3
ret
sub
clc
outsb
mov
cs
and
aas
subb
leave
shlb
adc
jge
jecxz
inc
cwtl
xchg
out
mov
addb
ds
clc
fisubrs
push
pushf
cmp
jg
movsb
ds
xor
sahf
pop
or
faddl
jbe
and
and
imul
je
xchg
xchg
les
sahf
clc
enter
aam
pushf
in
mov
addr16
adc
inc
cld
aam
xor
push
loopne
mov
xchg
cmc
add
leave
rorb
daa
ljmp
pop
pop
inc
rorb
mov
and
mov
aad
jp
or
addr16
push
lock
xor
jnp
adc
add
jecxz
sahf
inc
mov
inc
test
imul
or
movsb
or
sti
sbb
imul
mov
dec
cmpb
or
push
xchg
pop
movsb
icebp
aas
xchg
or
imul
test
xchg
stc
das
mov
testl
cmp
movsl
cltd
xchg
xchg
mov
cld
data16
testb
ret
mov
jo
faddl
aam
and
adc
pop
in
sbb
mov
and
or
out
addr16
dec
or
pop
mov
arpl
cmpsb
xor
popa
jecxz
add
lahf
std
leave
fcmove
pop
jecxz
pop
fs
inc
push
stc
add
mov
in
xor
dec
scas
inc
fcompl
sbb
rorl
pop
lods
push
adc
add
mov
and
orb
lock
jecxz
push
jge
fdivrs
sbb
lock
jge
xchg
stos
adc
out
jle
cmp
cmp
xlat
in
xchg
push
fld
mov
imul
sub
enter
push
ficomps
std
pop
sti
decb
pushf
jae
jns
cmp
xchg
and
sbb
outsb
push
nop
and
mov
and
jnp
in
ja
mov
sbb
push
cld
push
mov
mov
call
rcr
in
xchg
aad
addr16
mov
and
jns
jbe
xchg
gs
addl
sub
lea
mov
sahf
lods
cmp
rorb
je
lods
out
call
and
imul
das
sbb
jl
mov
lea
lock
loope
ficompl
and
idivb
jbe
cmpsl
ror
xor
inc
out
mov
xor
jnp
daa
lea
inc
cmpsl
mov
adc
ret
jl
mov
mov
jnp
fldt
sbb
loopne
lcall
cmp
ficomps
jnp
nop
or
mov
sbbl
js
mov
aaa
mov
in
jno
xchg
push
and
xor
inc
or
mov
add
pushf
mov
aad
add
loopne
xor
repz
and
fcmovnu
iret
inc
test
iret
cmpsl
xchg
jae
jg
cmp
sbb
cli
jb
mov
pop
icebp
bound
mov
add
in
fsubrl
jns
hlt
pop
mov
ss
dec
add
bound
inc
adc
jnp,pn
aad
sbbl
js
fidivs
mulb
ljmp
sbb
subl
or
mov
loopne
mov
and
popf
lds
movsl
mov
inc
subb
or
mov
lret
int
inc
inc
outsl
jno
lods
xchg
sbb
fwait
aas
cmp
inc
mov
dec
lcall
pop
das
shrl
dec
cwtl
xor
adc
pop
scas
cwtl
push
fnstenv
fcom
aad
movsb
adc
out
insb
stc
mov
cmp
ret
inc
lcall
push
cmpsb
pop
xchg
xlat
cmp
sub
popf
insb
xlat
ret
xchg
mov
std
repnz
jb
fisubs
cmp
stos
fdivl
jne
dec
push
sub
cmp
xchg
cli
out
jmp
imulb
and
inc
jae
add
leave
xchg
jl
inc
add
or
push
shlb
pop
daa
sub
xor
push
outsl
movsl
pushf
jno
test
int3
jmp
lea
pop
pop
fdivl
hlt
out
repz
std
pop
fildll
mov
in
add
ret
in
and
icebp
fwait
in
xor
repnz
sbb
push
rcll
test
inc
mov
push
add
dec
rcrb
in
mov
or
adc
cmp
jp
dec
fnstcw
dec
mov
cmpsl
sarl
pop
jge
pusha
inc
ret
jge
mov
or
jmp
pushf
cmpsb
and
xor
gs
rorl
xor
lahf
ret
jnp
cmc
dec
scas
pop
movsl
and
sub
in
enter
sbb
jp
in
cld
popa
adc
sarb
jnp
mov
rclb
rcll
mov
jp
cmp
outsl
mov
jmp
sbb
dec
jp
loope
push
dec
push
add
leave
jae
pop
movsb
cwtl
test
cwtl
cmp
mov
subb
lret
fnstsw
call
fs
addr16
imul
pushl
sub
popf
dec
xor
pop
cmc
jno
sti
sbb
out
pop
jb
insb
add
lds
test
fscale
das
daa
cmp
in
cmpsb
or
add
jge
std
push
dec
push
addr16
imul
in
cmp
in
gs
cs
sub
lock
mov
xor
shlb
jg
sbb
leave
in
cwtl
lea
popf
jl
daa
dec
sub
push
rolb
repz
dec
aam
jg
xchg
frstor
pop
sub
test
stos
adc
icebp
sarb
dec
sbb
daa
xchg
push
cwtl
call
dec
ja
aam
clc
jp
ret
add
lods
cld
outsb
xchg
inc
popa
cmpsl
add
hlt
pop
inc
xchg
jnp
jl
fdiv
subb
cmpsl
sti
push
mov
mov
es
das
push
pop
in
mov
fbld
xchg
jmp
jnp
add
test
stc
fucomi
and
enter
or
mov
adc
xchg
std
leave
test
mov
test
dec
fiaddl
push
insl
inc
pop
dec
add
and
rol
jnp
pop
idivb
inc
pop
push
xchg
or
mov
adc
sub
jae
sbbb
jne
ret
ficoml
adc
insl
shlb
scas
fistl
pusha
inc
inc
out
inc
shll
dec
repnz
xlat
or
jnp
dec
ficoms
jbe
mov
mov
addr16
push
cmc
outsb
pop
loopne
or
and
cmp
aaa
aaa
leave
outsb
pop
jl
cltd
jnp
scas
mov
mov
sahf
hlt
pusha
jmp
insb
imul
icebp
add
or
bound
das
lock
pusha
pop
xlat
ss
inc
ret
hlt
sub
dec
adc
hlt
or
fimull
and
xchg
aaa
sbb
xchg
shl
fiaddl
sbb
push
ret
sub
decl
push
jae
into
jnp
mov
das
dec
xchg
repnz
dec
cli
add
sbb
jno
mov
jl
insb
orl
or
test
cmpsl
sub
jecxz
rolb
adc
sahf
cmp
xor
jecxz
mov
std
test
or
scas
push
sub
fcmovnb
xlat
addr16
push
xor
jecxz
mov
in
xchg
sub
lret
sub
lock
cmp
std
and
adc
push
xor
imull
test
inc
mov
push
das
pushf
aam
jge
sub
sbbl
in
fwait
mov
stc
jae,pn
mov
push
cmpl
adc
xor
mov
std
xor
jge
lea
sub
shlb
or
or
fistpll
ret
inc
jp
sub
movsl
mov
inc
xchg
inc
outsl
ss
ss
lahf
lcall
repnz
and
and
or
imul
iret
sbb
int
sahf
sbb
mov
test
scas
or
push
mov
incl
sbb
mov
xor
xor
mov
lahf
xchg
mov
icebp
fimull
jecxz
stos
or
popf
fstpt
and
lret
enter
mov
or
xchg
repnz
das
scas
dec
lods
jmp
test
cwtl
inc
jmp
pushf
push
and
bound
out
movsl
icebp
in
jo
sti
push
cmc
lds
hlt
or
ja
pop
mov
or
andl
xchg
xlat
addr16
or
add
mov
sbbl
in
add
outsl
lods
sbb
ss
test
lret
jmp
scas
pushf
and
pusha
push
ds
mov
div
and
pop
test
inc
pop
repz
pop
inc
and
test
inc
xlat
push
sub
rep
sub
ret
movsb
inc
mov
movsl
sahf
cmp
ror
mov
int
sub
repz
in
nop
cli
add
fistpl
fcomps
lret
out
int
clc
sub
dec
fldenv
inc
insb
adcl
adc
dec
xor
in
adc
mov
divb
or
cmp
jnp
cmpsl
iret
jae
cltd
sbb
cmp
sarl
or
test
add
dec
cs
idivb
je
loop
call
movl
add
inc
jmp
xchg
dec
mov
adc
shlb
lret
mov
jmp
lret
icebp
inc
lcall
lods
inc
stc
dec
arpl
stos
enter
adc
or
add
insb
push
fwait
ljmp
or
popa
xor
les
repz
icebp
xchg
les
sub
push
push
cmp
incl
scas
xor
mov
je
mov
int
sahf
dec
es
add
call
adc
sbb
sub
or
fistl
lgs
clc
cmpsb
adc
lret
dec
icebp
adc
jecxz
ljmp
jns
mov
push
jp
or
adc
insb
push
in
jb
mov
mov
xchg
movsb
clc
out
pop
sbb
dec
call
loopne
mov
jl
mov
push
inc
add
or
rclb
mov
sbb
inc
and
push
pop
pop
fldenv
aad
outsb
repnz
cwtl
js
cld
icebp
cmpsl
rep
jmp
aas
ret
push
and
gs
out
mov
pop
int3
push
or
sbb
outsl
xchg
pop
or
cmc
cmpsl
sahf
mov
pop
push
roll
mov
or
adc
mov
cmp
lock
inc
testl
test
addl
test
xchg
leave
test
jne
rcrb
shlb
loopne
xchg
sub
das
bound
pushf
call
shlb
mulb
ds
add
or
in
push
mov
sahf
lods
fst
popf
repnz
movsl
add
scas
push
inc
leave
rcrb
in
jno
mov
mov
popa
sbb
shrb
and
repnz
and
pop
add
addb
jmp
push
stc
dec
inc
mov
jge
lods
xchg
jno
cmpsb
sub
adcl
out
or
pop
insl
rorb
jge
clc
cli
sti
popa
sar
add
mov
jbe
lcall
bound
dec
test
xor
fidivrl
ficomps
jle
frstor
lret
sub
mov
mov
mov
xorl
push
test
pop
mov
or
xchg
ds
add
cmp
fstps
sbbl
dec
adc
or
mov
xchg
rolb
xchg
or
cs
jg
negl
xor
pop
push
jl
iret
mov
jbe
imul
in
jbe
scas
es
setbe
daa
inc
daa
in
out
push
test
pop
push
mov
pop
jg
scas
icebp
jle
xchg
movsl
inc
je
test
lret
int3
negl
shr
or
imul
test
inc
jnp
push
xor
outsl
sbb
push
cmc
arpl
adc
data16
sbb
test
jle
lret
gs
test
negl
push
aam
stos
bound
leave
jnp
pop
mov
dec
fcomip
pop
pop
cmp
call
fidivs
movsb
cmpsb
rorl
inc
push
cwtl
aad
push
lcall
lahf
insb
mov
lods
mov
pop
push
test
cwtl
cmc
imul
jbe
or
out
mov
mov
sub
adc
mov
test
pusha
cs
or
push
hlt
pop
sahf
shrb
popf
lock
cmp
cmc
and
sub
pusha
fimuls
and
lret
and
dec
adc
lock
jl
ret
ret
pop
sti
push
test
jmp
clc
mov
xor
adc
jae
jp
ljmp
cmp
mov
imul
jno
insl
sbb
lds
repz
loopne
push
xchg
jg
push
lahf
in
jae
inc
mov
clc
das
lret
enter
outsl
popa
add
pop
mov
mov
insl
adc
cmpb
xchg
rcll
sahf
or
lds
ficoms
test
jo
xor
pop
cmc
and
outsb
mov
dec
mov
aad
lods
sahf
xlat
out
xchg
mov
push
icebp
inc
ds
cmp
out
cmpsb
daa
das
cmp
push
jo
repnz
fadd
mov
pop
dec
in
mov
lock
mov
jg
repz
das
fsubrl
pop
in
xchg
out
ficomps
adc
lret
dec
out
xchg
push
out
fiadds
fsub
xor
sarb
xchg
call
sub
inc
stc
sub
hlt
sub
push
js
cmpsb
jb
pop
and
aad
adc
arpl
cmc
jge
inc
mov
in
loop
and
sarl
aad
cmp
adc
inc
mov
cmp
xor
inc
lcall
dec
gs
out
rcr
popf
pop
push
sarl
test
sahf
sbb
xlat
cmpsl
mov
add
gs
aad
push
orl
mov
ljmp
loope
addr16
sarb
sbb
sub
sub
inc
mov
cwtl
jl
dec
jl
mov
cwtl
cld
xor
lgs
bound
xchg
sarl
mov
call
sub
xchg
daa
cmp
dec
sbb
inc
jnp
and
inc
push
add
push
sub
fldenv
andb
lea
add
add
mov
int3
fistpll
lret
fsub
sub
insl
rcll
shll
lret
pop
inc
push
push
in
push
cmp
insb
xchg
scas
cmpsb
sbb
popf
mov
iret
std
sbb
in
xor
cmp
sub
enter
in
pop
lock
pop
aas
add
inc
outsb
ret
adc
jp
daa
adc
pop
daa
dec
cmc
testl
loopne
lods
jle
ret
shrb
mov
insl
mov
jne
roll
movd
mov
leave
and
cli
pop
dec
imul
shrb
sub
aad
or
mov
sub
daa
mov
ficoml
sub
cmp
xchg
lods
mov
les
mov
cmp
inc
daa
mov
out
mov
lods
stc
xor
mov
sub
fisttps
daa
mov
pop
cmp
ret
mov
mov
cld
fst
icebp
mov
sub
cltd
call
cmp
movb
mov
jbe
jg
lods
lret
ja
push
loop
cmp
sbb
mov
push
scas
xchg
jg
jl
mov
cltd
cmp
or
jmp
in
and
push
stc
fisttps
sbbb
mov
and
dec
hlt
sub
outsl
inc
jno
and
xchg
les
sub
adc
and
fnstsw
cwtl
dec
loopne
mov
sub
add
inc
dec
sbb
stc
bound
cltd
push
adc
das
stos
invd
lds
add
std
rcr
sbb
negb
sar
push
in
inc
inc
out
dec
jns
sub
push
roll
stos
mov
add
lds
xchg
jne
aad
push
or
lds
add
jl
and
xchg
dec
pushf
gs
je
or
xchg
push
fwait
out
adc
popa
es
jo
test
or
pop
sbb
lock
imul
hlt
push
cmp
orb
push
xchg
mov
inc
xchg
pop
hlt
rcr
or
xchg
ljmp
sbb
adc
jo
loope
scas
aas
movsb
pop
jmp
cltd
imul
inc
adc
bound
aam
int3
pop
cmp
fimuls
or
xchg
ret
mov
loopne
shl
push
pop
jmp
dec
lahf
sbb
sti
inc
popa
xor
mov
mov
lret
lahf
orb
out
xchg
loopne
mov
jecxz
fnstcw
outsl
fbld
in
sub
push
rorb
loopne
or
loopne
out
ds
adc
data16
insl
push
xchg
jbe
out
cld
adc
cwtl
ljmp
cli
jae
imul
fnstcw
mov
push
repz
inc
mov
mov
es
add
jl
cmp
jnp
xchg
imul
ret
in
rolb
inc
or
scas
add
movsl
mov
xor
enter
repnz
shlb
xchg
pop
daa
data16
je
fcmovu
pop
cmp
mov
mov
mov
test
outsb
cmpsb
xlat
out
jno
and
test
popa
and
push
cmp
fisttpll
pop
fdivr
mov
popf
add
xchg
movsb
inc
mov
sub
jns
rcll
test
sub
aaa
in
mov
daa
push
jp
das
mov
mov
cli
cs
les
dec
arpl
scas
and
inc
xchg
fsubrp
add
push
je
jecxz
push
and
repz
xor
xlat
lea
push
mov
jp
lcall
loopne
enter
rcrb
or
aam
lcall
insb
cmp
add
dec
lahf
dec
or
jmp
push
jbe
inc
arpl
outsl
dec
out
xor
fcoms
call
test
out
fs
fmull
cmc
cmp
arpl
push
xlat
jnp
inc
nop
mov
mov
test
mov
rcll
lret
xor
inc
lds
data16
adc
sub
fnstenv
repnz
dec
or
loopne
add
ret
in
mov
jb
pop
jmp
out
and
sub
ficoms
add
xchg
jmp
out
cmpsl
and
pop
lds
jb
ret
add
inc
pop
xchg
mov
adc
jg
imul
popa
ss
popa
mov
cmpsl
outsl
sarl
cmc
fsqrt
and
xor
push
in
xor
daa
and
jo
xor
adc
movsl
mov
je
pop
pop
push
dec
cmp
ds
push
js
in
add
out
call
and
lret
jbe
cmp
jnp
adc
insl
rclb
add
iret
mov
dec
or
out
sub
xor
jecxz
sarb
dec
mov
call
xorb
sub
sti
mov
jmp
test
jno
repnz
outsb
subb
daa
mov
hlt
vpmacswd
inc
xor
repnz
js
xchg
xchg
cs
rcrb
adc
fcoml
nop
outsl
call
mov
pop
call
and
xchg
mov
inc
aad
mov
pop
aas
out
cmc
adc
fxch
mov
xor
gs
jbe
sbb
xchg
mov
cmp
or
xor
fucomi
or
pushf
call
pop
add
bound
and
test
cmp
mov
sahf
inc
push
sbb
addl
xacquire
test
xor
xor
jg
mov
cwtl
leave
jae
mov
ret
das
jle
push
out
sarb
inc
jge
sbb
jae
bnd
mov
or
push
or
inc
test
sarl
cmc
fisubs
sahf
and
mov
mov
cld
adc
lea
jne
imul
dec
jo
and
int3
vcvttsd2si
fisubrs
lods
push
pop
mov
pop
lret
into
sub
or
and
xchg
push
fwait
xor
xchg
xlat
mov
aaa
rorl
push
ss
xor
jne
repnz
mov
daa
pop
mov
add
leave
add
add
pusha
popa
testb
jmp
dec
jb
and
add
mov
mov
in
or
nop
jg
and
fnstcw
pop
mov
daa
push
sbb
mov
sbb
mov
in
and
add
repnz
mov
push
or
xchg
cwtl
sub
dec
mov
mov
addr16
out
xor
out
or
lea
in
sub
xchg
subl
pop
imul
mov
inc
repz
fwait
decl
add
jp
loopne
pop
into
mov
pop
stos
imul
in
jnp
fs
xchg
shl
rcrb
lock
cmp
xor
lret
mov
arpl
test
lds
daa
sub
ds
test
je
mov
scas
add
mov
push
insl
pop
int
sbb
or
mov
xchg
xor
cld
into
shll
shrl
scas
rcrl
xor
mov
xor
bound
rcrl
jo
cmp
and
call
mov
lret
rcrb
push
lock
jae
test
pop
push
ret
cmc
subl
jnp
pop
outsb
jmp
lock
push
rcrb
movsl
dec
mov
and
fisttps
pop
mov
cmpsl
pop
insb
cvtpi2ps
or
cli
aam
cmp
pop
push
repnz
cltd
mov
pop
dec
adc
pop
inc
push
dec
loope
fucom
loope
or
jle
push
pop
mov
sbb
pop
xor
mov
xor
mov
clc
mov
rcrb
jae
popf
fistpl
sub
cmc
enterw
add
jmp
insb
addr16
fstps
stos
cltd
mov
cwtd
imul
dec
orb
je
dec
inc
inc
mov
insb
mov
and
sarl
in
bound
in
cmp
scas
adc
mov
xchg
movsl
es
jno
mov
xchg
lret
mov
push
cmp
nop
xlat
and
adc
sahf
mov
mov
xorb
pop
and
leave
aaa
adc
sub
adc
mov
fdivrp
xlat
sahf
jle
pop
arpl
pop
adc
xor
pushf
aaa
cmp
out
loopne
push
andl
cs
push
push
popf
dec
rcll
mov
push
sti
out
cmp
das
add
insb
mov
into
inc
stos
mov
mov
mov
mov
das
scas
outsl
and
and
or
les
ds
jbe
xchg
push
xor
jg
add
and
sbbb
in
inc
ficomps
inc
pop
inc
rorb
repnz
fnsave
or
fs
pusha
fs
or
lea
adc
or
nop
ds
bound
mov
push
aaa
cmp
stc
xor
out
inc
xlat
mov
cmp
popa
xlat
xchg
int
jb
push
mov
cltd
pop
rorl
and
scas
aad
push
std
mov
repnz
jae
nop
shrb
arpl
dec
jb
dec
stc
and
jnp
outsl
out
dec
in
fcmovne
and
xor
inc
gs
fldlg2
push
adc
shlb
xchg
clc
cmp
jge
sbb
xchg
adc
xor
push
adc
jae
arpl
push
lret
lret
dec
dec
add
sub
sbb
xchg
or
push
sbb
in
xchg
movsl
dec
ret
add
mov
loopne
xor
iret
push
addb
jp
addr16
jmp
cmc
imul
cmpsb
sbb
inc
push
fnstcw
xchg
fisubs
xor
in
jmp
popf
dec
mov
dec
cs
and
fdivr
shll
int
pop
cmpsb
repz
and
insb
mov
sub
push
ljmp
cmp
xchg
adc
and
shlb
in
shlb
dec
hlt
jge
sahf
sbb
loop
dec
mov
inc
mov
fs
shl
push
in
sub
inc
aaa
bound
sti
mov
lods
outsb
pop
ret
sub
ljmp
or
pop
in
bound
cs
aad
fsts
xchg
fstpt
add
sbb
push
stc
or
and
pusha
repz
aaa
and
cmp
jns
xchg
loop
fmull
dec
sub
hlt
jb
mov
sbb
cmp
outsb
test
lcall
xor
add
pop
jno
das
add
and
fldenv
add
in
fidivrs
ret
scas
adc
shrl
pop
call
jmp
or
sarl
jno
mov
mov
mov
inc
ret
into
push
push
adc
or
jbe
push
push
jbe
hlt
mov
pop
insl
aad
and
adc
jl
leave
andl
xor
nop
out
push
stos
jmp
cmp
xlat
cmp
mov
adc
pop
addb
leave
mov
jle
xor
icebp
sub
dec
or
lods
push
std
dec
gs
insl
mov
mov
clc
addb
or
add
cltd
lcall
aas
inc
pop
fsubr
xor
js
fwait
pop
iret
adcl
es
lcall
popa
sbbb
insl
and
sub
push
inc
sbb
iret
or
xchg
sub
xchg
mov
ret
movl
lcall
and
dec
sbb
outsl
adc
lea
inc
cmpsb
imul
push
sub
fs
imul
xor
popa
out
mov
mov
or
shll
cmpsb
fs
daa
cmp
mov
lret
sti
pusha
add
sti
pop
data16
mov
out
or
dec
add
shlb
or
adc
pop
push
or
jae
orl
scas
ret
enter
lahf
imul
adc
fbld
jle
enter
stos
push
ret
sbb
fmul
mov
xchg
pop
pop
xor
fld
dec
inc
imul
std
sub
insb
aas
or
mov
leave
stos
add
dec
decb
mov
dec
repz
hlt
xchg
in
dec
push
inc
clc
arpl
pusha
mov
mov
xchg
mov
dec
movsl
xor
mov
fnsetpm(287
rorl
mov
adc
sub
int
and
add
cmpsl
std
fsubp
fcomp
popa
add
sti
jl
cmp
lcall
jne
inc
or
movsl
or
enter
test
or
jl
adc
and
dec
cld
lock
mov
xlat
xchg
and
repz
add
cmp
xchg
fcoms
and
stos
int
mov
or
into
mov
add
sbb
clc
mov
movsb
es
fidivl
inc
movsl
adc
out
inc
jne
pop
lock
mov
jg
cli
test
sarl
das
pushw
leave
iret
test
cmpsb
fcmovu
icebp
sub
sbb
or
repnz
popa
leave
lock
push
stos
xor
lahf
jb
les
push
outsb
push
lock
test
mov
enter
rcl
jg
add
mov
insl
mov
mov
je
lods
add
shl
imul
jae
pushf
enter
in
sub
or
lret
popf
push
pop
jle
nop
mov
fstpt
mov
loop
cmp
xchg
lret
dec
xchg
jbe
mov
cld
aam
data16
cmpsb
and
out
and
jbe
cmpl
xor
mov
insb
ret
xchg
inc
mov
popf
arpl
inc
jns
sarl
dec
pusha
dec
mov
pop
inc
mov
inc
loope
in
aam
loopne
jnp,pt
xchg
fistpll
repnz
or
dec
adc
sbbb
mov
jp
xor
cwtl
ja
mov
leave
jbe
dec
sti
push
lcall
or
inc
jg
cmp
negl
or
jb
xchg
pusha
out
mov
insl
leave
jmp
scas
pop
dec
les
movsb
dec
dec
loop
lcall
lret
popf
nop
xor
dec
loop
xor
out
xchg
mov
int
fdivrl
in
scas
mov
pop
xchg
ds
ljmp
add
inc
rclb
test
sub
cmp
in
std
add
cs
add
dec
or
xor
jae
movsb
int
mov
mov
dec
push
movsb
jb
int
jg
leave
cmc
push
test
dec
insb
leave
or
and
dec
cmp
push
mov
jno
inc
push
add
xchg
loop
and
jno
outsb
jmp
fistpll
xchg
mov
mov
push
mov
xor
inc
sbb
cmpsl
loop
push
mov
jl
shl
lahf
sbbb
xchg
sbb
test
inc
aad
dec
push
or
lods
jno
jp
lret
std
or
jnp
jge
jnp
lds
repnz
ljmp
aam
mov
fmuls
add
cmpsb
push
rol
imul
adc
std
inc
and
cmpsl
and
push
mov
pop
orb
and
gs
les
mov
sbb
cltd
push
in
popf
push
push
mov
jle
pusha
int3
mov
xchg
or
data16
pop
dec
out
lea
xor
clc
loope
adc
repnz
orb
xchg
or
dec
jbe
ss
xor
inc
outsb
cs
cmp
jge,pt
in
lahf
stos
or
and
cmp
cmp
jmp
and
xchg
adc
in
jns
cmpsb
leave
sahf
add
arpl
pop
or
rclb
aaa
inc
mov
xor
push
push
divb
pop
popf
mov
mov
scas
cmc
mov
je
adc
aaa
cmp
dec
cmc
icebp
aaa
test
bound
inc
mov
lods
jae
sub
popa
icebp
xchg
pop
jns
lcall
mov
cmc
movsl
jo
jo
movsl
adc
test
mov
inc
shlb
sbb
bound
insb
inc
dec
idivl
ss
test
into
xchg
xor
out
js
and
clc
inc
jb
into
popf
in
push
mov
scas
dec
push
and
je
xchg
pop
nop
fdivr
repz
pop
add
pusha
xchg
sarb
jmp
pop
mov
and
push
dec
mov
out
aaa
pop
aad
imul
jns
stos
or
pop
xchg
aad
fimuls
pop
hlt
or
sub
or
lods
mov
sbb
mov
lds
mov
test
pop
fsubs
xlat
add
mov
xchg
hlt
ret
ja
dec
js
push
pop
lea
push
mov
xchg
inc
insb
add
inc
scas
push
lret
jmp
xchg
mov
out
lret
push
in
push
inc
arpl
adc
mov
push
cmpsl
in
fcompl
mov
sub
cmp
jmp
mov
dec
sub
push
pop
sbb
adc
arpl
cmp
sub
or
sub
shll
xchg
mov
iret
pop
mov
mov
rolb
inc
je
ss
movl
sub
xchg
or
inc
xor
adc
inc
push
cmc
pop
pop
fldenv
mov
mov
cli
lcall
dec
dec
call
aam
test
pop
xchg
jp
pop
mov
or
sub
or
fmulp
jp
mov
shrb
xor
jmp
add
int
aam
je
sbb
push
inc
in
insl
lea
pop
in
ljmp
push
data16
adc
cmp
das
lcall
insb
dec
xor
mov
pop
or
adc
mov
and
cmc
jecxz,pt
pop
jnp
adc
cmp
mov
push
xchg
repnz
lock
lret
movsb
inc
mov
jmp
sub
stc
xor
jnp
jns
ss
inc
fs
imul
jge
cld
test
mov
test
pop
lea
pop
or
jmp
mov
mov
loop
mov
pop
mov
xchg
imul
iret
push
out
xor
xchg
mov
test
inc
ss
scas
aaa
jg
es
out
push
inc
push
ja
ret
xlat
dec
push
enter
fldz
mov
pushl
push
push
repz
xchg
fsubr
adc
or
inc
imull
push
and
mov
sbb
leave
adc
sahf
jbe
xor
jecxz
lret
lahf
sub
xor
loope
sbb
push
mov
es
ret
or
int
lods
sahf
sarb
adc
loopne
sbb
test
movsl
cmp
das
lds
imul
xchg
outsb
cmp
ret
dec
test
int3
mov
sbb
ja
pop
popa
fiaddl
xchg
xorl
push
icebp
stos
lea
push
iret
xchg
ja
sub
pop
aas
jmp
mov
filds
inc
sarl
stos
jl
mov
pushf
repz
and
mov
jmp
pop
and
dec
mov
call
dec
cmc
mov
sbb
pop
jmp
inc
fstpl
jle
sbbb
inc
jg
add
clc
sub
stos
xchg
imul
sub
mov
inc
cmpsb
and
cmp
mov
or
or
pop
rcr
std
decb
sub
mov
jecxz
pop
mov
dec
insl
scas
sub
jb,pt
ret
mov
mov
out
xor
in
cmpb
popa
pop
add
out
add
cmp
or
pop
je
es
aas
xchg
add
pop
scas
xchg
or
push
add
push
outsl
pop
and
adc
addb
repnz
and
add
add
pop
fsubl
mov
dec
sub
cmp
inc
shll
fcmovnb
inc
jnp
pop
xlat
cwtl
or
mov
sub
daa
in
dec
sub
and
outsl
in
cmc
and
inc
sahf
push
out
jg
mov
loop
add
mov
insl
in
sbb
in
push
iret
roll
pop
jle
push
and
inc
loop
into
popa
inc
fisubrl
mov
in
daa
es
xchg
inc
jle
lcall
into
loop
nop
add
push
test
and
or
lahf
clc
sbb
push
add
add
cmpsl
stc
ret
test
cltd
int3
and
pusha
cmp
insl
fucomi
aam
cs
iret
loope
add
inc
or
xor
jecxz
dec
mov
ret
push
push
out
in
jns
and
addr16
or
push
mov
mov
xchg
push
ljmp
lcall
mov
dec
imul
and
xchg
mov
push
lock
sbb
dec
pop
icebp
xor
outsb
pop
fldz
mov
insb
enter
andb
popa
arpl
pusha
dec
sbb
test
pop
test
xor
cltd
mov
mov
gs
in
dec
pop
jl
sarb
and
dec
enter
icebp
lahf
xchg
faddl
fimull
arpl
mov
jns
push
sub
add
mov
mov
push
sub
jecxz
jp
jno
je
mov
lret
pop
jb
movsl
imul
out
fcoml
sub
test
pop
adc
outsb
jge
dec
mov
dec
pop
adc
push
ljmp
ret
xor
inc
roll
test
lods
lea
call
add
cltd
xchg
cwtl
or
jecxz
jl
outsb
sbb
imul
aas
ret
xor
pop
jb
mov
dec
test
mov
stos
xchg
cmp
jg
mov
pop
xchg
cld
leave
aam
fldl
cmp
push
lret
ljmp
xor
out
imul
inc
and
aaa
test
mov
sub
fistl
nop
xchg
lahf
insb
push
cltd
mov
lods
pusha
cmpsb
mov
push
mov
movsb
lods
movsl
xchg
push
cmpsb
pop
into
into
jae
pop
out
daa
popa
cmp
mov
int3
cld
sbb
and
fdivrs
fimuls
mov
fadd
movsb
xchg
pop
enter
inc
sbb
je
push
mov
addr16
jne
dec
xchg
cltd
out
cmp
lea
mov
mov
leave
sti
jp
stos
fbstp
fldt
movsl
jmp
pusha
movsb
dec
fs
push
pop
imul
xchg
mov
push
int3
stos
rcrl
pop
sub
mov
dec
push
jecxz
jecxz
dec
sbb
pop
inc
push
test
mov
jp
push
test
cli
out
push
xchg
imul
out
inc
addr16
jecxz
jno
jno
dec
mov
hlt
std
sub
mov
add
insl
push
out
mov
nop
mov
or
jno
rolb
mov
repnz
push
dec
ror
out
imul
add
stos
js
or
jae
sbb
and
xor
pop
cmp
adc
and
mov
pop
shl
setae
push
mov
jne
or
fstps
jae
mov
data16
fisubrs
jp
inc
xchg
mov
stos
pop
inc
test
fs
popa
jo
add
mov
lds
in
adc
mov
ficoml
or
in
inc
ds
in
repz
push
mov
fsubrl
mov
das
lea
cmp
andb
retw
jb
ret
loopne
bound
pop
jl
out
enter
ja
popa
pop
sub
arpl
dec
lea
add
lcall
in
pusha
je
sub
lahf
test
ret
ja
test
cwtl
sti
cmp
mov
rcl
out
xchg
jp
xchg
seta
pop
cmp
lret
lret
notb
sub
cmp
push
mov
movsb
pop
push
add
add
addr16
lret
imull
adc
mov
rorb
xchg
inc
cmp
adc
xchg
pop
dec
mov
push
sub
xchg
fsubp
xchg
mov
cmp
jge
rcrb
in
push
jmp
jmp
sarl
lret
je
fisubl
sub
xchg
push
or
pop
jo
clc
pop
add
sbb
pop
shr
push
xchg
aad
pop
xor
stos
adc
mov
push
push
xchg
test
adc
dec
jmp
cltd
fldcw
mov
dec
jne
mov
or
fldl
push
jmp
lret
jl
sahf
or
pop
add
dec
leave
outsl
jmp
jnp
mov
dec
shlb
mov
imul
cli
dec
mov
cmp
lret
ficompl
mov
xlat
pop
xchg
nop
jl
nop
mov
mov
das
jmp
lahf
xchg
push
dec
jns
and
lea
dec
jmp
ret
inc
and
add
movsb
push
jmp
cmp
div
jnp
and
mov
sub
outsb
and
leave
adc
push
xor
mov
lret
shlb
cwtl
add
sbb
fcomi
inc
outsl
fists
insb
mov
lahf
fcmovnu
push
addr16
ja
testb
sbb
pop
push
jle
out
cltd
inc
addr16
pop
shlb
xor
pop
lcall
cmc
popa
sbb
push
pop
dec
clc
out
push
dec
cmc
pop
dec
arpl
jge
xchg
xor
dec
mov
pop
lea
sbb
push
testl
stos
ret
mov
stos
ds
out
cltd
daa
and
mov
cs
adc
mov
pop
cmp
push
cmc
add
icebp
cli
push
js
inc
movsb
fisubs
fldl
sar
loopne
div
or
jb
mov
jbe
nop
in
in
pop
or
jbe
push
addr16
lea
add
xchg
leave
adc
cli
dec
lds
cli
pop
pop
popaw
jo
mov
clc
sbb
dec
lahf
pushf
enter
ss
push
jb
lock
lahf
jl
popf
push
ljmp
je
sub
dec
pop
in
lds
mov
push
jns
ret
or
jno
insl
cmpsl
xlat
das
cmp
repnz
hlt
idivb
jmp
mov
pop
in
mov
pop
les
shrb
xorb
pop
test
dec
sbb
xlat
pop
arpl
push
lods
sbb
inc
cltd
cmp
roll
insb
addr16
lcall
adc
jg
push
outsl
mov
lret
pusha
mov
outsb
lea
jo
inc
out
and
std
lcall
icebp
mov
test
sub
cmp
ds
mov
mov
push
popa
ret
inc
repnz
dec
inc
popa
popa
jp
lcall
xchg
xchg
push
mov
filds
xor
dec
mov
inc
andb
pop
mov
jbe
out
shll
js
inc
ret
pop
lock
lock
and
pshufw
xchg
jecxz
mov
mov
ja
jmp
jge
out
xchg
fwait
out
push
pop
push
ss
shrl
out
sub
adcb
rcrl
ffree
sub
add
cmp
jmp
pop
jmp
pushl
mull
sbb
adc
push
cmp
loopne
loop
push
jmp
mov
jb
jge
daa
testl
in
mov
mov
inc
popa
add
lcall
dec
loope
out
leave
sahf
sbb
call
lahf
syscall
cmc
mov
push
push
dec
pop
push
sti
jl
sbb
xchg
inc
xor
mov
push
pop
or
lret
loope
rcll
out
repz
cltd
sbb
nop
subb
cmp
js
fistl
aas
add
adc
clc
mov
add
jl
dec
mov
out
ret
or
push
push
repz
rol
popf
or
mov
mov
inc
je
adc
inc
push
cmc
mov
mov
and
cmp
mov
sbb
loope
push
xchg
jle
jo
mov
stc
nop
sbb
push
rorl
adc
cmp
out
mov
fiadds
inc
inc
mov
inc
loope,pn
cmpb
cwtl
jns
mov
push
mov
dec
pop
out
shrd
add
jl
scas
sbb
movsb
je
je
mull
daa
loop
pop
aas
fisubrl
jg
dec
test
xchg
lahf
push
dec
les
mov
jl
jno
test
bound
cmovp
int
and
jb
mov
fildll
sub
sub
mov
push
dec
and
xchg
movsl
movsb
sbb
sbb
mov
les
inc
lods
pop
xor
fs
sbb
adc
sub
pop
pop
mov
jno
into
iret
push
aaa
lea
lea
iret
jbe
sub
xor
mov
push
mov
sub
ja
xor
adc
mov
outsb
mov
movsb
pop
sub
cmp
xchg
cvtdq2ps
das
aad
test
inc
inc
mov
xchg
inc
lock
xchg
mov
pop
xor
dec
xchg
and
xlat
pop
jle
xor
movsl
or
mov
jno
jmp
xor
lods
adc
fs
mov
mov
push
outsl
rcr
jne
stos
mov
add
pop
adc
lahf
jl
mov
sahf
std
fs
dec
negb
cmp
or
out
dec
ret
test
and
movsb
cmc
icebp
sahf
imul
fistps
stc
hlt
mov
inc
xchg
xor
imul
mov
xor
xor
fcmovne
clc
mov
pop
mov
sub
popf
subb
jns
jne
mov
aad
ret
flds
sub
fdivrl
push
jge
movsl
lcall
sbb
leave
flds
mov
sbb
inc
hlt
lahf
and
mov
dec
sbb
in
dec
mov
push
scas
imul
gs
scas
loop
push
insb
fistps
mov
or
orl
int3
inc
mov
cmpsb
enter
ss
je
push
push
push
pop
jnp
imul
pushf
and
sub
test
int3
gs
leave
xchg
add
xlat
repz
cmp
jle
mov
shrb
adc
adc
js
ja
mov
mov
test
inc
pushf
test
arpl
leave
pop
aaa
hlt
arpl
mov
or
dec
mov
movsb
xor
sub
stc
lods
jecxz
sahf
in
jp
dec
outsb
lret
jecxz
ret
adc
jbe
call
mov
aad
jb,pt
nop
cmp
mov
aas
in
pop
in
rorl
out
imul
xchg
jnp
pop
dec
mov
sub
add
out
or
sti
mov
cmp
xor
dec
cmp
aam
in
push
sub
push
add
mov
je
adc
fidivl
add
fbld
adcl
xlat
jle
pop
add
imul
xchg
cli
mov
push
test
int3
movsl
jno
lahf
nop
daa
inc
and
into
lret
movsl
dec
fwait
mov
loopne
je
jno
mov
dec
push
mov
inc
sbb
subl
divl
das
arpl
mov
push
sti
pop
cld
jmp
cmpsl
lret
popa
and
inc
and
test
pop
and
call
mov
mov
jle
lods
adc
cmp
xor
pop
xor
into
lahf
sbb
push
cmp
adc
sbb
adc
xchg
cmc
pop
mov
lahf
xchg
mov
xchg
cmp
cs
pop
stc
push
push
hlt
mov
cmpsl
xchg
mov
fbld
push
xor
insb
mov
call
sbb
jle
and
std
inc
push
std
push
leave
inc
mov
lds
pop
dec
mov
jbe
push
dec
mov
add
mov
leave
or
scas
or
inc
imul
ss
mov
pop
xchg
sub
out
push
int3
jge
or
or
jp
inc
jne
out
loop
addr16
icebp
fmuls
or
scas
xor
jne
hlt
out
outsl
aad
xchg
jg
lods
daa
xchg
cmp
or
xor
bnd
test
mov
jbe
mov
cmp
pop
adc
jmp
or
or
call
sub
sahf
and
in
xor
pop
out
out
icebp
mov
add
orl
std
pop
jb
xor
sub
push
lods
lcall
cmp
dec
sub
in
rcr
push
out
sysret
adc
fsub
out
jno
mov
or
loopne
aas
jno
xor
les
and
bound
sbb
pop
push
cmp
fcmove
xchg
fstpl
ret
orb
push
out
aad
subb
mov
mov
stos
cli
lods
lock
ss
cwtl
hlt
fsubrl
in
pop
out
dec
les
dec
cmp
lahf
stc
or
and
subb
mov
dec
cmc
inc
cmp
pop
dec
fnsave
dec
pop
imul
adc
dec
xchg
paddsb
popa
lods
xchg
test
xchg
popa
mov
out
mov
test
inc
and
rolb
inc
repnz
add
xchg
int
outsb
in
dec
inc
sub
fsubs
shll
fdivs
sahf
dec
jle
aad
cwtl
out
loop
stos
les
cmp
rorl
mov
jb
imul
mov
or
jge
ja
sarb
sub
addps
cmp
int
inc
stos
stos
repnz
and
divb
popa
mov
std
sbb
scas
test
push
adc
iret
stc
jg
addb
lds
je
test
nop
lret
jp
xchg
mov
cmp
cmp
push
pop
pop
mov
jns
xchg
in
bound
inc
movsb
aam
jmpw
push
add
clc
add
dec
shrb
mov
stos
ljmp
ror
testb
loopne
in
rcr
or
mov
aas
scas
icebp
cmp
lock
arpl
pop
pop
jne
pop
lods
iret
jl
add
cs
and
data16
popa
lds
test
inc
add
jae
push
std
xchg
mov
xchg
add
lea
hlt
pop
aaa
push
push
pop
lcall
je
mov
lahf
jo
out
xor
pop
ljmp
and
out
mov
jns
pop
in
repnz
leave
xor
xor
jns
inc
jns
inc
rorl
push
int
sbb
fcoml
cld
rcrl
xchg
ss
xchg
jecxz
int3
xor
sub
lea
jae
das
and
pop
sbb
mov
adc
sub
roll
orl
and
mov
or
aam
inc
in
arpl
dec
pop
sahf
add
jge
lds
out
xchg
xor
bound
add
js
pop
cli
push
fwait
clc
ljmp
pop
sub
push
xchg
je
push
sbb
in
xchg
cld
lahf
cwtl
mov
xchg
ja
cmp
repz
or
addr16
mov
add
scas
jmp
pop
mov
adc
adc
dec
cmc
das
ss
arpl
inc
xor
out
xor
not
mov
call
lods
cmp
mov
pop
add
jmp
pop
mov
xchg
dec
mov
xchg
push
movsb
and
in
pop
cli
push
mov
add
pop
pusha
ljmp
fimull
mov
adcl
xor
shrl
scas
pop
adc
xchg
test
inc
mov
adc
cmc
xchg
out
fwait
loopnew
fildll
loopne
loope
cmp
mov
adcb
xlat
ret
push
xchg
inc
mov
jle
push
xchg
mov
push
sbb
mov
mov
or
push
xor
sub
pop
jo
mov
int
mov
ds
or
cmp
and
jl
or
adc
dec
cld
popa
and
in
sti
ds
bndldx
sbb
xchg
dec
lods
or
insl
jge
push
sub
mov
outsl
js
loop
push
add
mov
scas
mov
and
or
fcom
xchg
outsl
mov
into
push
adc
pop
and
xlat
sbb
push
xor
addb
repnz
enter
mov
lcall
dec
xchg
cmpsb
xor
pop
mov
mov
insl
pop
data16
inc
adc
shrl
pop
inc
xor
out
stos
sub
xor
and
in
imul
arpl
leave
pop
into
sub
scas
inc
xchg
ficoml
mov
popl
popa
push
addr16
xchg
pop
push
or
adc
leave
hlt
jle
sbb
add
and
push
mov
mov
push
push
test
push
push
pushf
lods
push
mov
pop
cmp
mov
jae
ret
cmp
sub
add
sarl
sbb
lea
out
les
out
add
mov
in
dec
call
mov
adc
cmp
in
xlat
subl
mov
sbb
mov
cs
data16
jae
rep
xchg
add
fldcw
inc
jl
push
mov
shlb
loope
jne
dec
gs
test
jecxz
cmp
fisubs
mov
dec
pop
adc
in
sbb
dec
mov
sbb
dec
xchg
sarl
push
cmpsl
stc
sub
pop
pop
test
loopne
or
fnsave
mov
mov
mov
outsl
pop
push
xchg
sbb
push
inc
mulb
sbb
mov
mov
orl
cmpsl
push
sub
push
mov
scas
ret
xchg
mov
pop
push
jecxz
add
mov
lea
popf
cmp
pop
mov
sub
divb
inc
mov
les
lea
loop
jne
sbb
scas
inc
push
lods
push
mov
fsubrl
xorb
neg
gs
push
test
cmp
aaa
stos
xchg
adc
mov
pop
mov
inc
mov
sti
daa
frstor
inc
mov
cwtl
xchg
cmp
jl
cld
jge
add
hlt
lahf
sub
mov
pop
dec
mov
cmp
stos
lcall
inc
pop
push
mov
out
or
jns
in
movsl
shll
fiadds
inc
mov
jbe
mov
hlt
cmpb
inc
mov
int3
xchg
fidivrl
stc
dec
mov
pop
out
stos
pop
pop
dec
adc
xchg
add
pop
add
ret
test
push
or
int
mov
xchg
inc
xor
sbb
stos
sub
adc
add
or
mov
fcompl
xor
inc
xchg
jb
jp
push
sub
out
mov
add
std
xchg
int3
mov
mov
out
push
adc
pop
jmp
outsb
mov
sbb
mov
sbb
negb
out
sbb
hlt
cmp
push
xchg
dec
icebp
and
mov
shlb
mov
out
mov
mov
xchg
lret
push
add
mov
pop
push
push
pushf
fsubl
and
jmp
jecxz
dec
je
xor
dec
cltd
into
sbb
inc
adc
or
jecxz
iret
js
dec
sub
inc
sbb
cwtl
std
dec
inc
adc
and
mov
fcmovnb
outsb
or
scas
xchg
and
or
inc
rdmsr
test
sbb
ror
movsl
adc
pop
jmp
mov
sbb
add
xchg
and
pop
mov
repz
mov
xor
ljmp
pushf
mov
pop
mov
xorl
pop
mov
sub
cmpsb
add
or
test
mov
add
movsb
fld1
mov
pop
rcll
in
psubsb
lea
add
aam
push
rcrl
movsb
mov
fiaddl
cmp
repz
shl
shrl
in
mov
roll
mov
in
jl
sub
add
test
sbb
lcall
inc
xor
pop
dec
std
push
cltd
cmc
js
push
jp
and
cmp
incb
inc
mov
adc
sahf
mov
push
ss
popf
or
push
fnsave
dec
jo
sub
jb
dec
inc
insl
mov
xor
clc
movsb
jns
je
lret
cmp
dec
arpl
mov
aad
lds
gs
bound
xor
stc
stc
ds
mov
cmp
xor
out
xchg
sbb
mov
repnz
insb
mov
and
lea
enter
arpl
stos
cmp
test
jg
xchg
orb
mov
mov
shlb
jb
push
in
mov
test
imul
lods
sbbb
sub
xchg
and
cmp
popf
jnp
fneni(8087
pusha
xor
pusha
movsl
and
shlb
xor
jecxz
cmp
or
pop
fbld
imul
adc
pop
repz
mov
ret
push
dec
cli
sbb
jecxz
fucomi
jl
or
sbb
adc
push
sti
inc
push
inc
imul
xor
push
lea
push
sbb
mov
cmp
jo
adc
rcll
movsb
pop
push
daa
adc
lret
daa
mov
mov
int3
jne
imul
jg
inc
or
jnp
xchg
inc
mov
fisttpll
ja
mov
out
sti
xchg
aad
mov
or
cmp
add
sbb
gs
or
xor
cmc
jg
or
fwait
mov
pop
lret
or
push
popa
es
mov
aam
mov
stos
mov
xor
das
mov
das
sub
in
xchg
adc
leave
loopne
insl
rclb
jne
jae
faddl
mov
jecxz
imulb
fbld
aad
sub
mov
sbb
scas
insb
xor
xchg
orb
xor
jl
mov
cwtl
xchg
aam
xlat
pushf
jno
aad
and
lcall
int3
or
adcl
bound
lret
test
mov
rcrl
imul
cmp
jo
mov
or
popf
jb
pop
aaa
dec
pop
and
ja
cli
mov
xchg
sub
xchg
mov
and
xchg
xchg
adcl
cltd
out
pop
lcall
imul
push
xor
out
out
mov
push
xchg
mov
xor
je
xchg
jle
mov
xchg
pusha
xchg
xchg
pop
xchg
mov
in
mov
std
scas
out
outsb
inc
data16
xchg
leave
mov
push
inc
sub
sbb
lds
out
mov
aas
jmp
or
out
jle
mov
push
push
lea
sbb
inc
repz
sbb
mov
and
inc
dec
xor
pop
rorl
fistps
sbb
mov
or
das
dec
sti
and
dec
pop
test
shlb
cmp
inc
xor
jp
xor
xchg
xor
fstpl
mov
fwait
mov
sbb
jbe
int3
mov
push
cmpsl
repz
gs
jecxz
lahf
repz
mov
cmp
cmp
insb
in
mov
push
test
stos
or
and
pop
xchg
jmp
pusha
sub
jle
decb
xchg
imul
push
jne
dec
std
fsubr
sub
les
sti
sbb
jmp
push
push
sbbl
cmp
nop
dec
jmp
stos
mov
cmp
cmp
pop
addb
or
cld
cli
out
sbb
lret
pop
add
xchg
bound
xor
push
adc
xchg
push
pusha
nop
xor
lock
hlt
std
mov
mov
sarb
divl
xchg
rcrl
adc
adc
fadds
mov
cmc
daa
fdivrl
sahf
in
pop
or
sbb
push
jnp
sbb
sbb
aad
sub
leave
jo
addb
cmpsb
ret
mov
into
fadd
fstps
add
mov
xchg
aad
add
fistpl
cld
mov
iret
add
xchg
jmp
cmp
mov
roll
jg
repz
or
nop
ja
mov
out
dec
aam
push
aad
popa
adc
loopne
or
mov
dec
or
ret
push
sub
mov
jbe
jo
into
mov
sub
xchg
jg
popa
cwtl
dec
jmp
or
xchg
jbe
mov
xchg
mov
mulb
cli
mov
popa
gs
pop
mov
pop
addr16
push
cltd
jnp
mov
fadds
sbbb
popf
loope
icebp
adc
es
cmp
insb
out
jp
lcall
sbbl
insl
sbb
xor
adc
testb
js
add
das
mov
xor
cmp
fdivrp
sub
sti
stos
fisubrs
adc
push
mov
cwtl
aam
sub
jns
rep
scas
andb
pop
into
scas
and
pop
mov
inc
push
bound
add
xchg
dec
jmp
pop
popa
pop
repz
sub
adc
pcmpeqw
lock
lods
jnp
push
out
mov
mov
inc
jo
test
das
cmp
push
sbb
imull
mov
fwait
and
jne
and
or
inc
adcl
nop
mulb
or
movsb
mov
aam
int3
movsl
int3
out
xchg
mov
cli
test
cmp
pop
pop
and
incb
sbb
mov
inc
int3
adcb
pop
xorl
xor
dec
or
inc
xchg
cli
cs
sub
divl
loop
push
or
jecxz
stc
jmp
loop
xchg
mov
das
insb
or
daa
daa
dec
xchg
hlt
fists
inc
dec
ret
add
mov
movsl
xlat
push
shll
mov
mov
jge
ljmp
das
xchg
sbb
jge
test
and
loopne
add
ljmp
lcall
es
lret
inc
xchg
cwtl
movsl
test
mov
add
cmp
or
xlat
cld
adc
sbb
cli
lahf
lods
mov
xchg
jmp
cs
adc
dec
fwait
sub
mov
jne
int3
inc
enter
mov
popf
leave
imul
int
inc
push
mov
adc
dec
fmul
push
sbb
or
mov
pop
cmp
mov
sbb
sbb
mov
ds
lret
xchg
stos
outsb
scas
idiv
inc
xor
inc
or
push
push
dec
cmp
pop
push
movsl
pop
adc
mov
sub
or
mov
and
leave
and
fldenv
data16
divl
in
test
xchg
stos
adc
or
jmp
outsb
and
sbb
pop
mov
mov
je
jbe
sahf
nop
sbb
adc
sbb
mov
test
pop
stos
push
mov
push
jb
es
mov
repnz
test
add
jbe
and
inc
jl
call
es
dec
jg
mov
cmc
neg
mov
dec
push
jo
push
lcall
in
iret
addr16
lret
xchg
cld
jne
xchg
mov
mov
mov
mov
jae
cmp
loopne
mov
js
test
sbb
cmpsb
pushf
fildll
sbb
int
pop
pop
out
addl
fldenv
lea
adc
jbe
cmpsl
cmp
insb
pop
jo
sub
cwtl
pop
jmp
xor
ljmp
loop
mov
in
jge
aas
jb
cmp
cmpl
dec
sbb
popa
push
push
xchg
push
loope
sub
or
mov
nop
pop
outsl
or
pop
jg
clc
int3
mov
stc
dec
sub
adc
push
pushf
pushf
rorl
sub
adc
dec
lret
sbb
sbb
lods
repnz
mov
repnz
mov
or
jb
lahf
sbb
mov
add
ds
addr16
test
mov
mov
sbb
test
out
stc
mov
cmp
pop
xor
mov
fdivrl
aas
int3
insl
hlt
mov
xor
push
aas
lock
out
mov
cli
sbb
stos
fidivl
or
scas
test
mov
les
push
adc
shld
fstpt
mov
test
in
nop
das
imul
sub
ret
jnp
or
xchg
xchg
aad
cmpsl
in
jns
xor
add
out
pop
or
push
mov
lods
inc
cmpsb
and
or
cmp
mov
xchg
dec
pop
adc
mov
xchg
loopne
into
cld
in
adc
in
cmpsl
xchg
xbegin
dec
add
cltd
xchg
sub
cmpl
dec
mov
jl
jecxz
shl
xor
lock
mov
leave
or
sbb
fbld
movsl
inc
jbe
dec
xchg
cmp
lds
pandn
lods
pop
jecxz
pop
lods
jae
imul
rcrl
xchg
dec
ss
dec
cmpsl
cltd
and
xchg
push
cmp
add
stos
arpl
fmull
fcmovbe
out
add
cmpsl
dec
jl
adc
leave
pop
mov
cmpsb
imul
imul
cltd
add
pop
jp
push
test
clc
adc
mov
sbb
mov
push
and
adc
jne
sub
and
mov
out
inc
outsl
xchg
mov
in
adc
scas
outsb
scas
mov
pop
cld
and
push
dec
les
jns
dec
dec
loop
insb
cmp
or
xchg
push
add
insb
cmp
cmp
es
mov
add
cwtl
call
sbb
loop
les
adc
dec
adc
jae
sub
insl
loope
mov
loop
arpl
imul
sbb
int
adc
es
jbe
loop
xchg
jne
adc
cmp
sbbl
and
pop
xor
inc
outsl
in
xchg
jle
int3
jnp
enter
mov
shlb
and
pusha
sub
pop
dec
fisubrs
jo
in
jg
adc
cmp
or
mov
gs
arpl
rcrl
in
pop
adc
xor
std
imul
add
fsts
pusha
push
popf
sti
push
xor
fists
call
or
call
sbb
mov
and
add
push
cmp
jo
mov
add
inc
stos
xor
outsb
sbb
clc
test
cli
rcr
ret
add
dec
cmc
lcall
repnz
xchg
in
dec
js
mov
movsb
adc
xchg
div
mov
push
or
or
xor
cmp
mov
clc
stc
divl
insl
dec
sub
movsb
inc
je
scas
data16
int
loope
and
cmp
jge
sbb
xor
roll
mov
insb
push
jmp
fsubs
push
push
cmpsb
rep
fistpl
adc
mov
inc
push
xchg
pop
add
mov
imul
mov
mov
pop
and
outsb
mov
inc
push
jl
mov
pop
inc
mov
jns
pop
sub
fstpl
cmp
push
in
mov
mov
cmp
loope
push
dec
cld
mov
inc
lahf
sub
fucom
std
cmp
pop
gs
sub
inc
mov
int3
shlb
pop
jp
inc
mov
xchg
lea
popa
bound
jnp
sbb
roll
stc
xor
shlb
notl
push
gs
jbe
and
adcb
mov
test
xor
fnstenv
fbstp
mov
jb
and
xchg
imul
lcall
std
inc
xchg
and
insb
test
xor
enter
pop
xchg
and
mov
test
dec
inc
cli
xchg
sbb
popa
adc
pop
in
ljmp
inc
mov
mov
jno
mov
sub
repz
or
icebp
xor
cmp
imul
xor
pop
or
jae
mull
lods
test
push
cmp
outsb
test
mov
lock
and
pushf
mov
or
cwtl
divb
push
push
leave
cld
rcrb
addl
popf
xchg
scas
fcompl
test
sbb
mov
adc
mov
mov
or
aaa
outsb
mov
pusha
sub
xorb
aas
cwtl
rclb
xchg
mov
out
iret
movsl
ficoms
jl
push
ret
and
sub
mov
stos
movsb
push
xor
in
in
cmp
mov
inc
pshufw
dec
push
out
out
push
stos
xlat
data16
sti
out
fsubrl
test
aam
ljmp
and
mov
add
xor
popa
call
int3
sahf
dec
cltd
in
gs
outsb
mov
mov
push
inc
and
fwait
mov
adc
push
mov
and
in
prefetch
xchg
mov
pushf
or
sub
mov
xchg
inc
into
and
cmp
cmc
aaa
push
pop
jecxz
lret
rclb
lock
pop
xor
push
setnp
inc
cmpsb
mov
cli
in
xchg
or
push
adcb
mov
pop
divb
rolb
std
xor
dec
inc
jg
and
fs
lcall
cmp
cmp
inc
out
insb
enter
cltd
mov
outsl
xchg
inc
mov
push
adc
mov
scas
mov
jbe
mov
push
dec
mov
jl
jbe
push
inc
lds
loopne
aam
fcmovu
mov
outsl
mov
add
data16
cld
icebp
das
test
test
inc
test
rcr
popa
push
stos
adc
inc
xor
loopne
loopne
push
xor
aad
sbb
mov
cli
and
cmpsb
mov
sub
out
mov
pushl
in
mov
pushf
jge
inc
std
fisttpl
lret
add
or
ret
aad
loope
dec
adc
inc
push
mov
lea
inc
rclb
pop
sbb
imul
push
jg
sbb
sahf
mov
fdivrl
inc
cld
jp
sbb
int3
lea
jmp
push
mov
mov
jg
in
arpl
lods
mov
adc
add
mov
nop
push
rorl
cmp
cmp
pop
imul
movsb
sub
nop
je
and
adc
mov
add
add
hlt
jg
push
aam
xor
ss
fisubrl
mov
scas
pop
arpl
int3
movsb
xor
dec
mov
sbb
adc
push
iret
inc
lea
mov
decl
movsl
jb
loope
cmp
mov
ljmp
mov
icebp
sarl
test
mov
fcomps
scas
das
sub
neg
xchg
je
lret
lcall
addr16
sbb
jmp
adc
js
aam
xor
fwait
mov
cmp
inc
or
xchg
int
push
pop
sub
neg
jl
outsl
or
and
xchg
into
incb
xor
dec
sahf
push
push
dec
xor
call
cli
repnz
lock
leave
shrl
pushf
repnz
std
outsb
mov
pusha
lahf
sbb
jo
icebp
dec
pop
pop
push
imul
scas
push
add
shrb
cli
loope
jno
or
imul
sahf
sbb
mov
cmp
mov
pop
mov
push
pop
popf
push
aas
jns
and
xor
daa
pusha
rolb
mov
lock
mov
repnz
les
add
cmpsb
xor
scas
adc
sbb
cmp
xor
lahf
movsb
jg
or
or
add
inc
je
adc
addr16
lock
sbb
cltd
movsl
fimuls
or
xor
stc
xchg
pop
adc
mov
loope
cli
test
jl
fdivrl
dec
mov
pop
jnp
push
mov
mulb
loop
mov
test
lret
and
data16
js
xor
mov
adc
and
jno
jmp
mov
xchg
aad
out
push
sub
stos
add
push
loope
mov
xlat
mov
inc
std
fidivl
or
lahf
inc
jns
mov
cmp
mov
jg
pop
xchg
insl
int
cmpsl
push
dec
pop
js
jbe
in
adc
repnz
jno
adc
dec
sahf
mov
ljmp
aas
aas
jg
nop
pop
std
addb
or
adc
xchg
hlt
push
push
push
jo
add
arpl
xchg
dec
scas
pop
loopne
loopne
mov
xlat
mov
jae
mov
fnsetpm(287
push
popa
mov
icebp
in
movsb
insl
pop
dec
mov
push
cmc
js
push
gs
outsb
outsb
add
pop
or
andl
sub
inc
imul
sub
fsubs
xchg
clc
jge
imul
cmp
pop
imul
sbb
test
xor
xchg
insl
sti
sti
mov
aaa
aam
jecxz
cmpsl
inc
lcall
mov
xor
nop
and
xchg
sub
jb
push
imul
cmp
mov
jne
xchg
add
shlb
add
sub
int
fisttpll
mov
sarl
movsl
das
hlt
cmc
or
mov
inc
adc
sub
pusha
adc
cmp
fdivs
into
mov
dec
xor
sub
aad
add
into
mov
in
std
shr
stos
add
push
pop
or
mov
inc
jge
cmc
add
loopne
loope
ds
lds
mov
lret
sub
mov
mov
add
add
ss
leave
jl
xor
sub
decl
push
sbb
pop
jecxz
sbb
lcall
movsl
mov
push
sti
jno
fbstp
jmp
and
push
scas
mov
jnp
pop
mov
fadds
bound
imul
movsl
xor
and
or
mov
cmp
adc
xchg
div
loope
out
xor
sub
cs
jp
rorb
adc
jle
pop
adc
inc
sbbb
push
xlat
xchg
sbb
dec
ja
push
int
cmp
push
push
mov
idivb
or
mov
les
lods
out
jno
rclb
mov
adc
xor
dec
test
push
popf
jne
mov
jg
sbb
add
push
pop
mov
or
lahf
pop
lret
jle
pop
in
fistl
jg
sbb
aad
mov
adc
sarl
adc
dec
xchg
scas
push
sbb
sbb
sbb
sub
movsb
sub
and
sbb
cli
xor
mov
mov
arpl
push
jne
push
xchg
sub
jnp
mov
dec
sbb
leave
pop
sti
xchg
leave
sbb
andl
xchg
dec
fistpl
sahf
cmpsb
xchg
jmp
mov
xor
xchg
sub
outsb
insl
push
ss
push
mov
sub
jl
cmp
je
rcrb
arpl
sub
aaa
in
lds
cmp
sar
nop
and
shll
xor
sub
sahf
cmp
cltd
pop
sbb
into
ret
jno
dec
fmull
pop
add
mov
movsl
daa
push
shlb
cmpsb
loope
sub
mov
js
mov
psrad
xchg
inc
dec
sbb
aas
mov
fwait
mov
outsb
inc
and
neg
sti
sub
movsb
fisttpll
jb
cmp
and
push
fidivrs
push
cmp
mov
sub
mov
push
aam
repnz
mov
clc
test
arpl
orb
repz
call
push
push
pop
cmp
xchg
popf
popa
test
lret
lret
dec
mov
hlt
stc
mov
shrl
test
mov
push
imul
cmpl
jle
sbb
cld
daa
adc
mov
jp
dec
nop
jge
into
or
mov
xorb
cld
outsb
out
loopne
sbb
cld
mov
neg
enter
movsl
mov
jbe
lahf
cmp
push
xchg
inc
inc
xor
shl
adc
xor
and
xlat
movsb
sub
out
mov
mov
das
add
in
popa
xor
and
cmp
out
mov
pop
imul
es
push
aas
mov
xchg
rcll
loopne
fs
ss
mov
iret
repz
repz
cmpsb
fidivrl
scas
call
outsb
mov
cmp
mov
jp
and
subb
ds
and
lcall
pushf
cmp
leave
aad
jcxz
fcoms
mov
cmpl
mov
jg
cmp
sti
mov
ffree
pusha
push
push
push
scas
dec
pop
js
jae
out
fisttps
sub
adc
adc
lret
dec
fdivrp
cmpb
out
out
add
mov
cltd
xor
cmp
push
pop
cmpsb
sub
mov
lcall
mov
enter
xchg
lods
loop
sub
sahf
adc
inc
clc
mov
mov
cli
scas
jno
std
jo
adc
nop
mov
mov
das
aad
mov
rclb
imul
scas
fildll
notl
divb
sbb
lahf
inc
mov
sbb
repnz
sub
cmp
sub
adc
cmp
or
inc
xorl
dec
out
stc
loop
mov
inc
push
adc
cmp
cmpsl
pop
lods
and
clc
rcll
enter
or
pop
cwtl
iret
mov
dec
cmp
das
cmp
jmp
cmp
scas
aaa
push
mov
and
cmp
in
sbb
pop
dec
mov
mov
loop
imul
push
sbb
or
pop
mov
inc
and
xor
sub
mov
aam
and
mov
dec
add
jae
adc
test
sti
lcall
jnp
in
cmp
add
in
mov
jnp
jmp
mov
mov
mov
mov
loopne
stos
cmp
fucomip
adc
add
mov
pop
pusha
adc
push
arpl
or
dec
into
jge
mov
xor
bound
pop
dec
push
loope
dec
jae
mov
movsl
xor
jle
sbb
xor
movsl
in
popa
bnd
and
call
cmp
mov
movsl
data16
sub
cmp
fstp
pusha
push
shlb
xchg
and
loop
mov
fadd
pop
adc
mov
inc
lock
ljmp
xchg
adc
xchg
sbb
push
ficomps
mov
xorl
fucomp
rcl
inc
pop
idivb
out
aam
idiv
shr
loope
rcrl
or
aam
shlb
adc
mov
inc
lcall
cmc
push
cmp
push
mov
add
jno
mov
jecxz
data16
or
push
mov
scas
lds
lds
sub
adc
jae
push
outsl
shlb
lds
test
push
xor
xlat
imul
cmp
xchg
dec
inc
push
jne
jmp
jecxz
das
mov
int
mov
dec
xlat
das
aam
mov
sub
jge
pusha
push
repnz
scas
int
sub
or
cmp
push
in
ss
testb
lock
jecxz
pop
sbbb
nop
mov
push
popa
je
or
sub
stos
js
shll
repnz
mov
ret
pusha
pop
mov
stos
imul
push
and
xchg
sub
xchg
add
inc
pop
adc
call
in
retw
adc
pop
jne
bound
jae
decl
inc
push
xchg
shlb
test
mov
pop
sbb
push
sarb
ljmp
int
add
sub
xchg
xlat
or
js
popf
lahf
xchg
pop
dec
lods
push
adc
outsl
inc
out
push
leave
mov
sbb
scas
xchg
mov
push
pop
xor
mov
dec
inc
cmp
call
push
inc
and
es
ja
sbb
jb
aaa
mov
test
lds
idiv
jbe
mov
jb
mov
push
mov
ljmp
ret
cmpsl
xchg
out
sub
icebp
mov
ss
adc
sbb
fcmove
imul
cmovge
and
sub
in
dec
lock
cmp
lds
dec
ds
fistps
lahf
jmp
lea
push
out
cmpsb
push
fimull
sbb
or
push
enter
lahf
sbb
adc
sbb
xor
jo
add
mov
std
inc
adcb
mov
fisubs
leave
add
adc
jno
or
xchg
adc
push
and
push
jg
bswap
mov
iret
mov
mov
xchg
lds
sti
dec
repnz
cmpsb
int3
movsb
lret
into
push
mov
pop
mov
test
mov
add
cmpb
pop
mov
xchg
pop
test
pop
dec
ret
outsl
mov
adc
dec
sti
jno
pusha
hlt
int3
stc
adc
testl
iret
test
addb
sbb
sub
js
adcb
cmp
ja
lods
jnp
int
fsub
ret
sub
ds
cmc
int3
adc
push
loope
xor
push
mov
pop
out
xchg
aad
ret
aad
dec
mov
adc
loope
test
dec
outsb
lods
push
push
dec
sbb
aam
inc
mov
sbb
jmp
fimuls
inc
pop
jb
inc
shrb
inc
push
pop
outsb
lret
pop
mov
aam
xchg
pop
cld
mov
into
stos
add
jmp
popl
into
das
pop
or
mov
das
lahf
in
fbstp
fidivl
add
sbb
push
or
ficompl
cld
cltd
xlat
leave
ds
pop
jge
xchg
movsb
in
dec
xchg
outsl
mov
xchg
cli
add
push
stos
repnz
adc
fists
dec
xor
scas
adcl
and
je
adc
and
inc
sarl
or
jns
fnstsw
dec
call
add
push
jns
pusha
ja
inc
mov
leave
cs
movsl
sbb
xor
aas
loop
cmpsl
sub
pop
fisubs
jae
mov
inc
in
jo
jae
xchg
dec
fcoms
lods
fucomp
out
pop
fnstcw
push
add
shr
inc
iret
xor
mov
das
lcall
xchg
push
int3
js
mov
dec
scas
or
push
outsl
xchg
jb
mov
mov
sbb
stos
in
fcoms
cmp
sti
mov
jp
xlat
insb
jns
and
std
fmull
jmp
sbb
sub
aas
loopne
arpl
mov
hlt
mov
dec
orl
jae
sbb
fwait
push
mov
cmpsb
mov
cmp
inc
mov
xchg
cmpb
jmp
fisubl
icebp
std
xlat
cmp
lds
or
push
mov
inc
nop
push
mov
roll
adc
jg
outsb
je
loopne
mov
scas
loopne
lahf
sarb
ret
bound
icebp
into
fcmovbe
sahf
lea
mov
int
insb
xor
mov
cli
sbb
inc
lret
enter
dec
mov
add
push
push
jae
and
adc
and
lahf
leave
inc
mov
dec
aam
push
push
cmp
inc
xchg
lods
mov
add
outsb
cmpsb
out
cmp
add
in
sub
xchg
or
and
dec
add
cwtl
aad
fs
or
icebp
inc
mov
jecxz
fs
ret
pop
push
mov
bnd
adc
outsb
in
mov
lahf
mov
push
inc
mov
ror
jne
adc
adc
mov
test
roll
mov
aas
jnp
or
push
icebp
faddl
jo
insb
popf
mov
test
out
movsl
aas
movsl
jp
outsb
pop
nop
sub
xor
mov
dec
pop
mov
loopne
sub
dec
hlt
inc
mov
aas
sbb
mov
push
fildl
movsl
insl
jp
jmp
mov
mov
int
fcmove
push
scas
push
testb
fwait
loop
jne
stc
pop
pop
popa
xchg
sub
mov
lret
inc
mov
cmp
mov
jl
cwtl
orb
or
mov
lret
popf
mov
inc
mov
clc
inc
js
mov
sub
imul
outsl
popl
push
add
test
cld
fwait
imul
cmp
mov
jns
pop
sbb
sbb
push
mov
out
in
test
adc
aam
push
icebp
push
jns
push
test
jns
mov
pop
std
cmp
xchg
es
idivb
mov
jbe
pop
jne
xchg
pop
shll
inc
aad
jae
mov
ficoml
loope
mov
mov
and
and
mov
popl
lret
jl
pop
lea
push
inc
enter
mov
test
sub
inc
jns
lret
pop
inc
cmp
and
mov
sub
xor
shlb
xchg
pop
scas
sbb
cmpsb
jge
shll
jae
lea
ficompl
mov
jne
push
mov
inc
dec
bound
call
movsl
and
iret
negl
arpl
and
outsb
out
loop
out
pop
mov
nop
enter
sub
sub
ret
sbb
aas
loop
jl
loop
or
sub
or
daa
add
xor
xor
jmp
sub
sub
imul
imul
out
pushl
and
call
add
mov
outsl
lcall
adc
xchg
jmp
into
mov
adc
cmp
lock
xchg
inc
movsl
inc
popa
bound
mov
bound
inc
sub
sub
push
xchg
aas
dec
in
sahf
fsubrl
hlt
iret
cmp
pop
lods
jecxz
cmpsb
jnp
or
jo
cmpsl
movsl
popf
fildll
pop
sub
xchg
push
adc
loopne
out
xor
xchg
sbb
mov
jl
jle
test
dec
xchg
setp
xorl
into
push
dec
mov
ret
and
fnsave
mov
daa
and
inc
pushl
je
dec
jae
sbb
pop
adc
sub
jne
popa
jne
ret
or
push
out
arpl
imul
jecxz
hlt
dec
out
imul
test
fsubrl
js
mov
add
mov
in
jno
leave
mov
aas
nop
xchg
cs
inc
sub
out
dec
mov
add
fnstenv
sbb
popf
and
fcmovnu
xlat
sub
testl
lea
xor
mov
inc
or
loope
aas
mov
cmp
fstl
pop
add
mov
call
addl
inc
and
shl
pop
jle
out
insl
jb
jne
add
mov
xchg
in
fsubs
fidivl
ljmp
or
fists
in
cmp
nop
shll
xor
js
loopne
out
pop
sbb
mov
imul
ficomps
mov
cld
outsl
xchg
mov
popa
sbb
pop
arpl
into
jns
cltd
and
mov
pop
cmp
adc
call
jo
cltd
test
jno
cld
test
rcll
xchg
cli
mov
jl
pop
push
aas
add
jmp
in
clc
test
jae
mov
movsl
sbb
jne
fxch
pop
imul
sub
subb
loope
pop
mov
mov
popa
in
or
adc
pop
movsl
cmpsb
es
dec
fidivrl
pop
js
pop
clc
negb
ret
xor
pop
or
ss
inc
movsb
sub
jp
pop
pop
or
mov
lea
dec
cld
sub
or
in
xchg
xchg
xchg
inc
dec
icebp
jg
jae
push
lea
adc
adc
addr16
insl
or
mov
int
lods
lret
int
push
add
bswap
mov
pop
jbe
pop
cs
shrl
cmp
push
repnz
in
hlt
shl
xor
ret
push
pusha
enter
loopne
ja
testl
mov
ljmp
mov
lds
leave
lods
arpl
mov
xor
fidivrs
lahf
or
cmp
inc
mov
mov
cli
imul
sbb
bound
cwtl
les
out
inc
loop
outsl
pop
jae
push
shll
jp
lret
xchg
jg
fwait
cli
jecxz
imul
jle
pop
adc
addr16
mov
es
cwtl
cld
lds
inc
xchg
push
jge
in
mov
sub
mov
dec
pop
sti
xchg
pop
xlat
repz
aam
out
addr16
mov
js
outsl
xchg
add
cmpsl
push
pop
jle
out
lret
lock
mov
mov
loop
js
shl
jo
push
cmp
imul
shrb
in
push
std
imul
pop
dec
insl
nop
pop
ja
push
and
das
bound
nop
or
sahf
sub
sub
rol
push
cmp
sti
sahf
out
testl
sahf
test
sbbb
inc
fdivs
sub
mov
std
jmp
aam
mov
gs
inc
sbb
sub
jmp
in
cltd
push
xor
cmpsb
fcompl
jp
xor
xchg
sub
mov
lahf
add
aad
inc
les
into
int
pusha
inc
or
imulb
mov
mov
xchg
gs
mov
xchg
xor
mulb
shll
stos
fs
push
cmp
std
add
repz
xchg
jmp
sbb
loop
inc
lods
and
mov
mov
jecxz
loopne
mov
push
adc
ds
push
dec
fsubrl
sub
and
jecxz
xchg
mov
int
inc
js
je
lcall
jg
jl
imul
aad
int
pop
aad
jecxz
rcrb
sub
mov
adc
orb
pop
les
push
rclb
insl
test
sbb
mov
mov
sbb
cmpsl
es
push
mov
mov
xchg
lret
dec
dec
push
pop
xchg
jnp
xor
mov
mov
xor
mov
push
xor
xlat
xchg
cmpsl
aas
cmp
int3
mov
jge
or
or
xlat
cld
push
sub
add
sub
leave
iret
sti
mov
leave
mov
pusha
lret
jmp
pushf
mov
jnp
movsl
loopne
in
inc
or
mov
lock
nop
push
aam
in
adc
cli
dec
dec
cmp
into
bound
mov
rcl
call
rcll
pop
adc
push
xor
test
rcrl
ret
dec
imul
push
push
mov
sub
mov
sti
jo
inc
aas
ljmp
or
inc
sub
xor
cmp
popw
lea
mov
pop
outsb
push
ds
push
mov
and
inc
cmc
fwait
das
mov
push
ret
and
je
push
adc
or
xchg
push
rol
scas
enter
mov
cmp
xorb
lret
xchg
and
adc
and
and
fwait
fwait
sbb
sahf
cmp
jno
mov
xchg
pop
adc
popf
out
sub
pop
mov
int
inc
cmp
push
add
int3
cli
dec
mov
loopne
push
sbb
jae
rcrb
pop
dec
push
rorb
icebp
adc
xor
jnp
xchg
imul
sbb
sub
xchg
jb
sbb
mov
dec
nop
add
sbb
aaa
daa
adc
and
sbb
xor
insl
jle
cmpsl
std
inc
sub
mov
jmp
sti
in
repz
popf
cltd
fcompl
insb
adc
dec
fistpll
lds
fistps
pop
leave
in
pop
add
add
sbbb
add
popf
pop
loope
add
mov
mov
xor
nop
rcrl
repz
dec
test
and
idivb
sbb
sar
fucomp
adcb
push
mov
loope
sbbb
in
nop
into
jo
jp
and
cmc
jg
sbb
aas
fists
ds
pop
cmp
sbb
sti
xchg
dec
inc
es
loop
xchg
out
cmp
adc
pop
add
stos
icebp
cmp
test
fnstenv
or
jge
fldenv
sbbl
pop
sub
jle
mov
cmpsb
jne
push
aas
shrl
pop
scas
push
push
push
mull
jg
shrl
ret
inc
add
dec
lcall
jecxz
scas
in
and
das
cld
loope
mov
cmpsb
jo
stos
cmp
mov
sub
cmp
push
sbb
adc
xor
clc
faddp
mov
mov
push
cs
pop
mov
hlt
dec
pusha
rcll
mov
out
movsl
mov
pop
cmc
pop
dec
xchg
lods
sarl
pusha
jge
fsts
shufps
decb
jecxz
xor
xchg
out
mov
xorl
loopne
xor
mov
fnstsw
and
outsl
lret
cmpsb
xlat
mov
inc
and
shlb
mov
bound
sbb
pop
popa
shlb
mov
push
lods
rorl
bound
lods
les
push
push
data16
mov
adc
inc
sbb
inc
dec
xor
nop
divl
clc
xchg
add
es
pop
adcl
aas
mov
sub
insl
dec
outsl
cmpsl
cmp
sahf
ret
dec
xor
jecxz
outsl
xchg
mov
in
pusha
push
inc
mov
pop
dec
ret
mov
dec
aaa
xor
frndint
mov
test
dec
shlb
fimuls
lret
push
inc
insb
fidivrl
and
jg
cmp
xlat
inc
mov
mov
xlat
sahf
frstor
push
pop
cmp
jae
fistpll
nop
cs
pusha
lods
jno
rcr
cmp
pushf
stc
insl
ficoml
sbb
dec
mov
xor
pop
xchg
lock
sahf
inc
mov
fistl
movb
push
js
ja
adc
scas
leave
inc
sub
fadds
xor
lock
ja
adc
xchg
and
ret
or
popf
jae
imull
cld
lret
loope
mov
xor
push
lahf
in
ss
xchg
adc
aad
lahf
push
icebp
out
mov
loope
mov
add
sub
mov
mov
mov
int
and
mov
jbe
sub
xor
jecxz
pop
iret
movb
mov
xlat
mov
or
push
ja
mov
outsl
dec
lds
add
or
adc
or
or
aam
test
rcll
inc
add
pop
fildll
adc
xchg
pop
inc
xor
add
fisubrl
or
sbb
xchg
popf
leave
inc
push
xor
rolb
fcomps
int
inc
xchg
dec
mov
add
test
pushf
jecxz
sahf
mull
mov
push
xchg
mul
xchg
mov
out
shll
xor
xchg
add
cs
sbb
mov
push
lds
mov
push
xor
inc
outsb
pop
data16
sahf
mov
lods
cmp
mov
repz
fdivp
lcall
daa
out
out
cmc
icebp
pop
cli
dec
and
nop
out
mov
xor
mov
and
push
and
adc
cmpsb
testb
dec
adc
pop
adc
jl
mov
sbb
in
jnp
loope
daa
popa
mov
enter
push
cmp
test
xor
loopne
jno
mov
adc
orb
out
push
mov
inc
cmp
arpl
sub
and
mov
dec
call
mov
and
jb
dec
jl
inc
mov
dec
bound
cltd
jg
jo
clc
dec
dec
mov
scas
dec
int
int
daa
and
cmp
lods
push
xchg
les
aad
arpl
in
mov
les
dec
stc
mov
lcall
xchg
mov
jb
sbb
insb
pop
add
pop
mov
mov
xor
fidivrs
rolb
hlt
lods
push
es
mov
pop
pop
pop
fcmovnu
imul
iret
sbb
adc
int3
je
pop
mov
and
outsl
ss
mov
mov
mov
sub
inc
mov
mov
sub
rorb
inc
jno
lods
sbb
jmp
xadd
pop
xlat
sub
and
dec
or
lcall
xchg
adc
test
outsb
lcall
cmp
iret
mov
and
jp
mov
jmp
test
inc
cld
test
ss
inc
into
cwtl
repz
or
push
push
movsl
and
xor
inc
and
and
int
jns
sbb
jnp
dec
xor
pmaddwd
or
sbb
std
xlat
gs
out
pop
push
add
push
sbb
and
sub
xchg
xchg
cld
jg
out
dec
mov
add
mov
jg
or
mov
pop
add
scas
add
sub
dec
jno
leave
in
push
or
loopne
pop
add
lds
idivb
les
pop
xchg
cmp
imul
test
lods
add
push
sub
rcrb
mov
and
inc
mov
mov
rcrb
xor
std
sub
mov
imulb
jbe
pop
push
movsl
xor
movsl
std
mov
daa
adc
inc
pop
pop
push
sub
xlat
xchg
inc
outsl
frstor
push
xchg
pop
xchg
add
dec
fstpt
imul
das
dec
pop
loope
inc
mov
shr
in
and
pop
cmp
mov
std
sub
outsl
subl
icebp
es
xchg
pusha
mov
jge
dec
or
mov
fidivrs
dec
push
jns
pop
ja
add
sbb
fwait
or
jo
sbb
pop
adc
add
adc
stc
hlt
bound
jl
in
xor
dec
loop
xchg
insb
imul
cmp
jno
and
andl
lcall
ret
mov
push
mov
lock
lahf
push
xor
aad
insb
mov
mov
lcall
cwtl
add
jl
mov
sti
movsb
xor
dec
mov
xor
and
add
adcl
pop
cmp
sarb
mov
ss
scas
ror
enter
mov
sarl
ljmp
aas
xchg
or
sbb
push
arpl
outsl
pusha
jae
cmpsl
push
cmpb
mov
jge
mov
out
xchg
pop
fcmovnbe
subl
pushf
xor
lea
mov
cmp
stos
lds
jbe
cmp
pop
mov
mov
mov
les
stc
loop
pop
insl
pop
push
imul
dec
sti
xor
mov
loop
push
sub
sub
push
cmpsb
cld
fdivrl
subb
les
jae
xchg
dec
fidivrs
mov
insb
jo
aad
dec
gs
sahf
xor
pop
fdivrl
xchg
lods
dec
mov
or
jp
int
in
or
pop
sti
pop
sub
clc
es
test
sbb
shr
push
sti
inc
jns
fists
int
mov
dec
dec
mov
int
dec
rol
add
out
outsb
xor
fisubs
mov
jle
aaa
out
sti
sbb
addr16
out
mov
or
into
add
push
out
dec
or
lods
cmp
insl
inc
fisttpll
repz
mov
mov
daa
or
or
cmp
cmp
sti
in
pop
mov
repnz
adc
bound
shr
into
add
mov
jno
inc
std
rcrl
cmp
popl
out
inc
pop
push
or
mov
inc
add
push
incb
jmp
lret
mov
insl
lods
in
adcl
sub
inc
dec
sbb
xchg
cmpsb
out
sub
mov
xchg
dec
xor
jo
jl
insl
lahf
sbb
adc
jle
into
xchg
sbb
push
or
stos
adc
fdivl
cmp
fs
mov
xchg
pop
inc
rclb
push
adc
mov
inc
mov
stc
in
pop
cmp
test
sub
add
xchg
ja
lret
lahf
mov
jmp
or
lret
push
mov
or
ljmp
hlt
leave
push
test
mov
sti
imul
aad
dec
fistpll
pop
push
jne
push
out
xchg
loopne
add
cmc
push
jno
pushf
mov
xor
inc
add
sub
jl
jl
repnz
and
inc
xchg
shlb
add
aad
cmp
pop
ljmp
mov
and
mov
fimuls
jae
mov
push
xchg
cmp
lods
movsl
jnp
or
in
push
dec
std
xchg
add
pop
test
push
lock
pop
ja
addr16
jns
scas
test
mov
stc
loop
mov
adc
jg
inc
sarb
pop
mov
scas
out
jle
xchg
daa
mov
leave
or
dec
cwtl
arpl
test
xor
push
or
mov
mov
xchg
jnp
mov
dec
mov
call
rep
jne
sbb
mov
das
jnp
fdivrs
mov
daa
add
dec
pop
mov
sbb
popa
movsb
in
mov
pop
fs
inc
pop
out
aas
cmp
jnp
inc
add
jns
pop
sahf
inc
leave
inc
push
lret
ror
imul
shrb
bound
ljmp
sti
fwait
jge
mov
and
and
add
hlt
cmp
xchg
fabs
dec
adc
jbe
rcrl
insl
bound
test
pop
test
xor
pusha
sub
out
add
push
push
jmp
dec
adc
mov
psubb
jmp
jl
mov
xor
movsb
sub
jae
dec
shlb
jle
cld
fisttps
scas
out
test
mov
popa
call
xlat
dec
enter
jae
xorl
addb
nop
ret
push
push
xchg
outsl
jmp
mov
jg
mov
scas
push
lods
jne
lret
mov
das
rclb
inc
ja
jl
mov
mov
mov
cmp
or
xor
movsl
imul
repz
mov
sub
popa
xor
leave
xor
xlat
int3
push
popa
inc
inc
gs
xor
sub
mov
or
test
out
lret
je
push
es
out
pop
push
cmp
xor
pop
push
adc
dec
sub
fiadds
push
aam
mov
xor
or
push
movsl
aas
jp
add
icebp
xor
cmp
add
xor
ret
shrb
push
stos
mov
out
out
jo
cmp
pusha
adcb
jecxz
scas
and
sar
jno
inc
and
dec
out
inc
jmp
sub
sub
out
ret
stos
inc
and
les
lock
mov
xchg
pushf
jl
mov
fadd
sarl
inc
lret
jmp
fsubrs
or
hlt
lcall
xor
pop
test
cmp
scas
pop
sub
in
int3
pop
mov
cmp
pop
stos
inc
bound
sub
mov
outsl
lahf
loopne
dec
cmp
sub
mov
mov
add
xchg
sti
cmc
cmc
sarl
adcb
pop
sbb
xchg
stc
dec
in
xchg
mov
lds
push
pop
shl
lock
cmp
mov
pop
add
ret
mov
lahf
mov
out
fisttpll
push
data16
jmp
cmp
or
jl
mov
mov
arpl
insb
pop
scas
test
xchg
stos
push
rorl
addr16
imul
cld
outsl
les
repnz
cmp
mov
lret
sti
sub
xchg
pushf
push
adc
orl
stc
popf
gs
les
push
rcrb
inc
rorl
popf
dec
stc
test
mov
lret
push
sahf
filds
xlat
insb
cltd
pop
pop
cld
cmpsl
inc
test
or
lahf
push
imul
xorb
test
mov
jp
nop
loopne
scas
sbb
dec
ret
stos
mov
pop
xchg
test
push
lcall
fstpt
daa
mov
ds
fdivrl
pop
decl
sub
cmc
and
cmpsl
js
mov
ds
ja
pop
fistpl
cltd
out
xlat
cs
xchg
psubsw
dec
pushf
push
mov
es
xor
add
clc
and
lret
mov
out
fistpll
mov
sbb
add
movsl
insb
or
mov
push
inc
push
aas
cmp
mov
cmpsl
jnp
cwtl
enter
mov
push
loopne
xchg
jne
sahf
jecxz
adc
js
sahf
test
cmp
insl
test
dec
cwtl
bound
xor
add
aas
je
roll
aam
inc
mov
repz
sbbl
loop
cmpb
inc
push
rolb
psubd
movsb
mov
imul
hlt
mov
jnp
pop
scas
jecxz
mov
add
dec
xor
aam
mov
imul
movswl
pop
test
push
sbb
mov
mov
icebp
popa
adc
add
repnz
push
sub
or
inc
int3
mov
fidivl
push
cs
jnp
or
add
loopne
inc
in
push
adc
mov
int3
daa
sarl
outsb
aam
mov
adc
ret
test
xchg
sub
mov
outsl
xchg
das
xchg
mov
and
data16
xchg
cli
mov
cmp
daa
pop
dec
add
cmc
mov
in
pop
jno
mov
mov
pop
les
aaa
cmp
aad
lods
pop
aas
add
pusha
xor
in
cwtl
roll
das
jbe
or
clc
and
pop
pop
imulb
fadds
xlat
sub
outsb
jb
data16
cmp
xchg
cmpsl
inc
mov
ret
xor
mov
pop
enter
fists
nop
sbb
add
pop
ljmp
add
xchg
push
push
push
pop
push
mov
out
inc
inc
sbb
push
jmp
push
aad
push
mov
mov
push
aam
or
lods
cmp
fstp
out
xchg
jecxz
sbb
or
icebp
mov
in
mov
scas
jl
out
jno
les
fstpl
dec
xchg
xor
jmp
dec
sahf
fs
daa
mov
inc
sarl
mov
push
dec
in
rclb
rol
push
adc
mov
dec
je
mov
sbb
mov
test
sbb
pop
in
sbb
mov
divb
jnp
jg
imul
call
push
push
and
pop
stos
std
sbb
and
lret
mov
sbbb
insb
mov
flds
lock
cmp
cmp
fistps
ja
in
dec
ljmp
mov
inc
adc
lret
lock
das
push
int
push
jecxz
sub
push
test
mov
dec
cmp
incl
popf
pop
je
mov
fcompl
fucomp
je
ja
xlat
mov
jecxz
sbb
dec
sub
jge
push
jnp
xchg
sub
push
sub
sub
in
mov
and
lahf
lock
xlat
loope
xor
ss
jp
out
lds
jbe
mov
xchg
push
sbb
jle
dec
add
cmpl
fistpl
aas
mov
push
mov
loope
adc
enter
mov
sub
jp
mul
fwait
ret
pop
cs
inc
roll
stos
popl
imul
push
and
sbb
dec
gs
sbb
iret
sbb
mov
aas
cld
cwtl
or
cld
inc
mov
lcall
stos
repz
and
inc
sub
jb
mov
je
and
push
jmp
xchg
ljmp
lods
jae
test
popa
incb
notb
imul
mov
xor
into
mov
sbb
xchg
mov
aam
mov
sahf
mov
cmp
xor
dec
lcall
pusha
sahf
adc
shll
mov
lock
ret
lret
loope
filds
sbb
dec
push
cmp
fwait
jge
mov
cmp
xchg
or
cmp
call
repz
cmp
cltd
xchg
jnp
call
ljmp
ja
adc
mov
push
and
idivb
insl
es
stos
jo
scas
and
outsb
cmpsl
shll
jb
mov
sbb
rcrb
cmc
lods
test
enter
xchg
iret
cmp
lock
jle
pushf
mov
test
adc
mov
fsubrl
xchg
xchg
mov
dec
jl
dec
or
xchg
and
lret
mov
mov
test
ss
pop
loope
loopne
enter
loop
and
mov
popf
sub
sti
arpl
mull
lods
fldcw
cmpsl
sbb
data16
jbe
out
adcl
inc
add
or
lods
jp
dec
loopne
or
arpl
stos
cmpsb
mov
xchg
pop
fwait
cmpsl
repz
mov
mov
sbb
mov
inc
adc
shll
nop
mulb
repnz
js
jmp
dec
or
cmp
xchg
daa
sub
mov
or
jmp
sub
lea
fisttpl
dec
push
inc
aam
lods
mov
mov
je
xchg
push
shlb
bound
int3
sbbl
rcr
sub
outsl
stc
cmpsl
and
mov
and
cli
pop
mov
je
push
mov
mov
mov
imul
jg
int3
sarl
lret
lods
aaa
cs
pop
or
nop
or
ss
out
mov
loope
out
pusha
insl
mov
imul
sbb
push
pop
jns
aad
xchg
pop
mov
sbb
test
adc
pop
inc
jle
shl
and
mov
push
inc
xchg
push
sbb
test
loop
push
add
daa
movsl
sub
sub
sbb
or
adc
lea
push
adc
popf
popa
ja
sub
dec
lea
xor
out
aaa
std
mov
addr16
adc
dec
xor
sub
sbb
sub
int3
aas
pop
into
mov
pop
lret
nop
jo
repz
leave
fiadds
or
jnp
hlt
lock
xchg
shr
mov
arpl
test
add
sbb
loope
mov
mov
addr16
rorl
frstor
mov
and
pop
xchg
sti
cmp
jnp
in
pop
dec
cld
pop
push
scas
sbb
cmp
cs
xchg
cli
dec
fwait
sahf
xcrypt-ctr
cmpsl
fwait
jle
xchg
jb
test
push
andb
into
xor
push
pop
cs
pop
sub
or
pop
adc
sub
xlat
inc
and
out
xchg
cltd
mov
mov
insb
fistpl
add
cmpsl
icebp
push
and
or
inc
outsl
sti
jp
pop
sbb
xlat
or
push
adc
xchg
hlt
pop
dec
pop
or
loopne
pop
jnp
dec
add
pop
roll
test
add
clc
jo
out
inc
inc
cli
mov
xchg
inc
adc
test
fadds
mov
cmpl
pop
push
push
test
xchg
in
in
aas
sub
std
xor
or
adc
lock
push
loop
in
sbb
jge
or
xchg
gs
and
mov
iret
test
je
push
outsl
outsl
dec
xor
cmp
int
add
out
cmp
xchg
xor
ljmp
lock
fldz
sub
enter
pop
aaa
and
lahf
dec
sbb
mov
push
pop
repnz
mov
pop
inc
adc
out
fsubrl
cmpb
mov
xchg
testl
jb
pop
inc
gs
js
aam
mov
push
xchg
out
xchg
enter
mov
fcomps
cld
je
inc
mov
les
xor
or
loope
adc
or
sbb
sub
shrb
fimuls
rcll
sub
mov
jb
scas
jge
lcall
loop
push
mov
fists
in
scas
dec
push
xlat
mov
out
sub
pushf
cs
and
imul
push
xlat
cmp
sahf
cmc
nop
je
fcmovbe
mov
aaa
ret
scas
or
bnd
mov
cs
fmulp
mov
in
in
inc
xchg
add
inc
push
mov
xchg
add
mov
or
fstpt
push
nop
and
or
xchg
jno
std
in
in
insb
sub
lret
pop
cmp
aad
clc
mov
pop
testb
outsl
ljmp
mov
add
fdivrl
les
lahf
mov
or
sub
sub
lcall
addr16
inc
leave
xchg
sub
fldenv
push
fwait
xchg
in
xor
or
adcb
mov
cltd
jae
dec
out
add
icebp
and
and
sub
sbb
scas
mov
shrb
mov
rol
pop
mov
mov
nop
mov
xor
jmp
jle
jbe
mov
into
sbb
je
add
ljmp
and
adc
sbb
arpl
insl
jae
jb
mov
or
in
test
imul
dec
and
cmp
daa
fidivs
cs
les
jg
cmpl
mov
imul
shr
rorb
jg
xchg
xchg
roll
dec
mov
xchg
inc
dec
adcb
sti
cmp
arpl
mov
popa
cli
mov
fcoms
mov
lds
xchg
add
cli
outsb
and
cld
jb
int3
ds
insl
sub
mull
in
movsl
nop
push
cmpsb
gs
sbb
int
lds
push
mov
out
push
nop
pop
push
fisubrl
mov
or
aad
xchg
inc
fs
hlt
dec
xor
jns
test
shrb
or
mov
rcll
in
pop
imul
out
fnstsw
dec
or
push
mov
sbb
add
int3
inc
pop
imul
dec
cmp
mov
into
cmc
inc
cmp
xor
mov
push
sbb
jbe
or
lahf
arpl
sub
xor
push
popf
xchg
mov
lcall
mov
pop
jmp
mov
lret
sub
inc
pop
xchg
shll
imul
sbb
and
mov
pop
jmp
clc
pop
roll
inc
leave
in
xor
xorl
xor
inc
xor
cmp
daa
dec
mov
arpl
pop
xchg
test
int
inc
xchg
inc
insb
push
xor
mov
lea
fstpl
rorb
and
push
imul
or
sarl
mov
sahf
jp
fldcw
jb
stos
adc
pop
sbb
repz
jae
shl
insl
pop
adc
mov
into
roll
fistps
add
cmc
cmp
jns
jmp
cli
inc
test
in
jo
call
in
jno
cs
sub
push
icebp
mov
les
popf
xor
pop
mov
pop
adc
sbb
inc
scas
fs
fwait
imul
out
mov
mov
push
jg
stos
mov
push
stos
sub
pop
fisttps
cmpsl
std
repz
and
fcoms
imul
sbb
push
ficompl
mov
jne
inc
int
shlb
push
ljmp
sbb
jmp
stos
adc
adc
adc
dec
je
sbb
and
mov
orb
ljmp
cmp
sub
mov
xor
xlat
dec
dec
negb
mov
ljmp
jl
dec
push
sbbb
and
mov
scas
mov
cmp
xchg
scas
leave
push
pusha
jle
xchg
leave
movsb
clc
fbstp
out
stos
fcmovnb
hlt
mov
fists
mov
cld
lods
push
mov
or
psrlq
fdivs
cli
lret
lahf
cld
test
js
xchg
sbb
loop
cmp
push
stos
cmp
fmuls
mov
aaa
and
adc
loopne
and
lret
mov
nop
shlb
push
sbb
cwtl
cmp
cmp
out
mov
ljmp
push
mov
xchg
push
cmp
jge
lret
in
inc
mov
int
xchg
cmp
mov
adcl
mov
lret
mov
sbb
xor
mov
or
into
jmp
pop
loop
xchg
push
gs
push
cmp
test
repz
hlt
movsl
mov
ficompl
xchg
movsl
fucomip
in
add
subl
push
push
push
and
xor
jle
jne
xor
push
push
xor
inc
jo
mov
mov
imul
fdivl
or
out
jae
mov
xor
outsl
lock
dec
pop
leave
pusha
into
fnsave
iret
sbb
andl
ds
in
inc
or
mov
adc
mov
adc
sub
fnstcw
jg
sub
lret
iret
mov
sub
adc
fadd
cltd
jno
inc
std
scas
mov
shrb
ljmp
cmp
jecxz
cmc
push
call
pop
mov
insb
into
push
cmp
mov
orb
dec
mov
arpl
cmp
pop
and
lods
pop
cwtl
fisubrs
adc
lods
jae
sbb
jns
and
loopne
mov
xchg
js
cli
jmp
xor
in
mov
es
xchg
inc
decl
lock
cmp
xor
inc
shrl
xorb
cmpsb
pop
xor
jecxz
mov
in
stc
and
test
jmp
jns
adc
pop
stc
mov
add
out
mov
adc
mov
test
xor
xor
mov
ja
mov
stos
cs
popf
in
mov
add
imul
mov
stc
add
stc
pop
and
ss
xlat
imul
out
jb
or
mov
popa
xchg
movsl
jbe
insb
add
fisubs
adc
loopne
inc
cli
xor
mov
mov
inc
cmovns
out
jno
and
bound
std
push
jecxz
loopne
adc
inc
out
and
ret
lcall
and
mov
subl
jl
jmp
scas
rcrb
scas
push
push
pmaxub
imul
cmp
fwait
pop
pop
out
outsb
cmp
or
mov
in
negl
push
and
sub
clc
test
sbb
es
xchg
insb
outsb
push
xchg
int
dec
jle
or
xchg
mov
jle
mov
and
push
cltd
lahf
and
movsb
popa
flds
pop
mov
push
add
addl
inc
aaa
dec
lods
test
pop
or
loop
push
inc
js
int
enter
in
inc
inc
add
outsb
dec
outsl
xlat
jge
or
stc
cmc
pop
jno
repz
mov
mov
add
test
iret
roll
jne
jnp
mov
push
pop
xlat
cmp
xor
mov
mov
pop
sub
mov
mov
add
loope
inc
call
xor
sbb
mov
sti
fs
notl
aas
push
cmp
mov
int3
inc
inc
loope
in
stos
adc
inc
mov
call
and
xor
cmp
push
jmp
or
int
mov
loop
mov
jle
aas
or
rolb
push
push
mov
pusha
dec
gs
mov
adc
inc
sub
inc
inc
sbb
inc
xchg
les
mov
sub
jae
aaa
call
loop
shll
shll
cmp
lds
jno
cli
sub
jl
mov
cmp
xor
add
sub
fbstp
in
fyl2x
push
cmp
sub
sub
sub
mov
ret
fldt
bound
aad
jecxz
jg
fmul
daa
popf
ds
push
cmpsl
push
vmwrite
fwait
mov
add
dec
xchg
add
xchg
xor
mov
cltd
insb
push
arpl
cmpsl
mov
and
sub
pop
loop
inc
mov
dec
adc
and
daa
aam
insb
sti
sub
adc
jl
inc
jo
lret
pop
mov
push
out
jge
or
cmpsl
cmc
xor
outsl
inc
lea
dec
dec
ss
pop
xchg
test
cmp
xchg
mov
int
add
mov
cmc
cmc
movsl
xchg
mov
movsl
pushf
test
std
dec
cld
fcompl
sti
in
sub
cmp
pop
loop
mov
adc
xor
stc
pop
sub
add
ficomps
fprem
jns
fsubrl
pusha
ja
leave
push
jmp
das
push
fidivl
mov
daa
pusha
lods
jle
jle
bound
adc
out
inc
inc
push
mov
leave
jg
movsl
lret
test
repz
mov
insl
lea
cmpsl
filds
cld
pushw
dec
jbe
fcomps
jb
sub
leave
or
adc
jnp
jge
mov
push
leave
out
jecxz
punpckhdq
xchg
test
ret
insb
xor
lret
jl
stos
push
pop
xchg
roll
push
adc
dec
adcb
int3
andl
js
lods
mov
fucomp
cli
jno
lea
ds
and
jl
xor
jbe
les
imul
inc
fadd
sub
sti
push
sub
fildl
xchg
xchg
sub
lcall
dec
push
jmp
mov
stos
or
push
loope
stos
mov
mov
js
sbb
insb
repz
cmp
hlt
sbb
cmc
sbb
fsubs
jo
pop
int
ds
mov
xchg
out
jmp
cmp
dec
cmp
enter
movsb
mov
push
push
or
repnz
sbb
xchg
or
pop
cmp
imul
sbb
cmpsb
aad
pop
add
xchg
lock
pop
sahf
addl
add
pop
jnp
cmpsb
xchg
psrlw
movsl
and
cli
js
mov
xlat
out
inc
aam
and
js
insl
and
mov
sub
jne
icebp
jbe
sbb
mov
and
dec
imul
pop
lret
pop
vmovhpd
cltd
xchg
cltd
lods
lret
subl
push
bound
dec
inc
stc
bound
and
jae
lcall
aam
and
sub
outsb
push
sbb
mov
sub
shll
mov
sbb
fcoml
movsb
adc
loopne
out
lea
mov
xchg
insl
push
fdivrl
push
dec
inc
cwtl
push
jmp
outsl
lea
loope
pusha
mov
outsb
outsl
imul
sub
sub
test
sbb
mov
cmp
rcrb
popf
int
into
pop
lods
nop
ja
cltd
not
add
adc
je
pop
ds
loopne
mov
lret
pop
dec
mov
sub
arpl
push
or
sti
xlat
xor
ss
jmp
rcrl
jbe
int
scas
imul
xchg
jmp
test
xor
jbe
inc
fwait
ljmp
cmp
xor
cli
jno
cmp
mov
ds
mov
push
lea
lret
test
jne
iret
jg
scas
and
push
movsb
es
repz
dec
sub
inc
arpl
rcrl
int
dec
mov
adc
inc
scas
faddl
lcall
sbb
jl
sbb
sbb
sbb
test
out
jb
int3
lret
cmp
xlat
clc
cltd
inc
jns
add
scas
cmp
aas
xchg
in
fisubrs
push
mov
pop
sbb
je
sub
cs
inc
test
stc
push
mov
xor
movsb
adc
psllq
mov
mov
sub
mov
ss
push
adcl
mov
lcall
add
dec
jno
test
fnsave
fistpl
out
lods
ficoml
xor
pop
ss
xchg
call
hlt
add
jl
movb
pushf
icebp
or
fidivrs
push
mov
cmpsl
sbb
rclb
mov
gs
push
mov
imul
jne
inc
jbe
loope
mov
aam
inc
pusha
shlb
stos
int3
js
lret
fwait
enter
dec
adc
push
or
mov
popa
push
jae
jne
cwtl
adc
mov
inc
jns
das
mov
pushf
push
bound
dec
sbb
mov
scas
gs
sub
push
shll
mov
outsb
mov
int
xor
in
out
movb
lret
cmc
iret
jno
dec
ljmp
outsb
orb
push
push
rorb
push
arpl
xchg
subb
add
icebp
ljmp
lods
jae
mov
xor
aam
mov
mov
jno
add
adc
push
int3
out
shrl
and
je
jp
mov
or
or
cmp
jle
or
cwtl
xchg
test
mov
push
dec
call
mov
mov
in
inc
lea
mov
es
out
jbe
icebp
popa
nop
adc
add
data16
iret
pusha
lods
jnp
add
sbbb
adc
pop
adc
sbb
xlat
mov
mov
and
pop
je
sbb
ret
mov
mov
scas
inc
in
popf
test
rcl
cmp
in
ljmp
stos
pop
imul
movsl
hlt
dec
mov
mov
loopne
test
add
xor
xchg
xchg
cmc
xchg
cs
stos
add
sarb
mov
xchg
sbb
rol
test
fldt
mov
cmc
push
sbb
dec
lahf
insl
sbb
leave
out
jle
imul
dec
xor
xchg
xchg
mov
sub
sbb
sub
rcrl
pop
int
pusha
push
ljmp
pop
dec
fwait
in
aad
cmpsb
icebp
rcrb
or
pop
js
jmp
incl
fwait
jp
sub
arpl
mov
and
fwait
jno
stc
jno
fxch
dec
ss
sti
and
add
cmp
aaa
mov
lea
pop
mov
sarl
lret
add
dec
std
mov
xchg
pop
xor
sbbl
push
das
or
dec
mov
or
lock
adc
jmp
mov
xchg
push
in
fcmovne
scas
in
mov
sbbl
aaa
outsl
scas
lahf
jg
daa
leave
dec
popa
aas
negb
jecxz
outsl
pop
mov
xor
and
cwtl
out
adc
adc
cwtl
dec
push
pop
jecxz
pop
ds
inc
inc
les
sub
jno
pushfw
add
pushf
add
pushf
decb
loop
cli
into
imul
or
dec
jbe
idivb
xor
fwait
cmc
jae
or
imul
out
mov
jg
xchg
and
xchg
dec
inc
imulb
or
mov
mov
jg
lock
jns
arpl
xchg
jo
fisubl
xchg
dec
mov
out
mov
jge
outsb
mov
cltd
lods
pop
push
mov
adc
imulb
jge
fisubrl
mov
xchg
je
mov
pop
and
or
outsl
pop
xorb
adc
out
dec
mov
les
cmpsl
and
pop
fisubs
inc
ja
pop
dec
sub
outsl
sahf
lods
inc
jecxz
jno
mov
jns
inc
outsl
mov
pop
scas
fmul
pop
int
imul
xchg
xchg
xchg
jns
loopne
mov
or
scas
add
scas
add
mov
fmulp
mov
adc
pop
jns
test
int
sub
pop
mov
jecxz
jl
jle
fsubs
xrelease
pop
daa
xor
cltd
pop
sbb
sbbl
ljmp
push
leave
xchg
addr16
pop
dec
push
push
cmpsb
cmp
push
mov
pop
lret
fstpt
pop
negb
xchg
leave
sbb
push
push
pop
push
mov
push
mov
rcr
in
push
fneni(8087
or
mov
jae
pop
dec
xor
sbb
xchg
push
mov
adc
jle
push
loope
jbe
mov
das
loopne
xchg
add
xchg
cmp
xor
mov
punpckldq
xchg
mov
inc
cs
mov
push
pushf
push
pop
pop
daa
pop
sbb
cmc
ret
lea
ret
mov
call
outsb
iret
xchg
jecxz
cmp
mov
xchg
mov
mov
movsl
and
jmp
test
mov
lret
in
push
sub
outsb
xchg
repz
repz
xlat
cmp
add
push
pop
lods
or
fildll
add
xchg
xchg
xchg
xor
xor
out
jns
jb
fadds
scas
cs
jno
add
xchg
cmpsl
call
sbb
adc
xchg
push
push
jns
inc
leave
shrb
xchg
push
cmp
mov
sbb
sub
mov
hlt
mov
jl
aad
pop
adcb
es
fsts
mov
xchg
mov
mov
cmp
mov
mov
ret
out
fmuls
mov
test
sub
mov
call
xlat
les
cltd
mov
push
sub
clc
fbstp
rcll
inc
xchg
cwtl
fsubrl
inc
lods
ljmp
add
popf
fisttpl
xchg
jns
je
js
mov
xchg
iret
xchg
stos
jo
mov
stos
jns
dec
insl
fbld
jne
sub
cmp
jmp
push
sbb
icebp
pushf
mov
cwtl
xor
ljmp
mov
mov
or
scas
pop
mov
call
push
pop
gs
fisttps
adc
jg
std
mov
mov
xor
dec
adc
test
lret
cmpsb
pop
add
cmp
sbb
mov
scas
je
lods
or
mov
vpunpckhwd
pushf
sbb
mov
xchg
dec
push
mov
jbe
xor
push
das
pop
ds
mov
popf
mov
sahf
std
xchg
ds
ds
nop
sahf
push
or
sbb
cmp
cmp
sarl
ffreep
and
pusha
mov
sub
jne
lret
shll
pop
fnstcw
in
lods
dec
fcoms
xor
lods
clc
shll
enter
popf
xor
mov
push
popf
and
mov
daa
push
push
arpl
adc
adc
jp
sub
inc
dec
sbb
mov
xchg
jmp
push
xchg
arpl
sub
bound
outsb
fistpl
sub
fists
jecxz
out
rcrl
nop
xor
out
aaa
loopne
cld
or
mov
pop
movsl
mov
xor
jb
movsl
jmp
inc
jbe
push
enter
adc
hlt
pop
repz
inc
inc
int3
and
cmp
xor
adc
add
cmpsb
test
test
cmpsb
ret
cs
jne
jbe
jmp
outsb
scas
mov
in
pop
mov
repz
jb
add
push
aam
xchg
xchg
leave
and
xchg
das
movsl
ja
sub
repnz
rolb
cltd
loope
and
jb
or
insb
in
dec
push
dec
or
test
xor
adc
sbb
movsl
out
das
cmp
inc
push
jle
mov
inc
xor
in
ljmp
dec
popf
popf
mov
movb
repz
dec
stos
das
int
movsl
adc
faddl
lret
lahf
test
pop
lods
test
push
xor
dec
and
int
in
mov
and
cwtl
mov
loop
mov
mov
movsl
mull
repz
aaa
mov
sahf
pop
pop
sbb
mov
dec
push
or
mov
dec
daa
mov
ret
lea
push
sbb
jge
ljmp
jno
repnz
cmp
mov
aad
mov
insl
pop
or
mov
mov
loope
or
sub
insl
mov
aaa
adc
imul
cli
divl
aam
dec
addr16
push
inc
iret
adc
sbb
js
fwait
ret
mov
sbb
push
ret
mov
xorb
cmp
aas
inc
xchg
les
cmp
clc
andl
pop
ret
mov
sbb
sbb
push
pop
sub
sub
sbbl
cs
fcmovnbe
icebp
int3
fsubl
popf
mov
stos
in
xchg
les
gs
pop
push
dec
adc
lds
inc
and
stos
mov
out
scas
sahf
mov
xor
adc
decl
dec
mov
sbb
sub
movsb
sahf
test
pop
jno
jle
and
dec
testl
ss
cmp
and
dec
pop
sbb
ss
ret
aam
lret
jb
fisttpl
and
jle
fucomi
mov
jne
xchg
cld
mov
ds
pop
push
cmp
test
xchg
pop
adc
mov
and
dec
pop
out
mov
sarl
jecxz
into
mov
lahf
add
mov
shll
loope
jle
shl
scas
push
in
jmp
mov
cmp
xlat
mov
imul
sub
mov
xchg
aam
cmp
out
sbb
fsubrl
and
xlat
adc
and
gs
jle
mov
insb
sub
add
xor
jae
add
fwait
ret
mov
adc
dec
ret
pop
xchg
jo
repnz
jo
mov
add
xchg
loop
leave
xor
mov
push
imulb
icebp
loope
xor
push
pop
dec
cmp
inc
sub
sahf
mov
and
dec
gs
sbb
pop
sub
inc
insl
in
xor
lods
add
fdivrl
xchg
mov
out
cmpsb
insb
sub
movsb
not
pop
mov
mov
push
push
jb
outsl
mov
pop
pop
xchg
xor
sbb
call
xor
push
nop
fildll
sbb
add
push
fdivl
or
add
outsl
popa
xchg
out
rcr
mov
aas
leave
add
cwtl
lds
xchg
jnp
mov
jne
stos
clc
cmp
imul
mov
fldenv
adc
sbb
xchg
gs
aad
loopne
stc
push
movsb
cmp
or
fnsetpm(287
out
push
es
clc
movsl
add
aas
std
cld
xlat
test
mov
lcall
bound
push
inc
lcall
loop
leave
push
mov
xchg
scas
inc
jo
arpl
in
cli
popa
jle
jmp
xchg
xlat
clc
dec
bound
xor
pop
or
fs
add
lret
mov
pop
test
test
fadds
add
clc
jmp
cmc
iret
orb
xchg
push
lret
daa
loopne
lea
jae
int
adc
xchg
sarl
dec
pop
shlb
out
cs
sub
push
lret
lock
mov
movsl
lods
ljmp
push
scas
sub
adc
inc
cmpsl
and
xchg
cld
inc
lret
outsb
jns
sahf
ljmp
xchg
icebp
in
mov
lret
fidivrs
xchg
mov
mov
mov
mov
push
inc
out
in
fdivrs
jecxz
mov
es
gs
or
mov
push
lods
mov
or
and
cwtd
push
shl
inc
call
xor
mov
mov
out
test
test
sysexit
std
jl
mov
sbbb
std
iret
xchg
aas
sti
or
cmc
and
out
scas
loopne
add
dec
push
movsb
movsl
das
mov
jb
sub
sub
les
dec
xchg
cmpsb
dec
add
sub
pop
inc
xor
cmp
fstpt
mov
ret
jne
dec
jle
andl
rorb
popa
setnp
mov
pop
push
mov
add
icebp
sub
mov
xor
xchg
jmp
xchg
inc
popf
insl
pop
inc
sub
cs
test
hlt
inc
aam
cmp
lock
popa
rorb
es
pushf
sub
cs
sub
enter
push
hlt
rcll
testl
out
orb
adc
sub
sub
aad
insl
lds
add
cmp
fiadds
out
rcll
add
mov
lahf
or
push
popa
rol
cltd
sbb
push
shl
sub
jl
adc
xor
nop
push
and
loope
inc
mov
fiaddl
daa
popf
inc
adc
or
pop
mov
gs
mov
add
pop
sbb
push
xor
push
push
insb
cltd
mov
not
fildl
pop
test
fsubrl
dec
cs
imul
in
stos
jmp
inc
fdivrs
jecxz
je
jb
xchg
sti
xlat
mov
inc
jae
mov
fisubl
incl
pop
jno
adc
pop
mov
nop
fists
fld
sub
lock
or
sarl
pushf
ds
inc
mov
popf
sbb
push
or
aad
jae
cmp
push
push
and
cmp
sbbb
xor
xchg
in
pop
fists
mov
test
xorl
outsl
imul
sub
roll
sub
mov
adc
add
jne
lahf
sahf
imul
sub
pop
lret
or
xor
int3
lea
stc
ret
xchg
into
push
movl
pop
into
pop
iret
notl
daa
shll
sub
mov
sbb
shlb
push
icebp
sub
push
sbb
stc
lret
imul
dec
iret
cmp
fcom
and
cmp
xchg
outsl
jl
mov
aad
gs
iret
enter
fimuls
mov
icebp
dec
jp
dec
imul
rcll
mov
cmp
pop
shll
fwait
aad
mov
xchg
sti
cld
xchg
xlat
ret
popa
and
pop
pusha
fwait
mov
arpl
xor
push
call
shlb
and
bound
aas
dec
inc
fcmovb
fadds
cmpsl
test
aam
gs
sbb
insl
pop
shr
ds
sub
shlb
add
and
addr16
inc
loop
insb
popf
in
cltd
push
sub
pop
mov
mov
dec
pusha
inc
push
xchg
ja
outsl
jne
icebp
mov
pop
xchg
mov
jmp
in
cld
add
dec
out
in
xchg
push
mov
cmp
sbb
scas
xchg
sub
sbb
pushf
inc
jecxz
jp
in
mov
sti
outsl
or
std
inc
lret
add
call
xchg
in
mov
jnp
mov
lods
arpl
lock
cs
sub
mov
sbb
js
mov
adc
push
push
sbb
or
fdivrl
cmp
stos
fldcw
pusha
jmp
inc
mov
mov
jl
stos
push
popa
in
inc
stc
mov
imul
lods
lcall
idivl
xchg
movb
jo
xchg
mov
jne
cmc
ret
sbbb
hlt
enter
xor
das
in
sub
dec
or
nop
pop
test
cmpsb
repnz
add
pop
xchg
inc
sub
mov
mov
inc
xor
dec
cld
mov
add
xor
mov
cmp
fstpt
sbb
sbb
pop
or
test
sub
sarl
dec
dec
mov
in
arpl
incl
jmp
sbb
in
aas
ret
cli
scas
sub
sbb
andb
ds
scas
aas
mov
cwtl
mov
add
scas
es
dec
aas
movsb
jno
pop
add
mov
outsb
out
jmp
test
push
sbb
adc
cmp
pop
lods
les
push
sub
push
stos
or
dec
aas
push
push
mov
aad
and
sub
xchg
or
sub
or
push
sbb
jmp
dec
rcll
dec
subl
es
mov
cmpsb
inc
faddl
adc
cwtl
add
std
loop
mov
fnsave
mov
push
fbstp
mov
dec
pop
mov
mov
in
jmp
pop
pusha
mov
cmpsb
pop
out
sbb
mov
mov
decb
shlb
ljmp
add
cs
mov
lret
out
push
dec
jns
pop
lcall
adc
jo
fsubrs
jge
lock
popa
movsl
outsl
loopne
pop
dec
fisttps
imul
push
sarb
cmpsb
pushf
adc
test
sbb
popf
mov
or
cli
dec
jno
pop
stc
mov
lock
call
pusha
mov
adc
insb
mov
addl
aam
stos
scas
mov
mov
mov
lods
or
into
jno
pushf
sub
imul
sbb
jbe
push
data16
xor
lock
stc
jp
loopne
leave
iret
outsb
mov
into
sub
aad
pop
movsb
loope
pop
pop
loop
outsb
popa
jno
aas
nop
test
cs
push
sti
mov
idiv
cli
xor
rcll
out
jge
cmp
sub
iret
dec
adcl
int3
in
mov
jne
cmpsl
sbb
mov
xchg
insb
or
mov
xor
adc
cmp
mov
mov
outsl
pop
ror
loopne
pop
lret
xor
js
cmpsl
pop
stos
jb
pop
inc
inc
adc
loopne
jp
pop
xchg
adc
scas
data16
in
mov
xor
icebp
sbb
popf
iret
sub
aam
aad
cmp
adc
push
adcb
mov
mov
push
pop
mov
stos
sub
cmp
xor
xchg
sub
int
xchg
sar
lds
nop
imul
add
xchg
mov
rorb
cmp
push
adc
xchg
and
jmp
jl
cli
xor
notb
repnz
cld
rorl
pop
cltd
insl
jne
lods
jb
jl
movsl
das
mov
test
movsb
jecxz
or
gs
adc
imul
and
xchg
loopne
mov
dec
lea
stos
and
int3
and
cmp
push
test
stos
mov
fwait
push
mov
and
inc
or
push
lcall
add
subl
mov
and
mov
sahf
shlb
sbb
testl
test
out
enter
add
or
mov
mov
inc
cmp
pop
inc
add
xor
jecxz
inc
lock
orl
test
pop
lahf
add
js
lock
lods
inc
fsub
jp
inc
arpl
dec
adc
mov
pop
insb
insb
inc
insb
add
mov
sbb
mov
insl
add
data16
scas
decl
repnz
nop
rcrb
mov
int3
mov
inc
mov
test
scas
push
xchg
cmp
sub
pop
mov
mov
jne
sbb
pop
mov
xchg
shl
sbb
jno
neg
cs
fsubrs
add
mov
push
xchg
cmpsw
popf
mov
jg
fmuls
fcoms
pop
xchg
aaa
imul
inc
xor
popf
sti
adc
add
cltd
push
pop
xchg
lods
dec
cmp
xchg
cmp
jno
sti
iret
jmp
mov
xor
outsb
scas
lds
mov
dec
cmp
es
sbbb
gs
stc
lret
div
dec
rorl
xchg
xchg
cmpsb
xchg
sbb
lds
push
sbb
mov
inc
jb
mov
cwtl
ds
pop
shlb
or
mov
xchg
fs
push
or
loop
jecxz
lret
mov
stos
mov
sub
pop
pop
pop
iret
outsl
mov
lahf
imull
pop
push
iret
dec
and
push
pop
in
nop
and
xchg
jne
out
inc
pop
decl
mov
jle
packssdw
stc
sti
pop
es
mov
mov
jae
js
pop
fisubs
sub
movsl
imul
push
lods
cmp
dec
push
out
sahf
inc
cmp
int3
fldt
sbb
neg
lock
scas
stos
iret
js
mov
aas
pop
cli
pop
iret
jl
push
adc
in
loopne
aas
cmp
mov
push
mov
lret
sbb
sbb
shl
dec
pop
das
ja
test
or
push
call
repz
fcmovbe
sub
pop
shll
outsl
ficoml
pop
mov
dec
leave
dec
cmpsl
testb
ret
cmpb
jae
shlb
mov
jg
and
fwait
cltd
test
add
mov
jle
hlt
mov
inc
jle
fdivr
cltd
mov
jae
fwait
add
in
cmp
nop
cmp
cmp
bound
cmc
pop
pop
and
ss
leave
jp
xchg
mov
dec
jg
push
inc
xor
ss
and
pusha
loopne
add
clc
sahf
ds
xor
shld
inc
or
mov
adc
in
jecxz
sbb
ror
xchg
jns
pop
lret
and
in
dec
push
push
xchg
outsl
ret
jmp
jmp
lea
popf
mov
mov
mov
outsl
sti
cmp
sub
pop
int3
sbb
xor
lds
popf
sub
ss
jp
cmpsb
jb
sub
sbbl
push
sarb
xchg
stos
mov
add
lods
aaa
nop
popf
lods
popa
inc
pop
push
cmpsl
mov
enter
pop
addr16
push
movsb
xor
aad
xor
stc
pop
jnp
shrl
cli
push
and
xchg
rclb
mov
xchg
jnp
or
es
and
and
add
movsl
mov
ja
mov
jg
mov
fistpll
leave
mov
aaa
aas
push
popf
pop
in
dec
push
ficoml
mov
mov
out
out
dec
lock
fwait
cmp
lods
in
sbb
dec
dec
in
or
inc
add
mov
dec
aas
ja
xor
sbb
outsl
ja
popa
push
push
lret
repnz
js
mov
pop
sub
adc
into
mov
lods
jnp
addr16
sub
scas
roll
subb
adc
fadd
push
jecxz
push
aaa
sbb
iret
stc
xlat
in
mov
popa
mov
cmp
cmp
fwait
jp
dec
or
dec
gs
pop
xor
sti
rol
xorl
loopne
dec
jmp
rorb
pop
test
fisttpl
aad
mov
or
mov
outsl
std
sub
or
fs
sub
roll
jl
outsl
pushf
jb
or
femms
jmp
cmp
das
fdivp
mov
dec
aaa
out
jecxz
mov
xor
push
add
in
imul
bound
int3
xlat
jmp
xor
cmp
mov
imul
addr16
dec
addr16
enter
pushf
mov
xor
push
jmp
xchg
mov
aaa
ret
notl
mov
and
jbe
out
add
sbbl
xor
push
arpl
icebp
test
add
int
sub
lds
and
adc
mov
mov
icebp
aaa
stos
sbb
adc
mov
stos
dec
push
aas
push
movsb
adc
ret
repz
xchg
sub
adc
jge
jge
adc
jl
mov
scas
das
mov
mov
aad
mov
sti
sub
jae
jl
fimuls
cmp
sbb
cmpsl
sbb
movsb
add
nop
push
out
adcl
ljmp
shl
bound
mov
jmp
outsb
shlb
mov
cmp
cmp
sbb
cli
aad
fisubrs
fimull
cmp
push
sahf
jl
add
cmp
loop
and
ja
je
imul
dec
in
xchg
stos
test
jle
enter
jle
insl
cmp
sahf
insb
imul
icebp
jg
mov
inc
push
or
stc
popf
inc
or
pop
inc
and
dec
dec
mov
arpl
das
dec
cmc
push
ljmp
cmpsb
adcb
push
xchg
xchg
xor
jne
scas
mov
mov
pop
scas
or
cmp
gs
push
scas
or
mov
addr16
cltd
mov
es
cmp
adc
xchg
cmc
jp
cmp
add
orl
addr16
jo
push
movsb
movsl
pop
add
jae
push
xor
jb
into
inc
mov
scas
rolb
sbb
xchg
sub
sub
and
sbb
push
scas
sub
mov
lahf
cmp
mov
push
fsubl
sbb
fistps
jnp
push
xchg
mov
add
mov
xchg
cmp
mov
lock
sbb
popf
mov
or
ja
movsb
cld
pushf
cmpb
mov
iret
sahf
int3
sarb
adc
sub
ds
mov
cmp
push
dec
inc
ja
or
jg
imull
hlt
jl
movsl
test
jbe
lock
sub
and
and
out
es
dec
leave
ret
cwtl
sbb
xchg
dec
jge
adc
das
xchg
jne
aam
aam
ret
test
lds
imul
pop
mov
sbb
movsb
imul
in
mov
jg
sub
add
clc
loope
int
add
push
aaa
jne
xor
nop
add
and
jns
repz
roll
sti
add
fcomp
mov
outsb
rol
mov
je
mov
stos
or
aaa
sbb
cs
in
je
or
cmp
fbstp
mov
xlat
daa
mov
sbb
push
adc
lahf
xlat
mov
push
jmp
adc
fisttps
fcomps
mov
push
and
push
popl
hlt
sub
roll
icebp
lret
mov
push
inc
and
imul
cmp
dec
xchg
bound
out
xor
pop
jg
or
sbb
dec
pop
lods
nop
adc
dec
clc
movsb
cmp
jmp
push
push
rorb
adc
cld
xchg
fcmovnb
push
mov
pop
xchg
cwtl
roll
daa
pop
jne
addr16
data16
jnp
adc
xlat
push
push
mov
and
dec
mov
lret
xchg
loopne
xchg
mov
mov
jnp
popf
ret
push
out
mov
mov
mov
mov
bound
aam
imul
inc
sbb
aas
cwtl
xorb
push
sbb
add
sub
cmpsb
lcall
loop
pop
out
ss
xchg
inc
or
and
mov
xchg
mov
ficompl
pop
std
xlat
out
push
ja
mov
mov
dec
push
mov
nop
inc
xlat
or
mov
pop
adc
adc
repnz
je
xchg
add
mov
inc
mov
stos
pop
inc
mov
aam
ss
mov
pop
bnd
fcompl
stos
lret
loope
cmp
jecxz,pt
hlt
pop
lret
sbb
inc
cmp
sbb
mov
mov
jb
int
sar
out
and
out
cmp
bnd
mov
cmp
or
sti
or
enter
gs
pop
inc
insb
add
jne
call
in
xchg
stos
jmp
inc
and
out
sub
dec
fsubl
lret
ljmp
push
hlt
cmp
es
int3
mov
rcll
xor
push
rclb
dec
jg
icebp
mov
add
aam
xlat
pop
add
push
not
das
xor
mov
frstor
shlb
mov
fsubrs
outsl
lods
lock
cltd
dec
das
dec
adc
mov
popa
add
dec
mov
std
and
cmp
cmp
int
rcll
add
aas
fldenv
or
sti
mov
imul
les
push
aas
adc
loop
and
mov
mov
cmp
stos
test
pop
call
aam
popf
sub
mov
jl,pt
shll
jnp
das
inc
in
call
fsubr
js
or
xchg
testb
sub
jns
repz
cs
mov
insl
mov
push
xchg
cmp
adc
outsb
add
pop
fldz
rorl
rol
imul
xor
mov
dec
mov
jge
aaa
cmp
jp
jae
pop
dec
ficoml
out
rorb
jp
push
lods
xchg
and
cmp
out
or
nop
push
outsb
movsl
cmp
push
add
notl
ss
mov
lock
sbb
mov
inc
andl
dec
adc
mov
xchg
in
xchg
lcall
shrl
scas
add
popf
out
push
movsl
test
je
pop
insl
scas
mov
cmc
fimull
mov
xlat
dec
mov
jg
call
iret
push
push
sbb
jmp
sbb
stos
scas
loopne
xor
cwtl
and
jge
add
subl
jnp
xchg
mov
fimuls
and
inc
gs
pop
sbbb
sub
and
sub
cld
das
dec
iret
pop
push
imul
mov
inc
fucom
push
int
jae
int
test
pop
sahf
ficomps
sbb
sti
lret
in
push
dec
mov
sti
jle
repnz
popa
jo
inc
inc
or
pop
mov
dec
pusha
inc
mov
icebp
ss
out
negb
pusha
sahf
dec
es
and
jne
rclb
or
cmpsb
mov
xor
sub
subb
popa
insb
adc
cs
push
mov
jnp
mov
addr16
mov
stc
aad
xor
or
pop
add
sti
mov
lock
bnd
pusha
add
pop
inc
xchg
xchg
xchg
jg
aad
push
mov
loope
inc
pop
ror
dec
jnp
and
mov
notl
inc
or
cli
pop
push
mov
out
mov
mov
push
mov
in
xor
mov
iret
cmp
mov
cs
int3
push
jge
inc
or
xchg
fstpl
mov
sbb
xchg
xchg
dec
je
fcomps
pop
sbb
outsb
and
mov
mov
push
in
sub
arpl
jno
daa
adc
sbb
iret
fs
arpl
mov
out
cwtl
mov
or
jmp
rcr
mov
insb
xor
cmp
adc
rolb
dec
nop
mov
test
xchg
aaa
mov
sbb
xchg
orb
and
rcr
jge
jne
sbb
push
movsl
pop
lods
xor
rcr
popa
jo
pushl
adc
decl
mov
mov
das
mov
mov
jnp
stc
fsubrl
pop
out
rol
push
outsb
outsl
out
fsubrl
sahf
loop
or
xor
xchg
push
jp
add
push
aaa
jl
or
or
int
test
pop
jmp
es
push
imul
dec
pushf
repnz
ficomps
pop
int
xchg
or
mov
dec
gs
adc
mov
leave
sbb
mov
cmpxchg
sbb
cmp
push
insl
xchg
into
cli
pop
lcall
lods
inc
aaa
divl
pop
je
xchg
fs
cwtl
loopne
adc
push
sbb
mov
cltd
and
inc
scas
xor
pop
jecxz
add
inc
mov
xchg
xchg
sub
daa
in
imul
or
addb
add
int
mov
jne
in
mov
mov
scas
and
adc
sbb
jbe
and
jg
rolb
out
cmpl
push
or
jp
fisubrl
insl
add
enter
fildl
dec
imul
sub
aad
pop
push
outsl
mov
stos
mov
pop
rclb
fnstcw
ss
sbb
jmp
inc
push
in
rolb
lret
inc
rcrl
lcall
fisubrl
dec
push
inc
dec
push
cli
sub
xchg
js
cmpsb
jb
mov
or
add
int3
add
andb
adc
divl
xor
mov
mov
xor
aas
leave
xlat
int
or
aaa
addl
divl
in
push
loopne
popa
xlat
repnz
rcpps
cmpsl
mov
mov
in
push
cmp
call
pushl
cmp
adc
sarl
sbb
push
data16
push
insb
add
dec
adc
or
arpl
mov
cmp
push
repnz
cmp
jno
pop
outsb
aaa
adc
cli
sbb
inc
out
lds
mov
push
xchg
ds
ficoms
cltd
dec
nop
cmp
or
sbb
clc
nop
cmp
mov
cltd
mov
push
enter
inc
cwtl
add
or
outsb
fcmovnu
and
fldenv
outsw
inc
mov
pop
push
enter
ja
pusha
fsts
mov
dec
xorb
in
lods
dec
xchg
sti
mov
pop
addb
jno,pt
subl
fcmove
cmp
or
sarl
mov
adc
and
jecxz
pop
cmp
inc
icebp
or
stos
loope
add
pop
insl
leave
out
cmpsl
or
aaa
add
loope
mov
pop
gs
pop
and
cmp
out
jmp
or
sub
pop
add
pushf
or
cli
aad
repnz
sub
push
das
iret
int3
lods
jmp
cmc
or
sub
negl
outsl
pop
subb
cltd
stc
test
test
repz
add
icebp
jge
cld
ret
sbb
cmp
das
jo
push
sbb
aaa
and
mov
pop
lods
push
aas
sub
and
popf
imul
fbstp
lea
or
ss
cld
cmc
sahf
dec
or
mov
push
in
out
inc
testb
xlat
add
mov
sti
sub
arpl
add
push
push
push
in
ret
push
cli
aad
xchg
cmp
mov
out
inc
shl
aam
xchg
cmpsb
cwtl
jecxz
sbb
sub
and
pop
cmc
sahf
mov
jno
loop
dec
xchg
mov
rorb
cmp
cmpsb
fcmovnu
std
addb
insb
inc
das
pop
and
iret
jg
jb
or
sbb
popf
ficoml
push
call
addr16
xlat
inc
xchg
cmp
jne
lcall
ret
xchg
push
mov
push
jl
test
imul
lods
int
inc
fwait
sbb
rcl
mov
fwait
clc
pusha
fsub
push
mov
cmp
insl
sub
lcall
jmp
mov
mov
rcl
or
hlt
fwait
xor
lods
cltd
sahf
xor
push
jle
mov
loope
pushf
or
jp
sbb
sub
aad
mov
lods
jne
mov
cmpsb
or
aad
inc
fisttpl
jge
add
int3
mov
std
mov
icebp
add
xchg
sub
adc
jno
mov
xchg
and
dec
imul
aam
ds
test
loope
test
outsb
test
jmp
movsl
pop
jle
lret
pop
push
insl
cmp
and
inc
inc
add
stc
outsl
mov
push
xor
add
hlt
xrelease
cmovbe
cltd
xchg
aaa
mov
push
push
popa
jge
pop
pop
jb
shlb
inc
and
mov
add
jl
jns
das
push
sub
arpl
dec
mov
pop
jnp
mov
jae
push
add
incl
fnstcw
mov
jmp
xchg
scas
repz
pop
dec
mov
xor
xor
and
icebp
or
test
mov
ja
repnz
sbb
cmp
aad
xor
push
sbb
sbb
shll
mov
cmp
sub
xlat
ret
fdivrp
xor
mov
pop
popf
sbb
inc
je
or
lods
sti
dec
pop
call
push
es
pop
outsl
stos
inc
xchg
lcall
std
test
aaa
xchg
adc
inc
xlat
jle
movsb
int3
mov
movsl
movsb
add
push
fldcw
cli
addr16
aad
mov
add
sub
and
cmp
jle
jno
add
mov
mov
sub
scas
inc
and
mov
iret
mov
clc
sub
int
cwtl
mov
shll
push
mov
popf
stos
add
xor
ljmp
shrb
sbb
inc
dec
xchg
mov
mov
mov
call
fsubr
pop
pop
xchg
adc
outsl
aam
jmp
push
in
cwtl
sub
or
push
push
fistps
jns
add
popf
repnz
fists
in
jo
fs
pop
inc
lds
lret
push
pop
clc
ficoms
mov
repz
xor
mov
dec
push
div
xchg
ret
push
arpl
xchg
jne
lahf
or
or
mov
inc
es
fwait
mov
cmpsl
cli
inc
dec
xchg
pop
ss
sub
pop
mov
push
aaa
imul
fwait
gs
iret
push
xor
push
fidivl
mov
leave
addr16
adc
test
add
jge
xor
mov
andb
push
gs
mov
push
xchg
mov
sbb
and
push
fists
jo
test
mov
icebp
stc
xchg
lds
addb
xor
dec
dec
add
ret
lahf
movsl
inc
xchg
imul
clc
cld
fdiv
icebp
mov
negl
mov
pop
ret
sbb
xchg
pop
push
pxor
push
arpl
sahf
push
sub
andl
in
mov
les
add
icebp
add
clc
pminub
idiv
iret
lahf
adc
and
cmc
ss
scas
pop
dec
dec
add
or
in
inc
mov
mov
xlat
cli
out
sbb
fildll
dec
cmp
jg
pushf
inc
icebp
pop
sbb
jl
mov
lock
sbb
faddl
stc
idiv
dec
push
push
mov
mov
mov
cwtl
stos
mov
lods
cmp
jle
fisttpl
pop
cmpsb
into
adc
mov
jg
xchg
cmpsl
jecxz
cmp
mov
in
iret
push
mov
dec
and
xorb
nop
mov
pop
and
dec
mov
stos
mov
mov
push
add
inc
or
push
rolb
int3
lahf
ficoms
sub
mov
mov
adc
in
xor
push
test
lret
shrb
inc
fnsave
jae
cmp
es
pop
stos
sbb
inc
leave
xor
in
mov
push
je
mov
outsl
out
dec
fiaddl
or
cmpsl
add
cmp
shll
push
stos
mov
js
inc
xchg
mov
aaa
jmp
repnz
test
insl
mov
out
jg
xlat
and
dec
popf
mov
xlat
jle
imul
jmp
in
push
mov
leave
movsb
sub
mov
pop
xor
sub
sti
or
in
push
outsb
int3
js
xchg
repnz
js
call
lods
push
lcall
dec
xorb
sbbl
jl
aad
fwait
dec
sti
add
scas
cmp
hlt
int
add
sarl
adc
jae
ffree
popf
fisubrs
add
push
and
pop
pushf
std
mov
imul
das
jb
add
mov
mov
push
mov
inc
call
pop
cs
sbb
adc
je
cld
fld
jno
int3
pop
ss
dec
int
sbb
enter
pop
loop
arpl
into
mov
push
pop
adc
test
dec
xchg
repnz
aas
inc
cli
or
jne
ljmp
fninit
push
mov
pop
in
inc
shr
mov
addr16
aaa
push
jbe
dec
or
loopne
hlt
jmp
int3
subb
js
jg
bound
and
mov
jb
pop
daa
dec
mov
mov
mov
push
int3
push
jnp
fldenv
leave
fnsave
mov
fsub
mov
ss
fidivrs
dec
xchg
inc
aas
add
xchg
inc
xor
int
or
pop
sti
fwait
ret
outsl
dec
add
es
cmp
bound
cmp
sbb
movsl
shlb
inc
push
mov
loopne
push
rorb
popf
int3
lret
lret
push
or
aaa
mulb
add
sub
je
fwait
and
sub
and
mov
mov
pop
jmp
dec
jmp
fdivp
js
test
es
jmp
mov
mov
xchg
stos
leave
decb
pop
xor
ljmp
dec
adc
jmp
add
sti
xchg
sbb
cmpsb
pop
lods
push
cwtl
pop
mov
aad
ret
fldl
pop
cld
push
inc
mov
and
mov
mov
mov
lahf
mov
dec
xchg
aas
dec
mov
push
ja
js
aaa
jne
movsb
ljmp
inc
rcl
sub
mov
ljmp
or
repz
movsb
pop
dec
call
hlt
outsl
fmull
xchg
popa
jae
and
rcrl
push
sub
pop
or
mov
pop
push
fadds
ja
test
mov
xchg
popf
nop
push
jbe
addr16
dec
push
mov
shrb
push
pop
xor
lock
addb
cmpsb
adc
push
xchg
pop
push
outsl
jb
ret
shlb
imul
push
out
sti
movsb
push
push
ja
fsubp
dec
xor
repz
jns
push
cmp
mov
enter
enter
lock
movsl
pcmpgtw
std
notl
test
push
shlb
icebp
cmp
lods
xchg
dec
lods
xchg
test
test
and
inc
mov
push
data16
mov
stos
pushf
mov
iret
insb
pop
mov
int
sbb
cmp
enter
adc
scas
adc
pushf
sbb
xchg
data16
pop
push
test
fdivl
xchg
addr16
mov
push
push
push
dec
cmc
jne
sbb
pop
sub
jb
sahf
in
mov
test
and
aas
ljmp
mov
and
shlb
push
xchg
and
jg
or
test
push
jae
sub
mov
testl
ss
gs
adcl
mov
in
out
in
mov
ja
inc
inc
mov
jle
lcall
push
push
pop
test
add
adc
ds
jns
int3
xorb
mov
enter
lds
ret
adc
clc
arpl
daa
lcall
sub
in
mov
fsubl
movsl
imul
mov
lods
mov
pop
ret
ljmp
in
data16
shlb
mov
inc
shufps
pop
xor
ja
mov
jbe
mov
imul
outsb
fildl
jg
mov
add
and
mov
aas
inc
ljmp
fstps
mov
fistpll
or
test
ds
add
nop
sbb
jmp
or
mov
les
rcr
xor
xchg
or
sti
pop
bound
and
aaa
stc
sub
inc
xorb
aaa
mov
data16
incl
or
add
and
cmpsl
mov
jmp
or
xchg
jmp
std
cmp
in
bound
inc
insb
scas
push
and
fdivr
sub
sub
jp
push
mov
and
push
into
insl
cmp
xchg
jp
into
loop
es
out
jb
sbb
push
sbb
or
sub
mov
mov
push
test
lods
movsb
int
mov
mov
sbb
adc
scas
jne
icebp
jmp
inc
sbb
nop
into
jae
push
jg
sub
out
fwait
les
jns
sbbl
and
pushf
add
fcomps
mov
fmuls
inc
dec
or
ss
push
aaa
adc
pusha
sub
xor
iret
jb
leave
cld
repz
adc
int
lret
mov
push
sar
sahf
sbb
pop
lret
jle
sub
mov
adc
test
and
ss
cltd
enter
adc
ror
jmp
shrb
es
push
orl
pop
fildll
aaa
sbb
movsb
inc
in
fisubrl
ret
xchg
inc
jne
fs
aad
and
int3
hlt
lahf
mov
pop
aaa
in
and
dec
popa
test
ret
lret
mov
test
or
inc
jmp
inc
jmp
insl
out
stos
sub
jge
and
pop
xor
out
sub
xor
rolb
sti
addb
push
inc
inc
lods
div
sub
pop
sub
repz
and
push
adc
shrb
xor
inc
mov
and
clc
pop
movsl
outsb
aas
dec
call
push
insl
adc
pop
push
stc
es
add
xchg
xchg
movl
movsb
pop
imul
jno
xor
js
inc
sti
pushfw
dec
cmc
fisttps
fisttpl
mov
sti
movsl
ret
pop
dec
or
jns
cmpsl
mov
mov
sbb
sti
lret
pop
fnstenv
out
jle
stc
inc
pop
dec
cli
es
das
and
sbb
mov
dec
ds
inc
jnp
rcll
mov
fadd
je
or
mov
mov
les
xor
in
sbb
inc
jb
add
xorl
cmp
stc
int
cmpsb
xor
xor
or
out
stos
rorl
imul
leave
xchg
jp
xor
xchg
xchg
daa
idivl
mov
inc
movsl
nop
shlb
mov
fidivs
push
and
and
jnp
push
jp
inc
lret
hlt
mov
push
out
incl
out
mov
dec
xlat
push
movl
jae
push
aas
jns
xlat
cli
push
out
rcl
pop
ss
pop
sbb
mov
pop
push
shr
jle
dec
rorb
mul
sbb
scas
clc
pop
and
push
push
sbb
jne,pt
cld
xor
add
cmpsb
sub
mov
dec
mov
scas
cmp
popf
out
popf
push
mov
repz
push
pop
pop
cli
inc
lds
into
mov
sbb
in
mov
in
jl
add
inc
or
add
popaw
xchg
loopne
loopne
cmp
xorl
sbb
push
xchg
stos
mov
adc
cld
dec
out
xor
pop
cmp
movsl
outsb
xor
test
fisubs
dec
jmp
andb
sub
sub
orl
loopne
les
jmp
or
lcall
jnp
inc
mov
test
and
dec
xor
xor
into
pushf
test
jno
push
and
out
xchg
mov
cmp
mov
incl
mov
cld
scas
cmp
pusha
fwait
xchg
bnd
sbb
mov
mov
mov
jmp
loope
mov
cmp
lcallw
push
add
push
stos
lds
xor
movsb
push
clc
loope
pop
xchg
jno
inc
mov
push
lahf
imul
cmp
add
inc
aas
lods
add
jle
mov
push
xorb
jb
gs
or
jb
sub
int
iret
lcall
push
subl
cmp
call
mov
mov
cmp
stos
mov
dec
lods
dec
mov
xor
push
push
ljmp
mov
test
cs
movsl
mov
push
xchg
adc
jecxz
div
stos
std
sbb
xchg
adc
sbb
xchg
jno
subl
test
add
sar
divb
dec
sbb
in
fnstsw
or
pusha
in
call
jp
sbb
mov
in
and
das
addr16
xchg
pop
add
xchg
fidivl
jg
popa
adc
lods
bound
jecxz
fistpll
mov
push
sbb
pop
rorb
or
mov
enter
fchs
jno
add
bound
adc
sub
push
mov
mov
inc
xchg
xor
add
mov
lcall
pop
call
dec
fs
mov
add
push
xchg
lret
pushf
lds
out
ljmp
sbb
aaa
ret
pusha
das
stos
and
jmp
mov
imul
in
outsb
push
test
jmp
in
movsl
xlat
cltd
sub
js
sarb
lods
sahf
rorb
adc
sub
pop
cwtl
pop
mov
xor
inc
and
mov
jae
sbb
pop
test
jge
inc
movsb
xor
push
loopne
fisubrs
and
int3
shrl
insl
int
cmpsl
into
push
cli
pop
inc
out
dec
sbb
shrb
lret
pop
lahf
call
dec
andl
enter
push
faddl
inc
xor
sub
fldt
in
loopne
jp
xchg
pop
enter
xchg
or
iret
movsl
cmp
addb
fsubr
icebp
fimuls
xchg
push
or
stc
push
push
pop
push
fcmovnu
sub
xchg
clc
shll
inc
mov
repz
popl
outsb
push
dec
in
stc
sbb
pop
mov
pop
insl
mov
sub
repnz
push
sbb
lods
pop
ret
mov
nop
in
mov
mov
int
movsb
hlt
xchg
ret
adc
dec
dec
idivb
in
mov
add
xchg
lret
pop
movsl
mov
mov
xchg
lock
jge
iret
dec
ja
imul
loopne
mov
xor
cmp
inc
js
dec
cwtl
mov
insl
enter
sbb
mov
sub
insl
jmp
pop
lods
add
loop
gs
push
out
sbb
adc
popa
jmp
sub
jnp
jb
bound
loop
adc
mov
sbb
mov
dec
mov
sahf
xor
insl
test
stos
xchg
cmc
hlt
sar
fsts
mov
jecxz
imul
aad
cwtl
std
cwtl
mov
mov
aam
xor
pop
stos
xor
cmpl
out
jle
xor
rcrb
cmc
xor
or
mov
dec
push
adc
ret
outsl
and
adc
mov
sbb
scas
push
inc
fstpt
pop
push
pop
add
jne
cmpl
pop
xchg
or
call
clc
test
mov
cmp
push
sub
ss
push
cmp
movsb
adcb
push
clc
dec
int3
or
add
xorps
jmp
adc
mov
outsb
test
jae
or
push
ret
mov
pop
dec
aaa
lock
cmpsb
inc
packuswb
iret
push
cmc
loopne
fnstsw
jno,pn
sbb
inc
loope
test
xchg
fsubrs
aad
mov
pop
ds
popf
sti
lods
sbbl
out
jge
js
xchg
test
clc
mov
fdivs
cmc
push
divb
les
les
push
pop
dec
push
dec
mov
push
shlb
outsb
in
jl
popf
cltd
rcrb
inc
jg
bound
jge
sub
bound
call
fcmovnu
cmpsl
inc
fidivl
sub
sahf
xchg
cmp
repnz
cmp
mov
mov
pop
inc
inc
scas
andnps
cmp
negb
dec
mov
std
xchg
inc
call
adc
out
stos
jmp
pop
ret
mov
insl
sub
mov
push
scas
jns
in
or
mov
pusha
mov
popf
das
iret
loopne
cltd
in
aas
nop
sbb
sub
pop
rclb
js
xor
test
or
dec
dec
jbe
cmc
jge
mov
cld
jmp
subb
mov
cmp
popa
cs
mov
loop
les
iret
or
cld
cltd
ds
andb
fiadds
mov
mov
cmpsl
mov
mov
aad
mov
scas
or
fidivs
outsb
ljmp
xor
jb
xor
insb
shrb
push
and
mov
mov
jo
test
push
aad
mov
stos
jb
loop
sub
or
lods
insl
cmp
add
out
icebp
das
insb
in
adc
sahf
mov
cld
xchg
movl
ljmp
push
cltd
adc
mov
xchg
or
cmpsl
repz
dec
inc
pop
cmp
repnz
pop
fimull
lahf
shr
mov
push
mov
fcmove
mov
lods
xchg
sub
push
pop
mov
or
je
sbb
out
aad
inc
pop
push
cmp
sar
mov
loopne
and
mov
lcall
sub
sar
incl
jbe
repz
pop
in
rcr
add
adc
mov
lods
xchg
out
push
add
scas
adc
aaa
rolb
and
sahf
cmp
mov
sahf
xorl
imul
sbb
adc
psubq
je
bound
clc
sbb
xchg
inc
sti
mov
in
daa
jmp
xchg
mov
xor
sub
xchg
cmp
inc
mov
xor
dec
xchg
lds
mov
and
adc
test
scas
mov
push
aad
jle
mov
shrb
xchg
or
cmpl
mov
and
inc
and
lods
out
mov
inc
xor
jle
inc
mov
shll
ds
repz
into
jns
xchg
push
mov
popf
mov
movsb
dec
mov
lret
mov
dec
mov
push
addr16
outsb
inc
add
push
bound
aaa
lahf
icebp
lods
push
lret
xor
dec
loope
imull
test
jl
jge
sub
shl
aas
ss
sbb
arpl
lods
cltd
cmp
fucomp
fists
pusha
push
outsb
sbb
das
jns
adc
mov
sti
scas
jmp
mov
imul
mov
outsl
xchg
andl
inc
pop
mov
icebp
inc
jbe
add
movsb
mov
cmpsb
cli
xor
inc
push
loope
jne
test
mov
es
ja
in
xor
out
cmp
sub
adcl
ds
jno
popa
xor
push
push
pusha
addl
inc
xchg
fstps
das
push
mov
sub
inc
pushf
lods
sub
push
lds
in
leave
les
sahf
loop
sahf
inc
and
dec
decb
push
insb
daa
cli
or
sahf
jb
cltd
mov
and
aaa
popf
push
fidivrl
jns
rolb
out
mov
mov
data16
push
mov
mov
inc
sub
mov
lret
or
pop
adc
test
sarb
jb
popa
inc
xchg
aad
add
not
icebp
call
xor
out
aas
lahf
inc
and
and
mov
pusha
fistpl
sub
mov
sarb
not
or
mov
mov
in
xor
jno
add
xchg
out
pop
lahf
test
xchg
jge
push
cmp
and
test
push
dec
daa
dec
jl
push
jns
and
push
sti
in
fnsave
add
cs
adc
jp
jmp
inc
jne
add
iret
mov
cmp
jg
test
dec
insl
sahf
cmp
stc
mov
aas
pop
out
lahf
enter
imul
repz
fsubs
cmp
dec
mov
cld
add
push
jp
fcmovbe
arpl
lret
add
dec
push
fldcw
je
xchg
or
mov
xlat
movsb
leave
insl
notl
adc
mov
xchg
cld
adc
lgs
nop
sub
popf
mov
imulb
or
in
mov
or
mov
lret
xor
lock
adc
in
rorl
or
xchg
jecxz
jns
gs
mov
daa
cld
add
nop
mov
shrl
mov
ja
inc
jno
imul
xchg
and
jns
push
stos
js
and
cmp
lea
push
xor
inc
aad
or
inc
ds
mov
jl
subb
out
inc
clc
mov
sbb
fldl
das
js
data16
mov
leave
adc
mov
sahf
sbbl
fidivl
adc
cli
and
xor
ret
pop
add
out
mov
and
mov
in
sub
outsb
push
out
push
popl
mov
jno
inc
push
pop
fsubr
mov
les
repnz
mov
popa
inc
push
pop
or
aam
ret
popa
inc
popa
push
jp
ret
popf
mov
mov
and
mov
sbb
cmp
pop
add
push
dec
add
rcr
inc
scas
xor
inc
mov
rolb
push
pop
sbb
add
mov
sti
shlb
inc
mov
xlat
cli
and
cmp
push
mov
insb
sti
fcmove
call
aas
pop
sub
icebp
jmp
xchg
js
or
and
movsb
xchg
mov
add
out
repz
dec
je
mov
mov
push
iret
orl
mov
sub
mov
inc
popl
les
or
dec
jb
or
roll
xchg
cmp
and
sub
loope
xorl
xchg
popa
sarb
sbb
popa
or
imul
out
lock
inc
fnstcw
jmp
lea
and
xor
inc
je
xor
shlb
repz
imul
aaa
lcall
mov
jnp
arpl
addl
dec
std
stos
xchg
or
xor
std
sub
inc
mov
scas
adc
mov
fwait
in
mov
jmp
movsb
test
mov
fdiv
les
and
xchg
mov
xor
inc
and
mov
cmp
cmp
adc
or
push
mov
dec
dec
xchg
jbe
push
and
das
fwait
pop
in
xchg
fcoml
gs
jl
cmpsb
dec
mov
leave
jo
aam
cmp
outsl
sarl
jl
mov
cmp
push
je
insb
bound
inc
mov
adc
aam
mov
pop
mov
stc
call
js
adc
loope
xor
rcrb
ret
or
xchg
mov
mov
aaa
and
cmpsl
nop
int
mov
xor
and
cmp
mov
test
aaa
movb
pop
add
testl
jecxz
cmp
add
inc
inc
test
lods
adc
add
mov
pop
fsub
iret
sub
sbb
xchg
test
hlt
push
aas
add
repnz
fldcw
dec
lret
sub
cmp
xchg
inc
sti
data16
fwait
mov
bound
mov
push
sbb
adc
mov
or
mov
add
add
sub
jmp
push
stos
inc
mov
xor
stos
jle
iret
push
stc
fdivrl
xchg
or
fsubs
test
sarb
pop
pop
movb
xchg
rorb
push
inc
sbb
into
xchg
les
sbb
sub
loopne
movsl
jl
mov
push
stos
lahf
jle
push
or
cmp
push
xchg
dec
test
cmp
iret
mov
sub
pushf
clc
push
fbstp
imul
ds
lcall
xchg
cmp
and
nop
scas
xchg
xchg
xor
pop
das
xor
or
add
adc
cmp
lods
data16
ret
push
xor
aad
cmp
lahf
inc
roll
cmp
inc
mov
in
dec
enter
and
nop
mov
in
inc
lods
and
outsl
mov
pop
mull
sub
js
icebp
jne
sbbb
sahf
xchg
jne
xchg
jecxz
addl
lods
xor
icebp
push
in
out
lods
dec
fdivl
inc
iret
std
sbb
push
pop
push
ret
addr16
cmp
out
subl
lret
hlt
xlat
std
xor
jge
pop
inc
out
lahf
mov
in
sub
cmpsb
xchg
bound
sbb
dec
scas
dec
orb
loopne
or
test
mov
mov
mov
push
arpl
mov
daa
addr16
jnp
inc
cmp
pop
or
mov
pusha
lock
sub
jnp
movsl
rcrb
jnp
mov
cwtl
pop
pop
pop
cmc
lret
fdivrl
test
mov
xor
adc
push
xor
inc
lcall
jbe
and
test
test
hlt
add
out
mov
and
push
or
cmp
inc
int3
xor
enter
lcall
push
fadds
xchg
and
adc
cmpsl
xlat
cld
pop
ret
jmp
pop
jecxz
jg
sbb
add
lea
adc
aad
or
sahf
imul
xor
jne
stos
into
mov
and
ret
inc
insl
xor
inc
jge
js
test
mov
mov
ljmp
shll
repnz
subl
addr16
mov
subb
addr16
xchg
sub
push
mov
cmp
not
fs
fcoms
movsb
sbb
cli
popf
stos
in
push
int3
cwtl
jmp
sub
scas
sbb
mov
push
adc
das
pushf
test
ja
push
inc
pusha
cmp
cltd
cld
inc
test
ret
pop
int3
enter
psubsw
xchg
push
dec
jle
stc
pop
jg
dec
test
sub
in
push
pusha
mov
xor
push
pushf
inc
loop
mov
call
mov
xor
lea
push
pop
scas
icebp
inc
mov
jp
iret
add
cld
shlb
jg
scas
andb
sbb
mov
lock
sub
xchg
ud1
xor
dec
dec
pop
fs
jl
jno
lods
fisttpll
aaa
mov
sti
and
mov
jnp
inc
lret
mov
es
popf
jno
clc
leave
xchg
ja
pop
pop
shll
andl
orb
dec
loope
mov
push
jne
lret
push
enter
sarl
dec
sbb
jae
aaa
xor
lret
clc
pop
push
mov
mov
inc
ficoms
jns
or
mov
ss
pusha
xchg
mov
fwait
into
cmp
and
lret
movsb
xlat
out
xchg
pushf
jl
pop
or
movsl
or
xchg
nop
stc
jmp
push
xchg
das
lock
leave
pop
push
loopne
jge
dec
and
pop
divl
push
out
mov
aam
fwait
jmp
and
xchg
add
inc
pop
cli
sarl
mov
aad
jbe
push
mov
mov
daa
enter
and
mov
repnz
mov
test
lcall
gs
add
mov
sub
xor
and
insl
inc
jle
xchg
out
and
lret
sub
jae
add
xchg
fs
push
js
test
inc
outsb
fists
std
mov
pop
sub
cmp
push
mov
shrl
dec
sbb
stos
or
sub
pop
sub
pushl
pop
sbb
ds
sub
push
in
aad
movsl
loope
clc
je
in
inc
lds
and
pop
sbb
mov
lahf
mov
std
mov
inc
jle
rclb
leave
push
sbb
cli
outsb
xchg
xchg
notl
rcll
cltd
cmp
lret
push
nop
out
es
jp
aam
add
fs
sub
push
lds
xlat
stos
nop
insl
daa
inc
movntps
std
outsl
movaps
adc
mov
negb
test
out
fxch
lods
leave
mov
sbb
lret
dec
je
aas
push
add
int
ret
les
test
repz
ss
in
mov
in
and
arpl
add
xor
sbb
jle
repz
test
add
test
ret
dec
jmp
icebp
mov
adc
std
in
add
or
lds
das
lods
int3
dec
es
cmpsb
lcall
jg
mov
xchg
inc
pop
cmpsb
push
cmp
sub
mov
xorb
in
push
xchg
sub
ret
or
pop
push
lds
dec
xor
pmaddwd
scas
push
divb
and
call
jbe
and
cmp
aam
mov
cltd
xchg
shrb
ficoms
cmpsb
mov
int3
out
fdiv
es
das
ret
ds
pop
ss
sub
insb
loope
shlb
movsb
or
push
ja
outsl
jne
jmp
xor
and
dec
in
popf
test
ffree
js
cmp
jecxz
lods
cmp
jp
jnp
ss
fs
push
xchg
mov
fiaddl
test
repz
lods
push
bndstx
sub
cltd
fstps
sub
cwtl
cmpsb
and
add
clc
mov
aas
sub
sahf
mov
call
mov
push
dec
add
andl
and
xchg
in
mov
nop
out
mov
add
or
gs
loopne
bound
sub
flds
sarb
mov
sar
cmp
mov
jp
adc
jno
push
pusha
mov
test
sub
addr16
leave
cmc
popf
insb
mov
lea
jmp
ret
into
gs
ljmp
arpl
bound
xor
cmpsl
int
scas
cmp
xor
xchg
fsubp
adc
movsl
in
sbb
ja
inc
pop
pop
dec
push
popf
adc
cwtl
jle
lods
outsl
je
jecxz
ret
inc
outsl
lods
inc
testl
loopne
repnz
push
add
add
in
xlat
push
cmp
cltd
aam
push
mul
add
pop
call
jmp
ret
add
dec
repz
jecxz
ss
cli
fistpl
jl
ret
loop
pop
fwait
outsl
clc
lods
gs
popa
and
test
cmp
cmp
cmc
js
push
and
mov
rcrb
gs
cmpsl
dec
mov
sub
cli
cltd
xchg
fld
negl
pushf
mov
jmp
xor
pop
int3
aas
mov
and
sbb
push
movsl
mov
dec
sbb
lret
cli
mov
push
ficompl
cld
jge
shll
push
movsb
inc
lods
push
mov
inc
mov
xor
jg
or
xchg
dec
cwtl
lcall
sbb
rolb
xchg
nop
lret
sub
mov
shlb
inc
push
daa
jb
mov
mov
negb
mov
repz
xorl
add
aad
xor
mov
sub
lds
xchg
dec
inc
ret
es
out
test
add
cld
sbbl
xor
repnz
int
mov
gs
cltd
popf
lret
repnz
mov
outsb
stc
mov
adc
sbb
sti
add
ja
sbb
cmp
sbb
jbe
push
jno
cmp
xorb
sub
xor
lods
add
adc
std
sbb
data16
imul
flds
loopne
lcall
and
mov
push
jp
das
sahf
dec
sub
xor
scas
ss
inc
sahf
test
aaa
imull
sub
push
inc
aaa
push
xchg
lret
fisttpll
test
xor
outsl
lret
sub
mov
cmpb
cld
jmp
out
ret
aaa
sub
inc
cld
cmp
dec
repnz
mov
dec
es
mov
jl
mov
adc
or
xchg
int3
add
imul
test
push
sbbb
aam
push
clc
jno
lahf
jns
xor
int3
adcb
out
mov
push
pop
mov
xchg
aas
add
imul
jle
sbbl
push
inc
int3
out
pushf
jp
nop
mov
xchg
ja
pop
or
sub
popf
jb
call
sub
in
pop
call
cmp
push
sub
lods
and
rcll
shlb
push
add
dec
sbb
xor
pop
pop
or
pop
adc
sub
cmc
cmp
outsl
orl
aaa
adc
daa
adc
or
les
pop
fnstcw
repz
test
test
cltd
xchg
daa
dec
filds
xor
or
lock
xchg
in
adc
adc
ds
dec
sub
inc
insb
aad
ljmp
xchg
jecxz
fidivrl
bnd
or
xor
fs
push
mov
adc
out
or
add
test
in
xchg
movsb
mov
mov
out
cwtl
inc
dec
adc
mov
nop
cwtl
mov
outsl
xlat
js
cmp
fistpll
mov
scas
dec
sbb
mov
cwtl
adc
ret
and
sbb
mov
mov
mov
mov
or
imul
mov
and
push
lahf
ret
sbb
dec
mov
insb
adc
clc
adc
and
and
mov
repnz
inc
pop
mov
inc
push
popf
pop
sbbb
jne
push
mov
arpl
cmpb
xchg
push
aaa
lods
in
dec
inc
inc
jnp
cltd
sti
sbb
aaa
sbb
mov
or
jp
mov
je
les
or
pop
cmp
adc
out
icebp
cltd
mov
or
jp
leave
dec
out
fnstenv
jmp
test
mov
ret
icebp
jb
sub
pop
out
std
jecxz
mov
and
js
inc
popf
lret
mov
cmpb
bound
pushw
repnz
pop
add
jecxz
add
mov
xlat
fsubr
mov
fstps
insb
in
fisttpl
sub
shlb
push
adc
xor
xor
aad
xchg
lret
xchg
mov
scas
jg
loopne
test
movsl
dec
loopne
int3
and
aas
add
int
adc
mov
sbb
mov
mov
mov
pop
mov
sarl
jbe
stos
roll
pop
cltd
or
jp
sub
cmpb
inc
test
mov
xchg
push
lds
ret
xchg
je
mov
adc
mov
scas
adc
out
lcall
dec
ss
inc
cmp
out
lods
cmp
sbbb
aad
xor
mov
insl
mov
cltd
in
cld
int
outsb
scas
adcb
xchg
ror
adc
pop
jg
inc
das
mov
jno
pop
sbb
les
mov
stos
outsl
aad
add
xchg
jae
add
int3
xor
dec
jmp
add
dec
lcall
mov
rol
lahf
popf
addb
fwait
sti
insl
jge
jbe
pop
fisttps
jg
hlt
xchg
jae
mov
push
mov
loop
addr16
push
add
jne
pop
imul
mov
push
mov
test
add
adc
popfw
scas
pop
fmuls
pop
lahf
add
into
pushf
jmp
sub
pop
pop
adc
mov
sub
jp
jno
fnstenv
inc
dec
jecxz
or
addr16
movsb
shll
daa
jo
rclb
dec
pop
and
jge
das
adc
sub
data16
test
push
les
xchg
enter
sbb
inc
ss
jne
sti
jno
js
push
xor
dec
xor
lahf
sub
push
lret
push
aad
cmp
popf
jo
pop
aaa
pop
mov
sub
or
out
minps
mov
mov
xchg
inc
cwtl
or
sar
dec
add
call
loope
mov
mov
fistps
cmpsl
sub
fimuls
decb
sub
push
mov
mov
cmp
xor
mov
mul
jge
popa
and
fildl
repnz
pushf
push
test
or
jno
cmp
test
push
fimuls
stos
dec
movsl
int3
or
mov
cmp
clc
les
add
pop
and
ret
js
pop
mov
test
hlt
cmp
int3
or
and
in
pusha
and
jns
cmp
push
xor
jecxz
mov
xchg
cmpsb
push
sbb
mov
and
ss
sahf
lods
jae
fmull
add
xchg
cmp
repnz
hlt
hlt
adc
stc
jbe
mov
outsb
nop
inc
push
adc
fmull
or
sbb
jg
sub
push
xor
dec
int
mov
insl
and
jmp
fldpi
divl
mov
aad
jns
pushf
sbb
cmpsl
ja
push
sbb
push
inc
ret
iret
mov
adc
clc
lods
sbb
fnstsw
mov
repnz
stos
add
push
lods
sub
sbb
jbe
inc
and
lcall
mov
jne
inc
mov
xchg
dec
and
int
in
sub
popf
and
scas
loope
fdivrl
pusha
adc
lock
ds
fucomp
push
mov
cmc
pop
push
sbb
shlb
fwait
mov
dec
dec
dec
mov
mov
int3
push
ss
mov
adc
pushf
mov
call
das
mov
mov
repz
aad
scas
fnstsw
cmpsl
pop
ret
mov
rorl
out
sub
pop
add
push
clc
xor
aam
out
mov
and
sarb
or
add
or
adc
mov
sub
inc
sub
xchg
jae
test
push
sub
dec
mov
test
or
push
cltd
mov
xchg
bound
cmpsl
popf
sahf
data16
push
insl
adc
mov
loope
sarl
mov
jmp
mov
lods
enter
mov
fcmovnbe
out
jns
ret
dec
fnstsw
cmp
bound
xchg
imul
mov
std
addr16
push
in
add
shlb
iret
outsb
addl
pop
xor
mov
pusha
insb
stos
dec
dec
shlb
out
iret
sahf
fisubrl
cltd
sub
or
loope
loopne
lds
and
stos
adc
int
push
and
cmpsl
xchg
xor
xacquire
dec
cmc
aad
push
insb
adc
stos
int3
add
mov
mov
fs
imul
into
mov
fnstenv
mov
cmpsb
lods
outsb
adcl
or
jg
ljmp
int3
pop
and
sub
in
ljmp
sub
mov
call
jle
or
lahf
cmp
insb
inc
mov
cmp
mov
mov
mov
cmpb
in
add
in
pop
or
imul
aad
insb
mov
int
pop
xorl
dec
shlb
mov
pop
and
dec
mov
stos
jne
incl
int3
int3
mov
fs
aam
pusha
cmp
out
inc
mov
into
ljmp
sub
pusha
fisttps
icebp
xchg
xchg
test
fmull
xor
add
outsl
push
jne
data16
mov
jnp
inc
sbbl
loopne
fists
popa
inc
divb
nop
inc
pop
insl
and
inc
pop
jns
mov
xlat
mov
out
leave
in
aaa
inc
mov
ljmp
xor
rclb
adc
fs
ret
pop
scas
js
pushf
in
repnz
fildll
mov
pop
imul
jp
jl
int
sbb
iret
int
lods
xchg
inc
jae
sub
cld
cmc
lcall
xor
mov
pop
jnp
rorb
in
xchg
daa
pop
inc
xchg
push
mov
leave
or
popf
sub
shrb
push
leave
add
cmpsb
test
in
push
hlt
jns
loope
pop
add
mov
enter
push
and
xor
mov
dec
test
clc
dec
pop
or
mov
sti
cld
adc
push
jl
jp
aas
jnp
jo
mov
push
sahf
xchg
pop
out
sub
idiv
mov
ret
leave
add
push
xchg
in
scas
outsb
add
fstl
leave
jo
sti
rcll
sub
ss
xor
mov
add
sbb
lcall
push
jb
lea
lahf
shlb
les
sub
in
mov
adc
jnp
sub
test
imul
cltd
push
add
movsl
shl
je
jp
out
inc
popa
xor
push
sub
xchg
dec
mov
scas
xor
daa
scas
and
cltd
out
or
into
arpl
sahf
in
addr16
call
lcall
adc
es
in
hlt
pushf
mov
cmp
shrl
sbb
shr
adcb
adc
adc
sub
cmp
mov
mov
insb
adc
mov
jmp
fdiv
loope
enter
loopne
adc
xchg
inc
testb
sbb
lods
mov
test
cmp
stos
xchg
push
ljmp
or
xor
test
leave
add
ficompl
andb
adc
ja
mov
dec
inc
xor
aam
arpl
sub
int
sbb
jns
fdivrl
scas
popf
fisubrl
popa
outsb
stos
cmp
xchg
mov
int3
xor
in
push
cmp
cmpsl
push
push
jno
outsb
imul
dec
clc
negb
out
fnsave
mov
sbb
ror
mov
outsl
mov
test
cmpsl
lahf
fsubs
inc
fcmovbe
jns
rcrl
shrb
mov
or
rorb
pop
push
and
xor
in
or
lock
sbb
dec
jmp
mov
jbe
inc
sub
mov
dec
sbb
arpl
shll
mov
add
sub
xor
cmp
mov
orl
andl
ss
out
xchg
sub
or
out
fidivrl
sub
mov
sti
mov
cld
shrb
aaa
mov
inc
repnz
or
cmp
jne
xor
cs
negl
jmp
dec
push
addr16
adc
enter
stc
outsb
push
push
aas
roll
push
dec
insl
sbb
mov
jo
jns
jbe
movsb
mov
mov
cmc
in
sbb
and
out
sar
sbb
iret
jno
inc
lds
insl
sti
fbld
jae
in
xor
jecxz
xchg
ja
pusha
std
out
pop
xchg
lahf
scas
in
push
test
out
jno
ljmp
mov
in
mov
dec
add
pushf
rsqrtps
lea
and
inc
jb
and
scas
jmp
jle
jae
cli
cli
push
jae
sti
data16
fisttpll
lret
fsubrs
mov
dec
xchg
pop
repz
out
pop
push
es
xor
shrb
pop
lods
fiaddl
sbbl
xor
iret
and
std
das
pop
pop
rcll
jnp
push
cmp
bound
dec
popa
sub
in
movsl
sub
iret
cmc
dec
std
imul
mov
mov
sbb
lahf
xchg
in
mov
adc
imul
lret
mov
bound
jno
jbe
daa
leave
add
xchg
data16
jmp
mov
rorl
out
mov
mov
int3
call
stos
cmp
ret
fs
mov
std
testb
addr16
mov
mov
negb
lods
arpl
cld
lret
xor
pop
ljmp
data16
mov
test
adc
or
mov
je
push
in
jmp
fmul
inc
push
jns
push
inc
cmp
push
cmp
inc
inc
jae
out
shrl
pop
cmc
mov
test
call
fucomi
sbb
rclb
adc
stc
mov
add
cmpsl
and
sub
jl
mov
cmpsb
repz
push
inc
lret
lods
adc
pop
push
ret
sbb
and
dec
pop
xchg
jns
xor
push
mov
sbb
movsl
xchg
jns
pop
pop
orb
mov
xchg
adc
xchg
idiv
incl
pushl
aas
inc
vpmullw
lea
das
ljmp
lods
insb
iret
or
cli
and
rclb
fsubrs
xor
and
cmp
cmc
data16
push
inc
dec
pop
adc
push
insl
shlb
mov
mov
fbld
xchg
ret
cmpsb
decl
std
xchg
adc
hlt
push
fcmovnu
and
jp
mov
push
push
outsb
ret
xlat
pop
push
jp
fdivr
shlb
mov
xlat
ret
iret
xchg
scas
popa
loop
mov
push
shlb
sub
inc
push
setnp
int3
xchg
daa
fwait
repz
and
nop
ffreep
inc
cltd
ss
repnz
int3
lahf
mov
dec
jl
aam
xchg
jnp
lea
repz
shlb
xor
js
push
sahf
fistpl
xor
lods
ds
test
in
adc
imul
or
add
mov
sbb
sbb
and
popa
pop
cmp
fisttpll
sub
insl
and
das
mulb
lcall
data16
mov
and
or
sar
gs
jne
popf
or
push
cmpsl
outsb
hlt
stc
arpl
in
popf
mov
clc
dec
jge
mov
adc
sub
rcll
stc
mov
jnp
sbb
or
fldl
movsb
cmp
rorb
mov
add
xchg
pop
xor
mov
add
inc
rolb
sbb
xor
add
daa
lods
push
fnstenv
dec
sub
dec
adc
add
loopne
mov
aad
mov
mov
or
loope
mov
cmpsl
mov
sub
loope
jge
outsb
test
inc
push
push
xchg
cmp
mov
pop
dec
out
cli
sub
mov
pop
lds
iret
push
ret
dec
jnp
orl
add
xchg
test
jp
mov
mov
xchg
or
out
pop
cmpsb
test
mov
sub
and
or
add
and
aas
add
and
dec
rcrb
xchg
cmp
xchg
pop
aam
dec
das
shrb
and
mov
jmp
inc
push
sbb
not
popf
jae
dec
stc
inc
sbb
dec
mov
cmc
aaa
int
xchg
pop
inc
stos
xchg
call
mov
add
aaa
sub
push
jle
out
clc
mov
jnp
inc
pushf
pop
lret
ss
jg
xchg
push
cmp
mov
adc
cltd
adc
sbb
push
xchg
ljmp
dec
mov
jg
mov
int3
jmp
adc
push
mov
cmp
mov
push
movsb
mov
lahf
imul
lret
sbb
xorb
inc
dec
int3
pop
cmp
push
into
mov
add
addl
test
mov
jbe
pusha
add
clc
xchg
pusha
inc
push
loope
lret
xor
es
cmc
hlt
sbb
jg
adc
loope
orb
in
and
outsb
nop
in
or
stos
pop
sbb
lahf
cmp
mov
test
out
sub
mov
adc
pop
pop
add
dec
mov
test
add
lods
pusha
xor
in
cmp
push
pusha
mov
dec
or
das
push
jmp
cltd
pop
mov
dec
das
mov
sub
das
out
pop
rcrl
fwait
or
das
dec
adc
xchg
and
jno
mov
jmp
roll
ljmp
pop
out
fsubrl
fadds
pop
dec
cmp
inc
and
cmpb
hlt
mov
js
or
hlt
jno
mov
mov
outsl
xor
lods
add
sub
out
cmp
outsl
jl
cmc
jl
jb
sub
add
decl
jae
das
insb
xor
je
or
fcompl
ficomps
or
enter
ljmp
fmuls
xor
scas
cmpsl
lock
jle
add
mov
lock
sub
xchg
pop
pushf
xchg
jle
cmp
in
dec
in
pop
aaa
or
xchg
mov
mov
mov
dec
fstpt
clc
hlt
inc
xchg
inc
jmp
cmpsb
adc
sbbb
adc
dec
and
shr
or
scas
out
lods
mov
lret
sbb
adc
mov
test
and
mov
jbe
pop
fdivr
sbb
dec
cmp
inc
andl
aam
push
outsb
cmc
inc
xlat
das
sub
and
cltd
jg
push
enter
in
sub
lcall
mov
mov
mov
sub
test
mov
and
push
jno
ljmp
sbb
je
sti
add
fcompl
lret
mov
call
sbb
mov
fdivl
add
bound
sti
ss
outsb
add
pop
jne
xchg
adc
jbe
lcall
out
pop
mov
pop
cmp
jns
out
inc
dec
sahf
imul
adcl
and
mov
stos
repz
pop
push
cmp
inc
pop
shrl
xor
hlt
fstpl
shlb
jne
mov
andb
jmp
in
jmp
mov
xor
mov
xchg
fcomps
xorl
push
lds
cmp
mull
add
test
sub
and
mov
mov
or
icebp
mov
add
push
pop
lods
pop
aaa
inc
sub
xor
jle
sbb
inc
std
scas
inc
cwtl
xchg
sbb
push
test
mov
sahf
in
push
mov
scas
test
outsl
mov
or
pop
adc
xor
push
push
and
fwait
jmp
lret
outsl
jg
fldcw
test
lock
nop
dec
xor
xchg
and
aam
movsl
adc
lahf
mov
ljmp
loope
or
adc
aam
cmp
pop
iret
and
test
aad
pop
adc
mov
jb
mov
pushf
outsl
push
mov
sbb
stos
outsl
lods
pop
iret
push
roll
imul
add
mov
pop
xchg
cwtl
in
push
fnstsw
fsubrs
int
dec
mov
push
bound
push
xor
jo
sbb
jnp
lahf
leave
lock
lock
lods
enter
int
sub
cmpsb
or
sub
lea
scas
stc
mov
test
loope
xchg
imul
cmp
add
xchg
je
orl
jp
sbb
xlat
mov
cmp
shld
ljmp
and
imul
cltd
mov
xchg
sarb
in
and
int
cli
ljmp
mov
push
push
int3
push
repnz
aaa
fdivrl
in
mov
cmp
pop
adc
pop
sbb
xor
pusha
dec
mov
mov
sbb
lods
mov
cmpsb
cld
mov
xor
fistpl
and
ja
hlt
and
pusha
loop
push
out
test
int3
out
or
fwait
push
in
inc
mov
mov
pop
jecxz
jg
mov
or
mov
aaa
sub
push
and
sbb
and
mov
rcll
call
dec
repz
stc
xchg
popf
lds
push
stc
mov
js
lods
je
outsl
scas
jmp
bound
push
lret
icebp
xchg
jp
arpl
jl
enter
sbb
mov
inc
mov
inc
clc
push
inc
insl
mov
push
pushl
sbb
jmp
and
jmp
adc
cmpsl
imul
xor
or
js
negb
push
push
in
mov
jae
in
cmp
mov
loop
test
jns
imul
int
outsl
mov
add
testb
mov
repz
shll
xor
adc
pushl
sub
jmp
stos
cmpsb
mov
jmp
ds
pop
lret
mov
pushf
push
fldenv
cmpsb
adc
nop
loope
mov
cmp
xor
lods
cmpl
jl
xchg
cld
inc
shrl
fdivrl
testl
xorl
pop
mov
mov
cmp
add
cli
xchg
and
in
push
pop
jecxz
or
neg
xor
shrb
mov
sub
int
dec
sbb
cmp
roll
sub
fwait
xchg
cmp
sbb
sbb
bound
jl
add
fwait
push
and
inc
lret
sbb
jne
cmpsl
and
cmp
hlt
loop
scas
push
pusha
jge
in
xchg
jle
fwait
ret
shll
fimull
test
pop
ds
push
fildll
jle
in
jnp
sbb
adc
test
imul
adc
mov
xor
inc
lods
prefetcht2
insl
andb
divb
stos
pop
add
push
jle
jae
addr16
inc
cmp
test
ljmp
aad
add
test
dec
lods
cmp
sub
test
xchg
inc
fcos
iret
repz
dec
mov
lock
jle
mov
sub
xchg
lret
sbb
jmp
cwtl
ja
pop
stos
xchg
jns
mov
xchg
lret
mov
or
add
push
add
add
aas
outsl
insb
fiadds
jg
jno
sbb
push
or
stos
jno
pop
mov
movsl
fldl
in
add
dec
cmp
sbb
mov
jo
jnp
sbbl
rorb
call
fmull
aad
push
sbb
es
dec
cmpsb
or
cmp
mov
and
lcall
js
and
cmp
mov
dec
push
out
mov
outsl
mov
pop
xchg
jle
push
out
test
stos
out
jle
dec
mov
out
call
push
in
adc
dec
or
jp
addr16
aaa
push
or
push
cmc
sub
or
data16
pop
and
jae
test
push
imul
fldcw
cmp
xchg
in
mov
test
adc
mov
mov
daa
lahf
pop
xchg
push
daa
repnz
lahf
sub
sbb
popa
inc
sbb
sub
test
fwait
repnz
cmpsb
and
sbb
push
ret
pop
inc
adc
mov
jbe
jb
fsubrs
and
jbe
sahf
sbb
fwait
mov
or
pop
sub
hlt
pop
lahf
cmpsl
sub
imull
mov
pop
or
fs
jno
jle
mov
call
xchg
jmp
ja
sub
cmc
data16
mov
jg
bound
ret
repnz
out
push
lcall
sbb
movsl
sub
adc
lcall
mov
decb
stos
cmp
adc
xchg
insl
iret
sbb
dec
or
call
ret
out
dec
xchg
inc
xchg
stos
int
shrb
jbe
add
mov
mov
repz
je
mov
popa
js
mov
push
push
mov
jle
jp
out
std
add
sub
repnz
push
fs
iret
popl
xor
mov
sub
js
out
dec
dec
jb
out
sbb
sbb
xchg
sub
jge
ljmp
mov
jecxz
mov
stos
adc
inc
sahf
adc
push
pushf
insb
mov
push
dec
cmp
jle
scas
pusha
add
pushf
add
mov
pop
adc
cli
stc
xchg
jbe
mov
maskmovq
notl
pop
gs
clc
inc
sub
es
pop
test
cli
cmp
lods
lea
js
cs
or
lock
or
insl
cmp
lea
insb
enter
add
lcall
dec
jnp
aad
jmp
cld
orb
ret
mov
int
jle
xchg
pop
je
push
mov
sub
sub
loop
inc
push
out
inc
stos
or
icebp
je
in
notb
push
cli
xchg
fsubl
fsubp
xor
or
gs
fwait
pop
out
pop
jmp
and
mov
adc
out
imul
jae
cmp
ja
push
xor
pop
loopne
adc
adc
mov
bound
push
mov
call
pop
movsl
pop
test
lods
int3
lahf
mov
adc
imul
mov
stos
test
movsb
xchg
sbb
add
fmulp
add
or
push
out
lret
mov
xlat
push
addb
mov
setno
lock
hlt
loopne
sarl
dec
cltd
and
shll
rorb
loope
fmull
or
mov
jnp
or
test
test
cmp
and
xorb
pop
insl
xchg
mov
repnz
movsb
aad
shlb
xor
and
xchg
in
stc
push
movsb
frstor
pop
shll
jo
test
aad
or
xchg
adc
outsl
add
popa
int3
stos
stos
inc
movb
xor
mov
repnz
jne
push
and
rorb
sub
jp
aad
ds
adc
dec
popf
into
mov
cwtl
pop
jns
call
xor
pop
sub
mov
jle
sub
mov
ja
add
pusha
roll
popa
xor
adc
ss
es
push
inc
inc
aam
clc
and
push
push
xor
stc
xor
pop
mov
fdivl
pop
xchg
stos
aaa
ret
ljmp
lods
cmp
repz
dec
mov
popl
push
testl
in
push
aas
mov
pop
and
dec
xchg
in
mov
sbb
outsl
push
add
fistpll
shll
cwtl
out
pop
pop
mov
mov
filds
sub
mov
dec
push
mov
jo
ret
add
stc
pusha
into
pop
cmp
shl
sbb
pop
pop
stc
dec
and
adc
aam
mov
aas
outsl
mov
mov
loop
jno
std
sub
add
push
pop
jg
adc
pop
lret
sbb
out
mov
jo
cmp
stos
mov
aas
loop
sub
inc
stc
sub
pushf
pop
test
xor
decl
push
orl
es
or
and
xchg
mov
fcomps
mov
push
fistpl
or
cmp
test
add
mov
mov
pop
stos
je
lods
lea
ljmp
lret
cs
pop
pop
fstpt
pop
jno
jle
icebp
ljmp
loop
pushf
addr16
fwait
mov
mov
push
jg
inc
mov
pop
inc
and
jecxz
sti
cld
push
pop
enter
jg
in
imul
out
cmpsb
or
dec
jne
mov
idivb
push
lcall
xchg
in
mov
xchg
test
inc
pushf
in
orl
push
xor
and
stos
xchg
push
outsb
outsl
lret
mov
sbb
sub
pop
fcomps
xchg
xchg
sbb
adc
pop
mov
cmc
aaa
rolb
pop
rcl
inc
lea
mov
jae
loop
push
subl
lret
or
push
daa
xchg
xchg
mov
xor
lock
and
outsl
push
jnp
sub
pop
ss
jmp
ja
push
mov
ljmp
leave
and
into
adc
ror
je
add
imul
lahf
push
mov
xchg
jb
xor
push
cmpsb
xor
pop
jl
jns
inc
aam
and
lock
push
pop
mov
hlt
and
repz
addr16
push
imul
xor
pop
mov
ja
fstp
sbb
je,pn
sbb
arpl
das
clc
cmp
mov
xchg
cmp
jns
mov
aas
jp
sahf
movsl
mov
jecxz
mov
jge
outsl
popl
xor
popa
aad
mov
mov
adc
in
lods
pop
xor
mov
ffree
out
dec
pop
rcll
lcall
add
fiaddl
lcall
adc
addr16
mov
push
sub
dec
add
lahf
fistpll
sbb
je
bound
pop
pop
sub
dec
adc
add
or
cld
add
out
jle
arpl
pop
out
in
mov
in
shrl
sub
lret
fistps
push
rorl
sub
sahf
cld
test
aas
fmulp
daa
fs
or
enter
aad
rcrb
adc
push
jmp
or
int
js
push
ljmp
adc
leave
pop
or
data16
les
mov
jle
fwait
pop
and
jbe
inc
xor
iret
insl
fcmovu
popa
mov
cmp
fisubs
in
jmp
adc
jle
xor
dec
jne
in
test
xor
test
pop
lret
insb
sub
sbb
push
imul
inc
push
inc
jns
adc
loope
orl
xchg
out
push
xchg
divb
jecxz
and
xor
lcall
cmp
fwait
mov
add
ret
jecxz
adc
stos
jnp
movsl
adcl
mov
test
push
pop
lods
push
push
dec
pop
or
lds
mov
test
in
int3
in
jmp
call
shl
sbb
or
push
mov
jns
xchg
push
lds
push
imul
sub
sahf
dec
fiadds
or
jl
jno
add
out
repnz
dec
rcrl
cmpsb
cwtl
jmp
sub
pop
and
aaa
xlat
addl
push
xchg
jno
dec
cmp
cmp
sahf
loope
ds
lcall
or
dec
mov
jge
adc
fdivl
mov
mov
add
mov
pop
fisubrl
jne
ds
ss
mov
or
push
dec
repnz
shlb
xchg
shr
xchg
fisttpl
and
je
imul
call
cmovle
lods
ret
mov
jb
lods
jecxz
mov
ret
sbb
out
push
fdivs
cld
add
adc
and
inc
mov
insl
mov
adc
pop
pushf
ficompl
outsl
add
lret
mov
ds
loopne
push
addr16
jns
lahf
icebp
test
jmp
test
shrb
enter
cs
jle
sahf
test
pusha
dec
ds
and
fdivr
imul
pop
inc
mov
jo
lahf
out
scas
mov
sbb
fcomps
mov
scas
movsb
fwait
add
in
sub
sbb
pop
fidivl
loop
lea
xor
call
push
add
cmpsl
test
jg
lods
int3
jbe
hlt
sub
iret
pop
mov
dec
cmpb
iret
mov
test
inc
dec
into
mov
js
xor
pop
stos
lods
inc
push
test
sbb
mulb
dec
repnz
shrl
orl
call
mov
jmp
popf
cmp
loop
xchg
adc
mov
sbb
push
icebp
xchg
das
cld
lcall
addr16
jge
push
push
push
stos
or
iret
push
or
aam
ror
adc
rclb
inc
mov
std
divl
aad
mov
std
pop
adc
outsl
lahf
sbb
cmp
xchg
mov
mov
mov
test
sar
pop
fidivrl
and
mov
or
sbb
push
add
test
jmp
sbb
cmp
push
shl
jecxz
dec
test
aad
and
scas
add
and
xchg
stc
fsubrp
xor
add
nop
pop
cmp
not
push
mov
iret
out
jnp
cld
es
cmp
mov
dec
sbb
ljmp
out
negb
std
leave
cmp
and
ret
into
cmp
jl
add
adc
xchg
dec
ljmp
shrl
mov
mov
xchg
push
movsl
and
push
lret
dec
je
xchg
scas
sub
and
loope
mov
push
cmp
ja
addr16
mov
adc
dec
xor
dec
test
cld
xlat
loopne
push
movsb
insb
inc
ja
xchg
and
fildll
jp
out
sti
sub
shl
push
outsl
ss
xor
adc
pop
notl
ret
pop
shlb
mov
mov
or
fs
loope
xor
lea
fisubrs
push
cmp
xor
cmpsl
adc
cmpsb
es
test
jae
push
xchg
mov
sbb
jle
xor
orb
imul
sbb
push
sahf
repnz
cmc
int
fmull
icebp
mov
sbb
movsb
mov
pop
out
insl
clc
sti
adc
pop
mov
clc
loope
dec
xor
sub
pop
mov
mov
add
ja
push
in
push
xor
adc
pop
mov
pop
leave
xchg
push
or
mov
and
mov
pop
popl
repnz
ja
and
sbb
push
sub
mov
xchg
xchg
icebp
push
pop
sbb
pop
push
cmp
push
hlt
mov
out
add
sti
dec
mov
ret
ja
jecxz
and
mov
int3
dec
rclb
orb
mov
push
add
aam
in
popa
and
jl
push
inc
jbe
out
or
add
mov
xchg
push
push
jle
jle
sub
gs
push
les
lahf
push
rorb
lods
int3
rorb
cmp
scas
insb
lcall
inc
decb
in
push
inc
stc
mov
mov
jns
push
jo
std
jl
loope
enter
mov
cwtl
std
sbb
mov
push
jb
xchg
mov
and
or
inc
xchg
add
sub
fwait
mov
xor
mov
dec
push
andl
push
xor
dec
out
mov
dec
jb
and
fdivs
shll
cli
cmp
pause
cmp
sub
or
fdivrp
pop
cmc
fsubrs
fwait
inc
mov
pop
hlt
mov
mov
push
jb
xor
jb
subl
cmpb
jo
push
in
pop
outsl
std
xor
and
push
popf
cmp
dec
adc
jg
inc
push
sti
sub
add
add
pop
fcmove
fwait
lcall
add
cmp
fsts
das
dec
arpl
das
das
in
fcoml
jno
adc
sti
lds
out
push
clc
xchg
ret
xorb
push
add
pop
dec
in
cld
sbb
pop
cmpsb
bound
jecxz
lcall
mov
ror
lahf
jmp
scas
mov
jo
pop
prefetch
or
sbbb
aad
pusha
lcall
push
mov
sub
out
cmp
mov
mov
inc
push
push
xchg
cmp
cmp
mov
lods
add
jns
cli
mov
sahf
stc
mov
rcrl
add
xor
mov
push
adc
rolb
popf
or
add
xchg
shrb
and
hlt
xchg
xor
ret
cmc
je
xchg
xchg
adc
aas
push
mov
fdivr
mov
jae
fwait
xchg
addr16
mov
inc
jae
imul
test
lods
mov
out
out
xor
popa
sbb
mov
xchg
arpl
pop
xchg
popa
js
movsl
inc
jo
mov
jo
adcb
mov
push
dec
in
cwtl
jae
gs
pop
or
mov
loop
cmp
push
lock
mov
out
lret
mov
cmp
push
inc
jns
popf
lods
in
test
popf
mulb
pushf
subl
dec
jno
jge
pop
in
mov
shr
cmp
xchg
push
cli
push
xchg
scas
dec
adc
hlt
mov
mov
pop
testb
dec
test
cmp
xchg
push
je
addb
mov
lock
cmp
repnz
fisubl
adc
push
testl
scas
jle
mov
push
dec
cmc
xchg
int3
out
mov
ror
aaa
sbb
pusha
adc
jb
shrb
sahf
adc
pop
mov
mov
ficomps
decb
ja
shll
andl
adc
push
adc
xor
push
mov
scas
cmp
push
jb
popl
out
insb
movsl
or
fdivl
pop
add
jg
test
cli
mov
bnd
mov
nop
fs
fs
add
bound
sub
mov
int
pop
push
sti
loope
add
push
pushf
rcl
inc
mov
ss
and
test
loop
lods
cmp
dec
jno
scas
pusha
pop
out
mov
stc
sbb
xchg
mov
add
jae
and
or
jge
xchg
adc
fcomp
pop
pop
dec
or
stos
push
aad
sbb
xor
fwait
jae
mov
lods
insb
jl
or
mov
cmp
sub
mov
das
jae
pop
loopne
xor
hlt
jg
nop
adc
cmp
xchg
mov
pop
inc
mov
mov
and
adc
push
mov
and
jnp
xchg
xchg
fwait
sub
mov
mov
mov
shlb
rolb
je
out
jge
fnstcw
inc
insl
xor
das
inc
pop
sbb
mov
das
mov
cmc
lret
or
xchg
pop
lret
inc
lock
and
sub
add
and
jle
mov
sbb
sub
cmp
iret
cli
and
cmova
xchg
jb
or
mov
pop
lret
movsl
mov
xchg
subb
push
std
cli
mov
mov
jp
sar
jle
sbb
stos
cmc
adc
hlt
cmc
adc
test
mov
stos
mov
std
test
out
jae
fnstsw
cmpsl
push
sub
filds
xlat
push
lret
inc
loop
fstps
or
fidivrl
xor
sbb
ret
jp
lret
das
jmp
fs
in
out
cmpsb
test
mov
dec
adc
movsb
in
dec
xor
repnz
jmp
dec
cmp
in
jge
xchg
mov
lods
out
inc
xor
repnz
rorb
or
lea
addr16
pop
jmp
lret
lret
jo
les
push
arpl
sub
mov
lahf
sub
aas
movsl
dec
sahf
sub
xorl
sbb
mov
leave
insb
mov
sub
fcoms
inc
mov
loop
sarb
or
dec
push
xchg
inc
lock
rorb
xchg
inc
sbb
fmuls
sbb
xchg
out
push
cltd
sub
fwait
loopne
or
sub
push
jnp
inc
loopne
repz
lods
mov
cmp
call
xor
lcall
xchg
jne
mov
in
add
int
mov
mov
into
mov
dec
or
and
cmp
stc
add
scas
hlt
pop
mov
das
test
jl
xchg
lahf
stos
sub
cmc
cmp
dec
or
sub
mov
dec
mov
test
lods
rcll
je
int3
lcall
arpl
int3
movsb
ljmp
fdivrs
jg
push
loope
jle
sub
xorb
movd
nop
and
nop
mov
adc
test
inc
mov
xorb
push
lock
fsubr
sbb
mov
mov
sbb
jae
mov
pop
lds
movsb
aas
js
and
in
pop
jmp
arpl
and
mov
loop
mov
ljmp
and
mov
jbe
cltd
jp
push
daa
pop
mov
inc
ret
es
inc
popf
cmpsl
out
sub
mov
sbb
shrb
scas
adc
xchg
push
mov
xchg
xor
enter
hlt
cmp
sbb
jg
outsb
std
mov
sti
mov
fwait
add
xchg
ljmp
loop
and
jns
outsl
cmp
dec
mov
xchg
mov
test
and
rorl
adc
adc
inc
lret
enter
mov
fistps
mov
scas
clc
ds
in
jbe
loope
stc
das
jne
sti
push
std
movsl
xor
scas
inc
and
sbb
je
mov
push
inc
sbb
inc
jno
or
sbb
in
xchg
test
outsb
lods
ss
xchg
shrl
jle
xchg
pop
sti
psrad
xchg
push
adc
iret
inc
add
and
cmc
pop
call
pop
mov
adc
cmp
inc
jo
fcos
mov
fistl
or
jnp
sbb
add
jbe
cmp
ljmp
mov
xor
movsb
stos
test
iret
sbb
sub
outsl
xchg
xchg
dec
andl
pusha
into
xcrypt-cbc
cmpsl
aad
aaa
aaa
mov
ficompl
pop
xor
negb
inc
mov
stos
mul
das
cmp
aam
ljmp
mov
push
push
mov
cmpsl
ficoml
mov
jno
mov
adcl
or
iret
sbb
lret
or
push
mov
testb
inc
sub
test
adc
xchg
mov
and
mov
lahf
inc
mov
mov
jo
xlat
mov
out
push
decb
jle
or
insb
push
outsl
pop
mov
mov
test
and
rclb
cltd
or
popa
mov
cmc
adc
xor
and
mov
cltd
ret
xorl
mov
int
push
imul
push
ss
fisttpl
pop
aas
pop
cs
mov
mov
pop
mov
fimull
pop
pop
dec
fildl
mov
add
daa
xchg
cmpsl
cmpsl
stc
cmp
and
push
imul
pop
push
xor
repz
jecxz
fildl
les
ret
sub
out
inc
xor
push
pop
cmpsl
movsl
ret
mov
lds
xchg
addl
inc
mov
cli
xor
pop
ficompl
les
jnp
xor
adc
and
xor
and
mov
jb
das
lds
mov
mov
inc
outsl
adc
push
cwtl
popa
test
cmp
fildll
sbb
fucomip
cmpsb
out
xchg
fsts
fstpl
jno
cli
cli
cmp
xor
ja
adc
jbe
adc
test
and
jb
mov
test
movsb
cmp
xchg
xor
add
and
cmp
mov
xchg
jle
cmpsb
mov
cmpsl
pop
sbb
clc
inc
int3
sahf
int
fistps
jno
xor
inc
add
sbb
sub
jnp
stos
xchg
jecxz
das
ret
sbb
adc
pop
push
sub
gs
inc
mov
mov
adc
les
dec
je
adc
xor
daa
push
push
cld
mov
lcall
mov
or
pop
add
add
ljmp
fiadds
sub
xchg
cltd
lahf
xchg
push
mov
mov
inc
push
fldt
scas
jp
xor
test
lahf
ret
pop
lods
mov
call
mov
adc
inc
icebp
lcall
jno
ret
cmc
lret
or
int3
loopne
mov
xchg
insb
pop
cs
subl
push
jae
xor
adc
sbbb
es
or
and
stc
ret
xor
fdivl
jnp
lcall
mov
sub
fwait
mov
jae
dec
faddp
sbb
inc
or
gs
fcompp
push
fdivs
jecxz
fsubr
out
push
inc
adc
sub
filds
into
loopne
scas
int
or
sti
scas
inc
data16
mov
movsl
lret
icebp
mov
aaa
jns
jecxz
stos
cmp
adc
js
test
push
cmp
sbb
mov
outsb
aaa
in
and
jle
pushf
test
icebp
xlat
mov
cwtl
mov
fwait
xchg
adc
int3
cmc
decb
lret
adc
push
loopne
lcall
scas
lret
into
js
xchg
or
and
fldt
mov
and
iret
or
je
daa
xlat
jge
adc
jns
and
in
xchg
imul
out
add
stc
pop
adc
lcall
fbstp
lds
scas
pop
arpl
lret
push
jno
bound
mov
xorb
aas
cmp
stos
popa
dec
fsts
pop
je
dec
xchg
sub
jb
ficompl
cs
mov
jns
lret
jle
loope
xchg
cmpsb
scas
stos
aaa
add
movsl
jg
push
push
test
or
aaa
dec
dec
pop
and
ds
jecxz
mov
or
xchg
das
add
push
jge
adc
in
test
popa
hlt
es
movsb
movsl
test
mov
mov
int
mov
pop
lods
inc
xchg
repz
repz
sbb
mov
push
lahf
ret
xchg
adc
clc
int3
mov
xor
dec
dec
xchg
insb
subl
pop
mov
cld
fisubl
push
int
lret
dec
adc
xor
hlt
push
add
xor
bound
pop
mov
xchg
pop
stos
lods
out
push
mov
loop
and
pushf
movl
imul
inc
mov
cmp
repz
out
dec
pushf
jnp
clc
sbb
sub
data16
call
inc
in
in
push
mov
cltd
or
push
cmp
stc
jb
cmp
mov
shrb
xor
hlt
clc
jle
jo
mov
lret
sub
adc
fsubs
lock
test
loope
lcall
dec
fsubs
lock
cwtl
test
aas
lock
add
pop
aaa
aas
and
pop
leave
loop
mov
imul
aaa
js
imul
pop
lcall
fldt
repnz
fs
push
fs
cmp
push
and
inc
xor
adc
repnz
dec
dec
inc
push
or
in
xor
into
jae
mov
test
xor
jecxz
sarl
fistl
xchg
jp
insl
dec
mov
xchg
jbe
dec
mov
and
stos
out
push
cmp
push
mov
xchg
jae
inc
mov
mov
mov
mov
popa
test
mov
nop
cs
add
inc
push
fsubs
cli
loope
jnp
ret
loopne
xchg
clc
mov
sub
sub
xor
cwtl
cmp
out
ficomps
dec
pop
dec
popa
test
jg
xchg
hlt
inc
inc
into
sbb
cld
jp
adcb
lcall
push
insl
xchg
inc
xchg
ljmp
imul
pop
sarb
insb
clc
scas
in
and
xor
dec
pmullw
jle
sbb
jnp
sub
sbb
mov
sbb
xor
arpl
lods
loop
fwait
jecxz
dec
pop
inc
fmull
mov
xchg
jmp
ret
insb
jae
inc
imull
xchg
outsl
incb
lret
inc
inc
fcomip
mov
cmp
fcomp
ljmp
lock
idivl
mov
xor
fs
push
mov
rolb
pop
cs
rclb
push
loopne
in
ror
lcall
push
mov
imul
data16
sbb
andb
xchg
mov
cld
push
xor
sub
fsubs
test
xchg
sub
sub
cmp
je
fidivrs
add
rolb
divl
xchg
std
push
inc
cli
xor
pop
nop
or
push
add
aad
aaa
inc
mov
data16
inc
jle
adc
xchg
ja
inc
add
mov
mov
push
jl
pop
cltd
mov
shrl
mov
xor
xchg
cld
sti
inc
loop
ret
adc
lret
xchg
mov
pop
and
scas
add
cmp
or
negl
dec
fwait
sti
subl
sbb
pop
mov
inc
movsl
addr16
jnp
and
pop
pop
data16
and
push
shr
push
jg
fstpt
xor
lea
popa
push
adc
pop
pop
push
add
les
jns
xor
pop
inc
scas
sbb
insl
test
test
lods
les
jg
bound
scas
daa
xchg
adc
xor
fcmovu
jb
sub
imul
mov
sub
ljmp
imul
push
add
and
aaa
pop
mov
adc
gs
fldenv
cld
mov
xchg
mov
and
dec
out
cmpl
out
add
pushf
gs
test
out
dec
aas
pop
jnp
mov
cli
push
clc
shll
push
icebp
mov
cmp
sbb
jmp
es
xchg
scas
mov
pop
icebp
scas
gs
mov
mov
xchg
mov
mov
ja
imul
add
dec
xchg
sarl
icebp
popa
dec
outsl
xor
mov
pop
outsb
mov
in
sub
lret
push
adc
in
cld
movsl
fdivr
push
lds
lods
xchg
or
inc
xor
imul
in
insb
mov
xchg
imul
dec
pop
adc
mov
jle
leave
sbb
sbb
sbb
cmp
mov
out
mov
mov
sahf
lea
mov
dec
add
ja
xor
or
lods
iret
and
push
push
dec
sub
aaa
sub
jl
cmp
hlt
leave
in
or
jae
adc
mov
shll
ror
cmpb
in
ds
pop
and
jo
push
xor
inc
or
push
mov
jmp
mov
mov
add
add
in
inc
or
movl
adc
out
imul
shr
cs
mov
dec
pop
sar
scas
and
sahf
or
inc
hlt
lret
mov
int3
mov
cld
cmp
and
inc
inc
mov
jge
imul
stos
test
xchg
shl
fnstcw
f2xm1
dec
divl
jb
bound
mov
jle
test
imul
aaa
mov
pop
cwtl
push
dec
cmp
xor
xor
xor
fcom
fisubrl
outsb
or
push
cli
test
cmovs
and
mov
je
or
inc
lock
cmp
xor
stc
mov
cld
xlat
mov
addr16
jg
int3
jg
orl
mov
repnz
cmp
cmp
mov
into
push
mov
aam
repz
xor
mov
or
xchg
aad
mov
in
leave
pusha
inc
xor
movsb
or
cwtl
adc
pop
cmp
mov
fdiv
mov
mov
aas
cmpsl
aam
mov
sarb
and
add
push
adc
outsl
mov
cmp
lods
ret
outsl
into
jge
fdivrl
in
sub
shlb
loopne
inc
push
movsb
jbe
std
push
lods
mov
pushf
sahf
dec
inc
repnz
aas
xchg
movsb
pushf
jmp
mov
pop
fsqrt
xchg
inc
aaa
loop
mov
or
dec
bound
pop
or
or
pop
mov
es
sub
jns
je
arpl
inc
test
pop
mov
add
int
dec
or
sbb
mov
adc
out
add
mov
out
mov
fs
or
clc
rorl
out
push
and
adc
out
rcll
icebp
lods
inc
jno
mov
jge
in
ss
adc
cmpsb
js
ficoms
sbb
rcll
jno
popf
sub
les
dec
lret
sbb
xchg
xor
fistpll
test
inc
add
repnz
es
mov
pushf
mov
sbb
pop
hlt
adcl
test
mov
hlt
push
or
loope
sub
and
je
lahf
inc
out
gs
pusha
push
jl
hlt
add
inc
mov
lahf
inc
shll
aaa
or
inc
xor
lods
lea
out
xchg
fnstenv
and
fmuls
pop
xor
ds
or
inc
pop
pop
mov
adc
adc
rorb
sub
or
adc
jle
mov
test
dec
mov
in
push
testl
mov
int
xor
imul
xor
inc
fsts
inc
push
jno
mov
int3
dec
push
pop
cltd
pop
les
popa
stos
je
in
hlt
outsb
xchg
pop
lea
pop
cmp
into
scas
and
xchg
xchg
inc
xor
cmp
sub
mov
nop
adc
mov
roll
pop
rcrl
sbb
shlb
lods
nopl
push
sahf
fdivrp
jns
std
xor
mov
and
insb
sub
popa
insl
mov
test
pop
aaa
or
add
sbb
sub
mov
sbb
xor
sbb
popa
push
xor
outsb
mov
xchg
sub
ljmp
loop
mulb
shlb
sarl
xchg
sarl
stos
rcll
int3
sub
jge
adc
ja
push
movsl
cmc
into
add
xchg
adc
jae
pushf
jp
iret
sub
push
sub
jne
and
rcrl
imul
rcrl
add
inc
ljmp
mov
dec
imul
lcall
ljmp
hlt
xorb
ret
out
fstl
push
sub
fsubp
jmp
das
lret
add
call
push
mov
sbb
mov
mov
pop
and
or
xor
loopne
push
and
pop
cmp
xchg
fldt
mov
mov
cmp
aaa
mov
or
xchg
pop
loop
push
in
shr
jg
xor
dec
add
and
pushf
cli
jo
or
xchg
xchg
xchg
push
es
mov
inc
add
push
dec
pop
jmp
jne
bound
sti
cs
fcmovne
cmp
cmpsb
scas
inc
arpl
mov
sub
ret
xor
pop
clc
jmp
mov
cmp
aaa
cltd
in
add
in
push
dec
dec
in
lods
sahf
cli
sbb
outsb
jae
int3
or
scas
adc
out
inc
push
cmp
insl
mov
pushf
adc
mov
jnp
cmp
fwait
shrb
fsubs
mov
push
add
mov
fidivrl
test
fisttpl
std
leave
divl
mov
cwtl
pop
rclb
cwtl
push
les
add
push
xchg
out
dec
inc
aas
jp
jecxz
data16
out
aaa
push
xor
jp
mov
mov
les
sbb
cmpl
sub
addl
dec
mov
aaa
or
adc
mov
add
outsb
int3
add
addr16
inc
xchg
and
mov
call
subb
out
or
inc
mov
cs
dec
mov
mov
lahf
mov
and
push
popf
sahf
push
scas
inc
mov
lea
in
jae
sub
nop
add
testb
pop
je
in
mov
jo
mov
cmp
rcrl
sub
rcll
movsb
xchg
fdivr
dec
inc
es
pop
inc
sub
sti
ljmp
sub
sub
fwait
js
scas
mov
loop
adc
push
mov
push
sbbb
xchg
inc
push
das
jnp
shlb
jb
pusha
outsb
push
sub
mov
or
pop
cmpsl
xchg
cmp
in
adc
shl
add
fisttpll
and
test
andl
insb
into
xchg
test
or
xchg
aam
add
push
push
shlb
inc
push
mov
jne
adc
xor
hlt
lret
insl
lods
rcrb
cmp
or
sbb
xor
ljmp
dec
pop
sbb
cmp
lcall
out
dec
mov
das
xchg
lods
loopne
mov
repnz
xor
data16
inc
adc
std
shlb
xor
mov
in
jnp
insb
adcb
xor
jl
and
cmp
insb
das
fmuls
jecxz
test
test
xchg
outsl
mov
js
mov
loop
cmpsl
push
cli
clc
push
pop
lods
pop
enter
test
push
mov
test
mov
scas
scas
push
mov
mov
sti
js
arpl
cmp
pusha
and
sub
data16
cmc
popf
shlb
jmp
sahf
and
pop
ja
ss
or
lds
xchg
or
cli
aas
mov
cmp
popf
fildll
nop
in
and
push
mov
lods
xor
mov
sub
xor
imul
shrb
push
fldpi
decl
lret
scas
or
pop
fcomps
mov
pop
mov
loop
incb
inc
fnstcw
jecxz
inc
inc
stos
jbe
xchg
sub
imul
fs
out
enter
mov
gs
push
test
xor
dec
fldt
push
xchg
out
sub
jae
cmp
dec
cld
lea
and
or
es
fs
loope
ficoml
dec
mov
addr16
mov
in
sub
in
dec
outsl
rcrl
add
jo
lcall
xlat
mov
sbb
hlt
cwtl
push
inc
test
loopne
lea
idivb
jnp
lds
sahf
fidivs
cmpsb
dec
mov
or
dec
js
mov
add
in
add
push
inc
in
inc
xchg
pop
bound
aam
sbb
xor
loop
test
pop
xchg
lcall
mov
movb
les
push
jne
jmp
out
pop
jl
popf
xchg
xchg
js
sbbb
push
icebp
dec
sbb
stos
mov
xor
sarb
loopne
fistpll
push
and
pop
cmp
mov
fdivl
inc
jmp
lods
repnz
jae
cmp
fadd
sarl
int3
ret
push
dec
mov
adc
push
pop
popa
mov
fstl
sub
pop
dec
or
inc
xchg
pop
jmp
jne
aad
and
mov
or
in
mov
xchg
cwtl
mov
push
mov
in
in
inc
int
and
cmpsb
js
stc
fistpll
cmc
push
iret
pop
pop
xchg
aam
mov
inc
lds
imul
pop
mov
jg
jp
pusha
movsb
jo
negb
mov
dec
pop
inc
and
mov
xor
dec
xchg
shrl
ret
popa
and
mov
out
lock
ljmp
mov
lahf
sub
lock
into
ficoms
call
dec
cmpsb
decl
das
fwait
pop
mov
mov
jbe
je
jl
mov
and
xchg
xlat
sbb
stos
pop
pcmpgtw
mov
aaa
loop
add
in
add
or
push
push
fcomps
dec
test
adc
jg
or
out
add
rcr
cld
lcall
aaa
pop
fld
rcl
adc
xchg
dec
adc
or
mov
js
or
lods
cltd
push
in
loop
add
jns
nop
xor
popf
imul
sbb
add
jnp
mov
push
stc
fmuls
cmp
push
test
mov
stos
imul
push
inc
adc
inc
or
cmp
leave
inc
xchg
sub
sbb
push
pop
leave
pushf
cmp
jo
sbb
std
lcall
inc
hlt
jae
lsl
jge
mov
push
lahf
cli
lret
add
cmpsl
add
xchg
or
pushw
xor
push
mov
andl
jno
popf
sbb
jne
ret
sub
outsl
shll
adc
push
ret
jo
sbb
push
adc
insb
jne
or
pushf
add
xchg
mov
aaa
jp
lock
cwtl
int
adc
out
les
xlat
inc
xorb
lock
movb
and
xor
or
adc
lcall
mov
bound
loope
xchg
push
js
inc
loopne
sbb
test
clc
mov
xchg
in
adc
cmp
push
enter
stos
cltd
lahf
inc
xchg
icebp
ljmp
mov
outsb
lahf
inc
jp
iret
icebp
movsl
adc
push
and
jg
inc
pop
mov
sub
aam
scas
arpl
xchg
shll
mov
pop
push
xor
insl
lret
jge
js
sti
lods
or
in
sahf
repnz
loopne
int
mov
fisttpll
push
fistl
sub
inc
lret
and
lcall
pop
loope
pop
pop
pop
je
adc
jmp
xchg
sarb
repz
icebp
cmpl
sti
and
xor
mov
rorl
pop
push
mov
ja
inc
clc
inc
jns
lods
std
and
sub
add
lock
push
std
clc
lods
xor
pop
jb
dec
popf
std
xchg
sbb
cmp
mov
aam
aam
push
xchg
mov
inc
sbb
in
insb
add
add
jmp
fs
out
push
addr16
fs
cmp
lods
or
leave
push
ret
dec
dec
inc
gs
stos
lods
adc
ficomps
imul
sbb
out
and
mov
fisubl
bound
mov
aas
cltd
dec
push
neg
fcomps
ds
cld
add
aam
icebp
insl
cmp
rclb
sti
int3
mov
add
push
cmp
and
inc
jp
lea
out
sarb
add
mov
sub
divl
or
div
or
push
nop
xchg
mov
rcl
dec
out
loop
dec
mov
ljmp
in
pslld
jo
int3
xchg
pop
cwtl
repnz
scas
andl
push
push
shl
mov
lods
test
test
xchg
and
xchg
hlt
adc
roll
xor
loope
movsb
xchg
cmp
cld
adc
pop
lods
movsb
stos
pop
inc
loop
rclb
mov
sbb
xchg
mov
sti
icebp
out
fisubrl
pop
or
dec
mov
daa
out
int3
aam
jne
iret
sub
test
push
jg
shrb
pop
jo
in
imul
mov
bnd
dec
jmp
adc
bound
punpcklwd
cmp
push
daa
mov
repz
movsb
jne
add
ja
std
popa
loop
xchg
repz
jae
mov
mov
push
fistps
dec
testl
in
dec
xchg
bound
dec
pop
cmp
test
popf
cmp
mov
mov
daa
bound
xchg
shrl
xchg
rorl
paddusw
push
and
jp
sub
sbb
fidivrl
rcrl
add
xor
jge
test
inc
inc
pop
pop
dec
jl
mov
inc
dec
mov
xchg
mov
jl
or
in
adc
jne
push
outsl
in
cmpsb
sar
cld
add
add
xor
gs
mov
cmp
mov
xchg
icebp
dec
and
mov
insl
jle
mov
and
test
adc
mov
adc
push
and
adc
decl
fstpl
jno
xchg
dec
in
xchg
repnz
xor
popa
sbb
dec
mov
mov
and
sub
jns
inc
sub
inc
sbb
addr16
push
ljmp
cwtl
imul
lods
dec
inc
mov
xchg
inc
jecxz
lret
ljmp
pushl
add
push
jp
sub
nop
test
jns
mov
jb
scas
testl
lahf
adcb
repz
mov
xchg
lea
jbe
push
popa
push
adc
push
push
sbb
int3
loope
fdivl
push
out
rcrl
aam
jl
mov
xchg
xchg
rcr
gs
pop
adc
insl
ja
push
cltd
shl
inc
sbb
xor
sbb
add
and
dec
or
mov
fistps
mov
stos
ljmp
xchg
jb
add
xor
add
inc
daa
xor
xor
or
jecxz
dec
jmp
xlat
ror
lds
movsb
xchg
mov
xor
cwtl
test
sub
lahf
shll
push
sbb
inc
lods
add
int3
test
lret
sti
outsl
cmp
call
into
nop
mov
xchg
popa
xchg
sbb
stos
pop
mov
lds
cmp
cmp
dec
fldl
mov
jns
aas
jp
jo
push
roll
add
cld
mov
lret
adc
xchg
enter
jle
sbb
xor
daa
lock
into
lcall
jecxz
cmpsl
pop
mov
test
and
ficoms
fstpl
loope
add
sbb
add
push
fwait
das
push
je
push
fwait
mov
inc
xor
jl
and
enter
mov
mov
cmp
xlat
notb
add
arpl
jbe
inc
mov
sbb
stos
sub
lret
mov
jle
and
loop
les
xor
rclb
les
dec
faddl
fwait
imul
inc
mov
mov
pop
addl
test
push
lea
rcrb
mov
pusha
call
jg
into
sarl
xlat
out
push
jbe
sub
sub
hlt
cmpsl
jb
or
fs
pop
xchg
sub
subb
adc
pop
call
dec
push
adc
sar
xchg
push
insl
daa
fsubrl
loope
ficompl
test
cmp
mov
fistl
aas
dec
sbb
xor
xchg
sbb
pop
jcxz
mov
and
push
mov
mulb
aam
leave
xor
inc
insb
out
inc
push
ss
lcall
stos
xchg
push
pop
mov
jns
fmull
and
adc
dec
xchg
dec
leave
sti
inc
test
es
loopne
xor
cwtl
mov
lahf
imul
and
add
add
out
push
jno
aaa
mov
dec
sub
xor
mov
cmp
outsl
push
push
loop
rcrb
mov
dec
adc
aad
int3
clts
jp
and
xor
jg
mov
adc
inc
ss
fs
push
rcll
call
dec
xor
inc
lds
inc
xchg
dec
ficoms
jbe
push
cmp
inc
inc
push
or
clc
aam
out
mov
sub
data16
cmp
loope
pop
xchg
pop
xchg
push
ret
repnz
stos
xchg
inc
mov
jnp
aas
into
loope
idivb
es
vmovapd
hlt
inc
lock
sub
shlb
cmc
sahf
repz
mov
jno
das
pop
leave
outsl
inc
stos
inc
pop
inc
sub
addr16
inc
test
adc
inc
ret
mulb
mov
jle
xchg
fldt
and
pusha
push
sub
jle
jnp
sbb
lods
repz
cmc
mov
call
rdpmc
jge
out
mov
clc
pusha
mov
add
popa
mov
ljmp
push
cmp
clc
or
jae
rclb
outsl
sbb
xchg
jecxz
orb
insb
xlat
inc
sbb
mov
into
dec
in
push
loope
sarb
xor
dec
hlt
xor
push
sbb
push
mov
pop
cld
mov
mov
lret
gs
mov
bound
lea
xchg
out
test
sub
jns
xlat
dec
jns
lcall
push
mov
jo
cs
dec
js
cmp
loop
int3
jbe
addr16
call
lea
inc
push
shll
cmp
lcall
andb
aaa
mov
dec
xchg
mov
or
and
dec
test
sub
rorb
push
cmc
dec
jecxz
lret
iret
outsb
sub
sbb
mov
add
std
sub
xor
out
outsb
pop
movsb
mov
ret
or
test
sti
fidivs
sub
or
and
jmp
sbb
shrl
pushf
cld
push
out
adc
adc
icebp
out
aad
cmp
repnz
mov
imul
xor
xchg
repz
sub
fisubrl
xchg
popa
cmpl
aam
or
out
xchg
dec
shrl
fsubrp
iret
cmp
sub
push
mov
push
clc
ja
mov
cltd
push
or
dec
aam
mov
mov
push
test
into
mov
in
aad
loope
imul
aam
fwait
pop
lods
jbe
shlb
loop
pop
cld
int
jge
pusha
sub
fwait
cmp
arpl
sti
mov
test
pusha
and
rcll
test
ds
and
mov
mov
das
fidivl
fnstcw
int3
ss
inc
inc
sahf
frstor
sbb
orl
popa
jne
stos
and
rcrb
sub
xchg
inc
sahf
push
enter
inc
loopne
push
mov
fs
pop
lret
fmuls
dec
and
daa
sti
shrl
pop
inc
xlat
lods
add
nop
test
adc
pop
lahf
leave
inc
cs
sub
mov
push
adc
or
icebp
push
dec
inc
dec
and
mov
mov
push
xor
mov
cwtl
negl
ja
add
mov
jg
negb
or
out
xor
dec
add
scas
mov
mov
pop
or
cmp
push
mov
or
pop
inc
jge
or
jbe
pmulhuw
scas
xchg
ss
fmuls
sub
sbb
sbb
adc
pop
push
add
int3
lret
and
data16
aas
inc
and
xchg
insl
mov
in
xchg
fwait
ja
mov
lods
stos
or
jle
push
push
mov
push
mov
sub
cltd
mov
insb
ret
sti
xchg
mov
fdivrl
std
fldenv
push
mov
and
into
mov
jb
pushf
cmc
sub
fmul
mov
push
jo
popf
ja
int3
pop
rorb
inc
sbb
pop
sub
loopne
int
and
mov
cmpsb
rcrl
es
pop
xchg
jo
scas
loop
cld
in
mov
xchg
push
dec
mov
js
aaa
int3
add
add
es
aam
je
inc
repnz
mov
fdivrs
inc
test
sahf
pushf
rclb
adc
enter
jg
dec
mov
les
imul
cmpsl
sub
ja
repnz
and
push
xchg
jge
pop
sbb
jg
push
fnstsw
les
push
jnp
mov
ficomps
push
mov
hlt
xor
mov
mov
in
call
mov
insl
call
scas
iret
dec
jb
lea
sub
loope
testb
pop
or
decl
inc
fdivs
mov
mov
mov
out
cs
fmuls
add
test
movsb
lret
fcomps
adcl
stc
or
ljmp
imul
inc
or
sbb
inc
mov
add
pop
hlt
cmp
add
in
cmp
lret
repnz
sbb
cmp
fwait
dec
add
es
jmp
dec
add
push
das
cmc
xchg
repnz
inc
sub
fidivl
adc
jb
sbb
stos
dec
shrb
std
xchg
jb
xor
std
cmp
inc
push
ljmp
or
rcrl
fldenv
cmp
sub
std
cmp
jg
stos
mov
insl
ja
in
cli
add
in
leave
jns
pop
jb
xlat
jg
ljmp
stc
les
pop
in
outsl
jl
sub
mov
sub
lods
pop
fsubs
ret
or
cltd
mov
lret
mov
into
stos
add
dec
into
xchg
mov
pop
add
push
shr
and
push
mov
mov
xchg
fidivl
pop
ja
cmp
dec
push
bound
shll
ret
loopne
stos
xchg
xchg
int
cmp
loop
daa
rcrb
ud0
lods
out
mov
fistl
cmp
jmp
fcoml
xor
inc
dec
xor
test
cmp
jle
dec
jbe
add
test
es
xor
mov
or
push
les
xlat
imul
adc
mov
push
loope
dec
in
and
aaa
int3
mov
fildll
adc
add
fildll
stos
scas
das
out
or
pop
xchg
mov
sbb
jns
mov
in
imul
push
push
out
ds
jmp
jge
out
sub
mov
push
cmp
push
daa
and
sub
sbb
rcrb
or
adc
pusha
imul
mov
xchg
push
push
outsb
iret
mov
ss
mov
divb
mov
adc
add
arpl
lock
outsb
fadds
push
das
hlt
loopne
xor
xor
insb
jns
jns
and
jl
add
sub
mov
xchg
cwtl
jb
mov
cmp
push
rol
push
in
test
jno
or
daa
cld
fdivp
int3
xlat
rclb
cs
mov
pop
mov
stc
lret
bound
inc
hlt
xchg
jge
imul
inc
enter
cmpsb
push
sub
dec
pop
loopne
ret
shll
mov
dec
mov
mov
jne
fldenv
dec
or
pop
outsb
pop
jl
inc
out
loop
xor
js
fdivs
mov
or
cwtl
jle
aam
push
scas
cs
xchg
mov
je
daa
out
addr16
push
lods
or
add
lret
inc
sbb
sub
jae
mov
sbb
sub
cmp
pop
test
sub
pop
arpl
cmp
pop
cmc
clc
loope
out
jb
pop
cmc
adc
clc
pop
mov
mov
outsl
sbb
push
test
pusha
lock
std
add
mov
dec
pop
mov
jmp
mov
fcoms
movsb
pop
inc
loope
or
push
shl
mov
and
loopne
lret
adc
mov
shlb
ss
cmp
jg
and
cmpsl
lds
fldl
loop
cmc
mov
inc
or
lea
xchg
mov
cmpsb
scas
mov
je
xchg
adc
mov
lods
aaa
mov
mov
test
mov
fimull
mov
imul
addr16
ret
dec
bound
les
sub
push
xchg
add
aas
pop
ficompl
js
jno
dec
stos
shrl
and
cld
out
pusha
iret
cmp
mov
mov
faddl
adc
and
inc
mov
push
imul
mov
mov
adc
fs
outsb
cmpsb
rcrl
cmpsb
dec
ret
in
push
and
pop
lea
or
sbb
fldl
clc
xchg
divl
push
out
xor
enter
xchg
mov
xchg
pop
mov
out
imul
pop
in
push
rcll
daa
loop
sub
push
adc
mov
jae
dec
jg
inc
lock
jp
out
mov
or
pop
cmp
dec
sub
inc
out
in
addr16
fistpl
call
pop
mov
adc
sahf
shlb
mov
and
or
jp
bound
cmp
popf
scas
xor
pushl
mov
mov
out
cmovnp
fldlg2
dec
call
mov
frstor
neg
lret
sarl
loope
fcom
sbb
lods
sub
pop
outsb
test
shrl
scas
pop
movsl
in
aad
inc
sub
add
test
sub
js
les
xor
pop
or
lea
fisttpl
adc
std
dec
sbb
xchg
lret
mov
les
sbb
pop
cmc
inc
jge
lods
adc
out
das
ret
push
andb
adc
nop
jo
data16
scas
addb
icebp
popf
lods
add
shll
hlt
pop
jp
lret
inc
mov
in
cmpsb
in
scas
cmp
push
fildl
cmp
jmp
pop
scas
mov
call
mov
ljmp
inc
mov
shrb
dec
jae
mov
mov
xor
add
ja
outsl
push
into
adcb
mov
sub
sbb
jg
pop
mov
cltd
std
jl
popa
push
fs
test
pop
mov
fdivr
dec
clc
inc
mov
jae
aad
icebp
icebp
out
incb
or
and
hlt
in
add
icebp
shll
add
mov
lods
dec
xor
bnd
loop
stos
cmc
aad
push
mov
mov
mov
xchg
fwait
pop
pushf
not
mov
cltd
stos
lods
push
dec
int
mov
repz
cld
cwtl
mov
adc
cmp
inc
xor
cmp
mov
cli
adc
cmp
aad
mov
and
push
mov
sbb
inc
jns
imul
add
pop
cmp
or
repnz
and
push
mov
add
mov
cmp
jnp
add
scas
push
sub
jmp
pushf
shrb
or
call
pop
in
cwtl
or
movsl
jp
mov
sub
daa
mov
mov
out
xor
data16
lahf
es
inc
int3
and
fidivrl
repnz
movsl
repz
pop
push
cli
jg
in
push
xchg
and
cmc
xor
inc
fbstp
btc
xchg
jl
push
data16
jae
xchg
jmp
mov
inc
scas
stos
ja
push
repnz
sahf
sub
mov
imul
and
pushf
jl
lds
pop
inc
adc
add
imul
stc
pop
inc
mov
mov
cmp
and
inc
push
idivb
ljmp
rcrb
inc
daa
jg
call
loope
popa
xchg
je
rcl
sahf
insl
push
add
lretw
insl
mov
or
nop
jno
dec
xor
push
data16
cmp
sub
nop
add
ja
xchg
lods
dec
cs
cld
xchg
je
sub
test
shlb
in
add
push
push
loope
mov
bound
mov
push
fdivrl
gs
mov
lods
outsl
fs
jge
outsb
pop
dec
mov
adc
cltd
push
mov
jae
pop
cmp
stos
ret
mov
sbb
jmp
pop
push
orl
push
inc
push
pop
subl
imul
pop
xor
jns
cmp
mov
movsb
pop
cmpsb
pop
xchg
rorb
sub
nop
cmp
jl
nop
jns
in
sub
inc
push
rorl
pop
mov
in
xchg
mov
xor
subl
jl
mov
sbb
jg
je
mov
sbb
pop
stos
and
jb
and
ficomps
mov
mov
mov
scas
mov
loope
movsl
sahf
js
pushf
xlat
push
push
jbe
pop
mov
sub
stos
mov
je
inc
jmp
xchg
mov
cmp
es
xchg
fistps
out
mov
andb
inc
xlat
lea
cmp
jge
js
mov
enter
xor
lret
js
mov
cmp
loope
jns
jnp
rcll
push
jle
insb
push
pop
insl
xor
mov
or
xor
loopne
into
sub
lods
out
xchg
cmpsl
call
xchg
ja
rcl
xchg
pop
push
pop
shl
mov
inc
xor
dec
push
in
push
mov
fadds
pop
xchg
scas
xchg
mov
test
mov
pop
adc
add
in
arpl
mov
in
fimuls
int
icebp
iret
mov
ljmp
outsl
cld
push
adc
sub
sub
and
sarb
std
ss
sbbb
pop
cmpsl
call
jnp
mov
aad
or
nop
add
dec
dec
jbe
sub
fbld
out
inc
cmp
cli
dec
xor
or
clc
push
lds
arpl
int
and
pop
leave
movsb
lods
push
mov
jle
stc
cmp
xchg
mov
sub
jne
add
mov
pop
lret
push
iret
mov
pop
lahf
lcall
cwtl
sbb
adc
movl
xor
bound
push
dec
push
mov
les
rorb
fldcw
push
xor
cwtl
call
mov
mov
adc
or
push
or
cwtl
testl
dec
push
loope
push
imul
cmp
cmc
mov
xchg
daa
mov
mov
or
add
cli
mulb
cmp
push
repz
dec
sbb
lret
movsb
jle
push
imul
push
pop
leave
daa
fimuls
push
or
movsl
out
adc
and
adc
push
add
cmc
movsl
push
scas
popa
push
int3
mov
dec
je
and
iret
xchg
mov
cltd
ret
cmp
cs
cmpsb
xor
jl
cs
jg
movsb
mov
rclb
xchg
push
xor
add
inc
jl
fs
mov
dec
jns
push
push
sub
push
mov
xor
inc
clc
or
inc
fistl
cwtl
push
jecxz
mov
pop
jne
movsb
mov
jge
movsb
adc
ljmp
out
mov
negb
mov
mov
addr16
mov
rcll
pop
negl
bound
push
iret
xchg
in
mov
hlt
adc
scas
push
out
rorl
pop
mov
mov
movsb
mov
test
out
outsb
sub
mov
cmp
dec
cs
jae
or
jae
pop
cmp
jge
sarb
pop
negb
sbb
imul
in
pop
xchg
xchg
xchg
xchg
fisttps
in
lea
movsl
insl
pop
xor
sbb
lods
mov
push
sub
scas
adc
pop
pop
dec
xchg
sub
cs
jnp
movsb
sub
lret
dec
push
das
jmp
rolb
mov
cwtl
cmp
xchg
or
into
fdiv
icebp
mov
mov
or
xor
insl
push
rclb
xchg
jge
sbb
lcall
adc
mov
mov
push
ret
cld
add
and
push
push
jo
xchg
jp
dec
mov
mov
add
in
aas
pop
jp
stos
ja
pop
mov
add
lcall
pop
in
sub
imul
lea
les
orl
jecxz
fwait
and
and
jbe
mov
pop
jae
into
out
mov
xchg
dec
ret
dec
mov
inc
sbb
add
pop
test
mov
inc
cmp
jge
mov
mov
pop
jbe
shl
mov
mov
icebp
xchg
fidivl
iret
mov
cmp
mov
std
jmp
xchg
xlat
cmpsl
jl
adc
inc
sbb
push
jge
pop
test
jecxz
shlb
insb
xor
out
cwtl
popa
sbb
addb
mov
mov
mov
xchg
jmp
push
xchg
jecxz
shl
inc
mov
pop
sub
pop
jae
mov
daa
stos
mov
jo
push
push
sbb
jl
jnp
daa
repnz
cs
out
adcb
mov
jae
jne
pop
push
xor
mov
int
loop
inc
enter
or
clc
outsl
mov
xchg
fldl2e
sub
daa
sub
xor
loope
sub
test
cli
pop
push
negb
xor
roll
js
jg
sbb
pop
std
lock
test
jnp
inc
daa
and
xor
xlat
scas
dec
add
jb
scas
or
cmp
or
jae
add
inc
cmpsl
sbb
adc
xchg
mov
arpl
push
pop
jno
sbb
aaa
jmp
ret
outsl
ja
mov
pusha
jmp
out
lahf
int
mov
pushf
or
repz
jmp
shl
adc
jo
call
inc
xor
mov
push
je
mov
push
test
and
leave
mov
cwtl
sub
int3
dec
imul
mov
aad
sbb
or
add
jbe
cwtl
add
mov
mov
adc
cmpsb
sbb
mov
sub
inc
xor
cmpsb
es
out
push
das
das
mov
sub
in
xor
testb
data16
add
mov
xchg
xchg
fdivs
or
sub
mov
sti
pop
push
orb
enter
int3
cmp
add
add
fistpl
cmpsb
add
cwtl
ds
loope
int3
mov
aad
pop
inc
pop
test
sub
ret
xor
mov
inc
mov
mov
inc
clc
addr16
jl
dec
dec
lret
mov
out
pop
cmp
push
pop
jmp
cmpsl
fidivs
in
repz
sub
inc
add
pop
mov
out
pop
cli
pusha
push
push
pop
push
lds
and
mov
lcall
loopne
adc
jge
sub
sahf
in
push
scas
das
or
stos
xlat
bound
mov
cld
xor
fcmovne
out
xor
sbb
push
int
stc
iret
dec
bnd
rclb
push
and
pop
xchg
mov
push
sbb
and
inc
cmp
fbld
jnp
xchg
mov
cmp
add
and
cwtl
jne
jmp
add
scas
push
lea
jmp
cmp
pop
lods
test
jnp
mov
cmp
and
xlat
sub
dec
loop
lret
loop
mov
add
jle
inc
cwtl
stc
shll
adc
xor
daa
cld
ja
cmp
cmp
mov
sti
movsl
push
jns
dec
sbb
daa
sbbl
imul
sub
gs
jmp
and
push
dec
jo
mov
xor
cs
mov
push
mov
test
jae
hlt
std
popa
popf
inc
out
inc
and
pop
sub
lahf
or
push
subb
inc
insb
ja
bswap
adc
dec
add
or
pusha
aaa
or
ds
stc
daa
call
cmp
push
loopne
ss
push
outsl
xchg
sahf
out
cwtl
lret
scas
mov
pop
pop
push
sbb
xchg
mov
cmp
scas
jne
addl
gs
add
add
xlat
pushf
and
popf
xor
bound
jp
movsl
lret
aam
xchg
daa
aaa
std
and
jno
clc
mov
adc
fs
ss
sub
jle
lods
sti
faddl
jl
push
mov
xchg
int
out
inc
test
add
adc
mov
rcll
std
ds
test
std
or
test
rorb
inc
stc
lock
scas
xchg
scas
repz
cmc
dec
push
cmp
pop
mov
pop
sarb
sarb
cmc
mov
push
pop
aaa
mov
mov
in
insl
outsb
xchg
test
gs
mov
or
or
repz
cltd
rcl
out
jmp
lock
adc
pushl
stc
push
xchg
scas
dec
imul
shrb
pop
adc
lock
js
xor
incl
ror
lea
loope
xchg
mov
ss
std
jno
outsb
push
adc
push
ja
iret
mov
mov
orb
test
aam
add
push
xrelease
lock
rorb
shrl
jbe
xlat
loope
daa
ljmp
pop
lea
inc
nop
add
inc
push
inc
hlt
push
jp
and
mov
mov
push
je
xor
push
lahf
jmp
cmp
sub
imul
xor
push
fwait
outsl
jne
stos
mov
fmul
mov
pop
sbb
pop
jp
lcall
push
in
push
lods
in
pushf
cmp
add
push
std
popf
xor
bound
ret
push
xchg
repnz
adc
lea
aas
cmc
test
sti
mov
out
jae
push
lret
insb
addr16
jmp
fwait
or
loope
jns
pop
cmp
scas
mov
in
cmpsb
or
push
jl
mov
inc
jnp
mov
sarl
test
rcrl
or
lea
out
in
cwtl
rcrb
jno
fmul
mov
enter
xor
arpl
ret
fnsave
xchg
in
data16
mov
sbb
insl
inc
stos
nop
movsl
adc
in
leave
xor
xor
xor
jecxz
js
and
xchg
xchg
leave
xchg
stos
jnp
dec
mov
sub
sub
int3
push
inc
mov
insl
subb
jp
dec
xchg
mov
or
loopne
clc
sarb
addr16
imul
inc
adc
inc
jle
test
ret
add
sahf
mov
dec
call
rorb
pop
cs
cwtl
mov
stos
cmpsl
clc
lret
lods
pop
fdivrs
movsb
adc
adc
adc
mov
stos
fwait
nop
enter
pop
cmp
or
ja
push
loope
lock
loope
inc
mov
int
pop
pop
call
dec
popf
xchg
jl
xor
mov
cmpsl
push
addr16
repz
inc
lods
rcll
add
add
rorb
inc
push
pop
dec
pop
aad
mov
fwait
jg
pushf
mov
sbb
and
dec
push
mov
outsl
add
fwait
orl
adc
or
push
sbb
cmpsl
and
pop
cs
popf
adc
mov
and
or
movsl
sbb
mov
add
shl
loope
int3
cmpsb
jp
xor
xor
jge
iret
and
mull
or
in
arpl
sub
cli
rorl
ret
cwtl
xchg
xchg
sbbl
lret
push
jge
cmpsl
lret
out
push
fs
xchg
xchg
popa
ljmp
and
icebp
adc
sarb
loopne
push
int
inc
dec
pop
mov
bound
iret
or
iret
notb
xor
xchg
dec
mov
or
repnz
lock
test
subl
or
cmp
cmpsl
ret
sub
loope
xor
sahf
fwait
jae
in
ljmp
xor
xor
pop
mov
lahf
push
xchg
fnstsw
sub
xorl
stos
xchg
sub
loop
fcomps
stc
aaa
out
and
adc
aam
stc
push
hlt
aas
jl
scas
lcall
and
cmp
lods
xor
xchg
arpl
xchg
loopne
push
loop
pop
push
aaa
loopne
adc
pop
push
ljmp
repz
lret
mov
scas
icebp
push
cmp
stos
pop
inc
inc
xchg
push
and
pushf
pusha
mov
sbb
dec
iret
aas
dec
dec
xchg
and
and
fwait
mov
push
adc
add
outsb
sub
lock
xor
stos
push
in
scas
cld
dec
and
mov
cmp
ror
xchg
mov
jge
push
dec
adc
mov
mov
lock
gs
jecxz
sti
lret
or
mov
icebp
xchg
and
lcall
icebp
outsb
cmp
sub
cmp
mov
sahf
ret
cmp
xor
das
stos
inc
pop
inc
loopne
pop
xor
mov
inc
ja
pop
xchg
mov
xor
dec
add
adc
push
stc
inc
fs
push
out
iret
push
dec
pop
push
stc
stos
pop
shlb
js
pusha
in
add
mov
xor
mov
lret
outsl
rorl
lods
pop
xchg
mov
mov
jp
push
gs
lcall
cli
xlat
testb
aas
test
lcall
cs
lock
enter
cmp
mov
and
inc
subb
mov
sbbl
out
pusha
loope
outsb
cli
jnp
out
hlt
mov
jl
cld
or
mov
mov
lret
pop
adc
arpl
aas
or
mov
loop
jns
daa
jb
xchg
and
cmpsl
cmp
and
adcb
arpl
cmp
cmpsb
jl
clc
dec
xchg
pop
fisubrs
in
sub
mov
inc
pop
and
rorb
jb
aad
bound
cmp
addr16
repz
mov
fisttps
and
sub
scas
les
insb
mov
leave
pop
enter
xor
stos
jb
mov
les
fimull
pop
pop
mov
mov
fcoml
mov
shlb
or
ficoml
push
sbb
es
adc
dec
mov
out
cs
mov
lcall
sub
add
and
mov
jge
rorl
mov
fadds
movsl
fidivrs
pusha
xchg
adc
insl
jecxz
add
repnz
or
test
xor
addl
mov
lret
roll
mov
adc
sahf
dec
jae
mov
cld
test
sub
jge
dec
cmc
lcall
dec
sbb
xor
and
xor
sbb
add
rcr
cmp
dec
mov
or
pop
fisttps
xor
mov
xchg
scas
sub
lcall
je
mov
add
sbbb
pop
les
repz
js
in
sub
push
call
mov
mov
outsl
out
jbe
cmp
jge
lret
pop
push
fcmovnbe
fldt
icebp
stc
inc
push
movsl
adc
aaa
add
push
mov
jb
fistpl
xor
pop
cmp
add
stos
ret
push
mov
into
mov
cmc
pushf
push
mov
mov
cmp
rolb
inc
pop
dec
hlt
inc
push
pop
and
loope
out
movsl
aas
push
jp
mov
lock
jae
fcmovnbe
jg
fwait
dec
or
pop
sub
dec
int3
popw
stc
mov
dec
arpl
fcmovu
rcr
pushf
sbbb
bound
hlt
je
jno
jb
or
flds
in
xor
and
and
sub
icebp
pop
xchg
sub
xchg
ds
aad
jg
scas
lods
mov
inc
ret
mov
xor
aas
shll
mov
sub
jge
fcomp
mov
inc
das
adc
sub
andl
mov
mov
dec
out
fildll
xchg
sarl
in
xchg
cld
cmp
out
mov
push
mov
hlt
shll
add
sbb
mov
or
icebp
das
repnz
lret
mov
mov
or
xor
inc
imul
jo
out
aad
loop
mov
out
and
ret
in
sub
cmc
xchg
fmull
es
mov
jmp
adc
or
hlt
ret
cmp
jg
aam
or
add
loop
push
jmp
jae
movb
lret
mov
jne
out
mov
inc
aam
jo
ja
push
sbbb
xor
lret
fildll
loopne
inc
lea
stos
mov
mov
xor
sbb
or
xchg
hlt
xchg
pop
enter
add
in
loop
sarl
jecxz
out
sahf
sub
fwait
mov
jmp
flds
inc
xor
shr
inc
pop
sbb
xchg
cmp
cltd
mov
ds
pop
push
sbb
fnstsw
insl
gs
outsb
sbb
pop
loop
call
mov
mov
mov
pop
dec
aad
out
cmp
stos
ds
mov
pop
ret
cmp
add
fisttpll
xor
adc
or
lcall
sub
cmp
jae
and
cld
push
add
incl
pusha
mov
fmull
call
lret
mov
pop
mov
mov
mov
pop
inc
add
pop
outsb
mov
sub
imul
mov
into
loope
mov
sbb
jo
inc
and
hlt
adc
cmp
cmpsb
add
push
pop
inc
mov
dec
adcl
dec
and
pop
in
cs
clc
rolb
lods
or
jge
lret
sti
fisubrs
mov
fsubrs
imulb
adc
mov
int
dec
sahf
xchg
xor
mov
imul
xchg
out
cmpl
stc
mov
jle
pop
movsb
ret
dec
es
int
mov
fnstsw
out
shll
je
push
outsl
arpl
mov
repnz
aad
and
push
repz
mov
mov
pop
sbb
xchg
scas
xor
loop
jmp
rcrb
xchg
sahf
aad
mov
fs
out
mov
ljmp
mov
es
call
daa
pop
int3
out
push
pushf
adc
cmp
rclb
fistps
jb
mov
cmp
sbb
sbb
loope
adc
cmp
xchg
out
mov
sub
push
stc
xchg
jnp
cmp
dec
into
xchg
int3
adc
xchg
lcall
arpl
inc
push
inc
mov
stos
scas
mov
push
cmc
jle
mov
xor
mov
dec
pusha
pop
sub
daa
xchg
and
and
fldenv
mov
repz
push
sbb
and
sti
inc
dec
sarb
push
test
push
mov
cmpsl
arpl
sbb
jp
jg
jnp
add
arpl
repnz
xchg
sar
cmp
adc
pop
xchg
push
faddl
mov
aas
cs
push
rol
lahf
das
mov
sar
mov
push
push
cmpsb
ret
cmc
push
dec
push
cld
fisubrs
in
js
xor
je
out
in
inc
stc
mov
cmp
getsec
shll
jl
and
or
mov
mov
adc
sub
mov
rclb
pop
lods
mov
shr
fnstcw
cmc
inc
or
testb
cmp
pop
fsubrl
mov
dec
addr16
cmp
lds
jno
mull
mov
cmp
lahf
stos
sbb
lcall
pop
loopne
in
int3
enter
or
push
outsl
push
mov
push
sub
ss
jb
add
movl
icebp
or
scas
out
call
aad
mov
lret
jne
sbb
pop
pop
es
into
adc
call
pusha
pop
mov
mov
clc
stos
sti
xchg
enter
xchg
testl
add
sbb
push
pushf
pop
data16
adc
imul
sub
inc
jmp
push
and
ret
xor
jg
cmp
sbb
adc
lcall
aam
fnstenv
mov
arpl
inc
mov
pop
scas
push
push
inc
xchg
lods
test
cmp
pop
pop
mov
or
push
mov
lods
pop
inc
outsl
jae
and
pop
pusha
int
lods
sbb
sub
jo
sub
outsl
or
push
mov
insb
cmp
inc
jne
mov
sbb
pminub
sbbb
xchg
cmp
mov
std
jo
sbb
adc
int3
adc
xor
adc
pop
dec
fldl
cmpsl
xchg
cs
pop
mov
pop
inc
xchg
mov
sub
arpl
push
mov
mov
arpl
add
sbb
cmpb
push
mov
mov
cld
enter
test
imul
movsl
imul
add
lcall
int3
cmp
adc
xor
andl
sbb
lods
sbb
dec
das
jo
and
xchg
fistl
xor
outsl
cs
pop
loop
push
inc
inc
add
jge
cmp
pop
xor
jo
jmp
test
in
jae
shlb
aas
sbb
mov
je
dec
stc
aad
mov
popf
je
sbb
mov
loop
out
movl
out
cmp
mov
mov
dec
pop
xchg
inc
in
rolb
cmpsl
dec
stos
mov
xor
xor
push
inc
int3
push
int
fistl
jnp
les
dec
test
stos
fcmovu
frstor
or
fisubrs
sarl
cmp
inc
add
add
imul
icebp
mov
clc
sti
push
push
lret
stos
outsl
out
inc
push
mov
lock
adc
ss
pop
out
mov
pop
add
jmp
bound
cli
ficoml
mov
or
mov
mov
andl
clc
into
ficompl
cmp
dec
and
roll
push
and
test
xchg
divl
mov
dec
jne
mov
cmp
push
mov
adc
sub
roll
aad
scas
test
and
das
dec
pop
pop
or
sti
shll
fistps
fs
or
ds
sbb
lcall
jns
inc
or
mov
cs
jg
leave
push
mov
adcb
shrl
outsb
dec
push
xor
push
clc
aaa
lods
pop
xor
jnp
shlb
movsb
dec
ljmp
push
inc
push
stos
add
jo
test
lea
cmp
sti
lret
pop
fs
ljmp
sub
sub
cld
cmp
aas
jmp
mov
dec
jae
fcomps
sub
mov
adc
sub
jne
int
mov
mull
movl
in
dec
push
scas
adc
fcompl
pop
addr16
movsl
ss
add
movsb
inc
adc
fptan
insl
loopne
rolb
xchg
js
out
fnstenv
cmp
arpl
mov
mov
int
ret
mov
jmp
add
nop
decl
jb
daa
mov
aas
xor
push
cli
mov
lods
stc
sbb
outsl
mov
dec
aad
in
aad
and
cmp
in
popf
adc
in
xor
loop
xor
jmp
jo
xchg
mov
push
xchg
in
mov
push
ret
or
cmp
xor
xor
out
das
push
shl
sti
pop
or
nop
insl
loopne
xor
jbe
jnp
xchg
lods
push
imul
push
dec
scas
adc
mov
cmp
into
mov
sub
jle
push
sub
pop
jno
cmp
pop
ja
mov
mov
xor
sub
cmp
dec
test
and
jno
lret
in
or
xchg
repz
mov
gs
cmp
outsl
sub
mov
fdivp
repz
loop
outsl
jge
je
inc
mov
push
lods
lret
inc
pop
and
mov
mov
sub
fstpt
jae
mov
xchg
sbb
cmp
out
sub
cmpl
test
int
mov
mov
push
jge
cmp
enter
add
ds
dec
jp
cli
xchg
sbb
stc
je
mov
inc
and
dec
cltd
scas
aas
jnp
je
sub
ror
xor
pushf
mov
std
push
insb
xor
sub
add
adc
pop
push
shll
popa
adc
stos
pop
enter
aaa
mov
lock
add
push
xor
icebp
arpl
das
push
jns
out
xor
jo
js
inc
adc
add
cli
bound
scas
ror
pop
xlat
out
jo
mov
in
mov
mov
adc
cmpsl
mov
bound
mov
cmp
push
mov
xchg
divl
push
push
mov
xor
pop
and
leave
shlb
jo
cli
push
test
hlt
imul
push
ficompl
or
test
add
xor
mov
push
mov
sbb
clc
mov
in
pop
ja
and
insb
mov
repnz
jmp
out
pop
sti
int
cmp
add
push
sub
es
xchg
ja
mov
testl
mov
mov
fdivrp
test
testl
aam
jle
pop
bound
rcr
out
or
lahf
jecxz
aam
inc
movsl
nop
fildl
fidivs
movsb
sbb
push
cmc
push
test
cltd
popf
or
mov
sbb
mov
scas
mov
mov
push
pushf
loope
jmp
pop
jae
popa
and
ret
mov
cmp
jge
les
cwtl
gs
add
sar
dec
loope
pusha
xor
push
aad
outsl
loopne
adc
lods
and
mov
movsl
push
lods
push
rclb
add
test
inc
imul
pop
mov
leave
sbb
xor
push
test
adc
and
ljmp
sub
out
cli
mov
push
jns
mov
movnti
ja
sar
and
xchg
fbstp
pop
or
cmp
jne
imul
adc
inc
jmp
push
nop
ss
and
imul
inc
xchg
sti
aad
xor
jo
paddb
ds
cmp
push
loopne
push
out
cmp
inc
inc
cmp
or
jge
fldenv
outsl
insb
xchg
cmc
rcrl
mov
push
lcall
cmp
mov
rcrb
mov
push
mov
jbe
arpl
repz
mov
sbb
sub
ret
in
pop
les
fists
push
inc
xor
push
push
call
xchg
scas
rcr
xor
test
repnz
pop
mov
mov
sub
addl
scas
inc
shll
pusha
add
xchg
add
xor
or
imul
cmp
enter
or
mov
imul
pop
movsl
outsb
push
addr16
test
mulb
jno
pop
loop
shll
mov
pop
jg
xor
push
out
sbb
lods
xchg
xchg
jb
out
or
xchg
out
popf
mov
cmpsb
adc
fdivr
repnz
fstps
add
mov
ljmp
pop
cmpsl
cmpsb
notl
or
xchg
dec
das
jecxz
sarl
and
cmc
ja
mov
pop
jl
pop
in
or
cmp
fwait
lea
out
mov
rorl
repz
into
shll
jmp
or
mov
add
sbb
ret
xorl
cmpsl
nop
lods
popa
ret
pushf
fisttps
push
push
mov
sbb
bound
mov
orb
shr
lcall
adc
out
sbb
div
mov
jo
call
lret
inc
shll
adc
and
mov
std
in
push
lock
test
push
sar
std
cmp
sub
insb
lahf
or
popf
push
sub
outsl
scas
pop
fwait
loope
fadds
cltd
inc
mov
mov
xor
add
inc
jo
xor
and
daa
adc
loopew
push
imul
fimull
pop
shll
mov
iret
jle
addr16
push
cmpsl
jb
insl
scas
add
lcall
sahf
loop
sti
lock
jge
add
lods
push
and
dec
inc
xchg
sub
cltd
sbb
imulb
inc
ljmp
adc
dec
mov
in
push
pop
jmp
rcll
shlb
sbb
call
jle
or
bound
push
mov
mov
pop
and
clc
push
lahf
jne
mov
xor
xor
cmc
ret
and
das
cli
cli
or
es
pop
cld
xor
jns
xlat
dec
mov
cmp
les
mov
inc
aas
nop
adc
scas
push
mov
inc
cs
mov
inc
jle
push
jnp
in
fnstsw
pop
xchg
adc
rcrb
or
mov
mov
je
into
and
clc
jae
lds
enter
fwait
pushf
push
xchg
lods
add
and
add
lods
je
xchg
int3
enter
inc
ret
pop
adc
movsb
icebp
repnz
push
push
xor
shll
sbb
xchg
repz
inc
inc
daa
cmp
push
xchg
mov
lahf
test
out
dec
lods
mov
sbb
sbb
rolb
ret
fwait
add
mov
lret
sbb
and
dec
dec
out
dec
jnp
adc
mov
rcl
inc
in
test
adc
fcomps
jecxz
pop
xchg
fldenv
adc
rolb
popf
jno
je
out
cmpsl
cwtl
in
mov
xchg
bound
mov
outsl
cmp
mov
add
rolb
fs
cmp
xchg
fisubrs
scas
cmpsb
xchg
addr16
inc
js
add
xchg
dec
ret
pop
and
decb
negl
loop
testb
xor
fnsave
push
enter
lock
xchg
mov
je
adc
es
fists
cmp
nop
jnp
pusha
pop
aam
mov
push
adc
xor
addr16
cmp
lods
add
or
loop,pt
aas
sbb
mov
lods
out
jecxz
mov
and
and
jnp
mov
xor
dec
rcrl
aad
xor
nop
inc
pop
push
div
imul
fisttps
aam
and
addl
out
or
dec
xchg
imul
cmc
dec
pop
andb
xor
addb
and
enter
jne
lea
mov
hlt
es
push
shlb
sbb
xchg
mov
sub
lret
sarb
scas
or
sti
or
xor
push
push
repnz
lahf
outsb
test
je
sbb
dec
dec
repz
add
cli
stos
jo
loope
inc
sub
outsb
jne
rcll
mov
stc
cmp
outsb
adc
stc
orb
sbb
aas
lret
pop
ret
cmp
push
jnp
orb
subb
mulb
sub
inc
data16
mov
popf
subb
fistpl
inc
add
mov
dec
pop
out
je
bound
cmp
cmp
push
mov
out
inc
push
xor
cmp
mov
dec
aam
pop
outsb
rcrl
mov
jne
in
sbb
mov
inc
or
movsb
push
push
nop
jo
in
data16
mov
cmpsl
dec
cmp
add
in
into
mov
das
popa
jo
pusha
mov
cltd
or
pusha
outsl
lret
fimuls
loop
cmovb
pop
shlb
in
push
test
into
dec
push
idivl
inc
push
pop
fs
mov
sbb
lret
arpl
jecxz
jmp
jp
mov
mov
jb
das
repz
cld
mov
mov
out
mov
mov
dec
mov
push
inc
in
pop
repz
mov
incb
xchg
mov
sbb
stos
sub
std
inc
mov
clc
loopne
fistpl
mov
popf
clc
xor
pusha
and
insb
mov
std
and
sub
pop
insb
push
movsb
hlt
mov
add
adc
movsb
xchg
into
sahf
xor
int3
push
ss
inc
jae
dec
ss
or
xor
sahf
cmp
and
mov
mov
fcmovnb
stc
fsubrs
jl
or
jns
inc
mov
int
cmp
mov
or
nop
lret
gs
daa
mov
pop
cmpb
sbb
push
sub
cmp
out
mov
sbb
decl
cwtl
ds
push
cmpsb
or
gs
hlt
fisubs
shlb
aam
dec
inc
push
add
sub
push
mov
out
cmp
cmpb
inc
sub
jae
mov
fistps
pop
std
adc
repnz
gs
outsb
js
xor
test
test
cmp
sbb
mov
lret
sbb
jno
cmp
test
push
mov
push
mov
mov
sarl
or
xor
xchg
rcll
leave
push
xor
xchg
setle
xchg
ss
adc
ret
xchg
fwait
in
dec
imul
mov
mov
aas
pop
loope
jae
fwait
add
jle
inc
jne
add
icebp
mov
mov
xchg
out
sub
xor
push
push
fwait
add
insl
or
sbb
xor
test
inc
cs
cld
testb
test
test
push
int3
loopne
icebp
loopne
push
push
into
jmp
ret
and
scas
adc
pusha
mov
pop
mov
mov
shrl
fidivs
rclb
add
push
xchg
mov
ret
cltd
rcl
jl
cmpsl
jne
dec
and
lcall
cmp
movsl
lock
out
sub
add
dec
adcl
jbe
adc
dec
lcall
cmp
xor
mov
sbb
repnz
push
cmc
push
pop
pop
mov
pusha
xor
je
sub
lods
and
lret
jecxz
mov
inc
ljmp
mov
sbbl
pusha
dec
cltd
mov
xor
ud1
xor
fldl
sub
add
and
inc
xor
jecxz
jp
jl
test
dec
lahf
sbb
inc
push
inc
adc
shlb
enter
and
dec
loope
mov
test
or
ja
mov
xchg
cs
bswap
xchg
mov
outsl
das
sbb
push
stos
call
fcmovu
mov
test
xchg
jbe
add
addr16
mov
mov
add
and
sub
push
xor
ss
add
xlat
mov
loopne
cmp
jg
pusha
les
mov
mov
mov
pop
fidivrs
xchg
adc
imull
aas
lcall
outsb
out
loopne
or
mov
ss
movsb
movd
ljmp
rorb
ds
scas
cmp
mov
xchg
shlb
bnd
push
cmp
cmp
sbb
mov
mov
push
scas
inc
push
fildll
inc
add
dec
push
mov
sbb
aaa
stos
lret
insl
and
enter
sub
ror
icebp
mov
jne
mov
gs
mov
rcr
dec
mov
xor
lcall
inc
aaa
notb
sti
ss
dec
mov
insl
and
sbb
pusha
mov
movsl
ret
dec
and
mov
jp
or
lea
pop
shrb
out
insl
mov
jg
mov
out
push
xor
push
cwtl
inc
push
mov
xchg
jns
scas
out
xchg
cmpb
in
hlt
cmp
or
xchg
hlt
aad
movl
sahf
pop
add
jns
fidivs
in
mov
dec
test
loop
sub
movsb
data16
pop
inc
and
adc
or
addr16
fadd
push
test
clc
sarl
scas
repz
inc
cmp
clc
sbb
mov
inc
pop
fadds
mov
loopne
test
mov
xor
mov
and
pop
call
lods
adc
mov
dec
inc
dec
negl
clc
mov
movsl
loope
lret
out
fistl
stos
sbb
cmp
pop
std
test
adc
jo
lods
ljmp
icebp
xchg
cld
jno
out
shrb
roll
ljmp
repnz
xor
insb
cmc
jae
adc
shll
pop
dec
aaa
outsl
cltd
and
es
push
lods
adc
in
adcb
outsb
mov
outsl
out
cmp
fmul
push
and
leave
div
out
sbb
addb
ret
or
lret
addl
sub
je
jno
imul
iret
push
adc
mov
adc
int3
pop
in
nop
std
cmp
add
jne
mov
push
hlt
push
dec
pop
shl
or
jmp
fmuls
std
pop
or
xlat
stos
call
insb
lods
push
add
sbb
shll
clc
sub
jo
fucomi
jne
fisubl
hlt
push
lds
lcall
jp
cwtl
arpl
and
sbb
test
mov
sbb
out
mov
xchg
nop
test
shll
rcll
mov
das
movnti
sub
repnz
lret
or
mov
nop
decl
xor
sub
inc
lahf
stos
mov
mov
pop
outsl
arpl
insl
push
cmp
xchg
add
add
loope
dec
inc
out
xor
cmp
xor
xchg
push
mov
sbb
jmp
lret
cmpsl
inc
movsb
mov
pop
imul
pop
push
cmp
mov
xor
nop
int3
pop
push
out
mov
lret
jmp
pushf
int3
sub
pop
lods
aad
pop
mov
imulb
and
sub
cs
lods
xlat
cmp
and
jnp
jmp
imul
and
subb
jae
mov
add
mov
dec
xchg
push
iret
loopne
sbb
mov
in
in
fs
aas
jnp
add
mov
cwtl
inc
nop
cmpsb
loopne
out
sub
sub
shll
jnp
daa
mov
sbb
filds
add
daa
rolb
pop
ljmp
push
adc
mov
jge
mov
pop
cmpl
jnp
add
sbb
loop
pop
jnp
clc
icebp
dec
bound
jno
cwtl
sarb
aas
inc
jecxz
mov
aas
or
nop
ja
dec
jge
sahf
nop
sbb
pop
xchg
lods
sbb
test
mov
repnz
cld
add
loope
or
call
mov
out
in
aas
cmpsl
jl
pop
mov
fwait
mov
xorl
repnz
sbb
adc
rolb
mov
pop
pusha
xchg
and
out
xchg
lds
test
mov
or
jmp
sbb
pop
or
and
mov
pop
fidivrl
stos
mov
dec
add
loop
xor
lret
mov
aam
xchg
cmp
repz
les
out
jno
les
insl
dec
mov
fs
mov
loop
inc
xchg
sub
inc
or
mov
mov
jb
neg
int3
test
jp
adc
adc
lret
mov
push
add
mov
dec
in
pop
jae
sub
popa
adc
aas
pusha
or
decb
dec
sbbb
fwait
mov
mov
adc
jnp
xor
aas
cmp
adc
loope
fildll
in
std
xor
fwait
adc
sahf
inc
pop
adc
or
xor
and
pop
dec
lahf
mov
dec
sahf
cli
and
hlt
jmp
xchg
or
lret
nop
jns
loopne
orl
mov
xchg
adc
je
xchg
andb
loopne
push
cmp
mov
adc
mov
jmp
sahf
lods
xchg
in
sbb
pop
insb
push
iret
lods
adc
movsb
in
cwtl
sbb
test
push
call
push
mov
mov
and
dec
aam
mov
sub
sub
xor
mov
imul
xchg
xchg
dec
adc
mov
cmpsl
ja
outsl
xchg
sbb
movsl
inc
insl
xchg
mov
inc
mov
ja
sti
pusha
push
fstps
xchg
jne
jns
mov
cmc
mov
popa
fistpll
das
jb
mov
outsl
pop
int3
push
cmp
stc
sbb
out
adc
repz
add
fsubp
into
xchg
loopne
xchg
mov
in
fnsave
push
loop
pop
out
xchg
inc
dec
or
incb
aaa
orl
adc
cmp
outsb
in
popf
or
xor
hlt
mov
lds
mov
cld
loop
push
sub
cmpsl
test
pop
jae
test
stos
mov
dec
int
fdivl
fcom
dec
in
add
ss
jne
inc
push
cmp
push
aas
xchg
fidivl
jo
cmpb
dec
es
outsl
out
inc
mov
stos
mov
xor
pop
stc
test
pop
cmpsb
mov
flds
out
lods
xor
cli
gs
and
push
imul
fstps
je
in
leave
popf
xor
xchg
fimull
insb
adc
xchg
xchg
mov
enter
dec
test
orl
fstpt
rcr
sahf
ret
sub
imul
mov
inc
das
xchg
cmp
enter
popf
cmpsl
mov
addr16
loopne
and
xchg
xchg
jp,pt
lahf
fdivs
sahf
xchg
stos
pusha
mov
inc
jno
mov
push
mov
sub
sbb
dec
dec
mov
loop
fadds
ljmp
cmp
jae
dec
inc
repz
push
mov
xchg
std
out
lret
negb
cmp
nop
imul
insl
jle
and
pop
xchg
iret
mov
xchg
inc
rcll
dec
add
sub
lock
cmp
push
ret
ljmp
outsb
jl
roll
sti
test
test
and
xlat
pop
push
out
loop
add
mov
adc
sbb
fistps
inc
adcb
faddl
scas
cmc
jnp
mov
mov
call
inc
add
pop
mov
stos
arpl
and
fdivrl
and
nop
push
push
dec
daa
xchg
test
cmp
insl
mov
mov
fs
or
mov
gs
repz
pop
daa
into
pop
cltd
push
pop
les
cmpsb
ret
loope
stos
cmp
andl
and
mov
pop
xor
or
int3
jns
or
push
add
dec
inc
rorb
mov
outsb
and
add
jle
test
dec
shrb
add
push
inc
mov
or
arpl
pop
lcall
aam
repnz
cmpsl
das
movsb
lcall
mov
jbe
movsl
add
mov
dec
test
pushf
mov
add
push
adcl
ds
aam
je
in
push
jae
imul
push
mov
ja
cmpsb
pop
testl
add
fsubrp
jne
xchg
push
stos
cmp
andl
cwtl
pop
xchg
js
add
popf
cmp
and
mov
das
adc
cltd
lock
jno
ret
ljmp
sub
rorb
mov
ret
jecxz
sbb
mov
lahf
or
stc
insb
cli
es
mov
or
push
cmova
xor
int
push
dec
mov
mov
sub
dec
repz
daa
mov
call
enter
int3
sahf
frstor
cmpsb
and
rcrb
stc
jo
outsl
xchg
in
mov
in
ds
ljmp
pop
cltd
or
add
daa
addr16
into
out
lret
cld
mov
out
pop
add
xchg
cld
nop
pushf
insl
sbb
dec
jo
add
repnz
cmp
inc
lods
adc
jb
adc
dec
test
test
iret
jl
insl
inc
or
and
xor
push
or
inc
cltd
out
test
in
jae
loope
or
das
lea
mov
repnz
dec
mov
push
jb
and
xor
inc
add
mov
cmpb
jo
jle
push
cmp
lea
icebp
add
fstpt
pop
adc
mov
sahf
enter
jp
test
xchg
fnstcw
and
push
lea
lret
aaa
add
rcl
jno
jg
sub
in
lods
in
inc
mov
sbb
data16
cld
jnp
das
mov
int3
int3
push
lods
test
cmc
lds
mov
add
or
or
adc
pop
jecxz
into
movb
cmp
or
fisttpl
mov
daa
cmp
pop
dec
jae
mov
leave
and
dec
xor
push
or
dec
dec
inc
outsl
adc
cmp
lcall
jle
mov
out
mov
inc
arpl
add
inc
inc
fs
mov
xchg
cmpsl
in
pop
loop
idivb
mov
mov
mov
std
ja
pushf
or
aad
sarb
xchg
fnstenv
sub
and
and
sub
pop
adc
stos
cmp
sbbb
cmp
std
jmp
pop
inc
sarb
pop
repz
out
sbb
add
jp
pop
jae
or
dec
clc
cmp
sub
jg
xor
sub
into
pop
dec
pop
js
mov
add
or
push
push
mov
mov
nop
das
movsb
fnsave
jno
lods
outsb
insb
test
loopne
xchg
push
lock
es
sarb
rorl
xchg
cmpsl
jg
jle
jle
scas
push
lret
ja
add
add
stos
mov
int3
sub
data16
mov
ret
add
lods
or
xor
pop
xchg
sbb
adc
pop
into
mov
fs
lods
sahf
incb
inc
out
mov
or
negb
cmp
mov
xchg
mov
shll
mov
test
popa
scas
xor
mov
mov
popf
int
ja
sub
mov
in
fxch
mov
cltd
xor
scas
and
cmpsl
push
sbb
jo
cmpsl
scas
or
xchg
xchg
and
push
xchg
mov
das
or
pop
push
pusha
fsubrl
mov
xor
pop
mov
add
scas
insl
lret
xor
jmp
xchg
adc
mov
sarl
pop
xlat
scas
sub
xchg
loop
mov
mov
mov
xchg
adc
xchg
push
js
sub
cltd
rcrl
pop
lods
dec
dec
sub
imul
lea
pop
and
jmp
lret
mov
xchg
rcrb
fimuls
dec
adc
sub
loop
mov
ss
movsl
lret
testb
sbb
int
push
pusha
pop
and
pop
xchg
fcomps
out
cmpsb
adc
or
test
mov
inc
divl
inc
out
pop
mov
sub
jmp
mov
adc
scas
push
jnp
pop
fdivrl
fldt
sub
pop
cld
daa
sti
push
pushf
mov
lcall
sbb
hlt
xor
cltd
dec
pushf
cmpsl
mov
mov
cmp
cs
jae
out
out
sub
jle
cmp
in
xchg
or
sbb
xchg
cld
mov
dec
shrl
sub
mov
scas
imul
sub
stos
inc
jecxz
mov
inc
sub
xor
test
push
pusha
rcrl
inc
aaa
pushf
or
pop
lods
jg
stos
aad
leave
scas
xor
testb
jae
pop
cmp
lds
mov
or
jmp
sbbb
pushf
mov
aaa
push
dec
scas
jbe
sbb
jne
mov
cmp
in
aam
mov
mov
cld
pop
ret
aad
mov
jns
adcb
jo
inc
mov
sbb
mov
gs
arpl
idivb
lcall
mov
cmp
sbb
dec
es
mov
inc
add
ret
or
test
sbb
xchg
sbb
mov
and
lea
mov
stos
in
sub
jge
push
push
in
gs
hlt
imull
add
rep
sub
jg
mov
fsubrs
xor
popa
dec
movsl
scas
out
sub
jns
in
inc
insl
inc
xchg
mov
les
mov
nop
push
pop
ljmp
and
iret
mov
mov
jle
scas
jecxz
xorl
leave
jl
inc
cld
mov
aas
or
pushf
cmp
or
add
sub
lcall
inc
push
es
adc
and
ss
mov
pop
in
pusha
cmp
jecxz
pusha
jge
movsb
push
dec
adc
push
jl
adc
push
jns
idivl
inc
mov
mov
dec
push
pushf
les
test
rep
insl
cld
movsb
lods
and
test
dec
add
xchg
add
inc
inc
xchg
mov
xchg
enter
test
and
sbb
push
xor
ljmp
fwait
outsl
lods
dec
shl
mov
push
add
call
mov
subl
adc
aas
or
pusha
push
lock
out
repnz
xor
jb
ret
pushf
mov
and
dec
test
int
jno
fstpt
push
push
xchg
mov
and
mov
mov
add
mov
dec
or
jle
cwtl
std
test
into
loop
pop
xchg
rcl
icebp
movsb
and
add
inc
shr
adc
cmp
pop
dec
mov
imul
mov
cmp
ror
adc
inc
cmpsl
mull
or
adc
push
dec
mov
mov
pop
mov
inc
mov
fcomi
insl
insb
fmuls
ljmp
aas
adc
loope
into
or
adc
and
xor
jg
pop
and
jl
inc
hlt
rorl
test
mov
pop
xor
scas
push
mov
rorl
imul
pop
push
mov
es
inc
lret
push
popa
repnz
sub
rorb
aas
cmp
std
adc
pop
notb
jae
ja
mov
inc
adc
loope
or
popa
cmp
stos
std
daa
xor
mov
repnz
mov
cli
repz
outsl
jecxz
xchg
and
out
adc
popa
ljmp
popf
mov
cmpsl
aam
push
dec
push
push
jb
mov
cmp
lcall
leave
cld
insb
add
xchg
adc
loop
aas
xchg
sub
jmp
sbb
ljmp
push
aam
fdivrl
push
rorw
out
repnz
fwait
ret
shrl
das
or
adc
dec
xor
and
lock
mov
sbb
or
mov
mov
les
dec
push
inc
cltd
push
adc
xor
arpl
jo
adc
lock
leave
mov
leave
jle
pop
xor
xor
inc
mov
outsl
je
adc
dec
mov
push
aaa
arpl
ja
dec
outsb
adcl
xor
sub
inc
cwtl
xlat
les
sub
dec
sbbl
std
xchg
call
scas
inc
xchg
inc
pop
daa
push
mov
or
jg
mov
fs
sbb
sbb
inc
mulb
jp
mov
fiadds
push
ljmp
imul
div
call
cli
scas
sbbl
rorb
xchg
cmp
mov
ja
jmp
hlt
movsl
adc
sbb
inc
fistl
lcall
xchg
xchg
or
test
scas
ret
lret
or
sbb
xor
adc
cmpsb
sti
jae
and
rcrb
or
or
or
nop
cmp
pop
iret
repz
jmp
dec
sub
ljmp
adc
lea
dec
adc
popf
inc
clc
scas
mov
mov
jno
les
sbb
mov
mov
sar
lahf
cmpsl
pop
nop
loopne
mov
cli
mov
cld
or
clc
mov
sub
cmc
pop
push
inc
inc
stos
xor
aad
stos
sub
mov
gs
ja
mov
fcoml
add
push
jo
xchg
and
pop
xchg
jge
cmp
jbe
push
xchg
jns
mov
mov
jbe
or
xchg
pop
cmpsb
mov
lock
push
push
push
pop
mov
or
and
or
fs
arpl
push
loopne
cltd
subb
add
in
pushf
mov
cwtl
xchg
ljmp
cmovb
clc
je
mov
mov
jle
mov
rolb
out
into
add
mov
dec
xchg
fdivl
jae
and
push
cmp
aas
das
cmp
inc
sbb
mov
ficoms
or
adc
xchg
movsb
loope
scas
shrb
pop
mov
loop
inc
mov
inc
std
fsub
adc
mov
mov
adc
push
sub
jg
in
and
std
call
xchg
add
or
daa
pushf
push
aas
movsb
out
cld
lods
jmp
add
jae
subb
adc
loopne
cwtl
xor
push
and
leave
inc
push
fstpt
imulb
insl
cmc
addr16
pop
pusha
outsb
aaa
fs
lret
xor
inc
fstpt
xor
outsb
mov
outsl
iret
pop
cltd
push
jnp
inc
roll
test
or
xor
inc
fcompl
inc
mov
xchg
xlat
mov
insl
xchg
test
sub
lahf
nop
jl
loop
test
test
mov
out
scas
loop
and
std
aam
xchg
pop
rorb
push
shlb
pop
filds
or
pop
mov
or
imulb
les
adc
es
push
fstpl
ret
fsubr
xchg
xorl
in
push
in
test
pop
xchg
cmp
fsubr
inc
movl
xchg
repnz
mov
sub
fdivrl
jmp
fmul
aad
insb
negb
setnp
sbb
ret
test
add
and
insl
loope
pop
pop
outsb
jl
cmp
push
sub
jbe
xlat
lock
push
mov
hlt
jl
jle
adc
xor
ret
jp
fs
lods
clc
or
mov
fwait
outsl
mov
scas
xchg
mov
jp
pop
sarl
jae
dec
sbb
out
jmp
mov
bswap
dec
inc
out
jo
movsb
add
jecxz
sub
inc
jecxz
sub
xchg
pushf
lea
dec
mov
test
into
pop
repz
inc
leave
sti
adc
mov
fsts
jnp
sbb
js
inc
loop
nop
je
mov
cmp
and
pop
cmpsb
scas
and
jle
loop
cltd
cmp
pop
mov
push
int
out
loopne
and
cld
lock
out
xchg
js
out
cmpsb
aaa
imul
loop
pop
mov
mov
scas
ds
jne
inc
sbb
mov
xor
xlat
aam
lcall
clc
add
mov
push
sub
or
or
movsl
sti
inc
hlt
aam
loop
mov
enter
cmp
lret
jo
add
jo
jp
stos
sbb
push
pop
adc
stc
rclb
mov
xorb
sub
push
cmpsb
push
and
shr
dec
xor
xchg
stos
loop
icebp
aad
or
negb
jno
jo
cmc
mov
push
xor
mov
test
fcmovb
push
pusha
stos
dec
int3
pop
jl
ss
pop
mov
arpl
mov
into
mov
scas
push
nop
js
mov
jmp
push
data16
push
je
mov
loopne
xor
shlb
add
lret
ret
mov
fidivs
cltd
mov
lahf
and
cmp
bound
into
jne
sahf
mov
pop
les
jns
push
test
test
xor
mov
mov
testb
cwtl
or
cs
jo
add
push
dec
es
dec
mov
fmul
xchg
aaa
mov
inc
cmpsb
mov
mov
loope
pop
out
ret
push
sbb
les
pusha
mov
les
add
sbbl
adc
or
push
pop
cld
sbb
out
push
insb
xchg
pop
dec
or
adcl
jg
fwait
aaa
jb
fwait
xor
adcl
in
mov
cs
cmp
sub
insl
out
dec
mov
pushl
lea
sbb
aam
pop
movsb
inc
dec
ljmp
adc
rclb
add
xchg
mov
pushf
jle
rolb
jo
fs
adc
mov
cmc
aaa
mov
xchg
test
pusha
and
mov
test
mov
addb
fimuls
pop
repnz
rcrb
or
xor
fsubp
jl
xor
sbb
xchg
cmp
pop
jp
in
in
sub
lock
cmp
jp
iret
dec
push
fistps
and
push
popf
pop
mov
lods
dec
adc
mov
dec
xor
cmpsl
mov
jbe
pop
add
or
mov
fbstp
jno
dec
push
in
jecxz
mov
and
loop
pop
notb
inc
push
fnsave
cmp
gs
push
sbb
push
sbb
inc
pushf
jne
rcl
in
xor
pusha
jmp
sbb
bound
repz
imulb
arpl
mov
xor
mov
mov
ja
idiv
xlat
jmp
psubb
into
rclb
loope
inc
aaa
push
cmp
sub
and
test
inc
es
out
popf
or
sbb
inc
je
inc
hlt
adc
xchg
lea
fbld
inc
mov
repz
mov
pusha
push
inc
and
ficompl
mov
scas
loopne
popf
mov
inc
cld
cmp
sub
xchg
dec
mov
lcall
rcll
or
dec
test
test
movl
mov
outsl
enter
sub
mov
idivl
mov
out
mov
inc
mov
movsb
push
jae
push
adc
mov
js
inc
sbbb
xchg
dec
and
aas
decl
or
sti
adc
ja
mov
or
adc
or
push
adc
jg
ret
incl
dec
sbb
adc
ja
push
test
fadds
rclb
filds
mov
sub
inc
xor
push
sarl
pop
mov
sbb
ljmp
push
sbb
js
negl
lahf
sub
ss
adc
add
out
xchg
imul
or
mov
imul
adc
cmp
scas
xchg
jne
sub
dec
push
push
mov
scas
add
push
mov
bound
jg
adc
sbb
pop
fldenv
pop
lgs
hlt
lret
dec
sbb
jp
xchg
iret
shrb
shl
ds
insl
sahf
jmp
inc
enter
int3
and
popa
xor
cs
jae
mov
outsl
cmp
cmp
repz
jne
xchg
pop
addb
cmp
lahf
inc
psubsw
stos
bound
lahf
or
sbb
inc
lcall
jns
xor
enter
add
xor
sub
jae
pop
fisubrs
or
push
push
mov
ss
out
loope
add
ret
popf
cmpsb
daa
xchg
lret
jmp
repnz
xlat
ljmp
daa
int
and
jmp
addl
fidivrs
testl
sub
out
clc
push
fstps
pop
repnz
cltd
fs
cld
mov
pusha
ja
insl
in
fucom
cwtl
fs
xlat
push
pop
cmp
hlt
lret
mov
jnp
fisttpl
push
xchg
mov
inc
xor
pusha
xchg
adc
xor
sub
pop
adc
sbb
pushf
rcrl
inc
xor
sub
add
in
or
rcll
lds
fldl
scas
inc
push
jns
imul
cmp
sub
adc
mov
or
cwtl
sbb
mov
sbb
adc
dec
xchg
decb
cmpsb
gs
or
cld
pop
push
pop
imul
js
not
jmp
shl
sarl
or
and
cmp
scas
mov
bsr
or
mov
mov
mov
mov
xchg
aad
cmp
sub
xchg
stos
icebp
xor
pushf
inc
cmpb
jle
sbbb
mov
inc
fneni(8087
test
fwait
dec
xor
outsl
dec
aaa
mov
mov
xor
push
mov
dec
push
push
xchg
cmp
inc
adc
push
xchg
inc
call
test
xchg
fisubl
adc
fcmove
mov
test
bound
nop
jb
dec
shlb
ret
out
cs
leave
stc
nop
fwait
inc
movsl
stos
xchg
jbe
xlat
sub
xor
arpl
pop
test
nop
inc
lret
pcmpgtw
xchg
jo
movsb
pop
adc
adc
fs
or
xchg
push
outsb
test
andl
cli
fistpll
outsb
test
or
inc
das
xor
inc
nop
loop
cld
xlat
cmp
scas
push
and
and
rcl
push
rclb
sti
sbb
and
mov
adc
ret
clc
lcall
movsb
stc
in
outsb
pop
shrl
fdiv
xchg
mov
or
inc
adc
mov
pop
sub
int
sbb
outsb
data16
fwait
add
or
sarb
fistl
arpl
cmp
push
adc
in
icebp
das
mov
sahf
add
pop
xchg
sahf
outsl
xchg
ds
jae
jle
add
push
popf
out
lock
dec
sbb
sub
cwtl
push
cmp
add
lds
mov
fs
push
inc
fidivrl
sbb
add
push
xchg
stc
popa
sub
sub
fst
repz
mov
roll
pop
add
jae
sub
test
mov
call
cmp
je
dec
es
mov
inc
push
je
and
push
adc
jno
call
add
stos
lret
add
mov
dec
movsl
inc
loope
daa
adcl
in
neg
jp
dec
ss
mov
out
pop
lret
jp
cmpsl
repnz
dec
dec
scas
aad
adc
push
stos
ss
xorl
push
sub
or
ja
fwait
mov
push
jmp
subb
dec
jmp
or
sub
mov
sub
sub
ret
cmp
lods
leave
in
ret
fisubrs
xchg
jg
out
in
push
xor
inc
popa
cltd
mov
and
xor
adc
ret
insl
xor
aaa
push
mov
addr16
dec
cmp
add
lea
and
sbb
ja
lods
jle
mov
scas
add
icebp
ds
adc
fisubs
jle
jecxz
pop
cmp
movsb
ror
pop
or
sbb
cmp
cmp
cwtl
ds
test
icebp
not
mov
shrb
insb
mov
lcall
sub
add
sub
das
ja
ret
mov
scas
pop
jmp
mov
test
and
push
pop
xor
mov
fildl
inc
mov
ret
in
sub
lods
cmp
sbb
movsb
cmp
adc
sub
xchg
iret
imul
adc
xchg
jecxz
icebp
rep
mov
mov
js
pop
cmp
sub
mov
mov
and
jbe
outsl
sub
xor
std
mov
jne
push
fs
xorl
add
xchg
mov
pop
mov
arpl
mov
pop
xchg
cmp
fs
fsubl
ljmp
inc
stos
add
inc
adc
mov
scas
loopne
test
ds
lcall
push
clc
movsl
mov
mov
and
insb
cmp
push
mov
cmp
sub
fimuls
int
loop
mov
sbb
dec
mov
test
jg
movsb
out
sbb
lods
mov
icebp
and
sbb
jns
in
outsl
sbb
aam
mov
rcrl
xor
dec
xchg
std
aam
call
in
mov
imul
aad
ficoml
xor
loope
mov
mov
cmpb
xchg
pop
fucomp
test
pushf
jp
data16
lcall
cli
xchg
mov
fidivs
fwait
loope
xor
mov
cmp
xchg
pop
mov
cli
cmp
adc
cli
stc
lock
pop
test
dec
cmc
cs
push
cmp
mov
sub
fdivrl
or
jo
mov
jb
xor
loopne
or
adc
xchg
cli
add
movsl
adc
scas
movsl
loope
mov
loop
inc
jo
fcomps
or
sbbl
cli
inc
clc
das
mov
idiv
xchg
dec
lock
dec
adc
lea
insb
adc
sarl
test
cli
mov
loope
jp
push
stos
cmp
push
cmpsl
mov
js
or
dec
xchg
inc
push
test
jmp
in
pop
jns
mov
cld
cmpsl
jne
cli
loop
arpl
js
mov
das
int
call
test
inc
cmc
jb
sbb
outsb
outsl
jge
movsb
jmp
ds
or
jno
aas
sarb
repz
pop
mov
lret
jmp
aaa
push
mov
outsb
test
stos
mov
or
add
xchg
push
imul
sub
jo
sti
dec
jbe
in
daa
mov
jbe
pusha
shll
nop
loopne
and
in
mov
ja
sub
shll
fadd
dec
mov
jg
lods
leave
into
lock
xor
jb
cs
mov
test
ja
mov
push
inc
pusha
shrl
cmp
cwtl
insl
pop
fmuls
out
mov
fiadds
hlt
mov
jmp
xor
push
mov
mov
jbe
pop
xchg
mov
jne
sti
out
lds
cwtl
pop
mov
lods
nop
add
ss
pop
jb
shrb
ds
sub
adc
inc
sbb
icebp
in
rorb
aam
xor
sub
pop
out
mov
jo
sub
xchg
out
xchg
add
cmc
and
pop
jl
mov
mov
push
fisubrs
icebp
mov
adc
jg
add
das
jge
lret
in
pusha
call
andl
in
data16
mov
pusha
test
mov
std
mov
fwait
sbb
roll
sub
jmp
xchg
stc
inc
daa
adc
dec
push
sti
aaa
data16
xchg
jne
mov
lods
adc
mov
out
jno
loopne
mov
cmpsl
mov
xor
leave
inc
inc
inc
rclb
les
hlt
sub
lods
mov
inc
mov
mov
mov
test
rolb
addb
iret
push
push
addr16
int3
push
test
leave
aad
and
cli
inc
pop
ja
xchg
pop
loope
mov
shl
pop
shlb
pop
sbb
mov
xchg
dec
scas
inc
cmp
sbb
mov
nop
dec
sub
mov
mov
rcll
push
notl
stos
cmpsl
in
adc
imul
loopne
xor
push
faddl
pop
xchg
stos
insl
sbb
pinsrw
jns
xchg
iret
clc
jno
xchg
sub
mov
mov
sub
lds
mov
js
mov
scas
xlat
push
sub
push
or
sub
jle
add
xchg
cmpb
out
sub
fdivr
inc
pop
pcmpeqd
mov
sbb
int3
imul
pop
test
pop
jo
mov
in
loope
pop
rorb
frstor
inc
lret
cmc
cmp
int3
jle
fidivs
mov
and
cmc
mov
sub
mov
ficomps
push
lahf
test
sbb
ret
imul
sar
xchg
fs
pop
fcomip
push
push
out
ds
and
lahf
iret
cwtl
jnp
xchg
popa
pusha
and
pop
ljmp
dec
les
cmp
push
pop
and
repz
in
mov
call
sbbl
or
cmc
adc
cmp
or
mov
xchg
mov
or
adc
pop
mov
cwtl
mov
cmc
ret
cs
inc
or
out
pop
dec
ds
xchg
and
lea
or
xor
inc
mov
pop
adc
sbb
adc
cwtl
stos
dec
rcr
fstps
mov
mov
inc
mov
or
cmp
xor
lods
dec
push
loope
pop
mov
andl
mov
mov
pushf
pushl
push
pop
xchg
orl
xchg
add
jnp
mov
mov
mov
aad
inc
in
and
out
push
out
add
and
je
xchg
daa
jp
push
lds
sbbb
push
sti
fsubl
icebp
fidivrs
hlt
xchg
jnp
aad
sub
xchg
mov
or
sub
insl
out
adc
sub
iret
jo
call
pop
lret
lret
fsubrl
clc
xchg
test
mov
push
call
repz
mov
or
das
addb
jecxz
jbe
sbb
sub
xor
or
xchg
hlt
add
stos
jmp
inc
fists
cld
mov
dec
rcll
pop
mov
movsl
cmp
pop
fs
ret
adc
cmpl
popa
add
add
fcmovnbe
dec
sbb
pop
pop
scas
pop
pop
and
and
mov
xchg
mov
test
repz
pop
and
pop
insl
and
mov
add
adc
cmpb
inc
aas
fsubrp
dec
sbbb
dec
ljmp
inc
mov
imul
popa
jmp
push
test
outsl
lea
les
inc
xor
dec
cs
jb
jno
xor
repnz
and
jge
cld
sbb
add
std
stos
and
cld
push
je
xor
cmp
sbbb
jle
adc
stc
fdivrl
push
and
rcll
sbb
adc
cmpsb
cmp
sbb
iret
lahf
lret
mov
xchg
shl
aaa
stc
add
lret
lock
mov
aas
push
xchg
push
mov
mov
loop
nop
sbb
push
jp
mov
insl
mov
scas
ds
and
cmp
push
sbb
xor
inc
sbb
fwait
clc
hlt
aad
xor
push
xchg
mov
ret
mov
sub
and
pop
pop
out
cmp
imul
scas
cmp
addr16
pop
call
jbe
pop
jb
leave
cltd
jecxz
fsubrl
cli
or
inc
mov
adc
daa
fisubrs
stc
xchg
fstpl
add
lds
in
cltd
sti
jp
sub
hlt
mov
scas
sbb
and
pushf
testl
mov
fisubrl
sahf
cmc
jae
out
and
clc
pushw
pop
xchg
loopne
sbb
in
into
cmpsb
xchg
mov
cmp
or
and
test
insl
rsm
jnp
iret
mov
xchg
icebp
cmp
sub
cmp
popw
mov
xchg
xchg
and
test
and
jg
adc
adc
adc
cmp
scas
pop
es
test
dec
pop
mov
mov
cmp
sbb
test
pop
cmpsl
sub
or
push
fdivrs
int
xlat
cli
add
mov
dec
or
adc
out
xor
movsb
pop
jp
in
loopne
dec
dec
fisttps
int3
push
mov
mov
jmp
ss
and
inc
scas
mov
repnz
cmp
stc
mov
ficompl
jl
mov
sti
lret
sarl
mov
and
mov
cmp
cmpsb
mov
or
call
push
pusha
mov
out
jne
jl
iret
sbbl
ds
loopne
enter
les
pop
mov
add
inc
push
divb
lahf
call
bound
daa
divl
mov
cmp
jne
ljmp
int3
aas
dec
insb
out
fcoml
adc
aam
xchg
jbe
je
cmp
movsl
add
je
inc
and
mov
dec
add
sbb
cwtl
sbb
xor
add
adc
push
test
cmp
mov
mov
loope
cmovp
mov
inc
dec
in
xlat
push
inc
sahf
cwtl
rorb
in
outsb
flds
imull
hlt
xor
pushf
scas
inc
loope
jns
mov
aas
mov
ficoml
pushaw
mov
aam
xor
mov
xlat
mov
mull
outsl
inc
ret
mov
mov
and
jg
call
and
mov
push
sti
lcall
push
xchg
or
aas
dec
test
test
mov
inc
dec
movsb
pop
adc
dec
or
mov
adc
pop
mov
sbb
inc
dec
xchg
fcos
rcrl
shll
mov
fcmove
iret
fistpl
pop
and
and
fildll
icebp
icebp
pop
jnp
dec
add
xchg
jle
mov
mov
add
sub
and
inc
jno
and
or
scas
push
mov
dec
leave
pusha
sub
fs
sbb
ret
cmp
sub
mov
and
test
sbb
sub
loop
jno
or
sub
add
pop
cmp
cmpsb
scas
fdivl
xchg
mov
fs
movsl
push
or
mov
xchg
inc
lods
or
sti
icebp
int3
data16
mov
imul
fdiv
and
jne
mov
xchg
jne
repnz
xchg
mov
push
pop
jp
out
push
xor
mov
lea
imul
in
loope
sti
pushl
cmc
inc
jb
pop
lahf
stc
jo
fwait
mov
pop
pop
pop
mov
push
inc
mov
addr16
mov
in
push
into
fsub
lock
ret
stos
mov
fwait
inc
mov
loope
pop
sbb
cs
ljmp
pop
bswap
xchg
jne
cmpsb
clc
rorl
xor
sbb
mov
inc
inc
mov
and
pop
jo
lahf
dec
or
mov
in
out
js
out
fnstenv
mov
pop
into
mov
dec
inc
push
pop
insb
imul
imul
push
jne
jp
mov
fisubrl
fnstenv
outsb
add
ret
shlb
rolb
lock
dec
cmp
and
mov
cmp
or
aad
add
sbb
iret
push
push
movups
stos
mov
fs
adc
inc
clc
dec
xor
repnz
jne
ror
cmc
jle
jo
dec
xor
ret
jb
test
mov
dec
adcl
pop
and
mov
push
mov
int3
leave
lods
fdiv
in
out
sbb
mov
cmp
push
das
xchg
cmp
inc
add
je
aam
lcall
ret
push
and
aas
iret
inc
push
movsl
fiaddl
js
stc
cmc
data16
sbb
push
xchg
movsb
dec
cmp
out
jp
push
adc
shrb
les
add
inc
dec
pop
cmp
shll
out
stc
sub
xor
imul
adcl
pop
cmpsb
jnp
insl
xchg
je
dec
stos
inc
adc
ja
push
leave
jle
jmp
xchg
aas
and
or
insl
xor
mov
imul
jb
shrb
pop
xor
stc
sbbb
neg
cmp
pop
mov
into
aad
pop
jecxz
inc
rcl
lcall
push
mov
adcl
inc
xor
and
pop
mov
lcall
loop
mov
arpl
push
add
es
cmp
or
test
xor
repz
dec
lds
jb
sub
mov
xor
lods
cmp
push
cmp
mov
or
push
fcomps
ss
in
sbb
and
sub
jb
jnp
cs
lods
ret
call
pop
rclb
mov
sti
loopne
sub
push
leave
jmp
cmp
cmp
ljmp
ficoml
popf
push
out
lret
call
adc
mov
and
cmp
inc
ja
cmp
es
sbb
loopne
pusha
xchg
mov
mov
push
add
push
clc
bound
pusha
rorb
mov
cltd
outsb
fdiv
outsb
mov
das
clc
ret
xor
fincstp
cmpsl
add
lea
xchg
ret
rcl
mov
rcrb
push
ja
adc
pop
dec
pop
xor
andl
adc
and
and
push
negb
aas
xlat
mov
sub
mov
xor
pop
aas
sbb
ror
pop
push
mov
es
nop
pop
jo
test
mov
icebp
mov
inc
sub
cmp
pop
int
sub
out
loop
fimuls
js
mov
clc
cli
pop
jle
jb
loopne
xor
call
mov
sub
in
and
loop
sbb
loopne
mov
dec
mov
lods
loope
jbe
ret
mov
movsl
pop
jb,pn
ja
pusha
add
popf
cmp
sti
cs
mov
push
or
pop
repz
cmpsl
sbb
mov
push
pop
mov
dec
jmp
into
int3
sbb
lods
xchg
in
sub
xchg
dec
inc
lahf
rcrb
popf
shll
dec
pop
jle
in
push
sub
repnz
jnp
movsb
lret
and
push
arpl
and
inc
out
push
nop
scas
mov
add
sbb
test
xor
mov
aam
mov
push
add
dec
xchg
ret
jnp
adc
cmc
fwait
fs
out
sub
stos
mov
adc
and
dec
mov
xor
mov
xorl
ss
fnstsw
sahf
cmp
pop
test
ljmp
nop
test
push
xor
lret
pop
and
loopne
pop
out
or
icebp
mov
xchg
pushf
movsb
push
mov
cmp
sbb
in
dec
outsb
inc
push
xchg
mov
js
les
ficompl
mov
mov
insb
sti
mov
scas
xchg
adc
pop
std
mov
nop
fwait
pop
xchg
cmpsl
mov
lahf
mov
cmp
std
mov
adc
or
cmp
stos
je
xchg
xlat
inc
je
dec
push
cmp
pop
repnz
mov
lock
pop
xor
inc
icebp
je
leave
dec
hlt
jmp
loopne
push
inc
repnz
adc
mov
adc
adc
pushf
and
xor
and
enter
cmp
or
cmp
icebp
rcr
mov
adc
mov
pop
inc
push
mov
call
cwtl
orl
shll
lahf
jmp
in
stc
sahf
cmp
in
fnstcw
loopne
ds
rcl
sub
sbb
push
je
cmpb
adc
out
adc
adc
fistl
adc
mov
mov
dec
movsb
scas
cmp
mov
xor
add
cmp
add
sbb
mov
xchg
add
mov
pmaxsw
pusha
dec
push
xor
rep
cmp
lea
lods
jmp
inc
xor
xlat
and
test
jmp
out
in
in
push
insb
lea
call
cltd
sbb
into
pushf
adc
xchg
shll
cli
mov
insl
iret
xor
loop
xchg
arpl
sbb
and
jno
out
xor
jp
cwtl
cltd
testb
push
test
jl
inc
mov
fdivrl
fisubl
enter
adc
test
push
pusha
in
and
mov
adc
es
push
daa
xchg
adc
or
pavgw
and
out
mov
add
lock
movsl
jle
mov
stos
dec
or
repz
int3
push
or
in
lret
mov
cmp
iret
lock
xchg
repz
push
push
and
mov
mov
jne
add
adc
pop
xchg
rorl
mov
cmpsl
mov
jmp
adc
in
and
cmc
or
stc
cltd
dec
pop
in
imul
test
ret
cmp
pop
ja
lds
mov
jmp
jecxz
in
out
xlat
cmc
in
push
rcll
inc
sahf
andb
fisubrs
and
inc
cmp
jecxz
cwtl
xchg
cwtl
es
mov
call
jmp
icebp
pop
imul
sub
xchg
xor
push
push
add
dec
imul
lods
inc
fsubl
loopne
mov
adc
bound
xchg
in
mov
daa
xchg
scas
mov
insl
adc
jp
cmpsb
hlt
jp
push
inc
sahf
enter
mov
rcr
adc
shl
fsubrp
jecxz
cmp
xchg
repnz
mov
in
push
jl
sti
pop
rcll
out
stos
in
shl
cmp
xchg
insl
lods
lds
push
cmpsb
mov
mov
mov
inc
xor
pop
xchg
cli
es
and
fsubr
add
fwait
push
mov
imul
mov
nop
xor
inc
add
xor
lcall
pop
jmp
jno
aam
pop
mov
mov
push
mov
cmp
dec
adc
icebp
mov
xchg
inc
iret
jge
push
add
xor
lret
dec
fs
pop
lret
aam
xchg
or
ljmp
cmp
inc
scas
mov
mov
cmp
xchg
mov
lahf
jecxz
movsb
xlat
sbb
jg
jno
push
es
mov
shll
out
add
add
cmpb
dec
mov
out
int3
mov
mov
test
mov
xor
cld
movsb
inc
out
cmp
xchg
rorl
mov
xchg
jns
add
outsb
or
ds
pop
iret
sub
push
mov
fildll
rcr
adc
ljmp
pop
outsl
or
dec
and
inc
in
stc
mov
xchg
aad
adc
movsl
inc
fwait
orb
std
xlat
cs
divb
sbbb
gs
mov
pop
dec
lock
dec
sub
jp
mov
aam
jno
fcomp
in
rorl
repnz
and
lock
mov
outsl
push
push
push
and
das
aas
and
jle
pop
hlt
cmp
push
jno
mov
js
lahf
sbb
bound
popa
xchg
pop
in
mov
adc
xchg
push
adc
insl
pop
cwtl
out
lods
push
cmp
ret
lcall
aam
addb
sbb
pop
or
mov
ffreep
mov
in
cmp
repz
mov
add
rcr
fstpt
insb
cmp
jbe
mov
mov
sbb
test
or
cmc
push
cmp
aad
shl
add
pop
cmp
loope
daa
cmp
mov
push
stc
jecxz
mov
iret
and
fsubr
test
jne
aad
add
xchg
lock
lock
scas
sub
xchg
scas
jb
xchg
mov
imulb
hlt
fs
das
push
xor
xchg
out
jo
cmc
test
sahf
jl
loope
cld
lret
pop
sarb
xchg
imul
mov
repnz
mov
loopne
jg
jnp
lcall
push
inc
cmpsl
dec
divb
sahf
jg
xchg
insl
xor
sub
dec
inc
add
xor
in
cmp
dec
jl
adc
sbb
popa
inc
push
xchg
out
mov
and
rcrb
std
cmpsb
adc
push
jo
mov
sbb
push
pop
sbb
pop
mov
pop
add
xor
push
dec
jmp
sub
or
xchg
mov
jo
or
mov
dec
mov
xchg
xchg
mov
aas
push
mov
stos
ss
jmp
xlat
cmc
pop
and
sti
daa
int3
arpl
adc
mov
mov
loope
mov
in
cmp
inc
xchg
leave
ljmp
stc
stos
dec
pop
mov
movsl
jae
xchg
mov
xor
stos
inc
mov
int
sbb
jle
repz
ret
add
jg
mov
add
les
popa
not
inc
hlt
sub
cwtl
in
cld
push
mov
lcall
or
push
popa
mov
hlt
push
pop
xchg
sub
js
sub
cltd
inc
add
imull
dec
or
push
test
xchg
xchg
dec
lds
inc
push
push
sbb
sbb
mov
cmp
out
loopne
in
std
test
mov
mov
lods
das
jne
mov
or
scas
inc
jecxz
inc
loop
mov
in
jb
xlat
call
iret
push
mov
sub
fs
es
adc
cmp
add
push
jmp
fsub
rcll
inc
pop
iret
sar
fnstenv
out
cmpsl
inc
mov
enter
cmp
addl
xchg
ror
test
out
shlb
mov
es
jb
cli
jo
inc
mul
mul
jmp
inc
xor
orl
fdivrs
push
jmp
mov
movsb
jmp
das
outsl
add
mov
jle,pn
push
fisubrl
pusha
adc
subl
jle
out
pop
stos
mov
and
adc
pusha
jg
push
mov
dec
lock
lahf
fwait
out
xor
inc
mov
mov
jmp
mov
out
push
ret
fs
sbb
cmc
inc
test
and
stos
test
jmp
xchg
fiaddl
in
or
js
and
sbb
adc
mov
rcll
int
in
dec
cmc
mov
movsb
call
push
cmpsb
xor
in
hlt
sbb
int
mulps
pop
push
imul
inc
arpl
pushf
adc
fmuls
imul
ficomps
lods
jl
movswl
in
leave
cmp
call
repnz
out
mov
imul
dec
fsubs
sbb
lods
lahf
xchg
imull
cmp
pop
aam
popf
mov
inc
sbb
mov
pusha
inc
adc
bnd
ss
aam
fdivrp
mov
je
imul
and
add
push
je
add
cmp
cmp
call
sbb
xlat
ret
in
xor
or
das
data16
andl
outsl
push
mov
aaa
lahf
imul
clc
pop
mov
push
mov
mov
push
adc
sbb
mov
xchg
test
mov
xchg
data16
inc
cltd
divl
ds
and
sahf
adc
pop
test
std
fistps
jno
les
push
add
jle
push
sub
bound
ja
mov
mov
rcl
and
cltd
dec
dec
cmpsb
add
nop
cmpsb
jns
xchg
pop
std
inc
inc
cmc
inc
mov
cltd
pop
xchg
je
mov
loop
or
pop
sub
popf
clc
imul
popa
pop
sarb
mov
pop
xor
loopne
stc
mov
pop
and
icebp
scas
icebp
rcl
loope
cmc
inc
pop
add
ljmp
mov
rcll
filds
pushf
add
dec
pop
popa
leave
adc
test
popf
xchg
xor
add
inc
sub
xor
sbb
jbe
mov
push
arpl
aad
jns
inc
inc
pop
icebp
out
les
push
mov
icebp
xchg
stos
js
je
fistpl
xchg
jmp
imul
xchg
je
jnp
pop
inc
cwtl
or
pop
dec
test
xlat
mov
xor
xor
popf
sub
repnz
mov
pop
or
xchg
push
jo
jl
aaa
lock
imul
out
xor
sbb
lods
pop
mov
pop
xlat
jle
lea
xchg
inc
jp
or
pop
fidivs
push
call
shlb
jnp
sbb
shrl
push
shlb
iret
loope
loopne
dec
pusha
xor
adc
rol
mov
pop
sbb
cli
pop
inc
testb
adc
pop
repz
adc
jae
rep
jmp
jo
out
fidivrl
in
cltd
mov
inc
jp
shl
lock
loopne
mov
fwait
psllw
or
insl
jne
inc
pop
lahf
or
dec
dec
daa
push
or
xchg
lds
pop
insb
stos
or
shr
pop
mov
add
cmp
xchg
mov
and
iret
dec
push
gs
push
add
adc
xor
pop
js
sahf
insl
data16
sub
sub
fwait
xor
mov
stos
das
cltd
lods
pop
stos
adc
in
cltd
lock
and
push
movsl
cmpsl
dec
xchg
xchg
sub
xor
push
adc
push
out
std
add
ljmp
push
cmp
inc
push
in
sub
inc
imul
mov
bound
ds
cmp
dec
addr16
loopne
xchg
hlt
adcb
popa
jo
je
push
push
mov
pop
jle
pop
icebp
ds
ss
mov
mov
xchg
jns
sbb
dec
mov
xor
shll
and
xor
xchg
cli
clc
inc
xor
popf
adc
test
mov
cmp
rolb
in
cmc
sarb
mov
mov
pop
fs
push
xor
and
icebp
fisubl
xchg
scas
sti
inc
repnz
push
add
lds
cmp
pop
lds
adc
fcomip
int3
cli
int
jne
stos
insb
mov
sti
mov
dec
dec
loope
lret
inc
push
pop
sub
or
push
jo
scas
lods
sbb
jle
sahf
sub
push
int
idivb
int
stc
mov
mov
shll
aaa
out
mov
xorb
adc
lret
xchg
jg
pusha
or
sbb
aad
mov
int3
jl
roll
xchg
push
pop
repnz
push
and
outsl
jge
xchg
jge
outsb
dec
out
inc
jecxz
mov
shrb
ljmp
sub
fbstp
push
push
xor
pop
xlat
sbb
fcoml
cmp
in
bound
les
dec
movsb
pop
add
pop
pop
xchg
inc
cmp
out
cmp
aam
loope
cmp
add
stos
leave
fsts
bound
test
jns
in
addl
stos
divl
add
push
jns
sbb
sarb
mov
adc
inc
inc
sub
mov
nop
dec
pop
pop
fmul
rol
fstps
nop
cmp
jae
gs
popf
dec
xchg
data16
cmp
in
ljmp
pop
jge
mov
or
ljmp
xor
aam
jb,pn
push
les
xchg
clc
incb
push
scas
inc
jle
incb
sub
cmp
dec
mov
movl
int3
or
jb
cld
push
fstl
aaa
push
xor
fxch
into
sbb
xchg
mov
shll
sbb
popf
mov
mov
lea
bound
inc
out
fsts
or
jno
and
mov
mov
int
neg
pop
jbe
test
pusha
jnp
dec
mov
cmp
mov
jno
mov
fwait
addl
xor
adc
mov
adc
mov
xchg
idivl
jbe
lcall
push
outsb
ret
int
scas
loop
sbb
mov
dec
lods
js
stc
xchg
xor
sub
pop
mov
jno
lods
enter
cmpsl
xor
xchg
pop
jmp
adc
inc
or
push
lret
ret
ret
mov
rcrb
and
mov
cmp
cmp
inc
adc
mov
push
ljmp
add
sub
dec
cld
dec
pop
push
in
outsl
fisubrl
pop
mov
test
jl
es
cwtl
xchg
xor
icebp
insb
jo
pop
jnp
and
cmpsl
adc
insl
call
xchg
jo
into
add
cmp
call
mov
rol
sbb
mov
stc
push
pop
xchg
lock
sbb
mov
push
jns
or
and
aad
ret
inc
xor
cltd
aaa
outsl
dec
sub
lods
xchg
fisttpl
xor
cmc
dec
pop
or
push
shrb
dec
out
fstpt
pop
in
dec
xlat
pop
andl
fnstenv
arpl
xchg
out
xchg
lahf
inc
sbb
loop
inc
cmc
push
cmp
mov
incl
jo
jns
mov
mov
aaa
add
push
subb
int3
dec
pop
sarb
inc
adc
xchg
in
insl
sub
js
jbe
add
mov
arpl
shrb
jo
jae
and
jmp
cli
hlt
mov
pop
cld
clc
idiv
ljmp
and
add
movsl
mov
jne
ret
adc
push
jbe
pushf
and
push
mov
sbb
mov
cs
mov
or
sbb
mov
mov
clc
icebp
jl
pop
or
sub
xor
push
inc
adc
mov
movsl
fstpt
les
xchg
xor
xchg
xchg
pop
pop
lods
ljmp
cwtl
push
mov
mov
cmp
xchg
movsb
out
sbb
pusha
sub
mov
mov
sbb
xchg
pop
xchg
popa
adc
ljmp
mov
loop
clc
pushf
mov
sbb
inc
out
xchg
pop
push
adc
add
outsl
imul
mov
stc
imul
rcr
mov
mov
jp
xchg
fbstp
adc
insb
rorl
adc
and
std
jns
jnp
fiadds
popf
sbb
hlt
lret
jbe
mov
and
push
adc
cmp
sbb
pop
loop
jge
mov
inc
xchg
sti
push
inc
lds
push
xchg
xchg
lea
fimull
sub
mov
mov
push
fdivl
sub
lahf
adc
repz
sahf
pop
mov
gs
movsl
and
arpl
leave
push
into
sbb
sub
cwtl
call
inc
jg
nop
adc
loope
sub
data16
das
sbb
outsb
std
fwait
push
pop
jmp
inc
mov
ja
mov
aas
dec
xchg
mov
add
or
sbb
popa
jmp
adc
adc
sbb
jge
add
sbb
lret
mov
jns
lds
xchg
jb
loope
xchg
neg
lock
std
jmp
push
inc
dec
lahf
jle
adc
cs
add
arpl
adc
mov
adc
data16
jae
mov
dec
and
rcrl
lea
arpl
sub
rcll
and
mov
and
inc
dec
and
cmpsl
aad
ss
shll
or
fs
gs
pop
fisubrs
clc
and
inc
aaa
push
inc
popa
lcall
jo
mov
ret
inc
je
adc
mov
int
xor
adc
pop
mov
repnz
test
call
mov
sbb
test
outsl
movsb
jns
aas
push
mov
jle
imul
imul
cwtl
cmpsb
adcb
push
dec
jmp
jb
push
fimuls
cli
sub
loope
shlb
or
bound
inc
popf
xor
sbb
insb
arpl
mov
xor
sub
popf
mov
popa
mov
popf
mov
imul
adc
insl
int
rol
leave
sti
push
loop
jbe
xor
adc
jg
sub
dec
aad
push
sub
fcom
jnp
jp
pop
xchg
inc
mov
mov
inc
out
js
lcall
test
outsl
je
sti
mov
imul
or
testl
je
or
movsb
or
jo
cmpsl
jo
lahf
jl
xchg
xchg
pandn
lsl
xor
leave
add
les
xchg
dec
xor
sbb
pusha
inc
lods
xor
inc
or
pop
sbb
dec
fs
or
ljmp
fbld
jl
xchg
push
incl
mov
rorl
mul
or
jecxz
add
lahf
xchg
ja
push
test
jle
imul
mov
xchg
and
dec
fisubrs
movsb
mov
cmpsb
xchg
gs
fbstp
xchg
int3
xchg
jge
pusha
roll
mov
inc
jnp
fdiv
xchg
xchg
insl
pop
push
xchg
movsl
inc
ror
outsb
add
in
lea
fistl
mov
inc
stc
int
inc
mov
aam
test
push
sub
subb
daa
clc
fwait
pop
cmp
pop
pop
and
sbb
dec
mov
nop
fdivs
stos
cld
loop
push
cwtl
cld
xchg
add
sub
icebp
test
cmp
pop
mov
scas
mov
clc
lcall
in
daa
mov
mov
fiadds
aam
adc
mov
sbb
mov
mov
xchg
jge
pop
fidivs
dec
les
xor
sti
cmp
adc
jle
dec
push
into
inc
xchg
sti
or
gs
lods
cltd
clc
cmp
addr16
pop
aam
cli
and
push
ficompl
sti
push
and
mov
xchg
sbb
xor
stc
popa
sarl
push
cmp
rcrl
xor
pop
inc
mov
int3
aad
xor
xchg
aas
addb
xchg
lds
or
ljmp
or
sbb
sbb
lods
xchg
cmp
mov
push
fidivl
sbb
fadd
push
jo
vmovlpd
mov
push
iret
jle
popf
inc
in
sbb
in
mov
icebp
sarb
aaa
jl
jo
dec
xchg
sbb
inc
lcall
std
fldl
subb
dec
add
movsl
rorb
mov
cmpsl
lock
xlat
dec
mov
and
jb
mov
add
lods
inc
and
mov
scas
adc
dec
stos
rorb
jle
jne
cli
mov
jle
mov
push
cmp
test
xor
ljmp
dec
adc
cmp
jmp
rcl
inc
shrb
addr16
push
mov
sbb
inc
aaa
sbbl
sarl
std
incb
add
cmp
mov
pop
cmp
dec
stc
jg
in
call
xor
push
ja
stos
mov
in
xor
inc
mov
mov
xchg
push
mov
xor
pushf
out
mov
or
clc
sbb
lret
in
add
and
or
adcl
dec
es
faddl
mov
cwtl
push
cld
rcrb
int
and
out
or
jle
add
push
push
js
inc
mov
jno
and
aas
or
int3
jg
repnz
insb
cmp
mov
mov
and
fildll
xor
pushf
fistl
push
inc
inc
mov
je
sub
daa
push
mov
mov
test
sahf
imul
sbb
loopne
shl
mov
ficoml
sbb
mov
shl
mov
sbb
push
mov
out
hlt
push
dec
fbstp
jbe
in
pop
mov
daa
out
push
push
sarl
xor
mov
inc
leave
and
push
push
into
mov
dec
or
or
fcmovne
xchg
xchg
ret
stos
jnp
repz
jl
mulb
lock
lds
stos
sbb
and
out
xchg
outsb
jno
sarb
add
insl
pop
mov
cmp
aaa
arpl
inc
popa
rcrb
fidivl
add
xor
fidivrl
in
xchg
sbb
in
xor
cmp
sub
jmp
loope
push
add
and
in
and
sbb
adcl
add
sbb
xor
add
cld
dec
bnd
rclb
insl
and
aas
repnz
jns
enter
sti
out
add
adc
data16
add
ret
fnstenv
decb
and
cmovb
popf
jnp
xchg
mov
mov
mov
fisubl
lds
std
stc
popf
mov
lahf
bound
repz
mov
loope
test
mov
mov
scas
test
fcmovb
mov
les
in
shrl
out
aaa
dec
push
mov
dec
in
xchg
gs
lods
icebp
push
mov
aam
addr16
add
lock
jae
std
mov
ss
sbb
dec
jp
not
adc
inc
pushf
daa
addl
xchg
sbb
inc
ret
xor
jns
xor
stos
std
outsb
mov
inc
mov
imul
pop
cmp
sbb
cltd
cs
jmp
mov
cmp
movsb
shl
cmp
imul
adc
sub
into
je
out
popf
fs
aam
add
popf
lds
pop
xor
push
adc
dec
das
sarb
sti
push
mov
mov
jecxz
xchg
out
pop
mov
adc
jo
adc
dec
or
ja
xchg
cmpsl
mov
imul
lods
adc
sbb
rcl
jns
nop
lods
vcvtps2pd
pop
mov
fstps
push
push
or
and
jb
push
xchg
push
mov
loopne
fsubrl
ret
dec
cmp
and
xor
jle
enter
fiadds
mov
mov
out
adc
mov
je
mov
mov
mov
imul
ficompl
pop
pop
xor
mov
mov
mov
arpl
hlt
fimuls
sub
push
loopne
inc
inc
adc
sub
loope
sbb
shll
stc
in
in
jbe
mov
cld
dec
mov
sahf
jnp
test
es
rcll
or
dec
imul
xchg
pop
xor
rorl
sahf
mov
add
pop
in
gs
fmuls
cmpsl
mov
adc
pop
mov
and
sub
mov
cmpsl
mov
sub
mov
or
out
mov
mov
xlat
inc
sahf
inc
add
lea
dec
stos
pusha
jmp
dec
mov
js
jg
in
xchg
dec
mov
xlat
xchg
xor
int
push
in
stos
je
add
or
stos
movsl
push
jp
xor
inc
scas
cmpsl
ljmp
lahf
shlb
mov
mov
lret
xchg
fimuls
daa
push
out
scas
scas
int3
cmp
dec
mov
push
sub
jmp
jne
or
das
lods
int3
jne
dec
fstps
testb
sbb
scas
lock
mov
dec
or
pushf
enter
mov
sub
test
out
subl
adc
push
cmp
dec
mov
arpl
mov
cmp
dec
fstps
xchg
mov
xchg
mov
dec
cmp
adc
or
and
adc
in
push
test
in
xor
mov
jg
aad
cmp
and
adc
mul
add
outsl
aaa
test
sahf
lods
mov
dec
clc
inc
pop
xlat
ret
aad
in
xor
adc
decl
dec
int3
push
popl
pop
adc
xchg
int3
cwtl
add
xor
mov
pop
cmp
fmull
mull
cmp
jp
das
in
iret
in
push
jno
xchg
push
jnp
clc
dec
xchg
cmp
stos
hlt
push
mov
jb
das
mov
pushf
inc
rclb
dec
cs
jmp
xor
pop
xor
sti
mov
jns
test
dec
in
inc
sub
out
lock
cltd
dec
push
cmp
mov
jmp
test
mov
les
mov
push
enter
call
cltd
jmp
xchg
in
dec
xchg
pop
mov
and
repz
or
ficoml
inc
push
rol
scas
lea
pop
mov
mov
in
push
sbb
dec
outsl
call
dec
filds
or
pop
leave
cwtl
popa
cmc
cli
cmp
es
insl
push
push
xchg
rcrb
dec
mov
sbb
pop
ds
lods
aaa
pop
xchg
imul
xchg
repnz
adc
shl
mov
ljmp
icebp
test
out
fstps
pop
inc
call
clc
das
scas
inc
fs
xchg
mov
mov
mov
xchg
in
push
sub
std
mov
pop
adc
sub
repz
jb
jbe
outsb
adc
mov
push
add
and
jnp
stos
jecxz
xchg
lock
int3
lahf
jne
js
mov
jns
lahf
xchg
jnp
mov
dec
jmp
sbb
aas
or
lods
sti
neg
dec
movsb
in
push
pop
out
and
dec
mov
jbe
jmp
inc
hlt
add
into
adc
pop
inc
shll
subb
in
stc
or
andb
daa
into
addl
jp
cltd
rcrl
jnp
pop
dec
jbe
mov
cltd
outsl
jb
push
mov
sarb
jo
arpl
adc
mulb
pop
jo
pop
sahf
sete
mov
add
fs
mov
adc
ljmp
xor
xor
pop
xchg
sbb
sub
adc
xlat
shrl
cmpsl
out
sub
enter
jg
xor
rcrb
cmpsl
into
ljmp
into
or
push
cltd
in
test
loop
lods
inc
dec
mov
inc
enter
clc
or
xchg
jae
xlat
cmp
add
loope
and
fmuls
cld
nop
fdivrl
pop
mov
cli
mov
xchg
out
sub
jecxz
xchg
push
push
and
pop
sub
ret
push
fisubs
aas
mov
pop
adc
sti
cld
les
paddusb
jb
xchg
add
mov
scas
cmp
add
jnp
outsb
mov
mov
cltd
jg
pop
or
pop
fistps
cmp
sub
jne
nop
sub
loopne
xchg
push
adc
in
jne
mov
push
sub
in
push
iret
mov
add
leave
xor
leave
jp
and
aaa
dec
rcr
jge
insl
loopne
icebp
fwait
mov
mov
inc
and
in
add
jge
out
out
jp
jl
sbb
xchg
mov
aaa
out
sub
dec
popf
push
xor
sbb
leave
test
push
sub
add
daa
mov
cmp
ja
xor
loope
sbb
fsubs
ficomps
out
mov
fidivrl
icebp
inc
mov
mov
jecxz
push
cli
jp
jmp
add
xor
sub
ret
cwtl
mov
imul
or
add
mov
idivl
dec
dec
fdivl
lahf
pop
mov
sar
xchg
addb
jecxz
fwait
mov
jge
mov
dec
mov
mov
dec
sub
cmpsb
mov
jmp
out
dec
add
rcll
loop
cmpl
test
push
movl
mov
int
int
xor
enter
jmp
pop
mov
mov
mov
inc
in
iret
xor
shrb
cmp
pop
aad
push
in
and
ficompl
stos
lret
or
cs
mov
loope
scas
lret
mov
xchg
shrl
scas
mov
aas
sti
jp
mov
jmp
and
int
in
scas
mov
xlat
cli
push
testb
mov
mov
dec
xor
setns
pop
pop
loopne
lods
repz
ficomps
mov
es
leave
mov
sti
arpl
stc
mov
roll
das
or
in
push
or
ljmp
inc
xor
outsb
cmp
cld
lds
sub
pop
xchg
pop
mov
flds
push
movsl
test
cmp
dec
cmp
xchg
lret
push
pop
adc
inc
js
cwtl
or
push
scas
in
pop
sti
hlt
xchg
and
jb
mov
add
mov
mov
aas
jns
aas
or
aas
fmull
test
das
xchg
repz
sub
pop
fbld
cld
ds
mov
push
rol
dec
adc
push
mov
out
rcrl
lock
push
sti
mov
push
test
pop
cmpsb
and
dec
xchg
xor
mov
loop
out
movsl
iret
sti
mov
inc
add
movsb
mov
test
rcll
inc
adc
repnz
fists
pop
sbb
je
das
push
xlat
xchg
aad
sbb
inc
sti
push
daa
xchg
adc
push
dec
xchg
mov
or
jo
sub
push
push
cmp
fsubrs
xor
filds
leave
into
fcmove
xor
ret
ss
add
sbb
xchg
mov
movsb
pop
popa
dec
push
je
mov
and
pop
testb
sub
ljmp
inc
ret
sbb
inc
fiadds
and
and
dec
repnz
sbb
popf
jns
xor
cmp
mov
mov
mov
and
inc
insb
pusha
lods
cwtl
in
outsb
pop
std
inc
or
lods
fistl
or
mov
andl
pop
icebp
sbb
mov
and
inc
sub
nop
fcompl
inc
std
fisttpl
out
loop
icebp
sub
mov
shl
inc
shl
push
lock
pop
cmpsb
inc
push
mov
int3
stos
dec
mov
push
push
and
fstpl
mov
out
leave
mov
mov
xor
mov
jns
in
pushf
fcmovb
outsb
mov
movsb
lret
push
xorl
les
mov
sub
dec
push
push
add
mov
repnz
pushf
and
cmp
mov
mov
push
ljmp
adc
das
xor
iret
out
adc
dec
push
cmp
mov
rsqrtps
imull
scas
jae
push
into
xchg
jg
dec
pop
xchg
aaa
pop
outsb
movsl
ss
hlt
rorl
adc
mov
or
push
inc
insb
sub
shlb
das
movsl
xchg
or
mov
and
scas
es
movsl
leave
call
dec
std
dec
cmp
pop
imul
mov
addl
mov
rorb
mov
jnp
jmp
popa
rclb
out
cmpsl
rcrl
and
repnz
push
dec
in
pop
pop
mov
cmp
jns
mov
push
ljmp
push
sub
iret
sbb
pop
cmp
mov
or
pushf
or
es
loopne
out
js
mov
or
and
sti
and
mov
loopne
jl
pop
lcall
mulb
insl
negl
adc
jmp
cld
out
push
add
fsubs
loope
cmpb
push
xor
xchg
sbb
lcall
enter
in
adc
and
mov
mull
jo
mov
xchg
adc
dec
nop
test
sbb
subl
sub
dec
cmp
sub
test
cwtl
mov
fcmovnu
les
lea
lcall
fwait
pop
xchg
js
stc
fmuls
or
cld
out
adc
stc
into
hlt
mov
add
cwtl
sbb
test
lea
dec
pop
dec
insl
jne
pusha
jl
jb
mov
mov
movsb
pop
push
add
arpl
pushf
mov
mov
clc
into
sub
hlt
incb
or
push
push
inc
int3
cmpsl
notl
pusha
ret
rclb
pusha
add
fidivl
sarl
popa
add
cmp
out
pop
or
movsl
pop
or
xor
loopne
add
lods
ret
adc
lret
mov
mov
int
insl
aas
ret
gs
push
mov
jno
into
sbb
lods
and
movsb
ja
mov
fwait
pop
dec
sub
add
push
clc
push
adc
jo
and
mov
in
arpl
xchg
sub
dec
ljmp
xlat
sub
fisttpll
pop
bound
push
iret
cmp
out
fidivrl
push
clc
scas
sarl
mov
and
fistl
arpl
mov
mov
aas
mov
push
cmc
sahf
push
fdivr
fisubrs
mov
fdivrs
xor
sbb
sub
out
imul
push
loop
scas
sub
popf
insl
pop
lds
mov
sbb
int
mov
push
fnstenv
ficoml
div
shlb
ljmp
lock
popf
pop
or
mov
sti
sub
jp
cld
xor
xor
mov
lods
add
sbb
push
inc
add
push
or
sbbb
test
and
add
xchg
ss
popf
in
loop
pop
inc
adc
pop
sbb
cs
repz
push
pop
dec
addr16
gs
sbb
push
inc
mov
mov
and
xor
loope
pusha
test
or
movsb
push
sub
fidivs
out
jb
cltd
loope
movsb
in
mov
xor
inc
aam
pop
in
lock
jns
lret
dec
pop
hlt
add
pop
icebp
je
test
sbb
mov
lret
inc
inc
or
mov
cmp
pop
xchg
sub
mov
lds
aaa
fsubrp
mov
inc
inc
mov
enter
ja,pn
in
std
cltd
repnz
std
pop
sub
stc
imul
mov
pop
xor
movsl
dec
lret
std
test
sbb
pop
dec
cmp
imul
pop
jge
or
mov
stos
push
sbb
push
mov
cmpsb
mov
test
test
add
iret
jmp
bound
ds
lods
clc
sbb
mov
dec
es
call
sub
push
mov
push
add
sub
dec
jne
sub
test
push
jnp
das
mov
ret
mov
imul
xor
and
pop
sub
int3
sbb
adc
add
pusha
or
stos
cwtl
inc
cwtl
pop
out
dec
cli
test
js
testb
mov
es
jge
jae
xor
mov
sbb
mov
data16
mov
jecxz
icebp
adc
hlt
pop
jl
bound
fsubrl
out
sbb
scas
dec
int3
test
loope
pop
rorl
xchg
jae
cmp
mov
mov
add
jno
rorb
in
lahf
sub
imul
out
push
mov
dec
fsubl
dec
dec
ficoml
mov
into
cmp
and
pop
dec
leave
imul
sub
ja
shlb
lahf
int3
pop
hlt
iret
xchg
push
js
lret
inc
ljmp
sbb
addr16
xor
and
jno
jecxz
fmull
adc
fistpll
push
movsl
and
push
lods
add
inc
inc
mov
int3
jp
inc
icebp
xor
sbb
enter
cltd
jmp
leave
push
outsl
dec
ja
or
push
xor
sub
inc
ja
imul
sbb
jle
sti
fistps
dec
inc
jo
sub
jmp
mov
in
enter
in
dec
andb
fcos
scas
xchg
fisttps
xorl
inc
insb
mov
add
ds
repnz
xchg
cmc
xchg
dec
pop
add
fsubrs
cmp
in
jle
cmp
test
jne
arpl
shlb
std
bound
or
pop
loopne
in
loop
adc
in
dec
push
inc
xchg
and
pop
or
int3
push
dec
fldl
inc
jne
aaa
xor
call
mov
cmp
mov
xchg
rcrl
loopne,pn
icebp
cmpsb
ljmp
xchg
iret
push
stos
fsubrp
xchg
xor
jno
cld
inc
lret
push
test
add
sarb
cmp
add
pop
jl
mov
ret
jl
decb
sub
add
dec
sbb
adc
push
push
mov
sbb
jbe
or
out
pop
jb
dec
dec
push
sarl
mov
test
dec
inc
pop
xchg
je
pop
pop
mov
xchg
pop
cltd
add
inc
outsb
inc
clc
fwait
sub
in
jnp
jle
pop
mov
inc
jge
cmp
ss
mov
mov
dec
adc
pop
mov
aaa
rolb
mov
inc
test
sahf
xor
shrl
out
lcall
negb
mov
push
and
stos
push
jb
inc
das
pop
dec
das
mov
xchg
and
push
inc
jle
push
pop
int
mov
mov
mov
enter
jo
sbb
inc
xor
adc
push
sbbb
aad
sbb
outsl
add
test
dec
adc
xlat
cmp
pop
and
push
aaa
ss
push
leave
int3
push
jmp
xor
mov
cwtl
push
jg
push
loop
lods
enter
lock
sub
hlt
lea
and
jns
mov
stos
ret
inc
ljmp
mov
bound
dec
ffree
xchg
adc
pop
rorb
popa
notl
push
movsb
push
stc
dec
push
jae
push
icebp
sbb
pop
scas
jp
ljmp
jns
lds
mov
dec
xor
aaa
and
repnz
pop
int
pop
add
mov
out
push
sbb
clc
adc
negl
shlb
pusha
sbb
nop
dec
pop
imul
pop
cmpsl
ljmp
inc
push
xchg
cmp
mov
add
mov
jmp
mov
mov
adc
mov
cmpsb
in
xor
les
std
push
mov
sub
rclb
pop
adc
cmp
mov
inc
imul
mov
mov
out
call
sbb
fcompl
push
inc
in
push
xchg
ret
mov
or
mov
mov
xchg
arpl
cltd
and
add
repnz
loopne
sahf
sbb
fucomi
fdivrp
pushf
push
fistl
std
mov
fsts
xchg
cmp
stos
out
pop
mov
pop
rorb
jno
mov
add
mov
jne
sbb
scas
aad
jbe
subl
ja
adc
mov
xor
mov
cmpsb
lahf
arpl
in
ficompl
jg
ljmp
sub
dec
add
or
rcll
cwtl
xor
fldenv
outsb
in
aas
or
ret
lock
imul
clc
scas
jp
aad
sub
pop
out
pop
push
hlt
jae
into
cmpsb
test
shrb
push
cli
and
movsb
mov
pop
out
out
aas
cltd
dec
mov
fwait
loopne
mov
insb
mov
jne
mov
mov
mov
repz
sarl
cmpsl
xlat
sbb
push
sti
fprem
cmpsb
mov
inc
orl
xchg
dec
popf
lods
xchg
cmp
mov
cmp
or
xchg
in
inc
jle
testb
xlat
negl
stos
mov
mov
ds
adc
jnp
int3
fcoml
stos
in
add
mov
adc
int3
or
mov
and
in
lret
mov
fiadds
lret
movsl
lret
lahf
mov
movsl
and
cld
out
pop
jle
push
rorb
into
fimuls
fmul
lods
push
sbb
add
imul
lcall
dec
fists
fisubs
lods
pop
cmp
enter
addl
pop
in
mov
jbe
sarl
xchg
sbb
arpl
test
outsb
clc
nop
dec
sbbl
aaa
movsb
mov
call
insl
push
nop
addr16
add
inc
cmc
xchg
xor
and
ljmp
and
lds
ret
inc
xchg
xor
fdivp
test
aam
out
sahf
data16
dec
mov
std
bound
aas
lock
add
movsl
mov
rcr
sbb
fcom
adc
dec
cmpl
push
inc
lret
jae
fcoms
test
popf
push
fimuls
xchg
or
add
sub
jle
jo
jp
dec
js
add
lret
scas
mov
xor
mov
push
fdivrl
les
test
outsb
pop
mov
add
sbb
pusha
icebp
jg
xchg
lea
push
repz
fwait
xchg
hlt
bound
in
in
inc
out
xchg
mov
sbb
jmp
xchg
aaa
insl
mov
cs
mov
lods
stos
dec
shl
popf
insl
shlb
xor
jp
adcb
scas
lcall
push
or
in
dec
cmc
mov
sbb
repz
enter
push
xor
cwtl
das
stos
pop
scas
bound
loope
incb
imul
pop
scas
sahf
loope
movsb
sarb
out
mov
push
jae
fistps
pop
dec
addl
icebp
call
rcrl
xor
push
iret
leave
out
add
push
jmp
mov
and
xor
cli
inc
and
in
pop
push
ss
es
pop
inc
test
xor
mov
jb
ret
mov
repnz
ffree
push
mov
mov
dec
or
pop
movsl
pop
loope
in
pushl
mov
adc
mov
sbb
fnstenv
in
adc
jno
pop
enter
js
scas
std
gs
sarl
add
test
cmp
inc
fmuls
push
lret
mov
shrb
cld
fnstenv
sbb
cld
ljmp
shlb
pusha
pop
out
cld
ljmp
push
ds
xchg
mov
jno
insl
loopne
imul
jne
mov
test
pusha
call
cltd
mov
filds
pop
adc
pop
add
out
popf
imul
pop
pop
movsb
cmpsl
adc
xchg
cmp
test
les
push
push
mov
jge
cmp
icebp
dec
dec
xchg
rcrl
cmp
leave
jl
xlat
mov
lock
inc
lret
inc
dec
pop
popa
and
lods
cmp
cs
out
push
sub
shlb
mov
pop
dec
aas
push
cmp
pop
and
sbb
aas
pop
sbb
scas
sub
cmpl
jg
dec
xchg
adc
add
add
sti
and
lahf
pop
mov
subl
mov
mov
inc
hlt
xor
fisttpll
mov
pop
sbb
divl
dec
mov
shr
loope
leave
or
fistpl
cmp
mov
test
or
lods
enter
in
iret
cmp
mov
adc
ss
aam
outsb
das
push
jo
push
in
jae
jns
xchg
es
jbe
mov
cmp
dec
pop
ss
add
jmp
mov
mov
lods
jo
push
ja
jge
mov
sub
adc
ljmp
mov
and
mov
out
testl
pushf
sti
jno
loop
lahf
xchg
ds
push
adc
xor
push
in
jnp
sub
lret
shll
add
pop
push
xchg
movsb
or
rcrb
jmp
pop
js
imul
cmp
or
jle
roll
push
xor
xor
call
loop
lcall
pop
stos
test
pop
cmc
and
dec
arpl
lahf
fldt
testl
inc
mov
dec
je
sbb
loope
pop
cmc
push
scas
mov
sahf
ret
outsb
cmp
cltd
test
pop
pop
iret
in
rcl
jp
push
sub
addr16
call
xor
out
inc
mov
mov
inc
mov
outsb
pop
aaa
movsl
out
or
mov
xor
hlt
pop
mov
and
push
rcll
insl
xchg
jl
sbb
or
lea
stos
cmpsb
push
cmc
sub
mov
mov
xchg
fldt
call
orb
mov
mov
ljmp
pop
add
adc
fdivrp
stc
mov
xchg
push
jb
pop
and
and
sbbb
jno
js
dec
xchg
movsb
mov
inc
dec
frstor
imul
daa
jne
jae
scas
pop
addr16
pop
jne
fimuls
dec
mov
xchg
sbb
mov
sub
mov
aam
push
mov
add
imul
popa
adc
adc
mov
test
pop
inc
cld
cmpsb
fcmovu
inc
je
pop
imul
push
add
test
iret
scas
mov
into
xchg
pop
nop
sub
push
dec
inc
and
dec
mov
es
xchg
jl
lods
jp
inc
gs
jp
ret
movsl
xchg
or
aam
roll
loopne
inc
pop
push
cmp
lods
xchg
adc
or
cli
jg
push
daa
add
mov
jp
jle
fcompl
pause
fldt
pusha
inc
mov
mov
loop
jns
in
ss
xor
and
mov
dec
add
or
cmpl
std
into
mov
cmp
sti
sbb
notl
enter
adc
fwait
add
test
pushf
push
inc
sbb
lock
aad
xor
or
pusha
test
iret
xor
or
jo
xchg
aad
fiadds
or
lret
mov
lea
daa
cmp
adc
push
and
es
mov
push
push
add
sbb
cmp
stos
imul
mov
enter
leave
cld
lods
or
mov
add
pushf
inc
adc
ja
sbb
stos
sbbb
adc
xchg
sbb
xchg
loope
lock
movq
call
out
jae
push
ficompl
mov
outsb
inc
sub
std
push
test
push
xchg
jmp
out
mov
sbb
dec
cmp
filds
mov
inc
push
fprem1
jecxz
cmpl
sbb
sbb
xchg
sbb
mov
lods
inc
inc
add
scas
neg
xchg
dec
and
data16
xchg
test
hlt
std
mov
shlb
je
adc
jmp
or
aam
test
and
inc
sub
adc
mov
popf
pop
inc
jns
int
cmpsb
pop
cmp
pusha
cmp
jo
repz
add
pusha
dec
mov
sbb
sarb
sbb
adc
jo
mov
loop
jnp
in
xlat
cmp
ljmp
push
pop
mov
add
dec
inc
and
loopne
xchg
cmp
inc
and
pop
int3
test
call
and
minps
cmpsb
adc
jecxz
xchg
lret
test
popl
outsb
cmp
scas
pop
in
sbb
das
mov
pop
icebp
cmp
jns
xchg
sub
jg
mov
aaa
out
lods
shrb
fwait
pop
adc
mov
cld
insb
push
add
and
lcall
push
mov
outsl
lret
sub
rorl
and
fstpl
fstpl
adc
or
movsb
sarb
jmp
popa
clc
pushf
or
shlb
inc
rcrb
push
cmovns
sbb
xor
and
xlat
and
mov
das
lahf
out
mov
or
fisubl
fwait
adcb
int
jns
push
xor
repz
test
mov
mov
dec
in
xor
clc
jns
lods
and
xchg
sub
pop
cmc
pop
ss
adc
lock
repnz
pop
daa
pop
lock
and
pop
lods
cltd
pop
push
je
movsl
push
lods
or
in
adc
and
inc
lret
mov
add
push
push
mov
adc
aad
into
sub
xor
fndisi(8087
mov
adc
add
jge
sbb
fs
arpl
loope
sbb
mov
mov
test
jbe
movsl
mov
mov
xor
xchg
fcompl
enter
cli
mov
sbb
cmp
push
je
adc
sub
imul
dec
int
sbb
sub
and
sub
jmp
sbb
test
jle
popa
mov
subb
enter
adc
mov
filds
pop
fwait
mov
inc
sub
cwtl
sbb
jns
cwtl
popa
cmp
cmp
xor
sub
mov
clc
std
cwtl
scas
and
pop
mov
dec
stc
jecxz
out
pusha
cmp
cs
sub
cmp
es
cmpsb
mov
mov
gs
pop
mov
cmpsb
mov
arpl
rolb
fmulp
mov
popf
les
and
mov
nop
sbb
mov
xchg
lock
jp
sub
scas
outsl
cld
jo
lods
xor
cmp
pop
adcl
xchg
fistpll
fcmovnu
hlt
fwait
dec
push
andb
add
es
sub
inc
nop
test
cmp
clc
adc
add
mov
dec
jp
filds
iret
ds
add
out
fiaddl
sub
cmp
jmp
and
cmp
push
out
lds
frstor
push
movsl
popl
jge
rcl
cmp
xchg
mov
xor
movl
movsb
dec
imul
add
mov
lret
fsub
in
inc
mov
add
mov
sub
gs
sahf
or
mov
mov
je
xchg
test
lahf
cli
jmp
sar
inc
out
sahf
jns
and
aam
repnz
cmpsb
mov
in
test
xchg
and
loop
and
fmul
addr16
test
test
jg
push
pop
insl
xchg
in
cmp
dec
xor
fcoml
sub
fsubrs
pop
bound
push
std
loop
jo
lods
sub
or
pusha
or
shrl
adc
les
fisubrs
mov
ja
sub
daa
movsl
mov
adc
rcll
repnz
inc
in
jne
arpl
push
xlat
and
push
sub
setge
and
jb
or
mov
push
notb
push
mull
dec
push
push
mov
adc
dec
pop
add
cmp
hlt
mov
push
aad
cmp
insl
test
in
movsl
adc
xchg
subb
add
pop
lods
mov
mov
test
mov
add
js
cmpsb
iret
shlb
sahf
jmp
andb
js
sub
scas
imul
sbb
xchg
lret
imul
sbb
mov
into
mov
xchg
mov
sarl
stc
aam
in
push
testb
loope
sbb
and
xchg
fwait
test
adc
sbb
inc
xor
jno
cmp
xor
pop
loop
sbb
adc
pop
mov
ret
mov
or
pop
pop
adc
les
push
mov
in
xchg
scas
xchg
andl
insl
cmp
pop
and
fnstcw
cmc
lahf
push
nop
xchg
jb
and
sub
icebp
add
mov
aad
xchg
ret
or
scas
xor
xlat
sbb
lds
push
addb
inc
cmpsb
les
sarb
jl
xchg
imul
orb
ret
pop
jbe
hlt
mov
pop
lretw
and
ret
add
pusha
out
int3
jne
push
sub
data16
stos
loope
dec
mov
ret
dec
loope
add
xor
mov
add
dec
or
add
push
fcompp
jno
or
xor
fsub
jle
fsubr
or
aam
lahf
sub
minps
and
pop
popa
dec
dec
or
dec
mov
xor
shlb
xorl
xchg
mov
sbb
rcll
cli
push
movsb
pop
inc
lahf
call
enter
in
scas
lcall
xchg
movsb
je
cmp
fdivrs
add
negb
mov
mov
adc
jp
push
ljmp
out
push
push
and
inc
mov
push
and
push
gs
aam
xor
push
fmul
mov
fidivrs
push
daa
sbb
daa
and
mov
mov
dec
mov
jne
xor
mov
fbstp
lret
inc
xchg
movsb
jl
lret
fsubr
jns
mov
into
xchg
popa
es
or
insl
mov
add
mov
inc
and
cld
mov
dec
cmp
dec
pop
xchg
inc
fisubs
loop
clc
mov
or
je
add
out
inc
loopne
jge
pop
orb
mov
mov
jg
gs
out
outsb
mov
pop
mov
fwait
int
and
neg
push
in
test
loop
fsts
ds
xchg
pop
shll
stos
cmpsl
push
push
sahf
cmp
xchg
les
and
xor
xchg
jl
mov
xor
cmp
mov
push
xchg
scas
scas
call
popf
sbb
outsb
data16
xchg
mov
jno
jbe
pop
add
or
fsts
popl
add
inc
xchg
mov
lods
int3
movsb
int
pop
popf
outsb
loopne
adc
and
xchg
dec
sahf
aad
jns
clc
lock
je
seto
dec
xor
testl
xchg
mov
pop
int
aad
mov
bnd
pop
out
sbb
sahf
xor
mov
add
in
sti
mov
fistps
jmp
daa
inc
mov
or
push
outsl
cmp
xchg
jae
dec
not
dec
sbb
mov
jg
sub
cmp
popf
mov
clc
jnp
xor
rorl
sbb
push
negb
jne
push
loope
les
sub
xlat
leave
jecxz
call
sbbb
push
pop
outsb
hlt
add
call
push
repz
pop
fcmovnu
int3
pop
mov
gs
cmpsb
and
lret
cs
inc
int
adc
xor
mov
out
and
xchg
pop
push
inc
dec
mov
adc
fs
mov
xchg
add
inc
imul
scas
ret
insl
and
fcoms
mov
rorb
enter
sub
push
xchg
cmc
xor
fmull
jo
sbb
arpl
xchg
pusha
fistps
mov
jno
pop
cmp
or
call
enter
lds
mov
mov
cmp
add
pop
aad
mov
ret
inc
incl
dec
lock
imul
cmp
iret
or
dec
lock
dec
and
inc
adc
mov
sti
aas
adc
adc
insb
ds
jg
aam
lahf
or
mov
addr16
rcrb
xchg
fists
scas
fidivrl
xchg
lcall
lcall
xchg
or
jb
adc
popa
push
xchg
test
adc
out
es
mov
repnz
ret
jno
test
mov
scas
loope
popf
xchg
les
in
jo
ret
inc
adc
insb
push
pop
sub
cltd
cmp
jbe
cmp
inc
push
sub
lods
cmp
mov
jmp
lret
test
inc
fiaddl
inc
xor
jecxz
shr
rorl
pop
push
pop
sbbl
shlb
jb
stos
mov
adc
pushf
push
adc
or
lods
pop
adc
sahf
and
sub
dec
ret
mov
inc
roll
cmc
in
adc
adc
sub
pop
xchg
xchg
push
mov
clc
es
jne
adc
jns
push
pop
imull
loop
adc
pop
cmc
paddusw
pop
rolb
xor
jae
outsl
cmpsb
inc
dec
sbbb
jns
fdivrl
ja
in
pop
push
add
pop
jl
std
pop
test
pop
sbbl
lock
jbe
std
das
jbe
lret
aaa
mov
aam
outsb
lret
stos
aad
pop
mov
xor
dec
mov
sti
movsl
stos
aam
push
xchg
mov
sbb
or
mov
shr
cmp
sarl
fcoml
push
mov
push
ljmp
adc
add
sahf
xchg
mov
ret
pop
mov
outsb
xor
stos
fwait
out
and
push
xchg
clc
sbb
xchg
movsb
outsl
inc
sub
jmp
jecxz
rorb
or
xor
and
movsb
mov
xor
mov
push
ret
xchg
std
mov
inc
cmpsl
nop
dec
imul
or
out
fs
push
lea
pop
push
cmpsl
xor
shlb
pop
jle
push
imul
push
aad
and
cmpsb
ret
int3
or
daa
into
xchg
mov
add
xor
cmpsb
enter
jl
adc
fstpl
add
cmpsb
sub
lea
adc
rol
sbb
mov
sub
lret
jg
mov
jns
inc
push
adc
jmp
addr16
int
sbb
push
lods
inc
shr
cmc
into
push
mov
dec
push
in
in
xchg
arpl
cltd
sbb
js
mov
adc
or
mov
pop
lods
xchg
sbb
movsb
roll
sarb
cmpsb
push
std
outsb
scas
mov
mov
icebp
pop
shr
dec
int3
mov
insb
out
in
and
das
insb
pushf
sub
xlat
mov
pop
sub
mov
push
fwait
push
xor
sub
fadd
mov
inc
xchg
xor
adc
stos
xchg
shlb
cmpsl
nop
jnp
or
and
daa
insb
out
sahf
push
scas
js
sahf
les
test
sahf
mov
push
mov
jne
mov
lret
decb
repnz
shlb
sbb
mov
inc
cmp
dec
adc
jg
cmp
jg
out
or
xchg
imul
xchg
das
pop
aas
cmp
out
outsb
rcr
dec
movsb
sub
mov
pop
shr
sub
mov
add
jp
ljmpw
push
xor
ja
icebp
mov
movsl
outsl
out
jmp
pop
mov
mov
or
cmp
sub
mov
movsl
inc
rclb
test
sub
sbb
push
pop
shll
dec
mov
push
jge
and
das
pop
test
sub
push
mov
test
dec
popf
jnp
lds
mov
inc
mov
seto
fsqrt
loope
das
js
xlat
test
mov
js
adc
outsl
stos
pushf
jg
xchg
loop
add
scas
ss
dec
repz
sbb
dec
mov
lret
lock
mov
push
movsb
cmpb
and
iret
cmpsl
adc
sub
mov
sbb
xchg
lods
push
mov
lret
mov
mov
daa
mov
std
xorl
imul
push
sti
sub
es
cmpb
or
add
pop
push
lcall
and
jnp
pop
mov
in
pop
jmp
insb
inc
popf
cmp
push
loope
das
loop
xlat
adc
rsqrtps
jnp
leave
mov
cmp
dec
lods
fimull
jo
mov
roll
mov
add
mov
dec
jp
aad
iret
or
cmp
cmp
push
xchg
movsl
mov
rolb
test
fwait
mov
sbb
pop
cltd
insl
sbb
pop
mov
loope
mov
dec
fisubrl
xchg
cmp
xchg
pop
sub
lock
testl
aas
push
faddp
mov
ljmp
xchg
push
nop
add
lea
inc
aad
mov
out
xchg
fists
cmp
inc
jl
ljmp
test
pop
pop
jne
leave
xor
xor
sub
xchg
lods
imulb
pop
mov
push
xchg
mov
lahf
imulb
in
push
push
add
add
jecxz
hlt
or
sub
mov
shl
clc
mov
xor
pusha
sub
gs
push
or
mov
or
pop
sbb
loop
aaa
ljmp
out
inc
pop
sub
or
in
jns
cmpsb
mov
inc
addr16
or
mov
or
dec
push
lods
cmpl
adc
pop
inc
and
and
push
fisubs
dec
sbbb
add
xchg
test
gs
loop
dec
mov
and
ja
fimull
and
stos
out
jbe
sete
jle
push
jbe
cmc
jecxz
cmp
adc
cmc
or
dec
inc
push
mov
pop
add
je
add
pop
push
ds
inc
jmp
ficoms
dec
or
inc
aas
xor
loope
inc
call
aas
fcoml
cmc
mov
fisttpl
fistl
mov
stos
push
pop
lods
or
add
push
xchg
in
bound
sbb
mov
push
sub
pop
jmp
enter
adc
cmc
sar
push
mov
sbb
pop
mov
xor
dec
fwait
shll
cmc
dec
call
test
fsubrp
lods
inc
lcall
jmp
cmpsb
icebp
cmp
pop
fcmovnbe
das
dec
fucomp
imul
jb
add
push
insb
addr16
dec
jg
clc
loop
pop
aam
out
xchg
pop
sbb
xchg
ljmp
jae
or
rep
shlb
jae
pop
inc
inc
mov
and
call
loopne
and
jne
cld
mov
xor
sbb
addl
and
fsubrs
mul
int3
in
pop
popf
sub
adc
nop
outsl
mov
pop
mov
adc
ds
test
xor
jns
sub
mov
dec
sub
mov
jge
xor
mov
sbb
dec
cmpb
shrb
or
ljmp
pop
into
int
bound
out
dec
or
iret
fistpl
jbe
cli
sbb
mov
add
test
mov
lret
and
lods
or
mov
mov
dec
jecxz
xchg
loope
xor
int3
call
lods
mov
mov
xchg
pop
int3
mov
mov
mov
or
es
mov
fldl
sarl
sub
and
mov
mov
or
subl
loopne
push
cmpsb
cld
daa
sbb
pop
or
dec
mov
mov
xor
hlt
aaa
ljmp
push
sub
mov
in
std
mov
cmp
lahf
cmp
mov
xchg
push
mov
insl
sbb
sub
jecxz
sbb
mov
inc
push
daa
lea
cmpl
sbb
int
jg
es
push
xor
ds
sub
sarb
dec
sub
jne
ljmp
loope
in
pop
movsb
mov
and
dec
stc
sbb
sub
push
outsb
add
cmp
push
push
fwait
mov
jnp
mov
and
push
inc
aad
ds
into
repz
mov
sbb
push
repnz
pop
mov
mov
les
sbb
mov
mov
mov
les
scas
je
outsl
cwtl
xchg
gs
mov
mov
xchg
sbb
stos
pop
dec
push
rclb
adc
adc
mov
mov
jl
pop
mov
add
js
jbe
pop
adc
mov
mov
and
mov
das
into
pop
arpl
sub
xor
loop
sbb
insl
or
mov
or
shrb
add
mov
addr16
mov
mov
and
lcall
cmpsl
mov
pop
stos
lods
hlt
hlt
xor
inc
call
cmp
dec
jnp
sbb
mov
pop
push
stc
pop
mov
test
push
rcrb
jle
mov
and
jge
inc
testl
fldl
inc
test
sbb
outsl
bnd
movsl
mov
ret
cmc
sub
add
aaa
push
xchg
add
sub
fcmovne
movsl
sub
insb
xor
cwtl
mov
push
mov
movsl
dec
inc
mov
mov
cmp
daa
and
arpl
and
sub
movsb
mov
pop
jnp
outsl
jne
shlb
lea
push
bound
test
jne
pop
shlb
out
bound
jno
mov
arpl
mov
mov
or
mov
pop
into
ljmp
movsl
jg
jmp
lds
jo
mov
js
add
pop
test
ljmp
fwait
aas
out
aam
iret
xlat
push
mov
sub
lock
hlt
sbb
mov
loop
enter
xchg
xor
pop
pusha
push
mov
lcall
pushf
lret
loope
out
fstpt
icebp
push
pop
clc
test
outsb
adc
push
xchg
outsb
xacquire
mov
xchg
cmp
fs
add
push
arpl
inc
or
lock
loopne
repz
pop
test
in
iret
and
mov
insb
std
outsb
inc
pop
mov
out
jne
sbb
daa
pop
mov
sbb
mov
sbbb
mov
ds
xor
std
dec
mov
mov
pop
mov
lret
xchg
cmp
test
and
jp
insl
cmc
pop
adc
les
popa
and
pop
push
clc
add
jb
mov
dec
bound
fstpt
leave
nop
cs
xor
xchg
mov
ror
jmp
repz
jmp
test
mov
mov
cmpsb
jle
je
out
jno
mov
sbb
adc
inc
add
filds
cmp
mov
aad
pop
lds
loope
lret
mov
testb
scas
inc
inc
push
jnp
pop
ljmp
jl
xchg
popa
mov
setne
cmc
mov
loop
ret
stc
add
test
popa
pop
add
pusha
pop
out
sub
push
cmpsl
ds
add
data16
dec
gs
pop
or
cli
cmp
mov
shlb
mov
pop
lods
jp
and
sbb
pop
pop
sahf
lahf
sub
or
clc
push
adc
repz
push
int3
push
les
and
imul
add
cld
fbstp
mov
sub
loop
mov
push
cmp
in
adc
sbb
sub
add
fcmovne
leave
repnz
fisubrl
pop
push
inc
shll
scas
scas
in
mov
xlat
pop
cld
push
fcomps
lret
mov
dec
xor
add
adc
sbb
pop
sbb
test
mov
sbb
mov
cmp
mov
iret
xor
pop
lret
iret
mov
inc
and
xchg
inc
pop
mov
sbb
cmp
mov
rcll
pop
or
mov
sbb
sahf
fimull
sarb
aam
sar
mov
push
les
push
lahf
fildl
imull
test
mov
mov
cmp
std
mov
add
popa
repnz
stos
xchg
mov
mov
dec
adc
inc
mov
jb
orl
and
divb
in
sbb
pusha
std
in
shll
cld
and
cltd
mov
ret
ljmp
xchg
push
push
loope
iret
aad
jmp
mov
xchg
xchg
mov
lret
push
fwait
push
sahf
xchg
push
out
pop
mov
adc
stc
test
cmpsb
jge
sbb
dec
xchg
es
gs
cmp
xor
in
xor
and
add
cltd
jns
mov
aaa
mov
xchg
add
dec
dec
xor
std
adc
mov
push
dec
and
jb
cmp
dec
and
mov
lock
lea
loope
pushf
add
insb
negb
gs
jl
or
fstp
stos
add
pop
mov
jb
sub
pop
inc
fidivs
fildll
mov
xor
and
mov
mov
out
data16
int3
je
adc
pusha
sbb
add
imul
mov
cwtl
in
jp
xlat
sbb
cmp
sbb
inc
loope
cwtl
iret
add
adc
fmul
jo
xchg
adc
push
jle
loop
aaa
js
out
lea
loopne
fidivrl
ja
mov
cmpsb
bound
mov
dec
add
xor
xchg
pusha
rcrl
ja
jb
gs
mov
stos
inc
es
inc
push
add
iret
xlat
fs
mov
lahf
mov
cmp
and
and
ret
cmpsb
and
ss
cmp
push
dec
adc
mov
pop
jns
sbb
add
jne
inc
inc
test
ret
mov
xchg
sub
repnz
mov
xor
in
sbb
push
pop
dec
lret
cmp
lcall
stos
mov
lock
lahf
ficompl
adc
mov
bound
ficomps
aam
mov
test
fiaddl
push
pop
mov
jnp
lock
mov
out
mov
sub
fcompl
in
push
aam
loop
and
adc
xchg
lret
add
pop
das
sub
out
mov
mov
pop
mov
sarb
dec
mov
in
pop
outsl
shll
cmc
int
data16
jecxz
cwtl
mov
jle
in
hlt
leave
xchg
xchg
xor
movsb
sahf
movsl
lahf
std
inc
lahf
repnz
or
adc
jge
insb
popf
andl
cmp
test
out
add
dec
adc
pop
pop
adc
inc
jns
sub
clc
not
daa
jle
mov
aas
aam
ret
pop
ja
gs
subl
jno
jb
xchg
sbb
push
jmp
mov
fmul
xchg
cli
push
shr
imul
lcall
jl
pop
xchg
inc
sarl
mov
out
xor
sub
stos
es
daa
stos
sarl
outsl
shlb
xor
adc
js
lea
dec
lods
jmp
xor
inc
aam
leave
and
mov
orl
loope
cmp
sub
add
ret
sub
push
mov
xchg
mov
in
mov
bound
xor
sbb
fbstp
jmp
call
mov
test
stc
xor
push
sub
arpl
xchg
data16
into
add
sti
xchg
adc
lret
fwait
ret
and
scas
out
mov
mov
leave
mov
shr
jecxz
sbb
xchg
repz
bound
mov
sbb
xor
mov
das
mov
iret
clc
jne
mov
xchg
push
sbb
clc
sbbl
in
shl
sub
adc
mov
shlb
push
int3
pop
lret
xor
mov
fimuls
outsl
sahf
xor
xor
jmp
jl
bound
and
pushl
xchg
mov
call
xor
loopne
loop
fidivrs
or
sub
js
outsl
out
dec
clc
push
or
mov
in
xlat
or
sbb
pop
sbb
mov
dec
xchg
pop
fnstenv
cld
xchg
cld
cmp
fcomip
fs
push
push
movsl
scas
sub
pop
dec
cmpsb
test
cmp
fbld
add
xchg
jb
pusha
jbe
fdivr
in
cld
daa
adc
sahf
adc
adc
out
mov
push
inc
inc
pusha
je
sub
sti
enter
mov
pushf
daa
mov
mov
sub
ja
mov
in
addr16
mov
popa
fisubl
shrl
out
hlt
jae
daa
mov
or
jmp
push
test
lcall
mov
or
mov
inc
dec
arpl
pop
cmp
jg
aaa
mov
fsubr
sbb
test
fldpi
imul
sbb
mov
jne
movsl
push
pop
and
fidivrs
fsubp
pop
shlb
push
adc
popa
icebp
jl
cmpsl
dec
daa
add
jbe
mov
and
stc
bound
cmc
incl
cmp
mov
mov
sbb
dec
fidivrs
push
pop
leave
mov
sbbb
fisttps
jmp
fwait
mov
test
clc
cmpl
pop
mov
test
cmpsb
xlat
outsl
notl
and
push
and
sub
cmpsl
cmp
xor
outsb
lods
loope
pop
test
ud0
mov
inc
cmp
push
mov
test
sbbb
fsubrl
sbbb
xchg
repz
lahf
fs
or
movsl
enter
fistpl
push
fld
fs
mov
movsb
pop
or
add
ficoml
xchg
jge
or
out
rcl
dec
xchg
xorl
enter
or
aad
ljmp
mov
mov
sbb
push
in
and
adc
std
cltd
shrd
ds
xchg
adc
add
mov
add
adc
sub
mov
and
jne
or
or
insl
lahf
mov
mov
cli
ds
arpl
lcall
xchg
cwtl
shl
jns,pt
stos
xor
jne
std
push
sbb
mov
add
in
or
jle
dec
jp
aam
outsl
jl
dec
adc
lcall
mov
jecxz
je,pn
push
cmc
adc
lret
jecxz
daa
sbb
xchg
shl
mov
xchg
pop
pop
adc
mov
xchg
and
add
jae
mov
fnsave
pop
or
leave
mov
mov
add
mov
or
add
xor
js
inc
fbstp
pop
jbe
ret
mov
xor
outsl
xchg
inc
in
mov
int3
pop
inc
nop
or
mov
sub
or
rorb
jne
lea
rclb
add
dec
into
cmp
scas
cltd
pusha
data16
inc
outsb
in
inc
insb
mov
repnz
and
mov
ljmp
pop
sub
outsl
fs
mov
fwait
sbb
out
repz
xor
icebp
popf
pop
xchg
jae
inc
mov
dec
cmp
stc
pop
dec
push
cltd
ficompl
movsl
pushf
mov
sub
adc
xchg
out
or
mov
pop
push
fimull
cltd
xor
cmp
in
add
pop
iret
movsl
sbb
xor
insb
gs
shll
and
aam
cmp
pusha
inc
rcrl
out
aad
push
push
dec
rclb
jb
dec
arpl
ja
jae
xlat
lods
in
xchg
ja
pop
or
mov
xorl
sarb
test
add
shr
divl
clc
inc
dec
sub
jbe
pop
push
mov
mov
pop
lret
adc
scas
aam
cmc
rclb
and
sub
daa
and
daa
cmpsb
jmp
fadds
inc
or
fmulp
imul
sbb
ljmp
and
ret
arpl
jns
rcr
adc
test
pop
push
xor
lret
dec
dec
rcl
or
mov
fsubrs
in
lahf
dec
mov
jno
push
ss
cmc
loop
pop
jae
xchg
in
sar
loope
addr16
in
outsb
or
mov
hlt
out
pop
cld
test
shl
cli
test
add
cwtl
sub
imul
out
pop
rcl
or
adc
push
cmp
in
setp
sbb
fmull
shll
add
cmovge
cmp
mov
in
inc
pop
pop
jle
out
call
aas
xor
js
add
inc
call
mov
mov
jl
jge
pop
sub
loopne
cli
mov
pop
jo
test
sbb
bound
nop
and
mov
mov
aas
add
movsb
add
xlat
jnp
push
lods
dec
mov
lret
popl
cmp
pusha
mov
cmpsb
cli
cltd
dec
cmp
movb
cmp
and
mov
adc
dec
cmp
push
popa
outsl
enter
or
fs
ljmp
jge
imul
push
bnd
clc
dec
inc
mov
insl
imul
ljmp
pop
nop
mov
out
jge
imul
pusha
cld
push
mov
idiv
pop
mov
or
pop
cmp
adc
xchg
push
dec
push
jb
movsb
and
scas
das
jns
flds
loop
sbb
pop
mov
sbb
loop
loope
int3
sub
pushf
mov
loop
sub
in
sub
sbb
dec
repnz
out
sub
fdivs
sarl
into
cmp
pop
shll
push
popa
fimull
sub
xor
jp
popa
push
pop
jmp
insl
fmul
nop
jb
js
cs
nop
cs
test
inc
in
adc
ljmp
add
add
mov
stos
pop
xchg
pop
jo
xor
cmp
add
das
push
sti
jle
insb
gs
js
sbb
xchg
push
lcall
adc
push
jbe
pop
push
pushf
cli
inc
jae
out
mov
adc
dec
push
stos
les
test
sbb
out
mov
in
std
in
pop
loopne
shll
mov
mov
ss
bound
ds
mov
jne
aas
xchg
dec
or
add
and
sbb
push
cwtl
jmp
add
adc
les
sbbb
mov
dec
mov
mov
fnstsw
jo
cltd
loop
cmp
out
dec
push
adc
push
test
inc
cmp
cmp
push
jmp
jns
push
adc
jmp
insl
dec
stos
pop
lret
dec
rcrl
adc
inc
mov
xlat
and
call
rcrb
sbb
pop
push
and
into
nop
ficoml
ja
mov
inc
jb
shrb
lea
enter
je
popf
cmp
push
add
std
mov
xchg
ja
push
inc
scas
pusha
les
push
adc
in
orb
je
divl
sbb
dec
and
insl
call
sub
inc
std
test
xor
push
add
add
test
shll
aam
push
scas
ja
sub
and
js
mov
adc
cmc
add
pop
sbb
push
notl
repz
mov
testl
mov
sub
imull
add
mov
test
dec
inc
and
or
out
inc
outsb
fcmovnu
mov
in
lcall
push
xchg
dec
mov
es
nop
sub
push
loope
dec
pop
xchg
insb
sub
jo
les
outsl
sub
push
xchg
test
lods
mov
sahf
xchg
sti
and
adcl
sub
into
mov
aam
scas
insl
fiaddl
sbb
leave
into
decl
xchg
mov
loopne
push
movsb
lods
popa
popf
lret
orl
mov
sti
mov
mov
test
adc
test
sub
inc
arpl
xlat
pusha
iret
dec
push
push
xchg
cmp
inc
into
ja
clc
pop
sahf
nop
pop
fisttpll
mov
cmp
shl
jbe,pn
popa
fprem1
dec
cmp
outsl
lahf
movl
push
push
dec
adc
mov
lods
sub
mov
mov
sbb
insl
mov
jle
das
faddl
fsubl
mov
cld
pushf
stos
inc
jo
pop
addb
sti
movsl
leave
sbb
int
jle
mov
and
stos
movb
subb
mov
xchg
stos
fsubr
jae
push
das
loope
xorl
adc
outsl
add
mov
push
dec
jno
dec
or
xchg
pop
jmp
ror
fst
push
cmc
aam
insb
lea
outsb
filds
fcoml
cli
adc
cmpsl
stos
push
shll
xchg
cmp
sub
mov
xor
dec
stc
push
addr16
cmp
xchg
fsts
ret
aad
cmpsl
xor
gs
mov
and
ljmp
mov
push
stc
cmp
sbb
out
sbb
imul
jno
add
dec
loopne
adc
pop
sbb
mov
ja
fsub
outsl
sbb
jecxz
mov
rcrb
dec
int3
xchg
repnz
icebp
mov
shl
cli
leave
jo
jp
cld
shl
fbstp
sub
dec
loopne
mov
xchg
or
sub
push
sbb
scas
push
icebp
test
setne
add
xchg
xor
int3
fld
sarb
push
mov
clc
pop
mov
add
xor
xchg
pop
lahf
repz
jl
pop
mov
ss
pop
lods
sbb
lret
hlt
or
inc
adc
fistps
or
xchg
pop
add
ja
in
mov
jne
xchg
jmp
push
xchg
jne
or
mov
aaa
sub
stc
bound
push
scas
rcrb
jmp
pop
mov
daa
lods
ljmp
cmp
xlat
es
mov
fsubs
ja
hlt
repnz
je
movsb
pop
mov
jnp
fstpl
call
lret
inc
dec
adc
jne
mov
mov
das
movsl
lret
dec
in
inc
aas
xchg
jmp
push
mov
fcomip
leave
push
test
pushl
ret
pop
xchg
pop
test
xchg
mov
xchg
jmp
mov
cmpsb
test
out
xchg
jne
jns
mov
orb
push
mov
std
pop
mov
sahf
js
bt
mov
pop
lods
mov
sbb
aad
loop
inc
sub
sbb
push
xchg
xor
call
je
xlat
notl
pop
xor
xchg
mov
int
pop
fsubr
pop
jae
mov
andl
imul
jbe
adc
dec
imulb
jb
and
mov
sub
sbb
into
xchg
int
xchg
call
mov
aaa
aas
and
sti
adc
xor
dec
in
xchg
jecxz
test
pop
push
ljmp
sub
sub
ret
lea
test
or
mov
add
loope
jge
sbb
xchg
or
mov
es
or
sub
jecxz
insl
cmp
enter
cmp
outsb
cmp
jne
scas
das
mov
sbb
mov
xlat
jle
int
shl
mov
shr
adc
cltd
sub
dec
push
rcrl
jle
xchg
in
or
jmp
push
les
cmp
inc
hlt
insb
jge
leave
adc
and
mov
aam
mov
push
and
les
push
orb
jmp
call
sbb
sub
ficoml
icebp
dec
xor
fnclex
and
xchg
fstps
adc
mov
dec
mov
push
mov
cmp
jne
loopne
mov
pop
xchg
pushf
js
push
loopne
xchg
mov
in
jo
push
mov
std
repz
jne
jl
leave
jne
stos
adc
sub
in
fisubs
xlat
fimuls
pop
pop
out
outsl
adc
test
mov
mov
inc
push
mov
xchg
jne
cwtl
xor
jnp
add
cmp
in
loope
push
loope
repz
arpl
push
xchg
push
in
dec
test
lods
xchg
mov
sahf
push
xor
sub
sbb
push
cli
mov
xor
sbb
mov
inc
out
mov
push
loopne
or
sbb
inc
mov
mov
pop
movsb
test
sbb
adc
xchg
push
loope
mov
ds
mov
sub
idivb
das
dec
movsl
add
ret
sbb
push
in
pop
jmp
add
cs
imul
mov
iret
xchg
in
and
and
inc
dec
pop
aaa
mov
lahf
mov
sbb
std
sarl
data16
lds
jne
in
loope
jnp
andb
inc
inc
popf
jecxz
pushf
mov
in
or
push
out
push
pop
and
pop
pop
outsb
stc
je
pop
or
fs
pop
in
cmp
dec
and
je
xchg
sbb
sbb
mov
lret
sub
std
in
or
push
rorb
int
lods
jbe
gs
je
int3
fcmovb
or
pop
call
aam
ret
ljmp
btc
add
mov
decl
aas
add
mov
xchg
push
cmp
je
je
cld
mov
mov
mov
xor
pop
pop
adc
fstpt
ficoms
or
sbb
jns
cmp
mov
mov
xchg
mov
adc
inc
pop
xchg
scas
adc
xor
es
dec
lret
in
rcrl
mov
mov
pusha
arpl
mov
and
pop
mov
pusha
cs
imull
mov
push
fs
enter
lcall
cmp
bound
je
xchg
jbe
sbb
or
push
xchg
leave
pop
js
mov
sub
mov
inc
add
inc
mov
paddb
movsl
mov
sub
pop
gs
gs
and
cmp
fsubs
cmpb
vsubpd
xlat
leave
popa
xchg
int3
inc
push
xor
js
fstp
std
push
inc
and
lahf
gs
pop
jns
jg
movl
sub
push
daa
test
add
xchg
scas
mov
sti
insl
and
mov
jne
sbb
lods
lret
enter
or
sub
enter
xor
mov
aad
or
bound
lret
add
inc
jl
pop
add
inc
push
lods
dec
cmp
test
mov
adc
fprem
cmp
jbe
out
and
xchg
xor
orl
dec
shlb
and
add
push
fisttpl
mov
shrl
shrb
sbb
lret
push
adc
sub
and
mov
jmp
insl
sti
push
mov
js
in
push
insl
fistpll
enter
xlat
outsl
out
mov
arpl
iret
fstpl
das
into
cltd
sub
sbbb
xor
idivb
fidivs
shlb
jl
shll
test
loopne
or
lods
mov
imul
sbb
bnd
das
dec
js
je
lahf
fidivrs
idivl
jae
test
mov
and
mov
es
in
idivl
pop
jmp
repz
or
jne
out
int
jge
and
bt
dec
pop
data16
jg
mov
ljmp
jge
xchg
add
lret
dec
or
mov
cmp
xor
cmp
divl
popa
and
imul
xchg
and
int
int
fsubs
icebp
xor
mov
je
dec
leave
test
and
and
out
scas
hlt
cmpsb
mov
loope
out
mov
mov
rol
pop
call
jae
xchg
pop
insl
inc
jno
add
pop
lahf
aas
rcrl
out
mov
jl
rol
test
sbb
nop
sbb
fstl
test
cwtl
aaa
dec
or
aas
aas
das
bound
push
fmull
loop
xor
aas
cs
cmp
push
cmp
mov
sahf
jle
in
pop
icebp
sahf
xchg
push
jl
dec
push
repnz
icebp
pushf
inc
flds
out
jbe
fisubl
sub
xchg
mov
jo
je
std
and
pop
loope
inc
insl
jp
cmp
dec
les
push
xor
lret
adc
into
shl
jg
mov
arpl
shlb
jl
lods
cs
sub
stos
rcll
mov
add
aaa
loope
daa
jg
rolb
shlb
push
and
cld
sahf
movl
sub
test
xchg
push
xchg
insb
xor
idivb
mov
arpl
sub
rcll
call
inc
xchg
loope
inc
push
scas
in
rolb
mov
sbbb
pop
popa
lcall
jle
push
call
pop
cwtl
cmp
or
cmp
fsubl
arpl
in
cwtl
pushf
sbb
arpl
test
out
add
gs
pop
stc
out
inc
jns
fsubs
sbb
push
mov
subb
cmpsb
and
mov
enter
xor
out
push
fidivrl
hlt
push
sbb
shll
dec
out
in
hlt
xchg
fistl
mov
rcl
pop
rcr
or
cli
cmpsl
pop
and
push
sub
inc
mov
cld
sbb
mov
aam
adc
or
stc
mov
fs
dec
add
std
lods
jmp
inc
in
mov
into
adc
sbb
jge
cmpb
andb
addl
jae
rep
sahf
sub
and
push
fadds
mov
cltd
dec
and
in
call
dec
inc
jno
loopne
aam
lret
pop
frstor
fs
mov
ja
lods
mov
mov
lcall
mov
mov
inc
add
cmc
out
pop
out
xor
rorb
out
inc
adc
pop
and
sahf
mov
jg
scas
les
jns
adc
aad
ss
xchg
inc
addb
sbb
aad
inc
jg
mov
in
jmp
inc
fadd
or
add
push
ds
cmp
mov
inc
sub
xor
fstpl
and
mov
iret
fiadds
sahf
popa
pop
or
sub
jb
sub
fsubrs
fmuls
mov
insl
das
push
or
jne
mov
xchg
into
daa
ss
fs
jbe
inc
mov
repz
cmp
hlt
fisubrl
and
mov
nop
mov
lahf
dec
jnp
cmpsb
mov
push
push
xor
cmc
dec
stos
outsl
dec
xchg
in
adc
inc
jns
fcoms
ret
and
das
lds
mov
mov
nop
rorb
aaa
ret
cld
mov
mov
in
inc
sbbb
push
lods
sti
inc
xorl
mov
aad
xchg
imul
lahf
subb
or
pop
std
test
inc
out
scas
xlat
std
fst
lea
xor
push
enter
xor
hlt
mov
movsl
xor
sub
push
jl
insb
push
lds
rcll
fmulp
daa
fiaddl
call
insb
mov
enter
ljmp
rcrb
arpl
arpl
or
js
jne
push
rcrb
hlt
dec
or
push
jb
cmp
stos
sbb
mov
mov
das
lcall
andb
lret
test
test
mov
and
ja
xchg
push
inc
arpl
mov
stos
sub
or
pop
xor
sarl
adc
xchg
jbe
les
cld
js
in
add
sbb
xor
mov
dec
mov
stos
adc
and
jl
jae
cs
shll
push
add
popf
push
cmp
ss
mov
mov
mov
mov
pop
les
push
xor
pop
daa
xchg
or
pop
cmc
mov
aad
cmp
dec
xchg
pop
mov
jg
test
or
pop
leave
and
jae
cmpsb
add
loop
xor
and
adc
popa
xchg
addr16
inc
faddl
imul
mov
push
mov
push
in
and
mov
xchg
dec
pop
sar
mov
int
cmp
mov
add
cmpsl
outsl
push
popa
stos
bound
aaa
popa
dec
mov
leave
clc
or
push
dec
dec
dec
dec
pusha
iret
xchg
sub
loopne
dec
push
lcall
sub
jmp
out
bound
bound
inc
loop
cmc
repz
pop
ja
lahf
adc
cmp
or
aaa
xchg
sti
push
rcrb
fmuls
out
and
jne
dec
sub
sub
sub
in
pop
ds
bound
rol
jne
mov
aad
roll
jle
xor
pop
shlb
lods
sbb
inc
dec
pop
sbb
dec
xchg
in
ss
outsl
pop
sub
mov
inc
jmp
insl
inc
aam
stc
jl
push
call
jl
cmpsb
sbb
sar
push
pop
adc
mov
loop
stos
dec
mov
dec
and
addr16
scas
shrb
mov
inc
addr16
icebp
sti
inc
push
repz
outsb
mov
mull
stos
or
cmp
xchg
and
insb
jb
in
leave
add
push
and
lcall
xor
stos
jo
idivb
fnstsw
adc
pop
sbb
add
sbb
jp
mov
fdivrs
jmp
mov
cmp
dec
mov
call
pushf
in
lds
jae
in
xlat
mov
je
fstpt
addr16
cmp
lds
sbbl
mov
mov
xor
mov
mov
es
dec
cmp
jbe
pop
sub
cwtl
inc
xor
adc
daa
sub
fwait
into
or
stos
lea
inc
popa
pop
jno
out
xor
xor
loope
ljmp
jmp
push
es
insl
jb
mov
cmp
mov
xchg
pop
adcl
movsl
sbb
jno
and
jecxz
aas
aas
mov
lds
jmp
in
cwtl
jnp
lock
lock
mov
adc
jl
pop
ret
jb
stc
pop
xor
test
push
jnp
or
push
inc
adc
dec
mov
lock
adc
mov
movsb
outsl
incb
sbb
pushf
sbb
sbb
mov
pop
or
mov
jb
fs
adc
xchg
cmp
sub
insb
out
cmpsb
nop
pop
jl
cli
add
ret
sbb
pop
inc
shrb
xchg
jno
int3
mov
jecxz
jno
sahf
xor
in
mov
jae
data16
dec
push
sbb
jbe
leave
insb
pop
jne
pushf
les
lcall
shrl
rcrb
and
mov
mov
mov
and
xor
movsb
fs
in
scas
mov
xor
cmp
rol
loop
idivb
cmp
std
lret
or
xchg
in
icebp
in
icebp
push
jno
push
mov
notl
mov
call
push
fidivl
mov
xor
xchg
cmp
dec
les
sahf
fidivrl
jl
ja
or
div
insb
xlat
adc
into
testl
sub
mov
cmpsl
shrl
dec
xchg
pop
pop
in
adc
icebp
fildl
xlat
xchg
iret
xchg
sub
out
inc
out
les
push
xchg
mov
lret
fisttpl
xchg
jae
add
sarl
ja
out
adc
imul
fidivrs
add
iret
stos
bound
shlb
cli
loop
clc
push
sbb
dec
mov
repz
out
aad
popl
out
lret
push
adc
sahf
cmp
jmp
imul
or
mov
mov
jmp
arpl
mov
ficoml
lds
adc
imul
lahf
mov
and
jmp
mov
jbe
mov
mov
imul
bound
call
icebp
pop
pop
sbb
ljmp
dec
insl
jp
cs
jmp
shl
daa
icebp
ljmp
dec
lcall
test
shlb
push
sbb
cmp
pop
mov
das
cmp
fs
daa
sub
out
cld
jnp
rorb
out
xchg
cmpsb
push
push
push
daa
rcll
rcl
add
fimull
loopne
dec
daa
lahf
lret
mov
loop,pn
test
and
mov
icebp
adc
push
test
jbe
mov
adc
mov
sbb
jnp
insl
mov
pop
dec
int3
out
cmp
mov
loop
movsb
mov
lret
lret
pop
mov
mov
jnp
clc
push
call
cmpsl
neg
mov
int3
xor
cmp
iret
enter
push
pop
adc
add
repnz
xchg
adc
sub
push
mov
push
jg
sbb
adc
lock
stos
push
xor
jmp
bswap
sar
scas
call
fwait
rolb
xor
push
mov
ret
fwait
lods
inc
stos
sbb
xlat
les
scas
pusha
mov
bound
imul
or
dec
leave
xchg
rcrl
fidivl
or
aaa
jge
xchg
jbe
ret
jns
icebp
cld
movsb
adc
sahf
jb
mov
push
adc
xor
loop
stc
inc
xor
cmp
or
shlb
push
cmp
lret
test
push
cmp
sbb
repnz
addr16
lret
iret
xchg
push
jb
inc
or
adcb
sub
hlt
push
pop
push
xchg
xchg
and
mov
hlt
cli
rcr
ja
mov
or
add
mov
dec
hlt
sub
mov
jle
lods
inc
push
ja
jae
mov
ret
jmp
enter
fsub
inc
adc
pop
icebp
ds
loop
add
pop
or
or
mov
mov
ret
andb
sub
or
xchg
in
in
xchg
xor
xor
test
xchg
push
mov
adcl
fsubrl
or
stos
cmp
sub
stos
stos
movsb
stc
sub
ds
add
mov
rorb
les
mov
je
jecxz
mov
jnp
call
ja
mov
pop
and
adc
push
sahf
out
add
ss
and
lcall
jp
and
out
jle
shll
call
inc
xor
sbb
jbe,pt
jge
add
push
fadds
jno
or
lret
jge
add
xlat
sub
pop
mov
push
add
xchg
mov
add
mov
imul
cmp
or
out
mov
pop
leave
sub
popa
sbb
inc
lock
sbb
bound
push
lock
inc
rcrl
in
loop
dec
add
fcmovbe
popa
test
push
outsb
fisubl
inc
testb
add
stos
sbb
dec
jp
cmpsb
fistpl
sbb
arpl
and
cld
popf
in
pop
call
jo
fstl
dec
fstl
pop
jbe
jno
fldt
ret
push
je
sbb
sbb
xor
pop
push
lods
repz
mov
sbb
dec
aas
and
xor
push
filds
jecxz
mov
shlb
bnd
cmp
add
sub
lods
pushf
mov
js
xchg
dec
call
xlat
dec
rol
lretw
xorl
dec
adc
loope
mov
ja
and
mov
jge
cmp
insb
sub
loope
sub
jbe
jp
mov
or
data16
cmp
sarb
dec
fisttps
lods
mov
xchg
add
adc
test
xchg
cmp
insl
out
cmpsb
mov
das
inc
add
inc
jbe
pop
shll
test
adc
pmaxub
lahf
call
adc
dec
lret
packssdw
cs
cmp
inc
mov
cmp
push
jno
ficomps
jo
divl
gs
cmp
jo
lcall
push
jg
xor
push
js
gs
dec
pop
push
test
dec
sti
or
pop
cmc
xor
xchg
jbe
ja
sbb
add
loope
cmp
test
sub
xor
mov
cmp
mov
cwtl
lret
mov
push
inc
stc
lea
cltd
ret
adc
dec
notb
cmpsl
imul
dec
rclb
pop
push
loopne
wrmsr
add
cs
popf
emms
iret
movsb
stc
into
out
mov
jg
fildl
mov
push
sbb
sbb
popa
popa
push
cli
test
xor
bound
int
int
rorb
push
iret
popa
mov
outsb
xchg
mov
jne
int3
in
ret
push
and
icebp
lret
mov
sub
outsb
add
test
mov
dec
and
into
xchg
pop
inc
outsl
dec
fwait
xchg
rcrl
rcll
cmp
and
dec
lods
jo
xlat
inc
pop
insb
inc
les
mov
movsl
in
jl
orb
cmc
mov
xchg
cmp
faddl
or
ljmp
adc
push
out
mov
and
sbb
dec
lahf
in
insl
sub
cmp
sbb
mov
inc
jbe
mov
push
cmpsb
sbb
mov
inc
out
mov
decb
inc
insb
repz
shlb
xchg
mov
mov
out
jle
add
inc
adc
cmc
rorb
dec
push
mov
scas
or
outsb
in
andb
out
push
lock
outsl
leave
jno
test
sbb
push
xchg
add
and
call
into
mov
sub
jo
orl
lret
sti
test
sarb
pop
cltd
lock
shll
push
push
cmp
inc
nop
cltd
inc
jae
inc
sbb
std
jg
xchg
stos
lods
jge
mov
or
mov
scas
dec
xchg
in
dec
insl
lods
mov
das
hlt
lahf
mov
lds
addl
enter
mov
ficompl
jge
and
adc
pop
stc
dec
or
mov
xchg
xor
adc
mov
loop
je
jmp
pop
test
pop
fnstcw
jle
loopne
data16
xlat
loope
push
sub
into
and
add
or
out
push
jmp
insl
rolb
dec
jl
push
repnz
iret
lret
sbb
and
sahf
sub
mov
pop
xchg
xchg
outsl
dec
filds
lcall
arpl
int
adc
xchg
jns
xor
xor
daa
push
jb
jns
xchg
ja
fdivl
pop
adc
and
pushf
popa
push
push
je
loop
pop
popa
and
inc
adc
lret
inc
mov
xchg
notl
roll
fwait
xchg
in
push
adc
mov
test
sub
nop
out
jle
ret
jno
inc
or
xor
scas
ret
scas
insl
stos
nop
hlt
jge
std
shl
popf
lods
fwait
push
rcrb
shl
mov
jl
pop
sbb
push
mov
std
sarl
decb
lret
dec
pusha
push
stc
mov
adc
jmp
in
sahf
int3
mov
cmpsb
and
lret
ds
cmpsb
adc
aas
mov
jecxz
mov
mov
sbb
cld
stos
dec
mov
mov
nop
xor
xlat
xchg
imul
bound
in
out
inc
xor
enter
inc
in
jmp
repnz
or
jae
pop
inc
mov
arpl
das
fildl
fadd
mov
adcl
cltd
push
int3
or
cltd
push
adc
pop
shr
xlat
mov
ss
lods
adc
adc
xor
popf
cmpsb
hlt
cmpsl
mov
test
sbb
repnz
cmp
sub
shrb
ret
or
xor
jb
insb
mov
pusha
cmpl
js
add
push
data16
cmp
add
xchg
nop
adc
insl
js
insl
sbb
mov
dec
cmp
out
xor
pop
cmp
out
js
pop
leave
jb
ss
mov
rorb
jo
dec
sbb
rorl
out
fwait
pop
mov
mov
inc
xor
icebp
mov
push
jecxz
nop
and
mov
adc
pop
dec
mov
xor
loop
pushf
xchg
inc
fdivrl
out
pop
sub
cwtl
jge
mov
mov
add
sti
ret
ret
mov
mov
jmp
inc
add
xchg
outsb
xchg
mov
push
dec
and
dec
hlt
in
fcmovb
mov
jg
iret
inc
push
dec
jl
mov
nop
and
jo
cwtl
adc
xchg
fprem
push
or
mov
cli
mov
sbb
cmpb
scas
in
ljmp
in
push
inc
inc
xor
xchg
mov
fstl
push
xchg
aam
cmp
in
and
ss
adc
in
mov
out
pop
daa
addr16
jmp
jae
gs
pop
or
imul
nop
aaa
dec
add
push
ja
into
shl
push
fst
inc
fcmovnb
hlt
fisubs
jne
cmp
add
pop
cmpsl
inc
inc
push
push
cmp
adc
sub
imul
xor
ljmp
mov
fdivrl
inc
popf
mov
or
stc
jge
cli
subb
jae
out
mov
push
fcmove
test
dec
fidivrs
dec
sub
ljmp
push
mov
les
test
stos
xlat
mov
das
sti
mov
shr
inc
lret
int3
rolb
aaa
dec
out
xor
mov
or
sbb
fisubl
mov
add
sub
push
xchg
cmp
addr16
adc
lods
inc
mov
add
inc
hlt
or
addr16
push
shlb
repz
es
cmp
aas
jp
push
cmc
push
push
fwait
push
in
adcb
pop
dec
decb
cmc
idivl
out
sub
test
sub
or
mov
shrl
lods
sbb
stc
push
cmp
cmpsb
cwtl
mov
jg
jbe
adc
stos
xor
lds
or
pusha
aad
int3
sbbb
jnp
sub
mov
xchg
loope
leave
adc
add
clc
adc
je
cld
mov
adc
call
xor
sub
leave
lods
fucomp
mov
mov
outsl
rclb
cltd
or
mov
xchg
ret
pop
sar
mov
sub
sbb
cmpsl
fidivl
mov
outsb
adc
push
jmp
adc
imul
or
push
les
inc
fldz
jb
out
ret
push
adc
push
and
movhpd
pop
mov
mov
fiadds
jecxz
xor
imul
enter
inc
sti
insb
inc
cli
push
and
inc
add
mov
mov
mov
pop
and
push
leave
cmp
dec
xchg
and
andb
inc
or
xor
pop
iret
dec
jb
cwtl
adc
dec
and
lret
xchg
sub
sub
std
scas
arpl
pop
mov
mov
mov
leave
push
test
test
sbb
xchg
add
les
sub
std
sub
loopne
ret
sub
mov
sub
out
push
popa
insb
lret
sahf
mov
xor
sbb
popa
loop
mov
adc
mov
pusha
scas
mov
outsl
hlt
in
pslld
lock
ds
jg
and
push
adc
push
push
and
je
sarl
out
std
adc
fmul
inc
cli
mov
xor
jp
or
cs
sub
jo
lds
ja
mov
pop
insl
test
fs
mov
or
mov
imul
push
movsl
ffree
ja
cmp
xor
xchg
jae
imul
aaa
mov
dec
mov
fcompl
insb
dec
test
adc
mov
enter
test
daa
lahf
jl
data16
lret
insb
cld
and
push
xchg
imulb
movl
pusha
cvtps2pi
test
jno
je
xchg
addr16
rcl
xchg
out
push
insl
jnp
xchg
cs
push
or
test
dec
jmp
and
sub
cmpsl
jp
adc
dec
out
sub
xlat
adc
fisttps
add
pop
imul
xchg
into
mov
loope
pop
aaa
vorps
push
test
rcll
mov
xchg
add
pushf
dec
push
hlt
or
lds
arpl
push
scas
jne
sbb
imul
mov
jnp
mov
push
mov
mov
ficompl
pop
dec
pop
sub
mov
rclb
adc
jb
pop
and
out
nop
jns
dec
pop
sbb
push
mov
in
mov
cmc
cmp
mov
jl
jge
icebp
xchg
insb
jbe
inc
or
push
fnsave
push
jg
and
cld
ds
jp
push
cmp
mov
sti
ret
loop
fs
popf
movsl
xchg
xchg
sbb
mov
push
mov
cmp
dec
adc
add
jecxz
psrlw
push
lods
mov
jmp
hlt
add
hlt
sbb
sar
xor
adc
or
push
mov
inc
sub
shll
hlt
cltd
ja
or
addr16
int
xorl
sub
test
cwtl
hlt
mov
imul
jne
fstpt
std
sub
dec
and
lret
mov
cmp
iret
cmp
mov
jns
repnz
push
sub
lock
jle
jo
in
sahf
inc
dec
mov
rclb
je
dec
out
ss
xorps
xchg
out
daa
xchg
insl
fwait
mov
cmpb
and
mov
xor
mov
or
sub
sub
cmpsb
and
mov
fs
or
mov
mov
cmp
adc
dec
ds
adcl
inc
push
inc
fcmovnbe
test
inc
movsl
jno
mov
insl
jp
add
enter
or
xchg
jl
lock
ja
arpl
pop
mov
movsb
sbbl
aaa
in
sar
insb
xchg
shrl
cwtl
cmp
adc
ja
push
cmc
int
jno
les
int3
lods
mov
stos
mov
or
lret
pop
rcrb
pop
pop
out
fimull
xor
out
xor
sub
cmc
loope
int3
adcl
xchg
popf
movsb
xchg
cmc
and
adc
loopne
xchg
fwait
add
push
int
shrb
jg
mov
es
cmp
push
xor
dec
loope
insl
test
xchg
sub
mov
lcall
cli
ret
test
movsb
aad
ret
sub
jns
cmpsl
ss
outsl
cmp
push
pop
mov
icebp
inc
jnp
mov
repnz
mov
add
popl
dec
lea
mull
and
sub
adc
psllw
xorl
inc
iret
aaa
xor
cld
out
mov
add
push
fidivl
mov
fs
or
pop
mov
push
mov
sub
mov
test
pop
jle
sbb
mov
xor
cmp
movsl
cmp
arpl
out
ret
jmp
mov
bound
pop
mov
mov
add
cmp
mov
js
pop
xor
movsb
jo
mov
cmp
int3
xor
roll
sub
push
daa
add
xchg
js
adc
lock
or
sbb
test
in
test
cmc
mov
iret
aam
fnstsw
out
cmp
ja
int
cmp
outsb
push
jge
jp
out
and
push
mov
adc
rcr
rorl
jnp
bound
pushl
and
and
pop
je
test
cmp
subl
and
mov
push
bnd
cmpsl
xlat
nop
push
push
jno
pop
adc
jns
pop
xchg
data16
xor
das
ljmp
testb
xchg
sti
insb
in
push
mov
jp
addr16
imul
xchg
fstpl
ror
movsb
add
insb
mov
dec
sar
in
mov
in
jge
jl
xchg
sbb
lcall
test
or
cmp
call
sbbb
mov
adc
hlt
fdiv
icebp
xor
int3
shlb
movsb
sbb
mov
pusha
cmp
js
ds
sub
shlb
pop
sbb
pop
mov
popf
xor
rorl
xchg
ds
adc
adc
jae
jg
jg
pop
out
adc
stos
sub
stc
adc
das
imul
mov
incl
xchg
data16
add
into
mov
clc
stos
sub
icebp
mov
mov
mov
cmc
lock
sub
int3
xchg
test
inc
jne
adc
xchg
sub
setb
jns
xlat
mov
mov
in
aad
outsb
pop
mov
adc
test
mov
jg
mov
insl
shlb
inc
inc
jge
xlat
mov
ja
jle
mov
mov
push
lods
and
das
sub
mov
adc
mov
dec
hlt
lds
push
xchg
lret
gs
fmuls
daa
je
dec
call
mov
loopne
ds
cmp
leave
adc
leave
push
ds
push
in
sbb
mov
lea
std
mov
fildl
xchg
push
subl
push
push
mov
cmp
or
nop
fcmovnbe
idivl
dec
aad
push
or
stc
pop
push
sbb
rclb
mov
popa
dec
sub
dec
nop
cmpsb
add
sub
dec
push
sub
ljmp
mov
rcrl
jae
and
nop
std
ss
ljmp
mov
in
cs
jg
sub
adc
enter
fcoms
out
lods
pop
addr16
repnz
rcrl
sbb
pushf
xor
xor
mov
xchg
or
pop
mov
cld
cwtl
fisubl
sub
push
lret
push
mov
icebp
rcll
or
arpl
aaa
imul
out
mov
adc
xchg
outsl
jb
dec
mov
outsb
jecxz
pusha
ret
xchg
test
xor
push
inc
test
inc
shrl
mov
scas
sub
dec
jnp
jb
pop
cmp
pop
fldl2e
sbb
int3
inc
lods
pushf
cs
jl
inc
lret
xchg
mov
pop
loopne
lds
or
dec
lahf
pop
hlt
jbe
ljmp
adc
pop
jns
hlt
push
out
inc
sbb
ja
in
fcmovnbe
dec
aad
mov
repnz
mov
xorb
jl
push
ret
push
cwtl
cmc
adc
lahf
xchg
dec
loop
loope
sbb
sbb
arpl
js
test
inc
mov
and
adc
movsb
in
and
adc
in
aas
in
and
notb
movsb
push
jnp
out
cli
cli
pop
negb
xchg
push
nop
fnstsw
outsl
mov
mov
aaa
mov
mov
lods
or
fwait
movsb
test
popa
hlt
pop
sbb
xchg
sub
adc
push
int3
rolb
sbb
jmp
push
clc
movl
shlb
stos
ret
xchg
xchg
push
lds
aad
in
dec
sbb
xor
push
lds
nop
call
cmp
adc
int
sub
out
aad
jl
outsl
jns
inc
sub
inc
jl
shl
test
lret
dec
leave
cmp
mov
inc
sub
adc
pop
in
mov
sarb
cmc
or
movsl
icebp
pop
mov
pop
mov
xor
pusha
andb
inc
outsb
mov
jb
pop
add
inc
aas
jbe
in
mov
out
and
xchg
sub
or
jle
adc
cmc
push
ret
test
mov
mov
mov
lods
add
dec
sbb
fwait
xor
fldenv
push
test
dec
inc
mov
push
sarl
pusha
and
neg
sbbb
cli
xor
fmull
add
sti
push
fwait
insl
scas
daa
pop
rolb
sub
inc
js
push
outsl
es
leave
jno
insb
fisttpll
adc
lock
cmp
push
push
lds
mov
cli
rcrl
insl
and
fisubrs
dec
mov
fsubr
inc
or
std
pop
sub
push
xor
std
push
stos
fnstcw
dec
inc
mov
ja
loop
mov
push
shr
jmp
rcl
icebp
imul
scas
or
xchg
in
je
sti
dec
std
cli
jns
push
test
mov
and
inc
pslld
mulb
ret
lods
adcb
in
fdivr
cld
fsubs
sahf
lea
jno
div
jno
sub
mov
push
das
bound
mov
rcr
mov
mov
add
mov
or
adc
repz
fisubrs
mov
cmp
scas
lods
or
inc
xor
pop
out
jb
mov
stos
test
test
xor
sub
lds
fists
mov
jnp
jb
sti
pop
dec
cmp
mov
xchg
nop
out
lahf
inc
pop
push
sub
notb
cmpsw
gs
push
scas
loope
mov
push
aaa
int
stc
mov
or
push
cltd
adc
inc
xchg
dec
repz
jl
mov
inc
add
shll
sbb
jg
into
out
fadds
movsl
sbb
sub
std
dec
mov
mov
xchg
movsb
jns
imul
cmp
ljmp
and
xchg
sbb
or
dec
inc
dec
pop
xchg
mov
xor
inc
leave
or
jns
pusha
sub
dec
in
adc
xor
jno
ljmp
dec
push
and
xor
push
pop
mov
push
lcall
fsub
mov
in
movlps
fdivrl
gs
xor
fs
xor
cld
daa
dec
sub
notb
mov
pop
das
int3
or
push
into
test
pop
bsr
ror
int
and
fisubs
sti
loope
cld
fdivl
cmpl
js
pusha
mov
imul
sbb
jp
sti
movl
mov
fsubs
pushf
mov
jmp
cmpsb
xchg
icebp
or
xor
loope
jnp
pop
sub
ljmp
adc
dec
xor
xor
push
fcompl
cmpsl
pop
pop
sub
clc
jle
inc
out
inc
mov
insl
aad
lret
fsubrl
mov
pop
dec
out
cwtl
lock
mov
mov
and
adc
inc
jne
dec
xor
or
or
inc
out
or
lock
popa
mov
fdivp
sbb
xchg
dec
mov
in
pop
sub
mull
ret
icebp
xchg
xor
mov
mov
seta
out
push
lds
ret
in
ret
or
fstp
dec
lret
cld
or
inc
fsubrp
fisubrl
aad
adc
lods
xchg
cwtl
pop
orb
loop
dec
cmp
int
mov
inc
std
and
add
scas
push
ret
in
stc
jp
fisubrs
pop
jmp
outsb
cltd
add
xor
cmp
lcall
push
int
jg
lods
and
mov
jns
jp
lea
add
and
out
pushf
addr16
out
pop
lret
int3
fstps
ds
sub
xchg
mov
jle
mov
loope
addr16
addr16
and
xchg
push
pop
int
xchg
xrelease
mov
mov
outsl
mov
xchg
cmp
cltd
add
out
fcoml
or
mov
jno
cmp
add
aad
aam
in
sbb
std
lea
add
aad
stos
cwtl
inc
mov
sub
mov
arpl
dec
std
mov
jecxz
push
adc
aas
push
rcl
push
call
sahf
out
loopne
inc
mov
subl
inc
pop
sub
jecxz
mov
adc
test
in
adc
stos
int3
cmpsl
and
loopne
jbe
pop
sarl
aam
pop
mov
pop
lea
xlat
pop
cld
push
mov
icebp
getsec
push
out
sbbl
rcl
pop
arpl
scas
ss
jb
jnp
jb
movsb
popa
movsb
in
decb
push
xlat
xchg
sub
in
addl
sbb
subb
mov
xor
push
js
int3
xor
daa
repnz
scas
xor
loop
les
orl
jl
call
ljmp
out
cld
lods
push
and
jmp
addb
fistl
push
sub
aam
int
ljmp
push
pushf
test
and
aaa
push
in
sbb
sub
adc
dec
arpl
xchg
imul
cmc
xchg
inc
mov
jne
xchg
aad
pusha
adc
inc
or
cmpsb
jmp
and
pop
outsl
mov
lds
add
pop
dec
inc
pop
ljmp
hlt
or
testb
lds
iret
andl
es
mov
addr16
xchg
mov
mov
pop
aaa
test
popf
mov
bound
adc
cmp
xor
dec
adc
adc
stos
mov
add
pop
xchg
mov
jp
dec
or
xchg
lods
xor
mov
cmp
ljmp
jns
cltd
pop
mov
dec
imul
fucomi
js
stos
jg
adc
incb
jecxz
or
pop
shll
cld
fisubrs
jbe
arpl
xor
fisubl
notb
jns
sub
cmp
lds
outsl
out
call
lods
sub
xorl
xor
jnp
dec
dec
or
sbb
gs
aaa
xor
and
push
cmpsl
mov
add
mov
rcl
cli
add
xchg
int
fs
in
lcall
mov
or
mov
add
or
cltd
lds
mov
lods
adc
leave
sti
mov
jb
and
mov
push
xchg
dec
push
out
pop
and
fs
push
dec
mov
mov
or
ljmp
cltd
dec
push
sub
stc
ret
lds
pop
sub
ja
sub
movsl
dec
out
jle
cmp
sbb
inc
jo
aas
in
loope,pt
add
jl
mov
fldlg2
shrb
icebp
into
std
arpl
sahf
movsb
xor
fmull
cwtl
lods
sub
sub
outsb
cli
mov
sarb
inc
push
jmp
cmp
sbb
ret
outsl
jb
sub
dec
js
cli
add
clc
dec
mov
test
inc
ret
xor
xchg
out
ss
subl
cmpsl
push
and
lds
jg
je
mov
test
repnz
cmovle
popf
lcall
in
gs
cmpsb
fcoml
ljmp
arpl
xor
mov
scas
inc
jg
mov
js
jp
sbb
fcmove
aas
lret
cld
outsl
lods
ljmp
mov
xchg
dec
movsb
and
cmp
adc
mov
and
jo
add
notl
mov
jl
dec
roll
test
lods
dec
push
inc
rorb
adc
push
cltd
sbb
sub
sbb
jl
push
push
add
rcrl
popa
xchg
jp
sarl
pushf
jnp
inc
jb
cmp
adc
inc
lret
push
push
adc
cli
mov
adc
pop
shl
xchg
dec
pop
movsb
out
dec
cmp
push
push
xchg
jno
push
frstor
ficoml
cltd
adc
mov
pusha
sub
mov
ffree
int
jmp
mov
jo
test
mov
jmp
lret
inc
lods
jp
test
out
sbb
sub
loope
push
mov
cs
adc
jae
xchg
jo
push
cli
sbb
repnz
jl
lret
mov
push
xchg
hlt
scas
push
mov
sbb
hlt
inc
cmp
andb
repz
sti
adc
pop
cmp
mov
es
shrl
sti
test
insl
inc
xor
xchg
jne
and
gs
cmp
popf
mov
or
mov
push
pop
jno
lea
aad
mov
or
cwtl
pop
cwtl
fidivrs
in
mov
gs
ds
cmpsl
call
sarl
push
stos
sbb
scas
mov
xchg
inc
jbe
push
dec
loope
push
jns
jno
sub
xor
or
outsl
xchg
jle
xchg
xchg
out
out
enter
mov
out
and
dec
pop
dec
out
lock
int3
stos
lods
add
fdivrl
fwait
push
mov
nop
shll
mov
mov
xor
jge
inc
mov
fwait
pop
inc
push
pop
sub
mov
test
and
iret
dec
adc
cmpb
in
sbb
or
sub
scas
mov
cmp
add
xor
xor
mov
popf
or
adc
jecxz
pop
loopne
add
xor
es
add
add
xor
mov
xchg
inc
mov
mov
xchg
test
jnp
sbb
aaa
adc
jb
push
mov
movsb
fldcw
ftst
and
ja
shl
pop
adc
jns
pop
jae
sub
pusha
cli
add
xlat
jae
dec
enter
into
into
and
lds
xchg
std
dec
xchg
jbe
mov
or
arpl
movb
inc
jg
les
xchg
gs
es
sahf
sahf
pop
stos
fdivr
dec
or
or
lds
das
inc
in
pop
cmpsl
icebp
jle
mov
popa
dec
pop
mov
inc
or
ror
test
inc
mov
cmp
mov
xor
gs
add
nop
aas
pop
mov
or
mov
sub
sub
mov
dec
mov
push
in
jp
mov
lock
or
cmpsb
sahf
jmp
sub
int
imul
xchg
mov
sub
pop
out
inc
test
sarl
pop
aaa
inc
lods
test
jnp
mov
lcall
lahf
mov
jge
inc
movsl
cmc
sahf
mov
js
push
xchg
cli
cmp
pop
push
popf
fisubl
stos
mov
sar
cld
add
movsl
adc
mov
lods
push
clc
mov
xchg
js
mov
sub
cmc
ret
inc
repnz
rcrl
movsb
pop
xchg
mov
cmp
cmp
pop
sub
mov
xor
cmp
inc
or
mov
dec
popf
sbb
dec
inc
dec
popw
decl
cld
mov
add
adc
insb
push
mov
jecxz
pop
xchg
cld
cmpl
jecxz
xor
mov
and
ret
xchg
dec
push
test
sbb
cmp
mov
add
inc
add
out
dec
cmp
je
pop
cmc
inc
aas
xor
push
aam
inc
jae
cld
out
and
push
and
pop
sub
leave
mov
pop
insl
icebp
sarl
int3
stos
arpl
ds
push
mov
fsubrs
add
in
mov
cltd
call
shll
movb
hlt
lds
insl
test
pop
out
shll
stc
jae
inc
xor
fwait
pop
enter
into
out
fldl
push
xchg
jnp
popa
xchg
inc
ficompl
mov
push
flds
xchg
lea
icebp
addb
gs
out
inc
rcll
xchg
lret
out
ret
je
popf
xchg
xchg
adc
sub
lcall
and
das
imul
lods
xor
cmp
cmpsb
lods
pop
les
pop
ret
xor
push
rolb
xchg
icebp
cltd
xchg
mov
mov
not
or
push
add
mov
andl
test
test
dec
fdiv
inc
sti
stc
insb
scas
jge
sbb
stos
sbb
popa
adc
int3
mov
push
mov
cmpsb
mov
cmpb
jp
jb
sub
cmp
mov
gs
sbb
fbstp
add
pop
fwait
jno
mov
les
clc
pop
pop
mov
int3
push
fildl
pop
cmp
movsb
jmp
pop
addr16
dec
repz
push
mov
xlat
jb
push
ret
mov
repz
jo
sbb
ja
jnp
mov
push
or
cld
stos
mov
cmpsb
movsb
jle
fisttpl
arpl
xor
sti
and
add
sbb
mov
enter
pop
or
mov
dec
adc
jo
sub
mov
scas
subb
adc
leave
and
je
dec
in
mov
cmpsl
dec
in
ret
lret
mov
dec
bound
mov
pcmpeqd
mov
xchg
sbb
xchg
push
mov
or
or
data16
dec
xchg
push
mov
dec
push
mov
xlat
mov
clc
dec
mov
into
sub
cli
in
hlt
sub
in
shlb
sbb
lcall
push
faddl
xchg
dec
daa
pop
aam
cmc
aas
mov
ret
dec
out
inc
gs
cltd
dec
pop
enter
dec
push
pop
jo
in
daa
rcrb
sbb
adc
cmp
xchg
cmpsb
pop
lock
mov
and
jmp
jecxz
jbe
scas
cltd
push
sti
jbe
dec
and
cmp
push
sbb
jno
mov
adc
sub
enter
loope
or
insb
mov
mov
adcl
pop
cmpsb
pop
add
jo
in
mov
dec
push
inc
jmp
fwait
and
adc
mov
ret
leave
cmp
mov
push
fldl
mov
out
movb
clc
popa
movlps
pusha
stos
sbbl
mov
add
inc
sub
pop
and
cli
xchg
mov
mov
inc
sub
stc
test
cmp
int3
daa
xchg
add
scas
lahf
sbb
cld
push
xchg
xor
xchg
inc
sbb
add
mov
mov
out
inc
and
daa
jp
cmpsl
push
jle
add
cmp
dec
inc
and
pop
mov
out
jae
rolb
inc
jnp
mov
jnp
push
xor
pusha
dec
mov
xchg
push
divl
xchg
enter
movsb
xchg
into
mov
add
iret
adcb
in
test
pop
repnz
sub
and
cmp
js
inc
scas
jb
dec
outsb
mov
dec
mov
push
pusha
or
cmp
push
jb
xor
mov
insb
xchg
pop
adc
pop
or
xchg
cmpsb
xchg
cld
jo
pop
enter
lods
xor
sbb
cmc
mov
jecxz
adc
pusha
int
pop
pop
insl
sub
mov
push
sub
in
jecxz
aad
fwait
iret
push
xchg
mov
push
cmpsb
dec
adc
mov
add
rclb
xor
mov
inc
lret
mov
inc
jmp
cltd
pop
ja
mov
cltd
adc
fwait
out
pop
cmp
jle
lods
sub
and
push
pop
jge
mov
pop
nop
xor
cmp
adcl
sub
xlat
mov
cmp
dec
xor
lds
fs
mov
movsb
cmp
ficompl
loope
mov
mov
push
xor
dec
stos
dec
mov
inc
mov
sahf
cwtl
jbe
lret
iret
or
pop
in
aam
adc
mov
mov
cmp
outsb
push
daa
call
xchg
cmp
mov
lock
dec
stc
out
mov
pop
inc
inc
mov
stos
leave
adc
fxtract
jp
pop
jge
pop
jl,pn
inc
and
aam
cwtl
jecxz
lods
std
xor
call
mov
es
aam
mov
mov
ss
testl
into
mov
arpl
testl
imul
test
rclb
std
mov
mov
sub
mov
shll
and
sub
and
movsl
dec
inc
push
loope
sub
sbb
lea
mov
cli
icebp
fs
leave
int
or
icebp
stc
pop
inc
mov
pop
stos
jmp
jo
mov
adc
add
in
repz
out
sti
bound
test
shll
or
jmp
cmp
add
pusha
mov
mov
mov
inc
divl
dec
add
fsin
mov
push
inc
sti
mov
insb
or
fldenv
adc
add
jbe
dec
inc
movl
add
xor
adc
movsb
xor
ret
mov
aaa
jl
loopne
dec
mov
mov
cmpsl
in
mov
jl
addr16
mov
mov
xor
hlt
inc
push
mov
and
xchg
loope
mov
inc
adc
dec
lds
or
mov
mov
mov
hlt
and
icebp
xor
clc
pop
xchg
dec
imul
mov
fistps
sahf
mov
add
scas
test
mov
inc
call
andb
ja
ds
fisubrs
loop
cmp
aad
push
std
movsb
inc
cwtl
jl
test
enter
popf
in
push
jae
mov
push
mov
gs
shl
stc
and
sub
push
sarb
adcl
outsl
dec
test
push
jo
scas
mov
sbb
and
sub
xchg
dec
sbb
loopne
test
lods
ret
mov
fisttpl
push
xchg
sbb
ss
sbb
out
adc
dec
inc
test
cld
pusha
jmp
push
jo
enter
arpl
adc
fcmovb
adc
push
sti
mov
jecxz
dec
cmpsb
inc
hlt
mov
xor
test
xor
sbb
insb
xchg
xchg
outsb
rorl
mov
stc
push
inc
and
or
out
pushl
lods
cmpsl
rclb
push
lock
jl
cmp
mov
test
lods
pop
pop
rcrb
repz
adc
mov
adc
gs
jmp
xor
sbb
push
sub
mov
jmp
aas
into
inc
cltd
aad
sub
cmp
shrb
xlat
sti
pop
or
fisubs
or
mov
jle
out
stos
sub
push
ds
push
sub
jecxz
pop
inc
jg
mov
out
outsl
mov
pop
jnp
adc
out
sub
adc
xor
mov
dec
xchg
addr16
push
nop
enter
adc
xor
jb
and
dec
jae
and
leave
mov
sub
js
movsb
add
adc
mov
push
popa
adc
mov
jmp
mov
out
and
mov
lcall
lahf
jg
cmp
xor
ret
cmpsl
fnstenv
add
jno
data16
stos
xchg
adc
inc
sub
pop
out
iret
mov
test
scas
cmp
clc
xchg
movsb
jmp
inc
jge
xchg
cmpsb
xor
pop
stc
lahf
call
pop
add
inc
pusha
idivl
jne
test
sbb
or
out
fdivs
repz
or
xchg
or
mov
and
test
cwtl
in
adc
pushf
fistps
mov
enter
aaa
mov
out
movsl
mov
sahf
xor
aaa
add
inc
pop
aaa
decl
call
das
mov
push
mov
les
mov
add
inc
mov
mov
scas
sub
imul
push
push
and
xchg
test
or
out
cltd
arpl
push
notl
push
adc
sub
outsb
dec
cwtl
scas
outsl
mov
mov
dec
or
gs
push
ret
xchg
sbb
lret
repnz
cmp
jns
sti
mov
mov
mov
mov
push
loope
mov
mov
insb
jl
loopne
pushf
mov
loop
push
movsb
jbe
jno
xchg
lret
test
cli
mov
cs
jecxz
leave
lret
mov
jg
imul
mov
add
adc
xor
lcall
outsl
xor
test
lret
dec
add
and
mov
pop
lcall
mov
int
nop
int
add
dec
test
ja
xchg
es
or
lods
mov
cmp
pop
and
jecxz
imul
adc
xor
dec
notl
mov
adc
or
mov
and
jge
outsl
outsl
arpl
cmp
xor
push
cld
cld
mov
insl
setns
mov
mov
dec
or
scas
cli
sub
pop
insb
xchg
push
push
enter
mov
dec
and
enter
pop
jg
cmc
mov
add
push
cmp
into
out
mov
scas
fdivr
popa
pop
ret
loop
outsb
push
lods
mov
jge
dec
daa
or
xor
and
int3
cld
dec
cmpsb
jge
mov
or
jmp
and
dec
out
ss
mov
jmp
lds
jge
data16
cmp
rcl
xchg
in
dec
pusha
sub
push
lds
xor
es
aam
leave
xor
pop
push
insl
stc
cmp
mull
xchg
xchg
cmp
inc
xchg
ja
aad
out
cmp
push
sahf
aam
push
pushf
xor
shr
cmc
out
flds
pop
mov
loope
lahf
push
stos
sbbb
push
jecxz
push
lea
xchg
ret
jnp
mov
push
sub
mov
sub
adc
cs
sbb
xor
sub
mov
in
aaa
and
sbb
inc
jg
add
xchg
stos
xorb
cmp
dec
test
push
mov
adc
pop
xor
fldenv
int
jmp
sarb
and
pushf
mov
ret
jl
scas
lret
mov
pop
mov
or
dec
es
and
cmc
mov
movsb
sbb
xchg
leave
xor
xor
adc
adc
push
push
in
mov
xor
jl
clc
jl
and
cli
fsubs
imul
scas
mov
imul
adcl
sub
jnp
leave
sarb
cmc
fstpt
lahf
in
adc
jne
into
inc
mov
mov
loopne
mov
lret
cmp
pop
pop
rcpps
jo
cmp
mov
repnz
daa
mov
jo
xlat
add
scas
addl
outsb
dec
ljmp
ret
sub
bound
sarl
pushf
addr16
inc
clc
sbb
sbb
adc
adc
sar
mov
inc
ret
add
mov
sar
jbe
adc
fcom
jle
ret
push
cwtl
lret
mov
sbb
fdivrl
or
jecxz
cmp
pop
adcb
data16
sub
push
mov
jbe
jge
adc
xchg
pop
out
fiaddl
xchg
sub
mov
xchg
mov
add
adc
loope
xchg
int
push
sbb
and
jle
ljmp
lret
movsb
loope
leave
xor
xchg
fsts
mov
or
dec
mov
jne
sub
test
imul
push
enter
dec
out
jno
and
ss
dec
inc
stos
sbb
lds
add
sub
mov
mov
and
pop
lcall
shll
daa
push
cmp
stc
adc
add
mov
repnz
add
xchg
inc
cmp
loopne
xchg
mov
cmp
mov
inc
fidivl
lret
mov
and
xor
jp
test
sbb
int3
rep
pop
pusha
popa
int
fs
arpl
mov
push
cmpsl
mov
pusha
sub
pop
cmp
add
inc
sbb
sbb
das
test
insl
mov
mov
fnsave
cmp
or
out
xor
mov
movsb
repz
jge
mov
fs
rolb
sbb
push
sbbb
mov
repz
jge
ss
fcoms
sbb
adc
cs
xchg
xchg
dec
cltd
sbb
sbb
push
jo
mov
sub
orl
stos
mov
aaa
xor
lret
push
fdivs
add
cmp
jo
leave
enter
sbb
pop
jmp
packuswb
mov
and
pop
mul
iret
jl
sub
and
push
xor
mov
in
sub
movsb
push
pushl
daa
cs
push
cli
outsl
pop
adc
hlt
jnp
inc
mov
stc
jae
and
out
lret
test
dec
ljmp
clc
sub
movsb
movsb
sbb
inc
add
mov
popf
inc
popf
sub
cmpsb
add
movsb
gs
mov
jne
xchg
leave
lret
fnstenv
daa
test
pop
iret
xchg
mov
pop
jle
add
push
daa
or
int
out
sub
push
fsubl
push
sub
jmp
int
or
aaa
push
sbb
sub
scas
hlt
js
aam
syscall
call
dec
pop
sbb
mov
jge
xor
push
test
mov
sub
xor
jnp
cltd
dec
bswap
mov
repnz
iret
push
pop
in
and
test
mul
sub
push
xor
pop
movsl
mov
ffreep
sbb
rol
out
add
pop
pop
jp
int3
int3
or
daa
mov
pusha
or
iret
cwtl
cmp
mov
xchg
shr
inc
lock
stos
repz
rorl
push
mov
mov
lahf
inc
push
adcl
call
std
cmp
jg
imul
mov
add
xor
xchg
aam
dec
into
leave
xor
pusha
and
adc
rcrb
repz
addr16
lock
or
test
mov
icebp
cmc
iret
rorb
and
in
inc
cmp
pop
daa
xchg
shll
aam
inc
pop
aas
mov
mov
or
adc
out
shrl
fwait
aaa
in
sti
in
jno
jnp
adc
incb
fsubl
pop
jb
arpl
call
push
pop
lds
testl
sahf
pop
push
and
aam
rcrl
push
xchg
ss
movsbl
adc
mov
mov
div
sbbb
push
pushf
xor
push
gs
cwtl
movsb
icebp
arpl
push
fisubrs
and
popf
stos
add
sbb
lea
pusha
jb
jge
and
mov
leave
in
icebp
inc
nop
and
add
cltd
sti
es
insb
pop
aas
int
jp
dec
loope
int3
addr16
jbe
loopne
jmp
dec
inc
xor
cld
jae
push
fwait
dec
popf
push
and
sub
fisttps
xor
mov
push
push
inc
or
lods
sub
mov
and
scas
clc
fildll
sarl
cmp
aaa
adc
sub
inc
js
pop
enter
dec
jmp
xlat
add
sub
dec
adc
dec
mov
cld
mov
sbbb
mov
ret
jne
scas
imul
sub
push
hlt
out
mov
pop
fwait
aam
add
mov
jp
imul
stos
fdivrp
ss
add
adc
fildl
sub
out
call
or
jno
mov
pop
cmp
cmp
dec
test
std
pop
pop
inc
sub
and
cmp
xor
inc
aam
insb
js
add
daa
mov
fbld
jle
and
scas
jg
mov
cmp
pop
scas
xchg
out
mov
push
jbe
andl
jnp
push
or
in
test
es
loope
cmp
outsb
mov
je
call
mov
dec
inc
xchg
xchg
cwtl
adc
cmpsl
scas
xchg
xchg
loopne
addr16
movsb
negb
insb
aaa
sub
mov
mov
and
sbb
pop
dec
fstpt
adc
mov
jb
cli
fstpt
das
add
jmp
mov
push
inc
jne
push
push
push
sbb
sbb
mov
cmpsl
out
xchg
imul
dec
scas
insl
sbb
rclb
mov
mov
in
inc
sub
mov
pop
mov
cmp
in
and
dec
out
in
mov
mov
sahf
pop
cmp
xchg
xchg
cmp
add
pop
in
mov
or
into
icebp
cmp
mov
mov
xchg
push
sub
inc
mov
push
in
cmp
dec
push
mov
cltd
push
popa
stos
icebp
not
es
fwait
cwtl
out
pop
xchg
stc
xchg
repz
ja
addl
mov
das
lret
sahf
iret
ret
fucomi
loop
push
fwait
or
lods
xchg
lods
rcll
jmp
jbe
jno
xlat
popa
test
mov
jno
add
mov
cmp
and
xchg
mov
adc
ds
or
mov
aam
mov
xor
jne
cmp
ds
test
adc
insb
cmp
dec
orw
push
lret
ljmp
lock
addr16
ljmp
loop
call
mov
imul
or
adc
mov
stos
cmp
xor
icebp
insl
sub
cld
push
jg
mov
cld
arpl
insl
xchg
or
jmp
sub
jecxz
cmp
push
and
sbb
bnd
nop
int3
cld
fdivp
movsl
decb
arpl
xchg
cmp
into
movsb
lock
fidivrl
adc
push
repz
idivl
dec
push
cmpsl
mov
leave
call
fnstenv
inc
in
sarb
xchg
or
fiadds
add
pop
jmp
mov
pop
cwtl
testl
mov
cmp
adc
mov
mov
adc
lds
mov
and
into
ja
rcll
push
repnz
movsl
add
bound
stos
sbb
ss
inc
xchg
add
fcomi
push
lahf
mov
cs
fwait
or
hlt
lds
push
mov
push
mov
stos
xchg
add
inc
aam
test
mov
adc
pop
add
or
mov
jecxz
in
sbb
mov
test
inc
nop
imul
xorb
xchg
push
mov
popf
or
mov
xlat
sbb
in
or
inc
xor
outsl
push
mov
dec
mov
ss
or
cmc
orb
je
hlt
xchg
pop
xor
daa
lods
add
mov
mov
mov
int3
orb
in
jecxz
jb
mov
xlat
insb
cs
hlt
xchg
jp
js
scas
loopne
fsubs
and
je
sub
gs
leave
adc
jns
outsb
imul
sbb
adc
and
cltd
scas
shll
push
mov
subl
mov
int
mov
ret
dec
add
mov
movsb
aas
addr16
test
sub
sub
mov
sub
rorl
arpl
call
bound
jnp
jecxz
jle
push
les
mov
cltd
or
insb
sbb
mov
in
out
add
inc
sub
jl
nop
aaa
cltd
scas
adc
jbe
jl
mov
arpl
daa
out
insb
inc
inc
pusha
jnp
jbe
sbb
outsb
out
lret
push
and
stos
loope
push
mov
cld
sub
mov
inc
jle
outsb
lcall
dec
push
imul
pop
loop
test
mov
xor
pop
rcr
cmovl
std
xchg
jge
xlat
push
inc
outsb
scas
xchg
sbb
sub
lock
mov
xor
or
jmp
popa
rorb
mov
repnz
test
pop
leave
mov
lock
imul
and
imul
push
int3
mov
mov
push
mov
inc
mov
or
inc
mov
xchg
scas
into
xchg
je
iret
pop
lds
xchg
sbb
jp
mov
cmp
push
aam
push
sti
xor
xor
ret
jns
iret
inc
ds
push
loope
aad
enter
xorl
idivl
leave
jl
mov
mov
inc
sbb
xchg
ret
jge
mov
add
mov
mov
ja
mul
shl
arpl
dec
call
les
in
pusha
pop
inc
or
roll
push
shlb
imul
fdivs
ret
add
pop
insb
pop
gs
or
cmpsb
hlt
mov
mov
out
push
cs
clc
test
bswap
outsl
insl
mov
lcall
sahf
sub
imul
lods
mov
pop
js
mov
in
push
andl
in
adc
std
inc
fcomi
push
fsubrs
rcll
push
cmpsl
outsb
aam
jb
lock
data16
adc
enter
rclb
jns
sub
sub
outsl
jbe
inc
push
cmpl
call
pop
movsl
dec
cmp
push
dec
rorl
or
clc
sahf
or
xchg
inc
push
mov
add
popa
cmp
pop
push
adc
add
mov
scas
hlt
rorb
sahf
xchg
stos
es
mov
fistl
loop
mov
sub
cltd
std
jo,pn
ds
sub
mov
int
iret
mov
aas
push
sub
pop
inc
push
and
inc
lcall
movsl
cmp
xor
push
orl
add
fwait
test
cmp
mov
or
std
rcll
andb
add
sti
xchg
loop
jp
mov
repnz
push
cmp
arpl
dec
stc
andl
cmp
out
cs
cwtl
mov
mov
subl
mov
cmp
in
ds
cmpsb
call
iret
adc
jmp
mov
adc
movsl
mov
xchg
stc
cmp
push
leave
jns
ficompl
cbtw
int3
push
call
xchg
push
nop
xchg
insl
push
fdivs
jmp
xor
loope
flds
repnz
test
repnz
mov
dec
push
movsl
repz
pop
jb
adc
gs
adc
mov
in
pop
cmp
mov
subb
inc
sub
pop
mov
aaa
jg
in
jnp
and
iret
data16
dec
push
sahf
pop
or
and
movsl
loop
nop
xor
das
and
bound
push
mov
inc
inc
cltd
fst
movsb
lods
pmullw
out
arpl
fyl2x
xchg
rcr
mov
cmpsl
sub
xlat
push
xor
dec
ja
push
dec
xor
sub
push
ds
mov
int3
xchg
fcmovb
pushf
jl
orl
or
inc
inc
out
cmpb
inc
addr16
insl
out
daa
xchg
inc
adc
and
outsl
xchg
push
xlat
add
movsb
and
cmp
cmp
mov
cmp
aam
jl
cld
insl
loop
int
nop
adc
cwtl
and
jl
sub
or
scas
aad
outsl
or
movsb
lock
ljmp
cltd
pop
bsf
xor
das
popf
mov
pop
rorb
xchg
int3
xchg
mov
lods
bound
pop
imull
mov
sub
aad
mov
lret
mov
mov
mov
loope
mov
cmp
mov
push
add
nop
popf
push
xchg
jnp
xchg
pop
and
ljmp
mov
mov
jecxz
jbe
mov
or
add
orb
stos
cmp
push
iret
and
jbe
cs
or
adc
outsb
lods
aam
jb
or
jg
sbb
mov
mov
sbb
adc
add
sub
or
outsl
inc
pop
add
out
push
sahf
inc
fadd
sbb
fcmovne
mov
popa
scas
sub
clc
dec
pop
jns
iret
jae
xchg
repz
ds
fwait
shll
adc
add
push
xchg
push
scas
add
sahf
and
pop
jmp
fisttpll
std
lds
fcmovnb
sub
cmp
jns
arpl
ja
push
xorb
jle
fadds
pop
push
leave
call
movsl
cmpsl
mov
mov
out
cmp
push
xchg
push
bound
adc
inc
jp
pop
lcall
outsb
fidivs
or
cwtl
mov
je
cli
push
add
decl
data16
jo
inc
lods
or
icebp
xchg
xor
pushf
cmc
lret
xlat
in
add
bound
mov
lcall
push
loopne
or
inc
enter
pop
mov
into
or
out
jg
xor
xchg
add
icebp
int3
rclb
jg
or
pop
xor
xor
mov
out
and
dec
movsb
xor
or
or
sbb
dec
ds
arpl
jo
dec
push
sbb
pushf
dec
mov
mov
int3
bound
jl
out
cmp
mov
mov
adc
push
adc
jl
mov
movsl
cs
out
repnz
cwtl
ja
inc
add
pushf
dec
adc
xchg
and
cmpsl
or
enter
mov
lods
shll
aam
sti
pop
inc
lcall
sbb
jae
mov
in
sbb
sub
xchg
or
add
sbb
aaa
dec
adcb
popf
das
cld
cmp
add
mov
cld
xor
xchg
sub
cmp
mov
sub
xor
sub
xor
jns
push
adc
arpl
pop
out
cltd
push
mov
fs
and
mov
outsl
or
jbe
xchg
mov
imul
cmpsb
dec
jle
hlt
cmp
mov
lea
dec
mov
fwait
lahf
inc
aas
or
jnp
xor
test
push
xor
in
and
stc
xchg
ret
push
jb
pop
mov
mov
mov
cwtl
or
bound
sub
loop
stos
dec
mov
inc
movsb
jae
adc
in
clc
movsb
loop
ljmp
popf
stc
out
adc
loop
fmul
push
ja
leave
out
nop
push
cmp
sbb
cmpsl
outsb
mov
inc
imul
lahf
mov
pop
pop
jmp
test
mov
jge
jo
loope
mov
xchg
mov
loope
addr16
pusha
leave
movsl
out
aam
xchg
jb
mov
cwtl
lods
pop
jle
pop
mov
in
fld
ds
fisubl
xchg
frstor
push
mov
mov
cld
adc
and
hlt
mov
or
dec
cli
popa
inc
ss
mov
or
popa
scas
lock
xchg
push
push
add
dec
hlt
sbb
mov
in
push
mov
stos
mov
cmpsl
popa
stc
shll
inc
mov
inc
sbb
push
sbb
leave
movsl
adc
sti
mov
or
xchg
out
fnsave
mov
stos
push
js
popa
and
xchg
adc
pop
cmpsb
in
add
xlat
mov
dec
sub
mov
dec
lds
testl
add
add
pusha
push
xchg
dec
incl
mov
mov
pusha
mov
dec
or
stc
lret
dec
orl
add
mov
jnp
pop
jb
push
jmp
sbb
shlb
and
push
mov
cmp
cmpsb
cld
loop
add
mov
shlb
insb
lahf
pop
insb
add
data16
adc
popa
mov
cmpsb
pop
and
sub
and
aad
mov
fs
or
jne
std
pop
fildll
push
lea
fs
mov
popa
sub
out
daa
or
sbb
inc
fldcw
lods
jp
in
fcoms
or
es
add
rcrl
push
loopne
int
mov
sub
and
aas
mov
and
lods
add
stos
test
adc
pop
imul
add
test
pop
pushf
outsl
xor
xchg
or
fimull
sub
fcompl
cli
loop
jp
and
and
adc
dec
sarb
pop
pop
dec
std
mov
icebp
push
ret
inc
in
dec
cmpl
add
arpl
push
push
or
push
ds
xor
out
rorl
cmp
inc
arpl
andps
and
adc
mov
jp
aad
mov
push
sub
sbb
mull
xchg
xchg
jg
dec
fisubs
sub
cs
aas
pop
js
fcomps
loop
cltd
ljmp
jge
cli
or
xor
jp
mov
andb
loope
fadds
movsl
xor
xor
imul
mov
sub
insl
push
mov
mov
testl
shll
mov
xlat
aaa
cmp
or
xor
add
mov
ret
push
or
push
jbe
mov
push
push
mov
je
lods
mov
mov
fiaddl
jns
popf
push
outsl
pushf
lahf
fidivrl
ror
mov
mov
cmp
and
test
jne
or
ja
sti
xchg
jbe
xchg
cmp
mov
jb
mov
dec
xchg
mov
imul
insl
sub
pop
pop
aas
loop
addl
fsubrl
sbb
pop
aaa
popa
gs
sbb
xchg
xchg
dec
mov
fwait
pusha
sub
daa
xchg
ds
bswap
test
ret
cmc
test
inc
jbe
addr16
push
push
cli
dec
fnstsw
jae
adc
je
movsl
push
fs
push
xchg
ror
aas
xor
fadd
mov
jmp
es
test
mov
dec
cmp
inc
push
mov
add
cmpb
lret
xchg
pop
jg
rorl
repnz
sarl
sarl
rolb
das
sub
into
je
and
xchg
cmp
pop
aad
dec
jmp
movsl
ss
add
ret
push
popa
add
push
pop
pop
dec
pop
imull
data16
scas
sahf
mov
sbb
cmp
scas
push
repz
mov
gs
sub
cmp
jo
ljmp
mov
mov
in
cmc
cs
pop
add
ds
or
cmp
mov
fidivs
xor
cli
cmp
adc
adc
sub
out
out
push
add
insl
hlt
punpcklbw
mov
sbb
sbb
ds
test
cld
leave
pop
inc
mov
jecxz
and
push
dec
xor
sub
ja
shrl
aad
cmpsb
sahf
movsl
and
add
cld
fdivrl
rcll
and
sbb
aas
inc
jae
mov
cld
sub
jno
xchg
adc
fcomps
jp
xor
jmp
and
js
xchg
loop
sti
cmp
inc
or
insb
ret
insl
test
pop
stc
pushf
xorl
pcmpeqw
jecxz
mov
push
pop
sar
pop
cwtl
lret
das
ja
and
add
lahf
rcrb
jne
movsl
push
xlat
fcmovu
cmc
fsubrs
cmp
out
fsts
mov
push
in
inc
rolb
push
mov
cmp
fimull
pop
and
mov
cwtl
sbb
hlt
pop
xor
int
test
jl
cld
dec
fsubl
xorl
outsl
sub
fcompl
jne
lods
test
pop
jg
push
or
dec
dec
xchg
ds
xchg
daa
dec
ds
hlt
decb
add
leave
or
cmp
or
mov
sti
lret
out
cmp
xchg
dec
hlt
test
sbb
divb
in
push
scas
xchg
sub
aad
popa
fsubrl
or
or
call
sbb
push
mull
rolb
dec
jge
and
xchg
lret
inc
dec
push
jg
sahf
mov
push
xchg
imul
inc
fstps
icebp
leave
fbld
pop
jno
dec
mov
pop
cltd
movsb
push
jp
jne
xchg
xchg
lcall
stos
cmc
mov
loopne
or
cli
movsl
adc
insl
mov
dec
and
adc
dec
push
mov
xchg
insl
mov
in
inc
das
adc
stos
mov
push
cmp
lcall
mov
cmp
cs
sub
dec
sti
xor
loope
enter
jo
and
add
fmuls
imul
lret
fisttpl
jnp
jmp
cmp
lea
js
cltd
sub
xchg
leave
outsl
std
fadds
stc
push
ljmp
andl
shll
inc
jmp
xchg
pop
out
mov
out
lds
push
stos
and
mov
jle
ret
cmpsb
or
push
out
and
test
inc
inc
leave
movsl
fdivs
adc
outsb
mov
dec
fs
xor
call
data16
lret
wrmsr
test
test
cmpsb
or
cwtl
jbe
hlt
pop
testb
orb
cwtl
cmp
sub
push
mov
mov
outsb
or
xor
pushf
cmp
dec
adc
out
sbb
pop
mov
xlat
jbe
sti
into
int3
insl
fwait
jne
pop
mov
ret
lahf
jg
xor
mov
loop
insl
imul
in
cwtl
sbb
test
scas
or
mov
xor
in
testl
or
add
inc
popf
repnz
inc
pop
je
xor
iret
pop
jp
iret
setno
arpl
push
mov
gs
cmc
ret
xor
add
aad
mov
enter
addr16
xor
push
dec
cmp
out
xlat
mov
pop
push
sbb
in
push
sahf
mov
or
repnz
mov
ljmp
xor
pop
imul
xor
ss
sub
xor
push
mov
push
xchg
int
in
dec
mov
cwtl
les
jno
lods
call
das
mov
mov
jle
jmp
inc
xchg
inc
testl
scas
loop
mov
xor
pop
jnp
insl
js
mov
and
jne
jp
out
adc
fs
movsb
xchg
sub
and
mov
fcomi
mov
out
test
or
or
popf
mov
push
adc
das
push
jle
in
add
mov
jo
sti
pop
xchg
frstor
dec
jnp
pop
push
nop
dec
pavgb
pushf
pop
mov
and
out
xorl
pushf
cmp
and
adc
xor
insb
in
ds
adc
out
jnp
fisubrl
lcall
shrl
sub
stos
cli
stos
inc
mov
mov
xchg
adc
dec
inc
cmpsl
mov
jg
cmp
aas
inc
lock
pop
xor
leave
fcoml
in
dec
sbbb
inc
sti
jle
lahf
iret
mov
insb
adc
sbb
xchg
pop
les
sub
push
pop
loop
jno
jbe
int
sbb
imul
mov
fisubrs
stc
pop
lds
xor
cmp
sti
arpl
pop
std
fs
xor
les
mov
insl
int3
imul
ret
jo
cli
adc
fstp
pop
pop
rolb
shrl
add
add
call
mov
ja
je
jecxz
xchg
adc
xor
aad
mov
leave
ss
nop
mov
jnp
jo
push
fisubs
mov
rorl
mov
ja
push
pushf
cmp
cmp
arpl
sbb
jbe
push
stc
sub
cld
cmpl
mov
or
dec
push
dec
xchg
pop
jne
cwtl
dec
sbb
loopne
cwtl
imul
bound
imul
out
fists
mov
sbb
test
test
lahf
add
test
jno
jge
and
fsubs
adc
lret
xor
push
ret
int3
mov
jmp
movsl
fnstenv
mov
or
xchg
jge
lock
insb
mov
jns
lret
shlb
popa
mov
outsl
cld
sbb
in
mov
outsl
pop
mov
cmp
add
jmp
aas
insb
cmp
pusha
int
fildl
sti
pop
xchg
add
cmp
insl
std
repz
js
shl
pop
cmp
sub
jb
inc
cmp
outsb
jb
mov
dec
jns,pn
push
dec
sahf
iret
aad
cmp
cli
jb
or
cmpsl
push
stc
out
or
jl
dec
sub
insl
iret
sahf
cmp
cli
cmc
pusha
or
push
das
ss
gs
cmp
cltd
cmpsb
mov
push
jg
sub
gs
gs
faddl
adc
arpl
sarb
or
push
incb
popa
push
jns
adc
sub
add
aaa
int3
iret
and
sbb
fs
shll
rcrl
sbb
mov
shlb
add
xchg
shll
xchg
fnsave
lcall
pop
aaa
arpl
push
test
add
fcoml
lods
pop
fdivl
test
xchg
sub
loope
mov
ja
or
mov
or
imul
repnz
cli
ss
cmpsb
pop
sub
jge
mulb
lahf
in
neg
sbb
pop
cmc
add
lea
ret
or
pusha
testl
pop
in
out
inc
inc
cli
divb
je
xor
mov
pop
repnz
and
mov
inc
sbb
sbb
xchg
ret
mov
inc
pop
imull
jp
data16
mov
hlt
sub
inc
shl
sbb
aad
filds
xchg
cmp
loopne
ret
mov
or
lret
sub
dec
cmp
mov
xlat
fisubs
repnz
pop
pop
movsb
jne
sbb
inc
mov
sub
std
cmp
loop
mov
out
cli
cli
sahf
cmp
cmpsb
sahf
fdivr
mov
loop
and
mov
call
xchg
adc
jecxz
repnz
pop
pop
jno
adc
push
mov
xchg
xor
outsb
aad
shl
jnp
jae
mov
jge
out
add
pop
rclb
imul
insl
pusha
jg
mov
mov
dec
and
mov
out
mov
jecxz
cmpsl
lods
pop
and
push
xor
fisubrl
xor
add
xchg
sbb
lret
sbb
loop
in
daa
push
arpl
std
mov
mov
lahf
sbb
gs
jge
ror
in
cwtl
jae
pop
add
or
or
push
lock
pop
out
jae
repz
mov
ljmp
iret
inc
adc
out
mov
stc
mov
and
push
jp
xchg
pop
std
jae
insl
mov
aaa
fimuls
test
shrb
sahf
and
subl
and
clc
test
mov
lret
dec
adc
mov
push
xchg
inc
xor
pop
icebp
mov
mov
push
mov
sti
cmc
push
jg
in
mov
fwait
jae
pop
dec
adc
outsb
mov
push
ret
adc
imul
aad
dec
mov
pop
jl
dec
jmp
loope
es
lcall
add
call
pushf
std
jb
movsb
pop
jle
mov
xchg
mov
xor
jb
adc
xor
push
fildll
or
negb
das
inc
xchg
sub
test
popa
loope
aad
xchg
testl
cmp
push
into
jb
sub
adc
push
xchg
xor
cmp
daa
sahf
mov
jg
insl
in
and
pop
and
adc
xor
repnz
ror
xchg
jo
cwtl
xchg
mov
movsl
xchg
sti
out
inc
sub
shrb
dec
stc
jmp
xchg
or
pusha
stos
xor
outsb
fcmovu
add
jl
ficomps
testl
sbb
lods
add
in
fs
dec
and
sbb
cld
push
cmp
xchg
pop
dec
clc
lods
lods
js
scas
jmp
jp
xor
mov
bound
push
adc
adc
pop
imul
pusha
cmpsl
xchg
shl
mov
roll
and
bound
ja
xchg
mov
in
sub
repz
into
std
sar
jp
loope
fcompl
fnstcw
rcr
adc
scas
je,pn
fldt
and
nop
add
pop
in
and
xchg
xchg
add
ja
push
mov
push
push
cld
in
inc
sbb
in
movsl
inc
push
mov
ret
sbb
xor
sarb
enter
jno
pminub
sarb
pavgb
pop
in
testl
lcall
dec
aaa
inc
fcmovb
bound
mov
xchg
repnz
bnd
insl
sbb
inc
pop
pop
cmp
sbb
pop
mov
dec
cmc
nop
cmp
adc
stc
lods
arpl
mov
mov
dec
mov
inc
add
sub
outsl
aas
jns
js
xchg
adc
mov
dec
xor
push
sbb
sub
sbb
adc
cltd
inc
mov
mov
or
ret
adc
idiv
lods
bound
pop
jle
jne
outsl
pop
adc
ret
xor
inc
fwait
or
add
das
iret
sti
pop
mov
sbb
add
addb
mov
push
xor
and
loop
testb
rcr
jbe
repnz
pusha
in
mov
divl
loop
aaa
cmp
add
sub
pop
jbe
sbb
in
addr16
xor
push
mov
jne
jmp
cmp
xor
pop
test
jae
add
pop
lods
push
hlt
outsb
and
ja
inc
insb
ds
mov
push
aad
rorb
xchg
test
push
push
mov
jle
or
test
inc
push
addr16
xlat
jmp
jae
aam
movsl
mov
jecxz
inc
sahf
imul
ficoml
mov
stos
and
insb
fldl
les
stc
push
mov
dec
imulb
test
sbb
lods
sbb
and
mov
inc
hlt
mov
ds
mov
mov
push
gs
insb
out
cmp
push
mov
fucomip
pop
lods
leave
mov
push
iret
fsts
cmc
pop
jb
pop
xchg
lahf
pusha
lret
orb
or
es
ret
ss
out
mov
lea
dec
cmp
sub
outsl
rolb
mov
jp
movsb
imul
cmp
std
icebp
das
movsl
test
and
jo
rorl
pusha
cld
pop
cmpsb
sub
or
fstps
daa
cwtl
int3
jl
enter
je
push
int
into
push
jmp
cmpsl
mov
jne
cmp
or
adc
subb
stc
push
sub
jl
arpl
lods
leave
shl
stos
jp
stos
jb
push
pop
scas
and
inc
mov
in
mov
leave
pop
push
push
gs
mov
inc
inc
bnd
mov
adc
dec
ss
clc
push
shl
add
test
sbb
ja
testl
jbe
popf
movsb
jecxz
in
dec
rolb
and
shrl
mov
repnz
mov
ret
xor
push
sub
loope
movsb
fwait
sub
enter
ljmp
iret
js
lahf
out
stos
pop
aaa
xchg
inc
inc
daa
fbstp
test
xor
inc
pop
pop
push
xchg
xchg
cmp
mov
xchg
cli
sbb
test
jne
mov
jae
lcall
shrb
xchg
xchg
sti
aad
cs
adc
out
mov
popf
ss
hlt
cli
call
pop
jo
inc
into
mov
test
mov
sbb
and
mov
data16
add
pop
mov
imul
and
std
pop
push
dec
in
nop
ret
sbb
pop
mov
pop
test
imul
sbb
cld
push
mov
inc
outsb
xorb
cmp
inc
into
jecxz
dec
lcall
add
stc
dec
pop
and
shr
mov
bound
gs
roll
fistl
imulb
xchg
sbb
sub
sub
lahf
cmp
add
in
sub
icebp
inc
sub
orb
add
icebp
lods
or
or
push
rcr
mov
dec
repnz
add
movsb
push
jo
ljmp
cld
ss
pop
push
adc
push
icebp
lods
cmpb
mov
hlt
cmp
rolb
ret
inc
out
sub
fs
pop
lret
in
inc
sarl
mov
scas
das
add
mov
data16
aam
mov
xchg
cmp
xlat
ljmp
dec
jne
pop
or
push
nop
inc
xchg
push
sti
fcmovne
mov
adc
popf
pusha
mov
inc
cli
push
jnp
pop
test
lea
mov
and
push
pop
dec
inc
out
xabort
add
sbb
into
add
mov
lods
and
ret
xchg
xchg
fcomps
je
add
sar
or
fsubr
mov
mov
cs
xor
xor
lock
out
enter
lret
in
mov
mov
push
enter
pop
in
insl
dec
test
aam
dec
sub
jno
lods
ret
push
dec
stc
xchg
leave
cs
push
jge
leave
aas
scas
push
sti
in
daa
arpl
xchg
inc
push
push
fistps
lahf
xor
cs
ficompl
add
test
sbb
out
sbb
pushf
loop
fdivs
rcr
test
lock
mov
mov
and
aaa
lret
mov
dec
xor
in
jp
unpcklps
bound
add
in
inc
clc
pusha
arpl
lret
dec
ficomps
sub
xchg
mov
push
in
leave
xchg
or
mov
stos
xor
mov
in
xchg
jo
sbb
dec
movsl
sahf
in
and
pushf
and
lcall
cs
adc
outsb
clc
int3
stos
mov
xor
fdivrs
cmpsb
insl
jno
mov
xchg
xor
push
cmpsl
rorb
dec
mov
ret
mov
inc
loop
mov
movsb
jns
pop
jg
lcall
out
fisttpl
xchg
lods
mov
pop
movb
cwtl
jbe
aaa
push
js
aad
test
adc
mov
jnp
dec
stc
mov
fcomps
xchg
ss
sbb
sbb
icebp
repnz
push
sti
mov
es
jno
shrb
pusha
inc
jno
jo
test
jl
pop
cmpsb
das
jmp
cmpsb
leave
fisttps
jbe
push
outsb
push
nop
push
sbb
insb
mov
add
xchg
mov
pop
push
cmp
bound
or
iret
xchg
push
cwtl
add
jno
scas
out
rclb
add
xchg
push
add
nop
in
arpl
inc
jns
sarb
push
jnp
inc
into
mov
push
inc
dec
pop
das
lcall
mov
pop
fs
and
cs
push
and
pop
aaa
jp
sbb
add
dec
inc
xor
loop
and
test
pop
jbe
jbe
clc
hlt
or
xchg
aam
shrb
jnp
mov
mov
push
cmp
dec
ja
sbb
std
add
movsl
fisttps
jg
xor
aaa
insb
fs
iret
and
push
fisubl
aam
inc
jg
ret
or
into
xchg
sbb
sahf
push
sub
ss
std
mov
lods
jg
insl
and
xchg
or
sbb
hlt
jne
cmp
jbe
popf
into
add
adc
xchg
sub
hlt
adc
jl
in
or
addr16
jmp
incl
or
xlat
aaa
pop
or
cmpl
mov
movsb
xorl
mov
mov
cmp
xchg
adc
je
rcr
mov
pcmpeqw
xchg
dec
jo
repnz
ret
pop
pushf
xchg
shll
mov
ret
cmpsb
loopne
test
mov
std
jns
jne
xor
mov
mov
push
jmp
or
jb
das
js
fwait
inc
adc
fstps
fimuls
and
cmp
and
stos
test
push
cmp
or
and
lahf
xor
lea
jge
mov
imul
sub
mov
add
cmp
addr16
xchg
jle
mov
stc
pop
mov
lods
push
add
cmpsb
nop
cmpsl
lock
pop
xchg
mov
adc
iret
mov
lcall
fwait
ret
xchg
push
lcall
xchg
in
inc
mov
and
or
test
pop
enter
cmp
aas
iret
dec
jb
jmp
add
icebp
xor
outsl
pop
mov
out
nop
cmp
sarb
or
cmp
xor
add
aas
jo
sub
add
xor
dec
lea
lret
call
push
lret
push
loopne
or
push
mov
into
jg
sub
in
dec
stos
inc
jno
mov
mov
and
xchg
leave
repnz
insb
stos
xchg
test
dec
sub
scas
shll
mov
mov
cmp
clc
mov
mov
inc
gs
jmp
xor
inc
push
arpl
mov
xorb
pop
inc
sbb
movsl
mov
mov
scas
pop
jge
jb
adc
ret
adc
arpl
inc
jecxz
mov
enter
test
jg
sarl
jl
dec
int3
notl
dec
repz
aas
sbb
add
sub
push
fisttps
dec
and
movsl
jg
sub
sarl
aas
iret
inc
mov
add
push
mov
xchg
pop
and
xlat
sub
fisubrs
mov
int
dec
mov
add
inc
stos
jl
test
sbb
sbb
inc
inc
and
sub
mov
stc
cwtl
mov
pop
cmp
push
sub
sub
jnp
outsb
pop
sti
bound
cmpsl
jmp
xchg
lcall
dec
xor
lret
xchg
and
mov
pop
ss
inc
popa
or
loopne
mov
fwait
jp
das
inc
mov
sbbb
pop
lret
xchg
scas
aam
mov
add
and
and
out
cmp
jne
shl
or
daa
jbe
or
test
sbb
cs
lods
std
xor
and
dec
enter
fnsave
mov
mov
pop
lods
sub
xchg
in
and
mov
pop
jns
test
ds
aas
cs
xlat
add
mov
jl
js
ds
and
out
cmp
xor
movsl
mov
mov
outsb
push
cmpl
and
jle
dec
xor
inc
mov
out
push
ret
jg
fbstp
stos
sub
test
mov
xor
out
or
rclb
dec
out
std
inc
sbb
mov
jbe
pop
cltd
into
les
jne
mov
loope
fnstsw
aam
jle
aam
and
int
not
fwait
sbbl
rolb
pop
push
mov
add
je
popa
ficompl
jo
sbb
mov
shlb
lods
xlat
out
xchg
adc
inc
add
inc
jno
sbb
push
ljmp
fucompp
cmc
lock
insl
and
mov
pop
jecxz
pop
out
out
add
adc
es
std
fwait
push
sti
xchg
andl
cmpl
mov
mov
xor
flds
pusha
mov
icebp
inc
xchg
iret
outsl
push
jle
jle
cld
pop
inc
cwtl
xchg
pop
ljmp
lahf
mov
mov
loop
adc
adc
insl
arpl
imul
add
ds
test
je
xchg
and
cmpl
loop
sbb
imull
fistl
cmpsl
insb
bound
inc
mov
ljmp
pop
or
in
mov
xchg
scas
lret
jle
push
pusha
aas
nop
jmp
shlb
dec
xchg
out
ret
push
inc
add
xor
jp
add
dec
jg
mov
mov
aaa
shl
negb
pop
loop
and
sbb
jmp
pop
jge,pt
daa
mov
imul
lods
faddl
inc
xor
inc
sahf
and
je
jo
lds
iret
xor
shlb
hlt
xchg
pushf
dec
cmpsb
push
push
xchg
xchg
sahf
int3
dec
dec
mov
fs
sub
cmp
cmpb
loope
dec
out
push
jnp
icebp
dec
cmpsb
jmp
ret
test
or
ret
mov
and
adc
es
push
adc
or
outsb
and
cmc
pop
ret
fwait
outsb
mov
sbb
mov
es
jno
add
cwtl
mov
test
roll
test
cmp
cmpsb
jbe
icebp
and
mov
scas
pop
testb
enter
pop
mov
or
jns
adc
shll
pop
push
push
pop
pop
mov
cmp
sbb
sbb
mov
mov
shl
xchg
icebp
scas
sbb
fstps
adc
xchg
addr16
adc
mov
lods
es
pandn
ljmp
or
lds
ljmp
lret
jnp
or
test
ja
icebp
shrl
addr16
fs
into
mov
push
dec
xor
dec
imul
mov
lahf
in
push
xchg
ljmp
addr16
push
mov
inc
xchg
cmp
mov
sbb
pop
mov
out
aas
cwtl
aam
xor
pop
insl
sub
push
imul
cld
xor
cmpsb
jae
push
cli
push
xchg
jge
push
clc
mov
inc
aad
mov
sbb
cmc
sub
mov
test
mov
leave
push
sahf
loope
mov
shl
mov
and
shrb
or
mov
and
cmpsl
inc
fcmovnu
mov
cmp
inc
xchg
cmp
add
push
aaa
sub
jne
sti
fs
xor
fadd
push
mov
jne
adc
sbbb
cmp
enter
mov
aad
imul
in
sub
or
mov
push
push
and
xchg
lret
mov
inc
inc
lds
xchg
je
into
mov
jo
cmc
das
mov
data16
test
jmp
or
aas
lahf
in
pop
bound
dec
or
cs
xor
sahf
xor
push
repz
leave
shlb
fstl
dec
faddl
in
movsb
jno
ljmp
jge
out
bound
out
dec
xchg
push
iret
push
xchg
mov
sbb
movsl
pusha
cmp
jmp
mov
sbb
sub
mov
push
sub
xlat
mov
or
jecxz
mov
pusha
addr16
jg
push
cltd
aas
sub
loope
push
cmp
pop
out
mov
jp
fucomp
call
aaa
mov
xchg
outsl
add
cmp
movsb
fsub
adc
mov
cli
rcr
test
call
out
daa
xchg
add
mov
pop
imul
pop
js
jmp
mov
loop
aad
jae
out
sub
jmp
loopne
dec
mov
movsb
xor
cmp
pop
js
imul
nop
aas
mov
data16
adc
add
sbb
jns
jge
mov
int
aas
mov
in
std
hlt
sarl
and
mov
jp
les
pop
out
xlat
lret
fwait
imul
ljmp
movsb
cmc
aam
fstpl
cmpl
call
nop
popf
mov
outsl
test
push
jne
lea
pop
adc
scas
mov
imul
les
dec
push
dec
scas
in
pop
mov
push
dec
inc
inc
cmp
loope
pop
ret
out
insl
mov
pop
pop
xor
repz
adc
test
andb
mov
pop
push
lret
dec
les
pop
sub
mov
gs
sahf
call
jno
pop
fwait
aas
sub
fisubs
stos
outsl
cltd
ljmp
int
sub
sti
or
repz
cmpsl
movsb
mov
sub
xchg
pop
ss
jno
das
aas
int
pusha
or
xchg
push
mov
and
ljmp
into
ficoml
mov
xor
arpl
outsb
call
mov
fisttps
push
sub
lods
mov
jbe
push
push
fs
in
sub
gs
push
test
cld
mov
cmovp
cmpsb
push
mov
bnd
es
insb
movsb
mov
ret
es
iret
fimull
jg
inc
out
add
mov
or
ljmp
sahf
lea
in
or
fnstcw
imul
lock
xchg
inc
icebp
jne
mov
pop
in
jle
push
int3
sbb
push
or
jl
and
xchg
outsb
xchg
rolb
adc
out
xchg
test
push
mov
add
call
inc
push
nop
nop
verw
dec
movsb
push
cmpsb
cmovg
and
cmp
outsl
xchg
xor
out
aam
xchg
and
xchg
es
cmp
fstpl
loop
mov
mov
dec
fisttps
xor
insb
mov
ss
cmp
pop
sbb
mov
or
mov
repnz
inc
mov
in
ljmp
push
movsb
sub
mov
and
push
sbb
mov
pusha
into
pop
adc
scas
adc
cmpb
mov
je
or
out
iret
fists
testb
inc
mov
xor
pop
inc
roll
jl
jmp
lods
dec
or
push
mov
cmp
pusha
leave
dec
and
loope
nop
lods
cmp
add
xchg
inc
dec
and
lcall
ret
aam
jmp
dec
add
pop
faddl
rclb
sarl
fnsave
and
xchg
test
fchs
xchg
popa
or
sub
xchg
mov
or
lds
iret
xor
inc
pusha
in
cmp
adc
test
mov
cmp
inc
xor
inc
lret
xchg
and
fldcw
call
cmpsl
push
bound
loope
je
test
inc
sbb
push
repz
xchg
pushf
cmp
divl
test
inc
mov
sbb
sbb
jp
js
jo
jp
loope
dec
idivb
test
es
dec
test
xor
enter
lea
mov
push
lds
push
movsb
das
mov
mov
jo
imul
enter
jle
cmc
add
dec
lods
mov
loop
cli
arpl
sbbl
wrmsr
aaa
sbb
adc
jb
ss
gs
movsl
push
or
out
and
or
mov
jmp
dec
or
fmull
test
loopne
movsb
cmp
mov
cmp
sub
movsb
mov
fnstcw
push
arpl
ficoms
and
fistpl
dec
dec
jg
insl
inc
add
ficoml
lods
mov
fbstp
in
push
movsl
fmuls
mov
xchg
or
xchg
insb
movsb
pop
leave
inc
or
test
movsb
loop
and
lret
dec
cli
in
inc
jno
xchg
add
cmp
adc
push
out
js
xor
mov
fdivrs
lahf
jo
pop
mov
out
sbb
mov
sub
sti
xchg
push
and
pop
mov
sbb
push
test
les
xor
arpl
hlt
or
adc
or
hlt
mov
dec
and
repz
ds
mov
push
push
rol
subb
xchg
cltd
mov
repnz
xor
mov
jecxz
cmp
sbb
inc
jae
call
movsb
stos
in
sub
in
push
aam
addr16
xchg
mov
sub
xchg
outsb
lock
pushf
mov
cmp
lret
stos
in
adcb
xchg
jb
adc
sbb
push
iret
jmp
jae
pop
into
fs
lock
xchg
sbb
stc
lods
lcall
and
add
or
dec
test
inc
insb
ret
pusha
xchg
clc
add
cmp
xchg
xor
or
mov
pushf
stos
repnz
leave
sbb
shlb
mov
dec
popa
jb
test
adc
and
cmc
out
ds
test
int3
lahf
jne
lahf
xchg
imul
jp
lret
and
es
into
xor
pop
pop
xchg
mov
insl
call
inc
push
jno
pop
mov
push
fistps
sub
es
jbe
cmp
jmp
aam
fwait
cwtl
into
dec
cmc
mov
push
frstor
inc
stc
sbb
gs
insb
test
mov
aas
rorb
cmp
fists
dec
fs
mov
xor
in
sbb
xchg
or
out
outsl
aad
loop
mov
scas
fimuls
fisubl
and
push
dec
push
add
adc
adc
imul
aaa
xor
jecxz
loope
xchg
sbb
cltd
sbb
sarl
filds
push
cmpsl
cmpsl
fcoms
push
pop
push
loope
push
ljmp
xor
lods
negb
inc
push
lret
aad
pushf
jg
int3
sbb
in
xchg
push
push
mov
xchg
mov
fbld
sarb
gs
pop
mov
scas
icebp
add
cs
ss
jb
jmp
mov
test
pop
mov
imulb
push
and
pop
jno
aas
inc
int
in
insl
xor
lock
hlt
mov
mov
jno
mov
int
xchg
aam
jecxz
mov
pop
dec
xor
dec
xor
cli
jl
jb
inc
xchg
dec
addr16
add
push
xorl
push
push
int3
sub
and
insb
mov
pcmpgtd
lods
lea
fidivrs
dec
mov
xor
aaa
sahf
shl
stos
push
mov
lcall
ljmp
insl
es
cmp
loopne
inc
mov
leave
adc
xor
push
mov
pop
lcall
push
lcall
inc
out
pop
ror
xchg
cli
inc
shl
cmpb
out
in
sub
aaa
fistpll
inc
push
jl
out
inc
mov
test
outsl
mov
push
inc
jae
cld
jnp
or
adc
sbb
pop
push
ljmp
ja
inc
in
push
mov
scas
or
inc
push
into
cmp
and
fcoml
ja
push
mov
or
sub
outsl
and
leave
and
jb
lret
jle
sbb
lock
iret
xchg
mov
push
sub
xchg
rorb
or
pop
pop
cmp
cmp
or
stc
je
dec
xor
xchg
das
and
sub
jmp
movsb
mov
mov
xchg
sub
adc
popa
insl
xchg
mov
cmpsb
arpl
pop
mov
add
sbb
push
cmpb
lock
es
add
imul
pop
int3
mov
movsl
sbb
lret
test
dec
sub
lock
aas
loopne
jae
fwait
mov
movsb
cwtl
pop
lds
shl
fldcw
xchg
sub
nop
mov
rorl
sub
scas
sbb
popf
push
xorb
rolb
xor
cmc
mov
incl
ds
mov
rolb
mov
mov
or
ja
inc
cmpsl
push
adc
adc
mov
xchg
inc
sbb
mov
pop
xor
adc
push
and
pop
fbstp
jnp
push
movsl
aaa
out
fldl
sub
add
inc
jp
jno
cmpsl
pop
inc
sbb
pop
pop
ret
sti
xchg
mov
negb
xlat
add
jnp
push
cmp
push
lcall
in
les
xchg
inc
cmp
jo
imul
xor
repz
lds
and
adc
cmpsb
cltd
stc
or
mov
shlb
enter
sbb
jecxz
sub
dec
scas
shlb
jmp
fbstp
aad
push
into
shll
scas
mov
mov
mov
repnz
shr
outsb
aas
dec
jns
xchg
mov
loope
stc
pop
cmpsb
mov
gs
mov
bound
add
repnz
adc
xor
sbb
pop
repz
shrl
jg
and
dec
and
jbe
gs
icebp
pop
outsl
dec
int3
mov
push
jge
jge
aaa
fsubrs
fldenv
out
pusha
sbb
out
and
outsb
adc
jle
and
lods
rcll
xchg
and
xchg
jle
mov
push
and
subb
xor
outsb
arpl
fistl
jnp
pop
sti
imul
pop
inc
aas
dec
dec
pop
pop
movsb
pop
xor
ja
cmp
push
aam
adc
scas
add
ss
imul
add
jl
cmpb
pop
in
fisubl
shll
sbb
addr16
test
sub
and
cltd
out
mov
and
fiadds
and
lock
rclb
subb
ja
jbe
mov
or
lods
xchg
lret
and
mov
repz
inc
movsl
in
call
jo
ret
sahf
call
das
stos
cmp
or
movsb
xchg
push
popf
hlt
and
sbb
fmul
pop
or
sbb
pop
pop
pop
pop
roll
mov
imul
stos
jg
data16
fimuls
sub
add
sahf
pop
roll
sbb
frstor
stos
rcr
jne
call
xchg
mov
lods
mov
rorb
pop
mov
pop
xchg
mov
cmp
cmp
fidivrl
jo
pop
subl
mov
xchg
dec
or
std
sbb
mov
dec
add
adc
xchg
cltd
aaa
fidivs
jnp
and
int
pop
mov
cwtl
push
jg
dec
sbb
call
mov
inc
cmc
jmp
test
sti
lret
imulb
into
dec
in
jmp
faddl
inc
jl
cltd
or
sahf
lock
ret
sub
or
or
pop
in
daa
imul
push
arpl
test
adc
or
lock
push
ljmp
imul
or
adc
addl
call
xchg
push
jb
cmc
inc
std
shlb
ja
mov
dec
and
and
mov
arpl
mov
adc
repz
stos
adc
mov
aaa
popf
pop
xor
std
sbb
xchg
xchg
push
mov
pop
test
cmp
xchg
sbbb
popf
aam
dec
mov
in
sbb
data16
dec
cmp
push
mov
loop
or
divl
mov
mov
popa
pop
mov
mov
das
add
push
es
push
sub
into
cmp
out
or
cmp
addr16
dec
jno
xor
xor
inc
daa
js
fs
dec
les
mov
push
push
stc
sbb
sahf
sub
lahf
sub
xchg
nop
cmp
and
and
xchg
testb
fldcw
fistps
push
pop
pushf
hlt
pop
push
sbb
insl
xchg
int3
or
xchg
clc
push
sub
fists
sti
dec
shl
inc
mov
push
insb
andb
ljmp
xor
push
xor
or
add
cwtl
xor
pop
mov
div
and
inc
mov
bnd
inc
jl
jns
jmp
sub
xor
orl
leave
xor
iret
xor
pusha
inc
sbb
jmp
sbb
xor
xor
lods
or
add
aaa
fsubrp
xchg
sub
outsl
shl
adc
cmp
fs
rcrl
and
ret
lock
xchg
pop
test
inc
mov
bound
or
mov
fcomi
jecxz
in
cmpl
das
ffree
mov
and
repnz
add
adc
cmp
sbb
js
daa
outsb
pop
adc
shll
adc
ljmp
add
sub
outsb
mov
aaa
adc
mov
adc
sahf
xor
in
in
jecxz
xchg
das
xchg
push
xchg
mov
xchg
je
cmp
pop
sub
jb
add
jmp
aam
divl
add
add
mov
in
lret
loopne
and
dec
jb
jnp
xor
out
in
xchg
out
xor
or
xor
sbb
rorl
lahf
xor
movsb
inc
add
and
outsb
out
or
outsb
mov
cwtl
jne
sub
pop
inc
cmp
add
xchg
test
arpl
pop
dec
and
int
push
and
mov
into
clc
inc
xor
cvtps2pd
inc
cmp
stos
std
test
dec
in
cmc
dec
and
xlat
sbbl
in
cld
mov
mov
xlat
mov
lahf
fimull
xchg
sbb
push
and
fadds
mov
cmp
sbb
mov
pop
les
mov
popa
aad
mov
dec
fs
push
lret
mov
dec
hlt
je
mov
inc
push
mov
push
jbe
sbb
outsb
fiadds
nop
jp
jae
or
aas
cmpsl
jge
enter
imul
adc
scas
clc
cs
mov
das
xor
mov
inc
push
push
add
xchg
pushf
push
js
lock
in
xchg
test
cltd
fwait
xlat
mov
ljmp
insl
mov
ja
push
mov
xchg
imul
dec
adcl
mov
xor
add
clc
adc
cmp
scas
aaa
push
mov
sbbb
call
es
pop
push
aad
xchg
push
aaa
movsb
pop
stc
or
jmp
ja
je
xor
and
adc
sub
data16
inc
movl
dec
aad
dec
push
inc
rcrb
cltd
xchg
mov
in
sub
pop
add
pop
jns
in
test
lret
xchg
hlt
out
cltd
mov
push
mov
mov
ret
jmp
bound
stos
vaddss
mov
push
cs
fsts
sbb
adc
push
inc
mov
jmp
cmp
decl
cmpl
ljmp
sti
adc
add
scas
test
mov
inc
push
fdivrp
shrb
enter
je
repz
fildll
mov
das
sbb
lcall
ss
dec
cs
ljmp
and
scas
cmp
fcmove
lea
fcmovnbe
lods
popl
clc
cmp
jo
out
movsb
sbb
mov
xor
xchg
dec
cmp
adcb
or
mov
and
int3
shrl
inc
iret
enter
mov
test
push
xlat
mov
hlt
ljmp
iret
test
sbb
fisttpl
push
jl
inc
xchg
adc
test
enter
xor
or
adc
lret
lds
ret
push
insl
add
jl
in
pop
xor
sbb
mov
jb
popf
aas
in
fsts
mov
push
mov
cltd
test
lret
pop
stc
and
into
lods
pop
sbb
divb
xchg
push
mov
popa
popa
insl
mov
loop
push
and
pop
pop
ror
mov
mov
pushf
inc
mov
cmp
inc
in
mov
fcomps
in
pop
xchg
mov
mov
fs
add
jle
popf
mov
jecxz
das
dec
scas
ret
xchg
int3
inc
cld
ja
fmuls
cmp
popf
add
fbld
insb
sti
arpl
xchg
xor
mov
outsl
gs
lcall
mov
pop
and
xor
scas
lret
jo
nop
xchg
mov
adc
or
cmpsl
jno
jle
insb
xchg
xor
lahf
push
jnp
jle
insb
jmp
push
out
dec
adc
aam
ret
add
into
xchg
clc
arpl
rolb
jmp
lock
jno
sbb
push
pop
xor
bound
es
mov
xor
cltd
jnp
popa
fdivrp
pushf
stc
lahf
mov
jnp
xchg
sbbb
sub
mov
repz
ja
adc
push
mov
and
mov
adc
pop
test
dec
adc
xor
sti
lds
mov
or
push
mov
test
xchg
popf
dec
dec
mov
je
mov
xor
xchg
jns
shlb
push
mov
push
icebp
mov
popf
sbb
xchg
sti
jne
adc
stos
or
icebp
scas
prefetcht0
mov
ljmp
inc
cmp
adc
add
push
jo
or
pop
push
cmp
fs
or
sbb
mov
mov
mov
and
ret
lret
call
out
ret
es
jle
aam
dec
or
sbb
jb
fidivrs
mov
add
int3
pop
jl
jne
int
sub
pop
cmp
jne
data16
xchg
add
mov
arpl
sub
xchg
call
mov
lcall
push
sub
test
sbb
fstpl
xchg
add
insl
push
add
stc
or
fdivrs
xchg
pop
rorb
rcll
and
pop
or
push
cltd
jo
xor
das
cmpsb
mov
push
adc
jns
shll
int3
pop
pop
and
dec
fidivrs
sub
push
int3
in
nop
pop
sbb
shrb
adc
adc
mov
lret
cmp
in
int
cwtl
cmpsl
mov
icebp
xor
sbb
pop
jp
fstpl
test
in
xor
lds
out
pop
mov
push
repnz
add
movsl
inc
adc
ds
testl
insb
mov
adc
sbb
mov
and
in
lcall
aaa
stc
in
clc
lcall
fstps
add
adc
mov
in
aam
lcall
cs
cmc
fs
popa
dec
std
movsb
pop
cs
or
adc
push
pushf
ja
inc
add
push
xchg
ljmp
cmpsl
lret
mov
fildl
xchg
outsb
cld
inc
iret
call
sbb
mov
sbb
std
add
rolb
clc
xchg
xlat
mov
or
jmp
sbb
shrl
cmp
lahf
lock
out
shrb
out
and
jno
mov
nop
dec
push
pop
add
fwait
xchg
inc
or
cltd
lock
cmc
cmp
pop
mov
xchg
scas
adc
jp
push
pop
scas
popf
sub
pop
or
jno
and
sbb
fcompl
sbb
push
jns
adc
cmp
lods
stos
rolb
shrl
jle
mov
sub
les
aad
and
fcmovne
pop
and
xor
and
push
jno
mov
inc
std
out
cmp
cmp
xchg
mov
sub
dec
orl
or
dec
cli
pop
shll
xlat
loope
inc
cmp
pop
mov
pop
int3
scas
nop
out
mov
cld
in
adc
loop
add
jmp
xchg
mov
cwtl
xchg
test
inc
sub
jmp
das
lods
mov
dec
insb
inc
fimuls
add
aas
repnz
fdivrs
push
loopne
aam
aam
insl
jnp
jb
jge
jnp
jge
cmp
inc
sub
je
cli
adc
push
cli
fidivs
adc
dec
pop
xor
dec
fildll
mov
popf
or
sub
mov
shlb
jne
pop
pop
repz
jae
and
in
sub
push
stos
in
or
ljmp
inc
mov
ficoms
andb
fdivs
jns
aam
jmp
dec
lds
inc
mov
outsb
jo
je
add
pusha
push
hlt
xchg
dec
stos
fstpl
loopne
sbb
adc
inc
movsl
loopne
xor
loope
dec
das
push
mov
int3
mov
mov
mov
fnstsw
icebp
movsb
pop
outsb
movsb
enter
lds
push
in
mov
and
dec
loopne
jle
arpl
shll
mov
adc
fidivrl
mov
xchg
pop
fcmovnb
hlt
adc
int
and
loope
xor
jo
scas
pusha
push
mov
sbb
popa
mov
or
inc
fildll
ret
fs
push
bound
into
fxrstor
fnstcw
pushf
mov
test
or
in
jbe
jne
xlat
ja
or
psadbw
add
jne
xchg
dec
into
scas
adc
mov
out
jmp
loop
and
fildll
aad
out
aam
loope
ljmp
jmp
jo
fnstenv
add
int3
push
xchg
and
lods
mov
mov
mov
add
mov
loopne
cmp
xchg
inc
jae
xchg
enter
ja
pushf
xor
jmp
jecxz
mov
test
std
std
int3
sub
roll
imul
or
sti
rcrl
add
pop
xchg
cwtl
add
es
xor
lahf
jb
dec
scas
push
mov
mov
aaa
int3
aaa
adc
inc
call
inc
lds
leave
leave
jp
test
in
cmp
inc
push
or
popa
dec
fldcw
and
shrb
movsb
mov
loop
add
inc
cmp
dec
or
in
jae
mov
insb
xorl
xchg
shrb
test
test
out
and
dec
and
xor
mov
inc
sub
shlb
gs
rcrl
andb
mov
dec
test
mov
add
fnsave
and
nop
xchg
or
call
addr16
pop
pop
mov
push
leave
stos
cli
inc
outsb
iret
ret
sbb
or
ds
xchg
xchg
enter
pop
in
adc
mov
sti
repz
xchg
cltd
clc
mov
jne
sbb
les
jecxz
adc
and
nop
cmp
sti
js
stos
sti
adc
pop
test
mov
pusha
popf
mov
in
push
aam
loop
fldt
fstpl
ss
fldl
jno
mov
rol
sahf
adc
pop
divb
lret
ficoms
shll
popa
repz
jne
repnz
addl
cld
jg
xchg
dec
cwtl
les
adc
sarl
jmp
and
pusha
iret
mov
adc
stc
push
push
loopne
das
ret
pusha
cmpsb
lea
out
out
enter
pop
bound
sbb
es
jb
pop
nop
xlat
xlat
pop
mov
sti
pop
mov
cmpsb
add
mov
je
ja
punpckhdq
sbb
sar
pop
mov
addl
lahf
cmpsb
leave
jg
ss
mov
aaa
out
sub
fwait
cmp
outsb
inc
or
iret
dec
std
push
pop
adc
rclb
mov
lea
jl
add
testl
sub
inc
sub
iret
pop
test
cmpsb
adcb
out
xor
ret
and
repz
sub
js
mov
xor
pushf
push
add
push
and
je
scas
fisubrs
cmp
cli
inc
inc
dec
mov
loop
lds
or
idivb
xchg
rclb
sarb
out
test
mov
pop
test
dec
or
adc
push
push
push
addl
idiv
mov
adc
and
lds
mulb
shll
add
mov
pop
scas
cmpsl
imul
mov
lods
mov
test
enter
dec
movsb
insb
jno
mov
mov
pop
mov
add
scas
enter
sub
add
cs
pop
adc
mov
inc
cmp
dec
lahf
lret
aaa
adc
lcall
add
push
into
hlt
sbb
sub
jmp
xchg
inc
fsubrs
jo
leave
mov
jnp
cmp
mov
enter
cmc
int
je
pop
mov
jae
mov
push
adcl
inc
push
dec
xchg
sahf
cmp
outsb
scas
push
push
push
es
mov
dec
pop
movsb
xchg
ds
sti
sti
mov
dec
out
shlb
pop
cmp
out
xor
pusha
shlb
popa
jnp
dec
push
in
jecxz
xor
fdivrl
mov
mov
inc
cmp
outsb
sub
aaa
pop
mov
xchg
jns
mov
imul
hlt
sbb
leave
das
dec
hlt
xor
orb
nop
orl
adc
sbb
push
pop
sahf
pop
sbb
into
push
aam
loope
or
fmull
pop
rolb
xchg
inc
pushf
imul
cmp
aas
xor
pop
jo
mov
sbb
inc
sbb
aas
mov
mov
dec
outsb
fstp
lods
push
mov
hlt
clc
rorb
lods
shr
cwtl
das
jl
mov
adcl
scas
or
jns
cmp
cmp
lds
add
or
ljmp
cwtl
lret
pop
jns
inc
das
insl
pushf
les
scas
mov
and
out
pop
lods
stc
mov
cmp
out
push
loope
popf
xor
sub
xlat
pushf
inc
mov
ljmp
in
push
push
scas
push
gs
fstl
jl
mov
xlat
pushf
sbb
enter
insb
mov
jbe
or
sub
stos
xlat
sub
lcall
popa
jge
cltd
aas
andb
pop
and
xchg
sub
sbb
inc
push
insb
mov
sarb
lods
aas
out
loop
movsb
push
mov
imul
push
mov
mov
or
iret
cmc
push
dec
sub
aad
push
and
hlt
adc
xchg
lock
es
cmpsl
mov
pop
adc
mov
xchg
lea
mov
in
movsb
pusha
dec
mov
pop
js
gs
sub
lret
out
mov
ret
pop
ljmp
dec
incb
push
dec
pop
js
add
js
and
bound
pop
clc
decl
inc
sbb
mov
call
es
insl
pop
dec
lahf
loope
orl
stc
xorl
in
xchg
jg
test
test
popf
cmp
aam
mov
movsl
iret
lods
sbb
cmp
arpl
aam
icebp
add
rolb
ds
mov
mov
std
dec
adc
inc
or
pop
jno
sbbl
pop
pop
ja
call
xchg
sbb
push
xchg
push
sbb
or
movsl
in
mov
inc
mov
icebp
jae
cmp
adc
mov
movl
gs
inc
pop
dec
xor
insl
icebp
mov
sarb
cmp
jge
sub
pop
sarb
xchg
sub
jo
xchg
sbbl
mov
and
mov
pop
cmp
xor
ret
je
test
xchg
adc
push
xchg
call
adc
fisubrs
push
and
std
ljmp
js
nop
jg
mov
ss
jl
in
xchg
push
cld
gs
divb
jmp
mov
in
iret
shrl
lcall
outsb
std
lods
jp
inc
sahf
mov
add
xchg
imul
fsubl
cmp
xchg
and
dec
sbb
adc
test
sub
pop
icebp
jne
pop
cli
test
movsb
jmp
es
leave
addr16
pop
ds
or
mov
outsb
dec
inc
push
mov
stc
fldenv
mov
lock
rcll
daa
mov
lahf
cltd
sbb
inc
es
jne
mov
lret
jae
jo
push
into
sub
in
adc
into
sub
inc
pop
xor
test
pop
lret
push
pop
sub
jg
mov
and
adc
jae
and
sbb
jnp
rcll
sbb
mov
dec
aad
adc
sub
imul
loop
mov
inc
xchg
loope
mov
sarl
cmp
sbb
cmc
test
jl
sti
sbb
xlat
in
pop
arpl
xor
xchg
and
scas
and
cli
jns
jmp
sub
insb
pushf
mov
es
fs
sub
sti
add
mov
mov
repz
in
sub
daa
lcall
jno
hlt
xchg
sbb
fdivrl
stos
mov
mov
push
cmp
pop
bound
das
mov
pop
xchg
lret
push
lods
dec
mov
rcrl
hlt
out
jae
mov
and
pop
mov
xor
arpl
pop
jmp
jle
pop
dec
repz
dec
sub
lcall
repz
cmp
adc
cld
decb
into
adc
es
sub
aas
shlb
dec
repnz
icebp
jns
sbb
cmp
cmp
add
add
add
lcall
push
incl
mov
inc
jnp
test
test
mov
inc
fmuls
adc
test
xor
cmp
mov
rorb
sub
cmp
addl
imul
mov
push
mov
fwait
mov
or
jns
cmpsb
xchg
stc
outsl
adc
pop
mov
lods
mov
scas
jae
mov
repz
fstpt
daa
loope
loope
hlt
dec
sbb
lods
jp
sbb
fs
mov
in
call
gs
adc
ja
ljmp
or
std
jno
mov
sbb
jecxz
lods
mov
gs
xor
aaa
push
sti
cli
sbb
in
mov
into
xchg
pop
fsubl
test
fwait
stos
and
xor
lcall
jbe
mov
jnp
mov
lds
mov
sub
popa
es
faddl
icebp
or
and
imull
pop
scas
rcrl
enter
mov
jl
or
add
outsl
les
and
setae
xchg
add
xchg
push
pop
std
inc
addl
push
in
or
pop
rcrb
dec
or
mov
jno
inc
pop
adc
pop
imul
out
add
inc
loopne
stc
mov
inc
xor
ljmp
shrb
inc
dec
shl
inc
adc
jne
je
addr16
jnp
out
movsb
ud0
adc
inc
and
fcmovbe
jne
fs
out
dec
ret
insl
jnp
add
icebp
in
xchg
das
call
jno
cltd
push
orb
xor
dec
adc
mov
pop
sti
push
inc
add
jo
sbb
mov
pop
iret
inc
cmp
mov
fcoml
dec
lods
mov
les
aaa
orl
sub
lret
push
lock
in
in
filds
imul
add
xchg
pop
pop
and
cmp
sarb
enter
aad
rcl
hlt
cmp
rcr
rcrl
out
test
movsl
push
fs
sti
in
adc
sub
out
dec
jns
jae
sahf
dec
jb
icebp
add
addb
mov
out
push
rclb
cmc
stos
pop
or
loop
in
sub
mov
push
psadbw
test
sti
dec
dec
sub
pop
lret
jmp
inc
mov
ret
rcrl
loopne
mov
dec
lods
add
mov
rorl
xor
push
fstpt
sbb
dec
pop
sbb
mov
nop
push
test
outsb
sub
mov
cld
je
cmp
mov
sbb
pop
add
dec
mov
cmpsb
pop
jae
test
out
mov
jmp
mov
incl
ret
shrl
imul
ss
push
les
add
mov
push
rol
mov
cwtl
or
cli
xor
xchg
adc
lret
mov
les
leave
loopne
mov
repz
pusha
jne
decl
pop
jmp
movsb
sub
xlat
xorb
test
dec
inc
or
or
add
fsts
xlat
int3
and
mov
hlt
sbbl
push
xchg
loopne
lock
xor
movsl
int
test
lea
jae
pushf
push
cmp
pushf
shr
lret
aaa
js
mulb
sbb
xchg
jp
xchg
lahf
in
xchg
xor
mov
into
cmp
pop
insl
cmp
ja
jns
xor
inc
push
jns
ljmp
pop
pushf
push
aaa
dec
dec
sub
mov
imul
cmp
aaa
sti
pop
sub
xchg
stc
fists
jmp
sub
es
mov
js
leave
fdivl
xchg
notb
in
push
or
std
imul
subl
sarl
js
in
sbb
cld
outsb
aam
loopne
and
sarb
pusha
hlt
and
cmp
in
xchg
jnp
adc
scas
ljmp
shrb
or
push
dec
push
daa
fs
pop
add
incl
inc
xor
mov
cmpsb
pushf
sti
test
ror
hlt
sbb
xor
addl
sub
addr16
test
pop
mov
mov
dec
test
pushl
mov
cmp
lret
xor
jno
sbb
mov
popa
outsb
imul
sahf
push
mov
xchg
rcll
cmpsl
inc
cs
sbb
stc
dec
mov
ds
push
sar
pop
mov
cmpsb
fistpll
icebp
pop
mov
les
xor
dec
mov
test
stos
repnz
dec
sti
and
jg
lock
aad
adc
inc
out
fwait
aaa
inc
jmp
and
ss
addr16
imul
push
pop
icebp
arpl
adc
outsl
data16
xchg
sub
and
pop
push
mov
or
or
or
dec
out
adc
or
cmpsl
lods
and
xchg
daa
lcall
shrb
jbe
sbb
repz
add
pop
jbe
cmpsl
ror
cmp
xor
mov
sub
or
xlat
orl
push
aas
cld
das
test
cmpsb
jg
in
lods
cmp
les
lods
sti
leave
xchg
cmp
ret
pop
je
cmp
loope
popa
mov
int
lcall
sub
or
jb
repnz
bsf
mov
sahf
cmp
sub
sahf
insb
xor
mov
jp
sbb
inc
adcb
imul
and
aaa
add
insb
shl
iret
out
mov
hlt
icebp
add
mov
das
in
jl
cmp
shll
test
jb
push
fwait
das
popf
lock
dec
mov
push
call
dec
lret
xchg
ficomps
push
cmp
idivl
and
cli
mov
mov
xor
sub
faddp
dec
dec
sub
mov
jbe
inc
sbb
inc
jae
jo
pop
adc
cltd
insb
pop
mov
int
push
mov
adc
cld
sbb
jae
push
aas
pop
lcall
daa
adc
push
and
xor
in
sbb
fsubrs
inc
pop
imul
fdivr
rclb
or
inc
inc
adc
and
leave
push
xor
sbb
sti
sub
dec
mov
mov
jp
jns
mov
sbbb
in
enter
cmpl
loope
xlat
jecxz
popa
pop
xchg
dec
jns
outsl
dec
mov
adc
and
leave
mov
test
shl
popf
div
pusha
cli
sbb
mov
cmc
std
ljmp
out
sub
dec
aas
adc
cwtl
sti
xchg
cmp
push
mov
fs
decl
in
dec
movsl
out
xor
std
sahf
or
pop
test
push
imul
adc
sub
dec
test
lods
cld
or
pusha
mov
push
sbb
cmc
inc
sub
jne
xor
inc
ret
lcall
sbb
aam
rcr
xor
inc
orl
adcb
aam
xchg
adc
inc
or
xor
dec
push
scas
sub
lods
mov
shrl
fwait
idivb
mov
hlt
sbb
ds
movsl
ret
mov
jp
jmp
iret
mov
je
inc
or
bound
adc
xchg
xchg
stos
fnstenv
pop
sub
adc
add
outsb
push
jno
xchg
vmovaps
push
mov
inc
sub
mulb
insl
jmp
sar
push
js
or
fisubrs
mov
iret
sbb
fisttpll
test
es
fucomip
fs
clc
mov
xlat
mov
push
imull
daa
jmp
pop
sti
test
pop
pop
cmp
or
ret
lds
ds
popf
or
int
xchg
mov
mov
subl
jp
stos
jge
inc
xchg
sbb
or
cmp
inc
dec
mov
icebp
lcall
lods
jb
int3
push
sbb
add
inc
inc
pop
add
dec
push
lret
and
xor
in
pop
int3
andl
test
leave
sbb
adc
mull
clc
fwait
pop
out
mov
xor
mov
lret
push
cmpsl
lret
jmp
lods
repnz
jmp
dec
fistps
cli
call
and
inc
pop
test
in
mov
fisubrs
mov
repz
scas
mov
fwait
out
sbb
fisubrs
jg
jmp
mov
push
test
pop
negl
jge
dec
leave
inc
popf
in
cmp
test
inc
repz
arpl
mov
shlb
lret
or
jmp
sti
ljmp
sbb
add
xchg
pusha
push
icebp
push
pop
xchg
fsubs
rclb
xlat
ficoms
ja
jb
mov
mov
push
int3
insb
imul
and
add
decb
mov
js,pn
sar
add
je
testl
dec
inc
jnp
mov
sub
lcall
mov
mov
push
push
mov
mov
icebp
lret
pop
mov
inc
daa
mov
and
mov
or
jne
repnz
xchg
aad
pop
push
mov
xor
dec
loop
cmp
sti
sarl
les
call
sbb
movl
mov
cs
fmulp
int
inc
imul
dec
out
push
mov
and
mov
jmp
outsl
cmp
ss
lea
js
jo
sub
push
mov
and
shrl
adc
arpl
mov
test
mov
orps
imul
dec
xchg
inc
add
out
call
inc
loopne
in
pushl
shl
push
ret
adc
test
loope
loopne
xor
pop
xor
scas
movsl
dec
push
cmp
rolb
mov
push
pop
rorb
and
in
jns
jae
sub
add
div
add
fsubs
ds
sahf
adc
cmpsb
push
iret
mov
pop
insl
inc
insb
sbb
in
push
lret
sub
les
scas
jbe
js
push
push
jo
push
out
aas
xchg
arpl
adc
popf
lods
xor
inc
test
sub
dec
outsb
in
jnp
cltd
cmpsb
lahf
subb
into
cltd
nop
pop
stc
std
stos
xor
mov
cmp
mov
inc
fs
in
sbb
sbbl
push
sub
pop
mov
mov
addb
pop
js
rol
xor
mov
xchg
dec
or
pop
cwtl
push
xlat
lret
add
dec
loope
push
in
xchg
xchg
lret
pop
cmp
push
stc
xor
insb
push
out
xor
mov
jo
lds
sub
xor
es
paddd
scas
pop
xor
mov
ss
test
xchg
jl
mov
jns
imul
sbb
sti
dec
and
mov
outsb
adc
mov
inc
test
or
dec
push
sub
popf
out
pop
je
fdivrl
dec
xchg
leave
cmc
pop
mov
sbb
mov
jmp
sbb
mov
xlat
mov
adc
push
fiaddl
lods
mov
xor
xor
stos
loope
mov
cld
sbb
lret
sub
add
fldt
rorb
lret
inc
xlat
push
inc
ret
stc
lock
inc
push
lock
cmpsl
and
jno
inc
sub
cmp
mov
stos
test
adc
dec
mov
mov
and
pop
cmp
jns
loope
ss
xchg
ja
jo
mov
pop
dec
idivb
sbb
xchg
sub
mov
or
rorb
fbld
cld
jbe
or
aad
push
pusha
or
mov
loope
movsl
mov
into
jne
jmp
adc
je
jmp
loope
fmulp
push
sbbl
lods
fistps
xchg
repz
pop
push
ret
test
or
es
sbb
rdmsr
lods
jb
cld
cs
jmp
jns
jne
push
jbe
stc
sub
jg
cmc
test
aas
leave
rcl
das
ds
jo
cld
leave
sub
inc
mov
stos
push
dec
out
adc
movl
sub
pop
stc
mov
inc
movb
out
mov
mov
in
push
arpl
adc
daa
repz
jae
repnz
push
test
inc
int
cltd
jns
mov
out
leave
sarl
mov
movsb
inc
pop
cmp
xchg
subl
into
dec
xchg
dec
mov
xchg
in
sub
mov
mov
stos
sti
ficoms
mov
dec
movsl
out
sbb
jno
call
and
or
mov
aaa
aad
mov
push
pop
bound
mov
and
iret
push
add
add
inc
loope
add
xor
rcll
add
mulb
jmp
out
mov
or
loopne
in
dec
out
fdivs
cmp
xchg
lret
neg
divl
mov
mov
aas
pop
dec
dec
sub
mov
inc
cltd
fnstenv
mov
enter
mov
cmpsb
xor
sbb
lret
adc
enter
mov
arpl
aas
popf
out
fucom
mov
push
ja
loop
pop
add
cmc
loop
cmp
rorl
incl
and
cmp
inc
lock
imul
fnstsw
push
xor
mov
insb
mov
pop
mov
dec
cmpsb
testb
mov
fidivrl
ret
xchg
dec
cmp
and
sub
pop
dec
leave
out
mov
addl
push
pop
cmp
ds
push
adc
xlat
lods
je
mov
sub
stc
lods
dec
in
stos
cmp
in
aam
daa
cmp
pop
idivb
arpl
push
pop
inc
xor
mov
adc
mov
xor
addr16
aam
mov
scas
pushf
in
jecxz
pop
add
add
movsb
dec
lds
popa
fistpl
repz
mov
inc
and
bound
adc
lock
dec
or
lods
xorl
test
test
stos
inc
inc
push
mov
dec
jnp
je
inc
in
stos
add
and
je
bound
push
call
cmpsl
cli
jecxz
sub
push
sbb
lret
jbe
std
stc
enter
xchg
add
xchg
fsubrs
mov
ret
xorb
scas
push
pop
test
push
arpl
scas
pop
scas
movsb
push
scas
enter
or
rclb
jbe
push
cmp
cltd
insl
stc
sub
sbb
mov
push
clc
mov
push
into
popf
shrl
inc
inc
repz
loopne
xchg
add
lods
in
adc
dec
insb
xchg
mov
cs
outsl
pop
mov
imul
inc
cli
push
cmp
arpl
or
addr16
js
repz
or
in
dec
inc
sub
std
dec
sub
and
loope
aas
cs
scas
mov
jae
jecxz
pusha
xor
cmp
jae
push
mov
adc
gs
inc
or
push
gs
mov
lret
and
mov
adc
cmp
mov
repz
jecxz
popl
rcl
fsubs
insb
stos
popa
fnstsw
clc
dec
push
cli
sbb
nop
je
insl
add
mov
mov
push
jg
jnp
test
sbb
dec
pop
jbe
dec
jecxz
mov
mov
lret
rcl
cmp
cltd
iret
int
cmp
pop
cmp
icebp
push
mov
mov
jbe
xchg
enter
sub
fldcw
cmp
mov
pop
insb
je
mov
dec
and
mov
cmc
xchg
inc
daa
push
les
xchg
sbb
daa
xor
mov
jp
sbb
cmp
adc
xor
icebp
add
sets
fs
les
test
mov
jecxz
mov
cmp
xor
stos
ret
out
stc
cmp
push
xchg
xchg
les
aaa
xchg
bound
push
shlb
inc
cmp
jg
dec
pop
mov
lock
and
repz
xlat
xor
cmp
cmpsl
mov
dec
pmaddwd
out
lret
sarl
cmp
sbb
mov
arpl
test
add
or
enter
out
jmp
repnz
in
mov
sarb
xor
add
xor
pop
inc
xor
fwait
mov
mov
push
int
dec
ljmp
fsubs
and
popa
loope
imul
ds
in
fs
iret
dec
add
jns
lods
xor
lods
out
jae
add
test
clc
cwtl
jno
arpl
jmp
cmp
mov
fwait
push
or
push
jnp
leave
cmpsl
mov
mov
mov
mov
je
repz
fsubr
mov
int3
sub
popf
nop
mov
jb
push
leave
xchg
inc
decb
fldl
movsl
dec
xor
hlt
mov
out
aam
aas
and
ret
mov
xor
inc
or
push
inc
dec
rcll
iret
cmp
mov
popa
shufps
mov
xchg
inc
mov
int3
add
scas
bound
mov
divb
push
and
addr16
insl
rcll
pushl
aam
lret
sub
int3
mov
mov
popa
dec
in
push
cmp
inc
push
cld
xchg
daa
push
sti
int3
add
test
popf
xor
outsb
xor
in
inc
sub
outsl
add
xchg
pop
movsbl
or
cmp
xor
pop
adc
addb
test
and
test
pop
mov
cmp
add
jmp
push
and
jno
cltd
ljmp
xchg
movsl
popa
jecxz
push
pop
xchg
or
xchg
push
push
dec
mov
add
out
rorl
pop
loope
push
sub
mov
pop
xor
stos
arpl
idivb
repnz
fdivs
jbe
inc
or
inc
lds
test
cmp
cmp
loopne
pop
fwait
inc
imul
lahf
int
mov
push
jne
dec
and
ficomps
sub
lods
stos
outsl
mov
push
sub
push
mov
iret
pusha
mov
movsl
mov
idivl
nop
sahf
fiadds
ds
insb
testb
into
mov
into
pop
cmp
sub
xor
jno
push
adc
aaa
ds
scas
xchg
fwait
push
ja
add
adc
xor
push
loop
xchg
cmpsl
mov
scas
mov
pop
jl
arpl
test
or
icebp
bound
jne
std
test
les
adc
imul
clc
pop
xor
rcll
in
cwtl
mov
mov
in
movsb
lcall
shlb
hlt
cmpsb
jge
aam
cli
mov
sbb
jecxz
popl
adc
gs
jmp
ret
rclb
mov
inc
xlat
dec
jge
adc
les
inc
repnz
test
mov
lods
les
and
and
in
cmpsb
dec
cmp
jne
fimull
sar
mov
aad
sbb
ljmp
ficomps
fdivr
lret
lahf
xchg
push
xor
inc
ss
sub
loopne
inc
mov
xchg
lcall
adc
xchg
cmc
ficoms
jno
xchg
stos
or
cmpsb
test
lods
clc
rol
movsb
nop
into
xchg
mov
dec
sub
xchg
icebp
in
insb
loop
call
or
jae
mov
adc
pop
ret
jle
fwait
rcll
mov
out
mov
cmp
xchg
cld
sub
cmp
stos
cmp
xchg
lods
cmp
pop
push
and
test
mov
cwtl
enter
and
jp
dec
mov
icebp
xchg
out
out
cmp
cmp
outsb
and
mov
add
lods
pop
add
call
push
add
xchg
adc
jl
push
popa
jae
scas
mov
mov
imul
idiv
out
scas
inc
sbbl
mov
das
fistpl
imul
sarb
jns
cwtl
sbbb
out
movsb
clc
sbb
ds
push
xchg
in
cli
into
test
ja
jmp
mov
lea
dec
push
xchg
inc
out
xlat
sub
dec
sub
cmp
jno
cmpsl
pop
leave
or
sbb
popa
push
adc
dec
sub
test
or
js
or
ret
fdiv
mov
cmp
sub
dec
loop
jns
lcall
inc
sarb
mov
cs
int3
leave
cmp
mov
out
mov
inc
shl
fcoms
adc
scas
cmp
jge
repnz
ret
pop
mov
and
jl
test
inc
sub
test
jge
lahf
jo
popa
scas
daa
outsb
sub
inc
jbe
popa
mov
in
cs
loope
pusha
icebp
sub
jmp
pop
ds
mov
jb
std
hlt
stos
push
scas
enter
aad
mov
push
imul
rcr
mov
pop
lahf
test
cwtl
adc
arpl
or
stc
sbb
jecxz
mov
jle
and
adc
rclb
fidivrl
inc
ds
mov
sub
cmp
or
and
pushf
push
fwait
add
push
jns
cmp
std
cmpsb
add
out
pop
inc
out
sub
dec
stos
fldenv
xor
or
add
mulb
push
jns
ret
sub
aad
mov
fwait
pop
or
fldt
lret
push
sbb
js
imul
push
outsl
mov
push
add
mov
xor
std
je
sarl
dec
loope
jae
sbb
inc
inc
aam
out
dec
or
push
xchg
adcb
in
pop
xchg
mov
push
popf
shrb
fsubr
sub
arpl
dec
dec
out
dec
loop
mov
test
cmp
mov
or
int
sbb
ret
shrl
adc
je
cmpsl
cmpxchg
push
fadds
cwtl
inc
sbb
add
jae
jmp
cli
pusha
popf
pop
popf
orb
cmp
dec
cmp
pop
leave
adc
push
and
mov
sub
out
jl
xor
in
jle
js
pop
shll
push
xchg
les
mov
andb
arpl
mov
jo
mov
loope
fs
cli
stc
js
cwtl
mov
loopne
enter
movsb
fsubp
jge
pop
lret
inc
jnp
in
pusha
sub
mov
fdiv
inc
ret
roll
cmp
xor
pop
dec
push
mov
sbb
mov
dec
xchg
js
mov
pop
and
repz
or
sbb
add
pop
stos
cwtl
in
lret
mov
sub
sahf
neg
adcb
mov
test
push
addl
xchg
mov
or
roll
movsl
xorb
mov
mov
fwait
mov
cmp
arpl
daa
xchg
add
ds
test
scas
pop
aam
push
sbb
incb
bound
das
sti
iret
orb
jbe
xor
adc
or
mov
sub
dec
mov
call
add
xor
push
cmp
ret
out
mov
jmp
fistpl
mov
cmp
fiadds
cld
push
in
cmpsb
and
aam
repz
push
mov
ficoms
mov
loope
push
scas
test
loopne
or
in
lret
pop
mov
dec
outsl
dec
daa
jns
dec
fstps
ja
movsl
cmp
jecxz
call
stos
xor
sub
inc
inc
orb
mov
pop
mov
outsl
imul
inc
pop
je
sub
adc
das
ljmp
adc
xchg
scas
stos
call
adc
ljmp
stc
mov
sbb
inc
xchg
sub
xor
xchg
ret
into
loop
pop
xchg
jne
pushf
scas
add
repz
push
repz
push
popf
gs
mov
insl
popa
aaa
outsl
mov
cmc
sbb
ljmp
mov
rclb
outsb
and
add
mov
lods
push
test
cmpsl
sbb
les
cmp
insl
cltd
push
push
cmp
movl
pop
dec
aam
cltd
sub
pushf
fwait
xchg
xchg
dec
pop
ficompl
mov
or
mov
ss
cs
dec
pushf
stos
xor
mov
inc
popa
sub
sub
jecxz
push
pop
into
popa
fisttpl
int
pop
int
mov
bound
imul
cmc
dec
repz
sbb
adc
add
jnp
mov
js
push
aaa
cmp
pushf
int
sub
inc
sub
dec
in
out
pop
shlb
push
sarl
rcll
dec
jge
adc
xor
sbb
add
lds
pop
int
or
fimuls
nop
mov
je
test
adc
icebp
pop
mov
imul
push
leave
jbe
lods
movsb
stos
aaa
std
movsb
rcll
imul
cmp
iret
or
daa
jno
arpl
mov
fnstcw
out
scas
mov
jbe
mov
test
frstor
mov
inc
jb
ja
mov
adc
pop
inc
scas
add
loop
enter
and
pushf
xlat
ljmp
mov
loope
lret
jns
xor
pop
stc
imul
mov
push
mov
lds
dec
ret
ljmp
or
inc
pop
mov
fxch
push
lods
xchg
pop
mov
jb
leave
cwtl
cmpl
stc
or
xchg
pushf
mov
sbb
jae
stc
mov
adc
sub
jmp
repz
movsb
out
jecxz
ficoml
mov
stos
jmp
or
mov
cmp
jmp
xchg
xor
mov
mov
iret
loope
lods
and
jecxz
fiadds
mov
sbb
push
dec
add
push
lods
sub
ret
xchg
test
lock
xor
push
ss
mov
or
daa
popf
sub
xchg
aaa
inc
dec
arpl
dec
mov
out
seta
adc
add
dec
mov
add
outsl
ret
push
out
mov
cmp
pop
xchg
movsb
jne
inc
faddp
xor
mull
xchg
inc
and
mov
hlt
xchg
sub
inc
js
fwait
sub
dec
xchg
jo
out
aaa
xor
jo
es
and
sub
mov
inc
push
insl
cmc
call
cmpsl
int
repz
repnz
sbb
mov
xchg
pop
lods
dec
loop
mov
movsb
push
loopne
repz
iret
xchg
adc
daa
es
loope
rep
int3
ret
and
test
scas
fsts
ljmp
cmp
xchg
in
xor
in
mov
jae
es
popa
pop
stos
loopne
sub
dec
xchg
mov
mov
les
mov
xor
xchg
pop
jmp
mov
inc
xchg
xor
sbbl
mov
mov
push
pusha
xchg
je
xchg
mov
jg
pushf
hlt
dec
adc
std
dec
in
xchg
icebp
mov
mov
push
ds
xor
xor
lcall
pop
cmpsl
ljmp
aas
jmp
popf
idivb
pop
in
sti
pop
mov
out
sbb
sub
xor
aaa
shlb
fwait
sub
mov
xchg
inc
fcmovne
mov
insl
lcall
fldenv
jle
out
int
iret
mov
and
push
rol
adc
xadd
or
mov
xor
aas
test
sub
fisubrs
or
rep
arpl
cmpsb
rclb
repnz
loop
arpl
sub
dec
sbb
int
xor
xchg
xchg
js
add
subb
push
test
jbe
es
mov
mov
andb
shll
mov
sti
in
repnz
lds
aam
or
inc
inc
data16
cmp
mov
decb
xor
xchg
push
dec
js
scas
insb
mov
mov
std
mov
add
ficompl
int
frstor
adc
adc
mov
and
xlat
aad
dec
fmul
incb
xchg
sub
flds
es
xor
dec
pop
adc
pop
cmp
mov
pop
adc
xchg
pushf
pop
cwtl
decb
inc
ds
sbb
xchg
in
mov
pop
sbb
es
sbb
xchg
jo
ret
mov
mov
mov
mov
or
or
daa
sub
push
add
or
cmp
in
inc
in
add
xchg
test
cs
aaa
cli
in
mov
pop
and
in
lcall
adc
and
movb
ljmp
pop
fmuls
lret
adc
push
cmpb
pop
or
xlat
and
rcrl
or
pop
mov
xor
iret
and
sbb
aaa
call
imul
cmpsb
adc
mov
adc
rorb
jbe
fidivs
pop
push
clc
adc
push
bound
adc
clc
scas
xchg
inc
jnp
and
fs
adcl
ds
inc
dec
jne
scas
or
jge
sub
mov
or
in
movsl
enter
mov
rcl
mov
or
sbb
dec
sbb
in
push
pop
in
add
jmp
js
insb
popa
mov
bound
jne
gs
aad
or
mov
jbe
je
out
in
jnp
and
cmpsl
mov
sbb
loopne
add
iret
cmp
lds
pop
mov
jo
nop
xchg
jge
pop
mov
or
ficompl
cmc
xor
sbb
popf
pushf
mov
jl
sahf
adc
or
inc
insb
dec
xchg
pop
add
pop
mov
fwait
push
pop
ss
mov
pop
cmp
inc
inc
fcomp
lret
xor
test
dec
repz
lea
sub
xchg
insb
out
mov
adc
sub
lret
sub
adc
fmul
out
ss
cli
les
push
xchg
enter
jnp
xchg
loopne
sub
punpckhbw
pop
xor
sub
adc
lret
mov
xchg
imul
arpl
add
mov
cmp
push
push
nop
push
jb
adc
cwtl
push
jecxz
mov
test
lds
cltd
lea
pop
ror
sbb
pop
add
add
push
out
pop
dec
insb
insl
fstpt
mov
and
sub
insl
in
mov
or
pusha
add
adc
test
aaa
add
ret
inc
xor
pop
xchg
jns
sub
gs
lret
pushf
xchg
push
or
lret
fcmovu
js
rcll
or
test
and
or
into
ljmp
es
mov
icebp
lds
xor
fidivl
imul
ja
mov
xchg
fistps
das
add
andl
subb
and
mov
repz
int3
mov
push
mov
gs
int3
loope
add
mov
push
jg
jne
ret
js
cwtl
dec
dec
pop
nop
ficomps
negl
movsl
inc
cmp
mov
hlt
movsb
adc
aad
iret
jo
aas
popf
cmp
aam
fistpl
or
bound
fistpl
lret
push
scas
mov
shr
jmp
inc
jle
sub
in
orb
mov
mov
xchg
push
andb
jle
push
xor
adc
mov
imul
cmp
dec
mov
scas
rorb
dec
adc
ret
sub
fsubl
out
loope
sti
std
xchg
xchg
sbb
pop
push
and
dec
adc
mov
mov
mov
out
lock
das
lret
pop
je
stos
xchg
ja
xchg
shrl
xchg
pop
fdiv
and
fisubs
negl
loope
aaa
or
icebp
ljmp
inc
cmpsb
push
scas
movsl
mov
xchg
sbb
and
fwait
loop
mov
fwait
test
push
loope
ficoms
popa
dec
stos
mov
or
shr
cmp
bound
popa
xchg
adc
das
mov
ds
loop
leave
imul
popa
fcmove
test
out
pop
add
out
rcr
xor
cmp
arpl
jbe
test
fwait
jmp
jmp
inc
sbb
dec
hlt
xchg
jl
push
into
mov
or
jbe
or
ds
shrb
cmp
push
imul
cmp
mov
sbb
jae
cmp
mov
xchg
add
lahf
push
add
jo
push
out
sbb
lahf
mov
mov
sub
dec
mov
pop
and
mov
inc
adc
es
out
in
jg
sbb
aas
mov
xchg
mov
jmp
push
push
xor
popa
cmp
sbb
sti
aad
aam
mov
adc
out
int3
popf
add
xorb
mov
loope
test
loopne
pop
in
inc
mov
mov
dec
jb
cmovne
mov
push
cli
inc
push
sub
popf
arpl
cwtl
sub
out
loop
loop
jb
cmp
cs
cmp
or
mov
mov
daa
pop
in
jl
pop
ret
sub
fsts
mov
push
pop
push
sbb
push
and
dec
mov
popl
sbb
daa
cs
sti
out
add
pop
stc
dec
mov
jp
add
je
adc
faddl
dec
xorl
mov
inc
aad
out
andl
fimull
add
fisubl
outsl
and
rclb
fcmovne
test
and
repnz
xchg
push
ret
fstps
cmp
jb
test
and
cmpsl
mov
sbb
lock
fdivs
pop
push
ss
sbb
imul
scas
cmp
sbb
mov
mov
mov
xor
das
xchg
js
mov
xchg
fwait
dec
jg
or
add
mov
cli
xchg
dec
pusha
pop
cmp
insl
out
fisttpl
cwtl
test
int3
xor
and
lret
mov
sti
pop
sbb
mov
loopne
xchg
jbe
ljmp
sbb
push
add
rcr
push
mov
test
imul
call
cwtl
mov
mov
mov
cmp
pop
push
test
jmp
cwtl
ret
jmp
pop
les
sub
pop
jg
fnstenv
jb
add
mov
jg
lret
cmp
lods
popa
fdivrl
jge
sub
loope
xchg
push
push
js
dec
arpl
stos
rcrb
imul
inc
ficoms
mov
adc
lcall
sbb
lds
insb
or
pop
adc
adc
adc
adcb
outsb
shll
mov
ja
push
jae
lret
ret
cmp
push
jecxz
adc
fs
lcall
subb
bound
cmpsw
iret
out
sbb
cmp
sub
ficomps
and
mov
outsb
loopne
mov
out
mov
jp
jne
insb
cwtl
js
outsb
adc
fcoms
fwait
push
rclb
lahf
jecxz
or
push
push
mov
cmc
inc
jg
push
lds
in
xchg
das
negl
adc
jno
adc
xchg
imul
arpl
add
outsl
in
test
loope
inc
mov
sbb
sbb
sub
stc
fisttps
push
shlb
int3
mov
push
addl
cmp
jge
xchg
fs
inc
cmpsl
cs
mov
lret
push
xor
sub
and
ret
cmpsb
mov
loopne
inc
mov
jle
sbb
testl
xchg
xchg
jecxz
sbb
cmpsb
jb
sarl
pop
outsb
sub
jbe
out
ret
inc
nop
inc
xor
lcall
sbb
out
mov
jge
xchg
imul
test
xor
add
hlt
jle
insb
pushl
pop
cld
addl
and
inc
in
outsl
nop
arpl
les
andb
ds
xchg
jp
lret
mov
mov
test
cmp
sbb
imul
sbb
push
push
or
iret
fisttps
shrb
lods
pushf
fadds
mov
out
outsb
xlat
test
loope
push
push
jmp
push
jmp
jae
fstpt
std
jbe
and
test
ljmp
cld
test
mov
jp
add
ja
adc
xchg
dec
pop
dec
cld
mov
das
mov
ds
mov
add
fstpl
push
lcall
loop
mov
test
xlat
xor
nop/reserved
xor
imul
xchg
or
ret
rol
stos
jecxz
js
pop
dec
dec
xor
mov
sub
lds
js
nop
jno
stc
sub
add
aad
and
imul
push
sbb
mov
mov
and
dec
mulb
out
scas
in
mov
jp
jne
test
inc
or
ds
sbb
dec
add
cltd
push
xchg
mov
push
pop
xrelease
rcrb
adc
or
sahf
push
jo
lock
xor
sbb
adc
jb
and
sbb
out
xchg
and
int
daa
sbb
sub
mov
and
adc
sbb
ja
fmull
pop
lods
and
xchg
xchg
push
loope
ja
sti
mov
dec
int3
and
daa
sub
add
sub
xchg
xchg
cmp
fidivrl
add
sub
aas
jecxz
pop
and
push
call
jle
inc
pop
popf
clc
mov
sti
icebp
cld
mov
jle
out
and
inc
pop
fcompl
in
jno
lds
les
inc
xor
sbb
ficomps
ret
aas
test
rcl
cli
pushf
popf
mov
data16
jg
xchg
jmp
addr16
sub
outsl
xor
das
in
cmp
imul
movsb
ret
xor
repnz
xor
dec
sti
gs
sahf
pop
mov
sub
in
mov
cmpsb
andb
and
dec
sbb
or
popa
mov
mov
pusha
std
mov
fnstsw
out
inc
or
shrl
lock
jmp
into
shr
data16
js
inc
icebp
insl
mov
in
inc
js
scas
out
mov
lahf
jg
clc
out
enter
fstpt
repnz
test
sub
xlat
fnsave
in
shl
xchg
ljmp
add
mov
test
lds
and
mov
fs
mov
mov
data16
sbb
jno
push
mov
xchg
mov
jp
in
mov
ljmp
mov
fs
mov
outsb
adc
add
push
lcall
stc
adc
std
sub
out
mov
pop
jge
add
mov
sbb
sbb
add
sub
inc
xor
repnz
push
add
or
rcll
xchg
mov
inc
add
mov
leave
pop
xor
std
insl
sbb
scas
lret
sub
mov
inc
inc
movsb
iret
xchg
aam
sti
mov
push
jnp
insb
cwtl
mov
add
lods
or
or
data16
jp
and
mov
sbb
cwtl
and
inc
into
add
out
clc
repnz
sahf
dec
jnp
outsb
jb
xchg
fcmove
and
imul
push
data16
xchg
loop
jecxz
mov
sub
int3
leave
push
scas
in
push
add
arpl
mov
loopne
test
xchg
add
mov
cli
loop
fiadds
inc
sbbl
or
or
inc
test
call
shlb
pop
and
xchg
jg
cmp
push
mov
pop
mov
enter
or
jl
addr16
push
push
ljmp
or
dec
out
insb
dec
das
pushf
pop
aam
xchg
or
dec
mov
ds
jnp
inc
cmp
xor
imul
inc
adc
daa
fldcw
mov
and
inc
or
ljmp
daa
aad
mov
jg
pop
stos
xchg
lods
cld
and
rolb
jecxz
les
sub
cmp
dec
push
movsb
ret
shll
push
inc
jns
mov
jge
sbb
fs
pop
sbb
fldl
cmp
mov
jge
mov
xor
xchg
dec
lods
sti
cld
daa
out
fnstsw
int3
lods
add
cmp
lea
sbb
loop
sahf
testb
ljmp
sub
sti
jbe
sub
nop
bound
mull
lods
mov
out
jp
sbb
pop
jno
cmp
subb
xchg
leave
aas
xchg
sbb
sbb
rcrl
adc
sub
xchg
mov
cmp
loop
mov
xchg
cmp
outsl
or
inc
fidivrs
andl
jbe
pop
pop
add
sbb
outsl
fwait
popa
cmp
fstpl
push
pop
aas
ret
mov
rorb
cmc
xor
stos
mov
xor
pop
pusha
jo
ret
addb
test
fsubl
add
hlt
lret
dec
xor
jb
fwait
bnd
xchg
jo
int
inc
jl
das
push
pop
dec
push
mov
pop
fsubrl
sbb
repz
stos
dec
add
cmp
add
and
loope
outsl
rcrl
lret
lahf
or
pop
in
iret
fwait
fildll
inc
mov
mov
pop
push
popf
xor
or
sbb
adc
sub
pop
test
popf
jae
jnp
rcll
or
mov
jl
push
repz
or
mov
cmc
xchg
mov
cmpsl
dec
mov
cmp
mov
pusha
sahf
push
repnz
leave
in
clc
jecxz
scas
mov
adc
movsl
mov
dec
sahf
out
mov
jae
xor
mov
or
sub
rclb
xchg
sarl
sub
stc
cltd
dec
vcvtps2dq
xor
pushf
hlt
inc
pop
push
mov
and
xchg
and
mov
int
ficompl
fisubl
sub
inc
pop
inc
cmp
std
sbb
jno
cmpsl
push
fnstcw
jge
xlat
push
mov
push
mov
push
aad
fs
rorb
arpl
dec
add
fisttps
xorl
xchg
loop
movl
test
and
pop
sahf
jecxz
inc
add
stos
imul
pushf
enter
cmc
cmp
test
repz
and
repz
fisubrl
mov
sub
lahf
cmpsl
test
bound
in
out
adc
lods
cmp
pop
imul
std
mov
adc
mov
inc
and
push
loope
rclb
adc
rcll
pusha
in
sbbl
pop
out
icebp
pop
cmpsl
sbbl
lock
cmp
xor
movsb
cmp
lret
xchg
cmc
adc
pusha
mov
inc
inc
orb
dec
ds
sub
pop
addb
jl
push
out
or
out
cmp
aad
lret
shlb
or
add
pop
mov
stos
xchg
lret
outsl
insb
mov
push
mov
fwait
inc
or
jle
mov
adc
mov
adc
dec
cmpsl
sti
cmp
test
push
jl
or
push
sub
fldenv
jp
mov
dec
jno
push
dec
fwait
cmp
out
and
push
mov
loope
jae
push
fcoml
mov
fwait
or
insl
aam
and
ja
lret
out
xchg
mov
mov
mov
sarl
push
imul
dec
hlt
fs
sub
mov
in
inc
fiaddl
jmp
dec
cmp
lea
pop
jb
pop
mov
and
sti
xor
mov
addb
inc
and
outsb
jno
clc
int
sbb
mov
test
call
sahf
mov
mov
repnz
push
call
fstpt
mov
fcomp
imul
or
in
pop
inc
frstor
mov
aas
lahf
xor
sub
enter
and
mov
jbe
jl
jbe
fwait
pop
mov
addb
push
mov
hlt
sbb
popl
int
xor
add
std
pop
ljmp
shlb
push
sub
scas
xchg
lahf
add
xchg
jne
sbbl
lahf
int3
pop
les
cmc
shlb
lret
xchg
adc
fsubr
xor
test
xchg
jg
cmp
mov
lret
orb
jne
enter
mov
shl
enter
inc
sti
push
rol
xor
movsb
dec
dec
lock
inc
sub
cmpsb
shlb
repz
gs
sbb
outsb
jecxz
movsl
cmpsb
jb
test
or
imul
aaa
lret
xlat
sub
jo
pop
add
imul
or
pop
inc
sahf
enter
mov
ffreep
inc
jae
adc
sbb
push
popf
jbe
push
mov
ljmp
int
clc
rcll
jne
jb
gs
pop
add
mov
cwtl
aam
les
cmp
int
lock
fwait
ss
nop
fcompl
add
jp
mov
add
xchg
pop
push
inc
movsl
iret
and
mov
dec
sub
jge
cs
mov
or
xchg
nop
daa
dec
add
lahf
shlb
jge
and
out
push
pop
nop
stc
cmp
inc
gs
jecxz
lret
bound
out
outsl
sub
mov
stc
gs
sar
lahf
push
icebp
scas
sub
loop
dec
std
mov
xor
mov
dec
inc
mov
pop
or
jne
movsl
xor
pop
out
mov
popa
pop
xor
xchg
in
sahf
xchg
pushf
lods
jo
fiadds
push
xchg
jp
adc
cmp
push
stos
mov
push
inc
pop
mov
nop
xchg
add
loope
mov
adc
std
add
daa
inc
sarb
xor
push
cmc
int3
cmc
test
js
pop
add
imul
test
les
pop
cwtl
incb
dec
push
sub
jp
add
out
sub
arpl
and
subb
mov
nop
repnz
mov
adcl
push
xchg
dec
aas
test
cwtl
daa
and
int3
xchg
lcall
sub
dec
cmp
cld
dec
orl
test
pcmpgtb
inc
andl
inc
cmp
fwait
es
out
cmc
outsl
pop
dec
xor
mov
pop
cmp
ds
nop
shlb
inc
xor
jmp
ret
or
mov
mulb
ljmp
push
mov
or
cwtl
sub
push
xor
jl
mov
jge
ret
incb
lret
mov
inc
sub
push
mov
xacquire
loope
jecxz
shl
mov
lds
and
rcrl
imul
xchg
idivb
packuswb
dec
add
bound
jbe
jg
jnp
ret
call
sbb
cli
addl
jbe
jnp
push
sub
in
push
xchg
fwait
sarl
es
inc
notb
push
and
mov
iret
inc
jb
lret
add
lds
pushf
or
dec
mov
jns
mov
inc
xchg
push
movsl
sub
es
push
cwtl
mov
repnz
clc
cmpl
mov
daa
subl
push
or
dec
cltd
loope
addr16
jns
aaa
cmp
lods
xchg
mov
fwait
inc
addb
dec
divl
test
cli
or
push
or
mov
cli
push
mov
sbb
xor
mov
lods
test
clc
push
cmp
jnp
or
dec
sub
leave
sbb
cmpsb
adc
adc
stos
in
pusha
mov
mov
insl
sub
inc
ret
rcrl
fwait
iret
negb
ret
pusha
mov
lcall
push
repz
jae
mov
dec
ret
mov
es
test
xchg
xchg
loop
gs
jno
jecxz
dec
inc
xlat
jle
rorb
fbstp
ss
dec
mov
add
into
es
out
mov
and
ja
pop
dec
daa
adc
pop
cmpsl
mov
fcomp
cmp
jno
jnp
inc
cwtl
lret
adcb
test
adc
repnz
push
lods
and
test
psllq
pop
adc
stos
mov
cmp
jl
arpl
rcll
mov
push
push
call
cmp
mov
pop
sub
inc
xor
or
mov
sbb
xchg
movntq
cmc
lret
cmc
and
adc
or
into
xchg
adc
or
scas
fdivl
int
aas
dec
dec
call
dec
cmp
mov
fisttpll
mov
lods
pop
arpl
pop
adc
test
out
fs
inc
mov
sbbb
jo
mov
jmp
mov
stos
pop
aad
std
gs
jbe
xor
mov
jg
mov
frstor
or
dec
repz
je
lret
test
test
adc
jne
imul
es
sub
dec
sarb
imul
mov
aas
cmp
push
or
jnp
xchg
jae
int
xor
cld
clc
ret
out
ffree
pop
out
pop
subl
mov
jle
or
lods
sbbb
ljmp
inc
loopne
inc
test
sub
lahf
notb
outsb
int3
popf
and
insb
sub
into
int3
cmpsl
cli
cmpsb
dec
jl
xchg
mov
movsl
xor
movsl
rcr
stos
dec
dec
jns
or
cltd
in
push
or
inc
jmp
iret
mov
test
mov
dec
mov
inc
repz
pop
xor
lret
and
sub
rcrb
add
out
pop
or
scas
test
call
shl
arpl
mov
mov
lcall
pushf
ds
cltd
adc
add
andl
jne
jmpw
push
bound
mov
inc
cmp
add
icebp
adc
adc
push
fcmove
dec
pushf
repz
xor
push
xchg
fidivs
loopne
or
lret
fwait
dec
fld
sub
cmp
mov
xor
outsl
ljmp
cmp
sub
push
xor
sub
mov
push
xor
jbe
arpl
test
repnz
adc
int
int3
jae
push
xor
dec
jbe
cltd
das
and
xchg
pop
loopne
or
sahf
mov
sub
inc
jmp
stc
mov
in
fnstcw
push
adc
into
fwait
pop
fsubs
dec
movsb
and
and
popf
sub
bound
data16
xchg
mov
sub
mov
mov
movsb
cmpsl
jg
cmp
cmp
sbb
clc
fbld
pop
movsl
mov
xchg
mov
negb
pop
inc
test
bound
jmp
mov
and
in
and
mov
cmpsb
cmp
rorb
vmovupd
sub
xchg
mov
iret
nop
mov
cmc
stos
js
jbe
test
jmp
and
sarw
or
jmp
pushf
xchg
jb
add
jns
or
adc
gs
xchg
cld
dec
js
xlat
inc
enter
mov
and
out
ficomps
mov
gs
mov
push
or
cltd
aam
insl
roll
xor
lea
mov
dec
fbstp
pop
mov
dec
mov
pusha
std
iret
stc
sahf
fidivrs
std
into
inc
fiadds
rolb
mov
adc
pand
std
push
xor
shlb
add
or
mov
jge
in
mov
out
mov
or
fcoml
mov
mov
sub
mov
xor
xor
cmp
gs
iret
fwait
jg
xor
add
pop
mov
jle
test
scas
mov
movntps
dec
mov
out
cmp
mov
sbb
sub
or
jb
out
xchg
sahf
sub
scas
xchg
ljmp
mov
add
adc
rorl
and
push
test
or
mov
decl
mov
push
lock
inc
int3
xor
bound
lods
or
lods
pop
dec
xchg
leave
sub
jns
mov
or
ljmp
nop
lcall
mov
xchg
lcall
jecxz
lds
push
in
mov
lahf
ds
mov
add
shr
push
scas
addr16
loope
rcll
pop
test
stc
insl
loope
or
ljmp
push
outsl
rol
mov
andb
xor
fsubrl
push
clc
and
adc
sbb
rol
dec
ret
jb
sbb
xlat
cld
out
aam
jmp
mov
arpl
test
sbb
xchg
mov
dec
loope
aam
mov
mov
and
sub
push
das
inc
mov
and
fstps
adc
jg
jle
mov
out
or
push
cmp
mov
pop
sarl
or
mov
add
in
mov
adc
push
das
idivb
stc
bound
lahf
pop
mov
enter
xchg
add
dec
mov
push
pop
cmc
and
mov
daa
add
sbb
push
testl
xchg
sbb
insl
and
mov
popa
inc
in
les
ss
xor
xor
inc
fsubr
jg
inc
out
sub
adc
xor
sub
ljmp
sub
das
fcompl
out
daa
js
fstp
xchg
stos
sbb
mov
push
push
jae
pop
stos
dec
mov
push
inc
test
cs
dec
mov
push
jns
or
sahf
movsb
aam
push
mov
pop
loop
lcall
push
push
jnp
adc
pusha
lods
adc
aas
xchg
shlb
dec
or
gs
lahf
sahf
enter
adc
pop
sarb
aaa
fmulp
js
sbb
ja
testl
movsl
stos
icebp
test
daa
ss
ret
ret
mov
push
pop
mov
xor
rcl
stos
outsb
popw
or
add
hlt
cmc
mov
push
psllw
pushf
pop
sbb
jp
jle
sbbb
sub
subb
out
out
and
inc
repnz
cmp
mov
bound
sub
vcvtdq2pd
div
leave
insb
inc
adc
lcall
lods
and
in
adc
popa
pop
adc
mov
pop
and
and
xchg
push
pop
mov
mov
push
cs
inc
sub
inc
mov
adc
ljmp
fimuls
rorl
lcall
mov
adc
outsl
jg
fdivrs
add
int
add
mov
cli
pop
les
das
mov
cmp
je
jmp
imul
sub
ljmp
in
test
push
test
and
out
jae
mov
or
push
jmp
jp
repz
xchg
dec
or
das
and
ljmp
sbb
xchg
out
push
lcall
adc
iret
fidivl
pop
cs
cmc
ljmp
inc
cmpsb
das
fcomi
jp
xchg
dec
sbb
add
cmpsb
mov
fldl
out
shrb
mov
sahf
or
gs
bound
push
xor
add
jmp
pop
cmpsl
arpl
xor
inc
add
mov
xchg
adc
xor
mov
shr
stos
lds
pop
fisttpl
repz
rorb
sbb
or
scas
aaa
adc
inc
push
lcall
pusha
inc
cvtdq2ps
dec
mov
lds
pop
repz
loop
icebp
lret
jg
js
and
test
aad
fistpl
fbstp
dec
loop
sahf
pusha
rcll
push
shl
sub
lret
sub
sbb
cmp
adc
fstl
sbb
push
xor
pop
xchg
sbb
sub
rcrl
nop
es
xchg
ss
sub
inc
fbld
aam
sarl
popf
scas
sbb
jo
inc
ds
dec
cli
cmp
hlt
mov
or
sti
dec
in
ret
sub
jle
xor
adc
xchg
push
jge
nop
or
push
subl
cwtl
push
xlat
lcall
pop
jae
adc
fistpl
cmc
out
cmp
or
xor
adc
rcll
sbb
pushf
xchg
add
pop
fstps
fidivrl
push
xor
stos
cmp
mov
jecxz
popa
lods
gs
lods
out
lods
cmpsb
js
int
je
loopne
inc
jl
shrl
xchg
je
mov
in
push
mov
cmpsb
xor
outsb
push
enter
xchg
shrl
cmp
imul
inc
jns
push
xor
jmp
or
mov
cmp
daa
push
inc
pushf
mov
mov
mov
mov
in
imul
or
into
addl
and
ret
cwtl
xor
not
mov
cs
sbb
push
push
dec
jo
mov
clc
jmp
aas
mov
xchg
shrl
cs
js
mov
sbb
test
pop
dec
and
int
add
dec
cmp
lods
fisttps
cmp
sbb
and
bound
bound
pop
cltd
cmp
jmp
test
sub
push
cmp
cmp
fiadds
adc
arpl
imul
push
sbb
push
cmp
scas
ljmp
iret
mov
jno
int3
into
jge
ja
cmpl
das
push
pop
pop
push
sti
or
mov
add
inc
das
xchg
je
cmp
push
fs
cmp
cmpsb
pop
or
jo
scas
loop
xor
mov
add
stc
insb
xor
lcall
mov
cmp
mov
imul
cmp
iret
popa
adc
cmp
pop
cmpb
sbb
rorb
pop
mov
repz
je
jl
aad
pop
test
aam
mov
test
jg
pusha
adc
push
sbb
adc
sub
jg
jne
add
sbb
loopne
faddl
into
xchg
cwtl
inc
pop
adc
mov
inc
jp
push
push
mov
movsl
arpl
jmp
fcomi
push
lea
in
cmp
je
xchg
jo
xchg
push
sbb
sahf
cs
icebp
inc
test
jnp
je
push
cld
fcompp
and
dec
filds
and
cmpsl
lcall
adc
ljmp
pop
jp
push
mov
pop
or
push
cltd
push
mov
out
pop
repnz
dec
inc
fucomi
inc
mov
mov
xor
in
mov
into
out
in
bound
jbe
mov
das
sarb
mov
mov
sbbb
push
das
jge
mov
pop
dec
sbb
int3
or
ret
lahf
mov
mov
or
test
rorl
repz
cmc
push
jecxz
and
sub
mov
imul
ds
idivb
aam
clc
xor
repnz
jmp
xchg
mov
mov
out
enter
mov
inc
pusha
fwait
cmp
aaa
in
dec
adc
xchg
pop
fisubl
outsl
mov
in
pusha
jmp
ret
cwtl
aas
inc
add
clc
jmp
dec
push
jmp
cmpsl
jo
repz
test
sub
adc
aad
stc
fldt
xor
lret
adcl
dec
repnz
lahf
mov
gs
cld
push
cmp
or
lea
push
imul
mov
ret
pop
pop
jmp
in
add
or
add
inc
cmp
adc
leave
popf
cmc
in
jp
shrl
xchg
mov
jmp
pop
jecxz
lods
xor
sub
add
pop
clc
bound
mov
ret
inc
jae
jle
inc
stos
leave
fwait
aam
xor
test
or
sbb
mov
mov
mov
xchg
in
or
bound
ds
mov
add
and
mov
ds
cmp
jmp
inc
add
shl
inc
faddl
cmp
xchg
pop
in
jp
dec
dec
push
enter
loope
out
mov
popf
test
pop
xor
fwait
add
adc
cltd
lods
dec
fcompl
fcoml
cs
jl
dec
cltd
jmp
xchg
out
sti
cmpsb
sub
push
push
sub
into
mov
mov
sbb
push
mov
push
popa
xor
data16
stc
movsb
inc
jns
xchg
jo
loope
pop
call
add
dec
popa
add
iret
and
divb
ffreep
leave
rcl
shrb
pop
popf
dec
jg
pop
jbe
cmp
jno
xchg
loope
ret
pop
xor
in
insl
dec
cmpsl
mov
jl
test
and
ficompl
adcl
paddsw
ja
cs
cs
dec
bound
lock
and
add
jne
repz
sbb
test
mov
out
insl
jge
push
mov
sbb
sbb
push
inc
lahf
sbb
mov
hlt
pop
into
mov
mul
add
movsl
std
push
outsl
mov
inc
xchg
rclb
and
adc
mov
scas
out
pop
aad
aaa
insb
xchg
aaa
data16
mov
sbb
mov
clc
adc
xchg
pop
mov
insl
sarl
sub
rcll
sbb
ja
fnsave
movsl
mov
cmc
sbb
out
adc
sbb
pop
and
loopne
push
xlat
cmp
insl
lea
sbbb
xor
enter
mull
das
pop
push
cs
sbb
lods
mov
or
pop
cwtl
adc
push
xor
sahf
adc
adc
dec
das
push
shlb
ret
or
adc
push
cmc
push
and
pop
out
mov
out
or
cmp
push
stc
push
mov
sbb
push
pop
shlb
fistps
enter
xor
shl
mov
fwait
mov
sbb
mov
lods
inc
les
adc
jns
dec
in
into
push
pushf
mov
fcompl
adc
mov
fcmovu
insl
insl
jae
pop
ljmp
add
or
lock
pop
iret
mov
and
sbb
pop
push
mov
movsb
repz
jle,pn
adc
or
leave
add
jne
inc
incb
data16
mull
cmpsl
jne
leave
jne
pop
test
aas
push
mov
jo
lds
inc
mov
inc
aam
jle
lock
mull
iret
adc
xor
js
cmp
jns
inc
out
mov
out
jnp
jae
adc
xor
or
add
sub
ja
inc
mov
sub
rcrb
roll
vpsubsw
cmp
outsl
rcr
mov
sub
movsb
out
or
sbb
fs
add
sti
adc
inc
xorl
add
iret
es
daa
fidivrs
push
ja
rcrl
insl
fs
mov
xor
xchg
lods
lds
dec
ret
mov
dec
setl
push
je
add
add
mov
decl
mov
and
add
leave
cmpsl
addr16
cmc
cltd
arpl
sub
pop
lods
sub
xor
ret
mov
jno
xor
outsb
hlt
ret
sahf
in
adc
imul
test
pop
push
outsb
fists
cmp
push
cmp
les
push
mov
mov
rol
or
dec
ficoml
sbb
pusha
arpl
push
mov
push
push
pop
rolb
cwtl
roll
fst
rolb
sbb
mov
mov
push
pusha
mov
inc
pusha
cmp
xchg
and
pop
popf
shll
ret
mov
pop
inc
js
sub
inc
cmp
andl
mov
add
cltd
and
mov
js
sbb
cmpsb
cmpb
je
push
lahf
dec
cmp
lock
push
sti
pop
mov
adc
xchg
jg
mov
push
add
aam
mov
sbbb
jl
rol
and
or
movl
xchg
aas
rol
mov
and
push
in
cltd
mov
sub
loop
cmp
pop
add
aad
pop
dec
xchg
loopne
leave
mov
fs
in
cmp
xor
or
mov
arpl
xchg
mov
fistps
xor
mov
xchg
into
push
pop
xchg
stos
lahf
aam
rclb
xchg
icebp
xchg
push
jbe
mov
ja
pop
imul
mov
shrb
mov
hlt
divl
orl
loopne
and
lods
dec
add
mov
sbb
xchg
mov
adc
mov
es
shll
out
outsl
pop
enter
push
or
dec
and
push
pop
scas
jp
dec
jmp
cmp
mov
in
sbb
leave
lret
je
jns
jbe
movsb
inc
pop
std
in
jno
fsubl
outsb
js
data16
pushw
sar
pusha
dec
call
push
push
testl
fs
xor
cld
flds
and
dec
push
add
hlt
dec
or
fs
das
in
sbb
outsl
mov
mov
jp
or
js
lock
add
push
add
cmp
jnp
mov
fwait
push
jo
inc
mov
inc
adc
jmp
cmp
inc
add
test
jne
test
mov
mov
mov
shrb
push
test
cwtl
pop
sbbl
cmp
scas
inc
out
aam
in
add
icebp
pusha
adc
sub
xchg
adc
push
fadds
jb
mov
sbbl
dec
or
mov
loope
cltd
add
xor
test
pop
jg
lock
mov
aad
notb
mov
loop
xchg
out
push
enter
pop
mov
sbb
jl
push
mov
imul
orl
jne
sbb
xchg
jecxz
sbb
loope
cmp
aam
insl
push
incl
mov
mov
push
stos
stos
subl
daa
xor
xchg
clc
outsb
or
cs
cmp
jmp
rcll
push
mulb
push
mov
xor
out
call
xchg
adc
sbb
ss
or
cwtl
xchg
cmpsl
testb
mov
imul
xchg
dec
mov
clc
subl
lret
test
stc
sbb
movsb
faddl
push
pop
fsubrs
sahf
push
push
jbe
cmp
sbb
jle
push
jo
mov
and
jo
dec
cmp
clc
mov
dec
lock
inc
hlt
test
jns
lret
adc
and
mov
test
es
in
call
les
sti
aas
cmp
sub
repz
jne
mov
push
mov
popa
push
dec
iret
mov
hlt
adc
sahf
adc
xlat
adc
sub
xlat
add
in
xchg
fmuls
call
push
push
mov
jns
repz
fwait
or
mov
pop
mov
sub
sbb
adc
lds
lea
addl
fists
sti
out
shll
addr16
mov
lea
ficomps
out
mov
ja
test
mov
aad
into
mov
repnz
jp
jns
or
push
enter
in
sbb
lret
fisubs
outsb
lds
rorl
mov
and
mov
pushf
gs
ljmp
fstps
mov
repnz
cmp
sbb
and
into
xchg
xchg
mov
push
ja
push
mov
push
cmc
cltd
into
xor
insb
or
xor
mov
enter
sarb
push
cwtd
mov
mov
pusha
sbb
int
rcrb
call
pop
or
enter
cmp
inc
decl
ja
xor
add
data16
imul
cmpsl
repz
cs
inc
ret
mov
dec
sbb
inc
insl
ljmp
fisttps
int3
cmp
cltd
xor
fistl
rcll
cmpsl
xlat
das
ljmp
ljmp
pop
insl
adc
mov
cmp
imul
sub
xchg
push
mov
jae
psadbw
dec
aas
cmpsb
jecxz
mov
shrb
test
mov
push
inc
or
jp
out
sbb
and
adc
mov
adc
xchg
rorl
mov
push
dec
cmp
xchg
xor
jge
and
cmc
les
frstor
xchg
movsb
jns,pn
bound
mov
inc
insl
scas
repnz
add
loope
into
jg
and
data16
and
sub
into
push
xor
sbbb
push
scas
aas
adc
ror
stos
mov
xor
lret
dec
gs
pop
jl
je
es
mov
rcr
adc
xor
aaa
cmp
jno
aaa
insb
mov
mov
dec
iret
scas
frstor
cmp
xchg
inc
sub
mov
sub
cs
int
js
adc
adc
imul
cmp
mov
fidivs
inc
push
mov
push
inc
push
and
dec
sub
movsl
mov
push
shrb
inc
sub
inc
repnz
xchg
mov
sbb
jnp
inc
fdivrs
or
pop
jle
pmulhuw
sahf
aas
adc
mov
stos
mov
xor
sub
shl
lret
pop
icebp
jle
inc
mov
pop
idivl
jmp
ret
test
stos
testl
mov
push
inc
or
repnz
jne
subb
mov
cmc
negl
xchg
mov
inc
mov
dec
js
cmpsl
int3
push
adc
mov
mov
pop
loop
add
jge
mov
icebp
mov
inc
xchg
adc
sbbb
scas
xor
and
cmpsl
cmp
lea
ss
test
or
pushf
notl
jno
jns
pop
cmp
sbb
aas
jb
add
mov
popl
ret
jecxz
sbb
xor
dec
mov
lock
sub
mov
imul
enter
imul
push
mov
dec
inc
pop
fdivr
xchg
les
movsb
sti
icebp
sahf
stos
arpl
fwait
xor
add
add
nop
pop
data16
pop
jp
cmpsl
pop
mov
sbb
sub
sub
xor
outsb
jnp
movsb
xchg
repnz
xor
cmp
pop
dec
inc
adc
test
in
jecxz
hlt
adc
hlt
mov
push
mov
mov
out
aas
aaa
cmp
scas
in
cli
cli
adc
xchg
loop
and
cmp
sbb
pop
add
popa
or
pop
inc
and
jmp
pop
xchg
lods
std
xor
es
mov
gs
jns
mov
mov
inc
rorl
inc
sbb
adc
gs
test
loopne
sub
mov
ret
add
mov
je
dec
xor
cmp
pop
mul
aaa
test
repz
or
in
test
xor
push
call
clc
push
pop
insb
inc
into
outsb
push
mov
lods
fisttpll
jmp
mov
in
pop
and
lock
leave
jg
xchg
push
xor
mov
cmpsw
out
cli
pop
xlat
bound
imul
mov
xchg
mov
mov
mov
dec
dec
adc
inc
jns
dec
pop
subl
iret
stos
and
js
les
jp
loope
adc
xlat
out
lret
jp
in
ja
in
cmp
xchg
adcb
pop
or
loop
aad
pop
jno
mov
adc
stos
cmc
lret
xchg
xchg
xorb
ja
into
add
cli
xor
mov
add
sub
xchg
enter
xor
nop
fidivrs
or
jmp
and
jle
fisttps
out
xchg
jns
outsl
pop
nop
xor
lock
inc
loopne
or
add
mov
popa
pop
push
xlat
xor
les
dec
fs
movsb
jmp
fcmovnu
and
dec
or
scas
pusha
out
lret
aam
xor
push
push
loop
sub
xchg
popa
cmp
dec
rcrl
jl
push
cmp
cmpl
pop
ja
call
std
pop
jae
and
loope
mov
dec
dec
fisubrl
push
lret
fdivs
lret
jmp
addl
inc
sahf
hlt
push
pop
fmulp
xor
ljmp
popw
pushf
dec
repz
xor
fwait
leave
mov
or
and
add
cltd
jecxz
sub
and
sahf
addr16
ret
andl
imulb
xor
ret
in
lcall
pop
adc
cs
loope
mov
add
sub
out
or
insb
bound
sub
jns
inc
push
fsubs
nop
testb
cmp
push
loop
inc
or
dec
mov
test
insl
aas
push
mov
xor
movsb
nop
adc
mov
loop
int
mov
out
scas
sub
add
or
pop
imul
insl
pop
imul
shrl
mov
cmc
int
or
xor
mov
jbe
dec
or
js
or
es
mov
mov
insl
das
test
lods
or
lds
pop
addb
rcrb
cmpsl
jecxz
push
rcr
jl
mov
add
jno
inc
inc
xchg
jbe
xchg
shl
dec
mov
pop
push
inc
adc
pop
fistpll
mov
orb
dec
stos
enter
sub
mov
mov
fs
dec
ss
xor
in
aas
pop
outsl
rcrl
cmpsl
test
sbb
jbe
inc
add
imul
push
xchg
adc
pop
test
sbbl
jmp
rcrb
fisttpl
mov
inc
xor
xchg
cltd
xor
xchg
or
andb
mov
or
lcall
add
in
mov
lret
inc
into
sub
jge
mov
loope
cwtl
pusha
inc
xor
cld
sub
imul
mov
enter
lahf
push
push
jge
jecxz
es
inc
and
cwtl
push
mov
adc
mov
pop
negl
vmread
dec
lods
push
test
add
xlat
xchg
insb
mov
ljmp
fs
and
xor
jg
js
scas
xlat
int3
push
stc
bound
push
jno
in
test
insl
into
popf
ds
pop
mov
adc
jl
dec
popf
mov
jle
jbe
pop
fld
es
and
std
sbb
xchg
push
lahf
jnp
xor
std
loop
xadd
addr16
or
or
cmc
shrl
push
sbb
mov
fwait
xor
jno
inc
pop
popf
adc
cs
lock
js
inc
icebp
or
mov
or
mov
push
fisttpll
movsb
jmp
aad
sti
adc
push
jns
out
int3
jo
nop
flds
cltd
mov
js
sahf
outsl
mov
mov
ret
loopne
fimuls
icebp
push
add
js
into
dec
lods
dec
pop
test
jmp
inc
push
out
jae
divb
loope
xchg
aaa
xchg
xchg
sbb
lds
insb
pop
icebp
xchg
ja
push
das
dec
addr16
xor
and
testl
dec
push
std
adc
sahf
popa
notl
jl
stos
jae
pop
jmp
cltd
add
imulb
jge
push
imul
jnp
leave
sub
push
popf
shrl
jo
inc
jmp
call
push
pusha
leave
in
mov
dec
adc
outsl
xor
adc
repnz
nop
pop
arpl
movsb
jl
ja
or
jecxz
cmp
pop
js
cmp
jle
je
int3
sbb
pandn
outsb
push
ljmp
sub
out
rol
cs
ja
pextrw
cltd
xchg
adc
sbb
cmpb
decl
xchg
dec
mov
repz
ror
push
adc
push
out
push
inc
int3
cltd
adc
jae
adc
and
outsl
or
inc
jne
in
ljmp
sar
test
testb
pop
stos
aam
adcb
dec
pop
cmp
movl
xor
rcrb
stos
xchg
or
das
or
inc
push
lret
cltd
mov
test
adc
lret
out
inc
lds
inc
add
sub
push
pop
out
dec
aad
testb
jb,pn
aaa
lcall
jnp
or
pushf
or
fidivs
inc
xchg
aad
mov
orl
test
dec
in
bound
mov
ror
dec
xor
mov
call
jne
icebp
shl
xchg
fadd
inc
dec
or
cli
roll
xchg
out
aam
xlat
jl
int3
fnstsw
mov
xor
cmc
mov
and
mov
xchg
lods
ror
add
xchg
daa
sbb
jmp
jnp
in
push
outsl
adc
mov
mov
popa
xchg
inc
sbb
pop
fcmove
out
push
dec
int3
or
cmpl
es
or
cmp
push
test
mov
sbb
loop
cmp
sub
jmp
push
push
xchg
sarl
js
loope
cld
dec
repnz
cmpsl
roll
sbb
clc
mov
push
jge
ret
fs
mov
mov
scas
mov
insb
jmp
lret
push
out
mov
movsb
push
movl
fnstcw
sbb
mov
mov
adc
xor
inc
push
fildl
jmp
les
inc
mov
idivb
and
inc
mov
mov
imul
inc
test
ljmp
sub
subb
scas
inc
push
mov
push
cmpsb
fcompl
xor
sahf
in
inc
fistpl
faddl
push
aam
fwait
mov
mov
jge
push
add
pop
stos
es
sti
insb
scas
fsubr
inc
into
ljmp
addb
incl
mov
das
cmp
push
and
inc
daa
sub
cmp
shlb
out
push
decb
push
mov
popa
mov
adc
jae
sub
test
pop
cmpsb
pop
fdivl
xlat
ljmp
or
ja
dec
add
dec
rolb
add
lahf
inc
and
outsb
test
test
jp
insb
pop
jnp
mov
pop
imul
inc
jbe
fcomps
dec
mov
mov
push
bound
cmpsl
adc
aad
js
sub
mov
loop
mov
movsl
pop
cmp
sub
jne
out
nop
mov
push
sti
fs
adc
cmp
ja
fcmovb
sbb
sub
adc
in
loopne
cmp
adc
cmp
pusha
mov
sub
dec
rolb
adc
mov
jns
xchg
fisttpll
filds
imul
test
and
inc
das
add
stc
push
sti
jns
dec
xor
adc
xlat
ret
sub
add
imul
mov
push
insb
sub
pushf
pop
enter
out
insl
or
cmp
ret
mov
movsb
das
and
sbb
push
xlat
lret
test
add
mov
insb
icebp
push
lcall
cli
mov
in
pop
repnz
dec
nop
sub
push
arpl
scas
xchg
jge
mov
scas
std
push
mov
jle
push
subl
xchg
jecxz
mov
scas
lcall
mov
fs
fadd
popa
inc
xor
sahf
sub
and
lret
rcrb
repnz
scas
cwtl
popf
add
in
jl
mov
push
int
mov
das
pop
cmpsb
iret
sub
ret
nop
jecxz
push
pop
push
sub
mov
jne
fstp
pop
sbbb
pop
nop
lods
mov
add
xor
stos
mov
roll
mov
xchg
pop
or
xchg
jmp
addr16
xor
das
rcl
daa
xchg
ret
and
scas
ss
pusha
mov
dec
push
in
pushf
jmp
repz
shrl
mov
xchg
hlt
je
or
sub
add
jb
inc
arpl
sbb
cmpsl
lock
gs
mov
push
xchg
outsl
mov
mov
cmc
int
mov
adc
rcrl
pop
mov
stc
inc
push
fisubl
clc
sbb
jl
pop
mov
push
loope
repz
dec
dec
pop
fstpl
sar
cld
xor
add
ja
gs
aas
sbb
je
pop
mov
pop
xchg
lods
pop
lock
test
hlt
jns
adc
mov
ret
mov
ret
xchg
xchg
int
in
dec
mov
sbb
pop
test
movsb
andb
push
jmp
sbb
or
pop
xor
mov
mov
adcb
outsb
pop
add
xchg
mov
jo
xor
fs
out
outsb
mov
frstor
in
adc
shll
jg
es
insl
dec
aad
and
mov
aaa
shrb
sbb
push
cwtl
lods
in
dec
cli
lods
jecxz
jb
push
mov
inc
pmaddwd
pop
mov
int
mov
test
out
jbe
inc
fimuls
outsl
push
out
clc
jo
iret
jnp
enter
sub
mov
repz
int3
je
inc
and
ja
mov
sbb
xor
pop
lea
fdivrl
enter
add
push
arpl
sub
daa
cs
cmpsl
test
sti
sbb
push
sbb
sti
jmp
lea
mov
mov
xor
lods
negl
fsincos
sub
cmp
jmpw
add
das
rorb
mov
push
jle
aas
imul
adc
sbb
into
add
rcrl
push
and
pop
sub
push
xchg
xchg
lret
stos
dec
arpl
push
mov
dec
xchg
jnp
xchg
sahf
push
addr16
xchg
mov
addr16
push
push
ret
enter
das
andb
add
jmp
cmp
mov
insb
or
pop
and
loop
sbb
popf
fwait
leave
mov
inc
notl
mov
jecxz
sbb
into
and
cmp
and
adc
adc
adcb
xchg
sbb
cmc
mov
sbb
imul
decb
jne
cmc
cli
xchg
divb
mov
xor
add
cs
stc
mov
aaa
mov
cmp
jle
mov
lea
les
mov
enter
inc
push
ficoms
leave
mov
xor
push
push
xor
and
ja
inc
adc
jns
jle
cmpb
mov
sahf
sub
xor
sbb
or
sub
fisubl
cmp
test
jo
insb
shlb
fsts
pop
pop
clc
aad
sbb
or
inc
in
seto
mov
jecxz
or
lcall
adc
repnz
jae
add
pushf
jnp
in
mov
push
jge
repz
inc
push
mov
mov
in
mov
adc
and
dec
inc
or
xchg
dec
sbb
adc
sahf
xchg
pop
imul
xchg
aas
cli
daa
mov
out
jbe
pop
xrelease
inc
jne
lret
or
inc
or
rclb
mov
pushl
jns
in
stos
cmp
fwait
sub
out
mov
push
mov
lock
jl
pop
lods
mov
sahf
addr16
mov
dec
cmp
shlb
sbb
inc
sbb
add
dec
das
loope
dec
jl
dec
cwtl
jl
inc
sbb
mov
rcl
jb
test
fwait
sbbl
mov
push
lret
movb
lock
pop
jg
mov
call
je
push
jl
fsubrs
sub
in
lock
inc
loop
loope
sbb
jae
outsb
xchg
sub
imul
push
scas
or
test
inc
fidivrl
and
inc
mov
pop
sbbl
mov
pusha
jge
xor
push
jo
data16
and
scas
je
xchg
sbb
sub
rclb
popf
inc
leave
je
leave
pop
jl
xorb
test
in
icebp
pushf
mov
mov
add
shr
jle
ljmp
out
jle
jo
cmpl
mov
sahf
ret
cmp
mov
aad
stos
or
and
mov
cmp
into
push
incb
fstl
xchg
lahf
xchg
adc
jns
incl
jg
mov
shlb
leave
inc
dec
or
dec
pop
gs
mov
daa
notb
movsb
stc
cli
aas
jns
shr
add
dec
pop
sbb
jno
jecxz
ror
loopne
sarb
sbb
mov
jge
dec
cmpsl
jmp
dec
sub
pop
cwtl
ret
aas
push
jbe
inc
pop
push
jnp
xchg
inc
xor
cs
xchg
add
aam
shrb
mov
dec
inc
inc
cwtl
jg
mov
adc
movsl
outsb
fcmovb
inc
cmpsb
sbb
movsb
push
dec
dec
mov
lcall
jecxz
adc
into
fwait
sbb
js
bnd
in
int
inc
pop
mov
ret
ffree
jle
push
mov
cld
sub
hlt
out
sbb
cli
sbb
pop
lock
adc
xchg
dec
nop
stc
xor
push
lcall
xor
jo
sbb
in
pop
add
push
or
enter
inc
inc
dec
clc
pop
mov
jecxz
in
inc
sub
or
cmpsl
pop
jns
leave
push
mov
push
or
daa
mov
dec
dec
icebp
ljmp
shlb
out
sub
cmpsb
fimull
popf
adc
adc
leave
pop
lret
push
jo
dec
push
in
test
jl
cmp
pushf
fidivl
arpl
gs
jne
out
mov
xor
jg
mov
call
add
repz
les
daa
in
sbb
loopne
ret
out
push
jb
pop
aaa
sbb
mov
pop
sahf
and
adc
jno
dec
xor
pop
insl
ret
test
sahf
mov
pop
push
fwait
mov
xchg
jle
mov
jno
xchg
inc
test
sbb
cmp
jae
add
dec
dec
sahf
cld
add
test
inc
xchg
cmp
jb
and
out
pop
mov
fidivrs
xlat
push
push
cmp
nop
scas
pusha
dec
xlat
insl
stos
stc
add
cs
sarb
call
popf
inc
xor
test
jb
cmpsl
in
cmp
insl
das
cmp
sbb
and
mov
mov
push
push
pop
shrl
or
jge
cmc
insb
inc
push
inc
add
repz
cmp
mov
out
popa
repz
loop
jp
mov
xchg
ds
loope
stos
imul
cltd
cmpxchg
mov
cli
ds
aad
mov
daa
stos
cltd
outsb
add
pop
aam
lcall
pop
push
insl
cwtl
insl
call
ret
mov
jmp
aaa
aas
mov
or
mov
mov
jns
test
aas
das
mov
call
call
dec
ds
ret
outsl
mov
mov
outsl
or
mov
cmc
repz
test
mov
rcrb
rolb
nopl
pop
and
aam
stos
stos
cmpsb
sbb
push
adc
push
dec
popw
dec
cmp
je
mov
and
jbe
jmp
push
cmpsb
xor
incb
bound
jnp
pusha
mov
sub
xchg
xor
and
sub
mov
adc
jle
fdivs
andb
mov
cmpsb
mov
pop
mov
jns
jbe
adc
loopne
mov
push
xor
outsl
cmp
in
arpl
daa
jg
push
loopne
call
mov
lcall
mov
das
pop
fdivrl
in
outsb
gs
decb
cmp
sahf
divb
loop
fadds
loope
outsb
lea
ret
push
clc
pop
mov
rorb
or
mov
or
cmp
shll
xchg
add
xor
scas
sub
lret
dec
ret
mov
lds
mov
loop
adc
ljmp
xor
cmp
js
scas
or
mov
pop
dec
jp
inc
loope
mov
sub
lret
pop
and
mov
gs
adc
lods
call
and
pop
mov
pop
fsts
add
jecxz
pushf
jnp
inc
sub
popa
sarb
lret
nop
addl
popf
mov
sub
and
scas
dec
mov
inc
jno
jno
popf
push
cwtl
wbinvd
fisubs
push
and
out
clc
inc
decl
inc
imull
into
int3
js
cmpsl
jmp
cmpsl
testl
and
inc
add
cmpsb
cmpsl
subb
fimuls
in
subl
outsb
sbb
ds
mov
xchg
daa
loopne
pop
std
push
mov
pop
leave
sbb
lods
jae
fwait
adc
test
fwait
int3
sar
and
add
mov
repz
aaa
push
lahf
sub
insb
out
pop
iret
fwait
aas
ljmp
je
jg
daa
sbb
adc
jno
jns
loop
xor
imul
fs
mov
jae
mov
pop
test
gs
xchg
lods
pop
filds
mov
jp
xchg
pusha
adc
cmp
inc
int3
pop
bound
in
sub
sahf
or
add
sbb
inc
inc
cmp
add
pop
cmp
hlt
sbbl
pop
ret
mov
into
cltd
mov
outsb
fmull
or
shll
cmovb
mov
cmpsl
sbb
or
cmpsl
cmp
jmp
cmp
inc
mov
lock
in
out
std
pop
jnp
frstor
test
popf
movsb
add
push
into
ficompl
add
xchg
mov
or
rdrand
jns
in
icebp
xchg
xor
sysenter
sbb
jae
mov
repz
xchg
jle
sbb
pop
gs
add
mov
sbb
in
ds
xchg
arpl
data16
mov
mov
pop
jle
in
mov
lcall
push
in
aaa
mov
adc
sub
pop
movsb
adc
xor
in
inc
fisubl
in
mov
xorl
adc
jnp
sti
ret
inc
pop
mov
fnsave
add
jle
rclb
mov
arpl
jae
aas
pop
fists
rcrb
sub
mov
sbb
pop
data16
ret
dec
mov
adc
hlt
aam
sbb
mov
subl
rcrl
xchg
js
pusha
jmp
dec
push
push
stc
fiaddl
jne
jle
ret
mov
pop
add
adc
insb
stos
fdivrl
pop
fs
mov
fsubrl
inc
jns
test
and
stos
loope
lods
ljmp
xchg
outsb
lcall
push
or
mov
div
jge
pinsrw
in
ret
rclb
fs
test
pop
cmpsb
sarb
sbb
icebp
out
and
lds
shlb
js
int
add
pop
push
insb
dec
call
into
push
je
mov
punpcklwd
add
ret
clc
inc
xchg
int
mov
xor
adc
pop
jbe
adc
popa
add
pusha
pop
cmpsl
mov
imul
lds
dec
xor
into
clc
insb
arpl
test
pop
pop
in
stos
inc
and
test
adc
sbb
pop
das
cmp
sub
pop
mov
scas
mov
push
cbtw
cmp
ret
ret
inc
mov
cmpsl
cltd
jae
jmp
xchg
xchg
sbb
xchg
jp
and
pop
clc
mov
lock
jecxz
imul
loope
add
idivl
in
push
xor
stos
and
andl
mov
sti
jae
fidivs
adc
out
sbb
ja
int3
inc
aaa
ds
popa
in
pop
sbb
movsl
lret
or
fcomi
repnz
into
mov
inc
inc
jl
mov
les
scas
lods
sub
mov
movsl
xor
xchg
shrd
ds
mov
lock
jns
mov
and
sbb
adc
mov
orl
lods
adc
xor
ja
pop
inc
dec
pop
mov
mov
stc
mov
lret
sarb
cmp
repnz
cmp
lcall
push
xchg
dec
push
mov
lahf
add
ds
jmp
pusha
dec
sahf
in
aad
stos
iret
test
and
arpl
mov
lret
js
popf
jp
test
in
fisttpl
divb
faddl
es
xor
fadds
xchg
subb
andb
mov
shrl
inc
mov
lahf
mov
jmp
dec
into
mov
adc
lock
sbb
xchg
inc
popf
rolb
cmp
loop
gs
add
sti
ret
imul
fmul
sbb
loop
out
shlb
incb
inc
mov
jl
outsl
and
out
ficoml
dec
dec
xchg
ret
sub
sub
jb
pop
inc
ror
pop
ud1
pop
jle
sub
popa
or
and
adc
mov
movsb
mov
inc
cmp
ficoml
inc
cmpsb
inc
push
punpckhwd
test
jp
xchg
jp
xchg
add
pusha
or
ljmp
rol
mov
mov
push
add
sbbl
imul
mov
add
jle
popf
mov
arpl
fdivr
adc
xor
gs
sbb
cmp
out
popf
mulb
jne
aam
hlt
outsl
les
adc
adcl
sub
scas
ljmp
aam
lods
cld
jecxz
data16
push
jge
lods
mov
ds
je
dec
fsubl
ja
xchg
leave
into
cs
inc
pop
sub
lahf
fstpl
xchg
sbb
xchg
sub
ror
xorl
cltd
lods
popf
lret
dec
add
popa
int
divl
aaa
inc
ds
xor
cmp
mov
arpl
mov
adc
pop
jbe
in
fidivl
popa
aam
jb
ljmp
jb
or
adc
les
sub
gs
mul
unpcklps
add
std
lods
js
push
and
pop
into
jbe
cmc
sub
sub
iret
adc
mov
lret
xor
cli
push
xchg
mov
push
pop
fstl
lods
jmp
mov
testl
cmp
mov
repz
mov
xchg
sbb
daa
pop
sbb
lahf
ljmp
adc
pop
push
lea
xor
add
imulb
rorl
mov
mov
imul
and
jne
cwtl
sbb
scas
inc
ret
xchg
outsl
dec
add
std
xchg
rcrb
loopne
out
lods
xor
repnz
aas
int
fistpll
and
pushf
shlb
pop
loopne
jnp
pushf
roll
cmpsb
or
adc
and
mov
and
leave
out
das
out
pop
sub
addr16
pusha
mov
mov
imul
aad
mov
add
pop
xor
in
fldenv
add
jecxz
jp
mov
lcall
dec
insl
sub
mov
mul
jb
add
cmp
js
std
lds
je
pushf
shl
andb
cltd
lret
stos
jmp
out
in
or
mov
and
aad
clc
repz
inc
sti
lods
pop
sbb
mov
stos
in
andl
push
dec
and
fimull
scas
xor
repz
xchg
xor
adc
mov
jmp
adc
adc
sub
scas
push
orl
mov
int3
aaa
pop
sub
pop
mov
stos
mov
xor
jecxz
push
in
mov
xorl
jmp
lods
and
adc
repnz
push
dec
repnz
lret
sarb
out
dec
xor
adc
loopne
push
pusha
subl
test
dec
repz
in
call
popa
pop
mov
imul
aas
loop
xor
aaa
into
add
adc
movsb
push
cld
les
scas
xor
mov
sub
sbbb
rolb
pop
push
test
test
mov
push
shll
xchg
repnz
hlt
ja
mov
mov
mov
dec
inc
scas
ljmp
sbb
jecxz
jns
xlat
ret
inc
sbb
cmpsl
push
test
sbb
into
testb
mov
mov
sbb
sahf
adcl
add
cmp
dec
std
stos
xor
xchg
lods
into
test
test
mov
jnp
imul
jg
popa
cmpsb
sub
jns
pop
xlat
sub
pop
clc
xchg
xor
loopne
imul
repnz
lods
loopne
adc
push
dec
sub
cwtl
lret
jo
push
or
jmp
add
and
lahf
out
dec
mov
push
or
lods
inc
jne
repnz
xor
cwtl
in
out
and
sbb
xchg
xchg
hlt
dec
mov
ret
xchg
call
mov
cmp
push
jmp
mov
mov
fistps
movsb
cmp
mov
das
xor
jbe
sub
sbb
inc
testl
push
movsb
das
xchg
outsl
dec
stos
rclb
aad
mov
insb
cld
dec
imull
sbb
shrl
not
cmp
gs
inc
fisubrs
and
gs
mov
test
test
push
cmpsl
mov
lds
jo
js
scas
jmp
outsl
adc
mov
jmp
es
inc
mov
in
lods
lea
mov
aam
cld
in
cli
shrb
subl
ljmp
jbe
outsl
imul
les
mov
bnd
cmpsl
pusha
mov
fildl
lret
add
and
push
cmpsb
imul
xor
inc
std
loope
mov
sub
mov
fs
push
and
sub
mov
push
mov
xchg
jbe
sahf
mov
ljmp
jg
mov
mov
add
iret
add
push
loopne
in
imul
sbb
out
add
es
cmp
push
mov
jge
stos
sarb
adc
xchg
and
cmp
mov
cmpsl
hlt
xchg
test
jle
addl
nop
pop
repz
sub
push
sub
pop
sbb
or
jl
sub
mov
fcompl
sbb
mov
arpl
push
xchg
adc
imul
dec
xor
repz
sar
push
ja
not
mov
aam
pop
jle
sbb
mov
ret
inc
clc
popl
xor
jnp
fsts
cs
ficomps
js
lcall
adc
imul
push
lcall
jecxz
cmp
mov
cmpsl
jmp
mov
xchg
and
jne
insb
jmp
ret
inc
aad
faddp
gs
insb
jge
and
xchg
jnp
xchg
cmp
dec
jo
jl
mov
sub
cli
or
arpl
fwait
sbb
or
xor
cwtl
jo
in
or
pop
loope
jge
loop
xchg
aam
lahf
out
cmpsb
jp
dec
jge
imul
sbb
cld
mov
jp
push
push
dec
sub
sbb
movhps
je
mov
inc
dec
adc
or
push
imul
xchg
jge
pop
lock
out
mov
call
and
fcoml
push
iret
add
out
rclb
mov
push
pop
dec
insl
jge
movsl
adc
pop
cli
gs
int
addr16
mov
jo
and
fistpl
mov
jno
movsl
fisubs
adc
lret
cmp
pop
cli
push
movsb
sbb
xor
imul
cmp
push
testb
jecxz
xchg
or
in
subb
or
xchg
sarl
dec
and
mov
popa
xchg
je
jl
xchg
push
ret
mov
lods
jo
mov
push
stc
push
or
pop
jle
mov
pop
dec
in
mov
push
adc
sub
int3
iret
mov
imul
in
hlt
bound
ret
jg
add
ja
add
icebp
stc
mov
mov
adc
lea
ret
dec
pop
negb
push
mov
hlt
jecxz
mov
jnp
ljmp
xor
or
call
adc
mov
mov
sarl
lods
dec
inc
push
or
rorl
adc
dec
inc
xchg
fcoml
movsl
dec
jne
pop
lret
iret
jle
pop
jg
repz
jne
mov
sbb
cmp
fcmovnbe
inc
sbb
test
in
fdivs
shrb
loopne
cwtl
jp
xor
jne
jl
dec
popa
shrb
lret
filds
ss
mov
dec
jg
fwait
jno
out
int
nop
jl
cmp
andl
iret
sbb
jne
mov
jnp
mov
xchg
pop
or
in
fwait
ja
inc
repz
icebp
or
mov
push
xchg
cmpsb
mov
cmpsl
and
push
mov
imulb
cmc
pop
mov
inc
xchg
int
mov
push
aaa
arpl
cmpsl
subl
sbb
mov
sub
int3
mov
or
or
pop
mov
inc
pop
loop
lcall
daa
mov
push
in
inc
fcompl
mov
lcall
pop
sub
popf
les
shll
insb
scas
leave
xchg
ja
ficomps
ljmp
ss
lods
cltd
les
xchg
in
or
push
or
jb
das
xor
pop
xchg
notl
outsl
add
cld
jle
pop
test
loopne
dec
mov
nop
cmpsl
into
ficomps
push
imul
push
aad
cmp
cltd
int
pusha
pop
sti
ret
mov
cld
enter
xor
lock
mov
popa
movsl
cli
xor
leave
enter
mov
jecxz
lahf
and
outsl
lock
mov
or
xchg
push
cli
pop
jnp
mov
pop
dec
push
pop
push
cmp
js
dec
movl
mov
pop
lock
mov
sbb
stos
mov
dec
jmp
jp
inc
pop
cmc
inc
scas
idiv
jmp
or
or
xor
sti
sbbb
imul
mov
jp
aad
push
push
cmpsl
xchg
pop
mov
add
sub
pop
fsts
sub
ja
imul
or
push
xchg
inc
ret
rcll
dec
cmp
dec
jle
insb
mulb
and
lock
ret
movzbl
insb
insl
scas
adc
push
sbb
dec
xor
xor
aam
add
loopne
inc
imul
les
loopne
cmp
and
dec
jl
mov
xlat
mov
and
sbb
dec
rolb
xor
push
xchg
clc
and
cld
xchg
add
popf
xor
bound
mov
lcall
scas
dec
aas
cmp
mov
add
repnz
inc
mov
pop
shrb
sub
push
ret
sub
addl
lcall
aaa
push
xor
cmovns
out
or
push
or
adc
ret
in
imul
jb
mov
bound
sbb
add
push
jecxz
xchg
mov
sbb
mov
lcall
cmc
icebp
js
pop
jnp
sbb
out
movsb
lret
arpl
xor
xchg
fs
xchg
lea
inc
mov
in
fwait
test
ret
outsl
out
cmp
movsb
jo
or
cmp
push
cmpsl
add
sub
sarl
in
cmp
movsb
fdivrp
jecxz
outsb
test
orl
adc
and
fidivl
dec
ljmp
push
push
rdtsc
pop
or
loope
cs
adcb
fidivs
fsubs
test
sbb
inc
mov
ss
fsubp
xchg
mov
add
and
jae
stos
or
pop
daa
pop
jp
ret
pop
movsb
aas
mov
jg
xor
xchg
loope
push
sbb
jg
clc
mov
push
lods
fwait
jns
iret
and
mov
push
stos
dec
inc
scas
jecxz
out
pop
inc
and
cmp
xchg
out
cwtl
ret
jecxz
jo
adc
mov
icebp
mov
xor
shrl
mov
aad
xchg
sbb
xor
lret
pop
rorb
dec
popf
pop
cmpsl
je
push
or
push
jg
fwait
cmp
fcoms
xor
mov
js
fcomps
imul
into
mov
pop
add
push
loope
or
out
arpl
rorb
add
dec
mov
fcomps
mov
je
or
push
outsl
xchg
es
inc
hlt
xor
mov
cs
xor
xchg
rcrb
xchg
xlat
lods
pop
inc
sbb
rcr
inc
push
xchg
mov
mov
lods
inc
enter
and
popf
push
cmpsl
sbb
and
adc
xchg
xor
cmp
jmp
incl
cmp
or
dec
outsl
mov
ret
hlt
mov
jmp
inc
sbb
outsl
mov
ficompl
test
xor
inc
leave
inc
lea
imul
mov
inc
push
cmp
jmp
lret
add
sbb
ljmp
test
iret
mov
int
or
pop
repz
sarl
mov
scas
std
fidivs
aas
cld
xlat
idivl
jnp
aad
pop
sti
inc
daa
lock
test
cs
jb
xchg
repz
xchg
sub
mov
xor
or
lods
jmp
cmc
imul
pop
xchg
out
add
jp
mov
stc
jge
cmc
mov
adc
out
sub
loopne
aad
lahf
loop
inc
mov
ret
rcrl
jnp
mov
cmpsl
mov
sub
imul
or
loopne
mov
push
jl
arpl
icebp
pop
mov
jb
rorl
jg
mov
push
lods
xchg
lds
nop
mov
lods
xor
cmpb
pop
fistpll
cmp
adc
mov
dec
fdivrl
or
loopne
lock
aaa
sbb
outsl
inc
enter
mov
test
push
shlb
imul
dec
andl
add
dec
fdiv
sub
jo
jns
mov
shlb
das
pop
loope
lods
adc
stc
sub
pop
add
repz
scas
repnz
es
pusha
enter
loopne
insb
xchg
xor
mov
push
add
inc
add
and
mov
inc
popf
daa
orl
mov
shl
adc
cmp
sbb
dec
imul
sbb
dec
iret
push
loop
adcb
cs
pop
imul
mov
cmp
xchg
inc
stos
bound
jns
pop
push
scas
subb
fsubrs
mov
push
mov
pop
or
pushf
insl
pusha
push
pushf
add
in
jecxz
xor
jnp
imul
outsl
ficomps
das
sub
xchg
into
and
movsb
sbb
nop
adc
scas
xor
xchg
xor
adc
pop
dec
getsec
inc
lcall
adc
push
fcoms
popa
cmpsl
pop
test
notl
inc
cld
mov
fidivs
jl
dec
push
insb
repnz
outsl
mov
icebp
mov
data16
or
cmp
nop
mov
movsb
xchg
out
jg
pop
and
or
ret
or
inc
lret
mov
dec
das
sti
aad
jnp
xor
sub
mov
pop
idivl
imul
xchg
push
xorl
mov
inc
jno
daa
cld
scas
cld
test
push
sbb
subl
and
rclb
mov
aam
mov
out
and
dec
and
jno
add
jl
repz
mov
or
cmpsl
push
stos
add
int3
call
or
xorb
clc
push
fwait
cld
addb
pop
sub
negb
pusha
in
inc
pop
loop
leave
push
jnp
jbe
ret
stc
ss
mov
std
in
shlb
stos
adc
sub
pop
and
push
shlb
jle
mov
mov
adc
arpl
xchg
mov
insl
out
aam
mov
or
xchg
idivl
mov
popf
mov
icebp
scas
dec
cld
enter
sbb
test
ds
addl
mov
adc
lahf
sbb
imul
xor
js
add
int
and
mov
in
mov
cmc
rcll
sbb
cmc
out
aaa
dec
les
movsb
push
mov
sti
xchg
out
out
jl
dec
push
add
dec
shll
dec
stos
ljmp
in
jo
sub
sbb
adc
push
lea
xchg
lcall
in
push
dec
mov
pusha
addr16
aam
xchg
divl
cwtl
dec
jmp
je
or
mov
inc
or
repz
xchg
outsl
test
stc
mov
lret
hlt
aas
mov
push
pop
sub
pop
std
jae
cltd
xlat
movsl
pop
dec
xchg
mov
ret
inc
lea
mov
stos
mov
loop
xchg
movsl
xor
inc
sub
dec
pusha
mov
shll
into
int
mov
lods
xor
mov
inc
jl
adc
nop
sahf
enter
mov
mov
fidivs
icebp
fldenv
pop
insb
js
lods
nop
xchg
add
outsl
fwait
lret
imul
movsl
push
aam
aam
and
call
jle
loope
outsl
jae
repnz
shll
inc
sub
mov
loopne
sub
xchg
mov
test
shrl
push
xor
xchg
push
inc
loopne
inc
pop
adc
dec
das
fists
sbb
fbstp
out
push
sbb
jmp
xchg
mov
mov
cmpsl
fisttpll
sub
int3
popf
jl
xchg
sub
pop
mov
pushf
sub
lcall
push
mov
int
pushf
pushf
out
stc
inc
or
or
or
inc
das
cli
arpl
pop
ret
inc
xor
shll
fstpl
add
push
into
mov
jg
insl
aaa
xchg
shrl
lcall
and
jl
or
xchg
and
out
and
cmc
or
xchg
mov
movsl
mov
sub
cmpsb
push
cmp
scas
xor
int
sbb
movsb
js
insl
mov
adc
push
test
int3
sub
cmp
add
add
mov
cmp
and
adc
sbb
pop
xor
xchg
ret
lds
add
fisubs
clc
fs
or
pushf
mov
pop
negl
out
fwait
loopne
add
xor
lahf
and
cmp
test
shll
jo
loope
je
add
add
iret
push
shrl
mov
aam
inc
sahf
jecxz
data16
call
shrl
and
ret
add
or
daa
xor
in
or
imul
rolb
scas
jg
mov
push
test
std
mov
cwtl
imul
mov
mov
cld
in
xchg
pop
push
cmp
and
divb
jbe
frstor
jp
push
or
pushf
movsb
scas
xlat
adc
pop
ret
roll
xchg
push
jae
dec
and
out
imul
test
gs
lahf
loope
lcall
cwtl
jns
add
cs
mov
mov
pop
jae
jp
sub
fldl
test
sbb
inc
popf
aad
sahf
sub
and
clc
testl
lods
mov
faddl
cli
aaa
push
ret
inc
cmc
xchg
xchg
sub
xor
test
lock
pushf
stc
fsts
test
jg
cli
adc
repnz
pop
mov
inc
or
popf
test
xor
xor
jp
xor
sbb
test
or
or
div
lahf
lock
pusha
sbb
and
ret
mov
ffreep
push
aas
out
repz
lods
pop
cld
mov
cli
xchg
inc
cmp
mov
outsl
pop
aaa
cmp
sub
xchg
push
jp
pop
push
movsb
stos
rorl
jno
in
imul
int3
push
call
adc
and
dec
out
mov
movsb
or
jecxz
add
or
pop
xchg
and
mov
xchg
xchg
shll
jo
insl
imul
popf
in
int
or
ljmp
and
in
push
xor
xchg
hlt
lds
mov
mov
popa
push
roll
aam
xchg
push
push
je
imul
insb
scas
sti
jno
iret
ljmp
cli
adc
movsl
fwait
sbb
movsb
movsl
fsubl
push
jg
add
sbb
es
sbb
test
enter
dec
cli
mov
adc
aas
add
test
pop
ret
repnz
ss
xor
inc
int3
jb
xchg
int3
pushf
loope
sbb
push
outsb
cmp
cmpsl
adc
jecxz
je
outsb
int3
add
pop
lods
das
outsl
lcall
scas
jne
sbb
or
fs
imul
jl
popf
popa
rolb
into
ret
das
inc
addl
pop
pop
addr16
mov
movsb
pop
cmc
inc
out
push
xor
jno
loop
and
loopne
in
je
dec
xor
mov
ljmp
xlat
mov
push
std
sub
pop
out
jge
shl
ljmp
adc
xchg
cmp
clc
dec
sub
xor
pop
cs
lea
cmp
fmull
mov
dec
pop
mov
mov
xchg
adc
inc
push
repnz
adc
mov
in
xor
jnp
in
lahf
fidivrs
sub
xor
sub
pop
movsb
bound
push
addr16
push
iret
cmp
sub
lret
mov
add
mov
dec
mov
in
outsl
popf
test
fdecstp
pop
stos
add
or
and
iret
sub
push
pop
mov
pop
dec
pop
jb
test
imul
fstp
or
mov
jb
inc
icebp
movsl
out
outsb
icebp
lock
push
hlt
adc
or
jb
in
lock
les
mov
in
pusha
inc
fiaddl
cmp
insb
imul
call
inc
aam
inc
dec
ja
push
ja
es
push
sqrtps
cmpsl
push
addl
push
aam
push
les
mov
test
mov
out
sbb
inc
insl
je
and
pop
mov
in
dec
push
jo
daa
push
stc
xor
mov
int3
mov
rcr
mov
cli
adc
xlat
data16
insb
fnsave
leave
pop
in
xor
xor
test
movsl
xchg
data16
push
repnz
ret
fisttps
push
pop
cltd
ljmp
movsb
xchg
dec
dec
aas
xchg
adc
lcall
xchg
mov
sub
int
fwait
es
adc
adc
and
push
sub
rolb
mov
push
push
sbbl
cli
jnp
and
sbb
rorl
mov
fidivs
or
ret
sub
or
hlt
lods
je
mov
lds
dec
lret
mov
and
ja
or
stos
mov
out
xchg
jg
les
scas
clc
rcrb
mov
add
jmp
out
aam
std
std
std
mov
pop
mov
inc
imul
sbb
push
add
orl
mov
roll
insl
das
les
aam
pop
es
mov
lcall
sub
pop
shlb
aam
xor
and
xchg
xchg
sbb
jmp
lds
push
jns
jecxz
sub
pop
popa
pop
adc
sbb
push
je
int
jl
pop
mov
int
popf
movsl
in
ret
sub
insb
sub
orl
repz
cmp
fwait
sbb
xchg
cmp
shll
inc
or
in
dec
adc
xchg
jno
jge
subl
nop
xchg
bound
and
xchg
fsubrs
addb
dec
outsl
mov
das
scas
cld
inc
lds
dec
data16
mov
pop
test
cwtl
push
xor
mov
movb
test
rorl
dec
lods
push
mov
cmp
lcall
mov
jmp
adc
repnz
mov
repnz
sbb
sbb
cmp
adc
testb
fidivs
jns
dec
or
dec
divb
push
mov
cwtl
rcll
sti
sbb
inc
mulb
jb
stos
bound
adc
out
sub
mov
xchg
cmpsb
in
clc
pop
loop
mov
jecxz
sub
in
out
insb
lahf
leave
lods
iret
aad
mov
lahf
je
or
dec
outsl
xlat
mov
std
inc
push
jnp
lret
mov
sub
jne
xchg
jae
add
mov
pop
jmp
jp
or
dec
mov
sub
jge
jo
leave
jne
jno
mov
mov
inc
int3
mov
sub
mov
inc
aaa
inc
xchg
lock
cwtl
adc
div
outsl
xor
inc
loope
sahf
rorb
test
xchg
jecxz
xchg
jmp
inc
cwtl
mov
cmpsb
rcrb
sbbl
pop
stos
repnz
sub
popf
dec
nop
inc
insb
adc
loopne
push
xchg
loop
and
sub
mov
addr16
lret
mov
call
mov
sar
cmpsl
xlat
cmpsl
hlt
sbb
pop
mov
adc
inc
pushf
in
inc
decl
addr16
inc
mov
adc
ret
out
and
and
sbb
insl
cmp
cwtl
clc
xlat
test
fdivp
push
out
dec
dec
pop
ss
rorl
testb
sbbb
mov
jmp
fwait
loope
mov
mov
addl
add
loope
adc
data16
ret
mov
cwtl
xorl
lret
clc
neg
lahf
dec
inc
sbb
pop
ficoml
cmp
push
insb
popa
mov
outsb
mov
lcall
inc
aam
sub
adc
sbb
lret
mov
popf
gs
stos
gs
addr16
rclb
adc
out
mov
xor
mov
in
mov
or
dec
jnp
mov
icebp
scas
push
lret
push
sbb
sub
mov
jne
in
in
dec
mov
out
dec
iret
or
add
mov
in
and
inc
xor
add
inc
lds
lret
insl
pop
and
leave
rorb
dec
xorb
mov
sar
call
cld
lcall
mov
lock
sub
fisubrs
cmpsl
ret
push
pop
rorl
or
lods
pop
popa
cmp
mov
std
pop
ss
out
adc
xchg
add
adc
in
xchg
daa
cmc
mov
decb
pop
mov
mov
mov
push
sbb
sbb
cmpsb
out
or
inc
adc
dec
xchg
icebp
addl
ficompl
dec
push
jo
cmp
aad
hlt
jp
inc
out
sub
shl
xor
and
pop
flds
jg
data16
cmp
pop
jecxz
es
dec
pop
nop
loop
push
dec
arpl
loop
push
les
popa
xor
int3
les
loop
loope
repz
mov
scas
daa
sbb
in
outsl
sbb
mov
xchg
jo
pop
jecxz
cmc
cmc
arpl
std
jmp
jg
shrl
sbb
ljmp
push
push
ljmp
mov
sub
out
push
adc
push
sbbb
pop
out
inc
mull
push
aad
data16
testl
mov
push
movsb
and
loope
je
dec
and
adc
leave
ja
arpl
mov
arpl
inc
sub
lods
or
aaa
ret
pusha
in
push
fldcw
jp
shrl
sub
aam
xchg
sub
or
adc
aaa
stos
push
aaa
sub
icebp
test
cmp
subl
sub
push
bnd
clc
and
loop
imul
cmp
adc
cmp
jae
cmp
aaa
pop
sub
call
popf
inc
fcompl
jnp
faddp
cltd
cs
daa
arpl
sbb
lcall
or
mov
shlb
inc
roll
stc
jbe
mov
inc
lret
push
fiaddl
rcl
jle
ds
into
pop
jecxz
cld
test
hlt
daa
dec
and
cmp
xor
pop
or
mov
ds
dec
pop
int3
adc
pusha
les
and
daa
add
or
or
loop
push
xchg
jne
pop
hlt
xchg
jnp
jns
xor
mov
aam
test
lret
dec
cmpsl
imul
mov
enter
adc
das
mov
or
mov
jns
ret
pusha
jno
mov
sbb
gs
lcall
pop
and
adc
mov
fwait
popf
imul
cwtl
shrb
lcall
sub
xchg
sbb
mov
dec
test
cmp
fdivrl
xor
fwait
das
xor
mov
lret
and
popa
jbe
lock
mov
mov
xor
xchg
cmp
negl
inc
std
sub
push
mov
cmc
inc
dec
or
outsl
cmp
in
pop
add
test
inc
pop
pop
sub
cmp
lea
xchg
mov
mov
add
jne
testl
dec
lods
xor
and
cltd
lret
sbb
push
insb
xchg
dec
call
push
lods
jecxz
pop
mov
adc
jl
stos
mov
daa
bnd
cli
lret
pop
fsubrl
pushf
dec
call
dec
mov
addr16
repnz
mov
xchg
int3
mov
aad
mov
stos
imul
je
in
mov
pop
adc
push
mov
add
sub
jmp
lods
dec
xor
push
insl
sub
mov
les
pop
pop
shl
mov
call
cmp
jecxz
mov
dec
push
imul
test
fdivrs
in
mov
and
or
test
mov
mov
fadds
sbb
push
mov
add
fcomi
cmp
cmp
mov
jns
outsl
cmpsb
jnp
js
pop
lahf
icebp
addr16
adc
out
inc
push
mov
mov
cli
sub
fimuls
rorb
sub
xor
pop
adc
jge
xchg
test
outsl
dec
cmp
and
stc
pop
fmull
loop
jl
push
sahf
dec
or
pushf
and
jnp
sub
jnp
inc
cmpsl
arpl
mov
mov
or
sbb
and
cmc
or
invd
xor
cld
adc
dec
pusha
dec
dec
push
rorb
adc
cmp
xor
dec
jmp
pop
enter
repnz
push
pop
xorb
daa
xor
sub
jnp
jne
movsl
mov
sbb
repnz
in
add
add
ficoml
out
xlat
or
mov
and
mov
loope
pop
dec
mov
daa
andb
jg
xorl
jne
push
adc
dec
or
jbe
pop
scas
adcl
mov
add
imul
lcall
out
sti
enter
jb
sbb
dec
scas
pop
enter
mov
sbb
fnsave
test
scas
inc
ss
mov
loop
lea
popa
push
pop
mov
sbb
hlt
inc
shrl
jmp
push
cwtl
cmpsb
out
xchg
add
mov
xchg
ret
mov
aaa
scas
sbb
mov
jae
cli
and
sbb
mov
push
std
xchg
dec
lods
or
add
mov
cmpsl
mov
iret
dec
push
daa
adc
add
pop
lret
add
lret
divb
or
inc
movsbl
scas
or
cmp
adc
mov
out
sbb
pop
push
xor
mov
mov
test
or
sub
ss
mov
mov
xchg
stc
aad
xor
xlat
inc
fisttpll
hlt
cs
int3
sub
add
or
fbstp
movsb
imull
adc
cs
add
add
les
mov
ljmp
pop
outsb
and
mov
dec
inc
inc
and
inc
push
andb
push
jecxz
push
dec
inc
xchg
dec
icebp
pop
or
das
pop
stc
test
and
dec
outsb
jae
cmp
insl
lock
inc
lds
pop
add
add
jbe
in
sbb
popf
or
fdivrl
hlt
push
mov
mov
xchg
movsb
jns
test
mov
push
or
inc
enter
inc
insb
xchg
aas
int3
daa
sbb
cmc
lock
lcall
dec
mov
push
jae
lcall
sub
push
xor
aaa
or
popf
into
or
adc
fsubr
mov
xlat
std
xor
fs
jae
xchg
rcrb
jg
add
and
sbb
sub
push
daa
stos
pop
into
fdivrl
movsl
and
test
pop
pop
test
sub
mov
push
fisttps
arpl
pop
pop
hlt
repz
fistpll
das
pushf
jbe
repz
ja
and
pop
sbb
pushf
sahf
or
out
orl
inc
mov
or
cli
sub
enter
cmp
sbb
inc
dec
sbb
je
movsl
or
pop
out
push
mov
ss
insb
add
cmp
incl
std
pop
xchg
xor
sbb
pop
add
inc
sbbb
cwtl
push
cld
ret
movsl
and
outsb
orl
ljmp
sti
mov
mov
dec
mov
add
push
stos
pop
pop
call
mov
xor
jecxz
dec
xor
scas
je
xchg
mov
leave
xchg
cmpsl
lods
mull
int
mov
inc
mov
sbb
cli
or
imul
imul
das
stos
out
push
pop
cvtps2pi
push
sahf
cld
push
xor
lahf
xchg
sub
scas
stos
xor
rcrb
dec
testl
push
inc
dec
sub
sbb
mov
jae
sub
mov
adc
push
inc
cmp
insl
mov
leave
ret
jmp
sahf
enter
mov
add
mov
insl
loopne
lock
jnp
adc
test
adc
push
int
insb
idivb
or
cmp
test
pop
loopne
cwtl
cmp
fists
ret
jp
xor
xor
dec
ljmp
aam
cmp
in
daa
or
aad
jge
fistpl
popf
test
out
ds
mov
mov
sbb
insb
aad
dec
xchg
fisttpl
ljmp
pop
xlat
mov
mov
mov
lahf
cmp
sub
vpunpckhdq
daa
push
sahf
pshufw
outsl
inc
lods
lahf
jecxz
push
xchg
xor
bound
ds
les
and
rorb
mov
fdecstp
jecxz
pop
mov
sbb
scas
sbb
scas
xchg
lock
test
jmp
add
inc
lods
push
mov
lds
adc
push
jge
pop
es
fldt
sahf
fbld
or
mov
cwtl
and
ret
add
push
mov
es
mov
inc
insl
call
adc
cmc
lea
mov
icebp
pop
jg
jae
loopne
loopne
lods
mov
test
movsb
xchg
dec
cwtl
in
repnz
mov
push
lea
dec
lret
imul
mov
add
adc
in
aam
dec
out
dec
adc
int
ss
xchg
push
xchg
jo
mov
sbb
aas
adc
cwtl
movsl
test
pop
xchg
push
inc
add
popa
arpl
arpl
mov
stos
push
ja
adc
push
inc
test
sub
lods
leave
repz
loop
sub
clc
cmpsl
andl
mov
ficoml
push
shl
jae
je
stc
cmp
jo
and
cmpsl
je
fsubp
jno
adc
cmp
pop
das
mov
lods
cmp
repz
and
jecxz
inc
jecxz
jge
inc
push
push
std
cmpsb
andb
adc
and
mov
cmpsb
outsb
cmp
js
cli
shl
xlat
cmp
push
jne
out
push
ja
mov
lods
fbstp
ljmp
cmp
dec
jmp
xchg
arpl
cmpsl
inc
les
in
fcomp
loop
hlt
test
sbb
adc
sbb
and
mov
mov
shlb
and
rcrb
rcr
xchg
data16
popf
add
add
scas
scas
jmp
add
add
ja
push
addr16
dec
movsb
in
jns
xchg
cltd
xchg
test
jno
adc
lods
jae
mov
addb
test
les
mov
das
push
ret
dec
pushl
fcompl
dec
jle
xchg
add
xchg
lcall
sti
mov
dec
shl
mov
mov
shrl
push
arpl
in
adc
dec
je
sarb
outsl
cmp
push
adc
icebp
or
mov
ret
orl
repz
cmovp
daa
add
push
mov
cmpsb
adc
fs
rorb
clc
loopne
gs
shlb
push
cli
lret
sahf
aad
andl
and
or
push
std
shlb
mov
fwait
mov
add
jb
popa
jmp
sub
repnz
icebp
lock
cmp
or
pop
fwait
cmc
pop
mov
int3
js
xor
aas
push
daa
jecxz
xchg
cmp
mov
adc
fwait
lods
sbb
sub
in
push
lret
arpl
fbld
inc
or
stos
sbb
insb
bound
call
push
inc
sub
add
icebp
je
inc
in
push
or
cmp
dec
loop
mov
je
in
adc
or
push
sbb
inc
data16
das
andl
dec
dec
mov
pop
mov
mov
aas
sahf
push
addb
adc
add
fimull
std
fstpt
pushf
xchg
jo
daa
insb
psrld
mov
jl
es
outsl
mov
fcomps
lret
repnz
pop
mov
cmp
cmp
enter
or
mov
imul
xchg
inc
mov
imul
push
ret
push
mov
imul
andl
push
cmp
mov
insb
std
ret
mov
fcomps
push
je
popl
scas
leave
cmc
cs
outsb
dec
xchg
lods
fnsave
adc
je
mov
push
push
das
mov
or
pop
int3
ss
push
je
adc
and
js
jo
in
adc
fisttpll
and
fwait
int
sbb
push
pop
imul
fs
popf
xor
addb
xor
addr16
popf
ja
jne
xchg
dec
out
xor
in
dec
int3
andl
out
test
xchg
xor
mov
aas
or
jne
push
fildl
out
mov
dec
or
xor
pop
pop
pop
mov
stos
jl
pop
pop
shlb
les
sub
insb
inc
test
ja
mov
add
lea
mov
imul
hlt
inc
pusha
pushl
and
push
adcl
mov
shrl
les
das
lds
jge
fptan
jle
in
arpl
adc
mov
cmp
scas
test
jl
sub
pop
lock
test
shll
fistpl
sbb
sub
loop
mov
or
fdivs
xorl
not
pop
cmp
mov
xor
in
jne
fisttps
push
lcall
pop
pop
rclb
lods
push
test
loope
sbb
jl
and
dec
cld
jp
mov
xlat
add
dec
mov
cmpsl
repnz
mov
inc
sub
xchg
push
sbb
adcb
pop
js
sub
imul
mov
jo
mov
repz
sbb
popl
adc
inc
sub
gs
cmp
sbb
pop
xlat
sbb
iret
lea
leave
pop
mov
adc
add
jnp
inc
mov
add
in
sub
jmp
jns
ds
xor
pop
and
xlat
clc
mov
xlat
insl
jbe
pop
dec
xlat
pop
push
aad
sbb
jg
jnp
sub
test
or
lret
mov
mov
call
xor
dec
ret
sub
inc
pop
cmp
cltd
test
out
jno
aam
insb
sub
pop
ret
push
inc
pop
sub
adc
push
add
pushf
cmpsl
jb
add
xchg
push
push
test
sub
cltd
lock
hlt
xchg
repz
dec
inc
std
mov
jge
movsl
ja
bound
scas
popf
adcl
jb
jnp
sbb
test
add
push
cmp
imul
mov
mov
sti
mov
movsl
push
mov
fidivrl
add
xchg
std
sbbl
pop
scas
test
daa
lahf
mov
aam
push
pop
roll
nop
and
push
fwait
mov
or
test
push
pop
cmpsl
cs
fcmovnu
pop
and
push
pop
push
mov
xor
mov
sbb
sbbb
jle
xor
push
iret
test
push
lock
arpl
scas
mov
adc
gs
jl
push
pop
test
add
push
adc
xor
lret
add
outsl
popf
inc
ret
lock
sbb
adc
sbb
insl
sub
dec
inc
jge
and
mov
hlt
xchg
shll
dec
mov
sub
sub
mov
pop
sub
xchg
mov
adc
fsubs
decb
lcall
mov
sbb
subb
mov
push
adc
mov
jecxz
cmp
negb
mov
adc
test
push
icebp
daa
aas
loopne
push
rcl
mov
mov
cltd
mov
jae
mov
sbb
mov
inc
ss
inc
xchg
movsb
cmp
mov
or
push
xchg
and
loopne
inc
push
mov
inc
insl
insb
inc
push
pop
add
loopne
icebp
lret
mov
divl
mov
mov
pop
aam
inc
inc
std
fidivl
std
mov
mov
jne
push
and
or
js
stos
repz
out
repnz
lahf
add
movsb
sub
mov
jnp
push
inc
les
subl
and
push
push
movsl
mov
out
enter
xchg
test
push
pop
jbe
scas
out
push
xchg
negl
xlat
sub
jbe
xlat
subl
mov
mov
jns
lds
or
jno
loop
dec
rcrb
pop
stos
aam
dec
ds
cmpsb
outsl
cld
or
pop
test
ret
or
arpl
fisubl
mov
cwtl
into
ret
mov
push
int
jg
mov
scas
and
mov
call
lds
mov
jl
scas
movsb
aad
test
push
out
decb
cmp
sti
adc
icebp
jnp
test
daa
pop
add
dec
xchg
dec
mov
insl
ds
ficomps
jl
mov
sub
ret
jne
and
out
lea
adc
or
cmp
negl
cmp
sbb
aas
push
rcll
push
ds
sti
dec
fwait
add
adc
loope
in
into
iret
or
push
aad
loope
and
jno
sbb
jge
fwait
cmp
cs
insl
lret
cmpsl
stos
push
stc
pop
inc
mov
xchg
xor
push
mov
or
stos
cmp
pop
je
repz
and
sbb
insl
hlt
andb
xlat
pop
enter
jns
xlat
out
ret
mov
sahf
and
jb
fptan
or
fcomip
mov
loop
jo
popf
mov
cmp
ficomps
iret
sub
mov
aam
lea
jmp
jbe
mov
xor
pop
jno
movsl
pusha
xchg
lret
fs
xor
sub
push
fnstenvs
adc
stc
pusha
je
adc
imul
or
int
jns
jge
int
mov
xchg
lret
fisttpll
mov
movsb
dec
arpl
mov
xchg
sbb
shll
dec
iret
nop
jl
inc
shrb
jbe
or
popf
dec
or
aad
jbe
ret
jl
mov
xchg
pop
cmp
rorl
iret
sar
andl
mov
inc
mov
sbb
stos
into
push
mov
lret
adc
sahf
movsl
dec
inc
iret
mov
sbb
pop
outsb
xchg
or
stc
adc
cmc
and
jecxz
sti
insl
xchg
lods
inc
add
push
push
fdivp
or
mov
mov
mov
pushl
cwtl
cli
sbb
shll
test
lret
repnz
movsl
lret
xchg
xchg
jp
fldt
push
and
js
sub
push
std
push
xorl
jnp
pop
sub
xchg
add
or
pop
scas
lods
pop
loope
inc
insl
jmp
test
push
lock
cmp
rolb
imul
imul
or
adc
pop
adc
pushf
movsl
iret
and
inc
sub
xor
cmp
call
loopne
cmpsl
xchg
push
lea
sbb
shll
in
mov
sub
jmp
out
pop
and
push
ljmp
das
mov
dec
jp
mov
cmpsb
mov
insl
push
pop
sbb
fdivs
mov
pop
ljmp
add
mov
push
inc
fs
xor
push
scas
dec
test
ds
dec
aaa
sbb
imul
mov
fsubrl
ret
es
mov
popa
in
pop
push
jnp
stos
and
push
enter
push
out
mov
push
addb
mov
jmp
pop
out
rorb
mov
sbb
push
dec
mov
negb
and
and
jg
je
jo
andl
call
outsb
sar
out
test
js
ret
adc
add
fstl
sub
or
fisttps
pop
rolb
ret
inc
aam
jbe
aaa
dec
jns
sub
popa
js
jne
mov
enter
sbb
add
out
fadds
mov
lea
inc
jae
lds
loop
outsl
lret
xor
dec
dec
jnp
mov
lret
inc
pushf
cli
outsl
adc
pop
cwtl
dec
xchg
lret
pop
loopne
mov
push
out
sbb
or
jne
and
pop
loope
stos
push
ret
xor
push
in
leave
jge
xor
popf
cmp
mov
push
push
ljmp
cmpsl
pop
fwait
mov
fcoms
fnstcw
mov
sbb
ds
sbb
pop
stc
imul
or
fisubs
iret
dec
jmp
roll
shrb
xchg
pop
stos
fucomp
gs
data16
push
pop
rol
or
sub
jp
inc
add
xor
mov
add
mov
cmp
lea
int3
push
insb
hlt
jl
xor
or
je
das
sti
das
cmpsl
lods
jge
pop
dec
or
inc
sub
mov
cltd
adc
fs
and
pop
jnp
push
jmp
hlt
add
xlat
stos
jae
iret
shl
or
jae
scas
scas
rcrl
jp
or
inc
ret
lds
pop
pop
xchg
inc
mov
dec
sbb
dec
add
jb
shrb
jmp
pop
ds
push
adc
dec
arpl
mov
mov
arpl
aas
or
pop
test
and
push
rclb
and
xor
loopne
stc
imul
lods
fldt
dec
mov
sub
ret
inc
aaa
xor
mov
rol
mov
lahf
pop
enter
int
aas
or
in
loope
mov
lcall
adc
mov
test
and
dec
inc
dec
xor
mov
jecxz
stos
add
int
out
xchg
mov
mov
push
and
test
add
mov
cmpsl
xchg
stos
int
test
ljmp
jmp
fs
cmp
ljmp
mov
and
and
sub
xor
cld
sbb
add
cmc
cmp
fsubr
inc
mov
mov
pop
data16
dec
sbb
push
iret
push
mov
mov
cltd
jp
push
pop
add
xchg
xchg
test
mov
push
dec
loopne
iret
shrb
loope
subl
jle
in
jns
out
push
lods
xchg
pop
mov
repnz
es
testw
imul
ret
xchg
mov
mov
inc
mov
pushf
jl
fucomi
sub
decb
push
cmp
mov
dec
mov
movsl
push
pop
repnz
pop
lcall
loop
stc
test
clc
mov
inc
inc
pop
jecxz
and
es
outsb
inc
jae,pt
fmulp
inc
movsb
mov
jne
mov
sti
pop
or
stos
sbb
lea
out
push
out
xlat
lret
cmpsb
adc
fcmovnb
cld
jp
dec
cmp
or
cmpsb
mov
sub
mov
gs
jo
push
popa
lods
ret
pop
xchg
stc
test
sub
or
aaa
sbb
dec
leave
xlat
test
jge
into
adc
leave
xor
cwtl
dec
imull
or
jb
cmc
mov
cld
pushf
aam
or
mov
pop
push
xchg
push
repnz
push
icebp
adc
sub
adc
cmp
aam
inc
jp
out
or
or
mov
repz
cmc
mov
mov
mov
adc
and
push
mov
and
sub
mov
pop
pushl
inc
ds
pop
mov
mov
mov
stos
mov
das
and
ret
and
movsl
mov
or
fsubs
ljmp
icebp
sbb
dec
aad
xor
mov
jns
int
orb
cli
mov
inc
or
repz
sub
insb
pop
add
xor
dec
repnz
sub
and
and
pop
or
mov
jl
xor
xor
cmp
mov
aad
xchg
pop
inc
test
pushf
push
dec
cs
adc
out
stos
or
cltd
loope
jle
lcall
imulb
mov
fcomi
les
fistps
mov
mov
outsb
mov
push
xor
jmp
and
jns
jecxz
lods
rcrb
mov
or
inc
xchg
mov
mov
xlat
xchg
dec
fnstcw
es
adc
and
and
aad
lock
ror
arpl
mov
lods
pop
cmp
test
lret
add
aas
adc
and
xor
push
push
add
mov
add
out
rolb
add
jae
cmp
outsb
outsl
jo
mov
xchg
pop
jp
pushf
aam
add
lds
xor
rep
xchg
fnstsw
pop
inc
xchg
sarb
and
xchg
inc
mov
je
cmp
adc
mov
fsubr
std
dec
gs
popf
jbe
in
xorb
dec
jle
inc
test
inc
pop
or
jmp
cmpsb
xchg
icebp
xchg
popa
push
sub
cmp
out
mov
lea
mov
mov
ja
mov
sub
pop
outsl
dec
int
xchg
movsb
fldenv
dec
mov
add
mov
sarb
mov
in
andb
cmpsl
js
cmpl
aam
add
ds
jnp
in
shl
ret
mov
shlb
popf
add
cs
add
xchg
adc
xor
pushf
jnp
or
sti
insl
push
adc
mov
jl
dec
push
jnp
arpl
inc
cmpsb
loope
stos
ljmp
lods
pop
inc
sti
orb
cmp
into
mov
xchg
inc
sub
lahf
push
xchg
add
inc
int3
in
and
test
xchg
clc
shr
inc
pop
mov
mov
loope
jge
inc
ret
ljmp
xor
fadds
into
xor
in
test
mov
pop
aam
shll
imul
add
and
xchg
cmp
sbb
lcall
pop
into
cltd
xchg
negb
sbb
xchg
outsl
cmp
out
addr16
mov
mov
adc
js
mov
popa
movsl
xchg
cmc
and
popf
mov
jnp
sbb
cli
pop
xor
mov
jge
lods
jg
xor
or
add
inc
shrl
or
mov
movsl
lods
movsb
xor
xorb
pop
add
sahf
and
jge
cmpsb
jecxz
bound
fisubrl
push
and
cs
xor
stos
sarl
and
in
testb
lret
sti
popf
repz
jo
insl
mov
jle
shll
movsl
aas
subb
enter
pop
mov
cltd
js
fmuls
lret
shlb
bound
pop
fisttpll
sbb
les
repnz
lret
roll
mov
xchg
icebp
jno
hlt
mov
aam
jno
pop
fstpl
sahf
inc
js
jae
cmp
add
or
out
dec
cmp
inc
sub
sbb
ja
add
hlt
lea
fsub
push
shlb
and
shrb
mov
mov
lock
jle
sub
pushf
dec
mov
cmp
and
sti
mov
stos
imull
sahf
ficoml
sub
or
adc
and
and
or
xchg
jno
push
cld
xchg
mov
jne
js
mov
pop
nop
in
xor
arpl
xor
jle
mov
or
cmova
push
or
shr
xchg
cmpsl
icebp
pop
insl
pop
push
insb
jg
fsubl
mov
sbb
adc
subl
push
push
pop
dec
rolb
cmp
pop
add
out
sbb
jno
pop
mov
jg
sbb
cmp
cli
les
inc
or
adc
jno
or
mov
inc
cwtl
or
xchg
popf
mov
dec
xchg
das
xor
adc
fisubrs
ljmp
xlat
xchg
in
out
mov
stos
jp
cmp
leave
lds
xor
imul
popa
mov
xor
xor
rol
and
and
pop
add
psubsb
jae
mov
in
adc
aas
push
jle
lds
sub
imul
jge
jns
mov
dec
das
mov
mov
sub
aam
cmp
mov
pop
sti
push
jb
ljmp
cmp
jge
cmp
cmp
in
idivb
fsubrs
inc
jl
mov
mov
cmp
adc
iret
mov
pushf
lds
popl
loop
clc
aam
fnsave
cmp
sub
clc
push
push
data16
mov
or
lock
aam
sbb
fwait
push
dec
test
push
mov
mov
jecxz
inc
lock
sub
push
mov
hlt
xchg
xchg
sub
jl
jbe
and
xchg
sub
cli
xchg
scas
out
test
cli
jbe
jge
popa
mov
push
int
sbb
scas
xchg
xchg
add
push
inc
sbb
ficomps
das
mov
fcoml
mov
and
out
cli
cmp
sub
popf
call
xchg
pop
call
push
sub
movsl
dec
fstpl
shrb
nop
arpl
roll
or
and
movsl
mov
push
xorb
lds
xor
call
decl
or
adc
repz
push
ret
lea
js
cltd
adc
shrl
xchg
fidivl
mov
adc
mov
pop
test
in
cmp
es
std
movsb
stos
cltd
test
rcrl
jle
loop
push
push
mov
aas
mov
andb
dec
int3
popf
in
bound
dec
test
or
mov
stos
cmpsl
fisttps
stc
out
pop
jbe
stos
nop
push
or
int3
cmp
add
cmp
fldcw
and
xchg
cltd
or
mov
adc
fwait
lods
dec
cs
jmp
in
jl
inc
hlt
sub
add
cmp
mov
jae
and
dec
rcll
insb
push
jge
mov
pop
das
inc
fstpl
pusha
mov
or
dec
cmp
xchg
push
dec
sub
pop
fisubrl
jo
push
js
xchg
out
insb
add
cmp
xchg
insw
inc
cmp
or
mov
in
nop
out
ljmp
and
push
jns
and
adc
cmp
sbb
sti
cmp
pop
jb
lcallw
jg
decb
loope
repnz
xrstor
aad
sarb
xorb
mov
ret
pop
xlat
push
and
pop
adc
push
out
or
push
mov
pop
mov
cmp
imul
xchg
mov
xorb
jne
int3
xor
das
jp
insb
pop
inc
push
test
out
or
pop
sub
lods
mov
cwtl
mov
or
outsb
sbb
push
js
and
loopne
or
mov
xor
mov
dec
in
jo
movsl
jbe
arpl
fcompl
ret
xchg
inc
and
xchg
decl
fnstsw
and
mov
loopne
xor
dec
ret
ja
inc
fldcw
jb
push
testl
mov
jb
jae
pop
and
adc
scas
adc
std
mov
push
jo
pop
repnz
cld
es
sub
dec
adc
outsb
rclb
out
bound
movsl
addb
cmp
mov
xor
jge
dec
and
cmp
jle
pop
mov
dec
lock
push
mov
adc
shll
cmpsb
adcl
jl
mov
dec
sbb
loop
xchg
or
inc
jp
push
add
or
or
cmp
scas
and
add
negl
xor
icebp
xor
imul
adc
inc
jbe
icebp
pop
inc
jae
xchg
clc
fbld
les
lahf
and
aaa
push
push
subb
pop
cmp
xchg
addb
imul
inc
push
jbe
push
pop
fs
ja
jg
aaa
sbb
pop
mov
or
rcr
and
cmp
pop
dec
mov
jle
out
repnz
jno
and
mov
icebp
js
sub
mov
adc
xor
inc
xchg
mov
and
jecxz
mov
clc
aas
inc
jb
mov
xchg
popa
jae
dec
rclb
fcoms
mov
lret
push
fsubl
xabort
add
mov
mov
pop
cmc
cwtl
jne
mov
mov
mov
arpl
add
adc
cmp
jge
mov
cwtl
xor
jp
or
ret
mov
test
cmc
es
mov
jg
or
sub
hlt
sbb
mov
pop
movsl
push
aam
imul
xchg
and
push
roll
adc
es
push
push
jle
cmpsb
mov
dec
inc
or
outsb
inc
mov
or
mov
filds
ja
cld
fcoms
lret
cmp
pushf
push
push
outsl
sbb
clc
es
inc
in
xchg
scas
sahf
stos
mov
push
jmp
aas
popa
ds
stc
addl
shr
les
xchg
arpl
mov
fadd
dec
sahf
adc
cmp
loope
pop
adc
mov
cmp
insb
idivb
les
or
filds
adc
mov
jmp
sbb
repnz
in
es
arpl
imul
ficompl
loope
push
xchg
test
stc
fisubrl
mov
repnz
sbb
sti
lea
lret
and
cs
insl
js
and
and
loopne
pop
les
outsb
scas
xchg
cmpsl
jg
push
cmpsb
mov
insl
push
in
sbb
lods
fucomi
add
xchg
mov
and
xor
inc
sbb
and
scas
pop
lret
mov
inc
jns
sub
dec
mov
jp
add
dec
push
fcmovnbe
mov
mov
add
arpl
leave
sub
je
sahf
sub
scas
fisubrl
and
lea
loop
enter
je
xchg
repnz
inc
cmp
out
inc
push
or
jo
add
stc
sti
shl
cmpsl
add
outsl
rcll
outsb
inc
ljmp
dec
gs
push
lret
sahf
outsl
jb
ss
mov
rcr
add
jns
dec
dec
out
fmuls
scas
testl
loop
ret
in
xor
and
hlt
push
cmpsb
cmp
inc
add
jnp
push
das
adc
xchg
cmp
cmp
sbbl
adc
and
icebp
mov
jecxz
cmpb
aad
shr
mov
hlt
fs
and
data16
bound
fistl
jecxz
xor
mov
stc
xlat
nop
mov
aad
add
sbb
lret
cmp
testb
pop
mov
sbb
dec
hlt
cmp
jbe
push
decb
xor
or
paddusb
xchg
ficoml
pop
pop
mov
jl
mov
inc
out
push
add
idivl
mov
push
fcoms
in
shrb
scas
sbbl
jp
enter
inc
push
fdivrl
aas
inc
jle
sti
jb
imul
xor
ror
cltd
sahf
int
push
je
adc
and
inc
testl
ljmp
dec
fiadds
shll
icebp
outsl
orl
xchg
cmp
lods
or
out
cmpsb
push
fwait
mov
adc
sub
int3
xchg
dec
mov
inc
icebp
xchg
fadd
popl
cmp
xor
cld
mov
add
xor
mov
fildl
mov
daa
cmpsb
aam
xchg
int3
fimuls
sbb
repnz
aad
add
inc
add
out
xchg
pop
cmp
push
cmpsb
pop
pop
pop
jl
xchg
xor
sbb
fsubrl
data16
add
mov
cmp
xor
cmpsl
aad
std
pop
sub
pop
mov
movsl
bound
div
adc
mov
je
shl
adc
lret
in
testl
push
pop
ds
and
jb
andl
es
jg
pop
mov
push
adc
xchg
pop
scas
and
or
push
insl
fildl
in
incb
mov
mov
dec
cltd
inc
fsts
lds
lahf
mov
aad
xor
mov
sbb
scas
fisubl
add
jne
jl
scas
cltd
jle
dec
sub
loope
cs
std
sub
shll
dec
sti
fadds
es
ret
loopne
test
mov
bswap
movsl
jno
dec
shrb
and
outsb
jne
dec
jp
sub
dec
subb
scas
pop
scas
mov
cs
fsubs
das
lret
jo
or
mov
aad
sti
sbb
and
into
mov
repz
xor
nop
fwait
pop
and
xchg
dec
jnp
jbe
pop
lret
pop
xchg
mov
inc
and
cltd
sub
inc
sub
cmp
jmp
xor
push
call
mov
cmp
int
jg
sbb
jmp
mov
sub
lret
mov
cmp
es
movsb
test
fcomps
int3
and
les
push
jno
push
pop
sub
mov
or
or
repnz
inc
loop
pop
inc
in
pop
popf
add
xchg
fs
adc
call
mov
push
js
jge
jno
dec
jbe
nop
stos
movsb
mov
mov
pop
jbe
pop
pop
and
sub
mov
mov
movsl
xor
adc
enter
lods
orb
or
cmp
ficompl
fisttps
mov
mov
pop
jl,pt
mov
test
and
inc
sub
sbb
push
cltd
imul
cmovp
push
fisttps
andl
je
inc
jae
test
push
aaa
mov
lahf
cltd
cld
sbb
inc
movsl
mov
loop
rcll
mov
mov
nop
mov
popa
mov
enter
mov
push
movsl
sbb
push
into
shrb
push
out
aas
jge
dec
mov
dec
xchg
or
imul
xor
mov
push
call
femms
sub
xchg
and
add
out
out
pushf
gs
and
std
hlt
lock
xor
je
inc
xor
lds
fcomip
sbb
loope
in
inc
xor
pop
lods
test
cs
jl
inc
in
inc
inc
and
dec
xchg
lcall
mov
getsec
and
push
push
cmp
cmp
jns
push
in
cwtl
subb
ja
mov
push
xchg
pop
mov
movsl
mov
xor
xchg
rcll
repz
pop
roll
add
ds
pop
fistpl
push
outsl
decw
adcl
cmc
cmpsl
sub
mov
rorl
xchg
pop
ret
cld
fmull
cmpsl
jb
jge
add
inc
ret
divb
out
mov
dec
outsb
add
or
push
movsl
push
xor
dec
loopne
mov
fidivs
xchg
mov
daa
mov
cmpsb
xor
out
xor
sbb
pushf
mov
xchg
mov
bound
rclb
add
sub
decb
aas
xor
cltd
sarl
pop
dec
and
lods
add
jecxz
cmc
push
xor
aam
and
xchg
bound
lods
imull
jns
push
popa
sbb
adc
stos
jl
mov
mov
pusha
add
ret
movl
pop
cmp
jns
fildl
outsl
loopne
lock
imul
mov
test
jp
jnp
ljmp
je
mov
sarl
cs
jmp
repz
pop
insl
dec
les
mov
fstl
clc
xchg
push
sbb
fpatan
or
lret
jmp
or
inc
sahf
jo
and
push
cs
scas
add
sbbl
xchg
jp
cltd
inc
fwait
inc
xor
inc
xchg
fmuls
mov
jns
out
in
loope
sti
push
lahf
aas
enter
lea
mov
popa
pop
imul
jp
pop
push
shlb
fs
sub
ja
mov
loop
add
mov
jbe
call
mov
aaa
lahf
icebp
shrb
mov
sub
dec
ret
sbb
xchg
pop
nop
stc
adc
lea
adc
fwait
xchg
cmp
mov
jb
xor
xor
jb
pop
arpl
scas
ucomiss
jo
pop
xor
push
icebp
in
mov
jno
jne
mov
lret
hlt
xrelease
decl
ret
ret
add
push
das
out
les
xchg
mov
adc
loopne
dec
push
ss
or
js
inc
add
test
add
test
or
fistl
mov
jne
jne
icebp
pop
scas
and
aaa
out
cmp
movsl
mov
testl
jle
push
rcll
out
sub
mov
scas
mov
push
cmpsb
mov
xchg
call
js
flds
jge
jae
jb
cmp
mov
pusha
push
aaa
cmp
sbbb
sbb
lahf
xor
std
std
dec
fwait
xchg
mov
and
sbb
loop
in
insl
mov
xchg
xchg
movsb
jo
std
sub
cltd
xor
sub
lds
in
popa
push
mov
pop
and
aad
xchg
js
dec
dec
add
icebp
imul
adc
inc
arpl
loopne
shll
xchg
adc
add
arpl
cmp
cs
push
sbb
div
fsubs
and
jmp
inc
xor
sbb
imul
add
cmpsb
add
aas
sub
das
fbstp
jle
sbb
jl
enter
shrb
push
jb
mov
push
xor
icebp
jo
int3
push
inc
add
imul
out
xchg
daa
and
loop
sub
pop
mov
ret
insl
test
test
or
outsl
scas
xchg
fisubs
pop
aaa
inc
or
push
les
decl
sahf
dec
ret
push
lods
addl
andb
fwait
and
pushf
daa
outsl
movsb
gs
push
mov
inc
mov
clc
and
or
pop
leave
es
ljmp
mov
or
sbb
cltd
cmp
sbb
dec
jg
sbb
out
push
mov
imul
inc
and
jb
notl
out
mov
cmp
mov
sbbl
subb
int
jae
dec
xor
jle
ficoms
popl
stos
push
shll
scas
or
test
rcrb
xor
mov
fwait
sbb
arpl
cmp
movsl
cmp
sub
fnsave
inc
outsb
or
test
and
mov
in
add
push
push
pop
dec
add
or
xchg
shrl
adc
dec
jecxz
ds
movsl
xor
or
ret
aad
cwtl
xchg
mov
jle
mov
xchg
push
movsb
and
dec
arpl
cmp
xor
dec
shrd
iret
cmp
and
das
pop
or
dec
rcrl
aaa
loopne
jae
mov
pop
movsb
add
push
mov
mov
lret
sub
mov
stos
jbe
add
mov
out
ret
sub
mov
test
rcrb
out
jecxz
inc
lret
mov
sarb
movsb
mov
or
cltd
lock
sub
xor
or
test
bound
test
movsl
out
out
push
es
outsb
adc
mov
jl
pop
add
sub
dec
jne
in
aaa
push
or
imul
repnz
inc
mov
sub
in
xchg
popa
dec
punpcklbw
fst
push
mov
in
outsl
sub
cld
testl
fcomps
mov
cmc
xchg
mov
gs
adc
cmp
mov
iret
aam
pop
addps
adc
mov
push
pusha
in
out
add
pop
push
rorl
dec
mov
aad
popf
mov
in
imul
dec
pop
xor
dec
stos
addr16
sub
and
push
test
mov
jno
cmc
repz
or
incl
int
jne
inc
leave
das
lds
and
mov
and
add
cwtl
and
movsb
aad
inc
mov
or
push
shrb
pop
fildl
sub
adc
test
mov
pop
mov
int3
mov
xor
push
xchg
inc
loopne
mov
enter
xor
mov
cmc
pop
es
jge
jp
jae
jmp
call
movsl
sbb
mov
aam
dec
ficompl
ret
xor
addr16
out
or
cmp
inc
adc
lret
test
popa
xor
in
jae
out
in
aad
inc
or
pop
inc
pop
scas
pop
outsb
dec
sbb
mov
pop
ret
adc
int
adc
push
sbb
mov
xchg
adc
adc
jge
pop
outsl
mov
in
lock
sub
fcoml
fsubs
movl
cmp
or
jnp
ss
mov
cld
xchg
movsl
adc
rol
mov
out
inc
jbe
jle
leave
scas
test
jg
xor
mov
gs
aam
fwait
sub
idivl
sbb
bnd
add
push
push
adc
fldcw
nop
and
lret
mov
adc
sbb
das
imul
adc
aas
stc
jecxz
mov
lret
mov
imul
loop
fs
pushf
pushf
lock
in
or
mov
or
out
jno
jns
cmpsl
icebp
push
scas
pusha
ss
pop
jns
sub
mov
xchg
xchg
fwait
add
call
jg
jmp
xrelease
mov
into
fmuls
shll
outsl
add
dec
or
inc
xor
fmull
push
mov
or
ljmp
sub
mov
pop
mov
aad
test
fists
push
dec
jg
inc
aas
push
das
ret
imul
jg
ret
jns
push
shrl
or
out
es
out
popl
xlat
jae
int3
addr16
pusha
imul
loop
movl
iret
call
xchg
or
mov
dec
inc
push
pusha
in
stos
into
aaa
mov
cmpsb
cmp
sbb
fcmovnb
mov
cmpsb
jp
pop
inc
push
xorb
cmp
xor
dec
adc
loopne
repz
inc
outsl
adc
cltd
and
xor
loop
mov
inc
pop
inc
in
jae
and
dec
jae
icebp
pop
dec
scas
test
sbb
fstps
xlat
adc
mov
test
and
push
xchg
push
sbb
and
repz
sarb
cs
adc
repz
mov
sub
fucomi
fnstenv
popf
clc
xchg
mov
jmp
movsb
mov
in
lea
popf
pop
mov
clc
sbb
push
sub
lods
push
push
cmc
lods
lahf
sbb
fsubrl
lret
pop
ss
into
into
dec
inc
xchg
mov
cmpsl
ljmp
into
cmpsb
xchg
fwait
dec
pop
daa
xchg
mov
cwtl
cmp
xchg
test
subb
sbb
loope
cmpsb
dec
cltd
out
int
cld
jnp
iret
mov
out
pop
jb
ret
adc
mov
je
daa
outsb
sub
addl
mov
sahf
js
mov
out
inc
dec
cmpxchg
pusha
jp
lcall
xchg
nop
pop
mov
in
cs
add
push
cwtl
add
stc
in
push
lea
in
out
gs
dec
jne
movsb
call
and
xchg
lcall
rorb
and
mov
cmp
jle
and
sub
cwtl
outsb
insb
xchg
out
gs
add
and
push
xor
xor
xor
xchg
fwait
mov
sbb
idivb
adc
lahf
sub
int3
rolb
sbb
insb
mov
jbe
jae
in
fldcw
sbb
movsl
push
rcll
jno
je
flds
lds
leave
loopne
fldl
fwait
mov
fisubrl
mov
out
shlb
jbe
mov
jl
add
fwait
adc
cmpsb
outsl
push
cmpsl
pop
xchg
mov
cli
add
and
adc
dec
test
mov
push
and
or
inc
mov
hlt
outsl
stc
and
cmp
divl
adc
push
inc
addr16
aad
xchg
pop
rorl
inc
scas
sub
xlat
inc
sub
dec
dec
das
xor
sub
and
push
sbb
and
inc
inc
pop
icebp
ds
repnz
and
or
mov
dec
and
jae
mov
scas
sbb
jne
push
push
insb
out
popf
jno
shrb
jle
bound
jns
pop
repnz
or
and
mov
aas
sbb
and
mov
push
mov
pop
test
or
mov
rolb
cmp
mov
and
xor
or
or
ljmp
rolb
and
pop
fildl
shrb
pop
xchg
lret
jmp
imull
jg
inc
sbb
mov
hlt
adc
test
xor
insl
mov
inc
jmp
and
sti
testb
stos
and
aam
mov
jge
jl
ds
pop
mov
outsb
mov
out
add
test
scas
clc
pop
mov
cmpb
inc
mov
push
aaa
ret
fisubs
mov
mov
test
xchg
lcall
cmp
push
lock
outsl
pmulhuw
xor
lods
or
jne,pn
push
jb
push
mov
testb
mov
out
mov
push
out
xor
sub
xchg
cld
jb
stos
aaa
lret
fistl
pop
dec
xlat
xor
mov
mov
xor
adc
cld
pop
sbb
aad
ss
into
aam
mov
mov
or
ja
outsb
in
push
mov
fdivrl
sbb
dec
cmpsl
imul
cmp
jb
adcb
pop
mov
ss
int
inc
rep
mov
lock
mov
sbb
inc
sarl
inc
dec
stos
testb
repz
jecxz
ret
jns
pop
nop
inc
dec
ljmp
leave
mov
mov
jg
adc
leave
ljmp
mov
ljmp
aam
push
test
int
mov
test
aas
pop
sahf
icebp
insl
xor
pop
in
xchg
xchg
mov
dec
mov
aas
inc
pop
mov
outsb
lldt
adc
inc
or
add
xor
gs
cld
andl
roll
lods
les
nop/reserved
mov
bnd
xchg
bound
sub
ds
adc
inc
mov
scas
push
ljmp
mov
pop
add
stc
stos
xchg
and
add
add
cmpsb
fsubs
scas
cltd
adc
inc
mov
sbb
leave
cmp
add
fldenv
push
leave
xor
mov
cmp
pop
in
ja
jb
dec
movsb
inc
mov
mov
dec
jno
fmulp
or
jbe
inc
cmp
femms
xchg
inc
mov
sbb
shll
cmpsb
jge
mov
enter
xchg
inc
cmp
sub
pop
fcmovnu
sbb
vmovhps
mov
test
push
jmp
mulb
mov
int3
jns
pop
cltd
xchg
or
lret
lret
fisttpll
cs
adc
pop
outsl
adc
sbb
mov
inc
xlat
mov
jno
mov
frstpm(287
push
fdiv
lcall
push
fcomps
xchg
xor
mov
jle
mov
out
and
loopne
iret
sahf
jne
push
std
jae
xchg
mov
das
rolb
test
mov
mov
fs
insb
sub
inc
xchg
aas
stos
or
ds
fisttpll
inc
jb
imul
pop
cli
sub
lods
mov
outsl
ljmp
mov
or
repz
lret
sub
lock
cld
dec
sbbl
mov
inc
adcb
imul
in
stc
sub
xchg
add
stos
add
adc
out
mov
outsb
aas
addl
cmc
lock
jge
mov
sub
push
or
jb
rcrb
aas
fiadds
jo
popa
icebp
xor
fiadds
shll
imul
shlb
jp
shrl
std
mov
sbb
sub
into
les
mov
jl
or
add
pop
nop
insl
js
push
push
fldcw
inc
cmp
aaa
cmp
jb
pop
popf
jbe
fwait
sub
jno
dec
scas
xchg
xor
imul
and
push
cmpl
push
cmp
arpl
or
loopne
pop
pop
rorb
pushf
mov
add
hlt
cmp
xor
xor
lock
insl
pop
cmp
mov
adc
fwait
mov
dec
pop
and
adc
sbb
cmpsl
or
mov
xchg
jecxz
stos
xchg
mov
lcall
mov
sarl
in
mov
insl
mov
mov
cmpsb
movsl
mov
xchg
icebp
notb
sub
in
inc
jnp
jmp
xchg
or
and
push
movsb
mov
pop
hlt
lret
or
push
or
sub
mov
push
es
dec
adc
negl
jne
aas
xor
sub
pop
test
sarb
test
enter
xchg
ljmp
imull
mov
mov
cmpsb
cmc
cs
adc
push
out
stos
mov
cmpsb
iret
pusha
push
dec
movb
sbb
xlat
xor
inc
inc
pop
lods
add
fs
xorb
mov
out
pop
imul
sub
movsb
insb
sahf
dec
mov
sub
inc
push
xchg
dec
test
mov
xor
jno
mov
fdiv
out
dec
add
mov
push
scas
shlb
push
lcall
or
shlb
loope
fldcw
mov
nop
pop
xchg
int
movsb
sarb
shll
dec
aad
push
adcl
outsl
and
or
dec
xor
fcomps
jp
add
call
adc
xchg
xorl
sbb
cmpsl
outsb
lea
xchg
out
and
or
cmp
fdivrp
inc
call
sbb
je
mov
clc
out
or
jle
imul
jns
cmpsl
je
or
dec
inc
sbb
enter
in
pop
std
mov
sahf
sbb
bound
mov
cs
adc
in
push
jl
adc
cmp
and
adc
mov
push
sbb
inc
pop
jl
xchg
popa
into
push
xchg
or
jae
dec
rcrl
scas
scas
add
push
arpl
fsubrl
mov
cwtl
xor
mov
out
je
sbb
mov
fwait
insl
dec
insl
or
lea
cmp
sub
sub
xor
jecxz
ja
int3
xchg
nop
cs
inc
adc
movsb
into
ret
incl
decl
mov
inc
pop
pop
cli
and
sub
cmpsb
dec
xlat
lods
addl
inc
mov
jge
sbb
cmpsb
inc
jnp
push
or
adcl
or
cmc
jg
imul
fstps
scas
push
leave
cmp
testb
xchg
sbb
arpl
mov
inc
imul
bound
xchg
sbb
xchg
mov
mov
mov
popf
scas
dec
popa
inc
add
notb
pop
pop
jns
dec
addr16
gs
mov
stc
xor
insb
in
jae
orl
int3
mov
mov
cld
out
xlat
cmp
insl
pop
repz
cmp
pop
lahf
adc
xchg
hlt
jne
cmp
cmc
push
or
mov
rorl
nop
lret
mov
push
mov
pop
xchg
imul
add
imul
mov
jb
and
ja
xchg
std
mov
fwait
addr16
jecxz
movsb
pop
xor
xchg
cmp
repz
das
sbbl
outsb
ret
or
aaa
movd
jo
sahf
cmc
testb
sbb
nop
test
push
mov
fcom
loopne
ret
jle
cmp
lret
xchg
call
push
or
fbld
cld
imul
aam
and
mov
dec
sub
clc
adc
jge
fdivrl
in
mov
cmpl
arpl
or
add
pop
mov
lock
mov
inc
cmp
xor
pop
cmp
jbe
xor
fists
in
mov
inc
pop
or
push
dec
and
stos
xchg
add
mov
mov
or
inc
pop
mov
xchg
jne
sub
xchg
jns
xlat
xchg
push
repnz
aam
or
and
insl
insb
es
das
lods
data16
fmull
add
sub
negb
rcll
rcrb
inc
dec
les
mov
fmul
es
push
and
fstps
test
mov
jg
movsb
in
mov
xor
pop
scas
aas
loop
ljmp
jl
insb
jnp
outsl
cmpsb
jae
jecxz
scas
xor
push
add
mov
mov
push
pop
mov
dec
mov
pop
jle
or
and
es
repnz
push
cmp
or
sbb
pop
int3
adc
inc
dec
mov
mov
mov
cmpsl
pop
movsb
ja
jo
imul
iret
and
sbb
outsl
nop
out
loop
repz
jle
es
xchg
sbb
test
xchg
lret
rorl
push
push
mov
cwtl
cmp
jns
cld
adc
jae
push
scas
add
cmp
jbe,pt
ret
hlt
jmp
cmc
cmc
mov
gs
xchg
or
mov
addl
andl
lds
leave
dec
mov
std
jb
jnp
xor
add
shrl
sti
mov
imul
mov
mov
repnz
jg
sbb
icebp
inc
xor
les
inc
mov
dec
sub
pop
mov
int3
jb
inc
stc
lcall
xor
adc
pop
hlt
sahf
loope
sub
std
hlt
sbb
xchg
xor
mov
adc
xlat
mov
xchg
enter
jmp
insb
shll
pop
daa
sbb
jmp
add
ret
hlt
loope
out
scas
push
pop
and
iret
lock
inc
pop
lret
adc
mov
movsl
hlt
add
xor
mov
addb
push
fnstenv
imul
arpl
mov
mov
das
jge
lret
jne
lcall
in
push
je
adc
ficoms
mov
or
stos
cwtl
pop
pop
daa
rol
leave
test
ja
adc
dec
cmp
fsts
xchg
sub
add
cmp
xchg
push
push
dec
std
sub
movsb
int
or
cmp
xchg
dec
in
scas
add
sub
div
fidivrs
loope
cmp
mov
aam
faddl
push
jns
xlat
cmp
mov
filds
fs
ficoml
int
cli
fnstenv
jno
lret
and
jo
jno
mov
shll
push
mov
add
adcb
dec
in
mov
and
out
sbb
fmuls
lods
push
mov
hlt
ret
sub
sub
mov
push
fwait
adc
mov
dec
rorb
pop
dec
add
sbbb
push
int
sbb
enter
cmp
push
jbe
fistpll
mov
imul
out
rol
lcall
adc
mov
pop
out
sti
xlat
jl
push
cli
adc
mov
scas
fadd
pop
mov
cmp
sbb
mov
repnz
daa
mov
hlt
out
test
imul
xchg
enter
jp
push
or
sti
ss
loop
test
xchg
add
add
mov
dec
cmp
mov
dec
ljmp
sub
std
loopne
fsubl
pop
jg
shrb
cmp
jbe
sahf
ljmp
cmp
push
sub
jns
and
xor
ja
cmp
jl
fs
imul
xchg
outsb
aad
mov
xchg
dec
pop
push
arpl
in
rolb
push
adc
adc
lahf
lcall
xor
das
inc
sub
xchg
push
mov
int3
push
int3
cmc
jecxz
inc
fs
das
inc
sbb
pop
inc
sub
or
mov
faddl
mov
data16
push
pop
iret
sub
cmp
adc
ja
and
mov
jne
inc
jb
cwtl
rclb
mov
fs
test
xor
out
pop
push
shlb
mov
popa
add
sbb
out
adc
into
cltd
jp
clc
pop
outsb
ror
jbe
push
or
out
adc
enter
mov
pop
xor
aas
mov
das
in
cld
pusha
lods
dec
pop
pusha
push
cltd
dec
mov
loop
xchg
outsl
mov
pushf
int3
les
jb
push
dec
mov
push
cli
push
iret
js
xor
jae
cmpsb
lea
cmp
and
roll
data16
mov
or
test
daa
inc
xchg
sahf
mov
cmp
das
std
clc
out
inc
push
mov
mov
int3
out
ds
dec
mov
mov
dec
jae
mov
mov
movsb
gs
sub
pop
and
stc
add
sbbb
push
ljmp
and
ljmp
push
psadbw
xor
mov
xor
cltd
sbb
add
pop
and
pop
rorb
lods
ja
pushf
adc
push
cmc
addb
jecxz
sub
int
pop
fisttps
popa
enter
or
jae
icebp
cmp
aad
cmpsl
leave
lahf
addr16
lahf
push
ljmp
pop
or
cmp
loopne
jnp
cmpsl
lock
arpl
push
out
push
jae
sub
xor
dec
mov
xor
cmp
pop
dec
xchg
lret
lahf
push
mov
push
test
and
sbb
xor
js
outsb
dec
inc
out
xchg
dec
fistpl
pop
loop
jne
ret
and
in
push
xchg
jge
and
xchg
xchg
mov
scas
lahf
mov
aas
mov
pushf
jno
and
test
outsb
xchg
cmp
add
sahf
dec
lret
test
adc
xor
add
or
roll
sub
mov
pop
dec
jg,pn
call
mulb
into
hlt
ret
icebp
pusha
fmuls
sub
add
xchg
jo
loope
jb
or
in
ds
loope
pop
rcr
rorb
out
pop
xchg
cmp
jae
cld
inc
dec
out
push
fisubl
adc
dec
dec
clc
imul
push
jo
popf
inc
sbb
es
jge
xor
ret
ror
mov
cmp
stos
pop
inc
fcmovnbe
fistl
lds
loopne
cltd
bound
movl
cmp
outsl
sahf
pop
sub
cmp
dec
ret
mov
push
pop
jb
insb
out
andb
mov
xchg
out
and
ret
notl
push
enter
imul
out
clc
inc
inc
dec
aas
add
dec
sbb
loop
mov
mov
mov
xor
les
popa
push
jae
fcompl
jp
adc
loop
inc
lock
or
mov
xchg
add
mov
lods
and
inc
inc
outsb
push
jmp
or
or
adc
xchg
popa
scas
and
jmp
fwait
arpl
fmull
out
imul
icebp
out
push
xchg
add
sarl
rorl
mov
push
adc
in
int3
ja
adc
or
mov
stc
ror
inc
xchg
mov
lods
inc
or
cs
and
gs
or
jnp
pusha
jge
push
cmp
mov
push
int3
sub
mov
cld
fisubs
sub
push
xlat
xchg
sub
fildl
mov
stc
shlb
cmp
scas
mov
movsl
add
arpl
cmp
sarb
pop
ret
subl
pop
xchg
and
test
add
or
or
push
or
xchg
leave
pop
es
pop
sub
in
pop
push
push
jg
cmp
fistpll
ljmp
jns
mov
inc
inc
fs
jo
inc
into
dec
fisubs
cmpsb
inc
pshufw
sbb
ret
js
arpl
or
movsb
mov
mov
nop
sti
xchg
sbb
dec
xchg
inc
ja
xchg
daa
inc
sub
push
push
ja
sar
push
push
out
inc
push
lret
aam
sub
jno
cmp
lahf
clc
fwait
ds
sbb
push
xor
pop
pop
and
and
in
lock
out
inc
jo
test
fbld
or
push
push
inc
arpl
jbe
and
lds
mov
fnstsw
mov
lods
push
inc
mov
mov
pop
mov
arpl
stc
cmpsb
jle
rcrb
sub
cmp
fs
shl
jecxz
into
popa
loope
add
ss
imul
add
pop
test
int
xchg
sar
cwtl
scas
or
daa
ret
fnstcw
gs
loopne
nop
fdivrs
sub
sbb
add
negl
aaa
cmp
add
xchg
xchg
sti
dec
test
and
add
inc
movsb
shll
sub
mov
mov
ja
sbb
mov
out
and
fimull
hlt
add
pushf
jg
push
dec
xor
jo
popl
lods
outsl
mov
xlat
or
xchg
adc
push
and
push
push
mov
in
mov
aaa
js
stos
nop
outsl
push
lods
adc
inc
pop
sbb
inc
sbb
imul
ja
mov
outsl
jmp
and
in
mov
lcall
dec
jmp
jg
jmp
insl
cmpsb
xchg
fisubrs
sub
mov
in
call
popf
bound
xchg
bound
mov
call
mov
cli
int
lcall
jnp
cwtl
js
or
and
mov
fs
rclb
sbb
loop
sbb
ret
in
xor
ret
repnz
mov
ds
call
xchg
xchg
test
arpl
sbb
andl
movsb
rcr
pop
bound
dec
ds
inc
int
les
sub
push
idiv
bound
popf
clc
add
cwtl
clc
jg
mov
cmp
stos
jb
stos
cmp
enter
mov
cmpsl
mov
dec
xchg
push
pop
sub
stos
sbb
mov
push
lahf
loop
or
mov
cs
dec
xor
jo
xor
sbbl
cmp
cmp
and
dec
jno
xchg
dec
cmpsl
and
gs
mov
cmp
js
fmul
outsb
imull
mov
fmuls
test
jae
cwtl
pop
insl
cmp
filds
cmp
lcall
or
push
les
gs
inc
jl
insl
push
push
call
pop
rcrl
adc
fnstenv
mov
addb
dec
jle
mov
movsb
push
mov
jae
mov
pop
jnp
jle
jmp
cmp
loope
xchg
fistl
and
bound
sbb
sub
add
int
pop
jp
dec
and
dec
mov
mov
inc
sub
and
xchg
iret
fucomip
or
test
jno
aas
push
inc
les
fcmovbe
fwait
sbb
mov
fsubl
xchg
inc
lock
push
mov
mov
mov
enter
ficoms
pop
sarl
sub
pop
insb
pushf
pop
push
mov
adc
fstps
daa
add
inc
mov
mov
fistps
cli
push
mov
or
xchg
mov
jo
push
pop
or
mov
and
cwtl
scas
dec
mov
shlb
out
insl
add
jmp
out
imul
sbb
sbb
mov
lods
imul
mov
pop
jle
lret
push
xchg
jle
imul
jmp
js
push
pop
cmp
or
sub
push
xchg
popa
mov
ret
cld
in
repnz
add
xchg
mov
movb
mov
lcall
jo
pop
popf
adc
mov
push
leave
faddl
in
test
xor
mov
xlat
xchg
jl
bound
push
xor
outsl
loopne
les
inc
out
test
jo
cmpl
mov
fs
mov
push
push
or
pop
mov
jnp
cmc
rcll
and
sub
pop
dec
mov
add
push
rorb
sbb
lcall
jl
xlat
rclb
stos
cli
or
mov
in
data16
outsl
push
mov
xchg
mov
inc
inc
mov
sub
repnz
mov
test
mov
cmp
hlt
mov
add
mov
outsb
es
jb
roll
ja
cmp
mov
xor
push
test
xchg
inc
inc
xchg
fwait
push
sub
and
imul
xor
mov
mov
push
icebp
popf
int3
sbb
in
or
pop
dec
mov
rolb
test
adc
push
rcrb
dec
in
int3
mov
popa
jl
mov
cmpb
arpl
xor
jbe
sub
shll
mov
dec
cs
aaa
div
or
clc
inc
decb
xor
in
jmp
shrb
fs
lock
sbbl
mov
jecxz
add
push
into
arpl
fldenv
mov
xor
jns
mov
cltd
mov
xchg
ror
sbb
push
insl
fsts
add
lahf
xchg
sub
ljmp
test
jle
xor
mov
movsl
ja
aaa
nop
mov
or
fwait
xor
lods
aas
out
test
cs
jne
mov
aad
sbb
or
pop
jl
aaa
push
xor
mov
cmp
mov
pop
xor
ljmp
out
push
push
js
rcrl
mov
loop
sbb
jb
pop
aad
lret
inc
push
mov
cli
int3
sbb
ficompl
add
fimull
inc
or
mov
push
add
sub
std
in
sbb
cltd
call
cmp
sub
cwtl
in
ret
and
out
pop
lret
and
in
pop
fs
push
mov
test
pop
adc
xor
cmp
or
inc
xor
mov
sti
dec
insl
pop
xor
pop
js
aad
add
inc
cmp
aaa
mov
popf
sbb
xor
pop
adc
mov
rorb
mov
addb
fists
inc
test
mov
pop
ret
lahf
mov
loop
jmp
push
adc
outsb
or
leave
jp
push
lock
cmc
insl
in
sbb
sbb
push
push
stos
or
scas
xor
leave
lea
mov
js
arpl
mov
adc
and
mov
adcl
xor
xor
pop
adc
cmc
repnz
pop
jnp
jp
cmp
das
les
fsubs
out
adcl
mov
mov
mov
inc
enter
out
add
iret
lret
out
fisubl
push
mov
ret
pop
jecxz
aas
test
inc
lcall
and
mov
or
ffreep
inc
mov
xor
call
dec
adc
xchg
push
jnp
pushf
push
mov
les
sub
sub
sbb
lcall
lock
icebp
adc
sbb
sbb
test
or
ja
inc
or
test
jns
mov
push
sbb
outsb
into
pop
lcall
cmpsl
lock
or
jl
icebp
add
mov
and
sarb
insl
push
fs
mov
icebp
es
lahf
arpl
or
or
add
and
jb
dec
sbb
adc
pushf
lcall
dec
xchg
add
pop
pop
cmpsl
shr
in
inc
mov
int
mov
repz
add
out
sbb
ss
fldl
sahf
into
lods
cwtl
pop
jo
cmpsb
jbe
cltd
xor
and
shlb
jns
mov
adc
icebp
jo
add
inc
xchg
js
dec
aaa
mov
and
ret
and
nop
jb
mov
mov
aam
mov
inc
fdivrl
repz
jae
sub
sbb
mov
inc
and
or
add
popa
insl
outsl
push
imul
or
sbb
rclb
inc
in
mov
mov
insb
int3
and
jmp
xchg
mov
jne
sbb
sar
loope
and
pop
mov
out
lods
aad
in
xor
mov
pop
and
outsb
es
and
and
cmpb
mov
or
shrl
in
lds
push
push
repnz
dec
jle
sub
jl
mov
sbb
cmp
js
lret
js
mov
dec
dec
adc
push
add
jb
call
mov
iret
dec
push
inc
or
push
out
pop
into
cmp
enter
hlt
xchg
xchg
mov
sbb
lret
bound
xchg
xchg
into
pop
push
es
pop
jle
mov
cmp
xchg
pop
mov
mov
cltd
pushf
pop
subl
inc
and
int
jp
iret
cmp
les
inc
jnp
leave
inc
push
mov
call
adc
cwtl
out
rcll
out
ja
adc
mov
mov
mov
sahf
mov
xchg
pop
insl
xor
adc
mov
outsb
insl
xchg
lcall
lret
insb
ret
jae
ja
fnsave
and
or
inc
shlb
mov
mov
dec
das
fbstp
stos
cmc
xor
jne
cmp
daa
js
daa
out
outsb
sbb
dec
lea
mov
add
scas
dec
dec
push
mov
ret
push
pop
scas
je
dec
test
sbb
sbb
pop
sub
pop
je
rcr
pop
or
dec
push
jo
std
cmpsl
sbb
movsl
inc
fstps
aad
ss
iret
iret
jmp
jno
adc
or
mov
pop
ss
dec
aaa
push
ds
push
jae
std
cmpsb
jmp
inc
orl
aam
lret
daa
mov
out
sbb
call
in
fbld
ja
cs
test
subl
cmp
ret
lds
mov
lods
add
clc
mov
mov
mov
ds
js
dec
movsl
push
xor
mov
inc
lahf
mov
and
ja
mov
rorl
pop
sub
dec
sbb
and
mov
add
mov
out
cmc
insl
cmp
sarb
xchg
adc
mov
ret
out
pop
int
in
jnp
inc
push
addr16
bound
outsb
push
mov
sub
xchg
or
in
jg
push
xor
div
js
jae
and
push
nop
cmp
mov
xchg
scas
xor
repz
icebp
enter
test
add
lock
aaa
sbbl
cmp
mov
leave
push
stos
shll
add
sbb
jae
mov
adc
pop
mov
mov
xchg
in
test
test
push
fs
mov
mov
shrb
loope
mov
adc
popf
sti
sbb
xchg
fisubrl
daa
or
rcll
or
lahf
gs
mov
jecxz
lock
add
mov
shr
shll
ret
lods
fstps
jge
sub
movsl
rcl
inc
pop
adc
cmp
mov
mov
std
mov
stos
das
dec
inc
scas
mov
sahf
ret
push
outsl
sub
ds
or
je
mov
lock
into
sub
xchg
repz
fwait
pop
les
adc
pop
add
sub
aaa
or
aas
movsl
movsl
movsb
push
popf
jecxz
jge
gs
ljmp
pop
scas
call
inc
ret
test
xchg
sub
jb
data16
cld
aam
push
adc
stos
in
jecxz
fwait
inc
fcmovnb
hlt
xor
aaa
out
xor
rcrb
mov
fs
push
clc
lcall
inc
ror
aad
pop
lcall
iret
or
jge
or
push
fwait
inc
mov
adc
push
inc
arpl
movsl
push
mov
pop
or
mov
fimuls
sbbb
test
dec
add
mov
iret
dec
pop
insl
repnz
dec
fbld
or
bound
in
sbb
mov
rol
adc
adc
pop
push
jne
sub
push
xor
sub
repnz
push
dec
pushf
cltd
mov
imul
cld
sbb
and
cltd
je
sahf
ja
xor
pop
adc
popf
mov
nop
pop
pop
icebp
jmp
xchg
push
mov
mov
sbb
mov
cmpsl
sub
icebp
push
mov
mov
sahf
jne
lahf
in
cmp
sub
xor
jo
inc
adc
sahf
add
int3
and
push
std
int
inc
out
rclb
dec
stos
xchg
mov
mov
sbb
imul
test
jb
sbb
mov
xchg
mov
gs
aaa
xlat
sub
mov
mov
or
clc
cli
and
in
xor
imul
jae
inc
aas
test
in
sub
pop
lods
fcomps
clc
lods
insb
jae
mov
out
movsb
filds
adc
je
mov
mov
xor
mov
aaa
and
test
shrl
in
push
popf
or
fbstp
adc
nop
xchg
push
pusha
or
aaa
lods
les
adcb
decl
adcb
or
and
dec
cmp
and
gs
nop
jecxz
test
rcrl
out
sbb
test
cmp
into
dec
scas
and
lods
leave
cli
push
lret
push
pop
clc
or
mov
jns
dec
pop
pop
pop
cmp
mov
enter
mov
pop
xor
mov
lock
xchg
push
or
movsl
jp
out
jnp
into
add
cmpl
push
lea
ljmp
sahf
dec
jecxz
sar
sbb
out
mov
jae
cs
inc
inc
les
mov
es
add
xchg
adc
pop
xor
mov
les
int
incl
xor
dec
xor
stc
das
out
sub
add
or
xor
sub
popf
xchg
nop
aas
xchg
xor
mov
dec
fidivrl
out
dec
shll
mov
bound
incl
jmp
lret
adc
or
add
adc
pop
orl
push
pop
andl
aad
lods
rcrb
ja
lahf
in
or
sub
xlat
rcrl
push
mov
xlat
inc
out
leave
int
shll
adc
rcl
pop
and
shl
sub
adc
inc
push
scas
aas
lcall
outsl
add
ret
pop
ja
add
inc
in
test
pop
lcall
inc
adc
push
adc
test
add
ss
cmpsl
std
cmp
icebp
cmp
fsub
cmpsl
popa
cmp
xor
inc
xchg
jo
stc
mov
stc
aas
pop
dec
xor
shrl
inc
data16
lahf
mov
xchg
mov
sbb
enter
rcrb
movsb
js
cmp
push
or
mov
push
mov
jb
arpl
dec
std
and
mov
xor
ds
sbb
xor
jmp
sub
sub
lock
inc
pop
sub
pop
lret
jns,pn
pop
mov
cmp
outsb
cmp
mov
inc
inc
adc
mov
incl
jecxz
dec
add
jecxz
cmpsb
fcoms
jns
xor
inc
aas
lahf
cltd
clc
shrl
ja
inc
adc
shrl
cmc
mov
sar
xchg
icebp
jbe
fcmovnu
and
enter
dec
cltd
fsubs
lcall
inc
mov
pusha
pop
push
cld
ds
lcall
jno
addr16
add
lock
aas
pusha
pop
int
cmp
inc
mov
mov
mov
or
and
inc
shrb
add
sti
rcll
push
imul
cmp
loope
inc
loop
xchg
in
push
push
mov
cmpsl
into
icebp
mov
pusha
lcall
push
mov
rorl
pop
pop
push
push
inc
inc
frndint
push
jne
int3
test
mov
sbb
cmp
mov
pushf
mov
inc
test
lods
out
mov
cmp
cmp
ljmp
jmp
mov
daa
rolb
loop
outsb
dec
mov
in
push
dec
cmp
or
push
pop
sbbl
add
cmp
into
sbb
mov
mov
fcomp
icebp
icebp
cmc
sahf
shl
flds
mov
imul
insb
push
jge
mov
lock
sbb
jns
sub
mov
push
and
popf
inc
or
jmp
roll
clc
mov
sarl
movsb
xchg
test
inc
int3
xchg
and
clc
lcall
xchg
inc
jo
fisubs
xchg
or
mov
jb
inc
mov
fisubrl
dec
jg
inc
ret
scas
xchg
sbb
mov
or
push
cli
in
insb
pop
fwait
loope
push
mov
mov
xor
jmp
mulb
lret
push
and
push
stos
scas
pop
cwtl
mov
aaa
xchg
rep
dec
push
xor
dec
xor
mov
sbb
inc
xchg
xorb
test
into
iret
jmp
mov
sub
repnz
mov
xchg
sbb
mov
mov
repnz
out
popa
mov
cmpsl
xor
arpl
jp
div
mov
cmp
pop
ljmp
xchg
cmpps
out
pop
nop
cmpsl
adc
push
fstl
mov
mov
xchg
rcl
stc
mov
test
inc
insl
lods
xor
push
mov
ds
dec
and
dec
sbb
sub
and
fisttps
mov
inc
les
in
in
xchg
and
ficoms
xchg
add
and
or
daa
mov
imul
in
and
pop
inc
inc
xor
je
cmp
mov
mov
adc
js
or
inc
push
inc
imul
out
notb
cmp
jp
or
cmp
xchg
scas
repnz
int3
test
rclb
jge
jbe
xor
fwait
outsb
mov
mov
jmp
sti
push
cmp
les
ljmp
sbb
mov
pop
gs
les
dec
rolb
and
xor
mov
mov
inc
mov
jbe
push
cwtl
mov
jae
rcr
sbb
xor
dec
stc
inc
mov
xor
testl
test
rcl
rorl
idivb
sbb
push
dec
cmp
jle
aaa
loopne
ret
leave
cmpsl
out
pop
push
lods
cmp
bound
cmp
inc
or
pop
mov
pop
dec
sahf
cmp
hlt
lahf
into
cmp
jmp
cmpsl
ret
jb
jmp
sti
outsb
pop
pop
sub
imul
nop
repz
imul
mov
add
mov
xchg
or
inc
lock
pusha
dec
sarb
sub
adc
jmp
adc
outsb
fcompl
repz
mov
sbb
loopne
adc
and
mov
sbbb
cmpsl
int3
dec
inc
je
and
mov
mov
movsb
test
or
xor
fcoms
mov
shlb
cmp
repz
cmpsl
fcoml
mov
jb
jp
enter
xor
mov
pushf
outsl
cld
shr
adc
outsl
test
andl
lods
pop
repz
icebp
es
incb
cmp
in
daa
xchg
loope
sbb
fcmovnu
out
or
pop
loopne
ljmp
and
fcmovnu
mov
dec
cmp
or
test
xor
je
lea
xchg
std
pop
and
mov
fisubrs
loop
jmp
pop
repz
imul
pop
leave
jbe
xor
aam
das
push
cld
inc
loope
lea
subl
and
dec
xor
imul
or
pop
push
in
cmc
push
insl
xchg
jge
mov
xchg
cmp
aam
je
outsb
jne
pop
scas
mov
pushf
dec
mov
add
int
sub
pop
sub
xchg
test
push
stos
push
lret
stc
dec
sahf
jl
and
xor
stos
xchg
xor
jle
sti
cmp
adc
add
cmpsb
pop
cmp
mov
jb
xchg
or
dec
lahf
push
adc
inc
xor
repnz
mov
adc
xor
cwtl
addr16
pop
pop
in
sbb
adc
cmc
fidivs
dec
xchg
rcr
adc
popa
jo
adc
xchg
ret
popf
inc
not
pop
fld
and
dec
xor
jb
push
cltd
ret
sub
mov
loop
imul
dec
push
test
jns
mov
test
ss
test
ret
pusha
push
jp
das
add
adc
in
cmc
pop
mov
pop
imul
jecxz
mov
icebp
adc
jecxz
scas
mov
sbb
scas
xchg
arpl
ljmp
mov
cmp
mov
out
mov
mov
jae
lret
inc
sub
dec
inc
pop
xchg
cmp
iret
leave
in
mov
sub
shll
lret
pop
fcompp
imul
imul
faddl
sub
std
and
fnstenv
mov
pushf
mov
out
std
lea
out
popa
ds
mov
ja
pushw
push
mov
xor
and
das
imul
push
adc
movsl
test
mov
or
ja
dec
imul
mov
xchg
dec
fisttps
das
mov
pop
into
out
add
mov
insl
dec
pushf
dec
lock
jge
sbb
fcomip
int
out
daa
ret
in
clc
sbb
scas
test
mov
fs
repz
and
shrl
es
mov
popfw
repz
pop
das
xor
stos
pop
jge
xchg
jl
fsubrs
iret
sbb
sbb
aaa
push
daa
jl
add
fiadds
shrl
into
sub
pop
movsl
adc
adc
neg
push
out
movsl
add
cmp
mov
xor
bound
les
mov
sbbb
iret
pusha
sub
jg
fbld
push
add
pop
pop
popf
or
cmp
outsl
jo
in
lret
nop
daa
mov
pusha
sahf
adc
incl
sbb
add
sub
jmp
add
mov
or
mov
nop
jae
pop
mov
push
sub
lret
cmc
fucomip
test
and
pop
xchg
pop
cmp
push
test
add
test
pop
dec
adc
loope
cmp
xor
push
cmp
das
sti
push
jge
mov
lock
push
mov
inc
inc
idiv
fistpll
pop
les
xorb
push
sub
ljmp
push
pop
pusha
sahf
adc
mov
sbb
mov
gs
hlt
loop
rcr
cmp
adc
or
rolb
push
jl
and
jecxz
inc
stos
in
mov
push
sahf
adc
imul
jmp
dec
sbb
and
lcall
xchg
xchg
add
push
jne
pop
and
cmc
adc
dec
scas
cmpsb
repnz
add
mov
dec
xchg
jo
loope
gs
xor
fadd
loop
cmp
out
jle
jno
push
jno
add
clc
mov
ja
mov
les
adc
push
push
call
nop
ret
jp
repz
add
pushl
inc
cltd
push
mov
jl
add
mov
sbb
jns
adc
lods
int
outsb
cmc
leave
pop
sub
adc
outsl
sub
adc
mov
lret
jo
clc
or
jp
mov
xchg
mov
lahf
mov
movsl
lahf
sbb
or
or
test
cld
mov
xchg
mov
nop
sbb
cmp
sub
dec
ds
cmp
add
dec
test
jmp
jg
or
dec
adc
int
mov
test
adc
xor
inc
sub
call
jae
lods
xchg
scas
popf
test
fwait
push
jecxz
push
jl
push
push
mov
fidivrs
jbe
lods
jno
scas
out
jnp
pop
frstor
outsb
pop
arpl
pop
paddsb
cmp
shll
pop
inc
test
xor
jae
lea
mov
stos
fwait
inc
xchg
mov
jns
ljmp
icebp
data16
add
jae
dec
jo
jge
xor
xchg
les
mov
pop
add
xchg
hlt
pusha
sub
bound
inc
cmp
dec
lods
ror
cmp
xchg
not
data16
dec
mov
mov
adc
rcrl
sub
outsl
jp
enter
mov
cmp
mov
mov
out
cltd
cwtl
ffreep
ret
loope
jecxz
jo
cmp
shlb
xchg
pop
movsb
stos
cld
jb
mov
sti
push
frstor
test
scas
or
mov
nop
fwait
insl
xor
dec
xor
mov
xor
ret
mov
jo
pop
daa
imul
ljmp
loope
sub
movsb
jmp
pop
add
sub
jnp
rorb
lds
jg
js
xchg
dec
mov
jmp
or
lea
mov
iret
xor
adc
mov
movsl
xchg
sbb
mov
lahf
mov
sbb
push
sub
in
ror
mov
mov
xchg
sub
icebp
aas
lock
push
enter
test
clc
aas
mov
pop
or
out
bound
insb
jge
movb
lock
rorl
std
sub
test
jno
loopne
inc
mov
stos
lahf
push
jg
fiadds
push
jmp
jecxz
idivb
jl
mov
push
and
stos
rcl
adc
inc
adcl
test
mov
bnd
pop
ja
lods
dec
sub
push
add
out
inc
aad
shlb
arpl
push
repz
cvtps2pd
fs
xchg
sbb
xchg
push
outsl
loop
sarb
jae
rorl
mov
inc
push
adc
inc
outsb
add
add
jno
lock
xchg
dec
cmp
aad
notb
or
loop
nop
cmpl
mov
pop
inc
lods
mov
shl
fmull
and
loop
pop
dec
cs
out
test
call
mov
rorl
les
movsb
jl
lcall
inc
ja
jp
sbbl
or
iret
pushf
jecxz
cmpb
mov
cltd
imul
out
jmp
leave
icebp
int
ret
cmp
call
gs
ss
or
add
leave
popa
cmpsl
setg
popf
jb
xchg
lret
cmp
arpl
cmp
xchg
lret
cmp
cmp
sub
ja
jb
add
repnz
dec
mov
shlb
ljmp
jmp
dec
push
fists
and
or
push
lods
sbb
inc
ss
bound
notb
dec
fisubs
cmp
fs
and
sub
cli
adc
subb
xchg
test
push
int3
cli
cmp
fxch
cmpsl
fiadds
mov
out
out
imul
inc
push
mov
dec
cmp
jae
jge
imul
push
sub
and
cmpsb
mov
jl
push
xchg
rcr
push
mov
mull
sarb
sbb
push
int3
jmp
lds
jg
das
shr
jno
inc
lahf
ret
cmp
adc
dec
decl
pop
pop
xchg
ljmp
fs
lret
pushf
movsb
addb
jecxz
pushf
push
imul
add
gs
mov
ret
jge
cmpb
and
cwtl
dec
push
and
dec
add
sahf
dec
cmp
cmp
rorl
and
aad
adc
aas
stc
cmp
movsl
push
mov
mov
popa
out
ja
shlb
fiaddl
mov
stos
push
outsl
dec
ret
add
push
push
dec
test
js
cwtl
addb
hlt
out
pop
and
roll
push
es
ljmp
push
les
mov
xor
repz
ret
cmp
test
test
and
pop
fs
lea
pop
int3
mov
mov
jb
out
fsts
lahf
sbb
cmp
loope
push
test
test
negl
mov
pop
cmp
scas
sub
aaa
inc
lcall
arpl
fldcw
test
pushl
into
jle
sub
xchg
ljmp
jb
in
push
fsubs
inc
cmpsb
ljmp
jg
add
pop
xorb
iret
jne
jge
mov
sarl
stos
inc
je
mov
xlat
test
adc
mov
movsb
test
pushf
inc
not
out
adc
hlt
push
push
inc
xchg
xor
aam
mov
daa
push
sbb
nop
mov
icebp
loope
mov
inc
xchg
rorb
pop
jl
pop
jbe
mov
sub
frstor
hlt
nop
mov
icebp
pop
adc
mov
xor
push
sbb
cmp
push
jl
xor
xor
test
cmc
fistpll
sub
pop
sub
sub
aam
dec
sbb
outsb
adcb
or
mov
adc
cmp
jb
sub
cmp
add
test
or
dec
loop
push
push
sub
pop
push
ljmp
cmp
cli
lret
xchg
sar
ss
mov
in
jb
test
push
pop
push
cmp
jnp
das
jl
leave
cli
add
push
mov
shlb
outsl
xor
je
mov
pop
outsb
xchg
mov
mov
sub
shll
lods
addl
inc
add
sub
xor
cmp
sbb
push
mov
fnsave
adcb
jge
and
stc
jne
pop
sahf
pop
inc
adc
cmp
popaw
xor
jnp
mov
rcrb
rcr
insb
mov
mov
sub
or
mov
dec
sarl
movsl
pop
jp
adc
int
mov
lock
leave
iret
mov
ja
cltd
mov
cmp
or
mov
popa
cwtl
data16
pushf
cmp
jnp
dec
andl
es
loope
and
push
ficompl
mov
xchg
and
or
js
fistpll
pop
jne
mov
xor
add
add
cmp
rcl
pop
xchg
loop
cmp
roll
push
jb
lret
ja
call
push
rcr
dec
cltd
or
in
xchg
imul
popa
test
lea
ljmp
mov
jmp
cli
movsl
ljmp
dec
and
or
shrb
sbb
cmpb
jmp
jl
movl
fistpl
mov
leave
mov
iret
or
lcall
cltd
insb
mov
in
inc
inc
repnz
out
mov
das
push
xor
int3
mov
xchg
gs
cmp
cmpsl
in
test
fwait
inc
adc
ret
mov
stc
jns,pn
cld
inc
mov
adc
jg
pusha
pop
or
out
adc
data16
test
lcall
adc
test
jnp
out
sub
roll
jecxz
shrb
xchg
das
arpl
shlb
imul
cld
arpl
fsts
sub
jp
pop
xlat
mov
outsl
outsb
sti
adc
movsl
and
fimuls
mov
mov
ret
aam
mov
jns
mov
cmp
dec
sbbb
outsl
scas
push
cmp
inc
lahf
xor
pop
gs
sbbl
icebp
pusha
shlb
nop
jg
stc
ret
fidivs
xor
aad
mov
inc
xlat
dec
xchg
jmp
neg
and
arpl
inc
mov
mov
push
jne
jns
mov
out
cmp
mov
in
xorb
sbb
add
bound
mov
inc
and
aaa
jne
xor
push
ss
faddl
jnp
xor
mov
in
pop
ss
movsl
jl
mov
sbb
in
push
and
mulb
nop
inc
cmp
mov
std
pop
es
mov
sub
loopne
xchg
mov
and
lock
es
in
adc
es
lea
mov
out
adc
jb
push
sbb
popa
lcall
enter
fdivr
jbe
sbb
imul
loope
cld
fwait
mov
mov
shll
mov
dec
pop
fld
pop
clc
xor
and
inc
cmpsl
int3
in
imul
xor
dec
sar
push
cmp
mov
in
jnp
jmp
and
sub
test
and
int
sbb
xchg
push
and
add
inc
add
add
mov
pop
cmc
sub
test
jno
test
mov
jae
and
xchg
movsb
out
rolb
xchg
sub
mov
adc
mov
cmp
and
into
mov
jb
xlat
sbb
into
dec
sub
add
daa
cmp
ret
iret
add
push
leave
or
js
mov
adc
sub
jns
inc
jge
lods
cmp
outsb
cmp
std
out
shlb
in
sub
test
pop
push
movsb
push
stos
pop
push
sbb
xchg
popa
pop
sbb
mov
xchg
fcom
scas
out
test
in
jge
lret
movsb
sub
jne
push
cmp
aam
dec
inc
arpl
into
cmp
sahf
and
out
and
pop
xor
cld
lahf
insb
pusha
push
and
or
fadd
in
std
mov
push
ljmp
mov
mov
stos
lods
inc
je
test
push
cmpsb
sar
test
mov
insb
cmp
add
mov
das
clc
xor
cmp
insb
dec
insl
popf
push
pop
cmp
mov
iret
add
lods
xchg
nop
repz
mov
out
push
repz
jns
dec
and
cli
sub
repnz
clc
and
subl
jg
daa
jae
pop
sub
fsubl
xchg
mov
lods
js
movsl
outsb
or
lea
jno
jo
popa
mov
push
dec
incl
fisubl
rcrb
sbb
dec
pop
hlt
nopl
test
lcall
je
and
test
mov
icebp
pusha
mov
leave
les
scas
imulb
xchg
dec
faddp
jno
ja
jle
mov
nop
ja
das
test
mov
mov
fildl
out
addb
jle
out
fs
pop
in
mov
jmp
mov
jo
rcll
sub
lods
inc
sbb
xor
xchg
and
mov
std
jnp
adc
repz
leave
inc
stos
xchg
mov
ss
fscale
mov
cs
jne
aam
cmpsb
pushf
test
sbb
pop
in
mov
push
push
xlat
fcmovnbe
dec
fimull
xor
xor
rorb
lods
sbb
movsb
mov
sbb
adcl
loop
mov
mov
inc
adc
shlb
mov
sahf
jo
aas
lret
mov
push
fsubrl
fisubrl
sub
or
and
andl
int3
arpl
lahf
push
mov
pop
scas
mov
dec
in
inc
mov
push
or
cmp
xchg
xchg
bound
stos
sbb
push
enter
cmpsl
or
lods
scas
lods
push
mov
rolb
das
pop
xchg
pop
mov
fs
negl
iret
pushf
out
jg
mov
popa
push
stos
adc
in
cmpsb
push
adc
add
cmp
push
scas
push
push
std
outsb
mov
daa
pop
xor
sbb
jmp
lret
push
bnd
xor
movsb
pop
testl
pusha
dec
push
mov
inc
and
loopne
push
pop
rorl
repnz
adc
fs
mov
enterw
das
test
add
xchg
mov
js
pop
into
dec
hlt
pop
int
lds
ret
mov
inc
adc
xor
mov
pcmpeqw
xor
adc
mov
jg
adc
sti
lcall
mov
push
mov
ljmp
pusha
jg
repz
inc
out
xchg
push
daa
pop
pop
mov
cld
outsl
clc
iret
mov
sub
push
bound
jnp
mov
in
adc
mov
es
mov
es
lea
aad
mull
ficoml
ret
or
push
jb
into
lea
sahf
mov
int
test
das
xor
mov
rcrb
lcall
jne
fcom
in
mov
or
sub
icebp
cmpsb
pop
js
pop
fstl
imul
dec
cwtl
mov
ljmp
pop
push
stos
xchg
xchg
add
or
insb
arpl
push
pop
in
push
xlat
arpl
pop
enter
lds
mov
fsts
mov
shlb
xor
and
jns
mov
scas
pusha
add
push
cld
sbb
add
pcmpeqw
and
or
leave
cmc
xchg
sbb
js
notb
pop
aad
sbb
pop
scas
outsb
pop
xor
aaa
pop
jmp
pop
loopne
imul
imul
xor
xchg
std
push
push
mov
fldl
std
repz
stc
arpl
lret
in
fisubrl
cmp
call
pop
ret
lahf
lcall
mov
and
jnp
cld
addl
je
lret
out
sahf
push
push
into
mov
push
mov
jge
mov
mov
cli
dec
test
icebp
add
xlat
jb
cmc
jb
cmp
fstpt
mov
repz
xchg
insb
bound
adcl
arpl
fnstenv
addr16
mov
jl
outsb
scas
cmp
js
sbb
lret
loop
pushl
clc
or
inc
lret
sbb
pop
dec
push
movsb
lea
sub
sahf
and
stos
sub
dec
sbb
and
mov
xor
inc
test
mov
in
push
testl
dec
scas
inc
pop
faddl
out
es
test
clc
inc
data16
sub
xchg
xor
sub
dec
push
loopne
add
sub
ljmp
mov
and
xor
inc
push
jns
dec
add
or
dec
xor
imul
pop
and
sub
cmc
rol
sti
repz
pop
adc
push
movsl
add
jns
pop
inc
sbb
outsl
in
and
jno
mov
daa
fmull
add
sarb
xchg
xchg
xor
mov
fadds
popf
xchg
imul
cmc
sahf
imul
repz
mov
or
lret
jo
nop
loopne
add
mov
pop
jle
pop
mov
in
in
mov
inc
test
iret
push
test
cltd
mov
xchg
lods
mov
shr
fisubs
sub
mov
movsl
xchg
pop
mov
fwait
push
add
mov
or
push
repnz
jbe
pusha
fwait
pop
rcrb
sbb
dec
out
ret
xor
push
xor
pusha
xor
pop
mov
dec
mov
pop
test
push
pop
dec
or
insb
mov
mov
scas
push
cmp
cmp
sahf
cmp
jb
inc
jecxz
pop
mov
push
in
dec
jp
mov
xchg
jbe
ljmp
jb
cmpsb
les
or
push
out
iret
xchg
ds
icebp
jmp
shl
lcall
xor
cmp
mov
lcall
mov
mov
sbb
in
popl
mov
bound
cmp
sbb
jae
push
ss
mov
jecxz
cmc
inc
sbb
xor
mov
mov
cld
xchg
test
pop
dec
cmp
cli
pop
scas
pop
prefetch
or
scas
add
les
push
or
sub
inc
je
call
in
cmp
sbb
lea
push
pop
sub
ljmp
test
push
xchg
cwtl
into
rorl
pop
pop
shll
movsb
or
mov
scas
lret
adc
mov
xor
int3
pop
cmpsl
jbe
or
rol
iret
jbe
cmp
pop
repnz
and
fldt
xor
dec
inc
cli
push
xor
dec
loop
sub
sarl
mov
lcall
and
dec
shl
cli
xor
std
sti
movl
adc
push
cmpsb
pushf
shrb
inc
dec
and
and
in
fld
sbb
out
cmc
and
bound
mov
or
adc
sbb
push
scas
sbb
add
mov
aas
cmpsb
insb
add
xchg
fdivrs
movsb
ds
mov
mov
jge
mov
gs
into
jne
sub
push
outsb
cmp
and
inc
add
dec
fsts
pop
adc
jne
sub
xchg
jmp
mov
cmp
mov
mov
jg
in
inc
pop
cmp
dec
or
cmp
or
movsb
rorb
sbbl
aam
lods
movsb
push
nop
adc
push
cmp
dec
push
jecxz
lods
pusha
addr16
outsl
inc
xchg
cld
dec
jl
xchg
fistl
cmp
dec
inc
pushf
mov
addr16
sub
dec
std
fistpl
loop
mov
outsl
and
addl
mov
subl
nop
repnz
cmpb
aas
push
cmp
sub
subb
push
fwait
jle
int
or
sub
popa
aam
adc
sub
or
stos
repnz
test
fsts
cwtl
sbb
xchg
xchg
scas
js
jmp
mov
in
clc
push
dec
xor
xchg
push
jno
gs
xor
hlt
icebp
xchg
xor
jne
inc
sbb
cmp
pop
mov
fmul
lahf
push
mov
sbb
out
and
mov
dec
mov
dec
fs
jle
adc
aaa
jae
push
mov
mov
arpl
add
push
repnz
movsl
shlb
and
push
test
pusha
je
mov
sub
or
cltd
lea
xor
in
mov
jb
fdivrs
mov
inc
stos
and
jmp
stos
jae
mov
adc
and
cmp
mov
sub
clc
lahf
mov
mov
jmp
or
cmp
aaa
pop
mov
iret
call
mov
push
adc
lret
stos
pop
fldt
or
mov
shr
add
mov
mov
xchg
shl
ss
outsb
mov
dec
xchg
mov
popf
push
pop
ss
push
mov
or
ss
xor
sbb
and
sbb
and
dec
add
cmp
ds
lret
in
jb
dec
sarl
add
or
insl
scas
push
lea
push
pop
cmp
pushf
mov
les
adc
jne
pop
adc
push
cmp
cmpsl
loop
add
mov
gs
xchg
icebp
pusha
arpl
pusha
add
fisubrl
cli
cmp
mov
cltd
cltd
push
aas
aaa
mov
or
cmp
xchg
mov
jnp
shrl
cmp
mov
dec
pop
push
xchg
orl
insl
and
mov
aad
shlb
nop
or
leave
sub
fmul
xchg
xchg
cmp
je
cld
mov
push
cmpsl
jmp
sub
arpl
jle
popa
repz
fs
pop
dec
mov
cmpsl
sti
arpl
out
jecxz
xchg
jp
sub
test
lahf
ja
clc
dec
call
or
les
mov
and
stc
in
and
xchg
into
adc
fadds
ja
xor
add
adc
or
ret
gs
adc
push
mov
dec
pop
in
xchg
adc
bound
jno
mov
push
mov
mov
insl
std
jg
das
cmpsl
mov
add
cli
cmpsl
add
sbb
ljmp
mov
insl
mov
cmp
pushf
and
out
sar
sbb
sbb
inc
fisubs
add
sub
popf
cmpsl
js
insb
push
and
pop
pop
dec
dec
sbb
mov
xlat
mov
movsb
push
into
push
imul
adc
sti
cmp
jge
ficompl
xchg
repz
dec
xchg
push
incb
mov
mov
xchg
cmp
fisttpl
xchg
mov
inc
mov
rorl
push
xor
sub
mov
sub
jl
int3
in
js
or
mov
mov
inc
bound
mov
stos
push
inc
test
jno
inc
ror
cmp
and
xchg
jg
dec
and
xchg
mov
shrl
in
ret
and
inc
ss
jmp
divb
outsb
sub
or
inc
sub
cmp
sub
insl
icebp
sub
pop
movsb
pop
fisubl
ret
mov
nop
push
out
mov
jl
xchg
adc
fcomp
fists
pop
addr16
sub
mov
cld
lahf
adc
cmp
pop
int
push
push
mov
sub
pop
mov
enter
mov
data16
pop
mov
push
dec
inc
mov
mov
sti
es
out
sub
fcoms
pop
out
ds
lret
cmc
sbb
jo
mov
es
mov
aam
jns
sub
subb
mov
mov
inc
jno
xor
mov
aaa
sub
add
pop
icebp
jns
stos
sub
int3
or
or
mov
sbb
lahf
xchg
leave
adc
xchg
loopne
push
aam
scas
lea
imull
lcall
jmp
sbbb
test
add
jg
test
cs
jne
leave
scas
mov
push
cmp
ret
adc
mov
sbb
fs
or
leave
into
out
cmp
xor
mov
push
cwtl
push
lcall
loopne
xchg
fldcw
cs
dec
call
repnz
aad
jo
xor
int3
aas
mov
mov
mov
arpl
push
mov
adc
call
lret
fimuls
repnz
mov
fistps
push
mov
or
mov
xorl
int3
adc
inc
dec
pushf
enter
mov
pop
nop
pop
cmp
cmp
lcall
div
adc
pop
cmpb
pushf
arpl
ljmp
sbb
inc
leave
test
ss
push
shlb
lret
fsubrl
add
fmuls
inc
test
mov
cltd
inc
jp
pushf
cmp
lret
insl
out
jecxz
test
xchg
cmp
inc
mov
jmp
jns
pop
jb
xchg
fs
data16
loope
shl
and
inc
and
cld
pop
rcl
mov
dec
ljmp
adc
jle
dec
adc
sbb
sbb
mov
cmpsl
addl
cmp
and
loop
orb
xlat
or
cwtl
or
sub
std
mov
popa
nop
hlt
jmp
push
or
subl
popa
mov
add
adc
lahf
push
pop
dec
pop
repnz
shll
insb
push
pop
out
in
or
data16
out
or
jecxz
cmp
dec
inc
inc
arpl
stos
mov
in
ljmp
aaa
adc
daa
ljmp
sub
cmp
aas
stc
mov
mov
dec
cs
mov
xor
je
into
push
cwtl
xchg
test
dec
cmp
xchg
jb
inc
cwtl
inc
and
rolb
sub
js
loope
test
mov
loope
xchg
lahf
nop
nop
and
loope
ret
loop
push
inc
xlat
hlt
orb
repz
push
and
pushf
test
adc
cmp
sub
test
add
push
xor
lds
imul
ficomps
add
jb
stc
xor
ljmp
add
xchg
xor
aas
sbb
push
xchg
jno
pop
pop
push
stos
pusha
dec
add
shlb
daa
orl
fdivp
scas
lahf
pop
loopne
xchg
shrb
insb
inc
mov
push
sbb
lods
stos
sbb
xor
mov
das
xor
cmp
and
out
stos
mov
dec
cmc
mov
in
jo
stos
push
cmpl
imul
daa
jl
mov
mov
pop
lcall
xor
clc
pop
icebp
push
add
fmull
mov
repnz
jae
sbb
jl
add
inc
sbbl
or
movsl
rol
add
add
lret
mov
pop
adc
dec
ret
lods
adc
arpl
jle
xchg
je
pop
jmp
test
mov
cmp
data16
xchg
push
pop
fstpt
mov
outsl
jne
fucomp
push
push
jecxz
push
icebp
push
or
adc
stos
ret
mov
xor
adc
fs
push
or
mov
int3
fcomps
mov
repz
ficompl
clc
aaa
outsb
sbb
xchg
and
fisubs
enter
pop
push
insb
mov
mov
add
dec
mov
orl
sahf
scas
jmp
dec
mov
out
xor
mov
adc
aaa
dec
pushf
add
push
xchg
icebp
jae
rclb
bound
popf
mov
inc
pop
pop
stos
stc
mov
push
sub
push
js
jle
stc
adc
dec
in
push
adc
das
mov
lods
sub
push
mov
pop
jae
xchg
repz
lahf
and
mov
jle
mov
aam
loop
mov
adc
fs
jno
in
aaa
iret
ret
test
test
push
mov
test
jp
stc
rol
movsl
sub
cmpsl
test
xchg
fadds
inc
and
sti
mov
ja
arpl
lods
mov
push
out
mov
lea
and
mov
es
xchg
cmp
and
mov
adc
les
add
ds
xlat
xor
or
xchg
imul
sbb
sbb
fsubl
push
ljmp
or
xchg
push
cmc
or
xchg
mov
adcl
jecxz
cmp
jg
data16
mov
mov
sbbl
adc
addl
movsb
cmc
mov
pop
es
gs
jo
les
dec
pop
rolb
call
gs
cld
inc
imul
lea
mov
lret
cmp
shlb
lret
push
and
dec
cmp
rorl
mov
outsl
xchg
imul
loopne
mov
sbb
cmpsb
mov
dec
stos
inc
or
jmp
ret
push
adc
scas
clc
cmp
cmp
lds
idivb
jno
shrl
ret
xchg
or
fiadds
in
adc
das
cli
fs
adc
add
sub
in
dec
pop
lock
xchg
pop
rcrl
mov
scas
fstl
push
adc
pop
loope
xchg
repz
jge
jg
adc
sbb
cmp
jp
sbb
call
test
loop
movsl
mov
mov
js
or
push
jnp
jnp
cmp
cmp
bound
sbb
pushf
jns
adc
pop
pop
insb
sub
mov
xchg
in
inc
xor
jmp
out
dec
sbb
inc
pushf
aam
shll
js
fisubrs
cwtl
test
dec
jno
cmp
cwtl
and
inc
outsb
xor
cwtl
add
cmpsb
jge
lds
push
addr16
ss
add
in
ss
fwait
cmp
bound
or
pop
cmpl
orb
jle
cmp
lret
dec
xchg
jno
in
add
retw
imul
test
movsl
lock
cmp
das
cmp
pop
mov
jnp
xchg
adc
push
lods
add
pop
xor
gs
aaa
js
dec
xor
scas
pop
mov
fsubp
hlt
xchg
cmpsl
pop
mov
mov
push
sbb
lds
incl
outsl
xor
inc
sbb
push
pop
loopne,pt
es
flds
stos
nop
sets
pop
repnz
cwtl
loop
jne
mov
ret
rorl
add
inc
pusha
pop
jle
mov
xor
les
xchg
cmp
pop
iret
xchg
jmp
lcall
mov
mov
sbb
sbb
jge
xchg
mov
xor
inc
mov
mov
out
les
jb
fdiv
aaa
xor
jge
les
les
push
lock
mov
mov
fiaddl
adc
mov
push
add
insl
pop
test
fbstp
add
mov
into
cmp
push
jo
sbb
repz
outsb
or
aam
ret
adc
sbb
or
popf
jle
ficompl
mov
sbb
rol
cld
gs
mov
sbb
push
out
cmpsb
push
lock
fsub
popa
inc
out
sarl
push
pop
test
sub
mov
mov
int
imul
outsl
rol
jb
subl
leave
loop
jg
mov
sbb
mov
js
dec
push
in
xor
adc
add
mov
test
sub
dec
add
pop
mov
or
jne
push
jns
in
movsb
in
sub
cmc
enter
iret
mov
out
cmp
lahf
mov
out
into
lods
mov
rcl
lahf
insb
rcr
push
sub
gs
imul
pop
add
jmp
stos
xor
add
outsb
icebp
pushf
pop
aad
xor
pop
int
pop
out
xor
add
xor
daa
shlb
inc
lcall
popa
push
xchg
popf
rcl
inc
add
orb
lret
pushf
lret
dec
cmp
jae
xor
and
pop
pop
inc
add
insl
sub
or
cmp
out
out
sarl
cmpsb
sub
dec
je
add
inc
xchg
mov
or
push
pusha
push
xchg
dec
push
cmp
push
loope
xchg
jne
loopne
test
mov
mov
cmp
rorb
cltd
add
aam
push
mov
fnsave
mov
inc
lds
icebp
imul
dec
icebp
insb
sarb
cli
jl
fcomps
repz
pushf
je
push
fmulp
aas
ss
push
push
jne
mov
inc
xlat
mov
mov
es
in
cmp
xor
mov
lret
xor
sbb
push
mov
sbb
out
aaa
xchg
movsl
inc
ss
jb
push
arpl
pusha
repz
mov
cmp
fisttps
jmp
out
push
pop
in
cld
push
jne
add
and
adc
push
dec
lods
dec
push
fdivl
dec
cmp
push
jle
shlb
mov
popa
push
sti
shll
add
in
cmc
mov
cmp
aaa
jg
pushf
push
sbbb
add
sub
add
xchg
pop
pusha
out
mov
aas
loope
mov
adc
test
push
sub
fldcw
js
aas
sbb
dec
outsl
mov
fildl
mov
mov
mov
push
jo
sub
mov
pusha
push
dec
add
insb
mov
mov
mov
xchg
push
outsb
inc
add
lock
xchg
les
jmp
sub
idiv
data16
nop
iret
sub
adc
jo
fimull
jns
xor
imul
rcl
pop
popa
dec
inc
rolb
xor
or
jae
add
cmpsl
in
test
mov
insb
divb
or
xor
sub
ja
jle
addr16
repnz
iret
int
outsl
jno
push
les
into
add
sbbb
add
in
loop
movsl
stc
adc
std
addl
movsl
pop
sti
stos
sti
pop
lock
es
call
andl
ja
mov
add
or
mov
test
in
jne
scas
pop
pop
hlt
xlat
orl
cld
xchg
add
push
mov
add
bound
nop
inc
push
mov
ljmp
jbe
enter
loop
ds
mov
adc
mov
insl
xchg
andb
pop
xor
ret
xor
push
inc
adc
dec
push
add
xchg
loope
loopne
cmp
std
cmpsb
dec
scas
fistpll
pop
mov
jmp
mov
jg
pop
idivl
bound
jp
cwtl
pop
test
fisubs
push
outsl
cmp
stos
jno
ret
pop
adc
xchg
iret
adc
jo
inc
cmc
xchg
push
jnp
test
xor
pop
imul
dec
test
sub
fidivl
xchg
jb
xor
dec
xchg
push
bound
jnp
sub
mov
mov
setnp
xor
inc
jecxz
mov
and
stos
cmpb
add
pop
and
and
ja
int
pop
push
push
push
or
jno
scas
and
cwtl
jbe
dec
push
push
out
or
int3
fwait
cs
adc
dec
adc
stos
mov
mov
ds
ljmp
std
lahf
pop
mov
jnp
iret
xor
cld
test
dec
data16
push
sub
mov
enter
add
dec
fists
sub
sbb
pop
hlt
aad
cmp
pop
and
movsl
xor
popa
or
pop
add
and
pop
movsl
sbb
addr16
lret
fnstsw
cmp
or
test
sbb
nop
jb
cmp
mulb
dec
add
rcll
aam
iret
push
and
negl
fidivl
push
movsl
add
les
sub
add
sub
int
mov
es
adc
or
into
loopne
mov
ret
outsb
test
push
sub
ror
and
mov
xchg
dec
sbb
aam
and
addb
cs
lods
sbb
iret
lock
out
int3
les
push
jmp
movl
gs
xor
cld
idivl
mov
fwait
and
mov
pusha
bound
sub
cli
push
mov
ja
push
adc
jae
mov
mov
jne
and
xor
lret
xchg
adc
inc
sub
fstpt
jnp
add
xchg
into
dec
or
cmp
insl
jg
xor
jecxz
popf
icebp
add
or
imul
scas
incl
das
in
cld
pop
jg
ret
jge
and
pop
outsb
xor
and
lret
arpl
sbb
in
mov
lds
inc
xchg
jb
sbb
push
in
xchg
push
dec
mov
xor
in
pop
mov
popf
sbb
ret
pop
out
inc
sbb
ds
fldl
iret
sbb
xor
movsl
shll
arpl
inc
mov
into
jecxz
push
sub
rep
into
lds
adc
add
xchg
sub
lahf
push
lods
push
mov
sbb
inc
popf
pop
mov
and
push
sti
jne
jle
push
and
mov
inc
inc
and
aaa
add
add
cmpsb
and
pushf
addr16
test
jp
mov
mov
aaa
loope
cwtl
fs
lea
sub
mov
shl
sarb
jl
sub
fdivl
subl
dec
push
or
leave
in
add
aaa
pop
pop
std
inc
jo
addl
js
in
push
jmp
scas
divb
aam
jnp
push
in
sbb
fildll
and
xchg
imull
test
adc
lods
cld
adc
jbe
inc
inc
and
xchg
sub
out
iret
mov
mov
lods
lret
push
mov
lret
in
mov
push
or
pop
aad
aam
cmp
or
outsb
fwait
push
pop
test
push
int3
add
cld
add
pop
lods
and
dec
out
push
in
movsl
lods
push
scas
cmpl
icebp
out
push
fimuls
mov
pop
lock
fnsave
add
dec
xchg
vpunpckhwd
addl
pusha
movsb
imul
or
add
dec
js
test
lahf
mov
xor
jg
xlat
add
mov
mov
mov
adc
mov
jmp
outsl
dec
scas
mov
add
and
sub
in
insb
jnp
jge
sub
loope
bound
add
pop
cs
xchg
mov
jmp
fs
mov
xchg
mov
jg
push
in
out
roll
xchg
or
or
xor
dec
shlb
dec
pop
aaa
add
xor
addr16
fidivrl
scas
sub
lods
out
mov
jge
jl
pop
test
jmp
ficomps
cld
in
fsts
jb
and
sbb
inc
dec
nop
lret
out
packsswb
jns
ljmp
ljmp
mov
inc
and
mov
sub
mov
fnstcw
or
fdivp
test
add
int
cltd
daa
pop
fisttpll
pusha
ljmp
sbbb
test
mov
inc
push
in
nop
xor
mov
pop
push
adc
jle
aam
sub
movsb
sbb
lret
xchg
jecxz
push
rcrl
and
push
hlt
jmp
movsb
in
shll
mov
imul
pop
adc
das
jmp
jl
xchg
push
cmp
icebp
addr16
aam
xchg
in
dec
sub
xchg
add
pop
cmp
lea
addr16
rcll
sub
xchg
jg
mov
mov
int3
mov
cmp
push
cs
lahf
fmuls
ficoms
imul
push
or
jnp
hlt
imul
cmp
in
outsl
push
or
push
dec
inc
test
dec
stc
fsubl
xchg
mov
sbb
or
sahf
dec
pop
dec
aam
clc
jns
div
xchg
lods
mov
mov
sub
les
xor
sub
nop
in
sarb
sub
cmp
xchg
into
adc
call
jp
and
jmp
lret
xor
sti
sub
add
out
mov
roll
add
loopne
pop
insb
mull
xor
push
pop
adc
in
push
cli
cwtl
pop
aas
pop
sbb
out
mov
mov
ret
adc
xchg
pop
adc
ffreep
fdivs
scas
fistpll
adc
xchg
add
ret
inc
cltd
xor
negl
repz
pop
mov
aad
mov
sbb
js
xchg
imul
fidivs
xchg
insb
jp
test
les
es
push
mov
pusha
arpl
mov
and
sbbl
cmp
adc
xchg
pop
mov
test
repz
push
mulb
jecxz
xor
xchg
in
cmc
xor
lcall
sbb
mov
and
in
pop
out
mov
jmp
inc
sbb
imul
test
xorl
mov
jle
or
jno
insl
cmpsb
into
pop
loop
pop
test
lds
mov
sbb
mov
jns
mov
jmp
popa
je
xor
mov
popa
nop
xchg
loopne
inc
mov
jl,pn
out
into
lahf
outsl
sbb
jae
lods
mov
bnd
orl
popf
fs
loope
cld
jne
cmpsb
int
pop
dec
push
xor
sbb
jl
add
in
ljmp
cld
pushl
fcomip
or
mov
popf
test
push
div
sub
or
cmp
fbstp
sbb
inc
inc
repz
fs
and
clc
stos
inc
call
dec
loop
ss
ja
cmp
adc
in
arpl
jg
stc
adc
popa
add
ljmp
xchg
lock
fadds
xor
jmp
inc
ja
and
sub
cmp
sub
lds
sbb
xor
iret
cmpsb
jnp
out
xor
jecxz
add
add
cwtl
popf
jmp
lods
add
test
inc
sbb
add
popf
jbe
rorl
jmp
hlt
add
xchg
pop
xchg
test
xor
into
daa
lret
outsb
xor
dec
in
cmpsl
and
test
sti
jbe
test
aam
shlb
jge
inc
sub
inc
adc
leave
fidivs
xchg
shr
mov
xor
mov
sbb
jecxz
out
pop
inc
jmp
push
pop
movsb
dec
xchg
mov
inc
adc
dec
mov
out
js
in
adc
popf
sub
push
jo
iret
lret
fadds
stos
xchg
pop
jns
cmp
or
bound
test
or
xor
push
bound
pushf
or
push
hlt
or
push
xlat
mov
pop
es
js
push
sub
outsb
sub
cld
into
not
mov
xchg
push
fs
sub
jl
and
xchg
pop
rcrb
push
test
test
cmpb
test
paddsw
push
ljmp
mov
mov
jbe
je
cmp
jge
or
mov
ds
loop
fwait
dec
in
fs
or
jo
and
frstor
mov
xor
outsb
cmp
fwait
mov
out
and
bound
and
push
dec
mov
xchg
xchg
xor
or
sbb
fiadds
rcr
xor
sbb
pop
or
gs
lods
pop
insl
cmpsb
loope
xchg
lret
sti
call
and
mov
and
adc
dec
clc
in
pop
movsb
jle
xchg
jmp
int3
sarl
out
sbb
or
pusha
push
out
or
adc
sbb
mov
cmc
mov
js
lret
sbb
push
or
mov
arpl
pop
add
aas
pop
push
jno
test
cmp
mov
lahf
mov
mov
push
sub
inc
clc
sti
out
push
inc
lar
jg
je
test
cli
xchg
or
mov
mov
aam
cmc
mov
in
mov
xor
movsb
aam
sub
cmp
pop
dec
adc
insb
jb
loop
shlb
fs
mov
or
aas
or
hlt
js
clc
mov
xor
aam
movsl
mull
cmp
mov
xchg
inc
pop
into
sub
and
adcb
rclb
loopne
mov
dec
fidivrs
add
mov
pop
daa
or
fldt
movsb
lret
cmpsb
push
jne
dec
mov
pop
or
mov
push
sbb
pop
arpl
push
pop
inc
mov
sbb
mov
test
cltd
mov
mov
scas
in
jb
jae
mov
xlat
dec
insb
xchg
popl
adc
push
in
xor
and
pop
loopne
push
popf
cmpsl
repz
mov
mov
pop
stos
sarl
mov
sbb
mov
push
dec
cmpsb
stos
rol
mov
mov
inc
pushf
cwtl
jnp
test
outsl
ljmp
sbb
sti
out
movsb
or
iret
xchg
xchg
cmp
jo
insl
pop
ficomps
jne
iret
lret
mov
out
xor
dec
xchg
lods
stos
mov
xchg
cld
mov
mov
je
jp
cltd
fisttps
jns
mov
rolb
push
clc
add
cltd
mov
hlt
rcrb
adc
push
loope
inc
lods
idivb
xchg
jo
xchg
nop
scas
cmp
xor
and
xlat
xor
popf
push
stc
jbe
mov
mov
ror
test
inc
add
movsb
push
jno
rolb
lods
loope
push
fstpl
test
push
push
or
lods
orb
daa
data16
addr16
mov
pop
dec
ss
fldl
pusha
dec
sub
jne
scas
inc
mov
lock
xchg
nop
mov
call
xchg
push
leave
jge
daa
and
or
fstpt
fiaddl
imul
jl
sbb
mov
mov
dec
or
push
popa
mov
rclb
cmp
push
xor
cmp
jmp
sbb
cmp
cltd
out
dec
out
popf
ret
fnsave
fdivrl
mov
xor
js
push
call
mov
cmc
hlt
int
push
ds
mov
pop
pop
and
ds
sbb
sub
sub
imul
insb
fcoml
mov
pop
mov
jo
mov
mov
test
pop
aad
cli
sbb
xlat
ret
mov
imull
jo
ja
xchg
loop
int3
stc
nop
sub
jmp
inc
or
pop
js
mov
ss
divl
sbb
aas
movsl
out
je
ljmp
and
and
orb
fwait
mov
inc
iret
div
ficompl
mov
add
mov
add
fsts
mov
rcrb
std
inc
jg
sbb
aaa
adc
jmp
cmpl
leave
fcompl
push
out
xor
andb
push
mov
add
shll
jmp
mov
cmp
out
sahf
test
inc
adc
addr16
outsl
faddp
mov
cmpl
xchg
jl
out
and
subl
mov
xor
push
data16
in
inc
es
fstps
stc
or
mov
iret
mov
mov
ja
ret
mov
cli
adc
mov
push
and
dec
scas
cmp
and
jb
or
xlat
icebp
mov
mov
mov
dec
jnp
xchg
fwait
jecxz
jl
mov
xor
or
and
add
lahf
xchg
fsubp
xchg
push
mov
add
out
adc
dec
push
js
xor
addr16
decb
cmp
push
cmpb
mov
ss
push
mov
mov
mov
mov
outsb
loope
mov
mov
jp
mov
div
push
cmp
daa
lds
arpl
inc
jle
pop
or
push
pop
insb
imulb
sub
roll
push
insb
les
leave
outsb
xchg
scas
xorb
jne
lods
mov
pop
mov
out
hlt
enter
or
and
or
mov
xor
fsts
pop
xchg
push
push
mov
jae
mov
inc
rcrl
xor
xor
insb
mov
notb
xchg
cmpsl
aaa
pusha
sahf
jno
sbb
pop
xchg
xor
or
arpl
sbbb
in
les
mov
jns
imul
xchg
clc
shrl
data16
movsl
stos
cmp
xchg
mov
repnz
repz
push
jmp
xchg
in
pop
pop
and
andb
cmpl
dec
enter
in
adc
js
xor
out
mov
lds
adcl
clc
sbb
inc
sbb
mov
jge
scas
in
js
sbb
push
cmp
jmp
roll
push
mov
sub
aad
shl
dec
scas
call
nop
stos
mov
icebp
int
or
jmp
popa
xchg
fdivs
outsb
into
jl
addr16
mov
aas
pushf
mov
or
insl
mov
inc
xchg
mov
sub
jge
and
test
or
adc
nop
sub
add
adc
jmp
adc
bound
lds
ret
fistpl
xor
les
popf
loop
mov
sti
add
stos
inc
mov
imul
insb
in
insl
mov
dec
jmp
or
jge
addb
mov
push
xor
inc
push
push
jne
cmpsl
jae
pop
push
jmp
lock
mov
inc
js
dec
inc
nop
sahf
rorl
mov
nop
jne
and
and
push
pop
or
aam
pop
xchg
lcall
pusha
cs
fiadds
gs
ror
pusha
dec
push
repz
mov
xchg
hlt
in
xchg
mov
mov
dec
and
out
and
jmp
push
and
push
xlat
pusha
pushf
cmp
push
inc
mov
aaa
sub
xor
mov
imul
jecxz
adc
adc
cmc
adc
shl
sbb
pop
outsl
into
fsubl
cld
cmp
cmp
adc
popf
push
inc
mov
mov
add
mov
jo
xchg
xchg
movsl
mov
and
mov
jns
pushf
sub
test
idivl
dec
mov
and
ret
in
xchg
lods
inc
lds
add
add
test
cli
ljmp
sub
mov
outsb
inc
testl
add
jmp
insl
ds
push
mov
add
push
imulb
ret
data16
sbb
sub
push
call
popa
push
pop
push
iret
mov
dec
xchg
xor
std
mov
xor
imul
sahf
xor
out
les
arpl
test
mov
mov
pusha
sarl
inc
mov
xchg
pushf
xor
xchg
xchg
mov
stos
mov
mov
sub
cmp
lahf
and
xchg
scas
fdivs
jne
mov
jb
xchg
mov
xchg
push
mov
fwait
nop
cmpsl
pushf
pop
outsl
pop
push
into
mov
inc
xor
dec
mov
enter
je
fwait
icebp
xchg
fnstenv
insb
cmpsl
in
mov
mov
movsl
xor
scas
popl
pop
ss
fcomip
rolb
fnstcw
mov
mov
movsl
in
xor
out
and
dec
ljmp
and
jns
dec
pop
jecxz
sub
mov
inc
inc
in
jle
jno
mov
push
popa
mov
xor
shlb
cltd
jl
jb
imul
jnp
test
fwait
add
mov
or
push
mov
xchg
jle
sbb
add
cmp
push
cmc
sahf
testb
mov
inc
xor
pop
xor
add
idiv
sub
mov
fsubr
test
aad
inc
cmpsl
mov
fsubrl
xor
mov
pop
add
add
push
loop
or
cmp
mov
test
and
xchg
sahf
paddq
lods
jns
data16
lcall
mov
mov
scas
push
cmc
hlt
inc
fcomi
incb
add
xlat
jb
ficompl
int3
lea
mul
xchg
aaa
and
adcl
jle
stc
loop
shl
es
mov
pop
adc
sbb
int
insl
outsl
adc
movsl
sarl
sar
fcompl
sub
jmp
push
xor
cld
testb
fistl
rcr
dec
in
rolb
nop
push
add
push
jbe
sbb
mov
dec
arpl
add
fistl
adcl
jle
lret
dec
fbld
nop
push
aas
mov
pop
or
out
fsubrp
pop
bnd
jl
lret
push
rcrb
and
fldl
xlat
ja
sub
adc
imul
xchg
and
in
xchg
sbb
inc
and
rcrb
jmp
xchg
pop
push
repnz
jb
in
mov
pop
sub
xchg
mov
sub
popf
jl
dec
jecxz
cmp
xor
dec
in
fnstsw
xor
mov
adc
ret
pop
cmp
pop
xchg
iret
inc
pop
and
das
popa
loope
fdiv
mov
xchg
jl
xchg
enter
adc
ret
jg
mov
loope
cmp
and
xchg
dec
push
dec
mov
movsl
pop
adc
repz
addr16
sub
inc
addr16
pand
inc
mov
push
xlat
rol
inc
cltd
insl
cld
sub
popa
mov
and
and
addl
mov
push
popf
jnp
jb
jae
mov
rorl
ds
pop
mov
push
les
push
add
fucom
pop
int
imul
jb
cld
nop
sbb
mov
stos
lret
faddl
push
adc
cmp
xor
roll
xor
inc
xor
xor
mov
outsb
aas
pop
shll
sbb
xor
pop
xchg
sbb
inc
lods
inc
loope
daa
popl
sub
inc
cmp
mov
mov
fldt
ja
jmp
pop
jle
inc
ret
cs
in
negl
add
daa
bound
adc
divb
sub
stc
ret
les
ds
into
shrl
mov
out
ret
lahf
xchg
push
mov
int3
mov
aad
sbb
rolb
sub
inc
pop
pop
inc
movsb
lret
mov
xor
cmp
fiadds
lds
or
lret
push
aas
fwait
out
sbbb
or
es
mov
mov
ljmp
mov
xchg
ja
push
clc
hlt
shr
adc
ret
leave
aas
ja
inc
mov
out
mov
test
pop
fldcw
addr16
cli
push
popa
jmp
int
rcl
adc
rclb
inc
cmp
ret
loopne
ret
in
mov
push
mov
fcoms
jge
jl
jecxz
fildl
cmp
adc
mov
lret
adc
push
lods
insl
arpl
pop
mov
ret
adc
clc
or
repnz
push
sub
enter
test
sub
sub
les
sbb
push
mov
dec
cmpsb
insl
pop
mov
jl
insb
scas
stc
movsb
push
lods
ret
inc
pushf
mov
popf
pusha
pop
lahf
into
mov
and
fidivrl
add
les
lea
arpl
das
movsb
mov
sbb
xchg
js
negl
mov
lea
xor
popf
xlat
out
mov
sbb
ds
jb
std
movsb
repz
icebp
loope
mov
out
push
fstl
dec
out
sub
pop
scas
in
inc
adc
mov
or
jne
cmp
outsb
aas
aaa
or
pop
and
sub
flds
sub
bound
dec
pop
pop
sub
pop
js
mov
inc
xlat
imul
cli
cmp
negl
call
fstpt
inc
mov
aas
mov
sub
nop
fistpll
pop
movsb
out
int3
popa
push
sub
daa
fwait
ret
ljmp
int
fwait
push
mov
fmuls
push
and
jne
mov
xchg
leave
in
fdivrs
pop
scas
aas
es
cwtl
cmp
mov
jnp
fsts
mov
insl
popa
jne
inc
test
sti
movsl
jge
mov
pop
ret
daa
mov
xlat
mov
cmp
imul
mov
aas
orb
aad
xchg
mull
insb
push
iret
jbe
lret
xlat
clc
pop
arpl
jge
mov
xor
iret
cmp
clc
int
pop
movsl
jo
ljmp
popa
mov
push
xchg
repz
enter
jns
outsl
cwtl
movsb
mov
xlat
xchg
dec
in
sarb
xor
fstp
sbbl
int3
pusha
pop
in
or
mov
cmpsb
mov
xor
pop
xchg
cld
cwtl
movsb
aam
frstor
cmc
nop
fdiv
pop
mov
push
inc
aas
sub
add
adc
pop
inc
int3
add
sub
pushf
test
ret
or
loope
and
mov
enter
jg
ror
xor
test
jle
push
push
xchg
cmp
sbb
xor
stos
mov
ds
jl
adc
xchg
sbbl
pop
sti
sahf
fs
or
xchg
popa
pop
sahf
push
nop
hlt
gs
shll
add
insb
and
lods
xchg
test
insb
lods
jl
cs
cmp
stos
and
jmp
xlat
xlat
dec
add
mov
js
and
or
mov
mov
call
pop
daa
jbe
shrb
sub
rcrb
repz
out
fstpl
enter
adc
xchg
mov
nop
int3
mov
push
mov
pop
call
inc
cmp
data16
jecxz
mov
lds
subl
jnp
idiv
sbb
sbb
dec
sbb
mov
adc
lods
jmp
pop
movsb
test
mov
cmp
jo
push
push
outsl
loop
mov
mov
in
out
movsb
insb
jp
cmp
pop
int
adc
scas
in
inc
aad
pop
dec
cld
mov
stc
adc
int
pop
cltd
mov
ja
cmp
mov
popf
je
out
call
call
xor
sub
mov
sub
es
mov
dec
rcrl
mov
insb
and
xchg
subb
mov
lahf
mov
xchg
call
cmove
dec
jo
inc
adc
or
or
jle
jle
cmp
cmp
loope
rcrl
jbe
mov
sarb
cwtl
subb
mov
cmp
je
sbb
loopne
dec
sbb
mov
jae
dec
ljmp
cmp
loop
dec
loop
pop
andb
out
inc
in
fdivs
sar
add
cmpsl
add
sub
ret
ja
faddl
imul
bound
sbb
in
test
icebp
outsl
cld
adc
aas
dec
jns
dec
or
loope
lcall
repnz
inc
add
and
dec
stc
testl
jmp
mov
lea
sub
mov
jo
xor
push
cmpsb
pop
popf
hlt
add
cwtl
jb
fcmovb
pop
xor
pop
xrelease
ljmp
xchg
inc
ss
lock
xchg
adc
mov
mov
cmp
mov
andb
lock
jl
aaa
dec
inc
cmc
xchg
aas
insb
mov
test
pop
xchg
test
push
pop
sbb
jb
or
mov
in
or
adcb
js
sbb
adc
pop
sbb
dec
pop
ja
push
ret
sbb
xchg
aaa
pusha
shrd
inc
and
cmc
inc
fistps
or
push
or
subl
push
enter
into
dec
sub
mov
ja
inc
add
clc
and
inc
push
outsb
inc
jl
pop
dec
cli
xor
mov
lret
mov
or
cmp
mov
mov
sti
jae
xchg
cmp
adc
jg
imul
bound
es
inc
and
aad
jl
lods
popf
push
enter
sti
cmp
xchg
ret
shlb
je
repz
movsl
fcomps
mov
rcrb
jg
mov
test
mov
jbe
nop
sahf
jge
pop
and
sbb
pop
push
in
sbbl
out
leave
jge
mov
mov
ret
cmpb
jp
jo
jns
dec
mov
out
inc
mov
and
negl
les
sbb
fidivl
pop
mov
mov
clc
cmpsl
out
test
aad
adc
in
dec
movsl
xor
shll
mov
jb,pt
je
ret
push
stc
jmp
xor
notl
pop
data16
fwait
cmpsb
aaa
sub
push
jnp
sub
and
xchg
xchg
inc
shrl
xchg
iret
pop
in
out
pop
inc
insb
mov
pop
push
jns
mov
sub
popf
addr16
xor
test
cmp
lods
and
xor
add
sub
fmuls
add
mov
gs
lahf
cs
popf
mov
pusha
adc
sahf
cli
dec
push
fwait
pop
mov
mov
lock
and
xor
cmp
inc
lea
dec
out
cmp
pop
bnd
rclb
mov
sbb
push
cmp
loopne
ffree
stc
pusha
cs
aam
mov
jecxz
test
add
mov
mov
mov
cmpsl
femms
inc
enter
pushf
data16
adc
mov
lods
cmp
sti
or
je
call
int3
hlt
loop
jl
lds
inc
jnp
sbb
sbb
jbe
loopne
sbb
inc
mov
jbe
jnp
adc
inc
mov
cwtl
xor
loopne
jge
lods
and
mov
sub
cmpb
mov
pop
stc
sub
cmc
mov
dec
pop
xchg
ds
push
push
mov
mov
push
out
mov
pop
add
shrl
loopne
pop
and
loope
cmp
add
mov
add
enter
adc
repz
cmp
or
mov
inc
rcrl
shrb
push
sbb
or
sub
pop
in
sbb
stos
or
pusha
stc
sbb
jmp
cmpsl
push
dec
les
pop
mov
inc
dec
adc
dec
mov
outsb
stos
sub
jne
ja
sub
or
stos
add
dec
ficoms
cld
or
cmp
push
xchg
in
add
dec
inc
std
lods
push
pop
cmp
inc
adcl
mov
push
sbb
mov
addr16
cmpb
adc
mov
fs
add
call
aad
mov
mov
xlat
ss
push
pop
push
jg
ficoml
sub
jne
invd
sti
mov
je
fmull
lock
ret
popa
or
iret
cs
jl
jo
xchg
inc
shll
mov
xor
stos
cld
test
pop
push
add
sbb
in
dec
mov
addr16
push
cmp
dec
mov
push
lods
sub
pop
jecxz
add
or
xor
inc
ljmp
stos
lods
push
cmp
test
pop
testl
icebp
loop
pop
lcall
in
mov
int3
push
imul
subl
inc
es
addr16
js
pop
imulb
mov
inc
mov
rcrl
cmpsl
xchg
inc
sub
adc
push
push
in
xchg
in
aas
out
xor
push
ret
mov
aas
cmpsl
das
sub
out
and
pop
sub
popa
les
imul
pop
mov
mov
and
cmp
mov
or
push
mov
sti
dec
fwait
aas
ffree
jbe
cld
adc
sarb
aam
out
movsb
dec
cmp
dec
je
sub
mov
loopne
fildl
std
cmp
jo
paddq
inc
mov
pop
loop
dec
push
or
add
add
mov
sub
fiadds
jbe
mov
pop
shlb
cs
mov
and
js
in
pop
jecxz
ljmp
loopne
add
popa
in
sbb
cmpsb
fidivl
pusha
mov
aam
out
lcall
nop
add
mov
insb
out
lahf
cmp
fwait
jno
inc
lods
sub
push
call
jae
mov
in
call
shrl
dec
les
and
mov
mov
sbb
fsubrl
sbb
sub
xlat
lret
xchg
or
xchg
push
jb
loope
jl
stc
mov
mov
dec
insb
rclb
push
and
outsb
int3
fsubs
cwtl
ret
and
pop
aam
aaa
adc
cmp
sbb
inc
xchg
stos
push
repz
jp
int
xchg
sub
push
lea
and
bound
scas
lcall
lock
xchg
ljmp
out
call
pop
mov
push
fdivs
hlt
loopne
imul
cs
jb
jns
loope
xchg
push
orb
jg
sbbl
mov
and
or
lods
lds
outsl
arpl
packssdw
stos
insl
loopne
inc
ret
inc
fisubrs
or
leave
mov
je
pop
cltd
leave
inc
or
jne
popl
xor
mov
cmp
lds
inc
cmp
bound
mov
dec
mov
xor
imul
adc
repnz
scas
mov
scas
and
adc
out
push
in
faddl
mov
dec
pop
jo
and
sahf
push
push
sbb
stos
or
cmc
scas
fdivrl
add
daa
repz
jmp
pop
xlat
popl
cli
ret
sbb
pop
mov
xchg
fimull
push
xchg
dec
sbb
cltd
lret
lds
jno
or
add
jge
push
sub
pop
in
push
lret
inc
xlat
je
push
lret
popa
icebp
mov
sub
sbb
add
xor
test
xchg
pop
loop
test
mov
fistl
or
mov
andb
mov
stos
push
sbbb
test
inc
or
cmp
dec
pop
inc
and
cmp
addr16
lret
negb
movsl
cmp
jg
push
sub
mull
es
mov
daa
shr
arpl
stc
repnz
cltd
jg
cltd
nop
stos
insb
call
add
les
bound
addl
mov
mov
xchg
jmp
jae
js
test
xor
push
cmp
lret
jb
ja
or
dec
lods
mov
scas
stos
lea
push
pop
sub
imul
pop
pop
es
pop
and
inc
repz
lock
xor
mov
xor
or
incb
pop
cltd
adc
and
mov
rol
test
pop
js
jmp
scas
movsb
jp
adc
loope
sbb
jne
cmpsb
sbb
push
je
sahf
jns
lcall
daa
adc
fs
push
decb
movsl
rcrb
nop
out
push
sub
sarb
lods
mov
and
jmp
rcll
mov
out
adc
inc
adc
out
xor
mov
inc
mov
pop
push
xor
xor
add
pop
insb
int
loop
inc
rclb
sub
jb
es
sti
mov
cwtl
cmpsl
mov
mov
cmp
test
pushl
or
cmpsb
sarl
test
in
ss
fdiv
and
test
fcomp
clc
loop
je
jg
fs
jo
and
fsubrp
mov
or
cltd
imul
pop
sub
dec
pop
add
ror
fidivs
mov
mov
mov
cmp
aad
pop
push
jno
pop
push
mov
repnz
mov
subl
negb
imul
and
pop
fcmovnb
mov
lods
inc
xor
loope
xchg
dec
pop
ja
adc
shll
in
lahf
daa
add
sbb
adc
lds
xchg
push
out
pushl
imull
aas
sahf
rol
fs
call
dec
or
out
testb
shr
sub
xor
jge
lea
stos
cld
stc
sub
imul
jo
jo
and
out
pop
and
cs
orb
sti
sbb
or
sbb
lret
sarl
arpl
pop
or
and
and
cmp
fisubrs
movb
outsb
je
fwait
aas
out
out
adc
fdivl
lcall
cwtl
movsb
pop
jle
xor
jmp
push
mov
sbb
test
lret
icebp
jg
pop
mov
aam
jne
scas
adc
pop
sub
jne
popf
rolb
xchg
jl
sub
inc
repnz
mov
and
pop
and
sbb
sbb
mov
push
ljmp
pop
adc
popa
xor
pop
aam
repnz
out
push
aaa
lret
or
jne
lahf
jno
stos
xchg
pop
jle
insl
lret
mov
stc
notl
repz
loopne
mov
fmul
lods
jmp
xor
cmpsb
sub
push
jae
cwtl
mov
addl
popf
aad
sti
stos
inc
stos
dec
xlat
and
sahf
mov
cltd
movsl
sub
xchg
xchg
push
jne
inc
ss
and
mov
pop
sub
xchg
jle
repz
fidivl
push
fwait
es
cld
push
sub
pusha
sbb
sbb
pushf
lea
mov
sarl
aam
negl
and
push
adc
mov
lahf
sbbl
fimuls
mov
popf
dec
push
ljmp
insl
sbb
xor
pop
aaa
sbb
ret
stos
int3
aad
and
or
jae
adc
sbb
rol
les
cmc
cmp
enter
clc
mov
jne
imul
orb
lahf
scas
jae
dec
adc
pop
aas
cmp
movsl
fildl
outsl
pop
in
imul
scas
adc
call
cmpsb
mov
sti
test
in
dec
sbb
pop
insb
icebp
mov
les
loopne
lds
out
lret
imul
inc
repnz
and
and
xchg
loopne
xchg
lret
mov
push
scas
cltd
mov
stos
and
xchg
pop
aaa
or
sub
faddl
and
inc
addb
xor
pop
mov
and
fmull
sub
xor
nop
leave
lock
arpl
lea
adc
stos
push
xor
adc
fmuls
cmc
xor
cmc
pop
mov
lcall
ja
jae
and
push
ret
sbbl
pop
inc
fdivrs
and
sbb
push
fidivs
add
adc
mov
xchg
pop
sti
aam
jno
sbb
add
mov
xor
mov
sbb
dec
lret
jnp
push
popf
sbbl
xor
adc
add
in
jmp
sbb
cmpsl
out
mov
lcall
mov
push
sbb
clc
push
push
dec
jb
out
and
std
mulb
mov
roll
test
mov
shlb
scas
dec
inc
inc
pop
std
sbb
mov
mov
cmp
jl
ljmp
or
adc
jp
dec
cmp
add
xchg
js
add
ljmp
jo
and
xor
les
push
fwait
leave
push
inc
xor
ljmp
and
lods
inc
pop
xor
loope
push
adc
lahf
or
ror
dec
scas
sub
gs
scas
jp
push
jb
daa
pop
adc
add
loopne
sub
inc
daa
add
add
out
insl
jbe
xor
outsl
cmp
mov
enter
cwtl
adc
pop
std
xchg
mov
ja
cmp
xchg
addr16
shll
in
mov
sahf
cmp
add
inc
arpl
xor
inc
add
xor
jnp
test
out
pop
mov
mov
sub
fldcw
fcmovbe
sub
into
cmp
jbe
mov
shrl
cmpsb
mov
sbb
inc
sti
push
xchg
call
arpl
outsl
xchg
lret
xchg
aam
xchg
jbe
stc
pop
frstor
mov
insl
mov
enter
xor
dec
mov
leave
in
pop
cmp
rol
imul
rorl
fwait
aaa
testl
mov
sbb
mov
inc
fcmovnbe
mov
sbb
and
mov
mov
stos
aas
pop
dec
and
add
jne
in
rorl
xchg
mov
data16
fimuls
or
cltd
xchg
and
popa
mov
test
addr16
mov
jmp
sub
insb
roll
mov
loopne
adc
mov
cltd
test
jmp
addr16
cmp
mov
test
jmp
add
out
pushf
mov
pop
std
dec
sbb
in
cmp
adc
and
jmp
cmp
rclb
pop
cmpsb
pop
xchg
jbe
mov
adc
outsb
fs
subl
push
pop
shl
cmp
mov
push
jmp
imul
inc
mov
loop
ss
jecxz
mov
jne
inc
pusha
and
addr16
pop
mov
aas
jns
roll
mov
repz
pop
xchg
repz
push
jp
pop
fnsave
sbb
mov
xor
cld
shrl
aam
pop
sub
inc
mov
mov
fcmovb
test
loopne
rcl
xchg
add
aaa
in
je
xchg
stos
add
sbb
paddq
jge
and
jb
sbb
jb
sub
addb
cmp
test
hlt
pop
bound
dec
in
push
or
mov
jp
ljmp
push
jmp
test
xchg
mov
dec
mov
popa
sbb
xor
add
push
std
cmp
jmp
xchg
and
pop
add
cs
sub
mov
test
into
mov
stos
pop
int3
stc
in
dec
inc
scas
test
mov
test
pop
xor
or
or
and
lea
shlb
pop
ss
sub
and
fadds
aam
add
cmp
add
insb
lea
stos
addr16
aam
jp,pn
lret
adc
dec
ljmp
addr16
lds
cmpsb
cld
les
scas
inc
sahf
cmp
testl
mov
cmc
jmp
push
inc
dec
popf
bound
and
sub
in
cltd
movsb
out
repnz
adc
jge
les
cmp
popa
hlt
lret
mov
mov
jb
add
sbb
xor
test
int
int3
shl
sahf
xchg
insb
or
pop
lea
mov
push
add
insl
inc
push
lret
inc
jge
jae
repz
mov
mov
jle
xchg
dec
stos
or
fs
movsl
mov
sub
adc
add
lcall
fsubrs
jge
push
push
mov
jbe
pop
jg
mov
mov
mov
mov
popf
lds
sarl
pusha
outsl
shl
mov
mov
or
movsb
sbb
in
inc
sub
mov
loope
cmc
jae
pushf
addr16
mov
das
pop
inc
jl
mov
sub
into
and
adc
andb
push
rcll
mov
test
ret
shlb
dec
pusha
fistpl
lcall
cli
push
mov
jge
xchg
popf
das
dec
jns
push
sbb
bnd
out
push
js
jns
sbb
or
shlb
cmpsb
jb
xchg
sbb
and
inc
loop
or
je
mov
cwtl
or
popa
clc
jp
mov
push
xchg
dec
in
test
lret
mov
std
shlb
outsb
push
enter
dec
push
sbb
sbb
sub
ds
mov
mov
add
sbb
inc
xchg
in
test
ret
fistpl
shll
adc
lahf
jne
dec
cld
bswap
pop
fsub
inc
mov
repnz
enter
iret
pop
push
inc
imull
mov
into
pop
mov
sbb
mov
push
jnp
stos
adc
mov
hlt
aam
out
cmpb
dec
xor
daa
daa
xchg
dec
pop
nop
or
fidivrl
insl
insl
pusha
or
add
lahf
dec
push
mov
adc
popa
xor
sti
pop
and
or
jg
shlb
ret
pop
sub
ja
mov
jne
ja
nop
xchg
sub
stos
mov
and
xchg
sbb
mov
aas
mov
iret
xor
mov
je
xchg
cmp
mov
xchg
das
ja
popa
pop
jl
push
je
lea
shrl
xorb
jle
mov
cmpsb
frstor
jno
inc
cmp
int3
sti
mov
pop
push
pop
xlat
jbe
jo
dec
dec
aaa
mov
pop
scas
fimuls
hlt
test
push
lds
loop
add
loopw
ljmp
push
int3
inc
xlat
dec
hlt
mov
mov
inc
fisttpll
outsb
cmp
aaa
mov
jge
enter
stos
ljmp
xchg
adc
into
pop
sub
mov
insb
das
test
divl
jno
inc
stos
dec
ret
and
cli
lock
or
and
jbe
ljmp
cmc
rorl
add
adcl
sti
inc
addr16
scas
xor
and
sbb
test
jns
cmp
add
jno
pop
xor
into
adc
stc
sbb
xor
test
movsb
pop
or
cltd
cli
outsb
dec
adc
lds
inc
outsb
jmp
jge
lahf
fstpl
cmpsl
scas
je
mov
add
sub
inc
hlt
out
clc
pop
mov
cltd
xchg
push
cld
or
adcl
mov
sbb
sbb
and
dec
fildll
lret
dec
sti
pusha
mov
mov
bound
subl
mov
xchg
mov
jl
pop
inc
in
clc
rorl
fwait
push
shrb
imulb
mov
cld
popf
std
mov
sub
mov
stos
xor
lds
adc
jno
xchg
sub
or
fmull
dec
gs
adc
imul
cmc
pop
inc
dec
mov
scas
and
lods
pop
sub
adc
mov
pushf
push
sbb
inc
push
add
push
out
leave
pop
add
mov
stos
sub
in
daa
or
jge
lret
decl
movsb
sbb
sbb
cmp
outsl
mov
mov
cwtl
shll
clc
mov
jmp
in
cltd
jbe
pusha
cmp
xor
data16
mov
mov
xchg
loope
daa
lret
cmpsb
imul
es
shll
jmp
outsl
sub
inc
out
or
pop
test
sub
add
pop
imulb
popa
popl
jecxz
roll
imul
dec
sub
push
sbb
mov
dec
scas
imul
aad
pop
cmp
mov
ja
mov
sub
mov
adc
cmp
push
xor
sub
outsl
les
repz
xchg
int3
jne
inc
test
pusha
inc
in
mov
and
imul
out
mov
sbb
xor
add
xchg
test
add
xchg
ljmp
mov
pop
lds
repnz
adcl
xor
daa
or
aad
dec
xchg
lods
fwait
sbb
iret
jno
scas
mov
in
inc
adc
into
add
jns
leave
je
mov
push
stos
sbb
and
add
push
jo
xor
into
loop
mov
jns
dec
jle
dec
mov
or
stos
push
cld
into
mov
out
sub
rorb
pop
fsubrs
addr16
stos
xlat
cmp
aad
sbb
xor
xor
dec
cli
outsl
jp
enter
shll
fimull
shll
mov
add
mov
sbb
jp
mov
imul
and
push
mov
xor
mov
xchg
ds
mov
scas
hlt
shlb
push
sahf
mov
push
sbb
sub
mov
xchg
dec
xchg
pusha
out
dec
mov
mov
lret
cmc
xchg
lds
ljmp
loop
pop
and
cli
mov
xchg
bound
movsl
repz
aaa
mov
imul
clc
sub
jno
pushf
mov
push
jo
xor
push
imul
xchg
mov
inc
and
inc
xchg
inc
pusha
xchg
mov
stos
jnp
ja
scas
inc
push
adc
add
popf
aas
ljmp
call
push
cld
or
dec
out
inc
das
outsb
call
and
les
in
mov
int3
int
adcl
xorb
jbe
sub
stos
xor
lds
xchg
fisubrs
xor
pop
into
orb
and
pop
imul
or
repnz
inc
mov
xchg
push
andb
fs
pop
push
ss
jno
inc
andb
xor
jle
push
cwtl
popf
mov
rorb
pop
andb
fwait
sbbl
mov
jb
xchg
subb
mov
repz
dec
or
loope
xchg
pop
cmpsb
adc
dec
adc
or
fdivl
je
aam
adc
pop
in
mull
bound
mov
shll
pop
or
cmp
aaa
loope
sarl
dec
adc
jl
mov
jl
fcoms
or
std
jecxz
xor
scas
fwait
push
sbb
inc
push
mov
jnp
data16
and
adc
xchg
cld
jnp
pushf
repnz
insb
xchg
push
add
fadd
pop
cmp
mov
daa
and
push
jle
sbb
icebp
sbb
vmovapd
jecxz
mov
jb
mov
fdivp
or
cmc
lahf
test
aad
stos
decl
shlb
inc
rclb
push
cmp
mov
js
mov
or
stc
jmp
jae
mov
pop
and
shl
jge
cmp
insl
mov
xchg
mov
or
jle
push
data16
mov
xor
push
imul
pop
out
fnstcw
test
mov
sahf
jne
pusha
nop
je
divl
adc
repz
xchg
pop
call
aaa
fstpl
loopne
in
add
xchg
out
push
cwtl
and
cld
bound
aas
mov
js
lods
iret
jno
push
les
xorl
dec
arpl
aad
mov
outsb
fsubrs
mov
add
into
iret
in
lret
je
mov
xor
mov
push
popf
mov
cmp
inc
sub
xor
pop
xchg
cmp
xchg
mov
jo
lret
test
inc
popf
push
outsl
adc
lds
adc
xchg
dec
leave
out
sbb
jne
fidivrs
xor
jmp
mov
add
insb
xchg
xor
test
hlt
sub
cmpsl
aaa
jp
xchg
into
andb
sti
inc
lea
in
int
sub
pop
into
dec
mov
es
popf
jmp
fst
jg
xchg
adc
cmp
jne
addb
push
aam
push
out
push
cmp
decb
mov
jle
loopne
repz
mov
lods
in
je
push
adc
sbb
mov
mov
xor
and
in
fucomp
mov
insb
mov
jg
pop
inc
in
aaa
imul
pushf
pop
orb
cli
xchg
insl
popf
jg
sbb
mov
push
jmp
ja
mov
xor
in
data16
xchg
cmpl
sar
sahf
and
lock
xor
int
pushf
rolb
jo
lcall
int
mov
and
ret
call
lcall
loopne
jecxz
flds
jle
sub
ret
outsl
xchg
out
fldt
push
adc
dec
aas
inc
sub
pop
ret
dec
cs
sub
sub
pusha
cwtl
stos
cmp
aas
loop
jge
mov
das
jbe
xor
jp
cltd
mov
inc
popf
inc
aam
ret
sti
mov
mov
push
fdivp
mov
sbb
test
push
arpl
in
mov
jb
fistl
pusha
iret
push
cmp
ljmp
cmp
aad
jmp
sahf
push
xchg
cld
cwtl
imul
and
jle
add
xchg
mov
adc
arpl
stos
cmp
sbb
push
nop
sbb
sub
imul
filds
pop
xchg
scas
pop
pop
sub
call
call
ljmp
or
imul
jb
jp
dec
inc
add
adc
push
clc
lock
mov
into
jbe
mov
sbb
jnp
or
adc
lock
les
test
js
pop
ljmp
mov
push
cmp
mov
rol
and
xchg
cltd
cmp
pop
in
negl
cwtl
pop
es
leave
insl
xor
call
xchg
inc
and
int
and
xorb
add
out
inc
leave
xchg
pop
shl
stos
ret
addr16
jb
adc
push
test
dec
add
push
xchg
lock
mov
cmp
or
ficompl
or
pop
jae
subb
xchg
or
nop
adc
jg
adc
adcb
dec
out
inc
pop
adc
incb
xor
cmp
movsl
push
stos
fcmovnu
push
loop
jl
mov
push
jae
lods
aaa
cwtl
adc
sti
arpl
xchg
inc
scas
lock
fmulp
pop
dec
lret
loop
hlt
rcrl
js
filds
mov
gs
leave
cs
inc
cwtl
xchg
in
xlat
shll
pop
push
mov
mov
adc
cmc
pop
inc
fnstcw
cmpsl
dec
mov
mov
ss
sbb
shll
push
test
add
sub
ret
or
addr16
mov
xorb
insl
fsubp
mov
mov
inc
pop
test
insb
add
pop
call
push
mov
out
adc
ret
ror
and
push
std
xor
clc
fmuls
fisubrs
pusha
fsubs
fcoms
fnstcw
jo
push
pop
pop
adc
leave
not
lret
das
mov
push
adc
ss
add
icebp
dec
stos
and
in
jge
or
mov
xchg
pop
fwait
sti
enter
inc
test
sbb
pop
fnsave
dec
and
push
and
dec
aaa
mov
mov
xor
pop
scas
jno
out
inc
cmp
lahf
xor
jno
and
lds
mov
dec
push
incl
fmuls
sub
adc
push
sub
mov
jo
imul
mov
jecxz
inc
add
lcall
adc
out
add
clc
pop
js
mov
adc
add
xchg
lock
push
outsl
pop
and
hlt
and
aad
push
out
inc
pop
adc
push
mov
xor
jge
fimuls
xor
sub
rolb
mov
fdivr
scas
stos
movsl
cmp
ds
sarb
jl
cmpsb
push
adc
clc
stos
inc
test
movsb
pusha
pop
inc
es
imul
loop
test
mov
clc
mov
push
cld
jbe
pop
sti
int3
into
cmp
mov
js
aas
shl
and
push
lahf
xchg
add
sarl
repz
js
sti
inc
sbb
mov
lock
data16
adc
mov
mov
div
pop
call
cli
dec
sub
lds
xchg
test
adc
adc
shll
daa
jae
jg
or
nop
scas
adc
std
jo
enter
mov
xchg
ja
rcrl
cmc
sub
jae
addb
dec
xchg
mov
aad
sbb
inc
or
jns
push
into
jnp
bound
stos
int
sti
gs
cmp
je
push
sub
push
xchg
call
les
pop
imul
rcll
xlat
sbb
ret
inc
jo
push
sbb
fadd
in
push
mov
push
adc
or
ds
inc
bound
stc
adc
ss
cltd
out
cmp
push
adc
std
add
lret
push
fimull
dec
subb
sti
xor
jmp
xchg
int
sbb
or
pop
mov
add
push
mov
fs
clc
mov
push
fnstenv
pop
fcoml
leave
dec
into
xchg
test
insb
dec
sbb
scas
push
test
sbb
jmp
ret
stos
pop
xchg
push
mov
sbb
test
ds
insb
mov
ret
fsubs
jbe
gs
outsb
xchg
dec
inc
fadds
testb
mov
out
and
loope
xor
push
stos
fisubrl
js
popa
sbb
sbb
sarl
mov
jbe
mov
out
daa
lcall
pushf
sbb
pushf
popf
lods
shlb
dec
shll
pop
adc
and
mov
js
and
imul
pop
out
mov
or
mov
fisttps
or
cmpsl
lock
popa
mov
outsb
cmp
outsl
test
mov
lret
fsubrs
pop
scas
shlb
icebp
mov
pop
or
sub
ds
inc
roll
ret
insb
or
xchg
ss
aad
addr16
xchg
mov
mov
cli
mov
adc
or
jmp
repnz
repnz
jmp
push
test
jo
push
addr16
push
pop
dec
jno
call
ds
fdivs
mov
or
test
rcrl
mov
jmp
and
add
sahf
aaa
into
mov
mov
shrb
add
push
cmp
push
cmp
std
daa
les
mov
dec
pop
adc
cltd
xchg
mov
jecxz
mov
in
movsb
call
addl
mov
clc
ficoms
xor
inc
lahf
pop
xor
jae
jl
push
lahf
inc
add
repnz
push
mov
arpl
mov
movsl
jp
or
xchg
pop
mov
test
xchg
mov
xchg
mov
cmp
nop
mov
cmp
outsb
lahf
leave
ja
mov
cltd
inc
enter
mov
adcb
xchg
mov
jp
jbe
loope
mov
mov
in
push
fisubl
fstp
in
jae
sub
ljmp
or
mov
push
cmc
lahf
mov
sahf
jo
enter
fcompl
les
jno
ja
push
out
or
int3
mov
hlt
jge
outsl
pusha
nop
and
aas
insl
mov
mov
and
icebp
cmp
mov
push
mov
or
push
mov
shr
inc
cs
dec
add
xchg
cmpsl
push
push
xchg
arpl
lcall
or
push
mov
fcomps
adc
inc
push
jno
imul
aad
test
sarl
mov
loop
push
push
movsl
lahf
mov
xchg
clc
shl
fwait
lea
out
xor
mov
and
xchg
hlt
sub
dec
test
loope
aam
mov
push
ret
adc
dec
dec
sti
push
jge
rorb
addr16
mov
jae
fwait
inc
mov
inc
inc
addr16
jl
in
xchg
imul
pop
popa
nop
loopne
sahf
sbb
and
insl
out
outsl
aad
and
cmpb
xor
insl
cmp
test
insl
sub
or
add
imul
fildl
xchg
mov
or
or
int3
add
jl
jno
inc
push
arpl
popa
test
pusha
push
sbb
fwait
aaa
jecxz
ret
mov
nop
jns
cmp
add
loop
pop
push
add
cmp
in
mov
sbb
aam
repz
outsl
orl
pop
das
std
shlb
mov
jl
lds
jg
cmp
call
daa
cld
or
mov
rcrl
pop
div
movsl
mov
xorl
lret
jne
fs
mov
imul
cmpsl
mov
mov
addl
jo
cmpsb
jmp
xor
sbb
cmp
cmpsb
sbb
idivb
mov
xchg
in
sub
jb
add
lret
mov
xor
add
sbb
pop
mov
out
ds
cmc
stos
in
pop
pop
call
sub
cwtl
ljmp
jle
int3
fsubl
jl
js
adc
push
fcoml
test
std
push
idiv
or
sub
frstor
xlat
lds
test
std
xchg
loop
fld
in
mov
mov
add
push
sub
popa
fisttpll
mov
xchg
push
and
test
gs
cmp
shll
cltd
push
cwtl
dec
push
fiadds
push
pusha
push
test
ljmp
jne
mov
repnz
xor
mov
mov
mov
jne
pop
mov
add
stos
pop
or
sbb
add
or
cli
add
fistpl
jae
movsl
cmp
sbb
xchg
mov
inc
jle
mov
push
ud0
nop
ljmp
cmpsb
clc
mov
and
movsb
jnp
rcrl
repz
cmp
loopne
push
cs
xor
pop
test
pop
and
inc
lea
lds
incb
test
mov
inc
mov
push
cs
bswap
cmc
subl
xchg
dec
mov
fbld
push
push
add
enter
mov
jmp
add
jne
lds
test
inc
add
flds
cwtl
jno
sub
push
adc
sbb
adc
and
int3
call
shlb
out
adc
aaa
adc
pushf
clc
dec
jo
lahf
sbb
iret
testb
and
pop
lahf
cmc
sub
and
jge
jne
cli
idivl
loop
test
push
mov
push
lds
push
xchg
das
xchg
loop
aas
push
movsb
xchg
rcrb
movsl
or
clc
mov
xchg
rolb
mov
mov
add
jbe
gs
out
in
lods
add
push
push
inc
fldt
inc
adc
cmpsl
mov
or
mov
jne
mov
xor
cmp
jge
sub
adc
fisttpl
daa
lock
xlat
push
jae
xchg
fists
sub
out
pop
and
push
out
push
leave
es
lcall
aad
xchg
and
mov
pop
rcrl
outsb
inc
inc
add
cmpsb
xchg
mov
push
or
data16
rcll
lock
cwtl
iret
repnz
pop
mov
mov
push
mov
push
repnz
adc
cld
push
mov
sbb
clc
and
dec
scas
ljmp
mov
fsubrl
outsb
xchg
sahf
mov
js
mov
add
and
xchg
dec
fucom
xchg
lcall
or
insl
out
mov
sbb
jne
xor
mov
into
fisubl
xor
cmpb
xchg
cmpsl
xor
inc
testl
jb
or
add
out
mov
pop
jnp
out
xchg
fcoms
xor
ja
mov
mov
je
int
out
dec
add
or
daa
gs
xlat
lods
inc
xor
or
cld
mov
pushf
cmpb
mov
push
jmp
pop
push
pop
cmp
sbb
div
imul
mov
mov
mov
sbb
mov
and
add
dec
pop
sbb
outsb
movsl
outsl
xor
js
dec
jno
adc
cmpsb
add
adc
push
fistpl
ds
hlt
sub
inc
xchg
pushf
sbb
ds
ljmp
enter
mov
sbb
lret
mov
jge
call
mov
jg
mov
icebp
addl
pop
lret
cmp
dec
xchg
push
fisubs
cmp
inc
xchg
sbb
xlat
lds
jle
mov
xor
test
inc
push
clc
mov
dec
mov
mov
rcrb
scas
insb
insl
xchg
subb
or
nop
fsubs
out
fwait
mov
fildl
sub
and
fists
loopne
mov
cmp
pop
in
cmc
dec
neg
orb
aad
add
mov
mov
sbb
push
mov
cmp
and
xor
and
pop
dec
or
mov
mov
int
sbb
sbb
jb,pn
jp
cmpsl
sub
and
clc
out
jmp
sbb
add
xor
aad
jns
mov
mov
adc
mov
hlt
addr16
cwtl
and
dec
sub
and
mov
popw
insl
and
lret
dec
stc
xor
mov
inc
out
push
push
mov
jo
movsb
addr16
push
mov
adc
inc
dec
popf
int
scas
repnz
or
cld
pop
mov
and
loopne
cmp
jge
cld
insl
fisubrl
rorl
xor
cmp
les
or
inc
das
movsl
or
xchg
mov
in
notb
gs
mov
enter
mov
inc
inc
cmp
fisubl
xor
fs
push
pop
cmc
sbb
les
and
adc
xor
xchg
cmpsl
sbb
fcoms
daa
xor
mov
push
lods
sbb
jnp
pop
jmp
das
jg
rclb
xor
imul
dec
lock
dec
dec
dec
mov
fsubrs
pop
add
and
rorb
xor
add
pop
sub
or
adc
mov
mov
insb
dec
leave
dec
int3
sub
data16
mov
dec
out
and
inc
mov
pop
mov
clc
mov
imul
ss
pop
xchg
jae
xor
inc
push
and
aam
xor
enter
les
sbb
push
movsb
scas
jbe
xlat
enter
dec
push
jbe,pn
data16
inc
aad
sti
xchg
cwtl
jge
mov
hlt
mull
mov
lretw
push
cld
addr16
mov
adc
daa
scas
cmp
push
adc
shl
xor
or
mov
outsl
subl
repnz
and
repz
divl
jecxz
fisubrs
rorb
notl
cltd
adc
sbb
pop
enter
in
mov
cmp
out
mov
sub
je
inc
pop
jo
pop
pop
movsl
dec
dec
push
cli
mov
jecxz
mov
rclb
in
enter
jae
sub
cmp
rolb
mulb
inc
cmp
sahf
xchg
xor
mov
in
cmp
push
pop
enter
popf
adc
cltd
aas
sarl
pop
add
shr
inc
repz
in
lds
cli
fwait
in
popa
and
jp
imul
xor
pushf
cltd
xor
dec
aas
push
popf
imul
ds
cmp
dec
ret
test
jl
mov
sbb
stos
xor
pop
sbb
pop
adc
xchg
sbb
add
xchg
and
xlat
xchg
dec
or
dec
lods
mov
dec
lock
out
or
repz
imul
dec
add
xorl
pop
add
jle
test
adc
add
mov
data16
out
pop
pop
cld
in
push
rcll
xor
mov
dec
mov
add
push
sbb
pushf
pop
push
or
imul
jae
xor
jmp
repz
dec
call
mov
mov
clc
in
push
adc
push
cld
test
cmp
gs
hlt
push
mov
out
adc
and
call
popa
or
mov
stc
jno
and
enter
out
fldt
shlb
pop
jo
jnp
out
push
sahf
bound
add
inc
push
dec
and
adc
mov
dec
aas
xchg
ret
inc
adc
mov
gs
fcoms
adc
cli
mov
xor
cmp
xor
lea
ja
rclb
mov
sbb
arpl
xchg
and
add
orb
mov
cmpsl
pusha
fucomp
sbb
cli
cli
jns
pop
pop
dec
push
or
fwait
push
jae
rolb
cmc
and
lret
xchg
jmp
sub
or
adc
mov
in
das
cltd
ret
fildl
mov
mov
ret
ljmp
mov
adc
pop
repnz
nop
xlat
pop
mov
dec
sub
pop
sbb
je
gs
scas
ret
jle
test
mov
mov
and
arpl
dec
sub
inc
adc
addr16
push
pop
sub
cli
out
mov
lock
pop
arpl
movsl
add
mov
inc
cmp
icebp
ror
pop
loop
cmpsb
push
pop
sbb
aas
loop
push
cmpsl
xor
arpl
mov
or
mov
cmp
lcall
in
xor
cmp
and
std
push
ffreep
lds
ret
mov
jbe
icebp
xchg
les
dec
mov
fsubrp
fadd
mov
xchg
sahf
jbe
adc
jo
insb
xchg
inc
pop
mov
mov
adc
call
xor
mov
pop
in
std
sbb
or
xlat
jmp
pusha
pop
mov
stos
add
les
outsb
xchg
lahf
ja
shll
sub
data16
cli
mov
mul
and
in
pushf
inc
shlb
nop
cld
push
sbb
jl
leave
je
add
fs
cwtl
out
jne
mov
mov
cmp
nop
inc
pop
sbb
outsb
xor
test
mov
lahf
mov
gs
cs
mov
rcrl
pop
aad
in
gs
pop
inc
push
jg
shll
push
jae
pop
cs
mov
xor
jnp
dec
ret
xchg
push
xchg
xor
jns
outsl
insl
test
loopne
lea
insl
xor
lcall
int3
dec
add
sbb
lock
push
lret
out
popf
sub
or
mov
idivl
dec
cmpsl
outsl
daa
pusha
push
aam
loope
jmp
popl
movsl
xchg
clc
outsl
adc
lcall
ficoms
fisubrs
mov
push
in
out
pop
pop
stos
xor
add
sbb
popf
xchg
adc
fwait
mov
pop
in
dec
push
jge
stc
jno
xor
push
ss
imul
xchg
or
mov
xor
jb
push
mov
fnstsw
cmp
add
pushf
fiadds
jmp
popf
xchg
aam
dec
push
cmp
and
popa
mov
pop
sub
inc
ja
outsb
or
cwtl
clc
dec
shlb
jle
push
out
ja
divb
repnz
mov
mov
pop
in
arpl
in
adcb
xchg
andl
adc
cmp
mov
imul
jp
les
shr
imul
scas
jmp
dec
mov
imul
rol
std
xor
mov
int3
and
xchg
mov
xchg
stos
test
xchg
pushf
int
sbb
sahf
adc
push
jle
test
fnstcw
inc
lahf
or
mov
push
sbb
es
fisttps
push
mov
cli
sub
test
fstl
hlt
pusha
and
xchg
jp
xchg
and
xchg
xor
xchg
cwtl
push
sub
in
inc
rcrb
scas
xor
cmp
insl
stos
test
ds
pop
iret
xor
fdivrl
iret
jle
gs
mov
lahf
push
test
mov
lret
insb
xchg
pop
stos
fnsave
call
mov
or
sbbl
daa
mov
ljmp
je
pop
fidivl
dec
int3
repnz
or
lahf
lock
stos
loopne
mov
mov
mov
pop
jp
push
loopne
push
jno
outsl
test
mov
xor
and
inc
cmpsb
mov
push
pop
pushf
xchg
push
push
lds
or
das
cmp
jecxz
insb
popa
imul
aam
mov
sbb
jno
push
sbb
mov
pop
je
add
pop
test
inc
insl
lods
xchg
mov
push
ficoml
xor
rorb
jl
mov
push
je
inc
pop
xchg
jecxz
das
ds
in
push
cmp
inc
lret
inc
jle
out
mov
xchg
loopne
mov
or
mov
fsubr
mov
mov
mov
inc
dec
mov
pop
nop
inc
dec
fsubrs
sbb
push
lods
mov
sbb
ss
cs
ss
jae
je
xor
jno
mov
js
inc
cmp
loopne
lret
cmp
test
nop
or
or
pop
mov
lret
xchg
shrl
inc
out
mov
adc
push
out
xchg
pop
insl
lock
push
repnz
fninit
sub
adc
in
sub
inc
insl
lret
dec
xor
sbb
andb
lock
xchg
xchg
ss
pop
push
and
lret
mov
dec
ret
push
dec
push
jg
add
dec
nop
jnp
jge
mov
push
gs
jns
cwtl
jns
mov
enter
rcr
cmp
es
mov
ja
bound
pushf
jns
and
stos
call
ficompl
mov
inc
dec
dec
mov
insb
xchg
adc
ljmp
imul
jbe
pop
incb
or
cmpsb
add
mov
or
mov
lahf
mov
notb
pop
pop
insb
popf
into
mov
ss
movsl
adcl
test
mov
shl
addr16
stos
xor
lods
cli
push
stos
sbbb
dec
add
out
cmp
pop
test
xor
mov
or
jmp
inc
stos
cltd
in
mov
rorb
sbb
adc
fwait
js
fsubrs
shrl
enter
and
or
lret
clc
mov
xlat
lea
sub
inc
mov
mov
push
push
bound
test
insl
mov
dec
jns
and
sbb
fsts
add
push
test
push
pop
lret
ds
pop
inc
ret
loop
mov
stos
add
repnz
dec
dec
and
jp
pop
into
hlt
icebp
out
nop
and
jnp
add
mov
in
aam
test
mov
jbe
pop
push
sti
add
xor
mov
xchg
movl
adc
cmp
pop
inc
iret
jne
sub
dec
sbb
iret
mov
push
push
sti
jl
fsubrl
mov
jns
sti
push
xor
add
test
dec
cmp
cltd
sub
ret
sti
aam
lret
xchg
xchg
sbb
add
std
std
iret
or
mov
outsb
insl
das
push
data16
test
fbstp
xor
xor
xorl
mov
jne
shr
pusha
push
xlat
add
xor
insb
push
outsl
sbb
jns
xor
xor
adc
sbb
dec
inc
push
sbb
pusha
mov
inc
sub
and
pop
mov
add
inc
cmp
imul
in
add
mov
pop
or
mov
cmc
in
pop
adc
xor
jl
sbb
fnsave
mov
sub
in
sbb
sub
push
cmpsl
and
jecxz
cmp
imul
or
cmp
adc
out
push
cmp
push
std
pop
loopne
ljmp
mov
mov
jmp
sarb
jae
loope
xlat
fs
mov
clc
inc
pushl
add
mov
cmp
scas
mov
or
xchg
out
lahf
jle
incb
cmp
sub
test
cmp
dec
or
out
nop
repz
gs
push
mov
mov
frstor
add
sbb
popa
push
addb
adc
mov
aaa
adc
call
lahf
sub
pop
sub
rcll
jns
jg
mov
sarb
in
sbb
fidivrl
out
lods
jne
mov
mov
ja
int
mov
stos
dec
sahf
mov
or
cmp
sbb
push
testb
cs
push
adc
fsubs
sbb
mov
int3
pushf
inc
call
xchg
xor
fs
mul
mov
add
scas
mov
repnz
dec
add
pop
push
arpl
es
lods
mov
aam
and
jg
movsb
cli
and
sahf
idivb
push
xchg
cmp
int3
sub
jge
jnp
cld
mov
mov
cmp
cmp
imul
and
shll
mov
add
repz
aad
packsswb
movsl
sbb
xor
push
addr16
lcall
gs
xor
push
out
out
in
into
daa
cmp
mov
xor
sbb
cli
and
xchg
in
orl
mov
aad
into
lahf
mov
jne
inc
lods
cltd
mov
cli
pushf
ret
or
enter
jne
inc
rcr
ror
sbb
icebp
mov
jno
sub
ljmp
cmpsl
fstpl
mov
movsl
sbb
in
push
negb
sub
sbb
adc
movsb
movsb
and
push
dec
push
sub
out
outsl
rorl
adc
jne
sub
mov
add
aam
mov
inc
adc
jne
mov
add
into
sub
shlb
fs
mov
popf
sub
imul
pop
inc
fs
adc
jl
inc
jb
xorb
mov
int
mov
into
xor
xor
aad
das
gs
dec
es
pop
das
lahf
mov
lock
push
ror
pop
mov
fisubl
test
je
push
pop
sub
jmp
dec
xchg
loopne,pt
outsl
test
mov
push
ljmp
movsl
xor
mov
lock
scas
mov
std
jo
iret
rorb
fs
aaa
inc
mov
sbb
adc
lret
lds
mov
lea
inc
ficoml
dec
mov
mov
or
mov
aaa
fsub
mov
incb
cs
repz
mov
sbb
imul
test
test
pop
pop
cmp
add
and
dec
dec
pop
and
insb
cmp
xchg
cmp
inc
mov
jae
adc
add
pushf
shr
idivl
or
fbld
add
lahf
and
pushf
cwtl
sub
movsl
adc
cmp
sub
adc
stos
imul
stos
push
out
adc
or
pop
push
in
imul
pop
push
sahf
lcall
scas
jecxz
cmpl
outsb
imul
test
iret
and
fldcw
and
ds
jl
sub
mov
int3
les
cmp
shlb
xchg
jp
mov
cmp
loopne
xor
or
add
outsb
fs
aad
mov
popa
fmull
les
mov
cmp
outsb
dec
dec
fisubrs
fadds
add
push
lods
call
jecxz
xchg
or
pop
jle
xchg
or
inc
dec
clc
inc
add
hlt
mov
fldcw
push
in
push
out
roll
fidivrl
test
mov
cmpsl
ja
mov
jge
add
fiaddl
mov
adc
call
mov
add
popa
inc
test
and
lahf
jae
aaa
addr16
pop
pop
sti
je
mov
in
lcall
stc
dec
aaa
sub
sub
jo
inc
test
sarb
xor
pop
sahf
add
test
push
pusha
inc
fldenv
fcoml
sbb
sbb
cmp
movsl
fiaddl
cmp
loope
testb
jb
sub
jge
mov
call
dec
jge
andb
push
inc
imul
mov
bnd
jo
cmp
sub
jle
mov
in
dec
stc
shrl
push
or
inc
sub
pop
iret
sbb
out
xchg
addb
jl
repz
jbe
imul
fists
test
cmc
adc
repnz
subb
scas
pop
daa
xor
mov
and
fnclex
lcall
jle
pop
ss
xchg
jb
popa
inc
pop
or
push
mov
js
inc
and
xchg
int
loopne
adc
mov
pop
mov
xchg
subb
cmp
test
bound
jmp
inc
push
cmp
mov
pop
rol
popf
jnp
rcrl
mov
adcl
leave
cmp
xor
jge
fucomi
mov
mov
repnz
mov
iret
cmpsb
jg
adc
cltd
je
nop
sub
fstps
addl
cld
cmp
xchg
push
sub
fcoml
dec
lods
jle
js
push
mov
in
dec
mov
mov
sahf
mov
out
sahf
add
jmp
jl
les
xor
shrl
push
out
test
sub
aad
mov
sahf
inc
sbb
dec
xchg
popf
mov
mov
jb
push
add
pop
sub
call
sub
dec
mov
movsb
pop
jp
mov
push
mov
adc
aam
adc
dec
cli
inc
or
lods
xchg
shll
mov
jne
adc
jl
movl
lahf
inc
sbb
loopne
jae
out
jge
scas
mov
mov
dec
je
adc
or
pop
std
enter
inc
cltd
inc
sahf
pop
insl
cmp
cmp
out
mov
add
push
pop
ret
ss
mov
inc
divl
pop
mov
lock
pop
mov
dec
aam
fdivs
inc
out
adc
in
xlat
in
call
in
push
lret
inc
sub
mov
pop
inc
push
lods
outsl
mov
or
xchg
addr16
in
push
xor
orl
or
pop
dec
aas
stc
rcll
and
xor
shrb
js
xchg
les
ja
mov
inc
adc
in
outsl
mov
daa
cld
adc
pop
lds
and
lret
aaa
jns
xchg
mov
pop
ss
loope
push
fnstsw
je
inc
mov
mov
and
sub
or
sbb
adc
sti
pop
dec
stos
push
mov
addl
adc
adc
outsb
sbb
call
sub
or
lret
mov
in
inc
sub
mov
dec
mov
pop
xchg
add
dec
mov
add
pop
pusha
fnstcw
int
pusha
jle
inc
addr16
dec
sbb
adc
and
add
in
ja
xor
xchg
fistps
and
test
jo
push
mov
mov
sti
pop
movb
push
cwtl
pop
jle
xchg
mov
popf
cmp
xchg
sbb
jae
mov
ja
cmp
das
push
sbb
dec
mov
inc
mov
adc
mov
nop
push
sahf
xchg
mov
inc
leave
mov
xor
pusha
les
mov
outsb
nop
dec
hlt
int3
and
loope
push
in
pop
orb
adc
mov
mov
jno
mov
andb
mov
mov
mov
lahf
mov
cld
inc
mov
sub
scas
push
lock
bound
scas
divl
jmp
in
xchg
mov
xchg
int3
cs
popa
xor
movsl
mov
cmc
add
test
inc
pop
mov
push
fdiv
inc
movsb
add
mov
aad
jnp
jae
sbb
mov
add
cmpsl
call
pop
cwtl
aam
dec
pop
mov
orl
jg
add
scas
dec
sub
rcrl
out
xchg
scas
inc
lods
mov
pop
xchg
movsl
dec
cmp
std
dec
jae
lcall
fucomi
dec
lret
dec
insb
cmp
aas
adc
call
jecxz
ljmp
sub
into
mov
mov
rorl
jp
xor
dec
fldenv
adc
ds
orl
rorb
lods
pop
ret
aam
test
jb
js
bound
mov
dec
jne
outsl
test
call
int
add
pop
jp
icebp
xchg
cmp
lahf
cld
les
ret
call
or
stc
in
dec
cwtl
xor
xchg
and
dec
fbld
dec
fidivrl
pushf
sbb
and
xchg
lret
xor
ljmp
mov
mov
call
inc
lock
out
xchg
pop
and
inc
nop
rorb
mov
lods
fcmovnb
cs
testl
ljmp
mov
mov
sahf
aad
popa
push
aas
mov
insl
and
pslld
sbb
adc
sti
enter
dec
mov
cmp
test
ret
dec
test
and
hlt
lahf
repz
les
sub
mov
mov
xor
scas
add
ds
xor
mov
aas
js
or
or
not
test
lock
cmp
and
lret
mov
add
jnp
jmp
int3
pop
hlt
pop
hlt
out
push
imul
inc
jne
dec
rcl
arpl
clc
sbb
sarl
andl
xchg
mov
ss
orl
sbb
xor
enter
adc
jnp
fidivrs
jecxz
mov
mov
xor
add
or
lret
sbb
inc
jmp
stos
icebp
cmp
xchg
add
push
xor
sbb
mov
insl
lea
sbb
ficoms
lds
sub
sub
out
pusha
pop
notb
adc
sbb
ud0
loopne
and
bnd
sub
cmp
mov
jp
jge
pop
hlt
aad
xor
push
lcall
sub
icebp
adcl
mov
sbb
sbb
hlt
fnsave
xlat
into
mov
add
mov
push
dec
cs
loope
lods
fs
push
lahf
xor
nop
arpl
inc
mov
gs
jp,pt
lcall
stos
pop
lea
in
cmp
fnsave
aad
cmpsb
pop
call
fidivl
popa
sub
call
outsl
out
mov
push
push
jp
hlt
data16
inc
test
adc
sub
xchg
stos
push
insb
ss
ljmp
jp
sub
sahf
adc
mov
mov
inc
in
dec
push
jb
jne
mov
mov
sub
mov
dec
bound
dec
push
cmpsb
lret
fnsave
shrb
jnp
xchg
mov
mov
dec
xor
lahf
push
push
jmp
push
pusha
fsubs
dec
out
inc
mov
cmp
cli
jb
loope
or
inc
mov
lds
mov
xor
pop
adc
dec
rcll
push
repz
mov
fnsave
fcmovbe
popf
stos
inc
popa
rolb
and
shll
insl
mov
cwtl
mov
lret
adc
test
push
jne
and
adc
push
dec
push
push
ficoml
sbb
pushf
pusha
mov
mov
repnz
push
stc
gs
fists
and
inc
dec
sti
int3
jbe
adc
pop
add
and
mov
xlat
cmpsl
fucomip
sub
dec
mov
lds
push
outsb
inc
jecxz
mov
lahf
sbb
xchg
adc
filds
inc
adc
and
inc
inc
addr16
xchg
out
outsb
call
fs
out
jno
inc
mov
lods
and
dec
mov
cli
mov
jge
popf
mov
pop
mov
movsl
sub
cs
outsl
and
stos
das
jl
and
mov
dec
and
sar
mov
adc
inc
and
xor
or
push
and
mov
jp
shll
xchg
inc
in
fbld
mov
popl
jnp
xchg
xchg
jbe
and
cmpsb
pop
scas
sub
ja
sbb
fs
mov
add
into
mov
xchg
mov
rcll
jmp
xchg
and
and
aaa
imul
repz
popa
push
pop
jbe
fcmove
pop
movsb
jbe
mov
loopne
mov
xchg
ret
sarb
cmp
cmp
insl
mov
sbb
push
mov
sbb
pop
or
jae
rcr
and
dec
cltd
sub
jle
pushf
mov
jne
mov
sub
enter
push
jge
add
dec
add
addr16
fidivrs
sahf
cmp
cltd
dec
or
xchg
repnz
addr16
xchg
mov
and
fwait
jle
add
into
in
sar
adc
aad
test
pop
je
lcall
repnz
cmp
mov
add
into
call
dec
jb
pop
lcall
sbb
and
sub
adc
imul
inc
pop
sbb
out
push
pop
mov
and
sbb
jbe
and
hlt
into
fcomp
jnp
xchg
pop
xchg
cmp
in
jae
adc
adcl
fimull
in
jmp
and
movl
scas
std
lcall
xor
inc
lahf
dec
shrb
add
jecxz
xor
inc
mov
mov
or
inc
ja
cmp
mov
cmp
sub
lret
jmp
xor
mov
jb
icebp
and
sti
sub
mov
iret
gs
ret
rorl
inc
push
testl
and
loope
pusha
sub
repz
dec
adc
jne
mov
add
repz
add
adc
mov
dec
jb
jnp
xchg
test
int
and
out
fisttps
xchg
xor
push
mov
cmp
into
mov
lcall
das
addb
adc
jl
push
fwait
es
xor
push
lret
cmp
idivl
xchg
imul
fidivrl
pop
dec
fsubrs
add
dec
cmp
cwtl
ficomps
xor
sub
xchg
mov
sbb
hlt
jbe
xchg
dec
mov
jl
daa
mov
jno
inc
xchg
rorb
dec
ret
fcmovnb
rcll
lds
cmp
adcl
sub
cwtl
jnp
jb
insl
fstpl
pop
push
dec
or
fwait
adc
jns
jp
cmpsb
sub
jb
jno
add
lods
mov
cmc
jne
mov
inc
sahf
loope
mov
sbb
rcr
loope
imul
in
jecxz
sarb
or
xorb
mov
push
or
sbb
dec
adc
lods
mov
cmc
call
repz
push
lea
lods
test
sbb
shlb
gs
pop
pop
push
mov
mov
xchg
jo
push
mov
jp
adc
out
int
dec
or
mov
mov
xchg
and
rcll
dec
out
push
and
fstps
into
or
and
cltd
dec
jmp
dec
out
and
outsl
push
leave
movsb
jmp
into
addr16
cmp
mov
jo
pop
test
mov
and
leave
cmpsl
mov
insl
aaa
jnp
push
jae
and
push
pop
push
movsl
imul
mov
das
xor
mov
ret
pop
js
sub
repz
cli
cmp
mov
divb
cmpsl
push
push
arpl
pop
popa
jl
icebp
add
lds
lods
mov
imul
pop
ror
ljmp
fs
fildll
idivb
pushf
jae
insl
adc
and
inc
dec
pop
dec
mov
add
rolb
mov
repnz
xor
es
xor
and
cmp
rcrl
ss
insl
xchg
mov
mov
pop
pop
and
lret
sub
jne
in
mov
ds
fbld
dec
int
pusha
cltd
jns
inc
in
push
dec
sub
adc
mov
scas
jmp
out
push
loopne
enter
test
pop
pop
jl
inc
or
mov
ljmp
in
xchg
inc
rorb
mov
sbb
into
setge
cltd
xor
pop
adc
sub
adc
xor
les
std
loope
sbb
cld
pop
in
add
dec
mov
outsl
lds
lret
and
frndint
inc
mov
dec
add
ror
add
std
xor
or
xor
and
loopne
fcoms
push
and
orb
adc
inc
pop
and
mov
es
iret
adc
jl
xor
sub
jle
add
mov
xor
add
ficompl
inc
sbb
bound
jp
stos
pushl
aaa
cmc
sub
sub
and
mov
loop
xchg
ja
cmpsl
xor
insl
lods
push
and
dec
and
xor
ret
out
push
shlb
jbe
std
ds
adc
dec
mov
xchg
pop
push
int3
jae
scas
je
xchg
adc
pop
rcl
pop
mov
imulb
xorb
mov
push
inc
sbb
xchg
cmp
cli
ficoml
fsin
cmp
icebp
push
dec
je
lret
xchg
and
cld
leave
mov
adc
adc
add
adc
in
cmp
enter
mov
rorb
sub
hlt
push
mov
imul
mov
jo
pushf
xchg
adc
insl
and
mov
sbb
sbb
test
mov
pop
popf
cmpsb
add
sbb
fmuls
jnp
mov
dec
add
inc
movsl
mov
ja
xor
jmp
jmp
sub
mov
repnz
das
ljmp
push
rorb
jp
xchg
cmpsb
adc
cmc
lea
adc
cmpb
add
aam
shrb
jg
insb
subb
shlb
stos
lea
sti
push
sub
inc
popa
cmp
cmp
cmp
lahf
mov
out
stos
outsb
jmp
and
cmp
jle
sub
jno
adc
dec
addr16
add
mov
jno
scas
pop
mov
push
inc
adc
loope
cltd
cmp
jbe
adc
pop
in
cmpsl
xlat
jns
pushf
imull
iret
mov
push
mov
cltd
xor
outsb
out
mov
push
jae
push
popf
mov
dec
in
cmpsl
and
dec
fwait
stos
mov
sub
out
das
or
aaa
punpcklwd
dec
jle
push
cmp
popa
pushf
jmp
les
mov
mov
rorl
fldenv
mov
std
cmc
bound
sahf
mov
aas
rolb
dec
stc
loop
pop
out
and
mull
mov
xchg
out
ret
fsts
data16
icebp
sbb
ja
into
push
test
xchg
rcrb
lret
hlt
jmp
xchg
cmp
cmp
lahf
loopne
mov
inc
cmp
mov
scas
call
jns
mov
mov
push
jo
std
loope
jno
mov
or
xchg
pushf
stc
ss
push
sub
andl
mov
dec
or
mov
cmpl
xor
fistl
std
in
test
imul
in
sub
push
mov
push
icebp
pop
lock
mov
repz
aaa
cmp
cmpl
pop
push
fbld
xchg
sub
pop
push
ss
mov
outsl
mov
ds
sub
xchg
shr
sbb
out
out
mov
cltd
data16
push
jecxz
pop
or
jb
mov
pop
les
shlb
mov
dec
dec
pop
or
mov
je
fs
push
out
or
pop
movsw
leave
jg
out
push
sbb
das
push
push
adc
add
cmp
dec
inc
pop
div
jns
jecxz
push
cmpsb
clc
ss
jecxz
lock
ret
cli
xchg
aam
mov
lds
js
jnp
push
and
lahf
imul
xlat
lcall
icebp
sub
rcrb
jno
icebp
mov
push
ret
popf
lock
iret
lret
std
cld
pushf
out
mov
xchg
pop
mov
filds
and
cmp
in
rorl
sbb
xchg
loop
out
incl
push
jmp
adc
mov
movsl
add
shlb
or
addl
mov
pusha
movsl
cmc
hlt
push
sbb
cmc
xchg
or
cltd
decl
or
sub
cmp
dec
cmp
jo
and
cmp
lock
lcall
fmull
push
es
add
shlb
popa
mov
lret
imul
ljmp
je
scas
adc
mov
and
mulb
scas
xchg
dec
cld
fwait
call
mov
jo
lock
cwtl
mov
lret
out
sbb
jmp
jno
cmp
leave
dec
push
fdivrs
aas
fmulp
popa
js
inc
outsl
pop
mov
sbb
or
sahf
ja
push
cld
dec
sub
sub
cmp
pop
jae
mov
filds
cld
sbb
stos
lahf
jge
pop
or
inc
lahf
imul
xchg
imul
mov
jge
add
int
pop
sahf
push
test
xchg
mov
and
jp
cmpsl
clc
mov
or
das
mov
cmpsb
jne
lods
push
test
fimuls
imul
cmpsl
or
lahf
mov
cltd
enter
mov
repz
mov
mov
outsb
sti
jl
dec
sub
pop
jge
pop
push
mov
and
mov
cltd
or
loopne
loopne
push
push
loop
cmp
aad
or
shlb
and
push
and
lret
ljmp
shrl
or
pmovmskb
cld
mov
int
push
pop
mov
sub
ja
in
sub
outsl
mov
mov
xchg
push
leave
pop
mov
mov
adc
or
scas
pop
jg
or
cwtl
sub
and
adcl
xchg
lods
mov
es
aaa
mov
dec
lret
cmpsb
dec
sub
movsl
dec
stos
into
adc
insb
xchg
outsl
xorb
std
add
or
inc
cs
ds
push
outsl
and
fcompl
cs
bound
in
sbb
icebp
lret
xchg
out
sbb
outsb
jmp
icebp
jb
subl
jno
stos
enter
sbb
push
jp
push
add
ja
jae
mov
jb
cmp
andl
push
push
push
vshufpd
sub
pop
pop
aam
jmp
outsb
rcrb
push
addr16
mov
out
outsl
mov
inc
pushf
sbb
cwtl
inc
or
sub
or
xchg
sti
sub
or
gs
hlt
leave
mov
cli
xchg
imul
or
arpl
mov
cmp
lds
pop
sbb
imul
sti
xchg
in
test
fcomip
push
mov
jecxz
add
xorl
jb
mov
xor
mov
fldl2e
lea
mov
jae
jo
push
inc
daa
add
mov
adc
mov
adc
lock
in
daa
cwtl
lds
push
call
dec
inc
mov
mov
jne
dec
mov
xchg
lret
pop
mov
jno
jae
rorb
xchg
repnz
adc
jb
dec
xor
shlb
leave
jmp
dec
adc
iret
jnp
mov
icebp
pusha
pop
repz
mov
sbb
mov
xor
clc
test
fwait
dec
pushf
pop
fisubs
push
mov
or
ficomps
xor
mov
call
scas
cmp
pop
daa
cmp
pushf
xor
dec
push
dec
jo
xor
xchg
orb
loopne
rcr
sub
adc
inc
jle
loopne
mov
sbb
cmovg
and
gs
pushf
enter
es
fbstp
dec
xchg
jl
mov
icebp
lods
les
jl
mov
lea
ja
fcoml
inc
add
in
pop
sub
dec
cltd
clc
outsl
cwtl
int3
addr16
dec
push
loop
in
stos
bound
shlb
cmp
or
pop
fisttps
mov
pop
cmp
and
add
aad
test
or
dec
lods
or
mov
pop
lcall
jp
cld
insl
icebp
mov
scas
sbb
pop
cmc
or
sbb
push
mov
ss
and
jl
mov
add
cmpb
ljmp
in
scas
iret
mov
es
das
lcall
add
insl
mov
pop
add
or
jns
cmp
jg
jmp
dec
push
xchg
adc
pop
mov
jb
xchg
aam
xor
dec
pop
insb
jnp
pop
ljmp
sub
adc
add
jo
mov
push
mov
in
outsl
adc
sbb
mov
cld
outsl
aad
imul
dec
clc
xor
out
jns
das
push
pop
jnp
pop
in
push
movsb
dec
inc
cmp
pop
sbb
stc
cmpsl
inc
pop
mov
movsb
push
outsl
daa
call
pusha
or
nop
jo
jmp
mov
mov
xchg
ficoml
jne
and
roll
notb
ret
inc
mov
and
imul
sbb
or
std
xor
add
pushf
mov
xor
movsl
and
push
push
sbb
push
fimuls
push
mov
cmc
mov
ljmp
je
lcall
mov
out
imul
sbb
mov
inc
add
push
aas
inc
xchg
imul
jne
insb
sbb
jmp
push
fstpl
mov
mov
pushf
mov
jecxz
ret
inc
ss
divl
add
mov
xor
xor
test
mov
inc
sub
pop
movsb
dec
imul
xchg
mov
push
push
mov
pop
jo
test
inc
or
pop
cmpsb
add
jae
rclb
add
push
pop
pop
js
rep
popf
jmp
xlat
adcb
and
pop
mov
pop
into
les
inc
stos
jnp
je
xor
mov
test
jne
adc
xchg
xchg
in
out
xchg
jp
xlat
adc
and
loopne
or
sub
addr16
imul
ret
cwtl
sub
out
cmp
xchg
nop
pop
xor
hlt
jmp
mov
push
dec
insl
ljmp
jge
insb
cmpsl
sbb
push
and
xchg
subl
pop
aam
mov
inc
lcall
fsubs
in
pop
inc
xorb
insl
out
cs
push
and
enter
xchg
jb
mov
push
add
divb
add
popa
out
test
inc
and
cmpsb
pop
cli
jle
fistpll
in
cmp
pop
lds
daa
out
int
loop
ds
cmp
dec
push
and
mov
fadd
jmp
adc
push
aaa
pop
fadd
pusha
stos
dec
stos
add
fnstenv
xchg
out
push
pop
jmp
movsl
lock
call
add
or
xlat
pop
push
xor
xchg
js
add
es
xor
sbb
rclb
dec
gs
or
fsubs
jns
test
cmpsb
add
cmpsb
xor
icebp
stos
lret
stos
push
jl
xor
xchg
push
push
int
add
stc
mov
xchg
lea
mov
dec
inc
push
lahf
out
xchg
mov
jb
dec
mov
bound
adcl
push
test
fimuls
push
sti
cmp
jnp
pop
ds
and
loopne
xchg
push
push
ljmp
test
sub
dec
adc
hlt
inc
push
sbb
mov
aam
sti
mov
fdivs
sub
mov
stc
movsl
jnp
pop
fldt
repz
push
fstpl
add
orb
push
fs
repnz
cmp
call
sbb
fnstenv
sub
xorl
sbb
sbb
pop
pop
jbe
aaa
push
xchg
and
push
add
fbstp
cmpsb
cwtl
daa
outsl
out
push
sbb
loope
add
jae
inc
call
push
mov
push
xchg
add
mov
sbb
and
inc
mov
pop
lea
popf
leave
lods
fwait
mov
pop
cmp
in
aas
pop
aas
add
orl
add
jg
rclb
or
xchg
movl
std
or
pop
cltd
xchg
stc
inc
pop
mov
cmp
out
dec
cld
push
jb
shl
mov
popf
adcl
push
push
iret
mov
js
lds
sub
push
jo
inc
lock
jae
xchg
jp
dec
dec
push
push
sbb
ljmp
inc
aam
xor
cwtl
cmp
xor
nop
inc
lret
inc
daa
sarl
jle
mov
dec
test
mov
arpl
ds
mov
fists
lods
out
pop
cmpl
aas
add
push
xchg
nop
mov
pop
sub
adc
mov
sbb
xchg
mov
or
mov
push
mov
outsl
lods
cmp
call
test
into
mov
sti
movsl
xorb
data16
imul
sub
mov
or
test
push
outsl
cmp
ss
add
add
imul
scas
stos
pop
fucomi
ss
jnp
inc
stos
cmpsb
lret
sub
fwait
cmp
push
or
lock
mov
xchg
dec
je
outsl
jp
movsb
in
jl
shrb
shrl
mov
inc
or
pop
pop
loopne
xchg
mov
fbld
bound
xor
add
inc
divb
mov
loop
sbbl
nop
neg
adc
mov
clc
inc
sahf
insl
inc
enter
inc
das
test
pop
fnsave
or
vpcmpeqb
adc
ds
popf
idiv
adc
sbb
pop
xor
negl
js
rcll
pop
xlat
sbb
jl
cmpsb
les
push
xor
mov
lock
je
mov
in
rcl
popa
push
repnz
test
jge
mov
dec
arpl
imul
mov
push
jnp
cmp
bound
fcompl
mov
cwtl
jb
xor
adc
loope
adc
push
dec
sbb
jp
push
cmpl
mov
push
leave
jnp
test
and
or
sub
pop
dec
movsl
fisubl
in
cmpsb
jb
in
rdpmc
ret
sub
xchg
and
cld
lret
sbb
out
add
xchg
cwtl
in
nop
sbb
cmp
ss
dec
arpl
xchg
adc
mov
adc
mov
stos
dec
pop
jmp
push
fildl
loope
xchg
outsl
scas
mov
int
testl
mov
mov
scas
addr16
sahf
loop
lcall
or
jge
xchg
cmp
sbb
movsl
mov
sub
pusha
fimull
pushf
xor
fwait
and
sbb
fwait
xchg
xorb
mov
xor
shl
pop
outsb
sub
mov
dec
out
insl
mov
ds
sahf
hlt
push
cwtl
mov
jae
jns
inc
outsl
outsb
pop
mov
into
xchg
or
lods
es
push
or
xor
cmp
xchg
ss
or
test
and
pop
jge
movsl
sub
xor
cmp
fs
test
rcrl
or
fwait
imul
mov
jae
inc
push
jge
push
testl
pop
and
jg
repnz
push
and
icebp
popa
mov
fdivrs
sub
rcrb
dec
mov
cmc
enter
jae
loop
jae
sbb
inc
ljmp
cmpb
cmc
rorl
jecxz
cmp
xchg
mov
jp
add
imul
and
movsb
jl
or
stos
push
arpl
scas
lea
fwait
adcb
and
lods
push
in
call
or
add
add
mov
fs
sub
notb
pop
sbb
and
cmp
cli
mov
ljmp
repnz
in
or
fwait
cwtl
mov
xchg
mov
cli
and
lahf
dec
in
mov
pop
xchg
addr16
outsb
push
xor
xor
nop
and
xchg
fcoms
iret
ds
xchg
rcrb
xor
and
inc
imul
jle
ja
in
pop
lock
out
lretw
stos
adc
jge
lcall
inc
xchg
xchg
and
jno
mov
xor
sub
aas
adc
pop
inc
dec
mov
in
xor
mov
add
out
sbb
das
fldt
cmp
xchg
mov
out
cltd
jle
insl
call
mov
data16
fisubl
loope
in
fsubl
jg
cmpsb
cmp
mov
mov
xor
sahf
dec
mov
call
rol
cltd
jo
out
jg
ret
jecxz
jl
popa
inc
lcall
xor
jl
sub
adc
mov
nop
fildll
xor
sbb
adc
adc
jg
out
imul
lcall
js
fs
lcall
xor
loop
sbb
push
mov
lea
cs
loopne
xchg
aam
fwait
or
ljmp
in
and
fcmove
dec
mov
int
aaa
mov
arpl
test
add
fdiv
imull
pop
pop
pop
push
clc
xor
dec
mov
mov
icebp
jnp
mov
push
push
aaa
ret
imul
xor
repz
lds
cmp
test
sti
mov
movsb
repnz
inc
sti
push
out
rcrb
pop
loopne
scas
inc
dec
sub
adc
push
mov
add
xor
ret
inc
push
sbb
repz
pop
push
sub
inc
aas
stos
iret
stos
iret
lcall
sarb
movsl
in
scas
inc
mov
adc
push
mov
xor
test
imul
xchg
mov
movsl
popa
cmpsl
lea
add
cs
popa
pop
mov
ja
das
jo
sti
in
mov
mov
ja
xor
or
fwait
ds
mov
push
jae
stc
xor
cmp
xor
movsb
mov
sti
xor
in
outsl
imul
fisubrs
xchg
inc
pop
fnsave
lods
xchg
push
leave
daa
and
adc
push
or
push
mov
lcall
add
movsl
bound
fsubs
insb
push
sub
jge,pn
dec
push
add
or
sbb
mov
xor
inc
and
sub
push
dec
jb
pop
cmpsb
mul
clc
int3
out
iret
lcall
inc
ljmp
data16
ret
fstl
dec
ljmp
sub
adc
rorb
loope
andl
mov
out
push
jl
das
xor
add
adc
sti
sub
decl
add
mov
loop
jo
xor
mov
jle
adc
add
in
jge
jmp
mov
je
out
mov
js
mov
cmp
mov
popf
mov
cwtl
mov
inc
xorl
mov
adc
incl
push
data16
jb
icebp
daa
cmp
pop
mov
sarl
adc
test
fbld
mov
lock
out
push
int3
and
push
lahf
cmpsl
and
sbbl
in
inc
dec
mov
fsubrs
sarb
mov
pushf
adc
insb
xchg
stos
cmp
and
jnp
loope
pop
test
pop
cmc
pop
push
adc
and
xchg
mov
bound
cmpsb
mov
in
pop
adcb
ret
cs
out
fcmovnbe
loope
xor
pop
lock
add
rol
xor
mov
pop
add
popa
mov
fnstcw
out
push
fs
push
data16
test
daa
mov
sub
mov
call
mov
xchg
fwait
push
mov
lods
adc
inc
cmp
cs
cmp
mov
clc
cmp
xor
push
popf
es
xlat
or
stc
fdivr
mov
enter
mov
mov
jnp
mov
in
add
inc
and
mul
fs
aas
dec
clc
add
jg
inc
mov
or
mov
clc
mov
dec
lret
ret
leave
mov
xchg
lret
lcall
sbb
add
and
ffreep
pop
js
sbb
js
out
dec
mov
pop
push
aam
inc
sub
in
xor
jl
jg
pop
mov
leave
mov
push
or
stc
call
or
adc
add
xchg
iret
iret
cli
lds
mov
push
push
shlb
inc
nop
aad
xor
xor
mov
mov
call
mov
mov
sbb
loope
loope
aaa
adc
orl
adc
pop
sbb
fildl
out
sub
mov
xor
xlat
call
divps
popw
insl
mov
adc
out
test
mov
jp
or
mov
jle
loopne
jl
inc
into
jbe
mov
inc
andb
test
cmc
imul
jnp
xchg
xchg
les
test
lods
adc
cmp
stos
jns
incl
sub
sbb
cmp
fcomps
xchg
sbb
push
sbb
test
insb
in
or
xchg
mov
cld
bound
clc
adc
inc
adc
imul
xlat
es
push
mov
jg
jns
pop
pop
add
cmp
lock
inc
int
fwait
xor
in
lcall
jecxz
xchg
inc
xchg
push
push
cld
outsl
xlat
and
or
js
test
cmp
idiv
adc
call
add
shl
push
je
lret
and
pop
mov
repnz
cs
mov
shrb
xchg
sbb
push
aam
arpl
out
leave
in
cmp
mov
aaa
push
and
mov
leave
mov
iret
push
inc
push
pop
sub
and
cmpsb
cmp
outsb
imul
decb
pop
nop
dec
dec
stos
ljmp
and
pushf
lret
lods
inc
xor
jne
loope
mov
pop
lods
sbb
adc
push
fwait
pop
inc
div
into
dec
mov
pop
cld
cmc
scas
insb
out
jns
jmp
or
cmp
lea
mov
pop
icebp
sbb
mov
add
adc
mov
fidivs
shlb
fistpl
xchg
xor
push
loop
jg
ss
cltd
fnstsw
xchg
fmull
mov
test
hlt
xor
mov
mov
dec
xchg
dec
push
mov
adc
cmc
push
sbb
in
in
mov
sub
addr16
movsb
mov
fwait
pop
outsl
mov
pushf
mov
pop
adc
iret
push
cmpsb
cmpsl
and
loop
mov
push
jmp
cltd
aas
les
outsb
repnz
push
jns
movsb
inc
mov
push
out
jecxz
jmp
aaa
push
adc
push
fisubrs
dec
test
sbb
enter
push
push
mov
jne
push
pop
push
xchg
and
jb
push
sar
jle
test
es
aas
inc
je
ret
push
movsb
or
add
jne
sbb
cmp
mov
pop
xor
decb
push
mov
in
movsl
aad
mov
addb
cmpsl
and
push
das
pushf
popf
rolb
cld
mov
daa
movups
and
mov
or
sbb
push
adc
hlt
mov
push
push
andb
arpl
push
sub
and
pop
scas
hlt
outsb
xlat
leave
repz
and
sub
dec
push
leave
pop
loop
jno
repz
lea
jno
frstor
xor
rol
and
inc
cmpsb
jge
lds
in
mov
mov
stos
inc
sub
jp
jns
jl
lret
mov
loope
in
cmp
insl
mov
div
mov
and
arpl
andb
sub
mov
xchg
lret
andl
pop
scas
or
mov
loope
nop
sub
sti
dec
adc
inc
push
pop
cmp
aas
test
scas
xchg
and
mov
clc
andb
jl
dec
push
lahf
stos
sbb
repnz
adcb
inc
add
sub
adc
mov
movsb
push
popf
loope
pop
hlt
dec
movsl
ss
fnstenv
push
rol
jecxz
out
mov
or
cld
jb
test
lods
push
aas
lods
adc
add
or
push
insl
and
cmp
gs
ljmp
mov
cwtl
xchg
aaa
mov
mov
sbb
add
in
mov
dec
sbb
ss
out
test
fwait
sarl
sbb
fisubrs
jge
repz
adc
pop
pop
mov
stc
jb
cmp
fldcw
jp
push
sti
cmpsb
sahf
test
ljmp
gs
in
gs
jmp
and
fs
rorb
addl
fstpt
cld
adc
and
mov
pushf
push
enter
add
adc
push
test
jmp
mov
inc
sub
fldl
dec
mov
clc
push
xchg
sub
cli
and
pop
jno
gs
add
rorl
mov
out
fisubs
and
inc
mov
xchg
dec
aad
push
stos
pop
sub
inc
jge
rorb
cmc
ss
mov
inc
sbb
ja
nop
inc
aad
mov
call
gs
mov
jns
push
mov
xor
adc
mov
jmp
gs
in
popf
out
shrl
das
xchg
dec
adcl
jecxz
push
sbb
jmp
cmp
subl
sarb
aas
push
mov
mov
pop
sti
test
movsb
pop
call
test
outsb
lods
movsl
xchg
stos
test
ret
or
mov
pop
xlat
lods
test
adc
loopne
mov
in
and
rcll
xchg
test
popa
aaa
cmp
in
not
negb
cmpsb
mov
ds
xor
dec
mov
push
xor
scas
mov
mov
mov
sub
jae
idivl
jmp
outsl
lods
loop
cmp
push
jo
inc
mov
mov
pop
icebp
test
pop
push
mov
jle
sbbb
mov
xchg
jecxz
add
push
xchg
add
dec
xor
lds
fwait
or
std
pop
mov
outsl
mov
inc
jg
testl
sbb
inc
repnz
aaa
fistl
push
sbb
jg
dec
inc
push
lret
out
ret
addb
sub
cmp
jnp
je
dec
jb
xchg
pop
lods
jne
clc
mov
movsb
mov
aam
sti
insl
lods
es
dec
fstps
jge
stos
jg
jne
xor
pop
call
adc
cmp
add
mov
aas
popa
dec
inc
cs
sub
jle
mov
xlat
rorl
ljmp
data16
and
clc
sti
push
insl
push
xlat
cwtl
cwtl
mov
lods
jmp
jg
pop
mov
mov
fadd
cmp
xor
pop
fnstenv
shll
mov
xlat
pusha
push
arpl
in
jns
xchg
lea
jbe
inc
pushf
inc
scas
xor
jo
xchg
pop
or
mull
xchg
and
lock
mov
and
add
les
arpl
rcr
lock
add
cs
ja
enter
add
icebp
cltd
sub
aaa
test
mov
mov
mov
pop
aam
fs
in
add
xor
mov
fwait
push
popf
loop
add
cmp
push
pop
leave
inc
addb
ljmp
push
xchg
xchg
xchg
pop
loop
and
sub
jecxz
loopne
mov
stos
stos
rorb
adc
pop
mov
enter
arpl
faddl
mov
out
jmp
xor
xor
rorb
pushf
pushf
mov
enter
cmp
cmpsl
int3
push
adc
inc
xor
into
cmc
outsb
jne
cli
lods
mov
lds
mov
cmp
mov
rol
lea
hlt
inc
sbb
addl
or
add
cmp
or
into
cwtl
out
aaa
push
stc
jno
je
or
nop
jbe
mov
cli
sbb
shlb
imul
xchg
jge
xchg
mov
pop
xchg
jmp
sbb
cmpb
sbb
imul
iret
mov
pop
bound
shll
pushf
test
cwtl
in
or
mov
insl
icebp
sub
fdivrs
in
test
lds
out
roll
sub
push
das
sbb
dec
mov
xchg
add
push
and
call
adc
xchg
and
out
jecxz
outsl
jecxz
adc
imull
lret
mov
xor
lahf
push
cmp
rclb
test
outsb
fld
mov
or
adc
scas
rcl
cmp
dec
cld
pop
sub
cltd
call
les
clc
mov
ss
je
push
xchg
movsl
jg,pn
cld
rcrl
sbb
jp
stos
inc
mov
pushf
pop
pop
mulb
lock
lahf
shlb
or
or
pop
shl
and
je
mov
jns
fwait
add
aaa
shl
mov
mov
clc
fidivrs
jo
and
push
out
push
int
subl
clc
shll
sub
cmp
loope
dec
rorl
xchg
std
int
inc
mov
cmp
add
punpcklwd
lret
data16
xchg
sub
testb
aad
je
inc
lea
sub
sub
dec
xor
arpl
inc
cli
aas
lds
sub
pop
mov
insb
xchg
xor
mov
aaa
mov
and
lahf
bndstx
dec
jbe
xchg
mov
ljmp
dec
jbe
add
cmpsb
hlt
cmp
mov
insl
jns
rclb
inc
int3
pop
movsb
loope
mov
mov
outsb
mov
mov
inc
lahf
pop
jecxz
mov
add
xchg
jge
sbb
ss
jns
rcrl
mov
xchg
iret
dec
out
sbbb
add
jmp
lds
ss
les
sbb
aam
mov
mov
xchg
xchg
fistl
out
and
lock
sti
fadds
add
loop
dec
roll
data16
test
push
mov
loope
lcall
rcr
jl
hlt
cmp
xchg
outsl
dec
in
aad
ret
pop
cmp
stc
fistl
out
lahf
ret
mov
cld
pop
movsl
mov
fnstsw
fnstenv
inc
xor
cmp
rclb
dec
inc
pop
adc
out
xchg
shlb
add
push
stos
bound
xchg
xchg
iret
lods
and
call
out
mov
mov
mov
or
cmp
cltd
gs
dec
sti
mov
fildl
sub
clc
and
cmpsl
scas
xchg
outsl
les
into
jne
xchg
in
add
xchg
add
xchg
cwtl
push
jg
test
addr16
outsl
cmp
jb
jae
dec
fstpt
loop
jo
lcall
and
insb
dec
shlb
test
in
jns
pop
ss
dec
sbb
cmp
out
mov
pop
and
lea
cwtl
pop
mov
jg
add
repz
in
dec
ja
mov
in
sbb
ret
imul
rdmsr
push
jmp
mov
int3
lcall
mov
int
pop
lcall
repnz
leave
cmpsl
mov
cltd
mov
cmp
inc
sarl
bound
pop
sahf
shll
sub
dec
test
fmuls
push
jp
mov
add
icebp
leave
test
cs
or
push
dec
xor
mov
mov
je
jno
shrl
icebp
mov
xchg
push
sub
sbb
stos
dec
jg
mov
or
test
fwait
xor
test
and
or
sbb
add
push
lods
push
cmp
popf
inc
jae
nop
negl
jecxz
push
sbbl
insb
xchg
inc
xchg
daa
shrb
outsb
push
andl
xchg
push
add
mov
sbb
xchg
sbb
mov
leave
fnsave
mov
std
mov
sbbl
mov
xchg
int
movsb
bound
dec
test
lahf
test
add
mov
jl
cmp
xor
lea
push
and
jg
aam
pusha
fcoml
add
in
push
adc
cmp
int
mov
insb
xchg
jo
xchg
mov
ss
jp
sbb
lcall
mov
cmp
mov
mov
ret
pushl
sub
pop
andb
addr16
mov
pop
pop
leave
mov
mov
lret
mov
or
cs
jo
std
push
dec
cli
sbb
cs
pop
je
mov
dec
xchg
aas
or
imul
push
sti
pop
inc
mov
inc
pop
and
lods
mov
jno
mov
rcrb
or
imul
pop
movsl
lcall
in
push
in
ja
fsubrl
imul
mov
cmp
daa
outsb
loope
and
outsl
je
roll
out
icebp
sahf
and
mov
out
xor
sub
add
inc
jo
or
cli
mov
jne
or
popf
test
xchg
mov
in
insb
fdivrl
inc
iret
xor
add
push
sub
test
push
outsb
shrb
data16
adc
push
and
roll
in
xchg
pop
pop
push
imul
jmp
dec
rcl
fbld
xor
js
xor
mov
adc
jmp
cmpb
cmpsb
daa
decl
jl
jl
inc
scas
mov
adc
stc
xor
iret
outsb
insb
adc
push
mov
cwtl
mov
sahf
repz
fwait
int
lock
pop
mov
dec
ret
jbe
iret
ljmp
loopne
mov
and
pop
jle
fmull
test
loop
mov
and
dec
pop
mov
fwait
xor
jle
push
xchg
lret
add
xchg
daa
scas
or
and
jnp
jmp
or
and
arpl
xlat
jo
lret
mov
lahf
jmp
out
sub
push
adc
rcl
push
inc
scas
xor
sbb
pop
push
mov
inc
sbb
lods
sbb
cld
lds
mov
enter
sti
movsl
fwait
sbb
nop
int3
xor
lock
xor
add
dec
cmp
xchg
arpl
ljmp
adc
inc
inc
test
push
inc
rcll
push
rorl
sub
jl
xchg
jnp
scas
popf
iret
pop
cmpsl
das
shll
out
mov
repz
pop
mov
and
into
test
scas
push
loope
jne
jns
bound
test
mov
ds
xor
es
mov
std
mov
adcb
or
sbb
ljmp
shll
jno
icebp
repz
fidivl
push
out
gs
shlb
and
clc
mov
loop
mov
scas
or
lods
adc
dec
scas
outsl
xchg
cmp
popa
xor
pop
test
cmp
inc
add
adc
out
sbb
lods
sbb
xchg
adc
aam
mov
jmp
jne
mov
jmp
jle
pop
imul
loope
int
movsb
adc
adc
xchg
enter
mov
popa
outsl
and
test
insb
fstl
cltd
repz
fucomip
pop
inc
adc
out
fprem1
jle
mov
out
ljmp
xor
xor
movsl
cmp
xchg
es
iret
cmpsl
lcall
mov
mov
dec
shll
pusha
sbb
loopne
jl
jle
stos
mov
scas
xchg
jmp
sub
xchg
sub
aam
and
out
adc
ja
xchg
popa
addr16
bound
mov
clc
lock
pop
adc
sahf
xchg
scas
jae
mov
push
dec
xor
stos
jge
ljmp
loope
ficoms
rcrb
push
shlb
sarl
pusha
jge
push
mov
or
aam
mov
xchg
push
push
test
movsl
in
jmp
out
or
pop
jle
push
cmp
loope
sub
mov
outsb
loop
sbb
add
and
xchg
sarl
sarb
scas
mov
cmp
mov
daa
xchg
and
aaa
cmpsl
fwait
mov
mov
loop
mov
ret
lea
rorb
add
call
fsubr
insl
pop
mov
add
lods
out
lods
mov
cmpsb
push
xchg
lret
or
adc
sub
mov
jp
xchg
adc
ret
les
push
out
gs
pusha
sub
mov
repnz
adc
xchg
pop
mov
mov
insl
inc
lock
push
xchg
notl
stos
icebp
xchg
xchg
fs
pusha
call
dec
sbb
jb
rclb
in
inc
clc
dec
jne
ret
adc
xor
inc
jl
dec
ss
or
hlt
inc
push
add
pop
imul
mov
movsl
pop
pop
inc
daa
mov
or
sub
es
sub
adc
sbb
loop
jae
dec
fdivs
pop
dec
mov
xchg
jp
and
jnp
fld
mov
in
jle
insb
aad
xchg
dec
jmp
icebp
xchg
psubsb
fs
xchg
cmp
add
fsts
mov
in
in
fcomps
fdivp
xor
fidivrl
test
push
cltd
cmp
push
gs
int3
inc
xor
daa
adc
sti
push
mov
and
xor
mov
ret
sar
loop
cmp
jbe
fstps
fistpl
pop
inc
popa
sub
and
dec
push
mov
int3
aaa
in
mov
adc
lret
inc
mov
loopne
test
xor
dec
ljmp
xchg
rorb
and
rorb
and
push
push
fisubl
movsb
sbb
mov
dec
and
fbstp
xor
pop
xor
mov
or
push
cmpsb
mov
stos
mov
hlt
adc
pop
jmp
addb
mov
and
xor
or
ja
push
cld
sarb
pop
push
cltd
rcl
sbb
pop
xchg
xchg
add
and
pop
jg
adc
fs
loopne
nop
stos
add
and
push
aaa
insl
bound
int
pushf
add
fdivrs
xor
mov
and
lods
and
and
mov
add
js
dec
or
enter
and
test
mov
push
repz
pop
push
mov
add
mov
ret
call
push
cmpsl
rclb
aam
int3
out
mov
mov
lret
sti
cwtl
insl
pusha
xor
ret
and
pop
sub
sbb
jns
hlt
push
insl
add
sahf
jmp
sbb
mov
int3
pop
mov
jge
enter
fmul
movsbl
mov
or
out
fdivrl
pop
sbb
cli
lcall
xor
inc
lods
pop
adc
add
aad
pop
test
icebp
aam
inc
mov
and
cmp
pop
stc
mov
sub
adc
icebp
fdivrl
mov
push
xchg
pop
enter
sahf
leave
insl
add
cmpsl
mov
mov
mov
jbe
enter
push
push
outsl
dec
jl
add
push
dec
sub
mov
roll
dec
inc
xlat
lods
pop
in
push
out
mov
cmp
aam
rcrb
push
cmp
repz
das
cmp
inc
adcl
jmp
sub
mov
xchg
call
int3
push
sub
jle
stos
popf
rolb
push
pop
clc
sub
sbb
mov
ss
xchg
sahf
andl
clc
movsb
cmpsb
push
imul
sub
add
ret
addr16
push
or
push
scas
addr16
insl
call
sbb
data16
push
sbb
jmp
or
cmp
cmp
fidivs
mov
mov
adc
sbb
push
std
mov
mov
mov
lea
pop
sbb
adc
and
sahf
mov
sbb
jle
insb
ss
and
icebp
pop
push
mov
push
pop
sub
pop
jno
hlt
mov
lahf
cmc
jge
lret
add
je
mov
enter
mov
xor
insb
fcoml
xchg
dec
bound
lods
mov
push
push
movsl
mov
lods
jnp
orb
sti
mov
adc
fcompl
into
jbe
movsl
sti
xchg
jne
out
and
pop
and
popf
sub
jo
inc
mov
lret
imul
int3
lds
mov
mov
mov
dec
sub
fistpll
adc
mov
adc
adc
mov
test
out
and
pushf
adc
shrl
lods
popa
mov
add
enter
pop
imul
jecxz
lahf
mov
bound
mov
add
mov
pop
mov
fists
pop
add
jbe
xor
fmuls
pop
xor
std
mov
movsb
mov
push
ret
out
mov
sub
xchg
jle
mov
ret
ss
pop
push
xchg
mov
xor
orb
mov
jo
push
fistpll
pop
push
insb
je
sbb
cwtl
or
sbb
mov
out
cmpsb
push
pusha
hlt
jl
xor
sub
fistpll
into
clc
xchg
xlat
lret
xor
jno
or
mov
mov
mov
adcb
pop
or
fst
jns
or
popa
add
pop
les
fnop
xor
xor
xchg
aad
insb
jne
sub
cmpsl
xchg
mov
popf
mov
xlat
fidivrl
repnz
divl
dec
adcb
in
mov
std
mov
leave
out
inc
adc
push
inc
out
sub
int
jle
add
adc
movsl
cmp
pop
or
and
mov
push
out
in
loop
shrb
popa
push
xchg
push
cmp
jg
xchg
testb
mov
jl
cmp
dec
nop
cs
lds
add
ds
sarl
push
mov
push
fs
outsl
mov
loopne
test
inc
fmuls
aas
fdivr
push
or
daa
ret
mov
or
stos
mov
scas
out
imul
push
shlb
push
push
sbb
daa
cmpsl
fwait
xchg
inc
push
fstps
cltd
jno
cmp
cmp
mov
cmp
inc
out
push
mov
outsl
daa
sbb
pusha
jno
aaa
pop
add
mov
sub
sub
jl
inc
push
loopne
stc
jb
xor
ss
xlat
jns
hlt
insl
mov
push
jae
ret
stos
cmp
fstpl
dec
imul
in
dec
push
push
inc
dec
mov
xchg
and
cmp
ja
dec
jmp
mov
rclb
imul
and
aas
add
xchg
or
mov
fwait
stos
mul
pop
mov
adc
fs
push
dec
inc
in
cld
xor
dec
subb
sub
fwait
pop
test
ds
imul
push
inc
popf
setne
mov
mov
insl
mov
pop
insl
add
dec
pop
cmp
mov
lcall
test
sub
xchg
jns
or
and
push
stc
push
bound
xchg
add
fadds
enter
inc
adc
cwtl
jg
imul
jp
shlb
or
clc
push
jmp
pop
and
gs
ret
push
mov
in
ret
pop
stc
jb
hlt
jge
jg
out
fldcw
jge
inc
cld
cmp
arpl
rorl
pop
mov
int3
xorb
cmp
jecxz
pop
jle
jo
add
fcmovu
or
push
push
sbb
iret
mov
and
out
loope
insb
inc
jo
jl
inc
xchg
cltd
cmp
cs
mov
cld
mov
iret
xchg
mov
aas
cwtl
cmp
fstpl
add
add
jae
xchg
push
dec
jg
cmp
adc
das
int
jecxz
push
es
sbb
stc
movsb
sub
mov
xchg
and
or
sbb
fidivrs
sbb
cld
ret
fwait
cli
iret
scas
lock
jb
xchg
aas
notl
iret
jg
jg
mov
loopne
dec
mov
jnp
gs
in
cmpsb
sbb
fmull
xor
xorl
mov
mov
retw
jp
lret
mov
jno
sbb
std
xchg
shll
notl
mov
rorb
pop
dec
and
add
mov
and
nop
jmp
push
aaa
xchg
dec
jbe
out
cwtl
lcall
or
out
nop
scas
xor
jnp
ja
xchg
jg
cmp
mov
sbb
add
cmp
je
mov
mov
les
dec
pop
mov
jl
std
fcmovbe
popf
mov
sub
push
lds
sub
dec
nop
scas
push
sahf
sbb
addr16
dec
xor
ljmp
adc
ja
push
jle
xor
inc
and
pop
rcrl
mov
mov
inc
movl
mov
and
mov
mov
shll
xchg
ret
mov
test
add
jge
xchg
fldt
sbb
mov
int
adc
jno
ljmp
in
iret
arpl
jbe
mov
aaa
decb
jns
pusha
lods
clc
out
test
adc
xchg
jecxz
pop
push
xor
les
pop
xchg
loope
and
sti
adc
imul
sub
jne
xchg
lock
sbb
push
push
mov
xlat
call
in
inc
or
adc
stc
jb
loope
xchg
sub
es
loop
jno
pop
or
mov
lods
outsl
xchg
pop
int3
aad
stos
insl
mov
rorb
out
in
pop
pop
xchg
cmp
mov
loop
aad
xchg
movsb
loope
jecxz
mov
test
lea
aad
or
mov
adc
push
popa
mov
pop
dec
arpl
sbb
sub
aad
xlat
nop
test
test
ja
xor
mov
cmp
pop
cmp
mov
lret
movsl
in
mov
pop
rcrb
mov
or
cmpsb
sbbl
subb
cmc
inc
les
je
fs
stos
sarb
cmc
lcall
dec
cwtl
push
aam
pop
in
push
shr
aam
scas
movsb
int3
out
gs
out
jmp
push
and
sti
push
push
test
push
push
add
data16
pop
je
add
sub
and
xor
xchg
cmpsb
add
pop
les
dec
push
mov
insb
or
call
jae
cld
test
inc
ds
mov
xor
cmc
push
int
xchg
adc
cmp
fwait
jl
shll
jae
iret
nop
jb
pushf
mov
jge
pushf
cmc
inc
sbb
push
insb
mov
and
imul
mov
add
sbb
out
fs
push
dec
clc
stos
pop
outsb
dec
jae
sbb
stc
pop
inc
out
in
loopne
add
ss
insl
mov
stos
rclb
xor
cltd
push
adc
add
sar
pop
push
and
mov
or
add
mov
test
stos
dec
push
dec
jne
add
fsubl
call
xor
fcmovnbe
dec
lret
jne
hlt
xchg
mov
push
roll
xor
jl
int
dec
jae
cmpsl
dec
icebp
lock
es
loop
push
mov
jge
sub
fldcw
test
cmpsl
dec
testl
mov
bound
movsl
test
jecxz
sbb
fnsave
xchg
lret
inc
aaa
shlb
jb
imul
mov
or
es
inc
mov
nop
adc
mov
ja
mov
sahf
mov
mov
fisttpll
cmpsl
mov
or
call
sbb
in
fdivrl
jno
cmp
cmp
out
or
popa
stos
notl
adc
repnz
testb
lods
mov
mov
pop
lds
and
xchg
pusha
mov
movsl
push
insl
add
add
into
loope
cld
cwtl
pushf
ret
leave
xchg
out
jge
imul
xlat
inc
out
fcomp
lea
cld
outsb
adc
inc
clc
fwait
aam
push
orb
or
ljmp
mov
sbb
sbb
loope
mov
push
fistpl
cld
dec
mov
inc
push
adc
fildll
and
dec
cmp
inc
pop
jge
addr16
push
mov
nop
jb
sub
dec
dec
out
mov
movsb
mov
jmp
aaa
pop
add
clc
in
or
mov
mov
jl
xchg
push
xchg
insl
shll
gs
sbb
jge
repz
mov
je
mov
sarl
enter
pop
lock
fcoms
clc
gs
add
cld
in
addr16
push
jle
lea
add
cmp
in
add
rorb
ds
xchg
cmp
mov
in
jb
xchg
inc
stos
aam
push
adc
pop
xchg
pop
mov
pxor
add
fdivr
sbb
loopne
jecxz
mov
xor
subps
test
shll
inc
call
imul
sbb
inc
xchg
or
pop
mov
aas
inc
cmp
jo
push
adcb
aam
sub
inc
fdivrp
jnp
repz
push
push
sti
mov
dec
sub
movsl
mov
add
fnstcw
test
aam
mov
dec
jb
inc
sar
jmp
pop
fdivrs
mov
dec
clc
pop
add
mov
push
dec
enter
test
lcall
mov
int3
addr16
sbb
dec
mov
scas
mov
inc
mov
int
out
add
lcall
fisubs
lahf
mov
sbb
sbb
xor
and
leave
mov
jecxz
xor
fstpt
sbb
mov
pop
dec
or
and
dec
aas
pop
mov
xor
xor
xchg
xor
cwtl
dec
test
mov
dec
dec
inc
jp
mov
pop
sbb
jae
hlt
sub
mov
fcomps
mov
xor
mov
inc
cmp
js
fcomps
push
test
xor
sahf
test
stos
mov
mov
or
loopne
xchg
push
cmpsb
cmc
xor
gs
shrb
pop
cmpsl
nop
xchg
aam
cmp
cwtl
mov
pop
jmp
clc
or
nop
xchg
fsubl
mov
shll
addr16
cmpsb
lret
mov
xchg
add
push
xlat
mov
rcl
mov
stc
orl
xor
cmc
mov
sti
cld
inc
not
out
jno
jnp
movsl
imul
bound
mov
movsb
xchg
pop
cmc
sub
xchg
and
icebp
jbe
jbe
inc
nop
ret
das
outsl
stc
aaa
xchg
sahf
les
mov
mov
or
inc
mov
icebp
xor
outsb
cmp
fmul
roll
add
jns
fsubl
mov
sbb
cwtl
adc
pop
jbe
add
stos
insb
loop
popf
pop
mov
push
scas
cmp
inc
enter
sub
jne
fimull
adc
lahf
xchg
imul
push
or
or
inc
push
cmp
lcall
pop
jle
cmp
adc
mulb
add
dec
roll
arpl
aaa
mov
int
cli
divl
inc
in
loop
fwait
int
dec
mov
pop
add
push
xor
and
pop
cmp
test
rolb
or
aad
movsl
outsl
mov
add
lcall
xchg
mov
lcall
mov
sti
adc
mov
and
iret
shrb
pop
daa
or
rol
pop
push
sub
or
dec
mov
daa
sbb
jmp
and
mov
sbb
inc
push
movsl
out
pop
fs
cmp
push
cmpsb
addr16
dec
test
addb
inc
push
jb
jae
loop
push
fdivs
imul
nop
push
or
imul
push
les
je
mov
clc
sahf
outsl
js
loope
movsl
cmp
or
push
push
pop
dec
into
nop
lcall
inc
xchg
or
rorl
dec
sbb
fwait
mov
loopne
inc
inc
fistl
pop
xor
sub
aas
ret
scas
dec
leave
push
pusha
imul
inc
or
imul
icebp
add
in
ret
icebp
dec
inc
xchg
rcll
mov
in
lret
push
xor
jb
jno
sbb
jge
inc
push
jecxz
dec
mov
jl
jbe
cmp
call
dec
and
lret
add
mov
jmp
pushf
mov
sbb
aam
or
pop
and
xor
mov
nop
mov
pop
lods
mov
clc
mov
cmp
jmp
mov
and
and
loop
jae
mov
sbb
xor
mov
xchg
aaa
mov
adc
and
jae
je
stos
jl
cli
fs
adc
push
add
int3
test
mov
in
shrl
pop
ficomps
mov
push
dec
adc
pushf
popa
sbb
outsl
imul
mov
fidivrl
lods
scas
test
adc
jmp
add
pusha
mov
in
out
cmp
leave
lahf
imul
xchg
xor
adc
inc
dec
cmp
das
cmp
mov
pop
repnz
scas
dec
sbb
push
jge
mov
xor
pushf
js
sub
data16
mov
sub
iret
addr16
or
xchg
shll
ja
adc
mov
cmpsb
loopne
aad
cmp
cmp
sub
and
push
dec
jbe
or
call
les
js
outsb
in
push
cmp
cs
and
imul
or
xchg
repnz
mov
in
xchg
in
push
cmp
xchg
dec
sti
test
sbb
or
pop
repnz
lcall
std
cwtl
sbb
sbb
xchg
mov
dec
data16
js
push
and
movsl
push
lcall
dec
jle
pop
ffree
xchg
push
nop
lods
mov
or
popf
jmp
out
lret
dec
mov
out
pop
xor
fiaddl
sbb
mov
imul
clc
loopne
inc
loope
clc
mov
test
push
mov
push
jle
jle
loop
cmp
push
pop
fadds
push
jbe
sub
jb
into
push
cmpsl
das
int3
les
dec
cld
mov
loop
and
cld
jne
cltd
test
stos
adc
arpl
sar
andb
mov
dec
in
cwtl
sub
ljmp
dec
ds
xorl
mov
test
lds
hlt
ret
push
pop
fdivr
push
into
xlat
lds
lods
rolb
stos
and
dec
cld
adc
pop
inc
jb
add
add
adc
bound
pop
dec
stos
test
push
in
cmp
dec
pop
out
jns
sbb
sub
divl
mov
xor
push
mov
rcrb
outsb
out
mov
push
or
pop
add
jne
les
loope
cs
enter
pop
mov
movsb
lret
cmc
push
pop
shlb
jbe
call
lods
std
push
into
mov
mov
rorl
mov
sub
lahf
sub
loopne
fwait
push
js
jmp
clc
rorb
lahf
xchg
scas
icebp
movsl
mov
mov
mov
sti
jne
xor
push
gs
movsl
adc
jb
inc
or
aad
dec
adc
lock
mov
inc
mov
mov
or
call
fmul
push
das
dec
mov
movsl
pop
adcl
pop
outsl
inc
imul
dec
xor
xchg
xor
ljmp
cltd
or
testb
sti
out
js
leave
and
xor
fisttpl
fxch
movsl
je
std
cmp
inc
sahf
mov
push
sti
mov
pop
repz
mov
cld
cmc
xchg
and
dec
hlt
lock
xchg
fbstp
nop
jbe
enter
fdivrp
push
adc
data16
test
test
adcl
pusha
mov
fwait
test
sub
adc
lds
in
in
xor
or
push
pop
dec
out
xlat
jle
sbb
jae
jb
mov
sub
mov
fsubp
fdivrl
jle
out
fcoms
clc
inc
sub
push
and
inc
jg
xchg
dec
inc
xchg
cmp
xor
in
push
lret
cmp
jl
cmp
in
and
aas
faddl
mov
int
int3
cmc
cmpsb
scas
shr
mov
adc
enter
ja
adc
pushf
cli
mov
int3
mov
lock
test
insb
jmp
xor
loopne
add
lahf
leave
xchg
inc
js
hlt
lret
adc
aad
dec
enter
dec
adc
pop
adc
mov
movsl
cmp
lds
popf
or
cmp
rorl
pushf
mov
int3
add
fldt
jnp,pn
push
enter
sahf
mov
lahf
jp
out
sti
ret
cli
xchg
popa
push
push
ds
mov
es
or
test
jge
pop
dec
sahf
jge
cmc
push
xchg
push
js
rcrb
loop
push
leave
mov
mov
mov
sti
jae
push
cmp
xchg
add
cmpsb
scas
mov
xchg
cwtl
es
jge
push
mov
jmp
mov
cmpsl
mov
push
dec
stc
cmpsb
in
push
out
mov
clc
mov
cmp
cmpsl
aas
scas
inc
out
adc
inc
jmp
mov
or
repnz
inc
push
sub
aad
imul
cmpl
push
call
and
xor
fmull
xchg
in
cmp
test
es
stos
insb
shrl
ljmp
scas
mov
jp
ja
fnstsw
jge
cmp
mov
jbe
sahf
dec
lea
fnsave
xor
testl
and
loopne
jge
xorb
xchg
repnz
inc
scas
ror
int3
add
rclb
fsubl
sbb
xchg
push
iret
in
xor
and
scas
dec
push
sti
sbbb
fmul
mov
cmpsb
out
scas
mulb
loopne
loope
std
outsl
lea
leave
psubsw
cwtl
adc
xor
cmp
sbb
pusha
xchg
outsb
repz
outsb
mov
inc
adc
inc
popa
add
insl
addr16
xchg
push
add
sub
repz
pop
outsb
test
fwait
jae
dec
mov
nop
aas
fnsave
or
push
les
imul
and
push
addl
rorb
adc
mov
fisubl
cs
aam
lahf
cmp
inc
imul
or
xor
iret
jb
jecxz
adc
fwait
sub
sub
fists
cmp
mov
decb
fdivs
xchg
mov
jle
inc
iret
and
movsl
pop
pop
scas
inc
pushf
add
or
movsb
ret
push
ret
stos
and
repnz
in
mov
cmc
adcl
add
jo
push
addr16
cmp
ja
dec
aad
mov
fwait
pop
mov
fisttpll
inc
push
nop
push
ret
pop
add
mov
or
mov
fdivr
adc
addr16
xchg
hlt
arpl
les
outsl
mov
fisubl
mov
call
or
pop
and
stos
push
mov
dec
add
dec
sbb
scas
cld
fisttps
mov
adc
push
mov
pusha
mov
orb
push
add
dec
fidivl
sub
jnp
mov
rcrl
pop
cmp
test
psubw
inc
dec
inc
and
pop
inc
jno
rorb
inc
test
test
sbb
mov
push
jle
in
subl
daa
inc
mov
and
div
adc
jno
or
hlt
insb
push
jno
sub
cmc
fstp
inc
fwait
test
mov
pop
mov
call
xchg
pop
pop
bound
pop
and
jae
rorl
sbb
aam
cld
in
adc
jne
adc
or
add
mov
or
fwait
push
sub
jno
push
enter
xor
mov
mov
xchg
outsl
and
addr16
and
and
mov
mov
test
fs
push
fcmovu
lea
mov
stc
std
jp
mov
jp
mov
insb
das
mov
clc
inc
test
and
in
mov
xor
jge
mov
push
dec
stc
imul
jge
pop
xor
mov
sahf
xchg
jl
mov
hlt
popa
xchg
movsb
xchg
xor
shrl
dec
lahf
pop
cld
inc
movsb
inc
bound
lret
js
push
cmp
sub
sub
cmpsl
fsubs
addr16
frstor
mov
lock
bound
imul
cmp
fbld
cmovle
jg
ficoms
scas
mov
idivl
pop
je
scas
std
in
movsl
sub
jp
add
aad
jno
xchg
cmpsl
and
sarb
stos
push
pop
ljmp
cmp
bound
jmp
sub
movsl
mov
xchg
dec
inc
sbb
add
xchg
lea
jno
push
mov
aam
inc
xor
movsb
loopne
test
cmp
or
cmp
jp
pop
fnstsw
lods
cltd
out
rcl
add
repnz
inc
imul
mov
jns
and
adc
add
mulb
in
push
jp
mov
jecxz
roll
dec
les
add
mov
rclb
jnp
std
and
dec
mov
jecxz
movsb
jmp
xor
inc
jp
movsl
aas
je
shll
add
sub
leave
repnz
xchg
mov
push
les
arpl
jl
mov
std
add
ljmp
or
out
push
sub
lock
cmc
mov
dec
jo
cmpsl
in
movsb
sub
es
jae
xchg
mov
pop
sbb
or
mov
mov
test
out
pop
loopne
sub
or
and
test
pop
test
dec
stos
sarl
sub
pop
jno
xor
cwtl
fldl
mov
sbb
movsb
or
pushf
arpl
cmp
iret
loope
enter
fcmove
test
adc
cmp
xchg
pop
aad
push
jns
out
scas
mov
stos
rcrl
mov
mull
daa
adc
and
addr16
xchg
into
jbe
inc
out
enter
bound
push
sbb
int
push
push
jmp
xchg
jle
sbb
push
rolb
pshufw
shlb
daa
ss
jbe
jmp
std
roll
sbb
jecxz
mov
jecxz
movsl
ja
jmp
xchg
in
mov
in
inc
adc
sarl
lea
xlat
dec
aam
adc
jecxz
fidivrs
mov
sub
xor
mov
push
jl
mov
std
mov
xchg
lea
xchg
or
mov
push
pushf
shl
pop
cmpsl
je
insl
out
sarl
bswap
lods
dec
popa
rcrl
add
lods
mov
daa
mov
mov
and
or
push
push
fucom
jmp
iret
add
pop
ljmp
and
aam
add
push
push
jns
iret
popl
cld
sub
mov
xorl
sbb
lahf
pop
addr16
xchg
addr16
mov
sbb
ljmp
and
cmp
pop
mov
jle
jae
mov
inc
xchg
and
imul
in
fisubrl
and
aad
or
mov
jle
pop
xchg
dec
sbb
and
aaa
das
je
inc
sub
loope
out
ljmp
xchg
flds
mov
hlt
into
in
insl
pop
xchg
adc
sbb
cmpsb
cld
addr16
mov
push
fldenv
dec
leave
mov
jmp
in
mov
mov
mov
dec
bound
aas
in
jl
lret
jns
sbb
mov
mov
mov
jo
inc
lods
pop
aaa
push
idivb
adc
or
inc
ret
xchg
std
fwait
imul
adc
push
fists
fisttps
jl
lods
sub
popf
xor
in
push
pop
xchg
mov
cmp
cs
lock
dec
repnz
mov
inc
scas
imull
dec
in
push
testb
jp
mov
xchg
popa
and
push
cmp
cmp
test
lock
xchg
stos
jp
into
push
inc
fidivrl
push
push
mov
inc
sub
and
dec
lea
cmpsl
xchg
test
sbbb
add
jecxz
dec
push
lea
nop
fxch
into
sub
fdivrl
pop
push
push
dec
stos
xlat
aaa
xor
mov
flds
lahf
fisttpll
mov
dec
sbb
mov
mov
cmp
aam
fidivs
dec
mov
add
dec
ficomps
loop
loop
adcb
inc
sbb
out
fists
inc
nop
add
lods
fwait
aam
mov
push
mov
and
dec
lea
divb
dec
sbb
insb
mov
mov
lret
sbb
nop
sbb
stos
push
insl
frstor
fcoms
imul
or
iret
loop
sbb
repz
mov
xchg
scas
pushf
incl
ljmp
pushl
xor
outsb
iret
fnsave
loope
stc
rorb
push
out
rcll
mov
cs
push
call
xchg
pushl
ds
inc
lods
inc
adc
cmp
jae
bound
popf
pand
mov
and
enter
rorl
push
rclb
mov
aam
dec
add
scas
xor
orb
mov
fdivl
cmpsl
repnz
xorb
jnp
mov
outsb
xchg
dec
inc
aam
xor
and
dec
cmp
je
sbb
repz
dec
int
insl
movsl
dec
xor
add
loop
mov
push
jo
lock
loope
or
fs
repz
mov
call
push
cmpsl
sub
sub
or
or
cmc
xchg
jne
add
mov
pop
xchg
shr
or
mov
pop
call
xchg
sbb
out
push
test
mov
mov
int3
lods
gs
mov
dec
das
into
jne
shll
sti
orl
cmp
data16
jp
and
js
fldt
inc
mov
hlt
cli
jg
frstor
rcrl
pushf
sub
fnstsw
aad
sbb
push
loopne
mov
test
adc
imul
leave
lret
add
and
in
mov
jp
jmp
cmp
stc
into
fisubs
mov
sbb
push
jge
xchg
xchg
ret
je
cmpsb
das
aaa
xchg
xchg
arpl
inc
add
mov
ds
sub
loopne
popf
push
adc
mov
mov
mov
xor
clc
xchg
fmull
outsb
pop
scas
dec
xchg
xchg
mov
mov
in
scas
cmpxchg
or
js
adc
and
pop
cli
fcomps
xchg
xor
pushl
gs
addr16
enter
jnp
lock
xchg
lods
out
dec
cmovno
rorb
fldcw
mov
add
jl
notb
sahf
mov
fwait
or
inc
rcll
mov
iret
push
adc
xor
sub
or
cmpsb
nop
popf
inc
iret
pop
popa
rcrb
push
mov
push
in
add
test
adc
or
enter
xchg
jbe
std
gs
cmpl
loopne
mov
dec
dec
out
jmp
syscall
mov
roll
dec
aaa
lds
sbb
imul
movsb
or
mov
pop
in
insl
cmp
sub
push
sarb
xchg
jl
dec
xchg
mov
sub
cmp
aad
in
xchg
and
mov
add
fstpt
test
adc
add
pusha
xor
inc
lods
mov
or
fxtract
push
pop
mov
jns
addr16
pop
adc
push
roll
test
icebp
jns
push
dec
das
jl
xchg
push
aam
stc
test
stos
pop
cmp
or
icebp
daa
or
push
mov
rorb
push
sbbl
mov
rcll
dec
xchg
and
jbe
sub
lahf
ljmp
sub
test
inc
pop
loop
popf
andl
pop
out
mul
push
lods
xchg
dec
rcl
mov
insl
xchg
into
fisubl
dec
sbb
inc
and
lahf
ljmp
cmpsl
rcrb
xor
addb
jg
stos
push
fwait
adc
mov
rcll
mov
cmp
xor
pop
cs
test
insb
fld
test
jp
push
push
enter
dec
or
jbe
mov
ret
ja
mov
or
dec
sti
pop
push
jo
mov
adc
sub
add
add
pop
xchg
lcall
cmp
fdivs
imulb
arpl
vcvttsd2usi
mov
jg
lea
or
inc
inc
pop
imul
jne
jmp
test
mov
lods
push
cmp
test
fcoms
shl
inc
fwait
inc
ja
dec
mov
mov
rolb
add
fildll
ds
iret
into
xlat
imul
cmpsb
stos
mov
add
stc
lahf
cmp
ret
in
inc
mov
sub
sbb
pop
movsb
xor
loop
lock
xlat
mov
out
sahf
out
iret
adc
inc
imul
lock
sbb
mov
adc
bnd
jo
scas
decl
or
test
ljmp
cli
call
push
jecxz
jne
xor
enter
in
je
je
imul
sahf
ud0
arpl
push
scas
xchg
imul
mov
test
and
mov
lret
sbb
std
mov
pop
cmp
ljmp
push
lret
into
les
jle
lahf
sbb
fstpt
sbb
and
inc
out
pop
out
mov
inc
iret
icebp
and
mov
test
mov
sti
fsubr
mov
scas
mov
cmc
mov
xor
sbb
add
stos
push
inc
movsl
rcrl
inc
lds
fs
movsb
jp
jbe
mov
loope
and
in
dec
mov
mov
pop
jl
cmp
jae
inc
stos
fbld
imul
pusha
test
push
insb
mov
loope
sbb
or
jno
add
cmp
loop
adc
jmp
push
jmp
adc
icebp
mov
sahf
dec
and
test
pushf
lds
loope
jg
loop
sbb
push
outsb
clc
mov
and
jge
mov
nop
ficompl
aad
lds
pop
dec
push
sub
or
xchg
rcll
into
inc
lea
and
rcl
cld
xchg
dec
es
pusha
pushf
cmpsb
jb
gs
mov
cmp
out
sbb
xor
mov
outsb
dec
xchg
jg
lods
push
dec
pop
imul
aaa
das
out
add
out
push
cs
pop
dec
mov
sbb
scas
out
aaa
mov
sbb
fmul
leave
addr16
jecxz
sahf
xchg
jno
push
ljmp
loopne
cmpsl
ret
dec
push
dec
in
lods
mov
and
mov
add
adc
xor
xchg
and
xchg
rcr
push
jae
fimuls
test
jecxz
test
add
scas
in
ret
pop
mov
xor
mov
adc
loopne
push
loope
leave
in
sahf
pop
movl
jb
scas
add
adc
inc
push
int
mov
aaa
stos
mov
rorl
mov
scas
dec
repz
and
ja
mov
jl
jae
pop
movb
repz
pushf
mov
out
lock
xor
or
in
mov
cld
adc
add
fucomp
jb
insb
inc
jb
xlat
jl
aas
outsb
ljmp
das
iret
mov
push
xchg
sub
mov
jb
dec
in
dec
jne
adc
dec
adc
loop
jnp
lods
push
dec
dec
sbb
andps
push
adc
mov
cmpsb
xor
fcompl
mov
fidivs
pop
lret
mov
push
sub
jmp
scas
dec
pop
mov
ud2
imul
add
xlat
cwtl
pop
out
or
sti
pop
mov
push
out
roll
jl
push
sub
mov
push
xchg
imul
addr16
or
jnp
clc
pop
mov
push
aam
aas
addr16
fildll
dec
ret
sarb
out
mov
pop
mov
xor
jae
sarb
sti
mov
fwait
out
imull
cmpl
andl
adc
leave
out
sbb
mov
leave
and
rcrb
gs
popf
in
xor
xchg
jp
lods
int
sbb
xchg
cmc
lods
inc
sbb
adc
call
pop
loopne
lret
fistpl
outsb
cmpsl
ret
xor
dec
out
jp
dec
add
pop
fistpl
arpl
in
rcrl
test
xchg
movsl
jae
fs
jno
mov
rol
push
mov
dec
int
std
jo
bound
pushf
stos
push
jbe
ja
mov
leave
and
mov
in
iret
adc
jp
and
daa
xchg
ret
mov
push
push
push
push
mov
fdivrp
movsl
jle
adc
sti
cwtl
xchg
jle
dec
add
shll
push
fldt
nop
not
nop
jg
jl
hlt
push
inc
es
and
movsl
shlb
xchg
pusha
decb
jge
dec
jecxz
or
js
and
sbbb
js
jns
insb
sbbl
repz
or
add
sub
into
jle
insl
mov
mov
dec
les
push
mov
les
out
das
jnp
into
scas
sbb
pop
aad
or
xchg
jl
shrb
out
push
mov
call
mov
and
outsb
fcoms
and
push
mov
pop
mov
fprem
enter
sub
pushl
and
mov
scas
xchg
rcrl
xchg
and
rorb
shl
faddp
add
imul
scas
mov
or
loope
fsubs
sub
std
push
imul
pop
das
dec
hlt
xor
test
jnp
ja
xchg
mov
push
push
mov
cmp
orl
dec
stos
push
movsb
push
inc
push
xchg
jbe
pop
mov
jecxz
pop
push
or
icebp
enter
mov
xor
lods
aam
lods
pop
mull
adcb
ja
sbb
and
mul
inc
xchg
xor
add
cmc
pop
xlat
les
mov
and
std
je
lahf
xchg
or
inc
and
mov
or
mov
xchg
outsl
mov
dec
subl
pop
bound
mov
iret
push
dec
cwtl
loope
lret
aad
out
inc
hlt
test
mov
adc
ret
repz
data16
js
loop
daa
shrb
mov
dec
jae
mov
test
pusha
repz
into
jl
pop
inc
lock
cmp
jo
or
shll
aas
mov
lcall
loopne
jp
cs
dec
shl
leave
gs
dec
jge
movsb
and
dec
lods
push
cmpsb
movsl
or
ja
andl
ljmp
xchg
sbb
fidivl
pushf
push
push
sub
dec
adc
nop
jg
das
divb
xchg
push
clc
dec
cmp
mov
add
xor
jle
mov
xchg
loop
cmp
jg
push
cmc
jecxz
lods
mov
xchg
ret
cmp
sbbb
adc
pop
mov
push
mov
xchg
jo
xor
flds
and
fbld
sahf
xor
and
outsl
aaa
sti
xchg
fdivrl
xchg
or
jge
jl
lds
mov
and
add
fsubl
fwait
adc
lcall
pop
clc
adc
xchg
pop
cmp
stos
mul
aaa
add
adc
jo
sbbb
jle
scas
loopne
xchg
test
sbb
xchg
mov
rcll
bound
cmp
addr16
aad
sbb
inc
daa
jnp
sub
fmulp
dec
fildll
test
inc
push
pop
iret
and
dec
rcll
mov
repz
cmp
jp
mov
pop
jnp
idivl
or
shr
inc
int
scas
stos
loopne
sbb
testl
lock
in
or
xchg
add
mov
aaa
dec
inc
inc
jo
push
cmpsb
xchg
adc
or
stos
daa
adc
mov
lret
dec
sbb
out
or
cmc
jne
sub
and
jmp
xorl
mov
jge
sbb
idivl
pop
jae,pn
add
sbb
sbb
aam
dec
sbb
in
cmpsb
cmp
jno
scas
sti
mov
push
jb
fucomip
stc
cmc
pop
call
data16
daa
loopne
clc
bound
mov
mov
sub
xor
mov
cld
cli
xchg
test
add
icebp
rclb
cmpsb
fildll
test
sub
cmp
sbb
call
inc
xor
sbb
xor
mov
inc
mov
or
adc
pop
jecxz
test
push
pop
aas
decb
xchg
and
push
pop
push
pop
add
push
std
adc
fstps
lret
push
cli
dec
add
xor
inc
ret
out
mov
nop
jmp
cmp
cmp
psubq
ja
cwtl
sub
pop
cmp
or
jmp
inc
insl
push
sub
mov
dec
pop
or
into
loope
mov
or
jmp
cmpl
add
popa
outsb
pop
xor
jmp
dec
jae
xchg
xor
pop
testl
into
dec
jne
xchg
aam
inc
das
xchg
push
adc
lcall
sub
or
pop
dec
add
xchg
lcall
movl
je
add
std
and
pushf
icebp
cmp
test
xor
cmp
push
pop
xor
push
pop
stc
leave
mov
pop
push
adc
aam
stc
mov
sub
cmpb
inc
or
movsb
mov
adc
arpl
pushf
movsb
in
clc
push
pop
xchg
pop
mov
xchg
loop
inc
enter
jns
cmpsb
jecxz
pop
test
fs
std
out
push
jns
adc
loope
xor
sti
inc
inc
pop
xchg
adc
adc
jo
pop
stos
xchg
or
int
lods
clc
cmp
sti
dec
les
adc
mov
popa
and
inc
jp
aam
push
fstl
lds
ficoms
pop
add
mov
dec
fildl
xor
inc
xor
xor
out
mov
sbb
aad
cmp
popf
lea
cs
pop
stc
imul
insl
js
mov
jmp
fs
shlb
fistpll
lds
add
cld
mov
adc
cmpl
jnp
pop
aaa
stos
add
mov
je
jne
notl
and
cli
mov
lods
jnp
das
popa
pushf
xchg
mov
adc
xchg
mov
ljmp
mov
inc
sub
bound
imul
sbb
cmpsl
and
push
sahf
stc
scas
clc
pop
pop
or
mov
xor
movsb
pop
mov
stos
enter
test
stos
movsl
icebp
sub
xchg
jg
dec
mul
push
stc
fcmovb
xor
call
in
int3
jne
sti
ret
mov
out
push
xchg
push
fildll
es
fs
fs
aam
mov
call
jno
int3
mov
repz
xor
jae
mov
pop
enter
cmp
adc
testb
adc
sub
aas
es
jge
mov
out
inc
xorb
jnp
into
ja
push
in
jbe
and
xor
movsl
cld
div
fadds
push
jmp
aaa
mov
push
inc
dec
int
dec
imul
inc
mov
into
sbb
push
mov
in
cltd
shr
and
or
test
or
cmc
and
push
movsl
cs
stc
xchg
jle
in
aad
inc
repz
push
shlb
sbb
fildll
pop
and
mov
fadd
mov
sbb
jl
pop
cwtl
xchg
xchg
push
push
xor
adc
repnz
xchg
jge
std
inc
fsub
ret
lock
fdivs
lods
push
mov
scas
adc
mov
xor
aaa
mov
pop
fidivl
aaa
or
lods
out
and
adc
jl
ljmp
mov
xchg
roll
int
scas
out
insl
pusha
xor
mov
or
arpl
push
pop
sbb
aad
jg
je
outsb
outsl
mov
jmp
push
add
fldln2
orb
les
sbb
pop
lret
fsts
imul
leave
adc
ret
push
ljmp
dec
pop
rorb
dec
jge
push
cmp
je
sub
and
test
add
jne
and
pop
mov
xchg
mov
pop
dec
stc
xor
dec
fstl
les
cmp
sub
outsl
pop
add
xchg
sub
mov
frstor
in
divl
aaa
loop
sbb
add
gs
mov
or
inc
jge
push
cmc
popf
sub
cmpsb
or
std
adc
xor
sbb
test
aaa
cmpsl
adc
enter
imul
adcl
outsb
push
frstor
out
pop
xor
xor
mov
scas
jmp
lcall
jle
push
adc
xorl
rclb
pop
inc
add
or
test
inc
je
mulb
adc
shrb
inc
icebp
xchg
xor
xchg
pop
xchg
inc
adc
imul
sub
repz
repnz
sbb
enter
mov
ja
scas
add
jl
dec
das
xchg
loope
mov
repz
cmp
adc
fnstcw
mov
lret
cmp
push
fidivl
sub
js
xor
test
push
sar
mov
rcrb
bound
mov
mov
call
push
fsubl
scas
jbe
hlt
jns
in
mov
test
and
adc
fs
insl
fcoml
stos
insb
popf
mov
imul
mov
or
into
push
adc
dec
xchg
scas
sub
ret
mov
dec
xor
aam
sub
loopne
xchg
orb
fimull
sbb
jns
stos
push
mov
test
xor
inc
mov
arpl
adc
xor
xor
inc
shll
jge
push
add
ret
cmp
sbb
bound
mov
insl
rcll
cmp
push
or
cmp
stos
cld
imul
adc
scas
xchg
cmc
sub
add
xchg
pop
push
mov
mov
sub
shl
dec
add
sbb
movl
addr16
or
xchg
addr16
xchg
mov
xchg
push
add
jbe
stos
int3
push
imul
mov
outsb
std
mov
jecxz
xchg
nop
nop
cmpsb
inc
loop
push
int
push
cmc
sbb
daa
cli
test
adc
fnsave
mov
loopne,pn
loopne
mov
cmc
and
scas
or
enter
sbb
cwtl
cltd
dec
jle
stos
fiadds
adc
flds
sub
mov
pushf
insl
mov
xor
cli
dec
aad
in
xor
lds
cmp
or
xlat
orl
xor
movsl
push
lods
sarl
je
sti
ret
mov
ret
jl
adc
pop
sub
adc
cmp
adc
jecxz
stos
pop
sub
test
imul
jno
ds
addr16
in
cld
lret
ljmp
and
addr16
out
cmp
shll
push
or
loop
jg
stc
sahf
fldenv
es
push
adc
xlat
cmpsb
push
dec
and
dec
iretw
mov
mov
pop
add
int3
mov
out
mov
cld
xchg
test
and
outsb
or
ss
mov
imul
in
daa
in
sbb
es
xchg
ds
push
mov
adc
in
add
mov
cmc
or
mov
ds
aas
inc
mov
std
stos
pushf
inc
push
lock
repz
xor
sub
ret
inc
push
pop
dec
lods
js
sub
xchg
filds
xchg
jl
sbb
enter
ds
mov
add
sub
or
push
mov
push
pop
mov
cmp
shlb
and
xchg
push
cmp
and
inc
js
sub
xor
inc
mov
mov
into
jl
cltd
jno
shll
dec
mov
daa
call
stos
mov
arpl
imul
gs
jo
and
mov
cwtl
rcrl
cmpsb
and
bnd
jbe
jle
and
sub
mov
clc
xorb
aaa
int
adc
or
pop
dec
push
fldcw
scas
xor
lret
fidivs
cmp
push
mov
and
dec
cwtl
or
or
push
gs
inc
sbb
push
sub
pop
cltd
aas
aaa
cmp
lock
in
jge
jns
movsb
sub
enter
dec
sub
lock
dec
imul
les
in
rorl
mov
fnstenv
std
addr16
mov
adc
inc
pop
nop
dec
stos
inc
add
jg
jns
jbe
mov
test
stos
flds
rcrb
mov
std
popa
adc
or
xor
shl
dec
push
add
mov
cmp
lock
loop
lahf
cwtl
cli
fcomps
sbb
aaa
andnps
inc
insb
mov
daa
mov
dec
stos
cmp
and
ss
sbb
out
xor
jnp
dec
iret
rol
mov
sahf
lahf
sub
insb
dec
cmp
fwait
xchg
cmp
pop
ret
out
jmp
mov
call
xor
dec
pop
xchg
cmp
rcl
ljmp
inc
adc
clc
icebp
gs
sbb
sub
pop
mov
iret
outsl
mov
shl
fnsave
pop
adc
orb
ja
sub
sub
push
movsb
cmp
jge
ss
mov
neg
adc
leave
and
pop
xlat
loope
push
jns
mov
popa
sti
int
daa
pop
faddl
pop
ret
or
add
and
idivl
xchg
sahf
imul
jecxz
jb
ds
xchg
ss
jecxz
imul
jmp
rcrb
jge
int
cs
add
or
aam
jne
ja
jle
mov
popa
mov
push
jo
stos
jno
push
push
mov
add
dec
push
add
pop
fisubl
xchg
dec
inc
cmp
and
xchg
lds
push
sbb
sub
xchg
repz
mov
aaa
out
test
ret
adc
faddl
pop
jb
adc
xor
pop
test
iret
push
push
loope
out
push
push
mov
jae
adc
rclb
lods
bound
jo
mov
add
dec
popa
jmp
sub
and
adcl
jns
mov
sti
jge
loope
mul
sub
sub
jno
mov
adc
inc
test
jle
stc
pop
rcll
imul
push
out
push
push
xchg
cmp
loopne
je
lret
dec
cmpsb
xor
lret
inc
pop
dec
loope
push
jnp
hlt
call
mov
adc
lret
push
nop
movups
push
sub
adc
bound
in
js
xchg
mov
push
in
ss
clc
rcl
loop
adc
pop
ljmp
sti
jo
lret
or
shl
mov
mov
dec
xchg
push
adc
imul
sub
xchg
jne
cmp
sbb
push
jg
ret
scas
adc
stos
div
aad
subb
and
adc
stos
add
mov
andb
sbb
cmpsl
daa
je
fldl
xchg
xor
test
jb
pusha
ret
sub
dec
cli
fldenv
mov
mov
sbb
jno
fs
das
and
outsl
fwait
mov
jge
movsb
pop
inc
es
xor
sbb
dec
pop
stc
mov
mov
mov
scas
rol
data16
js
shlb
xor
gs
sarl
aad
outsl
jb
or
dec
adc
pushf
adc
mov
inc
fildl
pop
inc
pop
inc
pop
test
push
dec
and
out
cmpsb
sti
push
xor
xchg
mov
xor
mov
adc
sub
or
sub
int
sbb
mov
nop
cmc
jl
xor
add
pop
push
xor
aas
push
cld
or
push
pop
arpl
sub
and
arpl
mov
push
shll
sti
or
sub
push
jno
insb
cmp
lock
or
mov
dec
mov
stos
adc
mov
les
lret
dec
push
ja
push
dec
in
mov
dec
sub
jns
or
mov
iret
lock
jmp
mov
xchg
push
fbld
hlt
adc
push
inc
les
mov
cmp
push
lret
jae
test
push
adcb
push
jmp
cs
jae
scas
xchg
inc
clc
mov
add
cmc
out
repnz
fidivrl
fmull
shll
pop
inc
sti
and
sti
sbb
rol
dec
sbb
test
inc
loopne
mov
dec
push
out
es
mov
jne
sub
in
hlt
call
addr16
stc
dec
test
xchg
sub
and
xor
out
jge
frstor
pop
jnp
xchg
ror
addr16
add
mov
fadd
nop
in
pushf
and
sbb
push
xchg
push
je
aad
jp
xchg
lock
leave
push
mov
scas
cmp
pop
lcall
mov
xchg
push
rcr
leave
popf
int
xor
cld
jmp
mov
rcl
les
dec
aaa
pop
leave
xchg
xchg
lods
dec
mov
fs
mov
mov
dec
jae
sarl
sub
cli
sub
cmp
std
adc
cmp
mov
fcompl
repz
out
fists
jg
out
fucomp
mull
sbb
notl
sub
adc
mov
mov
loopne
cmp
xchg
addl
xchg
je
and
or
popf
adc
mov
mov
add
mov
sub
xchg
or
xchg
pop
rclb
push
aad
inc
int
jno
inc
cmp
mov
adc
or
lods
push
test
in
adc
sbb
mov
xchg
cmpb
fucomp
xchg
jbe
inc
out
test
inc
sbb
push
add
inc
push
sbb
and
daa
icebp
ret
stos
push
lea
das
icebp
dec
jnp
imul
fs
test
subl
sub
ds
rolb
lahf
cmp
lods
push
sti
mov
mov
sbbl
les
adc
dec
pop
aaa
test
mov
fdivr
push
clc
jnp
andl
addr16
ja
lret
sbbb
sarb
sub
mov
das
inc
popl
rcl
cli
adc
dec
jb
adc
add
movsl
push
nop
popa
ret
pop
xchg
cmp
sahf
adc
xor
mov
test
push
and
sub
cmp
mov
mov
mov
or
mov
addr16
mov
cmp
rorl
push
pop
popf
pop
sub
cmp
stos
sahf
ficoml
push
add
movsl
sti
lds
test
test
and
mov
pusha
negb
jnp
rcrl
cmpsb
inc
lret
adc
mov
push
out
inc
shll
testb
xchg
aaa
push
arpl
mov
add
xchg
pop
cltd
dec
scas
dec
aam
dec
pop
mov
jmp
push
pusha
out
add
adc
inc
loopne
pop
mov
lock
lock
push
push
outsl
push
nop
out
push
insb
fidivrs
cmp
inc
and
lds
adc
repz
ret
mov
pop
inc
mov
jbe
xor
adc
dec
aad
imul
test
lcall
out
loope
cli
xchg
dec
es
leave
mov
sbb
ds
jo
or
and
cwtl
fisubs
adc
lcall
mov
dec
jno
subl
dec
mov
cltd
jmp
lock
sub
repnz
outsb
cmp
fcompl
cmp
add
mov
cmp
cmp
into
or
jp
sub
insb
stos
pop
push
into
cld
rcr
popf
lock
add
push
dec
aaa
or
sbb
jae
dec
or
dec
fs
cmpsl
pop
dec
and
pop
int
inc
int
and
push
arpl
xchg
in
notb
push
icebp
sbb
and
fsubrs
xchg
dec
rorb
mov
enter
xor
loop
sub
mov
lea
mov
add
fdivp
inc
jno
lret
insl
sbb
xorl
push
mov
cmp
inc
inc
out
mov
ds
lock
ja
inc
mov
push
fdecstp
loopne
jge
dec
lcall
jno
lock
cmpsb
nop
ss
ljmp
pop
sbb
jb
fwait
roll
subl
and
add
push
pop
xor
adc
imul
decb
cltd
lock
int3
cmc
cld
nop
mov
push
es
stc
mov
sahf
int
ret
xchg
dec
push
xchg
aaa
jge
jle
adc
and
xchg
jae
xchg
int
fwait
jns
xor
add
xchg
inc
iret
sub
or
jmp
ret
stos
push
jp
xchg
jmp
sbb
inc
repz
mov
icebp
insl
mov
inc
lock
std
in
enter
test
push
mov
mov
cld
mov
push
add
xlat
inc
sbb
lods
mov
adc
mov
rclb
inc
dec
sub
push
std
mov
subb
pop
bound
outsl
lcall
inc
mov
jecxz
in
hlt
fs
mov
mov
incb
xor
mov
adc
xor
push
hlt
sahf
enter
xor
adc
cmp
sbb
jnp
mov
iret
mov
call
hlt
jns
sub
cmp
scas
xor
mov
les
inc
shll
xchg
aam
xor
xor
call
loop
jbe
xchg
push
jl
popa
scas
scas
fwait
jno
jae
push
xlat
outsb
xor
or
ss
insb
stc
or
lret
arpl
push
nop
jae
adc
xchg
loope
bound
push
mov
push
lds
ja
fwait
icebp
mov
and
stos
inc
and
test
pushf
in
ret
jle
out
or
mov
pop
bound
xchg
dec
push
jmp
sar
scas
sbb
test
inc
inc
sti
int
fldl
cmp
add
mov
in
out
aaa
jnp
or
push
add
cmc
shrb
sbb
cmp
jae
mov
pop
iret
sub
sub
mov
cmp
std
in
loop
sbb
pop
mov
nop
nop
xor
repz
test
loop
cwtl
hlt
sbb
js
in
jae
adc
push
jmp
gs
and
lock
add
mov
dec
scas
lret
mov
sub
push
mov
pushf
cmpsb
pop
dec
or
enter
sub
adc
sub
xchg
scas
jnp
loopne
icebp
xor
cmp
das
jg
jle
in
sub
dec
loop
adc
nop
repz
aas
mov
mov
mov
leave
mov
mov
dec
jle
test
cmp
outsl
fistps
inc
jnp
adc
pop
test
push
mov
insb
imul
iret
ljmp
dec
adc
es
sbbl
imul
test
pop
add
loope
hlt
lcall
test
stos
loopne
scas
jbe
enter
pop
leave
cmc
add
or
mov
out
add
sbb
xor
movsb
mov
loop
or
pop
xchg
inc
mov
or
push
mov
scas
and
in
mov
and
xlat
mov
push
les
movsl
mov
jno
testb
ljmp
lods
jle
inc
repnz
aaa
mov
pop
stos
inc
popf
dec
in
cld
sbb
scas
jle
adcl
out
cmp
jno
add
enter
inc
test
add
int
mov
and
push
and
fisttpll
orl
dec
dec
cmp
loopne
xor
jno
mov
inc
inc
and
mov
inc
sub
sub
add
push
jg
sub
lods
xchg
aam
roll
add
mov
sbb
lcall
add
push
cmpsl
cltd
imul
test
xchg
repz
mov
test
insl
and
in
dec
push
and
in
cmpsl
mov
jl
xor
ret
fbstp
mov
or
add
out
cmp
cmp
rcrl
and
push
aad
pop
rolb
jno
push
into
jbe
adc
add
adc
ret
sub
mov
test
mov
imul
push
jmp
cmp
jae
add
jo
adc
inc
mov
pop
xor
dec
rolb
jae
adc
cmp
lods
pop
mov
xchg
xlat
in
inc
inc
mov
pusha
dec
fcomip
xorb
push
jmp
jnp
stos
sub
sbbl
mov
mov
cmp
lret
cli
xor
ja
push
lods
cmp
int
xchg
and
sahf
mov
fbld
bound
call
cmp
ror
push
xor
push
fnstenv
mov
xlat
pop
fninit
or
xor
lods
lcall
or
push
popf
fiaddl
enter
sbb
jae
insl
adc
mov
mov
mov
add
inc
addr16
out
sbb
pop
movsl
movsb
adc
mov
xchg
cmpsl
push
and
call
and
outsl
jno
mov
les
stc
pop
and
add
push
adc
mov
dec
sub
sbb
test
movsl
or
stos
pushf
jo
jnp
gs
imul
sub
jl
rcrb
jo
dec
mov
imul
or
jnp
lcall
pop
cli
enter
cmpsl
sub
fdivl
sbb
leave
call
imul
lods
add
ffreep
or
dec
sub
or
lret
lods
jle
adcl
mov
push
jae
add
push
ret
adc
pop
jnp
xor
loop
bound
neg
push
scas
out
sub
push
add
xchg
add
mov
push
outsl
hlt
pushf
jp
mov
call
scas
test
lea
jne
push
in
sbb
dec
pop
jnp
cltd
int
jge
je
pop
and
cmp
xchg
and
je
cli
decl
jbe
mov
aam
jae
sbb
adc
xor
insl
jg
mov
into
fwait
popa
jecxz
add
jle
add
push
movsb
xor
loopne
test
rcll
xlat
fucomip
sub
lret
or
cmp
pop
xchg
or
cmpsl
inc
call
sub
fstpl
push
push
push
mov
add
cmp
push
clc
lahf
out
push
fiadds
ljmp
pop
pop
inc
inc
stos
jmp
stc
cmp
push
in
sbb
xor
test
adcb
std
negl
dec
push
test
xchg
insb
mov
leave
loop
test
out
add
cmp
and
icebp
fwait
lods
mov
jge
mov
mov
push
mov
test
lods
insl
popf
mov
in
jge
pop
mov
les
sysexit
xchg
jae
pop
cmp
arpl
aad
divl
mov
pushf
inc
loope
push
movsb
movsl
mov
mov
mov
push
lret
push
std
jl
out
add
rcrl
mov
mov
int
pop
xor
testl
pop
cmpsl
sub
push
mov
cmp
add
inc
pop
mov
push
shll
sbb
add
or
sub
or
pusha
xor
add
jno
imul
out
out
mov
jmp
xchg
xchg
cmpsl
pop
cld
ret
sbb
and
sbb
fists
sub
adc
cmp
or
xchg
movsl
sbb
lret
mov
push
xor
inc
int3
fidivs
ljmp
cmp
adc
loop
jne
lock
cmp
cmp
scas
jnp
jae
or
stos
les
xchg
pop
pop
jmp
or
mov
adc
lds
push
sub
xor
out
ret
insl
scas
int
imul
and
or
out
cmpsl
or
divb
xor
imul
pop
pop
shrb
ret
lea
mov
les
aad
pusha
add
int
jnp
pop
xlat
popa
xchg
and
popf
std
jne
aas
pop
stos
loop
lock
stos
movsb
and
push
mov
sbb
cmp
inc
pushw
cmp
pop
xchg
or
and
test
mov
pop
cmp
cld
int3
pop
stos
pusha
sbb
jle
inc
mov
xchg
call
hlt
push
cmp
call
test
sub
add
fdivl
adc
out
adc
push
xchg
dec
mov
js
cmp
push
mov
jo
adc
xchg
jle
add
inc
test
inc
mov
iret
add
ljmp
xlat
hlt
xchg
mov
jge
lea
in
mov
dec
cltd
std
lock
fnstcw
xchg
cld
aas
std
out
push
repz
inc
xchg
aas
inc
push
std
cmc
test
adcb
cmp
mov
fisttpl
adc
add
fsubrp
pop
add
mov
lock
ret
xor
addr16
sbb
push
mov
fnstcw
orb
cwtl
and
gs
mov
bts
xor
mov
shll
sub
fsubrs
outsb
test
sti
mov
push
xcrypt-cfb
cmpsl
and
sbb
sbb
mov
jnp
clc
jbe
outsl
mov
cmp
subb
inc
std
aas
mov
push
cmp
sahf
stos
xchg
dec
xor
repnz
cli
jno
das
ss
scas
cmp
test
push
jo
cmp
sarb
in
and
mov
das
dec
xchg
dec
sbb
and
aaa
jo
call
xlat
jp
es
test
cmp
in
jns
fs
pop
stos
cmp
sbb
add
xchg
sar
arpl
in
mov
ljmp
jl
mov
insl
adc
xchg
js
dec
push
out
dec
test
mov
cmp
lea
and
fstpl
mov
adc
sbb
inc
or
imul
scas
mov
aaa
subb
sub
test
xor
cmpsb
std
push
or
popf
pop
ret
test
mov
cmc
cld
call
js
jnp
lds
imul
sbb
adc
sub
lods
ljmp
test
push
mov
adc
sbb
cmp
push
xchg
push
sub
adc
das
jae
jg
mov
xchg
pop
jns
in
sub
mov
push
adc
ret
lods
inc
add
add
add
std
mov
xchg
jg
aas
sub
jge
push
inc
mov
ljmp
insl
orb
loopne
push
add
clc
shrl
xchg
test
mov
outsl
push
cmpsb
fs
adcb
fnstenv
pop
cltd
and
sbb
cmp
sub
sub
xchg
push
sysret
xor
stos
int
fldenv
inc
sbb
lds
pop
mov
nop
jbe
sub
aam
cld
inc
jo
pop
adc
jbe
and
cmpsb
test
sbb
jb
add
sub
sbb
xlat
or
lea
mov
mov
add
sbb
adc
push
push
mov
inc
and
fmul
jae
into
xor
dec
scas
ret
cmpsl
rcrb
stos
push
roll
fnsave
mov
pop
xchg
cmp
sbbl
movl
into
lret
jecxz
cmpb
xchg
aad
bound
cmp
rclb
das
jbe
xlat
scas
mov
dec
lret
std
fstl
scas
adc
clc
xor
ss
stos
sub
addr16
mov
dec
cmp
inc
inc
lods
mov
mov
cmp
cmp
bnd
xchg
mov
ror
addl
in
push
cmc
adc
jp
mov
cmpl
sub
sarb
mov
mov
mov
bound
sub
loopne
push
loope
icebp
loopne
aaa
mov
rcrb
fdivl
sbb
lds
xor
fnstenv
sub
inc
or
or
xor
outsb
xor
push
shlb
sahf
lock
jbe
push
testb
and
lea
lret
cltd
inc
aas
add
cmp
repz
data16
pushl
mov
loope
fsts
xor
stos
out
lods
movsb
mov
dec
fiaddl
iret
inc
sbbl
mov
ja
cmp
xchg
jne
cmpb
cmpl
insb
cmpsb
sti
push
in
stos
inc
insb
pop
jbe
sbb
jl
inc
jae
or
mov
fcompl
shrb
mov
jnp
mov
pop
repnz
xlat
andl
mov
into
ret
aad
in
mov
sbb
insb
push
and
cmc
out
jnp
mov
fistpll
push
out
pop
dec
xchg
xor
les
or
fpatan
repz
sub
xchg
insb
mov
jecxz
dec
push
pop
call
and
gs
pushf
pop
mov
xchg
and
add
mov
pushl
mov
shll
xchg
push
and
hlt
push
cmp
out
mov
cwtl
adc
sub
and
arpl
sub
loop
fldcw
push
ret
mov
dec
fwait
xorl
ficomps
aad
pusha
dec
outsb
push
popa
test
add
insb
popf
adc
into
dec
in
test
cltd
or
inc
xchg
jb
pusha
push
jns
imul
andl
cli
orl
ret
mov
in
dec
push
stc
dec
das
stos
add
sub
std
add
fwait
nop
inc
pop
pop
shl
or
sbb
cli
sti
or
and
jge
sub
pusha
iret
xchg
xchg
inc
jge
mov
lods
out
mov
mov
cmc
and
aam
cmpsl
pushf
in
inc
fwait
xor
jae
push
xchg
inc
mov
in
ljmp
inc
repz
cmp
sub
sub
insl
sahf
cmpsb
vminpd
imul
sbb
and
or
es
loop
pop
and
in
jp
test
mov
adc
add
and
dec
push
push
pop
aaa
sbb
adc
sbb
jne
inc
inc
xchg
cmp
jae
jne
sbb
adc
mov
mov
mov
add
insb
pop
inc
hlt
sub
and
pop
push
decl
push
cmp
lret
test
xchg
nop
dec
cmp
sti
loope
add
cwtl
insl
xchg
test
xchg
dec
iret
push
aad
xchg
sahf
scas
dec
leave
hlt
test
xorb
sbb
mov
and
inc
scas
pop
xchg
adc
push
push
push
adc
ret
push
mov
lea
or
mov
adc
insl
lock
cmp
inc
shll
loope
push
push
push
or
mov
mov
ja
and
mov
clc
cltd
push
mov
add
add
inc
pop
nop
or
pushf
flds
and
in
scas
cmp
les
shlb
out
rcr
stc
mov
stos
sub
ljmp
push
xlat
imul
stos
dec
push
adc
jg
mov
or
mov
fs
dec
jmp
das
fstl
inc
jno
push
sub
inc
loop
movb
daa
jmp
lahf
jle
push
jo
cmpsl
sbb
mov
lea
cmp
aam
and
loopne
pop
push
xchg
call
cmp
or
arpl
cmp
adc
or
xlat
push
sbb
xlat
ret
insb
fisubrs
mov
jmp
add
enter
cmp
mov
ret
and
jbe
sub
ss
testb
loopne
test
mov
in
es
xchg
mov
adc
arpl
std
mov
and
out
aas
repz
lret
aam
ficompl
out
mov
inc
scas
or
jb
mov
xchg
lds
cmp
sub
add
add
cmc
pusha
mov
push
pop
ficoms
cli
in
cmpsl
adc
lcall
add
dec
arpl
push
xchg
in
cmpb
popa
mov
mulb
std
push
sbb
mov
and
pusha
add
rolb
iret
dec
shlb
leave
dec
dec
and
xchg
int
xor
daa
pushf
inc
cmp
dec
pop
dec
mov
fcmovu
popa
pop
incb
and
iret
pop
lea
mov
jmp
xchg
sbb
push
lahf
daa
fwait
mov
sarl
repnz
and
fdivl
nop
pop
lods
xchg
mov
mov
mov
nop
loopne
ret
jecxz
push
mov
inc
adc
mov
push
cltd
call
ret
stc
mov
int3
lock
rorl
xor
mov
arpl
rcrl
inc
sub
pop
mov
jl
mov
movsl
lea
pop
cli
aaa
mov
and
pop
mov
add
ss
jns
dec
mov
aaa
jge
lock
setle
cmp
xchg
jg
lea
adc
ret
lahf
fdivrp
add
push
sahf
ds
imul
cmpsl
mov
in
and
adc
imul
xchg
cmc
das
stos
in
lahf
into
jo
pop
cmp
mov
test
in
cmp
packssdw
scas
mov
mov
xchg
out
push
std
or
pop
jno
int
fistl
add
int
mov
push
sbb
cmpsb
xchg
inc
xor
push
stos
lea
stos
sti
xor
mov
mov
mov
mov
cmp
roll
push
jl
pop
mov
movsb
pusha
bound
push
push
sbbb
sub
out
jno
mov
aad
add
and
sbb
adc
sbb
mov
and
stc
pop
stos
cmp
stos
cmp
and
mov
mov
jb
adc
loop
mov
leave
movsb
fcoml
add
mov
iret
insb
mov
add
cmp
stos
jl
je
dec
shlb
mov
jae
js
roll
jmp
sbb
clc
fisubrs
pusha
dec
pop
mov
cmp
and
xchg
sbb
lcall
je
xorl
rcrb
adc
mov
hlt
sahf
and
adc
fwait
jg
push
ss
cmp
movsb
rcrb
jge
cmpl
movsl
push
jbe
push
sbb
sbb
push
push
sub
or
cwtl
sub
repz
aaa
mov
mov
and
sbb
test
and
out
js
jecxz
xor
fildll
jmp
pop
ja
jnp
roll
in
lods
les
dec
add
xor
int3
push
push
in
pop
and
and
enter
jle
xor
mov
rol
loop
frstor
xchg
gs
in
sub
or
jnp
outsb
out
mov
lock
iret
ficomps
sbb
push
add
mov
mov
test
sub
push
xor
scas
xchg
gs
call
dec
insb
sbb
dec
dec
cld
mov
cmp
fadds
test
inc
insb
xchg
pop
frstor
lcall
inc
or
mov
sbb
nop
xchg
jns
lods
xchg
cwtl
in
dec
mov
ret
and
mov
or
dec
loope
shr
xlat
and
out
aam
cmc
add
and
jmp
fstl
xorb
sub
scas
adc
xchg
aad
sarl
or
aad
inc
test
test
adc
xor
test
push
xchg
pop
jle
pop
adc
mov
lock
jnp
ja
mov
sub
cmp
jo
cmpsl
push
xchg
inc
out
in
sbb
add
adc
cmp
add
cmp
jge
inc
dec
jne
int
arpl
ret
cmp
xlat
sub
cli
sbb
mov
ljmp
adc
int
cmpl
pop
cmp
xor
iret
cs
popl
or
sbb
jmp
mov
mov
and
scas
mov
out
aad
ds
push
pop
push
xchg
add
fdiv
dec
jmp
add
std
xor
mov
sub
jns
pop
add
sbbl
lret
sbb
push
mov
adcb
jae
pop
das
pop
int3
frstor
in
cmp
xchg
adc
sbb
mov
enter
pusha
dec
inc
out
nop
stc
test
add
std
popf
pop
dec
pop
mov
sub
mov
jno
sahf
movsl
cwtl
in
mul
sahf
adc
shll
fstpt
bound
cld
outsb
out
out
int3
pop
jnp
fmuls
dec
adc
and
inc
adc
push
rcrb
and
lcall
fstpt
sar
push
xor
cmpb
test
popa
xor
shll
mov
push
pushf
mov
stc
rcr
push
idivl
fidivrl
xor
repz
loop
jo
pusha
or
imul
cmp
movsb
clc
xchg
icebp
enter
jmp
lock
and
lock
adc
or
repz
pushf
sub
rol
daa
inc
mov
inc
in
dec
out
repz
not
xor
loope
shl
imul
shlb
dec
jne
pop
dec
sahf
mov
scas
push
scas
xchg
aaa
scas
sub
sbb
xchg
cmp
mov
xchg
arpl
cmp
data16
pop
loopne
and
add
jmp
xchg
ja
daa
dec
dec
daa
jne
mov
sbb
pusha
sbbb
mov
aaa
outsb
or
in
popf
mov
and
pop
mov
cmp
fwait
loop
incb
fwait
mov
roll
fiaddl
and
ja
jp
xchg
mov
add
push
fisttps
fs
push
mov
lahf
ret
aam
rcl
add
mov
adc
dec
mov
add
push
movsl
xor
xchg
lcall
shrb
in
das
dec
aad
fs
adc
leave
or
xor
push
mov
push
adc
xchg
cmpsb
insl
je
dec
push
mov
stos
adcl
aad
rclb
lret
cld
aaa
lret
pop
cmpl
mov
stos
cs
pop
push
sub
cmp
sbb
test
inc
mov
pop
mov
jae
push
adc
pop
lahf
cmp
or
popf
jl
push
out
adc
test
shl
popf
xchg
rorl
and
sahf
mov
mov
fistps
add
mov
adc
std
es
inc
scas
jge
mov
lret
daa
cmp
sbbl
not
inc
les
imul
mov
dec
fwait
pusha
push
and
cmc
int3
enter
cmp
rolb
scas
sub
je
nop
adc
xor
stos
xor
dec
pop
mov
nop
sub
nop
imull
mov
stos
mov
mov
mov
nop
in
cmp
mov
gs
popf
jnp
pop
jmp
mov
xchg
push
jge
pop
push
cld
inc
pop
sbb
sarl
call
rorl
aad
shll
lods
sar
std
test
les
add
cwtl
leave
es
add
insb
inc
dec
repz
inc
lret
ret
and
insb
leave
ljmp
xchg
sbb
cs
add
inc
ret
mov
fldenv
jle
xchg
add
jno
ss
sbb
pop
dec
cmp
adc
std
mov
into
and
cmp
dec
mov
xor
lods
mov
cmp
pop
xor
inc
gs
cmc
mov
ret
and
or
xchg
jle
test
movsb
or
cmc
jo
lret
ljmp
sbb
dec
fbld
test
and
and
xchg
movsl
test
mov
xchg
lods
les
add
xchg
fmul
push
xor
mov
insl
lods
rclb
pop
in
leave
pop
pop
insl
stos
adc
aas
pop
inc
insb
lcall
pop
imull
jo
and
fldenv
mov
sub
or
aad
pop
int3
imul
loope
mov
jmp
jae
mov
jmp
ja
add
in
cwtl
mov
cmp
stos
dec
cmp
daa
inc
pop
addb
lahf
outsl
jecxz
mov
scas
sub
jge
addl
pop
xchg
aam
lret
jne
xchg
or
xchg
pop
rcl
add
cmpsb
sti
mov
mov
mov
pop
pop
xchg
mov
mov
adc
add
insl
and
mov
test
pop
jg
dec
gs
sub
popf
dec
and
pushf
adc
sub
mov
push
or
fdivrl
das
test
icebp
popf
movsl
pop
jl
push
push
fidivs
mov
cmp
icebp
xchg
fdivrl
das
sub
fmull
out
and
jecxz
dec
or
std
call
xlat
fs
jl
lds
repnz
pop
xchg
xorl
jp
ja
popa
dec
scas
mov
aam
popa
fiaddl
fs
insb
jnp
fstpt
testl
cmpl
mov
add
xchg
or
repz
sbb
popf
mov
jno
push
aad
in
and
cmpsb
dec
fsubs
push
cld
xchg
inc
mov
movsb
jmp
lcall
out
fs
outsl
pop
push
or
dec
subb
jno
test
pop
fadd
loope
mov
test
and
pop
push
stos
xchg
mov
loop
sub
imul
hlt
push
or
pop
or
fsubl
loopne
pop
stos
mov
push
jns
clc
or
scas
loopne
mov
adc
stc
and
addb
push
mov
cld
xor
ja
aas
push
add
dec
mov
int3
add
loope
int
out
add
push
js
test
push
loop
or
inc
cmp
adc
fmull
jge
ss
ljmp
add
sbb
fbstp
repnz
imul
adc
and
lds
movsb
or
adc
xorl
jmp
dec
xor
scas
pusha
sbb
popf
divb
cmp
cs
arpl
push
rcrl
add
sbb
inc
loop
mov
push
pop
lds
or
sbb
jae
inc
sub
nop
shlb
sti
aas
pushf
add
sbb
xchg
pop
dec
push
push
out
sarb
sub
inc
lahf
je
mov
and
pop
bound
sub
fs
in
pop
sub
mov
in
mov
ljmp
jg
imul
pop
seto
and
mov
aad
sub
push
xor
lahf
mov
inc
xor
pop
shl
cs
and
ds
loope
sbb
cmp
nop
pushf
cmpl
fidivs
cmp
imulb
lods
fists
sub
ficomps
xchg
rclb
jl
mov
sub
popf
fsts
popf
out
mov
jp
ficompl
popa
push
fwait
int
leave
movsb
xchg
imulb
push
fcoms
in
mov
or
mov
cli
dec
into
shrl
mov
stos
into
lock
stos
test
pushf
push
xchg
das
pop
push
cmp
pop
sub
mov
lret
and
dec
xchg
sbb
icebp
sub
xchg
sbb
and
push
push
pop
popa
daa
les
sub
out
mov
push
int
mov
addl
fidivs
pop
int3
xchg
int3
out
and
mov
and
out
add
mov
ljmp
test
inc
xchg
lock
mov
mov
imul
or
mov
inc
add
dec
mov
repz
bnd
mov
xchg
cmpsl
stos
fldt
mov
mov
pusha
xchg
lea
mov
scas
pop
icebp
fcompl
sub
xor
into
incb
xor
mov
cmp
sub
mulb
and
cs
or
dec
leave
int
inc
sbb
mov
scas
mov
ja
add
cmp
sahf
sbb
xchg
pop
and
test
mov
data16
idivb
es
test
cwtl
cmp
sahf
lea
cmp
pop
insb
loopne
mov
fisubrs
push
lds
dec
fsubl
push
lods
push
or
jb
aad
loope
dec
jno
xchg
popa
mov
rcrl
mov
cld
push
xorl
cmpsb
insl
scas
imull
sbb
jmp
outsb
jmp
ret
test
mov
movsl
inc
lcall
mov
clc
jnp
xor
and
ficoms
ret
jge
and
aad
inc
pop
add
xchg
xor
or
or
dec
inc
add
aas
movsb
jmp
and
cmp
cs
sub
mov
mov
call
cld
cmp
imulb
inc
adc
push
ds
xchg
shlb
sqrtps
outsb
or
xor
ret
xchg
int
pop
sub
cmp
inc
int
nop
mov
push
fisttpl
xchg
xchg
lock
sbb
xchg
rcll
aam
push
push
pop
cmpsb
mov
or
or
movsl
imul
fnstcw
inc
test
add
pop
sti
pop
mov
bound
mov
into
or
cmpsb
xchg
dec
pop
xchg
jno
out
push
cld
stc
dec
pop
dec
mov
add
mov
insl
das
dec
fcoms
jge
mov
cwtl
out
mov
jns
fs
icebp
jecxz
stos
lods
loop
and
iret
jl
xchg
push
iret
lods
push
mov
mov
cltd
add
popa
and
xor
cmp
push
repz
push
insl
sbb
mov
mov
dec
iret
jb
out
divb
inc
push
lahf
jbe
shll
mov
fcomps
pop
sbb
mov
adc
adc
lret
cmp
dec
std
push
outsb
cmp
icebp
nop
cwtl
mov
or
or
sti
mov
addr16
shl
mov
leavew
dec
fisttps
lds
js
mov
jp
sub
add
sar
sub
inc
in
ds
push
xor
pop
adc
test
popa
push
pop
std
out
push
dec
nop
lods
popf
lea
jmp
push
xchg
fistps
add
pop
sarl
outsb
das
xlat
pop
mov
lret
inc
jmp
leave
add
mov
cwtl
test
cmp
lcall
inc
mov
nop
shll
js
dec
add
arpl
mov
dec
inc
push
test
lcall
dec
mov
sbb
xchg
jnp
push
jne
and
mov
out
pushf
jecxz
shlb
lea
loope
gs
cld
shrb
icebp
nop
shrl
mov
and
popf
add
push
jle
das
add
ret
in
fstl
push
enter
mov
in
jnp
inc
clc
jl
mov
mov
mov
mov
push
mov
cmpsl
adc
loope
dec
mov
pop
pop
cmp
adc
push
mov
faddl
aam
addr16
add
mulb
xor
push
inc
mov
inc
ja
neg
mov
stos
pop
cld
pop
hlt
loope
and
jns
adc
sub
sbb
int3
cld
lret
pusha
in
aaa
cmpsl
icebp
shll
cmp
sbb
dec
xchg
ds
mov
jecxz
loopne
out
dec
mov
inc
xchg
mov
movsb
or
insb
ljmp
stos
pusha
or
out
mov
outsb
andl
popa
pusha
in
movsb
dec
cli
dec
divb
pop
jne
rcr
hlt
sub
mov
stc
in
dec
int
xor
mov
xor
test
outsb
pop
mov
loop
stc
pop
jmp
sbbb
call
and
push
arpl
sti
sbb
lock
out
mov
inc
sahf
ret
mov
clc
in
xchg
js
mov
mov
mov
push
stos
sub
xchg
imul
sub
mov
and
ss
out
jecxz
push
or
sbb
add
gs
jb
negb
es
enter
pop
arpl
lcall
cltd
bound
iret
adc
add
frndint
cmpsl
rcl
loop
pop
out
mov
sti
jg
int
enter
ss
jns
cmp
pop
dec
ss
cmp
repz
loop
insb
mov
rcll
xchg
fs
inc
jmp
mov
outsb
in
push
mov
or
adc
ficoml
clc
push
mov
mov
aas
in
aaa
push
xor
or
jmp
out
cmp
scas
data16
cmp
xor
ss
sub
test
lret
add
mov
cmp
push
and
outsb
mov
jns
xchg
jns
pop
push
data16
and
leave
cltd
jo
push
stos
mov
and
mov
push
lahf
iret
cmp
out
dec
fisubl
lahf
push
lret
rcr
jne
mov
mov
push
stos
loop
inc
scas
test
mov
sub
pop
shrl
sbb
push
outsb
jnp
popa
addr16
jp
jno
lahf
cs
mov
add
jmp
call
aad
mov
jecxz
imull
repz
push
mov
pop
or
stc
adc
and
movsl
loope
lret
xchg
leave
neg
jbe
in
aas
mov
sbb
out
lcall
cmp
fisttpll
jecxz
ret
gs
inc
mov
imul
incl
adc
xor
imul
cmpsl
je
xchg
and
cltd
mov
mov
push
dec
cld
xor
adc
adc
int3
mov
jne
and
xchg
adc
int3
jne
lea
mov
inc
pop
jno
mov
outsl
imul
and
adc
leave
in
mov
jl
jne
inc
imul
lock
xlat
push
mov
mov
pop
dec
loopne
enter
fcomps
je
push
fs
aaa
outsb
add
sub
clc
mov
mov
push
mov
push
mov
jae
roll
xor
out
jb
pushl
pop
frstor
mov
xchg
dec
fstl
pop
jp
int
data16
fmulp
pop
popf
aam
pop
ss
hlt
clc
jl
mov
jg
mov
shlb
ljmp
dec
jae
and
js
inc
lods
fsubp
and
bound
sub
or
jecxz
bound
mov
mov
out
cmp
out
pop
pushf
cli
loopne
mov
insb
ljmp
mov
int3
enter
mov
mov
popa
and
push
push
jne
jae
inc
pushf
pop
add
divl
sbb
pop
aas
mov
jb
jb
adc
sahf
dec
roll
pop
jg
pop
push
ljmp
xchg
inc
pop
flds
mov
dec
test
mov
push
mov
psrlq
or
and
xchg
xor
or
out
shrb
mov
inc
xchg
mov
and
pop
ljmp
aad
push
paddsb
push
push
push
inc
test
or
test
js
or
loope
mov
mov
or
stc
insl
mov
cmp
xchg
jnp
mov
add
lret
push
jae
in
pop
mov
push
cmp
outsb
sbb
je
in
stos
mov
scas
clc
cld
cmp
int
cltd
add
adcb
inc
mov
insb
or
das
pop
cmpsl
sbb
sbbl
mov
scas
mov
or
fsub
scas
jp
or
adc
sbb
dec
sbb
mov
or
fwait
or
or
enter
mov
xchg
xchg
or
cmpb
and
xchg
fimuls
or
punpcklwd
int3
imul
stc
dec
jns
stos
leave
xor
bound
mov
add
and
inc
inc
add
xchg
push
cmp
push
pop
hlt
mov
push
add
mov
pop
cmp
movsl
mov
scas
or
or
out
xor
bound
lcall
pop
adc
dec
inc
ret
mov
shl
das
movsb
mov
out
insb
notl
jo
dec
push
cmp
xchg
cmp
sbb
inc
fs
pop
and
mov
and
or
movsl
inc
sbb
adc
xchg
subb
stos
stos
mov
das
mov
pop
js
ja
jo
rolb
cmp
mov
iret
int3
or
add
sahf
xor
pop
push
fsubrs
ja
imul
bound
add
pop
cmp
ss
xchg
or
fnsave
orb
pop
push
outsl
loop
icebp
jbe
aam
pop
mov
and
xchg
xchg
sbb
adc
mov
out
mov
pop
mov
fmull
pop
into
fstps
and
inc
mov
out
sbb
pop
cmpsb
std
sahf
mov
addb
add
sti
das
or
int3
test
jno
icebp
xlat
sub
xchg
clc
enter
aas
xchg
add
add
and
lods
mov
xchg
adcl
xchg
mov
cmpsb
mov
sti
stos
cmp
fsubrl
pop
pop
mov
pop
and
sub
aad
cwtl
int
cmp
mov
add
les
mov
lods
andb
mov
jbe
sub
mov
sbb
pop
mov
dec
das
xor
stos
or
js
inc
bound
jecxz
outsb
pop
cmp
jno
push
jl
into
adc
jno,pn
xchg
push
sbb
flds
cmc
hlt
fimuls
or
pop
xor
ljmp
adc
push
add
dec
into
and
ja
insl
arpl
daa
aad
jl
adc
sub
cmc
jno
stos
shrb
mov
fcomi
jnp
aaa
cmp
leave
test
mov
mov
xchg
push
das
loopne
ficoml
push
icebp
in
jno
jecxz
jns
ljmp
sbb
movq
jbe
push
xlat
cs
xchg
nop
xor
cmp
xchg
cmp
mov
pop
pop
mov
cld
test
arpl
cmp
mov
fsubs
decl
push
mov
imulb
jp
std
aaa
lcall
orl
or
xchg
mov
pop
add
fcomps
pop
mov
xchg
enter
jno
jecxz
scas
mov
xchg
pop
mov
cmp
xchg
mov
outsl
push
mov
lahf
jns
mov
mov
popa
add
ds
ss
and
cmp
ljmp
xor
aaa
inc
xlat
and
adc
imul
jns
or
dec
push
or
xor
dec
pop
jge
hlt
loope
ljmp
and
divl
out
out
dec
xor
and
pop
int
add
lahf
pop
in
fs
sub
bound
pop
adc
fisubs
ss
push
cmp
pushf
outsl
hlt
adc
or
and
jg
test
sub
cli
dec
adcb
mov
lods
inc
fwait
sbb
push
aad
repnz
xor
stc
push
dec
dec
into
sbb
aam
repnz
cmp
insb
xchg
mov
mul
in
mov
in
jg
pop
adc
cmp
adc
aam
and
shrb
test
fwait
sbb
imul
and
fnstsw
mov
xchg
sbb
daa
jmp
test
sbb
inc
clc
nop
xor
cmpsl
cli
addr16
aad
lret
inc
and
insl
mov
in
dec
jns
mov
sub
xlat
mov
sti
and
or
sub
sbb
flds
xchg
test
popa
sbb
lret
push
lods
mov
mov
ret
or
mov
xchg
mov
rclb
ret
lea
cmp
dec
aaa
lret
aam
inc
cmp
call
add
movsl
xchg
pusha
gs
rorl
push
jp
in
jnp
in
rolb
mov
mov
sbb
push
aam
jge
scas
repz
xor
push
out
repz
mov
adc
jae
sbb
in
mov
into
mov
pop
add
push
xchg
xchg
fcoml
pusha
sahf
mov
xor
push
dec
push
addl
lock
cli
inc
sub
adc
flds
out
push
loop
xor
jle
pop
push
cmp
dec
push
mov
and
and
stc
mov
stos
jmp
sub
mov
sahf
adc
pop
inc
push
imul
adc
insb
out
xchg
push
subl
xlat
pop
jno
mov
or
or
inc
dec
push
test
daa
or
lcall
mov
mov
lcall
or
adc
mov
in
ja
mov
push
sahf
stos
cmp
push
rol
or
jecxz
push
adc
or
dec
adc
dec
sub
insb
cmp
mov
arpl
cmp
mov
jp
cltd
in
mov
std
xor
adc
iret
das
cltd
jle
mov
movl
nop
cmc
mov
add
pop
sub
inc
xchg
mov
dec
ss
push
je
mov
pop
sbb
jmp
inc
fisttpll
das
inc
jl
scas
movsb
xlat
insl
fnstenv
xor
mov
inc
adc
rcr
aas
pop
cmpsl
ds
enter
pop
ds
pop
out
cmp
subb
cld
cltd
loopne
cmpsl
bound
pop
mov
or
outsb
inc
mov
fwait
imul
test
lcall
mov
into
int
test
mov
out
mov
jns
lret
notb
mov
jno
jge
cmpsl
and
and
jl
xchg
popf
lods
cld
jmp
pop
mov
imul
mov
orb
subb
or
sbb
into
daa
je
nop
and
out
mov
push
xchg
adcl
int3
lret
loopne
mov
xor
mov
add
adc
dec
stos
mov
sbb
xor
xchg
sbb
out
mov
adc
mov
jl
and
push
sti
arpl
repnz
sbb
lret
cltd
mov
test
lahf
scas
adc
xchg
xor
add
pushf
cmp
fsubrl
shl
mov
test
dec
push
dec
push
or
aas
mov
mov
mov
iret
ret
cmpsl
pop
lahf
adc
push
push
ret
ja
daa
enter
int
pop
pusha
es
xchg
inc
push
aad
jne
or
movsb
xchg
cmp
sub
and
pop
stos
or
lods
push
pop
stos
pushl
add
mov
and
cmp
std
pop
cmp
sbb
outsb
push
cmp
push
mov
xchg
mov
aad
gs
lret
cmp
data16
gs
movsb
sbb
loope
fbstp
movsb
iret
daa
cmp
pop
cmpsl
push
fimull
aam
and
mov
cld
fsubs
sar
popa
mov
iret
mov
sbb
lret
ret
jecxz
inc
adc
push
jae
and
cli
xchg
sbb
loop
add
cltd
je
cmc
dec
in
into
pop
sti
subb
push
jmp
ret
mov
jb
gs
cmpsl
fmulp
dec
jg
add
shll
xchg
adc
mov
fisubrl
push
aam
xor
pop
lock
push
pop
cmp
clc
nop
mov
jle
in
popa
push
jbe
mov
push
adc
xor
clc
sahf
imul
decb
nop
movsb
les
mov
frstor
orl
repz
xchg
inc
mov
ds
mov
xor
add
mov
fistpll
mov
adc
mov
sub
lcall
jge
aas
pop
sbb
iret
inc
int
push
les
push
mov
icebp
sbb
xor
call
jecxz
mov
sbb
sbbb
xor
jbe
jl
enter
insb
pop
icebp
sbb
call
push
mov
xchg
sub
sub
arpl
stos
movb
in
mov
pop
sub
stc
cmp
enter
hlt
mul
lret
adc
pop
repnz
jno
stos
sbb
loop
xchg
or
lods
xor
xchg
inc
xor
hlt
fs
mov
lret
mov
jo
rclb
rol
inc
es
in
leave
xor
mov
jno
adc
js
mov
mov
cli
sbb
pushf
cli
sbb
sti
repz
xchg
mov
cltd
adc
jbe
pushf
and
mov
push
jg
xor
outsb
cld
push
rol
mov
sbb
mov
rorl
cli
push
lcall
rolb
in
xor
scas
insl
aam
es
dec
jmp
sub
adc
movsl
adc
mov
scas
xorb
add
pop
out
xor
rcll
inc
cmc
adc
cli
inc
mov
mov
or
outsl
sub
sub
mov
sbb
dec
and
ret
or
imul
cltd
add
inc
sub
pusha
dec
jb
ja
inc
inc
rorl
inc
jecxz
ds
lret
fdivl
pushl
jno
ja
ret
fldt
cli
and
xchg
fwait
sti
xchg
jge
add
mov
pusha
imul
push
mov
jmp
fwait
push
into
or
dec
push
mov
dec
mov
test
and
out
pop
ds
ret
imul
rorb
xlat
sarl
cmp
push
inc
dec
or
cmp
sub
and
ret
je
mov
xchg
je
cmc
mov
lret
and
iret
and
inc
add
push
fstpl
mov
lahf
ret
add
movsl
ljmp
sti
enter
cmp
lahf
leave
mov
cmc
idivl
in
mov
outsb
ss
adc
repnz
test
inc
jecxz
jmp
xchg
push
lcall
jp
inc
jo
cmpsl
gs
pop
mov
mov
fisttps
int
jno,pt
mov
mov
jge
xchg
jge
jge
inc
xchg
sbb
xor
outsl
and
mov
pop
inc
xor
dec
mov
call
cmp
ss
ja
inc
mov
hlt
push
inc
mov
test
push
int3
icebp
cmp
and
sbb
dec
pop
xchg
push
in
dec
fs
cmp
add
dec
cs
aad
sub
push
xchg
xchg
fwait
test
push
adc
cmp
xchg
mov
out
jae
mov
int
lahf
int3
mov
and
pop
aaa
in
push
or
sahf
test
test
cmp
cmpsl
shl
jns
jb
movsl
push
xchg
sbb
sub
pop
test
cld
mov
mov
fisubl
in
mov
dec
push
ds
mov
jne
out
add
push
les
clc
rcll
lods
repz
lret
stos
cmp
pop
into
icebp
inc
ja
shlb
add
inc
ret
mov
cmp
popa
or
int3
cwtl
rolb
pusha
fwait
cmp
sti
jo
cmp
es
pop
dec
add
cld
cmp
in
loope
je
xchg
inc
ja
popa
pop
xor
xchg
lock
std
imul
jno
aam
pop
jl
rolb
mov
mov
sub
sub
sahf
scas
push
add
mov
sub
xor
jnp
daa
jne
insb
popf
rolb
fdivrl
or
lret
mov
loopne
ljmp
std
fs
int3
pop
scas
outsl
mov
loope
leave
lret
data16
leave
mov
jle
or
or
mov
nop
repz
xor
or
das
insb
lret
inc
mov
xchg
add
or
in
add
push
fsubrs
das
add
adc
push
inc
daa
roll
xchg
sbb
mov
out
lret
adc
mov
inc
pinsrw
inc
adc
test
adc
fsubrs
sbb
repnz
in
sub
loope
pop
sbb
sub
mov
mov
pop
mov
mov
jae
inc
ss
lret
xchg
or
std
jb
imul
mov
lret
jle
repnz
xor
sub
mov
inc
loope
inc
decb
xlat
xchg
pop
jle
mov
movsl
pop
fwait
pop
test
push
inc
sahf
inc
xor
popf
fwait
mov
pop
ds
jmp
adc
push
loopne
and
mov
pop
enter
fldlg2
rclb
xchg
fdivl
adc
mov
out
or
pushf
into
movsb
mov
dec
mov
shll
cmp
lcall
outsb
cmp
or
ret
push
add
mov
ja
push
sub
push
call
leave
int3
lods
orl
jl
mov
add
or
mov
insl
push
ds
jnp
xor
aas
or
imul
test
movsl
mov
jne
xlat
xchg
test
cmp
ret
dec
daa
inc
push
aad
jne
push
pop
xor
jo
xchg
imul
mov
push
stc
test
popa
les
mov
mov
inc
loop
add
repz
cmp
int3
mov
out
adc
mov
ds
mov
mov
inc
in
jmp
mov
add
imul
das
lahf
pushf
call
in
mov
mov
and
xchg
and
scas
inc
fcomip
imul
push
or
fbstp
adc
dec
mov
and
imull
sti
je
lds
mov
sub
cmp
test
jg
fdivrs
and
push
push
push
inc
cltd
cmc
jns
fstpl
sbb
or
mov
jp
xchg
mov
int3
xlat
jg
out
clc
lret
push
xor
pop
adc
insb
xor
lret
push
mov
pmullw
and
mov
push
mov
xbegin
adc
jg
lcall
daa
lds
cmc
cmp
scas
pop
fsubl
ja
rolb
fsubr
lods
or
dec
ljmp
dec
mov
out
mov
push
xchg
inc
adc
popa
jle
in
lock
xchg
shll
lods
xorl
xchg
jg
sub
inc
out
lock
mov
cli
xchg
out
fidivl
jae
push
pop
sub
scas
addb
test
pusha
dec
cmpsl
xchg
pop
dec
add
ret
test
sti
bnd
pop
xor
mov
cmp
not
mov
movsb
lahf
ss
fildll
enter
hlt
xor
lods
inc
orl
xchg
mov
ret
xor
push
popa
mov
add
fildll
sub
notl
lds
mov
adc
lds
dec
cwtl
inc
loope
xor
out
loope
fimuls
mov
add
out
pop
iret
add
outsb
add
add
cmpsl
mov
jae
pop
movsl
add
mov
mov
push
or
ja
js
mov
dec
pop
push
stos
xlat
subl
mov
test
mov
dec
sub
xor
outsl
popf
jg
add
repz
mov
mov
out
cli
cli
cmp
jg
aas
xchg
cpuid
pop
sbb
out
inc
mov
loopne
mov
add
outsb
mov
jp
jge
je
jmp
sub
or
cmp
xor
outsb
pop
xchg
imul
out
push
and
bound
jns
mov
dec
sub
xchg
cmp
inc
sub
xor
je
sti
insl
xchg
lret
mov
test
cltd
inc
adc
xor
aam
mov
dec
push
jnp
je
pop
aam
fsubrl
jo
loop
fs
call
sbbb
pop
out
pop
mov
sbb
cwtl
mov
test
test
and
adc
adcb
sub
into
pop
outsl
or
call
xor
stos
jb
dec
mov
pop
mov
lds
jnp
imul
aaa
push
hlt
mov
xchg
pop
xlat
daa
je
add
aaa
sbb
enter
sbb
leave
mov
and
nop
push
test
and
push
loope
cld
xchg
ret
mov
int3
js
shll
loopne
jl
out
or
lcall
jne
or
mov
cltd
and
or
lock
sti
out
arpl
in
scas
mov
mov
push
fs
test
and
dec
notl
mov
adc
or
js
loope
in
adc
cmp
fs
push
call
add
fidivrs
loop
movsb
sub
inc
fstp
mov
arpl
enter
pusha
adc
es
repz
jbe
fldenv
mov
cs
cmpsl
shrb
loope
xor
scas
inc
inc
jp
xchg
mov
in
rcrl
add
push
and
cld
sub
loopne
sub
int
pop
xchg
cld
fisttps
push
sub
mov
imul
loopne
push
repz
sub
clc
cmp
mov
jge
push
inc
dec
call
jp
or
ss
fs
cmpsl
ficoml
loope
mov
jbe,pn
sub
add
aas
add
add
sbb
xchg
outsl
addl
push
sbb
loop
push
fcom
sahf
lret
insl
jae
or
ds
dec
and
inc
flds
scas
repz
ret
ljmp
cmc
xchg
xchg
inc
xor
adc
sbb
and
dec
cmp
in
xchg
lods
ret
mov
inc
out
and
andb
test
mov
pop
aad
testl
fwait
mov
negl
int
popf
and
shl
jmp
jno
insb
mov
sbb
scas
mov
xchg
decl
pop
mov
nop
data16
push
addb
inc
xchg
sbb
and
jecxz
mov
repz
xchg
cmc
mov
jle
arpl
jb
xor
imul
in
stos
mov
aad
sbb
xchg
cltd
cmp
dec
outsb
aaa
and
pushf
jo
test
xchg
adc
sub
and
sbbl
sub
and
xor
xchg
mov
cltd
movl
stc
out
mov
sub
sub
fdivs
inc
in
clc
push
xor
cmp
lcall
pop
or
push
push
adc
or
pop
mov
pusha
dec
inc
fwait
xchg
pop
xor
mov
bswap
xchg
mov
scas
jg
xor
xlat
out
movsl
lret
js
add
pop
mov
cmp
mov
mov
sbb
scas
iret
les
jnp
cmpsb
sub
ret
mov
pop
outsb
mov
movsb
xchg
cmp
int
std
idivb
fwait
cmc
lds
push
call
scas
fbstp
sub
sti
mov
push
mov
aam
adc
repnz
add
or
aad
adc
mov
jmp
sahf
cld
and
popf
test
xchg
aas
mov
pushf
inc
ror
xchg
mov
sbb
jno
mov
jg
cltd
adc
xchg
aaa
paddw
inc
rolb
jle
enter
jmp
ds
jmp
sub
inc
arpl
loop
mov
enter
loop
mov
sub
neg
sub
mov
icebp
js
jmp
ret
push
adc
and
and
add
call
jl
out
insb
push
xchg
add
xor
test
std
in
jg
stc
pop
xchg
jle
call
cmp
jl
cmp
and
cld
dec
add
fcmovnb
clc
or
jmp
scas
and
jnp
xchg
loope
enter
test
ret
lods
sahf
ljmp
add
mov
call
gs
inc
insb
in
cwtl
lods
int3
ret
sub
jmp
stos
faddl
sub
stos
imul
imul
jmp
inc
mov
mov
mov
and
cmp
outsl
fwait
in
ret
mov
rorl
out
loope
lret
dec
jnp
mov
jbe
xor
ret
nop
aaa
mov
int
mov
in
xor
xchg
xchg
mov
sbb
in
sub
adc
inc
lret
push
les
mov
roll
orb
adc
cmpsb
jl
in
xlat
mov
jmp
mov
fs
sbb
clc
sub
mov
filds
xor
and
test
or
mov
and
jp
mov
cltd
out
add
out
cs
sbb
cmpsl
fsubl
out
outsb
lds
adc
pop
cld
and
es
xor
setne
push
into
mov
jmp
push
mov
int3
cmp
cwtl
addr16
jp
jecxz
fbstp
fdivs
out
mov
cli
push
mov
addr16
pop
cs
jge
lret
call
push
add
inc
cmp
loopne
ror
xorb
sarl
loop
popl
push
sbb
out
int
sub
pop
aas
adcl
scas
popf
push
pop
mov
mov
ret
scas
call
clc
std
push
sahf
sub
mov
fcompl
jg
movsb
clc
roll
dec
cmovp
movsb
pop
lahf
arpl
inc
add
loop
sti
and
in
sub
mov
ficoms
stos
and
shr
mov
arpl
push
mov
fildll
and
imul
lods
xchg
stos
mov
push
stos
jae
push
fcompl
rcrb
daa
add
sarl
mov
stos
outsl
ljmp
jmp
dec
or
sti
xlat
sti
fmulp
into
push
cmpsl
jb
pop
lods
push
popa
clc
lret
notl
or
adc
je
je
jmp
sbb
jle
mov
into
ljmp
lock
mov
push
adc
aad
jg
lds
shll
xlat
cmp
adc
out
mov
xor
stos
fcmovbe
jle
mov
dec
scas
idivb
adc
pop
jl
fisubrs
sub
ss
fsts
xor
sub
sub
out
pop
xchg
xor
push
dec
mov
stos
imull
lret
fnsave
mov
andb
pop
or
notl
gs
xchg
fmull
in
mov
test
loopne
adc
fdivl
mov
std
ja
lret
rcll
ret
mov
mov
cs
inc
test
mov
push
aaa
les
adc
dec
mov
faddp
adc
adc
jmp
ret
pusha
push
test
loopne
and
mov
loopne
aad
lds
mulb
mov
pop
xor
cmp
popa
inc
push
mov
inc
or
addr16
xor
sets
out
push
or
stos
adc
jg
inc
popf
sbb
call
jg
js
xchg
cmp
mov
and
pop
sub
mov
pop
push
lock
add
shrd
es
push
je
mov
jge
lods
dec
aas
jl
sub
dec
outsb
sahf
call
lds
pop
jbe
xchg
aas
dec
setp
pop
shlb
div
sti
jo
fucom
loopne
xor
sub
mov
inc
in
stc
lods
push
mov
mov
mov
push
adc
xlat
test
mov
fs
aas
dec
ss
xor
and
test
push
xchg
push
popf
cmpsb
movsl
gs
mov
add
or
aam
lret
int3
jmp
imul
and
push
add
mov
jns
and
icebp
mov
jnp
push
jnp
push
stc
pop
icebp
pop
jbe
xor
add
jge
sbb
in
test
test
push
mov
lods
mov
pop
ds
xchg
incb
push
inc
xchg
sub
adc
das
scas
int3
push
mov
mov
add
enter
adc
ljmp
lods
push
shlb
repz
sub
and
mov
sbb
iret
xor
hlt
add
and
pop
adc
ljmp
repz
loope
es
pop
mov
mov
je
xor
cmp
jbe
inc
pop
sub
bound
jb
lods
xchg
xchg
sti
scas
mull
mov
inc
aaa
inc
sub
mov
enter
sub
pop
pop
or
cmc
cmpsl
pop
mov
inc
adc
in
addl
ret
add
sbb
mov
ret
dec
sbb
nop
push
ficoms
jbe
push
lret
cmp
mov
adc
popa
inc
aad
and
push
mov
insb
mov
clc
stos
shl
cld
add
and
mov
sbb
inc
repnz
or
fsubp
inc
add
inc
aaa
jl
push
test
lcall
push
inc
mov
dec
or
mov
lcall
stos
int3
jmp
jnp
pop
jbe
movsb
popf
xorl
decl
sub
sub
inc
popf
out
xor
xor
add
sub
leave
idivl
into
push
daa
outsl
test
sbb
fmuls
les
add
mov
cmp
mov
dec
mov
fadds
ret
punpcklwd
nop
mov
movsb
add
movsb
int3
push
ret
out
push
cmp
push
mov
into
nop
sbb
pop
clc
push
fldenv
int
or
and
lret
mov
cmpsb
test
arpl
rcrb
mov
push
add
or
stos
rcll
scas
scas
xchg
mov
fsub
mov
test
test
xlat
jle
pop
dec
scas
loope
pop
mov
clc
imul
push
cmp
inc
and
imull
leave
inc
stc
push
xchg
lret
pop
aad
lcall
scas
add
fstps
mov
je
pop
xchg
fcomp
into
test
xor
decl
sub
popa
or
inc
sbbb
and
cmpsl
test
push
cmpsb
fidivrs
sub
push
out
das
daa
and
cmc
add
pop
dec
xor
loopne
dec
mov
rcll
xor
imul
xchg
das
push
mov
into
es
nop
sub
cmp
mov
aas
test
pop
lcall
lods
paddsb
std
into
lods
mulb
dec
and
test
mov
test
mov
inc
inc
xchg
lret
es
pop
nop
into
xchg
into
clc
push
pop
lods
and
stos
xor
push
jge
push
sbb
popf
dec
cmpsl
push
cltd
sbb
mov
jne
or
aad
sbb
push
jb
or
push
push
movsl
push
sahf
shrl
dec
mov
dec
add
push
gs
cmpsl
sbb
mov
rep
mov
int3
fprem
mov
adc
sub
aas
daa
iret
dec
push
rolb
std
fadd
imul
sub
popf
pop
and
rolb
aas
gs
lods
xchg
xchg
adc
lock
cmp
sarb
jne
andb
mov
test
scas
add
mov
lret
jecxz
ss
rclb
sti
jne
insb
mov
negl
mov
and
dec
stos
jmp
ret
or
push
lret
or
sahf
mov
repnz
cmpsl
add
jl
in
pop
pop
fcompl
in
dec
xchg
mov
sbb
repz
out
jmp
or
leave
mov
inc
sub
push
cmp
cmpsl
and
outsl
fdivrl
sahf
and
mov
jae
lods
sbb
leave
xchg
mulb
push
mov
jo
inc
ficoml
das
in
ss
daa
mov
pop
push
mov
jle
in
inc
mov
test
cmpsb
loope
lds
inc
out
fwait
icebp
mov
or
test
enter
stos
pop
lods
adc
jmp
aas
lahf
in
ja
rolb
jecxz
gs
out
mov
push
push
cmpsl
or
mov
les
stos
jae
loop
shrb
mov
dec
clc
xchg
or
sbb
jp
cmovae
fld1
mov
push
mov
aaa
jp
mov
movsl
fmuls
mov
icebp
xor
sub
movsb
pushl
stc
insl
lods
mov
sti
ret
call
loope
pop
sbb
push
test
inc
jmp
orb
push
sti
jp
jnp
jae
lods
and
ds
pop
jp
imul
sub
xor
jecxz
pushf
jge
mov
jae
jo
jne
ss
rorb
out
sbb
and
and
mov
sub
push
out
xchg
pop
lods
int3
cmpsb
dec
lcall
inc
dec
in
sub
nop
or
xlat
sub
jno
adc
nop
adc
sti
ret
cmpsb
dec
adc
cwtl
testb
cmp
pop
xchg
mov
popf
sub
jmp
arpl
pop
addr16
xchg
aas
cli
test
mov
mov
or
pop
xacquire
jg
mov
int3
stos
and
fiaddl
lahf
adc
and
and
xchg
xchg
fcoml
add
rcrl
movsl
out
cmp
rcrl
cltd
fstps
cmpb
jp
pop
jae
sub
sarl
jp
ficoms
imul
adc
sub
or
xor
push
fstps
in
or
lcall
mov
pop
inc
push
push
sub
jp
and
mov
xor
or
cmp
aam
das
jns
push
aam
mov
leave
ret
add
mov
xchg
jmp
sub
xchg
xor
inc
imul
mov
fistl
sbb
cwtl
pop
cmp
mov
ljmp
push
xor
dec
into
nop
push
int3
add
xrelease
cltd
push
sbb
dec
aaa
mov
inc
mov
cmpsl
jae
lock
and
sahf
lods
push
lahf
mov
xchg
idivl
mov
hlt
aas
xchg
cltd
insb
sbb
jns
or
mov
fwait
idivl
jg
lret
jbe
addr16
sub
ret
addr16
test
mov
insl
pusha
push
aaa
xor
cmp
test
cmp
jo
dec
dec
jns
sbb
add
or
into
dec
sbb
les
push
in
add
rorb
cmp
mov
cmc
jle
inc
xchg
into
out
add
push
push
xchg
daa
mov
popf
je
push
imul
mov
add
scas
inc
xchg
adc
push
out
sbb
xchg
gs
roll
mov
jne
aam
adc
pcmpeqb
mov
fsubl
out
or
add
adc
adc
sti
mov
cmp
andb
adc
fstl
add
pop
add
aam
xor
jbe
jbe
divps
mov
cmp
bound
lcall
ds
movsb
pop
sub
pop
push
stc
pop
adc
mov
cmp
pop
mov
addr16
and
inc
push
jge
mov
daa
sub
or
and
dec
and
xor
arpl
fidivrl
and
icebp
and
or
cmp
test
add
or
mov
xor
jmp
xchg
scas
out
xchg
mov
and
gs
jnp
push
outsb
pusha
scas
fstps
int3
or
cmp
scas
repz
or
adcb
loop
outsb
int
test
ret
sbbl
push
adc
imul
lret
ljmp
aad
cmp
inc
xor
pop
aam
insl
push
addr16
xchg
neg
or
scas
mov
sbb
cmpsb
add
pushf
daa
jb
or
sti
in
adc
leave
jae
int3
ss
xchg
jne
ds
cmp
lahf
sarb
in
mov
pop
push
aam
rclb
sbb
and
aad
imul
cs
dec
lahf
and
dec
pop
inc
jg
stos
stos
push
arpl
out
daa
inc
or
push
xchg
mov
insl
lods
pop
cld
popa
xor
sbb
cmp
cmp
sbb
cs
mov
mov
jno
sub
test
adc
or
adc
cmp
jmp
dec
mov
arpl
adc
sub
aas
sub
mov
aaa
adc
cmp
jge
xor
cmp
aam
cld
xor
sub
pop
in
add
adc
xchg
adc
nop
xchg
test
pop
push
stc
test
xor
push
sbb
scas
or
jnp
fstpt
stc
jl
repz
loopne
nop
fldenv
mov
dec
stos
cmpl
lock
stos
adc
push
mov
push
pusha
stc
pop
dec
ds
cmp
popa
xchg
mov
pop
pop
out
adc
pop
hlt
lahf
int3
inc
lcall
sbb
in
test
out
divl
lock
inc
es
insb
inc
notb
mov
sbb
imul
jmp
test
fwait
inc
in
fsts
mov
insb
js
xor
dec
and
jb
lods
cmp
or
rcr
push
cli
inc
ret
orb
xchg
mov
jecxz
xchg
out
and
sbb
dec
cmp
fmul
or
and
ret
cmp
pop
adc
mov
pop
jae
cmc
sub
iret
dec
test
dec
jl
rolb
imul
aas
subl
sub
dec
jle
std
nop
jno
adc
dec
rorb
mov
sbb
leave
xor
and
loop
ret
incb
in
push
scas
lea
aaa
add
inc
dec
mov
adc
shll
loop
pop
inc
leave
jnp
adc
inc
mov
xchg
dec
mov
aaa
ja
aam
and
mov
sub
inc
add
daa
or
or
xorl
aas
ret
icebp
push
mov
in
fs
movsb
add
push
ror
push
adc
sbb
pop
icebp
sbb
test
popa
mov
dec
popa
imul
fidivrs
jl
jnp
and
outsw
mov
cld
cvtpi2ps
inc
push
cmpsb
and
bswap
pop
cltd
notl
inc
push
xchg
cmp
mov
cli
aad
or
mov
pushf
cmp
sbb
out
cmp
int3
mov
cmc
pop
jbe
xchg
pop
cs
fmulp
and
mov
in
inc
ja
inc
data16
xor
jae
jge
sbbl
cs
lret
xchg
popf
std
lcall
sub
std
test
je
addl
xor
add
aaa
insl
dec
outsb
stc
xchg
les
jae
int
xlat
aam
cmp
xchg
sbbl
sub
or
stc
pop
addr16
push
mov
out
add
xor
vcvtpd2dqx
add
xchg
xchg
dec
cmp
push
into
pop
ja
aam
add
stos
int3
ds
in
sarl
dec
and
leave
jo
loop
stos
nop
pop
adc
add
push
inc
adc
mov
pusha
je
inc
daa
roll
adc
loopne
fwait
fs
aas
jo
xchg
loop
rorl
je
mov
jl
push
xor
out
sahf
xchg
outsb
jmp
xor
sub
ss
sub
xlat
sbb
mov
pop
fisubrl
bound
sub
std
dec
lret
and
cwtl
cltd
in
fnstcw
test
dec
push
imul
mov
mov
int3
or
stc
mov
in
pop
repz
mov
cmp
push
xchg
adc
int3
in
add
mov
test
jae
sub
repnz
je
js
jbe
sahf
ss
inc
pusha
sarl
std
ret
shrl
fidivl
cmp
dec
xchg
jbe
shlb
xchg
rolb
fldcw
pop
shll
lcall
lea
test
inc
aaa
loope
xchg
xor
int
cmp
xor
cmp
xor
dec
adc
sti
cmc
push
sbb
dec
into
push
push
mov
in
imul
in
data16
adc
push
mov
in
xchg
mov
in
mov
insl
cmpsl
addr16
jnp
jae
jo
pusha
cwtl
sub
lret
cmp
jle
xor
in
jo
inc
rcrb
pop
pop
xlat
pop
xchg
pop
roll
sbbl
jg
daa
xchg
out
xchg
xchg
cmc
fs
cs
sub
dec
in
das
enter
and
loopne
in
rolb
hlt
cmpsb
cmp
mov
mov
push
addb
dec
sub
ds
ss
push
jecxz
daa
push
mov
in
loopne
push
mov
repz
add
dec
or
fmuls
ret
sti
mov
dec
inc
sub
mov
cltd
dec
jnp
mov
nop
cmp
fdivrs
popf
ret
mov
jecxz
sahf
push
xor
jbe
cmp
inc
inc
repz
mov
push
je
daa
push
aad
mov
notb
fsubrl
add
je
call
iret
andb
add
inc
in
cli
or
jns
cmpsl
cmp
bound
stc
rolb
adc
dec
rcrb
pop
mov
inc
ret
rcrb
pop
sbb
adc
cld
inc
xchg
xchg
cld
loop
adcl
insl
jno
sub
js
or
sbb
xchg
aas
sub
jns
dec
fnstcw
push
push
dec
clc
inc
xor
sbb
and
imul
popf
call
aas
jmp
cmpsb
xchg
loope
jmp
scas
loopne
pop
adc
dec
xor
pop
push
testl
xor
nop
pusha
mov
movsb
adc
inc
push
inc
mov
mov
hlt
cmc
sbb
ljmp
gs
pusha
addb
jg
shll
pusha
lds
pop
inc
mov
mov
lcall
add
jo
sub
aam
cli
xlat
mov
sub
xor
addr16
pop
jmp
add
lcall
xchg
pop
ljmp
imul
mov
inc
cmp
shl
jns
cli
pop
dec
xorb
xchg
loopne
jge
popa
adc
mov
out
dec
int3
or
rcl
std
mov
xchg
pop
push
jb
mov
das
inc
add
es
lock
mov
ss
mov
out
pop
xor
dec
pop
imul
outsl
sub
add
out
push
sub
xchg
add
and
es
test
loopne
aam
insl
repnz
mov
lret
out
sub
mov
dec
test
outsl
xchg
cmp
ss
push
pop
repnz
jge
sub
insl
jle
add
jnp
mov
call
xchg
or
sub
mov
rolb
scas
jnp
fs
pop
mov
es
xchg
xlat
inc
mov
icebp
mov
mov
mov
das
inc
jmp
ds
push
cmp
xor
mov
push
dec
cmpsb
iret
les
mov
push
sub
arpl
jp
or
mov
addb
shll
notb
dec
mov
pop
mov
int
nop
movb
dec
or
push
and
ja
mov
mov
push
cld
jno
xor
pop
jl
lret
imul
pop
aaa
xor
pop
or
cmp
adc
roll
inc
inc
adc
lea
or
jae
inc
imul
loop
das
outsb
mov
sbb
leave
xchg
push
addb
pop
cmpl
jecxz
sti
mov
pop
adc
fs
xor
sub
hlt
aas
cmp
mov
jo
cmp
dec
mov
adc
xorl
pop
jg
data16
pop
fistpl
xor
dec
sar
shrb
mov
sbbl
push
cli
in
ret
cld
jns
mov
out
icebp
inc
sub
adc
inc
in
xchg
sub
mov
lahf
dec
jbe
loopne
cmpsl
in
js
sub
mov
cmpsl
adc
jge
popf
xor
cld
movsb
or
cli
xor
mov
dec
and
mov
dec
test
mov
and
xor
loope
sub
mov
mov
mov
rcrb
je
fadd
sub
cmp
push
jne
push
dec
add
sub
mov
mov
push
mov
dec
adc
psrlw
sbb
cltd
add
xchg
loop
roll
iret
push
push
and
js
lods
inc
imul
xchg
loopne
sub
shl
leave
imul
cli
lds
out
xlat
cltd
mov
je
mulb
stos
lahf
test
out
stc
loopne
out
push
orl
cmp
adc
push
repz
mov
jge
ret
jmp
sub
aad
movsb
xor
into
xor
mov
or
jbe
outsl
leave
cmp
sbb
sub
in
mov
jecxz
sub
inc
cld
pop
pushf
in
sub
pop
inc
cmp
popf
and
cli
daa
pop
mov
mov
or
cmpl
push
push
or
stos
vpand
dec
pop
insl
fmul
jae
fimuls
outsb
jb
ret
movsb
mov
dec
jmp
test
jmp
data16
out
shrb
in
sub
mov
xor
orl
xor
xchg
push
movl
in
xchg
dec
notb
pop
mov
xchg
push
adc
add
xchg
fcomi
pop
jne
or
mov
into
stos
rorb
lds
mov
push
xor
mov
sub
stc
ror
cmp
out
sub
pop
jl
push
xorl
insl
lods
in
insl
cmp
mov
in
and
add
adc
rcrb
mov
cmc
and
mov
push
jns
mov
cwtl
xchg
and
jns
es
pusha
sub
lods
or
dec
xor
dec
xor
sub
out
mov
and
mov
test
push
out
or
push
or
inc
mov
inc
imul
rclb
addr16
pushw
cmp
push
xor
pop
daa
negl
decl
fisttps
mov
xlat
idivl
pop
mov
xchg
xchg
daa
sarb
mov
fmuls
jno
push
and
mov
jp
mov
icebp
push
jp
lods
imul
push
pop
push
push
sbb
or
imul
ljmp
leave
mov
or
pop
out
pop
pop
push
jno
xchg
push
sub
mov
icebp
fwait
adc
fcoml
sub
fstp
mov
loop
lea
mov
and
gs
lds
xor
jo
data16
je
mov
test
xorl
fsubl
sahf
insb
or
sbb
xchg
scas
jg
sbb
ss
or
jmp
ret
adc
in
mov
mov
ljmp
lds
xchg
adc
bound
and
aas
mov
mov
out
and
xchg
lods
jl
sti
ret
fistps
lret
pop
push
mov
and
sahf
insb
xchg
jae
jns
addl
enter
xchg
jnp
jmp
cmp
push
out
dec
jecxz
cmpb
mov
inc
ret
test
xchg
jl
movsb
sar
mov
loop
dec
adc
adc
push
cld
dec
jle
dec
add
call
xchg
cs
iret
loope
loopne
test
out
out
dec
lret
in
lret
mov
rcr
pushf
add
pop
mov
mov
push
mov
sbb
sbbl
sahf
inc
inc
into
sbb
jle
addr16
insl
jp
pop
inc
stc
es
xlat
lds
push
and
pusha
sbb
lea
pusha
rcrb
adc
dec
or
test
ljmp
or
xor
repz
mov
or
inc
mov
push
pop
push
mov
sbb
das
movsb
dec
inc
movsl
ret
test
popf
jge
pushf
dec
cmpsb
xor
mov
stos
addb
sub
int
adc
pop
xlat
add
sbb
enter
loop
mov
jg
cwtl
lahf
mov
inc
mov
vmwrite
and
mov
adc
stc
add
cltd
sbb
fstpl
scas
scas
fcmovne
jno
xor
mov
in
jg
and
shlb
lcall
gs
mov
add
cmp
test
pop
andl
repz
add
mov
rorb
push
add
sub
mov
sti
lods
lds
lcall
fcoml
mov
mov
aaa
xor
je
stos
mov
popa
cmp
loopne
in
out
test
cmp
cld
push
xor
aas
xchg
adc
cmp
hlt
repnz
adc
imul
aam
cmp
jmp
xchg
dec
or
jno
test
cld
sub
ret
int3
push
mov
fnsave
filds
shrl
fistpl
das
cwtl
push
cmc
clc
adc
sbb
cmp
ret
or
jge
or
xchg
xchg
jle
out
and
hlt
mov
push
repnz
sub
push
dec
inc
shl
cmp
aas
inc
jns
dec
jl
mov
mov
imul
shlb
data16
xorb
out
fstpl
mov
ret
in
mov
fidivrl
inc
arpl
mov
fcmovb
jecxz
inc
in
frstor
or
lock
addb
dec
aad
and
es
lret
fidivrs
xchg
mov
dec
in
int
jb
cmp
xor
aam
sbb
sub
enter
mov
inc
sahf
inc
jge
xchg
hlt
add
xor
flds
es
clc
loopne
mov
fcmovnbe
fwait
out
pop
in
mov
push
leave
out
scas
mov
idivb
outsb
out
dec
xchg
sbb
push
inc
add
popa
jle
lods
mov
movsl
aaa
fcomps
sub
sbb
dec
or
adc
fwait
jno
pop
xor
imul
outsb
pop
fsts
sarb
pop
push
cmpsl
push
mov
hlt
mov
outsb
xchg
icebp
gs
jns
and
cmp
mov
push
and
xchg
jl
fwait
addl
pop
dec
cmp
in
or
imul
and
inc
sub
jae
adc
insb
roll
xchg
xor
mov
fisttps
cmp
inc
mov
dec
adc
out
loopne
mov
lock
lods
lods
cmp
lods
xchg
in
test
mov
mov
repnz
dec
cmp
sti
in
inc
cmp
movsb
cmc
fnstcw
sub
add
sbb
push
dec
or
mov
push
sbb
fimull
sar
jns
dec
icebp
cmp
xor
ret
jns
js
xchg
mov
xor
or
pop
aas
adc
fnstsw
out
dec
sahf
clc
xchg
test
cmc
sbb
sbb
add
push
push
mov
mov
insl
pop
lods
xchg
xchg
mov
pop
sub
lods
ljmp
adc
pop
adcl
xlat
jae
bound
jae
dec
ss
movsl
loopne
jb
daa
cmc
or
jmp
sub
pop
aaa
pop
cmc
xchg
loop
pop
icebp
add
imul
push
out
adc
aas
mov
xchg
call
xchg
dec
add
pusha
xchg
add
leave
inc
xchg
fadd
and
pusha
and
fwait
inc
sahf
test
test
xchg
rorb
mov
fldcw
push
xchg
inc
enter
sbb
inc
jae
shlb
cmp
fwait
adc
aas
out
js
ja
pop
sub
aas
jp
int3
lods
cli
jle
cmpsl
sub
sti
rclb
and
rcll
inc
xchg
fidivrl
shll
shll
or
push
xchg
not
hlt
inc
jns
fsubl
insb
daa
mov
andb
sahf
mov
sub
or
cmp
xchg
xor
sbb
mov
lret
hlt
push
mov
ret
fstl
xor
lret
fistl
lods
mov
test
sub
outsb
inc
pop
testl
aam
stc
call
sub
fisubs
cmpsl
cmp
xchg
mov
movsl
inc
imul
leave
std
mov
mov
rcr
push
mov
push
ret
pop
jg
pop
shrl
inc
push
dec
dec
lret
rclb
fildl
mov
imul
stos
das
in
gs
sbb
cli
jmp
divl
xorl
imul
and
mov
adc
cmp
dec
push
xor
fstp
outsl
int
push
mov
incb
jge
repz
jmp
pushf
mov
inc
leave
mov
or
xchg
lods
fwait
xchg
ja
xchg
stos
rorl
in
push
cmp
sub
jp
push
and
mov
dec
cmp
stos
mov
and
mov
lcall
test
fs
mov
lret
subl
leave
inc
icebp
push
pop
or
adc
shll
out
jb
dec
and
jae
sub
mov
out
pop
test
das
jle
pop
xchg
fcmovbe
insb
pop
inc
jmp
orb
mov
clc
cmp
mov
add
fs
cmp
cmp
stos
mov
je
dec
inc
add
add
push
pop
push
and
pop
enter
xor
test
inc
ret
adc
cwtl
dec
adc
sbb
jg
cmp
sbb
push
mov
scas
fsubrp
insb
sbb
cli
adc
xor
leave
add
cmc
push
sbb
sub
shll
bound
fisubl
fbstp
test
mov
into
push
lds
popa
jne
ret
push
adc
jg
test
jge
loope
mov
out
push
or
mov
sub
loop
jecxz
aaa
add
add
adc
les
and
stos
ja
rolb
pusha
lret
aad
xchg
lock
and
mov
mov
add
ret
insb
cltd
out
stc
xchg
sub
dec
ret
mov
popf
into
cmpsb
push
test
pop
adcb
pushf
jae
lods
jecxz
adc
test
les
xorb
out
jge
fldt
adc
insl
add
dec
jcxz
repz
out
arpl
loop
fsubl
movb
ds
push
fcmovnu
stos
jnp
or
sub
cmovne
loopne
dec
repz
adc
pop
ljmp
add
icebp
aad
mov
inc
cmp
in
cmp
xlat
gs
rol
rorb
rcl
clc
pop
pop
cmpsb
cmp
aas
or
mov
in
js
push
and
pop
mov
pop
leave
sub
and
into
lcall
push
cmp
lds
sbb
add
mov
xrelease
pop
test
mov
adc
insl
add
in
push
sub
jecxz
stc
cli
inc
or
sbb
adc
fwait
scas
shlb
stos
mov
fidivrs
fsubrs
fcmovnb
dec
aam
xchg
push
cmp
mov
fs
adcb
imul
pop
xchg
addr16
out
mov
in
push
inc
or
lcall
sub
fistpl
out
arpl
aaa
or
shl
rcrb
xchg
loop
js
ja
mov
fistpll
loopne
mov
add
ds
and
xchg
std
fbstp
es
decl
xor
lret
mov
pop
xor
xchg
movsb
cmc
mov
cmpsl
xlat
push
jge
xchg
xchg
les
pop
push
cwtl
loope
adc
xor
sti
push
push
outsl
adc
hlt
cmp
push
pusha
cmp
lret
inc
mov
addr16
rolb
adc
sbb
aas
repnz
jns
push
das
or
lret
adc
xorb
push
ja
data16
cmpsb
rol
jp
clc
rcrb
lea
cmp
xorl
add
in
push
insl
cmp
jne
mov
fcmovbe
cmpsb
mov
shl
dec
out
cmp
shll
xorb
mov
iret
lods
addr16
sub
cmp
testl
lret
rorl
sbb
cmp
jno
sub
ja
jg
and
or
adcb
sarl
push
and
jg
cmp
mov
and
out
into
dec
sub
imul
xchg
cmpl
push
out
dec
adc
mov
test
mov
inc
repz
push
in
mov
mul
mov
jbe
pop
pop
sub
sbb
push
mov
nop
sub
pop
jl
sbb
popa
imul
pop
pop
pop
loop
stos
aas
xlat
repz
add
int
adc
dec
cmp
dec
add
jmp
clc
push
lds
testb
bound
dec
mov
data16
pusha
sbb
pop
push
xchg
dec
mov
push
mov
je
pop
mov
dec
push
pop
xchg
and
roll
fbstp
popa
push
hlt
addr16
push
or
ds
pushf
jb
std
xor
ja
jo
insb
xchg
or
xchg
roll
xchg
aaa
mov
fs
lret
jmp
pop
test
fstpl
pop
loope
sbb
ja
add
mov
mov
sub
aaa
xchg
ret
inc
imul
fwait
xlat
sarb
bound
pop
adc
cmc
ss
jl
cmp
jae
or
dec
jb
inc
mov
inc
pop
add
repnz
add
adcb
adc
adc
clc
mov
and
xlat
push
fisubrl
mov
adc
scas
in
sub
inc
mov
mov
int
js
mov
jmp
mov
addr16
icebp
sub
lret
test
test
inc
mov
repnz
aam
popf
dec
adc
loop
push
inc
jmp
push
xor
mov
addr16
negl
push
aam
cmp
loop
sub
mov
pop
scas
and
or
leave
scas
lds
popl
mov
pop
xchg
xor
adc
and
pop
test
mov
fidivrl
mov
leave
push
or
push
sbb
cs
push
mov
xchg
aad
dec
jg
add
out
ss
push
rcrb
cmp
or
add
fsubs
jmp
loopne
adc
andl
dec
sbb
sbb
call
add
shlb
mov
mov
cld
inc
nop
sbb
jg
aas
adc
and
lock
cli
pop
push
cmp
data16
sbb
ret
sub
push
mov
dec
mov
pop
cmc
cmp
call
out
test
mov
cmp
xchg
cmpsl
aas
ret
test
cmpsl
pushf
push
cmp
sbb
xor
add
stos
adc
fistpll
xor
adc
pop
push
jbe
enter
jae
sbb
dec
xchg
mov
mov
inc
xlat
lret
int
lods
fidivs
sbb
xor
xor
mov
lahf
in
pop
sbb
ds
pop
mov
mov
fld
xor
dec
cwtl
imul
xor
or
cmp
jp
add
jmp
mov
mov
sbb
decl
mov
rcl
and
jnp
lock
push
sub
push
jge
mov
mov
int
in
push
aam
sbb
xchg
sbb
push
mov
pushf
and
mov
add
sbb
in
sti
adc
xor
pop
push
aad
add
call
jmp
lcall
and
push
lahf
inc
in
popa
adc
xor
sbb
cmp
push
mov
or
or
mov
test
xlat
in
or
jl
faddl
es
adc
inc
ja
lret
cmp
das
sub
cltd
mov
and
jnp
add
cmp
sbb
xchg
pop
and
aas
aas
xchg
lea
xor
adc
xor
aam
push
sub
fisubrl
mov
push
inc
xor
xchg
inc
cmpsb
jg
dec
rcrb
lahf
cli
or
inc
mov
xlat
sbbb
out
js
mov
test
sub
lds
jb
scas
aaa
adc
jne
mov
xchg
sbb
loop
mov
push
mov
fs
cwtl
subb
insl
mov
sti
nop
clc
clc
adc
iret
std
maskmovq
mull
outsl
sbb
shlb
stos
mov
ror
pushf
fadds
inc
test
xchg
xor
mov
daa
ljmp
or
and
add
sbb
iret
cld
enter
push
in
add
push
inc
rcrb
popa
dec
mov
in
jmp
insb
jb
les
pop
call
rclb
es
dec
fistpl
xor
pusha
das
mov
or
stos
push
movsb
ss
fnstcw
adc
pusha
adc
mov
cs
xchg
push
mov
es
lock
mov
loop
sub
push
pushf
shll
push
mov
ret
ret
jle
cmp
dec
lret
inc
dec
jp
push
idiv
xor
and
xor
jnp
mov
pop
sbb
or
pop
mov
mov
dec
test
insl
sbb
sbb
sub
fiadds
push
test
sub
enter
fidivrl
rcrl
pop
mov
mov
add
es
xchg
dec
xor
pop
push
lods
shl
jb
mov
xor
lcall
push
enter
xor
or
les
xchg
pop
jecxz
mov
pop
test
mov
mov
ror
scas
shlb
mov
pop
jnp
sbb
insl
xchg
jl
push
dec
and
mov
jl
push
sbbl
roll
jp
dec
ret
ret
adc
mov
pop
inc
inc
mov
mov
fstpt
out
fs
pop
jecxz
movsb
lods
scas
xchg
aas
jg
inc
xchg
cmp
fs
add
sub
push
pop
in
dec
repnz
test
cmp
in
lods
lods
push
mov
in
movswl
notl
push
ljmp
pop
mov
mov
xor
lods
xchg
cmp
outsb
or
in
xchg
dec
sbb
push
xchg
pushf
and
nop
adc
adc
aam
pushf
cmp
flds
pop
addr16
mov
dec
addr16
sbb
xchg
mov
xor
rolb
jno
sbb
or
int
mov
jp
dec
pushf
fwait
sub
inc
jp
adc
mov
fs
outsl
fwait
inc
roll
and
dec
in
movb
or
xchg
mov
cld
enter
lea
inc
sbb
add
mov
lcall
aam
pop
xchg
andl
ss
jno
jb
adc
scas
jns
add
xchg
cmp
inc
xchg
cwtl
loop
or
xchg
jbe
sub
out
movsl
cld
enter
add
cld
out
adc
loop
sahf
jnp
pop
bound
push
adc
mov
pop
shrl
jb
xchg
daa
xor
push
lahf
pop
mov
imul
mov
sbb
aaa
xor
xchg
lret
mov
xchg
es
mov
cmpsb
mull
movsb
pop
dec
aaa
add
rolb
cmpl
jl
adc
inc
into
fistpll
insl
xor
aad
loope
xchg
shlb
push
out
mov
ljmp
jp
fmull
xchg
rolb
jb
inc
iret
into
repz
pop
mov
lcall
cs
mov
xchg
lret
into
xor
movd
jnp
fs
repnz
mov
cmp
imul
in
rolb
xlat
mov
mov
insl
das
insb
jae
jbe
or
jg
test
mov
repz
popf
xorb
xor
mov
test
in
fiadds
mov
lds
push
jmp
test
inc
push
fwait
and
mov
lcall
iret
cmp
adc
adc
mov
sbb
int
ror
lods
ret
jo
pop
shlb
nop
mov
inc
cmpsb
push
les
popa
xchg
jg
jno
pop
fdivl
cmpsl
call
ret
repz
lret
pop
xchg
arpl
pop
es
movsb
cmpsb
icebp
ljmp
xchg
jnp
mov
pop
lret
xor
int
mov
xchg
mov
dec
jg
arpl
ffree
xor
fbstp
cmp
test
call
jno
jg
mov
rol
addl
dec
nop
mov
jge
rclb
mov
aam
xchg
cmpsl
mov
scas
or
and
dec
mov
mov
in
outsl
cmc
sti
mov
pop
test
or
sti
repz
cmpsb
movsl
add
adc
pop
and
sbb
ss
into
xchg
cmp
or
bound
or
and
sub
mov
fcoms
jne
shll
lret
in
push
cwtl
and
pop
aam
rcr
dec
ss
inc
test
pop
pop
sub
cmp
movsb
mov
cmp
inc
stos
cltd
xor
shlb
roll
in
out
mov
jbe
movsl
push
add
dec
mov
setns
pop
mov
cld
cmpsl
arpl
les
rcll
out
xor
lcall
jbe
dec
adc
test
mov
add
mov
sti
push
add
jl
and
cmc
pop
jg
mov
pushf
dec
bswap
push
fprem
mov
dec
pop
sub
shll
out
push
lds
push
push
dec
push
movsl
in
mov
test
mov
dec
sub
push
js
xchg
je
ret
fiadds
repz
out
adc
rcll
clc
out
xor
xor
or
sub
js
or
adc
mov
push
sti
xor
mov
xor
mov
jnp
dec
rclb
addr16
xor
stos
es
push
jl
mov
mov
add
outsl
mov
sahf
cld
pop
fisttps
xor
xor
or
push
ficoml
pop
lods
movsl
ss
push
inc
xor
in
lret
xchg
out
fcmovnb
pop
push
test
rcll
add
dec
mov
and
fsubl
and
sahf
xchg
repz
pop
mov
shrb
imul
ja
push
pop
out
dec
pop
jb
in
jbe
clc
dec
outsb
jns
iret
mov
outsl
add
sub
push
cli
mov
shlb
sbb
pop
adc
popa
add
std
pusha
and
pop
pop
mov
test
shlb
or
shlb
dec
cmp
sti
pop
xor
scas
pop
ds
mov
mov
cmp
incl
add
xchg
js
in
or
ds
jecxz
pop
mov
outsb
stc
jae
imul
jbe
int
out
mov
les
xchg
inc
fisubrs
in
xor
pop
dec
jne
push
daa
inc
dec
push
cmc
int
int3
pop
je
sbb
hlt
mov
ja
add
filds
and
or
jno
push
xlat
icebp
ja
push
push
mov
test
fs
fldt
mov
push
xchg
mov
data16
jle
push
ret
mov
mov
iret
call
imull
cld
rcrl
loopne
cmp
fsubl
fiadds
shll
imul
movsl
ljmp
jns
adc
test
scas
or
imul
adc
mov
loop
dec
inc
scas
outsb
loope
aam
jg
sbbb
cmp
jno
pop
or
insl
lret
and
push
js
test
adcb
inc
out
std
mov
pop
cs
cmp
push
cmp
adc
lods
adc
clc
jmp
aas
sub
popa
adc
jmp
ljmp
mov
push
add
dec
out
and
dec
js
lret
xchg
mov
movsl
daa
adc
sub
xchg
add
aad
js
rcl
jp
push
cmp
fimuls
cmpsl
cmp
ja
or
int
inc
hlt
mov
pop
aaa
inc
add
pop
pushf
jp
cwtl
and
mov
lods
lods
inc
push
xchg
add
pop
filds
jnp
inc
adc
sbb
scas
lock
not
cmp
test
push
mov
jge
aam
adc
loopne
arpl
mov
sbb
je
loope
xchg
rcr
mov
inc
cmp
push
aaa
je
xor
repz
stos
xchg
jmp
inc
mov
aam
fcomps
es
inc
std
and
cmp
fstl
rclb
stos
mov
xor
test
cmp
adc
or
movsl
cs
call
adc
arpl
xor
sbb
lret
nop
in
inc
ss
addr16
aaa
stc
mov
mov
mov
cmp
adc
and
mov
fiaddl
js
movsb
mov
sbb
enter
in
sub
hlt
push
aam
xor
fnsave
and
rclb
adc
loop
sbb
jmp
das
mov
xchg
mov
dec
sub
and
stc
push
in
pop
adc
or
insb
push
xchg
repnz
sbb
bnd
or
mov
pop
and
fsubrs
dec
sub
push
cld
sti
in
nop
push
ss
stc
mov
lods
lds
movsl
bound
daa
dec
push
jmp
push
pop
hlt
orl
jle
mov
sbb
mov
jp
sahf
push
push
jne
test
mov
shlb
or
mov
leave
call
sbb
rorb
mov
rorb
push
mov
mov
test
test
push
or
pop
mov
pop
rclb
aaa
dec
push
sbb
add
adc
dec
dec
adc
out
inc
add
cs
jae
neg
repnz
popf
xchg
mov
jecxz
aam
inc
inc
repnz
xchg
bnd
mov
or
pop
bound
lahf
add
mul
xchg
push
xor
add
or
sbb
das
adc
push
or
dec
cmp
xor
adc
mov
sti
aaa
adc
fsubp
add
dec
loopne
dec
add
push
sub
and
sbb
xchg
stc
stc
push
pop
or
mov
push
loopne
jg
out
stos
mov
pop
fidivrs
out
add
xor
lods
data16
insb
inc
int3
sahf
test
std
sbb
fdivl
ja
pop
lods
pop
push
icebp
push
fsubs
negl
fcomps
pushf
jg
adc
shrl
or
mov
lods
cmp
scas
gs
jns
adc
push
fsubrs
int
in
popa
scas
loope
cmp
insl
sub
frstor
dec
jg
mov
and
sbb
jge
mov
shlb
lea
es
stos
out
cmc
jl
popf
outsb
sbb
aam
lcall
sahf
lcall
add
sub
aaa
cwtl
stos
cmpsb
std
push
xchg
shr
and
and
out
xchg
lods
arpl
leave
or
dec
loopne
add
jbe
and
mov
dec
fiaddl
fisubs
mov
adc
sahf
xor
ret
sbb
push
cmc
jl
xchg
mov
sbbb
mov
jecxz
sub
mov
imul
mov
inc
loop
inc
pop
idiv
mov
cmp
push
sub
popa
jo
cmpsb
aam
mov
cmp
inc
inc
in
cmpsl
xchg
xchg
xor
aaa
xor
int
scas
test
inc
das
sti
jg
insl
inc
mov
in
push
xor
stc
test
in
jmp
jmp
inc
sub
inc
mov
dec
daa
loope
call
cmp
inc
and
add
cmp
in
pop
dec
mov
sub
fstps
mov
outsb
xor
popa
repnz
xchg
leave
xchg
cmp
jg
call
test
mov
orl
scas
hlt
sbb
add
repnz
aaa
repnz
mov
sub
inc
mul
lret
pop
fdivp
imul
adc
or
sbb
sub
js
stc
adc
loope
jno
aad
out
addl
aaa
test
in
fists
xchg
ret
lret
mov
out
and
movsb
mov
lahf
push
scas
out
pop
and
cmpsb
xchg
pop
add
push
or
xor
nop
sarb
jae
xchg
movsl
ret
jge
addr16
xchg
sbb
mov
cmp
fwait
arpl
dec
ds
decl
repz
fadd
cmp
out
cmp
rclb
loope
jecxz
mov
test
and
sub
aam
pop
mov
movsb
bound
mov
cmp
lods
notb
pop
and
xchg
cmp
test
sahf
pop
or
adc
xor
out
sbb
shll
ficoml
and
mov
lea
daa
lea
les
cmp
fnstcw
push
enter
dec
lods
stos
and
ret
ret
xor
xchg
jbe
stos
cli
stos
add
xchg
aad
xchg
in
test
mov
mov
sub
sbb
xchg
mov
rcr
xchg
pushf
outsl
inc
lcall
dec
fwait
mov
push
sub
or
fsubs
adcb
mov
mov
fnstcw
sbb
sub
stos
sub
xor
mov
aam
mov
mov
cmp
data16
dec
iret
lods
sub
push
xlat
jl
inc
clc
test
int3
adc
mov
push
push
mov
subb
cli
jmp
mov
mov
and
push
cs
clc
daa
lods
movsl
adc
shl
out
jg
aad
popf
push
push
dec
divb
imul
sub
push
jg
ret
and
mov
std
es
mov
or
jae
and
adc
adc
sarl
sub
jge
outsl
sahf
sbb
int
xchg
add
and
sub
fcom
shll
xor
sarb
lcall
nop
adc
push
sub
xchg
adc
sbb
ljmp
sub
push
rorl
and
adc
jmp
out
in
sub
dec
cld
mov
mov
xor
imul
cmp
pop
or
movsb
rol
fstpt
ret
pop
test
sbb
push
jp
loope
jno
cmp
adc
and
sub
nop
push
mov
jno
push
or
inc
sbb
lcall
xchg
sub
aaa
mov
xchg
pop
and
dec
stc
push
jo
lods
adc
mov
jae
fadds
test
js
cmc
iret
int3
fmuls
xor
movsb
pop
mov
push
repnz
data16
out
loopne
inc
jbe
lods
pop
fstpl
test
dec
popa
fimuls
push
iret
sub
mov
adc
sbb
sahf
sub
adc
and
cli
mov
int
movl
pop
jge
sub
decb
aad
push
pop
imul
popa
test
xor
dec
xchg
inc
sub
jno
sub
add
dec
pop
mov
mov
mov
iret
jb
loop
jmp
dec
pop
rorl
jmp
mov
jg
push
stos
ficompl
add
sti
ret
ja
pop
popf
pop
jg
mov
addr16
cmp
add
fiadds
add
insb
test
inc
push
mov
push
cmp
subl
xorb
pushf
cltd
cmp
sub
push
fsubrp
jecxz
push
adc
xchg
lret
inc
push
loop
mov
adc
insb
idivb
getsec
sti
cmpsl
inc
fisubs
bound
mov
add
dec
mov
xlat
data16
mov
push
notl
aas
cmp
outsb
mov
xor
iret
mov
inc
int3
xor
mov
mov
sbb
repz
dec
int
das
inc
cmp
adc
cltd
pop
mov
into
adc
arpl
scas
movsl
arpl
jne
cmpsl
aas
insl
lods
cmpsl
in
mov
ljmp
mov
or
out
aam
loope
mull
push
call
xchg
mov
cmc
je
and
jmp
nop
xor
sub
or
xlat
and
inc
insb
cwtl
mov
cltd
and
sub
test
lret
cmp
cmp
shrl
cs
icebp
mov
sbb
add
push
test
xchg
pop
mov
mov
sbb
sahf
xchg
lret
and
and
adc
inc
adc
test
adc
prefetch
xchg
fldenv
cmp
gs
scas
and
ljmp
adc
cltd
adc
test
jno
push
inc
fwait
imul
xchg
or
aam
xor
test
push
xchg
sub
out
test
mov
scas
and
sbb
fldlg2
cmc
add
in
insl
inc
cs
fstl
std
pop
jno
out
mov
sarb
pushf
inc
cmpsb
shrb
inc
ja
js
jp
add
mov
daa
sbb
cli
pop
es
xorl
out
sub
cmpsl
mov
hlt
stos
jnp
ret
sbb
ljmp
ret
fdivrl
jns
mov
mov
repz
je
out
cmp
push
sbb
xor
shll
jnp
dec
pop
xor
jecxz
mov
dec
outsb
shlb
out
cli
icebp
arpl
and
and
fmull
mov
js
cli
add
and
loop
les
inc
pop
out
inc
and
lcall
mov
out
push
inc
inc
and
ja
dec
mov
ret
push
cs
or
outsb
cmpb
dec
push
mov
mov
lods
or
fs
dec
adc
jecxz
jl
sbb
fnstcw
popf
adc
lcall
fiadds
xor
jmp
xor
xchg
and
jae
int3
mov
inc
insb
adc
in
ss
xor
adc
dec
fs
mov
pop
or
imul
jmp
pop
xchg
fmuls
out
iret
mov
inc
sbb
bound
or
pusha
in
test
cmp
mov
xchg
mov
xlat
sub
in
inc
inc
shlb
in
int3
in
pusha
ja
cmp
rclb
lds
test
and
out
lods
mov
mov
push
dec
or
push
push
push
call
pop
lock
dec
arpl
sti
pop
cmpl
jge
movsl
ret
stos
sahf
and
loope
in
lcall
es
insl
adc
inc
ljmp
push
in
xor
add
sbb
push
cs
aas
psrlw
out
xchg
ss
sti
stos
mov
sbb
mov
xchg
mov
popa
pop
pop
dec
sbb
xchg
out
out
jg
mov
xchg
inc
call
push
fcoml
orb
fistpll
push
cmp
subb
push
xor
cmp
aas
mov
sub
dec
inc
icebp
adc
jge
cmp
movsb
fwait
jle
iret
and
pop
push
outsl
mov
cmpl
imul
fs
sbb
jb
adc
into
add
inc
adc
xlat
adc
je
outsl
mov
lods
sbb
jle
clc
jno
mov
sbb
jg,pn
jo
movl
or
cmpsb
mov
out
dec
mov
inc
outsb
loope
nop
out
mov
insb
clc
add
push
and
mov
in
les
loope
sub
cmp
std
pop
push
push
out
pop
sbb
hlt
xchg
lods
lcall
imul
mov
and
add
mov
mov
lock
pop
leave
fs
adc
push
mov
lret
mov
jge
ret
nop
push
pop
adc
pop
inc
mov
insl
es
pushf
iret
or
inc
fs
lds
mov
sub
cmpb
push
lcall
cs
shlb
lahf
shlb
pop
pop
xor
lahf
sahf
into
push
mov
enter
loop
mov
shlb
ljmp
push
push
xchg
pop
push
popa
sub
jo
lret
or
adc
lock
cli
adc
lods
mov
xchg
popa
push
push
pusha
ret
orl
push
pop
cmpsb
test
ljmp
lret
roll
xchg
inc
loope
dec
add
xchg
fildll
and
in
jp
xchg
or
adc
mov
iret
loope
and
push
in
repz
xor
int
icebp
mov
gs
dec
lea
or
or
or
ret
and
xchg
cmpsb
jl
or
cmp
jge
pop
inc
shl
xchg
cmp
stos
push
outsl
ljmp
xchg
cli
inc
hlt
dec
mov
jae
adc
lods
imul
push
jecxz
mov
adc
push
xchg
jp
sub
stc
popl
js
mov
push
mov
xor
dec
or
sbb
in
test
lock
idivl
add
sbb
in
sbb
dec
jmp
dec
fs
mov
sbb
inc
cmp
mov
aam
out
lcall
push
adc
out
jle
test
sbb
jp
fnstsw
aas
cli
lahf
ljmp
or
and
adc
push
data16
gs
adc
mov
xchg
lods
xor
out
gs
and
mov
roll
lods
lahf
leave
cmpsl
push
cmp
mov
lods
int
or
add
arpl
loop
push
clc
and
cs
sbb
das
or
std
sub
stos
sbb
fwait
cmp
mov
cwtl
lock
push
in
push
xchg
jb
jo
pop
dec
fidivrs
es
xor
cli
dec
push
out
jnp
mov
add
daa
test
test
xchg
mull
idivl
jl
adc
cli
push
leave
hlt
js
fcompl
jb
pop
push
rcr
enter
or
repz
fwait
data16
push
mov
adc
cmp
or
subl
and
xchg
pop
cmpsl
cmpsb
xchg
pusha
jns
xchg
rcl
mov
dec
adc
inc
out
or
loop
mov
stos
fistps
nop
adc
mov
repnz
sub
and
push
ret
jnp
test
jmp
cmpb
rcrl
mov
add
inc
pop
js
xchg
nop
pop
mov
mov
lds
outsl
push
leave
movsb
enter
pop
push
out
pusha
cmp
fdiv
mov
repnz
lods
cmpsb
inc
lods
rcrb
std
adc
pop
or
push
stc
divb
xor
dec
xchg
or
bound
cli
jo
xchg
in
ja
mov
sti
jp
dec
inc
fwait
mov
test
es
lods
lretw
mov
das
cmc
fistps
in
fisubs
cwtl
int3
scas
pop
lods
idivb
jg
xchg
lea
dec
bound
mov
fsubl
stos
inc
cli
adc
imul
inc
ja
js
sub
out
mov
add
iret
mov
shll
aam
cmp
cmp
mov
pop
and
jns
orl
dec
mov
sub
mov
pop
in
pusha
adc
pop
arpl
pop
inc
in
sub
fs
mov
pusha
divb
cltd
js
sbb
je
xor
cmp
push
adc
mov
mov
xor
xor
mov
pushf
nop
cs
and
and
xchg
push
insl
sbb
inc
dec
std
dec
leave
in
mov
stos
js
stos
dec
bound
scas
inc
push
xchg
jl
scas
ja
mov
push
xchg
imul
adc
fcmovnu
std
mov
pop
pop
orl
lret
cmpl
pop
icebp
sub
repz
clc
iret
mov
outsb
cmpsl
dec
mov
sub
fadd
call
je
incl
scas
cld
iret
adc
test
insl
out
dec
pop
nop
or
dec
mov
notb
or
addr16
scas
dec
mov
sub
mov
decb
sbb
and
scas
sbb
push
nop
mov
lcall
outsb
and
jg
icebp
sti
mov
cltd
test
mov
das
pop
lret
push
xchg
mov
cmp
subb
divl
xor
or
pop
rcrb
jmp
jb
js
mov
test
xchg
leave
mov
gs
pop
and
lods
cmp
lods
ss
mov
out
divl
xchg
pop
sub
inc
mov
fwait
shrl
stos
mov
fwait
xchg
inc
bound
pop
addr16
test
int3
dec
inc
subb
sub
dec
mov
jmp
leave
inc
insb
sti
outsl
jnp
mov
add
xor
jg
jb
mov
adc
push
popa
std
loop
sahf
push
mov
fists
fisubrl
fstp
ret
fdivrs
jnp
inc
jge
pushf
adc
test
fistps
jg
push
testl
sub
mov
mov
test
jge
mov
arpl
or
daa
das
sbb
es
xor
arpl
repnz
aaa
jge
and
mov
pop
and
scas
mov
dec
dec
mov
into
xchg
jns
pop
sub
ja
pop
int
sbbb
fcompl
mov
xor
or
push
push
inc
sbb
dec
push
push
in
dec
movsl
aas
nop
inc
nop
cwtl
pop
loop
mov
sbb
lcall
dec
xlat
je
jmp
cwtl
and
cli
mov
and
loopne
ljmp
mov
repz
mov
outsb
xor
or
cld
pop
mov
cli
push
and
jg
dec
jnp
in
cld
or
ret
mov
sub
jb
mov
repnz
jl
push
mov
adc
dec
cmc
inc
out
mov
dec
jg
test
lea
adc
fcmovb
sahf
cld
jae
fsubrl
jg
lahf
std
mov
int3
movl
adc
stos
pop
adc
negb
popf
inc
mov
sub
dec
dec
inc
lret
adc
push
shlb
cmpb
fdivs
mov
idivl
neg
dec
xchg
push
xlat
out
lea
dec
sbb
dec
fimull
lods
cmp
dec
inc
pop
gs
pusha
scas
mov
jno
inc
mov
sub
adc
jne
out
inc
popa
mov
push
dec
inc
push
pop
sbb
sahf
lods
lods
fimuls
xor
xlat
flds
std
sub
stos
subl
in
dec
add
dec
sti
scas
xchg
pusha
pop
jo
mov
fstl
pusha
rclw
aad
sti
mov
push
inc
sub
cmp
xorl
pushl
inc
cwtl
daa
mov
stos
out
push
xor
mov
adcb
std
push
dec
scas
or
and
sbb
dec
stos
test
push
xchg
bound
push
xor
ljmp
ret
add
les
stos
jns
pop
or
ret
inc
mov
andl
js
pop
and
arpl
dec
lcall
popf
xchg
aaa
push
pop
loop
subb
cmpsb
scas
in
fbstp
or
inc
fwait
xchg
xor
and
sbb
mov
xchg
ljmp
mov
cmp
pop
popf
pop
push
cmp
jle
cwtl
sub
and
pushf
add
dec
idivb
icebp
xchg
sub
cs
lahf
shll
jo
clc
mov
out
sub
jg
bound
pop
jbe
fwait
aam
xchg
enter
mov
xlat
cvtps2pd
inc
les
adc
mov
mov
mov
loope
sti
test
or
inc
pop
or
dec
sbb
fsubrl
sbb
ss
pop
ja
mov
in
dec
fcoml
fistpl
mov
in
pop
or
fnstcw
push
imulb
push
pop
and
mov
mov
fldl
mov
mov
pop
out
push
iret
add
lods
and
mov
jge
sbb
ret
add
sub
gs
add
push
pop
mov
or
into
aam
ds
sbb
bound
or
and
enter
jg
dec
push
sub
mov
sbb
int
sub
sub
test
mov
les
adc
mov
adc
orb
subl
addl
ljmp
pop
mov
leave
pop
ja
push
mov
insl
out
cwtl
pop
and
jbe
ja
mov
loopne
lds
adc
cwtl
lret
mov
movsl
mov
mov
roll
sbb
aaa
add
inc
xchg
lock
mov
enter
cwtl
int3
enter
mov
das
xor
js
cs
stos
push
add
adc
aaa
repnz
add
xchg
aas
xor
jne
jo
jae
fwait
test
icebp
pop
jns
sbb
mov
lods
fisttpl
shlb
xor
arpl
inc
sub
ret
xor
inc
mov
sub
jae
dec
fstps
ljmp
mov
xor
mov
pop
outsl
sahf
or
push
dec
daa
ljmp
cmpsb
lret
mov
cmpsl
pushf
aad
aam
xlat
scas
ja,pn
lahf
pop
rcll
fistpl
fistpl
int3
mov
mov
sbb
dec
mov
outsl
cmp
int3
cwtl
idiv
jp
sbb
add
insb
sub
test
test
icebp
outsb
inc
pop
por
adc
adc
xor
mov
mov
in
adcb
insb
sub
or
jne
movsl
mov
jl
xchg
mov
cli
and
pop
arpl
jbe
rol
push
ja
xchg
pusha
pop
dec
cmp
push
sbb
test
fnsave
mov
adc
dec
ficompl
mov
add
or
and
dec
or
out
std
bound
cwtl
mov
xor
call
call
jo
xor
imul
subb
or
mov
dec
adc
test
add
mov
jno
adc
fs
dec
stos
mov
jns
rol
and
adc
call
pop
insb
outsb
xchg
popf
pop
ret
popa
in
pop
aaa
movsl
xor
mov
sub
dec
stc
mov
sbb
jae
jns
jo
xor
sbb
test
pop
fcmovbe
es
xor
jns
xchg
sub
mov
xchg
repnz
sub
jl
xor
sub
mov
int3
add
inc
mov
jno
in
cmp
dec
icebp
out
lret
mov
lods
shll
lds
adc
scas
mov
out
outsl
cli
cmp
push
lret
in
ret
mov
cs
dec
cwtl
jo
inc
js
movsb
jnp
imul
mov
dec
fidivs
xchg
push
dec
fs
jae
adc
xorl
jne
cmp
sub
mov
repnz
cwtl
cmp
cmpsl
dec
xor
xchg
mov
sub
mov
sub
ror
lret
outsb
jecxz
push
mov
push
dec
xchg
jnp
push
out
lcall
sbb
fst
pop
rclb
out
fnstcw
call
lock
and
add
xor
jae
inc
xchg
fs
inc
push
rorl
sahf
hlt
sub
scas
popf
fs
add
push
pop
pop
cmp
push
pop
arpl
and
test
inc
cmc
xor
mov
xchg
pop
add
sub
mov
lahf
sbb
adc
lahf
pop
dec
scas
in
push
andl
xor
push
ds
bsr
or
cmp
xor
into
je
imul
das
ds
dec
cli
fbstp
jne
dec
jno
outsb
sub
and
inc
push
fcmovne
or
mov
mov
dec
xchg
inc
repz
inc
xchg
add
xchg
pop
imul
and
jmp
test
mov
cltd
dec
jge
iret
mov
sub
inc
sub
and
mov
ud0
loope
arpl
mov
into
cmp
adc
popf
in
push
test
xchg
inc
mov
push
ret
mov
daa
xor
xorl
aaa
jnp
dec
or
sub
aam
sub
xor
les
jno
jmp
les
rolb
ret
cmp
fistpll
decb
inc
and
push
inc
sbb
inc
jo
in
jmp
aam
xor
popa
mov
mov
push
pop
mov
pushf
jmp
fmull
mov
push
ja
in
inc
out
push
ficomps
stos
int3
or
push
repnz
xor
inc
sub
sub
sbb
dec
sub
aaa
xor
movsl
adc
xor
shr
push
stc
adc
inc
mov
jae
lahf
imul
pop
lahf
cmc
cld
or
jmp
or
data16
stos
rcrb
jnp
and
jl
stos
ret
sbbb
and
lret
mov
push
push
inc
xchg
and
lods
push
test
and
or
jecxz
lret
xchg
dec
roll
ret
and
or
movsl
xor
in
mov
mov
push
outsb
mov
fsubr
mulb
pop
sbbl
xor
mov
test
lret
xlat
and
jb
xor
mov
lock
inc
and
cwtd
mov
fldcw
mov
mov
mov
inc
push
sbb
out
popl
addb
pop
bound
jp
test
mov
pusha
stc
pop
jecxz
cs
adc
cs
aam
and
jae
push
or
xor
push
les
lods
in
add
sbb
sbb
xchg
mov
dec
jno
orl
loop
push
dec
insb
gs
xor
push
pop
loope
inc
psubsb
xor
jno
popa
fidivl
inc
add
push
inc
sbb
xchg
pop
test
sbb
addl
mov
nop
arpl
mov
pop
lcall
scas
aam
mov
loopne
cld
div
add
daa
adc
jae
daa
loop
cmp
ss
mov
xlat
js
sti
decb
xor
add
lods
mov
int3
into
jb
xchg
sbb
es
xchg
lds
movsb
repnz
in
mov
shl
push
mov
mov
test
push
ds
arpl
popa
fbld
xor
cmp
xchg
mov
sub
cmp
inc
ss
mov
jmp
mov
in
sbb
mov
jo
nop
in
cli
popa
mov
sbb
inc
lret
fldenv
mov
mov
bound
cmp
outsb
fdivp
enter
fldenv
push
aaa
addr16
mov
and
mov
scas
cmpsb
call
or
fs
aas
mov
repz
jno
pop
jo
sbb
push
push
inc
lods
jp
stos
dec
shrl
add
lret
insl
and
into
cmp
xor
lock
adc
jno
shl
sub
imul
sbb
insb
xor
pusha
mov
fisttpl
inc
clc
icebp
fisttpl
insl
jbe
add
cs
fs
sahf
pop
mov
add
in
outsl
stc
fdivs
rorl
lds
jle
jne
fs
lahf
sahf
aas
data16
ja
pop
mov
out
call
gs
add
jge
enter
jl
pop
aaa
cmpsl
clc
add
sub
js
aaa
inc
push
into
test
out
arpl
xor
sbb
push
clc
hlt
cmp
mov
aam
sbb
in
add
jg
cltd
das
insb
dec
adc
jnp
xchg
int3
fwait
inc
mov
or
or
es
mov
ficompl
ret
jp
sub
lret
pop
ret
xchg
fsubrs
or
loope
add
mov
int
inc
add
lods
clc
mov
fadd
lahf
cmp
out
dec
js
add
inc
push
int3
lock
sub
cli
mov
das
repnz
mov
sarl
inc
addr16
sbb
mov
in
mov
out
jne
je
rcrl
aaa
les
sti
sbb
call
jmp
jbe
pop
cmp
aam
pop
inc
cmp
arpl
jl
sbb
add
inc
in
xor
out
ror
or
add
jnp
or
std
mov
sahf
mov
jmp
in
jle
repz
std
or
lret
sub
popa
dec
decb
push
lret
imulb
stos
xchg
mov
xchg
add
dec
int3
mov
cmp
icebp
cmpsb
je
out
push
jmp
pop
add
aam
push
mov
cmp
jne
mov
sub
adc
cmpsl
rcrb
imul
adc
jo
sub
leave
push
mov
pop
leave
aas
pushl
arpl
test
lods
sti
cmp
inc
push
pop
sti
xor
xchg
jae
out
mov
sarb
repnz
lret
xor
sub
repnz
movsb
jle
ret
mov
insb
mov
insl
repnz
mov
adc
lock
lods
push
bound
call
add
pusha
xchg
mov
add
std
sbb
or
and
jge
pop
repz
mov
push
daa
lret
mov
je
sub
pop
ljmp
andl
jo
enter
dec
lret
cmp
ds
jge
in
and
jno
xchg
in
pop
mov
pushf
shlb
mov
xchg
push
cmp
out
add
out
and
add
xor
sub
shlb
push
inc
roll
test
call
movsl
mov
mov
mov
inc
xchg
mov
mov
clc
movsl
xchg
add
push
xor
sbb
mov
add
cltd
leave
add
lret
push
test
cmpsl
adc
cmp
fmul
dec
xor
rorb
and
or
mov
mov
in
xchg
push
jmp
pop
xchg
xchg
jne
lahf
inc
std
gs
mov
out
and
add
roll
mov
cmp
call
pop
and
adc
movsb
xchg
insl
cltd
mov
aad
jae
lea
out
add
ret
sbbl
push
push
mov
pop
js
inc
lods
mov
inc
jmp
mov
mov
xor
cld
jmp
outsl
decb
arpl
mov
fnsave
inc
in
cmc
adc
mov
out
push
in
ffreep
inc
push
adc
mov
cmp
xlat
adc
cs
push
insl
sbb
adc
cmp
adc
xor
ret
scas
mov
jge
jle
xorl
rcr
clc
adc
mov
lock
sub
sub
enter
mov
jae
std
cld
test
sbb
test
lods
lods
mov
rclb
or
and
sub
fcmovu
pop
mov
int3
test
pushf
push
mov
jne
sub
or
fstpl
lods
clc
add
xchg
in
xchg
outsb
mov
jnp
inc
scas
rcrb
jge
imul
leave
dec
lret
pop
aaa
rcll
add
lcall
cld
cli
cmp
dec
add
pop
sub
cmp
shrb
icebp
pop
int
out
je
add
lods
or
push
sbb
cmp
dec
je
in
and
nop
pushl
xchg
lods
das
jbe
lods
test
fcmovnbe
aas
mov
adc
ret
add
dec
jp
outsb
ficoms
push
sbb
pop
es
mov
mov
aas
push
lock
mov
adc
mov
fdivrl
and
jecxz
scas
mov
push
cmp
cmp
lret
sahf
add
cmpsb
push
cli
mov
cld
ficoms
jnp
inc
mov
push
pusha
outsl
movsb
cmp
mov
cmp
xrelease
test
repz
fwait
das
adc
jbe
jbe
mov
fst
push
mov
push
dec
fisttpll
mov
xchg
push
fsubr
xor
lods
cmp
mov
jo
cmc
pusha
test
push
rorl
sub
in
faddl
cmp
faddl
adc
aad
popf
inc
add
or
cmp
shll
xchg
in
dec
pop
mov
pop
or
lcall
mov
xchg
bound
stc
pop
sbb
hlt
or
add
xchg
push
ds
mov
ljmp
adcl
mov
inc
jno
cld
mov
negl
adc
sub
pop
addl
loope
push
jno
mov
into
mov
popf
pop
mov
lds
das
inc
div
sbb
pop
ret
stc
xchg
and
sub
sub
dec
fsubrs
std
push
mov
aas
cld
rclb
aad
ja
mov
mov
loop
and
loop
push
iret
mov
int
into
sub
push
clc
pop
out
jle
inc
jmp
sub
mov
das
std
int3
jmp
push
jle
push
cmpb
xchg
mov
sub
push
jg
mov
push
or
mov
dec
repz
mov
xchg
dec
adc
in
mov
ljmp
mov
sub
sbb
dec
or
shrb
scas
adc
int3
in
sub
adc
insl
sbb
lret
mov
inc
add
pop
push
je
sbb
fbld
je
rcll
mov
inc
popf
push
clc
lock
dec
add
cmp
cli
repnz
addr16
in
dec
test
or
add
mov
sub
jb
adc
add
xchg
pop
std
stos
xor
pop
mov
push
aas
dec
mov
mov
pop
xchg
mov
enter
push
xchg
xor
vaddsubpd
sahf
xchg
and
push
mov
and
sbb
inc
adc
mov
sub
add
jecxz
lea
adc
enter
insb
repz
aam
ds
test
cmp
js
jbe
adc
nop
adc
adc
fsubrp
dec
xchg
cmp
es
jmp
cld
je
push
cmc
pop
and
sahf
and
mov
sahf
insb
dec
dec
ret
stos
pop
sub
loop
adc
jmp
in
push
outsb
pop
xor
cmp
xchg
sbb
xchg
push
ret
stc
gs
addr16
bndldx
insb
xor
lret
push
cmp
fwait
inc
add
decl
ret
add
sti
call
inc
jb
nop
add
cmc
ljmp
xchg
mov
cmp
ror
repnz
pop
xchg
adcl
cmp
xor
cwtl
bound
stc
xor
sbb
inc
jne
sbb
arpl
and
jae
outsb
and
xorl
sbb
pop
push
aas
sub
dec
cltd
sbb
sti
dec
inc
leave
lret
mov
data16
arpl
in
and
sbb
retw
iret
xchg
push
out
in
inc
aas
inc
out
push
mov
and
out
sarl
sub
pop
jbe
xor
jge
outsl
pusha
xor
cmp
mov
dec
loop
pop
insb
push
push
lods
push
ss
jb
mov
add
lods
mov
int3
in
cmp
pop
rcrb
popa
enter
punpckldq
pop
leave
mov
out
into
and
inc
imul
fbstp
jge
mov
stos
lahf
jg
mov
xor
xchg
scas
xchg
adc
xor
lret
sub
jecxz
push
push
mov
add
lret
cwtl
popf
lret
sbb
les
pop
lods
sbb
or
fs
sub
repz
cmp
cmp
fistpl
call
cmp
call
fwait
jns
movl
push
fs
repz
lcall
lea
shll
cmp
subb
push
push
rcll
daa
in
int3
outsl
mov
sub
insb
mov
mov
negb
cmp
out
jp
rorl
xor
push
xor
lahf
or
loop
sbb
and
je
mov
cmp
or
dec
mov
mov
in
dec
lea
inc
int3
cwtl
cs
jb
jp
add
mov
jb
div
push
fcomip
mov
xor
jmp
ljmp
add
sbb
inc
insl
inc
mov
fwait
pop
jns
out
lds
mov
jno
mov
push
arpl
or
push
das
out
jl
pop
pop
icebp
mov
inc
mov
xchg
mov
or
gs
fs
push
push
mov
add
iret
rcrb
lret
subb
je
in
sahf
aaa
inc
jl
nop
add
jecxz
cwtl
lds
movb
mov
mov
dec
stos
sbb
adc
fiadds
aas
inc
xchg
inc
sub
shlb
fiaddl
lea
cmc
add
xchg
das
mov
and
jmp
push
mov
mov
sbb
jbe
sbb
arpl
scas
mov
dec
push
xor
addb
icebp
xor
cmp
imul
jmp
add
mov
lock
test
xchg
or
cs
adc
cltd
and
ljmp
mov
xlat
or
in
add
dec
jne
cltd
shr
xor
jle
push
sbb
test
jl
cwtl
fiaddl
add
dec
lcall
es
fldt
xchg
dec
add
push
fcoml
lret
les
or
sbb
add
aaa
push
jae
mov
fcoml
andl
in
and
push
aas
cmc
rcrb
adc
cmp
out
push
push
add
jno
mov
fildl
cmp
add
mov
and
adc
scas
cmp
pop
lret
mov
xchg
data16
fs
test
lret
fwait
jmp
jecxz
shl
cmp
cmp
and
push
or
sbb
xchg
push
les
and
mov
add
addl
inc
mov
jg
imul
dec
out
mov
js
popa
nop
adc
cmpsl
ds
mov
pop
push
scas
xchg
mov
andl
faddl
mov
insb
es
mov
mov
fbstp
and
addr16
scas
sub
cmp
cmp
test
rcrl
mov
dec
xchg
cmp
jns
or
jb
dec
jne
and
fsubl
mov
dec
inc
fsub
out
xchg
sub
outsb
mov
cmpsb
icebp
or
dec
pop
mov
in
pushf
mov
pop
shlb
mov
bound
xor
jge
inc
mov
fwait
dec
and
js
mov
jo
cmp
das
fwait
jle
cmc
or
lcall
xor
sbb
pop
mov
xchg
xor
push
js
sbb
pop
or
mov
imul
pop
loope
sub
xor
cltd
xor
ret
or
xchg
je
ljmp
pop
jg
and
push
xor
inc
lods
mulb
xor
and
mov
cmp
mov
fildl
outsl
sbb
mov
fnsave
pusha
es
lcall
sub
imul
add
sbb
test
inc
pop
das
cmp
push
aam
and
test
int3
aam
int
dec
ret
adc
mov
push
int3
test
sbb
pop
or
lret
movsb
sbb
arpl
cmp
jbe
jb
cmp
xchg
mov
ja
addr16
xor
int3
mov
mov
addr16
gs
js
out
adc
pop
pop
sbb
scas
out
in
cmp
xchg
cmp
push
cmp
shl
push
add
sub
dec
call
and
push
out
pushf
js
mov
cli
mov
leave
pop
xor
loope
sbb
pop
inc
mov
push
xchg
push
imul
adc
int
in
movsl
push
lods
jno
push
test
pop
sub
mov
sbb
loop
ffree
fsubrs
xchg
mov
lods
pop
mov
dec
xor
dec
push
pop
pop
fidivl
in
test
arpl
in
mov
inc
push
imul
shrl
jl
push
jl
fldcw
dec
fbstp
es
fcmove
test
and
out
xor
mov
scas
cmpl
bound
pop
mov
popl
mov
sbb
call
cmpl
xor
cmp
sti
mov
jle
mov
outsl
or
add
push
add
or
sti
mov
cmc
mov
xchg
xor
push
outsb
in
cltd
inc
jbe
sarl
addb
cwtl
fwait
das
mov
cmp
mov
or
es
mov
push
mov
js
cmp
jne
dec
jg
or
mov
mov
adc
pop
sbb
dec
int
fdivp
movsl
fisubl
data16
sub
jle
jge
add
cmpsl
dec
es
dec
aaa
inc
mov
push
hlt
mov
aas
nop
call
loop
xor
xchg
or
dec
mov
loopne
xchg
lea
arpl
arpl
lock
push
jle
jmp
xchg
aaa
divl
push
lcall
or
sub
jmp
or
add
addr16
gs
insl
nop
jns
ss
insb
inc
fs
imul
jl
std
out
add
clc
fsubs
aas
inc
scas
sub
cmc
pop
dec
aaa
xchg
call
dec
test
cmc
inc
xor
ljmp
push
jl
scas
repnz
or
xchg
and
mov
xor
mov
cmpl
add
push
sub
rcrl
inc
mov
cld
lods
sub
jo
out
sub
inc
aad
mov
cmp
mov
ret
popa
ljmp
icebp
and
inc
or
add
fildl
aam
xchg
sti
pop
push
mov
sti
lock
pop
insl
add
ret
pop
inc
addb
xchg
es
push
and
pop
xchg
outsb
subl
dec
aam
push
pop
pop
jmp
mov
jl
xchg
nop
xor
sub
loope
mov
negl
repz
scas
xor
mov
lret
stos
call
push
inc
lret
in
or
orb
and
imul
sbb
bnd
cmp
out
pop
mov
mov
jecxz
and
and
test
lret
push
inc
aad
jnp
mov
in
mov
mov
jp
movsb
push
stos
and
repnz
scas
pop
inc
or
clc
loop
fisttpl
gs
stos
cmp
xor
and
adc
push
fcmovnb
stos
daa
in
sub
mov
fwait
pop
sub
mov
sub
out
loop
xchg
jecxz
rcrl
test
pop
pop
mov
dec
xor
into
push
sahf
loope
lcall
xchg
int3
sbb
scas
js
mov
inc
inc
idivb
icebp
mov
push
outsl
inc
mov
pop
jns
cltd
jae
into
add
or
xor
cmc
xchg
mov
dec
mov
or
or
imul
daa
push
sbb
mov
inc
movsb
jne
arpl
xchg
mov
sbbb
mov
inc
loop
sahf
out
mov
addr16
dec
aaa
xchg
in
add
inc
inc
jb
mov
cmpsl
xchg
icebp
popa
mov
dec
mov
sbb
sbb
loope
fmuls
sbb
pop
add
clc
and
lahf
push
rorb
and
pop
je
ja
imul
pop
pop
inc
imul
mov
notb
push
rolb
jmp
sti
in
mov
xchg
addr16
js
xchg
aas
mov
jnp
sbb
int
out
shrl
push
jns
pop
dec
mov
pop
ja
icebp
es
cmc
loop
xor
xor
adc
shl
lds
daa
cs
iret
bound
cmc
mov
in
repnz
arpl
lods
in
pushw
repnz
insb
or
pop
inc
ret
cmp
xchg
data16
scas
mov
into
jg
out
cltd
aad
mov
mov
jle
inc
add
repz
pushf
sub
lods
jp
cwtl
ret
pop
push
adc
mov
jns
push
fisubrs
insl
xchg
sub
fwait
shll
iret
cmp
mov
xchg
xchg
pop
bound
sub
adc
xor
int3
pop
frstor
jle
les
int3
addb
cmp
cmp
and
push
add
fildl
mov
loopne
out
pop
lret
dec
insl
hlt
pop
insb
push
ficoms
scas
fisubl
mov
and
fs
fucomp
dec
ret
mov
inc
jl
call
or
pop
sbb
rorl
cmc
cwtl
imul
into
fnsave
cmp
divl
lea
fistps
rcrl
leave
nop
test
cld
testb
xchg
test
shll
lods
pushf
xchg
rcrl
sbb
add
jp
sub
or
sbb
mov
mov
aad
jge
jmp
xor
outsb
aaa
dec
rcll
xchg
or
and
nop
repz
pop
lds
inc
test
jo
xlat
mov
xorb
out
stc
mov
mov
jmp
xor
cmp
xor
jg
es
rorb
mov
lods
rorl
push
addr16
push
dec
xor
cmpsl
aaa
ss
popa
fwait
movsb
dec
xor
iret
push
mov
adc
test
mov
jae
int
fcmovnbe
in
icebp
and
xchg
int3
pusha
add
loopne
sbb
push
inc
mov
rcl
mov
rclb
push
loope
movsl
xchg
mov
xlat
dec
and
aaa
jno
dec
rcrl
testl
fisttps
inc
loop
mov
scas
out
xor
xorl
mov
jae
xchg
xor
push
add
pushf
lock
add
jge
aad
jl
popa
inc
fildl
inc
cmc
pop
in
test
xchg
push
and
arpl
adc
push
push
pop
mov
ljmp
jns
cli
cmp
and
push
mov
add
fiaddl
loope
jle
xchg
das
jne
lea
pop
sarb
in
push
imull
or
data16
ffreep
sbb
jne
stc
icebp
adc
dec
test
stc
xchg
jl
cmp
adc
rol
cli
es
jns
popa
mov
jno
fisubrl
sbb
andb
mov
lret
mov
push
jecxz
mov
cltd
or
adc
add
test
pop
xlat
mov
in
jecxz
xor
jbe
xchg
add
js
mov
xorb
sti
cmp
hlt
dec
xchg
add
bswap
aaa
dec
js
cltd
jns
pop
and
and
jo
in
xchg
pause
shlb
sub
mov
fucomp
repnz
or
pop
adc
pop
sub
imul
pop
movsb
pop
mov
fstl
or
loop
insb
dec
pop
cmp
mov
ja
mov
push
dec
sbb
sub
lret
out
fcmovu
jg
test
jae
rcrb
repnz
cld
xlat
xchg
mov
out
sbb
ja
lcall
das
jl
jns
push
call
pop
jge
pushf
inc
xlat
pushf
std
roll
add
push
lret
xor
adc
mov
pop
adc
orl
lcall
pusha
inc
jmp
cmp
sbb
sbb
cltd
mull
adc
sbb
clc
push
mov
mov
adc
jmp
fdivs
xchg
jno
lods
or
xchg
movsb
mov
testb
test
pushf
xchg
pop
or
fbstp
mov
outsb
pop
or
jmp
mov
adc
mov
xchg
inc
jns
dec
jle
cmp
mov
addr16
sub
xor
test
mul
inc
add
sub
cs
inc
push
xchg
adcl
dec
incl
jge
fcmovnbe
cli
xor
sub
ret
ret
rcrb
and
lahf
mov
mov
and
xlat
xor
dec
repz
shl
xor
dec
mov
stc
inc
mov
popa
sub
repnz
out
popa
xchg
test
inc
adcb
icebp
mov
jl
add
sarb
cmp
pop
add
push
scas
cmpsb
xor
and
add
fbld
int
daa
jno
adc
pushf
loopne
fldenv
mov
lea
add
dec
pop
inc
mov
cmp
and
cmp
int3
cmpl
stos
outsl
jle
jg
test
sbb
mov
pop
movsb
inc
negl
in
push
dec
cmpsb
scas
pop
aad
push
or
bound
aas
inc
pop
push
push
adc
sub
loop
iret
xchg
dec
xor
pusha
or
insb
cs
imul
sub
add
sbb
dec
sub
or
push
lea
in
pop
xchg
aam
sarb
lcall
fsubr
into
inc
aad
cmp
or
mov
sub
and
or
iret
fiadds
adc
sub
pop
insl
xchg
leave
xorl
inc
in
push
ds
mov
sbb
fisubrs
pushf
adc
push
int
clc
jae
inc
mul
mov
adc
pop
jbe,pt
in
popf
mov
pop
aas
mov
jle
mov
out
add
mov
mov
add
jae
mov
push
push
ljmp
int
lea
jbe
scas
push
fldcw
cmp
stc
push
ljmp
adc
xchg
stos
pop
cmp
and
and
pushf
dec
mov
jne
inc
leave
push
jns
push
mov
rclb
xchg
loop
jp
stc
inc
mov
dec
call
pop
repnz
insl
pop
sub
push
sub
dec
sub
fwait
lahf
leave
jp
sti
push
push
mov
push
scas
lds
dec
mov
rolb
xor
ret
jg
aas
stos
int3
xchg
imul
je
mov
sbb
in
inc
jle
sub
js
or
mov
in
push
movl
repz
push
sbb
imul
xor
js
sbb
clc
and
cmp
sub
jle
mov
cld
pop
imul
fimull
push
pop
es
pop
jb
mov
int3
and
loope
or
mov
mov
into
roll
pop
dec
push
inc
xchg
mov
outsl
out
jg
rclb
ja
and
or
adc
rol
nop
ficoml
sbb
xor
add
outsb
push
daa
adc
xchg
sbb
and
mov
inc
fldenv
add
mov
and
mov
cmc
into
movsl
sub
and
cwtl
pop
aaa
mov
aam
aam
add
mov
leave
dec
scas
nop
adc
popa
int
and
jno
pushf
or
dec
mov
shlb
fisttpl
dec
mov
push
insl
aad
and
sub
xchg
sub
jne
sub
mov
iret
out
insl
adc
mov
sbb
jle
stos
aad
nop
ja
inc
xor
dec
lds
or
ljmp
mov
pop
sti
imull
mov
jecxz
push
dec
clc
xchg
xchg
stc
fstps
push
jl
push
jae
mov
xor
cs
cmpsb
pusha
add
popa
addr16
lds
jle
pusha
ret
and
inc
xor
and
loopne
sbb
push
cmp
fistl
js
sub
adc
push
pop
das
lods
repnz
adc
fcomps
cs
push
add
das
jnp,pt
aam
sub
lcall
imul
jl
cli
rolb
inc
or
aas
pop
lea
add
jmp
lock
jg
pop
out
mov
xor
jnp
std
sub
and
adc
xor
mov
cltd
mov
mov
loopne
add
icebp
jo
call
push
or
inc
iret
fwait
pop
mov
shrb
mov
cmp
shrl
rorb
lret
jge
lods
cmpsl
clc
push
fists
or
test
in
pop
in
lods
or
adc
or
cmp
pop
pusha
push
rcrb
sbb
adc
jae
cmp
sbb
sub
scas
dec
mov
cmp
xchg
loope
jae
into
jae
lods
or
ficoms
rcll
les
or
lock
out
fisubs
xchg
xchg
fucomi
mov
jno
or
in
mov
inc
xchg
mov
cmp
in
jno
fdivrs
jno
cmp
inc
dec
adcb
stos
mov
lret
push
flds
sti
into
add
jmp
mov
cmc
lcallw
cmp
mov
mov
mov
or
arpl
fstl
nop
arpl
xchg
clc
fiaddl
mov
pop
xchg
jp
nop
imul
cmp
iret
out
jbe
lahf
shlb
out
pushf
vhaddps
rorb
xchg
mov
push
mov
cmp
cs
or
jp
and
cli
cltd
repz
jecxz
fwait
in
push
in
mov
int3
arpl
icebp
rorb
dec
dec
aaa
jns
addl
movsb
sub
pop
push
jmp
mov
inc
sub
push
inc
and
dec
and
cmp
add
jl
cmp
xor
or
add
or
rcr
sbbl
je
addr16
loope
cmp
test
dec
xor
jle
jecxz
mov
mov
loopne
cmpsl
dec
in
inc
mov
lahf
and
push
cmpsb
adc
mov
repnz
jg
cmpl
test
mov
inc
add
xor
aas
push
mov
push
sbb
or
cmpsl
sbb
sub
push
subb
cwtl
push
cmpsb
popf
jnp
add
jbe
xchg
jge
dec
sbb
fbstp
mov
dec
cwtl
outsl
int
je
movsl
or
jb
jp
sub
mov
mov
insl
into
ret
dec
add
aad
sbb
lcall
lret
ja
jg
mov
xchg
addr16
push
dec
orb
pop
or
xor
test
ret
jge
lcall
cwtl
and
frstor
aad
fildll
lahf
xchg
outsl
or
and
and
xchg
pop
fistl
notb
daa
arpl
mov
in
add
idivb
nop
divb
enter
cmp
xor
int3
aad
lret
sub
add
and
add
sbb
scas
clc
xchg
imul
aaa
icebp
ja
into
inc
sbb
jmp
loope
incl
jg
sub
jno
idivb
mov
das
push
sbb
inc
or
test
ret
mov
sub
jno
outsb
addr16
inc
popa
push
xchg
cmpb
pushw
icebp
pop
leave
mov
mov
or
xor
mov
sbb
cmp
adcl
cmovp
mov
cmp
outsb
mov
xor
inc
push
mov
jl
or
pop
xor
lret
test
sti
add
call
xchg
sub
sub
inc
mov
mov
inc
popf
pop
jb
sbb
mov
jp
pusha
xor
jno
inc
mov
sub
imul
loopne
xor
lds
jg
hlt
pop
xor
leave
inc
sbb
push
iret
inc
nop
stos
or
cli
xchg
enter
pop
xchg
lods
loope
in
adc
dec
shll
ret
test
and
pusha
aas
test
pop
sbb
cld
xchg
xor
push
mov
lret
xchg
xabort
xor
push
and
sarb
xor
xchg
subl
mov
mov
mov
cs
cmp
mov
or
push
and
fbld
out
mov
add
fsubrp
jno
xchg
cmp
cmpsb
jle
jmp
leave
int
add
xor
out
nop
sbb
out
addr16
rolb
cmc
mov
jge
xorb
nop
mov
ljmp
cmp
push
loope
dec
cmp
les
pop
or
aad
pop
insb
jo
scas
cwtl
add
popa
xor
loopne
add
pop
push
fiadds
mov
sti
mov
mov
loope
ss
jae
push
scas
stc
fdivrl
hlt
push
mov
lods
mov
or
add
mov
sub
adc
dec
inc
test
scas
xchg
out
jl
loopne
pop
and
ss
popa
xchg
xchg
jae
xor
and
inc
adc
sahf
jae
xor
cmpsl
in
push
jo
or
sahf
pop
fwait
sbb
pop
iret
adc
add
movsl
xchg
bound
mov
adc
dec
xor
lcall
inc
rcrb
fcmovnb
xchg
adc
or
mov
jp
pop
push
push
mov
push
leave
and
lret
xchg
aam
cltd
sub
mov
xor
sbb
lea
lahf
aam
xchg
out
insl
sahf
pop
aam
xchg
xor
jno
repz
push
and
pop
push
xor
aam
sub
xchg
mov
fdivp
sbb
int3
test
aad
lret
jg
inc
ss
int
out
push
leave
mov
add
int3
ret
mov
mov
xchg
call
in
daa
cmp
jb
inc
mov
sti
cwtl
movsl
push
pop
fpatan
adc
and
popf
shrb
dec
pop
jmp
mov
cld
and
sub
mov
clc
int3
cld
out
xlat
jne
mov
sbb
cmp
ljmp
popf
add
pop
loop
sbb
test
in
pusha
inc
cli
pop
repz
rorb
mov
shll
les
shlb
shr
and
aad
xor
test
lret
sub
jp
sub
gs
stos
xor
je
sub
sahf
mov
and
icebp
pop
cmc
mull
adc
jo
mov
sbb
in
mov
push
mov
lcall
gs
mov
mov
pop
repz
mov
mov
sub
dec
rcr
in
loope
lcall
push
imul
enter
inc
movsl
lcall
lods
xchg
mov
inc
add
rclb
push
xchg
mov
ja
pop
xchg
bound
pop
das
push
jecxz
push
mov
or
arpl
jb
push
add
mov
pop
aaa
mov
jo
mov
daa
pusha
mov
push
pop
pop
push
ret
arpl
cmp
adc
adc
aaa
cmp
jns
lahf
sahf
mov
add
inc
mul
stos
xchg
call
mov
push
xchg
xchg
adc
xor
dec
dec
inc
mov
xchg
inc
int3
cmpsb
aam
jp
xchg
jo
or
jne
lock
mov
and
test
push
xchg
and
daa
xor
mov
cmp
mov
pop
push
and
jne
jge
mov
lods
fadds
jno
fdivrl
mov
mov
fldcw
mov
push
push
and
pushf
add
adc
aas
bound
ss
mov
add
outsl
xchg
cmp
ss
pop
repz
cmp
jecxz
imul
shlb
mov
pop
pop
push
aam
int3
jae
push
inc
daa
or
icebp
aad
xor
rcrl
cmpsl
lahf
sbb
xchg
aad
push
jecxz
adc
add
mov
jge
inc
inc
faddl
push
cmp
test
cmpsb
mov
adc
ficompl
scas
imulb
jle
fistpl
sub
lock
lock
and
sarl
bound
sbb
aad
cltd
mov
stos
and
leave
or
cwtl
mov
inc
test
iret
inc
daa
inc
and
in
mov
lret
pop
int3
and
data16
insb
rol
mov
sub
js
xor
jmp
fists
or
jp
shrl
jg
insb
outsb
pop
mov
je
push
imul
roll
test
jne
int3
push
je
repnz
insl
pushf
inc
adc
dec
imul
sbb
cmpl
imul
cmp
xchg
fs
in
mov
mov
adc
inc
js
pop
aaa
js
in
inc
or
dec
loopne
imul
dec
mov
ljmp
fadds
lds
push
sar
mov
jno
faddl
jno
popa
mov
gs
sbb
and
jnp
sbb
inc
mov
mov
insl
mov
addr16
sub
popa
sarl
dec
lahf
arpl
sbb
mov
jnp
out
mov
sub
inc
mov
shlb
pop
out
mov
push
popa
cmp
shlb
nop
imul
cmp
push
and
fldt
aam
adc
loopne
mov
inc
mov
hlt
push
xor
adc
movsl
mov
add
or
int3
mov
pop
nop
stos
mov
xchg
nop
push
push
dec
mov
inc
xchg
repnz
jp
fdivrs
pop
pushf
inc
jo
sbb
and
js
fistps
mov
ja
cmp
aad
mov
jns
xlat
add
cmp
pop
xor
idivb
cmp
push
sbb
sub
lds
andl
in
cmpl
dec
pop
imul
jle
dec
mov
ss
int
arpl
stc
fnsave
xchg
out
js
jb
add
lds
push
rcll
je
les
call
inc
hlt
fisubl
cli
notl
jns
xor
test
lret
shll
lcall
out
adcl
sbb
inc
rcrb
test
in
mov
stos
jmp
pop
jg
cmc
mov
add
xor
pop
test
int3
imul
int
aas
fucomi
xchg
sub
insl
push
movsl
jae
sub
xchg
ret
call
mov
aas
push
sub
jl
cmpsb
aam
adc
jmp
lock
pusha
in
xor
xchg
inc
mov
stc
lods
jl
mov
out
cmp
std
aad
pusha
mov
call
push
mov
mov
bound
fdivl
lahf
int3
pop
sub
or
decl
stc
or
fldt
addr16
out
cmp
mov
inc
dec
int
outsb
push
or
imul
xchg
repnz
jns
dec
aas
lea
push
pop
pop
and
push
push
pop
std
ss
mov
mov
sarl
fs
loop
and
dec
popf
fldcw
rorl
mov
shlb
lahf
sbb
push
inc
inc
sub
je
in
lods
insl
cld
mov
insb
pop
andl
jo
push
div
mov
lahf
dec
adc
loope
xor
xor
add
sahf
or
dec
mov
or
jmp
jl
hlt
test
pop
sbb
jae
pop
lcall
xor
cmp
ss
push
mov
push
xor
and
dec
cmp
arpl
scas
mov
mov
dec
sub
daa
jge
xorb
or
arpl
pop
sbb
outsb
pop
and
andl
in
and
jle
ret
sub
dec
xor
sar
xchg
add
mov
scas
sub
jmp
lock
mov
mov
loopne
dec
outsl
xchg
cld
cli
mov
jmp
cli
cmc
jbe
lds
mov
cmp
lss
in
mov
pop
push
mov
mov
or
xor
lds
test
pop
lar
xchg
pop
cmp
and
push
fsubl
xchg
inc
repnz
xor
pop
lcall
test
xor
popf
shlb
mov
scas
aad
clc
sbb
popa
lahf
pop
lret
adc
mov
jns
loopne
loopne
pop
mov
pop
stos
mov
sub
stos
jno
movl
lods
in
stos
push
inc
and
mov
lock
ficoml
scas
ss
fwait
cmp
mov
mov
pop
mov
jp
out
jnp
push
jecxz
lret
push
imulb
ret
inc
ret
mov
popf
inc
cltd
add
pop
pop
repnz
in
daa
adc
mov
xor
shlb
jae
push
mov
mov
jae
stc
mov
movsl
test
enter
popf
rorb
mov
xor
repnz
pop
lea
hlt
enter
cltd
aas
popf
mov
fld
add
hlt
jae
add
dec
dec
mov
fsubrp
mov
and
mov
xorb
dec
repnz
jne
lcall
in
cmc
xor
andb
jb
bound
sbb
jmp
scas
push
ja
inc
lcall
call
lock
inc
ret
movsl
and
jns
jno
pop
push
sub
pop
ret
xor
dec
dec
hlt
sbbl
pushf
xchg
popf
fnstenv
dec
gs
mov
lea
mov
add
cld
mov
movsb
loop
aaa
shll
or
rolb
out
push
pop
inc
loope
mov
fimuls
les
inc
mov
das
xlat
mov
mov
mov
cmpsb
sub
fimuls
repz
fnstsw
adc
and
das
xlat
pop
mov
cmpsb
push
in
or
and
jle
icebp
pop
jl
divl
adc
rclb
dec
daa
mov
mov
pop
hlt
and
jnp
scas
sahf
and
out
dec
pop
or
mov
mov
xor
jle
or
cmp
in
fs
lcall
dec
dec
div
inc
or
jae
sbb
jg
insl
sub
mov
or
xor
cmp
aad
je
sahf
xchg
mov
ja
out
cmp
out
pop
mov
sbb
and
test
pop
int
daa
mov
and
lret
movsl
cmp
lods
adc
cli
popf
jg
pop
inc
xor
out
sbb
inc
sub
cwtl
and
mov
sub
pop
fdivp
ret
adcb
mov
sbb
mov
inc
ja
add
dec
xor
xor
jmp
scas
lahf
pop
or
mov
adc
fsub
mov
and
inc
mov
mov
mov
mov
ss
jo
arpl
and
cmp
adc
pop
and
stc
xor
dec
lcall
jmp
imul
ss
inc
mov
mov
lcall
pop
inc
jle
pmaddwd
mov
push
cmp
lock
out
cmc
push
mov
mov
push
popf
hlt
lcall
shll
jecxz
cs
adc
inc
pop
push
mov
mov
jmp
mov
sti
or
sahf
mov
xor
mov
jmp
mov
mov
fsts
insl
test
push
jno
addb
inc
mov
xor
aam
stos
ret
xor
xchg
loopne
add
cmp
pop
faddl
cmpsb
imull
jnp
mov
rol
pop
pop
and
jb
cmpsl
jns
int3
mov
dec
xorl
cld
push
jne
mov
lds
adc
sub
and
add
mov
push
pop
lret
sbbb
jp
cmp
jg
dec
fcoml
sahf
add
xor
and
add
mov
lcall
jl
sti
pop
cmp
mov
jo
xor
cwtl
xchg
mov
xor
lahf
and
adc
dec
adc
jnp
mov
dec
mov
jne
in
fldcw
pop
stc
lock
add
outsb
sbb
out
int
xlat
mov
nop
xchg
xor
mov
cmp
mov
push
add
jns
ss
stos
xor
jne
xor
into
add
inc
cmpsl
mov
lock
out
jbe
enter
cmp
xchg
arpl
nop
cwtl
pop
sub
pop
loope
movsl
rol
lret
xor
inc
out
cmpsb
cwtl
imul
mov
jl
and
adcb
xor
push
orb
cmpsb
xor
add
rolb
sub
jecxz
ds
xor
inc
push
cmp
fimull
fsub
mov
pop
es
sub
in
mulb
and
cmp
and
test
dec
movsl
push
jno
fnsave
sbb
ret
push
jae
lds
and
sarb
lods
xchg
and
push
mov
push
sbb
es
enter
jmp
leave
mov
mov
push
addr16
mov
jl
test
pop
mov
pop
pop
adc
mov
insb
push
aaa
xchg
ss
das
std
sbb
pop
fld
and
xor
icebp
ljmp
cmp
stos
inc
sbb
xor
push
or
mov
fwait
hlt
inc
scas
fnstsw
sub
jmp
scas
push
mov
add
adc
lret
movsl
mov
gs
scas
add
cmp
out
and
add
adc
cmp
mov
xchg
outsl
lahf
fistl
loope
popa
xchg
push
cmc
mov
dec
and
pop
sub
test
and
lods
mov
mov
lret
scas
fsubrs
xchg
fs
inc
loopne
dec
push
cld
pop
js
xchg
xor
out
dec
add
or
sub
cmp
fsubrs
xchg
or
sbb
daa
xchg
sbb
je
push
jge
lods
sbb
andl
andb
sti
dec
pop
cmp
and
mov
and
mov
mov
std
cmp
pop
jnp
orl
add
in
sub
and
out
add
insl
ds
loope
push
dec
cmc
aad
shlb
repz
or
popf
sbb
cmp
sarb
push
jne
repnz
lock
and
in
sbb
roll
mov
push
gs
js
mov
mov
and
lock
jecxz
lock
jno
inc
xor
rcll
lock
lret
popa
rcll
push
lods
cmp
fists
cmpl
xchg
cld
cltd
loop
jnp
push
mov
sub
inc
gs
data16
loop
daa
xchg
jp
lods
iret
add
ljmp
aam
daa
adc
in
test
rcr
std
out
in
and
or
mov
sub
jecxz
movsl
iret
xor
cli
push
cmp
enter
add
push
pcmpeqw
imul
dec
mov
sbb
sbb
sbb
inc
test
or
mov
rorb
cmc
jecxz
sub
mov
pop
lock
pusha
inc
jns
pop
cmpsl
hlt
jae
cwtl
adc
mov
mov
pop
jo
jg
mov
push
and
aaa
inc
into
subb
ds
std
stos
imul
andb
repnz
in
inc
cld
xchg
cs
pop
pop
in
movsl
inc
iret
jmp
jae
adc
push
add
fnstsw
out
arpl
or
das
imul
fcoml
pop
lret
mov
mov
test
and
je
push
popf
call
mov
sti
mov
sahf
inc
andb
fdivrl
pop
or
sahf
jp
mov
lods
add
repz
mov
add
popl
push
xor
xchg
mov
rcl
ljmp
orl
ror
mov
mov
je
push
icebp
stc
rorl
cmp
cltd
icebp
xlat
call
inc
or
std
jg
push
test
movsl
dec
loope
ljmp
dec
fcmovnb
xchg
int
push
jmp
xorb
ret
clc
mov
push
xchg
jp
iret
bound
add
mov
mov
xchg
call
inc
cld
jbe
fnsave
cmpsl
push
rolb
sahf
sahf
or
jmp
std
gs
push
or
cwtl
aam
pushf
test
ret
pushf
negb
jno
vunpckhps
sbb
jg
scas
cmp
mov
fdivrs
loope
dec
add
inc
mov
inc
sub
pop
pop
mov
mov
int
mov
xchg
fcoml
xorl
aam
cmpsl
lret
push
and
and
shl
mov
das
mov
dec
mov
cmp
aas
jmp
adc
insl
enter
icebp
cmc
pop
in
mov
nop
inc
pop
int3
dec
stos
mov
cld
cmp
push
cmp
lods
in
call
push
inc
les
dec
jns
dec
test
in
ds
aam
add
inc
sti
in
cs
lods
xor
jno
fcmovnb
cmc
movsl
pop
jl
cwtl
mov
hlt
testl
movsl
je
xchg
int
ret
stc
aad
test
adcl
call
std
pusha
jo
push
push
lea
dec
mov
inc
mov
pop
lds
test
mov
xchg
xor
sahf
arpl
out
pop
inc
movsb
cmp
gs
mov
jge
xor
mov
mov
xor
aad
int3
mov
lock
ffree
mov
mov
cmp
shrl
xchg
in
lea
pop
adc
popf
add
popa
inc
mov
pop
js
out
lahf
cli
fsubl
mov
add
xor
lds
outsb
xor
out
inc
jne
test
out
outsl
push
mov
arpl
movsl
scas
pop
stc
add
jnp
call
aaa
fxch
test
dec
out
iret
jae
mov
leave
jb
inc
mov
scas
jno
mov
inc
xchg
mov
negl
insb
lea
addr16
fs
ljmp
mov
sbb
pop
mov
loopne
sbb
bound
or
ljmp
insl
cmp
scas
sbb
in
je
enter
loope
add
or
jnp
loop
js
pusha
rorl
in
pop
ss
ljmp
nop
or
out
cmp
or
popf
mov
inc
xchg
sbb
lahf
xchg
and
je
or
mov
xor
repnz
dec
test
push
xor
cli
aam
pusha
inc
jno
add
loopne
mov
std
mov
orb
int
out
push
xor
sbb
ja
sbb
push
ja
out
outsb
lret
shlb
pop
jae
lock
sub
sbb
inc
lds
xchg
add
stc
jbe
fisubs
inc
in
xchg
jnp
imul
flds
jbe
xor
into
ror
mov
dec
and
lds
pop
jnp
int
xor
imul
or
js
fdivrl
pop
push
out
jmp
outsl
inc
mov
lds
pop
or
adc
sbb
ret
inc
movsb
fisubrl
test
mov
outsl
daa
sbb
dec
pop
in
ret
fwait
fildll
mov
cmp
inc
mov
rolb
mov
je
lea
orl
jno
xor
outsl
in
jns,pt
and
push
les
mov
cmp
in
psllw
mov
sub
ljmp
add
xchg
xlat
sarl
mov
call
and
inc
decl
push
sarb
dec
adc
mov
or
jo
inc
daa
adc
xchg
mov
push
je
das
int3
sbb
add
sub
mov
xchg
or
jae
jg
add
test
mov
sub
mov
mov
jg
adc
arpl
mov
mov
mov
int3
adc
push
lds
push
push
movsb
lea
int3
and
pop
dec
sub
stos
xor
mov
pop
mov
sbb
jmp
mov
pop
xor
ja
out
xchg
test
ss
aad
rcrb
aam
hlt
imul
mov
mov
mov
dec
int
sbb
outsl
data16
call
pop
sbb
cmpsl
sbb
fadds
outsb
fsubp
mov
fdivs
xchg
shlb
pop
dec
mov
mull
mov
pop
cmp
lds
sbb
mov
ret
or
mov
add
lcall
popa
adc
mov
and
sbb
and
inc
pusha
mov
xchg
call
outsl
scas
repz
in
call
lock
flds
mov
cwtl
sbb
pusha
sub
mov
into
into
mov
sub
outsb
scas
out
scas
cld
and
imul
sub
movsl
popa
lds
insb
or
lock
or
jne
sbb
andl
mov
mov
sbb
xor
push
hlt
dec
imul
leave
pcmpgtd
enter
dec
sub
push
pop
jp
fwait
mov
aaa
xor
cmovne
sti
mulb
or
mov
stc
sbb
les
mov
fisttps
stos
jbe
dec
shl
imul
dec
fs
mov
or
and
sarl
dec
hlt
loop
js
sub
cli
shl
lock
mov
jge
mov
mov
and
add
mov
push
daa
mov
hlt
xor
mov
push
pop
push
xorl
adcb
inc
rorb
pop
aam
xor
movsl
mov
mov
sub
ja
pusha
mov
adc
dec
test
mov
loop
fsts
pop
inc
sbb
outsb
pop
test
mov
fstl
lods
or
aaa
sbbl
xchg
jge
mov
jns
jg
inc
mov
jbe
xchg
sahf
pusha
push
push
fidivs
mov
sbb
rcrl
mov
sbb
jnp
mov
ror
pop
adc
imul
dec
mov
jg
cmp
jo
dec
adc
adc
mov
or
lcall
and
xlat
in
xchg
pop
mov
test
and
in
and
jl
jo
mov
stos
adc
addr16
in
inc
sub
dec
pop
lods
dec
xor
sbbb
cmp
imul
data16
pop
arpl
cltd
jmp
arpl
stos
test
add
mov
das
pop
adc
aam
dec
ret
cmp
jp
sbb
add
addr16
aam
out
mov
push
xor
into
mov
mov
andl
cwtl
dec
inc
jle
mov
cmc
push
inc
iret
insl
mov
adc
sbb
inc
lock
jl
outsl
aas
adc
push
inc
pusha
dec
jmp
and
imul
stos
sbb
call
in
ret
rolb
inc
fcmovnbe
insl
xchg
cs
sub
inc
mov
adc
mov
dec
push
xchg
mov
imull
cwtl
les
pop
std
push
or
test
dec
jge
dec
jp
add
add
mov
cmpsl
cltd
cmp
stos
cmpsb
xlat
movsl
in
int
popf
inc
hlt
pop
xor
cmp
leave
add
or
sub
jo
std
fiadds
fmuls
gs
nop
into
ja
std
cmpsl
es
sub
xchg
cwtl
dec
sbb
lea
cwtl
lock
movsb
sub
repnz
xor
filds
dec
out
shlb
in
mov
sti
mov
push
jb
stos
lret
dec
rorb
jae
pop
mov
adc
sub
add
adc
jl
pop
cmp
jle
mov
fs
dec
sub
jp
cli
fisttps
out
mov
mov
mov
outsb
lcall
insl
add
repz
fsubl
sub
nop
dec
and
mov
xchg
xor
jmp
adc
xchg
xor
or
push
loope
xchg
test
cs
xor
fldenv
xlat
and
push
sbb
pop
inc
ficompl
pop
lock
in
push
rcll
repnz
mov
hlt
loopne
arpl
in
adc
pop
addr16
jb
rcrb
and
shrl
pop
scas
mov
add
jns
sarl
jl
dec
push
jge
sub
xchg
sbb
mov
pop
jl
ret
fiaddl
pushl
dec
cmpsl
add
or
and
out
cmp
hlt
mov
sbb
push
push
xlat
adc
gs
mov
cmp
cwtl
pusha
or
test
pop
fisubl
lock
fmul
je
mov
and
push
fwait
jno
jle
shlb
mov
mov
loop
cmp
inc
or
orw
mov
lahf
or
cli
add
ds
out
add
add
ja
sub
je
arpl
mov
lahf
add
add
pop
or
and
jg
and
mov
imul
adc
and
sti
jnp
into
xchg
push
adc
testl
and
dec
aas
scas
add
push
mov
xor
inc
jo
loop
aam
inc
sbb
cmp
ret
jnp
and
mov
push
pop
xor
lea
ret
sub
call
xchg
xchg
or
fsubrp
lods
int3
repnz
pop
sbb
mov
push
cmpsb
xor
lods
xchg
ja
xchg
push
cwtl
js
cmpsb
test
sbb
outsb
mov
or
js
std
mov
inc
call
cmp
inc
ret
or
pusha
adc
mov
scas
or
jp
mov
imul
and
mov
mov
mov
xor
iret
xlat
push
push
mov
pop
shlb
sbb
lret
rorl
add
or
cmp
cmpsb
xchg
push
or
add
in
inc
xchg
pop
jge
xor
add
lret
mov
inc
out
cmp
roll
daa
sahf
jae
xor
push
iret
mov
dec
rcrl
xchg
ja
mov
icebp
call
scas
repnz
inc
jecxz
mov
mov
add
pop
in
mov
int
cld
mov
pop
adcl
add
push
mov
ja
mov
repnz
testl
movsb
fs
stos
mov
stos
fwait
mov
sub
arpl
test
mov
sub
push
pop
fiaddl
in
enter
sub
adc
mov
mov
lret
movsb
add
hlt
shll
bound
lcall
insl
xor
lcall
jbe
fwait
mov
and
pusha
add
dec
bound
push
lea
sbb
sbb
xchg
xlat
in
testb
ja
cmp
sbb
das
outsl
cmp
inc
test
or
stc
dec
fucomi
push
xchg
fldl
sysret
and
dec
mov
mov
int
adcl
data16
dec
enter
fimull
fs
loope
xchg
xchg
gs
arpl
pop
cmc
xchg
hlt
dec
lods
fsubs
popf
sahf
xchg
testl
lahf
xchg
pop
je
stc
adc
mov
and
arpl
push
ret
xor
inc
scas
sarl
fiaddl
mov
mov
jbe
xlat
or
push
xor
or
sbb
mov
dec
lcall
fidivs
xor
pop
int3
out
jbe
push
xor
mov
push
fildll
pop
push
mov
pop
push
aad
cltd
pop
cmc
jl
jb
jb
hlt
mov
xchg
outsl
push
clc
jmp
dec
rcll
push
dec
mov
clc
xchg
xlat
jle
daa
lret
out
and
sub
dec
mov
and
outsb
ja
pop
pop
aas
insb
cmp
inc
jle
cmp
push
int3
mov
mov
dec
jge
xchg
test
scas
dec
adc
les
addr16
sub
push
rolb
and
add
mov
or
or
jne
mov
jb
ret
xchg
and
sub
sbb
nop
xchg
lret
push
cltd
xor
popa
das
sahf
test
aaa
fwait
or
xor
pop
int
aam
mov
pusha
or
xor
xor
aaa
and
mov
cmp
xchg
mov
pop
sub
repnz
cmpsl
pop
mov
icebp
lret
mov
ret
cwtl
pop
xor
xor
adc
out
jg
fldz
jp
adc
insb
dec
stos
cs
mov
arpl
fiaddl
inc
fwait
or
inc
insb
jae
jl
out
out
jp
mov
mov
mov
out
inc
out
mov
xor
loopne
mov
and
popf
shll
mov
mov
xchg
mov
ljmp
es
add
or
clc
push
popa
pushf
int3
xor
fiaddl
test
xchg
lret
lret
or
and
mov
xor
or
cmc
mov
cld
xor
in
adc
lea
out
cmp
mov
mov
stc
xchg
js
loop
or
dec
jge
js
mov
jnp
mov
hlt
stos
dec
out
xchg
je
in
loop
fstl
imul
xchg
pop
shl
sub
sbb
and
push
cmp
jae
gs
mov
mov
ljmp
scas
mov
mov
mov
flds
xor
lahf
int
adc
popa
or
add
hlt
push
inc
cmp
shl
ret
js
lock
cli
or
testb
cli
movsl
mov
mov
js
mov
or
cmp
pop
icebp
mov
in
fcmovnu
push
xlat
mov
jnp
pop
stos
int3
mov
cmp
pop
out
mov
insb
push
insb
adc
pop
cmc
test
mov
loopne
pop
call
jp
pop
clc
cltd
lock
inc
add
pop
dec
xchg
push
stc
ret
xchg
je
cmp
adc
sbb
adc
adc
aad
test
mov
inc
test
jns
stos
push
pop
or
and
jg
fldenv
jge
lret
xor
nop
adc
rcll
fwait
xchg
sub
lock
mov
out
les
mov
in
scas
cwtl
shrl
dec
push
sbb
fnsave
lods
out
aaa
mov
les
outsb
test
sub
mov
push
fistpll
movl
xor
sub
inc
outsl
sarl
mov
out
dec
lods
sub
in
popf
mov
jp
jp
pop
test
lret
cs
ret
xchg
jo
xor
out
data16
sbb
xchg
cmp
jp
aas
mov
add
lret
jo
fwait
jae
popl
add
add
pop
jbe
sbb
stc
sub
pop
xchg
add
cmp
insl
inc
mov
mov
pop
push
pop
scas
jbe
cli
in
mov
mov
stos
pop
dec
sub
ret
mov
aas
dec
repz
pusha
and
pop
sarb
outsl
ja
xor
jae
jle
aad
push
jo
call
cwtl
push
test
dec
jp
pop
std
push
int3
insl
out
subb
add
movsb
aam
notrack
fdivr
mov
pop
jne
jno
lsl
mov
push
fmulp
mov
inc
mov
pop
cli
or
mov
push
mov
enter
pop
push
insl
and
mov
lods
movsb
daa
roll
push
jae
cli
push
adc
sub
add
clc
movsb
fcmovb
sbb
mov
addb
add
clc
fdiv
fnstenv
xor
jle
adc
sub
xor
sub
es
cmp
loopne
inc
mov
jae
dec
out
outsl
cmp
popa
sbb
add
and
in
push
mov
pop
movsb
popf
push
icebp
stos
das
negl
xor
or
or
mov
and
push
aad
bound
mov
leave
dec
lahf
in
scas
or
jnp
mov
sub
mov
shlb
jns
ret
clc
jge
jl
xchg
shr
inc
ret
insl
fwait
testb
xor
or
sti
xor
mov
pop
mov
mov
fstl
jle
movsb
jmp
push
push
pop
dec
mov
sub
test
mov
mov
jb
mov
dec
jge
sbb
cwtl
or
adcl
sub
dec
arpl
inc
ss
xchg
add
mov
push
loope
sub
and
mov
das
mov
dec
popf
mov
xchg
lret
dec
in
mov
mov
inc
cmp
lods
aas
fwait
xor
aad
mov
xchg
jns
mov
mov
loopne
add
xlat
mov
jg
xchg
inc
dec
xlat
dec
jo
test
pop
imul
das
cmc
pop
jae
pop
sbb
jno
jns
ficompl
sbb
or
mov
and
in
ficoms
adc
iret
push
out
jecxz
inc
sub
popa
je
mul
mov
inc
popf
outsb
jge
push
aas
cmp
pop
mov
ret
in
mov
adc
or
push
lds
leave
std
jnp
int
out
or
ss
pusha
inc
rorb
popa
jb
cs
int
add
icebp
pop
cmp
jle
sbb
test
xchg
test
scas
push
jge
push
imul
andb
sub
dec
and
mov
addr16
pop
dec
data16
lea
mov
or
fs
negl
adc
js
sahf
rorb
imul
xchg
inc
dec
shrb
mov
and
cmpb
clc
push
inc
and
jecxz
iret
xor
dec
pop
pushf
arpl
outsb
xchg
jp
popf
lahf
pop
mov
sub
daa
jle
push
cmp
mov
lret
insb
mov
sarl
icebp
inc
sbb
pop
pop
xchg
leave
stos
push
adc
movsb
out
jno
push
push
adc
sbb
cwtl
dec
repz
sub
or
test
daa
ljmp
rcrb
mov
hlt
push
jp
xchg
jo
dec
fcoml
les
mov
push
push
sahf
and
repnz
push
xchg
lock
out
xor
pop
mov
sbb
test
dec
sub
testl
adc
in
and
push
repz
fnsave
cmpsb
sbb
xchg
sti
mov
gs
cmpl
mov
loopne
pop
xchg
gs
sbb
cmp
dec
cmp
push
mov
out
push
mov
add
lods
pop
pop
cmp
cmp
sbb
and
or
lret
or
test
sub
cmp
iret
jbe
pop
and
pushf
cltd
xor
cli
loope
sub
std
repz
addr16
push
pushf
sub
xor
int
and
and
mov
xchg
add
das
add
mov
fdivrl
jmp
xchg
xor
cli
ja
jne
sbb
and
stc
das
mov
mov
dec
ja
out
xchg
mov
scas
jp
fcoms
aad
jmp
xor
sbb
aas
push
or
popa
cwtl
mov
pushf
in
push
jb
jle
add
lahf
or
fs
lret
clc
popf
mov
mov
mov
sbb
sub
or
out
lret
pop
sub
sub
nop
xchg
imul
pushf
into
mov
cmp
xchg
stc
imul
fstpt
ds
and
iret
pop
dec
jmp
push
mov
in
sub
push
push
lea
jp
es
jne
insl
add
mov
pop
lret
out
push
mov
xchg
call
aaa
add
stc
push
sbb
lahf
fs
dec
lds
or
push
mov
add
mov
aam
mov
mov
pop
dec
out
stos
rorb
or
test
xchg
sub
inc
cwtl
push
cmc
test
adc
aad
pop
xlat
adc
add
lea
mov
cs
sbb
jecxz
rol
out
fbstp
and
pop
mov
outsb
movl
mov
dec
cmp
std
and
add
xchg
jnp
das
inc
test
jp
repz
lods
xchg
push
cmpsl
divb
push
je
sub
xchg
cmpsb
push
mov
xor
jae
cmpsl
sbb
int3
shll
iret
jmp
andb
stc
inc
nop
pop
cwtl
pop
test
or
and
sahf
retw
addl
lods
dec
cld
sub
xchg
jnp
repnz
lret
sti
mov
jg
cld
dec
push
xchg
cmp
shlb
out
je
sbb
aas
cmp
and
gs
stc
pop
mov
filds
imul
sbb
xchg
in
xchg
test
mov
fistps
mov
cmpsl
pop
adc
bound
xchg
push
enter
jl
wbinvd
bound
ret
test
test
faddp
or
mov
inc
mov
add
das
sbbb
inc
popf
push
clc
pop
cld
xchg
push
ljmp
dec
push
mov
inc
push
fidivs
jns
loopne
xor
lea
pop
pop
stos
call
mov
jl
add
sbb
and
or
inc
dec
shlb
popa
mov
push
fs
stos
mov
leave
call
pusha
lea
fwait
sti
mov
push
mov
dec
dec
icebp
mov
dec
rcll
and
sbb
mov
pop
sub
jns
sahf
stos
pusha
sbb
enter
pop
std
outsb
sub
in
aad
pop
rclb
pop
jmp
cli
xchg
mov
data16
sub
repnz
dec
test
inc
addl
cmp
cwtl
cmp
jae
cmp
or
leave
ja
push
fwait
cmc
add
add
adc
sbb
push
xor
adc
ret
pop
inc
adc
popa
nop
inc
mov
daa
out
pop
mov
sbb
out
sbb
stos
les
mov
ss
adc
add
loop
xchg
xlat
imul
fildl
push
std
dec
ss
and
sub
outsl
dec
push
dec
imul
and
mov
adc
xchg
adc
fidivrs
push
pop
push
jo
and
aad
shrb
push
adc
xor
xlat
mov
stos
cmc
xchg
pop
push
push
jne
jecxz
loop
xchg
loopne
test
dec
pop
dec
mov
cmp
flds
in
nop
int3
dec
pop
das
insl
sub
ljmp
nop
dec
adc
cmp
fdivs
idiv
adc
xor
mov
or
lods
clc
dec
and
mov
outsb
aaa
dec
imul
jg
lcall
mov
lret
in
cmp
xor
pop
mov
dec
nop
into
and
pop
pop
jl
repnz
jnp
rcr
or
pop
mov
jns
dec
dec
sub
call
ret
test
pop
inc
inc
sbb
aas
mov
ds
cmc
jno
loope
shlb
test
repnz
jmp
call
dec
adc
pushf
into
sub
rcrl
xchg
pop
ds
adc
sbb
bound
insb
xor
sbb
push
sub
xlat
pop
jecxz
jbe
mov
pop
jbe
fistpl
push
test
add
sar
ja
xor
outsb
adc
xchg
fsqrt
sbb
and
dec
cmp
adc
sbb
out
ss
add
pop
lods
fstl
sbb
data16
adc
or
add
aas
in
dec
add
adc
mov
in
adc
dec
or
imul
lds
jns
mov
movsb
out
popf
mov
add
ss
in
pop
jle
iret
dec
sub
shll
cmp
enter
push
push
js
xchg
cld
inc
les
ja
lahf
push
mov
mov
int3
xor
jne
push
iret
shrb
enter
jecxz
push
lret
jae
sub
popf
adc
mov
sbb
and
idiv
fldenv
imul
pop
xchg
xchg
and
add
add
nop
das
sub
in
decl
cmp
push
stc
add
test
icebp
mov
pop
rcr
mov
inc
cmc
push
je
push
push
addl
and
stos
fidivs
aam
mov
test
scas
ret
ljmp
mov
pushf
pmullw
ljmp
imul
dec
iret
addr16
fsubrl
sub
outsl
push
mov
out
jb
rcll
push
push
jge
outsl
and
repz
pop
mov
mov
or
mov
addb
xor
fstpl
xor
dec
dec
inc
jmp
smsw
jnp
xor
dec
lret
sub
in
xchg
loopne
cltd
lret
pop
jmp
test
fwait
inc
fucomi
push
pop
enter
jnp
jnp
enter
js
mov
jl
test
inc
fisubl
jecxz
push
mov
push
rol
mov
lds
fwait
int
push
ljmp
sub
xor
and
enter
jmp
mov
dec
inc
xor
shll
popf
dec
adc
jge
fadds
mov
xchg
push
aad
movsl
sbb
and
cmc
scas
mov
arpl
sub
xchg
or
add
std
or
xor
push
fbld
sti
stc
mov
jge
adc
cmc
cltd
ret
xchg
push
and
cmp
sbb
fistpll
ret
adc
push
mov
fists
icebp
test
push
testl
xchg
xchg
imull
dec
and
sub
jmp
popa
ficompl
sub
sub
cmc
ret
xchg
mov
test
adc
mov
mov
dec
andb
test
mov
lods
adc
and
mov
test
xor
pop
orb
pop
lahf
test
adc
lret
enter
not
out
xchg
pop
cmp
jle
std
adc
jo
mov
mov
dec
repnz
mov
fwait
xor
dec
xchg
loope
ret
inc
xorl
inc
sbb
and
scas
test
addr16
pop
fs
jg
insl
outsl
idivb
sbb
cli
mov
pop
std
mov
in
clc
sub
mov
orl
and
pop
test
mov
mov
cwtl
jp
mov
mov
jns
sub
cs
test
xchg
add
mov
mov
inc
ds
enter
xor
push
rorl
into
pusha
out
xchg
bound
fsubs
xchg
in
out
push
or
pop
cld
push
jns
cmp
xor
jne
sbb
push
sub
repz
andl
imul
xchg
inc
insl
add
movsb
mov
xor
xchg
in
mov
movl
or
xchg
cmpsl
test
fcmovne
inc
ret
jg
inc
jg
pop
adc
fbstp
sub
jo
sti
sbb
and
mov
add
js
sahf
sbb
outsl
push
leave
pop
pop
ror
leave
test
push
mov
dec
cmp
jae
mov
pop
fbstp
sbb
adc
popa
fisubl
push
jae
mov
daa
lea
rcll
shll
fs
out
das
or
lahf
out
and
lods
das
clc
aas
pop
fwait
fs
mov
ffreep
mov
repz
scas
jb
xlat
pushf
lods
cltd
popf
test
pop
lret
mov
jp
std
jle
jle
fnstsw
dec
in
sarl
shrb
jns
dec
add
mov
push
aad
aaa
sti
dec
lahf
scas
dec
dec
cwtl
push
mov
icebp
mov
xor
pop
push
mov
mov
push
addr16
and
inc
xchg
dec
push
gs
push
jp
mov
jae
clc
repnz
xchg
mov
sti
and
pop
popf
mov
inc
pusha
sub
ja
jbe
and
mov
aas
arpl
dec
lahf
add
cltd
ja
pop
fs
mov
sub
lock
stc
lock
pop
je
add
or
shll
stos
mov
dec
loopne
cld
xchg
sbbl
jle
adc
lret
test
fsub
mov
lea
daa
mov
inc
pop
repnz
cmp
insb
stc
xorl
jno
rorl
movsb
jp
ret
xor
sub
imul
jge
lods
push
stc
aad
sub
mov
ret
aas
or
cmp
bswap
repz
ljmp
daa
rolb
or
jb
mov
push
pop
dec
fldt
jle
mov
insb
sub
testb
xchg
dec
cmp
add
sahf
xchg
pop
push
mov
outsb
dec
pop
lods
lock
inc
xchg
sub
shr
adc
in
sub
mov
jne
adc
dec
xchg
xchg
inc
jecxz
cmp
pop
in
sbb
cmp
xchg
in
mov
pop
outsb
or
aas
pop
adc
outsl
hlt
jge
dec
add
adc
mov
enter
std
jo
xchg
push
inc
sahf
scas
dec
sub
pop
inc
ret
fidivrs
pushf
inc
sub
jecxz
and
cmp
inc
mov
sar
push
daa
sbb
mov
and
int3
and
ret
cld
or
and
lret
xor
adc
jecxz
lods
es
jle
sbb
repnz
es
fyl2x
jl
xor
xchg
mov
fs
xchg
aas
xlat
jns
lods
pop
lods
mov
push
lods
mov
or
dec
lods
sub
xchg
and
addr16
xor
ja
mov
cld
pop
rorb
mov
mov
push
test
pop
sub
pop
jno
mov
jae
jne
nop
mov
hlt
or
mov
mov
dec
xchg
mov
rclb
jp
or
pop
jl
inc
or
jle
sub
sbb
sub
imul
rolb
call
arpl
sti
pop
xchg
or
lahf
je
loope
adc
out
ret
shrb
sub
loope
loopne
aaa
push
and
sub
dec
add
call
sbb
mov
mov
vmwrite
les
push
sbb
pop
sarb
stc
adc
cmpsb
jnp
jge
xor
test
rcrb
pop
cmpsb
outsl
out
jge
test
dec
push
ja
xor
in
xlat
stos
arpl
xchg
fidivs
mov
mov
or
mov
sub
fldenv
or
jl
fstps
xchg
cmc
shr
bound
add
imul
addl
js
jp
mov
xchg
push
rcll
xchg
push
mov
daa
subb
and
and
jmp
pop
ret
or
mov
mov
or
mov
adc
adc
dec
pop
jbe
repnz
push
mov
fisubrl
xlat
and
push
ja
outsb
inc
scas
jbe
std
popl
rcrl
jmp
push
mov
loopne
sub
xor
xor
add
xchg
jecxz
and
mov
xchg
fiaddl
outsl
mov
enter
into
xor
dec
mov
push
in
sub
test
push
jnp
and
mov
push
dec
pop
dec
pop
jnp
popf
xchg
cmpsl
mov
sahf
mov
push
dec
je
cltd
jecxz
outsb
jae
test
popa
cmp
loopne
mov
outsl
mov
idivb
stos
outsb
out
push
popf
xor
imul
and
xor
popa
push
rorl
and
test
sbb
mov
stos
loopne
in
leave
bound
xchg
aad
mov
mov
enter
aad
cvttps2pi
mov
out
mov
lods
cmp
inc
pop
stos
xchg
inc
call
repnz
jns
jmp
clc
je
push
push
scas
adc
sbbl
pop
fildl
xchg
push
push
mov
popf
xor
pop
pop
sbb
ret
cmp
dec
xchg
in
inc
inc
fxam
addb
fwait
mov
adc
sbb
lock
hlt
sbb
add
cmp
cmp
dec
xchg
xchg
insb
leave
and
movsb
sarl
mov
cmp
adc
push
pavgb
xchg
and
aam
pop
scas
repnz
repnz
adc
inc
jmp
push
jns
mov
imulb
std
cwtl
paddusw
ret
daa
in
fildll
xor
scas
ja
pop
pop
mov
gs
cmpsl
sbb
sbb
pop
sub
in
pop
out
in
mov
addr16
ficompl
mov
cwtl
xchg
xor
push
dec
jg
push
inc
dec
inc
xchg
cltd
aad
mov
inc
mov
pop
fisubrs
xor
loope
lods
xorb
jle
in
clc
xchg
dec
jp
add
ret
jae
mov
and
mov
lahf
lock
shll
xchg
pop
movsb
js
cmp
sbb
rcl
outsl
lcall
ret
mov
and
add
xchg
daa
call
push
clc
xchg
pop
mov
and
enter
ret
popa
jns
pop
xchg
testb
jmp
addr16
add
fstpl
add
adc
pop
outsl
mov
in
mov
sbb
inc
stos
insb
or
pop
das
ds
mov
push
repnz
fwait
ret
sbb
jmp
ud2
in
daa
mov
cli
stc
adc
ljmp
or
dec
mov
and
xor
rorb
cmc
sahf
mov
pop
int
mov
add
lds
dec
sbb
dec
and
sub
jo
add
pusha
mov
mov
mov
imul
and
lods
xchg
jp
jle
pop
pop
push
imul
mov
mov
cmpsb
lret
sub
jp
scas
push
pop
or
loop
nop
movl
outsb
mov
inc
insl
mov
ss
dec
push
arpl
sub
sar
dec
sarl
dec
loope
ficoms
xchg
pop
cmp
test
mov
jmp
adc
xor
sbb
mov
cmpb
lock
inc
or
mov
inc
sbb
or
mov
out
xchg
iret
sbb
jl
les
push
mov
cmpb
push
rolb
mov
add
push
pop
jo
leave
dec
bnd
pop
xchg
stos
pop
adc
das
jge
clc
inc
rclb
xchg
mov
cld
push
in
xchg
gs
adc
cmp
test
or
dec
xorb
pop
cmp
inc
fistpl
mov
aas
dec
sub
mov
cmp
ret
dec
dec
lcall
mov
outsb
roll
add
add
lea
cmc
pusha
jmp
leave
push
inc
movsl
mov
xor
cmpsl
push
sub
fnstenv
or
mov
bound
or
cmpsb
int3
out
inc
cmpsb
add
and
or
out
jecxz
sub
and
outsl
xor
test
scas
add
cmpsb
insl
push
mov
push
push
in
pop
popa
jg
push
jl
adc
inc
dec
out
push
sbb
sbb
fwait
xchg
jns
pop
ja
incl
jle
ds
jne,pn
ljmp
dec
iret
push
loopne
jno
inc
jae
popf
roll
cmovno
daa
dec
aam
jg
sub
mov
je
sbb
push
adc
jg
xchg
mov
addr16
inc
mov
lret
ds
fsubl
fisubrl
push
fdivrl
sbb
add
stos
jbe
or
xor
imul
or
mov
push
or
and
out
fucompp
and
add
bound
jae
sub
ja
add
xchg
aas
andl
repz
cmpl
bound
les
mov
andb
inc
or
adc
ret
rolb
mov
mov
pop
hlt
int
jmp
addr16
jmp
mov
pop
sbb
sti
add
xchg
out
bound
aam
push
add
sub
shll
mov
mov
mov
shll
bound
cltd
ret
sbb
test
xor
and
mov
lock
outsb
xchg
jmp
mov
sub
sbb
mov
nop
sti
sub
mov
or
pop
adc
call
icebp
cmpsl
adc
insl
jo
inc
jne
fnsave
mov
bound
inc
enter
pop
adcb
mov
out
popa
clc
ret
loopne
rcrb
jns
pop
mov
mov
cs
mov
mov
fidivrs
jne
mov
jns
daa
or
and
cli
test
les
push
sub
aaa
test
out
js
lods
and
testl
movsl
cmc
in
cld
mov
inc
pop
mov
mov
and
xchg
fcmovnbe
and
test
push
adc
push
iret
xchg
mov
cmp
out
push
jle
cmc
jns
sub
xchg
push
aas
adc
divb
test
xor
into
out
inc
add
push
mov
mov
push
adc
out
cmc
and
das
and
xchg
push
loopne
out
cmp
sbb
mov
repnz
stos
lcall
je
adc
mov
inc
jge
inc
push
or
in
xchg
cwtl
mov
add
out
push
lcall
sbb
insl
test
mov
xchg
out
pop
xor
repnz
sub
jae
pop
test
stos
pop
dec
push
jecxz
push
xlat
cmp
jb
movsb
ljmp
in
mov
and
pop
dec
jmp
popa
dec
popa
mov
fs
mov
mov
test
sub
sti
nop
outsl
mov
mov
std
int3
test
cmp
mov
push
scas
fsubp
leave
jnp
sub
movsb
pop
ficomps
lcall
fstpl
aad
lret
jo
cmp
jae
pop
mov
pop
xchg
cmp
neg
or
gs
aaa
xchg
popf
xchg
in
pop
movsl
pop
or
mov
cmovbe
in
cmp
cmc
jle
push
pop
push
data16
push
shl
mov
repnz
clc
ret
fimull
rcrl
jmp
sbb
push
inc
mov
xchg
jno
sub
push
test
addr16
or
jg
loopne
mov
cmpsl
xchg
mov
adc
fcompl
ljmp
and
ret
ds
and
aaa
sub
add
subb
mov
divb
imul
sahf
out
push
stos
push
cli
jg
andl
or
fstps
or
sarl
push
mov
outsb
inc
xchg
sbb
js
cmp
inc
test
adc
fcoml
sub
in
sbb
cmp
mov
add
mov
addb
fldt
or
pop
movsb
test
cs
pop
and
mov
xchg
lcall
xchg
sub
mov
jbe
aam
cmc
dec
xchg
aad
inc
or
cmp
push
push
adc
xchg
cwtl
jb
add
div
xchg
cmp
add
imul
push
xchg
dec
rcrl
xchg
hlt
fstl
cs
mov
jnp
imul
cmp
adc
xchg
add
sub
inc
push
adc
repnz
fidivrl
pushf
dec
imul
sbb
push
filds
test
push
jp
inc
repnz
mov
push
pop
mov
sub
pusha
push
and
jbe
lret
jae
lahf
pop
mov
lds
ja
je
sub
add
cmp
push
lds
jge
or
xor
adc
nop
fmulp
mov
dec
add
in
scas
outsb
xchg
xor
call
dec
mov
sbb
into
and
insl
xor
xchg
adc
fisubrl
pop
cmp
shll
fstpt
adc
test
movsb
pop
pop
pushf
popf
sbb
rcl
testl
sbb
psllw
xchg
inc
iret
loop
jnp
mov
sbb
iret
iret
sub
add
xchg
leave
in
sbb
out
mov
and
jae
dec
cmp
mov
daa
mov
lcall
mov
iret
outsl
jo
ja
jmp
xor
out
aam
test
add
sub
je
roll
jecxz
cmp
icebp
mov
jne
dec
cmpsl
mov
fldl2e
cltd
sbb
in
pop
pop
xchg
rolb
mov
mov
jno
mov
push
jne
sti
mov
lcall
jmp
add
stc
mov
or
push
sub
or
sbb
jmp
or
scas
ljmp
push
lock
xchg
inc
cmp
popfw
mov
pop
push
imul
in
fisubs
stos
or
ja
cli
push
lods
lea
inc
int3
adc
out
jns
jl
in
mov
pusha
cwtl
sbb
jmp
pop
lods
imul
xchg
rol
and
int
xor
inc
pusha
adc
fwait
adc
sbb
push
lds
inc
sarb
pop
inc
repz
xchg
sub
bound
pop
push
dec
pop
sub
mov
daa
pop
lds
pop
push
dec
test
push
mov
fs
scas
sbb
xor
add
ja
sbbl
in
cmp
mov
sti
and
dec
out
cltd
jbe
movsl
sbb
and
jg
stc
jns
cltd
mov
adc
xchg
mov
in
pusha
lds
lret
push
mov
decb
sub
outsb
sbb
push
xchg
jne
cli
loopne
into
loope
addr16
xchg
repz
sti
call
xchg
scas
push
sahf
rol
fsubl
dec
mov
xor
pop
rcl
dec
add
ret
mov
into
inc
dec
push
enter
mov
mov
jl
push
push
jbe
jb
or
xlat
sub
sar
jb
out
insl
xchg
outsb
outsb
bnd
clc
push
jg
mov
jp
jmp
push
out
lods
out
jo
xor
test
mov
and
setae
sbb
lret
daa
mov
xchg
or
push
dec
mov
aam
call
and
jecxz
dec
push
and
inc
test
sarl
push
iret
lods
addr16
les
fs
push
mov
fisttps
push
movsb
inc
and
ret
gs
pop
jbe
fsubs
mov
insl
xchg
mov
xchg
fcoms
lods
mov
jecxz
inc
dec
fs
xchg
jecxz
dec
sub
cmpsl
sub
imul
fiadds
test
mov
pushf
repnz
ljmp
add
fisttps
lea
sbb
lea
add
test
mov
or
je
scas
xor
push
or
or
mov
gs
shl
clc
add
cltd
out
sub
lock
jno
jl
loope
ljmp
xchg
frstor
mov
pop
sub
lret
pop
pop
sbb
mov
nop
sbb
sti
lcall
xor
and
dec
jge
jl
adc
rclb
addr16
mov
jg
sub
jno
mov
in
sbb
nop
aad
dec
xlat
sub
mov
aaa
add
fs
inc
pop
lods
sbb
cmp
dec
push
jecxz
dec
sub
ja
mov
shrl
jae
fcoml
jmp
mov
ljmp
js
xchg
sub
mov
jge
loop
rorl
loop
lahf
fisttpll
jl
jae
push
inc
nop
je
cmp
jbe
mov
mov
mov
push
hlt
fisttpl
or
pop
lods
scas
inc
ret
cmp
clc
pop
repz
iret
jnp
leave
mov
shlb
push
clc
or
shrl
xchg
and
mov
xchg
mov
sti
loope
sar
test
andl
cld
sbb
orl
xor
xchg
inc
outsl
out
je
dec
enter
mov
sub
jb
inc
je
sbb
or
test
inc
dec
cli
outsl
dec
cli
dec
nop
adc
insl
cmpl
pushf
adc
mov
loopne
dec
mov
lds
adc
push
out
or
adc
stos
icebp
arpl
gs
or
dec
mov
je
movsb
push
jp
daa
mov
addr16
jns,pt
mov
and
mov
enter
in
std
aam
sub
out
shl
aam
xor
lea
inc
dec
mov
cmc
inc
notb
push
sbb
adc
clc
jp
mov
or
ss
lea
int3
pop
push
enter
add
hlt
mov
jne
stos
call
stos
stos
les
jp
scas
sti
add
int
mov
sub
jle
add
outsb
add
dec
sbb
jo
mov
push
adc
or
mov
in
subl
repnz
imul
jge
pop
lcall
mov
push
xchg
sbb
stc
xchg
pusha
push
sbb
notl
cmp
xor
push
xor
icebp
xchg
adc
sbb
int3
rclb
fdivr
push
xor
js
sub
xor
rcl
sbb
push
jmp
sbb
push
mov
idivl
pop
jge
stos
fisttpl
xchg
add
mov
fstp
mov
push
mov
lret
and
cmp
add
cmp
test
dec
xchg
mov
test
sub
sbb
mov
dec
shll
icebp
dec
lahf
aad
rcr
ja
cmpsl
call
xor
js
push
pop
lds
dec
std
leave
mov
pop
stos
stos
sub
inc
pop
insb
push
loopne
jno
lret
or
adcb
or
pusha
test
jns
es
add
idiv
pusha
jbe
mov
inc
in
mov
mov
loope
scas
xchg
pop
sbb
inc
sub
bound
repz
and
push
rcrb
jge
or
imul
ret
iret
out
add
lahf
sub
xchg
cmp
ret
sub
repnz
xor
mov
inc
daa
cmp
test
jge
fstpt
and
adc
lret
add
adc
shl
rol
jne
lds
xchg
bound
cmpsl
aam
shrb
idivl
loope
lea
push
sti
cwtl
adcl
shl
push
inc
leave
imul
jb
loopne
adc
xor
or
ret
xchg
push
arpl
mov
fwait
dec
out
repnz
bound
setbe
mov
hlt
push
and
xor
xchg
adcl
fidivl
push
fnsave
fcmove
and
jp
jnp
arpl
ja
and
dec
clc
xchg
sbb
add
and
and
cmp
pop
stc
dec
shr
nop
jae
sbb
cs
test
dec
addr16
sahf
movsl
add
popa
add
push
pop
mov
xchg
arpl
cmovl
cmp
dec
sub
ss
push
aad
mov
leave
or
jecxz
adc
stc
leave
fwait
xchg
subl
idiv
call
in
mov
cwtl
push
lcall
ret
testl
xchg
insl
mov
loop
test
lcall
fadd
or
pop
pop
es
bnd
cmp
add
in
repnz
xchg
adc
in
in
mov
ds
push
xor
enter
stos
outsl
loopne
aaa
dec
andb
push
inc
std
out
aad
cmp
ret
ret
jmp
ret
dec
hlt
inc
inc
fmulp
in
imul
add
push
rcl
xor
js
loopne
add
sbb
movsl
inc
mov
fstl
or
inc
and
jmp
xchg
dec
aad
repnz
and
icebp
xor
xchg
xchg
fdiv
in
xor
fcompl
or
addr16
rorl
adc
mov
pop
ss
push
sbb
lods
shll
popa
mov
cwtl
ret
insb
cmp
or
filds
test
aam
dec
arpl
lcall
pop
fiaddl
repnz
std
rorl
add
mov
insl
fisubs
xchg
lahf
in
xor
cmp
dec
sbb
and
outsb
ljmp
aad
testb
xor
xor
pop
or
cmpsb
xchg
in
pop
jecxz
mov
jns
popa
inc
xor
xchg
pop
imul
data16
test
lock
icebp
cmpsl
fwait
divl
adc
xor
xchg
fdivrp
or
mov
outsb
outsb
cs
repz
inc
push
je
push
call
add
enter
dec
loop
scas
pop
out
adc
xchg
out
mov
lds
aam
test
idivl
subb
adc
inc
xchg
sti
mov
cmpsb
add
imul
gs
pushf
pusha
and
add
repz
negb
cmpsl
adc
jbe
ja
cmp
lea
in
in
jmp
lea
cmp
movsb
scas
jge
cmp
lcall
pop
cmp
stos
test
out
jb
or
sub
cli
cmp
sbb
cltd
nop
daa
pop
adc
mov
outsb
push
sarb
jg
icebp
push
push
shl
shrb
ja
and
nop
push
call
xchg
xchg
aam
mov
jg
loop
and
jbe
jae
pop
jge
mov
inc
rorb
scas
mov
mov
xchg
sub
xor
xor
cltd
mov
mov
popa
mov
xor
jge
jp
adc
imul
pop
leave
adc
push
jno
jb
push
pop
loop
pop
dec
loopne
jns
enter
fwait
xchg
loope
clc
cld
les
pop
addr16
adc
ficomps
mov
jns
lock
cli
cmp
cmp
gs
fcoml
xchg
xchg
sbb
mov
mov
cli
or
adc
push
push
sbb
outsb
in
push
daa
mov
nop
add
bnd
xor
paddsw
outsl
out
loop
sbb
mov
and
or
adc
cmp
aam
inc
cld
mov
fnsave
jge
mov
idivl
les
push
sbb
insb
pop
enter
loopne
jnp
nop
xlat
icebp
or
mov
call
aas
mov
cmp
push
xlat
cwtl
mov
push
orl
scas
fsts
je
xchg
push
shlb
inc
xor
sub
jmp
lods
xchg
mov
xchg
in
mov
fistpll
mov
jbe
jge
xchg
sub
fisttps
aad
fmul
lds
cmpsb
lods
gs
mov
add
inc
lods
xchg
pop
cmp
imul
or
sbb
mov
adc
mov
fiaddl
mov
add
mov
cli
hlt
ret
fisubrl
dec
xchg
out
pop
rcl
add
lods
jae
or
adc
cmp
sub
pop
lret
test
mov
cmp
pop
mov
inc
lahf
lea
sub
pop
test
arpl
mov
in
cmpsl
cmp
mov
roll
sbb
ljmp
and
dec
fwait
shlb
sahf
xor
xchg
ds
les
xlat
push
cmpsl
or
mov
xorl
or
mov
sbb
cmpsl
mov
add
jecxz
sub
insb
or
pushf
dec
stos
adc
outsb
outsl
fisubrs
movsl
jmp
jg
fstl
aaa
decb
jecxz
insb
push
mov
mov
int3
pop
insl
inc
cltd
das
lcall
loop
dec
loope
pop
fdivr
xchg
filds
cltd
lds
jmp
sub
xlat
mov
int3
lock
lahf
push
mov
pop
std
adc
insb
adc
in
adc
cmpsl
jo
test
ljmp
xor
and
aas
cmp
enter
sbb
mov
mov
fmuls
lret
iret
inc
fwait
es
xchg
int
and
cli
cltd
popa
fldl
sbb
mov
daa
dec
je
sbb
push
jl
lods
cs
es
aad
sub
cmp
aad
arpl
popf
shrb
es
les
cmpsl
int
mov
jle
inc
pop
lods
or
imul
sub
jb
xchg
test
cwtl
adc
mov
fwait
mov
adc
inc
rolb
mov
imul
lods
xchg
stos
cmp
cs
hlt
and
mov
push
je
in
enter
xchg
in
pop
sbb
and
in
in
adc
xor
jns
pop
cltd
fsubrs
les
mov
pop
movl
cmp
test
dec
pop
jecxz
xchg
adc
sbb
push
mov
aad
incl
add
add
gs
into
arpl
or
xlat
sub
inc
out
pop
fcompl
test
movsb
lods
sub
inc
leave
lcall
int
or
pop
shrl
ficomps
icebp
push
repnz
repz
and
lds
pop
push
std
shlb
inc
aam
push
mov
xor
sbb
loopne
pop
dec
divl
xchg
into
mov
jne
add
sub
and
sbb
jb
xor
mov
adcb
dec
unpckhps
loope
and
xor
jp
jns
pop
and
xchg
scas
mov
mov
shl
fcom
add
js
mov
xchg
loope
mov
dec
sub
mov
pusha
pop
stc
jnp
mov
push
sbb
out
sahf
loope
mov
testb
adc
lea
dec
outsb
out
test
cmc
or
mov
xchg
les
jge
push
std
xchg
hlt
and
sbb
jl
fwait
jbe
sub
lahf
notb
push
mov
fidivl
das
or
js
sti
or
imul
jne
jnp
or
jp
mov
ret
push
ss
out
daa
insb
lret
ror
sbb
bound
mov
xor
adc
pop
imul
and
in
or
sahf
or
bound
sbb
int
mov
into
imul
enter
data16
aad
and
int
aaa
push
daa
pop
out
test
mov
inc
cwtl
dec
nop
cmp
scas
sbb
shrb
add
fidivrs
and
sbb
xchg
testb
pop
jmp
stc
adc
push
xor
jnp
inc
push
inc
js
sub
dec
push
daa
inc
mov
cmc
fldcw
lods
or
and
in
insb
insb
jmp
cld
pop
addr16
jl
pop
and
in
push
cmp
inc
mov
xchg
data16
lock
or
jg
fildl
jge
bound
rcrb
jb
push
xchg
pop
or
inc
and
out
stos
insb
popf
mov
add
daa
filds
loope
and
or
js
and
int
jne
ret
scas
mov
pop
sub
iret
inc
xchg
into
out
enter
pop
adc
dec
add
sub
jb
dec
into
insl
push
pusha
and
mov
add
adcl
aam
xchg
ja
cmp
and
xchg
jmp
leave
adc
inc
lods
cmp
and
mov
aas
ds
rorb
gs
pop
mov
bound
sti
pop
xchg
andl
int
fwait
mov
pop
int3
dec
push
or
leave
mov
mov
sarl
cmpsb
xchg
mov
mov
jp
sbb
inc
mov
scas
ja
lds
push
dec
xorl
inc
lcall
adc
mov
push
test
sub
in
movsb
sbb
pop
aam
movsl
std
bsf
xor
mov
lret
stos
sbb
pop
mov
push
cld
mov
push
in
clc
into
push
jecxz
sub
mov
shlb
repnz
lcall
add
mov
imul
cmp
mov
push
call
mov
xor
icebp
mov
ds
jns
inc
mov
icebp
dec
or
jp
cld
inc
push
movsl
and
ret
or
jecxz
call
pop
xor
mov
sbb
js
jmp
mov
fistps
mov
jp
cwtl
or
inc
xor
push
inc
xor
mov
mov
or
or
push
and
lods
pusha
movsl
hlt
fistl
pushf
inc
pop
and
stos
mov
jl
addr16
clc
scas
bound
mov
add
stos
dec
pop
loope
dec
ficompl
mov
rclb
jae
std
push
iret
ds
shl
dec
in
movsb
mov
inc
ret
repnz
ret
push
jmp
or
sbb
js
test
xor
cwtl
adc
cs
dec
fists
or
ret
out
mov
out
loop
aad
repz
adc
or
inc
movl
pop
lahf
sbb
sub
jb
aaa
movb
mov
ret
push
sbb
cmp
outsl
mov
iret
in
sbb
xchg
test
add
and
enter
push
out
repnz
fst
mov
push
dec
aad
mov
push
or
inc
cmpsl
arpl
bound
add
insb
aaa
cwtl
lahf
fucomp
inc
and
or
testb
sbb
scas
icebp
mov
gs
lret
rclb
and
add
test
movsb
xchg
je
jge
in
fbld
push
sub
and
pop
cs
jbe
outsb
xchg
loope
jp
xor
jmp
ljmp
push
sbb
enter
sub
push
sti
mov
lods
stc
mov
add
imul
mov
testl
mov
add
xor
or
jne
xor
push
mov
aad
push
stos
clc
imul
inc
fsubp
add
ficompl
or
push
jp
xchg
scas
dec
aas
fmul
pop
mov
fisubrs
mov
add
sti
sub
test
cmpsl
pusha
inc
ja
in
rolb
ror
lods
popf
mov
lea
push
rorb
shll
fdivp
sub
mov
or
clc
mov
mov
loopne
xor
xlat
sub
es
sub
xor
xchg
xor
lret
sub
stos
imul
inc
cs
movzbl
sub
rcrb
jae
xchg
in
das
inc
mov
les
call
into
xor
or
out
aaa
push
lcall
mov
xor
mov
xor
repnz
push
shrl
sub
sar
inc
ret
lods
xchg
sbb
inc
inc
test
mov
insl
xchg
sbb
roll
xor
fldcw
mov
lods
xchg
xor
push
bound
fwait
jb
sbb
outsl
add
icebp
psllq
lahf
in
xor
ljmp
into
movsb
int3
adc
adc
cmp
clc
adc
into
cmp
push
dec
je
jae
xor
mov
fildl
dec
fbstp
aad
popf
cs
loope
pop
dec
cmp
faddl
out
aas
or
cmp
sub
nop
dec
ret
adc
lods
testl
dec
xor
pop
mov
je,pt
icebp
pusha
dec
jecxz
inc
pop
inc
mov
ja
rcl
or
cmp
mov
xchg
jg
int3
xor
rorb
push
mov
in
cltd
into
leave
pop
pop
jg,pt
stos
gs
mov
ja
nop
mov
push
cs
sbb
ja
push
lcall
xlat
rolb
cltd
ret
mov
cmp
scas
cli
ret
mov
mov
test
push
popa
aam
cld
cwtl
push
pop
ret
xor
lods
rclb
inc
cli
adc
push
inc
sub
in
jle
lock
pop
or
in
loop
outsb
into
js
xchg
dec
clc
movsb
cmp
mov
into
pop
or
mov
mov
pushf
mov
dec
fwait
loopne
cmpl
lret
mov
mov
daa
rcr
ret
aaa
lock
fisttps
data16
mov
and
xor
aaa
lret
notl
inc
pushl
jg
lods
mov
pop
and
mov
adc
adc
fwait
shlb
sub
std
das
shrl
dec
subb
adc
js
outsl
les
mov
popf
enter
pop
add
jl
lahf
cmpsl
cwtl
xchg
pop
sbb
cmpsl
test
aas
pop
pushf
xor
mov
sbb
mov
push
lds
mov
shr
std
jnp
cli
pop
loopne
fsubs
inc
ss
push
fndisi(8087
stos
xor
mov
and
int3
dec
cs
jae
mov
js
or
in
jne
fsub
ret
inc
dec
mov
pop
mov
push
aad
aaa
cmp
mov
mov
and
test
lahf
mov
inc
rcll
pusha
test
xchg
shll
fldcw
subb
fimull
int3
push
jp
pop
ljmp
lods
cmpsl
mov
mov
aad
int3
cmpsl
test
pop
dec
xchg
pop
rcrl
popf
loopne
sub
mov
jo
xchg
jmp
inc
cmc
sub
ljmp
leave
add
dec
aad
loope
push
cmp
test
ret
mov
dec
adc
jbe
pop
jmp
add
pop
lret
cltd
aad
add
or
shll
inc
fbld
xor
imul
das
push
sbb
dec
iret
fists
gs
jl
adc
xchg
cli
rcrl
inc
aas
push
shll
mov
ret
nop
test
xchg
jae
sub
nop
xor
loope
test
pop
in
jmp
fidivrl
mov
and
inc
push
enter
mov
decb
sub
ror
test
cmp
pop
add
jo
pop
jbe
push
cmp
outsl
loopne
dec
jle
cmpsb
pop
mov
mov
jl
test
cmc
iret
in
mov
sub
xchg
or
into
fmull
stc
mov
sarb
jnp
popa
data16
cmpsl
hlt
gs
in
int3
push
add
clc
pushl
and
aad
pop
add
lds
cmp
repz
insb
lds
inc
mov
mulb
jmp
out
pop
flds
jmp
xor
cmp
sub
cmc
and
sbb
int
mov
jbe
lods
adc
push
mov
mov
sub
movsb
rorb
cmp
xchg
enter
pop
xchg
or
rcrl
gs
adc
ljmp
cmp
div
push
jne
inc
mov
cmpsb
dec
inc
cli
mov
popf
xor
in
mov
lods
mov
fimuls
adc
cld
int3
imul
sbb
xchg
push
adc
lea
out
scas
sahf
cmpsl
sbb
fmul
icebp
push
sbb
xlat
out
adc
aas
pop
jecxz
scas
stc
cs
sub
cli
gs
push
mov
stos
adc
jnp
aas
stos
or
dec
xor
or
ljmp
mov
xchg
ret
js
dec
out
cwtl
push
xchg
mov
xor
or
sub
popa
cmp
roll
icebp
mov
out
addr16
aad
ja
les
push
pop
lret
pushf
or
push
fdivrl
repz
repz
imul
cmp
bound
or
inc
fwait
jae
mov
pop
add
cs
xlat
inc
cmp
lods
inc
or
call
jne
mov
cli
ret
rcrl
cmc
jae
shll
stos
push
lods
ret
mov
dec
lods
push
pushf
inc
cld
and
and
inc
xlat
jo
mov
lea
into
hlt
out
or
pop
xchg
adc
push
mov
clc
inc
jbe
inc
shl
popf
ret
into
add
int
xchg
loope
dec
insl
test
jmp
jle
and
or
pop
hlt
sbb
std
mov
sbbl
xor
mov
mov
cmp
cmp
or
icebp
mov
fcmovbe
ja
inc
pushf
daa
and
cmc
jle
ss
and
add
adc
pop
mov
out
mov
jg
push
jle
add
sub
mov
fists
mov
in
add
movsb
jb
and
xor
jns
into
adc
test
cmpsl
je
cltd
jge
scas
cmpb
push
scas
pushf
ret
ficompl
add
xor
sbb
push
jbe
add
ret
dec
lret
dec
aam
pop
dec
mov
in
pop
dec
ss
inc
jp
mov
mov
out
icebp
je
insl
cmpsl
stos
in
enter
xchg
stos
cmc
add
out
imul
and
les
or
add
push
lock
rorb
loopne
dec
popa
ret
js
dec
in
in
arpl
in
mov
ljmp
cli
pop
aad
fcoms
sub
rcrb
add
push
mov
fbstp
add
mov
clc
push
cmc
push
push
outsl
lock
add
dec
pusha
imul
dec
aad
push
dec
pop
outsl
dec
mov
inc
or
sbb
pop
movsl
and
push
movsb
repz
fstpl
bound
int3
xor
sahf
test
pop
pop
data16
mov
add
pop
push
movsl
or
add
cli
push
dec
add
xchg
adc
xchg
mov
fs
and
into
into
stos
mov
arpl
push
into
icebp
jp
inc
imul
xchg
mov
shll
aam
sbb
sbb
fildl
inc
mov
out
mov
push
mov
adc
inc
les
xchg
ror
roll
int
call
jns
adc
js
inc
mov
sbb
sbb
sti
fistpl
cmp
dec
icebp
fstp
out
outsl
into
jo
loopne
filds
cwtl
scas
jnp
mov
popl
scas
mov
xchg
push
daa
insl
call
mov
hlt
jmp
xor
in
pop
jno
lret
jge
pop
xchg
push
fdivrl
push
xor
xorb
decb
cwtl
aaa
cld
adc
push
cmpsb
cmp
gs
pop
insb
cmpsl
int
jecxz
stc
lcall
push
fcmovnu
enter
add
popa
insl
dec
add
xchg
and
xchg
adc
pop
outsl
insl
dec
jae
dec
out
adc
shlb
adc
dec
pop
fwait
inc
fwait
and
ret
dec
cmpsb
push
cmp
je
stc
hlt
mov
inc
jge
popf
sahf
call
fisubl
sbb
xchg
out
cmp
pop
adc
pusha
pop
imull
sbb
shrl
adc
pop
xchg
cmp
mov
jne
dec
mov
mov
sarb
pop
mov
jmp
pop
jge
sub
sub
or
mov
pop
hlt
lock
pop
cs
dec
sahf
sub
lahf
adc
jl
cmp
and
ja
or
sub
xchg
cmp
jne
inc
sahf
jecxz
movsb
nop
mov
les
out
cltd
sub
cmp
rolw
sub
stc
push
inc
je
orb
pop
sub
jecxz
inc
into
ja
pop
push
aaa
lret
pop
dec
ret
sbb
cmp
mov
in
lods
mov
xchg
lods
fwait
ljmp
mov
sub
sub
push
mov
test
mov
pop
out
loopne
cmp
and
dec
cmp
dec
pushf
sub
push
lds
pushf
std
or
add
fldenv
loopne
push
cmp
cmp
vpshuflw
lret
cld
out
lods
nop
xlat
dec
lret
popa
outsl
shll
repnz
dec
lahf
sub
push
add
pop
xchg
adc
stc
sub
filds
lock
gs
scas
adc
mov
push
je
xchg
fistpll
jb
test
aaa
mov
test
jl
push
out
push
fadds
stc
ret
fildll
into
dec
mov
int3
xchg
dec
and
jns
sub
cmpsb
aad
dec
sub
add
sbb
jl
dec
push
movsl
jp
pusha
mov
leave
add
pushf
aam
sub
xchg
mov
push
xor
les
jb
xor
jbe
jecxz
cmp
and
ds
sub
pushf
xor
mov
pop
xchg
fwait
xchg
jg
aaa
ljmp
push
push
roll
insl
jge
sar
mov
xchg
decb
popf
ja
dec
sub
scas
in
mov
sbb
in
cmp
jmp
pushl
fs
sub
icebp
lods
into
aam
jnp
xor
fs
aad
mov
adc
sbb
int
sbb
fdiv
das
shr
out
daa
push
inc
pop
bound
dec
out
sahf
adc
scas
xor
insl
mov
fldenv
stos
pop
fnstsw
aaa
imul
in
movsb
mov
jle
hlt
push
ret
daa
xchg
test
mov
sbb
cli
movsb
pushf
test
stos
ret
lods
icebp
dec
cmpsl
pop
cltd
popa
mov
jae
fs
call
xchg
pop
je
stos
pusha
xor
pop
and
daa
cmp
jb
cmc
inc
sar
xor
and
test
or
sub
stc
jl
xor
pop
in
inc
mov
in
outsb
xchg
insb
repnz
push
mov
sub
or
xchg
cmpxchg
xorb
xor
pop
mov
inc
roll
mov
mov
xchg
adc
stos
or
cltd
and
jp
mov
loop
test
add
mov
fcmove
out
mov
dec
mov
hlt
ljmp
fsubrs
das
andw
hlt
dec
fdivs
push
rcrb
insb
dec
sarl
mov
ss
loop
xchg
imul
pop
gs
aad
mov
mov
jle
cmc
and
mov
cmp
xchg
mov
jecxz
sbb
or
enter
shl
gs
popa
xor
xor
push
inc
jb
mov
xchg
enter
or
gs
pop
int3
and
cmc
in
adc
dec
mov
das
notl
sbb
inc
out
xor
push
inc
push
inc
mov
insl
sub
sbb
jge
fwait
lcall
xlat
int
push
mov
gs
lods
push
notb
pop
pop
xchg
shl
inc
fldenv
aas
inc
jmp
xchg
pop
cltd
inc
dec
inc
aaa
movsl
jae
xor
fisttpl
aad
and
sbb
roll
push
aam
pop
or
mov
js
push
xchg
roll
shlb
lret
sub
push
data16
ss
mov
adc
cmp
dec
push
call
jae
jg
test
aad
cmp
sbb
push
pop
push
mov
mov
fbld
mov
pop
mov
stc
mov
test
and
fwait
sub
mov
insb
fxtract
adc
xchg
out
xchg
fiadds
in
xor
mov
xchg
inc
int
fwait
in
or
loopne
sub
stos
std
roll
jbe
pop
mov
jmp
in
jp
and
push
jge
xor
mov
dec
stos
mov
rol
ja
test
out
ret
sub
mov
fmull
push
xchg
adc
out
data16
aaa
mov
and
push
adc
adc
cwtl
cltd
cmpsl
xor
xchg
leave
cli
mov
or
mov
push
insb
adc
popf
int3
or
into
shrl
or
aad
pop
adc
and
dec
shlb
adc
sti
loop
mov
test
add
add
xchg
cmp
ja
andl
push
or
movsb
call
out
pop
jbe
out
inc
push
pushl
add
mov
jmp
pushf
sbb
add
push
add
mov
sbb
fstps
add
std
xor
sbb
aaa
fdivrl
stc
inc
pop
mov
fldl
popa
das
inc
push
cmp
cmc
mov
pop
adc
dec
inc
testl
cmp
fs
ficompl
fildll
dec
mov
stos
inc
and
sub
sbb
jne
ficoml
sub
into
clc
mov
addr16
lods
mov
mov
mov
sub
push
stos
std
pop
mov
pushf
jnp
out
cltd
cwtl
test
push
adc
mov
sub
cmp
fidivs
addr16
rcll
movsb
data16
push
mov
push
xlat
stos
jecxz
add
jns
cmp
jmp
sbb
lea
inc
jge
jae
xchg
fwait
out
and
mov
xorl
imul
mov
mov
push
xor
and
jnp
lods
pushf
faddl
or
andb
jno
sahf
clc
lahf
dec
dec
xchg
adc
jle
xchg
lret
cmp
aad
das
les
rclb
push
outsl
fwait
xlat
sbb
jo
xlat
fstpt
mov
insb
sbb
mov
add
pop
popf
cmp
shl
mov
cmp
adc
mov
insl
mov
mov
dec
loopne
fisttps
cmp
add
cmc
push
mov
test
jge
fcomps
inc
cmp
ror
xchg
add
mov
fs
xchg
mov
popf
stos
mov
add
out
cmp
test
cmp
mov
iret
adc
xor
lock
dec
push
mov
push
loop
dec
lods
fildll
leave
push
jge
mov
imul
in
xchg
sub
in
or
or
imul
fists
out
jnp
out
lret
add
inc
loopne
fidivl
xchg
je
jmp
repnz
fcmovne
add
cs
mov
and
add
negl
maxps
cld
pop
add
cltd
out
icebp
adc
test
mov
js
lods
std
mov
xchg
rclb
pop
jnp
mov
jmp
push
in
in
dec
add
push
movsb
push
mov
lea
or
jbe
lods
pop
xchg
into
sub
popa
call
and
mov
clc
sub
jo
sbb
mov
sahf
xorl
js
push
jge
test
inc
in
lock
in
inc
sbb
loope
ljmp
pop
cmc
push
cwtl
push
xchg
fisubrl
ss
ljmp
addr16
xchg
iret
pop
fldl
pop
xor
xor
push
xchg
aas
jecxz
decl
js
gs
imul
xchg
ljmp
mov
aas
or
incb
add
int
xchg
add
xchg
ja
cmp
cmpsb
push
mov
es
xlat
lods
sbb
pop
in
fcmovb
pop
aam
sub
cmp
push
mov
shlb
push
icebp
pop
or
dec
mov
aad
adc
sbb
pop
loopne
dec
fistps
decl
aam
mov
jnp
and
dec
inc
sbb
js
leave
jbe
popf
stc
test
lahf
lret
adc
sub
mov
in
lods
xchg
and
cmpsl
sub
scas
mov
xchg
sub
jg
ljmp
xchg
jecxz
mov
inc
loope
faddl
iret
sub
stos
jb
and
mov
popa
stc
sbb
xor
push
mov
cmc
subb
in
roll
xlat
xchg
in
dec
pusha
leave
int
std
ja
or
fwait
aam
mov
test
pop
pop
sub
stc
jecxz
incb
xchg
cmp
arpl
xor
or
lcall
sub
mov
sub
xor
mov
arpl
push
outsl
frstor
leave
jp
fidivrs
dec
adc
cmp
dec
cs
push
inc
jo
mov
add
xlat
add
sub
cmc
adc
movsl
shlb
fld
lahf
popf
lret
shl
cmpsb
push
arpl
jb
jae
fs
adc
fildl
imul
gs
stos
jecxz
cwtl
jns
xchg
sub
mov
push
jb
call
mov
inc
xor
aaa
inc
fisttps
inc
xchg
scas
cmp
jns
mov
push
dec
in
pop
pop
in
lock
cmp
in
pop
test
insl
lea
lret
cmc
movsb
cli
jl
ss
pop
jbe
jmp
mov
fstps
bound
lcall
adc
popf
mov
pushf
adc
or
loop
fwait
cmp
add
nop
cli
cs
aaa
test
enter
sarb
xor
mov
sub
pop
push
int
es
test
inc
pop
xor
dec
mulb
pop
lods
sbb
in
mov
pop
scas
shrb
adc
add
movsb
jp
out
call
shlb
sbb
inc
cmc
das
test
mov
imul
jg
les
cmp
sbb
arpl
fildl
jnp
shll
gs
sub
xor
jae
add
icebp
dec
pop
jle
lahf
jl
mov
inc
push
xor
enter
add
adc
pop
xlat
pop
in
jge
dec
nop
mov
cld
ret
insb
or
mov
jae
daa
in
dec
in
cwtl
jo
cltd
jle
lock
gs
push
stc
push
dec
out
cli
es
and
inc
cwtl
mov
test
and
push
lahf
data16
aad
pop
mov
xchg
in
leave
scas
ja
sub
mov
es
xchg
or
cltd
cmp
cmp
and
lock
repnz
sbb
cmpsl
push
inc
push
shrl
cmp
js
xor
xchg
cwtl
aas
fisubs
fiaddl
push
aas
mov
test
test
mov
pop
test
scas
and
js
outsl
jns
xor
icebp
or
and
rorl
push
shl
and
jne
adc
sahf
rcrl
std
add
mov
pop
dec
and
js
jmp
subb
mov
shrl
out
pushf
pop
out
mov
popf
loop
mov
cmpsb
pop
dec
fwait
loope
adc
inc
hlt
out
stos
cmp
sub
xchg
add
rcr
lods
idiv
addr16
fstpl
or
xchg
mov
imul
jns
stc
adc
sub
mov
bound
out
test
xor
xor
out
cmc
fdivl
loope
iret
sbb
loope
gs
ja
cli
jbe
jns
xor
pop
push
or
outsl
mov
jmp
test
cli
ljmp
daa
outsb
popa
pop
mov
test
shlb
cmp
test
jecxz
jo
push
push
pop
mov
ret
scas
addl
cltd
rcrb
iret
aaa
xor
xlat
imul
xchg
enter
xchg
xchg
fnstcw
xchg
das
sub
xor
jae
mov
inc
jae
fdiv
and
aaa
mov
pop
push
mov
mov
or
negl
sub
testb
lods
push
mov
out
and
int
out
mov
shl
shlb
push
rorb
dec
scas
push
movsb
jmp
dec
mov
scas
xchg
lret
cld
call
pop
out
sbb
xlat
imul
pop
pop
and
daa
mov
loopne
push
push
mov
pop
fwait
sbb
adc
cltd
popa
lret
pusha
cs
sub
xor
push
jnp
push
cs
xlat
lds
xor
jne
lahf
jo
jg
aaa
dec
jns
cs
xor
or
out
pop
cmc
pop
shlb
add
mov
rcl
mov
es
or
pushf
into
xchg
add
out
pop
jge
pop
mov
mov
inc
dec
loope
hlt
pop
sbb
mov
pop
mov
mov
stos
xchg
js
add
fdivs
adc
mov
incb
enter
cmp
adc
xlat
imul
push
mov
inc
mov
sub
into
sub
inc
mov
popa
sbb
aaa
mov
out
jl
lahf
cwtl
mov
call
bnd
sbb
mov
add
sbb
daa
cmp
ljmp
movsl
pop
loope
push
push
das
jae
push
pushf
push
xchg
pushf
lcall
push
int3
push
sbb
dec
push
inc
jne
push
jbe
xchg
and
je
sub
int3
or
mov
xor
je
test
mov
pop
aam
outsb
iret
std
jno
iret
mov
arpl
jle
dec
mov
cli
out
sub
into
aas
xor
fiaddl
fcmovbe
movsb
imull
inc
mov
sti
faddl
rol
xchg
sbb
lods
jo
sbb
or
push
mov
push
xchg
push
outsl
adc
dec
mov
xchg
jo
add
sbb
push
sbb
pop
sbb
testb
pusha
dec
outsb
dec
cmpsb
add
std
int
push
pop
xlat
xchg
mov
jmp
loope
int
sbb
outsl
push
xor
in
jg
push
xor
int3
cmp
ret
or
cmp
test
lcall
test
cmpsl
push
repz
dec
add
pmaxsw
mov
dec
push
orl
xlat
loope
inc
sbb
das
lock
xchg
cmp
adc
mov
pop
or
lret
push
ds
mov
pop
stos
and
rorl
loop
sbb
shlb
insb
loopne
push
pop
push
addr16
add
xchg
lret
je
xor
jae
aad
stos
sti
cmpl
loopne
addb
sbbb
sahf
push
sarl
pop
push
mov
push
int3
push
jg
lcall
push
test
cmp
out
jp
and
push
mov
jne
scas
scas
adc
enter
pushf
nop
aaa
ficomps
adc
sarb
or
jno
add
popa
or
lret
in
incb
push
xchg
stos
mov
movsl
adc
sbb
aad
aaa
sbb
inc
and
jo
xor
dec
inc
xchg
fdivrs
stos
es
stc
ljmp
or
and
mov
mov
pop
iret
xor
mov
dec
mov
pop
jecxz
pop
out
dec
jae
sbb
lret
test
or
outsb
ja
pusha
dec
cmpsl
daa
jo
repz
roll
ret
push
lock
js
ret
pushf
gs
and
mov
cmp
and
inc
jae
sbb
leave
pop
sbb
cmc
push
push
addr16
inc
fildll
ret
xor
into
push
aad
cmp
or
xlat
lea
add
fsubp
jo
in
iret
push
enter
cltd
mov
idivb
gs
es
iret
outsb
jp
es
lods
inc
imul
xchg
into
lret
shll
xchg
mov
add
push
ret
popa
push
ud1
scas
call
popa
push
mov
loopne
dec
das
stc
out
inc
inc
stos
dec
mov
movlps
cmpsl
xor
aad
dec
cld
and
ja
mov
es
jo
jbe
push
ret
clc
cmpsb
sub
cltd
ret
inc
xchg
sbb
stos
or
imul
mov
icebp
add
cmp
add
xor
xchg
pusha
xchg
cwtl
mov
adc
jno
xchg
xchg
ret
mov
sbb
pop
repz
stos
js
mov
rcrb
enter
mov
mov
mov
jns
inc
cmp
in
mov
test
repz
test
mov
add
add
and
pop
pushf
jno
faddl
push
ret
inc
and
dec
or
lock
lcall
mov
jae
cmp
mov
pusha
bound
stc
xor
gs
je
add
popa
shlb
cs
mov
fnstsw
cli
sub
add
aad
inc
cltd
pop
mov
addr16
dec
outsb
cmp
cmpsl
add
push
in
in
popl
pop
cmpsb
xchg
xchg
pop
jb
push
scas
mov
sbb
cmp
cli
clc
xor
addr16
mov
xchg
data16
inc
jae
mov
xor
stos
or
lret
add
mov
sbb
xor
idiv
pop
cltd
adcl
cmpsl
mov
mov
jnp
icebp
rcrb
mov
pop
fildll
outsl
push
sub
test
clc
cmp
fwait
push
xchg
xchg
lods
mov
aad
push
mov
jns
sub
lret
push
sbb
shll
rol
dec
or
mov
leave
sbb
add
jne
push
test
pop
adc
fs
es
cmp
mov
fildl
rolb
jnp
push
fimull
insb
cli
xchg
imul
sti
lret
cmpl
xchg
outsl
pop
push
add
sarl
sbb
push
cmp
pop
mov
ja
in
mov
jle
in
cmp
xchg
bound
pop
mov
jmp
das
mov
test
out
pop
fstl
pcmpgtd
mov
imul
imul
loopne
or
fisubrl
loopne
in
out
jno
jmp
paddsb
mov
pop
imul
xchg
xchg
jne
add
ljmp
and
jg
ror
sub
popf
cli
rol
iret
ljmp
xorl
xor
inc
in
push
inc
imul
mov
outsl
les
pop
sub
dec
out
dec
test
jge
sub
test
cmc
sub
pop
bound
xor
movsl
pop
fisttpl
mov
cmc
mov
js
jmp
add
xchg
shll
pop
jmp
mov
out
push
fs
xchg
sarb
stos
push
jg
outsb
mov
or
fcoml
in
push
xrelease
out
outsb
jnp
mov
xchg
lahf
xchg
shrb
mov
mov
nop
call
cmp
mov
mov
xchg
add
xchg
push
sub
in
cmpsl
lods
fmul
fisttpll
aam
sbb
ss
out
aam
jo
and
add
daa
ret
dec
sbb
sbb
lea
cmp
mov
arpl
cmp
daa
xchg
or
jnp
adc
repz
pop
mov
repnz
insb
mov
xchg
subb
jae
and
ficoml
popf
push
gs
int
dec
cli
xchg
rcll
xchg
inc
mov
jl
aam
mov
push
mov
push
sti
add
in
pop
in
dec
nop
rol
stos
loopne
inc
xlat
inc
scas
xchg
ja
and
mov
cwtl
test
push
cmpl
inc
out
in
loopne
dec
mov
push
inc
clc
sbb
jmp
aam
ljmp
mov
test
inc
cld
xchg
test
push
loopne
stos
jmp
out
inc
jecxz
test
mov
and
cs
fists
mov
dec
add
push
mov
lret
hlt
gs
xchg
lcall
mov
fstl
push
lods
stos
dec
lret
xor
imul
aas
rorl
leave
add
jecxz
pop
mov
insl
sub
adc
testb
push
mov
adc
xlat
rol
jle
movsl
inc
cld
mov
punpckldq
imul
ds
movsb
mov
and
daa
jb
sbb
mov
roll
outsb
cld
das
sar
and
pop
in
xor
aas
lock
add
xchg
add
ljmp
sub
mov
stc
inc
mov
mov
ror
jns
ds
imul
inc
mov
loopne
icebp
in
mov
jmp
and
jne
aad
and
mov
dec
pop
jnp
aad
jo
vpaddusw
mov
mov
inc
mov
pop
xor
jo
pop
stos
mov
pushl
add
dec
xorl
cli
insb
jne
repz
xor
pop
repnz
aaa
add
ret
mov
mov
out
inc
mov
mov
aaa
scas
enter
add
cmp
fst
jnp
insb
or
repz
rcrb
inc
mov
in
je
xor
scas
loope
inc
jo
mov
daa
nop
in
les
xor
xlat
xor
rolb
pop
and
sar
je
movsb
cmp
jg
enter
push
cld
mov
popaw
out
into
xor
jmp
push
inc
test
push
je
pop
es
dec
xchg
sbb
jns
nop
cmp
js
mov
jp
xchg
push
add
pop
sub
inc
jnp
cmp
pop
and
xor
sbb
ljmp
sbb
sti
pop
lahf
inc
pusha
mov
std
inc
lcall
pushf
mov
xor
push
mulb
xchg
adc
push
jle
pop
outsl
mov
sbb
enter
lcall
lea
loopne
cmp
es
jmpw
dec
jmp
mov
gs
jns
xchg
jle
dec
add
cmp
scas
pop
es
lcall
sbb
dec
sub
shll
mov
lods
gs
aad
pop
mov
nop
jno
mov
sahf
inc
inc
fwait
xchg
leave
cmp
pop
sbb
cmp
jge
shll
cmc
scas
or
mov
cmp
mov
push
dec
lods
out
lock
mov
mov
orl
repz
jecxz
outsb
sbb
cmp
inc
shlb
or
jne
rorl
cld
loopne
mov
lods
mov
sub
out
clc
jmp
push
ret
xchg
and
inc
in
jp
adc
dec
mov
inc
sub
add
test
mov
test
cmp
sti
cmc
fdiv
cwtl
pusha
leave
or
aaa
push
in
clc
das
int
int3
insb
icebp
dec
in
subl
jecxz
cmp
add
nop
nop
in
dec
pop
jns
es
js
mov
cld
sti
in
mov
dec
cld
sub
nop
fs
mov
stos
inc
into
push
ss
and
or
clc
adc
dec
sbb
test
fdivrs
mov
repz
aam
stc
mov
and
dec
sub
push
xor
shr
or
cmp
lock
aas
add
and
sbb
xor
fisubs
out
fbstp
mulb
lods
shlb
mov
into
repz
jbe
and
call
sub
push
movsl
andb
xchg
lcall
mov
negl
ljmp
pop
inc
mov
push
shlb
loopne
mov
jo
ret
pop
stos
andl
dec
lahf
push
sarl
add
xor
sub
push
int3
das
sbb
sahf
mov
jge
cmp
aas
add
dec
add
xor
xor
mov
inc
sbb
push
push
jb
fbld
jmp
mov
es
cmp
and
mov
loopne
and
inc
ret
lret
mov
push
inc
aaa
in
cmc
loope
lods
mov
jb
pop
push
bound
pop
cld
mov
push
bnd
fmul
xchg
stos
pop
xor
flds
dec
loope
movsb
repnz
aas
push
cmp
jp
mov
sub
clc
aas
adc
cmpsl
and
nop
leave
sub
inc
scas
fcompl
jg
aam
loopne
test
in
push
lea
mov
mov
dec
fildll
insl
shr
add
out
xor
pop
pusha
dec
dec
insl
inc
popa
js
ret
subl
rep
fdivs
cmp
mov
fucomip
cmp
or
lcall
add
adc
sbb
pop
nopl
mov
mov
add
mov
ss
cmovge
adc
xchg
xor
pop
jns
lock
mov
lea
mov
leave
insb
pop
mov
sbb
mov
adc
arpl
mul
jg
or
nop
or
xchg
and
out
push
popf
sub
sub
push
xchg
int
add
out
or
push
js
lock
mov
popf
mov
mov
inc
sub
mov
mov
push
xor
movups
sub
inc
in
test
or
fdiv
ja
lea
addr16
jno
mov
iret
fildll
ret
idivl
dec
lds
jle
les
js
nop
sub
cld
pop
pop
fnstsw
loopne
pop
add
or
jp
xchg
cmp
into
or
jle
jp
cmpsb
lcall
adc
jg
cmc
jp
lahf
es
push
mov
pop
insb
sub
jmp
sub
notb
fucom
xorb
test
and
push
or
arpl
mov
xchg
or
dec
jnp
ret
js
jmp
iret
push
clc
loope
sbb
add
mov
mov
test
inc
cmp
push
add
in
pushf
sbb
mov
repz
in
lods
mov
in
shl
aaa
incl
push
xchg
cmc
sbb
mull
fsubp
out
in
and
xchg
adc
inc
into
sti
pop
pop
push
adc
lret
xchg
xor
adc
jle
lods
mov
scas
repnz
addl
pop
pop
add
jns
mov
mov
mov
lahf
or
cmpl
xchg
sti
pop
repnz
rcrl
cmp
movsb
xlat
dec
sub
sbb
cmpsb
adcl
fsts
sub
mov
mov
leave
dec
inc
adc
aaa
cli
sahf
add
sbbl
outsb
jnp
cmpsl
pop
mov
out
daa
cmp
sbb
push
popf
mov
mov
scas
mov
andb
or
cld
ja
inc
mov
out
push
xor
pminsw
out
imul
leave
mov
clc
fwait
iret
shrl
xchg
cltd
cmp
pop
xchg
sbb
jecxz
jo
fwait
test
jo
xchg
bound
mov
in
aaa
jo
jge
xchg
pop
sub
cwtl
imul
jae
mov
lods
loope
gs
test
xchg
lea
adcl
push
loop
or
inc
shl
push
inc
adc
rclb
ret
and
push
push
imul
push
in
push
jo
insb
pusha
push
hlt
dec
addb
and
mov
push
xchg
pop
sarl
orl
ret
repnz
or
ja
cld
push
mov
popa
inc
or
pop
push
xchg
mov
push
jb
sbb
adc
pop
fwait
scas
enter
stc
outsl
xor
xlat
subb
ljmp
mov
inc
ja
daa
test
adc
xorl
aad
jns
push
lods
loopne
jecxz
push
jg
adc
or
adc
stc
rcl
addr16
lods
push
pcmpgtd
pushf
xchg
dec
adc
movsl
mov
test
inc
inc
aam
sub
fadds
jae
movsb
clc
mov
mov
cmpsb
leave
dec
cltd
sub
mov
xlat
jp
pop
jmp
inc
aaa
sub
orb
xor
stos
sub
int
int3
or
rcrb
mov
in
pop
mov
ja
push
clc
xchg
sbb
cli
sbb
jge
and
nop
fcompl
iret
outsb
js
das
pop
rcl
jnp
ret
add
adc
push
daa
outsb
xchg
out
inc
imul
and
in
imul
add
jne
cltd
div
jmp
sbb
movsb
xchg
ret
repz
cmp
cld
roll
or
adc
jge
lock
and
std
rsm
inc
sti
sbb
pop
push
sub
in
add
mov
cmp
dec
lret
push
enter
mov
dec
xchg
cli
inc
jmp
lahf
pop
add
push
insl
jo
mov
aam
and
jns
pusha
cwtl
dec
repz
leave
mov
adc
pop
push
add
and
adc
out
sub
xlat
fisubrl
popf
mull
xlat
shr
outsb
sbb
loop
fs
in
xchg
test
movsb
push
pop
out
out
sub
sub
or
dec
mov
ret
mov
xor
outsb
pop
int
rcr
jbe
dec
sbb
xchg
repnz
xchg
xchg
cmc
packuswb
cmp
cltd
add
cmpsl
in
inc
gs
or
js
sbb
pop
jg
lahf
push
insl
adc
jo
sbb
cwtl
cmpsb
xor
sub
mov
jecxz
dec
jb
xchg
and
je
lret
xlat
add
inc
lahf
mov
or
inc
orb
dec
or
aas
jb
push
movsl
or
std
in
xchg
arpl
mov
jle
lcall
xchg
movsl
add
rclb
clc
or
sbb
cmp
sub
fistpll
xor
inc
mov
xlat
xorl
adc
das
jns
mov
add
mov
dec
dec
cmp
sub
and
inc
mov
mov
cltd
out
lahf
dec
loope
icebp
popa
adc
or
aam
lret
ror
sbbl
jle
out
mov
xchg
mov
ds
in
dec
ret
enter
jmp
testl
xchg
push
xchg
out
xor
mov
dec
push
or
imul
mov
mov
and
xchg
xchg
or
sub
fldt
dec
out
sarl
push
out
mov
sub
jno
ret
mov
xor
inc
out
dec
jmp
sub
pop
shrb
sub
mov
jne
fbstp
mov
sbb
push
push
popf
sub
ffree
mov
mov
lock
call
jg
repz
jge
adc
cmp
in
outsl
enter
mov
cld
mov
dec
adc
lods
add
shll
fdivs
cltd
out
inc
stc
and
push
mov
ja
test
mov
cmp
adc
imul
scas
out
cmpsl
pop
stc
bound
fs
dec
subl
out
test
mov
lret
mov
push
dec
pop
mov
iret
cmpsb
test
sbb
inc
and
daa
jnp
aad
push
loop
cmp
xchg
clc
rolb
paddusw
pop
call
shrb
movsb
nop
jns
dec
faddl
inc
jno
sbb
cmpsb
or
cld
cmpsb
or
idivl
movsb
push
outsl
aam
out
in
xchg
xor
push
aaa
cs
je
in
dec
push
jae
mov
dec
shlb
pop
pop
mov
inc
int3
xchg
cmp
cmp
xchg
mov
inc
pop
sub
aaa
mov
pop
loope
push
dec
rorb
cmc
insb
bound
add
rcll
ror
jno
pop
or
pop
adc
pop
pop
cwtl
mov
mov
and
aaa
sbb
push
or
push
rcr
nop
xor
xchg
rcrl
in
add
sbb
sbb
test
push
rclb
push
movsb
ljmp
andl
loopne
jg
mov
inc
mov
push
in
sbb
inc
mulb
cwtl
ljmp
gs
movsl
imul
dec
jno
pop
add
add
push
mov
gs
cmp
sarb
push
sub
dec
add
in
inc
sub
mov
mov
stc
inc
out
ss
dec
mov
and
int
push
in
jo
sub
push
pop
xchg
repz
cmp
stos
xchg
arpl
stos
ljmp
xchg
scas
and
andl
pushf
push
jge
adc
in
or
arpl
add
ror
xor
sub
test
mov
adc
xor
repnz
aas
xchg
jns
inc
pushf
fwait
inc
fisubs
shrb
dec
xchg
and
and
int
js
loopne
outsl
xchg
int3
movsb
push
pushf
jns
sub
ror
push
stc
push
mov
push
push
xor
inc
and
out
int3
cmp
add
dec
and
iret
in
or
xor
inc
cmp
aaa
xor
icebp
and
pop
stc
add
sbb
lea
jg
mov
jg
xlat
cmpsl
cli
subl
ucomiss
js
jmp
mov
or
nop
cli
xchg
pop
sub
fidivs
push
sub
jnp
mul
fcmovnb
addr16
sub
pop
call
imul
or
add
pop
pop
int3
hlt
ret
pop
lret
add
andl
or
add
xor
rcrl
or
andl
push
dec
mov
in
push
mov
es
or
fcmovbe
cmp
adc
push
adc
call
nop
test
popa
dec
test
or
ret
jle
in
push
repz
in
les
movsb
int3
cmp
jle
jmp
add
pushf
lods
sti
dec
sub
int3
insl
fbld
push
cwtl
jp
insb
sbb
inc
lret
xlat
xchg
insl
jno
push
push
xor
xor
add
aaa
xor
enter
into
push
mov
mov
stc
int3
mov
div
or
ljmp
stos
dec
pop
mov
mov
out
cmpsl
pop
or
mov
add
popa
cmpsl
sbb
inc
mov
adc
cmp
test
adc
fwait
in
or
sbb
mov
xor
adc
cmp
pop
out
mov
leave
add
leave
les
daa
jmp
sbb
xor
sar
aas
push
addl
inc
sub
or
jmp
dec
adc
jl
hlt
mov
test
sub
sti
mov
add
pushf
sub
nop
dec
jmp
jg
cmp
inc
fisubrl
jle
gs
lret
mov
push
push
push
lahf
adc
pop
inc
sub
jnp
cmp
push
arpl
cmp
mov
iret
inc
clc
mov
dec
sbb
pop
out
pop
test
loopne
std
lcall
mov
jp
pop
aad
insb
int3
mov
in
inc
or
dec
jns
jp
notl
jp
xor
test
sti
cmp
in
je
xchg
sbb
decb
fildll
lret
std
add
sbb
aam
ds
mov
pop
add
sbb
in
ds
xor
jecxz
leave
mov
into
insb
push
les
jae
dec
pop
push
shrl
xchg
push
notl
popf
popw
ss
dec
arpl
mov
jle
mov
mov
leave
cmpl
dec
rcr
jns
loopne
xchg
fwait
sub
mov
mov
cltd
jp
xor
pop
lcall
adc
scas
xchg
inc
bound
xor
push
shl
add
cmp
inc
cmp
testb
jp
mov
int3
mov
push
orl
and
push
ret
cmp
mov
or
lea
xchg
or
int
mov
inc
out
repz
pop
xor
test
and
outsl
sbb
xor
sub
rcll
mov
xor
dec
lret
std
popf
ret
inc
je
mov
ret
push
add
ljmp
clc
mov
and
jl
dec
dec
scas
add
jno
lds
push
ret
popa
cld
xchg
cmpb
lahf
inc
pop
cmp
inc
mov
scas
sbb
cmp
xor
mov
push
push
inc
mov
jbe
stos
pop
pop
add
aas
jb
push
mov
jp
addr16
lcall
lods
mov
fsubl
fbld
shrl
ror
or
and
jecxz
gs
jb
lcall
les
ret
jns
push
leave
mov
adc
mov
je
ds
sti
jmp
dec
test
mov
xor
pop
cmpsb
dec
insb
into
std
test
mov
fstpt
subl
call
in
dec
and
inc
arpl
mov
xor
mov
dec
jecxz
or
rclb
lcall
cld
mov
dec
scas
insb
pop
fidivl
lock
ss
push
aaa
jnp
popf
int
icebp
aas
xor
jmp
push
fbld
mov
jecxz
jae
sbb
imul
jecxz
je
cs
cld
fdivrl
sub
inc
lock
cmp
jno
bound
cmp
jns
movsl
push
sub
inc
mov
or
loope
es
mov
xor
lcall
addr16
mov
adc
and
mov
jg
mov
ja
inc
rcrb
push
lret
lock
add
leave
xchg
in
fnstenv
jg
mov
scas
rclb
inc
movsb
mov
sahf
adc
jp
push
std
mov
push
mov
sub
stc
dec
ret
loope
xchg
andps
and
jmp
icebp
in
mov
mov
mov
fs
aaa
aad
or
or
aas
jo
ret
xchg
jne
pop
mov
mov
add
notl
xor
mov
adc
pop
sti
insl
jmp
or
es
dec
call
mov
pop
mov
lods
pop
call
out
push
mov
movsl
cltd
pusha
lock
cmc
iret
adc
cld
and
pop
lods
push
push
jecxz
mov
inc
jg
out
out
jmp
jo
fsubl
xchg
or
cmp
fimull
mov
out
sub
adc
out
leave
scas
scas
adc
movsb
jl
pusha
jnp
fucomip
adc
push
push
xchg
jle
loopne
int3
in
test
ljmp
fistps
cmp
xchg
xor
jmp
into
adc
repz
push
mov
fidivrs
sti
dec
lock
popf
out
xchg
call
pop
mov
mov
test
cwtl
lea
or
pop
sti
dec
cmpb
push
jmp
scas
test
imul
addb
push
xchg
call
sub
mov
jbe
lods
adc
mov
mov
dec
loopne
loopne
int3
int
add
jp
pop
movsb
ror
xlat
rcrl
in
int3
xchg
mov
jo,pn
fs
fucomip
popf
mov
jae
cli
out
cmc
inc
subl
mov
scas
and
fcoml
jo
int
fldcw
addr16
cs
xor
xchg
sub
outsl
sbb
pop
adc
jmp
vorps
jle
or
or
jbe
mov
repz
pop
loope
xchg
rorb
jbe
test
xchg
mov
out
mov
mov
push
leave
jns
jns
js
cld
in
cmp
aad
cli
ret
ret
push
fs
mov
dec
adc
ret
push
inc
pop
in
mov
js
insb
cltd
test
orb
inc
add
in
dec
add
leave
mov
cld
add
fs
xchg
xchg
cmp
xor
xchg
jle
gs
repnz
rcll
xchg
mov
dec
jge
es
sub
lahf
pop
shlb
out
jge
jmp
mov
mov
orb
lret
mov
xor
js
in
jbe
mov
sbb
mov
dec
jg
dec
dec
or
mov
cwtl
xor
pushf
imul
lret
mov
addr16
gs
jns
fs
test
sbb
sar
arpl
cmpsb
xor
add
ljmp
jno
movsl
subb
inc
or
mov
out
cwtl
je
imul
sbb
xor
mov
inc
ret
ds
pop
scas
sub
inc
xchg
add
fdivr
or
inc
ja
divb
nop
lods
ss
test
int
shl
loope
cmpsb
lea
mov
adc
ds
test
scas
or
mov
xor
cs
iret
negb
or
add
test
andb
int3
pop
and
xchg
or
jmp
mov
inc
jne
xchg
mov
hlt
fcoms
das
mov
mov
inc
and
pop
out
int
cld
popf
sub
frstor
and
cmp
and
pop
sarb
mov
mov
call
adc
cli
pop
sub
xor
test
daa
xor
mov
ss
xchg
fdivr
pop
cmp
pop
ja
or
repz
leave
jmp
jbe
mov
mov
jle
out
xchg
xor
push
repz
popa
mov
mov
aas
add
and
dec
sub
out
push
mov
sub
lock
int
aad
jne
cwtl
pop
cli
popf
inc
mov
xor
push
push
jne
adc
mov
popa
push
aaa
into
and
xchg
loope
adc
je
push
lods
xor
add
insb
aaa
movsl
fcoms
sub
ljmp
out
imul
cwtl
ret
mov
out
outsb
in
adc
sarl
sarb
mov
shll
push
or
popaw
fs
sbb
xor
cld
and
aad
xchg
sub
fisubl
xchg
cwtl
lret
mov
ficoml
negb
int3
push
mov
inc
aad
xlat
cmpsb
push
add
push
dec
cmp
jl
ret
rcl
adcl
dec
lret
aad
cmpsb
push
push
dec
adc
fidivl
push
enter
xor
inc
sahf
sub
enter
iret
roll
or
sub
ficoms
repz
mov
jae
and
mov
out
inc
ffreep
ret
mov
pop
pop
loope
push
xor
or
hlt
in
popf
add
icebp
sbb
aad
lds
jne
cltd
sbb
adc
ja
cmp
jns
cmp
cmc
leave
aad
sahf
xchg
clts
jecxz
ja
jbe
fs
add
cmc
push
xor
push
jb
add
push
inc
jle
fs
lret
lret
lret
into
hlt
mov
or
lret
sub
rcl
in
and
out
std
lcall
xor
pop
and
add
movsl
jle
dec
mov
or
insb
inc
push
xchg
outsl
mov
int3
iret
dec
xor
faddl
jno
addl
jg
mov
jge
xchg
int
cmp
hlt
push
imul
inc
cmp
cmp
lret
jg
fwait
push
test
mov
mov
lret
adc
inc
mov
mov
in
addr16
xchg
shll
decl
out
sub
xchg
movsl
fimuls
outsl
push
add
daa
add
mov
iret
lock
dec
int3
xchg
xchg
pop
es
aas
xchg
scas
adc
loopne
mov
mov
xlat
mov
dec
rorb
adc
pop
push
ss
cld
inc
ja
mov
fs
pop
repz
or
dec
or
stc
nop
daa
lods
push
fmulp
add
xchg
mov
mov
sub
shll
das
pop
adc
mov
mov
out
out
mov
stos
mov
std
addr16
xor
std
pop
add
xchg
push
mov
cwtl
inc
jbe
pop
aas
fcmovnu
mov
sub
adc
mov
xchg
inc
pop
mov
inc
jge
xor
push
in
bound
inc
or
inc
ljmp
xlat
pushf
loopne
mov
iret
outsl
imul
mov
push
insl
push
mov
pop
push
jmp
lcall
aas
push
sub
js
mov
adc
push
cmpsl
sub
out
sub
pop
mov
mov
mov
or
in
stc
jg
fstps
adc
push
jecxz
lcall
fisttpl
fwait
clc
lea
dec
ss
inc
nop
std
xchg
scas
push
pop
push
inc
lods
xor
fimull
or
lds
fimuls
jns
mov
fimuls
mov
ret
xchg
add
cmpsl
mov
mov
dec
gs
gs
data16
daa
gs
mov
stos
jecxz
xor
int3
sbb
insl
jg
mov
insl
popa
or
mov
leave
test
mov
or
inc
mov
cmp
out
inc
xchg
pop
ret
sbb
call
and
in
sahf
lea
lahf
data16
jbe
pop
in
std
mov
cld
in
test
clc
arpl
jnp
xor
adc
cmovp
jne
movsb
insl
pop
jp
dec
inc
sti
jl
mov
pop
ja
pop
add
repz
test
add
into
ficompl
or
xchg
shll
outsb
inc
xchg
add
push
das
shrl
pop
outsl
mov
subl
adc
imul
pop
sub
xor
pop
mov
icebp
jb
push
xlat
imulb
js
dec
lds
out
ss
cltd
sub
sub
lret
inc
ss
xchg
and
and
leave
lret
js
push
lahf
stos
insl
paddsb
inc
push
sub
fcmovnb
push
inc
xor
push
stos
cltd
sub
divl
out
iret
push
imul
inc
mov
stos
stos
in
fdivl
dec
push
and
sbb
inc
je
fwait
into
xor
leave
adc
test
pop
into
mov
testl
push
xor
aas
mov
pop
pop
mov
fwait
scas
xchg
xchg
jnp
fsubrl
out
aas
out
add
ds
dec
add
jo
cmp
pop
dec
inc
imul
push
fcmovne
icebp
aaa
jle
cli
fidivs
shlb
fs
xchg
jbe
cmpsb
les
sbb
add
or
mov
push
mov
cs
insl
data16
or
sahf
add
fistl
imul
pusha
test
push
mov
stos
pop
stos
and
cld
icebp
gs
scas
rol
sub
add
push
mov
mov
inc
adc
loopne
jae
hlt
test
les
aas
dec
inc
sub
scas
aam
test
jle
pop
mov
push
unpcklps
f2xm1
or
cmp
jne
and
push
mov
mov
and
sub
jmp
test
test
pop
inc
cmp
inc
inc
mov
subl
cwtl
xchg
cld
imul
sbb
push
imulb
repz
xor
xchg
shlb
cmpsb
adc
cmpsb
or
xchg
jmp
or
mov
xchg
and
call
cmp
mov
mov
dec
or
lock
sub
mov
iret
pop
sahf
loop
and
jno
lock
daa
sbbb
popa
mov
fidivrl
mov
push
fldenv
push
ret
jle
pop
xor
in
std
xchg
mov
das
fwait
out
xchg
xor
dec
mov
jle
dec
dec
aam
adc
rcrl
popa
ja,pn
inc
fistpl
insb
test
cmp
stos
cmp
lret
add
fcmovbe
mov
jbe
dec
mov
adc
shrl
fnstenv
jnp
adc
dec
clts
pop
test
cmpsl
sub
lret
fistps
sub
jge
sub
mov
ret
cmpsb
push
fldenv
mov
test
sbb
std
push
fisubs
xor
and
cs
aaa
pop
cmp
cld
xchg
shlb
or
sbb
and
fs
pusha
push
stc
bound
idivl
mov
and
cmc
mov
inc
add
xchg
jle
mov
add
cmp
or
arpl
sahf
ror
rcll
jmp
ret
pop
jl
adc
lret
fnstsw
rolb
mov
sahf
movsl
jns
and
xchg
call
out
mov
cs
lds
fmull
cmpsb
mov
adc
push
adc
cmp
push
mov
jecxz
pop
mov
inc
mov
rorl
loope
movsl
stos
rorl
add
cmp
pop
nop
cmp
pop
movsb
shll
sahf
and
ljmp
jae
bswap
cs
int3
fsubrp
scas
jl
push
inc
outsb
insb
les
mov
dec
dec
push
cmp
mov
test
mov
cwtl
insl
pushf
cmc
loope
cld
dec
push
into
sbb
in
jecxz
mov
sbb
xor
loop
lret
xchg
xor
popa
call
pop
pop
sarb
jge
hlt
fldenv
sarl
out
arpl
lods
xchg
in
sahf
xlat
cmp
ljmp
push
mov
roll
js
dec
mov
sub
xchg
push
sti
mov
mov
js
xchg
aaa
ljmp
add
sbb
aad
lcall
sub
mov
cmpsb
inc
dec
mov
push
mov
rcrb
add
lds
mull
pusha
mov
push
and
pop
sbb
ja
and
jnp
or
mov
pop
inc
sbb
icebp
sub
sub
enter
imul
xchg
dec
push
mov
pop
mov
int3
mov
cmpsb
out
je
ss
jo
nop
mov
mov
aad
test
loopne
fldt
leave
daa
lods
inc
std
mov
and
loopne
xor
push
push
push
clts
or
sub
arpl
xchg
lret
sbb
loope
popa
cmp
xlat
in
pusha
or
xor
dec
cltd
rorb
or
inc
shll
arpl
imul
test
cld
and
push
mov
mov
mov
mov
inc
lods
sbb
loope
faddl
pop
movsb
mov
adc
push
lock
in
rcrl
sub
sti
inc
mov
inc
adc
sti
mov
hlt
iret
adcb
dec
sbb
cmp
mov
and
push
in
bound
fisttpl
push
jo
movsb
push
pop
iret
add
test
dec
fbstp
nop
fsubrp
push
or
cmpsb
xchg
cmc
in
xchg
mov
pop
cmp
mov
mov
fnstsw
lret
fs
sbb
int
int3
pusha
clc
and
mov
in
bnd
mov
cmp
pusha
dec
fimull
outsb
int
pop
in
out
fstpl
popf
fists
xor
adc
xor
pop
fsubs
xor
mov
icebp
outsl
test
xchg
dec
mov
sub
sarl
neg
inc
xor
xor
daa
mov
pop
pop
popf
mov
aad
mov
in
insl
movsb
xchg
xor
jecxz
push
mov
out
push
repnz
ficoml
mov
mov
pop
in
lods
jno
les
bound
jg
cmpsb
adc
fs
xor
stos
shll
aas
sub
mov
aaa
push
out
adc
pop
cmp
insb
lahf
pop
add
orb
sub
ja
scas
lahf
test
rolb
gs
and
sub
out
or
and
inc
sub
mov
jb
sub
outsb
in
rclb
nop
sbb
test
adc
dec
loop
dec
call
fcom
sbb
repnz
test
cwtl
shlb
loope
mov
movsb
inc
stos
jecxz
inc
imul
mov
or
das
je
sbb
cli
xor
xlat
mov
aad
mov
mov
das
inc
test
pop
adc
idiv
mov
icebp
push
mov
int
bound
mov
loop
push
fbld
dec
xor
add
pop
fdivl
fcmovu
hlt
ret
mov
imul
xchg
dec
inc
cmp
aad
xchg
cld
push
mov
stos
sub
sbb
rcrl
pushf
or
daa
mov
xlat
push
ljmp
xchg
add
stc
inc
cltd
cmp
hlt
fadds
cmpl
or
mov
jl
pmullw
add
inc
int
mov
push
push
sahf
in
pop
loope
cmp
sub
pop
pushf
jo
jmp
mov
push
scas
cmp
js
or
mov
or
ret
xor
inc
sbb
mov
pop
pop
xchg
dec
je
out
or
xor
mov
in
push
out
mov
push
sub
lds
inc
aam
fildll
cli
fsubrs
bound
out
pop
sbb
mov
mov
sub
jl
mov
stos
mov
rcl
mov
iret
push
test
fdivrs
mov
test
outsl
cmc
mov
add
jl
sbb
gs
js
sub
test
push
and
in
ds
fcomi
lock
jmp
adc
jne
dec
mov
inc
out
insb
std
add
jecxz
add
inc
pop
pushf
push
fsubr
pop
and
arpl
xchg
pusha
jg
jns,pn
mov
stos
inc
ret
or
cli
fadd
push
pop
or
insb
daa
cmp
or
xor
test
out
stos
ss
dec
imul
xchg
enter
adc
xlat
xchg
insb
rol
push
call
jmp
mov
std
nop
push
xor
rorb
push
enter
cmp
leave
pop
xor
test
movsl
mov
outsb
fistps
xor
jb
roll
sub
sub
movsb
roll
push
adc
lods
fprem
xor
mov
dec
mov
add
xor
jmp
jge
mov
cmc
es
xchg
orl
sub
cmp
jae
addl
xor
dec
cmp
movsb
loopne
jecxz
jle
mov
fs
jg
addr16
jp
mov
iret
gs
insb
outsb
sub
fcompl
aad
loope
add
mov
and
dec
movsb
iret
mov
mov
imul
xor
jg
pop
sbb
mov
aad
pop
push
dec
cltd
shlb
cmp
das
add
mov
loop
inc
std
pop
sub
lret
dec
es
iret
fnstenv
mov
out
cli
ret
lea
xchg
das
shll
cmp
test
outsl
fadd
sahf
sub
push
mov
xchg
xchg
pop
dec
adc
xchg
test
dec
lods
sbb
cwtl
leave
or
flds
or
repz
shll
cmp
aaa
mov
adc
jb
lret
das
out
ds
aas
loopne
push
or
stc
and
fucomp
add
cmpsl
lret
jmp
pop
pop
push
or
lods
insl
mov
repz
pop
or
jne
ja
or
in
lea
cmp
mov
inc
ret
push
fstpl
xor
jle
xchg
dec
subb
pop
adc
and
dec
mov
jae
push
out
push
mov
push
inc
roll
rolb
dec
daa
movsb
xchg
pop
out
sub
imul
or
sub
addl
in
popf
hlt
pop
dec
mov
fbstp
mov
fidivrl
mov
mov
popf
jb
and
test
sbb
adc
sarb
adc
dec
xor
stos
jge
inc
cmp
sti
add
dec
das
in
data16
mov
mov
jae
clc
push
push
hlt
fprem
add
mov
mov
addr16
fcom
clc
inc
mov
outsb
jecxz
imul
lock
mov
out
add
sub
add
adc
inc
mov
push
cmp
mov
lods
mov
adc
inc
aad
addr16
das
pop
dec
cmpsb
dec
arpl
lods
std
push
and
cmpsl
in
add
stc
movsb
xor
mov
mov
mov
scas
jne
enter
shlb
inc
or
mov
pop
mov
lods
jmp
sbb
fs
mov
imull
push
in
push
inc
aas
sub
enter
mov
inc
loopne
sahf
popl
dec
aam
cmc
or
inc
xor
ja
push
fists
cmp
pop
pop
ss
repnz
dec
cwtl
mov
insb
outsb
repnz
shl
sbb
adcl
loop
dec
pop
xchg
push
push
cmp
out
mov
mov
dec
rolb
test
jae
les
adc
lods
dec
repz
repnz
icebp
cli
rcrl
xor
popa
test
lret
xchg
mov
jb
leave
or
adc
jnp
lret
sub
mov
imulb
pop
pop
cmpsb
fiadds
fincstp
mov
out
pop
cmp
pusha
or
test
insb
inc
xchg
pop
xchg
pop
rcl
lods
ds
orb
mov
mov
add
sbb
aaa
lcall
jecxz
xchg
or
adcl
out
jb
test
test
mov
lahf
sbb
cmp
lcall
lock
movsb
cld
scas
pushf
das
lcall
or
js
pop
and
cld
mov
mov
mov
mov
pusha
sbb
push
jge
fmuls
adc
adc
cmpsl
rcl
inc
ror
data16
fstpl
sbb
leave
push
jb
jp
dec
or
or
cli
jne
test
cmp
das
shrb
sbb
arpl
enter
add
pop
aam
fdivrs
lods
dec
leave
xor
lods
add
xchg
mov
outsb
inc
sbb
lahf
jg
push
lea
ss
out
sub
push
push
xchg
xchg
leave
xchg
xor
in
das
loope
movsb
adc
mov
popa
mov
fisubl
inc
jle
scas
xor
mov
xor
repz
dec
out
hlt
and
nop
testb
call
pop
into
mov
xlat
ficoml
sbb
imul
mov
push
add
stc
xor
lcall
or
lea
or
ret
sbb
mov
daa
lahf
in
jg
ds
jae
cmp
out
lods
lea
lock
dec
in
mov
xchg
loope
cli
jo
into
jmp
lret
push
sbb
xor
mov
sarb
mov
repnz
int
cld
aas
cmc
xchg
adc
es
ror
push
les
pop
xchg
loopne
mov
sbb
mov
enter
adc
icebp
cmp
inc
pop
insb
xchg
int3
sbb
adc
divb
mov
lcall
mov
js
adc
jo
push
repnz
dec
cld
jle
sbb
pop
mov
lret
xchg
mov
lods
je
jno
gs
mov
mov
lahf
pop
icebp
rcl
and
fstpt
dec
fcomp
push
mov
add
addl
add
pop
mov
pop
int3
sub
ret
nop
add
aam
dec
aam
imul
imul
in
sbb
aam
cmc
xchg
add
call
or
enter
icebp
inc
jo
je
popa
gs
outsl
imul
sub
dec
sbb
fsub
sub
mov
sahf
xchg
push
dec
stc
ljmp
icebp
jns
idivb
mov
xchg
cs
mov
test
cmp
enter
xchg
jmp
das
xor
cmp
fstp
les
testl
iret
enter
data16
movl
int3
jb
dec
in
jb
fsubrs
mov
dec
shll
add
add
cmpsb
iret
aaa
cld
ds
outsb
dec
adc
sti
mov
add
loop
push
sub
je
adc
and
movsb
das
arpl
dec
shll
xchg
dec
cmpsl
sbb
jl
sbb
jle
add
dec
arpl
or
fstpt
test
inc
xchg
push
pop
inc
push
test
fcmovnu
pop
jbe
or
sub
push
out
sti
and
fwait
mov
add
out
pop
gs
rorl
fwait
mov
jmp
adc
popa
and
imul
inc
loopne
xchg
stos
bound
mov
cmp
sub
mov
mov
sub
popa
test
notb
mov
push
pusha
mov
into
jnp
pop
fsubr
push
mov
inc
mov
sub
mov
out
mov
jecxz
and
push
mov
adc
push
push
bound
adc
inc
jg
in
pop
pop
cmp
das
jge
std
test
add
call
push
add
xchg
dec
jns
mov
shrb
adc
popf
test
push
iret
sbb
mov
cmp
fldl
out
imul
cmp
jae
lds
xor
push
cwtl
jnp
jge
rclb
jmp
add
out
in
outsb
and
lcall
jnp
fwait
mov
call
mov
mov
sbb
xchg
dec
pop
out
mov
dec
testb
or
sub
scas
mov
pop
ja
fs
push
or
stc
adc
mov
mov
or
loope
xor
mov
pushf
cli
cmp
jecxz
push
fcompl
scas
in
lock
sbb
fsubrs
repz
ja
cmp
or
jle
repnz
inc
push
pop
jno
sahf
or
xor
pop
jmp
jg
bound
push
fimull
movsl
inc
xchg
out
cmp
fadd
sub
mov
mov
add
jle
mov
clc
mov
jne
jle
cmp
mov
push
popa
push
adc
arpl
das
push
adc
adc
pop
stc
inc
push
and
shll
divb
inc
cmpl
xchg
ja
push
lahf
dec
cli
mov
mov
aas
iret
in
mov
xchg
test
jo
jmp
sub
dec
cltd
jp
roll
xchg
fisubrs
popf
or
push
sbbl
lods
outsl
popf
add
push
adc
or
cmpsb
fisubl
cmp
adc
or
push
cld
repz
daa
jne
out
movsb
and
shll
scas
outsl
add
sar
mov
ja
mov
dec
enter
lret
lea
pop
xchg
and
add
mov
ljmp
data16
mov
mov
and
loope
jbe
mov
aaa
addl
icebp
std
nop
xor
or
outsl
jne
lock
inc
pusha
pop
add
pop
in
fists
pop
sub
or
or
jmp
movsb
lods
or
repz
dec
mov
cmp
xor
test
xchg
mov
test
or
ja
aaa
and
outsl
movsl
cs
dec
out
stos
pusha
sarb
lods
sti
addr16
cmpsl
cli
push
push
enter
jp
arpl
mov
jmp
rol
and
add
fstps
bound
dec
dec
jnp
mov
lcall
subl
negb
sahf
lret
pop
stos
arpl
dec
int3
sub
mov
arpl
repnz
xchg
iret
repz
imul
push
cmp
jae
fimull
push
je
jle
push
xchg
and
je
xchg
jnp
add
push
pop
lret
lcall
dec
inc
adc
shll
and
push
stc
jmp
lahf
fmuls
scas
mov
pop
jo
jge
stc
mov
xor
sub
pop
jo
test
dec
cmp
jmp
dec
dec
inc
jno
mov
jmp
insl
sbb
frstor
enter
push
dec
inc
hlt
mov
mov
sub
pop
xorb
loope
push
stc
rorb
loope
sbb
cmp
fxam
sub
sub
rol
fldl
fs
fldcw
lret
sti
and
push
gs
stc
aad
lret
adc
xchg
hlt
imul
xchg
mov
push
and
dec
ret
xor
dec
jno
inc
adc
test
fildll
jp
sub
cld
and
pop
add
xor
inc
loope
imul
mov
out
insl
ret
lret
sbb
push
jo
add
mov
dec
enter
arpl
add
cmp
mov
dec
mov
movsl
push
sub
fiaddl
ret
or
xchg
and
in
push
bound
hlt
rclb
xchg
sbbb
dec
rcrb
lock
cs
sub
jnp
clc
clc
pushf
mov
adc
lods
push
inc
call
pushf
sti
in
fadds
adcl
popa
mov
lods
cli
test
nop
test
dec
adc
sbb
adc
add
mov
and
mov
pusha
push
xor
out
into
adc
sarl
dec
pushf
add
cmpsl
stos
je
push
divb
push
push
in
push
jmp
aaa
sbb
mov
sub
pop
mov
dec
push
out
xor
insb
adc
push
out
cmpb
insb
mov
mov
cltd
dec
xchg
int
lret
insb
cmc
ret
xor
inc
inc
or
pop
loope
out
shrb
fadds
dec
cmp
xor
daa
das
out
int
jo
add
adc
push
push
ljmp
leave
decb
addl
xchg
adc
mov
mov
add
or
dec
push
dec
push
lret
sub
jmp
fs
and
sbb
xchg
std
lahf
jmp
leave
mov
push
jne
inc
inc
call
rcrl
leave
inc
sti
aaa
inc
mov
das
ds
xlat
stos
dec
aam
cmc
or
stos
mov
fstpt
popa
fwait
jne
std
test
cmp
nop
stos
dec
lahf
sbb
xor
jmp
bound
xchg
std
daa
fisubs
push
sbb
inc
icebp
inc
pop
or
es
loope
fstps
and
std
push
ja
loopne
jne
xchg
sub
sbb
push
ds
dec
mov
stos
xor
xchg
mov
add
cmp
js
mov
add
pop
scas
out
rclb
sti
mov
jne
dec
jmp
push
push
mov
cmp
je
pusha
sub
sub
jnp
mov
into
push
adc
movsb
ss
pop
movl
loope
pop
stc
push
lcall
sub
flds
loopne
sbb
sahf
push
jbe
out
jnp
int3
addr16
dec
mov
mov
clc
movl
jmp
xchg
arpl
bound
sub
mov
mov
rclb
icebp
mov
ljmp
test
fimull
stos
aam
mov
xor
add
mov
cmp
nop
movsb
xor
imul
adcb
arpl
sbb
cld
xchg
das
out
cmpsl
sub
call
dec
mov
dec
pop
data16
xor
insb
bound
fidivs
loop
jle
aad
nop
fistpl
dec
loopne
dec
jmp
xor
adc
aas
shl
orl
movl
pop
cmpsb
push
jbe
fsts
aaa
mov
ret
jno
mov
sbb
cwtl
mov
and
mov
fisttpl
mov
into
xchg
cwtl
fwait
arpl
xor
cltd
xor
xchg
aad
lods
adc
mov
xchg
mov
adc
sbb
push
sahf
inc
loopne
add
cwtl
insb
notl
add
decb
xor
jnp
nop
cmp
mov
xlat
mov
jne
bound
outsb
jle
xor
test
fidivrl
aam
in
aam
dec
ret
std
enter
cmpsb
xor
adc
ds
mov
fdivrs
pop
repz
sbb
sti
mov
ljmp
sbb
xor
jmp
jmp
iretw
arpl
inc
pop
jmp
push
sbb
adc
rorb
mov
mov
xchg
js
jp
or
pop
xchg
pop
enter
in
xchg
cmp
lcall
sub
aas
xchg
aad
sub
sub
dec
adc
jne
xchg
or
aam
loope
jecxz
mov
dec
scas
lret
mov
ror
lea
in
dec
in
jl
push
leave
adc
decl
fldl2e
inc
mov
push
fisttpl
sub
cli
es
mov
push
or
lret
imul
jecxz
jo
and
stos
xlat
sub
shrl
mov
repnz
in
out
fildl
int3
mov
cmc
loop
xchg
loope
orb
lahf
ds
jg
add
mov
cmpl
loopne
mov
or
pop
cmp
data16
and
mov
dec
movb
pop
mov
mov
out
xchg
lret
rcr
mov
or
outsl
mov
mov
dec
xor
ss
mov
imul
sub
inc
mov
rcrl
push
mov
inc
sub
rolb
sub
imul
repnz
xchg
notl
loope
and
mov
xchg
xchg
or
inc
push
push
ret
sub
lea
mov
gs
adc
fwait
sub
mov
mov
push
mov
mov
mov
notl
pop
sub
sub
test
data16
lea
mov
xor
pop
ss
sbb
sub
lcall
fsts
lds
flds
pop
cmpsl
mov
jne
rolb
sub
fmull
mov
sbb
icebp
mov
incl
mov
cmp
pop
pop
or
fcmovbe
leave
and
aaa
pop
arpl
push
ja
ja
xchg
sbb
jge
sbb
sti
loop
mov
or
cmp
mov
lcall
aas
mov
scas
int3
xchg
test
mov
insb
clc
xchg
xor
push
scas
pusha
rcrb
sbb
imul
mov
mov
test
cmc
or
sbb
cmpb
je
fcmovbe
sub
add
cmp
call
shrb
dec
jb
icebp
mov
loope
mov
movsb
lret
pop
dec
mov
bound
mov
push
das
fdivr
sub
loope
fcomps
cmp
push
movsb
hlt
ja
mov
adc
mov
in
sti
loopne
jb
mov
cmp
sbb
jne
popf
jp
jle
lock
lret
fistps
add
pushf
insl
pop
cmp
sbb
loope
lahf
lods
jmp
pop
cmp
je
push
sbb
push
das
ja
pop
pop
push
ljmp
mul
cmp
add
sti
push
data16
pop
inc
and
adc
adc
push
or
js
lods
out
or
fbstp
sub
enter
imul
add
sbb
hlt
addr16
and
push
in
mov
cli
sbb
fucom
mov
push
out
pop
iret
sbb
shrl
mov
mov
sbb
jp
or
fwait
insl
test
in
xor
mov
in
push
nop
dec
fs
sub
cwtd
scas
jp
pop
mov
outsl
mov
in
aaa
and
mov
push
add
fldcw
jle
lea
test
xchg
std
adc
mov
push
or
push
daa
pushf
adc
enter
insl
jns
orb
dec
jns
xor
adc
inc
jno
or
repz
sbb
fld
add
stc
cmpl
jecxz
mov
std
cmp
out
std
leave
sub
lcall
pop
xor
aam
or
roll
in
mov
cmpsl
and
sub
dec
xchg
add
ss
mov
mov
repnz
mov
outsl
dec
movsb
or
inc
push
jmp
cmpsb
lock
mov
fwait
in
iret
imul
scas
mov
xchg
and
mov
addr16
lahf
sub
push
test
je
push
sbb
fs
mov
popa
dec
dec
fisubs
fbstp
incl
add
stc
xor
push
ret
jl
aaa
in
or
insl
dec
jns
divl
add
pusha
jmp
les
sub
subb
lcall
add
jle
pushf
insb
loope
or
cld
cmp
adc
push
jb
repnz
lahf
mov
sbb
fistps
neg
repz
xchg
pop
popa
mov
daa
nop
js
adc
mov
mov
aas
sahf
clc
imul
es
in
and
ja
stos
sbb
dec
mov
call
jl
movsl
stos
loope
xchg
cld
popa
inc
int3
aas
dec
shlb
fs
out
and
xor
or
jle
mov
cmp
movsl
das
jnp
pop
das
out
xchg
push
inc
lret
dec
mov
xchg
fdivl
es
clc
dec
push
js
add
jl
fnclex
mov
fcoml
jns
dec
mov
mov
mov
fidivs
aam
xorb
insb
cmpl
mov
xchg
mov
pop
fsub
push
in
cmp
or
sub
mov
adc
test
adc
sbb
ss
scas
test
mov
mov
fcoms
pop
xchg
xor
xor
pop
dec
adc
gs
xchg
ret
push
mov
rol
je
push
stos
mov
imul
fistpll
mov
mov
mov
pop
add
roll
jmp
jbe
sub
mov
push
rorl
adc
clc
mov
sbb
or
dec
leave
jp
std
insl
pop
cmp
push
out
or
or
jecxz
inc
subb
outsb
jl
inc
outsl
inc
adc
bnd
je
jno
stos
sub
fisttpll
xor
xor
mov
pushf
rorl
mov
sbb
imul
push
pop
xor
xchg
pop
scas
int
inc
or
cmpsl
mov
rcrb
in
xor
push
push
xor
jnp
out
sbb
sar
mov
mov
lods
out
in
push
ljmp
mov
shlb
add
jecxz
xor
cmp
jecxz
push
lea
mov
int3
movsb
push
inc
mov
sub
lret
jne
pusha
or
testl
test
divl
stos
mov
es
and
icebp
xchg
or
int3
das
call
roll
and
dec
jne
loopne
mov
aas
andps
inc
cmp
inc
add
jbe
pop
sahf
into
cmc
add
dec
gs
cmp
push
stos
outsb
rcll
inc
push
dec
mov
outsl
cs
in
sarl
imul
mov
pushf
out
sbb
stos
adcl
xor
cmp
loope
mov
add
push
scas
cld
loopne
sub
push
or
loopne
popa
aas
jb
or
mov
ret
jnp
mov
mov
add
sbb
shrb
enter
mov
cld
sub
xchg
mov
orl
mov
js
bswap
sub
mov
inc
daa
leave
mov
stos
std
loop
jl
add
out
leave
mull
sbb
sub
jb
int
xor
xorb
rcrl
push
std
mov
out
and
xchg
xchg
jle
jp
jo
hlt
data16
imul
mov
jmp
stos
add
inc
push
int3
xor
dec
in
pop
addr16
imull
push
pop
sub
inc
mov
jle
inc
lahf
loop
or
test
insb
inc
xchg
and
sbb
rolb
inc
adcl
adc
insb
out
mov
jle
jl
cltd
pop
lea
fbld
lock
ljmp
push
or
nop
jo
inc
icebp
addb
push
mov
lret
not
jl
dec
fwait
icebp
jecxz
adc
sub
cmp
or
and
push
icebp
cmp
movb
pop
mov
xchg
imul
sub
cmp
mov
or
inc
test
push
imul
adcb
mov
in
or
rcrb
cld
ds
call
adc
stos
inc
sti
fdivrl
fnsave
pushf
je
mov
gs
int3
fcompl
ret
mov
flds
data16
dec
fnstsw
inc
and
inc
rolb
or
unpcklps
outsb
mov
add
mov
push
lret
bnd
jle
fisubrs
inc
int
loop
or
andl
dec
inc
jecxz
cmpsb
test
sarb
int
cmp
jb
jge
pop
test
rcll
aaa
in
or
dec
dec
call
aad
cmp
adc
xlat
cmp
int
xchg
aaa
scas
out
nop
dec
insb
fwait
sub
cmpsl
jns
jnp
lods
iret
xor
jp
add
or
mov
fs
loop
pop
popf
xor
mov
leave
je
jb
std
mov
and
sbb
jge
out
imul
pop
xchg
leave
adc
push
test
xor
sbb
dec
push
test
pop
call
sbb
repz
adc
pop
cmp
out
jp
dec
push
stos
xchg
subl
subl
mov
test
jge
mov
jns
orl
aas
loop
rcll
jge
adcl
sub
arpl
arpl
cmp
in
cmp
mov
mov
test
rcll
push
icebp
pop
mov
mov
push
or
xor
or
nop
popa
or
push
test
fnsave
jl
mov
mov
xor
insb
std
add
sbb
pop
mov
mov
mov
outsb
fcoml
cmp
shll
and
push
sahf
push
push
xchg
xchg
dec
repz
les
inc
in
jmp
sbb
stc
push
lea
fsts
ret
dec
push
jo
js
and
in
int
cmpsl
dec
lds
adc
inc
imul
xchg
stos
jno
cmp
sti
pop
pop
iret
jecxz
inc
xor
lret
and
xchg
cmp
mov
pushl
mov
add
jo
xor
mov
dec
xorl
xor
and
fmul
jnp
stos
cmp
sub
incb
and
cs
or
or
jnp
cmpl
dec
test
and
push
cmp
xchg
push
mov
jecxz
negl
jbe
dec
pop
lret
sbb
pop
adc
lock
cmp
cmp
push
dec
int
push
fstp
mov
mov
dec
push
mov
sbb
scas
in
jp
inc
dec
addl
movsl
adc
test
push
out
iret
movsl
js
es
jle
cmp
mov
mov
adc
mov
ds
jl
ret
sub
es
loope
push
dec
mov
test
adc
pop
sahf
sbb
in
stc
inc
test
sub
lock
loope
cmp
jno
int3
xchg
call
testl
sbb
and
mov
cltd
hlt
in
mov
sbb
push
daa
stos
daa
sbb
or
cmpsb
mov
xor
push
in
rcll
sbb
dec
insl
xchg
jg
scas
test
jo
inc
repnz
test
xchg
mov
orl
imul
dec
push
mov
mov
cmp
inc
or
es
loop
xor
pop
add
lret
fcomip
sub
push
adc
add
pop
mov
cmp
pop
xor
pop
mov
addr16
mov
mov
or
dec
clc
aaa
sub
shrb
xor
cmpsl
xor
mov
inc
dec
xor
imul
adc
out
push
loope
ss
ja
inc
pop
lret
adc
pop
repz
xchg
push
outsl
pop
aas
psadbw
cmp
rcrb
add
aas
in
pop
in
pusha
aaa
mov
xor
test
fucompp
mov
ds
sbb
ror
std
jecxz
add
push
sahf
pop
pop
pop
inc
popa
cld
aad
bound
xchg
push
test
mov
and
ret
fidivs
mov
pop
adc
push
sbb
jg
aad
jg
pop
fsubs
push
lea
xchg
aaa
xchg
movsl
divb
xchg
mov
inc
jo
mov
and
test
xor
sbb
xor
dec
push
or
jae
addb
or
sbb
int
fsubl
fwait
push
mov
mov
pop
fcompl
test
fsubs
test
and
jns
fwait
cli
mov
add
pop
daa
shrl
lods
mov
aas
call
mov
xchg
sub
dec
xchg
test
rcl
ljmp
aaa
mov
and
out
sbb
mov
faddl
les
pop
cmp
cmpsb
sbb
out
cltd
xor
lahf
inc
xlat
xor
scas
adc
push
mov
fwait
lret
out
adcb
jno
jbe
repz
jg
andb
pop
sub
dec
xchg
aaa
push
out
movsb
add
call
and
ja
inc
aas
popf
rcll
ret
adc
pop
test
push
pop
jle
sub
movsb
lcall
jmp
inc
jp
mov
push
pop
lea
adc
add
sub
push
cmpsl
ss
cmpsl
and
popa
popf
push
push
and
std
stos
xlat
sbb
pop
and
add
dec
int
push
add
ds
xor
lock
pop
jecxz
sbbb
nop
inc
and
sbb
mov
xchg
notb
pop
add
pop
xlat
in
sbb
lock
mov
xor
in
addr16
ja
jnp
cmp
jecxz
jg
mov
jecxz
inc
andb
xor
or
sti
or
pop
xchg
xor
movsb
ja
jns
cmp
int3
sarl
push
popf
push
addb
sbb
mov
out
fldcw
push
sar
lods
jge
lahf
mov
rcr
dec
or
inc
push
push
movl
adc
imul
push
fiaddl
mov
sbb
push
mov
sti
cmpb
push
ret
fwait
and
mov
xor
fldl
jl
cmp
lret
enter
xchg
popl
adc
dec
pop
inc
subb
pop
jg
imul
xchg
push
push
sahf
dec
mov
test
out
pusha
int
and
pop
leave
lcall
ljmp
jl
outsb
testb
lcall
fcomip
icebp
mov
data16
daa
orb
call
xchg
pop
cs
mov
or
lahf
jns
pushl
push
in
out
test
pusha
mov
add
lock
add
or
inc
mov
int
ret
push
test
and
pusha
add
fcmovnu
les
xchg
pop
mov
movsl
in
push
xor
push
cmp
ficoms
hlt
scas
sub
xor
mov
adc
call
dec
dec
cmp
and
sub
jp
aaa
gs
test
push
orb
je
fnstsw
push
pop
shr
test
jmp
lahf
dec
xchg
ds
ficomps
js
mov
or
repz
add
addr16
cltd
sbb
xchg
mov
loop
insb
push
test
xchg
mov
mov
sub
lea
into
pop
lret
iret
lret
pop
cmpsb
mov
je
cs
ret
clc
push
mov
testb
pop
jp
mov
adc
mov
fcoms
mov
call
sarb
test
adc
dec
dec
push
push
sub
stc
push
sub
frstor
pop
sbb
jle
rcrb
jecxz
aam
cli
and
repz
cld
out
sbb
fildl
jne
jecxz
push
scas
jae
loopne
mov
and
push
imul
sub
jb
sub
stc
mov
rolb
pop
dec
jbe
push
push
jne
mov
dec
lds
inc
jp
inc
or
jo
push
xchg
inc
mov
sbb
xorl
cs
lea
mov
dec
mov
pop
ja
sub
mov
jb
and
sub
addr16
sub
dec
rorb
or
adc
sub
stos
imul
fs
cmc
xor
jp
in
cmp
scas
aad
sub
mov
js
sub
mov
push
andl
insl
mov
iret
cli
dec
xor
push
jmp
mov
loope
inc
xor
pop
call
mov
jp
mov
out
lds
idivl
and
dec
in
insl
outsl
shrb
jnp
push
lods
dec
lds
mov
call
das
inc
jp
push
pusha
loope
pop
repnz
repnz
cmp
dec
sbb
js
test
test
mov
pop
jns
sub
mov
and
and
pop
inc
sbb
inc
mov
sbb
mov
jbe
xchg
stos
jae
push
dec
arpl
push
sub
pop
lret
sbb
mov
jp
stos
sub
cmc
popf
mov
outsb
stos
ja
xchg
fwait
out
sarl
int3
movl
das
push
mov
pop
js
pop
push
inc
inc
mov
mov
fiaddl
adc
mov
push
push
imul
xor
insl
xchg
repz
push
xchg
sbb
rcr
in
fimull
xchg
lock
cs
mov
cmp
mov
fldenv
je
sbb
ret
bound
dec
sbb
sbb
cld
lds
add
out
jbe
jns
out
pop
inc
inc
or
out
fndisi(8087
mov
push
cmp
mov
pop
adc
fistpll
jecxz
push
push
notl
movsb
or
out
cmpsb
cmp
mov
jmp
jne
fwait
daa
in
addl
pop
fimuls
mov
jp
adc
mov
loop
cmpsb
jbe
xchg
inc
dec
xchg
into
mov
stc
test
jbe
inc
sub
xchg
sub
fcoms
les
xchg
insl
sbb
add
jne,pn
xor
mov
cwtl
in
in
stos
mov
bound
mov
fdivl
jle
sub
dec
lahf
xchg
cli
adc
pushf
cmpb
and
sahf
mov
pop
cs
mov
jb
push
xor
fucomp
mov
push
sbb
sti
test
ret
mov
mov
jle
clc
mov
push
and
fisubs
push
cmp
jge
filds
std
sub
pop
cltd
fsts
xor
pop
in
clc
lsl
mov
dec
inc
dec
mov
xor
adc
sub
dec
jp
add
daa
lea
xchg
pop
or
mov
dec
inc
pop
out
sbb
cmp
xor
lea
jecxz
pop
adc
int
cmp
jge
imul
push
aaa
rol
add
rorl
ljmp
and
xchg
out
push
mov
imul
ret
into
push
aas
sbb
add
ficoms
movsb
mov
jns
jp
cmpsl
add
test
adc
aas
jns
pop
int3
ss
stos
pop
add
mov
jp
jb
fs
mov
mov
push
loope
outsl
ja
fwait
pop
in
jl
nop
imul
pop
lcall
mov
repz
mov
sub
in
mov
xor
insb
inc
add
pusha
test
sti
xchg
imulb
je
rclb
lea
ficoml
dec
and
adc
pop
xchg
cmp
mov
insl
enter
adc
das
daa
xchg
jns
je
into
movsl
fisubrs
or
jge
leave
add
or
pop
lcall
jo
outsl
jb
repnz
fldt
fsubr
add
cltd
bound
nop
push
in
rcrb
repnz
or
dec
movsl
pusha
inc
insb
dec
jne
pop
mov
imul
in
sbb
stos
les
rcr
dec
or
clc
popf
fildll
add
daa
mov
es
mov
stc
popf
xlat
pop
add
rcrb
stos
pop
std
mov
xor
jl
mov
sahf
daa
pop
shrb
imul
inc
test
sub
lods
push
or
cs
xchg
call
insl
dec
and
xchg
inc
mov
aaa
rorb
sub
repnz
andb
ret
cmp
sarl
aam
inc
sbb
add
and
or
and
push
lret
out
subb
dec
jmp
dec
imul
push
shl
sbb
jns
arpl
inc
dec
repnz
cltd
jae
mov
mov
jae
sub
in
fstl
inc
loopne
xchg
add
mov
cmp
push
xor
imul
lahf
pop
cmp
push
jb
mov
adc
rolb
or
ss
pop
pop
jg
js
pop
rorb
in
or
dec
dec
adc
lds
ss
and
mov
mov
mov
movaps
fnstsw
sub
xchg
xlat
faddp
add
dec
jle
or
lods
enter
imulb
jns
in
jb,pt
mov
insl
jg
cmp
push
loope
incl
scas
outsb
mov
add
shl
sbbl
mov
mov
push
loopne
stos
inc
es
dec
jl
scas
outsb
pop
fwait
mov
mov
dec
rcl
or
add
xor
jp
push
ja
incb
out
mov
ljmp
add
gs
inc
out
add
sub
and
cmp
cmp
sti
cltd
dec
orb
cmp
mov
je
mov
push
mov
xchg
pop
push
rclb
sbb
hlt
or
imul
loop
nop
loope
mov
out
inc
cmp
push
adc
rorb
add
adc
dec
add
add
push
pop
ljmp
stos
rorb
outsl
lock
popa
cmp
jp
mov
mov
and
lcall
js
adc
and
das
ret
cmpsl
cmc
mov
dec
cmp
fisubrl
cmc
out
mov
movsb
jmp
test
lret
cwtl
mov
pop
mov
xor
aad
test
dec
sahf
gs
test
insl
in
mov
getsec
jns
idivb
or
xchg
xchg
or
push
pop
inc
cltd
insl
xchg
xchg
inc
dec
mov
mov
or
lahf
mov
add
scas
mov
push
sbb
xchg
sti
pop
xchg
and
mov
dec
stos
and
ss
and
mov
xchg
push
pop
add
adc
sbb
sub
xor
jecxz
push
mov
cmp
inc
ds
in
cmp
add
and
lods
loop
movsb
or
cmp
sub
movsb
push
jno
mov
movsl
arpl
jb
mov
aad
and
test
in
cli
hlt
or
scas
das
lods
into
pop
jne
fmull
in
mov
jbe
into
scas
cmc
xor
idiv
lods
and
ret
push
rcrl
mull
xor
mov
jp
lcall
adc
mov
aas
insb
mov
sub
andl
and
mov
je
popf
mov
xor
movb
jle
mov
hlt
mov
in
test
fdivl
popf
mov
movsb
pusha
adcl
in
mov
jo
andb
mov
int
or
les
jbe
hlt
xchg
and
xchg
mov
pop
push
jmp
mov
lods
push
out
mov
adc
dec
roll
mov
int
or
pusha
mov
mov
jno
call
mov
pop
imul
mov
add
sarb
dec
and
ljmp
pop
bound
xchg
inc
jl
add
ss
pop
pop
pusha
popf
roll
add
in
sbb
mov
push
pusha
imulb
mov
xchg
xor
aaa
xchg
push
sub
ret
test
mov
lcall
inc
aad
mov
leave
lret
push
xchg
clc
in
sub
repnz
mov
clc
hlt
xlat
test
movsb
sub
xchg
ds
test
and
mov
fstpt
xor
and
xchg
icebp
dec
andl
insb
push
enter
movsl
jbe
sbb
xchg
push
jg
divb
push
loop
movsb
mov
or
outsl
sahf
stc
mov
pop
or
ror
jae
xor
pusha
stc
pop
lds
add
int
sub
sbb
in
pushf
pop
subb
pop
adc
test
mov
ret
lret
js
sbb
cs
pop
out
sbb
popa
mov
stc
sti
dec
int3
ror
mov
cmp
push
adc
cs
fwait
int3
mov
or
subl
iret
test
addr16
rcrb
hlt
ss
in
xor
sub
sub
push
cmp
adc
cmp
fucomip
jl
scas
pop
pop
addl
cmp
sbb
push
sbb
fdivrs
lahf
movsb
pop
mov
mov
pop
fwait
pushf
ss
or
es
popa
in
inc
stc
cmp
idivb
es
in
jle
ret
pop
xchg
and
mov
movsl
adc
aas
lds
cmpsl
or
into
insb
xor
shl
adc
push
ds
dec
push
xchg
or
pop
pop
sub
stc
cmpsb
repnz
mov
int3
jle
or
enter
cmp
cmp
xchg
adc
mov
push
mov
rcr
fistl
mov
mov
pop
pop
and
jmp
lock
mov
mov
ds
jbe
rcll
pop
mov
aas
call
inc
std
test
lock
pop
mov
stos
cmp
xor
mov
adc
xor
sbb
jbe
mov
mov
shrl
mov
call
adc
xchg
stc
mov
lret
pop
shrl
rcrb
scas
cmp
lahf
aad
or
pop
jb
adc
pushl
fnstenv
dec
xchg
scas
jno
sahf
dec
aad
cmpl
outsb
push
ret
leave
pop
pop
xlat
popf
cmp
add
pusha
cmp
xor
sub
push
xchg
push
js
adc
xchg
cs
jle
insb
sti
mov
movsl
stc
in
add
sub
jo
xchg
jmp
sub
or
push
or
fptan
xor
aam
or
je
cmp
or
pushf
lock
arpl
push
std
mov
sbb
dec
pop
dec
mov
enter
test
cltd
or
repz
arpl
ljmp
add
or
cs
jle
adc
sub
push
jno
inc
cltd
mov
pop
jp
jbe
pusha
mov
sub
lds
mov
sti
xchg
dec
or
imul
cmpsl
inc
jp
sbb
movsb
jne
xor
imull
xor
loop
push
clc
cmpsb
mov
cmc
xor
aam
inc
and
decl
movsl
lret
ret
mov
call
data16
cmc
sub
mov
stos
push
out
xcrypt-ctr
cmpsl
cwtl
insb
in
inc
js
inc
pop
aad
mov
or
add
jecxz
fucomip
stos
or
aad
mov
jge
aam
jmp
in
fbstp
jnp
mov
shlb
mov
into
xchg
xor
aas
dec
insb
insb
cmp
pusha
mov
out
push
cmpsb
std
push
jl
jp
fmull
gs
incb
jbe
testb
xchg
push
add
cmp
xchg
mov
and
jo
pop
mov
aaa
insl
lods
sub
or
inc
jl
stos
sub
pop
ja
dec
loope
add
pop
push
pop
movsl
pusha
add
push
sbb
mov
sti
shlb
iret
in
pop
sbb
stos
add
and
jp
icebp
insb
movsl
data16
push
mov
adc
push
cmpsl
paddusw
shll
flds
hlt
addr16
jbe
push
pop
es
inc
jbe
pop
mov
cmpsl
cmc
negb
enter
scas
sbb
loope
sub
jbe
fwait
lret
jge
pusha
mov
stc
aam
cs
cmp
push
push
push
push
pop
mov
push
add
sbb
rolb
push
sub
shl
in
fdivr
pushf
dec
cmp
adc
mov
cmp
push
je
sbb
mov
and
std
mov
adc
add
je
lods
and
xor
sub
dec
adc
dec
ja
cmc
iret
popa
fldcw
out
movsb
ds
xor
mov
arpl
ret
xchg
in
jno
out
adc
mov
xor
add
je
js
jne
es
cmpb
sbb
movsb
inc
in
arpl
mov
jb
push
pushf
cmp
dec
dec
cmpsl
adc
stos
lret
or
jbe
sbb
nop
sarb
lret
mov
nop
xor
outsb
stos
nop
sbb
adc
rcl
rorb
sub
mov
mov
or
pop
inc
dec
movsb
test
lods
scas
mov
or
repnz
stos
pop
pop
xor
jae
inc
cmpl
gs
adcl
out
push
mov
into
ljmp
cmp
mov
pop
add
je
outsb
cli
jbe
add
xchg
mov
push
cmp
xor
call
xor
pop
gs
pushf
push
loop
lahf
rorl
es
sbb
rorb
mov
fsub
ss
dec
rolb
and
jno
inc
pusha
movl
lods
out
jbe
insb
je
aad
mov
aaa
and
loope
dec
mov
or
mov
call
cld
popa
test
pop
fstl
aad
lea
stos
push
sub
addb
or
shr
jb
lds
mov
lods
mov
sbb
or
stos
or
jo
jo
hlt
xchg
mov
or
and
test
adc
fstpl
leave
pop
cld
push
sbb
in
mov
lahf
insl
xor
sub
out
jb
pop
add
xorl
stos
sbb
adc
notb
push
mov
dec
es
dec
out
mov
mov
repnz
sbb
xchg
pop
mov
imul
aaa
out
jge
mov
adc
fwait
shl
and
inc
dec
movsb
fbld
jno
and
in
scas
daa
push
dec
push
test
lds
or
dec
in
and
sbb
sub
jecxz
or
pop
bound
pop
fs
cmp
lods
dec
addr16
fcmove
loope
test
xchg
rcrl
mov
xchg
push
daa
sub
and
lock
xlat
mov
xor
repz
mov
fldcw
fs
inc
fidivrs
ret
inc
push
dec
aas
xor
fs
scas
fsubrs
cld
dec
pop
cmp
adc
xor
aaa
or
in
in
fcmovne
std
cmp
pop
push
fisubs
shrl
sbbl
test
pop
pusha
pop
add
xor
jp
icebp
and
int
ret
cmp
shll
int3
ret
out
mov
lret
and
bound
sub
mov
xchg
xor
mov
popa
mov
inc
cltd
cli
mov
jle
cmpsl
popf
pop
and
push
xor
fldl
jno
cmp
in
sub
push
xchg
std
pop
daa
lock
imul
mov
pusha
add
sbb
jne
cmpsb
insb
movsb
push
and
cltd
sarb
jb
sbb
dec
mov
rol
jp
sarb
cmpsb
loopne
sub
cli
aas
call
push
push
out
pop
ret
dec
cmp
fldenv
or
cmp
push
outsb
and
jne
ds
push
mov
xor
out
pusha
cmc
les
fadd
sbb
pop
mov
lods
in
fisttpl
movsl
xor
ficomps
jmp
fs
loop
sbb
adc
nop
inc
push
inc
jl
push
ret
push
jle
push
data16
or
xor
add
jge
inc
xlat
in
xchg
hlt
test
sbb
arpl
fiaddl
call
push
push
arpl
add
sbbb
mov
cmp
mov
das
cmc
xor
and
test
pop
shl
ljmp
push
sarl
cmp
jmp
push
pop
pop
rclb
mov
sub
xchg
mov
daa
addr16
test
and
in
cmpsb
pop
test
push
xlat
push
jge
xchg
popf
movsl
xchg
imul
mov
xchg
shrl
pop
into
shl
add
xchg
sbb
les
dec
ror
inc
nop
dec
sub
mov
mov
sahf
les
xorb
fwait
in
push
js
js
jge
insl
pop
test
xorb
mov
xor
push
add
out
jp
dec
xchg
dec
sete
stc
leave
in
imul
in
mov
stc
movsb
sub
adc
idivl
cwtl
add
mov
lods
jns
aaa
out
cmpsb
stos
popa
cmp
gs
jle
sbb
pop
movsb
add
pop
fdiv
pusha
jnp
pusha
rol
and
mov
in
daa
pop
push
outsl
fsub
repz
cmp
incl
sarb
and
xor
fiaddl
mov
mov
aam
inc
push
push
sub
mov
jp
gs
data16
dec
mov
imul
mov
je
xchg
subl
or
rolb
fldcw
push
ljmp
or
imul
push
mov
ret
sbb
mov
inc
xchg
and
mov
or
arpl
orb
sbb
fildl
sub
jo
dec
test
xor
mov
call
shlb
push
dec
sbb
mov
jecxz
test
xor
inc
pop
xchg
inc
mov
push
popf
sub
sbb
ret
xor
adc
xchg
mov
or
sub
cli
push
std
push
push
out
and
leave
sub
and
push
sub
stos
xchg
mov
out
inc
sti
roll
pop
addr16
mov
pop
test
xor
cmpsb
add
add
jge
pop
and
jns
pushf
push
xchg
ja
addr16
add
scas
mov
xchg
sub
sbb
sbb
and
add
stos
jl
sbb
daa
fcmove
loopne
push
jbe
push
pusha
mov
loope
lahf
lret
jp
mov
inc
rorb
jg
sahf
jl
jge
insb
fwait
insb
jp
jp
jg
sbb
lcall
fldcw
or
or
push
jecxz
mov
cmc
dec
shl
incl
sar
xor
nop
ja
or
mov
testb
loope
xchg
and
in
imul
out
cmpsl
dec
js
jnp
adc
jmp
jae
es
shll
sti
mov
cmp
dec
fsubrl
sbb
jne
movsl
fs
sbb
int3
cld
inc
push
mov
aaa
in
lea
xor
mov
ret
cmp
push
sub
jne
lods
ljmp
jmp
mov
shrb
and
in
sbb
add
dec
int3
int
jmp
mov
pop
sahf
pop
dec
loop
js
inc
push
inc
sub
mov
test
in
invd
leave
movq
jbe
mov
mov
scas
in
cld
mov
add
in
xchg
jne
jle
je
jecxz
adc
mov
dec
arpl
ror
repz
hlt
sbb
xchg
fstl
cmp
xlat
jae
shrb
mov
stos
mov
mov
jecxz
shrl
in
fdivrs
ljmp
out
mov
hlt
loopne
mov
xor
out
fidivs
jnp
jbe
fmuls
ficomps
aad
and
andb
jge
pushf
sub
xlat
adc
cmp
cltd
fwait
dec
jo
outsl
mov
jmp
inc
mov
inc
test
movsw
fmuls
sahf
cltd
push
sbb
push
jg
cld
xor
pushf
pop
inc
ja
add
pop
test
leave
out
xchg
popf
jecxz
dec
xor
and
sub
sbb
imul
mov
jmp
xor
les
leave
xchg
lods
xlat
arpl
ret
xchg
mov
cmp
mov
outsl
dec
sub
or
xlat
dec
daa
xor
add
xchg
xorl
rorb
mov
loope
ljmp
push
outsl
push
and
shlb
sahf
lahf
pop
into
or
mov
mov
xlat
lods
lods
mov
xor
mov
mov
data16
insb
mov
push
insl
jle
xor
ss
inc
adc
into
sahf
cmp
push
aas
mov
fsubrl
ds
and
fcomps
inc
loop
out
jg
repz
stos
mov
pop
adcb
push
cmp
int
rcrb
pop
ljmp
popl
push
js
sti
lret
jne
shll
mov
push
inc
movsl
dec
jno
fucom
fdivl
shll
mov
jge
insl
mov
xorb
jne
push
sti
mov
jns
and
cltd
adc
imul
cld
imul
fistpll
push
jnp
lret
xlat
js
pop
mov
mov
sub
or
cmpb
pop
xchg
pusha
sbb
sbb
jne
sahf
or
aas
mov
cmpsb
stc
repnz
insb
ret
imul
push
mov
pop
sub
addr16
push
imul
hlt
and
xchg
nop
cmp
rol
dec
cltd
jl
fistl
test
sub
sub
dec
into
test
jecxz
push
scas
daa
fcoms
push
arpl
jbe
sbb
stc
orb
imul
dec
cltd
call
into
js
pop
jno
push
aad
jge
repz
jmp
fidivrl
push
sahf
xchg
dec
xor
sarb
and
cmp
mov
or
lea
add
fidivl
dec
jno
xor
cltd
or
sub
imul
xchg
cmpsl
inc
repz
popl
xchg
inc
add
outsl
aam
and
push
jno
or
out
mov
scas
mov
push
fstps
pop
mov
xchg
push
jge
inc
loope
or
dec
loope
aam
in
jle
loope
clc
adc
idiv
ret
xchg
in
and
add
insb
out
mov
jp
test
movsb
jle
fildll
bound
sar
int
stc
mov
sbb
jns
insb
and
rcll
xchg
and
pushf
rcr
out
cmp
add
mov
sub
push
xchg
inc
mov
jno
addl
dec
hlt
jecxz
mov
or
mov
add
addr16
jb
jp
es
ja
or
and
insl
or
push
push
sbb
loope
cmp
add
jno
daa
cmp
xor
pop
push
hlt
fwait
pop
push
mov
or
push
adc
iret
in
movsl
sbb
out
lock
shrb
push
jge
or
adc
dec
cmc
dec
adc
pop
inc
enter
ret
sub
pop
mov
shll
push
adcl
lock
inc
shlb
sbb
addr16
icebp
dec
mov
arpl
add
sbb
test
cmp
repz
adc
enter
jge
stos
sti
mov
imul
jbe
mov
cltd
pop
enter
mov
dec
mov
popa
popf
dec
jbe
mov
sahf
scas
push
jb
cmpsb
pop
test
in
jnp
out
mov
ret
jle
inc
iret
popf
ret
pop
rcrl
and
enter
mov
mov
dec
out
xchg
or
fmul
inc
out
fnstcw
enter
outsl
fsubrs
push
inc
sub
mov
rcl
sub
je
jb
movsl
push
jle
es
mov
popf
jno
mov
sarl
fmull
in
adc
fstpt
pop
add
add
sbb
or
lds
fmuls
sbb
lea
leave
enter
push
loop
or
cmp
add
adc
xor
pop
add
push
and
pusha
insl
xlat
push
mov
fisubl
icebp
insl
mov
mov
mov
loope
xchg
dec
jb
inc
and
lcall
mov
out
mov
xchg
sar
mov
or
dec
jbe
nop
cltd
cmp
gs
cmp
sub
push
lock
xor
out
mov
dec
adc
aas
mov
pushf
pop
jmp
push
mov
mov
rorl
js
call
xchg
dec
daa
sub
sbb
push
fwait
cmp
out
lods
in
or
hlt
push
loope
pop
arpl
lahf
dec
push
push
movsl
adc
lfs
inc
sar
in
adc
out
xchg
scas
cmp
sub
dec
adc
dec
push
cmp
and
mov
mov
pushf
jecxz
fisttpl
sub
das
dec
push
add
and
jo
insb
pop
adc
mov
dec
jbe
ss
mov
mov
out
test
ja
loop
filds
xsaves
std
dec
scas
jne
jb
pop
mov
xchg
jge
cmp
negl
or
icebp
jg
xor
inc
dec
sbb
or
lahf
mov
sub
popf
pop
xchg
pop
das
stos
jmp
sbbl
cmp
inc
push
push
sbb
aam
leave
push
iret
adc
mov
cmp
mov
mov
out
test
jl
cmpsb
sar
cmpsl
iret
data16
aam
cmp
or
pusha
xor
mov
ljmp
addl
lret
cmp
mov
aas
jbe
test
add
ljmp
mov
ljmp
hlt
push
push
and
jno
and
mov
adc
sub
imul
mov
inc
sub
filds
pop
rol
imul
ss
xlat
dec
and
jnp
mov
data16
ds
fistps
lret
sbb
fldcw
dec
jb
mov
pop
ret
add
in
xchg
inc
mov
arpl
pushf
fidivl
popa
enter
jmp
loopne
aam
fnstenv
mov
jno
inc
sbb
ja
push
push
test
inc
push
scas
pop
lcall
lcall
test
pop
and
subb
push
pop
cs
adc
or
out
jecxz
out
lahf
and
push
mov
pop
lret
int3
bound
in
xor
sub
call
or
push
inc
enter
adc
pop
lds
test
push
and
jnp
in
adc
xor
bound
dec
sbb
aam
aam
mov
add
inc
shll
outsb
out
loop
pop
out
add
mov
enter
adc
movsl
sub
mov
fcomp
fwait
aas
xor
cmp
fcomps
jno,pn
fucomp
jae
mov
std
mov
dec
jae
test
fs
cmc
or
add
pop
fbld
sub
hlt
leave
inc
and
into
daa
lock
sub
jle
movsb
ret
adc
adc
or
push
popa
xchg
lret
test
add
inc
dec
sahf
push
shl
idivb
cmp
aaa
pop
aad
jae
push
rolb
sbb
jle
aad
jbe
inc
jmp
ja
xchg
ret
sub
mov
aas
in
mov
push
push
jmp
push
sbb
std
dec
add
jb
jne
loopne
add
out
jnp
and
and
or
add
jecxz
andl
out
lret
icebp
add
sahf
cmp
mov
jno
inc
lcall
inc
repnz
push
lods
mov
je
das
out
dec
add
and
insl
lcall
push
pop
xchg
jbe
sbb
sub
loop
jne
cmp
sub
or
cmp
lods
xchg
sbb
cmpsl
outsb
sub
fcomps
lret
adc
jbe
inc
outsl
rolb
rcll
daa
filds
cli
jnp
mov
push
out
mov
jp
xor
out
outsl
sub
mov
fcomps
xor
pop
das
rorb
push
mov
shll
cmp
push
dec
add
sub
fistpl
or
in
sbb
or
pop
xchg
xchg
inc
dec
xor
xor
inc
shl
test
or
clc
popa
mov
andb
sub
in
lds
push
sbb
sub
loopne
add
xchg
negb
add
enter
nop
sbb
push
xor
test
mov
pop
mov
xor
fsubrs
dec
sub
pop
sbb
or
xor
sbb
sub
jo
mov
stos
and
push
pop
into
rcll
inc
mov
repnz
mov
xchg
call
decl
dec
inc
ja
mov
push
shll
inc
xchg
mov
jo
rcrl
xchg
insb
xchg
out
adc
je
pop
fldt
test
cli
pop
out
sbb
jg
sar
sti
clc
repz
push
and
xor
in
sbb
repnz
iret
into
push
daa
inc
sbb
push
loope
mov
inc
out
xlat
pop
clc
jae
jns
sbbl
dec
fnsave
push
mov
adc
iret
inc
inc
xlat
cltd
xchg
aas
adc
stos
xchg
mov
iret
jns
cmpb
insl
data16
ficomps
add
push
arpl
sbb
aas
jbe
andb
sub
scas
push
orb
icebp
push
fdivrl
loopne
out
mov
jle
push
imul
sub
mov
and
lods
push
nop
movsb
outsb
bound
push
cmp
outsl
loop
inc
les
jg
mov
jg
nop
ret
nop
fcompl
sub
cmp
je
mov
dec
mov
and
les
dec
repnz
mov
mov
xchg
pop
pop
lret
lea
fmulp
adc
xor
sub
pop
dec
xchg
jo
sub
mov
rol
jo
adc
or
mov
pop
iret
cwtl
in
aas
subb
lods
rcrb
mov
mov
clc
and
xchg
push
xchg
or
sbb
shl
jge
divb
pusha
lock
stos
xchg
dec
sbb
and
fildll
mov
cmp
jge
xchg
cmp
hlt
jnp
int3
jno
aaa
mov
cld
leave
das
icebp
in
mov
in
mov
lret
addb
data16
out
lret
inc
ja
mov
or
mov
out
sbb
push
in
adc
outsb
pop
pop
jg
ret
and
ss
mov
sbb
jno
mov
into
xchg
inc
into
shlb
mov
jb
call
test
stos
or
test
xchg
push
inc
dec
loopne,pt
inc
test
jne
cli
jno
repz
rcrb
mov
pop
lea
jp
and
sub
pop
call
mov
mov
push
lret
cmc
push
jmp
inc
punpckldq
out
pop
clc
lahf
in
sbb
lods
mov
pop
xchg
icebp
ss
cwtl
add
pop
mov
fs
movsl
dec
inc
mov
adc
out
xchg
mov
inc
and
mov
dec
adc
test
arpl
std
test
mov
mov
xchg
adc
jnp
fdiv
into
push
dec
mov
add
push
mov
loop
filds
lahf
mov
ds
pop
jmp
repnz
lea
mov
adc
or
dec
neg
xor
xchg
mov
call
fbstp
dec
inc
mov
pushf
cmpsl
push
nop
xor
outsb
mov
or
nop
xor
jge
and
lret
dec
lret
add
mov
jo
push
jg
add
orb
xchg
adc
movsl
mov
ss
fisubrs
jmp
ss
cld
xchg
call
push
aad
lret
inc
mov
mov
int3
cmc
mov
repnz
je
mov
imul
adcl
pop
lret
push
and
push
mov
xchg
dec
js
fdivrs
scas
aaa
ljmp
jne
mov
in
es
add
xor
push
mov
or
sbb
sysenter
outsl
ret
je
push
push
test
mov
jp
jmp
test
shrb
push
sahf
das
mov
inc
mov
mov
dec
dec
add
gs
adc
dec
push
aaa
inc
cmc
in
scas
mov
xor
or
repnz
bound
dec
notl
mov
jbe
testl
ret
cmp
mov
dec
or
into
add
imul
int
push
adc
pop
into
push
inc
jmp
popf
mov
jmp
xchg
lds
mov
cmp
aas
adc
lret
rorl
fucomp
andb
pop
xchg
das
loopne
mov
mov
or
jmp
insb
dec
int3
test
or
pop
xor
ss
inc
xchg
or
dec
gs
in
adc
clc
push
sbb
pop
arpl
xchg
out
testl
stos
les
lods
movsb
sbb
sarb
push
jno
xchg
mov
and
sbb
test
mov
out
pushl
pop
shrl
in
sub
or
fwait
insl
jb
sbb
pop
xor
push
or
pop
jb
loope
andb
and
dec
sub
xchg
cld
add
ds
scas
add
inc
rcr
test
jmp
cmp
xor
clc
and
stc
and
cwtl
adc
addr16
xchg
fcmovnb
lcall
out
mov
pusha
daa
add
adc
mov
mov
es
or
es
sbb
aaa
leave
pop
aaa
arpl
jge
jbe
pop
aaa
frstor
in
cmpsb
sbb
xor
jo
sub
loope
lcall
adc
push
hlt
xor
or
insb
es
push
push
sbb
mov
sbbl
dec
xchg
lcall
adc
add
mov
iret
mov
mov
daa
jg
in
ret
jae
mov
mov
adc
cs
jae
test
mov
push
sbb
shll
add
sub
jae
jb
jmp
repz
dec
test
stos
out
add
fisubs
jo
dec
stos
pop
dec
fwait
mov
lret
sti
shll
cmpsl
adc
sahf
mov
fwait
inc
fidivrs
pop
daa
testb
enter
les
sub
movsb
xor
inc
addr16
inc
lea
movsl
repnz
xchg
xor
mov
loope
bound
dec
adc
rcl
imul
pop
or
push
mov
movsb
lret
aaa
rorb
iret
in
xchg
mov
das
aad
jo
cmp
cmpb
mov
dec
ss
lea
enter
fistl
popf
push
add
imul
aad
aaa
or
shll
mov
repnz
mov
lods
mov
pop
sub
sub
sarb
pop
pop
ret
outsb
ds
jge
push
jae
lods
push
je
xor
fiaddl
or
cmp
test
or
dec
add
xor
aad
mov
mov
test
push
dec
std
xchg
and
xchg
in
xchg
mov
mov
int3
push
xor
imul
or
or
lahf
add
sub
xchg
dec
jmp
fsubs
ret
xchg
sbb
aaa
lds
xor
xor
repnz
cli
jno
sub
scas
jg
lcall
xor
call
mov
xchg
test
sbb
pop
lds
xchg
and
add
ja
sahf
cmp
jno
or
les
xor
movsb
test
mov
push
idivl
add
lock
adc
adc
lds
scas
stos
adc
inc
rorl
pop
scas
mov
call
and
fimull
xlat
jle
add
cmpsl
out
sub
and
mov
aas
xor
inc
cmpsl
int
mov
mov
dec
mov
sbb
aam
icebp
push
fnsave
xchg
mov
adc
pop
push
pop
scas
mov
test
js
mov
adc
outsb
fcmovnbe
lods
sub
adc
push
mov
popa
imul
cmp
inc
ret
test
in
ror
fsubs
sarw
es
insb
mov
xor
and
sub
pop
femms
ficomps
pop
dec
out
and
ja
pop
in
add
mov
add
xlat
jns
dec
rclb
pop
push
sbb
adc
subb
push
iret
xchg
cmpsl
repnz
push
jp
cmp
push
xor
xlat
std
clc
popa
add
xchg
das
icebp
and
pusha
movb
nop
inc
iret
mov
jg
mov
push
movsb
sub
lock
xor
std
shl
push
sarl
cmp
shll
daa
mov
loopne
cmp
test
cld
jae
test
insl
test
iret
or
icebp
add
add
movsl
adc
xchg
mov
mov
dec
add
jecxz
mov
mov
xchg
lret
jbe
je
xlat
sub
jg
jo
mov
dec
mov
addr16
in
cmp
xchg
pop
adc
or
fs
mov
call
cmpb
jl
out
mov
inc
cmpsb
or
ret
push
sbb
xor
popf
andl
adc
pop
andl
mov
or
sub
jne
mov
movsb
out
movsl
shl
mov
jmp
rol
jle
pusha
or
stos
jge
imul
cmpsb
lea
mov
lea
aas
inc
aas
push
xchg
dec
ret
mov
mov
into
popf
mov
out
mov
push
lea
cmp
lds
fildl
fs
lds
stc
jae
lcall
ret
push
mov
sbb
jle
lret
repz
cmpsl
fbstp
mov
adc
push
daa
imul
fimull
in
and
arpl
icebp
mov
sarb
pop
imul
fstps
dec
cmp
hlt
adc
cld
insl
cmp
lods
stc
or
push
push
pop
pop
adc
lea
pusha
sarb
fistps
scas
xor
pop
popa
loopne
xor
sub
ds
jo
into
pop
pop
scas
mov
rorl
outsb
fisubs
fsubl
xchg
xchg
jnp
and
call
xchg
stos
repz
es
dec
inc
adc
xchg
sub
mov
gs
inc
xchg
inc
cltd
ss
cltd
dec
inc
push
clc
mov
lods
lcall
scas
aas
xchg
jnp
lahf
hlt
cmc
aas
sahf
lea
push
addr16
mov
add
dec
push
icebp
jle
sub
scas
shlb
gs
and
sbb
mov
ljmp
inc
jo
repz
dec
inc
js
data16
xchg
xor
inc
cmc
add
fcomps
shl
add
xchg
add
and
scas
dec
shll
mov
add
or
pop
or
cmp
movl
sbb
aas
jae
cmp
add
aad
sar
lret
inc
sub
or
mov
adc
int
and
pop
cmpsb
pop
nop
sub
mov
pop
inc
xlat
xor
adc
lods
fmull
sbb
sub
inc
orl
mov
mov
xchg
prefetcht0
pop
dec
mov
and
sub
pop
xchg
cs
push
cmp
sbb
push
dec
jb
push
repnz
mov
cltd
call
mov
push
mov
andb
outsb
out
data16
cmpsb
push
and
adc
fdivrs
fcompl
cmp
dec
bound
outsb
js
and
add
sub
in
in
lcall
insb
xchg
scas
fimull
or
hlt
jg
in
enter
sbb
lods
inc
mov
das
jne
inc
gs
lcall
rcrb
fs
mov
pop
ret
es
popa
mov
sbb
cmpsb
ja
push
xchg
testl
and
rcll
bound
mov
mov
and
jnp
into
mov
add
xchg
rol
xchg
testb
add
js
dec
pusha
pop
jg
cli
lcall
outsl
popa
lcall
mov
cmp
and
mov
test
nop
daa
pop
in
clc
std
cmpsb
hlt
addr16
xlat
push
mov
and
enter
fcmovne
lods
push
cmp
scas
dec
xchg
mov
js
pop
stos
insl
test
sbb
pop
daa
sbb
in
lock
xchg
scas
loope
xchg
jg
in
std
inc
and
or
ret
push
cmp
in
es
and
insb
mov
ss
or
movsl
push
push
xchg
mov
cmpsb
mov
inc
ja
std
sub
dec
mov
shrl
in
loopne
and
sti
mov
icebp
pop
dec
cmpsb
add
and
xchg
pop
sbb
rcrb
pop
aas
insb
adcb
adc
jle
pop
xchg
jl,pn
xor
lahf
dec
sbb
testb
or
in
xlat
lret
pop
pop
mov
cmc
jns
xor
pop
out
mov
sbb
sub
lret
cwtl
jle
inc
pop
mov
add
sbb
rorb
jmp
iret
mov
push
add
shl
insb
ror
dec
ss
jbe
dec
and
enter
test
stc
ds
loope
lret
jl
test
rcr
push
pop
mov
and
inc
loope
inc
xor
addr16
jl
les
sti
stos
rcll
jecxz
sub
cltd
lcall
fldt
int3
pop
negl
xchg
lret
cwtl
in
xchg
adcl
ss
adc
loop
and
add
push
add
sub
jle
das
xor
fidivs
pop
xchg
add
xchg
mov
push
dec
adc
cmp
loope
mov
mov
push
inc
repz
sub
cmp
sti
test
loopne
jae
pop
popf
in
mov
mov
arpl
int
daa
and
push
pusha
mov
sbb
cmpsb
insl
jns
getsec
outsb
jl
cmp
lods
adc
in
dec
sbb
dec
aad
in
imul
xlat
jg
mov
add
cs
push
mov
divb
loop
mov
mov
ds
test
fwait
and
jns
push
dec
add
aam
xorb
idivl
and
jo
xor
push
mov
clc
stos
or
xchg
lcall
andb
shlb
mov
jb
adc
enter
jmp
clc
clc
push
les
inc
jg
push
mov
insb
push
push
mov
pop
mov
test
cmp
andl
mov
adc
scas
dec
dec
dec
js
in
pop
imul
les
sbb
and
cmp
mov
lret
pop
inc
jl
icebp
mov
popa
sub
insb
les
mov
mov
pop
es
pop
sbb
dec
daa
cmovno
or
test
xchg
jmp
ja
or
push
and
pop
cmp
cmp
lods
sub
mov
mov
nop
sbb
sbb
push
nop
cmp
rcll
pop
pop
sbb
dec
cmpsb
mov
ja
adc
das
jnp
jb
ja
mov
outsb
pop
int3
loopne
fisubrl
xor
dec
lea
daa
dec
xor
mov
psubw
ss
cmp
test
sbbb
xchg
insl
gs
dec
rcrl
aaa
enter
popa
out
das
in
mov
jo
mov
lods
or
xchg
call
out
xchg
fldl
jge
adc
mov
cmpl
push
mov
imulb
sbb
mov
ret
sub
xor
dec
aad
loope
or
xor
xchg
adc
insb
sub
scas
roll
add
sbb
push
outsb
movsb
movsb
fcmove
pop
sub
mov
idivb
out
push
and
lret
rcll
xor
xchg
mov
push
flds
xchg
aam
fwait
mov
ja
hlt
mov
cli
test
js
inc
ds
sarb
imul
cli
pop
mov
mov
push
adcl
or
lods
sarl
cmpsb
and
jge
or
push
cld
xchg
nop
roll
mov
icebp
cwtl
mov
sbb
ds
xorb
xchg
and
pushf
or
cmpb
mov
stos
pop
dec
outsb
outsl
mov
mov
cwtl
cld
dec
push
ss
add
popf
leave
and
push
imul
rorl
jbe
pushf
cmpsb
movsl
mov
mov
and
cmp
mov
ficoml
fs
in
test
js
mov
cmp
cmp
cwtl
xchg
insl
pop
cmc
and
nop
std
ss
test
xchg
lret
test
push
cltd
sub
je
pop
dec
insb
and
mov
mov
jne
xchg
sub
xor
adc
mov
ficomps
and
or
rolb
xchg
pop
ljmp
jne
mov
scas
mov
pop
repz
cmp
lock
stos
cli
fistpl
xor
add
add
addr16
mov
mov
lea
pusha
mov
pop
adcb
mov
dec
sub
ljmp
add
or
or
or
push
iret
mov
shr
sbb
push
fildll
jp
and
stos
mov
pusha
xlat
xchg
fadds
out
loop
inc
xchg
in
out
add
sbb
clc
lock
sbb
pop
call
leave
fmul
fadd
dec
bound
or
or
mov
jl
mov
shrb
hlt
sbb
dec
imull
test
pop
fisubrl
sub
cmpsb
sub
jnp
sti
test
inc
ljmp
cs
das
sub
pop
push
inc
dec
jmp
lcall
lock
mov
nop
lods
shlb
pop
call
ret
cmp
dec
arpl
rolb
or
adc
sbb
cli
xor
ficoml
sub
mov
dec
shlb
imul
mov
xchg
test
adc
xor
cmc
cmc
icebp
lahf
lcall
jnp
cmpl
pusha
inc
xchg
jg
test
cld
js
mov
nop
and
popf
mov
or
call
popf
shl
xchg
xorl
sbb
les
jge
lods
xor
mov
dec
inc
push
nop
sahf
sbb
mov
inc
je
out
sub
shll
or
lock
pop
push
and
cmp
repnz
shlb
sbb
dec
roll
cmpsl
in
and
dec
mov
inc
xor
push
movsl
fsts
test
and
lods
andl
aad
dec
sbb
mov
mov
sbbb
scas
mov
mov
inc
daa
addr16
in
jmp
cmp
xchg
mov
push
aad
popw
and
insl
adc
movl
push
sbb
lock
pop
mov
cmp
and
cltd
shl
jmp
cld
subb
mov
movsb
movsb
xchg
push
repnz
push
imul
push
adcl
xchg
sub
flds
dec
pop
in
ljmp
sbb
jbe
les
pop
daa
pop
stc
scas
and
mov
mov
jmp
int3
test
stc
adc
sub
lods
mov
cwtl
pop
std
xabort
sub
ss
nop
aas
push
ret
cmc
cs
push
movsl
cmp
rep
cmp
cs
add
mov
cltd
aas
in
xlat
adc
lret
inc
mov
or
inc
inc
pop
hlt
cwtl
and
or
xchg
insl
test
out
mov
shl
dec
int
pop
adc
aad
inc
imul
icebp
aaa
and
out
cs
inc
rcr
push
pop
in
mov
pusha
fsubs
fisubl
sub
dec
add
fadds
xchg
push
into
mov
in
rep
pop
ds
xor
fdivrs
pop
mov
xor
jnp
or
dec
mov
mov
lds
jnp
xlat
lods
adc
or
mov
fldl
ret
adc
insl
jae
xchg
popf
in
addr16
mov
or
lret
mov
jne
dec
je
mov
in
cmc
cmc
dec
js
mov
iret
loopne
sbb
iret
xor
mov
aas
outsl
testb
lahf
fwait
xor
fmull
dec
sub
mov
mov
mov
and
jbe
sub
lahf
pop
xchg
cli
cmpsb
jle
inc
xchg
cmp
add
into
shl
cmp
jns
decl
fisubrl
shrl
cmp
stos
insl
pusha
sbb
cmpsl
and
jmp
mov
inc
movsl
inc
pushf
or
hlt
push
xchg
test
fsubr
pop
mov
in
repz
insl
xor
cmpsb
inc
push
mov
add
cmp
cli
bound
ljmp
cmpsl
hlt
pop
int
leave
jno
fld
push
ret
xchg
ret
adc
out
sbb
mov
dec
inc
pop
sbb
pop
mov
jmp
xor
mov
rcrb
imul
xchg
jp
pop
mov
out
lret
leave
xchg
add
imul
pusha
mov
pop
mov
rorb
cmp
dec
or
dec
nop
in
out
ss
ss
mov
push
adc
dec
addl
imul
imul
sub
push
mov
mov
push
iret
lods
xchg
mov
mov
test
dec
xor
adc
fidivrs
shlb
js
dec
push
push
mov
dec
in
stos
ljmp
jbe
inc
rclb
ret
xchg
cld
js
xchg
inc
or
xor
inc
jns
sbb
rorl
xchg
adc
ds
cmp
mov
les
inc
or
jmp
loop
cmp
jecxz
or
adc
lahf
sahf
sub
jp
int3
or
fisttpll
pop
popf
out
pop
stos
lret
push
xor
das
clc
ret
into
cli
pop
adc
pop
ja
sub
mov
int
jmp
rcrb
stos
add
shll
or
pop
push
jmp
mov
and
dec
jmp
in
xchg
adc
rcl
sahf
inc
mov
inc
icebp
mov
cmp
popf
sub
inc
inc
add
andb
scas
repz
icebp
or
inc
cmp
inc
imul
push
mov
cltd
rolb
mov
int3
push
imul
movsl
xlat
jp
cmc
push
gs
sbb
rcl
sbb
dec
das
cld
rcll
inc
inc
jns
loopne
fnstenv
and
ud2
sbb
lret
jne
xlat
sahf
pop
add
in
mov
push
mov
outsl
pusha
lods
outsl
pusha
hlt
jle
scas
mov
jne
stos
and
jl
add
fisubl
movsb
pop
xor
add
loopne
cli
mov
stc
adc
mov
adc
and
lea
cmp
dec
inc
cmp
pop
sbb
jge
jae
stc
ss
decb
jo
adc
dec
jae
xlat
and
fadds
ret
mov
js
repnz
dec
mov
mov
popf
mov
mov
cwtl
mov
shlb
imul
xlat
cmp
jecxz
mov
inc
js
jns
inc
pop
mov
bnd
xchg
cmpsl
test
inc
xchg
or
mov
mov
sarb
shll
ffree
arpl
fimull
jl
arpl
inc
mov
sub
popa
mov
dec
sub
cs
or
leave
lods
icebp
jne
push
mov
xor
add
cmp
jno
add
or
push
lret
mov
ljmp
int3
adc
pushf
mov
loope
lcall
aad
xor
add
jbe
ljmp
nop
test
je
sub
push
pushl
mov
out
inc
fcomps
mov
out
out
add
movsl
xor
out
mov
dec
bound
mov
xchg
repnz
push
jg
ficoms
sub
xchg
cmpl
push
dec
sbb
sbb
push
pop
push
into
pop
loop
jg
mov
mov
clc
nop
sbb
andl
loope
mov
and
jo
cmpsb
dec
cmp
sub
out
call
es
pop
push
fcompl
popf
xor
popf
add
jns
and
jne
mov
int3
push
jmp
das
lods
cmpsl
mov
divb
outsl
lods
add
loop
sub
test
shlb
aad
movsb
or
das
jge
mul
pop
mov
push
stc
mov
dec
call
psubusw
dec
movsb
push
repz
cld
cli
icebp
inc
pop
or
xchg
or
out
ror
mov
sub
aas
and
push
sbb
xor
xchg
sbb
shr
fdivr
or
xchg
mov
mov
adc
mov
adc
and
pop
cmpsb
push
pop
mov
icebp
in
push
orl
sahf
inc
das
mov
into
rclb
xchg
dec
cmpsb
jmp
iret
sbb
into
out
cmp
das
ja
int3
daa
in
clc
xchg
loope
add
dec
push
xor
sar
inc
jnp
test
xor
outsl
mov
mov
sbb
inc
testl
test
in
mov
sub
mov
adc
xchg
sub
adc
dec
pop
sbb
adc
call
pop
jae
fptan
es
push
pushf
cmp
rcrl
mov
enter
pop
pop
inc
push
lret
mov
mov
add
into
cmp
pop
test
in
popa
clts
push
stos
inc
lock
add
sbb
ljmp
scas
push
and
pop
xor
pushf
adc
sub
lods
sub
add
std
and
xor
dec
test
add
int3
sbb
or
movsl
xchg
xchg
ljmp
shll
dec
cmpsb
decb
add
dec
pop
inc
xor
adc
pushf
lds
jmp
xor
leave
jl
xor
push
pushf
divb
cli
add
in
sarl
jge
pop
jno
add
in
hlt
pushf
imul
fwait
in
push
lret
xchg
inc
mov
cs
adc
fs
out
mov
jge
cmp
jecxz
jae
out
push
insb
xchg
dec
add
sub
rcll
movsb
push
mov
ljmp
or
iret
mov
bnd
ret
mov
xchg
and
mov
pop
and
les
inc
enter
adc
lock
mov
push
aas
imul
cmp
push
mov
jns
scas
add
and
jns
pop
mov
bound
push
imul
js
inc
loop
aad
mov
sbb
test
push
push
pop
movsl
call
cld
stos
shl
add
ret
insl
or
iret
mov
out
lock
mov
mov
xchg
decl
rcrb
dec
sti
inc
stos
dec
ds
imul
adc
sbb
int
enter
pop
mov
add
lock
push
adc
cmp
and
cwtl
lods
out
xor
negl
push
js
leave
fisttps
mov
jo
mov
or
xchg
dec
cwtl
jne
cmp
lock
sbb
dec
dec
pop
pop
pop
out
or
fmuls
jl
dec
fimull
push
mov
fs
stos
or
and
sub
mov
fcmovb
rcrl
pop
stos
or
adc
cli
jno
add
jle
jae
mov
jns
test
xor
stc
sbb
mov
mov
add
jg
mov
mov
addr16
fs
out
out
es
nop
test
pop
pushf
repz
lock
jbe
mov
dec
notb
fld
xor
icebp
js
or
shrl
mov
lea
pop
jecxz
inc
xchg
jbe
dec
mov
fistpll
dec
jp
movsb
popa
xchg
fldenv
jmp
xchg
lds
jge
inc
mov
cmp
dec
stc
fstpt
cli
adc
lret
dec
inc
and
xor
cwtl
test
cmp
jp
mov
std
loope
andb
xor
adc
add
mov
jo
and
in
mov
jp
data16
enter
lds
shlb
add
hlt
cmp
inc
shll
push
xor
iret
imul
jae
in
fidivl
push
rol
adcl
lock
jg,pt
and
stos
mov
adc
cvtpi2ps
jle
jbe
push
and
pop
or
sbb
push
mov
jne
stos
movsl
or
iret
mov
jae
scas
dec
dec
les
sbb
add
gs
out
imul
sub
pop
pop
ficompl
mov
das
xchg
or
scas
mov
or
sbb
mov
and
sbb
push
push
daa
insb
daa
out
jp
push
es
cmp
out
and
outsb
in
dec
ret
gs
fmull
and
les
mov
imull
fistps
push
in
push
cld
rcll
push
pushf
cmc
cltd
inc
icebp
shl
out
popa
les
inc
cmp
sub
add
in
arpl
inc
mov
push
jbe
ret
sub
push
push
xchg
dec
pop
fiaddl
adc
xchg
roll
ret
out
pushf
rcll
or
lods
add
jge
adc
mov
daa
sub
push
jne
jo
pop
repnz
sbb
imul
cld
cmp
subl
ljmp
jno
jle
mov
mov
inc
inc
sbb
clc
call
xchg
xchg
es
in
cmp
push
pusha
cmp
insl
lods
popa
xor
jecxz
repz
jne
jb
push
xchg
pusha
out
sub
fiaddl
sbb
jnp
push
scas
push
aad
movsw
icebp
push
add
mov
adc
rolb
jle
pop
rol
icebp
push
lret
dec
test
sub
das
fisttpll
jns
iret
jb
mov
mov
stc
call
or
dec
sbb
das
fwait
inc
loopne,pt
iret
jae
mov
lahf
fdivrs
aaa
or
mov
sarb
in
popa
popa
mov
or
mov
push
test
loop
jmp
mov
daa
xor
jmp
loope
adc
sub
bound
movsl
pusha
push
push
lahf
sbb
mov
cmpsw
ret
je
outsl
inc
arpl
push
loopne
leave
popf
mov
jecxz
pop
lcall
loop
cltd
adc
or
out
mov
dec
add
jle
mov
or
sbb
imul
test
mov
jne
lock
into
out
iret
pop
dec
popf
lock
fs
idiv
lret
outsl
mov
sbb
test
or
sub
fistpl
adc
dec
js
or
pop
lahf
testl
es
movb
scas
rorb
adc
aam
je
mov
mov
out
and
sub
and
test
in
test
iret
fists
cmp
fisubrl
into
fnsave
push
mov
cli
in
sub
cmp
leave
cli
inc
fidivrl
fwait
cli
mov
filds
outsl
push
out
gs
mov
push
movsl
pop
push
mov
fldcw
loope,pt
test
mov
aad
in
push
rol
adc
fmul
sub
ljmp
sub
das
cmc
sub
mov
xchg
dec
lods
aam
cwtl
cmp
cmpl
shll
ret
nop
xchg
loopne
or
into
cmp
out
pop
fbld
sub
jb
call
inc
inc
mov
loope
pop
testb
ret
lds
mov
push
orl
lods
xchg
xchg
pop
scas
lea
aaa
mov
add
push
imull
test
aam
ja
add
sbb
cli
shl
shrb
add
dec
mov
push
adc
outsl
pop
loope
push
aad
in
out
inc
sbb
push
ljmp
shlb
xor
lret
sbb
push
daa
fistpl
sar
mov
rolb
jns
xchg
push
xchg
push
mov
test
lea
add
lea
in
decl
fistpll
mov
inc
dec
xchg
shrb
push
sbb
jg
or
out
jmp
lock
dec
pushl
and
ss
loope
addr16
xor
lahf
sbb
mov
jecxz
add
xor
cmp
pop
and
xor
mov
movsb
and
scas
xchg
sub
jb
dec
ljmp
aas
pop
or
rol
mov
call
sbb
out
notb
mov
movsb
out
fbstp
lss
arpl
jno
mov
lods
std
sbb
mov
sub
mov
in
sti
lods
fsubr
test
daa
popf
sbb
cmc
or
outsb
cmp
mov
adc
inc
lahf
mov
dec
imul
int
addr16
mov
cmp
shlb
pop
mov
xchg
jno
jae
jns
mov
call
and
xor
test
lea
push
cmp
pop
add
aaa
ss
iret
mov
pop
fwait
or
mov
pop
std
fcomp
sub
daa
insl
and
sub
aaa
mov
cld
dec
fwait
enter
das
sti
aas
in
sti
jp
inc
sub
in
mov
out
cmpsb
fstpl
mov
xor
sub
sub
pop
jecxz
sub
out
nop
xchg
enter
add
fisubl
andb
setbe
adc
mov
sti
push
push
mov
xchg
lret
cmp
xor
mov
dec
and
test
jae
cmp
pop
sub
dec
je
adc
filds
out
shrl
mov
std
add
pop
and
int3
mov
push
mov
loopne
lret
pop
pusha
movsb
and
rcrl
fldt
xor
inc
or
mull
in
test
test
in
pop
mov
xor
int3
inc
xchg
pop
jbe
cmp
xor
dec
daa
and
push
mov
clc
cmpl
iret
mov
adc
std
jp
negl
dec
add
enter
add
nop
scas
cmp
fistps
xor
jmp
cli
push
fs
push
in
js
push
leave
sub
jno
mov
sbb
mov
push
dec
fsubrl
jecxz
add
add
xchg
cmp
sbb
aaa
push
push
inc
test
sbbb
mov
or
jo
push
sbb
push
je
sub
pop
dec
lret
addr16
rcll
jl
sbb
sbb
movsl
lods
in
adc
clc
inc
andb
or
sahf
xor
sub
inc
imul
jl
cmp
dec
sbb
daa
mov
mov
test
mov
cwtl
inc
mov
stos
mov
call
inc
lahf
jo
xchg
xchg
adc
ret
cld
push
adcl
dec
cltd
mov
andb
mov
outsb
mov
mov
mov
in
mov
sahf
aas
jb
sahf
or
mov
push
lea
mov
jae
add
aam
ficomps
jnp
dec
sbb
sbb
xor
pop
jnp
push
jg
mov
sbb
fidivl
push
decl
cmpb
lock
fmulp
movsl
fisttpl
xchg
sbb
jno
xor
xchg
xchg
arpl
aas
jl
add
shrl
sbb
sbb
test
add
pop
lahf
in
pop
xor
sbb
lods
mov
rcll
sub
xchg
xchg
sti
cltd
pop
test
aas
push
std
lds
mull
jp
push
and
mov
push
jg
add
test
push
bound
outsl
pop
lret
lock
lea
pop
std
cmp
dec
stos
test
mov
pop
and
mov
push
outsb
cltd
sbb
xchg
push
outsl
add
cli
pop
gs
jge
dec
jl
int
lret
addb
xchg
add
fs
pop
add
pop
jne
dec
mov
aas
cmpsl
lahf
ja
inc
in
add
inc
xchg
loopne
js
outsb
xor
ficoms
sbb
jnp
jbe
inc
int
xchg
test
lock
out
into
in
aad
push
out
pop
adc
dec
in
loope
pop
aam
icebp
cs
mov
add
xchg
pop
inc
stc
cmpsl
lods
imul
cmp
into
outsl
xchg
movsb
and
pop
call
adc
or
lahf
add
std
popa
and
jl
jg
push
movsb
jecxz
inc
loop
push
lods
stc
stos
sub
icebp
jle
cld
xchg
aam
or
or
lods
movsb
insb
jno
mov
jae
cmpsb
or
out
jns
mov
addr16
push
xlat
add
push
insb
in
mov
push
nop
data16
jp
push
xchg
dec
cld
bound
iret
pop
xchg
xor
lahf
xlat
outsb
aaa
dec
and
add
mov
sub
addr16
mov
push
sub
pop
rclb
mov
jne
adc
rcrl
push
inc
xor
nop
add
adc
daa
cmp
cwtl
push
dec
adc
jp
mov
aad
cld
ds
jo
sbb
push
mov
adc
pop
popa
jnp
dec
pop
dec
sbb
and
and
fs
sub
test
lret
cmp
push
es
sbb
mov
sub
sbb
mov
and
data16
mov
inc
push
xchg
dec
mov
push
cmp
jns
fwait
push
jmp
lock
sub
ss
fdivs
div
mov
ljmp
test
or
test
mov
fcompl
pop
xchg
insl
push
hlt
jl
cmp
jbe
in
movb
stc
push
rcl
mov
inc
inc
mov
imull
jge
dec
push
aaa
pop
decb
cmpb
sarl
shr
jno
or
es
xor
jg
pop
sbb
jae
rcrl
mov
xor
mov
sbb
push
cld
sbb
mov
pop
pop
cltd
pop
cmp
loopne
mov
pushf
and
shlb
inc
test
out
jno
sbbl
or
repz
enter
mov
lahf
loop
insl
sbb
aad
sbb
sub
add
pop
mov
int3
dec
dec
test
xor
xor
in
cwtl
rorl
cwtl
push
ret
or
dec
cmp
add
fcmovnbe
stos
and
add
cmp
mov
mov
pop
jae
mov
lods
int3
sub
call
fstp
xor
lcall
jne
mov
mov
pop
cli
push
jbe
mov
mov
xlat
popf
loope
mov
jmp
fptan
ret
mov
imul
jne
mov
cmc
sarl
sbb
xlat
pop
mov
ret
negl
sarl
shrb
fcmovb
xor
fucomip
dec
jne
mov
jmp
mov
icebp
push
lds
movsl
rcrb
arpl
xchg
and
fistps
mov
pop
mov
jnp
pop
out
mov
push
dec
js
orl
rorl
push
fadd
mov
shlb
jno
pop
adc
pop
sub
inc
xor
repnz
jl
shufps
in
add
xorb
lods
in
in
aad
mov
loop
sbb
ror
in
popa
lds
out
imul
mov
cmp
or
mov
mov
adc
test
testb
push
fldcw
rcl
add
aas
cmp
add
push
ret
pop
js
jmp
in
lret
mov
push
or
outsb
mov
inc
mov
daa
or
inc
adc
push
cmpsl
mov
out
insb
lahf
insb
gs
data16
pop
cld
movsb
aaa
add
mov
rcrb
lret
xor
add
mov
add
in
sbb
jmp
xor
faddp
loopne
jl
mull
aaa
fnstcw
inc
sbb
pusha
movsl
mov
mov
mov
test
cwtl
outsl
sub
adc
fmuls
pop
int
mov
scas
aas
and
sbb
xor
dec
cmpb
and
fnstenv
mov
push
jno
ds
jp
stc
mov
aam
inc
jnp
xlat
mov
inc
mov
or
fildl
and
sub
and
stos
jb
or
xor
data16
sub
imull
lcall
add
inc
or
ror
lahf
push
mov
add
xchg
nop
lret
push
push
repnz
mov
pushf
jl
xchg
loope
jne
hlt
sbb
imul
int3
in
sbbl
sbb
add
cmp
in
das
sub
lcall
ss
mov
js
xor
xlat
add
inc
enter
cli
jne
cmc
std
pushl
inc
leave
push
add
xor
cmp
or
xor
shrb
rolb
fnstenv
loope
pop
dec
or
xor
jl
cmpsb
das
fcoml
mov
dec
and
jne
test
jae
push
fwait
fwait
enter
xchg
cmpsl
call
add
and
push
imul
icebp
or
jecxz
dec
clc
ljmp
xchg
xor
pop
fmull
sub
mov
scas
rolb
test
cwtl
mov
adc
pop
mov
cmp
cltd
dec
lea
fs
rcrb
pop
sub
mov
insb
cwtl
loopne
ja
in
xchg
and
add
rcl
cmc
idivl
mov
jne
cwtl
push
mov
rclb
lods
ja
add
leave
mov
sub
add
popa
test
pushf
cmp
test
mov
sub
inc
leave
daa
rolb
fcompl
dec
popf
aas
mov
in
cmp
sub
and
hlt
xchg
loopne
xchg
mov
mov
sub
or
mov
pusha
lret
xor
loop
add
cmpsl
lret
sbb
out
pop
hlt
cmp
icebp
and
fstpt
outsl
inc
xlat
xor
cmp
sbb
dec
push
in
mov
insl
outsb
mov
xlat
xchg
mov
adc
call
std
mov
dec
xchg
pop
sahf
movsb
pop
hlt
adc
iret
call
sub
add
mov
sti
aaa
sub
mov
out
int3
mov
xor
dec
mov
add
adc
xlat
sub
pop
pop
fadds
xchg
clc
shrb
or
lahf
mov
mov
jmp
popf
les
mov
cmp
pushl
push
lock
cmp
repz
mov
xchg
sahf
jo
push
imul
int3
xchg
bound
nop
xchg
in
mov
aaa
nop
inc
jge
or
xor
cmp
jne,pt
xchg
nop
xchg
xchg
mov
popa
sub
inc
or
lcall
dec
imul
xchg
lock
and
push
hlt
or
mov
and
aad
nop
movsb
iret
cmpsb
out
sbb
daa
lea
shlb
ljmp
mov
ss
fistpll
rol
inc
jl
pop
jae
fs
lock
sti
mov
jle
in
jecxz
jmp
xchg
mov
cltd
adc
pop
in
jo
dec
push
xchg
sarb
sub
out
out
adcl
fistpl
outsl
pop
pop
push
cmp
es
add
dec
push
xor
out
into
add
or
or
test
out
mov
in
sub
lahf
mov
popa
xchg
mov
setg
stos
or
inc
mov
pop
mov
rolb
js
inc
cld
or
test
adc
mov
xchg
or
xchg
add
pop
mov
lock
and
and
xchg
subb
in
out
xchg
adc
in
pop
sbb
xchg
xchg
mov
cmp
cld
inc
sub
push
xchg
sub
mov
jp
sahf
pop
int
sub
les
aam
outsb
popa
test
out
lcall
outsl
add
scas
cmp
iret
ficoml
add
ljmp
fstl
push
imull
inc
adc
mov
jns
adc
add
stos
inc
xchg
clc
push
pop
shrl
cwtl
adc
and
cld
movsl
cmp
mov
leave
cmp
in
xlat
mov
hlt
std
cmp
mov
jg
mov
or
and
leave
mov
dec
popf
mov
cmp
movsb
jl
sahf
loope
pop
xchg
mov
int3
in
and
pop
mov
insl
out
in
mov
sbb
push
mov
inc
pop
addr16
shrl
adc
nop
cld
jge
sub
out
sbb
inc
lcall
fisttpl
mov
adc
and
icebp
daa
pushf
rorb
mov
pop
icebp
adc
cmc
push
aaa
mov
push
jecxz
gs
enter
dec
adc
cmpsb
inc
mov
sub
fidivs
imul
push
mov
push
mov
cmp
cwtl
inc
sbb
fwait
or
jne
adc
divb
pushf
jns
loopne
fisttpll
add
inc
ror
sbb
xchg
shll
cmc
popf
and
adc
cmp
lock
int
sub
cmc
flds
aam
in
clc
jl
stos
lret
mov
xchg
jmp
pop
jecxz
repnz
aam
ret
xchg
xchg
imul
ret
pushf
in
mov
lods
mov
mov
mov
mov
xor
mov
icebp
pmuludq
mov
outsb
in
cmpsb
mov
and
push
lock
pop
lret
xchg
cwtl
add
aas
xchg
lods
xchg
and
dec
mov
je
jmp
sub
pop
lock
addl
pop
mov
pop
call
pop
loope
dec
aas
je
sahf
mov
imul
push
lret
inc
fs
mov
or
sub
push
loop
aam
fistpl
loopne
xchg
gs
test
jmp
mov
jnp
mov
in
lods
xor
shrb
mov
sarl
pop
cli
pop
push
sahf
loopne
xor
cmp
xchg
mov
sbb
adc
imul
jmp
or
mov
shll
mov
xchg
jmp
les
out
inc
imul
sbb
adc
test
fidivrl
cld
jge
bound
inc
dec
mov
sbb
mov
jae
push
fiadds
mov
mov
and
push
xor
jnp
es
rcrl
mov
mov
pop
adc
in
daa
fdiv
jb
rclb
ljmp
stc
mov
scas
scas
rep
pop
cmp
mov
mov
mov
sbb
cmpsl
mov
mov
fcompl
imul
xor
adc
rolb
in
cmc
mov
xchg
mov
xlat
xchg
mov
popa
xlat
sub
fcmovnu
cmp
iret
dec
ja
loopne
mov
stc
sub
pusha
pop
mov
sub
call
mov
mov
pop
popa
andl
sbb
dec
dec
pop
mov
add
js
mov
loopne
roll
inc
das
sar
add
or
addr16
push
frndint
mov
sub
xchg
stos
sbb
cltd
jmp
out
inc
dec
aas
popf
mov
pop
insb
sbb
in
and
xor
scas
imul
cmp
pop
mov
jmp
xor
mov
lea
xor
jnp
mov
and
call
into
mov
in
shll
aad
stos
or
push
and
or
inc
and
add
pushf
fcom
or
jb
add
fcompl
jge
mov
sbb
jbe
or
adcl
movsl
mov
test
outsb
lods
nop
movsb
lods
mov
cmp
loope
mov
push
add
jl
addl
ljmp
xchg
fisubrs
dec
or
fildl
dec
lahf
pop
dec
fstl
out
hlt
xchg
movsl
bound
pop
adc
dec
cmpsb
loop
or
mov
push
lret
mov
out
add
push
fiaddl
repz
insl
xchg
mov
sbb
arpl
in
rcr
fwait
ror
rorl
lods
sub
dec
pop
test
push
data16
adc
std
cld
insl
xor
call
ss
sub
cmc
cmpsl
cltd
loop
or
in
dec
in
mov
and
data16
fs
push
mov
out
xor
mov
mov
popa
mov
nop
xor
adc
clc
in
loopne
sbb
and
stos
push
inc
outsl
shrl
sti
pop
adc
ds
lds
loope
jno
out
mov
bnd
lcall
pop
stc
xor
mov
xchg
xchg
enter
sbb
xor
pop
inc
fincstp
in
arpl
hlt
xor
mov
push
mov
call
cld
jmp
dec
dec
mov
push
and
add
xchg
dec
js
test
insl
or
in
sbb
xlat
dec
out
je
jo
daa
push
inc
inc
scas
add
add
xchg
dec
inc
push
pop
je
push
aad
repnz
push
push
pop
dec
mov
lock
jecxz
push
mov
cmpsb
shr
in
jo
pushf
stc
or
or
cltd
cmp
push
sbb
cmp
js
add
xchg
mov
ljmp
mov
adc
scas
rorl
stc
lret
inc
cmpb
in
adc
and
repz
and
adc
inc
jns
xchg
cmpsl
ror
mov
incl
lret
test
je
jecxz
sub
sbbl
xchg
and
incl
mov
mov
or
pop
rolb
xchg
mov
xchg
mov
repnz
push
push
mov
fstps
rcr
fldl
fidivrs
out
or
inc
fsts
cmc
mov
jne
fwait
add
pushf
cltd
dec
inc
repnz
js
movsb
outsb
xor
mov
imull
ror
notl
dec
cld
in
inc
push
dec
out
adc
das
insl
cmp
and
in
push
and
xor
cmp
mov
push
xchg
call
add
and
xchg
sti
stc
or
ffreep
dec
in
bound
adcl
popa
pop
cmp
mov
aas
ss
aad
gs
scas
pop
push
inc
cmp
sbb
push
sub
pusha
sub
pop
into
cmp
ja
std
imul
dec
mov
jmp
ds
sub
pop
lock
test
fistl
mov
mov
jg
ds
jnp
xchg
add
sarl
mov
popa
adc
popf
mov
mov
mov
pop
adc
pop
lret
fwait
dec
imul
loop
out
sbb
ret
lcall
dec
andb
iret
mov
inc
xor
int3
ljmp
xor
dec
xor
scas
loopne
lret
lock
testl
sub
cltd
or
push
and
dec
cld
pop
adc
loop
mov
mov
out
call
cld
add
and
xorl
call
jg
repz
mov
xchg
or
sbb
ds
ffreep
das
xchg
aam
out
adc
ds
mov
shr
or
cmpsb
into
inc
push
sub
inc
push
pop
repnz
cmp
jle
push
mov
lods
or
dec
dec
leave
xor
lret
pop
and
cmp
fwait
dec
dec
mov
ret
sti
nop
dec
scas
data16
jae
ja
cmp
add
insl
and
push
mov
fucomip
push
ss
aas
push
fiadds
push
push
dec
jle
adc
xor
dec
lret
sub
dec
popl
lea
pop
out
add
jbe
add
gs
push
or
pop
inc
pop
lds
pop
neg
clc
addl
mov
dec
das
or
pop
iret
or
fs
lret
jge
imul
xor
ss
ljmp
lea
ja
adc
sbb
cmp
enter
mov
dec
sub
lret
les
pop
or
inc
jno
es
sahf
es
or
dec
push
sub
rcr
adc
mov
aas
enter
loopne
pop
fcompl
jb
std
iret
push
popf
shrl
and
jne
into
cli
lahf
push
das
pushf
and
adc
lcall
cmpsl
pushl
mov
lcall
in
and
dec
mov
or
mov
aad
sbb
cmp
lahf
imul
incb
or
sub
jno
jge
pop
call
pushf
push
aas
dec
adc
lcall
imul
pop
xor
add
pop
dec
mov
jp
xor
loope
xor
movsl
lock
add
icebp
mov
stos
hlt
cmp
cmpsl
fwait
fwait
mov
loop
push
sbb
sbb
das
lods
push
popa
jle
or
jl
pop
xor
fldt
test
test
cs
loop
mov
movsl
sbb
sub
inc
and
sarl
jle
pop
out
outsb
in
push
ljmp
dec
inc
push
in
test
lds
mov
ja
fs
sbb
ja
adc
add
add
xchg
into
scas
jp
pop
or
or
mov
out
pushf
out
insb
ret
and
out
rclb
cwtl
lock
sbb
gs
sbb
lret
xchg
jg
aas
push
fs
cli
lods
cmp
xchg
test
into
lea
test
xchg
repnz
xor
mov
mov
and
add
shr
aam
bound
push
jo
sub
or
xchg
and
insb
lds
jne
repz
out
xor
jle
and
adc
or
pop
jge
daa
outsb
jge
mov
pop
jmp
xchg
push
adc
pop
daa
lcall
pop
mov
mov
sub
movsl
in
mov
dec
push
lods
xlat
jo
jno
pop
rclb
jp
xchg
test
cmp
stos
es
idivb
and
mov
test
sbb
in
xchg
jmp
push
or
jno
mov
or
mov
add
fisubl
sbb
imul
jecxz
mov
jmp
xchg
pop
sub
add
mov
mov
and
dec
xchg
mov
imul
pushf
cmp
jge
cli
jnp
les
inc
pop
stos
or
xchg
mov
dec
fisubrs
das
mov
es
clc
cs
jbe
jne
mov
jle
jecxz
data16
jl
out
push
ljmp
stc
repz
out
push
inc
inc
lahf
leave
mov
loop
cmpsb
shll
mov
lock
popf
xor
cmp
or
stos
xchg
inc
fnstenv
adc
mov
call
and
movsb
sbb
sub
fnstcw
push
inc
gs
sar
pusha
gs
fildll
pop
push
xor
xor
popf
sub
rcrb
stc
loopne
mov
cmp
mov
mov
loopne
out
pop
add
or
icebp
xchg
and
adc
adc
push
movsb
pop
add
add
int
or
jne
sub
mov
sar
push
mov
fstpl
push
pop
jge
lret
scas
jne
xor
or
and
push
in
jns
rcll
mov
pop
imul
mov
jbe
or
or
imul
or
pop
lods
bound
pop
hlt
pop
pushf
xchg
out
jg
sub
sub
cltd
ds
sbb
xorl
rcrb
or
ss
or
cli
mov
sub
iret
js
cwtl
inc
mov
cmp
sub
bound
mov
pop
cmpsb
cld
and
mov
or
adc
xchg
xor
mov
mov
cmp
in
fnsave
inc
subb
stos
icebp
roll
lods
pop
cmpsb
pop
mov
cmp
push
xlat
xchg
add
mov
dec
lahf
adc
inc
pop
testb
lock
testb
lds
xchg
jecxz
jbe
mov
lods
orb
mov
xchg
pop
out
cmp
in
add
mov
pop
pop
mov
xchg
push
stos
push
inc
dec
fsts
pop
or
movsb
lret
call
rcrb
adc
std
cmp
lock
xor
and
lea
pop
xchg
pop
decl
gs
jg
xor
sarl
out
xchg
add
jg
xchg
add
aas
pop
add
into
or
push
ret
out
mov
jo
ss
sarb
stc
out
hlt
or
mov
sbb
mov
add
rcrl
inc
ds
and
sub
mov
or
add
pop
jnp
insb
dec
rclb
inc
pop
sbb
sahf
cmp
outsb
mov
push
cmpsl
loope
pop
ret
fcompl
adc
cli
xlat
shrb
adc
push
aaa
inc
test
pop
adc
mov
sysret
push
pop
dec
cmpsl
mov
out
sbb
and
data16
cmpsl
jo
repz
jb
mov
mov
push
sub
dec
lock
push
adc
fisttps
sub
mov
xor
adc
jg
out
fistps
lds
lret
popf
pusha
add
mov
mov
inc
mov
mov
pop
sbbb
sahf
or
xor
sbb
xchg
xchg
sbb
cmp
push
push
scas
and
call
aaa
pop
sub
xchg
scas
bound
jo
or
dec
sbb
shll
fmuls
adc
pop
xor
jle
jp
es
sbbb
fiaddl
mov
aaa
jb
daa
int3
cwtl
mov
and
and
scas
lea
mov
pop
fwait
stos
scas
cmpl
or
jle
mov
push
sbb
jbe
frstpm(287
sub
punpcklbw
push
dec
jg
jns
and
ret
mov
jge
inc
jmp
ss
dec
push
xor
or
adc
fisubrs
repnz
sub
push
lcall
jne
movsl
mov
ret
test
fcompl
sub
orl
jbe
call
jbe
adcl
cwtl
and
mov
adc
enter
lods
enter
fsubr
out
sub
test
xchg
into
loop
jns
mov
cmp
popa
adc
movsl
jne
jp
repnz
pop
in
pop
xor
insb
loope
pushf
testb
out
add
cmc
repz
bound
xor
dec
test
and
insb
xchg
sbb
mov
andb
iret
and
xchg
test
adc
inc
insl
dec
loop
cmc
dec
xchg
sbbb
hlt
push
and
push
and
insb
push
lret
push
jp
ja
outsl
xor
ret
bound
pop
xchg
adc
sub
ss
ja
adc
push
pusha
xchg
jmp
add
in
icebp
popf
inc
lds
dec
inc
loopne
mov
ljmp
inc
cmc
fadd
mov
in
ret
ss
icebp
lock
mov
push
push
jl
push
call
iret
shlb
push
mov
dec
mov
xor
mov
out
fsubs
mov
fistpl
push
pop
sub
xchg
ret
cmp
jb
mov
mov
sbb
push
aas
sbbl
cwtl
cli
push
add
jge
movb
rcr
add
pop
mov
push
sub
pop
sub
popf
or
xlat
popf
xchg
and
xor
popf
es
add
lods
xchg
push
jg
imul
mov
sbb
in
jbe
mov
xor
test
sahf
hlt
inc
insl
std
mov
mov
in
add
sbb
pusha
sbb
out
pop
lods
lds
mov
mov
inc
jmp
pushf
je
into
add
push
int3
dec
xlat
and
lret
clc
or
adc
adc
out
stos
sub
mov
or
sub
shlb
sbb
mov
cmp
and
push
data16
lahf
mov
mov
dec
xor
mov
out
lret
loope
pop
cmpsb
inc
repz
hlt
jne
sub
pusha
mov
sub
rcrb
sub
and
sub
or
pop
xchg
test
cmp
add
adc
stos
add
lret
cli
mov
push
idivl
rcrb
inc
andl
cld
mov
shrw
out
pop
sub
push
rolb
call
stos
xchg
jns
jmp
inc
test
not
outsl
insl
std
jbe
xor
cmp
jmp
push
enter
outsl
sarl
nop
inc
pushf
mov
xor
adc
scas
mov
roll
push
jbe
xor
xorb
ljmp
lahf
cld
dec
subb
add
out
cld
loope
or
sub
test
sarb
or
cmp
mov
inc
mov
pop
push
lret
das
dec
cmc
dec
ss
test
mov
mov
push
mov
cmp
fisttps
fcoml
add
sarb
in
lods
inc
push
sbb
rcrb
pop
push
mov
mov
mov
cmpsb
xor
fimuls
out
or
dec
and
sbb
adc
out
adc
mov
cmp
xor
daa
cmp
hlt
inc
test
add
push
pop
jne
jmp
es
xchg
xchg
xchg
sbb
fmull
mov
sbbl
or
in
stos
fs
std
push
or
mov
pop
sub
pop
mov
xlat
inc
jecxz
inc
or
jl
xor
test
cs
push
jae
fidivrs
jno
jne
lds
and
mov
push
adc
pop
loop
push
push
jbe
cwtl
jb
sbbb
movb
pop
and
cmc
inc
mov
in
push
sahf
insb
dec
sbb
jecxz
jecxz
stc
or
cmp
pusha
sub
ret
mov
scas
lock
sub
in
pop
clc
mov
repz
adc
mov
xor
push
push
js
xchg
ljmp
pop
dec
aaa
cmp
and
add
les
mov
mov
fldenv
fdivs
aas
dec
pop
jmp
sbb
push
rcrb
pushw
test
scas
mov
bound
lahf
jmp
in
pop
movsb
lret
shl
bound
jle
and
rorb
cmc
sbb
loope
mov
stos
adc
push
pop
and
ja
cmp
push
lock
dec
mov
xchg
mov
jb
add
cmc
mov
push
push
fsubs
call
mov
push
add
mov
mov
nop
sub
push
shrl
movsl
hlt
dec
loopne
mov
ss
mov
mov
int3
or
lds
inc
std
icebp
xor
cmp
aam
adc
iret
pop
mov
data16
cmpsb
stos
pop
loopne
cld
aad
popa
sub
loopne
aas
test
out
xchg
mov
lods
imulb
je
out
xchg
cmpsl
dec
push
xor
sbb
stos
ret
and
pop
mov
push
popl
mov
mov
mov
or
pop
test
lret
fwait
shll
mov
xchg
dec
adc
clc
dec
into
aas
cmp
js
std
mov
jmp
mov
jecxz
daa
test
outsl
adc
stc
add
cmp
repnz
stc
outsl
test
inc
cmp
add
xchg
inc
cld
mov
and
cli
lahf
push
hlt
hlt
loope
int3
mov
adc
add
mov
loope
jae
leave
push
xchg
out
je
nop
inc
fisubl
or
lret
sbb
sbb
jns
jge
mov
popa
cli
sub
adc
or
aad
dec
jno
sbb
aam
push
adc
test
cli
xor
test
pop
clc
shlb
adc
scas
push
pop
cmp
pushf
out
pushf
cs
in
add
mov
mov
lret
hlt
xchg
divl
sti
fiaddl
adc
sub
mov
or
or
xor
leave
sahf
sub
inc
dec
xor
pop
stc
lock
cli
sarb
sub
jmp
mov
jo
fisubrs
shl
lcall
sbb
push
xchg
popa
insl
pusha
popa
lds
pop
cwtl
fwait
push
cmpsl
ss
aas
pop
mov
mov
mov
and
gs
and
cmpsb
daa
mov
stos
xchg
sahf
icebp
test
push
sub
scas
loop
loop
sbb
push
adc
stc
or
lret
popf
lahf
iret
jmp
cmp
into
jg
mov
popf
push
add
lahf
and
jns
mov
ficompl
addb
sbb
shl
xchg
pop
lahf
sub
mov
inc
ja
push
pop
mov
test
push
lods
xor
in
mov
cli
sbb
mov
xchg
lods
mov
pop
int3
mov
mov
daa
pop
andb
and
sub
push
sub
loopne
lock
push
ficompl
gs
fxam
lock
frstor
sub
sub
sarl
rol
xlat
dec
in
in
jns
fisubl
add
movsb
pop
jp
outsb
mov
fmull
arpl
cmp
lahf
pop
lcall
push
popa
jl
aad
mov
add
mov
mov
jbe
cmp
mov
lcall
ljmp
in
push
cli
push
mov
fists
mull
pop
inc
shlb
mov
jbe
nop
std
nop
sub
aam
les
mov
test
xchg
dec
sub
ljmp
aad
shll
dec
pop
mov
jae
in
and
pop
fs
das
inc
adc
xlat
insb
fnstenv
ret
movsl
mov
dec
jne
rcrb
scas
jnp
out
jp
mov
mov
jp
mov
out
int
or
inc
adc
push
ret
or
xor
xchg
mov
hlt
std
test
mov
and
sahf
xlat
rcrl
in
xchg
add
andb
aad
inc
jg
leave
lods
or
mov
cmc
add
add
mov
int3
push
adc
xlat
insl
xor
inc
or
and
mov
mov
inc
out
lret
mov
in
cmp
push
stos
clc
arpl
cli
lahf
xchg
mov
mov
mov
add
inc
cmp
das
ret
inc
mov
fmull
pushf
mov
dec
js
decb
pop
jo
mov
adc
lds
xor
inc
not
jbe
movntq
out
cli
in
rclb
xchg
jge
adcb
mov
xor
mov
cld
lret
cmp
pushf
mov
popf
adc
push
lds
mov
aad
stc
enter
test
in
test
ja
inc
push
jg
out
pusha
adcb
dec
cs
sub
movsb
jnp
or
cmp
and
or
and
xchg
pop
push
sbb
pusha
inc
cmp
notl
and
out
or
aad
stos
dec
jb
std
sbb
sbb
mov
pop
sbb
dec
lock
repz
jnp
push
push
mov
stos
js
jp
ret
in
add
mov
and
sub
fs
shrl
shrb
mov
fiadds
pop
inc
xor
stos
xchg
jp
repnz
adc
aam
dec
jbe
lds
test
test
cmp
xchg
jp
into
lret
shrl
mov
add
push
dec
fdivrp
mov
adc
mov
push
cwtl
jbe
pushl
jae
call
cld
cmp
ja
test
loopne
adc
jo
mov
lret
push
or
jb
mov
inc
pop
xor
or
cmp
add
mov
movsl
adc
xor
in
xor
sbb
add
hlt
test
divl
and
sbb
jle
cld
dec
lods
adc
sahf
cmp
js
ljmp
xor
fmul
fiaddl
shrb
xlat
shlb
pop
shll
icebp
push
aad
inc
push
inc
sub
and
es
lret
fs
sub
pop
mov
cmpsb
cmp
push
in
iret
aaa
inc
loopne
nop
aas
insl
adc
cwtl
sub
and
lea
jmp
sbbb
out
popl
imul
ds
pop
cmp
mov
and
add
jp
add
mov
imul
aad
mov
rcrl
dec
rorb
int
mov
mov
pop
stc
nop
lock
jnp
addl
ret
inc
sbb
stos
inc
and
ret
lcall
lcall
pushf
push
ds
pop
stos
xchg
pop
fcomps
xor
inc
ret
jo
sbb
sahf
cmpsl
xor
nop
scas
stos
mov
mov
aam
or
pop
out
loopne
filds
lods
or
xchg
or
outsl
icebp
dec
and
stos
gs
xorb
adc
cmp
inc
dec
movsb
cwtl
pop
jnp
shll
mov
pop
fdivr
rorb
in
add
rorb
push
dec
lahf
xor
sub
scas
dec
mov
lret
mov
adc
cmp
and
and
xchg
test
sub
inc
sub
loopne,pt
hlt
jne
popa
jnp
mov
and
mov
inc
mov
or
fsubl
cmpps
imul
and
cwtl
or
xchg
fs
xchg
cmp
jecxz
or
or
sub
xor
shll
and
into
and
sbb
xor
test
mov
mov
incb
and
dec
std
das
aaa
pop
jno
jno
cmp
mov
frndint
jns
imul
push
andl
inc
mov
call
popf
notb
sahf
xor
sub
test
mov
jecxz
jmp
inc
outsb
jae
pop
sar
and
das
out
jge
fmulp
sub
adcl
sub
xlat
and
dec
scas
and
lds
mov
mov
jp
jecxz
or
cmpsl
sub
lret
jne
lods
add
dec
arpl
mov
jmp
mov
mov
add
std
movsb
sub
jg
mov
aam
popf
mov
inc
mov
pop
fistpl
out
jno
push
fmuls
pop
inc
xchg
movsl
xchg
mov
int3
mov
rorb
scas
pop
jns
inc
mov
hlt
xchg
xorl
mov
and
xor
cmp
dec
sub
test
mov
ljmp
push
fwait
dec
mov
mov
js
les
pop
mov
test
jb
push
push
add
xchg
xchg
testl
dec
xchg
fwait
xor
sub
cmp
aas
outsl
cld
mov
arpl
push
stos
mov
repz
xor
and
lahf
int3
fsts
addb
inc
lahf
movsl
jns
pop
xchg
fcmove
inc
js
xchg
push
mov
and
repz
jecxz
lea
push
jb
push
mov
cmp
cld
cmc
sti
lret
cmpsl
data16
jo
jp
or
xchg
int3
jle
sti
les
aam
ret
mov
scas
int3
mov
js
mov
cmp
cmp
repz
pop
mov
popa
xchg
mul
inc
outsl
sahf
sub
dec
int
int
test
pusha
mov
pop
je
mov
dec
xor
mov
lahf
add
std
add
xchg
xchg
mov
add
loopne
out
in
mov
jl
outsb
xchg
fistpl
xchg
pop
cmp
pop
or
mov
cmp
icebp
nop
lea
cmc
xor
pop
mov
sbb
sub
out
add
sbb
sti
inc
inc
pop
in
and
lods
xor
testl
or
inc
sbb
mov
pop
or
nop
sub
jbe
aam
out
pop
pop
sti
movsl
stos
jnp
push
dec
std
movntq
jecxz
mov
aad
jns
cmp
gs
bound
jg
std
lds
ss
or
ljmp
xchg
sbb
out
aam
push
jg
lods
gs
cld
jo
sub
js
mov
push
adc
add
sbb
or
lcall
mov
hlt
pushf
cmp
das
popf
pop
lock
or
in
or
ds
lret
ja
jae
mov
fdivrs
jns
dec
lea
push
inc
popf
lcall
pop
sub
sbb
cltd
cs
shrb
push
sub
out
loope
icebp
stos
xchg
nop
int3
add
fdivl
jne
sbb
xchg
mov
dec
sbb
add
fimuls
hlt
icebp
nop
xlat
test
adc
pop
mov
repnz
pop
cmp
rcr
and
popf
jnp
push
mov
sub
pop
clc
and
jae
mov
sub
stos
xchg
mov
adc
mov
push
enter
sub
pop
jg
adc
sbb
xlat
mov
and
mov
cs
mov
cmp
mov
add
sub
out
pushf
loope
xlat
pop
inc
in
mov
rorl
xor
sbb
pop
adc
lods
pop
dec
fwait
push
sub
dec
sbb
or
loopne
mov
ja
xchg
negb
nop
cmp
rcrl
jo
dec
addr16
mov
stc
sub
mov
insl
sar
mov
shrl
sbbb
xor
jo
push
and
mov
fcoml
mov
push
or
fnstcw
iret
or
or
inc
shll
or
sub
cmp
and
and
mov
mov
jge
or
mov
scas
add
lcall
negb
push
insb
icebp
mov
sbb
xchg
sub
mov
cmp
mov
mov
xor
lds
fcomps
shll
sub
popa
addr16
inc
or
xchg
xchg
mov
rclb
int
dec
lods
outsl
ja
repnz
mov
dec
outsl
pusha
call
push
jecxz
or
cmpsb
and
jg
icebp
jp
das
ds
out
stos
and
loope
mov
ja
bswap
xchg
dec
xchg
jne
inc
jle
and
jle
shll
push
scas
sbb
push
mov
mov
pop
repz
push
push
mov
rolb
sbbb
out
fdivs
in
cld
out
ret
and
jno
and
repnz
loope
andb
push
mov
mov
xor
loop
mov
out
lret
mov
cmp
cwtl
xorl
inc
sub
loopne
sbb
out
push
lods
cltd
mov
test
fnstenv
dec
pop
dec
push
xor
mov
add
mov
adc
cs
add
scas
mov
ljmp
in
mov
sub
and
aad
sbb
adc
and
push
jge
cmpsl
icebp
mov
or
push
in
and
inc
and
xchg
push
sbb
test
sub
mov
mov
ret
mov
shll
dec
or
lret
inc
inc
mov
push
shll
cmp
push
in
pop
push
insb
and
cmc
mov
mov
fisttpl
inc
in
and
mov
fildl
mov
sbb
rorb
stos
and
jle
lret
mov
std
pushf
pop
sbb
lods
mov
sbb
and
dec
or
imul
mov
sbb
jae
adc
outsl
xor
push
repz
inc
cmp
ret
mov
sti
mov
imul
out
pushf
and
repnz
jecxz
addr16
inc
ret
mov
insl
js
shll
sub
xchg
inc
cmp
fdivr
mov
enter
cmp
notb
xchg
lods
cmpsl
mulb
xorl
mov
shr
std
in
sahf
sbb
and
lret
in
lods
idivb
arpl
bnd
stos
dec
xchg
cltd
or
mov
das
testl
loope
xor
test
inc
jnp
cmpsb
mov
dec
adc
mov
and
and
xchg
mov
lret
sub
adc
mov
sbb
sbb
push
test
adc
int
cmp
push
cmp
dec
mov
xlat
fadd
roll
out
int3
push
ss
xchg
or
cltd
imul
in
daa
pusha
les
jno
in
dec
or
cmp
adc
fs
lds
dec
add
sub
adc
int
mov
dec
jbe
test
test
mov
jbe
mov
rorb
icebp
out
lret
or
je
pop
movsl
mov
and
aas
scas
add
adc
andb
mov
and
inc
dec
mov
xchg
int3
jecxz
ret
rcrb
je
cmc
jne
clc
mov
clc
test
and
pop
mov
push
mov
jp
xchg
mov
adc
js
fdivrs
pop
jg
cli
mov
fcoml
decl
pushf
jne
jbe
ds
scas
sub
inc
jge
or
sarl
mov
daa
data16
jb
pop
nop
idivb
not
call
mov
prefetcht1
cmp
pusha
imul
inc
shrb
loope
inc
jbe
adc
scas
mov
lahf
dec
xor
mov
clc
stos
js
repz
sub
mov
dec
mov
test
cld
mov
mov
mov
inc
jge
jne
test
push
stos
and
lock
push
sbb
adc
pop
imul
jg
movsb
dec
mov
pop
es
lock
loope
mov
or
arpl
push
ja
sbb
dec
int3
loopne
mov
fwait
push
subb
dec
push
repz
mov
sti
adc
lock
xchg
sub
mov
jle
fwait
dec
cmpsl
xchg
add
adc
cmpsb
push
inc
jge
jne
ss
rcr
fidivs
and
movsl
js
in
sbb
rcr
loop
cmp
test
test
fildll
stos
mov
in
push
iret
loopne
addb
stos
mov
jle
xor
adc
sbb
nop
jmp
pop
test
inc
pusha
xchg
inc
loopne
cmpsl
mov
cltd
adc
pop
imul
xor
mov
lcall
ljmp
arpl
xor
ss
aas
and
test
mov
sub
ss
cmc
cmp
push
iret
and
xor
lea
and
movsl
adc
aaa
bound
fbstp
mov
sti
xchg
dec
inc
cld
sub
push
scas
outsl
adc
sti
dec
or
jae
loopne
sarl
push
mov
fwait
in
mov
pop
pop
gs
rclb
mov
mov
inc
insb
fisttpl
setnp
cmpsl
int3
loope
cli
pop
push
inc
imul
and
mov
lods
jecxz
pop
mov
push
jmp
pause
xchg
pop
and
xor
sub
aam
push
out
inc
es
adc
fsubrs
dec
adc
rorl
pusha
mov
popf
xchg
push
shll
iret
in
inc
push
stos
lds
mov
ds
in
es
lret
ficoml
outsb
rclb
and
test
xchg
stc
test
rclb
test
cmp
or
outsl
xor
daa
add
es
xchg
push
xchg
lret
inc
adc
or
out
ja
adc
jns
fsubl
sub
mov
and
adc
sub
pop
mov
pusha
and
xchg
sub
adc
inc
pop
lea
jp
add
and
loop
stos
dec
xchg
mov
sbb
cld
and
mov
sti
jle
dec
pop
xchg
sbb
nop
xchg
js
push
addb
cld
andl
daa
pop
push
es
mov
push
push
cmp
push
inc
daa
orb
add
jno
push
test
clc
jmp
ret
mov
or
xlat
aas
pop
fidivrl
outsl
sub
add
mov
aaa
dec
push
cltd
dec
addl
shlb
push
fmuls
les
sti
cmp
stos
sbb
sbb
test
and
enter
lret
mov
dec
popa
out
pop
loope
xchg
push
addr16
xor
out
imul
test
ret
stos
mov
pop
xchg
xor
mov
sub
loopne
push
jle
lods
cmpsb
sbb
adc
and
fs
xor
jns
xor
outsb
iret
and
es
sbb
jbe
sub
or
imul
push
and
add
jno
mov
mull
testb
cmc
js
xchg
cmpsl
out
dec
and
rcrl
lods
xor
sub
out
xchg
pop
test
inc
lds
mov
fsubl
dec
ljmp
jns
cli
lcall
or
imul
std
pop
jmp
mov
insb
xor
adc
dec
mov
inc
jmp
dec
add
xor
cmp
clc
dec
fcomps
lods
mov
mov
lret
cmp
mov
xor
stos
pop
movsl
or
fbld
inc
sbb
mov
push
in
testl
jl
mov
pop
outsl
jnp
leave
dec
shll
jp
sub
data16
jne
mov
fstpl
xchg
xor
movsb
jns
mov
mov
adc
subl
mov
add
pop
hlt
aas
mov
xor
jge
cmp
xchg
jge
and
jae
in
inc
or
jb
fmull
cli
cmp
fstl
stc
mov
xchg
in
clc
jmp
add
or
and
icebp
sti
mov
xlat
out
inc
jmp
test
push
cmp
nop
pop
fbstp
xor
pop
mov
lahf
les
fstpt
aam
pop
push
std
stos
or
fnstcw
js
jbe
sbb
test
xor
inc
inc
mov
in
std
jnp
subl
stos
nop
add
sti
mov
out
cmp
pop
stos
add
jmp
adc
mov
pop
cmp
xchg
jno
jb
jbe
jne
jge
jnp
mov
xor
cmpb
repnz
mov
in
mov
in
and
push
sub
dec
shrl
loopne
std
jo
jp
add
loop
ja
dec
mov
jmp
lods
fldl
mov
andb
insl
xchg
data16
movsl
cmp
xchg
fs
push
rorb
rorl
xchg
inc
sub
sbb
or
jb
sub
adc
inc
movsb
cmp
dec
jno
aas
inc
enter
icebp
orb
fdiv
jo
mov
shlb
fwait
out
sub
jb
rcll
dec
inc
mov
add
cs
jbe
pop
pop
push
bound
xlat
adc
pushf
add
push
in
lahf
mov
push
stc
or
or
jmp
andb
push
lods
mov
xlat
shl
push
lea
ljmp
or
sbb
xor
stos
sahf
sub
loop
pop
inc
sub
or
imul
xor
mov
fsts
xchg
addr16
pop
add
sub
lea
sub
test
in
dec
mov
test
stos
dec
lock
gs
mov
push
and
or
fistpl
xchg
and
fwait
in
loop
inc
mov
jecxz
mov
pusha
inc
push
lods
xor
sub
subl
inc
mov
scas
jge
jnp
in
sub
push
arpl
pop
xor
mov
xchg
lahf
add
aas
enter
sarl
arpl
push
sub
ret
mov
xchg
xor
mov
and
popf
mov
fiadds
jae
pop
insl
add
scas
repnz
pop
pop
mov
fcoml
cmp
mov
in
jmp
lea
jb
sub
leave
adcl
sub
fisubrs
stc
sbb
ret
int
jns
mov
ds
mov
xchg
dec
repz
adc
mov
cli
dec
push
lea
push
lea
jnp
and
enter
ja
mov
fcoml
out
shrb
add
sub
mov
jle
jge
xor
ret
sti
out
popf
push
icebp
shrb
mov
loope
mov
mov
adc
xchg
sub
cmp
jno
push
push
mov
decb
push
and
cmp
add
clc
dec
loope
ljmp
test
push
push
push
mov
dec
imul
push
test
pop
jns
adc
insb
mov
int3
std
lea
and
sti
inc
cwtl
imul
mov
ret
loopne
lods
pusha
xchg
insl
pop
iret
jo
and
sub
inc
mov
jge
and
jno
loope
fcoms
insb
xor
lahf
adc
test
lock
mov
lret
push
jg
fimuls
out
cmp
rol
sbb
mov
sbb
push
dec
leave
dec
push
dec
sub
or
imul
push
frstor
or
xchg
testb
push
push
jo
mov
add
addr16
pop
clc
jnp
leave
inc
js
push
sbb
das
fistl
cmp
pop
jp
push
dec
cmc
xor
sbbb
stc
ret
and
dec
gs
cmp
jecxz
stc
ss
lcall
fwait
es
les
stos
xor
dec
lret
fsts
cs
cmc
mov
fisubs
mov
lods
shlb
mov
test
inc
andb
std
xchg
pop
mov
incb
dec
ja
sbb
rcrb
cmp
int
arpl
mov
test
scas
mov
mov
loopne
rclb
cmp
lds
pop
push
test
ret
orl
imul
fstpl
sbb
dec
jmp
add
popa
fnsave
xor
or
and
stos
push
movsb
push
inc
hlt
xor
mov
sbb
adc
pop
test
inc
movsb
das
dec
and
push
xchg
push
icebp
hlt
orl
xor
dec
loope
sub
stc
xchg
int3
jb
xchg
xor
xor
outsb
stos
lods
into
jmp
sbb
mov
adc
test
cmp
adc
ret
repnz
pop
and
inc
roll
test
jge
mov
mov
pop
push
mov
out
mov
jp
mov
dec
cmp
shlb
lods
cmp
xor
mov
cmp
cmpb
mov
outsb
inc
add
in
cli
push
nop
lock
mov
push
pop
jp
arpl
pushf
jbe
xor
inc
stc
clc
nop
pop
jne
sub
ror
jbe
loope
pop
or
sbb
xor
icebp
mov
jl
jg
mov
sub
jne
into
xchg
call
adc
cltd
and
cmp
push
cmpsl
xor
daa
xor
push
mov
xchg
or
les
cmpsl
aad
fidivl
push
or
nop
test
cld
loop
frstor
mov
sahf
enter
out
sbb
cmp
add
mov
pushf
in
cvtdq2ps
mov
pop
xchg
mov
inc
push
stc
nop
push
lcall
push
push
xor
push
and
mov
sahf
jg
push
mov
pop
jl
pop
push
adc
cmp
out
mov
fwait
cmc
mov
outsb
jecxz,pt
push
xor
cmc
jbe
sahf
xlat
adc
test
push
and
xchg
loopne
fs
adc
push
mov
int
shrb
bound
fwait
lcall
and
cld
js
outsl
sub
or
mov
add
fwait
insl
inc
dec
xchg
adc
jl
pop
repz
inc
push
pop
lret
movsb
and
cmc
sub
cmpsb
xchg
test
in
out
popa
or
mov
imul
add
push
aad
in
mov
out
jp
mov
call
cmc
jle
gs
rcl
js
jno
mov
and
cmp
je
shll
cld
inc
sbb
push
and
pop
in
mov
mov
loopne
lods
jb
jge
lret
pop
fcomp
inc
les
push
and
in
divb
add
push
pop
adc
out
dec
pop
lods
xor
scas
sub
add
mov
andl
mov
lds
add
jnp
sbb
dec
cmp
and
aam
pop
and
mov
cli
jp
lock
aam
pop
cmp
movsb
fcmovbe
nop
xor
mov
addr16
jmp
adc
fsubl
int3
push
mov
add
dec
adc
inc
movsl
jae
adc
jae
daa
sub
inc
mov
imul
fstl
mov
in
add
jp
sub
mul
testb
or
out
das
jno
sbb
pusha
adc
inc
idivl
xchg
ret
ret
es
andb
push
into
mov
push
cmp
bound
and
mov
dec
cmp
mov
loop
xchg
mov
mov
sbb
cmp
fisttpl
test
jns
mov
loope
fs
ds
sub
insl
xchg
and
add
mov
leave
push
inc
enter
popa
mov
cmp
call
xor
adc
jmp
stos
outsb
lds
addb
sti
je
lcall
pop
ds
leave
xchg
add
inc
mov
into
push
out
sub
cwtl
repnz
inc
cmp
aad
inc
add
stos
lods
out
into
xchg
outsb
pop
movsl
data16
xchg
push
arpl
arpl
cltd
pusha
cmp
xchg
xor
jecxz
jecxz
push
inc
lret
cmp
xchg
push
or
iret
jle
inc
outsl
loope
adc
nop
cld
push
aaa
mov
out
movsl
xor
arpl
sarl
xor
fimull
sbb
xor
loopne
dec
xchg
dec
cmp
outsl
add
mov
loope
and
lods
out
cltd
pmaxsw
push
push
add
cltd
sub
popa
cmp
sbbl
xchg
push
lds
add
mov
lds
or
sbb
rcll
dec
xor
or
push
test
cmpsb
inc
orl
nop
dec
sbb
inc
rcl
mov
jl
aaa
xchg
xchg
xchg
or
pop
pop
rcrb
jmp
mov
inc
decb
adc
and
sub
or
loope
pop
mov
loope
or
movsl
mov
jge
rcll
inc
pop
gs
das
inc
imul
pop
mov
mov
bound
ljmp
adcl
push
popa
lcall
sub
aas
mov
jns
movsb
jae
out
or
inc
roll
xchg
pusha
sarb
xor
dec
xor
and
iret
xchg
or
or
mov
insl
in
jmp
pop
jg
out
pop
test
testb
cmp
int3
daa
dec
movl
or
arpl
add
adc
add
push
ret
jo
and
jae
roll
into
in
push
sbb
sbb
loop
fcomip
fistl
and
xchg
xchg
sbb
fs
jae
leave
jg
mov
or
ss
jns
mov
push
push
cmp
addb
mov
fdivl
shll
loop
and
das
jg
aas
out
mov
mov
aad
mov
popfw
fnstcw
mov
push
sbb
xchg
roll
sarl
sarl
cli
push
push
insl
pop
sub
rcr
mov
push
mov
ja
push
scas
jp
cmp
sub
push
fcompl
std
loope
mov
lcall
rol
cld
mov
std
xor
xchg
mov
xchg
fmuls
cmpsb
leave
insb
push
xchg
xchg
dec
pusha
outsb
mov
mov
cmp
and
int
and
adc
cli
inc
iret
xlat
ret
dec
pop
sahf
xchg
mov
popf
clc
stc
cmp
jmp
mov
ret
into
pop
add
mov
or
jmp
imulb
mov
test
popa
xchg
fldl
test
ljmp
andb
dec
enter
push
rcr
push
adc
call
dec
scas
in
arpl
jecxz
dec
sub
dec
rcr
mov
and
mov
inc
js
push
outsl
mov
divl
push
fbstp
cmp
jmp
mov
das
push
inc
inc
adc
negb
dec
lods
cmp
jne
pop
iret
std
or
nop
roll
or
addr16
adc
cli
add
daa
push
mov
sbb
and
cmpsl
push
insb
pop
jmp
jno
mov
mov
lods
cmp
adc
clc
pusha
cld
insl
aam
mov
cmp
movsb
sbb
cs
leave
jo
sbb
stc
nop
js
jnp
pop
push
mov
stos
add
mov
sbb
cmp
inc
mov
leave
cmc
outsl
lds
xor
lods
push
push
shlb
dec
jge
inc
and
or
xchg
aaa
sub
xor
push
jnp
pop
jl
sub
xchg
xchg
mov
mov
sbbl
loopnew
outsl
dec
cmp
stc
inc
divl
inc
jecxz
aaa
mov
pop
pop
pop
shr
movsb
cmp
popa
lods
mov
jmp
xor
sub
shrl
lahf
push
lret
cwtl
stos
jmp
xchg
roll
fadds
cltd
and
ret
mov
aad
jmp
popf
push
orb
insl
sbb
fwait
and
jge
push
arpl
int
outsl
fisttps
and
jmp
cmovns
xchg
jnp
rcl
xchg
shll
roll
scas
push
sub
cltd
xchg
das
or
push
insl
inc
and
fwait
add
lret
popf
mov
mov
orb
inc
scas
addl
loope
das
mov
dec
call
pusha
inc
jns
in
adc
sbb
xor
cli
and
mov
dec
jp
add
lcall
lods
add
xlat
neg
test
mov
dec
xchg
push
mov
mov
pop
jne
mov
in
adc
xchg
lods
cmp
and
int3
pop
cmp
fldt
mov
xchg
fcompl
shll
or
icebp
fsubs
test
pop
mov
outsb
ror
cmp
push
in
test
insl
push
pop
add
mov
xor
xchg
jns
jb
sti
push
ret
adc
loope
in
pop
cwtl
arpl
push
aaa
call
sbb
jge
in
cmp
and
call
push
and
gs
jae
rorl
inc
mov
outsl
ret
testl
lcall
fs
xchg
jns
pop
pusha
data16
fsubs
loope
mov
sub
add
xor
lcall
xchg
jle
dec
xor
out
mov
sub
jns
mov
mov
sti
inc
sti
pop
xor
stc
outsl
cmp
inc
data16
mov
lock
shlb
dec
movsb
pop
jmp
loop
or
in
in
push
popf
cwtl
mov
hlt
push
test
jmp
movsl
xchg
shll
nop
out
call
jl
in
push
icebp
jnp
or
std
adc
test
imul
lea
push
test
or
scas
in
ljmp
mov
xor
cltd
sbb
xchg
xchg
dec
jb
sub
jl
filds
mov
sbb
mov
xchg
pop
or
clc
mul
cmp
sub
int
adc
push
popa
out
push
pop
adc
repnz
jge
cmp
mov
jge
ja
scas
loope
mov
fcoms
sarb
fiadds
lret
iret
xchg
jle
mov
adc
sbb
int3
movsb
lods
mov
adc
mov
test
adc
sahf
clc
addl
jmp
jecxz
mov
xchg
fcoml
add
inc
push
mov
popf
push
xchg
xchg
test
out
push
add
fs
pusha
mov
inc
out
fdivl
cmp
mov
jno
push
popf
icebp
pop
fwait
sbbb
nop
repnz
jae
in
jge
pop
out
push
push
out
ja
inc
xchg
ret
add
push
or
shll
mov
push
pop
mov
outsb
cmpsb
lds
cltd
adc
jb
outsl
movsl
mov
rcrb
subb
mov
leave
xorb
data16
stc
lahf
loopne
inc
cmp
sub
mov
xor
popa
lea
or
pop
fisubs
xor
push
popf
adc
outsl
adc
cs
push
scas
les
jl
cmpsl
aas
repnz
pop
jl
sti
push
cmp
xor
stos
pop
aaa
fdivp
cwtl
add
sub
dec
nop
rcrl
xchg
fwait
push
sub
dec
pop
sub
nop
sarb
pop
sbb
sbb
dec
in
jne
mov
add
pop
loop
mov
test
lahf
stc
fidivrl
repnz
iret
out
cmpb
and
imul
and
test
and
xor
iret
mov
sbb
add
or
arpl
sub
push
pop
and
xor
mov
imul
outsl
push
scas
add
imul
jae
punpcklbw
sbb
int3
out
shll
jne
add
xor
shl
loop
fbstp
dec
cmp
xor
mov
in
cmp
out
in
loopne
add
popf
inc
fnstenv
or
push
cmp
icebp
mov
ret
fs
lret
fcom
inc
aas
icebp
sbb
cmp
es
pop
sub
cld
dec
and
das
mulb
cmp
stos
pop
loopne
imul
out
mov
in
and
jp
adc
cmp
std
test
push
outsl
push
xchg
adc
push
idivl
mov
cmpsb
add
xchg
mov
sbb
nop
sti
std
pusha
push
cmc
fnstcw
in
divb
xchg
out
stc
mov
cmp
test
shr
jb
into
cmpsb
mov
jnp
icebp
lods
fcmovu
mov
imul
fdivrp
sbb
sbb
pop
cltd
mov
mov
scas
mov
dec
xlat
aas
gs
xchg
adc
lcall
pop
inc
fsts
mov
lret
pop
xor
mov
xchg
dec
add
fwait
xchg
ret
mov
out
xchg
je
dec
and
mov
loope
adc
lret
mov
xor
fcompp
mov
insl
inc
sub
sbb
jp
icebp
push
sbb
pop
bound
icebp
mov
push
mov
cltd
cmc
add
jp
out
in
lods
add
cmp
addl
xor
pop
cmp
cli
jno
js
xchg
push
xchg
mov
popa
jl
xchg
or
jmp
mov
sahf
dec
xor
xlat
inc
mov
pop
mov
mov
fstl
add
mov
push
xor
add
es
faddp
stos
es
mov
xor
pop
out
dec
cwtl
decb
aaa
fcmovnbe
xorl
lea
enter
or
addr16
fmull
or
push
dec
sbb
xor
faddp
inc
jbe
add
ljmp
and
or
xchg
jecxz
jnp
push
adcl
jle
leave
mov
jo
cmpsl
inc
jge
and
cs
cs
jp
int
lods
pop
sub
pop
scas
xor
jne
cltd
aas
push
cmpsl
loop
xchg
mov
roll
inc
and
dec
pmaxsw
pushf
outsl
push
clc
dec
cmp
sub
dec
adc
jne
mov
dec
mov
and
aad
mov
int3
inc
pop
push
divb
mov
into
cwtl
mov
shlb
sub
sbb
std
xchg
cld
daa
pop
mov
jno
lret
aam
ret
loop
push
leave
ret
out
mov
mov
sti
add
in
cmpsl
cmp
mov
push
ds
mov
inc
add
mov
repz
jo
das
xchg
iret
mov
pop
mov
adcl
pop
dec
lret
das
or
push
roll
in
lcall
mov
jno
nop
push
jae
addl
dec
pop
pop
sbb
mov
mov
stc
cld
cmp
out
in
gs
cwtl
stos
xchg
pop
push
pushf
fbld
int
sbb
ss
jecxz
pop
sub
xchg
and
xchg
sti
mov
ret
std
dec
icebp
cmp
xchg
adc
cmp
imul
fldt
cwtl
or
cmp
fdivr
adcb
and
adc
dec
loopne
mov
fldcw
jae
data16
fstpl
icebp
or
lahf
rcrb
adc
gs
add
jg
insl
jbe
add
inc
push
enter
scas
lcall
mov
adcl
dec
shlb
scas
or
cmp
insl
push
pop
push
xchg
mov
sbb
test
hlt
mov
xchg
nop
sbb
and
icebp
mov
ret
mov
ret
insb
cmp
movsb
sub
call
and
inc
cmp
jg
mov
and
jmp
movsb
ja
mov
and
sbb
cmp
pop
jg
std
mov
inc
inc
adc
jns
or
ret
jmp
insl
or
mov
stc
adc
imul
in
cmc
adc
inc
fsub
push
xor
ds
jp
fildl
repz
pop
aas
inc
nop
pop
xchg
and
adc
xchg
andl
inc
xchg
out
cmp
out
push
outsl
xchg
jae
divb
fwait
and
ficompl
jnp
arpl
mov
fcomip
xor
aad
and
mov
or
insb
cmp
sbb
add
push
aad
sub
gs
mov
add
sbb
push
cli
inc
pop
adc
inc
sbb
mov
add
inc
call
cli
jle
adc
in
int
shlb
adc
jecxz
lahf
js
inc
out
inc
adc
loope
mov
mov
mov
stos
stos
xchg
push
popa
mov
and
mov
mov
arpl
xlat
push
insb
mov
cmp
lods
shrb
push
cmpsb
notl
call
mov
adc
mov
add
inc
push
in
mov
push
jmp
mov
shrb
pop
mov
lret
jno
sub
daa
mov
xor
mov
icebp
lret
fdivp
imul
sarb
xor
pop
cld
jae
mov
mov
add
and
push
push
fisubrl
test
inc
nop
mov
mov
sbb
loope
pop
outsl
mov
jle
cmp
int
fisttps
jge
test
enter
cmp
sub
xchg
lcall
jbe
movsl
and
push
jl
repz
jp
xchg
je
jmp
xchg
mov
dec
mov
scas
ret
leave
or
fistpl
in
into
jmp
push
xor
push
sbb
icebp
add
gs
shll
or
mov
dec
inc
shrb
dec
mov
aam
aam
in
pop
out
fsubrl
cwtl
subb
fldl
xchg
xchg
popa
adc
outsl
adc
into
sahf
inc
pop
sbb
jg
inc
popa
ret
sti
leave
es
inc
inc
mov
ret
cmpb
cmp
jmp
dec
and
rcl
mov
das
cmp
test
inc
dec
mov
jle
aas
popa
lret
mov
test
fnstenv
out
test
loop
gs
xchg
jl
sub
jb
int3
mov
xchg
jne
test
pop
std
shr
sarb
test
test
xchg
or
call
push
cs
mov
imul
cli
push
sahf
movsb
xchg
mov
and
add
icebp
cmp
inc
fsubrs
pop
fdivrl
cmp
inc
pop
pop
and
xor
adc
xchg
das
inc
and
aas
in
dec
test
cmp
test
dec
divb
fnstcw
mov
or
inc
loopne
js
add
mov
jmp
cmovo
roll
je
and
aad
sub
or
and
xchg
fsubr
cmc
xor
fwait
inc
sbb
subb
push
mov
pushf
mov
mov
stos
dec
into
into
mov
int
bound
jo
sub
add
cmpsl
dec
loopne
add
lds
mov
dec
cmp
jl
out
cltd
jae
addr16
rcl
push
in
push
adc
test
es
shll
das
dec
add
cmp
pop
enter
pop
mov
pushl
movsl
cmp
sbb
pop
sbb
jle
ficomps
fstp
ljmp
inc
cmp
cmp
out
hlt
ljmp
aaa
push
pop
test
lods
push
adc
addr16
test
jo
or
push
mov
push
add
mov
mov
sarl
sbb
loopne
imul
je
ret
testb
mov
sbb
stc
scas
push
aas
cmp
xor
jmp
jmp
iret
neg
cmp
xchg
cmp
ficomps
xchg
ret
push
js
pop
shl
push
test
xchg
cmp
xorb
hlt
gs
jno
sub
dec
adc
sbb
xchg
in
jecxz
clc
loopne
and
xchg
pop
xchg
inc
xor
xor
and
push
pop
sbb
sub
xlat
out
nop
cwtl
cwtl
push
xchg
std
repz
mov
insl
int
push
mov
sub
insl
or
ljmp
cmp
dec
jo
jno
and
mov
sti
sub
pop
insb
in
cmp
adc
into
mov
mov
fldl
push
push
mov
jmp
push
inc
mov
pop
ss
mov
push
insb
into
sub
mov
add
and
cs
mov
jecxz
shrb
inc
mov
inc
or
xor
ficoms
and
pop
xor
xchg
loope
outsb
mov
or
dec
movsb
inc
mov
add
in
sbb
data16
dec
dec
mov
leave
add
outsb
js
fimuls
in
mov
pop
jp
xchg
inc
daa
fwait
loopne
xchg
sbb
in
sub
test
inc
mov
out
inc
mov
out
jl
cmp
in
aam
out
mov
fwait
sar
mov
mov
into
out
jge
mov
xchg
push
xchg
cmp
shl
mov
out
xchg
mov
cltd
xor
mov
inc
addr16
enter
sub
add
popa
in
jmp
and
sub
cs
jo
pop
cmc
pop
aas
gs
fs
push
adc
loopne
outsl
lods
fs
repz
ret
mov
jg
test
fsub
dec
dec
flds
orb
push
cltd
jne
cmp
adc
mov
ret
aad
test
cmp
sahf
sahf
or
outsl
cmpsl
out
cmp
lock
mov
aam
jle
pushf
dec
sbb
fwait
jne
inc
orb
mov
std
mov
jecxz
and
xor
aas
pop
lock
fmull
adc
mov
lds
arpl
mov
cltd
pop
or
loop
pop
outsb
movsb
mov
sub
sub
lahf
test
dec
pop
ja
test
rorl
int3
jb
push
xor
fidivs
xchg
mov
xchg
pusha
and
push
pusha
jg
cmp
ss
aas
test
cmp
jno
xchg
aaa
into
movsb
repnz
jmp
test
pop
outsl
or
push
mov
push
out
ret
call
dec
xchg
cmp
or
jecxz
add
ja
sbb
jecxz,pt
stos
add
js
ljmp
es
rcr
and
sub
fstps
mov
jno
mov
fildll
fsubl
in
outsb
xlat
pop
sbb
adc
mov
or
or
lea
loopne
xchg
xchg
pusha
adc
jmp
xchg
test
xchg
je
popl
jno
inc
shlb
sub
aam
pop
jno
xlat
enter
mov
clc
cltd
mov
fiadds
movsb
add
movsb
fisubrl
adc
push
mov
cld
fwait
mov
jp
push
mov
cmp
xchg
xchg
mov
or
shlb
cmc
ret
rep
lock
pop
aas
movd
xchg
sub
nop
adc
xchg
out
or
cmc
dec
test
scas
ret
out
out
adcl
and
arpl
sbb
add
or
cmovo
mov
bound
inc
pop
addr16
mov
lret
pushf
jecxz
mov
lahf
ficomps
sub
fstps
push
adcl
cmpsb
in
sbb
cli
ret
jge
jmp
xchg
sti
scas
or
faddp
inc
xor
add
cli
sbb
cmp
pop
jl
dec
cli
xchg
shlb
inc
lock
adc
daa
push
pop
ficoml
pop
cltd
aas
rclb
cld
xor
dec
test
js
imulb
sub
add
stc
and
enter
stc
pop
pop
int
push
xor
lcall
imul
lahf
lods
mov
aaa
mov
pop
rcrl
adc
xchg
jne
ljmp
fs
idivb
aad
call
xchg
insb
popf
mov
or
movsl
iret
sahf
enter
add
rorb
pop
mov
cmovge
jge
data16
mov
imul
sahf
jg
jnp
imul
and
sbb
mov
xor
ss
repz
sbb
adc
jae
mov
push
jecxz
fiaddl
push
in
or
push
stos
popf
mov
repz
in
js
mov
push
mov
xor
cmp
lock
rcrb
and
repnz
mov
add
cmc
inc
dec
sub
inc
pop
lds
dec
iret
es
mov
leave
mov
daa
add
xor
movsb
stos
and
rcr
icebp
insb
ja
mov
lea
jae
shrl
in
sahf
lea
cmpsb
xchg
stc
inc
pop
push
clc
into
movsl
jle
adc
xchg
jno
add
lods
mov
add
testb
aam
out
add
push
loope
xchg
sbb
dec
add
addr16
jno
xchg
jmp
stos
je
and
fdivs
xchg
popa
mov
lds
inc
sbb
fcomi
add
pop
aam
xchg
int3
push
cld
mov
jl
cmpsb
jno
ljmp
inc
push
mov
lret
mov
out
inc
rcrl
pop
jge
jecxz
xchg
rorl
fwait
mov
dec
sarb
out
lds
inc
sbbb
addr16
inc
push
sarb
mov
push
mov
push
add
inc
cmp
pop
cmpsl
fmuls
inc
lock
cld
sbb
inc
mov
mov
hlt
cmp
cltd
inc
xchg
sub
aas
sub
inc
and
std
add
jmp
xor
pop
pop
fs
lret
out
pop
aam
ljmp
aaa
frstor
mov
jmp
mov
xchg
xchg
adc
scas
jns
cltd
dec
mov
idivb
pop
sbb
out
testb
fwait
sub
jno
xor
js
mov
xor
push
scas
jbe
push
fisttpl
rcll
dec
cmpsb
ja
dec
xchg
cwtl
add
aas
rcr
and
lfs
aaa
shll
mov
push
adc
popf
mov
push
je
lret
jmp
leave
out
dec
cmpsl
mov
xchg
adc
pop
and
imul
xor
pop
mov
pop
je
or
cmp
pop
pop
test
xlat
xchg
stc
sbb
rolb
out
aam
xchg
loopne
sub
dec
in
hlt
pop
adc
push
aaa
scas
sbb
mov
xchg
sahf
adc
or
add
xor
jae
stos
loope
outsl
mov
jno
push
inc
pushf
cmp
test
or
bound
push
insl
lock
xchg
jo
ret
mov
mov
pop
cmp
adcl
pop
xor
bound
xchg
out
inc
jl
pop
push
lret
jne
fildll
lock
mov
xor
iret
loop
pop
dec
push
dec
aad
xchg
cmpsb
xchg
out
mov
pop
out
jbe
adc
mov
lret
testb
mov
fs
outsb
ret
int
outsb
cld
in
push
je
aad
cmpsl
int
adc
jns
js
insb
pop
cmp
daa
push
shlb
mov
adc
stos
hlt
xor
mov
dec
pop
push
xchg
xor
inc
mov
pop
movsb
xchg
das
out
mov
pop
sbb
in
fcmovnbe
fs
out
xchg
and
pop
out
icebp
stos
mov
xor
add
pushf
pop
shrl
pop
fiaddl
mov
push
fsubs
mov
add
lcall
jecxz
insl
sbb
test
pusha
lea
and
push
repnz
lock
scas
xchg
ret
outsb
add
movsb
jmp
adc
or
lcall
faddp
imul
lds
mov
sbb
inc
cmp
pushf
pushf
jns
or
out
mov
cwtl
pop
push
testl
jno
xchg
out
mov
push
add
repnz
fwait
cmp
dec
mov
mov
push
xchg
fwait
xor
out
mov
adc
dec
out
xor
aam
cli
mov
dec
enter
cld
pop
pushf
xchg
and
sbb
pop
push
stos
ljmp
imulb
lret
add
cmp
movb
scas
int
sbbl
sbb
pop
out
inc
and
inc
sbb
cmpsb
jmp
xor
xor
cmp
loope
stos
jae
push
mov
imul
adc
mov
mov
clc
sbb
ljmp
imul
ret
sbb
or
loopne
mov
adc
and
push
mov
push
sbb
jp
jno
add
push
push
adc
pop
lods
pusha
mov
aaa
pop
dec
push
das
popf
mov
pop
jb
mov
mov
insl
push
pushf
andl
push
dec
inc
cmc
icebp
pop
test
repz
cltd
rep
mov
xchg
or
adc
xchg
pop
mov
cmp
xchg
and
lea
into
mov
or
mov
mov
pop
lahf
sbb
jbe
mov
adc
push
mov
andb
or
and
outsl
shrb
pop
adc
jns
and
dec
fchs
sub
insb
cmc
xor
lret
inc
mov
pop
jbe
pmullw
mov
jmp
add
mov
xor
je
inc
imul
lods
clc
sarb
aaa
mov
gs
jbe
adc
arpl
xor
lcall
jl
dec
pop
insb
pop
into
sbbb
push
icebp
inc
in
push
inc
icebp
ffree
push
push
lods
into
push
mov
jp
mov
andl
sbb
add
push
jmp
adc
fs
popa
test
cmp
inc
std
jp
lds
mov
add
sbb
mov
cmc
loop
in
mov
jo
inc
xor
and
mov
movsl
aaa
pop
nop
jns
lods
mov
shll
test
rolb
pop
inc
movsl
lock
push
addr16
sbb
shrb
in
cmpsl
jp
jnp
dec
out
mov
leave
cs
inc
inc
or
xchg
dec
data16
adc
mov
and
cmpsl
scas
test
in
movsl
lods
cmp
dec
mov
jb
adc
les
sahf
mov
pop
out
xchg
cmp
shrb
inc
fwait
imul
cld
xor
mov
mov
mov
dec
add
and
and
movsl
add
add
faddl
cmp
mov
test
je
aas
xor
into
cmpl
test
mov
shl
nop
test
pop
into
push
mov
ds
push
inc
fisubl
scas
cwtl
add
icebp
fcoml
stc
mov
rcll
iret
dec
push
scas
xchg
aaa
dec
inc
dec
mov
add
lret
mull
mov
lret
mov
lret
fwait
ljmp
sbb
fcomi
cld
cmovns
fisttpl
divl
xchg
aas
in
adc
and
and
lcall
loop
mov
xchg
or
flds
out
add
lds
xchg
mov
push
add
imul
aas
pop
dec
lods
cmpb
cmpsb
neg
shll
das
gs
pop
popa
dec
loope
int3
frstor
add
or
adc
inc
mov
test
pop
data16
call
cmp
mov
dec
push
dec
mov
ja
test
cmp
stos
or
push
sahf
push
ret
aad
aad
mov
inc
mov
test
jno
call
dec
mov
mov
out
out
push
push
out
jbe
in
sub
ret
mov
xlat
in
rorl
das
and
test
mov
add
push
adc
movsl
scas
add
xor
mov
mov
outsl
mov
jp
out
mov
je
push
rcr
ror
ret
pop
add
jecxz
addb
xor
or
add
cmc
jg
jge
insl
jne
jl
or
pop
dec
repz
fnstcw
mov
insl
lcall
lds
nop
test
cmp
sub
dec
stos
fiaddl
loope
loopne
mov
pop
negl
jle
inc
cmp
inc
pushf
lods
arpl
aam
scas
jle
aas
popf
xor
mulb
add
lods
int3
iret
sbb
dec
push
push
out
sbb
push
addr16
mov
ffreep
out
mov
jp
jnp
rorl
mov
push
sarl
ret
jne
movsl
jecxz
xchg
adc
cmp
fldcw
cmp
sbb
clc
or
mov
or
ds
adc
rclb
sub
or
mov
add
int3
dec
push
movsl
jo
sub
ret
xchg
add
sbb
dec
jae
xor
aaa
pop
cmc
pop
inc
imul
mov
push
lahf
loope
pop
dec
xor
rclb
push
xchg
lds
std
addr16
pushf
push
out
inc
ja
lds
inc
hlt
add
pop
xor
cld
je
fbld
cmp
cli
stos
sbb
inc
dec
sbb
fcoms
push
shlb
and
cmp
dec
sbb
push
test
movsl
xchg
sbb
stc
iret
out
repz
fsubl
adc
inc
jnp
inc
test
in
leave
and
out
in
fsubl
jno
and
sbb
sbb
xchg
jb
dec
inc
pop
mov
jmp
push
push
pop
sub
out
xchg
fcompl
stc
daa
push
mov
mov
xchg
test
je
lret
cli
mov
mov
jno
es
rolb
push
mov
lahf
sti
fnsave
jle
popf
cwtl
cmp
fists
jge
enter
add
pop
faddp
lods
jecxz
pmuludq
or
or
js
ret
out
jecxz
mov
push
aaa
or
rolb
xchg
mov
mov
mov
and
mov
cmp
fs
jnp
lods
push
jo
lods
imul
sbb
cmp
xor
pop
stc
test
rclb
enter
inc
out
dec
pusha
ret
out
jmp
cli
fsubrs
sahf
sahf
into
sub
push
dec
jo
test
movsb
fsubp
mov
xchg
sub
or
loope
mov
stos
push
mov
dec
orb
decl
sbb
fucompp
fimuls
shll
sub
inc
push
lods
xchg
icebp
sti
mov
cmp
stos
idivb
and
icebp
mov
sub
xchg
jp
in
pop
sub
aaa
or
lret
xor
dec
inc
out
popf
xchg
add
sub
dec
sbb
ss
inc
aas
dec
gs
add
push
xchg
test
cmc
imul
lret
pusha
inc
incb
sbb
mov
inc
push
imul
jp
addr16
and
adc
push
ret
test
and
int
xchg
test
jbe
sbb
xorl
mov
jmp
lret
fs
push
imul
pop
in
sbb
cmp
in
mov
sbb
push
adc
sub
push
sbbb
aad
dec
inc
insb
cmp
test
mov
jge
adc
cmp
movsb
aaa
xchg
loopne
cmp
push
aad
xor
push
fiadds
mov
cmp
jg
xlat
lcall
hlt
in
aas
and
xchg
inc
out
lods
adc
pop
cmpl
pop
dec
or
pop
lock
pop
lahf
xchg
sbb
sbbl
std
mov
fs
xchg
xchg
idiv
pop
scas
stos
rcr
jl
push
pop
fbstp
mov
mov
stc
jecxz
pop
or
test
inc
cmpb
mov
push
pop
dec
andl
cld
or
insb
pop
popa
jle
mov
cld
jbe
mov
pop
aam
not
fldcw
mov
xchg
fwait
mov
out
add
xchg
push
xchg
xchg
aad
xchg
push
std
push
das
test
mov
xchg
clc
insb
xchg
dec
pop
data16
cmp
cmc
xor
pop
cmpsb
shrb
push
sub
sbb
or
cmc
mov
inc
dec
pop
popf
ds
into
scas
cmp
pop
addl
js
jno
or
aam
bound
lcall
pop
jle
sarb
dec
out
scas
jge
cmpl
pop
movsl
dec
loopne
popa
daa
mov
inc
xlat
pop
lret
pop
jmp
or
das
jl
xchg
hlt
mov
sub
scas
aad
sarl
or
inc
pop
push
inc
jmp
mov
push
shr
inc
mov
adc
add
pop
popf
lock
enter
pop
aaa
repnz
ds
lea
fwait
lcall
lods
adc
fwait
adc
je
xchg
push
out
mov
inc
loope
mov
aam
scas
inc
out
add
repnz
aam
mov
mov
cmpsl
pusha
push
xchg
fstl
jmp
cmp
and
rcrl
sub
ret
icebp
sub
movsl
sbb
sarl
daa
dec
xorb
call
fistl
rcrl
sub
xchg
iret
out
iret
fstps
and
iret
and
rcll
pop
fimuls
adc
mov
mov
xchg
push
pusha
fidivs
mov
insb
jns
test
addb
dec
mov
rcrb
fisttps
push
xor
cmp
mov
cwtl
mov
cld
add
xchg
hlt
xchg
push
xor
in
pop
nop
div
lahf
imul
test
push
out
test
cs
jle
mov
inc
hlt
cmp
fcomps
divb
and
notb
inc
mov
aaa
cmp
jo
outsl
pop
pop
xchg
mov
test
les
loop
add
sahf
test
or
retw
cs
stos
sub
jnp
lcall
cmp
jl
loope
ret
mov
stos
jb
cmp
stos
sub
bound
sub
or
mov
rclb
ljmp
ljmp
loop
cld
adc
lcall
xchg
ds
dec
sarb
inc
sbb
movsl
fwait
mov
shrb
inc
inc
test
mov
sub
cwtl
xchg
popa
pop
test
fildll
dec
adc
roll
mul
and
cmpsl
and
repnz
xchg
lods
inc
push
cmp
adcb
jg
sub
sti
sahf
subl
ss
or
cli
outsb
aad
dec
repz
mov
jb
fimull
xchg
sub
ret
shlb
fbstp
jae
dec
jle
jg
pop
and
mov
xor
or
xorl
mov
lds
sbb
mov
ds
testl
pop
jno
aaa
xchg
cmp
adc
sbb
add
mov
mov
mov
dec
jne
ret
pop
jmp
add
mov
jae
inc
rorb
push
cmp
loope
fldl
jge
dec
stos
mov
subl
push
insb
movsb
push
nop
into
cmp
xor
aas
clc
adc
mov
cs
int3
xchg
xchg
cmc
in
loop
test
pushf
sub
mov
daa
jle
adc
cwtl
mov
add
or
sub
sub
xor
jne
shrd
mov
data16
sub
add
xchg
push
loope
pop
shlb
jnp
fldcw
sub
mov
test
int3
fnstcw
fisubrl
loope
sbb
sub
scas
push
adc
mov
in
enter
jae
mov
stc
jo
mov
jae
aaa
mov
das
mov
mov
mov
mov
int
dec
lods
and
mov
cltd
sti
jg
cmp
push
or
fistpll
arpl
fwait
inc
jae
and
cmp
sbb
pusha
xchg
mov
xchg
sub
addr16
js
mov
cmp
mov
fadd
jle
push
loopne
jle
push
push
pushf
mov
sub
ret
mov
call
xchg
push
mov
push
rclb
inc
xchg
and
add
sub
mov
pop
int
sbb
cmp
pusha
subb
push
inc
gs
push
push
test
adc
pop
dec
sub
ss
inc
xor
outsl
add
and
les
sbb
push
adc
scas
nop
ret
push
jg
sub
dec
pop
movsl
fimuls
push
test
test
sbb
icebp
test
in
xchg
mov
mov
iret
test
jmp
sbbl
imul
cwtl
inc
xor
fs
aaa
jb
out
fdivrs
push
cld
xor
neg
test
mov
insb
add
xchg
inc
clc
add
cmp
jle
enter
fistpl
lahf
mov
ljmp
stos
test
xchg
rol
push
stos
fildll
lahf
int3
es
jle
daa
pushf
cmc
push
push
and
xchg
mov
fcomi
in
mov
and
mov
dec
push
test
insl
jl
mov
pusha
and
repnz
cmc
jl
push
mov
popa
pop
or
lods
jno
int3
push
sbb
mov
in
out
bound
int3
fdecstp
jp
lret
lods
ret
push
test
pop
lret
jb
and
mov
pop
scas
das
pop
xchg
and
pop
jmp
sbb
stos
adc
push
cwtl
sub
roll
lds
jae
mov
pop
cmpsl
pop
addr16
lret
mov
ss
mov
ret
mov
das
imul
xchg
jg
xchg
enter
sub
pop
into
jne
lretw
and
cltd
fcmovbe
inc
aad
cld
scas
mov
mov
jge
add
cld
stos
or
icebp
addb
add
xlat
inc
push
clc
clc
call
inc
pop
ja
jl
xor
fucomi
jl
mov
dec
sub
mov
in
mov
sbb
cmp
or
out
mov
mov
repz
sti
cmpsb
lea
gs
pop
test
push
inc
xchg
mov
aam
daa
mov
inc
dec
mov
cmp
or
dec
mov
or
inc
adc
icebp
mov
jmp
cmp
daa
addr16
xor
inc
sbb
sub
xchg
pop
bound
flds
push
gs
lcall
rcl
xchg
insl
nop
movsl
pop
xor
lret
icebp
jmp
in
sbb
shlb
xchg
mov
pop
sbb
mov
movsb
sbb
push
add
mov
sti
or
xor
movsb
xor
jns
movsl
clc
orb
or
mov
hlt
outsl
lock
inc
in
cmp
xchg
into
xchg
ret
cmp
out
int
mov
mov
xchg
sbb
mov
arpl
xor
mov
insl
push
sbb
enter
or
or
cmpsb
daa
push
popf
mov
scas
mov
adc
mov
add
cmp
push
mov
cmp
out
add
mov
aas
sbb
jo
inc
add
xchg
inc
int3
dec
pop
test
jecxz
push
mov
lahf
ja
add
fcoml
jp
push
loopne
dec
inc
cmp
cmp
xchg
into
add
in
push
scas
in
push
andb
data16
jno
icebp
or
xor
jmp
negl
lods
lea
mov
pop
mov
lret
int3
or
xchg
lods
cmp
cmp
xor
test
cli
fnstcw
xchg
push
jno
pop
lods
mov
outsb
push
mov
mov
into
jl
stos
sub
dec
mov
jnp
xchg
adc
lcall
fsubs
sarb
xlat
sbb
jnp
or
sub
jmp
sbb
inc
dec
mov
push
sub
jmp
mov
and
dec
in
cli
fwait
sbb
mov
mov
call
loopne
dec
shr
subl
fcomps
push
pop
dec
sbb
push
pop
cmp
pop
popf
and
shrb
jae
add
ds
jge
ja
or
jne
pop
mov
dec
notb
iret
jns
or
jmp
fldcw
mov
sub
inc
jb
gs
cmp
gs
aaa
outsl
popf
pop
testb
or
sbb
jmp
lds
xor
sub
jb
xor
popf
outsb
js
xor
cmp
popa
or
jmp
inc
fistpll
mov
cmp
mov
add
sbb
push
std
int3
je
sub
daa
ljmp
ret
and
mov
xchg
mov
out
orl
or
icebp
jmp
clc
adc
jp
cmpsl
loope
out
test
fwait
dec
ds
call
sahf
cmp
loope
outsb
xor
aam
aas
xor
or
cltd
cmp
lcall
outsl
dec
je
popf
dec
jb
mov
les
notw
stos
xchg
inc
push
ljmp
ret
and
jb
or
push
addr16
adc
rclb
mov
shlb
inc
jo
push
sub
cli
or
fwait
add
bound
add
jmp
jbe
std
in
pop
inc
sti
jmp
adc
popf
or
fdivl
pop
pop
pop
cmpsb
pop
xchg
mov
jno
insb
xchg
jae
cmp
add
mov
into
sarb
mov
addr16
int3
pop
jnp
loope
pop
sbb
ja
adc
mov
arpl
ja
inc
cwtl
arpl
orl
mov
cmpsb
fidivl
insb
add
popa
pop
popa
xlat
mov
aas
and
fmuls
les
or
mov
imul
mov
dec
or
icebp
mov
lock
ja
popf
mov
jg
call
mov
mov
cs
je
xor
je
pusha
fldt
pop
mov
cmpl
lret
repnz
loop
lret
cmpsl
jae
or
xchg
js
inc
mov
les
push
test
les
jl
mov
out
mov
sbb
adc
jnp
or
push
lret
adc
adc
mov
rorb
stos
mov
push
mov
in
bound
xchg
mov
xor
out
sbb
notb
push
adc
push
jnp
xor
popa
into
push
jle
imul
xor
dec
pop
jecxz
cltd
and
xchg
sub
cwtl
icebp
movsb
fisttps
cmpsl
ljmp
push
sub
stos
mov
xchg
or
lahf
icebp
xor
int
fwait
cli
shlb
cmp
mov
jecxz
dec
jae
jle
loope
xchg
insl
int
sarl
mov
out
push
movsl
out
mov
adc
fadds
imul
xor
daa
pop
jp
movsl
lcall
adcl
mov
stos
pop
frstor
mov
mov
push
sub
rcr
testb
push
and
imul
xchg
bound
xor
mov
sub
roll
sbbb
out
inc
add
sub
push
xor
add
dec
pop
mov
push
cmpsb
mov
mov
sbb
jb
mov
jp
lret
pop
leave
fs
ljmp
sbb
push
dec
shrb
movsb
shrl
in
pop
push
mov
xchg
inc
bound
inc
adc
adcb
jecxz
mov
cld
mov
lock
lahf
adc
jmp
repnz
je
cmp
out
rorb
repz
cli
xor
ffreep
jg
imul
addr16
test
testl
and
mov
cmp
push
shrl
add
sub
in
repnz
jl
push
adcb
rol
or
out
sahf
in
fld
movsb
pop
fmulp
jecxz
in
out
out
mov
mov
push
roll
push
cmp
dec
push
adc
push
or
xor
or
push
popa
loop
es
aaa
cltd
fnstcw
rcll
shlb
inc
icebp
in
or
and
in
mov
push
pop
jp
cmp
fists
push
clc
xor
lret
jle
pop
and
or
mov
std
outsl
jle
add
xchg
or
mov
and
flds
jb
and
stc
add
insl
inc
push
pop
insb
pop
jle
mov
test
dec
fdivp
outsl
lds
sub
mov
xchg
jb
std
call
loope
enter
adc
dec
fcomp
xchg
fbld
fdiv
pop
ret
aam
or
add
in
dec
push
rcrb
fidivs
mov
dec
mov
out
pop
push
xchg
mov
imul
in
xor
xchg
ficompl
mov
xchg
push
lock
in
movsb
sahf
sbb
insl
jne
add
pop
roll
jnp
dec
xchg
pop
pushf
jns
mov
paddsw
and
dec
ja
add
jno
enter
mov
out
popf
mov
aam
test
pop
or
and
scas
movsb
sub
sub
imulb
adc
loop
imul
push
pop
push
sub
stos
lret
xchg
push
jmp
pop
sbb
mov
sub
dec
shll
adc
dec
jecxz
out
dec
and
xor
bound
mov
cmp
imul
aam
pop
enter
push
sub
mov
aad
call
xchg
out
pop
rcll
and
dec
imul
in
stos
cmp
xchg
cmp
cmp
ret
dec
out
ret
pop
cmp
stos
scas
jg
ds
rcr
lret
lds
cmp
mov
or
mov
subl
push
mov
test
push
jmp
jno
adc
ss
push
mov
les
pop
push
xor
bound
enter
paddusw
sub
dec
imul
cmp
mov
sbb
fisttpll
int
mov
inc
xor
cs
jne
clc
insb
adc
jg
pushf
mov
xchg
insb
cmp
xchg
sbb
adc
arpl
test
sub
nop
out
mov
jne
jbe
lea
or
cmp
mov
xchg
fmuls
jo
sub
ret
lods
imul
loope
sahf
call
aaa
push
mov
enter
cltd
imulb
sbb
jmp
push
arpl
sti
les
pop
aaa
mov
sub
or
or
inc
je
sahf
and
lods
out
call
push
add
addr16
repnz
nop
outsb
shlb
cltd
sbb
or
cltd
cmp
test
push
jb
shll
int3
mov
stos
push
stos
int3
push
lods
jns
addr16
lock
mov
shlb
mov
cmp
pusha
or
mov
dec
inc
fsubrl
mov
mov
insl
je
mov
ficompl
fbld
mov
fwait
rcr
das
and
mov
cli
jmp
imull
in
dec
and
mov
sbb
rorb
cs
mov
mov
push
add
faddl
test
rorb
dec
shlb
pop
lcall
loopne
das
fidivrs
scas
cmp
push
imul
sub
jle
xor
xchg
sub
pop
dec
cmp
inc
and
cmpsb
xchg
lcall
fildl
adc
in
testb
repnz
push
in
ds
pop
mov
aas
dec
pop
mov
mov
cs
es
stc
in
dec
cmp
loop
ret
lods
outsl
xor
insb
mov
daa
or
movsb
movsb
shl
out
sti
pop
dec
xchg
jmp
shrb
jl
shll
out
inc
jb
scas
mov
das
xchg
scas
mov
setnp
idivb
add
shr
clc
stc
lret
mov
pop
out
or
repnz
aam
arpl
sbb
das
lods
mov
cld
mov
enter
fdivrs
xor
das
xlat
negl
pusha
lahf
imul
js
lods
mov
ret
pop
lahf
mov
mov
jbe
push
in
sahf
cli
out
adc
or
mov
xor
ja
fidivrl
stc
xchg
rcrb
adc
sbbl
ficomps
lahf
add
jns
ret
sti
jne
xor
jle
insl
fsts
stos
test
ret
cmp
jle
scas
cmp
push
out
and
lret
push
mov
lods
adc
mov
cwtl
dec
ficoms
mov
xchg
mov
jno
pop
jae
pop
push
inc
mov
in
out
imul
jp
push
jle
sti
dec
hlt
push
xchg
add
fwait
add
popa
sub
addl
and
sbb
or
mov
sahf
inc
cltd
pop
cmp
pop
stos
enter
push
adc
pushf
testl
int
imul
popa
xor
rcll
jo
pop
jns
jge
lcall
xchg
aaa
xchg
inc
fxch
lret
mov
mov
dec
popa
dec
mov
inc
or
and
mov
or
adc
scas
dec
cld
ds
loop
mov
lcall
nop
movsl
mov
je
pop
pop
out
stos
jnp
mov
mov
mov
push
xor
and
cwtl
sarb
imulb
jo
dec
in
mov
loopne
test
xor
std
sub
inc
or
mov
or
aaa
lea
int
add
repz
push
adc
and
rcl
imul
mov
and
pop
out
jbe
fs
flds
xorb
xchg
xchg
cli
jp
fwait
sahf
fcoms
sbb
inc
inc
bnd
cmpsb
dec
xorl
push
loope
repz
mov
and
cmpsl
xchg
pop
dec
add
imul
jg
pop
xchg
sbb
int
out
xor
enter
mov
flds
mov
pop
lahf
insl
inc
mov
outsl
cmp
movsl
inc
sbb
pop
dec
les
push
pushf
add
mov
decb
repz
fcoms
ss
std
adcl
xor
pop
and
subl
pop
jge
data16
adc
or
data16
sahf
push
sti
loop
into
and
xor
xor
xor
sti
insl
cmpsb
sbb
sub
bound
pusha
stos
mov
xor
xchg
das
mov
dec
mov
ljmp
insb
int
or
int3
out
push
insl
xor
clc
fcoml
test
cmp
je
scas
fstps
lret
sub
out
dec
xchg
test
loopne
cmp
sub
clc
inc
sbbb
bound
mov
scas
xlat
inc
pop
bound
ja
mov
dec
inc
sbb
vaddsubps
cld
xor
xor
add
pushf
outsl
mov
lea
inc
test
xchg
fs
push
shl
pop
sub
xchg
call
hlt
or
pop
xchg
popf
mov
push
and
repnz
sub
scas
js
in
push
sti
mov
into
mov
pop
jmp
adc
scas
aam
cli
dec
xlat
addr16
mov
setns
gs
pop
iret
sbb
repz
jb
inc
cmp
pop
mov
mov
cmp
lods
fdivl
cmp
push
fs
fistps
mov
adc
mov
cmp
cmpsb
fwait
pop
adc
cmp
andl
and
jns
inc
adc
adc
cmp
loope
rclb
repnz
mov
into
sbb
test
jg
out
fnstcw
je
mov
imul
push
rcr
gs
into
xlat
in
inc
lock
pop
fistps
push
sbb
add
insl
shrb
aas
lea
pop
and
loope
cmp
ljmp
test
fwait
push
jle
sub
idivb
call
bswap
xor
into
jb
mov
or
cltd
ret
cmp
pop
imul
cmpsl
movsl
cmovo
aaa
cwtl
into
pop
xor
rcrl
sub
cmp
addb
push
jle
inc
lret
sub
shll
test
aam
adc
inc
ret
dec
mov
in
adc
mov
rclb
jge
int
jae
out
mov
adc
sub
jp
les
push
jae
imul
cli
pop
andb
jo
mov
aaa
sbb
or
insl
sbb
je
jmp
test
imul
mov
movsb
mov
mov
movsl
mov
pusha
and
adcb
test
mov
cmovle
ficomps
jo
aad
fsubl
into
ret
lcall
jp
test
rcll
bound
fcomp
mov
outsl
push
push
inc
jno
sbb
pop
sub
mov
out
mov
sub
pop
inc
adc
sbb
mull
mov
inc
mov
add
mov
idivl
add
lret
dec
adc
adc
bound
and
je
xchg
and
pushf
and
and
lret
cmp
pushfw
sbbb
and
aaa
and
lcall
test
jb
cmpsl
je
movsl
jb
hlt
imul
push
icebp
int
inc
fstpt
aaa
clc
je
lods
xor
mov
popa
adc
push
cmp
jmpw
push
xchg
sti
and
leave
cwtl
inc
idivb
in
sahf
pop
ret
dec
ret
mov
mov
aas
mov
cmpsl
mov
pop
scas
enter
xorb
jg
les
push
dec
stc
dec
stos
and
or
xor
stos
pop
inc
or
mov
or
adc
and
aas
sbb
scas
inc
mov
mov
mov
xor
aaa
outsb
daa
sub
fcoms
lahf
xchg
ja
pop
and
xchg
pop
hlt
testl
in
bound
dec
cs
xor
mov
sub
test
adc
imul
ss
repnz
and
jp
insl
pusha
xor
ds
push
fldenv
xchg
out
imulb
add
jp
push
nop
push
fs
outsb
sub
xor
dec
push
sbb
adc
lods
mov
jle
xchg
popa
mov
movsl
add
inc
mov
cmp
push
jle
inc
push
inc
adc
xchg
enter
enter
popf
mov
out
xor
push
in
adcl
xchg
sub
mov
icebp
inc
fcompl
or
inc
sub
cmp
sahf
sarb
cmpsl
inc
sbbl
gs
test
mov
call
mov
out
lods
test
dec
stc
aam
out
jne
imul
hlt
mov
testb
sbb
sub
iret
cmpsb
cmp
arpl
inc
enter
or
mov
aad
inc
xor
shll
cmc
mov
icebp
push
xchg
lret
mov
pusha
jecxz
push
filds
das
push
out
push
inc
mov
call
test
insl
or
loopne
mov
jo,pn
mov
add
fldt
xchg
mov
popf
cmp
mov
inc
rclb
mov
push
hlt
test
idiv
sub
jmp
shlb
je
sbb
push
stos
inc
push
int
pop
fnstcw
into
push
lods
jecxz
outsb
outsl
in
sbb
sahf
and
into
ja
adc
cmp
pop
shl
sahf
push
or
pop
adc
stc
adc
xchg
outsb
fstps
out
in
movsl
mov
push
pop
jne
adc
dec
fwait
and
and
pop
add
jb
ret
push
mov
call
or
xor
or
lret
pop
cmp
aas
into
movsl
mov
aam
into
xor
nop
daa
mov
lret
cmpsl
pop
dec
adc
sbb
pop
cltd
in
aam
data16
sub
xchg
stos
js
call
cmpsl
mov
xchg
arpl
clc
mov
xor
subb
repnz
mov
dec
dec
or
xchg
pop
daa
sub
inc
xor
sahf
xor
je
idiv
outsb
or
fmulp
loope
jbe
jne
mov
lock
cltd
dec
push
lds
add
add
int3
push
aam
xorl
add
and
or
test
push
fs
pop
jmp
out
mov
lock
dec
fstpl
inc
adc
and
xor
jl
dec
movsl
jnp
pop
lea
adc
int
inc
lods
cmp
lcall
sub
jne
push
scas
xchg
lods
popa
cld
mov
cmpsb
aam
xor
sbb
mov
jmp
andl
and
mov
push
pushf
xchg
mov
cmp
cwtl
cmc
dec
push
cmp
shrl
pop
outsl
fists
jbe
adcb
inc
push
dec
jge
xlat
xor
test
repnz
cmp
push
pushf
jo
or
jle
sub
nop
pop
inc
stos
fldt
adc
sbb
jg
ljmp
xorb
cltd
sub
fwait
loopne
jge
pop
push
outsb
jbe
std
cmp
in
out
das
popf
xchg
mov
test
loopne
ffreep
call
mov
jge
leave
dec
rclb
mov
cld
aaa
outsl
adc
jl
jb
arpl
adc
mov
cwtl
jecxz
jae
cmp
mov
jle
ljmp
nop
das
cwtl
js
aam
test
push
push
adc
filds
jle
mov
inc
push
sbb
mov
int3
enter
shl
inc
lods
xchg
mov
rcll
cmpsl
stos
sbb
xor
ds
cmpb
dec
test
nop
jmp
ss
ja
inc
dec
sub
cmp
fiadds
inc
scas
dec
pop
pushf
call
cmpsb
cmpl
lods
xchg
cmp
xor
jmp
bound
mov
xchg
dec
sbb
test
and
push
stos
xchg
pop
and
jge
repz
mov
cmp
sarb
mov
repnz
gs
jge
out
in
lods
jmp
out
aaa
imul
repz
in
enter
jg
test
inc
addr16
jns
mov
addr16
mov
mov
inc
in
sti
and
js
insl
adc
ljmp
adc
xor
out
das
pop
mov
aaa
xchg
mov
push
out
test
push
jnp
lcall
fucomp
ds
sbb
mov
jmp
mov
xchg
inc
int3
xor
aam
lahf
adc
mov
hlt
sub
cmp
or
mov
pop
shl
cld
mov
xchg
sub
push
pop
bound
cmp
cmpsb
xor
enter
mov
flds
sub
sarl
sub
int
pusha
xlat
aaa
and
cmp
add
loopne
cmpsb
add
fwait
push
fmul
or
jbe
popf
xchg
test
sbb
scas
sahf
jb
leave
pop
iret
adc
adc
out
in
push
iret
fdivp
nop
out
adc
in
mov
std
adc
pop
leave
mov
lods
ds
lcall
enter
icebp
stos
or
jmp
addr16
lea
sbb
ret
lods
sub
jge
aam
add
pop
outsl
xchg
sbb
cmp
push
mov
aam
call
mov
pop
inc
popf
push
lock
dec
xor
ret
or
and
push
jle
lcall
sub
shrb
and
cwtl
iret
sub
fisttpl
in
add
mov
nop
aaa
pop
lret
mov
mov
mov
in
sahf
add
sbb
jle
fidivl
or
jp
mov
add
aas
shrb
ljmp
sub
mov
jbe
popf
loopne
jbe
mov
mov
or
out
lcall
mov
pop
jge
or
and
outsb
jnp
push
mov
outsl
lahf
scas
ret
enter
push
les
pusha
sbb
rcl
adc
inc
cmpsl
in
inc
and
cld
mov
repnz
js
leave
xchg
mov
push
stos
iret
push
cmpsl
imulb
nop
rep
mov
sub
lahf
add
cmp
jb
mov
fxch
xchg
dec
xchg
inc
int
movl
mov
add
xor
data16
mov
repz
or
adc
loopne
dec
or
frstor
pop
cltd
pop
aad
xchg
aam
dec
punpcklwd
sub
sub
mov
repz
outsb
test
add
add
lds
std
adc
jle
push
stc
or
pushf
test
in
and
sub
lea
out
xchg
mov
inc
add
jmp
pop
not
pop
in
cmp
mov
cld
pop
mov
mov
jb
test
lcall
pop
mov
iret
lahf
mov
ret
in
add
scas
je
scas
pop
pop
jecxz
insb
fstpt
mov
lcall
pop
cmp
subl
pop
ret
faddp
sti
pop
pop
into
fs
xchg
aaa
xor
call
sub
sahf
cmp
in
test
aas
mov
fsubrl
cmp
sti
std
jne
jnp
mov
xor
inc
mov
loopne
mov
and
pop
jecxz
xor
stc
sarb
or
pop
mov
insb
lahf
je
iret
sub
mov
mov
or
divl
cld
xchg
add
pop
adc
push
adc
cmp
lods
hlt
inc
bound
dec
pop
xchg
imul
mov
mov
xor
insl
sub
shlb
shrb
les
loopne
mov
paddsb
arpl
enter
cwtl
inc
push
push
add
and
sub
push
mov
or
iret
mov
jo
cmpsb
stos
lret
pop
in
jle
xor
in
jb
mov
scas
loope
arpl
cmpl
test
sub
aam
cmp
arpl
mov
into
adc
mov
idivl
cmpsb
movsl
inc
cmp
adc
dec
ret
xchg
cmp
xchg
jle,pn
rolb
mov
nop
out
pop
repnz
add
sahf
dec
jnp
fs
test
and
or
mov
mov
mov
hlt
or
xchg
fildl
xchg
subl
and
xor
dec
cmpsl
jp
and
sub
push
movsl
das
lcall
fwait
rol
push
pop
popf
mov
pop
inc
out
mov
fimuls
jg
rcrb
xchg
dec
jge
jo
inc
pusha
andb
into
stc
cs
repz
dec
out
xchg
jecxz
xchg
dec
adc
jmp
sbb
dec
push
sahf
lcall
std
scas
aaa
sti
lods
adc
and
imul
xchg
jo
adc
mov
lock
int
adc
scas
enter
fstps
daa
je
shr
cmpsb
mov
and
pop
fucomp
outsl
push
xchg
push
sub
dec
inc
daa
inc
ret
xor
scas
imull
daa
or
js
gs
push
flds
mov
jne
adc
pop
scas
and
xchg
pop
sti
xchg
mov
ss
xor
mov
test
jno
jne
cli
mov
cltd
fwait
cmpsl
ja
mov
dec
pop
xchg
aam
les
jg
stc
in
pop
lcall
jge
insl
call
int3
test
sub
mov
shl
cmc
lods
xchg
adc
aad
jbe
add
scas
lret
push
ljmp
inc
jle
xor
push
jg
mov
pop
outsb
add
sbb
lds
push
fidivrs
incb
mov
mov
sub
inc
int
push
jl
push
or
imul
jae
repnz
sbb
in
cmp
inc
pop
xchg
inc
loopne
push
call
daa
xchg
jmp
imul
mov
mov
push
adc
mov
pop
jmp
aaa
xor
in
mov
jns
or
mov
rcl
das
push
push
mov
mov
cmp
ss
fdivrp
popa
xor
cmpsb
arpl
and
sbb
xor
mov
sarb
lock
push
pop
imul
je
and
lcall
jl
sub
jmp
push
test
xchg
mov
out
sbb
xchg
jecxz
and
ret
loopne
or
ficoml
push
js
iret
aas
clc
cmc
lcall
ja
inc
ficompl
movsb
add
mov
and
iret
push
or
and
mov
pop
mov
pop
fstp
xor
pop
out
cmp
xlat
mov
pop
dec
jmp
mov
in
xchg
fwait
dec
pop
and
xor
pop
dec
push
or
idivb
iret
xchg
std
xor
addr16
jb
insl
rcll
mov
adc
adc
fcomip
cmc
daa
sar
lods
jns
cmp
mov
mov
imul
sbb
aam
movsb
sbb
or
jmp
int
mov
lock
push
jns
sbb
stos
push
lods
ljmp
out
mulb
sbb
xchg
add
bound
pusha
sti
xlat
adc
int
adc
dec
sbb
add
aad
pushf
xlat
sbb
scas
cmpsb
mov
pop
xchg
push
sbb
adc
rorb
shrb
xchg
pop
mov
jecxz
lods
imul
into
scas
in
out
mov
mov
subl
dec
js
inc
pop
jmp
dec
jge
sahf
stos
jno
jle
fistps
ljmp
dec
mulb
shl
movsl
es
sti
sbb
roll
xchg
mov
mov
lahf
int
cmp
out
out
leave
lahf
scas
push
add
int3
test
mov
xchg
cmp
icebp
jo
xor
sub
rcll
ss
or
mov
rclb
mov
jmp
jnp
xor
add
mov
lods
xchg
arpl
xchg
cld
mov
add
ftst
mov
sbb
iret
add
xor
dec
jl
cwtl
push
and
adc
sbb
adc
xchg
fidivrl
sbb
popa
ja
sbb
mov
or
fwait
xor
and
out
imull
adc
push
push
inc
cmp
jne
pop
sahf
mov
xchg
lret
ds
sbb
cltd
mov
jno
pop
rcl
dec
sub
xor
lcall
mov
cmp
inc
inc
and
cmp
bound
pop
fnstsw
xor
inc
jnp
int3
cld
pop
pusha
sahf
xor
daa
xchg
pop
movsb
aas
add
sbb
out
out
ret
xor
out
lock
mov
iret
inc
mov
aad
lea
cmp
inc
ret
scas
mov
and
fldl
cmp
jae
mov
adc
push
scas
jmp
sbb
es
addb
jne
lret
clc
xor
stc
ss
inc
xchg
cld
sbb
jb
mov
stc
xchg
dec
xchg
fsubs
inc
mov
jns
xor
cmp
mov
dec
xor
pop
loop
imul
add
xchg
push
popf
cmp
add
idiv
das
aas
inc
cld
fld
insl
mov
in
jl
lods
mov
cmpb
mov
addr16
or
cli
xlat
mov
clc
pushf
lahf
shr
mov
loopne
cld
add
xchg
push
cmpsl
push
movsl
jl
adc
and
and
mov
push
stc
jp
jecxz
mov
aaa
ljmp
adc
cli
add
sub
jl
cmp
jp
sub
or
test
jno
movsl
sub
mov
dec
flds
cli
enter
mov
sbb
mov
rol
repz
subb
cmp
cmp
and
mov
in
jne
jp
mov
mov
push
dec
and
jno
test
jge
lret
cmp
mov
push
scas
mov
out
mov
sbb
dec
mov
add
in
push
mov
in
arpl
aaa
jne
push
sbb
js
lods
gs
cmp
std
mov
jne
sub
sbb
jge
inc
test
into
and
lea
test
mov
cmpsb
hlt
push
sbb
test
dec
cmpl
insl
ljmp
lret
out
sahf
inc
popa
push
jmp
bound
enter
sbb
lock
sar
cmpb
adc
mov
xor
mov
lcall
and
rclb
xor
inc
sbbb
loope
rcrb
sbb
inc
roll
in
jge
jge
fsts
dec
jne
adc
dec
or
out
icebp
sub
xchg
leave
into
inc
pop
cwtl
dec
loope
add
repnz
stc
das
lods
pop
pushl
inc
ja
adc
ret
mov
mov
addr16
mov
dec
mov
mov
jp
push
dec
push
test
mov
loop
cli
fsubs
sbb
cmp
rorb
jl
in
jno
xor
data16
ljmp
fsubs
ret
int3
push
fwait
adc
xchg
xor
inc
cmpsb
or
fdivr
pop
mov
in
push
insl
or
or
xor
into
add
xchg
lods
pushf
and
das
cltd
leave
cmc
lret
pop
push
sbb
jo
jae
push
dec
dec
sti
arpl
xchg
aam
inc
jmp
push
mov
push
pushf
jg
pop
ret
fnstenv
jg
push
pop
cmp
jo
cld
adc
xchg
sahf
scas
es
adc
mull
adc
pop
pop
pop
push
push
rcrb
mov
pop
call
add
mov
cmp
xchg
aas
mov
loop
pushw
pop
xor
popa
cltd
test
rcrb
dec
bound
mov
lds
lea
fdiv
mov
pop
mov
dec
and
push
lahf
inc
int
add
incb
or
js
insb
dec
out
jg
outsb
repz
outsl
jl
mov
dec
and
and
mov
fistpll
jb
cmp
cmp
cmpsb
in
jo
into
fildll
cmp
out
lods
cs
mov
xchg
xor
xor
jecxz
xor
andb
dec
addr16
hlt
test
dec
mov
and
xchg
insb
lods
mov
aaa
jnp
cmpsl
fcmovnu
popf
scas
sub
and
lcall
mov
bound
fildll
movsl
fisubl
test
fcoml
jmp
sub
repz
sub
pop
sub
fmuls
cli
push
cmp
stos
xchg
and
out
flds
jl
int
push
loopne
sti
xlat
das
scas
clc
mov
cltd
add
negb
mov
adc
dec
ds
sar
cltd
sti
xchg
xchg
fldcw
iret
insb
stos
loop
cli
xorl
adc
pop
jb
std
sbb
xchg
lock
pop
incb
fs
inc
pop
inc
sub
inc
jb
sub
mov
inc
outsl
sarb
pop
data16
pop
or
mov
cmc
js
call
mov
aaa
test
test
and
and
cmpsb
mov
push
lahf
mov
decb
dec
dec
and
std
test
in
sub
imul
shll
lret
jmp
inc
jne
pop
fiaddl
rorl
adc
pop
mov
scas
lretw
jnp
or
into
sahf
fstpl
scas
inc
pop
scas
das
lahf
adc
inc
xchg
cmp
lahf
jne
rorb
push
xor
jnp
mov
xchg
cmpsb
push
movsb
stos
sti
movsb
mov
outsl
std
pop
cmpsb
xlat
xchg
bound
bnd
xchg
repnz
jmp
ret
pushf
jno
jg
ds
loope
inc
shrb
aas
push
negl
xchg
lds
scas
inc
mov
std
mov
insl
call
push
ja
fadd
and
sub
inc
lods
adc
int
inc
mov
loopne
mov
jge
lret
nop
loopne
jp
and
scas
xchg
les
adc
cltd
jo
sbbl
in
arpl
pop
stos
iret
int3
or
sbb
mov
enter
or
inc
or
push
mov
mov
aad
inc
lahf
and
in
mov
shrb
popfw
lret
xorl
addl
outsl
pusha
imul
pop
pop
inc
lcall
fsubs
fiadds
loope
adc
loop
adc
mov
mov
shll
rclb
jg
pop
cmpsb
dec
sti
or
jg
call
jnp
imul
xchg
imul
call
rclb
stos
push
inc
push
jle
xor
shrb
mov
sub
jge
mov
xchg
out
out
dec
lock
insb
push
fs
cmp
pusha
les
inc
xor
add
sbb
test
mov
dec
jbe
or
jbe
xor
repz
lods
dec
notb
add
dec
in
sti
jp
push
pop
mov
ficoms
sarb
in
adc
in
xor
dec
xor
insb
outsl
mov
jne
popf
out
mov
gs
idiv
cmp
inc
popa
in
push
loop
cmp
stos
imul
sahf
jmp
dec
ss
xor
and
out
mov
imul
push
cmpsb
and
mov
xor
or
push
cmp
iret
mov
cmpsb
inc
int
sbb
xor
movsl
jg
in
fstl
mov
fidivs
mov
xchg
cs
ret
out
jmp
jnp
xlat
add
and
xorl
pop
enter
adc
add
and
jo
sbb
push
fdivl
dec
pop
sahf
movsb
pop
sbb
xchg
xor
inc
adc
add
subl
call
or
outsb
dec
fs
jecxz
out
push
mov
or
xchg
jno
fildl
mov
and
out
cmp
inc
mov
icebp
movsl
sub
sub
lds
jne
mov
mov
std
adc
popa
sahf
pop
push
cltd
ja
fldl
sub
lcall
dec
jmp
sub
negl
sbb
xchg
xchg
es
cltd
pushf
andb
pop
sub
cmp
mov
pop
pop
subb
push
and
push
pop
pusha
repnz
push
out
ljmp
xlat
jb
es
push
mov
ss
ret
fidivrs
daa
cmpsb
mov
inc
fs
stc
push
cmp
xor
stos
lea
shrl
aad
jg
out
mov
out
adc
push
repz
push
or
ljmp
lods
sbb
jnp
ljmp
sub
or
mov
inc
cmp
jno
ficomps
mov
mov
lret
fldl
or
insl
xchg
data16
test
adc
gs
xchg
stos
inc
ss
sbb
cmpsb
shl
mov
mov
inc
ret
sbb
and
out
ret
mov
and
stos
sbb
mov
stc
cs
sub
add
adc
cld
outsl
shr
shrl
pop
aam
pop
rcl
mov
ret
push
push
and
fdivs
in
inc
xor
fistps
push
jl,pt
sarl
sbb
das
iret
mov
jns
loope
inc
cmpsl
scas
js
cltd
lret
dec
jae
ja
idiv
into
imul
adc
push
lret
int
cmpsl
inc
scas
mov
push
cmpl
imulb
jbe
mov
insl
xchg
loop
mov
jne
shlb
mov
mov
scas
ja
aaa
cmpsl
xchg
dec
arpl
sub
in
aad
lea
popf
or
push
dec
and
fstpl
fs
ret
push
mov
addr16
notb
test
les
sub
inc
push
das
jle
iret
jecxz
add
out
dec
pop
jg
mov
cmpsb
fmulp
outsb
ss
jb
and
leave
aad
mov
and
cld
movsb
dec
xor
lret
jp
adc
jge
loop
xor
sbb
add
and
push
rorb
and
push
iret
sub
push
pop
jbe
or
and
mov
and
jecxz
ret
inc
mov
mov
ret
inc
pushf
daa
cmp
aam
roll
or
cli
xchg
sbb
repz
cmp
mov
psllq
packuswb
hlt
cmc
inc
loop
mov
and
les
jb
js
inc
push
xlat
and
dec
enter
loop
xor
in
and
stos
or
mov
or
jecxz
mov
pop
inc
jbe
decl
test
fldl
or
cmp
mov
shl
in
mov
mov
mov
pop
cmp
int
aad
xchg
shl
dec
dec
into
xchg
stc
enter
add
fscale
fisttpll
jbe
dec
push
pop
test
test
outsb
and
jmp
jns
aam
movsb
ret
xor
cli
mov
shll
flds
lahf
adc
aam
push
test
loopne
stc
push
out
mov
adc
xchg
jecxz
adc
or
test
xor
adc
in
loop
int
cmp
sbb
or
pusha
out
int3
jecxz
das
lret
jo
data16
es
mov
or
cmp
sbb
mov
and
dec
imul
jne
inc
clc
cltd
mov
iret
pop
adc
xchg
sbbl
jecxz
movsb
inc
xchg
cmp
adcb
je
lods
xor
leave
push
scas
aam
sbb
cld
sbb
xlat
xor
adc
in
imul
std
imul
cmpsl
iret
leave
imul
sub
scas
mull
mov
and
jmp
jno
lahf
sub
inc
add
lret
js
mull
or
xor
daa
pop
lea
inc
aad
movsl
in
xchg
inc
stos
subl
insb
xor
dec
and
mov
cmc
xchg
push
icebp
es
cmpsl
dec
ds
in
les
cmovl
pop
mov
mov
mov
fwait
xor
mov
mov
int3
pop
lock
jecxz
aaa
stc
fsubrl
std
or
ss
aas
testl
mov
pushf
xor
int3
mov
inc
rclb
cmc
ljmp
lods
inc
pop
stos
shrl
loope
cmp
js
test
cmp
je
in
leave
pop
mov
imul
subb
adc
shrl
ret
pop
fistps
cmc
gs
jae
xor
imulb
mov
rol
cmp
in
or
lret
mov
lods
lcall
es
mov
popf
inc
or
cmp
ror
gs
mov
in
rcr
xchg
inc
inc
pop
mov
sti
fldenv
and
pusha
mov
mov
das
cmp
xor
push
lcall
pop
xchg
jge
stos
xor
lahf
fistl
mov
xor
mov
fwait
cmp
add
xchg
insl
adc
movsl
lock
jecxz
es
popa
sbb
insb
pop
out
mov
mov
je
mov
mov
pop
push
mov
jno
add
sbb
fdivl
test
mov
and
add
inc
xor
inc
dec
or
imul
cmpsl
dec
incl
fwait
jmp
loopne
es
mov
maskmovq
xchg
test
fsubrl
sub
cltd
xlat
pop
xchg
dec
add
cmp
sub
sub
hlt
mov
push
clc
mov
xchg
leave
lcall
push
bound
jge
bound
aam
insl
or
push
ss
mov
adc
or
add
adc
xchg
cld
in
idivb
in
add
stos
cmp
add
jmp
lret
or
mov
sub
jp
in
xor
aam
xchg
imul
lret
leave
loopne
mov
mov
xchg
stc
pop
jg
add
inc
stos
sbb
arpl
sub
pop
lds
test
out
clc
mov
or
rorl
shll
sbb
inc
mov
stos
call
out
sti
fdivrs
push
rorl
sahf
pop
notl
lret
mov
mov
add
jne
dec
ret
adc
enter
sub
fldenv
xor
loop
mov
dec
dec
imul
jge
sub
jge
adc
jmp
cs
in
js
mov
pop
jo
lods
and
sub
cmpb
mov
repnz
or
push
icebp
jecxz
inc
jno
movsb
dec
out
xor
cmpsb
outsb
test
pop
push
add
jl
push
ds
ljmp
ja
lock
movsl
in
xor
pop
arpl
shl
mov
pusha
adc
push
xor
scas
push
dec
mov
cld
or
cld
pop
mov
lcall
push
pop
aas
inc
mov
mov
mov
or
and
xchg
daa
daa
sub
mov
sub
and
cli
outsl
mov
test
sahf
mov
test
cmpsl
add
ss
cmp
jmp
in
movsl
iret
or
add
addl
imul
inc
push
push
adc
sub
cmc
cwtl
scas
adcl
nop
jns
inc
in
sti
sub
and
testl
test
out
pop
adc
repnz
push
cs
pop
xchg
jp
adc
aam
insl
jecxz
not
mov
adc
shrb
shrl
lret
push
scas
enter
push
lea
push
scas
shrl
out
fisttpll
aaa
sub
xlat
add
fbstp
push
mov
push
cld
scas
test
xor
repz
es
fwait
imul
adcb
mov
dec
xor
insl
ret
and
sub
inc
lock
popa
adc
mov
mov
or
fstpl
loopne
fsub
adc
fwait
imul
dec
fs
pop
frstor
push
cmp
addl
out
jmp
or
sahf
lret
rorb
dec
dec
pop
shl
dec
ret
or
shll
sti
rcrl
adc
mov
outsb
mov
je
xchg
cmp
mov
push
mov
push
push
ss
pop
inc
lret
pop
jbe
fidivl
cmpl
dec
jge
cmp
jae
inc
jb
out
div
js
mov
mov
sbb
mov
jecxz
aas
shl
movsb
xchg
xchg
cmp
imul
jmp
and
addr16
and
or
daa
test
inc
sub
xor
cmp
cmp
nop
and
dec
arpl
movsl
add
mov
dec
das
dec
out
cld
mov
add
rcr
xchg
icebp
into
fsubr
lock
aam
and
test
mov
pop
jl
icebp
out
sbb
sbb
scas
jge
cmp
jl
je
in
push
jnp
adc
cmp
cltd
lret
xchg
push
sbb
push
divps
add
call
jp
adc
ds
xchg
shll
xchg
arpl
adc
mov
cmpsb
imul
mov
add
dec
inc
out
jns
stc
dec
data16
cmpsb
cmp
mov
imul
cld
scas
push
mov
mov
lcall
repz
imul
ret
pushl
pop
ja
ss
aam
mov
adc
xor
cmpsl
cmp
pop
inc
mov
sti
mov
pushf
dec
ret
xchg
sti
pop
in
cltd
jecxz
std
xor
jle
adc
sbbl
sub
mov
fimull
movsb
xchg
mov
push
loop
push
mov
pop
fs
sbb
shld
scas
fisttps
xlat
push
scas
push
sub
jg
mov
push
imul
jp
jge
jo
in
je
dec
xchg
xor
cmp
jb
xor
fbstp
lret
negb
push
test
cmp
stos
jne
aaa
add
pusha
cmp
stos
adc
aam
mov
lret
mov
lret
xchg
adc
dec
stos
lret
pop
arpl
lret
call
mov
notl
into
loopne
outsb
push
jae
or
pop
cmpl
dec
sti
jecxz
xchg
leave
mov
rcll
mov
rcrl
cmp
dec
dec
lahf
arpl
cmc
sbb
jo
pop
shrb
push
imul
mov
xor
inc
cmp
mov
outsl
inc
and
pusha
and
sub
out
jmp
xchg
dec
stc
jl
mov
ja
dec
dec
ret
push
push
pop
push
cltd
insl
dec
sarb
add
stc
add
lea
mov
xor
and
aad
and
cld
jg
cmpsl
ja
push
arpl
aad
xchg
or
shll
inc
stos
les
cltd
je
movsb
outsb
inc
xchg
push
lods
and
pop
loope
sub
lock
lcall
dec
dec
pop
fildl
and
mov
xor
pop
ret
sub
xchg
imul
sub
mov
repnz
cs
int
pusha
xor
push
jge
repz
pop
mov
cmpsl
push
popa
pop
push
lcall
xchg
cmp
dec
xchg
and
sub
mov
xlat
push
mov
aam
cmp
js
jg
xchg
inc
and
rolb
mov
push
push
notl
mov
insl
loopne
dec
pop
pop
int3
ljmp
popa
xor
out
xor
sub
pop
lea
sbb
neg
fs
push
mov
call
in
xchg
sbb
cmc
sbb
dec
push
adcb
jb
cmp
fisubs
xor
push
out
dec
insb
cs
sub
in
out
xchg
negl
dec
popf
adc
aad
cmp
cmp
ret
mov
out
lret
pop
dec
mov
in
inc
inc
inc
gs
dec
xor
scas
jecxz
pop
cli
jo
pop
lds
mov
pop
lret
xor
sarb
cld
ficomps
loope
mov
in
scas
xor
fsubl
and
leave
push
jns
xchg
jle
addr16
loop
daa
and
cld
std
nop
int
cmpsb
test
test
sub
aam
and
cltd
hlt
sbbl
shrl
mov
or
lcall
xchg
cmpsl
cmp
inc
sarl
mov
jo
mov
stos
pop
cmovg
dec
push
or
dec
loope
xchg
push
out
cmc
cmc
sbb
push
lcall
sbb
pop
cli
xor
inc
fimull
ljmp
add
imul
mov
loopne
and
pop
lahf
lods
scas
add
and
popa
lock
push
dec
or
xor
or
popa
push
sbb
jae
out
test
xor
lock
and
add
inc
xchg
popa
or
xor
sbb
sbb
lea
and
je
ja
sbb
sahf
mov
lahf
outsl
adc
cmp
enter
mov
ret
or
push
mov
adc
div
mov
into
in
add
lahf
test
jnp
shlb
ror
or
push
jb
ficoms
mov
loopne
dec
aam
fnsave
ss
and
iret
shlb
add
cmp
jle
jns
dec
mov
out
mov
mov
scas
pop
scas
aas
mov
jno
gs
cmpsl
or
stos
in
sbb
pop
jb
jne
jbe
cmc
push
pushf
mov
mov
xchg
movb
gs
movsb
push
push
xchg
aaa
fdivr
sbb
jmp
call
xchg
push
adc
insb
jo
js
push
lret
fs
lods
pop
call
in
repnz
mov
mov
das
sahf
lret
popa
aam
js
or
mov
xchg
sub
aas
imul
push
std
lcall
and
mov
movsb
xor
sub
in
xchg
cmp
loope
cmp
adc
scas
dec
movsl
repnz
dec
mov
cltd
cmpsb
icebp
fidivrl
lahf
sub
adc
xchg
adc
in
add
mov
jecxz
test
jge
push
outsb
mov
cwtl
or
fsubr
pop
sub
testb
sub
push
adc
inc
mov
mov
fcompl
in
cld
inc
adc
lahf
xor
out
fisubrs
sbb
add
fldenv
jecxz
aad
repnz
out
jae
ret
sbb
enter
int3
dec
ret
or
xchg
xchg
xchg
inc
lea
divb
out
pop
push
movsb
mov
jecxz
sub
je
xor
pop
mov
jbe
cmc
fwait
sarb
in
stos
stc
cld
mov
loopne
in
add
sbb
mov
xchg
jle
stc
pop
adc
sub
rclb
jmp
movsl
push
aam
push
in
or
cmp
xchg
fnstsw
inc
add
push
pop
lret
mov
arpl
pop
add
cltd
imul
inc
pop
jns
popf
sti
cld
xchg
pop
push
mov
mov
pusha
mov
ljmp
adc
jb
leave
incl
pop
cmp
fs
push
mov
xor
ljmp
jle
rol
shll
js
pop
std
dec
xchg
jne
jl
icebp
add
push
cwtl
dec
shl
scas
mov
fsts
jecxz
or
shrl
cmp
mov
mov
mov
push
neg
adc
push
repz
inc
aaa
push
mov
dec
cmc
cmp
sub
sub
inc
testl
push
cmp
xchg
aam
into
test
sbb
and
pop
push
pop
in
dec
add
jp
mov
pop
imul
sub
dec
lods
mov
or
cmp
rcll
mov
inc
popa
cmp
jecxz
dec
mov
std
mov
and
js
std
cmpsl
aas
dec
arpl
push
iret
insl
and
push
cmpl
add
lods
shl
repnz
inc
cltd
pushf
aas
mov
add
shlb
mov
adc
inc
data16
test
mov
cltd
cmp
push
in
jne
adc
daa
jnp
pop
push
gs
xor
xchg
cmpsl
adc
cmp
idivb
das
xchg
in
and
mov
xor
shrl
test
sbb
mov
xchg
adc
lahf
les
fbld
push
add
pop
in
mov
hlt
xchg
mov
mov
dec
loop
and
xor
fisubrl
xchg
mov
mov
jge
pushf
xor
out
scas
iret
add
pop
mov
mov
pop
pop
mov
xor
inc
mov
movsb
ljmp
ret
mov
jbe
cmpsl
add
push
or
adc
in
les
xor
sub
shrb
xchg
mov
push
stos
or
xor
mov
sahf
jge
int
jecxz
mov
add
inc
cmp
mov
push
fbstp
insb
and
mov
mov
mov
mov
push
adc
sub
in
or
xlat
out
adc
dec
push
dec
mov
pop
aaa
nop
xchg
repz
js
xchg
xchg
sub
jns,pt
xchg
add
shl
adc
xchg
cwtl
pop
mov
jecxz
add
xchg
enter
pusha
or
adc
jecxz
dec
adc
in
fcmovbe
mov
jns
imull
repnz
cmp
btc
repnz
adc
xchg
into
dec
sbb
xchg
aam
int
inc
loope
cli
dec
addr16
in
stos
shll
cs
into
cmpsl
mov
dec
sti
shll
arpl
repnz
mulb
rcrb
adc
mov
loop
mov
add
add
cmc
in
pop
sub
xor
cwtl
imul
lahf
xchg
or
ja
dec
in
pop
arpl
mov
cmp
shl
ss
lahf
sbb
in
xchg
mov
dec
pop
cmpsb
pop
fs
add
repz
adc
mov
xchg
xor
jnp
mov
push
jmp
insl
mov
lahf
cmp
lods
mov
sub
push
mov
movsb
sub
ret
cld
dec
jne
adc
ds
mov
movsl
movsl
xor
xor
mov
jmp
stos
mov
mov
pop
push
jb
add
cs
or
push
js
dec
xchg
pop
push
dec
scas
xor
aas
fidivrs
sbb
stos
addr16
and
outsl
cmpb
rcrb
pop
rcrl
fbld
xchg
push
lock
xor
jle
adc
cld
movsl
rclb
cmc
dec
lahf
pushf
or
add
loopne
or
add
dec
push
xchg
divl
jge
mov
mov
cld
inc
stos
jbe
adc
mov
test
notl
test
nop
cltd
cltd
imul
mov
or
mov
and
push
ljmp
orb
mov
push
pop
icebp
and
mov
mov
push
inc
stos
or
cmpsb
repnz
xchg
fsub
mov
mov
in
insb
push
mov
aam
insl
es
inc
jmp
jecxz
inc
xchg
fisubl
test
push
push
es
pop
xchg
sub
xchg
sbb
movsb
stos
repz
test
xchg
xchg
imul
xor
out
fwait
jmp
xchg
nop
add
jecxz
sub
and
inc
in
jne
pop
fs
scas
popa
or
mulb
insb
inc
cmp
inc
les
lret
imul
fisubrl
aam
fldt
ja
int3
pushf
jge
fwait
inc
and
jg
pushf
lock
push
scas
ret
out
int
pop
in
in
inc
or
movsl
inc
mov
push
dec
fisttpll
inc
or
xchg
aas
or
inc
adc
mov
dec
jl
mov
bound
sbb
and
call
mov
mov
sbb
dec
negb
push
cmp
sarl
int
mov
jae
and
in
xchg
shll
mov
daa
mov
xor
inc
inc
dec
fs
pop
and
fsubl
stc
xchg
aaa
cld
loopne
dec
loope
mov
pop
and
dec
jl
enter
decl
mov
mov
sub
ficomps
dec
jb
push
clc
scas
jmp
je
adc
adc
stos
inc
or
scas
stos
or
jb
sub
adc
mov
cmp
cmp
popf
push
fisubs
into
popf
push
movsb
jl
pop
popa
js
lahf
push
and
scas
xor
add
inc
mov
push
push
or
inc
in
xchg
push
arpl
pusha
icebp
inc
fwait
jl
and
mov
lahf
cmp
loope
insb
jle
pop
es
mov
adc
in
mov
movl
ret
sub
cli
and
lret
daa
ret
and
pop
fadd
mov
insl
cmp
dec
and
sahf
popf
adc
into
movb
adc
jecxz
addr16
ss
cld
push
sub
hlt
aaa
push
push
sbb
clc
out
mull
xor
loopne
mov
xor
xchg
mov
pusha
cmp
pusha
test
xor
lods
lods
bound
lea
inc
repnz
adc
and
popf
pop
je,pt
sub
in
push
ds
mov
sbb
xor
xorl
mov
icebp
lods
arpl
outsl
aad
mov
fcos
fsubl
pop
rorb
push
pop
cmpsl
dec
and
lahf
dec
pop
repnz
ja
data16
nop
test
out
dec
or
neg
push
add
pop
fstpt
stc
cmp
dec
loop
sub
outsb
dec
jmp
fidivrl
jge
fsubp
and
test
pop
rcrl
xchg
dec
stos
popa
xchg
fsubs
sahf
jmp
mov
dec
add
mov
add
xor
in
cmp
gs
subl
into
mov
pop
loope
sbb
cmpsl
pop
dec
mov
int
adc
out
cwtl
dec
mov
lcall
xor
call
inc
mov
mov
inc
pop
movsl
pop
test
mov
in
fistpl
das
pushf
jg
les
xchg
sub
aaa
and
gs
ss
sbb
xor
mov
and
jle
arpl
xor
jb
pop
cmp
inc
out
in
fisttpll
test
out
aam
outsl
hlt
sbb
push
insl
outsl
sti
std
loopne
repnz
aas
lcall
int3
fsubp
not
das
retw
xchg
imul
push
dec
ret
jge
pop
xchg
mov
dec
cmp
ret
inc
sbbb
cmp
jl
xor
jmp
iret
mov
jnp
loope
xchg
ret
lahf
add
sti
sbb
lcall
add
fdiv
bound
mov
mov
xchg
int3
adc
or
outsb
inc
pop
jmp
mov
fsubrl
or
out
cld
pop
mov
lods
dec
jecxz
dec
aas
leave
xchg
mov
mov
xor
and
mov
stc
dec
pop
les
ss
call
adc
pop
in
loope
dec
jae
mov
jg
cmp
and
cmp
mov
rcrl
enter
pop
cltd
mov
fwait
and
inc
pop
xchg
mov
sarb
jb
push
dec
cmp
inc
xchg
ret
push
test
xlat
clc
push
pop
xor
repz
std
loopne
das
cmp
jmp
jmp
je
xor
mov
push
loope
jnp
ret
test
mov
pushf
add
movsb
xchg
pop
icebp
cmp
sbbb
and
insl
or
push
sarb
into
push
pop
mov
mov
sub
das
jge
xlat
xchg
sarl
push
add
hlt
in
and
mov
pop
pop
lahf
pop
scas
pop
pop
adc
out
lcall
sti
int3
inc
lods
dec
dec
cltd
ja
adcb
cwtl
pop
jns
jno
in
cmpl
imul
dec
es
mov
arpl
pop
cmp
jno
fadd
loop
fstps
xor
loopne
inc
mov
inc
pushf
stos
jmp
je
mov
cltd
xchg
dec
sbb
cmp
mov
mov
rorb
sub
jbe
dec
pop
jle
aam
inc
pop
mov
pop
int
stos
jp
cld
pop
adc
pop
ljmp
test
jbe
mov
mov
ffree
adc
mov
push
clc
xchg
dec
push
test
ss
push
mov
lds
sbbl
pop
lahf
shrl
lahf
ljmp
push
jbe
push
jl
push
les
loop
movsl
cmp
les
sbb
or
sbb
popa
sub
ficoml
bound
push
xor
pop
push
cmp
pop
mov
lods
xor
push
sbb
push
adc
mov
out
into
cwtl
xor
jae
test
push
pop
stos
repnz
mov
scas
fnstenv
leave
int
jmp
pop
shr
outsb
cli
shrb
pop
xor
in
sbb
outsb
pusha
jae
jb
pop
jo
inc
jmp
mov
rdtsc
jp
stos
pop
sbb
gs
inc
ljmp
mov
mov
jnp
xchg
push
das
std
push
add
mov
and
or
or
mov
xchg
and
adc
cs
add
cmp
cmp
pusha
repnz
addr16
stos
sbb
pop
or
jl
loope
mov
mov
xchg
xchg
sbb
shl
outsb
mov
test
testb
loopne
icebp
mov
cmpsl
mov
jg
xor
and
orl
in
out
push
push
daa
pop
adc
push
jno
pinsrw
push
fs
test
frstor
jo
sti
mov
inc
lahf
push
cmp
dec
outsb
or
mov
mov
inc
aam
jb
out
in
out
pop
xchg
mov
sub
insl
inc
push
movb
lods
mov
mov
jno
mov
cmp
jecxz
mov
cmc
xor
loope
nop
pop
je
call
int3
sahf
movsl
mov
call
mov
dec
fbld
push
inc
test
jl
and
add
mov
pop
pop
cmpsl
inc
fldt
mov
mov
sub
xchg
cld
popa
scas
mov
mov
and
push
inc
mov
or
jmp
outsb
mov
or
scas
mov
leave
pop
pop
push
sti
out
adc
in
jne
sbb
pop
mov
xchg
lock
sbb
fidivrl
cli
pop
push
ljmp
dec
dec
push
inc
sub
jge
dec
arpl
mov
into
pop
cmpsb
cli
push
outsl
enter
lret
sub
sub
or
mov
pop
sahf
xchg
xor
test
lods
lods
mov
xchg
insb
and
popa
mov
cmp
movsl
push
int3
ds
jl
pop
xchg
sbb
mov
add
fsubl
mov
mov
shrl
mov
inc
loopne
fldt
add
or
or
sbb
scas
jne
push
lcall
nop
sub
jmp
out
and
test
ret
jmp
aas
jbe
xlat
pushf
sbb
push
loope
shlb
cs
outsb
mov
out
notb
lret
jmp
je
repnz
push
xchg
into
shl
pop
inc
inc
dec
jnp
push
push
jge
xchg
sub
jecxz
jg
rolb
aas
pop
add
xor
xchg
jae
jb
hlt
sti
lret
inc
sub
jmp
int
out
xchg
into
push
mov
push
jb
add
mov
hlt
mov
mov
adc
pop
inc
insb
sbb
repz
add
mov
mov
sub
int
and
aaa
pop
jns
ret
orl
adc
pop
les
lods
inc
or
mov
dec
ljmp
push
fisubrl
out
stos
or
rcll
mov
fiaddl
mov
jnp
fsub
mov
ss
leave
mov
and
adc
jmp
sbb
jno
mov
push
lahf
ficomps
repnz
mov
daa
push
cmpsl
xchg
addr16
mov
int3
dec
xchg
mov
mov
pop
mov
add
fmuls
or
movsl
std
jmp
aad
xchg
sbb
adc
ds
lock
sahf
jl
fmulp
xchg
bound
dec
inc
jmp
push
out
sub
rorb
jae
jg
cmp
jmp
loope
lahf
test
mov
mov
pop
pop
ljmp
pop
dec
and
mov
sahf
fisubs
fistpl
sub
fld
push
gs
pusha
adc
lods
sbb
push
cmp
scas
int3
pop
in
pop
fcmovu
in
adc
rorl
ja
push
das
in
mov
and
loop
aam
mov
xor
stos
add
in
xchg
mov
pop
mov
inc
das
xor
xor
dec
testb
mov
pop
divl
xor
and
lret
pop
push
lods
add
xor
iret
aas
adc
jnp
fs
ja
cmp
inc
gs
iret
in
and
loopne
add
sub
and
mov
sub
inc
jb
mov
fs
add
sub
and
cmp
pop
loop
sarb
iret
pop
mov
mov
inc
icebp
mov
or
adc
or
xor
jge
outsl
pop
push
mov
xchg
adc
fisttpll
push
inc
dec
repnz
fistpl
shl
sbb
cwtl
test
mov
jns
je
out
xchg
pslld
in
lret
stos
or
rorb
push
fnstenv
in
inc
jbe
jmp
push
jge
fidivrl
pop
xchg
daa
push
jecxz
movsb
cld
mov
idivl
ficoms
sbbl
popa
xchg
xchg
push
aas
out
dec
insb
and
xlat
cwtl
xchg
js
scas
sub
sub
leave
add
push
fsub
pop
push
add
dec
div
stos
xchg
lret
cmc
mov
js
lods
outsl
sub
cmpsl
cltd
sub
rcll
imul
inc
cmpsl
sbb
mov
push
in
movsl
out
mov
jl
or
scas
fucomip
adc
imul
das
adcb
repnz
sbb
mov
bound
aaa
das
rol
pop
dec
js
adc
scas
jge
clc
into
lds
insl
shlb
push
sbb
rcrb
movsl
test
subl
dec
call
add
dec
inc
add
mov
scas
add
pushl
ret
mov
sbb
imul
xchg
push
add
les
ss
scas
mov
jecxz
js
mov
nop
andl
push
xor
mov
mov
outsb
pop
test
dec
mov
movsl
mov
popf
jbe
subb
ja
mov
fcmovnu
lahf
jmp
dec
sub
mov
or
test
scas
dec
mov
in
jl
sbb
jnp
mov
repz
popf
or
call
dec
enter
hlt
cmpsb
push
jo
pop
dec
pop
shrb
pop
mov
or
ret
push
cmpl
jo
fcmovu
subl
dec
mov
add
inc
or
push
push
mov
push
push
mov
std
stos
dec
sti
xchg
push
mov
cmp
pushf
ds
cli
nop
sbb
mov
pop
ljmp
insl
rorb
ss
decb
js
rolb
xchg
cmp
mov
mov
outsb
mov
pop
out
dec
js
hlt
jp
int3
loop
outsb
jo
xlat
mov
add
push
cltd
mov
xchg
push
mov
dec
dec
xchg
xlat
pusha
je
enter
out
push
add
and
ss
popl
push
jmp
xor
fisubrs
add
ja
fmul
jbe
out
es
out
lret
mov
lods
pop
aaa
or
imul
enter
fwait
mov
and
or
and
jle
jo
and
adc
jbe
icebp
jmp
test
nop
cltd
mov
std
mov
sub
push
scas
sbb
push
pop
repz
test
es
pop
pop
or
fdivrs
loop
mov
cmpsl
lcall
dec
sahf
mov
jae
cmp
dec
cmp
inc
movsb
inc
cmc
push
insl
pusha
jge
or
daa
mov
fistpl
leave
fs
sbb
sub
mov
in
popa
inc
call
cld
cli
sbb
cmp
push
mov
rorb
filds
add
sub
mov
dec
rorb
scas
xchg
aaa
inc
mov
insl
rorl
ja
xchg
jmp
js
jp
in
loopne
and
daa
nop
and
lods
pop
femms
push
hlt
push
inc
sub
or
cmpl
and
mov
xor
push
daa
push
call
mov
test
mov
pop
push
jg
outsl
or
adcl
inc
push
ret
pop
mov
insl
xchg
and
push
mov
xor
fmulp
popa
shrl
aam
lret
imul
out
xlat
jne
cmc
mov
insb
orb
mov
xchg
dec
testb
repz
xchg
mov
dec
xchg
ss
jb
and
rorb
pop
popa
hlt
enter
rorl
xor
subb
or
in
mov
push
test
les
pusha
fs
dec
sub
adc
popa
add
out
inc
movsl
pop
les
mov
inc
ljmp
mov
es
data16
test
fdivr
fstpl
mov
testl
or
into
mov
test
stos
out
loopne
mov
in
arpl
aam
xor
nop
addr16
sbb
dec
xor
mov
mov
inc
daa
das
mov
fmul
jle
mov
push
popl
outsb
xor
jl
in
sbb
xchg
pop
add
sbb
stc
adc
loope
mov
outsl
xchg
outsb
ret
lods
sbb
dec
xor
and
xchg
lahf
idivl
hlt
or
arpl
sub
fcmovnbe
rclb
icebp
add
xor
push
std
mov
mov
push
add
dec
pop
adc
pop
adc
sub
adc
and
dec
ficoms
jecxz
mov
push
pop
jge
inc
js
sbb
imul
outsb
arpl
outsl
pop
pop
cmp
mov
test
sub
sbb
popf
mov
push
lds
fcomp
jg
sbb
and
lret
push
dec
xor
inc
test
int3
pop
jle
loope
mov
gs
inc
xor
loopne
dec
jne
insl
cmc
out
ja
into
mov
std
sbb
fisubrs
sub
pop
lret
and
cmpsb
cld
movsb
and
lock
dec
in
fisubs
add
mov
adc
mov
pop
jle
stc
dec
insb
dec
arpl
mov
mov
xchg
scas
rcrl
cmpsl
test
fwait
test
enter
out
hlt
dec
insl
pushf
or
insb
xchg
xchg
jge
scas
ja
rcr
sbb
push
iret
faddp
aaa
jnp
adc
push
repnz
mov
lret
lahf
insl
hlt
lock
cwtl
xlat
push
in
jo
xor
xor
sbb
mov
xor
stos
test
imull
mov
scas
adc
adc
inc
lcall
inc
sub
test
push
xor
cmpsb
push
inc
loopne
cmc
mov
sbb
xchg
mov
jbe
xchg
cmpsl
jl
out
and
jg
xlat
movsb
enter
push
imul
sbb
test
push
and
mov
stc
jecxz
add
shrb
xor
lret
push
adc
repz
and
stos
jmp
addr16
pop
dec
movsl
sub
mov
sarb
sti
fidivs
jne
aas
das
pop
adc
imul
xor
mov
imul
push
int
inc
mov
inc
sbb
or
lods
sbb
cmpb
or
push
push
lock
test
push
pop
push
adcl
and
xor
leave
xor
push
lds
out
inc
outsb
sbb
mov
lcall
int
pop
test
out
mov
movsb
jl
out
lock
out
out
xor
adc
xor
cmpsl
push
add
push
jbe
jb
fmull
in
jne
lret
or
mov
pop
or
adc
xchg
xchg
mov
inc
pop
fisubs
leave
mov
push
enter
hlt
xor
cmp
inc
xchg
dec
gs
pushf
push
sti
subl
xchg
movsl
mov
adc
nop
inc
loope
and
mov
jo
cmc
mov
adc
clc
movl
xor
inc
sub
cmpb
jle
loope
xor
mov
idivl
out
jl
test
in
out
jge
dec
mov
inc
mov
lods
push
lea
sbb
in
mov
or
leave
hlt
dec
cltd
fs
jl
cmp
leave
xorb
cmp
aas
gs
jge
cmp
push
insl
imul
dec
add
pop
in
mov
cld
xchg
jl
ret
outsb
mov
inc
push
or
dec
rclb
std
mov
jmp
punpckhdq
xchg
mov
ss
mov
pop
mov
or
lods
rorb
outsb
cmpsb
rorb
lods
xchg
movsl
out
popf
jge
adc
gs
adc
mov
in
mov
jbe
cmp
cmp
mov
mov
sbb
imul
adc
sarl
mov
out
clc
pop
mov
iret
movsb
dec
orl
adc
popf
push
daa
adc
push
adc
jno
fisubl
sub
jo
or
push
icebp
stc
mov
xchg
popa
stos
jge
push
fnstenv
pop
ds
jmp
insb
sahf
fnsave
inc
inc
xlat
test
jmp
lahf
pushl
and
xchg
and
test
aad
mov
mov
jecxz
addb
scas
je
inc
lds
pop
movsb
mov
jle
fistl
movsb
lock
lret
jmp
pop
inc
ds
mov
mov
lods
movb
jecxz
mov
mov
add
data16
or
mov
sub
aas
and
das
or
outsl
or
or
fnstsw
popf
lods
mov
insl
pop
cmc
push
and
jecxz
or
or
arpl
xchg
daa
jg
mov
or
into
in
mov
adc
sti
pop
add
aad
push
sbb
lcall
cmp
xor
or
ret
xor
in
movsl
cmp
test
pop
sahf
je
xchg
cmp
repz
push
xor
cmp
push
imul
add
pop
in
fsubp
das
mov
jmp
add
jmp
inc
fnsave
jnp
or
push
sbb
in
loopne
mov
mov
mov
mov
sub
mov
xor
stc
pmuludq
pop
aaa
xchg
iret
rcll
push
in
pop
xlat
cmp
dec
dec
adc
mov
hlt
stos
insb
inc
xchg
jns
pop
movsb
fidivs
jg
out
icebp
cmp
jecxz
es
pop
mov
movsl
clc
mov
cld
ret
mov
inc
mov
sti
xor
sahf
jne
add
sub
mov
cmp
inc
mov
add
dec
je,pn
popf
lods
sub
push
movsb
cmpsb
xor
lods
mov
fistl
adc
icebp
test
xchg
outsb
jmp
push
jb
cli
cmp
outsl
ficoml
xorl
adcl
mov
jl
or
pop
cmp
ljmp
mov
test
sar
setb
pop
lods
sbb
test
in
jns
arpl
xchg
leave
sbb
mov
imul
stos
in
call
cmpsb
ret
mov
and
loopne
mov
ja
cmp
push
hlt
xor
sahf
pop
in
pop
leave
lods
and
bound
int
add
testb
fists
subl
ficompl
mov
cmp
jno
cmp
xor
sub
daa
xchg
push
cwtl
daa
xor
or
cli
mov
dec
pushf
cmp
testl
inc
inc
nop
arpl
mov
repz
mov
jp
jl
inc
loop
cli
loop
mov
in
cmp
pop
pushf
filds
int
pusha
rcr
cmc
ljmp
dec
adc
out
jp
imul
aas
inc
adc
stos
inc
je
bnd
pop
dec
jae
into
pop
cmc
dec
mov
and
sbb
mov
andb
adc
pop
lret
ret
int3
xor
mov
xor
fs
xchg
xor
scas
adc
mov
jbe
mov
cmp
cwtl
cmc
cwtl
sub
enter
xchg
push
push
sbb
in
stos
subl
dec
iret
cmpsl
aam
inc
out
jecxz
lock
scas
push
sahf
adc
pop
jo
aad
aam
scas
pop
fsubrs
cmp
rcrl
cmp
pop
jl
iret
jns
and
pop
ss
jp
or
cmp
cmp
gs
jge
sbb
aaa
mov
lea
in
das
inc
addl
loopne
lds
bnd
filds
pop
loope
bsr
rorb
roll
shl
scas
jg
sub
jg
inc
inc
cwtl
out
add
into
adc
jns
pop
xor
or
cwtl
or
aas
add
adcb
xchg
orps
cmp
push
push
inc
jl
mov
lea
cld
call
push
inc
insl
int
movsl
sub
hlt
lahf
xlat
adc
pop
inc
ret
xor
movsb
imul
xchg
outsb
push
pusha
aad
mov
dec
mov
dec
cltd
pop
icebp
mov
jne
clc
icebp
test
cmpsl
dec
push
mov
jl
lcall
dec
cs
add
in
add
out
les
mov
mov
push
lahf
xor
inc
nop
xchg
mov
cld
or
cmp
jo
or
in
sub
loop
loop
cmpsb
adc
aaa
test
dec
mov
cmpb
imul
incb
fcompl
inc
repnz
jl
ja
xor
orb
xchg
dec
rorb
inc
inc
rdmsr
icebp
lods
in
pop
mulb
aas
mov
jbe
mov
pushf
jecxz
jno
outsl
push
jae
mov
mov
das
in
jns
jg
sub
fldcw
push
jge
pop
inc
cltd
push
or
dec
clc
jmp
cmp
sub
stos
cmp
fs
push
or
testl
lea
icebp
iret
repnz
test
mov
mov
cmpb
xchg
aas
shll
and
frstor
clc
out
mov
insl
das
ret
and
push
push
cmp
sar
xor
sbb
sbb
push
out
pop
adc
add
sub
insl
sub
push
clc
daa
sahf
add
or
dec
rorl
lahf
pushf
or
out
inc
inc
out
out
mov
fwait
ljmp
dec
xor
or
rolb
and
maskmovq
imull
cs
iret
sbbl
cli
lret
and
jnp
push
push
adc
outsl
fisubs
push
sub
cmp
dec
mov
icebp
add
shl
sahf
daa
cltd
jae
mov
idivb
fbld
sub
gs
mov
pop
testl
cmpsl
mov
arpl
cmc
cld
repz
iret
out
stc
cmp
cmc
pop
fstpl
xor
cmpb
adc
insb
movsl
mov
adc
testb
sub
aam
push
andl
in
std
popa
xchg
jb
cmp
test
mov
jno
in
int3
mov
ror
mov
inc
push
clc
call
jmp
pushf
pop
push
daa
or
sub
je
sbb
sahf
dec
std
pop
cs
xlat
jne
sahf
mov
int3
lock
addr16
xchg
push
push
enter
mov
dec
jle
push
cmp
mov
pop
mov
aad
iret
mov
jb
orl
mov
push
xchg
inc
rol
test
adc
aad
stos
add
mov
fstpt
lahf
inc
lea
pop
cmc
sbb
iret
or
imull
sub
jbe
enter
jo
rcr
xlat
shll
jnp
fs
imul
sbb
mov
and
mov
cmp
add
mov
lds
sbb
hlt
mov
loopne
xchg
out
stc
dec
inc
outsb
push
aaa
mov
out
xchg
cmp
lahf
loope
out
mov
dec
fidivrl
push
sub
xchg
mov
out
and
inc
and
dec
pop
mov
rcrb
sub
popf
dec
push
test
mov
subl
sub
out
cmc
xor
dec
jo
stos
loope
dec
movsb
xchg
push
test
cmp
ja
xchg
cmpsl
popa
call
mov
hlt
push
push
sbb
push
sbb
add
mov
cmp
adc
push
pop
insl
xchg
aas
push
das
mov
cmpsb
push
sti
fldl
call
aaa
mov
adc
adc
addl
push
mov
cmp
mov
mov
mov
fld
mov
loopne
cmpsb
test
add
shr
lods
rcrb
dec
stos
lods
out
ficomps
enter
mov
cmp
js
and
insl
out
push
sbb
sbb
push
jae
and
dec
subl
or
enter
incl
cmp
stc
test
cwtl
push
inc
xor
and
push
pop
push
mov
fldt
or
loope
xchg
test
popf
xor
cmp
sub
xchg
mov
mov
flds
popf
dec
cli
ret
sub
mov
sbb
rep
test
in
ljmp
cwtl
mull
dec
mov
nop
mov
cwtl
sbb
mov
add
adc
pop
repnz
mov
cld
int
aad
cmp
outsb
icebp
xchg
dec
rclb
aam
inc
jo
xchg
cmp
mov
pop
and
push
push
pop
mov
sarb
scas
in
push
add
mov
jmp
inc
dec
lret
enter
es
pop
dec
add
mov
push
cmp
aad
loope
je
add
out
sbb
adc
mov
mov
clc
mov
xlat
nop
dec
jbe
fisttps
aad
das
in
fsubl
ja
cs
xor
jae
jl
add
inc
xchg
xchg
cmc
ficoms
add
or
lret
lods
inc
add
gs
ljmp
in
data16
add
push
mov
aas
pop
gs
loopne
pushf
cmp
outsl
adc
jno
sbb
push
ds
mov
adc
xchg
sbb
cmp
jle
jg
gs
xor
cmc
jp
pop
hlt
loop
push
push
aad
xchg
mov
xchg
or
insb
mov
and
lock
cli
mov
out
sub
leave
xchg
push
rorl
fsubl
push
mov
cmp
cmp
mov
repz
dec
fidivrl
dec
andb
ror
insl
lret
movsb
add
add
sbb
in
in
sbb
jbe
dec
shlb
or
lcall
push
dec
imul
aas
xchg
nop
adc
divl
or
sbb
nop
mov
loop
and
pop
jb
and
or
ret
mov
sbb
add
fwait
std
mov
push
int
lret
mov
jne
and
mov
cmp
or
add
dec
add
jecxz
fsub
lods
outsl
loop
cs
inc
jge
inc
xchg
jns
dec
jl
xchg
jle
lahf
sub
push
clc
les
movl
dec
stc
dec
xor
cmp
scas
dec
jp
mov
mov
repnz
and
add
add
dec
mov
aam
jae
test
sbb
pop
leave
xchg
ljmp
pop
lds
fdivp
or
mov
cld
xor
shl
orb
call
push
and
mov
and
or
jecxz
into
sbb
ja
inc
cli
push
add
addl
sub
loop
jb
pop
mov
xor
inc
jp
jo
ffree
mov
xchg
jle
fwait
pop
push
lahf
mov
sub
add
dec
icebp
add
jmp
lods
pop
inc
icebp
xchg
add
mov
and
push
jle
dec
mov
ss
popf
xchg
adc
adc
stos
xor
dec
lcall
stos
lcall
dec
xchg
sbb
mov
in
push
fbld
pop
inc
stos
test
test
test
loopne
add
pop
mov
mov
mov
mov
bound
mov
lock
movsb
jg
xchg
jb
push
fabs
mov
jge
fcomip
inc
test
mov
push
in
ss
or
and
cmpsl
xor
and
and
and
mov
jb
in
into
mov
sub
inc
lods
shr
xor
mov
pop
jmp
cmpsl
fdivl
add
sbb
jge
push
iret
add
cwtl
pop
mov
sbb
sbb
cmp
xchg
mov
hlt
and
jo
mov
pushf
xor
or
insl
cmpsb
idivb
xchg
mov
adc
fdivrs
roll
pushf
xor
das
and
mov
movsb
rcrb
out
xchg
dec
repnz
dec
sahf
pop
adcb
xchg
sahf
repnz
and
sti
outsl
cmp
xchg
inc
shl
cltd
mov
mov
mov
mov
pop
psubd
sbb
lcall
add
lahf
out
gs
aam
scas
or
pop
lret
negl
nop
addb
gs
jl
test
sub
out
insb
xor
cmp
shl
add
add
add
rcrb
push
ret
push
mov
mov
adc
loop
mov
cmpsb
insl
imul
out
mov
mov
mov
cli
xor
mov
addb
jecxz
dec
pushf
push
jbe
sub
add
mov
inc
aam
jb
fs
jmp
test
es
mov
int3
daa
les
sbb
roll
xchg
gs
sti
cmp
fs
lods
sahf
mov
ds
dec
ret
mov
iret
jmp
daa
aas
movsl
inc
sub
add
sbbb
and
aas
pushf
pusha
and
xor
push
call
cltd
in
cmp
ds
push
cli
pop
inc
jae
cmp
fs
cmpsl
imul
leave
mov
add
push
xor
mov
mov
fstpt
outsb
and
sub
jnp
or
push
lret
repz
jnp
fildl
xlat
outsb
and
jecxz
adc
mov
sbb
into
movsb
call
pop
dec
lret
jmp
mov
pop
dec
das
test
cmp
repnz
cmc
outsb
xchg
inc
mov
adc
sbb
adc
or
inc
outsl
int3
movsb
ja
sahf
mov
sbb
hlt
daa
sub
dec
loop
fnstcw
mov
stos
jmp
jno
daa
xchg
push
imul
rorb
popf
lea
xchg
and
sbb
sbb
jo
cld
out
xchg
cmp
dec
in
pop
hlt
int
sub
push
rcll
imul
insb
gs
adc
adc
dec
sub
xor
rolb
std
mov
fmul
pop
pop
mov
cld
dec
cmp
xor
scas
repz
or
jge
call
cli
shlb
adcl
adc
mov
cld
repnz
lods
xor
loop
iret
outsl
inc
dec
jecxz
ljmp
jnp
fs
xor
or
push
out
or
loopne
fstpl
fnstcw
bnd
mov
mov
push
mov
cs
mov
sub
sbb
mov
sbb
xchg
ljmp
stos
lock
int3
add
fnsave
repz
inc
dec
jns
xchg
cmp
in
ret
sub
add
pop
mov
stc
jns
cmp
int3
clc
push
dec
in
outsb
cmc
mov
jae
cs
add
movsb
rclb
sahf
push
ja
xor
inc
in
dec
jle
pop
xchg
paddq
sub
sub
or
pop
hlt
outsl
sub
add
and
cmpsl
mov
push
add
mov
out
inc
je
mov
jnp
scas
dec
mov
push
out
and
fwait
push
popa
loope
push
jle
test
sbb
fisubrl
push
outsb
dec
add
mov
sub
aam
mov
cmp
jge
scas
push
cmp
cmpsl
cmp
jns
sbb
push
push
mov
fs
cmp
icebp
dec
cld
sbb
insb
outsl
cltd
cmp
pop
sahf
cs
mov
jb
or
icebp
aad
jno,pn
movsl
mov
ss
out
cmpsb
das
xchg
fistps
inc
or
push
or
movsb
or
in
inc
push
jle
rcr
mov
xor
jl
fidivrl
xchg
dec
sub
dec
ret
push
jb
jbe
ficoml
mov
fadd
jo
inc
andb
pop
jo
loopne
cli
xchg
imul
inc
aam
push
mov
ficoms
leave
iret
mov
sub
cmp
xchg
mov
mov
or
xchg
cmp
pop
xlat
mov
fcmovb
mov
cmc
cmpsl
and
lret
sarl
and
inc
outsl
test
arpl
addb
stc
and
add
push
jns
cmpsl
pop
dec
dec
lret
imul
fdivr
jbe
sbb
fistps
inc
or
lahf
push
xor
jns
jmp
push
mov
out
jns
or
mov
cs
xor
adc
js
arpl
mov
adc
inc
cltd
mov
loopne
or
lret
das
mov
and
lret
pcmpeqd
fldcw
mov
cld
cmpsl
jb
ret
mov
sbb
xor
add
cmp
repz
pusha
out
xor
aam
mov
aam
shlb
out
shr
mov
daa
or
call
mov
push
jmp
aam
pop
and
mov
pushf
pop
sbb
push
popf
and
mov
mov
inc
bswap
ljmp
add
rcll
add
sub
xchg
lret
icebp
xor
push
xchg
decb
adc
sub
in
pop
push
lahf
filds
mov
icebp
bound
inc
ret
mov
sbb
shrl
push
addr16
push
cmp
sub
fs
or
test
jo
and
dec
orl
mov
leave
mov
pop
fdivs
outsb
mov
push
loope
pop
mov
xor
pusha
out
sbbb
imul
push
rcrb
movsl
iret
push
inc
mov
add
lods
shl
cltd
dec
xor
sub
fists
push
inc
jo
pop
sub
aam
push
mov
out
and
sbb
mov
jmp
mov
or
xchg
dec
imul
sub
adc
icebp
push
leave
adc
pop
mov
mov
cmpsb
mov
leave
add
mov
dec
add
fs
mov
mov
repnz
lahf
loop
mov
jle
jbe
mov
test
push
pop
pop
shll
push
and
stos
fs
dec
add
xor
loope
lcall
push
jle
arpl
rcl
in
dec
fs
pop
daa
jno
ror
xor
cmp
inc
jle
dec
arpl
test
dec
dec
xchg
adc
rorb
sub
fwait
loope
fcomps
stc
dec
xchg
pop
aam
es
les
mov
adc
outsl
sub
sub
enter
pop
pop
inc
and
bound
pusha
dec
xlat
sar
hlt
sub
idivb
cmp
cmp
xchg
adc
mov
cs
rcrl
or
or
sahf
ss
stos
movsb
ljmp
stc
push
loope
jle
cmpsl
or
cs
mov
mov
icebp
aam
pushf
xchg
lcall
addr16
xor
mov
and
and
sbb
arpl
insb
out
pop
ret
mov
sub
jb
out
jbe
cld
xor
outsb
aad
jmp
int3
dec
dec
in
xor
cmp
push
push
outsb
incb
int
stos
ja
outsb
dec
outsl
adc
jnp
je
out
pop
jnp
in
scas
xor
gs
fnstenv
xchg
cli
aam
lea
push
lcall
into
test
push
mov
pop
cltd
frstor
test
je
repz
rcrb
xor
xchg
dec
pop
mov
idivb
int
imul
aad
mov
cli
stos
adc
and
jmp
movsl
movsl
mov
test
xor
mov
or
cmp
mov
xor
jne
in
adc
js
or
sbb
ja
cmp
inc
lcall
add
test
into
pop
xchg
dec
lret
dec
xchg
sub
das
dec
sbb
mov
fdivs
fidivs
lret
sub
mov
xor
jno
push
inc
xor
out
dec
dec
pop
outsb
popf
sti
decl
mov
cld
cmp
dec
cmpb
inc
or
movsl
add
into
and
fsts
pop
les
dec
jge
push
push
add
jmp
bound
cmp
adc
and
subl
or
xlat
sbb
jle
clc
cltd
fildll
aam
jg
das
into
pause
scas
js
testb
push
dec
out
sahf
ds
and
es
mov
test
sbb
iret
repnz
sbb
ret
out
inc
mov
sti
jo
push
mov
outsb
inc
testb
dec
mov
mov
sub
leave
stos
mov
pusha
mov
pushf
rcrl
notl
jge
scas
adc
dec
imull
and
fildl
xor
cmp
or
cmp
movl
movb
enter
and
dec
add
jmp
std
subl
bswap
push
inc
push
sbb
lock
loop
ljmp
popa
mov
sub
not
pop
add
cwtd
insl
mov
xchg
fldenv
sub
dec
mov
jle
mov
mov
xchg
cmp
push
cmp
jae
jge
popa
pop
add
xchg
pop
stc
sub
xor
lahf
insl
imul
out
mov
and
xor
xchg
sarb
icebp
addr16
dec
jge
sub
lods
lea
push
pop
ror
clc
ljmp
jno
or
idivb
notb
popf
jecxz
or
fnsave
or
in
cmp
lea
adc
fld1
int3
jl
lret
fsubr
pop
sbb
rclb
inc
cld
das
imul
push
pop
mov
sub
cmp
jg
dec
dec
mov
ret
mov
out
mov
pop
test
add
loop
mov
repnz
xor
cmp
and
not
stc
push
and
leave
and
add
outsb
mov
jbe
mov
mov
jno
shrl
dec
cmp
insl
sbb
jbe
enter
pop
inc
ljmp
pop
push
test
xor
in
sbb
inc
xchg
icebp
jmp
xor
jl
dec
enter
int
mov
sahf
mov
push
and
xchg
mov
mov
inc
repnz
mov
sbb
movsb
out
lret
xchg
dec
idiv
pop
add
aad
or
or
rcrl
das
sti
cmp
shrb
xchg
adc
and
movsb
and
mov
outsl
leave
fimull
lcall
push
pusha
rol
in
xlat
pushl
pop
and
jle
or
stc
bnd
or
pop
les
movl
xor
lret
icebp
iret
mov
push
fwait
sbb
push
lea
pop
add
pop
test
mov
popf
push
cmp
lods
jle
push
lret
sbb
outsb
in
stos
mov
pop
pop
addl
loope
lods
stos
movsl
adc
sub
in
inc
cmp
push
imul
push
and
sub
jle
adcl
mov
sub
add
cmp
mov
sub
mov
not
dec
or
inc
mov
cmp
rorb
outsb
iret
mov
sbb
and
jnp
and
pop
cmpsb
jge
jp
adc
ja
xchg
js
mov
xchg
dec
sub
ds
lcall
or
xchg
test
sti
fwait
das
push
sub
icebp
stos
xchg
push
xchg
xchg
lods
popa
sub
xchg
movsl
xchg
cmp
fsub
xchg
rcrl
pop
sbb
cmpl
sbbb
je
adc
call
xchg
fdivs
xchg
cltd
into
in
aam
add
push
out
test
jnp
cld
jg
mov
jg
nop
push
insb
or
in
add
cmc
repnz
mov
sub
stc
and
jmp
sbb
orb
cmpsb
sbb
pop
movsb
xchg
cmp
scas
dec
call
orb
in
cld
push
jg
nop
push
push
jle
and
cmp
dec
adc
lods
pop
inc
out
xor
insb
mov
jnp
insl
mov
in
arpl
adc
xor
lret
jo
pop
das
cmc
sub
xor
jns
cwtl
flds
dec
lods
pop
dec
push
sbb
lret
jecxz
jp
mov
addb
loop
pop
icebp
fistps
movsl
sbbl
dec
nop
inc
decb
jge
out
dec
jns
in
mov
push
push
stos
nop
imul
enter
movsl
daa
inc
dec
pop
fiadds
mov
dec
mov
jo
sub
scas
lcall
adc
out
leave
cmp
pop
test
or
and
add
adc
mov
jbe
add
mov
mov
inc
mov
stos
cli
hlt
xchg
mov
and
xor
lods
or
popf
fs
insb
aaa
mov
jne
push
push
mov
imul
ja
add
imul
imul
pushf
fstps
jne
aad
inc
insl
popa
int
add
sbb
aas
popa
test
pop
shrl
pop
lret
subb
push
push
adc
inc
push
int3
fistl
pop
arpl
jo
sbbb
push
sub
shlb
mov
data16
bound
mov
push
insl
add
fcmovbe
cld
outsb
pop
ret
daa
jg
pop
cwtl
in
scas
out
jg
out
ror
inc
sahf
imul
or
std
push
xlat
xchg
push
sti
out
cmpl
movsb
fnstcw
and
fcmove
pop
hlt
sub
mov
mov
jb
stos
loopne
mov
js
ds
in
cwtl
push
xor
data16
imul
xlat
jl
addl
sti
adc
cmp
dec
fwait
sbb
outsb
or
and
test
push
adc
add
or
cltd
cltd
xchg
push
mov
or
jb
shll
int3
cltd
orl
xor
iret
adc
push
js
pusha
add
int3
push
cmp
xor
popf
or
inc
int3
mov
fistpl
into
popf
pop
push
xor
das
inc
rcr
jne
mul
jg
sbbb
in
mov
push
xchg
scas
mov
mov
outsl
je
outsl
xor
lds
mov
cmp
inc
in
bnd
push
cltd
ljmp
inc
or
and
or
add
push
jns
bnd
mov
stos
adcb
lock
pushf
mov
and
and
les
clc
jl
out
in
stos
rcrb
jne
movsb
push
dec
sahf
dec
push
pushf
das
out
mov
dec
dec
xor
enter
and
and
inc
in
sub
dec
nop
mov
lret
dec
inc
xchg
movsl
scas
xlat
jmp
mov
sbb
outsl
dec
in
rcrl
int
sbb
mov
or
ja
inc
mov
cmp
jecxz
les
iret
daa
imul
add
jle
add
push
arpl
mov
mov
rclb
cmp
or
or
cmp
lahf
xor
sarb
scas
mov
pmaxsw
fstpt
jns
adc
cld
stos
push
add
lea
xchg
xor
mov
int3
nop
cwtl
mov
fs
pop
aas
jmp
add
or
sbb
mov
pushf
fs
fisubrl
xchg
xchg
nop
js
outsl
and
loope
es
pusha
and
add
pop
mov
adc
or
lods
stc
bnd
adc
pop
in
push
cwtl
jmp
call
mov
sub
sti
lock
lcall
inc
push
ret
jmp
or
pop
xor
and
pop
or
mov
out
push
fstl
nop
in
push
pop
sbb
push
jp
dec
lods
add
cld
sub
scas
jae
jne
xor
mov
movsb
mov
popa
clc
adc
aas
cmpl
xchg
lds
popa
insb
ljmp
js
jns
pop
mov
test
jge
int
insb
jno
dec
push
mov
pop
pop
test
fcoms
in
imul
in
sbb
in
push
into
mov
in
cmc
xchg
data16
mov
scas
fwait
daa
leave
stc
inc
jne
dec
add
shll
out
lock
cmpsl
xchg
or
jno
in
and
mov
loope
fldl
sbb
ror
xchg
xchg
sbb
adc
xchg
fists
sub
xor
adc
add
mov
insl
jl
ret
push
outsb
dec
loope
mov
jnp
aam
push
imul
jb
scas
clc
mov
or
dec
add
jle
push
jbe
lret
inc
cmpb
les
and
int3
push
cltd
cld
cmpsb
rcl
sahf
mov
jnp
mov
fstpl
push
rcrb
push
adc
test
aad
daa
adc
sbb
loop
sbb
jl
mov
cmpsb
mov
enter
mov
cs
popf
push
mov
xchg
cltd
lods
sbb
cmp
cmp
imulb
mov
loop
mov
mov
out
jns
mov
add
cmpsb
mov
jne
inc
mov
inc
lds
es
shll
xor
mov
jle
movsb
pusha
sub
in
test
mov
in
add
fdivrs
or
cmpsb
out
add
out
xor
outsb
jbe
xor
dec
xor
repz
lock
jo
jb
push
cs
popa
sub
outsb
data16
or
or
mov
xlat
dec
push
sub
outsl
lret
add
jg
loopne
pop
int3
add
jmp
std
jle
in
enter
cmp
mov
mov
fldcw
and
pop
pop
int3
add
pop
and
dec
pop
inc
jmp
jl
out
int
mov
lods
push
or
pop
mov
xorl
push
repnz
xchg
sub
sti
xlat
lds
out
gs
movsb
sarb
into
popf
mov
outsl
das
stc
jae
xchg
jb
jbe
lcall
test
sub
xor
or
cmp
dec
adc
jno
or
enter
sub
stc
and
xor
int3
shlb
xchg
and
mov
dec
scas
mov
fistpll
lcall
sbb
mov
pop
test
pop
adc
mov
pop
loop
mov
dec
or
aam
das
mov
xor
mov
and
dec
add
push
pop
ljmp
sbb
and
or
fs
fstsw
cltd
repnz
mov
mov
sbb
xchg
lea
icebp
fwait
aas
pop
ror
push
mov
lds
pop
rol
jecxz
jmp
xor
out
aam
cmp
xor
adc
outsb
mov
lock
jne
mov
cmpl
pop
fwait
iret
mov
jecxz
pop
xchg
rcrb
mov
sti
or
xchg
mov
jns
fstl
mov
jo
jbe
jge
xchg
xchg
mov
jg
mov
cmc
vorps
adc
dec
sbb
cltd
mov
daa
mov
sub
out
psubq
xchg
loope
iret
jge
push
negl
loope
xchg
mov
cli
cmp
cld
mov
mov
push
xor
in
push
dec
loopne
inc
cwtl
je
int
add
bound
inc
pusha
cmpsb
mov
dec
xor
aad
test
add
xchg
ja
shrb
int
mov
lea
lods
xchg
dec
pop
jno
mov
pop
repz
jae
jns
cld
scas
or
cltd
xchg
enter
mov
pop
movsl
cwtl
cmp
cmc
mov
xor
mov
sbb
test
jb
nop
loope
out
sbb
sub
and
xor
cmp
int
movsb
aam
ljmp
fsts
sbb
mov
enter
popf
or
lods
outsl
shrb
lea
lret
out
rorb
or
fdivl
adc
in
push
push
popf
aaa
ret
mov
sti
decb
add
push
jmp
dec
inc
sbb
cmp
pop
mov
add
rcll
idivb
cld
scas
in
mov
das
inc
mov
mov
or
mov
divl
jecxz
cs
shlb
fldcw
shrb
lods
fwait
loop
movsb
mov
movq
pop
dec
xchg
pop
mov
adc
inc
jp
clc
loopw
mov
sub
pop
ret
stos
popf
loopne
xor
pop
inc
adc
inc
sti
imul
int3
test
int3
and
mov
es
mov
dec
out
xor
out
out
shlb
testb
pop
out
sbb
aas
insb
pop
add
cmpsl
pop
rorl
imul
fucom
cmp
push
rorl
movsb
cmpsb
lcall
fdivr
xchg
loopne
mov
int
in
and
stos
mov
and
add
mov
fwait
xchg
jl
mov
sub
adc
test
stos
outsb
outsl
rcrb
jg
inc
jmp
mov
inc
cli
repnz
sub
popa
lahf
mov
imul
call
sbb
mov
cs
imul
pop
sbb
cmc
fsubr
xor
jns
imul
sahf
push
mov
sbb
dec
in
cmp
les
add
lock
dec
mov
fimull
int
cmc
dec
cmpsb
fsubrp
imul
dec
or
ret
movsl
or
icebp
into
in
dec
mov
cmpsl
sarl
cmc
cmpsl
out
mov
cmp
lret
lods
pusha
mov
iret
test
xor
subl
jg
xor
inc
sub
ret
and
dec
pop
in
sub
in
adc
xchg
add
add
jae
jb
lret
push
dec
test
jecxz
push
pop
mov
dec
daa
jns
aas
jle
mov
int
cld
cli
divb
stos
xchg
je
cmpsl
out
xchg
mov
hlt
sbb
add
cltd
int3
pop
dec
lock
sahf
or
cmc
xchg
lcall
inc
dec
add
adc
mov
mov
fwait
enter
xchg
ret
int3
mov
stos
inc
sti
lcall
pop
fildl
lcall
enter
push
push
and
push
xchg
and
jg
xchg
pop
fmuls
adc
lret
mov
adc
rcrl
fadds
pop
push
pop
xor
cmpsl
aas
loopne
das
aaa
mov
mov
push
jno
lds
jns
daa
mulb
outsl
pop
dec
adc
fiadds
fstpl
mov
fsubs
imul
insb
add
and
int
dec
add
lock
inc
adc
jnp
dec
sbb
ret
mov
aas
mov
dec
out
test
pop
add
and
sbb
test
xor
flds
pop
leave
dec
adc
fldcw
sbb
sub
push
arpl
fmul
hlt
xchg
pop
mov
in
or
cmp
and
mov
sbbw
enter
pop
mov
shrb
cmp
mov
dec
leave
adc
xor
and
loop
jns
sti
stc
cmp
inc
sti
or
loope
sti
or
jb
sbbb
fwait
adc
into
sbb
add
imul
push
inc
xor
pushf
and
xorb
das
pop
xchg
rorb
in
cmp
rcrb
imul
jbe
les
iret
out
or
adc
pop
dec
mov
sahf
jmp
into
xor
xorb
rorb
jb
jmp
dec
xor
pop
lods
test
test
das
push
lret
sbb
mov
xor
into
icebp
test
pop
xor
movsl
xor
lock
jmp
pushf
jecxz
inc
sbbl
dec
dec
push
xchg
lock
mov
icebp
dec
push
cmp
mov
iret
jecxz
xchg
push
das
jp
mov
mov
es
xor
xlat
shlb
push
xor
jbe
std
push
push
nop
sub
pusha
jmp
stos
sbbl
aam
push
mov
dec
dec
cmp
pop
xchg
ss
inc
sub
fisubl
xchg
cmp
push
scas
popf
mov
fisubs
push
mov
fwait
or
xor
dec
lcall
pop
or
fsubrs
in
sbb
ds
insb
pop
sbb
test
jo
xchg
inc
push
xlat
outsl
cltd
push
cmp
outsb
out
mov
sub
loope
insb
inc
mov
pop
fwait
sub
cmpsl
mov
dec
mov
inc
and
iret
imul
xor
or
rol
fldcw
jmp
push
stc
xchg
fs
jg
mov
dec
std
xor
rcrb
mov
scas
into
push
fsubs
xchg
cmpsb
clc
add
aaa
lahf
and
or
jge
cli
cmp
sbb
mov
in
cmp
sbb
fists
insl
and
clc
cltd
cwtl
dec
sti
and
dec
stos
sub
mov
push
loope
pop
jne
lcall
outsb
pushf
sbb
cmp
pushfw
fld
jbe
xor
inc
adc
movsl
jae
mov
dec
jnp
cmpsb
dec
jo
mov
stos
cmp
fwait
pusha
call
mov
hlt
mov
push
ret
or
jae
lods
fiaddl
push
or
faddl
or
xor
mov
sub
jmp
xchg
dec
ret
aaa
test
and
in
imul
cmp
cld
jo
xorl
and
cmc
mov
dec
mov
xor
and
sub
and
cmp
stc
or
fdivrl
cwtl
imul
aaa
frstor
lret
arpl
fcoms
dec
pop
pop
aam
mov
testl
inc
repz
stos
push
jmp
mov
ret
mov
adc
jmp
adc
sarl
push
pop
dec
repz
fldenv
out
out
filds
fucom
mov
in
sub
jns
mov
loop,pn
cltd
mov
sub
shll
cltd
mov
mov
mov
jno
ret
mov
repz
in
jle
das
rcll
xlat
jb
stc
inc
cld
inc
movsl
dec
sahf
inc
mov
popa
add
pop
mov
into
dec
xchg
test
aaa
lea
dec
adc
mov
sti
ss
bound
mov
jge
popf
cmp
test
sbb
cld
xchg
sub
dec
pop
push
add
xorb
adc
orl
bound
pop
stos
cmp
fadd
fadds
sbb
push
dec
push
imul
popw
xchg
or
xchg
lahf
ljmp
push
push
lods
mov
clc
mov
push
mov
push
mov
into
fldenv
sub
or
mov
sbb
add
adc
lret
add
ds
fcmovnu
or
push
inc
lods
es
loop
cmp
hlt
dec
in
lcall
jg
movsb
sbb
pop
mov
or
xchg
adc
int
cmpsl
mov
fstpt
shrb
sub
push
ror
mov
test
andb
mov
sub
push
xlat
xchg
inc
xchg
xor
mov
pop
stos
pushf
daa
cli
add
inc
cmp
xor
jmp
jp
xor
sar
stos
mov
sbb
cmp
cltd
sbb
lea
test
fnstenv
mov
addr16
jge
outsl
insl
call
mov
dec
jmp
hlt
sti
sbb
pop
mov
scas
push
push
addr16
scas
add
dec
sub
and
push
out
dec
scas
mov
sbb
xchg
pushf
pop
inc
call
xchg
gs
lods
xor
sbb
loopw
jmp
cmc
push
mov
sbb
stc
xchg
mov
inc
push
test
pusha
aaa
push
xor
leave
test
cmp
sub
movsl
cmp
mov
cmp
in
xor
push
sub
hlt
lea
fsubrs
push
rcr
cmpsl
popf
add
xchg
xchg
ret
cmp
cmp
ljmp
mov
mov
push
xchg
adc
sti
or
and
loope
or
stos
push
lods
call
and
outsl
xchg
in
mov
fdivs
fdivrl
faddl
jge
fmull
jge
cmpl
mov
decl
and
pop
sahf
push
test
xchg
fucom
sub
fiadds
add
add
mov
mov
adc
inc
gs
adc
sahf
jl
cmp
stc
lcall
push
test
inc
lock
loop
mov
add
and
push
scas
ljmp
cltd
inc
xchg
fldcw
es
nopl
into
sub
add
sub
and
jl
enter
dec
xor
pop
and
negb
sub
push
fs
loope
adc
stos
and
and
aad
cmp
jo
or
sbb
inc
pop
cmpsb
adc
mov
or
lods
cli
cwtl
pop
inc
leave
sub
in
dec
mov
cltd
fsubl
aaa
outsl
push
in
addl
pop
orb
cmp
das
jns
mov
push
bound
ret
lds
shl
das
sub
leave
push
ret
cmpsb
loopne
mov
pop
pop
daa
arpl
or
xor
movsl
pusha
hlt
xor
mov
cmpsb
icebp
jae
dec
popa
dec
outsb
inc
jb
lods
fbstp
mov
in
mov
fwait
jmp
enter
icebp
cmp
sub
cmpsb
jne
lret
mov
adc
outsb
inc
popf
movsl
pop
push
push
dec
dec
int
pop
rorl
mov
or
arpl
pop
outsb
jo
xor
fmull
push
aad
and
xchg
sub
fldl
pop
inc
fisubrl
setnp
add
inc
lods
dec
unpckhps
roll
mov
lock
sbb
aam
jae
jle
inc
ud1
pushf
mov
fsubrs
es
test
xor
sbb
jnp
cmp
fsub
in
mov
sub
je
pop
aad
mov
or
les
mov
jl
loop
lock
jnp
mov
jno
xchg
mov
cmp
into
mov
mov
push
mov
insb
sbb
pop
aas
and
pop
mov
cld
sub
xlat
adc
ja
aam
cwtl
mov
xchg
sub
cmp
ljmp
xchg
inc
int
pop
adc
ds
fcoms
addl
jae
add
sbb
adc
sti
nop
pop
cld
pop
ret
nop
sub
push
pushf
shrb
in
sub
call
pop
and
sub
push
sub
inc
pop
adc
add
add
mov
sahf
gs
pop
into
sub
jne
das
mov
xlat
mov
dec
mov
sar
movsb
jp
xchg
inc
xchg
loop
sbb
dec
adc
stos
out
data16
push
xchg
lahf
call
shll
push
je
xchg
movsb
push
push
mov
pop
pop
bound
jmp
inc
sbb
adc
push
mov
and
xchg
in
mov
cmpsb
push
inc
push
xor
cmc
pop
stc
or
movsb
lods
fs
sbb
lahf
orl
popf
jno
mov
mov
mov
mov
int
gs
jp
push
jge
in
outsl
dec
and
mov
sbb
sub
mov
pop
in
pop
jae
das
sub
pop
inc
mov
add
xchg
in
sbbb
inc
fidivrl
lock
adc
testl
scas
and
mov
test
scas
cmpsb
fbstp
inc
movsl
aas
push
sbb
mov
and
sbb
mov
push
ficoml
xchg
jmp
fwait
xchg
adcb
inc
cmp
icebp
sub
push
inc
sub
xchg
mov
mov
in
push
or
jecxz
mov
cli
clc
push
enter
mov
jge
jbe
push
por
jns
stc
jb
stc
push
mov
das
and
in
out
scas
cmp
movsl
ja
out
mov
push
adc
adcl
mov
mov
imul
jl
pop
lds
lahf
xlat
aam
gs
sbbb
pop
xor
mov
cmp
xchg
xchg
lret
jecxz
jne
dec
mov
cwtl
jne
fs
mov
xchg
or
bound
daa
xchg
add
pusha
cmpsl
cmp
imul
sti
sbb
pusha
stc
or
sbb
mov
cwtl
insb
in
mov
hlt
adc
test
jmp
mov
out
xor
scas
add
popf
adcl
adc
int
cmp
mov
inc
cmp
xor
sub
inc
jbe
sub
pop
test
xor
pop
adc
stos
cmpsl
push
rorl
mov
aam
push
data16
xchg
and
adc
lods
and
test
push
clc
leave
xchg
xchg
in
cmc
push
rcrl
call
mov
orb
aaa
or
cmpsb
mov
and
dec
jge
push
pop
dec
aaa
jno
mov
and
inc
leave
xlat
repz
inc
loop
js
cmp
je
arpl
lea
or
pop
adc
movl
sbb
sti
pop
in
sarl
insl
inc
rol
pop
adc
cmp
inc
mov
xor
and
imul
lods
das
hlt
icebp
test
xorl
adc
mov
xchg
fwait
bound
push
hlt
dec
outsb
daa
loop
mov
pop
mov
push
sbbb
ljmp
cwtl
dec
lea
jb
test
arpl
fldl
or
aam
imul
sbb
add
pop
lahf
sub
sub
xchg
fcomps
dec
bsf
mov
mov
or
adc
inc
je
outsb
sub
add
fistps
outsl
inc
pop
mov
out
jl
cmpsl
inc
andb
popa
sbb
lock
pop
and
pop
adc
fcompl
movsl
popa
das
dec
lret
xchg
jno
sbb
fs
xchg
xchg
sub
lahf
dec
cmp
arpl
cmp
xor
mov
rorb
mov
jge
ret
add
out
pop
and
mov
leave
jnp
fs
fidivrs
jmp
xchg
inc
mov
jnp
push
mov
es
loopne
xchg
xlat
sbb
or
fcomps
es
out
es
sub
repz
push
aam
jle
mov
outsl
sbb
cmpl
push
ljmp
jmp
fidivrl
arpl
and
jmp
rolb
adc
int3
in
ljmp
mov
cmp
rorb
sub
xchg
inc
mov
lea
fistpl
xchg
and
push
gs
push
sub
push
mov
gs
movsb
lret
out
repz
lahf
fsubrl
push
or
rclb
aaa
xor
push
add
dec
push
dec
xchg
jae
adc
lcall
movl
sub
dec
lods
push
dec
inc
dec
mov
hlt
repz
push
sbb
sub
fisttps
scas
test
jnp
mov
sbb
fistpll
mov
pop
xor
add
pop
cmovle
pop
xchg
popf
jo
cmp
popa
or
aam
cwtl
jg
dec
pop
adc
sahf
fwait
lods
xchg
dec
ss
push
test
ret
cwtl
sub
mov
push
imul
scas
xchg
and
popa
jbe
inc
jns
mull
bound
mov
sub
bound
lahf
add
cmpsb
ret
and
scas
cmpsb
jmp
sub
adc
push
sub
xlat
inc
cmp
inc
iret
hlt
aad
popa
xor
imul
mov
sbb
rorb
popa
jns
and
hlt
or
popa
push
mov
inc
mov
mov
loope
mov
xchg
pop
adc
xchg
in
or
data16
mov
out
cmp
out
sbb
xchg
pop
andb
ljmp
pop
in
and
pop
add
push
jl
es
cmpsl
lret
pop
xchg
cmp
xchg
mov
enter
jg
add
rorl
adc
mov
mov
push
lods
jnp
sub
enter
icebp
jb
jb
js
push
data16
in
pop
dec
inc
in
xor
pop
add
ret
ja
adcl
and
sahf
out
inc
sahf
movb
imul
lahf
adc
push
es
pop
in
call
push
out
stos
imul
mov
lcall
mov
mov
int3
mov
rolb
jae
xor
clc
and
inc
das
mov
in
and
jge
call
daa
ret
repnz
sbb
daa
jae
rclb
jne
loop
inc
mov
sub
pop
movsb
xchg
fcompl
mov
mull
fwait
jne
cmp
sbb
icebp
mov
repz
cmp
loopne
sub
push
insb
mov
sub
iret
inc
and
mov
push
jns
adc
lahf
testb
xchg
xchg
aad
pop
dec
pop
mov
test
inc
call
pop
jns
bound
cmp
sub
sarl
repnz
or
ja
push
push
sbb
and
mov
mov
out
outsl
sbb
add
xor
aaa
sbb
ljmp
mov
cmp
and
aaa
sub
adc
sub
pop
jmp
mov
fistps
gs
insl
ds
movsl
sbb
ljmp
pop
aas
push
andb
and
stos
push
xchg
pop
or
pop
aad
adc
jbe
test
fldenv
fildl
push
xor
idiv
inc
pop
cmp
mov
add
nop
push
jg
mov
inc
sbb
std
nop
sbb
ds
pop
adc
xchg
lret
out
push
cmp
push
xchg
or
or
iret
lret
into
data16
jp
ljmp
cmp
push
ret
pop
leave
ret
xlat
ja
ja
ljmp
dec
pop
or
idivl
jae
add
cwtl
jle
mov
xchg
push
mov
orl
or
call
pusha
adc
fisttpll
subl
dec
pop
or
adc
mov
add
imull
negb
insb
rcrl
out
mov
fcoml
sbb
repnz
fidivrs
imull
fbstp
call
push
cmpb
int3
jle
lds
cmpsb
hlt
jp
int3
in
mov
mov
push
out
xchg
sahf
jnp
popf
arpl
xchg
xor
xchg
movsb
test
insb
or
loopne
test
jl
pop
push
jmp
dec
mov
xor
push
push
or
rclb
dec
iret
pop
inc
orb
push
clc
xchg
adc
inc
lds
dec
outsb
pop
add
cld
xchg
jo
ret
mov
lea
or
mov
int
jecxz
shl
inc
es
mov
mov
inc
mov
ja
dec
sub
cli
jo
ficompl
mov
in
push
or
movsb
icebp
dec
bound
js
cmp
or
pop
adc
cli
pop
xor
xchg
les
test
data16
sub
xchg
outsl
loopne
pmaxub
sbb
xor
mov
call
jb
addl
jbe
sarl
mov
scas
fistpll
out
sbb
test
sub
mov
lock
dec
shrl
repz
mov
add
mov
mov
roll
inc
mov
in
mov
popa
lcall
orb
out
movl
mov
adc
rcr
ja
adc
pushf
cmpsl
jae
xchg
mov
mov
shll
ret
adc
ffreep
shll
in
xor
je
dec
add
mov
in
dec
je
divb
repz
lcall
test
enter
push
int3
mov
jno
add
pop
cltd
jnp
rcrb
data16
or
popf
xor
mov
test
adcl
sbb
xchg
addr16
es
xor
inc
jmp
sti
xor
sbb
sbb
jg
sub
lods
cmp
pop
nop
lahf
ds
sub
xchg
arpl
sarl
jp
jns
call
mov
pop
mov
or
jnp
or
dec
in
gs
mov
adc
jo
negl
and
xchg
xor
rcll
adc
xor
xlat
lds
push
cs
dec
push
jns
loope
pushf
or
je
mov
xor
xor
orl
or
or
ss
cs
js
rolb
push
cmpsb
std
mov
mov
sbb
enter
pop
or
adc
pop
adc
loope
outsb
or
mov
shrl
push
jbe
xchg
xor
call
lods
popa
mov
out
outsl
js
or
xor
xchg
mov
adc
aaa
xor
push
clc
cmp
pusha
xchg
sbb
insl
pusha
je
scas
pushf
mov
or
outsb
stos
out
sub
shr
and
pop
dec
pop
mov
fldt
lods
mov
les
repnz
les
push
cmp
push
xlat
jge
or
inc
jns
add
rclb
and
jns
push
imul
mov
cmp
fisubs
std
lods
xchg
push
fwait
scas
scas
or
dec
sub
or
sub
roll
fucomi
popa
out
andl
mov
popf
cmpsb
aaa
sub
iret
jge
scas
pop
lahf
mov
idivb
jae
int
popl
iret
inc
xchg
push
mov
jge
lods
addr16
or
mov
cs
mov
adc
clc
loope
mov
cltd
pop
sbb
shll
ja
cli
pop
lock
push
scas
mov
cmp
out
pop
sbb
dec
mov
push
sub
out
jnp
stos
shlb
mov
or
sahf
ret
xor
jl
mov
shrb
repz
stc
popa
push
gs
cmp
loopne
mov
xchg
aas
sarb
or
rclb
movsb
mov
or
adc
dec
das
push
enter
lret
jno
mov
mov
sbb
call
fmul
cmpsl
sbb
stos
out
jae
sbb
cmp
cltd
xchg
iret
mov
xor
jecxz
adc
mov
sub
outsb
or
cld
dec
cltd
sbb
sbb
insl
das
rclb
adc
fcmovbe
cmpsl
ss
int
jmp
test
loopne
cmc
cs
dec
dec
or
cmp
sub
aaa
or
insl
pop
push
pop
mov
xor
das
inc
jecxz
cmp
cmpsb
cmp
add
ds
inc
mov
lret
and
cmp
neg
cld
cmp
inc
jmp
je
fnstsw
push
push
sub
push
mov
in
in
in
insb
cmp
mov
and
lods
jle
add
mov
gs
call
aad
inc
xchg
jp
cmp
jge
xchg
dec
inc
push
mov
cmpsl
fdivp
out
pushl
adc
aam
cld
andl
test
and
outsb
lahf
aaa
pop
mul
mov
or
out
lock
lods
movsl
lahf
push
xor
push
push
mov
mov
movsl
les
stc
xor
xorl
inc
dec
xor
imul
cwtl
xor
and
xchg
cmp
pop
push
fwait
nop
outsb
dec
or
addl
jns
cmc
cmc
iret
push
adc
fs
xchg
xchg
xchg
dec
or
dec
xor
inc
out
sysenter
sub
int
add
jecxz
dec
out
push
cmpsl
shlb
cmp
out
inc
sbb
iret
bound
sub
inc
dec
or
jge
pushw
in
sbb
mov
cmpsl
inc
push
inc
mov
dec
mov
push
into
add
fldt
fmull
inc
adc
fcoml
addr16
movsl
test
fisubrs
push
js
pop
scas
frstors
lret
jb
repz
xchg
jo
test
arpl
cmp
into
repnz
rcrl
xchg
jnp
fldcw
ljmp
push
test
mov
inc
mov
mov
sarb
mov
mov
xchg
lea
std
mov
xchg
dec
push
call
shlb
mov
lret
dec
mov
mov
enter
icebp
int
addr16
iret
jmp
in
loop
mov
and
xor
and
and
lcall
and
lds
test
adc
ja
pop
push
imul
dec
sbb
ja
fbld
push
ja
sbb
mov
std
mov
outsl
shrb
adc
icebp
add
and
and
fcomip
lahf
sbb
pop
test
js
mov
xor
in
lods
mov
fldcw
add
and
jne
fisubs
mov
loope
sub
dec
mov
ljmp
mov
dec
cmpsl
lock
out
mov
jle
fisttpll
jl
cmpsl
into
int3
lods
adc
inc
aas
adc
mov
ret
ja
loope
xchg
in
and
or
push
or
jae
mov
or
cltd
iret
push
daa
mov
and
push
shrb
ljmp
jne
test
xor
mov
inc
test
pop
fidivs
popf
add
xor
out
popf
jns
jge
xor
mov
mov
jecxz
mov
jmp
fmull
adc
out
lods
xor
and
test
test
int3
in
mov
sti
imul
popa
mov
mov
lds
movsb
lcall
xchg
jne
jae,pn
stos
and
jp
mov
mov
clc
inc
addr16
enter
aaa
inc
push
das
out
subb
pop
imul
push
mov
movsl
insb
repz
frstor
add
add
pop
popa
inc
repz
xchg
lret
adc
or
push
xchg
scas
and
loopne
pushf
repz
fmuls
sbb
sbb
lock
jne
es
fcmove
inc
out
xor
repz
jge
pop
out
fists
jecxz
xchg
aad
xchg
mov
aaa
mov
fnstsw
mov
xor
inc
lods
xor
lods
loop
enter
cmp
pop
push
xchg
scas
push
pop
mov
shll
pop
push
sti
stos
add
popf
mov
sbb
dec
jnp
icebp
scas
out
fwait
or
cmp
dec
inc
pushf
lahf
shrl
add
xchg
dec
lahf
adc
xor
dec
jmp
stos
mov
pop
adc
movsb
stos
aam
jns
push
gs
pushf
cs
addr16
inc
sub
xor
shrb
add
push
popa
aam
dec
xchg
je
pop
loop
movsb
push
mov
push
cs
es
loop
in
xchg
mov
shr
mov
imul
out
and
mov
cwtl
hlt
lret
stos
push
jecxz
cmpsb
iret
xchg
cmp
and
push
into
or
mov
ffreep
push
jmp
addr16
xchg
clc
mov
aad
clc
pusha
xchg
fdivrs
lret
int
ja
pop
arpl
out
pop
xor
sbb
cmp
into
pop
pop
sbb
and
fidivrs
cmp
scas
and
fbstp
mov
jbe
mov
test
mov
filds
into
in
icebp
fsubl
pop
aas
mov
add
nop
aam
inc
inc
mov
data16
jp
insb
ljmp
xchg
iret
shll
movl
jbe
and
pcmpgtb
scas
cmpsl
lret
adc
jl
xchg
xor
pusha
pushf
push
add
mov
aas
xchg
out
pop
imul
dec
push
scas
cmp
or
lds
or
bound
pop
in
adc
xchg
mov
shl
xchg
sub
fdivrs
in
cs
and
or
in
mov
aaa
jmp
or
adc
cmp
xchg
enter
add
icebp
push
dec
jne
repnz
pop
push
int
mov
jle
push
cmc
test
jnp
lret
jno
je
and
out
cmc
jne
mov
sahf
push
shlb
orb
dec
inc
sbb
push
js
icebp
jno
mov
xor
pop
sub
aam
cmc
mov
inc
adc
xlat
mov
into
push
jae
mov
inc
mov
cmc
dec
mov
repnz
adc
rclb
in
es
cmpsb
daa
lods
cmp
int3
mov
add
insl
in
test
pop
cmpsl
cmc
imul
sti
notb
jbe
ja
inc
or
into
ja
cmp
std
add
mov
inc
sbb
cmpb
xor
scas
sarl
movsb
xchg
xchg
mov
mov
dec
fwait
sbb
inc
mov
inc
or
adc
cmc
dec
into
movsb
inc
lds
imul
int3
mov
ja
das
lods
ljmp
ljmp
mov
icebp
movsl
test
loopne
push
imul
pushf
or
sub
pop
jle
aam
mov
out
mov
or
and
sbb
jne
rorl
fneni(8087
sub
dec
aam
into
cltd
cs
idiv
inc
jl
cmp
into
cs
inc
jnp
add
xchg
nop
ret
aam
and
enter
popa
pusha
sub
mov
pushf
push
mov
fstps
arpl
mov
test
arpl
test
sub
jno
push
and
dec
cmpsl
aas
shrl
int3
cmove
aam
sbb
xor
out
xor
mov
out
sbb
loop
out
cmp
xor
into
sub
int3
addr16
test
or
scas
pop
xchg
push
jp
cmp
mov
push
adc
loop
or
cli
sti
xor
cmpsb
jb
iret
inc
out
pop
sub
mov
push
movaps
fldl
lahf
sbb
jnp
aaa
push
pop
and
ss
lret
xchg
jnp
fwait
sub
lea
or
and
jne
pop
xchg
fisttps
add
ljmp
out
ss
lds
push
xchg
aad
stos
sub
mov
adc
mov
in
push
repnz
adc
pop
sbb
mov
mov
lock
in
mov
divl
add
or
stos
loopne
or
cmp
push
cmpsl
sbb
dec
pop
lods
movsl
lea
fistpll
pop
out
gs
out
in
add
adc
test
lcall
mov
push
dec
les
in
pop
das
jnp
push
dec
stos
mov
pop
ss
mov
jge
ljmp
sub
into
sbb
mov
cmpsl
loopne
outsl
repnz
outsb
push
das
mov
xchg
outsb
push
icebp
inc
loopne
pusha
mov
js
mov
xchg
ss
dec
mov
jnp
push
sub
xchg
inc
jbe
fldl2e
mov
fildl
xor
cld
insl
fistpl
push
or
and
jns
jl
xchg
cmpsb
gs
stos
frstor
adc
sub
sahf
cs
xchg
add
pop
sbb
pop
sbb
sbb
ljmp
out
dec
lods
loopne
xor
aad
out
in
push
xchg
stos
sub
hlt
mov
bound
push
cmc
divb
cmp
xchg
mov
daa
cmpsb
xchg
lods
imul
addb
sbb
pop
and
aam
pop
leave
cltd
lcall
add
jae
ret
cli
lahf
mov
pop
jle
in
ja
or
or
pop
pop
mov
push
out
inc
jmp
cmp
insb
pusha
xchg
mov
das
cltd
ljmp
dec
and
aaa
mov
lahf
cmp
popa
jnp
icebp
dec
fs
mov
sub
inc
mov
aaa
add
cltd
adc
jb
cmpsb
js
out
xchg
lds
mov
xchg
shlb
inc
push
mov
lret
loop
cmp
add
sub
mov
xorl
int
outsl
or
cmpsb
in
lock
xchg
xchg
push
xor
or
cmp
mov
mov
ds
lahf
repnz
pop
pop
and
movsl
aad
cmp
or
push
lds
push
or
jb
push
sbb
insb
shl
push
lods
fucomip
push
arpl
xchg
cmp
jae
movsb
inc
dec
pop
dec
pop
data16
xchg
mov
dec
add
icebp
xor
xor
cs
nop
mov
test
xlat
aad
or
and
jp
adc
mov
and
cltd
xchg
sbbb
adc
add
gs
in
push
lret
add
movsb
rcll
imul
test
sbb
clc
jno
xchg
adc
adc
sub
or
lcall
jbe
test
sbb
int3
cmpsb
test
jmp
shlb
fs
sub
mov
pop
sbb
or
mov
movsb
mov
xor
mov
sbb
lret
jbe
mov
mov
fsts
shl
mov
and
std
push
les
xchg
outsb
pop
pop
inc
mov
lcall
ljmp
je
add
mov
stos
mov
addr16
roll
mov
xchg
add
lods
aam
mov
jl
gs
sbb
adcl
mov
jbe
sbb
iret
pop
mov
or
das
loope
insl
pusha
imul
push
push
mov
mov
lds
mov
fists
incl
mov
ret
movsb
xchg
xor
pop
rol
and
pushf
mov
in
xor
mov
xchg
sti
inc
mov
loope
in
xchg
jge
mov
fcomp
movsl
test
jmp
jne
aad
dec
loopne
mov
ljmp
mov
loop
xchg
nop
int3
in
dec
pop
adc
out
cli
frstor
lock
scas
and
addr16
scas
fstps
repnz
aam
vpermi2q
aas
add
mov
xchg
mov
cmp
push
cld
cmpsb
cmp
cld
mov
cs
mov
jle
jp
cmp
dec
inc
repz
mov
outsl
or
mov
jl
mov
arpl
mov
dec
mov
fidivs
dec
scas
sbb
or
mov
mov
mov
loop
xor
jne
loope
xor
push
addr16
test
push
sarl
adc
aam
lcall
xor
sahf
pushf
mov
stc
imul
mov
xchg
inc
push
lahf
cli
nopl
stc
out
and
cld
lods
adc
shl
lret
sub
aaa
inc
sub
add
inc
insl
in
test
pop
lds
mov
mov
jno
movsl
or
and
mov
push
sbb
push
or
imul
add
out
out
shl
inc
icebp
xor
dec
sub
jecxz
push
xor
ljmp
gs
imul
andb
data16
lods
cli
stc
in
rcr
xchg
andb
cmpsl
lret
sbb
jo
aad
fs
fnstenv
je
outsb
xchg
pop
in
jle
xor
out
push
sbb
int3
ds
lock
jns
jne
adc
test
stc
lret
dec
cli
and
xor
gs
or
int
aaa
lcall
or
popa
sahf
cwtl
jmp
test
imul
stos
lea
jb
rcrl
add
xor
inc
icebp
fiadds
shll
and
cmp
pop
add
stc
adc
inc
add
cmp
loopne
inc
scas
repz
push
shl
cltd
dec
popa
sub
gs
and
nop
or
inc
icebp
inc
nop
fisubs
jnp
pop
aam
aas
lcall
sbb
repnz
fldl
add
and
cmp
iret
mov
test
push
test
inc
stos
out
and
leave
clc
outsl
pushf
or
inc
roll
cmp
hlt
cmpsb
add
ds
fwait
jge
out
cmp
sub
repnz
out
adc
inc
xchg
push
push
scas
and
and
pop
xor
xchg
outsb
fwait
mov
sarb
imul
dec
mov
movsl
sub
bound
test
shll
in
cmpsl
push
aam
mov
int3
aas
or
cld
sub
xchg
adc
daa
and
dec
arpl
add
and
sub
lret
mov
cltd
mov
xchg
sub
mov
aaa
adc
xchg
jae
imul
xchg
dec
lcall
lret
ljmp
das
inc
roll
sbb
sbb
enter
insl
mov
jno
or
es
lret
jmp
shlb
fisubl
xor
push
jp
jo
icebp
les
lea
icebp
dec
add
sahf
jg
sti
and
cmc
xor
mov
xchg
adc
sub
adc
mov
rolb
mov
fs
cmp
frstor
call
xor
andb
fadd
dec
xchg
and
dec
aad
push
jmp
sbb
testb
sbb
jge
xchg
shlb
mov
and
stc
mov
es
sarl
pop
sti
fdivrl
sahf
pop
and
push
popf
stos
adcb
push
into
rolb
or
xor
imul
daa
add
cmpl
mov
mov
mov
pop
aaa
jg
fsubrp
lcall
pcmpgtd
jae
pusha
push
int3
cmp
pop
sbb
js
lods
addr16
mov
les
out
les
int3
xchg
xor
jne
jl
icebp
mov
inc
cmp
test
lods
or
mov
imul
outsl
and
lods
scas
pop
loopne
mov
push
es
aam
pop
scas
je
mov
fldl
dec
fildll
add
fsubrl
les
fisubrs
in
mov
ja
fucom
cs
push
jns
or
xor
adc
jnp
push
lods
jbe
mov
test
arpl
mov
push
imul
insl
out
int3
popf
movsl
sahf
mov
sub
pop
fldcw
incb
push
sbb
adcb
cld
imul
or
or
pop
or
adc
jge
pop
out
adc
sarl
mov
fidivrl
pop
lret
lcall
rolb
push
in
std
popa
or
shl
popa
sahf
mov
fadds
push
jl
out
cwtl
push
mov
out
imul
inc
inc
or
rorl
pop
mov
mov
dec
adc
mov
xchg
sbb
decl
xor
fmulp
cli
pop
sbb
push
mov
test
or
xlat
and
xchg
mov
push
jb
dec
mov
loopne
add
outsl
je
xor
divb
sbb
stc
xchg
sbb
inc
in
or
sub
sbb
xchg
in
add
lcall
xchg
dec
cmp
daa
fwait
in
mov
fistl
push
and
add
inc
in
insl
and
adc
xchg
out
insb
pop
cli
divl
loopne
pop
push
movsl
xchg
xchg
in
in
shlb
cmp
inc
mov
cmc
clc
pusha
das
outsl
inc
mov
add
std
mov
movsl
std
xor
mov
test
cmp
add
rolb
arpl
xchg
xor
test
xor
pop
imul
inc
daa
inc
mov
sub
shlb
dec
mov
lea
loop
test
aad
out
xchg
sbb
xchg
testb
xor
ficomps
adc
repnz
xor
into
iret
lcall
push
dec
ret
cmc
adc
in
xchg
lret
outsl
mov
arpl
mov
out
out
pop
inc
push
mov
lret
jle
xchg
sub
fcoms
inc
or
jbe
ror
and
pop
repnz
mov
popf
insl
cld
mov
mov
add
dec
popf
cltd
xchg
xchg
cmpl
xlat
mov
cli
icebp
addr16
xchg
xor
mov
dec
cs
lahf
les
cli
movsb
xor
sbb
shll
jne
pop
in
lods
fists
outsb
lahf
sub
cmp
pop
imul
aaa
sub
lret
mov
xor
aad
sub
xchg
out
pusha
mov
mov
fstpt
inc
and
inc
daa
sbb
insb
mov
push
pop
sbbb
aas
sbb
into
nop
fldl
subb
jno
mov
cwtl
and
inc
js
add
sub
dec
jmp
cltd
jp
shr
sbb
xor
cli
push
xchg
xor
push
adc
mov
dec
negb
cmp
sbb
push
lcall
inc
icebp
je
sbbb
adc
sbb
mov
cld
push
rcr
loop
insb
bound
push
xchg
jp
mov
mov
rcrl
sbb
jp
pop
nop
dec
push
mov
xchg
ror
icebp
pusha
xchg
pushf
xlat
cmp
or
inc
lahf
mov
inc
les
test
mov
push
scas
ds
sbb
or
hlt
mov
stos
sub
clc
xchg
dec
jge
push
roll
aad
xlat
sub
adc
and
lret
in
inc
bound
sub
sahf
roll
ja
lea
popa
cmpsb
pop
clc
mov
jmp
sub
roll
push
mov
pushf
pop
ss
jmp
js
lcall
shl
push
enter
cmpsl
lods
lock
scas
rorb
push
aad
adc
outsl
push
rol
mov
pop
mov
push
mov
sbb
cmp
cmp
shr
sbb
lods
sbb
push
push
or
insb
lret
cmp
lods
jg
mov
add
jg
adc
xlat
sub
iret
stc
xchg
ja
inc
fldenv
fstps
lock
add
int3
pop
dec
hlt
lret
hlt
mov
fwait
inc
add
or
cmp
push
dec
xor
fcmovu
sbb
and
pop
jg
xlat
add
push
fstpt
lea
mov
add
fcomps
adc
adc
push
cmp
loopne
jecxz
incl
fsub
loopne
dec
icebp
or
in
loope
push
xorb
or
mov
mov
call
pop
fiadds
fisttpll
cmc
mov
aas
xor
sahf
imul
xchg
jl
clc
sbb
hlt
std
xor
xor
les
push
or
cld
insb
sarb
pop
lock
mov
sbb
fs
flds
sbb
xor
and
xor
and
leave
fbld
mov
leave
repz
xchg
clc
xor
mov
mov
mov
xor
gs
data16
aad
cmp
test
cmp
testl
fcom
sti
dec
mov
and
inc
lcall
das
mov
ret
addl
mov
mov
test
lods
loop
out
mov
clc
xchg
jne
pop
pop
and
stos
jo
mov
mov
cld
sbb
or
inc
add
cwtl
test
into
test
mov
mov
cmp
mov
out
mov
push
mov
add
inc
pop
jo
jmp
cmp
sbbl
pop
jbe
mov
clc
std
push
push
aad
ret
rorl
test
das
pop
push
pop
pop
ret
xchg
fnstcw
inc
mov
repnz
xchg
inc
jle
mov
imul
jmp
out
dec
jbe
xor
sub
imul
or
mov
and
sti
or
ja
pop
or
mov
daa
fsubrl
rcll
or
or
scas
dec
and
push
mov
test
enter
cltd
fcoms
mov
lods
push
fsubrs
jl
sarb
les
ja
xchg
mov
stc
inc
adc
mov
jmp
mov
push
imul
stos
lods
inc
roll
movsb
mov
sysexit
icebp
fs
test
ror
cmp
adc
and
sub
xchg
icebp
jae
push
mov
jmp
orb
loopne
xor
mov
roll
js
and
int
lods
add
or
push
push
stc
mov
inc
lret
push
stc
popf
pushf
or
insl
sbb
mov
pop
in
jl
add
mov
xchg
pushf
mov
inc
inc
and
std
jnp
adc
jmp
xchg
movaps
fadds
test
or
pusha
sbb
xchg
sahf
nop
adc
xor
imul
sbb
sub
nop
mov
pop
lret
sbb
xchg
aaa
out
out
sub
mov
cmp
cmp
outsl
add
cmp
jecxz
sbb
lock
inc
or
and
das
pop
idivl
sub
subb
loop
inc
lahf
add
imul
repnz
out
dec
xchg
xchg
jg
inc
and
xchg
scas
push
xor
xor
fsubrl
scas
pop
gs
pop
fidivrl
add
cmpb
ret
pop
dec
mov
fwait
sbb
and
shll
mov
mov
ljmp
xor
mov
jg
pop
xor
push
mov
pop
mov
roll
ds
push
push
stos
lods
pop
popa
or
add
cmpsl
xchg
mov
lahf
sti
clc
stos
cmpsb
aad
popf
jno
ret
pop
xchg
fsubrs
loop
insl
int
pop
je
adc
loop
inc
cmpsl
pop
xor
movsl
pop
xchg
adc
jbe
adc
sub
sub
in
adc
subb
pop
lods
sti
frstor
ljmp
cmp
push
inc
loopne
mov
and
cmpsl
std
rcrl
jae
cmc
pop
arpl
jle
cmp
mov
dec
or
dec
fnsave
inc
fs
mov
mov
push
dec
adcb
push
es
call
sub
cmp
jno
fs
dec
arpl
add
nop
jae
outsl
pop
rcrb
xchg
mov
or
jo
add
xchg
lods
xchg
movsb
dec
mov
insl
out
popf
add
out
test
outsl
inc
imul
aaa
repz
scas
outsb
xor
jle
scas
loop
call
setl
xor
in
dec
sbb
ja
popl
and
and
mov
xchg
add
dec
add
jno
jp
arpl
lret
test
out
popa
mov
mov
mov
xchg
bound
adc
mov
xor
scas
aaa
ret
in
dec
and
add
sti
inc
je
jb
test
mov
or
lock
ror
or
clc
test
or
add
cmpsl
push
mov
repnz
and
pop
adcb
pop
pop
jno
sbb
clc
cmp
inc
cmp
fists
imul
test
xor
push
pop
push
lret
push
aad
lahf
jg
je
hlt
fwait
xor
test
pushf
push
adc
fistl
fadds
movb
bnd
fwait
or
movsb
andnps
xor
out
pop
mov
xsha256
cmpsb
adc
lea
adc
sub
add
push
sbb
dec
mov
mov
xchg
xchg
and
movsb
jecxz
dec
mov
sbb
xor
push
jbe
xor
inc
or
cli
test
dec
scas
outsb
xor
mov
mov
test
fwait
sub
addr16
mov
dec
repz
xchg
mov
mulb
in
into
repnz
adc
dec
int
xor
mov
test
push
jge
int3
inc
cli
loope
push
sub
xchg
stc
xor
inc
or
pusha
dec
xchg
xlat
imul
inc
out
mov
jmp
pusha
scas
in
mov
scas
popf
jns
inc
loope
xchg
aaa
xchg
xchg
push
jle
inc
je
push
jae
mov
mov
hlt
push
aam
adc
jne
pop
aad
jmp
mov
repnz
negb
pop
jg
enter
and
bound
dec
jg
into
cmp
insb
mov
sub
addr16
xorl
mov
push
test
push
jns
vmread
cmp
repnz
sahf
pop
out
mov
mov
adc
push
jmp
popa
je
add
popf
pop
and
test
scas
test
icebp
daa
mov
jae
jbe
jg
xor
ss
ss
and
or
push
fwait
clc
std
in
lret
rol
jne
ret
sbb
jne
mov
xchg
pop
dec
sbb
xor
push
gs
out
push
mov
mov
rorl
mov
or
pusha
or
stos
pop
cs
and
pop
xor
sahf
fcomp
out
mov
bound
pop
aad
pop
aaa
sbb
idiv
jno
shr
jl
and
bound
popa
ret
or
sub
insl
dec
call
add
loope
ss
pop
andl
sbb
xchg
ficoml
or
mov
adc
ljmp
scas
xchg
aam
pusha
add
das
repz
pop
jle
mov
pop
cmc
testl
dec
js
mov
hlt
adc
cwtl
push
pop
out
fmuls
loop
or
xor
test
xor
mov
stos
sbb
shlb
push
outsb
or
fisubl
decl
push
repz
stc
iret
gs
pop
mov
mov
xlat
leave
or
stos
xchg
or
jbe
mov
mov
jge
sarb
lret
cmp
jo
hlt
les
push
push
sub
faddl
rsm
scas
jl
push
add
adc
dec
sbb
adc
adcl
adc
fildl
pop
pushf
sbb
fcomps
inc
cmpl
cmp
or
jl
fisubl
pop
inc
test
into
jecxz
pop
cmpsl
addr16
push
aad
mov
scas
xchg
das
inc
out
xchg
jmp
mov
jno
test
adc
sbb
sub
fsubrl
leave
rclb
xchg
stc
inc
sti
inc
mov
sub
int3
inc
stos
in
jo
std
mov
push
mov
inc
xorb
rolb
pop
jb
cmp
leave
pushf
sbb
pop
mov
outsb
sub
shlb
lods
outsb
lds
jge
pop
cwtl
push
shlb
je
mov
ja
mov
dec
adc
jno
xchg
mov
mov
nop
mov
scas
arpl
or
repz
sub
xchg
dec
outsl
xor
mov
test
lods
jecxz
fwait
aaa
imul
lahf
xor
pop
lret
lahf
lret
mov
loope
fnstenv
cmp
sbb
insl
pop
stos
push
subb
mov
hlt
mov
jmp
out
xor
sahf
sub
leave
push
jmp
dec
pop
xlat
cld
push
mov
ret
pushl
dec
push
and
flds
jl
out
popf
jns
or
or
and
jns
cmp
popf
nop
dec
iret
lcall
or
add
cld
sbb
aas
pop
or
mov
mov
popw
ficoms
push
add
add
push
sub
mov
mov
sub
or
aad
inc
mov
stc
lods
jb
push
repnz
stos
std
add
pop
popa
inc
daa
in
bound
ret
or
fstpl
xor
subb
fucomip
scas
pop
nop
pop
fldenv
mov
pop
adc
pop
rcrl
push
stos
pop
sub
les
ret
aaa
jb
xor
hlt
fiaddl
pop
or
and
or
mov
xor
sub
daa
cmpsb
rcl
fwait
les
inc
sarb
mov
ret
and
mov
outsl
mov
stos
outsl
lcall
nop
dec
mov
xchg
popa
pop
xor
cli
sub
and
or
jp
shl
les
mov
sbb
or
xor
insb
test
repz
or
out
push
lahf
xchg
mov
add
inc
repnz
test
sub
int3
push
loop
pop
push
in
cmp
pop
sti
jnp
out
pop
daa
mov
jg
mov
out
sti
movsb
test
mov
xor
jmp
pushf
in
cld
xchg
jl
push
sbb
lods
test
movsb
imul
adc
cli
cmc
sub
push
mov
add
jge
or
or
enter
les
sbb
add
pop
ficoml
mov
leave
mov
sub
cld
mov
dec
jg
fstl
cmc
sub
and
rorb
scas
jae
cmp
daa
cmpsl
xor
aam
pop
sarl
nop
push
mov
push
dec
dec
xchg
test
stc
push
mov
test
pop
sub
dec
call
daa
or
js
cmp
mov
ret
scas
test
sbb
push
xor
sbb
jl
insl
pop
scas
outsl
out
sbb
push
lret
inc
imul
into
or
cmp
mov
out
in
subb
nop
sbb
jns
pop
jb
xlat
bnd
cmpsl
dec
xor
add
or
gs
adc
cmp
fldcw
jg
pop
fadds
push
cmc
add
test
lcall
mov
bound
add
inc
fadd
lahf
jl
mov
loopne
cmp
push
dec
fdivr
jnp
pusha
sbb
mov
adc
fdivs
pop
shrb
cmp
bound
and
sub
mov
in
fadds
cwtl
incl
pop
jno
cmp
sbb
xor
gs
add
pop
dec
and
aad
adc
pop
jge
lods
mov
push
sbb
aam
xor
subb
pop
pop
loope
push
cwtl
fldenv
movsl
addr16
in
out
mov
inc
and
movsl
cmpsb
xchg
int3
mov
roll
ss
cld
mov
pop
and
and
xchg
ret
popa
paddusb
mov
cwtl
fstpt
push
stos
dec
out
add
mov
sub
add
outsl
into
push
xor
repnz
mov
mov
sbb
add
scas
push
push
sub
stc
add
adc
mov
popa
push
divl
xor
fcmovnbe
mov
cs
pop
mov
bound
rcrb
fwait
mov
pop
jno
je
test
fcomps
cwtl
int
repnz
imul
dec
rcr
addr16
add
stos
pop
hlt
dec
push
xchg
dec
leave
aas
in
imul
ss
mov
mov
cmp
jl
sbb
cltd
cmpsb
in
enter
repnz
sbbl
icebp
fs
and
es
sbb
lahf
or
mov
adc
inc
push
popa
or
xor
lock
daa
adc
adc
mov
xchg
adc
push
dec
push
mov
jmp
mov
mov
popf
xor
inc
test
dec
lods
xchg
sub
scas
push
mov
cwtl
int
leave
sbb
push
adcb
popa
mov
mov
pop
roll
jnp
stos
and
or
sbb
jo
sbb
xor
dec
fstp
test
mov
shrl
nop
pop
in
icebp
roll
iret
ret
popf
scas
inc
icebp
imul
daa
and
pop
shll
push
mov
mov
stc
dec
inc
rcrb
sub
adc
addl
stc
lret
mov
xor
xlat
pop
jb
xor
pop
notb
lods
dec
insl
stos
popfw
inc
jns
pop
jns
cmp
icebp
es
arpl
mov
lods
scas
push
sub
sbbb
fdivp
imul
mov
insl
xchg
into
adc
in
aam
int
xchg
hlt
icebp
subl
jmp
loopne
cli
add
sti
sub
and
test
dec
mov
jl
hlt
inc
arpl
shrl
insb
outsl
hlt
outsl
adc
push
rorb
and
fs
cmp
mov
dec
gs
ret
fdivrl
add
das
cmp
lahf
cmp
leave
lcall
jb
lret
mov
popf
and
adc
test
sbb
aaa
loopne
clc
sub
mov
sub
xchg
iret
test
sbb
insl
jl
daa
das
add
adc
cmc
push
add
adc
jg
xor
push
hlt
mov
les
enter
aaa
push
sbb
shrb
inc
mov
out
xor
les
loope
mov
pop
call
testb
scas
in
nop
dec
adc
mov
stos
lock
push
cli
lods
dec
test
popa
pop
push
stos
ljmp
movsl
xchg
pop
add
cmp
jne
call
ret
sub
jmp
clc
lcall
cmp
xchg
jno
aaa
inc
in
scas
test
loop
and
daa
and
movsb
outsb
es
inc
stos
xor
xchg
mov
lds
or
test
adc
scas
clc
les
jecxz
repnz
xor
jecxz
js
lods
push
dec
inc
pusha
gs
dec
mov
push
jno
cmp
jg
jns
orb
ljmp
cmpb
nop
jle
mov
sbb
in
xor
out
pop
pop
insb
ror
repnz
jg
movsb
loopne
daa
xchg
xchg
mov
repz
mov
insb
and
pop
push
mov
cmp
ret
jecxz
adc
mov
enter
inc
jbe
xchg
aam
dec
data16
mov
addb
jl
out
sub
pop
add
pop
mov
loop
stos
mulb
sbb
fistpl
jmp
jbe
icebp
repnz
inc
xchg
rorb
pcmpgtw
faddl
cld
xchg
mov
sti
xor
sub
push
fcoml
mov
pop
and
cmp
mov
xor
adc
cltd
arpl
fwait
cmp
rcr
sbb
lods
test
pop
andl
mov
push
sbb
push
mov
mov
cmp
sub
adc
sub
hlt
mov
inc
test
mov
inc
sbbb
pop
jge
cmp
cmpsl
xor
jp
jb
fsubl
bound
xor
in
xchg
scas
stos
push
pop
push
notb
mov
mov
jmp
ja
ds
imul
push
repz
lock
in
insb
andl
js
repz
test
movsl
sbb
mov
stos
inc
jp
push
lods
xchg
cmpb
daa
popf
sub
xchg
cwtl
xor
bound
dec
add
xchg
jecxz
mov
sahf
mov
add
push
sti
fstpl
push
imul
dec
push
pop
jns
jle
mov
iret
mov
aam
shlb
mov
imul
dec
outsl
push
push
in
dec
jg
pusha
scas
push
movsb
aam
loope
test
in
xor
das
aad
mov
inc
push
push
cmp
sub
add
jne
and
cmp
shlb
stc
jae
adc
inc
out
in
into
popa
add
push
xchg
dec
xor
fmul
rol
outsl
push
cmp
out
gs
sbb
sub
cmp
cmp
shrb
cmp
mov
mov
push
dec
adc
fs
cmpsb
dec
popa
jns
cmp
sbb
pushf
dec
subl
pop
leave
sahf
loop
jno
and
dec
adc
xchg
cld
std
pop
test
pop
lret
ret
sbb
scas
fiaddl
or
arpl
into
inc
adcl
xor
fdivrl
scas
mov
call
scas
cmp
mov
lods
cmp
dec
sbb
lods
xchg
sbb
add
add
in
inc
xor
mov
mov
mov
sub
mov
xchg
inc
loope
test
and
pop
xor
inc
cli
jmp
pop
aam
sahf
push
data16
xchg
mov
jle
test
xor
mov
xor
xchg
sub
shlb
mov
aas
sub
fisttpl
dec
in
aaa
mov
bound
in
inc
inc
push
sbb
or
movsb
mov
mov
or
daa
loope
and
pop
dec
sbb
push
insl
notl
lahf
push
loopne
arpl
jo
scas
add
cli
mov
pop
mov
cmp
xchg
add
cltd
mov
call
adc
sbb
std
stc
out
jbe
inc
xor
mov
inc
es
xchg
fistpll
xor
cmpsb
out
cmp
adc
mov
les
jl
fwait
lret
insl
inc
pop
jns
fiadds
inc
lcall
xchg
fwait
dec
cmp
dec
jmp
cmp
fstpt
fadd
lahf
stos
mov
dec
out
push
mov
sub
fstl
andl
mov
test
lret
addr16
lods
adc
xchg
mov
push
aam
outsb
sbb
push
les
jg
das
or
mov
loope
xor
lods
and
stos
test
xor
fs
dec
mov
popa
ret
cmp
mov
mov
loope
fnsave
sti
dec
mov
loope
bound
push
pusha
jge
popa
or
push
pop
xchg
sub
jno
inc
imul
nop
cwtl
dec
fistl
dec
cmpb
cmp
pop
fs
mov
push
adc
jmp
test
push
sbb
mov
mov
scas
mov
jge
iret
jb
jnp
ret
dec
pushf
sub
and
push
push
inc
ret
add
sbb
data16
pop
stos
mov
idiv
inc
dec
fistpl
jbe
sbb
out
cld
stc
dec
jno
out
xchg
fisubrs
repz
jne
je
cmp
je
xor
cli
and
jae
repnz
imul
scas
mov
dec
andb
mov
repz
jp
sbb
sahf
mov
popa
add
mov
cli
dec
and
jge
fstpl
pop
ljmp
cmp
stc
cmpsl
ret
sbb
and
dec
pop
mov
jb
loop
mov
sahf
arpl
add
ja
cmp
rolb
pop
je
mov
jge
mov
cmp
mov
jmp
adcl
cltd
add
int
push
mov
mov
aad
lods
cltd
adc
and
push
sbb
mov
mov
sti
jae
arpl
adc
mov
aaa
mov
insb
jp
jecxz
jg
mov
adc
popa
das
and
sbb
mov
ja
fiaddl
sbb
nop
rol
dec
sub
das
divb
mov
ret
and
dec
lahf
jbe
nop
test
and
add
popa
sub
mov
add
clc
cmpsl
mov
sub
or
dec
dec
test
inc
push
ret
xchg
fstps
xchg
adc
jae
jecxz
mov
xlat
push
pop
stos
orb
into
test
lods
and
dec
mov
call
fcoms
mov
sahf
sub
popa
cmp
inc
jo
and
xchg
mov
sbb
loopne
cwtl
xchg
inc
jl
mov
mov
int3
icebp
pop
add
sub
xchg
jmp
jg
or
repnz
cmp
jbe
test
aaa
pop
into
mov
mov
sub
lret
sub
insb
lods
cmpsl
cmp
mov
xor
adc
mov
in
add
dec
loope
jnp
es
and
cmp
rorb
imul
mov
mov
push
cmp
fimuls
mov
fstpt
sahf
mov
sbb
cltd
mov
mov
mov
fsubs
ret
sbb
sub
push
movq
rorb
dec
hlt
jnp
push
lods
rclb
inc
cmp
lods
pop
sar
fistl
popf
cmpl
xchg
or
fsubs
cltd
inc
sbb
or
in
icebp
or
aam
sbbb
push
outsl
scas
insb
inc
xchg
and
fsubl
push
mov
negl
jge
popa
mov
enter
fsub
les
lcall
and
mov
ljmp
or
push
and
pop
xchg
adc
js
icebp
xor
mov
fcoml
cmp
inc
out
mov
out
sbb
mov
push
mov
repz
mov
jg
and
je
or
nop
add
pop
dec
sub
notb
rcrb
daa
xchg
push
sti
add
fwait
pop
aaa
andb
insl
dec
cmp
cmpsb
cmpsb
dec
xor
pop
cs
shlb
or
jae
and
push
mov
add
dec
lret
pop
xchg
push
xor
push
iret
rcr
cwtl
mov
je
fcmovnb
inc
sub
fimuls
stos
xchg
pop
aam
inc
and
xchg
aaa
orl
fdiv
jae
sahf
push
sub
jmp
rcr
sub
mov
dec
adc
pop
es
mov
enter
lods
xlat
mov
push
pop
hlt
xorb
push
push
dec
sbb
aad
mov
sub
and
shrl
dec
or
xchg
add
std
cmpsl
in
jl
dec
pop
and
inc
mov
leave
aam
les
lahf
insb
out
inc
pusha
sbb
lret
xlat
aas
sti
ficomps
shrb
cwtl
rcr
jne
jge
shlb
push
int
inc
dec
sub
xchg
cmp
stc
mov
and
gs
sbb
ret
mov
mov
dec
stos
pop
mov
adc
adc
orl
loope
call
mov
sahf
mov
ljmp
sbb
adc
outsb
add
and
dec
push
subb
mov
mov
lods
inc
es
sub
pop
adc
dec
xchg
std
cwtl
aad
dec
ret
cwtl
or
lock
push
or
lods
mov
lds
arpl
mov
mov
xor
filds
jo
pop
pop
daa
or
nop
mov
push
dec
negb
mov
xlat
dec
add
pop
dec
pop
pop
and
cmp
fdivl
rorb
pop
push
pusha
fldenv
enter
movsl
nop
int3
call
xchg
loopne
das
push
pop
sbb
hlt
push
xlat
in
and
lahf
sahf
pop
pop
fs
xchg
jno
fs
inc
lahf
shll
pop
repnz
sti
stc
xor
mov
jo
add
dec
push
lock
xchg
je
outsl
je
xchg
ja
shrl
pop
fisttpl
lret
fiaddl
jb
popf
or
dec
jmp
xor
pop
lea
push
inc
sub
loopne
jne
pop
adc
sbb
jo
mov
and
subb
js
jb
jns
mov
pop
xchg
nop
rolb
jnp
add
in
pop
add
push
repnz
in
outsl
in
jmp
xchg
or
scas
xor
cmp
fsubrl
or
aam
pop
rcl
cmpb
adc
negl
inc
sarb
loop
push
inc
sbbl
inc
in
gs
mov
mov
pusha
xor
divb
in
ret
mov
popf
inc
loope
lds
ss
or
sub
pushw
arpl
inc
mov
pop
mov
incb
fs
outsl
mov
sub
movsl
inc
xchg
outsb
push
cmp
nop
lret
orl
mov
cli
ret
xor
or
pop
sbb
push
adc
xchg
out
int3
or
cmp
pop
and
and
rolb
loope
pop
hlt
lods
xchg
in
push
dec
adc
mov
add
sbb
jecxz
jnp
mov
add
lock
inc
fisubrs
cwtl
outsb
es
shr
lock
lods
stc
cltd
xchg
inc
adc
push
jno
repz
es
and
into
sbb
mov
leave
or
jmp
scas
mov
daa
rorb
mov
mov
dec
fdivrs
int3
cmp
fsubs
in
push
nop
add
frstor
mov
dec
sub
divb
cmp
xchg
push
mov
loope
repz
or
adc
dec
adc
mov
add
leavew
test
clc
or
push
mov
sub
xchg
stc
jp
in
jmp
das
and
or
shrb
movsb
out
xor
pop
loop
and
mov
and
xor
or
jne
lds
xchg
mov
aad
push
cmp
mov
inc
rcr
fcomps
adc
adc
dec
pop
cwtl
and
loope
das
arpl
cltd
test
loope
loopne
fwait
xchg
loopne
mov
lret
xor
cwtl
add
popa
sahf
mov
jne
clc
mov
test
ss
lea
adc
xlat
mov
push
sbb
mov
movswl
mov
and
ficoms
mov
js
adc
mov
xchg
test
mov
adc
sbb
pop
cmp
mov
sbb
cmp
sti
mov
mov
sbb
mov
fnsave
and
ret
clc
test
in
pop
inc
add
mov
std
out
jnp
lret
xchg
dec
lods
jns
movsb
xorb
sub
pop
adc
mov
xchg
out
out
xchg
lock
mov
sahf
cmc
inc
sub
jbe
mov
repz
shrl
and
sahf
cltd
outsb
fwait
xor
jns
test
sub
inc
incb
adc
insl
insb
fstps
lahf
sbb
mov
aas
adc
push
dec
cli
lods
outsl
xor
mov
sbbl
cmpsb
and
leave
imulb
mov
scas
fcoms
sbb
lahf
adc
jp
cwtl
movl
or
rcrb
sub
jmp
pop
lock
insb
aam
int
xorb
js
add
pop
test
adc
nop
lret
movsb
enter
mov
ljmp
sarl
lock
fsubr
out
xchg
inc
int
push
dec
dec
aas
dec
sbb
xchg
test
cld
cmp
sbb
and
inc
test
xor
clc
shll
adcl
out
mov
movsl
jle
mov
jl
sti
loop
pop
push
pop
mov
mov
mull
sub
repz
jp
xor
bound
rorl
jmp
bound
ljmp
outsb
sub
icebp
xchg
mov
loope
xchg
repnz
jecxz
jnp
adc
cmp
jl
bound
sbb
or
int
sbb
aaa
shl
push
jns
in
ret
jns
pop
add
sbb
imul
mov
js
mov
popf
mov
inc
nop
insb
cld
psllq
adc
int
out
xor
addl
add
sahf
lea
fwait
mov
in
xchg
push
pop
cwtl
dec
outsb
bound
int3
insl
add
adc
pop
fisubs
and
mov
lock
sti
xorb
jno
dec
push
fisubl
xlat
call
dec
shl
dec
or
fcomps
jle
int
xchg
fsubs
and
int
mov
dec
jle
xchg
into
sbb
mov
movsb
cmp
dec
fdivr
push
pusha
fsubrs
mov
loopne
sub
repz
xorb
loopne
or
add
add
call
fsubrs
pusha
jns
mov
and
xchg
fcomps
xchg
xchg
shll
in
mov
push
mov
hlt
cld
int3
aam
push
int
push
dec
bound
mov
adc
mov
sbb
sarl
aas
push
jae
xchg
fdivrl
aas
push
add
xchg
and
adc
push
rcll
int
xor
sbb
icebp
mov
jno
orb
jmp
mov
jae
cmp
fildl
fisttpl
sub
dec
adc
jge
adc
leave
or
jmp
xor
jae
mov
and
out
mov
std
leave
add
out
popf
add
fcoms
jmp
sub
xchg
repnz
call
lret
dec
and
add
and
jg
pop
jmp
or
jg
clc
das
dec
and
pushf
mov
or
mov
inc
inc
xor
lods
stc
in
ds
sub
daa
mov
xchg
nop
lds
xor
cmp
aam
pop
xor
ss
pop
adc
and
adc
outsl
arpl
mov
lret
and
push
xchg
mov
orb
adc
cmc
push
adc
les
popf
or
fstpl
sti
mov
xlat
leave
push
or
aam
mov
mov
popf
sub
mov
cmp
int
notb
dec
rclb
and
decl
fstpt
xchg
out
leave
fcompl
xor
scas
call
jns
out
dec
ds
mov
mov
or
in
dec
or
fists
pop
and
xor
gs
sti
cmp
dec
test
lcall
scas
je
in
and
mov
arpl
insl
into
jns
xchg
push
clc
or
mov
and
mov
mulb
lea
addr16
or
xchg
in
push
call
pop
clc
xchg
dec
jne
xor
mov
pop
xchg
pop
xchg
idivb
xorl
loop
icebp
sti
loop
jge
push
lds
stos
mov
sub
enter
je
mov
lods
inc
movsl
out
loopne
mov
addl
mov
sub
cmpsl
add
aas
mov
leave
push
bndstx
jle
adc
pop
pop
ja
fwait
or
rcrb
ja
aad
mov
call
jns
xchg
ljmp
test
cmp
shrb
and
push
add
add
imul
les
mov
sbb
pop
jmp
in
xor
fdivl
xchg
mov
lea
mov
mov
ja
test
int3
sti
lock
lcall
dec
inc
jle
test
es
out
dec
inc
xor
jl
mov
lcall
or
ja
push
xchg
xchg
and
cmp
xchg
push
dec
clc
rclb
movsb
mov
mov
jp
mov
sbb
mov
add
mov
arpl
dec
jns
sbb
inc
aad
dec
sbb
mov
add
push
dec
stos
adc
andb
mov
cmpl
push
dec
flds
mov
jb
inc
adc
cmp
mov
or
cmp
adc
sbb
jbe
in
jne
mov
icebp
jle
xor
ret
jo
cmpsb
or
xor
lds
cmp
add
mov
mov
hlt
push
addr16
movsl
es
fdivl
cmp
es
mov
pop
addr16
in
mov
pushf
mov
jne
scas
jg
jne
lods
pop
xchg
pop
jmp
add
les
push
cmp
sbb
pop
jo
dec
xor
ret
js
call
adc
sarb
xor
push
mov
repz
add
inc
mov
cmp
lahf
aam
cmc
mov
lret
dec
lret
cli
adc
cmp
mov
stos
pop
push
inc
mov
enter
sbb
bnd
cmovns
jmp
add
out
xchg
popf
jb
rcll
jg
iret
mov
test
popf
cmp
lods
dec
mov
in
mov
or
mov
sub
pusha
sbb
setae
mov
mov
cmpsb
jae
mov
lcall
inc
cld
pop
inc
mov
mov
inc
fmull
rclb
cmp
ret
testl
jl
xchg
mov
lea
scas
cltd
adc
pusha
ret
pushf
fwait
sub
pop
adc
pop
dec
scas
and
out
or
inc
jecxz
call
popa
imul
xor
push
and
pop
scas
sbb
sub
mov
mov
push
aad
mov
xchg
roll
sub
push
and
and
stc
add
out
xchg
push
sub
int
es
icebp
hlt
popf
cmc
jne
test
xchg
iret
outsb
fsubr
mov
dec
out
jb
cmp
comiss
xor
push
mov
pop
mov
sub
cmp
js
adc
xchg
push
mov
xchg
bound
jb
dec
and
dec
mov
and
jo
and
or
das
jmp
xchg
mov
push
aaa
aam
inc
mov
push
dec
sti
bnd
mov
cmp
or
aad
pop
out
inc
into
imul
outsb
pop
or
pop
scas
outsl
das
cmpsb
or
jp
xchg
mov
inc
push
pop
mov
mov
ret
jle
xchg
in
sbb
test
mov
insl
dec
adc
xchg
js
inc
mov
push
popa
int3
ljmp
in
sbb
or
daa
out
stc
into
and
sbb
or
push
and
divb
test
mov
shl
mov
mov
gs
cmp
xchg
xor
bound
or
nop
inc
or
dec
ljmp
push
sub
add
mov
mov
mov
or
daa
loope
js
test
cli
leave
movsl
mov
divl
cmp
outsb
hlt
or
sub
adc
xchg
les
enter
ret
cltd
add
adc
dec
leave
pop
push
xor
sub
jge
out
jmp
addb
icebp
pop
dec
not
jp
dec
enter
mov
cltd
clc
out
jmp
nop
stos
mov
mov
inc
sub
xchg
dec
or
nop
int
and
fstpl
cmp
int
jo
pusha
and
or
pop
in
add
pop
mov
cmc
jo
cwtl
ds
add
dec
iret
add
iret
nop
fs
inc
out
pusha
popf
lds
pushf
cs
dec
pop
shrl
mov
cmc
sub
adc
fstps
pop
add
outsl
sub
mov
lods
add
mov
sub
insl
out
loopne
jmp
xlat
push
jge
xor
out
adc
test
inc
daa
pop
sub
pop
aam
scas
cmpsl
mov
test
jl
add
mov
pop
push
cmpsb
push
andb
adc
xorb
mov
insb
or
cmpsb
fildl
mov
pop
xchg
scas
inc
sbb
xchg
lods
cwtl
movsb
js
cmpsb
rorb
sub
cmpb
pop
or
leave
adc
and
sbb
inc
jmp
xlat
std
jo
iret
jbe
cmp
test
lahf
sub
imulb
pop
add
xor
iret
adc
adc
in
xor
jnp
push
xchg
inc
mov
call
inc
cmpsl
lret
inc
jno
loopne
or
mov
dec
jnp
jae
inc
cld
cltd
out
and
jl
sub
lods
push
cltd
inc
push
ret
cmpsl
icebp
mov
subl
cmpsl
mov
loop
das
push
mov
insl
push
push
adc
dec
dec
pop
lea
inc
pusha
pop
mov
push
cmc
mov
bound
aas
jns
pop
bound
clc
test
push
xchg
mov
sub
dec
stos
stc
sbb
shll
btr
add
mov
sub
movntps
fcmove
mov
cmpsl
pop
and
mov
push
sub
xchg
push
cmp
dec
jb
shll
pusha
push
add
mov
fbstp
jp
dec
std
jmp
dec
lods
in
add
pop
push
stc
dec
xchg
cmpsb
scas
daa
mov
stos
inc
xchg
int
jae
shrb
adc
and
int3
or
add
mov
cld
sbb
stos
sub
xchg
ret
mov
xlat
pop
lea
ljmp
mov
inc
dec
outsb
adc
push
scas
xchg
adc
jne
negl
cmc
mov
test
pop
imul
xchg
out
clc
repz
ret
inc
dec
pop
jnp
lret
xchg
in
xchg
xchg
out
out
push
dec
or
pusha
adc
iret
pop
xor
aad
or
insb
push
mov
add
jae
testb
xlat
inc
pop
cmp
mov
test
popa
and
sahf
out
out
add
mov
push
and
lret
test
out
and
and
push
aas
fcoml
pushf
sti
aas
imul
fiaddl
js
sbb
pop
cmpsl
jmp
pop
lds
push
pop
jne
mov
rcll
dec
or
lock
mov
inc
and
pop
call
jmp
xor
xchg
mov
jl
sbb
dec
pop
mov
mov
loopne
mov
data16
lds
push
dec
fwait
in
cmpsl
xchg
out
mov
inc
xchg
dec
aas
jge
test
mov
fimull
dec
fbstp
out
dec
adc
and
pop
mov
lahf
into
dec
dec
js
push
and
sbb
cmpb
lock
sti
mov
dec
xor
xor
xchg
dec
push
leave
fucom
mov
cmp
add
cs
xor
dec
push
in
in
nop
xor
mov
mov
jecxz
popf
cmp
aam
xor
loop
fcmovbe
adc
sarl
ficoms
cmp
xchg
push
jge
jecxz
mov
jle
insb
lods
inc
in
jb
or
aas
outsb
inc
out
test
adc
ds
mov
add
sub
mov
cmpsl
pop
mov
dec
leave
cmpsb
scas
nop
push
sub
into
ja
ror
jae
jmp
cs
jge
pop
fcoms
xlat
pop
clc
dec
push
testl
std
sbbb
sub
mov
adc
mov
sti
ret
push
icebp
mov
mov
cmp
sbb
xor
mov
xchg
and
pop
and
imul
lret
outsb
cmp
in
pop
rorl
ja
and
in
stc
add
andb
ret
fistps
sti
xchg
push
imul
pop
ds
mov
sbb
js
movsb
jae
sbb
inc
jl
jp
dec
jecxz
in
sbb
stc
insb
sbb
or
nop
scas
sbb
bound
rorb
adcb
push
push
out
sub
cwtl
sbb
sub
inc
std
sahf
lods
sub
ret
popa
lds
in
icebp
ljmp
mov
mov
outsl
sbb
xchg
dec
sti
or
jno
add
push
mov
mov
pop
imul
pushf
rcl
push
icebp
cmp
out
outsb
push
js
dec
jbe
clc
shrl
xchg
pop
or
lahf
es
adc
aad
ja
jae
xor
shl
mov
and
push
and
rolb
dec
jns
lcall
adc
repnz
lods
and
mov
add
fcoms
add
int
xchg
repnz
scas
xchg
ret
mov
xor
stos
push
adc
addr16
mov
xlat
cmp
mov
mov
je
jp
mov
pop
daa
aas
cmp
mov
icebp
inc
pop
xlat
andb
or
add
cli
jb
shll
sub
rcrb
jno
rcr
leave
and
outsl
ljmp
mov
xor
in
sbb
enter
mov
fwait
cmpsb
jbe
cmpsl
sbb
push
sub
mov
aad
xchg
lret
jecxz
mov
incl
aas
sbb
lret
xchg
nop
rcrl
jg
mov
pop
daa
fs
aaa
mov
and
pushf
ret
imul
das
xchg
in
cmp
sub
movsl
negb
out
movups
scas
roll
les
arpl
sub
push
dec
xor
or
cmp
push
jmp
popa
jg
and
clc
pop
push
cmc
jae
in
sti
cli
inc
loope
jg
addr16
in
and
mov
mov
add
mov
jp
js
repnz
addr16
mov
mov
loope
inc
and
cmp
push
mov
fs
sub
and
bound
jle
addr16
mov
pop
lea
mov
sbb
adc
test
or
stos
out
cli
or
cmpb
inc
pop
push
cmpsb
or
hlt
aam
add
out
in
orl
movsl
jnp
and
pop
inc
push
iret
cmp
sub
cld
fcmovu
les
sub
sub
push
pop
mov
movsl
lcall
inc
push
das
lds
js
and
cld
jne
and
mov
dec
pop
or
xchg
out
lcall
fst
mov
bnd
leave
in
mov
jg
packsswb
or
dec
pop
ret
cld
mov
xchg
in
or
push
hlt
loopne
sub
pushf
clc
leave
push
dec
and
xor
push
mov
mov
cmp
dec
insl
sbb
sbb
fistps
dec
je
xor
add
pop
mov
ja
and
je
cmp
mov
push
dec
hlt
test
pop
bound
adc
adc
loopne,pn
inc
test
push
or
jbe
iret
sub
adc
push
mov
adcl
bound
sahf
stos
lods
jle
jmp
mov
stc
push
lahf
pop
xchg
cmp
lock
push
ljmp
add
into
mov
xchg
inc
leave
sbb
mov
insl
xchg
stos
or
fmuls
cmpsb
ja
imul
sarl
cli
ss
test
xorl
aam
cld
cmp
xor
push
outsb
and
aad
jge
mov
push
in
mov
sub
and
faddp
gs
das
ja
mov
test
pushf
xchg
xor
js
aam
dec
sub
loopne
and
loope
jno
dec
scas
fwait
inc
pop
test
jne
xor
dec
inc
pop
iret
cmpb
mov
jnp
mov
xchg
in
sti
add
fldl
sbbl
in
xlat
ror
int3
mov
or
lods
xchg
cmpsb
lds
std
mov
dec
lcall
shrl
sub
addl
call
jo
mov
int
or
pushf
cmp
xor
loop
push
in
stos
rclb
shrb
or
rol
sbbl
xchg
fcompl
inc
hlt
shr
leave
jecxz
cmpsl
push
rcl
out
add
xchg
add
lods
pop
lock
xchg
xchg
mov
nop
faddl
inc
mov
jmp
sbb
sarl
in
mov
fistpl
ret
mov
sub
aam
stos
jmp
dec
pop
adc
bound
push
lcall
push
sbb
mov
sub
nop
push
pop
cmc
fidivrl
mov
or
sub
daa
cmc
lret
cmp
mov
sbb
xor
or
add
or
push
les
cwtl
test
mov
dec
cmc
rorb
push
repnz
sbb
adc
sarb
int
cmpsb
dec
repnz
mov
cmp
popf
aas
sub
add
shrd
cmc
je
jecxz
nop
lahf
daa
inc
shl
mov
pop
jbe
push
push
add
adc
and
enter
mov
push
dec
nop
mov
or
add
mov
ss
daa
sti
loope
pop
mulb
pop
loopne
fcoml
sbb
scas
aad
mov
in
push
dec
xchg
test
mov
pop
ss
and
daa
or
ret
fsubrl
xchg
pop
sub
aaa
aas
pop
lods
pop
inc
cltd
mov
pop
out
addr16
imul
stos
icebp
adc
notl
idivl
cmp
hlt
aaa
ljmp
and
stos
inc
sub
sub
mov
mov
dec
push
shr
push
test
xchg
mov
call
xor
loope
mov
adc
xchg
sub
add
jp
sub
and
std
lods
pop
jge
js
jg
cwtl
or
cltd
pusha
jae
or
leave
int3
lock
cmp
add
adc
dec
std
stc
cli
xchg
scas
popa
dec
adc
in
lods
outsl
add
and
jno
jo
add
jnp
xor
fwait
rcll
and
sub
mov
jb
xlat
sub
test
push
push
ss
and
movb
ljmp
imul
cwtl
testb
lds
mov
negl
pushl
inc
xlat
ficomps
popa
sub
scas
stos
mov
push
adc
rcr
gs
xchg
outsb
in
negb
xor
jg
dec
mov
sbb
xchg
rorb
int3
push
mov
popa
jae
jne
or
or
inc
jecxz
push
and
dec
mov
scas
divl
hlt
insb
xchg
pop
fiaddl
sbb
negl
and
pop
add
imul
repnz
pop
dec
cmp
lahf
push
mov
pusha
or
fstpl
mov
out
inc
outsb
fsts
xchg
sub
lcall
sub
inc
data16
and
cwtl
pop
stos
jne
xor
lcall
rcll
test
imul
jmp
and
lock
movl
cmp
add
test
or
and
insl
and
loop
jle
mov
cmpsb
daa
xor
adc
jecxz
push
subl
mov
mov
add
vxorps
adc
rcrl
stc
cmpsb
mov
addr16
adcl
mov
dec
add
pop
pop
sub
sub
mov
cwtl
mov
testl
cmp
repz
cli
out
push
insl
mov
add
xor
and
mov
outsb
leave
mov
fs
lds
pusha
sub
sahf
out
mov
lea
iret
dec
cli
mov
cmp
dec
outsb
fdivs
repnz
jecxz
dec
cmp
loope
mov
inc
das
sub
push
adc
sub
dec
fildl
gs
cmc
stos
xchg
sub
or
xchg
cmp
dec
std
test
ficompl
xor
push
js
mov
add
add
cs
jnp
sub
test
arpl
xchg
sbb
pusha
or
repnz
or
xchg
bound
dec
inc
out
es
mov
mov
shr
sub
sub
insl
lock
out
push
imulb
sbb
loope
add
xchg
sub
pop
sbb
repz
fists
mov
add
clc
loopne
lds
daa
xchg
out
insl
dec
fdivs
lds
push
jbe
call
mov
sbb
dec
sub
or
fildl
lea
lods
out
div
nop
lock
lret
xor
adc
notl
mov
cli
or
arpl
or
in
mov
cs
loop
xchg
cld
pop
mov
cmpsb
sub
stc
or
popf
shrl
mov
mov
push
movsb
sbb
aam
lock
lods
out
jae
sbbb
loope
pop
mov
out
or
mov
cmp
imul
push
fisubl
sbb
add
sbb
or
inc
ljmp
sub
dec
dec
in
insl
push
cwtl
adc
cld
inc
cmp
out
jo
xchg
shld
into
aad
mov
je
pop
sub
repz
mov
mov
xchg
jmp
pop
pop
scas
mov
data16
push
divb
jae
xchg
adcb
or
pusha
int
into
inc
xor
fsubs
add
test
mov
or
outsl
outsl
inc
scas
in
out
sub
int3
dec
or
addl
jge
xchg
inc
cmp
addr16
aas
mov
arpl
cmp
and
xor
sub
and
pop
add
mov
sbb
jmp
in
pop
xchg
jne
jnp
test
mov
add
sub
adc
stos
mov
sbb
jb
ror
sbb
jmp
mov
lret
mov
xlat
and
add
cmpl
cli
scas
mov
hlt
scas
dec
sbb
sar
adc
mov
pusha
daa
sti
notl
shrl
inc
add
ja
fsubs
xchg
mov
rorb
cmp
outsl
test
push
push
addr16
jge
cmc
shll
sbb
xchg
fs
mov
push
imul
adc
sbb
fisttpll
fsubs
cmpsl
inc
and
lods
dec
loop
aaa
out
mov
test
or
mov
cmp
mov
mov
sub
xchg
shlb
cmp
pop
jmp
fisubl
test
dec
mov
push
ds
mov
iret
dec
fcomps
loope
jp
dec
mov
sbb
inc
xor
aam
outsb
es
dec
notb
mov
cld
inc
pushf
es
addr16
aaa
adc
movzbl
jae
test
or
repz
cmp
pusha
test
pop
inc
sub
adc
es
push
es
mov
popa
jecxz
pop
inc
jae
mov
inc
add
cs
or
out
ljmp
xchg
cmp
das
jbe
sbb
dec
loopne
add
scas
mov
aad
xor
sbb
negl
and
je
pop
inc
enter
sahf
pop
ds
xor
add
movsl
mov
roll
xor
call
das
push
sub
dec
cmc
jp
fmuls
jmp
pop
iret
pop
mov
cmp
aas
aaa
inc
test
pop
cli
mov
ss
repz
inc
in
pusha
xchg
mov
adc
push
mov
lea
cmp
inc
mov
jle
dec
call
sub
ret
movsb
jg
inc
out
mov
imul
sub
push
pop
popf
push
nop
push
inc
fs
pushf
out
call
pop
cmp
sahf
push
and
sbbl
push
and
jmp
scas
arpl
pusha
push
adc
ss
in
push
push
jl
loopne
repnz
xchg
fidivrl
mov
xor
jne
xor
xchg
mov
mov
das
ss
test
push
jg
insb
xchg
cld
int
scas
and
mov
insb
xchg
pop
out
lret
cld
es
jnp
xor
and
xor
pushf
out
subl
jnp
mov
lret
push
cmpsb
test
sbb
aas
xchg
mov
add
fadds
and
sbb
dec
dec
xchg
addr16
add
test
sbb
shll
imul
add
mov
mov
std
add
pushl
repnz
dec
ret
mov
lcall
and
sbb
xchg
mov
jns
out
dec
xor
dec
or
xor
mov
pop
xchg
push
push
aad
popf
xor
test
outsb
repnz
out
and
lods
js
test
testb
pop
aam
push
int3
cli
andb
jge
pop
pop
mulb
dec
movsb
popa
cmpsb
mov
sbb
jae
xchg
and
pop
adcl
lods
mov
dec
xor
mov
lret
add
rorl
sbb
mov
repz
mov
or
push
push
inc
shlb
es
sbb
sahf
jne
cwtl
jnp
idivl
sub
or
insb
pop
adc
in
scas
xchg
pop
or
jg
test
cmp
negb
scas
inc
aaa
nop
adc
rclb
jp
test
pop
lret
push
and
ds
addl
cs
popa
aad
clc
lcall
xor
iret
sub
shr
pop
movb
shrb
stos
or
mov
sbb
cs
push
push
in
movsl
xchg
cmp
adc
lods
jno
push
add
shll
mov
xchg
xlat
jmp
sub
push
lcall
fnstenv
pop
sub
shrl
in
push
das
arpl
icebp
out
clc
inc
jmp
mov
sbb
movsl
inc
xchg
add
aad
push
sbb
mov
jmp
arpl
xchg
gs
dec
lea
fimull
add
pop
call
cmp
cltd
xlat
call
and
adc
je
mov
adc
adc
scas
sub
xor
int
xlat
out
cmp
add
or
mov
loope
fstpt
leave
jmp
pop
sbb
mov
pop
loop
rcr
and
xlat
xchg
arpl
fwait
xchg
mov
xchg
int3
leave
sbb
cmp
xor
jg
popa
mov
cmp
rcrb
jns
cmpsb
push
or
xlat
fmulp
cmpsl
popa
sbb
aad
xchg
std
jg
lods
xorb
std
dec
and
cmpsb
iret
inc
bound
aad
dec
fstpl
ret
imul
sub
sbb
in
movsb
out
ficoml
mov
data16
aas
push
xor
jp
mov
inc
pop
push
push
lcall
or
iret
sbb
mov
aas
int3
jle
scas
lods
dec
shr
iret
in
add
or
jno
lea
or
movsl
cld
popa
lock
pop
sahf
lock
mov
cmpsl
add
in
jle
mov
pusha
xor
stos
xor
and
sbb
inc
imul
stc
addb
fsubrs
xlat
dec
jae
mov
sub
idiv
icebp
lock
sti
lods
mov
push
cmp
gs
je
pop
mov
jae
pusha
pop
movsl
adc
mov
pop
mov
jmp
and
imul
xorb
cmp
clc
lods
mov
loope
push
jbe
shll
out
push
loope
int3
test
je
mov
fldcw
cmpsl
rclb
lret
inc
xor
into
test
loope
imul
es
lahf
pop
out
mov
sahf
xchg
xor
fimuls
test
imulb
loopne
and
xor
lcall
jg
in
adc
aam
pusha
lods
rclb
cld
inc
jp
lock
mov
test
cld
sub
xchg
iret
mov
loope
cmp
jb
icebp
imul
in
xor
or
pop
push
jecxz
cmpsl
cmp
insl
push
or
adc
cmc
addb
out
rcr
fsubs
fs
mov
mov
push
call
cmp
push
test
lea
repnz
dec
and
adc
mov
jle
mov
in
pop
in
fistps
into
mov
dec
mov
lods
mov
cmc
ds
clc
pop
ds
inc
sub
lret
mov
pusha
mov
lcall
ljmp
inc
xorl
add
test
jle
sub
clc
pop
out
and
push
je
mov
mov
sbb
pop
sub
incb
loop
std
popf
loopne
jbe
hlt
mov
push
and
add
cmp
sbb
icebp
add
cs
loope
aam
ret
clc
fsub
dec
sub
and
sbb
add
iret
mov
lret
int3
lret
dec
ret
fidivrs
fidivs
loop
mov
pop
jae
xor
push
lcall
loopne
mov
hlt
xchg
xor
jo
sbb
mov
add
mov
jae
add
xlat
dec
int3
addr16
and
cmpsb
dec
in
les
push
push
mov
lret
lea
mov
mov
lock
xor
es
jecxz
and
inc
and
xchg
xchg
mov
add
call
lahf
repz
cmc
xchg
stc
mov
fisubl
cmp
mov
adc
stos
movb
jo
mov
or
cmp
and
mov
movl
jo
int
xchg
ss
push
xchg
adc
clc
pop
add
add
popf
xorb
fldcw
ficoms
iret
ret
fsubrs
adcl
popf
pushw
dec
js
out
fldl
out
enter
add
pop
dec
inc
imul
mov
nop
movsl
cli
mov
mov
daa
mov
xchg
lock
inc
jp
lret
rol
lret
sbb
fimull
jmp
int
cmpsb
cli
push
roll
inc
js
jl
cmp
sub
mov
cli
mov
stos
pop
xor
mov
or
push
xor
sbb
mov
sbb
or
enter
test
jbe
cmp
das
lods
cltd
int3
sarl
sbbb
bound
arpl
clc
dec
in
testl
push
xorl
mov
aam
push
rcrb
shlb
icebp
popf
jns
enter
cmp
xchg
pop
sub
push
mov
mov
xchg
mov
data16
adc
mov
or
ss
pop
dec
or
popa
xchg
rorl
ret
mov
and
fwait
sti
aas
fs
rorl
cld
cmpsb
pop
scas
pop
lahf
xor
cmp
out
mov
xor
stos
fldenv
je
pop
pop
mov
sub
and
rol
cli
jo
push
addb
mov
sbb
jg
sbb
xchg
cmp
in
pop
stos
sbb
adc
cmp
sub
shlb
cmp
mov
enter
inc
std
imul
jnp
push
pop
lds
add
mov
mov
in
and
pushf
insb
lret
call
xchg
cmpsb
fisttps
mov
push
sbb
bnd
dec
inc
dec
int
cmp
out
pop
dec
lock
or
pop
into
mov
adc
aaa
lcall
pop
stos
push
fwait
js
add
lahf
sub
hlt
xchg
les
add
sahf
mov
ss
ss
rorl
pop
mov
dec
aas
push
sub
jnp
pop
mov
iret
add
jmp
cmp
add
cmp
push
and
push
inc
sbb
push
out
stos
push
mov
data16
mov
jg
les
ds
sbb
fmull
arpl
ret
add
movsl
into
mov
or
lret
pop
and
dec
cltd
rclb
pushf
cs
xor
andb
outsl
je
inc
cmc
lods
mov
jmp
scas
mov
adcb
cltd
add
push
sub
push
pop
lret
lea
adc
mov
push
pop
sub
in
mov
push
outsl
ret
mov
sub
push
loopne
daa
adc
jg
push
add
dec
push
sub
stos
pop
call
imul
or
or
lods
mov
shll
sub
fiadds
test
xchg
das
adc
sbb
inc
aam
adcl
jae
pusha
adc
and
add
das
les
rcrb
jmp
or
pusha
sbb
cltd
pop
iret
push
repnz
xchg
sbb
popf
addr16
sbb
jnp
fisubrl
adc
adc
pop
mov
mov
loope
inc
xor
cmp
jg
cwtl
jmp
push
enter
fdivs
sub
adc
and
pop
enter
stos
fidivs
ret
out
or
lock
data16
cmp
mov
sub
inc
add
leave
shll
mov
xchg
or
js
add
push
mov
mov
inc
xor
mov
vmwrite
in
jb
aad
dec
lds
sbb
fstpt
les
mov
xchg
jb
push
mov
test
pop
sti
cmp
test
pop
or
jbe
leave
imul
icebp
ja
roll
pop
test
cwtl
loopne
xchg
push
push
sub
sub
mov
fcmovbe
sub
aas
dec
jae
movsl
mov
sahf
sub
jb
or
sub
data16
push
jmp
adc
fdivrs
dec
leave
or
jae
push
lods
pop
int
mov
push
roll
mov
insl
cmpsl
daa
frstpm(287
xchg
pop
in
ljmp
push
fldcw
rorb
pop
addl
push
cs
leave
mov
lods
mov
mov
jnp
stos
in
iret
sbb
hlt
call
insw
out
add
inc
test
mov
ret
mov
push
mov
inc
ret
popa
loopne
outsl
sbbb
aam
mov
push
mov
xor
mov
sub
pop
jo
adc
push
scas
cli
or
popa
xor
rcl
sub
sbb
pop
shrl
fbld
sbb
inc
adc
mov
jecxz
adc
lret
and
ja
jo
or
cld
fistpll
push
fisubl
sbbb
dec
push
sbb
dec
in
imul
jge
test
mov
xchg
sbb
xchg
mov
scas
ret
jno
outsl
sub
or
push
sbb
out
xchg
cmp
shlb
fcmovbe
aas
mov
mov
das
loop
xchg
popf
std
mov
rol
sbb
iret
ljmp
jbe
cs
xor
or
outsb
mov
jnp
sbb
mov
sub
xor
daa
pop
cmpsl
iret
stc
and
push
mov
and
mov
push
fdivs
adc
dec
sub
xchg
cs
fwait
mov
fldenv
iret
rolb
xor
jge
adc
mov
test
enter
fisttpll
test
mov
xor
xchg
clc
out
mov
cmp
gs
jg
cli
push
sub
lock
outsl
mov
add
push
jge
fiaddl
ss
cld
lods
xor
and
adc
nop
dec
inc
in
push
hlt
pusha
pop
mov
add
fcmovnb
jg
out
aas
ror
cmpsl
xchg
push
lcall
lock
in
sbb
push
mov
and
dec
je
adc
adc
xchg
sbb
mov
mov
rcll
inc
mov
rorl
rorl
jge
cmpsb
or
shrb
xchg
mov
jae
cmp
scas
sti
cmp
add
insl
aad
and
aas
icebp
mov
cmpsb
popf
push
ljmp
or
aam
stc
in
ds
out
test
sbb
clc
jbe
ret
into
orb
stos
mov
inc
lods
loopne
in
sbb
negb
lea
xchg
vphaddwd
pop
mov
test
xchg
sbb
gs
jae
cmp
and
out
popa
inc
sbb
add
daa
cmc
xorl
add
fdivrp
lret
js
popf
jge
jg
push
ljmp
jmp
mov
scas
lcall
js
shlb
dec
lods
mov
in
loopne
insb
and
jo
fwait
jecxz
lahf
out
inc
je
clc
pop
dec
mov
add
pop
sub
lods
push
inc
pop
jp
lock
cld
sbb
and
mov
outsl
fucomp
push
movsb
push
push
xchg
dec
pop
mov
xor
jne
sbb
add
aam
dec
adc
inc
dec
mov
and
mov
loope
sbb
cld
fisubrl
movsb
mov
push
iret
mov
and
aad
testb
or
test
jp
sbb
xchg
and
fwait
test
add
pop
xor
xchg
jl
inc
xor
sbb
push
sub
or
pop
mov
popa
insb
sub
popa
inc
pop
ret
cmp
es
aad
ficomps
inc
push
les
jne
mov
sbb
es
lret
dec
add
xchg
or
out
push
xchg
and
cmpsl
cmc
inc
cmp
daa
adc
cwtl
xchg
repnz
push
insl
es
mov
xor
inc
addr16
ret
sbb
out
xchg
add
mov
cwtl
jae
or
inc
mov
scas
aad
jno
ss
pop
mov
mov
xchg
fdivl
in
cmp
mov
adcb
adc
lods
mov
repnz
inc
cld
fsts
clc
mov
jp
and
idiv
jnp
fildll
xchg
mov
stc
addr16
xchg
mov
lods
repz
jp
scas
mov
loope
add
add
mov
push
sbb
or
enter
dec
cmp
mov
nop
ficoms
cmp
enter
fists
mov
loope
leave
adc
mov
addr16
push
out
mov
invd
ja
push
xchg
xor
int3
inc
mov
mov
mov
push
mov
jmp
in
xlat
loopne
xor
fwait
sbb
mov
xchg
cmpsl
in
push
shlb
add
jno
aaa
push
mov
fs
mov
sbb
jnp
loopne
and
fcmovb
shr
ds
dec
jno
mov
je
or
shl
out
cmc
pop
or
loop
in
add
xchg
xchg
imul
dec
mov
movhps
loopne
out
jnp
int3
dec
xchg
fdivrl
pop
xchg
outsl
shlb
sub
dec
gs
aaa
fcoml
test
and
lods
es
dec
es
mov
mov
repnz
push
jg
call
inc
dec
sbb
hlt
mov
dec
pushw
mov
ljmp
mov
add
sub
mov
mov
or
dec
and
mov
outsl
mov
and
or
jecxz
pop
outsl
pop
mov
jno
jecxz
push
testb
imul
xor
cli
push
js
cwtl
inc
stos
mov
add
sbb
aad
mov
inc
cmpsl
xor
int3
lcall
jl
and
sar
mov
adc
fnsave
xchg
pop
xor
loopne
xor
es
in
gs
jns
into
and
imul
popf
cmp
mov
pusha
add
enter
lea
sub
rcll
cmpsl
inc
inc
cmpsl
sub
adc
or
sahf
xchg
push
or
sub
ja
jle
cmc
add
push
jb
fwait
dec
sbb
jbe
pop
iret
imul
jb
outsb
pop
xor
sub
dec
adc
sub
jle
xchg
shrl
sub
pop
mov
out
lahf
xor
jb
jp
push
stos
adc
test
loopne
xlat
push
lock
std
add
in
mov
roll
sahf
adc
push
xchg
shrb
xor
cmp
xchg
xor
xor
push
les
out
push
fwait
and
lods
fidivrl
ud2
out
bound
sub
or
lret
jl
ds
adc
or
add
mov
addb
hlt
pop
daa
hlt
sti
mov
xlat
pusha
lret
lcall
out
or
stc
rcl
inc
adc
subb
dec
add
into
or
pop
and
mov
xchg
fisttpl
pop
mov
push
fdivrs
lahf
clc
rorb
ret
ret
mov
aas
jmp
or
hlt
add
add
add
jp
jne
aad
dec
cmp
jle
cli
jns
mov
pop
pop
add
sbb
push
jp
jp
jl
sub
das
imul
pushf
inc
and
jne
cmpsb
sub
pop
popf
inc
sub
and
inc
popa
adc
ficoml
cltd
adc
or
mov
outsb
cmpsb
imull
stos
push
sbb
mov
push
jno
loop
sub
mov
and
push
jl
mov
xchg
dec
adc
inc
jne
push
xor
addb
iret
lods
sahf
adc
sbb
push
mov
or
lods
imul
aad
out
sbb
clc
shr
jmp
or
decb
popf
pop
pop
adc
or
mov
stos
push
add
loop
ds
bound
addr16
into
dec
dec
loopne
mov
dec
sbb
mov
or
add
xor
hlt
push
popf
sbb
jbe
push
gs
push
inc
jbe
mov
mov
mov
movsl
pop
icebp
push
xlat
inc
cmp
or
adc
cmp
adc
mov
jbe
out
adc
rcrb
dec
and
movsl
aam
test
cmp
cbtw
add
aam
cmp
movsb
imul
lcall
push
inc
mov
push
stos
push
and
sbb
jbe
aam
fcompl
addl
fisttpl
xor
inc
testb
push
int3
xor
jmp
jbe
ljmp
adc
cmp
xlat
push
ss
and
cmp
jle
sbbl
mov
mov
sub
xchg
in
js
nop
shrb
inc
jge
xorb
sbb
adc
stc
in
dec
and
mov
mov
in
push
mov
in
pop
mov
sub
sub
stos
aad
roll
outsb
cmp
and
mov
imul
pop
outsl
cmp
pop
mov
jnp
enter
bound
popf
mov
rclb
mov
and
inc
or
into
stos
xchg
mov
rorb
add
add
xor
in
sarb
daa
jo
xchg
add
ja
leave
lret
test
jle
lret
xor
test
imul
sub
jbe
and
pop
mov
in
mov
fwait
mov
add
mov
mov
adc
xchg
andb
pop
stc
and
or
sbb
lahf
insl
cmp
xchg
mov
adc
dec
push
lcall
sbb
dec
sub
adc
xor
cld
ds
lcall
xor
out
and
out
lock
daa
mov
or
inc
pop
aaa
jae
ljmp
adc
sbb
jae
inc
call
adc
or
sub
pop
repz
lods
sbb
xor
cli
sub
push
scas
inc
in
cmp
mov
add
xchg
adc
fwait
in
cmp
dec
and
jno
in
or
push
xchg
or
jns
xlat
jle
daa
inc
out
stc
inc
addr16
inc
or
lcall
sbb
aam
stos
fcoml
aaa
out
int3
mov
mov
dec
in
adc
push
ljmp
mov
cmp
dec
inc
lret
and
andb
xor
mov
nop
and
shll
push
imul
push
decl
sahf
imul
jmp
adc
lahf
ljmp
gs
test
inc
outsb
adc
mov
and
in
popf
out
push
xchg
dec
push
dec
loopne
out
dec
jno
movsbl
clc
cmp
shlb
lret
push
ret
fstps
lds
pop
inc
inc
push
pop
loope
rolb
flds
add
push
cmp
jne
dec
test
jmp
xlat
mov
jbe
xor
inc
ret
xor
bound
mov
repnz
mov
jns
movsl
xor
mov
push
xchg
ja
xorb
cmp
jo
repnz
push
test
fucom
and
fs
or
lods
cmp
lods
push
lret
xchg
shr
nop
mov
stos
in
sbb
cmp
test
xchg
sti
subl
jp
add
lret
aaa
and
dec
adc
inc
mov
cmpsb
fwait
push
mov
outsl
into
cmovb
ds
imul
or
mov
adc
lds
lret
imul
test
xor
dec
or
adc
dec
push
les
mov
sbb
mov
mov
sti
xor
rolb
lahf
mov
push
or
pop
mov
cmpsb
mov
ds
stc
andl
std
fists
pop
xchg
inc
dec
int
jo
jo
push
dec
insb
mov
sub
sahf
xor
jb
out
mov
mov
andb
adc
test
call
into
in
pop
loopne
dec
cmp
icebp
jecxz
jnp
lret
scas
ret
or
inc
test
jns
icebp
imul
or
sub
add
hlt
push
jbe
insb
fwait
mov
and
jle
cld
int3
sbb
mov
loopne
scas
pop
push
pop
pop
fistpll
ror
int3
pop
in
repz
sbb
mov
adc
and
pop
loopne
push
add
call
fnsave
dec
ret
clc
scas
sbb
js
inc
cmpsb
pop
adc
or
nop
shll
xor
mov
add
pop
shll
add
and
hlt
fdivs
xchg
cwtl
shr
mov
jg
xchg
daa
ljmp
movsb
lock
test
inc
lea
outsb
pop
lahf
sub
scas
rcl
sbb
pop
das
out
xchg
push
cwtl
adc
push
nop
push
jg
pop
jo
and
inc
pop
gs
inc
sub
mov
dec
test
rolb
push
inc
add
mov
daa
sbb
scas
mov
pop
dec
in
sub
jmp
cmc
call
repz
cmp
sbb
mov
std
jecxz
push
mov
and
nop
ficoms
mov
rorl
adcb
int
nop
jle
popf
sub
push
xor
pop
lahf
iret
shrl
or
in
sbb
inc
leave
pop
bound
test
outsb
adc
pop
jbe
addb
push
out
sub
gs
xor
xchg
mov
mov
push
stos
test
rol
jmp
xchg
xor
or
pop
fsubrs
aas
in
mov
mov
dec
push
stos
lret
test
leave
stc
mov
ss
pop
dec
lahf
xor
pop
movsb
cmp
shll
movsb
iret
test
jne
leave
push
test
lods
jo
fmul
rorl
push
xchg
xchg
mov
pop
push
fwait
pop
mov
out
imul
add
imul
sti
lds
cmc
add
adc
xchg
inc
rcll
out
sbb
outsb
aam
pop
dec
iret
das
pusha
xor
or
pop
out
push
xchg
movlps
scas
and
bound
int3
test
lret
pop
stc
mov
cmp
mov
jecxz
xchg
lcall
sub
or
inc
out
push
popa
inc
into
or
mov
jns
inc
push
sbb
pushf
jno
mov
sub
cmp
orb
add
aad
lcall
push
lret
hlt
stos
pop
fs
int3
or
outsl
lods
lods
dec
adc
sbb
mov
push
lret
daa
mov
daa
cltd
nop
mov
insb
xorb
pop
sub
or
xchg
and
jns
std
lods
mov
inc
in
ror
mov
jmp
xchg
xchg
fiaddl
cmp
sub
loope
imul
aam
sbb
lret
icebp
push
lea
jbe
mov
addr16
lods
mov
cmp
rcr
mov
pop
inc
cmp
push
dec
pop
das
sbb
mov
jmp
enter
cmp
rcr
repz
outsb
push
xor
int3
int3
adc
cmpsl
push
mov
cmp
jo
loopne
jge
cld
and
sbb
or
lods
mov
cmp
out
pop
push
xlat
or
dec
xor
dec
inc
test
rcr
ret
dec
sbb
in
stos
out
jecxz
push
mov
xor
aad
hlt
or
pop
mov
mov
inc
mov
imul
out
sbb
icebp
inc
push
fucomip
jp
sub
mov
jecxz
push
test
add
outsb
jns
push
icebp
stos
cld
pop
repnz
repz
xor
cmp
inc
jge
shlb
rol
das
aam
cmp
jns
mov
mov
scas
or
mov
cld
testb
sti
xchg
cltd
add
cmpsb
cmp
sti
inc
jg
jmp
rclb
ret
js
add
out
cmp
push
scas
xchg
add
es
xlat
xorb
push
add
cmp
int
aad
aad
arpl
in
xchg
adcl
xchg
in
xlat
lcall
jnp
mov
cwtl
ficoml
roll
sub
push
in
lods
hlt
outsl
in
loop
arpl
dec
fcomip
dec
adc
hlt
clc
dec
rorl
ja
sub
pop
or
cmpsl
xchg
jno
loopne
subl
lods
pop
test
scas
sbb
hlt
push
movsb
fwait
lds
cli
int
ret
xchg
and
call
or
ret
mov
rcrl
add
inc
xlat
mov
jb
push
adc
dec
mov
js
hlt
mov
std
sub
jl
lcall
movsl
fcmovnbe
and
pop
std
pop
shlb
loop
sahf
test
sbb
mov
sub
pop
jno
aaa
imul
imul
push
sahf
lahf
jne
mov
inc
mov
in
scas
inc
lahf
pop
inc
jg
and
cli
inc
fnstsw
cmp
jb
test
ficomps
popf
fistpl
mov
push
lea
mov
lods
jbe
push
xchg
cmpsl
aad
xlat
mov
dec
adc
repnz
adc
or
xchg
jne
sub
andl
push
xchg
cmc
push
iret
jecxz
sbb
andb
push
pop
repz
xlat
jl
xchg
stos
jo
pop
inc
pop
and
fnstsw
jge
and
mov
mov
test
cmp
or
pop
push
sbb
orl
and
xor
cmp
inc
js
cmp
sub
mov
imul
xchg
test
leave
inc
repz
and
insl
push
pop
adc
jne
sub
xchg
push
jmp
lods
insb
das
inc
xor
or
in
ljmp
mov
lret
lods
sti
inc
jb
mov
repz
xchg
jge
shrb
dec
mov
int3
xchg
mov
pushf
xchg
mov
sub
shlb
mov
loop
stos
jecxz
mov
mov
cmp
hlt
jle
push
and
popf
stos
outsb
loope
push
je
je
adc
imul
mov
jnp
out
test
out
push
imul
shll
xor
push
int3
loopne
lret
test
ret
jb
xor
ljmp
mov
push
lcall
sbb
mov
repnz
xchg
leave
in
out
mov
pop
fwait
stc
insl
xor
and
push
add
pop
dec
or
sbb
outsl
insl
out
mov
pop
adc
cmc
pop
inc
jg
arpl
out
hlt
es
sub
addb
jo
test
sbb
loop
sbb
movsl
dec
lcall
cmp
call
mov
pop
ja
imul
mov
imul
mov
int
insb
in
lods
inc
jp
mov
sarl
pop
pop
sar
inc
sub
pop
cs
inc
pop
data16
loopne
mov
or
lret
cmpsb
xchg
repz
inc
jg
leave
loop
add
mov
adc
popa
and
out
push
sub
add
lock
xor
pusha
mov
add
mov
pop
sub
add
scas
cltd
dec
rcrl
cwtl
push
addr16
lods
fcoml
popf
push
insl
dec
sub
mov
xchg
sub
fs
fldcw
stos
pop
test
ficoml
jg
lahf
adc
or
popf
xor
out
call
std
leave
jp
je
mov
repnz
xchg
gs
repz
subl
shlb
aas
push
sbb
repnz
mov
in
aas
movsb
inc
int
adc
lods
nop
xchg
int
push
lahf
fistl
jge
push
pop
xchg
leave
stos
dec
push
iret
nop
jo
arpl
jecxz
pop
aas
jl
pop
push
mov
push
jnp
scas
add
mov
or
leave
sbb
jmp
jl
cmpsl
add
je
rcrb
shll
xorl
dec
call
sbb
scas
cmp
test
es
sub
pop
outsl
mov
jge
gs
jnp
adc
jmp
fildl
inc
fstpt
push
cmp
sub
fs
in
add
gs
push
mov
inc
addl
ficomps
mov
test
into
popf
dec
jnp
repnz
adc
sbb
std
repz
sub
or
in
push
decb
jae
addb
mov
gs
ss
loopne
lret
sti
and
mull
mov
insb
jg
nop
or
push
fs
push
xlat
xlat
ljmp
mov
hlt
mov
and
repnz
std
sub
mov
adc
lds
xlat
mov
sbb
pop
mov
or
xchg
pusha
xor
pop
imul
rolb
mov
jbe
push
icebp
jmp
push
fst
inc
pop
or
pop
add
stos
inc
test
inc
cmp
leave
outsb
xlat
icebp
inc
pop
inc
pop
mov
mov
shlb
enter
cs
imul
dec
or
sbb
test
cwtl
aad
adcl
dec
lods
insl
test
sub
shr
bound
das
jg
in
subb
inc
insb
in
mov
and
loopne
pop
les
sub
push
sbb
add
mov
xorl
cs
rclb
es
push
xchg
mov
repnz
mov
cld
mov
adcl
mov
inc
jle
fbld
lods
outsl
or
outsl
push
mov
ror
fdivrs
sub
mov
add
cmc
add
dec
dec
sar
imul
xchg
test
enter
dec
adc
sbb
in
push
fcomp
cwtl
fsubr
mov
xchg
pop
cltd
clc
mov
or
dec
adc
or
sbb
mov
lcall
clc
cld
cwtl
in
pusha
add
xor
rcl
push
cs
ds
dec
xor
add
dec
jb
loop
pop
push
cmpsb
jb
push
push
fadd
jbe
lods
xchg
xchg
push
sarl
xchg
out
jmp
mov
jge
xchg
repnz
dec
ljmp
push
push
aad
mov
sti
loope
repnz
dec
stos
fists
sbbl
push
fisubs
loope
test
shlb
pop
sub
xchg
fcoms
mov
lods
aad
mov
ja
mov
es
ret
inc
mull
dec
jno
sub
mov
mov
jecxz
cli
mov
sub
xlat
addl
or
outsb
pop
sbb
loope
dec
lods
call
sub
push
cmpsb
in
mov
or
cmp
push
jns
inc
es
sbb
xor
lods
xchg
in
jb
add
je
loopne
jae
enter
shr
call
mov
cli
fisubrs
sbb
mov
sbb
pop
rcl
jns
xchg
or
mov
xor
js
cmpsb
das
push
sub
cs
add
data16
int
aad
push
and
shll
jp
sbb
mov
stos
mov
pop
jno
divps
out
push
rcll
adc
or
aam
das
loop
mov
mov
out
movups
cmp
pusha
inc
inc
cmpsb
in
sbb
mov
mov
je
xchg
mov
adc
insl
es
mov
popa
in
pusha
shrb
sbb
add
test
jle
adc
decb
push
push
sub
outsb
in
fwait
cmp
rorl
call
sub
call
test
push
jmp
mov
mov
pop
jns
test
fnstenv
outsb
frstor
mov
inc
mull
push
pop
mov
mov
sub
sbb
fldenv
cs
test
arpl
and
insb
lods
test
inc
ja
call
sbb
clc
fisubs
fs
xchg
pusha
loope
jmp
dec
and
xchg
cmpsl
mov
xor
ja
call
or
fisubrs
rol
or
xchg
mov
xchg
fdiv
jg
enter
insb
sub
idivb
loope
arpl
out
and
pop
xor
jno
dec
loopne
push
jp
aam
fs
xchg
jnp
mov
push
push
fnstenv
dec
hlt
jns
outsb
inc
sub
ret
sub
dec
and
stos
sub
pop
sbb
add
aaa
scas
or
xor
hlt
jl
aad
js
jb
push
pop
push
mov
test
or
dec
fistpl
adc
shlb
and
lret
dec
inc
test
push
sahf
pop
cmp
std
xchg
jb
scas
sbb
cmpsl
movsl
pop
pop
jns
sbb
lahf
jmp
movsl
cld
rcll
sub
nop
out
dec
mov
cmc
mov
pop
insb
jbe
xchg
jns
push
sar
pop
add
mov
sbb
scas
sahf
mov
fs
mov
popf
xor
sti
aam
jne
or
fs
cs
nop
mov
mov
mov
rcrb
cld
into
lret
cmp
xor
scas
or
lcall
rcr
xchg
xchg
or
jnp
nop
lea
in
les
js
push
int
pop
fisubrl
cmp
cmpsb
lret
add
test
insl
lods
rcrl
imul
iret
jge
iret
scas
daa
cwtl
xor
adc
sbb
incl
scas
addl
test
scas
lods
mov
mov
mov
push
pop
cld
mov
mov
push
mov
mov
and
lea
lahf
xchg
movb
dec
fidivrl
adc
inc
jp,pn
mov
outsb
jbe
movsl
fidivs
mov
cmpsl
fucomp
clc
pusha
jb
sarl
jecxz
popf
sbb
inc
xchg
xchg
dec
push
xor
ds
into
mov
add
pop
add
pop
cmp
gs
out
inc
mov
xor
mov
cmp
pushf
inc
or
ret
fisubrs
test
or
stos
mov
sub
jnp
hlt
sub
stos
jnp
aam
fimull
and
mov
arpl
xor
xchg
jno
inc
sub
sub
repnz
and
pop
cmpb
lods
and
mov
mov
push
clc
or
dec
rorb
arpl
insb
rcrl
cmovae
and
lret
imul
daa
rcl
sbb
mov
orl
xor
aaa
stos
mov
sbb
mov
sub
jecxz
lods
xchg
adc
js
int3
mov
iret
stos
out
mov
movsb
xchg
inc
jmp
mov
cmp
mov
mov
outsl
mov
aaa
xchg
cld
loopne
or
mov
adc
outsl
mov
sbb
stos
outsb
mov
and
in
xchg
push
pop
push
xor
call
xchg
icebp
lret
orl
pop
and
movsb
dec
mov
mov
dec
fsubrl
xchg
fsubl
gs
and
lahf
sub
inc
pop
mov
out
test
xchg
adc
push
cmp
lret
mov
inc
sbb
movsb
xchg
ret
ss
scas
xchg
data16
int3
xor
loopne
loopne
sub
sbb
pop
xchg
fdivp
or
add
pop
sub
rcrb
testl
sub
xchg
test
dec
inc
xchg
pop
es
iret
movsb
repnz
fidivl
xchg
and
movsb
hlt
lock
in
or
adc
mov
outsb
inc
jg
adc
sbb
and
jne
test
push
orb
adc
out
pop
stos
xorb
repnz
adc
cwtl
mov
sub
lea
jecxz
insb
sbb
loop
out
dec
or
xor
pop
decl
pop
jns
sbb
sbb
add
clc
iret
mov
push
dec
jmp
jge
movsl
xchg
xor
fstl
stos
mov
popa
and
adc
fisubrl
imul
ds
sbb
cmp
test
ret
jmp
enter
inc
and
scas
mov
push
and
mov
pop
inc
push
sub
insb
push
cmp
fdivr
and
call
adc
pop
dec
mov
popa
adc
iret
add
mov
pop
test
lcall
push
xor
inc
jl
mov
mov
sub
xor
jns
jmp
adc
mov
push
sbb
popa
mov
roll
lret
jnp
mov
xchg
movsb
cmp
lret
or
out
mov
jnp
repz
mov
mov
aad
adcb
cmp
sbb
cmpsb
aas
jb
lock
pop
cli
iret
adc
insl
push
jno
call
sub
inc
in
mov
rcrl
fcoms
jne
inc
push
in
mov
loop
jg
cs
adc
cld
jno
rcll
ret
dec
pop
push
cmpsl
xchg
testb
ficoms
popf
push
mov
mov
addb
dec
mov
or
mov
aaa
cmp
andb
pop
sbb
ret
xchg
shr
frstor
sbb
aad
loopne
and
pushf
lods
stos
xor
ds
mov
lods
scas
imul
mov
and
cli
divb
loope
xorb
sbb
rolb
sahf
lods
daa
push
inc
and
sub
outsb
dec
outsb
sub
das
fucom
and
sbbb
sbb
aad
sahf
xor
adc
pop
repz
inc
cmc
push
addr16
jbe
out
push
push
pop
xor
xchg
sub
sbb
lods
inc
xor
das
fnstcw
dec
ret
cli
cmpsl
cmc
psrlq
cmpsl
andl
sar
cmc
pop
mov
arpl
jo
mov
add
cltd
jo
cmpsl
xchg
hlt
sbb
std
jno
cli
std
fsubs
ds
adc
mov
repnz
cli
sbb
xchg
adc
mov
lahf
cli
sti
pop
xor
dec
movsb
fdivs
mov
ja
daa
in
dec
inc
jno
ljmp
add
xchg
out
fcmovu
aam
in
and
xor
sbb
jae
fcmovu
pop
ljmp
pop
lret
mov
xor
repnz
jbe
xlat
lods
cmpsl
mov
xor
xor
cmp
xor
adc
push
mov
jb
adc
rcrb
cld
fdivl
xor
movsb
and
mov
fs
mov
push
popa
pop
xchg
loope
clc
or
lea
push
lret
fneni(8087
repnz
les
pop
push
xchg
mov
inc
and
dec
jle
cwtl
inc
pop
mov
mov
stc
xchg
ret
cld
cmpsl
sti
loop
jbe
sbbl
push
mov
and
add
rclb
dec
sub
fistps
xchg
nop
sub
dec
cs
test
adc
lret
sahf
dec
sub
push
mov
sub
gs
ficoms
mov
pushf
sbb
push
and
fimull
adc
divb
push
mov
and
lret
mov
gs
add
mov
movsb
dec
push
adc
xlat
mov
loope
je
inc
out
adc
shlb
pop
jae
or
jmp
mov
pop
cwtl
test
lcall
xchg
pop
jmp
jno
sbb
sti
xor
outsb
jmp
add
je
in
push
rolb
mov
xlat
in
popa
sub
mov
inc
xchg
mov
xchg
push
sub
dec
loope
hlt
into
push
push
movsb
rcl
cmc
enter
popf
or
xchg
shrb
xchg
test
dec
addr16
notl
lods
xchg
sub
push
sbbl
leave
xchg
xor
mov
pop
push
call
cs
sbb
shr
and
shlb
dec
es
or
loopne
stos
int3
or
mov
ret
pop
and
pop
andl
fsubrl
push
mov
je
loopne
lahf
or
loope
mov
shll
and
int3
push
pop
out
dec
icebp
sub
in
jmp
sbb
add
xor
xor
xchg
mov
cmp
cmpsb
inc
outsb
jns
mov
iret
xchg
cmpl
inc
stos
nop
jge
add
mov
xor
mov
lods
lret
test
pop
mov
or
movsl
or
adc
sub
mov
xor
fsubrs
xchg
cltd
insb
lods
dec
test
jecxz
aad
orl
jae
mov
sbb
push
mov
stos
roll
add
loope
fwait
pop
pop
std
jo
sub
int3
fdivs
add
mov
jge
mov
pop
insb
popf
mov
std
xchg
arpl
cltd
mov
push
inc
sub
jno
inc
add
xor
fldt
mov
and
fsubl
test
or
aas
cmp
lret
loopne
push
inc
fxam
repnz
fildl
jge
push
ret
cwtl
or
mov
xor
pop
cwtl
in
push
enter
push
or
ffreep
cmc
mov
or
adc
aaa
aaa
pop
xchg
mov
outsl
mov
jmp
popa
cmp
je
lahf
bnd
call
loope
aad
add
cmp
pop
insl
xchg
dec
push
cmp
sub
push
nop
lods
adc
mov
in
xchg
out
outsb
xchg
in
cwtl
sbb
sub
cmpsl
pop
int3
push
fcomi
pop
ret
mov
inc
ljmp
sbb
xchg
pop
fnstcw
fistpll
hlt
scas
sbb
sbb
push
jp
cwtl
sub
sahf
add
mov
test
movsb
cld
sbb
das
dec
out
push
jae
mov
sahf
jecxz
pop
lret
cltd
mov
loop
sub
aad
fldl
sub
mov
lea
mov
lds
dec
dec
sar
lock
jecxz
mov
mov
mov
push
dec
ficoms
aaa
stos
lock
pop
xchg
and
fwait
insb
push
call
fistpl
ss
pop
jne
xchg
jns
popa
scas
clc
andl
rolb
in
test
in
push
test
push
in
xchg
push
test
das
pop
dec
sti
mov
xchg
test
pop
paddw
pop
fwait
cmpsl
repnz
mov
xchg
jle
and
pop
add
lahf
sahf
repnz
adc
mov
jl
rclb
mov
fcompl
lahf
xchg
jmp
aad
xor
ss
in
mov
mov
add
jb
imul
sarb
stos
mov
ljmp
cmp
pop
sti
lds
dec
or
pop
into
and
ljmp
addr16
sub
dec
mov
pop
loope
pop
push
lret
pop
dec
gs
fisttpll
dec
push
pusha
xor
lods
mov
stos
in
xor
or
sbb
jmp
mov
sbb
cltd
pop
addl
sbb
mov
shr
dec
inc
sub
aad
das
inc
sbb
test
repnz
inc
push
int
inc
lret
pushf
push
in
incb
sub
lret
or
sbbb
mov
imul
lock
sub
call
in
sub
mov
pop
inc
sbb
sub
sub
push
inc
xor
push
test
xchg
add
adc
fmull
add
push
cmp
sbb
pop
jno
out
inc
dec
mov
push
mov
bound
ss
push
jg
ds
enter
sarb
push
inc
jmp
rolb
mov
ret
movsb
pop
loop
popf
push
out
stos
lea
add
call
mov
pop
add
inc
jb
jae
sub
xchg
aad
test
shlb
or
push
cmp
sbb
ret
mov
test
and
test
and
jo
pushf
lds
cmp
rorb
rorb
and
sub
jnp
xchg
out
push
add
adc
xchg
adc
jae
xor
ss
xor
jecxz
add
leave
push
jg
pop
pop
dec
iret
bound
faddl
lock
mov
adcb
pop
stc
and
aam
notb
inc
leave
jne
shrb
xchg
pop
das
test
push
pop
shll
outsb
mov
mov
lret
pfpnacc
mov
push
cwtl
xchg
out
imul
ret
xor
imul
test
pop
imul
test
add
push
pop
std
add
popf
jecxz
jno
mov
out
push
mov
gs
jns
loop
std
cmp
lahf
and
lret
in
or
inc
or
mov
idivb
je
dec
xor
xor
cmc
sbb
cltd
cld
cmpsb
test
cld
pop
imul
xorb
jb
mov
mov
insb
fstpl
sub
adc
shl
scas
stc
lret
dec
in
mov
sbb
cmp
mov
fdivs
and
mov
ja
mov
push
stc
loope
ret
movsb
dec
pop
xorb
pop
call
pop
sarb
push
or
cmp
xor
inc
inc
dec
add
pop
push
outsl
push
js
fwait
dec
stos
xchg
stos
push
icebp
cmpsl
faddp
sbb
push
lret
pop
call
lahf
les
adc
xlat
inc
push
test
add
cmpsl
jno
lret
pusha
inc
ds
iret
jg
sbb
ror
aad
jo
popa
aas
out
sbb
inc
out
mov
jge
sbb
scas
movsb
pushf
push
in
mov
xchg
jge
mov
fldt
fwait
ja
mov
sub
sub
nop
pop
pop
sbb
arpl
test
push
addl
and
add
dec
cmp
les
adc
cmp
xlat
mov
out
sub
in
sbb
jle
subb
fsubrl
cld
jl
imul
repnz
inc
push
aas
imul
cmc
jl
xor
shrb
mov
nop
cmpsl
lods
insb
idiv
aas
test
mov
aad
ss
fldcw
data16
adc
arpl
pop
xor
lods
andb
cmp
adc
outsb
xor
ror
and
and
cmp
push
imulb
cs
adc
imul
icebp
aam
push
out
dec
shrl
mov
or
adc
jp
movb
mov
jecxz
xchg
lods
dec
dec
loop
mov
sub
sti
xor
and
push
mov
out
cmpsl
inc
lahf
int
clc
ss
and
jle
or
xor
and
inc
or
pusha
mov
cltd
hlt
cmp
cmp
inc
push
sub
cmp
mov
test
mov
sbb
jge
dec
dec
dec
xchg
sbb
mov
daa
and
mov
push
dec
or
mov
dec
mov
stc
aam
rorl
mov
arpl
jmp
lea
rorb
mov
pop
sub
jg
jb
aaa
cmpsl
cld
xor
daa
xor
sahf
rcll
push
xor
in
cmpsb
scas
dec
not
sahf
push
xchg
dec
or
dec
clc
or
fwait
mov
aas
xchg
fldcw
pop
fistl
pop
repz
loopne
std
sub
insl
add
rorb
adc
sub
pushf
jmp
sbb
mov
cmpsl
js
mov
aaa
testb
inc
cmp
mov
sub
jae
and
mov
call
add
roll
inc
or
shl
dec
lret
cmc
hlt
sub
xorb
pop
outsb
and
mov
inc
js
inc
inc
push
push
popa
shl
sar
sub
lods
aam
mov
rcrb
jb
cmp
cmp
popa
repz
popa
dec
test
hlt
sbb
push
aad
mov
sub
pop
xor
fisttps
int
out
lock
jae
jns
or
in
xchg
mov
repnz
push
push
push
lret
stc
and
cmp
add
pop
mov
das
and
mov
add
sub
sub
scas
or
lret
cli
jae
sbb
nop
push
nop
and
mov
lret
repz
and
cli
add
repz
popa
sahf
adc
adc
arpl
mov
addl
cmp
in
imul
lock
cmp
fisttps
jg
popf
pop
pushf
xor
push
sbb
call
mov
cli
shl
daa
and
inc
stos
mov
jmp
testb
xor
mov
xchg
sarb
or
mov
jno
push
in
hlt
cmp
cs
je
out
outsb
cmpsb
xor
adc
push
and
add
fsubrs
or
fbstp
daa
mov
pop
sbb
jecxz
in
push
sarb
iret
jl
push
mov
jl
add
int
push
daa
lret
lcall
add
lret
sbb
jno
xor
repnz
loope
xor
inc
cmp
mov
push
pop
outsl
fimuls
inc
inc
jno
add
test
sbb
jmp
into
push
test
pusha
and
jmp
iret
cmp
jnp
cmp
pop
mov
mov
adc
or
add
jl
in
ljmp
addb
push
popa
daa
xchg
mov
cmp
nop
mov
cmp
lcall
dec
cmpsb
in
dec
add
addb
pop
in
mov
ljmp
mov
pushf
push
outsb
jmp
aad
or
push
and
cltd
xchg
xor
jle
push
pop
orb
jmp
mov
ljmp
minss
mov
or
mov
mov
mov
ss
ror
push
dec
mov
subl
jl
sub
repz
rcl
xor
lock
mov
mov
and
adc
daa
int3
aas
cmp
add
lcall
out
fcmovnu
or
sub
cwtl
xlat
not
mov
addb
and
insl
adc
pusha
repz
outsb
inc
lcall
addr16
shl
stos
test
daa
loop
pop
sti
std
cmp
daa
jp
ret
mov
jp
aam
ljmp
pop
or
js
rorl
jae
pop
andl
clc
into
xchg
adc
std
shll
cmc
popa
in
inc
scas
xor
sbb
cs
and
dec
dec
outsl
pusha
inc
fstps
js
inc
push
js
xchg
jo
sbb
and
cmp
or
mov
push
mov
sub
dec
les
sub
stos
test
jns
idivl
imul
shll
lods
xchg
jnp
cmp
cmp
pusha
mov
aam
jb
and
ret
pop
fsub
daa
pmullw
mov
sub
dec
es
jge
push
xor
movsl
aam
pop
pushf
inc
or
jae
cwtl
sbbl
push
subb
addr16
push
shll
aam
mov
dec
lods
mov
es
insl
dec
shl
int3
movsb
mov
pop
lds
lret
fnstcw
inc
and
icebp
into
sub
sbb
dec
lds
mov
and
sarl
dec
mov
adc
mov
and
in
jns
sbb
mov
xchg
mov
mov
push
bound
sub
or
cli
adc
fisubs
or
push
popf
jmp
scas
lea
or
mov
shll
add
dec
sub
ja
ret
push
add
lret
aas
adc
xor
frstor
mov
and
out
dec
ror
stos
sarb
or
pop
cmp
arpl
mov
push
fistpll
call
rolb
adc
pusha
pop
push
out
xor
aam
mov
cmp
shr
dec
sub
mov
fsts
jae
pop
sbb
cmp
ficompl
adc
cmp
inc
int3
cmp
inc
rorb
shll
lea
mov
or
scas
dec
enter
dec
mov
jg
xchg
pop
sub
jle
push
jo
outsl
inc
jp
inc
push
mov
jnp
xchg
xchg
nop
push
shl
mov
sub
lahf
out
pop
test
movsl
and
xchg
jl
push
push
loope
dec
stos
daa
test
cmp
pop
mov
leave
pop
xchg
imul
je
mov
mov
jecxz
lahf
mov
in
inc
int3
out
ss
jl
xchg
fidivrl
clc
popl
mov
mov
sahf
dec
push
or
outsl
sbb
push
ds
mov
cmp
popf
mov
xchg
repnz
mov
mov
add
pushf
cmp
xchg
pop
push
and
jmp
mov
repnz
inc
xchg
dec
daa
xchg
imul
cld
addr16
push
pushf
adc
or
shll
sti
add
jns
in
pop
lret
icebp
dec
mov
jne
xor
gs
jl
imul
mov
add
inc
mov
push
out
in
stc
jle
int3
jno
sub
mov
nop
lahf
std
add
loopw
stc
sbb
jno
mov
ret
movsb
mov
pop
jno
mov
mov
dec
fs
in
cmp
lcall
cltd
pmulhw
pusha
andl
dec
and
adc
xchg
outsl
fsubp
jg
mov
ljmp
loopne
xchg
push
jno
fs
pushl
lcall
jp
mov
and
jne
xchg
sbb
mov
cmp
sti
mov
js
popa
dec
inc
imul
jmp
mov
jecxz
inc
inc
mov
idivb
mov
test
popf
cwtl
dec
xchg
aaa
cld
fidivrs
mov
jg
jnp
xchg
and
hlt
mov
adc
pop
sti
mov
shlb
hlt
andl
orb
int
add
jae
push
inc
jge
mov
pop
movsl
sbb
sbb
sbb
xchg
orl
lahf
into
shrb
addr16
mov
aam
ret
cmc
and
aas
data16
inc
dec
xchg
or
aaa
pop
dec
mov
pop
inc
arpl
enter
fldt
hlt
dec
jb
xor
pop
ds
pop
iret
push
jp
cmpsl
sahf
mov
jp
jno
mov
or
add
movsb
and
push
daa
icebp
push
pushf
aad
pop
mov
shrb
lods
and
dec
xor
out
adc
jmp
sahf
fwait
shll
imul
dec
add
inc
pop
popa
jnp
test
movsb
rolb
not
repz
cs
xor
test
negl
scas
sbb
jo
js
or
in
fnstsw
loope
jae
loope
enter
adc
data16
jp
xchg
lahf
divb
inc
mov
add
mov
cwtl
shll
jbe
add
fisubrl
movsb
subl
jnp
add
popf
mov
ljmp
lcall
jg
xchg
xor
shrl
jmp
jb
push
or
ljmp
sub
dec
repnz
dec
push
add
sbb
jle
outsb
xor
in
ret
jecxz
int
pop
jne
add
aad
bnd
xor
mov
cmp
aad
leave
icebp
sahf
dec
dec
mov
inc
lret
add
sbb
push
pop
sahf
cs
push
jne
inc
leave
dec
jb
push
push
add
xchg
cmp
xor
mov
movsb
fdivs
rorl
xor
cmpb
xchg
mov
scas
and
out
lret
pop
cmc
add
push
loop
and
xchg
cmpl
mov
faddp
in
add
push
test
mov
std
push
lret
int3
and
add
cmc
mov
jp
push
in
add
sarb
orb
imull
out
or
mov
lods
repnz
mov
mov
inc
pop
push
push
mov
cmpsb
movsb
rcl
sub
in
cmpsb
xchg
and
aam
nop
cwtl
fdivl
iret
popa
push
lret
add
dec
cltd
test
mov
fst
push
sub
aad
mov
push
lods
dec
mov
cmp
add
xchg
imul
or
cmp
jp
js
fidivrl
jmp
mov
push
enter
push
call
subl
or
sbb
xchg
nop
or
sbb
inc
ror
out
pop
clc
jl
rcrl
ficoms
xchg
inc
mov
adc
in
xor
movsb
xor
cmp
fsts
cmpsb
sti
mov
mov
add
push
cmpsl
jl
mov
xor
inc
push
mov
mov
fwait
imul
inc
in
out
sahf
add
leave
movsl
lods
test
in
xchg
aaa
add
test
loopne
sahf
mov
stc
or
imull
inc
insl
aad
cmc
or
jmp
movl
jle
imul
ffreep
add
mov
jp
mov
dec
add
stos
cld
movsl
ficomps
pop
in
dec
outsb
insb
push
xchg
inc
mov
and
lcall
mov
jne
xchg
and
inc
movsb
nop
stos
mov
ss
mov
imul
jge
sub
insb
sbb
sub
xchg
mov
or
dec
mov
mov
shl
ds
shrb
jle
or
sbb
lods
cmp
xlat
xor
xchg
fiaddl
and
xchg
mov
icebp
mov
aaa
fiaddl
adc
fadds
call
mov
push
les
enter
lea
adc
adc
mov
mov
std
mov
test
movsl
fwait
inc
and
jnp
mov
mov
les
dec
and
inc
xchg
imul
jecxz
or
cmp
cmp
je
fdiv
je
imul
in
loop
sbb
call
clc
imul
icebp
sbb
aaa
test
lcall
or
sub
imul
insb
out
loop
sbb
jg
jge
or
xor
ret
xchg
and
je
inc
cs
lock
push
jle
mov
lret
fdivs
push
mov
js
xchg
mov
test
ret
adc
xchg
lcall
sbb
test
dec
jae
aas
sub
outsb
add
sub
and
cs
jne
pushf
imul
cmp
inc
mov
add
aam
jns
jb
ret
int
in
subb
je
adc
test
xor
cmc
jnp
subb
xchg
dec
push
hlt
lds
sbb
nop
xchg
loope
xlat
in
or
jle
pop
dec
cmpsb
es
push
xor
lret
int3
mov
jp
out
aaa
in
test
dec
sahf
daa
test
jns
adc
xor
into
jl
aad
lret
or
out
mov
arpl
fs
xchg
fadds
jmp
cmp
fldenv
out
jmp
jle
dec
mov
enter
adc
aas
push
xchg
fnstsw
ds
push
hlt
in
xor
or
jae
cmp
dec
sub
dec
mov
push
pop
pop
rorb
stos
sbb
jecxz
stos
js
jo
xor
fimull
lods
dec
add
pop
add
mov
aad
scas
push
cli
jg
mov
addr16
aas
out
aas
sahf
movsb
adc
and
xchg
cmp
xchg
adc
jmp
pop
pop
inc
rclb
adcl
mov
add
mov
loopne
filds
popl
sub
cs
inc
mov
xor
jne
es
lcall
adc
push
sbb
mov
and
cmp
dec
in
sub
dec
xchg
out
test
test
or
icebp
je
or
inc
mov
into
xor
mov
sbb
push
shrl
add
sub
sti
loop
adc
int
fnstenv
xchg
mov
fnsave
or
mov
adc
repnz
mulb
fwait
cmpsb
xchg
cmc
and
mov
in
pop
cwtl
and
xchg
incb
fldenv
sbb
scas
push
inc
repnz
adc
add
mov
es
or
pop
jle
fwait
mov
ds
stos
arpl
pop
stc
dec
in
sbb
icebp
push
movsl
mov
lcall
enter
mov
dec
mov
andl
int3
test
stc
in
test
cwtl
mov
gs
jecxz
add
mov
pop
adc
imull
test
push
inc
and
rclb
stos
push
add
aam
sbb
or
add
idivl
push
add
add
pop
push
pop
jg
ds
pop
cmp
or
ss
and
into
add
mov
das
or
repnz
push
xchg
nop
mov
insb
dec
clc
jae
inc
jbe
lds
sar
adc
cs
xchg
rorl
mov
inc
call
sbb
ds
push
stc
mov
xchg
cmc
lock
xlat
jne
push
cmp
mulb
jnp
jno
push
arpl
dec
or
in
test
cmp
jbe
fisttpll
xor
sahf
roll
movsl
cmc
inc
push
andb
and
nop
sub
popa
cmc
inc
lret
loopne
fistpll
adc
outsl
je
jmp
stos
sbb
pop
imul
shll
loope
roll
or
hlt
xchg
mov
inc
decb
pop
out
mov
js
jns
push
bound
sti
fiaddl
mov
mov
push
mov
xchg
pop
cmp
dec
xchg
ja
sbb
enter
jo
pop
xchg
push
pushf
cmp
mov
inc
fiadds
push
stc
imull
fs
dec
xchg
pop
imul
xchg
and
push
jnp
push
idivb
cltd
jno
gs
pop
test
mov
push
mov
mov
fistpll
adc
divb
mov
add
imul
data16
mov
cltd
add
movsb
xlat
mov
mov
jne
dec
iret
and
xchg
xor
js
scas
cs
add
out
mov
jne
adc
dec
sbb
cmp
sub
xchg
add
mov
push
or
adc
push
fdivs
repnz
aaa
dec
mov
out
dec
repnz
or
lea
call
lcall
repz
leave
mov
jno
cmpsl
pop
and
or
aam
jo
popf
scas
mul
adc
les
push
imul
mov
shll
pop
dec
sbb
adc
out
lahf
out
cld
pop
lret
dec
adc
jns
mov
pop
xor
jae
cmc
cmp
dec
jns
dec
in
jbe
dec
mov
ret
fwait
or
mov
xchg
xchg
cmc
xor
and
fimuls
lock
and
sub
push
cmp
in
sbb
lahf
jg
rcll
lret
mov
add
inc
cmpsb
roll
sbbl
or
xlat
push
rcrl
and
pusha
xor
add
mov
imul
mov
or
and
xor
push
sbb
lcall
and
adc
jae
adc
das
ja
outsl
push
mov
sub
rcrl
pop
jmp
test
leave
mov
ror
cli
mov
repnz
xchg
adc
shrl
mov
fstpt
sbb
inc
jmp
fsubrl
daa
jnp
les
pop
stos
mov
xor
jnp
int3
cli
lock
pushf
mov
scas
add
adc
pop
call
push
xor
jmp
push
stc
cwtl
aad
cwtl
xlat
or
int
mov
outsl
leave
cltd
out
mov
inc
lahf
xchg
mov
xchg
push
pop
dec
popf
pushf
cmp
xor
mov
insl
or
mov
jmp
and
andb
adc
cmc
lods
or
je
xchg
mov
js
push
loopne
or
mov
adc
pop
in
mulb
in
popa
push
cmc
arpl
push
daa
ss
sub
and
push
test
mov
jbe
out
loope
cmp
mov
add
mov
sub
mov
fdivrp
test
inc
pop
inc
enter
xchg
jb
cmp
sub
mov
in
cmp
rclb
out
adc
mov
xor
not
out
cmpsl
and
dec
out
je
pushf
loopne
fsts
xorb
sbb
in
mov
pop
adc
std
lcall
and
sbb
xchg
addr16
lret
inc
sub
mov
mov
add
xor
lock
in
add
push
push
xor
xchg
pop
in
and
loop
aam
xor
mov
test
xor
add
inc
pop
test
or
popa
xchg
or
imul
insl
xor
push
xlat
cltd
adc
inc
add
sbb
je
cli
mov
les
in
jp
movsb
jno
and
and
cmp
les
loope
push
dec
push
xor
mov
push
jl
ds
test
fstpl
repz
lcall
mov
sbb
inc
push
inc
imul
or
sub
mov
jns
mov
sub
icebp
dec
push
bound
jne
sbb
dec
xor
or
mov
sbb
pop
jno
push
pop
fcmovb
xchg
push
scas
add
js
dec
or
sub
inc
xor
sbb
pop
movsl
push
lret
add
mov
mov
add
int
fistpl
mov
orps
cmpl
je
or
inc
cwtl
stos
push
outsl
sbb
xchg
pop
add
jb
imul
cmp
fistps
xchg
mov
mov
jno
sbb
imul
repz
cli
insl
fs
je
jns
in
xchg
lret
test
mov
xchg
pop
hlt
jne
dec
daa
xor
rol
je
xchg
xchg
aas
mov
mov
xchg
and
shr
mov
sbbb
xor
scas
pusha
gs
and
adc
mov
mov
rcll
push
test
xor
jno
mov
int3
or
mov
dec
loop
loopne
inc
adc
insb
mov
std
pop
and
in
mov
sub
cmpsb
xorl
xchg
push
cmpsl
jp
popf
cld
or
sti
sub
fidivrs
lds
sbb
sahf
arpl
xor
pop
ja
outsl
in
cmpsb
mov
int
cmp
mov
aaa
add
xchg
sbbb
out
fcmovnu
popa
push
ss
jbe
sub
cmp
ret
mov
pop
add
jecxz
in
icebp
push
mov
pop
or
adc
insl
fwait
mov
jp
jl
in
sbb
sbb
aam
mov
xlat
or
stos
dec
xchg
test
xor
jg
mov
repnz
stos
rclb
mov
cmp
mov
cwtl
ja
fs
je
lret
dec
xor
outsb
add
mov
push
inc
sub
and
push
cmpsb
into
jle
push
mov
enter
dec
cwtl
cmpsb
adc
imul
repz
aad
or
cltd
shll
jo
inc
insl
sub
call
sub
sub
add
cmpsb
icebp
push
sub
inc
mov
sbb
cmp
sub
jmp
push
sbb
xor
out
pop
jmp
cmpsb
pop
pop
decb
mov
orb
incl
cmpl
stos
mov
scas
add
test
cmpsb
dec
pop
es
lahf
pop
push
jecxz
mov
jne
mov
push
dec
sahf
push
inc
inc
std
add
adc
aaa
push
addr16
mov
ret
jl
dec
pop
test
xor
loope
xor
cmp
in
jecxz
test
lods
idivl
adc
jns
adc
dec
mov
sbb
fcmovnu
jne
mov
mov
push
mov
ja
cmp
and
dec
cmp
faddl
jo
test
pop
fs
or
outsb
inc
rcrb
adc
rorb
out
mov
dec
jg
sbb
add
fsub
inc
dec
lods
xchg
je
int
xchg
das
gs
nop
out
aas
inc
add
es
loopne
jecxz
cmpl
ss
xchg
jge
cmp
xor
dec
ja
xchg
mov
mul
jno
rcl
loopne
jg
xorl
outsb
rcl
lahf
and
or
sbb
push
and
push
sub
scas
popf
aas
out
lcall
in
mov
outsb
filds
add
or
lods
div
out
sub
sbb
and
ficomps
fs
add
imul
push
mov
pop
adc
push
push
es
or
mov
and
adc
fisubrl
push
cmpsb
mov
pop
lret
cmp
fwait
sbb
cwtl
iret
or
push
std
add
inc
xor
pop
mov
sub
scas
daa
sub
stos
cltd
xchg
mov
push
inc
xchg
mov
adc
and
mov
adc
mov
mov
arpl
dec
pop
pop
dec
and
xchg
mov
subl
insl
xchg
sar
adc
cmp
ss
lods
mov
cmc
sub
jb
xchg
dec
popa
pusha
popf
add
mov
in
sbb
mov
shrl
xchg
and
dec
lret
xor
sarb
lock
cmp
jmp
popf
or
dec
and
imul
popa
sub
pop
push
push
cmp
push
adc
xor
test
cmp
inc
mov
mov
adcl
inc
inc
xchg
pop
aam
mov
movsb
cld
adc
adc
inc
xor
js
fwait
cmp
fs
aas
data16
notl
add
inc
int3
js
lcall
leave
fcmovu
inc
loope
movsl
inc
repnz
mov
dec
mov
out
sar
jg
jecxz
pop
or
stos
cmc
lret
je
jmp
inc
push
mov
stos
dec
mov
jb
inc
cltd
movsb
lds
pop
adcl
sbb
mov
stc
ret
mov
xor
lret
mov
lret
jmp
pop
lcall
imul
int3
pop
push
inc
xchg
or
fsub
jecxz
and
fwait
repz
sbb
addr16
adc
notl
out
jo
subl
movsl
sub
cmp
jge
jbe
fwait
push
loop
mov
lret
fisubrs
push
and
cltd
cmpsb
in
enter
push
inc
sub
jge
xchg
int
dec
addr16
push
push
adc
xor
bound
pop
jne
push
scas
fimuls
daa
jns
jnp
pushf
scas
movsb
pop
pop
jg
icebp
sete
push
repz
xchg
dec
mov
mov
out
lea
add
insl
or
mov
jge
mov
jnp
sbb
push
andl
cwtl
lods
or
push
jno
int
mov
incl
movb
rcll
lock
scas
mov
xchg
pop
mov
push
inc
fs
fdivl
add
cld
shlb
out
sbb
fnstcw
adc
mov
lods
xor
mov
and
push
aaa
pop
mov
or
jne
pop
jbe
and
add
sti
and
ret
lcall
test
cmpsb
sub
jl
jmp
iret
lods
sarb
jnp
mov
rclb
xor
jge
xchg
outsl
pop
push
pushl
lods
rcrb
mov
inc
out
mov
xchg
add
jl
or
push
xor
push
daa
cmp
mov
cwtl
punpckldq
pushf
pop
dec
mov
cmpb
pop
das
rolb
pop
add
adc
sub
lods
inc
fistl
cmp
sub
iret
test
jg
adc
xlat
inc
mov
cmp
and
mov
or
pop
sub
lret
adc
scas
mov
stos
out
dec
mov
hlt
shr
lret
or
add
add
or
call
repnz
push
or
out
fstpl
iret
jl
jecxz
mov
iret
pop
aam
roll
test
fiaddl
movsb
mov
icebp
mov
cmp
movsb
iret
and
mov
out
aaa
das
sahf
jno
inc
push
push
test
cmp
out
aaa
outsl
test
popa
mull
push
dec
mov
scas
adc
out
scas
in
imul
mov
xchg
jae
testl
rcrb
into
insl
add
loope
push
mov
faddl
ljmp
ret
jae
mov
jmp
cmp
cmpsl
das
cmp
jne
sahf
imul
fsubrl
sahf
mov
add
std
sbb
jg
mov
xchg
sar
mov
push
pop
and
addr16
jbe
leave
and
lahf
jmp
pop
iret
sbb
mov
pop
jecxz
mov
sbb
inc
xor
into
push
enter
push
mov
stos
xchg
or
rorl
inc
pop
ficoml
and
stos
jg
adc
shr
push
add
dec
fimull
sti
push
sub
aas
xchg
ja
jmp
addl
lea
mov
lds
xor
stos
leave
movsb
test
lahf
push
dec
inc
clc
mov
scas
pusha
mov
dec
sub
mov
and
iret
push
jno
idiv
orl
cmp
call
and
cmc
jae
xor
push
test
out
add
cmc
push
cs
fcmovnu
sub
inc
cmp
outsl
adc
rcrl
pushf
mov
mov
mov
adc
adc
scas
out
loopnew
jns
lods
ja
cli
jg
pop
lret
add
loope
mov
add
ss
les
arpl
add
adc
jb
loopne
sub
mov
adc
pop
xor
and
push
mov
sar
xchg
insb
lea
pop
cmp
mov
jbe
add
mov
cmpsb
pop
jle
or
sub
fiadds
xlat
lods
aaa
sub
scas
cli
pop
dec
scas
repz
enter
xchg
cmp
sbb
cmp
mov
test
mov
push
push
pop
or
lods
add
pop
jns
xor
or
cmc
out
inc
jge
xchg
jo
sub
mov
push
iret
sub
xor
and
cmp
int
pop
mov
xor
ljmp
pop
nop
jecxz
scas
out
jns
push
test
adc
sarb
push
lock
dec
push
movl
pop
je
pop
popa
clc
lahf
into
movsl
mov
dec
adc
cmp
xchg
data16
in
sbb
jmp
sub
stos
inc
insw
pop
arpl
push
pushf
addr16
add
and
int3
sub
into
je
shrl
push
and
mov
sbb
pushf
mov
mov
xchg
inc
stos
sub
fildl
dec
fcoml
cmpsl
xchg
or
jnp
jbe
mov
fsubrs
or
stos
sub
xor
pop
push
in
enter
neg
adc
mov
sarl
jmp
mov
sbb
ja
loope
and
and
aas
pop
sub
push
and
hlt
xor
int3
in
adc
clc
jno
sarl
jae
fs
fcom
pop
xchg
mov
pop
lcall
mov
std
push
adc
mov
movsl
ret
cmp
loope
test
cwtl
cmp
push
adc
pop
jge
test
mov
dec
sub
mov
sbb
arpl
ss
mov
andb
cs
lahf
mov
popa
push
adcl
xor
fisubrs
pop
jge
loope
adcl
lret
push
mov
pushf
mov
push
popa
insb
jg
bound
adc
bnd
pop
test
mov
rcll
jmp
or
movsb
jg
mov
je
jo
in
or
cli
ss
shll
aam
xchg
adc
call
loopne
mov
sub
adc
push
sbb
sbb
scas
adc
xor
hlt
and
clc
stc
stos
cwtl
adc
xchg
push
push
xor
and
and
outsl
mov
adc
jecxz
daa
nop
hlt
mov
cmp
jmp
aad
jns
pushf
push
sub
dec
xchg
or
xchg
sbb
sbb
push
sahf
and
inc
aas
pop
cli
les
test
adc
jl
inc
pop
bound
and
sarb
push
cmc
push
add
push
das
fs
test
jnp
xchg
pushfw
lods
pop
idivb
sub
shl
mov
xlat
imul
test
ret
pop
aaa
sbb
das
cmpsb
fwait
sub
mov
fs
aam
les
xor
aam
sti
xor
icebp
cli
sub
pop
jo
jmp
ret
ss
xchg
mov
enter
sbb
arpl
leave
scas
aaa
clc
ja
repz
and
push
inc
and
add
inc
stos
repz
push
add
cmpsb
xor
aad
cwtl
or
jmp
daa
cld
pushl
repnz
sar
rorl
arpl
fidivs
add
dec
xor
fwait
ret
aam
xchg
insl
mov
jb
das
and
push
add
lret
push
jl
pop
shl
mov
xchg
xchg
and
xor
ljmp
xchg
xor
mov
mov
ljmp
cmc
ds
shlb
and
leave
repz
and
pop
inc
pusha
ret
dec
scas
adc
fs
cmp
sbbl
gs
leave
xlat
mov
xchg
popa
mov
inc
rolb
sub
adc
mov
pop
aaa
push
cltd
mov
pushf
mov
add
jno
xchg
pop
divb
int3
cmc
pop
fadds
fbld
outsb
mov
lret
std
dec
mov
sbb
xor
aas
fdivs
inc
test
cmp
cld
pop
out
jge
cld
inc
cmp
loope
ret
xor
push
shrb
sarb
ds
sbb
repnz
fs
fstl
push
push
insb
test
int
push
dec
adc
dec
adc
dec
mov
pop
mov
sub
int3
fwait
and
adc
adc
or
cmp
jne
imul
aad
sbb
call
dec
jne
hlt
mov
pop
incb
std
in
sub
out
stos
push
mov
cmp
or
je
lods
repnz
movsb
push
xor
pop
mov
je
dec
adc
push
adc
or
jae
adc
and
sbb
mov
fildll
arpl
adcb
cmpsl
in
scas
lret
add
pushf
movsb
imul
imul
addr16
mov
popa
fucomi
out
icebp
jo
aaa
cmp
push
ljmp
jge
push
popf
jl
pusha
out
mov
jecxz
lea
stos
sbbl
test
bound
push
pop
jae
scas
adc
pop
clc
insb
cmp
hlt
in
sub
ret
ficomps
lcall
dec
cwtl
shll
push
pushf
adc
and
out
add
je
or
adc
jg
push
aam
lret
rorb
sbb
int
test
or
into
es
fnstsw
sti
cld
lods
pop
jecxz
add
pushf
sub
push
nop
loopne
les
in
bound
pop
jnp
and
push
jmp
inc
jmp
jmp
mov
push
fwait
js
inc
push
adc
jmp
jo
flds
aam
scas
movsl
push
jl
fbstp
js
jbe
clc
jp
ret
fisubs
sbb
dec
mov
adcb
mov
insl
loop
stos
cmpsl
mov
cmc
cmpsb
mov
add
mov
inc
aad
pop
add
or
inc
in
int3
xchg
jb
and
scas
pusha
jae
hlt
xorb
mov
aaa
push
inc
ret
insl
cmp
mov
mov
lar
sbb
dec
push
jnp
mov
add
inc
and
jmp
jno
xor
popf
adc
xor
or
mov
lds
sub
scas
sub
mov
pop
scas
add
push
stos
test
inc
adc
inc
fstl
mov
stos
nop
cmpsl
pop
lods
aad
out
in
xor
mov
fcmovnu
or
jbe
andl
pop
lods
popa
xor
nop
push
fsubl
icebp
divb
sbb
div
sub
sahf
fchs
push
fcmovnu
dec
int3
and
inc
or
rcrb
push
inc
jmp
and
lock
std
mov
test
xor
inc
and
or
xor
into
movsl
xor
je
xchg
jg
fisubrl
adc
mov
jbe
dec
stc
cmp
or
out
mov
pop
sub
test
cwtl
shll
xor
push
xchg
out
ljmp
ret
dec
das
pop
test
push
sub
xor
cwtl
mov
mov
or
jl
xor
xchg
lret
out
movsl
mov
jp
jb
jecxz
int3
mov
stos
stc
das
and
cs
push
ret
les
push
mov
andl
adcb
lcall
enter
xor
clc
dec
leave
sbb
lahf
xor
sub
out
cmpl
sbb
pop
push
push
sarl
sar
push
xor
inc
push
adc
sub
fnstsw
push
aas
inc
idiv
adc
repz
test
jecxz
in
add
push
sahf
cmpsl
std
mov
fdivs
imull
pop
and
shrl
ss
jo
pop
xor
and
nop
jg
mov
test
sbb
adc
sub
pop
dec
outsl
test
adc
xor
out
out
sahf
lret
mov
push
add
cmp
push
rep
pop
add
inc
sub
mov
test
dec
imul
in
dec
les
push
out
cld
and
aaa
dec
out
xor
sub
cmc
dec
mov
xor
sbb
lcall
xchg
jl
stos
std
lock
xchg
vphadduwd
idiv
dec
icebp
add
aad
in
or
clc
cmpsl
repnz
ds
pop
pop
imul
lds
sub
pusha
mov
fisubrs
jo
enter
cltd
push
xor
and
mov
pop
data16
cwtl
and
mov
jno
jl
xor
dec
lds
sbb
bound
cs
ds
dec
iret
shl
sbb
dec
adc
xor
pop
test
sarb
mov
xor
pop
mov
outsl
aas
add
or
or
mov
xchg
mov
cmp
pop
mov
inc
jmp
and
pop
mov
and
push
jge
cli
daa
pminsw
lret
or
je
adc
notb
pop
in
or
mov
xchg
lcall
jl
dec
mov
pushf
push
inc
sbb
mov
xor
clc
cwtl
pushf
pushf
in
mov
mov
pushf
aam
roll
out
filds
les
push
inc
push
sbb
lds
icebp
mov
push
stc
lret
repz
sbb
pop
sub
ret
jge
outsl
aas
fucomip
cmp
andl
loopne
add
fdivr
xchg
lcall
mov
bound
sub
xor
aad
popf
rcr
repz
pop
adc
cmp
mov
mov
test
cmp
outsb
pop
aad
popa
xchg
repz
mov
pop
jno
test
sti
mov
into
int3
dec
or
mov
jecxz
dec
insb
int3
dec
jns
outsb
mov
icebp
jns
ret
repnz
rcrl
push
sbb
gs
cs
push
jns
stos
ja
jle
mov
dec
mov
out
dec
inc
pop
lret
ret
pop
push
jb
lds
lahf
inc
outsb
mov
gs
cs
sbb
lds
dec
jecxz
push
outsl
data16
mul
je
xor
aad
cli
sub
lock
mov
cmpsw
int3
inc
cmp
rcll
pop
sbb
js
js
sub
hlt
iret
pop
outsb
test
dec
mov
jle
sbb
sbb
add
inc
ss
or
mov
call
stc
out
out
pop
and
jnp
fwait
movsl
in
pop
paddd
sbb
lods
add
xor
mov
or
or
addl
pop
lock
fdivs
jg
cltd
push
fwait
jnp
lods
in
in
loop
iret
add
insb
mov
or
gs
rorb
ret
mov
xor
add
outsl
inc
popf
cli
mov
mov
jmp
iret
cmp
iret
test
cmp
rorl
xchg
xchg
fs
add
dec
pop
movsb
xlat
adc
mov
lcall
pop
imulb
sbb
mov
sub
mov
jnp
les
test
add
hlt
sahf
push
cli
and
popa
inc
cmc
dec
in
call
cmp
jbe
mov
arpl
mov
pop
scas
fistpl
int3
ret
lahf
push
inc
shlb
push
mov
pop
ja
mov
pop
mov
in
outsl
or
adc
loope
push
mov
dec
jae
int
std
dec
fcoms
clc
or
call
xor
cwtl
fcmovne
stos
shll
xor
aam
pusha
mov
jne
and
cmpsb
push
xchg
sti
js
fs
stos
aad
inc
and
hlt
sub
rcl
lea
outsl
ss
dec
sbb
bound
enter
mov
dec
adcb
into
push
pop
ja
test
lret
aad
popf
stc
mov
fdivl
in
and
jnp
in
and
pop
pop
ficompl
call
repz
add
xchg
mov
fs
cmpsl
inc
leave
sar
insb
das
lret
xlat
pop
xchg
into
shr
andl
pop
add
imul
stos
lds
jns
xchg
jmp
pop
adc
dec
or
and
cwtl
jl
movb
jbe
shl
push
int
out
cmp
jp
ljmp
sub
xor
dec
cmpsb
add
gs
cwtl
clc
pop
mov
inc
lds
inc
nop
scas
rolb
and
mov
cmpsb
or
scas
xchg
fistps
push
add
mov
xor
xchg
fldt
stos
gs
push
jno
bound
or
push
inc
inc
xor
mov
pushf
imul
and
shl
and
add
jne
test
pop
mov
sbb
std
jmp
xor
pusha
jnp
jbe
test
mov
push
add
mov
daa
inc
mov
or
out
xchg
repz
jns
fadd
and
xor
jns
stc
jbe
mov
jmp
push
sbb
fbstp
iret
sbb
movsl
mov
pop
push
sarb
fsubs
pop
push
and
mov
mov
adc
jl
fwait
repnz
dec
das
rcr
inc
data16
movb
fdivs
lcall
pop
inc
mov
loopne
rcrb
push
loopne
push
dec
into
lds
mov
mov
adc
adc
popa
in
bound
lds
and
cmc
outsb
mov
pusha
sub
mov
mov
jmp
shll
lret
push
mov
insb
in
jg
xor
fcmovnbe
in
mov
cmp
add
mov
push
or
lahf
bound
cmp
pop
mov
xor
mov
jnp
or
mov
icebp
sub
cmp
fmulp
xchg
dec
hlt
fs
loop
daa
xchg
xor
sub
out
shll
jmp
jbe
dec
sbb
sbb
jecxz
inc
cs
cwtl
cmpsl
loope
jle
pop
pop
rclb
mov
in
call
xlat
pop
fisubrl
lods
test
sahf
mov
cmpsb
popl
bound
push
jae
and
stos
sub
push
push
shr
mov
mov
movsb
jl
sti
orl
cmp
push
mov
and
mov
xor
pop
and
shlb
xor
inc
shlb
mov
sub
aaa
cmovne
enter
push
mov
cwtl
notl
and
dec
and
jge
pushf
xchg
push
enter
sub
shr
lcall
pop
or
lret
repnz
lret
jno
sbb
out
aam
sub
and
daa
adc
insb
in
leave
insl
imul
out
mov
dec
insb
xor
loop
jne
in
int3
in
cltd
mov
push
loop
popl
push
xor
movsl
and
pushf
mov
ficoms
into
cwtl
scas
jae
into
jmp
out
push
shrl
adc
jg
aas
mov
enter
xchg
stos
dec
out
push
push
jl
popf
push
loopne
adc
xor
daa
mov
ficoms
add
and
mov
or
fsubrs
sbbl
pushf
jnp
xchg
fs
dec
mov
test
ds
mov
mov
mov
icebp
xchg
icebp
mov
add
and
inc
xchg
and
testb
dec
or
rclb
in
mov
mulb
cmp
daa
inc
jnp
pop
pop
jbe
push
fistpl
test
inc
adc
dec
or
fldt
testb
mov
lds
nop
rclb
xor
mov
jne
int3
mov
xor
cmp
cmpsl
lret
bound
js
aam
rcrb
mov
push
jge
mov
xchg
ja
and
jo
adc
dec
test
push
jae
pop
sbb
cmpsb
cli
jp
fsub
xorl
out
sarb
cmpsb
adc
pushl
cmp
cld
outsl
push
pop
push
mov
cmp
out
clc
aad
or
jbe
outsl
jmp
rclb
push
enter
sub
add
jnp
sub
inc
mov
sbb
or
and
mov
cmp
aam
daa
jecxz
outsb
int
imull
clc
mov
hlt
mov
add
ret
or
or
sbb
dec
rcrl
movsl
jecxz
cmc
mov
xor
popa
pop
jl
enter
fwait
aam
test
clc
pop
dec
xor
sub
jo
add
mov
dec
cvtpi2ps
push
pop
adc
mov
xchg
leave
aas
pop
mov
int3
push
and
jb
and
pop
imull
mov
xchg
stc
ss
mov
mov
push
sub
xchg
add
cmp
jns
push
stos
data16
fidivrs
icebp
jle
cltd
dec
hlt
cmp
test
es
in
pop
jle
lea
inc
mov
rcrb
adcl
dec
insb
leave
inc
push
sub
inc
cld
sysret
icebp
iret
lahf
cld
xor
sahf
pop
pop
xor
lea
inc
or
mov
adc
pop
movsl
test
rcrl
das
xchg
xchg
dec
and
int
mul
lods
mov
pop
pop
inc
das
xchg
ljmp
sbb
cmpl
dec
mov
jge
pop
mov
sbb
lahf
sbb
xchg
std
js
fdivrp
xchg
test
iret
les
sub
adc
jb
clc
imul
addr16
jle
sub
inc
lret
lock
or
adc
stos
es
jno
inc
and
sub
jp
shrb
adc
sbb
cld
jle
push
sub
aas
jne
inc
ljmp
int3
push
mov
fmull
in
adc
cmpsb
or
push
xchg
rcr
add
lret
pushf
push
jno
dec
sub
push
sub
jp
sbb
or
mov
xchg
mov
adc
sar
pop
and
cmp
sbb
nop
fnstcw
sbb
pusha
std
xor
loope
add
imul
xchg
daa
sub
rcll
jle
lret
cmp
pushf
aad
adc
xchg
lcall
test
gs
xchg
das
stos
dec
shl
push
dec
pop
ret
cmpsl
adc
sbb
out
incb
insb
cltd
mov
in
or
and
jbe
jle
or
nop
mov
in
imul
es
in
cmp
mov
outsl
add
push
fdivrs
adc
jnp
jne,pt
inc
add
pop
lcallw
test
scas
adc
xlat
bound
lods
pop
rcll
outsl
fs
iret
sub
adc
sub
loope
xor
add
or
into
cwtl
inc
incl
mov
pop
jle
jl
dec
addr16
in
mov
mov
jle
or
test
divb
ret
or
test
insl
movzwl
in
movsb
jle
lds
jne
jbe
pop
push
repz
push
addb
pusha
push
dec
lods
xor
dec
and
addr16
and
adc
ss
push
jg
sub
xor
repnz
jl
push
dec
cltd
cmp
cli
addl
rorl
cmp
cmp
and
or
cli
and
int3
insl
pop
je
insl
jno
fwait
cld
add
test
cmp
jae
or
jno
add
sbb
andl
imul
ret
insl
cmp
sbb
scas
mov
pop
inc
repz
std
insl
mov
xchg
ljmp
add
mov
mov
punpckhwd
xor
scas
je
sbb
rorl
rorb
pop
xchg
pop
clc
sub
pusha
push
in
fisttpl
add
add
and
lock
xlat
xor
xchg
jp
mov
cmp
mov
mov
cmp
mov
and
aam
movsb
lret
js
pusha
fcoms
adc
sub
jne
adcb
or
pop
addr16
mov
add
inc
sbb
push
jge
adc
pop
in
leave
jbe
jg
lret
xor
cmp
popa
xor
mov
jge
inc
lcall
xor
jp
xchg
mov
add
jge
fcmovu
jmp
cmp
and
xchg
lock
add
push
fisttpl
loop
pop
shll
mov
add
mov
fs
fcmovnbe
pop
mov
aad
adc
cmpsl
adc
mov
fcomps
sub
and
mov
or
adc
movsb
lods
pop
insl
dec
push
pop
jp
lods
loopne
lcall
add
or
sti
sbb
imul
lcall
add
aad
aaa
cmpsb
lods
mov
incl
adc
inc
pushf
fisubs
out
mov
mov
js,pt
repz
test
out
shll
pop
outsl
mov
mov
xchg
sbb
pop
jo
push
xor
loop
cwtl
int3
pop
fdivr
addl
xchg
mov
mov
jecxz
jae
xchg
push
pop
fimuls
push
xchg
adc
xchg
in
sti
xchg
popl
enter
inc
dec
mov
xchg
jae
jbe
cmp
cmp
gs
add
adc
test
inc
jb
push
jnp
pushf
and
sub
push
jge
mov
movsb
dec
clc
cmp
or
lret
cmpb
rorl
mov
sti
xchg
movsl
jle
jbe
daa
loope
mov
sti
mov
dec
cmp
cmp
and
pop
xor
add
testl
and
mov
lock
pushf
adc
or
mov
xchg
inc
hlt
lock
fs
mov
pop
mov
inc
jp
xor
jmp
ja
call
push
enter
je
sub
popf
xchg
fimuls
sub
aad
mov
cmp
lret
mov
add
imul
xchg
jno
jle
push
xchg
dec
mov
nop
add
dec
ret
cmc
in
popf
dec
and
jnp
xchg
mov
cs
repnz
ja
inc
or
ret
sub
ja
inc
sub
xchg
and
inc
cmp
add
sahf
lods
add
je
or
sbb
nop
xchg
inc
es
and
lret
bound
out
scas
pop
lret
sbb
jae
xchg
xor
subl
pop
pop
leave
mov
rclb
jae
pop
bound
roll
cmp
xchg
adc
adc
xor
stos
pop
xchg
mov
dec
xor
pop
jo
fxch
push
je
lods
aas
mov
pushf
repz
int
dec
das
xchg
and
dec
push
xor
test
cmp
fwait
mov
and
xchg
xor
cli
sbb
out
or
mov
or
ret
sub
loop
ljmp
hlt
xchg
sub
cld
or
andb
cmp
push
and
jns
lret
lahf
in
pop
sahf
cwtl
mov
xchg
dec
incl
sub
jecxz
sub
push
clc
cmpsl
into
mov
inc
add
mov
in
sbbl
mov
ret
cltd
repz
mov
clc
push
pop
mov
sub
push
mov
test
xchg
pop
testl
and
jmp
data16
lods
fs
lock
loope
sbb
dec
fsubl
push
push
jmp
pop
adc
push
or
mov
xchg
in
mov
mov
pop
out
bound
paddusb
pop
je
shrb
fnstenv
inc
xor
loop
xchg
adc
mov
mov
mov
js
cwtl
xchg
filds
das
lahf
imul
push
aad
sarl
inc
lods
xor
sarb
and
jbe
sbb
xchg
loopne
in
mov
and
sbb
lods
xchg
push
add
aaa
add
mov
in
pop
mov
test
cmp
pop
mov
xor
jnp
fs
stc
xor
cld
dec
shll
ja
xchg
sbb
cwtl
pop
mov
xor
push
push
adc
xor
scas
mov
mov
cld
arpl
lcall
aam
jle
mov
or
call
push
adc
inc
xchg
mov
sub
jns
sbb
inc
ljmp
test
test
rorl
leave
add
sbb
or
and
sub
sarb
stc
xchg
add
xor
psubsw
inc
push
mov
shll
push
pop
sub
mov
fwait
xchg
cli
pop
fsub
mov
add
in
repz
mov
jbe
in
scas
adc
cltd
cmp
mov
push
mov
dec
loope
gs
xchg
pop
mov
add
cld
stc
sbb
pop
int3
imulb
xor
neg
mov
pusha
mov
push
out
fwait
ljmp
mov
pop
int3
shll
sbb
data16
and
mov
int
inc
sbb
scas
jbe,pt
rol
and
jns
and
ficompl
mov
repz
mov
xchg
mov
cmpsl
fcomp
out
subb
or
mov
lea
scas
int
in
xor
jmp
push
xchg
mov
fwait
lret
push
test
lods
lret
nop
push
cmc
lea
in
lret
dec
lahf
jo
and
push
pop
sarl
mov
stc
repz
sub
mov
addr16
xchg
adc
ret
ja
dec
mov
mov
pop
sbb
mov
bound
inc
cltd
jl
movsb
and
sbb
and
aad
in
mov
push
repnz
movsl
aam
mov
mov
add
lods
pop
sahf
cld
cmpsl
dec
mov
inc
clc
xor
sahf
and
dec
add
loopne
cld
ljmp
add
repz
lret
pop
jo
push
fnstenv
xchg
cmpsl
stos
jle
mov
xlat
xor
aam
mov
xchg
jl
and
mov
xor
std
cmp
pushl
dec
mov
int3
xchg
out
mov
xor
cmpsb
dec
xchg
rol
xchg
and
cmp
jbe
jb
out
sub
push
fwait
sub
adc
aad
fs
jge
fs
jmp
xchg
in
mov
fdivs
icebp
mov
lods
mov
xor
sbb
mov
cmp
je
jnp
mov
mov
mov
push
push
xor
mov
fwait
sti
leave
fdivr
outsl
stos
out
or
iret
pop
adc
lret
adc
nop
out
ret
xchg
scas
decb
cltd
insl
shrb
in
stos
pop
aad
andl
or
jg
nop
mov
mov
hlt
scas
pop
int
sbb
mov
faddl
inc
cwtl
pop
fldl
in
enter
pop
cmp
mov
clc
fmull
pop
sub
test
outsb
daa
pop
loopne
ret
aam
and
or
sbb
in
mov
aas
jb
pushf
jns
push
lods
nop
sbb
sub
xlat
das
push
mov
sbb
jmp
out
xchg
fcmovnbe
ret
or
jge
lds
xlat
xchg
mov
icebp
cmpsb
adc
add
push
addr16
push
mov
add
fwait
xchg
lods
pop
sub
ret
stos
jg
pushf
fwait
sarl
add
cmp
lods
push
mov
jg
lret
mov
xor
dec
mov
sub
xlat
pop
cmc
sbbb
push
shrl
js
add
jle
fsubrp
cmc
enter
xor
push
lret
aaa
testl
pop
cmp
push
sub
in
mov
sbb
jg
pushaw
jne,pt
shll
sarl
cltd
push
mov
je
test
rorl
cmp
pop
cli
jge
or
clc
fmul
xor
loop
pop
xorb
repz
sahf
sub
aam
pushf
pop
cwtl
mov
xchg
pusha
push
outsb
xor
adc
insb
imul
aaa
ss
or
lods
stos
loop
inc
aas
pop
popf
iret
dec
jnp
mov
adc
mov
adc
pop
cli
xor
shl
insl
xchg
clc
inc
xor
sbb
popf
inc
out
test
icebp
xor
pop
push
lock
cmp
lret
fucomip
cmp
popl
inc
mov
mov
jnp
and
mov
jl
mov
and
cltd
inc
stos
shlb
rolb
negb
ret
aad
lea
call
test
jecxz
pop
add
mov
pop
gs
xchg
insb
ss
xor
setne
adc
add
insl
jo
push
mov
mov
testb
cwtl
pop
orl
cmp
pop
nop
bound
cs
enter
fucomip
repnz
gs
pop
cmp
lock
jg
rorb
xor
in
jl
fbld
loop
dec
mov
sbbl
or
xchg
dec
int
inc
cmp
inc
hlt
pop
dec
stos
das
lret
andl
xchg
adc
fs
fstps
aad
push
xchg
out
cmp
mov
xchg
das
in
inc
into
xor
fs
dec
arpl
vcmpps
push
dec
push
cli
adc
cs
mov
sar
inc
movsl
out
aaa
adc
inc
mov
mov
insl
pop
push
inc
add
sahf
jb
pop
pusha
sub
pushf
or
call
fldt
ret
mov
xor
xor
and
in
xor
mov
mov
ds
leave
push
lcall
mov
push
xor
iret
bound
mov
iret
dec
lods
rclb
mov
out
scas
rcll
das
or
insb
jge
or
or
pop
and
add
or
hlt
push
mov
insb
sbb
push
int
fsubrs
rorl
arpl
push
adc
lea
mov
dec
sti
push
cmp
pop
shlb
inc
and
inc
xorb
push
adc
mov
xor
rol
mov
and
repnz
les
imul
cmc
push
test
xchg
daa
or
test
inc
sarl
dec
repnz
scas
xchg
out
mov
xor
mov
fnstenv
icebp
pop
and
sbb
shlb
ss
add
rcrl
sbb
xchg
pop
fcoms
ds
mov
fsts
cmp
cltd
cltd
push
int3
sub
mov
in
icebp
xchg
fisttps
popf
and
sbb
xor
call
dec
push
xchg
sbb
sbb
popf
dec
cmp
stc
or
mov
es
inc
imul
add
lret
pop
ret
pop
loopne
imul
and
pop
pop
call
pop
xlat
stos
cmp
repz
movsb
enter
add
mov
and
pop
int3
jecxz
data16
ds
int
xor
add
hlt
jae
push
jge
sub
enter
inc
mov
loope
sarl
inc
int3
daa
lods
add
jno
and
jle
sti
xchg
into
jbe
lds
rcll
lea
in
in
dec
cli
adc
push
dec
xchg
mov
lcall
into
test
lock
sub
and
push
jl
repnz
add
out
adc
nop
sbb
and
jmp
mov
jl
xchg
sub
stos
in
jmpw
pusha
jge
insl
jp
mov
jle
repnz
pop
clc
jp
ret
cwtl
and
push
adc
sub
repnz
inc
insb
iret
cmpps
mov
into
dec
dec
xchg
pop
push
add
push
stos
enter
fisubrs
std
mov
ret
xchg
imul
lret
mov
lcall
outsl
xor
xchg
lea
sahf
dec
push
rcrb
into
imul
flds
dec
dec
leave
sub
test
test
aad
inc
jae
dec
clc
mov
mov
hlt
lcall
and
cmpsb
rcll
rorb
pop
test
insb
xor
int
and
pop
fucomi
xchg
hlt
ljmp
push
test
je
jle
inc
cli
xor
into
cmp
fcomps
inc
pop
enter
fs
popf
cmp
cmpsl
adc
inc
in
cli
and
int3
mov
xchg
sti
scas
mov
push
into
sbb
imul
xchg
xchg
std
xor
pop
addb
cmpsb
sub
sub
sar
mov
jp
mov
insb
mov
push
fisubs
adc
xchg
lods
sti
mov
mov
or
push
movb
pop
or
hlt
cmc
add
add
push
inc
mov
stos
adc
out
repnz
mov
sbb
dec
add
int3
test
mov
mov
lea
cld
mov
lea
out
arpl
pop
les
cli
loope
pop
jecxz
sbb
mov
xor
pop
jae
add
leave
mov
add
mov
xchg
daa
sub
rolb
std
mov
mov
fsub
xchg
fwait
or
outsl
fs
cmpsl
xor
stos
pop
loope
xchg
xchg
inc
aam
inc
xchg
push
jns
sub
jno
jg
and
or
sub
pop
sahf
mov
push
jmp
push
sub
xchg
add
repz
sub
out
push
imul
pusha
lods
sbb
roll
dec
sbb
xor
outsl
adc
push
xchg
sub
push
sbb
ficoms
pop
aaa
xor
cmpl
jmp
adc
shrb
fistl
lret
test
dec
cmp
xchg
adc
cmpsl
out
cmp
push
outsb
push
jle
loopne
lea
inc
sahf
in
cltd
adc
sub
mov
and
pop
fcoml
je
and
and
mov
push
outsl
enter
sbb
and
cmp
scas
adc
mov
fmull
jne
push
jmp
xlat
cmp
std
enter
xlat
xorl
mov
push
out
mov
xor
sub
popa
lods
call
stos
jae
mov
jl
cli
shl
imul
je
mov
shrl
jne
in
mov
mov
sarl
cmp
inc
int3
je
jno
jmp
adc
push
xchg
out
mul
mov
in
lret
in
adc
xchg
xor
aaa
stos
mov
iret
inc
adc
and
lret
pop
lcall
xlat
push
mov
aam
and
imul
and
and
sub
sub
fs
push
dec
rclb
xor
xor
mov
js
sbbl
jne
fisttps
cld
mov
dec
out
sbb
or
enter
aaa
xchg
pushf
call
push
xlat
loope
sub
mov
fadds
scas
repz
sbb
sub
lcall
push
insb
inc
in
gs
ror
aaa
insl
das
add
fildll
fnstenv
cmp
dec
xor
push
leave
nop
cmc
lock
xchg
inc
push
data16
out
jns
paddw
mov
mov
inc
je
popf
push
popa
sbbl
inc
xchg
xchg
lock
xor
mov
push
mov
adc
inc
lret
mov
in
fiadds
push
shll
scas
xchg
je
jo
jp
nop
js
mov
mov
into
mov
jecxz
loopne
sbb
stos
movsb
add
fsubs
stos
mov
mov
sbb
mov
push
hlt
enter
fsts
gs
bound
push
movsb
and
push
loope
push
mov
pop
xlat
cmp
and
cmc
xchg
add
mov
xchg
push
sahf
insl
movsl
jmp
mov
cs
and
stc
jp
ja
pop
cmp
pop
loope
xchg
jo
pushf
pop
sbb
das
and
xor
xchg
mov
jb
sub
or
sub
mov
cmp
ficoml
out
mov
xor
mov
push
fildl
inc
shll
imulb
jecxz
pop
sti
xchg
fwait
cmp
aam
xchg
dec
clc
jle
out
lahf
outsl
pop
pushf
int3
inc
clc
mov
subl
clc
dec
cmp
out
lock
and
insl
push
inc
imul
push
js
add
idivb
pushl
mov
cld
inc
inc
fsubs
jbe
js
enter
jae
shll
pop
pop
mov
les
add
out
sti
movsl
fxam
leave
inc
imul
jp
inc
pop
mov
or
mov
scas
ljmp
popf
xor
cwtl
mov
pop
lret
mov
dec
sub
mov
dec
cmp
imul
cmp
push
adc
or
add
dec
and
repz
push
mov
pop
ret
icebp
adc
inc
adc
adc
vdivss
subb
cli
dec
cmp
in
add
incb
in
push
jle
sub
cmp
insl
or
in
pusha
xchg
outsb
mov
mov
sbb
pop
xor
sub
add
ds
sarl
jle
xchg
dec
punpckldq
shrb
cld
enter
shlb
insl
lret
popl
dec
in
fistps
cmp
pop
iret
callw
lret
popf
addr16
adc
and
subl
data16
or
add
push
cltd
jb
fdivrl
xor
xor
lock
rcll
movsb
mov
pushf
outsb
add
push
scas
jle
mov
int
jle
rorb
sahf
lahf
sbb
mov
mov
add
iret
jle
pushf
pop
daa
mov
xor
outsl
xor
ret
andl
fisttpll
pop
leave
adc
jbe
push
pop
inc
dec
xor
shrl
dec
pop
xchg
jbe
inc
xchg
xor
jge
sbb
outsb
xlat
mov
inc
add
pusha
xchg
arpl
inc
sbb
push
ds
adc
test
lret
jge
notb
ret
or
stos
sbb
inc
cwtl
jns
jge
cmp
xor
inc
and
jle
xlat
pushw
jnp
out
mov
jae
cmp
pushf
jbe
cmpsl
cmpb
xchg
ja
pop
push
sarb
inc
inc
mov
jbe
aad
sbb
xorb
ficompl
lcall
mov
jns
loop
sbb
cmp
push
lods
aad
fdivr
xor
push
jne
incb
insb
pop
ret
mov
xchg
outsb
adc
dec
pop
into
movsl
movsb
imul
es
and
jae
es
je
xor
in
stc
mov
sub
loope
cld
mov
cmp
xchg
int
int3
xchg
into
adc
inc
test
cmc
jp
jns
out
outsl
sbb
cmp
movsb
mov
mov
xor
repnz
jnp
mov
mov
outsb
xchg
outsb
sub
mov
mov
mov
jg
loop
shrb
mov
mov
add
push
mov
inc
fstpt
mov
out
lock
popf
jg
in
shlb
cmpsb
in
call
inc
xchg
push
or
rorb
or
xchg
lods
lahf
lret
inc
outsb
jge
sub
adc
dec
cmp
nop
bound
mov
jb,pn
clc
mov
cld
mov
ss
push
in
fisttpll
out
sub
mov
jo
fwait
ss
popf
sbb
xor
stc
clc
stc
adc
test
ss
sub
aas
scas
sub
inc
fisttpll
ret
fndisi(8087
ljmp
test
loope
arpl
repnz
inc
popa
mov
int3
xchg
mov
mov
jnp
int
lods
jno
loopne
fists
mov
pop
cmp
xor
inc
loope
enter
in
je
sub
xor
std
push
add
xor
push
pop
mov
dec
xchg
inc
pop
push
or
insl
jnp
dec
fsubr
mov
sbb
or
mov
dec
repnz
push
movq
dec
mov
push
leave
xchg
in
clc
rclb
cltd
test
mov
ljmp
rcrl
out
cmpsl
bound
test
out
out
pop
and
push
aaa
ficoml
cmpsb
dec
mov
outsb
xor
mov
es
das
repnz
fisttpl
add
add
test
push
push
push
int3
lods
shlb
mov
push
inc
outsl
lahf
mov
mov
icebp
push
push
int
out
ljmp
add
pop
mov
bound
jb
and
xor
pop
and
movsl
pop
sarb
push
call
push
adc
mov
ljmp
lahf
mov
repnz
and
in
not
dec
mov
mov
pop
mov
fdivs
cmp
inc
dec
roll
imul
push
loop
outsl
aad
movsl
dec
and
xor
adc
mov
push
inc
dec
push
sub
arpl
lds
test
sbb
or
inc
fisttpll
pop
and
adc
fwait
es
pushf
xor
or
or
and
pop
jae
test
cmp
rcrb
push
pop
ljmp
pop
mov
jmp
lea
test
roll
mov
or
cwtl
dec
or
xor
in
mov
jp
or
adc
sbbl
fisubs
dec
xchg
shrb
mov
daa
inc
in
lret
mov
cmc
movsl
je
dec
adc
pop
push
dec
cmp
cmc
xchg
jae
pop
cwtl
add
pop
nop
add
lahf
jp
xor
push
push
add
pop
sub
ret
jne
pop
pop
scas
sub
stos
das
sti
push
inc
addr16
sarb
fistpll
out
gs
mov
mov
sbb
add
lods
lea
push
call
cs
and
addl
push
js
cmpsb
jmp
or
mov
xchg
cmpb
movsb
pop
ret
popf
sbb
add
in
out
or
mov
sbb
dec
lcall
xchg
xchg
mov
insb
mov
cs
xor
cmp
jecxz
inc
dec
mov
xor
mov
dec
inc
gs
jmp
dec
loope
std
nop
sub
outsl
lock
cmpsl
adc
pop
fs
js
bound
xchg
loop
or
loopne
add
fisubl
mov
add
lods
pop
mov
xor
aad
loope
dec
cmp
aam
xorb
test
add
fs
in
pop
addr16
xchg
aaa
rorb
and
lret
cmp
orl
push
cmp
data16
jo
mov
or
daa
jmp
lods
add
stos
icebp
inc
cmp
push
and
push
paddw
or
push
and
push
adc
out
and
push
outsb
push
mov
je
jno
insl
or
mov
jge
out
cmpsb
xor
adc
and
add
jp
adc
fwait
dec
aad
cmp
add
push
jbe
jmp
push
and
xchg
fistpll
add
adcb
sbb
out
das
insl
and
xor
sarl
dec
mov
cmp
jg
or
jae
mov
in
imul
sub
pop
ret
repnz
xchg
dec
lds
pop
push
cmp
enter
decl
sti
xor
ffree
outsl
pop
sahf
fcoms
mov
xchg
lods
cmp
mov
sub
jo
pop
stos
outsb
sub
or
push
ja
mov
int3
notl
inc
ljmp
add
mov
icebp
js
scas
jp
lds
prefetcht1
jle
cmp
jle
notl
xor
loopne
ror
and
sbb
ret
out
sub
test
sub
cld
aad
fistpll
and
fsubl
lock
js
icebp
orl
rcrl
xchg
iret
jp
and
rorl
push
dec
cltd
lahf
mov
clc
mov
repz
bnd
punpckhwd
ds
sbb
sub
push
std
cli
mov
xchg
insl
test
ljmp
ret
ret
lret
sub
pop
mov
aaa
push
ja
mov
xchg
mov
cli
popf
pop
adc
sbb
and
dec
mov
add
mov
sub
mov
pop
push
aad
xchg
or
jge
cmp
cmp
cwtl
mov
jle
incl
ret
xor
mov
mov
sub
inc
cli
cmp
hlt
bound
pushf
sub
sub
fcomps
xchg
xor
mov
pop
ds
xor
fsts
mov
xor
mov
add
scas
cmc
into
pop
xchg
rorb
push
test
ss
clc
cmp
pop
and
popf
sbb
mov
out
out
pop
aaa
nop
add
cmp
push
fidivs
ret
in
mov
pop
into
mov
rclb
fbstp
lods
inc
cmp
xor
adc
add
mov
repz
in
push
pop
stos
in
xchg
ret
je
or
add
movsb
repnz
rcrb
aad
in
fwait
ja
ja
inc
push
fisubrs
add
je
in
out
sub
test
mov
adc
mov
dec
push
cli
mov
scas
adc
push
xor
in
insb
lret
jnp
in
mov
scas
sti
rcr
jg
stos
pusha
jecxz
fs
dec
mov
ja
vpackssdw
ficoml
jl
xor
cltd
out
lret
ret
dec
inc
mov
stos
pop
test
faddl
leave
mov
ljmp
jnp
movsl
loopne
mov
fldcw
mov
mov
inc
mov
iret
add
cmpsl
aad
mov
inc
add
push
push
insb
fs
sbb
lret
lahf
push
adc
mov
dec
push
cmp
sub
imul
mov
lods
shll
pusha
lock
push
in
inc
cmp
pop
dec
mov
loop
pop
xchg
xchg
cmp
into
push
cltd
dec
js
lods
adc
push
ficoml
xchg
dec
test
pop
out
mov
add
sub
and
dec
sbb
cwtl
imul
jg
lret
cmp
or
je
xchg
int
sub
cltd
lret
int
cmpsb
pop
adc
dec
push
add
mov
jmp
cld
cmpsb
sbb
sub
je
stos
ss
imul
add
nop
int
jle
mov
pop
dec
pop
pusha
mov
mov
popf
pop
arpl
sbb
adc
loopne
je
fcmovnu
mov
cs
scas
cltd
xchg
out
mov
push
and
into
test
test
inc
pop
rep
cmpsb
fnstcw
jbe
mov
xchg
fsubl
add
adc
cmp
mov
add
push
int
out
jge
mov
and
mov
xor
mov
mov
dec
daa
popf
push
in
and
imulb
sub
xchg
xchg
outsl
jle
in
adc
rorb
inc
pop
out
and
pushf
int
out
xor
and
mov
sub
push
add
jg
out
xor
xchg
push
jecxz
inc
mov
push
add
xlat
pop
xorb
xor
movsb
pop
xchg
out
and
jo
iret
jge
cmc
in
dec
xchg
fs
push
adc
jmp
push
test
dec
pop
enter
mov
mov
out
mov
xor
ja
xchg
mov
jge
xor
bound
lcall
mov
pushl
test
in
test
rcl
sub
sub
sahf
sahf
fldcw
das
pop
bound
scas
into
out
mulb
mov
mov
adc
jmp
incb
cwtl
std
int
mov
testl
mov
dec
bound
bound
mov
mov
inc
adc
ss
bound
xor
lcall
shlb
ret
or
mov
inc
fwait
xchg
xchg
bound
xchg
adc
jecxz
adc
sbb
sub
push
movl
test
test
xor
mov
iret
sarb
in
test
and
bound
or
mov
lahf
inc
orb
add
stc
inc
pop
add
mov
mov
sub
rclb
mov
pop
ret
pop
mov
call
fwait
addr16
aaa
pop
push
shll
xchg
imul
mov
cmpsl
pop
dec
mov
stc
shrl
dec
cmp
je
mov
pop
mov
rolb
xchg
xchg
adcl
shlb
adcl
sbb
imul
aaa
lea
arpl
icebp
jne
arpl
sub
xor
int
xor
mov
mov
lock
rolb
test
xchg
jne
cmp
mov
stos
popa
dec
jp
sahf
mov
and
xor
or
lret
shrl
call
jl
icebp
test
adc
sbb
incl
or
in
push
push
push
repnz
lret
shrb
push
jbe
aaa
xchg
repz
into
iret
movsl
inc
xor
jge
push
xor
pushf
fldt
pop
mov
pop
pop
jo
inc
je
mov
or
push
push
js
mov
pop
pop
xor
push
push
out
sarl
pop
jecxz
and
idivl
mov
sbb
stos
insl
leave
sbb
or
decl
pop
scas
push
frndint
and
cld
and
mov
push
loop
sub
jb
cwtl
scas
add
cmp
outsl
jnp
lea
pop
int3
fwait
sti
in
mov
fidivrs
lock
xchg
jg
int
rcll
and
and
and
enter
repz
mov
and
dec
pop
push
jl
ret
mov
xchg
pop
daa
test
sarb
xchg
dec
enter
mov
inc
ficoms
dec
stos
push
test
not
test
sub
and
and
push
shr
shrl
xor
and
jne
push
jae
cmp
jg
mov
or
mov
adc
aas
adc
mov
fstl
mov
ds
or
xchg
cmp
xchg
add
in
mov
test
push
test
sbb
mov
insb
scas
lret
imul
xchg
repz
pop
push
sub
push
mov
inc
xor
sub
call
inc
pusha
test
push
add
mov
out
in
repz
and
xchg
and
xor
or
inc
push
mov
dec
or
orb
xchg
clc
or
pop
ljmp
fildll
sub
lret
in
xchg
inc
int
lcall
fdiv
mov
pop
lahf
or
or
dec
in
in
xlat
mov
pop
or
out
push
divl
rcr
bound
lea
dec
aas
cld
lahf
jne
pusha
mov
lahf
push
arpl
xor
cmp
inc
fwait
cmp
sbb
in
sti
lret
mov
sbb
loope
xchg
jae
rcll
mov
callw
fwait
shrb
cmp
xor
idivb
inc
mov
mov
in
mov
or
mov
pop
mov
rorl
clc
jb
nop
shll
dec
sbb
jb
test
cmpsl
sub
ljmp
syscall
nop
sub
mov
dec
cmp
pop
pop
jae
pop
out
inc
pop
hlt
mov
dec
sbb
jns
cld
pop
add
inc
rcr
cmp
aam
xchg
mov
pop
dec
mov
adc
int
mov
in
jp
jns
loopne
mov
dec
or
repnz
or
je
lret
pextrw
adc
in
dec
lock
test
xlat
add
mov
mov
dec
aas
shlb
and
dec
sbb
pop
idiv
pop
aad
push
mov
out
adc
jno
aad
fwait
icebp
jp
cli
into
sbb
movsl
ds
mov
inc
jo
adc
mov
and
dec
xchg
mov
dec
add
mov
and
lock
fidivrs
sub
ret
stos
aad
mov
mov
sbb
push
jb
dec
lods
cs
fistpl
push
adc
mov
popaw
sahf
mov
add
pop
shl
xchg
mov
imul
mov
lods
sub
cmpsb
mov
ja
sub
fadds
cli
lods
scas
lods
jns
push
adc
pop
std
fstl
int
lret
jb
push
push
push
lds
cmpsl
mov
cmp
mov
cmp
pop
pop
or
fistpl
mov
ds
jo
inc
lock
fs
out
stc
scas
fidivl
aas
push
adcb
stc
jmp
sub
enter
out
out
loopne
and
sti
and
dec
adc
jb
mov
mov
out
adc
out
pop
int
push
pop
andl
xchg
pop
adc
pop
outsb
fs
pop
jne
insl
sbb
inc
mov
les
mov
das
cmp
adc
aad
sub
test
lcall
sub
pop
push
pop
and
test
push
mov
sbb
sbb
dec
stc
scas
and
in
xor
or
inc
cmpsb
jp
mov
inc
add
fldt
sub
jp
in
adc
dec
push
push
and
xorl
lret
cmp
mov
ja
pop
dec
mov
add
adc
jmp
jecxz
mov
jge
add
es
adc
or
dec
outsb
cs
cs
adc
into
rcrl
mov
insb
mov
lods
jbe
mov
mov
es
cmp
aam
adc
fldt
sbb
js
ror
imul
sbb
in
pop
outsb
cltd
shll
insb
pop
or
pop
push
and
adc
arpl
rcrb
movsb
push
push
push
lock
movsl
je
adcb
dec
stos
lea
mov
push
mov
jmp
mov
jecxz
jmp
das
sub
outsl
jmp
or
ficoml
rcrl
and
push
push
icebp
inc
adc
and
adc
mov
cmp
inc
movlps
insb
iret
insb
fcoml
mov
adc
push
jge
cmp
and
pop
roll
ret
push
dec
xchg
mov
push
add
fcomp
mov
add
pop
sti
mov
js
adc
cmpsl
and
add
add
movsb
mov
mov
mov
inc
mov
fcomps
insl
bswap
xchg
call
bound
and
jbe
lahf
popa
arpl
cmp
xorl
dec
jecxz
add
pop
xlat
neg
pop
inc
pop
rorl
lret
fwait
rclb
mov
mov
imul
push
mov
leave
cs
stos
jo
xor
cli
ror
push
je
mov
fistpl
loopne
pop
addr16
inc
adc
pushf
push
jge
push
sub
jb
in
pushf
addr16
call
push
xchg
push
jo
outsl
cmp
fcmovb
movsl
jbe
inc
push
push
dec
in
dec
in
sti
arpl
pusha
cs
lret
leave
fisttps
lds
pop
push
push
je
and
dec
test
rcrb
cmp
lods
movsl
sbb
dec
jecxz
mov
xchg
lds
inc
pop
fisubl
aas
mov
or
loope
dec
shl
loop
les
out
jl
push
sar
sarl
ficoml
mov
adc
cmp
xchg
xchg
dec
mov
stc
and
xchg
ret
jge
popl
arpl
cs
je
aad
mov
loop
in
add
push
adc
push
outsl
cmc
sub
dec
sahf
sti
fs
and
leave
adc
push
pop
mov
adc
cmpb
icebp
sbb
xchg
stc
mov
jb
sub
cmp
test
xchg
sbb
movsl
pop
rcrl
xchg
js
xor
mov
or
adc
outsl
xchg
mov
mov
clc
lret
je
movsb
gs
scas
sbb
jge
jge
test
aad
fucom
inc
das
push
push
xor
in
repnz
rcrl
sar
insl
cmp
ret
pop
test
inc
xchg
fadd
sbb
push
scas
in
clc
mov
pop
xor
mov
fwait
cmc
aas
jnp
test
scas
rcll
add
push
addr16
dec
pop
jl
dec
sbb
mov
jb
jns
push
clc
in
mov
ret
sti
mov
movsb
test
sub
repnz
sbb
cltd
cmp
out
jbe
sbb
sub
jnp
rolb
mov
mov
jae
add
mov
jecxz
adc
lea
cmp
dec
dec
imul
xor
rolb
daa
js
sub
pop
repnz
xorl
pop
mov
or
movsl
dec
or
xchg
repz
out
fimuls
test
pushf
xchg
cmp
js
stc
or
push
or
push
xchg
mov
mov
inc
data16
fmul
or
push
mov
mov
mov
inc
imul
mov
fsubrl
jmp
push
adc
push
push
xchg
push
scas
sub
hlt
push
outsl
and
push
loope
sub
xor
in
rol
mov
popa
or
rcl
cmp
xchg
jp
in
xchg
add
dec
imul
mov
idivb
pop
lcall
enter
leave
loopne
sbb
adc
punpcklbw
dec
shrb
es
shlb
aaa
xchg
mov
mov
fnsave
or
jmp
or
popf
sub
inc
jmp
subb
inc
fsubs
int
test
fwait
mov
lock
push
mov
xor
mov
ficompl
clc
mov
mov
nop
mov
adc
outsl
cs
jmp
movsb
cmp
cmc
push
lahf
notl
jb
rorl
movsb
loopne
push
jb
jg
scas
jp
das
adc
jae
sub
mov
stos
xchg
add
popf
and
stc
cmp
ja
test
cmp
sbb
fstpt
sbb
cmpsb
jg
mov
dec
pushf
mov
and
insb
xor
dec
push
pop
mov
nop
jge
dec
iret
pop
adc
aaa
pop
dec
fisubrs
gs
pop
movsb
pop
sub
xchg
insl
and
outsb
dec
hlt
cs
sub
les
sahf
xchg
jbe
add
inc
orl
adc
mov
lock
cmpsw
xor
xor
out
or
pop
push
in
mov
or
mov
dec
iret
rcll
pop
add
je
in
adc
sti
fildl
push
or
mov
adc
shll
sub
ljmp
or
insl
pop
daa
mov
jl
adc
mov
cld
call
enter
test
dec
leave
stos
fs
mov
inc
xor
imul
test
sub
lahf
int
mov
notl
push
jns
inc
mov
and
sbb
aam
inc
sti
xor
out
test
xchg
sbb
pop
inc
test
faddl
leave
xlat
pop
dec
dec
ret
push
xchg
pop
mov
cmp
gs
ret
mov
or
std
hlt
sbb
xchg
dec
inc
or
jl
mov
cmp
aam
je
movsl
ja
jno
stc
mov
pop
inc
dec
xchg
lock
adc
sub
dec
sub
and
filds
pop
xchg
aas
maxps
jge
das
icebp
decb
fbstp
aad
jecxz
sti
pop
mov
add
sbb
or
in
fildl
lods
xlat
fiaddl
mov
sub
cmp
dec
movsb
and
push
hlt
cmpl
sbb
jge
pop
inc
push
jns
out
pop
adc
pop
mov
sub
iret
in
sbb
aam
je
add
scas
xchg
pushf
lahf
mov
add
mov
cmp
sbb
mov
bound
jmp
jnp
inc
enter
test
iret
push
push
push
ja
push
adcb
sub
xchg
setbe
sti
rorl
dec
inc
inc
or
cs
adc
mov
cmp
xchg
test
in
mov
leave
outsl
adc
and
stc
dec
push
outsl
mov
daa
mov
adc
push
cli
jp
pusha
jbe,pn
jmp
xchg
mov
xor
shll
xlat
stos
out
push
fidivl
pop
inc
sub
loop
jnp
andl
fwait
lret
fwait
and
xor
sub
xchg
push
pop
push
int
into
sub
das
dec
int
lods
sbb
xchg
xor
or
adc
sbb
loopne
push
js
push
in
movsb
sub
jo
sub
mov
iret
jmp
pop
jmp
sub
jae
lods
mov
out
mov
je
xor
mov
test
out
mov
popf
dec
mov
ret
lret
rcll
jbe
xor
pop
adc
xor
mov
add
lock
out
xchg
cmp
pop
pop
xor
jne
push
repnz
imul
or
inc
push
clc
setno
xchg
imul
sbb
jo
jnp
pop
jle
mov
sti
jecxz
lods
fstps
pop
mov
pop
xor
cs
scas
fsubrs
pop
mov
jecxz
xorb
push
and
pusha
mov
push
inc
mov
jo
cmpsb
xchg
shrl
pusha
xor
jle
test
std
lds
aaa
cs
adc
and
sub
sub
lcall
and
jp
inc
sarb
mov
cmc
adc
dec
fsub
in
and
mov
fildll
adc
inc
inc
xlat
dec
pop
mov
adc
ret
mov
jnp
paddsw
jge
push
stos
mov
push
dec
or
sbb
mov
enter
adc
jb
out
mov
sbb
xchg
lret
shrl
lods
loopne
bound
push
mov
pusha
loope
stos
pushf
cs
clc
mov
jno
out
inc
mov
int3
xchg
or
jo
pop
fwait
cli
mov
mov
incl
inc
inc
int3
push
arpl
inc
sub
leave
test
dec
rclb
mov
outsl
and
outsl
cmpl
inc
adc
inc
shlb
rolb
or
gs
loop
and
data16
add
jmp
push
insb
pusha
push
leave
clc
stos
mov
xlat
xchg
adc
repnz
dec
sahf
aad
xchg
mov
xchg
push
lods
jp
cmp
or
call
dec
sbb
fidivrl
int
pop
mov
test
jbe
jp
rcrl
das
inc
movsb
lahf
sub
inc
xor
mov
adc
in
pushf
or
popa
andb
inc
fmull
sub
xchg
push
test
xorb
and
mov
les
pop
data16
loop
sbb
lock
addl
ds
inc
mov
mov
rorl
mov
aaa
xlat
add
inc
sub
lahf
sbb
dec
jbe
das
add
dec
mov
loop
xchg
adc
daa
gs
ljmp
add
imul
push
lock
jnp
rclb
lcall
rcr
jmp
xchg
or
jle
repz
fdivp
or
stos
ret
popa
adc
or
icebp
ret
sti
or
dec
cmp
mov
mov
leave
in
add
les
and
xlat
int3
roll
xchg
cmpsl
add
adc
rolb
jl
and
push
test
mov
and
shlb
sub
and
xor
sbb
adc
mov
jo
iret
dec
inc
popa
push
sub
jp
daa
outsb
sub
jge
loope
sahf
and
popf
mov
sahf
or
inc
fld1
jg
jge
mov
mov
iret
xor
dec
dec
jnp
and
call
pop
mov
fstpl
mov
adc
aad
iret
icebp
inc
inc
cmp
je
inc
cld
dec
rolb
popf
out
test
fldl
arpl
mov
mov
and
cmpsl
sbb
jo
xor
outsl
stc
dec
jmp
fwait
hlt
jge
fiadds
test
inc
out
fsts
sub
daa
pop
bound
repz
insb
push
push
jno
pop
dec
sbb
sbb
mov
xchg
cmp
dec
cmp
cmp
mov
jg
or
jl
jo
daa
mov
cltd
sbb
pop
int3
into
mov
ss
jl
cmp
fsubr
mov
out
pop
mov
pop
roll
pop
or
mov
rol
insl
push
xor
out
into
mov
sbb
or
mov
push
sbb
imul
lahf
inc
shlb
pop
and
in
jge
ret
jecxz
notl
call
imul
les
loop
ret
mov
cmp
adc
xlat
adc
inc
xchg
cmpsb
dec
fs
mov
jecxz
inc
int
pop
es
mov
loopne
push
and
mov
mov
pop
or
dec
sub
jb
add
mov
ja
push
pop
jae
insl
leave
leave
cmp
ficomps
nop
mov
sbb
idiv
xor
rdmsr
and
daa
xor
xchg
push
popf
lods
and
jge
xchg
cld
pop
insl
cmp
ret
aaa
and
pop
sbb
call
scas
xchg
rcrl
jp
mov
loope
out
or
adc
inc
sbb
jmp
dec
out
add
lret
xchg
jb
out
xchg
hlt
jecxz
dec
and
jnp
inc
and
imul
fdivl
dec
add
push
mov
dec
call
mov
cmp
jo
or
push
add
sbb
loope
push
pop
fcmovbe
rorb
ja
and
adcl
popa
push
adc
cs
repz
mov
lret
mov
test
xor
hlt
mull
xchg
cs
fisubrs
jp
xor
adcl
and
aam
push
mov
xor
jl
xor
dec
and
sub
es
sub
aaa
rorl
data16
mov
in
or
cld
xchg
or
shll
leave
mov
mov
mov
inc
add
push
xor
add
iret
jge
inc
arpl
test
fdivrl
mov
dec
inc
xchg
hlt
dec
sarb
insb
sub
pop
int
push
dec
les
dec
and
dec
ret
dec
lahf
inc
leave
call
dec
dec
testl
and
mov
sti
idivb
xor
sub
jecxz
xchg
je
push
and
pcmpgtb
popf
rcll
mov
xor
mov
stos
or
push
jns
cmp
call
or
jmp
sbb
js
pop
call
adc
mov
mov
repnz
dec
ret
xchg
setnp
jmp
push
or
add
sbb
cmp
gs
ret
loopne
push
loope
push
pusha
insb
fnstenv
testb
sub
das
and
insl
lahf
bound
ja
jo
add
daa
sub
rorb
push
cs
dec
jge
test
xor
test
cmp
std
cs
push
jbe
or
nop
adc
cltd
in
jle
sub
lea
test
pop
fstpt
xor
lea
scas
std
push
outsb
jg
adc
lcall
push
and
dec
adc
pop
push
mov
icebp
jb
movsl
imul
and
push
push
loope
xor
push
and
cmp
add
mov
imul
lret
jle
lods
jecxz
rcll
adc
adc
sbb
scas
cld
stos
cmp
daa
and
out
scas
pop
out
xchg
out
popf
insb
add
pop
inc
movsl
xchg
test
out
dec
or
sbb
inc
mov
scas
pop
sbb
mov
movsb
das
sti
dec
mov
jmp
sbb
pop
shlb
pop
aad
test
mov
ficoms
aas
push
xchg
mov
push
out
inc
add
or
jmp
mov
adc
sub
inc
sub
add
mov
adc
add
fadd
leave
test
movsl
mov
or
call
in
jae
test
aas
mov
popf
and
mov
cmp
pop
shlb
and
inc
pop
negl
loopne
adc
xchg
pop
jmp
not
cltd
sbb
fisubl
dec
repnz
push
outsb
lret
dec
imul
scas
inc
movb
push
cmpsb
and
fldenv
inc
pop
pop
stos
ret
push
test
filds
dec
pop
addr16
andl
in
push
mov
clc
addr16
pop
jno
xor
scas
adc
cmp
inc
mov
rorl
scas
xlat
mov
mov
jbe
mov
adc
pop
jg
add
or
ds
sbb
mov
lret
pop
mov
inc
fimull
in
push
sbb
shl
adc
add
mov
lahf
adc
mov
test
adc
es
mov
pop
sbb
and
mov
inc
push
je
insb
pop
lret
sub
cmc
jle
xchg
ror
add
in
push
mov
in
les
mov
mov
movsb
leave
shll
jne
shl
pusha
testb
out
fwait
mov
mov
or
daa
clc
ret
icebp
xchg
outsb
sub
mov
lock
lea
mov
sbb
or
xchg
lods
jbe
mov
incl
stos
sahf
sub
dec
out
das
mov
adc
rcrl
ljmp
add
mov
jle
or
inc
mov
adc
test
push
push
mov
pop
inc
add
mov
sub
aad
xor
and
cwtl
jne
filds
dec
aas
ret
add
push
pop
dec
push
mov
sarl
or
or
ss
mov
or
mov
bound
cli
pusha
add
mov
test
nop
mul
xchg
mov
aaa
pop
sahf
shl
adc
push
jg
mov
mov
and
gs
mov
loop
popf
cs
cmp
sbb
sbb
pop
pop
lcall
out
or
adc
sahf
jno
outsl
bound
lods
mov
mov
scas
add
mov
jb
daa
and
mov
icebp
and
add
mov
push
fmull
sub
mov
xchg
push
sbb
in
jno
in
cld
mov
imul
push
stc
enter
mov
test
push
fs
mov
dec
outsl
rcrl
idivl
testb
lock
dec
mov
dec
cmp
clc
mov
pusha
mov
rorb
lahf
sub
mov
inc
cvtps2pi
inc
mov
mov
or
imul
into
lea
cmp
lret
cmp
popf
jae
cli
adc
add
push
popa
insl
sbb
fisubs
iret
sarb
jp
or
pop
mov
push
cli
cmp
push
js
nop
add
add
sbb
adc
mov
sbb
movsb
rcll
ljmp
ret
or
sub
mov
lea
xchg
ljmp
sbb
pop
cmp
cld
lret
cmp
sub
nop
adc
ret
push
in
lock
hlt
loop
or
xlat
xchg
jne
add
leave
stc
pop
fwait
pusha
pop
or
sbb
mov
jb
out
jle
sbb
cli
push
adc
inc
rclb
dec
mov
mov
ficompl
sbb
and
mov
pop
jns
outsb
cmp
pop
sub
sub
add
inc
outsb
ret
sub
aad
sbb
je
inc
into
scas
sbb
movsb
pop
xchg
loop
and
push
mov
insb
pop
int
imulb
in
sbb
and
outsb
pop
cwtl
mov
ss
lcall
add
loop
pop
inc
mov
or
jo
and
subl
fcoms
lock
daa
mov
push
insl
jmp
pop
push
fwait
mov
dec
lea
jno
cmp
pop
inc
cmp
inc
rep
movsb
xorl
pop
mov
cmc
push
cmpsl
pop
pop
in
xor
int
inc
pop
jbe
and
int3
inc
lods
and
push
in
out
cmpb
push
dec
xorl
push
and
in
inc
rclb
push
test
mov
out
pop
sahf
aaa
mov
mov
sub
add
jae
les
jns
sbb
imul
fcmove
aaa
js
xchg
testb
mov
mov
jb
or
js
sti
xchg
cli
out
inc
int3
xor
ret
les
xor
aaa
test
or
pop
mov
aaa
jp
lods
aad
pop
push
int
jg
dec
xchg
xor
inc
xchg
daa
lahf
mov
sbb
enter
mov
mov
leave
cmovge
dec
push
outsb
mov
not
out
sub
lock
call
mov
cmp
hlt
inc
fidivrl
sbb
sti
dec
and
outsb
inc
pop
push
mov
add
pusha
cltd
mov
fdivs
iret
xor
lods
push
mov
adc
sub
mov
lds
jmp
xchg
cmp
repnz
xchg
sub
xchg
lret
add
xor
mov
test
ret
push
aam
stc
test
xorb
in
loope
lods
insl
xchg
mov
shlb
cmpsl
bound
in
out
lods
sbb
outsb
addr16
hlt
jae
inc
push
mov
faddp
inc
aam
cld
dec
dec
cmp
and
test
or
push
and
jmp
mov
inc
std
mov
fstps
scas
jno
fs
sti
fbld
inc
adc
or
sub
ss
jg
cmpsb
pop
inc
and
cmpsl
pop
add
scas
add
fidivl
sbb
lcall
pop
loopne
arpl
repnz
jnp
int3
xor
addl
push
cmc
sbb
das
mov
xchg
leave
jle
pusha
cmp
je
push
mov
cltd
adc
push
pop
and
cmpsl
jb
outsb
and
xchg
pop
push
inc
mov
mov
xlat
fisttpll
add
jbe
xor
ss
mov
fwait
jge
sub
xor
mov
mov
mov
inc
or
jle
cmc
fldcw
ljmp
or
in
inc
push
add
adcb
fs
cmp
or
int3
xor
pop
test
add
pop
dec
lret
ja
adc
jns
outsl
fs
bound
mov
pop
lahf
out
push
test
cmc
cld
pop
mov
push
lret
rorl
ja
pop
dec
outsb
ja
aam
dec
mov
icebp
jbe
scas
subl
pop
in
inc
fnstenv
mov
cwtl
sub
int3
push
xor
scas
push
fs
xchg
dec
dec
mov
mov
mov
adc
dec
mov
insb
fnstsw
cltd
sbb
sahf
xchg
mov
mul
gs
std
xchg
mov
cld
push
pop
int3
add
inc
mov
push
jbe
jo
call
shl
pop
mov
dec
jae
jnp
shll
arpl
jb
cmp
je
and
pop
ror
inc
lea
mov
fadds
loop
sub
jl
fdivrl
inc
insl
jle
ss
pusha
stos
jge
movsl
test
push
or
or
dec
push
clc
sub
mov
in
or
cmp
stos
pushf
fwait
sub
mov
and
xor
mov
movsb
fucom
icebp
xchg
lret
and
xchg
loopne
std
push
mov
mov
popf
ja
pop
ret
fcomps
or
lahf
and
jae
das
sbb
jp
lahf
pop
xor
pop
mov
iret
pop
and
pop
testl
pop
aad
sbbb
xchg
cmpb
mov
out
dec
loopne
pop
and
jo
and
sbb
dec
mov
imul
and
test
add
repnz
loope
aad
push
inc
sbb
inc
lret
adc
xor
js
xor
mov
add
adc
lcall
and
iret
pop
das
stos
popl
add
lret
mov
and
push
mov
or
outsb
mov
outsb
push
sbb
mov
push
jae
int
lcall
pop
jb
mov
sbb
push
xchg
add
sub
loopne
cmp
in
jnp
data16
lock
orl
lods
xchg
sbb
int3
rcll
pop
lods
cmpsl
mov
ljmp
sbb
dec
adc
loop
push
inc
mov
or
and
loope
jno
add
gs
mov
mov
push
push
mov
loop
adc
mov
xchg
push
nop
jne
add
test
sarl
cmp
test
addb
sarl
dec
pop
fildl
jo
dec
leave
insl
fstl
subb
adc
push
cwtl
movsb
sub
fstpl
shrb
mov
and
mov
paddsb
push
in
insb
aad
sub
sahf
xchg
fcoms
add
es
inc
cs
fisubs
xchg
nop
stos
negl
addl
mov
adc
addr16
pop
out
cltd
jl,pn
addr16
repz
aam
punpcklwd
cmp
jbe
sub
sbb
or
and
arpl
add
loope
out
mov
lahf
xor
and
jg
in
push
dec
repnz
out
jbe
insl
jecxz
test
repz
dec
xchg
cltd
call
out
cld
push
nop
cmp
rolb
lret
nop
dec
int3
mov
push
ja
xchg
mov
dec
out
hlt
add
aad
jg
outsl
sub
repz
and
clc
add
jmp
adc
in
or
or
in
test
jns
sub
nop
cli
jmp
flds
push
insb
and
ss
add
push
jo
mov
rolb
add
fwait
and
out
repz
movsb
test
and
outsl
in
data16
ds
lds
popf
mov
pop
pop
imul
jmp
inc
push
push
xchg
fadd
lock
out
jmp
aas
aad
movsl
cmpsb
inc
jg
out
adc
icebp
popf
sbb
push
out
sbb
negb
add
out
inc
xchg
sbb
subb
iret
enter
movsb
jge
xor
jo
lret
repz
out
divb
ret
push
cs
jmp
cmpb
cmp
mov
lret
pop
inc
xchg
pop
stc
sub
sub
xchg
jg
adc
lret
pop
xchg
add
jbe
pop
jle
lahf
adc
jbe
leave
add
std
and
mov
adc
out
mov
jge
lds
in
and
ret
es
push
push
sub
jle
out
enter
and
sub
addr16
push
ret
or
xor
jnp
xor
pop
pop
mov
rcrl
lods
jge
pusha
cmp
arpl
xchg
inc
adc
pop
lret
xor
sbb
out
push
jns
add
pushf
mov
std
fwait
sbbl
add
das
pushf
popf
pusha
icebp
stc
jo
call
inc
mov
inc
nop
cmpsb
pop
mov
or
add
add
enter
ljmp
cltd
mov
pop
das
inc
inc
icebp
push
cmpsb
xor
cs
jnp
push
jnp
je
push
fwait
xor
lock
xchg
aad
test
push
mov
imul
mov
jnp
pop
in
mov
dec
mov
movl
or
xchg
dec
in
and
pop
insl
testb
pop
les
aad
push
sub
pop
inc
add
inc
adc
pusha
jae
jae
mov
sbb
sub
loope
sbb
ror
fistpl
out
std
pop
rorl
push
stc
sbb
xchg
xchg
jmp
cmc
scas
sbb
ss
ds
sbb
sbb
lods
or
push
cmp
out
sbb
push
or
das
or
push
aas
mov
cltd
jecxz
sub
cld
fnstsw
lret
je
fsubl
addb
es
mov
mov
repz
daa
std
pop
sahf
pop
jbe
rcrl
enter
xor
or
adc
lcall
sbb
xchg
xchg
and
and
jns,pt
sbb
stos
lret
mov
jecxz
mov
pop
inc
cmp
sbb
mov
mov
xchg
xchg
xor
outsl
or
jl
pop
or
push
mov
mov
jbe
xchg
xchg
push
negb
insb
sub
mov
es
xor
je
lods
leave
mov
insb
je
in
xchg
jne
push
pop
sarb
test
mov
pushw
adc
adc
xchg
push
imul
mov
rcr
jne
push
dec
sti
leave
shll
stc
es
js
cmpsl
mov
fdivrs
jl
mov
pop
xor
cmpsb
orl
mov
call
sbb
mov
sub
xlat
aas
sahf
imul
mov
fbstp
push
sbb
iret
mov
pop
cmpsl
pop
cltd
into
rep
ret
jp
jecxz
sbb
dec
loopne
cmc
aas
out
pop
iret
inc
mov
pop
dec
sub
pop
dec
sub
cld
enter
or
lods
jp
nop
fstpl
fisubrs
push
push
out
cmp
mov
add
roll
cltd
cmpsb
xor
imul
jbe
mov
insb
shlb
push
pushf
sub
mov
lret
mov
jp
add
outsb
jmp
lods
push
sahf
pop
jne
cmpsb
popa
dec
cmpsb
sbb
and
fcomps
mov
iret
ss
lods
pop
xor
test
mov
sub
sub
je
scas
hlt
push
mov
inc
jno
testb
add
cmp
rorl
adc
pop
repz
pusha
ja
push
pop
rcrl
sbb
push
xor
fisttpl
lods
shlb
fsubs
pusha
pusha
xchg
jno
cmpsb
iret
lcall
dec
jns
fnstsw
dec
movsl
aas
scas
in
adc
loope
lcall
xor
inc
vmovlpd
movsbl
repz
xchg
and
sbb
mull
loope
and
push
lahf
lcall
stc
movsb
lahf
inc
enter
cmp
xchg
jo
xchg
pop
pop
jecxz
push
pusha
fidivrl
mov
inc
xor
gs
and
movsl
dec
jae
iret
pop
lea
add
dec
xlat
xchg
into
test
enter
xchg
mov
cwtl
pop
push
stos
in
lahf
jg
mov
mov
movaps
sbb
lret
xor
inc
js
sbb
cmc
mov
pop
push
push
and
sbbl
pop
movsb
loopne
ss
inc
mov
or
lods
clc
push
cmp
test
mov
mov
xor
popf
xor
sub
jecxz
into
cmp
add
imul
lods
imul
out
mov
push
and
fstl
icebp
jle
ret
push
stc
popa
addr16
xchg
xchg
pop
or
push
aad
xor
xor
popf
pop
les
in
mov
scas
pop
dec
jg
mov
das
inc
jg
stc
jo
cmpsb
stos
mov
mov
clc
mov
sar
aad
lods
adc
data16
dec
add
stc
mulb
lret
into
cmp
push
je
mov
mov
movsl
xchg
pop
sub
mov
xchg
andl
leave
pop
jl
push
xchg
in
mov
mov
push
xor
xchg
outsb
mov
jo
add
popf
sbb
sub
test
daa
push
push
push
sbb
add
jns
fidivrl
push
fldcw
lds
lds
dec
dec
lds
jecxz
mov
mov
pushf
inc
mov
inc
add
jae
ret
lods
or
fisttpll
aas
push
rorl
and
es
sub
adc
add
lret
mov
decl
add
mov
xchg
mov
enter
out
jnp
mov
popf
js
pop
pop
cmp
js
shrb
in
sbb
pop
and
subl
sub
cmpsl
vpsubsb
adc
test
movsl
shlb
mov
test
into
ret
mov
pop
cmp
adc
push
cwtl
mov
push
sub
idivb
and
adcl
jno
sbbl
sbb
jge
lock
pop
es
in
aam
inc
sub
push
ja
orl
push
ja
sub
ss
les
xor
pop
push
shll
inc
cmp
out
xchg
int3
mov
jge
or
mov
das
cmp
mov
jp
scas
setnp
sbb
xor
fists
sub
fcmove
sbb
mov
mov
sub
popf
xchg
ret
push
incl
shll
cmp
cmc
movsl
mov
pop
test
test
leave
adc
jbe
lds
dec
lret
scas
test
daa
jge
push
rcrl
cmpsl
lahf
jecxz
mov
adcb
hlt
and
or
test
sbb
push
gs
dec
push
in
mov
xchg
sub
mov
mov
testb
inc
jecxz
je
test
inc
sahf
sbb
and
dec
call
sbbb
mov
setle
les
inc
xor
insl
cwtl
add
nop
or
add
out
stc
dec
pop
sub
xor
call
jne
lret
fists
push
adcl
addb
lods
cmc
outsb
mov
jg
imul
push
cmp
out
jmp
cmp
mov
out
sub
xor
push
push
xchg
jge
pop
or
cmp
les
int
out
and
aas
jmp
aas
int3
cld
dec
adc
fs
push
mov
imul
push
daa
cmp
cmpl
cmp
pop
mov
movl
andb
and
cltd
or
sbb
in
aad
push
orl
mov
stos
mov
cmpsl
mov
mov
out
ret
in
out
sub
out
mov
cli
cmp
jg
inc
dec
pop
pop
xchg
mov
xchg
jmp
lcall
xor
sub
inc
pop
xor
pop
cmp
lea
cmp
mov
imul
test
psllq
out
repz
jp
pushf
xchg
dec
mov
mov
xchg
inc
mov
jnp
and
push
mov
dec
xor
rclb
cmp
add
iret
jno
fcoml
pop
dec
xor
loope
mov
jb
mov
add
jb
add
std
arpl
xorb
push
jne
jo
mov
adc
push
shrl
leave
insl
fisttpll
xchg
or
jnp
dec
push
jbe
xor
and
mov
jge
ja
je
ljmp
and
jno
aaa
inc
and
inc
scas
test
add
outsb
cli
mov
test
les
daa
into
out
xchg
sbb
call
push
mov
pop
sub
push
das
fsts
mov
mov
dec
push
cli
lods
bound
jp
and
xor
sub
and
arpl
out
test
lret
cld
mov
cld
cmp
fadd
lods
aas
mov
or
out
mov
pop
lea
cwtl
lahf
stos
or
loopne
inc
cmpsb
mov
mov
and
xor
mov
pop
popf
gs
es
jns
mov
cmp
jbe
xchg
add
js
popa
add
in
cmp
push
fcomip
lock
imul
xlat
mov
add
xchg
sub
pop
push
dec
notb
add
dec
mov
xor
sbb
out
fucomip
xchg
out
into
cmp
pop
pop
xor
arpl
imul
iret
jb
pop
into
jle
and
lods
rorl
xor
lret
daa
repnz
or
andl
shlb
test
bound
repnz
xchg
inc
fisubs
xor
inc
push
insl
cmp
push
push
stc
adc
out
push
repz
add
or
cld
jns
fdivl
loop
jle
cmp
cmp
mov
cwtl
icebp
aam
jle
fldenv
dec
addr16
jae
aaa
mov
xor
adc
das
add
xor
push
adc
sub
imul
movsb
mov
lods
pop
stos
ret
push
xchg
out
adc
aam
dec
test
je
and
mov
add
mov
push
sti
movsl
movsl
mov
mov
stos
cmp
mov
pop
test
loope
ds
and
loop
fisubs
mov
inc
outsl
inc
jecxz
enter
mov
push
loopne
mov
lret
xchg
popa
js
mov
sbb
cmp
and
mov
stos
cmpsb
xor
mov
pop
sbb
mov
repz
or
and
iret
into
sub
mov
test
scas
negl
out
sbbl
and
jle
add
cmp
cmpl
xchg
mov
rcrl
push
push
fstps
sbb
cmpsb
xchg
add
xor
popa
repnz
xchg
test
test
inc
scas
sub
mov
mov
and
shlb
jge
out
xor
js
aam
sahf
rolb
mov
fcoml
cmp
aad
jns
stos
or
cli
mov
js
dec
inc
inc
and
ret
test
aam
cmpsl
inc
inc
data16
arpl
std
push
in
cwtl
fildll
imul
xchg
jno
popf
push
fldt
gs
pop
sbb
dec
push
mov
mov
sti
sbb
les
lret
movsl
lcall
sub
push
ss
lock
cmp
dec
sahf
mov
mov
cs
ret
loopne
xor
mov
pop
or
mov
xchg
mov
lret
or
mov
pop
dec
xor
div
shrb
orb
std
push
xor
adc
fsubs
mov
or
xabort
cld
mov
xchg
rep
and
dec
outsb
adc
shrb
sub
mulb
pop
je
int
or
mov
add
cmp
push
repnz
or
hlt
mov
xlat
sar
aam
cmp
xchg
pusha
bound
fildl
inc
movsl
mov
xor
push
mov
lcall
jle
shll
fdiv
mov
mov
dec
ret
jb
outsb
and
mov
adc
sbb
loop
aas
adc
aam
jo
pop
mov
sti
mov
int3
add
inc
loope
add
fidivs
mov
cld
data16
push
inc
scas
jns
out
sbb
es
xchg
fiadds
sub
cwtl
dec
out
inc
and
pop
or
lret
cmp
mov
xor
imulb
jo
lock
insl
jnp
or
out
fsubrl
mov
inc
popa
jecxz
and
push
sub
popf
xor
insb
stos
mov
out
cli
push
ret
jl
das
testl
cmp
movsl
mov
out
xor
decb
adc
test
pop
lods
xor
add
mov
and
or
in
add
push
dec
xor
fs
mov
mov
mov
pop
testb
test
push
or
push
cmp
push
xor
inc
pop
adc
or
loopne
or
je
push
shll
out
aam
jecxz
cmp
jp
mull
andl
cmpsl
leave
shlb
add
daa
fsubrp
daa
push
dec
jo
test
xchg
lret
sbb
cmovs
xor
wrmsr
in
js
dec
psubusw
sbb
sub
je
xlat
push
test
adc
pop
rorb
stc
push
inc
clc
add
clc
dec
cmp
ret
sbb
roll
dec
inc
out
sbb
pop
cmp
xchg
aad
xor
in
jecxz
pop
mov
jno
imul
pop
rorl
std
andb
add
mov
mov
jae
adc
int
rcr
push
enter
mov
push
nop
fxch
mov
adc
dec
push
push
sub
pusha
cld
mov
mov
cmp
sbb
pop
insl
andb
add
outsl
outsl
push
fdivr
push
outsb
bound
repnz
fnstcw
clc
cmp
or
stos
call
mov
cmpsl
mov
mov
and
out
cmc
das
aaa
pop
cs
xlat
mov
inc
rcl
jecxz
dec
cltd
and
jg
adc
adc
shr
cmpsl
out
test
pusha
push
mov
cltd
int
std
pop
loop
int
sub
data16
push
fsubrs
aaa
add
icebp
and
adc
ja
rolb
mov
jg
xchg
jmp
push
scas
mov
outsb
pop
dec
ret
cmp
xchg
loopne
xor
push
sbb
and
lret
popf
lret
mov
cmpsl
inc
adc
jo
cmc
rolb
gs
add
jns
cmpsb
mov
pop
mov
loope
jne
inc
shrl
jge
jbe
mov
push
inc
cmpsb
and
cmpsb
add
lcall
lret
and
ds
jge
jb
rolb
xchg
lods
orb
pop
ja
int3
pop
scas
push
pop
fsubs
inc
std
insb
and
and
inc
and
mov
sub
jl
sarb
pop
repnz
add
xchg
rcll
fsubr
push
cmc
sarb
xlat
jecxz
movsb
cmp
nop
stos
mov
fidivs
or
lea
movsl
jg
out
xor
sbb
ja
and
jecxz
loop
mov
cld
sub
cmp
cmpsl
jmp
in
push
notl
xchg
jns
jns
add
or
inc
xchg
aaa
mov
xor
addb
jp
clc
repnz
outsl
pop
ljmp
cltd
insb
sub
rclb
push
jmp
or
into
pop
xchg
cwtl
jne
jle
xchg
or
mov
add
jne
cmp
inc
or
testb
std
mov
les
lods
mov
js
mov
cli
pop
inc
cmp
jns
push
insb
mov
adc
push
in
outsl
lods
jne
adc
dec
lret
jno
sti
cld
sbb
mov
mov
std
popf
outsl
sti
mov
adc
loope
mov
cmpsl
loopne
addl
int
out
xchg
pop
adc
popa
adc
pop
inc
pushf
clc
sbb
lods
movsb
jns
pop
test
lahf
cwtl
add
add
div
jns
and
push
mov
jnp
testb
jl
outsl
ja
popa
ficomps
lods
jns,pn
or
sbb
in
out
sbb
mov
sarl
out
hlt
out
mov
jo
fs
in
dec
jg
popf
ja
rorb
rorl
call
or
rclb
das
call
lahf
inc
cmp
cmp
gs
lcall
dec
and
mov
push
outsl
aaa
mov
mov
shlb
dec
sub
jne
in
cwtl
push
nop
jge
add
pop
dec
xchg
mov
out
pushf
sbb
test
stos
or
test
imul
out
and
xor
aad
fdivs
push
dec
fcompl
xor
push
mov
push
popa
pop
in
negl
insb
sub
jo
and
jl
imul
popf
es
repz
mov
popf
xchg
orl
xchg
push
fildll
scas
lods
cmp
nop
xchg
fwait
or
orl
out
lret
sub
add
adc
lea
push
fnstenv
jae
push
or
xlat
loop
xchg
push
adc
xchg
movsb
mov
leave
cld
pop
cmp
cmovle
pusha
xor
inc
xor
addr16
xor
cwtl
dec
push
vmovshdup
or
fcoms
lret
cmp
imul
and
ret
icebp
or
cmp
push
clc
jle
bound
nop
sbb
jle
out
iret
in
insl
push
push
out
dec
mov
mov
imulb
and
mov
jno
daa
es
testb
incb
add
pop
lock
fstps
sub
in
mov
imul
cmp
inc
jecxz
pop
xor
or
jl
sbb
stos
and
int3
xchg
add
icebp
ficompl
mov
mov
sub
cwtl
ss
xor
lods
clc
test
push
xchg
or
pop
xor
add
xchg
jnp
cltd
popa
and
fdivr
test
loope
push
jmp
pop
aad
sbb
xchg
push
cmp
ret
mov
mov
pop
iret
je
pop
add
xor
outsb
adc
add
mov
lods
mov
inc
bound
jo
add
clc
mov
cmp
pop
dec
and
lock
fldcw
mov
imul
or
inc
cmp
mov
pop
gs
mov
rol
testb
xor
fldt
iret
arpl
loope
jge
in
fcmove
repnz
mov
neg
pop
xchg
loop
xor
jle
sub
sub
repz
push
cmovne
cwtl
jae
sub
and
mov
cmp
enter
iret
icebp
xor
scas
xor
popf
pop
jg
sub
xor
loope
xchg
pop
push
add
mov
push
dec
sub
addl
add
ds
and
mov
push
xor
sbb
sbb
rcl
popa
or
pop
mov
mov
movsl
mov
push
stos
hlt
push
push
push
in
sub
mov
sbb
push
mov
pop
idivl
or
push
mov
dec
xchg
movsb
and
mov
lds
pop
mov
test
imull
push
mov
mull
pop
mov
in
out
mov
adc
jns
add
mov
pop
mov
cs
cli
xor
xchg
sub
aas
jp
cmp
mul
cmc
xor
pop
adc
sbb
xor
push
jmp
aas
fldenv
testl
jmp
in
fwait
jnp
enter
mov
xchg
mov
inc
scas
sub
xchg
leave
dec
xlat
cmp
movq
call
std
xor
adc
cmpsb
inc
pop
adc
inc
dec
cmc
js
das
into
xchg
adc
inc
dec
mov
mov
xor
add
or
loop
adc
stc
outsb
mov
cmc
sub
pop
mov
add
add
mov
in
xchg
mov
inc
imul
testl
push
es
sub
xchg
add
ja
insb
xchg
add
push
ror
out
arpl
pop
test
stos
or
cmpsb
cmp
dec
test
pop
xchg
mov
cmp
pop
mov
sub
outsl
pop
imul
inc
clc
aad
mov
fldt
and
call
addr16
jae
or
scas
rcrl
lahf
cmp
mov
pop
nop
fistl
jle
out
nop
inc
es
cmp
fldt
sti
lock
adc
and
inc
popf
lods
flds
test
sub
jg
bnd
and
cmp
mov
pop
pushf
inc
push
mov
dec
xor
loop
dec
mov
mov
push
lcall
pop
dec
insl
cld
jecxz
cs
cld
cmc
es
mov
cmp
push
adc
sub
or
fninit
sbb
insl
clc
lds
nop
in
mov
lret
sbb
lock
icebp
and
add
lahf
push
lock
pop
xchg
mul
sahf
mov
or
inc
pop
rcrl
enter
std
push
outsl
icebp
lods
xor
add
nop
imul
add
popf
inc
push
dec
push
fadd
pop
cmp
jae
loopne
int3
xor
cmpsb
sub
push
fisubrs
sub
sbb
pop
fcomps
add
popf
sbb
stc
scas
aad
pusha
orb
fld
jmp
jnp
shll
add
aas
pop
mov
mov
in
cli
inc
cmc
subb
pop
fucomp
lahf
dec
addl
xchg
cmc
or
xchg
cmp
lcall
jp
test
or
mov
pop
fnsave
add
push
dec
cmpsb
in
sub
aas
mov
pop
mov
mov
pop
out
fcoml
mov
add
jnp
sbb
cmp
pushf
mov
mov
fadds
ret
adc
inc
cmpsb
inc
jle
mov
mov
test
push
movsb
ljmp
stos
dec
xorb
inc
pusha
mov
cmp
jle
fwait
jmp
inc
aam
mov
xor
jno
inc
fldenv
push
and
hlt
enter
enter
adc
jns
dec
divl
fs
dec
ret
and
adc
stos
xor
stos
or
mov
push
or
std
adc
adcb
cmova
lret
dec
mov
int3
movsb
xorb
cmpsb
adc
xor
mov
dec
mov
fwait
inc
xchg
rcrl
xchg
out
sub
cmp
jg
es
popa
gs
mov
movsb
faddl
dec
cmp
mov
mov
jne
clc
lods
shll
push
bound
enter
movsl
loopne
lds
mov
into
jp
xchg
adc
jmp
and
xchg
mov
mov
into
xchg
imul
dec
xorl
mov
or
frstor
or
std
mov
lcall
cmp
stc
loop
jg
xchg
out
jae
cmp
dec
in
push
insl
inc
imul
mov
adc
fcompl
push
pop
loop
shll
rclb
mov
push
push
adc
fdivr
xchg
jo
andb
sub
jp
mov
lds
jno
sarl
push
iretw
xor
mov
mov
sbb
clc
inc
cs
mov
rol
add
pusha
divb
icebp
add
mov
pop
stos
mov
fwait
adc
inc
loop
sbb
es
int
sub
sub
insl
sub
xchg
cmp
inc
rorl
fbld
inc
lods
xchg
push
roll
add
sahf
scas
jbe
dec
dec
and
jp
sub
stc
push
es
mov
and
fwait
cwtl
icebp
xor
loop
adc
test
in
cmpsl
jb
stos
das
int
mov
pop
mov
sbb
or
dec
lods
mov
mov
adc
lds
inc
mov
addb
cmp
or
insb
mov
mov
fnstsw
cmp
imulb
imul
and
sbb
lock
insb
inc
pop
cmp
add
popa
cmpsb
nop
xchg
scas
mov
fcomip
sbb
push
clc
into
sahf
cltd
aas
or
jbe
loop
pushf
fnstsw
dec
pop
shr
xchg
push
jns
push
stos
xchg
lds
rclb
push
push
xor
add
dec
dec
and
pop
rcll
clc
push
mov
ja
sahf
xor
mov
mov
std
lea
lds
and
xor
aam
pushf
mov
gs
adc
pop
adc
mov
push
js
mov
jmp
push
je
xchg
jns
mov
mov
xchg
pop
inc
inc
rcrl
cmp
mov
dec
bswap
clc
xchg
and
jecxz
lahf
outsl
adc
sub
iret
mov
sahf
fcmovnbe
repz
cmp
xchg
cmp
jnp
jnp
mov
daa
ror
shll
and
loop
rclb
repz
sti
pop
aam
lret
ss
xchg
push
sub
or
in
push
in
xor
loopne
push
sub
fucom
dec
fs
jb
sub
sbb
mov
sti
mov
out
push
insb
mov
cmc
inc
mov
addb
pop
jb
lods
push
jae
mov
cmpsl
in
mov
ret
xor
out
leave
imul
rcll
fwait
pop
fimuls
shlb
xor
inc
adc
imul
inc
lods
movsl
out
xchg
mov
or
stos
xchg
int3
inc
pop
xchg
fldt
pop
dec
and
loopne
jp
mov
mov
jmp
dec
lods
shrl
cmp
cmpsl
rol
lods
into
movsb
popa
cmpsb
xchg
ret
popf
jl
out
push
sub
dec
sub
aad
cli
into
add
leave
push
xlat
jge
pop
mov
push
mov
inc
xor
jns
push
inc
mov
in
rclb
jns
sbb
stc
idivb
mov
xor
cmp
rcrl
inc
cmp
fisttps
xor
addr16
std
rcrb
sbb
call
mov
mov
aaa
adc
out
push
inc
cmp
int3
pop
pusha
out
mov
push
inc
or
cmc
addr16
pop
add
push
and
je
testl
mov
sbb
shll
in
dec
daa
push
cmpsl
jbe,pn
add
lret
push
xchg
mov
pop
jnp
pop
movsb
cmc
pop
in
inc
pop
fldcw
xlat
adc
sarl
sub
xorl
adc
repz
dec
ficoms
outsl
int
adc
dec
sub
sub
rcll
outsl
shrl
aam
mov
pop
push
in
in
mov
jns
xchg
cli
mov
imull
push
movsl
push
imul
mov
push
enter
rol
mov
mov
dec
fwait
iret
pushf
inc
cmp
adc
push
push
sub
bound
mov
mov
aam
imul
dec
dec
dec
dec
fs
add
jo
in
jg
bound
and
cmp
mov
xchg
jae
dec
pop
hlt
in
push
outsl
xlat
movsl
pop
jb
pop
add
cmp
sarl
cmpsl
pushf
andl
mov
mov
mov
pop
xor
fistpl
fscale
pop
xchg
mov
add
sbb
xor
xor
adc
mov
mov
out
xchg
loope
fstpt
rcrb
xchg
pop
xor
loopne
or
xchg
rorb
xchg
mov
xchg
mov
xchg
mov
push
or
cld
sub
cmp
and
mov
add
sahf
sbb
dec
dec
dec
push
das
mov
lea
shlb
cmp
mov
mov
mov
ret
movsb
adc
sar
negl
sar
cltd
addr16
imul
ds
cmp
shlb
test
dec
mov
adc
inc
es
sbb
fadd
cld
adc
in
add
adc
mov
sbb
aam
inc
aaa
xchg
dec
das
mov
mov
rcll
mov
add
mov
xchg
dec
loope
jp
lock
imul
push
aaa
pushf
lcall
movl
sub
rcrl
and
jge
les
jmp
sbb
jno
out
pop
push
test
cmc
xor
mov
push
xlat
fwait
add
push
mov
addr16
jns
outsl
insl
add
imul
nop
or
rcll
xchg
aaa
mov
mov
lcall
lret
ds
inc
in
loope
jne
aam
push
push
in
loope
mov
insb
sbb
lret
nop
mov
or
lods
jo
mov
cld
loopne
lods
add
aad
jecxz
je
mov
mov
sbb
xor
mov
fsubs
mov
push
and
mull
push
lcall
fsubs
xchg
mov
ret
xchg
enter
pop
adc
inc
aas
aad
out
das
cmc
cmpsl
pop
fwait
movb
sbb
and
test
pop
inc
push
cmp
or
insb
repnz
das
mov
pop
adc
cmp
lds
pop
cmp
movsl
dec
xchg
out
xor
push
jg
lods
mov
xorb
sbb
mov
cmc
divb
add
ds
lock
xor
push
push
in
sbb
cmp
sbb
insb
call
and
or
xor
mov
sbb
push
lea
je
hlt
neg
sub
call
ds
imul
pop
pusha
pop
or
xchg
mov
test
fs
fstl
xor
outsl
inc
dec
insl
in
idivb
and
roll
mov
and
in
push
imul
mov
fdivs
xchg
lods
sbb
pop
cwtl
cmc
add
jno
mov
sbb
cmp
mov
add
cmc
orb
loope
or
adc
jmp
shrb
jnp
add
cmp
dec
sub
jge
lahf
shr
add
add
xchg
sbb
ja
mov
iret
cltd
insb
outsl
push
jnp
mov
push
mov
sub
test
shrb
jg
pop
xchg
lea
sbbl
dec
jb
xor
dec
clc
outsb
xchg
jne
in
xor
jl
ds
mov
lret
test
sbb
mov
test
gs
or
inc
out
jmp
mov
jno
pop
mov
imul
inc
loopne
stos
xchg
cld
cmp
push
cmp
jns
rol
cmp
push
pusha
xor
push
jns
xor
jbe
pop
pop
cmp
mov
inc
push
ror
fstl
add
mov
jo
mov
stos
and
jo
pop
or
iret
hlt
cld
and
add
in
insl
jne
push
mov
rolb
sahf
dec
jmp
sbb
repz
in
test
add
sub
fdecstp
dec
aaa
xor
in
test
push
int
cmp
pop
dec
push
stc
inc
cmp
sbbb
shlb
ljmp
pop
shr
dec
bnd
outsl
insb
icebp
dec
in
dec
pop
and
add
xchg
adc
inc
jmp
xor
jne
mov
outsl
mov
sbb
ret
repnz
in
pop
adc
jecxz
jb
mov
dec
ds
es
xor
sbb
mov
or
out
fistpll
cld
push
or
inc
inc
cmpsl
push
aaa
jp
mov
inc
call
addr16
mov
xor
and
jecxz
cmp
insl
xor
inc
sbb
jne
or
xlat
fs
andl
mov
jbe
pop
iret
adc
popa
fwait
mov
roll
test
jae
into
cli
rorl
movsl
int3
sub
mov
scas
pop
lods
jo
mulb
subb
jbe
adc
sbb
cmpb
adc
pusha
mov
jnp
outsl
mov
xlat
add
pop
mov
lret
fdivs
sub
dec
mov
mov
xor
fwait
adc
shll
lods
repnz
dec
or
cltd
aad
xchg
xchg
and
push
arpl
cmp
inc
push
stos
push
add
bound
frstor
popa
mov
pop
div
and
inc
inc
mov
sbb
push
xor
xor
in
push
push
pop
add
loop
lds
daa
mov
ficomps
subb
pushf
rcll
movsl
pop
jo
cli
sbb
mov
out
js
inc
stos
jae
out
cmp
aad
fmul
pop
lods
jge
popa
es
jae
xchg
leave
sti
jecxz
cmpsl
ljmp
sbb
mov
xor
js
or
imul
or
xchg
add
cmc
xchg
fucom
sub
popf
outsl
lea
dec
mov
je
mov
shll
popa
mov
mov
lds
fs
fsubrs
aaa
or
xchg
xchg
sbb
imul
inc
hlt
sbb
fwait
stc
insb
dec
sbb
adc
sub
adc
rclb
jb
ja
js
movsb
shl
cmp
mov
stos
mov
stc
imul
imul
pop
iret
jno
mov
icebp
xor
sub
sahf
push
inc
jo
cli
jmp
push
out
mov
or
arpl
xchg
or
adc
scas
sarb
in
xchg
xchg
jbe
pop
clc
push
push
lods
cmpsl
fdivrs
and
lcall
hlt
outsl
notl
adc
decb
into
iret
decb
mov
mov
push
imul
mov
mov
andl
mov
out
pop
loopne
shll
movsl
popa
mov
stos
mov
cli
icebp
in
roll
subl
push
sbb
sbb
mov
dec
jno
adc
ds
xor
mov
out
push
pop
jp
arpl
add
cs
ficoml
adc
jmp
xchg
movsb
frstor
mov
loope
or
ret
outsb
pushf
lahf
popf
jg
mov
test
clc
sahf
pop
dec
mov
repnz
inc
out
adc
sub
jnp
adc
stc
or
imul
scas
subb
inc
fisttps
lods
cwtl
jns
dec
cmp
sbb
sub
lock
rorb
cli
sti
add
cmpsl
addr16
mov
or
mov
call
sbb
adc
push
jmp
lock
sahf
ret
shl
fbstp
ljmp
push
cmpsb
sbb
xorb
mov
hlt
xlat
sub
lret
rolb
cmp
inc
push
xor
test
nop
jmp
sbb
icebp
sub
mov
jo
shrb
mov
imul
push
enter
jecxz
sub
addl
stc
aaa
lret
scas
xor
sbb
push
ret
popf
das
icebp
xorb
mov
jge
sub
adc
scas
cmc
push
push
sbbb
and
in
mov
out
dec
adc
fimuls
mov
repnz
fsubr
xor
into
fwait
inc
fists
pop
sub
or
testl
fmull
fists
mov
mov
pop
adcb
rclb
rolb
push
fisubrl
xor
push
sub
sti
in
mov
dec
cwtl
orl
scas
lcall
daa
cwtl
sbb
dec
adc
mov
test
mov
clc
add
scas
inc
std
sub
jmp
push
pop
cmp
stc
add
jl
jne
inc
jmp
sarb
nop
add
stc
mov
negl
xchg
fcmovnb
mov
ljmp
testb
dec
sub
push
pop
jae
cmc
mov
pop
push
mov
inc
xchg
inc
sbb
out
xlat
mov
mov
jnp
mov
repnz
pop
orb
dec
push
ljmp
lock
inc
sub
inc
ret
mov
mov
push
add
mov
dec
xchg
fsubrs
xor
push
jmp
aam
bound
loope
push
scas
mov
mov
mov
dec
and
loopne
adc
lahf
mull
sbb
icebp
mov
test
sbb
jmp
cmc
sub
out
inc
mov
ret
js
sbb
lgs
dec
das
insb
lock
push
cs
inc
scas
xchg
into
cs
call
out
mov
repz
pop
add
mov
add
cmpsb
insb
insb
scas
cmpsb
insl
lret
xor
adc
pushf
inc
xchg
adc
mov
fwait
shlb
cmp
lds
sub
scas
pop
ljmp
dec
push
fwait
std
jl
jle
fists
pop
push
mov
cmc
dec
add
mov
loopne
jecxz
sub
add
cmp
push
ret
fcompl
xor
fisubrl
stc
mov
push
push
mov
push
add
out
xor
icebp
hlt
pop
pusha
add
sbb
test
xchg
push
jmp
lret
mov
mov
dec
jle
in
or
sub
stos
clc
push
jl
inc
shlb
jle
outsl
mov
jo
xlat
mov
jl
mov
mov
repz
test
in
fidivrs
addr16
dec
mov
jg
rol
js
jns
lret
sbb
push
xchg
aas
dec
popa
jbe
das
mov
and
pop
arpl
or
inc
cmp
xlat
movsb
pop
cld
and
test
and
jne
mov
sbb
xchg
jne
shll
mov
lock
imul
int3
cli
adc
jae
push
stc
repz
movsl
jmp
repz
les
inc
jmp
cmp
dec
out
pop
jmp
inc
aad
out
mov
sub
lahf
push
mov
rcrb
jo
icebp
dec
cmc
fwait
sbb
aam
daa
push
dec
and
clc
outsb
xor
jle
pop
lds
xchg
add
push
dec
repz
and
jo
sarb
xchg
ds
dec
aad
mov
push
inc
and
ds
jp
xor
in
iret
push
xchg
jl
xor
adc
dec
xor
ljmp
and
push
rolb
dec
je
aas
sub
in
imul
xchg
xchg
stc
sub
xor
pop
popa
mov
adc
aam
mov
xchg
subb
mov
add
or
addr16
jge
fnstcw
push
xchg
cmp
xor
test
gs
leave
mov
jmp
add
out
add
cmc
inc
jle
cmp
mov
push
pop
pop
push
lret
mov
shrb
movsl
popa
popa
sti
cmp
add
lahf
mov
push
inc
dec
fwait
adc
xchg
mov
leave
or
cmpsl
subl
jo
jmp
jnp
movsb
lret
out
sub
jbe
push
mov
mov
repnz
popa
inc
lret
loopne
scas
dec
xchg
or
inc
loopnew
push
stos
stc
loop
xor
push
imul
lock
cmp
pushf
arpl
mov
rolb
xor
notb
adc
xchg
fld1
adc
fisubl
xor
call
loope
adc
es
andl
leave
lcall
cltd
cmpsl
ret
mov
jns
lcall
das
and
lcall
dec
jge
sub
push
lods
push
and
mov
and
sbb
in
sbb
push
sub
enter
jns
adcl
add
es
fs
and
aas
inc
pop
cmpsb
mov
dec
xchg
shrb
or
mov
loope
or
out
scas
mov
and
repnz
lods
mov
jp
mov
and
mov
push
jmp
loop
ficompl
negb
lock
ret
sbb
shlb
pop
xor
lods
fs
idivb
lods
call
push
lret
dec
into
fldl
notb
mov
adc
adc
adc
scas
xlat
cmc
or
push
ja
pop
js
adc
sub
adc
pop
pop
jns
jbe
fs
add
sbb
outsl
int3
cmp
lcall
test
pop
pusha
addl
pop
ret
lret
shll
nop
fstp
xchg
mov
rorl
pushf
sahf
icebp
sbb
imul
rolb
adc
xor
mov
or
ljmp
push
mov
fldenv
mov
cmc
push
or
pusha
mov
cmp
fwait
jo
inc
leave
aam
inc
ret
adc
cmp
iret
rcl
mov
jae
in
xchg
mov
fst
sbb
cmp
sbb
jg
insl
adcl
dec
gs
xchg
mov
in
cli
inc
xchg
xchg
mov
xchg
xor
cs
out
mov
ja
enter
dec
es
lods
adc
inc
jle
loope
test
jp
mov
into
stc
or
das
add
cmpsl
xlat
or
faddl
imul
cli
cmp
lds
mov
clc
leave
push
xchg
mov
shl
in
xchg
push
repz
lods
or
mov
mov
cs
dec
push
inc
shll
sti
and
sahf
fldl
lods
pop
push
mov
push
out
pop
or
adcl
push
shl
xor
mov
cmp
leave
add
sbb
flds
in
sbb
insb
clc
fwait
push
jge
or
mov
std
movsl
fildll
aam
dec
sub
inc
cmp
push
ret
jne
pushf
push
jge
gs
or
xor
ljmp
in
or
mov
push
push
enter
push
shrl
mov
outsl
pop
lds
push
push
mov
inc
pop
addl
sahf
das
fnstenv
pop
push
lds
inc
dec
out
push
rolb
fwait
cli
and
mov
dec
mov
loop
enter
rcrl
xor
call
insl
js
add
pop
xchg
sbb
pop
stos
jnp
xorl
mov
data16
mov
sbb
lret
sbb
adc
sbb
stos
aas
xor
andl
add
cmp
je
and
lods
xor
repz
adc
insb
add
je
lods
pop
add
scas
or
pop
sub
jp
daa
lret
mov
int3
push
jno
ss
ljmp
and
rorl
mov
stos
addr16
notb
mov
popf
add
push
xor
adc
cltd
ss
and
sahf
mov
ret
inc
sbb
pop
jecxz
xor
xchg
shr
cmc
cmp
ret
push
jmp
or
outsl
mov
inc
movsl
daa
iret
push
push
cmp
push
sti
inc
daa
jnp
je
cli
fwait
lahf
js
out
iret
out
mov
mov
and
jmp
pop
mov
adc
sub
es
movsb
je
testb
int
mov
in
dec
stos
xor
mov
sub
leave
mov
int
aam
xchg
mov
fdivrl
and
cmp
jge
sbb
jg
aad
insb
aad
aam
ljmp
jle
jns
or
sbb
insb
rcrl
mov
popl
push
pop
mov
out
xchg
dec
pop
and
xchg
dec
mov
scas
data16
icebp
pop
mov
out
lods
cmc
dec
leave
mov
out
pop
stc
pop
or
cmc
and
out
out
ljmp
cs
hlt
in
sub
pop
xchg
mov
mov
xchg
jecxz
dec
loop
in
pop
or
arpl
cmpsb
lds
cli
lcall
inc
sub
lea
adc
int3
mov
hlt
scas
call
mov
dec
out
aad
push
pop
pop
and
jne
inc
mov
popf
fdivrs
dec
or
insl
movsl
push
lret
jl
and
pop
test
out
fcomip
repnz
fmul
mov
xchg
mov
cld
lds
or
or
dec
jbe
sbb
xchg
lcall
pop
xchg
push
push
add
and
mov
jns
insl
stc
pop
ret
ret
mov
cmc
imul
add
scas
mov
lods
xchg
inc
adc
or
hlt
stos
add
xchg
fs
fisubl
add
les
in
pop
rol
pusha
dec
dec
adc
movl
cld
mov
mov
lahf
daa
dec
nop
inc
pop
jne
cmp
dec
dec
and
mov
jb
negl
mov
inc
std
xchg
out
lods
in
xchg
inc
mov
in
jb
pop
jbe
cltd
cmpsb
xchg
jl
shll
pop
fdiv
mov
out
fwait
push
popa
enter
dec
add
cmpsb
dec
fucomi
aam
hlt
movhps
fdivrs
hlt
andl
mov
test
pop
ficomps
mov
popf
out
mov
xchg
imull
push
mov
lds
push
xchg
mov
hlt
into
ljmp
fcmovnu
add
lods
outsl
test
out
add
mov
push
adc
add
jmp
lahf
sbb
dec
in
aad
cmc
movsb
push
imul
popf
xchg
sar
push
push
stos
loop
js
xchg
clc
pusha
inc
popf
mov
mov
sti
fmuls
mov
push
mov
xor
jmp
mov
int3
pop
push
ds
cmc
sbb
popa
test
inc
addr16
ret
xchg
shrl
push
rcll
daa
in
dec
adc
xor
stc
cs
movl
frstor
push
sub
xchg
pusha
aad
sbb
fxch
mov
ret
repz
adc
mov
and
out
mov
pop
mov
in
cltd
xchg
xor
pop
call
cltd
scas
test
cld
jno
push
jb
sub
pop
add
mov
or
dec
jo
jb
inc
leave
lahf
pop
pushf
or
push
jnp
daa
lods
icebp
xor
sbb
repnz
popf
cwtl
clc
pop
fwait
xchg
inc
pop
cltd
imul
xlat
xor
adc
inc
inc
stos
sti
in
dec
xor
pop
push
lds
sub
add
stc
jno
inc
sarl
test
imul
inc
stos
mov
push
popf
insb
loope
pop
das
xlat
xor
enter
je
in
bnd
jle
cmp
rorl
mov
int
jle
test
or
into
sbbb
xor
call
fxch
ss
test
ret
jo
mov
stos
sub
jp
and
dec
addb
xchg
mov
mov
outsl
sub
mov
lcall
pop
popf
jg
dec
test
ret
push
iret
jno
or
out
sbb
lahf
fbstp
sahf
test
rorl
notl
adc
jecxz
mov
test
cmc
add
dec
stos
inc
fmull
jne
push
push
and
or
in
xchg
cmova
fwait
adcl
pop
pop
xchg
xchg
mov
ret
sti
clc
test
adc
stos
pushf
mov
inc
mov
cltd
imul
push
loopne
mov
mov
ja
mov
jge
cltd
fsts
insb
test
mov
daa
jo
xchg
jne
lds
sub
lods
mov
test
hlt
dec
mov
popa
lods
cld
xor
out
fs
test
aas
xchg
daa
data16
imul
adc
ja
int3
in
push
cmpsb
fwait
lock
inc
mov
outsb
ret
fldenv
aad
inc
xor
xor
inc
and
add
mov
mov
xchg
repnz
popa
cmp
mov
pop
and
mov
sub
cmpsb
xor
mov
jge
scas
loop
inc
pop
inc
aaa
jmp
popf
sub
dec
cmp
mov
mov
out
fildll
xorl
daa
pop
icebp
in
outsb
pop
pop
push
and
cmp
mov
std
ljmp
xor
xchg
mov
xor
flds
jle
out
ljmp
cmp
lods
sbb
sub
mov
mov
outsl
inc
push
add
dec
push
ljmp
lret
sti
gs
insb
mov
in
fwait
cmp
mov
cli
push
sbb
mov
xor
xchg
movsb
mov
mov
adc
lahf
sbb
add
jmp
sub
dec
js
adc
addb
push
jbe
popa
pop
mov
adc
jmp
shrb
mov
xchg
add
push
pop
in
push
hlt
cmpsb
movsl
ror
jo
add
add
insb
push
xchg
dec
ss
popa
int3
xor
adc
cld
dec
scas
xchg
mov
xor
mov
xor
jno
ljmp
pop
push
xor
mov
mul
pop
test
out
test
call
xorl
mov
imul
lret
scas
push
pop
es
stc
or
push
pop
xchg
sbb
in
pop
xor
lcall
sub
mov
mov
mov
mov
xchg
sbb
je
xor
push
and
cmp
pop
or
dec
inc
inc
xchg
mov
incl
les
cmc
cmc
add
pop
dec
inc
mov
idivb
push
insl
rorb
mov
jmp
mulps
xor
push
in
cmp
pop
cmpsb
add
loope
movsb
movsb
or
or
es
mov
mov
or
or
test
adc
push
mov
ret
mov
popf
add
enter
pop
jge
add
scas
jmp
in
xchg
in
out
ss
adc
mov
inc
icebp
xchg
jae
jb
lds
pop
stos
jge
insl
cmp
add
sti
es
cli
pop
stos
pop
jp
dec
cld
add
jo
add
push
push
xor
je
stos
push
jae
cmp
adc
outsb
mov
pop
rcrl
cmp
mov
adc
ret
into
pop
and
xor
rol
movsb
and
dec
dec
mov
jge
pop
xchg
mov
xchg
enter
andl
xchg
and
int
adc
scas
mov
pushf
jb
ds
mov
push
lret
data16
das
sub
dec
fnstcw
ss
lcall
pop
pop
and
jo
shrl
dec
loopne
cmp
xchg
sub
les
xor
inc
mov
push
sbb
call
push
inc
lods
je
adc
or
sub
adc
lcall
cmp
xlat
jge
push
cmp
data16
push
add
int
or
sub
fs
lcall
add
cmc
cltd
dec
gs
jo
sbb
dec
loope
test
sub
inc
jge
lds
add
jb
and
inc
in
jns
or
cmp
or
push
dec
fnstenv
imul
cmp
mov
push
lds
cmp
and
dec
add
pop
xchg
test
and
popa
adc
push
mov
ja
sbb
sub
idivl
mov
insl
or
jle
xor
lods
mov
test
sarb
out
in
xchg
inc
aad
pop
aas
stos
xor
int3
imul
cmp
ljmp
push
lods
xorb
adc
push
add
arpl
aad
xor
pusha
jae
cli
scas
xchg
push
sarb
adc
inc
mov
pusha
sub
push
or
sbb
out
jge
pop
pop
sbb
les
ja
pop
jnp
cmp
or
clc
xor
repnz
dec
repz
jo
mov
sub
dec
xchg
ret
push
testb
mov
cltd
ja
inc
dec
xor
mov
or
adc
add
jns
sub
nop
pop
add
dec
icebp
inc
inc
xchg
push
fisttps
test
lcall
adc
lods
push
mov
cmpsl
popf
xchg
add
inc
imull
inc
jno
mov
dec
pop
test
fs
adc
mov
cmp
movsb
cmp
negb
fimuls
cmp
testl
movsb
xor
ljmp
jmp
iret
fnsave
xor
out
jae
sub
out
xchg
insb
ja
or
dec
sahf
lock
into
rcr
mov
js
in
dec
dec
dec
mov
adc
in
pusha
daa
jg
out
cmp
mov
inc
jns
lahf
test
or
idivb
ret
pop
push
mov
adc
fistps
jns
mov
xchg
adc
xorb
mov
sub
pop
adc
fcoms
mov
arpl
inc
or
movsl
sub
mov
cli
mov
bound
iret
or
pushf
jecxz
xor
outsl
xchg
in
or
cltd
repnz
mov
fdivrs
aaa
lret
xor
inc
or
mov
leave
repnz
cli
sbb
js
icebp
jmp
pop
xor
rorl
push
bnd
cmp
push
sub
push
shlb
call
addb
adcl
dec
pop
nop
cld
cmp
out
in
addr16
mov
mov
cmp
movsb
jbe
sbb
sub
cwtl
adc
dec
fsubs
sti
cmpsl
popa
xchg
fs
rclb
or
mov
xor
cmp
xlat
add
pop
mov
push
loope
jl
int3
icebp
sahf
addl
jmp
add
mov
pop
int
cwtl
outsb
lds
lds
cmp
andb
mov
inc
inc
pop
popa
jmp
aam
xor
dec
mov
mov
pop
loope
adc
enter
inc
dec
scas
arpl
arpl
sbb
bound
xor
jnp
inc
insb
mov
imul
jno
pushf
popf
icebp
push
dec
adc
inc
jp
lods
rol
jno
rcrb
lds
int3
push
in
aaa
or
clc
mov
xchg
and
repz
mov
pushl
or
rolb
cli
push
sub
rclb
out
fidivs
sub
cli
push
or
and
ss
das
and
pop
xor
inc
adc
out
jmp
mov
xchg
pop
rcrb
mov
push
test
sub
mov
push
mov
aas
lret
int3
stos
adc
cwtl
dec
ss
cltd
xor
jmp
shrl
int3
jno
pop
adc
push
in
inc
cld
or
imul
fldt
test
sbb
sub
jmp
mov
loopne
pushf
and
inc
jmp
rcrb
ss
lret
xchg
mov
pop
push
fcmovb
fadd
movsl
lret
dec
jmp
xor
push
ja
xor
cmp
loop
push
dec
in
sub
gs
sub
inc
jmp
adc
lea
and
test
pop
xchg
mov
xor
repz
shlb
jne
loopne
lret
xchg
je
imul
cmp
dec
mov
arpl
jecxz
sbb
pop
pop
sub
pop
sub
xor
pop
std
sub
xchg
popl
and
movsl
sbb
dec
push
pushf
insl
clc
scas
andl
repnz
sbb
movsl
out
or
add
out
dec
cmpsb
sbb
jmp
fstp
cltd
lcall
incl
das
mov
testb
cmp
add
dec
sarb
scas
aam
fucom
les
jge
mov
pop
fsubl
jecxz
int
pop
aas
mov
cmpsl
jp
adc
sahf
aam
mov
addr16
scas
dec
pop
int
movsb
xlat
in
xor
insb
add
test
data16
daa
dec
out
es
pop
or
push
mov
jbe
mov
shl
xchg
jle
repz
aad
ret
iret
dec
sbb
lock
imul
out
xor
inc
mov
xchg
xlat
packsswb
add
sar
sbbl
mov
sbb
sub
xchg
ret
add
jecxz
in
xor
into
call
out
outsb
lcall
fcmovu
jl
mov
jle
sahf
nop
inc
cmc
cmp
fstpl
shrl
mov
pop
clc
int3
insl
sbb
js
dec
rolb
in
data16
mov
cltd
pop
stos
pusha
mov
loope
jnp
cmpb
mov
hlt
cmp
hlt
cmp
and
lahf
leave
dec
data16
out
movsl
clc
ret
mov
jae
sbb
mov
mov
push
push
jmp
xor
dec
lret
je
xorl
jns
push
icebp
lock
clc
pop
jge
popa
mov
dec
mov
inc
dec
jl
ljmp
jbe
popf
fmull
push
cmp
vpsraw
lods
fcmovu
cmp
dec
pushf
add
outsl
std
test
xchg
enter
push
add
ja
add
or
mov
pop
pop
jl
cmp
xchg
jge
sub
mov
mov
and
jp
arpl
int
or
ficomps
nop
cmc
dec
push
adc
adc
add
xchg
sbb
ds
fsubp
jge
sub
hlt
xor
lods
out
cmp
daa
mov
jb
inc
mov
sub
ljmp
jge
int
or
jge
imul
sub
pushf
inc
jg
pop
lcall
lcall
pop
negb
adc
aam
jmp
bound
addl
or
mov
popa
push
pop
pop
lret
fwait
addr16
and
mov
es
jge
mov
mov
add
xchg
lret
xor
dec
out
inc
push
adcb
popa
inc
and
jbe
int3
data16
xchg
call
sbb
cmc
push
mov
add
arpl
mov
adc
xorb
rcr
je
dec
cmpsb
repz
pop
call
fisttpl
cmp
imul
repnz
repz
add
insb
sahf
lret
js
das
jle
cmp
inc
aaa
mov
sbb
andl
bound
pop
sarl
fwait
pop
lods
xchg
inc
pop
ljmp
inc
sahf
cmpsl
movsl
jb
and
clc
imul
js
pop
xor
and
xor
lods
sbb
dec
cmp
pop
or
fcoms
or
sbb
add
insb
mov
fldenv
enter
fnstenv
call
xorl
mov
inc
inc
mov
ret
imul
inc
out
and
loope
cmp
push
js
scas
subl
mov
adc
outsb
stos
popf
pop
clc
insb
daa
inc
add
dec
cmp
sbb
enter
xor
lods
enter
mov
insb
pop
in
test
int
sbb
pop
insl
xor
sbb
adc
sbb
das
push
cmp
movb
subl
loope
imul
sbb
movsb
push
in
stos
pushf
fimuls
push
cmp
popa
and
cmp
add
add
ja
aaa
cld
sahf
xchg
mov
inc
jl
xchg
sbb
in
repnz
sbb
leave
or
outsb
jae
inc
movsl
out
xor
inc
add
neg
jno
push
sub
push
xchg
aam
inc
aad
adc
les
repnz
mov
lock
out
mov
cmpsb
daa
sub
pop
mov
jle
bound
add
outsl
fs
mull
jg
inc
ds
jl
in
jae
std
inc
mov
fldl
not
push
test
mov
fisubrl
in
jmp
mov
xchg
xchg
shll
fmull
in
add
leave
and
mov
lcall
rcll
push
aad
mov
aam
rcrb
ds
xchg
jge
lcall
push
lcall
adc
cmp
test
pushf
or
in
xor
addr16
repz
cmp
sahf
mov
les
ja
jbe
setnp
xchg
in
lret
pop
mov
fwait
cmc
xor
ja
mov
jecxz
dec
and
cmp
sub
cld
stos
pusha
sub
lahf
push
pop
jbe
lcall
insl
cld
loop
jae
pop
aam
or
jae
jbe
inc
fldt
hlt
adc
fcomps
scas
xchg
push
sti
leave
add
pop
add
lock
movsb
imul
or
fstps
addb
or
fidivrs
inc
fidivl
sbb
outsb
call
sarb
xor
or
aad
aam
sbb
mov
pop
jb
aas
push
pop
loop
negl
das
lds
mov
sub
mov
cmp
inc
fwait
lods
jmp
pop
lea
push
pop
aas
clc
cli
fiadds
test
insl
xchg
addr16
rorb
mov
and
push
pop
sbb
cld
or
sbbb
xor
clc
lcall
loope
jle
mov
sub
sahf
negb
je
push
stos
sbb
rclb
mov
arpl
inc
mov
enter
fisubrl
iret
out
loop
sbb
jo
pop
fcmovnbe
stos
out
push
pop
fcmovne
jbe
cmpsl
nop
jae
scas
push
fxch
pop
add
jmp
pop
inc
dec
and
ror
add
popa
imul
repz
mov
mov
adc
and
or
rcr
adc
out
dec
fwait
movsl
or
aad
jl
ret
aaa
jo
leave
push
aaa
push
scas
mov
int
ss
xor
es
je
sbb
mov
and
lret
cld
add
inc
dec
cmp
xor
push
cmp
imul
js
inc
scas
stos
into
mov
jb
cmp
cmc
dec
repz
inc
pop
subl
jns
mov
out
leave
pop
out
pop
cld
loope
pop
in
jl
push
add
daa
cmpsb
popf
mov
arpl
pushf
gs
sbb
fdivrs
cmp
jg
jo
mov
push
scas
test
inc
pop
dec
popa
mov
sbb
xchg
mov
aaa
mov
in
movsb
sub
mov
cmp
mov
out
sbb
cmpsl
in
pusha
mov
inc
scas
xchg
adc
fwait
lret
pop
arpl
add
mov
xchg
cmp
and
pop
mov
je
mov
shll
dec
pop
mov
mov
pusha
mov
cwtl
and
fnsave
xchg
push
dec
mov
push
xchg
jne
mov
sbb
sub
cmp
mov
jmp
fcomps
mov
sub
or
and
pop
mov
and
movsl
aaa
jmp
cmp
test
adc
outsl
sbb
mov
cmc
popf
jle
adc
gs
pop
xchg
shll
int
aas
xchg
clc
mov
push
jp
shl
sbb
xorl
addr16
es
rorl
xchg
and
repz
lret
mov
lea
loop
xor
in
cmp
je
mov
out
jbe
fnstenv
enter
inc
loop
fidivs
sbbb
repnz
addr16
sbb
mov
mov
leave
xchg
mov
rcll
std
sub
xchg
test
pop
lds
decb
add
outsl
out
mov
sbb
dec
inc
pop
xlat
inc
lods
mov
outsb
inc
ret
lods
aaa
ljmp
sbb
stc
dec
add
test
push
adcb
and
sub
push
and
sub
xor
pusha
push
push
aad
sub
jb
and
pop
rclb
inc
and
sub
xchg
lods
xchg
hlt
cltd
cmp
int3
cmc
aas
shl
lahf
inc
inc
mov
leave
fdivr
sti
stc
cmp
add
aaa
test
xor
jp
xchg
cmc
aad
cmpl
ss
nop
push
push
cmp
ds
pusha
into
rcr
aaa
test
shr
jp
jnp
ljmp
or
ret
push
adc
adc
sbb
mov
mov
push
jbe
push
cmpsb
pop
jge
pop
mov
push
js
lea
cmp
mov
pop
cmp
dec
dec
lods
test
cmpsb
dec
lock
pop
jge
push
rclb
xchg
rcrb
es
rolb
lcall
test
xchg
cli
adc
cmp
mov
movsl
adc
mov
mov
pop
sbb
daa
sub
jnp
or
add
jecxz
stos
mov
popa
jp
lcall
lcall
inc
mov
pop
lret
inc
into
jg
sahf
sbb
push
push
xor
popf
jbe
mov
xchg
sbb
rcrl
push
mov
ret
movsl
push
es
cmp
or
std
movsb
pop
mov
lret
add
es
js
sbb
ja
pop
adc
dec
repz
ds
mov
dec
mov
flds
out
and
xlat
mov
inc
fcoml
mov
arpl
xchg
mov
cmpsl
insb
mov
je
push
jns
pop
stos
clc
push
cltd
into
mov
fcmovbe
sbb
mov
pop
popf
outsl
or
add
fcomps
pop
mov
ret
fcomps
xor
out
and
xor
or
ficoml
push
cmpsb
fmul
ljmp
sbbb
inc
pop
fisubs
mov
mov
insw
dec
jl
mov
jmp
adc
push
arpl
dec
xorl
pop
xor
sbb
aad
cwtl
pushf
lea
pop
pop
out
xor
stc
cmp
push
dec
ret
std
cmp
or
popf
bound
jle
push
xchg
adc
fisttpl
mov
aas
lds
imul
mov
sbb
daa
mov
sub
mov
loop
in
mov
xor
and
adc
dec
enter
shl
mov
jo
sub
cmpb
push
in
dec
xor
sbb
cli
fsubrl
pop
testb
flds
clc
je
or
cmc
push
lcall
mov
aad
popa
add
xchg
adc
das
add
inc
jmp
xorb
and
sbb
sbb
xor
loope
jmp
mov
loope
pop
scas
out
ficoms
negl
decl
push
mov
sarl
cli
stos
inc
mov
cmp
nop
adc
adc
or
test
call
lods
lods
nop
out
jo
gs
xchg
mov
out
mov
scas
rcrb
je
mov
stos
loopne
cmc
dec
jnp
dec
psubsw
sbb
xor
subb
movsl
sbb
jecxz
pop
out
ret
mov
movl
sbb
stc
ret
sub
xchg
add
fmul
push
movsb
imul
insl
lea
setne
popa
pushf
repnz
in
inc
mov
jnp
mov
push
cmpsl
mov
test
lahf
and
mov
sub
pop
in
mov
inc
sub
add
add
push
adc
xchg
sub
sbb
enter
negb
push
lret
clc
cmp
mov
cmpl
or
mov
dec
sub
xor
pop
shll
in
cwtl
push
xor
add
jo
cwtl
pop
sbb
loop
stos
in
jb
outsb
or
jmp
jle
xchg
push
sbb
or
jae
jo
push
cmp
jl
push
mov
sub
fildl
scas
imulb
or
xchg
clc
ret
mov
push
add
xchg
cmp
xchg
push
stos
jl
jb
lock
rorb
fimull
push
daa
adc
scas
and
ficoml
push
adc
inc
or
sbb
inc
xor
cmp
mov
xchg
sahf
ja
jae
jne
pop
loopne
push
pop
in
xchg
mov
add
sub
loope
inc
popa
adc
out
and
cmp
outsl
cmp
cmp
sbbl
insb
sbb
insl
fwait
pushf
cwtl
daa
inc
sub
popa
movsb
int
enter
adc
imul
je
mov
insl
sub
je
test
lret
inc
push
movsb
pop
outsb
daa
xchg
jl
jb
xchg
push
add
imul
pop
test
push
sarl
stc
push
cmp
dec
insb
inc
daa
ja
push
popf
ds
push
rcl
sahf
mov
roll
or
jno
leave
push
mov
sarb
in
cmp
inc
rcrl
add
ss
pushf
je
mov
insb
lahf
stos
xchg
or
mov
cmp
int
outsb
ljmp
and
jb
inc
sub
test
xor
icebp
insl
pop
jl
sbb
daa
test
sub
hlt
cmp
push
out
adc
stc
imull
dec
mov
insl
push
sub
jmp
mov
xchg
push
jmp
stc
and
lds
jmp
jb
nop
add
and
cmp
aad
dec
rcrl
pop
inc
in
in
or
inc
hlt
jle
fidivrl
push
and
ret
test
loop,pn
in
adc
hlt
sbb
and
mov
pop
je
pop
loop
das
add
mov
mov
mov
sub
push
fsubrs
loopne
shll
int
xchg
or
push
out
out
ljmp
icebp
jp
xchg
dec
insl
push
cmp
pop
mov
fwait
jecxz
insl
jl
pop
cld
sahf
mov
sbb
lock
cmp
scas
call
push
loope
movsw
or
nop
in
out
fs
negl
sub
or
jp
mov
sub
cmp
cmp
fs
insb
pop
xor
jl
mov
add
imul
mov
mov
push
aas
or
mov
push
push
test
and
int
and
repnz
push
xchg
bound
js
sbb
dec
ret
lret
adc
mov
imul
xchg
pop
or
mov
call
shr
sbb
xchg
pop
pop
inc
les
std
fsub
inc
pusha
or
testl
call
or
cmc
mov
mov
mov
fwait
push
sbbl
fidivrl
lods
dec
mov
loop
insb
adcl
pushf
shl
mov
test
arpl
push
mov
gs
negb
ja
pop
lods
pop
pop
scas
es
shl
add
jg
sahf
sbb
push
jno
add
lcall
and
jmp
cmpsl
and
ds
xchg
and
les
enter
jmp
bound
cmp
sti
mov
clc
pushf
in
mov
xchg
test
call
stc
jl
mov
and
mov
dec
sti
sbbl
dec
clc
xor
outsb
shll
pop
jb
setle
das
inc
loop
xchg
sbb
mov
pop
push
or
aas
mov
dec
sarl
inc
je
cmp
add
pop
sbb
mov
cmp
xchg
inc
mov
cmpsl
iret
or
add
addr16
stc
icebp
xchg
or
data16
negl
clc
daa
into
shl
mov
lods
add
mov
lret
clc
jle
clc
xor
mov
dec
ret
ror
repz
out
sub
mov
fdiv
push
adc
jns
aam
test
xchg
mov
push
xor
icebp
in
out
or
leave
cmp
push
rorb
sub
pop
jo
repz
iret
lret
xor
push
hlt
and
push
repnz
pushf
outsb
out
mov
xchg
ss
add
cli
pop
out
xchg
push
shl
adc
out
cltd
mov
jbe
dec
xchg
mov
rcrl
mov
or
sbb
xor
nop
xchg
mov
imul
ss
pushf
ljmp
stos
xlat
mov
imul
ds
xchg
out
sub
push
cmp
negb
out
in
nop
cmp
dec
lock
dec
mov
xchg
popf
orl
cmp
mov
mov
dec
push
lahf
xchg
mov
jne
jg
inc
repz
sub
push
xor
adc
xorl
xchg
movsb
test
lret
out
mov
test
rcl
jne
mov
scas
mov
mov
xchg
pop
sub
jno
or
ret
push
pop
add
sbb
stos
jae
mov
andb
inc
jecxz
scas
and
out
push
fiaddl
out
outsb
mov
test
sbb
pop
mov
fcmovbe
xchg
loope
dec
sbb
xor
or
lret
mov
leave
ficomps
mov
adc
test
sbb
addl
in
pusha
repnz
cld
jl
pop
mov
cmp
sub
jmp
icebp
cmc
loop
dec
aas
push
fwait
pop
cld
inc
iret
lds
add
inc
hlt
and
xchg
xor
mov
lcall
pushf
leave
xchg
sub
cmp
add
xor
scas
in
hlt
cmp
dec
mov
sbb
jb
mov
push
or
test
adc
test
insb
sarl
sarl
inc
jl
jno
xchg
push
js
loop
adc
insb
out
mov
mov
stos
mov
push
out
cmpsb
ret
es
lea
inc
xchg
xlat
pop
icebp
scas
cs
gs
fdivp
mov
sub
in
pop
push
rcll
cmp
fs
inc
rol
popf
aas
and
push
lcall
mov
std
insl
jns
sbb
aad
fisubs
filds
fwait
movsl
jno
sbb
clc
mov
dec
mov
cmp
mov
sti
mov
into
lcall
cltd
movsl
hlt
sub
push
inc
sbb
xchg
lcall
adc
push
ljmp
cmp
rclb
out
filds
cmp
dec
adc
fsubrs
loop
leave
xor
pop
sbb
mov
push
mov
sub
mov
icebp
pop
shr
mov
inc
xor
mov
push
shlb
inc
test
add
ss
mov
ss
and
cmp
imul
and
ret
xor
mov
xchg
std
rcrb
fs
push
mov
enter
mov
inc
out
fstpl
push
mov
jle
ret
inc
push
aaa
jo
push
pop
xchg
cmp
add
xchg
call
lret
push
sub
negl
rorl
xor
xor
inc
jne
fwait
call
adc
insl
pushf
dec
stos
sbb
enter
and
xlat
lea
adc
clc
fnstenv
out
or
mov
mov
ss
lock
and
push
cmc
inc
test
cmp
scas
jp
aas
jno
test
aam
push
popf
jl
clc
push
fadd
cltd
pop
sub
xchg
add
sbb
sahf
cmpsl
pop
jg
dec
cmpsl
jge
cmpsl
sbb
int3
sbb
cld
xlat
fdivl
leave
mov
popf
xor
enter
aas
pop
and
and
sbb
xchg
ret
inc
adc
dec
mov
mov
stc
clc
or
lods
mov
sbb
xlat
lret
cli
loop
rorb
fmull
lahf
pop
outsb
lods
inc
movsl
adc
push
stc
cld
ds
out
cli
in
add
jle
lea
iret
push
pushf
shl
mov
fisttpll
pusha
les
daa
cwtl
pop
or
push
fwait
adc
pop
popa
cmp
or
lahf
jg
mov
scas
notb
js
mov
nop
mov
or
ja
mov
aam
or
imul
dec
xchg
mov
movsb
mov
pop
call
aas
mov
or
mov
xchg
iret
pop
jb
xchg
stos
ja
add
lret
ljmp
andl
mov
pop
testl
mov
mov
leave
pop
adc
mov
fistpl
or
mov
int3
push
cmp
testb
sub
push
jl
xchg
sub
in
or
cli
iret
fs
lret
daa
mov
loope
pop
enter
dec
out
jp
lea
fs
xchg
stos
cwtl
call
xlat
fidivrl
jge
mov
jecxz
aad
shll
lret
sbb
push
and
stc
cltd
popa
adc
cmp
add
or
sub
add
dec
inc
mov
movsb
cmp
loope
jmp
dec
inc
leave
out
push
std
mov
fdivrl
out
inc
push
lea
inc
or
out
sbb
and
push
dec
and
mov
cmp
sbb
xchg
lret
mov
les
or
pop
je
outsl
lods
cmc
mov
sbb
sub
cmpsl
sub
xor
mov
sub
mov
xor
xchg
aad
repz
ljmp
xchg
arpl
dec
mov
or
in
jp
arpl
ss
test
pop
pop
and
popf
cmpsl
or
pop
cmp
cmp
push
fwait
push
pop
ss
shrl
ljmp
xchg
out
popa
movsl
mov
push
sub
inc
stos
fwait
inc
mov
adc
je
pop
inc
stc
into
test
xchg
jnp
testb
mov
xchg
sub
mov
cli
xchg
mov
and
pop
orl
cmpsb
bound
ss
stos
or
jae
sub
outsl
mov
mov
mov
mov
in
adc
cmp
mov
popf
jns
or
xchg
dec
lds
out
ror
ret
jmp
cmc
pop
xor
fwait
cmp
push
jecxz
mov
in
int3
rol
mov
clc
push
rclb
ret
xor
test
dec
pop
loope
jge
jnp
mov
sub
dec
adc
in
xor
mov
xor
jno
push
push
sub
and
cmp
mov
and
inc
jle
ljmp
test
inc
decl
aad
pushl
jmp
jg
adc
xor
out
sbb
nop
repz
cld
or
adc
jl
jnp
movsl
xchg
add
in
mov
jnp
mov
stos
stos
je
scas
inc
xchg
jp
lcall
dec
fwait
ret
cli
add
sahf
leave
ja
pop
shrb
mov
cltd
stc
xor
cmp
xchg
pop
les
lahf
out
jle
cmp
popf
inc
bound
jno
mov
add
out
cli
leave
sahf
call
mov
pop
sahf
and
xor
mov
xchg
inc
push
jp
nop
push
scas
xor
clc
scas
push
mov
ret
sbb
cmp
out
dec
cwtl
icebp
loop
sahf
sub
in
or
jno
mov
loopne
jo
outsb
mov
xchg
arpl
dec
and
push
or
jbe
cmp
call
les
test
or
pop
cmp
xor
jns
and
int3
aaa
jb
mov
jp
in
cld
lds
and
xchg
mov
push
cmp
cmp
xchg
lds
sub
pop
je
aam
mov
xchg
sbb
push
push
jnp
sbb
stc
push
ja
cmovae
enter
faddl
push
ficoms
loopne
inc
xchg
popf
mov
cli
mov
dec
out
jl
jp
jp
sbb
pop
xor
ss
cld
addr16
mov
jb
mov
sub
roll
dec
adc
pop
jp
add
inc
dec
dec
jae
sbb
sbb
movsl
clc
or
cltd
xchg
push
cwtl
pop
ss
dec
dec
mov
jge
jmp
push
cs
fisubl
test
mov
push
jne
popf
js
dec
subb
jl
sbb
sbb
mov
jbe
or
mov
xchg
test
push
push
lea
or
icebp
bound
lahf
jl,pn
jo
or
pop
push
and
dec
xor
pop
rcrb
daa
mov
push
arpl
mov
jmp
scas
mov
push
and
jns
jae
cltd
lahf
mov
int
and
sub
mov
add
daa
push
aad
ljmp
fwait
add
xor
mov
js
movsl
fwait
mov
xor
inc
ret
cmp
xchg
call
pop
pop
pop
mov
xor
add
clc
mov
mov
and
jmp
out
mov
dec
adcl
adc
lock
push
adc
pop
lret
mov
pop
les
dec
call
scas
dec
push
push
dec
dec
mov
fdivs
jae
inc
lret
pop
es
repz
xchg
jo
and
jb
popf
jle
rorl
mov
add
or
out
mov
mov
test
fisttpll
cld
xor
xor
das
rcrl
cltd
push
negl
add
jno
jmp
iret
decl
aas
inc
or
es
push
cwtl
inc
jbe
sbb
dec
and
jg
out
mov
inc
mov
ljmp
pop
jbe
loope
inc
push
icebp
and
aas
ljmp
in
testb
xor
inc
ja
jno
loopne
push
sbb
xchg
mov
sub
or
andb
aas
int3
adc
mov
push
call
lcall
or
xor
lods
or
mov
in
push
cltd
stos
add
mov
fs
data16
mov
cmc
popa
stos
cs
insb
jo
cmpsb
cmova
ljmp
popf
pop
xor
mov
pop
aam
mov
cmp
lods
inc
inc
dec
mov
js
ljmp
out
orl
addr16
fwait
mov
lea
ret
test
jbe
dec
sbb
out
test
ljmp
pop
push
bnd
addr16
mov
jl
js
lret
outsb
and
jbe
std
push
bound
popf
push
iret
pop
cmp
shr
je
inc
mov
cld
push
add
and
push
in
mov
inc
inc
xchg
jne
je
outsl
sub
dec
add
fistpl
insb
shl
add
lahf
and
sbb
insb
ds
mov
fs
xchg
push
inc
mov
in
icebp
xchg
push
sub
pop
xor
jmp
xchg
hlt
ret
adc
adc
jle
dec
fwait
cs
rclb
sbb
daa
cmp
daa
aam
push
cli
jp
or
aaa
mov
and
in
decb
mov
repnz
pop
push
xlat
inc
push
jne
adc
inc
mov
adcb
add
xor
lea
insb
jmp
dec
pop
enter
push
and
sub
ds
aam
jb
in
cmp
roll
adc
dec
decb
jbe
stos
lods
push
lods
clc
add
jbe
js
push
movsl
pop
cld
sbb
bound
into
movsl
stos
dec
fistpl
cmpl
and
inc
adc
mov
dec
jb
ljmp
xor
loopne
jle
fidivrs
inc
dec
into
sbb
dec
cmp
ljmp
pop
sub
ljmp
push
inc
add
mov
push
xchg
push
adc
xchg
shll
das
es
outsb
sahf
inc
mov
push
cmp
cmpsb
mov
out
dec
inc
jge
in
sub
sub
dec
repnz
inc
sub
jo
mov
loop
aam
xchg
cltd
rcrb
outsb
mov
mov
test
cmpsl
cmp
xlat
lods
lahf
inc
jmp
subl
lret
sbb
das
sbbb
sub
bound
aad
std
lods
insl
inc
xchg
insb
sbbl
mov
mov
xchg
pusha
test
out
clc
push
mov
inc
cmc
dec
cmp
mov
outsl
xacquire
je
je
fnstsw
jl
and
jae
and
lahf
xchg
adc
stos
dec
pop
pop
shlb
lahf
mov
dec
fcom
sbb
jmp
push
repz
fistl
cltd
and
sub
sahf
jecxz
sti
xchg
outsl
inc
pop
mov
lods
sahf
dec
pop
scas
and
push
aas
repz
pop
getsec
fsubs
pop
imul
sbb
out
and
xor
xor
xchg
filds
add
stos
dec
xchg
movsl
mov
gs
test
inc
out
pop
std
adc
sub
pop
ss
xchg
or
adc
adc
jle
fimull
jge
lea
add
add
mov
movsl
xor
shrb
aaa
das
dec
adc
test
inc
cmpsb
jecxz
push
hlt
cmpsb
fcoms
repnz
jo
out
stc
shrb
ja
push
aaa
adc
insl
rclb
and
sub
and
add
addr16
adc
inc
and
popa
movsb
in
jle
cmp
push
xor
sbb
out
js
mov
fstpt
ficomps
icebp
inc
ficoml
loope
cmp
fildl
pop
outsb
xorl
push
dec
icebp
repz
mov
out
jge
bound
mov
jne
and
incb
into
cmp
fldcw
cmpsl
insb
sti
popa
in
lods
add
add
incb
filds
xor
lods
push
pop
sti
pop
xchg
and
into
in
push
mov
cmp
mov
pop
stos
mov
xor
inc
and
sti
aad
adcl
mov
jecxz
fsubrl
cmc
lds
imul
out
iret
cmp
mov
das
dec
rolb
push
sbbb
mov
or
sbb
add
adc
mov
mov
cmc
clc
data16
push
loopne
dec
cs
sub
push
outsb
loopne
or
mov
fmuls
sub
xor
out
push
push
mov
add
call
loop
jbe
mov
mov
aaa
pop
pop
sbb
add
and
in
cmpsl
imul
cmpsb
push
xchg
and
add
aaa
loop
dec
shll
into
xor
mov
and
test
fsubrs
int3
ljmp
mov
les
push
jp
lds
lock
xchg
sbb
push
xor
inc
jbe
push
lods
pop
pop
mov
add
ret
pop
pop
mov
roll
inc
loope
push
aam
inc
sub
mov
ljmp
test
adc
push
mov
jle
mov
pop
pop
imul
pop
adc
ss
out
mov
dec
shrb
jne
mov
loopne
jmp
icebp
pop
sbb
adc
jl
push
and
xchg
sbb
jb
insb
imul
out
fisubs
dec
lods
or
inc
loope
rol
inc
stc
cli
jno
mov
imul
mov
imul
mov
adc
enter
pop
mov
arpl
lods
adc
inc
aam
sbb
pop
cmp
mov
les
cli
mov
inc
pop
cmc
popf
cmp
in
xchg
dec
pop
dec
xor
or
sub
mov
pop
mov
popa
mov
sub
dec
pop
popf
scas
or
jge
stos
scas
loop
and
cmp
repz
fcomi
outsl
jmp
repz
push
les
nop
cmp
int
add
repnz
add
xor
out
in
arpl
test
aad
fcompl
lock
jnp
xlat
daa
test
sbb
icebp
fstps
jo
inc
iret
or
shl
sbbb
daa
insb
and
rcr
xchg
sarl
jl
rorl
scas
divb
cli
test
cmpsb
icebp
cmp
sub
lahf
jg
data16
pop
notb
add
hlt
jo
mov
jmp
outsb
inc
xchg
dec
call
push
cmp
jge
fsubl
movsl
dec
imul
loope
pop
pop
test
xchg
cwtl
iret
les
movsl
int
xor
es
paddq
jb
ljmp
push
lret
inc
xorb
ss
idivb
jmp
xor
aam
sub
outsl
xchg
lret
lods
pop
xchg
out
pop
xorb
push
sub
rcrb
dec
mov
ljmp
bound
test
sti
arpl
or
mov
cmp
adcl
adc
dec
mov
js
adc
pop
ljmp
shlb
sbb
inc
call
jle
mov
iret
and
xor
imul
mov
inc
or
aas
jp
aad
pushf
mov
sub
lahf
mov
orb
pop
out
pushf
dec
iret
ss
jb
dec
inc
pusha
sahf
lret
mov
or
mov
pop
jo
bound
and
mov
mov
leave
cmp
lahf
test
or
loope
rorl
cmp
xor
loope
xchg
sbb
aad
rcll
adc
mov
mull
and
cmp
lods
push
mov
negb
and
pop
xchg
rol
movsl
pop
dec
xor
decl
xchg
sbb
test
fnstenv
outsb
stos
loopne
pushf
push
lahf
dec
sarb
sarl
sbbb
mov
mov
sbb
cwtl
std
lds
jmp
in
pop
inc
std
fisubrs
xchg
lahf
and
loopne
mov
bound
mov
in
xchg
and
mov
mov
cmp
jb
je,pn
adc
mov
aas
loopne
jo
dec
and
mov
sub
xchg
sub
outsl
scas
add
cmp
xlat
xor
outsl
or
leave
mov
rcll
cmp
movsb
cltd
mov
jae
dec
rorb
or
imul
aam
xlat
test
xor
sti
cmp
sub
mov
hlt
sub
jns
popa
pop
lahf
call
outsb
negb
xchg
push
push
lcall
aad
data16
push
mov
sbb
das
in
ret
mov
les
lcall
jmp
push
jp
or
cmp
cmp
nop
iret
jg
and
adc
xchg
fs
cld
mov
movups
add
mov
jecxz
add
pop
cmp
cwtl
cmovo
popf
push
adc
jle
jo
or
mov
push
jp
inc
clc
addr16
sti
cld
inc
pinsrw
push
mov
mov
add
mov
data16
ret
insb
dec
and
frstor
jne
push
xchg
int
cmp
or
mov
movsl
mov
cmp
xchg
pop
xlat
pop
mov
movsb
stos
fdivs
pop
xchg
gs
imul
das
into
lds
xchg
inc
and
jbe
dec
lcall
sbb
into
out
dec
add
pop
mov
push
mov
out
xor
popf
fildll
stos
xor
mov
out
ffreep
lea
pop
je
gs
lcall
test
mov
cwtl
xlat
lret
jno
pop
popf
mov
daa
lret
repz
adc
cs
sub
mov
stos
dec
arpl
loope
stos
push
sub
call
in
cs
pop
sti
cli
xor
dec
add
enter
neg
mov
pop
sbb
adc
scas
jecxz
loopne
aaa
test
add
xchg
dec
lods
pop
je
xor
movsl
xchg
je
xor
add
cmp
test
adc
mov
lods
mov
in
dec
je
mov
out
xor
sbb
lcall
fidivrl
cli
jae
lahf
dec
dec
iret
sti
sub
or
xor
shl
hlt
gs
mov
sbb
dec
shrw
dec
and
fdivp
xor
fisttpll
sbbb
shrb
jle
pop
push
push
cltd
ljmp
jp
push
shl
je
jno
int
jb
enter
mov
dec
pop
mov
jb
xlat
sub
pop
xchg
repnz
rcr
fisttpll
and
pop
inc
ss
pusha
sbb
pop
or
xchg
xchg
out
fistpl
nop
movsb
stc
movsb
mov
inc
rcr
mov
mov
mov
inc
dec
push
xor
xchg
inc
stos
adc
sub
mov
addr16
push
lcall
adc
add
fwait
xchg
shll
stc
inc
inc
mov
jp
cmc
add
jns
push
adc
ja
movntq
out
lcall
jp
stos
or
sbb
mov
enter
out
clc
mov
je
push
mov
cmc
jnp
lretw
mov
mov
mov
in
inc
loop
lea
lahf
dec
jmp
nop
push
jl
icebp
mov
cmp
scas
stos
push
stc
jb
push
imul
in
cmc
repnz
or
mov
decb
mov
xchg
das
bound
stos
test
outsb
call
fdivl
inc
jl
test
jecxz
les
and
adc
push
nop
mov
ja
lods
jb
int
lods
inc
mov
les
push
addl
sti
or
decb
loop
inc
sub
pop
jle
roll
popf
cmp
xchg
lcall
mov
aas
xchg
mov
in
sbb
sbb
loop
push
subb
out
iret
lahf
in
xor
or
mov
imul
mov
mov
bound
push
mov
mov
push
mov
inc
mov
sub
adcl
pop
jle
mov
or
cmp
inc
ds
cld
pop
sahf
sbb
mov
pushw
sbb
cmp
ja
in
jne
mov
dec
mov
roll
xor
fucomip
cs
int3
or
mov
adc
ss
sbb
mov
testl
mov
fbstp
sbb
push
mov
xchg
dec
inc
ljmp
inc
sbb
sahf
add
scas
sbb
in
inc
sub
push
mov
adc
insb
cmp
pop
les
mov
push
xor
push
popa
jp
sbb
sahf
cmp
mov
imul
jmp
cmp
push
and
sarb
repz
mov
pop
aad
in
and
or
sbb
pop
inc
mov
stos
lahf
pusha
movsb
arpl
int
mov
fstl
imul
mov
imul
pop
add
sbb
pusha
or
test
mov
imul
pop
out
loope
jmp
jp
test
jmp
sbb
jb
pop
roll
outsl
out
movsl
or
imul
push
mov
sub
xor
imul
cmpb
cmp
xchg
leave
xchg
jae
mov
clc
mov
fildl
clc
ljmp
push
sbb
xor
sub
pop
jae
repz
aas
mov
pushf
adc
stc
nop
inc
sbb
push
and
mov
scas
xchg
push
jae
inc
or
gs
lahf
sbb
cmpsb
movsl
dec
aad
sbb
mov
or
push
adc
into
mov
shl
push
bound
ja
mov
xor
lock
sbb
es
fnstsw
jle
bound
int
aaa
mov
insb
aad
pop
xor
sbb
stc
jmp
xchg
dec
leave
mov
pop
pop
scas
jb
dec
or
rclb
sbb
jp
cmpb
inc
xchg
xchg
push
pusha
mov
push
cmpsl
std
cli
mov
fsub
inc
cltd
stos
and
icebp
gs
test
inc
pusha
inc
mov
cmpsb
dec
pop
pop
lods
jle
push
stos
popa
iret
aam
sub
inc
mov
dec
icebp
push
dec
push
dec
in
scas
sub
movsl
xchg
in
sbb
push
dec
inc
shr
out
add
out
sarl
pop
sarb
dec
adc
sti
sub
leave
jb
in
outsl
jle
xor
pop
faddl
cmpsl
out
push
popf
aas
testb
js
xor
fucomip
pusha
dec
fdivr
mov
outsl
lcall
sub
jmp
add
xor
mov
mov
std
rcrl
scas
and
js
jle
xor
mov
int
fbld
cmp
mov
xor
push
lret
rclb
and
cltd
ret
inc
pusha
aaa
adc
shlb
subl
mov
push
xchg
adc
push
int3
cmp
mov
pop
mov
popa
fcomps
mov
push
in
cs
jp
jp
cmp
imul
aad
push
adc
cmc
pop
fimuls
lea
cltd
pop
inc
xlat
and
rcrb
dec
lahf
push
fcomp
neg
push
xchg
lods
int3
cmp
jl
or
cmp
out
jle
imul
rol
sub
cmp
sub
sbb
push
nop
xor
sti
mov
push
pop
cli
pop
xchg
push
ja
mov
aas
mov
mov
out
mov
sti
movsb
pop
test
add
pop
popa
icebp
jmp
rorl
or
push
xchg
mov
hlt
das
xchg
mov
mov
daa
jecxz
dec
jp
decb
cmp
pmaddwd
mov
mov
adc
popa
adcb
jnp
js
into
das
mov
push
mov
pop
fs
roll
xchg
jl
in
jo
int3
xor
cld
aam
sbb
or
xor
popa
int
add
stc
ja
iret
das
mov
and
push
test
popa
jb
sti
push
mov
ret
xor
xchg
and
mov
mov
sti
xchg
daa
inc
mov
sub
stc
mov
ds
or
adc
xlat
add
aaa
in
xor
das
andl
sbbl
lret
iret
movsb
add
aad
xor
mov
lcall
outsl
iret
stos
cmpsl
xchg
xchg
pop
and
mov
mov
mov
lea
add
or
pop
mov
les
mov
mov
mov
jmp
out
sbb
sbb
shlb
fldcw
icebp
xlat
push
sarl
pop
cld
out
xchg
fdivr
inc
cli
negb
xchg
sbb
sti
sbb
dec
inc
push
dec
or
loop
push
pop
stos
xchg
popa
pop
mov
dec
pop
bound
shll
lods
sub
les
push
icebp
enter
inc
clc
add
daa
std
mov
dec
loopne
or
mov
or
in
incl
movsl
xor
fbstp
dec
inc
add
shrl
mov
pop
cld
outsl
mov
shlb
sub
es
dec
mov
or
jbe
loop
mov
and
out
xchg
mov
cmp
fadds
popa
xchg
mov
leave
and
lods
aad
das
inc
push
loop
popa
mov
pop
negl
adc
push
xor
inc
mov
neg
lea
push
sub
pop
fs
insl
inc
fisttps
cmp
push
out
ds
or
addr16
gs
pushf
test
cmpsb
cmp
cli
in
mov
and
mov
rclb
inc
add
push
add
les
jns
test
es
negb
imul
pop
iret
mov
scas
das
cli
mov
cmc
ret
sub
jne
or
mov
insb
xor
xchg
stos
cmpsl
mov
das
add
mov
and
jb
cmc
push
iret
push
xor
lods
jno
pushl
add
jg
pop
jg
ret
inc
icebp
mov
adc
lods
call
pop
das
stos
cli
lahf
jge
and
xchg
push
cmc
loopne
dec
andl
mov
test
push
jl
mov
popa
addb
xchg
and
mov
xrelease
xchg
or
dec
push
das
das
dec
adc
fisubs
adc
scas
or
out
orb
lahf
and
neg
jge
adc
ljmp
cld
jns
sub
add
cld
and
cmp
and
outsl
shll
sub
lret
inc
aam
xor
dec
inc
inc
popf
push
ret
pushf
cmpsl
insl
mov
sti
fisubl
mov
icebp
not
mov
loopne
push
dec
call
mov
ficomps
daa
mov
and
fs
cmc
fildll
jge
fdivrl
xchg
dec
aas
pop
imul
xchg
into
jge
rorl
pop
into
insl
and
lahf
cwtl
push
sahf
pusha
popa
arpl
jle
ret
sarb
imul
lret
int3
add
pop
mov
inc
dec
cs
daa
out
daa
add
inc
or
sub
xchg
inc
xchg
gs
dec
stc
out
adcl
pop
adc
mov
or
test
sbb
adc
cmp
xchg
cld
out
sbb
pop
in
or
je
repnz
jmp
imul
mov
js
and
sti
out
mov
insl
test
add
ja
mov
sbb
lea
pop
fs
add
loop
cmp
cmp
out
ljmp
dec
mov
fisttpll
mov
shll
imul
andl
in
mov
cltd
jae
cmp
gs
pshufw
or
sub
inc
push
lds
int3
mov
mov
imul
sahf
sbb
mov
xor
adc
adc
jne
mov
cs
test
scas
dec
js
fs
lret
aas
aad
cli
add
sbb
jo
repnz
xor
push
int
inc
frstor
shr
fdivs
xor
lea
cmp
fwait
mov
add
aaa
mov
outsb
mov
stos
cmp
int
sub
aas
xchg
sbb
scas
adc
and
sahf
push
aas
jbe
jg
sub
gs
mov
gs
cli
mov
add
into
push
fisubl
pushw
dec
call
adc
je
jg
dec
les
xchg
faddl
sub
mov
out
hlt
js
pop
jnp
jmp
xor
inc
sbb
pushf
inc
aaa
lret
mov
cli
lret
clc
fldt
call
test
ljmp
xchg
cmp
xchg
mov
dec
adc
inc
and
mov
mov
jb
ret
hlt
ss
sbb
jl
test
push
imulb
mov
mov
movsb
jg
orb
jbe
repz
or
aad
or
mov
ds
ja
insb
add
ja
nop
dec
xchg
mov
lock
in
popa
inc
bound
in
aaa
sahf
xchg
test
addr16
subl
sub
addr16
incl
add
mov
sub
ret
idiv
pusha
xchg
repz
out
mov
mov
xlat
outsb
cmpb
and
scas
ja
mov
inc
or
ret
xor
inc
sbb
pop
lahf
loop
iret
mov
loopne
movsl
lea
cmc
sbb
ja
xchg
cli
add
cmpsl
add
pop
frstor
out
pop
ljmp
push
cmp
or
inc
jb
inc
xchg
and
jg
sbb
out
xchg
mov
xchg
add
clc
aam
push
gs
imul
insb
xor
adc
push
dec
mov
arpl
mov
inc
cli
fs
jbe
add
into
imul
mov
cld
nop
adc
das
cwtl
pusha
outsl
test
out
cmp
push
jbe
jns
fs
jae
add
ret
adc
add
and
add
mov
pop
sub
cwtl
xor
stc
pop
pop
cmp
jg
pop
stos
sbb
iret
lods
mov
daa
sub
outsl
nop
inc
scas
popf
xchg
add
or
clc
fldt
es
xchg
adc
push
mov
icebp
or
fistl
inc
sbb
mov
lret
lret
lcall
xor
aaa
add
pop
dec
pusha
mov
cli
pusha
popa
sbb
scas
sarl
pop
sahf
ror
int3
call
repnz
scas
mov
repnz
push
adcl
test
shrb
mov
jp
push
insl
lcall
clc
mov
mov
ficoml
out
push
pop
das
lea
mov
cmp
sub
push
pop
dec
scas
cltd
lahf
and
loopne,pt
test
cmp
dec
sbb
add
sarl
or
out
and
rclb
inc
jnp
notl
inc
sbb
xor
incl
cwtl
mov
push
sbb
mov
push
xor
dec
stos
xchg
sub
dec
push
cmp
lcall
and
ficoms
iret
fnstsw
mov
inc
cmp
ds
ret
add
cmpsl
mov
test
add
mov
jle
sar
aaa
jl
xorb
jns
inc
add
push
xor
push
rcrb
xor
fwait
push
test
es
sbb
add
mov
std
mov
mov
inc
xchg
mov
dec
scas
jb
push
push
xlat
pop
shll
stos
aam
dec
pop
xchg
mov
test
frstor
nop
push
fdivrs
xchg
std
cld
repnz
or
cli
mov
pop
les
shrl
sahf
dec
mov
mov
jae
sub
sbb
es
repz
xchg
shrl
repnz
ljmp
pushl
or
inc
leave
mov
xchg
movsl
push
mov
insb
out
test
mov
cld
jge
or
aad
pop
int
dec
dec
les
sbb
mov
and
jmp
int3
mov
cwtl
cmpsb
stos
push
xchg
das
jp
add
jmp
fadd
mov
nop
sti
adc
addr16
dec
in
lcall
loope
pop
pusha
jb
pop
cs
fdiv
xchg
mov
or
fdivs
arpl
push
out
jb
jmp
out
mov
lods
xchg
cwtl
xchg
push
cli
inc
popa
shlb
stos
loope
sbb
pop
mov
subb
mov
dec
push
cmp
sub
sbb
scas
or
cmp
xchg
in
je
dec
push
sbb
push
fcmovne
sub
test
arpl
aam
adc
ret
arpl
push
pop
xchg
sub
jno
push
add
cmpsb
or
inc
fs
mov
push
mov
or
rorl
arpl
repnz
mov
aad
mov
mov
outsl
xchg
adc
mov
outsb
repnz
rolb
cmp
sub
cwtl
hlt
dec
dec
or
xorb
nop
daa
push
idivl
in
popf
push
xor
pusha
and
out
adc
lret
or
xor
frstor
sbb
rcrb
aaa
add
mov
jnp
ret
ret
or
ds
and
mov
xchg
and
xchg
or
xor
push
mov
pop
cwtl
in
mulb
int
sarb
mov
xorl
adc
lock
outsb
ror
xor
jmp
mov
rcll
pushf
jns
mov
loope
push
mov
mov
push
pop
scas
cli
or
rcll
repz
enter
mov
cmp
xlat
push
in
lret
arpl
cmp
test
shll
add
xchg
lret
shrl
in
imull
or
push
in
ljmp
mov
cmp
call
jnp
test
sbb
rolb
sub
add
cmp
shlb
pusha
and
scas
inc
aad
sub
in
notl
dec
inc
sub
xlat
jo
push
outsl
std
cmp
dec
imul
call
in
or
mov
enter
shl
fst
cmp
and
sbb
daa
push
inc
int
sbb
insb
mov
mov
adc
mov
outsb
int3
push
ror
ficompl
mov
dec
or
push
in
dec
add
push
not
ret
fwait
out
scas
push
cmc
cltd
push
das
and
push
lock
test
or
add
das
clc
es
in
mov
xor
loope
movsl
xlat
lock
enter
lret
xchg
and
pusha
sub
lret
out
jle
das
cld
push
rorl
enter
or
aaa
cmpsl
push
mov
adcl
insb
loopne
mov
mov
pushf
cs
xor
gs
fdivrl
push
jecxz
push
es
aaa
jae
mov
insb
out
sub
ret
cltd
sub
mov
aaa
sti
mov
dec
inc
out
shr
out
daa
push
lret
xor
pop
jb
mov
cmp
insb
mov
nop
pop
cli
add
xor
push
addr16
pop
addr16
lret
cmp
mov
in
iret
sahf
pop
inc
sarb
in
ljmp
loopne
das
jae
xchg
ficoms
sbb
cmp
jne
mov
cmc
out
push
lds
xchg
stos
xchg
and
cwtl
and
cmpsb
ror
push
xchg
call
cwtl
inc
fucomi
inc
or
adc
mov
push
dec
sub
faddl
int
into
and
push
loopne
pop
roll
loopne
jo
pushf
jg
pop
jo
sub
sbb
shrb
push
xor
addl
sbb
mov
push
mov
mov
pop
mov
mov
cmp
fisubrs
push
pusha
mov
out
push
push
xchg
cmp
and
mov
pop
fistl
lods
mov
lcall
sub
mov
xchg
jge
xor
out
xchg
cmpsl
lock
ja
notb
jmp
ret
push
pop
neg
enter
jae
or
outsb
insl
out
rcrb
cs
lea
and
push
cmp
out
cmc
sbb
stc
stos
into
cmp
arpl
sub
daa
xchg
popf
xlat
push
cmp
sbb
enter
lods
std
mov
cltd
pop
mov
fscale
jl
imul
jno
sub
repz
int
add
movsb
lods
add
aam
inc
cmp
jg
or
mov
jg
push
mov
push
sarb
cmp
sub
jb
inc
movsb
sbb
ficompl
imul
adc
adc
in
flds
mov
push
push
out
pop
imul
mov
cmp
mov
movsb
and
jecxz
daa
or
push
push
imulb
adc
xchg
aaa
clc
or
adc
xor
mov
push
pop
imul
hlt
cld
addr16
dec
aas
jbe
loop
ret
mov
lret
ficompl
push
add
cltd
movsb
test
cwtl
cmpb
sbb
xchg
loop
lock
neg
fldcw
ret
and
fcmovb
push
xchg
stos
daa
cmp
inc
inc
or
int
mov
xchg
divl
jp
ret
in
shlb
mov
cmp
imul
fdecstp
ja
loopne
imul
out
popa
xor
push
shr
xorb
mov
xor
in
lds
xchg
sarb
pop
fsubrl
out
aaa
xchg
adc
and
cmp
cmpsl
inc
sbb
cmpsb
stos
jno
inc
and
jecxz
dec
insb
stos
sbb
ljmp
pop
and
hlt
cmp
sbb
out
mov
fstpt
adc
icebp
xchg
test
mov
jbe
adc
cmpsb
xchg
mov
sub
dec
sbb
loope
movsb
gs
test
fisubrs
imul
jne
ljmp
ljmp
test
rcrb
loopne
repz
repz
mov
xchg
dec
pop
aam
jo
call
or
mov
test
inc
xor
push
fidivl
and
leave
stos
ficompl
jge
dec
outsl
stos
les
xor
mov
iret
jg
push
cltd
jg
add
movsl
xchg
test
sti
xchg
mov
and
iret
shrb
daa
dec
xchg
push
jmp
jae
xchg
aad
cmp
movsb
inc
mov
sub
mov
adc
sbbl
jae
ret
push
lahf
inc
xchg
cmp
mov
inc
jae
mov
mov
add
jns
mov
ret
mov
cmpb
movaps
fs
ja
ret
mov
addr16
add
sub
data16
call
mov
xchg
adc
call
insb
jge
jge
hlt
add
andl
aas
xchg
sub
stc
pushf
movsl
xchg
mov
jge
hlt
xor
inc
jle
in
cmc
pop
jge
pop
pop
ja
cs
bound
ljmp
mov
es
mov
inc
dec
mov
xor
inc
ss
lods
ljmp
cmc
sbb
in
ret
pop
xor
nop
lea
arpl
xor
sub
ret
dec
pop
out
iret
das
cmp
in
das
xlat
leave
add
push
inc
dec
dec
jg
data16
and
cs
outsl
ja
mov
jno
adc
sbb
inc
jle
insb
push
mov
and
mov
in
rcrb
lods
incb
repz
cmp
jmp
scas
fadd
ret
mov
xchg
add
dec
ljmp
jecxz
adc
repnz
xchg
cwtl
aaa
inc
mov
cmp
or
out
ret
jnp
shlb
xor
movsb
mov
jmp
mov
cmp
pushl
in
lahf
or
cmp
lods
xlat
test
push
imul
lret
test
push
or
pop
cmp
adcl
cli
arpl
mov
scas
ljmp
insl
xlat
sar
aam
lock
mov
stos
ljmp
sub
adc
dec
fisubs
mov
lahf
lods
push
jns
sti
add
add
lret
ret
dec
cmpsl
mov
xchg
pushl
hlt
mov
in
subb
or
xor
xor
mov
mov
mov
inc
addb
or
mov
cs
adc
aas
cwtl
dec
into
push
fnsave
dec
mov
test
fidivrl
call
adc
das
push
sub
mov
out
adc
mov
rcl
sub
insb
das
xchg
add
faddl
xor
mov
out
cmpsb
adcl
pop
ds
sti
add
sub
loope
jae
dec
fadds
nop
dec
test
stos
rcll
daa
repnz
pop
mov
sub
or
scas
rep
add
iret
imul
shll
in
xor
xchg
and
outsl
dec
iret
jns
fildl
adc
lds
insb
mull
jmp
stc
pop
jnp
cmp
inc
push
stc
lcall
adc
xlat
cmp
lcall
adc
cmp
lea
daa
cmp
movntps
inc
and
mov
hlt
add
mov
or
jecxz
and
arpl
sub
lret
rclb
push
cld
or
lods
insb
ljmp
pop
pop
jne
jp
test
sbb
ret
dec
jne
add
scas
push
loop
and
mov
pop
mov
cmp
cltd
repnz
fldl
pop
mov
mov
pushf
in
sbb
sub
push
push
sub
pop
jl
mov
lcall
lds
test
jne
add
jnp
xchg
cmp
xor
push
pop
inc
push
mov
mov
insb
in
pop
test
and
stos
adc
jns
gs
gs
lods
orb
cltd
insb
push
xor
inc
sub
xchg
or
sbb
cltd
repz
sbb
mov
les
stos
inc
movsl
stc
mov
xchg
orl
and
sti
pop
add
test
or
cmp
sahf
and
std
xlat
nop
dec
jp
mov
rorb
and
mov
ss
outsl
mov
push
lret
sbb
inc
jge
aas
add
jae
mov
xchg
idivb
dec
int
mov
xor
lds
sub
pop
dec
lds
inc
push
sbb
data16
sbb
ljmp
leavew
es
xchg
mov
jne
pop
lods
mov
jmp
movsb
push
or
and
fdivl
lcall
xchg
jle
adc
icebp
add
pop
sub
pop
popf
mov
movsl
mov
cltd
push
test
lcall
push
test
mov
aam
sahf
jo
int
or
mov
sar
ret
clc
lods
pop
mov
popa
adc
stos
leave
sti
dec
mov
xor
mov
das
insl
mov
loopne
outsb
bnd
sahf
mov
ror
lahf
push
das
adc
js
int
std
int
movsl
out
pop
cmp
pop
pop
loop
loop
movsb
aad
out
jle
xchg
inc
xor
dec
mov
imul
js
in
lret
int
xor
mov
lcall
test
or
testl
aaa
fstpt
jne
outsb
fdivr
aam
cltd
add
gs
icebp
popa
fsub
mov
cmp
cld
cwtl
test
xchg
push
sbb
sub
jg
add
push
dec
stos
xchg
int3
pop
mov
jge
xchg
ret
or
push
adc
addr16
cltd
cwtl
aaa
je
dec
jnp
inc
sarb
mov
repz
or
sub
hlt
cld
pop
adc
das
adc
addl
cmpsl
xchg
insb
test
mov
add
imul
jmp
icebp
pop
clc
sbb
jge
movsb
scas
or
jp
call
cld
add
cmp
adc
fidivs
cs
pop
adc
push
push
pusha
dec
loop
cld
push
push
mov
or
sub
mov
in
inc
xor
rorb
lock
sbb
cmp
sbb
sbb
xor
enter
jge
test
jo
pop
clc
or
in
mov
outsl
push
test
je
test
fnstcw
les
leave
fdivrs
fmuls
icebp
je
mov
add
test
insb
jbe
push
lock
dec
aas
mov
mov
adc
enter
inc
xchg
adcb
shll
mov
mov
and
adc
addl
pushl
testb
fwait
push
decb
fs
clc
sbb
jne
out
pop
add
lcall
jp
or
xchg
jmp
repnz
pop
ja
divl
enter
push
sahf
ret
insb
jae
mov
mov
shll
or
pop
lods
ficoms
fistps
push
out
xchg
push
ljmp
jne
xchg
sahf
cmc
fnstsw
cltd
mov
sub
dec
mov
aad
loop
movsl
popf
push
pop
bound
xchg
in
xchg
roll
dec
cli
int3
jge
incb
jle
rcrb
xlat
enter
test
and
mov
jecxz
cltd
dec
and
test
push
imul
inc
add
xchg
sub
or
push
jbe
push
enter
mov
and
and
mov
inc
mov
cli
jae
imul
fidivs
call
jbe
insl
push
es
and
mov
mov
notb
jb
xor
pop
sub
movsl
cmc
stos
aas
cmpsl
or
repnz
mov
fwait
or
shlb
int
test
out
dec
inc
dec
xor
loopne
fcompl
jle
iret
insb
jg
sbb
sub
pop
mov
sti
rcll
push
mov
loopne
pop
nop
and
js
outsl
cs
xor
loopne
pop
xchg
dec
lods
fbld
adc
adc
push
popa
or
fwait
lods
cmp
mov
xchg
sbb
repnz
cltd
sub
sti
in
jno
dec
lret
out
test
jle
sub
scas
test
enter
es
and
mov
test
and
dec
or
enter
sti
xor
inc
jns
jno
sbb
or
xchg
cmp
push
adcl
sahf
mov
mov
pushf
inc
in
into
or
add
mov
test
dec
ss
dec
adc
and
sti
shr
icebp
das
ret
out
lods
mov
mov
scas
mov
lcall
and
sub
mov
addb
sbb
in
jmp
es
popf
negl
lods
ja
inc
cwtl
sbb
add
inc
jmp
xchg
add
idivb
or
pop
inc
fimull
lds
daa
mov
add
xor
adc
pusha
ficoms
inc
out
setne
cmpsb
imul
and
pop
sub
fsubrl
push
xchg
into
push
mov
add
mov
push
dec
imulb
mov
jmp
pop
ss
test
ds
in
xchg
mov
xchg
jecxz
mov
jo
in
xor
stos
inc
negb
loop
jo
fiadds
pop
mov
dec
imul
jne
lret
cmpb
jae
jo
pop
push
sbb
int3
sbb
push
xor
adc
push
add
sbb
les
imul
out
shrb
test
pusha
xchg
or
mov
std
out
mov
dec
and
add
mov
adc
sbb
mov
mov
mov
jmp
xor
mov
test
sarb
jge
mov
mov
test
les
outsb
movsl
dec
xor
lock
in
jge
sub
stos
test
xlat
mov
mov
jno
push
push
repz
ret
movsb
enter
es
aad
xchg
sbb
dec
pop
lahf
idiv
or
lcall
rclb
xor
js
jbe
push
fwait
adc
cwtl
cmp
push
pop
add
loop
cs
mov
mov
mov
pop
lock
dec
sarb
rcr
or
adc
aad
ja
adc
fwait
inc
fistl
mov
jl
popf
lods
sub
sub
es
iret
sub
and
mov
or
stos
inc
xchg
jo
scas
fsubrl
dec
scas
mov
jae
cmp
fisttpll
jg
outsb
and
test
test
dec
add
push
bound
ss
mov
int
test
pop
cld
outsb
mov
and
add
pusha
outsl
ljmp
movsl
mov
lods
imul
mov
ret
xchg
adc
lret
adc
inc
adc
mov
mov
sbb
jo,pn
rorb
cwtl
dec
xchg
popf
pop
jg
mov
jo
adc
rcr
movsb
repz
sub
mov
imul
leave
jle
mov
andb
push
xor
insl
xchg
fnstcw
inc
fbstp
push
and
adcl
lret
dec
jmp
aam
push
and
jb
lods
lods
pop
lea
jnp
lret
shr
or
imul
dec
xor
fisttps
ret
jne
cmp
jo
in
js
push
sbb
jne
outsb
pop
fcomps
sub
std
scas
cli
or
ss
repnz
dec
sti
scas
or
push
and
sti
fcomps
mov
call
xchg
xor
pushf
push
daa
aad
ss
dec
jno
dec
push
pushf
sbb
jae
pop
jl
inc
sbb
sbb
loope
jge
pop
and
lcall
mov
adc
pcmpeqb
lds
fldenv
adc
in
sbb
fisttpll
sub
jb
push
nop
movsb
repnz
inc
dec
cmp
jl
add
lods
jne
push
arpl
jp
add
push
outsl
jne
aam
and
loop
xor
pop
push
pop
fs
cld
mov
adc
nop
fnsave
dec
ret
pop
mov
mov
lods
pop
popf
jbe
sub
dec
mov
into
testl
and
sub
out
jns
dec
out
cmpsb
mov
dec
xor
push
test
or
aas
rclb
dec
jp
lods
sub
pop
push
adc
xor
and
dec
out
add
xchg
clc
int
sub
add
sub
sbb
sub
into
push
jl
jo
and
lds
cmpb
andb
mov
aam
decb
push
adc
sti
fsub
lret
jns
loopne
repnz
xlat
or
or
or
jmp
lcall
loopne
call
mov
sbb
mov
sbb
jnp
insl
das
ja
loop
sbb
add
in
push
lock
fmulp
jo
hlt
cmp
xchg
pop
jnp
dec
repnz
push
sbb
push
pusha
fstl
aad
rcrl
inc
pop
into
push
or
aam
mov
adc
xchg
fiadds
loope
ficompl
rcrl
sbb
pop
jae
hlt
pop
subb
and
xchg
or
mov
mov
das
and
jnp
dec
out
test
jae
fsubs
sub
movsb
jo
hlt
push
fs
push
adc
push
mov
mov
ficoms
inc
idivl
and
xor
sti
mov
mov
in
pop
mov
xchg
stc
jbe
mov
jae
out
lret
nop
fsub
negb
int
cmp
xor
rorb
ljmp
xchg
push
sub
fnsave
push
mov
movsb
sahf
sbb
bound
sub
test
sub
inc
jge
stos
pop
test
inc
adc
and
dec
mov
and
and
add
push
xor
mov
fs
xchg
es
aas
sbb
mov
fdiv
int
imul
mov
push
in
adc
nop
in
dec
in
jns
cmpb
jp
dec
mov
cmpsl
sub
inc
test
les
jmp
adc
xchg
sbb
clc
lcall
jp
mov
movswl
cmp
mov
add
adc
icebp
in
push
jmp
mov
push
jnp
jns
hlt
add
mov
push
fwait
add
push
sbb
das
xchg
mov
lock
lret
out
and
pop
out
insb
push
cmc
repz
inc
pop
mov
adc
imul
add
jecxz
cmpsl
push
lea
sbb
scas
sahf
icebp
or
adc
fists
xor
ret
fsub
jmp
mov
imul
iret
call
jo
leave
fsubs
add
pusha
mov
jnp
or
daa
mov
decl
dec
inc
push
pop
cmpsb
out
cmp
dec
cmp
pop
sbb
mov
mov
cmp
mov
and
or
loopne
mov
dec
inc
sbb
sub
xchg
fstpt
test
int3
jnp
icebp
dec
inc
push
arpl
push
lcall
jl
je
aam
aam
xor
pop
jge
popf
push
push
adc
dec
daa
adc
xor
out
ret
xor
xchg
loope
jle
je
adc
cwtl
cmp
pop
dec
push
sbb
mov
movsl
jno
mov
mov
cmp
fiaddl
aad
adc
sub
rol
push
mov
xchg
sbb
insb
pop
enter
add
fiaddl
and
inc
popa
cmc
shrb
push
lcall
add
into
and
adc
out
dec
add
adc
sets
dec
lods
fs
sub
jne
ja
mov
push
xor
test
fwait
test
jl
mov
cld
rclb
ficoml
lahf
out
sbb
stos
sub
int3
add
adc
pop
test
popf
call
add
cmp
cmp
les
shlb
idivb
divl
cli
mov
jp
std
mov
pop
adc
adc
inc
adc
inc
pop
ss
add
sti
movsl
jmp
xlat
xchg
xchg
sbb
pop
pop
scas
pop
ds
ljmp
mov
mov
push
inc
pop
and
jp
imulb
in
xchg
mov
je
stos
ret
enter
orl
inc
mov
pop
iret
jb
lcall
lcall
mov
inc
sub
jo
jo
in
imul
mov
jmp
out
jl
xlat
inc
lods
cld
cs
lods
and
fsub
cmp
movsl
adc
mov
aas
nop
adc
mov
xchg
daa
mov
addl
dec
das
cld
rcrl
sub
add
imul
in
lret
and
mov
test
leave
orl
dec
dec
dec
cwtl
jnp
cmpb
pusha
cmp
mov
push
ds
data16
insb
mov
dec
cltd
sti
leave
bound
std
insb
cwtl
mov
out
das
lock
out
adc
fistl
sub
repz
add
and
inc
jb
sub
lock
inc
rcll
test
insb
mov
inc
in
push
insl
je
inc
xor
mov
int3
cmp
fdivp
loope
mov
pop
or
pop
xchg
sub
cld
test
jge
adc
add
jmp
cmc
enter
jl
insb
scas
or
sub
jo
cmp
cmp
dec
mov
mov
mov
shlb
pop
out
cmp
icebp
adc
jecxz
jmp
addr16
fisttpl
xlat
mov
push
andb
test
inc
aad
add
xchg
int
push
jge
pop
jne
inc
xchg
mov
inc
pop
mov
inc
movsl
ljmp
mov
adc
sahf
subl
inc
jns
test
pop
inc
push
rsm
pop
cs
enter
sbb
jns
addb
mov
ja
xchg
cmpsl
insb
mov
gs
mov
xchg
int
mov
add
lods
and
jo
jno
lea
cmp
jge
aas
pop
mov
lcall
dec
inc
loop
gs
sbb
mov
sub
jecxz
xor
pop
mov
enter
jle
je
mov
or
outsb
cwtl
sub
mov
xor
xlat
xchg
icebp
imul
in
xchg
push
sub
mov
mov
scas
jp
ret
mov
jp
add
jne
outsl
xor
subb
rolb
pop
dec
leave
sub
xchg
adc
fcoms
in
ljmp
aam
outsb
xchg
jg
imull
jle
insl
xchg
fwait
inc
lods
inc
call
dec
scas
jno
mov
and
std
xchg
sbb
push
insl
or
insl
mov
inc
aad
out
mov
add
test
scas
call
scas
int
push
fcoms
pop
inc
ljmp
push
addr16
add
cli
ret
xchg
xchg
pop
leave
dec
cmp
lret
bound
xor
inc
pop
xor
subb
mov
and
adc
adc
add
imul
jge
fstl
in
repz
sti
mov
cmpsl
out
jnp
xorl
fsts
sub
lods
pop
scas
subl
dec
lahf
bound
loop
aas
pusha
sub
popa
in
cmp
pop
sti
fcompl
pop
jecxz
jmp
arpl
stc
popf
mov
mulb
xor
lods
es
fnstsw
push
pop
stos
xchg
adc
in
mov
xor
lods
dec
jmp
dec
ficoms
jg
cld
mov
push
mov
lahf
pushf
dec
lods
test
jmp
dec
insb
mov
mov
mov
push
xchg
mov
xchg
jl
repnz
es
add
daa
inc
and
xchg
imul
dec
mov
sbb
lret
out
stos
out
das
lock
enter
dec
daa
dec
test
pushf
int3
outsl
jmp
lret
addr16
sbb
pop
or
inc
pop
aam
fisttpl
test
inc
add
push
lret
xchg
ss
fwait
sub
dec
push
sub
xor
lret
jb
dec
inc
dec
test
ljmp
xchg
pop
cmp
daa
fiaddl
ds
mov
andb
add
xor
jge
jp
mov
push
cmpsb
cld
gs
adc
shl
push
inc
orb
icebp
xchg
scas
dec
aad
xchg
push
and
dec
mov
mov
jl
sti
leave
xor
insb
mov
popa
mov
cmpsl
sub
push
negl
sbb
test
fadds
jge
lret
mov
pop
stos
pop
lret
mov
ljmp
jae
cmp
pop
lods
iret
mov
mov
repz
mov
call
jge
mov
mov
loopne
int3
push
xchg
xchg
xor
pop
jb
pop
xchg
cmp
ja
aam
es
fs
aam
mov
lods
test
add
push
pop
popa
cltd
xor
not
jle
or
cmp
mov
ss
subb
sbb
bound
subl
sbb
push
mov
imul
mov
jnp
iret
push
addr16
pusha
imull
pusha
xor
nop
fwait
jnp
sar
frstor
lods
idivb
adc
mov
push
and
adc
push
sub
mov
in
mov
and
sti
fsubrs
mov
jge
inc
cmpsb
dec
mov
js
cmc
test
lea
stos
and
and
in
shrl
push
xchg
jb
in
lret
mov
iret
mov
cmp
and
or
sub
inc
xor
inc
mov
mov
movsb
push
mov
sub
pop
repnz
ret
add
or
and
ja
mov
insl
out
adc
jl
imul
xchg
into
cmp
and
adc
loope
and
inc
sti
mov
jo
stos
push
mov
sbb
adc
dec
into
int
js
iret
testl
push
or
idivb
xchg
jns
popf
out
and
incb
dec
mov
dec
push
xchg
push
dec
mov
ss
mov
lock
jecxz
aam
dec
sbb
out
mov
jg
sub
mov
pop
jnp
or
repz
push
loopne
mov
fstl
insl
and
daa
sub
xor
jp
xor
mov
es
inc
cmp
sub
inc
adc
pop
roll
nop
faddl
aam
push
push
jmp
push
aaa
adc
adc
jmp
cs
movb
in
mov
mov
in
out
xchg
hlt
inc
in
movsb
mov
test
xchg
or
in
xchg
idivl
xor
and
das
daa
rcll
cmpsb
fs
fwait
std
lock
imul
or
fadd
sbb
out
popl
mov
mov
inc
cltd
dec
or
movsl
jmp
clc
int3
sbb
pop
daa
aas
inc
stc
mov
test
dec
adc
push
pop
dec
es
mov
push
adc
loopne
stos
dec
lcall
sub
fwait
shll
xchg
pop
sub
jnp
ja
addr16
cmp
jbe
mov
repz
mov
xor
test
xchg
mov
insb
push
sahf
push
data16
push
jnp
add
inc
cmp
out
addr16
ja
mov
leave
mov
mov
dec
jne
cmp
sbb
mov
sub
xor
xchg
data16
xchg
nop
xchg
jbe
push
fldcw
jo
sbb
lret
fstps
out
inc
mov
cld
popf
lds
jb
add
mov
out
adc
lahf
mov
or
sar
inc
add
fs
int
test
std
push
outsb
inc
mov
sarb
imul
dec
fdivrs
sahf
pop
cmp
fwait
and
in
and
call
test
adc
mov
rcrl
ret
orb
dec
mulb
push
sbb
aaa
sbb
xlat
add
sbb
shrl
call
inc
imul
es
cmp
push
loopne
mov
mov
xor
out
fsub
sub
cli
ljmp
call
xchg
add
jnp
lea
mov
call
fildl
daa
jge
xchg
icebp
aad
out
push
sub
jno
xor
loopne
jmp
add
pop
mov
popa
gs
xchg
mov
icebp
dec
fs
and
pop
outsl
pop
or
decb
dec
mov
mul
mov
mov
lret
stos
push
sub
push
cmp
dec
jge
dec
or
movlps
int3
icebp
test
ds
ljmp
xor
movsb
sbb
jge
mov
fs
jns
outsb
cmp
call
jo
mov
adc
xchg
or
xor
cs
mov
pop
cmp
lahf
mov
push
push
in
daa
fdivs
cmp
sub
pushfw
rolb
xchg
sub
pop
xor
dec
push
ss
ds
pop
and
jno
sub
imul
xor
mov
jne
cmpl
jmp
js
mov
and
std
lds
jmp
or
outsl
pushf
pop
push
je
pop
pop
cltd
movsl
mov
adc
cmp
fimuls
pop
out
cld
jg
cmp
mov
xchg
lods
iret
pop
and
std
std
lcall
scas
mov
mov
test
cmc
jo
es
jmp
sbb
mov
out
cmpsl
or
push
inc
jns
cmp
jg
mov
mov
inc
rolb
add
cmp
hlt
adc
lds
outsl
pushf
sub
inc
daa
cmpsl
jecxz
outsl
dec
in
call
mov
cltd
pop
push
daa
add
inc
inc
jnp
aam
mov
sub
inc
faddl
repz
rcrl
xor
sub
mov
outsb
lahf
leave
sar
push
pop
cmp
rorl
jbe
or
lcall
and
and
scas
gs
cs
jmp
xchg
movaps
sub
insb
mov
ds
dec
pop
lret
or
adc
repz
and
and
outsb
jno
xchg
sbb
cmpsl
cmp
or
cld
push
lahf
push
cmp
sbb
xchg
sti
ret
psubusw
scas
scas
les
push
pop
cwtl
push
in
xchg
iret
mov
jg
movsl
pop
out
mov
stos
mov
and
add
adc
jb
sbb
call
data16
sbb
cwtl
lret
rdtsc
xor
popf
jp
cmp
mov
mov
popf
scas
add
rol
push
das
dec
into
enter
push
pop
sbb
push
and
mov
inc
loop
imul
mov
add
and
cmp
xchg
adc
cs
pop
mov
mov
xchg
push
pop
pop
popa
movsb
sahf
repnz
mov
xor
pop
adc
in
dec
arpl
sbb
std
cmc
shll
lods
out
int
or
add
xor
bnd
jp
pop
cmpsb
imul
jnp
fs
inc
jl
jle
mov
call
and
jl
cmp
cmp
nop
mov
pop
shrl
lahf
inc
mov
inc
inc
xchg
push
mov
push
inc
dec
stos
sub
pop
test
jnp
enter
push
gs
lods
sti
push
cmc
das
test
xor
lods
les
in
pusha
lahf
repz
pop
jecxz
test
dec
push
mov
lods
or
fiaddl
xor
adc
or
notl
lds
jle
dec
shll
push
dec
sarl
adc
ss
add
xchg
jge
lds
push
cltd
lock
mov
loopne
add
or
popf
fsubrs
dec
xor
ss
and
lods
addr16
cmp
andb
add
push
dec
and
mov
add
push
lret
push
push
jo
mov
movsl
test
sbb
mov
pop
inc
int3
sbb
fidivrl
scas
adc
push
mov
sbb
enter
add
jle
push
xchg
cmpsl
and
or
mov
es
or
ljmp
jb
aad
pop
xchg
cmp
or
inc
pop
sahf
or
mov
jne
sub
insb
lods
nop
mov
mov
pop
mov
cltd
sub
inc
cmp
pushf
movsl
dec
xchg
mov
jbe
dec
push
movsl
and
int
loope
inc
mov
jbe
ds
mov
adc
push
pop
inc
in
out
lods
ja
and
inc
xor
out
in
pushf
out
jae
outsl
pop
sbb
push
nop
ds
xchg
jne
jle
cltd
pop
mov
rol
sbb
int3
jb
jns
add
xchg
insl
cmp
push
jb
mov
call
cmp
and
jge
sbb
jno
imul
lea
incl
mov
stos
clc
scas
int
pop
push
into
lods
ficoml
pop
aaa
mov
sub
xchg
js
cmp
adc
fs
icebp
mov
cmp
arpl
sbb
movsl
sub
leave
lret
mov
aaa
dec
and
mov
rclb
add
test
nop
adc
mov
jmp
pop
bound
xchg
push
insl
xchg
xchg
and
es
mov
in
push
ljmp
dec
push
mov
dec
das
stc
push
mov
mov
cmp
in
cmp
or
fcmovb
in
add
or
jmp
pop
xor
xchg
lods
ds
and
out
enter
add
xchg
sub
lea
mov
fldcw
xchg
or
inc
out
pop
mov
ds
jnp
std
cmpsb
lcall
mov
addr16
lea
push
mov
test
push
mov
dec
and
and
icebp
sbb
aad
mov
pop
add
movsl
jg
lods
pop
mov
dec
aaa
movsl
rclb
repz
call
push
jp
ja
fwait
or
pop
pop
and
js
or
loop
sbb
mov
fnstcw
nop
mov
and
addr16
fnstcw
or
das
adc
lock
ret
lret
ffree
and
cld
lods
or
into
push
xor
out
es
fistpll
in
and
cld
ds
outsl
adc
pop
pop
stc
inc
jp
inc
jge
loope
fdivrl
rcll
xor
repz
mov
mov
mov
sub
pop
sbb
dec
ljmp
and
lret
pop
sbb
test
push
pop
mov
ret
push
pop
dec
add
clc
push
sub
fistpl
push
clc
loope
push
ret
stc
add
push
shlb
xor
fimuls
xor
aaa
jmp
cmp
movsb
push
add
inc
adc
or
sbb
out
sub
lcall
sbb
imul
sahf
divb
call
lods
xchg
push
fcmovnbe
cmp
pop
cld
jnp
jno
stos
sbb
leave
jmp
dec
and
add
push
inc
mov
in
shll
mov
mov
mov
and
in
lahf
jl
mov
mov
rcll
jmp
adc
int
pop
je
dec
ja
out
or
scas
mov
xor
les
rcll
xchg
dec
arpl
inc
inc
les
addl
cwtl
fildll
push
test
aaa
mov
sarl
lahf
out
inc
int3
fcmovb
into
adc
adc
ja
fnsave
jns
movsl
xor
mov
add
push
in
and
mov
addr16
imulb
cmp
mov
and
insl
or
jo
xor
push
loop
leave
add
and
adc
sahf
cltd
jmp
cmp
xchg
in
mov
pusha
and
out
leave
cmp
xlat
cmp
enter
push
pusha
adcb
push
mov
lods
sbb
je
lret
jp
add
inc
mov
inc
loopne
icebp
mov
or
xlat
insb
int
xor
cmpsl
ficompl
mov
mov
mov
and
mov
sub
test
ds
mov
add
cwtl
lds
orl
testb
filds
arpl
mov
dec
cmc
call
cmp
pop
or
push
out
ret
dec
mov
cmp
xchg
repnz
cmp
push
xchg
sub
ja
sub
les
pusha
pop
es
mov
lahf
sbb
push
and
lcall
push
cmc
fbld
mov
mov
and
xchg
xchg
or
in
pop
inc
test
out
pusha
loope
fbld
xor
stc
xchg
lods
mov
xchg
jge
bound
rorb
data16
inc
rorl
sub
daa
into
mov
imul
mov
mov
push
ret
sbb
mov
or
insl
lret
loope
aad
insl
sarl
divb
push
faddp
jmp
mov
jle
sub
cmp
mov
adc
iret
adc
imul
aas
clc
fisttpl
cmpl
or
mov
jmp
cmp
mov
pop
int3
or
mov
dec
inc
fwait
mov
add
jnp
stos
mov
jl
mov
ss
repnz
sub
inc
mov
repnz
jge
mov
cli
lods
pop
add
arpl
mov
xchg
hlt
xchg
pop
cmp
test
sub
sub
shrl
popf
pop
pop
test
xchg
push
test
out
dec
mov
jbe
bound
in
cmp
xor
idivl
repnz
int3
pop
sub
xor
mov
push
push
cmpb
fwait
xor
call
lcall
test
pop
cmp
adc
cld
jb
jle
jns
shll
xor
and
mov
and
cmpb
in
int3
pop
out
mov
xorb
mov
repz
popa
in
in
or
leave
cmc
mov
xchg
dec
mov
push
lret
addr16
adc
cli
aam
inc
loop
xchg
push
popa
loope
dec
pop
dec
je
pop
fsubl
add
or
shl
jo
push
stmxcsr
mov
movb
mov
ret
jns
push
inc
jbe
xor
aaa
pop
data16
repnz
loope
ss
sti
cmp
int3
add
test
int3
out
cmp
jl
adc
sarb
dec
or
fwait
sbb
cwtl
mov
pop
pop
jg
cmp
xchg
and
es
outsb
iret
imul
imul
jnp
sbb
cmp
sub
cvtps2pi
cwtl
xchg
mov
xchg
pop
test
inc
pop
inc
test
jne
nop
loope
icebp
jl
mov
fwait
xchg
jno
test
out
out
ret
testb
inc
push
xor
scas
in
shl
push
mov
sbb
repz
adc
jp
ja
or
je
lds
lahf
fucom
shlb
ds
push
imul
mov
in
mov
xor
cli
lcall
scas
enter
ss
aad
mov
mov
pop
pop
insb
mov
stos
inc
jo
shll
mov
dec
fwait
add
out
mov
stc
scas
dec
clc
test
mov
jb
sbb
xlat
inc
outsb
dec
out
and
lret
xrelease
and
ret
add
cs
icebp
dec
xor
xor
push
push
imul
push
xor
push
ret
dec
clc
jae
mov
sti
pop
pop
push
sub
lcall
out
stos
pop
inc
jmp
ja
scas
int
mov
in
mov
or
mov
daa
in
mov
fwait
xchg
nop
xchg
in
xchg
fadds
sbb
lret
pop
jbe
insl
sbb
sbb
insl
jmp
frstor
pop
shl
push
add
jbe
mov
repnz
push
xor
rorb
stc
fildl
in
shr
int
out
jbe
xchg
test
mov
pop
int3
xor
ret
inc
push
jmp
jmp
ja
mov
or
scas
push
movsl
sbbb
mov
and
popf
sub
lcall
pop
fmuls
shrb
arpl
ss
and
or
add
mov
add
mov
addw
mov
fisubrs
and
bound
mov
dec
popf
inc
imul
pop
psrld
cmp
les
insb
dec
xor
das
rcrl
add
mov
in
rcrb
lret
adc
jnp
fs
jp
repnz
sbb
mov
and
mov
das
push
pushf
push
aas
repnz
and
or
and
xchg
and
sub
mov
dec
test
sub
stos
cmp
adcl
int3
mov
mov
xchg
mov
xor
lret
movsb
xchg
out
mov
pop
in
mov
pop
xchg
push
les
fwait
lahf
jle
int3
stc
sub
not
mov
subb
or
xor
xchg
or
jae
xchg
sbb
loope
repnz
pop
xchg
lds
or
js
pushf
loopne
ficoms
dec
push
in
sahf
xchg
mov
xchg
outsb
and
push
dec
cmp
add
cld
test
pusha
adc
pop
mov
rcr
ljmp
or
mov
aad
push
mov
sub
out
dec
mov
add
shrb
and
xchg
cmp
rcr
sti
or
adc
jbe
dec
popa
mov
and
cmp
test
loopne
mov
push
aad
add
mov
fists
sbb
in
stos
dec
adc
addr16
xor
inc
cmp
sbb
jp
shll
push
fistpl
outsl
sub
mov
repnz
adc
push
daa
mov
pushf
adc
xchg
jae
mov
repz
call
call
mov
cmp
cmp
mov
and
jbe
dec
sbb
dec
mov
inc
loopne
cltd
subl
arpl
mov
fs
cld
cmp
inc
cltd
adc
daa
lods
jne
xchg
rorb
or
pop
mov
sbb
shl
push
movsb
out
movl
pop
les
loop
cld
xor
int3
pop
sub
mov
lds
and
insl
shll
and
lods
dec
mov
popf
dec
xchg
je
jge
test
add
xchg
pusha
xchg
cs
addb
inc
mov
jl
scas
inc
pop
mov
push
adc
mov
insb
jne
gs
rcll
std
inc
push
inc
stos
push
popl
in
in
ret
icebp
xchg
insl
cmpsb
mov
loopne
scas
sbb
imul
sbb
pop
jp
cmp
sbb
adc
lea
cld
push
mov
filds
fbld
test
inc
testb
repnz
sub
adc
pop
xor
pop
mov
xchg
dec
xlat
test
ds
call
fisubrl
jp
mov
cwtl
fs
pop
dec
dec
stos
rcr
cmpsl
outsb
cmp
inc
jno
fcomi
xchg
push
adc
ss
mov
int
adc
add
outsl
stos
pop
test
pop
xor
dec
lods
xor
add
add
daa
outsb
rclb
push
push
add
mov
sbb
insl
add
incb
scas
int3
sbb
imul
mov
aad
je
push
push
sbb
addr16
arpl
mov
xchg
push
sti
add
dec
push
jp
testb
mov
inc
jno
xchg
dec
xor
ficoms
fstpt
dec
out
lret
ret
jg
xchg
lret
dec
add
loopne
mov
fdiv
pop
test
shll
leave
and
std
xchg
ficoms
ret
test
cmp
adc
pusha
cmp
jb
fadds
xlat
sahf
pop
icebp
xchg
hlt
push
jle
mov
push
mov
addl
imul
adcl
std
cmp
xchg
aas
mov
shlb
jecxz
das
int3
adc
add
scas
cs
and
dec
sbbb
movsl
pop
hlt
jnp
cs
mov
hlt
dec
pop
push
adc
add
add
push
sub
scas
add
mov
dec
pop
sub
or
lods
push
inc
in
sbb
pop
in
lods
bound
push
pop
jecxz
frstor
sub
ja
jle
in
cltd
test
mov
mov
leave
repz
and
in
icebp
sbb
ljmp
sub
mov
aad
inc
mov
movsb
inc
fs
mov
mov
dec
or
ror
sahf
or
or
iret
stos
sbb
sub
dec
fcmovb
das
adc
leave
jne
add
ret
lcall
loopne
inc
ja
in
mov
sbb
pushf
out
aaa
iret
push
insl
mov
push
sub
fs
mov
adc
jp
ds
out
mov
sub
sub
sbb
mov
add
mov
mov
sbb
les
inc
test
bound
int
sbb
push
pop
test
cmpb
mov
test
fwait
pop
shl
sbb
sub
lret
lds
pop
mov
rcrb
scas
outsl
add
sti
jge
ret
inc
sub
xor
sbb
call
sbb
and
rcrl
mov
std
mov
adc
cmpsb
dec
push
popa
mov
pop
fcoms
add
add
pusha
sub
aaa
into
call
mov
cs
dec
or
test
add
in
in
pushf
pusha
lds
aad
adc
xor
mov
mov
push
jbe
push
jae
mov
daa
pop
push
inc
mov
outsb
dec
shrl
mov
sub
fildll
mov
les
xorl
divb
mov
pop
sub
sbb
push
shlb
js
cmp
in
icebp
push
ret
arpl
jl
jb
push
es
cmp
pop
xor
icebp
fs
or
push
sbb
or
shl
xchg
test
outsb
dec
sbb
aad
in
add
or
fstps
arpl
inc
adc
sbb
negb
pop
pop
sub
dec
stc
dec
cmp
inc
jno
shl
pop
stos
lret
stc
cmp
add
pop
mov
cmp
add
shlb
test
adc
stos
jae
adc
adc
stos
fstl
dec
adc
js
pop
and
lods
push
popa
adc
cld
outsb
mov
lods
xchg
jp
push
jb
dec
subb
bound
in
mov
ljmp
arpl
pusha
mov
aam
sbb
xor
inc
rcll
jae
stos
cmpsl
sarl
inc
or
mov
push
mov
mov
xchg
add
loopne
ret
bound
xor
or
pop
mov
push
push
push
lds
das
adc
repz
movswl
pop
dec
js
aas
jno
imul
adc
adc
nop
gs
and
or
out
ja
jne
fs
ss
outsb
xor
push
push
mov
or
mov
push
in
mov
loop
dec
ror
test
stc
jle
sarb
push
sar
cmpsl
or
sbb
push
add
ss
lahf
inc
movsb
psubsw
mov
popf
add
jnp
inc
lahf
or
fs
outsl
lds
xchg
xchg
fidivs
cmpsl
cmp
cli
mov
lcall
jl
js
fwait
call
bound
je
jno
stos
mov
xchg
inc
adc
inc
mov
mov
repz
push
insb
movsl
push
pop
movsl
flds
adc
or
cmp
xor
shl
xchg
xchg
scas
stos
inc
aas
jae
stos
cmc
outsb
inc
push
mull
pop
fisttpl
or
jne
fmuls
fists
jbe
xchg
xchg
and
inc
push
inc
test
add
repz
dec
pusha
iret
scas
mov
mov
je
or
cmp
mov
popa
sbbb
test
lret
pop
mov
int3
std
jecxz
dec
inc
add
jmp
test
leave
lods
rolb
in
jmp
mov
mov
push
xor
mov
rorl
dec
shlb
jg
movsl
jmp
outsb
loope
loopne
out
jbe
fadd
inc
cmp
leave
not
and
cmpsl
stos
dec
mov
push
xchg
sbbl
push
add
push
xchg
sub
out
fwait
mov
orl
rolb
xor
in
xor
mov
movsl
es
enter
lea
xor
jl
pop
and
pop
mov
fsubrp
andl
out
lock
xor
cli
jae
mov
mov
pusha
fdivr
mov
inc
loopne
pop
adc
add
arpl
pop
add
jno
sub
loope
sbb
adc
lds
fistps
ljmp
les
aas
sub
imul
xor
mov
dec
mov
pop
dec
leave
ret
sbb
adc
add
jp
inc
cmp
cli
ret
xor
inc
xor
addb
sub
jp
addr16
call
or
pop
push
jmp
hlt
push
mov
fbld
cmpsl
xchg
aad
outsl
cmp
cmp
sbb
sub
mov
hlt
jmp
push
sbb
mov
inc
test
popa
and
push
aad
inc
iret
jae
push
xchg
push
imul
jp
stos
mov
cmpsb
mov
xlat
dec
pop
or
mov
inc
adc
test
and
stos
insl
daa
cmp
add
daa
sti
ror
lock
jnp
xor
mov
mov
out
xor
arpl
out
xor
dec
fxch
fldcw
sbb
or
cmpb
sub
lea
arpl
mov
testl
imul
push
push
inc
inc
insl
push
rorb
pusha
lods
mov
jae
jno
cmp
or
push
jmp
lahf
push
jge
lods
xchg
arpl
jmp
ds
lods
jl
xor
sti
mov
mov
xchg
cli
aam
call
pop
jmp
data16
mov
int
sub
rcrb
xchg
std
mov
insb
and
sbb
adc
sbbb
or
int
add
subl
add
or
jbe
or
mov
pushf
insl
dec
and
es
adc
jbe
pusha
out
test
int
insl
cmc
aam
or
jns
cmp
scas
dec
lea
and
dec
cltd
in
test
jnp
mov
push
pusha
aam
je
mov
insb
ss
leave
push
mov
mov
mov
push
test
dec
inc
and
scas
xchg
cmp
or
xor
xchg
mov
out
xlat
scas
fisttpl
popf
mov
xorl
test
xchg
enter
fimull
std
dec
and
das
scas
push
outsl
mov
gs
leave
cmp
mov
or
sar
cli
pop
mov
pop
sbb
js
xchg
adc
jb
insl
dec
xchg
mov
addr16
and
les
es
xor
xchg
push
push
and
inc
xchg
icebp
out
lret
mov
mov
stos
or
stos
mov
push
mov
jne
daa
mov
nop
icebp
imul
dec
jns
xor
jmp
xchg
enter
inc
adc
mov
cmp
daa
icebp
mov
or
mov
stos
adc
add
sub
stc
rcl
and
push
rcll
xor
and
lea
mov
mov
push
cmp
pop
xor
addr16
incl
xor
pop
pop
cwtl
loopne
iret
popf
notb
test
out
rclb
std
push
jge
arpl
sti
pop
xchg
mov
inc
mov
jo
push
sbb
dec
sub
in
push
rclb
sub
lds
and
pushf
fcomp
jo
mov
and
std
icebp
sbbb
sahf
xchg
loop
jnp
ret
in
sbb
cmpsb
scas
mov
xchg
pop
xchg
push
cmp
cmp
and
push
stos
pop
fwait
xchg
add
cli
imul
sarb
sub
jmp
stos
lods
leave
lea
out
dec
jle
xlat
ss
jne
cmp
cmpsb
pop
fnsave
add
xor
movsb
movzbl
xchg
fs
push
sub
adc
ficoms
mov
add
imul
jae
fidivrl
sub
dec
xor
and
jg
roll
int3
pop
mov
push
lods
std
or
adcl
and
push
mov
mov
imul
pushf
xor
arpl
mov
lret
xor
jne
xor
inc
lahf
adc
ljmp
pop
mov
jmp
mov
mov
mov
sbb
or
loope
pop
mov
mov
push
mov
pop
jge
loope
sbb
cli
mov
mov
cmp
das
dec
inc
push
lods
fcmovb
int
jle
inc
call
repz
jae
fisttpl
aaa
out
inc
dec
xor
mov
and
sahf
xor
lret
aaa
ret
or
xchg
sub
icebp
jmp
jp
fbstp
dec
mov
ljmp
adc
into
or
mov
jno
iret
sub
xchg
push
xor
add
ljmp
add
test
scas
xchg
cld
add
and
mov
insl
outsl
xchg
mov
add
and
fisubs
xchg
cmp
loop
xchg
dec
arpl
adc
sarl
cmp
sub
sbb
rorb
and
in
push
shr
fwait
dec
shll
mov
aam
inc
cmovns
xchg
and
dec
gs
sub
mov
ss
inc
and
cltd
repnz
imul
sti
mov
cmp
jmp
jns
lods
pop
andl
imul
test
push
lods
adc
outsl
test
les
and
jb
xchg
jmp
inc
add
dec
pop
imul
inc
fbld
mov
test
negl
lock
push
roll
movsl
and
loope
push
push
mov
dec
cmp
scas
ds
dec
imul
outsb
and
pop
push
sti
rorl
pop
lock
jne
jecxz,pt
jb
inc
sarl
icebp
js
cltd
add
adc
sub
sahf
xor
int
addr16
nop
xor
aam
pop
addr16
add
shrd
sbb
and
xor
xor
cmpsb
mov
into
add
imul
inc
ret
popa
sub
add
push
cli
out
mov
stos
in
out
out
cmp
les
jno
mov
xchg
mov
jmp
sbb
adc
cmpsl
sbb
rol
mov
xchg
jb
pop
popa
cmp
add
sbb
lahf
mov
push
insb
or
aaa
xor
and
pop
testl
call
mov
sbb
out
out
lcall
aad
or
leave
out
fcoml
push
jns
lret
pop
add
in
movb
dec
xor
lds
inc
push
clc
lahf
sbb
dec
cmp
pop
lret
pop
dec
repnz
mov
out
shlb
sub
nop
mov
mov
sbb
daa
sti
mov
es
sarb
cmp
cwtl
inc
icebp
adcl
idivl
jno
dec
push
mov
lods
pop
fistl
pusha
sbb
mov
mov
cmp
xchg
mov
xor
test
sbb
cmp
clc
or
jmp
mov
xchg
int3
and
mov
or
xor
bound
jl
insl
mov
ss
lock
les
dec
xor
xor
mov
cmp
int
inc
pop
imul
jge
popf
in
test
dec
pusha
imul
push
outsl
shl
jae
push
jg
mov
add
inc
fs
outsb
stos
addr16
sbb
scas
je
cmp
mov
fst
sub
outsl
scas
sbb
loope
sbb
xor
rorl
sbb
out
mov
pop
leave
insb
lds
sbb
fstpl
outsb
rcrb
rolb
mov
jne
leave
sbb
popf
ret
into
out
xor
div
xchg
adc
das
sbb
scas
sub
add
sbb
addr16
cltd
inc
pop
add
mov
test
pop
andb
stc
fisttps
rep
invd
dec
jne
repnz
ds
or
xorl
stc
out
bound
pop
jle
insb
cmc
cmp
mov
data16
js
mov
pushl
addr16
outsb
sbb
out
push
popf
fldt
loopne
xchg
mov
stos
cmp
or
cmp
lods
or
sub
or
inc
jp
ret
ud0
rcrb
dec
stos
mov
les
mov
cmp
rcrb
jg
inc
lret
xchg
jae
adc
sti
rol
rcl
pop
sub
cmp
jne
mov
mov
sbb
int3
aad
ja
fnstenv
pusha
jmp
idiv
xrelease
rcll
fwait
sbb
movsb
xor
sub
inc
mov
pop
inc
rclb
ss
or
mov
aad
mov
scas
notl
cltd
lock
mov
std
loope
lock
and
jo
adc
adc
roll
mov
xlat
in
hlt
adc
cmpsl
mov
dec
push
mov
call
insb
clc
adc
aaa
jp
testb
loope
add
into
add
push
outsl
fildll
and
pop
mov
out
xchg
arpl
mov
adc
add
mov
jl
std
add
dec
fsubrl
adc
and
lret
push
clc
cmp
jp
sahf
aas
jle
icebp
jnp
jbe
out
shll
loopne
leave
inc
movsl
sbb
cmovle
jns
bound
mov
aaa
jno
aas
sub
ret
notl
pop
sarb
sbb
cmp
insl
ficoms
or
fstl
pop
dec
cli
and
push
arpl
adc
sbb
or
cli
and
clc
xor
mov
out
sub
hlt
adc
sbb
in
fdivrs
sbb
std
lcall
aaa
inc
or
jecxz
stos
lock
sbb
and
insb
stc
fldt
lods
lods
out
ds
aam
inc
jmp
les
push
cmp
sarl
pop
or
or
fiadds
mov
xor
sub
mov
xor
test
xor
adc
mov
rclb
popf
cli
add
ljmp
data16
xchg
jmp
mov
adc
xlat
ja
addr16
adc
pushf
subl
loope
int3
ds
ljmp
xor
mov
xchg
mov
mov
out
aam
jmp
fstpt
inc
scas
loope,pn
cltd
push
outsl
bound
mov
aaa
adc
and
lret
aad
cld
xchg
hlt
cmp
lcall
pop
sbb
daa
push
and
mov
jg
data16
stc
rorb
in
xor
mov
add
fbld
push
orb
ret
xchg
out
scas
lea
faddp
cs
out
aam
mov
and
popf
mov
jecxz
popf
lods
mov
aam
or
int
cld
mov
in
jns
xor
xor
movsl
jo
loope
inc
loopne
jnp,pt
dec
sub
mov
mov
daa
test
loopne
mov
mov
hlt
xchg
xchg
pop
insb
in
js
test
popf
jnp
cmp
add
and
cmp
inc
popa
jmp
add
push
sbbl
pop
cmc
or
push
mov
aad
rorl
mov
pop
cmp
cmp
shll
push
xchg
xor
xchg
ljmp
dec
enter
push
loope
pop
sbb
cs
andl
cmp
jmp
out
add
call
jns
jno
jl
jmp
or
sub
inc
or
jl
pop
out
pop
in
scas
das
pushf
cli
mov
xchg
adc
out
mov
std
sti
sahf
push
mov
lods
pop
fsubr
lods
pop
arpl
pop
jns
jmp
push
cmpsl
fsubrs
mov
fldcw
mov
xchg
mov
aaa
pop
repnz
or
cmpsb
fs
mov
lahf
cmc
jecxz
stc
fwait
movsl
mov
mov
adc
iret
shlb
xor
lods
nop
xchg
xchg
pop
ret
sahf
dec
sub
cmp
add
out
lods
push
sbb
xor
orl
daa
pop
jnp
into
test
clc
dec
xor
mov
cltd
push
shlb
mov
mov
xor
pop
push
test
xchg
push
daa
jmp
jle
dec
jmp
aaa
xorb
imul
or
sub
jnp
mov
pop
mov
incl
or
cmpsb
mov
inc
jno
in
clc
xchg
add
data16
jmp
in
and
repz
cli
aam
pop
imul
std
out
cwtl
shll
mov
sbb
sub
stos
and
stos
pop
mov
pop
es
or
fldt
nop
sbb
pushf
add
sub
mov
mov
loopne
fists
sub
and
movsl
fsubr
sub
push
cmpsl
out
add
mov
loope
outsl
int
mov
cmp
bound
popa
es
push
aaa
pop
inc
fisubs
or
gs
cmp
popf
push
mov
in
into
add
add
fidivrs
fs
pop
mov
clc
mov
add
jge
xlat
mov
das
push
mov
lret
mov
imul
push
jmp
mov
mov
es
mov
dec
and
mov
in
pop
or
push
test
adc
enter
lds
stos
inc
out
std
inc
shlb
pop
fisttpll
cs
dec
sbb
add
popa
sub
ret
mov
mov
stc
push
pop
push
lret
add
lock
cli
dec
pusha
pop
xchg
xchg
addr16
xor
lock
mov
outsb
inc
xor
jl
push
hlt
ds
ja
xchg
js
push
imul
rcll
mov
xor
shlb
dec
repnz
sub
lods
lods
mov
pop
sbb
fadd
pop
or
pushf
mov
adc
test
pusha
xchg
mov
pop
call
mov
je
dec
xor
test
dec
adc
fists
in
or
push
pop
mov
mov
adc
pop
bound
insl
push
dec
lcall
mov
xchg
in
xor
pusha
mov
repnz
jne
icebp
in
test
inc
ret
out
cmp
pop
jl
cld
call
xlat
cli
andl
arpl
cwtl
fsubr
mov
push
push
pop
divl
test
mov
mov
push
and
enter
adc
daa
movsl
fisttpll
pop
adc
adc
xor
lret
subb
mov
push
fisubrs
mov
dec
inc
mov
push
dec
or
push
into
nop
out
add
cmp
mov
push
stc
lcall
mov
cwtl
jecxz
loope
mov
mov
pop
test
add
add
or
test
iret
jmp
pop
mov
in
push
add
aam
pop
xor
cmpsb
iret
loopne
pop
rolb
pop
lds
push
out
push
pop
out
jle
xchg
or
push
jge
mov
std
xchg
shrl
test
scas
lds
adc
fwait
sahf
push
and
mov
cltd
enter
outsb
mov
imul
jecxz
or
or
inc
cmc
das
sahf
je
ljmp
loopne
insl
jmp
push
insl
lss
pop
xchg
mov
testl
aaa
movsl
sub
repz
sti
mov
jns
dec
aad
xor
and
push
xchg
and
sub
mov
faddl
pusha
inc
add
adc
pop
mov
push
test
pop
stos
out
jno
lahf
add
int
lcall
jno
inc
adcl
xor
mov
popa
xlat
aaa
stc
loope
imul
sbb
loop
adc
adc
lcall
push
idivb
out
faddp
rorl
pop
les
push
fidivs
dec
lds
shrb
lods
out
insb
add
or
cmp
fmull
gs
pop
dec
mov
pop
cltd
push
mov
outsl
shlb
jbe
scas
mov
outsl
dec
shlb
xchg
mov
push
divl
fimull
ljmp
and
fs
inc
test
gs
lock
mov
xlat
nop
mov
xor
cltd
dec
push
data16
xor
and
es
stc
xorb
call
pop
call
daa
pop
outsl
sbb
xor
cwtl
popf
xor
stos
xchg
mov
pop
nop
mov
movsl
punpckldq
out
lds
mov
jg
add
mov
and
sbbl
jmp
push
push
xchg
leave
add
push
test
push
jge
int
movsl
cwtl
in
icebp
test
stos
push
daa
lahf
test
lea
bound
jecxz
stos
add
mov
or
and
xchg
adc
mov
adc
dec
lret
inc
xor
push
mov
fdivrl
pop
mov
dec
icebp
add
pop
inc
sub
out
movsb
enter
push
mov
mov
sub
add
iret
and
cmpsl
and
jecxz
cli
subb
push
loope
jne
sti
sbb
rcrl
mov
paddb
mov
dec
sub
lahf
add
ret
or
stos
dec
sub
pusha
cmpl
inc
lock
mov
jb
test
xchg
push
or
das
int
mov
sbb
pop
xor
fildl
iret
loopne
and
jle
sbb
or
pop
std
addl
xchg
pop
mov
sbb
mov
pop
addr16
mov
test
jg
fadd
add
test
mov
cmp
and
jns
mov
repnz
addb
pop
scas
push
jge
stos
mov
pop
mov
in
sub
rcll
mov
into
jecxz
cmp
stos
push
push
fnsave
mov
mov
xor
mov
loop
cld
xchg
cltd
jnp
into
sub
adc
addb
jg
pop
jns
daa
push
lds
pop
or
clc
in
jne
mov
jbe
fcompl
and
mov
es
ss
inc
sub
sub
inc
mov
xchg
ret
mov
out
mov
rcl
or
data16
push
in
and
xchg
test
test
loopne
and
repnz
mov
pop
pop
mov
loop
pushf
dec
mov
fs
dec
inc
add
mov
mov
sub
shlb
mov
pop
sbb
cmp
decl
les
loope
cld
test
rcll
push
cmpsb
pop
adc
cltd
push
int3
mov
enter
in
pusha
jnp
adc
ds
dec
jg
cmp
push
std
inc
repnz
les
cmpsl
xchg
cli
lods
or
xchg
movsb
addr16
mov
xor
pop
popa
fmull
push
inc
hlt
sti
stos
in
cwtl
mov
sti
dec
pop
xchg
movsl
pop
xchg
inc
push
cltd
clc
aaa
lock
lds
xchg
inc
mov
and
jo
adc
push
push
pusha
xchg
out
jno
jge
dec
sub
pop
fmull
insb
xchg
testl
push
push
js
adc
enter
mov
mov
shll
xchg
test
in
ljmp
xor
je
dec
push
sub
or
ficompl
out
cmp
mov
mov
xchg
movsb
cmp
inc
ljmp
mov
push
loope
sbb
adc
cltd
and
pushf
rcll
xchg
mov
dec
scas
rolb
jae
push
pop
pop
mov
xor
jnp
mov
or
add
push
int
inc
subb
mov
jge
outsl
adc
sbb
dec
iret
sbb
inc
or
cmpb
loop
daa
out
cmpsb
mov
cmp
ret
das
fwait
push
sbb
add
ret
xor
mov
das
gs
xchg
sub
imul
loopne
sbb
sarb
pusha
mov
xor
xchg
or
outsb
push
in
in
out
and
adc
sbb
jl
mov
int3
fistpll
dec
adc
icebp
sub
add
or
cmp
lret
cwtl
pinsrw
es
pop
cli
insl
sub
into
cmc
lods
or
jo
jmp
in
subb
cmc
movsl
jle
push
mov
mov
aas
in
mov
loope
repz
les
dec
push
jg
mov
push
or
loopne
or
cld
loop
in
out
insb
sbb
js
pop
or
ret
fsts
rol
subl
inc
push
sbb
xor
or
les
enter
inc
inc
xchg
adc
adc
cli
xchg
pop
xchg
jl
repz
movsl
andl
cmc
lods
push
jmp
ret
xor
jno
pop
xor
push
ss
xchg
not
scas
scas
dec
cs
scas
sbb
adc
arpl
aam
mov
xchg
ficompl
movsb
push
lds
xor
sbb
test
in
xchg
stos
add
gs
shll
das
shlb
ficomps
add
push
sarb
dec
fdivrs
fs
mov
stc
mull
out
sbb
fs
and
inc
ds
mov
jl
loope
sti
fsubs
dec
push
fstpt
fdivrs
test
adc
fs
jmp
add
inc
lods
dec
pop
fistpl
aad
outsl
cmp
repnz
and
es
and
dec
inc
jp
or
jp
call
xor
jae
hlt
add
add
scas
ja
test
cmp
in
insl
dec
cwtl
cld
pop
xchg
push
cltd
ror
xchg
xchg
das
inc
outsb
pop
lds
daa
xchg
cmp
sbb
insb
aas
iret
push
mov
mov
dec
or
mov
and
dec
int3
mov
pop
int
out
cmp
mov
stos
push
dec
sahf
or
loope
dec
pushf
loope
scas
cmpb
push
rorl
mov
add
pop
lret
out
push
daa
sbb
dec
shlb
jnp
and
xor
gs
int
std
lods
flds
adc
adc
sub
dec
repz
aad
ljmp
dec
lods
inc
lea
stos
test
imul
jns
jg
cli
xorb
xor
jg
das
xchg
repnz
dec
es
rcll
pop
mov
subb
addl
out
mov
inc
lcall
mov
movsl
hlt
dec
jmp
movsl
jl
aaa
icebp
and
xor
out
repz
outsb
movsb
mov
shl
jb
push
inc
jp,pn
lock
or
xor
scas
rorl
mov
lea
push
mov
xchg
scas
hlt
lahf
push
aad
test
mov
sub
xchg
sub
andb
cli
mov
fsubrp
ret
xchg
mov
aas
sbb
sub
movsb
inc
adc
inc
fwait
push
sbb
ficoml
popa
popf
xor
aaa
or
mov
push
or
paddusw
cli
addr16
add
sub
cltd
aas
lcall
jl
mov
rcrb
je
ss
std
push
test
mov
fistpl
aam
addr16
sub
addl
in
lahf
shrl
mov
std
nop
mov
es
add
lock
dec
adc
std
ud2
dec
or
mov
xchg
sbb
incl
call
xchg
aas
adc
dec
imul
into
xchg
sub
lods
sbbl
cwtl
add
cltd
push
leave
gs
js
push
cltd
xchg
in
int3
mov
cld
outsl
aad
and
mov
xchg
pop
jmp
popf
dec
cmc
enter
repnz
out
outsl
push
cli
pop
cmpsl
mov
xchg
push
gs
sti
pop
enter
mov
ret
pop
jge
inc
lock
or
inc
jle
dec
sub
cmp
pop
sti
repz
xor
enter
out
sbb
push
jmp
cmp
in
sbb
out
and
bound
fistl
movb
sub
test
sub
stc
adc
stos
sbb
les
fwait
je
cwtl
cltd
or
add
test
or
cmpsb
push
mov
mov
movsb
bound
xor
mov
push
scas
nop
sbbl
jns
dec
pop
loopne
sub
aad
pop
add
loop
orl
mov
or
call
ficompl
scas
lea
clc
rcr
sbb
adc
add
xchg
xchg
pushf
mov
jb
push
cmpl
sbb
sti
xchg
shr
pop
mov
lea
clc
rol
sub
sbb
hlt
xchg
xchg
inc
pop
js
rcrb
int
push
dec
push
pop
in
rol
faddl
std
sbb
shl
cmp
pop
dec
adc
scas
push
mov
pushf
div
fldcw
test
sub
adc
add
sub
sbb
fildll
in
mov
dec
and
jb
inc
and
rcrl
xor
mov
push
mov
popfw
shlb
and
jnp
add
dec
bswap
into
ret
add
and
rcll
mov
mov
xor
sub
in
std
and
xor
adc
hlt
push
push
or
dec
ret
push
shlb
lods
arpl
add
imul
xchg
dec
adc
testl
jno
mov
sub
mov
out
aad
sub
and
xchg
ret
adc
rol
mov
repnz
in
xor
inc
push
lcall
pop
push
mov
inc
ja
add
jo
outsb
lret
imul
jge
cmp
aaa
mov
int3
cmp
cmp
xchg
cmp
cwtl
int3
add
and
dec
arpl
loopne
aad
aaa
cmp
mov
xor
imul
mov
in
cmp
mov
cmpsl
cmpsb
adc
dec
in
add
jae
int
out
dec
dec
mov
dec
mov
mov
clc
sbb
add
push
leave
repnz
insb
and
inc
test
fs
and
xchg
aad
push
mov
sahf
or
loope
lahf
mov
jle
add
cmc
jnp
push
jns
aaa
loop
add
inc
inc
loop
adc
out
stc
cli
push
fs
test
aaa
jecxz
xor
mov
xchg
inc
idivl
adc
rolb
and
out
mov
fwait
test
ret
mov
add
jb
push
cmp
data16
push
xchg
shr
arpl
lock
cmp
popf
dec
sbb
data16
jne
mov
mov
aam
mov
leave
dec
jmp
mov
inc
aad
xchg
lcall
push
mov
inc
pushf
insb
mov
fisubs
imul
inc
cmp
pop
cltd
jns
movsb
inc
jp
push
inc
lret
test
pop
sub
stos
sbb
push
sbb
sub
add
lods
loope
stos
aas
jns
repz
mov
lret
sbb
adc
jne
inc
mov
sbb
mull
aad
inc
fst
sbb
and
lds
jo
insl
push
cmp
pop
inc
pushw
dec
cmp
dec
xor
lds
pop
pop
jg
cmc
pop
dec
andb
cmp
push
and
jge
xchg
push
in
xchg
ret
dec
mov
push
add
jbe
fs
in
jo
mov
jno
pop
xor
lock
es
add
mov
sti
test
push
push
in
push
mov
pop
popa
dec
nop
mov
pop
cmp
cmp
testl
and
hlt
divb
and
out
jno
dec
fstl
jne
xchg
es
pop
mov
cmpsl
cmpsb
stc
lcall
push
repnz
jnp
bound
in
xor
lock
xchg
movsl
mov
outsb
mov
mov
popa
lods
loopne
lods
nop
inc
mov
pop
jo
mov
xlat
adc
dec
and
cmc
or
scas
jo,pn
adc
cltd
std
and
adc
sub
daa
out
add
adc
imul
int
lds
cli
cmp
jmp
xchg
mov
or
pop
jle
push
pop
and
addr16
imul
adc
xor
lds
daa
lods
test
mov
fdivrl
push
fbstp
inc
push
test
repnz
je
jp
push
lods
inc
pusha
mov
rorl
popf
mov
sub
lcall
sbb
dec
arpl
jo
aaa
jl
popa
fiaddl
mov
cmp
aad
adc
cld
xor
push
pop
xor
xorl
mov
push
sub
pop
inc
hlt
cmpsl
fwait
lods
iret
jb
call
jbe
fcoms
mov
fisttpll
aaa
xor
inc
data16
push
inc
jle
cwtl
jecxz
push
xchg
cmp
rcl
push
pop
ret
or
cmp
out
lods
sbb
xchg
jl
aad
push
mov
push
push
cmpb
cld
pop
or
xor
sahf
push
jl
jmp
mov
loop
je
out
cmp
inc
jbe
jbe
out
pop
and
dec
ret
clc
mov
pop
lds
jp
and
ret
imul
das
es
movaps
push
daa
sti
adc
stos
in
addr16
add
xchg
movsl
decl
pop
movsl
jg
leave
push
dec
aam
mov
mov
loopne
xchg
mov
adc
jle
adc
sub
xchg
pop
imul
je
lahf
lods
adc
inc
pop
jmp
jmp
xchg
movsl
mov
or
and
imul
sarl
mov
pop
cmpsl
push
rcrb
dec
mov
les
adc
pop
xchg
push
sbb
cmp
popa
xor
loopne
ss
je
adc
push
sti
ret
outsl
mov
lds
insb
sub
mov
push
pop
test
dec
cmp
and
cmp
dec
sbb
ljmp
je
gs
sahf
and
clc
lcall
inc
sub
aad
rcrb
gs
loop
outsl
std
sbb
pop
iret
push
loopne
decl
jne
sbb
mov
dec
xchg
icebp
aaa
movsl
jmp
push
add
jp
and
outsb
mov
and
inc
lods
push
pushf
fstp
sub
jmp
leave
pusha
mov
cmpsl
int3
rolb
dec
cmp
test
mov
xchg
adcl
and
or
jno
cwtl
lahf
out
imul
jne
inc
push
or
pop
add
jg
ss
aam
cli
leave
icebp
pop
fcomps
fisubl
sbb
insl
xlat
loope
cltd
icebp
fidivrl
xchg
loope
dec
or
add
out
pop
sbb
fldl
int
mov
jg
jb
das
mov
cmp
xor
insl
iret
fmuls
add
pop
xchg
out
jnp
lahf
gs
sbb
cmpb
in
xchg
jge
jb
mov
lock
or
fsts
jno
mov
inc
push
fstl
adc
shrl
pusha
push
lock
lcall
test
mov
push
fmull
cmpsl
inc
fcomp
push
inc
repz
shrb
repnz
cmp
jp
cmp
xor
push
out
xor
int
jb
fldt
jecxz
stos
xchg
les
and
decb
test
in
lret
adc
xchg
aad
mov
xchg
int
adc
mov
mov
negl
push
inc
mov
inc
insl
cmp
out
pusha
stos
pop
xchg
shlb
ficoml
pop
mov
push
into
cmp
jnp
jl
mov
imul
inc
adc
adc
cld
cmp
push
mov
jae
adc
xchg
xor
aaa
push
jmp
xchg
rorb
push
inc
jae
xor
imul
xor
push
popa
mov
mov
stos
int
or
in
inc
xchg
daa
jnp
aaa
std
cmp
std
jmp
pop
js
xchg
mov
xchg
and
and
aas
leave
cmp
cmp
ja
rcll
fwait
lcall
push
lcall
pop
mov
js
cmc
xchg
lcall
cmp
pop
push
and
test
cmp
cs
sbb
pop
dec
cmp
es
int
mov
adc
gs
push
dec
fwait
or
and
and
pop
outsb
scas
add
ja
adc
dec
add
scas
xchg
cmp
dec
fucomp
cmpb
mov
mov
icebp
shr
stc
jne
inc
mov
mov
popf
loope
pop
ret
sahf
and
fstl
rcrl
pusha
sbb
cld
and
add
lcall
in
xor
inc
inc
jbe
xor
sahf
or
jmp
pop
mov
or
and
mov
mov
rorl
insb
into
push
lcall
dec
mov
movsb
ds
xchg
insb
and
loopne
lret
cmp
xor
insb
aad
int
and
inc
sub
inc
sub
mov
mov
fs
mov
jl
jg
scas
push
into
js
cmp
push
repz
add
es
ss
mov
xor
push
lds
dec
lcall
call
sub
xchg
das
inc
jnp
pop
cwtl
call
jbe
mov
cld
xor
adc
shlb
repz
mov
lcall
ffree
scas
adc
or
rcrb
lds
dec
or
movsl
enter
dec
pusha
xchg
sbb
sbb
jbe
andb
out
test
add
dec
int
aam
dec
xchg
sub
rorb
jo
and
sub
mov
pop
aaa
and
ja
fmul
adc
xor
push
or
xlat
or
mov
mov
sbb
loopne
fimuls
sarb
je
testl
mov
test
rol
dec
pop
aam
and
lcall
xchg
int3
xchg
dec
pop
imul
bound
mov
das
lret
idivl
xchg
sbb
inc
cmpsb
lcall
imul
mov
lock
repnz
push
fucomi
add
insb
cmpsb
stos
fldlg2
in
pop
sti
mov
adc
aaa
xor
mov
popa
and
xor
inc
cmp
fs
or
xor
in
jge
data16
ja
fimuls
int
sbb
push
push
inc
push
aaa
jns
in
dec
int3
pop
cwtl
jns
sbb
cltd
or
sbb
cmp
orb
lret
sub
in
mov
movl
negl
aaa
adc
push
sub
mov
iret
jecxz
ljmp
xor
fdivs
sub
cmp
popf
push
into
cmp
lock
mov
sub
fstpt
jns
adc
dec
div
in
mov
fsubrs
ficomps
xchg
dec
sbb
xchg
xchg
test
push
aam
insl
mov
xor
std
add
cltd
xchg
lret
sahf
lret
shll
pop
out
push
imul
mov
imul
cmpb
into
aas
jne
js
add
cmp
mov
imul
pop
push
lcall
out
mov
sub
ja
out
icebp
inc
mov
cmp
fstenv
push
sub
pop
mov
jno
data16
dec
pop
sub
into
lcall
movsb
pop
adc
andb
inc
lcall
pop
mov
das
and
insb
add
nop
mov
repnz
insb
sub
mov
fbld
fdiv
add
addb
mov
in
aas
mulb
inc
imul
add
sbb
test
pop
fcmovnu
dec
push
jmp
pop
imul
mov
cld
mov
fnstcw
push
dec
cmp
shrd
sti
addb
jae
mov
popa
jmp
pusha
push
cli
out
push
fwait
test
cmc
arpl
or
mov
add
sti
pop
sub
push
mov
hlt
jae
cmpsl
mov
js
jnp
shl
pusha
pop
dec
mov
sbb
addr16
mov
or
sub
lret
arpl
adc
loope
nop
sub
xchg
imul
add
sahf
cmp
mov
scas
adc
xchg
cmpsl
pushf
fsubl
test
pop
pop
inc
mov
xchg
push
sahf
addl
mov
ss
push
negb
add
ret
add
movsb
or
jo
mov
sahf
cs
sub
mov
inc
jg
int
mov
ret
jp
mov
mov
ja
dec
fldl
inc
or
cmp
pushf
sti
dec
cli
int3
sahf
in
aam
add
mov
inc
fldl
test
inc
and
and
or
lea
mov
cmp
pop
dec
inc
loope
je
out
outsb
mov
insl
lods
movsb
push
rcrl
dec
clc
push
iret
test
dec
rclb
ror
or
pop
jb
or
mov
pop
add
or
fisttpll
cmp
jbe
xchg
jo
nop
sbb
ja
cmc
inc
xlat
mov
cli
fwait
nop
test
arpl
sbb
jmp
arpl
cs
dec
xchg
arpl
jb
mov
adc
dec
mov
xlat
add
adc
pop
sahf
push
faddl
add
ret
adc
fs
into
ss
call
loope
and
fwait
out
hlt
sbb
jmp
shlb
push
push
notb
repz
mov
arpl
nop
and
mov
outsb
sbb
push
cmp
jae
jno
movsl
mov
lret
sub
enter
xchg
pop
add
call
cmp
xor
dec
mov
cwtl
lock
pop
stos
adc
sub
sub
mov
call
mov
loopne
cmp
iret
cmp
jmp
inc
out
movb
fstpl
push
inc
fsubrp
jae
aam
mov
mov
inc
push
psubw
addl
xchg
std
loop
ffree
xor
test
enter
and
push
in
mov
std
adc
sbb
mul
sub
es
fisubs
movsl
push
cmp
sub
sub
sbb
xchg
xchg
cmpl
adc
pop
xlat
and
xor
xchg
cmp
pop
sbb
bound
mov
xor
icebp
or
xor
inc
cmpsl
pop
call
inc
scas
ja
pusha
mov
out
jb
fistpl
mov
in
hlt
insb
pop
push
pop
jnp
ljmp
push
jl
cmp
loop
push
fisttps
xor
push
mov
xchg
lret
mov
out
shll
rolb
cmc
pop
fwait
push
jns
mov
test
inc
jl
xor
add
dec
and
pop
out
mov
scas
mov
sub
mov
ljmp
rcll
or
jecxz
and
adc
jmp
xchg
jg,pn
fldenv
and
cltd
ljmp
sub
push
fdivl
out
sub
jecxz
adc
dec
iret
jl
xchg
pusha
into
sub
sub
and
jmp
mov
xchg
into
jecxz
mov
sbb
cwtl
inc
ret
jo
stc
stos
adc
jae
inc
les
push
xor
or
xor
sbb
mov
cmp
xchg
adc
mov
mov
mov
test
xor
cltd
sbb
or
mov
push
sbb
scas
ja
xchg
inc
adc
sahf
ljmp
push
jecxz
cwtl
cmc
add
dec
popf
and
jecxz
xor
xchg
cmp
enter
sarb
outsb
ds
cli
push
mov
push
pop
fisttps
outsl
xchg
jmp
xlat
out
pop
lds
mov
popa
xchg
shrb
sub
add
pushf
lea
lea
data16
andb
adc
xor
add
push
das
mov
ljmp
jo
test
clc
sub
sub
sub
mov
adc
push
dec
stos
shrb
push
xchg
or
call
cmp
jbe
mov
xor
push
mov
pop
aaa
xor
sbb
into
pop
xor
inc
aam
sbb
call
sbb
xchg
fs
test
ficompl
std
mov
adc
cmp
sub
test
test
jbe
sub
in
mov
mov
pushf
add
fsubrs
mov
xchg
ffreep
mov
insb
jg
arpl
adc
adc
in
addr16
shlb
push
sbb
cmp
ret
push
mov
mov
push
nop
out
cmpb
loope
inc
mov
or
pop
jle
push
xchg
xor
test
cwtl
sar
cltd
jp
push
fcoml
hlt
and
jl
mov
arpl
xchg
dec
into
sbb
mov
insl
push
test
sub
lea
sti
mov
sub
aaa
or
cld
fsubl
cltd
sbb
xchg
dec
iret
jp
movsl
rclb
cmp
adc
push
xor
aas
sbb
sub
xor
les
sbb
add
push
fcmovnbe
push
inc
jecxz
adc
pop
cwtl
jmp
dec
ss
clc
call
push
inc
mov
rorb
or
xchg
sbb
cmp
rol
push
nop
cmp
int
testb
js
inc
add
inc
mov
ljmp
idiv
push
mov
mov
mov
jl
pop
adc
mov
inc
xor
orb
in
xor
push
mov
or
adc
lods
mov
cmpsb
inc
mov
pop
dec
cmp
xchg
mov
pop
call
mov
lret
mov
add
inc
stc
jno
scas
mov
mov
mov
sahf
inc
rcrl
ret
mov
out
push
mov
mov
lods
xor
inc
mov
dec
enter
sbb
xchg
scas
int
je
pop
out
inc
sbb
in
cmpsb
pop
icebp
add
loope
fpatan
rcrl
sub
xor
push
sub
js
add
inc
out
cli
loop
push
loope
out
and
add
loop
lods
and
dec
lock
fmull
repz
add
cmp
xchg
fistps
insb
shll
inc
mov
fnstenv
in
push
dec
pop
cwtl
movsb
repnz
in
mov
jae
imul
mov
or
stos
jb
je
inc
scas
lods
dec
mov
sti
jnp
jb
daa
int3
dec
mov
xchg
jb
jnp
and
outsb
dec
call
add
pavgb
test
or
mov
sub
or
out
cld
aas
jns
push
mov
frstor
mov
jo
test
add
aaa
jl
pop
cwtl
xlat
and
pop
data16
aaa
or
push
sbb
add
inc
xor
push
xor
pop
jmp
outsl
xchg
adc
adc
repz
xchg
ds
and
mov
cmp
add
movsb
xchg
xchg
inc
iret
mov
inc
lods
xor
lahf
mov
jg
adc
sub
xchg
push
loop
jl
repnz
test
cltd
outsl
mov
cs
cmp
addb
add
out
sub
iret
mov
xor
inc
ret
jo
ds
sub
daa
ss
sbb
sub
ljmp
leave
xor
and
or
aam
add
pop
cmp
mov
pop
push
outsb
jnp
mov
scas
jge
js
leave
cmpsb
outsl
mov
clc
push
cmp
lods
adc
lret
fnsave
fcompl
cmpsl
gs
mov
fisttps
stos
adc
insl
cmp
shlb
icebp
nop
inc
ret
xchg
repz
dec
mov
std
test
lahf
add
shll
out
pop
pop
pop
xchg
outsb
jmp
sbbb
xor
cli
jecxz
outsb
insb
xchg
jp
stos
pop
xchg
movsl
popf
aas
in
movsl
dec
repz
dec
mov
dec
jle
call
xchg
mov
mov
popa
adc
sub
jo
lcall
mov
outsb
jo
movsl
negb
test
stos
lock
pushf
dec
shll
sbb
imul
cmp
adcl
and
out
mov
cs
leave
imul
gs
jp
loope
jns
jno
call
nop
jl
inc
jg
mov
clc
add
out
sarl
and
sahf
in
xor
ljmp
filds
in
cmc
pop
jb
rclb
stos
iret
or
push
movsb
pop
mov
jecxz
lret
inc
test
add
mov
cmp
arpl
pop
mov
xchg
test
pop
sbb
push
add
mov
xchg
mov
and
push
jbe
leave
daa
jne
inc
jmp
mov
jmp
das
outsl
fimull
mov
lret
inc
aaa
mov
stos
faddl
mul
scas
sbb
fcmovu
mov
sub
add
into
and
jb
xchg
lahf
cltd
fldpi
sbb
and
lret
in
fstps
dec
xor
mov
cmp
inc
mov
std
test
pop
loopne
add
cltd
push
lahf
jmp
aam
andl
fbstp
sbb
das
pop
xor
mov
xchg
sub
sti
inc
nop
push
aas
xor
mov
xchg
mov
push
push
or
dec
leave
inc
pop
or
mov
sbb
mov
mov
bound
sub
test
inc
daa
jnp
lock
dec
cmp
or
aam
insl
fisubl
adc
jg
cmpsl
flds
insl
inc
mov
or
pop
jno
repnz
rorb
pop
insl
aaa
or
subl
push
jp
cmp
and
notb
and
pusha
iret
inc
shrl
push
loope
lods
jnp
cmc
xchg
xchg
jmp
test
aad
push
outsl
lods
pop
shrb
inc
jne
lods
mov
mov
das
enter
iret
fidivrs
sbb
aas
rorb
iret
adc
pop
test
js
sub
and
outsb
jmp
inc
adc
sbb
cmp
int
sbb
fisubs
mov
call
or
pop
aaa
mov
test
popa
aam
lock
repnz
in
xor
or
scas
test
mov
cmp
fildl
mov
mov
in
and
sti
cmp
mov
movsw
mov
mov
sti
sub
push
inc
jp
push
mov
lock
jmp
outsl
loopne
cwtl
sbb
or
ret
sub
insb
jl
outsl
in
popf
mov
adc
adc
mov
jnp
mov
test
sub
pop
cwtl
push
adc
pusha
mov
mov
inc
mov
add
xchg
push
js
mov
jmp
pop
mov
mov
shrl
mov
push
mov
fdivr
sbb
mov
sub
jl
jnp
lock
mov
stc
fs
lock
stc
mov
loope
jnp
sahf
mov
loop
fnstcw
mov
int3
movsb
insl
cmp
xlat
dec
icebp
shll
or
pop
xor
jge
das
es
dec
jmp
dec
cs
js
mov
imul
push
pop
lret
mov
cmp
pop
adc
das
scas
xchg
es
outsb
dec
cmp
add
aaa
adc
sar
popf
dec
mov
cmpl
mov
aam
mov
jns
repz
test
sub
or
aas
and
cmp
add
sub
inc
stos
cmpsb
xor
cld
insb
imul
sbbb
pop
inc
xchg
shll
jle
lock
and
add
push
ret
in
mov
es
mov
ds
test
push
and
orb
popf
out
pusha
sub
inc
sti
xchg
loope
cmpsb
jns
sbb
push
test
ja
fs
and
outsb
xor
and
ret
repz
cmpsl
mov
sub
jns
orb
and
movsb
pop
sbb
pop
dec
xchg
sub
add
in
xor
movl
pop
jo
push
test
arpl
sahf
icebp
or
dec
and
rcll
mov
std
fsubs
imulb
mov
mov
mov
cmpl
xor
pusha
movsl
mov
jge
bnd
mov
dec
sbb
scas
insb
mov
sbb
and
test
divl
lret
int3
dec
enter
xchg
jp
and
rclb
dec
loop
in
fisubs
mov
repnz
mov
sub
jo
and
dec
jp
idivl
pusha
gs
inc
sbb
out
sbb
movsl
mov
mov
jo
xor
inc
sbb
adc
shlb
lods
sbb
cs
aam
mov
aas
cmp
pop
shrl
aad
dec
adc
mov
inc
cmpsb
mov
dec
fstpt
or
lods
dec
popf
mov
fchs
inc
pop
and
mov
cli
sahf
loop
inc
sub
movsl
mov
mov
mov
iret
sub
jno
inc
and
mov
or
push
pop
jb
rolb
dec
mov
scas
mov
rcrb
scas
inc
and
cwtl
xor
inc
je
out
mov
inc
fisubrs
test
stos
sarl
pop
pop
adc
fstp
jmp
add
rdpmc
add
fsubrs
fisubl
stos
cmp
aas
int3
xchg
adc
mov
aam
je
sbb
shll
out
mov
and
jge
aam
xor
sub
xchg
dec
orb
ja
int3
fistps
push
mov
fs
add
fsubrl
push
dec
dec
repnz
sbb
sahf
pop
cmp
dec
pop
bnd
test
mov
les
aam
std
adc
mov
in
lret
inc
hlt
jnp
sahf
pop
vmptrst
mov
push
xor
push
out
in
jbe
inc
aad
aad
sbb
fwait
inc
pusha
shll
and
movl
and
ljmp
sti
lret
jno
stc
cmp
sub
sti
test
adc
aad
pop
and
mov
sbb
sbb
sar
xor
pop
jl
leave
adcl
mov
adc
imul
push
inc
lcall
int3
xchg
cmp
out
mov
jle
je
sub
and
cmp
gs
fwait
stos
push
icebp
rcr
andb
jae
and
cmp
cmpsl
lods
test
bound
imul
hlt
into
xchg
test
xchg
rcrb
sbb
aad
lfs
xchg
xor
sbb
sti
xor
pop
faddp
dec
jmp
insl
fs
sub
pavgb
pop
lods
call
dec
jge
ds
adc
sbb
cmp
jle
or
call
and
ret
jb
ds
adc
loope
idivl
jae
loop
and
divl
mov
ds
cltd
test
xchg
or
testl
fbld
es
jns
popf
dec
std
scas
nop
sub
shl
lahf
stc
xchg
mov
adc
mov
xlat
test
iret
in
out
mov
ficompl
xor
pop
jl
in
scas
fwait
xor
icebp
mov
testl
mov
adc
mov
fbstp
jb
and
out
mov
rolb
in
add
pop
lods
bound
pop
aam
xor
dec
cld
sbb
mov
js
cmp
cmp
inc
in
stc
and
out
add
out
lahf
scas
aaa
cmp
sbb
lods
sub
hlt
sti
mov
lret
or
lods
jp
or
mov
rolb
dec
outsb
cli
sbb
inc
mov
and
dec
sub
fimuls
std
mov
mov
adc
cmp
or
adc
jg
dec
and
pusha
hlt
lret
pop
js
pop
leave
ds
and
push
jb
sub
fcompl
jns
mov
test
jl
scas
das
jp
adc
jmp
push
xorb
lds
sbb
popf
jns
sub
jbe
add
fidivs
lock
xor
ret
inc
dec
jp
adc
in
mov
inc
addr16
mov
mov
mov
and
or
jo
dec
push
clc
push
sbb
mov
or
arpl
mov
mov
xor
test
mov
jae
loopne
inc
jle
icebp
rol
inc
pop
add
cmp
xchg
aam
inc
xchg
inc
imul
push
int3
addl
int
mov
xchg
test
ja
test
lret
ja
xlat
out
cmpl
data16
adc
jno
sti
insb
test
xor
push
imul
pushf
pcmpeqb
pop
das
test
fucomip
and
cmp
cwtl
clc
jle
pop
mov
pop
es
in
repnz
mov
dec
adc
pop
fadds
push
cltd
pop
pusha
fistl
mov
std
mov
js
jnp
add
xchg
cld
sbb
mov
and
xchg
xchg
mov
testb
imulb
ds
das
mov
pop
or
fists
inc
cli
cmpl
les
inc
or
xchg
cmp
cmp
fdiv
cmp
pop
fisubl
out
js
orb
insb
testb
mov
pushf
repz
add
std
inc
shl
arpl
fmul
push
adc
int3
sub
in
ss
lods
ljmp
add
mov
jge
xor
xlat
pushf
out
jmp
jl
mov
cmp
xlat
lcall
pop
scas
xchg
fneni(8087
sbb
loope
lds
fs
add
dec
mov
mov
andb
int
in
jecxz
imull
cld
in
mov
dec
pop
mov
xchg
je
lcall
sub
daa
les
mov
iret
sub
jae
cwtl
roll
mov
out
cmpsb
pushf
sub
les
sbb
popf
pop
sbb
out
cmc
rcl
test
cs
mov
mov
and
filds
push
ja
iret
mov
in
andb
js
or
pushf
mov
lods
lret
pushf
inc
in
sahf
inc
or
loop
jp
jmp
jecxz
cld
lret
push
mov
pusha
into
hlt
jmp
dec
repnz
fisubrs
fisubl
pop
cmc
cwtl
sti
push
inc
mov
or
dec
out
mov
test
das
loopne
xchg
lret
xor
popf
mov
pop
dec
subb
aaa
insl
or
lock
dec
arpl
dec
jae
fldt
push
jb
stos
aaa
and
test
mov
fbstp
sahf
je
into
in
sub
out
pop
int
or
push
cld
pop
aaa
xchg
nop
mov
test
xor
push
and
fcompl
xor
fwait
shl
sbb
aam
repz
push
pop
or
dec
mov
and
imul
xchg
mov
scas
add
mov
testl
adc
mov
mov
pop
jge
push
xchg
cmp
insb
push
pop
mov
mov
jmp
jnp
mov
dec
inc
mov
je
adc
js
inc
pop
into
add
sbb
cmpsl
pop
fwait
adcb
or
sbb
mul
jno
gs
lods
fwait
and
xchg
pop
mov
int
popa
stos
add
adc
ds
ja
je
xchg
out
xchg
xchg
and
jo
addl
out
mov
jl
in
mov
xor
dec
pop
icebp
adc
ret
popa
xchg
mov
arpl
sub
add
ljmp
xchg
push
ret
out
fstpt
or
inc
rclb
jl
pushf
jmp
push
mov
mov
dec
or
cwtl
cmpsl
inc
pop
and
push
xor
push
pop
pop
stos
jb
test
pop
dec
or
lret
rcrl
lods
into
das
repz
test
je
pop
daa
cltd
lods
adc
sub
test
sahf
lret
mov
jecxz
out
jnp
std
out
fstl
adc
sub
cmc
aam
sbb
out
jle
stc
add
outsb
cmovno
mov
push
lcall
call
jmp
dec
das
je
xor
mov
pop
inc
andb
addr16
xor
mov
jecxz
out
xchg
ror
adc
insl
push
jnp
or
pop
loop
popf
inc
xor
jnp
sbb
mov
pop
cmp
test
push
popa
pop
jne
xchg
xor
in
mov
pop
inc
mov
mov
fstpt
fdivs
jmp
mov
shl
je
add
sbb
inc
fiaddl
mov
xor
sarb
sub
jle
lret
xor
leave
pop
and
push
pop
xor
adc
sti
xchg
popf
pop
xchg
popa
add
jb
ss
loope
into
stc
and
xchg
ret
xchg
xor
mov
js
enter
cmpsb
dec
jle
adc
push
add
mov
jno
add
push
shrl
lea
ret
push
out
in
or
pop
push
and
dec
fld1
lods
cmc
push
dec
sub
adc
sbb
out
cld
sbb
mov
xor
idivl
adc
jmp
gs
pop
std
sbb
movsb
or
ror
xchg
std
cmp
mov
dec
sbb
inc
or
push
lahf
ja
stos
xor
mov
push
dec
push
inc
scas
add
xchg
aaa
mov
aam
sahf
mov
jp
ficoms
out
cmp
sbb
push
add
mov
call
cmp
lea
lods
sbb
mov
inc
mov
jmp
mov
cmp
xchg
fdivp
mov
cli
xchg
outsl
setno
pop
ss
xchg
inc
sti
or
mov
or
iret
push
hlt
out
jle
xchg
push
nop
pusha
insb
mov
cmpsl
mov
imul
cmp
xabort
inc
mov
pop
mov
push
or
daa
in
mov
sub
xor
adc
shlb
stos
pop
scas
mov
rep
and
xor
aam
sbb
in
stos
ljmp
lea
vandps
lret
rcll
nop
stos
mov
mov
or
gs
xorb
es
enter
icebp
mov
lahf
mov
punpckldq
sub
jp
mov
lods
loope
cs
clc
les
inc
std
push
ljmp
sahf
mov
movsb
es
cmpsl
clc
addr16
cli
adc
in
jg
dec
push
jmp
fsubs
push
addr16
ds
or
test
sub
pop
cmp
out
jmp
movsb
or
mov
std
lahf
aam
mov
dec
inc
out
adcb
xor
loop
xchg
add
scas
das
sbb
sahf
or
aam
lods
mov
pop
fcoml
dec
sbb
pushf
fwait
push
enter
js
test
sbb
movsl
andl
pop
mov
repnz
rcrb
cmpsl
or
adc
pop
fdivrs
sbb
aad
test
dec
cmovne
pop
lods
xchg
iret
inc
jg
jge
cli
or
push
sahf
inc
dec
lea
cmp
shll
adc
push
aas
mov
flds
test
add
jae
ss
sbb
es
mov
gs
mov
and
lcall
nop
and
xchg
mov
xor
pop
xor
testl
inc
ja
ds
mov
pop
fbld
push
testl
test
jae
lods
test
movsb
hlt
filds
in
mov
ret
mov
icebp
ficoms
cmp
xchg
xchg
repnz
andnps
or
ret
xlat
lock
ret
jns
adcl
loopne
sti
je
sub
mov
call
rclb
mov
cltd
repnz
cmp
pushf
shll
and
cmp
mov
pop
or
jno
mov
mov
pop
inc
aas
mov
cmp
xchg
add
dec
pop
push
scas
cmc
dec
in
pusha
lods
jb
inc
push
jo
jnp
clc
adc
pop
mov
andl
fdivp
pop
stc
cmp
loope
cmp
or
sbb
test
lahf
xor
jp
lret
test
mov
mov
pop
mov
xor
leave
cs
imull
pushf
sub
pop
inc
and
or
mov
std
push
mov
mov
stos
scas
inc
shl
mov
stc
lret
lahf
fistpll
outsl
push
mov
sub
inc
mov
pusha
xchg
push
pushf
cmp
add
mov
cmp
lods
aaa
stos
or
fcmovnu
dec
lret
mov
xor
ret
iret
and
inc
loop
sub
in
aam
gs
insb
push
cwtl
mov
and
fiaddl
add
cmpsl
in
cli
and
inc
jnp
and
loope
add
repz
stc
roll
mov
adc
outsl
adc
pop
mov
lahf
sub
insb
jl
fwait
push
xor
push
push
out
xor
mov
jnp
arpl
push
outsl
dec
stc
mov
dec
mov
negl
nop
pop
mov
pop
inc
pusha
push
popa
sbb
icebp
shll
int3
xchg
adc
lods
cmpsb
xchg
jmp
cmpsl
jmp
adc
jns
out
push
lret
iret
jb
and
imul
sahf
subl
ds
jecxz
lds
nop
pop
loope
mov
loop
xchg
js
cwtl
jg
ja
test
mov
into
xor
sbb
out
mov
sub
hlt
loope
xor
mov
clc
in
push
xchg
sbb
jg
scas
jbe
call
sub
hlt
dec
xchg
jge
xchg
out
mov
mov
pop
sub
cli
cld
mov
push
idivb
add
js
xor
sbb
aam
mov
jecxz
jl
push
or
adc
lea
adc
test
dec
scas
mov
cmp
negl
and
cwtl
inc
test
sub
xchg
xor
leave
insl
add
dec
into
iret
hlt
inc
mov
clc
cmp
mov
and
cwtl
push
jl
loope
add
mov
xchg
xlat
lock
push
cmp
xchg
test
xchg
cld
lea
mov
out
lods
sbb
pop
xchg
repz
jge
xor
jp
pop
mov
cmp
sahf
rcrl
mov
lods
xchg
scas
xorl
test
mov
popf
popf
mov
xchg
sub
mov
jae
add
push
push
adc
aam
and
or
mov
or
sub
and
scas
cmp
pop
bound
imull
cli
or
ja
xor
cs
repnz
mov
hlt
in
sub
lahf
sar
mov
outsl
jle
iret
xchg
sahf
push
insl
adc
add
pop
and
ret
dec
jb
push
pcmpgtd
pop
stc
or
mov
mov
jbe
stos
test
sub
data16
ds
imulb
ja
pop
xchg
lods
hlt
gs
mov
cmc
je
mov
adc
sub
push
aaa
int
sahf
out
mov
dec
xchg
movsl
lret
jp
sbb
rcr
out
adc
xchg
push
mov
sub
fs
scas
push
clc
cmp
cwtl
inc
inc
mov
sbb
pop
in
les
or
adcb
shrl
out
pop
dec
mov
add
mov
lea
push
pop
xchg
xor
fistpl
out
or
push
movsb
mov
push
mov
xor
cmpl
nop
pusha
mov
mov
or
push
add
jmp
push
pusha
cld
jno
nop
aas
test
popl
out
xchg
xorl
mov
mov
in
out
js
mov
and
xor
mov
mov
clc
push
jb
int3
cmc
inc
rcrb
xchg
mov
clc
jo
adc
inc
fcomp
jbe
xor
pop
repz
aaa
insb
mov
out
loope
sti
adc
cld
mov
fs
cltd
xchg
rcrb
xor
mov
insb
in
enter
mov
cltd
rol
fwait
sbb
movsl
aad
ret
ds
scas
repnz
iret
jno
or
mov
inc
push
mov
or
adc
sub
stos
and
and
mov
mov
dec
into
scas
inc
inc
imul
aas
iret
push
pop
pop
lods
jmp
push
jns
sbbl
xchg
mov
jnp
mov
sub
xchg
jp
or
mov
and
out
inc
xchg
mov
repz
push
mov
inc
sub
mov
inc
xlat
or
jae,pn
rol
xor
test
jns
mov
jl
sbb
icebp
aaa
movsl
pop
dec
push
mov
or
jo
xchg
and
mov
adc
mov
in
cmpsl
popa
decl
orb
sbb
push
fnsave
cmp
faddl
mov
pusha
lds
ret
fdivs
mov
mov
or
pop
pop
jle
push
mov
fs
aam
xorb
rclb
adc
mov
mov
sbb
mov
cmp
push
ss
cmp
mov
stc
lcall
cmp
aam
and
mov
and
loopne
xor
and
dec
pop
cltd
ss
dec
add
jg
or
shlb
cmp
rep
mov
arpl
prefetchnta
xchg
cmp
aam
cmp
lcall
xchg
mov
test
imul
movsl
bound
fisubrl
lahf
ljmp
cmp
xchg
and
dec
inc
arpl
popa
in
or
xchg
dec
xor
scas
popf
or
sahf
fisubs
mov
jp
insb
movsb
iret
pop
xlat
in
test
inc
cli
cmp
insl
fsincos
pop
cmp
or
dec
pop
mov
jnp
fists
cmp
xor
add
loop
and
cs
out
mov
sti
lret
gs
mov
leave
lcall
ficoml
dec
dec
add
and
jge
sbb
dec
jb
std
fwait
push
sbb
or
into
xor
rorl
push
sbb
idivb
aaa
dec
loop
aaa
sub
aad
or
mov
test
iret
stos
sub
lcall
es
xor
test
jns
pop
cmp
addr16
push
and
and
scas
jb
xchg
jmp
mov
gs
hlt
cmp
in
fwait
mov
aad
mov
pop
sub
mov
mov
negb
mov
cmp
cmpsb
sub
nop
cmp
xchg
mov
push
mov
and
imul
mov
mov
cwtl
lods
out
scas
iret
jb
jae
jo
aas
adc
sub
xchg
inc
xor
jp
inc
int3
sub
insl
mov
call
das
dec
ret
xchg
popf
pop
dec
pop
fiadds
imull
fsubp
mov
movsl
push
inc
push
xchg
add
mov
dec
adcl
popa
pop
das
xor
fcomi
jge
cld
mov
or
in
mov
pop
outsl
mov
push
lcall
mov
dec
sub
or
or
ret
addb
lock
mov
dec
add
divl
repz
cli
cwtl
loope
leave
cwtl
pop
ljmp
xchg
roll
push
sbb
push
push
outsb
pop
inc
dec
icebp
jl
fnstenv
mov
jae
push
mov
sub
xor
repz
add
sub
shrb
inc
push
inc
jmp
clc
cmc
movsl
sbb
jle
mov
sbb
popf
nop
sbb
xor
out
stc
sbb
cmpsb
xchg
repz
pop
fistl
pop
and
push
jb
outsl
int3
mov
sbb
lahf
mov
das
cmp
popl
jl
call
cmp
aam
outsb
xor
dec
sub
in
and
xor
sbb
dec
jbe
adc
arpl
shrb
jl
pop
cmc
roll
xchg
popf
loop
aad
cmc
call
sahf
dec
inc
dec
movsl
loop
repz
sub
xchg
cmp
xor
xchg
mov
push
pop
jg
das
mov
cmpsl
hlt
add
cmpsb
out
in
mov
std
pop
inc
loopne
lahf
inc
daa
inc
orl
fdivr
pop
sub
mov
add
insl
insb
sub
cwtl
bound
adc
outsl
inc
inc
ds
jno
pop
mov
lods
pop
xchg
lahf
dec
push
mov
out
mov
lcall
mov
sub
mov
insl
xchg
pushf
sub
jg
iret
js
push
out
insl
cbtw
sub
mov
push
mov
pop
jae
shlb
and
es
mov
or
out
pop
push
les
std
icebp
jmp
inc
pop
pop
xchg
jecxz
sub
lret
xor
sbb
xor
inc
loope
aaa
push
mov
cltd
lds
pop
inc
loope
mov
xchg
mov
cs
mov
sbb
inc
push
xor
dec
fsubrl
test
jnp
cld
dec
in
mov
inc
inc
push
pop
mov
lea
test
cmp
adc
or
imul
divl
fucomip
sarb
mov
push
cld
loopne
mov
ljmp
or
mov
add
rorb
push
xchg
push
mov
filds
inc
popa
mov
xchg
xchg
xchg
cs
add
mov
and
cwtl
mov
shrl
out
mov
dec
nop
jl
push
andb
call
jbe
fimuls
pop
mov
out
cmp
fmuls
repnz
add
lods
insl
sbb
mov
ds
xchg
mov
ss
hlt
imul
sbb
mov
pop
xor
mov
xchg
mov
jg
lods
scas
imull
mov
jge
inc
cmp
pop
cmp
sbb
mov
pop
cs
sub
mov
dec
scas
movsb
dec
bndstx
movsl
adc
int3
jmp
mov
cmp
xor
cs
cmp
and
push
in
pop
xchg
xchg
push
mov
sbb
inc
sahf
xor
add
pop
jbe
xor
rcr
out
addr16
test
pop
jns
mov
sub
mov
xchg
pop
cwtl
pop
inc
inc
or
jp
push
inc
sub
cwtl
mov
add
cmp
imul
mov
push
sub
dec
xchg
jno
movsl
repz
and
xchg
push
mov
mov
lahf
xchg
sbb
add
push
or
call
pop
xchg
popf
jno
cmp
andl
pop
xchg
mov
jne
iret
push
in
daa
jbe
lcall
repnz
jne
cmp
pop
inc
inc
mov
add
push
je
mov
xor
xor
xchg
rolb
test
int3
push
fdivp
mov
and
in
cmp
lcall
jne
xchg
xor
mov
jp
xchg
xchg
cmpsl
push
xlat
adcb
hlt
stc
shll
mov
mov
pop
aam
mov
pop
nop
mov
dec
mov
lret
arpl
xchg
stc
or
mov
mov
sbb
jmp
add
insl
repnz
daa
sub
das
xchg
shrl
ret
nop
xchg
dec
sahf
out
pop
pop
aaa
rorb
flds
divb
repz
adc
dec
push
movsb
adc
inc
or
dec
scas
pop
mov
js
or
push
rcl
rolb
nop
mov
sub
and
addl
stos
mov
pop
les
dec
insl
loop
test
pushf
nop
mov
add
cmc
mov
orb
out
aas
ret
dec
pop
sti
jecxz
cmp
cmpb
adc
enter
mov
fsub
negb
mov
repz
dec
pop
dec
leave
inc
jge
test
aas
ret
sub
lret
xchg
xchg
add
push
dec
cmp
dec
in
in
mov
jb
xchg
in
mov
mov
daa
mov
and
xchg
testl
hlt
stc
enter
mov
cmp
movsb
cs
push
sbbb
mov
adc
sbb
fidivl
mov
js
dec
inc
lds
fidivl
jnp
push
push
fsubp
and
lahf
andl
mov
pop
push
arpl
popf
daa
orl
xor
in
pusha
insl
call
outsl
mov
aad
adc
pusha
popf
inc
or
int3
test
or
add
loopne
push
jnp
mov
hlt
xor
pusha
cmp
mov
mov
jmp
cmp
stos
shll
out
jle
adc
popf
add
mov
adcb
push
dec
dec
xchg
sbbb
sbb
cld
bound
mov
sbb
mov
add
jo
mov
add
in
dec
mov
aas
scas
dec
and
or
jb
mov
cmp
lds
mov
push
cwtl
push
test
in
push
ja
add
mov
pop
and
cli
dec
pop
xlat
movsb
mov
sbb
fst
das
cmp
cmp
in
jg
push
jle
push
and
dec
inc
jle
lret
and
cs
repz
cmpb
inc
std
or
dec
sti
cmpsl
daa
xchg
sbb
not
sub
addr16
push
insl
sub
into
adc
stos
jno
fwait
decl
sbb
pusha
xchg
pop
dec
or
cmpsl
xchg
out
test
jl
mov
add
rdpmc
clc
out
pop
xchg
aaa
repz
loop
mov
out
mov
cmp
repz
adc
or
cmp
and
jnp
sub
jmp
mov
push
pop
dec
sbb
add
mov
outsl
loope
idiv
lods
jnp
push
addr16
sysenter
ret
add
pop
jo
jne
mul
repnz
inc
lcall
test
stc
xchg
push
jne
xchg
mov
rcrl
cmp
jmp
leave
outsb
mov
call
xchg
lcall
push
dec
orl
sub
orl
std
stc
dec
xor
mul
xchg
mov
js
pusha
pushf
xor
add
pop
je
mov
dec
mov
and
iret
adc
dec
mov
inc
add
sub
pop
xchg
aam
mov
mov
scas
es
fsubl
or
fmuls
push
cmpb
movd
or
outsl
mov
mov
pop
repz
enter
sahf
push
adc
sbb
push
repnz
sahf
imul
es
cmp
push
adc
mov
loop
pop
xchg
fmull
or
cmp
jle
jne
cmp
loopne
mov
pop
mov
or
sub
clc
jmp
shlb
xor
inc
cmp
inc
sti
cwtl
pop
pop
mov
movsb
adc
or
gs
ss
call
mulb
test
cmc
stos
shrl
test
push
xor
fisttpl
out
lret
pop
jl
cmp
loopne
pop
mov
test
pusha
std
mov
inc
push
push
mov
cmovne
jo
mov
insb
adc
inc
mov
sarl
ret
repz
ja
push
test
or
pop
negl
mov
fcomip
sarb
add
ret
ljmp
push
into
push
sub
rcll
pusha
cld
cmp
mov
xchg
xor
xlat
dec
idivb
xchg
add
add
dec
das
cmp
sti
sbb
fnstsw
shl
push
aam
cwtl
cmp
hlt
pop
jbe
insb
je
test
pop
rcll
cli
sbb
rcll
sub
mov
ljmp
sub
leave
xchg
cmpsl
or
add
or
xor
sub
jecxz
inc
xor
inc
daa
xchg
push
cmc
sahf
sbb
mov
pop
outsb
jae
sub
clc
and
data16
or
inc
jae
test
roll
stos
xchg
dec
xor
pop
sbb
pusha
pop
repz
cmc
lds
jecxz
pop
dec
les
call
sti
mov
lcall
push
inc
setne
std
push
movsb
aad
or
push
enter
push
std
rcrb
add
cmp
in
cwtl
in
lods
pusha
adc
adc
push
mov
push
test
stc
dec
mov
test
adc
test
inc
mov
cmp
fidivrl
stos
aaa
mov
fdivrp
cltd
cld
adc
mov
ljmp
push
sub
add
cmc
sti
sub
stos
into
call
add
pop
ret
dec
xor
rolb
scas
jne
mov
shrb
cs
int
lcall
sbb
xor
hlt
inc
push
sbb
cmp
adc
pop
jae
add
les
aad
sub
inc
and
xor
into
imul
mov
mov
out
scas
push
mov
xor
jne
aas
jae
lret
sbb
movb
loop
jae
xchg
jo
cmp
inc
enter
xchg
mov
nop
sub
mov
pop
and
mov
and
call
dec
iret
dec
int3
aaa
xchg
lods
lods
test
mov
loopne
ds
fcmovne
pushf
popa
imul
add
cmp
push
movsb
imul
sub
dec
jge
cmc
inc
adc
mov
jnp
jb
popa
negl
sbb
push
aas
repz
fiaddl
test
add
outsb
add
ficoms
subb
jae
inc
rorb
out
xchg
push
js
add
xor
jae
stos
jne
ret
sbb
mov
aas
fsubrs
adc
cmp
or
sbb
mov
faddl
fstl
out
mov
pop
aas
xchg
inc
lea
push
pop
jge
sub
push
jle
xorb
insb
or
xchg
std
adc
ja
ror
xor
sub
mov
das
stos
mov
sbb
pop
lahf
push
std
fxch
sbb
or
test
mov
cmp
mov
jmp
mov
daa
stos
push
cltd
push
sahf
pop
mov
cmp
rcrb
mov
data16
mov
addr16
mov
fyl2x
sbb
stos
or
insb
sub
in
jmp
mov
shrd
xchg
mov
jmp
xor
inc
pop
add
leave
cmc
loope
pop
dec
push
push
cmpsb
add
mov
sub
mov
dec
lcall
in
aam
pop
movq
cmp
inc
sub
in
les
cmp
dec
and
pop
test
or
cltd
test
dec
mov
int3
aad
shlb
xchg
es
dec
cwtl
iret
mov
iret
xchg
cld
sub
and
js
mov
incl
add
leave
fwait
lahf
pop
in
sbb
push
ret
sbb
adc
dec
mov
and
mov
insb
dec
adc
fxtract
xchg
xchg
mov
fsts
pop
push
movsl
xchg
mov
jg
lods
inc
aas
sbb
mov
inc
pop
xor
xchg
xlat
sbb
mov
test
sbb
xchg
dec
push
sbb
ds
dec
ds
pop
lahf
in
adc
cld
dec
sahf
test
mov
es
mov
or
sub
add
cmp
lret
jns
inc
dec
jg
jae
imul
adc
pusha
add
cmp
inc
dec
jb
jno
lcall
lcall
inc
dec
mov
lahf
bound
call
lods
imul
jb
or
cltd
out
push
xor
mov
jmp
push
pop
dec
add
pushf
xchg
pop
pop
jp
mov
fisubl
sbb
and
push
loop
mov
jge
imul
aam
cld
add
cmp
push
repnz
adc
popa
xchg
jb
sbbl
popa
outsb
and
lds
jp
addl
rcrl
sub
ss
and
cs
mov
pop
out
loop
cli
cmp
insl
or
test
in
sbb
pop
mov
inc
jmp
arpl
aaa
cmp
gs
hlt
arpl
cmp
ljmp
data16
adc
jmp
test
jle
and
xor
cli
pop
mov
xor
cmp
loope
adc
ds
jne
stos
scas
jmp
push
pop
fsubr
xchg
mov
sbb
push
cmp
fcomps
fistl
mov
adc
ljmp
aaa
insl
mov
lock
adc
jnp
xor
int
add
sbb
mov
je
jnp
adc
pusha
andb
mov
repz
out
jne
mov
nop
cmp
ficompl
cmp
pop
xchg
adc
inc
adc
inc
ja
sbb
jle
ret
stos
imul
dec
inc
pop
in
test
sub
jecxz
icebp
pop
pop
popf
cmovp
push
sbb
fmull
in
scas
and
rorl
dec
imull
imul
pop
inc
push
pop
xchg
pop
mov
inc
fsubl
mov
mov
repz
pop
sub
cmp
adc
mov
sbb
xchg
cmp
jmp
mov
cmp
pop
mov
shlb
cmp
push
stc
data16
push
add
xchg
repz
ds
xlat
mov
out
sbb
insb
add
mov
or
inc
cmpsb
push
sub
icebp
mov
xor
popa
daa
mov
adc
mov
flds
jmp
dec
popa
stos
jmp
adc
scas
sub
cli
ret
add
xor
and
stc
bound
cmpsb
ja
pop
mov
repz
add
cmpsl
ficompl
nop
xlat
inc
subps
pop
cmp
dec
push
sarl
rol
js
jle
or
cs
push
filds
or
pop
mov
or
pushf
or
jb,pt
cmp
push
scas
push
not
aas
pop
jmp
inc
inc
data16
shlb
repnz
orb
mov
pusha
out
push
mov
outsb
aam
int3
push
xor
inc
sbb
or
shl
insl
sbb
xchg
xor
mov
test
jecxz
mov
or
push
and
call
mov
incl
dec
mov
lds
pop
jle
dec
repnz
xor
in
and
sbb
jge
pop
xchg
shll
adc
aad
mov
add
and
xchg
into
xchg
aam
xchg
pusha
jle
jnp
add
push
fwait
or
push
cltd
out
int3
mov
out
mov
mov
adc
ds
jmp
ds
aaa
dec
lods
pop
cmpsl
xor
pop
add
xchg
mov
ud0
test
ljmp
jae
jae
aaa
and
mov
fs
in
sub
jl
push
pop
sub
adc
sub
jmp
push
mov
es
jnp
sbb
push
into
cmp
sbbb
mov
data16
nop
loopne
enter
out
out
fdivrl
cmp
sub
lea
dec
clc
sarl
sbb
enter
xchg
rcrl
in
adc
rorb
rorb
loope
std
pop
das
xchg
repz
inc
sbb
mov
dec
cmp
sub
les
cmp
hlt
loop
add
movsb
mov
mov
sarl
xchg
icebp
push
cmp
xor
sub
xor
pusha
call
jecxz
iret
sub
addb
lret
dec
push
sub
stos
dec
popa
cmp
out
xor
repnz
imul
movsl
dec
mov
adc
sub
mov
or
or
pop
outsl
dec
jmp
ja
adc
or
xchg
in
roll
ret
stc
repnz
mov
daa
sbb
cmp
out
mov
and
divl
push
test
test
cli
nop
js
jno
inc
pop
xor
mov
int
pusha
xchg
mov
mov
popa
sub
call
sbb
jnp
mov
jbe
xchg
cmpsb
sti
outsb
fwait
test
mov
mov
movsl
sub
sbb
adc
aam
rclb
inc
jl
or
inc
popa
push
ret
inc
shr
cmp
xor
push
loop
inc
xchg
pop
and
dec
cmp
int
jmp
andb
jbe
and
jo
daa
inc
xor
adc
dec
fbld
push
hlt
rcr
adc
jg
mov
add
fists
aam
adc
inc
pushf
push
cmp
push
cli
mov
sbb
and
loop
mov
mov
inc
lock
mov
std
xchg
aas
dec
mov
dec
rolb
lds
or
dec
js
cwtl
dec
xor
sahf
adc
mov
or
orl
sub
cwtl
es
cltd
mov
ss
bound
mov
xchg
xor
cmpsl
iret
sbb
hlt
shrb
or
fiaddl
jbe
dec
ja
test
or
cmc
fidivs
cmp
pushf
rcr
and
mov
lcall
comiss
adc
and
in
jecxz
out
add
xor
ret
rcr
test
push
insl
popf
xchg
jl
and
xor
iret
lahf
xor
mov
cltd
xchg
push
fyl2xp1
in
pop
mov
and
xchg
mov
stos
cltd
or
push
mov
mov
test
loop
pop
xchg
aam
inc
stos
rcl
fwait
push
sbb
pop
cmp
add
push
mov
std
popa
sub
daa
sbb
and
cmc
xchg
into
fnclex
hlt
pop
movsb
mov
mov
fcmove
je
and
push
je
stos
fcomps
sub
or
dec
xchg
fwait
or
dec
push
das
mov
sti
add
inc
cmp
test
xor
xchg
sti
xor
xor
push
aad
inc
aad
mov
nop
xchg
push
cmp
fs
daa
insb
out
xchg
jns
mov
sbb
xchg
cmpsl
shl
dec
mov
mov
test
out
aam
push
ret
lock
sbb
loope
ss
and
lcall
out
mov
nop
testb
mov
push
repz
repz
jmp
loope
mov
or
pop
mov
pop
xchg
sarl
ret
loop
adc
inc
fnstsw
mov
push
and
mov
aad
insb
xchg
dec
aaa
xchg
cwtl
gs
imul
or
pop
mov
push
add
push
je
ficomps
xchg
xchg
or
lock
in
push
xchg
mov
mov
scas
push
sbb
pop
stc
lcall
push
popa
cmp
js
out
int
jg
ror
imul
stos
mov
push
jne,pt
mov
out
insl
add
sub
and
out
sbb
pop
ror
les
test
jmp
xor
cmc
pop
mov
xor
mov
aaa
push
mov
insb
jmp
jo
sbbl
ja
dec
imul
add
js
inc
sbb
std
xor
xchg
das
xlat
out
sti
push
dec
mov
repz
push
out
clc
int
pop
lods
aad
orl
in
jmp
insb
insl
sbb
jnp
popa
jge
adc
lds
mov
je
arpl
repnz
mov
insb
ljmp
shl
outsb
lods
fistpll
dec
int
and
push
sti
mov
cmp
outsl
mov
jb
pop
mov
xlat
fisttpl
mov
fiaddl
pop
mov
and
scas
test
inc
fistpl
int3
push
jmp
jne
ljmp
mov
xchg
fsubrp
repz
arpl
adc
stc
cmp
call
push
sub
out
vpaddw
add
jge
negb
pop
adc
shlb
cld
pop
dec
insb
mov
test
test
scas
add
sub
test
jecxz
mov
xor
xor
outsl
into
add
mov
lods
insl
or
in
lods
pop
cmp
ljmp
pushf
fwait
popa
cmp
call
stos
adcb
adc
leave
xchg
addb
sub
xor
inc
mov
add
pop
cmp
fisubl
jbe
pop
lods
jb
or
das
push
dec
enter
jg
xchg
jmp
icebp
lock
dec
sbb
aam
jecxz
xchg
jl
cmp
sub
call
mov
outsl
aad
jg
stos
xor
jecxz
add
rcrl
das
imul
adc
icebp
xor
push
inc
sbb
mov
sbb
pop
pop
aad
pop
pop
cwtl
dec
jp
ds
mov
flds
in
rolb
enter
xor
xor
dec
and
sub
cwtl
out
cld
inc
pop
sub
pop
arpl
test
inc
inc
cli
mov
or
adc
push
mov
jecxz
cmp
lock
inc
mov
dec
jnp
and
pop
out
push
addr16
xchg
lret
lcall
fdivrl
mov
stc
in
xor
mov
jbe
mul
pop
push
aaa
shlb
nop
mov
rorb
mov
xchg
add
dec
cmp
outsl
shrb
stc
jo
and
pop
mov
stos
push
in
cvtdq2ps
mov
mov
jo
lret
push
leave
daa
push
jo
xor
inc
pop
sahf
mov
add
outsb
pop
clc
shrl
int3
inc
ds
jns
mov
pop
jmp
pop
mov
jmp
ret
pop
repz
xor
sub
jne
ja
popf
pop
push
jl
rol
jb
fldcw
imul
jge
jae
inc
mov
addb
mov
out
sub
push
cld
mov
icebp
sbb
sbb
mov
fadd
jne
out
lods
mov
das
lahf
fildl
push
push
leave
mov
ret
fistpl
mov
sub
aad
dec
adc
in
es
add
loopne
mov
insl
test
movsb
imul
fsub
xchg
mov
jbe
lock
arpl
mov
sub
sbb
pop
mov
inc
sbb
scas
hlt
xchg
dec
and
mov
ds
pop
in
or
arpl
testl
sbb
xchg
mov
nop
xor
adc
sbb
xor
pop
stos
negb
fldenv
push
push
push
das
sbb
sub
fdivl
mov
push
mov
movsl
jl
in
jle
gs
enter
roll
fnstenv
test
mov
stos
push
inc
andl
inc
mov
lods
dec
xchg
mov
aas
cltd
fs
mov
std
out
cmpb
sub
adc
cmp
jne
scas
inc
dec
mov
xchg
sbb
aaa
xchg
rdpmc
aad
push
inc
jbe
pushf
lock
push
push
nop
dec
sarb
ds
push
std
cltd
mov
and
or
fstl
inc
popa
inc
lcall
orb
pop
or
mov
movsl
gs
xlat
addr16
cmpsl
iret
repz
pop
popa
cmp
mov
out
sbb
cs
arpl
pop
int
jmp
mov
xor
mov
push
mov
jg
in
or
pop
inc
cmp
sti
cmp
pop
pop
aaa
pop
mov
stos
push
scas
rorb
fisubl
mov
iret
jae
nop
jbe
push
or
mov
fwait
and
pop
lock
movsl
mov
loope
sbb
pushf
cs
fidivl
aad
aaa
stc
jge
fisttpll
int
aad
daa
push
scas
jbe
mov
sub
shl
aad
insb
out
mov
inc
adc
or
sbb
cmc
xchg
clc
imul
pop
mov
rorl
adc
inc
into
ljmp
cwtl
sbb
adc
dec
sbb
jae
sbb
inc
movsl
xor
rclb
ud1
adc
jae
imull
push
sbb
ljmp
xlat
lock
xor
shlb
aad
jbe
lret
pop
pusha
and
clc
push
test
cmp
and
lods
sub
fs
cs
lret
and
xlat
stc
push
dec
sbb
insb
dec
and
sbb
fbstp
cmp
test
adc
imul
sbb
dec
enter
mov
adc
xchg
jg
out
ja
jbe
mov
scas
pop
leave
movsb
adcb
xchg
lds
sub
xchg
ds
inc
mov
mov
xchg
fcomps
xchg
test
adc
mov
sub
adc
in
push
sub
cmp
or
inc
stos
fidivrs
add
adc
cmp
sbb
mov
xor
adc
out
in
test
insb
pushf
test
rorb
add
lods
cmp
or
xlat
jb
cmpsb
out
insb
push
pop
lock
lea
xor
xchg
addl
jmp
movsb
je
shl
cmp
les
rorl
enter
cmpb
mov
fsubrp
jle
shlb
mov
xchg
shrl
aad
testl
aaa
dec
out
mov
pop
test
insl
pop
jo
xchg
mov
imul
jno
jne
mov
fadds
in
or
jns
int
mov
stos
mov
dec
push
arpl
xor
mov
inc
cld
stos
mov
jge
hlt
leave
arpl
ret
js
insl
scas
or
aam
dec
into
push
in
xchg
sbb
fdivrl
mov
stos
in
mov
cwtl
xor
sub
xor
sub
sub
imul
test
clc
jne
cld
jecxz
jae
jg
sti
lret
sub
cmp
push
or
push
arpl
push
ss
dec
jg
bound
or
pop
into
dec
jbe
push
jp
mov
push
aad
jmp
addr16
fcomi
pop
leave
jle
dec
sbb
lahf
push
pop
pop
pop
cwtl
pop
push
cmc
push
cmp
outsb
push
addb
pusha
adc
inc
mov
inc
push
adcl
lods
mov
mov
pop
mov
loop
ljmp
call
int
mov
and
shl
clc
mov
stos
jl
lret
pushf
xchg
inc
push
pop
add
pop
sbbl
sbb
pop
jmp
icebp
into
fistps
xor
mov
pushl
stc
xor
clc
cld
loopne
cli
mov
push
add
movsb
push
xchg
jp
pop
inc
fs
mov
lods
jb
pop
cwtl
into
loop
lods
icebp
mov
adc
jns
repnz
lds
addb
sub
xchg
fisubrs
xchg
movsl
sbbb
lods
pop
loopne
jge
jecxz
test
jp
or
inc
cwtl
lods
add
pushl
aaa
jp
imul
cmp
loop
jns
repz
insb
cwtl
icebp
or
sbb
pop
sbb
jecxz
mov
lods
dec
out
push
dec
xor
arpl
fs
scas
and
sub
frstor
in
pop
mov
xor
popa
or
add
fstpt
and
lock
es
jecxz
mov
xor
push
test
and
cld
dec
data16
movsb
push
int
mov
mov
xchg
xor
pop
roll
cmp
pop
pop
in
outsb
ds
jg
pusha
mov
jle
sbb
mov
fidivs
loop
pop
in
fs
lahf
and
jg
mulb
add
pop
jae
or
outsb
mov
enter
in
incl
scas
add
in
push
jge
sub
ret
imul
rcrl
xor
popa
jae
dec
in
cmpsl
mov
sbb
divb
int3
xchg
push
sub
inc
lret
fldcw
outsb
repnz
push
inc
cmpsb
cmp
aam
mov
mov
or
add
xchg
sbb
icebp
pop
dec
cmp
shlb
pushf
push
jo
aad
shll
xor
mov
mov
xor
xor
pop
inc
scas
dec
xchg
pop
sbb
loopne
lahf
out
sbb
mov
andb
xchg
roll
in
sbb
or
fs
cmp
xchg
daa
jl
out
and
loope
addr16
xchg
movsb
lret
es
inc
sub
cmp
stos
leave
or
push
movsl
subl
nop
xchg
mov
mov
imul
xchg
cwtl
or
ret
scas
fbstp
dec
enter
cmp
cmp
inc
in
pop
and
cli
push
xor
inc
xchg
add
mov
sub
out
push
mov
clc
pushf
pop
push
bound
xchg
push
dec
shl
sbb
add
lret
mov
data16
lods
jb
cmp
dec
ret
imul
adc
imul
les
mov
mov
sbb
mov
xlat
insl
mov
in
in
bound
cli
xchg
sub
nop
stos
leave
mov
cli
test
jp
mov
in
mov
jle
pop
rol
enter
and
lret
mov
aaa
push
aad
lea
sbb
gs
outsb
and
movsl
pop
push
ds
ss
repz
or
xchg
add
inc
scas
fdivrp
in
cmp
jge
mov
sub
sub
cmp
mov
jmp
xchg
pusha
lds
in
lods
ret
mov
and
das
jmp
hlt
stos
mov
sbb
inc
adc
andl
pop
mov
xchg
clc
dec
inc
push
lret
or
jb
cmpsl
dec
mov
cltd
outsl
call
jno
xor
aas
lods
mov
shrl
cwtl
test
es
mov
mov
stos
cmp
dec
cltd
mov
jl
xor
dec
mov
data16
xchg
sub
mov
mov
xor
cwtl
xchg
fstl
dec
and
ja
js
sbb
mov
stos
pop
push
insb
lea
jg
outsl
shll
clc
xlat
cmp
jae
and
movsl
outsb
mov
and
cltd
lahf
in
sbb
add
mov
mov
xor
ss
fs
xchg
or
inc
pop
add
dec
ljmp
aam
and
push
loope
jne
fcomps
push
cltd
cmp
push
fidivs
jae
and
pop
sti
stos
pusha
mov
inc
cmp
jno
mov
or
cmp
test
mov
mov
pop
dec
cltd
popf
aaa
push
rorl
mov
stos
cltd
pop
jg
insl
or
shlb
mov
sub
nop
shll
pusha
adc
ret
sub
lods
mov
cmp
lcall
jae
xor
pop
roll
push
dec
mov
sar
scas
or
rclb
into
pop
aad
sub
push
arpl
add
ret
jo
mov
aas
inc
lret
sbb
jnp
sub
outsl
cs
push
stos
insb
xor
mov
mov
sti
xchg
dec
mov
out
sub
mov
cmc
addl
xchg
fsubrl
mov
stos
pop
jg
fstl
xlat
outsl
cmp
jg
pop
xchg
sbb
mov
cwtl
sub
fisttpll
repnz
cmpsb
lret
pop
int3
lahf
mov
hlt
cltd
insb
mov
xor
push
je
xor
cmp
insb
stc
ficoms
adc
ss
or
ss
push
lods
shl
adc
mov
bnd
mov
inc
scas
cwtl
in
dec
sub
adc
push
insl
push
dec
jle
dec
xchg
cmp
test
inc
dec
sub
popa
pop
lock
test
stc
fildll
xchg
inc
incl
fisubrs
xor
pop
pop
popa
loopne
mov
mov
sub
sub
cwtl
test
or
loope
cvtpi2ps
int
fdivrl
sub
arpl
dec
jl
xchg
and
jecxz
daa
and
xchg
ljmp
lds
fsubrl
fstl
xor
out
inc
orl
jns
jp
jae
xchg
data16
push
out
rclb
pmullw
cmpsl
pop
cmpsb
and
jnp
cmp
mov
in
mov
jae
push
push
repz
mov
dec
out
pop
push
cmpsl
or
scas
into
lcall
popf
mov
dec
std
cmc
icebp
and
std
je
inc
ja
lcall
sub
rcl
sub
xchg
mov
jno
fdivl
jmp
sti
or
mov
mov
xor
push
push
shrb
mov
outsb
sub
mov
push
call
dec
je
cmp
jns
jno
orb
loop
nop
inc
sbb
jle
push
xor
js
pop
cltd
pop
xchg
in
ficoms
cs
adc
pusha
inc
pop
mov
fidivl
jno
insb
jmp
sbb
enter
push
pop
mov
xchg
test
fiadds
addl
jb
add
dec
loope
cwtl
mov
int
push
fsubr
call
and
sbb
mov
xchg
addr16
push
inc
test
lret
enter
mov
int3
inc
push
in
jns
push
mov
mov
adc
nop
push
mov
sub
test
jae
cmpsl
rcrb
fdivp
push
arpl
inc
mov
stc
push
ss
insb
jg
aam
pop
ret
ljmp
push
dec
mov
dec
ds
clc
mov
push
fistl
insl
xor
adc
and
mov
lret
cmp
in
xor
stc
fwait
push
or
xchg
inc
xor
imul
xchg
push
outsl
mov
jg
aam
adc
mov
xor
xchg
dec
mov
cmpsb
push
or
lret
dec
cmp
mov
hlt
mov
scas
push
mov
sbb
imul
sti
sbb
add
lods
stos
inc
lods
jg
rcll
pop
pop
cmp
cmp
or
add
pop
jg
inc
jl
sub
mov
gs
cmp
scas
push
mov
xchg
std
ljmp
jge
push
les
jl
aad
lock
add
xor
adc
mov
push
mov
cld
pop
fiaddl
jmp
or
dec
sti
xor
sub
popa
xchg
xor
cmp
mov
and
mov
fldt
xor
pop
and
cli
add
decl
push
mov
fwait
xchg
jne
dec
ror
sbb
xor
mov
sub
mov
jmp
aas
sub
xor
mov
in
loopne
jl
pushf
arpl
sub
aaa
popf
pop
out
cld
cltd
jg
mov
jecxz
mov
fistl
and
repz
dec
call
jbe
int
push
xchg
jp
sub
cmp
and
add
outsl
cli
xchg
in
sub
dec
xor
notl
in
inc
mov
jb
bound
mov
and
cli
mov
sub
push
push
arpl
sub
jmp
icebp
aas
sub
cs
daa
push
popf
inc
or
and
icebp
pushf
xchg
out
and
dec
xlat
mov
cvttps2pi
adcl
scas
sub
or
sahf
cltd
lds
push
out
mov
daa
cwtl
pop
adc
sbb
movsb
mov
push
testb
fdivr
jmp
xor
cmp
adc
inc
sub
add
fwait
outsl
repnz
ret
lods
sahf
xchg
into
mov
adc
in
insb
push
add
and
cs
push
pop
mov
iret
pusha
mov
inc
cmp
sahf
cmc
push
testb
iretw
movsl
jg
loope
popf
dec
cmc
cmp
in
pop
fcomi
sbb
cmc
adc
mov
xor
dec
mov
icebp
lods
stos
xor
aad
sbb
and
mov
fwait
ror
sbb
adc
xor
ficoms
addr16
xor
xor
add
sbb
fnsave
sarl
sbb
jb
loop
popw
es
nop
and
jecxz
testl
dec
in
movsl
mov
clc
pop
cli
test
cmp
mov
cmpsb
xlat
push
stos
mov
loope
jg
push
cmp
pop
insb
outsb
aad
dec
inc
mov
aaa
push
test
testl
rorb
mov
dec
sub
ret
sbb
lret
lea
pop
push
jge
cmp
sbb
outsb
pop
push
and
xor
aam
xchg
test
int
pop
cli
xchg
les
jns
stos
fld
bound
jl
sub
push
and
jecxz
sbb
jl
mov
dec
fdivrl
ss
sub
cltd
push
pop
lret
ja
mov
out
or
mov
cld
mov
inc
call
mov
or
stc
push
sub
push
xlat
sbb
push
popa
mov
pop
adc
loopne
fimuls
cmp
loopne
jmp
ret
inc
stc
stos
pop
loopne
aad
addr16
icebp
sbb
cli
out
popf
shll
mov
shll
dec
lds
pop
test
incl
in
orl
sti
icebp
dec
push
sub
pop
push
xlat
and
xor
stc
xor
sub
adc
icebp
pushw
mov
fimull
lods
std
dec
negl
pop
fwait
dec
movb
add
xor
mov
mov
jne
dec
xchg
lahf
arpl
push
imul
jbe
repnz
in
gs
sbb
int
cli
push
imul
mov
icebp
in
pushf
sbb
dec
inc
dec
fwait
fwait
lahf
sub
cmc
repz
xor
sbb
hlt
outsl
jno
cwtl
fdivr
push
aad
in
add
pusha
xchg
cmp
frstor
push
xorl
and
cwtl
mov
dec
pop
inc
mov
and
xchg
rclb
adc
subb
lods
fdivl
sub
inc
jmp
mov
popf
gs
jnp
xchg
xlat
add
mov
ret
pop
xor
shrb
pop
mov
and
std
lcall
push
mov
xor
je
and
aas
aam
dec
sbb
mov
mov
popa
cld
cmp
or
lcall
xchg
mov
xlat
shr
clc
mov
fs
mov
xchg
mull
mov
or
sar
adc
pusha
cmp
inc
lock
xor
mov
mov
addl
xlat
shll
xor
sti
push
mov
xor
or
ss
fstpl
fcompl
push
stos
test
sub
iret
push
push
inc
mov
fsubl
jo
cmp
test
dec
push
sbb
jg
out
outsb
cld
and
adc
push
repnz
xchg
pop
es
sub
fbstp
js
adc
sbb
je
movsl
sbb
cld
inc
es
dec
cmc
sub
adc
lret
pop
out
inc
dec
loopne
test
mov
push
sub
push
lret
sbb
pushf
dec
mov
add
gs
jb
push
push
shl
and
lods
push
mov
aaa
lret
pop
sub
lock
xchg
ljmp
shll
push
mov
jl
int3
push
sub
pusha
jge
aas
adc
es
and
sbb
mov
mov
imul
cmpsl
cli
mov
mov
insl
adc
mov
jge
in
mov
add
push
push
les
divb
into
jg
fwait
mov
push
dec
int
and
mov
jns
daa
test
insl
pop
fists
xchg
pushf
pop
inc
jle
mov
pop
mov
nop
sub
push
jne
xor
and
mov
adc
inc
sysret
sti
xchg
pop
popf
cltd
jb
loop
outsl
popa
lcall
sahf
movsb
repz
shlb
push
cmpsb
mov
mov
mov
cmp
ret
jp
mov
push
jl
pushf
push
cmp
lcall
scas
out
divb
add
iret
jnp
ds
mov
aad
inc
mov
jge
cli
shlb
or
sbb
lods
add
ffree
sub
sbb
push
lods
lahf
mov
in
mov
mov
aaa
scas
es
dec
jne
hlt
ljmp
cmp
mov
add
mov
jmp
cmp
cwtl
loopne
jg
rol
add
insl
mov
mov
lret
movsl
es
mov
cmp
push
inc
divb
insb
xor
fsubrl
or
sbbl
test
xchg
sbb
dec
mov
orb
add
add
push
ss
outsl
dec
imul
movsb
sbb
fimull
or
in
jle
inc
sub
xchg
mov
nop
xor
push
mov
and
sbb
mov
scas
mov
pop
imul
shrb
add
scas
int3
lahf
jle
sbb
es
adc
fstpl
adc
xor
cmp
js
fistl
xchg
jecxz
or
nop
adc
inc
inc
in
xchg
icebp
cs
or
xlat
or
je
jmp
sbb
mov
xor
push
shll
xchg
outsb
test
adc
lock
out
sbb
xchg
fidivl
shrl
mov
lds
ret
leave
cmpsb
xor
ljmp
mov
push
popf
pop
xor
sbb
pop
lods
scas
fdivl
js
push
cli
jb
ds
pop
lods
arpl
insb
adc
mov
je
orb
int
pop
and
sub
jns
movsl
pop
push
insl
pop
lcall
push
xor
mov
hlt
scas
add
sub
mov
jne
nop
test
xor
insl
scas
dec
cmpsb
movsl
leave
xlat
adc
lods
push
mov
sub
ja
add
push
lea
lahf
sahf
push
push
jl
mov
clc
mov
add
add
add
sbb
adc
rolb
repz
and
sbb
add
mov
fldenv
adc
mov
imul
fimuls
inc
cmc
sbb
out
mov
jnp
sub
jne
andl
icebp
fcomps
fldcw
mov
ljmp
dec
clc
cltd
xor
inc
mov
sub
cmpsl
test
in
push
cmp
ljmp
dec
aaa
xchg
mov
xor
repz
xorl
mov
rcrb
jnp
adc
loopew
cmp
and
ret
ljmp
or
hlt
or
inc
jl
lret
xlat
stos
adc
mov
in
fisubrs
cmp
in
xor
push
pop
ja
stos
xchg
jns
outsb
push
dec
lret
and
add
popa
push
div
leave
pop
and
adc
addr16
xor
jb
cli
ds
jb
and
ds
mov
into
int3
adc
add
xor
aas
or
sti
push
jno
out
imul
test
adc
iret
cli
or
pop
fsubl
xchg
imul
mov
aas
ret
sub
mov
dec
icebp
fwait
popf
fistpll
sub
fsubrl
repz
stc
sbbb
aam
mov
mov
cmp
sbbl
cmp
adc
les
mov
mov
clc
xor
imul
xor
sub
xor
ja,pn
dec
sti
in
pop
shr
xor
insl
ljmp
adc
leave
in
pop
adc
fiadds
fsubrs
add
jp
fwait
bound
pusha
mov
pop
xchg
test
jmp
xchg
fisubs
jo
test
push
ljmp
cmp
icebp
and
jmp
jp
xchg
popa
sub
test
dec
xor
rolb
push
fstl
xchg
jae
sbb
xor
in
gs
repnz
mov
mov
bound
out
xor
lea
gs
xor
xor
test
cmpsl
pop
and
mov
insl
adc
repz
xchg
or
ljmp
inc
jle
divb
cmp
inc
aad
ffree
std
inc
das
jp
jnp
lcall
nop
adc
pop
stos
and
call
pop
add
sti
int3
dec
add
or
xchg
mov
xor
mov
mov
jmp
xor
cld
dec
mov
push
scas
fisttpl
cwtl
add
mov
jge
shl
xchg
xlat
adc
jg
pop
scas
push
dec
in
iret
pop
sub
nop
inc
mov
loop
stc
mov
and
jge
sub
in
mov
dec
mov
sub
mov
dec
xchg
popf
pop
xchg
mov
outsl
or
roll
xchg
mov
jge
int3
push
lock
jmp
inc
mov
out
fs
adc
in
push
fisttpl
jge
ret
jle
outsb
movsl
fwait
push
out
sbb
std
pop
or
test
sarb
sbb
pusha
repz
ss
xchg
add
xchg
sub
adc
aam
pop
jmp
or
xchg
sub
loope
push
push
in
clc
roll
xchg
xor
repz
aam
jns
xchg
cwtl
popa
fsubrp
pop
add
scas
lret
lods
mov
pusha
nop
xor
aaa
out
pop
inc
xchg
pop
cmp
es
repz
sbb
jg
mov
scas
adc
push
jmp
pop
shlb
cmpsl
fcoml
divl
mov
int
push
movsl
rclb
das
ret
jne
fbstp
ret
pop
lahf
hlt
sbb
mov
pop
xor
cmc
sub
or
fisubrs
aas
ficompl
enter
es
xorb
ret
lods
dec
xorl
jae
sbb
adc
and
push
mov
mov
jg
mov
mov
xchg
in
mov
mov
or
jl
imul
in
cmpsl
es
call
icebp
pushf
cld
jbe,pn
dec
imul
fdivl
push
clc
popf
jg
sti
dec
cs
sbb
push
movzwl
mov
ror
ret
addb
fwait
jnp
out
popa
inc
jns
stc
or
popa
or
ss
push
cmp
aam
fcmovne
jmp
insb
dec
cmp
add
xchg
mov
jl
shlb
fcomps
mov
cmp
loopne
cmp
fs
and
xor
fiaddl
add
adc
nop
fcompl
insl
cmp
sub
mov
push
push
test
les
mov
sahf
inc
outsl
repnz
loopne
push
pusha
call
das
les
ds
dec
iret
mov
mov
sti
cmc
cmp
sub
mov
or
fidivs
pop
dec
jno
and
pop
xchg
push
mov
sbbl
dec
jmp
imul
push
std
das
cmp
aas
xchg
push
sbbl
lret
or
std
les
fwait
lea
in
pop
push
cmc
dec
iret
push
cmp
mov
ss
loope
or
xor
inc
sbb
gs
xlat
fstpt
das
jo
cld
lea
lds
push
inc
addr16
outsl
js
ret
mov
mov
daa
pushf
pop
sub
mov
lea
mov
or
sub
adc
insl
dec
pop
in
and
mov
push
pop
pop
sar
roll
add
push
add
push
cwtl
xor
pop
sbb
add
inc
outsb
mov
popa
je
push
stos
popl
xor
insl
xchg
dec
movsb
xchg
mov
gs
mov
ljmp
jecxz
jle
ss
fiadds
xorb
stos
imul
or
fisttpl
arpl
loope
xor
scas
adc
lret
outsl
cmpsl
sub
nop
add
roll
dec
push
jmp
nop
add
fs
mov
cmp
mov
std
cld
or
in
jo
sbb
and
xor
clc
aad
cmp
sahf
inc
stc
les
ficoml
fstp
add
fldenv
cmp
imul
clc
pop
add
test
icebp
push
push
ja
push
xor
ljmp
mov
pop
movsb
cli
cmpsb
iret
pop
pop
push
jp
and
in
mov
shll
call
mov
push
push
leave
imulb
fcmovbe
aaa
movsb
push
mov
xchg
ja
and
sbb
lret
push
or
dec
fisubl
xchg
xchg
mov
loopne
int
lea
fs
nop
mov
dec
pop
xlat
mov
xorl
sub
fs
fsts
jae
mov
jae
sbb
inc
addr16
or
jae
in
fnsave
ljmp
test
arpl
popf
or
mov
xor
jge
lock
lcall
cli
rol
pop
jno
or
ficompl
bound
lret
sbb
inc
jp
andb
pop
inc
adc
mov
sbb
stos
jp
test
jge
stos
jne
aas
dec
push
into
inc
mov
into
into
dec
or
fistpl
push
xor
lods
pushf
cmpsl
movb
inc
mov
jp
add
mov
lock
jl
call
mov
call
sbb
mov
jmp
cmp
ret
xor
mov
cltd
cld
mov
lea
inc
mov
ret
mov
sbb
popa
mov
cmp
outsb
jno
iret
push
xor
xor
mov
jno
scas
std
cmc
mov
shll
lds
and
frstor
sbb
or
mov
pushf
inc
cmc
aaa
lret
or
xor
inc
sbbb
sbb
add
push
inc
lods
loopne,pn
jcxz
inc
mov
sbb
or
imul
loopne
push
pop
lret
rorl
repz
sub
push
les
fucomp
fwait
mov
jecxz
and
shll
lods
xchg
dec
arpl
pop
popa
sbb
lods
cmp
rorb
adcl
adc
mov
call
cmp
cli
stos
push
divl
lcall
inc
sbb
icebp
ss
jne
mov
fisubl
push
xchg
test
scas
je
ljmp
imul
inc
gs
sahf
or
mov
adc
sbb
and
in
arpl
add
mov
orb
movsl
adc
cwtl
inc
sti
cmpsb
push
mov
pop
lods
jmp
jl
jns
das
movb
mov
mov
scas
out
xchg
scas
and
adc
inc
imul
loopne
sub
ror
mov
xlat
mov
les
push
cmpsl
imul
repnz
out
mov
repnz
fwait
pop
pushf
gs
lret
jae
pop
fwait
add
sbbl
mov
popa
sub
adc
aad
xor
movsb
jmp
in
pop
ljmp
sbb
jbe
sub
insl
ret
mov
out
lock
data16
cs
push
sub
mov
mov
loopne
xor
dec
lea
movsb
mov
fisttps
cmp
cltd
cmc
scas
inc
stos
repz
jnp
aas
push
mov
sbb
inc
rorb
and
push
loopne
cmpsl
mov
xchg
jmp
xchg
push
xchg
pop
aam
mov
xor
out
jb
push
fstp
ret
adc
test
into
jo
lret
lock
aaa
enter
imul
shl
xchg
inc
jb
sar
addr16
sbb
lret
mov
add
mov
xlat
test
pop
jg
in
cmc
add
adc
xor
mov
jecxz
subb
pop
mov
jbe
or
sbb
dec
push
pop
stos
fistps
pushl
adc
xchg
mov
es
pop
adc
xorb
cmpsl
xor
mov
notl
pushf
jle
stos
cmp
dec
jecxz
sub
or
and
pushf
xchg
jnp
mov
xchg
daa
movsb
mov
add
sahf
cld
xchg
inc
jmp
sbb
jo
test
xor
push
lret
adc
orl
xor
mov
cli
roll
inc
xchg
rcll
and
fimull
sbb
insb
cmp
rolb
or
push
scas
adc
mov
xor
dec
adc
dec
flds
sbbb
daa
mov
ljmp
test
mov
lods
mov
xchg
or
sub
cmp
out
aad
mov
loopne
inc
add
add
jno
xchg
mov
scas
push
inc
subb
adc
inc
push
xchg
jle
pop
and
push
lret
cltd
outsb
push
sub
outsb
and
inc
enter
adc
mov
je
lds
negl
mov
adcb
mov
and
imul
clc
repz
xor
lods
xchg
xchg
mov
out
fcompl
push
out
sbb
arpl
push
push
and
test
cmp
ret
xor
aam
lahf
push
outsb
jg
cmp
inc
or
add
loopne
or
push
mov
stos
cld
cmpsl
lods
mov
mov
fwait
stos
mov
or
lods
jns
fsub
cli
mov
and
push
arpl
sbb
lods
inc
loop
pop
fisubrs
rcr
pop
lret
adc
xchg
pop
js
mov
mov
dec
xchg
xor
lds
xchg
sbb
fcomps
andl
mov
cwtl
cmp
dec
rorl
lcall
clc
stos
xchg
jmp
xor
repz
pop
sbb
and
pop
mov
movsl
jnp
jne
mov
lcall
jge
je
jecxz
push
xchg
mov
mov
add
mov
mov
in
push
or
or
xchg
mov
pop
jl
or
xlat
stc
xchg
cmpsb
ljmp
inc
fsts
pop
xor
ljmp
ret
adc
push
ljmp
jle
stc
outsb
sbb
xchg
insl
cmp
dec
out
inc
dec
call
or
inc
and
cmp
xorb
data16
loopne
push
movsl
or
das
and
jo
or
push
or
test
adc
pop
pusha
and
mov
scas
mov
add
test
push
and
pop
mov
cmpsl
test
iret
in
push
ret
or
scas
stc
test
and
sbb
popf
popf
repnz
cltd
fstps
inc
cmpsl
cmc
xchg
cli
mov
out
add
mov
mov
adc
mov
pop
dec
inc
xchg
jo
ljmp
xchg
testl
mov
inc
push
jae
lahf
dec
push
pop
dec
xchg
jae
push
mov
cmp
jne
push
or
pusha
hlt
dec
sarb
mov
cs
sbbb
fsubrl
jmp
xor
pop
mov
iret
jb
ficomps
mov
mov
cmp
push
lea
or
pop
lcall
stc
add
outsb
mov
dec
xor
aas
dec
enter
jg
call
cmp
lret
je
aas
mov
cmp
jns
adc
and
xchg
dec
and
cmpl
subb
pop
aas
xchg
rcrb
out
cmp
lock
add
and
fbld
xchg
in
jns
inc
fs
notb
or
pop
hlt
inc
cmp
and
adc
sbb
test
test
inc
mov
mov
fadd
rcll
adc
cmc
cltd
lcall
mov
inc
or
fnstenv
mov
das
lods
popa
iret
inc
add
in
lret
or
cmp
insb
in
js
das
pop
mov
dec
mov
lods
xor
fstl
and
loope
mov
rorb
inc
imul
outsl
inc
mov
pop
dec
pop
sbb
shr
cmp
xchg
push
ds
js
les
adc
dec
sub
or
xchg
push
arpl
pushf
xor
clc
and
fsubp
adc
fcompl
orb
mov
out
aam
dec
sbb
cld
das
mov
jo
mov
arpl
and
adc
jp
mov
repnz
gs
inc
pop
mov
mov
or
sbb
gs
cli
push
imul
sahf
clc
call
xor
mov
js
jecxz
mov
rcrl
mov
test
push
cmp
ljmp
or
inc
lds
enter
dec
pand
mov
incb
sbb
mov
shlb
ds
and
xchg
mov
xchg
xchg
sub
and
jmp
mov
lahf
jg
add
xor
mov
outsl
xlat
pop
in
xor
or
inc
lods
ja
inc
add
es
repnz
lea
adc
jl
call
movb
into
in
leave
lea
xlat
mov
das
inc
es
mov
push
stos
stc
cs
adc
lds
jb
inc
and
sbb
xor
hlt
jmp
sbb
sub
mov
pop
fildl
cmp
iret
sub
mov
test
jbe
push
add
pop
mov
pop
out
lahf
jnp
jne
pop
mov
jae
lods
lret
adcb
aas
sti
xchg
xlat
sbb
sarl
sbb
push
add
add
push
sbb
subl
inc
popa
lods
or
mov
scas
lret
call
mov
inc
xlat
dec
xchg
mov
sub
lahf
outsl
in
cli
or
mov
jne
cmc
inc
and
adc
xor
into
dec
jne
jo
add
popf
cmp
pop
add
in
adc
push
adc
mov
mov
addb
lds
shll
lds
mov
pop
dec
fisubs
fsubrl
mov
xor
adc
sub
push
lds
pop
mov
mov
pop
out
mov
shlb
and
test
pop
sub
idiv
jbe
mov
movsl
cmc
negl
stos
push
cld
push
sub
out
pop
dec
mov
push
testl
push
jle
clc
shl
insl
scas
out
inc
lret
mov
jmp
jbe
daa
lds
fcmove
test
imul
test
sub
xchg
pusha
ljmp
adc
inc
jmp
leave
xchg
adc
out
imul
xchg
std
leave
inc
sub
sarb
in
push
jle
out
jp
jge
inc
and
imul
sbb
pop
push
cmp
mov
sti
inc
pop
xor
cwtl
push
rol
movsb
pop
dec
outsl
push
inc
ret
add
or
lcall
mov
aam
mov
imul
cmp
cltd
dec
clc
mov
stos
mov
mov
xchg
mov
lea
cmp
lock
jae
in
xlat
push
imul
pusha
lock
pop
lods
and
lea
or
mov
lret
jp
cmp
add
inc
or
pusha
cmp
xchg
mov
andl
adc
and
in
out
pop
mov
inc
xchg
mov
ret
ljmp
je
in
sbb
sbb
scas
or
je
cmp
inc
sbb
fstpl
adc
pop
adc
mov
aas
dec
jbe
mul
call
cmp
mov
mov
lds
in
imul
mov
sarl
lock
xlat
das
stc
mov
mov
stc
pop
or
call
das
dec
xchg
adc
pushf
jmp
mov
mov
sbb
out
fnstsw
ficompl
clc
cli
imul
mov
mov
jmp
in
add
ss
icebp
and
cmpsl
dec
cltd
in
pop
or
mov
jns
sub
and
pop
jecxz
fidivs
std
cmpsl
and
fwait
or
push
xchg
adc
int
ljmp
iret
jecxz
lcall
mov
sarb
sti
xchg
xchg
sub
in
insb
loope
and
mov
jns
roll
movl
xchg
xorb
sbb
xor
xlat
mov
lods
sbb
pop
pop
sahf
push
js
add
xlat
pop
rorl
sub
mov
xchg
fisubl
js
je
nop
jg
movsl
cs
outsl
or
pop
nop
addl
fwait
xor
push
into
add
inc
sahf
jg
dec
mov
sbb
rclb
aaa
hlt
or
xchg
and
push
push
mov
sbb
imulb
cmp
ja
sub
incl
jno
pop
jo
jmp
rorb
bound
mov
push
and
arpl
fs
push
hlt
clc
add
popf
sub
xor
in
sbb
push
ja
pcmpgtw
or
repz
and
push
mov
xchg
xchg
jle
and
mov
xor
adcb
jecxz
push
jg
ret
lock
repnz
popa
fimull
inc
out
xchg
dec
ficomps
push
sbb
mov
cmp
or
dec
ret
out
les
ds
lock
sbb
mov
pop
xchg
jg
dec
ja
fwait
xchg
sub
jecxz
out
fadd
mov
lods
pop
xchg
sbb
jge
or
mov
mov
push
aad
mov
add
xor
jmp
cmp
ljmp
fsubrl
mov
add
xchg
in
xor
fdiv
mov
sbb
mov
xlat
mov
push
mov
aam
aas
mov
cld
shlb
jmp
cld
stos
scas
std
xor
dec
or
outsb
cmp
mov
cmpsl
dec
ret
insb
roll
cltd
out
int3
add
xor
repz
stc
imul
stc
in
das
inc
cmp
xchg
and
mov
not
data16
and
xchg
je
bound
mov
push
push
fistpll
cmp
xchg
notrack
mov
cmp
pusha
sub
sahf
xorl
push
cs
mov
mov
and
pop
sbb
and
js
repz
lcall
imul
or
enter
fisubl
jmp
mov
xchg
adc
int
mov
jno
je
nop
xchg
int
test
loope
out
push
xchg
sarl
mov
xor
out
inc
loop
in
fnsave
rcll
mov
lret
maxps
dec
jge
mov
add
cli
scas
mov
or
xor
in
jb
ret
xchg
test
sbb
movzbl
aaa
mov
mov
cmp
push
cmp
pusha
xor
sti
or
out
and
roll
call
rol
push
nop
loop
mov
stos
add
or
pusha
pop
mov
jge
jecxz
int3
inc
dec
jge
jg
test
add
dec
out
rclb
xchg
ret
sub
lods
cld
push
sbb
xchg
mov
and
inc
sub
jecxz
lahf
push
sub
lea
pop
call
or
xchg
gs
sub
adc
pop
call
aaa
in
je
mov
add
push
and
cwtl
lods
jl
andb
add
cwtl
sti
pop
insl
mov
cli
jb
push
mov
xchg
mov
mov
test
cltd
mov
sub
clc
add
push
xchg
sbb
or
je
mov
rcl
dec
push
sbb
xchg
jecxz
xchg
cmp
mov
aas
cld
cs
inc
leave
mov
arpl
repz
hlt
in
sbb
dec
test
mov
jns
cli
pushf
in
in
hlt
xchg
xchg
data16
aad
leave
test
sbb
jns
hlt
push
mov
iret
int3
in
mov
cmp
dec
xor
mov
ljmp
mov
fisttps
xchg
test
pop
cmp
sbb
push
lret
add
mov
mov
or
andb
out
push
aaa
jb
mov
or
sbb
imul
sub
push
iret
inc
dec
sub
xchg
jg
mov
fwait
out
jbe
sti
in
sub
mov
mov
inc
jo
movsb
xor
ret
xchg
fucom
scas
jl
es
cmp
push
pop
cmp
sub
shlb
push
xchg
mov
insb
sbb
std
bound
inc
jb
mull
sub
ret
dec
sub
popl
dec
lcall
add
cli
jo
inc
mov
lret
dec
jp
xchg
push
ds
xchg
jl
aaa
nop
adc
rcr
gs
dec
and
jp
jnp
enter
jecxz
mov
xchg
imul
cld
test
dec
xor
icebp
out
push
jne
dec
stos
inc
and
lcall
or
jg
mov
sub
cmp
rcrb
stc
pushf
add
fwait
push
int
popa
lods
or
xor
in
xchg
push
test
lock
or
orl
xor
rorb
mov
add
ret
int
cwtl
and
mov
sub
stos
aam
scas
icebp
mov
outsb
sub
xchg
cltd
or
xorb
test
fisubrl
loope
add
cmp
mov
popf
repnz
cwtl
shlb
cs
sbb
sbb
icebp
subb
pop
movsb
adc
sbb
je
lcall
pop
scas
xchg
iret
pop
sarb
push
dec
push
add
add
sub
add
popa
orl
dec
shlb
imul
or
test
adc
jnp
xor
popa
aam
push
inc
aaa
pusha
mov
jbe
adcb
mov
dec
data16
push
mov
test
cwtl
pop
loope
cmpsb
incl
adc
popa
aaa
xor
popa
test
cmp
mov
sbb
xlat
xor
fwait
jle
cmpsb
mov
shl
sahf
mov
add
addl
shl
push
pop
or
dec
and
jl
jno
shr
and
adc
test
test
push
cs
xor
push
push
int3
stos
jbe
cmpsl
bswap
or
ss
add
mov
mov
xchg
push
jno
jmp
std
ret
inc
adc
cmp
push
test
or
cli
add
and
and
sub
shrl
push
arpl
dec
jmp
pop
sahf
mov
mov
test
sti
or
fdivs
add
mov
jecxz
hlt
vaesdec
repz
cmp
mov
or
outsb
cmp
fucom
lea
rclb
mov
and
repnz
mov
mov
xchg
mov
mov
mov
sub
in
fimuls
or
ljmp
xchg
ret
dec
outsl
les
mov
data16
cmp
push
jle
and
xchg
mov
or
mov
cmpsl
lea
std
mov
inc
or
gs
mov
add
jmp
shll
loop
inc
xchg
rcrl
jmp
push
fsts
mov
out
icebp
insb
sub
inc
bound
jne
mov
lret
les
pop
scas
pop
pushf
stos
add
popa
ret
xchg
scas
in
or
leave
cmp
es
repz
imul
std
sbb
pop
jno
out
fists
es
sub
push
push
mov
fdivl
cmc
xchg
cs
or
pop
scas
xlat
popa
ret
xchg
inc
fnstcw
into
mov
popf
cmpsl
ss
int3
pop
fsubrp
adc
or
movntps
jge
cmp
call
mov
jno
ret
sub
aad
add
sub
mov
mov
inc
pop
imul
mov
push
packuswb
stc
xchg
lock
daa
lds
push
pop
movsb
aaa
pop
jne
push
ljmp
lret
and
lret
mov
movsb
out
cmp
mov
xchg
inc
lahf
pop
iret
jbe
jge
sbb
fstps
xchg
movsb
lcall
jmp
sti
jle
nop
in
sahf
dec
fiadds
lret
sub
repnz
push
pmaxsw
push
sbb
inc
pop
das
fadds
mov
outsl
les
inc
mov
xchg
adc
fwait
mov
fcomip
clc
jo
iret
aaa
inc
mov
push
pop
out
cld
ret
push
cmp
fcomp
jae
add
movsl
xchg
mov
ret
mov
and
xor
jbe
gs
xbegin
movb
push
pop
push
mov
push
fucomip
enter
out
sub
and
cmpsb
cmp
xchg
mov
push
or
or
push
popf
out
std
rep
mov
xlat
mov
sahf
out
movsl
inc
xchg
lret
adc
into
enter
in
lock
and
push
xor
cld
in
mov
adc
xchg
cmp
sub
cmpb
or
mov
repz
mov
inc
enter
mov
cld
pop
sbb
xor
pop
addb
dec
ljmp
movsb
imul
push
pop
loop
imul
loope
sbb
xchg
cmp
out
sbb
jp
push
loopne
ljmp
xchg
or
jp
mov
or
sahf
push
push
sbb
mov
cli
and
sbb
bound
stos
ficomps
outsb
xor
cltd
cmpsl
fiaddl
lock
clc
push
jmp
out
jecxz
adc
mov
xchg
pop
mov
cli
xor
adc
mov
idivl
pushf
fbstp
jp
stos
mov
inc
sub
leave
pop
xchg
clc
repnz
fdiv
push
aas
pop
push
jae
mov
outsb
or
jl
mov
cli
out
xor
push
das
xchg
inc
das
or
pop
jnp
add
and
outsl
dec
push
out
dec
and
jl
xor
and
xor
stos
sbb
aad
mov
cmpsb
stc
sub
push
dec
bound
jp
rcr
jge
push
jl
xchg
testb
xchg
cmp
cmp
fyl2xp1
sbb
xchg
hlt
mov
andb
lds
jne
cld
adc
adc
sub
sbb
push
shll
push
xor
movsb
popa
xchg
call
movsb
stos
mov
jne
sub
pushf
sbb
adc
mov
jb
mov
adc
mov
push
int
enter
xor
je
pop
xor
mov
fdivs
pusha
add
lcall
mov
sarb
sub
inc
cli
pop
jmp
shlb
push
sbb
in
sub
cltd
mov
sbb
sbb
leave
sahf
insb
and
add
ret
movsb
lock
icebp
cld
or
cmp
cld
ret
shll
cwtl
inc
xchg
filds
or
cmp
jecxz
jge
insb
xchg
loopne
add
shlb
inc
xchg
xchg
in
cmp
push
pushf
xchg
call
add
xor
dec
cmp
stos
push
xor
sbb
movsl
or
fucomi
stos
lds
in
lods
adc
out
cmp
inc
jge
push
cmovg
sahf
popa
popf
stos
stc
adc
out
sub
sarl
jge
jo
adc
push
pop
mov
imul
fistpl
xor
dec
fsubs
pop
cmp
negb
movsl
inc
push
mov
std
jbe
mov
mov
fsubrs
xorl
sti
notl
mov
mov
xchg
jg
add
out
add
and
mov
mov
lods
cmp
inc
cmp
mov
inc
mov
cld
inc
int
in
je
jnp
das
loope
data16
xchg
out
and
popa
mov
imul
mov
fisttps
dec
and
cld
in
xchg
mov
icebp
inc
add
xchg
fdiv
jmp
jg
push
in
pop
daa
cmp
cmp
and
jp
push
hlt
mov
mov
jp
push
xor
dec
mov
sbb
pop
sub
sarb
test
and
jae
daa
sub
xor
sub
push
out
mov
push
out
and
and
in
xchg
pop
adc
xchg
scas
xchg
ja
mov
sahf
aad
cmp
scas
std
les
push
out
jns
scas
cld
dec
mov
add
and
test
xchg
jl
cmp
fwait
ret
add
cmp
ret
scas
aam
cmpsb
pop
fsts
into
test
insl
fs
cmpsb
lds
leave
imul
cmc
adc
jmp
loopne
and
aam
sub
xchg
cltd
mov
push
mov
adc
imul
fnsave
add
loopne
xor
cli
clc
push
jmp
inc
push
arpl
popa
pop
sahf
stos
xchg
jmp
or
ss
push
data16
dec
xor
pusha
out
stos
aam
adc
aas
xor
inc
aam
or
mov
sub
in
mov
sti
pushf
sub
add
int3
xchg
aas
ficompl
dec
xor
daa
and
aam
orb
popa
inc
xchg
call
das
jae
xor
std
je
aad
xor
jg
lds
dec
insl
loopne
ret
push
xchg
sbb
sub
inc
add
and
push
clc
insb
jnp
es
repnz
or
pop
pop
cmp
lcall
mov
fidivrs
or
cmpsb
mov
dec
mov
outsb
fwait
dec
neg
fcmove
lcall
xchg
xchg
add
repnz
push
enter
into
jo
int3
push
icebp
push
or
fsubs
aas
mov
out
push
int3
cmp
mov
cwtl
jl
scas
data16
push
aas
mov
jp
pushf
and
pop
mov
pop
ror
sti
dec
ret
scas
lahf
jne
les
xchg
adc
cmp
cld
clc
fidivs
dec
mov
add
mov
mov
or
dec
into
ja
adc
loope
inc
fs
cs
jne
cmp
loope
mov
fcomp
mov
and
addr16
mov
mov
lods
negl
icebp
jae
xchg
jne
movb
orb
add
ret
adc
fidivs
pop
sbb
and
sbb
jne
or
xchg
js
aam
jo
adc
cmp
imul
mov
xorl
mov
dec
xchg
movsl
push
hlt
or
mov
mov
test
fildll
fs
adc
jne
push
fldcw
fwait
adc
mov
mov
iret
pop
xor
mov
mov
xchg
stc
fwait
leave
cmp
xchg
and
test
sub
divl
out
aad
cmpsb
imul
mov
cmp
xchg
sahf
xchg
adc
inc
pop
cwtl
cmc
mov
dec
xor
clc
and
dec
push
xchg
vmwrite
in
cmc
adc
xchg
cmp
xor
mov
jae
ficoml
outsb
loopne
in
mov
xchg
push
rol
mov
cmpsb
repz
pushf
loopne
push
in
jg
jb
jp
lds
pushf
cmp
pop
imul
addl
aam
push
jmp
clc
push
push
stc
push
dec
add
jnp
pushf
or
mov
cmp
xchg
les
xchg
sbbl
inc
mov
cmp
stos
fidivl
add
leave
lcall
jno
cli
sti
mov
cmpb
out
mov
in
fcmovb
test
in
lods
push
mov
stos
movsl
ljmp
sub
push
xchg
and
mov
or
in
lret
pop
sti
pop
jb
mov
movl
stos
mov
cmp
dec
cmpsb
insl
push
imulb
mov
add
lea
insl
fildll
jo
mov
aas
test
lcall
fidivs
mov
xlat
js
inc
push
jmp
xchg
sbb
out
push
xor
fiaddl
mov
and
fsubr
lahf
adc
loop
je
xchg
inc
sarb
std
mov
and
aam
mov
loop
lret
jmp
mov
in
and
adc
rol
inc
push
pushf
loop
les
mov
xchg
fdivrp
cmp
push
scas
xor
pop
and
sub
inc
rcrl
or
in
outsl
std
mov
rcll
popa
in
push
pop
je
aam
ds
dec
test
stc
lret
ja
dec
fwait
sbb
fbstp
in
sbb
or
jbe
pop
push
test
and
fdivs
testb
sti
insb
test
cmp
std
sbb
mov
or
xor
xor
insl
fdecstp
mov
mov
cld
pusha
jns
mov
int
pop
push
dec
test
daa
sbb
and
fimull
into
out
xor
xor
cmp
push
adcb
sti
sbb
fistps
mul
mov
sbb
pop
or
push
insl
movsb
jl
sti
fisubrl
mov
mov
fisubrl
idivl
inc
mov
ret
fwait
sarb
faddl
loope
icebp
pop
or
mov
int3
mov
and
sub
add
lods
or
dec
and
jae
mov
aad
sbb
sbb
cmp
fistpl
dec
xlat
adc
mov
js
jge
or
lock
or
push
mov
xchg
lods
cmpsb
aad
sub
fwait
and
shll
aam
dec
into
mov
arpl
outsb
or
sahf
inc
insb
scas
push
pushf
pop
add
ror
fisttps
dec
shrl
push
cwtl
xor
sub
test
mov
sahf
and
sbb
and
pusha
cli
inc
mov
push
mov
sbb
ss
lahf
ret
movb
cmp
imul
jns
cs
test
add
adc
sub
jnp
cld
rcll
mov
fidivrl
pushl
adc
adc
jbe
cs
in
push
loopne
aam
clc
push
lods
mov
jge
in
sbb
cli
push
mov
stos
clc
arpl
ja
cmc
xor
test
sub
mov
dec
mov
mov
jae
adc
xor
pop
roll
cmp
xchg
jp
cmpsb
testb
cmp
pop
mov
mov
lock
dec
push
lods
test
je
gs
ret
dec
out
sbb
dec
mov
cld
push
lods
dec
push
mov
es
lods
data16
mov
adc
es
out
add
add
xchg
test
xchg
push
mov
xchg
push
stos
jmp
or
sub
ljmp
in
xchg
and
or
push
push
aam
push
mov
scas
das
lods
imul
push
adc
lds
xchg
pop
fnsave
mov
fwait
dec
test
popf
pop
jmp
sbb
and
pavgb
mov
bnd
or
aad
insb
sub
das
sub
dec
xchg
fldenv
rorl
je
mov
or
xor
inc
xlat
xchg
mov
add
sub
pop
push
push
lea
test
push
sbb
sub
pusha
es
aas
pushf
out
and
push
xchg
ret
push
ret
sub
adcb
add
aam
inc
inc
mov
leave
das
imul
loopne
push
xchg
push
out
jmp
sbb
sub
icebp
mov
lock
xor
jae
jp
cmpsl
mov
ss
dec
jge
mov
mov
out
aaa
nop
inc
xor
add
leave
rcll
mov
jo
in
out
and
cld
les
cmc
push
cltd
loope
sbbb
in
mov
les
jo
dec
lods
nop
add
xchg
movsl
adc
iret
in
in
test
pop
inc
daa
sbb
xor
sub
repz
jecxz
fcompl
icebp
ds
adc
xor
pop
jge
adc
dec
mov
repz
aas
inc
in
sub
movsl
mov
inc
mov
pop
mov
or
nop
cmp
and
mov
mov
in
inc
rcrb
mov
xor
mov
xor
cmp
ret
mov
lret
and
lret
xchg
pushl
and
das
or
push
mov
loop
shr
cld
pop
mov
mov
popa
out
mov
arpl
xor
rcl
int
rorl
mov
fwait
adc
and
jecxz
xchg
and
add
dec
lret
mov
nop
add
fs
dec
inc
jbe
rolb
xchg
adc
stos
jle
faddp
cmp
mov
insb
popf
mov
adc
rorb
fdivr
mov
push
mov
loop
mov
pop
ret
mov
add
mov
or
xchg
inc
pushf
cmc
movsl
dec
sbb
les
cs
lods
and
adc
mov
and
jb
shlb
int3
call
cld
mov
ret
jne
rorl
les
pop
cli
adc
rcrb
stos
or
call
insb
loopne
and
lcall
mov
int3
mov
movsl
and
xor
bound
sub
fwait
pop
add
mov
mov
cmp
cmp
sub
adc
xor
adc
pop
test
aas
pop
pop
out
pop
mov
mov
jb
jns
mov
push
inc
mov
xchg
fisttpl
sbb
dec
aad
shl
rclb
adc
ret
stos
repnz
jne
jnp
mov
mov
xchg
hlt
jnp
daa
in
sbb
or
mov
ljmp
in
xorl
or
mov
scas
cmc
clc
int
and
inc
cmp
aad
adc
add
jge
movsbl
inc
sbb
xor
fadd
xchg
lock
pushf
loop
out
cmc
pop
sub
xor
cli
sahf
rcl
std
sub
dec
into
scas
rcl
stc
rclb
mov
unpcklps
and
push
inc
enter
push
inc
cltd
fildll
icebp
add
push
mov
mov
js
pop
mov
add
adc
orl
stos
adc
pop
fucom
ds
aam
and
xor
arpl
jb
out
mov
dec
sub
add
in
mov
nop
iret
pop
pop
mov
sub
ja
cmpsb
xor
add
test
jmp
stos
push
pop
add
adc
inc
push
stos
mov
add
xchg
sbb
adc
scas
adc
xorb
fldl
add
leave
dec
fnsave
and
out
jne
dec
xlat
mov
jne
sbb
fld1
mov
add
mov
sub
stc
enter
repz
or
leave
xchg
xor
mov
and
cmc
jge
je
lods
icebp
inc
popf
mov
push
das
mov
test
scas
negl
jp
sub
popf
aad
mov
lods
jo
inc
sub
fildl
push
or
sub
mov
pop
mov
dec
jb
loopne
mov
push
outsl
enter
mov
movsl
in
imul
hlt
cmp
dec
je
cld
dec
fdivl
mov
mov
sahf
ret
dec
movsl
or
add
out
daa
mov
leave
inc
add
sub
push
leave
insb
and
and
pop
insb
pop
mov
cmp
test
push
cld
ds
mov
insb
data16
xchg
cs
push
fsts
ljmp
and
sbb
iret
dec
nop
jo
jns
cli
push
sub
or
sub
gs
dec
jae
push
loopne
subb
inc
xchg
in
out
sbb
sti
adc
mov
stc
cmovnp
mov
adc
movsb
mov
mov
push
xchg
cmc
mov
xchg
jb
push
xor
clc
cmp
and
xchg
sbb
ljmp
cmp
test
ficoml
jg
pop
or
pop
scas
inc
stos
movsl
lcall
dec
int
sub
shll
iret
adc
sub
je
add
aad
jae
imul
shll
lods
xchg
push
repz
push
push
stc
scas
ret
mov
mov
ja
cs
add
lret
fmuls
pop
inc
xchg
imul
popa
in
mov
bound
les
scas
ss
xchg
lock
lods
call
or
sti
icebp
mov
dec
sbb
fstl
jg
jns
test
or
pusha
and
loop
dec
test
mov
repz
repz
repnz
mulb
ret
or
aad
out
jmp
add
inc
mov
dec
adc
hlt
in
lret
and
and
dec
jl
adc
pop
pop
imul
adc
xchg
lahf
js
pop
push
or
fucomip
call
in
lret
into
xor
mov
into
pop
sahf
adc
pop
xchg
or
pop
fisubs
inc
push
dec
sub
loopne
leave
jp
sbb
sub
pop
or
pop
push
pushf
cmp
stos
jns
push
dec
in
cwtl
imul
std
int
popf
pop
int3
jl
mov
and
lcall
lds
mov
sbb
jecxz
mov
jmp
lcallw
mov
inc
pop
mov
leave
inc
pop
into
pop
lock
and
push
xchg
inc
mov
repnz
loope
push
jae
pusha
jg
inc
imul
pop
mov
movsb
adcb
insl
leave
scas
push
jle
xchg
xor
shll
cmp
or
jnp
jecxz
inc
mov
mov
jns
pop
les
mov
dec
xrelease
sahf
mov
fs
push
jle
adc
mov
and
add
aam
dec
je
inc
popa
insl
movsl
adc
pop
dec
clc
iret
cltd
fs
aad
repnz
std
rorb
cmpl
or
mov
jl
jae
jnp
fdivp
iret
cmpsl
mov
or
cmc
inc
or
data16
sub
mov
inc
daa
inc
cmpsl
adc
cmp
sbb
sub
aam
sbb
test
jnp
push
inc
out
or
pop
inc
xor
inc
cmp
xchg
or
inc
cld
or
cmp
add
mov
cmp
jmp
inc
sbb
in
rcll
cmp
sub
xchg
movsl
xor
into
cmp
inc
scas
std
rcrb
sub
adc
add
cld
stos
jb
cmp
cmp
push
xchg
std
ss
ds
mov
mov
jnp
mov
add
sbb
lahf
cld
jge
andl
lret
flds
cmpsb
test
repnz
test
sub
mov
jnp
ss
ret
jl
jbe
dec
cmpl
pushf
cltd
fdivs
rclb
adc
fs
sbb
clc
daa
sub
sbb
cmp
inc
std
jns
aam
or
dec
xchg
pop
adc
scas
add
jno
aad
add
sbb
sarb
icebp
sub
sti
popf
or
pop
mov
movsb
sub
stos
dec
data16
inc
in
ficompl
clc
js
fisttpll
add
inc
cmp
push
jp
dec
sbb
stc
dec
mov
cmp
mov
call
jp
les
aad
insb
xchg
jg
jmp
movsl
mov
adc
testb
dec
imul
repz
rolb
scas
fs
repz
mulb
xchg
test
or
lahf
aaa
fwait
scas
mov
and
mov
push
pusha
and
lods
add
inc
out
aas
data16
iret
ucomiss
shrb
pusha
mov
jle
adc
lea
dec
loope
outsl
decl
mov
sbb
xchg
sbb
pop
movsb
fmulp
pop
call
cmp
lret
pop
sub
jnp
dec
dec
test
mov
pop
dec
mov
fsubrs
lock
mov
mov
inc
cmp
dec
aas
mov
add
cmpsl
cmp
imul
out
lret
dec
push
cmpsl
lock
out
js
out
test
sub
repnz
js
and
decl
mov
mov
add
dec
decl
outsb
and
sbb
adc
mov
pop
push
sbb
and
or
outsb
add
aam
movsl
push
cli
adc
push
ss
scas
test
mov
lahf
popf
xchg
shl
popf
jmp
das
in
or
adc
mov
sbb
add
std
sub
inc
xchg
xchg
lods
ret
sub
ja
add
or
xchg
ss
lods
les
xor
xlat
sbb
push
jl
leave
xlat
push
add
std
jb
add
popf
pusha
fdivr
js
es
dec
mov
rcll
sbb
js
addr16
adc
and
mov
dec
bound
das
les
hlt
idivl
or
pop
movsb
fisubs
or
push
mov
leave
inc
sub
shl
adc
popf
push
pop
loopne
push
fcmovbe
push
fst
jbe
cmc
outsl
or
jae
aas
push
in
dec
pop
pushf
push
loope
jle,pn
xor
dec
push
cmp
cwtl
lock
sbb
call
dec
inc
lea
fistps
pop
cli
cwtl
jmp
jp
ljmp
data16
ret
cwtl
inc
pop
cmpxchg
fnsave
loopne
push
orb
addb
mov
pop
testb
mov
lods
or
pop
cmp
push
pop
xchg
dec
cld
imul
xor
inc
xchg
aad
pop
mov
push
fcompl
xchg
mov
pushf
xchg
fists
int3
rcrb
ficomps
testb
movsl
xchg
cmp
test
sarl
addb
mov
lcall
stos
xchg
mov
bound
je
and
xchg
sub
loopne
stc
jmp
test
outsb
scas
cmp
repnz
and
mov
daa
or
push
pop
fidivl
push
dec
clc
test
mov
mov
add
or
sbb
lret
xor
sbb
repz
sub
jl
loopne
xchg
mov
std
inc
sbb
in
fiaddl
idivb
dec
lcall
out
dec
fs
push
shrb
sahf
mov
add
jnp
and
mov
fisubrl
movsb
or
dec
pop
lret
mov
in
scas
stos
jae
jns
or
mov
lds
sahf
mov
ror
sbb
hlt
movsb
pop
inc
or
mov
mov
add
ss
push
jmp
test
in
push
stos
mov
mov
pusha
ja
mov
ret
rclb
pop
and
sub
bound
push
xchg
xchg
xchg
dec
js
cmp
adc
sub
insb
lods
sub
sub
push
repnz
pop
sahf
mov
dec
inc
and
mov
aas
mov
adc
xchg
pop
aaa
shr
iret
frstor
fwait
jns
je
lods
xchg
push
jb
inc
jp
push
mov
insb
std
aaa
pusha
loop
xor
jl
push
xlat
rcl
add
mov
mov
xor
sub
orl
sub
and
xor
xor
ret
jo
push
mov
inc
call
outsl
jl
popf
mov
pushf
sarb
dec
push
data16
cmp
pop
stos
pop
mov
ret
dec
insb
push
js
std
fnstcw
push
jg
sbb
cld
jg
mov
popa
repz
fwait
aam
add
jne
cmpsb
push
adc
aaa
push
xchg
idivl
les
mov
pop
mov
mov
test
jb
adc
clc
jge
faddp
cmp
stos
lahf
les
pusha
fidivs
and
ficompl
cmpsl
out
lods
pop
dec
xor
jnp
push
cmpsl
cmp
add
add
dec
sbb
sbb
mov
data16
js
add
sbb
pusha
imul
mov
lcall
sbb
or
pop
scas
inc
push
adc
dec
sub
push
push
push
inc
jno
pop
sbb
pop
iret
mov
clc
mov
jle
xor
pop
dec
in
inc
push
shlb
cmp
into
pop
xorb
subb
dec
xor
sbb
cmp
inc
or
sub
jb
xor
pop
lret
jbe
lret
pop
lea
pop
mov
cmp
mov
push
xchg
clc
inc
mov
fimuls
inc
outsb
adc
mov
jl
les
mov
inc
mov
aaa
into
les
loopne
sub
sub
dec
or
mov
mov
pop
cli
jl
mov
dec
jnp,pn
bound
out
push
inc
jb
mov
push
cs
mov
push
and
add
inc
push
je
and
xchg
or
rcrb
lahf
shr
xchg
inc
adc
mov
sbb
dec
mov
jp
fidivrl
loop
adc
mov
jne
push
leave
jecxz
fwait
mov
jle
shl
daa
mov
fwait
mov
scas
push
mov
adc
xchg
out
xor
bound
mov
int
jle
imul
repnz
lods
xlat
dec
cmpsb
popf
jns,pn
mov
add
icebp
popf
jmp
les
xchg
dec
jae
fstpl
loope
rcrb
or
pop
pop
out
ret
cmp
cwtl
dec
enter
out
sbb
sbb
push
outsl
push
stos
insb
push
or
adc
lahf
pop
incb
xchg
out
pop
and
lods
daa
repnz
fidivrl
inc
xlat
xchg
hlt
cli
sbb
sub
dec
cmp
dec
mov
adc
stc
xchg
sub
sub
xor
shrb
fimull
jmp
mov
xor
cld
xor
cmp
or
cmpsb
pop
push
and
pop
pop
pop
jmp
pop
cmp
test
cli
or
pop
and
sti
insb
lds
stos
loop
pop
mov
xlat
fsts
pop
movsb
and
cmp
cwtl
push
incl
hlt
mov
call
mov
out
imul
cmp
xchg
cmp
cmpsl
in
fwait
jnp
fists
mov
add
movsb
and
jmp
push
lods
pop
insl
cmpsb
add
mov
pop
xor
cld
dec
dec
in
jmp
cwtl
xchg
jp
sbbb
imul
movsl
scas
loop
pusha
sbb
mov
push
inc
or
mov
mov
int
call
xor
outsl
jl
jp
adc
xor
add
out
jae
pop
insb
push
pop
mulb
test
and
repz
mov
jmp
xlat
sbb
and
jecxz
dec
inc
jno
pop
int
in
xchg
xchg
pop
and
add
testb
in
jb
jae
imulb
cmpsb
and
iret
jle
dec
adcl
mov
sub
jns
or
out
in
xchg
testb
sti
pushf
cli
rcl
mov
hlt
pop
xchg
pop
push
pop
xor
mov
dec
loopne
mov
mov
mov
aam
in
imulb
cmp
inc
inc
mov
sbb
sbb
xchg
insb
add
stos
ret
or
ret
out
insl
and
pop
xor
pusha
push
out
jae
inc
mov
fs
lods
mov
jecxz
jmp
cmpsl
cmpb
js
outsl
cmp
mov
pop
pop
xchg
test
cltd
test
fiaddl
jb
ljmp
jg
pushf
and
jnp
lcall
jns
push
push
shll
and
inc
push
and
push
cltd
enter
lods
or
daa
loop
inc
add
and
or
test
sub
jmp
sahf
hlt
aas
fistpll
mov
add
sub
mov
adc
adc
rcrl
daa
mov
daa
xor
pop
inc
mov
inc
mov
roll
loop
dec
addr16
push
lods
enter
dec
es
inc
sbb
pusha
lods
pop
push
ficompl
fs
inc
sbb
call
cmp
insb
fcompl
in
aad
mov
pop
push
outsl
mov
inc
jecxz
nop
jge
test
cli
js
aad
out
or
les
aaa
mov
push
cmp
scas
and
cld
call
mov
mov
lahf
add
fmul
mov
das
xchg
and
ja
adc
sarl
push
aas
mov
adc
and
dec
leave
in
arpl
ljmp
xor
jb
mov
cmp
jbe
jg
fldcw
mov
shrl
adc
jns
sbb
pushf
sbb
ds
mov
rcll
hlt
push
int
hlt
scas
and
repz
test
jle
enter
in
mov
inc
add
or
add
stos
push
in
out
sub
push
sub
jp
and
sti
sbb
divb
loop
loopne
ret
mov
scas
xchg
loopne
je
movaps
stos
mov
call
test
std
dec
enter
ss
mov
lcall
fmull
fs
mov
mov
xor
lea
subb
jle
fcoms
adc
push
jle
cmc
bound
repz
insb
lods
movsl
in
sub
mov
pop
aad
xabort
lods
lahf
loopne
inc
insl
inc
xchg
push
add
pop
mov
mov
orb
cmp
lahf
pop
mov
xor
dec
imul
cmp
pop
and
mov
popa
addb
add
mov
or
clc
inc
call
nop
popf
cmc
cmp
movsb
mov
int3
sbb
push
pushf
sbb
xchg
mov
cltd
push
xchg
into
aam
fwait
pushf
scas
xchg
pop
sbb
in
mov
xchg
sub
fildl
mov
pop
mov
test
icebp
push
insl
or
orb
pushf
inc
shlb
lahf
cmpsb
out
mov
mulb
leave
and
in
test
stc
and
shrb
lret
sub
jns
inc
jp
arpl
iret
push
xor
outsl
or
xchg
push
dec
push
mov
fimuls
mov
mov
push
iret
push
and
sbb
jecxz
jne
pusha
cmp
lahf
or
mov
hlt
inc
es
sti
sub
pop
adc
pop
jns
insl
movsl
test
nop
and
popa
or
cmp
jnp
xchg
pop
mov
add
and
incl
inc
or
sarb
jecxz
pop
rclb
stos
sbb
repnz
enter
mov
bound
sbb
stos
add
cwtl
dec
sub
mov
cmp
push
mov
sarl
jbe
push
fs
mov
inc
mulb
and
push
pop
pop
dec
add
adc
ss
repz
pop
push
in
push
jnp
pop
xchg
mov
inc
xor
test
scas
xor
shr
dec
dec
jmp
stos
lods
enter
push
shlb
xchg
in
sbb
insl
dec
clc
push
jmp
dec
popa
jnp
or
mov
jbe
cltd
fadds
ds
divl
fsub
loopne
adc
fimuls
nop
push
cltd
xchg
cld
repz
inc
popa
scas
in
je
xorb
pop
nop
aas
repz
cmp
pusha
and
faddl
mov
into
loopne
jle
push
inc
js
sub
aas
inc
adc
test
inc
sbb
mov
sbb
jmp
arpl
pop
imul
mov
push
ds
xchg
inc
mov
sub
test
push
jle
pop
push
movsl
pop
cmp
adc
mov
cmp
inc
xchg
ret
push
inc
mov
mov
andb
call
mov
stc
and
test
sub
popa
dec
sub
cld
popf
pusha
testl
stos
mov
in
popf
mov
hlt
jp
pop
cmpl
cli
sbb
hlt
out
mov
shlb
clc
sub
mov
jne
dec
jne
fs
fcomps
push
mov
mov
dec
es
push
xlat
mov
add
fisttpll
lods
in
mov
in
pop
xchg
movsb
xor
enterw
or
stos
mov
cmp
mov
bound
pop
icebp
mov
sbb
and
sarl
lcall
mov
sub
mov
dec
and
cltd
leave
cwtl
jmp
andl
lcall
cli
ret
cltd
xchg
jecxz
pop
inc
das
aad
push
xorl
or
pop
sub
test
jns
sub
mov
cli
pop
shll
or
call
or
fdivr
clc
or
push
notl
inc
enter
out
xor
ret
xchg
inc
or
sarb
jmp
push
push
lahf
mov
lods
dec
sbb
jns
jo
cli
mov
jp
inc
or
xor
test
xor
push
mov
aam
imul
cmp
push
mov
jbe
movsl
xchg
mov
iret
dec
jne
push
pop
jnp
fwait
das
dec
loopne
jmp
and
fwait
shll
std
insl
dec
pop
lret
push
dec
mov
mov
inc
nop
loopne
mov
not
dec
mov
fsubrl
shr
sub
rcrb
data16
sbb
sti
stos
xorl
pop
insb
dec
jle
fildll
dec
sarb
imul
divl
add
movsl
jg
jle
push
or
pop
and
call
xor
clc
dec
inc
aaa
push
inc
les
adc
or
inc
lods
aaa
cli
mov
ja
stos
adc
rclb
pop
sarb
addb
or
dec
add
cmp
fidivrs
pop
mov
fstpt
aaa
cld
rorb
push
jmp
je
pop
lds
addr16
jp
and
jp
xor
sub
pop
mov
add
sahf
clc
inc
nop
cli
xor
and
lods
iret
test
sahf
subl
xor
inc
xchg
packsswb
mov
pop
jae
ficompl
testl
dec
adc
test
xchg
imul
imul
scas
loopne
inc
pop
push
adc
push
and
pop
les
inc
test
movsl
imul
cmp
pop
add
fistpl
cmp
or
js
xor
mov
rcl
or
decb
xor
jb
xchg
faddp
outsb
test
sbb
cmp
jl
push
jmp
xchg
push
pop
and
mov
mov
repz
stos
lods
rorb
adc
leave
jg
or
jp
and
outsl
scas
stos
stos
dec
cmp
cmp
test
sub
divb
push
andb
aad
jp
in
xlat
clc
jnp
xlat
mov
dec
subb
jne
ret
and
add
xchg
iret
leave
lret
sbb
push
dec
jecxz
cmp
pop
xchg
leave
cli
mov
dec
ja
jnp
mov
push
mov
ss
sub
sub
or
pop
fsubl
jmp
pusha
jp
jge
inc
sub
mov
push
xor
in
mov
cli
enter
cmp
ret
pop
push
sub
out
mov
lahf
dec
jle
mov
inc
xchg
cmp
mov
test
nop
cmp
mov
iret
cmp
dec
outsl
sub
push
cli
inc
cmc
push
push
add
aam
outsl
iret
sub
sti
jmp
subb
cli
mov
inc
test
sbb
mov
mov
cmc
movsl
xor
ret
dec
mov
ljmp
dec
adc
mov
lcall
xlat
xchg
adc
lahf
sbb
bswap
gs
push
ljmp
pop
and
out
lock
fwait
sbb
stc
scas
lahf
test
test
xor
xchg
dec
outsb
dec
sbb
test
scas
mov
iret
dec
add
repz
subb
mov
cltd
mov
sbb
xchg
movsl
pop
movsl
push
data16
mov
in
push
inc
sbb
test
mov
aad
or
outsl
clc
outsl
shr
dec
cmpsb
fmuls
push
hlt
sub
lock
push
or
insl
shrb
adc
int3
mov
cmpl
mov
jne
loope
push
loope
loope
andl
cmp
push
leave
jb
dec
jo
mov
outsl
mov
push
jmp
inc
xor
movsl
mov
xchg
ds
mov
mov
icebp
in
and
shr
add
mov
pusha
scas
dec
mov
cmp
mov
push
jo
mov
or
mov
fdivrs
mov
mov
sub
lds
iret
and
push
jnp
insl
push
pop
sub
data16
lds
gs
mov
lods
lret
mov
sbb
decl
jp
scas
lock
in
sbb
mov
shr
out
pop
mov
push
popf
insb
dec
sub
adc
das
sub
add
fsubrp
dec
ljmp
mov
lds
push
inc
gs
add
rcrl
dec
xor
call
les
lock
mov
jns
fwait
jge
xchg
cmp
xchg
lahf
pop
jns
test
lods
int3
push
and
aam
mov
inc
std
pushf
outsl
and
repnz
rclb
and
mov
add
push
scas
and
shrl
jecxz
sbb
test
stos
lahf
scas
pop
sub
mov
inc
data16
xor
mov
inc
jo
jbe
es
ljmp
imul
movsb
push
jmp
inc
add
mov
push
aam
shrl
in
jp
std
aam
in
movsb
ss
xchg
pop
push
inc
ret
add
push
repz
add
add
inc
sub
jecxz
xchg
jae
adc
or
stc
jg
cwtl
popa
fsubrs
arpl
lret
xchg
cmpsl
out
and
dec
test
shr
pop
cltd
and
gs
fs
fimull
loop
mov
test
mov
xchg
lods
cmp
ret
mov
lods
nop
clc
popf
mov
fwait
mov
and
loop
push
pop
inc
aaa
push
ss
cmp
xchg
orb
pop
out
ret
mov
push
adc
mov
sbb
adc
out
loopne
jns
push
fcoms
repnz
dec
adcb
xchg
in
xor
jo
xchg
pop
mov
shrb
mov
xor
fstpl
or
mov
ljmp
cld
jecxz
arpl
pushf
sbb
lcall
dec
jae
xorb
push
aas
mov
xchg
mov
pop
fs
shll
sarl
dec
jo
pop
nop
push
fs
test
fcomp
pop
sub
fnsave
fldl
push
push
push
jmp
push
testb
mov
je
mov
mov
jbe
cli
es
iret
repnz
fnstenv
cmp
cmp
push
inc
pop
mov
insb
add
nop
mov
mov
rclb
pop
shll
mov
push
adc
xlat
or
in
gs
xorb
or
add
loopne
mov
neg
jp
nop
aaa
dec
enter
push
cmp
fsubp
inc
sub
jmp
test
mov
and
nop
gs
adc
push
pushf
and
frstor
mov
or
sub
pop
cli
in
loopne
addr16
lret
fnstsw
sbb
outsb
mov
xor
andl
fwait
mov
xor
ss
loope
cmp
insb
scas
pop
push
aad
adc
sub
test
out
pop
ficompl
pop
cmp
lods
and
dec
shll
sbb
mov
xor
in
repz
dec
sub
adc
mov
test
jmp
inc
test
mov
and
pop
lds
mov
aaa
stc
rcll
pop
xchg
xchg
mov
std
maskmovq
testl
test
mov
dec
sub
aam
mov
and
test
push
or
es
imul
cmp
push
jle
aas
xor
shll
dec
add
test
sub
into
aad
fincstp
jle
mov
imul
xchg
lret
testb
fiadds
pop
xor
repnz
sub
loopne
hlt
scas
hlt
xchg
insb
stos
enter
andl
aad
stos
rolb
sub
xchg
loopne
outsb
sub
sub
push
xor
push
pop
insb
repz
stos
push
jbe
mov
dec
mov
repz
sbb
mov
js
aad
aas
push
in
lea
and
cmpb
loop
inc
into
pop
jecxz
in
out
pop
cmp
out
push
and
div
mov
inc
add
dec
xchg
jns
test
inc
jo
pop
test
sti
inc
loopne
jmp
push
out
mov
in
mov
mov
jnp
stc
js
test
pop
pop
aam
mov
pop
sti
cmp
mov
aas
inc
and
jb
jbe
or
xchg
fisubrs
push
mov
or
movsl
insb
jp
push
lcall
ds
xchg
push
mov
das
mov
or
sarl
jg
addr16
out
sbb
imul
cmp
out
sub
xchg
pop
jle
push
stc
xor
testb
mov
lods
shrl
rcr
pop
mov
mov
mov
jl
test
sbb
lea
jbe
repz
mov
shrl
lret
add
add
xor
aaa
add
leave
daa
sbb
pop
mov
inc
jmp
mov
lds
ja
outsb
sub
cs
inc
and
xchg
pusha
enter
stos
hlt
xor
daa
in
pop
add
push
std
xchg
pop
push
jmp
les
cmp
xor
sub
and
pop
jns
mov
out
sbbl
adc
outsl
cmp
fsub
adc
pop
sub
data16
test
enter
mov
add
aam
push
pop
mov
inc
pop
lret
push
mov
jns
aaa
movsl
ret
jno
clc
adc
sub
test
cld
cmp
dec
jo,pn
fisubs
cltd
test
in
jb
mov
lock
mov
or
mov
test
push
cmc
aaa
cmpb
int
mov
lods
mov
pop
mov
adc
sbb
nop
pop
lret
sbb
jge
and
mov
repnz
sarl
ror
test
cs
jecxz
daa
stc
push
subl
add
int
cmpsb
inc
sub
xchg
jp
gs
scas
sbb
xchg
cmp
pusha
lea
jmp
jp
xchg
cmp
inc
dec
jno
jle
jg
mov
or
mov
push
icebp
mov
dec
mov
xlat
clc
pop
adc
cld
enter
mov
pusha
and
or
ss
shl
gs
push
jbe
dec
subb
in
push
mov
out
rol
mov
inc
inc
xchg
mov
fldl
sbb
lock
xor
add
call
pop
cld
pop
xchg
out
ficomps
jns
hlt
mov
sbb
mov
mov
hlt
sub
lock
pop
and
jb
icebp
iret
jmp
ss
imul
daa
fs
push
xlat
leave
dec
and
inc
mov
stc
jne
xor
test
and
dec
repnz
xchg
inc
aad
xchg
aad
aas
lahf
mov
add
aas
pop
push
or
fisubl
jle
push
dec
push
lock
int3
xorl
mov
dec
scas
inc
xlat
pusha
fdivrs
xchg
testl
inc
pop
jbe
jbe
nop
aas
cmpl
fcoms
pusha
ja
jbe
sbb
add
mov
vmovmskpd
or
push
sbb
mov
cmp
test
mov
dec
lods
cltd
loope
jno
sarl
mov
pusha
movsl
cli
cltd
aas
dec
mov
cmp
jb
add
sub
cltd
xlat
addr16
xor
fsubs
mov
incb
push
aas
mov
call
dec
and
sbb
lret
push
ja
out
stos
shll
int3
dec
ss
shrb
inc
inc
or
sbb
or
pop
ss
xchg
pop
xor
jbe
and
outsb
sub
sahf
pusha
or
xor
jmp
addr16
xchg
mov
in
dec
xlat
cmp
add
cmp
add
mov
cld
mov
sub
addr16
popa
mov
or
clc
mov
inc
loopne
movzbl
mov
cli
and
adc
mov
push
jp
xchg
arpl
cmp
xor
jle
push
pop
xor
insl
pop
adc
and
into
xchg
mov
std
pushf
and
sbb
mov
es
inc
or
test
and
pop
mov
jne
shl
rclb
push
cmp
inc
ljmp
pop
lret
cmp
cmp
adc
shrb
add
mov
sub
add
sbb
stos
push
jp
and
aam
test
xchg
mov
push
add
add
push
push
fisttpl
push
jno
andb
jo
shrb
lahf
mov
mov
push
mov
mov
js
add
testl
cmpb
push
popf
dec
rclb
mov
xorb
inc
call
aas
adc
push
std
repz
fimuls
mov
inc
inc
test
mov
jb
pop
ja
dec
jp
mov
test
jl
jb
adc
popf
and
xchg
fisttps
call
push
sarb
je
ficoms
cld
scas
dec
mov
in
loop
jno
pop
lret
or
sarl
in
int
mov
sbb
mov
dec
les
frndint
cs
or
inc
movsl
xor
insl
scas
mov
xchg
push
repz
mov
adc
out
dec
fisubs
imul
lcall
mov
cwtl
jbe
sbb
mov
insl
mov
out
mov
mov
and
push
and
loopne
inc
mov
fildl
je
jo
std
gs
jecxz
es
test
lret
into
inc
loopne
mov
xchg
adc
rcrl
lcall
cmc
push
aaa
out
ss
and
mov
add
jle
std
in
in
mov
add
cmp
cmp
testb
jmp
in
mov
or
flds
es
xchg
pop
or
pop
test
insl
stos
out
or
xor
inc
jl
cmpl
and
jp
xor
mov
jle
mov
push
pop
loop
and
out
jnp
xchg
out
xorb
sbb
push
push
movsb
icebp
pop
lods
sub
push
xchg
je
xchg
dec
test
shrb
cmp
xor
mov
sub
xchg
mov
jle
shrl
xchg
into
inc
xchg
int3
out
pop
movsl
fwait
and
mov
outsl
jp
xchg
aad
cs
mov
out
sbb
mov
sbb
xchg
in
dec
and
leave
ret
add
sbb
pop
imul
xor
loopne
mov
lock
js
idivb
pop
bound
xor
push
decb
and
in
lods
cmp
ds
xor
in
mov
pusha
adc
jb
test
adc
push
xchg
pop
mov
ljmp
mov
in
daa
mov
lea
shll
out
pop
and
imul
fwait
pop
jno
adc
add
ljmp
cld
add
inc
fisttpll
xlat
cmc
cmp
inc
fmulp
fsubl
cmp
pop
mov
outsb
repnz
push
adc
cmp
cli
mov
cmp
cwtl
pop
test
mov
int
test
ror
pop
or
adc
ja
imul
sub
movsb
enter
mov
test
pop
mov
jecxz
jbe
mov
jnp
rcll
loopne
push
mov
inc
mov
sar
jae
aaa
jae
jmp
ret
in
outsb
nop
aas
cbtw
cmc
or
push
fwait
inc
mov
aad
or
sbb
adc
imul
inc
mov
adc
inc
push
nop
aas
xorb
and
sub
adc
jbe
inc
mov
xor
out
test
aas
and
pop
cli
adc
into
fisubrs
pop
push
xchg
pop
and
adc
jmp
int
and
dec
mov
test
mov
mov
push
cmp
mov
sbb
xor
in
lahf
je
lea
dec
or
xor
adc
into
push
jb
enter
jl
mov
mov
lret
inc
fistl
adcl
std
push
mov
add
jl
ret
pop
stos
jg
mov
mov
sti
fwait
pop
cmpl
mov
sub
add
mov
mov
push
and
stos
dec
nop
test
push
pop
fimuls
jbe
push
mov
ljmp
nop
movsl
mov
aam
pop
dec
jg
mov
ffree
sub
jne
scas
mulb
sbb
jge
or
mov
jl
mov
mov
push
mov
stos
outsl
stos
insl
stos
daa
push
pop
and
xchg
jp
sbbb
or
sarl
shlb
subl
jo
pop
pop
pop
jne
hlt
jae
pop
add
add
jo
push
push
adc
and
xor
push
loopne
push
and
lret
stc
ss
negl
cld
in
mov
fildll
or
dec
call
lret
fsub
js
mov
ja
popf
push
inc
leave
sub
push
push
mov
mov
nop
pop
push
in
pop
repnz
cs
clc
iret
in
stos
cmp
leave
mov
neg
xchg
insl
sub
js
jmp
fisubs
mov
test
mov
sarb
sub
lds
pop
loop
xchg
stos
adcb
es
test
fistl
inc
dec
inc
rorb
ja
les
push
es
pop
lods
shlb
xchg
xchg
addr16
es
fcoml
mov
iret
cltd
mov
jae
test
pop
arpl
push
jbe
inc
movsl
hlt
xor
or
push
xchg
mov
xchg
jnp
and
incb
mov
or
fistpl
cli
push
inc
mov
push
and
fs
mov
ffreep
roll
int
sbb
lds
ja
std
push
rcr
inc
fs
mov
aam
aas
shlb
mov
add
adc
cltd
repnz
int
lea
lds
jg
pop
lret
movsb
in
stos
lods
push
mov
mov
pop
mov
add
xlat
pop
cltd
insl
mov
movsw
sbb
mov
mov
push
mov
xor
push
icebp
adc
sub
cltd
ficoml
jecxz
enter
lods
jns
inc
push
ljmp
or
mov
pop
in
push
xlat
mov
pop
aaa
mov
ljmp
jp
stos
loop
lods
pop
jle
cmp
fisubrl
jns
data16
cmp
outsb
ss
dec
mov
mov
xchg
sti
in
movsl
dec
jecxz,pt
xor
cmp
pop
sbb
mov
test
pop
fistps
mov
inc
adc
leave
icebp
insb
mov
sub
pop
dec
jnp
addr16
arpl
sub
int3
loope
out
stos
mov
add
push
adc
fistpll
or
in
xchg
stos
sbb
or
sarl
hlt
jo
jecxz
daa
mov
test
push
sbb
cmp
subb
aaa
ljmp
mov
jl
jb
jle
inc
gs
aaa
into
or
dec
std
or
in
mov
push
adc
scas
into
test
adc
neg
inc
loope
cmp
inc
and
ret
pop
outsb
xlat
pop
mov
pop
push
cwtl
add
pop
fstpl
lods
cmpsb
mov
sbb
fs
fisubs
es
stc
in
mov
fildll
gs
sbb
add
cmp
dec
dec
out
cwtl
add
cltd
xchg
dec
fldcw
mov
lret
and
es
sub
pop
out
jae
mov
je
xchg
xchg
push
adc
int
iret
rcr
lods
pushf
mov
xchg
xor
adc
sbb
sub
or
mov
sub
inc
push
xchg
xchg
test
int3
outsl
pop
xchg
leave
dec
ljmp
mov
imul
xor
inc
out
movsl
mov
decb
mov
add
test
xchg
subl
or
push
mov
xchg
imul
adc
mov
and
or
test
sbb
icebp
sub
push
adc
pop
stc
add
and
sub
push
add
cmp
data16
in
xor
mov
mov
jmp
push
lret
scas
daa
shlb
cmp
mov
adc
dec
jge
aas
je
js
pusha
inc
mov
pop
lods
pusha
in
adc
jnp
cmp
cmpsl
out
stos
xchg
mov
dec
inc
cli
sbb
in
push
ljmp
or
das
enter
pop
mov
mov
jmp
hlt
lods
shl
mov
movsb
dec
fadd
lret
adc
push
pop
pop
divb
sub
out
lret
imul
sbb
push
jno
test
dec
xlat
dec
push
imul
insb
lds
stos
out
push
ds
pop
pop
inc
xlat
popf
push
data16
ljmp
and
insb
lock
xchg
popf
lret
jbe
adc
xorl
mov
int3
inc
adc
int
sar
or
mov
std
mov
dec
sbb
cli
lea
push
adc
jae
ljmp
push
mov
out
adc
pop
jno
sbb
incb
and
mov
insl
xor
xchg
inc
out
iret
jp
imul
gs
popa
loopne
je
out
lahf
data16
jmp
dec
push
cmpsl
std
and
mov
or
jae
and
add
ds
sub
lcall
xchg
nop
inc
test
push
les
push
popf
lret
hlt
scas
xorl
push
pushf
sub
decl
jmp
fidivs
mov
hlt
push
imul
mov
xchg
xlat
negb
xchg
inc
xchg
ret
push
push
mov
push
or
les
push
cmp
hlt
push
jle
fdivl
mov
push
rcr
and
test
mov
mov
pop
or
cmp
test
jne
outsl
or
mov
cmp
lret
outsb
adc
xchg
mov
hlt
outsb
adc
push
cmpsl
scas
xor
adc
popf
insl
xlat
shll
out
jns
and
sbb
out
jmp
sbb
and
shl
jne
into
mov
movsb
imul
or
jno
jae
repz
inc
cmp
and
bound
xor
fisubrl
je
test
add
mov
loope
inc
jge
or
sub
cltd
jmp
jne
push
jecxz
daa
add
push
ljmp
push
js
shlb
mov
lds
push
dec
vmovsd
inc
stc
imul
fstps
jae
jle
test
jmp
mov
push
fs
xchg
or
push
and
out
test
je
xor
adc
shl
in
jno
sarb
xchg
and
daa
push
andb
test
mov
ljmp
aad
loop
test
push
sub
cmp
or
lcall
mov
or
dec
sub
xor
lret
rclb
loopne
aam
dec
cmp
daa
dec
cwtl
sbb
mov
add
xorb
push
ss
and
xor
mov
push
mov
mov
movl
pop
xchg
mov
fcomps
cmp
data16
adc
ds
inc
fs
bound
inc
jb
adc
popa
and
flds
mov
dec
mov
mov
inc
inc
push
add
mov
aas
cld
push
sbb
dec
fistps
jbe
xor
test
outsb
inc
jo
dec
mov
adc
pop
mov
or
mov
insl
lds
jb
pop
nop
ret
xchg
add
ds
leave
add
hlt
sub
mov
call
fldenv
ret
pusha
jmp
or
push
xchg
sub
adc
mov
mov
ljmp
stc
add
and
pop
cmp
inc
jmp
int3
idiv
cmp
insb
aas
fnstsw
mov
push
pcmpeqw
leave
push
in
loop
cli
in
jle
cmc
movsb
inc
pop
jne
or
or
mov
adc
mov
pop
push
adc
fisubs
xorl
add
ja
ret
fidivrs
shrl
outsb
gs
aam
jbe
repz
push
cmp
push
pusha
test
into
adc
lcall
nop
mov
mov
cmp
in
das
mov
inc
or
call
sub
push
inc
in
dec
dec
add
inc
psubsb
pusha
jmp
cmpsb
xchg
stc
jnp
hlt
mov
cmpsb
pop
int
std
add
sub
push
es
dec
outsb
inc
adc
jmp
xchg
pop
pop
test
popa
mov
mov
push
and
fld
cmp
bound
and
sub
and
lret
xor
lahf
mov
sub
mov
mov
int3
repz
add
pop
call
daa
push
add
xchg
lcall
jmp
add
int
std
xor
jns
mov
iret
lret
aam
fs
push
and
dec
es
ljmp
push
jae
ds
psllq
xchg
dec
lods
add
xchg
jno
jge
ds
shll
cmp
pop
adc
mov
pop
aaa
in
test
pop
aas
js
ret
and
push
cmp
clc
inc
push
data16
cli
pop
adc
xchg
add
outsb
in
mov
test
gs
and
fidivrs
and
jb
jecxz
testb
cmpsl
mov
pop
jl
jno
sbb
mov
orb
or
push
push
cmpsl
jae
data16
in
sub
push
leave
stos
test
aad
pop
mov
fisubrl
andb
pop
and
pop
dec
jb
cmc
fistpll
xor
stos
sub
xchg
int
ja
or
pop
sub
popa
insb
mov
popf
mov
or
into
es
popf
mov
outsl
stos
jp
inc
sbb
enter
rcrl
mov
pop
pop
adc
nop
pop
movsl
jbe
sub
dec
pushf
rcrb
cli
leave
mov
add
adc
rcrl
xchg
shll
add
subl
call
jle
push
jecxz
mov
inc
push
xchg
or
pusha
jno
cmp
dec
fnsave
adcl
fisttps
or
hlt
mov
xorb
mov
pop
pusha
lcall
or
xchg
xor
push
bswap
and
xchg
or
hlt
lret
xchg
push
adc
add
inc
jl
dec
das
cmp
push
sub
or
stos
xchg
fs
loopne
xchg
fildll
sub
dec
xor
fsubl
in
aad
sbb
mov
insb
sbb
mov
in
nop
jnp
mov
inc
jno
and
sub
out
scas
jbe
xor
ja
pop
and
dec
cmp
enter
js
or
punpcklbw
insl
pop
cmp
jle
fidivs
cmp
add
push
cmp
pop
mov
jmp
dec
cmpsl
lret
add
and
xlat
scas
test
pop
add
movsl
gs
je
push
ljmp
aas
mov
sbbb
ljmp
lods
pop
addr16
dec
push
jo
loope
adc
pop
inc
sbb
pop
cwtl
pop
in
aaa
pop
int3
mov
sub
push
shlb
ds
scas
je
xchg
fildl
jp
fldcw
cmp
add
inc
mov
xor
push
add
insl
inc
int
aad
cmp
mov
cld
es
imul
xor
sub
cmp
das
sarl
outsl
xchg
mov
icebp
test
cmp
inc
test
into
gs
popf
scas
push
pop
xlat
sbb
xchg
insb
out
dec
outsl
lods
pusha
arpl
adc
xor
in
fstps
rorl
std
lock
popa
xchg
stos
lret
inc
orb
std
xor
out
scas
jmp
xchg
mov
sub
xchg
pop
mov
adc
mov
mov
adc
jmp
outsl
or
inc
jne
mov
jl
loope
mov
int
sbb
stos
cs
aad
or
or
jecxz
std
sub
mov
xlat
jno
inc
pop
movsb
sbb
hlt
mov
cmp
das
push
mov
jg
mov
push
xchg
ret
jecxz
test
mov
jo
mov
jmp
in
mov
add
lock
lret
sbb
mov
mov
das
arpl
jb
adc
ja
xchg
je
lret
sub
xchg
xor
push
into
push
popl
idivb
inc
pop
sbb
iret
mov
cmp
lcall
cmp
xchg
ret
xor
cmp
and
lret
inc
cwtl
imul
inc
mov
dec
inc
cmp
loope
rcrb
stos
sbb
scas
pop
lock
xlat
and
mov
mov
jle
out
dec
je
pop
test
cwtl
movsb
stos
pop
push
mov
outsl
cmp
mov
xchg
mov
sbb
mov
enter
imul
pop
jl
int
insl
stc
pop
xor
sti
pop
cmp
ss
jg
ss
sbb
dec
and
pusha
ret
outsl
dec
push
popaw
push
and
aam
pop
in
jo
pop
xchg
loopne
enter
adc
es
pop
clc
cmp
mov
cmp
add
mov
xlat
out
fsubrl
outsl
pop
ss
mov
std
adc
icebp
xchg
dec
adc
mov
lea
cmp
jb
scas
shlb
in
imul
loopne
data16
push
add
movsb
lods
nop
fwait
jle
stc
lods
dec
imul
movsl
jb
jae
fmuls
movsb
push
movsb
bound
sbb
or
clc
out
ret
test
leave
push
shl
sub
pop
mov
mov
add
ret
hlt
leave
clc
jo
jl
in
out
xchg
std
nop
pop
lret
int3
mov
fcomi
test
cmp
imul
xor
divl
inc
and
stos
jmp
scas
das
sub
in
and
xchg
ret
sbb
mov
nop
or
aas
roll
out
fs
dec
add
ret
pop
add
ret
xchg
enter
pop
imul
test
mov
std
in
aad
xor
mov
out
mov
test
and
mov
lods
sub
ss
ficoml
sub
hlt
fldenv
js
popf
iret
inc
clc
in
dec
jecxz
cmp
lahf
or
ljmp
dec
and
fstps
into
sub
aaa
out
sbb
arpl
test
jb
inc
dec
test
pop
mov
repnz
mov
jle
mov
cmc
adcl
mov
sub
push
iret
sub
mov
cmp
cmp
push
lds
sub
dec
mulb
out
test
pop
sub
ds
push
sbb
push
mov
mov
fbstp
and
int3
mov
xor
mov
inc
and
adc
push
inc
popf
pushf
and
or
sub
sbb
inc
sub
sbb
lds
xor
xchg
addr16
inc
test
movsb
dec
lret
das
xor
cltd
xorb
jno
or
dec
and
ds
jo
lods
mov
jb
aam
sbb
mov
jl
cli
outsb
and
mov
inc
push
aas
loop
jmp
fiadds
sub
ljmp
pop
mov
arpl
repz
fld
ljmp
sbb
push
jae
insb
sub
hlt
je
cmp
or
xor
add
popa
ret
dec
and
mov
insl
mov
mov
jmp
push
je
mov
pop
scas
xor
pop
add
rol
mov
insb
or
repz
das
aaa
push
push
xor
dec
mov
xor
xchg
mov
jl
or
mov
xchg
out
lret
sbb
mov
arpl
loop
ss
inc
mov
xor
mov
mov
pop
pop
push
fstp
shl
outsl
std
call
imul
push
in
les
js
cmp
push
adc
adc
test
ret
cmc
sbb
arpl
mov
mov
ja
dec
or
jno
mov
movsl
xor
and
push
idiv
pushl
pop
jne
mov
bound
cli
pop
sbb
xor
xor
dec
add
in
xorl
movsb
fwait
adc
jl
mov
imul
xchg
subl
adc
ret
aaa
dec
out
ja
lods
das
adcb
fmuls
fiaddl
push
pusha
jo
push
lods
or
pop
bound
mov
jno
out
scas
lret
dec
sbb
jae
icebp
inc
push
or
sub
js
addr16
mov
sub
push
pop
pop
push
es
xchg
clc
lock
jne
pop
and
sub
repnz
xor
ss
mov
and
jbe
mov
mov
pop
int
mov
fadd
jbe
push
add
addb
and
mov
cli
fsts
int3
lds
jne
cs
nop
xchg
cmp
and
or
push
add
push
push
cwtl
adc
xchg
sbb
negl
cmp
pop
inc
pushf
loopne
pop
outsl
lods
sub
cs
aaa
xor
out
ja
loope
lods
and
repz
frstor
jmp
scas
ja
daa
ja
sub
mov
in
jmp
adc
lock
sub
enter
inc
dec
mov
cmpsb
xchg
jae
popf
imul
test
mov
ret
inc
sbb
or
lods
lock
xchg
je
push
xlat
lods
lret
andb
dec
popa
or
mov
stos
or
jg
jae
mov
cmpsl
rep
stos
sbb
jnp
or
scas
test
inc
xchg
push
mov
xor
xor
jecxz
sbb
bound
pusha
push
sbb
sbb
and
cmpsl
xchg
repz
add
aas
fidivrl
jg
xchg
test
mov
fsubs
mov
push
push
cmpsb
imul
gs
cmp
adc
aad
inc
xor
nop
lea
cmpsb
test
xchg
out
clc
xchg
push
or
cwtl
adc
cmp
lods
sub
xchg
cli
sub
enter
repnz
xor
in
push
mov
and
cmp
mov
dec
push
js
jmp
mov
mov
mov
xchg
fdivs
shlb
xchg
iret
lcall
outsb
adc
scas
outsl
mov
and
daa
pop
xor
das
mov
jl
jecxz
push
aad
jl
mov
cmp
cld
repz
pop
into
int3
nop
and
lea
lahf
mov
pop
cld
popf
pop
cwtl
roll
mov
jo
enter
dec
aaa
sub
inc
scas
xchg
aas
push
pop
or
dec
sub
lock
dec
fists
scas
mov
sti
and
or
lods
pop
inc
es
gs
jbe
mov
jmp
in
xchg
dec
mov
scas
ret
push
fiadds
and
sti
xchg
jne
stc
iret
dec
addl
and
std
aas
cmp
cld
cltd
pop
repz
or
jb
out
loope
pop
pop
adc
ret
jne
sbbl
icebp
jne
add
out
test
xchg
pop
mov
add
push
sti
mov
push
insl
jg
enter
ljmp
out
cmpsb
hlt
mov
sbb
jno
popa
add
adc
sbb
jl
shrl
lock
push
loop
pop
add
ficompl
aam
sarl
es
je
pushf
ja
outsl
jle
pop
or
imul
ja
sbb
stc
decb
or
test
in
mov
add
adc
lret
xchg
xor
mov
mov
or
xor
movsb
xchg
inc
push
fnstenv
and
ljmp
mov
call
push
cltd
jo
mov
jecxz
xchg
les
adc
push
cwtl
jg
pop
data16
xchg
aaa
and
jmp
aas
imul
dec
xor
xchg
or
push
adcb
dec
inc
dec
daa
fsqrt
idivl
in
dec
and
scas
and
or
or
stos
repz
jp
ret
xor
dec
mov
aas
int
xchg
mov
push
ja
mov
mov
das
lcall
push
aam
fcmovu
out
xchg
in
loopne
push
sbbb
test
out
rcrl
jmp
mov
mov
dec
inc
xor
ficoml
mov
adc
cld
sbb
xor
push
add
sub
stos
xchg
sub
push
or
cmp
or
shll
dec
mov
es
xor
stos
add
pop
es
mov
jns
ja
outsb
cmpsb
std
adc
aaa
jecxz
lea
loopne
sub
jle
mov
inc
aad
pop
movl
cs
sbb
pop
adc
mov
push
bound
je
in
daa
sbb
lret
lahf
loopne
mov
std
ret
inc
adc
rorl
sbb
fdiv
pop
insb
jne
adc
lret
jns
dec
jecxz
push
push
sar
inc
and
dec
dec
jnp
cld
lcall
shr
mov
jge
icebp
xchg
lret
aam
hlt
mov
adcl
jbe
mov
jecxz
rcll
not
mov
lcall
mov
fdivr
ror
inc
pusha
lret
ret
lea
xor
or
jns
mov
dec
mov
sub
push
incb
aam
test
push
xchg
jno
inc
loopne
ja
and
sub
scas
jl
dec
push
mov
mov
pop
push
ret
cmpsl
lock
aaa
jg
outsb
cmp
or
cmp
fcoms
lret
jne
adc
jmp
or
jae
or
push
es
mov
xchg
scas
mov
inc
pop
mov
add
daa
popf
ss
or
enter
and
dec
ret
jg
scas
jg
push
push
xchg
test
in
es
xchg
stos
mov
aaa
aas
sti
sub
cmp
pop
sub
fadds
fs
mov
mov
xor
adc
push
jp
fwait
add
ja
dec
test
jbe
sub
xor
loop
cmp
nop
xchg
adc
loopne
cli
cmpsb
lock
pop
and
cltd
xchg
dec
gs
jge
sahf
les
jge
clc
and
sbb
test
pop
fs
mov
sub
out
out
les
loope
imul
lret
push
shlb
into
pop
addr16
push
inc
scas
andb
jb
jle
fisttpll
outsb
inc
jge
adc
mov
sub
fadds
or
icebp
jp
iret
and
add
arpl
push
xchg
mov
pop
pop
repnz
movsl
das
out
xor
add
jecxz
jle
cmp
xchg
sub
daa
sbb
push
xchg
aas
hlt
popf
jnp
mov
andw
or
push
lret
inc
sarb
cmp
out
fistps
and
leave
inc
movsl
pop
cs
jb
int
imul
fstps
movsb
mov
push
dec
outsl
adc
lods
sub
ret
ljmp
xlat
mov
mov
nop
sbb
dec
pop
lea
xchg
mov
xor
cmp
sbb
test
add
mov
fldt
mov
daa
ljmp
cld
and
mov
xchg
mov
inc
hlt
leave
js
insl
add
xchg
fmuls
pop
movsl
les
and
stc
repz
lods
xor
dec
mov
jae
push
mov
sub
imul
std
pop
pusha
lahf
sbb
and
dec
pop
pop
decb
sub
lret
int
inc
or
dec
rcl
mov
lcall
lods
shl
clc
scas
lds
or
xor
sub
nop
mov
dec
or
pop
sbb
les
cmc
shrb
dec
fwait
push
pop
add
cmp
subl
sbbb
push
cmp
subl
cld
push
jbe
adc
dec
sahf
mov
xchg
jne
push
addr16
les
adc
jb
push
mov
jb
sub
inc
and
pop
pop
std
mov
mov
jne
push
lds
mov
jg
hlt
jo
aam
cmp
inc
cmp
mov
jno
pop
jmp
jnp
push
jge
and
sbb
xchg
xor
xchg
sti
xor
sarb
jb
cld
test
fisubl
cmp
mov
inc
lods
jbe
ljmp
push
pusha
push
dec
int
mov
push
mov
enter
fidivs
cs
mov
icebp
pop
test
inc
lods
and
lret
or
loopne
sbb
mov
in
leave
cli
xor
inc
push
xchg
dec
andb
rcl
inc
dec
xchg
lock
dec
mov
push
cmp
pop
push
push
nop
mov
repnz
test
test
cmp
sarl
gs
adc
cld
cmp
add
mov
in
or
pop
das
in
jb
rcr
inc
mov
int3
stos
repnz
sub
inc
mov
rorl
sar
addl
lods
pop
jne,pn
popa
xchg
in
aaa
data16
leave
fs
notl
push
cmp
lods
pop
cmpl
out
add
cmpsb
test
popf
xor
sbb
dec
data16
cmp
or
clc
dec
out
push
cmp
pop
jge
arpl
dec
mov
cwtl
adc
xchg
inc
adc
testl
jge
fcoml
jecxz
outsb
rclb
inc
sub
xchg
shrl
sbb
fcomps
mov
xor
push
fwait
insb
lea
lahf
cmp
push
stos
cli
jnp
mov
cmpsl
xchg
out
sbb
and
push
clc
lret
ljmp
push
cld
fwait
outsl
outsb
xor
adc
lahf
add
dec
mov
ret
jno
sub
mov
popa
adc
mov
lods
or
mov
out
sub
or
imul
subl
out
lea
popf
pop
testb
push
pop
adc
sub
lret
out
add
gs
dec
or
imul
lahf
out
cmp
adc
add
cwtl
and
and
int
pusha
inc
adc
mov
mov
pop
out
xchg
add
daa
ror
jle
insl
lea
add
mov
arpl
mov
xor
jnp
sbb
scas
ds
pop
setg
iret
insb
cmpsb
adc
or
ds
into
mov
fs
leave
fs
jecxz
inc
mov
xor
clc
fiaddl
pop
xor
ja
jns
push
test
mov
adc
insl
ljmp
out
fidivl
iret
mov
lods
xchg
in
testl
inc
fstl
add
inc
cmc
push
negl
pop
mov
or
fildl
aaa
pop
sbb
xor
xchg
jmp
cmp
and
repnz
push
into
movsb
mov
sub
wbinvd
scas
mov
test
add
rolb
rclb
sbb
std
pop
fisttpll
jbe
mov
sub
std
imul
inc
and
call
sbb
into
cltd
push
add
lahf
sbb
mov
testl
pop
dec
enter
pushl
mov
adc
xchg
repnz
adc
shll
pop
cmp
mov
aam
push
pop
icebp
in
lock
cmp
outsb
lretw
outsb
imul
inc
adc
ss
test
repz
shlb
mov
ret
cli
daa
jno
subb
jg
test
in
lods
mov
sbb
xchg
mov
pushf
ret
lods
lahf
cs
lret
ljmp
shr
mov
cmp
orb
fcompl
out
bound
test
xchg
in
add
dec
lret
jo
testb
call
mov
aaa
arpl
jle
fdivrs
pop
jl
hlt
xor
xchg
imul
xor
lret
jbe
mov
int
push
cmp
dec
dec
dec
call
or
mov
mov
dec
dec
fldt
in
xor
jb
fldt
push
stos
sarb
aas
xchg
mov
lods
pop
aaa
aam
inc
out
xchg
adc
adc
fists
fimuls
mov
push
jnp
mov
popl
aad
cltd
dec
imul
insl
lahf
mov
sbb
mov
stos
sbb
dec
rcrb
lahf
imul
sub
xchg
cmp
xchg
or
jnp
out
inc
dec
push
sbb
push
data16
in
fs
imul
xor
push
inc
cmc
sbb
xor
neg
int
cwtl
mov
inc
shl
jbe
sahf
push
dec
cmpl
sbb
inc
adc
dec
divl
adc
xor
out
daa
mov
in
pushf
icebp
leave
xchg
insl
iret
cmpsb
cmp
sbb
inc
mov
lock
fs
adc
jnp
popf
push
clc
cli
xchg
adc
sbb
sbb
pop
shr
aad
lock
add
and
adc
jnp
adc
cwtl
adc
sub
or
mov
int
mov
cltd
inc
inc
or
lcall
insl
mov
sbb
int
and
dec
mov
outsl
inc
jmp
mov
bound
mov
testb
jp
dec
out
in
sub
xchg
hlt
in
bound
pop
mov
ja
testb
push
add
pop
xchg
stos
pop
test
and
inc
rcrl
mov
in
pop
mov
mov
pop
test
and
shll
and
mov
clc
and
ljmp
sub
inc
or
xchg
stc
iret
add
adc
mov
rolb
data16
ss
lcall
mov
dec
xchg
outsl
adcl
insl
cltd
les
loop
mov
ret
pop
decb
roll
mov
and
push
jnp
or
cmp
cmpsl
vmovd
shll
mov
icebp
cmp
in
cmc
mov
dec
adc
sarb
ja
mov
repz
xchg
pop
int
pushf
fdivs
cld
mov
pop
int
ljmp
inc
dec
test
push
sti
cmp
push
inc
and
aad
repnz
out
mov
test
sub
xor
fsubp
cmp
mov
inc
bound
ds
pop
imul
adc
es
nop
bound
pushf
ss
xchg
imul
aas
out
js
insl
enter
insl
adc
add
imul
push
out
iret
clc
rcl
push
decb
mov
cltd
push
xchg
xchg
fistpl
sbb
cli
add
out
pop
int
lret
hlt
add
cld
out
movsl
sub
loope
jp
mov
push
xor
fists
fisubrs
cmp
in
dec
in
int
test
daa
mov
xchg
fcoms
mov
add
data16
xchg
inc
dec
and
and
lcall
ret
adc
pusha
mov
and
jecxz
dec
cmp
or
dec
clc
lods
mov
dec
xchg
les
or
jecxz
into
mov
inc
popa
in
xchg
sbb
inc
test
js
inc
cmc
cmp
call
inc
arpl
push
lcall
or
push
push
aad
arpl
stos
aad
dec
sbb
inc
out
and
daa
in
mov
pop
rcrl
xchg
dec
jle
or
or
inc
daa
mov
xor
leave
pop
test
sahf
fsubl
sub
xchg
push
nop
jle
push
sar
ret
cmp
mov
es
add
sahf
je
ljmp
cmp
cs
push
add
xlat
fndisi(8087
push
fildll
adc
xchg
mov
pop
loopne
sti
shl
pusha
ds
push
push
jg
enter
dec
xchg
ret
jecxz
cmp
push
xor
cltd
push
pushf
jecxz
ffreep
test
loop
mov
ljmp
nop
in
int3
inc
icebp
mov
add
cmp
mov
mov
test
or
js
jb
xlat
push
stc
and
popf
and
cli
cmpsb
inc
dec
dec
stos
xlat
pop
sarl
cs
inc
sbb
inc
pushw
adc
jmp
mov
std
jmp
nop
cmp
subb
cmp
addr16
cmp
mov
pop
fldcw
mov
popf
mov
pop
lods
cltd
dec
popa
mov
add
pop
popf
icebp
xchg
inc
sti
dec
pop
lret
add
inc
push
cmp
sub
ret
push
outsl
mov
adc
mov
aaa
mov
sbb
enter
loop
test
xchg
jp
in
xor
enter
es
mov
pop
popa
jl
imulb
dec
out
jbe
inc
ret
aam
sub
scas
dec
jg
mov
data16
mov
xlat
scas
jnp
mov
add
xchg
in
sbb
or
mov
dec
and
xor
enter
aad
push
lcall
or
cmp
mov
js
sahf
pop
imul
lods
xor
mov
mov
sbb
mov
mov
cmpsl
cwtl
xor
neg
aas
xchg
repz
out
das
pop
inc
lods
adc
adc
sub
pop
pop
insb
sbb
mov
cmp
iret
cmp
lea
sahf
sbbl
or
ss
dec
dec
xor
fbstp
mov
negl
xor
pop
cmpsl
push
push
das
dec
dec
mov
adc
push
rorb
jno
cmp
push
dec
mov
repz
loope
repz
stos
dec
jns
add
add
push
adc
es
fwait
sbb
int
xor
fsubrl
lock
scas
pop
sub
add
clc
rorl
pusha
jbe
in
dec
cmp
mov
nop
incb
mov
outsl
adc
dec
jle
sarb
pop
pop
shll
lahf
inc
lea
inc
or
test
pop
js
out
inc
leave
pop
cmp
fnsave
aaa
lret
fwait
jecxz
ret
shl
pop
cli
mov
jmp
pop
in
in
dec
imul
decb
and
xchg
or
data16
dec
stos
push
jbe
test
inc
fcoms
loope
fbld
test
inc
addr16
push
pushf
mov
add
cmc
or
mov
rcll
sbb
outsb
push
das
and
outsb
or
loop
mov
inc
pushf
jmp
hlt
scas
stos
enter
idivl
jecxz
sbb
sahf
cld
out
out
push
repnz
jle
add
dec
mov
xchg
jae
xor
jecxz
mov
or
fdivs
scas
xchg
adc
dec
mov
xlat
loopne
push
inc
test
int3
ret
ljmp
cld
test
cmpsb
mov
icebp
aaa
dec
mov
sbb
and
mov
mov
lcall
adc
test
pusha
lock
cmp
enter
or
inc
ficoms
lret
xchg
in
mov
xchg
imul
daa
mov
mov
ds
and
sbbb
dec
xor
mov
scas
mov
fisubrs
fistps
cmc
jecxz
mov
xor
pop
cmp
ret
fstpl
ret
js
repnz
inc
jne
lds
jne
adc
pop
jne
xor
orb
into
out
pop
jl
rcrb
shrb
adc
or
cs
movsl
in
pushf
inc
and
mov
xor
ret
cmp
in
mov
mov
fcoms
mov
push
das
or
mov
push
hlt
dec
pushf
cld
mov
stc
jb
aas
leave
inc
inc
in
bound
les
inc
out
cmc
scas
inc
xchg
roll
sub
xchg
rcll
aad
jnp
mov
xchg
rcl
sbb
data16
in
ret
add
aam
nop
or
mov
or
jle
mov
shll
adc
fildl
xor
out
ljmp
add
pop
test
adc
adc
dec
enter
arpl
or
jae
adc
xchg
lods
adc
inc
scas
sub
lea
aad
push
mov
jg
adcb
sbb
pop
xchg
or
or
repnz
out
cli
sub
xchg
push
xchg
lret
mov
pusha
jnp
jbe
mov
push
xor
stos
cmp
jno
inc
mov
cmp
pop
xor
xchg
cwtl
add
out
std
push
popa
xchg
sbb
mov
lods
sub
inc
push
jg
movsl
mov
and
adc
mov
jg
mov
lods
xchg
andl
dec
xchg
nop
test
mov
push
addr16
pushf
adc
cmc
pop
sahf
adc
inc
test
cmpsl
xchg
push
js
ljmp
mov
and
and
imul
aad
rcr
cltd
addb
sub
push
xchg
xor
or
pop
ret
xchg
std
mov
test
rorl
push
hlt
xchg
aaa
sbb
jb
int
std
or
enter
sti
jle
inc
loope
pop
sti
jns
shlb
cltd
decl
jecxz
pop
xchg
jl
std
xor
inc
bound
cmp
clc
outsl
lods
out
iret
sub
xor
dec
jnp
rol
pop
insl
jecxz
cmpsl
pushf
dec
mov
loope
aam
aad
jae
xor
jnp
gs
adc
xor
ljmp
adc
pop
mov
cld
out
pop
stos
outsb
nop
pop
mov
pop
insb
jge
pop
pushf
std
fistps
mov
sbb
mov
pop
ja
push
mov
out
dec
arpl
cltd
mov
rcll
fistps
xchg
and
andb
insl
incb
ja
mov
cltd
faddl
pushf
and
loope
pop
hlt
and
fsubl
cwtl
add
xchg
insl
int
pop
dec
mov
mov
add
les
cmp
cmp
lods
jmp
cmpsl
push
mov
in
add
frstor
jecxz
xchg
outsb
adc
movsl
insb
push
in
dec
pop
jmp
insl
daa
testl
mov
dec
cmp
jne
push
mov
xchg
lcall
loopew
sbb
movsl
adc
adc
pop
sub
lret
bound
sbbb
sub
inc
data16
sbbl
xor
inc
sub
xor
call
stos
sti
arpl
enter
jecxz
sub
fwait
test
jp
push
sbb
inc
add
nop
xchg
imulb
test
dec
add
sbb
xor
pop
cmp
icebp
fstpt
stos
orb
sub
enter
ffree
dec
pop
cmp
movsb
push
push
rcll
xchg
out
sub
adc
mov
mov
shll
inc
dec
mov
jbe
and
outsb
imul
mov
cmp
xor
jl
sub
jl
aaa
push
nop
es
inc
stos
jmp
jge
hlt
stos
or
add
negl
out
and
adc
les
xlat
or
pop
lret
pop
sbb
lods
push
xchg
into
in
adc
les
les
lret
adc
sbb
mov
test
adc
dec
shlb
ljmp
cmp
rorb
mov
arpl
adc
shll
les
roll
ja
call
andl
add
jae
jg
xor
sbb
adc
fisttpl
cmc
dec
or
sub
fdivl
xchg
lods
mov
push
andl
xchg
xor
int
sbb
test
ja
loop
loopne
sbb
out
inc
mov
jl
clc
pop
jmp
pop
jb
pushf
sub
jb
push
aaa
or
or
aaa
xor
test
and
xlat
outsl
fcompl
js
mov
loopne
mov
cld
jmp
push
nop
adc
and
xlat
jno
ljmp
or
sbb
mov
mov
sub
cmp
mov
jmp
inc
popf
les
xchg
mov
mov
lcall
xchg
and
add
in
jmp
sub
jo
fwait
mov
aas
mov
jp
lahf
mov
int3
lock
jns
dec
sub
sbb
inc
mov
insb
or
pop
jbe
dec
sbb
out
fcmovb
add
aas
cmp
and
pusha
int
pop
dec
test
and
xorl
dec
dec
out
cmpsl
fisubrl
test
jne
pop
dec
out
out
mov
push
mov
lret
push
imul
add
xchg
xchg
xchg
sub
push
push
and
es
ljmp
rcll
add
sub
sub
popa
mov
shr
cmp
cmc
xchg
mov
bound
hlt
fisttpll
ret
shrb
lret
sbb
jb
sub
xchg
sub
and
fwait
jmp
sbb
add
mov
mov
pop
push
sbb
ficompl
stos
inc
xor
lret
add
movsl
gs
sarb
adc
stos
fdivrs
pushf
cmpsl
sti
push
data16
jecxz
xchg
stc
add
sahf
std
push
imul
mov
repnz
bound
int
in
pop
or
cltd
fwait
mov
sub
imull
fidivs
loop
stc
cmp
test
push
mov
jecxz
xor
mov
cs
pushf
lret
mov
out
xor
in
ss
ljmp
jnp
rclb
loop
pop
lock
xor
pop
adc
in
xchg
jg
mov
shlb
and
cmpsl
push
inc
xor
dec
mov
sbb
fwait
jno
daa
push
test
pushf
pop
xor
jne
lcall
lret
nop
lret
push
and
jmp
sub
lods
push
jg
jmp
loope
inc
lcall
dec
or
shll
shll
scas
mov
shlb
mov
pop
cwtl
fcmovnbe
mov
mov
and
cmp
inc
xor
mov
enter
movsb
mov
lock
mov
aaa
out
mov
add
mov
and
adc
mov
clc
outsb
shlb
je
insb
lahf
icebp
push
push
enter
test
cltd
inc
xor
pop
dec
or
mov
pop
lds
outsb
mov
xchg
cmp
inc
mov
aad
ret
jno
imul
mov
js
xor
dec
mov
fwait
rcl
pop
imul
sub
pop
add
testl
push
das
call
pop
inc
xchg
mov
movsl
cmp
in
mov
xor
mov
pop
pop
js
jecxz
mov
pop
clc
lcall
call
dec
std
mov
cmc
adc
data16
sarl
pushf
fwait
addr16
or
lods
mov
ljmp
rclb
add
or
inc
cmp
leave
jle
adc
enter
lods
mov
sahf
or
loope
leave
stos
and
and
dec
xor
dec
mov
pop
out
xchg
pop
ret
or
dec
pop
and
add
scas
push
testb
mov
ss
sub
sub
cmp
jp
mov
fidivl
push
cmp
arpl
jmp
imul
ss
sbb
lods
add
hlt
dec
jge
mov
js
mov
mov
push
push
inc
fucomip
leave
insb
lock
aad
pop
inc
insb
icebp
jb
daa
in
mov
lret
xchg
out
dec
xchg
push
add
mov
dec
mov
ficoml
fcoml
push
cmp
jae,pn
jmp
jp
xchg
push
fwait
test
dec
or
jne
xchg
and
orb
mov
fildl
sbbl
imul
mov
int3
ret
mov
test
or
pop
loop
dec
jb
lock
rorb
aad
into
or
test
pusha
stc
call
lret
push
push
mov
loopne
and
inc
sbb
xchg
xchg
inc
popa
xchg
dec
push
loope
adc
push
lods
jno
les
cwtl
bnd
fs
or
ret
or
cli
mov
mov
push
push
testb
inc
pop
or
push
sub
shll
in
clc
sbb
mov
sbb
sbb
ret
pop
mov
fst
mov
not
out
xchg
cmc
es
test
test
pop
addl
loope
xchg
push
shlb
xor
lea
or
push
push
dec
mov
shlb
idiv
pop
cmp
js
lret
adcb
call
or
out
xchg
sahf
xchg
push
mov
mov
dec
fsubr
test
mov
add
and
subb
or
xchg
mov
mov
imul
mov
std
mov
jl
push
clc
jnp
cmp
sub
mov
lret
daa
sub
jnp
cs
push
adcb
mov
call
or
inc
stc
mov
xchg
jmp
lods
xchg
cmc
pop
pop
jns
xchg
rcrl
sub
push
je
frstor
push
push
mov
inc
repnz
ret
lret
jmp
sbbb
cwtl
sbb
inc
test
dec
mov
jae
js
iret
pop
sub
inc
shll
mov
xor
mov
dec
adc
insl
inc
pushf
inc
pop
mov
dec
adc
sub
es
setno
iret
mov
int3
das
or
pusha
xchg
mov
pop
daa
pop
xchg
push
sarl
or
cmp
push
pushf
sub
push
stos
xor
outsl
test
cmp
inc
and
mov
pop
add
lods
aam
shlb
aaa
dec
das
and
xchg
jp
cltd
lret
jmp
in
insb
gs
push
xor
iret
fs
frstor
es
movsb
push
xor
push
mov
bswap
sahf
adc
test
xchg
cmp
ljmp
or
or
loope
pop
xor
pusha
sub
sub
adc
pop
xor
bound
into
sbb
shl
adc
inc
imul
xchg
call
inc
popl
inc
ss
aad
xor
push
mov
xchg
mov
inc
shl
fidivl
push
nop
cli
ljmp
cmp
gs
sbb
shlb
mov
mov
cltd
sbbb
pop
outsb
int3
out
jmp
sub
mov
and
mov
test
loop
std
sti
cld
lock
aad
sti
pushf
pop
scas
cmp
mov
cmpl
adc
mov
lret
pmaxsw
outsb
enter
pop
and
lret
fistps
insl
mov
xchg
sub
mov
dec
xchg
mov
aad
movaps
pushf
pop
movsl
jbe
push
jl
shrb
lea
rcl
loopne
paddd
or
dec
adc
pop
and
jo
jecxz
dec
cs
setae
lret
andl
add
daa
addl
iret
mov
sub
inc
imul
add
mov
lret
jg
mov
push
mov
mov
aad
lods
daa
filds
jmp
sub
shrb
pop
and
mov
and
push
aas
in
mov
push
fstpl
ret
push
jno
and
rcrl
les
push
clc
adc
lods
cmp
loopne
push
sub
push
pop
std
jecxz
mov
push
sub
jo
mov
leave
mov
pop
clc
cmpsl
xchg
dec
addr16
jnp
mov
mov
cmp
je
push
into
push
adc
loope
fsubrs
inc
xlat
ret
sahf
mov
sub
stos
or
xchg
into
pop
movsb
adc
sbb
inc
movsl
sahf
popa
sqrtps
pusha
sbb
or
cmpsl
fs
mov
sub
and
addl
or
jl
outsb
cmp
or
add
and
pop
js
les
in
repnz
xlat
nopl
out
push
pop
jmp
jmp
lcall
lds
lcall
enter
push
xor
pop
rolb
pop
dec
and
jno
lahf
aaa
or
sar
pop
lahf
in
ds
xchg
pop
cmp
int
cmpsl
mov
jns
pop
add
push
movsb
test
mov
cmp
enter
dec
mov
sub
adc
xor
enter
roll
fisubs
adc
jle
dec
push
pushf
dec
icebp
push
out
or
xchg
mov
mov
xor
std
gs
cmpsl
in
xchg
and
jnp
adc
sub
aad
dec
jb
loopne
or
cmp
enter
test
insb
lret
data16
frstor
push
xchg
xor
fidivrl
es
cmp
fdivl
out
in
xchg
push
push
lods
push
test
shl
mov
les
xor
push
fisubl
mov
scas
pop
shrb
push
sbb
jb
insb
xchg
std
xchg
out
scas
sahf
adc
bound
lret
cld
subb
loopne
jb,pn
les
mov
out
test
sub
faddl
sti
std
jmp
daa
xor
imul
push
out
in
arpl
leave
out
movsl
aad
fs
imul
rcl
ds
outsl
dec
lea
fwait
jl
out
and
or
add
adc
stos
cmp
clc
push
mov
cmp
repnz
mov
lahf
aad
sbb
pop
ret
dec
sub
xor
addr16
mov
mov
xchg
xchg
and
pop
push
dec
lahf
cmp
add
popa
or
sar
inc
aaa
sub
nop
aas
adc
jle
rcl
jg
ret
push
pop
imul
shrb
xor
imul
loop
adc
lds
inc
pop
scas
leave
push
push
push
mov
movhps
pop
ja
push
inc
adc
mov
fistps
imul
cmp
outsb
scas
pusha
rcr
pop
ss
mov
dec
sarl
nop
jnp
cli
rcrb
jp
fsubrl
xchg
movl
sbb
xlat
bound
lret
add
jmp
jns
add
icebp
xchg
hlt
adc
cmc
scas
ljmp
and
sahf
inc
pop
std
jne
sbb
popa
test
mov
jge
sub
mov
pop
cmp
int3
xorl
fisubrl
inc
adc
pop
xchg
or
inc
mov
fidivl
sub
or
popf
jo
cmp
sbb
lods
popf
std
enter
sbb
adc
popa
push
enter
cwtl
cmp
cmpsb
out
push
jae
adc
cmp
icebp
adc
mov
push
test
fcoml
xor
or
xor
sub
mov
lahf
inc
ret
or
pop
cwtl
popf
enter
pop
fmulp
frstor
cltd
jne
outsl
dec
les
hlt
adc
call
push
mov
jno
fucom
mov
or
cmpsb
insb
push
ja
jle
sbb
jbe
push
ss
xchg
pop
sub
xchg
imul
mov
aad
mov
cmpsb
outsb
mov
dec
loop
mov
add
test
xchg
in
or
shrl
sbb
or
out
cmpsb
hlt
clc
jmp
dec
xorb
popa
fists
cmp
dec
and
inc
mov
push
dec
fstps
xchg
scas
rcrb
xor
pop
insl
inc
cmp
cli
loopne
adc
rcrb
stos
jl
lahf
xchg
neg
scas
lret
sbb
pop
insl
inc
enter
in
imul
push
test
xchg
xor
data16
cmova
mov
mov
xchg
imul
movsl
adc
pushf
xchg
repnz
push
cs
outsl
les
test
mov
scas
bound
sub
or
xor
adc
mov
mov
sbb
mov
xor
sbb
push
dec
out
fldt
jmp
fistl
or
push
xlat
movsb
aam
lea
aas
dec
jmp
nop
fdivl
cltd
inc
fsts
and
xchg
push
lahf
inc
mov
pop
add
pop
cs
aam
test
dec
in
and
xor
in
add
daa
fldenv
faddp
outsl
mov
xchg
pushf
sub
adc
test
cli
push
lods
pop
in
add
cmp
adc
sbb
pop
pop
addr16
mov
sbb
sbb
and
ljmp
mov
or
sub
pushf
in
hlt
push
push
out
xchg
enter
out
test
cmc
ja
sub
mov
pop
jnp
xchg
decl
imulb
pop
and
jecxz
icebp
repnz
cwtl
sub
sti
fcoml
mov
pusha
lock
out
ret
sub
adc
test
stos
in
add
cmp
adc
stos
mov
and
enter
jge
movsb
lret
ret
pop
stos
dec
stc
mov
ficomps
sbb
into
lahf
mov
aam
ret
dec
pop
push
mov
stc
adc
cli
clc
mov
add
push
sbb
sbb
loope
fistl
in
pushf
xchg
jbe
enter
mov
aaa
cli
xchg
lahf
push
push
in
mov
jnp
pop
mov
pop
iret
mov
add
pop
jb
pop
sbb
enter
fistpl
mov
ficoms
sar
ret
cld
push
repz
gs
sbb
mov
cli
repnz
cwtl
or
stc
sbb
aas
and
inc
fistl
mov
mov
xchg
subb
xchg
cmp
bound
jns
dec
sbb
mov
std
movsb
jb
lock
ficoms
ja
sti
ljmp
mov
adc
xor
xchg
sti
stc
mov
inc
aam
pop
je
leave
popa
outsb
das
stos
js
stos
nop
fildl
mov
lahf
mov
push
cmovns
inc
sub
sarb
in
and
iret
xchg
mov
mov
xchg
icebp
loopne
pushf
push
aas
into
or
ds
hlt
and
add
xchg
scas
inc
fstpt
jo
sub
fisttpl
cld
xor
sub
push
in
sub
dec
push
ret
sub
sub
push
xor
and
sbbl
jns
bound
dec
mov
jg
movhps
dec
push
sub
mov
cmp
cmp
ss
sbb
sbb
ds
jb
stc
fdiv
out
es
xor
test
shll
test
das
mov
jp
mulb
push
inc
fs
inc
jle
negb
push
add
mov
xchg
out
mov
stos
jl
push
inc
mov
les
adc
push
rorb
cmpsl
pushf
les
movsl
int3
jns
outsb
cmp
fsubrs
mov
and
out
lods
jbe
mov
sbb
push
cltd
popa
loope
or
cmp
fbstp
flds
jecxz
in
cmc
aad
sub
out
out
and
in
push
popa
xchg
clc
push
je
mov
mov
pushl
mov
cmc
rcll
arpl
pop
lock
lods
xchg
sbb
scas
popf
pop
adc
push
jnp
leave
sbb
and
ret
ret
mov
push
and
cmc
popf
sbb
jg
mov
inc
enter
inc
mov
add
jl
outsb
int
or
mov
repnz
and
cld
test
push
adc
and
jp
into
cmpl
sub
shlb
mov
adc
cmpsb
jge
shl
insl
fdivs
push
sbb
ror
and
pop
out
ret
cli
mov
pusha
cld
sbb
mov
std
and
lret
std
add
lods
adc
inc
mov
mov
insl
dec
cltd
mov
rcl
div
jp
inc
clc
cmp
sbb
pop
in
imul
test
add
inc
call
popa
ret
stc
movsb
popf
sub
dec
stc
push
jle
outsb
add
and
and
jge
pop
rcrb
jae
mov
dec
jmp
mov
ja
js
lds
mov
roll
mov
in
mov
push
out
lock
pop
out
xlat
xchg
inc
outsl
out
or
stos
pusha
aas
xchg
in
into
lods
and
out
imull
pop
bnd
push
sub
mov
push
mov
xchg
pop
fsubl
ss
in
mov
push
mov
mov
adc
xchg
or
imul
and
sbb
add
or
into
inc
ja
addr16
dec
push
rorb
jne
rclb
iret
xchg
pusha
leave
repnz
icebp
jae
int
xchg
fs
inc
insb
cld
pop
mov
cmp
outsb
pop
sub
push
xchg
outsl
add
inc
mov
and
add
pop
mov
popa
and
imul
lods
and
pusha
inc
mov
mov
push
fwait
out
bound
rorl
mov
call
jmp
fadds
mov
rcl
sub
xchg
out
loope
scas
sarb
inc
xchg
xchg
pusha
jo
xor
mov
and
js
xchg
or
loope
lea
popa
jne
test
pop
dec
std
stos
sbb
stc
fs
add
cli
adcb
outsl
cmp
fsubr
testb
stos
mov
push
push
in
rorl
out
sti
jle
add
shr
jbe
mov
fistpll
sub
xor
and
mov
out
xchg
sbbl
rcrb
push
pop
sub
pop
subb
adc
ljmp
sbb
push
cmp
jl
adc
das
add
cmp
fldcw
dec
testl
inc
xor
xchg
or
inc
fbld
cli
sbb
lds
cmp
in
add
xor
inc
hlt
jno
jecxz
add
push
dec
in
mov
jecxz
dec
outsb
test
lahf
out
aad
dec
sub
jae
xchg
lcall
dec
and
fstl
cmp
fxch
jne
repnz
mov
dec
inc
mov
or
sarl
sbb
out
shrb
outsl
pop
daa
shl
and
sbb
gs
aad
jae
aas
or
adc
push
mov
mov
push
stos
cmp
scas
mov
dec
stc
fisubrl
mov
out
cmp
mov
cli
fstps
inc
enter
roll
sbb
adc
inc
push
ds
mov
and
leave
sbbb
pop
cmp
pop
push
jnp
ds
mov
popa
mov
cmp
sbb
adc
mov
mov
scas
clc
lahf
jnp
add
and
iret
in
rol
or
sub
or
out
xchg
das
cmpsb
dec
pop
lret
repnz
lods
outsb
div
sbb
imul
ret
int3
sub
jl
inc
ljmp
pop
cmp
inc
cs
xchg
or
sahf
test
mov
shr
repnz
dec
mov
sbb
fs
dec
ds
loopne
mov
pop
ljmp
pop
stos
stos
add
dec
jecxz
jbe
inc
js
pop
push
xabort
xchg
pop
mov
lret
cmp
sub
jmp
add
in
inc
xor
mov
leave
test
or
lret
test
push
pop
mov
scas
sub
cmp
cs
pop
sub
icebp
fucomp
push
dec
int
hlt
mov
inc
lea
or
and
jbe
loop
ljmp
or
jns
in
fwait
hlt
jp
sti
add
jg
mov
jo
lret
mov
out
cmp
inc
dec
shll
or
in
mov
nop
shlb
sbb
mov
pop
sub
push
hlt
push
and
mov
pop
mov
pop
mov
lock
jo
add
test
jo,pn
dec
push
ja
xchg
sbb
cmp
psrad
cmp
jo
xlat
test
adc
sbb
adc
mov
sub
outsl
stos
les
psrad
ret
mov
pop
dec
cmpsl
adc
pusha
mov
out
roll
fdivrp
call
movsl
rclb
int3
test
sbb
dec
pop
rcr
xor
jmp
and
or
leave
dec
repz
sbb
dec
xor
mov
xor
js
cmp
mov
out
jns
and
and
mov
ljmp
rol
mov
sahf
out
inc
das
push
inc
jno
notb
scas
and
rcr
pop
cltd
mov
push
pop
daa
push
and
sub
xchg
sub
repnz
jg
mov
mov
xlat
daa
xchg
push
int3
pop
xchg
mov
mov
jno
lds
fdivrs
dec
sub
inc
inc
push
jns
xchg
jl
test
sbb
stos
push
xor
pusha
inc
fsubrp
addl
xchg
pop
in
fwait
iret
aad
mov
movsl
mov
not
movsb
subb
icebp
iret
mov
sti
dec
adc
cmp
mov
out
dec
sbb
jns
inc
mov
jb
dec
test
pushf
ss
stos
jmp
bound
addr16
jne
xchg
pop
call
or
outsl
ja
sbb
fwait
icebp
xchg
nop
ret
in
sbb
inc
lods
xchg
test
ja
mov
aam
mov
lcall
out
mov
dec
xchg
pusha
sbb
adc
aam
addps
ret
aad
popf
push
int3
jl
cmp
push
out
test
dec
sbb
or
dec
sbb
cmp
cwtl
sbb
mov
jae
mov
sub
push
sahf
dec
adc
popf
clc
call
sub
inc
inc
and
gs
add
outsb
clc
and
jne
or
aaa
cmp
lds
inc
lods
mov
xchg
les
lahf
push
imul
xor
daa
dec
push
std
dec
and
mov
mov
xor
arpl
jae
stos
cmp
mov
das
mov
pop
inc
scas
or
and
gs
pop
jl
loope
adc
xor
jbe
xor
dec
dec
pop
mov
addr16
mov
ja
mov
ljmp
mov
jp
addr16
mov
inc
sub
jne
add
ficoml
data16
pop
hlt
xor
mov
insb
cmp
lock
daa
sub
fsubs
cmp
jbe
jl
mov
inc
jp
outsl
push
dec
jle
lret
push
test
testb
ljmp
sub
fyl2x
pop
push
mov
nop
sbb
sbb
shrl
popa
mov
jno
icebp
imulb
jb
mov
lds
adc
inc
nop
int
pop
lds
scas
lcall
mov
add
inc
pop
sub
xchg
add
pop
iret
fdivp
mov
je
cmpsb
xchg
sahf
and
leave
popa
inc
outsl
push
pushf
add
dec
sbb
push
mov
pop
inc
xlat
xor
xchg
dec
movsl
fsubl
shlb
pop
xchg
mov
rorl
inc
cmpsl
in
ljmp
pop
pop
jbe
inc
push
hlt
mov
stos
inc
push
mov
test
addr16
into
inc
js
test
adc
popf
mov
xchg
add
pop
mov
mov
sti
or
in
fucomp
inc
mov
mov
mov
mov
in
and
mov
sbb
jmp
cmp
mov
and
inc
pushf
jmp
jnp
inc
leave
sbb
pop
aas
ret
fdivrs
lret
dec
outsl
pop
adc
push
fwait
xchg
lock
scas
lret
pop
add
sbb
mov
inc
push
lods
dec
sub
mov
mov
or
nop
fwait
inc
mov
push
aas
dec
push
stos
or
pop
sub
jnp
sub
mov
pusha
movsb
aaa
sbb
enter
testl
add
sub
pop
pop
dec
cli
xchg
add
mov
or
dec
test
addr16
repz
mov
movsb
sbb
ret
aad
incb
add
sub
jl
ret
xchg
aaa
insb
scas
ja
in
and
jnp
add
add
mov
xchg
mov
sub
out
iret
inc
adc
mov
cli
jbe
mov
in
mov
pusha
cwtl
cld
mov
push
ss
adc
cmpsb
sub
mov
push
and
sbb
or
mov
test
mov
lea
and
loopne
mov
stc
je
cmp
mov
lods
jns
jo
sub
and
pop
pop
lahf
outsl
push
mov
insb
sbb
call
and
jmp
jae
sbb
fwait
das
dec
mov
cmp
jge
mov
lcallw
pop
xor
ljmp
dec
sub
call
jno
mov
jbe
sbbl
sbb
dec
fbld
mov
insl
loop
jns
ficompl
lods
stc
mov
jo
pop
insb
dec
rcrl
hlt
orb
aad
fsubrp
sbbl
mov
jg
daa
mov
push
mov
xor
xor
mov
mov
bzhi
int3
popf
loopne
in
mov
sahf
push
sub
mov
js
sbb
cmp
fldl2e
mov
out
push
pushf
popf
jg
jne
or
mov
mov
cmpsl
icebp
rcrb
adc
pop
jmp
cmpsb
mov
fcmovnbe
subb
inc
jae
rcrl
loope
xchg
sub
sub
iret
or
xchg
xchg
jg
xchg
les
test
sbb
jo
cmp
fwait
divb
sarb
daa
push
inc
pop
fcomps
rcrl
aad
mov
insl
sub
mov
int3
out
pop
push
outsl
jns
dec
lods
sub
and
mov
mov
xor
fildll
push
push
cli
mov
leave
ret
jge
lret
and
int
sbb
shr
mov
jecxz
nop
pop
aam
pop
pop
add
iret
leave
je
sub
cmp
jo
test
mov
in
sbb
sbb
test
pop
movsb
cltd
mov
push
mov
repz
add
nop
movsb
clc
dec
cld
notb
imul
je
iret
add
xchg
into
das
xor
lcall
xchg
inc
and
lcall
repnz
fiaddl
ss
arpl
xchg
jge
insl
popa
aad
sbb
shl
aad
mov
pop
or
dec
ds
mov
pop
pop
push
dec
push
dec
imul
or
jne
lahf
sahf
sub
lea
add
frstpm(287
insb
cmp
test
push
jge
ret
cli
fisubs
loope
push
or
inc
xlat
mov
adc
pop
les
mov
push
test
ds
andl
push
mov
insl
inc
push
push
cld
inc
mov
stos
xchg
test
divb
addr16
or
daa
mov
stos
orl
xor
jnp
clc
cmpsb
jae
or
hlt
mov
ret
dec
in
add
push
aas
sub
enter
pop
ss
mov
shrb
gs
pop
lret
xchg
in
mov
adc
fsts
adc
imul
xchg
test
das
out
or
mov
or
insl
mov
cld
pop
adc
push
pop
pushf
aad
aaa
out
cwtl
add
inc
mov
mov
roll
cmpsl
pop
lock
rorl
and
mov
adc
xor
sub
push
out
inc
xchg
jnp
cmp
imul
lea
push
insl
rorl
push
mov
sub
jle
sbbl
test
push
add
and
sbb
sbb
clc
cmp
in
lahf
jbe
bound
pop
popf
aas
repnz
cltd
inc
inc
fs
xchg
sbb
in
dec
cmp
aam
ja
jmp
lcall
lret
xchg
out
mov
idiv
rol
leave
pop
pop
movsl
loope
jle
pop
pop
xchg
sub
ja
inc
push
lock
addl
sub
push
je
xor
jmp
data16
push
xchg
pop
jno
xorb
sahf
leave
cmpsw
dec
sti
add
shl
lcall
or
push
xor
roll
inc
call
test
or
push
cli
mov
push
decb
sbb
jbe
sub
adc
sub
mov
mov
pop
stos
adc
xchg
stos
lods
rol
test
rclb
aaa
pop
push
adc
cmp
inc
xchg
stos
inc
aad
xor
popf
test
mov
xchg
test
xchg
mov
push
test
add
pusha
test
pop
rolb
dec
loope
notb
pop
xor
push
mov
push
xor
cmp
nop
cld
stos
bound
ret
lret
adc
fs
mov
pop
mov
dec
dec
orl
push
and
nop
fsubr
cld
and
imul
pop
icebp
arpl
xor
ss
movsb
ljmp
push
fbld
xchg
and
jge
loope
arpl
xlat
lea
mov
aam
lahf
movsl
sahf
shl
jmp
adc
nop
cmc
filds
ret
test
lods
jae
mov
jb
or
cmc
jg
cli
adc
shr
pushf
push
nop
negb
or
lods
ficoml
or
cmpsb
clc
subb
movhps
je
pop
lods
or
leave
punpckhdq
pop
fcomp
int
sahf
and
sub
rcl
subb
cwtl
sub
in
out
mov
pop
aam
icebp
adc
dec
fcomp
mov
mov
out
lret
jne
call
adc
aas
mov
loope
sbb
cld
addr16
lods
movsb
jne
hlt
push
inc
jne
mov
call
lock
repnz
add
mov
lea
sbb
xchg
inc
or
sbb
pusha
clc
jbe
push
sub
nopl
or
repz
xor
dec
mov
fldl
mov
push
int
and
repnz
cmc
sbb
xchg
bound
xchg
or
js
aad
adc
push
xchg
adc
je
mov
xor
cmp
fcoml
sbb
ja
xlat
pop
sbb
call
pop
lret
sub
stos
in
push
test
xchg
mov
scas
sarl
cmc
pushf
cmp
xor
cs
into
jle
aas
adc
dec
mov
push
enter
scas
das
mov
les
or
fistps
in
rclb
dec
push
cwtl
push
push
mov
lods
sbb
pop
mov
rcrb
clc
into
bnd
sub
movsb
les
test
sbb
pop
mov
or
pop
sub
inc
cmp
adc
scas
push
aad
fldenv
int
mov
inc
js
mov
dec
ds
or
rclb
and
call
jmp
mov
repnz
pop
push
adc
stos
mov
jb
mov
mov
bound
insl
xchg
and
leave
push
or
xchg
lret
jge
pop
mov
jnp
mov
lods
cmp
shlb
sub
fwait
mov
shlb
xchg
mov
xorl
inc
mov
cmp
arpl
pop
dec
pushf
lds
jb
mov
xchg
aad
iret
cli
outsb
xchg
push
bound
xor
lahf
nop
adc
out
addr16
xor
lret
ja
pusha
cmp
or
mov
cmp
lds
fimuls
mov
movsl
jg
das
test
dec
jae
icebp
sub
je
sbbw
stc
lea
mov
mov
mov
mov
jge
xchg
push
loopne
sbb
mov
leave
out
repnz
test
fildll
xchg
into
ret
loopne
std
xor
loope
outsb
adc
push
jno
loopnew
int
fnstenv
bound
xchg
dec
gs
pop
mov
pop
and
insl
out
je
push
sbb
sbb
adc
es
jno
mov
leave
fistps
ljmp
adc
mov
pop
pop
inc
popa
jmp
pop
xor
out
jbe
and
movsl
in
pop
jge
jp
mov
xor
lret
imul
jle
lret
inc
inc
xchg
xchg
cwtl
mov
cmp
xchg
lret
fimull
jl
mov
cmp
xchg
icebp
ljmp
ljmp
lret
push
and
pop
mov
push
shr
mov
inc
add
push
push
or
addr16
cmp
adc
dec
out
in
xor
xor
or
in
or
ror
repnz
repz
xchg
ret
cwtl
out
js
shll
pop
mov
je
mov
imul
out
loope
xchg
add
hlt
mov
loope
nop
stc
mov
and
loop
flds
rorl
data16
lahf
mov
add
sbb
ja
adc
add
pop
lret
aas
shrb
out
sahf
cs
pop
jecxz
jp
outsb
or
cs
std
push
gs
xchg
outsl
mov
mov
sub
add
sub
jo
js
cmpsl
cmp
or
out
cwtl
out
leave
cs
xlat
sbb
mov
push
push
mov
adc
xchg
std
push
add
or
pushf
scas
outsl
imul
cmc
ret
jge
arpl
add
inc
jne
mov
out
mov
xlat
sarb
dec
fwait
mov
call
and
mov
dec
notb
in
stos
data16
mov
and
pop
jmp
into
sahf
or
mov
mov
xor
pop
test
movsb
repnz
test
push
pop
icebp
xchg
lds
ja
add
push
sar
jnp
inc
mov
inc
and
mov
sub
mov
jge
imul
jp
xchg
outsb
das
data16
mov
mov
scas
sar
dec
sub
pop
push
enter
pusha
mov
insl
out
mov
int
stos
add
mov
mov
iret
mov
popa
pop
test
les
lods
dec
adc
pop
inc
lds
xlat
sbbb
push
lret
movl
xchg
lods
jmp
pop
icebp
ljmp
vsqrtps
or
or
es
int
jae
in
repz
xchg
hlt
and
test
push
mov
fldl
fld
sar
ret
fisubl
out
popa
xchg
pop
fdivl
aas
pop
push
mov
add
pop
out
loope
sbb
andl
jmp
mov
adc
jne
xor
mov
add
iret
add
cwtl
pop
mov
andl
pop
xchg
fimull
add
and
sbb
mov
bound
add
mov
in
insl
clc
cmp
pop
fidivrs
pop
int
lahf
lea
add
xor
and
push
mov
mov
mov
pop
outsl
xchg
movsl
std
inc
mov
mov
xchg
push
inc
loopne
cmp
push
mov
pop
je
mov
outsb
or
push
pushf
add
push
inc
pop
push
test
inc
pop
lcall
ret
aaa
std
sbb
mov
xchg
gs
aad
loopne
mov
je
mov
pushf
adc
shrl
xrelease
jmp
mov
fistpll
rcr
in
call
cld
or
dec
jo
in
mov
call
pop
add
push
dec
sub
bound
das
fcoms
into
add
outsl
mov
or
cs
mov
aas
mov
and
adc
xor
cli
loope
lea
adc
mov
adc
sahf
jb
and
dec
ret
lret
pop
add
xlat
mov
xlat
popf
pop
popa
mull
shr
outsb
fs
dec
cmpsl
sbb
out
and
stos
inc
mov
cli
mov
flds
cmp
inc
pop
iret
aad
bound
or
in
lock
xchg
mov
pop
or
arpl
sub
addr16
jmp
ss
mov
push
in
mov
push
mov
xor
adc
adc
xchg
xor
in
cmp
pushf
cmp
jne
clc
repz
xlat
lahf
add
iret
mov
adc
in
adcb
mov
xchg
add
test
inc
inc
push
in
cmpb
ja
mov
xchg
push
test
adc
scas
addb
movsb
cmp
pop
cmp
mov
jns
fmull
add
popf
bswap
outsb
xor
cmpsl
shr
jp
outsl
test
or
xchg
jp
icebp
mov
pop
imul
mov
dec
pop
js
notl
jle
std
or
jle
jno
pop
push
fucomp
or
ljmp
cmpsb
add
imul
add
nop
icebp
cli
mov
jns
mov
and
pop
lods
orl
fwait
xor
test
push
push
sub
insb
push
add
repz
adc
inc
lahf
stos
popf
lahf
aad
aam
mov
divb
fmuls
lret
pop
xor
xchg
pusha
fmul
mov
call
pop
xchg
mov
cmc
scas
xchg
shll
sti
sub
jmp
imul
ds
jns
into
xchg
int3
dec
notb
and
pop
out
fisttpl
insl
mov
stos
inc
in
test
pop
mov
fisubrs
nop
xchg
sbb
jae
sbb
mov
popa
or
out
xchg
cmp
xor
loopne
xchg
call
mov
xor
cwtl
jno
or
ss
aad
sub
cmp
addr16
cmc
cmp
sub
outsb
mov
xlat
shll
loop
test
cmpsl
mov
int
and
jnp
popa
dec
xchg
ss
inc
and
inc
and
or
add
dec
pop
add
icebp
out
or
fsubrl
cltd
aad
fiaddl
xor
repnz
mov
rcl
sbb
outsl
jle
cld
cmp
leave
jbe
mov
pushf
push
stos
push
cmp
rclb
fwait
mov
fcompl
cltd
cmp
mov
lds
inc
pop
mov
enter
xor
push
mov
cmp
incl
cmp
popf
shll
or
push
test
shl
andl
lret
bound
loopne
lcall
push
lret
pop
inc
xor
test
shl
xor
xor
ja
jne
in
sub
pop
outsb
mov
mov
pop
push
adc
outsl
mov
adc
and
mov
and
icebp
or
popa
mov
pop
inc
imul
pop
adc
jae
jecxz
jb
lods
daa
add
scas
sbb
mov
jge
or
push
adc
repz
test
sbb
test
pop
in
insl
shrb
mov
sbb
sub
pop
pop
xchg
leave
mov
aam
pop
lock
es
cs
repnz
xchg
cmpsl
icebp
xchg
xor
sti
sbb
flds
jae,pt
xor
pushf
leave
mov
push
mov
adc
cld
enter
stos
ret
pop
insl
cmp
cli
stc
pop
mov
cmp
andb
repz
mov
inc
jno
popf
scas
fwait
nop
jmp
xchg
sbb
push
or
lcall
mov
rcll
loopne
test
mov
add
dec
hlt
loopne
enter
mov
daa
iret
xchg
and
sbb
jp
imul
cmp
add
movsb
mov
add
in
rcrl
sub
lea
stos
dec
lds
adc
scas
add
mul
dec
adc
jmp
mov
outsb
sbb
push
lret
sahf
ljmp
je
cmp
or
cmp
adc
jmp
leave
mov
xchg
add
xchg
cs
lcall
xchg
lds
popf
mov
mov
inc
ss
adc
test
jns
sbb
pushf
dec
aam
in
dec
xor
out
xchg
ja
sbb
sbbb
cmp
popa
orb
int3
lock
push
repnz
cmpsb
cmc
mov
pop
bound
xor
sbb
fstpl
jo
or
cmp
or
dec
jmp
push
sbb
mov
rcll
ret
add
divb
and
mov
push
xchg
ss
dec
add
test
jp
dec
xchg
or
pop
add
pop
adc
jmp
insl
xchg
push
sbb
mov
in
icebp
adc
std
fstpt
xchg
adc
popf
pushf
adc
iret
aas
xchg
mov
mov
scas
daa
iret
or
lret
insb
pop
mov
cmp
mov
ds
sbb
fsubl
jp
add
jb
lret
adc
int
inc
xor
and
sbb
xor
push
inc
enter
fildll
stos
das
loop
jge
xchg
in
pop
pop
lods
mov
mov
negl
test
insl
push
inc
pop
jp
addr16
dec
mov
xchg
icebp
xorps
test
mov
sbb
decb
out
dec
cmp
in
lods
mov
sahf
popf
pop
dec
jno
es
dec
jne
sbb
popa
mov
xchg
adc
rcr
adcb
fdivl
mov
in
xorb
mov
les
push
cmp
jae
dec
bnd
jmp
rorb
xchg
stc
jle
aas
insl
popa
int3
icebp
jnp
and
jmp
lock
mov
scas
pop
call
fildll
sbb
pop
cs
dec
mov
test
aam
mov
notl
cwtl
cmpl
fwait
loop
test
push
mov
mov
rcl
pop
cmp
cmp
daa
shlb
scas
nop
aam
xor
mov
inc
inc
cmp
jo
and
lods
outsb
repnz
ds
dec
loopne
sbbl
pop
cmp
ljmp
es
dec
daa
pop
test
inc
sub
push
subl
push
fisubrs
insb
jp
cmp
pop
js
xlat
mov
mov
xor
sti
fisubrs
mov
or
leave
mov
jbe
mov
adc
push
nop
imul
dec
push
push
sub
popf
std
jmp
lds
sahf
out
into
imul
sti
dec
sti
aas
shrl
jecxz
lods
sbb
out
test
adc
repnz
fistps
inc
jecxz
loop
pop
or
cmpsl
push
lods
jmp
int3
cltd
addb
ret
add
scas
cs
and
and
pusha
push
addl
sbb
mov
pop
mov
xorb
cmp
push
xchg
mov
sbb
aam
lock
xor
movsb
jbe
inc
lods
dec
leave
mov
shrb
leave
cmp
and
and
popf
xchg
call
pop
dec
mov
scas
sub
add
lahf
cmp
and
lods
loope
xchg
mov
and
dec
jmp
or
mov
sbb
movsb
fsubs
sbb
or
iret
lods
mov
pop
out
jg
adc
xor
dec
add
icebp
inc
aaa
mov
shrb
jp
jecxz
mov
popf
test
shl
sub
adc
aas
aas
or
pop
xor
addl
mov
lea
stos
or
out
mov
test
dec
inc
xor
out
or
jge
xchg
mov
dec
mov
push
adc
test
jg
sub
add
clc
scas
push
adc
in
pop
jnp
jle
lods
ja
pop
leave
je
pop
sub
cli
mov
xor
xlat
out
inc
popa
fcomp
adc
cltd
mov
enter
stos
cmp
es
out
cwtl
fcmove
insl
sti
adc
int
jno
arpl
cmp
or
sbb
in
add
dec
and
hlt
daa
and
testb
pusha
push
stos
imul
dec
repz
outsl
mov
or
jno
les
out
movsl
xor
sub
mov
into
stc
shr
out
adc
cld
aam
mov
sub
pop
imull
cmp
fcmovbe
xchg
jbe
and
pop
out
sti
or
jg
fldl
js
movsb
cmpsl
fs
cmp
sub
mov
dec
cwtl
mov
add
pop
mov
mull
and
test
push
xor
sub
xor
shrl
add
ja
out
xchg
clc
call
sbb
cmpsb
dec
aas
mov
xor
lcall
cli
lds
shrb
mov
inc
add
mov
pop
das
cmpsl
sahf
or
in
xor
and
arpl
mov
fmull
mov
imul
xor
jmp
or
imul
mov
in
fisubs
jo
push
lret
mov
sahf
std
mov
jp
or
pusha
ret
and
lret
cmp
divl
test
cmpsl
frstpm(287
jne
leave
push
inc
mov
and
frstor
or
sbb
dec
lods
mov
xchg
out
push
cmp
idivl
push
mov
testl
test
arpl
fldl
mov
mov
push
ds
lods
mov
mov
mov
inc
into
fnstcw
dec
adc
cmpsl
sbb
mov
cmp
add
mov
mov
icebp
stc
push
sbb
aaa
xor
mov
lea
xor
in
sbb
push
out
in
xor
sub
outsl
sub
cmp
xchg
ds
lods
fldcw
mov
shll
mov
movsb
xchg
fs
jmp
mov
mov
dec
fnsave
fwait
cmp
xchg
test
pop
testb
ljmp
add
and
adc
iret
sub
sub
out
int3
into
repnz
lcall
test
cmp
insb
cmpsl
jmp
cwtl
push
xor
and
sbb
fidivrl
cmp
dec
dec
mov
adc
dec
repnz
pop
mov
sub
leave
lahf
fimull
inc
or
fs
and
insb
mov
sbb
out
jge
sbb
sbb
xchg
xchg
mov
jmp
mull
mov
xor
in
cwtl
cltd
and
notl
addr16
int
jb
int
dec
dec
cli
into
aaa
inc
or
jo
xchg
mov
aad
adc
test
push
adc
fwait
in
sub
pop
xchg
mov
aaa
mov
into
jae
sub
jp
jmp
sbb
sub
and
aad
dec
bound
out
jg
pop
xor
fisttpll
test
pop
adc
sahf
push
addr16
mov
lods
add
pop
and
sub
stos
iret
stos
inc
addb
pusha
inc
jle
or
mov
aam
aaa
push
imul
push
xlat
inc
adc
xchg
pop
dec
cltd
shll
mov
fwait
jno
dec
inc
sti
cmpsb
pop
loop
call
mov
pop
mov
pop
mov
add
pop
test
mov
push
ret
mov
mull
xchg
push
push
popa
call
daa
push
movsb
mov
jmp
jg
ficoml
mov
jl
mov
ja
int
loopne
rorb
jae
hlt
cmp
sub
dec
mov
cmc
adc
xor
leave
mov
or
lcall
ja
cmpb
jnp
push
mov
mov
shll
pop
and
andps
jg
and
clc
movsl
or
pop
xchg
xor
sbb
push
fsubs
and
inc
mov
cmp
adc
xchg
mov
arpl
loopne
jae
pop
or
and
xchg
cmp
clc
ds
push
divl
jns
sbbl
sahf
pop
xor
stos
mov
cmp
xor
fdivrl
loopne
icebp
shlb
adc
dec
cmpsl
pop
int3
xor
gs
mov
loopne
sub
loopne
stc
dec
mov
rcll
mov
pop
cli
lret
test
jecxz
pushf
bound
xor
add
ljmp
mov
xor
add
subb
lds
push
and
mov
scas
mov
sub
xlat
mov
decl
loop
or
fucom
sub
mov
jb
pop
jecxz
xchg
roll
adc
lret
fwait
sub
std
clc
enter
pop
adc
xchg
lock
cmp
andb
cltd
xor
push
div
and
inc
or
mov
inc
xlat
cs
push
jge
jge
shrb
mov
lock
iret
les
add
repnz
jno
cmovb
lahf
mov
mov
adc
mov
call
adc
faddp
sbb
sub
cmp
fucom
pop
jb
add
addr16
lea
cltd
repz
mov
loopne
lea
scas
pushf
lods
push
inc
leave
cmp
cmp
pop
jnp
mov
xchg
pop
mul
mov
stos
add
mov
aad
xchg
adc
dec
sbb
mov
push
loopne
xchg
repz
ret
in
ds
pop
xor
dec
shll
xor
cltd
jo
bound
fsubr
loop
les
scas
cmp
mov
inc
jb
mov
xor
mov
loop
sbb
popf
xor
xchg
fwait
push
jo
lret
scas
repz
rcl
xchg
mov
enter
add
insl
stos
aad
xor
out
or
inc
cmp
enter
xlat
ss
and
pop
cltd
aad
adc
inc
lcall
mov
icebp
or
ss
mov
or
cmpsl
jge
xchg
fstl
xchg
mov
cmp
nop
add
loope
jl
adc
fucomi
jno
es
fsubs
mov
dec
fsubrs
cmp
adc
hlt
filds
test
repz
xchg
mov
jecxz
xor
mov
lret
mov
aam
movsl
jp
test
arpl
and
lcall
hlt
adc
cli
popa
popa
cmp
ja
das
adc
imul
xor
xor
mov
jge
mov
xor
dec
mov
je
insl
and
test
insb
cmp
xorb
add
sub
adc
sbbl
and
push
fists
imul
xchg
and
push
call
in
cmp
call
mov
pop
xor
jge
sbb
jl
enter
loopne
mov
mov
dec
dec
inc
push
sahf
into
shlb
cmpsl
sbb
test
and
push
or
les
shl
fbstp
rcr
push
push
fcomi
mov
cmpsb
idiv
pop
mov
lahf
fcompl
stc
jge
call
iret
outsb
push
and
nop
jne
pop
test
xor
push
or
es
pop
xchg
imul
and
and
jle
leave
mov
mov
inc
insb
or
push
ja
lock
push
xor
dec
sub
jnp
sbb
cmpsl
mov
xchg
add
xchg
xchg
push
dec
das
push
dec
fwait
jno
add
lock
sti
stos
xlat
aad
fsubl
and
mov
jnp
cmp
and
sbb
mov
pusha
xor
add
addr16
pop
and
pushl
stos
sti
insl
addr16
insl
mov
fwait
nop
add
add
cmp
adc
jp
pop
insb
ja
icebp
xor
ret
cmpsb
cld
push
mov
jmp
mov
loop
xchg
jge
dec
sbb
add
pcmpgtb
mov
mov
jno
and
or
sbb
xchg
ja
or
hlt
xchg
mov
mov
mov
pop
out
gs
xor
push
test
mov
leave
push
mov
outsl
or
and
cmp
sarb
adc
movsl
loope
jg
xor
cltd
jb
nop
outsb
jge
out
or
lret
push
jb
mov
aam
push
cmpsl
je
sub
push
mov
iret
in
push
pusha
sub
fisubs
out
push
fprem
outsb
ja
lret
push
or
jns
push
xor
into
and
jns
rcrb
push
ret
pop
cmp
xchg
mov
fsubl
jae
push
bnd
mov
xchg
test
loope
mov
loopne
sub
push
adc
popf
orb
jmp
dec
add
pop
or
push
bswap
ret
xor
shlb
hlt
push
lahf
cmp
jmp
push
insb
xchg
imul
push
out
or
aam
add
orl
lcall
int
sbb
es
xor
repnz
push
dec
cli
xor
maskmovq
push
pop
int3
pop
adc
cmp
sub
mov
cmp
adc
xchg
fst
and
fcoml
imul
hlt
jg,pn
iret
cmp
lret
mov
out
mov
lret
pop
sbb
sti
ret
ljmp
arpl
cltd
iret
xor
inc
mov
mov
test
mov
icebp
pushf
mov
or
mov
fsqrt
xor
loop
lock
cmpsb
sub
sub
mov
std
push
inc
jb
movd
and
roll
pushl
dec
pop
xor
cli
sbb
loope
jae
cmp
nop
jo
daa
push
insb
jne
adc
sbb
jbe
enter
clc
mov
popl
jne
or
pop
and
cwtl
mov
icebp
mov
lret
addl
push
sub
push
xlat
adc
sbb
movsl
or
sub
stc
lret
jmp
in
jge
xchg
mov
add
xor
fcoml
inc
mov
mov
pop
mov
xchg
movsl
jns
jle
stos
jae
dec
lahf
loopne
mov
lret
add
rorl
jl
pushf
fsubp
enter
mov
fstps
add
sub
sbb
adc
mov
mov
dec
es
sub
mov
std
int
fsubrs
dec
mov
dec
imul
sub
cmp
test
push
or
out
mov
and
add
mov
add
jg
aam
hlt
fldl
imull
aaa
jp
inc
mov
sbb
jnp
call
push
adc
push
movsl
fimuls
cld
dec
rcl
loopne
outsb
xor
inc
dec
negl
bound
pop
mov
mov
enter
inc
mov
cmpsl
mov
test
jmp
daa
jp
push
inc
cmpb
cwtl
adc
lods
mov
pop
les
adc
popw
imul
mov
xchg
pop
sbb
xchg
stos
inc
sti
out
out
mov
push
daa
sbb
fisttps
mov
xchg
pop
jg
xlat
sahf
and
ljmp
and
fcom
sbb
jl
push
add
arpl
mov
jecxz
or
mov
out
lahf
push
inc
aad
loop
sbb
test
mov
lds
xchg
sub
test
pop
xchg
dec
movsl
add
cmp
addb
test
outsb
or
inc
jecxz
pop
and
mov
sahf
mov
call
sbb
icebp
xor
sub
sub
push
inc
cltd
and
or
out
push
jo
aad
loopne
jbe
test
dec
xor
jl
cmp
addr16
xchg
push
adc
xlat
mov
sbb
in
inc
mov
movsb
add
sub
mov
push
jb
into
cmpl
hlt
jns
lret
inc
jecxz
mov
pusha
xchg
pop
push
jb
dec
pop
and
ficompl
cmp
in
lcall
in
lds
sti
cwtl
sbb
insl
call
bound
adc
mov
addr16
inc
outsl
mov
icebp
mov
xor
sub
adc
jp
shl
arpl
in
leave
jb
jle
inc
out
or
loope
in
mov
xor
lods
xchg
fs
lea
ret
sbb
std
sar
cmp
and
loopne
shlb
sbb
inc
mov
sbb
xor
push
adc
or
sbb
inc
inc
jecxz
psubq
mov
mov
mov
mov
out
push
out
add
cld
or
enter
xchg
xchg
push
adc
mov
cmp
inc
xchg
mov
gs
sbb
jge
add
xchg
clc
jp
cmp
sub
dec
lods
push
jge
ljmp
xchg
rorb
pusha
iret
or
xor
add
xor
or
xchg
lahf
mov
gs
out
dec
cmp
mov
dec
je
cmp
and
movl
hlt
in
ffreep
sub
adc
push
imulb
jae
jbe
fcomp
inc
pop
add
jbe
scas
push
push
inc
mov
stos
adcl
stos
mov
push
sbb
scas
test
fcomps
sbb
push
adc
push
pop
adc
jle
inc
adc
fmuls
inc
add
js
test
mov
inc
push
subb
xchg
pushf
out
ds
rorl
je
sbb
jo
jae
inc
insb
xor
sbb
iret
jmp
pop
stos
movsb
test
adc
mov
lahf
arpl
xor
aam
xor
scas
ss
in
fnsave
pop
fstpt
cmp
pushf
mov
pop
jb
inc
mov
lods
hlt
sbb
push
addr16
or
cmp
or
cmp
int
repnz
jmp
testb
test
xchg
sub
cwtl
out
out
mov
ja
pop
fsubr
pop
cmpsl
les
cmp
lcall
mov
inc
fdivrs
push
lods
idivl
jl
sub
jne
es
aad
xor
inc
xchg
pusha
pop
and
jp
jecxz
in
cmp
pusha
push
fldl
xor
xor
sti
int3
addr16
push
fnstcw
jmp
jno
into
sub
test
in
loope
addr16
sti
sbb
jns
sbb
jne
sub
out
loope
xorb
outsb
sub
imul
dec
fwait
adc
stos
inc
lock
nop
mov
push
jns
movsb
loopne
sbb
outsb
jmp
adc
movl
test
pop
push
lea
cmpsl
fs
cmp
sub
rorl
sub
cmp
mov
les
mov
cwtl
xchg
test
int
sar
addr16
mov
xchg
lret
push
xchg
push
mov
push
movsl
imul
repnz
push
xor
push
pop
mov
mov
and
cmp
cmp
mov
lea
ret
xchg
ja
add
pushl
inc
inc
or
mov
push
adc
or
add
jmp
stos
xlat
aaa
xor
pusha
les
inc
mov
fiadds
fisttpll
mov
aam
jnp
xor
pop
push
popf
nop
mov
mov
jg
dec
or
sub
jle
inc
mov
popa
test
and
mov
lahf
sti
xchg
cmp
ds
les
push
aaa
sti
push
pop
repz
dec
or
das
pop
sub
outsl
cmpsb
nop
and
daa
push
ljmp
mov
lock
ficoml
inc
movsl
lods
lods
inc
add
cmp
ja
lahf
add
lods
pop
repnz
or
rcrb
cmpsl
xchg
cli
mov
bound
pusha
aad
ret
pop
movsb
pop
test
cltd
push
fstps
jno
mov
and
xchg
movsb
lea
mov
fsubs
pop
push
mov
das
xlat
iret
fcompl
mov
cmp
pushf
mov
push
mov
pop
jbe
in
fcoms
inc
imull
outsl
and
fildl
pop
in
imul
hlt
out
xchg
or
sbb
dec
clc
pop
sub
shrl
test
nop
cmp
fs
adc
xchg
xor
ljmp
lods
test
lcall
sub
pop
fbld
mov
or
decb
into
subl
dec
adc
test
fiaddl
sub
or
mov
loop
rcr
out
add
jecxz
and
push
aas
movsb
add
movsb
push
mov
mov
add
daa
cmp
xchg
mov
ss
cmp
mov
outsb
xor
mov
mov
mov
jmp
insl
leave
or
pop
pop
mov
jp
aam
inc
repnz
cmpsb
or
stc
or
adc
aad
jmp
sbb
mov
push
mov
cmpsl
adc
sbb
mov
mov
jle
cmpsb
cmc
in
xor
adc
rorb
sbb
push
lods
dec
jmp
in
adc
pop
pop
addr16
out
popa
int3
or
mov
push
jbe
mov
push
loopne
cmc
out
icebp
inc
sub
xchg
test
sub
out
movsb
add
popa
push
pop
into
out
loope
fstl
daa
mov
loop
repz
iret
repz
jb
pusha
sbb
lret
jo
mov
int3
sar
daa
clc
fisttps
push
das
data16
ja
out
sub
jbe
mov
out
xlat
sub
xchg
pop
dec
push
and
or
sahf
ret
xchg
data16
or
add
lods
test
sbb
cmc
loope
cltd
push
jge
inc
dec
mov
out
es
push
adc
scas
lds
es
out
dec
jnp
or
fistps
cs
fsubs
mov
jecxz
lret
or
in
xor
leave
lar
int3
inc
jnp
cmp
jp
mov
mov
mull
cwtl
xlat
and
dec
sbb
push
jmp
pop
int3
push
jnp
clc
aam
fists
mov
inc
aam
jmp
test
dec
cmp
shrb
dec
mov
in
in
imul
cmp
or
cmp
mov
fwait
out
inc
scas
ljmp
and
push
inc
and
pop
add
mov
mov
cltd
lods
dec
scas
mov
push
insl
movsb
or
mov
jmp
jbe
sbb
loop
test
xchg
pop
mov
inc
mov
xor
mov
mov
push
shll
stc
push
pop
adc
sbb
xlat
and
ja
xlat
loopne
mov
or
and
int3
je
fidivs
mov
adc
scas
sbb
movsl
clc
mov
cmpsl
cli
xchg
sub
push
mov
ret
iret
pop
in
xor
scas
lds
lcall
lahf
std
aam
inc
cmp
inc
in
fcomps
mov
xchg
push
js
dec
mov
daa
xor
pop
fcoms
mov
roll
negl
jp
or
mov
cs
fs
sbb
arpl
xor
mov
bound
sbbl
ljmp
jb
cli
or
pusha
ljmp
xchg
mov
incl
jg
mov
push
hlt
xor
sbb
cltd
iret
cmc
lret
inc
pop
pop
and
mov
and
mov
xchg
xor
aas
or
out
or
outsb
sub
testb
push
jp
stos
loop
mov
lea
test
mov
jo
xorl
mov
xchg
hlt
cmp
movsb
push
inc
ss
loopne
out
sbb
push
clc
in
sarl
ljmp
out
xchg
outsl
adc
jecxz
in
push
iret
add
mov
inc
dec
jo
int3
cwtl
adc
lods
cltd
lcall
adc
jb
ss
mov
cmpsl
in
movlps
les
cmp
les
ljmp
nop
mov
ljmp
mov
xchg
inc
fcompl
mov
xlat
lret
loop
push
pop
jnp
pusha
or
sub
cwtl
or
dec
and
cmp
add
pushl
push
pop
mov
dec
fs
lea
fiaddl
fdivs
nop
cmp
adc
in
inc
and
mov
sbb
cld
cmp
add
shll
jns
lret
mov
movsb
pop
sti
and
jae
sbb
xor
dec
pop
std
cmpb
decb
iret
or
dec
and
jae
gs
mov
push
icebp
clc
int3
push
mov
cli
fisttps
xchg
das
addr16
push
adc
insb
mov
pop
mov
mov
into
and
mov
outsb
or
hlt
inc
popf
push
cmc
lret
fsubr
sbb
xlat
and
push
xchg
scas
dec
mov
inc
jmp
movsb
cli
fs
out
adc
sbb
shll
leave
ss
sbb
jnp
repnz
adc
mov
fidivrs
jns
mov
push
and
nop
outsb
enter
je
in
jae
add
movsb
sarl
jecxz
rorl
ret
int
aad
and
lods
test
fcomip
jmp
pushl
inc
fsubrs
and
in
push
into
xchg
bound
push
and
lret
les
jne
mov
pop
sbb
xor
adc
cmp
push
jo
inc
cltd
mov
testl
aaa
std
dec
xor
out
js
andb
dec
lds
mov
pop
addr16
icebp
mov
jg
lret
or
sub
xchg
cmp
cmp
jmp
les
sub
dec
push
aad
cmpsb
mov
sub
pop
pop
xor
outsb
pop
dec
int3
bound
lods
pop
xchg
lahf
push
push
sub
add
stos
jle
dec
out
inc
scas
ss
adc
int3
cmp
xlat
add
hlt
sti
cmp
add
adc
repnz
call
out
movsb
add
dec
jae
pop
cmp
push
repnz
out
jne
push
daa
or
push
lahf
cmpsb
stc
lock
mov
or
lods
sub
push
jg
fnstcw
adc
mov
bound
into
stos
push
mov
lret
gs
sub
xchg
sub
js
pop
mov
jne
out
xor
mov
mov
mov
in
add
repnz
mov
push
out
cwtl
jo
sub
push
bound
shl
fldl2e
scas
mov
jb
les
es
jmp
ss
repz
mov
movsl
out
and
mov
mov
cmp
ret
jecxz
mov
adc
int3
sub
dec
into
jl
mov
jmp
xor
jp
push
inc
add
jmp
shll
enter
mov
or
xor
jno
cmpsl
inc
in
add
test
fs
or
sbb
test
icebp
pop
shll
cmp
inc
pop
fldcw
outsl
jp
mov
leave
cmp
jae
ja
push
cmpsl
xor
inc
iret
lock
pop
data16
repz
scas
cltd
fists
lea
lods
inc
dec
xor
xor
xlat
jl
not
addr16
in
push
mov
push
clc
and
sahf
ja
xchg
or
adc
pop
dec
jge
cmp
mov
js
test
stos
ss
jp
ljmp
mov
bnd
pop
xchg
ds
repnz
jnp
ja
shr
cmpsl
ret
dec
jnp
or
xchg
xor
xor
adc
addr16
je
cld
lds
cltd
das
les
lret
xor
sub
je
mov
or
enter
shlb
adc
lods
daa
shll
jnp
xchg
adc
sub
cmp
aas
mov
xchg
stos
push
scas
frstor
pop
fists
dec
scas
aas
or
cmp
sbb
xor
xor
sbb
xlat
or
int
fldl
xor
or
shrl
cmp
cltd
cli
or
inc
mov
dec
xor
stos
sti
cltd
cmp
syscall
adc
cmp
leave
in
mov
lods
je
idivl
xor
sbb
movsl
clc
sub
popa
or
add
inc
imulb
mov
cs
mov
fisttpl
add
ror
mov
mov
mov
adc
scas
push
add
shrl
insb
loop
sbb
in
jp
rclb
test
fidivrs
mov
xor
ret
leave
pop
xor
adc
movsb
pop
jg
jg
and
mov
cmc
push
jge
add
pop
push
mov
mov
nop
mov
scas
lods
out
int
push
out
loope
test
shll
inc
cmpsl
popa
mov
jae
and
cltd
and
shlb
mov
lea
sbb
xor
leave
ja
xor
jp
jecxz
aaa
popa
sarb
mov
push
adc
dec
fs
xor
mov
xchg
pop
sahf
pop
xchg
sarl
xor
ljmp
and
insb
push
repz
dec
test
pop
adc
leavew
nop
sub
add
fcoms
int
subb
add
sbb
sub
repz
mov
push
mov
movsb
adc
cs
cmp
pop
pop
dec
push
bound
mov
gs
dec
xlat
repz
scas
repnz
je
add
stc
ja
or
rorl
or
cltd
cs
repnz
sahf
in
push
pop
mov
inc
sbbb
loopne
and
mov
dec
inc
adc
test
out
nop
push
dec
inc
call
xor
imul
lret
add
or
icebp
int3
mov
js
cli
mov
lock
sarb
ds
sub
popf
xor
shr
inc
mov
fdiv
pushf
mov
shrl
nop
aaa
daa
andb
leave
xchg
adc
sahf
dec
rcrb
ret
cmp
mov
lock
mov
imul
loop
sarb
adc
repnz
in
inc
push
mov
push
cmp
aas
in
or
scas
push
push
loopne
je
xorb
sbb
pop
cltd
pop
cli
cli
fists
test
mov
mov
adc
inc
movl
jle
and
adc
cmp
add
cli
out
inc
notl
xchg
sbb
dec
xchg
fiadds
out
lea
cmp
ficomps
cmpb
out
dec
pushf
pusha
mov
jmp
test
xlat
je
mov
inc
into
mov
cltd
popl
add
pop
and
cld
push
pushf
jl
test
scas
out
ret
sub
mov
sub
pop
dec
call
jnp
xchg
push
fildll
test
and
dec
fstpl
ljmp
in
add
and
iret
pop
dec
scas
dec
pop
push
xchg
fstp
lret
je
popl
out
sbb
xor
pop
sti
dec
sbbl
enter
mov
jge
in
js
lcall
or
cmp
xor
jno
insb
sub
icebp
and
jmp
ja
dec
out
into
jmp
pop
add
ret
clc
ret
mov
or
lahf
call
pushf
ja
sub
add
lea
xchg
lret
pop
sarl
inc
cmp
rcll
fldl
mov
dec
sub
xchg
push
imul
pop
sub
sti
cmpl
es
std
pop
fbstp
mov
push
jnp
add
fdivl
js
in
adc
push
clc
dec
in
leave
mov
xor
sarl
or
add
or
mov
mov
or
mov
xchg
test
inc
adc
pop
js
inc
jno
xchg
mov
sub
pop
and
mov
mov
scas
ljmp
cmp
sar
stc
testb
mov
test
push
push
xor
repnz
jb
inc
lret
sub
shlb
test
movsb
mov
or
adc
pop
aam
ds
push
jle
stos
dec
add
in
or
sarb
pop
pop
ljmp
shrl
orl
imul
out
fistps
xchg
leave
pop
mov
lea
pop
jne
mov
scas
and
test
inc
add
imul
mov
jb
ret
dec
dec
xchg
mov
jb
xorl
pop
fdivl
sub
or
clc
movsb
pusha
ja
mov
popf
subb
mov
lahf
mov
out
cmpsl
es
inc
ret
mov
lods
sbb
jb
cmp
mov
xor
pop
sbb
ljmp
rol
popa
jbe
sub
mov
sub
mov
stc
inc
mov
sahf
bound
rorb
cmp
push
mov
add
dec
xor
xchg
insl
pop
jb
lock
daa
or
dec
mov
ds
and
popa
fsts
imul
mov
jp
rclb
js
dec
mov
mov
adc
insb
mov
enter
call
das
inc
or
xchg
cmpsb
in
daa
xchg
push
sbb
lds
mov
les
or
dec
out
push
add
je
inc
or
fwait
sbb
inc
sbb
jnp
mov
test
mov
stos
adc
xor
and
inc
push
out
stos
and
pop
adc
dec
push
aad
test
jb
dec
test
out
mov
sbb
insl
cs
xchg
insl
ret
in
pop
outsl
fbstp
add
jbe
and
in
hlt
inc
out
cmp
mov
ss
enter
lahf
xor
out
ret
jno
subl
add
inc
pop
ret
ja
sub
insb
hlt
mov
out
mov
out
popfw
lahf
push
inc
cmpsb
pop
push
mov
sbb
inc
xorl
mov
mov
inc
push
or
xchg
xlat
arpl
arpl
sar
cmp
mov
fcmove
test
rol
ror
in
sub
xlat
rolb
cmp
xchg
lret
cmp
jp
sbb
into
idivb
fucomip
cmp
dec
jmp
mov
push
sub
test
mov
in
inc
test
add
xor
fstpt
mov
push
sub
loop
jae
ficomps
cs
xor
roll
xchg
shl
ficompl
es
cmp
jae
jbe
jno
movsl
outsb
push
push
dec
xor
aas
pop
mov
bound
mov
lcall
jb
push
ss
es
cmp
cmp
cs
cmp
jp
fadd
push
iretw
pusha
js
inc
sub
stos
mov
mov
ficoml
out
mov
mov
inc
mov
mov
adc
pusha
pop
or
cmp
or
test
ljmp
mov
pop
in
pushf
jg
je
push
popl
mov
xchg
movl
cmpsl
ljmp
mov
add
les
icebp
aas
dec
sbb
pop
mov
or
cli
push
or
imul
leave
jl
and
jo
stc
cld
xor
and
add
inc
iret
pop
sub
fwait
popf
faddl
aaa
mov
hlt
push
insb
sub
stos
and
std
jp
fmuls
idiv
or
movsl
adc
cmc
add
ljmp
mov
adc
push
jns
xor
mov
in
adc
or
mov
js
sub
stc
push
out
cwtl
div
lret
xor
movsb
push
les
add
mov
rclb
out
lods
mov
xchg
xlat
mov
sbb
divb
adc
clc
xchg
push
push
mov
arpl
leave
test
mov
mov
sti
jmp
mov
inc
mov
aas
sbb
cmp
fld
inc
pop
xchg
iret
idiv
inc
dec
dec
dec
mov
sahf
mov
push
dec
adc
xchg
mov
mov
sub
and
add
adc
movsb
testl
adc
and
test
pop
lods
sahf
jno
js
xor
push
aam
loop
loope
icebp
inc
mov
sahf
nop
lods
shlb
rorb
sbb
repnz
in
inc
dec
insl
push
ret
fs
push
xchg
adc
dec
aam
inc
mov
mov
dec
sbb
and
andl
dec
repnz
xor
outsb
cmp
dec
stos
sbb
xor
es
mov
mov
lds
or
inc
shl
out
mov
push
and
in
icebp
repnz
int3
lea
mov
dec
mov
lcall
mov
pop
sbb
pop
dec
addr16
aam
pop
and
mov
add
add
dec
or
mov
add
fisubs
sbb
ljmp
cmpb
fdivrl
xor
orb
inc
inc
sahf
pop
test
aaa
loope
pusha
stc
je
pushf
rcrb
lcall
gs
fs
inc
jo
push
inc
pop
inc
adc
and
into
xor
mov
pop
and
arpl
pop
inc
pop
lods
jbe
ja
jb
imul
xor
and
mov
cmp
dec
aas
jmp
dec
je
lahf
je
sub
jge
dec
mov
inc
jne
xchg
cmp
sahf
out
in
xchg
rcr
iret
sbb
sub
addb
cltd
sub
hlt
in
sub
int3
or
cli
clc
or
jns
decb
out
adc
jmp
rcrl
mov
daa
push
pop
sub
pop
data16
loopne
fisubrs
or
aaa
scas
inc
pop
push
mov
and
lcall
push
xor
mov
inc
cmp
xchg
adc
sub
das
push
lahf
adc
inc
int3
in
mov
mov
cwtl
jle,pt
aad
fnsaves
minps
adc
pushl
inc
gs
data16
sti
mov
xchg
mov
jecxz
add
mov
es
jg
push
pop
sbb
addl
cld
jns
add
movb
addb
mov
icebp
adc
jp
outsl
fisubrs
inc
cmp
and
incl
ljmp
xchg
adc
mov
repnz
popa
in
dec
adc
mov
test
inc
scas
jg
orl
enter
imul
popf
fadds
mov
add
xchg
out
dec
out
movsl
dec
out
iret
sub
pop
cmp
popf
push
cli
int
test
loopne
scas
divl
inc
adc
mov
push
adc
shrd
cwtl
push
pop
mov
pushf
cmp
pop
mov
xor
adc
xor
xchg
dec
stos
jo
xor
push
fnstcw
arpl
iret
mov
add
shlb
inc
test
push
mov
call
mov
push
xor
repz
sbb
lcall
loopne
inc
fadds
out
mov
add
adc
sarl
subb
pop
cmpsl
sbbb
or
inc
in
and
xor
mov
enter
rcrb
mov
lcall
sbb
outsb
mov
stos
fnsave
in
mov
xchg
loopne
cmp
call
push
mov
fisubrs
xor
jb
cmpsl
punpcklbw
stos
and
insb
data16
pushf
mov
out
stc
mov
out
lahf
push
mov
movsl
and
pop
repz
dec
mov
cld
lret
leave
inc
es
test
inc
mov
adc
ljmp
loop
ret
inc
push
push
mov
pusha
das
arpl
enter
pop
mov
das
cli
stos
xor
jnp
adc
cmp
sub
popf
mov
dec
cmp
adc
pushf
mov
push
ret
cltd
jmp
xchg
lret
pop
stc
hlt
jmp
andb
lret
xor
aad
pop
pop
and
mov
jne
mov
push
fsub
xlat
mov
pop
dec
push
imul
push
sub
loope
orl
vpackssdw
outsb
xor
sbb
cmpsl
jo
rol
xchg
or
shll
jle
fidivrs
push
movsb
lahf
inc
lds
xchg
js
pop
test
aad
adc
cmp
mov
les
pop
bound
jg
shl
rorb
movsl
fs
and
xchg
gs
pusha
mov
mul
mov
jno
push
jl
loop
jle
popf
xchg
call
inc
xlat
clc
jge
sub
jge
ljmp
push
and
jmp
ljmp
popa
xchg
xor
subb
jecxz
incl
or
call
or
clc
mov
xchg
mov
inc
imul
mov
mov
pop
fdivr
fs
fmull
and
and
es
mov
mov
insl
mov
js
jbe
andl
cmpsl
jns
call
jle
and
push
bswap
mov
lret
pop
push
jnp
pop
mov
scas
sbb
push
push
mov
lods
movsb
fsubrl
std
push
jo
call
divb
push
addr16
inc
and
jecxz
cmpsl
mov
dec
aam
iret
jp
add
sub
jno
pop
cltd
cmp
cmp
aad
dec
gs
les
add
ret
gs
and
loopne
es
add
xchg
jnp
jg
adc
repnz
inc
cld
das
loop
jnp
scas
mov
add
test
jno
or
mov
out
sub
mov
sahf
out
bound
aaa
setle
shl
popa
arpl
adc
repz
stos
xchg
add
sbbl
outsb
in
dec
pop
sbb
pop
lds
add
repnz
push
jg
pop
int3
adc
adc
sbb
jle
shlb
mov
jmp
int
sub
cmc
repnz
das
pop
arpl
xor
enter
es
push
adc
fs
xor
icebp
xchg
xchg
mov
jb
int
daa
or
add
mov
imul
add
call
mov
push
sub
fcompl
or
and
sbb
mov
pop
inc
ss
jns
sub
inc
aas
adc
cli
fcom
mov
movsl
inc
mov
xlat
outsl
lods
xor
jns
cmp
fs
mov
sbb
popa
addr16
xchg
sub
cmp
test
jo
and
dec
mov
popa
xchg
sbb
dec
cmp
dec
out
icebp
xor
sbb
movsl
scas
data16
shrb
or
repnz
sbb
mov
enter
call
push
jns
and
push
dec
mov
pusha
hlt
hlt
les
lock
mov
shl
fdivp
mov
scas
xchg
push
fcmovbe
pop
fisttps
mov
sbb
pop
pop
loope
dec
stc
xchg
cmp
or
in
inc
xchg
push
loope
mov
ljmp
pop
jmp
lret
lret
push
cmpsb
dec
cli
fnstcw
dec
push
fwait
pop
lods
xor
push
push
lahf
lds
std
cld
outsb
into
idiv
mov
or
mov
sbb
dec
lahf
inc
ja
sbb
mov
sarb
cmc
pop
push
and
fsubl
mov
fbld
mov
nop
sbbl
cmp
xor
xor
pop
xchg
inc
mov
pop
sbb
nop
pop
jl
rcll
lret
int
gs
outsl
pop
mov
pop
push
xor
xchg
mul
mov
sbb
fsubs
bound
xor
lret
shlb
out
cmp
rcrb
push
mov
cmpsl
mov
outsb
fistpll
iret
mov
and
nop
dec
pop
nop
push
cmp
and
daa
std
dec
dec
dec
ljmp
mov
or
adc
ds
jge
cltd
dec
cmc
xor
fcoml
aas
in
les
dec
push
mov
lods
add
imul
arpl
and
mov
xchg
inc
sahf
aam
sub
lea
sub
test
dec
subb
dec
div
loopne
push
ret
inc
push
aad
add
ficoml
jle
test
xchg
xchg
or
jl
mov
xchg
jle
sbb
xlat
inc
incl
add
mov
aam
sub
mov
and
inc
out
lds
or
aaa
inc
and
lods
mov
dec
dec
mov
je
jg
sub
imul
mov
mov
dec
xlat
mov
sub
xchg
inc
ss
push
fldt
scas
fsubrl
in
aas
mov
icebp
push
and
and
ja
mov
outsl
mov
in
fadds
mov
jg
in
dec
inc
fists
xchg
ret
lcall
dec
int
jl
arpl
xor
inc
test
mov
lods
adc
roll
cmp
fnstenv
mov
scas
lahf
orl
sbb
xor
sarl
and
dec
or
test
outsl
or
test
push
insl
mov
inc
pop
mov
js
sbb
ljmp
mov
ljmp
or
push
jge
add
int3
movsb
mov
ret
mov
xor
cmp
mov
out
je
maskmovq
divl
xor
fdivrs
shll
xchg
mov
cwtl
enter
inc
fcmovbe
test
push
xchg
hlt
or
push
pop
lock
pop
test
mov
movl
loopne
fs
iret
andb
mov
jo
jge
mov
and
ja
je
pop
test
xchg
jge
test
cmc
fnstsw
les
out
adc
ds
xor
jmp
adcb
mov
pop
lret
ret
adcl
sbb
aas
mov
sarl
sar
pop
pop
pop
les
or
test
add
fnstenv
pop
xlat
gs
and
or
or
mov
ret
mov
aas
out
imul
out
jbe
xchg
xor
xor
dec
dec
icebp
lock
add
sarb
pushf
sub
cmp
pop
popf
jecxz
dec
add
lret
jmp
ret
lcall
bound
in
sub
mov
scas
les
mov
std
push
lcall
mov
xchg
adc
ficomps
aaa
ret
mov
fsubr
rclb
sbb
jne
push
mov
add
xchg
lock
mov
and
cli
fs
loopne
mov
ja
sbb
xor
xchg
xor
clc
sub
pop
push
negb
sbb
dec
dec
lods
movsb
lahf
and
fsts
xchg
fidivrl
stc
mov
subl
or
push
in
cmp
cmp
fwait
mov
and
enter
mov
mov
jnp
flds
xor
mov
lahf
or
pop
rorb
ds
push
or
roll
xchg
stc
aas
xor
mov
cmp
sub
std
lods
sub
jge
push
sbb
fs
loop
aad
pop
push
mov
fucomp
push
lods
fstl
repz
dec
inc
cmp
cwtl
push
xlat
mov
aam
push
test
ja
jnp
push
xor
cmp
mov
pop
mov
lret
xchg
inc
dec
or
mov
addr16
filds
pop
jecxz
cld
push
mov
lret
sub
inc
add
inc
in
dec
lods
out
and
lcall
andb
lret
jge
sub
xor
pop
dec
test
fisubrl
or
sti
jg
shlb
sbb
nop
out
jbe
jb
ljmp
inc
cltd
lds
mov
and
dec
ficompl
jnp
push
ret
push
aad
fdivl
sub
mov
sub
lods
fwait
mov
jle
cmp
fsubs
ret
out
clc
imul
dec
sub
stos
daa
jae
mov
cmp
mov
jp
popa
dec
rorl
inc
call
cmpsl
dec
dec
sti
xchg
test
insb
scas
sahf
popf
mov
xchg
push
adc
mov
orb
push
rorl
push
or
inc
div
mov
ret
stos
popa
scas
out
imul
insb
sbb
insb
mov
in
subl
fsubp
mov
mov
and
mov
pop
ret
addr16
dec
pop
xchg
push
mov
mov
fstpl
cmp
jnp
gs
aam
mov
loop
fstpt
dec
xchg
ret
mov
xor
ljmp
or
data16
pop
out
mov
xchg
inc
pop
ror
lds
sub
je
dec
adc
repz
jne
movsl
test
cmp
and
int3
pop
shl
divb
aad
lcall
add
push
out
stos
or
stos
nop
js
jecxz
repnz
add
ja
dec
insl
push
cmp
fsts
push
mov
test
cs
mov
idivb
cli
add
inc
out
imul
push
or
or
data16
jmp
lds
arpl
hlt
cmc
gs
jnp
jnp
out
or
repz
pop
add
push
and
fidivrl
ja
setnp
mov
daa
ss
xor
xchg
cmp
in
mov
jmp
adc
sbb
push
jle
add
ficoml
pop
cmp
stos
lods
into
movl
push
imul
or
jmp
add
and
icebp
pop
sbbb
ljmp
sti
push
jbe
stc
clc
lods
sbb
xchg
fstpl
xchg
mov
adc
rclb
jecxz
jp
inc
mov
pop
shl
inc
pop
aad
push
dec
push
inc
pop
dec
mov
push
add
sub
add
add
mov
jbe
aam
pushf
rcr
push
mov
scas
pop
test
add
int
sub
dec
sub
xchg
dec
movsl
adc
xor
je
jle
subb
xchg
lcall
mov
xchg
lea
jae
cmpl
mov
stos
sbb
nop
cmp
mov
stos
pop
mov
popl
xor
std
es
add
fucomi
sbb
repnz
mov
addl
loop
in
mov
fidivs
and
inc
pop
sub
and
push
pop
dec
arpl
das
pop
in
movb
or
xlat
dec
xchg
inc
xchg
jecxz
xchg
iret
popf
adc
sub
mov
loopne
mov
aaa
in
lea
sub
shrl
hlt
fisttpl
mov
and
mov
ss
inc
jbe
testb
jno
es
mov
fs
cwtl
not
push
pop
popa
shrl
jmp
pusha
int
mov
test
xchg
dec
outsb
and
adc
xchg
notl
jns
test
mov
inc
sub
sarb
in
bound
push
lds
ljmp
lods
sbbl
sbb
pop
jae
fcoms
inc
fwait
test
inc
fs
inc
ror
out
cltd
fldl
adc
adcl
icebp
sub
notb
daa
rol
cmpsl
adc
lret
pushf
mov
outsl
adc
pop
push
fiaddl
push
popf
loope
fdivp
into
inc
sub
testl
lret
scas
adc
addr16
mov
jle
push
cltd
in
cli
in
jbe
inc
ret
mov
mulb
clc
add
mov
repnz
cmpsl
push
ja
or
xor
rolb
adc
sub
popf
mov
jne
stos
jb
mov
icebp
loope
jecxz
int3
mov
imul
xchg
adc
mov
insl
jecxz
pop
bound
in
sub
mov
rcl
iret
in
sbb
arpl
sub
sbb
cmp
lahf
adc
rcrl
lea
pop
mov
iret
loope
sysenter
dec
mov
jae
arpl
das
adc
xchg
mov
popa
xorl
or
loope
sbb
bound
inc
pop
jge
ja
call
mov
int
testl
add
jns
jnp
ljmp
cmp
stos
sub
mov
fsts
push
adcb
sbb
adc
dec
jecxz
jbe
adc
push
scas
push
adc
loopne
jmp
cmp
nop
shl
or
fcoml
mov
ds
mov
xchg
cwtl
scas
pushf
sbb
pop
lods
xchg
push
sub
icebp
xor
pushl
mov
repnz
mov
sbb
iret
int
rep
jecxz
sti
int
inc
shrl
pop
test
push
std
mov
movsl
not
pop
pop
daa
dec
loop
flds
dec
mov
test
insb
push
js
aaa
push
shl
add
xor
inc
xor
add
lcall
xor
mov
sub
xor
dec
or
cmp
in
jmp
ret
roll
insb
xor
sub
lret
sub
cld
test
mov
pop
loop
loop
sub
or
and
testb
rol
hlt
adc
loope
cmp
cld
sar
and
in
pusha
in
addr16
inc
xchg
lahf
xor
daa
pusha
inc
xlat
dec
in
mov
stos
ret
movsl
neg
incb
int3
push
or
inc
sub
andb
pop
push
int3
jle
and
leave
cmp
mov
mov
out
mov
call
mov
std
jle
fwait
mov
add
xchg
mov
call
dec
fs
clc
xor
add
sti
and
mov
push
mov
inc
jmp
jp
adc
les
in
movl
jbe
lcall
adc
lret
std
and
dec
xchg
xchg
sbb
adc
mov
iret
push
addb
gs
nop
rcll
jmp
popa
xor
cmpsb
mov
ljmp
jmp
fistl
dec
push
movsl
dec
jns
add
pop
sti
out
sub
int3
adc
dec
mov
push
and
mov
mov
jnp
das
ret
push
dec
pop
lcall
out
sarl
mov
mov
push
mov
push
js
sti
sbb
pushf
mov
shll
das
sub
cmp
add
mov
ljmp
dec
imull
mov
cmp
ja
push
fmulp
xchg
aas
add
cmc
ret
mov
cmp
cli
and
idivb
lcall
pop
cmc
cmpsb
push
sbbl
adc
fnstsw
shr
call
xor
lahf
popa
sbb
dec
inc
lret
push
nop
pop
push
jnp
jecxz
loop
pop
stos
cmp
push
insb
roll
imul
in
mov
aam
jp
sub
or
dec
pop
push
lock
fdivs
add
idivb
add
dec
xchg
xchg
cmpsl
lods
cwtl
cmp
sbb
outsl
mov
lcall
dec
push
es
sub
mov
repz
fadds
mov
pop
push
push
mov
adc
xchg
inc
pop
call
jae
pop
fldl2t
out
xchg
imul
push
push
fcoms
dec
gs
gs
sub
or
or
decl
push
leave
stos
test
loopne
inc
ret
rolb
mov
or
test
mov
test
dec
out
in
flds
sbb
call
cmp
push
inc
cmp
add
sti
sahf
shl
das
xlat
adc
mov
ljmp
je
cmp
call
loop
test
jns
mov
movsl
fwait
jne
ret
nop
lods
mov
addr16
out
popf
sbb
pop
add
add
mov
or
jbe
jno
sbb
cmp
xor
fstpl
iret
inc
xchg
aaa
out
jns
adc
addr16
lea
es
lods
sti
fs
lcall
jmp
loopne
pop
inc
jbe
pusha
fwait
add
pushf
pop
ds
inc
clc
mov
scas
push
lret
xlat
dec
inc
push
or
decl
adc
adc
mov
ja
pushf
dec
testl
sub
cmp
pop
fcom
loopne
in
out
int
in
sub
orb
add
dec
stos
adc
ret
sub
hlt
insb
pop
loope
sub
inc
push
lret
mov
pop
ficompl
scas
and
fldcw
and
lods
ljmp
aad
mov
xor
dec
adc
xchg
adc
mov
push
popa
repnz
ljmp
xchg
outsl
xchg
stc
dec
adc
imul
xchg
xor
testl
loopne
cltd
ss
inc
lock
jnp
or
lahf
xor
sub
rorl
inc
mov
xor
inc
decb
test
pop
xchg
sub
or
fdivrl
fwait
mov
inc
cmpsl
stc
lods
ret
sbb
test
cs
xor
mov
inc
int
pop
push
xor
pop
cmpb
sub
mov
add
sahf
movsl
mov
pop
sub
push
mov
enter
adc
or
mov
arpl
cmp
push
xor
mov
cs
stos
sbb
sub
imull
lock
cwtl
mov
lods
pop
cltd
mov
sti
iret
daa
push
call
mov
xchg
pop
scas
pop
mov
neg
cmp
fstpl
pop
pop
data16
push
es
sbb
jne
xor
push
and
mov
aas
insb
add
cltd
inc
inc
mov
mov
scas
lods
mov
mov
inc
inc
stc
or
cmpsl
dec
ret
sbb
mov
adc
cld
adcb
pop
xchg
mov
cmp
test
mov
out
jl
imul
pop
popl
xor
aaa
loop
inc
cs
rcl
adc
out
and
jb
and
nop
adc
push
imul
mov
or
pushf
or
cmp
insb
adc
fdivrl
sub
push
addl
mov
repz
dec
jge
fdivr
jbe
notb
push
cmp
cmp
sbb
jbe
bound
pop
sbb
rcl
push
mov
mov
mov
xor
lret
xchg
add
push
sbb
inc
lret
mov
xchg
lds
mov
jbe
pop
jne
scas
stc
in
cltd
cli
repz
fstps
repz
and
pop
aaa
pop
sbb
movsb
xor
push
xchg
shr
xchg
adc
xchg
fidivs
xchg
and
sub
mov
pop
xchg
push
cld
mov
out
mov
sub
sbb
pop
ss
jmp
mov
aaa
inc
les
dec
lds
fnsetpm(287
mov
inc
cmp
jle
xchg
add
testb
lds
jb
adcl
insb
xchg
sarl
dec
sub
add
pop
mov
divl
xlat
jbe
loopne
pop
push
pop
inc
cs
cwtl
call
sbb
mov
jo
scas
cmpl
sub
inc
movaps
xchg
ror
and
xchg
sbb
pop
sub
les
push
test
mov
jecxz
shrb
push
mov
ljmp
add
shrb
sub
dec
cmp
lret
sub
insb
mov
push
xchg
sub
pop
or
out
stc
push
cwtl
fnstcw
jbe
fstpl
scas
inc
pop
push
mov
stos
add
out
cwtl
mov
or
cmc
push
mov
cmp
fsubs
mov
orb
sub
push
out
mov
cmp
jmp
dec
in
in
cld
add
jns
adc
enter
cmp
and
test
test
dec
mov
shrl
adc
decl
cmp
mov
fldl
lods
or
cmp
lock
testb
test
cld
mov
jno
shll
sub
int3
scas
fists
jp
ss
movsb
adc
test
add
dec
ja
testl
stos
ret
js
rcrl
ds
xadd
out
xor
ret
jl
xchg
inc
adc
inc
xor
stos
out
mov
out
outsl
cmpsl
sbbl
sbb
iret
and
pop
xor
repz
leave
ja
aaa
add
push
je
rcl
test
xchg
add
cmc
mov
add
dec
lcall
mov
les
test
rcrb
jmp
xor
xchg
inc
xor
and
sub
jge
pop
cmpsl
and
cmc
sub
imul
cs
imul
iret
adc
ds
or
test
dec
cmpsl
xchg
subb
lahf
xor
pop
push
jo
cmc
xchg
mov
inc
aas
cli
loop
cmp
sbb
aad
shrb
arpl
insb
roll
fisubs
cld
or
in
fbstp
int3
aaa
std
xchg
add
dec
add
ljmp
es
add
jecxz
into
out
lods
out
lea
lret
je
xchg
pop
mov
add
cld
sub
lock
bound
outsb
dec
pop
imulb
cmp
gs
ljmp
mov
lret
xchg
mov
push
xchg
enter
jnp
call
cwtl
movsl
push
cwtl
fldln2
imul
xchg
adc
mov
add
adc
in
mulb
sub
lds
jmp
jmp
sahf
mov
scas
lods
sub
pusha
insl
or
incl
jp
test
shll
push
ret
lret
clc
or
ficomps
idivl
loopne
or
xchg
dec
mov
js
jnp
and
cltd
outsl
js
lods
jns
xchg
call
pushf
mov
dec
je
sbb
mov
mov
or
lahf
ljmp
jle
enter
and
or
xor
js
clc
jmp
cmpl
and
ss
test
mov
mov
mov
lock
or
js
add
cmpb
sbb
outsl
push
cmp
pop
xchg
repz
cld
imul
ret
mov
add
dec
mov
out
jecxz,pt
lret
fwait
icebp
pop
fs
or
outsl
mov
push
stos
jo
lahf
ret
into
push
and
or
imul
incb
enter
xchg
mov
sbb
mov
jo
xlat
push
decb
push
jb
aam
sbb
enter
inc
js
stos
testl
addr16
adc
paddb
ja
lret
jecxz
insb
push
fld
lods
leave
outsl
in
test
in
cwtl
mov
sbb
in
cld
add
clc
dec
in
cld
into
jnp
insb
sbb
jg
negl
pop
add
cmp
add
in
jle
out
inc
imul
ds
stos
add
ret
mov
aaa
add
xor
movsl
lret
push
sbb
addb
push
dec
aad
ret
int
pop
or
fwait
add
mov
imul
cmp
inc
sbb
pop
cmpsb
cmp
mov
popf
aad
lret
call
pop
xor
shlb
mov
fisubs
pop
push
fldl
rclb
xchg
sbb
xor
loope
faddl
pop
fprem1
movsl
idivb
push
test
xchg
sbb
lret
mov
cmpsl
xchg
fmul
fistpl
pop
notl
jg
jnp
popf
rorl
cmc
sbb
lahf
add
cmpsl
mov
sti
jg
push
and
mov
dec
add
mov
int3
movsb
dec
mov
pop
xchg
popa
loopne
shr
mov
lcall
pmaxub
mulb
or
dec
insl
jae
mov
enter
loope
enter
push
in
sbb
pop
in
mov
shlb
ljmp
test
xor
mov
iret
lock
ret
mov
movsb
hlt
add
cmc
prefetchwt1
mov
cmp
sub
out
or
into
iret
fdivrp
call
lds
in
fisttps
rcr
cmp
cmp
dec
test
stos
cmp
call
add
add
fwait
les
jbe
or
addl
pop
xchg
pop
jecxz
push
xor
and
push
loope
sbb
xchg
imul
mov
mov
leave
out
pop
inc
pop
out
xchg
loopne
ret
loop
ja
push
fldl
push
push
adc
scas
imul
lahf
leave
lods
sbb
stos
fwait
cwtl
xchg
mov
ds
call
stos
mov
ss
push
lods
mov
loop
faddl
or
rcl
fstl
adcb
inc
xor
xchg
and
dec
int3
inc
push
outsl
lahf
testb
rolb
in
mov
push
push
fidivrl
lods
push
xorl
scas
call
pop
cmp
inc
out
int3
cmp
fisttpl
adc
xor
out
ss
xor
cltd
and
jg
int
cmp
inc
stos
gs
pop
mov
cld
pop
cltd
rolb
mov
and
data16
ret
loop
push
fucomp
inc
push
dec
stos
addr16
push
insl
repz
fadd
mov
cmp
js
mov
push
sub
lret
mov
es
leave
cmp
dec
xchg
or
cmp
imul
xor
pop
sbb
mov
and
jbe
bound
push
out
in
inc
ja
fwait
loope
cmp
push
push
andl
lcall
fucomi
adc
mov
jg
pop
mov
xchg
xor
and
add
int3
sub
xor
jb
in
pop
lods
jmp
out
imul
push
mov
ret
adc
aam
jae
xchg
leave
dec
icebp
mov
lods
fmul
movb
dec
addr16
sub
push
fcmovbe
sbb
shll
push
mov
ret
or
addr16
pop
rclb
sahf
mov
inc
sbb
sub
pop
movsl
fstp
and
xchg
adc
std
movsb
mov
sbb
movsl
adc
lods
xor
mov
test
cld
mov
lahf
cmp
repnz
xor
cmp
push
cmp
andb
data16
jmp
jle
xlat
fldt
fucomi
insl
icebp
cmpsl
and
lret
inc
fisttpl
inc
mov
imul
pop
out
and
xchg
pop
in
into
pop
psrld
inc
std
test
int
loope
xchg
rorl
mov
pop
xchg
inc
pop
push
mov
aad
add
fsubrs
aad
lock
xor
mov
movsl
dec
mov
mov
scas
xchg
sub
add
sbb
stos
mov
adc
out
pop
cmpsl
repz
sub
ljmp
js
push
push
add
lahf
xor
mov
push
push
into
and
hlt
je
sbb
cltd
sub
es
adc
cmp
out
int3
xlat
add
and
pushf
or
xor
cwtl
repnz
outsb
cmpsl
dec
add
fstps
inc
ljmp
sahf
dec
and
sub
mov
jp
sbb
int
loopne
sti
cli
inc
sbb
in
jmp
sub
mov
dec
imul
mov
push
sub
jne
push
xchg
icebp
fidivrs
xchg
push
cmp
dec
jns
imul
mov
pop
adc
in
xchg
inc
pop
mov
or
or
add
xchg
cmp
and
push
rorl
int3
in
cli
loope
int
or
jl
repnz
jecxz
mov
iret
nop
xchg
ljmp
lret
jae
and
dec
mov
push
lock
scas
insl
dec
push
mov
fmull
divb
call
inc
cltd
jne
xchg
in
arpl
jo
mov
mov
movb
stos
pop
push
fdivl
adc
add
and
es
push
stos
and
mov
cmp
imul
mov
mov
fbld
or
or
jmp
xchg
jae
bound
jb
rorl
inc
and
jo
std
sub
sub
adc
mov
bound
push
dec
movsl
xor
cmpsl
xchg
data16
mov
push
and
fidivrs
and
add
out
or
sti
inc
cs
or
jmp
gs
sub
into
test
fs
hlt
lret
and
loopne
in
test
shrl
iret
adc
inc
inc
aad
sbb
adc
jo
pop
fldl2t
pop
fnstcw
add
sbb
movb
cmp
enter
add
sahf
and
xchg
popf
daa
fwait
in
sbb
mov
inc
movsl
mov
adc
aaa
lret
fcomps
fstpl
pop
pusha
or
cs
or
xor
mov
outsl
adc
mov
stos
in
scas
es
jp
jb
xor
cmpsl
xchg
mov
mov
mov
clc
rorl
mov
jno
ret
dec
and
adc
push
mov
mov
or
adc
fninit
scas
push
add
lock
cmp
jb
jno
enter
push
iret
ss
lcall
jp
xchg
push
pop
movsb
lret
aad
cltd
inc
cmp
rorb
xlat
mov
push
pop
cmp
xchg
jns
scas
hlt
dec
popf
fimuls
es
cli
les
daa
xorl
test
or
xorb
lret
jbe
mov
test
lds
xchg
jmp
mov
out
test
aas
enter
out
nop
out
mov
xchg
jecxz
pop
scas
jge
bound
in
fsubl
leave
jge
pop
jae
mov
inc
hlt
sub
fildl
mov
pop
popf
pop
rolb
sub
sub
out
rcr
dec
push
in
add
pop
lods
je
adc
repz
into
xchg
sahf
push
pop
adc
mov
dec
xor
and
cli
andl
mov
orl
rorb
mov
sub
dec
add
fs
orl
int3
push
mov
mov
movsb
int3
fdivrs
out
mov
mov
sar
fistl
fstpt
das
aad
xor
ds
jb
hlt
test
imul
mov
mov
inc
jb
lea
xor
sub
lock
add
loop
xor
aaa
add
sbb
in
adc
xchg
dec
xor
dec
jge
mov
rorl
pushf
or
mov
jno
cmpsb
outsl
mov
sti
or
mov
testl
lcall
rclb
popf
dec
notb
aad
movsb
mov
xchg
icebp
into
psadbw
rcll
popa
cmp
lds
push
mov
or
push
ss
int3
or
cmpsb
mov
mov
pop
and
mov
cmpsl
mov
jns
fsubrp
into
in
pusha
sbb
rcr
pop
or
add
fnsave
aad
cmp
dec
xchg
pop
mov
fnstenv
inc
mov
in
out
je
lea
mov
or
mov
add
lahf
int3
int3
cmp
jns
sbb
stos
xchg
hlt
sub
sub
sbb
inc
loope
daa
adc
pop
es
pop
popa
test
repnz
lret
and
jb
das
je
sub
sarb
les
mov
icebp
loope
cmp
dec
pop
mov
aaa
scas
sbb
mov
cli
xchg
dec
jle
xlat
shrb
aad
aam
aam
in
fucomp
fs
sbb
lcall
jmp
repz
mov
int
loop
dec
push
out
push
jmp
or
call
hlt
data16
jne
in
mov
jo
mov
and
dec
jae
scas
add
lret
pop
imul
in
ljmp
aad
test
lret
gs
js
mov
push
es
stos
sbb
xor
dec
push
mov
sub
mov
pop
scas
add
mov
filds
cmp
xchg
push
lds
fldt
inc
inc
jl
mov
shl
lods
in
popa
pop
xor
test
outsb
call
incl
sbb
mov
mov
push
aad
mov
push
enter
clc
cltd
int3
xchg
xorl
test
rcll
mov
xlat
clc
fsubrp
mov
inc
enter
or
jge
jge
cmpsb
stos
push
psrad
nop
push
xchg
jge
jae
addl
mov
dec
shrb
mov
ret
dec
clc
jge
xor
test
ja
loopne
adc
pop
sub
xlat
sbb
test
daa
in
mov
cmp
daa
push
mov
lock
pop
addr16
lds
push
inc
add
adcb
mov
mov
out
es
addr16
mov
cld
mov
dec
cmpxchg
sbb
adc
scas
in
insl
add
or
loopne
jg
mov
mov
les
cs
pushl
mov
subl
popa
xchg
out
mov
mov
adc
inc
mov
jo
or
mov
cmpl
inc
xchg
mov
jg
sub
popa
xchg
fdivl
xchg
fwait
jmp
xlat
mov
aad
and
jno
pusha
cmc
pop
fwait
push
cvtps2pd
ds
cmp
or
mov
fwait
ds
adc
sub
dec
push
imul
add
pop
adc
xchg
rolb
cs
stos
xchg
mov
mov
pop
ret
sub
cmp
mov
into
repnz
por
repz
adc
ljmp
rolb
mov
jb
adc
aam
add
fldt
push
mov
sbb
lods
xchg
outsl
mov
xor
fstl
testb
int
cmp
xchg
insb
rolb
jne
insl
dec
dec
sbb
inc
push
fnsave
call
ja
adc
pop
mov
xchg
xchg
jo
cmp
add
outsb
daa
testb
sarl
jb
push
push
jecxz
mov
arpl
pop
andl
sti
movsl
inc
mov
aas
mov
daa
cmp
pop
mov
test
aam
iret
cmc
inc
xlat
fwait
pop
sarl
andb
js
pop
test
test
and
nop
dec
leave
jbe
xor
push
mov
mov
pop
mov
cmc
xor
les
jle
sbb
xor
loope
jnp
mul
mov
push
lret
outsb
cmc
sub
xor
sbb
daa
cmp
cmp
jecxz
ret
in
or
clc
rcll
mov
rolb
mov
sub
aam
inc
mov
cmp
gs
lock
lahf
montmul
cmpsb
jne
pop
das
pop
mov
xchg
sahf
test
xchg
sub
push
sub
fwait
mov
sbb
mov
inc
xchg
mov
je
cld
push
outsl
xchg
mov
xchg
dec
cwtl
xchg
rcrl
movsl
stos
mov
mov
adc
lock
sahf
imul
xor
ds
adc
mov
jmp
lret
jno
push
jecxz
inc
push
subb
aam
adc
pusha
into
mov
or
mov
hlt
push
dec
insl
data16
add
adc
dec
je
xchg
andb
mov
int3
push
cmpb
lcall
scas
fistpl
movsb
mov
mov
dec
notb
dec
fisttps
int
cmp
push
mov
dec
fadd
mov
and
jmp
loopne
ret
push
jbe
hlt
cmp
mov
xor
xchg
push
je
xchg
icebp
dec
inc
fdiv
sbb
subb
sti
or
outsl
loopne
jecxz
lods
ret
rcrb
aam
jmp
pop
jnp
popa
adc
test
ja
insb
xchg
dec
stc
stc
subl
neg
aaa
jnp
test
inc
hlt
push
lret
mov
rclb
and
lea
xor
xchg
sbb
adc
sbb
or
pop
dec
push
out
sbb
ljmp
mov
jmp
xchg
ja
data16
mov
jno
mov
jmp
and
test
xlat
xor
jecxz
push
int3
dec
xchg
cmp
inc
shrl
xchg
nop
adc
lock
xorl
sahf
and
arpl
leave
xor
mov
mov
inc
loop
pop
leave
inc
cmpsb
ja
fidivrs
out
jnp
data16
add
jmp
cmc
addr16
adc
add
movsb
and
inc
mov
fisubl
cmp
test
outsb
sub
xchg
xor
sub
pop
xor
fisubl
pop
inc
out
iret
repnz
addr16
mov
or
out
add
fiaddl
dec
xchg
xchg
pop
or
mov
mov
not
ret
lea
jg
sti
rcrb
sbb
adc
or
lret
imul
dec
lcall
mov
mov
cmpsl
daa
aaa
push
aad
cmc
fcomi
scas
cmp
adc
or
lock
jno
ret
test
mov
mulb
movsb
lcall
in
pusha
out
in
in
ret
cmp
jb
lret
ret
in
lods
imulb
inc
sub
push
test
jns
xor
popf
scas
mov
push
out
lds
jnp
xchg
or
jg
sub
or
mov
push
loopne
mov
push
or
out
cltd
jmp
sbb
cmp
mov
mov
sub
or
enter
mov
mov
popa
lea
lock
es
loopne
test
mov
in
rolb
pushf
hlt
push
jo
cwtl
sub
test
push
pop
push
xchg
jnp
mov
xor
xor
popf
cmp
icebp
add
loopne
and
xorl
enter
in
lret
loopne
sahf
lret
faddl
std
sub
xor
jno
icebp
fwait
lret
sarb
cltd
add
stos
repnz
aas
push
add
jle
pop
mov
call
mov
cmp
ret
push
add
and
outsl
insb
movsl
add
push
dec
stc
pop
cs
daa
imul
test
sub
sahf
stc
jae
scas
int3
push
jecxz
loopne
out
lock
inc
jb
mov
add
add
push
sbb
and
sub
aam
incb
sbb
xchg
xor
cmp
enter
mov
popa
test
xor
xor
lods
popa
rorl
loopne
cli
inc
sub
fscale
add
aad
push
push
out
in
out
pop
in
into
iret
push
enter
jge
dec
pusha
inc
sub
pop
push
rclb
arpl
adc
cs
stos
push
cmpl
mov
andb
push
rcrl
cmp
popa
in
sub
jae
js
test
pop
pop
or
ss
sub
bound
or
out
frndint
cmp
or
cmp
push
lea
mov
les
inc
and
dec
and
sahf
mov
daa
xchg
dec
movsl
inc
in
call
push
test
test
dec
inc
sbb
clc
xchg
inc
xchg
cwtl
js
sbb
sbb
or
stos
lcall
aad
mov
test
mov
clc
clc
inc
sub
and
sti
and
sbb
inc
mov
dec
pusha
stos
sub
or
sub
adc
xor
es
dec
mov
push
inc
or
ss
xor
ja
jg
loop
and
pushf
popa
mov
dec
push
jne
aad
sub
lcall
pop
pop
lea
push
insb
je
stos
js
repz
pusha
pushl
adc
rcl
data16
out
subb
outsl
jmp
popf
mov
push
je
std
outsl
mov
lret
lret
or
movsl
pop
shrl
mov
in
jg
jae
pop
mov
popf
movsb
pop
pop
dec
and
sub
ja
adc
imul
test
imul
out
mov
add
outsb
mov
shl
and
push
imul
lock
sub
loope
daa
mov
mov
inc
jp
inc
adc
xchg
insl
roll
int
in
add
mov
push
enter
call
mov
jae
or
xor
inc
add
add
pop
xchg
add
jp
lock
adc
loop
addb
push
lcall
data16
pop
cmp
cmp
or
mov
and
sbb
cwtl
or
fbld
aaa
in
cmpsl
lock
out
in
and
movb
cld
ret
jo
mov
inc
sbb
in
jecxz
call
out
decb
roll
sub
dec
inc
mov
cmpsl
mov
in
xor
pushf
fnstenv
mov
cli
or
push
lret
or
dec
adc
and
sahf
in
lret
aas
shll
mov
dec
cli
inc
jne
jmp
adc
jae
xor
add
insb
mov
lcall
push
nop
mov
sub
jns
or
add
cmp
dec
and
sbb
es
pop
mov
sahf
inc
sub
xchg
pusha
cmp
xor
popw
mov
sub
xor
sahf
and
dec
in
xor
out
pop
sbb
jb
int
idivl
in
movsb
movsl
cli
sti
push
movb
insl
xor
xor
cmp
lret
jno
data16
mov
mov
push
xchg
pop
lds
int3
push
push
imul
aas
fwait
jecxz
pop
xor
pushf
mov
xor
imul
xchg
sub
or
adc
frstpm(287
pop
int
xor
andb
das
aad
movsl
popa
jb
and
leave
sbb
fiadds
push
mov
pushf
sti
mov
mov
jg
mov
idivb
and
popf
rorb
dec
lods
push
dec
lret
or
sub
xchg
jo
inc
rorb
push
add
ret
inc
imul
lods
je
push
std
adc
sub
push
out
out
scas
aas
hlt
inc
lcall
rcrb
mov
pop
pop
jno
push
fisubrs
pop
in
sbbb
push
mov
cmp
sbb
test
inc
xlat
add
negb
mov
dec
stos
jmp
xchg
mov
add
or
js
divl
icebp
adc
push
mov
mov
sbb
ret
ret
or
lds
les
or
dec
or
pop
push
push
dec
gs
ficomps
inc
fsubs
pop
and
sub
mov
es
jg
inc
ret
mov
aas
fsub
mov
loopew
cmc
fiaddl
les
jle
adc
flds
faddl
lock
mov
and
lret
xor
and
icebp
mov
inc
dec
sbb
enter
shlb
jns
jb
xchg
mov
adc
cmc
inc
fs
inc
fnstcw
push
out
pop
inc
push
jnp
jl
out
daa
jg
sbb
adc
ret
lds
aaa
in
push
mov
das
add
es
lahf
imul
jg
jp
test
loope
lock
jp
es
mov
jnp
adc
jnp
scas
adc
cmp
cmp
stos
sub
movsl
repnz
outsb
sbb
imul
or
fimuls
jnp
jbe
sbb
nop
sub
adc
xchg
push
pop
mov
out
mov
mov
clc
dec
jmp
pop
add
xlat
insb
xchg
fcompl
ljmp
cmpsb
sbb
jno
mov
dec
inc
push
inc
add
addr16
sub
hlt
repz
mov
pop
mov
or
push
mov
movsl
stos
push
jb
out
into
cmp
pop
out
mov
sbb
inc
popa
mov
adc
mov
push
or
shll
add
mov
sub
pop
int
pop
stc
sub
jnp
dec
xchg
jge
es
jl
cmpb
testb
push
loopne
mov
mov
sbb
xchg
mov
out
repnz
pop
jle
mov
jbe
jb
mov
jg
xor
out
loope
gs
aad
jo
scas
cs
mov
sbb
xchg
js
jns
xor
lods
stc
bound
fmuls
rcr
dec
daa
pop
push
sub
add
or
mov
add
sub
cltd
test
and
cld
mov
out
popw
mov
fwait
lods
adc
push
dec
add
insl
nop
stos
or
xchg
scas
pop
xchg
adc
mov
jmp
jecxz
pop
dec
inc
pop
cmp
pop
dec
into
push
imul
push
mov
enter
push
jae
clc
inc
sub
pop
mov
and
jne
push
sbb
push
or
mov
leave
es
test
mov
jno
fstl
divb
sarb
repnz
cs
bound
movsl
jns
addr16
sbb
dec
dec
jle
xchg
loope
fwait
inc
stos
outsl
icebp
daa
mov
mov
out
sbbb
add
idivb
imul
inc
add
and
jle
pop
mov
adc
sub
inc
leave
pop
push
pushf
or
dec
lds
xchg
mov
enter
mov
fs
rclb
aas
ja
push
inc
inc
jge
and
fldl
insb
inc
es
cmp
clc
push
mov
pushf
dec
add
pop
sub
out
mov
xchg
sbb
leave
addr16
repz
jnp
iret
call
inc
outsb
or
jnp
rcr
or
aam
sahf
shr
mov
es
addr16
sub
xchg
sub
push
pop
addb
arpl
sub
mov
icebp
pop
xor
pop
push
mov
inc
std
push
mov
pop
jl
inc
add
and
sahf
sti
outsl
imull
pop
lock
dec
in
adc
jo
jmp
or
jae
add
mov
mov
cmp
das
imul
addl
mov
adcb
sub
mov
adc
and
xor
dec
cmp
mov
sbb
lahf
sub
insl
fwait
adc
iret
mov
mov
ss
leave
and
push
or
daa
rcr
mov
ja
dec
fnstsw
jns
add
and
sti
stos
bound
fdivl
loop
movsb
sub
jns
sbb
movsb
fcoms
and
pop
pop
jb
xchg
stc
push
adc
jno
inc
ss
mov
push
iret
fidivs
push
push
and
ds
out
loop
mov
lahf
sub
js
jge
cmp
stos
stos
mov
push
xchg
loope
loopne
sbb
sti
mov
fwait
ja
jne
push
iret
dec
and
cmpsb
mov
jbe
cmpl
adc
lock
lea
ret
mov
adc
jecxz
arpl
in
cli
mov
xor
sti
inc
outsb
push
dec
sbb
sbb
sub
popf
push
popf
movsb
divb
xchg
jecxz
outsb
cmp
dec
jns
mov
or
pop
inc
stos
adc
push
cwtl
jmp
in
jg
adcb
dec
mov
sarb
gs
movsb
ret
mov
shlb
lret
adc
ret
xchg
lea
dec
xor
mov
push
test
pusha
adc
shll
popf
cmp
xchg
notb
jb
mov
call
lock
nop
test
and
lahf
mov
and
lock
ja
and
jmp
insb
lret
mov
push
rorl
jae
fdivr
int
es
sbb
loopne
shrl
lcall
enter
or
mov
mov
sbb
rol
mov
xchg
or
scas
mov
xchg
sbb
mov
lahf
push
and
cmp
xor
pushf
dec
xor
mov
pop
sub
aad
aad
cwtl
fistpll
dec
fucomip
in
int3
les
movsl
jo
outsb
cmp
jl
xor
ds
test
inc
pop
mov
pusha
dec
jbe
lret
xchg
aaa
cwtl
adc
scas
int
push
or
push
xor
mov
stc
movsl
mov
out
lcall
xchg
xor
imull
es
pop
pop
jbe
jle
adc
and
insb
sbb
jno
adc
or
stos
imul
or
lea
and
xor
push
push
ss
sbb
push
jp
in
fcoms
fidivs
rolb
add
rcrl
xchg
and
jb
jo
inc
adc
divl
pop
movsl
add
adc
aad
hlt
test
jb
sub
and
push
inc
mov
sbb
cmp
add
pop
sbb
lods
inc
adcl
sub
mov
call
cmp
and
inc
mov
adcl
daa
ror
sub
in
mov
test
sub
inc
jno
inc
fisttpl
add
popa
cmp
add
int3
mov
mov
adc
test
stos
dec
pushf
sbb
push
fldl
or
mov
repz
dec
pushf
in
sbb
push
and
mov
enter
sub
mov
xchg
test
jno
xor
mov
and
xor
es
fsub
call
mov
test
out
mov
xor
or
sub
push
pop
fwait
arpl
stc
adc
inc
stos
je
in
sub
mov
sahf
mov
out
aam
mov
test
int
dec
push
std
mov
xor
xchg
sbb
xchg
les
fs
sti
and
jp
xor
insb
pusha
pop
es
pop
pop
lods
jmp
int3
leave
pop
mov
repnz
cmpsb
xorb
pop
xchg
push
push
pop
dec
sti
pushf
or
imul
sub
and
sbb
int
sbb
cmp
push
adc
jg
dec
test
pop
inc
mov
ss
int
hlt
pop
push
cmp
xchg
dec
cmp
clc
xor
jmp
mov
in
pop
insb
sub
xchg
lahf
loopne
das
dec
ret
addr16
mov
outsb
inc
mov
mov
fstl
add
sbb
outsl
loope
xchg
push
inc
xchg
inc
call
pop
xchg
stos
out
scas
and
int
pop
and
in
bound
subb
sbb
inc
jle
mov
mov
cmc
cmp
pop
cmpsl
pop
mov
jmp
mov
incb
mov
xchg
pusha
cmpl
arpl
mov
icebp
cmp
cmpsb
fs
sarb
cmp
adc
pop
mov
or
dec
jge
pop
insl
sbb
scas
in
lods
addl
mov
fsubs
or
sbb
shlb
pop
inc
dec
xchg
sub
imul
jns
dec
cmpsb
movsl
mov
dec
pushf
inc
addb
arpl
sub
stos
data16
imul
incb
inc
push
ficomps
pop
cwtl
mov
add
addr16
push
loopne
pop
call
sbb
test
pop
data16
rorl
xchg
mov
mov
repnz
dec
xchg
aad
mov
clc
jecxz
movsb
jae
and
mov
adc
nop
inc
push
fwait
enter
xchg
cmp
rolb
es
xchg
mov
adcl
pop
pop
push
cltd
ljmp
sub
mov
loope
jp
lahf
mov
inc
push
int3
andl
and
push
fwait
mov
mov
cmpl
inc
mov
lret
xchg
insb
adcl
jno
add
add
mov
std
xor
pusha
inc
dec
sbb
mov
push
fcmovnu
jnp
aad
jg
movsl
inc
cmpsb
cmpsl
adc
adc
push
aas
mov
and
insl
mov
test
jecxz
imul
popf
jo
xchg
insl
mov
pop
cmp
mov
pop
xchg
mov
pop
sbb
mov
push
jns
sbb
cmp
sbb
push
ret
xlat
xor
aas
jmp
rcll
fbld
xor
mov
adc
pop
outsl
push
outsb
push
gs
adc
aaa
imull
push
push
fldcw
and
test
mov
xor
dec
cmpl
out
scas
mov
gs
dec
cld
out
pop
mov
shll
out
mov
dec
cmp
das
gs
or
fstps
enter
mov
ljmp
add
std
mov
xlat
push
stos
inc
je
xor
and
outsb
xchg
push
pop
cmp
add
mov
jge
push
enter
inc
xchg
pop
cld
xor
out
and
mov
lock
mov
mov
xchg
les
outsb
in
incb
mov
sbb
mov
jns
jg
in
mov
scas
movsl
sarl
lods
cmp
fldt
leave
or
rclb
jae
movsl
js
inc
sbb
aaa
inc
mov
shrl
mov
dec
aas
les
fsubrs
xor
icebp
add
rorl
jns
dec
inc
loop
inc
scas
mov
fs
sub
dec
xor
and
push
jge
pushf
xchg
xlat
mov
jmp
adc
jno
addr16
dec
mov
leave
mov
ja
mov
sbbb
sbbb
or
inc
test
mov
push
gs
loope
call
in
or
mov
adc
pop
cmp
pop
dec
mov
clc
enter
sub
gs
leave
test
mov
jnp
add
mov
xchg
js
lock
add
sub
lea
hlt
insl
movb
outsb
aaa
add
outsl
jnp
sub
inc
lret
xchg
xor
jbe
aas
movsb
lcall
mov
xchg
outsb
cltd
adc
test
rorl
mov
cmpl
jg
cwtl
push
std
mov
fwait
pop
ljmp
aam
vandnpd
popa
mov
adc
xacquire
lcall
fwait
dec
inc
xchg
inc
imul
push
push
or
insl
sti
out
les
xchg
leave
push
cmp
cs
dec
dec
lahf
testb
jge
data16
shll
xor
fucomp
popa
incb
les
out
lret
test
cmp
cmp
inc
addb
adc
std
repnz
lret
mov
call
out
ja
cld
shl
adc
call
iret
lods
in
cmp
in
jne
mov
cmp
push
imul
inc
mov
xchg
test
pop
cld
rcrb
add
xchg
xchg
add
cmp
hlt
popa
cwtl
lea
and
inc
mov
fidivl
cld
bswap
mov
mov
inc
cli
insl
xor
inc
push
dec
pushf
mov
jecxz
sub
adcl
sub
push
sti
jecxz
pop
das
scas
shlb
js
xchg
sahf
xchg
jecxz
xor
loope
xchg
or
call
gs
jl
lods
sbb
mov
lcall
sbb
cltd
nop
push
pop
jmp
inc
fdivl
xchg
stos
rorl
std
orl
sbb
mov
add
pop
ja
fucomi
fstpl
mov
push
and
lods
adc
dec
mov
mov
xorb
and
aaa
inc
mov
sub
add
sbb
pop
int
inc
xor
inc
adc
movsl
das
adc
add
inc
sahf
fsubs
std
rclb
dec
mov
outsl
push
mov
mov
mov
ja
iret
mov
mov
sbb
inc
in
mov
je
lcall
cmp
mov
push
xor
rorl
cmp
pop
or
hlt
leave
fcmovbe
bound
sub
mov
mov
xorl
mov
xor
mov
in
push
add
adc
inc
pusha
negb
repz
pusha
call
imul
scas
lea
fwait
xchg
cmp
inc
inc
pusha
xor
push
sti
ljmp
sbb
add
test
pop
sub
sti
mov
bound
lahf
fs
add
fdivr
fsubs
into
inc
xor
xchg
cmp
stc
fdivrs
mov
cmpsb
jecxz
movsl
or
push
mov
sbb
jg
adc
jns,pn
das
mov
lock
enter
xor
add
cmp
mov
pop
and
cli
mov
jae
stos
pop
cld
mov
xchg
in
add
mov
jmp
js
mov
in
stos
adc
nop
or
in
in
and
push
push
jo
mov
or
mov
sti
mov
mov
and
cmpsb
stc
clc
jmp
sbb
call
adcb
dec
or
sub
xor
es
es
call
xor
arpl
aam
lret
jmp
or
gs
pop
mov
jecxz
pushw
jmp
xchg
cmp
movsb
sbb
movsb
mov
dec
dec
sub
jl
jecxz
fcmovb
sub
sub
ficompl
imul
or
push
lock
jmp
aaa
pop
lods
hlt
repz
pushf
xor
stc
sbb
or
pop
out
xchg
push
flds
inc
lret
ja
dec
test
xor
dec
cmp
test
xor
or
ja
cmp
and
mov
sub
int3
adc
push
push
imul
or
flds
mov
pushf
mov
jo
mov
out
push
cwtl
mov
loope
cld
jmp
cmp
lods
ret
and
jnp
cmp
xor
stc
les
push
xchg
jnp
dec
jmp
xor
js
out
mov
add
lea
push
aad
push
mov
rorb
in
xlat
jmp
lret
mov
popf
movsl
int
adc
js
push
loop
out
lret
ljmp
jbe
sbb
iret
jge
pop
orl
inc
dec
and
jl
xor
jge
xor
add
or
xchg
loopne
sub
movsb
push
or
mov
cmp
sahf
into
insl
pop
mov
pop
leave
mov
sbb
add
stc
adc
jo
addl
mov
inc
das
mov
lret
jne
mov
outsb
fdivs
xchg
xor
ret
ss
std
enter
idivb
imul
push
cmp
push
int3
push
rorb
cltd
sub
loope
push
insl
addr16
out
stc
subl
add
dec
out
jle
jecxz
pop
push
dec
push
mov
fsubr
lods
add
outsb
mov
cmp
mov
mov
xchg
sbb
test
ljmp
icebp
test
pop
jge
push
repz
rolb
or
cmpl
push
outsl
cmpsb
jle
pop
mov
pop
push
mov
nop
xlat
ror
xchg
or
pop
pop
daa
out
lret
mov
mov
cmpsl
push
mov
fldcw
leave
or
push
lods
and
and
pop
stos
xchg
add
ss
data16
sub
loopne
mov
jae
adc
es
std
sbbl
leave
mov
loop
lods
mov
inc
pop
fstl
cltd
add
inc
mov
mov
fmuls
jns
lock
xchg
call
icebp
les
push
pop
sub
push
xchg
xchg
mov
xchg
sbb
pushf
add
mov
out
inc
and
fisttps
mov
mov
jge
test
mov
into
icebp
fimuls
mov
into
mov
jbe
clc
adc
pop
int
mov
or
mov
sbb
jae
mov
adc
daa
adc
test
bound
fld
lcall
lahf
and
ror
shrl
enter
sbb
stc
lret
fdivrl
add
jp
inc
dec
int
and
loope
movsb
mov
in
sbbb
outsl
arpl
std
roll
in
les
xchg
test
test
mov
les
push
fwait
mov
sbb
sub
inc
mov
movsl
out
dec
mov
sub
std
lds
cltd
lods
cmc
push
pop
xchg
jg
mov
xlat
int3
xchg
sub
outsl
push
sbb
sbb
mov
cmp
sbb
test
or
jb
xchg
and
jl
mov
pop
jbe
das
or
inc
jb
add
cltd
out
ja
inc
bound
jp
lds
jnp
mov
xchg
xchg
clc
pop
sarb
cmpsb
mov
push
in
dec
xlat
ss
repz
enter
leave
cld
cli
jge
adc
cmp
add
sti
in
mov
xlat
aad
and
pop
pop
enter
loope
mov
dec
pop
mov
outsb
lea
dec
xchg
sub
popf
lcall
fnstenv
fbld
movsl
cmp
js
jg
shl
jo
sbb
cwtl
cmpsb
add
cmp
sahf
jns
dec
add
lcall
and
jo
mov
test
imul
mov
lods
insl
jne
pop
adc
data16
addb
popa
popa
jb
pop
jmp
sub
shlb
mov
jae
in
jbe
repz
outsl
jbe
lock
adc
xchg
cmp
push
loop
or
pop
es
jb
push
and
call
loop
push
mov
sub
lock
inc
xor
out
insl
push
ds
jl
add
sub
mov
or
push
mov
inc
adc
stos
xchg
ljmp
and
inc
insb
pushf
xchg
into
dec
rcll
pop
stos
mov
jno
jo
nop
mov
jecxz
subl
jge
fs
sbb
cmp
pop
add
cmpl
push
jmp
jmp
push
pop
add
sub
out
sbb
out
inc
pop
int
loope
mov
in
adc
jnp
cmp
adc
aad
mov
jmp
jbe
dec
push
mull
add
jl
sbb
fiaddl
imul
lods
sbb
mov
imul
mul
rorb
outsb
or
xchg
jge
pop
and
icebp
ds
xchg
add
push
nop
movsl
mov
mov
loopne
lahf
adc
nop
jo
iret
adc
ret
xlat
sub
dec
lret
xchg
mov
inc
cmp
jmp
data16
dec
clc
in
mov
dec
lock
dec
inc
ja
cwtl
cmp
or
pusha
shll
lods
dec
jbe
or
fwait
push
mov
and
pop
mov
add
xchg
jg
fnstenv
popf
sub
cmp
ret
movsb
and
jle
lret
mov
jmp
loopne
jl
cmp
in
cwtl
cs
mov
outsl
jnp
lret
jae
push
pop
sbb
loopne
insb
mov
xor
out
loopne
mov
jb
sbb
jne
cli
imul
xchg
bound
xchg
sbbb
in
sarl
call
push
scas
or
movsb
cld
push
pop
mov
and
mov
or
mov
inc
inc
in
cmp
jb
cmp
lcall
idivb
jb
jno
int
xchg
loop
mov
adc
je
lret
push
or
jl
cmp
sub
cmp
jnp
mov
push
dec
lock
fiadds
out
data16
jp
jno
enter
lea
add
inc
pop
in
sbbl
sti
stc
cld
add
inc
ficoms
int
dec
stos
lcall
lods
or
pop
cld
push
xchg
lcall
sub
jmp
xchg
push
jmp
shl
pop
xchg
cmp
sbb
jmp
gs
es
adc
lret
rorb
or
dec
pop
es
mov
aas
or
dec
xchg
aam
sub
cmp
jns
cbtw
push
int3
fcomi
rol
or
rcrb
in
or
ds
shll
mov
rcrb
imul
xor
add
movb
dec
xchg
xor
cmp
stc
mov
nop
pop
adcl
mov
pop
cmp
dec
mov
and
or
xchg
ds
ficoms
aaa
roll
sbb
cmp
sbb
adc
jbe
cli
mov
stos
push
mov
mov
adc
xor
jb
fcmovnb
and
in
pop
mov
adc
push
into
aas
adc
in
xor
xchg
scas
mov
data16
test
or
ss
sahf
push
insl
orl
fisubs
dec
or
jae
insl
dec
jecxz
insl
mov
add
sbbl
ds
adc
popa
cmp
lret
inc
nop
clc
add
iret
mov
mov
sub
mov
cmp
xor
mov
pusha
aas
aaa
cs
jecxz
or
xor
ljmp
pop
ja
adc
jp
xchg
decb
movsl
in
arpl
xchg
cwtl
mov
movl
les
sti
cmp
add
push
lds
and
cmp
jecxz
aas
dec
aas
mov
or
pop
xor
push
and
lret
mov
fcmovu
mov
sahf
push
xchg
sbb
push
push
cmp
js
sbb
push
fmull
mov
mov
fwait
pop
xor
push
mov
mov
repnz
pop
and
dec
rorl
push
mov
adc
fwait
sub
inc
xchg
imul
xchg
add
pushf
dec
sahf
cmpl
test
cwtl
push
movsl
imul
jo
dec
mov
mov
adc
test
dec
lods
sub
jmp
pop
or
idivl
or
cmp
pop
cltd
xchg
and
jns
pop
push
xchg
push
pop
in
imul
cmpsb
pop
out
out
cwtl
push
pop
cmp
jle
cmpsl
mov
jbe
inc
mov
ja
lret
cwtl
sub
or
push
adc
xor
cmp
mov
mov
sahf
daa
xchg
xor
inc
pop
dec
mov
jnp
mov
pushf
mov
xchg
adc
mov
xorb
pop
ds
inc
pop
dec
in
outsl
pop
inc
pop
lods
push
jo
loop
out
dec
push
hlt
int
sbb
sub
jne
mov
xchg
les
in
clc
out
xor
aad
test
shll
test
lods
out
sbb
cmpsl
cmp
fwait
movb
mov
rol
lea
cld
sbb
xchg
lock
cmc
mov
sbb
les
mov
inc
std
in
cmp
testb
pop
scas
add
dec
test
mov
xchg
in
cltd
and
push
lock
ja
dec
xor
pop
rcll
dec
xchg
aas
mov
push
cltd
inc
pop
add
dec
add
push
rcrb
mov
jbe
xchg
ret
fwait
mov
xor
pop
jge
cmp
pop
xchg
cmp
push
mov
or
call
mov
pop
or
xor
inc
call
inc
pop
and
mov
pusha
add
and
sub
fcomps
lock
mov
nop
sub
push
dec
sbb
jl
stos
dec
pushl
inc
lods
mov
imul
pop
repz
stos
nop
mov
mov
cmp
lret
xchg
je,pt
in
negl
xchg
add
cmpb
push
mov
or
mov
mov
lcall
push
cmp
mov
mov
mov
fisttpll
and
subb
dec
jp
add
adc
js
sub
jge
bound
push
xor
int
sub
and
popa
pxor
imul
stos
xor
add
out
jp
or
repnz
adc
xor
xor
sbb
iret
lahf
leave
lcall
test
mov
jo
nop
outsl
addr16
jne
orb
adc
das
add
mov
push
aam
mov
jle
pop
jle
sub
aas
jl
je
add
call
lock
inc
mov
dec
movsl
icebp
sti
test
xchg
scas
jnp
lret
mov
lahf
or
push
arpl
ja
stos
xor
sti
ja
or
xchg
aas
sub
call
idivl
pushf
movsb
into
cli
jmp
dec
pop
and
lret
and
jg
xchg
pop
outsl
in
movb
jge
mov
mov
pop
test
lea
lcall
sbb
sbb
mov
mov
and
fcmove
jbe
mov
in
stc
rcll
add
mov
rorl
xor
notl
mov
xchg
es
xor
ret
mov
aas
and
dec
adc
mov
rolb
dec
fsubrs
lea
sbb
pop
and
mov
adc
mov
or
cli
inc
test
mov
lods
xchg
arpl
mov
loope
jo
gs
jl
fsubrs
pop
push
xlat
jbe
loopne
std
fildl
push
sahf
loope
negl
arpl
out
cmp
mov
sub
jl
adc
test
pop
mov
jecxz
cmp
int3
push
int3
iret
shr
mov
in
dec
imul
insb
imul
stc
pop
xor
add
fwait
pop
jmp
mov
sbb
out
cmp
inc
mov
add
mov
movsl
movsl
outsl
cmp
jb
push
inc
push
mov
das
movsl
dec
cmp
fmull
pop
sahf
vsqrtps
sarl
in
jp
mov
push
fs
pop
stos
dec
dec
mov
mov
xchg
xchg
notl
push
add
insl
in
idiv
xchg
pop
enter
nop
lods
mov
out
data16
adc
lahf
loop
shrl
sub
inc
push
outsb
and
xchg
pushf
js
push
or
pusha
sbb
lods
cld
and
inc
cmp
mov
lcall
jns
xor
jne
je
push
and
emms
les
shll
test
fdivrs
push
inc
cmpsb
jne
test
sub
cltd
pop
inc
cld
push
js
test
pop
pop
add
adc
mov
sbb
mov
push
es
and
cmp
test
pusha
test
and
scas
ret
and
fsubl
repz
lods
ja
inc
push
jbe
pop
jns
les
je
adc
movsl
in
or
ss
fisubrs
test
sub
outsl
in
jb
fsubl
jg,pn
loopne
insb
xchg
push
test
adc
fwait
test
pop
pmaxsw
lods
sahf
data16
or
jl
or
testb
insl
jo
sbb
mov
in
pop
lcall
xchg
pop
lods
add
ret
cwtd
ja
mov
or
fildll
inc
dec
add
out
dec
jo
cwtl
jnp
cmp
je
fimuls
adc
and
sub
sahf
imulb
xor
adc
insb
sub
pushf
bound
fmulp
fiaddl
sub
sbb
push
sub
pop
add
mov
adc
push
jne
adc
sub
adc
movsl
mov
nop
push
outsl
and
cwtl
popf
stc
in
movsl
fnstcw
ret
mov
imul
lds
stc
push
or
dec
adc
jbe
push
sbb
js
jecxz
xchg
ret
lahf
fdivrl
or
shrb
aas
es
fiadds
xor
dec
mov
cmp
rcl
push
daa
iret
test
mov
cli
lret
xor
jb
pop
inc
or
sti
mov
movsb
repnz
rol
mov
sbb
icebp
mov
test
xchg
adc
in
cmp
xorb
adcl
mov
fcomps
mov
pop
mov
enter
mov
ret
pop
call
fdivl
push
das
cmpsl
cmpsb
js
and
mov
mov
mov
adc
inc
iret
imul
mov
aaa
add
ja
jg
fidivl
pusha
mov
cmp
ret
push
orl
mov
inc
out
jmp
scas
xorb
add
fnstcw
shr
mov
inc
dec
mov
xchg
repnz
dec
push
inc
push
fisttpl
pop
rcrl
jecxz
push
dec
pop
movsl
out
add
fcomi
iret
sbb
jbe
xor
cmp
and
fwait
data16
pop
add
mov
lret
mov
fwait
loope
jmp
iret
sub
sub
sub
jne
dec
shrb
inc
pop
push
stc
scas
push
lock
mov
test
fwait
sub
mov
mov
ret
mov
rcl
cltd
mov
jp
xlat
cs
fldt
outsb
inc
or
xchg
push
jecxz
dec
es
iret
insb
add
lods
pop
xchg
lret
jno
movsl
fistps
dec
out
sbb
dec
jns
sbb
cmpb
and
aaa
daa
inc
in
es
dec
movsl
inc
test
mov
push
mov
aaa
test
sbb
jp
or
cmc
sbb
aas
dec
icebp
inc
and
xchg
hlt
sbb
adcb
incb
pop
cmp
or
stos
cmpsb
testb
cmp
xlat
xor
dec
out
pop
push
mov
in
dec
pop
or
ret
jmp
push
dec
push
es
int
mov
mov
call
adc
push
jl
daa
xchg
xor
xchg
pusha
sar
je
sbb
cs
sub
and
add
pusha
mov
addr16
adc
shl
cmp
test
stc
icebp
rcrl
mov
xchg
sub
out
and
xchg
clc
push
adc
iret
ljmp
ret
sbb
scas
rcrb
loop
mov
jl
cmp
add
xchg
inc
pusha
add
add
jbe
mov
fsincos
xchg
ljmp
fs
pop
add
add
cmp
adc
fistpll
fdivr
and
pop
add
sub
fwait
pushf
sbb
cmp
xchg
pop
data16
scas
das
aas
cmpsb
jecxz
jo
cmp
jo
cltd
fadds
and
pop
shr
jecxz
in
mov
mov
push
out
sbbb
mov
mov
sbb
sub
inc
jno
inc
mov
icebp
outsl
xor
in
in
sub
lcall
or
pushf
cmpsl
lret
push
in
sbb
pop
loopne
popf
rclb
in
pop
mov
aas
sub
add
arpl
jge
inc
out
mov
cmp
jb
sub
jo
test
jle
jo
jnp
cld
mov
push
les
pop
xlat
int
xchg
inc
jmp
lret
xchg
outsl
xor
mov
hlt
push
cli
incb
xor
add
pop
in
lret
jo
mov
je
js
xchg
das
or
ds
push
repz
dec
cmp
sbb
push
push
pop
cmp
xchg
mov
fildl
pop
call
mov
mov
enter
dec
cwtl
idiv
cmp
jbe
xor
int3
int3
pushf
xor
mov
out
movsb
adc
aad
cmp
sbbl
push
test
in
hlt
popa
lods
rorb
push
dec
stos
js
test
pushf
inc
push
mov
push
movsb
mov
mov
dec
add
adc
fprem1
inc
stos
test
sub
subl
rorb
lcall
add
hlt
inc
mov
nop
jg
test
rorl
inc
pop
icebp
nop
adc
mov
jno
lea
adc
sbb
lods
fs
sar
cmp
jns
fstl
cmp
aad
mov
in
jg
insl
lods
lods
stc
outsl
sbb
movsl
push
loope
pop
sub
and
sbbl
adc
repz
mov
add
jg
scas
andb
les
xchg
cltd
inc
lods
mov
mov
adcb
popf
idivl
cli
inc
js
je
mov
data16
repnz
push
jne
sbbl
fs
ja
clc
les
mov
xor
lds
add
push
outsb
fldenv
repz
fsubs
or
fildl
dec
mov
imul
mov
jne
and
icebp
mov
loopne
xchg
movsb
xchg
mov
xorb
mov
sbb
and
push
jp
jp
fstps
test
cmp
in
sar
sbb
push
idivb
int3
addr16
cmp
cmp
daa
jmp
lea
mov
cmp
daa
inc
add
mov
sub
pop
imul
xchg
adc
xchg
fadd
ds
and
fisubrs
insl
xchg
xchg
xchg
aad
adcl
pop
aad
mov
and
lcall
leave
push
inc
add
aas
ret
jecxz
pop
mov
outsl
jmp
call
jbe
pusha
fs
xchg
xchg
xchg
aas
jae
lods
and
das
iret
pop
ret
imul
aad
ret
jns
mov
jbe
mov
cmp
mov
push
iret
ja
add
dec
mov
out
sub
dec
incl
mov
inc
sub
cmc
pop
mov
lahf
dec
xor
sbb
popf
mov
out
fwait
inc
jae
adc
fidivs
pop
out
jne
subb
aad
push
fldcw
push
stc
jle
lods
push
scas
inc
stos
pop
cmpl
mov
out
jns
mov
das
test
xor
out
sahf
lcall
or
mov
push
jbe
insb
add
sub
repnz
es
and
mov
inc
xor
sbb
out
in
mov
sahf
aam
fildl
jno
int
inc
add
cmp
mov
mov
nop
mov
add
mov
dec
dec
lcall
jae
mov
movsb
aaa
pop
jae
leave
mov
movsb
out
push
enter
movsb
lahf
lods
pop
sbb
out
add
sub
mov
cmp
sti
lcall
dec
push
dec
dec
outsb
cmp
test
jp
icebp
daa
mov
sub
shlb
push
add
xor
stos
arpl
insl
pop
sbb
inc
hlt
sbb
gs
xchg
push
and
push
adc
dec
jle
sub
push
inc
shl
sarb
fcomip
fwait
iret
div
stc
pusha
adc
lret
pop
mov
das
push
push
pop
lret
cmp
repz
sub
or
movsl
pop
mov
mov
push
pop
jle
xchg
dec
cmp
dec
out
insb
mov
and
xorl
pop
jne
gs
aaa
cmp
push
xchg
insb
aaa
repnz
std
das
aas
mov
data16
stos
sbb
stos
in
cli
pop
shrb
sub
push
lret
mov
std
and
lock
in
ret
addr16
sbb
lds
fsubrs
jno
mov
mov
cmc
movl
push
testb
lods
daa
jb
cs
sti
nop
xchg
fistpll
loopne
ret
test
outsb
cmpsl
rorb
pop
imul
repz
movsb
cld
aad
push
jb
rorl
cltd
dec
and
xchg
pop
imul
cmp
push
jne
inc
test
jo
aad
xchg
lcall
out
imul
imul
inc
lret
mov
inc
xchg
or
sbb
out
pop
sub
jecxz
aaa
sbb
jg
push
lods
cmp
adc
shll
mov
pop
call
mov
and
adc
xor
jp
push
frstor
fldenv
aas
sarl
adc
adc
jge
repnz
dec
idivl
dec
addr16
inc
pop
mov
inc
lea
mov
xchg
push
mov
xchg
xchg
dec
fs
push
int3
inc
jb
xor
cltd
mov
adcb
dec
out
sarl
lret
loop
jp
int3
mov
mov
dec
push
mov
jb
push
lahf
insb
gs
jae
ss
xor
xchg
je
mov
pop
adc
push
cmp
xchg
aam
add
dec
or
push
mov
xchg
cmp
jno
jecxz
and
add
inc
sti
pop
fstps
sbb
add
or
pop
cmc
js
aaa
jge
add
pop
cld
sbbl
or
cmp
sbb
cmp
insl
daa
sub
ljmp
test
dec
inc
ljmp
cmp
bnd
repz
xor
andb
jo
mov
jge
mov
testb
mov
jle
mov
mov
popa
jg
sub
cs
add
xor
icebp
mov
fisubrs
inc
add
les
scas
mov
mov
jo
sub
sub
mov
out
cmp
inc
ds
sub
add
sbb
xchg
in
adc
xchg
popf
bound
xor
mov
push
sbb
imul
ret
call
iret
mov
shll
xchg
adc
enter
sub
add
scas
push
filds
call
loop
fsubrl
repnz
pop
mov
mov
jne
std
sahf
or
inc
or
jb
and
xchg
sbb
jmp
ret
cwtl
je
sbb
push
clc
mov
mov
out
mov
test
cmp
sarb
add
pop
xor
mov
icebp
sub
enter
xchg
aad
aaa
jo
mov
scas
cmp
addr16
mov
bound
imul
iret
mov
and
stc
hlt
insl
inc
iret
xchg
mov
mov
inc
fcomps
fistpl
inc
es
mov
pop
cltd
cmpl
fnstenv
mov
iret
and
clc
fs
insl
lods
outsl
inc
mov
jmp
stos
dec
repz
cmc
xor
paddq
jmp
fwait
or
jae
xor
mov
inc
pop
add
xor
sahf
movsl
or
ds
mov
and
mov
fstpt
pop
jmp
dec
pop
xchg
mov
sub
cmp
jge
fwait
jmp
sbb
push
push
jecxz
cmp
cmp
mov
in
cltd
movsl
das
fiadds
call
jo
pop
xor
test
test
scas
push
xchg
xor
mov
pop
lea
lahf
dec
inc
adc
rorb
jg
cmc
pop
sbb
mov
ret
jp
xor
subb
xchg
cmpsl
inc
addr16
or
cltd
fisubs
and
push
mov
cwtl
enter
adc
mov
sub
rorl
and
xor
xchg
js
adcb
scas
jns
inc
and
cmc
push
cli
sbb
sub
dec
flds
add
xor
test
push
test
inc
and
jmp
xchg
push
inc
sarl
aam
lahf
xor
fwait
add
scas
jp
mov
insb
lahf
mov
outsl
sub
in
cmp
or
enter
das
pushf
xchg
jle
xchg
icebp
divl
inc
sbb
cmc
jp
inc
addr16
dec
adcb
stos
lahf
and
push
lods
pop
enter
fdivp
cltd
lea
sbb
movsl
gs
movsl
dec
cmpl
pop
jns
mov
rcrb
imul
jg
sub
xchg
jmp
fcmove
pop
imul
xor
inc
jae
or
adc
es
sbb
cmpsb
ja
js
test
ret
dec
jecxz
xor
mov
lret
fimuls
in
push
sbb
inc
pop
fnsave
in
test
dec
cmpsl
xchg
imul
jae
jmp
or
in
lds
sbb
in
sub
jno
sti
cltd
int3
sbb
and
cli
popa
outsb
or
pop
jne
data16
mov
ss
push
xor
dec
adc
jmp
pushf
incb
and
xchg
pop
insb
jecxz
test
jo
dec
push
jnp
add
push
lret
inc
movsb
push
mov
pop
popa
xchg
dec
lods
mov
inc
and
lds
sub
push
pop
stos
filds
mov
mov
jmp
xchg
or
xchg
arpl
test
fstpt
or
push
cmp
or
sbb
sub
sbb
mov
cmp
lcall
mov
mov
adc
jge
inc
push
push
or
scas
push
jl
xor
pop
cmpsb
jno
ret
and
insb
movsb
ljmp
sub
cmpsl
movsb
hlt
lcall
enter
mov
stos
fsub
ret
xor
and
ret
sub
sub
imul
add
sub
cmc
rclb
jmp
fs
inc
or
pop
sbb
mov
test
cmpsb
inc
push
imul
es
dec
std
out
into
test
mov
in
dec
add
cmp
ja
std
inc
lods
sbb
push
add
repnz
imulb
pop
repz
pop
or
dec
outsl
into
into
js
addr16
loop
inc
stos
stos
test
jne
or
push
gs
jp
cmc
jno
or
andb
cmpsl
xor
xchg
sti
shr
mov
cmc
xchg
lret
nop
jbe
call
or
push
jno
test
cmp
xor
cmpsb
notb
hlt
dec
addr16
jg
aas
insb
sarl
fs
sub
pushl
leave
mov
data16
idivl
push
jae
rolb
ds
sub
loop
sar
insl
xchg
lahf
add
repz
add
mov
xchg
adcb
shll
bound
sbb
pop
pop
or
and
das
mov
xchg
je
iret
jge
cli
cmp
xor
mov
mov
xchg
fdivs
lds
popa
push
mov
movsb
mov
iret
add
fnstsw
dec
cmp
lret
jle
ret
push
mov
xlat
mov
mov
clc
mov
xchg
mov
das
cmp
dec
pushf
xchg
movsb
mov
xor
repnz
xchg
dec
mov
rorb
pop
adc
xor
out
xchg
jge
mov
inc
push
fucomp
in
inc
xchg
jnp
pushf
out
xchg
jbe
adc
pop
pusha
bound
mov
pop
roll
xchg
movsl
outsl
sub
scas
add
pushf
out
cmpsb
or
mov
movsb
cli
cmp
mov
icebp
and
xor
pop
lea
mov
inc
sbb
in
push
cmp
decb
ljmp
repz
gs
sbb
mov
pop
sbb
add
stos
xchg
ja
leave
inc
sub
ja
addr16
inc
jp
add
aam
mov
call
mov
cmc
xlat
adc
cld
dec
pop
cmp
ds
add
movsb
adc
jns
lds
mov
fistpl
lock
int3
adc
test
inc
mov
jmp
fsubrs
pop
add
in
sub
ret
dec
mov
cmpsb
mov
jnp
adc
mov
xchg
push
push
inc
fisttps
fs
out
pop
mov
mov
jne
fistl
fimull
sarb
push
or
add
pop
loop
ud0
fists
hlt
in
dec
add
mov
shr
mov
mov
fwait
fwait
dec
decl
or
push
mov
in
repnz
pushf
dec
movsb
pop
sbbl
ret
add
push
jmp
xor
jmp
mov
cmpb
cmpsl
fptan
ret
fisubs
pop
push
sbbl
lea
inc
mov
and
insl
xchg
pop
fucomp
inc
clc
adc
int3
and
je
jle
lods
in
mov
mov
daa
ss
daa
insb
and
and
testb
aad
sarl
into
popf
shll
mov
imul
imul
dec
jle
sub
lods
jecxz
movsb
rorl
pop
ja
adc
lods
mov
negl
jl
add
push
xchg
jae
fnstenv
cltd
cli
imul
adc
leave
jns
jp
sub
gs
movsl
scas
add
mov
fisubs
pop
rol
setno
das
push
sbb
addr16
stos
add
outsb
and
cmp
movsl
stc
adc
dec
test
and
movsb
shrl
mov
ljmp
pop
clc
inc
dec
mov
inc
in
arpl
xchg
pop
sub
add
mov
dec
push
insb
pop
and
sub
push
and
add
jne
push
cmp
jno
push
add
push
gs
cmp
je
shrl
add
les
or
add
icebp
push
test
cmp
fstl
mov
push
sarb
imul
and
pusha
adc
add
push
mov
add
dec
int
outsb
cmpb
xchg
jecxz
push
sbb
movsb
mov
pop
fstps
mov
scas
and
popf
xlat
rolb
sbb
xchg
mov
or
and
lock
stos
insl
loopne
bnd
pop
stos
xchg
adc
cs
notb
das
enter
push
shll
cmp
jmp
mov
jno
pop
mov
aad
dec
outsb
jb
rcll
ds
mov
andl
pop
movsb
dec
or
aam
sbb
aas
jo
and
and
xor
std
sbbl
push
push
inc
cmp
lods
push
orl
lcall
or
mov
icebp
jmp
add
repz
dec
push
inc
sbb
repnz
mov
dec
inc
cmp
jne
inc
mov
les
mov
mov
test
jno
enter
xchg
cltd
fisttpl
aas
lods
or
xchg
mov
jnp
sbb
shlb
and
pop
dec
xchg
mov
aad
inc
and
mov
adc
mov
test
jo
mov
dec
fcoml
insl
push
mov
mov
iret
cwtl
gs
lods
addr16
push
jecxz
sbb
adc
sub
ljmp
int
aaa
adc
adc
ss
shlb
int
imul
les
add
cmc
adc
pushf
in
jns
stc
cld
mov
cltd
lods
cmpsl
roll
imul
repnz
xor
adc
ret
pop
push
jno
cmp
pusha
out
adc
int3
stos
mov
adc
cwtl
ja
sub
imul
cmp
or
aad
lahf
pop
icebp
xor
int3
outsl
mov
or
mov
xchg
cmp
test
adc
es
sahf
and
fcos
aaa
jl
mov
dec
push
mov
mov
xor
push
test
xchg
adc
inc
lock
outsl
inc
push
mov
adc
aas
pop
es
test
es
imul
jg
shll
aas
cmc
shll
xchg
or
xchg
add
jne
test
push
aad
fwait
imul
sub
or
or
sbb
pop
ret
into
in
iret
fsts
stos
adc
aas
mov
imul
int
jge
insl
adc
jle
into
xchg
push
lret
xor
mov
lret
es
cmp
ja
cwtl
adc
add
jns
test
add
dec
adc
lea
pop
xchg
xor
pop
mov
cmovno
pop
xchg
out
lea
lock
out
inc
call
jge
sbbb
fdivs
push
in
jecxz
inc
rcll
jno
push
or
dec
xchg
imul
dec
sub
or
sub
les
imul
xlat
jge
xlat
xchg
inc
ret
ficompl
es
lret
jnp
or
inc
adc
adc
mov
adc
push
mov
call
icebp
insl
loope
sbb
in
fmuls
loope
jecxz
iret
jl
scas
add
jno
sbb
mov
std
mov
add
sbb
in
stos
cmp
mov
lds
xchg
pusha
clc
push
xchg
or
aas
or
push
icebp
rorb
enter
push
pop
nop
dec
push
insl
xchg
jne
mov
adc
popa
vmovhps
lcall
aad
pop
pop
test
mov
fdivrp
lret
repnz
add
jmp
sub
roll
mov
push
pushf
cmc
push
push
xor
add
mov
or
mov
aam
std
js
dec
leave
add
lcall
and
sahf
push
adc
pop
cltd
xchg
xor
outsl
inc
dec
fstl
push
fbld
jae
sub
mov
xor
pushf
sub
pop
pushl
mov
xor
mov
mov
lea
repz
cmp
push
lret
mov
sbb
lods
jae
inc
inc
fidivrs
aas
das
add
je
push
ret
sbb
call
xor
imul
iret
mov
lods
stos
add
cli
outsb
sbb
std
and
fisubrl
lret
dec
scas
test
fcomps
mov
sbb
leave
push
out
push
nop
mov
dec
insb
cwtl
or
or
movsl
or
and
stos
xchg
mov
dec
outsl
xlat
add
insl
clc
dec
pop
sub
ret
mov
in
and
dec
add
jns
xor
mov
in
xchg
mov
roll
ret
jae
test
and
push
aad
frstor
addb
int3
popf
mov
js
movsl
dec
hlt
pop
sbb
int3
adc
cli
pop
adcl
adc
lods
ds
inc
jnp
cmp
push
mov
adc
dec
outsl
mov
les
sti
sbbl
mov
push
out
repz
pop
and
dec
ffreep
out
gs
xlat
dec
clc
add
mov
add
aaa
adcl
push
mov
mov
mov
cmpsb
sbb
pushf
outsl
lds
inc
lods
xchg
daa
or
les
cwtl
xor
hlt
repnz
sub
aaa
inc
push
rcr
setne
dec
pop
loopne
fisubl
sbb
out
jl
or
xlat
cmpb
stc
mov
jmp
push
xchg
cmp
lods
dec
pusha
int
ds
jb
dec
pop
push
je
dec
andb
std
mov
mov
push
insl
xlat
movsb
pop
pop
or
mov
out
int
inc
roll
xor
inc
xor
add
jb
fcom
in
add
and
xchg
icebp
jle
sub
jnp
pop
adc
bound
add
cld
into
pop
jno
jecxz
aam
mov
sti
push
in
push
pusha
xchg
sbb
xlat
lret
mov
xchg
ljmp
xor
mov
insb
movb
add
nop
adc
pop
xchg
jne
loopnew
repz
pop
jmp
and
out
adcb
add
or
cmpsl
ljmp
je
cli
inc
outsb
sub
out
jb
imul
test
bswap
inc
push
int3
xchg
nop
dec
rcrb
sbb
inc
inc
movb
cmp
cmpsl
in
adc
pusha
out
addr16
add
mov
mov
or
in
inc
jg
idiv
push
sbb
test
add
push
leave
xchg
mov
and
dec
mov
pause
jge
jge
movsb
fldenv
pop
sub
adc
pusha
xchg
jns
mov
cs
and
fildll
rorl
shr
sub
xlat
repz
data16
loop
loop
insb
mov
xchg
adc
bound
xor
stos
lcall
push
stc
ud2
std
loope
or
xlat
cmp
mov
inc
cmpsl
jbe
loop
mov
jne
xchg
pop
lock
scas
loopne
es
dec
fmul
ja
je
repz
jecxz
jl
xlat
inc
mov
jp
dec
je
pushf
std
mov
scas
jge
cmp
cltd
in
pusha
scas
call
and
cwtl
sti
stos
test
pusha
lods
mov
rorl
packssdw
jns
cs
cli
mov
inc
xchg
bound
std
pop
push
dec
iret
jle
std
mov
mov
xchg
js
push
cmc
fs
loope
xchg
dec
push
out
in
sbb
negb
lret
dec
lods
and
or
pop
xchg
push
leave
loop
test
sarl
mov
push
test
inc
nop
add
addr16
push
push
pop
xchg
orb
inc
mov
xlat
js
pop
mov
mov
sbb
pop
ss
negb
leave
dec
mov
xor
in
mov
out
decb
sub
in
imul
in
ds
mov
xor
xor
inc
sbb
repnz
push
out
flds
mov
in
mov
jge
or
out
jnp
fwait
pop
movsl
mov
stos
add
pop
mov
lahf
test
jne
and
adc
inc
test
mov
xchg
bnd
cwtl
inc
cmp
xor
enter
inc
xlat
xchg
iret
xor
sub
maxps
mov
xchg
fstpl
shr
shll
lods
les
lret
jle
fwait
mov
ljmp
adc
or
push
push
dec
hlt
ljmp
mov
jl
popa
xchg
xorb
movsl
push
xchg
mov
jno
loop
dec
stos
lods
jbe
add
test
scas
test
jns
mov
pop
jns
pop
fwait
pop
dec
and
mov
imul
cmp
jp
sbb
pop
sbb
xchg
inc
adc
call
inc
rol
or
sub
ljmp
cmp
jb
out
aas
xchg
neg
fiaddl
pop
lahf
and
in
push
dec
adc
pop
sub
dec
orb
and
fidivs
sbbl
pop
jbe
fwait
jo
mov
push
insl
js
mov
ret
ljmp
jbe
js
loopne
add
sbb
lea
fisubl
sti
inc
pop
outsl
aad
imul
in
and
les
icebp
rol
jbe
jb
mov
loope
push
test
ret
jo
cld
push
mov
jmp
or
popl
fstl
push
push
inc
fmul
stc
dec
es
add
and
jg
inc
mov
stos
add
arpl
mov
pop
aad
mov
hlt
jae
addb
xchg
mov
sahf
jge
cmpsl
pop
push
adc
and
mov
and
adc
out
cmp
rcl
jmp
dec
leave
dec
inc
sub
test
cmpsl
rcrl
jne
push
lcall
popa
jb
pop
scas
cmp
clc
movsl
imul
ror
imul
dec
pop
mov
test
pop
ret
test
jo
push
mov
xchg
push
mov
cmp
fldenv
popf
xor
lea
andb
sbb
js
mov
or
aad
adc
sti
imul
cmp
inc
xchg
adc
sbb
sub
mov
lahf
test
and
fidivl
data16
lret
or
or
out
sub
jae
cmp
push
jl
repnz
mov
pop
and
mov
mov
jno
mov
xchg
sarl
lcall
shrb
inc
mov
sbb
test
or
lods
jbe
push
imulb
rorl
in
cmp
pop
loope
shrb
sahf
sbb
add
pop
mov
push
shr
dec
sar
pop
test
add
or
scas
into
imull
sub
in
jmp
push
sbb
jae
rcrb
cwtl
pop
pop
andb
xchg
xchg
jmp
or
lods
jle
push
hlt
pushf
fldt
pop
sbb
fidivl
inc
adc
insb
mov
mov
dec
jnp
clc
mov
xor
sub
std
mov
xchg
mov
lahf
test
aam
fcmove
movsl
jecxz
push
cmpsb
sbbb
mov
inc
mov
sub
std
pop
lret
cmp
pop
pop
jb
out
xorl
ret
inc
xor
enter
cld
adc
loope
adcb
push
mov
outsl
lahf
call
inc
inc
sbb
ret
mov
jmp
stos
sub
inc
cs
sti
mov
pop
ret
ds
ds
xchg
lea
sbb
fstpt
dec
mov
scas
cmpb
stos
imulb
push
test
outsl
pop
in
out
loope
lahf
dec
mov
push
fcoms
jnp
or
dec
dec
stos
push
lds
and
xor
pop
jg
or
fcoml
pop
pop
sti
enter
sub
popa
addr16
outsb
or
inc
sbb
cmp
loopne
insb
nop
movsl
dec
outsl
sub
jmp
dec
sbb
test
xchg
push
mov
cwtl
mov
dec
push
add
test
and
ljmp
add
sub
loopne
int3
popa
loop
sahf
js
test
jnp
cmpsl
adc
je
data16
xchg
sbb
jecxz
pop
jmp
mov
adc
mov
xor
pop
flds
dec
jne
test
add
insb
sti
push
push
stos
adc
sti
stc
mov
out
sti
mov
mov
jns
mov
out
inc
inc
pop
in
xchg
jmp
popa
mov
mov
or
xor
repz
add
mov
lcall
xor
pushf
jle
mov
dec
aaa
cmp
jecxz
test
into
adc
mov
sub
es
sbb
int
sbb
jge
inc
les
out
cli
arpl
in
pop
mov
mov
cmp
ret
jp
inc
out
inc
jl
je
jp
int3
pop
and
sub
mov
fwait
pop
lret
and
pop
and
les
jmp
pop
sub
or
cmc
mulb
pushf
jp
sbb
inc
inc
fbld
sbb
xor
test
cmpsb
and
pop
sti
pop
repnz
fisubrl
in
mov
mov
jmp
outsl
cmp
movsb
pop
add
inc
enter
sub
lock
push
sbb
ljmp
jae
cltd
adc
pop
xchg
int3
pop
stos
repz
out
mov
inc
ja
push
pop
push
mov
sub
stos
adc
pop
add
scas
cmpsb
pop
jne
rorl
sbb
outsb
mov
test
insb
test
mov
ret
fs
push
push
roll
stos
lea
shl
mov
jbe
or
mov
xchg
or
sub
add
lahf
scas
add
outsl
loopne
mov
xor
shrl
insl
rorb
incl
xchg
sbb
jp
pop
mov
cmpsb
push
or
or
fisttpl
inc
push
roll
out
lock
xchg
or
popa
dec
push
cmpsb
or
or
enter
shrb
shll
popa
push
sbb
dec
pop
ficompl
and
fs
mov
pop
jbe
pop
sub
adc
popf
inc
xor
xor
dec
scas
xadd
mov
inc
stos
pop
mov
rorl
fsubrs
and
cmp
loopne
mov
ds
jnp
outsl
into
mov
push
mov
jp
xchg
std
cmpsb
push
inc
je
xchg
out
cmp
xchg
and
mov
or
in
fwait
out
push
int3
sub
es
adc
iret
pop
out
mov
or
aaa
dec
mov
and
iret
push
mov
mov
mov
push
out
and
pusha
jecxz
ss
xchg
sub
jno
ds
xchg
lret
mov
data16
fwait
daa
pop
mov
dec
jg
sub
push
das
mov
xchg
ds
fwait
dec
icebp
fs
ljmp
xchg
gs
xchg
scas
add
stos
jle
sbb
jb
sbb
mov
mov
js
adc
or
inc
mov
sti
xchg
sbb
data16
add
scas
ss
stc
iret
lret
in
xlat
inc
sbb
or
jp
push
in
arpl
test
mov
ja
mov
and
lds
dec
loope
into
jae
scas
add
xchg
mov
sbbb
aas
shrb
push
jge,pt
cwtl
mov
or
lea
fistpl
pop
push
adc
je
ror
daa
fstps
adc
sbb
and
push
outsb
xor
pusha
ret
mov
scas
xchg
sahf
push
dec
sbb
ret
repnz
jl
js
out
push
int3
cwtl
xchg
cltd
dec
daa
jno
in
aam
jb
xlat
repz
and
mov
das
scas
jnp
push
out
stc
mov
mov
adc
testl
add
rorl
mov
inc
into
xor
push
dec
push
movsl
in
push
scas
xchg
push
cmc
movsl
push
dec
add
sbb
repz
sbb
sbb
scas
pop
sub
pop
mov
call
pop
dec
sbb
lods
xor
jbe
lret
sbb
movsb
aaa
into
mov
std
mov
shl
push
mov
mov
jmp
les
jb
iret
in
iret
call
jne
mov
pushl
jl
push
xor
gs
pop
stos
sub
pop
mov
sbb
rolb
dec
xor
xchg
cmpsl
out
or
insl
adc
inc
ds
push
mov
add
pop
into
imul
jae
or
sbbb
pop
ss
or
sub
mov
jbe
mov
jp
mov
and
mov
aad
xchg
sub
pop
dec
push
mov
xchg
xor
outsl
bound
jmp
pusha
leave
push
stos
jnp
daa
jb
fmuls
pop
cmp
out
push
lea
xor
addb
dec
mov
shlb
fs
into
fnstenv
dec
push
or
fxch
xchg
xorl
inc
cmp
jo
or
mov
dec
sbb
cmc
outsb
xor
mov
mov
push
in
dec
xchg
test
sahf
xchg
jns
es
dec
stos
and
gs
movsb
sub
jo
loope
enter
cmp
or
andl
jg
and
push
jecxz
std
inc
enter
iret
push
adc
sub
sbb
repz
adc
cmc
push
icebp
loopne
pop
sti
std
ljmp
mov
and
insb
jp
adc
xchg
inc
cmc
push
sbb
rcrb
sbbl
jl
adcl
sub
and
dec
cmp
aas
xchg
dec
stos
push
scas
add
popa
pop
test
mov
dec
lcall
outsb
mov
and
cmp
push
mov
fwait
add
sbb
push
push
jbe
jnp
jge
and
pop
xchg
lret
xchg
repnz
jbe
cltd
jge
pop
xchg
dec
jle
mov
mov
filds
xchg
sub
pop
and
out
sub
nop
mov
cltd
in
ljmp
imul
sbb
stc
adc
mov
xchg
add
or
in
clc
loope
mov
pusha
in
mov
pop
mov
mov
xchg
cmp
lahf
jg
dec
out
xchg
pusha
jo
jge
aas
jl
test
adc
clc
inc
push
sti
jg
jmp
sti
out
jmp
xor
sahf
mov
sbb
lret
mov
sbb
nop
add
fs
mov
mov
testb
fcoml
add
push
jo
xor
sbb
xchg
or
add
lret
jo
nop
and
sbb
orb
xchg
fcoml
xor
inc
sarl
xor
mov
xor
sarl
cmp
xchg
ljmp
lock
mov
mov
pushf
movzbl
push
push
mov
mov
jmp
ljmp
imul
adc
mov
pusha
stos
cmpsl
popa
lcall
test
fcom
mov
int3
das
pusha
cmp
dec
sub
pusha
jp
mov
inc
outsl
sahf
test
icebp
xchg
push
cmp
mov
mov
or
mov
in
mov
lahf
dec
add
fidivrl
in
jno
sbb
mov
sbb
lods
nop
stos
aas
mov
out
out
push
fadd
imul
std
int
shr
adc
aas
push
fs
xor
sbb
mov
repz
ljmp
dec
add
adc
xor
out
inc
lods
push
scas
rcrl
mov
pop
es
fildll
cmpb
mov
mov
pop
xchg
aaa
jge
clc
das
and
cld
sub
or
mov
das
int
cmp
cltd
mov
orl
push
rcrl
mov
addr16
repnz
xchg
call
scas
movsb
push
mov
pop
push
push
jle
cltd
jge
mov
add
dec
out
mov
lock
xchg
push
icebp
pop
xchg
inc
pop
sub
ja
lock
out
cmc
imul
negb
ret
inc
cmpl
jl
add
addr16
push
ljmp
push
jne
xchg
pop
cmp
push
inc
scas
and
mov
and
jb
adcb
hlt
ljmp
mov
pop
mov
pop
fistpl
scas
push
sub
or
stos
adc
mov
mov
push
pop
scas
stos
cmp
lcall
sub
dec
jne
jecxz
pushf
insl
out
outsl
and
aaa
aad
cs
aad
sbb
cwtl
fdivl
lods
int
imul
shlb
ret
or
cmp
mov
mov
bound
and
mov
not
fldenv
rcl
sbb
rolb
cltd
bound
xor
in
jle,pt
jo
test
pop
sbb
into
fwait
pusha
mov
stos
sti
lahf
mov
subb
lea
ds
imul
loope
mov
jnp
addr16
add
movsb
rorl
adc
clc
add
outsl
dec
cmp
xchg
pop
sti
adc
shlb
jo
mov
test
jge
and
inc
ja,pt
xlat
pop
inc
mov
out
sbb
and
andb
frstor
jne
inc
repnz
rolb
imul
pop
nop
mov
sbb
and
inc
lahf
push
sub
mov
in
xchg
inc
sbb
rol
mov
call
cmpb
fwait
sub
inc
pop
sti
xchg
push
icebp
in
jns
and
es
lods
arpl
push
fs
add
jno
pop
inc
addr16
das
xchg
daa
jle
stos
xchg
cwtl
adc
daa
leave
inc
add
int
and
dec
cmp
inc
cmpsb
std
dec
mov
dec
es
scas
incl
add
test
dec
imul
mov
xor
scas
mov
aad
and
cmc
xchg
or
test
fs
pop
xchg
push
lods
push
inc
xor
inc
add
mov
xlat
leave
stos
testl
and
jnp
mov
mov
mov
fisubs
loopne
and
adc
mov
jge
mov
or
sbb
outsl
std
mov
pop
xchg
push
lea
repz
xchg
push
cmp
cs
jmp
pop
push
xor
or
fdivr
inc
xor
test
jcxz
icebp
negb
mov
sbb
dec
jnp
dec
ds
pop
jecxz
cltd
add
pop
mov
xchg
out
rcrb
cmpsb
fildll
pop
xchg
mov
lret
out
stos
sti
or
shr
adc
loopne
mov
cltd
scas
xchg
fwait
lret
sub
cmp
push
sub
xor
sub
in
mov
or
movsl
jns
pop
adc
pusha
mov
lds
mov
aaa
stc
prefetchw
into
jg
sub
loop
rcrl
loope
std
sub
push
sbbb
jbe
out
icebp
mov
jbe
std
lock
sarb
int
sbbb
add
inc
mov
sub
fidivrs
adc
aam
dec
nop
lcall
fiadds
mov
movsb
scas
sub
negb
jl
jbe
neg
mov
je
mov
push
stos
fsubl
scas
or
xor
pop
mov
movsb
jno
dec
stos
clc
shll
aad
scas
cmp
ja
mov
sub
pushl
or
idivb
mov
or
mov
stos
mov
loopne
dec
push
jge
insb
push
mov
xchg
rolb
test
sub
lock
fsubs
jl
sub
mov
aaa
cmpsb
inc
jmp
lods
add
in
pushf
fwait
lods
mov
clc
inc
mov
xor
push
sub
xor
inc
je
pushf
pop
mov
cltd
repnz
aam
insl
test
inc
xor
aad
stc
xchg
sbbl
push
cs
rclb
push
cmp
push
arpl
push
jne
test
enterw
mov
out
jbe
loope
in
repz
pop
fidivs
pop
sbb
ljmp
sahf
mov
push
jae
and
sbb
jmp
ret
add
push
sub
loope
ret
cmp
lds
dec
mov
push
push
xchg
popf
sbb
mov
loopne
dec
mov
fisubrs
lret
jbe
mov
mov
mov
inc
xor
lahf
lods
out
aad
jae
mov
mov
mov
iret
and
flds
test
nop
sbb
inc
sbb
cwtl
adc
cld
loope
jae
push
sbb
stc
push
aad
xchg
roll
xchg
or
outsb
xchg
call
ljmp
shlb
and
icebp
xchg
movsl
adc
aas
cmpl
or
cmp
imul
cmp
jbe
in
lock
lahf
dec
test
or
sub
and
jbe
jnp
mov
push
popf
xor
cwtl
mov
icebp
push
sbb
inc
mov
mov
cmp
push
out
xlat
mov
jo
out
xchg
push
mov
test
pop
enter
mov
push
add
lds
movsl
rorl
push
scas
lea
push
and
int3
in
inc
pop
push
repz
std
jbe
aam
ret
mov
dec
and
xchg
lock
cmp
mov
lret
xor
nop
int
ja
jmp
pop
enter
fisttpl
xor
push
stos
out
test
stc
inc
stc
aas
or
inc
das
dec
inc
jg
xchg
dec
dec
adc
int3
push
xor
cli
and
daa
and
sbb
outsl
pop
lea
out
or
pushf
lcall
int3
mov
cltd
data16
jl
pop
adc
mov
das
out
xchg
cmp
lds
dec
imul
cli
addr16
pop
or
jb
adc
in
mov
mov
aaa
clc
or
inc
call
ljmp
jbe
add
pop
pop
mov
ret
xchg
and
xor
or
dec
push
pop
lods
in
test
leave
es
movsl
mov
inc
pop
xchg
test
xchg
mov
dec
movsl
call
fadds
or
jnp
adc
xchg
sti
mov
in
shrb
mov
xlat
gs
scas
in
das
outsl
mov
push
mov
pop
add
sub
lods
imul
xor
mov
pop
fsubl
repnz
loop
leave
arpl
lods
jne
je
ror
pop
jns
iret
int3
mov
loop
pushf
test
add
xchg
jp
lods
test
or
repnz
imul
jle
leave
push
pop
sbb
dec
push
push
add
mov
mov
pusha
addr16
stc
sub
loopne
jp
cltd
mov
pop
pop
push
or
sbb
and
cmp
cld
loop
xchg
pop
add
imul
shlb
cmpsb
sbb
insl
rcl
xchg
daa
xchg
in
sahf
lret
cmp
call
test
jne
mov
push
stos
and
inc
lods
shrl
dec
sbb
ror
or
mov
arpl
dec
pusha
xlat
fwait
call
lahf
hlt
leave
jb
push
shlb
or
lea
fsubs
adc
mov
decl
push
sahf
outsl
pop
and
jl
fwait
scas
xchg
push
cld
pushf
loope
push
stc
mov
push
imul
sub
inc
jnp
andb
cld
jnp
ss
xor
in
repz
shl
ret
sub
sub
xchg
lret
sub
xlat
and
cld
fadd
add
loop
les
gs
cmp
sub
and
mov
pop
cli
cmpl
fdivr
mov
lea
outsb
and
int
inc
mov
sbb
out
jp
and
push
iret
aaa
mov
testb
cmp
je
andb
arpl
imul
enter
lret
xchg
out
cmp
add
popf
cmp
mov
jnp
jmp
call
and
inc
push
test
jmp
jl
sahf
add
xor
dec
xor
insb
pop
cmp
sbb
out
adc
jl
dec
cmpsl
push
cld
push
cmpsl
int3
sub
push
mov
xor
test
pop
pop
or
imul
xlat
fmul
xor
mov
xlat
in
mov
xchg
or
sahf
scas
insb
push
fiadds
xchg
push
or
lar
in
data16
imul
dec
or
cmp
xor
scas
jnp
pop
cmp
push
jbe
cmp
nop
cs
xor
in
clc
es
in
andl
mov
xchg
scas
xlat
popa
jecxz
sub
xchg
ja
jecxz
sbb
mov
mov
movsl
subb
sbb
out
push
loop
cmp
in
sbb
cmp
lea
push
test
sub
adc
and
dec
fnsave
and
and
lret
fstpt
lods
daa
data16
std
xchg
jmp
push
insl
das
jno
lods
flds
cld
add
popa
mov
test
cli
in
mov
sti
xor
xchg
data16
and
add
add
stc
mov
pop
mov
rcll
or
leave
scas
ds
mov
mov
push
dec
and
mov
push
jmp
lods
cwtl
cmp
insb
and
sub
mov
fistpl
pop
xor
lds
mov
or
repz
insl
push
test
jae
fadds
scas
pop
sub
push
push
or
fstl
cmp
adcl
add
sarb
pop
ljmp
inc
fistl
sbb
out
orl
aad
call
jns
mov
cmp
inc
pop
add
pop
test
pushf
add
mov
out
lahf
add
xchg
push
sub
pop
ja
aam
ficoml
iret
sub
test
pop
lds
bound
inc
ja
dec
or
scas
push
idivb
add
clc
adc
mov
xor
imul
ja
mov
inc
xbegin
mov
sarb
sbb
sub
push
test
test
movsb
xchg
call
test
aas
movsb
cmp
xchg
gs
push
mov
mov
inc
imul
push
int
sbb
xor
out
movsl
xchg
fwait
mov
adc
jno
ficompl
mov
popf
cmp
xchg
cmpl
out
call
add
out
outsb
jmp
sbb
sub
sbb
shll
aas
icebp
scas
js
xchg
data16
loope
ja
test
out
sub
pop
push
fdivs
or
std
jecxz
popf
iret
add
arpl
push
inc
insb
call
sbb
leave
xchg
xchg
jne
push
inc
adc
imul
in
mov
sbb
adc
andl
hlt
inc
iret
out
lcall
push
pop
sub
fwait
adc
sarb
mov
jns
mov
cltd
push
jl
mov
iret
in
scas
lods
dec
xor
xchg
nop
out
jb
cmp
or
fld1
shl
mov
adc
in
pop
add
xorb
adcl
cmpsl
lods
add
daa
dec
adc
rcl
ret
jg
into
into
add
into
ret
dec
cmpsb
outsb
mov
cmp
cmp
jb
call
das
jbe
lods
in
aas
syscall
sub
mov
rcrl
cltd
cmp
sub
jo
es
mov
lahf
pop
sub
or
inc
int
pop
fmul
jmp
pop
leave
mov
aaa
iret
roll
lea
stos
cmp
int
std
imul
sbb
dec
in
push
adc
inc
mov
adc
clc
cmp
scas
lahf
xchg
push
xor
xchg
sbb
idivl
inc
mov
push
out
and
loop
invd
in
pop
fcoml
and
mov
xchg
pop
out
mov
sub
dec
mov
cltd
add
jnp
cmc
xchg
mov
mov
mov
mov
lds
adcb
ljmp
imull
pop
jp
fadds
fs
stos
dec
daa
js
imul
sub
cmp
call
shrl
xlat
cmp
jns
test
pop
xor
jmp
repz
sti
mov
loope
push
test
test
jle
and
add
stc
and
imul
in
std
ljmp
adc
hlt
jecxz
cli
jl
rdpmc
push
xchg
mov
jge
push
test
pop
sbb
dec
lcall
jnp
mov
mov
in
adc
ja
cld
push
scas
in
ss
jmp
orb
aam
outsl
adc
fsubs
mov
stos
enter
lds
aas
mov
mov
sbb
lods
lcall
inc
mov
outsl
xchg
cmp
gs
lcall
push
push
or
jnp
mov
add
add
xor
jmp
fdivr
jnp
jne
ret
fdivr
sub
aaa
jne
ljmp
lcall
sub
cwtl
mov
cmp
dec
lret
in
mov
jl
xlat
hlt
push
int
push
or
adc
loope
mov
jb
dec
dec
sbb
add
outsb
sbb
pop
and
mov
lahf
orb
clc
imul
fcoml
in
into
adc
sbb
and
cmp
mov
mov
int
sub
adc
inc
shlb
std
hlt
jp
cmp
push
jmp
and
cld
mov
dec
out
push
inc
int
xchg
test
adc
or
mov
push
pop
mov
mov
cmp
sub
push
dec
dec
push
push
pop
inc
adcl
xor
xchg
mov
jnp
sti
cmp
mov
enter
jbe
push
jns
push
sbb
jbe
pop
pop
mov
mov
sub
xor
cmp
mov
xchg
adcl
arpl
stos
stos
sbb
rcl
push
or
jo
lods
jo
cmpsl
xchg
ss
ljmp
lods
cmpsl
mov
aad
jo
popa
push
push
jg
lods
xchg
dec
add
bound
mov
add
xchg
pop
cmc
push
jnp
je
or
lret
fsts
in
push
aaa
sub
scas
ret
imul
push
jns
add
or
out
jo
mov
pop
icebp
lock
sbb
cld
cmp
stc
or
mov
mov
mov
icebp
dec
dec
bound
es
cmp
fistps
xor
sub
cmp
das
and
or
aas
nop
and
jno
cmpb
push
negb
divb
mov
or
imul
lea
push
xlat
mov
cwtl
dec
fwait
in
insl
outsl
pop
dec
movsl
sub
lock
loop
loop
outsl
xchg
xchg
fdivrl
xchg
mov
xchg
mov
xor
je
xchg
clc
mov
ds
fstl
rcll
enter
aam
pop
inc
or
ret
sahf
xor
cmp
in
lock
push
repnz
or
mov
mov
shll
mov
cld
out
adc
shr
mov
outsb
xlat
stos
xor
xchg
cmp
push
push
je
add
sbb
outsb
or
leave
popa
ds
sti
out
icebp
mov
sahf
push
pop
xor
inc
mov
push
add
jno
inc
test
imul
stc
cmp
push
dec
mov
jno
aad
stc
andl
cli
scas
test
je
jle
dec
jp
pop
in
mov
fisubl
ficoms
inc
mov
popaw
fidivl
mov
xor
aam
mov
es
scas
pop
xchg
inc
cld
pop
cmp
pop
rorb
adc
xchg
fwait
sbb
mov
dec
imul
mov
sbb
add
pushf
cltd
and
ja
rcr
inc
mov
fcmovnu
add
sub
cmp
xchg
push
inc
inc
xor
outsb
aas
pop
sub
mov
cmp
cmp
xor
or
jge
fwait
jae
cmp
mov
mov
add
inc
test
inc
sub
decl
insl
jae
push
push
mov
mov
mov
aam
ja
mov
xor
lea
cmpsb
pusha
and
inc
jmp
test
outsl
aam
xchg
repnz
dec
push
xchg
sub
cmp
mov
je
inc
sub
sbb
lea
mov
mov
push
and
sahf
js
mov
shrl
cmp
cmp
fs
pop
fcom
xchg
arpl
sti
sar
mov
mov
loope
enter
psubd
shll
jle
mov
lods
cli
xor
arpl
mov
inc
fwait
cmp
scas
testl
daa
data16
or
icebp
jo
lret
sbb
inc
jecxz
and
adc
mov
fbstp
testb
jle
push
and
adc
add
out
movsb
push
mov
mov
in
sbb
sub
repnz
shrd
inc
test
iret
leave
pop
push
sub
xor
xchg
cmpsb
inc
ret
sti
cmp
sub
lods
xor
aam
pop
mov
mov
test
icebp
mov
test
std
gs
sbb
mov
cmp
imul
pop
xlat
insl
fcmovne
in
xchg
or
pop
lret
sarl
push
sbb
test
jne
jb
cmp
and
lret
inc
and
and
inc
lea
sub
aam
xchg
scas
rolb
lahf
push
les
scas
cmp
jle
std
ret
sahf
popf
inc
push
cs
les
lods
bound
or
or
inc
rol
jge
and
inc
mov
mov
filds
rcrb
mov
add
push
push
movsl
cmp
loop
dec
dec
cli
adc
xchg
xor
popf
aaa
cmp
popf
inc
jne
popa
mov
adc
pop
push
pop
nop
test
cwtl
mov
and
adc
and
mov
mov
pop
push
inc
rolb
repnz
push
pop
sarb
divb
and
fstpt
call
xor
mov
pop
pop
lahf
pop
jns
std
fsubl
dec
sti
jp
aam
jge
loop
mov
xchg
mov
or
dec
lret
sti
mov
inc
jl
cwtl
ljmp
orb
inc
xchg
adc
sub
fcoml
stc
or
xchg
add
mov
scas
hlt
pop
lock
xchg
push
cmpsl
sbb
push
jl
loopne
cmc
mov
and
pop
pop
sti
pop
push
push
adc
add
mov
jmp
jbe
icebp
out
popf
enter
or
mov
lds
sub
int3
insl
je
imulb
bound
add
jno
cmp
jb
mov
insl
and
sub
ja
outsb
pop
inc
cmp
push
cwtl
pop
in
movsl
pop
nop
mov
push
enter
fdiv
mov
sub
arpl
cltd
mov
icebp
insb
jmp
pop
mov
lahf
sbb
or
mov
scas
mov
mov
fsts
pop
movsl
pop
xchg
cmp
pop
lods
inc
jns
rol
xchg
or
sub
add
jnp
sub
jmp
pop
mov
add
fstps
test
pop
pop
dec
cld
jb
inc
loop
xchg
push
mov
inc
scas
cmp
mov
scas
pushw
fs
dec
mov
test
daa
adc
sub
add
mov
mov
cmp
xchg
lods
ja
scas
sub
inc
adc
pusha
xchg
int
pop
lea
subb
jno
imulb
xor
pop
and
ljmp
or
mov
orb
or
jle
sub
mov
mov
inc
gs
rcll
lcall
or
rclb
into
sbb
xor
jmp
ret
jg
xor
sub
or
xchg
data16
sbb
repnz
bound
jb
jl
insb
and
and
cmp
and
mov
mov
iret
jne
ds
dec
mov
jbe
repnz
add
aaa
scas
push
cld
push
and
in
scas
in
sbb
cld
jno
jns
adc
loopne
cmc
test
adc
lahf
rolb
ss
push
sbb
das
fisubl
test
pop
add
arpl
push
cwtl
addr16
leave
pushf
pop
popf
and
dec
cmp
jle
xchg
adc
xchg
imul
sbb
push
jmp
xchg
loop
daa
sub
push
in
mov
xor
lret
fdivp
mov
test
fs
pop
test
pop
xchg
mov
cmovs
adc
pop
lahf
add
and
inc
imul
dec
roll
mov
or
push
shrb
shll
mov
mov
push
xchg
ja
jmp
out
push
in
jge
cmpsl
cmpsb
jg
add
nop
push
push
iret
cmp
fdivrl
and
sti
movsb
xor
or
imul
divl
add
movsb
je
jp
mov
adc
mov
scas
ret
inc
push
int
mov
pop
xor
rcll
add
ret
mov
and
push
sub
stc
mov
xor
into
xchg
sbb
lahf
xchg
sbb
mov
mov
in
ret
int3
addr16
jp
add
xchg
enter
jecxz
inc
out
cli
fs
xchg
cmpsb
roll
sbb
mov
in
sub
push
cmpsl
cld
push
add
ljmp
pop
insb
sbb
clc
popa
sbb
rclb
push
cmp
arpl
fwait
lret
xor
das
push
test
dec
movsb
out
xor
pushf
jge
pop
iret
sub
xchg
and
xor
and
in
inc
add
arpl
cmp
sub
push
dec
ja
push
cmp
incl
pop
rclb
sbb
fcoml
out
std
inc
sbb
mov
retw
xor
dec
xchg
les
mov
inc
xor
scas
mov
or
lock
sub
addr16
out
testl
scas
idivl
dec
pop
lds
push
mull
loop
fsqrt
test
adc
repnz
jne
shr
push
cld
inc
and
in
cs
fdivl
dec
cld
ljmp
push
mov
hlt
add
cwtl
das
in
xchg
push
cmp
dec
xchg
push
mov
pushf
fists
fnsetpm(287
sbb
cmp
aam
repz
xor
rorl
stc
mov
stos
pusha
popf
shlb
test
dec
int
scas
das
ljmp
inc
xor
test
insl
mov
imul
clc
in
mov
push
mov
cmp
inc
inc
dec
lcall
pop
and
sarl
push
bound
pushf
out
lret
and
movsl
push
stc
xchg
xor
subl
rcll
jo
jns
lahf
adc
fsubrs
in
test
outsl
enter
mov
mov
cmp
int3
movsl
mov
out
jb
jmp
xchg
ss
pusha
and
or
or
and
sbb
pop
pop
adc
jmp
jp
sbb
mov
call
fdivl
or
cmp
mov
inc
jg
aaa
and
lahf
mov
je
dec
dec
das
push
ret
push
ss
ja
out
dec
out
sub
sub
jge
and
dec
movsl
es
fcoms
imul
inc
ss
jmp
dec
fadds
mov
cli
int3
cmc
movsl
pop
push
repz
shrl
mov
aas
xlat
push
pushf
push
sbb
pop
push
ret
add
aas
loopne
rclb
icebp
in
adc
push
and
jmp
sbb
ror
icebp
adc
jns
cmp
pusha
xor
js
in
push
aad
cmp
mov
push
int3
pop
adc
inc
or
pop
mov
add
jne
out
sub
je
push
sar
sbb
jecxz
in
in
inc
cmpl
stos
icebp
sub
iret
clc
sbb
and
imul
out
inc
push
out
movsb
and
mov
mov
dec
cmp
push
mov
mov
jg
pop
addr16
xchg
je
push
sti
jo
dec
scas
pop
cltd
pop
movsl
outsb
push
fs
test
xor
in
push
idiv
push
jns
xor
xor
stc
mov
sarb
adc
mov
popa
inc
aas
cwtl
out
cmc
mov
rcr
sub
clc
push
xchg
jo
adc
nop
inc
lret
fxch
idivb
frstor
push
pop
test
sub
pop
out
xchg
mov
pop
fwait
jmp
in
imul
push
cld
icebp
out
inc
jp
lea
pop
lds
sub
test
add
jb
inc
add
xchg
std
inc
xchg
dec
jns
cmc
mov
xor
sub
pushl
xor
mov
mov
xor
pushf
cmp
sbb
xchg
shl
neg
cmp
pop
or
dec
lea
in
mov
mov
lods
inc
jle
jne
lahf
xchg
pop
add
pop
or
sbb
nop
cmc
pop
cmc
xor
mov
incb
mov
sbb
or
push
repnz
sbb
jo
pushf
xchg
cltd
sub
jns
push
adc
jge
cmpsb
push
push
sbb
fimuls
aam
ret
cmovp
mov
xchg
add
jb
and
test
adc
rcr
sbb
mov
popa
movsl
repz
xchg
sbb
stos
inc
mov
add
stc
xchg
xchg
pop
push
mov
dec
mov
xchg
adcl
mov
inc
repz
loope
pop
jne
xor
enter
xor
mov
push
ds
pop
adc
cmp
sbb
and
cmp
inc
push
jns
xor
sub
add
mov
pop
inc
pop
or
lock
loopne
idivl
mov
sbbb
call
xor
mov
test
push
jge
mov
stc
mov
mov
cmpsb
imul
int3
jbe
lods
dec
sti
jmp
lret
add
cmp
mov
cwtl
inc
jbe
test
xchg
insb
and
imul
xchg
pop
mov
shlb
inc
or
in
adc
js
xchg
pop
in
imul
push
mov
mov
pop
pop
flds
xchg
cmpsb
jbe
sahf
mov
leave
xor
jne
rorb
arpl
popf
lahf
and
push
mov
jbe
out
xchg
loopne
sbb
scas
sub
outsb
gs
cmpsb
popf
imul
jo
rol
cmp
ds
icebp
jnp
int
push
sbb
lods
pop
ficoms
xchg
mov
inc
stos
mov
iret
xchg
lret
ds
sti
cmc
cmp
pop
jmp
incl
mov
push
xchg
adc
pusha
cmp
push
xchg
insl
push
or
lds
jp
in
roll
orl
rcl
or
cmp
aam
sub
push
xchg
sub
xchg
push
enter
xor
jnp
nop
push
fwait
dec
mov
pop
loopne
and
test
mov
jbe
push
cwtl
xor
xchg
dec
add
sbb
and
push
cmp
ret
pop
sbb
and
cmp
outsb
pusha
ficoml
iret
inc
jecxz
pusha
inc
pop
inc
fwait
repnz
pop
je
mov
cmp
iret
xchg
popa
cltd
xor
xchg
xchg
xor
aad
insb
or
fdivrl
stos
xor
mov
adc
push
addr16
cmpsl
mov
out
xchg
or
mov
repnz
cld
test
pop
pop
push
mov
lods
push
stos
mov
arpl
scas
pop
icebp
mov
adc
iret
in
test
sub
xchg
lcall
or
cmp
sub
push
lret
mov
flds
aad
dec
jne
hlt
sbb
les
mov
mov
leave
pop
inc
ss
in
movsl
xchg
or
cmp
jge
mov
cwtl
stc
lods
clc
cs
push
mov
fistl
cmp
inc
cmc
ret
sub
jle
pop
lret
sbb
aad
pop
sub
mov
push
fnstenv
stc
sbb
mov
hlt
repnz
std
xchg
lock
push
in
ret
cmp
sahf
ficompl
sub
mov
or
lock
outsb
das
mov
fwait
mov
adc
psubw
imul
mov
add
dec
mov
sub
imulb
mov
popl
mov
mov
pop
pop
outsl
mov
jne
xchg
xor
xor
adc
ss
jmp
shll
in
pop
daa
adc
xchg
loope
push
scas
jbe
imul
and
push
shll
je
xchg
sub
in
out
inc
xlat
dec
ret
xchg
lahf
add
sub
cmp
repz
mov
dec
push
insl
or
addr16
call
aam
repz
test
rol
xchg
inc
sbb
imul
pop
adc
popf
pop
pop
shl
enter
cwtl
pusha
xchg
push
les
outsb
pop
xchg
xorb
shrb
jecxz
push
xchg
xchg
fstps
aas
xchg
stc
dec
stos
jmp
mov
js
scas
es
leave
imul
pop
pop
cmc
push
xor
sbb
lret
sub
vpcmpeqb
pop
push
mov
in
inc
gs
int3
dec
arpl
xchg
mov
mov
dec
outsl
out
in
fdivl
filds
or
jl
aad
not
daa
mov
inc
sub
int3
fwait
xchg
iret
fldt
and
mov
lcall
pop
sub
stc
dec
aas
sub
lret
arpl
ljmp
inc
stc
pop
test
das
xchg
push
xor
push
movsb
and
cmp
pop
das
in
fisttpll
in
and
sub
inc
sub
icebp
movsl
pushf
mov
mov
inc
pop
lret
inc
mov
add
rcrb
outsl
aam
stos
push
int
jmp
mov
testl
frndint
push
bound
mov
xchg
sub
xor
jae
sub
lahf
or
cmp
fists
dec
cmp
test
fldl
outsb
jo
inc
stos
pusha
aad
xchg
sub
out
pop
je
sbb
xchg
rorl
mov
xor
dec
add
jmp
jnp
mov
imul
scas
push
das
int
popf
and
pusha
adc
fdivrs
fdivrs
mov
popa
xor
sub
daa
xor
pusha
mov
das
dec
pop
and
fistl
fistl
push
aas
pop
pop
inc
mov
test
mov
sti
fcoms
xchg
mov
cmpl
pusha
pop
jmp
cltd
inc
sub
inc
and
push
xchg
sbb
test
lds
xchg
sbbl
lods
lods
dec
stc
mov
jl
in
int
jnp
xchg
push
in
pop
jbe
add
push
inc
cld
pop
rcl
and
pop
repnz
xchg
sbb
in
les
jmp
push
sbb
scas
jmp
aam
jns
push
fnstenv
mov
sbb
loope
cwtl
mov
movsb
in
aas
and
pop
add
sbb
insl
js
das
jge
xor
aam
and
in
push
popf
add
and
aaa
lret
std
xchg
push
ljmp
movsb
outsl
arpl
ljmp
mov
je
push
xchg
fisubrs
mov
inc
int3
pop
inc
or
fcomps
cltd
aaa
or
vmread
sbb
dec
add
xchg
je
insb
mov
xor
push
sub
mov
inc
mov
test
xlat
dec
add
shll
inc
out
push
stos
fucomp
out
icebp
dec
mov
inc
or
pusha
std
cmpsl
mov
or
push
lret
jge
sti
xchg
sub
inc
jle
cmp
iret
ret
not
ret
loop
mov
repz
ja
mov
jbe
fs
push
call
decb
sub
or
insl
es
sbb
pop
sub
sub
sub
jle
cli
sbb
pusha
xchg
xor
xor
daa
movsb
jge
push
add
icebp
sbb
mov
add
out
imul
fs
sbb
sbb
dec
inc
test
ret
setg
dec
cmp
aas
test
aad
mov
pop
mov
les
pop
outsb
sbb
mov
mov
insl
jg
lods
push
sub
ret
or
out
pop
daa
ss
pop
imul
inc
data16
push
jae
adc
leave
cmp
adc
inc
sahf
xchg
adc
cmc
popa
xchg
adc
add
jge
iret
stos
push
shrl
fidivl
add
sub
loopne
cmp
inc
aam
cmp
mov
adc
mov
ja
push
sub
sti
rcr
push
inc
nop
test
pop
notl
hlt
popa
std
stos
cmp
lds
cld
pop
or
mov
push
and
xor
xchg
inc
bound
adc
push
push
mov
inc
cli
mov
sarl
hlt
les
xlat
pop
mov
test
pushf
pop
aas
stos
rcll
aam
mov
push
stc
inc
jno
mov
or
jo
mov
push
sbb
das
mov
nop
imul
pop
in
inc
cltd
add
jge
sti
push
daa
movsl
or
es
and
sti
in
andb
popf
dec
clc
push
pusha
inc
mov
push
fs
sub
push
inc
not
inc
iret
nop
inc
jbe
mov
add
mov
inc
lret
add
adc
push
xor
jae
xchg
xor
xor
mov
daa
dec
test
sub
push
inc
arpl
enter
add
mov
push
xchg
iret
jge
shl
fdivrs
stos
scas
pop
push
adc
shr
and
movsl
hlt
mov
arpl
or
incl
fs
lock
mov
stos
xchg
fimull
mov
insb
loopne
cmp
dec
inc
shrl
pop
dec
xor
lock
pop
xchg
pop
cmpsb
push
xchg
or
repnz
cmpl
daa
push
push
mov
cmp
jno
mov
mov
xor
pop
dec
push
in
sbb
dec
push
gs
popa
inc
pop
in
fsub
insb
fists
daa
or
into
jl
mov
imul
lea
pop
fdivrs
xchg
and
push
test
ret
stos
loop
out
lret
sub
sub
fwait
cmpsb
sbb
xor
ret
loopne
or
aam
pop
call
add
clc
sbb
insb
sbb
popa
int
xchg
orb
cs
and
out
push
gs
or
lret
mov
push
ror
jp
sub
sub
je
data16
pop
jno
addr16
mov
mov
popf
pop
pop
push
xchg
into
leave
and
adc
repz
insl
add
adc
sarl
sbb
xorl
in
add
imul
rcrl
mov
jb
mul
xchg
imul
pop
push
lds
sbb
lods
xor
jg
ds
out
lds
stos
pop
out
idivl
jne
in
ret
out
sub
rcr
xchg
orb
push
ret
and
push
clc
xor
xor
sub
pushf
rcr
mov
bound
cmpsl
jno
mov
inc
lcall
outsl
mov
aaa
arpl
test
loopne
and
jmp
inc
or
mov
cmp
xchg
fcomps
gs
nop
and
jle
or
sub
cli
mov
sbb
pop
xchg
jo
adc
jo
jp
mov
mov
lea
sbb
lds
pop
sbb
movsb
fbstp
and
add
les
push
cmp
sub
cmp
dec
ja
pop
into
cmpsb
fstl
xor
add
cltd
fnsave
icebp
sbb
sub
ds
xchg
aaa
or
push
add
incl
inc
out
les
sahf
xchg
jecxz
mov
lret
jns
lods
or
outsb
shll
mov
fldenv
cmp
xchg
and
mov
jecxz
pop
push
stos
sbb
outsb
mov
jle
push
cld
sbb
push
push
sbb
int3
out
mov
mov
sub
stos
cld
jecxz
daa
loopne
xor
imul
inc
inc
sti
mov
mov
cmpsb
mov
in
jb
push
leave
in
sbb
int
popf
push
mull
insb
or
ja
mov
fnstsw
mov
aas
shlb
and
xchg
jb
popa
scas
dec
mov
movsb
loope
sub
lods
xchg
lret
jbe
mov
loopw
stc
inc
out
jo
or
aaa
in
mov
xor
mov
mov
sub
xlat
sbb
aam
enter
enter
mov
iret
jp
js
pushf
sarl
in
dec
js
xorl
pop
lods
mov
lcall
mov
mov
pop
pop
jo
test
enter
mov
cld
gs
int3
cmpsl
ror
dec
mov
dec
jbe
lock
xchg
xor
ljmp
fcmovu
ja
daa
test
adc
add
lds
in
xchg
call
mov
mov
lret
outsl
or
mov
popa
push
sbb
xchg
js
xor
sbb
cmp
dec
mov
clc
and
jno
xlat
mov
dec
jo
inc
pop
fsubrs
movsb
js
ja
int
loopne
push
movsl
pop
clc
decb
inc
xor
cwtl
adc
rclb
inc
popf
shr
sub
mov
sub
jnp
loope
jg
dec
daa
or
sub
pop
lods
fcmove
jmp
sub
push
and
insb
mov
cmp
pop
cmpsl
sbb
cs
jmp
orb
cld
push
out
xor
jle
push
cld
test
into
jge
out
cwtl
sbb
add
push
jl
adc
enter
nop
pop
daa
sub
insb
xlat
adc
xlat
insb
xlat
dec
or
pushf
lds
fistpll
sub
aas
xlat
dec
test
in
mov
push
sub
daa
adc
and
and
cmp
lock
lcall
psubusb
dec
xchg
cmpsb
pushf
rcll
and
sub
out
xor
and
les
push
mov
movsl
repnz
mov
xor
dec
stc
sbb
dec
stos
jl
push
popa
imul
imul
cmp
xchg
ljmp
ret
cmp
cltd
xchg
lods
mov
xor
mov
rclb
xor
jbe
adc
cmp
adc
bound
mov
fldcw
mov
inc
adc
pop
popa
movsb
jl
jbe
pop
int3
mov
ljmp
xor
ret
cmp
inc
xlat
js
push
fisttpl
je
jnp
push
outsb
and
mov
js
mov
jns
lds
mov
cmp
and
rcrl
inc
daa
or
jg
jp
inc
imull
in
je
clc
pop
movsl
sbb
lret
insb
daa
dec
aas
inc
pop
add
push
lcall
sti
and
ja
jno
inc
movsl
imul
outsl
jne
add
xchg
lods
sub
popf
adc
out
sbb
int3
inc
hlt
rcrl
jo
adc
and
dec
jae
pop
icebp
adcl
sti
pop
jne
notb
cmpsb
addr16
adcb
add
pop
rcll
sub
sets
roll
subl
out
and
imul
int
sub
inc
xor
mov
hlt
push
shlb
aaa
xchg
or
sbb
mov
jecxz
test
add
xlat
sub
push
stos
xor
mov
mov
xchg
scas
es
lret
loopne
fdivs
pop
ds
int
push
rcll
sbbb
andb
rcll
movsb
gs
jno
cmpsb
daa
jge
cmp
add
mov
dec
lret
ficoms
and
add
jl
xlat
xor
not
mov
lea
jle
sti
dec
mov
jo
add
and
je
mov
adc
mov
insl
scas
mov
jo
orb
outsb
sti
mov
cmp
inc
and
push
shl
loopne
fdivr
xchg
sbb
cli
xlat
and
mov
lods
xchg
mov
dec
xchg
in
decl
mov
sbb
iret
loopne
daa
jmp
pop
mov
and
frstor
fwait
pop
outsb
mov
scas
mov
in
iret
jbe
mov
lret
adc
sti
pop
insb
inc
cmp
or
nop
mov
fwait
lret
sarl
and
stos
hlt
mov
ds
movsb
xchg
lock
add
mov
pop
xor
ret
sbb
sub
jmp
xor
push
sub
sub
notb
jnp
jb
fyl2xp1
push
sub
pop
or
or
push
jnp
jp
lea
ja
and
mov
insb
dec
sbb
andl
xor
add
cmp
iret
cmc
js
icebp
or
jne
inc
loop
pop
pop
push
push
ds
pop
add
push
pop
mov
scas
cmp
mov
or
iret
xor
hlt
xor
fimull
and
addr16
push
xor
mov
mov
or
add
inc
in
fwait
pop
add
cmp
imul
or
lret
dec
scas
mov
fsubr
sub
stc
push
idivb
daa
jecxz
pop
in
cli
pop
adc
jo
shlb
loope
dec
aaa
call
mov
xchg
jbe
divb
fucomp
test
sbb
push
or
mov
pop
push
jne
inc
sahf
mov
movsb
fistpl
adc
xor
cmp
lahf
push
out
jmp
or
ficompl
cli
cmp
sub
clc
pushl
in
sub
les
or
xor
loop
mov
pop
imul
push
sahf
insb
xchg
cmpsb
repz
mov
push
imul
ja
adc
jae
jl
in
gs
inc
cmc
imul
mov
pop
ja
xchg
xchg
add
mov
push
inc
movsl
in
mov
push
stc
divb
out
pop
iret
pop
ret
mov
mov
insb
fcoms
dec
adc
call
pop
movl
sub
cltd
scas
js,pn
rolb
adc
movsb
cmp
cmpsl
xor
mov
xor
jle
add
shlb
loop
rorl
fnstsw
sub
movlps
xor
je
enter
js
and
in
push
sub
mov
xor
js
push
mov
movsb
dec
mov
in
jb
xchg
subl
fsubl
add
decl
push
test
fdiv
shrb
inc
cmpsb
test
aad
scas
adc
pop
insl
mov
divl
ficompl
pusha
jecxz
fnstcw
push
ja
inc
push
popa
xchg
andb
sbb
rcll
cmp
cwtl
adc
mov
ljmp
dec
push
loop
dec
enter
push
jg
pop
iret
stos
inc
sub
sub
iret
mov
sub
arpl
into
or
inc
add
rorb
jecxz
pop
xor
test
lods
fwait
push
dec
pop
lea
out
stos
loop
push
inc
in
enter
sbb
rorb
in
es
btr
mov
sbb
bound
fs
inc
jo
sub
cli
push
cwtl
das
lock
mov
xor
cmp
jbe
jne
insb
jmp
into
sbb
and
int3
xlat
mov
sbb
cmpsb
fsubl
insb
xor
and
mov
aas
stos
icebp
mov
add
out
xlat
cld
xor
fldt
mov
test
adc
and
jmp
addr16
sub
insb
fnsave
xlat
push
jmp
int3
push
xchg
mov
xchg
stc
sti
fidivrs
inc
fadd
lds
lods
daa
in
data16
adc
movsb
leave
sbb
fcmovnb
xchg
jo
in
pop
mov
mov
or
add
dec
lcall
in
sub
inc
cld
add
popl
fldt
cmp
xor
mov
rclb
das
xor
xor
jo
std
sbb
pushf
sub
ficomps
pop
pop
xor
mov
sub
adc
icebp
sahf
mov
mov
push
shll
mov
insb
loop
repz
xchg
jle
add
xchg
jae
push
addr16
pop
cmp
rorl
loopne
ljmp
ljmp
push
and
push
lds
push
shrl
aas
jbe
adc
lret
jno
fistpll
shr
outsb
dec
xchg
dec
inc
into
ret
cmp
sbbl
cltd
sbb
xchg
cli
cmp
nop
addb
sar
mull
cmpsb
mov
cli
rorb
loopne
jns
pop
sahf
cli
and
jne
pop
xchg
xchg
mov
outsb
loop
xchg
outsb
dec
jmp
inc
cwtl
pop
mov
and
dec
in
mov
test
rorb
sbb
nop
dec
cmp
jne
push
pop
dec
fdiv
inc
pop
push
js
xchg
aad
fwait
outsb
psrad
push
xchg
test
mov
jg
sbb
mov
cmp
cmc
stos
and
enter
jbe
icebp
les
insl
and
cmpsb
cmp
lcall
fildl
cld
lods
dec
mov
xchg
push
daa
dec
sahf
ljmp
and
out
call
scas
jecxz
rep
cmpsb
lret
adc
gs
call
lea
and
cli
jp
cmpsb
cmpsb
jle
negb
sti
cmp
rorb
jp
xchg
cltd
pop
add
int
pop
mov
imul
mov
shlb
xor
imul
out
mov
pop
cmpb
pusha
int
push
rcrb
fcmovnbe
xchg
xchg
lahf
xchg
rcl
inc
clc
fmuls
xor
and
into
add
jae
pusha
sub
mov
jg
mov
inc
scas
or
push
repz
sbb
adc
adc
push
or
push
aad
mov
xor
sub
xchg
add
cmpsb
movsb
ljmp
into
inc
lock
jp
addl
rcr
test
mov
adc
out
fbld
ja
leave
inc
pop
jns
test
fdivs
pop
insb
mov
lahf
xor
cmp
mov
dec
xor
pop
dec
call
in
sbb
inc
sub
mov
sub
ja
adc
jno
in
test
mov
mov
sahf
xlat
loop
enter
pop
push
imul
iret
sti
mov
dec
jae
push
incb
in
fimuls
das
rcrb
sub
and
es
iret
es
add
ljmp
mov
add
aam
xchg
pop
movsb
xchg
push
aam
hlt
fwait
mov
lret
testl
sbb
aas
shrl
mov
xlat
xor
jno
dec
in
lds
sbb
push
inc
mov
div
mov
mov
xchg
cmp
add
int3
mov
xchg
loopne
jecxz
add
stc
fnstenv
xor
and
sub
cmp
mov
test
adc
pop
push
out
into
pop
push
jns
sub
mov
dec
dec
sarb
push
jns
inc
sahf
add
mov
and
in
jge
fs
dec
add
testl
push
lods
testb
sbb
sub
nop
insb
clc
frstor
fisttpl
out
mov
clc
gs
sti
inc
jecxz
jns
ljmp
ds
mov
push
popl
and
inc
test
repz
jl
push
mov
aad
inc
sbb
pop
sar
sub
fwait
or
test
out
scas
xchg
icebp
es
xchg
dec
dec
test
jle
adc
mov
das
fwait
dec
into
jne
and
push
push
mov
xchg
cmpsl
cmpb
jno
idiv
pop
enter
mov
inc
ret
and
inc
xor
mov
push
adc
lds
idivb
dec
inc
cmp
jns
mov
int
or
jge
insl
xchg
je
or
ficoms
jmp
mov
imul
mov
sbb
push
pop
inc
inc
sti
jb
push
push
pushf
xor
xchg
xchg
dec
adc
jl
lds
fidivrs
test
push
adc
scas
pop
movsl
fnsave
lahf
jae
xor
jns
xchg
and
add
or
andl
in
mov
nop
int3
adc
rorl
testl
loope
sub
push
cmp
daa
push
cmp
je
and
cmpsb
jnp
xchg
mov
jb
dec
pop
push
aas
pop
icebp
js
stos
jecxz
mov
popa
sbb
fildll
lods
fcomi
cld
in
ret
loope
hlt
cmpsl
gs
cmp
adc
sub
out
add
outsb
rorb
loop
mov
push
jge
fbld
inc
jnp
test
cs
dec
outsb
push
jae
and
rorl
scas
jo
arpl
jnp
pop
xor
or
add
in
push
notl
lret
stc
leave
std
stos
pop
pop
adcw
rcll
mov
sbb
scas
or
leave
stos
cmp
fisubrs
popf
test
mov
inc
mov
fs
pop
data16
mov
in
mov
dec
push
add
lods
xchg
in
imul
in
shrb
dec
sbb
push
in
adc
and
xor
in
daa
add
mov
je
arpl
in
push
inc
push
cltd
xchg
dec
mov
jbe
cld
xor
icebp
mov
rol
sbb
pop
pop
push
f2xm1
fdivrs
or
sbb
adc
das
lods
mov
mov
cltd
jno
mov
ljmp
lds
inc
pop
outsb
imul
pop
mov
test
xchg
imul
push
out
push
mov
sbb
stos
outsl
and
popf
addr16
xlat
loopne
jns
mov
mov
cmpsl
lock
rcrl
mov
or
divl
push
xchg
jmp
jge
mov
and
push
pop
dec
aaa
insl
lea
dec
bound
add
daa
and
idivb
mov
adc
pop
insl
dec
jne
fmul
outsb
push
sub
movsl
inc
mov
sub
lcall
icebp
aaa
int3
mov
add
jbe
adc
add
xchg
pop
jle
fistpl
or
es
fcompl
and
in
das
inc
outsb
and
push
out
cmp
jns
jb
lcall
mov
fnstenv
adc
int3
sbb
aad
in
outsl
push
imul
cmp
mov
jmp
sarl
insl
mov
fldt
push
out
and
dec
dec
mov
xor
sub
adc
mov
pop
mov
out
icebp
es
enter
xchg
repz
icebp
mov
rcrl
push
xor
inc
pop
dec
xor
xor
mov
adc
sbb
shrl
adc
imul
xor
sbb
add
test
and
and
pushf
scas
sub
jecxz
outsl
nop
xchg
nop
inc
cwtl
push
into
sbb
aas
mov
out
mov
dec
mov
inc
jmp
mov
popf
cmpsb
jge
or
and
out
shr
cmc
mov
int
into
clc
roll
pusha
insl
repz
out
add
mov
lods
pushf
clc
jp
test
and
or
mov
ds
scas
sbb
rolb
xor
loopne
aas
mov
mov
mov
shl
mov
inc
test
jg
nop
xor
and
inc
arpl
leave
jnp
lods
mov
push
xor
xchg
call
dec
lock
add
in
aas
sub
mov
mov
dec
adc
mov
stos
xor
mov
add
adc
out
mov
iret
lods
je
aad
lret
pop
mov
jp
jo
mov
cwtl
pop
cmp
sub
leave
dec
cltd
je
sbbl
cmc
mov
lret
movsl
cmp
popa
ss
and
leave
mov
mov
pop
jnp
and
xchg
in
shlb
pop
mov
xchg
adc
test
mov
adc
fcmove
or
and
fisubrs
xchg
lea
addr16
loope
add
int
cmpsl
ljmp
in
dec
mov
ret
pop
dec
rdpmc
jno
clc
lds
setae
cli
test
pop
inc
push
hlt
cs
dec
jae
xchg
jb
and
sub
stc
les
lea
aam
mov
dec
xchg
sub
lret
xor
dec
add
jno
sbb
adc
pushf
xchg
leave
or
mov
mov
xor
pop
adc
fisubl
es
sbb
xor
xchg
push
lahf
mov
popa
xor
jae
or
inc
je
xchg
movsl
outsb
ds
inc
xor
add
cwtl
loope
xchg
pop
jne
xor
mov
call
shr
in
and
pop
jae
pushf
loopne
in
in
addr16
lret
xlat
add
int3
mov
sbb
jge
push
jl
inc
adc
in
push
cmc
lock
inc
in
popf
jg
push
xlat
push
jp
out
andl
out
sub
cs
mov
xor
cmpb
xchg
pop
dec
cs
mov
and
divl
xchg
lock
sbb
push
lea
jge
mov
cmp
add
mov
inc
icebp
popf
in
jns
enter
rol
push
out
ret
scas
std
sbb
imul
aam
pop
ret
jl
xor
out
cmp
lahf
mov
add
cmp
or
inc
add
mov
mov
rclb
cmp
mov
leave
not
cs
cld
fiaddl
pushf
xchg
ds
mov
fists
enter
aam
loop
dec
jnp
dec
outsl
inc
inc
sbb
jb
in
leave
cmp
add
sub
add
push
and
adc
sti
loope
push
in
das
mov
and
ja
imul
jge
test
maskmovq
imull
icebp
data16
cmp
push
xchg
cld
mov
xchg
pushf
mov
ficompl
test
fsub
cmp
push
test
out
jle
aas
subl
sbb
dec
dec
iret
lods
lea
jp
out
cmp
popf
pop
adc
pop
pop
adc
mov
and
orl
jl
xchg
jl
push
inc
fdivs
bound
stos
xchg
dec
sar
mov
push
add
adc
xor
int3
in
pop
sahf
mov
mov
sub
lcall
pop
or
dec
pop
fimuls
dec
fdivs
and
mov
out
stc
add
or
mov
nop
add
loopne
push
mov
dec
push
cmp
push
push
push
xchg
mov
cmp
push
jbe
pavgb
mov
adc
add
adc
ds
leave
adc
xlat
cs
push
test
fsubs
shll
lea
mov
mov
and
sbbl
cwtl
adc
adc
lods
sarl
inc
and
dec
icebp
add
ret
mov
pop
pop
and
lea
push
sub
sub
sub
pop
js
cmp
adc
mov
cmp
or
iret
and
dec
bound
test
decb
pop
jb
or
lahf
add
pop
mov
inc
sub
mov
cmp
ss
dec
scas
mov
jp
mov
mov
ret
add
jecxz
std
adc
lock
push
mov
jne
pop
add
xorb
stos
lahf
outsl
push
pushf
dec
adc
fists
and
sbb
push
in
test
addr16
adc
lret
lahf
cmp
push
shrl
jnp
fstpt
fwait
stos
jp
sbb
rcr
leave
dec
loopne
mov
into
imul
ja
icebp
sbbb
mov
sahf
fildl
aam
outsb
inc
pop
adc
push
in
outsb
push
out
sti
push
dec
jnp
cmpsl
dec
roll
js
pop
test
cmp
test
xchg
inc
fs
sbb
jl
addr16
mov
ss
xchg
cld
and
adc
out
fwait
out
mov
push
daa
ja
sahf
mov
xchg
lods
and
cmp
stos
lock
orb
je
adc
mov
pop
xor
and
and
add
dec
call
cmpsb
or
jg
inc
stos
xlat
sub
sub
jp
cmpl
test
xchg
push
mov
mov
addr16
out
repz
rorb
notb
adc
imul
movsb
fisttps
mov
sbb
jmp
addb
xlat
mov
dec
xchg
pop
add
out
adc
pushf
pop
movl
xor
sahf
daa
out
pop
mov
movsl
rorb
fadds
rcrb
ffreep
mov
cmp
std
adc
inc
xor
cli
test
cltd
insb
pusha
jb
lock
jl
cmp
or
sbb
push
inc
into
fwait
sbb
dec
push
adc
xchg
xchg
mov
cmp
cmp
inc
jae
testb
mov
clc
in
cltd
jg
sti
cli
xchg
inc
sub
jl
lret
jbe
inc
push
sbb
push
scas
xchg
jno
or
jmp
loop
cmp
adc
pop
in
xchg
leave
cli
ret
jge
loop
movsl
xor
fisttps
inc
inc
stos
call
cmp
inc
xchg
mov
dec
ljmp
push
add
mov
cs
cmp
inc
cs
in
test
ljmp
cs
pop
mov
dec
int
notb
daa
pop
pop
aas
cmpsl
add
sbb
dec
fildl
push
push
add
div
adc
es
aad
lcall
fstl
mov
cmp
xchg
std
sbb
dec
fnstenv
and
test
xchg
dec
aam
and
popf
inc
gs
fiadds
jl
movsb
aas
or
mov
cmc
shrl
sbb
xchg
fcompl
stc
int
imul
mov
outsb
xchg
lahf
sub
inc
rcrb
pop
sbb
sbb
push
int
ds
and
push
clc
testl
and
xchg
insl
test
adc
sub
sbb
xor
repnz
aam
dec
shl
lret
jae
xor
negb
mov
loopne
arpl
cmpsl
inc
pop
fs
dec
subl
pop
add
xor
sbb
pop
add
cs
jae
push
nop
add
adc
lea
bound
cmp
add
sahf
or
repz
xor
jmp
xchg
add
mov
push
adc
stos
movsb
fimuls
mov
mov
arpl
push
mov
jo
add
rorb
pop
in
xor
mov
adc
lahf
loop
pop
push
and
mov
insb
imull
mov
fdivs
rorl
in
xchg
lret
add
and
addr16
testl
and
stc
xlat
fdivrl
sti
mov
mov
pop
mov
clc
or
dec
icebp
cs
add
add
aaa
push
xor
mov
sub
xchg
pop
jne
and
das
sahf
inc
cmp
fsubrp
mov
ss
xchg
sub
js
into
les
jmp
pop
mov
jmp
scas
mov
xchg
dec
adc
pop
xchg
lods
sbb
add
insl
cli
xlat
mov
dec
nop
push
jo
cmpsl
mov
jne
push
fidivrs
cmc
push
add
or
mov
imul
fs
sahf
jge
mov
sub
fbstp
mov
lret
dec
dec
in
xchg
icebp
aam
push
cmp
orl
test
and
add
mov
push
pop
cmpsl
sbb
xchg
stc
mov
lret
jmp
cmpb
add
incl
out
scas
inc
jg
cmc
dec
mov
test
or
cld
or
fs
ret
addr16
sbb
lods
je
adc
dec
adc
add
or
xchg
das
mov
push
inc
jge
or
rcll
mov
je
inc
or
adc
cltd
dec
adc
outsb
ja,pn
rolb
mov
jne
ljmp
stos
test
ljmp
dec
adc
push
jo
fwait
jecxz
into
pand
nop
cmp
jb
xchg
ds
pusha
and
sub
xlat
stos
xor
fistl
scas
dec
sbb
divb
lret
mov
jg
pop
mov
push
ret
mov
mov
pop
mov
xor
add
enter
outsl
jo
mov
push
outsl
or
loop
adc
stos
pop
fdivp
lcall
cmpsl
xchg
push
stos
mov
outsb
cmova
je
pushf
mov
push
xchg
das
sbb
shlb
gs
lock
test
lods
add
and
xchg
arpl
xchg
cmp
pop
ljmp
ss
inc
inc
mov
inc
rcr
mov
in
test
pushf
cs
pop
mov
and
sti
mov
cmpsl
dec
push
sub
rorb
cmp
adc
jmp
mov
std
mov
jne
jae
inc
lds
or
scas
cmpl
scas
inc
xchg
inc
insl
popa
ficoms
sti
das
adc
into
dec
sbb
pop
mov
jne
fistps
inc
jl
cmc
or
test
push
outsl
js
shrl
test
sbb
add
cmp
pop
stos
xchg
push
addb
xlat
cmpsl
and
test
loop
xchg
stos
dec
andb
xor
lret
int
xchg
in
scas
xchg
jge
inc
ret
adc
out
lahf
add
pop
outsb
rcrl
xchg
xor
test
test
push
test
out
imul
filds
mov
xchg
mov
add
or
scas
or
xchg
negb
push
lods
insb
jne
ja
mov
pop
adc
and
ret
adc
outsb
inc
pusha
push
dec
xchg
inc
xorb
xchg
pop
add
in
leave
sar
aaa
jns
ret
cmp
mov
in
push
imul
scas
ret
jp
push
insb
mov
das
pop
add
insl
xchg
pop
orb
ficompl
ljmp
ss
sbb
out
jo
xlat
push
int
fldenv
sbb
push
aam
pop
imul
in
xchg
dec
adc
or
dec
cmp
inc
rcrl
popa
mov
insb
xchg
xchg
xor
inc
pushl
adc
loope
jecxz
mov
call
shrb
movsb
fiadds
ja
and
test
sub
add
les
mov
scas
inc
leave
jg
in
inc
add
bndstx
adc
cmpsl
xchg
mov
daa
pushf
dec
jle
or
fcmovnb
dec
pushf
daa
and
mov
add
pop
push
adc
pop
cmpsb
gs
xor
sub
xor
or
add
pop
push
sub
pop
dec
pop
cmc
pusha
popa
fmuls
xor
mov
loop
jnp
aam
test
shlb
and
mov
cld
into
xor
dec
mov
jl
push
inc
arpl
add
push
frstor
mov
aas
xchg
jg
fwait
in
call
out
shlb
lret
sbb
sbb
and
push
jge
cmp
dec
iret
sbb
sbb
fucomip
cmpsb
stos
in
jo
mov
mov
jae
bound
das
int
xor
aaa
sti
sbb
stc
cmp
sbbl
mov
in
xor
in
loope
adc
push
mov
push
mov
stc
addb
or
pop
add
out
jo
sbb
and
loop
shr
pop
push
out
je
out
testl
xchg
mov
and
add
mov
mov
sbb
add
jns
inc
aas
inc
test
les
movsb
mov
imul
fiaddl
mov
xchg
mov
popa
lret
loopne
les
ds
aaa
fiaddl
dec
pop
dec
and
aad
mov
dec
lds
mov
sarb
fnsave
loop
in
mov
jns
dec
xlat
xchg
inc
push
shrb
aas
jecxz
mov
add
or
mov
xlat
mov
lcall
fadds
test
push
adc
xchg
movsb
mov
jno
inc
popa
and
adc
push
pushf
ljmp
cmp
scas
jns
aad
inc
dec
add
push
mov
fistpll
xchg
int
sub
pusha
mov
xor
or
rcrb
push
ret
leave
lods
inc
add
push
push
sub
pop
dec
lock
loop
sub
mov
lret
lock
daa
sbb
xchg
inc
imull
icebp
pop
outsl
mov
ljmp
into
sti
fnstcw
fwait
std
cltd
ret
or
jg
imul
add
mov
add
clc
add
clc
cmp
in
jle
jno
cmp
push
mov
insb
js
jmp
fidivrs
cmp
sbb
dec
stos
dec
test
aaa
dec
lock
mov
stc
jge
ljmp
push
orl
push
sub
fmull
or
push
mov
mov
jns
in
ja
sub
mov
das
pushf
xlat
mov
in
lods
outsl
pop
adc
mov
aad
adc
mov
cmp
cmp
push
sti
pop
sub
push
lahf
mov
mov
ret
ljmp
fisttpll
ja
cmp
xor
mulb
add
scas
inc
mov
xchg
es
ss
sti
push
bound
aas
mov
jg
lds
in
mov
mov
jecxz
enter
cmp
rolb
mov
mov
addr16
pop
dec
imull
test
hlt
ret
sub
mov
mov
sbb
cmp
or
in
in
lret
mov
sub
stos
in
dec
push
hlt
ret
bound
sbb
add
les
mov
loop
stos
imul
pop
aam
pop
cmpsl
mov
xchg
in
xor
or
stos
mov
or
inc
stos
aaa
cld
enter
push
mov
xor
mov
pop
inc
and
xchg
mov
loope
lret
dec
push
push
cld
mov
or
add
pop
aaa
mov
and
or
aad
fdivrl
lcall
jle
ds
mov
in
sub
mov
frstor
jns
popf
or
daa
enter
or
mov
scas
fisttpll
cmpsb
sbb
xchg
iret
and
mov
mov
xorl
idiv
push
fdivs
imul
push
cmpsb
fistps
fnsave
or
mov
mov
stos
mov
subb
push
cltd
mov
or
and
mov
jl
push
scas
mov
aaa
mov
incl
mov
pop
add
push
or
push
leave
insl
dec
stos
out
adc
je
dec
out
in
push
stos
cmc
iret
addb
sub
aam
mov
inc
xchg
add
push
bound
add
mov
stc
je
rorl
add
dec
or
mov
jnp
adc
sbb
divb
mov
add
lea
and
xor
ljmp
xchg
aas
in
xchg
insl
sub
loopne
cmpsl
aaa
adc
xchg
fstpt
imul
mov
sahf
movsb
xchg
lods
test
hlt
xor
pop
sbb
or
lods
adc
lahf
lods
faddl
cwtl
test
stos
and
aas
add
into
stc
addr16
xor
pusha
sbb
push
dec
ja
or
and
xlat
push
xor
add
adc
add
add
inc
jae,pt
int3
add
popf
cwtl
shrb
push
sbb
sub
push
int3
andl
stos
stos
lds
lods
repz
jns
push
dec
mov
js
sbb
fidivrs
cwtl
sub
cmp
jle
ret
add
sub
pop
movsl
js
ret
cmp
xor
xchg
add
in
adc
outsl
add
lods
test
push
leave
sarl
sbb
data16
arpl
lret
nop
mov
inc
pop
and
add
push
xchg
mov
pushf
cmp
xor
das
popa
nop
in
aaa
stos
int3
loop
jnp
jb
pop
xor
fdivrl
enter
clc
popf
call
xchg
popa
out
xor
xlat
or
mov
mov
js
cmpl
adc
push
ret
in
dec
sub
or
aad
fbstp
stos
nop
xor
fildll
xchg
repnz
mov
dec
sub
mov
test
jnp
cltd
test
cli
jge
mov
or
movsb
jns
test
mov
jae
mov
sub
test
nop
jp
xor
stos
mov
jo
imul
into
out
dec
xor
lcall
adc
ds
addb
xor
pop
es
lods
cld
mov
xor
or
jge
sub
movsb
call
outsb
add
xchg
out
les
lret
pop
into
and
dec
es
cmp
aaa
outsl
jb
cmc
mov
inc
xor
sbb
xor
fisubl
dec
mov
dec
jno
dec
xchg
jp
imul
insl
sbb
bnd
cmp
dec
jbe
mov
lahf
je
daa
ss
shlb
cmp
add
stos
sbb
inc
sub
inc
jge
xchg
pop
sub
mov
push
outsb
loope
mov
mov
lods
cwtl
mov
pop
xchg
cmp
cmovbe
sbb
cltd
push
aam
rep
xchg
push
aaa
mov
mov
adc
mov
iret
add
pop
sahf
pop
mov
xchg
push
dec
xchg
jge
and
or
cld
in
mov
push
je
leave
rolb
sbb
xorb
push
int3
data16
movsb
jle
jmp
pop
nop
xor
dec
dec
adc
add
leave
push
lods
cmp
pop
xorl
out
and
jp
cmc
xor
xchg
xor
scas
push
movups
sbb
sub
xor
dec
nop
mov
int3
daa
xchg
and
insl
inc
fisubrs
add
push
mov
adc
aam
mov
add
inc
in
mov
dec
nop
mov
xchg
lahf
or
je
push
push
mov
add
add
cmp
pop
cs
stos
es
push
cld
xor
mov
sub
cmp
xor
clc
mov
mov
xchg
mov
popf
addb
sbb
jb
jmp
adc
int3
push
sbb
inc
into
pop
js
daa
sbb
mov
outsl
pop
and
mov
xchg
push
fdivs
out
cwtl
push
icebp
inc
inc
push
xchg
int3
das
sbb
dec
adc
hlt
sub
sbb
cli
insl
jo
pop
out
out
cltd
or
inc
out
jg
loope
iret
outsb
add
mov
aam
cmp
add
rcrb
sbb
cmp
add
enter
dec
inc
in
dec
push
fistpl
adc
es
sbb
cmp
sbb
test
stos
test
push
xchg
push
push
gs
mov
inc
cld
loopne
cs
lods
js
scas
or
mov
mov
cmp
jge,pt
insb
enter
mov
lods
cwtl
je
add
cmp
mov
movsb
mov
in
inc
mov
push
sbb
test
fildl
dec
insw
xchg
xor
cmc
or
iret
jecxz
insb
les
jbe
daa
jl
cmpsl
xchg
xchg
shl
imul
mov
nop
mov
and
out
sub
pusha
cli
add
int3
test
sbb
bnd
mov
aas
and
sbb
pop
xchg
jge
std
pop
mov
push
dec
test
lcall
cmp
cs
pop
mov
jg
and
test
mov
out
enter
push
inc
aam
mov
mov
push
lret
loope
adc
mov
popa
outsl
cmp
rcrl
push
add
xchg
xchg
or
sub
cmp
mov
push
sub
fs
or
je
cmc
pop
cmp
push
xor
test
les
mov
xor
js
shll
pop
stos
push
add
lock
mull
mov
mov
push
sbb
ret
pusha
or
jae
jecxz
mov
ljmp
xchg
inc
lods
push
imul
flds
lret
mov
hlt
bound
orl
adc
cld
out
xchg
das
nop
xorl
repnz
push
xchg
push
cmc
xor
aas
dec
stos
mov
enter
mov
cmc
lods
andl
sahf
pop
mov
dec
rorl
bound
jns
jae
push
adc
jae
jae
mov
aam
mov
and
imul
mov
lods
dec
dec
ret
popw
jbe
int3
out
inc
inc
push
stos
dec
xchg
aas
pop
call
aas
push
loope
xor
jmp
xchg
test
jbe
push
push
pushf
test
cli
sub
xchg
mov
push
aam
scas
scas
sub
xor
push
or
mov
repnz
adc
pandn
fcmovbe
rorb
fsts
dec
jnp
jb
fstps
ja
dec
aas
add
adc
movsl
fsub
test
sahf
iret
insb
repz
or
daa
fwait
pop
cmpsb
lock
add
inc
loope
jg
pop
inc
rcr
mov
lahf
sub
je
test
dec
and
jecxz
cltd
adc
cmp
jecxz
ret
aad
daa
and
repz
add
dec
push
movsb
lods
movsl
xor
negl
push
push
jg
add
push
adc
xchg
push
clc
sarl
shr
inc
pop
shr
pop
xchg
and
loopne
cmp
ljmp
adc
sbb
popa
mov
arpl
icebp
xor
mov
outsl
icebp
mov
xchg
xor
js
add
push
sbb
out
stos
push
fcomip
jns
cli
and
push
mov
mov
cmp
mov
mov
mov
mov
jo
push
sbb
dec
out
nop
pop
push
xor
cmpl
scas
cmp
cltd
int3
adc
and
pop
bnd
pop
fcmovnu
ja
adc
inc
jnp
add
push
push
das
and
js
jg
sub
shlb
inc
inc
mov
fstps
jb
adc
aad
iret
jp
adc
out
pop
and
push
xchg
push
jp
insl
dec
xor
adc
jb
mov
loop
and
test
rcl
push
nop
insl
pushf
pop
add
push
xor
add
cwtl
xchg
xchg
repnz
pusha
mov
inc
mov
sub
data16
stos
shr
pop
sub
and
jle
sti
xchg
adc
inc
sub
pop
inc
and
xchg
push
popa
fmull
rcll
or
faddl
mov
pop
sar
jne
xchg
mov
cmpsb
imul
xor
jae
fstpl
mov
repnz
out
pushf
aaa
jl
sbbl
repz
rcr
or
inc
mul
scas
xor
cmc
pop
lock
aam
jno
repnz
in
add
pop
lock
sbb
sub
arpl
push
test
lock
xor
lret
outsb
add
dec
push
bound
aad
int
and
inc
add
mov
daa
push
xchg
inc
jb
icebp
enter
ss
nop
mov
sti
ret
push
xchg
mov
pusha
pushf
inc
stos
mov
js
add
popl
adc
adc
sbb
stc
and
or
insb
fidivs
jnp
std
push
or
int
sub
dec
mov
dec
loop
mov
dec
test
arpl
sbb
fisttps
mov
call
aas
add
pop
mov
setle
adc
add
mov
or
push
xchg
and
out
or
mov
xor
jo
and
cmp
outsl
jnp
or
cwtl
add
mov
stc
sub
cmp
xor
outsb
xchg
mov
and
popf
ljmp
xor
fs
loopne
jle
mov
pushf
mov
and
dec
int
pusha
cwtl
arpl
xor
mov
jne
es
pusha
loope
pop
test
xor
popa
mov
cld
fs
and
pushf
loopne
stc
mov
insb
pop
imul
or
dec
mov
push
mov
sub
in
loope
jno
sub
xor
shlb
cli
sub
push
inc
jg
mov
shrl
dec
hlt
and
jmp
bound
lods
xor
fabs
stos
ret
jge
stc
or
or
mov
add
test
pushf
fs
outsl
pop
mov
sarb
and
sub
sub
xorb
addr16
ljmp
and
adc
addr16
pop
pop
dec
scas
aaa
cmp
test
jecxz
sbb
xchg
rolb
and
cmpsl
inc
aaa
loop
fs
mov
sub
add
daa
pop
sub
mov
add
push
test
pop
or
push
inc
pop
into
pusha
mov
cmp
jg
pop
mov
push
adc
add
or
mov
push
lods
mov
and
mov
scas
cmp
cmpsb
add
mov
rcr
xchg
fs
cmp
stos
mov
push
mov
adc
mov
ljmp
mov
jnp
add
mov
ljmp
in
sti
cmp
mov
or
outsl
jp
push
add
jge
cmp
js
adc
sbb
or
pushl
push
mov
outsl
enter
fcoms
mov
and
push
insb
loopne
mov
sbb
mov
mov
inc
and
test
mov
push
mov
mov
adc
jns
lods
adc
lea
and
mov
jne
imul
pop
test
pop
or
fwait
stos
sbb
push
mov
push
aad
cmp
adc
pop
add
push
lds
repz
add
aad
pop
xchg
int
subl
in
push
cmp
mov
push
jecxz
add
movsl
gs
dec
jbe
stc
pushf
cmp
clc
aaa
mov
sbb
mov
lods
stos
jns
pop
je
lcall
add
jns
int
push
xchg
jle
in
sub
out
push
dec
and
jmp
sarb
adc
pop
xlat
lods
push
ret
ret
lahf
sbb
inc
aas
subl
mov
xchg
add
jmp
lock
add
xor
es
xchg
sub
and
sahf
cwtl
lret
mov
jb
cli
fildll
rorb
loop
pop
push
jg
iret
in
add
fnsave
cld
sarb
rcrl
decl
sti
add
cwtl
cwtl
pop
cmp
cld
test
loop
jae
rcrl
dec
loope
add
shr
add
jmp
test
pop
push
and
cmp
mov
or
and
pop
cmp
je
inc
xchg
shlb
sbb
in
push
sbb
lea
movsl
dec
test
sub
cwtl
popa
lahf
shlb
dec
cs
jge
mov
push
add
lds
xchg
cmp
or
sbb
insb
inc
sbb
cmp
and
lcall
aad
push
inc
inc
loopne
add
jno
aad
push
push
xor
jbe
jns
ss
pop
movsb
dec
rol
push
or
push
xor
imul
rcrl
mov
cld
inc
pop
sbb
cltd
mov
push
pop
bnd
push
stos
mov
out
stos
pop
inc
xor
mov
fsub
sbb
cmp
or
imul
icebp
dec
mov
jns
mul
xchg
iret
pop
pop
push
mov
add
shrl
call
adc
scas
test
adc
shrb
mov
out
xor
dec
mov
repz
imul
jbe
iret
inc
cs
cmp
sub
cmpsl
lods
dec
int
add
lds
push
add
xchg
lds
jp
xlat
xor
jecxz
movsl
or
je
fiadds
and
popa
cmpsb
dec
popa
loope
pusha
out
lcall
loope
dec
mov
fcomi
shll
mov
jg
mov
scas
pop
mov
rorl
fwait
mov
addl
inc
ljmp
mov
lret
leave
jl
sub
fistpll
cli
jns
shrb
cmp
mov
adc
pop
mov
or
mov
pop
xchg
add
scas
xor
jb
insb
push
pop
inc
dec
arpl
cmp
out
les
sbb
ret
adc
adc
or
cmovs
jg
cmp
aaa
xchg
call
gs
iret
inc
jp
pop
mov
xor
xor
mov
rclb
mov
sahf
push
mov
and
jnp
add
cwtl
shr
sbb
out
test
cmp
mov
lea
add
push
int
negl
rcrl
sbb
xchg
rcrb
shlb
ficoms
mov
outsl
jbe
jge
bound
test
sbbl
cmpsb
push
jge
outsl
jnp
xchg
outsb
cmpsl
sti
fists
xchg
jl
ret
cmp
cmp
loope
leave
push
xchg
out
add
je
xlat
pop
mov
out
pushf
pop
dec
adc
adc
add
je
inc
xor
push
mov
pop
or
das
cmp
loopne
adc
imul
loop
mov
aad
pop
adc
subb
test
inc
xor
sub
subb
mov
inc
xor
or
push
push
cmp
movsl
out
movsl
xor
imull
cwtd
adc
es
stos
and
fs
into
add
mov
push
imul
leave
adc
jmp
add
sub
and
fcomps
ss
lods
jecxz
xchg
sbb
xor
inc
mov
xor
mov
dec
fidivrl
add
loope
cltd
add
pop
xor
jns
mov
jns
adc
or
rorb
inc
popf
jno
sub
jle
iret
iret
or
fidivrl
cmp
hlt
jmp
mov
gs
push
je
js
lret
int
cmc
int3
sub
or
dec
push
adc
stos
jb
sbb
outsl
mov
push
cmp
jb
push
fcmovnb
adc
adc
fdivr
bound
cmp
pop
mov
out
mov
push
mov
adc
subb
push
cwtl
test
nop
add
adc
shlb
es
lret
sub
bound
push
xchg
push
std
jae
icebp
mov
and
xor
mov
adc
shll
fldl
mov
sub
lds
mov
xchg
in
mov
xchg
out
xor
lods
lret
dec
iret
lahf
adc
shrl
sub
bound
hlt
cwtl
cmpsl
popa
into
lock
cmc
add
movsb
das
mov
pop
lea
and
xchg
mov
xchg
pop
ret
cltd
dec
and
dec
stc
jmp
mov
sbb
addl
lret
loopne
loop
rcll
add
repz
frstor
jle
stos
int3
ds
adc
inc
inc
popf
fstpt
cmc
cmc
cmp
cmp
mov
pusha
fs
or
loop
shlb
mov
aam
jp
stos
testb
repnz
movsb
adc
stos
or
notb
negl
int
icebp
push
add
or
sbb
pop
mov
push
xor
cmpsl
ljmp
mov
pop
shl
shrl
sub
xchg
mov
and
mov
mov
ds
lahf
add
jnp
xor
jnp
ds
dec
je
cmpsb
std
fidivrl
jne
lea
leave
pop
fsub
mov
push
adc
sub
mov
pop
cs
loope
mov
jmp
sub
ret
adc
mov
das
push
pcmpgtd
mov
outsb
movsl
lret
mov
mov
stos
or
pop
push
or
ret
jge
cmp
pop
mov
cmp
sub
or
scas
cmovns
inc
int3
xor
clc
loopne
cmp
cld
orl
sub
cmp
mov
lret
xchg
imul
ds
std
inc
dec
mov
xchg
and
jns
pop
inc
repz
cmp
inc
scas
hlt
ljmp
adc
cmp
sbb
dec
loopne
leave
hlt
mov
dec
jmp
mov
outsl
and
inc
outsb
imul
mov
scas
js
loopne
add
push
pop
lret
fimull
mov
subb
cli
jecxz
sbb
mov
sbb
xchg
lcall
loop
rcrb
fcomip
insl
popf
daa
into
ficomps
fisttpl
mov
outsb
inc
loop
pop
gs
mov
fstps
mov
push
jle
into
xchg
cmpsl
inc
and
shlb
pop
les
mov
fwait
push
icebp
dec
and
and
sbb
ja
mov
mov
jno
push
xchg
ljmp
jnp
popf
jecxz
mov
popf
pop
out
rcrl
mov
push
leave
gs
mov
dec
xor
test
mov
sbb
mov
cmp
sub
imul
in
pop
inc
clc
out
lret
mov
and
adc
int3
fcoml
and
js
or
test
push
jbe
pop
add
aaa
add
lcall
into
ljmp
stos
adc
insl
lock
mov
in
mov
mov
cld
push
ja
add
or
sbb
jo
movsb
ret
addl
in
dec
rorb
hlt
push
fnsave
ljmp
rcrb
out
test
mov
pop
stos
push
cmpsl
mov
dec
in
pushf
jp
xchg
js
dec
jnp
push
arpl
loopne
sub
mov
jmp
pushf
sbb
pop
fs
add
les
in
movsb
rorb
fnstcw
fsubr
fstpt
cltd
add
int3
pop
sbb
and
fldt
out
pusha
jl
ret
mov
aad
xor
pop
data16
push
std
dec
xchg
push
mov
adcb
and
lcall
jae
or
cmpsb
fwait
sub
into
enter
das
pop
test
iret
xchg
mov
gs
dec
cmp
dec
imul
inc
mov
xchg
sbb
jl
sub
test
pop
dec
ds
dec
push
in
lods
enter
sub
mov
shrl
out
data16
xor
push
dec
cmp
jns
adc
aam
or
addr16
std
arpl
mov
fbld
hlt
test
sbb
push
pusha
adc
jmp
arpl
dec
mov
in
call
cli
push
out
sub
mov
mov
and
push
loope
daa
mov
jae
lods
xchg
sub
push
sahf
push
ljmp
jmp
sub
out
into
mov
popf
mov
push
jl
fsubl
cmp
lcall
push
fisubrs
jl
aas
rorb
pushf
not
movsl
and
mov
das
sub
stos
jb
call
pop
or
adc
adc
mov
ret
fistl
nop
sbb
and
dec
mov
mov
mov
mov
pushf
mov
jno
mov
sbb
mov
clc
sbb
shlb
pop
cli
fstl
mov
dec
pop
popf
sub
xor
out
jg
loop
inc
push
jns
cmpl
dec
or
xchg
inc
insl
jp
icebp
jle
fdivl
dec
add
outsl
not
mov
rolb
jmp
mov
mov
pop
rclb
mov
movsl
jo
lcall
inc
adc
sbb
ret
in
xor
imul
adcl
sub
xor
mov
jg
ja
and
push
fstl
cmp
daa
gs
cmp
xchg
xchg
outsb
mov
ja
push
xor
add
mov
les
mov
insb
cld
mov
mov
repnz
sub
iret
fistl
sar
inc
pop
xor
leave
stos
push
sub
jecxz,pn
add
add
int3
repz
pop
cmc
inc
cli
jns
xchg
aam
scas
xor
add
cmp
lds
cmp
movsb
call
xor
loopne
divl
and
scas
mov
mov
out
sub
fcmovu
cmpb
out
cmpl
jl
jg
scas
add
cwtl
sti
inc
dec
pop
adcb
jnp
inc
aad
lods
sarb
clc
out
xor
sub
pop
pushf
aaa
js
jbe
sub
es
das
cvtps2pd
mov
divb
ljmp
dec
pop
je
out
fs
or
mov
push
ffreep
mov
add
clc
mov
pop
xchg
bound
sarb
stos
pop
loopne
in
cwtl
sbb
test
inc
movsb
sub
fcmove
roll
and
repz
adc
push
jne
mov
cmp
sbb
push
ret
or
mov
ja
push
std
xchg
mov
fs
or
adc
lods
push
xor
addr16
xor
inc
iret
or
mov
lahf
clc
or
ljmp
sarl
xchg
mov
mov
jl
sub
lock
adc
xor
xchg
das
jbe
fsubl
lret
mov
add
bound
div
or
popa
mov
jbe
scas
sbb
call
shl
in
pop
add
xor
jnp
inc
pop
mov
dec
fnstcw
push
pop
inc
subb
jne
xchg
rcr
xchg
aaa
inc
ja
fisttpll
or
roll
or
ds
cmp
test
fwait
pcmpgtb
dec
push
mov
fcomps
sbb
push
inc
cmp
xchg
movsb
ret
shll
not
pop
aam
and
cmpsb
dec
scas
or
mov
out
xchg
dec
cmp
push
lret
loope
mov
lods
loop
adc
xor
rcrb
inc
xor
int
fwait
into
subl
and
mov
mov
inc
mov
jae
jb
and
mov
sbb
stos
sbb
xchg
aas
adcl
jno
push
mov
push
out
inc
sbb
popf
es
adc
enter
ljmp
les
push
sbb
push
push
xor
cmp
jbe
or
shll
bound
out
pop
lods
adc
test
movsb
jmp
int3
mov
jb
sub
push
jp
ror
dec
cmpsl
jbe
sahf
jbe
xchg
mov
addl
aas
or
jge
push
cs
or
ja
sti
dec
loopne
pop
cmpsb
mov
sti
pop
mov
dec
loopne
in
movsl
imul
jp
cmp
les
fst
fwait
mov
cmp
pop
dec
pop
jecxz
in
sbb
xchg
cmpsb
shll
mov
pop
pop
arpl
popa
jge
cs
mov
sbb
cmp
into
test
mov
lea
call
and
push
mov
mov
xlat
incl
mov
dec
sub
and
imul
inc
or
je
fdivrp
or
and
sti
jmp
test
jmp
xor
popf
pop
outsl
hlt
sbb
adc
insl
fistpl
push
push
loop
movsl
xchg
mov
push
test
dec
lahf
cli
dec
bound
jno
mov
mov
daa
or
outsl
ja
push
ja
cltd
push
jno
icebp
pop
pop
inc
das
sub
add
out
icebp
xchg
loope
pop
ret
push
and
mov
loop
cmpsl
push
cld
inc
lret
cmpsl
adc
mov
dec
das
cli
fcoml
into
xor
ss
out
xchg
ret
inc
or
mov
jmp
arpl
inc
mov
aam
mov
or
pop
imul
push
out
xchg
xchg
stos
inc
nop
and
popa
push
stos
dec
nop
mov
popa
xchg
cld
pop
loop
push
mov
int3
dec
cli
push
outsb
sub
pop
mov
cmp
bound
push
lods
adc
loop
xlat
lret
bound
dec
push
push
and
jge
hlt
and
out
pop
popf
imul
xchg
mov
mov
pop
lret
std
sub
out
xchg
repz
cwtl
mov
sbb
inc
sub
cmpsl
ljmp
cmp
lods
rolb
fwait
repz
add
adc
dec
or
push
stos
mov
push
or
mov
mov
cmp
inc
jp
cmpsl
rcrb
sub
mov
push
jmp
sub
data16
imul
mov
loopne
mov
movsl
and
sahf
xchg
mov
into
xor
xlat
add
jns
cmp
stos
cmpsb
mov
es
xchg
jl
add
loop
std
icebp
xlat
dec
mov
dec
and
mov
push
sub
mov
jb
sub
hlt
inc
sub
daa
sbb
jo
arpl
and
jbe
aaa
in
push
push
xor
hlt
jmp
test
in
loop
add
mov
adc
movsl
pop
cmp
enter
jge
xchg
pushf
fcmovnbe
adc
sub
icebp
jmp
imul
ss
insb
daa
jmp
jo
pusha
lahf
rcrb
lret
xchg
and
movl
jge
insb
popa
push
rorl
mov
out
popf
mov
outsl
popa
sbb
out
cmp
ss
push
sbb
mov
fcomps
test
imul
cmpsl
pop
push
andl
in
add
test
mov
je
in
dec
dec
rcrl
and
xchg
frstor
inc
mov
daa
adc
push
mov
mov
rcrl
push
mov
mov
sbb
add
sub
std
xor
sub
adc
movsl
dec
stos
clc
icebp
mov
and
jg
jnp
fisttpl
pop
dec
out
dec
jbe
fcompl
mov
lods
movsl
arpl
imulb
sahf
lret
sbb
and
jae
int
push
in
jns
movsb
cmp
shl
jo
insl
mov
bound
insl
adc
lea
or
xchg
mov
inc
lahf
or
or
test
scas
sbb
fwait
or
adc
mov
and
and
outsb
js
dec
loop
sub
and
aaa
add
push
push
sbb
inc
hlt
sbb
inc
fsubl
lods
and
pop
outsl
inc
into
jnp
pop
push
movsl
sub
mov
mov
pop
in
and
and
insb
push
add
jecxz
cmc
and
xor
cmp
or
push
lods
stos
sbb
scas
cmp
sub
mov
dec
cmp
gs
inc
outsb
cltd
sub
call
hlt
or
popa
dec
fs
dec
icebp
mov
popf
sub
sbb
mov
cmp
mov
or
stos
jae
xchg
mov
and
rclb
adc
cmp
repnz
mov
mov
push
xor
notl
fstpl
test
or
inc
dec
fs
inc
xor
in
adc
mov
sub
or
test
sti
mov
out
mov
add
xor
and
mov
icebp
in
rcl
lds
test
inc
xchg
inc
outsb
in
adc
and
adc
mov
filds
sub
lea
or
push
int
sbb
imul
daa
insb
xorl
orb
pusha
cmp
inc
int3
xor
mov
and
xchg
out
dec
inc
add
add
push
loope
ss
ljmp
dec
cmp
or
pop
xchg
cmp
aad
out
add
lea
std
inc
add
negl
call
cmp
lods
xchg
shll
sahf
pop
jo
imul
stos
add
pop
adc
pop
icebp
out
adc
loop
inc
popf
movsl
aaa
xchg
loope
add
sub
into
sub
sub
xchg
add
fstl
cmp
xor
jo
sbb
pushf
and
mov
arpl
push
daa
jno
test
or
fists
adc
inc
jle
test
add
mov
pusha
out
fmuls
imul
hlt
inc
loopne
adc
jnp
daa
popa
sub
sub
into
push
sub
jbe
ss
je
adc
mov
cmp
xor
push
pushf
sub
lret
loope
add
stc
sbbl
pop
icebp
mov
out
pop
adc
push
mov
pusha
inc
stos
stc
je
in
xchg
push
mov
test
out
or
adc
and
in
mov
dec
je
cmc
and
xor
data16
std
test
or
pop
jl
aaa
sahf
inc
mov
das
std
popf
jge
icebp
movsl
imul
xchg
mov
daa
dec
push
mov
ljmp
imul
dec
push
es
dec
mov
xor
call
mov
mov
popa
in
push
jecxz
and
arpl
mov
loop
mov
testb
jae
mov
pop
neg
add
pop
xor
or
out
mov
inc
cmp
jge
jp
pop
mov
inc
pop
fidivl
pop
dec
pop
dec
mov
ret
scas
or
rorb
xor
jg
repz
enter
sbb
xor
inc
lods
add
sub
repz
hlt
jl
cmc
push
rorb
out
cmp
push
fimuls
loope
or
dec
cmpsl
mov
inc
out
movsl
inc
cmpsb
jg
movb
in
pop
orb
xor
dec
sbb
fwait
cmp
loope
out
sub
test
outsb
fsubr
arpl
inc
test
test
push
push
testb
xchg
mov
inc
jo
stos
sbb
sbb
xchg
mov
aam
inc
pushw
adc
ds
cld
jecxz
pop
sub
mov
fcmove
xchg
add
dec
lret
sub
popf
pop
or
jbe
int
pop
lock
int
leave
push
nop
mov
popf
outsb
fldenv
jne
xchg
sbb
scas
in
insb
jg
addr16
and
mov
mov
and
clc
cltd
mov
ja
movsl
adc
in
dec
mov
jb
aas
add
push
inc
int3
jns
mov
push
cmp
shll
ss
mov
xchg
pop
lock
movsb
sub
sti
lods
xor
sub
push
xchg
in
inc
shrl
jge
movsl
adc
out
jge
ficoml
cmpsb
dec
dec
xchg
mov
dec
push
test
push
push
jbe
or
mov
ficoml
jne
adc
inc
cmc
ficomps
sahf
push
inc
aas
fs
ret
pusha
cmp
mov
ret
cmp
fdiv
lahf
add
sbb
stos
pushf
cltd
repnz
xchg
sbb
fnstcw
std
mov
dec
cmp
cwtl
adc
je
leave
imul
push
xor
popa
sub
ds
cmp
cli
nop
jnp
sub
loope
fiadds
test
stos
add
xchg
js
push
inc
nop
lods
inc
dec
insl
inc
in
xor
and
sbb
mov
xchg
addr16
faddl
dec
movsb
cld
adc
enter
int
daa
push
mov
add
jnp
add
adc
cld
jmp
push
jge
outsl
adc
or
mov
sub
in
sub
test
mov
lods
jne
outsb
push
clts
loop
adc
clc
aas
lcall
testb
lea
mov
fcmovnu
adc
add
inc
add
mov
cmpsb
push
adc
js
fs
mov
outsl
push
iret
fcompl
shl
in
mov
sbb
enter
or
out
dec
inc
into
push
inc
loop
jb
sbb
jge
sub
jb
fiaddl
mov
inc
adc
jmp
aad
pop
pop
push
outsb
xchg
cmp
xor
jb
pop
sbb
stos
arpl
lret
pop
push
rorl
adc
daa
lret
pop
xchg
inc
mov
cmc
or
insl
out
aaa
leave
adcb
popa
cmpsb
sub
mov
xchg
mov
sahf
stos
pop
leave
jbe
push
inc
mov
add
pop
lock
jg
jp
cmp
jp
add
dec
mov
mov
into
test
push
xlat
and
clc
rorl
loopne
test
xchg
fisttpl
or
repnz
mov
add
or
arpl
aam
or
je
or
loope
lret
pop
inc
notl
ficomps
gs
push
dec
aas
cs
dec
addr16
mov
or
sub
dec
arpl
and
addb
das
jno
les
in
mov
nop
popf
mov
cld
pop
push
jle
cmpsb
fidivl
imul
dec
and
xchg
fcomps
add
repz
cvtps2pi
pop
int
or
adc
sahf
mov
mov
mov
push
sub
das
out
mov
pop
loope
aaa
pop
in
dec
sbbb
sbb
push
cltd
mov
adc
cmp
xorl
shl
pop
mov
or
push
push
cld
movsb
pop
mov
fistps
shlb
xchg
jns
cmpsb
in
bnd
rclb
xor
lea
pop
or
mov
push
jmp
scas
popf
imul
mov
inc
pop
push
call
cmpsl
ror
pop
out
test
fnsaves
xlat
mov
xchg
xor
inc
fs
or
int
fistpl
repnz
in
lahf
mov
sti
jae
nop
sub
mov
movsl
dec
clc
or
and
sbb
lcall
fldl
push
ror
xor
aas
insb
xchg
scas
xchg
test
pop
not
dec
adc
jp
push
inc
mov
xchg
adc
mov
jge
lret
jnp
ret
pop
xor
pop
dec
push
les
das
push
icebp
ret
popf
testl
and
loop
in
cli
mov
jo
nop
popf
pushf
xchg
and
or
fmulp
outsl
les
or
jmp
sbb
add
test
leave
and
adc
dec
shrl
rcl
xchg
jge
fsubrl
jbe
mov
leave
lret
int
loopne
fstpt
sbb
jb
int
mov
loop
test
xchg
push
xchg
jo
cmp
icebp
cmp
fnstenv
ret
pop
jmp
dec
stos
or
add
lret
popa
mov
and
pop
lret
or
sub
test
icebp
dec
ror
jne
incl
enter
les
lret
dec
add
mov
test
lret
cwtl
push
rcl
mov
test
sub
cmpsl
pop
push
shrb
aad
fs
scas
jnp
insb
es
adc
out
add
fstps
cmpsl
or
mov
push
jns
mov
mov
mov
dec
flds
adc
mov
popf
int
inc
and
xchg
dec
mov
mov
dec
pop
pusha
and
mov
add
ret
in
jb
pop
jle
in
mov
loopne
idivb
ja
int3
add
cld
mov
cmp
dec
shll
pop
fisubrs
test
pop
mov
imul
dec
stc
inc
and
lods
push
pop
popf
aad
inc
pop
xor
sub
lods
sub
sub
add
in
sbb
testb
mov
pushf
das
int
pusha
pop
add
lock
insb
jns
test
and
pushf
clc
enter
hlt
fistps
sbb
and
mov
sub
imul
sbb
xor
ret
stos
ret
push
out
int3
mov
push
cmpsl
das
add
xor
cmp
jbe
mov
stos
sbb
mov
jae
leave
fistpll
pop
lahf
decl
jg
mov
mov
push
jle
imul
int
push
add
ficomps
je
arpl
repz
insl
icebp
outsl
sar
dec
lea
fsubrl
push
cld
in
into
push
sub
pop
mov
xchg
hlt
lcall
add
or
dec
xchg
mov
js
xchg
dec
imul
pop
test
inc
stc
inc
je
sarb
scas
or
ret
xchg
or
push
lret
cmp
sub
sbb
dec
xor
mov
or
xchg
insb
mov
pop
sbb
inc
aad
orb
outsl
je
pop
mov
aam
jns
xor
and
pop
in
xor
cmp
sbb
into
movsb
rcr
inc
jle
outsb
or
jmp
je
sbb
jge
insb
shll
aaa
lock
sbb
add
bound
cmp
ret
enter
jmp
cmovl
in
add
xlat
push
mov
cmp
sub
jg
into
pushf
xchg
js
repz
jb
outsl
ja
sbb
jno,pn
cmpb
fs
lods
pop
ss
iret
sahf
xchg
shr
loop
stos
lret
mov
arpl
pop
lods
repnz
pushl
push
add
mov
and
lds
cli
inc
mov
dec
sbb
insb
jo
aam
mov
xchg
imul
pop
fisubs
mov
mull
lret
push
dec
pop
shr
jb
vmovaps
sahf
ret
inc
scas
dec
adc
lds
or
lret
sti
fcmovnu
xor
cmpsb
pop
xchg
xchg
sub
inc
scas
lret
test
movsb
lcall
xchg
pop
les
mov
out
push
push
or
rorl
push
mov
aaa
cmp
mov
roll
imul
jne
add
pop
arpl
outsl
subl
repnz
mov
jbe
sub
cmpb
fstpt
ret
adc
xchg
fs
in
cli
sbb
mov
sub
jno
les
gs
icebp
mov
aam
fisttpl
fs
dec
pop
push
addr16
xor
jl
subl
in
lods
das
mov
pusha
adc
mov
adc
jg
sbbl
or
out
sbb
or
or
xor
or
pop
daa
test
lods
in
in
jno
jmp
aaa
cmp
pop
inc
ss
xor
push
jns
mov
roll
fdivrl
jge
and
sub
or
decl
icebp
jne
loopne
cmp
add
dec
fldenv
pop
lcall
paddsb
pop
push
pop
test
int
aas
daa
subb
movsl
cmpsb
jo
mov
ds
outsb
push
adc
lea
push
jle
cmc
dec
int
xchg
cmp
sub
scas
mov
xor
xchg
fwait
aam
xor
ret
or
aad
push
xchg
test
xor
xchg
adc
push
rcr
js
inc
mov
cmp
push
imul
mov
jne
fistpl
push
or
and
or
inc
mov
enter
faddl
jmp
dec
xor
cwtl
div
inc
ljmp
sub
xchg
pushf
push
inc
pop
fiaddl
pushf
gs
fwait
addr16
inc
or
xchg
or
and
leave
mov
popf
test
cld
mov
inc
and
xorl
adc
lods
outsb
mov
push
call
jle
aad
out
mov
test
push
dec
pop
xchg
out
into
dec
sbb
mov
lods
arpl
gs
test
add
icebp
stos
inc
fldenv
das
int
js
mov
mov
cmp
gs
sub
ret
adc
ss
scas
inc
loop
mov
test
das
jns
inc
mov
push
repz
push
cltd
or
sub
mov
jl
scas
fistps
icebp
out
push
pushf
mov
sbb
fwait
mov
push
insl
ljmp
mov
mov
sbb
mov
dec
cmp
repnz
or
mov
mov
and
or
arpl
das
nop
push
add
push
in
xor
mov
mov
test
push
mov
pop
push
pop
test
mov
sbb
cmc
xor
sbb
jmp
mov
jbe
inc
into
adc
out
movb
jge
push
imul
icebp
ss
cmp
pop
ret
lds
mov
sbb
stc
clc
cmp
fdivs
lret
lret
enter
push
push
jno
cmc
dec
cmpsb
mov
nop
les
out
mov
clc
pop
bound
dec
cmc
loopne
push
xor
cltd
in
pop
jge
jl
pop
fmuls
add
subl
dec
xlat
mov
inc
push
xchg
or
ja
imul
pop
aas
clc
push
sbb
jl
jb
int3
mov
mov
cli
pop
mov
out
les
add
xor
mov
sbb
ds
in
stos
push
jae
jp
xor
inc
aad
inc
imull
out
sub
add
mov
std
jp
inc
bound
imul
jno
cmp
ret
neg
bound
jge
cmpsb
cmpsl
cmp
notb
fcmovne
fistl
mov
mov
and
and
xor
in
dec
sub
push
ret
mov
adc
loope
pusha
iret
add
divb
jo
movsl
add
pop
hlt
push
mov
push
pop
jecxz
fs
sar
scas
js
insb
dec
ret
or
jno
add
sbb
leave
fwait
lret
pop
outsl
stc
es
mov
into
lahf
push
fnstsw
or
pop
adc
jecxz
movsb
push
cmp
ja
fwait
mov
jl
lods
sub
stos
testl
jl
mov
xor
jo
aas
movsl
jb
js
mov
xchg
push
loopne
jmp
gs
jb
ret
xchg
int
mull
pop
rolb
mov
sbbl
inc
imul
adc
gs
cmc
or
jno
push
es
sbb
and
xor
bound
inc
mov
lahf
fcmove
sub
int
jg
sub
les
ret
fstpt
jb
hlt
pusha
mov
push
aam
movsb
push
sar
jbe
inc
cwtl
and
pop
idivl
sti
inc
fimuls
xchg
adc
aas
jge
inc
rcrb
pop
cmc
hlt
mov
sub
imul
xor
add
mov
jl
es
les
mov
ds
stos
lahf
repz
je
ds
mov
lret
jo
stos
lods
test
mov
mov
ror
inc
pop
subb
cltd
pop
dec
add
in
jbe
fsub
xor
sbb
scas
fdivrs
pop
test
sbb
aam
aam
cmp
mov
sbb
inc
dec
loope
leave
cmp
push
mov
pop
and
js
fstl
loope
loop
js
inc
lret
out
cld
ljmp
insb
add
ffreep
daa
jno
lods
and
enter
xchg
and
mov
das
je
adc
push
aaa
xchg
cwtl
clc
jp
add
aad
in
les
loope
cmpl
in
das
sbb
sbb
push
pop
push
push
push
mov
lret
in
cld
push
mov
sub
mov
jl
push
movsb
jnp
inc
outsl
stos
dec
ficomps
mov
pusha
test
stos
scas
dec
pop
add
xchg
repnz
dec
or
jmp
ret
and
aad
xorb
jmp
and
and
shl
push
mov
push
cld
sub
jne
repz
mov
lea
cltd
jmp
aam
daa
in
loope
mov
insl
mov
sub
clc
loopne
jp
lret
mov
jecxz
int3
and
lahf
sub
js
sbb
aaa
ret
inc
jmp
stc
mov
cld
push
sub
xchg
cmp
mov
push
imul
sbb
and
dec
or
subb
jo
push
add
push
cwtl
sub
or
jb
push
scas
jb
adc
in
mov
pop
sub
out
jp
sbb
mov
int
or
jbe
leave
jnp
pop
xchg
push
sub
mov
push
mov
push
jno
lret
push
bound
xchg
testb
jmp
cwtl
in
xor
sbb
int3
cmp
jp
dec
aaa
jae
enter
fisubl
lret
add
sahf
sub
stos
arpl
fldl
icebp
sbb
sbb
in
scas
fidivl
cmp
nop
adc
cld
insb
adc
or
inc
nop
cmp
arpl
xor
icebp
mov
mov
adc
call
decl
cmp
in
push
mov
pop
pushf
outsb
cmp
lds
ret
das
cmpsl
adcb
dec
xchg
mov
sbb
lds
std
scas
pop
xchg
es
jbe
xchg
mov
fs
rcll
mov
out
sti
aad
or
pop
out
aad
flds
jmp
sar
mov
jl
sbb
les
in
pusha
sbb
divl
shl
loope
test
std
lods
add
jnp
stos
mov
loopne
or
jae
popa
pop
add
mov
outsb
insb
pop
das
mov
cmc
gs
popl
xchg
jg
inc
jne
andb
cmc
idivb
shl
push
pop
arpl
int3
push
mov
hlt
outsl
fidivs
imul
push
dec
add
stos
orb
hlt
xor
xlat
jno
inc
loope
jge
pop
cmpsl
addr16
cmp
jmp
mov
call
xor
bound
ret
push
and
mov
pop
push
and
ja
das
adcl
inc
dec
push
ljmp
push
add
aaa
addl
adc
ss
push
ret
sub
pusha
sbb
pop
push
fcompl
gs
popa
out
repnz
mov
add
in
adc
dec
pusha
inc
mov
imul
rclb
push
mov
aas
aas
fisubrl
daa
jnp
xchg
dec
scas
in
mov
adc
pop
push
pop
mov
movsb
pop
mov
repnz
fnstcw
xchg
cs
jae
xchg
jns
test
lods
jae
or
negl
fs
loop
dec
jg
push
pop
outsl
push
and
jmp
das
inc
mov
dec
cmpsb
xchg
sbbl
xchg
jle
in
icebp
ret
std
insb
jecxz
inc
movsb
nop
dec
mulb
outsb
jne
inc
in
cmpl
adc
sub
mov
out
fimull
mov
std
mov
psllq
cli
xchg
xchg
xor
jl
push
int
imul
cmp
push
lea
cmp
xchg
cmp
sbb
aas
or
enter
dec
mov
arpl
jbe
pushf
enter
cmp
pushf
cwtl
mov
loope
in
pop
mov
push
push
lea
int
jne
xor
sub
rolb
xchg
xchg
pop
arpl
jne
mov
adc
stos
inc
mov
mov
arpl
hlt
imulb
push
imul
inc
ljmp
pusha
sti
rorb
je
xchg
mov
test
push
jnp
or
jecxz
ja
outsl
imul
jle
nop
test
pop
dec
cmp
inc
loope
inc
rcl
or
sarl
mov
jg
push
imul
inc
mov
pop
test
bound
aas
and
jg
xchg
xor
cmp
adc
and
cmp
or
mov
push
jmp
cli
sub
cli
test
pop
ja
fnstsw
jo
add
push
or
dec
daa
aas
pop
adc
addl
pop
or
adc
pusha
fisttps
xor
push
jbe
pushl
mov
pusha
test
push
cmp
jo
or
cld
push
cmp
pusha
add
pop
mov
xchg
or
sbb
xchg
sbb
adc
dec
nop
lret
cwtl
lea
or
loopne
xchg
das
cmp
aaa
and
mov
aas
mov
jno
inc
push
or
orb
add
notl
xchg
mov
fldt
int
imul
into
cmp
add
test
jb
jo
rep
inc
pop
es
xchg
ljmp
xlat
imul
dec
sahf
dec
into
jns
adc
jecxz
cld
fcompl
inc
lock
dec
sub
push
push
jb
stc
lods
cwtl
sti
std
shll
inc
and
push
lea
inc
xor
insl
pop
cs
jecxz
cmc
fwait
stos
lcall
mov
mov
jns
cld
popa
orb
ljmp
adc
lds
not
cmp
nop
lock
cmp
scas
into
xchg
fnstcw
mov
add
or
stos
sub
jns
mov
xor
ficoml
clc
and
sbb
outsb
fldt
or
ja
lock
jns
xchg
fstl
pusha
stc
mov
mov
into
mov
ret
repz
pushf
xor
out
mov
mov
adc
jae
movsb
fwait
cltd
cmp
dec
dec
and
cmp
cwtl
inc
jns
in
or
adc
xor
sub
cmp
jge
out
cmp
sub
jge
pop
repz
jg
inc
push
cmp
pop
xor
adc
mov
sub
mov
aas
nop
sub
sub
mov
aaa
pop
hlt
negb
and
jg
andl
fdivrs
push
push
pop
cmp
std
mov
inc
insl
cld
and
stc
pop
cwtl
add
movsl
cld
xchg
adc
cmp
cmp
lea
lcall
or
xchg
fistl
mov
mull
into
xor
mov
ret
fldcw
push
and
into
call
stc
jge
adcl
push
clc
mov
jnp
inc
bound
fwait
shrb
into
jne
jl
into
repz
pop
je
fsubrs
rol
or
dec
in
mov
repnz
xchg
in
push
sub
mov
sti
stc
add
pop
mov
rcrl
mov
orl
mov
push
outsb
push
outsl
mov
nop
pop
mov
jmp
sarl
cmpsl
pop
shlb
rcll
int3
xchg
xor
and
clc
fistpl
mov
push
fistpl
js
stos
adc
lea
cmp
insl
sub
adc
imul
sub
jnp
dec
sbb
jp
jp
fildl
lds
inc
cwtl
cltd
repz
cmp
jmp
and
pop
iret
addr16
jbe
sbb
test
or
xor
movsl
xor
cmpb
out
ds
add
lcall
fs
movsb
mov
dec
xchg
test
and
and
jecxz
or
filds
push
pop
dec
mov
pop
pop
sbb
gs
mov
iret
fcmovb
notb
sub
mov
loopne
push
and
xchg
cs
pop
shrl
jnp
mov
inc
inc
lods
out
add
aad
js
idiv
lods
pop
aas
or
scas
into
dec
scas
push
scas
pop
add
out
mov
aaa
and
pop
cmpsl
sub
xorb
in
ret
fadd
repnz
loopne
dec
mov
pop
ljmp
or
lret
loop
leave
pop
inc
push
sbb
cmp
shlb
add
mov
cmp
rclb
xchg
test
add
negb
pop
jnp
mov
jnp
jne
insb
test
out
mov
ret
jl
jno
inc
movsb
jb
arpl
shr
adc
stos
jns
mov
adc
mov
sub
pop
jb
cltd
leave
push
lea
shlb
in
or
test
ror
fildll
bound
movb
cmp
in
int3
xlat
orl
cmpsb
sub
jl
je
xor
shl
xchg
push
data16
sbb
ror
mov
addr16
jno
je
or
sarb
mov
lret
add
cmp
push
mov
dec
lea
loop
mov
imull
out
jp
mov
push
inc
pop
lret
xor
ljmp
xor
jae
mov
push
lahf
mov
shll
xchg
std
js
inc
cmp
and
pop
or
jge
popa
pop
mov
leave
push
dec
sub
ret
add
int3
adc
adc
not
test
inc
in
lahf
mov
dec
aam
pop
ss
xchg
jb
je
stos
jp
inc
imul
loopne
cmc
aad
test
pop
sbb
leave
sbb
dec
xchg
stos
and
cltd
hlt
mov
repz
icebp
jp
scas
adc
xor
jno
add
out
mov
dec
in
inc
aaa
push
aaa
mov
stc
scas
dec
lret
aaa
pop
rcr
outsl
testl
and
test
lcall
and
test
pop
bound
mov
mov
jmp
pusha
pop
and
lea
or
cmpsl
gs
add
ljmp
mov
loope
bnd
mov
xchg
mov
or
cmp
and
inc
inc
push
fwait
lret
mov
or
mov
sub
xchg
mov
fiadds
mov
sub
cs
fsts
fidivl
pop
mov
xchg
ja
mov
mov
loope
cmp
pusha
stc
das
jl
inc
addr16
addr16
fsubl
in
sbb
cmp
adc
clc
mov
loope
ret
es
mov
inc
arpl
mov
decb
mov
cwtl
push
push
leave
cltd
sub
cltd
pop
mov
mov
dec
add
popa
adc
adc
out
in
mov
pop
push
mov
xlat
shl
sahf
leave
out
sub
lods
fcmovu
std
aaa
mov
push
xchg
lock
sub
mov
or
and
mov
dec
dec
outsb
dec
sbb
sbb
lret
inc
cmp
popf
xorb
push
mov
xchg
sahf
mov
push
jmp
test
jno
cmpsl
push
sub
rolb
mov
jecxz
push
cmp
pop
int3
mov
into
add
cmpsb
xor
sbb
adc
ljmp
mov
popl
mov
push
or
push
and
inc
ret
std
mov
stos
mov
jecxz
lods
adcl
add
push
mov
gs
jnp
mov
rorl
mov
subb
int
cmp
ds
jo
test
fnstcw
movsl
add
lods
mov
outsb
cmc
mov
pop
sbbb
lods
pop
fs
jl
mov
test
mov
lcall
dec
cmpsl
dec
in
aaa
or
ljmp
add
mov
or
pop
or
outsl
add
jg
insl
das
and
inc
cmp
jb
cmp
jbe
leave
pop
rorl
inc
testb
in
pop
mov
xchg
daa
inc
out
lahf
adc
imul
push
loope
arpl
cmp
addl
xchg
iret
push
cmpsl
sub
pop
pop
sub
stos
xorb
push
jecxz
repnz
jbe
and
and
ret
mov
fldenv
xchg
bound
add
cmc
push
dec
adc
fidivl
mov
xlat
inc
add
pop
mov
inc
cmpsb
mov
xchg
jno
jge
xchg
and
data16
sti
arpl
into
jb
enter
js
pop
cs
out
loope
js
push
mov
sbb
push
push
je
bound
aaa
mov
cmp
and
fldl
cmp
aad
cwtl
xchg
mov
push
mov
icebp
clc
aam
addb
jg
add
scas
cli
data16
sbb
sub
push
data16
xchg
mov
jb
nop
out
shrb
movsb
inc
cmc
lods
scas
stos
inc
rcrb
cmc
or
lret
mov
mov
iret
ljmp
jmp
pop
sub
cs
and
jae
cwtl
sbb
push
inc
sub
xor
lahf
shrb
call
push
pop
jecxz
movsb
dec
lods
aad
inc
aad
lods
shl
mov
jg
or
in
sbb
iret
lret
xchg
jle
sahf
cs
cmpsb
xor
in
mov
push
push
bound
inc
mov
lahf
xchg
ds
push
movsb
outsb
sub
leave
xor
lods
mov
add
add
test
mov
mov
sbb
ret
lcall
stos
ja
xchg
pusha
cmp
nop
sub
jge
cmpsb
xchg
mov
out
add
insb
pushf
in
out
mov
xor
jp
cs
fldenv
adc
outsb
push
in
inc
cmp
pop
push
cwtl
sub
jae,pn
add
outsb
mov
mov
xchg
fidivs
sbb
leave
mov
mov
lret
mov
fsubs
mov
aas
inc
sbb
js
leave
fldl
or
and
icebp
xor
and
mov
jnp
pop
push
les
outsb
lcall
pop
push
inc
shl
aad
mov
jbe
and
sub
enter
mov
adc
xchg
jecxz
gs
adc
aaa
out
xor
xchg
fistpl
push
pop
mov
pop
aas
daa
mov
in
push
addr16
pop
loope
lods
or
dec
jne
dec
mov
into
mov
xchg
mov
stos
cmp
mov
jle
push
test
aam
cli
mov
jae
xor
pop
lods
xor
mov
out
inc
sbbl
mov
js
sbb
or
stos
aad
fstpt
adc
test
gs
fwait
adc
out
ficomps
xor
addr16
push
mov
inc
xchg
xchg
inc
aaa
adc
and
movsl
add
jg
and
lods
aas
in
mov
pop
or
out
fnstcw
xchg
sti
stos
cmp
fstps
fisttpll
xor
ljmp
outsl
call
iret
out
pop
mov
call
adc
idivl
imul
dec
fxtract
and
cmp
rorb
add
cli
shl
or
movsb
inc
sbb
sti
or
outsl
cmp
xchg
sahf
pop
lods
xchg
mov
dec
aad
fwait
adc
imul
jnp
js
loope
aas
stos
stos
in
xor
inc
nop
fidivl
sbb
adc
cmp
stc
mov
add
jg
out
adc
push
jle
test
dec
add
dec
jb
mov
lods
mov
sbb
inc
adc
scas
pusha
notl
out
sbbl
xchg
dec
sbb
orl
test
movsl
add
ja
mov
test
sbb
movb
sub
lock
sub
repnz
sub
cmp
fidivrs
divl
lcall
xor
cmpsb
out
mov
stc
mov
jno
mov
in
mov
daa
xor
sbb
sbb
add
adc
mov
je
cmp
pop
or
jl
scas
pop
loop
xchg
mov
lcall
pop
jnp
test
pcmpgtb
mov
test
dec
xchg
sub
adc
fwait
and
mov
mov
rcrb
and
push
or
cmp
inc
addr16
gs
cmpsb
cmpsl
ljmp
adc
sub
xor
sarl
loope
jge
nop
shll
xchg
mov
sbb
mov
jge
xchg
bound
aaa
pop
jle
jg
xchg
test
jno
sub
gs
sub
int3
mov
push
test
cwtl
dec
xlat
shlb
lret
out
mov
jo
cli
pop
addr16
lods
clc
xchg
js
xchg
jp
and
xor
test
mov
repnz
out
lock
out
inc
jns
jg
in
jo
or
push
pop
vshufps
testb
mov
add
and
flds
hlt
mov
mov
sub
shl
pop
jl
mov
pop
in
jg
xchg
imulb
mov
cmp
and
sub
cwtl
in
divb
cmp
jmp
inc
and
xchg
lcall
addr16
popa
lea
jo
pop
inc
ret
rcrl
sbbl
adc
adc
rep
jne
lods
cmp
lock
mov
imull
mov
xor
into
std
mov
fistpll
nop
jmp
fisttpll
dec
stc
sub
call
mov
cmp
mov
sub
xchg
enter
pop
lret
cmp
andps
mov
and
jnp
jmp
pop
sti
dec
mov
jae
fisttps
pop
in
cmp
setnp
pusha
leave
push
mov
lcall
mov
mov
inc
iret
and
adc
icebp
rcr
fmuls
lods
lahf
lcall
push
fucom
push
push
daa
or
xchg
loopne
mov
rolb
scas
and
sub
nop
outsl
dec
aad
mov
dec
shrl
cmpsb
pop
pop
call
gs
aam
daa
sub
adc
jno
xchg
int
lds
fld
mov
shrl
bound
lret
cli
xchg
xchg
mov
sub
add
pop
cmovne
addr16
rolb
call
and
or
mov
into
out
sub
inc
xlat
lea
push
rolb
jnp
sarb
ret
outsl
xor
xor
out
and
xor
push
jg
outsl
adc
outsb
movsl
fwait
push
sbb
decl
mov
sub
fisubs
mov
dec
rcl
insb
cltd
xor
sbb
idivl
dec
dec
std
rcrl
mov
std
push
push
shlb
lret
jo
fldt
pop
loopne
daa
outsb
xor
lret
pop
cmpl
mov
xor
jne
js
dec
icebp
jmp
sbb
repz
mov
xor
and
or
dec
adc
lods
pusha
ret
cld
stos
jnp
das
mov
popf
xor
sub
outsb
inc
xor
xchg
push
aas
jns
jg
inc
mov
ficoms
ret
jecxz
push
sub
aaa
xchg
mov
mov
push
pcmpgtb
cltd
mov
mov
cs
cmp
mov
push
push
aad
stos
jg
jmp
dec
jno
les
jl
dec
mov
and
sbb
add
aaa
xor
sbb
or
inc
cmpsl
ds
cmp
ljmp
addr16
rcll
sbb
cltd
jecxz
jbe
mov
movsb
pop
fsubl
add
cmp
xchg
sahf
cmp
mov
imul
inc
pop
add
push
jecxz
int
mov
stc
cld
faddp
sbb
imul
aas
and
push
add
ficoms
imul
cld
das
lods
sub
mov
pop
arpl
pop
subl
call
and
cmp
xchg
xchg
inc
cmpsb
jns
arpl
inc
lods
or
mov
in
add
enter
adc
daa
out
sbb
sbb
ja
dec
jns
push
ret
stos
push
mov
adc
sub
stc
in
pushf
push
sarb
mov
pop
jmp
push
mov
movsl
adc
insl
fsubs
mov
stc
cltd
out
je
sar
aaa
fsubrl
aaa
jbe
ljmp
repz
inc
shlb
cmc
push
add
xchg
dec
cvtps2pd
mov
or
jno
or
xor
cmp
popa
lods
daa
jecxz
inc
cmp
fwait
xchg
jne
pushf
rorb
add
call
stc
sbb
mov
inc
hlt
cmp
jg
pop
test
and
push
and
and
and
pop
lds
dec
rcl
jbe
mov
das
sbb
mov
jb
insl
insb
test
out
addr16
fists
pop
and
mov
fnsave
ljmp
cmp
sti
outsl
out
mov
push
dec
mov
jp
mov
aam
lret
inc
adc
aaa
inc
mov
or
inc
int
fisttpll
jge
inc
xlat
hlt
mov
sub
xchg
push
sbb
adc
sub
je
cmp
lcall
mov
dec
fadds
lcall
scas
xor
notl
jg
outsb
ljmp
sahf
gs
pop
jnp
mov
sbb
jp
pop
ja
jp
jle
jp
stc
incl
add
fwait
test
sbb
xlat
mov
mov
sbb
aam
movsl
dec
ja
testb
mov
mov
sbb
or
mov
mov
inc
jge
lret
and
mov
into
lock
js
or
lea
popf
leave
pop
cmp
lahf
mov
shlb
push
inc
lods
mov
addr16
mov
sbb
or
pandn
lret
bound
popa
fdivrs
cmc
sarb
aas
stos
or
push
mov
or
out
cld
xor
pop
jl
mov
aad
cmpsl
mov
and
mov
aad
mov
out
jno
sarb
lcall
dec
cmp
push
ror
add
popa
mov
mov
ret
pop
jp
push
fcmovbe
xlat
jo
dec
enter
mov
inc
inc
scas
sbb
pop
xchg
dec
les
jae
arpl
sbbl
addl
cmc
xchg
call
jg
push
popa
mov
jb
cmpsl
aaa
xor
mov
push
int
sub
xor
ja
pop
stc
lods
cmp
mov
sub
inc
and
sti
xchg
sahf
sbb
ljmp
push
jmp
adc
in
cmp
push
shlb
jge
jbe
mov
imul
mov
xchg
fwait
cmpsb
dec
iret
add
sub
lret
ljmp
mull
arpl
cmpsl
mov
out
lret
addr16
shlb
lret
xchg
xchg
push
push
cmc
dec
jg
mov
lahf
leave
in
dec
pop
scas
add
cltd
xchg
sahf
repnz
ret
hlt
fwait
xor
test
mov
aam
mov
fisubrs
lea
ror
bound
adc
sub
lret
mov
pop
inc
pop
dec
aaa
sbb
lea
sub
ss
jnp
repz
mov
dec
push
repnz
sub
jecxz
testb
mov
dec
push
adc
jge
inc
inc
mov
push
mov
pop
nop
outsb
sub
inc
ljmp
mov
and
push
xorb
std
dec
mov
jge
sbb
shrl
fbstp
push
jbe
jle
es
daa
iret
adc
fdivr
pop
cmc
push
or
popf
cmp
sub
loope
xorl
data16
dec
lcall
xchg
xchg
in
jg
int
ficomps
jnp
icebp
add
test
lcallw
pop
test
pop
mov
sub
bound
mov
fnstcw
sub
pop
xchg
pop
pop
sub
xchg
idivb
jl,pn
movsb
addr16
jge
dec
popa
fcomi
pop
mov
mov
xor
negb
and
add
and
dec
ficoms
dec
decb
lret
aad
rcll
push
loopne
mov
jbe
enter
mov
lods
lea
std
adc
cmp
data16
cs
jge
sub
mov
mov
dec
or
sbb
out
cmp
lret
ss
push
fadds
xchg
negb
sbb
pusha
push
adc
cwtl
mov
pop
mov
lcall
inc
xchg
mov
popa
out
dec
xor
jg
jo
lods
cli
mov
aas
fwait
jl
jmp
cmp
lcall
mov
lret
cld
data16
mov
jne
mov
xchg
imul
insl
cwtl
fiaddl
adc
cmp
dec
inc
ds
xchg
jbe
jmp
fcoms
xor
sbb
in
cmp
fistps
add
mov
insl
lcall
shlb
imul
out
addr16
repz
stos
inc
mov
dec
fwait
ss
mov
lods
es
xchg
or
mov
inc
mov
frstor
call
jae
jp
jbe
inc
ss
fisttpll
inc
cs
ja
push
icebp
xchg
xor
out
rcr
aaa
shrl
xor
push
push
jecxz
loop
clc
dec
jne
sub
mov
sbb
fnstenv
inc
gs
cltd
repz
jbe
divb
ja
mov
sbb
or
call
pusha
mov
or
notb
es
lcall
lods
add
and
mov
cmp
cld
xor
jge
adc
xchg
xchg
ret
adc
cltd
xlat
cmc
cltd
test
enter
dec
jb
stc
mov
mov
cmpsl
mov
mov
movsl
data16
into
jns
push
jge
nop
sahf
test
inc
mov
test
jb
add
sbb
pop
pusha
jl
xchg
clc
inc
push
mov
lcall
jmp
mov
dec
arpl
loop
dec
sbb
inc
popf
movntq
testl
es
int3
ljmp
outsb
jno
push
scas
outsl
lds
mov
cmpsl
sahf
cltd
fadds
rcl
int
inc
popa
add
dec
and
data16
or
jae
mov
cmc
in
in
inc
sarl
iret
test
rorb
jnp
cmp
jp
wrmsr
adc
push
pop
push
mov
push
sahf
mov
data16
sbb
mov
inc
rcrb
loope
fs
or
xor
sub
int
push
or
cmpsb
test
out
fsubl
sbb
pop
testb
test
dec
ss
cmp
rcll
and
mov
aam
pop
jmp
sahf
out
daa
mov
or
cwtl
fdivp
push
inc
xor
icebp
and
inc
stos
ss
loopne
dec
jmp
lea
jl
idiv
out
jmp
sbb
repz
sub
or
out
cli
into
mov
xchg
xchg
push
cmp
inc
out
mov
bound
mov
idivb
push
push
imul
add
sbb
and
xchg
lds
xor
inc
adc
sbb
pushf
pop
cltd
shrl
sbb
mov
lcall
js
repnz
sbb
or
xchg
add
jle
in
es
jmp
popf
sbb
pusha
int
sbb
jle
cmp
in
add
clc
gs
lds
pop
test
lds
jne
dec
adc
loop
and
or
mov
mov
mov
push
adc
and
in
lret
das
lret
stos
sub
int3
icebp
xchg
sbb
lods
cmpsb
adc
loopne
pushf
popf
pop
lretw
cmpsl
cmp
mov
inc
push
in
stc
outsb
in
hlt
imul
or
stc
push
js
pop
mov
jno
jnp
icebp
fchs
pop
xlat
xor
inc
int3
cmc
inc
xchg
push
cltd
and
out
dec
cld
mov
cld
outsl
mov
popa
mov
sbb
add
mov
fs
mov
fcmovnu
loopne
xorb
push
mov
push
pop
add
mov
jle
jo
loope
arpl
inc
mov
movsl
icebp
ja
adc
cmp
inc
iret
ds
sbb
scas
cmp
mov
imul
das
dec
test
in
rcll
jecxz
std
xor
mov
std
lcall
pop
mov
xchg
xchg
adc
sti
mov
lahf
pop
stos
cmp
imul
jle
repnz
imull
or
pop
es
mov
movsb
jp
ret
mov
sub
pop
push
out
mov
add
xchg
adc
cmc
inc
cwtl
loope
adc
mov
push
aad
or
daa
movsl
mov
sahf
loopne
out
mov
std
int
scas
xchg
ds
out
cmp
mov
stos
lret
popf
mov
xchg
lods
and
popf
inc
test
mov
jno
int
push
adc
inc
mov
push
jnp
cmp
pushf
and
lds
leave
cmp
ljmp
push
loop
js
fsubs
sbb
push
in
xor
add
mov
push
je
cmp
scas
push
aad
lret
jbe
insl
inc
and
push
xchg
sti
adc
lcall
andb
loop
iret
dec
xor
adc
cmp
imul
ret
ja
pop
add
push
lahf
dec
test
mov
or
mov
clc
xchg
adc
add
add
jle
sbb
cmp
cmp
repz
les
adc
and
loopne
cld
sbb
adc
in
or
mov
push
movsl
jo
js
mov
jp,pn
and
cmp
dec
mov
push
clc
scas
test
repnz
or
pushf
std
mov
lret
xor
popf
push
push
ret
push
pop
push
and
popa
push
xchg
sub
repnz
xchg
add
mov
mov
sub
into
jge
out
add
lret
cmpsl
arpl
pop
stos
stc
adc
fcomp
mov
push
push
lds
pusha
addr16
test
shll
or
mov
repnz
lods
sub
mov
mov
in
add
adc
dec
inc
sbb
dec
into
notb
ds
aas
xchg
pushf
repnz
mov
push
insb
insl
insl
mov
test
xchg
mov
mov
jb
ss
inc
mov
shlb
loopne
addr16
cmpsl
mov
jmp
shlb
mov
jp
icebp
sti
lock
data16
push
lock
fidivl
sub
loop
sbb
add
and
add
fs
xor
testb
cmp
jae
negb
push
lds
xchg
stos
popf
mov
hlt
adc
adc
sub
cltd
mov
mov
dec
add
jbe
pop
loop
jg
insb
push
loopne
fwait
insb
imul
sbb
loope
pop
jge
fdivs
mov
dec
mov
scas
sub
lea
or
outsl
cwtl
int3
push
xlat
gs
xchg
loope
stc
mov
dec
sbb
movsl
inc
add
in
mov
cmp
or
fmull
je
leave
add
sub
or
xchg
pop
add
jbe
sbb
lods
xchg
or
in
mov
ret
cmpsl
xor
inc
cmpsb
mov
fstpl
add
adc
pop
or
addl
mov
push
push
dec
push
aad
xor
sub
inc
sti
into
or
insl
push
jno
cmp
jmp
xchg
mov
loopne
mov
test
xor
xor
add
call
or
arpl
mov
divb
add
mov
xchg
xor
sahf
hlt
adc
pop
add
xlat
and
push
jo
js
clc
cmp
mov
dec
stos
std
outsb
push
lock
add
ljmp
pop
cmpsb
mov
pop
sub
lahf
ljmp
pop
es
pop
push
mov
repnz
sub
int3
pop
popw
fiadds
cmpsb
xor
mov
pop
cli
jmp
push
aad
xchg
jl
xor
xor
pushf
xchg
or
ljmp
inc
mov
xchg
int
outsb
pop
outsl
lea
jl
rclb
inc
stc
xchg
rep
das
shlb
loopne
gs
popa
hlt
call
iret
jecxz
push
loopne
sbb
sub
sti
out
xor
loope
dec
lock
sub
lea
imul
sbb
lods
mov
jbe
in
mov
dec
sbb
dec
sub
pop
int3
popf
out
and
jae
stos
fisubrl
leave
das
dec
mov
pushw
xor
std
lea
sub
pop
sahf
mov
js
addl
jp
sbb
cmp
jo
mov
adc
mov
add
pop
test
imul
fld1
dec
aam
mov
test
insl
test
stc
dec
cmc
setae
mov
mov
je
push
addr16
mov
fstp
gs
cmpl
popf
lea
xchg
test
enter
insb
cs
bound
pop
scas
xchg
es
mov
mov
cmpsb
gs
cmp
or
in
and
or
cmc
aaa
mov
insb
add
cmp
push
pop
addr16
push
enter
paddsw
insb
clc
cmp
push
xor
sub
pop
xchg
dec
xor
sub
sbb
mov
ljmp
push
jne
lods
inc
cmc
xorb
sub
and
pop
test
lcall
jmp
or
sbb
ja
pop
cmp
push
xchg
xchg
out
mov
fxch
adc
xchg
mov
js
test
cmp
fstps
ffreep
push
fldt
in
cwtl
jecxz
mov
es
loop
add
call
mov
insl
pop
dec
mov
xor
push
jae
std
mov
push
jo
jg
dec
adc
pushf
insl
gs
mov
sbb
test
add
aam
pop
mov
or
push
and
mov
and
int3
jae
mov
mov
lahf
dec
rolb
int3
mov
sub
fdivr
fucomi
mov
dec
fwait
nop
aaa
mov
test
xlat
test
inc
add
loope
push
sbb
mov
sub
sub
pop
sub
cmp
adc
fs
and
jne
das
out
sbb
cmp
pushf
and
enter
pop
cld
push
dec
jb
pop
and
add
xchg
jo
jo
ja
or
test
fbld
subl
in
xchg
in
cmp
inc
inc
jle
sbb
push
xlat
mov
jno
dec
movsl
sarl
inc
popf
daa
xor
and
imul
int3
push
aad
xchg
inc
les
mov
cmpl
jns
subl
fisttpl
push
jmp
movsl
push
mov
cmpsl
sub
xchg
mov
xchg
adc
into
push
ljmp
jp
sbb
cmp
and
xchg
xor
mov
imul
jl
cmp
dec
sub
out
push
inc
inc
iret
imul
cmp
outsb
leave
jmp
or
jl
ret
add
fdiv
dec
test
inc
icebp
mov
outsl
xchg
and
lods
adc
or
push
bound
mov
rcrl
or
dec
adc
je
arpl
out
lret
mov
js
sub
aaa
repz
mov
jbe
lea
mov
in
or
jmp
adc
gs
shl
call
mov
jg
into
movsl
sbb
lret
repz
aas
out
test
rcrl
test
cli
pop
xchg
mov
jbe
dec
fsubl
divl
add
jp
cmp
mov
stos
out
stos
es
mov
dec
adc
mov
or
jge
mov
and
pusha
testb
sarl
xor
xchg
pop
jecxz
and
cmp
repz
popf
inc
addl
or
in
add
popa
mov
aas
push
sub
xor
pop
xchg
test
inc
adc
ffree
push
xchg
add
mov
lods
and
dec
adc
jns
pop
repnz
xchg
stos
pop
cmp
sahf
loop
sbb
sti
push
int
and
and
xlat
sub
xor
mov
sbb
nop
mov
arpl
into
test
lods
addr16
lods
out
fildll
push
pop
mov
neg
dec
lea
cltd
ret
test
ljmp
std
ljmp
cltd
mov
rcr
adc
ja
push
sbb
or
fimull
mov
scas
jb
adc
push
sahf
xchg
ret
add
add
fstl
out
mov
aad
aad
jne
popa
cmc
shlb
int3
lret
fwait
add
push
sub
leave
arpl
gs
and
dec
out
scas
mov
fcomps
dec
fnstsw
xchg
cmp
xlat
push
sub
outsb
mov
shrl
mov
leave
xor
fdivrs
insl
pop
decl
cmp
shrl
xchg
fisubrs
repnz
xor
xor
nop
lret
cmp
push
cmc
xor
stos
inc
test
and
addl
mov
mov
mov
sub
pop
aaa
push
sarl
xlat
std
rolb
inc
aam
fwait
fs
push
out
cmp
out
cmp
xchg
xor
jmp
nop
mov
popa
ror
pop
scas
sahf
cmp
jge
into
xor
std
test
inc
ljmp
ljmp
std
stos
xor
mov
jl
and
jge
jnp
jmp
in
fisubrl
mov
and
data16
fildl
mov
add
aaa
or
fcmovnu
mov
sbb
sbb
or
leave
call
cmpsb
push
inc
arpl
loope
mov
ljmp
outsb
mov
ljmp
mov
push
jmp
popa
lock
pop
in
sub
in
leave
cmp
je
inc
jno
or
lret
dec
jg
ja
mov
xlat
mov
mov
aad
stc
jae,pt
push
push
cli
les
mov
push
xchg
jge
js
lea
lea
pop
sbb
enter
xor
ret
add
push
cmp
inc
jg
outsl
push
mov
lcall
jecxz
and
out
test
add
jno
in
mov
into
mov
xor
sbb
stc
jae
inc
adc
clc
inc
adc
jb
sbb
mov
outsl
das
adc
inc
out
cmp
rcrb
push
test
add
lahf
mov
addr16
pop
ja
cmpsb
popa
aas
enter
and
dec
arpl
jecxz
sub
movsb
fs
cmc
mov
mov
movsb
je
add
cmc
jbe
sbb
test
mov
cmp
sti
aad
adc
sub
mov
sbb
mov
decl
insb
cmp
test
mov
xchg
cmpsl
arpl
push
sbb
outsl
pop
fmul
sub
xor
ror
pop
call
fxtract
xor
xchg
rorb
stos
mov
mov
pusha
sbbb
cli
cmp
mov
mov
push
push
movsb
mov
std
aam
movsl
push
sub
mov
adc
push
insb
sub
inc
clc
stos
xor
mov
fidivl
ficoms
imul
or
inc
int
cmpsl
or
jne
push
aas
in
imul
lcall
cmp
ret
shl
movsb
testl
icebp
fidivrl
outsl
out
fstps
insl
add
test
clc
das
aaa
rorl
in
dec
dec
pop
push
push
xor
shr
push
pop
ficoml
jmp
cmp
sbb
or
sbb
mov
ljmp
push
gs
ds
pushf
and
xor
adc
sub
sbb
int3
or
or
stos
loopne
insb
add
mov
loope
mov
aaa
les
enter
ret
sbb
push
mov
fbstp
xchg
sti
sbb
fwait
xchg
or
cli
fisubs
mov
test
pop
pop
js
mov
js
xchg
sub
and
ja
sbb
data16
inc
or
pop
inc
test
cmp
or
sbb
inc
sub
adc
xlat
pop
dec
scas
mov
xchg
add
mov
cmp
in
and
cld
inc
lahf
push
fdivrs
cmp
push
jp
movsl
pop
xor
dec
fdivrs
iret
jmp
movsb
lea
mov
cmp
addl
cmc
push
test
cmc
and
nop
adc
stos
out
mov
jmp
or
data16
in
sub
mov
sub
emms
jae
repnz
xchg
or
pop
sub
lock
movsl
adc
aas
sbb
add
jecxz
movsb
jb
call
cmp
test
adc
jmp
xor
mov
and
pop
push
ficoml
mov
inc
in
or
sbb
pop
jnp
movsb
pop
and
stos
movsl
mov
lea
jae
test
cmp
mov
add
repnz
jmp
sub
add
and
dec
ds
ret
mov
adc
int3
aad
push
add
jmp
subb
mull
mov
int3
arpl
inc
xchg
mov
xor
aaa
test
xor
push
push
test
test
ds
sub
aad
add
and
sub
xchg
or
inc
pop
int3
fs
daa
and
xor
movsl
add
pusha
sub
in
mov
and
fiaddl
mov
mov
mov
or
xchg
jb
xorb
aad
sarb
or
les
hlt
xchg
mov
jp
jb
orb
ret
lds
xchg
into
adc
dec
sbb
cmp
pop
test
test
push
inc
xchg
nop
ljmp
add
jae
jnp
and
adc
or
mov
inc
mov
xor
jbe
adc
dec
insl
mov
xor
data16
lcall
xchg
aad
push
or
dec
lahf
cwtl
sub
adc
add
imul
mov
icebp
and
xchg
in
jb
loop
jge
jle
test
cmp
fisttpl
out
addr16
inc
out
inc
repnz
adc
mov
adc
add
and
movsb
add
pushf
mov
idiv
lea
xchg
mov
ret
add
or
or
cmpsb
mov
dec
jmp
push
adc
mov
cmp
lods
pop
insl
inc
xchg
pop
mov
push
and
fwait
sbb
lock
mov
or
mov
cli
out
or
or
and
xor
pusha
inc
movsl
stos
iret
enter
test
call
jge
cmp
xchg
adc
sub
fwait
or
pusha
push
cli
xchg
std
inc
mov
into
clc
jae
iret
mov
fldcw
jns
lods
into
test
xchg
mov
je
push
push
xor
cli
adc
push
mov
mov
cmpsb
repz
ficompl
data16
mov
ss
shrl
push
and
push
add
out
add
scas
add
mov
out
cmp
ret
ret
mov
mov
popa
dec
pop
cmp
cmp
sbb
repz
addb
and
add
loope
jbe
movb
xchg
lcall
shlb
mov
mov
cld
les
xor
xor
cmp
pop
aas
push
jno
mov
popa
loop
mov
pop
push
add
int3
mov
lahf
stc
jle
mov
and
push
pushf
jmp
cmpsl
mov
inc
call
in
lods
aas
inc
les
add
pop
and
aas
jecxz
cmp
ljmp
mov
jmp
push
fstpl
stos
loopne
or
cltd
lahf
ret
jmp
mov
aaa
mov
int3
mov
clc
shrb
divb
cli
leave
inc
jmp
sbb
sub
xchg
xchg
andl
push
cwtl
xchg
in
data16
lret
xor
inc
lret
jo
lret
ja
pushf
ret
push
out
popa
fwait
out
push
jnp
mov
imulb
mov
inc
lahf
jno
aaa
dec
cld
xor
push
pop
xchg
repnz
push
xchg
repnz
test
bound
fucom
sbb
and
stos
cs
jb
scas
int3
lds
inc
data16
mov
mov
mov
mov
jne
sti
roll
xor
jbe
or
popa
arpl
sub
jne
mov
pop
sub
je
inc
int
adc
sub
adc
daa
sti
mov
xchg
mov
pop
test
daa
jne
mov
mov
xor
jb
ret
shll
dec
dec
leave
xlat
adc
jl
mov
dec
test
push
repnz
or
jle
mov
inc
test
sub
pop
xor
or
out
imul
js
cmp
mov
push
subb
adc
cmp
push
stos
xchg
cli
pop
jno
mov
xchg
js
inc
adc
es
xchg
in
es
add
pop
js
jecxz
or
sbb
jbe
mov
out
jne
imul
jb
push
cltd
lock
xor
lds
add
sahf
repz
cmp
pushf
movsb
xchg
dec
insl
push
test
js
jb
adc
cli
xlat
add
mov
lods
jge
inc
daa
jg
pop
and
in
mov
lretw
push
jb
loop
mov
push
fs
out
subl
aas
mov
or
scas
push
iret
jne
pop
mov
push
gs
add
out
cmp
adcl
ss
lret
bound
in
cmpsl
in
xor
mov
sbb
jl
movsl
xchg
dec
enter
stos
mov
mov
outsb
daa
cmpsl
test
push
pusha
fldl
mov
clc
ror
and
dec
xchg
add
pop
in
pop
shlb
push
in
das
inc
adc
mov
jne
ret
adc
sbb
aam
adc
mov
lret
aam
data16
call
mov
jae
add
stc
jnp
stos
mov
rcrl
dec
mov
adc
adc
popa
in
and
insb
jb
call
inc
shll
dec
rcrb
xchg
and
inc
int3
mov
mov
ret
mov
imul
dec
outsb
std
jno
ffreep
arpl
cmp
sbb
movsb
sub
je
lcall
dec
mov
pop
insb
jns
fiaddl
xor
jmp
sub
xor
popa
lods
js
and
divl
fisubl
pushf
jp
xor
mov
cwtl
aaa
je
adc
cmc
lods
addl
imulb
dec
or
sbb
shlb
out
sub
and
or
xchg
inc
hlt
gs
dec
lret
pop
cmp
sub
add
test
mov
pop
das
lret
test
mov
aaa
pop
xorb
push
sbb
mov
aas
clc
inc
stc
jns
repz
jbe
mov
push
popa
movd
fs
jle
sub
xchg
inc
add
pop
aad
jns
dec
pusha
shlb
sub
cmp
xchg
pop
push
out
cmp
pop
mov
enter
arpl
ja
cli
mov
xchg
call
lods
ja
testb
gs
scas
data16
clc
lods
orl
aam
cmc
xor
je
xchg
or
adc
pusha
or
fs
fdivrl
jecxz
sahf
pusha
add
add
lcall
xchg
outsb
jne
repnz
ds
push
jle
sub
pop
aad
mov
and
cmpsl
dec
xchg
inc
mov
subl
sub
std
shll
xor
ss
jns
or
mov
and
sahf
push
inc
and
das
and
addr16
adc
xchg
iret
mov
xchg
add
add
push
out
or
iret
int3
jnp,pt
loopne
mov
cs
adc
shr
repz
xorl
push
cmp
repz
pop
pop
std
insb
stos
push
fmuls
dec
sub
hlt
cmp
add
mov
dec
push
cmpsl
sub
in
in
xchg
pop
outsl
cmc
in
jo
sub
or
jns
cmp
fdivl
sbb
xor
fadd
mov
scas
into
mov
rolb
test
jle
aam
arpl
aas
or
hlt
push
xchg
outsb
lods
pop
repnz
push
insb
dec
mov
mov
dec
mov
and
jecxz
inc
int
mov
xchg
int
sub
mov
and
mov
pop
adc
jb
or
and
in
adcw
adc
and
fs
pmaxsw
loop
pusha
mov
inc
lea
and
ljmp
dec
or
jne
and
jno
stos
mov
pop
shll
movsl
mov
insb
adc
adc
jae
imul
jb
jge
aad
subb
or
lods
jp
hlt
dec
mov
inc
imul
ss
data16
push
or
jb
nop
es
jg
adcl
sub
xchg
hlt
rcrb
mov
sub
dec
popf
cmp
inc
pop
aam
lock
cmpsb
cmp
sub
or
lods
inc
popa
add
ljmp
mov
outsb
cwtl
fmuls
imul
aaa
mov
lret
sbb
push
cwtl
adc
pop
call
mov
insl
je
and
out
cmp
sbb
fdivrl
cld
ret
sub
jns
out
inc
fstpl
ds
cs
lds
scas
xchg
inc
ret
dec
push
mov
mov
jl
mov
mov
int3
lods
mov
mov
rcrb
jb
test
mov
dec
out
lret
jo
sub
push
sub
outsb
xor
and
mov
out
mov
mov
pop
lret
fldcw
pop
add
lret
sub
fdivs
lret
in
lock
into
scas
divb
mov
fucomp
aam
test
xchg
lret
pop
mov
lcall
mov
or
and
cmp
rol
sbb
or
clc
pop
out
loop
push
orb
and
and
mov
dec
add
mov
push
sub
sub
mov
lret
mov
in
out
test
or
sub
inc
mov
in
fnsave
stos
aas
push
imul
mov
arpl
sub
pushf
pop
nop
lret
xchg
push
inc
or
and
sahf
es
loopne
in
push
cmp
mov
fsubs
inc
sbb
or
fisubs
call
repnz
mov
push
sub
pop
lods
dec
adc
fsub
bound
lods
sub
mov
loopne
lret
gs
ja
jnp
xorl
loop
mov
lahf
sub
nop
mov
and
imul
and
ss
add
dec
mov
sub
and
call
bound
mov
adc
xchg
dec
add
adc
enter
cmp
cltd
in
adc
push
iret
pop
pop
dec
ds
clc
imul
cmp
sub
es
xor
fcomps
inc
repz
rcr
ret
sub
mov
cld
xchg
ret
or
pop
mov
and
or
dec
adc
test
or
cmc
js
dec
adc
xlat
mov
in
jne
cli
mov
mov
outsl
mov
push
loope
lea
dec
aam
call
and
filds
lahf
imull
fbld
mov
mov
mov
dec
call
push
xlat
mov
pop
in
ljmp
mov
subl
in
pop
jmp
out
push
clc
or
sub
mov
les
loopne
add
call
dec
mov
jbe
dec
stos
loope
test
xor
scas
ds
test
cli
cmp
dec
test
jne
lahf
pop
imul
outsb
in
and
sub
out
or
pop
mov
mov
ret
test
rcrl
out
movsl
movsb
xor
xchg
sub
fcoml
aam
scas
mov
pop
ljmp
pop
fstl
mov
fisubl
icebp
out
dec
and
mov
adc
add
cmp
rcrb
stos
pushf
rcrb
daa
inc
push
int
outsb
push
repz
lock
jo
xchg
sub
repz
jg
into
jge
sbb
notb
dec
outsl
into
sub
call
fs
ret
fdivrp
adc
cmpsl
push
cltd
fs
sbb
addb
add
mov
pusha
xchg
loop
lock
das
xor
lahf
cmc
rcr
int
ljmp
mov
push
pop
dec
insb
xchg
das
sbb
cmpsb
pop
jecxz
mov
and
mov
mov
mov
pop
dec
mov
inc
jp
jmp
mov
ja
cmp
jno
add
jnp
mov
cs
in
scas
les
xlat
adcl
dec
or
cmpsl
jno
push
cwtl
in
outsl
stos
add
add
mov
xchg
mov
jb
and
inc
push
inc
je
shll
fisttpll
push
aam
add
movsl
data16
fldl
mov
out
test
dec
sbb
fwait
pusha
mov
adc
pop
inc
dec
aas
jl
je
pop
xchg
lret
sbb
mov
enter
sub
xor
or
lock
jecxz
xor
test
adc
sbb
movsb
xchg
jae
dec
sbb
xor
lcall
in
imul
mov
jne
sbb
xchg
xor
mov
mov
pusha
push
imul
cwtl
mov
sahf
mov
pop
loopne
cmp
xchg
sti
jae
aaa
jns
outsb
xorb
out
fistps
and
call
mov
sarb
adc
adc
fnsave
scas
and
pop
inc
and
push
adc
std
lock
ficoms
xor
lds
jne
dec
push
out
test
jae
popa
mov
adc
gs
and
adc
ljmp
sbb
adc
rcrl
jl
mov
lret
test
out
dec
and
mov
popf
dec
iret
pop
insl
minps
cmc
test
pop
inc
in
sub
jge
mov
pop
sbb
inc
cld
cmpb
and
lret
insb
xor
mov
rcrb
adc
mov
and
mov
mov
jle
pop
push
mov
mov
push
dec
stos
in
mov
cs
mov
xchg
pop
loopne
aas
jnp
jl
popa
shrd
mov
mov
imul
ljmp
outsb
xor
sub
je
cmp
sbb
inc
flds
jle
mov
inc
fisttps
fbld
fidivrs
insb
jne
mov
xchg
sbb
ret
dec
mov
mov
push
addl
clc
mov
jo
xchg
insb
or
shr
lret
loopne
outsl
in
repz
mov
popf
mov
outsl
inc
aas
cmp
pop
sub
pushl
rclb
psubw
mov
or
and
cs
ret
mov
xchg
sub
ds
xor
gs
mov
insb
mov
add
jp
mov
jmp
sti
xchg
inc
mov
addr16
pusha
mov
sub
sbb
aaa
cmp
mul
lret
jae
xchg
addb
test
adc
scas
arpl
les
push
negb
mov
sbb
sti
mov
xchg
mov
daa
and
mov
scas
filds
cltd
push
push
sti
aam
cmpsl
sbb
fistps
xor
pop
outsl
mov
sbb
popa
pop
int
cld
add
je
loop
data16
xchg
mov
in
leave
adc
aam
bnd
loope
lods
xchg
pusha
les
aad
jp
cltd
push
sbbb
xor
push
ret
hlt
xchg
pop
jae
cmp
inc
sti
push
std
fsts
rcl
inc
push
scas
out
bound
cmp
pop
add
test
push
xchg
mov
inc
sub
std
sub
mov
rcrl
bound
add
mov
daa
jno
jg
jmp
daa
pusha
mov
mov
ret
ror
scas
into
jno
out
jp
xor
sbbb
pusha
inc
repnz
in
xchg
call
pusha
jbe
jmp
mov
push
push
sub
pop
fiadds
shll
push
push
data16
dec
xorl
out
push
xor
sbbl
cs
std
fs
inc
icebp
inc
lods
aam
jge
ror
and
inc
mov
inc
iret
lock
adc
outsl
out
das
sbb
jge
rol
ljmp
xchg
mov
clc
inc
xor
xchg
xchg
push
test
mov
dec
mov
sub
push
leave
lds
jp
shrb
enter
fnstcw
and
movsl
mov
pushf
inc
test
xchg
dec
into
test
mov
jne
mov
popa
out
nop
aas
scas
jge
fsubrs
mov
ss
xor
cmp
mov
dec
dec
stos
fbld
enter
cwtl
popf
daa
mov
mov
sbb
gs
in
add
mov
sbb
sbb
push
test
rclb
aaa
mov
decl
icebp
rcrl
mov
iret
cmpl
mov
popf
inc
adc
jb
pushf
or
sahf
roll
push
xchg
std
mov
ss
daa
insl
dec
rorb
mov
or
jg
mov
movsl
inc
mov
adc
inc
cmc
out
pop
and
insb
xchg
jge
sahf
test
jle
mov
frstor
mov
in
cmp
icebp
add
bound
icebp
shrb
mov
and
and
ret
adc
pop
push
ficomps
cmc
int3
test
sbb
cmp
aaa
mov
dec
leave
rcl
sub
jp
sar
mov
inc
sbb
test
inc
pop
icebp
fistl
jb
cmp
mov
jp
and
in
and
mov
adc
push
push
pushl
and
imul
or
test
cli
pop
stos
ret
sub
fildll
sub
fidivs
pusha
pushf
push
sbb
push
pop
jl
xchg
in
jae
add
pop
out
push
cmp
mov
std
ljmp
adc
imul
inc
shr
xchg
hlt
mov
mull
push
cmp
je
inc
std
icebp
mov
stos
lret
or
outsb
fs
push
inc
hlt
stos
add
or
dec
cmp
pop
dec
cwtd
xor
loop
cmp
push
aam
pop
sbb
mov
incb
outsb
xor
cmc
jae
adc
jae
fisttpl
sub
inc
adc
mov
clc
mov
test
ret
pop
ret
test
dec
pop
fmul
adc
mov
cs
sbb
xchg
repz
mov
daa
mov
dec
mov
pop
mov
push
flds
ds
xor
incl
sbb
and
fsubs
xchg
pop
jnp
test
sub
insl
ds
loopne
sti
dec
dec
lock
hlt
xchg
fwait
pop
jmp
xor
dec
xchg
inc
aaa
add
or
jbe
xchg
ljmp
mov
out
sub
cmpsl
addr16
inc
ds
sub
je
xor
jno
rolb
jne
adc
aam
or
xchg
fs
insl
cli
dec
imul
adc
int3
jne
mov
xorb
push
cwtl
add
in
bound
repz
loopne
push
repz
data16
idivb
sti
mov
cltd
adc
and
dec
ja
sbb
loope
movsb
cmp
popl
mov
cmc
out
in
or
dec
cmp
out
push
sub
loope
orb
dec
cli
mov
imul
adc
pop
movsb
int
test
iret
clc
jne
bound
cmp
lds
or
pop
adc
sbb
xor
movl
xchg
dec
xchg
ficoms
ja
or
andl
pop
mov
pop
jle
xchg
push
xchg
dec
insl
mov
test
pop
fwait
lcall
xchg
or
cwtl
test
sub
in
fstps
or
push
sbb
sbb
cmp
outsl
cmpb
leave
out
insb
in
jmp
jne
add
mov
pop
je
lahf
push
lea
pop
insl
mov
push
cmpsl
das
icebp
sub
es
mov
xor
push
loopne
cmp
xor
xor
xor
faddp
jae
sub
and
call
mov
xor
mov
and
addl
xor
int3
into
iret
test
aam
ljmp
and
adc
xor
inc
push
mov
sbb
xor
add
aad
jmp
movsb
mov
jbe
loopne
inc
fwait
popf
pop
or
dec
jns
mov
and
sbb
adc
and
mov
fbstp
in
fldenv
pusha
dec
lret
nop
or
mov
mov
in
adc
sub
in
push
mov
jae
and
mov
clc
fildll
and
cmp
sarl
jg
jmp
ret
push
xor
popf
jge
adc
repz
int3
jecxz
cltd
push
pop
vpsrldq
cmpsl
cmpsb
ja
push
stos
lods
cmp
push
add
movsl
imul
jns
xor
lock
or
and
test
cmp
mov
das
fldenv
xacquire
dec
pop
int3
adc
pop
insb
in
pushf
shrb
mov
adc
cmc
rclb
dec
iret
std
stos
int
ds
pop
push
cli
cs
push
fdivrl
jae
jae
push
fs
outsl
out
cmpsb
js
jecxz
xor
push
scas
adc
pop
pop
sbb
popf
mov
addb
test
movsb
xor
inc
and
mov
enter
or
scas
js
dec
sub
movsl
push
push
ret
mov
fisubl
fistps
mov
mov
mov
inc
fdivs
pop
shld
cltd
fsubs
jle
stos
sub
movsl
divb
js
adc
mov
lock
push
sarl
mov
cmp
mov
js
rorb
dec
insb
xor
mov
imul
cmp
mov
fsubs
mov
mov
aas
jns
or
sbb
sahf
add
in
test
leave
mov
dec
fcompl
dec
push
sbb
sbb
jl
cmovnp
adc
ds
pop
adc
jg
or
jbe
push
aas
mov
xor
sbb
insl
pop
hlt
clc
test
insb
pop
stc
jg
and
insb
scas
negb
jg
mov
jge
pop
sahf
pusha
jae
mov
pusha
mov
sub
and
cmp
xlat
test
mov
shlb
aam
les
mov
out
daa
jmp
adc
push
outsb
fs
movsl
mov
sti
mov
rclb
xchg
aas
dec
lds
dec
mov
cmpsl
pop
fisttps
mov
repnz
add
pop
mov
mov
sahf
imul
jle
jo
mov
pushf
movsb
mov
out
loope
es
push
jmp
cmp
insl
orb
scas
int
rorl
jno
icebp
dec
fcomps
xchg
rorl
and
sub
mov
iret
sub
and
jg
sbb
mov
mov
mov
mov
cmp
pop
cwtl
jae
mov
pop
fnsave
clc
test
mov
xchg
or
movsb
lds
incl
pop
fwait
dec
pop
pushf
cmp
arpl
repz
arpl
sbb
stos
mov
popf
cmp
sbb
lds
std
daa
add
mov
and
mov
cmp
mov
iret
sbb
jne
mov
adc
pusha
lea
mov
push
mov
into
test
xchg
test
mov
or
in
xor
test
pop
xor
cmp
pop
jle
and
gs
sahf
cmp
pop
outsl
mov
fnstcw
xchg
pop
push
fisttpl
movsl
and
rorb
cwtl
jp
fstps
add
cld
and
pop
cld
or
sahf
outsl
ret
adc
sar
lods
test
mov
aam
iret
push
pushf
into
inc
and
enter
add
jge
jns
clc
js
jle
jo
mov
fucomip
dec
xlat
pop
std
cmpsl
in
cltd
cmp
cwtl
xor
sbb
mov
add
sbb
cmc
jbe
xchg
cwtl
cltd
pusha
xor
dec
stc
push
orl
mov
icebp
stos
pop
stos
dec
jnp
fwait
inc
cmp
negl
push
and
mov
mov
push
call
int3
sub
shl
mov
ficoms
rdpmc
bswap
pusha
aad
mov
hlt
adcb
movsb
rclb
sub
jbe
xchg
out
fiadds
cmpsb
jmp
jle
xor
ljmp
out
and
push
mov
mov
bound
ds
jb
cmp
mov
jo
mov
dec
mov
dec
ja
iret
test
addr16
rcrl
xchg
lods
fstl
pop
mov
inc
stos
mov
sub
icebp
lods
ljmp
or
cmpsb
mov
enter
mov
rorl
sahf
fs
mov
xchg
jp
orb
mov
add
ds
push
sbb
cmp
das
fisubl
sbb
jno
xchg
adc
dec
pop
outsb
inc
out
sti
inc
xchg
sbb
jge
push
aam
das
fwait
sarl
dec
iret
in
stos
call
dec
das
fadds
mov
dec
or
insb
shl
mov
dec
mov
sbb
sub
pop
or
jns
cmc
data16
cmp
jmp
push
out
push
pop
xchg
lret
andb
mov
lds
jp
inc
test
cld
rcr
jecxz
test
push
cmc
jno
and
xchg
aas
cmp
jecxz
jp
shll
sbb
pop
adc
leave
dec
cs
jge
sub
pop
cltd
fcompp
inc
rol
push
jnp
mov
sbb
test
push
cmp
iret
mov
fstl
and
das
nop
cmc
repz
adc
cltd
mov
in
jge
mov
sub
mov
push
jne
push
adc
xor
mov
push
cltd
aaa
cwtl
jae
or
loope
fildl
in
loope
sub
psubsb
in
lahf
xchg
mov
pop
xlat
mov
fnsave
enter
push
je
cs
mov
dec
imul
add
into
lret
aas
adc
addl
cmc
pop
imull
add
fwait
xchg
mov
loop
rcl
adc
lea
lock
mov
outsb
sbb
out
lea
push
int
roll
push
dec
addb
mov
in
mov
cmpsl
jge
push
ljmp
in
mov
pop
in
xor
shll
jmp
cmc
ret
icebp
ja
loop
sub
cmp
push
and
jecxz
outsl
and
or
lods
cmp
jecxz
test
cmp
add
mov
sbb
xchg
mov
fdivs
add
adc
cs
nop
xchg
xchg
imul
ss
popa
xor
rcrl
clc
push
mov
mov
xchg
mov
mov
mov
frstor
dec
stos
call
jge
paddd
scas
shl
and
icebp
pop
icebp
push
outsl
cwtl
inc
orl
cmpsb
inc
push
and
mov
sbb
mov
push
push
xlat
jge
push
jecxz
mov
jnp
orb
cmp
xor
imul
int3
stos
push
push
dec
test
lahf
cmp
dec
add
mov
outsb
jmp
ds
jmp
movsb
or
pop
mov
sti
mov
iret
out
mov
dec
xchg
andb
fiaddl
out
ret
fimull
mov
or
or
fisttpl
lret
cmp
cmc
stos
int
mov
mov
fwait
pop
jecxz
mov
jmp
jecxz
std
or
movsl
xor
mov
cmpsb
lret
jno
mov
push
inc
mov
ljmp
cmp
xlat
xor
or
add
test
jmp
dec
sbb
test
stos
pop
cltd
add
scas
xchg
add
mov
jbe
pop
call
ret
rorl
movsl
sti
jge
sbb
or
pop
dec
push
inc
cmp
cmpsb
clc
push
mov
adc
or
call
das
or
dec
les
adc
jne
cwtl
or
xchg
out
push
add
pushf
mov
ja
insb
inc
mov
xchg
stos
leave
mov
mov
jno
push
loop
ret
mov
adc
ror
and
xchg
mov
inc
sbb
js
push
cmpsb
pop
xchg
jle
scas
jmp
fwait
push
add
scas
inc
xchg
mov
ret
fwait
cmp
and
and
xor
jg
in
or
in
popf
inc
push
jbe
jle
xchg
repz
xor
mov
cltd
cmp
inc
std
xlat
std
and
adc
ljmp
fadds
mov
aas
in
jne
pop
sub
nop
push
sbb
enter
mov
xor
stos
subl
mov
xchg
xchg
mov
mov
in
std
mov
seto
adc
jle
sub
idiv
pop
inc
mov
mov
call
xchg
lret
or
push
xor
xchg
adc
addl
cmp
mov
dec
push
cmp
or
adc
test
dec
or
or
out
cmp
scas
jmp
lods
sbb
test
cwtl
sub
push
fs
fistpl
inc
sbb
ficompl
bswap
and
push
xor
push
xchg
xlat
psllw
popf
out
stos
xchg
mov
dec
dec
dec
jg
je
mov
hlt
jne
jno
cwtl
and
push
pop
jle
push
std
add
jp
push
orl
in
jl
and
das
jp
out
and
ret
jns
orb
adc
pop
cmc
daa
fidivrl
jg
inc
jns
dec
pop
cmp
pop
jno
out
mov
in
pop
hlt
and
clc
mov
mov
cs
push
mov
jb
sbb
and
fnsave
popa
rcll
pop
inc
fldt
add
push
rcrb
es
stc
mov
or
adc
jg
mov
out
push
add
cmpsb
adc
outsl
cmpsl
ljmp
divb
out
in
inc
jge
dec
jae
cmp
incb
ret
imul
jle
inc
cmp
push
xor
testl
add
lcall
into
sub
lret
imul
dec
mov
mov
add
clc
adc
push
xacquire
jl
dec
xor
push
rcl
push
xchg
xchg
pop
push
jb
add
xchg
add
loopne
mov
inc
pop
xor
aam
mov
popf
cs
push
jo
inc
scas
dec
inc
aaa
scas
scas
lret
scas
clc
mov
fs
adc
jge
ljmp
dec
add
dec
mov
inc
xor
push
je
push
bound
shrb
aam
arpl
and
mov
lods
dec
push
enter
outsb
mov
mov
test
ss
pop
int3
stos
addr16
push
pop
mov
cmp
repnz
loope
xchg
movsb
mov
ficoml
and
sar
pusha
pusha
mov
lods
shr
fldcw
jns
aaa
push
lahf
shll
cld
pusha
dec
mov
mov
bnd
xlat
dec
hlt
scas
xchg
xchg
push
scas
aaa
xor
sahf
sahf
xchg
mov
lods
dec
les
sbb
jns
in
pop
push
and
lock
int
test
push
shrb
jmp
test
and
aaa
mov
insl
mov
imul
mov
lret
bound
push
out
rolb
gs
testl
lods
jo
jg
ja
push
movb
es
cmp
sub
clc
inc
push
outsl
ljmp
jg
test
sbb
cmp
push
xchg
cltd
push
repnz
xchg
or
or
fs
push
dec
das
xchg
daa
hlt
cwtl
andl
mov
inc
dec
out
xlat
js
clc
lret
push
add
cmp
add
inc
adc
xchg
mov
pop
mov
cmp
icebp
lods
xchg
fwait
or
jl
or
ret
icebp
jmp
gs
lods
adc
xor
mov
push
adc
inc
fisubs
xor
test
cmpsl
jne
dec
inc
stos
or
dec
stc
mov
and
adc
sub
lods
mov
xchg
repnz
enter
xchg
fs
les
lret
push
loope
mov
fstpl
or
and
mov
clc
fxch
ljmp
cmpsb
not
cwtl
cmc
sub
push
inc
in
addl
cs
outsl
cmp
mov
enter
push
aas
mov
imul
sbb
push
rol
xor
pop
jnp
movsb
aad
je
and
adc
add
mov
dec
xchg
sub
or
aad
movsl
inc
push
pop
popa
adc
push
popf
add
shlb
inc
iret
inc
dec
fsubrl
inc
inc
aad
scas
pop
ss
lahf
aad
clc
pop
and
test
in
ja
fistpll
mov
add
mov
cld
fistps
dec
sti
add
adc
xchg
dec
mov
test
mov
xlat
imul
mov
cli
lcall
insl
lods
iret
or
xchg
repnz
dec
es
cmpsb
mov
test
mov
adc
jne
or
inc
addr16
mov
xchg
adc
daa
outsb
inc
push
adc
and
cmp
mov
and
cmp
push
cmpsb
icebp
jb
cmpsb
cmp
sub
outsl
lock
cmp
mov
pop
stos
dec
enter
mov
push
xchg
sbb
lea
outsl
repz
aam
add
cmc
pop
lret
push
lret
icebp
es
cmp
xchg
push
test
xchg
add
mov
push
fsubl
clc
pop
aaa
and
pop
rorb
mov
xchg
lock
hlt
mov
je
adc
iret
mov
adc
bound
inc
mov
mov
ret
xorb
ss
dec
add
hlt
aam
cmp
ljmp
or
sub
xchg
mov
ret
push
xchg
xor
cli
in
repnz
pusha
loope
jnp
inc
sbb
movsb
jne
inc
jbe
adc
in
shl
int3
imul
mov
cmpl
dec
pushf
push
ljmp
cmc
rorb
popf
rep
xchg
mov
jne
out
orl
arpl
sbbl
xor
repz
dec
les
lods
shl
xchg
sbb
bnd
inc
and
push
push
xchg
mov
cmpsl
jbe
xchg
add
jno
stc
or
push
jmp
adc
addl
dec
mov
test
adc
add
insb
lahf
insl
aas
adc
sub
mov
inc
cmp
push
daa
sbb
cmp
arpl
out
je
mov
mov
jb
xlat
fs
adc
mov
lea
ds
inc
or
movl
mov
xchg
jno
lods
in
mov
mov
cs
faddl
push
xor
mov
or
xor
add
cmp
repz
outsl
mov
das
subl
xor
loope
mov
mov
pop
sub
xchg
out
insl
xor
mov
cld
lods
push
add
mov
negb
mov
sub
mov
dec
add
jge
xor
loope
push
ds
sbb
push
cmp
mov
fcoml
cmp
jle
dec
jne
bound
mov
jmp
out
enter
mov
mov
dec
jle
leave
jmp
rclb
fwait
push
fidivrs
mov
ds
int3
inc
push
repz
inc
movsb
mov
mov
popa
push
mov
push
push
jp
sbb
pop
jns
adcb
fcomp
inc
adcl
dec
jmp
shll
scas
jns
repnz
scas
mov
jp
add
mov
insb
cmpsb
out
ret
imul
out
add
push
iret
push
push
int3
sub
xor
cmp
outsb
mov
push
ficomps
ret
add
jno
mov
stc
or
ljmp
ret
fbld
mov
mov
aam
dec
push
loop
jmp
inc
fsincos
jno
mov
pop
lock
pop
sbb
add
sbb
mov
in
movsb
dec
jae
xchg
std
mov
add
mov
sbb
scas
pop
outsl
fdivl
call
push
icebp
inc
out
mov
dec
call
cmpsb
mov
sbb
jl
aaa
xchg
add
adc
testl
mov
movups
push
fdivp
push
fsubs
lock
xor
clc
in
aas
scas
push
adc
ret
lea
push
adc
cmp
aad
clc
fsubrl
xchg
cmp
insb
pop
cmp
movsl
outsl
ja
loop
shl
lea
sti
xchg
aas
call
ret
addr16
lret
add
xchg
in
mov
das
mov
mov
or
xor
add
jle
ret
in
pop
decb
inc
xchg
or
inc
push
push
movsl
dec
lods
xor
sar
xchg
iret
jns
inc
xor
ja
adc
hlt
popa
incl
sub
xor
inc
js
inc
clc
xchg
int3
orb
inc
mov
mov
add
lret
jbe
xchg
rorl
scas
adc
outsl
sub
outsb
jnp
int
and
pop
gs
jne
int
idivl
imul
fsubr
scas
mov
sbb
mov
xchg
pop
das
push
mov
cmp
mov
dec
addr16
or
testl
and
fcomps
cmp
cmp
imul
adc
and
inc
in
cmp
ja
rcrb
jb
in
add
fcoms
dec
push
jns
rorb
jle
sub
fstpt
jecxz
das
adc
mov
jno
mov
jle
mov
add
inc
out
jl
or
or
stos
scas
loop
jmp
enter
sub
cltd
int3
jecxz
and
and
jmp
jno
popf
outsb
into
mov
push
dec
pop
sub
cmovns
test
out
out
andb
aas
test
leave
lret
fstps
scas
push
setno
rcll
sbb
shll
add
int3
cmp
test
je
jo
cli
fists
gs
enter
sub
adc
mov
cmp
ret
cmpb
jne
movsb
mov
cmc
sbb
scas
sub
lds
jp
in
arpl
mov
adc
add
in
xlat
pop
cmp
iret
jbe
into
cmp
dec
jne
stos
xor
mov
sbb
mov
adc
mov
mov
and
cld
ficoms
xorl
add
test
jl
xchg
mov
xor
and
idivl
cmp
lods
test
fcoms
and
cmpsb
pop
ja
push
in
adc
pop
addr16
les
cmp
mov
ja
clc
and
rcll
jbe
xchg
xchg
imul
in
push
dec
jle
cwtl
mov
and
ret
adc
repnz
ret
add
cltd
pusha
std
int
and
ss
test
mov
popa
stos
lret
lret
or
dec
cwtl
shr
cmc
pusha
or
xor
mov
cwtl
fidivl
sub
cmp
add
inc
mov
lods
enter
gs
jmp
mov
fwait
push
and
fcmovnb
pusha
adc
shll
insl
mov
xchg
int3
aam
imul
jo
sbb
pop
inc
xor
int
cmpsl
sbb
mov
pop
and
add
lods
scas
sti
mov
test
add
jbe
nop
fwait
jge
cli
mov
lods
xlat
lds
cmp
dec
aas
sub
aad
lods
jecxz
or
sub
lock
pop
adc
clc
add
mov
inc
jno
jle
jbe
insb
xchg
imul
dec
inc
sub
pop
mov
push
push
loopne
sub
jecxz
lcall
and
jns
daa
dec
repz
push
in
xchg
sbb
or
dec
repz
mov
gs
push
adc
fimull
cmc
pop
and
pop
les
mov
andb
ljmp
xor
jle
adc
sbb
imul
or
lret
mov
dec
adcb
idivb
lahf
mov
loopne
mov
ret
lea
sbb
cmp
lock
cli
pusha
arpl
or
xor
or
psllq
inc
adc
mov
sub
je
mov
cmp
sub
divb
pop
dec
push
mov
jl
iret
adc
adc
pop
jne
push
lods
imul
scas
sbb
jg
mov
mov
mov
fs
push
lahf
lahf
mov
pop
mov
push
in
add
adc
insl
and
lret
insb
cs
mov
or
jns
push
inc
gs
cmp
pusha
enter
mov
popa
mov
divl
sbb
loope
test
js
jnp
int3
dec
mov
or
fwait
je
dec
mov
lock
or
or
xor
or
imul
mov
jle
or
mov
repz
push
shll
push
iret
xchg
lock
cmp
daa
push
jb
sbb
in
xchg
mov
mov
fucomip
mov
ds
inc
push
fistpl
cmp
jg
decb
inc
cltd
inc
repz
jl
cmp
cmpl
xchg
int3
adc
ss
mov
jnp
sub
adc
pop
jl
xor
loop
xor
sbb
dec
imul
cmp
sub
cmp
xchg
scas
test
cmp
and
daa
int
mov
nop
mov
test
sbb
inc
movsb
or
test
xlat
movsl
or
scas
mov
pusha
jb
xor
inc
inc
lds
and
shr
fsubrl
test
mov
ljmp
test
xor
dec
dec
pop
aaa
xchg
push
inc
bound
push
pop
jg
dec
dec
loop
push
repz
ljmp
js
pop
inc
inc
xchg
int3
ss
mov
mov
push
mov
int3
jmp
lret
pop
mov
add
push
cmp
xor
pusha
out
inc
fldcw
mov
push
xchg
imul
adcl
xor
jne
jmp
mov
stc
jae
ja
push
lods
xchg
cmp
arpl
mov
mov
mov
mov
cmp
mov
pop
hlt
ljmp
insb
adc
pop
xchg
outsl
out
sub
jb
iret
lods
ss
push
fildl
fstps
rol
mov
sub
and
and
dec
xor
iret
mov
iret
pop
orb
xchg
in
lahf
mov
inc
nop
mov
test
fstpl
xchg
adc
clc
rcrl
rcl
or
popf
int
pusha
imul
add
int3
dec
dec
add
outsl
cli
or
jmp
aad
cmp
xchg
lea
xlat
fldenv
jecxz
in
cmc
or
jle
outsb
ret
mov
jmp
inc
dec
mov
roll
push
cmpsl
gs
fsubr
mov
push
mov
push
dec
cwtl
out
ret
and
outsb
ds
jb
or
mov
xchg
sbb
cld
bound
insb
and
inc
aam
std
fs
nop
mov
out
inc
adc
sbb
inc
mov
mov
mov
or
ja
dec
and
scas
sbbl
dec
mov
sti
cs
xchg
fiaddl
cmpsb
insb
sbb
sub
push
jmp
ds
mov
sbb
jmp
push
xor
lret
mov
les
push
jne
data16
push
adcb
inc
imul
pop
hlt
lret
out
lcall
cwtd
or
repz
mov
fbld
jle
jne
cli
nop
pop
xor
pop
out
ljmp
dec
cmc
mov
mov
push
add
mov
shrb
or
pop
mov
or
push
mov
pop
out
frstor
jmp
push
into
dec
sbb
jge
push
sbb
cmpsb
cmp
or
mov
cmp
jmp
mov
inc
int
test
jnp
lods
out
fs
xchg
jnp
push
or
aam
hlt
lea
jo
cmp
inc
adc
out
aam
imul
loopne
jmp
test
les
pushf
hlt
cmp
sarb
negb
xchg
lahf
jo
jbe
fcoml
dec
or
call
jo
pop
mov
movd
fisttpl
imul
hlt
mul
pusha
inc
outsl
xlat
ljmp
sbb
test
aam
and
jns
ss
int3
insl
ja
jle
xchg
cmpsl
loope
push
fisttps
cmp
clc
mov
jo
call
sub
push
lcall
das
or
inc
rorb
add
aad
sahf
mov
repnz
inc
stos
add
sub
inc
enter
inc
lods
mov
andl
mov
jae
mov
adc
ret
in
cli
repz
mov
stos
daa
loop
jge
push
jle
push
pop
in
stos
leave
mov
mov
add
pushaw
out
arpl
add
out
xor
aad
mov
lret
push
neg
mov
pop
cmpsl
xor
sahf
inc
push
gs
ficoms
lcall
xchg
mov
xchg
cmpsb
cs
popf
and
inc
aas
add
pop
subl
mov
shlb
shll
pop
jne
pop
add
lcall
add
push
dec
orb
push
pop
push
scas
idiv
and
into
jmp
popa
push
cmc
mov
mov
pop
cli
sbb
lock
push
sbb
scas
cmp
cs
fsub
sti
add
mov
adc
fidivrl
loop
push
out
shll
in
pusha
dec
cmp
cmc
xlat
rcrb
or
cld
mov
aas
daa
outsb
test
or
dec
out
pop
enter
outsl
pop
clc
adc
dec
lahf
ret
pusha
mov
ret
iret
dec
cltd
xor
and
pusha
outsb
scas
mov
arpl
mov
push
jbe
sub
mov
mov
sub
scas
inc
push
sub
mov
mov
jecxz
mov
add
add
xchg
cmp
stc
adc
into
mov
addb
mov
out
mov
add
pop
dec
push
cwtl
cli
test
and
mov
mov
xor
stos
jno
xchg
andl
add
inc
mov
or
std
mov
icebp
pop
push
out
xor
lret
adc
loopne
enter
xchg
rcrl
mov
icebp
into
sbb
push
xor
sub
pop
lret
or
fdivr
sahf
adc
sbb
push
dec
xchg
stos
fs
push
mov
mov
jmp
hlt
es
stos
lock
pusha
dec
dec
or
inc
xor
sahf
test
sub
pop
mov
shrl
mov
cmpsb
adc
icebp
hlt
hlt
add
scas
or
fnstsw
jno
mov
fnstsw
xor
or
dec
divb
lcall
and
mov
testb
add
push
lahf
and
stc
gs
in
insl
gs
mov
add
xchg
sti
mov
sub
dec
aas
inc
adc
hlt
cmp
ret
jg
adc
sbb
cmpl
sbb
rcrb
test
mov
push
push
inc
outsb
cmp
daa
jle
mov
int
pop
loope
adc
lahf
adc
dec
loopne
jmp
daa
je
ljmp
dec
outsl
or
push
xor
or
les
out
lds
sub
jp
in
aad
andb
gs
addb
mov
ret
adc
mov
je
aad
push
xor
mov
xchg
inc
cmpsb
push
cmpsl
jb
inc
sahf
div
lcall
xor
std
in
jnp
push
sbb
mov
in
aaa
mov
push
or
dec
idivb
inc
add
mov
cs
lret
mov
cmp
mulb
xchg
loopne
add
sbbl
mov
mov
sbb
cmp
mov
testl
inc
push
push
xchg
in
mov
in
sbb
movsb
sub
dec
or
xchg
repz
in
xor
xchg
cmp
shlb
push
bound
popf
rcrl
inc
xchg
pop
out
adc
xor
fwait
xchg
bound
inc
dec
dec
or
mov
jecxz
mov
or
mov
jbe
lods
mov
rcl
out
mov
and
pop
push
inc
stc
imul
jge
je
xor
call
or
cmpsl
lock
das
cs
in
xor
pop
loop
jnp
pop
leave
sti
aaa
cmp
stc
bt
xchg
or
aaa
xchg
mov
cmp
push
hlt
add
inc
mov
shl
int3
mov
mov
push
clc
repz
outsb
sbb
inc
fwait
test
or
ja
lods
push
pop
pop
sahf
jp
or
xor
push
pop
mov
pop
xor
cmp
add
inc
lret
sub
test
adc
shrb
pop
or
add
pop
adc
mov
adc
mov
dec
mul
inc
inc
enter
adc
cmp
bound
scas
rcl
inc
addl
pop
iret
push
pop
cld
adc
mov
bound
incb
fsubr
mov
mov
mov
imul
test
pop
push
leave
aaa
xchg
xchg
dec
ljmp
xor
test
out
mov
test
push
lret
jb
fiadds
jns
inc
imul
push
cli
mov
inc
inc
cmp
icebp
dec
push
clc
mov
sbb
push
jne
popf
jne
das
imul
imul
stc
mov
imul
mov
push
aaa
xchg
sbb
sahf
push
or
pusha
and
data16
fcom
mov
sti
pop
cli
je
xor
add
jge
adc
add
jns
add
mov
cmp
or
add
lea
jae
das
cmp
shll
out
iret
mov
mov
and
jecxz
add
xlat
psubsw
cmp
iret
push
andl
xchg
test
pop
fidivrl
sub
rorb
jnp
aam
and
pusha
dec
inc
push
loope
mov
mov
loop
fidivs
dec
jb
or
dec
pop
loopne
loop
clc
xchg
xlat
mov
sub
jl
shlb
insb
inc
ficompl
out
pop
fdivrs
ss
outsb
pop
test
mov
adc
orl
sub
shll
sub
orl
movsl
jge
ror
sub
jecxz
xchg
insb
add
pop
mov
push
lret
add
lcall
mov
jo
pop
pushf
push
add
shl
stos
adc
cmp
test
add
push
push
adc
xchg
int3
push
inc
out
fs
dec
dec
mov
jno
movsb
or
ja,pn
mov
cmp
fcmovnbe
mov
mov
psrlq
pop
xlat
sbb
cmp
jb
adc
in
movsl
shr
sub
cmc
mov
sbb
cmp
pop
pusha
outsl
aaa
stos
aas
das
jbe
pop
jp
and
sti
and
retw
mov
jb
rolb
jmp
in
cld
in
push
lea
xchg
mov
cmp
imul
cmp
xchg
hlt
popf
push
cltd
or
test
stos
cmpsl
jae
xchg
push
push
jb
mov
pop
inc
loope
jle
lretw
or
mov
push
in
push
out
insb
mov
cmc
xor
jo
fs
movsb
jb
sbbb
push
ds
scas
std
jecxz
cmp
in
mov
dec
adc
in
sub
sbb
jecxz
stos
in
xchg
aaa
xchg
lahf
push
in
add
aad
pop
lret
pop
out
sbb
movsl
popf
mov
xchg
push
or
cmc
imul
lret
sbbb
jmp
mov
inc
jb
stc
mov
scas
jne
pop
mov
stos
dec
mov
lock
xlat
sbb
add
lock
and
cmc
adc
mov
int
sti
loop
cmp
jns
adc
jmp
outsb
sub
movups
loopne
adc
mov
arpl
enter
inc
jmp
or
pop
cltd
inc
int3
jbe
mov
jg
insb
add
push
pop
stc
fimull
mov
jno
pushf
xor
daa
repz
mov
lahf
movsb
lock
addr16
data16
pop
inc
push
leave
mov
xor
or
adc
adc
out
shrl
lahf
jge
xor
adc
ja
and
cmp
imul
and
mov
in
out
xor
in
fwait
pop
xor
fidivl
xchg
enter
inc
mov
xor
in
std
std
repnz
les
push
repnz
rolb
aas
jne
ror
dec
dec
dec
jl
sub
ret
adc
movq
mov
mov
mov
pop
xchg
jg
lea
jbe
and
movsb
mov
inc
stc
mov
push
addb
sahf
jmp
xchg
cmp
cmp
lcall
aam
lods
ret
or
repz
sub
jge
add
aam
int
jp
repz
inc
mov
cmpsb
cmpsl
mov
out
loopne
shl
das
mov
stos
gs
sbb
scas
cli
fsubs
or
cmp
in
mov
sub
jb
xor
std
call
jae
adc
out
ret
push
gs
add
into
psubq
mov
call
xchg
cmp
push
arpl
ret
outsl
enter
movsl
mov
scas
sbb
or
in
aad
cmp
xor
jmp
inc
arpl
xor
adc
dec
lahf
inc
dec
pop
outsb
push
and
mov
out
test
dec
jecxz
add
pop
mov
mov
rcrb
and
out
test
int3
sub
mov
pop
loop
cmp
js
mov
push
dec
cli
fwait
jmp
xchg
inc
out
mov
bound
sub
movsb
in
sbb
addl
jae
insb
mov
mov
push
jg
movsl
enter
subl
pop
rcrb
dec
movsl
sbb
mov
jl
inc
in
sbb
and
and
mov
xor
lahf
loope
scas
dec
out
ja
popf
jle
push
ficomps
sbb
cltd
fiadds
sub
jae
stc
insl
mov
mov
mov
cltd
and
xchg
inc
fnstsw
adc
in
test
pop
push
in
push
pop
cmpsl
cmp
push
int
lods
mov
sub
enter
push
inc
xchg
in
or
mov
shlb
push
inc
or
test
std
adc
cmp
outsl
dec
out
mov
jp
xchg
insb
mov
out
sub
lret
jo
sbbl
fcmovu
xorl
push
pushf
jecxz
mov
repz
out
push
xor
std
popf
dec
add
ds
hlt
xchg
push
xchg
insb
sbb
adc
sub
push
mov
xlat
mov
adc
pop
and
dec
pop
dec
adc
mov
sub
add
or
jl
pop
pop
in
aaa
inc
sub
xchg
adc
adc
sub
lret
sub
adc
xchg
insb
and
scas
stos
enter
das
sbb
jle
bound
loopne
pop
mov
adc
inc
je
sub
lds
js
cli
js
sbb
iret
pop
lahf
cmp
xchg
add
fldenv
fsubrs
filds
inc
pop
push
loopne
rol
enter
xor
das
lret
sub
test
lds
test
stc
inc
pop
push
mov
mov
jae
jmp
lahf
jmp
les
jae
jae
arpl
fsubrl
add
xor
leave
dec
jge
lock
scas
or
pop
dec
mov
lods
jbe
outsb
adc
out
out
mov
lcall
shrl
mov
mov
or
loop
aam
fildll
addr16
es
mov
xlat
cmp
rsqrtps
xorl
pusha
movsl
xchg
cmp
dec
mov
pop
xchg
cmp
sarl
sub
sbb
mov
in
mov
jl
adc
dec
push
xchg
mov
and
or
sbb
je
bound
jnp
jge
scas
push
cmc
dec
sbb
mov
sub
mov
mov
push
aaa
adc
je
adcb
jecxz
cltd
inc
arpl
jo
and
mov
mov
xchg
daa
ljmp
out
xor
jno
test
into
adc
lods
push
xchg
push
popa
out
aam
and
sub
cmp
xor
xchg
and
add
mov
jp
mov
test
ss
stc
int
leave
les
mov
push
addr16
lds
jnp
or
mov
fsubrs
add
lock
call
mov
lock
ds
movl
jp
xchg
icebp
sub
cmpsl
out
and
cli
inc
adc
addb
xor
cmp
add
stc
sbb
or
mov
pop
sub
aas
inc
bound
ja
add
in
stc
scas
aad
cmp
fwait
pushf
or
nop
stos
mov
cmp
sbb
mov
xchg
arpl
jns
adc
scas
test
out
jo
dec
les
mov
mov
daa
mov
jbe
xorb
sub
imul
ss
scas
cwtl
cmpsl
dec
movl
or
daa
mov
out
adc
sbbb
sbb
or
cmpsl
shlb
fimuls
push
jb
lods
and
movsl
xchg
frstor
push
js
xor
xor
push
xor
mov
adc
mov
aas
sbbb
or
mov
shrl
inc
adc
or
fs
clc
mov
cmp
jp
mov
or
dec
hlt
jp
mov
mov
addb
lret
inc
jp
sub
push
shrl
xor
xor
in
or
push
test
sub
xor
xchg
es
mov
data16
xchg
adc
mov
sub
leave
les
push
sbb
jae
data16
inc
jle
insl
dec
js
mov
pop
adc
cmp
sbb
dec
ret
js
fs
dec
adc
jge
mov
add
and
std
mov
enter
test
lods
fwait
ret
dec
cli
js
inc
repnz
inc
or
push
jmp
fstps
jno
or
pop
mov
mov
call
loop
jno
into
in
shll
pop
stc
mov
mov
jmp
dec
pop
sar
lcall
jmp
mov
mov
jo
cmc
nop
xor
or
xor
lds
lds
adc
leave
xor
push
ja
std
popa
jns
mov
lods
dec
mov
pop
mov
subl
pop
das
stos
mov
aas
aad
sub
stos
push
loop
loope
fnsave
fcompl
adc
sbb
sarb
push
andb
enter
sub
les
in
mov
cmpb
iret
sti
fnstcw
mov
lldt
call
in
xchg
push
loopne
insl
mov
clc
aaa
and
pop
push
push
and
sti
icebp
loope
sar
aas
cmc
rcll
xor
fdivrl
push
pop
fimuls
cmpsb
lcall
aam
popf
loop
lea
inc
cmp
icebp
int
and
cwtl
iret
push
jecxz
fldl
rcl
mov
pop
rorb
xchg
fwait
mov
xchg
add
mov
int
push
sub
add
sub
es
pop
out
movsb
leave
rcll
lods
cwtl
ds
jg
mov
fcomp
lea
push
add
icebp
push
pop
xor
dec
mov
incl
inc
in
sbb
push
clc
sub
xchg
mov
jo
adc
aaa
mov
cli
ss
sbb
addr16
mov
nop
mov
adc
pop
in
jbe
test
sbb
aam
divb
push
out
or
sub
lret
insb
or
and
inc
mov
clc
daa
ret
repnz
jno
xor
jp
sarb
pop
cwtl
and
clc
popf
cmp
cmp
aaa
ljmp
in
mov
fcoml
ss
adc
bound
fdivr
jo
mov
dec
aad
lods
pop
xor
and
xor
push
scas
xlat
and
repz
pop
int3
call
cmpsb
push
inc
jbe
movsl
loope
inc
shr
inc
hlt
outsl
xchg
in
fmulp
sbb
dec
in
xor
ret
rorb
fildl
cli
es
mov
loope
push
sbb
dec
fidivl
dec
push
pop
pop
sarb
mulb
loope
in
mov
int
sbb
sub
push
cmp
in
sub
leave
in
push
aas
jb
fnsave
adc
int3
in
xlat
fbld
xchg
cmp
aam
out
ss
cli
xor
test
cmp
fdivs
imul
xlat
insb
cmpsl
movsl
enter
sub
push
clc
divb
inc
ljmp
push
loope
icebp
clc
es
mov
mov
xchg
or
push
push
ljmp
inc
movsb
repnz
rorb
xor
dec
sarb
jecxz
movsl
adc
mov
xor
mov
arpl
repz
pop
adc
mov
mov
int3
shl
sarl
lcall
jl
repz
mov
js
out
adc
push
xlat
pop
hlt
push
cmp
movsl
push
and
mov
lods
fbstp
mov
cmpsl
fwait
bnd
jne
lahf
mov
pop
mov
xchg
push
pop
int3
jge
aad
in
out
sbb
shrb
lret
dec
sbb
add
dec
lock
mov
xor
leave
in
insl
cmpsb
sbb
adc
test
mov
stos
scas
mov
jns
inc
xor
pop
add
lock
fstpl
stos
out
jmp
stos
dec
inc
sub
enter
lcall
mov
leave
xchg
aaa
pop
inc
pop
shlb
mov
fldl
xor
xlat
dec
fcmovb
sarl
lock
fs
mov
mov
into
out
add
sbb
shlb
push
ljmp
mov
or
push
cs
mov
js
clc
sub
mov
and
test
push
sbb
rdpmc
cmp
iret
fucomi
inc
pusha
and
inc
dec
mov
je
xchg
stos
imul
movsb
jno
lock
adc
jge
loopne
jp
mov
loope
shrl
dec
xchg
stos
cmp
fdivrl
ja
adc
xlat
push
lahf
push
out
push
mov
push
lret
and
fsubs
xchg
xor
jecxz
pop
dec
fnstenv
mov
in
inc
jle
out
mov
aas
mov
xchg
test
jmp
int3
add
sarb
arpl
mov
cld
test
mov
addb
xor
ljmp
and
lahf
cmp
inc
je
pop
sbb
gs
decb
sub
imul
xor
add
pop
data16
mov
test
pop
inc
add
cltd
push
push
scas
and
sbb
add
sub
ljmp
xchg
lds
jg
enter
adc
pop
lret
into
jnp
push
js
rcrb
mov
add
sbb
movsl
sbb
test
or
jno
push
test
adc
setbe
push
movsl
xchg
jecxz
popf
add
movsl
xchg
mov
sahf
push
xor
push
mov
repnz
in
enter
xor
push
cltd
in
loope
push
xorb
mov
popa
pop
inc
inc
sub
jmp
in
das
fcmovnu
push
nop
or
in
scas
addr16
push
lcall
into
test
int
push
dec
jnp
sbb
in
in
add
and
mov
adc
mov
repz
adc
push
ret
lar
xor
pop
cmp
ja
adc
mov
inc
fwait
jl
loope
lcall
and
sbb
cltd
repz
cmp
fdivp
mov
js
repnz
aad
pop
idiv
addr16
rorb
int3
clc
inc
lret
adc
inc
pop
lea
stos
adc
rol
sbb
push
pop
jns
aam
cmp
jne
inc
sub
in
inc
loop
and
inc
addb
test
cmc
clc
and
les
jp
popa
push
in
sub
sti
js
xor
inc
inc
je
ja
je
jecxz
sbb
hlt
insl
inc
test
sub
sbb
sbb
inc
pop
into
daa
test
jbe
out
js
inc
test
sbb
xor
xchg
outsl
pop
fisttpl
mov
jbe
mov
mov
add
or
jg
cmp
fucomp
into
push
fldenv
hlt
incb
das
popf
fstl
adc
stc
add
mov
adc
int
mov
ja
pop
push
adc
imul
aam
sti
adc
pusha
movsb
movsb
lret
lahf
pop
jae
fdivr
sbb
dec
imul
insl
les
in
adc
js
inc
lahf
mov
nop
pop
repz
mov
mov
or
jnp
clc
jl
enter
mov
adc
jae
cli
hlt
mov
sbb
in
push
repz
jl
add
push
mov
fnstsw
imul
jle
pushf
xchg
loop
and
notb
mov
pop
ja
cmp
dec
inc
je
rcl
mov
add
ret
cmovl
outsb
push
mov
xchg
mov
add
pop
sbb
test
insb
push
js
enter
push
push
test
mov
push
mov
push
imul
lods
lea
fnstenv
mov
cmp
mov
or
cld
cli
fsubrl
cld
add
mov
or
int3
push
je
mov
or
push
cli
mov
or
movb
bound
mov
push
mov
push
add
pop
add
testl
scas
mov
std
shl
pushf
aam
jae
add
cmp
cltd
fisttps
nop
je
dec
movsb
movsl
popa
jns
rcrl
dec
and
xchg
xchg
clc
mov
mov
push
pop
sub
xor
jns
xchg
push
jge
enter
movsb
pop
jne
xchg
aas
outsb
dec
fdivs
adc
stos
ret
cwtl
xor
mov
aas
dec
stc
icebp
call
dec
notl
bound
xor
subb
mov
or
xor
iret
jno
jae
imul
arpl
inc
jo
ret
negl
add
shll
push
imul
popf
std
cmp
sub
push
insb
inc
mov
sti
daa
and
cmpsb
jno
lods
xchg
aam
stc
out
push
divl
fists
dec
adc
xor
inc
into
cltd
jecxz
jecxz
xor
and
call
pushf
loopne
repnz
xor
sarb
in
jge
pop
push
mov
pop
mov
pop
sbb
lds
inc
adc
mov
mov
pop
inc
mov
fdivl
movsl
test
out
fwait
cld
mov
sbb
imull
rorb
mov
dec
and
xor
hlt
shrb
jne
sub
shr
cmp
sub
lea
pop
std
js
mov
insl
cltd
pop
xor
and
cld
enter
sub
xchg
inc
shrb
and
inc
out
int
movsb
es
in
push
add
stos
push
jo
out
rcrl
sbb
push
aaa
and
andb
ret
sti
ficomps
add
jae
mov
test
push
inc
push
out
das
sahf
cltd
mov
dec
dec
adc
hlt
sbb
out
inc
adc
lea
xor
cmp
rcll
cmp
fisttps
pop
ficompl
xchg
add
aaa
dec
mov
mov
das
xor
or
lods
jnp
insb
insl
insl
aaa
cmpsl
mov
out
ljmp
sti
shrb
xchg
jno
add
popf
out
call
jne
jg
cli
pop
mov
pop
push
jbe
inc
mov
jle
xor
xchg
mov
jmp
bound
negl
jle
xor
test
push
scas
loope
add
aas
sahf
xor
je
sahf
int3
adc
sbb
push
xor
adc
les
or
mov
inc
adc
pushf
daa
pop
mov
push
jne
add
mov
pop
dec
dec
dec
lahf
mulb
movsl
adc
xchg
scas
cmpb
cmc
push
jp
lret
loope
pop
sti
rorl
push
outsb
daa
xchg
cli
cli
xchg
dec
mov
adc
or
inc
loopne
pop
jnp
xlat
pop
mov
mov
sbb
push
dec
repnz
cmp
adc
mov
popa
pop
cmpsb
mov
mov
stos
loopne
jb
ficompl
rclb
add
push
or
or
das
rcl
stos
sbb
clc
lock
and
jae
into
adcb
rcl
dec
sub
xor
outsb
mov
das
pop
jno
pop
sbb
cwtl
sbb
dec
mov
sbb
fstpt
cmp
xchg
sub
jmp
cwtl
push
fdivrl
mov
cmpsl
aas
cmp
lods
js
dec
jp
shrl
leave
out
cmpsl
xchg
add
incl
dec
mov
xchg
das
inc
push
add
and
mov
mov
movsl
sbb
pop
xchg
xorl
fiaddl
lcall
hlt
mov
ljmp
cmp
pop
pop
outsb
fisubrs
add
lret
dec
xchg
pushf
cmp
mov
jae
into
push
cs
enter
ljmp
lock
in
mov
jae
fildll
mov
lock
jne
imul
inc
sti
jle
imul
mov
popf
addr16
add
sbb
jg
lahf
dec
add
aaa
std
cmpsl
dec
cmpsl
jge
mov
dec
mov
rolb
jmp
dec
test
add
adcl
push
ljmp
push
mov
fs
gs
cwtl
mov
lods
stc
es
mov
cmp
mov
push
scas
andb
xchg
and
mov
jb
mov
dec
xchg
ja
iret
mov
int
mov
lods
mov
add
cmpl
sbb
test
enter
sbb
add
mov
push
popf
dec
sbbb
mov
xchg
or
fdivrs
fs
lock
cwtl
cltd
mov
rcl
push
loop
mov
xchg
jle
and
pop
mov
stos
imul
cwtl
test
outsl
jns
dec
loop
pop
jb
imul
arpl
in
in
inc
pop
hlt
jge
inc
aaa
pop
paddw
mov
inc
fdivr
nop
jmp
or
add
fildll
aad
jg
push
pop
sbb
pop
call
cli
cmp
pop
and
daa
cmp
mov
fcoml
lea
es
aas
lods
leave
loope
into
pop
repnz
insb
inc
jmp
sahf
repz
jne
in
sub
xor
testl
push
call
loopne
push
push
jg
mov
sbb
leave
decl
sarb
into
jns
sbb
add
add
sbb
mov
or
sub
dec
popf
add
test
push
mov
jle
subb
aad
nop
fisttpll
data16
jnp
xchg
dec
cmp
sbb
movb
adc
sub
loopne
in
adcb
push
push
shrl
cmp
out
aam
mov
and
inc
pusha
add
or
cmpsl
or
testl
dec
xlat
shl
mov
in
sub
mov
pop
cmp
es
mov
shll
or
pop
std
fldt
mov
insb
push
jp
jb
js
hlt
ljmp
mov
mov
inc
insb
push
icebp
inc
shll
jp
cwtl
in
mov
adc
addr16
mov
subb
or
mov
sub
push
mov
fwait
jge
add
in
sbb
mov
je
xchg
scas
arpl
and
aad
dec
cli
mov
loopne
lods
idivb
mov
sahf
in
arpl
sub
in
push
outsl
cmpsl
fs
dec
pop
mov
jge
and
push
xchg
dec
mov
mov
add
stc
sub
loop
fstl
das
daa
enter
jecxz
popa
notb
stos
out
pop
rclb
xchg
nop
jle
and
or
sbb
pop
stc
call
inc
into
or
pop
push
out
ja
push
and
in
ret
add
mov
cmp
mov
sbb
jne
xor
jnp
pop
call
arpl
mov
push
jg
xchg
testb
adc
in
lock
outsb
jae
into
jns
rcr
dec
sbb
lock
dec
jecxz
sbb
add
jne
adc
nop
into
fwait
cmpsb
inc
sub
xchg
sub
xchg
in
jl
leave
insl
test
out
mov
xor
lods
movsb
add
cld
dec
xchg
xor
adc
push
push
shrl
add
mov
sbb
pop
xchg
push
loopne
ja
call
mov
pop
inc
mov
insl
cld
mov
push
clc
das
push
hlt
mov
cmp
sub
and
test
xor
call
jl
add
dec
scas
push
or
shrb
pop
and
popa
movzwl
in
adc
ja
sbb
cmpsb
pop
sub
mov
dec
and
into
stos
lock
scas
mov
out
cli
dec
pop
sti
pop
add
cmpb
ja
adcb
repnz
add
mov
sbb
fs
js
xrelease
repnz
test
out
into
mov
pop
cs
push
mov
pop
test
xchg
imul
xor
lock
cmp
arpl
imul
push
mov
xchg
ds
xchg
pop
popa
repz
push
outsb
add
movsl
movsb
jp
mov
out
sbb
jmp
push
xor
dec
xchg
dec
dec
fwait
pushl
aam
cmp
sbb
push
push
mov
and
add
roll
fcoml
mov
jl
jl
mov
lret
mov
push
jmp
in
cmc
jb
aas
push
xor
faddl
or
pop
or
inc
mov
jl
stc
aam
jecxz
sbb
daa
out
js
xchg
out
inc
xchg
mov
out
les
stos
sub
cwtl
lods
sbb
lods
xchg
push
or
daa
mov
cmpsb
iret
insl
mov
lret
sarl
mov
shrb
mov
sbb
rol
scas
pop
bound
sub
inc
cmp
iret
push
in
dec
pop
or
inc
fwait
push
shll
mov
aad
jnp
xchg
fnstsw
push
fs
xor
test
cld
leave
dec
push
mov
lds
mov
sub
sub
jnp
mov
addl
in
fiadds
test
out
dec
cmp
sbb
mov
insl
inc
stos
mov
fnstcw
mov
dec
add
insl
neg
sbb
add
cmpsb
loop
xchg
and
repz
aaa
inc
pop
sbb
icebp
jecxz
pop
rcr
mov
es
jno
add
xor
inc
fs
or
mov
jp
mov
add
mov
xchg
mov
dec
pop
rorb
mov
hlt
mov
jae
sub
jbe
and
lret
addb
test
pop
cld
pop
sub
call
push
xor
data16
cmp
dec
rcl
popa
shll
rclb
mov
shrl
rcll
cs
xchg
fsubrl
mov
sub
dec
sub
xor
push
jae
lea
fnstsw
cli
pop
inc
pushf
jns
int3
mov
insb
pop
ror
fnsave
mov
or
pusha
std
fwait
divl
mov
aad
jo
nop
xchg
test
enter
aas
jne
movsl
cld
sub
push
xor
je
mov
sahf
and
mov
sarl
mov
sbb
xchg
sub
fwait
inc
sbb
rorb
add
ss
adc
xor
jno
adc
repnz
test
lcall
push
or
sub
shl
aas
jmp
cmpl
push
push
into
pop
adc
or
mov
fwait
cmp
jns
fstp
jg
insl
jbe,pn
push
cmp
popa
sahf
addr16
das
jbe
mov
push
stos
sbb
xor
movsb
mov
das
sbb
iret
loope
xchg
lret
xchg
loope
dec
or
push
outsl
pop
push
movsb
mov
cld
ret
test
stc
mov
push
adc
push
loop
cmp
jno,pn
and
jge
jmp
mov
gs
mov
mov
xchg
fndisi(8087
xchg
sub
jl
add
pushl
push
ss
fidivs
rolb
push
mov
jno
stos
mov
lock
sahf
call
adc
push
lret
out
xor
filds
sbb
outsl
int3
aas
cmp
add
cmpsb
les
cmp
shrl
jbe
adc
stc
mov
mov
mov
daa
int3
pop
shrb
dec
jnp
mov
mov
out
insl
push
mov
adcl
out
adc
sbb
cwtl
jl
mov
pop
mov
icebp
cmp
inc
xchg
sti
ret
fs
jg
jne
cmp
scas
xchg
jae
or
push
repz
dec
addl
adc
stc
data16
in
add
aaa
mov
pop
push
dec
mov
dec
es
dec
pop
ret
dec
sub
xor
sahf
icebp
ret
andl
into
aam
sub
repz
mov
loop
call
mov
addr16
cmpsb
xchg
pop
sbb
jns
push
mov
push
out
test
js
inc
je
jo
repnz
adc
outsl
ljmp
ss
sbb
push
push
test
mov
xchg
sub
mov
test
jbe
sbb
stc
aad
jmp
shll
stos
ds
mov
mov
sbb
test
cmp
lret
mov
xchg
pop
dec
pop
xchg
stos
xor
inc
adc
repnz
test
sbb
add
stos
adc
ljmp
repnz
and
inc
xlat
filds
xchg
imul
mov
sbb
mov
cmpsl
adc
mov
sbb
and
pop
dec
popa
and
pusha
or
daa
fcompl
mov
out
test
int
ret
xor
mov
aas
mov
pop
cmpsl
stos
outsl
add
ret
mov
add
push
in
pop
lahf
movsb
mov
imul
dec
mov
pop
outsb
add
lds
push
mov
clc
test
data16
cwtl
movsb
lahf
ret
inc
leave
mov
pop
and
sbb
scas
arpl
push
fucomi
mov
lret
mov
push
pop
mov
loopne
push
or
sahf
add
cmp
sbb
sti
mov
iret
and
arpl
push
outsl
adc
cltd
lods
arpl
test
mov
in
mov
and
adc
jp
mov
mov
adc
xor
xchg
add
inc
pop
mov
mov
mov
into
call
dec
bound
aaa
fidivrl
push
jae
sti
or
mov
or
into
jne
lea
push
add
je
fdiv
neg
jl
pop
aaa
std
inc
mov
lods
fldt
xchg
cs
aaa
fldcw
out
repnz
adc
jecxz
adc
in
dec
int3
sub
sbb
cmp
adc
mov
jp
jl
push
mov
rcrb
insb
mov
sub
push
aaa
fwait
mov
jnp
imulb
add
jns
mov
cmp
js
dec
mov
mov
jo
into
jns
fbld
hlt
dec
test
cmc
sbbl
cli
jne
inc
xor
fcoml
push
pop
ret
jmp
xchg
add
add
jp
cmp
fsubl
add
jnp
sub
xor
lods
add
movsl
pop
push
jns
sub
mov
pop
bound
adcb
test
enter
cmp
stos
aaa
scas
jae
popa
aad
popf
scas
adc
xchg
add
call
jno
scas
jnp
imul
adc
xchg
mov
cmpsl
xchg
sbb
data16
xor
or
mov
add
ret
je
mov
mov
add
or
push
push
adc
mov
xchg
es
adc
arpl
ja
adc
sbb
inc
push
xlat
xchg
and
jne
push
cmp
aas
fstl
sahf
adc
mov
scas
jns
adc
aaa
cld
jb
dec
fisubs
loop
xor
les
lea
mov
or
push
adc
bound
dec
push
and
mov
loop
push
aas
int
jb
push
pop
mov
punpcklwd
popf
stos
jecxz
rcrb
dec
xchg
dec
jo
in
aaa
movsb
push
pushf
les
cmp
outsb
out
aas
stos
xchg
ljmp
xchg
lods
mov
inc
dec
mov
jg
shrb
frstor
and
or
ss
in
clc
inc
into
mov
sub
sub
ja
rol
and
dec
int
roll
aas
aad
mov
dec
ret
scas
jle
insl
pop
aaa
mov
imul
adcb
std
mov
loop
mov
jae
pusha
xor
push
dec
add
pop
xchg
or
ljmp
mov
fiadds
or
xor
mov
pop
lcall
clc
lock
pop
push
sub
xchg
std
adc
sub
fsubrp
lret
mov
push
out
sbb
adc
sbb
jecxz
sub
iret
pop
dec
mov
mov
in
out
cmpsb
pop
imul
test
mov
mov
aam
out
xchg
outsb
cmp
lock
ja
in
into
shll
pop
inc
adc
mov
jg
adc
lahf
out
enter
arpl
jmp
ds
xor
dec
addr16
stc
daa
jp
ss
adc
jns
sub
inc
pop
daa
push
or
stc
fdiv
or
cwtl
bound
shrl
lods
sub
inc
repnz
inc
mov
clc
sub
xor
pusha
clc
in
mov
leave
inc
adc
sub
loop
loop
cmp
ficomps
rolb
int3
addr16
gs
repnz
cmp
jns
sbbl
push
out
mov
bound
sub
jecxz
add
sub
xchg
dec
inc
pushf
pop
mov
outsl
aaa
int
push
lcall
adc
sahf
xchg
jnp
xor
outsl
ds
js
addr16
icebp
ret
leave
lea
js
xchg
es
pop
mov
sub
arpl
ret
lods
nop
dec
imul
ds
fabs
jg
jecxz
das
cwtl
leave
stos
and
movsl
xchg
jp
das
pop
cmp
rcll
push
mov
aam
inc
pop
cmp
mov
jno
inc
sub
jecxz
xor
pop
and
data16
push
push
loop
pop
mov
dec
jae
rorl
push
out
aas
adc
add
incl
mov
out
mov
in
lods
loopne
sbb
cmpsb
call
in
dec
icebp
jl
shlb
movsb
movsl
std
stc
js
push
sub
mov
gs
or
popa
inc
lea
mov
xchg
cmp
loopne
jg
mov
fwait
outsb
sbb
loopne
or
lret
jmp
adc
cmp
call
lret
cmp
enter
hlt
sti
dec
mov
jno
ficompl
adc
jns
arpl
xchg
and
adc
fmull
mov
xor
or
and
subl
mov
dec
push
aam
test
dec
jl
je
out
iret
cmc
int
scas
ja
push
mov
cmpl
test
inc
iret
mov
jnp
sbb
test
cmp
pop
int3
out
sbb
test
popa
mov
jo
es
mov
outsl
xor
xchg
add
mov
not
pusha
cmp
insl
movsl
aaa
mov
xchg
cmp
cmpsb
filds
stos
mov
push
loop
push
or
push
mov
inc
ror
and
dec
inc
loope
outsl
js
ret
sahf
add
test
lds
sub
xor
divl
or
adc
pop
js
jnp
sbbb
adc
jno
jo
add
fxch
push
adcw
cmp
ret
into
xor
imul
jl
xor
into
lods
sub
in
cmpsb
and
repnz
push
nop
pop
inc
inc
popf
rol
arpl
xchg
pushf
mov
test
dec
lahf
bndstx
inc
or
aaa
sbb
fs
arpl
pop
fidivs
out
loopne
hlt
enter
mov
je
add
sub
shrd
adc
aaa
cli
mov
rcll
movsl
negl
fbld
aad
cmp
sub
sbb
xor
scas
repz
adc
call
sarl
ja
pop
dec
jp
int
cmpsl
fdivrl
pushf
xor
sahf
push
dec
or
ds
mov
ss
xchg
les
scas
cs
outsb
das
pusha
mov
pusha
fstl
xchg
jmp
jb
bound
push
sbb
or
les
lods
inc
xor
int3
cmp
add
jecxz
mov
mov
scas
adc
lret
mov
out
xor
aaa
aaa
mov
pusha
out
fsubrs
scas
jl
sub
sbb
xchg
pop
iret
xor
test
jns
jbe
inc
fsubl
mov
push
addr16
and
push
mov
lret
test
repz
mulb
pop
add
shll
sbb
xchg
ljmp
test
pop
cmp
into
jns
mov
sub
out
jmp
dec
push
mov
negl
dec
mov
xchg
pop
hlt
mov
out
loop
cmp
xchg
pop
fisubs
or
sbb
mov
or
pushw
orb
std
insb
mov
rolb
lds
test
push
push
in
sahf
call
popf
pop
cmp
mov
pusha
inc
and
dec
dec
mov
shl
insb
mov
pop
push
repz
das
imul
or
popf
testl
jl
out
dec
mov
sahf
jo
xor
or
pop
sahf
jne
loopne
notl
popa
ficomps
sahf
adc
dec
dec
sub
xchg
mov
push
test
and
xlat
imul
fsubs
mov
cltd
inc
jo
push
mov
cs
push
out
or
sahf
add
push
or
xchg
jl
and
es
lds
dec
aas
pop
push
out
stos
mov
mov
pop
jo
push
pop
push
xor
shr
mov
inc
dec
inc
cmc
mov
xchg
lods
sub
sub
sbb
push
sub
jbe
mov
sub
xchg
aaa
fnsave
leave
xchg
push
cltd
mov
add
dec
adc
jl
es
inc
or
sbb
jae
insb
cmpsb
or
cmp
jnp
sub
dec
decl
xchg
pusha
int
cmc
sbb
dec
xor
xchg
mov
inc
lods
outsb
xor
test
push
cmp
cmp
add
lahf
add
das
loope
arpl
aas
add
outsb
dec
sub
xor
mov
push
out
cmc
xor
mov
lods
shll
popf
int3
or
outsl
mov
fimuls
adc
adc
lcall
leave
lds
mov
adc
or
call
inc
adc
lcall
xchg
enter
sub
sub
and
iret
mov
repz
add
cmc
push
push
in
addb
mov
cmc
aas
sbb
in
in
in
mov
mov
out
cmp
mov
sub
xchg
rcll
test
pop
or
pop
lods
cmpsl
mov
frstor
pop
xor
ds
xchg
ljmp
pop
int
pop
sbb
leave
les
shlb
popf
std
mov
jne
fisttps
mov
jbe
jmp
rcrl
arpl
cltd
out
shlb
ds
test
call
dec
inc
lods
pop
das
push
add
hlt
push
pusha
mov
jg
push
stc
in
add
gs
sub
or
pop
sbb
jns
repz
mov
rolb
lret
cmp
jmp
out
mull
lret
stos
mov
and
dec
push
pop
sti
int
jae
xchg
movsl
sbbl
fwait
arpl
sahf
orb
rep
stos
cmp
das
sub
or
out
cmp
stos
mov
lret
pop
fidivrl
adc
pop
jb
sbb
adc
inc
adc
imul
xchg
mov
push
xchg
mov
sub
ret
jle
sub
fs
dec
fs
adcb
xchg
mov
pusha
in
push
iret
in
cmp
sub
pop
fs
add
adc
and
cmp
or
dec
lret
nop
repz
shlb
push
mov
out
test
lahf
rolb
sub
shrb
arpl
xor
js
fcoml
mov
pop
popa
rcl
fsts
mov
fists
stos
imul
cmp
and
xor
or
jb
push
xchg
xchg
je
xor
mov
cmp
sbb
out
inc
repz
jge
xrelease
pop
pop
push
jg,pt
into
aad
rcrl
leave
ret
pop
cwtl
pop
ficoml
or
jp
mov
jae
add
lcall
push
lret
mov
xchg
push
jbe
add
ljmp
call
mov
xchg
cmc
jns
jle
dec
and
movsl
mov
in
sub
cmp
out
xchg
popf
add
push
sbb
repz
repnz
jno
pop
push
ds
push
pop
ret
out
or
sbb
sbb
outsb
test
decl
dec
cvtpi2ps
bnd
xchg
xor
das
ds
ds
adc
add
lods
mov
mov
jo
mov
mov
testl
mov
add
lds
sub
in
out
mov
jb
sbb
mov
shll
aas
popa
es
dec
xchg
mov
push
lods
in
js
out
andl
jnp
fistpl
pop
sti
mov
xchg
push
lods
dec
ret
add
jno
stc
mov
or
pop
pop
mov
icebp
mov
cmp
lods
xor
xor
rcll
insb
insb
lahf
loop
movsb
push
pop
xchg
test
jmp
fistps
inc
cs
cld
push
in
push
dec
and
cmp
push
dec
cwtl
leave
push
and
test
mov
cs
aad
ret
shlb
fs
push
adc
jge
jge
or
sbbl
add
pusha
inc
movsl
jge
fcompl
xlat
popf
cmpsb
push
adc
add
jno
call
add
aam
inc
or
mov
sbb
lret
xchg
jae
xor
mov
fcompl
fidivrl
inc
iret
cmpsl
fidivrl
xchg
fcom
gs
pop
pop
test
ret
inc
loop
test
int3
lea
lret
cmp
lahf
mov
loop
add
jb
jge
int3
mov
cli
popa
int
cltd
pop
out
or
adc
sti
mov
lret
pop
test
sub
popa
lcall
add
insb
pop
shr
push
bound
in
lds
mov
xchg
add
bound
xor
stc
fnsave
repnz
cmp
lea
pusha
rcrl
jmp
out
dec
dec
xchg
cmp
daa
xchg
push
gs
xchg
rorl
arpl
or
test
xor
xor
mov
sub
lea
and
and
dec
and
adc
push
cmp
sarb
cli
dec
test
ja
pop
arpl
ljmp
cwtl
lret
pop
inc
fmull
sbb
dec
jno
test
pop
xor
imul
das
in
fildl
repz
push
cmp
pop
icebp
outsb
cmpsl
int
test
mov
mov
into
xchg
call
es
jmp
mov
aam
andb
in
xor
je
rorb
lea
ja
mov
cmpb
into
push
mov
fsubr
ljmp
ret
xor
xor
ror
mov
rcrb
jle
add
jge
xlat
fldenv
push
or
fidivrl
out
adc
sbb
or
in
xor
push
imul
lret
sbb
les
xor
xlat
fstp
mov
mov
dec
or
adc
dec
dec
xor
sti
inc
ljmp
xchg
ds
cltd
pop
shl
xchg
push
xorb
xchg
fsub
sbb
add
sub
hlt
aaa
mov
adc
dec
fcoms
push
dec
cmp
lret
mov
cmpsb
ja
pop
xchg
rol
mov
jge
daa
jnp
add
mov
in
pop
std
jo
adc
jnp
mov
test
out
pop
cmp
cwtl
dec
repnz
into
pushf
mov
xor
sbb
pop
mov
cmp
out
mov
jne
scas
xlat
push
lret
daa
lahf
push
cmp
dec
mov
adc
sbb
cmp
inc
repz
cmpsb
mov
push
fistpl
sub
xchg
cltd
das
add
scas
dec
out
ljmp
sub
leave
in
mov
mov
jbe
jae
push
popf
jge
stc
cmpsl
scas
lret
cmpsb
fisubl
dec
lock
inc
push
dec
ss
repz
stos
out
in
andl
mov
pop
xchg
repz
jne
lods
test
insl
out
jns
scas
jmp
sub
inc
adc
int
pop
and
std
or
sti
sub
or
ljmp
adc
push
jne
sarl
mov
sub
int
cltd
add
push
enter
push
jo
xchg
pushf
out
pop
cwtl
test
or
mov
fcompl
ret
xchg
iret
daa
pop
test
mov
mov
inc
dec
jg
jecxz
lahf
cmp
and
nop
push
jne
mov
popf
mulb
pop
stos
inc
lds
inc
jb
or
xchg
roll
mov
jge
icebp
mov
cli
sub
popa
xchg
iret
aad
mov
loope
cs
jbe
rcll
xchg
lods
insb
jnp
mov
mov
ja
cmp
dec
mov
pop
push
mov
sub
or
std
jl
les
or
push
shl
jecxz
clc
or
aad
push
sbb
add
rcr
std
cmp
or
or
test
arpl
outsb
jno
push
push
mov
dec
ja
call
out
push
push
movsb
call
push
mov
sub
lds
inc
sub
popa
sbb
xor
xor
lret
or
testb
jg
pusha
leave
dec
inc
inc
xchg
mov
mov
xor
push
xchg
out
mov
jg
out
cmp
xor
sbbb
sub
pusha
scas
adc
add
lcall
pop
iret
stos
or
and
jp
nop
sbb
dec
cmp
sub
pop
outsl
sbb
fs
roll
inc
je
jp
jmp
fwait
mov
adc
out
mov
add
sub
fbstp
xor
in
push
aam
mov
es
sub
les
mov
popa
shll
frstor
pandn
push
mov
call
sbbl
lds
sahf
push
mov
jp
cmpsb
inc
cwtl
mov
pop
hlt
addb
xchg
pop
fstl
mov
scas
orl
inc
sub
fmull
into
test
mov
out
pop
pop
stos
sbb
cmp
inc
imul
pushf
mov
je
jno
daa
cmpsb
stos
popf
lahf
dec
loopne
mov
adc
sarb
aad
sbb
repz
inc
dec
xor
les
clc
int3
jle
rclb
jne
icebp
stos
sub
jmp
adc
and
sti
sub
mov
fisubrs
or
stos
sbb
push
cmp
add
mov
sub
andl
and
xor
js
ss
test
sub
int
adc
add
sahf
mov
fcom
loop
or
pop
mov
inc
js
ret
pop
out
loope
sub
out
subb
icebp
pop
ja
mov
ljmp
sub
and
and
cmc
mov
mov
mov
xchg
xchg
int3
inc
mov
inc
cmpsl
push
cmp
loope
data16
es
xchg
mov
dec
rclb
ret
jno
push
inc
or
xor
jns
jns
cltd
popa
pop
jne
mov
scas
fstpt
or
cvtpi2ps
sub
dec
mov
repz
inc
ss
out
dec
push
or
outsl
jo
or
push
adc
or
popa
pop
popa
jge
mov
adc
cld
out
psrld
into
mov
mov
test
jns
lods
clc
cmp
pop
mov
movsb
xchg
dec
mov
adc
enter
cmp
sbb
pop
scas
in
lods
jle
add
aaa
imul
ss
outsl
movsl
rcl
and
jmp
adc
cmp
fstp
dec
cmp
xchg
daa
xchg
xor
scas
pushf
and
push
push
fstenv
js
push
jne
rol
lock
sbb
iret
scas
hlt
sub
xchg
test
loope
aas
int3
call
push
rcrl
std
and
rcrl
int
icebp
inc
xchg
in
out
hlt
cmpsb
and
sbb
pop
arpl
roll
testb
outsb
fsub
out
xor
fdivr
inc
bound
jl
int
scas
loop
fadds
push
fldt
mov
sbb
aaa
aaa
cmp
lock
inc
movsb
nop
daa
push
jl
jae
cmp
push
mov
push
xchg
in
jmp
mov
stos
pop
rcll
sub
loope
shlb
pop
push
in
mov
cs
movsb
mov
dec
mov
sub
clc
sti
jae
out
aas
insb
mov
inc
and
push
scas
fnstsw
push
int
lret
cmc
das
call
fldcw
lods
sub
mov
mov
mov
dec
gs
mov
arpl
clc
sbb
inc
aam
addl
sbb
or
adc
outsb
mov
clc
dec
arpl
pmulhuw
testb
adc
into
pop
scas
leave
ja
dec
icebp
repz
push
jno
jae
or
sti
xchg
test
mov
fstl
and
imul
stos
test
iret
push
and
pop
sbb
adc
lock
push
mov
movsb
mov
mov
push
daa
clc
dec
push
or
sar
cltd
aas
pop
repz
filds
out
leave
daa
push
dec
or
sub
mov
ljmp
les
insb
ljmp
jle
sbb
mov
bound
mov
jp
and
cld
leave
cmp
aad
hlt
jne
cwtl
test
mov
add
dec
mov
xor
test
insl
mov
cmp
add
pushf
mov
fisttpll
xor
mov
int3
xchg
xchg
add
mov
mov
aad
mov
jns
aaa
stos
stos
nop
xor
mov
sbb
lods
xchg
pop
in
mov
adc
inc
lret
mov
mov
insb
int
cmp
push
stc
jns
xchg
pop
fwait
mov
fwait
cmc
out
sbb
push
jg
ret
xchg
mov
dec
and
daa
pop
popa
push
icebp
pop
xor
sbb
jo,pt
xchg
or
xor
stos
loopne
pop
pop
es
xchg
out
lds
sbb
cmpsb
repz
insb
add
dec
or
jmp
dec
or
mov
mov
xchg
or
inc
aad
sbb
and
movsl
add
mov
rorb
mov
jmp
movsl
lock
negl
into
repnz
out
sbb
cmp
shrl
lock
push
es
and
jb
popf
popf
mov
ds
add
mov
mov
sbb
ffreep
jno
pop
push
xchg
lock
movsb
pop
outsb
ljmp
aad
xor
fdivrp
jmp
repz
shr
inc
rolb
xchg
push
or
aad
insb
out
adc
inc
push
leave
push
xchg
in
cmp
fdivrs
push
fisubrs
mov
das
push
ljmp
inc
cmp
popa
xor
sarb
push
mov
lahf
inc
sti
mov
sbb
sub
adcl
cltd
cmp
out
jge
sbb
and
sarl
shrl
stc
fidivl
cmc
mov
mov
and
dec
adc
mov
call
loopne
xor
pop
lret
dec
fldcw
lcall
fldl
add
lret
movsl
sub
cs
mov
push
movb
popa
sub
fistpll
outsb
out
dec
dec
jle
mov
mov
ret
pop
addb
in
std
mov
mov
mov
inc
lock
push
mov
cmp
or
imul
sbb
sub
jle,pn
mov
int3
vpsravd
sub
fmul
clc
loope
pop
bound
jge
fstl
or
pop
push
and
cmpsb
arpl
dec
mov
test
push
int
xor
aaa
in
dec
or
pop
cmpsl
push
lret
mov
bound
dec
sbb
stos
lea
sbb
aad
inc
jb
ljmp
pop
test
mov
sub
sub
mov
mov
xchg
jo
cltd
nop
into
adc
and
sub
sarl
mov
push
push
cmp
out
push
out
add
repnz
mov
xchg
jp
sbb
pushf
dec
jne
push
push
out
addb
sbbb
mov
das
lods
sbbl
fcmovnu
xchg
xor
mov
sarb
and
xor
mov
push
outsb
pop
icebp
dec
inc
cwtl
call
sbb
lock
js
fistpll
adcb
mov
ja
jge
mov
cli
out
rol
add
push
adc
cmp
inc
sbbb
inc
mov
adc
mov
xlat
or
xchg
mov
push
cli
xorl
scas
fimuls
mov
cld
mov
enter
jmp
and
int
sti
mov
out
int3
adc
dec
push
clc
cmp
std
cmp
and
ljmp
sbb
or
push
cwtl
pop
add
ja
roll
lea
cli
cld
divl
rorb
aad
and
int3
adc
inc
hlt
sahf
mov
cli
xor
popa
mov
and
addl
je
psllw
jnp
out
dec
cmp
adc
imul
push
insl
cld
mov
cmp
divl
out
xlat
add
test
or
cmc
jge
sbb
pop
jae
movsb
dec
bound
inc
rcl
dec
int
ja
or
pop
std
mov
mov
xor
test
xchg
xlat
das
out
ds
pop
push
bound
adc
pop
and
sbb
ret
cmp
lods
and
xorl
lahf
mov
sti
push
add
pop
stos
cltd
pop
orb
hlt
pushf
or
ss
outsb
mov
push
xchg
cs
pop
mov
cmp
mov
movsl
js
sbb
or
inc
lcall
adc
cmp
mov
or
xchg
jne
popf
jbe
lret
sub
gs
or
iret
push
fdivrs
jno
insl
out
add
in
mov
sbb
dec
pusha
mov
and
inc
mov
fadds
mov
imul
scas
mov
ret
fldenv
jg
jb
or
rorb
mov
enter
imul
pop
daa
pop
stc
mov
fs
pop
pop
adc
testl
in
std
mov
push
jns
mov
lea
jecxz
scas
popf
sarb
fildll
adc
fisubrl
inc
xor
jge
adc
icebp
adc
mov
scas
inc
movsl
gs
mov
xchg
mov
lret
adc
mov
mov
icebp
and
lcall
flds
xchg
add
aad
and
daa
push
mov
inc
scas
dec
inc
mov
scas
sbb
push
das
int
jnp
loop
mov
fs
jg
mov
jle
call
push
jle
imul
and
xlat
cltd
lret
adc
sub
xor
pop
int3
pusha
sbb
push
dec
ret
testl
sti
adc
lahf
cmpsb
mov
pop
lea
daa
mov
xor
dec
lret
daa
xchg
inc
dec
cmc
mov
xchg
sahf
arpl
fnstenv
pop
sbb
dec
jmp
pop
xchg
mov
mov
mov
inc
aas
add
push
test
jl
fisubs
mov
mov
mov
es
mov
mov
in
mov
shrb
jo
mov
xor
jmp
mov
pop
aad
jp
iret
jne
rcrl
popa
xchg
mov
es
mov
scas
mov
icebp
fucom
inc
xor
test
sbbl
jmp
mov
jmp
lcall
addr16
mov
enter
roll
bound
jl
rorb
popf
jl
mov
jae
push
pop
into
mov
das
in
lret
push
add
in
mov
es
insl
movsl
dec
std
and
hlt
jne
xchg
xor
fsubs
xor
fucom
aas
add
sbb
pushf
pop
jecxz
lods
aad
mov
mov
out
dec
lret
xchg
icebp
lods
inc
cmpsb
outsb
movsl
and
ret
int3
test
cmp
cmp
iret
push
outsl
adc
popl
ret
loopne
imul
ja
negb
jnp
adc
mov
jb
push
mov
in
inc
add
sub
outsb
daa
imull
jns
and
popf
inc
mov
cmp
icebp
and
cmp
sbb
ret
and
adc
pop
xor
xor
adc
insb
test
jbe
and
ret
out
std
push
mov
cmp
pop
daa
inc
leave
hlt
pop
and
call
test
lods
cmp
aaa
mov
dec
lea
ret
ja
shll
inc
xor
xor
jbe
push
adc
mov
rcl
push
xchg
das
out
mov
xchg
bound
sub
fildl
mov
ss
mov
cltd
lret
mov
icebp
inc
jno
mov
pop
imul
loope
adc
mov
pusha
hlt
jne
orb
inc
std
fwait
in
in
jne
iret
out
negb
fs
inc
dec
call
and
or
inc
testb
mov
cmp
pop
repz
pop
mov
lcall
mov
mov
js
int3
int
aas
into
pop
adc
pop
fiaddl
mov
sbbl
dec
sti
jb
sbb
adc
mov
fiaddl
orl
in
imull
lock
aas
mov
stos
add
fnstcw
xor
push
sbb
fisttpll
push
out
sbb
xchg
orl
sub
add
push
push
adc
gs
dec
mov
lret
outsb
test
shl
and
mov
ds
mov
outsb
inc
sub
push
arpl
and
lea
and
lds
cmpsb
stc
hlt
inc
or
jg
push
shrl
nopl
pop
xchg
subl
loope
push
out
jne
mov
mov
ss
mov
mov
es
dec
jne
cld
aas
mov
cltd
lds
hlt
inc
clc
hlt
push
pop
fsubrl
or
int
push
movzwl
je
mov
mov
fsubrp
ljmp
mov
cmpsb
dec
stos
lds
cmp
jno
fsubp
mov
cli
cmp
pop
push
scas
jae
lds
ljmp
push
pop
enter
xor
jne
pop
pop
add
bound
adc
cmp
adc
mov
sbb
cmp
cmpsl
jp
repnz
ja
outsl
xchg
jecxz
cmp
lcall
rclb
shrb
fcoml
inc
sarl
popl
testl
push
mov
push
xchg
outsb
out
imul
inc
mov
stos
enter
das
xor
arpl
cmpsb
sub
insb
adc
dec
or
adc
push
loope
sbb
test
dec
insl
scas
sarb
rorb
std
repnz
pinsrw
mov
cmp
scas
cmp
test
sbbb
scas
outsb
jae
push
cmp
icebp
lret
fldcw
lock
mov
fs
movsl
add
int3
or
mov
cld
jmp
or
stos
fimull
mov
cmp
push
data16
cmpsb
in
mov
lock
mov
sub
push
sub
mov
out
mov
cmp
adc
loope
dec
dec
iret
mov
dec
mov
mov
ror
rdpmc
add
xor
xchg
lock
mov
sub
in
cmp
xchg
or
adc
xchg
inc
xchg
fidivrs
pop
push
sbb
out
shrb
xchg
sub
dec
scas
mov
xchg
das
repnz
add
popa
xchg
loope
int3
jb
inc
push
dec
or
lds
mov
popf
ficompl
stos
sbb
addr16
in
movsb
pop
shlb
push
pop
xchg
loop
int
int3
lret
pop
or
push
inc
mov
fdivp
ficoml
and
call
mov
pop
pop
iret
bound
ljmp
arpl
and
push
cltd
xchg
adc
lahf
outsl
mov
loop
mov
xchg
xchg
cltd
sub
jmp
aam
test
pop
sbbb
lret
aam
mov
jecxz
and
aad
mov
out
and
dec
inc
arpl
call
lret
int3
push
or
and
jmp
stos
inc
ret
sbb
je
push
xchg
ret
mov
scas
jmp
ljmp
pushf
sti
and
js
packsswb
loop
popf
sarl
sar
imul
sbb
data16
iret
je
cmp
jecxz
jmp
dec
incb
push
mov
sub
rcrb
pop
scas
cmp
jno
sub
cmc
scas
push
add
jecxz
sub
lea
outsb
mov
adc
insl
insb
iret
cmpsb
dec
dec
test
dec
data16
push
popf
sbb
nop
fwait
xchg
mov
jne
test
mov
bound
ljmp
data16
ret
jns
sub
cmpsl
stos
pop
ljmp
push
stc
mov
inc
push
fistps
dec
fisubs
push
cmpsl
fidivs
adc
sti
fs
and
lcall
icebp
lcall
shlb
insl
mov
push
fs
shlb
jge
scas
flds
pop
dec
jg
in
fldl
xchg
hlt
inc
or
fildll
dec
test
cmpsl
popa
push
pop
stc
test
nop
fwait
mov
push
pop
in
and
sbb
hlt
icebp
mov
in
xchg
xchg
adc
in
fidivrl
pusha
inc
cmpsl
enter
leave
pop
icebp
ss
push
fsin
jb
xor
imul
outsb
psllw
sbbl
outsb
xor
mov
sub
push
inc
lea
dec
xor
lods
adc
out
sarb
ret
imul
cli
test
pop
icebp
push
popa
mov
mov
push
jmp
stos
in
scas
daa
in
add
int3
push
xor
jne
int3
es
push
mov
daa
jnp
inc
xchg
addb
ss
mulb
or
pop
decb
xor
loope
in
test
test
xchg
pop
jecxz
sub
xor
popf
ja
mov
imul
loope
sub
andb
inc
int
inc
bound
dec
sub
or
movsb
sub
imul
mov
add
sub
scas
mov
mov
sub
ret
gs
cld
pop
xchg
sbb
jns
jl
inc
sub
jne
cmp
arpl
and
in
inc
pop
out
in
addb
clc
dec
xor
aad
push
daa
filds
cli
out
cmp
test
fbld
xchg
or
mov
push
sub
pushl
out
add
cli
jno
test
lret
int
lcall
bnd
push
cmp
in
rorl
pop
adc
xchg
adc
flds
inc
scas
pop
push
pop
cmc
dec
push
cmp
cmp
out
movsl
adc
xor
daa
cmp
jle
imul
lcall
out
in
sub
mov
into
sar
push
push
ds
mov
or
rcr
push
jmp
mov
bound
sbb
and
push
pop
xor
incl
or
stos
jle
push
mov
xor
nop
shl
sub
or
into
pop
mov
loop
subb
scas
lret
add
dec
or
pusha
cmp
dec
adc
inc
rcl
outsl
mov
mov
dec
rorl
adc
addr16
sub
xchg
or
jbe
cltd
mov
lds
add
mov
mov
xor
mov
popa
lods
dec
xchg
mov
mov
xor
xchg
push
call
loopne
dec
int3
insl
xchg
sub
jae
faddp
fs
arpl
jo
repz
dec
push
jno
and
pop
pusha
or
push
enter
adc
adc
inc
stos
fmull
mov
in
xchg
adc
out
or
jg
xor
or
sbb
outsl
or
adc
pop
lret
out
daa
pushf
sub
aam
sub
ds
dec
or
mov
jecxz
lahf
mov
imul
jb
test
jns
push
push
loope
lods
adc
mov
fildll
cmpsb
bound
ror
jle
call
adc
clc
fwait
mov
sub
lcall
cmp
jno
or
outsb
jbe
fstps
jle
addr16
lds
fsubl
sbb
jl
push
in
popf
testb
and
xchg
imul
sbb
cmpsl
adc
adc
pop
xchg
push
outsb
arpl
mov
mov
lods
inc
jbe
xchg
mov
mov
inc
sbb
pushl
in
mov
jae
sbb
jp
sbb
adc
xor
int
es
iret
xor
or
mov
adcb
cmp
and
in
xlat
dec
mov
loop
xlat
and
pop
or
push
addl
adc
stc
mov
stc
pop
shlb
notl
ja
sub
mov
ja
fsub
in
idivb
mov
mov
push
lock
movsb
outsb
pop
cmc
ret
dec
pop
add
xor
sub
dec
dec
insl
mov
mov
lahf
mov
lds
jl
jns
mov
repz
daa
divl
cwtl
ret
pop
push
jae
lret
popf
hlt
mov
ret
cltd
movsl
pop
or
add
je
xchg
packuswb
xchg
sub
fsubrl
clc
roll
repz
stos
mov
mov
sbb
jbe
ds
pop
repnz
pop
lock
xchg
mov
inc
into
scas
mov
movsl
dec
fcom
sub
fistpl
jmp
movb
add
and
leave
out
push
pushf
imul
popw
into
and
mov
repnz
xor
pop
sub
xlat
loopne
and
xor
mov
xchg
xor
jb
test
subb
fs
stos
cmc
int3
mov
aas
lahf
mull
jecxz,pn
add
movsl
iret
fcoms
lods
das
mov
test
jno
or
sbb
call
repz
inc
test
sub
jnp
mov
cmp
and
push
cltd
inc
adc
lods
out
mov
xor
dec
and
ja
outsb
push
jo
inc
pushf
xor
xchg
and
test
add
xchg
pushf
pop
std
dec
mov
inc
sbb
mov
adc
insb
cmp
push
sbb
xchg
mov
jl
popa
jne
xchg
cwtl
call
cwtl
inc
jp
sub
add
stc
xchg
hlt
shlb
cwtl
je
cmp
div
in
call
or
out
cs
pop
pop
popf
and
outsb
nop
xor
or
cbtw
enter
push
fidivrs
shlb
outsl
out
iret
pushf
fs
mov
lret
adc
lods
sub
inc
sbb
adc
adc
xchg
sbb
lds
pop
push
mov
repnz
fimull
cld
dec
leave
in
xor
in
stos
pop
stc
das
pop
cli
mov
and
push
xlat
outsb
xor
aam
dec
std
lds
sbb
enter
scas
outsb
addb
lret
in
sub
xor
pop
dec
test
pop
pop
icebp
js
dec
mov
sbb
sub
cmpsb
nop
push
adc
mov
adc
pop
aas
pop
push
jp
cmc
fs
pop
iret
popf
call
and
dec
xor
cmpsb
inc
mov
jp
or
adc
and
mov
insb
shll
sub
shlb
xchg
aam
pop
xchg
dec
sbb
stc
movsl
sbb
enter
outsb
cmpb
push
sub
mov
sub
hlt
xchg
test
fcoml
arpl
sbb
xlat
out
sti
adc
pop
mov
mov
sbb
into
lods
mov
sbbb
cltd
jmp
stc
popa
xchg
sbb
mov
or
jno
addr16
and
adc
leave
leave
stos
inc
repnz
mov
imul
push
cmc
lock
xchg
rolb
ret
aam
loope
or
pop
movsl
pop
fnstcw
lods
mov
adc
jge
rcrb
insl
mov
clc
push
dec
rcll
sub
xchg
test
ret
dec
leave
rdpmc
in
fucompp
inc
xchg
insl
mov
jb
notb
jno
mov
sbb
out
mov
and
mov
pop
sub
and
inc
mov
es
ja
cltd
push
movsb
jl
repnz
shl
xchg
add
into
mov
stc
imul
xchg
hlt
push
dec
cmc
movsb
mov
cwtl
add
gs
inc
inc
in
add
xchg
shll
out
inc
dec
pop
hlt
push
lock
inc
out
shr
imul
stc
fnstcw
pop
paddsw
pop
inc
orl
mov
hlt
dec
aaa
test
jne
repnz
andl
pop
add
call
aad
ljmp
ljmp
mov
sub
pushf
mov
out
adc
ljmp
ret
int
sti
decb
xchg
xlat
mov
dec
cwtl
hlt
stos
mov
push
lock
inc
test
adc
sbb
cmp
add
test
ret
dec
sub
or
jnp
inc
mov
push
jae
pusha
fstl
in
jmp
mov
push
xrelease
pop
xchg
inc
jle
push
jno
fldcw
fldl
int3
pushf
push
push
jmp
mov
cmpsl
add
adc
dec
xorl
loope
push
lahf
into
mov
pop
jl
push
mov
fmuls
cmp
add
sahf
lds
mov
fwait
movsl
std
inc
ss
xchg
mov
ret
hlt
test
inc
ljmp
push
daa
cltd
fnsave
data16
adc
test
mov
incb
xchg
lahf
mov
in
mov
push
mov
and
lods
mov
xor
cmp
push
ss
cwtl
pushf
mov
into
xchg
inc
insl
dec
sbbl
inc
lret
and
cli
add
xchg
cmp
push
jge
dec
arpl
mov
ds
in
int
sub
fsub
add
and
jmp
fidivrs
dec
fcmovnu
jmp
std
stos
repnz
ljmp
xlat
sub
sub
push
jo
or
push
mov
jecxz
cld
lods
loop
xor
cmpsl
sbb
mov
pushl
pop
outsl
cmp
data16
je
mov
stos
inc
pop
inc
loopne
xchg
add
icebp
movsl
adc
divl
int
stc
xor
push
pop
iret
out
mov
push
js
adc
daa
hlt
divb
mov
lea
sbb
adc
fnstcw
xchg
rclb
fs
test
pop
cs
lea
dec
cmp
clc
and
insl
pop
sub
pop
pusha
add
cmp
cld
adc
and
addr16
fs
cld
das
les
sub
mov
sub
cmp
cmpl
fwait
std
mov
jbe
sbb
loop
push
fnstcw
add
push
daa
pop
inc
inc
data16
out
outsl
mov
test
jae
dec
xor
roll
repnz
in
fnsave
jo
mov
insb
imul
rolb
repz
jmp
xchg
add
pusha
out
add
mov
and
testl
push
ret
lahf
arpl
xor
pop
sub
and
dec
pusha
test
and
fdivl
xor
adc
cmp
xor
bound
and
into
mov
mov
xorb
adcb
xchg
std
rclb
das
andb
push
lcall
jecxz
sub
adcb
aas
shlb
sub
rol
addr16
in
jns
ss
mov
inc
lds
shll
in
ss
imul
mov
mov
fmuls
xchg
ffree
or
adc
cmp
cli
xlat
sbb
pop
repz
cwtl
out
inc
mov
lcall
push
xchg
lea
sub
and
data16
nop
jnp
dec
push
out
cs
jo
das
add
pop
xchg
fcom
xchg
pop
pop
jecxz
loopne
jno
insl
or
inc
pop
repnz
mov
fisubl
xchg
push
fisttpll
jg
jb
leave
addb
popf
imul
out
fimuls
xor
jae
push
icebp
mov
shld
and
push
or
es
or
cmp
sub
xor
jbe
ds
bound
cmp
pop
pop
xor
mov
add
loopne
inc
sbb
xchg
push
push
loop
add
xchg
dec
loop
adc
lahf
mov
popf
in
ljmp
bound
pop
fcoms
adc
jbe
lcall
mov
push
pushf
imul
cmpsb
pop
out
inc
cs
mov
push
push
dec
xor
inc
out
add
mov
call
jg
mov
ljmp
cltd
inc
std
jmp
mov
jbe
jl
pushf
repnz
ss
dec
adc
fisubrs
aas
mov
shll
fs
stos
mov
fs
iret
push
push
scas
or
pop
ficomps
data16
mov
push
pop
dec
les
shll
xchg
lds
rol
xor
in
ret
pop
push
ret
cs
dec
xor
mov
mov
push
rorl
or
mov
jo
xchg
in
jo
flds
insb
xor
cmp
push
ret
hlt
xlat
lcall
ja
adc
xchg
es
scas
push
mov
pop
inc
shlb
pop
fstp
mov
cs
faddp
or
aas
add
lods
fidivrs
xorl
lds
xchg
pop
out
pop
cmc
mov
movsb
xlat
sbb
inc
ret
out
aaa
mov
les
mov
xor
call
jne
popa
jo
movsb
jp
jb
jp
add
fldt
jo
cmp
mov
mov
leave
and
dec
cs
cmp
stc
adc
pop
das
ja
dec
xlat
sarl
jle
xlat
cmp
lret
test
pop
xchg
sub
addr16
xchg
adc
fs
push
mov
cltd
mov
ret
subb
fsubp
lea
or
stos
lea
stc
mov
in
pop
test
lock
and
movsl
jmp
push
aaa
imul
mov
in
push
mov
inc
iret
dec
adc
jae
call
sbb
int
fwait
and
pop
cmp
mov
xchg
sbb
mov
jg
fistpll
aam
inc
add
lahf
gs
leave
inc
sahf
in
mov
roll
std
push
pop
adc
cmp
jno
jae
inc
sahf
fisubl
jp
jle
test
in
pop
aad
inc
mov
enter
out
hlt
sbb
shr
xchg
jbe
add
and
push
inc
clc
mov
push
fdivrs
jmp
js
insl
das
stos
inc
push
xchg
cwtl
sahf
mov
in
bound
mov
and
or
jp
test
sbb
pop
mov
aam
jo
xlat
addr16
mov
jg
dec
mov
pushf
fwait
push
aas
out
mov
push
inc
lods
jge
in
daa
jge
mov
inc
pop
outsl
movsl
shl
pusha
xor
data16
out
out
cmp
inc
and
push
jno
out
cli
lods
push
sub
pop
or
xchg
sbb
push
test
and
incb
sbb
insb
ss
xchg
jae
movsb
test
mov
lods
push
call
add
psrlq
stos
and
lea
incl
pop
popf
test
or
mov
jle
xchg
sbb
ss
test
sub
pop
xor
test
jmp
push
ljmp
dec
xchg
mov
jge
add
sbb
pop
inc
aad
pop
xchg
call
mov
mov
pusha
pop
pop
aad
lret
add
xlat
imul
jg
add
sbb
pop
mov
cmp
push
movsb
sbb
lret
or
mov
dec
sub
movsb
pushf
aaa
ss
xchg
popw
sarl
fistl
pop
jb
inc
jbe
xor
scas
mov
cmp
lcall
jno
inc
and
clc
or
dec
arpl
inc
mov
and
add
cltd
test
push
int
mov
push
lods
idiv
aad
bound
lea
inc
cmc
pop
lcall
lods
mov
test
mov
lahf
mov
mov
mov
cmp
pop
sub
and
mov
push
jne
orb
jo
cmp
xchg
testb
jnp
jmp
adc
adc
nop
push
lret
inc
cmc
pusha
mov
sub
sarb
ret
cmp
jo
es
add
fbstp
les
sarb
outsl
xchg
loope
jp
push
mov
jp
shll
fiaddl
mov
pop
lret
mov
sbbb
mov
sbb
out
mov
lods
push
lods
fdivr
stos
mov
adc
js
mov
test
gs
imul
shlb
add
xchg
clc
push
add
dec
mov
or
jne
int
fs
dec
xchg
ret
jne
sbb
enter
aam
aaa
ret
out
or
sbb
ljmp
in
mov
push
dec
cmp
fistl
and
cmpb
mov
iret
shll
rclb
cmpsl
push
cli
dec
adc
inc
mov
dec
insl
outsb
ja
aas
fsubr
pop
pop
push
dec
leave
lods
mov
and
std
movsb
cmp
mov
std
loop
or
inc
js
fwait
ret
jge
call
or
mov
cmp
dec
push
jne
ss
in
jb
and
push
mov
lret
stc
sbb
xorb
xor
pop
cld
mov
jns
fildl
jmp
mov
fldl
or
icebp
repnz
int3
shll
cwtl
mov
xor
dec
mov
push
xorb
push
jb
test
idivl
mov
fmul
dec
inc
xchg
test
jg
cmpsl
icebp
shlb
outsl
xchg
sbb
outsl
inc
pop
lret
hlt
mov
movsb
push
sbb
dec
repz
adc
popa
outsb
in
fistpll
push
pop
popf
int3
mov
mov
add
arpl
lcall
mov
lds
aam
jg
sbb
or
ret
inc
pop
or
add
jge
xchg
jae
sbb
js
into
std
pushf
push
ds
mov
mov
jns
xor
xlat
fadd
add
int3
movsl
jp
push
nop
xchg
pop
inc
xchg
nop
pop
stos
pop
inc
add
xlat
sub
shrb
out
mov
or
fisttpl
pushf
xor
pop
aaa
imul
mov
jle
xchg
fistps
out
inc
fmull
clc
inc
mov
mov
les
mov
fistps
pop
adc
aam
bound
in
pop
pop
cltd
test
push
fsin
fsubrl
imul
imul
lcall
enter
add
push
xor
sbb
add
daa
test
jle
adc
xor
adc
jne
sub
pop
sub
jp
dec
pop
outsl
std
nop
mov
jecxz
sub
adc
inc
xlat
lret
mov
cwtl
push
insb
mov
inc
mov
aam
mov
stc
leave
scas
push
push
pop
loopne
add
inc
jb
mov
jle
inc
mov
movsb
insb
mov
gs
out
cmp
inc
inc
lcall
call
les
out
inc
mov
movsb
aad
test
mov
pop
adc
sbb
adc
rolb
sub
cmc
test
mov
std
pop
mov
daa
pop
cld
cmp
xchg
sub
daa
jno
fldt
mov
ficoms
push
push
or
test
add
sbb
loopne
push
push
jne
stos
mov
in
xchg
mov
shlb
push
sub
addr16
dec
add
inc
mov
in
jae
sbb
mov
lea
iret
aaa
insb
int
and
cmp
mov
jae
cmpsb
popa
mov
fldl
inc
jg
lods
xor
xor
and
mov
pop
sbb
push
sbb
mov
inc
xor
jmp
js
stos
stos
movsl
leave
ret
test
sub
mov
sub
mulb
cmp
sahf
icebp
or
ss
sub
pop
inc
test
dec
repnz
je
adc
cmpsb
loopne
les
lahf
mov
fnstsw
mov
mov
shll
jmp
push
movsl
mov
sbb
stos
pop
arpl
xchg
clc
popa
pop
es
shlb
scas
jne
pop
and
leave
mov
cli
test
dec
cmpsb
mov
xor
add
add
dec
adc
dec
loope
xchg
cmp
pop
lds
xor
dec
sbb
movsl
mov
push
mov
sbb
in
xor
fsts
out
dec
popa
xor
shrl
xchg
mov
or
pusha
repz
andb
test
mov
fstpt
adc
cmp
dec
xor
int
xchg
mov
outsl
lea
pop
pop
fisttpl
or
adc
dec
jmp
rcll
loope
push
push
cmp
sub
jp
push
lock
or
ja
inc
jbe
stos
xor
push
pop
lret
jnp
and
cs
lcall
clc
or
sub
mov
and
dec
incb
fmull
fsubr
nop
dec
std
dec
adc
arpl
mov
xchg
ljmp
sub
pushf
ret
sti
loope
and
push
mov
lahf
adc
hlt
in
add
loopne
in
out
call
js
and
jecxz
aad
lock
sti
inc
es
push
mov
cmpsb
xchg
xchg
enter
sbb
and
jbe
inc
fcomip
popa
sub
in
inc
jnp
pop
jbe
mov
push
sub
lcall
mov
fwait
push
xchg
sbb
hlt
or
adc
mov
test
push
loopne
lea
and
xchg
stos
test
mov
adc
test
mov
push
inc
enter
add
sub
lahf
mov
ja
paddq
mov
test
push
decl
std
pusha
shl
adc
movb
jnp
add
mov
adc
popf
int3
ror
in
mov
pop
pusha
out
jbe
sbb
xor
jecxz
sub
inc
adc
mov
cmpsb
push
inc
out
popf
jle
or
das
out
xlat
add
inc
into
inc
cld
jge
pop
jge
mov
add
ficomps
mov
xchg
movsl
les
clc
in
xchg
pop
or
hlt
pop
int3
lcall
pop
ja
pushf
int
mov
or
inc
inc
clc
cmp
inc
dec
xchg
into
cmp
lock
les
pop
and
lcall
test
mov
cmc
in
inc
sbb
and
dec
aam
out
sub
ret
fnsave
lods
mov
aaa
int
cmpsb
inc
fs
rclb
xorb
outsb
or
adc
inc
mov
arpl
xchg
in
sbb
data16
loopne
sti
sbb
add
fcmovbe
dec
repnz
je
cld
out
lret
jl
lret
push
imul
decl
or
outsb
dec
lahf
in
add
test
jg
stos
in
jge
insl
outsb
cmp
push
add
aam
das
push
cmp
mov
xchg
pop
lods
les
popf
push
ss
inc
rorb
mov
xor
ljmp
push
inc
cmpsl
adc
insl
xchg
cmp
jge
pop
into
dec
inc
lds
out
movsb
popa
jle
jae
sub
xchg
mov
ljmp
cmpsb
hlt
pop
fbld
mov
movhps
loop
xor
cmp
cmp
outsb
pop
mov
mov
add
scas
push
sbb
or
adc
dec
arpl
jbe
negl
cs
into
pop
pusha
add
inc
daa
sub
shrb
push
or
test
sarb
xor
sub
int3
xchg
pop
leave
sub
push
or
mov
fstp
mov
das
xor
cmp
pop
sub
jp
mov
add
fbld
mov
icebp
inc
movsb
and
sbb
sbb
lret
jnp
cmpsb
out
aad
cmp
ja
cmpsb
dec
repz
jp
enter
jp
stos
cltd
pop
mov
les
mov
xchg
or
jle
popa
test
jmp
es
out
lock
pop
dec
add
int3
add
dec
bound
pop
scas
sub
mov
adc
inc
loop
dec
lds
push
lods
mov
or
adc
sub
or
shlb
out
out
ja
movsb
lock
lahf
imul
pop
add
jp
addl
in
inc
arpl
pop
mov
jnp
lret
push
inc
dec
scas
adc
sub
loop
nop
je
popf
in
insl
mov
sti
repz
dec
jmp
pushf
orb
dec
sti
xchg
push
aas
out
push
pop
adc
das
cs
fs
fcomps
daa
test
in
xchg
jb
out
mov
loope
lds
inc
imul
sub
xor
ljmp
cmpl
or
ds
fs
mov
push
add
xor
imul
dec
adcb
mov
out
xchg
add
test
hlt
mov
aam
fwait
mov
xor
xor
xchg
jl
call
lods
addr16
push
cmp
inc
stos
mov
dec
mov
xchg
inc
mov
push
xchg
inc
and
fisubl
add
push
push
cmpsl
imul
push
push
sti
in
or
inc
enter
and
push
subl
lcall
jns
negb
dec
dec
std
mov
push
movsl
fbld
sbb
and
xor
inc
data16
jb
push
xchg
and
in
sbb
adc
data16
pop
mov
sub
lods
ret
sti
jne
lcall
and
pop
pushf
outsb
jg
mov
gs
mov
add
cmpsb
pop
inc
jae
pop
add
movsb
xorl
dec
lret
addr16
in
xchg
or
adc
stos
push
and
mov
or
cltd
xchg
pushf
std
fcomps
ficompl
sbb
jmp
mov
dec
or
mov
mov
mov
lahf
std
repz
pop
jp
cmp
cmpsl
xchg
aam
sbb
mov
test
in
cli
ss
sub
mov
push
rcrb
push
repnz
dec
out
shrl
inc
push
shr
int3
sbb
xor
xor
cmp
mov
cltd
dec
mov
sbb
xor
ljmp
dec
movsb
fwait
mov
insb
test
dec
movsb
test
sub
mov
mov
hlt
pop
arpl
xchg
out
jb
cltd
movsl
nop
pop
mov
or
xchg
mov
adc
push
ljmp
or
and
dec
xor
cltd
shrb
mov
pop
lds
clc
mov
call
dec
push
adc
test
int
js
aaa
rcll
xchg
inc
test
fcoms
sub
push
xor
rcrb
scas
xchg
addr16
dec
test
pop
cmc
arpl
or
jns
push
pop
pop
in
push
sub
or
loope
repnz
jg
and
rolb
and
dec
out
lods
leave
out
xor
nop
shlb
pop
adc
jb
outsl
add
cmp
mov
shll
aaa
push
ljmp
lcall
call
pop
les
mov
jo
and
and
sub
mov
lds
or
aaa
mov
inc
sbb
xor
jp
mov
adc
pop
cmp
cli
aam
enter
xchg
mov
out
jl
rcll
push
mov
je
cltd
xor
cmp
xlat
push
decb
jne
out
pop
fs
ja
add
push
jmp
mov
mov
push
bound
test
sbb
jno
sarb
dec
ss
icebp
fadds
cld
inc
movl
nop
movsb
and
in
pop
icebp
mov
imul
inc
push
or
pop
aam
pop
inc
sbb
ficomps
mov
jmp
es
mov
out
dec
outsl
sarb
mov
xor
cmpsb
jmp
in
mov
jg
xchg
jno
mov
mov
cs
push
out
ret
mov
and
push
notl
cmp
adc
xchg
xor
bound
push
push
mov
mov
inc
int3
sbb
in
sub
aam
pusha
arpl
push
push
mov
lods
ljmp
outsl
xchg
enter
cmpsb
hlt
mov
pusha
popf
in
push
movsl
pop
inc
push
fs
and
mov
lods
mov
pop
loopne
enter
adc
js
pause
inc
push
mov
jb
popa
test
clc
ds
pop
pop
sbb
push
sub
cmp
or
ss
in
aas
pop
push
and
fists
pusha
out
loope
clc
or
cmp
int
cmp
sbb
add
notl
cwtl
imul
in
div
jecxz
pop
or
inc
mov
jne
es
adc
mov
dec
adc
mov
lahf
pop
subl
sbb
fsubs
jne
ret
push
lret
mov
orl
xor
jmp
lock
loopne
xor
mov
cld
insl
loop
xor
xchg
enter
mov
cmp
fistps
loop
xchg
int3
leave
xchg
aaa
in
je
and
adc
imul
loop
pop
leave
test
cmp
jbe
imul
mov
and
ds
or
add
inc
arpl
cmp
inc
dec
push
data16
rol
xor
push
pop
fwait
cmp
ret
in
push
sub
jb
pop
fs
mov
iret
jae
or
push
push
aaa
rcrb
jo
mov
mov
inc
add
push
xor
and
mov
jle
imul
cmp
mov
and
sbb
mov
fstps
ljmp
adc
jae
jae
cmpsb
xchg
xor
dec
sbb
das
mov
jae
mov
sbb
and
ljmp
mov
xor
adc
push
scas
cwtl
and
push
mov
rcrl
loop
jo
int3
mov
push
scas
jmp
mov
ret
in
lock
mov
jbe
test
push
and
std
xchg
scas
lahf
aaa
cmp
adc
gs
mulb
lahf
addr16
fxch
imul
stos
clc
and
jae
push
rcrl
std
mov
push
jmp
lock
mov
ret
adc
in
and
mulb
inc
lods
in
sbb
andl
xchg
fs
mov
push
push
push
add
push
xor
mov
movsb
dec
int3
ja
test
lret
mov
cmp
xchg
lods
movsl
daa
nop
divb
arpl
dec
sub
jp
andb
out
xchg
test
stos
xlat
pop
pop
mov
pop
pop
shr
mov
inc
push
and
sbb
push
jl
subl
or
mov
test
adc
aaa
pop
fstpl
mov
lahf
mov
cmpsl
xchg
inc
adc
insb
mov
in
popa
mov
xor
iret
xor
jg
mul
sbb
outsl
sub
imul
jp
sbb
jne
iret
xchg
sbb
test
sarb
adcb
ds
sbb
inc
sub
cmp
in
imull
and
mov
and
jae
and
aam
pop
inc
mov
fwait
push
std
sbb
dec
ret
sub
rorb
adc
mov
sbb
adc
mov
xor
xor
adc
xlat
loopne
ret
daa
fistpl
aaa
inc
lds
lock
es
clc
ficompl
sbb
mov
sbb
shll
mov
shl
pop
jp
pushf
push
mov
cmp
mov
jae
pop
mov
out
div
pmaxsw
mov
mov
mov
sub
sub
inc
std
or
daa
and
iret
test
cmp
cld
cmpsl
std
popf
dec
inc
roll
aaa
mull
adcb
add
sahf
es
in
push
sub
dec
mov
mov
xor
vmovsldup
xchg
mul
nop
dec
mov
or
movsb
mov
and
adc
in
ljmp
pop
add
fs
cmpsb
mov
lret
ret
and
jns
push
addr16
movsl
test
dec
mov
mov
movsl
imul
outsb
mov
je
mov
jb
shl
mov
je
push
ljmp
push
mov
inc
shlb
push
push
xor
and
pusha
pop
mov
pop
cwtl
shlb
push
or
inc
into
push
jmp
neg
adc
sbb
xchg
mov
ret
jbe
pop
test
shlb
test
fisubl
ret
movsb
orl
dec
inc
shll
xchg
in
roll
add
sahf
mov
mov
sbb
incb
pop
inc
or
mov
call
aad
cltd
jp
aam
mov
push
cmp
icebp
cmp
mov
add
mov
test
sub
xchg
out
bound
push
mov
movsb
test
and
jb
int
jp
lock
mov
jno
sub
or
scas
pop
mov
xchg
scas
jmp
out
jge
imul
pop
pop
enter
pop
or
mov
jmp
add
mov
outsl
call
andl
adc
or
sub
xchg
adcl
enter
iret
adc
add
adc
jo
lods
repnz
xor
mov
or
out
aaa
les
insb
stos
mov
rcl
in
leave
scas
addl
sbb
imulb
push
jnp
and
jb
test
insl
sarl
movsl
flds
sub
lds
push
popa
push
xchg
xchg
jl
scas
test
cmp
aam
divb
stc
cli
push
std
inc
mov
scas
outsl
shrb
insb
test
jns
mov
or
inc
int3
or
loopne
jne
cmpsb
ja
mov
ucomiss
adc
popa
dec
and
mov
pop
jbe
enter
in
mov
pop
es
mov
icebp
shrb
ret
adc
cmpsl
jne
sub
push
lea
sub
inc
das
sbb
xor
in
add
push
ja
mov
pop
mov
sarl
pop
push
and
xchg
jp
lret
xorb
mov
xor
push
rol
mov
pusha
cmc
adc
in
nop
inc
lcall
stc
mov
jge
in
pop
mov
xchg
subb
cmpsb
rolb
in
stos
or
into
push
addr16
test
sub
aad
sub
sbbl
xor
adc
cmpsl
clc
jns
fisubrl
sub
add
movsl
insb
jae
mov
pop
jo
ror
pop
sahf
mov
int3
mov
push
nop
xor
cmpsl
jl
ret
inc
pop
add
pusha
add
call
cld
es
mov
pop
lret
pushf
push
loop
add
mov
inc
sahf
bound
add
pop
add
icebp
mov
jb
inc
cmpsb
mov
push
orps
jne
aas
jb
push
mov
adc
in
lahf
pusha
sbb
pop
arpl
dec
xchg
and
xchg
gs
mov
mov
sub
push
sahf
cmpsl
ljmp
fmul
pop
shlb
out
jg
sahf
jecxz
mov
mov
mov
adc
loop
pop
das
push
dec
leave
cmp
scas
mov
test
mov
xchg
out
sbb
iret
call
or
loope
pop
out
aas
not
push
stc
out
xor
adcl
jne
push
xchg
jg
jo
jno
xor
xchg
mov
test
mov
xor
cmp
adc
js
mov
fwait
dec
fdivrs
shrl
sti
jnp
movsb
sub
lds
sub
cli
cmpsb
aad
fdivrs
loopne
nop
lods
mov
mov
daa
cli
mov
sbb
mov
xchg
add
lahf
movsb
push
loope
movsb
inc
rcr
xor
xor
sahf
mov
jb
repnz
mov
xchg
pop
popl
sub
sub
loopne
mov
mov
and
pop
adc
test
jp
adc
mov
loopne
fildll
sbb
movsb
lds
lods
pop
sbb
inc
pop
add
or
scas
xchg
fwait
mov
sub
push
ret
imul
lock
inc
mov
pop
xor
clc
scas
mov
lret
mov
pop
sti
je
push
les
cmp
jo
xchg
add
mov
fs
xor
xchg
mov
mov
or
cmc
pushf
push
sub
test
sub
cmp
dec
xor
xor
daa
adc
mov
add
mov
mov
orb
enter
jge
cwtl
ja
lret
xor
add
jnp
pop
xchg
sarl
fwait
add
jae
leave
cli
mov
pop
test
or
push
ja
or
push
jnp
xchg
lods
add
loope
shl
jo
adc
lods
lods
adc
pop
sar
stos
sbb
dec
addb
mov
outsl
icebp
cli
xor
dec
dec
jbe
movsb
add
pop
data16
xchg
lret
mov
and
aaa
fcompl
cld
push
mov
cmp
lea
aam
or
cli
cltd
push
cmp
sbb
lcall
loopne
cmp
sbb
js
mov
fcomps
push
mov
fdivrs
inc
in
jl
sbb
push
int
jnp
push
test
icebp
stc
repz
push
jl
imul
lock
xchg
dec
mov
ffree
push
xor
nop
or
lock
and
sahf
fdivs
fcmovnbe
retw
scas
xor
leave
add
jns
cmp
cmp
ss
pusha
call
cmpsb
inc
lahf
or
lods
or
dec
call
lea
mov
sub
rcrl
xor
lea
mov
enter
int3
and
jge
inc
and
and
aas
aas
test
mov
pusha
cli
fdivrs
je
push
push
pop
and
mov
cmc
push
sub
aas
pop
in
xchg
rcrl
repz
shl
jnp
jle
leave
or
sub
out
std
or
pop
mov
adc
mov
and
negb
xor
cmp
push
xchg
xchg
loop
mov
and
in
dec
sbbl
in
iret
lahf
negl
fstpl
hlt
jbe
jno
cwtl
pop
jg
inc
jp
mov
mov
enter
stos
xchg
sub
lsl
mov
and
cmp
sbb
and
mov
roll
repz
xchg
add
fsubl
popf
or
push
mov
cmovnp
fs
lock
xor
jg
sub
cmp
lods
addr16
imul
and
mov
cli
push
pop
mov
push
lahf
test
pop
cmpsb
mov
stos
xchg
inc
fwait
xchg
dec
pop
mov
jg,pn
inc
jno
sti
movsl
mov
mov
and
loop
aad
dec
pop
repz
insb
cmp
fs
mov
aam
lret
or
rcrl
jp
xchg
negl
lret
sbb
inc
pop
into
pop
in
test
cld
mov
xor
push
rcrl
popf
fsubrl
fucomp
andb
xchg
inc
fs
cli
jnp
xchg
xchg
jle
stos
push
lret
lods
cmp
push
cwtl
inc
cmp
cmp
fildl
inc
lea
push
push
cmc
cli
call
push
add
and
jp
les
iret
mov
popa
stos
cmp
dec
jecxz
cmp
and
or
push
daa
ljmp
cmp
mov
into
imul
mov
ss
mov
xchg
push
lret
mov
lods
and
or
in
mov
cwtl
push
or
aad
ret
dec
mov
inc
inc
push
or
sti
movsl
pusha
aad
scas
pop
pop
add
mov
insl
push
sub
jecxz
js
and
subl
lahf
mov
adc
sbb
adc
dec
or
rolb
inc
ror
movsl
js
cmc
lods
rcrb
inc
cmpsb
fstpl
pop
cmp
add
or
cmp
mov
xor
pusha
sbb
push
jno
pop
pop
rep
adc
into
xchg
pop
aam
std
fsubs
mov
inc
pop
push
daa
std
test
scas
mov
add
pop
loop
jno
xlat
pushf
dec
fisttpll
sbb
es
ret
mov
into
lea
xchg
cs
xor
mov
mov
neg
inc
cmpsl
sbb
popa
push
pop
jecxz
mov
push
pcmpgtw
lcall
lock
ss
aaa
cmc
cmp
cmp
lret
cmp
add
loop
sbb
jnp
insb
pop
ds
xchg
lods
imul
hlt
fnsave
sbbb
xchg
in
maxps
push
sbb
decb
shlb
inc
scas
and
mov
rcl
sbb
dec
scas
in
ljmp
cmpsb
shll
xor
addr16
mov
inc
int3
jo
test
sbb
jnp,pt
mov
data16
cltd
sbb
loop
or
sub
mov
xor
loopne
jae
adc
les
sahf
mov
notl
or
jecxz
test
mov
sub
aaa
fistps
pop
adc
xchg
jecxz
dec
int3
outsl
movsb
adc
arpl
ret
xlat
and
cmpsb
push
mov
movsl
sbb
mov
je
in
xor
mov
into
pop
cltd
push
pop
xorb
mov
cmp
fiadds
mov
add
inc
ljmp
dec
xor
ja
insb
mov
cwtl
pop
lods
imull
and
sarl
loopne
lret
jp
sub
sub
jo
adc
xchg
mov
xchg
aad
jmp
xorb
inc
xchg
xorl
into
xchg
les
sbb
lcall
xchg
cmpsb
sbb
sti
arpl
fucomp
inc
js
jne
movsl
jns
xor
not
cmp
sti
sub
cltd
js
ficoml
ss
lret
pop
xorb
jns
scas
or
sahf
pop
leave
jo
xor
sbb
incl
lods
in
call
mov
sub
lahf
aaa
push
mov
inc
push
pop
pop
fsubl
das
fs
andl
ljmp
or
mov
in
cmp
hlt
adc
push
testb
imul
xchg
sub
mov
xchg
iret
test
cmc
rcll
pop
scas
pop
jnp
rcll
loopne
xor
push
inc
push
pop
push
rcl
adc
sub
mov
pop
lods
push
fsubl
jne
add
pusha
addr16
imul
ret
mov
mov
adc
leave
xchg
dec
and
sub
cs
movsb
andl
out
call
sub
std
in
pusha
push
repnz
pop
std
aaa
mov
loopne
out
sbb
arpl
movsl
jno
adc
je
idiv
stos
xchg
imul
adc
jo
pop
add
dec
mov
adc
mov
imul
jge
aam
cmpsl
sub
cmc
ss
inc
iret
stos
push
clc
insb
xchg
std
jle
jmp
xor
in
insl
pop
sbb
popf
das
adc
sub
push
fldl
pop
mov
or
pavgb
and
adc
cmpsb
adc
mov
adc
push
pop
test
in
andl
jb
jge
jnp
mov
cld
xor
notl
in
push
xchg
add
test
out
hlt
movsb
inc
push
add
inc
repnz
jp
mov
cmp
movsb
sbb
shlb
mov
std
test
stc
jmp
ret
cli
fdivrl
jg
cmp
int3
cmp
inc
icebp
pushf
or
lea
int3
aam
push
push
jae
in
xor
or
push
add
mov
fldenv
inc
fistpll
xor
xchg
cmp
mov
add
js
lock
xchg
jo
xchg
or
cwtl
sub
pop
jge
les
jmp
sbb
loop
add
lods
icebp
fmul
and
jnp
ljmp
jne
push
and
popa
int
xor
mov
fwait
cli
xor
arpl
and
sbb
fldt
aaa
dec
sti
popf
leave
add
ss
mov
sub
push
cmpsl
mov
cmp
xor
pop
pop
fcomi
data16
xchg
jnp
or
ret
cmp
dec
call
test
fistpll
mov
cld
leave
stos
push
jl
enter
sub
jnp
ljmp
push
mov
sub
xlat
cs
sarl
push
loope
popf
inc
push
xchg
jns
fisubs
in
roll
mov
aam
jl
jle
jbe
lods
or
push
sub
add
scas
mov
mov
cmpsl
lds
or
scas
xchg
iret
xlat
push
and
cld
test
inc
push
mov
mov
fcomps
mov
icebp
aam
or
jl
push
jg
popf
dec
sahf
sub
xor
stos
dec
push
scas
adc
in
fsub
cmpsb
push
sub
sub
ss
scas
pop
inc
or
imul
xchg
mov
dec
and
and
mov
mov
xchg
test
sub
adc
and
aad
lret
xor
bnd
cmp
adc
or
pop
sub
jmp
dec
clc
mov
xor
push
frstor
xchg
imul
and
dec
cli
inc
shrl
dec
pop
repnz
ret
mov
xor
test
out
jl
and
jns
pop
sub
movsb
lret
sub
testb
sbb
dec
xchg
fidivrs
sti
or
push
aad
or
roll
and
addl
shrb
cld
and
popf
or
pop
push
bound
or
dec
int3
push
stc
shl
pop
xor
clc
mov
mov
jecxz
cld
mov
ljmp
lock
ja
fnstcw
mov
dec
pop
or
aad
out
adc
or
cmp
xchg
inc
stc
and
cmpsb
or
outsb
cmc
test
push
nop
imulb
dec
stos
movsl
jno
sbb
adc
pop
adc
inc
repz
mov
mov
or
inc
jp
and
out
jae
cltd
jne
mov
rol
repnz
bound
mov
lahf
shrl
test
in
jbe
xchg
dec
jbe
mov
nop
out
add
mov
sub
dec
fdivrs
push
sub
add
mov
mov
loope
jne
jbe
daa
or
mov
mov
push
imul
and
mov
sbb
stos
cmp
lods
cltd
inc
adc
mov
lret
enter
mov
out
dec
fsubl
fs
jne
cmp
lcall
xorb
jne
and
fmulp
jne
inc
pop
popf
out
jns
stc
sbb
sahf
jge
sbb
jo
popf
lidtl
or
push
paddsw
lret
jb
pushf
mov
ljmp
jmp
xor
scas
or
xchg
sti
out
mov
leave
loope
lods
jle
add
outsl
ds
push
mov
testl
hlt
sbb
test
data16
std
adc
mov
lret
enter
sub
mov
inc
popf
mov
fsubl
aas
dec
sub
in
adcb
test
push
sahf
je
ret
shl
fs
ret
mov
fistps
lret
sbb
pop
icebp
jecxz
bound
cmpsl
ds
testl
pop
push
fwait
adcl
dec
test
insl
cmp
pslld
idiv
sti
out
pop
enter
inc
jmp
shll
stc
lahf
ret
pop
mov
popf
xchg
shl
and
mov
out
out
mov
xchg
mov
je
jns
out
jae
loop
xchg
iret
into
sarl
push
das
insl
or
mov
xchg
fsts
pop
xor
popf
dec
loopne
and
fcomps
daa
into
and
stos
sti
divb
xor
lea
inc
sub
mov
lods
scas
movb
pop
jp
ds
test
xchg
ja
fnsave
test
push
jge
or
decl
lret
loop
into
ret
mov
sbbl
fcoms
fldenv
lcall
mov
mov
mov
outsb
xor
sub
lret
loop
and
or
arpl
xchg
jnp
js
jnp
dec
fisttps
fwait
jecxz
mov
lods
outsb
gs
test
sti
xchg
in
mov
lea
fidivs
insb
mov
test
push
lcall
loopne
shl
dec
cmp
lock
lret
lock
xchg
popf
icebp
lods
ljmp
push
test
js
ret
add
sbb
adc
mov
mov
and
in
mov
call
out
push
loop
popa
xor
jmp
lock
mulb
mov
push
cltd
inc
sarl
push
inc
fistl
sub
jge
push
fildll
sbb
add
or
fcomp
repnz
rcr
sbb
nop
mov
shrl
pushf
rcrl
gs
fistpl
add
push
icebp
aas
and
pop
or
rorb
xchg
mov
ss
dec
mov
adcl
in
ret
cmp
stos
xchg
mov
mov
and
push
subb
pop
addb
das
adc
jmp
mov
cld
scas
cmp
scas
loop
mov
mov
pop
sbb
jnp
fsub
jno
push
xchg
jbe
jnp
push
push
dec
jl
imul
dec
iret
iret
inc
gs
mov
mov
jae
testl
dec
movsb
lds
dec
test
mov
pusha
outsb
movsl
movsl
jge
nop
or
sbb
lods
insb
dec
ja
call
ljmp
dec
dec
enter
bnd
dec
xor
sbb
imul
pusha
mov
mov
xlat
lods
out
jnp
fcompl
mov
repz
jno
mov
inc
push
dec
sbb
xor
scas
arpl
pop
push
shlb
test
add
inc
pop
shrl
jmp
nop
mov
outsb
es
scas
pushf
push
clc
pop
adc
pop
rcl
sbb
xor
ficoml
repnz
mov
js
cltd
add
mov
dec
xor
and
ret
pop
jo
cmp
popf
popf
mov
pop
lret
jge
negb
imull
adc
add
popf
adc
int
cmp
inc
xlat
and
mov
xorb
sahf
xchg
int
out
inc
xor
xchg
enter
mov
add
loopne
ljmp
rclb
ficoms
jno
mov
orl
push
inc
or
mov
xchg
daa
inc
ds
mov
andb
imulb
test
popf
push
pop
inc
inc
cmp
mov
std
ret
jnp
scas
xlat
movsb
adc
leave
imul
lahf
adc
pop
popa
lahf
mov
ret
nop
std
mulb
push
pop
decb
pushf
push
inc
and
in
adc
mov
mov
mov
xor
add
imul
xchg
lahf
loopne
xchg
inc
adc
fcmovnu
aaa
jle
in
mov
fnstsw
andb
push
or
fsubrl
enter
addb
pop
xor
xor
xchg
jae
cmpsb
gs
push
mov
or
jnp
mov
popa
imul
pop
mov
sub
or
add
icebp
add
test
mull
dec
xchg
icebp
es
lea
xor
sub
test
fisubrl
xor
lret
mov
push
mov
and
inc
imul
inc
int3
loop
loop
daa
inc
cs
scas
hlt
xchg
pop
addr16
les
aas
xor
jl
enter
lahf
stos
ss
ror
and
repz
in
outsb
cmp
fldenv
add
dec
arpl
loopne
je
push
aaa
cli
stos
dec
int
and
out
fdivrl
lods
or
pop
fidivs
cmpsb
cmp
sub
fstpl
or
pop
xorl
xchg
aad
jmp
sarl
in
add
xchg
ret
inc
dec
arpl
cli
add
cmp
inc
sti
cmp
js
xor
in
scas
xchg
jecxz
sbb
lods
scas
cmc
push
cmp
sub
xchg
adcl
jns
push
jle
cmpsb
cmp
cmpb
mov
jg
pop
sti
int
lret
cmp
jns
pop
jmp
je
ja
das
mov
out
cmp
xchg
sbb
ja
xor
movsl
jae
sbbb
stc
movups
in
mov
pop
mov
jmp
pushf
rcll
mov
xchg
mov
mov
dec
xlat
sbb
pusha
push
or
in
sub
or
pop
inc
je
fcompl
iret
aad
or
push
int3
mov
add
cmpsb
imul
mov
call
mov
cmp
mov
in
pop
add
add
pushf
pushf
shlb
scas
arpl
xchg
iret
pop
xchg
push
pop
fnstsw
lds
fwait
xchg
dec
lret
outsb
stos
mov
push
adc
mov
ficoml
mov
jne
xor
jecxz
test
popf
call
xor
mov
jmp
xchg
mov
in
fdivr
inc
out
cmpsl
rorl
in
sbb
imul
mov
push
push
loope
dec
cld
aad
push
lock
cmp
jb
inc
cmpsb
mov
stc
inc
lret
orl
outsb
sub
ret
iret
iret
test
xor
xchg
flds
data16
mov
push
enter
fbstp
cmp
sbb
stos
push
mov
in
out
cmp
ds
movsl
int3
and
push
cmp
stos
jne
std
ss
xchg
pop
arpl
mov
cmp
lcall
sahf
mov
mulb
push
pop
pop
stc
dec
popa
lea
mov
pop
mov
cs
and
jbe
dec
xor
pop
data16
and
ret
jle
rol
xchg
sub
dec
in
bound
push
push
push
inc
gs
loopne
mov
sub
enter
mov
inc
popa
test
adc
bound
arpl
pop
cmp
lods
xor
cmp
rclb
jns
sbb
das
scas
pusha
imul
nop
mov
lahf
jo
shll
cs
mov
shlb
or
call
mov
addb
mov
mov
cmp
mov
adc
repnz
jo
jno
pop
popf
add
movsl
icebp
repz
sub
pop
fcomp
mov
into
inc
jne
int3
cmp
xchg
cs
data16
gs
es
xlat
mov
sub
sti
cmp
addr16
mov
mov
cmp
xor
jne
pop
fsubrs
and
lea
jno
call
and
mov
add
inc
movsl
lods
jp
jne
fs
fldenv
jge
fdivrl
test
cmc
test
xrelease
jecxz
lret
stc
mov
pusha
loop
push
out
daa
jmp
adcl
xchg
fcoms
ljmp
insb
cmp
shlb
out
sbb
push
push
popa
inc
xorl
arpl
outsb
outsl
cmpsb
xchg
mulb
inc
mov
in
iret
lock
cmp
dec
rolb
mov
repnz
rcll
mov
cmpsb
cmpsl
jle
mov
add
jb
or
lcall
jmp
in
movsl
sub
dec
dec
pop
push
cmpsl
ljmp
mov
sbb
push
lret
std
xchg
mov
or
or
push
mov
pop
ja
into
add
or
loop
lret
stos
sbb
add
aam
push
test
mov
push
jne
jl
inc
dec
fwait
mov
test
jns
das
mov
xlat
enter
imul
nop
clc
xchg
sbb
or
out
jne
or
mov
jae
dec
roll
mov
inc
and
iret
or
push
xor
push
xchg
imul
lahf
repnz
inc
push
jnp
xor
xchg
pop
push
repnz
xchg
mov
dec
call
inc
mov
mov
stc
jb
aam
xchg
fwait
and
jle
loopne
push
sbb
int
shlb
xchg
shlb
in
cmpsl
adc
movsb
lea
push
pushl
push
adc
and
or
xor
jmp
push
push
fisttpll
push
jmp
sahf
test
lret
adc
pushl
sub
mov
sub
fwait
jnp
push
jbe
movsl
mov
mov
add
adcl
add
push
loopne
sbb
sbb
ffree
and
and
int3
into
pop
jl
dec
sub
into
clc
inc
or
push
std
adc
or
jns
insb
aaa
sub
cmp
gs
cmp
ficoml
dec
sub
roll
ret
popa
fstp
mov
dec
xor
xchg
aaa
cs
clc
ljmp
and
pop
adc
xchg
pop
mov
cli
push
aaa
push
lods
jle
shll
add
cmp
push
jmp
push
daa
sub
shlb
xchg
jb
pusha
ror
xchg
adc
inc
data16
cli
mov
inc
add
mov
imul
sub
cmp
mov
aaa
cmpsb
in
cmc
cmp
or
insl
ja
and
sub
xor
mov
orl
push
sbb
outsb
rol
jnp
jge
ror
pop
sahf
xchg
cmp
jecxz
inc
hlt
aas
out
add
repnz
in
sbb
push
icebp
aam
nop
xlat
test
pusha
add
jl
sub
add
cmc
mov
sti
loope
aad
icebp
dec
ficoml
int
sbb
in
fwait
loopne
stc
std
sub
test
aam
mov
rorl
test
push
dec
andb
xchg
push
dec
rcrl
lcall
in
repz
xchg
imul
xlat
or
dec
lock
mov
jg
test
dec
mov
nop
push
faddl
jns
and
dec
pop
pop
in
mov
pop
imulb
mov
inc
jp
push
aam
jo
movsb
es
xor
hlt
div
push
out
cld
and
cmc
aam
mov
mov
xor
addr16
in
dec
cli
cmpsb
test
imul
and
mov
dec
pop
push
sbb
scas
gs
ja
push
xchg
movsb
cmc
push
outsl
xchg
enter
and
jns
and
nop
test
xchg
cmpsb
in
pop
jnp
xor
sahf
stc
mov
cld
sub
push
dec
sub
repnz
fcmovnb
cmp
shrb
daa
pop
sub
and
xchg
lcall
mov
in
mov
push
movsb
je
test
mov
fcmovbe
loop
mov
push
push
jnp
mov
add
insb
push
addl
lret
pop
sti
fisttpll
or
rcr
out
adc
or
imul
shrb
sahf
push
fmuls
shrl
inc
add
fldl
adc
std
dec
fsts
adc
xchg
cli
dec
push
mov
in
pop
mov
popa
dec
das
std
jb
in
cmp
fistpl
sub
nop
pop
add
mov
int3
rcll
mov
lret
jle
adc
pop
cli
gs
mov
loope
mov
xchg
jmp
mov
jmp
mov
jne
imul
mov
push
mov
fs
or
and
movsl
subb
mov
sbb
movsb
and
cmc
mov
pop
xchg
adc
shl
push
imul
pop
andl
aam
xchg
ret
mov
mov
stc
mov
aad
xorb
arpl
shrb
and
ss
sbb
sbb
imul
push
or
pusha
int
aam
bound
sarl
inc
mov
cld
aad
in
jns
xchg
fwait
jno
add
sub
mov
lret
sbb
pop
or
insb
cld
insl
jle
pop
icebp
lret
ljmp
push
sub
js
adc
jecxz
cmp
daa
push
adc
and
ret
popf
xor
cmp
mov
aad
or
cmc
fsubl
xchg
jp
and
fwait
and
ret
add
sbb
in
popa
pop
push
mov
hlt
sbb
fld
mov
or
in
xor
dec
loope
push
sub
dec
loopne
push
or
movsb
lods
cmc
add
iret
test
mov
push
pop
jnp
mov
out
mov
push
inc
inc
adc
xchg
pop
or
push
xchg
in
in
sahf
ds
jg
std
pop
daa
lock
sub
mov
mov
sar
xchg
or
dec
negl
jno
cmp
mov
jecxz
out
and
leave
lahf
push
inc
mov
xor
fnstenv
and
out
cmp
std
dec
sub
stc
leave
int3
jb
pop
addr16
cmp
js
pop
test
mov
adc
mov
pop
xchg
dec
push
mov
xchg
popa
clc
jl
mov
loope
stc
add
jns
dec
push
inc
and
pop
sbb
adc
je
test
mov
sub
in
loop
mov
jge
adc
pop
sbb
test
sbb
insl
aaa
sbb
mov
push
push
lahf
pop
adc
cmc
or
sarl
mov
aad
sahf
cmp
in
aas
push
adc
and
daa
cmp
rep
hlt
push
icebp
add
daa
push
xchg
push
jae
add
imul
mov
inc
roll
js
dec
push
push
push
out
xchg
mov
pusha
pop
lea
add
iret
mov
ret
push
mov
adc
addl
inc
mov
hlt
lds
fisubs
loopne
cltd
sahf
pop
mov
pop
mov
repz
js
pop
sub
imul
ret
fs
out
and
sub
xchg
push
xchg
lods
cltd
cltd
mov
mov
pop
jae
shl
movsb
out
ss
fimuls
xor
mov
jb
loope
add
jno
pop
int
jg
cmp
adc
mov
pop
nop
push
cmpsb
jo
out
imul
andb
xchg
je
subl
push
roll
lret
dec
adc
std
movsb
xchg
outsb
out
cmp
sti
ret
roll
ficoml
and
mov
xor
lahf
stc
mov
adc
xchg
add
jno
mov
mov
and
repz
mov
mov
xor
aad
dec
std
orb
divl
and
scas
push
jbe
lea
jo
sbb
dec
xchg
lret
shlb
loopne
xchg
cmpsb
push
sub
adc
inc
mov
add
mov
bound
fidivs
cmpsb
lock
in
and
jl
hlt
int
shrl
dec
rcr
ret
sub
lret
iret
gs
das
inc
test
jns
xchg
test
in
jno
sbb
xorb
sub
out
add
hlt
aaa
mov
adc
je
sub
leave
incl
ficoml
mov
sbb
out
lret
cmp
hlt
mov
mov
pop
cmc
cmpsb
nop
ljmp
mov
pop
test
dec
ss
pop
add
daa
inc
inc
je
cmp
dec
sahf
mov
mov
xchg
in
mov
loope
pushf
sub
stc
push
das
rcll
sbb
ret
add
dec
das
mov
ja
push
jnp
insl
mov
push
sub
movsb
cmp
mov
lret
pop
dec
and
out
inc
bound
cs
pop
pushf
sarb
mov
push
aaa
lret
pusha
pop
ds
out
fidivl
xchg
mov
mov
fwait
mov
push
cmp
sub
ljmp
dec
daa
adc
gs
mov
sbb
or
push
jnp
mov
pop
and
les
cli
and
in
mov
dec
mov
dec
jmp
or
aad
scas
adc
push
js
dec
pop
xchg
add
ds
clc
mov
mov
cli
jmp
fistpll
mov
test
mov
mov
fdivs
aad
sub
or
or
adc
fldl
push
aaa
out
int3
out
int
fwait
add
cs
jg
ja
aad
jno
ja
ja
xor
pop
fisubrs
xor
lds
sub
cltd
in
adc
scas
repz
jno
dec
inc
push
sahf
xchg
pop
daa
inc
sub
mov
enter
lds
hlt
inc
sub
cmp
testb
mov
mov
outsl
hlt
push
mov
jae
cltd
mov
fs
in
fwait
clc
push
fdivrl
and
mov
xor
jmp
imul
cltd
sbb
jmp
insb
popf
jge
xorb
sub
dec
aas
lods
pop
sub
cmp
xchg
ror
leave
popw
loop
mov
es
in
dec
xor
inc
cvttps2pi
rcrb
movsb
mov
ljmp
xchg
xor
popf
push
pop
mov
cmp
jo
and
cmpsl
and
xchg
les
push
sub
mov
xchg
in
out
cmpsb
leave
inc
sub
jmp
and
test
lock
or
rcrl
cmp
cmp
aas
pushf
adcb
or
movsl
arpl
rorl
imul
loop
in
sub
lods
mov
mov
daa
cwtl
movd
sahf
aam
mov
sbb
ret
sahf
stos
pop
pop
test
or
or
pop
mov
or
cmpl
mov
js
pop
ret
jl
test
sub
sbb
imul
shlb
lcall
cmp
pop
ret
repnz
push
mov
andl
xchg
mov
popf
sbbl
fistpll
xor
and
out
aam
inc
scas
popf
cmp
xor
inc
int
aaa
inc
jmp
xor
jecxz
jge
int3
adc
cmpsl
bound
pop
push
and
daa
xchg
xchg
sbb
out
test
mov
mov
push
jge
daa
lret
mov
sub
sbb
mov
cmpsl
loope
lds
out
mov
iret
lods
xchg
int3
stos
or
dec
sarl
inc
iret
gs
mov
cli
sbb
out
mov
pop
pusha
ljmp
jb
pop
mov
dec
or
idivl
lret
rcl
and
lret
and
mov
jb
sbbl
inc
bound
adc
imull
add
mov
adc
inc
js
xchg
cmpsl
cmp
push
mov
mov
std
ret
cmp
sqrtps
int3
sbb
push
roll
pop
je
or
clc
or
cmpsl
fabs
in
mov
sbb
lock
cmp
mov
xchg
scas
imul
jns
push
cmp
aam
inc
insl
int3
xchg
insl
cmpb
rcr
sub
xor
push
sbb
cwtl
or
nop
or
in
add
clc
add
mov
push
jmp
pop
mov
xlat
xor
jo
fsubs
inc
inc
rolb
mov
cmc
pop
jle
ljmp
add
fstpt
in
aam
mov
add
lea
aas
ret
inc
xchg
int3
pop
popa
movsb
gs
mov
pushf
push
cmp
cltd
pop
cmc
or
xor
adc
mov
add
sbb
jp
scas
mov
addr16
pop
mov
and
dec
mov
ds
mov
dec
sbb
dec
adc
adcl
mov
cli
dec
xabort
mov
cwtl
nop
pop
inc
adc
add
sbb
push
push
scas
ret
mov
imul
adc
jo
jns
es
outsl
in
push
add
out
outsb
mulb
or
ffree
out
test
pop
push
ljmp
push
fcmovnb
daa
test
fwait
xchg
cli
and
lods
xchg
lods
cmp
lahf
stc
xlat
pop
add
mov
notl
sbb
adc
push
loope
sub
push
pop
out
test
jns
mov
inc
mov
lods
and
push
movsb
das
xor
loope
int
cli
fwait
scas
cltd
mov
adc
jne
xchg
pop
fldl
loopne
test
dec
inc
js
jg
cmpsl
int3
xchg
mov
mov
jp
adc
adc
loop
div
xchg
shll
ret
aaa
sbb
lods
cmpsl
loope
sub
and
and
pop
pop
jno
xor
or
cli
xchg
aas
cli
push
lret
mov
int
and
mov
scas
sarb
test
movsl
std
out
je
mov
cs
xchg
dec
stc
jnp
mov
mov
jae
dec
lock
int
dec
aaa
dec
and
adc
dec
cmp
push
and
jne
in
mov
jg
and
pop
js
push
push
mov
imul
xchg
rcrl
jae
sbb
lods
enter
roll
xor
iret
add
and
test
xchg
adc
into
dec
and
js
add
jae
cmp
in
ss
and
add
insb
push
cwtl
lods
dec
push
jl
mov
pop
dec
fisttpll
sub
xchg
cmp
out
xchg
push
rcrl
mov
fcomip
xor
test
xchg
pop
shll
movsl
xchg
imul
sub
in
jae
and
mov
aam
or
ror
ss
adc
clc
cmp
mov
inc
sub
inc
inc
inc
ljmp
repz
outsl
mov
stos
sar
cltd
data16
and
jo
pop
sbb
push
stos
jns
mov
or
mov
addr16
mov
outsl
xor
pushf
sti
call
scas
push
mov
xor
scas
inc
sbb
push
shrl
and
sbb
cmp
pop
movsb
push
lret
bound
andb
dec
mov
mov
test
dec
sahf
mov
push
test
int
std
fsts
xor
adc
push
aas
inc
xor
jnp
push
lods
push
enter
inc
leave
cmp
cmp
xlat
xor
jle
push
jae
cld
std
test
mov
lcall
jbe
insb
clc
pop
xor
inc
into
out
pop
push
js
pop
popf
cmc
call
pop
mov
outsl
pop
imul
mov
sbb
jnp
jl
cmp
jae
mov
jecxz
xor
push
in
movsb
icebp
ret
shrb
and
mov
movsl
pusha
xor
add
ret
sbb
ficoms
adcl
paddusb
in
stos
push
inc
stos
inc
lods
ror
sbb
lahf
xchg
sahf
and
sbb
adc
or
popf
js
hlt
add
nop
jnp
xchg
arpl
adc
pushf
sbb
xchg
dec
fiadds
xchg
daa
push
push
dec
jne
jecxz
std
cltd
lret
imul
and
pop
mov
sub
loopne
mov
xor
add
test
pop
cld
cwtl
int3
dec
adc
ret
mov
pop
sbb
push
jae
aaa
add
outsl
lahf
test
sub
fdivr
xchg
test
xchg
lock
push
and
ficomps
in
ds
sub
jb
add
aad
lret
push
fdivrs
sbb
mov
mov
pop
sbb
pop
push
mov
in
les
push
xchg
lret
idiv
bnd
sahf
xchg
nop
int3
je
lret
repz
sbb
in
mov
sub
dec
push
dec
arpl
les
loope
les
dec
lea
ss
scas
cmpsb
loopne
xchg
sbbb
inc
push
outsl
mov
jb
rorb
sbb
mov
test
icebp
push
test
iret
cmpsb
cmpsl
sbb
aam
repz
sti
xchg
sub
test
test
sbb
ret
sub
xchg
cmp
sarl
jle
mov
and
fnstsw
shl
xor
sub
push
inc
test
jnp
sbb
xchg
es
xor
lods
outsb
fcomip
arpl
ret
stc
pusha
in
pusha
cmp
scas
inc
aad
push
inc
hlt
or
cli
lock
cmp
and
cmpsb
cltd
ret
xchg
xor
jns
mov
arpl
and
imul
arpl
repnz
mov
call
inc
loope
rolb
xchg
mov
lret
xor
cli
roll
dec
icebp
or
inc
sub
dec
sbb
adc
xchg
pop
cmc
sub
mov
pop
psubusb
xor
dec
and
loope
aad
xchg
pop
adc
std
pop
out
rorb
push
xor
xchg
add
aad
dec
add
out
ss
pop
or
sub
hlt
aad
pop
xchg
fiaddl
mov
mov
popa
push
adc
cmp
ss
cs
scas
ja
loopne
fnstcw
fldcw
call
push
dec
sub
jns
jle
jg
sahf
xchg
cmpsl
stos
push
lret
into
xlat
test
mov
bound
mov
mov
mov
inc
fisubl
icebp
insb
mov
push
pop
sub
add
stos
jle
aam
inc
mov
cmc
inc
pop
pop
mov
xchg
mov
sub
or
add
jp
hlt
xor
xchg
mov
ss
je
push
lret
xchg
sub
mov
or
sub
test
jae
mov
dec
jno
ds
adc
fisubs
mov
push
add
in
push
in
inc
push
aad
jmp
popa
nop
inc
pop
push
push
movsl
inc
cmp
cli
cmpb
mov
jne
rolb
fsub
jmp
cmc
xchg
mov
cmpsb
sub
mov
popa
adc
incl
popl
cmp
and
ss
push
sbb
and
sub
dec
ljmp
mov
and
jns
dec
add
stos
jns
xlat
cmp
mov
pop
mov
stos
mov
sub
push
sbb
cs
mov
sysexit
fadd
mov
popf
or
sti
push
mov
in
rcrl
mov
mov
mov
icebp
movsl
test
lcall
mov
aad
scas
out
push
mov
mov
test
xchg
leave
xor
dec
mov
push
mov
adc
xor
xchg
sub
imul
jbe
mov
push
mov
and
dec
icebp
adc
cmp
xchg
sbb
ds
and
jae
pop
push
sub
insl
dec
fcoms
fwait
roll
or
data16
sarl
gs
sub
cmp
jno
jp
jno
mov
sub
sub
das
ret
scas
nop
mov
push
popf
inc
mov
cmp
xor
shll
pop
arpl
mov
mov
push
fildll
lahf
mov
movsb
and
rcrl
sub
jno
cmpsl
mov
fistl
mov
fs
dec
sub
add
fisubs
fwait
jb
pop
insl
movb
aad
jae
leave
fmuls
ja
lret
pop
cmp
mov
not
pushl
lea
xchg
orb
iret
xchg
nop
push
scas
pop
or
insb
add
outsb
adc
inc
and
pop
or
les
jge
aas
push
sbb
and
enter
push
sub
rclb
packssdw
pop
shrl
mov
mov
js
ljmp
test
cli
lds
scas
pop
dec
mov
enter
adc
test
cltd
mov
jae
jle
xor
les
aaa
push
iret
incl
pop
mov
inc
jae
shl
popf
mov
jl
pop
and
pop
push
add
fwait
inc
xchg
divl
push
xchg
bound
insb
test
cmp
sbb
dec
cmp
push
pop
push
xchg
sahf
ds
movb
inc
push
out
inc
movsb
xlat
arpl
imul
pop
cmpsb
xchg
rorl
mov
repnz
add
jb
jl
dec
popa
adcb
jg
in
cmp
or
mov
or
cli
loopne
int
dec
mov
and
adc
add
push
shll
sub
adc
dec
pop
fs
insl
in
rorl
lret
fildl
cmp
adc
pop
out
jb
outsl
pop
rolb
xorl
xchg
mov
hlt
ljmp
or
rclb
mov
pop
daa
and
adc
sbbl
or
out
aad
jg
or
jbe
add
ds
into
test
xorb
mov
adc
leave
test
jmp
or
pop
mov
lret
push
pmulhuw
orb
ret
nop
pop
mov
out
pop
mov
imul
jnp
mov
lea
pusha
je
into
loopne
bound
add
mov
push
imul
stc
test
cltd
and
enter
shlb
iret
insl
sar
pushf
adc
jno
subb
adc
mov
dec
in
xchg
insb
pop
ds
mov
xchg
push
hlt
jmp
push
das
pop
dec
testb
fmul
movsb
je
pop
imul
js
pop
popaw
in
push
es
add
mov
std
push
fsubrl
in
test
dec
pop
in
popf
in
pop
cmpsb
jno
into
mov
pop
and
and
mov
pop
js
and
push
movsl
fbld
pop
jnp
sbb
and
jbe
xor
std
and
pop
pop
iret
inc
lcall
ret
into
jle
fdivs
mov
std
jae
mov
sbb
loope
push
dec
dec
jle
repz
loop
mov
push
jae
and
ffree
repnz
incb
outsb
and
faddl
je
ret
cmp
xorb
outsl
in
and
and
sarl
cs
and
xor
ret
inc
dec
xor
call
mov
test
js
lcall
sub
repz
xchg
fisubrl
add
sti
decb
jecxz
cmp
add
or
lock
pop
lea
repnz
dec
pop
imul
lods
ret
cwtl
subl
mov
test
xchg
xchg
sbb
pushf
adc
inc
aaa
lcall
push
or
out
adc
adc
sbb
arpl
arpl
push
dec
adcl
loop
xchg
notl
mov
pop
fnstsw
push
mov
repnz
mov
sub
imul
loope
mull
emms
and
shrl
sbb
xor
icebp
dec
jb
mov
xor
pop
loopne
or
jae
shrb
mov
lock
jbe
mov
mov
sahf
ja
dec
xchg
aam
imul
cmp
ljmp
idivl
cmp
inc
mov
lods
in
iret
jmp
push
rcrl
and
loopew
xchg
dec
and
das
and
sbb
pop
cwtl
xchg
aad
cli
call
fcom
mov
outsl
mov
scas
mov
inc
loopne
clc
faddl
iret
push
mov
loop
mov
dec
cmc
mov
movsl
and
and
push
repz
add
add
dec
outsb
push
sub
add
outsl
lcall
test
adc
rcl
pop
inc
mov
call
sbb
jle
notl
xchg
fwait
jbe
inc
rol
adc
iret
aad
push
push
xchg
xchg
sbb
xchg
sahf
inc
or
mov
add
push
mov
sub
popw
icebp
incb
leave
pop
pop
mov
cmpsl
lods
ficompl
add
cmc
fldl
mov
in
sbb
adc
mov
dec
hlt
stc
data16
lret
or
jg
fistl
aaa
mov
fimull
mov
ds
gs
popa
add
in
mov
inc
cs
mov
lock
fwait
adc
lods
inc
mov
add
fcoms
push
insb
fcomps
pop
dec
pop
jl
sbb
and
out
jne
pusha
clc
roll
mov
push
and
or
cmp
adc
xchg
ss
in
call
and
xor
cli
pop
xchg
daa
cld
cmpsl
pop
push
cmp
jnp
lods
ljmp
xorl
adc
pop
out
movsb
push
sub
mov
mov
loope
daa
lods
lret
outsl
mov
xchg
jmp
pop
mov
lretw
xor
jge
out
nop/reserved
iret
shlb
aam
orl
push
lods
faddl
jl
or
or
ds
stc
leave
add
pop
mov
js
pusha
push
out
and
int
out
mov
out
xchg
lahf
mov
jg
cmpsb
nop
add
jl
or
lahf
push
jno
jo
test
hlt
pop
cmp
push
mov
sub
or
icebp
sbb
sub
xlat
out
jne
ret
xor
mov
out
push
sbb
inc
jne
mov
into
mov
fldt
hlt
pop
fwait
in
movsl
cmc
or
xchg
and
xor
mov
dec
adc
dec
or
in
mov
mov
or
lret
mov
clc
in
and
addr16
frstpm(287
pop
shll
jmp
push
sbb
push
dec
cmpl
sbb
push
pop
xchg
sbb
mov
test
ljmp
add
and
mov
and
adc
rcl
xor
sti
mov
jbe
stos
iret
cmp
sub
in
mov
scas
sahf
xchg
lods
mov
jge
clc
insb
pop
mov
adc
roll
xchg
xchg
mov
push
add
dec
pop
nop
std
in
es
pop
dec
out
mov
fs
add
xlat
cmp
in
test
add
mov
cmp
and
xor
outsb
dec
or
push
je
mov
mov
or
pop
and
adc
shlb
out
xchg
mov
aad
repz
lcall
jmp
xchg
stos
stos
in
xchg
jbe
pop
cmc
in
arpl
inc
adc
mov
push
jl
mov
sbb
mov
loope
pop
int3
loope
in
xchg
jg
or
add
test
fimuls
insl
fcmovu
add
mov
and
sahf
sub
pusha
test
push
xchg
out
push
in
xor
dec
inc
xchg
test
ss
flds
push
sbb
lcall
jnp
cmp
mov
scas
pop
daa
imul
lods
mov
lret
cmc
gs
or
cmp
cli
mov
sub
iret
inc
sub
fwait
cmp
in
fdivl
repz
movsb
pop
add
sti
icebp
dec
loopne
jg
sub
es
mov
sub
in
adc
dec
mov
movsb
leave
pop
xor
fdivr
cmpsb
sbb
sbb
call
aam
dec
push
lea
fstps
popa
mov
sar
xchg
in
fwait
mov
or
movsb
lock
leave
ds
test
nop
shll
xor
dec
jl
push
mov
jecxz
mov
add
inc
mov
dec
test
pop
cmp
ficomps
cmpsl
mov
inc
frstor
stc
push
iret
outsb
incb
pop
inc
adc
lret
inc
push
mov
movsl
mov
in
icebp
jle
not
mov
out
aam
sti
pop
int3
rcll
int3
in
sub
mov
mov
or
aad
testb
jg
jb
mov
pop
mov
lods
shlb
in
scas
insb
pop
sub
mov
push
lods
add
cmp
mov
sbb
push
popa
xor
xlat
rcrb
add
outsl
pushf
jecxz
hlt
push
fstpl
push
xchg
sub
fs
aaa
mov
sbb
sbb
ja
pi2fw
push
add
loop
push
out
jl
out
sbb
inc
fisubs
push
lcall
rcrb
movsb
insl
jp
in
cltd
or
pop
lret
add
adc
stc
sub
jl
mov
push
leave
jmp
ljmp
cmp
aas
push
xor
popa
sub
ret
stos
iret
shrb
xchg
xor
clc
into
adc
pop
xchg
hlt
mov
scas
rcr
aas
mov
mov
fidivrl
sahf
aaa
sarl
psrld
leave
jmp
js
sub
icebp
pop
lock
sbb
jne
in
scas
loop
mov
stc
dec
jb
iret
dec
sub
xchg
fnstsw
mov
cli
enter
fsubs
add
mov
jg
add
mov
push
mov
push
jo
loopne
sbb
or
inc
xlat
sti
adc
push
insb
lahf
mov
jl
xorb
mov
lret
cmp
out
sub
mov
popa
scas
push
mov
sti
into
jmp
mov
addr16
gs
sti
dec
in
adc
push
cmp
jge
popa
arpl
stos
ja
cmp
push
lods
lock
lods
stos
xor
push
xchg
or
cld
xchg
popa
ds
dec
mov
or
pop
add
lods
nop
lods
ficoms
sub
ljmp
sbb
insl
mov
cmp
out
pushf
add
mov
cmp
xor
ret
clc
rep
xor
pop
mov
mov
inc
push
and
pop
hlt
add
test
lcall
out
mov
mov
stc
jno
xlat
or
dec
and
popf
or
loop
mov
clc
pushf
or
data16
psubusw
movsl
arpl
rclb
push
rcll
sti
cmp
xorb
fildll
pop
cld
in
lds
bound
dec
dec
daa
sarb
sub
sub
fs
push
inc
xlat
mov
movsl
out
into
popl
insb
shll
pop
popf
hlt
test
imul
inc
mov
ljmp
inc
dec
mov
push
mov
imul
xorl
xor
lret
dec
das
cmp
inc
push
jp
sbb
inc
arpl
js
aaa
jo
or
pushf
mov
xor
jae
sbb
add
int3
pop
push
insb
mov
cmp
pop
cmpsl
jp
mov
inc
call
mov
cmp
loop
fwait
aam
lods
jmp
mov
fstpl
enter
clc
cmp
pop
and
sub
add
jle
repnz
or
dec
daa
adc
bnd
shrl
sub
dec
sahf
xor
inc
xchg
ficoml
arpl
sub
loopne
popf
aas
mov
sbb
fiaddl
out
xchg
dec
pusha
sub
mov
jne
jae
push
mov
in
aas
sahf
push
mov
lahf
cs
rolb
xchg
fsubrs
dec
cmp
dec
mov
mov
je
out
rcr
add
jb
movb
test
nop
in
cli
sbb
sub
arpl
xchg
jae
dec
sub
ljmp
and
xor
fs
fwait
adc
pop
adc
sbb
mov
sub
iret
aaa
fidivl
pop
mov
push
cmp
pop
outsb
mov
lahf
imul
cmp
pop
adc
xor
xchg
mov
mov
testl
mov
dec
in
xor
push
out
inc
cmp
push
and
jmp
loop
popf
adc
push
lock
scas
push
jbe
xchg
dec
or
out
or
pushf
aaa
lds
xchg
or
fldenv
mov
data16
testl
xor
stos
xor
and
rclb
imul
jae
jbe
fxch
jge
sub
inc
pusha
in
xlat
subl
cmp
jnp
mov
xor
mull
xchg
pop
cltd
cltd
into
outsl
cwtl
jns
mov
in
daa
or
push
pushl
xchg
int3
mov
push
sti
mov
sbb
sahf
sub
fsubrs
jb
push
lods
jno
aas
hlt
pushf
xchg
sbb
aas
pop
pop
mov
mov
je
bound
das
mov
lods
pushf
cmp
cmp
mov
pop
stos
sub
or
xor
mov
ljmp
pop
mov
or
mov
push
pop
sub
into
dec
jmp
mov
jo
cs
cmc
adc
jg
inc
insl
cli
testb
fistpll
jp
sbb
aam
cs
jge
push
in
sub
jo
adc
push
add
nop
cmc
insb
mov
imul
popa
lods
push
js
ret
cmpl
pusha
mov
sti
cmp
int
inc
mov
jecxz
inc
lret
xlat
repz
loop
cmp
into
adc
and
jbe
outsb
sub
and
pop
dec
add
push
pop
fwait
int
adc
dec
jns
mov
inc
out
bound
sub
bound
or
push
xchg
out
js
jno
add
and
ds
add
xchg
faddp
dec
mov
loopne
in
inc
in
xlat
inc
pop
mov
mov
rcr
sti
imul
sarl
jge
add
jne
loopw
cmp
je
adc
xchg
mov
outsb
mov
imul
enter
pop
popa
ret
jmp
jb
push
push
pop
in
outsl
stos
xchg
add
sub
stos
mov
mov
adc
lods
frstor
jno
shl
sbb
sbb
sub
or
ret
mov
mov
lock
pop
mov
stc
mov
aam
pop
push
shrl
addr16
adc
push
fwait
sbb
hlt
xor
jno
out
pop
ret
scas
jmp
pusha
or
sbb
or
dec
cld
lods
ret
pop
imul
pusha
and
push
popa
shlb
lret
adc
xor
xorl
int
daa
xchg
insl
ljmp
pop
dec
fcmovnu
push
rcl
mov
mov
sbb
sub
ss
dec
inc
xor
insl
push
das
mov
cld
sbb
in
xchg
test
fsubp
clc
and
sahf
out
and
push
mov
add
push
jnp
lods
xchg
cs
stos
lahf
cmp
push
inc
das
cmp
mov
inc
or
imul
incl
xor
xchg
rcl
mov
outsl
lods
in
xchg
mov
inc
sbb
xor
pop
jno
fsts
repz
stc
add
and
sbb
mov
call
repnz
mov
and
loop
ljmp
loope
sti
aaa
mov
mov
ret
jl
test
xchg
sub
shll
xor
ja
push
mov
int
mov
imul
add
insb
ljmp
outsb
lods
and
out
push
xchg
xchg
stos
lret
cmpsb
pop
aas
cltd
testb
mov
mov
sub
loop
mov
pop
xchg
ja
mov
adc
sar
xchg
or
mov
sub
enter
ret
push
inc
gs
int
pop
bound
pop
jns
dec
jp
cmp
mov
les
pop
bound
inc
xchg
xlat
pop
lods
push
pop
stos
mul
xchg
aad
mov
lret
gs
imul
repz
mov
cs
test
cli
insb
cs
insb
jge
lahf
pop
scas
jge
xchg
or
mov
neg
insb
imul
ret
cmc
lds
loope
xorb
inc
push
addl
cltd
xor
iret
imul
cmp
pop
mov
xorb
stos
xorl
sar
add
mov
adc
decl
mov
fdivrl
push
dec
loop
mov
inc
xor
mov
sub
xchg
ret
cli
mov
ret
filds
loop
cmp
mov
add
xlat
push
enter
jnp
popf
push
sbb
enter
dec
or
dec
pop
mov
je
jg
mov
cld
scas
sub
loopne
jmp
ja
das
stc
rorb
jl
pop
mov
lods
pop
inc
add
inc
movsl
jg
xor
fnstsw
mov
aad
std
int
decb
cmp
lds
jne
testl
jbe
inc
pusha
fs
xchg
imulb
mov
leave
lock
out
sub
cmpsb
sub
push
int
out
cmp
push
mov
dec
scas
sahf
inc
pop
mov
push
in
lea
stos
pop
out
jb
add
pop
adc
shl
out
lock
nop
loop
fidivl
xor
inc
mov
test
mov
es
hlt
into
mov
mov
es
jmp
sub
or
jbe
mov
fs
or
call
sub
dec
mov
jg
fsubl
ret
outsl
cmpsb
vpsubsw
insb
lods
mov
xor
das
scas
fcomip
jecxz
jns
sbb
push
adc
lret
inc
pop
or
push
lods
pop
imulb
sub
xor
cmp
stos
dec
sbbl
jb
arpl
pop
pop
out
shll
insb
shlb
fs
jnp
lahf
mov
movsb
lods
lret
inc
movsb
xchg
sbb
mov
outsl
jge,pn
ss
dec
stos
orb
mov
dec
lods
stos
pop
jne
or
jge
out
jmp
cmpb
mov
xchg
movsb
pop
or
jp
jle
addr16
fsubs
adc
mov
pop
mov
jge
adcl
cmp
popa
daa
mov
outsl
pop
mov
addr16
stc
adc
mov
jo
loop
ss
leave
pop
dec
hlt
pusha
sbb
push
xor
andl
sbb
insl
bound
sbb
loopne
enter
mov
loop
mov
je
sbb
pop
jle
xor
or
popf
xchg
ljmp
cltd
adc
fldt
movaps
je
jmp
aam
outsl
mov
sbb
mov
insb
lock
adc
scas
push
pop
inc
fdivs
jns
dec
mov
fsubl
jmp
jae
ret
cmpsb
or
cld
dec
adc
cwtl
sub
jecxz
std
pop
mov
outsl
insb
mov
nop
popf
inc
xchg
out
xor
pop
xor
sub
mov
test
pop
pop
dec
addl
sbb
pop
popf
orl
dec
mov
lds
add
shlb
pop
xor
and
btc
cmc
and
add
and
fildll
sarb
xor
push
mov
sub
fsubr
repnz
dec
xchg
pop
shll
inc
dec
push
mov
repz
dec
sarb
imul
enter
lret
cmp
hlt
dec
cmp
enter
xchg
mov
inc
pop
xchg
fcoml
cmp
addr16
xchg
jb
divb
ljmp
jp
mov
cs
ficoml
aam
and
xchg
cmp
sub
sbb
adc
sti
mov
sbb
scas
sahf
test
cs
jne
jle
mov
xor
pop
dec
sahf
int
int3
xchg
adc
push
mov
std
xchg
xchg
mov
jb
addr16
cmc
stos
or
jbe
cwtl
or
cmc
sti
jne
imul
push
stos
add
lds
push
cmpsl
sub
lahf
out
push
into
xchg
sub
sbb
mov
dec
or
scas
adc
or
xor
mov
push
ds
pop
pop
in
repnz
xchg
xor
xchg
stos
cmp
fnstcw
sub
sub
test
mov
xchg
sub
test
cli
pop
fisubrl
push
test
andl
dec
add
pop
pop
push
adc
test
aas
mov
aas
xchg
call
mov
clc
xlat
lret
xchg
mov
pop
repnz
inc
dec
pop
cmp
mov
ljmp
popf
int3
pusha
inc
stos
ljmp
movl
mov
js
pop
dec
test
lret
and
cld
xchg
dec
dec
jb
sbb
cmp
mov
dec
sub
cmp
sbb
addb
cmpsb
fs
stos
xor
cli
jl
mov
push
js
inc
inc
mov
sarl
rcrl
push
imul
jge
rorl
or
daa
add
flds
test
ret
sbb
jno
cmp
mov
jb
mov
negb
stc
lock
mov
and
fisttps
movsl
stc
je
into
inc
inc
xchg
pop
jl
rcrl
sbb
stc
data16
jno
cmpsb
jns
fcom
sub
push
dec
mov
lods
sbb
lcall
shrb
test
jns
mov
mov
ficomps
or
xor
repnz
cltd
inc
rol
cmpsb
pop
imul
int
not
push
inc
setbe
mov
add
xchg
and
dec
pushf
pop
setb
dec
push
ljmp
inc
insl
push
add
sbbl
push
lcall
arpl
mov
add
mov
mov
fbstp
or
std
loope
and
lahf
and
xchg
lret
rorl
out
mov
xchg
jmp
cmp
adc
push
dec
xor
push
popf
insb
repnz
push
xor
cmc
mov
mov
loop
popf
jns
iret
out
push
lcall
in
cmp
in
push
jbe
pop
dec
sbb
adc
movsb
popa
xlat
or
add
add
jecxz
out
lret
inc
fidivl
xchg
outsb
adcb
ja
dec
shlb
addb
add
dec
in
loop
xor
mov
sub
clc
fs
roll
movsb
cs
mov
adc
adc
iret
aam
test
movsl
push
mov
mov
push
inc
insl
pop
xchg
mov
ja
jecxz
jle
or
adc
loop
hlt
iret
addr16
aam
loopne
jl
data16
mov
sub
rcrb
cltd
fstl
repz
pop
cmp
pop
movsl
and
pop
dec
or
and
fcoml
mov
inc
fwait
fs
fimull
and
xchg
jb
cmp
mov
scas
or
pop
inc
cltd
xchg
cmpsl
mov
fwait
insl
xor
lock
inc
scas
inc
jecxz
idivb
mov
test
and
mov
add
in
pop
lods
push
movsb
jmp
adc
mov
push
mov
adc
shlb
xchg
fsubs
or
cmp
cmp
sbb
cs
fistps
fcomps
jmp
iret
ja
jae
cwtl
and
repnz
inc
maskmovq
notl
notb
cmp
pop
mov
xchg
inc
jl
sahf
lahf
mov
fwait
lds
hlt
push
sahf
ja
sub
repz
sahf
data16
int
ret
stc
xor
jo
cmp
ljmp
add
in
bound
cmp
push
inc
pop
jecxz
xchg
or
push
ret
into
femms
mov
shlb
clc
or
cmp
shll
pop
xchg
mov
or
xchg
fiadds
add
mov
enter
push
sti
adc
push
push
inc
aam
in
test
adc
jnp
inc
ja
jo
test
sbb
sbbb
shl
sub
xchg
test
shlb
cmp
loop
inc
sti
cmp
out
mov
push
lret
in
inc
pushf
movsl
push
loopne
jecxz
jge
dec
mov
repnz
cwtl
test
cmp
push
lods
sbbl
sub
xor
rcrl
xlat
adc
xlat
pop
jl
dec
dec
mov
push
inc
movsl
insl
jle
cmp
mov
and
add
popf
mov
lcall
popf
in
dec
outsb
nop
jmp
dec
aaa
fwait
inc
mov
cs
jae
xor
xor
sbb
movsb
daa
inc
jp
push
add
jo
orb
out
cmp
daa
pop
stos
sahf
mov
xchg
xchg
aad
jle
push
jb
push
insl
mov
jb
loope
mov
cmpsb
in
nop
pop
test
cli
neg
frstor
jae
out
fisubrs
push
gs
mov
xchg
les
cmp
cwtl
cwtl
addr16
and
jnp
push
mov
cmp
enter
adc
cmp
jecxz
repz
adc
xor
pop
cmp
jmp
mov
daa
mov
adc
lret
in
jge
out
and
lcall
lock
in
xchg
ficoml
out
push
pop
push
bound
jae
sbb
das
xchg
ficoml
push
adc
divb
cmpsb
or
sbb
pusha
push
vaddsd
or
pop
push
fwait
outsl
mov
inc
inc
in
gs
daa
fs
dec
pop
les
sbb
jl
hlt
mov
pop
push
jl
inc
ret
daa
fists
inc
sbb
dec
into
icebp
mov
cs
pop
or
ret
mov
mov
adc
cmpsb
push
stos
popa
add
das
jb
dec
aas
nop
and
pop
xlat
fdivr
sbb
outsb
ucomiss
clc
frstor
stc
dec
xchg
cltd
outsl
xchg
imul
repnz
rcl
loope
adc
loope
adc
bound
sub
leave
mov
roll
fcomps
jbe
mov
xchg
imul
cmp
lret
mov
icebp
cmpsl
jns
sub
test
fs
pop
pop
out
mov
movsb
pusha
add
lods
popa
call
inc
xlat
mov
fdivl
mov
pop
out
arpl
es
adc
out
psubq
gs
inc
ss
mov
mov
push
sbb
add
jno
mov
sti
sbb
in
and
and
pop
cwtl
iret
jbe
push
lock
mov
push
push
scas
cltd
xor
aas
pop
fbstp
add
add
aam
les
mov
or
xchg
cmpsl
mov
pop
lahf
jle
mov
fists
push
gs
sub
dec
and
xor
xorb
mov
jg
shll
jae
pop
insb
inc
mov
popa
sub
roll
decb
les
rcll
mov
xchg
and
test
mov
addr16
adc
push
inc
or
dec
andb
scas
pop
mov
in
mov
xchg
movsl
clc
movsb
movsb
dec
repz
mov
out
loope
sbb
sahf
jb
incl
fiaddl
adc
adc
jbe
dec
inc
xor
mov
test
arpl
das
lock
cmp
mov
and
rorb
xor
ds
or
fdivs
mov
aam
mov
mov
xor
jnp
adc
jge
or
shlb
call
mov
push
mov
outsl
cmpsb
les
inc
jle
push
rolb
pop
jecxz
inc
and
sub
cltd
ret
sbb
repz
xlat
gs
int
adc
xchg
xor
mov
or
in
mov
shr
mov
rcrb
leave
js
stos
xor
and
in
int
mov
sub
cmp
or
mov
mov
sub
sbb
mov
int3
xchg
pop
movsl
outsb
aam
pop
cld
pop
dec
fadd
xchg
stos
mov
jle
mov
push
adc
jbe
leave
ret
shl
mov
dec
add
es
dec
jne
adc
jmp
pusha
in
test
scas
lods
xorl
call
outsl
ja
push
psrld
out
pop
aas
ret
ja
fsubp
sub
ss
dec
rorb
mov
push
sbb
push
push
or
sarb
pusha
jmp
mov
idivb
hlt
jb
stos
pop
bound
push
daa
adc
or
mov
push
daa
lods
int3
outsb
mov
test
gs
and
mov
push
pop
clc
mov
nop
stc
and
data16
nop
mov
jnp
outsb
adc
xor
hlt
rcrb
mov
lahf
gs
fdivl
jne
sbb
or
push
fcmovnb
jbe
mov
mov
ds
ret
jl
int
push
cmp
pop
mov
inc
mov
cld
cltd
imull
pop
in
xchg
pop
in
push
test
push
cmp
push
jge
sbb
popw
dec
test
add
fdivrs
mov
inc
xchg
out
xchg
insl
je
cld
jae
in
call
in
xchg
rorb
mov
das
je
mov
inc
pop
and
popf
in
fdivs
scas
xor
clc
xchg
imul
mov
call
outsb
mov
int
push
or
push
mov
scas
fidivl
ja
ds
mov
jge
fwait
loop
mov
nop
mov
imul
addl
shrd
test
pop
ja
in
popf
incl
pop
push
mov
jo
dec
push
xchg
or
sbbl
pop
sbbl
pop
push
sbb
cltd
jno
jno
mov
pop
inc
adc
inc
sbb
in
sub
xchg
je
xchg
mov
xor
imul
dec
lock
mov
xlat
scas
stos
mov
xor
xchg
lcall
pop
clc
and
mov
xchg
je
add
push
add
cmp
in
ja
mov
std
into
das
pushf
cmp
ja
mov
sti
xor
fwait
aas
cmp
stc
lods
sub
ffree
xchg
mov
jb
adcb
sbbl
lds
jp
sub
and
stc
sbb
ljmp
ja
pusha
jp
sub
sbb
jo
cmp
in
mov
inc
lret
jb
mov
stc
bnd
dec
loop
hlt
inc
fisttpl
dec
mov
and
sub
xor
ss
in
and
jp
cmc
sbbb
xchg
pop
dec
jbe
cmc
and
nop
pop
cmc
and
pusha
imul
clc
mov
xor
inc
addr16
outsl
addr16
outsl
arpl
xchg
jl
mov
decb
mov
rcl
orb
test
cwtl
or
mov
ret
fistpl
or
test
jl
mov
cs
sbb
xchg
loope
test
cmp
gs
sub
imul
xchg
loopne
cld
sahf
sahf
icebp
repnz
dec
sbbl
out
inc
ja
push
sahf
call
enter
sub
pop
outsl
xchg
daa
dec
cld
jne
inc
mov
int3
push
sbb
out
js
xor
out
sbb
lea
xor
and
xchg
or
test
test
aas
xchg
daa
loop
xor
adc
add
and
psllw
mull
clc
xlat
inc
mov
or
mov
mov
stos
add
pusha
shlb
insl
popf
mov
aad
ljmp
out
mov
xchg
inc
ret
imul
insb
inc
xchg
std
stc
lods
iret
xor
mov
outsb
clc
dec
or
out
mov
sub
jno
jmp
push
cltd
pusha
lock
cmpsl
pushf
mov
je
scas
aam
lods
dec
mov
rep
test
jb
rcl
pop
ljmp
jb
push
mov
shrl
pusha
lock
cmp
cmp
sahf
xor
loopne
jae
inc
mov
pop
rcl
xor
sti
push
stos
sbb
gs
jecxz
sub
imul
lds
pop
roll
cmpsl
je
fstpt
push
jnp
lds
xor
push
mov
push
cmc
dec
mov
mov
pop
jmp
std
addr16
lea
push
push
popa
mov
daa
les
fs
arpl
decl
sti
xlat
adc
hlt
mov
dec
in
enter
lock
jp
xor
cmp
pop
xor
mov
adc
ja
lock
lock
push
arpl
xor
ds
dec
cmp
sub
sahf
xchg
dec
mov
das
push
adc
push
sub
cmp
mov
inc
stos
gs
inc
mov
mov
xor
lahf
fnstenv
or
lds
mov
add
and
xchg
mov
daa
in
std
jge
call
movsb
mov
dec
insb
jecxz
jne
xrelease
sbb
imul
xorl
jecxz
xchg
xor
inc
sub
inc
inc
cmpsl
outsb
call
mov
sub
xor
pop
dec
mov
rclb
push
mov
into
add
mov
xchg
mov
adc
sbb
mov
sbb
pop
mov
movsl
add
inc
iret
hlt
fimuls
stc
or
loopne
je
xor
jmp
sti
jne
push
mov
int
xor
in
stc
cmp
inc
lahf
int
mov
ljmp
popa
jbe
pop
int3
lods
les
sub
jl
cmovge
adc
mov
arpl
andb
pushf
test
pop
addr16
jns
sbb
xchg
sub
dec
jns
das
xchg
jge
ds
cmc
sbbl
fsubrp
sbb
xor
dec
fidivl
mov
pop
cltd
and
push
cmpsl
push
and
pop
stos
pop
loop
add
xchg
mov
arpl
mov
xchg
testb
pop
fsubrs
arpl
adc
fwait
push
jg
or
popa
lahf
int3
mov
es
jl
sbb
in
jle
lock
out
into
lret
add
push
jmp
test
fmul
jnp
xchg
xor
mov
das
add
sbb
sbb
fs
adc
adc
push
sbb
into
mov
je
mov
cmovae
jl
adc
test
jno
jl
adc
mov
mov
hlt
lock
insb
push
sbb
cmp
adc
xor
addr16
pop
pop
shrb
lds
mov
hlt
pop
dec
pop
cmpsl
icebp
mov
push
or
addr16
gs
adc
mov
mov
sbb
mov
mov
ds
lds
fidivrs
frstor
ret
fwait
int3
jne
mov
ret
jp
dec
and
pop
roll
xchg
push
cmp
test
nop
sbbl
fcoms
push
ds
or
mov
loopne
out
cmpsl
and
addr16
inc
scas
push
hlt
push
sbb
push
or
mov
push
sbb
lret
add
ret
gs
fimull
les
xchg
inc
iret
movmskps
iret
cmp
mov
pop
cmp
shlb
idivb
sub
push
subb
pop
xor
mov
xchg
arpl
cs
cli
js
dec
jecxz
inc
mov
mov
test
adc
jno
or
aam
hlt
lcall
loopne
pushf
lds
xor
and
gs
sbb
adc
andl
jne
cmpsb
adc
xor
sahf
sahf
add
jns
rolb
cwtl
in
fwait
jb
adc
jo
mov
mov
adc
hlt
out
mov
shll
jno
xor
xchg
arpl
test
push
loopne
pop
sarl
push
fwait
int
sbbl
out
dec
das
sbb
shll
jne
test
rcrb
test
adcl
lahf
scas
jl
mov
jmp
sbb
pop
sub
sbb
sarb
je
jb
mov
mov
inc
xlat
mov
test
inc
in
fdivrl
sub
mov
push
scas
push
xchg
gs
and
and
iret
push
call
in
cmc
inc
call
call
stc
bound
stc
mov
mov
dec
or
and
pop
fnsave
int3
aas
shl
cs
bound
dec
dec
sub
psubb
cli
xchg
ds
into
jle
and
stos
lods
adc
addb
pusha
adc
sti
xchg
xchg
lcall
jnp
adc
cs
dec
add
jl
cmp
cmc
imul
or
xchg
and
xchg
pop
call
out
sub
inc
cmp
scas
cwtl
sub
aas
in
push
jmp
xchg
mov
xchg
or
je
adc
test
cmpsl
outsl
add
mov
out
lcall
jmp
jnp
or
dec
in
test
arpl
jns
outsb
int3
pop
es
mov
repnz
inc
stc
popa
pusha
push
xchg
xor
xchg
repz
inc
inc
scas
mov
push
jle
test
mov
sbb
orl
mov
or
test
mov
push
xor
push
xor
ljmp
rcll
pop
and
sbb
inc
daa
sbb
mov
imul
data16
lret
jp
xlat
dec
mov
std
mov
add
pop
mov
and
adc
pop
push
outsl
repnz
aam
in
es
pop
leave
fstl
xor
add
std
in
pop
inc
int
cwtl
push
mov
sti
rdpmc
cmp
push
pop
test
push
test
fbstp
lods
jns
pusha
fsubrl
cs
and
mov
adc
add
mov
inc
and
jbe
imul
mov
xor
inc
or
insl
mov
mov
push
sub
sub
jmp
ret
and
imul
inc
sarb
in
xor
or
addr16
popa
and
xchg
clc
shll
jo
lods
lret
jb
jg
clc
loopne
imul
pop
mov
sti
daa
push
lret
pop
jecxz
bound
xor
mov
nop
cld
cmp
sub
rorb
nop
sbb
and
pop
xchg
aaa
in
push
leave
jle
loop
xchg
rol
iret
mov
iret
nop
mov
sub
or
movsl
pop
mov
sbb
lea
dec
mov
fs
jecxz
pop
jbe
push
outsb
xchg
jo
pop
cmpsl
ljmp
xor
jnp
repz
sbb
push
ret
sbb
or
and
stos
jge
into
scas
fcoml
loopne
xchg
popa
sub
add
das
mov
ret
into
adc
mov
mov
sahf
add
dec
mov
ds
test
pop
cmc
pop
stos
insl
lods
sbb
loope
repz
dec
mov
xor
fcoms
xchg
jp
dec
enter
movsb
adc
mov
fcmovbe
jae
out
push
push
pusha
les
mov
inc
adc
cmc
jne
mov
ffree
adcb
dec
cs
adc
mov
out
cmp
jle
inc
mov
sbb
mov
int
jbe
int3
sbb
sbb
dec
fsubrl
mov
inc
sahf
mov
imul
pop
stc
mov
sbb
std
lea
or
and
or
inc
xchg
scas
stc
movsl
sub
xchg
aas
dec
add
xlat
jbe
inc
and
sub
cs
push
jbe
dec
or
gs
pop
fidivs
movsl
fcomps
or
mov
push
inc
int
jbe
ret
ss
sub
mov
sub
mov
imul
dec
adc
les
call
lock
movsl
mov
mov
mov
and
and
or
xor
mov
jno
ss
sarb
pop
jne
push
loopne
mov
jns
mov
imul
and
fbld
stos
push
xchg
shll
or
cmpsl
lret
fists
adc
dec
sti
fmuls
and
xorl
mov
adc
ds
lret
std
jbe
rclb
repz
ljmp
mov
push
xor
add
cltd
jae
push
dec
sbb
or
inc
cmp
ret
dec
pop
sub
xor
xchg
rcrw
xor
popf
mov
xchg
test
adc
mov
sbb
and
pcmpgtd
jl
mov
gs
fdivrl
pop
cmpsb
outsl
cmc
leave
les
outsl
xor
movsb
in
sub
test
jge
leave
cwtl
fadd
jae
jnp
inc
dec
or
testl
add
icebp
ret
xor
pusha
in
lods
test
and
call
out
mov
mov
into
jp
and
and
xlat
movsb
fcoml
hlt
lret
sub
sbb
jge
jecxz
mov
aad
pushf
fidivl
and
das
scas
lods
push
mov
fisubs
lcall
repz
out
jb
aaa
adc
xchg
cmp
aad
cmc
cmpsl
adc
mov
xor
pushf
mov
inc
xor
lock
sarl
popf
or
xchg
mov
xchg
lods
test
jge
leave
jbe
cmp
fdivrp
mov
pop
push
fcom
shlb
mov
insl
inc
cmc
pop
pushf
mov
lds
jae
or
in
jb
mov
movsl
dec
add
hlt
and
push
out
jno
inc
pop
das
lahf
test
data16
dec
testb
cmpsl
aas
enter
es
and
js
or
cli
scas
add
stc
in
jns
testl
cltd
aad
hlt
jo
cld
or
hlt
lods
lods
movsl
es
das
xlat
inc
bound
outsl
jmp
lret
and
and
dec
gs
repz
sub
xor
loopne
scas
add
xor
ret
jo
data16
xor
xor
mov
pop
orb
mov
repz
mov
pop
or
das
icebp
pop
test
test
sub
roll
mov
or
cmp
jl
pop
sahf
fcoms
or
lcall
cmp
shrl
pop
nop
mov
dec
fmuls
aad
lret
stos
mov
fs
imul
pop
sbb
jle
repnz
inc
add
jp
out
add
ds
das
test
mov
mov
adc
lret
ja
or
mov
rorl
sti
cli
cmp
sahf
movsl
pop
cmpsl
test
push
ret
seto
mov
cld
lock
clc
jno
dec
pop
mov
mov
xchg
xor
js
sti
adc
mov
inc
test
jns
or
idivb
mov
xchg
dec
xchg
leave
rolb
mov
cmp
pop
mov
jecxz
sub
lret
push
jg
ljmp
incb
xchg
push
pop
divl
inc
shll
push
xchg
mov
adc
inc
xchg
add
out
insb
jbe
jbe
sahf
std
cwtl
mov
imul
into
hlt
cmc
fcoml
leave
arpl
xor
sub
sbb
popf
stos
cmp
jno
and
popf
cmp
loopne
add
ret
xor
jb
add
push
stos
or
addr16
xchg
test
imul
std
and
add
out
cltd
mov
xchg
inc
xor
leave
imul
push
add
sarl
xor
mov
push
inc
push
pop
js
arpl
aas
add
mov
insb
iret
or
jg
dec
xchg
or
pop
cmpsb
les
icebp
add
cmp
push
sub
mov
xor
mov
fsubl
inc
pop
in
jecxz
cmp
test
data16
in
fldl
jp
repnz
push
inc
lret
sub
mov
xchg
or
adc
add
jae
dec
pop
ret
jne
sar
xlat
jo
pop
xchg
cmp
test
add
dec
xchg
lods
mov
mov
jg
inc
push
cwtl
pop
mov
and
push
cmp
xchg
mov
aaa
xlat
leave
sbb
mov
sub
xchg
in
jo
sbb
xchg
ret
ret
cltd
add
cmp
push
jp
shlb
mov
or
filds
add
and
imul
call
jp
inc
mov
nop
stos
mov
mov
stc
stos
cmpsb
adc
sbb
cs
sub
nop
or
add
lret
mov
push
cmp
dec
push
cmp
xor
fwait
dec
xchg
xchg
std
test
mov
push
in
inc
sbb
and
ret
rolb
and
adc
roll
fsts
sahf
ja
outsb
mov
adc
insb
dec
mov
mull
sub
mov
dec
ret
xchg
callw
icebp
mov
add
lock
cwtl
lcall
sub
pop
jmp
sbb
test
gs
jl
inc
and
pop
dec
shlb
push
into
jg
jl
pushf
mov
inc
sub
mov
int
xor
addb
push
adc
jle
mov
dec
lahf
test
push
pop
clc
fbld
aaa
adc
aas
inc
in
arpl
inc
insb
arpl
xchg
pop
in
xchg
push
jne
inc
jne
fadds
sbb
dec
es
cltd
std
sub
es
ror
xor
dec
fisubrl
push
push
mov
inc
mov
add
fldenv
xor
mov
push
mov
repnz
cmp
xchg
in
jg
lret
sub
jmp
xlat
mov
sbb
nop
int3
mov
pushl
rolb
leave
add
mov
shlb
jl
push
subb
and
sub
mov
imulb
std
xchg
xor
xor
scas
mov
cmp
inc
fldl
fimull
jmp
xor
sar
arpl
sub
sbb
push
ljmp
pop
loop
xchg
xor
mov
bound
aam
loop
or
xchg
sti
fistpl
push
mov
pop
xlat
mov
dec
jbe
jae
iret
push
fwait
mov
pushf
xchg
adc
push
mov
pop
insl
mov
cmp
filds
mov
and
mov
push
lds
rcrb
ja,pt
cmp
xor
sbb
mov
test
mov
in
xchg
dec
pop
inc
push
push
adcb
add
icebp
add
jecxz
sbb
xor
jo
rcll
mov
mov
mov
mov
lcall
push
pop
sbb
jecxz
dec
lcallw
in
jns
cmp
filds
push
pop
out
movsb
cli
pusha
jo
cmp
cwtl
or
xchg
jl
cltd
fcomps
mov
sub
stos
inc
leave
cs
mov
call
mov
cmp
adc
lahf
push
das
lea
or
mov
std
pop
ficoml
shll
loopne
xor
mov
and
out
push
fnsave
mov
shlb
sbb
sbb
sub
stos
call
lret
in
sbb
test
out
ret
adc
inc
rorl
out
inc
push
xor
sbb
pushf
cmp
nop
ret
xchg
ss
jge
inc
inc
pop
roll
add
out
dec
mov
jge
in
xchg
mov
lret
mov
outsl
in
ss
dec
cld
pop
orl
mov
adc
adc
mov
mov
sbb
mov
push
jge
mov
or
cwtl
fidivs
dec
mov
pop
mov
mov
inc
clc
mov
sbb
frstor
lods
jo
and
gs
mov
sbb
mov
sbb
ljmp
sub
popa
adc
mov
cmpsl
nop
jnp
jge
cltd
xchg
pop
call
or
adc
dec
jnp
ja
mov
inc
xchg
fdivrs
scas
mov
mov
into
sbb
jl
lods
sbb
jno
fwait
xchg
jmp
ret
insb
dec
dec
pop
inc
scas
ret
lock
dec
mov
and
sub
mov
push
pop
mov
or
or
into
pop
aam
adcb
or
ret
push
cmp
dec
leave
mov
shr
xor
fildl
imul
push
and
jg
mov
pop
addr16
xor
repnz
mov
push
pop
or
sub
xor
sbb
xor
lods
lret
clc
insb
ret
mov
lods
add
adc
and
std
cmp
adc
pop
iret
push
mov
sahf
ja
cmc
enter
mov
cmp
lods
icebp
mov
call
cmp
pop
js
mov
xchg
jp
stos
fwait
in
xor
and
nop
inc
adc
daa
lret
sahf
sbb
push
jge
and
sbb
fsubrl
pop
enter
pop
scas
outsl
pop
pop
dec
aam
xchg
adc
popf
xchg
call
or
adc
out
imul
mov
into
pop
pop
and
imul
dec
adc
and
enter
ret
jle
and
jg
test
mov
insb
test
sub
mov
imul
jno
out
fwait
push
loop
insl
inc
pop
sbb
out
mov
mov
ret
inc
insb
xchg
fstps
rorb
xchg
or
cmpsb
lcall
pop
loopne
pop
pop
rcr
push
xchg
movsl
cld
xchg
jle
les
iret
jae
cmp
scas
lods
and
test
lock
add
js
fldenv
dec
sub
push
in
mov
es
bound
mov
fstpl
dec
je
dec
into
xchg
ss
mov
loopne
ja
jnp
push
pop
xor
or
cmpsb
test
add
pop
scas
cmp
mov
daa
pop
inc
pusha
sti
outsl
leave
jmp
dec
inc
or
in
movsb
xor
not
mov
adcb
movsl
sub
xchg
rclb
mov
pusha
inc
mov
lea
jo
sbb
ret
jmp
ss
loopne
test
icebp
in
ss
test
and
mov
loop
shlb
jge
mov
mov
or
dec
xchg
fwait
mov
lret
stos
add
repnz
add
fisubl
sbb
scas
jne
mov
pop
inc
xchg
addb
pop
add
mov
and
es
dec
jl
jns
testb
fwait
add
mov
xchg
push
mov
xchg
adc
jnp
lret
push
sarl
insl
jbe
popa
and
cli
pop
rorl
repz
or
dec
mov
pop
cs
scas
flds
fcoml
xchg
fs
outsb
dec
orb
mov
in
ret
or
mov
jge
nop
das
xchg
sbb
scas
repnz
pushf
push
mov
jg
cmp
fs
in
fistl
adc
insl
mov
push
inc
outsl
mov
mov
cmp
adc
pop
mov
xor
lds
adc
xchg
jg
ret
xchg
rolb
push
movsb
mov
popl
and
movsb
in
arpl
xchg
mov
sub
cmp
pop
or
fmull
jno
lods
loope
jne
lock
and
mov
out
push
lds
aaa
adc
aaa
fadds
negl
push
inc
imul
dec
mov
xchg
jns
enter
cmc
sti
fs
mov
push
dec
jmp
rcrl
sub
xchg
inc
sub
mov
push
popf
fisubrl
mov
rclb
lods
dec
mov
push
or
aam
loop
imul
sub
les
jbe
movsl
mov
out
lahf
ud1
push
xor
cmp
xchg
mov
in
fsubrl
shrl
lock
lahf
es
push
cld
fs
xchg
add
mov
adc
sbb
adcb
scas
mov
mov
cmp
jecxz
push
call
iret
xchg
and
dec
hlt
ficoms
iret
mov
in
push
dec
jnp
or
leave
popf
int3
in
fsubl
xchg
aad
in
inc
xchg
adc
je
cmp
mov
adc
lods
repz
cmp
hlt
mov
pop
sub
and
jae
or
outsb
fstpt
push
dec
inc
ljmp
pop
jnp
mov
aad
mov
popf
cltd
cmp
roll
inc
jbe
ljmp
and
jae
cmp
cld
test
int
inc
inc
repnz
inc
adc
adc
cmp
mov
inc
into
and
gs
mov
or
in
sbb
cld
jae
mov
decb
jp
cmc
mov
mov
lods
jmp
movl
sbb
out
and
repnz
xchg
call
adc
js
cmpsb
cs
das
mov
es
sub
test
push
and
mov
hlt
or
xchg
jo
divl
jmp
iret
add
and
out
push
repnz
mov
shrl
nop
jne
sarb
fwait
adc
cmp
pop
sbb
push
shl
inc
loopne
js
enter
out
jmp
jno
lea
add
pop
and
lahf
enter
xor
xor
ficoms
jnp
mov
mov
rorl
pusha
jae
add
xor
jns
inc
add
pushf
or
xchg
cld
stos
lret
ds
inc
lret
cmp
and
xchg
lahf
loopne
pop
mov
mov
mov
test
movsb
mov
imul
cmp
push
or
aad
mov
dec
mov
bound
pop
mov
add
jp
bound
xor
inc
fcomps
mov
fsubl
stos
sbb
xchg
ds
lret
dec
inc
inc
aam
sub
stc
push
out
lret
ja
stos
fnstsw
ja
cmp
into
push
inc
arpl
cmp
xchg
push
and
popf
lahf
in
xor
mov
sbb
arpl
and
push
adc
test
rol
push
enter
test
mov
addr16
subb
inc
scas
jb
xchg
xor
repnz
mov
sub
push
mov
jge
mov
outsb
inc
and
push
popf
in
xchg
bound
push
and
xor
adc
inc
sub
adc
add
insl
sahf
lahf
nop
std
pop
inc
dec
and
jmp
divb
leave
hlt
hlt
pop
lock
and
xchg
xchg
imulb
dec
lea
mov
mov
sbb
or
icebp
int
sahf
adc
cld
fwait
clc
add
cmp
push
idivb
push
sub
pop
push
dec
jecxz
icebp
or
ss
repnz
inc
jne
xchg
into
ljmp
push
cwtl
fadds
pop
mov
cmp
arpl
fisubrs
push
mov
xchg
sbbb
push
out
mov
dec
sub
mov
stc
xorb
sub
xchg
pop
icebp
cli
dec
cmp
idivl
aam
jg
adc
sti
gs
add
add
movsl
jnp
sbb
gs
push
stos
outsb
inc
jae
lret
stos
mov
loope
lcall
scas
or
jecxz
aas
xchg
push
test
mov
sti
mov
mov
dec
inc
fisubrl
or
or
repz
out
cmpsl
or
mov
cmp
jae
stos
inc
dec
xchg
xchg
das
pop
dec
shrb
mov
mov
cmpsl
push
cltd
loope
sbb
aam
lcall
rcl
push
xchg
or
and
repnz
rorl
pop
fs
in
dec
or
ds
stos
jne
mov
mov
xor
xorb
enter
fisubrs
push
inc
mov
jmp
rcrl
jne
xlat
lods
ret
jmp
sbb
cmp
mov
mov
sub
dec
inc
jl
outsb
jbe
or
hlt
sub
mov
test
and
rcl
hlt
mov
mov
mov
adc
add
in
cmp
xchg
or
cwtl
mov
aam
cmpsb
rolb
pop
pop
mov
adcl
in
scas
dec
lods
or
mov
sub
adc
jl
push
dec
sbb
lods
imul
inc
xor
dec
sub
nop
push
or
loope
xchg
jl
out
or
sarl
test
inc
into
cmpl
les
pop
out
add
sub
jno
inc
jns
aas
faddl
fstps
ljmp
mov
sbb
mov
jnp
mov
sbb
jmp
repz
or
int
addr16
mov
or
fcompl
pop
mov
pushf
cmc
xor
pop
icebp
or
push
cli
xchg
iret
iret
dec
adc
lcall
lret
xchg
sar
loopne
mov
mov
adc
test
lds
or
lret
in
and
stc
in
loop
addb
mov
vmovups
rorb
out
add
sbb
int3
jnp
jg
cmp
icebp
add
pusha
test
jmp
cmp
aas
push
mov
adc
fiaddl
pop
xchg
jo
jns
push
out
push
fildl
mov
dec
add
out
push
ret
popa
dec
adc
adc
sar
xchg
inc
std
decb
aas
sub
in
fs
cmp
ret
xor
lahf
xchg
out
inc
adc
aam
and
lret
or
push
and
data16
stc
ret
std
icebp
dec
sub
xchg
icebp
mov
or
cmp
aaa
and
mov
scas
loopne
sub
mov
test
mov
sbb
dec
out
in
sbb
add
pop
enter
aas
mov
in
outsb
mov
xchg
lods
push
dec
adc
or
imul
cmp
mov
dec
push
jns
inc
ja
dec
xchg
add
mov
les
test
cmp
sub
mov
int
pop
cld
xchg
mov
fiaddl
bound
out
outsl
daa
xchg
add
add
loopne
lock
neg
mov
out
aas
test
outsl
sub
push
mov
pop
xor
mov
mov
and
aam
repnz
stos
out
mov
mov
push
out
xor
bound
or
and
loope
shlb
add
stos
push
pop
mov
mov
cmp
fbld
mov
push
arpl
add
push
roll
push
stc
sbb
push
std
test
int3
clc
push
pop
dec
mov
aaa
lret
flds
scas
popf
lds
adc
and
jmp
dec
dec
mov
out
sbb
sbb
push
cmp
sub
cmp
mov
cmp
mov
dec
outsb
andps
addr16
test
adc
idivb
inc
mov
gs
mov
dec
out
out
leave
hlt
dec
sub
aam
arpl
cmc
inc
cmp
in
arpl
mov
in
mov
inc
push
sub
add
cmp
add
pop
xchg
iret
add
jo
xor
lcall
wbinvd
pusha
cmp
mov
and
sbb
jo
popl
rcrl
rclb
mov
mov
out
lcall
xchg
pop
and
sbb
mov
xchg
hlt
inc
push
daa
popf
push
or
sub
sti
xor
add
dec
jmp
fidivs
sub
push
lods
nop
mov
inc
mov
xor
pop
mov
xlat
jmp
jno
xor
mov
inc
mov
std
stc
ds
add
push
push
sbb
rcrb
mov
fwait
shlb
hlt
xor
xor
enter
dec
imul
xlat
insb
js
inc
repz
fdivs
pop
adc
fidivl
out
mov
pop
das
repz
cli
mul
outsb
scas
jmp
in
add
inc
mov
inc
push
jle
sub
jnp
iret
sti
pop
jne
sbb
dec
adcl
fstl
ret
cltd
mov
fcmovbe
sarb
push
push
andb
sbb
imul
jle
cmpsl
mov
push
xlat
jbe
lret
jo
pop
in
lret
jne
aas
lods
jg
add
inc
fsubs
jle
dec
pop
ja
push
dec
cli
jae
xor
jbe
lods
add
mov
xlat
jge
cmpsl
fdivrp
and
mov
cmpl
push
loopne
mov
cwtl
cmp
mov
mov
pushf
cs
pop
mov
xchg
out
lret
jg
les
jno
sub
ljmp
sub
sbb
mov
or
mov
shll
sbbl
inc
ret
sbb
mov
inc
pop
es
stc
rcll
sub
xchg
mov
mov
loopne
adc
jnp
test
and
or
icebp
sbb
jne
shr
jge
jns
pop
bound
scas
fst
sti
mov
je
add
insb
sbb
idiv
push
jae
mov
mov
ja
andl
ja
test
test
mov
push
pop
shlb
mov
mov
popa
pop
pop
sbb
lahf
sub
xlat
mov
dec
mov
scas
divl
xchg
inc
repz
movsb
jge
add
loopne
add
shl
ljmp
mov
test
sbb
stos
jns
push
mov
push
add
jne
ljmp
inc
dec
lods
popf
lods
mov
adc
ret
mov
out
push
mov
loopne
sub
add
jae
test
adc
nop
adc
testb
lahf
inc
dec
pop
rcr
movsb
mov
push
fldcw
lock
jb
les
pop
mov
ror
adc
fsubs
jo
mov
mov
jmp
inc
lret
inc
mov
mov
and
jecxz
jle
cmp
mov
loopne
es
cmp
mov
cmp
inc
pushf
outsb
jge
push
sahf
cmpsl
mov
xchg
jnp
jecxz
mov
out
stc
mov
jo
out
and
mov
mov
pop
push
sub
xchg
cmp
add
fstpl
jmp
aaa
jbe
int
js
sub
xchg
gs
sbb
mov
cmp
fdivp
inc
in
popa
pop
lcall
pop
pop
arpl
lret
jg
data16
or
cld
jbe
push
dec
dec
cmp
frstor
mov
mov
xlat
mull
mov
cmc
adc
cmp
in
pop
jne
cmp
lcall
xchg
xor
cwtl
sbb
ret
adc
hlt
mov
dec
stos
loop
aam
in
or
jnp
cmp
cmp
cld
mov
out
outsl
adcl
mov
mov
xchg
stc
movsb
xchg
pop
xchg
movsl
pop
movsl
insl
mov
pop
insl
mov
xchg
jns
jl
pop
sub
xchg
jns
or
repnz
and
cltd
mov
cmp
xor
xor
xchg
popa
mov
mov
jl
jmp
cmp
lds
scas
add
xchg
and
jmp
push
sub
test
adc
test
mov
cmp
pushf
sahf
into
sbb
mov
pop
scas
adc
mov
divb
sub
jmp
outsl
mov
jns
loope
pop
push
movsl
jle
popa
jge
leave
adc
dec
push
mov
frstor
mov
cs
imull
cltd
pusha
dec
sti
add
mov
dec
aas
imul
mov
jg
repz
out
je
lods
or
jg
cmpsb
loopne
ds
lock
insl
in
orb
lcall
mov
dec
aas
adc
mov
sub
repz
das
popa
xorb
notb
and
fstpt
add
jo
jle
cli
and
scas
jne
jg
popaw
popa
inc
ja
cli
xor
cmp
inc
xchg
cmpsb
sahf
inc
lcall
rcrb
loopne
ss
mov
push
xor
iret
mov
mov
mov
xlat
jl
pop
hlt
fbld
inc
jb
out
jne
loope
xchg
clc
mov
repz
lods
aam
sub
inc
push
pop
xchg
popf
imul
xor
push
push
int
dec
pop
pop
sarl
mov
rcrl
mov
mov
jmp
out
pop
mov
xor
mov
cmp
test
jae
inc
in
mov
jecxz
jo
pop
test
mov
cmp
sbb
or
mov
inc
mov
inc
mov
cmp
fwait
mov
mov
or
cmp
test
xchg
popf
dec
dec
bnd
xor
xchg
push
test
mov
cltd
inc
adc
pop
sbbl
cmp
addr16
and
cmpsb
xchg
stos
push
cmp
ss
outsl
mov
jge
push
sbb
scas
pusha
or
iret
pop
xchg
movsl
in
pop
sub
ja
sbb
jle,pn
addb
sbb
xlat
imul
push
lcall
or
das
in
add
cmp
push
mov
int3
mov
inc
mov
dec
sub
sub
mov
addl
lcall
outsl
mov
xor
mov
mov
es
sti
rcrl
les
es
dec
call
popf
out
cmc
in
xchg
or
in
fcoml
insb
and
mov
das
adc
xchg
stos
xchg
lahf
sub
lret
stc
and
push
push
push
dec
flds
leave
jle
jbe
in
xchg
jnp
or
mov
cmp
push
cmc
stos
outsl
ficompl
sub
jp
xchg
mov
sarl
ljmp
lock
fidivs
bound
mov
or
outsb
scas
into
ljmp
lds
or
or
out
ret
fldl
or
fs
jp
cmp
adc
add
jg
repnz
cmp
stos
enter
stos
outsl
push
clc
imul
sub
jle
dec
ss
loopne
sub
or
ds
mov
inc
shrl
cs
cmp
arpl
in
cmp
lret
push
xchg
enter
out
or
adc
fs
call
add
add
pop
lea
dec
mov
bound
out
loope
lcall
mov
lds
pop
or
push
add
inc
push
inc
je
aaa
xchg
out
aad
sub
int3
ror
push
mov
repz
fucomip
call
cli
sbb
cmpsb
rcrb
fidivrl
sahf
adc
das
mov
jns
mov
or
mov
lods
or
pop
fbstp
je
sub
sub
adc
mov
push
push
sarl
or
imul
iret
xchg
gs
bound
adc
inc
dec
jns
jecxz
nop
xchg
pop
pop
and
xchg
repz
sub
push
push
push
sbb
mov
mov
xchg
sbb
std
mov
mov
ds
mov
inc
push
xchg
pop
push
stos
adc
imul
bound
addr16
out
call
mov
call
or
xchg
mov
jno
aas
and
divb
xor
dec
rcll
jae
sbb
mov
cmp
mov
sub
pop
mov
add
popf
mov
adc
cwtl
adc
cmp
out
aad
lea
pop
loope
imul
mov
and
ret
mov
int
subb
shll
and
das
test
sbb
enter
sub
or
xorl
fdivrl
jecxz
ja
push
insl
test
fwait
pushf
mov
cmp
pushf
ficompl
inc
ret
or
xor
aad
inc
sub
mov
popf
aas
cmpsl
rcl
push
sbb
stos
inc
sub
mov
add
mov
test
fs
iret
add
sti
sbb
mov
jg
sbb
dec
mov
lds
pop
sbb
lcall
jge
sar
rcrl
cltd
mov
in
in
or
or
cmp
aad
xchg
popf
pusha
mov
cmp
mov
decl
stos
sbb
push
jmp
fiaddl
lahf
jb
gs
fstl
cmpsl
dec
ret
enter
out
mov
fldt
ja
jne
cs
aam
cmp
notl
fs
dec
pmaxub
mov
jmp
or
mov
mov
pushf
pushf
es
xchg
jl
and
push
nop
xor
sub
cmp
mov
out
cmpsb
hlt
sub
push
cwtl
fs
cwtl
mov
sub
out
pop
loope
aas
or
in
cmp
xor
xlat
pop
add
stos
popf
fildl
xchg
imul
rol
xor
stos
add
inc
xlat
or
cmpsl
in
call
mov
adc
int3
or
xchg
cli
add
mov
push
loopne
mov
xlat
xor
mov
jbe
sub
arpl
in
aam
in
mov
mov
out
jl
cmpsl
jg
pop
or
loope
sub
repnz
push
xchg
lret
xchg
out
and
jg
mov
push
xchg
scas
out
fistl
imul
sbb
push
mov
xchg
cwtl
shl
add
in
test
adc
into
or
out
jno
pop
vmovapd
enter
or
int3
stos
push
jne
pop
dec
inc
iret
repnz
sbb
test
mov
test
stos
xchg
push
cmp
call
lea
addl
daa
jge
pusha
dec
lods
mov
repnz
icebp
lock
iret
push
loop
xor
adc
push
or
mov
cmp
jl
or
mov
xchg
lods
mov
xchg
jmp
cmp
sub
mov
fnstcw
repz
mov
sbb
lods
sbb
pop
test
add
lea
test
bound
mov
xor
lds
inc
sub
aas
pop
fsubrs
add
shrl
mov
loop
lahf
jne
push
out
xor
push
leave
pop
inc
fidivl
jge
shlb
push
mov
loop
dec
arpl
clc
ljmp
icebp
sub
add
popa
stos
sub
inc
loop
sub
stos
dec
repz
cmpsl
addr16
stc
dec
push
insl
stos
out
add
mov
in
testb
movb
daa
imul
outsb
mov
pop
aas
sbb
adc
mov
xchg
xor
adcb
orb
xchg
pop
mov
jmp
xor
or
fs
push
adc
lea
push
mov
xchg
inc
or
jns
stos
xchg
jle
dec
or
call
pop
shll
fwait
lret
fiaddl
pop
jae
pop
pop
shll
or
mov
pop
sub
push
fdivl
loopne
jmp
pop
lods
dec
dec
cli
ja
dec
scas
xor
sub
push
std
fdiv
adc
add
test
fsubrs
repz
xchg
imul
into
cmp
aas
leave
cmp
and
movsb
cmp
jne
data16
sbb
repnz
mov
out
ljmp
sbb
out
test
xchg
inc
jb
xchg
mov
inc
repz
or
dec
and
loop
cmpsb
pop
inc
mov
lcall
xor
add
and
xchg
mov
jnp
pusha
inc
mov
test
mov
jo
loop
xorb
popa
adc
clc
push
ss
test
mov
daa
and
inc
xchg
scas
xor
repnz
out
mov
push
icebp
and
push
adc
sbb
pop
ret
add
aaa
mov
out
sti
cmc
dec
push
sahf
dec
adc
mov
cli
xchg
leave
xor
lds
mov
push
inc
cmp
ss
sbb
or
mov
dec
xchg
shrb
test
sti
call
popf
imul
inc
das
fisttpll
sub
mov
hlt
addr16
sub
fcomip
hlt
xchg
sub
addr16
hlt
jle
lods
out
test
or
xor
and
mov
je
orl
jecxz
incl
fiaddl
adc
repnz
dec
push
fwait
xor
iret
insl
sub
sarb
sbb
push
addr16
adc
out
add
push
scas
pushf
inc
ret
rol
add
mov
insl
mov
jns
mov
jae
loop
mov
xor
outsl
addr16
sub
orl
std
out
iret
repz
sub
cmp
out
inc
aaa
sub
scas
fnstenv
inc
outsl
or
int3
lock
xchg
add
xchg
scas
ja
dec
mov
in
mov
sub
cli
nop
ficomps
stos
add
push
or
inc
lret
pop
mov
aas
sub
imul
arpl
adcl
xchg
sarl
lret
pop
mov
cmp
pop
mov
jmp
js
or
in
in
jecxz
mov
addr16
add
cmp
xchg
adc
pop
ljmp
lods
dec
lock
loopne
push
das
aam
enter
add
jno
push
jg
xchg
popa
stos
mov
insb
pushf
iret
and
loop
add
push
mov
stc
loopne
sub
and
xchg
and
gs
mov
ret
mov
int
pusha
xchg
pop
dec
xor
arpl
shlb
dec
push
les
xchg
lock
mov
into
jge
mov
aas
incl
in
sbb
jnp
sub
test
mov
insb
nop
mov
pop
pop
testb
ds
in
stos
fsubr
mov
adcb
sbb
shll
sub
test
dec
xlat
lret
mov
and
repnz
lock
js
into
fists
pop
enter
cwtl
sbb
jno
inc
das
rclb
mov
movsl
cmpb
aad
ljmp
or
ret
xor
adc
movsl
hlt
out
mov
aad
fstpt
push
or
stos
dec
in
sbb
hlt
hlt
mov
and
bound
cltd
and
sbb
test
adc
orl
sub
sbb
mov
test
dec
lea
mov
testb
lret
adc
sbb
xchg
mov
sub
shl
repz
mov
fnstenv
rorb
leave
inc
mov
dec
jno
imul
daa
mov
je
movsb
lahf
fsubrs
pmulhuw
inc
mov
dec
jbe
test
cld
cltd
jb
inc
mov
sub
mov
jbe
xchg
sar
jg
insb
xchg
std
fidivrl
jns
push
mov
fisttpll
jne
mov
enter
dec
jnp
loopne
mov
int
call
testb
sub
mov
popf
aas
lods
mov
mov
xor
rolb
pusha
test
push
adc
inc
inc
ljmp
adc
daa
adc
addr16
mov
dec
mov
mov
mov
adc
out
push
dec
push
add
or
sbbl
stos
iret
sub
push
adc
mov
imul
inc
mov
lods
sbb
jo
dec
scas
lods
std
nop
loopne
loopne
aaa
fwait
and
xor
lea
sbb
pop
jbe
mov
and
test
imul
orl
mov
idivl
mov
test
cmp
lret
outsb
stc
stc
orb
jle
mov
cmpsb
mov
xor
ljmp
and
jmp
mov
xchg
mov
int3
test
xchg
pop
in
dec
pop
pop
push
shl
jno
insb
xlat
cmc
call
mov
xor
popf
dec
mov
nopl
mov
outsb
sti
push
jge
jge
push
or
sahf
dec
mov
dec
cli
pop
lcall
sti
into
lods
jns
testl
pop
in
stc
mov
inc
lret
fwait
roll
jmp
cmpsl
fstpl
int3
shl
nop
popa
mov
imul
push
fldpi
and
jbe
lea
int3
mov
and
add
pop
dec
or
mov
mov
sub
xchg
cmpsb
push
sub
stos
pop
mov
xor
test
mov
pop
adc
lahf
push
push
jge
pop
lret
mov
or
in
cwtl
mov
adc
sub
orl
out
pop
mov
and
xchg
add
mov
sub
dec
stc
mov
xor
es
int
pop
fisubrl
push
cmp
mov
lods
sbb
lret
fucomip
stc
xlat
icebp
icebp
imul
lock
jmp
negb
mov
sbb
mov
mov
cmpsb
stc
sub
mov
aad
fwait
ret
lods
out
mov
insb
cs
ret
or
pop
enter
add
enter
and
jmp
mov
dec
popf
rol
xor
inc
mov
mov
mov
adc
jns
jb
pop
jne
ret
or
test
push
pop
cmpl
add
jb
insl
fldl
xchg
addr16
fmulp
jmp
mov
loope
sbb
loope
jbe
mov
xor
pop
cmpsb
xlat
int
and
fstl
scas
mov
lret
cmp
clc
iret
shl
jl
add
aam
popf
xchg
popa
mov
dec
jp
sbb
sbb
loopne
xchg
shl
mov
mov
sub
popa
cmp
mov
les
or
dec
mov
fistps
pop
jns
fcmovb
cmp
pop
sbb
or
xchg
aam
sbb
imul
jl
and
jns
aam
aaa
mov
pop
lret
lock
aas
cmc
out
push
jecxz
mov
cmc
pusha
std
andl
aam
loopne
adc
jbe
pop
pop
insl
mov
cs
inc
ljmp
xor
fs
divb
mov
cmpsl
repnz
cwtl
jp
rol
movsl
and
xlat
scas
xchg
mov
arpl
ljmp
out
pop
iret
or
rolb
sbb
jno
popl
mov
jle
bound
data16
vpsraw
jb
shr
cli
loope
pusha
xchg
and
enter
and
fldcw
imul
mov
lret
xchg
cs
pop
mov
mov
mov
cli
and
jmp
scas
pop
jns
lods
push
in
mov
mov
ficoms
xor
push
shlb
out
rol
fstl
xchg
jp
cmp
inc
in
and
push
sbb
sbb
es
ret
lods
sbb
adc
xchg
mov
pop
ss
mov
jb
daa
mov
pop
push
addr16
das
xor
push
push
fistps
push
stos
mov
pop
adc
pop
cltd
clc
mov
dec
sbb
call
xor
xchg
dec
stc
shll
mov
push
xor
and
sbb
lahf
or
mov
jnp
ss
sbb
sub
xchg
xchg
inc
push
or
inc
adc
or
aad
inc
scas
into
push
xchg
in
int3
repnz
mov
inc
dec
insb
scas
xor
cmp
jbe
clc
pop
xor
std
cmpl
push
jbe
xchg
push
xor
push
ret
adc
jmp
sub
test
add
ficoml
nop
mov
lea
mov
push
jecxz
pop
scas
xchg
add
or
lahf
inc
mov
inc
aad
pop
sbb
inc
rcll
push
xchg
add
mov
insl
and
pop
sbb
sbb
movsb
xchg
stc
add
xchg
inc
icebp
or
mov
ljmp
sbb
push
bound
pop
sbb
inc
lock
ljmp
inc
adc
clc
jp
xchg
ljmp
andb
jmp
adc
inc
out
fs
cld
cli
out
pop
std
cs
shll
cltd
cmc
idivb
xchg
out
loop
in
mov
std
aas
fiadds
xor
push
icebp
pop
jo
mov
push
cmp
js
lds
addr16
divl
call
add
shrl
sbb
lock
outsl
push
adc
dec
inc
ficompl
enter
jb
sub
shrl
mov
pop
xor
add
in
aad
jns
inc
sbb
or
shll
or
sbb
push
cmp
test
movsl
mov
neg
int
lcall
pop
xchg
mov
inc
mov
jecxz
cwtl
das
jno
mov
inc
adc
sub
lds
push
aaa
jle
enter
push
add
mov
xchg
pusha
loopne
fldenv
imul
and
sbbl
cmc
mov
sbb
add
movsb
popf
xor
mov
add
cmp
dec
xchg
enter
and
mov
inc
ret
inc
daa
fbld
xlat
jp
sub
sbb
mov
mov
add
mov
pusha
ljmp
in
sti
test
xchg
mov
lret
push
cmpsl
fisubrs
popf
xlat
gs
pop
test
jl
push
fcoms
stc
jns
ja
hlt
mulb
xchg
aad
jmp
aam
test
push
shr
jmp
jb
mov
jno
mov
imul
pop
sbb
imul
outsb
pop
pop
fisubrl
push
popl
cmpb
and
inc
jb
and
xchg
adc
loopne
add
es
ja
pop
insb
mov
inc
mov
scas
adc
xchg
arpl
int
inc
inc
jb
sbb
dec
mov
xlat
pop
xor
and
or
and
inc
mov
imul
jg
cmc
inc
lcall
push
mov
adc
sbb
xchg
aam
loopne
inc
mov
mov
jp
jle
loopne
mov
out
sub
pop
dec
stos
dec
aad
inc
jmp
jo
nop
lock
xchg
cmp
dec
push
cld
sbb
xchg
inc
and
hlt
adc
xchg
push
mov
mov
xchg
jbe
mov
jmp
inc
stc
xchg
pushf
sbb
test
scas
scas
rcrb
lret
mov
lds
mov
dec
jo
daa
imul
cmpsb
cmp
mov
stc
jmp
pop
mov
cld
push
dec
inc
inc
dec
fisttpl
bound
outsw
adc
inc
cmp
ret
sahf
inc
arpl
pop
lods
or
jmp
or
cmovnp
outsb
jmp
xor
mov
aas
push
jo
leave
into
mov
jmp
pop
mov
mov
jno
jo
stc
pop
dec
add
and
dec
push
mov
dec
push
and
std
jb
and
xchg
push
add
sub
or
fimull
fs
out
push
sub
push
xchg
repz
xchg
stc
pushf
leave
push
xchg
cld
adc
sbb
test
mov
or
aas
rcrl
mov
sbb
cmp
call
test
xor
int3
pop
push
decl
pusha
hlt
mov
jmp
and
and
pop
movsb
xor
aam
rcll
pushf
dec
cmp
jns
lcall
dec
mov
lahf
jb
mov
pusha
test
xchg
or
pop
insl
push
divb
out
ret
in
and
xor
rcrl
mov
add
push
and
lea
mov
or
add
enter
sbb
cmp
nop
fwait
jae
xchg
dec
pop
cld
js
scas
push
outsl
add
xchg
mov
pop
or
out
popf
inc
imul
ret
loop
mov
arpl
mov
out
jne
mov
scas
dec
cmp
push
daa
push
adc
mov
jg
sbb
mov
or
fcomip
adc
dec
gs
fisubl
sbbb
or
sub
lds
jge
pop
push
jae
scas
fwait
out
sbb
std
and
in
or
loopne
loope
pop
cmpsb
bound
aas
push
pop
sub
mov
inc
push
rolb
in
sbb
rcll
xchg
aam
test
scas
fs
jmp
jno
jns
xchg
inc
sar
mov
loop
or
push
mov
mov
mov
adc
jnp
fidivrl
out
stos
xchg
imul
outsl
loope
pushf
sbb
mov
xchg
lock
add
fdivp
ljmp
sub
outsl
adc
push
enter
sub
jg
xlat
mov
dec
fisttpl
in
enter
mov
loopne
xchg
jp
jns
adc
imul
push
jecxz
stc
divb
int3
out
xlat
incb
and
cmp
ss
movsl
cmp
mulb
out
out
pop
mov
imul
adcb
mov
jp
sarl
insl
shlb
cmpsl
fcoml
and
sub
inc
push
cmpsl
aad
or
leave
pop
cmp
lods
xchg
inc
adc
test
lds
idivl
lret
ja
add
dec
jmp
jmp
sbb
loop
mov
push
mov
sub
fistps
lret
sub
xor
scas
mov
lds
push
or
lcall
mov
shrb
out
cltd
inc
insl
and
jge
shrb
imul
adc
gs
adc
loopne
insl
dec
fs
into
pop
mov
sub
push
mov
nop
cmp
mov
lods
out
mov
and
inc
cltd
mov
test
or
insl
cs
popf
dec
cmp
fdivs
inc
adc
xchg
dec
pop
sub
negl
fisttpl
adc
push
cmpsb
pop
inc
dec
xchg
dec
imul
and
scas
jb
xchg
xor
std
inc
je
ret
aad
inc
xchg
call
mov
in
and
inc
dec
mov
jp
lret
ret
mov
mov
mov
fldenv
push
jb
jecxz
or
inc
and
or
xchg
int3
imul
mov
jge
movsb
push
pushf
dec
add
fbstp
dec
cli
push
jns
imul
mov
jecxz
jmp
mov
mov
ja
test
stos
std
pop
gs
inc
jb
idiv
mov
or
adc
ret
hlt
or
sarl
xchg
mov
mov
sbb
sbb
mov
loopne
clc
cli
xor
inc
lods
fwait
push
dec
mov
cltd
movsl
add
testb
push
mov
cld
es
lahf
cmp
mov
fucomi
adc
in
pop
mov
sbb
push
mov
movsl
js
fcmovu
clc
cmp
lods
mov
pop
outsb
sub
lahf
test
xor
dec
mov
ficompl
rolb
repz
fdivs
push
jmp
mov
popa
xor
loope
xchg
sbb
loope
cld
pop
mov
and
xchg
arpl
loope
adc
push
fs
dec
psrlw
inc
lret
adc
into
cmp
xor
nop
outsb
and
icebp
stc
or
call
sub
lock
mov
ret
or
mov
jo
jl
loopne
test
shrb
mov
sbb
sub
jnp
lcall
mov
inc
adc
insl
sbb
jae
popa
add
sbb
mov
dec
mov
or
rcrl
rcrl
arpl
ret
or
mov
or
hlt
les
dec
dec
rcr
push
ret
cmpsl
ficomps
xor
mov
pop
loop
pop
push
cmp
mov
xchg
sub
or
sbb
jne
fisubs
dec
jge
lahf
call
and
cmp
fbld
dec
lret
aam
icebp
inc
cltd
lahf
jge
lea
cmp
jo
dec
test
mov
push
or
sub
aaa
dec
mov
inc
mov
xchg
cwtl
sub
mov
and
popa
pop
xor
repnz
outsb
fsts
mov
jmp
lods
inc
stos
or
mov
adc
push
fidivl
xchg
cmp
mov
cmp
mov
xor
add
shlb
cli
xchg
stos
mov
mov
insb
ljmp
shl
movsb
pop
mov
dec
faddl
ss
loop
cmp
push
mov
dec
rorb
and
mov
xorl
clc
or
dec
cld
dec
inc
push
rol
xchg
in
push
movsb
cmp
shl
fcmovu
xchg
mov
pop
mov
pop
adc
adc
xchg
out
and
xchg
mov
outsb
pop
jmp
mov
ret
push
rorl
lahf
mov
test
fstenv
aam
test
xchg
dec
mov
or
mov
imul
sub
adc
adc
insb
push
stos
jo
daa
lods
jns
sbb
clc
mov
ret
ret
push
roll
clc
pushf
sbb
lock
mov
mov
mov
into
daa
dec
mov
stos
or
mov
xchg
mov
mov
mov
mov
jmp
dec
cmp
cltd
les
mov
or
pop
and
stos
push
pop
xlat
retw
jmp
popf
add
repz
outsl
xor
or
mov
scas
push
in
cmp
fisubrl
xchg
xchg
into
inc
push
scas
outsb
jne
push
xchg
jecxz
lret
or
imul
xchg
xchg
lea
aas
movsl
rolb
cmp
hlt
or
jp
cmp
aam
mov
enter
sub
inc
mov
jne
or
lods
push
cltd
jb
sbb
push
adc
cmp
loop
adc
xlat
xchg
xor
dec
iret
test
in
mov
xchg
pop
pop
ret
pop
mov
xor
rcll
wbinvd
dec
enter
jmp
pop
sbb
adc
cmpsb
push
xor
inc
sub
mov
mov
pop
lcall
pop
push
inc
push
or
sbb
adc
jne
stos
push
inc
mov
repnz
test
push
dec
cs
mov
std
jecxz
push
movl
xchg
sub
or
fisubl
gs
ja
icebp
aaa
push
jno
fimuls
sub
push
adcb
jmp
mov
out
inc
xchg
imul
rclb
test
je
mov
mov
xchg
test
sub
cmp
push
repnz
lahf
adc
jge
add
sub
mov
add
cmpsb
and
aam
jmp
dec
mov
fidivrl
mov
or
inc
frstpm(287
jb
mov
adc
cmp
cli
out
out
sahf
pop
cmp
sbb
mov
jo
xchg
fsubl
dec
in
jmp
mov
sahf
adc
jbe
jne
mov
sti
sub
mov
and
aaa
jne
inc
push
cmp
dec
jge
sbb
cltd
movsl
out
push
push
ret
mov
js
cmp
pop
dec
lods
mov
mov
in
pop
mov
push
das
jne
or
jle
ret
xor
test
inc
sbb
sub
fmull
test
or
insb
mov
sub
lcall
mov
inc
out
jle
xchg
sub
mov
cmc
mov
push
imul
add
icebp
sub
fldl2e
and
lret
or
imul
int3
push
add
mov
sbb
call
cs
ljmp
stos
mov
jo
adc
xchg
ds
lods
dec
fdivl
enter
in
sbb
mov
sub
rcr
fistl
mov
repz
push
and
jbe
pop
aas
cmc
push
push
sbb
or
imull
push
pop
sbb
inc
lock
dec
stc
cmp
out
cmp
int3
push
push
xor
aam
cmp
shll
xor
repnz
and
in
xchg
xchg
jecxz
stos
faddl
test
xor
jne
out
stc
mov
clc
notb
pusha
js
fidivl
mov
xchg
cld
mov
and
icebp
dec
xor
mov
fs
add
cmp
cmp
inc
mov
popf
dec
mov
fcom
cmp
xor
cs
fwait
dec
fwait
pushf
xchg
shrb
lret
and
mov
sub
divl
mov
divps
mov
push
xorl
in
jge
jecxz
xor
neg
cmp
push
fwait
mov
ss
das
jne
icebp
fsubs
or
push
sub
sbb
lock
cmc
lret
jmp
mov
push
xchg
pop
ljmp
fwait
test
inc
sbb
adc
repz
mov
xor
lods
add
or
cmpb
les
insl
pop
pop
adc
out
outsl
mov
xlat
inc
dec
movsl
jbe
imul
lods
cld
stc
pop
or
inc
ret
xchg
sbb
sub
jg
dec
cmp
push
sbb
mov
pusha
cltd
push
cs
adc
adc
int
sub
xor
xlat
scas
mov
xorl
mov
mov
and
jns
movsb
adc
jle
out
and
addr16
mov
jecxz
bound
sti
outsb
or
push
popf
shll
fldl
mov
pop
push
in
mov
leave
ss
mov
mov
and
xchg
jbe
idivl
jmp
stos
popa
xor
sbb
daa
adc
es
test
fiadds
js
or
loope
mov
pop
and
mov
jae
addr16
inc
shrb
les
psubw
xor
mov
test
jnp
ds
inc
ret
shlb
cld
cmp
lcall
nop
lret
add
dec
out
fsubl
ds
pop
sbb
add
and
or
fdivp
fadd
and
or
push
mov
sub
xchg
fwait
jecxz
js
inc
popa
mov
push
xor
pop
cwtl
xchg
in
jge
dec
xor
ljmp
sbb
adc
scas
push
cld
mov
in
pop
mov
push
push
es
call
sbb
cmp
sahf
rclb
pop
mov
sbb
jmp
mov
xchg
aaa
lds
xorb
out
in
lods
hlt
jmp
jmp
add
add
sbb
bnd
cmp
xor
pushf
add
push
fmull
insb
cmp
jne
and
es
les
shlb
je
push
arpl
ja
inc
aas
sbb
shrl
jb
add
mov
clc
inc
gs
adc
jmp
rolb
enter
lock
cmp
dec
test
push
or
loopne
or
xchg
mov
shrb
or
lock
subps
inc
pop
cwtl
mov
sub
lods
scas
xchg
je
or
js
fildl
push
xchg
inc
shrb
sbb
push
cmp
sub
dec
hlt
fwait
nop
ljmp
and
mov
int3
int
xchg
cmpsl
add
add
data16
xor
sbb
data16
jg
sub
mov
mov
test
jmp
cmp
test
in
in
xor
push
out
mov
andb
addb
push
mov
dec
sti
mov
dec
mov
scas
jno
push
daa
rorl
mov
aas
sti
pop
rcrl
sub
sarl
mov
xor
ljmp
xor
test
jp
xor
lret
xchg
pusha
sbb
adc
push
mov
stc
mov
enter
jb
sub
mov
rclb
xor
jle
popa
push
and
and
mov
mov
mov
int
dec
jp
aas
push
sub
negl
jns
xchg
mov
sub
sub
or
scas
sbb
pop
jo
mov
shll
addr16
cmp
jae
sub
pop
gs
lock
mov
test
in
imul
mov
mov
orb
pop
push
mov
lret
push
sbb
hlt
test
inc
push
imul
xor
pop
xchg
in
mov
adc
dec
jecxz
fisubrs
xchg
fsts
jmp
rcll
pop
jns
or
outsb
pop
pop
fucomip
xchg
rcl
jmp
fstps
add
jmp
sbb
nop
sub
jnp
test
aad
int
sti
lods
jmp
push
movb
js
stos
inc
sti
popa
pop
imul
clc
data16
in
iret
imulb
mov
dec
add
mov
test
rolb
xlat
xor
jle
gs
dec
sarb
das
sub
fnstsw
sbb
xchg
xor
mov
xchg
xchg
lods
pop
outsl
sub
push
fsubl
loope
xorb
fiadds
xchg
fs
insl
xor
scas
mov
sub
faddl
cmp
outsl
stos
stos
scas
scas
scas
out
pop
jne
ss
push
and
adc
loope
sbb
sarb
inc
or
in
fsts
sbb
or
pushf
pop
adc
mov
mov
dec
jle
mov
mov
ret
ljmp
popa
push
jge
push
xor
bound
dec
cltd
push
in
fidivl
sbb
fnstsw
gs
sbb
arpl
fwait
push
ror
adcl
repnz
movsl
arpl
push
sub
insb
popa
aas
pop
or
jae
pop
std
cmp
pop
call
lock
stos
add
or
and
dec
lret
mov
das
loope
jns,pn
lods
push
xchg
lods
lret
loopne
sahf
jbe
inc
add
lret
adc
sti
iret
jb
ljmp
inc
adc
adc
imul
fs
mov
shll
or
mov
mov
data16
lds
stos
inc
pop
stos
test
imul
or
mov
xchg
movsl
mov
enter
in
sub
jecxz
incb
pop
lret
jmp
jl
push
jmp
icebp
jg
or
stos
rcr
pop
aam
cli
jo
add
sti
aas
shrl
ss
in
jle
shrl
das
mov
orl
push
dec
mov
sub
in
idivb
pop
add
mov
fnstsw
mov
std
mov
ret
mov
or
adc
pop
aam
dec
mov
pop
ret
add
call
mov
cmp
lds
or
shlb
inc
mov
mov
add
jnp
repnz
in
or
fld
pop
cltd
out
hlt
mov
mov
jae
test
xchg
insb
jmp
xor
cmpsb
imul
aaa
shll
cltd
ftst
pusha
adc
movsb
mov
or
mov
rol
scas
add
adc
pop
mov
pop
test
lods
bound
jge
rolb
fs
inc
mov
aam
jp
mov
mov
daa
popa
popa
aas
rep
mov
adc
jo
cwtl
mov
les
shll
cmp
inc
arpl
xor
fimull
xchg
out
sub
pop
mov
idivb
filds
and
lea
or
loope
jl
jnp
jns
push
jl
andb
outsl
dec
sub
jl
jge,pt
cltd
cmp
loope
dec
fstpl
push
dec
sbb
cmpl
xchg
or
mov
outsb
bnd
sub
lahf
xor
xchg
leave
inc
sub
sahf
dec
out
xchg
xor
lcall
xor
mov
xlat
into
jbe
mov
pop
cld
lcall
es
jmp
pop
movsl
inc
and
adc
cmp
mov
lods
sarl
mov
pusha
dec
mov
inc
pop
or
lods
jecxz
jne
and
mov
nop
dec
shrb
addr16
mov
movsl
push
jne
clc
jb
pop
loopne
sub
cmp
lock
andl
adc
repnz
nop
push
mov
xchg
outsb
mov
or
pop
ss
push
xor
js
adcb
mov
inc
or
xchg
inc
or
outsl
mov
jle
aas
ljmp
ja
push
pop
xchg
dec
arpl
jp
inc
inc
xor
sub
dec
cmc
cmp
jb
icebp
inc
xlat
inc
call
cmp
adc
mov
cmp
inc
and
aad
aad
testl
nop
nop
pop
in
mov
data16
pop
jle
and
scas
cs
jge
test
add
bound
fiaddl
or
push
pop
and
imul
neg
jns
and
lea
mov
push
sub
xchg
sbb
jns
xchg
cmp
stos
sbb
mov
xor
ficompl
add
dec
sub
popa
fistpll
jmp
mov
adc
xor
jno
cmp
nopl
lret
aad
adc
subb
jecxz
aas
push
js
xor
push
add
popa
scas
aas
test
mov
int
add
je
jae
gs
lods
fildl
dec
adc
cmpsb
aad
xor
test
out
mov
sahf
out
jnp
dec
test
lock
push
aad
cld
rorb
cltd
andl
inc
cmpsl
cmp
adc
nop
call
mov
iret
bound
call
pop
mov
sbb
in
sub
sti
sub
and
es
mov
mov
adc
sub
push
xchg
inc
mov
pop
mov
icebp
push
mov
xor
loop
sti
addr16
stos
mov
fstl
push
sbb
mov
jl
adc
fldl
pmovmskb
jmp
or
sub
call
rol
rcrb
iret
or
jmp
adc
jns
fisubl
cld
mov
jb
jmp
sub
aaa
orl
sti
bound
movsl
jbe
ret
push
movsl
push
push
mov
jl
fcmovnu
mov
mov
shlb
and
add
push
rcll
jle
fdivr
mov
jg
mov
mov
inc
push
in
push
icebp
arpl
iret
jmp
popf
popf
out
push
icebp
pop
dec
mov
xchg
xchg
fstpl
sbb
push
call
add
out
mov
mov
pop
pop
test
cmc
xchg
loope
je
mov
cmpsb
mov
cltd
sbb
fdivl
cmpsb
push
mov
int
jg
repz
inc
int3
pop
jmp
fisubrl
lods
cmp
mov
mov
mov
aam
ja
and
inc
or
adcl
pop
sub
jg
mov
std
into
sub
mov
pop
xchg
add
test
call
fwait
pop
jp
cld
js
js
cwtl
xchg
sub
mulb
xchg
adc
xchg
lahf
ja
lret
nop
fnsave
andl
dec
mov
or
mov
in
jl
sbb
lret
andb
shll
sbb
int
sti
mov
cmpsl
inc
xchg
add
pop
inc
test
popf
jge
add
cmp
sub
mov
mov
adcb
sbb
mov
mov
mov
add
xchg
dec
push
sbb
sub
mov
cmp
dec
pop
sub
stos
pop
xlat
das
shll
xor
ss
push
cmp
jb
mov
and
outsl
lea
mov
push
rcrb
js
sarb
daa
mov
ret
sti
inc
loop
pop
mov
pop
pop
jmp
inc
pop
or
adc
pop
jbe
int
dec
mov
jne
cmc
add
lods
cwtl
divb
xchg
stos
shr
sbb
jg
shrb
or
lods
or
add
and
dec
je
imul
in
mov
lods
mov
sbb
test
stos
pop
add
xchg
jbe
in
add
test
fistps
ljmp
pop
jmp
push
movsb
rclb
es
xor
repz
leave
pop
ds
or
or
inc
loope
js
ficoml
repnz
xor
loope
mov
js
jl
pop
xchg
add
mov
and
and
mov
pushf
mov
imul
insl
push
jmp
xor
leave
push
mov
imul
ficomps
lea
sub
out
xor
mov
sub
or
shlb
add
mov
xor
adc
aam
out
and
jmp
or
mov
or
fsubrl
fisubrl
fs
xlat
je
sbbb
mov
fwait
dec
arpl
mov
xor
hlt
aad
clc
pop
addr16
adc
sub
jp
iret
adc
popa
xchg
lret
xchg
xor
or
xchg
outsl
fisubl
cmpb
xor
int
mov
mov
push
imul
pushw
jno
cmc
ljmp
mov
call
jecxz
stc
jo
lea
aam
cmpsb
sub
les
add
scas
enter
cmc
jno
sti
push
add
jo
call
movsb
pushf
into
sbb
loopne
jle
lcall
enter
in
push
push
repz
sbb
pop
insb
xor
inc
out
lods
jp
mov
cltd
scas
lcall
mov
invd
pop
popf
popa
inc
xor
push
jno
imul
adc
in
adc
cli
dec
adc
pusha
xor
jae
or
xor
or
adcb
mov
jnp
movb
leave
inc
ljmp
sahf
sahf
cld
cmp
cmp
movsl
popa
dec
insb
mov
jg
scas
mov
stc
sub
mov
adc
cmp
iret
mov
push
xchg
and
add
in
sub
ficoms
shrb
sbb
nop
mov
test
inc
mov
mov
cltd
mov
jbe
addb
cmp
rolb
push
add
xor
jmp
jns
push
mov
xchg
outsl
aad
mov
push
in
pop
or
xchg
pusha
lcall
dec
stos
jle
xchg
mov
xor
jp
les
push
pop
mov
xchg
push
repz
jnp
mov
addr16
leave
ret
cmp
sbb
test
fs
dec
inc
add
xlat
push
xor
stc
fcoms
in
xchg
call
icebp
les
mov
test
dec
sub
sub
popf
add
iret
push
in
in
idivl
inc
or
cwtl
or
ret
xchg
add
mov
scas
sahf
mov
xchg
js
cmpsb
mov
xor
xor
aaa
push
jmp
jnp
in
xchg
aad
mov
leave
push
mov
je
or
call
jns
das
mov
leave
iret
out
dec
movsb
add
fadds
jmp
leave
pop
leave
jmp
mov
mov
aad
test
pop
or
push
fiaddl
or
cmp
pusha
mov
cmp
mov
lea
jp
out
xchg
sub
ja
in
or
ficompl
loopne
fcomi
and
rcl
outsb
jo
mov
and
in
mov
add
push
cmp
adcl
scas
mov
jnp
mov
xchg
add
inc
lcall
cmpsb
sbb
lretw
mov
mov
lds
ret
sahf
std
jns
add
fwait
cmpsb
inc
pushf
sub
jl
sbbl
fmul
shll
xchg
imul
fwait
sbb
cli
icebp
ss
ja
das
aam
out
xchg
clc
daa
je
cmp
stc
cwtl
pop
loop
and
push
mov
std
negb
mov
in
push
or
pop
dec
stc
stos
adc
pusha
xchg
cmp
gs
out
jne
je
cwtl
outsl
xchg
pop
test
test
nop
cmc
mov
out
popa
lahf
orb
jns
adc
xchg
mov
pop
dec
ficomps
ss
xchg
lret
fdiv
test
scas
sbb
dec
mov
add
sbb
xchg
andb
aas
pop
aaa
jp
aaa
bound
fwait
jno,pt
inc
and
lret
push
xchg
cmpsl
icebp
outsb
sbb
test
jnp
enter
mov
orl
jnp
arpl
movsb
lods
js
shll
dec
in
popa
jns
push
xor
sbb
stc
or
imul
repnz
iret
stos
testl
sub
cmp
lods
lea
stos
out
call
je
push
xchg
aaa
pop
cmp
repnz
or
inc
pop
outsb
popa
fldcw
pop
nop
imul
mov
aam
testb
cli
cmpsl
in
dec
aas
sbb
lds
fwait
cmp
rcrl
and
popa
adc
ret
and
xlat
ret
loop
scas
add
pusha
int
xchg
in
jo
repnz
add
or
pop
cmp
pop
add
jo
adcb
out
enter
hlt
and
cs
pop
es
xor
icebp
mov
or
jg
mov
mov
xchg
add
aaa
std
push
cli
mov
lods
jg
sti
mov
lea
xor
jo
mov
inc
mov
add
insb
push
movsb
scas
mov
push
adc
jg
mov
adcl
out
icebp
cmp
xchg
mov
xor
sbb
stos
and
inc
jp
mov
sub
repz
mov
cmp
inc
and
iret
cld
iret
int3
or
sub
xchg
sbb
and
jae
inc
xchg
shlb
dec
cmpl
inc
imull
test
addr16
cli
pop
cmpsl
sbb
imul
mov
dec
mov
pop
gs
shll
xchg
lret
loop
subb
mov
sub
sarb
aas
ret
lret
mov
xchg
pop
cmp
notl
jecxz
shl
push
rcrl
inc
fwait
xchg
cwtl
or
sub
je
mov
add
test
daa
leave
xor
cmp
lret
and
inc
mov
pop
mov
aaa
xor
xchg
pop
mov
inc
cmpsl
in
jg
arpl
push
mov
hlt
sahf
or
mov
call
insl
mov
xor
add
aad
out
mov
add
and
mov
loopne
mov
dec
stc
push
pop
dec
sbb
scas
xchg
sub
ret
enter
inc
popf
mov
push
and
sub
popa
insl
add
cmp
std
cmc
lcall
clc
add
data16
sbb
xchg
cmc
in
sbb
fwait
negb
je
mov
into
fimuls
je
mov
add
adcb
ret
aaa
or
lcall
sbb
out
das
mov
lds
clc
mov
inc
sub
lcall
js
fists
jb
adc
dec
shlb
loope
cmpsb
idivl
mov
push
dec
mov
mov
adc
inc
xor
out
das
adc
shrb
push
jge
subb
xchg
fcompl
ja
loopne
xor
scas
sub
pusha
fst
ja
cmp
xchg
mov
jl
xchg
sbb
cs
rorl
int
and
ret
mov
dec
mov
push
outsb
sbb
jmp
xchg
pop
mov
daa
xlat
scas
mov
scas
ljmp
icebp
mov
stos
ds
stos
and
xchg
or
dec
jle
and
js
test
adc
dec
aam
dec
sub
outsb
daa
sti
imul
mov
lret
push
ja
cld
xor
popf
push
ljmp
mov
in
jge
aad
mov
add
lock
cli
out
vpaddsb
ret
push
mov
xor
xor
sub
add
jbe
mov
icebp
in
fcmovne
jmp
mov
inc
insl
leave
add
mov
add
push
inc
shrl
jno
sub
rorb
xor
adc
mov
stc
call
mov
mov
inc
adc
mov
dec
outsl
xchg
out
add
jne
les
imull
orl
inc
outsb
adc
xchg
pop
mov
xor
push
jp
es
in
or
imull
sub
rorb
in
addr16
pop
iret
pop
outsl
cmc
push
loop
fnstcw
adcl
adc
lea
in
rorb
loope
and
jp
push
mov
test
mov
cli
and
sub
arpl
scas
push
push
test
adc
inc
cmp
in
inc
repz
outsb
loopne
xchg
adc
leave
push
in
cmp
pop
leave
pop
lods
shlb
int
jle
insb
out
adc
pop
adc
mov
mov
std
rcr
lock
jno
jecxz
fisubl
ret
jl
sub
cmpsb
jae
loop
jmp
jl
shrl
jmp
test
xchg
aas
inc
mov
lret
fdivs
pop
jle
bound
pop
shlb
pop
bound
lods
mov
dec
rep
imul
xchg
lds
cmc
pop
xlat
push
sub
loope
les
inc
rcr
cli
imul
outsb
xlat
outsb
repnz
dec
xchg
test
fsubrl
ret
sbb
out
xchg
cltd
add
test
faddp
xchg
lahf
les
mov
add
mov
mov
dec
lahf
dec
sub
fisttpll
add
and
jb
in
daa
and
push
int3
adcb
push
jmp
int
mov
mov
jae
lret
cmp
iret
imul
leave
out
xor
cmp
fs
aad
lods
lret
inc
dec
or
pusha
add
loopne
add
add
adc
jg
loopne
aaa
cli
ret
movsb
xchg
and
xchg
sub
leave
pop
sub
cwtl
movb
adcl
push
cmp
sbb
ljmp
jo
jge
mov
fldenv
out
xchg
cmp
ljmp
xchg
shrl
mull
cmp
pop
sub
loope
mov
cmp
out
xchg
das
dec
into
xchg
mov
cli
enter
bound
xchg
test
sbb
or
dec
jl
adc
sbb
xor
inc
jmp
pushf
dec
push
sti
jb
fimuls
aaa
loop
or
mov
mov
dec
aas
cmpsl
andb
rcrl
xchg
cmp
sbb
push
ret
aas
mov
dec
inc
inc
push
dec
adc
push
pop
push
cmp
nop
push
pop
sub
dec
push
xor
stos
pop
sbb
or
push
cmp
shrb
xor
inc
pushf
push
faddl
and
fld
out
into
or
mov
inc
fidivl
ds
xor
cmpl
cmc
data16
jp
adcl
das
push
mov
out
mov
addr16
jmp
dec
notl
and
test
popf
roll
fwait
mov
pop
sub
popa
adc
scas
sbb
jb
cli
ljmp
cmpsl
ljmp
jno
int3
jmp
mov
mov
shll
popf
jle
fdivl
push
je
in
fimuls
out
shrb
pop
dec
or
pop
das
cmp
xchg
add
and
push
xchg
xchg
jle
inc
jge
pop
xchg
mov
jae
repz
inc
push
pop
es
sbb
pop
fstps
mov
mov
adc
adc
popf
je
xchg
xlat
add
jae
jmp
xor
jo
hlt
add
add
andb
out
dec
sti
cwtl
ret
stos
jne
xchg
sub
dec
pop
cltd
xchg
push
cmpsb
or
push
out
and
mov
stc
mov
outsl
iret
xchg
push
inc
mov
push
mov
inc
fisubrs
lret
add
not
xchg
aas
jge
sub
cmp
pop
mov
leave
inc
sbb
fwait
adc
fnstsw
mov
imul
cmp
stc
cwtl
lods
add
adc
pop
mov
adc
movsl
and
cli
aam
xchg
inc
test
xlat
or
xchg
cmp
mov
and
loope
scas
std
inc
jmp
sti
les
mov
jecxz
out
add
in
sbb
lods
sbb
daa
push
inc
lods
popf
cmp
fdivrl
mov
push
inc
cmp
jbe
add
pop
mov
adc
mov
mov
lcall
xor
jg
subb
add
jmp
xor
jae
mov
sub
xchg
daa
inc
icebp
shl
add
or
fisubs
jnp
push
addr16
or
leave
fistl
cwtl
jne
daa
lods
xor
jb
xchg
sub
sub
cmp
or
xor
sub
xorb
xor
xor
xor
icebp
lret
pop
push
lcall
xlat
outsl
and
inc
mov
jb
sub
imul
call
ret
jno
add
fcomps
sbb
stos
cmp
sbb
imul
jmp
mov
pop
ds
inc
int3
in
gs
into
pop
aam
dec
xor
adc
mov
jecxz
dec
les
nop
int
xor
fadds
push
popa
cltd
rol
cmp
aad
pop
and
jno
and
jnp
imul
arpl
push
xor
push
leave
mov
mov
fwait
or
jbe
loopne
fsubrl
andl
ja
lret
push
lret
xchg
jmp
outsl
or
xlat
add
jno
gs
xchg
push
fwait
xor
add
inc
int
push
adc
xor
pop
dec
scas
ja
lods
mov
mov
bound
push
dec
mov
mov
cmc
inc
clc
ljmp
mov
test
lods
lea
es
cmpsb
fcompl
adc
mov
stos
add
sahf
std
pop
jmp
and
fstps
das
or
or
in
sbb
dec
fdivr
xchg
dec
add
push
ret
jecxz
xchg
add
dec
sbb
out
mov
cld
into
jg
or
inc
rclb
mov
iret
mov
add
xlat
push
outsb
sub
fidivrl
sbb
jge
subb
add
jge
sub
ljmp
outsb
enter
scas
leave
mov
pop
add
and
add
testb
jp
out
mov
or
pop
cmpsb
inc
xchg
xor
add
mov
test
xor
cmp
ljmp
pusha
test
push
lock
cmpsl
adc
clc
push
push
mov
dec
mov
outsb
in
sbbb
fistpll
dec
sbb
inc
test
ds
dec
cld
movsl
cmp
fldt
mov
les
data16
xor
add
cmpsl
sbb
adc
cmp
xchg
mov
in
int
mov
mov
push
std
mov
adc
jbe
xchg
aaa
jp
xchg
jb
push
jg
mov
inc
pop
add
ret
aas
jl
into
adc
clc
stc
inc
xor
jnp
cmp
xchg
cltd
jl
xchg
and
adc
dec
sub
sub
xor
push
mov
mov
cmp
push
push
pop
sbb
mov
mov
je
sbbb
ljmp
mov
leave
adc
call
adc
cmp
inc
ja
mov
or
push
jns
mov
adc
shlb
fs
adc
mov
dec
jns
push
pushl
ret
mov
and
addl
add
add
test
daa
clc
test
xor
daa
rcll
daa
stc
jbe
scas
and
pop
loop
dec
hlt
cli
ret
xlat
and
and
test
inc
sbb
pop
stos
pop
pop
pop
ret
sub
je
xchg
bound
push
loop
ret
out
mov
mov
pop
adc
pop
lahf
lods
cmp
adc
stos
lret
adc
sbb
jno
add
aas
inc
ret
xchg
mov
xor
pop
mov
fsub
aaa
mov
dec
pop
pop
dec
inc
pushf
inc
out
rol
jecxz
sbb
orb
fidivs
mov
inc
push
mov
dec
dec
push
std
cmpsl
jg
jnp
mov
adc
mov
bound
imul
xchg
hlt
push
cld
decb
pushw
add
xlat
inc
aad
aad
das
lock
push
or
pop
mov
mov
sub
jno
cli
or
and
fistl
clc
movsb
jg
test
mov
sub
ja
adc
sub
dec
or
inc
and
nop
repnz
imulb
ljmp
lret
inc
inc
mov
call
sub
notb
movsb
pop
mov
or
cmp
adc
shl
movsl
cs
sub
cmp
or
mov
inc
mov
andl
aam
and
cmp
push
mov
pop
stc
dec
pop
push
andl
popa
and
sbb
pusha
ret
in
cmpsb
sbb
sbb
cmp
mov
ficompl
pop
out
push
addb
fidivs
mov
pop
ds
sub
fwait
lea
jae
push
cltd
lea
sbb
mov
sahf
insb
sbb
push
sub
jg
insb
stos
inc
fwait
lods
add
inc
dec
std
cmp
insb
pushf
jae
enter
dec
xchg
adc
test
and
call
pop
shl
sbb
push
pop
lcall
daa
mov
cmc
arpl
pop
jmp
cmpsb
ljmp
sub
arpl
dec
jl
add
pop
push
daa
test
push
xor
mov
roll
and
fidivl
cmpsb
inc
roll
out
jb
sti
pop
mov
cs
popf
jge
in
les
push
lods
push
xchg
js
lahf
testl
movsb
out
hlt
xchg
ret
cs
filds
loopne
xchg
jl
xor
mov
sbb
insl
cwtl
push
sub
std
ds
sbb
xor
rol
fsts
lds
push
sbb
or
push
mov
and
loope
mov
sub
push
adc
jl
push
inc
adc
rol
mov
adc
pop
sbb
cmp
jno
dec
pop
xor
jb
aad
and
mov
pop
subb
and
aas
bound
dec
jl
xor
test
lods
icebp
jecxz
enter
push
out
nop
mov
mov
mov
inc
xor
test
js
push
push
jecxz
cltd
imul
dec
loop
fisttpl
pop
or
insl
dec
jg
or
fisubs
pop
mov
jge
std
into
arpl
cmp
int
lea
ja
rcll
loope
jle
and
dec
or
call
int
out
pop
addb
shll
lock
inc
mov
cmpsl
sti
test
xor
adc
cld
insl
mov
dec
adc
pop
adc
inc
dec
mov
jae
int3
outsl
adc
fcos
aad
xor
pop
jecxz
sbb
fcomp
in
and
es
lods
or
jecxz
and
adc
inc
jp
xchg
insl
test
push
shlb
aas
dec
mov
push
inc
sbb
addr16
xchg
sbb
cmp
pop
std
inc
mov
sub
lods
dec
sub
repnz
lods
and
push
popa
mov
lret
mov
rcrb
sub
mov
sub
mov
mov
adc
jecxz
lods
ret
movb
les
faddl
xor
add
gs
pushl
aad
ret
dec
out
xor
push
push
jbe
out
scas
jle
ret
adc
pop
lods
nop
jno
negl
pop
push
jns
mov
lods
jae
jno
fdivrp
push
or
xor
jno
fstl
ret
push
mov
xor
jl
mov
fwait
dec
cltd
das
xchg
mov
pop
sub
jo
xchg
je
pop
or
out
arpl
shll
scas
and
movsl
scas
stos
and
xchg
jle
add
mov
adc
aam
sbb
sub
aam
movsl
add
cmp
xor
outsl
pushf
stos
scas
mov
xchg
fsubs
dec
dec
cmp
adc
pop
fisttps
add
or
mov
rcll
dec
hlt
lret
test
jo
push
jg
adc
sbb
sub
inc
sti
push
jg
lods
jecxz
int
pop
rcrl
fsqrt
add
push
xchg
dec
mov
aam
add
lods
jne
cmpsl
dec
or
lods
sbb
or
test
ljmp
add
out
cmp
movsb
xchg
inc
mov
cld
lahf
mov
xchg
jle
ja
bound
pop
clc
std
mov
dec
xchg
mov
sbb
sbb
xchg
jae
xlat
inc
loopne
stos
cltd
test
push
xchg
inc
out
add
xchg
cwtl
and
sbb
and
mov
pop
out
movsb
cmp
and
in
mov
push
mov
lock
mov
xor
iret
xor
repnz
push
inc
test
jnp
imul
sbb
pop
fwait
sbb
ror
pop
pop
fistpll
imul
pop
in
push
push
mov
mov
in
pop
adc
xchg
popf
mov
mov
imul
push
or
scas
aad
in
les
cmc
jnp
ret
xchg
and
lcall
std
aas
pop
fidivl
push
push
test
and
xchg
or
jne
roll
rorb
loope
repnz
cmpsl
dec
mov
cmp
push
iret
xor
mov
push
loope
sbb
cmpsl
or
stos
mov
sub
pop
testl
jne
sbb
int
xchg
fadds
je
pusha
addl
dec
shlb
int3
jbe
ss
es
test
pop
cmpl
push
cld
adc
push
inc
in
js
fisttpl
lahf
xchg
enter
shll
stos
dec
and
and
andl
movsl
outsb
jno
inc
xor
mov
popf
aas
or
int3
sub
xchg
fistl
mov
call
sub
das
pop
xchg
mov
aam
fisubs
inc
mov
xchg
cmp
or
or
bound
ds
mov
scas
aad
mov
pop
int
pop
bound
repnz
bound
mov
jne
mov
std
xchg
xor
es
lret
cltd
pop
stos
add
xchg
mov
adc
or
pusha
mov
fists
popf
pop
fbld
jp
sub
mov
add
and
mov
and
xor
adc
outsl
add
cltd
xor
cmp
mov
xchg
call
xlat
ss
cmpsb
jae
es
dec
pop
mov
sub
sbb
pop
dec
jne
add
divl
sub
jae
hlt
loopne
mov
and
add
dec
out
sub
fistpll
dec
fadd
hlt
push
in
in
and
dec
push
fnstcw
sbb
inc
movl
adc
lcall
sub
cmpsl
push
fmul
push
lahf
fsubs
cli
in
jl
sbb
and
enter
mov
inc
sbb
rorl
mov
test
mov
cmpl
lock
pop
or
dec
fs
loopne
dec
jns
inc
imul
jo,pt
fisubrs
nop
fnstenv
jno
cmp
push
mov
adc
mov
dec
icebp
jne
pop
sub
xor
xchg
sub
push
jns
dec
adc
leave
adc
fdivr
cltd
push
or
mov
pop
add
xchg
push
or
jl
ja
aas
push
push
or
shrb
adc
imul
push
push
outsb
pop
das
pushf
adc
pop
mov
cmc
test
es
das
gs
add
aaa
or
cwtl
mov
cs
pop
popa
addr16
std
push
in
push
imul
xchg
mov
xchg
js
cmpsl
push
push
shl
and
or
fnsave
repnz
dec
jnp
mov
dec
pop
mov
sbb
jns
jo
aad
cs
daa
or
fldenv
lcall
adc
sub
je
sbb
pushf
out
jo
sbb
aaa
mov
cmc
mov
test
add
adc
lock
insl
xor
push
mov
add
jecxz
daa
jnp
loopne
in
adc
inc
repnz
movsl
dec
dec
mov
enter
enter
lret
push
int3
xor
js
in
out
aad
or
inc
adc
mov
insb
inc
fistps
pop
ret
fnstcw
pop
add
rcr
push
pop
pushf
push
ja
ret
nop
push
fisttps
mov
inc
dec
movsb
lcall
outsb
popf
sub
mov
and
sbb
shll
repnz
icebp
and
inc
in
xlat
sbbb
dec
mov
popf
push
mulb
and
inc
loop
pop
adc
sbbb
pushf
lret
insl
and
inc
or
popa
popa
and
pop
je
pushf
and
xchg
xor
mov
jae,pt
shll
sarl
call
xor
leave
adc
addr16
xchg
cltd
cmpsl
sub
scas
pop
cmp
lret
add
lea
add
incl
and
mov
mov
mov
shr
gs
cmpsb
mov
into
dec
loopne
mov
enter
xor
xchg
jle
insl
adc
jle
les
xchg
push
cmp
popf
xor
mov
mov
sbb
popa
out
lret
cltd
pop
xchg
push
xchg
shrl
sub
out
aad
push
mov
gs
adc
jmp
push
sbb
dec
adc
leave
or
mov
in
repz
mov
pop
dec
out
jno
cld
outsb
sbb
jae
aas
mov
call
jae
das
sub
gs
or
sarb
mov
xor
ljmp
pop
test
inc
or
testl
jae
add
adc
pop
addr16
das
xor
enter
sub
mov
mov
les
mov
pop
lea
bound
pop
int
xor
pop
jp
lahf
fdivrl
add
fbld
dec
sbb
or
pop
or
add
pushf
in
xor
mov
mov
fstps
xchg
xchg
inc
push
jae
xchg
mov
add
pusha
xor
iret
pop
dec
cmp
shlb
push
add
xchg
loop
cs
std
shrl
mov
push
ret
xor
cmpsb
xchg
or
pop
enter
xchg
dec
dec
in
repz
popf
cmp
push
mov
mov
mov
loopne
test
ds
hlt
sub
movsb
xor
test
sbb
jg
pop
lret
mov
jb
loop
push
or
aam
adc
cmp
cmp
lret
xchg
sub
adc
jne
or
and
push
sub
sub
cs
and
cli
daa
fdivrl
inc
leave
and
sub
and
push
sahf
and
pop
jae
inc
mov
insl
jg
lods
sqrtps
or
and
mov
jne
outsb
sub
sbb
and
jge
bound
xor
push
fmull
cmpsl
not
imul
jle
ja
imull
fistpll
je
jge
mov
mov
cwtl
sub
sub
xor
lret
jno
popa
cmpsb
repz
jae
aam
mov
dec
mov
pop
sbb
imul
pushf
mov
xchg
push
sbb
inc
loop
stc
nop
lahf
xchg
test
subl
clc
inc
inc
jg
lock
add
jbe
sbb
cltd
clc
lods
cmp
dec
das
popf
adc
ret
cli
xchg
daa
addr16
dec
iret
outsb
sbb
aam
popa
les
dec
mov
mov
mov
cmpsl
bound
scas
dec
jle
jns
lahf
sbb
lahf
inc
sub
push
loope
les
lahf
out
aaa
bound
mov
scas
sbb
subb
and
and
das
cwtl
cmp
mov
dec
lea
mov
jmp
jnp
bound
push
fwait
adc
add
enter
mov
inc
cli
stc
mov
stos
sbb
aam
stc
add
cmp
call
pusha
xchg
push
cmc
mov
sub
inc
pop
out
mov
lahf
popf
call
cmp
xor
jmp
ja
in
pushf
cld
rcrb
sbb
adc
pop
and
xor
sub
inc
enter
mov
fs
inc
or
stos
repnz
js
pop
or
fldl
mov
jmp
mov
or
lds
push
xchg
and
sub
jae
inc
lret
sub
ret
arpl
jmp
inc
xorb
push
cmp
pop
scas
insb
dec
clc
mov
or
fsubrp
ja
xor
cmp
out
into
int3
xchg
adc
pop
and
xor
mov
ret
mov
dec
or
lahf
sti
test
cmpsb
sub
dec
repnz
lods
xchg
je
loopne
outsb
ljmp
out
mov
aaa
out
xor
mov
xchg
and
mov
popf
pop
xlat
in
xchg
mov
xchg
mov
xchg
jg
or
and
dec
cmp
dec
push
in
bound
cltd
lock
add
mov
jmp
jb
sarb
loope
push
cld
ds
cmp
dec
push
sub
or
gs
push
mov
call
int3
jne
or
mov
ljmp
ret
arpl
mov
inc
inc
aam
stos
faddl
es
iret
and
sbb
dec
imul
jae
sub
outsl
or
out
or
pop
call
cmp
xchg
mov
mov
in
push
lahf
cmp
es
data16
adc
xchg
mov
imul
push
and
out
mov
sbb
jb
jmp
iret
mov
fiadds
pop
decb
lds
negb
inc
out
les
fnstcw
rorl
enter
mov
fcmove
push
sti
rcr
pop
hlt
out
fstpt
and
in
xchg
jnp
dec
adc
dec
out
fld
cmc
and
ja
xor
leave
clc
enter
mov
add
sbb
or
shrl
add
dec
adc
imul
push
xor
inc
loope
movsb
popa
xlat
ret
adc
cmpl
pop
pop
ljmp
aad
in
add
pop
pop
mov
icebp
mov
shll
xchg
lahf
loopne
and
push
daa
xchg
inc
xchg
fcoml
jne
inc
icebp
jecxz
js
mov
pop
xchg
push
and
shll
fstpl
add
sahf
stos
sbb
ljmp
or
mov
in
jl
cs
jbe
xchg
in
jecxz
inc
adc
jo
cmp
je
iret
pushf
jg
rcrb
bound
scas
scas
jns
les
xchg
ljmp
fs
and
scas
mov
sub
mov
enter
mov
inc
mov
inc
pop
push
out
loop
sbb
sub
es
test
int
lret
or
jbe
out
xor
adc
decl
sub
les
xchg
push
ret
fisubrl
hlt
mov
cmc
test
push
xchg
push
cmp
sarb
xchg
mov
inc
popa
in
mov
in
test
lahf
scas
test
in
fsubrl
jp
pusha
popa
stos
lds
sarb
and
fisubl
dec
pop
mov
sahf
push
jb
mov
pop
push
ja
idiv
adc
shll
loopne
add
xchg
push
dec
mov
cmp
ja
aaa
out
loope
clc
mov
mov
iret
scas
xchg
ret
jne
adc
stc
stc
sbb
rcrb
lret
adc
pop
das
or
es
pop
xor
or
lock
jns
cld
sahf
push
test
and
aam
add
ret
icebp
mov
jb
pop
dec
cli
mov
or
insb
push
arpl
mov
jns
push
add
sbb
push
mov
xchg
rcll
inc
jnp
icebp
dec
mov
mov
loope
and
jne
scas
insl
dec
pop
mov
ja
dec
cmp
in
sti
pop
aad
in
scas
out
cmpsl
jne
cmpxchg
shlb
gs
and
mov
sub
iret
push
imul
cwtl
movsb
xchg
sahf
mov
roll
outsl
mov
subb
aam
and
pusha
xchg
je
jmp
xor
das
jo
rclb
pushf
mov
hlt
push
and
push
sub
in
push
push
xchg
dec
repz
xchg
mov
inc
dec
and
rcrb
mov
pop
and
mov
lds
int3
dec
and
inc
cld
out
repz
mov
mov
addr16
xchg
push
mov
rcrl
pop
xor
idivb
and
fsubrl
cs
bnd
push
in
mov
push
mov
pop
stos
fsubs
je
insl
mov
shl
mov
lret
imul
mov
sbb
pop
dec
pop
pop
pop
call
lret
jle
into
inc
mov
je
movsl
ret
dec
popf
jge
adc
inc
sub
call
xchg
cmp
push
aas
shl
push
fidivrl
cmp
xlat
out
scas
imul
popf
add
mov
data16
or
push
cld
adc
pop
and
stos
mov
clc
and
jb
sub
add
pushf
or
aad
push
sbb
or
lahf
mov
insb
mov
aad
lods
cmc
rclb
fs
push
lds
add
shll
pop
jae
lock
cltd
mov
movsl
adc
push
outsb
fadd
push
movsb
sbb
xchg
leave
loope
insl
dec
mov
mov
loop
jmp
adc
push
insb
cmpsb
mov
lret
and
lds
imul
sbb
enter
test
dec
add
pop
jmp
aad
inc
insb
fwait
or
push
jno
in
xor
iret
test
lods
jns
stos
mov
jns
cmpsb
movsl
mov
pushf
aam
popf
ss
xor
flds
lods
mov
and
pop
inc
mov
lahf
xchg
dec
cld
sbb
mov
lods
mov
orb
in
es
xchg
jbe
in
push
xor
sbb
push
clc
inc
cmp
cmc
dec
pop
cmp
sub
arpl
popa
sub
sub
rcll
jp
mov
or
inc
imul
pop
out
xchg
xor
sbb
pop
or
jbe
push
push
nop
pop
imul
int
dec
xor
add
test
inc
fcmovne
and
mov
aad
jb
cmpsb
shrl
or
push
imul
dec
sahf
clc
call
fstpl
push
pop
das
cld
mov
ds
mov
xor
jne
testb
int
enter
jb
in
ret
repz
pop
test
stos
jno
dec
xchg
loopne
inc
sbb
data16
add
lock
cwtl
mov
xor
dec
les
or
mov
popf
popa
shrb
fsubr
adc
cs
adc
mov
jge
pop
fists
out
rcr
jno
in
push
movsl
jno
fadds
testl
lahf
mov
dec
push
pushf
sub
rcll
mov
push
test
and
jb
and
repz
inc
push
adc
xchg
xchg
int3
test
ss
pop
xlat
pushf
nop
rcrb
or
pop
jnp
dec
mov
mov
loope
inc
adc
inc
in
inc
adc
push
iret
xor
fcmovnb
popa
jne
stos
jg
sub
stos
in
pop
ja
pop
xchg
add
sub
fldt
leave
js
adc
ljmp
in
mov
lcall
jae
das
lods
sahf
insl
or
lret
cs
inc
pop
lret
js
popa
sbb
cmpsl
lods
jle
lea
aaa
lods
jecxz
cmpsb
mov
ss
jo
mov
adc
or
xorb
jns
arpl
mov
mov
or
sub
fisubrl
daa
inc
out
push
bound
dec
dec
and
mov
push
mov
daa
dec
shr
call
mov
xchg
repnz
fbld
push
aad
leave
xchg
filds
cmpb
mov
enter
popa
test
mov
and
mov
pop
repz
test
xor
lcall
sbb
cmp
out
push
and
outsb
in
sbb
pop
xchg
mov
outsl
mov
movsb
rcrb
fucomip
xor
mov
test
mov
lret
sbb
outsb
aaa
jmp
xor
mov
and
scas
and
jnp
adc
aas
push
fcmovnb
mov
push
std
notl
pop
in
int3
xchg
add
int
in
aam
bound
nop
outsl
daa
dec
xchg
out
rolb
scas
data16
and
push
and
dec
inc
adc
movsl
mov
xor
sbb
mov
fsubl
mov
popl
aam
jbe
push
mov
adc
gs
and
repz
sub
enter
push
mov
sub
add
sbb
inc
pushf
and
rolb
xorb
adc
sbb
jbe
xchg
and
xchg
sub
daa
xor
cs
cmpsb
jecxz
xorl
add
push
push
nop
add
incb
ficompl
xchg
mov
in
popa
pop
or
ret
xor
out
movsl
fwait
mov
add
and
adc
loope
pop
adc
mov
cltd
subb
xchg
int
gs
xchg
cmp
stc
orl
pushf
push
xor
out
pop
pop
mov
jl
or
and
cld
leave
inc
enter
xchg
sub
pop
inc
lods
inc
mov
lock
pop
mov
xor
pop
addr16
xchg
ret
push
repz
mov
lods
sbbl
cmp
jno
and
fisubs
mov
stos
loop
hlt
cmc
dec
bnd
enter
popa
inc
jl
sub
aas
adc
push
mov
dec
sbb
dec
or
das
les
push
inc
mov
inc
adc
adc
insb
in
mov
pop
cmp
jne
dec
sahf
mov
push
iret
mov
lods
push
jle
cmpsl
mov
repnz
aas
mov
test
xchg
push
pop
pop
xchg
rolb
cmpsl
pop
pop
adc
push
dec
imul
cmp
push
dec
shrl
scas
jg
or
xchg
imul
dec
inc
jmp
stc
pop
add
fucom
mov
push
sbb
popa
iret
add
pop
adc
xchg
je
pop
fisubrl
pop
jmp
pop
insl
outsb
inc
mov
aam
mov
sub
pop
ficompl
pusha
xchg
inc
mov
sub
sarl
lahf
pop
sub
sub
in
xchg
das
mov
sbb
lahf
sbb
lods
push
inc
pop
and
in
fdivrl
lods
inc
cmpsb
loop
xchg
cwtl
inc
sub
jl
sarl
pop
cmpsl
pop
aad
shrl
shlb
gs
out
das
out
adc
pop
cmp
stos
cmp
rcrl
or
aaa
int3
js
jno
fs
mov
testl
pop
inc
add
les
shr
or
cwtl
test
add
aaa
and
or
cmpsl
and
add
pushf
mov
out
sbb
lret
in
inc
insb
adc
inc
push
leave
in
loopne
dec
or
imul
cs
jns
and
cmpsb
scas
add
jg
stos
sbb
sub
push
inc
enter
sahf
clc
xchg
mov
pcmpeqw
scas
inc
cmp
jecxz
mov
inc
push
popf
lcall
lret
push
xchg
icebp
xlat
inc
adc
sbb
data16
sbb
lret
jmp
inc
nop
lret
xchg
bound
outsb
sbb
cmovb
mov
sub
test
mov
jmp
shll
cmpsb
dec
lock
xor
and
pop
nop
push
andb
dec
cmpsl
lret
pop
mov
add
fwait
xor
xor
mov
fstpt
pop
outsl
idivb
js
pop
sub
jo
push
xor
push
sub
mov
sti
sbb
in
cmp
bound
mov
in
xlat
ret
fs
pop
and
xor
dec
idiv
dec
adc
pop
movsl
sbb
int3
stos
shl
inc
mov
mov
adc
mov
ds
aam
call
mov
scas
js
in
jae
jle
adc
xlat
adc
xchg
pop
shll
jo
jne
cmp
out
add
xchg
sub
lods
dec
pop
call
icebp
push
jne
mov
inc
arpl
in
pop
cmp
and
mov
mull
cmc
pop
cmpsb
pushf
rcll
add
jmp
out
mov
mov
outsl
or
imul
sub
cmpsl
inc
into
or
rcrl
aam
sub
fdivrs
sub
xor
insb
cld
pop
jge
ficompl
movsl
pop
pop
push
adc
sub
outsb
out
xchg
mov
pop
lcall
jmp
mov
ficoms
out
push
mov
push
das
adc
lret
cltd
or
pop
mov
mov
mov
xlat
pop
dec
in
xchg
or
cmpsl
mov
sub
pushf
popa
cli
mov
movsl
out
xlat
mov
pop
inc
or
pop
mov
pop
arpl
std
pop
shrb
in
sbb
or
mov
popa
jnp
sub
jmp
ss
pop
es
cmp
xlat
push
jl
stc
cmc
ljmp
pop
popa
cli
leave
loop
xchg
jno
xchg
repz
cwtl
xor
fstpl
xor
push
add
cmpsl
mov
xchg
or
lock
in
cltd
push
jb
cmpsb
xchg
test
setne
mov
or
inc
push
push
push
cmpsb
imull
push
loopne
in
adc
popa
xor
dec
inc
int3
insb
ret
mov
stos
je
rcl
dec
ss
mov
dec
sub
or
arpl
out
inc
movsl
sbb
fistl
pop
inc
push
shr
popf
aas
dec
call
pop
lock
aam
jne
lods
mov
nop
jne
add
sbb
cmc
ffreep
roll
lds
push
pop
add
loopne
das
hlt
cmp
mov
jg
dec
adc
push
jp
mov
xchg
cmc
push
popa
push
sub
push
test
repz
ficomps
in
cmp
and
imul
pop
jp
sub
sbb
or
daa
mov
aad
mov
in
lahf
popf
mov
inc
aam
push
int
decb
mov
cld
inc
pop
sub
in
or
stos
stos
push
push
lea
add
dec
xchg
aas
inc
jne
in
aas
arpl
clc
inc
fstpt
cld
lods
das
data16
dec
loop
dec
lret
outsl
leave
push
cmp
pop
or
and
nop
imulb
ljmp
pop
jns
or
mov
mov
movsl
push
loop
jne
enter
sub
out
bound
inc
mov
out
repz
and
rorb
pop
jns
adc
sarb
rolb
movsl
loope
sbb
xchg
testb
xchg
flds
cltd
popa
mov
xor
pop
cmp
roll
out
or
or
and
es
add
insb
inc
inc
cltd
filds
fwait
xlat
movsb
sbb
push
pop
xorl
cs
inc
int3
sbb
add
push
jl
out
adc
in
and
mov
xchg
loope
jp
and
xchg
jmp
sahf
push
adcl
sbb
addb
cmpsb
in
sub
mov
add
outsl
je
rcrb
sub
mov
into
stos
xor
jns
pop
dec
mov
insb
addb
shrl
in
int
or
sbb
mov
in
xchg
mov
mov
xchg
movsl
inc
jnp
lret
mov
cmp
jae
repnz
jmp
ret
mov
jae
inc
fisubl
xor
test
or
or
inc
in
jmp
push
aaa
inc
mov
pop
inc
inc
arpl
push
adc
div
push
sub
or
dec
mov
xchg
mov
inc
sub
fsubl
int
push
dec
fsubl
shld
add
test
ss
xor
or
gs
cmc
into
xor
lret
aas
jb
loopne
jmp
mov
mov
dec
ss
mov
xchg
sbb
sbb
add
jge
push
mov
xchg
ljmp
pop
push
aaa
stc
test
jmp
jbe
aaa
out
enter
and
cld
xchg
sbb
scas
sbb
or
test
frstor
adc
sub
ljmp
push
pop
gs
mov
xchg
jo
mov
dec
add
pop
mov
les
sbb
ja
xor
fisubl
sbb
stos
ficomps
cmc
lds
adc
movsl
cmp
jo
pop
cmp
mov
out
fimull
or
scas
cwtl
dec
pop
inc
sbb
jg
jne
mov
pusha
nop
fstpl
fdivs
fldl
adc
fistps
inc
iret
imul
add
popf
scas
ss
xor
sbb
pop
push
aad
aas
push
inc
loop
repz
jae
mov
outsl
adc
cmp
push
movsb
fwait
and
stos
jl
sub
jecxz
ror
pop
int
fmuls
orb
sbb
inc
push
and
push
shrb
mov
sahf
cmp
or
cmp
sub
shlb
jle
push
pop
out
sub
jp
jno
mov
jle
rcrl
add
popa
dec
and
shll
mov
dec
jecxz
lods
jnp
push
xor
aad
fnstenv
jnp
jle
mov
hlt
mov
es
pop
adc
or
notl
shrb
mov
xchg
sbb
dec
xchg
add
mov
or
stos
enter
push
out
mov
stc
ret
je
arpl
push
ss
sarl
jo
js
ret
loope
imul
mov
adc
and
jne
sbb
leave
sbbb
stc
or
push
insl
dec
stos
jg
adc
sbbb
sub
xchg
bound
shlb
repz
xchg
std
stos
ficoml
cmp
push
setbe
mov
mov
push
mov
loopne
cs
push
pushf
je
sub
out
jle
out
dec
gs
jg
inc
je
xor
mov
idiv
and
es
jp
xchg
lds
mov
aaa
popa
adc
xor
lret
fisttpl
test
stc
lcall
dec
ffreep
adc
or
adc
xchg
mov
jae
push
jge
push
leave
mov
dec
testl
fs
je
mov
sbb
add
pop
push
pop
cwtl
sbb
enter
lret
scas
mov
or
daa
sbb
ljmp
mov
mov
mov
jbe
jae
out
pusha
sub
sbb
cmp
sub
inc
arpl
and
mov
lahf
sbb
dec
inc
lcall
add
jmp
adcl
adc
fcmovnb
loopne
and
jg
dec
ss
and
jecxz
stos
cwtl
in
in
add
mov
push
les
int
int
or
push
sub
inc
iret
lret
std
shl
pop
ja
xor
jbe
out
mov
sti
xchg
imul
repz
ret
test
movsb
cmp
add
xchg
stc
push
mov
rorl
nop
cmp
aas
jne
loopne
leave
jp
xor
mov
add
cmp
ds
mov
add
imul
dec
dec
xor
dec
cmp
sbb
and
jg
arpl
mov
andb
mov
jp
lds
repnz
out
pop
aad
imul
sbb
dec
test
dec
fistps
cmp
in
adc
push
ret
and
dec
push
push
xor
jno,pt
mov
in
sub
push
scas
into
push
cli
xchg
pop
lds
and
sbb
clc
sahf
cmp
out
cwtl
adc
xor
mov
std
push
push
jecxz
clc
rcll
mov
enter
or
push
jle
les
lcall
dec
adc
push
clc
pop
arpl
cmp
popa
lock
inc
mov
sbb
popf
les
stc
inc
xchg
mov
lock
cmp
mov
rorb
out
nop
inc
repz
jae
add
inc
sub
ljmp
xchg
push
out
div
adc
pop
cmc
pusha
cmp
xor
mov
add
push
cmp
mov
cmc
jbe
pop
aaa
inc
fdivr
dec
xchg
notb
lcall
daa
mov
ss
stos
cwtl
sti
test
pop
cmc
pop
test
ds
scas
inc
dec
add
mov
push
cmpb
inc
orb
xlat
test
in
mov
and
scas
mov
adcl
insl
imul
xor
adc
les
jle
push
rcrl
mov
jae
jo
adc
fldenv
out
xchg
adcl
xchg
jnp
add
es
cmp
aad
loopne
mov
pop
enter
xlat
out
orl
insl
fbstp
or
fistps
add
add
inc
dec
lret
mov
cmp
xchg
adc
into
ss
leave
test
call
adc
aas
sbb
inc
dec
pop
mov
fstpt
clc
jnp
fwait
sub
pop
cld
cltd
push
les
mov
adc
shrl
inc
cltd
inc
sbb
add
fwait
mov
into
lret
and
cwtl
xchg
imul
roll
jp
mov
mov
popa
xorl
ja
mov
mov
or
mov
lret
jno
inc
xchg
push
or
sub
sarb
rcrl
out
or
data16
ffree
xor
out
push
mov
lds
jno
fdivs
imul
out
cs
push
in
addb
in
cltd
xchg
lcall
push
sti
jecxz
dec
ljmp
or
push
pop
jns
fldl
and
in
ror
scas
testl
repz
pop
jecxz
out
jl
lds
enter
arpl
out
in
jle
cltd
inc
fwait
pop
push
sbb
push
and
movsb
dec
sbb
test
or
mov
lds
jne
xchg
mov
xchg
xor
adc
repz
fstpl
call
imull
cmpb
pop
movsb
lret
adc
adc
mov
dec
jno
pop
lods
cmpsl
orl
fwait
push
fs
jae
insl
test
aam
lods
push
ljmp
test
sub
pop
dec
adc
das
push
sub
aad
leave
cmp
pop
inc
maxps
push
sbb
insl
mov
rdtsc
mov
adc
repnz
jae
stos
imul
ret
mov
clc
jp
cmp
jno
pop
push
dec
pop
mov
in
fcmovb
push
data16
jb
in
ss
push
pop
dec
dec
fldcw
lret
sub
add
rorb
mov
lods
pop
push
push
push
jecxz
outsl
mov
in
rol
jns
ret
sub
jno
inc
dec
sbb
das
mov
fmull
nop
jno
test
in
rcl
shll
xchg
cmp
add
gs
pop
xor
pop
push
mov
xchg
imul
xor
mov
in
push
aas
popa
sbb
jle
push
pusha
jnp
jno
xchg
add
xchg
push
mov
pop
mov
mov
xchg
rclb
rorl
popl
inc
mov
cmpl
xor
xor
inc
or
ljmp
lods
shlb
or
or
sub
pop
sbb
dec
add
cltd
xchg
inc
and
mov
rcrl
mov
test
jp
shlb
pop
or
add
push
movsl
mov
pop
popf
mov
sub
sbb
cmpxchg
in
add
sbb
adc
cmpsb
lahf
das
rcr
les
mov
mov
xchg
inc
lahf
mov
mul
iret
inc
pop
mov
outsb
addr16
imul
lahf
jno
rol
xlat
sub
aas
sbb
cmp
inc
push
outsb
dec
sub
cli
fcomip
loope
and
dec
mov
dec
insl
daa
dec
jae
mov
test
outsb
pop
push
rcrl
mov
and
data16
push
sub
dec
dec
push
adc
add
mov
sub
xchg
pop
xchg
pop
mov
jmp
mov
mov
icebp
ja
fsubrl
pop
mov
int3
or
adc
rolb
iret
cmp
jno
dec
dec
push
jo
imulb
mov
sub
fneni(8087
push
shrl
pop
adc
scas
mov
pop
mov
adc
lock
sbbl
lds
sbb
mov
shlb
jg
jle
jle
lcall
lcall
dec
pop
push
cmp
jmp
push
inc
addr16
je
out
or
in
outsl
jo
mov
add
dec
mov
jge
leave
cltd
test
in
jbe
mov
xchg
ds
sbbb
in
xchg
iret
and
bound
push
loope
push
cmc
add
ss
mov
in
fists
int
fdivrl
shlb
adc
xchg
stos
xchg
inc
stc
dec
mov
imul
xchg
cltd
js
cmp
mov
loopne
xchg
mov
inc
inc
inc
and
sbb
or
inc
pop
imul
aad
stos
inc
pop
pusha
ffree
jnp
push
push
add
test
movsb
sbbl
cmp
pop
movsb
or
int
pusha
add
pop
xchg
lret
cld
inc
cmp
pop
addr16
dec
pop
mov
hlt
lea
dec
mov
push
and
daa
cmp
lahf
out
enter
daa
pop
jge
or
pop
punpckhdq
pop
dec
push
gs
cmpsb
dec
xchg
cld
pop
cs
fxch
lea
adc
push
imul
cmp
test
mov
js
daa
mov
movsl
pop
test
ljmp
ret
inc
jp
jge
and
test
fildl
inc
add
push
add
or
mov
xchg
inc
mov
fwait
mov
jg
ds
push
mov
or
cmpsb
out
cmp
daa
pop
or
imul
mov
or
or
or
add
fs
cmp
pop
imulb
cmpl
aaa
add
mov
dec
pop
mov
xchg
inc
pop
loop
out
add
dec
jnp
popw
call
inc
or
jmp
add
punpckldq
sub
mov
scas
dec
cmpsl
mov
xchg
mov
jmp
or
in
stos
mov
je
lret
mov
rolb
leave
stos
inc
std
cli
jo
lock
stc
aam
ja
into
imul
mov
ja
iret
lock
inc
imul
outsb
outsb
adc
add
and
add
xchg
test
cmp
enter
cli
das
gs
shr
repnz
pop
std
push
jo
and
idivb
push
out
pop
popa
cs
jle
lock
leave
sbb
or
dec
xlat
pop
jmp
fistpll
adc
fnstenv
addr16
out
lock
cmp
mov
xchg
dec
jb
fnstcw
das
adc
add
in
scas
cli
outsb
xchg
sub
or
add
aaa
fisttps
push
push
adc
cmpsl
pop
mov
mov
outsl
mov
mov
inc
shld
sbb
add
jae
mov
idivl
xchg
movsb
push
mov
fwait
ret
rol
pop
xlat
dec
jbe
daa
rcrb
pop
pop
ljmpw
js
in
roll
xor
cmpxchg
lds
adc
ja
lcall
adc
and
push
test
arpl
outsl
lahf
jle
test
adc
sub
lret
loop
fidivrs
lods
lahf
jmp
arpl
lds
sbb
jne
pop
mov
mov
hlt
out
jno
jmp
sbb
dec
sti
int3
ja
push
xor
push
rolb
sbb
dec
inc
jo
loope
mov
push
flds
daa
push
rclb
test
xchg
mov
lods
inc
addr16
pop
xchg
orb
lcall
cltd
and
insl
dec
cmc
subl
mov
pop
iret
inc
sbb
lods
jb
loop
test
rolb
inc
aam
cmp
mov
xchg
cmp
ficompl
pusha
pop
or
xor
inc
dec
jne
cwtl
pop
fistpl
mov
pop
sbb
cmpsl
lea
sbb
cmp
push
or
inc
lods
xchg
adc
popf
adc
jo
inc
pop
cmp
mov
push
outsl
cmp
es
jle
xor
sti
sub
push
push
push
xchg
ret
and
mov
ljmp
jl
mov
ljmp
sub
push
flds
and
cld
xchg
and
in
add
es
stc
or
rcl
imul
push
dec
xlat
jb
jge
icebp
sbb
mov
enter
dec
mov
push
pop
add
lret
sbb
xchg
pop
inc
jmp
mov
jmp
out
sbb
lret
gs
push
mov
mov
add
push
lea
mov
mov
jae
mov
dec
jg
xchg
mov
lea
mov
adc
inc
xchg
int3
push
in
mov
pop
dec
sbbb
xor
adc
dec
cmp
pop
cli
mov
pushf
sbb
adc
mov
jmp
pop
jge
sub
sbb
sbb
movsl
jbe
mov
js
scas
and
into
fdivrl
popf
xor
out
sbb
mov
xor
adc
push
sub
stc
cmp
enter
add
mov
icebp
cltd
dec
test
mov
or
in
and
cmc
ljmp
lock
into
dec
mov
lahf
push
push
sbb
test
jg
fcompl
mov
inc
add
xchg
and
mov
xor
ret
clc
push
jl
mov
fcom
movsb
jmp
adcl
or
icebp
push
dec
stc
adc
and
xlat
clc
inc
push
js
pop
or
inc
jno
out
xor
scas
iret
arpl
shrb
jno
mov
cli
dec
int3
push
and
pop
sbb
sbbb
mov
sub
dec
repz
inc
mov
jne
inc
adc
jge
scas
in
push
jnp
jbe
cmpsl
imul
ret
sub
sub
arpl
cs
mov
mov
cmc
jl
loopne
cmpsl
imul
cli
in
sub
mov
ret
ljmp
mov
fcmovbe
cmpsl
jno
js
jns
mov
leave
pop
push
ss
idivl
test
std
repz
cmpxchg
mov
sub
jo
xor
push
push
pop
jmp
push
movsl
xorb
mov
movsb
arpl
imul
cmp
dec
xor
sub
shl
mov
xor
mov
xor
jns
aas
adc
daa
mov
lcall
xchg
fisttps
mov
loop
loope
lods
loopne
xchg
xchg
pop
sub
sti
scas
lret
iret
cmp
outsb
mov
fs
das
push
inc
ja
outsl
ds
fildll
enter
pop
cmc
filds
ficomps
mov
push
ret
aas
andl
inc
inc
add
dec
nop
lcall
push
imul
cmp
outsl
mov
lret
cmp
or
stos
xor
add
adc
fs
push
mov
pop
sahf
or
add
int
and
mov
stos
lods
dec
pop
ja
negb
mov
pop
inc
sahf
dec
lret
imul
cmp
or
mov
inc
je
sub
and
stc
and
enter
lcall
adc
out
pop
fldcw
cmp
sar
negb
repz
sbb
adcb
lret
outsl
adc
mov
fisubs
clc
lret
add
js
das
mov
andl
idiv
xor
cmp
jno
or
push
jbe
mov
icebp
lods
aaa
ss
inc
xchg
jle
adc
subb
push
jb
cwtl
dec
data16
dec
cmpsl
push
mov
les
fsubrs
cmp
sub
test
sbb
xor
pop
shlb
mov
and
enter
mov
mov
adc
jbe
push
fsubl
hlt
jg
and
loop
jecxz
call
inc
cli
jp
push
add
rcll
stos
test
push
pop
enter
outsb
push
sbb
inc
cmpsl
jmp
repnz
jp
xlat
cmc
aam
repnz
mov
mov
std
add
pushf
inc
stos
push
imul
adc
xchg
dec
leave
test
es
dec
cmpb
xchg
lock
fnstenv
testb
cs
sbb
adc
lret
xchg
out
cmc
mov
push
enter
pop
cmp
aas
push
gs
mov
mov
xlat
loopne
ret
fwait
out
jnp
jnp
jne
mov
push
mov
ds
mov
stos
leave
lahf
cmp
test
lods
mov
sbb
jnp
cmpsb
xor
sarl
pusha
ljmp
and
ja
mov
or
lret
inc
cld
ret
dec
dec
mov
psubq
movl
or
adc
mov
rcrl
pop
pusha
ficoml
lret
lods
inc
and
push
jl
pminub
repnz
loope
xchg
push
mov
leave
jae
cld
mov
mov
mov
fsubl
pop
jnp
add
push
int3
lods
test
mov
mov
ds
mov
pop
das
xor
jno
fisttpl
cmp
push
out
dec
repnz
lock
xchg
sub
in
in
push
mov
es
pop
cmp
or
orb
xchg
mov
pop
pop
repz
test
das
pusha
add
add
shll
pusha
inc
mov
iret
mov
inc
out
mov
imul
xorb
add
pop
inc
out
icebp
mov
push
ss
jl
push
add
enter
and
lret
scas
in
ret
addl
cld
ja
jp
int3
pop
mov
sbb
and
xor
das
inc
xor
xchg
adc
movsb
test
popa
frstor
jbe
stos
leave
insb
dec
mov
loopne
pusha
jno
imul
lcall
lock
inc
icebp
loop
mov
jp
in
aas
xor
rorl
jmp
sahf
scas
test
cmp
in
pop
mov
or
mov
and
rcrb
mov
jle
lret
dec
repnz
pusha
or
sbb
out
sub
mov
add
leave
jne
fbld
and
jle
fdivl
mov
enter
popa
mov
xor
std
lea
leave
out
in
adc
mov
and
out
jns
pop
std
test
mov
mov
jmp
inc
addr16
insl
mov
out
pop
mov
out
sub
faddl
add
scas
aam
fidivl
out
outsb
out
cmp
shlb
fdivl
ret
pop
imul
iret
add
addb
movsl
inc
in
xor
rolb
xor
addr16
cmp
dec
dec
repz
push
pushf
stos
mov
hlt
sahf
fisubrl
repz
push
loope
lods
jmp
lahf
outsb
cmp
sbbb
mov
push
mov
xchg
or
in
icebp
inc
mov
inc
stc
scas
xor
in
and
es
xor
pop
xlat
test
xchg
pop
xlat
dec
sbb
adc
mov
aad
nop
mov
int3
cmp
into
sti
pop
cmp
push
das
jecxz
mov
mov
lea
imul
xchg
and
int3
test
dec
xlat
daa
das
cmp
push
fbld
cmp
inc
push
fsubs
push
jl
scas
mov
testl
mov
in
int
push
sbb
xor
add
xchg
jmp
fwait
out
mov
cld
pop
mov
pop
mov
jnp
je
pop
scas
push
popf
fnclex
in
popf
or
pusha
pop
ficoml
pop
dec
sub
sub
push
bswap
cmp
and
stos
sbb
shr
ret
and
ret
sub
stos
shrl
push
imul
inc
sbb
sahf
xchg
lcall
popa
aas
sahf
xchg
fcmovnu
sti
inc
add
sbb
adcb
fcoml
pop
push
mov
rclb
mov
or
cs
mov
mov
push
mov
nop
mov
sahf
mov
mov
inc
xchg
xor
orl
out
movsl
or
push
hlt
push
jbe
pop
cld
adc
adc
xchg
sub
lret
pusha
lahf
aam
std
add
cltd
push
lret
sbb
pop
push
jg
in
stc
sbb
jmp
add
mov
cmp
pop
addb
jge
mov
scas
fs
xor
cs
inc
xor
es
and
fcmovb
out
xor
idivl
or
stos
add
dec
sbb
aaa
sub
adc
adc
mov
sbb
pushf
clc
dec
insl
arpl
sub
dec
jns
stos
mov
out
test
scas
data16
jbe
hlt
and
push
lahf
xchg
daa
fisttps
aam
mov
xor
dec
push
push
loop
jmp
cld
push
mov
jmp
dec
push
hlt
mov
mov
mov
sbb
ret
std
sbb
inc
inc
ret
daa
inc
mov
sub
fcomps
insb
lahf
shrl
lods
aaa
push
ds
inc
sub
fistl
cltd
dec
gs
mov
imul
xchg
mov
xchg
in
mov
add
dec
jle
jg
in
sbb
cmp
sarl
and
rolb
daa
je
or
cltd
mov
cltd
push
pop
cmp
iret
mov
xor
repnz
cmp
mov
fcmovbe
outsl
mov
pop
push
fisubrl
mov
popf
mov
andl
loopne
jae
or
in
outsb
rorl
sbb
test
popf
jle
and
leave
or
inc
pop
lock
inc
pop
je
push
mov
das
pop
mov
bound
popf
imul
lret
ja
arpl
mov
lods
sbb
in
cmp
jbe
or
hlt
sub
scas
push
es
sti
insl
lock
lahf
aad
dec
mov
cmpsb
adc
xchg
lret
aad
popf
add
sub
fwait
inc
push
jne
adc
movsl
or
das
pusha
xlat
sbb
mov
pushf
ljmp
mov
or
or
imul
jge
mov
jmp
idivb
daa
mov
sbb
aas
rclb
xlat
inc
mov
shlb
mov
aad
jp
xchg
push
shrl
scas
aas
inc
outsb
dec
scas
mov
incl
popf
lcall
cli
fadds
mov
testb
ja
sbb
xor
js
add
and
inc
ss
out
fiaddl
push
jbe
addr16
xchg
lds
jl
iret
repz
andb
outsb
jmp
repz
cli
mov
xlat
fwait
loopne
mov
jecxz
jo
add
or
shlb
pushf
mov
mov
mov
clc
stc
cmpsl
sti
jle
cmp
and
fdivs
mov
xor
cmp
sbb
jae
mov
es
push
add
fidivrl
sub
mov
sub
mov
dec
cmp
clc
pop
into
lods
xchg
cmp
negb
clc
sbb
daa
or
adc
popa
test
sti
mov
add
mov
scas
cmp
je
xchg
push
out
push
hlt
and
mov
push
test
pusha
inc
addb
es
push
push
scas
xchg
inc
sbb
xlat
cmp
std
jne
pop
adc
aas
aam
lahf
jge
cs
or
sbb
aas
mov
mov
insl
in
popa
or
lcall
sub
jmp
push
iret
outsl
mov
and
add
lock
inc
lds
xor
movsl
cld
jmp
inc
sbb
mov
fisttpl
mov
fcomi
mov
sub
movlps
push
mov
movsl
sbb
addr16
ja
add
jmp
nop
mov
imul
mov
pop
xchg
rcrb
jmp
add
das
adc
sbb
arpl
imul
push
cld
lods
sbb
divl
andl
cmp
jnp
or
or
stc
jle
sub
jns
mov
ds
or
test
mov
xor
mov
xchg
pop
xchg
xchg
stc
add
jg
push
loop
sbb
or
sbb
lret
push
std
aas
or
push
jb
call
inc
push
add
rcrb
pop
fistps
dec
pop
neg
ss
xchg
and
or
icebp
popf
out
xor
jno
adc
inc
xlat
mov
pop
inc
xchg
testb
pusha
cmp
sarb
xchg
add
xchg
test
in
or
inc
and
jl
or
sub
or
dec
lea
into
xor
mov
add
mov
jmp
popf
or
lods
lds
push
pop
mov
pop
call
cmp
mov
xor
adc
div
sbb
cmp
push
sub
and
test
loop
clc
xchg
xor
and
aaa
push
loope
pop
nop
mov
mov
enter
clc
test
and
cmpb
add
and
fcmovb
adc
sub
cmc
pop
lret
inc
adc
addb
pop
dec
in
dec
cmp
mov
xorl
mov
fstpt
mov
lcall
pop
flds
inc
sbb
push
bound
push
lcall
rorl
fcoms
ficompl
cmp
mov
push
cmpsb
pop
add
pop
xor
xchg
cmp
lock
jo
push
push
mov
xchg
dec
lea
cmp
addr16
arpl
fs
gs
out
xchg
add
outsb
mov
mov
mov
and
inc
popa
dec
ret
mov
hlt
in
aam
subl
or
push
push
mov
cmp
pmulhw
jnp
les
dec
inc
fucomip
sub
aam
or
fwait
in
push
xchg
mov
mov
jae
shll
mov
aaa
sbb
mov
add
dec
movsl
out
out
ret
imul
lea
addr16
mov
xchg
stos
pushf
jns
mov
jl
pop
int3
ja
inc
sbb
xchg
jg
add
xor
insl
jne
pop
jmp
push
repz
adcl
rcll
xor
adc
sbb
clc
sub
or
fwait
scas
fwait
inc
insl
mov
jne
cmp
cs
ja
int3
lock
sbb
lods
orl
cmp
cli
inc
dec
test
mov
xchg
scas
rcrl
orl
int3
fs
stos
out
jns
int
pop
fdivr
stos
aas
sub
int3
rcl
xchg
push
dec
and
stos
fs
or
imul
cmp
jg
adc
inc
mov
lods
popf
jge
jp
jbe
sbb
pushf
movsl
xor
test
loopne
test
jae
xor
mov
daa
pusha
lock
push
loopne
and
lret
cmpsb
fisttpll
jle
mov
lcall
clc
cmp
mov
cmp
adc
and
lds
mov
stos
mov
push
adcl
imul
xchg
jne
mov
jl,pn
rorl
jecxz
gs
pop
imull
iret
cs
dec
stos
sarl
ret
push
mov
sbb
in
cli
push
mov
and
enter
pop
pop
mov
hlt
cmpsb
push
and
push
stos
and
in
sbb
ror
mov
ret
push
dec
cwtl
ret
fwait
xchg
xchg
mov
rcll
xlat
add
pop
pop
lods
mov
stos
sub
pop
fcmovb
xchg
and
dec
pop
pop
movsl
movsb
mov
sbb
imul
cmp
out
and
leave
call
jl
lret
add
fmul
pop
fdivs
push
add
push
add
or
dec
pop
or
pop
push
vmulss
nop
xchg
xchg
jb
arpl
stos
cmp
stos
shll
faddl
cmp
or
xchg
pusha
testl
repz
jp
inc
mov
fiaddl
mov
insl
icebp
jp
scas
sbb
out
cmpsb
xchg
sbb
mov
mov
leave
dec
aam
cmp
jl
shll
sti
rcrb
lea
clc
lret
lods
mov
es
sbb
cmp
cmp
push
jbe
sbb
pop
sbb
pusha
jmp
jg
xchg
mov
daa
cwtl
add
pop
dec
rcrl
cli
rolb
mov
das
mov
aad
xor
das
mov
mov
add
jbe
negb
fnsave
sahf
les
movsb
jecxz
cltd
or
push
test
cmp
sarb
sbb
xchg
aaa
xchg
or
pop
xchg
cmp
push
insb
ret
adc
push
mov
mov
jae
mov
lods
mov
dec
push
cmp
fstl
pop
lret
xchg
jnp
in
sti
pop
scas
insb
fadd
test
int
jg
push
fxch
inc
inc
stos
nop
leave
hlt
hlt
xor
sbb
jecxz
push
sub
lock
fildll
jne
mov
mov
sbb
xchg
xor
cmpsl
fistps
jmp
or
xchg
inc
or
inc
pop
sahf
sub
outsb
mov
and
push
cmpsb
sub
out
xchg
test
and
xchg
int3
mov
subb
ljmp
test
push
jns
ja
iret
popa
aas
lcall
dec
ret
fsts
mov
div
sub
cmp
das
mov
xor
sbbb
mov
mov
in
mov
xchg
sub
aam
insl
pop
loope
sbb
orl
je
mov
jmp
loopne
nop
push
shr
or
xor
pop
shll
ret
outsl
dec
out
jae
and
insl
mov
add
les
push
pop
add
in
cld
out
faddl
arpl
loope
xor
cmp
jl
sbb
push
cmp
jge
out
or
push
in
out
adc
loope
insb
lahf
jmp
aas
out
push
daa
pop
iret
or
and
and
or
xchg
icebp
xorb
mov
adcl
aas
icebp
rcr
lods
sti
sub
jb
inc
in
inc
sub
xor
movsb
inc
mov
mov
out
or
xchg
iret
push
push
imul
bound
push
aad
jmp
test
cltd
popa
xchg
ds
mov
push
pop
jns
cld
xacquire
sbb
pop
mov
mov
das
cmp
cmpsb
push
in
pop
loope
addr16
enter
jns
es
sarb
lds
pushl
aad
cmc
cli
xchg
xor
push
mov
rorl
ret
fwait
mov
iret
or
push
rcr
insb
inc
jmp
es
adc
cwtl
jmp
test
sub
sbb
in
adc
andl
xchg
dec
jno
fwait
xchg
shll
addl
lea
in
ljmp
push
mov
andl
faddl
aas
daa
push
sub
jb
mov
mov
dec
mov
sub
dec
in
sbb
nopl
or
mov
cmpsl
cmp
adc
aaa
push
sub
subl
out
push
test
jp
push
xchg
out
mov
or
jle
scas
sbb
in
outsl
inc
pop
fs
jo
js
ror
rorl
sbb
bswap
nop
xchg
mov
xchg
xor
jbe
mov
sti
cmp
cld
xchg
imul
mov
push
int
popa
push
cmc
fs
sub
inc
cmp
out
lret
fnsave
xor
shll
fisttps
xor
pusha
cmp
add
cltd
rcl
addr16
shl
dec
add
mov
nop
ljmp
adc
fidivrl
mov
or
mov
shll
cmpsb
int3
movsb
mov
dec
cmp
add
mov
fmull
lcall
and
mov
sarl
add
in
in
xchg
xor
jl
addl
int3
out
fnstsw
int3
pop
sub
pop
insb
adc
add
ja
sub
cmpsl
dec
outsb
popf
xchg
adc
or
sub
js
leave
stos
or
in
repnz
push
das
cmp
mov
and
jle
adc
add
adc
jne
out
dec
jo
or
push
jae
mov
mov
int
add
mov
push
xchg
mov
lea
sub
pop
into
and
xchg
pusha
fisubs
jne
push
mov
cmp
or
adc
movsl
sub
and
insl
outsl
mov
push
jno
loope
adc
xor
push
pop
cmp
sbb
pop
inc
bswap
mov
inc
mov
lret
das
es
lcall
loop
lock
pop
jp
xchg
xor
fstl
or
fstl
data16
push
xlat
out
adc
push
clc
xchg
fucomi
mov
xchg
xor
scas
jecxz
int
shlb
test
cs
jno
dec
jmp
std
imul
rcl
add
adc
add
cli
mov
scas
sub
ret
jns
loopne
stos
adc
cli
pop
mov
dec
and
sub
mov
sbb
icebp
xor
sub
mov
ror
jg
imull
sbb
push
shlb
dec
les
xor
add
xor
mov
xchg
pusha
cli
lahf
je
sbb
stc
push
enter
push
lret
movsb
pop
cmp
andb
into
lods
jge
test
mov
scas
cmp
inc
mov
inc
roll
mov
cli
xchg
scas
aaa
inc
cmp
sbb
sbb
pop
xchg
decl
lcall
test
pop
insb
fisubs
add
test
out
push
dec
dec
cltd
ds
pop
push
js
out
sub
mov
and
in
adc
cltd
inc
inc
add
mov
fwait
lock
subl
pop
rclb
adc
inc
sbb
sub
ficompl
outsl
xchg
out
inc
je
add
daa
roll
sbb
nop
mov
mov
cmp
mov
dec
rcrb
scas
insb
sbb
xchg
or
cmpsl
loope
loope
inc
shll
jnp
jp
xchg
shrb
pop
ljmp
cmp
xor
mov
add
mov
xor
dec
in
dec
push
aaa
add
xor
push
ljmp
jge
inc
pop
push
aam
js
jge
cvttps2pi
or
ss
mov
jmp
out
mov
pop
out
repz
jo
push
mov
jb
hlt
add
outsl
mov
add
and
insl
add
std
push
lds
xchg
pop
lods
pop
lods
mov
or
fwait
mov
jbe
out
xor
mov
dec
sbb
and
cwtd
out
scas
lds
sbb
shlb
mov
mov
test
enter
imulb
insb
daa
and
in
fisubrl
daa
sbb
lret
mov
in
ret
addr16
and
xorl
push
ja
cmp
js
lods
test
add
ss
jl
cwtl
je
mov
xor
sub
inc
mov
add
push
xor
xor
aaa
or
roll
mov
arpl
test
mov
outsb
mov
cmp
adc
loope
pop
jecxz
mov
inc
imul
lret
add
inc
cmovs
mov
fmuls
fisubrs
push
push
sarl
jmp
push
and
mov
xor
cmp
or
outsl
push
ret
xchg
out
mov
frstor
or
push
jae
push
and
cltd
jecxz
and
popf
test
lods
xchg
popa
fmull
loopne
adc
lahf
xchg
mov
mulb
push
inc
add
jnp
sub
xchg
shll
dec
xor
mov
mov
fdivrp
decb
movl
pop
shlb
pop
inc
or
stos
inc
repz
popf
int3
mov
add
test
outsb
xor
test
jns
pop
rclb
xor
imulb
jo
mov
into
fwait
lds
push
sbb
xchg
jns
jns
push
cmc
roll
mov
mov
fdivl
mov
push
mov
cwtl
addr16
mov
pop
mov
fsubs
inc
dec
repz
ficomps
cmp
mov
jg
xlat
xchg
sar
shr
add
insb
sub
sub
adc
sahf
xchg
xor
mov
xchg
sbb
adc
hlt
jge
xchg
inc
out
cli
mov
fstpl
clc
jmp
lret
mov
adcl
xor
fs
adc
xor
or
and
aam
push
mov
movsb
jb
pop
add
insl
stos
xor
sar
mov
pop
xor
loop
sbb
jae
push
imul
jne
jae
subl
mov
push
xor
std
test
or
xchg
push
and
stc
push
popf
test
sbb
lahf
lock
mov
sbb
imul
fstpl
push
add
jno
arpl
pushf
and
stos
ds
or
xchg
jae
repz
dec
movsb
adc
popa
iret
arpl
xchg
test
and
push
lock
test
divb
mov
adc
fadds
jmp
leave
xor
popa
pusha
jbe
mov
xchg
mov
xchg
out
add
mov
ret
fldt
pop
mov
aas
lret
cmp
pushf
sub
or
icebp
mov
cmp
repz
imul
aam
or
dec
or
xchg
popf
adc
ficompl
cmp
fcompl
sbb
sbb
aaa
mov
push
xchg
push
outsb
pop
loope
test
gs
in
test
outsb
adc
jnp
sbb
and
cld
xorl
fmuls
inc
ljmp
and
push
dec
fcmovnu
jno
xor
jg
outsb
cmpsb
shlb
inc
imul
cmp
and
lcall
jle
shlb
adc
push
mov
mov
or
js
dec
test
mov
loop
bound
mov
das
in
das
xor
inc
pop
add
repnz
sub
mov
adc
mov
cmc
gs
shrl
dec
add
shll
out
fbstp
sbb
hlt
push
loope
pop
int
popf
outsb
mov
and
push
lods
insl
mov
les
iret
pop
cmpsb
push
nop
and
lcall
inc
pop
insb
and
add
jmp
pop
cli
lds
add
cmp
xor
fdivrs
mov
xor
cmp
scas
mov
loope
je
ret
fsub
scas
notl
jge
adc
cltd
imul
mov
jl
dec
xchg
outsb
pop
xor
add
fwait
data16
cmp
in
mov
xchg
jp
cmpsl
xor
fbstp
in
dec
sarl
cltd
loop
xchg
cmpsl
cmpsl
scas
lods
mov
mov
fstp
arpl
in
inc
and
and
mov
add
pop
jp
aaa
mov
sub
imul
std
out
push
jg
jle
pop
int
ds
mov
and
add
lcall
icebp
fwait
decl
jg
les
rcll
or
mov
call
sbb
sbb
xchg
bound
cwtl
and
sbb
jnp
outsb
sbb
push
mov
xchg
push
xor
out
negb
popa
gs
add
push
sub
mov
dec
out
cmc
mov
cwtl
gs
xor
push
push
in
adc
mov
inc
sbb
inc
add
pop
jmp
fimuls
std
dec
ja
hlt
addps
cmc
dec
addr16
cmc
pop
xchg
pop
addr16
hlt
jne
ror
or
pop
es
sbb
jecxz
imul
in
push
and
insb
pop
fucomi
sbb
test
push
fiadds
or
sub
push
mov
lret
test
pusha
loopne
lea
sbb
das
push
retw
aas
pop
cmp
mov
out
or
sbbb
dec
sub
jns
dec
mov
mov
imul
les
mov
xor
dec
adc
pop
shl
ret
sahf
xlat
sbbl
stos
roll
out
insl
loope
fdivs
sub
dec
lods
call
pop
sbb
xor
cmp
xorl
xchg
dec
aaa
movsb
jb
mov
mov
daa
mov
insb
push
fisubrl
daa
push
stc
pop
dec
sbb
fldenv
rolb
xchg
pop
pop
push
jo
insl
jnp
lock
mov
jne
fwait
inc
out
iret
test
xor
cmp
pop
cmp
cmpl
sub
xlat
or
out
aaa
and
jmp
and
lahf
sbb
xchg
mov
mov
sub
aam
and
out
jl
in
jb
mov
in
call
dec
mov
and
dec
lock
jg
and
out
or
fldcw
mov
repnz
pushf
into
push
jle
xor
add
ds
sti
imulb
insb
sbb
mov
sbb
pop
insb
jbe
push
dec
call
lcall
cmp
lahf
jb
popa
cmp
adc
movsb
fwait
mov
cld
cmp
pop
icebp
cmp
mov
dec
sbb
jne
mov
int3
cmpb
cmpsb
lds
int
xchg
xchg
jo
or
repz
fcomps
in
dec
cmp
jmp
jns
int3
mov
int3
outsb
inc
push
stos
jno
arpl
add
add
cltd
cwtl
push
mov
mov
adc
or
fstpt
sbb
cwtl
jns
nop
mov
push
sub
in
sbb
lds
scas
in
pop
stc
dec
jmp
cmp
sub
cmpsl
addr16
mov
lea
ret
jecxz
fwait
mov
dec
pop
mov
or
mov
call
call
aas
clc
out
xor
ss
data16
movsl
icebp
ret
lret
fsubl
stos
aam
lahf
out
orl
movsl
jns
addr16
inc
adc
xor
push
cltd
imul
dec
or
aaa
pop
shrl
nop
jae
hlt
mov
jmp
fs
es
int3
pop
arpl
lods
cmp
mov
psrlw
inc
in
or
mov
popa
insb
jg
add
jae
pop
inc
mov
ja
addb
clc
lea
jae
xchg
mov
sub
jmp
inc
mov
adc
in
aaa
sbb
jl
aas
mov
push
push
data16
stos
push
mov
imul
add
cmc
or
leave
cmp
in
sub
lea
fmull
mov
sub
sub
mov
inc
shll
fsubs
clc
sub
dec
xchg
pop
fwait
mov
jns
out
push
es
or
add
in
xchg
push
inc
mov
sbb
lds
imul
xchg
in
cmpsl
jbe
je
sahf
mov
insb
push
lret
hlt
xor
cmp
jne
decl
jp
divl
out
sbb
jno
xor
loop
sbb
fldcw
enter
lahf
add
jge
les
xor
addr16
lcall
je
push
inc
popa
inc
std
push
cmp
or
loope
das
aad
add
mov
add
jmp
pop
pop
mov
mov
xor
jne
jle
scas
mov
loop
cwtl
sub
xchg
es
pop
insb
xorb
je
sub
and
cltd
cmc
shr
or
jnp
xor
push
dec
dec
mull
push
mov
lret
sub
mov
cmp
jg
xor
push
pop
test
js
push
es
add
or
ja
mov
test
mov
jnp
into
sbbl
cli
aad
daa
ret
jp
jp
adc
stc
xor
insl
jmp
test
out
add
cmp
gs
movsb
dec
iret
pop
test
cli
loopne
sbb
decl
shlb
mov
lds
movsb
cli
mov
sub
pop
mov
and
jge
dec
jecxz
fidivs
mov
aaa
mov
out
and
mov
nop
loope
stc
jmp
sahf
mov
iret
test
push
inc
std
inc
sbb
repnz
dec
cmc
aas
iret
sub
mov
pop
lahf
sub
fdivs
loope
add
push
jl
mov
sub
notl
in
inc
loopne
dec
inc
lods
pop
sti
mov
inc
das
hlt
and
jns
and
jne
jbe
mov
xor
jl
jmp
lods
add
push
test
test
xor
cmp
lds
mov
les
jg
push
mov
cmp
xlat
or
jl
ljmp
mov
insl
mov
jo
lret
enter
mov
cmp
mov
dec
or
ja
rclb
rcrl
xchg
lods
jno
inc
mov
or
xchg
jo
xchg
aam
jecxz
jmp
ffreep
jb
xchg
out
mov
fnstenv
cmp
iret
push
push
lret
mov
ret
cmp
mov
test
ja
imul
push
inc
dec
jns
loope
mov
jle
out
mov
cmp
lds
jb
mov
test
aaa
stos
insb
inc
dec
cltd
ja
sbb
repz
das
lret
lds
pop
repnz
jbe
jecxz
mov
rcrl
adc
fdivrl
outsl
jbe
cmp
sti
push
out
cmp
adc
imul
xor
stos
mov
jmp
mov
lcall
shll
test
push
leave
sub
in
mov
cmp
or
xor
hlt
adc
loopne
mov
test
xor
jo
mov
outsl
and
arpl
xchg
repz
xor
bound
je
jns
mov
sub
mov
cli
insb
sub
mov
inc
fs
sti
dec
mov
imul
jmp
jl
jle
mov
or
rolb
jg
jmp
incl
sbb
dec
jbe
push
arpl
add
addb
cmp
cmp
mov
outsb
sbb
push
mov
mov
fidivrs
push
xchg
aaa
icebp
cmpsb
pushf
test
fwait
out
sar
int
insl
mov
dec
adc
shlb
add
lret
jo
lcall
xchg
sbb
ja
adc
clc
xchg
iretw
mov
xchg
adc
or
push
ljmp
inc
pop
repz
or
cmpsl
arpl
push
or
jo
je
dec
outsb
popf
xor
mov
mov
imul
out
mov
add
mov
iret
rcrl
loope
loope
jne
add
jne
int3
outsb
pop
mov
mov
dec
inc
clc
cmp
xlat
fwait
bnd
pusha
add
jmp
imul
outsb
movsb
lock
xor
call
fldcw
stos
out
adc
nop
sub
inc
nop
and
push
std
mov
dec
andl
arpl
mov
enter
jo
mov
sub
inc
jb
lret
jo
mov
xchg
in
addr16
andps
lret
cwtl
adc
sbb
cwtl
push
cli
lea
nop
icebp
cmpsb
out
stos
mov
popa
cmc
jge
out
add
shr
push
out
aaa
add
pop
andb
addr16
sub
xor
ds
xlat
das
les
fisttpl
mov
sbb
push
xorl
inc
xchg
push
jo
fs
and
push
imul
inc
dec
sbb
inc
popa
fs
dec
and
mov
test
add
into
and
mov
idivb
test
sti
les
outsb
push
and
stos
sub
dec
movsl
daa
arpl
std
test
iret
adc
mov
mov
xchg
jmp
push
mov
mulb
adc
pop
ret
dec
xchg
push
out
sahf
jbe
cmp
mov
xchg
out
push
test
ss
dec
arpl
xchg
push
mov
stos
stc
dec
or
stc
push
in
loop
lret
add
rcrb
pop
pop
aas
aad
and
inc
cmc
aaa
ljmp
sti
push
cmpsl
adc
jecxz
adc
je
adc
sub
mov
jl
dec
dec
inc
sub
fldt
lods
fists
push
cmp
jno
rcll
ja
dec
mov
cmp
mov
outsl
int3
std
sti
push
push
loope
xor
or
std
mov
xchg
shll
xchg
ja
daa
js
jp
xchg
add
inc
arpl
popf
jge
xchg
jl
aas
repnz
add
out
popa
dec
and
jmp
add
test
loope
testb
subb
test
jno,pt
cmpsb
adc
push
inc
fdivrp
mov
cmp
or
daa
or
jbe
mov
sti
mov
sub
xchg
fucom
jns
test
lea
and
add
mov
add
int
mov
popf
test
xchg
and
cmc
stos
pop
aas
jo
fcmovbe
sarb
push
mov
xchg
into
lret
dec
cmp
sbb
in
lcall
leave
sub
push
outsb
xchg
and
repz
push
mov
push
pusha
lahf
in
cmpsl
pop
cmp
lret
push
jmp
pop
mov
mov
jne
loop
gs
test
test
xchg
nop
xchg
in
xchg
jl
daa
xchg
mov
push
shlb
roll
jnp
sbb
push
xchg
inc
jp
pushf
push
or
ftst
push
or
dec
popf
cmc
ljmp
mov
icebp
push
addr16
movsl
or
out
std
jnp,pt
inc
lcall
and
repnz
lds
cmp
mov
pop
adc
cmc
nop
xor
adc
cld
jl
xchg
cmpsl
xor
shlb
pop
adc
fistps
aad
jae
scas
dec
mov
push
inc
sahf
push
push
jmp
fisubrl
icebp
pop
or
add
cwtl
and
push
or
jl
cld
adc
fwait
jl
or
fwait
sahf
arpl
cmp
xchg
push
ret
jnp
mov
sub
rcll
mov
cmc
aaa
push
jle
xlat
fdivr
out
xor
incb
mov
jp
popa
clc
inc
mov
loopne
cmc
loop
lds
jb
int
pop
cld
and
ja
mov
jae
into
sub
int
pop
ss
dec
pop
xor
ja
dec
stos
cmp
aad
std
and
push
inc
jl
push
inc
addl
xchg
loope
dec
and
mov
jg
adc
lods
out
pop
pop
inc
xlat
int3
jns
outsl
adc
in
idivb
sbb
mov
test
sbb
jbe
jno
dec
pop
jae
imul
lods
sub
pop
dec
jbe
or
adc
cli
ss
scas
imul
addr16
cmp
ficoms
out
arpl
movsb
cwtl
stos
push
pop
xchg
stos
je
mov
test
movsl
pusha
sbb
mov
adc
cmpsb
push
pop
mov
and
add
scas
aam
or
xchg
xchg
bound
in
push
mov
xorl
jnp
dec
xchg
bound
push
test
mov
dec
pusha
sbb
mov
in
sub
dec
or
imul
add
push
sbb
push
push
mov
sbb
adcl
test
cwtl
out
repz
pop
dec
sbb
jno
inc
movsb
push
mov
add
sub
pop
stc
cmp
and
popa
ja
jne
push
roll
insb
daa
decb
and
mov
pop
pop
xor
gs
inc
sti
lret
cmc
repz
addr16
or
jnp
xchg
daa
mov
dec
jmp
je
shl
psubb
out
jne
movsb
pop
loope
addr16
mov
cmp
pop
xchg
bndldx
add
aam
push
push
sub
mov
je
sbb
sub
scas
inc
rorb
in
inc
inc
adc
inc
bound
ret
mov
fistl
out
fsts
pop
cmp
mov
ja,pt
cwtl
and
in
jp
sbb
fisttpl
sub
mov
pusha
cltd
dec
ret
and
cltd
pushl
hlt
mov
jp
sbb
or
pop
std
cli
jmp
xchg
and
int
imul
subb
shll
fsubl
fidivrl
jmp
sub
sub
or
jae
test
adc
dec
fsubs
push
push
pop
cmp
int3
call
inc
mov
or
in
pop
dec
sub
fisubs
hlt
xchg
call
xchg
clc
jno
in
ljmp
lods
cmp
or
jno,pn
xchg
enter
fsubrl
xor
pop
jo
dec
sbb
rcll
and
enter
pop
int
in
mov
xchg
lret
insl
sub
jg
mov
inc
or
imul
mov
insb
int
inc
mov
jns
add
mov
and
pop
sti
aaa
mov
or
iret
adc
scas
push
movsb
push
mov
movsl
inc
jnp
test
xor
xor
int3
xor
or
lea
and
mov
mov
test
mov
hlt
pop
or
mov
sahf
xor
push
jmp
dec
stc
fcoms
in
adc
mov
pop
inc
jb
mov
and
mov
icebp
orb
xor
nop
jle
jp
mov
dec
outsb
jnp
sub
mov
pop
push
lock
movsb
lcall
jbe
add
or
dec
int
mov
or
xchg
jae
out
pusha
pop
jl
imul
sub
and
xor
pusha
rolb
mov
arpl
sbb
rclb
push
pop
push
dec
icebp
test
xchg
add
xchg
inc
cmc
std
jno
cs
orl
mov
ja
loop
adc
mov
movsl
fadd
dec
inc
ss
mov
int
pop
cmp
insl
cwtl
sbbl
sub
mov
movsl
sahf
sub
fcomp
sar
dec
mov
fdivl
arpl
jno
cmp
cltd
mov
pop
sub
inc
or
inc
pop
sbb
dec
push
daa
mov
and
push
movsb
mov
pop
adc
pop
mov
add
push
divb
stos
xchg
xchg
ret
imul
xchg
ret
mov
or
imul
add
cmc
push
pop
mov
fdivrs
xchg
aad
xchg
adc
movsl
push
sbb
pop
xlat
push
mov
add
ret
cs
or
wrmsr
xchg
jl
pop
jno
adc
inc
push
xor
imul
or
adcl
popf
add
sbb
js
lock
pushf
mov
pop
insb
ja
in
add
mov
jnp
xchg
dec
pop
xchg
jg
xchg
mov
out
jmp
pop
or
incl
add
test
jge
outsb
sbb
mov
sub
pop
sub
mov
cli
loop
aaa
mov
loopne
jmp
push
push
icebp
push
jp
in
push
fisttps
xor
xchg
dec
cmp
add
or
add
inc
and
sbb
sbb
xor
daa
xchg
push
ret
push
inc
fldcw
push
sti
xchg
ret
jl
cmp
cmp
addb
mov
push
mov
fwait
cmp
cmp
pop
lcall
jo
in
cmp
loope
xchg
jg
pop
cmp
pop
dec
daa
sub
lds
xchg
cwtl
cld
dec
test
sbb
lret
repz
roll
mov
or
pop
cmp
lds
push
ds
pop
sub
or
and
adc
fsubrl
mov
mov
mov
jb
cmp
sbb
sub
cmpsb
and
gs
roll
test
pop
jne
int
std
jo
ret
or
mov
std
loop
jle
sub
popf
frstor
shlb
decb
fidivrl
jb
mov
add
insb
scas
cs
inc
test
nopl
dec
stos
mov
ret
cmp
or
add
cltd
stos
and
cltd
dec
jns
or
ret
xchg
sar
clc
sub
jp
mov
sub
push
dec
lcall
mov
pop
fisttpl
and
sbb
int3
adc
inc
inc
in
int
lret
stos
sbbl
popf
mov
pop
das
sahf
push
push
jg
add
or
pop
cmp
mov
aad
xor
dec
data16
pop
or
add
jo
cwtl
xchg
ss
push
pushf
scas
mov
xchg
and
add
sub
or
inc
orb
into
ds
inc
into
or
mov
lret
out
out
lret
pusha
adc
cmpsl
inc
mov
or
cld
push
jmp
daa
ficompl
push
jg
gs
clc
orl
mov
lock
pusha
addr16
sbb
jmp
jmp
inc
popa
sub
popf
ljmp
xchg
and
and
ficompl
inc
add
aaa
mov
pop
cmp
mov
loop
fwait
outsb
icebp
fs
sbb
mov
cltd
adc
pop
fmul
inc
add
mov
lcall
mov
mov
jbe
and
jle
mov
iret
adc
cmp
popf
and
inc
push
cmc
subb
test
xchg
dec
and
cmc
mov
test
lock
arpl
repz
outsl
dec
or
addr16
xor
or
xor
movsb
push
mov
seta
lods
mov
cmp
insl
scas
dec
test
idivb
jecxz
pushf
jmp
push
xlat
cwtl
insb
mov
stos
fsubl
cmp
out
xor
int3
cmp
adc
mov
mov
or
rclb
jo
pop
imul
cmpsb
dec
and
insb
cwtl
jmp
in
repz
mov
ja
arpl
add
jno
je
clc
mov
lret
xchg
xlat
sbb
adc
sbb
mov
test
fwait
hlt
and
sub
cltd
arpl
mov
les
loop
mov
lcall
mov
dec
sbb
movsl
or
lret
add
sub
icebp
and
repnz
push
cwtl
adc
int
aad
fdivrs
aas
leave
pop
mov
repnz
stos
pop
cmc
in
dec
gs
push
xchg
pop
pushf
push
sbb
repnz
xchg
mov
jp
sub
or
push
call
adc
dec
push
push
lods
repz
enter
test
dec
cwtl
test
and
mov
adcl
shlb
push
cmpsl
sub
mov
xchg
movsl
ljmp
pop
std
insb
mov
test
jo
pop
lods
jnp
sbb
fsubrs
jbe
pop
mov
test
pop
xchg
ja
add
and
cmp
clc
xchg
dec
test
dec
inc
sub
pop
sbb
push
push
arpl
mov
cltd
add
xchg
lret
push
mov
xor
pop
jo
fcomip
adc
xchg
xor
xchg
sub
arpl
or
sub
cmp
jmp
ljmp
mov
sarb
js
sbb
icebp
popl
leave
mov
daa
shrb
sub
mov
mov
in
cmp
nop
xchg
mov
mov
add
shl
push
pop
cltd
adc
js
cld
push
add
shll
adc
mov
mov
imul
ret
inc
jg
dec
arpl
add
cs
push
mov
insb
sahf
ja
in
shlb
in
gs
add
adc
sbb
and
fcompl
or
push
stos
js
les
inc
loop
aas
mov
cmc
scas
scas
bound
sbb
je
sub
inc
push
scas
inc
bound
or
daa
test
shll
outsl
push
pop
mov
adc
fwait
addr16
sbb
popf
add
outsb
outsl
cwtl
push
mov
out
add
adc
aam
test
arpl
cld
push
repz
lods
jbe
jne
push
lea
fbld
ja
fwait
and
inc
push
pop
out
push
adc
push
inc
pusha
cld
mov
or
sbb
addb
sbb
inc
inc
mov
fnstcw
xor
lret
mov
fbstp
xor
inc
movsb
dec
adc
arpl
xchg
push
sbb
pushf
or
pop
movsb
call
push
repnz
jp
test
push
mov
inc
mov
pop
cmp
push
test
movsl
xchg
ret
adc
pop
push
and
mov
loop
cmp
mov
and
enter
popl
mov
ss
sti
imul
inc
inc
movsb
lcall
imul
shll
or
es
loopne
cs
push
dec
pop
stc
pop
mov
mov
mov
and
cmp
cmp
add
lret
mov
mov
gs
xorb
xor
loope
iret
lahf
pop
mov
or
pop
nop
xchg
jns
cmpsb
push
bound
lods
nop
inc
push
push
push
int
sub
lret
xlat
mov
ret
or
inc
mov
xchg
in
jg
mov
dec
jno
test
popf
aaa
xchg
cmp
add
sub
cmpsb
mov
aam
bound
or
mov
push
lock
ss
pop
rcl
mov
adc
xchg
inc
mov
xchg
in
lods
nop
sub
iret
jl
ds
dec
pop
and
ret
in
adc
clc
imul
icebp
lahf
or
and
imul
and
lea
mov
push
in
add
xor
sbb
inc
and
xchg
sbb
jge
or
add
lret
out
shrl
push
mov
or
cmc
jle
sub
mov
mov
in
inc
mov
dec
mov
sbb
or
cmp
xchg
test
fisubs
dec
andl
fbstp
inc
add
inc
or
cmpsb
outsl
dec
pop
cltd
sub
add
in
push
pop
or
cs
test
cmp
jnp
xchg
adc
and
push
cmc
iret
mov
adc
and
aad
fsub
mov
mov
icebp
test
inc
mov
push
sbb
inc
sub
and
sbb
sub
mov
mov
or
add
pop
pushf
mov
insb
rclb
dec
xchg
cltd
push
rorb
mov
push
lods
loop
addr16
jns
or
xchg
or
jae
add
fstps
cmc
sbb
hlt
pop
inc
stos
sbb
add
incl
cmc
ja
call
mov
mov
jbe
test
adc
mov
leave
and
or
cmc
xchg
pop
aaa
cmc
sti
outsb
cwtl
mov
into
jge
aam
movsb
insl
add
cmpsb
pop
mov
adc
xor
add
dec
add
hlt
rep
mov
mov
pop
xor
cwtl
or
push
popf
lcall
sub
push
imull
insb
std
icebp
lock
jmp
and
call
test
and
testb
aaa
pushf
sbb
repz
add
shll
ret
clc
ss
xchg
add
imul
mov
sub
in
adc
das
jmp
leave
out
pop
jmp
sub
stos
push
pusha
mov
and
sti
aam
in
fdivs
inc
xchg
dec
jge
aaa
sbb
lock
jno
leave
test
mov
jo
out
cmpsl
imul
adc
std
or
cmovle
inc
mov
mov
mov
out
push
movsb
pop
dec
dec
imul
vmovq
shl
xor
xorb
mov
imul
aad
inc
xchg
inc
fwait
mov
jl
sahf
imul
stos
push
out
xor
jne
dec
insl
and
cltd
mov
and
das
mov
mov
xchg
adc
and
pop
push
push
push
rcll
xchg
loop
hlt
push
sub
pop
ret
pop
and
ja
loope
cmp
sbb
lods
jae
inc
outsl
std
sbb
sub
adc
mov
jmp
adc
mov
mov
aad
sub
xchg
stos
mov
loope
sbb
jns
daa
pop
pusha
push
test
imul
adc
cmp
mov
ret
adc
cmp
rcrb
pop
jle
enter
and
popf
fwait
jecxz
scas
in
in
test
inc
xor
addr16
jbe
push
mov
cmc
jbe
ret
add
movsl
jecxz
sbb
xlat
add
adc
outsl
inc
loopne
and
jae,pt
cld
stc
iret
push
int3
jae
sbb
shll
shrb
dec
inc
sub
scas
or
dec
pusha
adc
aam
dec
adc
mov
pop
subb
sbbl
mov
cs
adc
pop
out
imul
and
fs
bound
add
jp
mov
cmc
adc
shll
cmp
andb
test
daa
aaa
sub
inc
and
frstor
notl
out
push
cmp
sub
lds
jbe
scas
hlt
or
and
dec
push
gs
outsb
or
mov
std
or
inc
shlb
xchg
out
lods
and
leave
lret
mov
or
test
test
aam
jns
push
inc
sarb
sar
cwtl
mov
inc
or
imul
insb
and
mov
mov
mov
pop
push
loop
insl
adc
fistl
dec
mov
sti
fiaddl
arpl
jle
pop
rorb
xor
sbb
and
push
cmpsb
je
in
aaa
sub
scas
notb
int
decl
lock
js
js
push
je
popa
pop
dec
dec
inc
sbb
push
je
ss
test
dec
pop
inc
test
in
ds
je
pop
scas
cmp
xchg
push
je
test
cld
in
mov
pushf
sti
xchg
cmovns
inc
dec
or
aas
test
push
sbb
test
mov
pop
fidivrl
pop
shl
cmpsb
pop
insb
push
mov
pop
jge
sbb
test
repz
xchg
cmp
data16
in
sbb
pop
mov
push
dec
xor
ret
jecxz
repz
xor
push
in
jmp
lods
adc
dec
insl
mov
outsl
add
mov
movsl
js
fwait
xor
jl
mov
movsb
pop
dec
jmp
sarl
and
xchg
inc
mov
cmp
daa
xlat
push
push
pushl
pop
mov
push
and
das
push
andb
filds
mov
nop
imull
inc
push
jae
fildl
mov
push
mov
mov
dec
les
inc
orb
clc
add
jae
arpl
getsec
dec
push
or
push
and
stc
xchg
push
pop
insl
mov
and
sbb
jnp
bound
inc
xor
sbbl
call
cld
adc
adc
xchg
mov
insb
in
sub
add
push
xor
repz
loopne
xor
mov
fadds
jno
pop
mov
mov
movsl
sub
orl
sarl
in
jno
test
push
mov
and
dec
sub
leave
sub
pop
in
push
dec
push
mov
push
pop
jle
aad
push
push
cld
std
sub
filds
les
cli
outsl
cwtl
jbe
adc
xor
jp
pop
fstpt
adc
loop
ljmp
cld
add
in
addb
adc
test
ret
push
les
push
lcall
dec
xchg
push
or
xchg
add
sub
sbb
dec
xor
shrl
dec
testl
cmp
jle
and
int3
rorl
xchg
shll
pop
std
dec
outsl
inc
out
sbb
inc
dec
xchg
mov
mov
ss
and
pop
lret
dec
pusha
sarl
push
jns
jg
shr
sub
popa
cmp
push
mov
push
dec
xchg
and
sbb
nop
and
repnz
out
bound
pop
xchg
dec
aad
pop
test
and
in
mov
jnp
push
insl
sbb
lret
inc
push
or
dec
loope
movsl
aas
fimull
insl
fwait
push
adc
xchg
pushf
push
in
pop
packsswb
pop
std
cmp
pop
fidivrl
outsl
xor
imul
push
ja
mov
push
loop
cmp
jo
rcr
inc
sub
fwait
pop
into
xchg
clc
outsb
and
fimull
xchg
mov
jo
into
fsubl
jp
xor
or
sub
test
ficompl
lret
mov
ss
out
inc
scas
sbb
lods
test
pop
pop
mov
popa
mov
add
cmp
je
and
imul
and
mov
or
xchg
mov
mov
hlt
jae
pop
jns
cld
in
das
dec
test
je
insw
jle
scas
ret
test
push
sub
hlt
clc
daa
popf
sbb
inc
insb
addr16
push
ds
inc
mov
sub
and
imull
adc
outsb
in
jb
adc
loopne
sub
xchg
sbb
mov
bnd
daa
clc
andb
lret
xor
xchg
ret
sub
ljmp
pop
scas
adcb
std
dec
dec
ljmp
jl
mov
mov
bound
or
leave
testl
inc
bound
push
fs
mov
xor
push
push
iret
xor
and
xchg
cmpsl
or
mov
mov
sbb
rcr
icebp
jnp
xor
and
and
mov
jg
or
cli
inc
lahf
or
mov
fs
test
jecxz
cmpb
fldl
sub
mov
cli
dec
mov
pop
mov
mov
cmp
jge
test
xor
mov
fnstenv
cmp
and
js
add
xchg
sub
lret
adc
dec
in
push
scas
int3
fstpt
cmp
stc
jmp
push
lahf
bound
mov
mov
pusha
xor
lock
inc
dec
xchg
jne
add
and
je
mov
ds
mov
aam
dec
cmc
in
dec
mov
mov
fidivl
sub
insb
pop
popa
sbb
leave
jno
js
mov
xchg
jl
loop
pop
setno
int
or
jae
or
bound
inc
xor
mov
push
sub
insb
divb
popa
dec
in
out
sbb
jns
or
or
sbb
test
mov
cmp
fwait
or
sbb
into
cwtl
scas
scas
pop
imul
mov
jo
sbb
or
je
lods
lret
inc
fwait
lods
push
fmull
insl
jb
lock
jno
faddp
xchg
icebp
loop
and
insl
pop
ret
xor
movsl
mov
leave
arpl
mov
scas
push
or
shll
fbld
mov
pop
fwait
dec
pop
jecxz
in
inc
add
sbb
ljmpw
shll
jns
sbbl
dec
adcb
or
jge
sub
cmp
inc
xchg
push
dec
rol
add
jecxz
insl
js
outsb
add
dec
inc
xchg
fs
mov
xchg
xchg
fnsave
jge
clc
mov
cmp
lea
push
push
jnp
xchg
jbe
cwtl
jg
subb
in
fs
pusha
sbb
push
scas
gs
insl
pop
mov
push
cs
push
push
lret
xchg
aam
loope
mov
mov
cwtl
insb
jp
pop
cltd
leave
sbb
xchg
loop
dec
loop
push
mov
repnz
nop
lea
mov
scas
sub
push
bound
gs
ljmp
xor
pop
ret
test
fsub
fwait
and
adc
in
sbb
pushf
cmpsl
sub
cmpsb
or
push
push
or
sbb
daa
xchg
jle
push
jnp
adc
dec
int3
iret
or
loop
mov
insb
insl
out
push
cli
cltd
in
mov
xor
lods
unpckhps
iret
lret
mov
rorb
nop
loopne
inc
pop
mov
sbb
testl
pop
mov
sub
push
scas
loopne
mov
lds
add
dec
movsl
int3
sub
fadds
jle
popa
pop
ljmp
xchg
in
aad
adc
test
lods
xchg
movsb
dec
fnstsw
mov
das
cmp
fnstsw
ja
jle
sbb
jg
outsb
fs
mov
call
lock
hlt
push
mov
out
cmp
jg
test
movsb
pop
and
mov
shll
mov
xor
les
movsl
pop
adc
flds
test
stos
dec
lods
rcrl
mov
adc
xor
aam
cmpsb
fnstenv
imul
leave
fists
outsl
or
add
push
sahf
jge
jae
jge
jns
scas
cmp
adc
cld
in
xchg
in
sbb
mov
in
cmp
ja
jae
and
adc
adc
movsb
xchg
dec
enter
out
sub
dec
sub
mov
pop
sbb
lcall
adc
jecxz
inc
pop
mov
sbb
scas
jp
shll
jecxz
add
test
ret
repnz
das
lds
or
aam
cmpsl
mov
cmp
in
icebp
mov
out
loop
in
movsl
dec
fnstenv
cmp
sbb
xchg
mov
cmp
push
out
mov
mov
xchg
lcall
fcoml
pop
daa
test
cmp
dec
xor
jecxz
mov
out
and
and
scas
outsb
inc
pushf
pop
cs
jb
cmp
std
push
aas
cltd
or
and
sbbl
ret
sbb
nop
daa
jae
div
cli
xor
xchg
repz
xchg
mov
push
rcll
loopne
dec
xchg
jb
pop
xchg
pusha
stos
hlt
fistpll
dec
loop
loope
enter
jo
xchg
cmp
pop
inc
adc
addr16
enter
add
imul
push
call
test
jne
rcll
dec
and
or
xchg
xor
testb
jge
cmp
popa
dec
sbbb
pushf
push
add
add
mov
daa
jmp
vmptrst
xor
andl
std
xchg
in
shr
mov
ljmp
cmp
pushf
imul
mov
adc
mov
xlat
outsb
pop
xor
sub
add
adc
push
sub
pop
jns
fnstsw
cmp
rclb
test
mov
ret
inc
inc
xor
shll
fldcw
int
mov
push
je
movsb
call
cmp
mov
sbb
push
stc
jge
add
pop
jp
jb
sbb
pop
push
cmp
mov
in
mov
inc
pop
das
pop
stos
sbb
enter
mov
mov
push
add
jg
adc
dec
mov
int
xor
ret
xor
sti
test
mov
push
mov
jge
fs
pop
lods
enter
in
inc
pusha
shll
ds
adc
jae
je
mov
incb
shlb
inc
call
shrb
xchg
inc
out
popa
add
outsb
popa
add
mov
cmp
xchg
push
mov
scas
add
mov
lcall
loop
jbe
pop
hlt
out
clc
pop
fadds
addb
adc
mov
and
inc
ror
rcr
in
mov
mov
ss
lcall
mov
or
add
rcrb
rorb
repz
mov
mov
rcr
and
fisubs
inc
inc
lret
add
pop
xchg
and
daa
pushf
xchg
mov
cwtl
cmpsb
lahf
xor
out
mov
aas
sarl
jg
lods
xchg
test
mov
pop
mov
and
jns
adc
js
and
xchg
sbb
sbb
mov
jb
movsl
leave
or
fsubrl
imul
scas
mov
push
xchg
out
adc
cltd
out
stc
mov
xchg
xchg
mov
pop
pop
add
mov
fucomp
les
jecxz
mov
imul
fucomi
xor
and
fbld
jecxz
add
call
adc
pop
jle
jmp
ss
popf
inc
and
in
sbb
clc
sbb
sub
push
icebp
arpl
jno
enter
test
mov
data16
mov
dec
int3
push
imul
pmovmskb
mov
xchg
xor
jmp
test
scas
stos
or
repz
sub
bnd
jnp
daa
push
lret
jae
sub
adc
fucom
gs
test
sub
xchg
lea
cmp
loop
ja
fst
ret
push
xor
ds
clc
mov
fidivrs
mov
pushf
mov
sub
sti
pop
jmp
xor
mov
cmp
xchg
sbb
mov
push
mov
push
outsl
add
add
mov
ljmp
xchg
sbb
mov
rolb
lret
and
jns
aam
outsl
nop
cld
lods
pop
xchg
outsb
push
sbb
xchg
cmc
inc
lea
lret
cltd
xchg
xchg
dec
pop
mov
jb
jno
mov
sti
aas
loopne
push
mov
and
shlb
ret
inc
and
cmpsl
push
sbb
repnz
sbb
iret
imul
sbb
xor
das
js
inc
sub
jo
ja
jno
mov
fcomi
inc
enter
aaa
inc
and
movsb
sub
cli
imul
mov
mov
cmpsl
stos
ret
xchg
aas
mov
pop
mov
ss
or
scas
sbb
ret
jp
or
sub
pop
cs
lds
lcall
xchg
in
jg
inc
mov
loop
mov
mov
or
fcmovb
push
cmp
mov
sub
pop
mov
cli
adc
in
and
sbb
mov
pop
popf
inc
cmp
ficompl
mov
or
icebp
enter
and
aad
out
ja
xchg
jbe
and
mov
mov
pusha
inc
mov
les
divl
bound
adc
or
cld
mov
add
in
mov
add
divl
push
and
adc
movsl
aas
loopne
lcall
dec
mov
mov
dec
lahf
fsubs
or
sbb
cmp
imul
cmp
bound
cmp
cmc
ss
data16
mov
out
add
addr16
add
pop
adc
rcrl
xchg
push
dec
mov
movsb
test
lods
mov
dec
rol
repz
shrb
scas
push
add
and
mov
mov
sub
cmp
jbe
fcom
pop
repz
sbb
and
je
ret
push
lds
popa
and
mov
loopne
daa
lret
jbe
ficoms
lock
test
shll
sbbb
pop
ror
and
push
jle
add
xor
inc
mov
and
fnstenv
inc
cmp
fldenv
les
push
ja
cmpsl
out
lds
cltd
std
imul
test
lret
jbe
sbb
dec
mov
mov
pop
push
aaa
scas
outsb
je
in
adc
scas
sub
call
test
sbb
das
mov
cli
out
dec
jbe
mov
inc
repnz
push
jl
jb
fsubs
int3
fdivl
xor
mov
sahf
push
cmpsl
sar
add
xchg
loopne
dec
stc
and
cmp
mov
dec
pop
les
iret
int
das
cmc
or
mov
mov
imul
sti
divl
mov
push
rcrl
bound
sbb
mov
dec
cmp
mov
daa
mov
xor
cli
mov
dec
insb
inc
out
in
sbb
xchg
repz
cmp
mov
jb
in
pop
xchg
inc
addr16
mov
int
push
mov
loop
std
divb
dec
lods
cmp
pop
std
in
lea
add
dec
mov
inc
sub
jb
lret
xchg
jbe
pop
cmp
mov
push
cwtl
stos
out
or
jl
jecxz
pop
xchg
call
adc
lcall
xchg
movsl
sub
imul
lock
inc
lcall
or
shlb
outsb
enter
and
shrb
adc
ja
call
roll
cmpsb
adc
add
adc
dec
cmp
cwtl
movsb
loop
cwtl
adc
cwtl
mov
leave
jnp
stc
push
inc
mov
or
push
push
cvttps2pi
hlt
push
mov
or
mov
adc
add
fwait
lock
movb
adc
rcrl
jecxz
lcall
lods
in
enter
rcl
popf
mov
mov
arpl
mov
pop
hlt
sub
mov
cmp
xlat
pop
mov
adc
xchg
jo
bound
lds
das
test
psllq
xor
addr16
xor
fsub
sub
push
sub
inc
add
jo
jne
mov
shll
or
ret
repnz
stc
negl
push
lcall
call
adc
sub
jmp
cwtl
inc
ljmp
lahf
lock
sarb
jb
fdivrs
sub
mov
pop
xor
push
mov
mov
out
fs
dec
add
mov
push
push
adc
out
std
mov
neg
pop
mov
sbb
cwtl
or
lret
call
xor
pop
cld
inc
imul
inc
je
cwtl
inc
pop
mov
push
xor
mov
rcl
cmp
orl
cld
out
sti
pop
out
mov
mov
test
dec
add
push
xor
leave
sub
idivl
adc
mov
ret
aas
aad
mov
std
xor
jno
imul
xor
repz
push
push
jbe
jae
jp
adc
aad
fwait
addl
mov
movsl
xor
mov
lea
nop
aad
movb
popf
ja
in
pop
inc
cmc
negb
in
pop
mov
in
aad
add
jmp
dec
jne
shlb
cmpxchg
ljmp
mov
cmp
or
adc
pushf
in
fisttpll
lds
add
add
mov
inc
insl
stos
pop
in
push
mov
stc
lret
test
cmp
jns
sub
pop
ds
enter
cmp
dec
add
pop
sbb
into
add
mov
outsl
inc
insb
cmp
cwtl
test
out
mov
inc
nop
in
js
mov
fcomp
or
adc
or
out
mov
xchg
daa
testb
lcall
scas
push
imul
sub
pop
or
inc
add
cmpsb
hlt
sub
imul
dec
insl
sahf
call
or
nop
and
mov
loop
das
or
out
jg
xchg
rorl
mov
adc
xchg
in
cmp
pop
push
sbb
test
into
fcmovne
inc
pop
push
outsl
sti
xchg
movsl
fisubs
mov
xor
cltd
jo
and
cmc
mov
xchg
mov
mov
push
frstor
shrl
sarb
jne
lods
xchg
scas
mov
mov
and
cmc
push
cmp
mov
jb
jo
subl
inc
rorl
mov
mov
dec
and
add
push
xchg
lcall
test
cld
vcmpps
out
mov
or
idivb
in
mov
jnp
data16
pushf
lret
rcll
aam
pop
lret
pop
ret
pop
sbb
xchg
dec
ljmp
jg
pop
test
xchg
in
loop
mov
mov
insb
aas
cmp
jbe
xchg
mov
rorb
pop
stos
subb
and
repnz
int
cmc
aam
into
cmp
ret
inc
gs
repnz
lods
pop
popa
pop
insl
mov
lret
loopne
ret
repz
and
inc
test
je
rorl
cmpxchg
out
clc
mov
pushf
jle
imul
jecxz
rorl
out
jp
mov
das
and
pop
xorl
mov
stos
aaa
dec
out
mov
ss
filds
cli
fs
xchg
es
cmp
stc
test
dec
sbb
cmc
in
mov
sbb
mov
xchg
xchg
test
les
push
cmpsl
jns
mov
es
cmp
add
leave
jb
and
xchg
mov
bound
push
insb
push
hlt
push
dec
xchg
xchg
sub
sbb
push
movb
add
mov
mov
adc
or
repnz
mov
lock
repnz
pop
cld
add
and
int3
pop
push
inc
movsl
in
mov
sbb
cmp
lea
dec
repnz
adc
dec
dec
insl
pop
icebp
rcrb
xchg
imul
push
mov
mov
sbb
inc
dec
ficomps
out
and
test
sub
pop
movsb
mov
add
shrb
or
jb
lret
jne
fnsave
xchg
test
stos
sbb
xchg
xchg
xor
or
adc
pop
jmp
xchg
das
insl
cmpsb
jne
sbb
in
sbb
dec
test
repz
dec
push
test
sub
sarb
fcmovbe
jne
int3
mov
mov
sbb
sbb
insl
xor
orb
rcrl
or
dec
cmpb
pop
rcrl
sbb
xchg
cli
dec
add
sti
sub
aam
mov
ss
or
sub
fsubs
subb
addr16
inc
mov
and
push
cmp
pop
pushf
arpl
orb
add
repz
cmpsl
out
dec
jg
push
imul
bound
push
data16
mov
mov
jmp
dec
jge
imul
dec
push
jo
ljmp
mov
inc
shll
pop
in
lea
hlt
xchg
lret
push
and
dec
adc
xchg
jp
insl
inc
gs
insl
gs
popa
int3
enter
cmpsl
push
fsts
loope
lds
sbb
int
rcll
fnstcw
xor
cmp
insl
mov
push
rcl
addr16
into
adc
je
xchg
rorl
cltd
pop
push
mov
add
and
cmp
jmp
and
test
enter
and
frstor
push
or
add
xor
or
inc
es
add
push
outsb
lahf
jo
push
lock
int3
fwait
adc
lods
cmpsb
shlb
popa
xchg
lret
lahf
into
mov
xchg
fwait
cmpsb
mov
cwtl
or
mov
add
xchg
in
insb
cltd
sbb
das
mov
dec
icebp
xchg
movsb
addb
roll
lea
and
out
add
cmp
inc
lret
loope
gs
int
ret
and
outsl
push
pop
cli
ret
pop
pop
mov
pusha
xchg
cmpsb
rol
test
add
xor
adc
shl
daa
inc
in
gs
cmc
or
in
cmp
cld
mov
lods
out
shr
stc
pop
ret
jo
or
or
push
pop
xchg
mov
pop
loopne
cmpsb
jp
xchg
test
adc
sub
sub
out
lods
xchg
nop
loopne
xchg
hlt
sbb
cmpsl
test
ficompl
adc
mov
int
and
sbbb
jmp
push
clc
fistpll
mov
xor
fimuls
jns
int3
cmpsb
loopne
out
popf
push
xchg
bound
pushf
lods
inc
mov
mov
pop
in
sub
rcrb
popa
jbe
pushf
pop
jmp
or
and
cld
les
push
add
in
addr16
xlat
mov
jecxz
test
int3
mov
add
jmp
test
aaa
sbb
pop
insl
stc
fisubl
ds
jb
adc
sahf
mov
ljmp
and
lahf
repz
test
sbb
and
xlat
jmp
add
mov
adc
ret
sub
fcmovnb
out
jne
xor
popa
into
mov
fwait
xor
adc
dec
ljmp
insl
xchg
iret
into
stc
jecxz
lds
pop
xor
inc
push
repnz
jmp
sub
jae
je
mov
mov
jl
fldcw
sti
jecxz
dec
rol
stos
xor
rorl
dec
pop
dec
loopne
add
pop
xor
mov
xchg
pop
jmp
addr16
js
sbb
imul
jp
cld
or
adc
int3
xchg
jbe
pop
or
daa
cmp
sbb
inc
jecxz
pop
lds
insb
das
push
cmp
mov
std
into
cltd
mov
int
xchg
hlt
dec
xchg
mov
xor
lods
mov
ret
mov
fdivp
lds
push
fwait
insl
aam
pop
int3
outsb
inc
and
sbb
cmpsl
dec
shlb
sti
push
repnz
cwtl
outsl
mov
fs
xchg
jmp
pusha
sti
outsb
test
mov
cmp
sbb
pop
iret
stc
ljmp
mov
ds
mov
js
hlt
pop
das
jl
mov
jne
mull
bound
inc
jnp
push
jmp
pop
inc
and
add
arpl
xchg
cmp
mov
mov
repnz
leave
jae
sub
sbb
repnz
mov
push
push
mov
mov
lds
out
shlb
cld
popa
or
adc
hlt
ret
hlt
in
or
jl
cmp
jns
push
xchg
jno
hlt
cmp
int
cmp
adc
arpl
sub
sti
rolb
mov
fwait
cld
arpl
addb
mov
sub
je
sub
in
xchg
and
lods
jo
inc
mull
dec
lods
sub
ficomps
xor
daa
loopne
cltd
mov
mov
pop
push
pop
clc
xor
mov
call
jb
sub
sub
cld
mov
cmp
lods
int
lock
loope
cli
fwait
xor
ret
inc
xor
cs
aam
mov
and
lret
mov
mov
or
xor
mov
scas
pusha
ret
movsb
in
add
insb
mov
adc
or
sub
sti
fnsave
ffreep
mov
xor
push
add
cmpsl
cld
mov
fcoms
clc
dec
ss
sbb
jnp
mov
inc
lret
data16
idiv
int3
int3
or
jbe
decl
push
mov
mov
mov
jns
jecxz
xchg
popa
out
inc
adc
mov
adcl
pop
stc
repnz
pop
in
ljmp
xchg
sbb
std
outsl
sbb
mov
push
js
std
aam
pop
fadd
fstpl
jno
xor
fwait
cld
mov
sarb
call
push
in
or
out
outsb
psubusw
sub
jle
xchg
stos
sub
cltd
icebp
pop
sub
cltd
adc
inc
or
add
sub
push
test
mov
cli
push
andl
xlat
mov
pushf
imul
or
xchg
addr16
inc
std
insl
push
jmp
pop
jb
xchg
je
push
jl
pop
ret
sbb
add
adc
pop
mov
mov
int
inc
in
ret
into
cwtl
cwtl
roll
mov
icebp
mov
dec
push
push
aaa
aaa
xlat
leave
pop
mov
xor
popa
push
sub
ds
sub
sub
fucom
xchg
mov
cltd
stos
xlat
jb
int
mov
test
scas
adc
rcll
inc
jecxz
push
dec
jno
test
push
and
outsl
loope
aad
inc
xorb
jl
push
leave
dec
jl
mov
hlt
out
std
popl
fcompl
pop
mov
rolb
jnp
mov
push
cmc
mov
loop
mov
mov
push
ss
jl
sbbb
lods
rclb
push
loope
push
xlat
js
testl
jno
clc
jo
rolb
enter
fadds
mov
and
add
je
push
mov
sub
and
mov
push
movsb
dec
sbb
insb
inc
push
addr16
cld
cmp
fidivrs
sti
gs
push
mov
int
scas
lds
jno
test
dec
jecxz
out
jae
jb
imul
lcall
mov
add
rorb
sub
iret
jg
pop
push
fadd
pusha
addr16
adc
push
stos
in
lea
lods
and
sub
clc
shrb
cmp
jnp
lods
push
movsl
repz
inc
cwtl
loop
pushf
hlt
jg
loope
lods
popl
bound
rol
jmp
xchg
fisubl
cmc
insl
sbb
rcr
cmp
pop
shll
pushf
lcall
fwait
pop
push
mov
xor
inc
ret
mov
xchg
pop
cld
lods
insb
out
add
fsubs
mov
clc
fisubrl
push
pop
mov
lock
push
adc
push
fldenv
in
adc
dec
xchg
orb
scas
sub
add
or
test
lds
bound
ret
shll
addr16
leave
adc
lret
jle
imul
push
cmp
cmpsl
movsb
iret
inc
das
aas
jp
stos
add
loope
iret
adc
pop
into
in
sbb
adc
pop
mov
inc
jae
sbb
and
pop
imul
out
pop
mov
in
inc
and
add
push
in
xchg
pop
sub
pop
es
pop
mov
mov
sub
test
fwait
xchg
fcoml
adc
outsl
dec
rorl
sbb
mov
fld
out
adc
push
xchg
movsl
inc
cltd
cmpsb
sub
mov
in
aas
popa
add
jb
pop
cmp
ret
add
lods
mov
push
pop
fcmovu
add
pop
divb
dec
jne
adc
fcompl
movsb
sub
out
xchg
add
shll
mov
add
pop
push
test
add
push
xchg
fwait
icebp
xlat
dec
push
push
lock
adc
add
data16
int3
pop
loopne
push
sub
xchg
inc
sbbl
jmp
fdivrs
mov
cmc
sti
jmp
pop
cwtl
xchg
dec
adc
push
xor
les
and
popa
adc
or
lods
cmpsl
add
shrb
mov
out
scas
add
mov
pop
setne
adc
inc
pusha
mov
and
pop
cmp
cmovns
aaa
cld
ds
test
pop
cld
aaa
push
dec
in
iret
sbb
cmp
testb
jne
fiadds
inc
add
cmp
movl
add
jnp
arpl
lcall
mov
ficompl
mov
ficoml
dec
daa
loope
out
outsb
ja
xor
mov
or
lahf
pop
and
push
mov
and
stc
sbb
xlat
jne
fdivrl
push
inc
outsl
cmpsl
cmp
fdivl
sub
into
dec
adc
ret
jg
pop
insb
gs
lret
lea
dec
test
pop
inc
inc
aas
jb
lock
mov
ret
loop
mov
cmp
fs
out
xchg
pop
pop
loop
dec
jl
aas
xor
cwtl
clc
call
inc
repnz
mov
or
cmc
lock
xor
jb
lahf
add
mov
sub
xor
dec
enter
or
xlat
mov
xchg
push
stos
movsb
loope
pop
mov
insl
xchg
jge,pt
jle
test
fwait
test
jbe
mov
bound
adcb
inc
cmp
jmp
or
pop
pop
add
adc
std
dec
ret
das
lcall
adc
xchg
je
dec
push
cmpsb
jno
mov
add
inc
test
mov
push
repnz
mov
mov
jnp
sti
sub
pushf
mov
std
pop
mov
mov
cwtl
inc
leave
inc
int
inc
sub
jmp
loop
out
xchg
in
pop
push
cmp
pusha
mov
rcll
aaa
pop
or
xchg
sbb
int3
pop
xchg
cmp
popf
adc
sub
jbe
sbb
pop
enter
vphaddbq
xlat
push
mov
addb
jmp
push
or
pop
mov
or
pop
scas
mov
or
cmp
gs
in
adc
xchg
aas
lock
lds
inc
call
xor
mov
cmovnp
mov
lock
fldt
imul
out
mov
fs
les
inc
stos
sub
sub
push
or
lock
mov
push
aaa
mov
push
das
aad
push
and
stc
push
mov
dec
mov
sub
loop
ret
out
adc
sub
mov
mov
and
daa
sub
mov
mov
enter
push
ror
adc
xchg
rorl
mov
fsubl
fmulp
push
inc
fidivrs
jnp
pop
adc
xchg
cli
int
repnz
cmp
jecxz
insl
cmpsl
stc
sbb
mov
icebp
andb
dec
lods
cmpsl
or
adc
repz
jne
testb
test
sub
xlat
lods
sbb
fcmovne
push
decl
cmpsl
mov
out
or
ret
sub
jp
push
imul
testb
xor
fyl2xp1
popa
rorb
loope
sahf
fisttpl
fstpt
pop
lods
cli
push
in
sahf
cmpsl
lahf
mov
mov
mov
lods
in
addl
insb
sub
imul
dec
mov
lret
sub
or
dec
aam
test
pop
sub
or
sub
jno
pop
and
and
cmc
push
adc
push
xchg
divb
jmp
and
imul
xchg
jg
or
sbb
jnp
out
jmp
mov
testb
sbb
and
in
mov
lret
lcall
jo
and
inc
inc
imul
inc
pop
xor
std
leave
jb
cmp
push
and
sbb
aaa
push
clc
or
xchg
fwait
mov
rorl
mov
dec
das
lods
mov
rolb
sahf
jle
hlt
ljmp
inc
stc
int3
mov
lret
and
lods
push
das
mov
jbe
stc
jo
push
stos
sub
in
dec
add
test
cmp
lret
test
jb
push
sub
outsl
leave
dec
mov
cld
push
test
mov
mov
pusha
aad
inc
xchg
leave
cltd
xlat
xlat
movl
dec
int
mov
push
adc
clc
mov
jne
test
jle
xchg
cmp
cmp
fidivrl
arpl
dec
dec
es
out
mov
aaa
adc
mull
int3
fstps
gs
sub
aam
xchg
sub
mov
xor
es
notb
xchg
jmp
inc
enter
icebp
test
mov
cmp
xchg
mov
dec
enter
int3
sub
aas
mov
jns
mov
xchg
adc
imul
testb
test
mov
stos
adc
and
loopne
push
ror
sbb
int
pusha
pop
pop
mov
jecxz
call
loopne
adc
cmp
rol
shl
sub
xchg
cs
mov
xor
sub
add
adc
out
sub
test
jge
iret
pop
loope
adc
loopne
repz
mov
in
lcall
movsb
fiaddl
int3
mov
cmp
xlat
test
enter
jle
lods
push
stos
adc
push
in
add
push
idivb
jae
shl
push
pop
sbb
ds
stos
cmp
popf
mov
mov
mov
pop
clc
xor
ror
fcmovb
aas
cmc
xlat
lds
incl
push
and
inc
repnz
or
aaa
inc
mov
incb
into
mov
popa
or
mov
movsb
outsl
xchg
popa
mov
push
xlat
and
into
xchg
nop
inc
mov
pusha
push
sub
shll
bound
sbb
enter
push
insb
stos
data16
cltd
jl
ret
mov
std
dec
and
and
nop
pop
jle
pop
xor
fldt
sbb
movsl
mov
mov
adc
nop
mov
or
fisttpl
stos
xchg
jo
pop
loope
fwait
dec
inc
clc
dec
push
in
jecxz
popf
movsb
sahf
sub
enter
mov
movsb
popa
out
pop
pop
ret
and
pop
xlat
aas
movsb
jmp
clc
or
mov
lock
xchg
or
adc
xchg
mov
mov
or
xchg
xlat
push
in
jle
sbb
xor
jae
sub
mov
and
xchg
mov
jb
mov
test
imul
jmp
mov
sar
pop
push
inc
xchg
shrl
mov
xchg
mov
bound
sbb
jae
jg
inc
pop
fisubs
lea
dec
mov
xchg
inc
stos
loop
andb
dec
roll
or
int
pop
mov
dec
sbb
or
cltd
dec
push
imul
ds
lds
dec
aam
jp
mov
sub
xlat
fcmovb
xchg
push
inc
movsl
add
and
movsl
je
add
and
movl
shll
mov
imulb
sub
cmp
es
fucomp
pop
roll
subl
arpl
pop
ret
inc
lret
call
inc
jnp
push
sbb
test
xchg
xor
adc
int
mov
and
repnz
sub
mov
adc
xor
and
dec
inc
push
adc
fmulp
test
lds
sbb
pop
sbb
js
add
xchg
bound
cwtl
jbe
pop
adc
xor
gs
ret
and
sbb
inc
jne
or
xchg
idivb
into
popa
jmp
mov
or
scas
shrb
jns,pt
and
push
jecxz
mov
outsb
sbb
cmp
shl
xor
movsl
sub
andl
dec
push
in
mov
mov
out
stos
insl
xchg
xor
jnp
mov
dec
mov
mov
addb
pop
cwtl
stos
jo
push
dec
adc
add
xor
adc
cmpsb
jnp
xor
dec
mov
xchg
rclb
fsub
aad
pop
push
loopne
dec
orl
cmpl
sbb
daa
push
jb
push
push
xor
ljmp
fs
cmp
inc
adc
and
hlt
adc
push
outsb
aam
test
mov
mov
push
jae
scas
or
pop
adc
adc
adc
adc
push
jp
add
scas
aaa
xchg
jle
imul
stos
adc
mov
mov
fisubrs
add
push
push
dec
jne
decb
sbb
pusha
xchg
mov
fisubs
adc
int3
add
fiadds
xlat
dec
push
out
testb
cmp
mov
pusha
aaa
dec
inc
mov
mov
push
out
mov
lods
shll
sbb
dec
pop
sub
adc
fsubrs
int
aad
lods
je
call
sub
in
mov
lods
cwtl
fldl
mov
adc
scas
ss
pop
loope
cmp
int
lret
push
bound
sub
jecxz
xchg
add
sbb
cltd
fnsave
sbb
movsl
das
rorl
xchg
lock
jg
cmpsl
lcall
out
pusha
sub
hlt
xchg
jle
ss
mov
pop
les
pop
cmp
es
lret
pop
cmp
scas
and
inc
sbb
sbb
jae
add
mov
insl
or
inc
mov
cmp
aam
push
cmpb
imul
pop
lods
das
push
gs
add
dec
cmp
adc
call
lret
ss
sbb
push
jmp
mov
or
mov
mov
mov
ficoml
int
pop
jb
aas
repnz
mov
outsb
roll
mov
jns
push
lea
jno
pop
call
sub
dec
mov
fcoml
test
sub
sbb
dec
iret
jle
pop
xchg
sti
cli
insb
jmp
sti
repz
mov
push
sub
or
std
inc
xor
ret
cwtl
ret
andl
pop
pusha
push
lds
dec
jo
nop
or
test
mov
xchg
mov
cmp
sarl
insl
mov
test
imul
lds
subb
sti
xrelease
lods
jmp
outsb
insl
mov
and
imul
popa
push
cmpsb
std
sub
rorb
pop
push
inc
in
xchg
mov
cmp
add
aaa
notb
ret
in
xor
mov
push
or
pop
xlat
lea
stos
fcoml
fiadds
mov
and
xchg
popa
jno
icebp
fimull
movsb
fistl
test
sti
jge
add
jecxz
hlt
pop
or
lods
jnp
je
mov
lahf
stos
add
aaa
pusha
jl
or
jnp
jg
pop
push
adc
enter
adc
pop
mov
xlat
cmp
jmp
pushf
aam
cmp
rcrb
bswap
mov
mov
lock
in
or
sub
add
loope
push
stc
pop
test
fs
in
insl
xor
inc
std
loopne
push
cld
cmp
push
mov
ljmp
out
mov
sti
enter
mov
mov
xchg
ficomps
rorb
xchg
pusha
imul
mov
jbe,pt
subb
jo
jp
add
mov
popf
ss
cmc
xlat
jnp
mov
cmp
ficoml
test
push
lds
xchg
popf
fstl
mov
pop
into
add
cwtl
add
push
adc
mov
push
jle
lcall
cmp
mov
push
jno
xchg
fs
faddp
clc
mov
mov
div
fwait
xchg
mov
je
addr16
push
inc
or
jle
sbb
shlb
je
cmp
xor
adc
repnz
mov
inc
mov
sti
test
push
cmp
mov
push
sahf
sub
pop
das
js
jmp
scas
nop
add
xor
push
repz
sub
inc
push
jg
lret
push
enter
test
xchg
xlat
inc
push
inc
cmp
or
into
fcmovu
push
pop
push
push
orb
mov
jns
cmc
and
mov
fstps
mov
mov
push
popa
sbb
dec
adc
lret
cmp
and
and
sub
mov
jns
pusha
mov
movsl
pop
leave
add
into
jns
mov
mov
sti
enter
pop
cmc
popa
mov
pop
adc
aas
or
xchg
ds
mov
xor
test
jmp
push
sbb
dec
push
and
daa
mov
mov
andl
adc
ja
mov
push
out
shl
outsl
inc
in
int
jns
outsl
pop
sar
call
mov
sbb
bound
or
subb
popa
cli
jo
push
ret
mov
mov
jb
leave
mov
pop
adc
mov
mov
subb
in
out
ret
arpl
shlb
inc
fmul
and
lock
inc
test
or
ja
xchg
fcmove
jne
enter
xchg
xchg
testb
adc
int3
sbb
cmp
int3
lcall
sbb
inc
insb
cmp
lock
jns
jmp
aaa
aaa
and
ret
add
mov
ss
and
inc
out
jo
sti
fnstsw
inc
mov
mov
mov
int3
xchg
dec
xchg
pop
rclb
cltd
xchg
fnstsw
clc
imul
and
sti
xchg
clc
scas
imul
mov
xchg
adc
push
push
inc
xchg
add
incl
jo
cmp
push
js
dec
clc
and
cwtl
mov
test
insb
movl
mov
xor
mov
ja
das
test
sbb
popf
call
dec
and
pop
stos
push
pop
xor
pop
decb
push
jge
pop
xchg
scas
cwtl
xlat
mov
mov
sbb
inc
loop
adc
addb
inc
push
or
sbb
lods
adc
mov
sub
push
andnps
jmp
lds
cltd
cmp
lds
cwtl
mov
cs
iret
mov
cmp
insl
fldl
mov
or
sbb
add
dec
enter
mov
xlat
or
movsb
fnstsw
xor
lods
sbb
daa
inc
cmpsl
insb
dec
jnp
dec
pusha
out
inc
imul
arpl
mov
jbe
inc
fdivl
xchg
xlat
push
add
divl
sahf
repnz
mov
pop
pop
xchg
pop
inc
stos
jmp
test
cmp
ja
push
inc
cwtl
push
ja
outsl
lods
dec
push
mov
push
mov
into
fmuls
fists
cld
sbb
push
pop
cmpsl
jb
test
into
push
xchg
mov
xor
fsubl
or
mov
movsl
lods
lods
or
das
sub
fwait
sbb
cmovle
inc
cmpsb
and
pop
pop
pop
push
in
lods
sub
adc
into
sub
insl
add
cmp
jo
jge
mov
jns
shlb
sbb
cltd
cmp
pop
mov
fwait
mov
les
jns
sbb
mov
add
dec
stc
or
sbb
mov
shll
scas
mov
xor
out
insl
inc
int3
in
sbb
sub
test
cmc
pop
gs
stc
ljmp
cmp
outsb
adc
bound
sbb
push
adc
inc
fildll
test
adc
jo
out
lock
push
pop
mov
pop
negb
lret
push
jno
fwait
jne
jecxz
fwait
push
add
add
adc
push
jae
aam
jns
test
mov
inc
mov
lock
mov
jecxz
xor
mov
into
stos
addl
xor
lds
insb
lcall
sbb
jmp
mov
xor
xchg
jne
mov
psllw
mov
lds
or
fcmovnu
aam
adc
fisubrs
sub
lods
push
jp
adc
xor
jmp
xchg
test
dec
gs
dec
ds
bound
test
sub
sub
das
fld
xlat
test
cmp
fisubs
mov
pop
testb
jbe
js
test
loop
push
and
call
lds
ja
jnp
dec
adc
test
add
pop
scas
inc
popf
clc
or
push
mov
pop
push
aad
cmp
andb
arpl
jns
adc
mov
pop
cmp
pop
cmp
xchg
xchg
rcll
or
aam
lock
shll
dec
fmul
aaa
xadd
jbe
mov
push
dec
mov
cmpl
xchg
mov
fdivs
xchg
inc
pop
cmp
outsb
mov
gs
push
inc
pop
repnz
fmull
fildl
sub
cmp
negb
jae
mov
or
aam
inc
stos
mov
jmp
sub
gs
hlt
imul
and
leave
addr16
inc
mov
jmp
mov
ja
push
or
adc
dec
pop
cmpsb
push
test
or
push
adc
and
xchg
sbb
pop
sarl
jno
movl
arpl
mov
sub
in
repnz
fildl
xor
xor
subl
into
in
call
and
pop
mov
js
out
xchg
pop
dec
or
aad
or
int3
insl
jg
jecxz
fadd
xchg
ret
aaa
adc
loope
arpl
std
repz
rsm
mov
push
cmp
popf
clc
inc
fsubrl
scas
xchg
mov
mov
push
or
negb
int3
push
pop
cltd
fidivrs
cltd
mov
adc
sbb
or
cld
and
or
push
pop
or
xchg
xchg
sbb
hlt
adc
cwtl
xchg
xchg
inc
pop
push
loopne
lds
cmp
sbb
cwtl
or
lret
dec
leave
inc
imul
xor
xchg
sbb
int3
jnp
push
mov
mov
divb
ret
js
inc
arpl
mov
lods
dec
ret
mov
mov
and
mov
push
je
into
in
mov
inc
iret
aad
daa
pop
std
mov
cmp
jp
and
lahf
and
clc
sysenter
add
in
mov
setbe
jns
or
push
call
int3
sbb
xchg
ljmp
mov
mov
mov
and
sbb
iret
add
pop
jmp
insl
or
lock
xchg
cmpsb
mov
mov
pop
enter
mov
data16
nop
push
and
push
pop
or
sbb
mov
std
mov
and
test
leave
dec
mov
pop
leave
sub
test
mov
dec
mov
clc
cmp
add
lods
push
shr
xchg
test
imul
ficoms
in
sbb
in
or
insb
mov
cmpb
cs
ja
scas
xchg
xchg
inc
dec
fldcw
std
jae
mov
test
div
pushf
xlat
lret
out
or
loope
and
mov
xchg
cmp
mov
shr
dec
test
fildl
mov
push
das
adc
ljmp
ljmp
ljmp
aam
in
fs
lahf
or
mov
inc
out
fcomps
pop
lahf
sub
lea
insl
cmc
aam
adc
loope
jae
mov
test
or
lahf
lods
add
repnz
push
cmpsb
stos
jg
pop
imul
iret
test
xchg
loope
pop
mov
stos
mov
xor
push
xchg
loope
cmp
divl
repnz
jo
imul
or
adc
pop
dec
clc
loopne
jns
pop
push
imul
xlat
je
or
stos
push
xchg
fidivs
lock
add
xchg
fldenv
imulb
pusha
inc
xchg
in
sub
or
out
xor
push
jle
cltd
inc
pop
dec
mov
pop
lods
aam
scas
repnz
inc
or
push
add
pusha
aad
xchg
push
loop
adc
gs
gs
inc
xchg
pop
cli
roll
scas
add
xor
dec
and
cmc
jp
jecxz
enter
mov
std
fisubrl
fstpt
orl
pop
dec
fcmovbe
mov
fdivrs
pop
pop
in
inc
sti
mov
xor
sbb
stc
cmp
gs
pop
bound
mov
std
mov
lcall
dec
test
test
loop
test
jbe
pop
icebp
outsl
and
pusha
push
orl
jne
int
cmp
dec
outsl
int3
pushf
js
mov
popw
jne
inc
mov
test
fxch
fstps
int3
imul
ds
pop
dec
lret
fwait
xor
sbb
insb
sub
in
sbb
mulb
out
jno
pop
sarb
adc
sub
add
ss
aaa
inc
mov
push
rclb
and
jle
out
xor
and
jge
divb
loop
jle
inc
sub
cmp
aad
outsb
or
mov
outsb
shrb
push
shlb
mov
jp
push
mov
movsl
test
jns
icebp
cmp
cmp
in
push
mov
jnp
jne
inc
int3
push
adc
ljmp
cli
bound
popa
jl
lret
stos
es
xchg
stc
pushf
cs
inc
and
lahf
and
xchg
inc
push
insb
sub
dec
or
pusha
scas
cmpsl
sub
popa
xchg
insl
pushf
cltd
sbb
and
loope
pop
mov
lcall
xor
sahf
dec
cmp
and
xor
int
xchg
dec
cmpsb
lock
shll
mov
sub
jp
mov
in
mov
fmuls
fsts
sbb
xor
test
add
push
call
xchg
sbb
push
es
mov
add
rorl
jecxz
stc
and
jge
cli
mov
dec
jns
jp
sub
and
dec
mov
in
cmpsb
mov
cmpsl
fldl
ja
in
pop
add
iret
pop
push
cmp
xor
rcrl
subb
cltd
loop
mov
jne
test
cmp
jle
imul
adc
dec
call
test
add
push
ja
dec
out
fucom
adc
mov
xchg
test
inc
xor
xchg
sub
pop
in
fnstcw
aad
pop
std
pop
daa
xchg
movups
cmc
aaa
movswl
fs
cltd
imul
push
das
scas
arpl
adc
mov
lods
int3
or
jne
mov
dec
dec
scas
mov
ljmp
iret
sahf
dec
mov
aam
or
xchg
add
push
sub
pop
sbb
cmpsb
cmp
sub
out
idiv
dec
mov
sbb
sub
in
int3
add
pushf
movb
hlt
fcoml
xchg
insl
mov
mov
mov
shl
bound
push
stos
popf
cwtl
inc
in
add
jno
lret
rcll
inc
repnz
jbe
fsubrs
sub
aam
pop
push
popa
cltd
pop
xchg
add
xchg
ljmp
sbb
mov
das
mov
inc
mov
mov
dec
sbb
mov
mov
stos
mov
push
shrb
nop
aam
cltd
data16
out
xchg
mov
fcmovnu
imul
call
loopne
mov
mov
shl
cmpsl
mov
imul
movsbl
and
cmp
sbb
mov
filds
jmp
xchg
jmp
or
fwait
cmp
push
aaa
pushf
ja
adc
and
mov
or
out
das
mov
add
sub
and
jmp
and
popf
jle
jnp
inc
call
pusha
mov
add
aad
lahf
shl
pop
fs
xor
aam
ficoms
cmpsl
dec
mov
inc
dec
fdivl
lahf
leave
xchg
out
lret
dec
shll
sbb
jno
enter
sbb
xchg
test
idivl
xchg
mov
or
arpl
addr16
fwait
pop
sub
stos
xor
push
mov
ret
call
fimull
mov
test
sub
into
inc
int3
enter
xchg
mov
inc
or
leave
dec
int
fcomip
adc
or
add
test
iret
sub
rcl
addr16
add
mov
sbb
xor
ja
inc
insl
ret
xchg
imul
int
and
scas
jl
or
lods
push
int
sub
loopne
mov
in
xchg
repz
jecxz
sbb
push
sub
je
mov
nop
ret
mov
xor
pushf
mov
ljmp
enter
jae
jge
or
mov
xor
or
mov
cmpsl
dec
add
sbbb
push
dec
leave
mov
ss
mov
jg
push
fistpll
or
jg
sub
mov
mov
inc
mull
push
loope
lds
arpl
pop
mov
xor
orl
fcmovbe
addr16
add
or
mov
or
outsb
in
sub
andb
xchg
pusha
mov
xorl
xchg
daa
mov
add
sub
sti
das
aam
hlt
push
outsl
in
cmp
pop
or
ljmp
mov
sarb
mov
fstps
or
pop
mov
mov
cltd
and
sbb
out
push
or
rcr
pop
fdiv
xchg
xor
mov
xchg
push
and
mov
sbb
fistpll
les
xor
cmp
adc
xchg
push
daa
pusha
aas
je
popa
shl
loope
test
push
jmp
es
inc
mov
mulb
xor
jg
mov
sub
int
dec
jg
ss
pop
iret
js
xor
lea
push
sahf
adc
ficoms
mov
adcl
jne
mov
das
lds
nop
jnp
add
jno
sbb
pop
cmpsl
gs
imul
jg
out
mov
mov
mov
repnz
and
in
sbb
in
xor
movsl
adc
stos
jge
pop
jae
sbb
cmp
cmc
lret
mov
mov
cltd
mov
in
hlt
mov
dec
xchg
sbb
lods
pop
pop
scas
or
mov
ljmp
shlb
mov
mov
mov
lock
mov
jp
jnp
fstpt
or
xchg
out
loop
sbb
jno
adcl
movsl
adc
imul
out
icebp
xor
andl
out
adc
ss
push
fcomi
in
lods
add
test
dec
or
nop
push
ret
cmpsl
loope
cli
xor
fcomip
jmp
outsb
je
ds
push
xor
cli
sti
pop
mov
mov
into
inc
xor
test
sbb
sbb
add
xchg
movhlps
out
add
movsl
mov
lcall
rol
sub
sti
lods
aad
lods
push
pop
push
push
pop
fcoms
pop
cld
lds
add
and
xchg
fsubrs
push
mov
insb
ss
jno
lret
fstps
push
movsb
pop
jne
xchg
pop
and
mov
jle
adc
jp
sub
shrl
push
imul
xchg
mov
mov
je
adc
and
xchg
movsb
movsb
or
mov
test
int3
pop
lgs
add
jle
add
adc
cmpsl
cld
push
stos
xchg
std
lcall
mov
dec
cmp
movsb
cltd
imul
mov
out
xchg
icebp
loopne
ljmp
mov
pop
gs
jo
xchg
fistpl
dec
add
cmp
jg
loop
adc
add
mov
shlb
hlt
das
jb
lods
lahf
js
or
xchg
xchg
sub
popf
pop
shrb
es
jb
jmp
push
adc
cmpsb
out
pop
pushf
dec
stos
cmp
mov
pop
out
fcomip
out
ljmp
jg
imul
or
cld
lods
or
push
pusha
mov
lcall
sbb
stos
cmp
add
mov
outsb
or
cmp
mov
icebp
mov
pop
fisttps
mov
add
imul
push
pop
add
jp
xchg
cmp
dec
dec
push
xor
cs
dec
sbb
or
out
lods
fwait
cmp
ret
cmp
imul
xor
pop
push
aaa
jmp
cli
dec
sbb
aas
inc
jno
push
jno
and
mov
outsl
cwtl
ljmp
std
cmp
inc
sbb
dec
jle
fsub
rcl
add
push
jge
xor
data16
jecxz
xor
dec
mov
mov
xor
push
and
addr16
xchg
add
repz
pop
jnp
jmp
push
fidivs
insl
push
mov
sahf
mov
mov
fisubs
in
shlb
or
rcrl
daa
fcoms
stos
pusha
and
and
cs
xor
inc
faddl
pusha
dec
mov
fwait
sahf
outsb
mov
in
inc
push
js
inc
gs
sub
icebp
dec
push
outsb
fsts
push
cmpsb
test
bswap
inc
mov
ret
movsb
sbb
inc
dec
sub
sbb
gs
or
daa
push
fisubrs
jb
daa
repnz
cmp
and
mov
dec
imul
popf
push
adc
in
mov
lahf
xor
mov
orb
sar
ljmp
fdivrl
adc
iret
insb
out
jl
cs
adc
adc
adc
pushf
stos
adc
adc
fdiv
and
dec
jl
push
mov
xchg
mov
int3
pop
loopne
aas
mov
cmp
pop
mov
pop
test
mov
incb
es
and
mov
ret
dec
jno
adc
es
cwtl
jmp
and
pushf
mov
clc
cs
push
mov
pop
dec
lds
xor
lcall
cmp
out
jns
das
xor
div
lret
rol
and
cli
mov
dec
mov
inc
fcmovnbe
sti
pop
test
adc
add
sbb
dec
out
leave
or
outsl
mov
inc
dec
inc
jl
inc
mov
pop
aad
shll
xchg
push
and
jle
mov
pop
jnp
or
out
repnz
cs
dec
push
sub
decb
outsl
sbb
sbb
insb
jg
and
dec
add
or
lret
rcr
xchg
test
lret
je
testb
insb
inc
sbbl
mov
dec
shl
fbld
insl
adc
divl
enter
mov
xor
inc
ds
icebp
and
jp
icebp
push
faddl
adc
data16
and
mov
icebp
ret
cmpb
xchg
gs
jl
sbb
adc
imul
push
sbb
or
cmp
rcrb
mov
adc
jbe
mov
test
sbb
mov
sub
fnstcw
stos
adc
shlb
push
rorb
pop
cmp
movsl
adc
stos
in
je
repz
pusha
xchg
int3
sub
sub
cmp
out
cld
push
je
aaa
fsubrl
loop
sti
stc
test
mov
sub
cmp
stos
out
call
jecxz
fisttpl
mov
ljmp
jecxz
mov
dec
cmp
mov
lret
out
rolb
lea
adc
movsl
js
sbb
jmp
js
mov
push
fmull
mov
xor
es
jae
cmp
push
imul
aad
inc
mov
cli
inc
int
inc
iret
push
ret
aad
hlt
push
sub
fildll
jnp
lret
sahf
and
icebp
sub
mov
jecxz
mov
faddp
cli
add
fmuls
dec
lahf
push
mov
in
or
ds
int
and
neg
lock
adc
into
cmpsl
addr16
mov
xchg
test
mov
and
push
jp
cwtl
or
test
outsb
sbb
pop
repnz
lahf
fisubs
aad
jle
lret
mov
rcrl
clc
push
xchg
adc
fbstp
cmpsb
ja
ja
lds
pop
leave
lahf
push
inc
push
addr16
and
push
pop
insl
jo
mov
jb
es
in
orl
dec
nop
imul
popf
push
inc
ds
clc
subl
out
aam
xchg
out
cs
pop
mov
jb
and
dec
jo
xor
pushf
jno
loope
loop
das
scas
lock
movsb
add
push
int
bound
in
enter
popf
adc
and
cmp
and
int3
dec
pushf
cmp
xor
les
mov
pop
adc
sub
out
xchg
daa
add
xchg
in
sbb
sbb
scas
aaa
aam
ljmp
or
cmpsb
mov
stc
sbb
loopne
inc
shll
pop
out
dec
xor
and
xor
push
push
jo
movsb
popl
lods
inc
adc
std
jg
movsb
hlt
pop
lret
and
xor
cmp
cmp
and
sbb
pop
cmp
fs
mov
outsl
push
std
mov
aas
mov
push
mov
int3
xchg
sbb
scas
push
xor
fcompl
sti
mov
mov
test
pushl
lret
fwait
jge
mov
ja
mov
mov
cmp
push
imul
in
fstpl
mov
clc
or
mov
gs
mov
lea
das
and
and
std
xor
dec
jbe
pop
cmpl
adc
fldl
fcomp
and
or
inc
and
shll
iret
jle
call
dec
cmp
or
xchg
xchg
nop
hlt
jnp
pushf
dec
xchg
jmp
clc
jmp
mov
out
push
aad
es
mov
sub
cmp
jmp
outsb
mov
adc
cltd
loope
xchg
lcall
cmp
xchg
repz
and
mov
or
xlat
dec
jl
sub
pop
int3
lahf
shrb
es
jmp
push
xchg
fisubs
push
xchg
aam
test
dec
mov
jecxz
mov
xlat
push
pushf
cld
mov
jge
mov
mov
sarl
fcmovnb
dec
mov
lret
xor
adc
icebp
loop
into
sbb
mov
in
xchg
and
dec
repnz
sub
js
outsb
and
jp
mov
test
shrl
pop
insl
add
cmpsl
inc
mov
movsb
mov
cmp
xor
pushf
adc
add
fprem
loopne
pop
and
xor
xchg
mov
stos
mov
decb
xchg
cmp
stc
imulb
popf
enter
mov
decb
mov
cmpsb
and
push
inc
leave
ds
dec
pusha
shlb
ja
add
sbb
inc
mov
adc
push
push
sub
imul
outsl
cmc
repnz
or
addr16
xchg
xchg
icebp
inc
lds
fs
and
add
mov
movsl
inc
cld
setne
mov
out
mov
fadds
mov
mov
mov
in
stos
rcrl
pop
mov
inc
push
dec
ret
sub
inc
addr16
add
mov
xchg
cmc
adc
sahf
call
push
mov
aad
mov
in
sti
mov
xchg
lea
xor
push
or
jmp
push
cmpsb
cld
adc
push
sub
outsb
call
incb
mov
cmp
fwait
xorps
ret
add
jmp
adc
int
xor
mov
jne
and
sub
xor
lods
dec
call
jp
jb
aad
add
sub
cmp
mov
icebp
insb
in
cwtl
mov
sub
notb
sub
cmp
or
jb
shll
dec
jl
lock
daa
ret
fcomps
fstpl
das
repnz
xchg
push
adc
test
dec
lods
lcall
fsubr
neg
jnp
pusha
std
pop
icebp
lds
jb
add
mov
fldenv
mov
mov
fstl
mov
in
pop
inc
jle
push
data16
sbb
repnz
xor
lret
jnp
lcall
out
mov
call
adc
aam
cwtl
je
cmp
mov
push
xchg
adc
jnp
scas
lahf
mov
inc
loopne
mov
dec
mov
add
aad
fldpi
out
jp
int3
jb
inc
push
aad
and
pop
not
push
daa
add
in
push
scas
push
loopne
jb
iret
sub
pop
xor
mov
int
lods
xor
dec
sbb
daa
add
pop
cmp
out
sub
inc
jmp
push
jb
or
adc
sub
jns
fcmovnu
push
bnd
mov
pop
test
addr16
mov
leave
in
mov
xchg
pop
outsb
sub
cmp
pop
sbb
or
enter
push
mov
hlt
push
je
mov
aas
ja
dec
and
mov
rcrl
fsubrs
mov
jmp
fcomi
xlat
pop
xor
mov
xor
lods
and
mov
push
mov
cmp
stos
push
and
fstpt
cmc
out
cltd
adc
ja
scas
cs
xchg
pop
and
cmpsl
push
popf
sbb
lcall
in
in
sbb
xchg
cld
aaa
lcall
push
lock
hlt
xor
pop
mov
idivb
dec
lods
jle
or
jle
add
lds
loope
sbb
inc
lret
push
fistl
xor
inc
xorl
vsqrtps
inc
fistps
mov
out
xlat
jp
push
inc
ljmp
fdivrl
insb
xor
push
xlat
scas
jmp
xchg
repnz
fists
mov
push
cvtdq2ps
adc
inc
ljmp
lods
dec
mov
sbb
int
loopne
in
xlat
jno
cmp
shlb
cwtl
sub
cmp
js
mov
pop
cmp
adc
add
xchg
mov
sbbl
and
push
and
cmc
push
lock
in
mov
es
mov
jg
xchg
cmp
xchg
cltd
xorb
push
sbb
gs
jge
inc
cmp
sbb
pop
adc
iret
shll
push
shll
cmpsb
scas
sub
adc
cwtl
push
das
mov
sbb
stos
daa
dec
loopne
mov
out
push
mov
jno
and
sbb
xchg
clc
cmp
test
sbb
fucomi
cltd
pop
inc
sub
and
sub
cmpl
mov
xor
adc
test
adc
stos
cli
jg
rorl
pop
fisttpl
and
jp
pop
xor
push
xchg
push
out
test
out
mov
add
call
add
inc
pop
mov
jmp
addb
shll
mov
pop
jle
add
or
and
js
mov
adc
adc
orb
cmpsl
ficompl
xchg
dec
ljmp
and
pop
mov
pop
mov
fldcw
xchg
sub
adc
and
in
pop
rolb
jecxz
gs
mov
popa
cmp
aas
mov
xchg
inc
sub
cmpsl
and
es
xor
cltd
stos
or
jo
push
or
push
mov
frstor
imul
pop
mov
and
cmp
cmp
mov
lods
aaa
popf
pop
pusha
mov
sub
sub
jb
pop
ja
ss
stos
outsb
pop
fiadds
mov
sbb
arpl
test
and
sub
pop
and
in
repnz
clc
and
xchg
xchg
inc
xchg
jecxz
cmp
cmpsl
or
xchg
andb
pusha
add
andb
push
push
lods
popf
hlt
mov
or
push
aaa
add
xlat
xor
sub
and
shl
and
inc
cmp
xchg
subl
add
ljmp
mov
stos
icebp
add
add
jnp
lock
test
add
subb
fldcw
scas
std
orb
jge
or
ljmp
pop
mov
mov
jns
sbb
add
andb
lcall
pop
rorb
cmp
inc
inc
mov
sub
push
pop
dec
pop
pop
sub
outsb
sbb
xchg
pushf
jae
add
test
test
addr16
dec
into
lret
mov
adc
iret
cmp
lea
mov
push
push
lods
mov
jmp
call
sahf
fcoms
dec
mov
loope
negb
or
adc
jns
push
sub
mov
xchg
xor
in
xchg
cmp
adc
mov
andb
shll
insl
ret
addr16
movsb
or
andb
and
arpl
insl
push
pushf
movsb
pop
cmc
dec
mov
mov
in
and
leave
imul
lods
push
adc
cmp
lret
sbb
and
int
jno
jbe
sbb
fists
or
cmc
aam
pop
in
push
sti
mov
std
js
mov
outsb
push
mov
inc
fsubl
jnp
push
addr16
jle
adc
add
ret
ss
dec
cld
mov
hlt
jp
cmp
enter
mov
push
mov
mov
popa
add
ds
mov
imul
sti
loope
mov
inc
mov
or
jno
lahf
test
mov
mov
dec
rorl
call
insl
mov
dec
mov
std
hlt
dec
xchg
dec
mov
dec
adc
cltd
es
fisubrs
rcrb
imul
cmp
psrad
cmpsl
jmp
jmp
cmc
and
mov
sbb
aad
orl
mov
mov
in
mov
push
int
add
clc
pop
push
jns
ret
int
imul
outsl
frstor
loop
inc
mov
andb
add
jecxz
jg
fdivrs
or
xchg
sti
pop
out
push
push
mov
test
outsb
outsb
push
data16
mov
mov
mov
jne
and
testb
aaa
jp
repz
loop
imul
popa
mov
call
jl
xchg
into
aaa
push
adc
cmp
push
mov
xlat
mov
jno
lahf
cmp
jg
jmp
fwait
ror
jmp
mov
lds
cmp
insl
inc
stos
dec
movsl
movsb
insl
push
test
out
int
fsubrs
inc
cmp
cmpsb
inc
add
lret
inc
adc
sbb
inc
fmul
cmp
scas
stc
cmp
lea
clc
jae
jns
pop
mov
negl
xchg
in
push
fsts
push
mov
icebp
sbb
cli
lcall
mov
popf
push
and
or
inc
out
jb
sub
in
push
cmp
xchg
cmp
jb
lock
mov
push
popa
imul
push
ljmp
add
xchg
test
push
aam
mov
sbb
ds
mov
loopne
xor
jp
push
jge
ja
repnz
xchg
jb
nop
xorb
lcall
and
sbb
cmp
sub
popa
adc
imul
ljmp
dec
xor
movsl
add
sub
sbb
jg
out
sub
mov
inc
rcr
add
push
arpl
pop
daa
in
and
cmp
insl
pop
call
xchg
test
insl
jmp
sbb
cmpsl
cmp
mov
mov
ret
adc
cmpb
aas
pop
add
rorb
and
and
rcrb
jl
cmp
sti
movsl
imul
push
aad
sbb
sub
aam
sbb
aas
push
lea
jg
and
push
leave
sub
pushf
popf
lcall
adc
push
xor
push
dec
and
lcall
push
push
cmp
push
popa
loope
fs
dec
adc
xchg
sar
loopne
int
ljmp
mov
or
je
inc
insl
mov
or
test
mov
scas
xor
call
push
inc
cmp
es
roll
es
dec
xchg
pop
push
xchg
jp
movsl
stos
fdivl
cmp
maskmovq
notl
mov
pop
pop
sub
inc
jbe
xchg
inc
jl
inc
inc
mov
ret
ljmp
cmp
pop
inc
scas
not
adc
ret
add
punpckhbw
mov
inc
bound
lea
push
dec
cmp
pop
cltd
adc
adc
into
mov
cmpsb
je
jnp
shll
and
xlat
mov
mov
icebp
loopne
mov
fildll
jmp
stos
jae
sub
int3
imul
push
pop
mov
pop
lods
jo
lret
jb
ljmp
ret
or
les
nop
pop
mov
or
fstpl
push
or
and
jecxz
jl
aaa
cli
pop
lods
mov
mov
fwait
rorl
out
int
mov
movhps
ficomps
adc
push
movsl
inc
jmp
imul
and
lods
mov
or
mov
dec
cmpsb
sub
movsl
movsl
and
and
add
ret
nop
fcoml
push
loop
mov
xchg
lods
jnp
and
mov
enter
pop
xchg
jp
pop
inc
jge
int
inc
out
xor
mov
popf
aad
andl
ficoml
mov
das
js
mov
in
not
shlb
hlt
cs
popf
sub
rcl
mov
ja
mov
adc
dec
mov
mov
sub
jg
aas
mov
sar
pop
loope
adc
lret
dec
aaa
imul
sahf
add
cli
sbbb
push
cmp
xchg
test
addr16
in
push
arpl
cmpsl
movsl
xor
cmc
pop
sub
cs
mov
mulps
pop
add
in
out
mov
jmp
negl
aaa
and
into
and
mov
sub
push
push
jle
mov
in
test
shrb
sub
test
mov
das
pop
ret
mov
subb
les
xchg
sbb
xlat
xor
inc
sub
sub
push
add
mov
cli
sbb
jecxz
jg
in
add
jae
xchg
sarb
cmpsl
insl
out
out
jb
sarl
testb
xor
push
mov
xchg
jae
push
ljmp
cmp
sahf
das
mov
in
mov
mov
leave
mov
mulb
fs
sub
lods
inc
repnz
sbb
cs
stos
pop
pop
rcrb
in
and
std
mov
mov
dec
dec
jae
pop
icebp
std
ret
dec
sub
into
push
jae
insb
dec
xor
sbb
xor
mov
or
stos
test
sub
mov
je
bound
sub
decb
mov
cltd
jb
jnp
and
jo
push
mov
push
pop
imul
mov
in
pop
xlat
add
mov
test
cmp
sbb
dec
fidivrs
js
dec
lret
adc
sbb
rclb
push
or
fcoms
lock
es
xchg
out
aad
les
adc
dec
adc
lret
cmpsl
add
data16
stos
out
xchg
xlat
cmp
stos
test
cwtl
mov
imul
imulb
mov
sub
repz
shll
arpl
sbb
xchg
push
std
cmc
das
sbb
inc
mov
mov
ss
jo
ja
setno
and
or
clc
inc
cmp
jns
dec
push
hlt
push
pop
repnz
nop
mov
pop
das
sub
outsl
scas
lret
loop
lret
mov
idivb
fadds
fidivrl
sti
clc
add
mov
mov
jp
mov
add
repnz
out
dec
mov
nop
pop
and
stos
xchg
sbb
sti
imul
rorb
cwtl
repnz
mov
pop
sub
jne
mov
and
mov
xchg
cmovp
mov
in
xor
sbb
imul
cmp
xchg
jp
xlat
push
roll
jg
mov
mov
xchg
add
push
add
inc
xlat
add
sub
lcall
int3
rcr
add
imul
pop
sbb
and
sub
push
test
ds
ret
pop
test
inc
sub
jnp
xchg
lods
movsl
mov
enter
add
scas
fst
daa
xor
xor
dec
divl
push
jbe
cmp
js
cmp
mov
jg
xor
mov
sbb
ds
lcall
mov
lret
or
jmp
repnz
stos
popa
test
enter
iret
cltd
jne
lcall
js
rolb
sub
loop
pop
shll
addr16
push
imul
fcoml
cmp
lods
push
or
shlb
popa
jbe
adc
jne
adc
shlb
pop
jb
popf
pushf
std
cltd
dec
jl
cmp
hlt
shufps
pop
pop
data16
sar
cmpsl
test
sbb
cmc
pop
imul
cmp
lahf
aam
mov
xchg
pop
mov
cltd
sbb
sub
jns
nop
sbb
sbb
jno
incb
std
sbb
push
inc
rcl
sahf
jb
jae
sub
or
push
xor
or
pop
fxch
sbb
addr16
dec
mov
mov
inc
pop
ret
sub
pop
mov
push
ds
scas
bound
push
mov
inc
dec
sbb
orl
push
aaa
push
add
pop
fsubrl
movb
cmc
scas
lahf
cwtl
push
mov
cmp
loop
push
ja
mov
ror
dec
mov
and
add
sbb
dec
mov
repz
sub
bound
mov
mov
sub
and
jp
inc
fwait
and
mov
and
sub
int
pop
dec
dec
insl
sub
pusha
fidivs
insb
mov
mov
pop
mov
pop
mov
cltd
xchg
ljmp
rcll
insb
inc
cld
ljmp
inc
pop
negl
dec
fildll
mov
sub
adc
mov
in
scas
jnp
jl
cmp
shlb
pop
jne
sub
das
movsl
push
push
mov
jo
push
ret
fldenv
in
outsb
push
inc
fwait
ja
sub
js
call
push
outsl
mov
dec
jo
fldt
cmp
test
sbb
xchg
lds
icebp
mov
mov
arpl
rolb
mov
dec
and
cmc
sbbl
inc
call
xchg
jecxz
das
stos
push
and
pop
lahf
cld
inc
xor
mov
add
roll
xchg
mov
les
ljmp
xor
jnp
int
sbb
inc
jmp
outsb
cmpsb
push
add
jl
sbb
in
push
test
std
jp
jg
jb
jno
or
or
les
jecxz
mov
imul
xchg
lahf
subb
std
stos
or
push
mov
or
into
inc
sub
mov
mov
scas
dec
xor
idiv
ficoml
aas
pusha
movsl
std
enter
and
inc
mov
push
sub
bsr
xchg
test
adc
adc
pusha
movsl
pop
adc
inc
pop
add
or
ret
sub
pop
push
flds
xchg
mov
cmp
jmp
xchg
les
das
or
in
pop
ljmp
fwait
pop
push
xor
rcll
sahf
adc
add
push
cwtl
cmp
les
xlat
adc
adc
test
sub
jns
jg
fwait
lahf
lcall
jnp
sbb
jge
pop
sti
mov
sub
cltd
test
xchg
dec
loop
gs
lds
mov
arpl
and
out
stos
xor
jg
ret
dec
loope
leave
sub
scas
adc
out
jg
pop
xchg
add
push
icebp
fisubs
adcb
cmp
aas
rolb
stos
rol
xor
je
or
xchg
sub
aas
and
pop
cld
ret
fldl
sub
std
gs
xlat
sbb
inc
loop
negl
jb
lahf
inc
inc
dec
fstpt
ret
add
hlt
xchg
imul
xchg
and
or
sub
pusha
fldt
jo
lahf
subl
sub
movsl
and
cmpl
add
inc
mov
xor
je
out
push
xchg
les
out
xor
hlt
sbb
fisubl
mov
lds
stos
pop
loope
hlt
inc
xor
jo
dec
movsb
pop
xchg
scas
scas
or
xchg
mov
mov
loopne
adc
push
lret
push
addl
mov
dec
nop
inc
hlt
mov
mov
push
xchg
xor
fistl
mov
shrb
movb
shrb
push
int
cs
mov
ss
stc
into
mov
pop
fisttps
stos
hlt
pop
mov
and
and
call
pop
je
jge
add
sbb
sub
jle
es
push
pop
je
stc
popf
cld
sub
in
aad
jg
cmpsb
lahf
mov
adc
sbb
pushf
dec
xchg
aas
movsl
mov
js
aad
pop
add
shrl
cmpsb
cmp
repz
inc
sbb
xchg
sbb
ja
cmp
adc
push
mov
lret
out
mov
sti
jle
sub
sbb
in
mov
inc
xchg
popa
adc
pop
rorl
stos
cmp
repz
sub
cld
test
daa
xchg
int
pop
mov
lods
mov
shrb
push
mov
test
je
add
loopne
xor
jo
adc
mov
xor
mov
mov
in
jno
jb
inc
popa
clc
mov
imul
jbe
stos
cmp
js
rolb
lods
rcr
xor
test
fstpt
add
loop
mov
or
in
dec
and
pushf
jnp
adc
push
fprem1
mov
sbb
mov
sti
es
pop
mov
les
sbb
xlat
lahf
lcall
push
pop
xor
dec
cmp
pop
inc
or
dec
sbb
gs
insl
mov
xchg
or
jle
shrb
sbb
cld
leave
jae
scas
lahf
pop
test
rorl
cmc
adc
rclb
movsl
xchg
cmp
pop
and
xchg
int3
sub
or
add
ret
xchg
shrl
std
pop
pop
mov
add
loopne
mov
mov
xchg
push
inc
push
mov
jmp
mov
cmpsl
xor
push
push
jecxz
clc
cwtl
out
repnz
adc
sub
dec
test
dec
insb
leave
mov
out
inc
sbb
mov
and
sbb
lret
shll
sub
sbb
in
or
ja
mov
aad
xchg
add
arpl
iret
cltd
rorb
fildll
cs
mov
mov
push
push
push
mov
and
fisubs
xor
cmpsl
stc
outsl
xchg
into
mov
xchg
mov
daa
jg
jno
inc
call
pop
cmp
aam
fcoms
ljmp
out
mov
repnz
mov
hlt
adc
ljmp
es
loope
imul
cwtl
cmp
mov
sbb
and
ljmp
push
repz
pop
push
clc
in
cmp
in
int3
ds
mov
push
rol
inc
fistps
lea
cmp
xor
push
call
out
cmp
cmp
mov
lock
imul
roll
push
movsb
pushf
mov
sahf
push
test
inc
pop
mov
shll
popf
xchg
cmpsb
push
pop
jo
and
stc
dec
jo
mov
daa
or
notl
and
in
cwtl
leave
pop
cs
pop
imul
xchg
call
repnz
sbbl
sub
sbb
jle
jge
pop
cld
cmpsb
push
lahf
sbb
inc
lcall
mov
dec
push
sar
cmpsl
sar
jnp
xchg
fcomps
stc
insl
push
xor
shl
xchg
mov
or
mov
xchg
mulb
jbe
imul
inc
adc
aaa
sub
mov
inc
notb
jne
xor
xor
pop
pushf
push
aam
or
out
xor
mov
lcall
imul
sbb
xor
mov
mov
lods
or
pusha
mov
and
pop
insl
andb
pop
mov
adc
pop
xchg
jo
fistpl
cmp
sub
loopne
stos
popfw
rorb
sbb
lret
fisubl
jmp
int3
jns
orl
test
jbe
pop
adc
jle
xor
lods
lods
jo
aaa
dec
sarl
jbe
andb
lret
cltd
cltd
aam
stos
out
mov
ljmp
jg
aaa
push
mov
adc
push
mov
lahf
xlat
push
mov
lret
xor
cmp
push
out
inc
inc
insb
sbb
cmpb
and
in
mov
arpl
and
xchg
cld
xor
jecxz
sbb
insl
lds
add
or
sub
mov
pop
xchg
pushl
jnp
cmp
jp
xor
push
stos
push
push
lcallw
cli
mulb
in
rcl
xor
addr16
dec
add
jmp
xrelease
into
out
lret
je
xchg
test
mov
sahf
lahf
push
scas
rcl
cltd
insl
mov
loop
dec
imulb
fldt
in
test
jge
jl
addr16
lods
add
pop
xlat
cmp
lret
stos
mov
mulb
xor
xor
mov
cmp
mov
dec
and
and
in
into
jne
add
shlb
jne
pop
lods
inc
data16
mov
je
aaa
adc
in
mov
cwtl
sbb
out
mov
std
jmp
mov
xchg
lahf
rolb
insl
das
jmp
xchg
cmpsb
mov
scas
int3
fs
pop
fdivrl
out
add
or
sub
outsl
sbb
fisttps
cmpsl
pop
jnp
xchg
fs
loop
insl
mov
outsl
test
push
leave
mov
push
in
mov
cs
mov
cwtl
mov
dec
mul
push
cwtl
lds
cmp
pop
inc
mov
inc
xchg
inc
scas
aaa
pushf
dec
sub
mov
daa
movaps
dec
cld
xor
sbb
mov
sahf
xchg
jb
xor
test
data16
lea
xor
data16
dec
push
inc
mov
insb
cmc
dec
dec
adc
jl
call
data16
mov
imul
or
jb
pusha
rol
add
fldt
enter
dec
mov
dec
cmc
jb
lock
sbb
jecxz
or
lcall
sbb
sub
popf
shl
push
scas
fiadds
inc
sbb
mov
les
gs
mov
dec
sub
sti
pop
sbbl
sub
aas
push
add
pop
call
cmp
or
fwait
mov
aad
mov
out
mov
xchg
push
jmp
lret
pop
out
fldenv
fs
lret
add
adc
fcoms
inc
jmp
jnp
mov
sub
jno
inc
imul
notb
push
insb
movb
rcl
cmp
cmp
movsb
jg
repz
test
movsb
mov
out
ds
mov
sbb
int
cmpsb
and
mov
pop
or
jl
and
jns
inc
push
fdivl
push
cmp
shl
jmp
aaa
jecxz
mov
out
inc
add
and
arpl
in
adc
jno
sahf
jg
and
adc
outsb
sub
push
lods
pop
jae
icebp
cltd
add
es
sahf
shll
inc
pop
call
mov
sbb
ret
mov
xchg
cmp
addr16
push
push
mov
rorl
mov
and
sub
repnz
subb
je
sbb
mov
mov
popa
mov
mov
hlt
or
add
sub
fstpt
xchg
fisubl
cmp
bnd
aad
push
scas
jl
aad
jge
mov
pop
dec
dec
mov
push
xchg
lock
xor
fildl
rcll
sub
loop
add
add
pop
xchg
outsl
shll
stc
pusha
and
lret
aaa
mov
mov
xchg
pushf
ljmp
fwait
mov
inc
xchg
inc
push
lahf
pop
fs
cmpb
gs
outsb
ss
pop
sbb
inc
rcr
inc
hlt
inc
mov
jmp
lds
arpl
mov
pop
mov
decl
cli
addl
xor
addr16
xor
jle
out
cmp
shlb
outsl
ja
jnp
aad
inc
cmpsl
mov
sbb
jg
push
aas
jb
sbb
popa
pop
inc
fidivrl
cli
adc
mov
jns
mov
push
sbb
into
mov
lret
call
fstpl
mov
cltd
lock
pop
call
sub
xchg
adc
filds
push
test
fisubrl
xchg
add
jbe
cmpb
or
inc
sbb
movsb
dec
sbb
fsubs
add
scas
aaa
inc
sbb
jle
jl
iret
sti
push
stos
fadd
cmc
mov
sbb
cmpsl
in
push
in
jne
and
xchg
xor
test
push
hlt
or
jb
mov
stos
das
cli
xchg
xchg
test
push
lock
dec
pop
xchg
addl
les
push
push
addr16
insl
inc
jne
sub
les
xor
adc
leave
aam
fwait
sbb
adc
psubsw
mov
add
cs
dec
popa
lcall
push
test
mov
or
cwtl
std
xor
push
ljmp
pop
push
inc
fstps
andnps
xchg
and
orl
push
and
bound
pusha
add
in
loop
mov
in
and
cld
popa
daa
outsl
fisttpl
aad
adc
cmpsl
dec
mov
jg
mov
mov
push
popf
aam
and
push
mov
inc
adc
int
aad
test
adc
jg
mov
push
movsl
or
leave
cld
into
popf
push
xchg
jns
jno
or
in
xchg
outsb
xchg
imul
jmp
pop
shr
pop
jl
inc
add
loop
arpl
jl
popa
mov
aaa
mov
xor
pop
fwait
inc
mov
int3
inc
mov
fdivrs
scas
shll
sti
into
xlat
ss
push
cltd
xchg
or
ja
or
loope
cmp
aaa
sbb
push
insb
jns
adc
dec
inc
push
sbb
int3
fidivl
and
nop
mov
pop
mov
clc
pop
rclb
pop
mov
aas
loopne
mov
adc
cmpl
fdiv
jmp
jnp
pop
pop
stos
sbb
lcall
cmpsb
jmp
mov
leave
mov
jmp
lcall
jge
sub
cli
cmp
xor
insl
enter
jmp
cltd
fstl
cmc
adc
jle
cmp
add
aas
je
push
imul
add
mov
sahf
enter
ss
clc
sub
push
cmp
sub
pop
and
pop
push
insl
or
mov
xor
pop
jnp
mov
xchg
mov
out
sub
out
inc
fcoml
leave
enter
jne
add
call
ljmp
jmp
sbb
inc
clc
shll
mov
or
mov
cli
xchg
jle
dec
mov
jle,pn
dec
push
pop
test
rcll
add
cmp
sub
rol
fwait
cmp
loopne
pop
fstl
pop
ret
adc
rcrb
inc
pop
xchg
clc
ja
lret
icebp
sub
insl
jle
or
scas
adc
mov
jno
adc
push
push
sub
ret
xor
lret
and
icebp
lea
out
dec
add
sub
mov
jmp
dec
mov
rorl
jo
mov
push
mov
push
cmp
adc
xchg
fwait
rol
xlat
lea
pop
push
fstl
xor
mov
test
adc
fwait
jbe
sahf
repz
pop
mov
les
fs
shrb
sbb
pop
mov
mov
jo
shlb
inc
jl
test
loop
push
and
popa
fwait
scas
lret
xlat
mov
jbe
rcrl
mov
xchg
pop
inc
mov
ja
mov
mov
dec
movl
aaa
and
mov
shrb
mov
popa
mov
sbb
jmp
shl
push
icebp
jp
jbe
sti
lea
xchg
rcrl
mov
test
mov
sub
xchg
scas
sbb
aad
xor
push
fbstp
or
sub
mov
stos
mov
cmpsl
xlat
sahf
push
rorb
out
aam
inc
lds
ja
push
mov
pop
mov
loop
pushf
std
xor
and
das
xchg
fs
inc
imul
out
cmp
les
lahf
repz
dec
dec
fdivl
aam
inc
xchg
stos
inc
sub
and
loopne
and
mov
icebp
add
xor
adc
movb
inc
lods
xor
enterw
jg
mov
ficompl
adc
sbb
fstpl
xor
cmp
xchg
es
pop
in
stos
xchg
pop
loop
mov
jp
xchg
xlat
xor
jg
std
je
mov
or
pop
xor
xchg
test
call
xor
aam
xchg
xchg
inc
jne
xlat
dec
xchg
sarb
dec
and
and
clc
xor
mov
or
pop
adc
test
mull
negl
dec
pop
roll
xor
xor
mov
or
clc
jle
popa
jge
dec
fcoml
or
ret
or
stos
xchg
inc
lret
add
inc
jns
icebp
sub
sub
cwtl
sbb
cli
lret
pop
adc
pop
jbe
rcl
mov
add
stc
pop
mov
fsubl
lret
mov
sub
mov
jnp
and
xchg
test
and
scas
loope
inc
pop
stos
inc
adc
lock
fiadds
lret
insl
sbbl
mov
mov
jmp
orb
or
add
xorb
mov
lcall
arpl
rclb
lods
enter
inc
pop
or
stos
mov
xor
fnstenv
ret
movsl
std
rorb
ret
incb
addb
jo
lret
push
fs
lret
or
push
dec
popf
inc
stc
aas
or
mov
jge
pusha
aam
jb
cmp
jbe
fimull
sti
or
sbb
test
cs
adc
out
fwait
sub
scas
icebp
or
pop
insb
loope
aaa
pop
jmp
cmp
sti
sub
inc
add
push
es
cmp
rorb
cmp
imul
mov
in
lods
mov
sbb
scas
lea
addb
in
arpl
push
mov
sub
sbb
fildll
and
adc
push
loop
insl
mov
int
jnp
mov
or
dec
das
repnz
rcrb
cmp
js
mov
icebp
jae
in
sbb
sbb
icebp
jno
out
sub
mov
stc
ror
dec
xchg
jns
mov
mov
sarl
mov
and
dec
sub
jno
lods
ret
sbb
xorl
mov
es
cmpsb
stc
adc
pushw
adc
fnstsw
dec
addl
roll
add
mov
scas
sbb
cltd
adc
ja
jo
movsb
cwtl
test
sbb
cmp
flds
sub
inc
and
repnz
inc
and
aas
push
dec
cmp
cmp
sub
mov
jge
push
push
ret
mov
pop
cmpsb
mov
lods
or
dec
and
outsl
sub
lahf
out
xchg
push
lds
sub
xchg
cmp
subb
or
scas
popf
shll
mov
or
fs
movsl
dec
aad
imul
cltd
or
xor
imul
adc
cmc
mov
gs
cmp
stos
push
jo
nop
adc
lcall
pop
inc
dec
or
add
sbb
mov
and
lods
push
cmp
inc
add
jge
jbe
iret
jmp
xchg
pop
mov
xchg
jnp
fldt
nop
leave
pop
cmp
fwait
popl
mov
out
scas
out
mov
jne
lcall
lret
inc
into
push
jecxz
push
xchg
sahf
mov
jmp
and
mov
out
lods
push
xor
fstps
push
loope
cmp
push
pop
mov
ds
sbb
or
je
pop
gs
lahf
lret
xchg
or
push
popa
fcompl
ret
mov
fcmovnu
dec
leave
push
xor
sti
cmp
push
adc
and
inc
roll
add
push
push
gs
or
xchg
addr16
adc
adcb
jo
jo
scas
and
loopne
int
in
movsl
cli
sbb
mov
imulb
xchg
in
arpl
push
push
or
xchg
clc
cmpsl
insl
out
mov
cmp
loopne
data16
pop
adc
mov
out
mov
xor
sbb
add
fsubl
push
mov
shl
repnz
nop
insb
sub
pop
dec
movsl
xchg
jnp
inc
mov
jae
and
inc
jp
rcrb
push
hlt
insb
inc
aad
ljmp
inc
lahf
in
jns
int
out
in
push
push
insb
mov
mov
xlat
ret
fs
and
push
imul
repz
movsl
cmp
mov
xchg
les
dec
mov
add
fcomip
test
add
mov
pop
cmp
outsb
fildll
sub
popa
sub
stc
and
mov
iret
fcmovnbe
push
pusha
pop
ljmp
and
pop
jo
mov
adc
lock
cmp
data16
sub
ds
push
addr16
mov
xchg
in
fcmovnbe
mov
sbb
and
shrb
dec
add
xchg
jl
xor
xchg
outsl
test
lock
cmp
mov
dec
inc
test
jnp
mov
pop
push
rcrb
ret
cli
xor
xchg
popf
addr16
es
cmpl
rcr
mov
out
dec
adc
out
imul
push
in
push
mov
adc
pop
mov
es
mov
int3
dec
mov
jne
pusha
pop
xlat
and
orl
inc
or
and
cmc
cwtl
jge
add
cmc
mov
in
fidivrs
cmc
aad
xchg
scas
inc
mov
fs
out
sbb
sar
stos
movsb
xor
ret
jo
xchg
fwait
lods
into
jmp
push
adc
lahf
sub
xor
inc
xchg
push
jle
jns
and
push
mov
sbb
adc
ret
xchg
or
in
mov
into
repz
dec
lret
ljmp
pop
nop
sub
push
sbb
mov
adc
pop
cmp
mov
vmovd
push
mov
or
pop
push
add
aaa
mov
cltd
cs
icebp
in
adc
jnp
xchg
mov
scas
ja
jno
mov
in
mov
pop
jbe
cmpsl
sbb
ret
inc
mov
mov
ljmp
inc
mov
fxch
in
mov
insb
mov
xor
inc
cmp
and
lret
lcall
sbb
jns
mov
xchg
aam
jmp
pop
push
xchg
stc
fcmovbe
or
out
repz
lahf
add
subw
mov
ja
inc
and
and
dec
sub
test
sub
cld
subb
loope
push
dec
mov
pop
leave
icebp
fimull
jp
dec
or
sub
push
mov
call
das
fcmovnb
test
add
insl
movsb
imul
lahf
add
cmc
pop
loop
loopne
cmp
jnp
push
inc
fadds
lods
or
cmpsb
loope
out
test
movsl
xor
outsb
push
mov
xor
jb
xchg
lods
dec
imul
insb
sbb
mov
inc
lahf
or
dec
cmp
iret
insl
pop
clc
movsl
ret
arpl
inc
mov
mov
ljmp
add
xchg
in
fwait
out
pop
pusha
dec
mov
sub
or
xchg
out
insl
pop
stc
in
jno
int3
push
icebp
add
push
adc
or
add
pop
repz
mov
lret
in
aaa
dec
imull
stos
mov
insb
mov
fimull
dec
xchg
loopne
adc
xlat
xchg
lock
adc
cltd
mov
mov
cltd
insl
lds
ljmp
xchg
jb
je
jecxz
stos
push
sbbb
das
dec
arpl
xor
movsl
jle
jnp
clc
lret
cmpsb
js
mov
jge
pop
rcll
icebp
fwait
loope
lods
mov
inc
rcl
aas
scas
test
es
outsl
notl
stos
rolb
js
sti
out
push
or
xchg
lods
fcoms
out
sbb
mov
insl
sbb
cs
or
ffree
dec
inc
xchg
cmc
ret
in
push
jae
fistps
cmp
bound
inc
std
mov
lods
dec
fldpi
xor
pusha
inc
and
daa
aas
mov
sahf
xchg
leave
data16
pop
jo
fimull
mov
and
in
negl
cmpsl
sahf
inc
loop
insl
xor
xor
inc
mov
jnp
jno
icebp
inc
mov
push
add
ss
rorb
mov
in
jle
test
lcall
mov
daa
popa
xorb
jecxz
inc
or
jecxz
clc
pop
lods
jge
lret
push
les
test
scas
and
or
add
adc
mov
adc
das
xlat
lret
jg
subl
adc
inc
imul
loop
push
push
lahf
xchg
add
push
out
int3
push
fdivl
dec
adc
insb
push
cs
movl
fisubrs
push
test
stos
cmp
arpl
lcall
push
dec
fsubrs
pop
mov
aaa
adc
sbb
sarb
in
test
sub
push
push
xor
das
xor
cmpsl
push
inc
scas
out
jge
pushf
in
stc
xchg
lahf
jmp
inc
in
scas
jo
cmpsb
add
js
lret
enter
movsb
int3
cld
repnz
push
call
pop
iret
pop
aas
inc
push
inc
out
test
lods
rolb
sub
or
push
add
mov
ret
jno
lret
sub
sahf
adc
test
fmull
es
inc
imul
add
mov
push
adc
mov
sub
jns
lret
xchg
adc
leave
test
xchg
jb
gs
clc
clc
pusha
test
dec
adc
ret
ret
ljmp
adc
push
je
cmp
pusha
stos
mov
push
or
fidivrs
mov
loop
or
add
in
sti
mov
repz
and
in
sbbl
ja
dec
mov
or
in
or
and
sbb
inc
int
test
inc
cmp
inc
push
push
cmc
mov
mov
fldenv
pop
or
push
pop
sbb
lret
inc
pop
or
cmp
mov
fs
loope
xchg
cmpl
jbe
stos
inc
subl
and
adc
data16
test
or
es
inc
leave
jae
js
std
testb
or
mov
cli
lahf
pushf
and
sub
arpl
cmc
and
int
cmp
shl
mov
push
gs
imul
and
xchg
hlt
push
pop
icebp
mov
jg
lock
sub
sbb
xchg
xchg
aas
shrl
and
mov
jae
xchg
lock
daa
stc
shrl
into
cmp
jp
insb
xchg
mov
lds
dec
les
sub
add
inc
pop
arpl
jl
inc
sbbb
xchg
loopne
jnp
test
inc
add
out
pop
aam
xchg
or
mov
hlt
lods
mov
gs
mov
cmpsb
and
adc
jmp
clc
aas
jl
call
fbld
xor
aaa
mov
pop
push
push
dec
fs
gs
fldcw
sub
fwait
xorb
cmp
test
ret
test
fnstsw
fsubrl
xchg
xchg
push
imul
push
cmp
jb
sub
sbb
or
nop
rcll
or
and
lods
xor
jmp
add
jecxz
hlt
fsts
cmc
pop
in
fidivl
cmp
int
cwtl
mov
mov
dec
jmp
cmpsl
xor
insb
jp
jne
jecxz
ds
lock
inc
add
loop
std
mov
cli
lea
stos
outsl
fnstenv
adcl
jbe
ss
dec
pop
scas
rclb
sbb
imul
sahf
fidivrs
sarl
push
and
nop
sbb
dec
call
jecxz
inc
in
push
les
jmp
dec
jnp
scas
cmpsl
icebp
push
add
fdivs
fcomps
xor
cmp
js
cld
rorb
lea
daa
xchg
mov
lods
pop
fnsetpm(287
cmp
adc
in
jmp
inc
push
jnp
push
mov
daa
inc
clc
and
adc
add
xor
push
dec
sub
aam
andl
mov
std
pop
cld
fsubr
movsb
add
mov
jg
sub
nop
shlb
enter
sub
mov
out
or
push
and
cmp
inc
nop
jbe
sub
dec
cmp
inc
mov
inc
adc
adc
iret
mov
outsl
movsl
test
in
xchg
add
pop
push
outsl
mov
out
mov
in
das
push
test
push
add
mov
jg
cltd
dec
popf
xchg
cmp
aaa
jecxz
inc
dec
aas
jne
repnz
gs
jbe
hlt
sbb
xor
push
imul
xchg
sti
mov
inc
inc
mov
fs
mov
cld
repnz
push
movsb
outsl
inc
push
push
mov
pcmpeqd
push
inc
or
les
xor
test
pop
mov
inc
xchg
shrb
hlt
dec
das
and
aaa
ficomps
outsl
fiadds
aam
scas
aaa
sahf
inc
push
adc
add
test
data16
fwait
sbb
ja
fbstp
or
xor
mov
adc
cli
or
pusha
cmp
mov
pop
fld
jle
sub
and
cmpsl
jae
div
xor
ret
jg
lcall
es
int3
bound
ds
stc
out
sbb
push
leave
sub
push
fdivrl
pop
dec
cmp
xchg
sbb
fsubrl
leave
pop
aaa
fldcw
cltd
push
jmp
negb
mov
dec
outsb
mov
test
lds
scas
movl
lret
call
loop
in
push
and
xchg
lds
or
push
mov
mov
cmp
stc
dec
xor
add
add
mov
cmpl
in
xor
aaa
inc
jno
jb
iret
shlb
push
sbb
jg
imul
xlat
js
pop
jno
jb
xchg
and
and
sub
cmp
rcrl
xchg
cwtl
mov
arpl
push
push
cmc
jl
imul
mov
outsl
dec
fs
mov
inc
mov
dec
sbb
jmp
push
ss
adc
mov
inc
aaa
push
into
mov
ret
pop
inc
mov
sub
leave
repz
and
mov
push
mov
call
divb
xchg
popa
xor
push
xor
fwait
inc
neg
add
frstor
push
lods
fidivrl
push
jp
ror
dec
rolb
lods
pop
sbb
sub
mov
cwtl
mov
mov
push
in
pop
sarb
arpl
mov
cld
lock
pop
or
lock
leave
add
stos
xor
call
rcrb
int3
decb
lods
sbb
mov
aam
sbb
pop
loopne
nop
cld
pop
sub
xchg
mov
icebp
ds
ret
xchg
sub
and
mov
mov
cmpsl
fnsave
mov
xchg
mov
nop
push
jmp
loope
in
les
sub
addr16
or
and
sarb
push
sbb
and
sti
jae
je
xor
sub
mov
stos
or
popf
outsb
aam
mov
dec
test
call
mov
xchg
mov
mov
xchg
or
nop
xor
xor
push
movl
andl
frstor
push
sar
sub
mov
jp
dec
insb
pop
imul
mov
jae
out
mov
push
movsl
cmp
add
aad
dec
into
push
popa
aad
repz
push
insl
leave
sub
fidivs
outsl
xchg
pop
pop
sub
cmp
sub
pop
sbb
gs
mov
fs
lret
sbb
filds
stc
popa
rolb
leave
push
jecxz
test
scas
ljmp
cmc
lods
adc
fbstp
mov
add
insb
pop
stos
lcall
daa
xorb
loope
in
sbb
push
filds
sub
adc
lcall
nop
adc
arpl
popa
jcxz
leave
xchg
xchg
in
mov
jbe
mov
mov
pop
test
in
mov
popf
aaa
mov
insl
adc
and
jge
add
xchg
rol
out
andl
movsl
xor
movsl
and
adc
add
adc
sbb
inc
jl
mov
lret
lds
sahf
stc
imul
aam
fcomip
lods
cmp
hlt
push
mov
jnp
lret
hlt
fimuls
es
sbb
add
mov
xchg
jne
cmp
inc
adc
cwtl
inc
lret
mov
jge
pop
lods
mov
push
inc
xor
mov
or
std
cmp
push
push
inc
insb
movsb
sub
jmp
jns
pop
daa
inc
lret
cltd
ret
xchg
ret
cmpsb
rolb
sarl
shl
sbb
out
fmull
int
pushf
push
fwait
aad
xchg
ss
insl
leave
xor
or
mov
mov
out
scas
ja
push
test
outsl
pop
int
sub
cmp
mov
test
imul
loope
out
mov
pop
inc
jne
push
sbb
push
loop
out
xchg
out
xchg
jno
push
and
xchg
mulb
dec
shlb
aas
imul
movsl
cwtl
dec
fldenv
push
pop
jo
cltd
pop
jecxz
pusha
test
repnz
sbb
sub
mov
loop
out
add
adc
pushf
cmpsb
push
fcoml
insl
cmp
mov
nop
aad
xlat
fisubs
insl
fwait
mov
iret
in
fcmovb
mov
inc
sbb
loopne
inc
pop
adc
rorb
aam
inc
and
sti
std
pushf
test
out
push
mov
fwait
scas
xor
sbb
cmp
adc
and
pushaw
lock
push
and
rcrb
movsb
mov
popf
mov
mov
adc
jecxz
icebp
fldt
nop
clc
stc
pop
repnz
jl
lock
jge
dec
dec
mov
fstpt
mov
xchg
notl
push
fucom
cmpsb
push
aam
lock
push
dec
or
mov
mov
inc
popf
and
cmp
mov
notl
dec
push
and
mov
dec
cmp
push
fbld
int
mov
out
dec
xor
sub
mov
hlt
jbe
fbstp
jns
cmp
adc
int3
xchg
aad
inc
pop
push
add
adc
fwait
pop
cltd
imul
xor
inc
lds
sbb
data16
out
add
popf
roll
bound
pushf
mov
filds
jbe
aaa
out
push
mov
int
lahf
mov
clc
call
fistl
and
flds
lds
into
cli
fwait
subl
xor
outsb
out
into
inc
sub
lock
add
inc
sbb
lods
inc
ret
sti
cmp
test
out
or
mov
mov
xchg
sub
fnstcw
mov
xor
hlt
scas
fwait
lret
icebp
rcll
jge
mov
push
call
pop
jae
xor
mov
cmp
ljmp
xchg
ret
sbb
cmp
xchg
or
mov
xchg
or
dec
test
mov
cmc
pop
xor
or
inc
or
ja
pop
ror
stos
sub
push
orl
or
mov
enter
std
inc
sub
adc
arpl
movsl
mov
mov
shr
cmp
data16
xchg
mov
push
cwtl
lods
add
mov
sahf
sub
pop
aas
lea
or
pushf
dec
mov
push
push
mov
pop
sbb
mull
outsb
or
repnz
mov
xchg
push
jb
int
or
cmp
mov
or
or
xchg
in
outsl
mov
icebp
out
cmp
in
mov
jbe
mov
cmpsb
adc
jns
mov
std
stc
cmc
sub
cmp
fs
jb
dec
arpl
addr16
adc
fdivl
lcall
mov
fnstenv
adc
mov
sbbb
popa
popf
jo
lods
pand
sbb
push
call
shlb
and
fwait
push
mov
push
cltd
push
dec
xor
mov
shr
nop
cmc
jmp
es
clc
test
mov
dec
dec
xorl
dec
jno
loop
enter
xor
outsb
add
inc
cwtl
cld
sbb
popa
mov
adc
test
pop
gs
sub
imul
ficomps
pushf
push
sub
fnstcw
add
shll
sub
sbbl
vaddsubpd
push
lods
loopne
mov
mov
push
test
mov
movsl
mov
mov
mov
cmp
mov
call
test
push
xchg
or
inc
dec
push
xchg
inc
sbb
pop
push
jle
shll
int3
aas
sub
mul
dec
cmp
mov
out
int
jnp
mov
sahf
int3
cs
mov
dec
mov
push
jge
andb
lds
sahf
xor
cmp
mov
add
scas
inc
das
je
ja
and
xor
sbb
cwtl
fisttpll
pop
loop
dec
lds
pushf
fbld
cli
push
jecxz
rol
stc
inc
dec
jnp
xchg
mov
push
mov
jno
ret
mov
mov
shrb
add
xlat
ljmp
sbb
push
pop
xchg
pop
jbe
jnp
rclb
pop
shlb
xor
inc
iret
outsb
cmp
add
stos
mov
mov
and
inc
jmp
pop
dec
mov
aad
mov
vpaddq
sub
push
mov
cmp
and
out
into
fistps
loop
std
cmp
bound
mov
cli
mov
repz
push
inc
jae
xchg
pop
pop
fdivl
and
and
mov
jecxz
pop
or
jae
das
cmpsl
iret
pushf
push
shr
jecxz
pop
pop
ret
in
mov
cld
cmp
sub
in
and
fimull
repz
je
inc
xchg
mov
sbb
add
das
sahf
sub
push
xchg
fs
xchg
repz
pop
bound
arpl
stos
pop
push
mov
int3
lret
test
xor
enter
add
cmp
ret
stos
dec
mov
lret
les
gs
xchg
mov
sbb
cld
aas
faddp
push
and
xor
lds
cmpb
cmpsl
das
push
pop
cmc
ja
rol
ja
push
sti
hlt
inc
mov
pop
cmp
adc
lods
mov
sbbb
outsl
cmp
out
scas
dec
dec
jmp
out
adcl
cmpsb
inc
lahf
mov
std
mov
insb
pusha
cld
push
push
pop
orb
cltd
xchg
lret
out
sub
jnp
notl
sar
inc
ss
push
jnp
push
mov
jae
lock
sub
sub
push
sbb
pushw
jmp
cmpsl
mov
aam
xchg
mov
sbb
xor
cmp
xlat
hlt
inc
es
fidivs
mov
mov
popa
sbb
ljmp
addb
jge
jns
cmc
popa
sbb
scas
jle
aas
cs
pop
enter
fstl
jne
mov
jmp
and
cli
outsb
pop
arpl
cmp
adc
add
xchg
xchg
outsb
xchg
pop
adc
xchg
or
xchg
adc
dec
and
jecxz
dec
stos
aam
xor
xor
dec
xchg
jbe
mov
inc
xchg
xchg
fisubrs
pop
addr16
mov
clc
call
cmpsb
movsl
call
xor
sub
add
cmp
sbb
fstpl
adc
fldcw
lods
loop
dec
in
dec
cmp
and
sub
or
adc
cmp
hlt
push
sub
push
lods
mov
cmp
push
lret
pushf
imul
mov
fcoml
in
enter
stc
inc
fdivrs
clc
bound
daa
and
cs
mov
push
cmpsb
mov
mov
imul
pop
insb
jg
outsl
addr16
inc
pop
jno
sbb
cmp
jl
data16
dec
insb
xor
test
loopne
js
inc
sub
adc
mov
lcall
inc
xor
add
mov
jb
push
cmp
outsl
push
getsec
or
jo
mov
arpl
adc
jae
fsubrs
lret
lret
dec
fwait
leave
inc
int3
mov
mov
xchg
ljmp
fisubrs
stc
mov
mov
add
stc
stos
into
mov
js
jge
jbe
push
jmp
sbb
add
arpl
xchg
cmp
sbb
push
or
mov
leave
ljmp
sub
cli
push
lret
jb
aam
add
sahf
cs
mov
and
shrb
mov
xchg
xlat
or
push
push
push
rcrb
sti
mov
push
enter
cmp
cli
idivl
pushf
xchg
xor
test
repnz
cmp
xchg
fisttpl
test
incl
mov
lahf
or
pop
div
sbb
jge
inc
shrd
sub
test
push
push
xchg
ds
push
pop
popf
push
mov
jecxz
sub
shrl
mov
push
jo
add
sahf
aaa
mov
or
rolb
adc
lods
and
xor
bsr
jl
ja
add
inc
pop
addb
cmpsb
adc
fcmovnbe
pop
daa
leave
pusha
lahf
mov
lret
mov
fldcw
mov
imul
stos
adc
insb
stc
in
xor
cld
cmpsl
xchg
push
jecxz
cmp
xor
stos
fildl
sbb
fwait
mov
or
pop
in
rolb
mov
mov
shr
lea
cld
es
fwait
orb
cs
and
sbb
cli
out
negl
outsl
fcoml
imul
pop
jbe
cwtl
dec
js
sub
aas
rclb
jge
test
xchg
push
mov
sub
and
mov
outsl
mov
fldenv
in
mov
mov
hlt
test
push
sub
jle
mov
enter
popa
xchg
negl
add
or
or
xor
or
dec
data16
cld
adc
popf
ds
das
fnsave
mov
pop
and
push
insl
rorb
leave
mov
cmp
scas
push
fstl
mov
push
mov
in
es
push
mov
mov
cmpsl
push
insl
cmovae
in
popf
dec
rcl
fnsave
and
divl
cmp
xchg
jae
ret
enter
dec
outsb
aad
cmp
int
sub
or
lea
push
mov
lcall
mov
stos
add
ja
xor
dec
std
pop
push
push
cmpsb
xor
adc
ja
stos
xor
cli
neg
ret
lret
xchg
loope
mov
dec
sbb
das
sbb
or
bound
rcr
jb
in
sub
imulb
hlt
repz
mov
stc
aas
inc
rcl
popa
int3
mov
test
insl
subl
push
cmp
jmp
adc
lcall
in
aas
ret
mov
lock
pop
push
gs
xor
pop
movsb
or
dec
sbb
les
adc
test
or
inc
mov
fistpll
addl
movsl
mov
int
pop
rolb
das
sub
call
mov
in
pop
hlt
xor
mov
imul
pop
mov
bound
aam
test
in
fisttps
xor
or
movsl
pop
sbb
and
inc
xor
sbb
rcl
int3
pop
jnp
sahf
f2xm1
addl
imul
imul
popa
mov
fiaddl
cmp
test
int3
aas
repnz
js
dec
leave
sbb
cmpsb
mov
es
andb
in
xor
es
xor
lods
imul
ljmp
mov
cld
mov
div
jns
out
cld
fidivrs
xor
xor
movsl
out
cmp
cmp
pop
and
fiadds
dec
es
ficompl
ss
jge
cmp
inc
repnz
xchg
xor
das
je
es
lea
dec
sub
iret
stc
add
loop
insb
jg
cmpsb
scas
xchg
dec
dec
or
xchg
xor
popa
jno
jmp
cmc
xchg
std
into
pop
repnz
stc
pop
sbb
mov
xor
enter
adc
cli
shlb
push
lds
sbb
call
ds
pop
in
mov
fwait
dec
cmp
xor
jge
and
aad
and
adc
lods
lret
sbb
or
insb
inc
cmpsb
or
mov
mov
fisubs
lock
sub
cld
sbb
out
imul
jge
mov
fisttps
add
adc
lea
pop
loope
jae
in
bound
jge
jnp
test
mov
pop
push
xchg
jne
aaa
cmpsl
xor
repz
cmp
dec
ja
gs
shrb
aad
or
jne
jno
mov
mov
mov
xor
cmpsl
nop
cs
or
or
int3
xchg
jl
sbb
sub
sbb
xor
sub
jmp
rcl
mov
outsl
das
sahf
dec
mov
pop
outsl
lods
imul
mov
pop
sub
clc
xchg
and
aad
repz
popf
or
stos
scas
faddl
and
adc
lahf
popa
sub
pop
jge
test
lea
fisttps
jne
jae
inc
cmpsb
out
iret
xchg
inc
pop
mov
rcrl
je
mov
lahf
pop
sub
or
test
int
lret
mov
out
test
ljmp
mov
inc
aam
inc
dec
push
mov
add
aad
lods
add
jge
aaa
cmp
rorb
xchg
mov
push
ss
int3
cmp
add
cmp
fcom
or
mov
jge
and
mov
push
js
mov
lahf
pop
push
jne
cmp
push
cmpsl
mov
pushf
sbb
cmpsl
dec
inc
das
dec
mov
jle
rcrb
int3
dec
fisttpll
or
popa
lods
and
jnp
ret
enter
fidivrs
xchg
in
movsl
bound
aaa
loope
sub
mov
faddl
adc
inc
adc
jae
stos
cmpsb
cmp
into
das
mov
cmp
iret
push
mov
pop
jo
inc
fs
or
jo
movsb
xor
ficomps
out
pop
pop
mov
pushf
jnp
enter
push
inc
xor
sub
ss
jnp
mov
mov
lret
mov
dec
sahf
pop
mov
mov
xchg
jb
stc
xchg
int
pop
dec
ja
lods
iret
add
shr
inc
mov
xchg
sub
mov
shll
lahf
push
out
sub
shll
sti
orb
inc
add
jmp
cwtl
inc
clc
aas
stos
push
add
lahf
pop
vpsubsb
idiv
cld
out
mov
lods
cld
sub
in
testl
sarb
mov
add
dec
push
mov
pop
stc
xchg
or
mov
sub
pop
xor
inc
sbb
cwtl
out
pop
sbb
sub
loop
imul
in
mov
mov
das
fldenv
setp
lods
adc
push
test
xor
ret
mov
cmp
inc
pop
das
insl
jnp
mov
cmpl
mov
add
and
shlb
test
lock
out
inc
aaa
lods
iret
lahf
fmull
xor
adc
push
fidivs
inc
mov
scas
mov
sub
mov
and
cs
iret
xchg
and
adc
pop
ja
or
ja
xchg
xchg
xchg
nop
stos
pop
int3
stos
or
mov
pop
xor
xor
js
imul
cli
fbld
xor
repnz
rorl
lret
dec
push
idivl
xor
xchg
sub
push
imul
xchg
push
sbb
mov
js
pushf
cmp
js
pop
pusha
lcall
lods
cmp
jno
test
push
jne
xchg
pop
std
push
pusha
pop
lock
cmpsb
test
les
jno,pt
loopne
ljmp
repz
mov
mov
xor
clc
cmp
mov
xchg
cld
out
ljmp
mov
sti
xor
out
aas
xor
xchg
adc
push
pop
outsb
cltd
push
nop
add
mov
lods
inc
rol
test
cmp
cmp
push
ja
jmp
mov
pop
xor
and
shlb
ret
mov
fsubrl
leave
shlb
cmpsl
xchg
bound
aad
mov
leave
stc
sahf
in
fadd
insl
pusha
xchg
pusha
sti
sbb
testb
push
dec
fcmovnb
mov
sub
dec
xchg
lret
sahf
push
xchg
stos
mov
das
sub
call
movsb
lods
dec
xor
daa
mov
sub
jecxz
pop
adc
mov
stos
hlt
std
mov
adc
mov
aam
test
jecxz
dec
mov
aaa
addr16
or
movl
sub
dec
mov
call
mov
and
mov
lahf
lea
movsl
fsubs
inc
pop
scas
cli
andl
adc
mov
sub
inc
bound
jnp
xchg
mov
push
scas
movsl
fisttps
outsl
faddp
outsl
jecxz
xor
mov
mov
jo
jo
or
in
jmp
add
add
outsl
adc
sub
or
test
scas
push
jb
rol
pcmpgtw
xchg
inc
inc
adc
push
push
shrl
mov
mov
enter
cld
loop
nop
pop
sahf
test
fldt
push
mov
mov
int
leave
and
int3
jmp
aad
orb
pop
call
lods
add
push
mov
test
adc
push
clc
mov
jp
addr16
jg
xor
ds
repz
aad
xchg
or
cmp
xchg
or
jmp
jo
or
xchg
ror
push
das
inc
stc
dec
outsb
pop
push
and
adc
mov
push
ret
add
push
pop
dec
pop
jmp
push
sbb
les
adc
notl
nop
call
ljmp
xchg
cmp
lret
repz
insl
mov
mov
jmp
jle
pushf
or
fs
sbb
lret
mov
or
pop
test
andl
and
lcall
adc
xlat
xchg
jp
dec
stos
ss
inc
hlt
fwait
mov
fistps
and
cmpsb
push
push
sub
or
imul
and
pop
push
fcompl
lea
lea
aas
mov
call
lea
jp
jl
mov
jmp
mov
push
addr16
cwtl
or
cmpsb
popf
mov
js
adcb
iret
mulb
fildl
add
ret
sbb
push
mov
add
jmp
jbe
xchg
xchg
ds
dec
dec
test
cld
jecxz
cmp
inc
jge
cmp
test
rcrl
add
lock
cmp
fdiv
or
add
mov
and
inc
cmp
sti
mov
pop
xlat
push
mov
push
movsl
push
dec
ror
xchg
pop
dec
pop
mov
push
xchg
xchg
cld
and
push
cmp
mov
fdivrs
jbe
sub
stos
ret
ret
test
push
cli
in
test
add
movl
out
pop
in
jo
xchg
xor
xor
mov
es
xchg
aas
jae
xor
add
push
gs
pop
mov
lcall
clc
mov
mov
push
or
insb
dec
jmp
add
sub
xchg
in
jb
pop
xor
or
pushf
inc
ret
mov
jb
xchg
pusha
push
xchg
jecxz
mov
hlt
je
ficoms
xchg
xchg
dec
dec
sbbl
mov
fsubp
lock
add
mov
fnstenv
roll
insb
leave
or
dec
ss
adc
pop
sbb
repnz
dec
aad
xchg
mov
push
jl
mov
cwtl
sbb
mov
and
stc
inc
pcmpeqw
mov
jbe
fucomip
mov
ds
mov
jmp
in
adc
pop
movsb
test
es
insb
cmp
mov
jbe
sbb
repnz
ror
pop
pop
adc
inc
data16
aas
fldl
push
or
clc
into
mull
xor
push
repz
inc
xor
in
mov
je
jbe
stos
int3
or
or
jo
insb
ror
push
scas
xchg
push
out
in
or
pop
adc
insb
scas
dec
push
pusha
xchg
sub
imul
xchg
inc
xor
pop
cmp
dec
and
xlat
pusha
mov
in
push
out
sub
std
jecxz
dec
xor
xchg
imul
push
pop
cmpsb
mov
outsb
sub
lcall
sub
arpl
inc
rcrb
mov
pop
pushl
jnp
xor
ss
cmpsb
hlt
fdivs
jecxz
mov
push
es
outsl
sbb
sub
dec
pop
push
jbe
mov
sub
mov
sti
stos
movsb
jle
mov
push
lret
sti
jns
inc
stos
adc
hlt
push
jnp
inc
cmp
xchg
idivl
aad
cmp
inc
aaa
scas
lea
push
jle
decb
mov
stos
lret
aaa
js
scas
mov
jl
push
xor
loopne
cli
sub
in
into
mov
inc
add
fldt
xor
jg
add
inc
out
shlb
mov
push
dec
inc
mov
xchg
sub
xchg
jae
icebp
xchg
testl
inc
cmp
mov
sub
sub
mov
into
sahf
ret
xchg
sub
out
lods
sahf
testl
cmp
in
and
popf
andb
or
xor
lds
push
int
jl
mov
add
pop
pop
cmpsl
sbb
outsb
inc
pop
int3
cmp
push
mov
sbb
push
push
add
jnp
call
or
dec
adc
sbb
hlt
popf
stc
cld
cmp
in
mov
test
push
hlt
adc
lcall
sbb
jae
jle
xchg
mov
stos
inc
jmp
dec
pop
adc
pop
or
ret
or
inc
mov
scas
cs
push
pop
sbb
lea
xorb
jae
pushf
test
lods
and
leave
mov
imul
mov
push
cmp
push
in
daa
outsl
pusha
and
mov
gs
nop
push
mov
fwait
adc
shlb
imul
xlat
hlt
test
xchg
repz
ficompl
rcrl
adc
fldcw
arpl
not
ret
jmp
iret
pop
daa
pop
pushl
cmp
jb
adc
shlb
fsubl
popf
mov
dec
movsb
sub
add
daa
pop
cltd
xchg
sbb
clc
insb
inc
jno
ss
xchg
add
xchg
or
add
push
jle
popa
insb
push
enter
ret
mov
inc
jmp
neg
jg
scas
ret
pop
and
fcomps
mov
aad
adcb
rolb
jmp
lea
or
insb
cli
inc
inc
outsl
push
push
test
pop
mov
movsb
bound
sub
xor
mov
cs
mov
call
and
addl
dec
loopne
outsl
pop
inc
aas
push
and
mov
clc
jns
inc
cmp
xchg
and
cmp
xchg
mov
loopne
mov
mov
jle
mov
int
ds
popa
mov
push
sbb
mov
pop
ja
pop
ja
mov
xor
pop
xor
jge
adc
stos
rcrl
cmp
mov
cmpsl
jo
xchg
xchg
dec
scas
lea
cs
inc
add
xor
lea
mov
popa
jg
adc
mov
dec
add
fbstp
mov
ds
pop
jb
loope
mov
sbb
xor
sti
mov
lea
cmp
adc
pop
popa
xor
lods
mov
mov
and
adc
fisttpll
or
push
mov
mov
rclb
out
cwtl
in
jno
mov
pop
and
mov
scas
ret
outsl
sub
xchg
cmp
pop
cwtl
ss
test
pop
popf
mov
push
test
in
js
mov
shlb
std
xor
xor
jbe
test
fwait
pusha
ds
in
cmp
xchg
mov
mov
out
fwait
cmpsl
inc
add
sub
cmpsb
add
push
xchg
test
jmp
push
std
sahf
std
pop
or
out
push
sub
xlat
push
xchg
xorl
int3
ret
pop
sahf
les
inc
and
call
mov
mov
push
inc
add
xlat
jge
xor
and
mov
mov
test
mov
out
cmp
jno
jmp
int3
mov
dec
or
lds
adc
jnp
mov
dec
dec
mov
fld
jecxz
mov
stos
jno
push
sub
stos
pop
fdivrl
jbe
jb
cmp
jo
push
mov
sub
repz
inc
mov
xchg
scas
adc
push
arpl
mov
es
adc
cwtl
and
enter
pop
xlat
inc
jae
int3
dec
add
cmp
xchg
fs
mov
inc
mov
adc
push
mov
xor
aam
ret
lods
loop
sub
adc
ret
xor
arpl
mov
sub
sarb
movsb
adc
pop
push
int3
loopne
ficoml
sbb
test
sub
inc
loop
rcrb
sub
xlat
pusha
repz
and
add
pop
lcall
adc
shl
test
and
outsl
dec
sahf
ret
out
cmp
jae
jns
scas
mov
mov
adc
adc
pop
cmp
mov
mov
mov
out
arpl
int
or
rcll
sti
xchg
je
mov
std
fdivr
jae
ss
pop
xchg
sbb
je
xchg
out
sub
das
scas
xchg
mov
cld
dec
lds
push
rol
ljmp
xor
fildll
cmp
fdivp
insb
adc
nop
sti
fsubp
inc
rorl
mov
fistpl
xor
xor
add
orb
inc
outsb
or
lcall
adc
lock
ret
movsl
push
pusha
cmpsb
mov
in
shrl
nop
push
or
iret
mov
test
mov
and
rep
adc
xlat
insl
int3
adc
lea
xchg
test
push
dec
jns
mov
push
and
les
push
rcrl
xlat
pop
daa
mov
jbe
cs
mov
add
lds
arpl
clc
push
push
pop
add
sbb
dec
repz
scas
push
sarl
repnz
jg
sbb
jbe
idivl
or
pushf
ret
shlb
adc
in
fmuls
cld
arpl
repz
sahf
mov
icebp
lahf
cs
lahf
jae
test
std
aaa
mov
push
lret
lcall
sbb
dec
roll
ret
cmpsl
lods
jp
add
dec
push
lret
out
jg
xor
fs
rcrb
jp
imul
enter
outsb
int3
or
repz
test
js
aaa
in
cli
and
mov
pop
bound
idivb
or
add
call
add
and
test
lea
scas
hlt
mov
pushf
cmp
xchg
mov
xchg
aas
loopne
push
jmp
pop
inc
les
setae
fs
and
cltd
push
lea
sub
sbb
jmp
mov
shll
lea
sub
cmc
int
and
adc
shll
push
out
scas
call
or
gs
adc
mov
jp
add
outsl
call
aaa
lcall
fwait
lods
pop
add
lahf
or
mov
sbb
pop
je
imulb
bound
bswap
mov
and
repnz
aam
or
jno
dec
xchg
push
pusha
rcr
ret
jno
test
repz
xchg
sub
mov
pusha
sbb
push
repz
mov
outsb
out
inc
mov
out
imul
cmpsb
adc
xchg
jb
mov
iret
push
ret
xor
scas
inc
fmul
ljmp
push
inc
ds
xchg
movsb
xchg
test
and
xchg
test
and
pushf
xor
aas
movsb
pop
mov
bnd
push
cmp
jl
stos
or
dec
mov
xchg
pop
stos
jbe
outsl
in
sbb
jbe
xchg
adc
dec
nop
sub
pop
or
adc
jo
pop
std
ffree
stos
scas
add
cmp
jbe
mov
sbb
in
leave
loop
idivb
xorb
jne
out
xchg
mov
mov
aaa
mov
fmuls
dec
and
addr16
xlat
ja
dec
loopne
outsb
cltd
mov
cmp
bswap
xchg
mov
jnp
add
pushf
in
jnp
jge
mov
mov
xorb
push
loope
push
or
mov
ret
addb
mov
dec
pop
enter
and
cmp
stc
mov
ss
adc
and
and
sbb
inc
sub
push
dec
in
dec
lods
xor
cs
dec
dec
mov
ss
aam
test
fidivs
add
outsl
or
xor
lods
cld
scas
out
lods
cmp
xchg
and
mov
outsb
sar
dec
mov
or
data16
cli
jno
sub
xor
jg
mov
jns
in
adc
jl
inc
mov
addr16
xchg
int
dec
pop
fisubrs
inc
lods
mov
clc
out
stos
loope
int3
sar
repz
call
cli
pusha
or
inc
mov
lret
mov
addr16
or
sub
fst
sub
idivb
andb
lcall
ds
add
lcall
push
fsubrl
jo
in
mov
push
adc
add
test
jge
cld
ljmp
fists
inc
dec
mov
ret
adc
mov
fcoms
mov
sbb
jne
mov
add
clc
into
xor
test
xor
adc
repnz
int3
into
cmpsb
push
xchg
mov
cld
pop
add
cmp
cwtl
jge
cmp
xorl
or
cld
mov
or
or
push
mov
imul
sbb
or
push
int3
fdivs
lds
inc
pop
mov
clc
into
pop
xor
jp,pt
sub
add
mov
sbbl
shll
mov
out
stos
mov
enter
fnstcw
je
fcmovnu
ds
mov
fsub
movhlps
jmp
shll
out
pop
mov
push
int
cmp
xchg
xchg
ljmp
cld
push
stc
push
stos
adc
int
lods
xor
push
rorl
sahf
ret
dec
xchg
xchg
mov
add
mov
gs
push
jle
adc
mov
dec
leave
in
mov
mov
mov
mov
fldl
mov
js
jnp
cltd
jnp
cmp
idivb
pop
and
out
and
gs
mov
and
lret
sub
ret
xlat
mov
mov
loopne
adcl
shll
xchg
in
lret
mov
insl
xsha256
cmpsb
xchg
xorl
not
inc
push
in
jo
insl
push
incb
xchg
shl
ljmp
jmp
pop
mov
fcompl
fsubrp
negl
cmc
ss
mov
dec
aas
andb
jae
lret
cltd
out
xor
in
roll
push
movsl
lods
int
push
jp
sub
add
mov
shl
test
jo
or
cmp
xchg
inc
addr16
les
popf
cmp
or
ss
xor
bound
or
cwtl
pop
ret
or
ret
jno
jne
xor
pop
dec
inc
std
pusha
or
dec
xchg
in
mov
sbb
fildll
cltd
call
f2xm1
in
push
test
xchg
int
or
cmp
jae
inc
xlat
repnz
in
and
lahf
mov
pop
or
push
dec
xchg
sub
push
xchg
inc
adc
lea
lods
inc
scas
popa
insb
test
lcall
xor
pop
sti
xor
xor
push
jge
cwtl
lret
pop
bound
stc
push
jg
in
stos
lret
xchg
in
pop
cmc
icebp
out
mov
jbe
clc
adc
fistpll
orl
leave
in
mov
movsl
xchg
stc
shlb
fadds
lcall
mov
and
lret
cltd
push
jge
xor
add
xchg
cmp
bound
or
push
dec
jb
sbb
mov
or
ljmp
stos
and
popf
in
jle
mov
push
sbb
mov
call
pop
lods
test
movb
push
dec
sbb
sbb
call
lcall
in
sub
lret
ret
in
add
shll
cmp
pop
pop
pop
mov
xchg
in
inc
int
xchg
sbb
cmp
push
jne
mov
or
or
pop
push
js
dec
shlb
add
cs
mov
pop
mov
xor
jae
les
fnstenv
adc
ja
ja
mov
in
leave
jle
dec
inc
adc
push
xchg
out
xchg
mov
aam
mov
enter
mov
fbld
and
insl
cmp
rolb
xchg
sub
loop
insl
inc
inc
sti
ja
jmp
test
jecxz
pop
leave
hlt
rclb
fwait
cmp
in
adc
mov
lret
arpl
aad
inc
mov
xchg
fmuls
add
mov
cld
and
pop
inc
fs
jp
lret
xlat
xor
dec
ljmp
push
dec
mov
test
and
cmc
inc
mov
mov
into
mov
and
popa
xlat
pop
sub
cmp
mov
sub
xor
mov
xchg
rcrl
add
pop
dec
fwait
jle
jl
cmp
cmp
ja
movsb
rcl
fisttpl
push
push
subl
or
xor
movsl
insl
and
ljmp
jge
test
es
and
cs
jno
jns
jb
push
test
loop
or
aaa
fdivrl
mov
xchg
push
or
inc
leave
jge
push
jns
stos
pop
sahf
movsl
imul
lods
dec
push
mov
pop
js
and
mov
push
jmp
jg
pop
or
adc
push
jnp
outsl
and
roll
push
push
stos
inc
xchg
and
in
xor
xchg
sub
lret
cwtl
inc
jecxz
xor
add
fdivrs
subl
adc
xor
into
test
jecxz
imul
sub
pop
mov
mov
xlat
inc
jae
aad
js
int
sbb
fdivs
cmp
sub
dec
ret
xor
adc
xchg
xchg
jp
sbb
pushf
shll
negl
test
pop
imul
popa
aas
clc
shlb
inc
add
add
sub
mov
jns
add
mov
pop
xchg
popa
mov
enter
jle
pushf
and
cmp
xorb
pop
dec
pop
or
mov
shlb
cmp
xor
xor
and
cmp
lcall
fnstsw
push
push
addr16
mov
xchg
pop
sub
pop
sbb
cmc
rorl
or
adc
adc
push
cmp
movsl
or
mov
loopne
and
fs
pushf
lods
adc
mov
repz
out
wrmsr
fisubl
call
xor
xchg
mov
aad
aad
ja
pop
repz
les
enter
adc
jp
insl
int3
dec
or
inc
outsb
jmp
xor
arpl
add
jo
imul
outsl
pop
ds
out
push
ljmp
scas
and
hlt
add
pop
bswap
lret
stos
scas
imul
add
jnp
push
dec
jo
into
mov
sahf
pop
cmpsb
out
fbld
pop
dec
lds
jno
fimuls
stc
push
and
outsb
in
xor
adc
lret
outsl
fdivl
outsb
or
loope
lret
pop
loope
dec
or
cmp
and
dec
dec
fidivrs
out
outsl
push
hlt
inc
mov
sub
es
mov
xlat
das
loope
add
std
cmpsb
cmp
mov
cltd
push
adc
into
pop
mov
stos
imul
mov
adc
pop
movsb
out
xchg
daa
mov
mov
subl
sbb
sbb
pop
ja
out
pop
sub
es
xor
lea
mov
addb
popf
mov
sub
lahf
test
and
push
jb
push
mov
or
adc
es
push
testb
pushf
fcomi
iret
sub
lahf
push
movsl
rcl
in
adc
and
or
pop
fisttpl
and
sub
mov
mov
pop
xor
cmp
gs
cs
mov
ljmp
xchg
adc
xor
adc
int3
mov
mov
mov
in
fs
cmp
popf
inc
out
and
xor
cltd
jl
dec
cwtl
adc
or
test
shr
ret
jo
stos
cwtl
xor
mov
aaa
or
push
dec
dec
mov
dec
sbb
push
lods
mov
in
insl
imulb
mov
das
imul
jg
push
adc
out
faddp
stos
lret
jp
sti
or
das
mov
dec
cmp
ret
btr
sarl
bound
fcompl
cltd
and
cli
inc
or
inc
sub
push
sub
add
js
bound
dec
adc
fbstp
add
push
jno
pop
ret
jmp
jmp
fldcw
test
sahf
imul
sbb
push
sub
jno
jg
push
add
fists
enter
lea
arpl
outsl
xchg
mov
test
inc
push
je
rcl
mov
jge
dec
popa
sub
cmpl
xchg
xor
xchg
push
mov
shrl
adc
push
jmp
popf
sbb
lea
xor
das
push
inc
mov
std
sbb
jmp
fs
adc
das
mov
inc
or
outsb
mov
divl
in
or
dec
mov
aam
pop
fisubrs
push
and
int3
inc
inc
aaa
xor
mov
jle
or
mov
or
push
in
pop
cmp
or
and
lcall
xor
or
stos
push
jp
bndstx
ljmp
sbb
repnz
iret
and
add
mov
fnstenv
jg
cmp
and
pop
jp
jne
dec
aad
fisttpl
or
into
es
pop
cs
stc
fsubs
sarl
insb
cmp
aad
or
pusha
pop
pop
ret
xor
icebp
inc
call
into
leave
popf
ja
lods
mov
push
and
ss
push
das
mov
mov
jb
cwtl
mov
pop
xlat
inc
imul
adc
test
mov
pop
xchg
pop
je
int3
cmp
cmp
es
xor
or
call
cmpsl
outsb
mov
sub
push
sbb
inc
lcall
cs
shll
adc
mov
lea
or
add
cmp
dec
lcall
mov
xor
into
push
lret
mov
sbb
xchg
cmpsl
inc
lods
sbb
into
in
mov
sub
int3
iret
jle
or
aaa
ret
int3
call
fcoml
das
clc
inc
pop
xchg
xchg
iret
push
aad
mov
jb
jnp
jmp
cld
ja
inc
icebp
mov
je
pop
adc
push
push
xchg
pop
mov
call
lret
push
jb
jnp
insb
cwtl
adc
jp
sub
frstor
bswap
cmp
push
aad
xor
pop
aam
clc
movsl
stos
xor
and
jo
push
xchg
movsl
out
adc
xchg
addr16
xchg
jo
out
and
mov
and
sbb
cmpsl
es
xchg
adc
xor
clc
testl
xchg
mov
mov
mov
inc
sbb
pop
sub
ret
je
lods
cli
xchg
lods
or
scas
sbb
ds
mov
lcall
mov
dec
imul
sub
cmp
xchg
add
out
push
push
lcall
ss
add
adc
out
arpl
stc
enter
mov
push
imulb
int3
dec
test
sbb
push
fcompl
jecxz
scas
aam
out
shr
mov
jl
test
jo
repz
inc
xor
bound
xor
adc
and
jmp
es
outsb
sub
mov
xor
dec
ss
lcall
mov
mov
and
imul
insl
push
adc
mov
push
loopne
outsl
in
push
pushf
iret
mov
lods
cs
std
sub
bound
dec
mov
in
dec
sub
loop
or
clc
movsl
or
inc
dec
jnp
je
pop
sbb
adc
hlt
adc
mov
push
xor
dec
add
jg
add
adc
xor
stos
or
xchg
stos
cmp
pushf
movb
xor
lock
push
stos
and
test
fdivs
push
andb
aas
fwait
lds
dec
inc
add
push
fidivl
and
xchg
jb
pop
mov
push
fidivrl
jg
pop
sub
push
xchg
and
in
jge
jns
jl
add
fdivl
in
out
jb
out
call
arpl
push
add
cmp
and
enter
ds
out
dec
mov
jo
add
cmp
mov
ds
sub
fwait
add
mov
in
mov
in
aas
sub
aaa
cmp
push
adc
addr16
imul
pop
fisttps
lea
lahf
imul
shlb
out
inc
mov
in
add
sub
adc
sub
stos
dec
sub
fsubrl
dec
bound
out
insl
aas
add
fcmovnb
lret
push
push
daa
stos
jmp
mov
pop
mov
das
mov
fldt
outsb
jp
lcall
hlt
xchg
test
nop
cmp
clc
aad
out
inc
xorb
xor
movsl
xchg
jbe
ds
pop
movsb
into
inc
push
es
xor
push
dec
mov
mov
ss
push
jp
test
loop
scas
ja
idiv
cltd
dec
imul
rol
jb
sub
pushf
mov
jns
mov
lahf
sub
jmp
cs
mov
push
mov
and
dec
or
aad
mov
loop
es
pop
sub
mov
sbb
ret
adc
add
sbb
pop
in
clc
pusha
xor
popa
insl
cwtl
or
stos
mov
aaa
ret
jb
adc
xchg
lods
out
jae
or
xchg
mov
popa
xchg
jl
xlat
sti
dec
cli
inc
les
sub
aam
cmp
loopne
nop
jae
push
jmp
sub
xchg
adc
dec
or
xchg
inc
or
jge
inc
into
pop
cmp
setnp
inc
clc
inc
lds
lret
mov
sbb
xor
std
shl
jl
out
outsb
mov
mov
push
std
outsb
ds
sbb
dec
xchg
out
push
sub
outsl
inc
jge
test
sbb
or
xchg
fst
aaa
stos
sbbl
cwtl
adc
xor
es
rcll
stc
mov
xlat
outsb
pushf
mov
shll
xlat
imul
mov
sbb
inc
call
push
cld
outsl
ficompl
stos
lcall
mov
xor
in
pusha
push
xlat
adc
xchg
or
lods
push
shll
jnp
and
jle
in
mov
in
add
sti
int
mov
mov
lahf
push
or
push
mov
test
movsl
ja
pop
xchg
xchg
jle
mov
sub
aaa
out
push
std
pop
xor
subb
rclb
dec
jae
lahf
xchg
xchg
push
ja
pop
and
inc
xchg
gs
fidivl
cld
out
jae
aas
sbb
test
lock
loop
cmp
sub
and
ljmp
push
mov
push
rcrl
pop
cmp
popf
sahf
adc
shll
out
jmp
add
inc
mov
clc
cmpb
push
dec
jmp
jbe
hlt
pop
imul
jecxz
push
outsl
fwait
dec
jg
push
pop
xchg
cmp
lock
mov
xor
call
jmp
and
push
ror
daa
in
daa
pop
sbb
mov
or
inc
and
fsave
push
shrb
dec
subl
add
sub
jae
mov
or
cmc
in
adc
arpl
in
dec
mov
mov
repz
sbb
jl
add
adc
xchg
stos
js
cmpsl
xchg
lds
or
sbb
arpl
les
popf
push
cmpsb
repnz
xchg
popa
nop
sbb
mov
mov
cmc
mov
or
jmp
insb
stos
fwait
iret
mov
in
mov
into
lea
sub
or
repnz
sub
fnstenv
cmp
xchg
mov
imulb
mov
negl
sbb
cld
enter
outsl
in
sub
inc
adc
into
or
cli
aam
shlb
jecxz
iret
mov
inc
scas
loop
xor
test
pop
mov
in
and
inc
arpl
pop
mov
jne
jecxz
dec
fs
xor
mov
add
sub
dec
or
mov
int3
jnp
lods
add
sti
ret
push
pop
jb
fdecstp
and
xor
jecxz
inc
mov
cmc
decb
cmp
push
xor
jecxz
filds
push
jb
xlat
mov
fldl
mov
ror
xchg
js
dec
adc
or
cmp
mov
out
xor
fstpt
cmc
and
stos
mov
dec
dec
rorl
adc
les
icebp
or
aas
into
inc
arpl
movsb
mov
in
pop
sbb
iret
fdiv
mov
scas
das
fwait
mov
loope
lahf
xchg
std
sbb
mov
lcall
and
push
sbb
int3
icebp
xor
pop
fistpl
add
sbb
insl
push
aaa
jge
sbb
mov
int3
xor
xlat
pop
imul
sbb
scas
aam
push
ljmp
dec
xor
sub
cld
inc
loop
mov
dec
aam
xchg
test
scas
adc
scas
sbb
sbb
push
enter
inc
xor
sahf
dec
jnp
cwtl
xor
stos
sti
cmp
mov
nop
inc
pusha
dec
cld
xor
les
adc
inc
fisubrl
or
jmp
cmpsb
dec
jne
adc
inc
add
pop
stos
stc
dec
addr16
jo
adc
dec
cmp
outsb
jg
sub
negl
pop
pop
sbb
ljmp
sysenter
sahf
movsl
xchg
scas
jmp
repnz
cld
pop
dec
rol
pop
dec
sti
xchg
xor
sbbb
in
pop
xor
lahf
shl
mov
push
pop
mov
stos
or
inc
into
mov
sbb
mov
ficoms
shll
mov
int
dec
sub
call
js
dec
lcall
jg
mov
sub
xchg
cmc
inc
jnp
ja
add
sub
icebp
sbb
or
ds
add
cli
xchg
inc
inc
mov
cmp
dec
sub
enter
arpl
div
adc
cmpsl
sub
or
rcrb
adc
lds
inc
xchg
mov
push
cmp
push
adc
out
clc
sub
jno
sbb
push
insb
mov
insl
adc
sarb
int
fwait
shrb
int3
inc
and
xor
mov
pop
push
lods
ret
fwait
push
mov
push
or
fstps
mov
and
aam
or
in
ficompl
jns
sarl
in
lods
daa
jge
inc
out
lods
stc
movsl
imul
ucomiss
add
push
and
cmp
test
je
mov
loopne
loope
ucomiss
xchg
scas
hlt
subl
fstl
pop
and
xor
mov
mov
dec
repnz
jb
sarl
sub
jge
push
out
fsts
jl
xchg
int3
stos
enter
pop
mov
cmc
adc
repz
cmpsb
repnz
dec
loope
ja
jge
imul
incb
mov
sbb
aaa
dec
inc
dec
xor
out
scas
mov
mov
jnp
mov
xchg
push
je
and
fisubs
imul
fnstsw
mov
sti
cmp
push
test
shl
cmp
fiaddl
pop
sbb
pushf
jnp
push
jbe
fnstcw
je
fucomi
std
adc
pushf
mov
dec
ret
mov
mov
cmc
int
jl
xchg
add
into
mov
jmp
mov
xchg
pop
jg
jno
push
jg
jns
add
dec
or
jmp
mov
mov
movsl
dec
sbb
les
mov
sub
je
jmp
ss
jb
fsubrl
push
and
jns
aad
or
sub
cwtl
test
fmul
insl
enter
jb
push
mov
inc
loopne
mov
fnstsw
xchg
ror
mov
out
stos
or
fs
stos
inc
add
jnp
jae
ja
outsb
cmpsl
push
ret
shrl
adc
jl
pop
les
jbe
jns
aad
mov
inc
bnd
inc
cmp
fdivr
icebp
arpl
mov
sbb
sbb
fldcw
mov
movsb
cmpsl
push
mov
mov
sub
arpl
pushl
mul
popf
arpl
lahf
lahf
enter
loopne
loop
lods
jg
push
outsb
dec
sub
cmp
pop
imul
mov
push
push
repz
ds
movsb
cmp
cmp
mov
roll
dec
iret
xchg
aaa
int
filds
adc
arpl
mov
movsl
adc
dec
cmpsl
arpl
shl
jl
inc
mov
cmp
mov
dec
inc
dec
dec
pop
imul
fstpl
mov
and
xchg
adc
in
jae
fisubl
divl
enter
mov
and
test
arpl
adc
cmp
repz
popf
add
ljmp
into
jl
clc
mov
jp
cvtps2pd
in
pop
icebp
dec
jp
repz
sarb
push
and
mov
cmp
fdivp
aad
pop
lcall
scas
or
std
sbb
fnstsw
push
and
ret
stos
outsl
call
sbb
or
adc
jmp
lcall
loope
or
outsb
popf
ficoml
add
pop
push
sub
mov
imul
add
mov
pop
movsl
jne
fs
pop
cmp
enter
gs
jb
cmp
push
ret
shlb
xor
loop
aaa
fiaddl
shlb
xor
adc
cltd
stos
arpl
sbb
pop
mov
push
xchg
or
dec
lret
clc
fistps
and
ljmp
mov
addl
cmp
mov
shld
das
in
int3
cmc
inc
stos
int3
dec
and
outsb
hlt
cmc
lret
insb
mov
mov
mov
pusha
lods
xorl
jp
cmp
scas
pop
std
in
xor
push
or
xlat
icebp
xchg
inc
xchg
lods
cmp
pusha
movsl
jae
pop
jo
std
xor
lock
adc
mov
add
ljmp
sbb
fstpl
mov
mov
es
mov
jp
or
push
and
test
xor
push
and
or
sbb
sbb
imul
mov
jg
loope
mov
sub
in
or
aas
sub
xor
fwait
pusha
push
rcrb
es
push
xor
fdiv
mov
test
fstpl
inc
xor
out
or
pop
mov
insl
addr16
xchg
inc
sbb
mov
cmc
sarl
in
xchg
jne
push
mov
fildl
pop
fdivrs
pop
jnp
in
dec
mov
push
jae
add
adc
dec
into
pushl
lea
or
mov
ss
sub
subb
cs
cmp
mov
and
cmp
lahf
cmpsb
add
scas
sbb
pusha
mov
mov
iret
addr16
pop
xchg
push
sbb
sahf
lcall
mov
lock
dec
les
repnz
clc
jne
in
rol
sti
in
mov
repz
add
clc
mov
add
lds
std
mov
add
xor
sub
sub
add
mov
push
daa
add
out
cmp
jo
rcl
pop
std
into
notb
adc
adc
sbb
lea
jo
rorb
pop
pop
jnp
les
dec
sarb
stc
sbb
cld
add
in
pop
ja
xor
pop
push
push
ja
and
fisttps
shr
sub
jbe
scas
jns
jns
push
sbb
mov
das
cmp
jns
frstor
shrb
test
dec
mov
add
stos
loope
inc
adc
fldenv
jle
ret
xlat
cmp
sbb
mov
addr16
clc
jbe
mov
or
pop
inc
sbb
dec
sbb
pop
ret
add
add
pop
or
jb
inc
and
ret
push
sub
rol
pusha
or
cmp
pop
bound
adc
xor
movsb
dec
mov
aad
xchg
shr
lret
gs
ret
nop
loope
fs
mov
arpl
jns
adc
fisttpl
adc
jae
frstor
out
fimull
sbbl
testl
cli
movsl
jo
add
in
pusha
ret
arpl
jbe
dec
cmp
adc
mov
adc
shlb
cwtl
cld
imul
and
pushf
jge
aam
loope
lods
stos
or
repnz
jno
jmp
and
xor
lret
pusha
dec
pop
cmp
adc
popa
or
push
sti
ficoml
push
jo
sub
bswap
mov
push
ljmp
daa
insl
mov
xor
out
fidivs
cmp
and
xchg
ja
sbb
inc
push
aam
pop
push
iret
push
push
loope
scas
xorb
es
inc
mov
pop
lret
xchg
jae
inc
push
shlb
mov
mov
inc
sbb
push
adc
mov
pop
addb
ret
rcll
hlt
cmp
cmp
in
cmp
jo
test
pop
into
test
inc
jmp
ret
call
pop
bound
gs
sub
test
or
insb
push
mov
mov
ret
loop
inc
mov
cmp
xchg
addr16
data16
sbb
and
inc
in
movsl
mov
pop
cmp
fsubs
add
jmp
mov
jp,pn
fisubl
dec
movsl
adc
xchg
cld
out
lods
inc
pop
bnd
rcll
mov
in
fwait
loope
popa
jo
adcb
jecxz
rorb
push
icebp
jg
mov
insl
scas
or
sub
fildl
out
pop
mov
dec
out
stos
andl
jecxz
shl
or
cli
outsb
aaa
add
sbb
ss
pop
cmpsb
and
testb
vunpckhps
inc
push
pop
and
or
fldl
pop
ret
divl
xchg
lods
and
imul
push
mov
and
xor
or
daa
jle
inc
sub
xchg
cmp
iret
sub
push
and
repz
int
xchg
adc
mov
test
xor
inc
in
xor
sub
dec
lods
ljmp
cmp
in
test
adc
add
sbb
jnp
aam
mov
in
inc
outsb
pop
incl
insb
push
sub
dec
or
testb
movsb
sub
ss
xchg
rolb
adc
out
scas
cltd
sub
mov
pop
mov
insl
js
jecxz
cltd
das
dec
pop
dec
mov
pop
icebp
roll
add
imul
fmull
sub
aam
inc
xlat
cmp
inc
mov
ss
cmp
and
jae
inc
xor
inc
jns
add
cmp
adc
sbb
or
dec
call
pop
cmpsl
jo
dec
scas
mov
es
push
xchg
dec
xchg
adc
jnp
out
out
xor
xchg
scas
ljmp
bnd
adc
ret
mov
mov
add
aas
push
adc
add
inc
cli
or
int
cld
paddd
or
dec
xorb
xchg
fs
in
jmp
or
sti
js
pushf
cmp
fistpll
cli
xchg
stos
in
iret
add
pop
or
cmp
jge
ljmp
aaa
loopne
movaps
jp
leave
adc
repnz
mov
iret
lods
rclb
fisttpll
cli
fistpl
push
repz
icebp
fsubrl
stos
xor
sbb
jnp
mov
push
pop
mov
cld
mov
sbb
push
mov
shrl
loope
dec
push
xchg
mov
inc
fldcw
pop
push
jnp
mov
push
mov
push
ret
push
andb
inc
add
mov
ffreep
fcmove
testl
test
lcall
dec
push
adc
mov
adc
in
call
dec
lcall
das
cld
adc
arpl
mov
sub
pop
iret
addl
outsb
scas
mov
adc
dec
nop
in
outsl
fwait
pop
into
dec
and
int3
cld
inc
ja
les
add
mov
xchg
mov
fldt
cld
sbb
je
dec
mov
aad
adc
mov
out
in
pop
push
xchg
jne
mov
cltd
imul
sbbl
shr
adc
mov
testb
xchg
adc
daa
das
and
subb
imul
push
xor
xchg
cmpsl
ds
pop
or
push
pop
push
adc
sbb
xchg
xchg
rcll
mov
test
mov
xchg
mov
mov
adc
mov
ljmp
or
sbb
push
rcl
or
call
fidivs
mov
xchg
scas
loop
cmp
insb
out
mov
xchg
jmp
add
cmc
push
dec
pop
inc
inc
sub
xchg
outsb
fists
imul
sbb
jp
dec
inc
out
pop
lea
shll
lcall
push
mov
jne
dec
pop
fists
add
outsb
pusha
pop
or
add
add
mov
inc
mov
sahf
jmp
mov
adc
push
jb
ja
data16
adc
imul
scas
adc
loope
push
pop
enter
mov
or
rorl
cmp
scas
mov
movb
into
push
les
shl
fiadds
mull
mov
pop
and
cmpb
out
sbb
cwtl
iret
fstl
lret
mov
cmp
pop
mov
mov
inc
jmp
push
xor
add
outsb
shr
repnz
jbe
cmp
std
sbb
xchg
pop
stos
mov
mov
or
jbe
stos
push
in
sbb
mov
push
out
mov
mov
jnp
cmc
cmp
out
push
nop
out
fs
int3
adc
adc
pop
into
pop
fdivrl
mov
in
add
into
push
xorb
and
out
out
adc
xor
jmp
dec
or
repnz
insb
dec
shlb
xor
pop
or
in
rcrb
add
dec
lcall
mov
inc
loope
bnd
cmpsb
mov
jb
ljmp
push
insb
push
xor
cli
mov
mov
dec
leave
push
std
ficoms
jbe
mov
ficomps
xlat
inc
pop
mov
fimull
lods
xchg
cmpsb
loopne
cmp
fcmovnbe
orl
dec
lods
push
dec
mov
nop
mov
ja
cmp
fs
dec
hlt
xchg
in
es
sbb
mov
shlb
ret
cmc
ret
jns
xchg
lock
icebp
xor
sub
gs
xchg
jnp
aam
pop
cmpsb
sub
mov
jnp
stos
dec
mov
frstor
sbb
ja
lods
mov
xor
mov
inc
pop
je
jo
xchg
jnp
daa
orb
ja
ret
mov
jle
test
mov
adc
loop
add
jbe
push
mov
jecxz
int3
push
jbe
mov
xchg
cmpsl
je
mov
inc
xchg
cmp
loop
test
in
aam
es
hlt
xchg
and
or
inc
inc
inc
add
xor
jecxz
addb
imul
xor
sbb
jnp
xchg
scas
sub
sub
push
mov
pop
dec
and
mov
xor
arpl
push
call
test
xchg
jl
sbb
int
push
pop
push
jecxz
mov
inc
sbb
xor
sbb
mov
pop
repnz
jnp
push
ret
xor
sahf
mov
and
pop
dec
aas
push
ja
sbb
pop
rclb
pop
push
test
pushf
xor
cmp
hlt
push
xor
ud2
push
gs
shr
xchg
jb
xlat
pop
and
push
scas
xchg
sbb
xchg
or
adc
push
sub
in
pop
push
mov
daa
push
mov
mov
sub
jg
adc
hlt
push
pop
mov
cli
jge
dec
add
daa
adc
adc
in
or
dec
jmp
fcoml
ror
rorl
adc
lret
fwait
inc
xchg
xchg
fdivrl
adc
test
xchg
cli
ret
mov
lods
das
mov
sbb
addr16
lret
sbb
sbb
jmp
loop
cmc
insl
cmp
cmpb
cmp
mov
incb
cmpsl
nop
leave
scas
sbb
xor
aam
mov
xlat
adc
loope
xchg
jnp
sar
loop
jns
imul
ret
out
aad
lret
mov
inc
test
data16
mov
xor
push
cmp
mov
aam
mov
xlat
out
xlat
stc
shr
mov
movsl
and
ficompl
iret
rorl
insb
testl
or
pop
mov
jge
sub
jle
daa
push
outsl
cmp
shr
sub
addr16
mov
aam
adc
push
mov
mov
sub
hlt
rcl
adc
add
loop
and
and
mov
pushf
xor
xor
inc
sbb
pop
les
ret
jbe
dec
xor
ret
fists
into
call
xor
jne
fwait
leave
or
es
sbb
jl
dec
popf
mov
xchg
fisubrs
or
ret
push
and
pusha
aaa
fisubs
fstpt
iret
fbld
sub
aad
or
inc
mov
or
cli
xor
mov
xchg
daa
xor
push
mov
sub
dec
add
addr16
testl
mov
out
stc
shll
rcr
loop
mov
stos
and
xor
push
cmp
jae
pop
cmpsb
adc
xor
dec
and
adc
enter
popf
dec
leave
in
inc
rclb
mov
dec
std
adc
shlb
adc
and
mov
loopne
jbe
scas
fsubr
outsl
adc
je
lret
cmp
jp
or
insb
test
fists
adc
pusha
cmp
enter
filds
insb
shll
ret
fimull
sub
cmp
mov
ret
adc
cmp
lods
add
push
xor
icebp
xor
jno
aas
dec
cmp
fs
fsubl
inc
xor
hlt
xchg
sbb
push
jl
cmp
stos
pop
adc
cmp
movl
lahf
push
xor
sbb
ljmp
dec
daa
fwait
dec
orb
int
or
shrb
stc
sbb
add
adc
or
arpl
cs
push
aam
aam
xor
or
test
mov
jbe
dec
dec
xchg
inc
mov
icebp
jmp
push
jbe
push
add
jns
pop
ret
mov
xor
fisubl
push
test
mov
mov
daa
std
lret
cmp
adc
fisttpl
lock
add
call
out
lcall
lods
pcmpeqd
cmp
mov
neg
hlt
out
ror
jecxz
mov
scas
push
out
or
filds
pop
sub
cmc
mov
nop
das
fsubs
leave
insl
stos
repz
add
jp
ret
dec
and
lret
test
sbb
movntq
pushf
xchg
jbe
in
arpl
popf
xchg
cmp
push
subb
stc
mov
pop
jno
xor
mov
or
popl
test
pop
jmp
xor
lcall
sti
sbb
mov
loope
mov
fmull
jnp
jae
add
cmp
je
pushf
jae
subb
sbb
dec
jne
clc
push
or
add
sbb
mov
popa
mov
or
pushf
adc
xchg
sti
push
cmpsb
iret
in
popa
jecxz
sbb
and
jbe
ja
mov
cs
xor
cmpsl
mov
xor
sbb
addr16
cmp
push
or
mov
std
insl
cmp
jmp
scas
or
test
cbtw
dec
or
xchg
pusha
call
and
clc
push
gs
mov
mulb
int
mov
mov
push
push
gs
call
loope
xchg
pop
clc
and
bound
ds
xchg
scas
sub
jmp
jnp
addb
ds
inc
adc
jge
and
js
nop
sub
mov
test
xchg
test
mov
cltd
cwtl
aam
cli
enter
gs
pop
repnz
pusha
pop
inc
mov
add
cs
xchg
es
addr16
jno
es
js
mov
dec
call
mov
or
movsl
push
cmpsl
movsl
xorb
loop
sub
pop
add
jp
cmp
jl
sbb
leave
insb
jl
pop
sbb
out
lock
xor
repnz
xchg
lock
cwtl
adc
loope
push
imul
test
fidivrs
popl
sbb
lret
sti
scas
pop
dec
xchg
dec
stos
sbb
jb
aam
daa
clc
sub
out
popa
jg,pt
scas
mov
add
jno
xchg
outsl
xor
mov
cmp
mov
aam
mov
or
int3
or
sbb
xor
loop
inc
and
jmp
inc
sub
push
pop
pop
js
cltd
ljmp
stos
jnp
jmp
rorb
mov
icebp
pop
push
mov
dec
add
push
not
pop
mov
and
mov
and
rol
stos
pushf
jg
lods
in
idivb
loope
out
loop
pop
xchg
and
outsb
jo
jo
ja
xor
jb
mov
mov
outsb
jge
dec
ds
xchg
gs
pop
dec
lcall
xor
and
cld
aaa
jb
push
aam
dec
aad
cmp
imull
mov
pop
xlat
int
mov
test
clc
inc
mov
insl
hlt
jae
mov
shlb
fidivrs
mov
push
push
mov
xchg
xchg
out
fsubrl
fsubs
lods
push
in
jns
in
div
push
rcrb
pushf
mov
dec
xchg
pop
loop
or
int
sti
stos
or
pop
sbb
subps
fwait
popf
outsl
mov
push
movsl
or
mov
pop
mov
sahf
out
mov
sub
mov
sub
bound
add
sti
mov
int
insb
pop
jns
movsl
jle
repz
fs
cmc
inc
dec
mov
lret
mov
dec
out
adc
or
movsb
hlt
mov
jnp
push
dec
dec
jmp
xchg
imul
adc
mov
cs
cmpsl
xchg
push
movsb
jmp
jg
xchg
sbb
mov
fsubrl
ss
jecxz
in
ds
inc
pushf
sbb
rorl
cmp
pop
nop
fmull
enter
cmpsl
jne
xor
addr16
jp
and
jns
push
sahf
icebp
jo
xchg
fiaddl
out
mov
in
pop
cmpsl
lcall
jbe
pop
ljmp
dec
sbb
xchg
xchg
add
and
sub
xor
and
cli
sahf
mov
in
subl
xor
xchg
pusha
int
push
pop
cs
xchg
push
pop
or
sub
push
push
call
xor
in
mov
adc
inc
ss
dec
into
cli
jl,pt
mov
mov
fdivs
mov
jo
mov
icebp
test
mov
sbb
push
lcall
loopne
mov
mov
mov
outsb
inc
xchg
ljmp
inc
popf
ror
and
sub
jbe
jo
arpl
lret
imul
jmp
int3
lods
jno
int3
sub
popf
mov
movsl
arpl
call
fistpl
fistps
pop
push
pop
inc
mov
add
dec
ljmp
loope
in
repz
shl
sub
pop
adc
xchg
inc
inc
sbb
xchg
jo
imul
das
pop
mov
aas
mov
cld
fnsave
pop
mov
aam
inc
insl
rcl
pop
sub
and
mov
dec
out
pop
push
into
les
xor
dec
xor
cltd
stos
mov
xchg
cmpb
pop
shll
xor
out
xor
test
and
aam
dec
nop
push
mov
subl
jbe
cmpsl
mov
push
mov
mov
inc
aam
test
fdivrl
jbe
into
xor
sub
mov
ja
adc
xor
sub
jge
mov
push
in
mov
jl
scas
insl
pop
sub
inc
mov
xchg
or
rep
dec
call
dec
notb
addb
clc
push
repz
inc
mov
loopne
iret
push
mov
clc
paddd
xchg
dec
fmul
adc
sti
movsl
inc
subl
adc
ljmp
fs
repnz
js
sub
fisubrs
push
inc
mov
iret
les
aas
imul
sbb
leave
push
test
push
xchg
pop
fisubs
sub
in
lret
lret
adc
inc
jno
repnz
push
mov
cmpsl
or
push
xor
lcall
cs
push
ret
shr
inc
add
repz
xchg
bound
in
fisubrl
pop
jo
mov
jns
mov
xor
adc
sub
in
inc
in
push
adc
jb
movsl
xchg
or
xor
mov
cmp
scas
inc
rcll
lods
mov
xor
mov
adc
push
aam
into
popf
xchg
pop
popf
lret
sbb
stos
movsl
xor
jg
lret
sub
dec
pop
in
xchg
and
cmpsb
es
adc
in
xor
ss
mov
lea
jno
cmp
fst
sbbb
js
adcb
push
adc
add
cli
insl
xor
push
in
push
mov
push
xchg
or
mov
sub
int
push
faddp
pop
dec
stc
jne
jg
ret
and
jns
jecxz
mov
cli
in
sbb
add
cli
jae
mov
orb
or
push
repnz
repz
je
imul
and
xchg
in
xor
cmc
idiv
mov
test
xor
push
lock
testl
push
es
in
pop
sub
lcall
jecxz
or
subps
loopne
xchg
dec
mov
xchg
inc
sbb
fnstsw
fbld
cmp
cltd
push
lcall
cmc
out
dec
gs
loope
test
lea
pop
xor
jle
cld
adc
jne
and
jae
xor
add
imul
pop
scas
cmp
inc
mov
loope
sub
jno
mov
mov
mov
cwtl
mov
cld
jo
xchg
cmp
aas
sub
gs
add
ds
inc
sbb
into
push
lret
or
ds
das
pop
xchg
insb
push
pop
popf
popl
mov
repz
and
out
inc
fsubl
ds
loop
xchg
cwtl
sbbl
cld
adc
adc
add
int3
fmul
or
jnp
pop
lods
fwait
scas
subl
xor
loope
imul
icebp
dec
inc
cmpsb
mov
xchg
jb
mov
in
fcoms
insl
sahf
adc
lret
fs
sub
divb
leave
arpl
imul
inc
or
xchg
add
jp
add
or
test
cmpsl
ljmp
cmp
jnp
mov
loop
inc
adcl
aas
jl
aam
pop
push
mov
mov
dec
mov
iret
test
stos
fcmovne
pop
les
decl
hlt
pop
push
or
test
out
sbb
stos
out
outsb
ret
in
cmp
ret
dec
cmp
pop
mov
jmp
xchg
dec
addr16
repz
pop
lea
jg
aaa
xor
outsb
pop
mov
in
cmp
xchg
gs
cmpsl
push
imul
pop
add
pop
into
pop
mov
into
int
fstps
sbb
mov
lea
enter
jle
adc
sub
das
push
and
mov
addr16
aaa
jp
sub
jle
adc
shrb
cmpl
sbb
push
test
and
xorb
cmp
sbbl
pop
mov
mov
dec
hlt
call
and
repz
aam
or
push
fmul
cmpsl
sbb
xchg
fistpll
aas
aad
mov
les
and
fs
mov
cwtl
sub
pop
push
dec
cmp
cmpsb
cmpsl
mov
mov
test
shlb
xchg
xor
mov
gs
push
in
jmp
outsl
cwtl
test
imul
sti
xchg
adc
jne
cmp
sahf
or
add
leave
ficoml
sub
mov
xor
cmp
cwtl
adc
jle
dec
mov
xor
lods
stos
popf
fisubrl
xlat
fcoms
fstps
mov
xor
out
sti
add
imul
sahf
outsb
add
xchg
mov
repnz
inc
mov
movsl
ret
xchg
jb
jae
jp
xor
adc
into
xchg
dec
pushf
cwtl
xor
push
rcrl
jnp
outsb
addr16
xchg
adc
out
push
movsb
pop
push
dec
sbb
jne,pn
fwait
mov
cmp
cmp
jo
mov
enter
test
out
out
out
inc
loope
xor
xor
inc
mov
jbe
shrl
mov
cli
mov
sbb
mov
ficomps
clc
push
or
cmp
or
stos
xchg
jno
xchg
mov
pop
insb
sub
push
add
sub
scas
ficoml
in
rclb
cmp
push
adc
pushf
ss
lret
add
movsb
icebp
sbb
pop
ds
fsub
pop
mov
mov
lods
cmp
out
pushf
test
pop
inc
pusha
stc
bound
fdivl
mov
xchg
add
aam
xchg
daa
push
jne
adc
mov
pop
ljmp
cmp
out
test
leave
cld
out
inc
pushf
push
sbb
fdivrs
xchg
sti
cmpsl
push
stos
repz
push
aad
mov
mov
xchg
inc
rorb
loop
dec
stos
xchg
dec
js
pop
iret
jns
ss
fwait
pop
and
adc
xchg
js
push
scas
sbb
jp
or
fimull
cmpsb
jns
ss
xor
test
rcrb
cmpsb
inc
inc
sub
sub
cwtl
enter
sub
jecxz
scas
add
mov
sbb
aaa
sarb
pop
inc
mov
fstpt
pop
jecxz
mov
mov
enter
repz
filds
add
pop
lods
add
mov
and
loopne
push
enter
in
shlb
mov
xorb
mov
in
or
cmp
xchg
xor
mov
push
pop
inc
lods
rclb
jns
ror
xchg
push
je
scas
mov
das
sub
js
hlt
lret
xchg
inc
shrl
push
sub
and
adcl
loopne
mov
in
push
cmpb
sbb
dec
popf
lods
in
addr16
sub
cltd
push
in
sub
pop
xor
clc
pop
xchg
shlb
cmp
dec
sbb
lret
or
aad
cmp
popf
mov
outsl
adc
mov
data16
enter
pop
jnp
mov
inc
sub
or
mov
ds
ss
sub
jle
aas
or
dec
ret
ret
mov
jne
test
js
sub
in
loop
jecxz
xchg
pop
jbe
mov
fs
sub
jb
add
out
inc
pop
lds
and
out
xchg
xor
pushf
fst
scas
adc
pushf
and
imul
out
cmpl
std
loop
test
mov
cmpsb
pop
add
mov
mov
mov
cmp
insb
loopne
or
gs
stc
xchg
sub
push
ret
out
cmp
mov
cmp
in
mov
scas
push
int3
jecxz
orb
call
jne
dec
push
mov
loop
or
pop
movsb
imul
fisubs
ret
pop
iret
dec
bound
mov
push
mov
lahf
inc
sub
cmpsl
popaw
ret
and
cli
xlat
adc
loop
out
stc
mov
adc
testb
loope
data16
aad
sti
sbb
into
cmp
incl
cmp
imul
hlt
lds
lods
iret
sub
shl
fbstp
jnp
pop
cmpsb
push
push
jg
jg
repnz
mov
mov
xchg
aam
sub
xchg
and
outsb
jg
lock
popa
sub
xchg
imul
cmp
mov
in
mov
cmp
cmpb
push
loop
xchg
insb
cs
pop
test
cs
pop
test
lods
leave
jno
jp
fsubrs
sub
sbb
repz
data16
pop
hlt
pop
es
leave
jg
lret
add
cmp
mov
test
decb
xchg
inc
xor
inc
adcb
jno
scas
adc
lods
mov
in
xchg
sub
ja
rcrb
xlat
push
data16
outsb
xchg
mov
test
outsb
addr16
jne
push
outsl
pop
push
sub
lcall
cmp
aaa
stos
rol
scas
fucomp
xchg
lods
clc
add
shlb
or
push
pop
hlt
push
sbb
cwtl
or
pop
jno
add
mov
out
cmpsb
cmpsl
xor
mov
mov
jecxz
jge
and
or
das
and
add
pop
jg
pop
mov
xchg
cwtl
cmp
bound
std
shl
xor
sub
mov
xchg
add
scas
xchg
mov
dec
decb
mov
loop
mov
and
jns
xchg
mov
xor
movl
aad
outsb
jle
fwait
sub
aam
mov
pop
pop
fcoml
or
inc
pop
and
hlt
push
and
pop
add
mov
sbb
xchg
mov
mov
xchg
sbb
adc
mov
adc
push
out
mov
sub
xchg
dec
outsl
mov
leave
mov
adc
push
rcrb
shlb
aad
movsl
sbb
out
out
movsl
fbstp
out
pop
pop
dec
mov
aam
bound
lret
mov
stos
js
mov
cmp
out
pop
je
and
add
ljmp
cmpsl
mov
jae
jle
mov
shll
hlt
dec
cmpb
xchg
dec
xor
fdiv
testb
sbb
std
popf
cld
push
lret
mov
push
aad
std
neg
cmp
pop
mov
test
cmp
inc
mov
dec
shrb
sub
xor
mov
cs
mov
push
sbb
lcall
lods
cmp
sub
mov
xor
mov
jmp
xchg
ffree
bound
jle
je
and
sub
subl
ret
and
inc
inc
add
xorb
push
stos
dec
cmp
add
inc
dec
add
ljmp
iret
mov
xor
sbb
jmp
das
and
scas
cmp
mov
jg
bound
adc
jle
pushf
into
mov
jb
decb
xchg
mov
mov
push
adc
xlat
mov
enter
or
xorl
arpl
xchg
jne
pusha
mov
mov
xor
fwait
push
xchg
pushf
shlb
int3
lcall
xchg
test
add
add
push
imul
pop
pop
mov
filds
cmp
sub
loope
add
xchg
jl
jmp
outsb
mov
push
mov
adc
fisttpll
fildl
cmpsl
fsubrl
mov
mov
inc
adcl
mov
orl
in
iret
add
test
call
movsl
jb
imulb
dec
and
jmp
push
int
dec
add
icebp
adc
stc
push
sahf
xchg
in
sahf
cld
in
sbb
ds
lahf
pusha
adc
push
jecxz
lret
add
lahf
mov
shl
dec
cs
mov
sub
add
std
or
imull
mov
aaa
pop
fcoml
dec
out
dec
lods
inc
xlat
jb
test
fldl
xor
hlt
sbb
push
and
cmp
cmp
dec
cli
mov
pop
inc
xor
cmp
inc
lcall
sarb
inc
sub
lock
popf
fisubrs
scas
or
stos
jnp
dec
out
out
lahf
and
shr
lahf
and
je
or
lock
jmp
notb
inc
inc
adcb
mov
cmp
xor
mov
add
rcll
outsl
mov
lahf
pop
sub
adc
adc
cld
test
push
std
xchg
stc
aam
or
jp,pt
ja
decb
pop
movsb
out
inc
lock
add
and
adcb
mov
xchg
movsb
scas
mov
jecxz
add
push
ljmp
or
sub
loop
or
leave
mov
mov
test
adc
loope
out
xchg
sub
jae
add
sub
jne
push
add
pop
insl
sbb
test
into
adcb
out
dec
roll
cmc
je
in
xor
and
jne
in
testb
andb
jae
and
push
imul
notb
xchg
daa
arpl
cwtl
es
jae
pusha
jae
call
or
cs
rorb
inc
xor
push
loope,pn
lret
daa
sub
inc
in
push
dec
cmp
out
dec
adc
call
lea
xor
shll
add
xor
xchg
lock
outsb
push
or
pop
push
es
cli
ja
test
out
insb
pop
pop
inc
dec
sbb
lods
mov
xor
push
push
jecxz
ret
sub
loope
inc
test
or
mov
add
sub
lahf
add
popa
xor
in
fucom
lahf
push
or
rolb
jne
dec
jno
out
dec
lret
mov
fcmovbe
jmp
jp
dec
xchg
adc
adc
inc
outsb
lock
stos
dec
inc
icebp
pop
outsb
lods
cmp
loop
iret
ds
push
ljmp
xchg
imul
cmp
jge
add
or
pusha
jmp
sti
pop
imul
xchg
jp
out
les
inc
mul
and
inc
xchg
lret
mov
aam
outsb
adc
shlb
imul
sub
addr16
or
pusha
mov
inc
xchg
push
scas
and
push
popa
gs
jnp
cmp
push
sub
inc
xor
fisttps
lret
mov
ret
aas
inc
and
shr
xchg
dec
xor
sbb
pop
icebp
mov
roll
dec
pop
iret
aad
sbb
imul
adc
sub
pop
out
pop
jl
adc
add
mov
lods
adc
adc
int
cmp
push
popf
gs
les
arpl
push
add
inc
xor
mov
sbb
mov
popa
dec
xor
addr16
es
inc
lret
or
rorb
fdivrl
lret
jns
mov
lea
mov
fcoms
pushf
mov
lret
push
xor
jle
mov
mov
push
lods
testl
or
jno
inc
mov
pop
mov
clc
je
dec
lods
mov
clc
out
test
xor
jl
in
aam
xlat
cmpsb
adc
push
int
fs
dec
inc
jecxz
or
xlat
stos
mov
pushl
push
xchg
mov
adc
push
je
sti
xor
dec
lret
addr16
jmp
fwait
jmp
jb
int3
fmull
mov
popf
sbbb
mov
shll
xor
sub
or
dec
shrb
popf
test
and
push
repnz
pop
and
mov
es
mov
cmp
xchg
int
cmp
dec
cmp
cs
jo
mov
repz
xchg
lds
and
sub
xorl
xchg
and
add
test
mov
push
scas
fabs
bnd
aaa
xchg
lea
or
popa
mov
xor
std
rcrl
pop
iret
fs
mov
test
xchg
jno
cld
popa
ja
cmpsb
pop
std
int3
pop
mov
negl
cwtl
fcmove
inc
push
add
cmp
ja
jns
cltd
xchg
mov
cmpsl
push
sub
add
sub
scas
das
popa
lock
and
pop
fdivrs
pop
pop
push
inc
cmp
int3
jno
push
neg
fs
rcr
test
mov
push
ljmp
mov
sub
aam
push
mov
mov
int3
bound
incl
push
push
cmp
lods
jecxz
insl
or
pop
iret
repnz
cmpsl
sbb
call
test
mov
lahf
sub
lods
movsl
and
pop
pop
stos
jmp
mov
mov
adc
adc
cltd
inc
mov
jge
lods
enter
cmp
xor
dec
cmp
das
imul
push
adc
xchg
ficoml
es
icebp
and
pushf
xchg
aas
loope
jbe
jmp
xchg
mov
add
cmpsl
loope
fbld
jp
mov
dec
mov
imul
lods
stc
pop
rolb
sbb
stos
cli
push
pop
loop
inc
lcall
lods
jbe,pt
cmp
pop
mov
dec
enter
mov
test
xlat
mov
shr
leave
test
mov
das
lret
lds
jae
dec
mov
pop
fisubrs
mov
and
pop
mov
pop
adc
add
fstp
lods
aas
adc
outsl
mov
pop
xchg
cs
or
rclb
xchg
fstps
xlat
filds
dec
adc
inc
add
lahf
xchg
ret
out
xchg
out
test
push
leave
lods
incl
pusha
in
adc
in
fsub
jecxz
sub
aaa
xchg
adc
pop
mov
shlb
movsb
lret
imul
pop
rcl
int3
xchg
hlt
dec
xchg
jno
lret
mov
or
pop
outsl
jp
pop
jae
ret
addb
mov
andl
jge
roll
sbb
dec
inc
cmp
clc
mov
ret
mov
mov
xor
jle
pop
xorl
push
adc
lret
push
out
pop
scas
ret
ljmp
iret
inc
adc
xchg
mov
sahf
cmp
sub
int3
std
jp
xchg
or
nop
shrb
jmp
and
dec
xor
in
std
rcl
pop
pushf
es
test
add
ja
sbb
popa
sar
jmp
jmp
in
sbbl
shlb
push
scas
ss
cmp
leave
mov
and
loop
xchg
in
mov
mov
loop
aaa
rolb
rcr
pop
jns
lahf
jg,pn
fs
iret
adc
stos
arpl
das
mov
push
pop
jp
cmp
in
ja
outsb
xor
adc
xor
cmc
push
sbb
sbb
sbb
insl
hlt
pusha
sarl
andb
adc
repz
je
mov
mov
xor
add
dec
mov
test
mov
pushf
sbb
cli
xchg
ds
inc
lds
aas
pop
and
punpckhbw
movsb
addr16
icebp
repnz
sbbl
push
add
add
sub
fadds
xchg
cmc
stos
sbb
pop
loope
inc
fcmovb
mov
cmp
xlat
mov
xor
sahf
aas
fsub
sub
add
pushf
cld
add
jno
dec
imul
sbb
and
ret
add
pop
adc
daa
addl
xchg
shr
imul
loopne
sub
cmpsb
loopne
sbb
sbb
mov
push
cltd
and
cmp
outsb
sbb
inc
jno
popf
cltd
cmp
cld
xchg
mov
mov
push
xor
add
sub
js
arpl
in
cmp
adc
lock
js
push
ret
push
je
mov
add
mov
mov
loopne
and
mov
push
xchg
shrl
and
cld
scas
cmp
cmp
mov
pop
ss
jle
clc
adc
mov
pushf
and
push
push
in
jg
mov
enter
xchg
jle
or
repnz
and
mov
add
adcl
cmc
or
outsb
gs
lods
inc
mov
cmp
xor
lcall
add
outsl
add
xchg
lret
repnz
fwait
push
xchg
inc
in
inc
orb
sub
scas
fcmovnu
cltd
cmp
aaa
sti
add
movsb
ljmp
jp
cmp
adc
adc
lods
arpl
sahf
dec
mov
aad
out
adc
push
xchg
inc
jns
ljmp
aaa
push
out
int3
mov
xor
xchg
xchg
push
xchg
pop
addb
loopne
outsb
in
and
into
xlat
cmp
sbb
mov
int
fwait
jnp
je
arpl
adc
inc
jbe
mov
dec
nop
and
xor
cmc
pop
adc
aaa
in
jnp
push
jae
and
mov
inc
stos
cli
outsb
imulb
pop
sbb
xchg
fisubl
js
sub
dec
inc
cmp
int
in
idivl
dec
jns
mov
outsl
xor
lret
xor
out
out
sbb
mov
or
mov
adc
cmp
jle
iret
push
iret
aaa
pushf
je
nop
int3
pop
sbb
fmul
sbb
jg
jae
lods
push
xchg
test
cld
jno
lods
js
sarb
inc
adc
pop
subl
leave
xchg
add
xchg
pop
xor
xor
cmpsb
jp
subb
sbb
cmp
inc
jg
out
shll
out
ljmp
movsb
mov
hlt
pop
adcl
ret
jbe
dec
mov
lcall
cmpsl
push
shrb
lods
ficoml
daa
mov
lahf
push
movsl
dec
fisubrs
enter
xchg
out
mov
andl
negl
push
ja
jl
repz
fnsave
xchg
pop
jnp
outsl
out
repnz
mov
out
push
add
mov
mov
push
adc
jb
cmp
fidivrl
xchg
pop
or
xchg
gs
cs
mov
cltd
pop
pushf
andl
cmp
or
sbb
xor
sets
call
lock
xchg
inc
rcrb
mov
inc
jg
xor
jbe
push
fcmovnb
cmpsb
inc
mov
in
cli
inc
insl
mov
out
cmp
jmp
lret
pop
dec
jecxz
mov
in
mov
fistl
sub
adc
lcall
sub
and
mov
mov
mov
pop
faddl
pop
out
xor
aam
std
clc
xor
into
je
and
movsl
nop
lds
jno
bound
ja
or
out
xor
inc
cltd
adc
jo
mov
mov
repnz
fistl
clc
jno
leave
adc
andl
and
mov
stc
xchg
lock
ss
or
imul
nop
pop
out
pop
mov
jo
orb
adc
jecxz
jmp
dec
and
test
xor
mov
addr16
lret
inc
cmp
ljmp
sub
cld
jnp
xchg
mov
pop
lods
cmp
jge
data16
gs
imul
orl
inc
je
rorb
sbb
inc
sbb
lret
jmp
cmp
sub
ret
dec
inc
jmp
mov
adc
ret
movsb
mov
mov
mov
mov
inc
mov
jg
cmp
out
cwtl
push
loop
notl
nop
mov
mov
hlt
inc
ret
pop
sub
test
and
ret
loopne
inc
inc
repnz
cwtl
test
mov
repz
cmp
xor
lret
cwtl
or
shll
or
dec
arpl
mov
pop
js
pop
pop
mov
in
pop
leave
rcr
jnp
test
xor
daa
mov
push
insl
pushf
pop
pop
push
push
sub
mov
enter
dec
lods
sarb
sarl
pusha
cmp
sub
aas
lcall
jge
fwait
out
pop
xor
fsubl
out
or
std
rcl
insl
mov
scas
and
push
push
pop
sbb
xor
sub
add
aaa
addr16
adcl
sub
push
lret
mov
xchg
jbe
addr16
and
popf
fstpt
dec
and
out
mov
xor
mov
xorl
test
mov
adc
in
aad
rcrl
push
and
clc
mov
cmp
les
mov
aad
dec
cmp
jno
pusha
push
cli
in
jb
rorl
lds
mov
sub
xor
cli
xchg
lds
outsl
gs
inc
in
pusha
sub
icebp
in
in
xchg
dec
add
adcl
dec
scas
pop
push
fimull
xor
mov
or
dec
insb
mov
adc
xchg
roll
sarb
mov
add
inc
pop
sub
negb
mov
and
adc
mov
xchg
test
std
fcmovu
fidivrs
mov
dec
cmc
insl
mov
jmp
mov
jno
or
xchg
cld
add
jmp
insl
xor
fidivrs
sbb
mov
rorl
add
adc
mov
rcll
push
and
shrb
adc
add
movsb
lods
rcrl
nop
and
cwtl
jmp
dec
push
pop
into
lds
mov
xlat
mov
push
aaa
mov
fsubs
add
popa
scas
lods
loope
inc
div
and
sub
pop
inc
shr
mov
rcrl
mov
mov
andl
sub
sahf
pop
pop
lret
je
pushl
outsl
jb
mov
sub
inc
clc
dec
aam
sbb
mov
pop
pop
repz
pop
inc
scas
adc
mov
mov
add
mov
and
flds
fs
cwtl
jne
xor
test
xchg
int
fisubrs
insl
or
jg
mov
adc
out
jns
inc
dec
push
sub
xchg
out
aas
sarl
fcmovb
in
mov
popf
pop
pop
cwtl
sub
jnp
stos
push
inc
sbb
dec
outsl
insl
idiv
daa
cli
and
stc
int
int3
add
dec
leave
popf
inc
lahf
push
fadds
in
mov
sub
mov
add
cmp
outsb
cmp
shl
ror
pop
pop
in
mov
mov
addr16
mov
xchg
insl
push
dec
push
inc
mov
repz
add
int3
adc
cmpl
and
imul
stos
mov
popa
jmp
lcall
or
xor
shrb
outsl
pop
push
inc
xchg
sub
lock
and
jp
cmp
and
sub
jge
push
daa
ja
or
mov
dec
pop
xor
mov
or
test
outsb
outsl
bound
xchg
mov
or
pop
inc
mov
push
mov
or
std
jno
push
int3
jmp
dec
cs
aam
jae
add
pop
mov
rolb
pop
outsb
fstpl
addl
sbb
pop
lret
mov
and
icebp
mov
sahf
or
cmp
stos
mov
test
repnz
push
clc
jp
jl
orl
test
sbb
das
inc
in
pop
subl
lret
jnp
sbb
lds
orb
popf
pop
aam
mov
cmp
jno
fnstcw
sub
dec
fdivr
bound
lcall
data16
mov
adc
jae
mov
stos
fidivs
incb
push
mov
mov
push
mov
mov
bsr
fbstp
cmpsb
aaa
aam
push
pop
lock
lcall
jg
jp
shlb
icebp
cld
lcall
mov
dec
shlb
pop
ljmp
mov
push
subb
imul
addr16
sub
loopne
filds
xchg
push
sbb
inc
dec
sub
in
mov
cmp
jl
test
mov
mov
or
jo
decb
dec
xlat
inc
mov
roll
outsb
shll
bound
pusha
out
inc
scas
test
xchg
into
adc
ret
sti
cld
jbe
mov
shlb
fistpll
hlt
cmc
or
in
rcl
sub
cmp
mov
aam
rcl
mov
pop
jnp
lods
xchg
stc
stc
rorl
xchg
popf
pop
xor
rorb
xchg
adcb
test
scas
test
int3
sbb
cmp
in
and
outsl
sbb
cli
test
fstpt
pop
ss
lret
subb
lret
dec
test
mov
push
xor
ss
pop
cmc
lret
in
adc
inc
push
push
or
or
fisubrs
dec
jnp
test
aam
pop
js
daa
dec
rorl
mov
mov
ja
rcrb
notb
sbb
or
and
lods
xor
add
xorb
dec
jno
xor
cmp
sbb
dec
or
dec
fs
jecxz
cli
push
pop
jmp
mov
cmc
int3
inc
cwtl
dec
outsl
push
push
std
aaa
jno
xchg
icebp
leave
adc
icebp
xchg
adcl
cmp
adc
dec
sub
xchg
fstps
sarb
out
jae
aaa
mov
std
mov
mov
sbb
pop
mov
mov
and
fiaddl
cmp
xchg
das
shl
iret
jg
ja
sbb
in
add
icebp
or
lea
jae
jecxz
xor
outsl
mov
imul
loopne
aas
pop
mov
fs
neg
inc
rclb
or
sub
mov
cmp
popf
mov
push
pop
and
dec
adc
jmp
ret
subl
dec
lahf
enter
das
aaa
addl
push
inc
jge
xchg
inc
cld
jg
icebp
addl
xchg
jno
jge
in
ret
fbld
sti
jb
clc
cwtl
jle
arpl
push
jecxz
sub
sahf
stc
sub
pop
jne
out
mov
scas
mov
movsl
push
pop
arpl
add
enter
out
pop
sbb
scas
xchg
push
inc
popf
sbb
std
adc
sub
pop
aas
aad
gs
shl
movsl
push
cmp
mov
dec
add
andb
mov
mov
mov
and
ljmp
shll
add
adc
push
imul
imul
out
sti
xlat
mov
xorb
cmp
nop
cmp
jbe
xor
fnsave
cmp
out
pushf
mov
push
rcr
add
pop
pop
jge
jmp
xchg
add
sbb
pop
pop
and
aam
push
bound
scas
sbb
push
cmc
subb
pop
pop
dec
dec
mov
cmpsl
scas
xchg
sub
cmp
lahf
mov
jmp
iret
lea
insl
jae
or
jl
les
dec
cs
pop
xchg
xor
das
je
fmulp
jb
add
jns
ja
pusha
add
adc
shr
test
sbb
sub
jo
adc
loope
icebp
test
lret
int3
mov
mov
jb
or
mov
fwait
out
sub
push
ret
lret
je
scas
and
enter
sub
jg
in
pushf
loopne
orb
int
and
icebp
arpl
out
in
es
clc
fistpl
xor
fmull
int
mov
push
push
sub
test
push
pop
out
imull
lds
les
fmul
out
call
add
push
cmpsb
fiadds
je
cmpsl
insl
push
addr16
lock
jg
stos
cli
ds
and
subl
push
fadds
mov
addb
fs
adc
or
jnp
cmpsl
inc
stos
sub
cmc
mov
pop
sub
and
stos
mov
pop
mov
mov
test
aaa
iret
addl
mov
and
mov
outsl
lods
jge
and
popa
cmp
std
pop
inc
xchg
shrl
outsb
lea
pop
and
cmovne
xchg
pop
lods
lret
push
adc
cld
imul
adc
sbb
mov
ficomps
adc
inc
mov
ficompl
aaa
insb
and
fldenv
scas
add
push
sub
xchg
mov
jmp
inc
fisubrl
loopne
ret
in
mov
adc
dec
cmp
inc
ss
sub
inc
out
sar
fiadds
in
push
xchg
mov
jmp
push
jb
cwtl
dec
mov
imulb
xchg
pop
sub
mov
pop
cs
cmp
scas
clc
inc
add
jnp
adc
loope
jp
out
add
inc
fwait
in
jle
jno
xchg
lret
cmp
test
test
mov
lds
pop
cs
mov
and
out
inc
loop
aas
cmpb
fcmovnb
lret
repz
dec
stc
dec
xor
scas
or
add
mov
fnsave
jb
cmpsl
int
lea
adc
adc
lahf
push
aas
sub
mov
cld
cmc
lret
and
xchg
or
sub
lret
data16
mov
ds
pushl
rcr
push
imul
pop
stc
lahf
adc
outsl
or
adc
add
dec
cwtl
out
imul
scas
dec
clc
push
js
inc
dec
inc
mov
add
xchg
icebp
mov
sbb
add
inc
shl
sahf
mov
fs
xchg
je
cmp
mov
pop
mov
mov
mov
sub
jae
nop
out
push
inc
cmp
or
enter
and
dec
cmp
cmc
dec
or
inc
mov
cmp
mov
mov
pop
mov
jecxz
mov
pop
int
inc
fidivrs
mov
scas
orl
ss
push
scas
mov
fwait
jae
cmp
out
mov
push
sbb
and
hlt
jle
push
lds
outsl
out
out
cmp
xor
clc
std
sub
xor
lret
sbb
xor
mov
push
test
inc
cmp
icebp
mov
cmp
lods
loop
xor
pop
jbe
mov
or
jecxz
push
xor
push
sbb
hlt
pop
mov
lahf
jo
dec
ror
xor
mov
inc
xlat
xchg
sbb
jmp
push
pushf
sbb
xchg
xchg
xor
pop
jbe
jecxz
scas
push
dec
popa
dec
imul
out
and
mov
sub
popa
push
xor
bound
insb
mov
xchg
add
mov
aad
xlat
dec
pop
mov
pop
jecxz,pt
lahf
push
mov
sbb
mov
jge
es
lret
ret
movsb
push
mov
xor
mov
insb
mov
push
cmp
out
dec
jle
fimuls
mov
orb
push
fwait
rolb
mov
jo
sbb
mov
lds
aam
lret
lcall
mov
dec
jmp
into
popa
scas
enter
jmp
daa
cmp
daa
push
xor
xor
jno
ss
pop
add
hlt
in
mov
pop
nop
mov
cltd
movsl
mov
aam
mov
out
arpl
aas
adc
cs
mov
pcmpeqw
inc
fisubl
repz
es
insb
mov
dec
cmp
pop
mov
pop
inc
shll
xor
mov
stos
mov
pop
andl
test
mov
sarb
pop
imul
ror
cmpsl
push
xchg
pop
push
and
nop
test
seto
lret
xor
out
int
mov
jnp
cmc
ljmp
jae
popa
mov
inc
inc
inc
sarb
imul
push
push
pop
imull
loope
repnz
sar
xlat
push
jl
jmp
fsubrl
jg
repz
loope
xchg
mov
sbb
movsl
xor
dec
lcall
mov
cmp
fstl
xlat
cmp
push
inc
subl
test
add
cld
cld
mov
movsb
rclb
push
aad
movsb
push
ss
sahf
inc
jne
xchg
mov
jbe
aad
or
dec
push
test
dec
inc
lds
jle
lcall
fmull
divl
xchg
dec
add
out
pop
ret
pop
and
jne
je
jb
gs
dec
xor
je
insl
data16
sbb
or
mov
loop
jmp
xchg
inc
push
push
adc
mov
push
add
cmp
incb
xchg
mov
sahf
or
sbb
sub
hlt
xchg
fistl
in
xchg
loopne
inc
xlat
nop
andl
test
or
mov
or
inc
fadd
sbb
cmp
mov
xchg
sahf
flds
stos
pop
mov
ss
shlb
xlat
loop
mov
xchg
fcomps
sub
mov
cld
call
rclb
gs
icebp
dec
rcrl
or
xor
push
push
pop
and
mov
shlb
jle
mov
out
test
sbb
xchg
mov
jecxz
fs
pop
xchg
xchg
push
sbb
fldt
and
push
mov
sub
inc
xchg
mov
xchg
and
lret
enter
lret
sbb
xor
jmp
adc
lea
dec
repnz
sbb
dec
fwait
decl
sbb
test
fsubrs
or
fildl
mov
fnstsw
outsb
cld
jmp
and
sar
xlat
test
sbbb
push
cmp
test
sub
nop
lret
scas
fsubs
sbb
xchg
mov
iret
xchg
jno
test
test
push
addr16
movl
and
rcrb
or
in
pop
sbb
lret
lcall
fistpl
jae
mov
xor
cli
fdivl
push
lock
fbstp
sbb
cwtl
std
std
int3
jl
in
adc
js
xor
hlt
mov
add
sti
and
and
xor
out
sub
hlt
mov
mov
and
test
dec
mov
dec
mov
xchg
mov
mov
pop
stos
fimuls
jge
enter
out
icebp
add
cmp
and
ret
pop
dec
ljmp
mov
push
lds
stc
push
cli
div
lret
lcall
aaa
fwait
dec
and
js
inc
sub
into
sbb
sub
pusha
out
mov
mov
rcrb
lahf
rcrb
cmp
fwait
shll
cmp
cld
ljmp
out
and
fadd
lds
adc
add
jbe
push
dec
lea
and
das
mov
xchg
xor
mov
push
add
sahf
enter
push
in
movsb
mov
mov
or
aaa
add
add
iret
sahf
xchg
mov
int
adc
daa
mov
ret
mov
sub
cmp
fdivl
ret
mov
jge
jge
ds
test
inc
sbb
dec
into
inc
cmp
cmp
dec
out
rolb
inc
xchg
adc
sbb
cmp
pop
mov
cmp
mov
stos
dec
out
cmp
imul
popf
pop
dec
mov
adc
add
subb
inc
pop
cs
in
push
jae
jb
sub
lcall
repz
nop
lret
das
dec
push
repz
mov
push
mov
mov
xchg
sbb
test
hlt
lds
aas
inc
dec
scas
shll
pop
mov
mov
pushf
clc
out
dec
jns
out
xchg
jb
gs
push
dec
mov
icebp
clc
add
inc
jnp
jmp
leave
push
mov
mov
outsl
pop
hlt
das
pushf
mov
ja
mov
je
pop
sbb
test
jnp
inc
les
in
lods
pop
fs
jl
sbb
in
aam
jp
mov
sti
cmpsl
gs
dec
xchg
addr16
cs
push
loope
int3
or
les
inc
aad
gs
adc
icebp
lret
fisubl
test
push
mov
in
ficoml
sbb
push
dec
mov
xchg
mov
xlat
stos
dec
dec
shlb
outsb
cmpsl
jno
mov
jge
test
push
loope
xchg
inc
pop
out
xor
rorl
lret
rclb
int3
xchg
insb
int3
mov
xchg
pop
pop
in
outsb
push
sti
jae,pn
fnstcw
orl
out
push
mov
add
imul
daa
jb
xor
fisttps
lret
lods
test
pop
pop
jecxz
aam
outsb
rolb
mov
jecxz
jge
push
inc
in
fsubl
pop
adc
rcll
pop
mov
mov
sahf
aaa
jns
gs
or
gs
ret
inc
sub
pop
pushf
or
lcall
mov
je
mov
push
dec
pop
pusha
pusha
cld
sahf
jae
sbb
xor
inc
leave
adc
and
repnz
leave
loopne
popa
pop
push
sbb
arpl
mov
fs
test
or
sti
xchg
sahf
jle
repnz
xchg
jb
jbe
sbb
or
cltd
loop
andb
xchg
nop
das
repz
cwtl
push
jae
imul
xlat
push
popa
imul
lds
les
fs
xchg
or
inc
mov
lea
dec
iret
push
lock
adc
and
addr16
pop
dec
cmp
add
cmpsl
mov
out
sub
pushf
pop
ja
imul
ret
lret
cld
dec
sub
xor
dec
cs
mov
adc
xchg
lret
jmp
mov
into
sbb
mov
pop
lret
ret
and
nop
scas
in
idivb
mov
or
das
sbb
mov
loopne
bnd
pop
mov
loope
mov
cld
add
mov
scas
or
into
lea
int3
or
sbb
sbb
out
inc
cmp
sbb
rclb
xchg
cltd
aam
jecxz
cmp
xlat
lret
inc
scas
andb
dec
xorb
imul
lret
inc
mov
aam
repz
cwtl
in
pop
push
xor
outsl
jg
jge
jecxz
adc
push
lds
dec
dec
scas
rcl
jg
outsl
pop
sarl
cmp
mov
inc
and
or
dec
mov
insl
cltd
push
mov
insb
into
sbb
cmc
lret
movsl
push
bound
mov
out
mov
or
cmc
sub
pop
mov
or
sbb
ljmp
mov
jo
add
jns
aad
nop
cmp
mov
adc
pop
sub
lcall
sbb
frstor
jg
pop
ljmp
or
lods
stos
pop
mov
sub
jmp
push
dec
sub
and
mov
stos
imul
or
pop
outsb
loope
dec
loopne
stc
icebp
add
jmp
dec
addr16
ja
jne
and
std
xchg
mov
js
decb
adc
pop
mov
jecxz
cmp
daa
sub
scas
pop
icebp
cmp
mov
lods
cs
repz
push
push
cmp
pop
xor
rcrl
sub
mov
shrl
dec
mov
xchg
mov
adc
inc
and
bound
xchg
xor
hlt
push
inc
insb
xor
sub
or
movsl
push
lds
pop
fdivrl
test
push
and
test
aaa
mov
mov
fidivl
shlb
push
adc
into
jb
or
cmp
nop
ss
stos
add
movsl
out
xchg
mov
xor
jne
cmpsb
imul
fwait
mov
out
aas
outsb
movsl
xchg
xchg
cmp
lea
ss
add
sub
mov
aaa
aam
and
mov
mov
out
nop
iret
adc
out
sub
jge
popa
scas
rorb
push
sbb
jnp
mov
shlb
lock
mov
cmp
aaa
sbb
popa
mov
shrb
shll
aam
imul
adc
orl
sbb
dec
movsb
xchg
dec
clc
add
pop
insl
inc
or
push
pusha
jnp
or
fwait
iret
insl
adc
in
jbe
fldcw
out
aad
or
add
das
test
lods
bnd
bound
insb
sbb
aas
cmpsb
mov
shl
andl
fstp
je
arpl
insb
shrb
clc
stos
filds
jo
xchg
enter
cmp
stc
dec
je
out
in
mov
xor
mov
pop
lods
xor
mov
int
xchg
adc
mov
mov
push
mov
aad
aas
xchg
enter
daa
xchg
idiv
xchg
jne
mov
push
xchg
int
mov
scas
push
mov
xor
push
imul
out
adc
pop
rcrl
fistpl
xchg
out
gs
fs
inc
lcall
mov
adc
push
or
jg
movsb
xor
ret
inc
notl
scas
fsubrl
cmp
cli
lea
xchg
dec
pop
pop
lcall
fidivrl
add
sti
adc
sub
cwtl
or
xchg
enter
rorl
mov
cld
push
lret
push
jl
clc
xor
stc
ret
cmp
out
and
xchg
lock
shlb
rcll
mov
rcrb
adc
mov
pop
popa
ja
add
test
popf
sarb
ret
xchg
cmpsb
push
dec
insl
mov
mov
filds
sbb
jmp
sub
lods
mov
insl
lods
dec
adc
popf
or
inc
ds
mov
cmp
push
xchg
jmp
idivl
rorl
dec
jg
fiaddl
repnz
adc
scas
cli
ss
jb
mov
jp
jbe
arpl
fwait
cmp
inc
stc
and
dec
pushf
sub
test
ret
aaa
xchg
leave
add
je
inc
pop
in
inc
sahf
add
sub
mov
sub
jp
daa
dec
lods
scas
andb
clc
sub
aad
mov
test
ss
dec
movsb
sbbb
cmc
aad
test
fwait
mov
mull
mov
icebp
inc
pushf
fdivs
adc
pop
inc
sub
and
cmp
gs
mov
je
cmp
in
adc
mov
out
cld
rol
std
fdivr
ficoml
mov
mov
icebp
stos
cmp
dec
leave
test
scas
imul
rcr
pop
les
iret
sub
fidivs
out
mov
xor
icebp
xor
mov
data16
jmp
and
add
cmp
sbb
jmp
cmp
mov
push
shlb
jmp
xchg
sub
sub
out
push
sub
cmc
rorb
movsl
jno
jns
xchg
sub
push
pop
push
out
in
jbe
imul
stos
sti
add
lea
mov
dec
xor
loope
dec
inc
movups
sub
mov
add
jo
mov
and
push
inc
notl
call
sub
mov
jno
cmpl
sub
aam
scas
bound
lcall
push
and
sub
sub
ret
jo
push
ja
mov
in
es
outsl
sub
mov
mov
cmp
sbb
das
cmpsl
shrl
jnp
push
lret
ret
jns
dec
outsb
pop
jno
adc
inc
int
pop
xor
adc
shr
ret
nop
pop
and
cs
notl
pop
pop
jo
lods
inc
imul
sub
orl
dec
imul
ds
xor
jp
pusha
sbb
jbe
cwtl
mov
test
test
aam
lods
les
dec
pop
inc
push
mov
sbbb
dec
rorb
xchg
sti
xchg
and
pop
xchg
adc
add
sub
pop
mov
or
push
mull
and
inc
mov
or
push
addr16
and
inc
dec
mov
jno
icebp
jne
shrl
xor
adc
add
sbb
cmp
std
or
dec
mov
lods
xchg
pushf
lcall
mov
mov
and
jp
rol
std
movsl
sub
xor
sbb
jp
imul
dec
test
xchg
mov
inc
mov
pop
inc
mov
lahf
pop
fnstsw
movsl
mov
mov
test
push
push
sub
pop
test
push
cmc
mov
mov
fnstcw
mov
sub
xor
pop
mov
cmp
je
mov
enter
push
mov
call
push
adc
and
shrl
fldl
mov
inc
in
test
inc
aam
sti
dec
daa
mov
and
push
ret
dec
mov
cwtl
andb
popf
inc
ret
ljmp
icebp
pushf
jmp
jbe
push
aaa
cld
mov
insl
mov
sub
jns
popf
clc
or
mov
fistpl
je
jno
pop
cmp
mov
cltd
push
pop
in
mov
mov
jg
lahf
xor
int
loopne
push
mov
adc
pop
xor
xor
xchg
loopne
jbe
dec
cmp
test
inc
fimull
pop
xchg
sbb
mov
mov
dec
scas
cmp
xor
and
fsubs
xor
scas
jnp
pushf
jb
das
xchg
ja
gs
rorl
andl
shll
xchg
fisubl
add
int3
loopne
cmp
mov
push
divb
xchg
aaa
les
lock
rcll
das
xlat
or
xchg
push
popf
aam
cmp
pop
js
adc
gs
cltd
es
aas
xchg
lds
arpl
dec
shrl
dec
push
stc
int
mov
cld
push
lcall
inc
jmp
mov
xlat
hlt
fcomi
xor
iret
xlat
cs
ficoml
sub
in
or
call
mov
mov
push
fidivrs
scas
sti
mov
mov
lods
sbb
enter
shlb
dec
xchg
and
adc
sbb
adc
mov
mov
or
lock
xchg
or
or
sub
push
fstl
stos
mov
xchg
mov
adc
add
fdivs
pop
mov
sub
les
in
gs
add
jmp
fistpl
sti
xchg
insb
jg
xchg
xorl
es
mov
jg
rorb
bound
loop
push
nop
mov
int3
jae
dec
pusha
lea
in
pop
fnstsw
mov
push
pop
jnp
pop
push
sbb
shlb
ror
mov
inc
mov
xor
mov
orb
insb
mov
outsl
and
dec
push
cmpsl
lea
aaa
ftst
xor
xor
js
inc
ret
popf
jno
xchg
in
sbb
cld
enter
js
je
out
out
jge
dec
mov
in
xchg
out
push
and
popa
hlt
and
xor
sbb
cmpsl
xorl
or
test
out
leave
jns
xlat
mov
jecxz
sub
int3
adc
out
in
cmp
ret
pop
mov
fnstcw
cld
add
sbb
jmp
lret
int
repz
lahf
xchg
outsb
cli
lcall
dec
repnz
mov
jmp
sub
es
push
jae
outsb
test
mov
jg
dec
pushf
cmpsl
mov
jae
mov
cmp
cltd
data16
xchg
shrl
xchg
movsb
mov
jb
push
jb
cmc
scas
loope
jl
ret
enter
cld
xchg
inc
sahf
test
adc
mov
out
adc
inc
in
cmp
aas
imul
ret
pop
mull
mov
cmp
dec
popa
js
pop
inc
cmc
in
lcall
xor
sbb
cmp
xor
fwait
sbbb
dec
test
cmp
pop
push
inc
add
call
lret
xor
mov
xchg
lods
jmp
and
lret
cmc
push
mov
jl
mov
jl
ret
mov
lods
lret
pop
jne
pop
or
fldenv
inc
push
or
imul
movsl
mov
ficompl
aas
mov
add
test
jmp
sub
sub
fwait
test
adc
add
xchg
call
sub
push
into
push
js
push
sbb
sbb
pop
jno
push
cmp
add
add
imul
decb
fildl
es
xchg
int
imulb
addl
jmp
mov
mov
push
repnz
lock
nop
ja
dec
xlat
pushf
xor
loope
mov
cmp
loope
das
pusha
movsb
cltd
jns
and
sub
sbb
lea
pop
xor
andl
dec
aam
cmp
cld
cmp
sub
jg
xchg
jle
jns
js
andb
add
mov
and
icebp
and
add
dec
outsl
subl
push
daa
add
aas
addl
mov
cmpsl
or
mov
cmc
daa
and
jb
mov
mov
call
cwtl
enter
sbb
pop
mov
inc
test
inc
stos
dec
mov
into
divb
rol
iret
cmp
sbb
scas
xor
sbb
push
lcall
loope
sub
ret
and
or
jmp
sub
leave
in
lods
xor
int3
out
inc
adc
fstpl
rclb
push
mov
cmovs
mov
fmull
dec
lret
mov
cmpb
clc
sub
mov
loope
lods
push
jbe
and
aaa
stos
lahf
mov
jbe
mov
push
mov
pushf
inc
xchg
push
out
xor
test
sahf
mov
fsubr
movsl
cmp
fistpl
dec
lock
jmp
mov
xchg
pop
mov
das
mov
sti
lods
pop
dec
cld
ret
cmp
xor
inc
hlt
mov
jg
cmpsb
lahf
movd
mov
rol
push
aam
data16
sbb
mov
mov
dec
lret
sbb
enter
inc
mov
inc
aas
ja
and
or
xor
xor
test
sub
cmp
push
je
cmp
mov
and
test
cs
mov
mov
mov
push
andl
xchg
pop
cmp
or
mov
jne
fcomps
xor
cltd
sbb
dec
mov
je
cmp
test
and
xor
int
outsl
daa
lods
shrd
loope
fdivs
xlat
insl
push
inc
add
xchg
mov
rolb
sbb
fidivl
xor
mov
fs
push
iret
adc
mov
iret
std
push
notb
mov
hlt
add
aas
insb
inc
push
ja
sbb
js
das
dec
sub
inc
jge
aad
dec
iret
fistpl
mov
idiv
sub
shl
jmp
pop
xorb
and
xor
mov
scas
outsl
xchg
pop
loope
loope
ret
lods
sbb
jbe
outsl
rcr
jns
lock
outsl
or
andb
push
xchg
clc
stc
xchg
push
sbb
sbb
mov
push
mov
rcr
cmp
subb
pop
jae
loop
pop
xchg
and
and
stos
cli
clc
add
lahf
push
push
jae
add
xchg
divb
or
in
xchg
add
or
cltd
fsub
movsb
int
test
sti
cld
or
pop
cld
push
pop
adc
xchg
outsl
lods
pop
sub
fidivrl
mov
in
xchg
sarb
xchg
adcl
mov
and
cli
cmp
popf
mov
sbb
insb
mov
mov
mov
pop
cmpsl
clc
in
push
shlb
add
add
cmp
int
sbb
push
int
subl
and
or
sbb
loope
mov
stos
sbb
sub
inc
xor
sub
and
push
arpl
lcall
cwtl
adc
adc
lds
arpl
outsl
aas
ljmp
outsl
cmp
sarl
inc
push
push
lds
mov
mov
fsubrl
lods
mov
lret
js
mov
jmp
pop
ja
shr
ljmp
mov
ret
loope
mov
pusha
icebp
loope
mov
daa
je
mov
xor
aad
jp
lods
mov
inc
test
jge
loop
fcompl
test
mov
popf
mov
dec
adc
push
jnp
int3
jo
stos
add
dec
por
int
dec
jle
mov
imul
fadds
xchg
inc
aaa
or
sti
ja
pop
sti
mov
or
mov
add
imul
or
xchg
pop
jmp
mov
pop
adc
jno
jno,pt
mov
fwait
das
xchg
jp
add
jb
loopne
dec
movsl
insl
cmp
and
mov
stos
cs
cmpsb
pop
addr16
add
cmc
dec
js
hlt
jbe
adc
adc
popf
add
inc
jle
lock
cli
cltd
insb
aaa
dec
imul
inc
mov
push
addr16
adc
mov
gs
push
adc
push
mov
cmpsb
and
pushf
lea
divb
insl
xchg
jle
std
outsb
pop
hlt
jo
rolb
in
adc
rcrb
xchg
xchg
push
jne
pushf
mov
test
dec
mov
fiaddl
cmpl
mov
pop
es
roll
inc
fnstenv
pop
jbe
mov
imul
leave
cld
jg
or
arpl
pop
popf
mov
mov
das
or
cmp
mov
aam
and
rcl
js
mov
add
nop
out
iret
cmp
and
lret
outsb
jne
mov
push
jl
sarb
ja
int3
and
mov
es
mov
mov
xlat
adc
inc
movsb
nop
fs
dec
pop
mov
mov
inc
imul
sbb
jmp
popa
cmc
stos
or
adc
scas
iret
mov
sbb
adc
pop
mov
mov
int
jp
clc
out
bswap
adc
pushf
add
sub
movsb
sbb
addr16
mov
cs
lret
xchg
cltd
gs
sahf
icebp
sub
inc
leave
daa
xor
lret
jbe
ds
das
js
addr16
lock
daa
push
popa
sub
jp
or
or
add
cmp
das
filds
stos
into
pop
shlb
xchg
lds
hlt
outsb
imul
fstpt
mov
mov
cmc
pop
mov
cmpsb
dec
ds
dec
jns
xchg
sar
test
nop
dec
xor
stc
mov
mov
push
je
rorb
and
xchg
cmp
lcall
pop
adc
adc
les
jle
mov
dec
nopl
sbb
adc
mov
int3
je
into
xor
jp,pt
rolb
sti
cwtl
ljmp
imull
pop
int3
cmpsb
mov
repnz
pop
pop
xor
daa
cmpb
bound
dec
inc
sbb
decl
bound
xchg
mov
cmpsb
int3
lahf
shlb
je
sbb
push
bound
inc
sbb
jb
das
adc
jmp
negb
in
data16
jbe
fistps
jnp
insb
or
fcmove
pop
pushf
cmp
mov
mov
lods
test
mov
rol
pop
mov
mov
cmp
fdiv
sahf
scas
dec
sbb
cmp
scas
lods
or
mov
cmpsb
mov
mov
adc
loopne
push
mov
loope
lods
or
and
adcl
movsl
aas
lcall
cmp
xchg
pop
outsb
loope
out
testl
mov
push
call
sub
sbb
dec
cwtl
out
sub
cmc
sub
sbb
mov
pusha
imul
xchg
push
or
add
popa
xchg
xchg
fsubrl
sbb
dec
gs
adc
clc
mov
cmp
cltd
imul
scas
xor
je
pop
stos
dec
sahf
xchg
dec
sbb
pop
dec
mov
lahf
stos
or
movsl
add
pusha
subb
imul
jecxz
dec
pop
lret
fdivrp
movsl
add
popf
clc
xchg
and
adcb
jmp
gs
xor
nop
loopne
test
arpl
or
js
popa
fsubl
ret
or
cltd
lods
out
mov
cmp
arpl
xrelease
dec
aas
sar
idiv
orb
cmp
sbb
xor
cmp
outsl
cmp
je
cmp
into
jbe
jne
cmpl
arpl
jge
or
mov
inc
cwtl
sti
out
push
sub
pop
sbb
push
push
jne
xchg
js
fs
repz
jo
dec
cli
roll
testl
mov
cmc
arpl
nop
lock
cmp
cli
adc
int3
rcrb
xor
xchg
hlt
jno
push
movsb
stos
or
fprem1
jno
test
add
int3
enter
xor
dec
pop
imul
sbb
mov
mov
xchg
call
inc
scas
out
adc
sbb
pusha
pop
push
cmpsb
xor
push
and
outsb
test
sub
das
rorb
fcoml
mov
cld
nop
sbb
adc
mov
inc
lods
or
xchg
jns
push
lea
inc
push
add
and
pop
add
fidivs
xor
xchg
repnz
lods
push
fs
je
leave
sbb
xor
or
loope
aaa
mov
push
ret
shr
xchg
add
out
xchg
js
mov
add
leave
mov
and
ljmp
adc
or
int
pop
aad
out
cmpsl
call
pop
and
jno
cmp
lock
lcall
sbb
shl
fwait
mov
xor
in
aad
and
adc
xchg
sub
mov
and
and
scas
imul
adc
adc
xchg
stos
adc
mov
jg
sub
jns
in
push
sbb
lea
aam
cli
mov
sbb
mov
popf
pop
jne
jb
sub
cmp
cmp
pop
cld
cld
sbb
adc
jb
shlb
cmp
fisttpll
dec
pop
dec
out
stc
inc
pop
jne
mov
jle
in
and
test
jg
jae
inc
sub
sub
xor
idivb
insl
je
xchg
mov
outsl
pop
pop
push
popf
jb
mov
mov
jg
aaa
add
inc
xor
sbb
mov
jl
or
scas
shll
push
dec
jno
mov
or
jge
test
bound
repnz
mov
xchg
ret
add
in
fists
or
sti
inc
inc
push
dec
dec
aad
mov
mov
jecxz
cld
add
mov
push
in
test
and
xchg
loop
jl
ljmp
icebp
jmp
jae
out
les
shl
and
into
and
mov
adc
mov
out
or
mov
adc
addb
aas
push
mov
mov
mov
shl
outsb
hlt
jb
cmc
aam
imulb
mov
push
cmpsl
dec
xor
dec
iret
in
fisubs
test
rorl
test
jl
insl
lods
xchg
pop
xlat
insl
std
stc
outsl
fbld
fs
addb
fldcw
pop
out
or
mov
out
cltd
jnp
pop
cmpsl
xchg
or
in
sub
push
dec
sub
loopne
hlt
push
sub
adc
mov
inc
jg
out
sub
sbb
gs
insb
jecxz
xor
movsl
pop
and
imul
push
cmpsb
xchg
cmp
rolb
cmp
push
jmp
or
sbbb
sub
mov
addr16
in
fadds
xor
out
xchg
test
mov
ret
hlt
sbb
xchg
xor
orb
test
inc
arpl
inc
stos
pop
fdivrp
jns
mov
test
push
test
fstpl
daa
nop
test
add
adc
add
cmp
dec
sahf
mov
cmpsl
imul
sbb
jp
mov
cs
sbb
in
xchg
mov
xor
pop
insl
jl
mov
nop
sub
enter
jns
xchg
les
push
sub
push
mov
or
fisttps
and
mov
xchg
leave
ss
inc
jbe
and
lret
aam
negb
and
push
mov
inc
inc
dec
or
lahf
jg
inc
fistps
xchg
pop
out
mov
dec
cmp
int3
mov
mov
xor
mov
cmp
inc
adc
icebp
ficoms
add
inc
repz
adc
mov
xor
adc
lret
repnz
aad
adc
out
or
outsl
cmpsl
jnp
aas
mov
xor
popa
lcall
and
sbb
test
ja
ret
fwait
mov
and
or
fcmovnb
popl
or
fcomps
or
cli
pop
cmp
push
data16
and
sub
jge
xor
xor
push
pop
mov
getsec
mov
movsb
cmc
mov
pop
sbb
push
fwait
dec
imul
stos
and
fmull
pop
clc
rclb
cmpsb
add
adc
pop
out
and
adc
mov
loope
mov
imul
insl
dec
inc
and
adc
into
pusha
mov
inc
popf
xor
cmp
inc
cmc
fs
clc
cmp
aaa
fisubl
punpckhwd
rolb
xchg
xor
rcr
in
jne
stos
and
mov
shll
sub
in
hlt
jmp
push
mov
sbb
outsb
movb
lret
rorb
sbb
mov
daa
add
and
cmp
push
fs
aam
arpl
sub
dec
inc
fisubrs
add
mov
outsl
add
repnz
cmpsb
movsb
sbb
dec
jae
iret
mov
sub
sbb
sub
mov
ja
or
out
enter
pushf
js
pop
cmp
outsl
mov
in
adcb
fbld
jnp
aas
neg
sub
xor
jmp
mov
and
loope
in
push
xchg
mov
add
outsb
cmpsb
sbb
or
push
dec
les
pop
inc
daa
aas
sti
pop
mov
bound
or
cltd
adc
mov
cmp
push
mov
jecxz
rcll
in
and
cs
or
imul
sbb
divl
stc
dec
pop
mov
insb
and
push
pop
sub
xchg
enter
mov
out
jnp
sub
adc
dec
mov
aam
mov
scas
sub
push
loopne
mov
sbb
mov
out
fistps
shl
es
mov
stc
mov
es
inc
fs
insl
dec
mov
dec
push
pop
lds
lahf
jge
sbb
pop
push
orl
xchg
popa
xchg
mov
xchg
rcrb
imul
iret
movsl
mov
cwtl
push
in
loopne
inc
cmp
jne
std
cmp
lods
adc
iret
jo
xor
inc
movsl
sbb
cmp
rorb
or
push
jl
xor
lds
out
lcall
insb
jae
jmp
out
jbe
outsb
aaa
or
mov
fisttpl
push
xchg
add
xor
adc
and
ficoml
lods
mov
add
mov
aad
sbb
cmp
mov
mov
cmp
repnz
add
jb
push
leave
inc
mov
sub
cmp
js
push
sbb
hlt
sbb
imul
test
jnp
iret
and
shr
cmpsl
addr16
fmull
test
jns
call
out
jp
sarb
test
mov
mov
mov
stos
dec
std
ret
aas
and
rol
outsb
pusha
or
or
dec
mov
cwtl
push
pop
or
fsts
addl
add
test
sbb
push
xor
imul
lcall
dec
push
test
jbe
sub
sub
and
aam
cmp
fs
out
mov
pushf
clc
neg
jae
and
or
sbb
rorb
pop
adc
dec
and
pop
sub
in
jmp
push
fbstp
sbb
sub
sahf
cmp
nop
ljmp
dec
mov
mov
xor
jbe
std
lods
xlat
sub
aad
out
in
push
call
inc
cltd
cmc
shrb
andl
dec
mov
lods
out
fld
dec
jecxz
add
add
sbb
mov
scas
sbb
les
push
rclb
jb
dec
imul
inc
dec
ret
and
jge
push
cli
shlb
pop
jno
adc
jge
leave
dec
mov
mov
fucomip
jl
test
icebp
insl
dec
adc
add
jmp
mov
or
push
jl
and
repz
and
xor
ret
ljmp
roll
pop
gs
inc
and
jmp
jp
xor
dec
dec
adc
icebp
lcall
or
pop
popf
mov
inc
xor
inc
sahf
idivl
mull
push
push
jbe
fnstcw
or
sbb
sbb
fisubl
push
stos
mov
cmp
jb
or
push
dec
jbe
iret
or
push
testl
sub
sbb
or
add
ficoml
and
sub
test
sbb
mov
dec
cmp
pop
call
sbb
jmp
mov
dec
pop
cmpb
ss
es
loope
sub
xchg
jg
cmp
lods
add
lcall
mov
pushf
mov
sub
insl
mov
addr16
imul
insl
jmp
icebp
arpl
jnp
and
out
aam
add
mov
rcrb
rcr
mov
mov
inc
mov
jns
rcr
mov
sub
cmpb
aas
cmp
daa
jnp
pop
sub
addl
into
gs
rcll
aaa
xor
cmc
mov
movsb
mov
mov
mov
int3
scas
pop
mov
std
adc
xor
push
gs
dec
jnp
xor
mov
aas
mov
dec
lock
mov
mov
jge
xor
cmpsl
mov
mov
cmpb
es
adc
push
cmp
into
xlat
aam
mov
cmp
jns
int3
out
inc
mov
adc
std
imul
mov
aas
es
aam
addb
push
xchg
popa
xor
repnz
inc
in
shll
dec
sbb
insb
outsl
popa
cltd
jno
jno
jo
cli
test
fcompl
inc
mov
push
faddp
xchg
js
inc
pop
push
lds
xor
sbb
push
mov
push
add
or
or
add
out
push
sub
jns
imul
lcall
mov
sub
pusha
jns
test
dec
lea
stos
in
mov
or
jb
add
push
addr16
pop
lret
mov
xchg
adc
xor
pop
in
mov
dec
shrb
stos
mov
adc
cmpsb
inc
pop
cmc
cwtl
sub
stc
test
lret
dec
jne
das
push
xor
fsub
sub
sbbl
ficoms
movsl
test
mov
xor
jmp
pop
je
aaa
jl
ror
js
ja
dec
sub
inc
aam
in
add
andb
jle
mov
jbe
push
mov
dec
jb
popf
sbb
xor
mov
jle
aam
das
cld
nop
adc
imul
adc
scas
dec
push
jo
mov
and
mov
stc
adc
fimuls
jge
sti
pop
rorl
aaa
out
and
int3
or
xorl
inc
jnp
jb
xor
cli
xchg
mov
insb
ret
andl
xchg
push
inc
adc
jb
and
les
subb
add
test
jae
jbe
cmp
les
insb
lahf
bt
out
divb
stc
es
push
lods
loopne
xchg
lea
fstl
jle
mov
and
into
add
jle
movsb
fs
jmp
dec
push
adc
or
out
fiadds
or
bound
jne
ljmp
dec
xchg
or
cltd
imul
test
test
bound
inc
or
dec
adc
mov
pushf
and
fs
mov
xchg
mov
mov
pop
xchg
pop
lea
mov
and
ret
pop
lret
lcall
mov
pop
jns
dec
addb
ja
dec
cmp
push
cmp
mov
cmp
push
cmp
mov
adc
or
xchg
mov
in
inc
ljmp
inc
push
loope
out
cmp
fwait
and
xlat
je
cmp
jb
ds
sahf
nop
dec
push
lahf
inc
test
ficompl
pop
jns
pop
inc
ret
or
shrl
jnp
aas
lods
jmp
and
jge
inc
pop
mov
mov
adc
sub
fisttpl
jecxz
mov
popa
divb
jp
arpl
lock
sbb
mov
ds
mov
dec
jg
je
aas
mov
push
in
jbe
outsl
pop
sub
cltd
pop
xlat
mov
inc
in
mov
mov
mov
xchg
shl
mov
adc
mov
test
sbb
out
insl
cltd
jge
fcmovnb
jo
test
mov
int3
add
adcl
mov
jecxz
mov
inc
xor
aad
mov
add
and
push
sbb
sbb
in
daa
adc
out
push
call
aas
sbb
mov
xchg
popa
jecxz
xchg
lahf
shll
pushf
add
xchg
sbb
rcll
mov
fwait
inc
pop
pop
jno
cltd
jl
hlt
or
fidivs
cmpsb
mov
push
cltd
mov
mov
xchg
xor
jl
mov
xor
hlt
std
les
fnsave
jecxz
jg
adc
xlat
fwait
addl
inc
add
in
xchg
and
cld
sub
fistl
mov
cwtl
fcompl
outsb
fisubrs
and
lahf
mov
fbstp
xor
std
mov
sbbb
xchg
pop
mov
mov
or
stos
dec
mov
sbb
pop
mov
mov
cmpsb
sbb
jb
repz
in
ljmp
xor
mov
in
test
js
sarl
mov
pushf
divl
pop
mov
push
sub
fs
popf
push
fstpl
adc
cmp
add
out
fbld
mov
push
sub
enter
rcr
in
mov
xchg
cwtl
addl
mov
xchg
negb
cltd
ds
xchg
mov
sbb
dec
outsl
fwait
sbb
mov
mov
stc
aaa
insl
inc
push
adc
sub
and
xchg
jmp
cmp
dec
sub
into
mov
sub
xchg
les
dec
out
pop
lock
dec
lock
arpl
subl
daa
in
test
les
mov
dec
mov
xor
xchg
cld
or
ljmp
flds
jmp
icebp
xchg
mov
mov
popa
jno
or
int3
fs
mov
iret
out
and
sub
aam
in
xor
imul
jecxz
inc
ja
sbb
in
add
mov
ret
arpl
insl
pop
in
incb
mov
das
add
dec
and
sub
cmp
call
jmp
loop
mov
sub
mov
cmc
shrl
aaa
xor
rcr
lcall
jne
mov
sahf
sahf
inc
mov
add
fidivrl
mov
jle
jecxz
add
cmpsb
orb
mov
push
cli
outsb
jecxz
push
pop
inc
in
adc
push
pop
sub
aas
hlt
test
and
or
scas
sbb
xor
fnstcw
mov
sbb
xchg
aaa
outsb
mov
dec
cmp
insb
rclb
cmp
add
xchg
repz
movsl
adc
in
fisttpl
shll
rolb
movsl
shll
adc
repz
xchg
pop
fdivp
xor
fnstcw
mov
sti
mov
jns
xadd
jmp
xchg
int
dec
add
push
movsl
cmp
fwait
xor
daa
mov
fildl
cmpsb
ret
iret
xchg
dec
es
dec
mov
hlt
fwait
cmp
xorb
jmp
mov
shlb
pop
test
push
add
mov
add
and
mov
sti
stos
cmp
xor
gs
xor
scas
fdivr
lock
add
lods
adc
test
sub
scas
imul
adc
dec
pop
jnp
add
inc
mov
lods
arpl
adc
bound
mov
adc
pop
fwait
push
jecxz
stc
neg
cmp
ja
in
jmp
out
test
fs
cmp
fdecstp
enter
xchg
fsubrp
sub
stos
aas
stos
pop
pop
pop
je
jmp
xor
xchg
dec
les
popf
push
loopne
mov
xor
mov
or
fnsave
mov
out
jl
push
pop
cmc
push
dec
jbe
mov
sub
into
cmp
add
bound
je
push
fbld
fstpl
cmc
in
sub
test
sbb
fiadds
cmp
pop
out
mov
fcomp
cmp
lahf
jmp
inc
mov
fidivl
cmp
xor
loopne
pop
mov
movsl
add
aas
or
arpl
jl
subl
adc
and
sbb
mov
push
dec
lea
sbb
sub
dec
in
int
cli
jne
jl
mov
in
jl
dec
mov
iret
mov
jbe
cmpsl
lahf
dec
xor
lds
in
sub
pop
mov
cmp
pop
sub
xchg
sub
adc
in
jb
or
adc
leave
xor
fisubrs
xchg
loope
sbb
pushf
mov
add
mov
and
dec
mov
clc
pop
aaa
add
cwtl
jle
sub
and
clc
rolb
dec
jns
mov
and
sbb
arpl
loope
loopne
dec
mov
cmp
das
mov
popa
jb
add
adc
ss
pop
sub
sti
sar
push
divb
fiadds
mov
pop
or
das
scas
mov
or
ret
movsl
xchg
push
push
or
rcl
xchg
jbe
push
xchg
dec
cmp
out
rol
mov
enter
gs
push
pop
add
das
fldl
push
xchg
adc
jnp
out
mov
pop
sbb
arpl
push
xor
sarl
mov
aad
scas
lock
pop
aad
loop
jae
and
in
and
sub
gs
dec
mov
bound
inc
push
roll
das
inc
jmp
popa
jmp
pop
and
jnp
loopne
or
arpl
pusha
out
arpl
popf
pop
pop
sub
and
adc
aaa
sub
lods
pop
idivl
cmpsb
or
push
mov
push
adc
and
adc
jns
fsubrp
hlt
ja
push
sub
int3
pop
xchg
es
sbb
inc
movsl
addps
mov
jl
push
mov
inc
stos
int
incb
je
arpl
cli
sub
inc
sub
fidivrl
jbe
and
test
add
sub
jl
sbb
pop
leave
cmp
sub
out
int
adc
jmp
or
addb
pusha
pop
xor
and
inc
xor
lock
popa
pop
cltd
pop
ficomps
xchg
mov
test
int3
dec
popf
push
out
fisubrl
sub
ret
cli
inc
adc
enter
cli
push
inc
sub
lret
mov
and
adc
bound
dec
in
outsl
dec
repnz
cmp
push
sbb
jge
xchg
mov
sarl
shll
cmc
ds
adc
fs
cwtl
fnstcw
pop
sti
imul
xchg
jl
add
dec
scas
or
mov
scas
or
push
aam
out
gs
std
ret
jnp
addr16
mov
or
movsl
mov
pop
add
mov
std
arpl
add
dec
jecxz
jle
imul
cmpsl
stos
push
sub
jle
xchg
fstp
pop
mov
repz
fdivl
out
fdivp
addl
movsb
pop
mov
jo
jno
sub
pop
mov
sbb
mov
lock
insl
xor
inc
xchg
pop
or
aam
push
xor
lods
mov
sbb
mov
pop
mov
psubw
adc
sbb
int3
clc
lock
adc
inc
pop
and
in
xor
inc
insb
pop
mulb
lret
mov
fwait
pop
loopne
stos
or
andl
adc
jb
shlb
xchg
or
xchg
pop
nop
sub
or
fwait
into
sbb
mov
inc
push
dec
mov
mov
daa
aas
sti
clc
imul
and
ja
inc
test
and
mov
mov
and
add
fwait
jno
xchg
leave
loopne
sub
add
and
mov
push
mov
fwait
je
movsl
cmp
sub
ret
push
int
and
loope
sub
lret
shr
in
imul
mov
jo
clc
ficoml
mov
mov
jg
cmpsl
jo
or
mov
movsb
mov
xor
jnp
sbb
std
lods
or
mov
mov
cmp
loop
lea
dec
pusha
and
stos
sbb
add
lock
mov
inc
mov
inc
leave
pop
mov
pushw
and
movups
add
mov
loop
std
pop
jge
inc
inc
pusha
sbb
testb
sub
mov
cli
ffree
pushf
jmp
loop
je
fiadds
subl
outsb
xchg
imul
jl
xor
sub
sub
shr
xchg
dec
arpl
xchg
push
cmp
pop
arpl
ret
in
mov
or
aad
xor
pop
icebp
sub
cmp
cmpsl
pusha
ljmp
sarb
or
push
pushf
mov
push
jno
loope
mov
in
mov
aaa
xor
fsubp
mov
mov
je
rolb
jecxz
xor
mov
and
insl
or
push
arpl
sbb
and
jg
push
mov
sub
sub
lcall
imul
jae
test
adc
nop
cli
roll
neg
jb
fs
hlt
lds
test
dec
gs
mov
inc
cmpsl
loop
fwait
int3
and
cmpsl
cmpl
imul
xor
std
sub
and
pop
pop
dec
xor
cmpsl
test
iret
cltd
sarb
xchg
call
sahf
add
xchg
sub
cmpl
xchg
add
jo
pusha
negb
mov
mov
lret
or
mov
in
je
and
mov
mov
push
insb
add
xlat
mov
xor
jecxz
push
and
and
fsubrl
xchg
ljmp
test
add
jge
xor
dec
es
xchg
and
inc
imul
negl
inc
push
rolb
cmp
movb
dec
ljmp
push
pop
in
mov
jl
inc
lahf
dec
pop
and
and
popa
jb
mov
ss
push
into
or
mov
enter
jge
and
inc
insb
mov
xchg
sbb
adc
aas
leave
mov
divb
xlat
pop
pop
sbb
mov
mov
lock
clc
pop
pop
pop
jbe
pusha
daa
xchg
xchg
sub
sbbb
sub
fucompp
add
lds
rol
ffreep
popa
cld
int3
dec
pop
mov
dec
das
loop
lret
cmp
call
jmp
int3
jns
mov
jge
dec
or
and
rcrb
inc
mov
popf
ljmp
cmp
notb
dec
in
cmp
pop
mov
or
mov
pop
ljmp
mov
mov
sub
dec
push
lods
insl
shr
ljmp
lret
inc
add
in
xor
xchg
neg
push
arpl
or
lods
in
enter
mov
data16
pop
mov
mov
and
mov
or
shrb
sub
das
pop
dec
lds
xchg
sbb
jo
lock
inc
pop
les
notb
adc
cmp
or
leave
test
fcomip
or
mov
sbbl
add
loope
inc
andb
mov
jle
lock
mov
add
sbb
fidivs
loope
repnz
aad
jno
lcall
inc
xchg
mov
mov
dec
fdivrl
xchg
pop
je
adc
pop
mov
sbb
mov
dec
rorl
or
xor
in
lahf
sbb
aas
sub
movsl
cmpsl
mov
add
or
in
lea
ljmp
fbstp
in
mov
daa
mov
ret
sahf
dec
test
cltd
stc
ljmp
roll
mov
cmp
pushf
pop
inc
sub
pop
dec
scas
enter
and
xchg
ds
xlat
cs
pushf
jnp
add
mov
push
in
test
xor
jb
sub
inc
push
pop
jno
dec
fndisi(8087
leave
out
lahf
push
and
xchg
out
arpl
jge
sbb
outsl
rcl
lods
repz
xchg
addr16
gs
lea
out
adc
inc
cld
or
add
in
loop
popa
lods
fsubl
dec
ds
lahf
rcrl
xchg
jmp
out
adcl
mov
mov
aad
and
pop
shl
imul
pop
and
mov
inc
cwtl
testl
stos
and
test
sbb
fsts
daa
xor
fstps
fbld
mov
jle
push
paddd
jmp
call
mov
loop
mov
and
ficoms
scas
mov
lea
scas
add
pop
sbb
mov
mov
mov
shll
push
jne
lock
lret
or
add
insb
xchg
test
mov
xor
gs
test
int3
xor
dec
pop
jle
outsl
leave
jb
mov
mov
aaa
and
lretw
cmc
jns
sub
jl
icebp
icebp
imul
inc
pop
mov
inc
mov
daa
pop
add
andl
stos
das
iret
shl
pop
pop
loopne
sub
push
lret
xchg
jnp
pop
lcall
leave
push
push
add
shll
adc
cmp
sarb
or
mov
decb
pop
or
jns
cltd
sahf
adc
shlb
idivl
movsb
mov
lahf
test
pop
inc
test
movsl
sbb
sub
sti
adc
mov
xor
int
inc
rorl
iret
sbb
push
and
aaa
nop
jae
sbb
gs
mov
or
movl
insb
cltd
xchg
and
or
sub
stc
jno
pushf
mov
in
xchg
jae
xchg
test
push
sbb
lods
lock
pop
test
outsl
inc
adc
pop
sarl
xchg
cmp
xor
pop
mov
jbe
out
xchg
mov
mov
je
mov
jo
push
cmp
or
cmp
scas
jg
cmp
sub
je
xor
dec
or
mov
dec
popf
and
mov
das
outsb
daa
movsb
mov
mov
pushf
and
test
or
inc
jns
pop
clc
orb
test
stos
adc
in
cwtl
icebp
adc
push
cmp
sbb
loop
pop
in
push
and
push
pop
mov
mov
xchg
mov
ja
insb
pop
pop
and
adc
pop
int3
jecxz
cmp
sub
mov
xor
repz
insl
fsubs
stc
cwtl
pop
iret
xor
sbbb
mov
addr16
pusha
mov
lcall
sbb
cmp
mov
dec
es
adc
push
mov
mov
add
mov
adc
sub
lods
adc
stos
outsl
in
sti
sbb
sbbb
mov
in
sbb
push
sbb
xor
dec
mov
data16
test
iret
add
mulb
jno
movsb
arpl
stc
iret
dec
sti
sahf
ljmp
pop
and
fnsave
inc
out
lahf
popa
xchg
jmp
xchg
mov
or
outsb
rolb
cltd
dec
mov
mov
xor
mov
add
mov
inc
jp
insl
inc
movsb
pop
fwait
mov
pop
loop
mov
xchg
jge
dec
mov
leave
insb
xor
daa
out
divl
pop
mov
stos
xlat
sub
inc
fldenv
std
xlat
dec
andb
in
xor
sbb
subb
in
mov
fisubrl
xor
jne
pop
cmpsb
inc
pop
dec
mov
sub
pcmpgtw
xchg
adc
adc
pop
iret
jmp
and
cs
jne
stc
add
rclb
mov
mov
insl
inc
rorl
pop
push
sti
dec
mov
push
xchg
cmpsb
mov
lods
pop
mov
test
and
outsl
mov
jnp
stos
popa
adc
and
sti
cwtl
insl
das
add
mov
pop
dec
pusha
pop
mov
pop
lock
push
pusha
or
pop
or
mov
dec
pusha
ret
inc
pop
xchg
sub
fidivrl
xchg
jb
adc
aam
pop
push
test
cltd
jecxz
fistps
sub
xchg
call
test
out
inc
xchg
mov
loopne
mov
inc
sub
add
fstl
cmpsb
inc
or
test
inc
sbb
mov
cmp
jb
into
cs
mov
stc
cld
cltd
pop
arpl
test
mov
jo
xchg
mov
out
mov
xor
dec
cli
fwait
aad
cmp
xor
stc
outsb
aas
out
cwtl
push
push
xchg
mov
mov
jb
push
xor
sub
jno
sub
dec
sbb
dec
insl
mov
mov
dec
pop
mov
sbb
mov
ret
subb
jo
stos
sahf
add
mov
aaa
cwtl
pop
fstpt
mov
mov
adc
cli
xchg
mov
imul
jae
js
call
ret
or
mov
gs
inc
std
dec
sub
mov
aad
xor
sub
movsl
mov
jnp
pop
loope
test
pop
out
fisubs
cmc
xchg
inc
adcl
add
push
xchg
cmp
cmpl
jb
xchg
es
cld
cmc
inc
daa
les
mov
mov
aam
sub
loop
jno
mov
mov
sbb
aas
pop
add
test
xchg
xchg
push
mov
inc
imul
or
jo
ficompl
add
stos
in
cmp
cmpb
in
or
jns
xchg
lds
imul
repz
in
or
pop
outsl
test
add
cltd
mov
clts
outsl
shl
add
mov
and
les
cmc
pop
shr
mov
inc
mov
push
push
jecxz
push
push
ljmp
dec
sub
es
insb
push
push
mov
push
test
dec
icebp
sub
call
leave
jno
adc
sub
xchg
xchg
outsl
inc
or
jl
call
push
jno
xor
push
sbb
icebp
adc
xor
sbb
push
daa
lock
aad
jl
mov
and
gs
jb
outsl
add
cmpl
loop
mov
mov
xchg
pop
mov
mov
dec
lds
imul
mov
lods
popa
call
fisubrl
outsl
and
lds
pop
test
dec
scas
rol
dec
leave
inc
imul
cmp
fidivrs
jp
out
testl
xor
pop
int3
push
data16
shrb
and
sbbb
pop
inc
mov
xor
inc
daa
mov
xor
jl
aas
jb
mov
and
mov
sahf
ss
loopne
andl
or
shrb
push
jno
mov
fmuls
pop
jle
mov
ja
mov
pop
mov
out
cwtl
push
xlat
cmc
rol
imul
xor
mov
jmp
jge
cli
adc
rorb
pop
data16
repz
dec
call
xchg
push
mov
imul
mov
cli
outsb
arpl
sahf
add
jns,pt
scas
insl
jno
outsl
shll
shlb
and
dec
ds
pop
daa
xorb
and
add
clc
arpl
pushf
rorl
mov
xor
and
jecxz
mov
push
mov
je
pop
lock
xchg
sub
jp
pop
incb
sub
or
mov
xchg
and
push
add
es
mov
xchg
popa
add
push
faddl
mov
or
jns
jo
in
pop
fwait
fdivs
jbe
je
xchg
inc
loope
repnz
mov
insl
mov
popf
sbb
ss
fsts
popa
cmp
pop
cld
iret
xchg
cmp
hlt
test
lods
pop
xchg
pop
dec
mov
cmp
mov
mov
add
out
lods
jae
add
in
add
xor
mov
icebp
movsl
push
mov
daa
inc
push
jb
adc
bound
icebp
scas
push
add
dec
push
add
and
sbb
shrl
xchg
pop
jle
adc
sahf
and
dec
push
and
in
push
cmpsl
aad
in
jecxz
into
push
xor
repnz
mov
xor
lock
ljmp
push
sub
push
xorb
jle
push
mov
xor
jmp
lcall
or
push
movsl
add
xchg
adc
pop
dec
pop
cli
push
scas
push
jb
add
outsl
subl
rcrl
ljmp
pop
pop
xor
xchg
jmpw
inc
add
aad
notl
insb
lds
fdivrl
jne
dec
inc
nop
jmp
data16
add
stos
jmp
bound
mov
pop
dec
mov
pusha
mov
or
xchg
jl
or
rcrl
mov
loopne
outsl
aaa
jae
mov
or
in
testb
call
sar
inc
mov
sbb
jo
std
cs
pop
out
mov
mov
cmp
lret
push
gs
test
mov
and
pop
or
lds
movsl
xchg
mov
test
push
pop
pushf
or
jl
out
bound
adcb
dec
cmc
int3
xchg
cmc
push
movsb
inc
dec
sbb
andl
movsb
inc
inc
shrb
popf
hlt
cmp
xchg
pop
cmp
sbb
push
ret
push
push
test
add
jnp
or
sbb
adc
and
icebp
cltd
jecxz
loop
stc
mov
subb
jmp
loopne
imul
jecxz
or
and
cli
sti
xchg
bound
jle
incb
fidivl
stos
icebp
sbb
mov
test
jmp
aam
jle
push
js
jg
sarl
mov
sti
hlt
and
orb
cmp
fisubrl
mov
jge
add
ret
cltd
in
adc
mov
jle
orl
int
testb
dec
jecxz
mov
adc
mov
flds
mov
adc
xor
pop
dec
ret
sbb
rcl
clc
arpl
cwtl
in
push
mov
data16
lods
adc
mov
mov
cwtl
pushf
loope
pop
sub
int3
popa
mov
jmp
insb
lahf
mov
out
int
mov
sub
and
push
mov
sbb
lods
bound
sahf
sbbb
inc
sub
aaa
ret
push
outsl
add
mov
pusha
cmpsl
out
lret
lea
and
xchg
jno
mov
and
jecxz
pop
in
adc
add
lods
mov
dec
xchg
adc
inc
adc
sarl
and
add
mov
lods
add
adc
push
clc
aam
scas
xor
xor
jmp
xchg
xchg
test
lods
xlat
sub
ret
push
cmc
in
andb
adc
scas
cmp
sbb
adc
movsl
imul
xchg
enter
add
add
clc
ret
cwtl
ss
jle
aad
push
inc
mov
sahf
jne
sbb
stc
sbb
cmp
adc
push
push
xor
fsts
mov
scas
mov
loopne
or
add
test
jmp
sub
das
ljmp
xor
cld
sub
add
imul
push
push
add
cli
xchg
mov
sub
icebp
mov
jne
xchg
sub
xorl
shrl
jg
pop
lds
sbb
add
out
jae
push
stos
mov
shl
or
xchg
or
aad
jmp
sub
lods
out
movsl
into
mov
inc
sbb
jge
xchg
rcrb
leave
aaa
xchg
jb
repz
sub
and
push
jmp
shlb
jmp
or
nop
out
daa
jecxz
xchg
push
testb
lds
xchg
out
inc
outsl
pop
xor
mulb
sbbb
nop
test
xor
inc
xchg
rol
fs
xchg
push
xchg
xchg
nop
mov
outsb
test
out
jp
psrlq
mov
inc
mov
cli
mov
push
nop
cmp
stc
sbb
mov
adc
sub
popf
mov
in
mov
mov
add
and
js
rcll
or
push
call
xor
or
mov
vmread
sarb
lock
arpl
mov
lret
outsb
mov
and
imul
pop
int
adc
inc
or
fildll
dec
add
jb
sarb
pop
jecxz
in
sahf
rcr
movsl
es
pop
add
jecxz
sbb
test
je
mov
stc
push
xor
lods
out
in
sbb
jl
fdivs
std
in
shll
mov
jbe
sbb
or
xor
movsl
jl
cmpsb
int
jbe
repz
imul
sti
push
add
sub
dec
out
adc
or
xor
mov
out
outsb
mov
lods
int3
insb
sbbl
or
stc
push
xchg
xorl
mov
sbb
lret
push
mov
cmp
dec
mov
or
ljmp
push
jbe
frstor
adc
ds
out
sub
add
sub
test
subl
jg
sahf
push
push
call
sub
std
mov
mov
outsb
test
ret
adc
dec
cmp
lock
loope
or
pop
ja
adcl
nop
inc
das
and
adc
add
push
jl
add
xchg
mov
cmp
cmpl
repnz
and
xchg
mov
rclb
stc
jmp
pop
sbb
scas
sbb
cmp
sbb
mov
repnz
mov
stc
push
nop
push
fs
in
out
nop
and
sti
xchg
add
or
movsb
cmp
filds
jmp
jp
inc
out
shlb
shlb
add
sbb
sub
lea
pop
lret
nop
fmull
loop
stos
add
dec
fisubs
xchg
dec
push
push
jl
xchg
rcrl
push
lret
leave
jge
jle,pn
dec
aas
pop
xor
adc
aam
adc
sar
or
ret
insl
cltd
xchg
push
fsts
cmp
aaa
and
arpl
sbb
adc
mov
lret
subl
jae
dec
lea
into
popa
loop
push
mov
mov
jbe
or
rcl
test
cwtl
inc
decb
dec
inc
in
leave
cmp
fsubr
mov
cmc
jae
xchg
and
or
mov
out
cmpsb
push
inc
pop
jmp
inc
adc
pushf
jae
addl
out
rcl
pop
cmpsb
daa
pop
mov
mov
xor
das
hlt
jo
push
lds
pop
fs
test
ja
cwtl
push
adcl
enter
out
mov
repnz
je
shlb
or
fdivrl
adc
test
jp
push
lods
mov
loope
pop
mov
mov
mov
bound
or
fdivrs
rcl
push
jecxz
lods
rcrb
xor
cli
pop
sub
push
andl
cmp
pop
add
push
lret
cmp
sahf
andb
jl
gs
xchg
push
pop
daa
jne
lods
in
add
fwait
jo
jge
mov
dec
add
and
inc
lcall
fisttps
mov
xor
ljmp
add
mov
ljmp
in
loopne
pop
cmp
sbb
adc
fildll
sub
add
or
idivb
pop
push
fisubrl
out
iret
jb
mov
pop
int
subl
mov
jp
xchg
push
jne
jae
jnp
jo
pop
push
push
jbe
xchg
fimull
mov
inc
or
mov
mov
mov
lea
mov
js
clc
lcall
lret
pop
xchg
jmp
dec
pop
insb
push
pmaddwd
push
push
in
or
or
pusha
insl
hlt
sbb
push
ffree
lods
ss
pop
sahf
jl
fcomp
add
pop
addr16
mov
mov
cld
fbstp
pop
and
lcall
pop
mov
xor
cwtl
dec
pop
loop
incl
xchg
inc
and
push
jne
sub
les
push
inc
cmc
aas
mov
cltd
add
add
inc
lock
xlat
rcl
jne
and
out
add
ds
cmp
dec
lret
inc
pushf
loop
movl
fldenv
ja
xchg
test
mov
mov
push
pop
stos
xchg
pushf
and
inc
jp
int3
icebp
add
cli
cmp
pop
cs
sub
or
ret
std
pop
cmpsl
roll
mov
xchg
mov
aaa
repz
dec
inc
pusha
pop
xchg
fsubrp
and
jecxz
test
imull
xchg
xor
pop
push
dec
repnz
cmpsl
xchg
lock
imul
sbb
xchg
jns
stc
cwtl
or
mov
aam
sbb
repnz
fldenv
clc
stos
repz
pop
mov
pusha
movsl
fsub
stos
mov
fcoms
jecxz
push
leave
aaa
rol
and
movsl
in
mov
mov
in
jb
pop
sbb
mov
decl
cli
inc
je
or
sub
pop
mov
mov
addl
mov
inc
testb
jge
mov
push
add
dec
dec
jp
pop
loope
aas
mov
jb
call
push
lahf
sarl
shlb
mov
push
pop
mov
or
out
in
clc
pop
jno
es
pop
fucomip
xor
fldl
icebp
cmp
sbb
cmpsb
idivl
dec
out
xor
sbb
adc
imul
cmp
mov
repz
in
xor
scas
in
test
cmpsl
test
outsl
add
sbb
sbb
push
mov
push
pop
lea
add
mov
std
add
push
movsb
xor
pop
mov
xrelease
xor
or
das
dec
adc
and
popf
int3
inc
sbb
out
popf
popa
movsl
and
sub
lcall
into
shr
je
inc
cltd
dec
inc
iret
repnz
mov
xchg
stos
ljmp
add
pop
add
or
add
movsb
pop
sub
test
aad
hlt
insb
push
shrl
hlt
sahf
push
dec
test
inc
push
jno
jl
test
dec
test
daa
fdivrp
popf
mov
test
fbstp
sahf
repnz
jge
add
in
sbb
jae
arpl
mov
lea
clc
adc
lea
sbb
or
negb
xchg
bound
das
jp
mov
les
ja
sbb
cmp
cltd
data16
fdivl
fs
fwait
jecxz
fidivrl
jno
sub
cltd
mov
sub
dec
into
sub
fsubl
adc
lret
jb
sarb
jg
push
lds
cmp
jg
cmp
inc
int
rorb
ror
icebp
subb
ljmp
dec
test
dec
push
shl
cmp
daa
out
lods
mov
pop
rolb
or
aas
stc
imul
shl
xchg
pinsrw
and
mov
or
std
xchg
in
adc
sub
jecxz
inc
imulb
fcoml
sbb
repnz
ret
jle
push
lds
cmpsl
sbb
add
mov
shlb
push
push
lret
mov
mull
push
out
xor
push
das
xor
pop
inc
out
cmp
iret
dec
add
mov
xor
or
inc
and
insb
inc
sbb
call
jmp
stos
fidivl
sbb
xchg
aas
mov
xchg
mov
stc
sub
sub
sbb
nop
jnp
mov
movsb
cwtl
xchg
out
loope
notb
push
push
mov
bound
js
jg
dec
lcall
loop
call
jle
loopne
cmp
aam
out
in
call
dec
testl
not
xor
push
add
inc
sbb
mov
imul
test
mov
dec
js
mov
movsb
sbb
mov
and
mov
xor
lea
pop
cmpsl
adcb
ds
in
mov
fidivrl
jmp
call
jl
mov
dec
call
push
negl
sbb
adc
fsts
push
subl
pop
xchg
mov
sti
push
test
pop
fstl
fistpl
cmp
stos
insb
test
adc
sbbb
cmp
jno
popa
xor
xor
rcrb
faddl
sbb
adc
subb
sbb
in
or
fucomip
add
mov
pop
xchg
mov
jmp
push
shr
inc
or
and
adc
faddl
jle
sub
iret
rcl
adc
ret
cmp
outsl
xor
inc
inc
xor
push
and
jle
mov
dec
mov
js
adc
lods
cmp
pop
mov
xchg
jle
hlt
xlat
fdivs
imul
pop
lods
test
mov
mov
push
mov
jb
xor
out
in
mov
notb
in
das
mov
cmp
clc
out
test
dec
add
sbb
lds
ds
or
push
pop
daa
shr
dec
adc
dec
rorl
fs
push
mov
add
mov
outsl
xchg
and
repnz
lds
adc
add
cltd
das
sbb
or
je
sub
dec
cmp
fimull
gs
inc
xor
xchg
outsb
inc
addr16
popf
inc
or
dec
cmpb
xchg
sub
loopne
lcall
in
mov
cs
stc
push
mov
nop
nop
xchg
pop
xor
jmp
cmp
hlt
ret
push
jge
cmp
out
cmp
lea
insl
rorl
ret
cmp
xor
or
dec
sub
addr16
mov
fstps
dec
mov
shrl
push
mov
or
cmpsb
call
lea
push
adc
jo
out
jmp
into
cmp
jg
mov
loope
cmc
mov
jge
xlat
xor
jo
ds
or
in
mov
std
jbe
xchg
cld
push
fisttpll
movsl
das
mov
push
jo
out
jnp
lock
pop
push
nop
xchg
mov
or
adc
pop
mov
cmp
out
sahf
std
and
scas
xchg
divl
jnp
ror
in
bound
cmp
pop
mov
dec
and
dec
cmp
in
mov
dec
lret
es
cld
add
mov
pop
sarl
inc
jnp
movsl
rolb
neg
outsl
aas
pop
mov
or
test
inc
push
cmc
xchg
sub
enter
xor
xor
cmp
fbstp
aas
xor
push
and
and
rolb
inc
mov
add
adc
mov
aam
imul
mov
push
icebp
aam
mov
aaa
xor
dec
pop
xor
cltd
push
cltd
notb
ret
inc
xlat
in
popa
inc
fdivrl
jge
sub
sbbl
fnstcw
xor
or
adc
pusha
xchg
mov
dec
push
and
adc
xor
xchg
stc
outsl
sub
enter
xchg
addr16
mulb
xor
dec
mov
mov
cmpsl
and
and
mov
xchg
clc
xor
xor
adc
daa
mov
add
mov
dec
orl
push
mov
nop
mov
arpl
iret
ret
mov
fldenv
ja
gs
aad
es
pop
xchg
mov
jp
fwait
sbb
repnz
mov
mov
ret
pop
xchg
pop
out
cli
inc
mov
fwait
push
lret
add
setge
scas
jo
call
add
jg
dec
aad
test
add
arpl
pushf
in
lcall
jle
push
jmp
xor
dec
inc
inc
inc
test
push
movsb
shlb
add
cmpsl
jl
mov
cmp
cmp
inc
cli
mov
pop
arpl
lock
xchg
inc
fmuls
daa
xchg
and
fcoml
push
dec
in
inc
stc
arpl
insb
lret
mov
push
imul
xor
shl
and
sbb
mov
inc
mov
mov
sub
lods
mov
jne
inc
mov
filds
cmp
xchg
cltd
push
sti
push
icebp
dec
aad
mov
lods
xor
repz
mov
call
pop
xor
dec
xorl
pusha
jb
jmp
stos
dec
mov
rorl
pusha
xchg
lock
popa
xchg
lods
mov
and
push
rol
xchg
aas
xchg
add
sub
xchg
out
mov
addb
sub
ja
cmp
enter
xlat
sbb
stc
aas
push
mov
mov
out
and
je
enter
dec
pop
iret
xor
int
inc
dec
jno
sub
test
call
pusha
int
mov
addr16
add
mov
or
out
shlb
clc
push
mov
loope
add
jns
ret
lcall
sbb
or
xchg
mov
repz
sarl
aaa
add
jg
inc
mov
dec
pop
cmc
movsl
jecxz
jae
or
xor
push
sub
xchg
repnz
adcl
adc
inc
xor
int3
pop
or
dec
std
xchg
ss
mov
das
sbb
dec
pop
inc
mov
dec
xchg
outsb
dec
je
sbb
adc
jle
je
movsl
jne
mov
push
inc
popf
cmpsb
lods
cld
add
mov
jl
xor
loop
test
push
lcall
push
outsb
loope
mov
push
imul
pop
pop
mov
xor
enter
push
fcmovnb
sub
mov
sub
loope
sbb
dec
je
cmp
sbb
or
popf
popf
mov
push
popa
push
lcall
jns
dec
jb
push
iret
mov
mov
movups
ret
sti
pop
xchg
pusha
cmc
pop
test
out
les
insb
xchg
jg
jnp
jnp
pop
push
adc
inc
fwait
scas
adc
mov
or
lret
push
ret
sbb
stos
cmpsb
mov
imul
mov
push
mov
cltd
or
sahf
jnp
fimull
bound
and
pushf
mov
inc
xchg
sahf
jnp
lcall
lods
jbe
cwtl
cli
mov
orl
test
jecxz
dec
dec
push
or
cmpsb
adc
pop
into
sub
incb
add
jl
xor
lret
inc
dec
cs
inc
imul
push
rorb
push
std
iret
mov
inc
xchg
xor
mov
mov
sub
push
dec
push
xchg
ret
sahf
mov
push
lret
int3
and
inc
loop
lock
mov
jo
inc
out
pop
fldcw
js
pop
xchg
mov
cli
mov
mov
cmp
out
stos
lret
add
dec
mov
xchg
and
gs
fldenv
loope
xor
pusha
dec
or
xor
rcrb
push
push
fldenv
mov
mov
pop
xchg
dec
cltd
outsl
das
fistpll
jmp
xchg
sub
push
add
inc
xchg
and
mov
xchg
sub
push
mov
insb
and
in
push
xchg
mov
pop
hlt
lcall
stc
jbe
lods
dec
movsb
out
pushl
pop
add
add
rcl
cs
dec
movhps
jle
adc
push
je
sbb
out
add
pop
lock
lds
fwait
pop
das
jmp
imul
fsubs
ror
cmp
scas
add
dec
mov
mov
aas
fsubrl
arpl
jne
pusha
sub
ss
xchg
cwtl
test
push
daa
ljmp
push
jne
xchg
je
ljmp
mov
jle
xchg
repz
mov
mov
test
or
inc
push
stos
out
lret
push
mov
pop
or
xchg
inc
mov
xlat
mov
sbb
mov
daa
push
iret
dec
cmpsb
jl
mov
lods
imul
aam
nop
into
dec
adc
inc
and
jecxz
pop
or
test
jp
sbb
or
lret
xchg
mov
enter
andb
repnz
in
jp
sbbb
imul
jno
into
lods
hlt
jp
and
insl
fiaddl
into
ret
lahf
je
aaa
clc
decl
sbb
fidivs
jp
mov
nop
sub
arpl
subl
mov
sub
inc
fmull
xor
cmp
daa
dec
jge
push
sbb
push
popf
sub
inc
xor
xor
xor
and
add
sub
or
js
movsl
mov
push
cs
popa
cs
adc
call
ljmp
outsb
cmpsb
pusha
push
outsl
ficoms
stc
and
mov
shl
cld
aas
add
fucomp
aad
ja
and
xchg
lods
fsubs
xchg
in
xchg
out
mov
adc
cmp
pop
in
rcrb
lds
mov
pusha
enter
fcompl
shrl
sbb
in
adc
xchg
pushf
fcompl
shl
in
gs
iret
lods
inc
out
out
arpl
or
add
xchg
pop
xchg
cmp
sub
push
push
mov
add
leave
jo
pop
ja
popf
and
xor
bound
mov
bound
rdpmc
or
in
inc
sub
out
mov
add
insb
in
stc
dec
xchg
in
leave
mov
movsb
scas
jp
decl
ret
rep
mov
sar
aaa
dec
pop
xor
addl
clc
incl
mov
scas
inc
cmp
inc
dec
inc
std
jmp
cmp
inc
cwtl
cmpsb
xchg
mov
cmp
popf
cmp
je
xor
mov
adc
test
inc
movsb
gs
pop
pop
ret
mov
push
arpl
mov
mov
or
add
xor
ljmp
pop
rclb
mov
inc
xchg
fisttpl
mov
dec
pop
lret
andb
fsub
mov
dec
out
cmp
dec
daa
sub
pusha
add
lods
jbe
push
call
jecxz
ds
mov
pushf
inc
scas
out
stos
clc
mov
push
push
cmpsl
sti
icebp
pushfw
pop
cld
inc
mov
test
cmc
lret
mov
test
cmp
or
sysexit
mov
daa
mov
adc
and
xchg
sub
push
cmp
and
sub
iret
gs
adc
clc
ficoml
loopne
pop
jge
mov
mov
cmp
cmp
negl
push
jmp
jg
call
sub
arpl
cwtl
sbb
or
ds
lods
cmc
inc
rolb
imul
xchg
mov
call
insl
cltd
jmp
int
cmpsl
pop
sbb
mov
fdivs
xchg
divl
inc
inc
lock
mov
ja
push
xor
adc
sbb
mov
arpl
pop
adc
mov
mov
in
add
or
dec
lods
adc
sub
xorb
inc
pop
sbb
pop
adc
fimull
fcoml
mov
xchg
lods
idivl
or
stc
aam
mov
xor
sbb
ret
lock
lods
or
in
jge
cli
sub
or
ficompl
stos
inc
mov
cmpsb
xor
mov
decl
les
mov
fmuls
call
lods
adc
jo
fnstsw
lar
or
inc
xor
pop
sbb
cmp
adc
sbb
imul
cmp
sti
xor
pushf
and
xchg
push
cmp
dec
sbb
cmpsb
and
inc
pop
adc
xor
or
outsl
iret
or
xor
rorl
mov
rorl
mov
lahf
movsb
sub
pop
adc
insb
sub
sub
push
jp
sub
shlb
sub
dec
jmp
aam
jo
sbb
pop
lret
or
sub
mov
dec
push
loope
sbb
dec
sar
xchg
outsb
inc
pop
mov
pusha
cmp
std
aam
loopne
xor
jle
mov
popf
sub
pop
mov
leave
push
popf
scas
push
xor
cmc
push
lret
mov
cmp
call
xchg
jmp
test
pop
dec
push
mov
pushf
sar
push
cmpsb
movsb
mov
jno
icebp
sbb
lea
xchg
cmp
icebp
mov
shlb
cmp
lar
cmp
popf
jle
sbb
inc
adc
cmpsb
mov
jle
ja
call
nop
mov
in
and
movb
cmp
in
sahf
lds
std
insb
scas
xor
push
inc
mov
mov
pop
mov
repz
pop
sub
jb
ret
loopne
les
fisubrs
xchg
mov
push
inc
daa
or
in
cmp
xchg
cld
filds
roll
jae
mov
lcall
push
pop
popa
stos
ss
and
sahf
aam
andl
push
sub
subb
pop
sahf
lds
aad
push
mov
aam
in
mov
arpl
push
lods
fistpll
xchg
pop
lea
rcrb
subl
loopne,pt
push
test
adc
push
mov
in
push
or
jp
stc
mov
test
jns
pop
nop
jns
dec
mov
in
fs
xchg
cmpb
cmp
jno
pop
inc
fs
int
inc
mov
aad
test
cmpsb
xchg
inc
sbb
repnz
cmp
add
adc
jp
es
insl
stc
movsb
sbb
jo
mov
inc
adcl
arpl
jp
and
mov
cld
repnz
mov
mov
lds
jb
sbb
icebp
cwtl
mov
lods
cmp
sbb
jbe
je
push
or
xor
inc
nop
push
dec
adc
jae
push
cmp
ljmp
out
iret
mov
pusha
mov
fs
jmp
sub
xor
xorb
sbb
pop
leave
ret
and
dec
sub
xchg
mov
pop
cli
add
xor
insb
clc
push
fwait
cmp
pusha
pop
in
movsb
add
xchg
mov
repz
push
movsb
jae
data16
daa
xchg
ja
mov
insb
mov
js
lret
xor
lock
loop
ljmp
mov
cld
mov
jmp
insl
sbb
and
cwtl
xchg
dec
sub
je
xchg
push
dec
and
out
icebp
imul
xchg
rcrb
movsb
out
ret
das
cli
mov
iret
or
jb
mov
push
sub
mov
mov
sub
sbb
enter
gs
cmp
fst
sbb
pop
inc
push
adc
in
mov
bound
decl
or
shll
dec
insl
mov
test
add
mov
insl
mov
xchg
add
sub
xchg
xor
out
ret
arpl
pushf
leave
and
fildl
xor
sub
pop
mov
hlt
loopne
cmp
adcl
repnz
xchg
je
push
inc
ds
xor
xchg
push
enter
cmp
cmp
insl
mov
cmp
test
hlt
mov
shl
add
dec
lret
xchg
inc
mov
xor
les
cmp
movsb
incl
popa
call
or
sub
out
push
xchg
rorb
shrb
mov
int
lods
pop
sub
fbld
jp
sub
stos
mov
fcomps
jne
and
sub
mov
pushf
pop
push
add
push
mov
pop
jl
in
xchg
enter
inc
repz
inc
add
xor
jo
pushf
adc
lret
cld
outsl
adc
loope
stc
inc
add
pop
insb
js
icebp
and
inc
mov
pop
pusha
xchg
stc
aam
pop
jp
mov
jns
or
in
push
mov
dec
cmp
sahf
cmpsl
imul
jbe
shrl
insb
jge
sbb
out
xchg
std
test
bound
ja
mov
dec
sbb
xlat
mov
ret
test
hlt
cwtl
add
das
gs
leave
xchg
inc
lea
jmp
and
cmp
negb
sbb
cmp
in
repz
lock
lea
sbb
insb
or
das
scas
loope
testb
ljmp
xor
and
inc
gs
mov
pushf
hlt
or
sbb
mov
inc
xchg
mov
lea
lods
movsl
test
imul
sub
add
imul
incl
out
mov
dec
in
sbb
scas
in
jo
lcall
test
lods
das
cmpsb
scas
or
cmpsb
jb
cmp
push
movsl
mov
dec
pop
and
mov
aad
fldt
push
lods
inc
outsb
lcall
imul
add
adc
pushw
sti
add
clc
mov
push
mov
fisttps
sub
jne
mov
and
fldt
push
test
inc
pop
sub
lahf
iret
sti
fs
inc
imul
lret
repnz
mov
mov
add
lock
sbb
outsl
mov
push
push
cli
icebp
mov
xchg
test
icebp
pop
inc
sahf
pop
sub
lea
push
sbb
stos
cld
test
inc
inc
add
jo
lds
xor
insl
add
mov
test
test
andb
leave
add
lock
and
or
and
mov
rcrl
lds
cmp
sti
jge
std
inc
lret
xor
mov
cmpsl
mov
int
jge
aas
jge
mov
std
ljmp
out
pop
outsb
ja
mov
sti
xor
xchg
repnz
dec
unpckhps
inc
adc
add
fbstp
xor
rcll
je
fcmovne
fimull
xor
pop
mov
cmp
mov
enter
sbb
insl
imul
stos
loope
movsb
xchg
pop
insb
xchg
aas
and
sbb
and
jns
lahf
push
fwait
scas
cmpsl
inc
dec
aad
int
stos
mov
pop
lret
test
pop
sub
and
dec
stos
lea
sub
outsb
popf
je
pop
pop
stos
push
sub
cmp
mov
movsl
stos
out
aas
adc
mov
push
je
inc
addr16
test
xchg
push
imul
lods
dec
xchg
and
cld
popf
imul
add
push
xchg
ror
inc
push
mov
int3
and
mov
out
pop
fwait
inc
and
es
and
pop
sbb
mov
or
fistps
xchg
add
push
dec
fidivrl
es
or
sub
pop
xchg
stc
scas
or
xchg
mov
les
xchg
mov
mov
jb
jb
mov
xchg
cmpsl
jne
sub
jle
xor
inc
std
lcall
push
pop
imul
pushf
xorl
mov
xlat
xor
or
fsts
mov
or
inc
jns
shrl
mov
dec
orb
leave
pop
cmp
xorl
ficoml
dec
aaa
bound
push
xchg
aas
adc
jg
adc
and
jp
inc
mov
mov
and
pop
sar
fucom
arpl
movsl
dec
popa
fistps
and
in
xor
mov
jnp
lock
push
push
jge
das
sarb
shlb
nop
mov
pushf
mov
add
shr
jae
shlb
cltd
int
data16
sub
mov
ja
push
mov
outsl
sub
lcall
mov
xor
xchg
xchg
xchg
mov
adc
stos
fcmovnu
stos
jbe
cmpsl
xor
push
or
data16
xor
sub
popf
mov
or
xchg
xor
imul
je
ja
loop
pop
iret
xchg
mov
add
out
in
inc
addr16
xchg
dec
xor
push
je
jae
inc
and
xor
push
call
outsl
pusha
xor
mov
mov
ss
repz
mov
cld
jb
jmp
inc
or
mov
add
into
jl
jg
test
jnp
push
ljmp
cs
jp
clc
in
aas
pop
cmp
mov
or
and
lock
sbb
ficoml
in
cltd
or
inc
push
mov
and
data16
sbb
sub
scas
fsubrl
hlt
loop
cmpsl
fidivrs
addr16
jecxz
and
popa
stc
xchg
xor
mov
in
loop
fxch
sbb
add
jne
out
inc
cs
or
jno
lock
in
notl
push
pop
imul
insb
scas
mov
repz
mov
pop
or
pop
push
or
and
adcb
pop
mov
js
sbb
add
sbb
dec
adc
and
cltd
shlb
cmp
mov
push
nop
mov
test
lock
mov
jbe
xchg
dec
mov
or
pop
fdivl
xor
add
adc
xor
stos
icebp
fisttpl
sarl
rclb
mov
sub
iret
xchg
xchg
jl
push
out
mov
stc
int
push
mov
mov
and
mov
icebp
outsl
insb
scas
movsb
sti
xor
mov
sub
add
mov
aam
fimuls
sub
test
jl
mov
cltd
sub
or
pop
pop
push
and
aam
aaa
test
ljmp
pop
cmpsb
test
pop
sub
out
or
cltd
jnp
add
pop
xchg
xchg
xchg
jns
pushf
loop
int
cltd
das
negl
std
popf
imul
mov
mov
fildll
bound
dec
cli
add
ret
push
or
ret
sub
jo
inc
mov
mov
fcmovu
and
jb
cli
sbb
mov
xchg
gs
pop
jno
aas
jo
ljmp
test
outsl
or
repz
sub
push
inc
ja
inc
sbb
ret
in
fsubrs
std
fdivrl
or
rclb
xor
imul
daa
hlt
lcall
pop
out
cmc
mov
push
jge
inc
rorb
addr16
pop
call
imul
pop
loopne
or
cmp
adc
cli
aaa
or
xor
cmpsl
cmp
push
movsb
pop
sub
enter
xchg
lock
cmp
mov
push
mov
jae
test
add
lods
and
gs
inc
and
dec
adc
sub
addb
mov
mov
jae
movsb
sub
mov
push
mov
add
cmp
jge
pop
sti
pop
out
int3
mov
in
int3
cld
xlat
mov
dec
pop
out
mov
push
sub
pushf
cmpb
mov
push
mov
neg
repnz
cmp
inc
sbb
jo
sbb
push
ds
fs
cmpsl
mov
xchg
ffree
dec
sahf
push
sub
adc
cmp
rorl
pop
lock
lahf
divb
fstps
je
sub
dec
ljmp
or
rcll
inc
ret
popf
push
aaa
sbb
adc
cmp
orl
mov
mulb
inc
aad
sbb
out
in
lret
stos
es
push
loope
aas
cmp
pushf
add
and
aad
jne
test
sub
inc
shll
xor
leave
popa
int3
addb
insb
jnp
push
push
jg
and
lret
sahf
into
les
les
cmpsb
ds
test
mov
fdivrp
out
sti
xchg
pusha
mov
mov
rorb
pop
les
lcall
aam
das
imul
sbb
sub
incb
sbb
fisttps
sti
enter
out
adc
insb
iret
sbb
call
xchg
arpl
jo
add
test
or
mov
mov
cmp
mov
adc
out
jno
outsb
xchg
imul
xlat
sbb
mov
cmp
sub
jb
xchg
pop
hlt
cmp
or
mov
enter
out
cmp
xchg
andl
loop
rolb
int3
fwait
xlat
jne
xchg
push
cld
fcoms
out
push
lcall
adc
mov
and
mov
pop
out
pop
cmp
in
out
test
mov
pop
jnp
sbb
jecxz
arpl
lock
inc
shrb
push
aas
mov
dec
jbe
dec
addr16
mov
stos
imul
into
cld
andl
xor
xchg
popa
mov
gs
ficompl
test
dec
mov
cmpsb
frstors
lcall
arpl
repnz
imul
mov
out
inc
packssdw
in
cltd
icebp
dec
mov
cmpsl
fs
mov
add
loopne
dec
shlb
dec
xlat
mov
out
insl
outsl
dec
gs
jns
aas
mov
mov
push
lods
stc
sub
cmp
out
lods
fisttpl
in
dec
nop
or
xor
popf
adc
jmp
fwait
mov
enter
xchg
push
and
jo
rcr
pop
add
xor
jne
mov
js
andb
inc
fstpt
and
movsb
roll
bound
fisubrl
inc
repz
addl
shr
arpl
das
inc
sti
cmp
in
xchg
mov
je
adc
xchg
push
xchg
pop
sub
jno
rol
scas
sti
sti
cmp
adc
or
push
mov
jns
test
std
std
out
mov
hlt
cwtl
xor
cltd
xchg
mov
cltd
movl
scas
lret
leave
cmp
nop
test
mov
call
aam
movsl
or
cmpsl
aad
add
out
arpl
inc
hlt
dec
cli
lods
xor
jb
xorb
adc
addl
movsb
mov
cmc
out
sti
insb
fwait
and
sbb
inc
xchg
and
pop
in
adc
mov
cmp
in
add
sbb
adc
ret
sub
fistpl
repnz
ja
mov
subl
xchg
fs
repnz
das
xor
dec
sub
jb
sbb
sar
xchg
push
inc
or
mov
divl
sub
aas
lods
dec
fs
mov
or
cmp
popf
imul
dec
aad
enter
fbld
mov
inc
sbb
push
pop
loop
jle
mov
fnstenv
xor
jmp
add
andl
ficoms
leave
and
jns
fs
xor
scas
test
jnp
xor
pusha
dec
mov
cmp
aaa
mov
lods
rcrb
out
out
push
loope
aas
sbb
jge
pop
mov
mov
cmpsl
pop
std
xor
movsl
mov
movsb
dec
inc
sub
xchg
jo
adc
ljmp
xorl
xor
dec
in
and
leave
inc
add
sahf
jge
cs
or
rcl
cmp
sbb
dec
leave
loop
dec
divb
aad
leave
jae
dec
mov
ds
jge
jmp
mov
push
add
adc
das
add
xorps
loop
scas
cmpsb
sbbb
subb
pop
leave
cmc
xchg
jge
lock
outsl
cli
jge
movsb
adc
clc
mov
xor
adc
jge
or
imul
adc
sahf
enter
sub
test
out
jp
clc
sub
in
icebp
fldcw
test
jns
cs
cmp
dec
xchg
aam
test
add
lcall
fs
movsl
sbb
push
mov
sarb
xor
sub
mov
mov
pushf
cmp
hlt
outsb
out
lea
inc
fsubl
mov
stos
test
cwtl
lock
punpckhwd
xor
in
dec
sbb
mov
bound
inc
bound
mov
push
call
pop
and
out
mov
cmp
aaa
sbb
negl
mov
dec
jmp
addr16
inc
in
adc
and
ret
je
dec
mov
push
test
or
sbb
cmp
lea
mov
sbb
cld
xchg
cli
aas
or
lods
js
pusha
mov
pop
push
pop
xor
sub
fwait
add
dec
jo
call
xchg
orl
lret
fdivr
stc
inc
pop
cmp
pop
sbb
test
jmp
xchg
jge
pop
pop
xlat
ret
adc
nop
xchg
pop
decl
sbb
shl
test
pop
push
sti
push
arpl
cli
rol
stc
out
and
fidivrl
xchg
push
out
xor
mov
fsubrl
inc
insb
int3
cld
add
adc
xchg
mov
fs
mul
mov
das
mov
jl
pop
sub
cltd
mov
sub
lahf
mov
xchg
leave
aam
ja,pt
lods
testl
stc
outsl
jae
lods
xor
and
int
jmp
push
in
fsin
lahf
fdivr
loopne
adc
sub
xchg
stos
out
aad
mov
jmp
test
inc
push
and
or
mov
call
sti
or
pop
ficoms
shrl
lock
mov
sub
je
mov
mov
sbb
sahf
push
lock
aad
push
test
push
rclb
daa
dec
mov
outsb
call
xchg
faddl
inc
cmpl
jo
cmp
xchg
mov
ss
adc
jo
dec
push
test
out
mov
test
fdiv
push
jnp
hlt
test
outsb
sub
insl
mov
repnz
xorb
sbb
cld
lods
fcom
push
add
add
push
xchg
js
loopne
movsb
repnz
sbbl
sub
adc
cmp
jo
cltd
cmpsl
add
dec
xchg
xchg
bound
mov
xchg
or
dec
pop
roll
ljmp
inc
jmp
mov
jae
imul
aas
adc
jmp
fldt
dec
andb
out
enter
ret
xchg
adc
jnp
fs
pop
inc
cs
pop
or
dec
xor
cmp
jo
shll
push
mov
cmp
xor
roll
inc
fisubrl
xchg
ret
arpl
sub
pop
popf
lret
decb
mov
pop
and
sbb
dec
and
shlb
addb
inc
ds
push
cmp
fcompl
inc
leave
cld
jae
xor
leave
push
fs
or
and
imul
cmpsb
lock
inc
mov
and
xlat
push
xor
ret
nop
adc
dec
dec
jle
mov
stc
outsb
add
xlat
sti
sub
mov
pop
push
cli
pop
dec
lods
pusha
jmp
inc
mov
or
inc
pop
mov
dec
adc
sub
insl
in
inc
loop
fcmove
lret
push
xchg
xchg
mov
mov
fldl2e
xor
and
and
jge
ds
pop
sub
jl
xchg
in
sub
push
out
aam
inc
data16
cmp
or
xor
xchg
sti
repnz
push
je
pop
pop
gs
fwait
mov
inc
lods
in
stos
movsl
mov
bound
inc
xchg
pop
in
out
fiaddl
adc
in
out
pop
push
xor
out
adc
jmp
and
lods
dec
push
push
adc
pop
mov
lods
or
loop
ss
fnsave
das
inc
xchg
inc
and
outsl
push
or
cmpsb
pop
add
inc
mov
sbb
lea
shll
cs
add
xor
jno
adc
jecxz
xor
mov
in
mov
jmp
inc
dec
cmp
scas
ja
xor
pop
out
pop
lods
insl
shrb
es
enter
mov
jecxz
dec
mov
pop
jne
dec
adc
sbb
push
mov
outsl
int
movsb
add
scas
mov
in
enter
cmp
cmp
cmp
jb
xchg
jne
lock
ljmp
push
pop
cs
cmp
mov
jnp
shll
push
push
push
jo
ret
popf
mov
jmp
sarl
mov
and
das
dec
pop
bndldx
clc
push
imul
fiadds
fisubrl
por
xorps
sub
inc
idivb
jmp
dec
pop
dec
pushf
filds
call
xorl
adc
scas
hlt
or
out
daa
pushf
cmpsb
jno
lods
inc
cli
idivl
dec
mov
leave
push
pop
and
jp
mov
in
jne
xchg
pop
outsl
sbb
sbb
aam
push
xchg
ljmp
sbb
aam
or
in
or
nop
push
jno
packuswb
xor
push
jecxz
cmp
sbb
push
stc
dec
and
sti
lds
insl
in
xchg
inc
cmpsl
mov
xchg
out
push
sub
push
add
popl
lahf
sub
bound
jmp
pop
test
sbb
add
and
mov
or
xor
daa
stos
cld
jno
add
mov
inc
jmp
and
fdivl
divb
xchg
inc
lret
sbb
mov
out
xchg
lret
test
push
loope
push
popa
sbb
pop
sub
xchg
cmpsb
or
sub
and
cmpsb
push
adc
or
and
lcall
push
ljmp
cmp
es
mov
mov
adc
and
cs
test
pop
mov
xor
popl
in
lcall
and
jmp
xchg
xchg
daa
sub
sbb
cwtl
pop
aad
aam
mov
lock
in
roll
jnp
xor
loopne
inc
fwait
int
popa
lcall
xor
loope
ljmp
mov
in
or
mov
incb
cltd
dec
jp
outsl
cmp
dec
loopne
and
std
ret
xor
jns
mov
sbb
fwait
into
mov
cli
test
cs
frstor
jg
pusha
cltd
movsl
insl
mov
nop
jmp
cltd
lret
mov
sub
push
imul
jno
outsl
popa
pusha
aas
test
cmpl
test
jecxz
mov
dec
fwait
ljmp
das
out
es
out
xchg
shlb
mov
in
mov
push
ret
pop
sti
out
xor
addr16
aas
sub
add
xchg
sbb
sti
pushf
movsl
lahf
cmp
test
xor
dec
xor
shll
inc
jmp
or
fimuls
clc
sub
stos
out
push
les
imul
mov
add
xor
adc
adc
fsubl
push
or
faddl
jae
ja
and
adc
mov
lds
mov
mov
xor
fisubl
add
add
iret
sbb
or
into
cs
sub
xchg
stc
cli
in
stos
cmp
mov
je
push
test
je
or
insb
add
imul
ss
int
xlat
push
pop
push
dec
cmp
adc
push
jp
sbb
dec
sbb
das
jmp
xchg
test
sbb
dec
lea
icebp
mov
cmpsb
mov
cmc
popa
jg
push
inc
jne
lahf
lea
and
add
xchg
pop
lock
outsb
mull
imul
pop
in
mov
mov
fcompl
ja
or
mov
nop
pop
ret
pop
push
outsb
xchg
out
pop
in
in
cld
gs
mov
fs
xlat
pop
mov
pop
es
insl
adc
mov
inc
loopne
insb
enter
mull
js
sbb
push
mov
xor
mov
das
add
ret
push
xor
iret
outsl
lods
inc
inc
lods
ret
addb
pushf
mov
dec
rclb
es
cmp
gs
xchg
ljmp
pop
and
mov
pop
xor
and
sbb
xlat
xchg
jo
lret
and
ljmp
push
xor
addr16
jns
mov
mov
sbb
jle
stos
push
pushf
std
rolb
enter
cmp
testb
sub
sbb
andb
push
repz
imul
jge
mov
mov
push
or
mov
shrb
mov
mov
es
inc
sahf
in
into
mov
lret
push
xchg
pop
test
in
movsb
mov
adc
push
out
xor
add
dec
bound
out
mov
inc
cltd
jae
lahf
cmc
test
imul
aaa
sbb
aam
scas
pop
aam
inc
push
sbb
adc
xchg
rorl
xor
push
enter
movl
pop
push
stos
or
jp
jno
cmpsb
mov
sbb
in
xchg
cmovle
mov
xchg
mov
mov
add
push
stos
pop
loop
sbb
test
lahf
popl
jne
loop
pop
lcall
mov
cmpsb
jg
mov
and
mov
push
cmc
and
or
popf
or
mov
arpl
mov
lcall
cltd
add
mov
inc
cltd
ja
xor
in
inc
push
shr
js
add
je
adc
fstpt
jmp
or
fwait
cmp
ret
xor
and
lock
xchg
sub
xchg
fisubs
jno
adc
mov
es
fmul
inc
filds
sarb
stos
inc
dec
mov
into
int3
xchg
ljmp
pop
pop
inc
mov
sbb
sub
xchg
pop
test
cmp
mov
cmp
cmp
push
cmp
xchg
aad
sub
shll
lds
inc
fistps
or
inc
shlb
mov
xchg
sahf
mov
imul
repnz
aas
insl
je
or
dec
je
fstp
enter
imulb
sti
data16
lea
xchg
loopne
mov
mov
es
stos
decb
mov
sbbl
push
push
sub
mov
loop
push
mov
aaa
push
sub
cmc
shrl
cmpl
mov
push
fistpl
push
push
sbb
pop
pop
cmp
lar
inc
jo
xor
pop
and
push
jecxz
mov
pushf
pop
into
call
cmp
xchg
orb
xchg
sub
adc
imul
inc
sub
or
rcrl
cmp
push
sub
cmp
push
clc
ret
jle
les
aam
push
icebp
mov
mov
in
lock
add
xchg
mov
inc
cmpl
js
rcrl
ds
mov
call
mov
and
xlat
dec
inc
cli
fldenv
fnsave
push
push
pushf
je
into
imul
push
jle
mov
jnp
mov
lds
enter
dec
hlt
roll
je
fldcw
xchg
cld
inc
add
add
out
sbb
xchg
sub
jbe
xchg
or
and
sbb
scas
test
and
stos
dec
test
addr16
rorb
lret
lock
jmp
lock
test
push
sti
sbb
mov
insb
sbb
dec
and
repz
xchg
imul
add
icebp
push
mov
mov
fistps
pop
cli
ljmp
add
mov
mov
mov
imul
sarl
cmpb
stc
hlt
xchg
adc
dec
rcrb
inc
xor
jae
stos
scas
test
mov
push
and
jg
je
daa
movsb
fildll
inc
out
xchg
or
pop
pop
push
ds
inc
mov
ret
push
stc
xchg
mov
inc
inc
sbbl
xor
inc
or
mov
dec
mov
inc
mov
scas
aam
shrl
rclb
xchg
mov
xor
add
xchg
xchg
sbb
xor
aam
jle
adc
rclb
cmpsb
pop
mov
xorl
jge
mov
pop
dec
adc
sub
jmp
mov
jno
adc
lcall
aas
push
lret
mov
dec
ja
fstpl
inc
mov
pop
xor
out
xchg
cmp
cmp
in
jae
jl
in
bound
sub
roll
sbb
mov
fwait
jno
pop
imul
cmpl
in
mov
inc
add
add
loop
into
sbbl
mov
mov
popf
cli
cmp
cli
ss
xor
ret
cmpsl
scas
or
xchg
es
push
int3
xchg
dec
jae
test
push
out
lea
stos
push
arpl
add
das
xchg
push
lock
cs
mov
adc
jmp
jno
jbe
aaa
sarl
adc
push
mov
dec
sahf
push
nop
sbb
aas
ljmp
int
jnp
mov
or
sbb
out
dec
and
int
jl
add
mov
lds
mov
scas
pushf
add
or
lds
call
push
aad
fwait
outsb
mov
stos
pop
test
leave
out
and
cmp
push
bound
ljmp
lock
or
jmp
inc
push
cld
clc
ret
or
pop
push
enter
push
fcompl
out
jge
dec
aad
cld
cmp
push
mov
cld
cmp
stc
fisubrl
mov
shrl
jne
cmp
or
test
mov
notb
call
add
pop
pop
mov
cmc
mov
add
adc
jle
sub
mov
or
pusha
xor
sbb
mov
sbb
lods
adc
sbb
pop
xchg
bound
cmp
sub
aaa
pop
dec
inc
outsb
jl
push
out
or
mov
sti
mov
addr16
repz
gs
mov
je
arpl
pop
loop
loop
cmp
es
push
push
sub
js
cltd
and
int
push
cmpsl
push
dec
sub
lret
and
push
dec
fwait
sbb
pop
mov
jae
leave
xchg
inc
aam
mov
fidivrl
lods
mov
in
cld
ljmp
sbb
test
sbb
dec
or
ret
mov
push
hlt
push
jns
pop
sbb
push
and
gs
cmc
xchg
sti
cs
pushf
das
mov
mov
add
add
dec
into
jecxz
sub
or
leave
das
pop
sub
fisubrl
sarb
pop
mov
out
pop
or
add
int3
xor
and
nop
mov
pop
adc
rcr
jmp
ficoml
fmul
xor
dec
mov
cmpsb
fcomps
out
fidivrs
hlt
pop
cmp
xor
mov
fistpll
push
das
dec
nop
imul
lcall
scas
scas
nop
mov
push
pop
aas
repnz
pop
imul
push
mov
fdivrl
bound
mov
js
cmp
cmpl
push
aaa
in
rolb
push
fs
xchg
mov
mov
and
clc
cltd
xlat
test
das
sarb
inc
aas
dec
and
xchg
in
jne
sbb
push
loope
pop
loopne
push
subl
in
sahf
sarb
add
pop
stos
roll
lret
aad
mull
sbb
cs
lock
sbb
cmp
sub
mov
push
mov
or
push
jmp
out
lret
out
fidivs
xlat
mov
xor
mov
int
mov
add
cltd
fistpl
jl
fs
push
int3
adc
imul
int3
lods
mov
inc
rcl
icebp
dec
adc
pop
push
mov
push
shlb
das
sahf
sbbb
mov
scas
hlt
scas
sub
movsb
adc
mov
or
fcomp
jge
test
fsub
lahf
jl
or
push
sub
xlat
and
out
xchg
movsl
bound
jg
aad
inc
rcl
mov
mov
or
pop
xchg
jmp
arpl
lret
cmp
xchg
iret
sub
adc
mov
insl
stos
xor
mov
add
adc
push
fwait
insl
jno
or
hlt
push
push
jmp
mov
dec
mov
jne
ja
mov
pop
push
lds
mov
scas
fmull
or
inc
into
dec
xchg
sub
cltd
xchg
fbld
push
xor
mov
mov
bound
loop
mov
cmp
and
sub
fmuls
ret
xchg
dec
cmp
xchg
cwtl
mov
jle
out
fwait
adc
sub
std
fildl
and
mov
adc
add
and
push
sub
cmpsl
cld
push
arpl
pop
pop
and
and
loopne
aaa
and
push
in
lods
or
out
cmpsl
std
pop
sti
xlat
movsl
lea
mov
ret
xor
dec
leave
js
cmp
cmpsb
out
and
jno
xlat
sahf
ss
stos
cmp
faddp
adcl
jbe
icebp
and
or
sti
cmp
jae
dec
sub
dec
jge
pusha
icebp
xorb
stos
xchg
vmaxsd
xchg
std
iret
insl
mov
or
stc
sub
cld
mov
mov
pop
push
push
xlat
adc
aas
inc
cmp
inc
les
xor
enter
sub
lahf
test
cld
push
and
mov
mov
std
mov
enter
jmp
ss
outsb
mov
dec
push
sub
xor
or
aas
add
push
pushf
lea
in
sbb
add
aam
sub
adc
sbb
pop
fmul
xchg
ret
out
addr16
mov
out
sbb
pop
push
add
cmp
cmp
pop
inc
imul
and
or
das
movsl
mov
pop
cmpl
and
sti
clc
lcall
or
dec
sub
sbb
shl
jne
cmp
pop
repz
int
or
fwait
or
ret
addb
jbe
mov
dec
cltd
mov
stc
sbb
shl
or
xchg
rorb
push
mov
daa
sbbl
idivl
shrl
outsl
les
aas
mov
add
inc
pop
cmp
gs
enter
or
jl
pop
andl
xchg
dec
jmp
adc
and
je
sub
adc
cs
jns
push
je
sbb
cmp
push
push
mov
fadd
in
test
adc
lods
repz
jno
cmp
in
ror
sbb
cld
mov
popa
mov
mov
dec
jge
mov
fildl
jle
add
cmp
in
fisubrl
cmp
add
aas
loope
subb
popf
dec
cwtl
sarl
loope
add
icebp
cld
mov
cmpsl
in
jmp
int
test
sub
inc
int
fwait
fwait
test
incl
pushf
js
cmpsb
fucom
inc
adc
pop
pop
adc
mov
rolb
fsincos
jle
sub
inc
inc
aad
lods
sbb
ss
dec
mov
fisubrl
jns
and
shll
inc
pop
cmp
mov
cltd
outsb
lcall
in
mov
adc
cli
cmpsl
mov
adc
add
cmp
fcompl
add
out
jae
mov
pop
movsl
inc
cmpsl
bound
dec
fsubr
movsb
and
insb
popf
or
jno
xor
push
data16
push
cmp
scas
imul
xchg
push
mov
mov
dec
iret
imul
mov
bnd
xorb
and
inc
mov
shl
je
fsubrp
mov
inc
addr16
add
paddb
add
loop
inc
outsl
fcmovnbe
mov
push
rcrl
les
mov
mov
xor
xchg
gs
pop
jnp
or
mov
ja
jbe
sub
xchg
xchg
inc
addr16
ljmp
inc
test
and
xor
fidivrl
add
mov
mov
shr
and
push
cmpsb
cmp
dec
data16
cwtl
xlat
adc
addl
adc
fidivl
cld
pop
xchg
in
adc
cmp
imul
jnp
dec
push
rcrb
test
cwtl
fisttps
gs
jecxz
ljmp
das
sbb
dec
out
sbb
adc
in
rcrb
outsb
pop
jb
inc
add
jge
push
xchg
mov
stos
hlt
inc
push
fimuls
push
pop
out
jae
xor
add
ds
cmp
cmp
jb
jg
imul
push
and
imul
bound
mov
fisubl
insb
ret
stos
idiv
adc
clc
inc
out
inc
mov
out
iret
fs
sub
mov
jg
mov
mov
sti
and
fld1
sbb
adc
movl
cmc
xor
lret
test
popf
fnsave
hlt
addl
pusha
push
push
sub
inc
fsubrs
and
push
lret
cmp
ljmp
add
dec
inc
adc
lret
shl
notl
lods
mov
mov
andb
mov
jbe
jno
rcr
aam
test
mov
sahf
xchg
hlt
pop
sbbl
stos
mov
lcall
aad
push
cmpsb
pop
and
add
mov
jns
jp
push
test
imul
les
fs
or
or
scas
jg
xchg
xor
je
inc
sbb
pop
jno
inc
aam
outsl
inc
test
data16
mov
dec
js
push
sbb
into
daa
imul
pop
pop
cli
mov
outsl
inc
rcr
fidivl
xchg
cmp
subl
fs
sbb
sbb
cmp
movsb
dec
mov
dec
pop
add
or
add
out
mov
imul
or
outsb
in
sbb
sub
cmp
repz
jb
nop
xchg
pushf
mov
sub
sbb
fwait
jnp
mov
int3
fidivl
leave
loop
movsb
in
addb
ret
pop
stos
pop
jl
pop
or
inc
lds
or
sbb
push
sbb
xor
ret
jno
pop
daa
jno
nop
enter
seta
add
lret
jno
mov
adc
mov
add
ja
push
push
inc
jbe
inc
mov
mov
xor
cmp
repz
sti
mov
cmp
and
cmpsl
dec
movsl
test
inc
mov
addr16
inc
add
dec
mov
fwait
cmc
mov
or
mov
push
fwait
push
mov
dec
or
push
cmp
stos
push
out
push
add
lret
leave
dec
cltd
arpl
mov
dec
mov
pop
jne
adc
xchg
enter
add
pop
cmp
jae
mul
test
aad
fwait
pop
xorl
xlat
insl
jge
lods
mov
and
xor
cmp
jge
cmova
in
fnstenv
arpl
push
and
sbb
ds
xchg
pop
aaa
loop
cltd
testb
shlb
mov
jbe
xchg
in
mov
or
sub
stc
dec
imul
pop
aaa
lcall
lcall
xor
loop,pn
sarb
repz
or
mov
mov
in
frndint
out
call
cmp
loop
xchg
movsl
rclb
ds
adc
insb
out
dec
stos
sbb
ljmp
in
pop
popf
stos
pop
xor
loopne
mov
mov
inc
push
out
jns
das
xchg
adcl
movsl
lret
loop
icebp
rcrb
aad
jg
leave
push
negb
mov
and
repnz
in
jno
sbb
sti
in
jns
lods
cltd
or
cwtl
es
clc
mov
pop
stc
dec
push
mov
mov
das
data16
or
xchg
js
xor
out
xchg
mov
test
fisttpll
or
adc
adc
and
rclb
mov
mov
dec
jle
push
mov
mov
dec
idivb
in
xchg
mov
int3
push
sub
pusha
or
mov
fs
xchg
inc
add
sbbl
mov
jle
gs
adcb
pop
pop
lock
jno
hlt
cmp
lods
and
sub
xchg
addr16
and
out
mov
popf
xchg
push
add
call
sti
stos
jnp
xchg
js
xchg
jp
jle
xor
movsb
scas
push
rclb
mov
jnp
adc
pop
pop
jmp
ljmp
repz
cmp
mov
and
iret
xchg
mov
or
jb
mull
xor
add
xor
daa
cmp
push
adc
ja
out
ds
cmp
int3
mov
cmpsb
add
add
and
cmp
lock
adc
mov
movsl
arpl
adc
out
push
or
lret
stos
js
lret
out
cmp
adc
insb
adc
push
cwtl
stc
enter
sub
sarl
xor
mov
fldenv
idiv
mov
sub
pushf
dec
sti
sarb
addr16
test
pop
cmp
out
sub
repz
pop
lods
push
mov
cmp
adc
push
pop
and
divl
nop
lcall
jecxz
xchg
mov
xchg
pusha
add
mov
pop
pop
and
push
push
xchg
pop
scas
push
in
and
scas
and
xchg
pushf
repnz
adc
mov
xchg
cmp
lret
sbb
jns
mull
roll
subb
or
into
adc
aas
mov
sub
pop
sti
jae
jle
andb
add
testl
hlt
pop
jmp
sarl
int
js
iret
cwtl
mov
int3
sub
imul
sub
push
mov
dec
movsl
push
xchg
rcl
aas
cmp
fidivl
pop
rorl
repnz
cmp
jl
mov
xor
mov
pop
repz
incl
sbb
sub
mov
imull
push
shl
fs
std
adc
enter
jb
mov
adc
ja
enter
mov
mov
adc
and
jl
imul
sbbb
xlat
mov
enter
sti
movsl
inc
jp
into
loope
pop
lea
stc
insb
and
pop
fs
movb
in
sbb
pop
push
xchg
xchg
iret
addb
fstps
std
decl
shrl
mov
dec
stos
xchg
movsb
sarl
lret
test
cmpsl
inc
sbb
leave
push
stos
or
psubusw
sbb
cmp
rcrb
lock
dec
jb
insb
clts
or
movsb
xchg
into
and
dec
mov
xchg
rcll
adc
push
nop
jae
dec
out
mov
mov
insl
pop
xchg
test
and
xor
cltd
push
outsl
stc
jecxz
fucom
and
sub
jb
and
das
add
push
xlat
xor
xchg
push
mov
lahf
pushaw
pop
xchg
pusha
adc
jnp
cltd
add
or
pop
ljmp
fnstenv
inc
mov
inc
add
loope
push
sbb
js
mov
ret
ds
pop
jae
orl
fwait
cwtl
cmc
or
out
cmp
decb
xchg
pop
cmpsb
pop
mov
stos
arpl
cmp
out
movsl
fsub
pop
jno
xchg
pop
insb
js
fldl
xchg
inc
inc
movsl
jecxz
daa
out
dec
je
sub
cmp
inc
sbb
test
cmp
adc
mov
push
or
andb
jae
adc
xchg
xor
push
cmc
cmpsb
mov
cmp
fildl
test
pop
stc
or
int3
mov
inc
mul
das
xchg
push
mov
push
orl
js
ja
jb
mov
pop
jb
mov
jmp
sbb
add
test
jbe
dec
push
mull
xchg
pop
lods
push
mov
in
dec
cmp
xchg
pop
mov
div
mov
jnp
mov
add
push
imul
mov
dec
insb
out
insl
pop
mov
lret
int3
test
xor
out
cmp
jp
movl
or
adc
ja
ljmp
daa
jns
inc
arpl
pop
jle
jnp
hlt
jbe
pop
scas
call
xchg
cmpsl
or
pop
je
xchg
les
add
or
push
jne
in
in
divb
xchg
int
pop
jnp
aam
cmp
addr16
iret
scas
jmp
push
js
dec
or
push
imul
js
fucomip
pop
cmp
into
dec
pop
stos
sbb
mov
out
push
movsl
insl
lcall
lret
jae
jb
and
rcl
out
cmpsb
sbbl
cmp
ret
ret
iret
loopne
out
scas
push
cmovno
sub
mov
mov
adc
mov
js
aad
data16
mov
sub
sahf
sbb
mov
mov
mov
lret
cmpsl
xchg
sub
jne
test
or
cld
pop
shll
ds
add
or
inc
aam
pop
int3
and
mov
inc
test
addr16
or
pop
rcrl
int
imul
sub
inc
jns
inc
or
cld
call
jp
mov
push
int
xchg
loop
ljmp
sbb
call
out
fmulp
xchg
test
push
andl
add
mov
fwait
cmpsb
fs
jp
imul
pop
pusha
pop
repz
jecxz
add
fsubrl
cmp
into
inc
repnz
test
push
mov
divb
mov
mov
loope
lock
dec
fnstcw
sub
pop
fsts
mov
lock
lock
fildll
or
push
jg
pop
les
and
cmp
jne
decb
mov
shrb
pop
fnstcw
mov
imul
push
subl
lcall
loopne
jg
mov
and
push
aaa
inc
arpl
mov
sbb
fistl
cmp
jge
ffreep
mov
int3
fsubs
popa
insl
call
fsubrs
push
cld
mov
cmpsb
and
push
inc
fcoms
aad
push
or
ss
outsb
out
xor
shrl
scas
xchg
inc
pushf
xorb
xor
push
dec
pop
das
push
movsl
inc
pop
rolb
ret
pop
dec
lret
les
push
xor
pusha
adc
pushf
divb
lret
pop
in
adc
dec
jne
xchg
xor
jo
mov
repnz
fisttps
sti
xchg
xchg
test
popa
add
data16
ret
jg
les
adc
mov
cmp
loop
xchg
sar
into
dec
js
outsl
cmpsb
loopne
push
lahf
add
imul
xchg
xor
jns
inc
inc
dec
subb
lea
jp
xor
jg,pt
stos
or
xor
mov
unpcklps
daa
bound
sub
test
add
cmc
xor
test
cs
adc
xor
popf
fiadds
cmp
fidivrs
add
movsb
arpl
lret
xchg
into
ljmp
bound
push
push
push
mov
cmp
loop
repnz
dec
add
jb
xor
hlt
sahf
shl
jmp
sarb
fnstsw
or
es
fwait
decl
stos
sub
xchg
sahf
dec
jne
fs
test
mov
xchg
pusha
jp
lds
iret
push
pushf
mov
popf
daa
inc
or
xor
int
movsb
cli
clc
ja
imul
aas
cmp
out
or
jmp
mov
mov
adc
inc
adc
adc
insl
test
popa
push
xor
pushf
movsb
fs
in
mov
xor
add
sar
aad
in
jmp
imul
sahf
aad
icebp
into
pop
jo
out
out
iret
xchg
fcoms
xchg
ret
pop
mov
fistpll
int
pop
sbb
jecxz
mov
or
lods
jmp
pop
sahf
rcll
test
jns
jnp
pop
or
jnp
mov
cli
and
loope
clc
and
sbb
imul
sbb
rorl
pop
push
lret
imul
mov
rcrb
loopne
sub
cmp
int3
scas
out
push
mov
test
mov
xor
es
insl
push
pop
mov
or
pop
cmp
mov
xor
add
pop
outsl
push
dec
add
mov
in
insb
das
daa
lea
cmp
adc
das
and
mov
push
fstps
jge
mov
add
add
mov
mov
or
mov
fs
loopne
xlat
lds
pop
push
pop
adc
xor
loopne
jo
add
push
leave
sarl
iret
cmp
mov
mov
aas
ss
cmp
clc
push
pop
fcomps
jl
push
adc
insl
leave
call
cmp
aam
getsec
test
mov
push
cmp
icebp
popf
pop
mov
lcall
scas
inc
lods
push
mov
cwtl
mov
xor
pop
and
xor
dec
jl
fistpll
fsubrl
or
das
ret
call
cmp
cmpsl
and
pop
test
jmp
sub
xor
imul
js
je
cmp
cmpsl
xchg
cmp
mov
add
or
and
lahf
inc
jp
xor
jecxz
lods
fisubrl
negl
xlat
mov
pop
xchg
aaa
incb
fwait
cmpsl
mov
inc
aam
cs
mov
leave
cltd
fwait
push
push
js
insl
dec
pop
data16
add
lea
fsubl
xor
aad
loope
inc
jb
and
push
sub
bound
fs
sub
and
ja
loope
addr16
inc
fisubl
and
push
xchg
pop
xor
mov
cmpsb
lds
mov
ljmp
lcall
adc
stc
mov
pop
xor
pop
out
push
sbb
adc
cmp
push
xor
push
std
fnstenv
push
stos
test
fldenv
arpl
push
xor
notl
jle
xchg
daa
mov
mov
mov
inc
mov
cmp
cwtl
and
testb
add
js
mov
pop
pushf
cmp
fcoml
int3
add
cmp
insb
lret
xlat
sbb
add
mov
jecxz
lea
into
sarb
xor
jge
and
push
and
out
push
push
or
inc
leave
outsl
push
in
mov
lret
sbb
and
nop
dec
sti
js
mov
imul
inc
pop
sbb
in
dec
dec
and
pop
mov
sub
es
jp
jge
ljmp
in
mov
adc
xor
cmc
ret
mov
lock
imul
addb
test
push
cmp
add
mov
dec
je
ret
cmp
movsb
ja
pop
loopne
mov
mov
mov
sub
push
enter
in
push
sbb
aaa
test
mov
jl
lret
cld
lahf
nop
mov
lds
lcall
aad
rcrl
mov
imul
pushf
das
mov
mov
lret
cmp
scas
ficompl
push
inc
pop
pop
jle
dec
add
cmpsl
sub
sahf
pop
aad
stos
xor
mov
inc
out
stc
ffree
push
xchg
divl
sbb
orl
or
and
cmp
nopl
outsl
xchg
mov
lock
push
pop
xchg
int3
int
inc
dec
mov
fs
jecxz
dec
lea
push
and
xchg
xorl
rorl
jae
idivl
sbb
xchg
jo
mov
jp
jno
gs
mov
inc
imul
daa
cld
lret
adc
sarl
inc
loop
pop
jg
or
into
adc
movsb
and
mov
lods
jmp
fwait
push
xchg
out
and
neg
mov
mov
outsl
sub
stc
lret
xor
pop
rolb
stos
aaa
dec
shlb
xor
push
stos
popa
cmp
cltd
push
adc
insl
arpl
jp
inc
sub
pop
sbb
wbinvd
push
icebp
sbb
cmpsb
out
adc
test
fstl
mov
xchg
popw
cmp
push
jo,pn
push
lret
loope
or
test
test
mov
test
arpl
xchg
sub
mov
fwait
jno
aas
fsts
push
pop
add
mov
adcb
inc
mov
push
push
pop
dec
or
les
add
ret
inc
sbb
jns
xor
ja
scas
add
dec
adc
push
mov
pop
lret
out
mov
sbb
fcmovne
add
jns
jmp
mov
je
cmp
mov
in
icebp
daa
adc
mov
fstpl
inc
pop
dec
push
stos
jb
xor
push
xor
aad
jmp
ret
loopne
cmp
and
decb
push
push
adc
aad
ss
pop
int3
cmp
in
imul
pop
push
or
test
int
inc
mov
data16
mov
data16
testl
or
dec
inc
or
cli
add
xchg
and
ss
insb
cmp
fdivl
mov
push
ds
out
pop
cs
in
or
test
xor
cli
dec
int
cwtl
xlat
popa
je
mov
into
and
in
pop
sub
pushf
push
mov
rorb
sbb
mov
shlb
clc
push
ljmp
mov
mov
xor
push
loop
cmp
dec
notb
bound
sub
mov
xor
or
jecxz
and
addr16
cmp
cmpsl
and
dec
dec
and
sbb
das
fnsave
mov
sub
ficomps
testb
hlt
sub
sbb
mov
push
outsb
add
cmp
xor
not
les
imul
aas
push
inc
sub
mov
pushf
cmp
mov
lods
jbe
dec
inc
mov
sub
fnstenv
lahf
sbb
pop
and
and
addl
and
pop
mov
mov
cld
ljmp
jne
push
lods
icebp
xchg
push
pop
dec
xchg
incb
mov
iret
pop
push
jge
pop
jecxz
scas
in
mov
mov
pushf
or
add
movsb
mov
lods
adcb
dec
jnp
repnz
ficompl
dec
jmp
shr
in
call
jl
jae
inc
jmp
mov
inc
int
cmpsl
xchg
xor
jl
xchg
outsb
scas
mov
cmc
xor
nop
cmc
xor
cmp
cltd
push
out
inc
fdecstp
into
arpl
adc
mov
fmuls
sub
dec
mov
iret
inc
push
insl
rolb
push
sbb
push
and
lea
pop
xchg
aam
add
mov
xor
lods
sbb
fdivrl
mov
dec
stc
cmp
les
lret
cs
dec
mov
pop
mov
jns
jl
int
loope
mov
iret
jmp
push
pop
loop
imul
pop
inc
sub
test
scas
popa
cli
in
mov
mov
add
adc
sub
cmp
test
or
sub
or
or
mov
mov
cld
into
adcb
ret
pushf
fisttpll
fistps
mov
int3
mov
add
int3
aas
mov
fists
xchg
rorb
in
cmp
cmp
cltd
mov
xor
in
out
inc
xchg
dec
outsb
add
pop
arpl
jns
out
setbe
imul
dec
mov
into
ljmp
test
cmp
stos
imul
fsts
push
mov
icebp
dec
push
fnsave
xchg
ds
mov
jge
mov
xchg
loop
adc
hlt
in
shlb
add
imul
dec
movsb
push
cmpsl
int3
in
repz
lahf
mov
pop
cmp
out
lcall
stos
fcmovnb
mov
pop
insb
jecxz
jo
inc
jae
dec
inc
cmpsb
xchg
pop
aam
mov
pushf
int3
cmp
addr16
add
std
mov
test
push
cmp
shll
out
xchg
clc
mov
rcrb
insl
jne
inc
stc
dec
dec
js
cmp
inc
out
stos
lods
xlat
loope
ja
dec
ret
std
in
std
iret
and
aaa
aas
int3
fs
xchg
je
jmp
insl
sub
stos
pop
xor
mov
test
outsb
push
outsl
sbb
addr16
push
dec
repz
inc
jmp
push
cmp
addl
mov
xchg
mov
xor
fdivrs
mov
lahf
stos
sub
xor
popl
loop
add
sti
idiv
fcomp
or
nop
lock
dec
repz
inc
xchg
xchg
dec
sub
pop
lret
and
dec
mov
loope
jnp
cs
je
js
scas
cmpsl
push
dec
gs
mov
mov
inc
add
jp
mov
jl
inc
and
cli
aam
cmpsl
out
push
pop
stos
fbld
ja
add
cltd
fsts
fwait
shlb
push
pop
pop
outsb
int3
pop
ss
cmpsl
sbb
push
push
rolb
psrlq
xchg
scas
loope
ret
fistpll
push
or
hlt
xor
cs
sub
fisubrl
std
cli
mov
lahf
in
cltd
not
or
and
mov
jb
sbb
test
lahf
hlt
gs
lods
jo
test
icebp
sub
sbb
pop
jp
imul
xchg
movsl
sbb
pop
mov
pop
ficompl
mov
faddl
and
mov
mov
jae
jle
out
imul
in
movb
ds
or
shl
cmp
push
cld
mov
xor
pop
jle
sbb
sbb
in
jl
xor
movsl
insb
sar
cmp
mov
sarb
shlb
cmp
aam
dec
jp
stos
push
jg
pop
jbe
push
pusha
mov
inc
test
outsl
jecxz
mov
add
mov
movsb
and
cmc
into
out
out
mov
or
iret
cli
stos
aaa
data16
jecxz
mov
cwtl
daa
xchg
adc
lock
and
sti
arpl
mov
stos
lods
jae
sbb
aaa
int
aad
mov
fisubs
xor
xor
icebp
shr
mov
lods
and
clc
stos
scas
sbb
sbb
fmul
dec
mul
sub
xlat
data16
cwtl
push
ljmp
js
sbbb
jb
icebp
jg
in
push
mov
cmp
aas
jmp
fs
cmpsl
xchg
fmul
jp
test
in
adc
icebp
outsb
pop
or
lock
mov
add
push
das
imul
push
pop
or
fstl
jb
scas
jo
jl
jmp
or
or
negb
sbbl
movsl
jl
inc
mov
pop
jge
daa
cld
rolb
adcb
xchg
adc
adc
negl
and
daa
notl
add
cwtl
jle
lret
jmp
ds
notl
mov
rorb
cmp
out
mov
inc
adc
iret
movsl
jl
cmp
repz
addl
xchg
xor
add
bound
lock
and
lret
lahf
xchg
cmpl
push
js
test
cli
lret
fadds
dec
jb
hlt
icebp
xchg
fbld
sbb
mov
int3
pop
sti
jp
cmp
test
aad
lret
push
inc
lret
pop
jnp
insb
xor
push
test
mov
rorl
mov
sub
fidivs
mov
fidivl
push
mov
in
jno
lret
mov
add
andb
leave
push
xor
sbb
sub
aam
xchg
xor
rorb
hlt
adc
and
add
loope
mov
adc
fsubrl
cmp
test
inc
mov
iret
pop
pop
je
fwait
sbb
dec
and
cmp
repz
add
sbb
cmpsb
das
out
inc
sub
pop
jg
mov
or
pop
movsl
cmp
mov
fisttpll
or
add
clc
cli
fsubl
daa
xor
pop
lahf
rclb
jb
fnsave
pop
insb
add
ds
adc
inc
cld
xor
mov
sbb
loopne
mov
out
fsubl
mov
in
mov
mov
mov
fimull
jp
push
rcll
xchg
icebp
popa
mov
mov
fsubrl
nop
add
and
jae
jno
cmp
xchg
pushf
mov
bound
test
dec
jl
hlt
popf
mov
call
insl
cltd
shl
out
push
mov
jae
push
arpl
fisttps
inc
mov
sbb
stos
movsb
dec
cmp
loop
push
aaa
or
and
xor
dec
mov
stos
jecxz
in
fsubrl
out
std
mov
sub
push
rol
bound
std
or
mov
sub
add
mov
fdivs
js
mov
std
out
ss
into
or
inc
jecxz
jbe
stc
jecxz
or
dec
call
in
or
fldl
dec
into
add
insb
cs
jg
pop
fldcw
xchg
out
sbb
popf
add
loopne
pop
loope
sub
xor
bound
incl
xor
or
dec
adc
add
ja
or
inc
das
stos
sub
test
rclb
rolb
fs
popf
and
push
push
fs
call
mov
std
cmp
inc
ficomps
aas
sub
push
sbb
into
sbb
sbb
fs
jb
xchg
stos
call
icebp
jne
cmc
push
popf
outsb
incl
mov
cld
clc
xor
outsb
sbb
stos
int3
inc
cmpl
mov
add
xchg
inc
addr16
xorb
adc
js
lods
jmp
add
lret
daa
fdivrs
cltd
xchg
or
cmpsb
in
lret
les
fstpt
lret
adc
ret
orps
out
mov
popf
cmp
aam
bound
std
aaa
mov
push
fbld
addb
xchg
mov
mov
inc
or
adc
loopne
push
insl
jmp
std
stc
inc
bound
xor
movsl
and
fidivl
pop
xor
adc
mov
mov
push
pop
das
fs
js
mov
xchg
add
cld
push
pop
test
cwtl
inc
lds
mov
jns
mov
enter
in
xor
mov
pusha
inc
inc
jp
dec
sbb
mov
ja
xchg
adcb
pop
or
xcrypt-cbc
cmpsl
rol
out
mov
jb
push
add
push
out
inc
movsb
jb
fstps
xchg
hlt
mov
mov
mov
test
sbb
adc
mov
packuswb
mov
jo
push
pop
cmp
mov
mov
hlt
jns
push
mov
pop
xchg
scas
inc
xor
dec
cmc
push
xchg
daa
sub
xchg
inc
out
pusha
psllw
iret
nopl
mov
je
adc
push
hlt
stos
movsb
adc
xchg
push
loope
fs
shrb
adc
shll
fisubrs
push
call
fcmovne
cmp
bound
negl
push
mov
ret
fstpl
popa
jmp
cmp
out
lds
xor
xchg
push
mov
xor
jnp
mov
mov
jmp
les
xlat
pop
idivl
and
mov
call
outsl
stc
mulb
leave
fstpt
data16
test
fstps
adc
push
pop
mov
cld
mov
lcall
dec
mov
dec
mov
movsb
push
imulb
mov
jge
cmp
jg
gs
cmp
icebp
push
xchg
mov
dec
dec
add
dec
inc
mov
out
mov
ret
xchg
mov
jnp
icebp
push
mov
jl
fwait
cmp
mov
fwait
je
sub
sbb
xor
mov
xchg
add
xchg
fdivl
idivl
sbb
ja
dec
jge
addb
clc
ss
es
push
push
xchg
jecxz
or
les
lds
cmp
das
enter
xor
scas
pop
js
adc
mov
icebp
aad
in
dec
jb
fstl
cli
gs
jnp
in
cmp
mov
mov
in
jno
push
lock
arpl
pop
mov
imulb
xor
add
adc
mov
jmpw
inc
mov
cltd
pop
xor
cwtl
push
cmc
lock
shlb
dec
orl
loope
cmp
and
loopne
out
mov
jl
lock
sbb
and
pop
inc
addr16
in
adc
std
out
fwait
add
mov
lret
or
xchg
xchg
or
pop
lret
add
sbb
loop
add
aaa
inc
subl
addr16
cli
leave
dec
repz
mul
mov
imull
pop
ljmp
aas
push
addl
out
mov
int3
xor
mov
lcall
scas
sbb
lods
movb
pop
and
in
mov
sub
xor
and
and
loop
cmp
mov
jmp
popf
cmpsb
pop
fmull
cwtl
add
jb
dec
popa
mov
pop
dec
sub
movsl
xchg
pop
popf
inc
shrl
sub
mov
shrl
jl
pusha
sub
je
dec
jp
xchg
dec
jo
or
int
xor
mov
std
pop
xchg
outsb
add
push
lock
pop
mov
mov
movsl
push
xchg
push
pop
nop
xchg
add
test
insb
add
mov
int3
movsl
cmpsl
stos
push
arpl
jmp
out
or
lds
jno
pop
stc
sbb
stos
shr
jo
adc
hlt
jne
out
popf
rcr
lods
sub
sub
jecxz
arpl
xchg
orb
test
or
add
jg
movsl
sti
test
inc
lea
cltd
dec
dec
shlb
inc
ret
test
jne
jge
sbb
popa
jmp
xor
mov
mov
je
xchg
insb
add
push
mov
sahf
mov
or
out
cltd
adc
mulb
push
dec
dec
ljmp
sahf
cmp
std
test
dec
pop
test
push
ret
jmp
pop
cld
add
dec
and
pop
pop
inc
popf
ja
mov
adc
push
nop
cmp
fmull
push
adc
cmp
or
cmp
xor
aam
shll
adc
lahf
bound
mov
lods
mov
pop
pop
je
xor
add
or
fcompl
and
mov
andl
out
xorl
ffreep
imul
jle
lret
fsubrp
mov
shlb
or
out
ss
addr16
cmpsb
mov
pop
and
daa
cmp
jae
movsl
jg
mov
andl
push
jl
fisttpl
xchg
and
jmp
push
fbld
push
sbb
xor
adc
shrl
ds
jmp
push
jns
cmpl
stc
rclb
sub
add
pop
sbb
nop
mov
pop
dec
sbb
aas
adc
mov
cmc
loopne
sub
mov
fmull
cmp
in
cmp
and
or
imul
popf
push
sahf
into
int3
mov
in
outsl
adc
lea
or
sbb
jno
mov
xchg
xorb
add
ret
nop
xor
mov
cmpsb
ret
mov
sbb
inc
imul
mov
loopne
daa
push
push
repnz
xchg
xchg
inc
in
mov
mov
add
jbe
jp
mov
ja
arpl
ljmp
adc
and
int
lods
out
aas
push
iret
mov
xchg
popf
mov
stos
call
pop
push
jns
stos
rorl
lods
xchg
dec
aad
loop
adc
mov
jge
mov
sbb
jae
xchg
sub
sti
scas
aam
xchg
aas
pop
mov
mov
call
iret
ss
mov
mov
mov
mov
jb
jle
sbb
rolb
popa
dec
pop
cmp
fisttps
xor
sub
mov
test
out
loop
jb
jmp
jo
mov
je,pt
cmp
sub
popa
or
jns
or
dec
subl
cmp
sub
addr16
or
cli
aaa
roll
movsb
or
pop
or
dec
sub
int3
adc
and
jmp
xchg
pusha
je
in
inc
es
push
inc
aam
cmp
jle
ds
mov
rcrl
not
pop
inc
inc
pop
dec
cmc
jp
and
in
cmp
push
dec
add
aad
imul
addr16
push
jbe
ja
jmp
xrelease
or
push
nop
dec
lods
int
adc
add
or
data16
out
sahf
dec
pop
mov
mov
xchg
icebp
ja
push
mov
xlat
cmc
adc
movsb
or
out
xchg
outsl
add
pop
pusha
add
mov
or
dec
mov
sub
sbb
mov
mov
adc
test
stos
sbb
cmp
adc
js
out
or
push
sub
xlat
inc
push
cmpb
xchg
scas
and
out
outsb
hlt
lea
jne
lods
inc
ret
xor
test
xchg
push
insl
aas
ja
aaa
add
fisttpl
psubusw
pop
ljmp
out
cwtl
mov
adc
push
leave
mov
dec
push
out
hlt
sub
pop
pusha
adc
rol
into
pop
pop
pushl
push
adc
cmpl
push
mov
sub
idivl
repnz
or
movsl
shl
ja
movsl
repz
sbb
cmpl
mov
popa
bound
jne
sti
shl
test
and
sbb
dec
in
out
cmc
int
pop
mov
adc
ds
je
fadd
cld
jle
sub
scas
movsb
inc
pop
or
inc
or
pop
cmpsb
iret
xchg
cmp
push
scas
fwait
add
popa
insb
mov
popaw
push
xchg
addl
mov
das
push
jmp
or
loop
jge
sbb
push
sti
jp
ljmp
outsl
js
push
xchg
or
pop
dec
pop
xchg
or
xchg
push
push
cwtl
outsl
icebp
push
mov
arpl
pushf
push
cli
aaa
jns
xor
js
data16
sbb
xlat
shll
into
sub
cmp
xor
push
jnp
mov
inc
sbb
enter
add
mov
push
dec
mov
das
ja
aam
insb
addr16
cli
lock
imul
dec
sub
jo
les
or
mov
jns
or
mov
ss
shlb
push
and
sub
mov
stos
rclb
decl
mov
mov
inc
pusha
adc
sbb
out
add
cmpsb
xchg
js
jge
jl
jge
mov
mov
xor
mov
add
push
xor
es
sbb
xchg
sbb
stos
lods
or
push
add
popf
and
pop
mov
ljmp
mov
sub
aas
pop
fidivrl
int
sub
in
push
out
ret
loopne
mov
push
pop
inc
adcl
enter
lcall
sbb
inc
mov
and
cs
enter
daa
sti
sbb
lods
sub
jns
mov
das
lcall
dec
sbb
adc
sahf
mov
iret
and
clc
cmp
add
cmp
inc
or
fsubrs
repnz
rcrb
icebp
pop
jne
cmp
call
push
push
mov
push
pop
jmp
cli
and
cmp
outsb
repz
pop
push
les
out
mov
in
inc
inc
pop
jmp
inc
ljmp
lock
imul
adc
jae
cltd
pop
outsb
fwait
test
lret
repnz
enter
or
mov
dec
jne
mov
mov
push
xor
js
jecxz
cmp
mov
inc
shlb
sub
out
adc
fisubrs
jle
jo
jle
xchg
mov
add
inc
lret
mov
add
jecxz
xchg
and
iret
and
mov
mov
clc
fcoml
xor
movsb
xor
outsl
inc
jge
test
and
arpl
nop
sbb
divb
aad
pop
popf
xchg
movsl
roll
xor
das
js
dec
adc
dec
popf
xor
mov
aam
mov
xchg
arpl
mov
inc
sub
fs
dec
push
scas
and
icebp
popf
jb
mov
sub
mov
cmp
jp
dec
icebp
jno
pop
hlt
leave
cmp
add
inc
ret
cmp
test
into
jp
push
and
jmp
fisubl
xchg
scas
mov
mov
in
add
and
xor
inc
outsb
inc
push
cmp
lcall
out
xchg
fdivl
icebp
cmpsb
sbb
jnp
ljmp
jbe
subb
dec
data16
jb
aas
cmp
das
adc
cwtl
cmp
or
std
loop
push
lahf
sub
inc
into
add
xor
adc
adc
lea
callw
scas
loopne
jl
iret
xor
cld
les
push
stos
movl
cmp
xchg
cmc
inc
into
xchg
adc
psubq
mov
cmp
or
inc
imul
sbb
xor
sub
bound
or
sbb
rcrb
out
push
ljmp
sbb
sub
sub
sub
nop
test
inc
sub
pop
jle
dec
repz
add
adc
mov
loopne
pop
sbbl
test
movsl
jae
jb
sbb
sub
repnz
sarl
pop
icebp
rorl
sbb
push
mov
add
loope
int
xchg
fistl
arpl
daa
ret
mov
sahf
movsl
stos
sbb
adc
add
add
mov
jl
ret
mov
data16
out
in
inc
mov
or
add
pop
test
divl
fmuls
and
and
sub
or
mov
adc
test
out
sbb
mov
insb
sahf
hlt
xor
jb
jp
rclb
daa
es
sarb
into
mov
xor
jb
add
ret
ret
sub
dec
pushf
filds
aam
add
inc
pushf
into
and
lret
xor
sub
mov
sbb
sub
stos
mov
or
test
sub
add
inc
rolb
mov
mov
xor
sbb
loop
nop
sub
int
dec
lods
add
pop
lds
out
ret
rol
popa
lahf
flds
les
xchg
lock
jle
test
xor
sub
push
lods
gs
call
loopne
lods
rolb
rorl
and
clc
jno
out
mov
repz
add
push
loopne
mov
add
lock
addr16
or
rorb
iret
test
gs
xchg
adc
cmp
lds
jl
dec
add
xchg
xlat
lods
inc
loope
mov
cmp
scas
into
fwait
movsb
cwtl
hlt
inc
sub
cli
inc
sbb
and
repz
add
lahf
les
jecxz
or
aas
scas
add
aad
in
mov
mov
and
lahf
pushf
jg
mov
movsl
addr16
lds
mov
test
mov
jle
jae
lock
lods
lods
data16
add
mov
icebp
mov
clc
push
pop
fs
lahf
mov
repnz
xchg
fdivrl
pop
mov
fs
xchg
inc
dec
popa
push
into
loopne
pop
jns
movsl
pop
xchg
mov
movsb
inc
fwait
stc
jae
mov
inc
in
mov
dec
dec
mov
mov
pop
int
or
xor
sub
mov
mov
sahf
imul
cmpsl
data16
or
xor
test
lea
pop
pop
aas
imul
cmc
mov
xchg
adc
fnstsw
call
jnp
mov
push
imul
loopne
sub
pop
rol
mulb
push
stos
ret
cmp
lahf
xor
repz
cli
or
data16
shll
pop
dec
in
push
sub
scas
ret
lds
sub
loopne
inc
mov
stc
call
adc
fstpl
sbb
addl
faddl
lahf
cmp
jae
popf
insl
mov
xchg
cmpsb
push
mov
sahf
xchg
mov
jo
and
pop
mov
cmp
cmpl
sbb
mov
pop
scas
mov
push
push
jns
and
adc
sub
scas
call
or
push
jne
sbb
loope
push
popa
pop
testb
add
mov
inc
xor
jnp
lds
in
sbb
rcl
int3
and
in
inc
push
xor
mov
lret
ss
fistps
arpl
jle
fwait
stos
inc
hlt
aad
sbb
push
data16
pop
adc
gs
leave
dec
push
nop
int3
jnp
fwait
or
jb
rclb
rorb
lret
cs
sub
dec
adc
leave
add
mov
dec
int3
xchg
lea
loopne
loopne
dec
lods
mov
lock
popa
and
mov
dec
and
int
inc
cpuid
pop
inc
cmpsl
xor
push
imul
inc
rcrb
adc
dec
mov
xor
add
mov
push
leave
cli
cmp
or
out
push
or
sub
sti
sbb
cli
sbb
mov
addb
orb
sbb
int
jl
daa
shlb
xchg
add
xchg
scas
jo
shlb
jns
lret
cmpsl
shl
das
gs
mov
ret
jo
je
cmpsb
push
incb
mov
sub
jge
shll
sub
inc
jp
fisubrs
mov
mov
pop
push
jae
and
sbb
movsl
mov
rol
inc
push
lret
nop
js
jno
daa
ret
add
iret
lahf
fs
pop
mov
cmpsb
jne
or
cmc
xchg
insl
xchg
stos
push
scas
stos
mov
mull
jmp
sub
daa
jle
xchg
ret
lds
in
inc
arpl
xor
imul
pop
aas
push
js
push
call
pop
and
shlb
and
push
sbb
xchg
and
cmp
lock
fnstsw
shrb
hlt
push
jbe
testb
add
inc
popa
pop
faddl
push
xchg
xchg
dec
mov
and
test
scas
xor
movsl
jge
mov
nop
jo
inc
cmp
stos
push
gs
mov
sbb
pop
mov
outsb
scas
orb
sub
inc
dec
faddp
popa
pop
xchg
out
pushf
xor
xor
sahf
jns
js
lea
inc
lods
repz
daa
fwait
pop
loopne
out
sbb
aas
push
outsb
cltd
xor
fs
insb
sbb
loope
repz
xchg
cmp
adc
push
imul
cmpsl
loop
and
enter
pop
mov
lcall
call
sub
mov
popa
xchg
mov
mov
xchg
shrb
mov
shlb
mov
cmp
mov
inc
test
xor
cld
cld
adc
insl
jne
add
lock
fwait
jl
mov
cmc
sahf
cmp
fs
out
ret
movl
rcll
mov
jo
mov
fs
inc
js
or
inc
dec
jno
jno
jae
jmp
jl
repnz
shl
mov
jbe
xor
lds
xchg
dec
sub
mov
insl
out
or
push
ljmp
cmpsb
incl
push
ja
cmp
xchg
cmc
xchg
je
mov
and
popf
and
xchg
mov
xlat
push
cmc
mov
in
push
aam
adc
sahf
mov
imul
int
je
jnp
in
loope
sub
xchg
ds
scas
jo
jae
imul
lods
in
lods
outsl
and
add
pop
pop
scas
in
and
loope
xchg
jae
dec
repz
mov
cmpsb
xchg
clc
add
ret
lds
jg
loope
repz
out
push
scas
pop
xchg
sar
sub
cmpsb
or
jp
adc
dec
pop
push
jns
fcompl
and
and
fbstp
adc
adc
dec
out
adc
insl
add
or
xchg
aam
pop
jg
test
and
mov
pushf
mov
fs
push
shrl
mov
mov
fmuls
mul
mov
notb
enter
adc
mov
fwait
lahf
stos
scas
mov
and
mov
mov
scas
xchg
pop
lock
inc
fstpt
mov
int3
jnp
stos
repz
jo
stos
stc
add
push
xor
cli
push
adc
cmp
insl
mov
clc
push
xchg
xchg
ret
jno
adc
pop
gs
mov
lea
fincstp
negl
xor
pop
sub
aaa
inc
and
lret
test
shlb
insl
jmp
sbb
aas
sbb
pusha
mov
enter
jns
mov
pushf
pop
push
push
push
sub
xorb
xchg
xor
std
lods
push
mov
fsubl
hlt
scas
cmc
enter
dec
jo
es
mov
mov
mov
and
in
or
dec
xor
shlb
mov
call
adc
ja
and
lds
orb
mov
test
ficompl
dec
sub
ret
clc
iret
in
loope
add
pop
dec
int3
jb
js
fisubl
test
jge
xchg
cmp
sti
pop
xor
repnz
aad
lods
lret
jbe
add
lahf
mov
lods
mov
xchg
pop
insl
sub
xor
mov
xchg
rol
jecxz
or
dec
and
js
push
icebp
pusha
lock
or
inc
mov
out
pop
lock
push
cmp
mov
shr
repnz
xor
pop
jbe
movb
sbb
dec
faddp
outsb
lods
loop
jns
pop
hlt
xor
mov
xchg
inc
xchg
inc
cld
fidivrs
dec
pop
mov
push
push
hlt
or
push
and
mov
sub
dec
pop
add
ss
pushf
shr
sbb
cmp
push
push
mov
das
sbb
enter
outsb
jecxz
clc
push
cs
sub
int
cmpsl
into
int3
xchg
inc
pop
test
aad
sub
mov
pusha
add
mov
cmpsl
adc
push
inc
or
add
mov
in
mov
lret
sbb
out
call
pop
lea
mov
es
push
mov
jmp
sub
jecxz
mov
push
fidivrs
out
aad
outsl
nop
mov
cmp
mov
hlt
mov
je
cwtl
inc
or
cltd
add
in
negl
int3
ja
idivb
cmpsb
jg
jne
dec
mov
insl
sbb
or
push
adc
call
das
scas
jp
cmp
shrl
scas
pop
sbb
iret
mov
add
jmp
and
xor
aad
jecxz
and
mov
xlat
jl
jns
int
arpl
out
sub
or
pusha
mov
jmp
add
ds
cmpsb
sub
cmpl
xor
dec
pushf
adc
sarb
xor
adc
pop
adc
mov
lcall
and
dec
xchg
mov
loope,pt
outsl
fimull
ljmp
add
repnz
insl
jns
jle
inc
lret
aaa
enter
movsb
scas
shll
fsts
push
push
shll
fbld
mov
loope
mov
inc
xor
in
pop
int
cmp
arpl
arpl
push
std
jno
ret
sub
shl
call
fs
xchg
int
add
and
pop
lods
sub
or
stos
pop
pop
xor
test
sahf
mov
mov
push
and
mov
pop
mov
mov
in
loopne
and
lea
jg
rcrl
adc
mov
add
rcll
aam
inc
jne
mov
negb
xchg
mov
jb
dec
add
ss
xor
mov
aaa
jnp
addr16
adc
xchg
enter
xor
call
sub
mov
imul
and
sbb
popa
xor
outsb
lods
es
jg
mov
lods
add
aaa
aaa
test
loop
mov
rolb
cmpsb
movsl
cwtl
xchg
in
xor
mov
hlt
sar
lods
decl
mov
es
mov
mov
mov
scas
mov
sbb
movsb
or
or
out
xchg
mov
cmp
mov
insl
adc
jmp
jno
movsb
popf
lcall
pushf
add
cmp
mov
mov
ja
jnp
lods
sub
insb
int3
sbb
daa
jb
xchg
fldt
fbld
fwait
scas
mov
xlat
loope
ror
mov
shrb
sahf
pop
inc
cmpsb
test
iret
das
mov
aas
test
std
nop
jmp
xor
add
insb
hlt
xchg
lret
std
ja
dec
in
dec
mov
leave
push
cmp
lds
mov
xor
adc
sbb
daa
divl
pop
stos
push
dec
sub
push
cmpsl
shrb
das
lds
and
in
test
sti
mov
pushf
bound
out
and
add
je
lahf
pusha
pop
imul
mov
mov
jns
stc
mov
sbb
xchg
test
mov
mov
sub
add
sub
iret
fnsave
adc
pop
js
dec
test
idivl
xchg
add
outsb
sub
rcrb
push
out
inc
add
loope
cmc
xchg
out
mov
cli
sahf
inc
jnp
pop
test
out
jecxz
sti
int3
mov
push
mov
rclb
mov
popa
push
inc
ret
or
push
mov
iret
inc
out
mov
sub
push
and
or
add
loopne
pop
inc
lods
xor
es
sub
bound
cltd
subb
mov
pushf
test
sub
cmpsb
xchg
faddl
outsl
adc
out
cmpsb
jbe
xchg
in
ret
mov
rcrb
xchg
dec
fistpl
lea
cmp
flds
or
push
in
cmpsb
enter
and
mov
aam
arpl
inc
jno
xor
fisubrl
cmpsb
pminsw
and
mov
mov
rorl
ret
sbb
mov
sbb
dec
nop
push
jb
xchg
test
repz
adc
lcall
inc
sbbb
in
sub
es
xchg
aaa
inc
rorb
and
push
movsl
or
out
insb
xchg
push
pop
inc
or
mov
repz
movsl
push
mov
push
inc
push
dec
leave
jl
cmp
cmp
out
iret
popl
adc
or
pop
and
push
xchg
jle
mov
mov
mov
or
mov
mov
outsb
mov
inc
das
mov
stc
sub
mov
fisubrs
sbb
lea
and
xchg
ja
mov
xchg
inc
js
sub
mov
jmp
dec
mov
fnsave
mov
sarl
add
jno
imul
out
aaa
shrb
mov
fwait
jmp
dec
mov
adc
adc
jmp
jnp
pop
repz
dec
mov
jno
enter
imul
inc
sbb
jl
or
je
pop
faddl
repnz
push
push
mov
inc
sub
adc
push
cwtl
andb
push
push
test
xchg
sbb
push
inc
dec
test
insb
aaa
mov
jle
cwtl
leave
and
loopne
movsb
sahf
push
jg
out
cmp
es
xor
ret
sbb
lahf
add
clc
and
push
adc
push
movsl
lret
lahf
cmp
pop
cld
xchg
mov
js
jo
dec
adc
testb
inc
or
incb
add
mov
pusha
mov
rclb
dec
je
in
adc
sti
jbe
xchg
sti
xchg
data16
cmc
out
int3
cmpsl
into
cmp
xchg
mov
ret
xchg
inc
and
mov
inc
test
imul
insb
pop
inc
sub
adc
mov
push
mov
push
loope
lcall
test
nop
pusha
movsl
dec
xor
sahf
pop
xchg
mov
data16
in
jl
movsb
push
test
mov
popa
adc
adc
sbb
or
add
data16
lret
inc
lret
cmpsb
or
aam
dec
loopne
cmp
lahf
enter
insl
ret
push
mov
or
popa
dec
fdiv
cmpsl
sub
jnp
sbb
xor
push
pop
dec
dec
or
cmp
std
mov
repnz
call
ja
jecxz
and
ljmp
into
or
adc
mov
out
cmp
jns
lret
mov
shlb
popa
and
add
jbe
adc
and
ds
adc
in
or
sbb
sbbl
stos
add
inc
or
leave
push
xlat
out
daa
pop
fcmovnu
shrb
push
rclb
lock
ficompl
lcall
int3
lret
pop
sub
sub
ljmp
fmull
push
shlb
repnz
faddl
adc
xor
sbb
push
jmp
and
iret
in
mov
lcall
inc
scas
popf
shl
movsl
pushf
push
jbe
xchg
xchg
jb
roll
ret
inc
je
push
dec
pop
mov
test
jb
in
ljmp
push
xor
xchg
pushf
push
sub
mov
mov
xchg
dec
nop
xchg
adc
in
push
xchg
xor
aad
sarb
pop
pop
loopne
and
and
in
dec
inc
clc
mov
jmp
mov
sbb
stos
mov
shl
adc
test
adc
push
mov
or
rcll
outsb
mov
xchg
lods
icebp
push
jne
jmp
mov
data16
test
enter
push
and
leave
ds
mov
cmc
movq
test
fsubl
loopne
icebp
jb
fdiv
fwait
fs
pop
inc
xlat
mov
out
mov
aas
cmp
add
and
jle
icebp
xor
mov
mov
jnp
cmc
loope
push
stc
xor
pop
push
mov
outsb
lock
movsl
add
or
sbb
or
inc
mov
test
mov
inc
ret
test
out
fstps
mov
rclb
dec
jg
rcrl
mov
xor
jmp
inc
pop
adc
rclb
dec
jno
in
mov
jb
push
jge
int3
mov
add
fldt
sbb
add
sti
inc
xchg
and
in
clc
daa
inc
add
sub
pop
push
addr16
mov
cmpsb
inc
pop
js
inc
pop
sti
imul
push
jmp
mov
xlat
dec
divl
dec
outsl
movsb
mov
aam
int3
xorb
pusha
outsb
mov
xor
and
cmp
or
inc
xlat
in
test
pop
xor
mov
data16
mov
lea
das
xor
lcall
inc
shl
mov
loop
jge
mov
fs
mov
jge
mov
pop
rol
int3
pop
daa
jae
mov
inc
out
out
outsl
clc
test
movsb
adc
adc
mov
mov
mov
cmp
rolb
jnp
push
clc
jge
lods
xlat
std
insb
ud1
pop
jbe
sarl
or
and
dec
xlat
mov
scas
popa
mov
ret
xchg
cltd
jbe
jae
sbb
jp
xchg
dec
in
mov
das
jl
xchg
pop
dec
xchg
cmpsb
xor
pusha
mov
cli
andl
or
xor
je
push
mov
inc
sub
or
or
and
out
cmp
xlat
in
stc
roll
xchg
sub
xor
fisubrl
xor
lcall
out
jecxz
pop
insl
xchg
mov
iret
or
mov
in
in
add
mov
jp
pop
cld
enter
std
jns
mov
sub
out
adcb
gs
out
int
mov
test
inc
in
xchg
cmp
or
mov
xor
std
mov
out
pop
and
out
test
pop
seta
arpl
or
rorb
adc
push
pop
cmpsb
add
call
xor
push
xor
lods
insl
cmpsb
inc
or
sahf
pop
daa
rcll
sahf
out
leave
inc
xchg
cmp
in
test
outsl
aaa
jno
adc
xor
filds
iret
sbb
xchg
loopne
hlt
fcomps
dec
cs
pop
test
jmp
adc
sub
inc
imul
xchg
loop
or
bound
sbb
sbb
gs
and
sbbb
xchg
dec
or
mov
bound
icebp
repz
aam
pop
mov
xlat
and
je
mov
out
mov
decb
add
mov
add
adc
sbb
pop
movsb
jmp
mov
and
and
push
pop
push
pusha
jmp
push
mov
ds
data16
int
xrelease
push
mov
and
push
cwtl
inc
aaa
insl
mov
cld
xor
mov
add
fistpll
inc
push
fisubl
jae
xchg
jb
mov
clc
insb
mov
mov
pop
jp
stos
fcmove
push
push
xlat
cmpsb
sahf
adc
popa
leave
movsl
out
mov
adcb
sbb
xor
xchg
inc
mov
mov
mov
das
outsb
scas
loopne
daa
scas
sub
add
popf
out
xchg
int
dec
or
rcrb
pop
xor
adc
add
ret
inc
movsl
lret
call
mov
int
es
cmpsl
mov
add
outsl
sub
cmp
daa
jb,pn
cmp
mov
arpl
and
push
sbb
je
pop
mov
pop
sarb
imul
push
sub
and
mov
mov
dec
ficomps
cmp
add
icebp
mov
scas
cld
ret
push
lcall
cmpsl
hlt
cmpsl
aaa
fwait
dec
sbb
lods
fbstp
in
icebp
icebp
ret
int3
pop
pop
inc
fcoms
jns
inc
cmp
loop
dec
and
lret
fdivrs
jp
mov
ret
dec
xchg
jmp
iret
pop
daa
aaa
pop
xor
and
push
adc
mov
lods
outsl
jo
xor
ljmp
aas
jae
sarl
and
loopne
xor
enter
pop
shll
scas
mov
pop
subb
dec
mov
mov
mov
cmpsb
jecxz
adc
std
mov
xlat
cmp
lds
xchg
sbb
or
jbe
shrl
mov
cmpsb
mov
push
or
pop
out
test
shll
adc
cmp
xlat
popf
or
lods
jno
adc
lea
data16
cmpsl
xor
jbe
pop
cmc
mov
push
mov
loopne
pop
ja
les
shrb
leave
jl
daa
ljmp
adc
stos
xchg
jno
leave
pop
fidivl
cmp
sub
cmc
lds
imul
loope
ljmp
mov
cltd
sbbl
mov
pop
loop
mov
adc
or
sub
data16
jg
sub
pop
nop
mov
shl
test
jns
pop
inc
xor
out
outsl
sub
dec
pop
lock
es
cmp
ja
imul
adc
jle
lods
sbb
push
lds
hlt
loop
xchg
fld
fucomp
fldcw
mov
decb
out
dec
mov
sarw
fcomps
xorb
push
call
sub
pop
int
shrl
xchg
lret
cmc
in
jae
out
lret
jmp
and
test
add
popf
jge
lds
notb
mov
ret
push
into
cmp
ss
lret
dec
ds
xor
cmpsl
pop
mov
cmc
inc
arpl
add
sub
aam
push
sbb
sbb
pop
sar
jmp
mov
popf
mov
test
in
mov
aam
sub
ds
mov
cwtl
leave
mov
cmpsl
xchg
fsubr
incb
cmp
aaa
lods
notb
test
adc
ret
sahf
jl
mov
add
rcrl
push
nop
repz
mov
mov
or
or
out
cli
pushf
and
and
dec
rclb
mov
and
out
nop
insl
and
es
orb
jecxz
sti
dec
mov
adc
push
pop
subl
mov
inc
movsb
shll
nop
jge
add
mov
xorl
or
xchg
xchg
lea
test
xor
inc
dec
or
fdivs
mov
jmp
imulb
mov
push
dec
in
push
cli
xlat
sbbl
insl
jb
or
ds
test
lock
aaa
dec
arpl
mov
push
test
lds
ror
adc
addb
out
test
int
cltd
xorl
es
dec
mov
sub
popa
pop
rcrb
mov
sarb
jmp
push
pop
dec
push
push
in
mov
adc
dec
lock
jnp
or
jge
ret
dec
pop
jo
sbb
aad
mov
push
data16
imul
mov
dec
shl
std
cmpsl
push
dec
mov
xchg
outsb
jl
ds
ljmp
sbb
cmp
mov
pop
jb
mov
or
les
imul
outsb
or
test
fidivl
fldt
jb
icebp
sub
call
inc
shrl
mov
pop
in
xlat
pusha
mov
mov
out
xchg
xchg
ljmp
lahf
aad
stos
mov
cmp
cltd
xor
xor
lods
cli
dec
mov
ds
sbb
roll
sub
sub
mov
pusha
mov
fsubl
ljmp
adc
cs
sbb
ja
xchg
out
or
stos
aaa
int3
or
sahf
mov
es
ja
mov
cmp
inc
test
push
aam
aaa
or
cmpsb
jmp
loopne
xchg
test
mov
xor
sub
out
dec
jbe
sbb
mov
or
mov
fimuls
lods
sub
fistl
jae
pop
loopne
push
push
xchg
mov
mov
es
jge
add
xchg
fcmovne
pop
and
shrl
or
les
mov
out
jno
ja
lods
or
lock
add
cmpsb
xor
fimuls
pop
dec
xchg
mov
adc
lret
push
out
add
into
rcrl
stos
mov
mov
test
leave
sub
adc
shlb
fcomip
dec
icebp
mov
ret
clc
js
out
loope
pop
sarb
jb
jge
fwait
mov
in
outsl
rcrl
dec
adc
mov
cmp
xchg
insl
jle
push
mov
sbb
stc
pop
pop
jle
push
mov
mov
push
jle
xor
push
adc
mov
mov
jmp
inc
inc
push
dec
sbb
pop
rcrl
inc
std
mov
mov
sbb
mov
lods
std
push
leave
in
ja
sbb
ret
xor
inc
mov
add
repnz
loop
xchg
or
xchg
pop
pop
inc
rcl
sub
rcl
shlb
test
mov
jmp
int
mov
mov
mov
inc
out
mov
gs
enter
inc
arpl
clc
jae
mov
lods
or
jbe
cli
out
insl
mov
add
fs
jns
mov
std
fisubrs
add
cld
mov
das
hlt
loope
cmp
mov
lahf
adc
xchg
aam
cmpsl
setne
cmp
flds
or
pop
shr
mov
push
out
mov
ret
cmp
popf
cld
pop
pop
ljmp
fiaddl
dec
push
adc
push
movsl
jecxz
fiaddl
lods
push
mov
add
push
cmp
pop
add
push
xchg
lcall
add
adc
xchg
fisubl
std
xchg
jo
xchg
shlb
cmp
popf
leave
icebp
mov
xchg
imul
decb
add
xchg
test
adc
mov
cltd
adc
xorb
jo
jecxz
std
pop
pop
inc
clc
cmpsl
sbb
sub
sub
cmpsb
les
jb
test
outsb
out
push
lds
jmp
mov
jecxz
mov
xor
jl
or
pushf
loope
dec
leave
pop
adcl
mov
jbe
bound
insb
test
fs
ret
xchg
fcoml
fidivl
in
mov
aam
rcll
sarl
jae
fadd
adc
jg
ljmp
out
cmp
cmp
cltd
pop
mov
sbb
arpl
shl
xchg
test
insb
mov
dec
nop
cmpsb
sarl
push
andb
ror
loop
pop
sti
cmp
push
jb
push
and
mov
stos
mov
mov
sbb
push
shl
pop
xor
xchg
sub
sti
test
mov
mov
out
icebp
adc
stc
sbbl
mov
xchg
xchg
outsl
add
scas
jg
clc
outsb
push
add
xor
ret
push
lahf
mov
or
push
cli
pop
inc
dec
jl
or
inc
adc
fsubs
or
nop
pop
int3
rol
xor
cmp
pop
push
leave
jl
fadds
mov
sahf
cmp
pop
shll
negl
mov
sbbl
xlat
ss
movb
dec
test
mov
popa
loopne
mov
lods
push
jbe,pn
jbe
push
dec
and
out
push
mov
sbb
test
lret
xor
jmp
add
xor
daa
push
pop
adc
test
aas
mov
xchg
push
pop
add
clc
lods
mov
or
ret
in
arpl
sbb
sub
adc
mov
ret
dec
pop
test
xor
out
mov
push
or
leave
fwait
jnp
scas
xchg
mov
sbb
loop
mov
push
adc
mov
addb
mov
dec
xor
outsl
lods
dec
dec
js
xor
inc
imul
sbb
and
sbb
add
sbb
jne
in
pcmpgtb
jno
js
fdivl
ret
pop
push
dec
loope
fwait
aad
lret
stos
inc
inc
jg
nop
je
insb
es
pushf
std
dec
fisttpl
movsb
pop
ljmp
lea
sarl
xchg
ljmp
inc
dec
flds
js
mul
pop
sbb
push
dec
xor
sbb
int3
pop
mov
adc
mov
test
shrl
es
jnp
testl
test
fwait
xlat
addr16
mov
bound
adc
lret
adc
insl
lahf
in
out
cli
test
fs
or
dec
fbld
mov
aam
movsb
ds
mov
es
sbb
sub
mov
jge
cmp
dec
rorl
cltd
pop
xchg
loopne
and
push
push
inc
and
je
cmc
jl
dec
sub
flds
or
mov
mov
sarb
sub
fcoms
pop
mov
xchg
mov
jno
pop
mov
push
std
mov
jle
add
dec
jae
mov
out
fstp
pop
sarl
test
sub
and
dec
outsl
test
cltd
jecxz
rol
aas
cmp
add
fstpt
in
xchg
gs
xchg
lcall
push
roll
in
std
xor
fstps
into
push
repz
cltd
mov
inc
jb
js
pop
xor
pop
cmp
and
jmp
les
repnz
mov
mov
sbb
sbb
mov
ffree
jmp
lea
cmp
push
sahf
loop,pn
cmpb
addr16
fisttpl
pushf
push
push
fidivrs
outsl
hlt
lods
xchg
sub
std
jle
mov
cmp
xchg
inc
js
lahf
rorb
pavgb
adc
mov
pop
adc
sbb
or
imul
inc
popa
jb
sub
movsb
and
mov
jnp
data16
shrl
pop
push
lods
jp
jae
sub
mov
sti
loop
push
call
scas
inc
lods
adc
adc
popa
fcomps
inc
mov
inc
cmpb
stos
and
adc
test
fistpl
or
mov
arpl
sti
pop
stos
push
insb
push
cmp
movsl
lods
mov
push
test
adc
out
jge
xchg
pop
mov
jecxz
fwait
sbbl
in
jmp
pop
outsb
test
pop
add
ds
sub
cmpsl
add
out
and
outsl
into
mov
add
push
dec
dec
dec
gs
jno
mov
push
push
mov
jno
scas
fs
rcrl
imul
cli
inc
sub
lcall
test
cmpsb
test
ret
fs
pushf
sarb
lret
push
and
pop
mov
mov
loopne
mov
pop
int3
mov
dec
into
lcall
cmp
leave
lahf
mov
cmpsl
jno
add
mov
cmp
add
lea
rorl
and
push
iret
clc
sub
repnz
add
std
and
cmp
bound
or
hlt
call
jne
dec
sbb
hlt
shlb
fs
jbe
adc
enter
orl
fdivrl
out
aad
cwtl
jecxz
imul
jle
and
or
fstps
pop
sbb
cli
and
lret
adc
or
fdivs
js
lock
mov
in
add
cmp
pop
pop
inc
out
add
mov
inc
fistps
mov
inc
inc
fs
js
popa
mov
nop
inc
jne
outsb
cmpsl
sub
or
xchg
iret
pop
js
mov
xchg
push
mov
xchg
push
sbb
mov
adc
dec
mov
in
aas
rcll
mov
mov
mov
repz
fsubl
jle
aas
sbb
jmp
lods
cmpsb
addr16
outsl
cmp
ljmp
add
mov
cmp
inc
mov
lock
cmpsl
and
test
jbe
arpl
xor
jnp
dec
sbb
pop
sub
jae
sahf
call
sub
jno
adc
cmp
push
jmp
lret
push
scas
fdivs
js
idivl
jge
inc
push
fisttps
dec
pop
gs
pop
mov
pop
in
xchg
in
out
add
in
xlat
dec
in
pop
mov
inc
xchg
xor
cmp
std
lcall
add
sbb
clc
sub
rcll
xlat
pushf
mov
imul
outsl
arpl
mov
jne
icebp
mov
mov
fisttpl
insb
or
outsl
adc
mov
pop
hlt
xchg
pop
mov
pop
push
ds
sbb
xchg
test
jbe
cs
enter
cmp
sbb
push
inc
notb
jmp
mov
setle
dec
bnd
ljmp
sbbb
dec
cli
test
aam
test
lcall
xchg
or
gs
paddq
mov
add
lcall
mov
into
cwtl
inc
repnz
add
mov
xor
out
pop
xchg
sub
sbb
push
lcall
aam
cli
or
inc
pop
out
jl
and
or
adc
insb
popa
sbb
add
push
adc
mov
add
lock
mov
xchg
movsl
push
mov
inc
sub
jecxz
and
ret
push
popa
and
pop
imulb
call
bound
fcmovne
std
xchg
push
mov
sbb
inc
jnp
call
ss
mov
sbbl
test
ficoml
mov
loopne
cmc
jp
push
push
jne
add
test
mov
enter
sahf
fnsave
add
les
js
loopne
lods
mov
test
ret
mov
mov
jge
in
in
lret
imul
xlat
shr
lret
mov
jmp
jae
pop
push
movsb
push
sbbl
out
stc
inc
jmp
pop
movsb
lret
ret
cmp
ds
addb
push
xchg
aam
shrl
aam
jg
aas
or
pop
pusha
imul
in
jg
and
js
mov
mov
or
mov
xlat
sbb
repz
mov
mov
mov
ljmp
pop
nop
int
sahf
fiadds
pop
ljmp
inc
call
dec
dec
das
or
dec
loope
pop
cmc
andl
orb
aas
cwtl
push
mov
int3
sub
inc
mov
xor
or
mov
scas
aaa
imul
mov
popa
xchg
jns
add
fistps
pop
cmp
pop
jecxz
dec
adc
add
and
out
adc
sub
lock
sbb
xchg
xchg
adc
movsb
sub
loop
push
dec
sub
pop
or
pop
out
loopne
test
sub
sub
ja
neg
int3
in
cmp
bound
cs
ja
lcall
out
sub
lcall
sbb
mov
insl
push
xchg
rclb
xchg
pop
and
jnp
sub
stos
fistpll
mov
xchg
ja
pop
pop
mov
imul
mov
leave
add
aas
push
xor
popf
mov
sub
ret
mov
or
mov
ret
inc
inc
push
pusha
addr16
add
jo
aad
rolb
stc
adc
push
and
fmul
iret
pusha
mov
inc
insl
out
mov
fstl
pop
stos
stos
inc
or
sub
and
xchg
ja
or
test
add
ret
lcall
mov
stc
daa
inc
rcll
ret
shlb
fwait
lret
sub
push
rorb
jecxz
or
and
xor
inc
mov
or
scas
fdiv
call
sub
pusha
inc
mov
rolb
or
xlat
inc
mov
mov
jae
jge
or
aas
cmp
mov
cmp
jmp
push
mov
jg
sti
cmc
mov
mov
aaa
sarb
xor
out
movsl
les
dec
pop
adc
add
sbb
lahf
sbb
push
jl
dec
loope
dec
mov
push
mov
and
stos
dec
scas
cmp
hlt
dec
xchg
adc
jecxz
xor
imul
pop
push
aad
mov
jbe
movsb
push
and
call
test
jne
mov
fistpll
inc
cmp
xchg
cs
cmp
or
lahf
data16
lods
dec
loopne
pop
inc
inc
pop
xchg
aad
mov
xchg
test
xor
pop
stos
add
imul
clc
ficompl
jae
mov
shlb
ret
shlb
ret
movsb
or
fnsave
out
ljmp
or
mov
mov
mov
jnp
xor
stc
mov
cmp
dec
push
jbe
fildll
test
or
mov
in
and
inc
or
sub
push
lret
into
cld
adc
je
cltd
push
fwait
push
shrb
push
and
iret
mov
out
jge
xchg
pop
xor
testl
jbe
negl
jg
adc
lods
mov
pop
lods
push
loop
clc
fstpl
dec
loopne
jno
pop
test
in
fcmovnb
cs
stos
imul
clc
sbb
subb
sub
in
cmp
inc
pop
leave
into
ljmp
cmp
jl
and
xlat
push
call
inc
nopl
add
or
xor
jae
jnp
fwait
rorb
push
nop
stc
push
sbb
enter
jno
mov
dec
leave
insl
repz
sti
leave
loope
movups
test
push
in
mov
jmp
movsl
xchg
jo
pop
mov
lea
dec
sbb
stos
adc
aam
std
cvttps2pi
pop
rclb
jno
inc
mov
xchg
dec
pop
cmp
mov
ret
cmpsb
and
adc
sub
lock
cmpsl
lock
push
test
jecxz
stos
push
movsb
dec
jno
insl
mov
xor
test
lock
cmc
stc
stos
in
inc
lods
lock
scas
or
imul
iret
jmp
out
sub
das
test
rcll
or
and
cmp
cli
mov
add
lret
push
js
mov
sbb
sbb
iret
xor
jle
mov
aam
inc
xor
cltd
insb
ljmp
mov
fldenv
ret
lods
pop
sarl
rorb
cwtl
mov
cmp
dec
lcall
sahf
jnp
jb
mov
cli
mov
xchg
mov
stos
or
push
lcall
lret
mov
xlat
inc
push
push
outsb
xchg
jae
sbb
popf
and
test
sub
or
out
imul
push
mov
dec
jbe
mov
cmc
cmpsb
loope
mov
mov
pop
ljmp
cmp
xchg
mov
sub
outsl
stc
int3
ja
jbe
lds
sbb
dec
add
shr
add
inc
mov
scas
pop
jmp
xor
push
jg
loope
ds
fbld
adc
lock
inc
sub
cs
mov
rorb
mov
out
rol
sub
pop
pop
outsl
xchg
aam
xlat
push
or
daa
dec
jbe
out
sub
into
jle
in
cmp
pop
add
rolb
pop
lock
add
ss
hlt
sub
pop
push
and
mul
mov
data16
inc
pop
and
xor
jmp
cmc
mov
cmc
mov
sub
aam
aaa
scas
mov
sub
add
inc
jbe
in
push
jns
add
push
push
add
push
into
cltd
or
pop
out
jb
adc
jb
and
dec
jmp
mov
stos
in
inc
jl
pop
cmp
fcoml
movsb
mov
les
scas
pop
addl
aaa
rcll
adc
aaa
push
shrl
jb
xchg
mov
sbb
sbb
imul
fs
or
je
imul
fimuls
mov
js
hlt
rcrb
lcallw
jae
push
push
mov
stos
aas
dec
push
xor
sbb
js
ja
push
pusha
das
xor
cmp
ljmp
sahf
push
push
rep
and
inc
mov
pushf
lcall
pop
std
mov
and
dec
jmp
fbstp
jno
push
lret
push
stos
ficoms
push
inc
mov
sub
xor
inc
sbb
xchg
pushf
mov
daa
aaa
mov
mov
inc
sub
ds
lea
loop
adc
mov
flds
fnstsw
sti
push
sti
mov
and
ss
jbe,pt
orl
mov
rolb
out
cmp
jp
vpaddd
jno
push
lret
and
loope
sbb
std
test
out
sbb
lahf
sbb
je
inc
xlat
adc
push
test
jl
sbb
pop
lock
daa
mov
adc
pop
dec
lea
into
movsb
cmpsl
mov
fsts
addr16
add
cmp
gs
or
lods
jbe
in
sbb
out
cmp
test
loopne
shll
pop
neg
andl
ljmp
xchg
push
aam
sub
rcr
and
repz
sbb
dec
inc
bound
sub
repnz
xor
sub
or
sub
jo
mov
out
lods
cmp
cltd
test
je
xchg
inc
daa
andl
sbb
inc
shl
dec
in
xor
cs
jmp
sub
in
es
mov
scas
int
sub
fs
dec
xchg
mov
lcall
mov
jg
addb
xor
mov
inc
mov
jecxz
add
pop
or
fucomp
mov
jg
adc
imul
inc
aas
pop
pop
pop
movsl
push
pop
outsl
hlt
out
lcall
aad
mov
arpl
lods
lods
mov
sbb
push
xchg
divb
push
ja
inc
sbb
jae
loop
cmpsb
xor
cmc
pop
xlat
inc
push
jecxz
and
add
cmp
and
push
fsts
stc
pusha
mov
dec
add
stos
adc
cmpsb
jmp
mov
notl
jmp
lahf
or
and
and
pop
popf
insb
mov
dec
ret
mov
mov
cli
add
push
out
sbbb
mov
mov
mov
mov
sarl
push
xchg
mov
mov
add
jo
repnz
push
xor
fstpt
out
inc
lret
pop
les
orb
ret
push
arpl
dec
rorb
sbb
push
xchg
cld
ljmp
lock
das
pop
daa
jg
or
fs
stc
fiaddl
jns
xchg
push
lods
mov
cltd
icebp
mov
jnp
lods
sub
push
adc
adc
jno
jbe
xchg
add
test
outsl
push
push
mov
xor
insb
ljmp
loop
icebp
add
lcall
loope
xor
cli
lods
loopne
pop
mov
pop
mov
js
inc
mov
shll
cmp
sub
dec
faddl
test
mov
and
scas
test
lret
dec
lahf
add
or
outsb
pop
dec
rcrl
adc
cmp
test
sti
pop
addr16
push
sbb
pop
push
mov
fnsave
jbe
sub
int3
xchg
ss
mov
push
clc
cltd
dec
and
jmp
jle
adc
fstl
faddl
mov
push
lods
inc
nop
dec
pop
enter
push
or
lret
jg
or
jo
ds
in
jl
enter
pop
lock
xor
jnp
jb
xor
out
ljmp
mov
inc
hlt
arpl
cmpsl
adc
test
jmp
pop
mov
adc
push
je
rorb
stos
adc
mov
dec
xchg
dec
out
cmp
cmp
dec
pop
shl
and
jecxz
xorb
hlt
inc
mov
inc
ljmp
sbb
iret
push
mov
mov
ds
push
mov
jbe
mov
adc
xchg
ja
icebp
js
sbb
or
or
cs
push
data16
sti
mov
clc
test
xor
or
pop
adc
pop
mov
testb
scas
jmp
push
and
pop
imul
movsb
shll
pop
xchg
cmp
repz
and
lods
pop
test
cmp
mov
push
fisttpl
mov
ljmp
mov
xchg
mov
xchg
mov
xor
int
cld
sahf
sub
daa
push
fidivrl
jno
jmp
mov
sub
frndint
xorb
jmp
pop
mov
adc
sahf
or
lcall
push
sbb
jg
cmp
mov
cmp
pushf
pop
mov
inc
sbbl
xor
xchg
mov
push
xchg
ret
xlat
xor
lods
repz
jl
mov
jg
pop
lcall
and
je
sbb
mov
std
pop
mov
jge
pop
dec
xchg
and
mov
adc
adc
fimuls
cmpsl
fidivrl
fisubs
jge
pop
mov
lds
jp
dec
rcll
pop
and
mov
pop
cmp
ret
pop
gs
mov
and
jle
mov
cmp
lock
es
push
mov
mov
imul
sub
lock
out
in
add
mov
es
ja
sub
fbld
popa
cli
push
hlt
lcall
mov
push
add
push
push
jns
jp
lds
int
mov
stos
loop
and
jnp
ljmp
add
loope
insl
pop
cmp
imul
xchg
fidivl
mov
dec
int
movsb
mov
stos
jecxz
dec
inc
cltd
insl
sub
imul
cld
aad
sbbb
mov
or
test
dec
inc
xor
cmp
jae
adc
push
loopne
or
out
scas
pop
cli
dec
jp
repnz
mov
mov
mov
cmc
adcl
mov
jl
fnstcw
pushf
or
cmp
iret
dec
add
cli
cmp
mov
sarb
leave
xchg
lret
or
ja
jl
sbbb
push
fstp
mov
mov
add
inc
push
cmp
ja
test
aad
aaa
mov
and
mov
adc
mov
ja
adc
add
or
add
testl
inc
pop
push
dec
jg
and
div
test
push
mov
dec
and
ret
fists
push
jae
lret
sbb
sub
mov
mov
iret
xor
fidivs
pop
stc
push
fldl
in
cltd
dec
cmpsl
sbb
leave
jmp
adc
nop
fsincos
push
push
jnp
mov
pop
arpl
mov
dec
dec
or
test
shll
mov
mov
push
jbe
leave
nop
jmp
xor
jge
jo
dec
inc
sbb
xchg
jl
cltd
dec
mov
lret
insb
pop
das
sub
mov
sub
iret
repz
test
lret
adc
xlat
aad
ret
and
jno
sbb
adc
pop
jg
sbb
push
ds
xchg
xchg
inc
or
shrd
pusha
cmc
neg
and
enter
mov
jl
stos
ja
divb
psubq
adc
test
push
pusha
push
fbld
add
push
and
mov
sbb
xchg
movl
mov
lahf
pop
fistpl
sub
and
std
push
fstl
call
adc
not
aas
push
sti
pop
je,pt
or
dec
cmc
cli
mov
int3
mov
out
fcomip
aaa
out
xchg
loopne
and
jb
loope
jae
inc
inc
mov
sub
mov
ret
stc
sahf
or
dec
xchg
sahf
cmp
jge
xlat
hlt
dec
test
stc
jle
inc
pop
pop
and
add
sub
or
push
inc
das
cmc
pop
push
movsb
fsubrs
stc
sbb
dec
jne
xchg
stos
inc
sub
dec
dec
in
jnp
jns
lock
mov
pop
pop
ret
test
lahf
mov
cs
or
inc
repz
dec
dec
or
ret
outsb
fldt
sbb
dec
push
movsl
mov
push
mov
pop
lock
or
jbe
and
std
aaa
pop
insl
mov
mov
inc
fildl
jge
xchg
mov
lock
xchg
mov
dec
mov
test
out
push
mov
sbb
xchg
push
jmp
pop
sub
data16
arpl
mov
push
adcl
pop
popf
daa
dec
mov
popf
mov
dec
test
xchg
push
adc
pmullw
mov
xchg
mov
out
cmpsl
addl
mov
jge
mov
lods
sub
outsl
jb
lcall
push
stos
cwtl
movsl
inc
enter
jp
cmp
daa
fnstenv
or
or
stos
scas
jne
fsubl
icebp
sub
aam
sbb
nop
ja
adc
mov
or
stos
lret
xor
hlt
scas
outsl
and
sarl
adc
aas
mov
mov
mov
push
mov
mov
add
push
jl
jb
xchg
movsl
or
inc
xchg
repz
lods
fisttpll
stos
jbe
pop
and
ret
test
rcll
fnstsw
pop
jecxz
ficompl
mov
and
cmpsl
movhps
xor
stos
pop
lods
imul
fucomi
pusha
in
dec
add
jb
repnz
xorb
daa
imul
mov
repnz
sbb
std
jns
push
pop
int3
dec
adc
repnz
lds
nop
cmp
mov
addr16
jmp
or
loop
xchg
xchg
pop
xor
sub
xor
ret
rolb
test
add
adc
push
adc
cmpsb
ljmp
test
loop
loop
inc
orb
add
scas
das
jns
xor
mov
jmp
call
aas
xorb
fstpl
sub
pop
loop
pop
add
cmp
adc
fs
addb
xlat
jno
dec
add
xor
add
or
stos
std
arpl
addr16
orl
in
xlat
mov
aas
sbb
mov
or
push
push
dec
cmpsb
mov
jnp
pop
jns
lea
inc
repnz
fdivs
and
inc
scas
mov
xor
into
loope
and
mov
ja
jns
add
cwtl
xchg
notl
shrl
mov
mov
shl
fwait
xor
imul
mov
mov
push
lods
or
adc
insl
push
ret
inc
das
je
das
push
rcrb
outsb
in
daa
ret
bound
xchg
pop
outsb
rclb
mov
add
inc
xor
subl
jno
fs
push
stc
xchg
shl
pushf
push
test
sbb
mov
das
or
shl
pop
dec
std
ret
jmp
cld
iret
popf
xchg
out
stos
pop
cmp
xor
movsb
xchg
jl
iret
xchg
lock
aam
jp
mov
movsl
pushf
or
and
repnz
xor
inc
cmp
mov
popa
scas
add
fnstcw
ljmp
add
je
xor
jo
jle
dec
inc
sub
and
pop
out
mov
pop
iret
lds
cmp
je
fbstp
mov
test
sbb
out
xchg
outsl
or
shlb
push
rol
call
imul
inc
cmpsl
cltd
mov
test
jmp
stos
fcomps
or
adc
pop
add
add
mov
sbb
add
adc
jg
nop
mov
inc
mull
and
leave
xchg
lds
jecxz
add
cmpl
arpl
mov
inc
fs
call
add
test
lret
jmp
inc
mov
outsb
xchg
pop
data16
or
loope
bound
jno
int
xlat
fsubs
imul
aaa
cltd
addr16
jo
jl
dec
xor
xchg
popa
aaa
mov
fcoms
xchg
rclb
pop
ja
dec
jmp
lret
cli
sti
scas
jno
rcr
insb
pop
pop
mov
or
mov
xor
cmpl
dec
cmp
and
mov
pop
lds
mov
mov
imul
enter
cmp
fistps
ret
push
sbb
and
or
lock
mov
or
and
jge
and
test
dec
push
std
or
inc
mov
fiaddl
lods
dec
xor
orb
lret
add
mov
mov
daa
in
nopl
test
dec
push
adc
pop
pop
sub
add
fcoms
jmp
es
outsl
mulb
ja
pop
lcall
mov
insb
or
pushl
iret
lods
mov
in
xor
int3
out
dec
xor
dec
dec
or
in
in
icebp
jl
pop
ret
std
dec
xor
push
add
fwait
divl
daa
mov
pop
or
in
stc
pop
cmpsl
mov
lcall
idivb
pop
and
dec
fs
jbe
inc
push
cs
xor
mov
popf
xchg
jae
xchg
cmc
idivl
xchg
out
and
repz
or
movb
and
out
mov
inc
fiadds
cmp
and
mov
jle
jl
stos
movsb
mov
mov
out
dec
bound
inc
add
loopne
fdivrl
push
sbb
xchg
inc
cmp
mov
lret
cmp
shr
sbb
daa
lods
mov
mov
int
mov
push
movd
jae
ret
jo
mov
xchg
mul
add
cmpsl
sbb
add
sub
mov
insb
inc
mov
mov
xor
cwtl
or
and
pushf
data16
into
test
lea
in
pusha
xchg
or
and
or
es
jo
call
add
xor
negl
add
fstpt
cltd
sub
pop
mov
and
lret
sbb
mov
nop
xor
and
rorl
pusha
addps
dec
inc
sub
lods
sub
repz
cs
lret
js
mov
inc
pop
clc
test
xchg
jnp
outsl
xor
pusha
jne
out
mov
packssdw
out
xor
push
in
add
test
pushl
mov
pop
lcall
repz
sbb
outsl
inc
lock
loopne
adc
pminub
cmpsl
test
iret
negl
jecxz
mov
cmp
test
pop
xchg
mov
inc
inc
jno
or
jne
adc
mov
jg
sub
pop
je
ljmp
or
stc
dec
insl
lcall
dec
jge
and
or
pop
push
adc
jp
mov
xchg
or
jmp
mov
cmp
xchg
cltd
jle
dec
aam
lea
test
and
mov
pop
mov
jbe
incb
sub
insl
cwtl
das
jne,pn
mov
push
fwait
jmp
test
fidivs
xchg
push
adc
enter
imul
mov
movsl
in
adc
and
push
sti
cld
mov
cld
loop
cmp
xlat
imul
popa
add
data16
push
test
xchg
push
seta
cmc
jno
idivl
loope
aad
jns
xchg
imul
push
push
xor
imul
jg
int
xchg
and
out
mov
adc
scas
aas
inc
lea
sbb
add
push
push
mov
cs
in
scas
jb
jl
xchg
xchg
repnz
push
fsubrs
xchg
pop
ss
lods
mov
or
dec
xor
test
push
test
lahf
mov
mov
pop
xchg
test
lock
outsb
push
scas
xor
or
test
pop
divb
jecxz
jbe
mov
cltd
daa
addr16
mov
test
test
mov
mov
cmpsl
pushf
mov
test
insb
scas
mov
movsb
icebp
fsubrs
pop
xor
clc
fimuls
scas
outsl
popa
inc
aam
lods
pop
mov
xor
adc
insb
sub
and
adc
jp
cwtl
mov
xchg
testl
or
out
jecxz
xor
mov
das
add
xor
or
ret
mov
das
rorl
add
rclb
cmp
fcoml
mov
sahf
cld
xor
and
mov
inc
ret
loope
and
pop
push
mov
pop
orl
push
mov
loop
push
dec
mov
mov
adc
mov
testl
loop
jns
fstpt
push
and
xor
lahf
add
mov
lds
sub
les
cltd
xchg
and
mov
or
mov
dec
aam
push
popa
pop
ret
ficoml
xor
orb
rorb
and
ljmp
sbb
call
pusha
sbb
cmp
hlt
in
out
and
add
pop
push
mov
mov
insb
lods
pop
in
jp
mov
push
sarb
in
popf
pop
jb
push
pop
push
sahf
into
push
sti
out
pop
and
mov
andl
sarb
jns
das
das
sub
push
ja
das
adc
lock
popf
cmpsb
mov
and
and
xor
in
or
mov
ds
fcom
xor
bound
adcl
scas
lahf
cmp
cltd
lods
mov
xor
fnstcw
sub
xchg
cmp
in
nop
push
in
repz
push
xlat
adc
xor
mov
out
and
aad
xchg
imul
and
out
adc
mov
push
push
sub
sbb
add
sbb
repz
fstpl
test
xlat
aad
lea
out
xchg
sub
lock
imulb
scas
jge
sub
insl
cmp
xchg
sbb
mov
clc
out
cltd
imul
lret
pop
or
shlb
xor
jl
lret
dec
mov
repnz
jbe
in
jne
stos
inc
fnstenv
push
push
ficomps
lret
cmp
lcall
xchg
hlt
aad
je
cmp
jae
fldenv
xor
pop
imul
lea
or
aam
gs
mov
mov
or
out
orl
mov
sbb
xlat
repnz
repnz
pop
add
push
addb
leave
out
xchg
xchg
mov
mov
imul
fisttps
jmp
and
jle
pop
add
movsl
gs
dec
mov
rorl
cli
sahf
sub
jns
cmp
insl
ja
mov
fsubr
out
mov
cmp
pushf
sbb
xchg
xchg
mov
jmp
pushf
adc
sbb
movsl
push
arpl
insl
xchg
andb
jb
jg
addr16
aam
pusha
mov
xchg
mov
sbb
in
int
hlt
movsb
cs
add
lret
notb
fs
imul
and
jmp
pop
cmp
cli
add
shr
xchg
mov
into
call
imul
lcall
out
loopne
out
ret
mov
outsb
mov
les
mov
int3
cmp
out
sbbl
leavew
jnp
xor
jmp
out
sub
rorb
mov
jmp
fs
cs
sub
test
js
mov
out
and
jle
test
and
jge
cmpsl
sub
imul
in
ret
in
ret
ja
repz
lahf
mov
xor
lahf
insl
out
pop
dec
je
sub
in
aam
cmpb
xchg
or
fiaddl
shlb
aad
in
out
dec
sub
sahf
cmc
inc
leave
fcoms
lock
mov
xorb
xchg
jne
hlt
push
pusha
cmp
mov
cmp
insb
add
bound
gs
andb
sub
ret
imul
mov
sbb
loope
sbb
xlat
shrb
icebp
or
cmp
add
daa
subb
dec
mov
imul
movsl
std
adc
pop
fldt
loop
sub
cmpsb
push
outsl
arpl
iret
repnz
incb
out
scas
mov
hlt
test
loope
dec
and
xchg
and
mov
cmp
ljmp
and
push
adc
push
pop
rcll
inc
inc
cmp
or
mov
mov
stc
cmp
sbb
mov
divl
scas
imul
lds
movl
pushf
fidivrl
xchg
jl
jmp
mov
pop
jp
mov
frstor
dec
mov
mov
iret
cmp
sbb
adc
pop
rcrb
in
ljmp
pusha
dec
mov
out
gs
push
cld
ficoms
dec
jp
and
ret
sub
xorb
jmp
or
add
into
xor
jne
inc
test
dec
outsl
mov
lods
pop
aas
xor
mov
inc
dec
fistpll
mov
inc
adc
in
cmpl
lret
repnz
dec
test
jg
dec
pop
pop
scas
pop
push
push
lods
mov
pop
das
push
test
jb
mov
dec
mov
lods
or
sbb
sar
mov
mov
in
rolb
pop
mov
jno
enter
mov
in
repz
mov
mov
mov
sti
call
dec
inc
cwtl
sub
insb
push
test
cltd
mov
inc
or
idiv
aam
daa
rolb
jge
cwtl
ret
shrb
call
mov
fisttpl
xchg
ljmp
sub
or
or
xor
ja
mov
mov
xchg
push
push
xor
add
xor
out
inc
jp
pop
or
pop
add
test
inc
pop
add
jbe
popf
es
xchg
jle
inc
push
fists
sbb
jno
fstl
push
jecxz
push
cwtl
enter
jg
mov
xchg
daa
popa
push
out
adc
loopne
pop
repnz
lea
daa
adc
mov
mov
xchg
fdiv
cs
mov
mov
jne
rclb
inc
ja
test
add
adc
mov
jl
out
into
stos
das
into
repz
xchg
sub
insl
xor
pop
adc
enter
inc
pop
scas
sub
push
aam
add
push
lods
and
in
mov
test
mov
or
xchg
and
test
dec
jae
xchg
jbe
push
enter
push
sub
xchg
and
imul
dec
cmpsl
or
inc
add
cmp
dec
cmpb
pop
mov
mov
xor
cmp
aas
pop
insl
inc
cmp
sbb
lret
adc
sarl
into
adc
add
pop
out
adc
xchg
push
aaa
add
outsb
test
pop
into
ror
inc
push
and
jge
pop
loope
cmp
mov
in
xchg
adc
int
push
cmc
out
pop
cmp
add
adcl
inc
fisttpl
out
jnp,pn
lahf
mov
stc
add
mov
adc
negl
fcmovnu
movsb
cld
out
pop
js
add
mov
dec
adc
mov
pop
mov
dec
xchg
in
push
and
jb
adc
pop
dec
sarb
lret
clc
cmp
lret
insb
aaa
test
leave
mov
sahf
or
pop
jp
shlb
xor
jnp
adc
or
pop
sub
pop
sbb
xchg
xchg
push
inc
repnz
xchg
mov
lret
in
fstps
das
fidivl
pop
or
push
cmpsl
mov
inc
test
loopne
xor
test
xchg
imul
jl
mov
dec
jno
mov
cmpsl
call
adc
jo
add
sub
jno
popa
sub
mov
enter
push
insb
aad
add
orb
or
lock
insl
mov
and
sbb
jne
arpl
inc
add
call
jg
xor
xchg
mov
jecxz
pop
inc
mov
lcall
scas
mov
jp
iret
aam
in
outsb
xor
jmp
fsts
sub
jno
popf
das
mov
sbb
mov
push
data16
cmp
in
sub
or
mov
mov
fidivs
gs
loop
cmp
sbbl
sub
into
mov
mov
and
push
xor
ret
mov
fucomip
lods
pop
test
stos
or
or
xor
sbb
mov
inc
movsl
rcrb
lahf
sbb
mov
fidivl
xor
iret
xchg
sbb
pushl
xchg
dec
stos
push
imul
nop
test
push
mov
xchg
cwtl
dec
push
push
mov
mov
cmp
fcoms
jno
fdivl
stc
jb
call
sbb
shl
fs
jp
int
rcr
sub
lock
arpl
movsl
mov
xor
lret
or
jp
sbb
cmp
inc
in
pusha
mov
xchg
push
cmc
xor
iret
and
fsubl
sbb
mov
fcmovbe
xchg
xor
pop
xchg
cmp
xchg
sub
cwtl
clc
and
inc
cmc
xchg
xchg
lcall
pop
xchg
icebp
mov
stc
inc
lea
sbb
jbe
int3
cmp
push
test
fmuls
or
adc
jno
add
test
inc
jge
jns
pop
ret
pop
aam
stos
mov
cld
or
orl
adc
fdivp
fists
sbb
sti
and
imul
pop
orb
xchg
lods
in
mov
and
into
fistpl
jmp
lods
enter
mov
dec
lods
lcall
test
push
mov
or
and
shl
mov
inc
mov
mov
sbb
add
dec
or
fstps
aas
in
inc
ret
mov
xor
cmp
outsl
sbb
sub
sub
sbb
es
cs
into
in
mov
or
test
in
sbb
inc
adc
js
mov
not
pop
out
mov
sahf
pop
push
sub
push
sub
notb
push
adc
add
dec
and
dec
in
mov
xchg
lret
rorb
ss
sub
in
lea
jecxz
sub
js
clc
inc
lock
aaa
shl
xor
adc
cmp
cs
mov
test
xchg
push
xor
cwtl
and
ss
pop
js
shl
lret
icebp
add
add
jb
cmp
das
cmp
pop
sbb
jmp
imul
bndstx
and
add
dec
cs
arpl
aaa
jb
cmpsb
push
pusha
imul
es
push
insb
sbbb
test
jle
es
and
adc
jp
test
pop
sarb
push
xchg
sbb
cbtw
pop
mov
mov
xor
lods
addr16
push
ficompl
jae
push
mov
xchg
xchg
popa
addl
cmp
pop
sbb
shll
test
outsb
movsl
scas
push
pop
xor
pop
inc
dec
ljmp
push
ds
dec
lret
sub
enter
lret
shlb
mov
outsl
cmp
int
lea
xchg
sbb
cmp
mov
adc
fninit
in
ret
popf
loop
stc
enter
and
addr16
loopne
cld
xchg
lahf
xor
cmc
and
dec
pop
mov
cwtl
add
clc
cmp
sub
leave
jns
jge
push
in
mov
pop
je
push
add
insl
ror
jnp
repnz
dec
mov
mov
notl
pop
sub
cwtl
rorb
xchg
fdivp
pop
dec
test
in
xor
add
sub
aam
pop
daa
or
jmp
icebp
jno
add
pop
int3
xchg
repz
inc
mov
add
adc
incb
inc
sub
jp
inc
xchg
and
mov
je
mov
xor
sbb
jl
xchg
xchg
mov
mov
and
push
orl
add
xchg
push
test
bnd
arpl
cmp
mov
leave
xor
rcll
ficoml
mov
add
insl
push
les
je
cmp
ret
mov
mov
cmc
cmp
lcall
pop
inc
call
adc
push
cld
and
pop
jnp
xor
mov
or
xor
mov
inc
ret
fstp
pop
xchg
jp
jmp
sub
xor
rcl
dec
iret
jmp
inc
lret
sub
mov
pop
loopne
xor
cmp
mov
cmp
scas
adc
jl
adc
sti
dec
sub
int3
sub
mov
jae
add
ficompl
mov
pop
mov
jb
mov
xchg
push
push
flds
dec
insb
cli
sbb
movb
mov
loope
push
adc
jge
or
mov
xchg
mov
mov
cmove
lret
andb
sarb
or
movsl
dec
add
push
rol
loop
jle
ds
es
adc
or
inc
or
dec
mov
mov
add
aad
in
push
aad
jo
call
xchg
jbe
fidivrs
fisttps
cld
xchg
rcll
sti
inc
ret
stos
fsubrp
in
into
push
pushf
inc
jne
fistps
es
jae
add
nop
mov
add
mulb
cmpsb
push
and
adc
pop
outsb
sahf
and
out
or
not
loop
pop
stc
ret
mov
push
cmp
pop
push
cld
stos
xlat
test
push
push
aad
adc
pusha
cmp
add
add
cli
mov
pop
pusha
xor
adc
stos
loop
mov
mov
and
or
fsub
push
and
inc
mov
mov
comiss
sbbb
and
or
outsb
ja
cmp
iret
out
int
push
add
lcall
jmp
ja
sarb
or
sarl
stos
mov
inc
clc
or
cmpsb
mov
push
and
dec
jne
xchg
dec
cwtl
mov
inc
cmp
cvtps2pi
or
xchg
mov
cld
es
fnstsw
movsb
pop
and
outsl
xlat
lahf
dec
jb
cmp
push
cld
test
mov
fsubr
repnz
pusha
cs
adc
arpl
push
cltd
mov
stc
and
dec
or
xor
repz
jae
jl
faddl
aas
cwtl
dec
rcr
dec
repz
add
insb
js
in
pop
cmp
aad
cmp
out
push
inc
cli
or
mov
in
pop
aas
out
in
dec
lret
dec
mov
stc
inc
push
loop
and
js
outsb
pushl
fnsave
dec
jne
lea
js
mov
cs
cwtl
pop
inc
je
xor
mov
add
loopne
push
jge
pop
scas
cmpsl
sarl
mov
scas
push
test
dec
xchg
das
pop
test
rorb
aad
negb
shrl
ret
aad
and
or
sub
mov
and
test
sub
addl
lea
lret
jle
mov
xor
jge
inc
mov
add
rorl
pop
sbb
aad
sub
sti
xchg
mov
mulb
les
dec
movsb
mov
ret
add
das
mov
rcr
mov
pushf
jp
xor
hlt
push
lods
jbe
push
push
mov
mov
outsb
inc
rcl
jge
mov
xchg
inc
mov
pop
shlb
mov
mov
je
inc
arpl
test
pop
sub
lods
lock
mov
add
sub
and
dec
mov
adc
jle
repnz
int3
mov
mov
pusha
or
addb
dec
pop
scas
rcl
sub
inc
pop
jnp
outsb
push
out
push
ret
push
jl
das
dec
jns
sarl
pop
add
add
insl
lahf
mov
inc
ss
dec
negb
pop
jmp
sahf
shlb
out
xor
dec
stc
loop
pop
sub
sbb
loopne
das
ss
fsubp
and
push
inc
or
add
mov
mov
xor
inc
cmpsb
mov
sbb
addr16
xor
mov
inc
popa
inc
adc
add
inc
cwtl
addr16
popf
sub
sub
push
sbb
xchg
xorb
xchg
pop
push
sti
daa
lcall
idivb
push
shrl
sub
pop
dec
data16
pop
daa
sub
testb
xchg
popf
cmp
or
ds
jmp
shll
in
xor
xchg
push
xchg
sub
test
shll
hlt
cmp
mov
push
mov
add
xchg
repz
out
pop
sbb
pusha
in
xor
cmp
inc
lret
repnz
xchg
jg
push
pop
jnp
xchg
xchg
ret
cwtl
push
sbb
adc
sbb
push
adcl
or
xor
xlat
push
add
jnp
push
jp
idivl
lahf
in
call
mov
test
imul
pop
push
pop
lret
pop
andb
mov
sub
jmp
addr16
loopne
addr16
stos
in
enter
mov
lock
push
pop
mov
jo
ja
push
cmpl
mov
dec
in
sub
in
jae
jns
nop
xor
mov
pop
sub
out
mov
das
push
cmc
or
jl
scas
jmp
das
rorl
inc
jns
xchg
loope
cmp
fsts
lods
push
cld
in
inc
ja
outsl
jecxz
xchg
sub
pop
push
arpl
imul
mov
xchg
jle
adc
pop
jns
iret
sbb
xchg
pop
hlt
add
fs
fisttpll
push
ss
outsb
xor
int3
adc
xchg
sbb
roll
sbb
xlat
mov
repnz
loope
arpl
in
shrb
xchg
adc
cmp
loopne
pop
sti
push
xor
or
in
dec
out
fistpl
mov
mulb
stos
clc
jg
fisubs
cmp
adc
add
nop
fmul
jmp
in
push
stc
outsb
insb
add
stos
lods
sbb
into
jg
xlat
pop
add
mov
jg
setl
dec
in
fyl2xp1
push
or
outsb
stos
adc
int
lods
mov
or
jl
cmpsb
push
jmp
in
fs
pop
negl
fdivrs
push
fisubs
shlb
aaa
inc
int
outsl
adc
cmpsl
int
sti
stos
fsubrl
and
adc
imul
mov
test
in
adc
nop
sub
push
test
rorl
add
xlat
adc
lds
add
ficoml
leave
out
mov
xchg
notl
dec
testl
push
test
stos
jecxz
repnz
mov
ret
sbb
mov
stos
xor
mov
xlat
mov
add
fiadds
or
sti
int
push
push
mov
imul
in
sti
leave
mov
es
into
cmp
cs
pop
mov
adc
je
push
popa
ds
imul
test
jns
inc
call
in
add
inc
lahf
lods
call
clc
std
and
lock
jnp
inc
fstps
inc
inc
fnsave
test
ret
sub
push
cmpsl
lock
xchg
jg
lret
shll
xor
xchg
cmp
mov
jne
insb
loopne
adc
pop
jg
lcall
lahf
insl
pop
lods
mov
ret
mov
jae
insb
lds
sbbl
mov
mov
jbe
in
lods
xchg
sbbb
push
js
fldcw
pop
orb
sahf
test
adc
sbb
rep
push
or
and
hlt
sbb
cmp
inc
imul
sbb
fidivs
adc
ja
sbb
xorb
cmpsl
push
inc
les
jg
push
push
jo
mov
inc
xor
dec
aas
mov
sub
push
mov
lds
jecxz
mov
push
mov
mov
cmc
stc
and
outsb
insb
std
cmp
xchg
and
mov
jbe
and
add
imul
sub
repnz
in
sub
js
aas
repnz
xlat
mov
push
ds
and
addr16
cld
lods
adc
cltd
jl
adc
mov
or
push
jnp
mov
imul
in
jle
popa
dec
lahf
sbb
adc
out
push
cmpl
xchg
mov
push
jecxz
sbb
mov
xor
jne
and
push
in
enter
imul
push
cmpsl
aam
ja
rcr
fiaddl
ret
sbb
iret
lea
push
dec
mov
and
inc
cwtl
or
add
jno
xor
mov
adc
lds
scas
cld
mov
push
icebp
nop
fldt
rcll
loop
xor
add
xchg
out
pop
loopne
cmp
and
repz
jle
lahf
testb
out
xor
movsl
sub
xchg
and
ljmp
fwait
adc
fdivl
test
and
sbb
jbe
push
adc
adc
int
dec
sub
mov
mov
pop
or
sub
push
aas
sub
or
std
pusha
inc
cmc
cs
mov
cli
lods
mov
insl
push
shl
sbb
jns
jo
fwait
iret
pop
imul
cwtl
push
lea
icebp
test
sub
xchg
jecxz
insb
jno
pusha
push
movsb
scas
in
mov
rorb
or
add
daa
push
es
and
push
push
cmpsl
cmp
sub
xchg
sbb
sahf
mov
rcrb
jno
dec
sub
icebp
in
es
sub
jae
sbb
sub
dec
dec
mov
andb
or
mov
in
roll
loope
rolb
jge
mov
cltd
icebp
ret
mov
sub
adc
test
dec
test
sti
mov
repz
popa
mov
clc
cmpsl
mov
push
lahf
jmp
sbb
aad
imul
gs
jo
lds
jbe
pop
and
dec
loopne
or
into
sbb
pop
test
mov
xor
adc
out
xor
xor
xor
xorl
sbb
clc
bound
or
push
movsl
push
out
fnstsw
push
push
andb
movsb
jbe
aaa
add
dec
xlat
movsl
test
adc
arpl
insb
arpl
push
arpl
add
testb
out
xchg
inc
add
and
ret
dec
hlt
icebp
in
aas
dec
jmp
pusha
sbb
fcmovbe
nop
push
add
push
jbe
inc
es
incl
imul
dec
pop
push
push
aam
xor
das
test
insl
jnp,pt
jo
jb
add
lea
ljmp
and
xor
das
dec
rcrb
and
jo
push
sbb
repz
rorb
mov
xor
loop
lret
inc
std
test
scas
cmc
test
xor
lds
fldenv
mov
cmp
enter
ror
iret
aam
jne
sub
jg
mov
xchg
insl
adc
or
cmp
xchg
jo
jbe
sti
inc
or
movlps
xor
xchg
sbb
andb
cld
adc
outsb
push
fildll
xor
sbb
gs
pop
loop
jo
leave
pop
dec
xchg
mov
outsb
mov
mov
xlat
movsb
ds
imul
xor
pop
andb
sub
clc
div
stos
mov
lret
ret
inc
add
pop
xor
loopne
fmulp
dec
adc
movq
or
fs
outsl
sub
imul
jnp
push
mov
bound
pusha
sub
lock
lods
pop
mov
jnp
mov
lods
les
xlat
enter
xor
pop
loope
dec
lods
in
xchg
outsl
push
js
xor
es
and
fsts
add
xchg
xchg
xchg
dec
aam
xchg
inc
jno
movsb
incl
ret
sub
mov
jne
sbb
out
daa
fiadds
xor
shlb
les
sub
xchg
mov
lahf
sub
hlt
fwait
hlt
push
and
adc
loope
pop
repz
pop
int3
push
fucomip
push
add
pop
lock
mov
and
lock
fucom
and
mov
push
sbb
dec
add
aad
cltd
sbb
inc
sarl
negl
xchg
push
adc
ss
and
mov
sbb
cltd
adc
gs
mov
cli
imul
in
outsb
xor
test
cltd
or
movsb
hlt
or
jp
sub
and
cmp
rcl
lret
das
mov
pushf
stos
enter
adc
aas
push
test
xor
and
mov
fdivrl
sbb
mov
cmp
ds
fs
stos
xor
sub
cltd
mov
inc
rorl
mov
adc
xchg
jecxz
in
dec
mov
xchg
sbb
cmp
loop
mov
jae
popa
or
scas
aaa
sub
and
add
test
and
cmp
adc
in
xor
pop
mov
es
cwtl
xchg
lahf
inc
test
sub
xchg
test
cmp
and
cmp
jb
rclb
jbe
test
jp
mov
push
int3
lret
orl
les
nop
je
and
int3
sub
mov
and
int3
imul
cld
jp
imul
add
sahf
shlb
push
mov
cmpsl
mov
xor
adc
idivb
jnp
mov
pop
test
xchg
int3
shll
jb
movsb
aam
jo
out
movsl
pop
sub
xor
push
mov
cs
cmc
jo
mov
dec
adc
mov
pop
push
inc
hlt
sbb
loopne
test
mov
dec
xchg
inc
mov
cli
jl
stc
xchg
mov
dec
inc
xchg
jecxz
pop
pop
mov
push
push
sbb
bound
sbb
jns
js
das
push
shrb
xor
jmp
mov
push
mov
mov
clc
sbb
jns
fcmovne
or
push
dec
cmp
ljmp
call
jl
jb
movsb
fmuls
xchg
in
ds
jne
dec
popf
jle
and
outsb
ljmp
mov
aad
mov
aad
push
fmuls
fwait
daa
dec
insb
les
push
sub
and
inc
ja
iret
test
ret
insl
fcmovnu
or
adc
adc
xor
mov
sbb
xor
mov
push
dec
fistpll
and
lcall
jp
fidivs
lret
and
cmp
pusha
mov
mov
push
les
inc
test
mov
test
push
jo
push
jl
sarl
ret
and
jge
cmp
in
pop
std
rcr
mov
dec
cmp
jp
out
mov
int3
arpl
testl
clc
hlt
mov
mov
hlt
lods
pushf
mov
dec
data16
add
adc
add
pop
dec
xor
sub
aaa
pop
and
adc
mov
add
xchg
jo
aas
cmp
bnd
cli
fiaddl
fwait
call
or
out
in
orl
push
push
pusha
inc
cmc
mov
xor
or
rol
outsb
and
std
outsl
pop
in
xchg
rcll
jle
mov
mov
sbb
lcall
in
push
nop
test
arpl
in
and
sub
mov
sti
sub
adc
lods
repz
mov
sbb
mov
aam
bound
fmulp
arpl
adc
cmpsb
jmp
inc
inc
fsubr
nop
in
pushf
inc
stc
faddl
xchg
jp
arpl
dec
or
sar
sub
mov
stos
dec
mov
lret
and
clc
or
sub
jns
frstor
cmc
lret
jl
fcmovbe
xchg
ss
push
xchg
pop
nop
dec
mov
lret
sbb
das
fwait
mov
in
push
iret
or
mov
addr16
idivl
mov
scas
xchg
add
mov
movsl
imul
aam
xor
test
mov
sbb
sbb
clc
add
inc
pop
mov
and
int3
mov
sub
adc
mov
mov
add
adc
push
jmp
aad
sarl
insl
dec
ficomps
movsb
lock
adc
dec
les
sti
movsl
add
mov
popa
mov
test
mov
outsb
aad
adc
out
rcrb
cwtl
fs
adc
addr16
int3
add
inc
outsb
push
fsubl
xchg
sbb
test
nop
add
enter
fistpll
cmpsl
pop
and
add
or
push
mov
cmp
mov
stos
inc
mov
adc
and
gs
inc
inc
pushf
pop
pop
or
pop
lock
fimuls
and
xchg
push
xchg
jo
in
aam
jne
xchg
ds
inc
divb
bnd
jno
aam
inc
xchg
mov
and
pop
scas
andl
jb
gs
das
repnz
push
pushf
cwtl
enter
ficoms
jg
or
jge
cmpsl
and
aas
sbb
subl
in
aad
sub
push
movsl
leave
mov
xor
aaa
cmp
sub
cmp
outsl
xor
sbb
cmp
rcll
std
loopne
orl
jo
inc
cmpsb
push
cmc
adc
jmp
cmp
jg
ret
sub
je
incb
dec
shl
or
enter
and
xchg
push
insl
adc
stc
jl
test
add
sub
out
test
add
push
xor
xchg
xor
add
push
xchg
push
adc
adc
cli
out
leave
add
int
insb
cmp
pop
or
pop
enter
popf
in
js
mov
outsb
adc
bound
cmp
adc
pusha
mov
mov
lahf
mov
arpl
pop
stc
mov
stos
adc
or
pop
jg
imul
jnp
mov
test
cmp
inc
out
test
jo
push
popa
daa
push
mov
mov
or
push
imulb
repz
js
cmp
andl
xor
insl
std
std
xchg
pop
cld
outsl
sbb
cmpsb
cmp
and
ret
call
inc
fld
andl
dec
arpl
push
repnz
dec
mov
jge
and
pop
ja
fs
xor
inc
das
jne
fs
fadds
push
add
or
cmp
jg
dec
dec
loope
mov
es
adc
sub
xchg
lahf
cmp
sbb
xchg
sbb
xor
push
cmp
mov
sarl
fstpt
or
pop
cwtl
cmp
sqrtps
in
call
ret
xorl
xor
call
inc
sub
dec
lock
lods
cmp
pop
in
pop
xchg
outsb
lcall
daa
icebp
mov
mov
mov
push
out
aas
push
mov
jp
pop
xchg
mov
iret
sti
mov
loope
imul
and
and
ljmp
and
in
jno
pop
xlat
popa
lret
xchg
xchg
test
mov
add
inc
lods
mov
mov
repz
xchg
and
xchg
fdivl
insb
inc
dec
lcall
and
shll
sbb
aaa
test
js
ss
ret
xor
addr16
jno
dec
push
nop
stc
sub
arpl
test
mov
aam
popa
and
lcall
sub
lahf
in
lock
add
and
pop
push
or
add
fildll
push
push
adc
outsl
lods
xchg
jbe
adc
mov
popa
dec
pushf
divl
out
fwait
mov
add
pop
test
jne
mov
or
add
xor
lcall
movsb
in
cli
push
out
roll
mov
loope
lock
jae
xor
jo
mov
lods
sub
jmp
pop
lock
pop
fistps
movsl
fbstp
sub
pushf
fsubs
hlt
adc
xchg
fstps
shll
fmulp
movsl
cs
in
and
cld
pop
repz
add
clc
sub
jmp
dec
or
dec
rcrb
mov
and
stc
mov
adc
aaa
mov
idiv
add
mov
das
in
insb
push
push
mov
pushf
ret
imul
push
in
arpl
call
adc
loopne
adcb
sbb
loope
add
es
js
and
lahf
pop
add
adc
pop
pop
jnp
mov
dec
sbb
rolb
into
xlat
mov
cld
mov
jae
dec
push
add
test
push
and
mov
mov
lea
mul
inc
inc
adcb
movsb
push
jo
push
out
addl
pop
inc
call
dec
movsb
cmp
mov
cmp
int
jns
sub
push
lods
dec
adc
jp
fwait
mov
lahf
push
push
nop
ja
push
rcr
push
cmp
add
int3
or
ja
jae
iret
xchg
bnd
hlt
sbb
repz
int3
int3
outsl
enter
sub
add
lds
fnstsw
sub
push
hlt
lret
negl
and
or
scas
push
sub
repz
mov
push
jo
mov
stos
jnp
sbb
push
rcrl
pop
stc
into
add
hlt
pushf
js
mov
jmp
xor
call
dec
mov
mov
fcmovnu
mov
fisttpll
jg
in
cli
dec
cltd
push
cmp
lcall
rcll
popf
fisttpll
push
in
sub
xchg
sbb
outsl
pop
push
bound
ficomps
xor
push
aaa
lahf
data16
in
push
out
iret
pop
mov
les
push
vmread
pop
shlb
mov
xchg
mov
addr16
xchg
sbb
mov
scas
push
idiv
cltd
movsl
jge
jno
lea
cmp
adcb
adc
int3
out
and
int
ljmp
cmp
add
repz
sti
mov
lcall
mov
sub
jg
movsl
xor
out
adc
mov
xor
icebp
bound
mov
mov
jmp
call
outsb
out
and
push
cld
dec
or
dec
loop
sbb
clc
sbb
arpl
mov
inc
sahf
push
hlt
adc
loopne
out
ss
fmul
out
mov
orl
pop
imull
sbb
in
mov
popl
jb
hlt
push
push
push
mov
cmp
or
clc
dec
adc
or
je
out
jge
pop
shl
mov
enter
jl
inc
push
int
and
fcmovbe
scas
cmp
lock
push
add
inc
jne
fisttpll
lea
jae
cmpsl
in
lret
or
ljmp
ficoml
sbb
and
add
in
mov
loopne
lahf
cld
repnz
outsl
cmpb
ljmp
outsl
mov
ss
dec
test
ja
pop
and
sub
les
push
cltd
aas
pop
push
lds
push
dec
jp
cmp
push
dec
cs
dec
loopne
frstor
sar
std
pop
out
or
stos
popa
dec
pop
lea
jle
popa
sub
shrl
cmpsl
push
ljmp
mov
mov
fwait
iret
cmp
sub
cmp
mov
sbb
push
mov
push
pusha
repnz
das
inc
xor
shll
ljmp
mov
ljmp
add
jg
sub
pop
adc
ljmp
add
dec
and
loope
and
xchg
mov
imul
lock
in
call
or
xor
dec
sub
das
push
in
pop
push
cwtl
clc
xchg
ljmp
or
jae
push
jg
popa
out
xchg
dec
sbbl
xchg
push
cmp
mov
shr
xor
cltd
sbb
xchg
or
mov
lods
xchg
movsb
ret
ljmp
hlt
cmp
out
loop
mov
jo
insb
fistps
cltd
loop
mov
adc
hlt
dec
add
or
repnz
insb
and
mov
ljmp
add
incl
data16
aas
xor
out
dec
mov
pop
dec
jae
lret
rorl
dec
and
repz
push
mov
mov
in
repz
aaa
cmp
cmpl
push
or
jbe
and
pop
in
jecxz
cwtl
mov
pop
pop
loope
push
push
adc
aad
mov
nop
inc
sbb
lcall
gs
scas
xor
outsb
push
jg
sbb
insb
push
call
fists
icebp
jno
lock
scas
push
ds
sbbl
mov
ss
pop
cs
loope
cwtl
rcl
xor
insb
lea
into
dec
mul
or
cltd
addr16
rclb
xor
test
test
push
dec
sbb
ret
fsubrs
test
jb
jp
popf
mov
xor
inc
dec
sub
adc
ret
cmp
lret
ljmp
push
sbb
lea
push
sbb
adc
dec
lret
out
sub
adc
pusha
or
adc
pushf
imul
push
inc
imul
lahf
cmp
sbb
mov
push
sub
mov
mov
pop
push
cmpsb
outsb
inc
sub
push
xor
insb
fs
lahf
or
addb
insl
push
gs
rolb
out
daa
arpl
xor
add
test
push
pop
push
pop
pop
push
insb
jg
push
flds
mov
mov
or
cmpsl
mov
ret
int3
inc
stos
push
inc
daa
push
sub
sub
and
add
jne
pop
fidivl
shl
pop
cmp
ljmp
inc
pop
dec
popa
mov
pop
ljmp
fwait
pop
xor
insl
insl
cltd
or
ret
bound
push
jle
iret
push
adc
es
divl
mov
mov
les
ret
imul
js
add
pushf
outsb
cmp
jecxz
into
dec
insb
pop
sbb
push
movsl
fnsave
push
or
loop
cmc
mov
jno
cmpsb
int3
jnp
jo
rcll
leave
ss
pop
dec
inc
mov
xlat
jg
sbb
and
inc
lods
xor
cmpsl
jp
push
repnz
push
mov
mov
jo
out
jp
cmpsb
sub
adc
mov
mov
shrb
push
xor
dec
xchg
jg
pop
mov
es
pop
pop
sarl
inc
pop
bound
inc
call
xchg
cmp
and
xchg
pop
mov
push
mov
dec
hlt
xchg
popf
repz
xor
aam
movsb
push
and
adc
cmp
arpl
xor
dec
jp
popf
into
fisubl
jne
fimuls
xor
sahf
lods
lock
fcoml
pop
sub
sbb
adc
sub
loop
in
scas
sub
mov
leave
aad
ljmp
xor
outsb
call
dec
mov
shrb
not
inc
aas
rorb
jp
lret
testb
aad
add
shlb
imul
add
popf
lods
in
sub
dec
arpl
jecxz
pop
push
dec
es
mov
adc
mov
xor
lock
adc
cmpsb
repnz
outsl
rep
lods
xorl
lods
cmp
out
daa
inc
push
cmpb
add
inc
cwtl
test
mov
sbb
cwtl
stos
test
fsubs
fwait
push
mov
insb
cmp
insl
testb
or
movsl
test
push
and
jecxz
xchg
cmc
xchg
test
sahf
and
or
xorl
cmp
pop
xchg
cs
fdivrs
popa
or
cld
rol
mov
fstpt
mov
mov
das
add
xchg
movsb
or
rolb
insb
inc
add
shll
lret
cs
popf
xor
push
jns
sub
addr16
imull
adc
xchg
cmp
push
mov
add
aam
lock
mov
xorl
sub
jp
mov
sar
cmp
repz
push
cmp
lods
pop
popf
mov
pop
out
gs
cmp
cmc
add
and
sti
mov
dec
fdivrs
inc
es
or
out
aas
test
movntq
lods
test
sbb
push
adc
cmpsl
xor
jno
inc
xor
rcll
fadd
mov
je
mov
scas
daa
pop
xchg
test
in
mov
in
xchg
adc
add
cmp
or
nop
pop
inc
je
cltd
jg
pusha
lret
pop
lahf
arpl
pop
push
inc
das
ret
xorb
sbb
cmp
int3
shll
push
cli
inc
insl
cmc
pusha
ret
mov
lds
mov
or
add
fisubrs
xchg
stc
mov
push
push
sbb
mov
fwait
pop
xchg
rcr
imul
cmp
mov
add
jae
testb
aas
das
dec
ljmp
cwtl
and
scas
in
add
int3
jns
and
jno
mov
cmc
aad
mov
mov
inc
pop
cmc
filds
push
lret
stos
aas
cmpsb
inc
push
jecxz
test
in
add
push
add
jl
adc
dec
sar
xchg
aam
lahf
ds
inc
mov
ret
aas
fwait
ljmpw
out
mov
cltd
adc
fiadds
fidivrs
xchg
mov
data16
call
sub
mov
xlat
sbb
and
jl
addb
jae
test
sbb
popa
test
sarl
cli
ficoml
dec
lods
repnz
jle
cmpb
pop
popf
add
xchg
sub
push
mov
add
inc
movsl
pop
rcr
add
jg
sub
mov
sbb
popa
aad
push
xor
mov
cmp
stos
loopne
cmp
mov
cmp
mov
jl
sbb
mov
mov
mov
and
ja
mov
push
sarl
add
loope
push
fisttpll
lds
jno
leave
adc
jae
stc
int
mov
pusha
sub
sbb
outsl
dec
insl
nop
lods
or
dec
pop
in
rclb
and
in
cld
daa
jmp
adc
add
in
dec
out
out
sub
xchg
push
push
imul
outsb
in
insl
sar
pop
add
cli
jle
add
push
les
push
sbb
jno
scas
out
mov
mov
out
into
jmp
sarl
cld
fsub
std
orl
xchg
xchg
pop
cmpsl
mov
cmc
sti
gs
outsl
mov
movsb
sbb
sbb
inc
add
imul
push
cli
iret
cli
mov
mov
ret
or
xchg
outsl
dec
mov
mov
pop
xchg
jg
mov
pop
fdivrs
pusha
cwtl
jge
cld
std
jo
mov
adc
push
mov
add
and
aas
out
sahf
jo
jle
les
aaa
sahf
mov
cli
out
xor
push
das
mov
mov
jns
or
add
out
stos
jg
jecxz
lahf
aas
loop
xlat
iretw
fildll
ja
inc
fstpt
add
jae
mov
ficompl
cmpsl
loope
ljmp
push
icebp
in
popw
stos
or
inc
mov
push
mov
fwait
sbbl
dec
add
cmc
fs
das
adc
cmc
sub
aas
insl
pop
fldcw
insb
pop
dec
or
xchg
mov
jo
fdivrl
je
mov
mov
popf
adc
mov
and
xchg
mov
xor
push
idivl
xchg
fiaddl
fdivrp
pop
shrb
lock
loope
push
mov
inc
jmp
ret
jl
inc
ret
push
jnp
inc
incl
idivl
add
shrl
das
addl
cmp
sub
add
nop
add
add
xchg
xchg
sbb
mov
xchg
push
push
es
mov
fbld
push
ret
rclb
cmc
cmp
or
iret
mov
xor
mov
dec
pop
or
xchg
ret
ja
sbb
and
daa
cmpsb
repz
loope
in
jecxz
mov
cli
cmp
pop
mov
cmp
and
iret
jmp
dec
xchg
mov
mov
ds
js
sbb
xchg
shlb
int
lds
ljmp
inc
jl
push
pop
out
add
pop
out
pop
push
stos
aas
mov
cli
inc
in
cmpb
cli
cld
dec
adc
popf
fildl
mov
add
cmp
fs
push
push
cmpsb
lds
enter
inc
imul
pop
daa
les
test
adc
negb
jae
jbe
push
cmpl
sub
fisubrs
insl
and
xor
pop
cltd
data16
mov
xlat
jnp
pop
and
adcb
inc
cmp
imul
sti
lret
data16
inc
mov
repnz
cmc
pop
or
xchg
xchg
lds
xchg
hlt
insb
loope
pop
das
xor
imul
lock
inc
cmp
pop
pop
in
push
sbb
loopne
dec
xor
mov
insl
and
push
inc
xorb
orl
int
stos
xchg
repz
push
insl
outsb
push
les
dec
sbb
arpl
adc
cmp
mov
dec
cld
adc
outsb
jp
lahf
push
mov
pop
outsl
mov
fucomi
mov
add
cld
frstor
outsb
sbb
xchg
xchg
push
push
cs
mov
jmp
xchg
std
clc
cmp
je
adc
mov
xchg
push
add
add
ret
lock
imulb
sahf
jo
in
mov
adc
leave
inc
xor
sbb
pop
call
daa
cmp
sti
lret
icebp
inc
jmp
mov
xor
pusha
pop
enter
ss
sub
out
loopne
mov
xchg
jp
andb
and
inc
stos
pop
or
pushf
jl
jns
shl
rcrb
scas
int
mov
cmp
daa
bound
xor
das
mov
arpl
daa
lcall
inc
and
outsb
xchg
mov
mov
mov
nop
and
pusha
push
push
push
sub
xor
adc
sub
inc
inc
inc
es
insb
movsb
push
mov
inc
push
mov
iret
mov
pop
sti
push
and
test
push
int
jp
out
push
xchg
sbb
xlat
mov
gs
icebp
dec
je
fmuls
in
mov
loop
pop
aas
test
fdiv
ljmp
mov
mov
aas
jne
xchg
repnz
icebp
rcll
mov
xchg
bnd
mov
fwait
aaa
subl
ljmp
pop
icebp
imul
lret
add
rorl
orl
cmp
add
xor
sbbl
jbe
jg
ljmp
mov
jg,pn
lcall
pop
ret
lcall
cmp
sbb
fsubr
pushf
inc
push
sahf
pop
or
insb
sbb
enter
ffree
cmp
nop
repz
mov
cmpl
and
xchg
pop
sub
shll
mov
mov
gs
inc
adc
inc
cmp
mov
stos
adc
imul
out
sbb
cmp
repz
insb
and
out
xchg
xor
lret
sbb
mov
mov
xchg
or
js
iret
pop
cli
outsb
mov
adc
fcoms
sub
cmp
mov
cmp
aam
and
andb
add
sbb
out
mov
icebp
jecxz
enter
xchg
dec
xchg
push
je
vpshab
add
jns
popa
je
pop
and
rol
out
adc
fistl
or
jb
push
dec
sub
cwtl
xor
and
cltd
movsl
pusha
ja
sbb
inc
mov
dec
mov
dec
mov
inc
aam
xor
daa
cltd
fisubrs
fldenv
das
stos
jecxz
js
cltd
pop
outsl
imul
sub
daa
pushf
mov
mov
pushf
test
mov
sub
stos
ficomps
push
ss
or
mov
dec
xor
mov
movl
clc
add
inc
lret
jp
clc
loopne
cmp
xchg
and
jno
das
jnp
aad
into
or
xlat
gs
or
jmp
or
int
xor
ja
adc
mov
mov
outsb
and
and
lret
std
mov
cs
mov
dec
ret
xor
cli
iret
push
sub
scas
enter
aaa
or
xor
imul
outsl
push
aas
push
int3
jp
sbb
pop
sti
fucomp
cld
push
psubw
push
jae
dec
ret
mov
repnz
icebp
adc
loop
insl
subb
cmp
push
lahf
outsb
mov
movb
insl
xchg
pop
repz
js
aam
cmp
push
into
mov
call
pop
lea
inc
xor
lahf
and
mov
cmp
in
inc
jae
fsubrl
pop
jo
xchg
pushf
js
adc
xlat
movsb
mov
mov
add
arpl
call
dec
bnd
ret
sbb
xorb
icebp
push
xchg
adc
loopne
icebp
mov
out
call
mov
cmp
out
sbb
xchg
addr16
mov
loop
dec
push
aaa
fisttpll
pop
and
cld
mov
popa
and
out
push
jmp
out
je
loop
push
mov
adc
jp
cmpsb
cli
jg
or
cmp
xlat
mov
fwait
xchg
mov
mov
dec
out
imul
push
pop
mov
dec
xchg
mov
xor
ja
inc
mov
enter
out
sub
stos
pop
div
addr16
fs
or
in
mov
scas
aam
test
sbb
mov
xchg
shll
addr16
sbb
mov
cmp
fsub
pop
adc
mov
ret
xchg
adc
mov
jb
loopne
inc
loope
test
jmp
lret
mov
push
jmp
fisubl
in
adc
jne
inc
aaa
filds
mov
fidivl
leave
push
pop
inc
shr
lock
jg
movsb
inc
fidivrs
loopne
in
mov
push
lods
imul
mov
lcall
dec
repnz
mov
fwait
cli
sahf
cli
jle
add
shl
adc
dec
pop
std
push
jge
and
testl
xchg
ja
jno
xor
pop
lcall
push
add
addr16
stos
out
clc
and
xor
pop
rol
bound
add
sbb
les
dec
jp
mov
sar
and
inc
pop
cmp
shll
push
es
jo
je
mov
ljmp
mov
xchg
xor
shl
jecxz
sbb
aas
dec
mov
rclb
aad
push
movsl
push
mov
shlb
loopne
into
xor
insb
jg
cs
les
cmp
cmpsl
das
jmpw
insb
rcll
int
sahf
mov
ret
fisubl
pop
cmp
push
add
pop
xchg
js
push
jo
jl
sbb
inc
mov
or
aaa
mov
xchg
repnz
mov
jbe
fs
mov
jno
sub
jmp
xor
mov
adc
lret
rcl
jg
je
stos
test
or
daa
inc
pop
xchg
xor
lds
dec
xlat
in
mov
jbe
and
ja
sub
gs
int3
fisttpll
cmp
cs
aad
ja
add
lret
mov
add
shr
sbb
cmp
xchg
dec
and
push
mov
xor
aas
icebp
fcmovu
incl
shll
lock
xchg
mull
xchg
out
mov
or
dec
mov
fnstcw
adc
dec
insb
fimuls
dec
inc
cmpsb
aam
mull
movsl
pusha
cmp
pop
hlt
std
mov
and
rclb
pop
ret
fwait
test
sub
push
and
push
insb
xor
out
dec
mov
sbb
dec
xorb
jne
imul
stc
scas
mov
and
test
not
cs
jno
jmp
adc
sbb
jge
mov
inc
or
insl
sarl
push
dec
mov
dec
ljmp
lahf
fnstcw
cmp
shlb
mov
test
fidivs
and
repnz
test
or
pop
lcall
out
push
nop
mov
outsb
adc
test
xchg
mov
fdivr
cmp
jbe
lret
testb
pop
sbb
lock
pop
adc
pop
mov
shrl
fcmovnb
push
lods
ret
out
fdivl
mov
cmp
movsb
jmp
adc
shlb
shll
mov
xchg
fs
or
ficomps
mov
pop
popf
das
mov
imul
jns
sbb
out
push
push
dec
iret
xchg
dec
imul
jg
loop
rorl
cmp
mov
test
mov
aas
cmp
push
insb
xor
pop
es
xchg
cmpb
lods
ja
popf
out
fwait
cwtl
ficompl
les
aam
xchg
inc
sub
push
push
adc
mov
pop
test
test
and
add
inc
mov
mov
repnz
push
xlat
ja
xchg
sub
loop
jns
xor
daa
in
mov
push
call
pop
or
out
sbb
popf
in
fwait
nop
push
test
dec
lods
mov
inc
inc
mov
out
mov
xchg
or
test
adc
adc
sbb
mov
ds
add
mov
addr16
lods
or
mov
in
mov
adc
lea
cmpl
cltd
lret
push
mov
jae
rclb
mov
shlb
and
xchg
mov
cmc
and
das
jp
xchg
in
push
sub
outsl
cmpsb
or
into
movsl
pop
hlt
lods
push
ja
pushf
aas
les
or
jle
fstps
ss
jno
cmpsb
pop
std
aaa
dec
mov
into
shlb
jo
cld
cs
cmp
lcall
pop
mov
mov
mov
dec
mov
xor
ds
jo
adcb
pushaw
icebp
sub
cmpb
xlat
inc
sub
add
pop
bound
lods
mov
sbb
test
rcl
and
lea
or
cs
push
mov
adc
jle
inc
pop
arpl
pusha
loop
ja
sti
cmp
cmp
call
dec
sub
mov
mulb
add
lods
loopne
orl
pusha
xchg
test
sub
dec
xor
jne
imul
pop
shlb
xor
adc
fstps
mov
jns,pt
sub
adc
nop
xor
imul
int
stos
bound
daa
lods
pop
sbbl
jg
mov
push
cld
add
fcoms
outsl
cmp
repnz
nopl
and
xor
dec
add
push
jmp
sbb
orb
lahf
aas
aam
xchg
das
and
popf
mov
push
fcoms
push
cmc
push
in
sub
in
outsb
xchg
stc
es
aaa
scas
mov
popf
add
mov
cmp
push
dec
insl
data16
es
test
ljmp
out
mov
xchg
enter
xchg
int3
cli
aaa
leave
lahf
enter
out
loope
aad
out
int
int
mov
aaa
test
xchg
jecxz
xorb
jp
and
stc
cld
and
loop
xor
aad
xchg
lcall
xchg
sub
imul
in
pop
jne
addr16
pushf
xchg
lcall
int
mov
loop
push
and
xor
shll
and
rorl
test
inc
or
lret
dec
stos
push
mov
cmpsb
adc
lret
and
adc
mov
into
bound
sbb
xor
inc
decb
push
mov
cwtl
sub
or
addr16
jg
jne
lock
stos
btc
jnp
outsl
roll
pop
outsl
js
test
pop
xorl
add
ficompl
or
xor
and
xor
cs
call
push
pop
test
shrb
xor
ret
ret
jle
scas
push
xchg
addr16
add
test
popa
popa
ljmp
loop
adc
enter
stos
test
add
outsb
nop
ficompl
movb
pop
or
loope
push
aaa
cmc
xorb
sar
repz
xchg
pop
pop
mov
cmp
inc
repnz
inc
ljmp
add
dec
int
cmpsl
xor
mov
and
lret
orl
lock
shrl
push
fsub
test
dec
jl
jno
pop
cwtl
rorl
fimuls
negb
pop
cwtl
mov
jmp
in
clc
add
sub
sub
scas
xlat
divl
insl
repnz
adc
dec
push
sub
xchg
popa
or
in
inc
inc
fnsave
mov
jge
pop
movsl
cmp
divl
pop
call
pop
test
scas
inc
rclb
loopne
and
int
xchg
loop
loopne
add
mov
in
notl
pop
xchg
adc
pop
cli
jnp
movsl
fxch
jmp
adc
lret
and
xor
sub
and
add
loop
jle
subb
shlb
inc
nop
out
mov
popa
inc
push
lods
sti
pop
mov
lods
testl
mov
fisubrs
sbb
sub
jl
pop
or
adc
mov
dec
xor
mov
fistpll
xlat
in
adc
or
inc
mov
mov
jno
mov
pop
ret
inc
push
repnz
inc
addl
sbb
inc
testl
inc
push
and
aas
jae
in
cmc
pop
jno
cmp
stc
mov
popf
or
push
in
fdiv
testb
push
test
shl
icebp
mov
pop
in
clc
movsl
dec
out
pop
in
pop
out
enter
push
push
xorb
or
and
add
inc
pushf
stc
jg
outsb
mov
pop
ljmp
mov
aad
in
pop
cmp
movsl
mov
loopne
pop
push
mov
sub
test
inc
or
add
lcall
cld
lret
popf
adc
mov
sti
add
out
dec
imul
in
lcall
add
mov
and
cmp
in
daa
dec
or
inc
outsb
icebp
imul
cmp
imul
ss
jo
adc
and
cltd
and
les
push
lret
dec
nop
mov
subb
jb
popf
jno
pop
addr16
dec
add
popa
jbe
mov
lds
xchg
adc
adc
sarb
js
push
mov
mov
add
rclb
adc
or
xor
popf
pop
mov
sbb
sarl
rolb
inc
xor
push
mov
cmp
or
out
in
mov
pop
add
bound
inc
pop
jae
mov
and
je
mov
pop
test
mov
cmp
pop
cltd
icebp
fidivrs
add
insb
jmp
in
dec
test
jns
cmp
or
add
in
mov
and
fwait
adc
xchg
or
fstpt
mov
fwait
cmp
ja
pusha
movsl
mov
or
adc
cmp
fs
ja
repz
mov
cwtl
xor
add
or
mov
out
cmp
adcb
in
push
jmp
push
sbb
dec
sub
xorb
push
bound
xchg
mov
sub
pop
ret
xchg
fists
lcall
stc
lret
rcrb
inc
std
popa
pusha
sub
test
xchg
adc
sahf
outsb
shll
and
in
scas
sbb
in
jne
push
jbe
int
xchg
cwtl
and
es
mov
dec
push
movsl
dec
popa
mov
sub
or
cltd
stos
insb
jge
cmp
cmp
push
loop
jecxz
adc
test
in
leave
inc
xchg
sub
push
sti
enter
imul
mov
mov
xchg
jb
xor
bound
testb
dec
push
call
jmp
ss
scas
jns
in
incl
jne
push
dec
pop
xchg
push
imul
jge
mov
outsb
sub
int
sub
sahf
dec
icebp
push
lcall
dec
cld
cwtl
cmpsb
pop
or
sub
mov
mov
cltd
jno
aam
cmp
xchg
sbb
adc
push
push
mov
and
fisubrs
sbb
leave
out
idivb
gs
xchg
xchg
sub
jmp
dec
je
xor
dec
push
adc
push
lret
jp
scas
inc
inc
push
and
aam
aaa
imul
and
push
lds
test
out
and
loop
or
leave
adc
addr16
in
push
mov
incb
jbe
mov
mov
dec
lea
add
comiss
popf
shll
pop
jno
shll
test
les
sub
dec
xchg
imul
and
pop
daa
pop
fdivp
out
xchg
add
inc
sub
inc
cmp
stc
shlb
fldln2
mov
sbb
add
mov
cmc
mov
push
lods
int
jmp
aaa
dec
xor
data16
mov
push
inc
jo
xor
push
add
or
pop
movsb
dec
cmpsb
xor
cmp
xor
xchg
iret
push
or
or
aaa
lahf
cli
leave
arpl
mov
popf
movb
xorl
adc
aam
icebp
dec
call
imul
ss
daa
xchg
fs
mov
xor
jb
sub
push
dec
jmp
lret
and
shrl
add
mov
dec
add
push
pop
cs
enter
cmp
cli
xlat
sahf
jmp
repnz
jg
and
add
leave
out
pop
mov
repz
fmul
sbb
pop
clc
jnp
adc
mov
es
rorl
pop
repnz
xor
pop
xor
and
ret
pusha
aad
sbb
pop
sub
out
sub
jge
or
xor
jb
stc
ljmp
jp
adc
cmpsl
mov
aaa
lret
mov
aaa
sub
cmp
sbb
and
pop
aam
fwait
and
test
decb
insl
jle
or
push
mov
xor
daa
inc
mov
test
je
mov
repz
stos
cwtl
lcall
js
gs
mov
sbb
shlb
pop
fldl
mov
pop
scas
xchg
inc
push
push
pop
insb
clc
scas
lahf
xorb
gs
pushf
xchg
mov
mov
test
jo
fsubrl
mov
out
cwtl
std
push
cmp
in
sbb
in
insb
mov
pop
repz
adc
mov
movsb
clc
jbe
push
int3
std
out
jmp
xchg
jo
pop
nop
and
xchg
sbb
sub
mov
cmc
xchg
adc
mov
sub
fildl
imul
out
add
imul
std
add
sbb
mov
mov
popa
nop
and
cs
mov
bound
in
pushf
hlt
std
aas
mov
cwtl
and
mov
sti
sbb
jns
fwait
inc
or
lret
sbb
jg
movsl
mov
cmpsl
fcompl
bound
jecxz
xchg
cmp
mov
xchg
fsubrl
stos
xor
stos
jecxz
test
rorl
add
loopne
cmp
add
iret
add
and
sbb
sbb
fidivrl
dec
ret
push
aaa
pop
shll
fisttpll
jmp
xor
and
jb
jae
jle
fists
add
jmp
mov
mull
cmp
and
shrl
or
movsb
lea
sbb
sub
sbb
pop
cmp
dec
int
push
pusha
xlat
pop
jmp
cmovne
cmpsl
mov
daa
shl
inc
adc
hlt
mov
push
repnz
and
xchg
mov
lock
data16
insl
shlb
push
call
out
inc
cltd
faddl
rclb
loope
mov
xor
pushf
int
movsb
add
test
cmp
mov
mov
les
adc
cli
fcoml
rcr
mov
xchg
clc
and
aad
fimuls
cltd
mov
xchg
test
mov
jnp
xchg
dec
and
dec
xor
ret
push
dec
xor
and
das
ds
sub
jne
mov
jl
test
and
inc
xor
add
pop
leave
and
sbb
subb
pop
daa
gs
in
xchg
mov
in
jnp
stos
stc
or
std
jle
cli
addr16
daa
mov
iret
pop
lret
add
xchg
das
mov
add
push
xchg
jl
inc
mov
mov
out
out
cmp
pop
xchg
lods
aaa
mov
push
xor
push
mov
push
jns
std
inc
int3
inc
lods
dec
out
sub
enter
sar
das
jo
rcrl
cmp
cmp
mov
mov
push
outsl
ret
mov
daa
jne
or
data16
adc
mov
iret
lds
xor
int
jb
fsubl
dec
lret
roll
cmp
pushf
gs
out
sbb
cmpsl
xchg
xchg
cmp
addb
jae
cwtl
ficoms
insl
bswap
cmpsb
ljmp
inc
outsb
test
mov
push
inc
es
fiaddl
adc
push
pusha
pusha
mov
addr16
and
lahf
jecxz
ret
rcll
add
and
into
ds
aam
rclb
in
int3
mov
sub
or
jno
mov
push
xchg
test
mov
icebp
sub
xlat
add
mov
xchg
lods
cmp
dec
ja
adc
add
jge
xchg
or
cmp
add
push
and
sbb
xlat
insb
out
sti
cwtl
pshufw
bound
imul
insb
repz
jae
pop
push
push
xor
test
mov
cmp
aas
sbb
pop
test
ret
icebp
mov
dec
dec
xchg
and
shrl
or
cltd
pop
mov
ficoms
iret
movsb
xchg
dec
test
push
nop
es
adc
pop
int
ror
inc
call
sub
sbb
movsl
leave
out
mov
xor
jmp
jns
jbe
ljmp
outsl
dec
cli
call
pop
add
cmp
clc
shrb
cli
pop
test
xchg
and
pop
stc
inc
rorl
fistl
adc
xchg
mov
rcrl
pop
xchg
xchg
das
push
sbb
or
cld
fs
cli
xor
leave
lock
imul
xchg
enter
xchg
inc
add
sbb
lods
mov
and
repz
pop
pop
jnp
bound
jmp
call
ja
imul
ficomps
or
cmp
cmpsb
int
stos
loopne
cmpsl
jne
mov
std
sbb
movsb
les
aas
mov
cmp
arpl
mov
sbb
or
cld
jg
dec
cwtl
jne
mov
xchg
fstpl
nop
xor
call
adc
loop
push
push
xorl
mov
test
in
stos
scas
cmp
stos
cmc
mov
lcall
pop
fisttpl
cmp
clc
enter
rorb
jns
test
aad
cwtl
je
mov
mov
dec
dec
sub
jp
add
add
jns
mov
lret
mov
jne
ret
jno
and
xorb
aad
xchg
dec
rolb
das
cwtl
xchg
push
loope
pcmpeqw
cmp
inc
popa
mov
fcompl
stos
inc
cmp
push
out
sbb
mov
loop
xchg
enter
add
sub
dec
and
cmpsl
xchg
fwait
push
jns
lods
into
cmp
imul
sbb
ret
xchg
test
seto
adc
repnz
push
jns
pop
dec
sub
cmp
xor
mov
test
add
mov
cmc
aaa
push
adc
pop
or
jnp
jbe
xor
push
popf
ss
aad
je
push
cmpsl
lds
or
lea
cmpsb
adc
cmp
movsl
and
cmp
pop
and
aam
jge
rorb
pop
adc
test
sub
push
push
push
imul
movsb
stos
data16
jo
call
sti
in
nop
inc
mov
and
jge
lahf
cmp
in
repz
push
xor
pop
shlb
sbb
lods
xor
out
int
fucom
pop
punpcklwd
dec
xlat
in
jae
pushf
xchg
xor
scas
pop
jl
add
sbb
lods
or
std
inc
adc
test
add
add
xor
imul
mov
jnp
pop
jnp
jns
push
push
cmp
ret
jno
sub
je
loopne
cwtl
ja,pt
mov
movl
xchg
outsl
stos
mov
int
xchg
rorl
out
sub
je
push
mul
arpl
and
ss
pop
xchg
mov
ficomps
sub
scas
icebp
das
lahf
push
test
add
mov
mov
or
mov
xor
mov
xor
add
lea
orl
inc
add
jge
mov
cmp
dec
inc
sub
cmp
push
mov
repz
test
leave
sti
fwait
cltd
mov
sub
addr16
sbb
mov
negl
jecxz
shr
mov
xchg
push
xchg
ds
lret
push
lcall
push
jne
inc
ljmp
add
add
stos
mov
mov
dec
movsb
ss
fimuls
xchg
fs
sbb
mov
dec
push
mov
push
jg
pushf
adc
pop
lgdtl
test
jns,pt
cmpsb
lcall
jp
mov
leave
and
jg
loopne
add
cmp
pop
or
mov
xchg
and
lret
pop
loope
stos
repz
in
mov
mov
inc
pushf
in
ljmp
gs
push
imul
sbb
xchg
or
mov
clc
adc
mov
sbb
xchg
inc
test
mov
jp
lret
popa
out
cmpsl
jae
cmp
dec
ds
cs
stos
jns
jae
bound
fisttpl
std
xor
popf
call
aas
rcll
fsubr
adc
aas
xchg
lods
push
mov
ffree
jae
in
jo
sarl
push
xchg
jecxz
cmpsb
fsts
test
mov
adc
pop
xchg
test
adc
lcall
iret
jb
icebp
pop
sbb
je
adc
popa
cmpsb
mov
jo
ja,pt
mov
mov
icebp
mov
sub
push
mov
push
in
add
jecxz
repz
push
hlt
mov
adc
sub
ja
lahf
test
or
and
int
lret
dec
scas
pop
mov
in
mov
mov
pop
out
push
adc
movsb
sub
push
pushf
add
dec
xchg
loopne
fxtract
iret
push
pop
push
push
mov
cltd
enter
inc
arpl
mov
add
push
imul
jl
sahf
xchg
mov
jl
jo
xor
loop
orl
bts
inc
notl
inc
lods
push
aad
cwtl
repnz
push
jmp
movsb
push
push
mov
and
mov
addl
add
fistpll
xlat
sbb
ds
jecxz
mov
xchg
mov
cltd
xchg
mov
pop
es
dec
inc
jne
out
fidivl
movsb
mov
mov
cmp
pushf
dec
inc
and
arpl
add
shlb
inc
mov
out
adc
mov
inc
or
movsb
pop
mov
aad
popa
pushf
sarl
mov
loop
mov
sar
and
push
andl
addr16
pop
add
repz
call
hlt
js
dec
fbld
jp
ljmp
fldl
mov
add
add
xchg
mov
int
adc
dec
sub
outsl
lea
xchg
jo
es
add
dec
xchg
sub
imul
hlt
gs
push
jns,pn
jmp
rorb
sub
into
aad
fidivl
mov
in
adc
into
mov
pop
pusha
mov
ret
dec
lcall
adc
js
int
rcll
pushf
rcrb
clc
movsb
sbb
daa
sbb
sbb
frstor
cmp
xlat
call
mov
jp
push
pop
dec
xor
fcoms
mov
adc
xchg
leave
push
addb
mov
adc
fisubrl
cmp
adc
push
lcall
cmp
adcl
cli
aaa
dec
insb
mov
jge
test
icebp
xchg
int
xor
and
push
xchg
add
add
test
push
outsb
xor
inc
pop
scas
add
fsubrl
cmp
jne
lods
pop
adc
fidivs
inc
addb
call
mov
test
test
clc
add
and
sbb
cwtl
ret
mov
call
das
sub
mov
jl
insl
mov
addr16
aas
rcrl
ja
dec
mov
inc
lahf
jp
imul
call
sti
cmp
mov
shl
xlat
movsb
add
testl
adc
xor
mov
stos
mov
add
cmp
aas
push
jae
arpl
lock
xchg
adc
adc
adc
repz
popa
mov
mov
push
cmp
fst
xorl
jb
mov
ficompl
cmp
push
push
fistps
scas
les
fcmovbe
ljmp
iret
cli
cwtl
and
xchg
lcall
mov
jecxz
jnp
mov
fldenv
push
popa
sub
push
and
sub
out
pop
and
cmp
stos
ss
lods
rorb
sbb
popa
push
sti
sbb
out
lahf
adc
mov
into
int3
dec
lods
cmpsl
pop
or
sub
jb
fcoms
mov
lock
rclb
jae
cwtl
dec
push
sbb
leave
sub
dec
mov
das
xor
cmpsb
sbb
xchg
xchg
jb
test
xchg
and
int3
daa
mov
cmp
cltd
adc
sbb
and
cld
lea
gs
mov
fbstp
scas
inc
scas
jo
sub
sub
mov
xor
jmp
call
ds
flds
mov
pop
cltd
dec
jle
cmpsl
push
cmp
push
ljmp
idiv
add
xchg
sarl
maskmovq
pop
aam
mov
mov
inc
lret
or
and
sbb
lahf
subl
xchg
jnp
lahf
fmull
lea
inc
cwtl
mov
pushf
sti
rcll
ss
mov
push
jge
cs
in
jno
mov
fdivrl
out
ret
push
dec
push
pop
jge
adc
push
jg
or
daa
or
dec
adc
mov
sbb
js
sbb
adc
test
mov
push
lret
mov
pusha
xorb
dec
sub
pop
aaa
sbbl
inc
ds
aam
sbb
mov
fldt
push
mov
fisubrs
mov
dec
int3
aad
jns
pusha
mov
mov
or
xchg
and
scas
mov
in
ret
cmp
pushf
mov
arpl
rorl
fwait
cmp
mov
jecxz
out
and
push
movsl
mov
cmp
xchg
mov
jle,pn
inc
pop
stos
mov
jecxz
test
cmp
mov
pop
out
rcl
das
lahf
call
lods
jmp
pop
sub
sub
dec
jbe
icebp
test
add
push
xchg
sbb
pop
or
mov
rcll
inc
les
push
stos
inc
and
dec
dec
insl
xchg
les
mov
popa
jecxz
mov
push
mov
jp
xchg
inc
ds
lahf
cmpsl
xchg
leave
loopne
push
xchg
daa
icebp
push
int3
or
ja
lahf
leave
ret
adc
pop
pop
mov
lods
adc
mov
mov
ljmp
adc
and
mov
jno
and
fwait
inc
and
push
xchg
push
flds
mov
adcl
mov
aad
rolb
loope
cmp
dec
ja
cmp
icebp
mov
fcmovnu
pop
cmp
mov
push
push
imul
mov
and
sbb
add
stc
loopne
fbld
xor
xchg
jmp
clc
sub
add
fs
add
dec
xchg
dec
cld
mov
mov
mov
sub
xchg
loopne
xchg
imul
leave
pushf
sahf
fsubrl
gs
add
sbb
pop
outsl
push
cmpsl
in
cmpsb
push
xchg
insb
adc
add
dec
inc
dec
ret
push
mov
lock
dec
adc
idivl
pop
rclb
sub
xlat
mov
out
ret
ret
mov
push
push
pop
mov
int3
jno
adcl
inc
ss
lock
mov
pop
lea
gs
insl
mov
lds
loopne
push
sbb
imulb
push
popa
mov
cmc
inc
ret
push
sahf
jo
stos
lock
jecxz
mov
roll
nop
mov
pushf
sub
test
adc
out
gs
inc
mov
aam
lahf
test
mov
push
cmp
sbb
in
or
mov
imul
test
lcall
fsubrl
adc
outsb
and
out
inc
cmp
pop
mov
and
and
mov
pop
jl
lods
xchg
clc
and
out
xchg
or
push
fwait
and
jge
dec
pushf
das
stos
mov
mov
jbe
sub
xor
jo
dec
xor
sbb
mov
inc
or
xchg
adc
xchg
cli
mov
out
in
imul
sub
xchg
js
lahf
lds
pop
add
xchg
mov
sbb
roll
xchg
cmp
sub
movl
mov
dec
data16
jg
xchg
mov
mov
push
push
push
lcall
sbb
inc
icebp
je
in
arpl
gs
sbb
and
and
sarl
pop
mov
dec
dec
rcrl
mov
sbb
dec
pop
ret
jle
leave
push
inc
or
rcrb
imul
sub
fldt
xchg
cmp
and
dec
icebp
aas
inc
push
push
mov
pushf
insb
outsl
enter
fiadds
mov
sbb
mov
and
pushf
repnz
dec
cmp
mov
xchg
cmpsl
sub
insl
js
mov
and
add
adc
and
or
addr16
pop
dec
mov
xchg
sub
cmc
jge
leave
int3
outsl
mov
dec
cmp
pop
jne
loope
sub
inc
cmp
cmp
call
loopne
test
out
mov
or
hlt
mov
std
add
xor
jmp
jnp
sbb
sahf
js
arpl
or
divb
stos
jp
xlat
popf
inc
adc
sti
loope
mov
and
lcall
ss
sbb
inc
mov
setnp
in
xor
add
fnstsw
sbb
stc
popa
lcall
pop
insl
das
andb
mov
cmp
es
inc
mov
aam
sbb
imul
leave
out
rclb
mov
test
xor
sbb
mov
aam
push
push
test
ljmp
sub
jg
mov
ret
mov
cmpsb
mov
test
fnstcw
sub
inc
lods
mov
xor
lret
xchg
jne
or
faddl
clc
nop
movsb
repnz
call
xchg
mov
stos
lea
pop
das
test
rcll
xor
jmp
mov
and
inc
ljmp
mov
les
mov
inc
idivb
iret
ja
stc
out
pop
mov
add
sahf
aad
xor
enter
xchg
pop
inc
mov
popf
jp
pushf
fwait
mov
push
adc
sub
orb
cs
lcall
jns
fistl
xchg
and
mov
push
mov
inc
lods
adc
enter
fistpl
sub
and
ror
mov
loop
shll
scas
mov
mov
jg
cmc
cli
setg
jne
jne
data16
xor
pop
insl
xchg
in
aam
lcall
mov
nop
mov
adc
je
mov
inc
mov
loop
clc
into
leave
inc
and
outsb
in
push
xlat
adc
cmp
sbb
sbb
ljmp
lock
jne
xor
scas
mov
cmp
dec
arpl
je
mov
or
pop
sub
bound
and
jb
hlt
int
stos
enter
and
call
inc
movsl
shlb
xor
iret
idivl
ret
daa
mov
cmp
insl
stc
xor
mov
jmp
xchg
push
jle
fisubl
hlt
sbb
shl
sbbl
shl
mov
or
inc
nop
cld
mov
mov
test
push
inc
pop
pop
fisttpl
xor
aad
or
insb
and
sbb
leave
in
fwait
repnz
xchg
or
xor
push
push
hlt
scas
rolb
sub
mov
pop
pop
imul
xchg
adc
in
jns
cmp
lds
inc
sub
adc
inc
dec
lcall
cltd
int
xor
cmp
inc
in
push
pusha
aam
adc
loopne
stc
ret
ja
iret
sub
scas
mov
test
jg
pop
lods
insl
addr16
push
jbe
ss
out
and
test
fwait
sub
xor
cld
js
imul
pop
pop
out
or
cltd
adc
repnz
add
push
cltd
adc
shrd
cmp
jle
inc
mov
adc
push
leave
sbb
je
imul
jle
movl
sub
sub
push
push
adc
outsb
lret
dec
and
add
push
into
outsb
cmp
loope
nop
fwait
mov
pop
movsb
adc
arpl
dec
xchg
inc
add
aam
xchg
sub
ja
or
popl
les
aas
ljmp
les
arpl
outsl
lahf
mov
or
mov
adc
incl
in
in
xlat
mov
pop
xor
cmp
ret
addr16
push
cmp
or
mov
mov
push
aad
jl
mov
mov
enter
call
add
xchg
push
std
cwtl
lods
into
cmpsl
daa
push
pop
jno
jg
lea
iret
lret
out
out
xlat
xchg
repnz
jb
mov
std
call
les
xchg
leave
xchg
ret
scas
insb
aas
sub
lea
pop
repnz
pop
jl
dec
movsb
fstps
mov
andl
ss
mov
cmp
xchg
clc
xor
adc
std
fwait
bound
aaa
cli
push
mov
cmpl
sub
jecxz
jnp
pop
in
cmp
and
call
hlt
jnp
call
ret
je
mov
adc
pop
or
jmp
ret
dec
inc
sti
adc
dec
dec
mov
jmp
shrl
and
mov
cmp
jb
xchg
ret
test
mov
push
daa
int3
movsl
add
addr16
int
daa
fsub
mov
push
sub
mov
mov
cmpsl
je
mov
gs
sbb
ss
mov
adc
jnp
add
add
xor
stc
cltd
lods
aas
ljmp
idivb
xor
xor
xadd
or
mov
jp
mov
pop
std
ds
mov
in
push
inc
pushf
cs
fnstenv
xor
negl
add
push
cwtl
aad
ret
sub
push
movsl
or
movsl
pop
pushf
inc
mov
dec
movsb
aam
xor
or
call
xor
mov
sub
add
push
lods
adc
mov
xor
pop
jnp
inc
jmp
shr
xor
popa
sahf
out
or
lahf
dec
dec
pop
ljmp
jmp
jle
lret
andl
xor
pop
add
inc
xor
ret
jbe
fidivrs
pushf
hlt
mov
or
test
fwait
mov
pop
repz
ds
pop
mov
pop
popaw
fisttps
pushf
mov
idiv
or
lock
sti
xchg
cmovbe
mov
ss
es
and
push
or
add
add
mov
lret
cmp
loopne
sbb
and
jp
adc
sti
and
mov
sub
sub
inc
in
mov
xor
pop
ret
es
add
xchg
push
outsl
loop
icebp
adc
xchg
add
scas
andl
mov
nop
dec
sub
jp
loop
add
mov
insb
mov
out
mov
stc
jbe
sub
mov
aaa
inc
sub
je
pop
rcr
ret
dec
pushf
xor
or
insb
pop
outsb
xchg
data16
leave
mov
xlat
imul
xor
xor
xchg
mov
mov
loope
into
dec
enter
stos
fnstenv
inc
pop
ljmp
addr16
mov
pushf
and
cmpl
jbe
cmp
adc
lahf
pop
or
ds
enter
and
push
daa
or
xor
orb
pop
mov
inc
cmp
add
add
xor
ss
lock
push
push
xchg
add
inc
mov
pop
mul
jl
jmp
pop
inc
addr16
sub
push
dec
rorl
inc
in
dec
push
scas
iret
scas
fiadds
rcrl
cwtl
add
push
out
sub
pop
xchg
cmc
adc
mov
inc
dec
sub
jecxz
sarb
or
std
fldl
fldl
or
ds
nop
adc
mov
sarb
dec
inc
test
push
xchg
js
rorl
or
gs
xor
je
sub
dec
test
pop
and
push
and
sbb
jae
fsubrp
dec
or
add
mov
in
dec
lods
xor
int
cmp
and
icebp
push
dec
nop
sahf
mov
mov
mov
in
xchg
jno
imul
mov
imul
std
inc
mov
add
pop
sahf
std
mov
icebp
mov
je
push
pop
jns
sub
xor
fistl
mov
pop
mov
mov
lret
lock
inc
scas
mov
and
push
sarb
out
mov
je
scas
cmpsl
push
cmpsl
rcrb
jbe
cwtl
inc
mov
push
fdiv
inc
sbb
push
cld
fidivl
dec
hlt
xchg
insb
lds
jecxz
mov
ja
out
xor
mov
dec
ljmp
mov
jecxz
and
adc
addr16
xor
mov
lret
fs
adc
xor
jp
jl
fcompl
jp
and
inc
inc
call
fstps
jecxz
hlt
add
notb
push
sbb
in
aam
add
out
add
mov
and
adc
fnstcw
lods
int3
in
sbb
jmp
sbb
int
jecxz
lea
flds
push
and
adc
and
sub
mov
sbb
and
enter
sbb
sub
insl
jge
add
adcl
je
xchg
lcall
ss
ds
repz
mov
mov
inc
pop
stc
sarl
ljmp
pop
lds
fldt
iret
jns
add
or
add
xor
je
and
out
lods
pop
ss
stos
leave
dec
out
sbb
fildll
fisttps
fisttps
call
cltd
or
in
sarl
mov
push
jecxz
push
cmp
aas
into
movsb
movsl
dec
or
fwait
xchg
dec
jnp
imul
cltd
dec
adc
add
mov
fnstsw
mov
add
dec
orl
cmp
mov
rolb
mov
push
sbb
add
rcr
sub
sbb
ret
stos
sub
mov
imul
sub
fcmovnu
jmp
jmp
mov
adc
pop
lods
jmp
ret
xor
dec
jns
push
jne
or
es
movsl
inc
add
lret
inc
movsl
loope
mov
mov
and
sub
fnstcw
and
les
dec
pop
fnstsw
and
inc
pop
xor
jns
cmp
pop
jmp
and
dec
cmp
add
inc
dec
repz
jnp
cltd
pushl
lods
lods
into
stos
push
or
icebp
movsl
shrb
cld
fmull
inc
loopne
test
lods
ja
ficoms
inc
xchg
cmpsb
push
pop
xchg
loope
iret
xchg
push
inc
cmp
and
dec
mov
push
icebp
jne
mov
inc
mov
pushf
pop
jge
jb
or
out
mov
jp
adc
sbb
ret
add
pop
aam
xlat
roll
clc
daa
dec
ret
pushf
sub
push
insb
dec
clc
fdivrs
mov
lahf
iret
xor
lods
rcll
fisttpll
sbb
mov
ret
or
or
lahf
jo
inc
shl
push
and
mov
hlt
push
lret
clc
mov
push
scas
iret
sub
lret
ret
in
rorb
xchg
das
decb
test
cld
arpl
mov
sarb
push
stos
inc
jae
loopne
in
or
lock
jo
jno
test
cmpsb
xor
cltd
push
outsl
inc
add
pop
pushaw
pop
mov
cwtl
cli
push
daa
mov
mov
xor
xchg
jo
add
jne
testl
int
mov
outsb
sbb
lret
sub
cltd
sbb
call
push
sub
out
pop
scas
popa
mov
clc
xchg
je
push
jl
fisubl
cmpsl
mov
adc
push
dec
cs
xor
add
pop
cld
fs
aas
jge
inc
mov
nop
popa
inc
xchg
call
xor
pop
sbb
fcmovnbe
mov
sbb
inc
das
jae
rcrl
mov
mov
lods
fwait
xor
mov
jge
rcll
dec
xor
daa
int
mov
arpl
icebp
mov
aaa
pop
mov
fwait
xchg
gs
or
xchg
fnstenv
idivl
xor
jl
data16
fwait
xchg
imul
jno
xchg
push
sbb
mov
mov
lods
es
inc
test
or
xchg
sub
shr
loopne
lcall
ret
sub
push
jmp
inc
frstor
mov
stc
lcall
mov
es
or
dec
rcl
shl
mov
not
pushf
ret
add
lds
arpl
inc
fbstp
xor
add
and
pop
pop
stc
sbb
xlat
push
pusha
add
pusha
pop
jl
nop
in
pop
mov
and
add
mov
test
outsb
pop
stos
in
add
cwtl
aad
mov
cld
push
cltd
clc
push
pop
fsubr
test
or
shrb
jae
sub
mov
jl
sar
repnz
jp
std
ret
and
sub
movsb
push
ja
cmp
mov
popa
mov
pusha
xor
insl
dec
pop
pushf
mov
adc
inc
sbb
mov
cwtl
movsb
sub
mov
jnp
pop
scas
mov
mov
jle
sahf
mov
pop
cld
or
mov
and
inc
pop
sbb
inc
add
sbb
push
mov
scas
jl
imul
mov
inc
mov
mov
out
repz
fidivrl
xchg
imul
lods
lea
loopne
or
scas
inc
test
shlb
stc
loop
mov
iret
mov
sahf
add
repnz
pop
incl
inc
icebp
xor
cld
fsubrl
fiaddl
jmp
or
mov
fistpll
pop
daa
imul
aas
call
aaa
cld
mov
dec
ret
dec
jle
das
mov
not
in
adc
in
cmp
rolb
xchg
push
sub
loope
leave
sub
jbe
pop
les
repnz
pop
iret
out
and
lock
fbstp
jle
jl
iret
movsb
jbe
pop
mov
xchg
jg
jno
inc
stc
pop
cmp
and
inc
jo
aad
lcall
mov
lods
push
and
cmpsb
repnz
bound
js
test
or
xchg
add
stos
add
xchg
push
adc
xlat
inc
xchg
cmp
mulb
mov
add
stc
outsl
dec
dec
jnp
pop
or
paddw
hlt
aas
mov
push
lods
imul
dec
or
ljmp
leave
int3
out
jae
lcall
loopne
aaa
test
test
sub
insb
sbb
dec
push
mov
mov
push
sub
inc
add
cmpsb
or
ficoms
dec
jl
add
sbb
mov
push
pop
push
ss
ss
stos
in
add
jge
dec
dec
sbb
mov
rclb
scas
cmp
xor
mov
aas
or
pop
in
fstps
sub
lock
sub
cld
ja
pop
into
xchg
dec
pop
mov
in
and
or
ret
repnz
cli
fstps
jmp
inc
popl
push
dec
and
fnstcw
dec
stos
add
scas
pushf
les
inc
fs
cmp
xorb
inc
adc
cmp
jbe
push
shll
cmp
ljmp
xor
add
test
sub
inc
mov
and
data16
shr
in
add
es
cwtd
inc
mov
cmpsb
inc
mov
mov
mov
js
pushf
test
std
hlt
mov
into
or
popf
test
das
shlb
sbb
stc
cmp
mov
xchg
cmp
cli
lret
fisubrl
int
or
mov
out
cmpsl
rcll
jmp
aas
repnz
cmp
icebp
and
jl
hlt
nop
mov
movsl
adc
jmp
pusha
fsubrl
jecxz
in
call
xchg
cmp
dec
in
test
shrb
sub
aaa
cmp
jecxz
ljmp
pop
sub
in
adc
pop
inc
cli
in
test
or
dec
les
sub
je
xor
xchg
popa
adc
iret
cmp
jg
in
arpl
adcl
xchg
cmp
in
fldenv
in
jge
inc
movsb
jp
gs
cltd
xor
dec
mov
dec
xor
push
xor
xchg
or
stos
and
fstpl
xchg
imul
or
ss
rorb
pusha
dec
xor
add
inc
cmpb
or
lods
cmp
je
xchg
cmp
or
dec
imulb
stc
negb
leave
incb
rcr
shrb
sbb
movsl
push
icebp
sbb
popf
cmp
jnp
mov
pop
push
sbb
pop
sbbb
mov
push
mov
imul
dec
and
lds
gs
inc
jl
jnp
mov
out
ds
fidivrs
mov
aas
in
mov
xchg
sub
adc
fnstsw
cld
jl
sbb
aaa
xor
daa
mov
int3
inc
push
xor
mov
out
and
adc
lods
push
mov
dec
jno
or
or
pop
dec
push
loopne
and
pop
in
pushf
pop
push
rcr
xor
cmp
dec
jle
xchg
push
dec
push
das
inc
iret
push
jmp
push
movsb
fidivrs
and
cmc
icebp
or
mov
or
icebp
pop
push
andb
out
imul
jmp
pop
inc
loope
das
fbstp
nop
xchg
daa
mov
ljmp
mov
push
and
test
sahf
pop
ja
mov
add
sub
lods
leave
cmp
das
ret
dec
cmc
cmc
jp
daa
xor
jne
daa
cld
popa
out
push
xchg
xchg
or
shll
add
mov
mov
sbb
data16
test
insl
clc
rol
in
jl
inc
iret
cltd
loope
fwait
outsl
mov
out
mov
jo
mov
or
popa
push
push
jle
aas
mov
fists
push
out
lret
jge
rcl
clc
fisttps
mov
addr16
jg
jns
dec
mov
pop
scas
into
lock
pop
insb
adc
and
scas
pop
dec
or
aam
xchg
fs
scas
pushf
out
out
ja
dec
jg
add
js
fwait
jge
je
cmp
mov
ret
nop
imul
imul
ljmp
inc
cmp
or
pop
pop
cs
test
sub
test
mov
out
imul
jl
insl
in
repz
add
or
mov
lea
adc
popf
cmp
inc
sahf
inc
sub
jns
neg
repz
cltd
fs
pop
push
xchg
scas
mov
cld
push
push
popf
hlt
cmp
sbb
adc
mov
mov
les
mov
in
test
cmpsl
inc
mov
gs
inc
sbb
jl
dec
js
test
push
loopne
xchg
ljmp
dec
jae
or
lahf
sbb
in
pop
outsl
sub
add
ja
mov
fwait
cld
arpl
xchg
mov
cld
fisttpll
lret
std
faddl
outsl
je
stos
das
out
das
movsl
data16
xchg
and
rorb
clc
adc
push
push
fisttps
lahf
xchg
aas
mov
rcrb
movsb
jno
cli
std
jp
es
subl
push
loopne
fwait
add
mov
mov
jmp
mov
lock
fidivrl
fsubs
cmp
int3
push
jecxz
popf
cwtl
fcoml
mul
arpl
cmp
inc
lock
xorl
movsl
pop
movsl
mov
adc
sahf
and
lahf
fcmovnb
std
dec
pop
xchg
data16
push
inc
aad
adc
dec
dec
mov
pushf
cwtl
sub
add
jne
loopne
mov
fs
inc
dec
mov
in
mov
push
iret
pop
subl
add
jmp
ret
pop
push
mov
fucomp
cmp
insl
dec
or
jp
cmp
roll
es
mov
je
add
mov
sbb
dec
repz
and
xchg
adc
into
cmp
sub
fidivrl
lods
jle
cmpsb
pushf
shlb
inc
dec
pop
enter
cmp
xchg
lock
push
sahf
test
test
mov
call
adc
xchg
xchg
mov
jbe
fidivs
mov
xchg
and
dec
iret
add
test
ss
push
in
push
mov
or
jecxz
xchg
inc
cs
mov
sbb
jge
movl
mov
subb
xor
stos
sub
pop
outsb
dec
mov
hlt
icebp
je
out
in
pop
mov
inc
sub
out
insb
push
xor
loope
bound
add
inc
popf
sbb
and
popa
mov
cmp
les
das
cmp
and
cmc
jle
jmp
addl
fcmovb
or
aad
mov
imul
mov
int
xor
pushf
filds
jo
in
out
cmp
out
stos
mov
pop
movsb
mov
and
cld
jmp
cmp
mov
adc
mov
ret
daa
repz
inc
push
push
fbstp
lds
sub
lods
bound
dec
mov
dec
xchg
scas
iret
into
or
cmp
call
fucomip
mov
mov
and
inc
lret
pop
jg
stos
or
mov
push
xchg
test
lcall
inc
in
push
push
fs
jne
mov
andb
dec
movaps
aas
clc
scas
jp
imul
and
sbb
pop
dec
mov
insb
popa
dec
pop
adc
ds
jecxz
int
incb
cmp
jecxz
and
es
mov
dec
sub
addr16
fdivrl
popf
repz
mov
sub
push
adc
test
dec
pusha
out
mov
dec
sahf
out
mov
mov
or
mov
cmp
mov
ljmp
sub
leave
cwtl
pop
sub
movsb
and
and
push
push
std
mov
int
add
insb
mov
or
ljmp
mov
mov
sub
icebp
outsl
jo
fsubs
and
fs
jno
aam
outsl
jno
in
test
inc
jo
out
fwait
pop
jecxz
xchg
rcl
jnp
fldt
or
adc
pop
fmul
pop
movsl
and
mov
pop
mov
std
mov
dec
push
lret
cld
loop
loop
pop
out
inc
std
jns
sti
scas
jmp
lret
hlt
mov
adc
ds
mov
mov
das
gs
mov
dec
enter
lds
js
int
jne
in
imul
std
jge,pt
mov
cld
fildl
mov
int3
stos
and
aad
dec
shll
adc
jecxz
add
shr
jle
mov
les
or
clc
fisubs
in
cli
mov
call
jge
fbstp
mov
xor
mov
xor
xorb
imul
inc
sti
xchg
aam
lods
test
nop
and
std
sbb
jb
inc
push
incl
xor
pop
adc
pop
js
mov
subb
mov
bt
dec
fstpt
inc
daa
scas
in
les
push
jg
faddl
jns
mov
cmp
mov
and
das
xor
or
ljmp
push
in
mov
push
sbb
xchg
in
or
shl
stc
test
sbb
mov
sbb
in
imul
stos
sub
cmp
add
sub
lds
cli
iret
orb
pop
inc
mov
jne
shrl
jl
cli
cld
push
xchg
cld
cmp
lret
jnp
das
test
in
push
stos
movsb
xor
jle
roll
jge
or
push
xchg
clc
cli
pop
jno
leave
xchg
push
jbe
in
cld
sbb
in
sbb
packuswb
cmp
and
orb
and
fisttps
stos
movsl
popa
or
dec
and
ret
pusha
inc
mov
xchg
and
ficoms
add
pusha
in
popa
mov
xor
pop
outsb
pop
sbb
xor
sarl
dec
sub
jecxz
test
dec
mov
les
cli
lods
fstl
je
inc
push
dec
movsl
mov
adc
and
sub
dec
test
fcompl
push
imul
clc
pop
xchg
test
push
daa
cmp
ds
push
inc
add
push
jl
mov
test
or
notb
sub
repz
or
fdiv
xor
jae
mov
shl
cwtl
incl
lahf
scas
jecxz
enter
jg
and
fwait
clc
sbb
sbb
mov
cmp
mov
insl
int3
faddl
hlt
xchg
std
add
push
and
inc
pop
int
inc
fildll
test
inc
in
stc
les
dec
pop
adc
adc
dec
mov
out
xor
insl
fnsave
iret
mov
or
and
mov
movsb
mov
mov
push
adc
clc
cmp
int3
sbbl
lcall
adc
xor
add
inc
scas
test
dec
cli
in
icebp
mov
inc
cld
jg
cmpsl
sbb
inc
inc
loopne
nop
fiaddl
sbbl
gs
js
mov
dec
jno
push
add
clc
fldl
std
popf
xchg
xchg
mov
rol
dec
add
sub
out
or
leave
pop
push
popf
xchg
hlt
mov
mov
pop
aad
jge
cltd
or
mov
clc
mov
ss
cmp
aaa
lock
mov
das
pop
dec
outsl
call
jae
or
cmp
arpl
sbb
mov
test
and
in
and
stc
hlt
adc
int
daa
icebp
inc
push
scas
push
or
or
sarl
popa
mov
mov
push
sarb
mov
insl
cmp
ficoml
ss
lods
mov
rcrb
testb
inc
outsb
mov
movsb
xor
dec
ss
sub
or
push
rcll
push
sub
dec
or
and
adc
stos
lods
push
mov
push
ret
iret
insl
sbb
jae
cmp
jle
fs
push
sub
add
xchg
mov
enter
adc
jmp
cs
xlat
and
pop
test
daa
add
lret
pop
pop
and
xchg
xchg
cwtl
xbegin
lods
cmp
addr16
ficoms
addl
arpl
add
push
pop
sbb
out
push
cld
ljmp
fdivr
jne
in
std
pop
insl
lods
ds
aam
cmp
push
js
icebp
das
icebp
inc
addr16
and
movb
out
jg
out
xchg
add
jb
or
inc
cli
loopne
imul
scas
jg
mov
ljmp
mov
mov
dec
mov
and
xchg
sub
shlb
fdivr
out
mov
push
mov
sub
pop
push
pop
pop
sbb
repz
pushf
jae
adc
xchg
hlt
js
push
mov
push
pop
push
mov
fsubrl
lods
jp
mov
cmp
addb
pop
into
je
add
push
and
dec
jp
je
xor
mov
or
pop
cs
into
dec
ds
push
movsl
fstp
stos
add
pushf
add
cmpsb
lea
pop
and
inc
mov
cmc
psrlw
pusha
cmpsb
push
pop
fisubrs
or
insb
mov
aaa
push
cmp
shrl
push
push
jg
movl
mov
imul
dec
scas
jg
insb
das
shr
lds
mov
mov
cmp
mov
pop
mov
dec
xor
sub
rcrb
clc
test
sub
push
inc
xlat
dec
loop
movsl
pop
xor
xor
push
xchg
ja
pop
push
push
mov
pop
adc
cmpsl
sbb
jne
mov
lds
iret
and
jge
ljmp
shll
imul
lahf
adcb
aaa
jl
push
cltd
xchg
psubusw
adc
ret
push
mov
lea
fxam
xor
hlt
dec
popa
dec
aas
push
cwtl
mov
xor
fsubrl
sub
adc
ss
inc
sub
into
mov
mov
inc
pusha
xchg
or
add
add
mov
mov
es
push
xor
jecxz
sbb
lea
inc
add
mov
lds
fwait
mov
out
and
mov
addl
inc
mov
jp
ds
pop
jmp
sub
test
mov
jne
cmp
jge
inc
test
jmp
cltd
addr16
or
jmp
pop
push
arpl
mov
jns
scas
inc
fstps
add
imul
pop
stos
and
mov
cmp
mov
loop
sub
in
insb
inc
sbb
xor
sbb
lret
mov
insb
bound
push
out
add
xlat
push
repnz
or
movsl
outsb
mov
lcall
adc
add
aad
sub
jae
mov
in
jb
xchg
int3
lds
in
jmp
pop
mov
sub
xchg
fcmovnbe
jns
repnz
sbbl
xchg
fisubs
je
shrl
cmp
push
sbb
mov
dec
xchg
add
lcall
push
adc
xchg
imul
cmp
mov
adc
testb
cmp
lahf
into
pop
cltd
adc
mov
push
hlt
imul
mov
imul
jbe
subb
jns
enter
mov
sub
mov
mov
outsb
xor
ss
mov
sub
mov
shr
dec
mov
sahf
jb
mov
in
jns
mov
pop
adc
xchg
fidivrl
mov
mov
rol
out
and
sbb
adcl
imul
mov
rorb
pop
shll
insb
lcall
and
and
jno
sarb
rcl
xor
xchg
mov
push
mov
pop
std
jmp
aad
fcoml
pop
call
add
add
cmp
inc
mov
into
pop
test
xchg
or
xchg
mov
inc
push
aam
pop
jecxz
es
in
jnp
insl
lods
jge
push
fsubrs
imul
xchg
xor
jno
loopne
cmp
lret
dec
test
scas
lods
inc
or
in
dec
ds
nop
push
jmp
nop
mov
movsl
bound
push
lods
and
fs
push
ja
cmp
fwait
mov
mov
push
fldcw
inc
leave
jo
sub
pop
jg
popf
mov
std
pop
jle
sbb
js
sti
int
jbe
push
xchg
mov
mov
sbb
ss
xor
mov
xchg
daa
and
xchg
sub
lods
data16
incl
negl
adc
pop
push
clc
sahf
xor
pop
add
jnp
xchg
jne
pop
movsb
je
sbb
lret
aad
stos
mov
ds
sti
movsl
fs
push
mov
shrl
pop
xchg
ss
repnz
jns
shr
or
dec
mov
imul
pop
xor
jmp
lock
hlt
out
dec
push
dec
fs
fimuls
jmp
and
and
push
sti
mov
xlat
push
lret
adc
dec
add
xor
dec
movsb
pop
rorl
lret
pop
mov
xchg
call
rcrb
pop
push
loopne
imul
lds
dec
xchg
cmpl
and
js
cli
xlat
mov
xchg
push
das
aas
pushf
test
push
bound
adc
aas
push
inc
stos
outsl
aas
dec
insl
or
bnd
sub
cmp
mov
stos
inc
jp
fs
std
outsb
dec
inc
mov
cmpsb
cmpsb
je
mul
mov
fimull
mov
scas
adc
adc
frstor
xchg
call
ja
cmp
shll
and
pop
mov
xchg
adc
repnz
popf
js
jo
and
cld
inc
jle
mov
call
sub
pop
sarb
mov
and
add
popa
int3
jle
jns
out
stc
mov
test
inc
stos
lds
in
das
test
mov
ret
scas
mov
cmpsb
jo
lret
arpl
lds
pop
xlat
pop
cltd
test
mov
pop
inc
pop
xchg
ljmp
xchg
push
sub
mov
in
ss
sar
xchg
pop
shl
mov
xchg
pop
jl
mov
sahf
cs
inc
adc
or
adcl
or
xchg
lcall
dec
xor
jae
cmp
stos
jl
leave
mov
sbb
and
mov
mov
jne
push
shl
into
movsl
pop
pop
inc
jo
cmpsb
pusha
sarb
sub
insb
fisttpl
jecxz
cmp
xor
mov
xor
lret
mov
xchg
fcmovbe
cmp
lods
mov
cmp
or
stc
loop
ret
mov
gs
push
mov
inc
cmpsl
mov
sub
or
mov
push
and
mov
lock
sbb
jg
imul
push
cmp
fstpl
mov
cmp
addl
cli
dec
push
out
jmp
pop
mov
pop
inc
pop
lret
xor
shll
xchg
fimull
scas
imul
mov
movsb
subb
movsl
cmp
cmc
adc
lea
bound
pop
pusha
cmc
popa
jns
pop
jg
pop
push
add
cs
mov
xchg
mov
pop
arpl
call
sbb
lds
sbbb
mov
ret
fs
push
out
inc
cmp
test
xor
mov
mov
inc
leave
pop
ret
out
and
inc
and
or
xchg
in
push
loopne
sub
rcrl
insb
cwtl
mov
adc
nop
flds
pop
cwtl
mov
pop
icebp
lds
inc
sub
pop
clc
sub
sub
movl
mov
test
jge
mov
sbb
clc
fldt
push
aaa
pop
cs
stos
cmp
popa
and
xor
cmpsb
jle
fwait
loopne
fldt
xchg
je
aam
jb
ds
sti
or
pusha
jne
add
pop
sub
xor
rorb
sub
mov
stc
scas
adc
mov
cli
jns
mov
adc
test
jecxz
mov
loope
cmp
xor
fcomip
push
sbb
mov
inc
sbb
mov
mov
outsl
ret
lods
inc
mov
cld
daa
lods
sbb
iret
call
jecxz
out
xor
xor
or
sbb
into
xor
lret
sub
arpl
push
mov
pop
hlt
mov
adc
sbb
scas
sub
jecxz
jae
add
adc
test
xchg
cli
cmp
cli
out
fisubl
jns
cmc
ja
jecxz
mov
or
or
mov
repz
adc
jle
notb
sbb
or
xlat
or
xchg
mov
ds
push
icebp
cli
adc
sub
sub
inc
pop
test
and
xor
negb
mov
jb
movsb
dec
and
and
pop
cmpsb
inc
addr16
jg
dec
mov
mov
mov
int3
ja
test
and
push
sbb
jge
cmp
popa
fistl
fldenv
cwtl
dec
stos
fnsave
jno
jne
and
bound
decl
pushf
or
stos
xchg
orl
in
add
int
jle
loop
mov
mov
data16
mov
int
and
movsl
out
sub
imul
jne
push
or
in
cmpl
inc
dec
aas
pop
pop
inc
jae
push
pop
test
cmp
or
addl
decl
imul
dec
or
cmpsl
inc
mov
or
cmp
xorl
lock
push
push
test
jo
mov
xchg
mov
icebp
pushf
aaa
movsl
mov
mov
lock
rcr
xchg
fisubs
and
ljmp
dec
sahf
xchg
pushf
inc
fmuls
mov
ret
jp
dec
sub
inc
in
inc
and
pop
pop
xor
xor
sub
cltd
in
push
fstps
cli
sub
jmp
mov
fisttps
gs
lahf
inc
push
mov
in
mov
mov
arpl
int3
in
dec
xchg
push
pusha
scas
sbb
popf
lds
outsb
jle
insb
push
enter
ljmp
cmpsb
or
mov
sbb
fdivrp
das
push
hlt
jae
jmp
sub
xor
adc
adc
aad
sub
test
dec
lret
adc
mov
jbe
ret
pop
shll
sbb
xchg
jnp
cmpsb
xchg
jle
cld
xchg
pop
mov
popl
adc
js
nop
inc
fcomps
pop
xor
sub
mov
mov
sub
icebp
mov
mov
push
int3
movsl
cmp
cmp
adc
test
mov
mov
add
loop
mov
xchg
movsb
mov
sti
jle
fldcw
data16
or
rcll
xchg
int3
push
mov
js
lods
xor
aaa
fstpt
mov
xor
daa
mov
or
adc
pop
out
out
les
scas
les
or
cmp
dec
loope
dec
call
subl
repz
or
pop
addr16
and
jbe
xchg
out
in
call
bnd
mov
clc
aas
aam
das
ret
fnstsw
shll
sarl
or
mov
pop
xlat
ss
stos
cltd
jae
cmc
iret
cltd
notl
icebp
add
fisubl
push
jg
push
xchg
sub
fisubrs
movsb
xor
rclb
fucomi
sbb
cmp
mov
and
inc
loope
dec
and
and
movsl
sbb
jns
sbb
stos
xchg
addr16
popa
gs
ja
pop
xor
orl
push
sbb
popa
sub
or
add
maskmovq
divl
out
dec
xor
inc
aaa
les
sbb
jecxz
cmp
dec
aad
fisubl
mov
or
lret
in
lock
cmp
push
xor
push
inc
stos
hlt
ljmp
arpl
push
in
or
inc
decb
icebp
xchg
lock
fidivrs
scas
lock
inc
lcall
adc
jmp
xchg
push
jo
cmp
cltd
inc
mov
bound
bound
nop
pop
sub
andb
mov
hlt
mov
mov
pop
pop
dec
xlat
faddl
iret
lods
lock
out
cmp
lea
outsl
xchg
jne
or
popa
std
bound
jmp
push
stos
lock
pop
test
cmp
sbb
add
cmpsl
aaa
subb
mov
dec
xchg
lods
xor
pop
arpl
outsb
das
pop
ja
pop
cmp
mov
mov
xor
aad
nop
lods
lret
dec
insb
push
pop
mov
ss
or
cmp
pusha
repz
ss
aam
jae
sar
int3
push
sahf
xchg
pop
xchg
mov
js
addr16
movlps
adc
lds
ja
and
movsw
pop
insl
out
xchg
lock
mov
push
sub
lea
dec
mov
mov
mov
popf
push
sbb
idiv
jb
subb
jbe
dec
bound
jmp
mov
imul
mov
std
add
pop
xchg
rcrl
push
fstpt
fiadds
nop
xchg
and
cmp
and
ljmp
shlb
enter
add
js
pop
adc
dec
jns
addl
notb
mov
jns
xchg
jle
push
adc
jbe
xchg
add
lock
in
push
insb
xchg
sbb
gs
mov
call
test
mov
inc
jo
mov
sbb
push
pop
sub
mov
jo
mov
dec
push
scas
leave
loopne
incl
cmp
sbb
gs
mov
inc
lock
mov
cwtl
out
xchg
mov
rorb
sbb
std
bswap
cmpsb
cltd
in
icebp
shrl
push
lock
or
outsb
mov
mov
dec
xor
push
mov
push
loopne
push
xchg
call
cltd
fsubl
pushf
fcmovnbe
in
outsl
rep
fldt
jecxz
mov
or
jb
outsl
add
ret
add
in
inc
mov
daa
enter
mov
outsl
loopne
sbb
int3
jae
test
dec
shlb
shlb
filds
mov
jmp
adc
jle
add
rolb
jbe
pop
fld1
mov
roll
cmp
test
loope
fsubr
mov
rol
add
int3
jmp
jge
jnp
sahf
fsub
add
push
or
clc
and
gs
inc
mov
dec
shll
xchg
mov
or
inc
xor
movsl
pop
xor
or
idivl
push
lods
fnop
dec
les
dec
dec
repz
sub
aad
and
cmp
jb
pusha
sbb
lea
sbb
daa
sarl
mov
shl
inc
lds
cmpsl
mov
xchg
call
dec
std
xorb
je
pushf
xlat
lea
mov
std
add
imul
ret
mov
inc
pop
add
in
mov
sbb
pop
enter
dec
pop
out
mov
repnz
clc
sub
push
fwait
orl
jbe,pt
cmpsb
rol
inc
and
int3
cld
xor
push
scas
sub
and
xor
icebp
inc
lock
enter
movsb
sbb
outsl
mov
inc
dec
xor
rol
lods
xchg
stc
inc
sub
mov
sbb
jg
pop
or
lea
aaa
lahf
sbb
div
dec
adc
cmpsb
and
pop
fwait
aas
fistpll
popf
repnz
or
inc
dec
push
pop
dec
mov
sbb
pop
sbb
cltd
xor
fnstenv
inc
add
decb
imul
dec
popf
lea
pop
sub
sbb
xchg
repnz
in
sbb
pop
and
add
inc
mov
insb
mov
adc
nop
cli
repnz
pop
inc
js
fucomp
clc
jne
or
movsb
jns
fidivs
ficomps
out
xchg
movsl
int3
data16
xchg
sub
cmpsl
xchg
pop
mov
mov
sub
push
add
ds
jnp
xor
push
std
loop
mov
leave
nop
cld
mov
in
data16
inc
add
jecxz
fwait
stc
add
nop
xchg
test
and
cltd
mov
xchg
cltd
sub
cmpsb
leave
dec
je
pop
mov
pop
std
icebp
adcl
mov
push
xchg
popa
push
and
adc
ja
add
xchg
js
aam
xchg
insb
inc
call
popf
push
push
lds
ret
xor
scas
test
xchg
dec
or
fwait
cmp
inc
lahf
and
clc
jns
jecxz
idivb
es
and
int
jge
mov
add
push
or
cwtl
mov
or
testl
cli
jnp
outsl
sub
insb
lret
cmp
xor
sbbb
aam
fistpl
and
jmp
loope
ljmp
mov
inc
stc
sahf
lahf
dec
lea
xor
jmp
cmpl
sbb
and
and
fs
cmp
xchg
jae
mov
xchg
daa
js
cwtl
sub
sbb
fnstsw
jne
mov
jno
mov
push
mov
dec
std
xor
mov
decl
mov
fadds
adc
sub
call
and
ja
dec
push
repz
scas
mov
in
xor
sarl
xchg
pop
cld
repnz
mov
dec
and
xor
mov
push
sub
jmp
jge
out
dec
sbb
cmp
fsubrs
sub
daa
sbb
orb
cwtl
pop
cvtpi2ps
in
pop
push
pop
cmc
sbbl
sub
fwait
or
test
mov
or
sbb
insb
jb
and
aad
rcll
mov
jb
test
jp
sbb
push
outsl
int
or
es
mov
cmc
add
iret
lock
popf
jo
icebp
adc
aas
imul
push
ja
lock
movsl
mov
jb
movsl
xchg
sbb
ja
add
push
cwtl
lods
add
jb
shrb
jge
std
rolb
mov
lahf
mov
shll
inc
mov
or
add
jecxz
mov
sti
scas
push
push
jmp
push
lods
std
lods
in
flds
lcall
and
or
in
call
jge
adc
ja
cmp
repnz
fdivr
outsb
aad
mov
sub
push
dec
popf
int3
movsb
push
out
fwait
cs
out
mov
popa
popa
xchg
push
jge
arpl
pop
aad
push
lock
ret
xor
in
test
in
leave
and
in
inc
push
fbld
inc
xchg
pop
xor
jecxz
adc
sub
inc
lods
mov
jmp
jae
cld
arpl
mov
xor
ret
lret
ss
mov
push
imul
jo
mov
movsb
dec
iret
repz
in
mov
inc
cmpsb
das
inc
sti
pusha
into
leave
sahf
dec
lahf
pop
add
xchg
movsl
xchg
outsb
ja
adc
cmc
addr16
push
add
sbb
jbe
repnz
mov
out
add
das
scas
imul
jne,pt
push
rcl
lods
push
xor
pop
in
sub
cwtl
xchg
lahf
and
mov
cwtl
movsl
mov
repz
sbb
pop
mov
pop
shl
pop
xor
adc
push
daa
push
ja
out
add
push
out
jle
sub
or
or
xchg
push
in
sbb
sbb
gs
jecxz,pt
and
mov
sub
pop
stos
fimull
cmp
sub
pop
jno
das
jle
icebp
frstor
adcl
cmp
fbstp
out
roll
dec
ret
ret
adc
or
push
mov
or
cmp
jecxz
fldt
and
xor
jne
mov
icebp
or
sbb
dec
addr16
add
cmpsl
xchg
jecxz
sub
pop
dec
add
cmc
icebp
xlat
lret
adc
push
pop
in
insl
out
inc
sbb
aam
sbb
cmp
pop
dec
lock
xchg
xor
in
pop
call
pop
pushf
mov
xchg
add
cs
sti
imulb
inc
ficompl
mov
and
aaa
adc
xor
nop
scas
or
hlt
jge
jecxz
repnz
int3
mov
test
fwait
mov
sbb
pop
xor
outsb
jbe
mov
add
fildl
por
mov
push
or
xor
and
int
push
or
dec
bndstx
popf
xlat
test
js
sahf
cmpl
dec
ss
push
out
inc
push
in
mov
fwait
je
pop
mov
jnp
mov
sbb
xlat
daa
cmpl
fiadds
nop
cld
fsubs
out
enter
sbb
mov
mov
jl
and
cwtl
std
mov
sbb
std
sub
add
arpl
sbbb
xlat
mov
push
xchg
push
sbb
and
sub
test
pop
mov
cmc
mov
int
push
push
pushf
jmp
ret
xchg
stos
jmp
xchg
sbb
cmp
push
add
xlat
xchg
or
daa
test
lock
mov
gs
xor
xor
iret
xor
jne
movsb
xor
aad
scas
ds
push
mov
in
mov
clc
xchg
lea
outsb
inc
push
sbb
inc
mov
xor
xor
mov
jno
sar
and
jle
cmpsb
lea
dec
jno
mov
sbb
xchg
dec
inc
cwtl
xlat
lods
int
sub
jmpw
popa
repnz
push
test
mov
sub
mov
das
mov
leave
inc
mov
jp
ret
jne
or
and
fldcw
add
lahf
je
fsubr
scas
out
iret
xchg
jae
pop
sbb
mov
push
adc
sub
adc
mov
pop
ja
mov
stos
repz
cmp
xor
rolb
sub
dec
adc
imul
in
loope
shlb
pusha
test
fildll
jne
push
dec
dec
jae
sbb
jle
inc
outsb
push
stos
in
xchg
aam
lcall
push
movsl
test
dec
fimull
adcb
jo
ret
add
or
movsl
adc
repz
xchg
mov
mov
aad
mov
lea
cmpsl
out
js
int
movsb
icebp
daa
pop
lods
mov
insl
and
cltd
shrl
jl
xchg
push
rolb
or
in
stos
jne
in
movsb
scas
insb
xor
push
sbb
into
out
sbb
out
loope
into
sbb
inc
rcrl
out
cmp
lret
inc
xor
and
mov
pusha
jmp
pop
sub
jecxz
push
jae
mov
mov
sbb
loopne
ret
push
mov
std
mov
and
test
in
lods
out
xchg
mov
mov
ficoms
fdivs
or
std
dec
mov
mov
push
mov
test
pop
dec
repz
or
cmp
test
and
lods
and
dec
mov
inc
push
add
ljmp
dec
sub
mov
cmp
les
or
push
ror
and
ds
xor
xchg
adcl
nop
in
and
inc
cmp
testb
sub
mov
pop
mov
jecxz
mov
cmp
call
icebp
fisubrl
dec
inc
iret
rcl
cmc
ljmp
push
pop
and
mov
mov
loope
addb
es
ret
lret
jmp
stc
lcall
int
repnz
cwtl
dec
inc
repz
stc
dec
rolb
movb
iret
fldt
mov
inc
cld
rcrl
or
pusha
xchg
jge
addl
popa
aam
or
mov
lods
sub
das
and
adc
add
jl
mov
cmp
es
jecxz
pop
and
jl
push
clc
lods
insb
or
mov
add
push
or
lahf
push
xchg
sbb
filds
lcall
in
mov
dec
in
inc
xor
mov
dec
imul
push
or
jno
repz
repz
negl
mov
xor
lcall
nop
mov
push
sbb
xor
add
inc
mov
jnp
call
push
fadd
add
xchg
mov
test
push
push
je
cld
inc
jbe
mov
jle
pop
add
stc
push
in
clc
out
xchg
fdivrs
cwtl
lret
fld1
outsb
and
mov
mov
stos
fisubrl
lds
inc
inc
inc
pusha
daa
sbb
sub
xor
es
or
loope
cmp
cltd
sub
lea
andb
cli
shlb
push
mov
cld
dec
pop
pop
in
fidivrs
xchg
mov
hlt
out
xorb
cmpsb
jmp
ret
pop
xor
jmp
dec
push
pop
xchg
lret
es
repz
adc
out
mov
pop
cmp
roll
adc
mov
dec
test
sahf
aas
push
jp
mov
or
or
jns
inc
push
dec
add
mov
dec
mov
xchg
iret
pop
and
fcmovnbe
adc
add
loopne
and
in
dec
ret
out
ret
mov
mov
shl
mov
mov
jnp
jg
nop
rorb
fs
sbb
mov
mov
mov
std
sahf
push
out
push
sub
dec
lret
mov
pop
fwait
jl
cmp
push
and
ja
ret
imul
dec
scas
pop
pop
jne
test
loope
sub
and
push
or
dec
inc
pusha
jge
mov
add
mov
xor
and
xchg
pop
xchg
cmp
jge
test
lods
xchg
cmp
xchg
and
lods
dec
mov
push
lahf
leave
out
psubsw
xor
inc
jns
push
mov
out
dec
dec
bound
cltd
rcrb
cmpsb
jp
imul
push
sbb
mov
cltd
insl
ffreep
mov
imul
in
xchg
cwtl
rcll
mov
ljmpw
push
inc
mov
enter
lcall
and
das
iret
push
dec
xchg
out
sub
add
jnp
and
lea
push
adc
stc
cmpsl
adc
negb
xor
adcl
jne
mov
xchg
or
into
addr16
xlat
les
inc
adc
clc
pop
nop
mov
push
xlat
data16
push
adc
insl
cmc
pop
or
lods
in
stos
jecxz
xorl
jg
cltd
dec
pushf
sbb
bound
adc
or
push
scas
test
cltd
mov
inc
arpl
and
or
popa
xchg
sbb
dec
lret
lock
or
sub
in
nop
or
dec
mov
pop
rcrb
or
sub
mov
jl
mov
sub
fsubrs
mov
push
mov
sti
xchg
inc
aas
insl
adc
call
and
pop
and
mov
sbb
cmp
or
push
js
adc
adcl
loope
jg
mov
xor
imul
cmpsb
xor
cmp
pop
lods
push
push
or
std
and
sub
sahf
popf
and
pop
fistpl
sbb
cmp
dec
mov
js
push
sbb
aad
adc
cmc
test
push
mov
inc
dec
push
hlt
test
dec
inc
jno
xor
pop
lds
dec
xchg
jmp
sub
nop
cwtl
cmp
pop
pop
dec
push
loop
push
movhlps
rorb
out
pusha
outsl
inc
and
lea
and
lods
hlt
xor
xchg
xor
mov
cwtl
les
jns
cmpsl
push
in
insl
popa
inc
dec
mov
fs
mov
pushf
add
add
add
data16
dec
or
xchg
push
adc
mov
mov
jp
adc
inc
dec
jae
gs
jp
mov
addr16
ret
push
pop
adc
push
std
jns
das
jae
loopne
inc
loope
sbb
xlat
aas
stos
xchg
scas
and
sub
es
or
dec
sets
shll
pushf
mov
mov
test
data16
int
loopne
sbb
mov
daa
and
inc
sahf
sub
add
xchg
mov
dec
addr16
std
sbb
push
pop
popf
insl
lock
mov
push
add
andb
adc
in
cmp
xlat
scas
daa
andb
push
and
arpl
scas
add
xchg
xor
xorl
imul
mull
hlt
stos
push
pop
adc
fstl
movsb
xor
adc
cs
scas
inc
fnstcw
int
mov
lret
jg
fnsave
xlat
les
aad
push
int
cmp
iret
cmp
jmp
flds
or
push
mov
scas
jp
mov
clc
xchg
sbb
mov
mov
lret
mov
push
sbb
push
inc
add
jge
jl
cld
push
push
push
dec
jg
mov
xchg
mov
ds
jne
popa
loopne
fs
inc
cmp
or
xlat
adc
add
mov
jle
mov
ss
xchg
sub
xor
and
aad
jmp
cli
gs
clc
xor
pusha
pop
mov
mov
aas
outsl
mov
pand
sti
sbb
call
jg
xor
or
xor
inc
sub
icebp
fcomip
pop
jmp
or
dec
sahf
loop
cmpsl
out
test
test
mov
lret
pushl
xlat
test
cmp
std
pop
push
jb
lea
pusha
cwtl
add
cmp
addl
add
inc
js
lock
hlt
in
sbb
dec
loopne
fcompl
cmp
jns
mov
ficompl
mov
dec
jecxz
stos
imul
jg
icebp
mov
add
mov
test
add
addr16
cmp
or
sahf
jae
sbb
mov
add
test
xchg
repnz
loope
scas
xchg
cli
rcl
mov
ret
pop
popf
dec
adc
cmp
or
xor
cmpsb
scas
in
int3
inc
fs
pusha
psubsb
inc
pop
lahf
dec
pop
aaa
or
jecxz
mov
hlt
xchg
mov
cmp
insb
fwait
ja
cwtl
dec
inc
fdivl
push
roll
and
xor
jae
push
pop
jl
push
fwait
sbb
imul
mov
pop
jbe
push
addr16
and
sub
mov
andl
scas
xchg
stos
mov
and
sub
rcrl
repnz
fwait
hlt
filds
stos
add
das
pop
cwtl
ret
push
mov
inc
mov
stc
dec
in
sbb
cli
je
pushf
mov
cmc
int
cmp
jnp
and
xchg
out
popa
cmpsb
mov
jae
or
mov
adc
jne
dec
and
mov
fsubr
das
inc
lret
insb
xchg
ja
sbb
dec
ds
mov
sbb
mov
pop
nop
xchg
aad
ja
sub
pushf
push
pop
shr
mov
sbb
fdivrl
mov
into
adc
outsb
push
xor
cld
cwtl
jl
mov
in
out
sbb
fisubrl
push
dec
jl
xor
xchg
bound
pop
mov
mov
fdivs
in
test
add
aaa
aam
xor
movsb
mov
sbb
enter
sub
mov
imul
stc
stos
dec
push
bound
fidivrs
push
lock
repz
ss
mov
repnz
les
scas
mov
outsb
mov
xor
scas
aam
movsl
iret
inc
lds
xchg
loop
les
repnz
into
and
and
cwtl
ja
imulb
hlt
lods
sar
fmuls
cmp
imul
addr16
mov
stc
fistps
adcb
push
fcomi
xchg
jae
iret
adc
xchg
mov
pop
push
inc
cmp
push
pop
mov
or
ljmp
clc
mov
dec
lock
adc
mov
movsl
pushl
jge
sub
shrb
loopne
leave
mov
or
sbb
xorl
pop
pop
sub
cmp
xchg
adc
pop
loopne
mov
mov
pop
add
test
int
psllq
shrl
sub
test
ret
sbb
repz
data16
mov
mov
dec
sbb
xchg
ficomps
and
inc
into
push
insl
cmp
bound
fmulp
dec
inc
push
das
insb
mov
test
fbld
mov
imul
cltd
out
xlat
rclb
es
ffreep
xchg
hlt
cmp
loope
cmp
cmp
mov
pop
mov
out
mov
out
adc
inc
mov
push
ds
test
or
into
jbe
ss
movsb
jo
mov
pushf
mov
adc
jmp
in
leave
dec
insl
fdivrs
and
sub
adc
fs
mov
daa
xchg
or
jnp
mov
add
dec
bound
mov
inc
popf
jnp
push
jns
addr16
clc
dec
sub
jno
push
fstps
js
lcall
sub
adc
jp
sahf
mov
lcall
inc
imul
mov
notl
adc
sub
dec
push
jge
xchg
mov
push
pop
ss
insb
xor
les
add
mov
pop
jae
inc
in
or
fwait
iret
in
lods
insl
imul
imul
mov
or
or
push
jl
cmp
pop
push
jb
mov
xor
popa
cs
lea
pop
mov
pop
sbbl
shll
dec
xor
cwtl
xor
in
cltd
jnp
popf
sub
pop
imul
cli
or
jle
xchg
orl
jg
popf
dec
mov
pop
cli
push
int3
sbb
pop
lock
outsb
jge
push
pusha
shrb
out
loopne
pop
outsb
push
jae
push
fadds
int
cs
inc
sbb
push
subb
mov
push
loope
dec
adc
pop
push
and
pop
inc
test
push
insb
fwait
fisubs
mov
fmuls
lods
jbe
ds
mov
aas
outsb
pop
cwtl
rcrl
add
cmp
test
xchg
lds
insl
or
pop
adc
cmpsb
icebp
pop
mov
shll
cmp
mov
xchg
rorl
lret
fwait
xchg
mov
and
in
stc
fistps
std
mov
inc
cld
cmpsl
jle
jg
rcrl
iret
and
mov
mov
ss
sbb
mov
sub
jg
popf
ljmp
mov
mov
inc
lock
push
iret
loop
xchg
sbb
adc
rorl
mov
call
add
jecxz
mov
mov
ret
sbb
sarb
dec
dec
xor
or
orl
sbb
inc
push
mov
outsl
bound
push
nop
dec
in
sbb
daa
cli
jo
nop
mov
jne
cltd
minps
mov
js
cmp
sbb
fisubrl
xor
inc
lock
dec
mov
push
jl
popa
out
mov
movsb
lods
jmp
cltd
mov
xor
xor
jmp
or
or
push
subb
into
pop
mov
pop
cmp
dec
mov
testb
lret
pop
sub
fwait
cli
or
je
fnstsw
xor
sbb
lds
mov
loopne
rorb
stos
sbb
add
xchg
jbe
inc
jbe
repnz
cmpsl
fldcw
mov
data16
mov
mov
lret
fstpt
fstp
repz
inc
das
cmpsb
out
mov
pop
jp
sub
enter
aas
lock
jge
outsb
jo
iret
sub
pop
daa
jl
push
add
inc
sub
jns
or
push
push
lret
scas
mov
jo
mov
push
jp
out
ljmp
mov
repnz
adcb
fistps
xchg
adc
push
pop
scas
jle
testl
ret
add
out
repz
jmp
mov
dec
or
loopne
add
not
lret
push
jecxz
or
xor
fmuls
push
and
jne
mov
xchg
mov
inc
ljmp
jbe
sbb
sbb
mov
jnp
push
out
cmp
int
movsl
add
mov
in
loop
cmpl
test
fwait
mov
pop
subl
inc
outsl
jmp
inc
pusha
test
or
dec
ss
add
xlat
mov
repz
sbb
ret
xchg
push
cmc
loopne
loop
mov
sbb
test
xchg
push
mov
fwait
in
das
pop
pop
push
sbb
dec
sub
jge
jl
cmp
mov
fwait
mov
xchg
inc
jmp
std
adc
call
cmp
xorl
pop
ja
or
lret
jg
mov
xor
mov
imul
scas
arpl
insl
fs
shrb
sbb
xchg
mov
cld
jp
or
and
adc
mov
mov
cmp
jle
mov
mov
bound
and
lock
jae
pop
daa
mov
push
aad
fisttpll
rcrb
int3
fst
aad
lahf
or
jg
mov
cld
testl
dec
xchg
push
repnz
dec
das
jg
mov
sti
pop
stos
inc
mov
xchg
mov
outsb
shrb
push
mov
or
add
mov
and
popf
add
sbb
mul
inc
outsl
mov
gs
push
arpl
xchg
rcrl
addb
and
stc
enter
inc
add
popa
push
fistps
out
inc
or
out
jo
lods
push
xchg
scas
in
test
fdivl
cltd
mov
push
jmp
in
push
mov
stc
push
mov
cmp
lahf
jo
inc
shlb
mov
mov
xor
test
add
addr16
ds
mov
or
dec
add
or
sarl
cli
loopne
cmpsl
aas
sub
xchg
sbb
push
mov
repnz
jo
or
sar
mov
test
sbb
pop
jo
inc
sbb
outsl
lods
sub
add
xor
dec
lret
ds
xor
xor
and
stos
adc
sti
xor
push
shl
mov
js
test
xor
cmpsb
add
sbbb
jno
add
in
mov
loop
mul
leave
xor
repnz
std
sbb
dec
inc
push
jg
push
jmp
push
sub
pop
sbbb
in
in
bnd
fs
xchg
add
aam
jg
jns
adc
lea
xchg
mov
pop
popf
scas
push
insb
xor
mov
xor
mov
or
mov
lds
mov
icebp
cltd
push
mov
insb
cmp
in
push
adc
and
mov
repz
imul
jg
fwait
cmp
ffree
jbe
xchg
xor
xchg
dec
fistpll
push
pop
xchg
gs
in
ja
sub
sbb
and
aam
and
lea
adc
adc
adc
mov
pushf
xor
dec
inc
dec
add
adc
popa
shll
out
mov
cltd
rolb
or
push
mov
mov
cld
and
hlt
lret
mov
in
ret
cmpsb
xchg
mov
jp
dec
fsubr
mov
push
lods
jmp
jne
inc
and
scas
loope
icebp
lcall
and
xchg
pop
and
into
lahf
mov
inc
test
nop
sbb
dec
movsb
ds
jb
scas
push
insl
push
or
addl
jbe
lahf
fidivs
and
cmp
repnz
and
cmp
xchg
loop
and
adc
lock
fs
int3
imul
fdivr
loop
je
icebp
adc
push
rorb
fdivs
cmp
xor
mov
stos
xchg
sbb
adc
sbbl
aaa
sti
in
and
js
fxam
lret
dec
jp
mov
mov
pop
xchg
mov
jae
fisubrs
or
in
push
xor
or
subb
out
sbb
jae
push
cmpsb
out
sub
sahf
ljmp
push
in
popa
popa
mov
icebp
aaa
daa
push
inc
fstpl
jb
sub
pusha
jbe
push
mov
cli
mov
xchg
popa
inc
mov
dec
pop
xor
xor
or
cwtl
pushw
cltd
lret
ret
push
sub
sub
daa
mov
pop
ficoml
aam
ret
test
push
push
push
and
iret
lret
outsb
mov
and
cmp
mov
cli
sub
bound
loopne
imul
test
movsl
mov
mov
sub
cmc
cmpsl
test
daa
push
stc
pop
mov
pop
push
cmp
mov
jae
xchg
fwait
in
rclb
sub
xchg
mov
pop
sub
sbb
pop
fnstcw
push
pop
push
movsb
pop
rcl
in
lret
hlt
mov
sub
out
mov
mov
ljmp
pop
outsl
mov
pushf
jnp
les
xor
cmc
inc
outsl
mov
jp
psllq
add
add
sub
pushf
jns
jb
cmpsl
ds
xchg
push
aad
mov
aaa
pop
push
pop
mov
aad
popf
xchg
sub
pop
mov
movsl
test
les
aam
mov
jae
sti
fists
adc
push
mov
lods
xchg
test
les
xor
mov
or
push
dec
mov
jb
xchg
cmp
repz
sub
jo
test
xchg
push
jmp
push
cwtl
adcb
test
xchg
fisttps
fmull
push
repz
testb
jle
cld
lock
jo
jp
lock
in
shll
mov
and
cmp
shlb
outsb
xor
in
lock
push
dec
xlat
xchg
clc
xchg
cld
pop
rcl
imul
inc
push
dec
dec
or
push
push
cmc
xchg
insb
clc
adc
pop
cmpsl
or
pushf
xor
jl
shrl
ja
xchg
xor
aad
adc
push
shll
int3
rol
mov
pop
sbb
rorl
sub
movsb
lcall
mov
cmovae
das
push
sub
imul
push
mov
je
inc
push
bound
mov
jle
or
jo
lock
lahf
sbbl
sarl
pop
or
sbb
fstps
aam
ja
cmpsl
or
js
mov
das
sbb
lahf
insl
inc
sti
fildll
loop
mov
push
adcb
cwtl
das
mov
rorl
cmp
jmp
jp
or
mov
fnstenv
cmpsb
sbb
push
out
xchg
and
and
cmc
jl
and
xchg
fsubrl
int
and
xor
inc
jmp
movsl
sub
pop
lcall
aad
jns
and
jg
fimull
push
xor
or
mov
mov
popa
aam
or
mov
inc
xchg
je
cmpb
xchg
inc
mov
dec
mov
mov
sbb
insl
xchg
push
loop
ret
inc
fs
clc
sbb
push
jnp
mov
addl
jmp
in
je
pop
insl
bound
add
mov
repnz
stos
rorl
loope
or
sbb
or
jne
and
mov
neg
test
xor
xor
je
imull
fsubrl
cmpsb
mov
and
dec
and
test
fdivs
push
inc
add
xchg
mov
out
lret
push
cmc
xchg
mov
hlt
sbb
cmp
inc
fdivl
jne
imul
sub
mov
mov
and
mov
pop
out
mov
xor
jnp
cs
and
aam
std
inc
xchg
add
mov
cmp
aam
jecxz
mov
pop
sbb
insb
push
jle
lret
stc
sahf
jge
enter
push
xchg
inc
sub
out
addl
popa
lea
in
mov
dec
sbb
inc
cmp
inc
push
mov
in
dec
xchg
movsb
andb
std
je
cwtl
shl
xchg
mov
ja
call
xchg
daa
daa
fdivrs
insl
xor
mov
imul
cmp
ss
lods
mov
lock
pop
jno
push
fcoml
cmp
jb
repnz
lret
addl
jl
loope
sbb
int
cmpsl
fisubl
mov
push
adc
xor
pop
std
rclb
mov
fsubrs
xorb
and
shrb
sbb
xchg
add
bound
clc
je
fldt
mov
out
and
lahf
push
xlat
ret
push
jb
imul
xor
test
iret
popf
adc
xor
pop
in
pop
outsb
pusha
push
xchg
lock
loop
mov
rolb
loope
push
and
and
add
inc
aam
lock
movsl
sti
jp
mov
sahf
pop
cmpsb
fsubl
imul
xor
or
mov
das
or
or
lret
int3
jge
fcompl
mov
call
mov
pop
sbb
sbb
jmp
add
mov
sub
inc
popa
pusha
xchg
aam
movsl
out
or
leave
add
jmp
dec
sub
cmp
mov
sub
ret
jmp
aam
dec
add
ficomps
pop
loop
dec
test
in
xchg
out
dec
repnz
sub
sbb
dec
mov
cld
jae
dec
fimull
adc
push
adc
dec
js
pop
dec
push
mov
or
shr
sti
fsubr
jae
inc
pushf
mov
or
push
sbb
inc
cmp
icebp
cwtl
out
push
pop
in
pop
push
movsl
sbb
test
inc
and
adc
push
xor
adc
pop
or
cwtl
mov
or
sub
xchg
into
outsl
jle
xor
fidivl
pop
popa
mov
imul
mov
sar
dec
divb
lods
adc
sub
push
sbb
fidivs
mov
sbb
rolb
mov
enter
test
stc
rcrb
in
dec
pusha
add
aam
push
fcmovu
jmp
mov
shrb
stc
xchg
or
addr16
push
jno
inc
cmpsl
sbb
mov
xor
cmpsl
cmp
dec
imul
cmp
jl
or
int
idivl
sbb
or
mov
inc
outsb
outsb
mov
sbb
lea
cld
lods
push
leave
nop
mov
push
cld
adc
adc
pop
sub
push
add
sbb
into
testl
fwait
imul
and
rcl
inc
pop
fildll
pushf
ds
push
add
cmp
pusha
pop
mov
fildll
fucomi
jp
fstp
mov
pop
xchg
mov
cwtl
hlt
dec
pop
jg
cmp
sub
mov
stos
mov
xor
cmp
aaa
xor
and
jne
in
pop
jno
das
sub
cmc
mov
in
pop
rclb
mov
cmp
lahf
mov
push
daa
arpl
inc
xchg
cmp
repnz
jmp
mov
add
cmp
movsb
mov
cmp
xchg
and
fisubrs
xor
arpl
jp
adc
aam
sbb
xor
daa
aad
fildl
xchg
or
xchg
pop
or
int
aad
pop
push
sbb
cli
test
xor
adc
addl
inc
in
movsb
int
pop
jbe
negb
or
out
cmc
adc
hlt
cmp
push
or
stos
scas
and
dec
adc
in
test
xchg
int
push
xchg
sbb
shl
add
ret
insl
rorb
jle
andb
rclb
imull
bound
clc
xchg
push
sbb
xchg
repz
imul
cltd
push
mov
shlb
mov
dec
in
fwait
scas
or
add
aam
cmc
movsl
jo
push
sub
unpcklps
bound
fistl
ljmp
sahf
adc
call
xchg
sbb
dec
out
in
sbb
rol
adc
push
call
jl
stos
mov
adc
movsl
ljmp
nop
fisubrs
sbbb
mov
adc
stc
insl
shr
xor
mov
mov
cmp
jae
hlt
lds
jno
aad
add
lret
pop
fucomi
call
push
push
hlt
sbb
flds
cmp
mov
xor
mov
push
adc
dec
jg
arpl
lcall
pop
push
dec
cmp
adc
add
fs
mov
clc
aad
dec
lods
pop
test
int3
pushw
xchg
rolb
in
and
inc
insb
shl
jb
jns
or
lock
lea
xchg
mov
mov
je
and
add
fsts
fwait
mov
aas
pop
mov
out
aam
pop
xchg
jle
jp
mov
cltd
pushf
cmp
xor
mov
ss
sub
adc
mov
jle
xorl
cmp
mov
pop
outsl
push
jg
mov
decb
mov
sbb
xchg
rorb
push
or
fadds
cmp
mov
xchg
jns
adc
inc
cmpb
inc
xchg
sbb
mov
mov
push
xchg
add
scas
test
les
int3
test
jns
out
lcall
filds
sarl
js
lock
shl
mov
movsl
rclb
pop
jg
ljmp
fstp
add
mov
fisttpll
mov
add
jg
arpl
dec
in
jns
adc
cmp
pushf
cmp
in
jb
imul
jl
popa
inc
cli
xor
jne
xor
es
pop
pop
sahf
pushf
imul
sub
fsts
pop
sub
push
and
jmp
cli
fbld
jmp
fldt
rcll
or
sahf
jg
jae
push
sbb
pusha
xor
cmpsb
ds
rcll
inc
lods
xchg
push
pop
sub
in
ss
sbb
ljmp
popa
pop
rorl
pop
and
lods
mov
or
pop
push
jno
pop
pop
xchg
push
sub
bound
mov
in
insl
mov
lock
pop
repnz
and
jns
int
push
dec
dec
movsb
jno
xchg
push
xor
jbe
movsb
clc
adc
icebp
imul
stos
jns
shrb
loop
ljmp
xor
call
sub
dec
fimull
jae
lods
ds
pop
dec
imul
test
mov
push
insb
cmc
pop
xor
into
mov
cmp
and
adc
lock
icebp
lods
xor
jp
and
inc
insb
mov
mov
mov
fcmovnb
mov
cs
addr16
or
add
or
and
aam
pop
push
call
cs
movsl
add
and
dec
lea
adc
adc
lods
sarb
aas
mov
jmp
insb
pop
imul
les
add
sub
ret
cli
out
inc
sub
mov
mov
mov
das
cmp
pushf
je
mov
fst
push
pop
addb
xor
lret
pop
sarl
inc
adc
jo
inc
arpl
push
orl
cmpsb
outsb
insl
sahf
adcb
pusha
mov
xor
mov
lcall
call
arpl
or
inc
hlt
test
or
repnz
ss
clc
fiadds
addr16
jecxz
add
daa
or
fs
lods
or
dec
ret
lock
dec
mov
test
jp
cmp
out
xor
cmp
xchg
lcall
mov
lods
ret
push
adc
cmpb
cmp
test
mov
test
jmp
or
push
dec
push
xchg
into
jb
sbb
cmp
int3
shrb
push
push
clc
xchg
mov
out
mov
or
or
jae
pop
ds
pushf
les
pop
or
addr16
inc
jle
lods
xor
stc
or
xchg
jmp
mov
je
lahf
and
test
cmp
test
xchg
sarl
adc
test
pop
nop
iret
imul
fwait
in
mov
mov
mov
jg
cmp
jg
inc
rcrl
adc
mov
es
jo
ss
push
sbb
and
popa
sbb
aam
inc
or
inc
add
addr16
movsl
cmp
xchg
mov
rcl
mov
sbb
jl
mov
insb
jne
mov
in
into
ds
daa
add
into
jo
mov
jmp
inc
pop
xchg
and
or
mov
xchg
lcall
pop
mov
adc
clc
mov
cmpsl
xor
jb
mov
add
or
loop
dec
adc
hlt
xor
jle
inc
stos
gs
pop
cmp
fwait
mov
mov
xchg
stc
jmp
or
xor
insb
sbb
dec
ss
mov
ja
out
cmpsl
aad
imul
push
sub
gs
icebp
jp
popf
inc
adc
andl
jecxz
clc
xor
shll
or
pop
sbbl
xchg
jbe
jnp
jno
pcmpeqw
repz
int
add
pop
gs
jecxz
int3
and
fs
and
add
lods
fstl
push
xchg
adc
pop
mov
in
pushf
pop
jp
mov
fcmovnbe
mov
bound
adc
cmc
push
mov
stos
push
and
fxch
inc
mov
jae
jno
aad
mov
jns
mov
adcb
outsl
not
stos
frndint
xor
lea
jo
aad
outsl
jbe
punpcklwd
fwait
fs
shll
in
pusha
push
pop
cmpsb
mov
out
das
in
mov
dec
jne
imul
add
cmpsl
arpl
test
ljmp
fwait
sarb
xor
mov
test
add
push
insb
cld
dec
mov
jns
dec
pop
out
enter
cmc
out
mov
test
push
xchg
lods
sub
cmp
sbb
lods
mov
inc
mov
lcall
push
ss
aam
jb
or
pop
dec
dec
fists
xlat
jp
xorb
cmp
xchg
test
stos
and
push
mov
push
shrl
and
sub
cmp
jno
fldenv
int
enter
add
mov
cld
nop
sbb
pop
pop
pop
insb
sub
xchg
jl
adc
outsb
cmp
dec
fidivrs
in
jae
push
aad
shlb
ret
jb
pop
push
sbb
leave
dec
jae
mov
inc
mov
mov
aad
mov
inc
cmp
and
out
xchg
notl
sub
lods
fbld
mov
fiadds
pusha
out
and
add
xchg
cmc
pop
icebp
or
jmp
icebp
int3
sub
push
mov
ljmp
out
test
sub
push
hlt
repnz
pop
rorb
loope
lds
nop
stc
addr16
mov
mov
aaa
pop
cmp
andl
mov
xchg
sub
inc
adc
mov
into
push
cs
fimull
in
pop
sub
pop
or
inc
push
loopne
jne
mov
out
push
xchg
mulb
aad
loop
ds
sbb
adc
or
xor
shlb
fidivrl
ja
in
inc
fldenv
and
push
adc
repz
and
fwait
rcrb
testl
lahf
lahf
sub
dec
clc
negl
nop
loop
scas
push
xor
adc
stos
xchg
pop
mov
sub
subl
stos
adc
test
inc
jns
adc
int3
mov
mov
scas
push
scas
sub
pusha
xchg
sbb
jg
mov
lds
pop
arpl
dec
pusha
fs
push
lock
mov
dec
popa
or
imul
nop
lea
jp
imul
ret
flds
imul
mov
mov
in
mov
jbe
mov
push
mov
jo
adc
in
test
nop
add
lret
sti
or
xorl
xchg
mov
js
gs
divl
push
mov
or
out
adc
or
out
pop
push
mov
and
mov
pushf
mov
sti
arpl
mov
stc
mov
add
cmp
or
dec
lds
jbe
mov
push
stc
jbe
xchg
popf
fwait
sbb
sub
stos
xlat
jo
sub
jns
mov
jo
lock
loopne
sbb
inc
fstpt
xchg
sarb
mov
stos
insb
lock
addr16
jl
pop
adc
push
xor
xchg
movsl
fdivp
movsb
pop
pusha
xor
lahf
pushf
rcr
push
mov
mov
push
jp
imul
ret
add
cmp
dec
push
sub
xchg
adc
js
sub
jnp
mov
mov
sub
lret
pop
ss
lds
push
dec
in
rclb
add
push
jg
daa
mov
inc
aad
les
xchg
inc
sbb
scas
loope
nop
addb
sub
lods
cmp
cmp
fcompl
fcompl
jno
dec
xor
xor
xor
sbb
jl
call
add
fldt
stc
jno
scas
adc
divb
or
aas
jecxz
test
in
loop
and
mov
in
sbb
mov
sbb
hlt
test
cmp
xchg
mov
shll
push
mov
sub
shll
xchg
jns
out
addr16
out
add
lret
add
ljmp
in
je
sub
cmc
lock
push
leave
xchg
movl
mov
insl
mov
sbb
lds
arpl
adc
sbb
fisttpl
add
lods
cmp
stos
mov
sti
xor
adc
pusha
add
inc
jecxz
sbb
out
mov
rcr
data16
mov
in
lahf
adc
ret
icebp
jle
stos
jo
push
jmp
mov
xor
pop
jo
mov
lock
mov
jg
mov
push
jne
out
popf
in
rolb
fwait
xchg
or
jg
iret
ret
and
loope
sbb
fisubs
stos
jae
xchg
push
mov
lock
aas
mov
fcoms
pop
sub
lret
xlat
mov
pop
ds
sbb
mov
pushf
xor
xor
sahf
mov
adc
dec
imul
cmc
jno
jle
test
inc
xchg
leave
pop
or
lcall
sahf
pushf
xor
add
fwait
insl
lret
mov
sub
sahf
fisttpll
mov
out
inc
add
int3
inc
add
cwtl
xor
and
dec
in
sbb
aas
shll
out
cs
mov
lock
iret
dec
xchg
and
addl
or
mov
cmp
test
rorb
jne
jg
pop
xchg
out
lods
movsl
loop
vcvttpd2dqx
cs
xor
push
mov
pop
mov
lret
neg
inc
mov
xlat
repz
shr
fcoms
es
xor
push
pop
divl
xchg
and
imul
inc
dec
adcl
jae
scas
jg
icebp
jbe
mov
sbb
sbb
lea
ss
mov
jbe
test
insb
das
and
xchg
pushf
cmpsl
inc
inc
test
mov
adc
fs
jge
mov
mulb
and
cmpb
push
mov
mull
lods
xchg
ss
stc
xor
adc
out
stc
cmp
pop
xor
loope
loope
call
adc
imulb
mov
mov
and
les
outsb
subb
xor
cmc
pop
data16
cld
cmp
xor
aad
xchg
rolb
in
mov
ret
jge
jp
loopne
ret
testb
lods
iret
fnstcw
cmp
push
lret
dec
sbb
clc
mov
pop
cmpb
int3
in
icebp
mov
ja
pop
rcrb
jae
jecxz
fs
in
sbb
jl
stos
stos
dec
loop
out
and
ljmp
cs
add
jmp
int
jge
pop
popl
stos
push
ret
popf
cmpb
inc
push
test
mov
inc
aas
pop
clc
fs
rolb
loop
imul
repnz
mov
add
lret
ljmp
jmp
hlt
jo
jp
xlat
xor
sbb
adc
lret
mov
test
push
fs
shll
ret
idivb
movb
out
lea
lods
mov
and
out
mov
dec
mov
mov
dec
add
push
icebp
cmp
imul
sti
negl
mov
pusha
dec
loope
enter
call
adc
cld
xchg
mov
adc
nop
pushf
cmc
sub
cld
fstpl
out
mov
push
stc
mov
stos
test
xlat
sub
jns
test
movsl
jns
fmull
enter
test
cmp
mov
dec
out
lret
stos
dec
push
push
mov
fcoms
popa
test
adc
xchg
add
pop
es
add
push
aad
ror
add
sti
nop
push
les
pop
push
or
mov
xor
mov
es
cs
popa
sub
and
or
pop
lcall
lds
jo
jbe
fcoml
cmp
mulb
xchg
push
jne
movd
dec
pop
insb
and
dec
or
pop
push
lcall
pushf
or
scas
je
push
sub
or
popa
adc
jg
bound
pop
inc
xchg
adc
fucomip
rcrb
test
cmp
scas
cmpsb
xchg
and
dec
push
dec
push
jecxz
push
fsts
cmp
sarl
loope
dec
push
aaa
cwtl
arpl
lods
fmul
add
jnp
push
dec
or
cmpsl
loop
dec
cmpsb
out
lret
sub
mov
std
stc
mov
test
jo
leave
jg
in
arpl
je
cld
xchg
xchg
and
cld
or
cmpl
sbb
push
xor
aad
cli
mov
shrl
inc
jecxz
or
xor
outsl
jo
adc
sub
push
stos
or
mov
push
adc
clc
dec
scas
mov
popa
fsubrs
pushf
fsubl
jge
adc
enter
popf
repz
cmp
pop
jle
adc
pusha
xor
add
in
jp
std
shlb
in
push
loop
fdivr
fsubr
mov
pop
pop
jl
mov
insb
insl
cmc
xlat
mov
lods
adc
adc
and
pop
xorl
adc
je
clc
inc
mov
push
xchg
fists
push
sub
and
je
cmpsb
ficoms
cwtl
lret
push
lcall
repz
jp
ja
call
out
pusha
aas
lahf
cs
mov
add
inc
pop
adc
adc
pop
or
cmp
xchg
mov
aas
add
rorb
fsubl
adc
xchg
or
repnz
addr16
insb
test
xor
sbb
dec
inc
add
mov
pushf
mov
xor
mov
mov
adc
shll
add
push
or
std
bound
mov
outsl
jmp
adcb
adc
add
add
push
int
mov
insb
imul
adc
push
scas
inc
inc
xchg
fisubrs
adc
repnz
cmp
cmp
push
jle,pn
push
pcmpeqw
sub
jge
mov
dec
mov
imul
pop
test
push
sar
mov
loop,pt
jp
scas
test
addr16
pop
jnp
dec
imul
lahf
mov
scas
std
daa
inc
pusha
test
mov
loope
inc
cs
sarb
lods
add
dec
aam
test
out
std
ficoml
lods
cltd
jmp
xchg
xor
gs
inc
push
lret
xchg
jae
pop
or
push
loopne
dec
push
lcall
cmp
cmp
dec
repz
cmp
out
pop
testl
fistl
pop
jecxz
mov
jae,pn
cltd
inc
cmp
jnp
cmp
dec
into
int3
push
sbb
in
mov
xchg
test
push
jns
add
sti
push
frstor
push
fcompl
cmpsb
pop
sub
roll
mov
mov
dec
inc
cmp
aas
sbb
and
das
enter
out
push
loope
dec
mov
dec
add
mov
sub
test
scas
add
mov
push
ljmp
adc
xlat
sti
cmp
mov
xchg
inc
jae
adc
fstps
inc
xchg
divb
add
nop
and
imul
xchg
adc
lret
test
add
filds
mov
fucomip
std
add
push
loopne
es
push
inc
and
add
mov
data16
shl
jl
movd
jnp
sbb
xchg
incb
popa
sub
pop
stc
out
lock
or
dec
cmpsl
les
sbb
loopne
xor
cli
pop
int
mov
aaa
fistl
pop
out
mov
mov
ljmp
bound
push
xchg
and
xor
lret
imul
loopne
js
sub
and
mov
sub
rorb
iret
jge
cmpsl
mov
stos
ret
cltd
xor
mov
xorl
jns
or
add
popa
lods
mov
les
xor
and
sub
and
push
or
ljmp
fsubl
adc
es
aad
sbb
mov
xchg
pop
scas
xlat
mov
repz
mov
jge
lock
sub
add
sti
push
xor
cmp
in
mov
lahf
or
cmp
test
aaa
jns
mov
xchg
mov
iret
repz
hlt
out
jge
mov
xor
and
sub
xor
fs
out
xor
xchg
sub
std
sbb
cmp
mov
mov
cli
xor
mov
outsl
hlt
out
jnp
imul
dec
lahf
or
out
inc
xchg
push
add
cmp
pop
push
pop
jnp
pop
sbb
jle
fs
into
xor
mov
test
testl
daa
lods
loope
mov
int3
je
js
popf
xchg
or
scas
xchg
and
and
cs
fxam
pop
imul
xor
xor
pop
pop
pop
and
movsb
popa
rcr
test
ret
adc
and
cmpsl
mov
sbb
das
dec
sbb
xor
repz
sub
test
cld
inc
push
sahf
mov
bound
jle
in
shll
jmp
mov
outsb
pop
mov
push
jg
test
mov
sub
cltd
dec
push
out
nop
iret
outsb
mov
cmc
or
mov
pushf
scas
xchg
inc
adc
ja
inc
add
sub
pop
int
pop
pusha
pop
mov
testl
xchg
ret
jae
ss
je
mov
leave
xor
inc
js
lods
push
pop
xchg
jmp
sbbb
imul
jg
inc
lahf
pop
insb
es
push
movsb
add
lea
and
bound
movsb
les
mov
jg
cmp
push
and
daa
mov
loop
pop
sub
jmp
xorl
mov
cmp
aad
in
ljmp
outsl
sti
lret
int3
mulb
inc
pop
cli
mov
repnz
test
hlt
fmuls
push
mov
icebp
jno
in
hlt
sar
iret
fisttpl
int3
and
jp
jmp
or
out
ret
scas
rcrb
fnstsw
cmp
push
int
ja
mov
xchg
hlt
inc
call
push
or
and
out
fs
aam
cmpsl
rorl
dec
mov
mov
stos
xchg
icebp
dec
jns
mov
cld
int
mov
insl
sub
ljmp
cli
loop
mov
mov
push
popf
and
cmp
cmp
mov
cmpsl
jnp
ret
mov
pop
aaa
movsl
push
inc
out
ret
fs
sub
outsb
outsl
loop
inc
inc
push
inc
into
bnd
addb
rorb
scas
cmpxchg
mov
subl
mov
push
loope
add
lcall
add
cltd
fildll
repz
and
xchg
jno
dec
pop
loop
mov
jp
ljmp
mov
ret
incb
xchg
insl
xchg
mov
loopne
lods
sbb
lahf
pushf
lret
rol
fnstcw
nop
dec
dec
fwait
mov
daa
lcall
or
fisubs
adc
addr16
call
mov
shl
popf
bound
pop
jo,pn
pop
xor
mov
repz
push
xchg
dec
mov
dec
stos
inc
cmpsl
adc
or
mov
addr16
cltd
test
sub
bound
xchg
and
mov
clc
add
jmp
xchg
popf
sub
mov
dec
idiv
mov
add
es
clc
sub
sbb
ror
push
test
or
sbb
cmc
cmpsl
jmp
idivl
cmpsb
xchg
call
in
out
fidivrl
fmull
bound
sbb
xor
ja
mov
inc
scas
inc
inc
repnz
pop
scas
daa
std
sub
scas
xor
cmp
xchg
int3
fdivl
pop
xchg
shll
scas
imul
dec
movsl
out
dec
fcmovnu
push
mov
cmpsb
mov
lea
stos
hlt
cltd
or
sbb
testb
and
aam
rcr
push
mov
imul
sbb
and
jle
loope
sub
add
pop
jo
xor
mov
shll
mov
xchg
adc
jbe
outsb
jb
xchg
lea
push
mov
imul
dec
push
xchg
loope
addr16
sbb
push
lock
sbb
mov
repz
fdivrs
outsl
push
shll
inc
pop
faddl
ljmp
fsubrs
lods
or
roll
inc
stc
icebp
jne
add
rcll
inc
or
cltd
add
cmpsb
xorl
push
pop
mov
mov
fdivl
cmp
test
les
xchg
sbbb
push
push
push
mov
push
inc
and
jae
jo
sbb
es
or
pop
dec
push
gs
jg
mov
repnz
insl
xor
pop
lods
call
push
add
jg
mov
xchg
lahf
jns
ret
jge
and
test
call
pop
popf
push
scas
clc
popa
adc
mov
inc
mov
fisttps
push
jb
dec
in
icebp
call
out
mov
ja
xor
scas
xchg
add
jno
pushf
ljmp
xchg
cli
hlt
dec
lret
inc
push
and
sub
push
sbb
pop
popl
jne
ret
sarl
stos
mov
cmpsl
fmuls
sub
mov
pushf
imull
jmp
gs
jnp
dec
adc
inc
movsb
imul
loope
inc
ret
xor
les
data16
stos
js
mov
out
mov
rolb
fdivl
sbbb
shlb
inc
dec
data16
jne
xor
and
mov
ret
adc
cs
fadds
rol
inc
fbstp
mov
out
ss
movsb
clc
mov
pop
xchg
loopne
mov
lcall
aaa
and
sub
or
lds
pop
xor
pusha
xchg
mov
fimuls
or
pop
cmp
movsl
jb
mov
cs
push
push
stos
popf
push
sub
mov
sti
stos
mov
xchg
repnz
lods
sub
sbb
std
or
icebp
and
aam
sbb
fcom
sub
sbb
mov
int3
inc
ja
mov
int3
imul
stos
and
push
mov
xchg
mov
call
lock
out
mov
cmpsl
pop
or
push
mov
adc
dec
in
or
jae
sti
dec
enter
xchg
mov
mov
fidivs
pop
sbb
fs
jp
pushf
push
es
push
movsl
mov
and
ret
cmc
add
mov
fdivs
call
test
test
pop
repnz
mov
jge
sbb
sahf
cmp
mov
call
int
sbb
fnstenv
repz
mov
jge
and
mov
leave
out
and
jns
nop
mov
pop
push
xchg
aad
add
repnz
dec
and
sub
aaa
adc
or
rcll
xchg
mov
ds
lret
xor
jns
adc
aaa
pop
pushf
call
jg
out
hlt
shrl
jmp
and
push
nop
push
dec
adc
adc
push
mov
into
push
add
loope
adc
push
mov
in
dec
fsubr
out
loop
push
jae
fdivs
shll
sbb
sbb
lret
shlb
ret
jo
xorl
fs
pop
pop
sahf
push
ljmp
ret
mov
dec
int3
xchg
lret
mov
mov
rcll
in
imul
cmp
mov
sbb
add
imull
movsl
insl
push
loope
inc
mov
push
pop
je
push
pop
mov
xchg
mov
lahf
arpl
sub
mov
and
jno
inc
aam
cmc
adc
iret
xchg
insl
loope
mov
xchg
or
mov
pop
or
adc
call
cmpsl
xchg
or
mov
std
xor
cmp
xchg
testb
pop
cmpsb
mov
mov
dec
cltd
fs
aas
xor
sahf
xor
mov
dec
mov
cmc
lcall
add
das
cld
scas
cltd
ret
mov
mov
into
sbb
ss
cmpsl
sti
pop
jp
fistps
sbb
in
cmc
or
rol
lds
mov
push
int3
fdiv
mov
jae
jnp
jge
add
in
fidivrl
xlat
aaa
xchg
cld
inc
dec
dec
in
jmp
adc
scas
and
mov
inc
push
cmp
pop
aaa
fisttps
lods
andb
dec
mov
test
push
cmp
jnp
ja
popf
push
pop
sbb
mov
pop
pop
das
dec
lret
lcall
aas
mov
mov
sbb
insl
imul
mov
je
iret
fs
scas
jle
adc
nop
aad
ja
insb
jp
and
sbb
pop
pop
or
or
arpl
mov
clc
movsl
and
inc
jbe
xor
insb
cmpsb
mov
mov
cmp
dec
jo
add
adc
call
jmp
stos
cwtl
in
out
mov
ret
gs
inc
imul
or
lods
push
bnd
pop
and
jl
and
xchg
xchg
mov
xor
or
int
adc
fisttpll
dec
iret
rclb
cmpsb
pusha
pop
push
aam
loop
push
push
dec
loopne
mov
int
inc
fcoml
dec
push
shr
sbb
mov
cltd
add
mov
dec
xchg
dec
leave
stc
mov
movsl
stos
out
outsb
pop
add
pop
jle
les
pop
sub
or
push
sti
aas
repz
lret
bswap
and
mov
insb
pop
out
out
ja
cmp
mov
ja
mov
jge
and
shlb
aad
xchg
movsb
stos
lods
jge
hlt
shll
adc
ret
adcl
add
add
or
sbb
mov
leave
shl
aad
cmpsb
scas
out
enter
inc
xchg
xchg
lcall
cmp
push
ljmp
pop
dec
cmp
jp
and
cli
orb
pop
and
push
shll
dec
add
movsl
jg
fmull
popa
lods
lahf
xchg
push
fwait
stos
mov
movsb
fs
clc
push
and
es
addr16
push
inc
sti
scas
in
push
inc
ret
push
cmpsl
decl
mov
add
xlat
and
cmp
fadd
bound
mov
roll
jb
xchg
loop
mov
mov
out
test
push
sub
lahf
sti
push
push
cwtl
gs
popa
inc
jns
bound
stos
xchg
xchg
mov
mov
pop
push
aas
xchg
xchg
fidivs
movsl
and
arpl
pushf
cmp
sti
outsb
xor
jnp
fsubrp
bnd
idivl
pushf
rol
mov
dec
jl
mov
jb
in
mov
pop
test
xchg
hlt
inc
and
std
pop
push
dec
lcall
rolb
imul
and
jo
pop
and
cmc
mov
hlt
imul
xchg
cltd
jno
sbb
add
out
pusha
cmpb
mov
inc
xchg
adc
jge
lods
jle
es
aaa
outsb
clc
loop
pop
fistl
jmp
ds
lret
mov
and
ror
jle
ret
rolb
imul
dec
jbe
mov
clc
mov
loopne
push
adc
pop
int3
sub
xor
mov
mov
mov
dec
adc
sti
jp
xor
lcall
cs
cwtl
dec
cs
stc
icebp
xor
cmp
cmpsl
or
sbb
adc
ljmp
fsubs
es
stos
mov
and
jmp
outsl
push
add
dec
aad
mov
aad
cmp
jne
andb
add
loop
jb
aad
sub
test
push
mov
mov
mov
dec
push
sub
mov
or
mov
std
cmp
or
and
imul
loope
jo
mov
loopne
mov
or
std
mov
call
adc
jl
jb
jne
or
sbb
out
out
jbe
xor
push
add
push
mov
or
jnp
xor
stos
cmp
out
inc
push
mov
in
pop
adc
in
dec
xchg
or
movsb
xlat
inc
icebp
and
cmp
js
jg
inc
pop
pushf
jne,pn
pop
add
daa
xor
aas
leave
add
jns
dec
cs
mov
movsb
test
es
mov
inc
or
testl
jbe
push
in
xchg
ficoml
fstps
jo
mov
hlt
xchg
push
push
fisttpl
std
ret
adc
lret
sub
fidivl
dec
mov
sub
inc
test
enter
xchg
jns
icebp
ret
test
hlt
pop
or
cld
lock
call
mov
loope
loop
lcall
data16
push
xchg
out
cld
ds
lock
iret
sub
rep
dec
add
dec
imul
xchg
adc
or
fmulp
into
pop
jae
fists
xchg
shrl
inc
jnp
mov
rorl
cmpsl
div
xchg
mov
fisttpl
dec
and
movsl
jno
call
mov
int
addr16
mov
movb
push
scas
rolb
push
sbbl
inc
cmp
andl
andl
adc
push
les
div
lods
addb
ja
mov
insb
rcrb
xchg
push
dec
out
cmpsb
xor
inc
repnz
cmp
aaa
insb
aaa
push
fs
pop
clc
mov
cmpsl
fisubrl
std
repz
xchg
mov
dec
rcll
gs
xchg
jge
cs
dec
daa
ja
push
in
jle
lea
push
cli
add
xchg
dec
imul
pop
jno
fcoml
inc
sub
lock
sub
fdivr
and
mov
je
mov
test
fldt
jae
lret
xor
in
or
and
stc
and
out
daa
add
out
push
subl
arpl
and
mov
cs
lds
loop
xor
mov
xchg
out
and
inc
jl
jo
cli
mov
inc
in
mov
pop
sub
sub
in
mov
dec
push
add
repnz
dec
pushf
sub
cmp
inc
xchg
aas
mov
and
mov
out
pop
adc
and
cmp
and
fbstp
push
push
pop
push
sbb
push
iret
div
aaa
pop
xor
ret
ret
addr16
shl
lret
push
call
cmp
push
or
dec
flds
fnstsw
movups
movsb
mov
data16
or
pusha
lret
push
in
jns
iret
mov
pop
outsb
out
dec
fwait
xchg
bound
add
dec
fsts
inc
jno
jns
mov
push
int3
cmpsl
out
ss
std
jns
sbb
jnp
bound
xlat
push
imul
xchg
insl
inc
shlb
js
jmp
lea
in
insb
and
sub
les
jle
ja
clc
fcmovne
mov
pop
sbb
push
sub
cmp
mov
sbb
out
cmp
movsb
addb
sbb
or
aam
sub
pop
xchg
cmp
lcall
jne
aas
mov
insl
lret
out
comiss
imul
pop
fdivp
stos
icebp
sarb
out
outsb
test
mov
mov
leave
cwtl
out
loopne
in
xorb
sbb
lahf
sub
lret
or
sbb
add
clc
xchg
pop
cmpsl
or
outsl
adc
jmp
fisubrl
add
jne
cmpsl
cs
xchg
pop
stos
inc
stos
cmp
arpl
push
aad
stc
xchg
es
pop
mov
jmp
or
mov
mov
hlt
mov
jge
jns
iret
test
or
xchg
pop
rol
cli
dec
test
pop
popa
push
punpcklbw
adc
imul
js
cmp
sub
pop
mov
lcall
les
sbb
cmpsl
out
movsb
sbb
mov
sbb
xor
filds
and
sahf
xlat
insb
and
outsl
test
shlb
dec
aas
daa
insl
iret
jp
mov
push
fsub
lret
jg
mov
sbb
and
push
mov
pushf
sbb
jo
mov
inc
and
call
xor
mov
cwtl
loop
cwtl
arpl
push
mov
mov
and
pop
add
out
jnp
das
aad
les
lret
lret
mov
adc
adc
sub
bound
loopne
xchg
and
add
shrb
or
inc
jbe
cmp
imul
mov
out
pop
adc
mov
pop
add
lret
sahf
aaa
in
std
pop
mov
clc
cltd
adc
jge
popa
ret
pop
repz
push
test
jb
xor
call
outsb
data16
adc
mov
push
pop
aam
scas
mov
stos
ljmp
sbb
es
cli
push
jl
inc
push
mov
sbb
out
xchg
dec
test
and
mov
lahf
dec
hlt
pusha
jl
icebp
pshufw
mov
dec
test
loope
mov
je
xchg
pop
in
or
and
push
inc
lods
shlb
sub
js
aad
inc
mov
pop
inc
movsbl
shlb
inc
push
in
xor
neg
icebp
sti
mov
lret
scas
inc
inc
imul
lahf
cltd
pop
lahf
pop
push
je
mov
ljmp
pop
pop
cmp
sti
movsb
adc
inc
loop
std
jmp
fildl
xor
jns
push
nop
test
inc
pop
pop
mov
icebp
and
xchg
add
xchg
sbb
mov
or
jo
daa
add
and
fs
mov
sbb
pusha
add
loop
testb
insl
xlat
add
and
ret
push
jb,pt
sub
lret
xchg
cwtl
lea
outsl
in
sub
sub
stos
lahf
cltd
fwait
xchg
push
popa
mul
jbe
pop
loop
and
scas
in
mov
aad
iret
sbb
icebp
sbb
mov
dec
jae
mov
lock
lret
push
or
data16
int
mov
inc
xor
jle
add
xchg
or
push
add
iret
jne
mov
arpl
call
sub
cmp
into
push
cld
sub
inc
sub
sbb
fdivrp
lcall
movsl
ss
jbe
mov
test
test
mov
xchg
jle
or
add
mov
imull
adc
das
push
ret
cmpsl
shrb
sub
push
mov
jecxz
lea
push
aaa
fwait
test
pop
lahf
sbb
cmp
pop
mov
adc
sub
sub
sub
sub
lret
push
jnp
xchg
fwait
les
and
or
mov
inc
pop
pop
repz
push
mov
jno
xchg
pop
loopne
lcall
lfs
test
xor
ret
mov
loopne
xchg
mov
lods
sub
sub
lahf
add
aaa
pop
push
sbb
movsb
sbb
and
test
gs
xchg
lahf
enter
mov
push
lcall
mov
mov
xor
cltd
nop
mov
xchg
inc
xor
test
shlb
movsb
push
cld
call
sbb
pop
mov
jne
js,pt
bound
in
lret
xor
inc
test
add
and
push
jg
pop
jl
and
test
repz
loope
int3
ds
sbb
jle
icebp
xor
push
jle
imul
pop
nop
test
mov
mov
jp
inc
aaa
lcall
lcall
incl
orl
xor
and
xor
sti
xor
outsl
xchg
push
adc
jl
add
leave
cli
mov
cmp
dec
dec
jg
xor
punpckhbw
adc
movsl
outsl
xor
push
test
inc
add
pop
mov
arpl
sub
insb
mov
xor
mov
popa
mov
lods
cwtl
mov
fwait
or
push
push
mov
or
das
addr16
fs
arpl
adcl
adcb
xor
cmp
addb
pop
jnp
mov
fistpll
mov
or
push
rcrb
fistps
pop
movsb
add
lret
in
jb
iret
jle
ds
addr16
pop
add
outsb
sbb
xor
js
add
mov
pushl
shl
jg
mov
aaa
repnz
sbb
scas
fisubrs
sub
mov
orl
stc
push
aas
test
sbb
sti
scas
mov
xor
sub
jge
test
decl
adc
cwtl
jecxz
mov
dec
dec
jns
push
sub
into
inc
ret
sti
dec
jo
stos
shll
dec
jo
push
dec
cmp
fsubl
test
cmp
nop
adc
push
hlt
mov
call
jno
aad
inc
ja
xor
dec
stos
gs
out
int3
mov
dec
pop
mov
dec
adc
aaa
jnp
mov
xchg
sbb
fimuls
or
adc
or
mov
jle
int
pop
clc
inc
outsb
cli
stos
addr16
adc
imul
dec
cwtl
lcall
mov
jno
xor
icebp
dec
xor
xor
repnz
insb
js
lret
dec
sub
add
adc
loop
es
in
divb
outsb
mov
cltd
sarb
dec
mov
popa
repnz
inc
movsb
sahf
mov
loope
sub
push
loopne
inc
in
xor
ret
or
add
call
in
xchg
jne
dec
push
fwait
push
pop
push
popa
or
lahf
add
movsb
push
and
push
inc
mov
cld
std
pusha
mov
popa
dec
xchg
aas
dec
iret
push
dec
lea
jg
mov
das
inc
daa
mov
mov
psubusw
fidivrs
aad
dec
fs
mov
mov
and
movsl
fidivs
pop
xor
cs
jl
fisttps
add
imulb
xor
or
out
adc
push
mov
ret
push
inc
mov
xor
fdivl
jl
or
mov
mov
xchg
xchg
sub
sbb
or
iret
pop
adc
adc
mov
das
jmp
pop
and
imul
or
add
cmp
fwait
add
xlat
leave
xchg
pushf
out
cs
lods
dec
xor
stos
mov
ja
or
sbb
sti
xor
push
xor
xor
pop
sti
pop
jae
dec
imul
cmp
insb
adc
mov
imulb
loopne
pusha
daa
mov
add
xchg
xchg
push
inc
fwait
push
dec
cmp
mov
mov
xchg
cltd
xchg
ljmp
mov
and
push
cmp
loope
mov
or
cmpsl
dec
stos
cmp
clc
mov
mov
in
mov
adc
movsb
cmpsl
in
js
fdiv
mov
mov
jle
popa
sub
arpl
mov
xlat
out
and
ljmp
cmp
cmp
cmp
xor
mov
jns
xlat
dec
lret
xchg
pushf
std
xorl
mov
add
mov
jmp
jg
fildll
fwait
aas
push
xchg
pop
idivb
js
daa
xchg
pop
mov
push
inc
mov
pop
and
dec
loopne
jmp
mov
or
mov
sbb
lret
mov
arpl
xchg
test
orb
pop
inc
mov
jno
sub
mov
jae
pop
imul
imul
dec
mov
adc
jle
testl
lock
xchg
std
sub
idivl
outsl
inc
push
jns
fistpll
push
ror
mov
sub
lods
push
adc
aam
pop
inc
mov
jecxz
rcr
cs
sub
cmpsb
adc
ss
and
fisubl
rol
cs
sub
sbb
or
int
jno,pt
ljmp
and
sbb
xor
mov
cmc
ja
lock
dec
xchg
xor
ror
add
jmp
push
out
adc
in
test
jno
pop
xor
dec
int
xchg
and
mov
mov
xor
jbe
das
xchg
in
ss
and
push
or
xor
imul
or
sub
int3
jmp
decb
rolb
xlat
cmpsl
js
daa
jno
lahf
mov
int
inc
sarl
jmp
jge
jae
sub
arpl
lods
shrl
inc
add
les
inc
aas
popf
rolb
and
movsb
sbb
sbb
push
push
mov
fildl
aam
mov
cli
mov
fiadds
pop
lret
dec
sahf
inc
pusha
inc
and
sarb
enter
adc
scas
xchg
and
push
adc
pop
lods
inc
add
mov
incb
and
fildl
push
das
cwtl
pop
jb
sub
imul
int
mov
or
int
inc
rorb
or
xlat
sbb
mov
sub
pop
or
lock
cmpsb
rcrb
sub
or
inc
adc
inc
fisttpl
inc
fistps
mov
cmpsl
xchg
jl
lahf
lds
arpl
test
das
push
stos
mov
orb
mov
pop
mov
jle
add
inc
push
insb
loope
mov
mov
cmp
and
cmp
scas
jnp
aas
mov
xchg
pop
push
pop
xchg
mov
popa
xchg
or
cmp
bound
xor
ss
sbb
and
cwtl
mov
scas
outsb
das
and
lock
adc
adc
jo
and
jg
in
xor
ss
dec
imul
jp
call
sti
shrl
and
jbe
incb
or
adc
push
jl
test
or
popf
ret
mov
sub
xchg
mov
add
addr16
and
pop
lahf
inc
sub
out
push
add
bound
lds
arpl
mov
lods
mov
xchg
out
mov
or
jno
pop
mov
dec
add
sub
fstps
in
cwtl
loop
gs
sbb
test
nop
adc
inc
mov
fstps
jge
or
dec
xor
popa
fadd
fisttps
mov
call
ss
in
test
out
mov
scas
dec
les
fs
cmp
jbe
jge
dec
data16
lret
sbb
sub
mov
mov
mov
icebp
into
mov
or
rolb
mov
add
loop
xchg
ret
pop
sub
push
fildll
sub
cmp
daa
push
jle
scas
jns
mov
ficomps
adc
divl
insl
xchg
clc
test
xchg
inc
cmp
out
ds
fmuls
fisubl
dec
loop
ss
test
int3
loop
sub
pushf
add
xchg
rorb
or
ja
jl
call
inc
dec
pop
lret
ja
push
sbb
insb
in
movsl
das
scas
pop
jno
mov
xor
ret
jecxz
push
mov
mov
cmp
push
cmpsb
xor
cmpsl
lods
push
outsl
mov
das
sti
add
out
pop
inc
sahf
and
ss
and
sbb
call
mov
sub
insb
push
pop
mov
ds
fbld
dec
loopw
add
xchg
jae
in
or
lods
ret
lods
dec
jmp
xchg
in
fstps
or
dec
out
nop
adc
add
sbb
pop
cltd
out
adc
mov
scas
adc
addr16
xor
inc
push
xor
in
das
fdivs
cmp
push
std
dec
jmp
fucomip
adc
lods
cmp
xor
arpl
scas
sbb
mov
inc
rcll
sub
mov
enter
inc
pop
pop
or
das
mov
dec
mov
jo
sbb
cmpl
pop
popf
fimuls
addr16
ret
in
stos
stc
fwait
xchg
hlt
fcoms
dec
pop
mov
lods
sub
pop
mov
in
mov
adc
testl
ljmp
lods
aad
sbb
pusha
call
sbb
lahf
ret
imul
xchg
sbb
test
aam
les
std
subl
mov
ss
pop
add
push
inc
xchg
jnp
aam
dec
pushf
fldcw
repz
mov
dec
std
sbb
out
sbb
rol
pop
or
aad
xchg
push
sbb
lcall
fwait
loop
mov
xchg
loop
pop
outsl
sub
hlt
push
ret
adc
push
into
fstpl
addr16
ret
mov
add
daa
mov
push
lret
mov
cmp
and
ffree
aad
shlb
adc
and
inc
xchg
inc
and
pushf
dec
cld
xchg
push
xchg
cld
inc
cmp
int
pop
adc
adc
xchg
sbbl
xchg
outsl
xor
adc
add
sub
stos
add
scas
in
xchg
cmp
dec
inc
and
leave
sub
fcoml
cld
adc
add
pop
pop
jmp
mov
mov
movsl
cmp
imul
mov
cmp
xor
les
in
imul
scas
adc
xchg
adc
or
add
xchg
fldl
leave
mov
dec
testl
popa
roll
bswap
stos
inc
sbb
and
pusha
dec
push
mov
inc
arpl
xchg
sub
sbbl
xor
mov
or
lods
test
orb
test
sub
jecxz
lea
loopne
adc
out
aam
hlt
ja
push
lahf
subl
dec
notb
xorb
lds
or
outsl
cmp
xor
pushf
movsb
push
push
fcompl
lds
ds
inc
sub
dec
cvttps2pi
xor
in
push
das
cmc
pop
int
out
fdiv
pop
enter
inc
loopne
mov
pop
or
mov
cmp
cmp
mov
inc
jg
dec
pop
cltd
daa
div
dec
shl
daa
pop
dec
jmp
or
push
outsl
and
cmc
inc
out
mov
in
pop
cmp
push
pop
sbb
out
and
popa
push
cld
mov
mov
out
pop
pop
sbb
push
xor
and
jns
and
mov
shrl
adc
lcall
frstor
je
int3
cmp
dec
pop
xchg
mov
inc
push
lock
or
ja
and
mov
sar
mov
cli
xchg
rcrl
cmp
cmpsl
inc
inc
xor
push
lret
inc
push
shlb
mov
jbe
test
cwtl
jl
cmp
push
lds
arpl
jmp
cs
jno
fwait
repz
lcall
mov
add
adc
int
popa
sbb
jnp
sub
bound
mov
xchg
pushf
or
pusha
fs
inc
mov
sub
jp
fildll
xlat
mov
cmp
hlt
in
jl
nop
adc
test
call
shrl
mov
out
push
ficompl
mov
add
add
shrb
dec
cli
pop
sti
inc
scas
sarl
mov
scas
enter
mov
in
ret
mov
imul
cmp
push
mov
mov
mov
xor
imulb
lea
or
mov
push
fildl
mov
and
lds
call
bound
or
mov
sbb
or
loop
nop
mov
call
xchg
push
dec
jns
mov
dec
xchg
fsubs
stos
cmp
sbb
pop
xchg
inc
movsb
imul
push
hlt
outsl
ja
adc
pop
push
xor
aam
or
xchg
je
fbstp
js
in
leave
xchg
jns
jp
inc
lahf
jp
mov
sbb
sub
xor
mov
jnp
stos
or
repnz
pop
out
loopne
sub
sbb
orl
insl
lcall
push
xor
sub
daa
jl
jecxz
imul
sub
stc
negb
icebp
dec
sbb
push
out
fistl
jmp
iret
jb
out
jae
cmp
mov
cmp
mov
push
push
test
daa
int3
and
std
sar
jmp
jb
push
lods
pop
dec
sbb
mov
add
dec
or
mov
sbb
adc
shrb
jno
inc
dec
daa
shr
rcrb
outsl
loop
aad
xor
fisubl
testb
bound
pop
int
xor
fisttpll
nop
imul
xchg
test
mov
mov
dec
and
data16
mov
mov
sbb
shrl
daa
addb
cmc
add
and
lods
aam
mov
xchg
or
out
xchg
fstps
dec
lret
push
call
xchg
call
loop
out
ljmp
clc
mulb
jmp
mov
daa
mull
rorb
stos
inc
ret
imul
out
dec
cmc
jne
dec
lret
jb
push
addr16
scas
xchg
push
call
xor
adc
pop
push
rol
inc
sti
sbb
jle
aad
out
adc
mov
push
jne
inc
mov
push
std
scas
dec
stos
loope
movsl
add
iret
add
and
aas
sti
popf
jno
bound
fstpt
mov
xchg
push
repnz
inc
mov
test
ret
xchg
inc
adc
lahf
and
push
repz
enter
aas
ret
pop
lret
or
pop
ret
jo
sar
cmpsb
adc
push
mov
loope
push
lods
ret
push
or
push
movsl
bound
or
scas
xor
testb
ret
sub
test
jge
ljmp
adc
lcall
iret
push
rolb
nop
loope
xchg
pop
out
mov
mov
rcll
xchg
mov
and
mov
sub
stos
dec
test
sub
cmp
and
push
insb
std
or
dec
and
pop
dec
mov
adc
sarb
decl
aaa
call
xor
jbe
out
xchg
shlb
xor
outsb
scas
dec
out
movsb
repnz
push
mov
mov
nop
inc
in
lods
add
mov
pop
pop
jg
popa
jb
sub
adc
movsl
mov
in
mov
dec
mov
or
mov
loopne
xor
xchg
mov
cmp
or
and
dec
rcr
movb
inc
shr
pop
fstpt
mov
pop
jecxz
ret
faddl
mov
jecxz
cwtl
arpl
ds
cmpsl
cs
sub
pop
aas
ret
push
dec
cli
mov
sbbl
ja
push
xchg
cmp
rcrb
fsubrp
mov
jae
cltd
addr16
mov
lret
pop
ja
repnz
loope
loope
jecxz
lods
sub
sbb
jbe
cmp
mov
adc
mov
cmp
cmpsl
pop
shlb
jp
out
movsl
xlat
mov
andl
and
xchg
jge
mov
inc
bound
jge
movsb
jne
xchg
pushf
dec
jg
rolb
sub
dec
aas
mov
sub
fcmovbe
cmp
add
lahf
or
push
mov
pop
add
pop
mov
and
and
jle
push
jne
pop
scas
xor
loope
addr16
popf
rcll
aas
cmp
out
test
xchg
push
push
cmpsb
or
ret
cmpsl
les
xor
and
in
xchg
je
jb
cmp
inc
inc
andl
push
add
push
cmpsl
add
rcr
cs
lret
data16
mov
inc
fcomp
pop
mov
mov
nop
hlt
mov
and
imul
test
enter
test
ja
cld
leave
enter
jnp
mov
ja
data16
mov
leave
cmp
leave
push
xchg
cmp
dec
mov
jge
cmp
cli
insl
cmp
repnz
hlt
cmp
push
cmp
stos
mov
xor
xchg
pop
scas
sahf
std
mov
cmp
iret
es
push
test
mov
push
mov
and
xchg
sbb
push
ror
in
and
pop
add
xchg
dec
subl
adc
mull
movsl
mov
mov
jecxz
mov
and
xor
rcll
shll
mov
inc
loop
jae
arpl
adc
dec
scas
stc
cmp
std
adc
fidivs
icebp
or
int3
jmp
cmpsb
inc
add
call
push
lret
cs
int3
mov
arpl
push
ret
loop
push
test
ja
jecxz
or
mov
or
add
adc
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
dec
add
rorb
xchg
dec
add
loopne
add
add
add
add
add
add
add
xchg
