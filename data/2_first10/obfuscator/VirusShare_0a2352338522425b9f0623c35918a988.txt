jg
das
dec
dec
fsubr
loopne
and
cmc
and
shrl
xchg
adc
in
jle
push
or
sub
pop
pop
into
xchg
pop
rcrl
cld
and
jbe
inc
frstor
add
add
scas
dec
adc
jge
mov
clc
mov
imul
ja
xchg
sbb
fldl
push
xchg
sub
test
pushf
imul
adc
cmpsb
mov
cmpxchg
xor
nop
jge
dec
test
and
nop
inc
dec
lds
mov
ljmp
push
and
jmp
andl
push
mov
push
add
jbe
out
faddl
xchg
and
and
repnz
lcall
or
sub
rcr
pop
popl
stos
mov
pop
mov
sbb
andb
jnp
loopne
enter
cmc
mov
lds
cs
jp
loope
daa
pushf
jb
or
adc
lahf
fldl
shr
pop
sub
iret
repz
sbb
shrb
and
pop
sti
sub
cltd
scas
inc
nop
out
mov
or
xchg
jge
das
bound
cmpsb
mov
and
sub
pusha
sub
insb
es
fcmovbe
adc
xchg
mov
cmp
ljmp
stos
in
mov
adc
push
xchg
dec
push
in
dec
fldenv
jmp
add
gs
cmp
aas
add
push
jp
lock
rorl
sbb
js
aam
shll
xchg
xchg
mov
pop
ret
pop
out
out
in
sub
roll
inc
or
jle
cmpb
rorl
adc
das
dec
mov
das
in
fisttpll
jp
arpl
mov
pop
mov
sbb
adc
js
imul
fstpt
xchg
dec
mov
icebp
add
bound
inc
lods
pop
test
movsb
cmc
add
mov
or
push
push
xchg
push
movl
pop
mov
and
loopne
xchg
and
iret
pop
lock
rolb
push
cmpsl
mov
jg
sbb
push
jnp
stos
das
in
imul
adc
mul
xor
insl
std
fildl
imulb
mov
xchg
pop
iret
jge
loopew
in
mov
sub
cli
and
mov
popf
gs
xor
cmpsb
pop
dec
outsb
jle
xchg
lcall
fmulp
mov
xchg
mov
out
or
fimuls
mov
inc
movsb
adc
push
icebp
and
mov
push
popf
arpl
mov
nop
xor
mov
enter
jmp
fisubrl
dec
loope
adcl
in
ss
dec
gs
and
mov
dec
adc
fwait
xchg
aas
ds
sbb
dec
out
shrb
imul
gs
mov
and
push
lcall
jmp
mov
xchg
adc
jns
fimull
jge
mov
cmc
setae
push
arpl
pop
xor
lods
inc
adc
mov
loop
out
jle
xchg
pop
out
mov
dec
add
jmp
shl
pop
movsb
jl
mov
and
test
cmpsb
pop
stos
pop
in
adcl
movsb
sahf
fisubrl
push
xor
js
pop
mov
jae
test
unpckhps
je
push
xchg
xor
or
subl
mov
or
or
sub
cmpsb
mov
insl
cli
int
xchg
stc
adc
sub
sbbl
cmp
pop
and
xchg
cmpsl
add
mov
sub
lock
sar
adc
inc
sahf
andl
shll
inc
mov
mov
out
test
xor
test
xchg
jmp
out
mov
pop
push
pop
mov
out
cmp
in
add
scas
add
mov
push
xorb
lods
stos
cmp
pop
sub
mov
mov
jo
inc
sbb
fwait
mov
ljmp
fcomps
mov
clc
lahf
sbb
sub
test
mov
push
mov
cmp
ret
test
rcrb
out
mov
dec
and
xchg
jmp
lret
mov
or
pop
cmp
mov
xor
jno
push
scas
push
fstpt
mov
in
xor
xor
jge
faddl
add
mov
mov
dec
push
sub
jmp
pop
sbb
and
pop
orl
inc
aam
or
out
push
mov
dec
inc
pop
les
xchg
clc
and
mov
lea
xor
popf
mov
push
ljmp
xchg
push
inc
fsub
stos
cmp
fdivs
pusha
nop
xor
enter
in
push
lods
mov
scas
xchg
pop
in
aam
test
cmp
mov
imul
mov
mov
into
and
pop
cmpsb
cli
pop
lcall
add
jbe
adc
dec
lods
mov
imul
es
outsl
sahf
test
cmp
rolb
xchg
ljmp
ret
iret
inc
push
pop
sti
push
aam
pushf
push
and
sub
sbb
sub
shr
sbb
jne
and
mov
sub
jnp
aas
sub
js
mov
stc
or
je
jnp
cmp
push
aaa
addr16
pop
pusha
dec
sbb
mov
out
and
mov
icebp
sbb
mov
sti
sbb
xchg
popa
mov
popf
add
repz
or
ret
notb
xchg
daa
pop
adc
push
outsb
mov
fdivrp
hlt
jns
in
fldt
lock
or
gs
push
not
jnp
je
ffree
repz
iret
sub
sbb
jnp
adc
das
int3
add
mov
pop
inc
mov
pop
pop
imul
in
ret
inc
sbbb
push
insb
mov
pop
dec
subl
lret
lods
into
sub
jb
adc
inc
je
cmpsb
mov
js
mov
sbb
stos
in
daa
cmp
and
cmp
cmp
repz
mov
popf
jge
dec
sub
scas
cmc
lods
hlt
out
jno
stos
clc
cmc
push
iret
loope
fadds
std
xorl
sbb
mov
fists
repnz
rol
ss
push
sub
daa
push
data16
pop
xchg
loopne
push
mov
lods
sub
stos
repnz
fiadds
xor
ljmp
int3
es
mov
fidivs
faddl
jle
insb
xor
out
popf
pop
dec
andb
xor
adc
sub
call
fildll
subb
gs
jb
test
or
es
fisttpl
stc
xchg
in
push
sti
cmp
add
mov
inc
jle
jnp
push
and
int
adc
push
sub
into
daa
jmp
dec
and
xchg
and
int3
pop
sarl
bound
mov
add
lods
pop
inc
jmp
sbb
push
imul
dec
sbb
pusha
sarl
xor
cmc
xchg
scas
xorl
mov
mov
jae
jbe
push
jb
sub
js
daa
push
sbb
loope
lea
mov
sti
cmp
andl
aaa
cmp
shl
test
testl
jp
or
in
out
mov
and
pop
cltd
mov
mov
xor
pop
or
pusha
arpl
inc
loope
and
test
dec
sub
in
mov
mov
outsb
pop
test
sahf
pop
lods
xor
adc
jecxz
fimull
out
mov
sub
addl
mov
mov
in
sbb
sbb
hlt
add
repz
add
push
hlt
loop
lret
push
jb
pop
xchg
pusha
dec
fs
lahf
xchg
pop
pop
pop
mov
mov
std
sti
xchg
in
mov
gs
push
nop
insl
push
jae
insb
mov
inc
loop
or
dec
jb
and
lcall
push
imul
pop
scas
cmp
jnp
scas
movsb
lods
arpl
sbb
inc
inc
nop
jmp
mov
jl
pop
push
or
fadds
mov
test
arpl
negb
lds
adc
rcr
jmp
push
jmp
jge
jo
pop
sbb
jle
loope
adc
sub
test
fwait
outsl
add
popa
aaa
adc
cmp
ja
xor
sarl
push
pop
mov
addr16
fidivl
iret
stc
adcl
mov
lods
insl
pop
std
lock
add
lret
cwtl
test
rclb
pop
or
daa
cmp
inc
insb
stc
mov
jmp
movsl
test
adc
mov
dec
and
mov
cmp
pop
adc
outsb
mov
mov
inc
aas
lahf
mov
xchg
mov
adc
aas
xchg
cmpsl
cmpsb
pop
pop
pop
mov
dec
or
adc
fsts
leave
mov
push
adc
jp
jmp
cli
mov
sub
addl
xor
mov
ret
pusha
mov
jns
push
in
mov
int3
jb
ret
inc
sbb
push
sbb
repz
inc
jl
xchg
inc
out
into
test
scas
mov
sti
mov
sbb
scas
shll
push
jg
rol
lret
jae
xchg
or
jp
lock
or
push
in
pop
push
aaa
lods
cmpsb
jmp
fildll
sbb
cs
push
adc
movsb
xchg
xor
sbbb
sbb
in
stos
push
cltd
dec
push
pop
movsb
adc
pop
int
inc
or
lahf
pushf
push
pmaxsw
sbb
cmpsb
pop
fmuls
rorl
or
lss
fidivl
and
adc
loopne
addl
dec
aaa
push
jge
pop
cmpsb
inc
sahf
sub
jnp
add
loop
mov
add
adc
not
addl
out
or
mov
movsl
sahf
jl
mov
cmp
pop
ja
dec
fs
je
out
dec
mov
sub
sbb
adc
addr16
lods
jg
pop
cmp
dec
or
in
add
pop
arpl
pop
mov
sbb
shl
mov
and
and
imul
cmp
add
mov
test
or
mov
mov
xor
sahf
adc
nop
fwait
push
into
sub
dec
jecxz
dec
rcl
repnz
push
sub
jl
or
xor
cmp
dec
loop
repnz
push
cmc
scas
bound
cs
sub
add
cwtl
add
mov
popa
jp
mov
adc
jmp
rcrb
sbb
and
add
roll
pusha
mov
and
mov
dec
mov
cmpsb
aaa
ljmp
pop
cmp
fs
sub
dec
orb
push
int
dec
cli
cmp
pop
xchg
cmpsb
in
cld
pop
mov
mov
in
cmp
das
add
mov
mov
or
popa
cmp
ds
jecxz
cmpsl
inc
mov
mov
sub
je
mov
mov
dec
adc
and
cs
mov
and
push
lahf
lods
mov
movsl
push
dec
push
push
in
inc
lds
test
dec
std
push
mov
add
or
insb
push
nop
addr16
sbb
mov
jmp
rolb
rclb
and
scas
roll
xor
cwtl
inc
jbe
in
dec
dec
sbb
out
fldcw
mov
test
std
stc
push
push
movsl
shlb
test
adc
pop
xor
ret
shl
mov
orb
inc
push
sbb
jnp
scas
adc
fiadds
mov
scas
dec
add
test
add
inc
js
sbb
gs
ret
pop
inc
dec
adc
lods
xorl
imul
jno
mov
xlat
aad
adcb
loopne
mov
mov
shlb
push
lea
nop
mov
jg
insl
push
les
scas
xor
push
dec
xlat
cltd
add
sbb
pushf
pop
sti
mov
test
loop
loopne
mov
jb
mov
mov
enter
jb
cmc
jl
push
jo
scas
cmpsb
mov
xor
pop
adc
in
stos
sub
idivl
fisttpll
and
ret
sahf
into
fnsave
int3
adc
mov
adc
test
shlb
test
hlt
sarb
ss
push
outsl
push
fldt
in
inc
pop
jne
mov
cmpsl
xorb
ret
pop
mov
aam
dec
mov
or
xorb
das
push
cmpl
xor
int3
es
pop
dec
fmuls
sub
rorb
push
push
repz
xchg
aam
xorb
mov
sbb
pop
and
lods
pop
adc
aas
pushf
cli
push
daa
je
dec
pop
jno
mov
mov
pop
cmp
in
adc
mov
mov
jns
mov
pop
jb
stc
out
sbb
cmp
ja
xchg
pop
jne
or
and
jne
jns
call
push
in
mov
ret
rcrb
dec
loop
xor
xchg
jne
pusha
movsb
jo
adc
add
insb
xor
pop
add
pop
ret
sub
sbb
outsl
ret
cmc
stos
lret
sti
pop
jl
dec
shrb
and
cltd
rcr
push
test
or
jnp
dec
pop
jmp
loopne
lahf
popf
sub
sbb
insb
rorl
push
call
ret
jns
or
insl
bound
lahf
cmp
adc
cmp
jno
add
loopne
mov
adc
jb
repnz
cs
lcall
aas
movsb
aas
pop
ror
test
mov
dec
scas
add
or
aaa
mov
sub
in
mov
lods
mov
jle
mov
mov
je
rorl
xchg
jmp
add
ds
out
add
ret
xchg
filds
dec
xor
and
into
jbe
jbe
ss
dec
and
inc
jns
idivb
inc
insl
adc
mov
cmp
fs
xlat
mov
xchg
orb
shrb
loope
push
jne
inc
not
shl
aam
je
fisubrl
xchg
rcr
xor
inc
or
dec
daa
push
stc
and
test
or
mov
mov
jbe
sbb
pop
pop
stc
out
outsl
in
aaa
mov
leave
in
mov
test
jecxz
or
lock
jo
shll
fnstsw
jle
pop
repnz
cmp
shlb
adc
mov
andl
push
dec
rcrb
sahf
inc
ret
test
push
push
repnz
sub
repz
ja
shlb
or
xchg
bound
inc
stc
mov
sbb
mov
fstpl
xchg
inc
int
out
lcall
cmp
hlt
adc
dec
xchg
or
mov
nop
add
cmpsl
adc
movsb
daa
sbb
ja
adc
inc
cmp
jo
sub
addr16
jmp
and
in
call
inc
mov
repz
ret
out
sub
lea
jp
insb
xchg
add
les
mov
mov
setne
push
cmpsl
mov
push
push
data16
cmc
sbb
or
stos
pop
push
push
orb
mov
or
call
jmp
outsb
out
mov
and
cmp
sbb
pop
or
aas
nop
sbb
add
mov
sahf
loop
pop
pop
repz
push
nop
aaa
mov
popa
pop
or
aad
idivb
cmp
inc
clc
and
icebp
mov
mov
rolb
mov
inc
orl
rorb
mov
mov
jo
xchg
test
and
jae
sbb
sub
sarl
add
int
fcos
sbb
addr16
mov
enter
sub
jmp
push
jmp
cld
dec
add
push
mov
out
repz
cmpsb
and
sbbl
and
loopne
xchg
push
lahf
loope
push
lds
dec
xor
inc
mov
adc
mov
lahf
test
and
mov
mov
nop
inc
out
xor
cmp
and
stc
adc
push
test
ja
add
jp
dec
xchg
dec
fistpll
lods
lods
add
imul
adc
cs
movsb
pop
in
mov
popf
in
pop
int3
aad
mov
fisubl
xchg
inc
rsm
adc
mov
inc
lret
cmp
mov
push
xlat
sub
mov
mov
pusha
aad
ja
add
adc
jns
fwait
inc
mov
sub
movsb
sub
leave
jmp
jae
sbb
pop
movsl
inc
ret
mov
adc
inc
mov
decl
aad
ja
icebp
stc
xor
call
dec
insl
mov
ja
inc
push
loop
pop
inc
arpl
mov
pop
inc
insl
add
inc
jmp
dec
in
repz
das
sub
pushf
decb
test
push
or
es
inc
and
or
jge
int
jle
or
aaa
aam
inc
sbb
push
mov
imul
sahf
fstpl
scas
cld
inc
in
or
cmpsl
or
subl
jno
pop
cwtl
enter
xchg
mov
lea
fimull
pop
test
fidivs
call
jmp
and
leave
jo
dec
jo,pn
mov
dec
sub
in
cmp
daa
test
xor
ljmp
sbb
rorb
mov
jle
adc
or
lcall
sar
gs
dec
dec
pop
push
pop
data16
or
or
loope
fsubrs
sti
movsb
sub
addr16
push
or
ds
scas
inc
mov
inc
adc
mov
cmp
in
and
cmc
or
mov
mov
push
clc
in
inc
xchg
out
pushf
dec
or
rcrb
popa
subb
xchg
icebp
test
mov
aam
sahf
jne
repz
std
test
pop
xchg
add
mov
jbe
mov
jbe
cmp
xchg
fucomip
shl
clc
sub
pusha
mov
mov
das
icebp
cmp
and
mov
stos
mov
and
sbb
inc
daa
aad
dec
cmpsb
sbb
imul
das
dec
xor
cmp
mov
fs
outsl
inc
ljmp
xor
dec
cs
inc
sub
popa
stos
pushf
mov
jno
jno
push
push
sbb
js,pn
mov
push
shlb
repz
inc
xchg
test
add
shrl
adc
mov
mov
sub
adc
sub
dec
sub
jle
xchg
jae
dec
jno
sahf
inc
jl
lret
jp
mov
pop
and
sub
repz
clc
mov
mov
cld
push
rolb
mov
pop
push
loopne
mov
and
gs
cld
jg
pop
stos
dec
inc
mov
and
sbb
flds
xor
insb
orb
jmp
call
inc
mov
mov
xlat
dec
jl
loope
cmp
xor
scas
cmp
jne
cmc
insl
sbb
adc
mov
cmp
add
adc
out
xor
sub
push
inc
mov
mov
jno
push
popa
push
sahf
lret
adc
nop
xor
ror
adc
popa
dec
xor
fisttps
push
movsb
sub
sbb
in
decl
imul
inc
jns
jl
sbb
outsl
dec
mov
or
mov
mov
fsubrl
jb
jmp
fdivrs
ret
leave
or
lret
sbb
incb
mov
xor
jb,pn
lahf
jbe
scas
xor
cmp
ljmp
fwait
dec
pop
mov
pop
push
sbb
movsb
jbe
out
mov
push
ljmp
mov
add
jbe
jb
test
jl
loopne
test
xor
inc
push
xor
mov
into
xchg
test
cmc
dec
lret
pop
jbe
cli
cmp
xchg
adc
fcmovnbe
lods
push
es
mov
xlat
andb
inc
call
xor
push
sub
push
push
ret
xchg
push
jle
clc
call
ret
into
psubb
push
dec
scas
scas
cmp
daa
out
mov
into
inc
cmpsl
mov
lds
push
in
and
setge
xor
pop
stc
lock
ja
inc
and
jno
loop
pop
mov
es
stos
outsl
lea
pusha
mov
xorb
lcall
sbb
enter
call
lret
xchg
mov
add
cld
cmp
adc
pop
in
out
dec
and
inc
outsb
cld
popl
nop
sbb
loope
adc
faddl
or
cmp
ja
inc
clc
mov
cmpsl
in
jmp
les
sub
imul
sbb
mov
in
rcll
out
cmc
and
and
rcrl
lods
aam
divb
mov
cmp
dec
mov
in
cli
int
dec
sbb
mov
popf
int3
loope
mov
add
cmp
add
leave
mov
and
add
inc
adc
mov
popf
adc
loop
out
ss
imul
les
lods
mov
mov
push
jg
pop
sub
scas
fimull
dec
lods
push
clc
pop
mov
xchg
movsb
sbb
cmp
mov
test
mov
arpl
sbb
mov
loop
popa
scas
stos
or
inc
xlat
inc
or
jne
aaa
pop
vmulpd
fs
pop
xor
jno
fldl
pop
outsb
mov
xchg
fistpll
aas
test
je
jle
add
or
data16
iret
xor
rcl
jno
in
cmp
push
add
stos
loopne
js
fisttpll
js
lret
or
jbe
fbld
sbb
imul
addl
pop
or
inc
jecxz
aas
das
mov
out
pop
aaa
ret
fisubrs
xchg
cmpsb
ja
std
pop
out
lods
lock
ja
in
hlt
xor
jne
add
scas
daa
imul
adc
arpl
jmp
pop
call
adc
inc
cwtl
repz
jmp
gs
and
or
jnp
cmp
push
out
adc
jg
or
mov
fcoml
sub
push
hlt
mov
mov
and
xchg
and
mov
outsb
stc
adc
lret
inc
mov
dec
jl
out
or
mov
repnz
mov
insb
sub
popa
dec
push
shlb
rorb
and
stos
aad
xor
add
inc
jmp
hlt
dec
jne
imul
mov
or
aam
test
jae
aam
mov
push
mov
jbe
mov
mulb
mov
aad
out
fildll
imul
jno
stc
in
sub
mov
mov
incb
rol
cltd
fsts
pop
imull
sub
int3
adc
jmp
mov
xchg
cltd
mov
fcmovbe
int3
mov
sub
int3
outsl
mov
inc
fucom
gs
and
enter
mov
leave
and
lahf
mov
popf
and
sbb
mov
icebp
testb
pop
sub
push
stos
add
ret
cli
outsb
cmp
xor
jecxz
mov
mov
jmp
movsl
negb
cmc
outsb
inc
jp
test
cmp
mov
cmp
in
js
test
in
jno
cli
jne
xlat
leave
dec
cmp
lea
nop
mov
pop
and
pop
fs
mov
dec
jl
ret
pop
hlt
cmc
mov
pop
lds
jno
jne
push
pop
hlt
insb
pop
in
and
push
fldt
popa
enter
jp
cmovg
and
and
cs
add
sbb
jo
cmp
xchg
clc
pop
and
lea
push
adc
fs
das
mov
aas
jo
push
adc
inc
fldenv
jmp
xchg
adc
and
dec
mov
mov
repz
push
pop
and
or
movsl
dec
lods
int
rclb
add
adcb
mov
pop
or
pop
lret
inc
adcb
cmc
pop
outsl
and
int3
addb
in
stos
mov
add
pop
jmp
xchg
in
pusha
adc
roll
mov
das
mov
adcl
jmp
xchg
scas
dec
cmp
pop
sbb
push
ss
aaa
xor
leave
adc
leave
hlt
push
mov
orl
rcrb
mov
das
push
push
data16
fdivrl
fisubrl
jge
mov
cmp
jle
mov
mov
rclb
movb
mulb
int3
mov
dec
pcmpeqb
lods
mov
inc
in
scas
js
jbe
or
cmpsb
lods
jo
cmp
cltd
xchg
inc
xchg
jb
loop
add
jnp
push
out
loopne
inc
lahf
mov
imul
aas
fimuls
add
cmp
mov
pop
mov
cli
jp
push
rcl
call
push
push
fists
and
jg
js
gs
cwtl
add
inc
sar
fmuls
pop
daa
push
or
data16
test
sub
inc
mov
push
add
push
bound
or
jp
dec
es
xchg
add
nop
out
or
cmpsl
loop
mov
stos
shr
sub
pop
in
repnz
pop
in
stc
pop
mov
loopne
push
mov
cmpsb
pop
leave
mov
push
je
sub
dec
lcall
push
jmp
add
inc
pushf
mov
or
jge
addl
ret
loopne
popf
ss
adc
ss
fists
cmp
lret
cmp
or
ds
sub
popa
rorl
mov
ret
loopne
sub
arpl
mov
repnz
ja
xchg
add
jo
scas
xchg
ror
ror
sbbb
push
and
std
insb
dec
out
testl
in
adc
in
jne
and
jae
jno
stc
xchg
out
les
push
xor
mov
or
sbb
std
out
es
aad
sarl
test
inc
xchg
out
stc
add
lret
push
xchg
xchg
sbb
fadds
hlt
xor
dec
jne
mov
insl
sbb
sbb
daa
xor
dec
cs
clc
mov
sarl
xor
push
add
ror
mov
or
lea
mov
in
pushf
gs
push
cmp
xchg
inc
iret
sbb
jb
push
insl
add
insb
mov
and
and
cmp
lods
cmp
mov
popa
inc
aad
aad
cwtl
inc
dec
xchg
xchg
push
cmp
hlt
psraw
dec
pop
pop
sbb
test
cwtl
jo
mov
adc
xchg
sub
popf
lcall
or
pushf
inc
cmp
sub
movsb
mov
mov
xchg
gs
or
and
sub
inc
repz
push
cmp
jl
int
pop
or
push
clc
push
adc
icebp
int
out
push
jmp
cmc
in
mov
mov
stc
movsl
shlb
add
xor
pusha
xor
adc
jl
pop
xchg
sbbb
addb
movsb
and
les
or
xor
cmpsl
jmp
jo
popa
in
test
notl
xchg
pop
testb
xchg
lock
lret
roll
pop
push
sub
xchg
xchg
je
xchg
jg
lods
and
lea
fidivrs
ret
insl
hlt
add
lcall
inc
repnz
imul
ret
dec
xchg
dec
ja
mov
cltd
enter
or
lcall
cmp
add
loop
sbbl
imul
or
pop
xchg
test
pop
cwtl
add
jge
xchg
loopne
scas
loop
lods
fadd
loop
pop
jb
sbb
ss
aad
out
jo
outsl
jbe
shrb
xor
push
std
aad
in
lods
dec
mov
mov
cld
pop
js
test
cmp
ds
mov
cmc
sbb
outsl
sub
or
cmp
sbb
imul
jo
xchg
ljmp
dec
adc
data16
adc
add
push
stos
sub
mov
push
fisttpl
pop
inc
scas
mov
stc
sub
scas
pushl
pop
fcomps
popa
mov
xor
mov
out
mov
push
xchg
pop
cmp
pop
add
mov
sub
pop
sbb
shlb
pop
sbb
mov
dec
or
mov
add
sbb
cmp
push
bound
mov
enter
arpl
pushf
daa
imul
dec
pop
add
jp
cs
sahf
insl
test
jb
mov
leave
xor
lcall
je
mov
popa
sysret
loope
push
push
notb
xor
mov
push
and
cmp
mov
add
mov
mov
mov
xchg
popf
test
xchg
dec
pop
fstpt
int
fidivl
sbb
pop
inc
pmulhw
outsl
xor
xchg
jb
and
mov
leave
rorb
call
pop
ret
dec
sbb
adc
or
xor
mov
jmp
push
jne
enter
ror
xorb
mov
cmp
jg
lahf
adc
orb
lret
lret
mov
and
loope
mov
jp
pop
leave
ret
js
in
sbb
ss
mov
mov
sub
jp
andps
lock
mov
jnp
inc
out
pop
dec
inc
mov
or
insb
bnd
push
aaa
push
leave
insb
mov
lret
mov
xchg
jge
dec
test
sahf
je
leave
pop
jge
mov
rcrb
cmp
aam
andb
aaa
lods
or
ss
icebp
inc
lods
mov
push
push
out
stos
mov
fidivl
mov
scas
or
fs
movsb
nop
xchg
jbe,pt
aad
sub
arpl
dec
test
fiadds
and
inc
lds
dec
pusha
add
cmp
sub
je
or
aam
and
mov
adc
xor
out
ret
and
fcoms
add
es
mov
leave
sub
lods
xchg
stos
aaa
and
pop
cmp
mov
subb
test
inc
cmpsl
inc
inc
push
in
jg
or
addr16
cmc
and
insl
outsl
and
dec
cmp
xor
inc
sub
and
fsubrl
je
popf
sbb
out
in
cmp
sub
aas
sti
nop
scas
inc
ret
in
cmp
stos
iret
sub
or
into
fnstenv
lods
dec
fnstenv
outsb
js
dec
or
adc
int
mov
add
jns
inc
sbb
pop
cmp
mov
xchg
add
mov
jg
mov
out
adc
dec
jb
cmpb
sbb
xchg
loopne
loope
loope
scas
push
sbb
jecxz
push
cltd
xorb
mov
sbb
test
add
xchg
aaa
and
jnp
movsl
sahf
inc
lods
and
mov
decl
scas
pusha
ljmp
sub
jno
int3
jge
push
pushl
xchg
shl
mov
jmp
push
or
mov
lcall
sbb
outsb
gs
xor
cmpsl
or
push
xlat
arpl
dec
pushf
xchg
bound
in
and
cltd
sub
inc
pop
lret
sub
mov
mov
jl
outsb
shrb
ja
add
xor
mov
pmaxsw
and
fsubr
pop
lds
test
test
in
dec
sub
xchg
jecxz
popf
rcr
fsts
dec
or
js
stos
aad
scas
bnd
orb
hlt
out
faddl
mov
cmpsb
fwait
jmp
and
jne
cmpsb
and
cmp
or
pop
adcl
dec
lret
ret
scas
jge
sbb
mov
cmp
push
mov
popf
cmp
arpl
ss
mov
insb
cmp
scas
sti
shlb
lahf
pop
xor
popl
jb
gs
incl
add
lret
sarb
test
and
stos
sbb
add
insl
adc
dec
xchg
jle
popa
jge
or
jne
xchg
cmp
and
push
sub
sbb
data16
and
fistpll
jno
xchg
sarb
movsl
mov
jg
mov
xchg
pop
cld
cmp
mov
pushl
out
imul
push
out
lods
jns
pop
cmp
jne
and
loop
mov
mov
lock
inc
out
sbb
cmp
push
mov
mov
roll
inc
xor
movsl
jp
xor
fmuls
je
sbb
add
sub
dec
or
mov
les
xchg
mov
es
and
sbb
sub
mov
iret
push
sbb
das
jge
jecxz
push
jmp
and
aaa
dec
and
push
in
clc
sbb
test
pop
lds
cmpb
adcl
adc
int
gs
call
mov
or
aas
outsb
lahf
sti
jbe
insl
add
xor
mov
es
pusha
stos
mov
jle
jnp
fldl
sbb
repz
xor
jbe
adc
jbe
shrb
fisubs
mov
jns
cmp
sub
or
dec
cmp
pop
xor
adc
call
dec
int3
andb
inc
xchg
jge
inc
xor
or
movsb
shrb
shl
push
addr16
out
xchg
movsb
push
lcall
xor
pavgw
or
inc
xchg
add
mov
lds
out
xor
xlat
fnstcw
xchg
mov
les
int
xor
arpl
add
out
cs
adc
pop
gs
insl
aad
andb
jno
dec
push
cmp
out
jmp
inc
dec
fidivl
outsl
cmpsl
mov
xor
cld
aas
cmpsl
ficoml
or
pop
jle
mov
dec
lcall
into
stos
lea
les
jle
or
or
cmp
mov
cmp
adc
add
adc
movsl
mov
bound
addr16
sub
adc
jae
pop
mov
adc
icebp
fs
movsl
icebp
xor
mov
xchg
jg
test
rorl
push
or
imul
cwtl
rorl
mov
mov
adc
or
push
and
imul
xchg
adc
fwait
dec
mov
fidivrs
and
out
jle
mov
jo
xchg
push
sbb
imul
aad
lcall
cmp
imul
adc
std
test
push
sbbl
mov
int3
xchg
dec
jecxz
clc
mov
je
push
popa
popa
sub
nop
nop
or
or
adc
inc
sarb
mov
mov
and
pop
out
cmp
sub
loope
lret
fidivrl
dec
out
nop
mulb
mov
out
pop
loopne
out
lret
std
clc
lcall
or
push
pop
inc
inc
inc
mov
mov
cmp
push
sub
stos
mov
mov
aad
push
jl
and
scas
xor
hlt
test
mov
aad
xchg
fwait
mov
or
ss
push
cmpsb
fstl
adc
sbb
jg
mov
addr16
arpl
mov
sub
sti
xchg
loopne
inc
arpl
fs
xor
inc
sar
jb
lds
scas
fdiv
sti
repz
sbb
pop
dec
inc
sub
pop
ljmp
movsl
dec
adc
push
sub
loop
adc
daa
pop
gs
inc
incb
fistl
cmc
push
out
jnp
mov
insb
lret
fcomps
pop
mov
js
outsl
inc
les
sub
or
leave
dec
fisubrl
jne
out
int
insl
call
xchg
mov
pop
xor
icebp
iret
cmpb
jg
rol
scas
loop
inc
fxtract
jb
bound
jae
xor
cmc
out
mov
or
ret
push
addr16
aas
mov
xor
out
push
pop
gs
sub
fcoml
xchg
jns
insb
and
jb
aam
dec
sbb
arpl
insl
insb
pop
jbe
mov
push
popa
and
push
adc
adc
add
push
imull
and
inc
jo
movsl
mov
or
insl
aaa
negl
loope
in
and
fsubrl
mov
dec
out
mov
jmp
jp
or
or
cmp
aas
mov
sub
imul
push
orl
daa
jnp
into
imul
sbbl
dec
xchg
data16
rorb
xor
clc
sbb
xlat
mov
jl
add
mov
add
stos
sub
xlat
add
sub
pop
cltd
pushf
fidivs
cs
outsl
dec
jnp
push
jg
mov
and
xchg
pop
icebp
xor
shlb
mov
mov
in
mov
sbb
mov
stos
lcall
adc
repnz
test
addb
pop
adc
lret
test
aas
mov
xor
scas
arpl
sub
pusha
and
dec
fprem1
sti
jg
or
mov
pusha
ja
push
dec
fildll
imul
dec
inc
out
scas
fidivrs
pop
jo
xchg
in
cmpsb
push
cmp
dec
dec
pop
ljmp
lock
sti
jl
mov
mov
test
xor
fcompl
mov
xor
add
xor
dec
fbstp
pop
lea
aad
enter
push
xor
cmp
xorb
push
fiadds
xchg
and
pop
xchg
or
cmp
cld
addr16
fidivrs
xchg
and
jcxz
push
and
mov
insb
push
dec
ja
pop
push
sbbb
sub
jo
xor
inc
je
andb
pop
call
sub
mov
sar
pop
aam
mov
movsl
xor
repnz
push
ret
jl
push
cmp
stos
push
mov
lcall
outsb
jmp
fldcw
stc
ja
adc
or
in
andb
inc
push
divl
push
out
pop
and
jg
add
hlt
mov
repnz
and
aam
jg
popa
ja
pop
aaa
loop
nop
pop
sbb
jo
enter
pushf
xor
jle
inc
jp
jg
cmp
nop
pop
lahf
test
mov
xchg
xlat
mov
or
lret
insl
sbb
pop
inc
add
aas
push
or
mov
inc
xchg
adc
xchg
pop
pushf
jge
sbb
ja
stos
jmp
inc
mov
shlb
cld
sub
fs
daa
cmc
clc
adc
data16
xor
xlat
mov
sbb
gs
adc
cwtl
in
pop
push
shrl
mov
adc
pop
adc
ds
repz
pop
nop
add
jnp
mov
jl
sub
arpl
movsl
mov
sbb
je
sarl
outsb
rdpmc
or
subl
mov
jle
mov
jbe
mov
mov
sbb
cmpl
jp
mov
xor
and
scas
push
adc
pusha
test
es
pop
mov
outsl
movsb
sbb
sub
jecxz
or
mov
movsl
lds
push
bound
sbb
lret
inc
pop
std
jns
sahf
mov
stos
imul
xchg
imul
cmp
ret
cmpsb
xor
movsb
jo
or
out
dec
mov
push
fs
push
cmp
ds
or
fsubrl
add
ss
push
jp
xor
xchg
or
stos
add
dec
movsl
adc
cwtl
and
lret
not
repnz
imul
in
sbb
pop
pop
xor
into
pop
cmp
outsl
dec
inc
push
and
sbbb
inc
test
orl
test
and
test
sarb
and
in
in
dec
in
pop
jnp
stc
dec
jns
sub
mov
in
gs
cli
jmp
mov
leave
mov
jne
cmp
add
adc
outsl
mov
sbb
popf
adc
into
jns
icebp
movsl
iret
add
stos
data16
jmp
test
mov
test
cmpsb
sbb
repz
pusha
and
pop
xchg
jmp
mov
cmpb
xor
movsbl
adc
jecxz
add
into
sbb
ret
fdiv
mov
dec
pusha
leave
mov
test
add
aam
andl
push
sbb
enter
xor
push
inc
cmpsb
addb
jmp
mov
iret
sub
add
stc
lock
js
popa
xchg
inc
lods
pop
push
add
imul
loope
xchg
scas
xor
enter
cli
mov
int
ljmp
filds
outsl
adc
sahf
inc
jae
imul
mov
pushf
test
lret
mov
adc
sbb
repz
clc
movsl
jae
add
push
inc
cmp
xor
jmp
ljmp
lock
imul
mov
lods
sbb
mov
in
loope
into
add
sarl
std
ljmp
dec
ja
cmovbe
repz
fwait
adc
mov
iret
and
int
pop
cmp
jg
cmp
mov
push
jg
stos
pop
fsubrs
pop
lret
push
test
ret
mov
out
clc
aam
pop
inc
mov
pop
jo
cwtl
dec
fisttpll
mov
or
adc
sub
lds
ds
rcrb
sub
imul
push
in
je
rcrl
mov
push
sbb
out
pop
sti
pop
adc
jg
mov
push
sub
sti
cmp
cmpl
ja
push
je
ds
sbb
mov
rcl
imul
fldenv
adc
dec
sub
in
mov
mov
sub
mov
push
cmc
xlat
xchg
stos
aad
jge
mov
lea
jge
jle
xchg
into
mov
push
mov
enter
into
xor
dec
mov
adc
out
xor
xor
jle
pop
enter
pop
scas
push
inc
adc
jecxz
repz
push
mov
push
lcall
sub
negl
jmp
inc
gs
push
fisttpl
jp
nop
dec
nop
pop
sub
xchg
loop
fdivrl
ds
jne
dec
es
pop
imull
adc
push
mov
add
sti
push
sub
sub
jl
xor
sahf
pop
mov
sub
sbb
ja
repz
fldt
cmp
or
test
loope
xor
ds
cld
shrb
aas
lea
xchg
lret
xchg
lods
mov
jns
jge
sub
sti
mov
xchg
pop
sbb
jae
jae
mov
cmp
xchg
insl
inc
dec
or
jno
stc
imul
lock
movsl
ljmp
xacquire
and
or
xor
hlt
and
mov
scas
or
movsb
inc
xchg
sbb
push
in
es
mov
fdivl
cltd
imul
mov
out
cmp
xchg
pop
aam
and
jmp
push
mov
leave
lret
pop
fsubs
jg
mov
shrb
lret
sbb
insb
test
mov
loop
ja
repz
xor
sbb
movsb
iret
sbb
dec
push
pusha
mov
into
pop
pop
in
or
dec
sarl
mov
fistpll
pop
and
outsb
adc
movsl
lds
cmpsb
rcrl
out
ret
and
sbb
mov
jl
imull
insb
fwait
pop
push
pushf
aaa
adc
fs
xor
pop
sbb
add
pop
mov
or
jmp
repz
jbe
jl
xchg
add
mov
push
into
rolb
pop
in
pop
leave
fstcw
lods
jg
add
inc
sub
push
inc
jbe
lahf
push
xchg
jp
imul
xchg
loop
and
mov
sbb
movl
pop
jb
push
insl
or
inc
mov
insl
call
push
cmp
insb
nop
xchg
xlat
in
lock
mov
push
adc
jno
cs
mov
hlt
repz
push
movsl
out
sub
push
push
mov
das
lods
inc
mov
mov
mov
jg
adc
shlb
movsl
jmp
cmpsl
out
add
mov
int
rolb
sub
xchg
sbb
loop
lea
mov
push
stos
mov
cmpsl
sbb
lds
mov
adc
push
loopne
leave
cmp
ja
cmpsb
inc
stos
cmpsl
add
cmp
popa
dec
movsb
je
mov
jnp
les
lret
cwtl
pop
dec
mov
shl
and
sbb
bound
dec
mov
bound
pushl
add
pop
call
mov
mov
add
cmp
lret
cmovae
fnstsw
shlb
sarl
cmpsb
stos
shll
cli
push
xor
scas
xchg
andb
imul
sub
inc
adc
cmp
in
ret
mov
cmp
xor
icebp
and
fimuls
xchg
fisttps
or
cs
push
mov
push
icebp
scas
subl
and
sarb
test
adc
in
and
jae
out
pop
insl
cs
call
pop
and
fnstcw
test
sbb
mov
cmp
mov
jns
lcall
shrl
sbb
test
jle
xor
test
pop
mov
mov
fsubrl
pop
pop
xor
clc
xchg
jb
adc
sbb
std
and
out
and
sbb
pop
sub
inc
imul
inc
pop
js
cmpsl
mov
xor
fs
movsl
sbbl
shrl
mov
mov
xchg
pop
xchg
cmp
in
mov
outsb
mov
in
cmp
in
in
or
mov
loopne
and
xor
lcall
sbb
sub
sbb
sub
mov
popa
push
pop
cs
popa
inc
adc
fstpl
push
inc
adc
and
out
out
xor
out
imull
out
or
push
adc
outsl
lock
fsubrl
sub
push
lcall
xlat
js
xchg
mov
jns
stc
inc
rclb
pop
mov
xchg
loope
xor
aam
ds
test
dec
imul
sub
sbb
mov
cmp
sub
jmp
addr16
in
pop
es
in
rolb
pop
lock
jbe
aam
mov
outsb
xchg
enter
cmpsb
pop
mov
decb
int3
or
or
sbb
pop
ja
arpl
mov
mov
gs
or
scas
inc
sbb
adc
sub
and
imul
hlt
xor
inc
in
push
push
or
inc
into
mov
inc
xor
iret
pop
jne
test
inc
lods
and
pop
int
test
out
loop
lods
sub
divl
jmp
mov
jne
jnp
xchg
sbb
sub
mov
addr16
mov
loopne
push
lcall
cmp
sub
or
fstp
fsubrp
pusha
movsb
loopne
repz
mov
cli
mov
jl
adc
mov
pushf
push
mov
loopne
and
xchg
and
mov
aaa
jo
mov
and
xlat
or
mov
mov
cmpsb
push
xor
cmp
sub
aas
dec
bound
pop
loopne
push
ret
pop
cmp
sbbl
arpl
xor
jecxz
xor
mov
sbb
fdivrp
push
xchg
add
into
xchg
pop
je
pop
mov
dec
movsb
adc
cli
mov
data16
shrl
ret
cwtl
aad
adc
xlat
repz
or
jb
push
lods
pop
or
lds
out
mov
xchg
ret
xor
mov
jb
and
sbb
repnz
xchg
inc
lods
pop
dec
jg
mov
bound
ror
xorb
test
dec
dec
jle
cmp
js
or
jnp
cmp
dec
outsb
ja
int3
decl
test
dec
add
and
test
or
sub
inc
fstps
cld
lahf
sbb
pop
cmp
out
outsb
lret
mov
popa
fistpll
fdivr
mov
addr16
and
mov
jmp
into
push
mov
loopne
jno
mov
ret
push
pop
dec
pop
in
cmp
testl
inc
xchg
sub
rcll
pop
lret
push
push
xor
adc
push
das
mov
dec
daa
roll
inc
mov
adc
push
and
mov
int3
pop
mov
pusha
add
ret
or
rcr
outsb
jl
push
jge
les
push
cwtl
mov
and
mov
arpl
dec
xchg
lea
mov
loope
sub
xor
mov
or
insb
les
xor
push
idivl
adc
jb
xchg
mov
repz
fidivrs
fbld
leave
loope
xor
add
push
jnp
movsb
xor
cmp
inc
rorb
xchg
inc
movsb
repnz
pop
sti
add
and
dec
insl
loope
push
cli
cmc
movsl
lret
sbb
aaa
lret
pop
cmp
ret
inc
das
lods
jb
jnp
adc
cld
es
jno
xchg
scas
jp
jg
sbb
xchg
add
xor
inc
and
xchg
ret
pop
adc
in
pop
xchg
mov
pop
pop
imul
les
fdivs
jp
loope
jb
nop
mull
rorl
mov
enter
mov
out
mov
pop
fiaddl
add
push
enter
or
inc
push
inc
fnstenv
cmp
lret
stos
adc
add
test
lea
nop
jo
dec
adc
sahf
gs
mov
pop
jp
push
je
sbb
mov
lret
push
or
cmp
or
xor
aad
dec
notb
aaa
mov
cmp
mov
jl
movsl
inc
in
jbe
mov
sub
sub
daa
xchg
xchg
mov
push
outsl
out
lods
push
mov
clc
insl
pop
dec
mov
sub
fcoms
divl
aaa
jo
add
sub
xlat
inc
mov
clc
aaa
sbb
lock
sub
push
jle
sub
jle
in
gs
iret
mov
in
mov
push
xor
aam
pop
adc
jl
stc
dec
outsb
lret
leave
inc
mov
pop
loop
mov
bound
clc
or
fbstp
out
pop
jns
mov
icebp
aad
adc
push
popa
loope
push
push
aam
int
repnz
out
dec
outsl
int
jo
mov
xchg
arpl
sti
pop
xorb
sbbb
sub
add
mov
rorl
pop
dec
andl
sahf
mov
mov
cmp
stos
xor
mov
dec
cmp
outsb
or
ljmp
add
lea
shll
cmp
cwtl
cltd
testl
shufps
bnd
and
mov
gs
out
iret
sbb
cltd
mov
aas
dec
pop
fxam
rolb
sbb
inc
imul
std
add
adc
lds
or
cltd
mov
aas
and
cmp
dec
pop
push
aaa
xlat
and
jae
jae
ss
js
aaa
arpl
mov
xchg
pop
sub
mov
xchg
adc
mov
outsl
add
fscale
add
lret
aad
sbb
dec
mov
movsl
push
loopne
mov
inc
or
scas
lahf
faddl
mov
jge
mov
test
mov
xlat
mov
or
dec
jge
xchg
pop
push
xor
lock
pop
mov
insb
pop
sbb
mov
data16
adc
stos
lds
lcall
test
shll
mov
jae
mov
lret
push
jecxz
and
int3
clc
pop
insb
das
in
xchg
inc
cmc
cwtl
cld
lock
push
ret
mov
and
and
add
movsb
clc
mov
pop
fidivrs
psraw
ljmp
movsb
icebp
dec
and
jecxz
popa
jmp
dec
test
fisubrs
jns
or
mov
iret
leave
dec
notl
std
into
adc
test
neg
push
jns
mov
dec
movsb
adc
stos
cmpsl
aad
fmulp
dec
pop
popf
daa
and
lea
mov
mov
sahf
push
lcall
gs
ret
mov
lds
ljmp
jl
shll
xchg
std
inc
pop
aas
add
push
jl
pusha
mov
add
inc
lods
add
test
fistpll
test
pop
mov
rorl
xor
cmp
fucomp
into
sbb
aam
lds
inc
xchg
dec
dec
lret
jmp
pop
dec
sub
dec
jae
cmp
cltd
lea
xlat
insl
call
cwtl
lods
or
dec
stc
add
sbb
scas
dec
fdivrl
mov
mov
loop
dec
and
mov
inc
xchg
adc
ljmp
cltd
fwait
inc
mov
lcall
pop
mov
cmpsb
push
xor
rclb
clc
pop
push
test
movsl
movsb
jge
rorb
inc
push
sbb
outsl
std
pop
push
pop
jg
loop
subl
jns
fists
fisubl
pop
jge
mov
inc
call
negb
sub
cmp
or
sbb
xor
xor
xchg
repz
sarl
mov
fisubs
jg
faddl
dec
ror
xorl
push
shl
sarb
cmp
dec
sbb
push
push
repz
dec
pop
rcrb
daa
sbb
dec
jae
mov
push
dec
out
aaa
adc
push
xor
jp
pop
rol
lcall
lods
ret
dec
push
cmp
push
shl
dec
mov
dec
pop
sbb
cltd
or
inc
mov
sbb
sbb
mov
js
xor
sub
mov
in
fnstenv
outsl
std
adc
mov
pusha
pushf
xchg
dec
push
jmp
push
fisttpl
mov
push
adc
bound
call
pop
testb
inc
cmp
mov
shrl
rcll
and
jnp
clc
or
or
imul
imul
movsl
ja
mov
in
les
sbb
sub
ss
and
mov
dec
sub
popf
subb
punpcklbw
fcmove
inc
arpl
xor
sub
js
dec
lea
dec
scas
outsl
cmpl
pop
pop
sbb
and
fadd
insb
sub
mov
ljmp
mov
or
mov
dec
add
scas
mov
mov
ficompl
sbb
cmp
dec
es
aam
dec
lock
jne
and
jo
test
fisubl
fdivrp
sbb
xchg
jnp
and
rcll
sub
scas
lcall
sbbl
stc
sub
enter
inc
mov
cli
push
pop
out
dec
push
fsubrs
and
dec
addr16
enter
out
adc
sarb
jmp
sub
scas
scas
cltd
fs
or
xor
int3
loop
jne
add
mov
mov
jg
sbb
cmpsb
inc
push
clc
xor
adc
loopne
or
push
fildll
test
test
shlb
dec
jnp
inc
cs
mov
cmp
mov
jl
mov
jmp
in
jbe
int3
push
test
ja
mov
push
arpl
mov
fisttps
out
jo
mov
mov
stos
inc
xor
movsl
daa
jmp
dec
test
sar
jge
cld
int3
les
cli
sbb
scas
add
pop
adc
xchg
fwait
push
lock
dec
hlt
xor
jb
arpl
bnd
in
push
xchg
adc
cmpsb
arpl
loop
scas
sahf
pop
xlat
jmp
iret
and
mov
pop
or
fs
bound
sbb
inc
xor
aaa
jl
or
mov
pusha
imul
pop
mov
inc
xchg
stc
xchg
xor
sbb
inc
loopne
mov
lock
xchg
test
ja
cmp
mov
sub
sbb
and
sbbl
clc
pop
inc
inc
test
and
stos
add
insb
mov
test
push
mov
lea
push
es
inc
mov
push
mov
mov
mov
push
imul
add
cld
rorb
enter
in
lret
sbb
lds
jecxz
sub
repnz
aad
or
ja
aas
pop
dec
aad
adc
mov
mov
pop
pusha
pop
out
sbbb
pop
inc
andb
scas
clc
ja
fstpt
fldl
cltd
test
lock
fildll
aad
sub
lret
sub
scas
imul
mov
xchg
int3
or
outsl
mov
sbb
cmc
add
cs
push
adc
into
mov
dec
dec
mov
adc
mov
aas
or
pop
not
cmp
pushf
xlat
fildl
sbb
dec
repz
fiaddl
into
pop
leave
push
sbb
sbb
lea
aaa
adcl
cltd
aad
je
mov
je
mov
sub
push
int
xor
cld
fldt
shlb
and
inc
loope
fldl
mov
push
loopne
scas
inc
add
bnd
push
cmp
fldt
ret
leave
push
pause
add
outsb
add
pushf
sti
push
adc
mov
adc
sbb
sahf
test
in
js
mov
mov
leave
xor
popf
popf
mov
push
fldcw
pop
add
int
inc
xchg
mov
or
ret
jno
mov
push
inc
pop
adc
in
insl
push
das
test
mov
xor
sub
mov
inc
xor
jb
lret
lcall
scas
jae
push
addr16
dec
inc
mov
xchg
inc
cmpsl
int
lret
leave
hlt
sbb
push
mov
lods
and
jmp
jl
adc
add
xor
ret
jge
mov
das
or
adc
mov
icebp
fcompl
insl
data16
data16
push
outsb
imul
lret
pop
inc
dec
add
dec
mov
mov
fists
je
fmuls
or
add
mov
ret
push
push
lret
stc
and
je
aas
addb
das
inc
and
loopne
in
push
mov
aaa
jo
clc
sbbl
jl
incl
leave
push
pusha
mov
pop
pusha
iret
pop
jne
xchg
stc
sbb
arpl
mov
lret
inc
fisttps
enter
orl
outsl
es
stos
push
pop
test
rclb
call
sub
sbb
mov
fdivr
out
js
imul
hlt
mov
mov
fistpl
dec
mov
fadd
mov
ror
and
adc
jae
inc
andb
lcall
xchg
pop
push
push
mov
shrb
dec
aas
pop
ret
out
ds
jp
imul
sbb
aam
xor
cmp
outsb
add
outsb
aam
xchg
sbb
adc
addb
pop
rcl
je
cmp
scas
fldt
inc
int
aaa
dec
jge
in
stc
fnstenv
mov
lds
push
pusha
cs
pop
jne
aam
addr16
add
vucomisd
sarl
clc
sub
outsl
push
aaa
add
jge
cltd
outsl
jb
iret
movsb
fstl
sbb
repnz
pop
add
inc
pushf
pushf
pushf
pop
nop
push
fndisi(8087
in
add
jnp
xlat
popa
mov
inc
add
outsl
stos
mov
jmp
jp
incl
nop
push
out
push
fs
push
or
sub
lods
xchg
shrl
or
add
in
roll
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
rol
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
fadds
