pusha
cltd
enter
sub
lock
dec
add
lea
adc
lods
out
push
sbb
leave
in
nop
xchg
aaa
lods
leave
cmp
xor
nop
mov
sbb
dec
jge
sahf
inc
div
rcrl
inc
push
leave
adc
or
imul
jb,pt
xchg
js
loope
jmp
fsubl
sbb
rolb
lods
cmp
ss
shll
pusha
jo
pop
push
pop
adc
mov
out
lahf
mov
test
cmpsb
push
jnp
fmull
cli
push
adc
movsb
loope
lahf
cwtl
lods
mov
pusha
out
stos
out
jp
out
mov
arpl
mov
aaa
cmp
lock
xlat
xchg
outsl
xchg
sbb
sub
xor
cmpsl
sbb
cmp
incl
loope
jno
negl
mov
and
mov
pushf
pushl
ret
pushf
push
mov
bswap
seta
not
movl
setg
movzbw
lea
pushf
jmp
neg
cmc
cmc
pushf
sub
mov
shl
test
add
mov
stc
sub
jmp
jb
pusha
push
push
movl
pusha
call
jecxz
jle
outsl
xor
jg
scas
js
lret
xchg
cli
orb
data16
ret
out
daa
mov
ret
cld
jno
and
aad
sbbl
das
add
pop
or
mov
imul
and
xchg
bound
xchg
ret
cmp
int
xchg
push
ror
cmpl
inc
jl
in
jp
dec
push
or
cmp
daa
js
or
scas
xchg
push
xchg
cmp
cmp
push
push
and
lret
push
loop
sbb
repz
sahf
xchg
je
jmp
call
cmp
stos
push
xchg
flds
int3
jbe
flds
jo
and
cwtl
fs
jae
cmp
jnp
jl
call
xchg
fisubrs
fdivrl
push
xlat
shll
inc
cmp
xchg
ret
pop
inc
mov
mov
add
jle
jae
jno
inc
sahf
or
shl
in
cwtl
sub
xor
xor
repz
xchg
lock
and
add
call
in
repz
sahf
insb
insb
push
stos
mov
pop
aas
and
and
jae
add
dec
fidivs
out
adc
inc
mov
sti
xchg
lods
push
push
jp
push
pop
pop
inc
sub
scas
aas
xchg
scas
xlat
pop
popa
fiaddl
cmp
loope
loop
cld
dec
mov
xchg
ror
push
mov
and
in
and
adc
pushf
insl
jg
testb
or
dec
icebp
dec
mov
push
pushf
push
add
add
fdiv
icebp
lahf
lea
mov
arpl
xlat
arpl
xlat
jne
mov
icebp
rorl
daa
ja
mov
mov
sahf
jle
test
xchg
xor
mov
das
std
push
lahf
ljmp
adc
jl
xchg
cmp
mov
dec
and
mov
incl
aad
cmpsl
sti
xchg
inc
dec
pop
es
mov
push
popf
or
icebp
lahf
and
and
or
add
mov
movzbl
movzbw
mov
not
mov
movl
not
mov
jmp
mov
push
pop
or
lret
dec
ret
dec
mov
call
mov
ljmp
repnz
mov
notb
andl
jne
subl
jge
gs
mov
push
dec
adc
pop
pushl
xor
stos
js
aas
xlat
idivb
xchg
xchg
pusha
in
xchg
jp
inc
mov
mov
movsb
mov
jb
push
fwait
int3
mov
mov
cs
hlt
mov
out
add
stc
inc
mov
dec
clc
and
icebp
cwtl
sbb
and
pushf
movl
push
pushl
popl
movw
pushl
ret
mov
pushf
pushf
movl
pushf
mov
jmp
xchg
mov
movzbl
pusha
pushf
movsbw
mov
lea
jmp
cmp
stc
bt
push
or
call
pusha
movb
pushl
lea
je
push
add
jae
push
test
cmp
lea
push
pushf
call
sahf
xor
sub
xor
mov
int
pop
subl
mov
insl
pop
gs
jl
add
adc
rorl
cmp
sub
xor
test
inc
mov
sar
das
xlat
test
xlat
dec
nop
push
or
punpckhbw
xchg
les
push
mov
aas
xchg
mov
lcall
incl
inc
ja
mov
out
arpl
das
mull
shrl
jmp
cmpsb
xchg
in
icebp
cltd
fs
lods
add
xor
xchg
add
dec
mov
add
jne
outsb
ss
push
mov
mov
addr16
imul
mov
imul
scas
or
fimuls
adc
out
sbb
jge
jmp
xor
out
or
add
inc
inc
dec
mov
cmpl
mov
lods
jg
cwtl
inc
cmp
sahf
xor
inc
aam
xor
pop
and
xchg
dec
testb
mov
repz
lcall
xchg
pop
and
jno
xchg
mov
push
sub
data16
sbb
ss
dec
aaa
pusha
or
xchg
mov
pop
lds
inc
jno
dec
rcl
xlat
cmp
lods
out
leave
xchg
inc
in
sarb
pushf
jle
jge
ja
jae
pop
mov
push
in
jns
jecxz
push
fisttps
push
in
xor
out
push
ja
aam
shr
loop
repnz
lock
clc
inc
loope
loope
rolb
sbb
push
inc
lods
cwtl
inc
xor
jae
sbb
aaa
xor
sub
xchg
sub
mov
sbb
repz
lcall
jmp
pop
ds
or
aaa
xor
sub
xchg
or
cmpsl
std
sub
or
aas
dec
adc
add
jle
xchg
xchg
pop
mov
push
xchg
pop
pop
cltd
xchg
cmp
adc
adc
mov
inc
insl
jp
push
cmp
jmp
mov
call
repnz
mov
es
xchg
repz
fwait
enter
pop
jne
imul
add
into
movzbl
bswap
lea
movzbw
lea
jmp
pushf
lea
jne
mov
pop
push
lea
cwtl
call
bswap
mov
movb
lea
ja
push
pushf
lea
jb
bt
jmp
lea
call
pushf
movb
push
xchg
jmp
outsb
cmc
pusha
test
in
sbb
mov
pushf
add
xchg
inc
sbb
pop
mov
jl
cmp
gs
gs
jbe
dec
pushf
inc
sub
push
push
sti
cmpsl
movsb
push
xchg
rcr
push
ljmp
fimuls
mov
cmp
or
fdivl
cmpsb
rcll
andb
mov
fsubs
pusha
dec
mov
xchg
push
jecxz
jp
mov
int3
mov
inc
dec
int3
add
lcall
mov
repz
xchg
out
jl
mov
fucomip
jecxz
xchg
push
sbb
sbb
add
add
add
mov
lcall
jae
dec
fstpt
pop
cwtl
ret
inc
push
mov
push
jl
lds
adc
clc
les
add
sub
out
mov
and
es
cld
xchg
bound
mov
or
add
fisttpl
rorb
dec
xchg
pop
sub
aad
adc
xorl
pop
movsb
jo
repz
xchg
jge
cs
lds
jmp
push
and
xor
dec
xchg
ds
adc
jp
bound
add
sub
or
or
jb
mov
xor
insl
shlb
xor
rcrb
add
mov
fadds
mov
jb
das
sbb
repz
jbe
xchg
inc
iret
and
mov
mov
pop
shll
jo
flds
lds
sahf
ja
arpl
lret
in
data16
cmp
cmp
mov
dec
adc
icebp
xchg
pop
or
loop
jmp
push
movsb
dec
lea
test
xor
clc
rorl
adcl
and
mov
mov
test
roll
push
cli
jecxz
sbbb
das
test
mov
add
int3
push
xorb
out
jnp
mov
xor
push
cld
add
xchg
insl
or
mov
dec
cmp
adc
sub
fdivl
cmpsb
or
dec
stos
mov
pop
add
mov
repz
xchg
aas
sbb
lea
jb
pusha
stc
call
movl
push
pushl
popl
pushf
pushf
pushf
pushf
pushl
ret
and
orb
push
mov
or
fwait
push
shr
rcrl
sub
sbb
xor
sub
repnz
jmp
dec
sarl
jne
inc
push
fcoml
aad
inc
jp
incl
testb
dec
lcall
jecxz
sbb
push
imul
xchg
sub
mov
jge
les
out
mull
pop
iret
push
lahf
xchg
clc
and
imul
rcll
std
icebp
mov
inc
or
and
or
lods
popf
pop
loopne
adc
ja
jns
insl
scas
xlat
sub
int
inc
movsl
ficomps
xchg
jp
pop
pusha
sub
pop
jp
mov
stc
ficoms
mov
ljmp
push
repz
xchg
adc
push
jnp
pusha
and
push
cmp
sub
cmp
mov
gs
xor
xor
lds
sbb
gs
or
std
mov
sti
mov
push
add
jl
rolb
fmuls
jbe
or
fstpt
jb
call
hlt
stc
jns
cli
dec
mov
push
pop
jmp
xchg
push
movsl
repz
xchg
and
mov
mov
or
outsl
inc
stos
sarb
pop
out
xchg
decl
xchg
inc
lret
cmpb
subb
inc
pop
insl
cmp
and
sbb
aas
or
test
push
or
jo
sub
adc
jbe
jmp
lods
bound
aad
cmp
repnz
je
mov
rol
movsl
jge
cmp
jo
jo
mov
cmp
xchg
hlt
call
jp
icebp
jg
rcl
addr16
or
dec
xor
sub
lock
cmpsb
push
push
imul
dec
or
or
fdivs
cs
add
mov
repz
nop
rcrb
xor
je
lcall
test
out
movzbl
bsr
mov
rol
btr
test
rol
sub
pusha
lea
add
jmp
int
leave
repz
in
in
std
and
dec
cwtl
subl
adc
adc
or
negb
jl
ja
adc
mov
fdivrs
lods
inc
mov
rorb
repz
pop
sub
push
ret
das
out
adc
mov
inc
xchg
dec
lds
andl
pop
xchg
jo
bnd
fiadds
push
dec
addl
cli
add
dec
adc
jge
leave
mov
jl
ljmp
and
into
mov
xchg
je
dec
lea
pushf
jmp
mov
movl
push
pushl
pusha
lea
jmp
rep
lea
not
movzbw
mov
mov
jmp
inc
mov
bt
stc
cmpb
pushf
push
movb
pusha
lea
jne
shl
xor
not
xor
bswap
mov
cmp
cmc
pusha
add
push
lea
jmp
pop
sub
movsb
adc
clc
mov
ret
sub
pop
subl
pop
out
clc
inc
or
or
mov
add
sub
adc
loop
pop
xchg
jmp
loop
mov
cwtl
xor
jg
inc
fwait
mov
test
addl
das
jecxz
inc
sub
dec
or
xchg
fwait
xor
adc
jmp
sub
shl
jns
sti
out
scas
sub
in
out
cwtl
xor
je
daa
xchg
popa
int3
aaa
and
cwtl
lret
jp
inc
out
xchg
aas
cmpb
mov
cmp
out
sbb
push
loopne
addr16
outsb
push
vmwrite
cmp
popa
jbe
sub
ja
cli
ss
mov
xor
outsl
xor
into
test
or
mov
mov
mov
sbb
lret
stc
lret
dec
push
dec
cltd
loope
arpl
movsl
int
inc
stc
inc
dec
mov
repz
jo
ljmp
repz
xchg
rol
sub
int3
jne
add
int3
jne
popf
shlb
rclb
mov
mov
loop
jg
and
adc
cmp
xlat
hlt
loopne
mov
dec
outsl
insl
lret
jno
dec
imul
jge
lds
xorl
adc
pop
out
sub
fld
rcrl
xchg
popa
push
sbb
cmp
out
and
fstpt
inc
fnsave
mov
addr16
cmp
dec
jae
cmpsb
iret
xlat
add
stc
push
cmp
or
cld
push
adc
popa
cmp
sub
inc
cmpsl
xchg
push
add
push
jmp
cmp
jo
sub
cmc
les
mov
je
stc
mov
insl
mov
adc
pushf
jno
jge
xchg
and
lret
shrb
mov
adc
mov
popa
repz
loopne
test
cltd
out
mov
add
adc
rorl
aas
or
cld
mov
insl
xchg
jl
insb
inc
roll
in
add
xchg
adc
cmc
stos
or
filds
clc
inc
mov
push
mov
out
cltd
add
pop
inc
dec
jno
pusha
sarb
in
out
xchg
or
test
imul
cmc
jle
cwtl
adc
or
dec
mov
in
test
lock
mulb
lcall
in
pop
imul
rcrb
cmp
ds
sar
leave
xor
icebp
mov
test
addr16
pop
push
jmp
dec
in
mov
pop
sarb
sub
mov
adc
std
adc
ret
aad
lahf
mov
add
add
mov
pop
es
icebp
mov
pop
lods
and
adc
sub
dec
adc
inc
dec
stc
repnz
arpl
into
fcmovnbe
in
cs
cmp
aad
les
xlat
int
cwtl
push
push
and
pusha
inc
push
inc
jecxz
push
fbstp
lcall
lods
xorb
mov
lods
imul
in
jns
rcr
dec
xor
sarl
icebp
lea
sbb
dec
rcll
adc
out
js
or
nop
cmpsb
mov
and
sub
inc
out
jns
loopne
lock
imul
jo
cmpsb
cmp
add
and
xchg
xor
mov
or
lods
sub
sbb
mov
pushf
enter
mov
ss
push
std
mov
jge
and
mov
roll
fdivrl
sbb
cmp
subb
jne
orl
pop
push
leave
repz
lea
adc
cmpb
jne
shll
shll
push
lods
sub
xor
sub
neg
sub
mov
pop
ret
cmp
pushf
bt
movl
or
pusha
jmp
ljmp
imul
loope
mov
loop
mov
and
xor
push
dec
xor
pop
repnz
mov
pop
push
sub
std
addr16
ret
lock
les
inc
daa
or
rorl
jns
cltd
mov
cmp
repz
fistl
fadds
mov
xchg
ja
and
push
hlt
mov
jnp
cs
stos
push
push
and
jmp
rcrb
lret
in
mov
clc
and
repz
mov
jmp
adc
fcoml
das
pop
and
jns
jmp
and
shlb
xor
adc
lds
loope
xchg
out
cmpsb
lahf
mov
xchg
or
or
arpl
dec
pushf
pavgb
orl
test
movsb
pop
and
push
das
cld
in
xchg
ret
ja
pop
xchg
cmp
das
xchg
fdivr
lock
popa
outsl
mov
cmpsb
loop
out
mov
push
cmp
aam
insl
sbb
repnz
icebp
mov
cmc
add
cmc
cmpl
pushf
pushl
jmp
push
lock
std
std
mov
xchg
ret
jg
push
leave
into
ret
sub
add
adc
pop
cmp
pop
lock
leave
in
push
xor
add
in
and
clc
fwait
jbe
test
inc
sahf
mov
inc
testb
xchg
push
ss
in
mov
mov
call
enter
filds
xchg
rol
push
bt
xadd
lea
pushf
test
shrd
pusha
mov
cmc
not
add
jmp
lods
lock
mov
jge
adc
loop
imulb
mov
imul
dec
data16
sarb
inc
or
mov
orl
bound
aaa
adc
fcompl
push
dec
cmpsb
jb
xchg
mov
jecxz
add
jnp
roll
movsb
jle
xchg
loope
ret
jmp
sub
and
scas
xchg
xchg
enter
rolb
mov
dec
lret
xchg
adc
testb
jle
mov
push
aad
es
roll
fiadds
stc
jecxz
incl
mov
push
fadds
cmc
mov
xor
dec
loopne
cmp
shll
out
insl
orb
loopne
push
jecxz
push
aas
mov
lea
jecxz
clc
fmuls
out
mov
jg
sahf
push
pop
mov
or
xchg
adc
repz
add
xchg
ss
mov
sub
scas
and
pop
arpl
ficoms
pop
jmp
leave
xor
xchg
xchg
mov
popa
ljmp
fdiv
or
mov
adc
xor
test
shll
inc
sub
push
adcl
in
mov
sub
or
mov
jno
and
sub
cmp
insl
mov
inc
add
arpl
sbb
xchg
pop
das
push
lea
clc
and
sub
lret
pop
adc
pop
shlb
fsubl
in
lret
sub
in
jg
cmp
xchg
aas
or
int
icebp
mov
dec
clc
inc
xor
mov
sub
mov
jg
mov
addr16
imul
popf
xor
out
pop
sub
icebp
jno
imul
add
cmp
movsl
jmp
lret
flds
mov
pop
mov
lods
xchg
or
decl
or
outsl
xor
bound
mov
inc
pop
addr16
out
fildl
adc
adc
icebp
mov
fcomps
push
pushl
movl
pusha
movl
pushf
pushf
lea
jmp
xchg
inc
lock
je
mov
and
jae
jecxz
adc
orl
icebp
inc
pop
fisubs
loope
int3
sub
mov
dec
jne
mov
jo
pop
adc
xor
sub
xchg
push
inc
mov
xlat
inc
or
aam
and
jmp
les
out
stc
mov
testb
jmp
add
jnp
insb
dec
jo
sbb
jl
push
mov
pop
adc
in
fldenv
add
std
leave
shl
icebp
mov
lods
das
inc
sbb
scas
pop
add
jno
add
rcr
out
sub
jae
les
imul
lock
test
jge
in
stc
pop
outsb
add
mov
jecxz
insb
push
fwait
mov
aad
xchg
add
xchg
ffreep
add
icebp
jl
cld
push
cmp
sub
lcall
movsl
mov
pop
dec
aaa
push
adc
hlt
inc
lods
mov
fs
inc
imul
sub
addb
sti
leave
xchg
pop
clc
inc
in
mov
xor
push
pop
lock
pop
and
fdivl
out
adcb
popf
int
inc
ljmp
sub
xchg
dec
and
call
nop
testl
fcomps
mov
inc
mov
ret
into
and
mov
jbe
push
mov
popf
dec
dec
out
imul
arpl
rcr
jae
loop
mov
ror
stc
bt
add
cmp
jmp
push
enter
or
das
divl
mov
les
xlat
popa
lret
jns
and
pop
ret
lods
popa
push
test
mov
mov
mov
pop
adc
inc
roll
sub
stc
inc
mov
jge
das
mov
push
xchg
fmuls
pop
sbb
je
xchg
push
inc
scas
and
in
cmp
push
push
stc
shlb
inc
sbb
jg
test
pop
fldt
lock
insb
pop
xchg
mov
icebp
sti
icebp
fisubl
clc
mov
jmp
dec
push
jl
daa
jae
leave
push
ret
dec
repz
test
or
and
test
add
sub
shr
ror
mov
pusha
or
call
sets
mov
mov
pushf
pusha
pushf
lea
je
push
not
pushf
mov
lea
movl
lea
call
call
movsb
mov
lock
lods
fdivs
mov
es
fstl
mov
fistps
pop
sbb
shll
inc
add
ja
mov
xchg
mov
xor
inc
icebp
jg
pop
scas
cmpl
and
pop
or
cwtl
test
repz
rcrb
lds
and
dec
in
sbb
mov
sti
jl
insl
call
push
mov
pop
dec
testb
faddl
cmpb
les
pop
mov
mov
fildl
adc
sub
xor
cs
pop
dec
dec
mov
sbb
popf
test
nop
adc
sbb
iret
inc
rcrb
mov
pop
es
pop
movsb
jle
enter
dec
push
mov
fidivs
daa
fwait
jecxz
fisubl
jb
add
cmp
sub
jp
mov
mov
nop
fdivp
fsubp
mov
ja
test
fcmove
aaa
mov
mov
ss
xchg
push
adc
sbb
ss
sub
add
mov
stc
dec
repz
xchg
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
pusha
lea
jae
cmc
call
cltd
lea
scas
jmp
iret
and
xchg
pop
in
ss
mov
and
icebp
cli
jge
cld
mov
rol
call
out
sbb
imul
or
lcall
shrl
dec
xor
add
cmp
pusha
sub
mov
sbb
jmp
sqrtps
mov
or
ss
or
mov
and
aas
sti
mov
xchg
popa
nopl
mov
inc
push
repz
xchg
or
jmp
sahf
push
add
call
mov
pop
cmpsl
pop
cltd
sub
fucom
sar
mov
push
test
cli
xchg
xchg
push
cmp
in
pop
mov
pushf
push
mov
cli
jno
add
clc
mov
mov
inc
mov
pop
adc
pop
je
shrb
outsl
addb
add
movsl
flds
adc
dec
inc
xchg
out
dec
jmp
test
or
enter
fisubl
xorb
pop
mov
setb
movzbl
rcr
mov
das
mov
rcr
aas
inc
mov
movzbw
add
push
lea
mov
pusha
movb
push
push
pushl
ret
jnp
rorl
xchg
xor
lds
out
negl
cs
rorl
lcall
enter
aam
or
mov
shl
cli
outsb
jge
sub
xchg
dec
push
sub
rorb
sahf
out
pop
cmpsl
add
popa
pop
aad
push
rorb
lret
or
sub
dec
adc
cmp
dec
fsts
in
mov
add
orl
cmpsb
adc
leave
repz
sbbb
loope
add
iret
jp
decb
mov
ret
cmp
mov
adc
movsl
xorl
popf
outsl
mov
aaa
mov
lret
jge
jmp
jl
stos
sub
mov
adc
mov
and
jmp
leave
aas
dec
les
gs
jecxz
add
ljmp
in
jp
aad
mov
icebp
subb
stc
xor
call
lea
jae
push
lea
call
lods
jmp
test
call
push
cmp
add
movl
bt
cmp
pusha
lea
jb
pusha
jmp
pushf
lea
ja
bt
jmp
stos
mov
pushf
lea
jmp
str
pushf
push
movl
pusha
call
pushf
lea
je
bt
shl
btc
add
bswap
shr
sub
cmp
adc
shr
and
mov
shld
sar
add
clc
clc
clc
add
btc
bsr
rcl
or
mov
jmp
jmp
iret
and
es
jp
or
push
dec
mov
loopne
mov
mov
scas
jne
pop
popa
mov
leave
je
imul
and
jo,pn
and
mov
adc
repnz
and
addr16
xchg
fiadds
roll
lods
jecxz
aam
adc
nop
xchg
and
pop
sub
popf
mov
push
aaa
cmp
pop
test
cmp
xchg
add
lods
mov
jge
jns
xor
scas
fcmovnb
adc
sub
repz
sbbb
or
daa
jo
or
jl
es
sbb
or
fsts
lods
dec
aas
ja
sbb
jg
es
xchg
mov
and
pop
or
leave
mov
lret
out
sbb
fistl
cmp
mov
cli
fsub
or
jb
xlat
push
fisubl
mov
mov
stos
push
xor
mov
test
aas
sub
test
dec
mov
andb
cmp
call
call
add
mov
mov
test
aam
and
push
cld
call
lahf
mov
fcomps
xchg
inc
in
cs
imul
xchg
xor
inc
jmp
and
mov
clc
mov
movlps
lds
sub
jae
aam
fs
pop
push
mov
add
dec
insl
test
cltd
aad
pop
sti
jb
repz
sbb
int
mov
push
in
out
or
dec
lahf
or
les
iret
cltd
sbb
mov
or
cmp
pop
lods
xchg
push
mov
sarl
daa
lock
sbb
mov
and
movsl
sahf
sub
data16
stos
push
arpl
repz
orl
ret
bswap
mov
pushf
mov
movb
lea
mov
call
sti
sub
or
rcrb
inc
lea
ds
push
sub
xchg
stos
add
lahf
xor
adc
hlt
mov
and
int3
insb
push
jno
xchg
loope
nop
xchg
push
pop
int3
insl
xchg
imul
dec
adc
xor
aas
fbld
xor
nop
push
lds
adcl
jne
subb
or
sub
add
lret
repz
mov
jle
adc
stc
xchg
iret
and
adc
or
pop
and
adc
loop
fwait
adc
push
aam
sbb
ds
out
mov
mov
fcompl
shll
mov
sub
jnp
mov
mov
subl
in
ja
push
dec
mov
shl
dec
xorl
rclb
jg
jno
leave
aad
cld
sub
sub
cmpsb
ss
mov
inc
mov
xchg
dec
in
and
mov
lds
sbb
imul
dec
inc
inc
mov
pop
jne
in
fadds
dec
ss
dec
sbb
pop
mov
mov
and
aaa
out
stc
add
sahf
push
jge
mov
int
lahf
iret
sub
clc
insl
aam
pop
xor
flds
xchg
add
ja
loope
fiadds
mov
push
xchg
mov
jmp
loop
sbb
repz
mov
jmp
mov
ja
inc
inc
outsl
clc
mov
add
addr16
fsubs
fdivrs
int3
xlat
mov
incl
xchg
cli
pusha
xor
sub
sub
mov
pushl
mov
mov
adc
jnp
dec
pushf
push
rcrl
xor
sub
test
and
xor
mov
cmp
shrl
repz
mov
xchg
in
decl
aas
mov
jmp
or
ret
pop
loope
push
imul
mov
xchg
cs
mov
cmp
cwtl
jle
mov
aad
cs
cmpsl
call
sbb
or
les
dec
fcmovnbe
in
add
sub
ja
mov
inc
ljmp
jmp
mov
loopne
decb
xchg
rorb
shr
jmp
jmp
push
movl
pushf
lea
jmp
call
pusha
mov
cmc
stc
add
call
jp
inc
in
aad
decb
sarl
jecxz
xor
cs
push
iret
inc
mov
sbb
mov
fisubl
xor
push
sub
xor
repnz
push
mov
pop
jne
add
les
or
mov
mov
cmp
xor
das
xchg
in
cmp
xor
mov
mov
xchg
mov
push
lret
testl
xor
shlb
lret
mov
inc
or
pop
ret
dec
mov
stos
imul
inc
lahf
imull
jo
xchg
add
or
sahf
push
mov
xchg
stos
push
pop
mov
add
push
mov
xchg
scas
shl
adc
icebp
jno
insb
fwait
cwtl
pop
mov
mov
jecxz
insl
jae
cltd
or
mov
test
subb
in
push
test
cwtl
sahf
sub
push
inc
hlt
shll
pop
mov
mov
push
in
pop
push
push
repz
mov
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
fistpl
dec
jl
loopne
mov
jno
orl
jae
or
mov
xchg
xor
icebp
inc
jns
loope
push
in
mov
push
enter
and
in
addb
push
shll
sub
sub
jmp
pushf
int3
adc
les
cmp
cltd
sti
lods
add
out
push
mov
stos
in
inc
or
pop
xor
pop
cmpsb
push
jg
pop
add
aas
mov
mov
icebp
mov
outsl
jg
add
ss
arpl
negl
push
cltd
inc
mov
jmp
fdiv
les
in
into
push
dec
fwait
gs
add
add
jle
mov
and
push
cmpsl
xchg
push
adc
mov
in
fsubp
out
test
pop
movsl
push
hlt
aam
sbb
loop
pop
movsl
mov
cmp
push
jg
xchg
adc
fxch
jnp
mov
cmpsl
mov
and
mov
pop
call
icebp
mov
push
lcall
mov
scas
push
mov
jmp
fisttpll
dec
mov
xor
in
pop
das
jns
mov
mov
xor
mov
sti
clc
gs
outsb
aaa
pusha
dec
mul
mov
or
cmpsb
adc
leave
mov
xor
in
mov
xchg
test
pop
in
icebp
mov
jmp
mov
push
cmp
pop
in
aaa
pop
daa
out
mull
mov
cmp
mov
incl
sub
leave
pop
and
and
jno
dec
scas
ss
jecxz
iret
sub
stos
and
lahf
sub
test
sarl
xor
cmp
dec
lcall
jg
push
mov
inc
jge
in
or
push
push
or
es
adc
push
or
sub
and
mov
mov
xor
sbb
inc
jb
bnd
cli
idivb
in
and
es
xchg
or
stos
xor
fimull
mov
mov
out
mov
leave
in
lahf
clc
xorb
nop
sbb
pop
push
fcomi
in
outsb
adc
repnz
sti
iret
inc
jl
sub
mov
xlat
test
ljmp
dec
cmp
mov
ss
sbb
fucomi
sarb
mov
and
in
cwtl
inc
adc
testb
repz
mov
test
prefetch
or
orb
jnp
mov
mov
jge
jb
cmc
insb
or
dec
in
hlt
fwait
mov
gs
push
pop
pop
xorb
mov
adc
pop
sbb
es
daa
push
int
shrl
adc
es
les
xor
xor
jmp
push
jmp
jecxz
mov
sub
adc
sub
orl
push
inc
lods
cmp
into
adc
mov
and
cmp
pop
jg
jmp
test
pop
repz
mov
cmpsl
outsb
sbb
shll
push
js
pop
out
sbb
sub
fsubl
xchg
fists
jle
popf
outsl
inc
shl
out
mov
adc
xlat
aad
aaa
mov
cmp
sbb
out
pop
scas
cmp
orb
fsubs
repz
mov
lds
in
ljmp
add
inc
das
fsubs
into
ja
fmuls
mov
and
xor
repnz
or
lods
mov
fisttpl
xlat
add
mov
ror
or
mov
ljmp
xor
lahf
gs
and
data16
xchg
mov
fisubrs
shrl
xlat
pop
mov
stc
mov
and
lea
cwtl
and
fimuls
js
xor
repz
mov
mov
add
jmp
pop
mov
pusha
pushf
push
xchg
jmp
jmp
jmp
inc
inc
dec
xor
cs
insb
add
push
cmp
and
clc
add
push
movb
pusha
lea
jmp
push
lea
pushf
lea
jmp
lea
call
cmp
stc
push
test
mov
jmp
push
jmp
movl
lea
je
pushf
call
call
add
add
add
add
dec
add
add
sub
add
add
add
add
add
add
and
or
and
or
and
add
add
add
push
sub
pop
mov
xchg
cli
movsb
popf
jg
and
imul
mov
fstl
xor
iret
mov
aaa
aam
pmuludq
or
imul
pop
jbe
popl
mov
mov
and
jae
hlt
mov
cmp
ja
mov
dec
das
mov
and
push
movsb
test
insb
jnp
dec
lret
jbe
inc
add
or
leave
pusha
mov
sbb
fwait
in
jae
mov
or
sub
mov
popf
call
clc
xlat
adc
mov
mov
pushf
imul
xchg
fiadds
and
pusha
jl
andl
dec
in
and
outsl
dec
push
sub
pushf
repnz
test
daa
imul
in
mov
jne
dec
fwait
pushf
adc
mov
mov
mov
jle
xchg
push
repz
sub
pop
in
xor
adc
mov
xchg
ucomiss
js
and
movsl
xchg
iret
movsl
xor
sbb
sub
mov
mov
shlb
stc
movsb
popa
stos
orb
cmpsl
xor
push
leave
cmp
xchg
ljmp
mov
into
orl
roll
cmpsb
mov
mov
dec
lock
mov
cli
sarl
hlt
aaa
dec
mov
xchg
push
int3
insb
mov
xchg
lea
cltd
fistl
xlat
int3
cltd
sub
mov
popa
fmull
xor
lods
adc
dec
xchg
push
dec
fildl
test
in
adcb
mov
cs
test
jmp
fldt
movsb
mov
mov
dec
or
sar
mov
icebp
rep
cld
push
imul
shl
lds
clc
jns
pop
inc
sub
and
aam
or
loope
cmp
repnz
xor
testl
mov
lods
mov
lods
jo
push
mov
push
xchg
mov
jbe
xchg
sub
xor
cmp
cmp
loop
sub
mov
pop
imul
movsb
and
fs
add
push
jnp
pop
dec
nop
jne
mov
mov
xchg
fucomp
icebp
loopne
lahf
and
aaa
sbb
sar
paddsb
push
mov
std
repnz
mov
loopne
mov
xor
pop
clc
pop
in
testb
test
enter
mov
xor
nop
or
push
aam
ss
mov
arpl
ficoml
cmc
push
test
jbe
jnp
pop
insb
push
mov
jmp
add
repz
lahf
sbb
dec
or
imul
bound
adc
xchg
xchg
jnp
and
pop
inc
nop
pop
pop
sub
xchg
sbbl
pop
ds
mov
call
xchg
and
sbb
add
xor
and
pop
int3
add
stc
jo
push
push
divb
dec
cmp
lea
stos
adc
cld
nop
fldl2t
push
xlat
and
jge
push
in
call
rcll
xor
or
add
jg
fcmovu
xor
and
ds
xor
call
shl
cld
test
aaa
arpl
ljmp
pop
add
adc
stc
xchg
int
lret
outsl
fnstsw
icebp
mov
ds
mov
pop
mov
add
sub
and
lea
or
pop
sahf
sub
lret
js
add
outsb
or
arpl
imul
push
test
in
pop
mov
xchg
pop
and
sti
mov
inc
pop
adc
adc
rcl
xchg
lret
and
sarl
test
rclb
mov
mov
lahf
xchg
or
mov
mov
stc
ja
ror
insb
jmp
sbb
fsubp
mov
gs
lret
aas
lret
mov
out
mov
pop
inc
clc
rclb
dec
push
or
out
lock
cmp
out
or
gs
push
loope
or
cmp
push
jns
cld
stos
cs
jmp
mov
cmc
leave
fldl
stc
add
loop
jl
mov
mov
mov
or
je
cs
xchg
push
sbb
adc
test
xchg
int3
sbb
shll
pop
mov
mov
sbb
cld
jmp
xor
push
imul
ja
enter
gs
inc
add
out
ret
pop
loopne
lea
mov
mov
test
mov
shll
and
sub
xchg
jg
fcoml
pop
orl
jne,pn
dec
ret
stos
push
mov
xchg
inc
fisubrl
dec
ffreep
jbe
pushf
push
mov
cmp
incl
inc
cltd
lret
jno
add
enter
rolb
in
inc
adc
es
sbb
xor
in
lcall
add
add
pop
mov
into
xor
in
xchg
xor
je
sub
and
jb
mov
js
sahf
sbb
aaa
cmp
or
pop
incl
mov
jbe
aaa
cmp
pop
inc
dec
sub
push
imul
sub
sbb
outsb
int3
pop
or
adc
adc
sub
sub
mov
mov
seta
lret
mov
xchg
mov
fildll
into
imul
out
add
outsb
and
sbb
xor
pop
add
add
inc
push
mov
xchg
cmpsl
adc
adc
std
sbb
inc
or
cmpsb
insl
adcb
cmp
push
mov
roll
push
popf
in
fisubl
mov
fimuls
andl
push
dec
in
mov
xchg
sbb
call
pushf
xchg
sbb
push
test
pop
inc
loope
mov
jle
pop
ja
fbld
out
sbb
xchg
mov
xor
cmp
adc
adc
data16
cld
decl
xchg
cmp
daa
movb
jmp
cmp
cmp
shl
pop
nop
jg
inc
push
aad
call
enter
mov
jmp
sti
es
call
popf
in
sub
sbb
xor
je
and
mov
or
sub
add
push
sbb
and
add
xor
inc
mov
addr16
shlb
scas
mov
mov
pushf
int3
aad
scas
and
shl
popa
mov
cmp
std
dec
or
mov
xchg
jl
xchg
xchg
inc
mov
sbb
clc
adc
jne
shll
jmp
sub
std
push
and
mov
jb
mov
pop
mov
aas
push
push
out
lods
jb
cmpsb
ss
inc
jbe
mov
movsl
pop
inc
push
in
movsl
mov
cmp
dec
pop
int
cmp
stc
insb
into
jbe
fld
lret
push
jns
movsl
mov
int3
mov
push
lcall
push
cmp
pusha
pop
dec
jl
stos
mov
jne
orb
je
iret
fs
pop
scas
fbld
inc
fwait
jp
mov
test
sahf
xor
sub
addr16
jns
xor
cltd
push
ficompl
jecxz
add
and
fwait
jge
xchg
inc
ss
aam
and
cmpsl
stos
xor
or
add
cmp
mov
leave
dec
push
and
movsl
inc
aam
push
mov
pusha
adc
and
cwtl
movsl
sahf
dec
push
lock
mov
mov
mov
push
sbb
iret
inc
pop
inc
and
push
in
dec
xchg
and
je
daa
shrb
jnp
mov
jmp
push
inc
sub
add
xor
jl
pop
and
cmpsb
or
scas
add
xor
dec
push
cmpl
repnz
lcall
lret
scas
adc
stos
dec
je
mov
cli
adc
clc
cld
pop
shll
shr
dec
mov
lret
andl
sub
ret
enter
pop
push
mov
sub
jno
and
and
jnp
in
out
in
fs
orb
push
adc
mov
scas
cmc
scas
fwait
incb
pop
daa
add
and
and
add
lret
loopne
mov
outsb
insl
div
mov
aaa
xchg
test
xchg
ficomps
mov
in
ret
fcoml
test
and
add
rorb
in
adc
test
xor
jle
ds
leave
mov
test
sbb
in
daa
add
dec
mov
jecxz
jl
sub
test
daa
pop
loope
mov
mov
hlt
dec
ret
adcl
int
sbb
or
loope
mov
in
mov
cmp
xchg
add
adc
xchg
lds
cmp
inc
pop
jge
inc
mov
mov
cs
sbb
pop
add
in
xor
inc
xor
and
iret
jnp
mov
push
adc
jne
sbb
jne
xchg
jecxz
or
cmpl
cmc
cld
pop
andl
insb
cmp
in
iret
adc
movsl
or
loop
jnp
lods
add
adc
mov
aam
or
jle
out
sbb
enter
ljmp
push
jb
and
prefetcht2
mov
test
stos
dec
adc
loopne
sub
xor
xchg
cld
lret
sub
add
mov
or
not
pop
pop
aam
sub
ja
and
pop
xor
add
sub
mov
xchg
sub
outsb
mov
dec
ss
mov
inc
fcomps
mov
fiadds
mov
scas
cmpsl
ror
aad
movsb
fcoml
clc
mov
push
call
lock
mov
mov
out
push
lret
mov
push
xchg
mov
mov
adc
fwait
pop
popf
inc
mov
in
fdivl
mov
movsl
test
sarb
jg
gs
push
mov
or
pop
icebp
fdivl
pop
and
dec
mov
es
xchg
repnz
adc
lahf
cli
enter
mov
test
xor
jecxz
mov
es
push
addr16
out
mulb
push
mov
jnp
cmpsl
mov
pop
cmp
inc
or
push
fiadds
push
push
setne
rcll
adc
cmp
xor
mov
cld
orb
xor
setne
lock
jno
cli
push
pushl
jmp
mov
clc
cmp
pop
fadds
pop
add
lret
xchg
jl
mov
and
es
mov
mov
rcrl
dec
pop
sub
testb
cld
inc
addr16
fbld
sarl
adc
xor
stos
push
nop
mov
add
arpl
mov
not
pushl
mov
lahf
mov
pop
lea
pusha
jmp
mov
cli
jmp
dec
dec
cmp
xchg
inc
mov
mov
xlat
mov
rorl
addr16
fdivl
adc
lds
test
lods
inc
cmpsl
mov
frstor
lock
sahf
subl
jno
rolb
jle
rorl
int
icebp
daa
jl
les
cmc
or
pop
and
lret
inc
fadd
hlt
inc
jecxz
sarl
fidivl
fistl
push
sub
and
dec
movsl
push
or
mov
fidivl
push
sbb
mov
mov
mov
dec
pop
pop
mov
loop
scas
fsubs
int
cltd
add
sbb
cltd
dec
addr16
sti
std
xor
andl
push
jle
xlat
mov
cltd
mov
sub
jmp
insl
or
fs
je
data16
sbb
add
cli
aas
dec
jle
popf
sti
lods
scas
add
inc
pop
stos
adc
lea
adc
xchg
add
cmpsb
jg
sbb
xchg
fldcw
mov
sbb
stc
jge
negl
add
imul
test
shlb
xchg
sbb
or
xlat
sbb
cmpsl
fcmove
adc
dec
cmp
mov
cmpsb
mov
sub
in
lea
in
mov
shlb
sbb
pop
clc
loope
inc
jb
leave
aad
sub
and
mov
adc
rolb
test
lret
mov
mov
dec
pop
in
repz
stos
insb
addb
mov
mov
and
jb
xchg
jg
hlt
lods
insl
iret
push
jnp
hlt
jge
mov
dec
nop
lcall
mov
out
pop
xchg
lahf
push
imul
lcall
ja
xlat
ljmp
fldcw
and
xor
add
mov
loopne
and
js
xor
lret
xlat
inc
ds
mov
add
mov
imul
fwait
orb
adc
outsb
repz
stos
jnp
push
cwtl
dec
mov
incl
add
add
add
fdivrl
shl
lea
pushf
push
pushf
pushl
lea
jmp
test
cmc
or
mov
jmp
lea
jb
das
rcl
shr
aaa
cmp
call
or
mov
btr
call
movl
push
mov
lea
jmp
loop
call
sbb
sbb
push
cmp
fwait
jp
inc
inc
cmp
cmc
adcb
or
popf
insb
xor
jge
loopne
xor
in
sti
arpl
out
loop
ja
sahf
test
fs
push
out
idiv
andb
push
scas
jmp
sarb
loopne
pop
jne
in
dec
addr16
mov
outsl
or
dec
pushf
and
push
mov
and
insl
sub
or
push
xchg
dec
outsb
fistl
inc
out
cs
int
hlt
es
movsl
sub
sub
mov
je
push
lock
xchg
int
sti
sub
mov
ret
mov
into
sub
ljmp
cmc
mov
andb
shrl
adc
jo
stos
mov
sbb
hlt
cmp
cmp
sub
sub
pop
push
ds
or
test
xor
mov
push
jno
push
xchg
inc
lods
xor
cmp
call
rorb
cmc
movsl
cmp
jmp
jmp
aaa
push
test
pop
push
test
cltd
fcoms
stc
iret
push
test
mov
xchg
jmp
aas
test
clc
xor
sbb
xchg
and
add
sub
mov
les
xchg
fdiv
mov
pop
popa
test
fsubrl
xor
push
add
lods
lret
pop
in
jnp
adc
test
push
out
hlt
dec
dec
addr16
adc
push
outsb
ljmp
dec
out
dec
dec
test
mov
sbb
jl
ret
and
data16
ret
mov
pop
mov
cmpsl
ret
adc
sarb
cld
pusha
add
sub
test
dec
gs
or
push
mov
mov
mov
push
xchg
adc
ss
lahf
aad
cmp
add
and
xor
rcrl
mov
out
andb
into
push
clc
pop
pop
fsubl
popa
cld
aaa
imul
or
sub
leave
and
ficompl
pop
call
outsl
fs
stos
sub
les
mov
ret
adc
sti
dec
mov
sbb
outsl
cmp
pushf
mov
sub
mov
inc
outsl
ljmp
das
sarl
dec
stos
dec
xor
sbb
pop
int
push
add
xor
sbb
lcall
pop
pop
int3
xor
push
add
rorl
fisubl
idivb
enter
imul
jae
or
xchg
icebp
xchg
jp
nop
pushf
cli
in
ss
out
jg
lods
lahf
cmp
jnp
mov
dec
arpl
ja
xchg
mov
cmp
cmp
or
jae
mov
inc
add
sub
jg
inc
add
xchg
inc
sbb
clc
mov
jo
dec
fistl
loopne
inc
fdivrl
scas
mov
push
repz
rolb
in
aaa
pushf
pop
les
imul
popf
or
out
aas
jle
divb
mov
mov
push
or
sahf
les
mov
pop
jae
pop
xor
xor
cmp
pop
in
and
mov
jnp
call
negl
jecxz
aaa
jl
out
jns
xchg
outsl
cmpsb
rclb
push
inc
adc
icebp
sub
ds
mov
mov
aam
test
fdivs
rcrb
orl
or
mov
loop
ret
cld
cmpsb
inc
pop
mov
repnz
pop
mov
jp
cld
iret
arpl
dec
jb
inc
and
add
mov
lcall
adc
gs
xlat
and
jb
ss
pop
cmpsl
fldenv
xchg
push
dec
mov
clc
mov
test
aad
mov
dec
lcall
scas
sbb
jmp
jae
lret
jle
leave
in
pop
jnp
jmp
jecxz
loop
xchg
xor
jp
mov
enter
icebp
movsl
lea
cmp
mov
test
cmp
test
lcall
cmp
lods
stc
dec
mov
xor
std
icebp
cmp
pop
loop
sub
iretw
dec
sbb
and
mov
js
and
cmova
adc
call
sub
mov
add
push
adc
pop
sbb
sbb
ds
inc
movsb
divl
sub
clc
jmp
ret
into
pop
pop
mov
leave
inc
adc
cmc
or
push
push
dec
cltd
cld
mov
push
ret
scas
sub
test
icebp
ficompl
out
adc
shlb
fs
mov
and
stc
subl
sti
jmp
sbb
shlb
lcall
mov
xchg
cmpsl
in
push
in
test
ud1
hlt
adc
jno
jnp
sub
ja
pop
xor
ljmp
int
jb
stos
push
adc
mov
cli
pop
hlt
adc
hlt
pop
dec
dec
dec
xor
fiadds
imul
sbb
jle
pop
jl
sbb
cmp
xchg
jmp
int
mov
pop
insb
push
and
filds
int3
jb
sbb
clc
xchg
ja
les
jno
sbb
gs
pushf
insl
movsl
in
jbe
push
lock
dec
or
add
in
push
movsb
push
repnz
out
push
out
mov
pop
imul
mov
stos
cs
xorb
jnp
sub
in
and
mov
xor
jae
push
test
daa
push
xor
imul
jb
adc
imul
sub
adc
mov
call
sahf
pop
loop
xchg
and
popa
push
repz
stos
lock
cmpl
test
cld
fadd
push
add
push
jmp
fisttps
shll
push
imulb
repz
sub
mov
aad
jnp
dec
mov
jnp
or
or
and
jle
es
add
hlt
loope
inc
inc
mov
xchg
xor
jle
sub
ret
lahf
ret
and
pop
loope,pn
fs
loopne
mov
jae
into
lock
sbb
fdivp
add
out
mov
fisubl
xchg
decb
push
push
mov
pop
pushl
int
adc
fists
pop
aam
xlat
add
addl
sar
ss
fsubr
cmc
mov
or
shl
mov
shll
push
cs
xchg
imul
jecxz
flds
xchg
jg
lret
scas
negb
sub
in
mov
aas
faddl
into
pop
cmp
rclb
jo
sbb
jmp
das
mov
mov
stos
and
test
inc
dec
data16
xor
inc
mov
pop
add
dec
and
mov
pop
mov
daa
insl
add
ret
xlat
pop
arpl
inc
ret
fwait
push
sarl
sti
mov
sbb
sti
sbb
mul
mov
ljmp
add
das
sbb
std
push
sub
aas
orb
mov
hlt
push
or
in
enter
pop
fstps
hlt
mov
cmpsl
dec
std
cmp
lahf
gs
enter
dec
dec
dec
add
push
dec
add
xchg
jnp
push
pop
xchg
mov
push
arpl
inc
cmp
lcall
add
jno
xor
mov
aam
lods
lret
loope
jmp
fistps
and
pop
jns
mov
jnp
xchg
int3
push
ficoms
not
push
or
ficoml
push
jge
scas
sbb
dec
fwait
jb
jae
push
dec
cli
pop
mov
cmp
mov
fwait
aaa
je
sbb
cld
addb
mov
mulb
andl
pop
outsl
add
inc
mov
lods
fnstcw
mov
shr
inc
pop
xchg
add
or
repz
sbb
push
int3
mov
fmuls
jns
dec
aas
cmp
xor
pop
push
out
pop
pop
mov
fwait
cmc
call
sub
xor
add
jbe
mov
shr
fimull
daa
or
addr16
mov
adc
aam
sarb
fcmovnb
icebp
addr16
jge
popa
addl
jbe
in
push
jnp
jecxz
and
dec
int
iret
repnz
imul
clc
mov
cld
push
ret
lret
xchg
and
sub
adc
repz
pop
icebp
dec
push
adc
js
and
add
notb
push
inc
insl
lea
insl
nop
rcll
lods
xchg
repz
lods
or
movsl
ljmp
lea
jo
arpl
std
in
pop
sbb
div
pop
cltd
and
cmp
mov
repz
cmp
pop
pop
std
fcmovnb
iret
std
jnp
into
mov
out
jo
dec
jmp
sbbl
out
and
xor
insb
dec
lods
insl
mov
mov
or
jle
inc
fsubl
adc
in
inc
mov
dec
xchg
pushf
lret
sub
frstor
and
pop
call
repz
frstor
pop
xor
inc
or
jle
lcall
xchg
pop
dec
jne
push
cltd
dec
das
and
lret
fistpl
in
sub
imulb
decl
or
push
cmpsb
sahf
lcall
rolb
movsl
mov
ret
adcl
in
pusha
mov
popf
adc
in
dec
pop
sbb
aas
mov
dec
in
sbbb
mov
push
popa
mov
mov
or
daa
cmc
lods
data16
lock
mov
mov
xchg
push
lret
jle
js
push
jo
push
sbb
mov
out
xor
adc
mov
and
jo
push
jno
and
aas
std
mov
mov
and
idivl
sub
inc
out
leave
cmpsl
push
lds
gs
push
and
mov
sahf
mov
add
cmp
sub
pop
mov
test
adcl
gs
stc
jne
mov
xchg
out
add
jno
mov
jle
xchg
in
xor
shll
adc
jo
les
jo
out
jbe
xchg
mov
out
push
aam
cmp
aad
pop
fstl
int
pop
jmp
inc
jno
cmpsl
mov
xorl
pop
mov
mov
inc
mov
sahf
pop
insl
mov
loope
add
or
div
jge
popf
pop
in
sub
sbb
jl
xor
cs
je
xor
mov
popa
dec
ret
loop
push
imul
les
fsub
outsb
leave
push
mov
aam
push
inc
cmp
lea
xor
cli
loop
mov
lcall
push
jne
test
mov
sbb
lahf
dec
xor
jmp
inc
inc
cli
and
push
or
jo
push
jns
lahf
xchg
fcmovbe
mov
and
adc
mov
lds
cli
das
les
xor
xchg
jecxz
cmp
push
call
jbe
loope
jno
pop
and
das
aas
cmpsl
push
call
sbb
lcall
pushf
movl
mov
movsl
lods
cmp
loope
or
dec
loopne
push
and
adc
arpl
mov
add
movl
imul
stos
out
pop
aam
addr16
and
aam
mov
add
sbb
push
push
add
lds
in
ret
lock
scas
mov
pusha
add
mulb
push
test
and
arpl
lea
leave
das
jp
iret
cmc
sti
int
cmp
jb
jno
sbb
das
repnz
mov
in
pop
and
xchg
iret
push
jg
xor
pop
push
imul
pop
pop
rcrl
jmp
imul
clc
outsl
xlat
rcrb
jmp
addr16
cmc
loope
xor
jge
push
adc
std
dec
out
incb
je
mov
stc
xchg
mov
jb
cwtl
jns
out
imul
je
scas
mov
mov
mov
mov
test
outsl
xor
push
push
jg
loope
add
lods
data16
sub
rorb
int
mov
add
mov
pop
shlb
loopne
mov
fdivl
outsl
aaa
adc
xchg
xchg
fsubp
jmp
jmp
jecxz
xor
xor
dec
out
mov
sub
sub
negl
xor
movsb
rorb
lods
cltd
inc
mov
sbb
xchg
test
jbe
lret
jmp
sarl
xchg
test
and
out
pop
jg
jle
adc
ror
lret
outsl
enter
stos
xor
add
negb
sbb
bound
jge
cmpsl
imul
xchg
repnz
inc
cmp
insl
rorl
scas
int3
jge
les
mov
incb
inc
xchg
adc
out
out
sti
pusha
jmp
insb
inc
push
testb
jno
aam
in
mov
dec
mov
sti
repnz
sub
pop
mov
out
in
outsb
repnz
xchg
pushf
ljmp
test
jb
pop
imul
jne
hlt
mov
and
lods
shll
ljmp
pop
pop
sti
pop
testl
ds
popa
push
inc
and
ret
push
int
daa
and
push
stc
outsb
rcrb
cmpb
dec
cld
lcall
jmp
imul
xchg
add
sbb
add
mov
xchg
mov
in
filds
loop
xlat
rorb
xlat
divb
pop
sub
sbb
push
test
jae
mov
inc
mov
inc
mov
mov
or
push
push
shl
pushf
lods
sub
inc
xchg
mov
inc
imul
sub
pop
ds
fadd
jge
icebp
pop
fcompl
cld
mov
mov
insl
lret
hlt
mov
dec
fstps
into
lret
pop
enter
cmp
rcrl
jne
dec
add
mull
daa
xchg
sbbl
cmp
dec
dec
inc
arpl
mov
push
aad
push
js
xor
mov
mov
jp
stos
fs
push
sub
add
mov
imul
clc
fmuls
adc
dec
aaa
push
fs
sbb
xor
jb
jmp
jnp
cmp
js,pn
mov
and
mov
icebp
mov
in
sub
xor
ja
cmp
xor
xor
ljmp
scas
pop
dec
push
shll
mov
cwtl
icebp
imul
xor
add
rcll
pop
push
mov
mov
xchg
dec
cmp
sbb
in
rcrb
sbb
add
cmc
movsl
out
or
mov
sbb
xor
inc
out
sbb
aas
popf
aam
out
pop
addr16
xchg
sub
sti
push
adc
js
pop
sbb
xchg
sahf
enter
cli
mov
mov
xor
xor
cltd
cmpsl
lcall
clc
fnsave
fldcw
pop
push
mov
out
test
mov
inc
mov
nop
jg
mov
mov
push
xor
pop
pop
dec
stc
push
in
movb
or
out
fstpt
lret
out
pop
sub
jle
mov
jbe
xlat
aam
sub
imul
jbe
rorb
repz
aas
sar
pop
in
sti
add
push
les
inc
lock
mov
dec
mov
leave
jnp
std
push
cs
xchg
popf
test
mov
cld
jnp
ljmp
lcall
pop
or
inc
adc
dec
ds
mov
xor
xor
aad
int3
or
std
inc
adc
lcall
sbb
js
cmp
clc
adc
daa
fisubrs
jae
aam
pusha
xor
clc
adc
jae
adc
cmp
sub
sbb
xchg
sub
ret
adc
xor
loop
push
mov
ret
aam
xchg
pop
arpl
leave
test
pminub
inc
jp
adc
mov
or
push
ret
orb
pop
push
push
adc
jb
mov
and
xchg
das
popa
add
cmp
pop
mov
mov
ljmp
pop
push
mov
lcall
lcall
xchg
sub
imulb
lods
adc
dec
rcrb
out
fildl
cmpsl
jle
mov
loop
mov
add
pop
xchg
dec
or
stc
cmp
testl
and
pop
or
gs
pop
adc
add
sti
jle
cmp
lock
dec
dec
inc
cwtl
fiaddl
insl
stos
pop
cmp
xchg
cmc
jp
cmp
andl
popa
shl
lods
in
xor
je
les
aam
push
pop
inc
jae
std
mov
outsl
mov
jl
test
jnp
pop
fldt
sbb
ffree
add
call
ret
loopne
mov
mov
popf
dec
inc
test
mov
dec
cmp
sbb
lea
jmp
cmpsl
aas
in
xchg
shll
not
push
sub
cmp
mov
test
mov
mov
push
pop
cmp
mov
aam
xor
cld
mov
adc
nop
mov
jmp
inc
cmp
out
and
andb
adc
xchg
mov
adc
outsb
jbe
and
cmpsl
jo
aad
aam
pop
out
loopne
and
aaa
inc
sbbl
mov
movsb
mov
pop
adc
dec
ds
cs
sbb
sahf
push
out
mov
fdivrl
popa
add
dec
mov
loop
js
mov
adc
stos
xchg
mov
imul
int
sbb
imul
adc
cmc
push
jmp
cld
or
dec
adc
ss
imul
sub
ret
xor
inc
cmpsl
push
push
xor
stos
pop
ret
xchg
or
js
stos
push
push
lods
dec
push
jae
mov
mov
int
pop
inc
repnz
aam
mov
stos
call
lcall
cmpb
inc
jl
es
jmp
jnp
mov
data16
mov
cld
sbb
mov
jmp
sbb
test
daa
daa
sbb
test
imul
adc
les
popf
mov
mov
movsb
adc
iret
daa
mov
cmp
pop
pusha
imul
adc
push
add
repnz
pushl
ja
pop
sub
add
jl
stc
sbb
mov
out
mov
lock
in
int3
mov
not
sahf
xor
imul
adc
xor
popa
loop
movsl
stc
mov
sarb
lahf
adc
cmp
inc
aad
jnp
lock
sub
movsb
fcompl
fnstsw
inc
or
and
or
push
in
ljmp
mov
nop
lahf
incl
ret
sbb
enter
notl
daa
ljmp
movsl
xor
adc
sub
cmp
push
in
jae
add
adc
xchg
and
out
mov
bound
dec
xchg
scas
cmpb
mov
cmc
popf
das
and
jns
mov
js
pop
leave
mov
mov
xchg
out
hlt
rorb
sarl
divb
inc
xchg
sbb
add
out
mov
cvtdq2ps
sub
movsb
xorb
subb
or
push
les
repz
mov
dec
pop
or
loopne
test
adc
and
aaa
mov
popf
in
outsb
dec
fisubrl
cltd
adc
cmp
xorl
loopne
adc
mov
xchg
xchg
popf
pop
sahf
fildll
mov
clc
push
push
dec
push
push
inc
bound
aam
sbb
iret
pop
xor
xor
cwtl
cmp
sub
xchg
movsl
mov
or
cmp
push
imul
dec
repz
or
and
jmp
jo
js
adc
fs
call
in
push
sub
scas
jno
subl
js
test
out
mov
mov
mov
fcmovne
sbb
push
mov
cmp
dec
push
mov
aaa
call
sbb
mov
or
inc
inc
jg
insb
loopne
jl
jmp
sub
mov
insl
call
dec
fninit
jae
out
out
jnp
jp
mov
mov
sub
sbb
jle
xchg
in
out
mov
das
sub
sbb
cmp
push
xchg
and
sbbb
add
adc
call
mov
clc
adc
sub
and
rcll
xor
inc
or
sbb
movb
imul
cmp
icebp
cltd
push
mov
dec
fs
pop
out
sbb
sub
push
mov
test
pushl
in
and
fucomi
cmp
adc
mov
scas
test
or
rcrl
dec
mov
fldl
fisttpl
mov
mov
cmp
subb
rcl
dec
xor
xorl
sub
inc
repnz
or
iret
jle
outsb
test
adc
js
jnp
out
push
out
xor
shlb
cmp
add
cmc
xor
xchg
xchg
hlt
in
jl
mov
push
or
enter
mov
insb
in
popa
je
xchg
repz
fnstenv
mov
insb
cmp
xor
sbb
jmp
int3
repnz
insl
aam
lods
xor
jmp
divb
fisttpl
cmp
mov
and
fldt
aad
pop
daa
and
push
ficoms
pop
int
faddl
xor
out
mov
and
xor
loopne
popa
stos
jno
mov
and
push
mov
leave
and
fstps
push
clc
inc
call
adc
pop
dec
cmpsl
xor
inc
in
dec
xor
push
or
mov
adcb
out
cmp
repnz
xchg
popf
push
jne
nop
lret
stos
mov
scas
shll
aam
push
adc
es
cmp
push
lret
xchg
xor
push
mov
orb
mov
ja
push
sbb
loopne
gs
adc
xchg
sbbl
outsb
mov
insl
in
rclb
sub
movsl
sahf
shll
xor
pop
or
xchg
pushf
or
test
cmp
dec
add
lret
pop
jae
mov
scas
jno
xchg
sbb
and
xchg
lock
in
mov
aaa
mov
add
dec
mov
jo
dec
ja
sti
xor
movsb
push
les
je
push
xchg
fs
mov
sub
sbb
cmpsb
aam
hlt
add
aas
push
in
call
push
push
orb
lret
ds
cltd
pop
js
ja
mov
adc
dec
mov
adc
xor
xchg
jne
nop
fistpll
jl
int3
in
idivl
lds
loopne
cmp
lods
sbb
and
fwait
mov
sub
xchg
repz
cwtl
jbe
jle
sub
arpl
push
mov
sbb
loop
fucomp
inc
cmp
aas
push
lret
pop
sbb
imul
cs
lods
fdivr
mov
mov
dec
sub
inc
int
add
mov
adc
and
mov
mov
lods
out
and
pop
arpl
sbb
jmp
mov
es
lret
mov
cmp
popf
and
mov
push
xchg
lods
push
std
xchg
xchg
mov
sub
movsl
jmp
jae
adc
je
push
outsl
pop
pop
out
fucomp
sbb
xchg
cmpsb
mov
inc
mov
jnp
sbb
inc
out
lahf
dec
sub
sub
sub
jle
mov
decb
aas
loope
cld
ljmp
or
andb
adc
ret
lret
bswap
repz
hlt
ja
mov
push
repnz
icebp
addb
mov
xchg
cld
fnstenv
xor
pop
xchg
in
lock
fcoml
bound
outsl
jne
in
xchg
add
dec
pushl
fmul
loop
dec
stos
hlt
xchg
pop
mov
hlt
pop
jmp
ficoml
push
cwtl
xor
lret
push
adcb
mov
inc
adc
test
mov
adc
aas
pop
imul
movsl
fdivs
sub
cmp
mov
enter
mov
xchg
int3
scas
push
mov
sub
or
int3
cmp
pop
out
leave
lock
xchg
fidivrs
sbb
jo
jge
xchg
int3
aaa
in
pop
les
or
int3
loope
mov
inc
adc
add
cmpsb
leave
outsl
addr16
push
out
cmpsl
inc
add
scas
es
add
call
mov
fistps
jp
aas
cmp
jp
out
and
jno
or
add
mov
mov
ljmp
bnd
insb
dec
push
mov
dec
mov
fsubl
fwait
fs
mov
jo
es
movsl
pop
in
popa
jno
sub
jmp
adc
nop
xor
sbb
out
push
inc
fs
lret
movl
mov
cs
movsb
repnz
das
ss
sub
int
inc
xchg
sbb
movsb
sbb
scas
inc
stc
int
stos
icebp
leave
jb
push
and
inc
push
jne
rcll
adc
cmp
cmp
jg
xor
adc
or
xor
lcall
and
mov
jmp
scas
scas
jb
cmp
sub
push
dec
and
xor
xlat
out
lcall
cmpsb
iret
es
and
jecxz
cmc
sub
out
mov
pop
lret
inc
rol
hlt
sub
pop
out
scas
push
cltd
xor
fcoms
jno
jnp
lahf
aaa
out
xchg
es
stos
out
mov
pop
int3
cmp
dec
loopne
mov
sarl
dec
push
lret
push
push
inc
flds
stos
cmpsb
addl
rorb
push
mov
popf
or
cmp
or
sbb
push
popa
sbbb
push
push
xor
sbb
fists
cmpsb
cli
addl
js
dec
daa
add
dec
mov
jle
mov
sets
imul
loop
mov
ret
jp
mov
mov
add
adc
mov
push
and
xchg
enter
out
fiaddl
rol
dec
push
loopne
cmp
add
pop
repz
in
or
insb
addr16
add
inc
pop
xchg
inc
mov
cmp
movl
cmp
mov
sbb
mov
or
lea
add
pop
fstl
loop
pop
shll
mov
mov
test
imul
xor
inc
imul
clc
mov
push
mov
push
cmp
inc
aam
adc
cld
inc
sub
sub
add
adc
dec
xchg
xchg
ss
pop
or
in
clc
mov
mov
push
xor
popa
pop
sbb
push
in
call
jmp
fcomip
lahf
or
shll
inc
cmp
nop
push
ret
adc
pop
insl
setno
cmp
or
lcall
mov
call
outsl
sbb
sbb
mov
imul
lret
push
decb
sbb
cmp
in
sbb
inc
xchg
xchg
pop
cmp
bound
push
out
aam
mov
fwait
and
jge
jbe
in
sti
add
sub
pusha
out
add
les
int3
dec
or
push
out
pop
sub
ljmp
fwait
sahf
pushf
add
dec
mov
cmc
outsb
fldln2
pop
out
inc
mov
lods
push
nop
popf
rolb
push
pop
jle
loope
push
cmp
decl
pop
orl
movsl
insb
int
dec
mov
inc
xor
dec
dec
movsb
mov
push
insb
sub
pop
mov
or
dec
or
out
xor
cwtl
fstpt
inc
int
scas
xchg
add
ljmp
js
mov
popa
mov
pop
sbb
int
std
lea
call
dec
jb
roll
and
xor
push
loop
adc
lcall
sub
lods
adc
fsubs
push
loopne
iret
scas
pmaddwd
mov
sub
jno
in
icebp
pop
dec
xchg
mov
or
repz
push
roll
and
enter
gs
or
lea
in
xchg
cmc
mov
jne
int
lret
decl
inc
jp
outsl
test
ds
mov
in
fadd
adc
movsb
leave
addr16
inc
shlb
push
pop
mov
or
aas
loop
mov
mov
jle
gs
fisttpl
pop
insb
bnd
stos
push
das
rcrb
mov
adc
push
xchg
mov
fbstp
and
mov
pop
pop
in
jecxz
lahf
mov
sub
adc
mov
scas
xor
mov
mov
imul
pop
inc
push
faddl
and
fcmovu
or
xor
sbb
nop
or
add
cmc
mov
and
fs
scas
bound
test
push
dec
out
sbb
subl
dec
jno
pop
aam
lock
sub
dec
mov
inc
cmpsl
push
or
sbb
mov
gs
push
jl
dec
push
int3
fisttpll
cmpsb
aad
ret
repz
mov
nop
mov
dec
dec
test
add
ja
lods
repnz
dec
inc
mov
in
enter
bound
pop
icebp
divl
movsl
icebp
xchg
fcomps
and
pop
loopne
inc
adcl
es
cli
cmp
cmp
sbb
mov
in
sbb
arpl
jmp
xchg
lds
fdiv
rcrl
clc
inc
clc
jo
stos
ret
daa
cmpsb
insb
sub
fwait
cmpsl
rclb
testl
sbb
ja
mov
cmp
cmp
cmpsb
mov
and
xchg
mov
lods
push
inc
adc
in
push
cmc
adc
lcall
mov
fsub
mov
cmp
cli
dec
mov
mov
dec
lock
or
testb
jnp
adc
cmp
int
pop
shr
int
dec
int3
adc
jl
add
test
aaa
daa
cmp
mov
sbb
idiv
push
fs
insl
sub
cmp
mov
lcall
mov
stos
pop
insl
movsl
addr16
mov
hlt
inc
bswap
adc
pop
add
mov
xchg
in
or
and
pop
pop
cmpsb
xor
xchg
lock
xchg
test
mov
pop
mov
js
jo
xchg
jne
pusha
incl
jnp
jecxz
cs
das
cmp
xchg
add
push
ss
stc
fcomps
fisubl
in
clc
and
and
cs
cmpsb
loope
inc
mov
es
nop
cmpsl
xlat
push
stos
loopne
cmp
fdivrl
loope
bnd
or
or
cmpsb
adc
rorb
int3
push
sub
push
add
out
cmp
cmp
inc
pusha
hlt
jne
cmp
mov
jl
adc
in
into
js
movsl
rep
lahf
sub
ds
cmp
push
fbstp
or
jnp
ja
mov
add
fisttps
rclb
or
fmull
mov
jns
push
loop
mov
or
sbb
lcall
xor
aad
mov
scas
faddl
lcall
pop
mov
or
jmp
adc
mov
lods
out
sub
out
xchg
jp
push
dec
out
mov
sbb
xchg
scas
xor
or
in
out
jp
repz
pop
sbb
jo
imul
enter
rorb
faddl
sub
mov
sahf
or
cmp
decb
lea
mov
mov
adc
enter
out
pusha
add
shll
ljmp
jg
inc
sub
cs
push
dec
daa
cs
mov
mov
mov
popa
mov
sbb
into
sbb
add
lods
ret
in
xor
stos
push
sbb
push
dec
scas
repnz
xor
fcmovnb
das
leave
loope
pop
inc
sbb
shll
movsl
cmpl
mov
xor
jns
and
add
and
fdivs
add
mov
fcmovbe
mov
sub
roll
cmp
ds
imul
xchg
mov
pushf
push
int3
lret
pushf
clc
mov
hlt
push
inc
ds
sbb
dec
pop
das
in
add
pusha
mov
xor
mov
push
pop
adc
or
nop
divb
and
jle
cmp
jb
faddl
mov
ret
cmp
inc
adc
shrb
cmp
ffreep
mov
dec
lds
mov
shrl
imul
or
push
jbe
push
inc
fwait
mov
loope
test
and
addps
sbb
cmp
sahf
mov
es
loope
inc
adc
pop
ret
push
adc
in
fbld
dec
cmp
cmpsb
jno
fisubs
lock
je
cltd
mov
idivl
push
sbb
arpl
sahf
rorb
aas
hlt
sarb
pusha
sbb
subl
add
xchg
push
xchg
lcall
ss
pop
sbb
adc
sbb
jo
dec
and
and
jmp
adc
cmp
add
cmp
repnz
movsb
jg
jns
mov
idiv
inc
insb
cmp
and
loope
js
test
cmp
push
mov
add
sbb
cmc
fmull
hlt
xchg
lods
dec
pop
jbe
addr16
rolb
mov
in
mov
lods
das
mov
call
stos
shrl
shrl
jo
xor
cmpsl
divb
mov
jge
out
mov
xor
in
mov
ret
outsl
sti
add
mov
cmp
jge
cltd
js
je
cwtl
js
stos
or
adc
sub
pop
test
dec
bound
inc
push
or
adc
ret
xor
xor
jle
lock
inc
push
jl
jg
jle
into
nop
stc
aaa
loop
pop
scas
loopne
cmp
sbb
push
pop
pop
dec
imul
xor
or
adc
mov
sub
loopne
shlb
scas
fmull
xor
scas
aaa
adc
js
loop
xchg
js
cltd
push
dec
mov
imul
mov
out
dec
jg
sbb
sahf
pop
cmp
mov
lds
sarl
outsb
or
mov
int
cmp
sbb
aas
pusha
iret
stc
push
sti
psubusw
add
push
insl
cmp
mov
out
loopne
pusha
rcr
or
je
or
cmc
push
call
repz
ret
out
lret
repnz
or
push
jns
lret
lds
push
sbb
mov
aad
leave
aad
scas
jns
mov
sbb
cli
into
adc
or
inc
out
sbb
testl
aam
jge
push
sbb
jecxz
test
xor
inc
sub
jecxz
data16
ljmpw
sub
pop
dec
dec
pop
orb
xchg
outsl
sbb
xor
mov
push
jecxz
popa
and
iret
push
xchg
pop
dec
ljmp
xor
sbb
mov
dec
xlat
mov
out
sub
ljmp
and
das
les
mov
mov
xchg
dec
xrstors
jmp
add
mov
xchg
jle
xchg
sbb
fs
repnz
mov
jne
or
pop
jb
hlt
sti
jne
fisubrl
cmc
addb
scas
push
xchg
ljmp
cmp
pop
movsl
imul
mov
scas
inc
sub
push
mov
out
push
add
pop
jmp
jge
xchg
inc
ret
xchg
sbb
push
sub
outsb
pop
jne
xor
popa
jno
inc
cwtl
jb
imul
dec
pop
jecxz
pop
ds
inc
imul
mov
sub
jnp
adc
add
and
popa
cwtl
or
jnp
sub
xor
dec
mov
mov
repz
pop
xchg
cmp
idivl
sbb
outsb
test
jmp
adc
add
sbb
xchg
sub
stos
sbbl
adc
cmpl
in
frstor
add
sbb
push
pushf
aad
adc
scas
mov
and
push
ret
adc
out
or
movsb
loopne
cmpsl
arpl
sbb
cmpb
inc
mov
jl
outsl
dec
push
fwait
lret
aam
xor
sub
iret
or
push
les
cmp
pop
faddl
test
sbb
adc
xor
cli
rcr
hlt
mov
mov
roll
dec
call
insb
mov
push
std
cmp
xor
lret
lods
push
mov
xor
decl
jp
rcl
outsl
mov
push
xchg
cmp
shrb
aam
dec
sbb
sahf
lea
pop
xchg
push
mov
inc
push
push
mov
mov
jg
addr16
leave
sub
adc
out
cltd
lret
out
xchg
mov
mov
jnp
xor
and
insl
dec
icebp
jmp
inc
inc
push
xchg
sub
xchg
cmpsb
push
jle
arpl
aas
loope
cmp
push
pushf
lods
dec
pop
jo
lar
add
jg
mov
adc
or
enter
xchg
and
inc
push
xchg
test
lods
loopne
adc
out
pop
out
in
loope
and
mov
jno
xchg
jbe
pop
mov
mov
xor
aas
mov
aas
movsb
mov
mov
scas
dec
mov
mov
add
inc
sub
dec
insl
mov
in
int3
dec
xor
cwtl
sahf
and
xor
ret
pop
in
rolb
pop
rorl
xchg
setae
in
outsb
das
out
mov
push
xchg
xor
jmp
pop
imul
aaa
inc
pop
dec
outsb
mov
xchg
cmp
add
push
test
sbbb
ljmp
mov
mov
mov
push
xlat
aaa
inc
cmp
add
hlt
mov
ret
dec
or
xchg
gs
push
inc
cld
push
fisttps
lds
push
mov
pop
dec
stos
jle
push
adc
sbb
xchg
inc
mov
lret
shrl
sbb
cmp
ds
stos
pop
imul
lds
dec
fcoms
mov
pop
dec
push
xchg
jno
sbbl
lcall
xor
xchg
stc
test
mov
repz
flds
dec
pop
sbb
inc
mov
cmp
in
sub
jge
lock
imul
sbb
add
sbb
aas
jg
add
mov
cs
es
aad
xchg
push
jge
cs
scas
pop
into
fdivp
call
jnp
in
popa
scas
orb
xchg
sbb
nop
pop
mov
mov
shl
repz
ja
lods
push
add
pop
rol
jmp
lods
mov
lods
mov
mov
jp
push
jno
adc
ret
pop
clc
cmp
xchg
fsubl
fiaddl
out
enter
call
inc
mov
push
call
push
test
je
lcall
std
int3
sti
stos
jae
dec
repnz
rorl
out
ret
mov
jns
xor
lret
sub
orb
cwtl
push
fisubs
cld
or
ficomps
xor
out
or
ds
xchg
push
addr16
jle
fucomip
nop
ret
and
adc
movsb
xchg
sbbl
ja
test
outsb
repz
sbb
fdiv
subb
cmpsb
aas
fwait
inc
jbe
sub
loop
dec
lea
std
or
ret
inc
repnz
add
popf
dec
push
and
fs
rorb
fildl
in
aam
push
pushf
ficomps
and
das
ret
int
add
jl
ss
std
push
push
xchg
push
jg
out
out
shr
out
fs
xchg
dec
inc
in
leave
or
inc
scas
mov
pop
ror
cltd
pop
mov
outsb
test
add
sbbb
push
in
negb
aad
dec
fs
shrb
mov
sbb
inc
iret
pop
or
es
inc
gs
and
das
mov
fs
jns
jb
lahf
scas
movsb
xchg
mov
sbb
xchg
test
sub
push
push
xor
push
pop
lahf
jg
pop
push
subb
sub
fcmovnbe
lods
mov
push
cmc
jae
sbb
jle
es
mov
cmp
out
cmp
jmp
jecxz
add
test
insb
dec
adc
xor
cmp
and
adc
sahf
mov
in
sbb
xchg
add
nop
xor
or
adc
stos
lock
cwtl
sbb
cs
pop
mov
mov
xchg
sub
fbstp
fs
pop
mov
cmp
adc
sub
push
cmp
pop
scas
sahf
cmp
dec
push
mov
add
imulb
ret
les
pop
and
push
sbb
sbb
nop
movsb
or
pusha
in
jno
sub
adc
inc
out
sub
add
wbinvd
ds
xchg
pop
int
fldl
sub
dec
adc
inc
imul
addl
leave
add
pop
jae
lcall
nop
mov
xchg
outsl
and
jae
orps
ds
and
mov
lods
push
movsb
mov
mov
adc
stos
scas
xchg
shlb
hlt
adc
mov
xchg
pushaw
dec
xor
subl
and
iret
mov
mov
sbb
out
add
into
loop
jge
mov
xor
jae
dec
pop
sub
stos
test
mov
gs
hlt
ret
xor
stc
scas
outsb
and
out
cmpsl
sarb
stos
mov
enter
and
push
adc
add
xchg
push
mov
push
xor
mov
jo
push
sub
lea
pop
leave
lret
fildll
pop
repz
push
ret
imul
leave
cmc
mov
inc
adcl
aad
ds
jns
push
jg
add
sti
jle
out
mov
stc
fnstcw
ja
ja
adc
xor
mov
adc
or
sub
cmp
jmp
ret
inc
shll
and
fucomp
jp
outsl
mov
pusha
test
sbb
daa
call
bound
mov
jmp
mov
push
js
push
std
adc
mov
out
stos
daa
dec
loop
test
push
lods
push
xor
jmp
and
sub
inc
and
xor
mov
mov
pop
aad
inc
cmp
movsl
xchg
add
outsl
aaa
je
ret
lock
jo
popa
les
mov
int
adc
mov
push
test
add
add
sub
pusha
in
push
adc
jmp
dec
fwait
neg
ret
pusha
inc
popf
mov
fstpt
outsb
sub
lahf
fisubrl
jae
jmp
into
cltd
std
lahf
cmpl
ds
div
stos
jns
inc
mov
xchg
leave
stos
mov
bound
fldpi
and
cmp
data16
mov
dec
lds
sub
lcall
popa
fs
ja
fdiv
mov
fsubr
repz
psubd
jbe
xchg
cmp
es
xchg
jp
jbe
enter
or
repnz
jae
mov
fimull
stos
fmul
pop
or
movsb
aas
js
jl
mov
repnz
movl
fstpl
sbb
dec
xchg
push
cmpl
xchg
nop
shrl
into
cmp
lcall
xlat
pop
sbb
cmc
push
xlat
xchg
testl
pop
xor
pop
xor
pushf
pop
mov
lahf
ja
out
and
mov
pop
pop
push
cmp
xor
xor
sub
mov
adcb
repnz
cwtl
pop
pop
sahf
jp
mov
aam
ljmp
int
iret
scas
ds
leave
lods
test
ret
mov
and
sub
sbb
idivl
ja
xchg
xchg
jno
clc
jp
outsb
leave
inc
jmp
push
jmp
add
and
add
jne
push
das
dec
shr
dec
xor
sbb
js
xchg
call
xlat
adc
jae
xchg
inc
mov
adc
add
divb
pop
out
out
dec
jne
mov
inc
xorl
mov
dec
mov
jl
push
test
popa
jo
rorl
arpl
xor
add
testl
add
nop
mov
mov
leave
push
ds
inc
fsubs
sub
pop
push
int
out
lcall
mov
call
out
ret
aas
and
adc
fimuls
push
mov
dec
inc
clc
lds
mov
arpl
stos
out
addr16
mov
mov
icebp
push
pop
loope
in
aaa
jecxz
push
push
mov
pushf
or
mov
mov
push
imul
xchg
test
fcmovb
sub
imul
xor
ret
lret
stos
insl
ljmp
mov
push
scas
mov
push
and
push
pusha
int3
ss
inc
fidivl
sub
divb
add
or
dec
and
dec
push
mov
lods
mov
cld
ja
pop
test
inc
ds
jns
andl
out
aam
dec
movb
and
jl
mov
loope
dec
sbb
pop
inc
jb
and
jmp
popf
pop
and
nop
jo
test
xor
xor
and
and
mov
gs
imulb
mov
movsl
push
sbb
xchg
fldcw
ret
add
movsl
sbb
and
insl
pusha
daa
and
movsl
fbstp
lcall
inc
pop
aas
xchg
pop
add
and
jge
xchg
das
adc
cmp
cwtl
ret
insl
cmp
imul
mov
add
mov
fcomps
xchg
dec
ret
pop
call
pushf
mov
shrl
aas
adc
stos
inc
mov
js
mov
mov
adc
xchg
lods
adc
cmp
sbb
jo
inc
lcall
fwait
add
inc
xchg
cmp
lcall
daa
mulb
dec
and
scas
inc
stos
cwtl
stos
roll
pop
sbb
jecxz
sahf
pop
mov
push
loop
scas
cld
cld
xchg
insl
stc
mov
sub
mov
insb
cmpsb
sub
out
addr16
js
outsb
cmpsl
pop
call
pop
fbstp
xlat
push
and
cmp
push
mov
pop
fnstenv
inc
aaa
inc
cmovno
push
bound
out
push
into
push
lret
pop
dec
adc
xor
out
lds
jnp
push
adc
adc
add
mov
lds
imull
std
cld
sub
jg,pn
add
and
in
or
cmp
test
sub
pop
sbb
sub
insl
or
shl
sub
lret
ds
icebp
inc
xorl
shll
jle
cwtd
and
mov
add
push
and
push
into
repnz
inc
rorb
pop
stos
in
out
inc
shl
mov
jg
subb
and
jge
pop
inc
sub
xchg
mov
xchg
jns
in
leave
sub
lock
inc
xchg
lock
push
test
enter
scas
clc
scas
cmpsl
sbb
call
fwait
lds
or
pusha
xchg
ljmp
popf
daa
stos
data16
dec
adc
sbb
dec
add
fsubl
test
sbb
icebp
jle
xchg
icebp
sub
out
out
pop
cltd
fisubs
sub
jb
mov
sub
cli
adc
dec
push
sti
pusha
cs
popa
lods
int3
mov
mov
pop
insl
mov
repz
dec
push
ret
out
in
repz
ljmp
mov
adc
jmp
shlb
mov
and
sub
js
daa
inc
popa
daa
outsb
cwtl
mov
cmc
lcall
add
jne
sub
sbb
pusha
inc
fwait
data16
lcall
mov
stos
bound
test
outsb
lods
xchg
call
in
lods
and
icebp
push
loop
das
pop
cltd
jmp
rcl
es
fs
sub
sbb
mov
mov
daa
decl
pop
call
mul
pop
pop
scas
sahf
fstpl
pop
aam
lods
hlt
xor
popf
and
sbb
imul
push
pushl
add
filds
jno
je
popw
jno
push
pusha
fsincos
mov
pop
in
loop
jne
movsb
addr16
cli
repz
lret
movsb
mov
mov
add
mov
inc
test
testb
shrl
jbe
bound
xor
mov
std
mov
ljmp
mov
clc
xchg
stc
or
fidivrl
sbb
mov
insl
jbe
add
cmc
ds
movsl
aad
cmp
cmp
lods
gs
imulb
jnp
stos
mov
dec
push
sbb
mov
lret
stos
cmp
mov
mov
push
fistl
ss
fdivl
xor
fmull
je
or
pop
mov
js
ret
xorl
test
cmp
adc
xchg
jge
mov
mov
adc
pop
sarb
rorl
daa
inc
adc
sub
enter
outsl
push
cmp
mov
xor
insb
sbb
adc
mov
ret
out
xchg
xchg
test
js
add
push
aas
shrl
and
sahf
cmp
adc
in
imul
sbb
loopne
aam
mov
mov
sbb
pusha
sbb
xchg
cmp
or
fnsave
fwait
cwtl
imul
xchg
loopne
push
xchg
mov
add
push
sbb
aad
pop
xor
jns
pop
dec
xor
xchg
push
out
scas
popa
xchg
neg
movl
sbb
mov
cmpb
nop
into
jle
ljmp
sbb
push
mov
sbb
enter
dec
loope
or
mov
mov
or
xchg
divb
pop
int3
fmuls
test
in
jg
fidivrs
cmc
or
lea
cwtl
adc
mov
pop
mov
cmp
mov
dec
inc
testl
dec
ret
shl
lock
sarl
dec
push
bound
xchg
adc
xchg
shr
outsl
sbbb
ss
xor
fidivs
mov
push
sbb
mov
bound
pop
xchg
popf
push
dec
nop
mov
test
stc
adc
in
mov
xchg
mov
stc
shll
mov
lahf
inc
ss
test
mov
ror
inc
fnsave
cld
subb
xor
test
nop
jl
push
mov
add
sbb
sub
inc
add
mov
lea
addr16
iret
fdivrs
in
aad
lods
stc
add
ret
iret
lock
cs
test
adc
mov
mov
sbb
jmp
sahf
xor
sub
fstpl
mov
notb
inc
cmp
in
loope
jl
cltd
hlt
cmpsb
addr16
pop
inc
sub
cltd
mov
das
or
and
fwait
sbb
xchg
cmp
aas
sbb
add
inc
lret
pop
mov
inc
rol
call
addb
dec
jmp
sub
call
cmp
int3
mov
pusha
in
xchg
stc
jnp
mov
jne
lret
jle
sub
mov
push
repz
fldt
dec
test
fwait
aad
sbb
xor
mov
shll
pop
bound
xchg
adc
stos
dec
repnz
adcb
cmp
xchg
cli
and
push
and
xchg
cmp
sarb
cmpl
cmp
in
xchg
fisubl
jb
mov
mov
jmp
cmpsb
inc
xlat
push
lret
push
scas
or
mov
data16
imul
add
scas
pop
inc
movsl
ret
dec
adc
cmpb
repnz
and
mov
sub
jb
pop
jge
pushf
bound
add
or
cmpsb
cmp
mov
leave
jg
cs
js
dec
insb
xchg
js
mov
sub
dec
repnz
jb
mov
sahf
add
add
dec
test
mov
mov
sbb
lret
addr16
ljmp
adc
push
addr16
les
hlt
insb
and
mov
push
adc
push
sbb
inc
or
push
clc
aaa
cmp
scas
and
push
test
lock
add
mov
mov
pop
mov
jne
sbb
icebp
lret
ret
mov
dec
negl
lcall
shlb
aas
mov
sub
sbb
rorl
pop
mov
mov
mov
xchg
loopne
inc
or
xlat
stc
jmp
popf
imul
push
imul
add
pop
cmp
clc
ret
and
ret
sub
and
dec
idivl
xadd
lahf
mov
std
inc
jnp
push
je
cmpsb
call
addb
dec
lcall
inc
add
cwtl
fisttps
stos
fs
add
sbb
dec
add
jg
mov
fcoms
xchg
sub
aaa
outsb
shlb
lods
out
fsubp
push
incb
ds
dec
movsl
std
ror
fistpl
jno
adc
sbb
fcmovnb
ja
in
pushf
add
and
ljmp
sti
add
pop
stos
push
inc
popf
jns
xchg
sbb
cmp
mov
test
ret
mov
inc
ret
add
shrl
xchg
loopne
and
in
fabs
sbb
movsl
nop
cmc
mov
cltd
les
lods
sbb
dec
pop
mov
inc
gs
inc
mov
mov
loopne
int3
mov
jbe
add
xchg
fnstenv
inc
js
xor
adc
test
inc
imul
cli
jb
mov
imul
xchg
dec
lret
mov
imul
pop
int
mov
lret
xor
dec
popa
cwtl
mov
sbb
and
test
pop
stos
mulb
ret
fisttpl
add
enter
sti
inc
add
ror
push
and
int
jne
incl
pop
imul
fisubrl
jl
xor
nop
lea
and
sbb
stos
rorb
roll
pop
div
add
lcall
and
sub
popa
lret
mov
push
inc
cs
pusha
sbb
adc
repnz
and
pop
jl
aaa
mov
or
lret
iret
push
pop
insl
ljmp
in
push
and
or
add
std
aas
shrb
cmp
sbb
lret
mov
pushf
xchg
clc
sbb
out
mov
mov
ret
pop
cmp
xor
stc
and
popl
pop
push
fldenv
pop
xor
inc
xor
arpl
lods
aam
aam
cli
and
lea
out
mov
movl
or
lret
and
push
repz
insb
pop
push
roll
leave
cmpsb
pop
ret
sti
int
pusha
adc
inc
cmp
xor
and
push
mov
movsb
cmp
shrb
adc
sbb
jno
pop
in
and
mov
lcall
mov
rcl
stos
shrb
mov
repz
notb
sub
loope
or
test
movsb
dec
loop
xor
je
sub
das
mov
adc
push
iret
jne
outsl
arpl
pop
sbb
js
into
fstps
pop
mov
in
jns
or
mov
sub
iret
into
icebp
inc
jne
push
pop
test
sub
mov
nop
jle
dec
aad
adc
hlt
add
in
aas
fbstp
hlt
pop
mov
adc
decb
mov
mov
inc
sub
add
add
push
cmp
adc
mov
inc
sub
inc
add
mov
in
lds
ret
lcall
or
pop
test
bound
ds
lock
aam
std
lcall
out
int
pusha
sbb
testl
sti
pop
cmpsb
dec
sub
enterw
xor
mov
sbb
daa
popf
in
scas
lock
push
add
inc
imul
ds
sbb
lret
jbe
jnp
enter
pop
push
xor
nop
nop
lods
adc
mov
add
pushf
sti
loope
push
stos
fsub
push
push
aad
and
cmp
lret
jge
fsubrp
and
inc
dec
fnsave
sub
loop
sub
or
push
addb
or
xlat
xchg
adc
lret
movsl
test
mov
daa
mov
cs
pop
xchg
mov
ds
in
push
push
outsb
out
adc
mov
mov
dec
pop
inc
pop
fnstcw
add
cli
cmp
adc
and
std
icebp
scas
movsb
push
and
push
enter
sub
rcrl
inc
or
fs
mov
adc
add
fs
mov
scas
ss
pop
andl
fwait
push
shll
nopl
sbb
testl
pop
inc
in
cmpsl
jl
pop
aas
mov
mov
mov
cmp
xchg
fisttpll
dec
das
movsl
scas
xor
lcall
adc
test
push
jns
andb
sub
out
adc
mov
sbb
scas
hlt
movsl
aam
mov
jmp
adcl
xchg
sub
push
push
icebp
or
in
sbb
in
ss
mov
xchg
xchg
and
pop
sbb
push
jb
xchg
movsl
insb
mov
mov
pop
stos
dec
sub
mov
mov
sarl
and
cmpl
sub
fs
shlb
mov
jo
aas
nop
or
fwait
fwait
jb
xor
jecxz
adc
fimuls
adc
icebp
repnz
and
mull
sarl
stos
js
mov
adc
jge
imul
stos
or
pop
test
sub
shlb
mov
xchg
popf
sub
dec
sti
mov
in
xchg
add
pop
stos
push
sbbl
dec
mov
test
sub
sub
aad
movsb
or
mov
sbb
mov
xor
faddp
es
or
cmp
stos
pop
lahf
or
push
mov
inc
mov
jle
inc
in
test
iret
test
pop
rcl
cwtl
in
movsb
test
sub
imul
dec
es
add
push
jp
lods
out
push
pop
push
mov
lods
stc
ror
sti
mov
in
push
filds
mov
lea
push
fisubrs
lods
mov
mov
gs
adcl
mov
mov
fdivr
andl
outsl
jno
mov
jmp
push
cmpsl
push
mov
outsl
dec
repnz
pop
xor
shll
test
cmp
inc
sub
xor
scas
or
mov
jp
pop
lock
jae
cmp
jle
push
mov
inc
xchg
dec
test
xor
jno
dec
mov
mov
xchg
fcomp
out
jnp
test
imul
aam
mov
push
sbb
loopne
xor
push
or
insl
mov
aaa
js
call
scas
int3
mov
sub
ret
jbe
hlt
jae
ja
xchg
adc
pop
fstl
push
xchg
aaa
icebp
jbe
sub
mov
push
sbb
mov
int3
mov
sub
ja,pn
ret
lds
sahf
fdivp
inc
lock
imul
fwait
sub
sbb
jg
mov
push
inc
xor
imul
outsl
mov
dec
sbb
pop
cwtl
or
sbb
mov
aas
and
mov
inc
dec
movsb
mov
sbb
scas
fwait
repz
adc
pop
cltd
push
pop
mov
cmp
out
enter
jae
lea
xor
push
gs
inc
adc
dec
pop
test
or
rolb
xor
in
adc
addl
movsl
das
jnp
push
std
push
dec
jno
and
jl
mov
xchg
mov
mov
push
test
xor
imul
enter
sub
sbb
les
daa
dec
pop
jmp
jne
fs
fs
pusha
je
sbb
and
sub
or
or
adc
jbe
scas
iret
outsb
arpl
push
daa
repnz
shrl
jbe
enter
fildl
dec
outsl
lcall
daa
push
loope
pop
outsl
push
cmp
test
repnz
push
dec
das
cmp
cltd
xor
xor
or
push
loop
cmp
call
in
xor
dec
dec
frstor
ss
int3
enter
fsubrs
sbb
sbb
cwtl
popl
mov
cld
in
addr16
shl
dec
aam
and
xor
xchg
pusha
out
mov
jmp
shrb
or
mov
and
mov
hlt
push
ljmp
mov
pushf
in
mov
iret
and
loopne
insl
loop
insb
jge
xor
fs
dec
and
das
adc
insb
push
loope
jecxz
pop
mov
dec
jne
push
sub
mov
dec
data16
pop
push
dec
addr16
push
sub
push
sbb
sub
js
adc
and
adc
inc
test
fbld
add
arpl
mov
frstor
test
sbb
mov
inc
rcrb
stc
add
lret
mov
adc
aaa
jb
loopne
jo
pop
pushf
addr16
push
cmp
mov
mov
xor
subb
inc
ss
ljmp
lea
cs
fimull
jl
cmp
loop
pusha
movsl
adc
sub
out
add
in
adc
repz
lcall
jb
add
movsb
enter
addr16
xchg
je
jno
sub
xchg
dec
mov
lret
cmp
jle
loope
add
sbb
pop
ljmp
push
pop
cmpsl
xchg
scas
and
pop
mov
inc
lret
xor
sbb
daa
add
lea
cmpsl
mov
push
jmp
inc
mov
jg
cmpsb
and
fildl
push
dec
jmp
add
xchg
mov
sbb
lods
jnp
jae
xor
mov
ja
arpl
loop
pop
outsl
lret
cmc
jge
popa
leave
push
mov
push
in
and
out
dec
fimull
rclb
scas
adc
mov
lret
out
mov
push
in
adc
push
aam
adc
xchg
out
sub
mov
daa
jnp
pop
mov
aas
in
notl
or
shl
out
ror
fucomip
dec
je
lcall
jl
xorl
popa
push
ljmp
testl
add
out
adc
loope
jns
bound
sbb
jp
mov
aaa
mov
pop
mov
or
nop
lods
sbb
loopne
adc
jecxz
sahf
pop
mov
push
xor
andb
push
mov
or
into
arpl
dec
xor
jmp
sub
mov
sbb
push
fucomip
les
ss
jnp
mov
push
addr16
push
fcoml
dec
dec
push
pop
or
xchg
lods
fcomip
and
and
pop
lea
pop
sbb
mov
test
lahf
push
mov
loopne
shlb
shll
xor
xchg
out
jecxz
mov
out
jle
mov
jmp
shl
lahf
mov
insl
sub
pop
fistl
cmp
cltd
sub
popa
daa
push
aas
pushf
jecxz
mov
nop
cs
repz
cmp
clc
jbe
jnp
pop
or
roll
xchg
or
add
lea
inc
lahf
xor
or
cmp
shl
cmp
and
into
xor
pop
ds
adc
sub
js
xchg
push
sub
mov
jae
inc
sbb
adc
pop
xor
xchg
mov
sbb
out
lea
jle
sub
and
or
arpl
jmp
xchg
xlat
sahf
adc
pop
xchg
pushl
lret
sti
cmp
lret
xchg
adc
popf
add
jb
add
pop
aam
in
call
cltd
stos
int
mov
adc
add
mov
mov
cwtl
jecxz
outsb
jo
jns
incl
pop
xchg
mov
jmp
fmul
xor
mov
fistps
cpuid
sbb
jno
fwait
ja
jbe
mov
test
cmp
cmc
negl
mov
adc
data16
inc
xor
fimull
mov
clc
mov
cli
add
sbb
push
test
mov
dec
or
push
sbbl
int3
xor
jne
and
rcr
lock
aaa
dec
mov
into
cmp
fisttpll
pop
int
clc
lds
into
fcompl
push
scas
loope
jge
mov
pop
mov
in
in
adc
xlat
pusha
das
sub
or
mov
and
jbe
push
inc
jo
imull
lcall
ja
jb
data16
rorl
iret
out
dec
pop
jns
mov
jmp
cld
xchg
rcr
sbbl
or
fucomp
add
jecxz
sbb
lcall
cs
aaa
jmp
movsb
and
ficoml
into
aaa
das
inc
sbb
push
pop
out
in
sub
imul
inc
add
fwait
and
jp
ret
mov
mov
jp
mov
inc
negb
xlat
dec
xchg
and
popa
loop
scas
out
subb
adc
xchg
enter
fstps
nop
mov
mov
xchg
pushf
repz
pop
xchg
sbb
mov
or
rol
jns
incl
call
stc
mov
pop
call
in
ret
and
ret
pop
push
dec
push
aas
mov
pop
pop
adc
xlat
and
cmc
rorb
mov
jo
adc
inc
popf
in
into
jmp
mov
mov
cli
sbb
push
mov
js
fistps
pop
arpl
ficomps
jl
jns
inc
xor
mov
jp
aaa
push
mov
pop
sar
repz
loop
in
daa
addr16
loopne
push
dec
inc
test
push
stc
aaa
rorb
add
sub
loopne
subb
roll
lcall
jnp
xchg
mov
push
shrb
pop
sbb
addr16
push
jae
inc
aad
cmp
or
adc
push
std
add
rcll
in
sub
inc
cmpl
repz
loopne
inc
fmul
fstps
mov
sub
testl
jecxz
fcoml
sub
or
not
pop
iret
iret
fiaddl
ret
and
addb
addb
mov
lea
mov
inc
or
dec
int
adc
leave
aaa
or
aas
inc
or
add
mov
add
sub
js
in
sbb
sub
mov
fisubrl
pop
mov
add
test
push
push
inc
cmp
add
dec
push
jne
sbb
mov
mov
jae
out
subl
loopne
pop
loopne
xor
daa
leave
hlt
jb
add
mov
movsb
push
xor
mov
in
dec
out
push
sbbl
jae
push
nop
aad
inc
add
xorl
fisttpl
lea
lret
clc
int3
xchg
pop
mov
xor
and
jb
js
cs
or
mov
dec
jb
stos
icebp
jmp
or
pop
subl
setbe
rcrb
fldenv
mov
mov
pop
cmc
cli
dec
out
lock
lds
or
and
mov
mov
push
imul
lods
and
jb
and
in
add
ds
dec
mov
add
mov
dec
jle
ret
ja
test
cmp
inc
inc
sbb
or
lcall
notl
xlat
xchg
xor
adc
jb
push
in
ss
or
stc
mov
outsb
stos
xchg
std
hlt
cmpsl
jmp
pop
adc
imul
mov
je
and
or
hlt
pop
popf
adc
push
mov
adcl
cltd
ds
bound
test
sbb
pop
jb
pop
mov
add
leave
fsubs
mov
cli
cmp
cmpsl
and
inc
stc
lods
in
mov
lret
enter
and
mov
jbe
cmp
daa
test
sub
sbb
pusha
loopne
cmp
add
dec
sahf
xor
das
sbb
sbb
fidivl
scas
in
add
add
pop
loope
xor
or
mov
fstpt
fcmovnb
int3
test
jns
push
popf
push
repz
pop
xchg
mov
jno
outsl
cmp
jb
pop
dec
jp
mov
shl
loope
inc
loopne
lock
jno
cmpb
fdivp
int3
adc
scas
in
aaa
leave
pop
sti
xchg
out
arpl
mov
mov
xchg
ficomps
adc
icebp
jnp
vmovsldup
loope
ficoms
xor
mov
inc
add
mov
sub
popf
add
ret
xor
shll
mov
mov
stos
dec
pop
mov
outsb
or
js
sti
pop
lahf
gs
jnp
inc
inc
shlb
sub
or
and
test
push
lcall
ret
stc
out
sti
hlt
adc
pop
fwait
enter
outsb
sbb
pushf
and
pop
jne
sbb
inc
orb
and
mov
in
cld
pop
arpl
cmpsb
cmc
mov
fcoms
mov
xor
lea
paddsb
mov
adc
lret
and
ficoms
inc
leave
ds
repz
sub
cmpsb
cmp
or
loope
movsb
clc
insb
pushf
jbe
lcall
iret
mov
lods
in
pop
dec
sbbb
mov
repz
xor
and
xchg
jae
and
xor
sub
or
pop
pop
roll
push
and
inc
movl
push
sub
or
and
mov
pop
or
in
mov
and
repz
out
fdivrp
inc
jle
enter
test
push
or
add
out
mov
sub
fs
rorb
sbb
jp
inc
and
add
outsb
jnp
imul
lea
fsubrs
in
nop
lock
daa
sbb
lahf
or
xchg
imul
mov
scas
push
div
int
push
sbb
push
lret
jb
ljmp
mov
add
stc
ret
pop
scas
adc
sub
in
push
std
pop
dec
out
shll
test
push
pop
aam
into
stos
ficompl
movsl
add
sbb
mov
mov
or
int3
and
dec
and
int
stc
data16
inc
nop
popl
loopne
adc
mov
dec
jge
sbb
cwtl
dec
jg
stc
xor
nop
push
sbb
adc
in
dec
cmp
out
outsb
outsb
xchg
shlb
pop
dec
dec
add
xor
mov
jae
jge
pushf
adc
inc
add
cmpsb
jns
mov
int3
jne
aam
xchg
pop
mov
out
push
sbb
push
and
dec
xchg
adc
in
cld
aas
stc
xor
js
xchg
sub
adc
cmp
xchg
xchg
cmp
sbb
daa
bnd
add
sub
out
adcb
mov
rcrl
lods
test
or
jns
mov
sub
inc
and
lret
jge
fldt
pop
mov
mov
push
jecxz
mov
mov
mov
outsb
jno
cmp
jle
insl
lods
add
xor
pop
shr
rcrb
sbb
or
jae
jle
loopne
or
pop
imull
sbb
push
xor
push
sbb
fsubrs
test
mov
pop
push
rorl
mulb
sahf
inc
cwtl
jo
adc
xor
ds
testb
scas
loope
cmp
mov
inc
lods
movsl
or
repz
xchg
xchg
cmp
jge
cmp
cli
test
xchg
adc
pop
cld
stos
xor
aad
sahf
xchg
dec
sbb
repz
pop
mov
out
inc
call
and
mov
mov
je
es
out
test
or
in
push
push
or
xor
dec
jmp
add
fldcw
xchg
stos
cltd
ja
and
pop
xchg
imul
and
dec
dec
mov
data16
xchg
cmp
movsb
push
sbb
pop
dec
fisttpl
jg
ret
and
iret
shrl
int
lea
and
sub
pop
dec
or
push
fiadds
lock
xchg
lret
jbe
mov
loopne
ret
loopne
decl
bound
aad
sbb
mov
xchg
mov
mov
lahf
sub
push
mov
dec
shl
push
in
ficoms
jg
add
xor
jnp
sub
jl
outsb
add
push
test
loopne
gs
push
and
xor
mov
int
push
outsl
mov
push
dec
cwtl
or
push
js
nop
mov
fnsave
cmp
ljmp
cltd
sarl
jae
add
pop
hlt
test
fcomps
pop
es
mov
inc
fcoms
cmp
cmp
arpl
and
mov
push
mov
xor
xor
dec
in
mov
adc
lea
addb
inc
movsb
push
pop
sbb
mov
push
cs
movsl
lods
jg
sub
push
mov
cmp
in
sub
enter
push
xchg
push
sub
jmp
popa
mov
testb
test
inc
lods
add
or
addr16
pop
in
call
mov
mov
jb
jmp
jne
or
adc
rorb
outsl
shll
ja
sti
aaa
sub
dec
call
cmp
imul
ds
pop
push
out
icebp
pause
mov
ss
fidivrs
stos
mov
xchg
mov
xchg
hlt
test
pop
push
insl
jo
jnp
iret
or
arpl
sbb
ljmp
fdivl
sti
lret
dec
pop
dec
add
push
inc
xchg
sub
jmp
xchg
in
lods
gs
jmp
xchg
pop
loopne
inc
add
adc
xchg
out
fildl
push
xchg
lds
mov
mov
nop
sbb
pop
dec
les
aaa
inc
inc
lcall
nop
mov
xor
inc
dec
cmp
jg
repnz
mov
mov
add
fs
adc
stc
cmpsb
stc
pop
call
and
xor
xchg
les
add
sub
pop
sub
sub
add
push
lahf
loopne
lret
mov
push
and
mov
movsb
and
scas
or
imul
shrl
sub
lods
xchg
in
lret
popf
mov
dec
lods
loopnew
inc
sbb
ja
add
pop
les
mov
in
mov
out
imul
mov
dec
or
cwtl
insl
mov
test
xor
jp
sbb
fldl
adc
outsl
push
fists
loope
lcall
ret
idivl
xchg
es
add
shl
lahf
scas
in
xchg
mov
imul
lcall
xor
shll
jbe
sub
int
fs
insl
fidivrl
js
sti
fxch
out
mov
mov
adc
dec
movsl
out
xor
sub
std
movsl
pusha
mov
loop
cmc
mov
lahf
jo
push
mov
popf
add
jecxz
scas
pop
cmp
repz
fld
jbe
enter
out
loop
in
and
jno
sar
inc
inc
jp
mov
je
cwtl
mov
xor
pop
push
lock
add
pushf
pop
dec
add
fcoms
mov
xchg
lock
stos
mov
push
insl
stos
fsubr
sbb
pushf
xor
xor
ficoml
xor
jle
mull
or
sub
jl
lods
jl
mov
pop
xor
fs
dec
sbb
cmpsb
sub
xor
sbbl
popf
cmp
jne
scas
shrb
and
inc
push
or
notl
lahf
faddl
sbb
daa
jno
pop
stos
push
jbe
sarl
insb
push
cltd
mov
or
sbb
bound
adc
add
scas
mov
xchg
mov
push
cmp
dec
jns
inc
int
sbbl
jmp
mov
jne
inc
mov
cltd
pop
sub
add
enter
pop
mov
pop
xchg
popa
sub
and
aaa
repnz
jne
lds
inc
cwtl
pop
cmp
cmpl
or
push
pop
mov
loop
in
jo
jne
cld
pop
js
lock
je
xor
shr
push
xor
dec
outsb
mov
push
sbb
push
and
push
sub
fwait
push
mov
or
or
mov
xor
sbb
adc
push
out
push
scas
mov
adc
mov
in
fsubrs
sbb
dec
mov
lret
repz
fstl
or
shrl
sbb
and
adc
mov
cltd
jne
push
test
cmc
mov
outsl
push
mov
push
pop
fistpll
and
out
aam
mov
test
and
or
fwait
lret
lea
cltd
jg
push
and
jmp
rcr
push
inc
lock
jl
insb
icebp
xchg
push
ss
or
jmp
out
loopne
cmp
dec
adcb
xor
cli
movaps
fxch
and
mov
movsb
jne
adc
mov
and
fcoml
mov
aas
xor
sub
enter
jae
pop
push
cmp
mov
fwait
in
mov
or
jb
ret
add
sbb
icebp
stc
in
cmp
cmp
lahf
sar
dec
xlat
mov
aad
sub
popa
popf
jno
in
sub
mulb
sub
pop
and
and
xchg
ss
jge
mov
push
xchg
jecxz
mov
int3
aas
outsb
inc
sub
rcll
pop
inc
mov
int
sub
imul
popf
sub
dec
ret
insb
insl
call
fwait
adc
mov
fbld
repz
adc
and
lea
or
icebp
cli
jge
xchg
aad
add
dec
fninit
shrl
repnz
shlb
xchg
fld
push
push
insb
push
aad
or
mov
mov
inc
je
pop
pop
dec
cmp
idivl
aam
gs
cmp
aad
add
push
jo
cwtl
and
fs
insl
sbbb
addl
or
out
sub
mov
test
mov
test
xchg
mov
adc
and
xchg
movsl
add
in
dec
hlt
test
cmp
cld
shlb
pop
sahf
clc
xchg
popa
dec
mov
or
ljmp
ret
jno
lds
pop
in
jno
xlat
push
icebp
mov
fnsave
sub
aam
xor
mov
jns
inc
mov
cld
mov
test
fiadds
pop
gs
lcall
add
cmp
aad
imul
adc
stos
orl
dec
gs
xor
xchg
pop
push
and
lcall
mov
dec
outsb
das
into
sti
cltd
add
cld
pop
push
cld
inc
and
push
enter
out
cltd
mov
or
add
repz
fisubrs
mov
push
imul
std
rorb
les
sbbl
mov
decb
cmp
lods
pop
push
daa
inc
repnz
stc
sbb
and
addr16
mov
mov
das
out
ss
dec
cmp
aam
stc
pop
jne
jns
rcrl
push
movsbl
jge
mov
dec
sahf
jne
mov
xchg
and
js
loopne
jno
or
stos
inc
cmp
mov
insb
cwtl
pop
stos
push
lods
jns
push
shlb
mov
or
push
adc
xchg
pop
aad
lret
dec
mov
sbb
jmp
loop
ficoms
sahf
stc
pop
and
jnp
xchg
daa
sar
dec
test
orb
fsubp
loopne
pop
or
mov
pop
cwtl
test
fldt
cmp
in
les
sti
leave
jge
vpcmpeqw
jg
push
in
push
lock
add
ficoms
pop
mov
movsb
dec
inc
xor
fisubs
aas
xchg
rorb
ja
xor
movsb
popf
clc
mov
mov
cwtl
pop
lret
or
push
push
loope
and
push
mov
cltd
lea
clc
in
push
jle
mov
dec
pop
int
int
dec
idiv
pop
pop
das
mov
adc
add
jo
fwait
insb
fiadds
in
push
sbb
imul
and
pop
jmp
xchg
sbb
jl
je
stos
adc
stos
fs
xor
cli
mov
in
lret
addr16
mov
fwait
pop
pop
mov
in
push
add
ret
aaa
and
enter
test
and
or
mov
add
aaa
push
or
cmp
imul
ljmp
cmpb
dec
sbb
xchg
push
fldt
out
pop
js
push
pop
into
pop
fistl
movsb
lret
stos
in
cmp
jno
sub
sbb
cmpsb
outsb
jno
jl
std
inc
js
xchg
sub
push
jle
cmp
in
dec
arpl
xor
push
jmp
push
pop
int3
mov
les
push
icebp
inc
pop
sbb
dec
daa
jecxz
xchg
inc
or
repnz
mov
jg
loopne
sti
jecxz
call
jno
fiaddl
cmp
push
and
push
mov
addr16
mov
mov
xor
lret
mov
movsl
ret
sbb
insb
dec
xor
push
into
lcall
mov
fadd
int3
ljmp
movsb
adc
xorl
pop
push
neg
or
les
das
mov
sub
mov
adc
sbb
cmp
pop
shl
es
sti
int3
xchg
int3
push
mov
jg
scas
mov
je
mov
outsl
xor
test
add
pop
cld
das
shrl
jge
mov
sub
mov
pop
insb
andb
add
repnz
int3
and
mov
push
sub
sub
jg
ficoml
pop
incl
xor
jo
sbb
ror
lahf
cmp
mov
jle
xor
negl
test
insl
xchg
cmpb
jl
push
cmp
xchg
xchg
add
cmp
fcoml
inc
jle
jecxz
adc
or
add
jge
xorl
mov
out
test
paddq
outsl
mov
stc
jge
ret
sbb
mov
lcall
decl
lahf
and
scas
sub
cmp
pop
sub
push
dec
ret
or
mov
lods
xchg
addb
bound
loop
movsl
lahf
adc
mov
sub
adc
xlat
push
cmp
pop
loop
pop
call
push
icebp
dec
outsl
flds
fisubs
add
push
sub
cmp
pop
ljmp
mov
out
js
and
dec
mov
mov
or
rorb
cmpsl
sti
inc
mov
dec
in
mov
arpl
aaa
push
test
mov
jle
and
push
insl
sub
popa
pop
inc
cmp
outsl
mov
push
dec
jbe
mov
or
or
or
test
mov
hlt
lret
push
mov
dec
inc
hlt
adc
test
sbb
adc
andl
inc
stos
cmc
cmp
pop
shll
out
call
inc
xor
xchg
cli
aaa
aas
xor
or
adc
xor
out
and
mov
icebp
dec
dec
lods
movsl
fwait
jo
xchg
adc
sub
sbb
ja
clc
jnp
lods
sbb
dec
cmc
mov
mov
hlt
out
xor
ds
push
push
mov
andb
xor
stos
mov
cmc
xorb
mov
mov
or
push
jge
movsl
in
push
or
cmp
test
jns
rcl
lea
jo
pop
jbe
in
fcoms
adc
mov
pop
rep
frstor
aad
les
loope
data16
add
inc
aad
in
loopne
add
sbb
mov
mov
cli
push
pop
jle
mov
push
pop
inc
shrl
aad
in
pop
sti
idivl
mov
outsb
push
lea
mov
mov
es
add
cli
dec
mov
xor
jg
negb
data16
push
test
in
int
popa
into
sbb
jl
jnp
dec
sti
jbe
aas
jp
xor
pusha
mov
add
outsl
test
xlat
push
mov
fcomi
push
sti
jle
push
jmp
cmc
dec
fwait
and
popf
repz
lods
decl
out
mov
clc
pop
in
cmp
add
push
aaa
mov
and
idivl
in
mov
test
mov
inc
test
xchg
mov
jge
xlat
aas
aaa
enter
xor
sub
out
cmpsl
xlat
or
mov
xchg
mov
imul
cmpsb
jae
pop
jge
shlb
fstpl
xor
push
ret
push
lret
adc
mov
lods
pop
push
or
loop
lahf
inc
outsb
mov
insl
pop
adc
stos
push
ljmp
inc
adc
addr16
jnp
mov
inc
push
scas
mov
pop
cmp
pop
mov
xchg
insb
cmp
jne
push
js
add
sbb
pop
lock
cmpsb
xor
xor
or
and
or
cs
fwait
sub
inc
mov
mov
pop
adc
add
ficoml
pop
inc
mov
cmp
out
xor
incl
pop
mov
cmp
jl
push
addr16
jmp
insl
mov
rcrl
push
and
fstl
jmp
cmp
inc
test
mov
cli
lock
push
insb
xor
insb
and
in
rorb
test
push
sti
push
jno
xchg
sub
rorl
je
andl
lds
push
sub
inc
or
push
dec
nop
call
inc
incl
daa
cmpb
ja
mov
add
lock
xor
dec
fnstsw
test
and
ror
fnstcw
daa
dec
xchg
xchg
addr16
stos
outsb
fistpll
int3
and
mov
inc
xchg
iret
xlat
out
jmp
xor
rcll
adc
lea
in
sub
repnz
lods
xchg
sbb
inc
mov
adc
jo
jle
pushf
out
jle
fnstcw
je
pop
push
fldenv
dec
sub
inc
dec
xchg
cwtl
and
jmp
in
das
pop
enter
setns
mov
and
push
imul
iret
mov
out
sbb
fstps
jbe
cwtl
pop
pusha
mov
dec
sub
adc
sub
std
xchg
xchg
inc
pop
call
lods
imul
fwait
push
adc
pop
mov
and
pop
ret
lods
push
sub
gs
sbbl
mov
popa
loope
mov
pushf
fsubrs
mov
subl
lods
xchg
mov
pop
sub
or
lcall
loop
sbb
test
ds
cmp
ds
add
js
or
cltd
rcll
add
or
and
adc
pop
sub
mov
xor
and
sbb
add
and
pop
sahf
push
push
add
pop
xchg
push
dec
xchg
fsts
add
ret
les
loopne
test
jns
hlt
cmpsb
iret
or
push
mov
cmp
lcall
data16
int
addr16
pop
mov
sbb
cmp
int3
pop
mov
out
pop
xchg
and
cld
lock
jle
shll
imul
ljmp
add
pop
sbb
mov
adc
int
subl
mov
sbb
fstpl
ret
aas
xchg
pop
fcompl
pop
mov
test
repnz
mov
icebp
add
int
in
adc
stos
mov
insb
shrl
movsb
adc
adc
xlat
push
mov
daa
dec
pop
imul
push
pop
lods
xor
lahf
mov
push
test
test
frstor
cmc
jg
loop
xor
xor
mov
loopne
mov
nop
hlt
scas
repnz
dec
jne
loopne
ret
sbb
fucomp
jno
push
test
mov
xor
mov
pop
pop
movsl
call
ss
inc
pop
jl
popa
adc
adc
adc
or
mov
cmp
sysenter
jbe
shll
and
mov
push
aad
les
jnp
mov
mov
xchg
pop
cmp
xor
dec
inc
inc
mov
arpl
fmull
lahf
test
imul
and
and
adc
jno
inc
adc
stc
xchg
fistpl
push
and
outsl
cmp
ss
sub
insb
jne
ret
xchg
push
and
out
shr
out
into
outsl
adc
jo
inc
in
jmp
add
xchg
sub
mov
loope
or
ficoml
add
pushf
lds
xchg
int
lea
add
sti
or
inc
fimull
fwait
in
pop
pop
cmc
shl
jns
mov
inc
push
mov
push
pop
sub
mov
add
pop
jge
add
xor
or
cmp
push
jb
push
or
iret
shll
movsl
inc
add
sub
dec
mov
loope
or
in
out
sbb
inc
push
jl
push
xchg
popa
orl
mov
mov
add
adcl
pop
arpl
pop
jb
push
aaa
cmc
outsl
cmp
add
or
inc
push
mov
loop
xor
mov
shlb
into
idivb
mov
aad
jmp
lcall
xchg
cmpsb
jbe
clc
sbb
mov
xor
lret
lea
insl
in
pop
sbb
sahf
inc
lods
icebp
roll
mov
mov
inc
push
mov
inc
dec
je
movsb
lods
cmp
fs
cmp
mov
mov
mov
push
cmp
mov
mov
push
pushf
dec
clc
jp
test
testb
and
subb
shrl
lret
dec
add
adc
add
lret
subb
dec
mov
jns
sbb
mov
lods
ss
test
or
mov
arpl
push
push
inc
pop
or
pop
inc
cltd
ljmp
imul
sbb
ljmp
aaa
cmc
jnp
cmp
cmp
mov
in
and
ja
mulb
movsl
lock
dec
js
out
nop
les
mov
cs
iret
sarb
out
negl
push
jmp
or
ret
stc
pop
mov
int3
cmp
push
dec
shrb
rsm
sub
es
pop
scas
orl
int
js
mov
aad
add
je
mov
pop
push
xchg
fwait
xchg
cli
fildll
subl
mov
in
aaa
cmc
icebp
out
pop
faddl
xor
clc
jns
push
mov
pop
add
repnz
repnz
dec
mov
sbb
shr
pusha
xchg
aad
bound
repz
adc
jp
or
mov
sbb
push
inc
push
xchg
xlat
sti
addl
cs
pushf
mov
test
loop
shll
inc
imull
xor
fwait
pop
scas
mov
outsb
out
or
ret
enter
add
xor
shll
or
pop
sub
sbb
mov
aaa
dec
mov
and
mov
rcl
cmpsl
mov
ret
cltd
mov
or
fldenv
pop
call
pop
ret
adc
cmc
shl
lret
fisubrl
femms
inc
loopne
lret
scas
cmp
or
inc
adc
jbe
xchg
mov
pusha
sbb
jns
test
fbld
and
jnp
pop
xchg
fisubrs
dec
clc
in
lahf
ret
loop
xchg
rcrb
subb
fstl
jb
push
jl
call
pusha
mov
pop
ret
push
fcompl
mov
jle
push
stc
aaa
movsl
popf
sub
lea
or
push
pop
in
jbe
call
mov
scas
in
jbe
cwtl
dec
cli
mov
xchg
cmp
cld
xchg
and
iret
ret
fucomi
jl
ret
iret
mov
and
flds
pop
push
lds
sbb
dec
popl
repz
dec
repnz
ss
jge
xchg
fstpt
cli
pop
adcl
cmpsb
daa
inc
cmp
or
outsl
and
jb
xor
sub
xor
ror
jle
ss
jg
dec
test
pop
push
and
clc
imul
lret
je
mov
repz
das
ret
pop
lcall
cmp
dec
aaa
call
or
gs
rorl
ror
mov
dec
sub
sub
pop
stos
ljmp
mov
cmpsl
stc
mov
cmp
dec
addb
cs
sub
fadd
incl
or
int3
jl
sahf
cltd
cmpsb
fmul
pushf
fistps
jo
hlt
inc
test
jbe
and
sbb
insb
popf
les
mov
inc
xchg
lcall
inc
icebp
test
pop
or
mov
mov
mov
enter
xlat
stos
cmpb
divl
out
adc
inc
cmp
dec
jl
dec
mov
rcll
stos
js
das
mov
test
cmp
xor
in
sbb
xchg
sbb
or
into
pop
bound
push
and
and
or
enter
call
push
stos
xlat
pop
push
orl
inc
ja
xor
cmc
loop
or
arpl
mov
adc
divl
shrl
mov
sbb
pop
xor
push
fwait
sbb
mov
cli
add
call
dec
das
mov
outsl
divb
or
ljmp
int
xlat
mov
mov
push
add
call
pop
or
ss
mov
pop
data16
xor
push
scas
adc
inc
push
push
std
fidivs
add
int3
je
std
or
testl
xchg
sub
scas
mov
cmp
jp
addr16
out
pop
sub
pop
push
subb
pop
pushf
jmp
push
dec
ljmp
scas
loopne
push
das
sub
sbb
test
dec
xchg
popa
xchg
popf
dec
fwait
jne
rolb
orl
mov
push
mov
or
dec
mov
stos
addr16
push
mov
lcall
inc
inc
sub
ljmp
or
cmp
cmp
jp
rolb
lock
add
inc
out
mov
inc
decl
mov
cmc
mov
mov
push
ror
mov
pop
or
inc
leave
pop
jle
and
out
scas
aas
jge,pt
stos
xor
das
cmpsb
sahf
sbb
fdivrs
adcl
xchg
outsb
and
jb
test
fbld
xor
arpl
adc
pop
mov
mov
ret
jle
shll
pushf
ja
inc
cmp
jg
inc
fdivrs
and
or
sub
pop
ffreep
lods
testl
lods
pop
xorl
into
mov
into
cmp
xchg
pop
fwait
negl
mov
in
sbb
push
push
lret
mov
xchg
mov
je
dec
inc
inc
xorb
pop
fnsave
aad
or
subb
jl
jo
loopne
rcll
adc
mov
aaa
push
jl
jmp
jne
lret
cs
jl
push
pop
sub
nop
lret
jmp
mov
cmp
mov
adc
shll
mov
xchg
dec
leave
fistpll
inc
fldt
xor
mov
test
es
jne
and
adc
pop
or
jle
pop
adc
fildl
arpl
pop
or
jno
ljmp
js
sbbl
shrb
fwait
scas
add
pop
iret
mov
shrl
cmp
add
pusha
sarl
sub
cmp
sbb
and
push
int3
xchg
mov
cmp
sub
and
neg
imul
je
add
xchg
in
jb
adc
sarl
lahf
popf
rolb
repz
out
loopne
repnz
push
mov
xlat
mov
mov
subb
clc
repnz
pop
pop
mov
rclb
pop
cmpsb
xchg
jns
sbb
ret
sbb
pop
dec
fnstenv
adc
js
fdivl
jg
std
std
cmp
push
repnz
repz
sbb
jne
das
jns
mov
xchg
mov
into
ss
push
inc
mov
idiv
call
loope
fcmovnb
out
push
adc
cmp
lock
mov
xchg
cmp
jg
push
hlt
jecxz
mov
xor
pop
icebp
mov
lret
inc
popf
push
es
dec
je
out
fs
jnp
mov
adc
pop
cmc
pop
pop
clc
sbb
xchg
int3
jmp
std
pop
xchg
clc
pop
jbe
jl
push
andl
lods
mov
push
xor
dec
mov
js
cs
mov
add
adc
inc
push
adc
clc
xchg
jb
push
mov
pop
sbb
jne
or
jp
std
mov
push
test
xor
es
stos
pop
popf
push
mov
shll
orb
mov
rcl
pop
push
xchg
out
das
sub
cwtl
mov
idiv
mov
fimull
scas
movsb
pop
push
mov
insl
dec
mov
aad
stos
xchg
mov
das
rcll
incb
in
adc
jo
mov
or
fsts
push
xchg
xchg
sub
movsb
mov
xchg
jnp
inc
push
mov
notb
and
mov
inc
pop
xor
cwtl
orl
rclb
push
mov
jp
test
imul
push
or
cmp
cld
repz
notl
adc
mov
scas
jp
push
pop
and
pop
testb
and
cmpsl
pop
inc
ret
push
pop
fs
push
mov
xchg
and
sbb
test
adc
dec
movsl
jge
jns
inc
adc
jns
leave
cmpsb
pop
push
sub
ja
cmp
cld
pushf
mov
sbbl
stos
dec
lea
mov
psrlw
gs
shlb
call
stos
sahf
jns
das
dec
pop
cmp
cmpsl
ss
and
cmp
dec
dec
sti
int3
inc
mov
repz
mov
inc
icebp
or
or
push
cltd
jns
popf
sub
mov
mov
addr16
sub
mov
test
ja
rorb
outsl
jae
add
adc
loope
adc
dec
ds
push
pop
and
flds
leave
decl
mulb
xor
mov
xchg
mov
in
cmp
icebp
inc
mov
or
sbbb
sub
mov
cwtl
daa
lret
jmp
jp
fdiv
pusha
loopne
cmp
pop
popa
xchg
jp
rcll
xchg
lss
test
jbe
jnp
fdivrp
popf
mov
sahf
shr
lods
push
lret
and
fisubrl
jp
jno
in
lret
xchg
mov
mov
repnz
adc
jne
orb
jmp
leave
mov
popf
push
lds
jne
loopne
mov
push
into
adc
jb
adcl
jle
outsl
pop
mov
lods
mov
adc
shrl
stos
xchg
clc
test
add
outsb
mov
xchg
fidivrs
sub
fwait
insl
sbb
mov
sbb
jb
in
and
filds
inc
scas
pop
stos
mov
jp
mov
pushf
pop
mov
sub
mov
lock
leave
ss
add
arpl
or
xchg
mov
pop
add
sub
outsb
cmp
adc
cmp
cmp
cmpsb
cmp
pop
out
mov
inc
mov
add
movsw
cmpsl
out
pop
stc
jae
fldlg2
decl
cwtl
rolb
test
rcrl
js
cmp
push
and
fwait
dec
not
and
pop
sbb
sbb
ljmp
xchg
fcomps
inc
fdivrp
pop
movsb
outsb
nop
or
imul
iret
pusha
inc
in
mov
mov
push
iret
pop
mov
js
cs
sarl
jae
in
cmc
push
pop
cli
or
jp
push
dec
push
insb
ljmp
mov
vcvttss2si
fnstcw
dec
sahf
sarl
and
sti
jp
jg
stos
mov
fs
cmp
out
adc
pop
and
sti
cli
test
pushf
call
mov
jb
fsubrp
imul
jbe
call
adc
jecxz
cmpsl
cs
stos
lea
movsb
sbb
bound
test
sub
aad
jle
mov
and
hlt
mov
bound
fnstcw
push
pop
fldt
pushf
cmc
jmp
int3
ja
stc
jo
xchg
xor
and
and
xchg
adc
das
and
fmuls
and
aad
arpl
gs
jmp
add
frstor
pop
push
jns
and
mov
xchg
and
inc
out
loop
imul
pop
ds
out
xchg
sbb
lea
adc
into
lret
out
fcomip
sbb
fidivrl
mov
adc
out
pop
insb
jl
cmp
push
sti
xchg
stos
icebp
shlb
int
call
into
fstps
mov
stos
add
lock
and
out
loop
add
cmp
aam
and
lret
dec
inc
addl
jno
test
mov
xchg
pop
jge
fwait
add
mov
jg
sbb
je
pop
and
icebp
lods
arpl
sti
xor
dec
loop
fists
cwtl
rorb
jb
pop
jle
mov
sbb
and
nop
lret
inc
cld
xor
fisttpl
push
mov
out
push
cltd
inc
cmpsl
aam
ret
jecxz
loopne
jge
repz
push
mov
push
out
shrb
popf
and
cli
xor
fisubl
jae
sub
cmp
in
dec
dec
xor
sbb
sti
ret
lds
aaa
pop
adc
stos
sub
lcall
jnp
std
aam
mov
adc
mov
aad
sub
imul
nop
in
out
adc
sub
test
sbb
xor
push
cmp
pop
add
mov
pop
jns
pop
repz
shl
lods
mov
int3
cmc
mov
jbe
push
lret
mov
clc
mov
jle
scas
pop
push
add
cmp
cld
pushl
mov
mov
jge
fnstenv
pop
imul
mov
lahf
int3
lods
adc
push
mov
push
fiaddl
sub
cli
rcl
nop
cld
xchg
mov
fistpl
dec
cmp
and
adcb
and
jmp
mov
mov
or
push
mov
imulb
cmp
fcomps
jle
loopne
cmp
mov
movl
adc
dec
pop
push
xor
call
jg
push
sti
loopne
aas
popa
pop
es
ljmp
mov
push
aaa
cmp
jno
aaa
push
ss
aaa
fdivrl
sub
jae
sti
sbb
aam
cmp
movsb
setge
xor
and
mov
cmp
sbb
mov
mov
inc
out
movsb
in
cwtl
xchg
hlt
repnz
pop
fnsave
addr16
cmp
scas
add
dec
dec
pop
mov
jno
jb
jmp
fcmovnbe
fisttpl
jle
out
jmp
shl
insl
pop
sub
fwait
dec
cmp
sub
fisubl
inc
or
repnz
ror
in
mov
fs
inc
lret
push
dec
ret
out
test
jo
push
addr16
idivb
push
pop
aas
jnp
dec
mov
pop
fnstcw
fiaddl
pop
sub
dec
cmp
xor
test
in
and
sti
movntps
xlat
imul
xor
lods
mov
jecxz
xor
in
mov
xorl
sbb
xorb
add
es
testb
fnstenv
jae
repnz
or
dec
jg
jns
xchg
lret
ljmp
xor
lahf
xchg
test
or
ss
lahf
jbe
insl
mov
cmpsl
das
or
jp
xchg
mov
out
inc
divb
mov
movsb
push
ficomps
adc
std
ret
push
and
mov
mov
adc
test
jns
jae
aaa
rorb
sbb
xchg
mov
push
es
push
arpl
cld
mov
pop
jmp
push
daa
mov
ret
inc
mov
loop
cmp
test
pusha
outsb
push
cltd
cmp
pusha
add
gs
dec
sbb
fimull
or
jo
ljmp
cli
cwtl
std
sahf
pop
test
dec
repnz
aaa
add
and
xchg
sbb
sub
je
dec
dec
test
stos
fidivl
gs
push
repnz
bound
lds
jl
scas
or
movsb
mov
mov
test
or
shlb
cltd
inc
cmp
jo
ljmp
and
test
mov
pop
clc
lret
mov
add
pop
cmpsb
sbb
shl
aad
fistl
cmp
mov
inc
cmp
mov
or
mov
int
ret
insl
cmp
or
pop
cmpl
inc
xchg
pop
xchg
mov
push
and
adc
dec
add
or
xchg
jge
mov
jmp
push
out
lea
adc
das
sub
sub
lods
inc
mov
xchg
in
popa
ja
mov
movsb
xchg
xor
jno
push
push
imul
cmp
cmpsb
pop
xor
in
sub
inc
or
jae
jb
movsb
stc
sbb
pop
rcl
sub
scas
pop
xor
lods
cltd
lcall
mov
xor
and
in
js
mov
es
push
or
filds
rorb
mov
repz
loopne
sub
sub
dec
sbbb
push
jns
push
test
iret
mov
add
daa
mov
push
add
popa
dec
in
js
je
nop
or
gs
test
jl
out
push
sbb
pop
adc
shlb
pushf
jb
mov
and
push
popf
mov
nop
pushf
outsl
adc
pop
hlt
push
mov
lods
iret
sbb
adc
js
adc
mov
xor
mov
es
mov
nop
xchg
cmpb
aas
pop
cmpsl
push
cmp
adcl
mov
dec
dec
ret
adc
fstpt
push
jno
push
or
mov
adc
xchg
loopne
xchg
insb
mov
mov
adc
aas
ss
add
frstor
or
test
push
adcl
fcompl
xchg
call
ljmp
adc
test
pop
push
movb
fistl
adcl
arpl
inc
add
mov
ror
mov
imul
push
lods
stos
call
sub
add
addr16
cmp
lods
mov
xlat
sub
mov
pop
call
ja
and
incl
or
xchg
inc
bound
add
lods
iret
out
andl
push
inc
in
push
xor
lahf
mov
cltd
push
lret
ss
stos
insb
xchg
adc
pop
lds
xchg
mov
sbb
mov
dec
repz
jmp
imul
int3
outsb
aaa
fbld
sti
or
or
inc
orl
je
sbb
in
cmpsb
pop
push
dec
mov
xchg
cmpsb
fbld
lret
and
out
xchg
pusha
test
fsubs
movb
jne
push
clc
or
sbb
andl
lods
xchg
pop
mov
xchg
out
xor
in
les
scas
mov
mov
ret
fcompl
cld
fsubs
cmp
dec
fsts
mov
outsl
cmpsb
idiv
idivl
fbstp
mov
out
out
pusha
jno
mov
mov
sbb
sub
or
xchg
clc
popf
bound
cs
xor
fiadds
scas
iret
mov
mov
shl
aam
sahf
lret
mov
or
cmp
sti
shlb
mov
int3
sahf
shr
mov
mov
jmp
inc
cmp
lea
inc
adc
inc
popa
mov
xor
pop
pop
mov
jb
xorb
loopne
mov
mov
mov
and
dec
addr16
dec
inc
pop
lods
cli
inc
enter
sub
pop
push
push
cmpsl
dec
xor
imul
sbb
ljmp
jae
pop
fdivrl
movsb
jmp
jp
roll
push
sbb
ret
testb
leave
lgs
mov
nop
sbb
div
outsl
mov
fucom
jns
jmp
mov
cld
je
test
push
idivl
mov
mov
test
sbb
pushf
sti
cmc
mov
lret
clc
ljmp
sbb
adc
stc
or
mov
ror
or
xlat
rcll
stc
ret
mov
cmpb
mov
mov
mov
in
sahf
cmpsb
mov
pop
and
cld
inc
gs
leave
or
ficoms
jno
out
sub
or
fistps
mov
inc
cmp
clc
sarl
jne
fsts
inc
xor
pop
adc
bound
cmp
inc
dec
lret
and
push
mov
sub
sub
sub
outsb
in
add
and
mov
arpl
jae
aad
and
inc
jno
pusha
sti
pop
imul
addr16
orb
ljmp
pop
lea
js
data16
mov
cltd
push
int3
add
push
in
inc
inc
pop
dec
xor
mov
inc
mov
inc
test
negl
mov
pop
and
mov
jae
movsb
xor
fwait
add
lods
rorb
pop
pop
mov
jb
ficomps
mov
movsl
mov
mov
stos
cltd
imul
popa
mov
mov
ror
jne
ffree
fldl
add
jae
mov
rcrb
out
cmp
sahf
pushf
fucomi
xlat
add
xchg
and
add
add
xor
fiaddl
negl
icebp
xchg
cmc
in
lods
and
mov
jb
xchg
std
pop
out
push
in
fs
cwtl
dec
fcomip
lock
and
incb
ss
push
xor
jge
hlt
pop
dec
dec
add
rclb
cmpsb
ret
dec
push
lods
les
push
sbb
test
pop
imul
addr16
inc
or
sub
popf
lcall
push
popa
in
call
pop
icebp
xchg
jns
push
pop
jmp
mov
sbb
and
loope
rcrb
jmp
mov
mov
jo
or
or
pop
jnp
ljmp
jge
sub
push
scas
in
mov
jmp
jmp
pop
cmp
add
adc
or
rolb
xlat
xor
addr16
xchg
les
in
jmp
or
dec
js
cmp
or
or
bound
cmp
dec
out
xchg
sbb
pop
in
sub
not
mov
mov
adc
daa
pop
je
mov
int3
dec
pushl
lds
inc
mov
xchg
pop
jmp
sub
mov
dec
rolb
les
nop
mov
aad
jnp
pop
fistpl
mov
or
push
jl
in
sub
xchg
add
inc
ss
mov
push
jns
and
fcoml
fnstcw
aaa
and
sbb
shrl
movsb
shll
dec
popf
mov
subb
insb
or
sub
xchg
aaa
adc
pop
and
jno
loop
ljmp
xor
mov
test
cmp
xor
xor
nop
pop
jnp
lods
cmp
rcll
or
push
add
xor
pop
mov
sbb
cmpsl
cmp
adc
push
popl
dec
adc
in
sbb
sti
xor
jns
xor
scas
mov
out
jb
adc
test
mov
inc
lret
push
push
test
stos
mov
pop
xchg
lods
push
xchg
inc
mov
xchg
cmp
out
cli
xlat
inc
mov
out
loopne
orl
loope
pop
cli
lock
bound
imul
sub
into
sbb
das
insb
cmp
loopne
mov
std
cmc
rcrb
test
scas
scas
in
out
sbb
jg
je
push
inc
xlat
adc
jno
mov
cmc
imul
inc
adc
cmp
dec
in
lods
rorb
xchg
or
mov
or
adc
and
fistpl
mov
cmp
jne
fwait
es
fidivrs
and
and
dec
xchg
dec
loop
mov
dec
xorl
fs
sbb
xor
inc
popf
movsl
sub
mov
jae
leave
ret
mov
mov
push
inc
pop
ret
and
xchg
inc
adc
jo
in
pxor
jbe
and
outsl
addr16
or
jl
sub
or
mov
adc
push
mov
adc
pop
stos
push
push
ror
les
lcall
add
add
pop
add
test
ret
sbb
or
movsb
jo
stc
adc
ja
dec
sub
iret
int3
mov
and
in
pop
or
add
xor
xchg
aas
notl
push
dec
mov
stc
xchg
fcoms
jae
cli
dec
das
mov
dec
sarb
inc
xchg
stos
fwait
mov
outsl
sbb
pop
fildll
push
in
mov
lcall
push
push
outsl
test
pushf
into
bound
mov
and
fs
aam
test
inc
insl
mov
push
scas
loop
cltd
mov
jbe
pop
nop
imul
pop
test
pop
mov
ljmp
cld
cmp
lock
popa
pop
pop
mov
cmc
push
and
or
push
pop
push
rclb
test
cmpsb
jo
pop
mov
jbe
add
lds
mov
sbb
in
sub
ds
dec
pop
xchg
mov
xchg
cwtl
push
test
or
test
inc
cli
leave
mov
cmp
dec
shlb
sub
aaa
sub
mov
mov
lcall
js
mov
push
loop
test
cmp
addr16
mov
mull
and
call
xor
sbb
mov
test
cld
jmp
mov
fmull
jb
jecxz
ss
lock
or
mov
aam
and
roll
jge
push
rcl
add
outsb
mov
nop
std
scas
mov
es
jge
or
adc
adc
fildl
sarl
int3
xor
xchg
push
daa
mov
pop
push
mov
aad
loope
es
nop
rol
mov
adc
js
insl
mov
fnsave
xchg
and
cmp
xorb
popf
add
movb
and
stc
iret
jnp
sti
imul
jle
inc
xchg
mov
gs
shlb
hlt
or
cmp
scas
popf
stos
hlt
cmp
push
pop
push
fidivl
sbb
inc
add
arpl
dec
das
sub
inc
and
sub
mov
dec
icebp
fmul
repnz
mov
fcoms
mov
and
xchg
fs
xchg
cmp
lahf
add
mov
pop
loopne
jecxz
or
fcom
sub
data16
xchg
scas
sub
lret
sbb
fcoml
stc
fcoms
pop
rcrl
mov
rol
mov
scas
mov
dec
mov
jg
popf
je
pop
roll
xor
pop
adc
jg,pn
or
mov
mov
inc
insb
adc
fsubl
nop
jno
xchg
or
xchg
xor
jp
sarb
jp
test
or
inc
es
cmp
sti
mov
mov
jns
mov
lret
loope
lods
ret
mov
in
xchg
stos
or
adc
and
or
in
cmpsb
fs
mov
dec
sti
jb
das
ret
outsl
mov
int3
ljmp
pop
push
inc
or
xor
mov
and
sub
sbb
jge
or
inc
push
inc
xor
fxch
add
mov
scas
jle,pt
add
sbb
xchg
repz
inc
cvtps2pd
fucomi
inc
sub
ja
insb
sub
sbb
dec
jae
dec
mov
lret
stos
xorb
rcl
xchg
pop
stc
aam
leave
rolb
push
adc
pop
out
xchg
mov
fdivs
jnp
mov
dec
lret
xor
xchg
sub
mov
adc
ret
fcomps
mov
fldcw
jmp
jo
mov
cmp
xchg
std
jnp
rorb
or
rorl
aas
adc
push
pusha
inc
jae
std
dec
push
scas
and
add
scas
mov
sub
jmp
and
leave
mov
xchg
arpl
fcomps
jb
push
pushf
lret
test
call
inc
dec
inc
add
test
or
cmc
hlt
js
mov
mov
in
lret
mov
and
fsubl
mov
orb
mov
dec
ds
iret
pop
int3
mov
mov
inc
pop
push
mov
mov
imul
adc
xor
mov
dec
mov
rolw
inc
loope
orl
pop
cmp
adc
sub
mov
loop
push
fsubr
sti
or
fistpl
fnsave
xlat
out
in
push
mov
lret
inc
popa
ud1
pushf
push
enter
cld
sbb
add
lret
add
adc
andb
cmp
and
xor
inc
xchg
sbb
adc
insb
vaddps
aas
or
mov
in
ss
pop
adc
ja
out
imull
add
inc
xchg
sbb
dec
js
loope
add
pop
mov
mov
in
mov
movsl
push
xchg
daa
sub
shrb
hlt
cmc
andl
and
leave
cmp
rcll
pop
sbb
mov
adc
imul
adc
lds
mov
movb
fistl
dec
ficoms
jg
icebp
ret
cwtl
sbb
test
xor
shlb
fstpl
shl
enter
lds
rcrl
fcoms
js
aas
test
movsb
icebp
out
sub
js
jg
pop
and
lahf
sbb
dec
cmp
or
xor
and
pop
inc
add
fsubs
shll
pop
and
sub
sti
daa
sbbb
stc
mov
jnp
pop
insb
push
push
in
iret
sub
test
cwtl
mov
or
loop
addr16
sub
lods
sti
xchg
cli
mov
add
or
mov
les
push
inc
in
cwtl
adcb
cmpsb
cmpsl
xchg
out
dec
in
andb
das
xor
icebp
fwait
and
adc
jnp
push
and
insl
mov
mov
sbb
pop
fimuls
jecxz
push
loopne
push
popf
xlat
je
or
ds
loopne
enter
adc
lea
js
cmp
xchg
xor
lock
pop
xchg
mov
sbb
xchg
popf
dec
dec
cs
cmpsb
push
xor
nop
ja
sahf
sbb
mov
aas
sahf
subb
push
orl
sub
mov
mov
sbb
insb
add
iret
dec
mov
cld
cld
mov
push
orl
xchg
ja
push
inc
sti
ret
adcl
cmp
stos
dec
mov
fucomi
jp
cwtl
push
test
cmp
inc
popf
std
ja
out
jge
fadds
push
mov
push
xchg
mov
adc
xchg
lods
mov
ret
pop
xor
jne
or
icebp
enter
dec
je
fmulp
add
mov
mov
cs
fsubrs
mov
idivl
adc
dec
je
cmc
inc
and
and
add
pusha
daa
sub
in
repnz
cmp
adc
stos
jns
dec
xor
lods
test
adc
add
sbb
sarl
cmp
mov
push
ret
shlb
imul
pop
outsb
fisubs
adcl
add
in
pop
push
add
daa
jne
jl
mov
les
push
js
ss
mov
and
or
dec
add
decl
add
push
sub
icebp
xlat
adc
sbb
leave
sub
int
inc
ss
hlt
dec
incb
xor
scas
inc
push
inc
das
cmp
iret
add
inc
std
jno
xchg
sar
push
ror
mov
xor
jae
xor
add
cmp
sub
cli
push
pop
push
mov
outsb
mov
ror
test
mov
in
shll
push
mov
imul
test
bound
lea
addr16
push
push
sbb
jne
push
jle
bound
sub
push
pop
imul
jb
cs
add
sbb
jbe
xor
movl
sbb
lds
je
popa
out
das
lods
inc
jge
aaa
lahf
pop
push
roll
sahf
arpl
and
inc
cmp
mov
pop
pop
xchg
inc
cltd
xor
dec
jb
adc
movsl
fldt
fs
mov
test
stc
insb
insb
sbb
clc
push
push
xor
scas
xchg
mov
sbb
fidivrl
push
adc
int3
xor
sbb
pop
xchg
inc
push
mov
xor
mov
or
xchg
addr16
or
mov
test
in
lahf
sbb
pusha
aam
jp
mov
inc
popf
shl
test
and
pop
push
inc
scas
test
lds
scas
ss
push
scas
sbb
push
pop
jne
push
call
xchg
pop
cmp
data16
sbb
xchg
hlt
mov
es
adc
xor
dec
inc
test
jae
push
xchg
cmc
repz
loopne
lds
adc
inc
popa
jne
sub
sbb
enter
ss
sahf
push
stos
jg
mov
bound
pop
xor
push
movsb
test
xchg
adcl
sub
add
xor
sbb
inc
jl
mov
push
inc
push
jle
movsb
mov
jl
adc
jnp
sub
insl
out
jb
negl
push
jnp
mov
out
push
lods
pushf
add
iret
dec
mov
movsl
leave
xchg
or
js
iret
jge
test
dec
pusha
out
jae
pop
mov
pop
dec
shl
cli
data16
ds
shlb
pop
cmc
push
add
inc
jb
sbb
lock
jle
cs
sahf
pop
xchg
pop
or
jecxz
shlb
add
popa
jno
lahf
clc
outsl
and
mov
arpl
adc
add
popf
mov
and
mov
das
xchg
cli
das
je
cmp
iret
jecxz
addl
dec
inc
mov
adc
xchg
aas
and
push
lcall
cmp
addr16
xchg
push
adc
jnp
lea
pusha
dec
test
adc
gs
out
mov
mov
cmp
sub
hlt
int
jne
fsts
lret
mov
ds
stc
push
inc
mov
loop
popf
jecxz
sub
movsb
test
push
mulb
add
data16
pop
mov
test
fidivl
pop
icebp
inc
mov
jge
add
loop
xor
out
xor
out
jo
mov
loope
mov
mov
sub
ret
jle
aad
test
test
shrl
mov
stc
pop
adc
das
gs
gs
subb
shll
xchg
inc
dec
leave
add
adc
mov
shll
fneni(8087
stc
out
xchg
lods
add
xchg
arpl
jmp
inc
push
jbe
xlat
sub
sbb
mov
xor
push
sti
imul
xchg
and
icebp
test
dec
mov
jbe
rorl
inc
inc
imul
dec
js
xchg
dec
rolb
add
into
daa
push
adc
jo
test
add
cmp
fcmovnbe
inc
cmp
into
cs
aas
mov
iret
cmp
leave
sysexit
fldenv
stos
xor
aaa
mov
nop
icebp
jno
gs
xchg
sub
xchg
cmp
cmp
pop
jae
dec
data16
add
or
jge
test
lcall
daa
cmpb
mov
out
sti
push
or
subl
adc
ljmp
jae
rcr
arpl
mov
loop
add
loope
sbb
sbb
mov
pop
inc
xchg
sbb
lret
inc
loope
cmpsb
push
add
lds
iret
fldt
sbb
lds
pop
outsl
and
add
cmp
jo
cltd
test
js
lahf
daa
insl
pushf
and
mov
shl
iret
cmp
cli
push
lods
cmp
pop
lea
mov
in
mov
cmc
push
call
adc
add
in
or
fistpll
lea
stos
mov
jle
shll
dec
jl
test
bound
imul
fstps
out
pop
jo
stos
out
fistpll
test
movsb
inc
ret
push
sahf
push
xchg
xor
fwait
scas
and
outsb
ret
adc
ds
fidivl
add
fwait
xchg
cmp
cmp
enter
rcr
lds
mov
jmp
loop
lods
shlb
add
lret
outsl
nop
xor
jne
mov
jo
mov
movsl
pop
push
jb
push
inc
imul
mul
jnp
imul
lock
fs
mov
dec
sub
inc
jle
mov
ds
outsb
xchg
in
mov
iret
aad
loopne
xor
pop
sahf
jmp
call
mov
adc
iret
mov
rorb
lret
jge
sbb
push
mov
rorb
xor
popf
bound
pop
lods
xchg
nop
push
loop
cmp
mov
mov
mov
iret
push
outsb
jmp
mov
pop
sbb
ja
dec
or
scas
inc
adc
cmp
icebp
ja
stos
xchg
inc
xor
sub
test
lods
lods
inc
mov
dec
sub
push
jb
push
jnp
xchg
add
in
xchg
insb
in
loopne
cmp
jecxz
lret
pop
pop
sub
inc
sbb
jmp
mov
cld
jo
sahf
pop
push
imul
push
xchg
insl
nop
call
popf
xchg
cmp
data16
cltd
add
pop
stos
pop
mov
into
movsl
mov
fs
cmp
or
aad
xor
sbb
pop
lret
pop
clc
push
rolb
jo
or
inc
shl
stos
enter
dec
or
faddl
jns
cli
cmp
test
insl
mov
sbb
mov
inc
xchg
loopne
out
aad
or
add
add
lahf
int3
jmp
in
lret
rcrb
jg
mov
dec
adc
fdivr
bound
mov
aam
stc
into
jmp
out
cli
sbb
sbb
jo
stc
dec
mov
sar
or
test
fisubrl
aas
add
adc
cmp
not
sbb
iret
les
fsubr
sbbb
xor
loope
pusha
and
add
ucomiss
lods
jge
add
push
and
and
sarl
and
stc
imul
and
jge
sbb
hlt
aad
adc
dec
xlat
mov
add
cmc
out
mov
inc
out
jl
into
jmp
push
fwait
out
xchg
xor
push
rorb
clc
pop
jmp
fbld
add
cld
out
fs
cmp
negb
inc
data16
push
int3
or
xchg
xchg
mov
xchg
movsl
adc
cmp
mov
gs
mov
pop
nop
pop
repz
pop
sbb
pop
sti
inc
inc
push
mov
jmp
sub
jo
add
dec
add
mov
hlt
xchg
imul
dec
fildll
js
subb
movsl
cmp
sub
pop
fs
addr16
sbb
sub
fnstcw
fdiv
out
inc
shl
test
popa
jmp
mov
mov
cmc
dec
int
jns
mov
xchg
xor
aas
adc
jle
jno
xchg
idivl
pop
or
sarb
xor
push
ret
ds
and
test
roll
fs
sti
cltd
test
lret
int3
cmp
sbb
or
push
sub
mov
jle
sub
dec
repz
lahf
dec
jbe
mov
adc
inc
imulb
scas
sub
push
lea
push
test
out
arpl
or
int3
mov
int
jbe
cld
fptan
push
shr
aad
or
das
imul
icebp
or
dec
xor
xor
fisubrs
ljmp
arpl
sub
xchg
sti
stos
pop
daa
jns
in
mov
pop
lret
sbb
insl
and
mov
mov
xor
sbb
jns
push
sbb
rcll
or
mov
inc
sub
into
adc
add
push
jns
xlat
scas
addr16
mov
jecxz
cmp
adcb
sub
add
out
mov
cmpsb
push
ret
sub
pop
mov
mov
or
movsl
sbb
bound
mov
test
subl
push
push
iret
mov
call
add
dec
fstl
lock
add
xchg
hlt
fadds
loope
or
push
rorl
inc
jge
sub
nop
jno
mov
mov
leave
lds
pusha
cmp
push
pop
push
push
fcmovu
ror
sbb
test
xchg
es
jns
mov
add
jbe
je
and
test
fsubrl
pop
mov
aad
and
xor
pop
stos
lret
lahf
enter
test
cmp
rcr
mov
fistps
lods
or
inc
push
push
sti
mov
mov
ja
pop
repnz
mov
neg
dec
js
dec
es
mov
push
fdiv
fdivs
out
jb
inc
aas
dec
xor
sbb
insb
les
dec
imul
shll
fs
and
int3
sti
fisttpl
shl
loope
bound
inc
xchg
adc
scas
daa
rcll
mov
jns
icebp
lods
xchg
leave
xchg
leave
dec
mov
adc
jmp
mov
mov
and
cmp
cmc
subl
dec
cmp
ret
xor
fwait
jecxz
imull
dec
dec
mov
inc
add
pop
mov
sti
aas
inc
iret
rcll
stos
mov
sbb
rolb
mov
sbb
push
push
cmp
jg
ljmp
scas
lds
sbb
dec
jge
xchg
lcall
mov
clc
test
test
xchg
mov
or
icebp
xchg
xchg
jp
push
repnz
cmp
insb
push
inc
inc
scas
cmpsl
out
shll
adc
push
mov
les
jle
mov
xchg
les
jo
cwtl
pop
in
mov
repz
int
fs
and
jno
jge
lods
scas
popf
mov
mov
cmp
xchg
mov
sub
cmp
sbb
mov
hlt
inc
xor
mov
cmp
leave
shl
adc
jb
inc
dec
test
mov
xchg
incb
sbb
cmpb
leave
ret
divps
rorb
imulb
loopne
in
and
cld
and
scas
into
jb
lahf
fdiv
fs
xchg
dec
dec
popa
add
inc
fdivs
jg
jp
mov
les
push
aaa
std
xchg
and
pop
addr16
fsubr
cwtl
jl
mov
mov
jmp
mov
sbb
mov
int3
bound
jns
pop
decb
jle
mov
inc
gs
ja
aad
cltd
mov
out
dec
ljmp
jmp
outsl
inc
out
pop
cmpsl
cmp
sbb
dec
femms
add
repz
dec
out
xor
push
push
adc
test
xlat
rclb
mov
mov
jp
call
enter
xor
test
mov
dec
icebp
addl
pop
adc
imul
movsl
int
aad
nop
test
add
in
aas
xor
jb
mul
fstps
xor
cld
mov
adc
fsubrs
mov
sub
lahf
add
push
push
mov
pop
mov
shrb
rcrl
fcoml
inc
add
lea
cmpsl
repnz
das
fcoms
and
mov
lret
jns
cmp
push
inc
insl
lret
jmp
adc
sbb
aam
rcrl
inc
addr16
xchg
jnp
scas
push
mov
out
xor
pop
leave
cmp
jmp
jl
andl
xchg
xchg
pop
xchg
sbb
sbbb
add
sbb
jle
add
cmp
stos
jp
dec
das
rcl
repnz
aas
push
adc
mov
movsb
ds
ss
inc
enter
jnp
loope
ja
xchg
dec
xor
or
aad
inc
mov
or
and
mov
xchg
sbb
jge
std
rolb
std
dec
push
mov
out
negl
mov
sbb
add
sub
cmpsb
cmp
outsb
inc
inc
or
std
stos
lods
pop
mov
xchg
sbb
inc
inc
shll
xchg
aaa
pusha
mov
or
fstpl
inc
cmp
arpl
push
xor
inc
push
jno
scas
ljmp
push
add
daa
xchg
adc
mov
and
xor
mov
push
aad
flds
sub
mov
mov
pop
addb
popa
add
imul
push
jne
popa
lods
aad
xor
lret
push
pop
popa
in
or
aad
mov
fisttpll
in
mov
xlat
adc
add
push
sarl
mov
imul
inc
icebp
sbb
dec
push
mov
retw
negb
push
sti
jno
mov
nop
adc
ret
ss
repnz
inc
in
xor
cmpsb
adc
pop
cltd
fs
push
xlat
xchg
test
inc
pusha
sub
fcom
push
mov
sub
stos
clc
shll
hlt
jg
xor
in
xchg
cmp
pop
sub
sti
arpl
nop
aas
aad
sub
mov
cmp
adc
gs
cmp
or
mov
cmp
xchg
jmp
ja
push
insl
dec
pop
aad
inc
test
add
mov
cltd
fs
or
push
pop
lods
and
push
adc
jmp
sub
loop
repz
aas
xchg
call
pop
mov
ret
inc
out
cmpsl
orl
lock
shll
mov
pop
nop
gs
mov
add
cmc
push
hlt
pop
es
jmp
out
test
decb
aaa
push
sbb
pop
jmp
pop
data16
push
cmpsb
xchg
push
test
push
jnp
ror
lahf
jge
insb
mov
test
scas
push
mov
lock
pop
adc
xchg
js
dec
ja
dec
scas
sarl
inc
add
cmpsl
int3
jecxz
pop
mov
rcl
push
popa
std
fmull
arpl
insb
cwtl
shlb
adc
cld
cmpsb
xchg
adc
daa
and
jno
int
add
add
cmp
test
aam
cmc
push
push
push
mov
inc
aam
lock
shll
sub
enter
mov
mov
push
pusha
das
sbbl
jge
movsb
mov
lods
imul
push
rorl
fists
jno
out
test
jl
jmp
repz
xor
test
fidivrs
jp
mov
mov
int3
add
fwait
pop
hlt
mov
sbb
out
test
sbb
inc
xchg
jg
push
cld
insl
or
cmp
insb
and
lea
test
and
test
ljmp
mov
jge
cmc
push
fisttpl
push
mov
cmpb
pop
dec
xor
dec
ss
inc
pop
sbb
loop
ja
leave
jmp
arpl
mov
cwtl
fwait
cs
popf
cld
loopne
lret
mov
mov
pop
or
or
lea
push
lods
bnd
mov
xor
repz
cmpsl
xchg
roll
xchg
mov
scas
push
jns
xor
aad
mov
or
cs
call
lret
jno
jno
jle
xchg
mov
xchg
arpl
sub
mov
lea
xchg
in
mov
and
cmp
mov
in
test
es
push
mov
jns
sbb
cmp
popf
xor
mov
adc
dec
test
adc
daa
cltd
add
popa
adc
mov
add
out
mov
mov
or
icebp
xorl
dec
addb
push
mov
sbb
scas
jne
mov
ss
cmpsl
pop
cmp
cltd
inc
inc
sub
out
jno
cmpsl
es
sbb
xor
testb
add
bswap
xchg
push
xchg
les
aaa
leave
aaa
in
adc
mov
cmpsl
stos
fildll
bound
push
stos
pop
iret
fisubrs
adc
cmp
xor
or
enter
movsl
fwait
sahf
aam
cmp
inc
sbb
test
push
hlt
sti
or
jo
in
xor
jecxz
dec
rorb
in
push
loope
mov
push
mov
fmull
iret
and
popf
mov
faddl
mov
and
push
or
mov
inc
jne
sub
cmp
xor
cs
ljmp
lahf
inc
pop
pop
and
xor
movsl
mov
mov
pop
outsl
sti
sar
adc
push
aas
push
cmp
ljmp
mov
ret
sub
addb
fwait
pop
cmpsb
mov
mov
cmc
jle
jge
fdivs
out
mov
and
out
jmp
pop
sub
dec
mov
std
into
mov
mov
mov
aad
jg
repz
xchg
push
cmp
das
cmpsb
fisttpll
iret
adc
cmc
popa
mov
xor
gs
jle
in
test
adc
cmp
push
push
repnz
xchg
aam
bound
addr16
imul
ror
imul
stos
ret
nop
cmpsl
mov
inc
mov
xchg
rcr
fidivs
rolb
push
and
repz
test
mov
int
add
push
xchg
xor
in
jge
cmp
sti
inc
lods
sbb
adc
sti
cmp
mov
jo
loop
mov
out
jge
or
bound
js
in
jecxz
mov
adc
add
mov
push
mov
mov
out
orl
mov
int
push
lahf
daa
imul
jp
adc
add
outsl
loop
loope
sbb
pushf
lods
dec
int3
push
adc
jle
xchg
xorl
mov
pop
sub
aam
jbe
ljmp
fildl
cli
cmpsb
cwtl
mov
add
addr16
jg
mov
std
orb
add
movsb
cmp
aam
jecxz
ret
sub
cwtl
jle
or
dec
out
mov
jle
mov
cld
mov
imul
pop
xchg
push
notb
ret
loope
lcall
mov
and
das
pop
mov
xlat
xchg
test
sahf
add
ja
cltd
clc
in
in
xor
jo
icebp
add
imul
jae
in
imul
and
pushf
movsl
stos
pop
xchg
and
pushf
test
inc
rclb
xchg
jno
jle
mov
cmp
push
mov
dec
es
or
xchg
movsb
ficoms
je
loop
cmpsl
cltd
dec
xor
jbe
inc
iret
mov
push
add
and
jne
cmp
stos
push
xchg
or
cwtl
adc
jl
mov
xor
lea
ljmp
std
test
mov
mov
push
int3
stc
cmp
xlat
adc
or
aam
or
dec
insb
sti
add
test
cmp
jle
jg
push
jno
dec
pop
sub
xchg
xchg
push
enter
jle
add
loope
mov
hlt
pop
or
ds
ds
fadds
in
xchg
movsb
rolb
pushf
lock
push
pop
add
icebp
xor
xchg
les
int3
mov
inc
daa
in
mov
cld
arpl
int3
icebp
hlt
sbb
or
push
xchg
xchg
leave
sub
push
pop
inc
mov
jp
es
fildll
push
notl
jae
jae
out
cmpsb
adc
xchg
sub
sbb
test
jnp
lods
out
inc
pop
in
daa
xor
push
fdivrs
pop
in
cmp
nop
jno
enter
in
and
rcr
dec
xlat
jge
loop
rolb
dec
stos
test
fisttpll
sbbb
add
or
push
shll
dec
enter
cld
mov
xlat
jl
inc
and
js
or
and
iret
sbb
sahf
push
loope
pop
mov
testl
dec
jne
scas
inc
push
lcall
jnp
scas
pop
inc
and
fcoml
push
cltd
and
xor
add
cwtl
daa
inc
imul
and
sbb
xor
pop
push
lods
add
repnz
aas
and
sbb
and
fs
loop
xchg
and
sbb
rcrb
in
out
je
subb
xchg
in
addr16
inc
lret
jae
pushf
mov
insl
cmp
icebp
push
cmp
imul
ret
in
push
push
data16
mov
inc
xchg
fnstcw
xchg
push
loopne
inc
jmp
jnp
inc
mov
mov
fisubrl
cmp
inc
inc
mov
shrb
scas
add
xchg
dec
sbb
es
gs
push
sbb
in
repz
imull
jg
mov
dec
inc
sbb
push
xchg
rcl
leave
out
mov
jge
or
lock
cmp
lret
dec
stos
push
xlat
mov
cmpsl
sub
dec
les
add
addl
and
movsb
push
nop
and
jl
mov
jmp
shlb
jno
push
adc
stos
imul
shll
ficoml
or
mov
into
mov
mov
dec
das
mov
cltd
cmp
negb
mov
jnp
dec
mov
xchg
pop
xchg
push
xchg
pushl
jmp
es
push
sbb
lret
inc
inc
mov
mov
in
adc
fists
add
add
call
ljmp
in
jmp
adc
lcall
aas
outsb
pop
xchg
stos
cmp
aas
ss
mov
scas
add
pusha
aam
xor
aad
scas
andl
xchg
cmpsl
das
fmul
xlat
pop
icebp
mov
mov
lea
pop
adc
or
push
adc
pop
in
hlt
fwait
outsl
scas
dec
mov
loope
cmpsb
and
lcall
pop
add
orb
mov
xor
xchg
sub
shll
add
lret
dec
cld
out
add
daa
and
imul
and
mov
jmp
cmp
add
into
aad
inc
mov
cli
xchg
std
call
les
and
mov
test
xchg
test
in
mov
rolb
cmp
out
stos
je
jmp
inc
adc
cmpsl
mov
inc
hlt
push
mov
out
cs
dec
lret
js
cmp
dec
jg
sar
xor
pop
ja
pop
xchg
cmp
aam
push
pop
push
lcall
inc
je
pop
jl
xchg
cmp
in
jno
or
push
les
cltd
imull
dec
cwtl
cld
jle
mov
xchg
jb
mov
or
cs
push
in
cmp
push
sbb
lahf
xor
clc
xchg
repnz
inc
and
pushf
lret
or
jecxz
mov
lahf
sarl
push
push
into
cltd
ret
pusha
inc
lds
fbstp
loop
sbb
dec
repz
inc
aad
fucomip
xchg
cli
push
push
cmp
std
repnz
enter
and
sub
mov
out
clc
das
scas
cmp
inc
ja
sub
js
inc
aam
inc
cmpsl
lods
mov
loope
mov
es
jg
ret
mov
sahf
pusha
mov
jg
cwtl
inc
or
inc
push
mov
add
sti
dec
ss
mov
xchg
mov
xchg
sbb
iret
push
insl
push
lcall
movsl
or
scas
ficoml
stos
aam
jmp
clc
pop
xchg
fidivs
imul
loopne
jne
inc
repnz
xor
pop
je
int3
dec
lods
in
into
or
sbb
cli
jae
out
and
push
les
cld
adc
gs
cmp
mov
cltd
js
pop
or
mov
pop
popf
xchg
lahf
orl
js
ficoml
cmpsb
add
test
cli
xchg
dec
dec
pushf
imul
xor
add
pop
mov
clc
ss
loope
out
mov
jnp
lcall
and
dec
ds
mov
not
dec
push
ljmp
xor
mov
mov
adc
add
xor
lahf
popf
jp
mov
popf
jle
aaa
mov
jno
xor
push
add
cmpsb
enter
cmp
jg
rolb
ljmp
jne
dec
xchg
xchg
push
pop
jnp
push
or
sbb
lret
lods
add
or
pop
leave
sub
pushf
push
xchg
mov
scas
popa
inc
lret
cmp
test
dec
mov
mov
dec
sub
sbb
mov
xchg
and
jno
jmp
xor
mov
or
stos
punpckldq
push
or
aaa
aad
sti
sti
and
sub
or
fcmove
in
mov
and
stos
inc
das
mov
int
fwait
cwtl
xor
aad
inc
mov
jl
mov
fwait
jmp
lahf
inc
pop
or
and
loop
mov
insl
xchg
out
xchg
sbb
push
mov
jle
push
pop
adc
cmp
xor
dec
mov
mov
in
xor
or
mov
dec
jle
in
add
xor
popa
loope
mov
repnz
out
js
mov
loope
add
lcall
outsl
incl
aad
jo
xor
sbb
push
mov
std
hlt
testl
outsl
sbb
addl
pop
js
mov
je
push
into
pop
add
cs
push
mov
out
clc
lret
lret
mull
jne
add
cmc
mov
addr16
out
leave
and
jge
ljmp
stc
push
clc
sbb
popf
bound
fiadds
sbb
mov
into
mov
xor
or
test
mov
dec
push
std
scas
icebp
fisttps
mov
xchg
cwtl
pop
xchg
or
pop
dec
pushl
loopne
fists
xlat
push
addl
cld
popa
jg
lods
xlat
pusha
or
sub
imul
cld
push
sub
mov
imul
xlat
mov
mov
mov
repnz
pop
fsubrs
mov
add
jo
imul
in
paddb
or
sbb
inc
mov
mov
ret
adcl
push
xchg
sbb
dec
xor
popf
outsl
fistl
xchg
pop
nop
sbbl
xchg
test
insl
adc
mov
push
xchg
cmp
xchg
cmpb
dec
ds
add
dec
cmp
add
mov
inc
jge
movsb
mov
mov
loop
iret
int3
imul
push
inc
enter
fildl
adc
call
out
in
imul
and
xchg
dec
dec
ja
mov
mov
push
xlat
imul
xchg
popa
aaa
imul
pop
das
jg
inc
shr
mull
ret
mov
bnd
pop
pop
add
cltd
aam
mov
pop
jns
aas
jb
push
sub
outsb
xorl
xor
xchg
pop
test
sbb
dec
and
xchg
xchg
jg
push
leave
pop
gs
mov
imull
mov
sub
in
testl
ret
jne
rorb
leave
inc
mov
es
push
out
push
push
out
xor
in
xorb
in
dec
fidivs
adc
mov
lods
insl
int3
or
roll
outsl
cmp
or
and
mov
int3
sub
pop
pop
ss
adc
shlb
movsl
and
or
rol
aas
outsl
cld
test
test
je
and
mov
or
lret
cli
sub
lods
jle
cmc
rorl
pop
mov
fnsaves
inc
mov
sbb
push
or
push
cli
out
daa
mov
jbe
mov
mov
bound
loopne
fwait
mov
add
sub
enter
xor
js
das
push
ret
imul
jnp
insb
adcb
sbb
adc
xchg
sbb
and
ds
cmp
ljmp
xchg
lahf
mov
pop
jns
cld
pop
pop
sub
jecxz
idivl
out
lock
fidivl
fisubrl
mov
lea
sub
int
cmp
punpcklwd
mov
mov
sbb
sub
push
cwtl
ja
in
xchg
out
push
lcall
dec
push
xor
add
movsb
sti
xchg
int3
add
ficomps
mov
mov
pop
dec
push
popa
dec
push
cld
shlb
loope
xor
or
movsl
std
mov
into
daa
xor
adc
into
inc
cli
xor
cwtl
rcrl
jp
mov
decl
sarl
fildl
scas
xor
test
push
enter
dec
inc
mov
jb
adc
stc
jne
xor
mov
push
sub
movsb
mov
pop
repnz
xchg
xorb
popa
add
fisubrl
scas
pushf
cmp
pushf
pop
incl
sub
push
adc
cmp
push
inc
ja
mov
in
or
mov
lods
add
push
pop
js
xchg
mov
inc
cmp
fwait
adc
into
in
dec
xor
cmp
js
xchg
jecxz
jl
dec
testb
imul
dec
fidivl
pop
mov
push
mov
mov
cmp
xlat
fisubs
inc
jmp
lock
xchg
mov
outsb
mov
xchg
stos
push
vcvtss2si
xlat
mov
pop
cmp
jp
xor
ss
push
or
mov
jl
xor
xor
inc
pop
int
and
jecxz
push
jecxz
sbb
stos
sub
jle
lahf
pushf
cmp
outsl
adc
loop
dec
mov
xorl
dec
jge
mov
movsl
add
inc
cmp
ljmp
lods
or
and
insl
fwait
enter
rorl
inc
push
dec
movsb
add
xor
cmp
ficompl
imul
outsl
mov
pop
fisubl
daa
push
adc
cmpsl
cli
cld
xchg
fistpl
call
loop
and
in
xchg
sub
es
imul
xor
nop
out
adc
fldt
jno
aad
scas
add
mov
es
mov
sarl
push
mov
cwtl
loop
cmp
lret
xchg
push
mov
je
lret
movsl
add
fdivs
adc
sbb
mov
sbb
dec
xor
loope
adcb
int
rcll
dec
push
xchg
cltd
xchg
pop
jae
out
push
jl
ja
repz
mov
loop
rcrl
addr16
push
add
mov
sbb
mov
adc
mov
or
or
pop
inc
shr
lret
cmp
xor
xorl
ds
nop
adcb
rcrb
repz
pop
inc
push
jb
cltd
inc
adc
loopne
ret
cmc
loope
or
inc
mov
arpl
push
fisttpll
ljmp
ljmp
imul
cs
mov
or
aaa
aam
pop
mov
dec
pop
adc
mov
pop
stos
rcrb
icebp
pusha
cmp
xchg
pusha
insl
aam
leave
test
dec
out
cmp
aam
cmp
es
negb
enter
gs
stc
pop
cli
or
adc
addr16
sbb
xlat
into
mov
xchg
dec
cmp
ljmp
shrb
lock
scas
or
das
cmc
push
adc
test
rorl
dec
pop
mov
int3
lret
ja
or
sub
rcll
mov
shll
jge
imul
cmpsb
stos
je
sbb
cmp
jge
pop
repnz
or
lahf
push
pop
xadd
sbb
out
sbb
dec
sub
popl
fidivrs
cmp
cltd
add
add
sub
lret
push
int
movsl
xchg
addr16
adc
popa
pop
dec
mov
sub
pop
cwtl
leave
dec
daa
sbb
test
add
fs
fcmovnu
sbb
inc
add
gs
fdivrs
xlat
jp
jb
dec
pop
xchg
jbe
add
adc
add
inc
popf
add
int3
add
push
les
mov
nop
ret
adc
popa
sub
je
xor
and
mov
sbb
out
push
repz
rorb
mov
add
add
cs
aas
test
sbb
and
adc
mov
push
test
lds
lret
hlt
dec
repnz
sbb
cs
cmc
js
jg
pop
xor
mov
pop
pushf
stos
mov
mov
inc
pop
cli
stos
adc
rorb
add
ja
push
dec
pop
adc
out
repnz
xchg
les
dec
xchg
jg
or
js
or
dec
push
mov
add
mov
sub
dec
inc
dec
push
pushf
lock
push
bound
mov
xchg
lcallw
dec
lea
lods
jnp
pop
jle
int3
imul
xchg
dec
adc
cltd
aad
cmp
arpl
aam
or
addr16
out
in
lea
push
orl
cmp
bnd
jo
or
inc
jb
mov
or
jge
jae
sbb
gs
mov
outsl
jns
push
dec
test
jge
adc
lret
sub
aad
mov
lret
sub
xchg
xlat
daa
mov
push
std
cwtl
ja
xorb
fisubs
inc
bsf
jne
adc
jge
aam
aad
clc
mov
dec
cmpsl
sahf
or
xor
repz
fstl
adcl
lea
scas
xchg
nop
inc
stos
mov
mov
ret
popf
mov
out
jmp
ljmp
add
lret
bound
xchg
in
xor
mov
jbe
popf
hlt
add
dec
and
mov
inc
loopne
dec
cmc
pop
xor
repz
push
sub
sbb
nop
pop
cmovns
fsubrp
dec
dec
btcl
in
add
pop
and
lcall
mov
dec
lods
and
ret
js
mov
pop
test
xor
cmp
out
inc
xor
xchg
xchg
sbb
int3
dec
xlat
out
push
xchg
push
dec
jg
push
xorl
pop
and
sub
xor
sahf
and
fstps
out
mov
add
lds
push
pop
xchg
mov
inc
mov
and
inc
sub
pop
cmpsl
jo
roll
stos
adcb
lret
nop
stos
cmc
adc
push
cmp
inc
and
and
push
mov
fxch
in
fucomp
jbe
sti
inc
dec
cmp
stos
test
stos
mov
repnz
cld
and
sub
imul
cmp
idivl
mov
xchg
icebp
lock
dec
add
shrl
push
enter
push
pop
mov
adcl
data16
jmp
lea
add
ss
push
inc
aam
mov
lahf
lds
dec
adc
mov
fsubl
push
push
adc
pop
push
and
dec
mov
mov
adc
mov
xor
pop
mov
shrl
fwait
jns
fs
outsl
mov
jns
or
mov
cmc
daa
int3
leave
sub
adc
mov
clc
jb
out
jl
lret
dec
push
sub
push
out
jnp
jecxz
mov
cmpsl
shr
nop
bound
cmp
aad
rcr
icebp
into
mov
and
lret
pop
insb
adc
add
inc
loope
mov
or
xchg
imul
pop
push
lcall
xchg
mov
scas
adc
mov
or
jmp
xchg
ds
movb
sti
push
inc
or
mov
clc
imul
cmpsb
push
push
sbb
or
jb
ds
cmp
pop
insl
xor
mov
pushf
mov
cmc
inc
fmuls
mov
movsb
es
jo
cmp
sub
pop
loopne
jg
shll
mov
int3
mov
dec
jmp
cmp
and
data16
pop
decl
mov
cmc
ret
fstp
ds
lahf
inc
pop
inc
xorb
adc
lods
mov
push
add
or
xchg
pop
and
scas
xor
sbb
sahf
loope
pop
aad
in
test
jecxz
jne
push
insb
xchg
pusha
cmpsl
xor
inc
adc
mov
mov
mov
add
xor
pushf
or
and
or
push
sbb
cmp
adc
sbb
fs
shlb
inc
inc
pop
stos
aam
jne
mov
push
shr
andb
roll
jne
mov
mov
data16
dec
sub
xchg
sbbl
fucomi
jb
pop
fmuls
divl
cmp
cmpsb
adc
sbb
cwtl
cmp
push
cmp
push
dec
jns
out
or
inc
pop
popa
mov
int
mov
fisubl
pop
pop
les
xchg
mov
clc
mov
push
daa
loope
jge
or
and
fsubrs
rcl
or
inc
xor
pop
mov
push
outsb
pop
sub
cmp
aaa
fadds
int
ds
mov
decb
scas
adc
fsubl
fstl
or
mov
mov
mov
sbb
push
jo
inc
out
in
mov
xchg
inc
mov
shlb
or
shlb
pop
and
int3
inc
in
movsb
daa
mov
pop
sub
repnz
loopne
out
test
xchg
inc
dec
xchg
loope
xchg
in
push
movsl
mov
xorl
mov
scas
cs
fidivrl
les
mov
test
jecxz
daa
xchg
push
hlt
cs
sahf
jecxz
pop
mov
xchg
push
aaa
lods
lcall
in
and
xor
repnz
mov
and
rclb
mov
fmull
sub
cmpsl
aad
xlat
fdivs
pop
mov
mov
int
lods
inc
mov
pop
and
jecxz
mov
inc
mov
mov
sbb
sub
pop
cld
dec
ret
push
ds
jl
int3
lock
jl,pt
push
movsb
xchg
and
xchg
sbb
or
and
ss
dec
out
and
mulb
sub
fimull
scas
fcomps
sbb
sub
cmp
adc
dec
js
dec
popa
pushf
test
lret
lods
pop
and
arpl
in
daa
jnp
lods
pop
dec
fidivl
push
pand
inc
das
sbb
adc
or
arpl
inc
test
dec
pop
and
mov
dec
inc
sarl
push
stos
pop
lcall
dec
hlt
and
popw
out
mov
inc
sbb
push
movsl
or
cld
xor
je
dec
cwtl
mov
mov
pop
push
add
lods
sbb
in
dec
pop
mov
and
mov
in
nop
lods
mov
ljmp
ret
push
mov
out
loope
fstps
jne
ja
and
mov
or
in
cmp
or
pop
inc
into
mov
sbb
mov
aas
arpl
mov
call
cmp
rolb
xchg
jg
sub
or
cmpsb
aad
and
jp
in
aas
cmc
lret
jecxz
sbb
xchg
scas
push
cwtl
shrb
add
add
adc
loope
imul
mov
push
cmp
insb
jbe
sub
loope
cmc
jge
push
jns
xchg
enter
out
leave
pop
shlb
icebp
inc
pop
rcll
xor
out
ret
jo
push
xor
cmp
xor
insb
popf
xchg
mov
jb
nop
mov
les
in
fistpl
sahf
xchg
sbb
pushf
push
andl
loope
call
xchg
lea
xchg
test
cmpsl
sbb
xchg
add
xor
mov
in
scas
mov
lock
imul
insl
jns
stc
fisttpl
movsb
jmp
mov
mov
les
out
mov
add
dec
outsb
out
push
adc
or
push
sub
cmp
cwtl
lock
lds
es
mov
xchg
inc
mov
pop
stc
mov
loopne
enter
imul
pusha
movsl
jno
and
sbb
xchg
aas
aad
jne
stc
jecxz
add
gs
or
bound
out
mov
int3
sbb
pop
jns
cmp
in
add
adc
fcmovu
cmp
stos
jp
jnp
lods
mov
icebp
pushf
mov
adc
cmp
mov
push
adc
pop
xchg
fcoml
je
and
dec
out
adc
in
mov
rcrb
xor
mov
add
movsl
pop
mov
icebp
shll
jl
xor
mov
pop
jno
xor
pop
mov
stc
stos
mov
mov
hlt
add
and
das
shlb
incb
sub
push
outsl
mov
jg
call
pop
mov
dec
and
push
in
popa
lahf
movsl
pop
ret
lahf
jae
lods
jmp
push
scas
or
repz
jnp
das
mov
lds
insl
enter
popf
adc
jmp
pop
pop
xor
sahf
and
xor
dec
stc
outsl
lds
xor
lret
cmp
push
mov
jbe
sub
jb
and
mov
in
sub
mov
clc
stc
test
hlt
stos
insb
inc
orl
push
sub
mov
push
cmpsl
clc
push
sbb
push
push
xor
mov
ja
cmpsl
shl
popa
cmp
loopne
stos
pusha
sub
or
xchg
dec
dec
push
cltd
out
hlt
gs
loopne
dec
js
stc
add
gs
aam
xor
push
jnp
mov
mov
push
pushf
push
daa
jg
xlat
aad
shr
scas
ret
and
divl
or
roll
ficoms
mov
mov
inc
outsl
cld
popf
aad
mov
xor
jl
pop
xchg
push
fcmovb
sub
mov
dec
dec
leave
shrb
lock
decb
dec
jmp
sub
xor
inc
pop
movl
mov
fbld
ret
jnp
rorb
inc
scas
cmp
mov
popl
mov
rcrl
fwait
movsl
stc
push
insb
pushf
inc
je
cwtl
outsl
gs
jbe
pop
pop
add
test
ret
jnp
arpl
push
cmc
mov
out
mov
scas
test
cmpsb
sbb
lcall
int
fsubrs
push
fistl
sbb
pop
dec
lret
push
jnp
scas
idivb
rorl
mov
sti
popa
frstor
push
pop
cmp
jnp
cmpsl
xchg
int3
pop
sub
push
mov
xchg
adc
or
xchg
adcb
sbb
in
xchg
inc
imul
call
out
scas
sbb
pushf
xchg
daa
outsl
dec
addr16
jnp
test
jecxz
mov
dec
ret
cmp
pop
pop
xchg
fwait
inc
fidivrs
mov
pushf
mov
mov
lods
add
cmpsl
in
lcall
fildll
into
outsl
or
or
xchg
insl
mov
xchg
dec
xchg
inc
xchg
popf
lret
scas
mov
push
es
mov
jecxz
jb
repz
cwtl
cmp
ret
pop
dec
sub
xor
cmp
cmp
xchg
push
mov
int
popa
xor
xchg
aam
xchg
add
shl
pop
sub
mov
cltd
inc
decl
scas
xor
jmp
into
nop
addr16
fcoml
push
icebp
imul
dec
xorl
sub
cld
dec
sub
xchg
mov
sbb
or
jp
or
add
in
dec
daa
add
imul
cmp
loop
orl
mov
cmpsl
mov
popf
xchg
in
jp
dec
popf
outsb
in
cli
add
lretw
pop
outsb
out
mov
mov
out
jns
hlt
rcrb
fstpt
add
loop
scas
or
rorl
dec
ja
push
adc
pop
nop
loop
cli
and
out
dec
lods
xchg
mov
std
pop
or
aad
pop
xor
inc
inc
mov
jp
lret
inc
daa
jle
push
push
movsb
rsqrtps
jl
mov
leave
pop
push
push
push
jmp
jbe
add
and
sarb
pop
imul
cld
mull
mov
testl
or
jmp
sbb
ret
lcall
std
stos
in
jg
dec
mov
ret
daa
xor
enter
push
cmpsb
mov
adc
inc
loop
nop
test
cmp
sub
std
sar
inc
fimull
sbb
mov
xchg
call
dec
push
push
xchg
repz
ljmp
mov
and
sub
xor
sbb
add
push
pop
shll
mov
or
pop
mov
ljmp
mov
out
pop
jb
mulps
mov
loope
sub
mov
adc
cmp
adc
icebp
leave
sub
rolb
pusha
insl
mov
sub
hlt
adc
clc
movsl
jge
bnd
mov
sub
andb
shl
inc
popa
lcall
outsl
lds
or
cmp
movb
cmp
ret
and
mov
je
cmp
mov
mov
stos
mov
pop
pop
cmp
test
and
repz
mov
fmul
shr
push
mov
mov
inc
jno
cmpsb
jnp
mov
fidivrs
popf
push
pusha
pop
sub
push
sub
push
das
mov
lock
jb
and
test
pop
nop
push
inc
inc
cmc
mov
icebp
cmpsb
push
bound
jmp
js
sbb
int
cwtl
push
xor
loop
pop
cmpsb
les
add
scas
xchg
mull
repnz
loopne
xor
mov
pop
mov
sbb
popa
push
adc
dec
std
aad
ss
add
and
mov
adc
adc
adc
or
popa
dec
rolb
popa
and
adc
mov
mov
push
mov
insb
jbe
les
les
inc
mov
loopne
mov
sub
inc
int
int3
ret
lock
cmpsb
fidivs
push
push
sbb
out
pop
ja
add
mov
inc
mov
inc
sub
mov
loope
push
movsb
xchg
pusha
push
mov
lahf
cmp
jmp
incb
test
jnp
jnp
or
pop
lea
pop
pop
inc
mov
add
mov
movl
mov
fldl
test
pop
adc
je
xlat
jmp
cld
or
movsb
pop
cmp
mov
jl
jae
iret
cmp
mov
xor
loop
add
es
mov
sarl
dec
loope
mov
pop
cwtl
cwtl
arpl
popa
dec
push
pusha
jg
test
pop
push
mov
pop
pop
mov
sub
jp
loop
arpl
repnz
jle
sub
push
jp
inc
push
mov
and
out
sub
lock
cli
push
dec
cld
mov
cld
out
les
in
scas
adcl
enter
push
jecxz
outsb
xchg
dec
mov
or
pop
lret
jle
mov
or
lret
jl
flds
scas
mov
mov
insl
out
repnz
jge
mov
sub
xchg
jne
xor
sbb
cmpl
cmpl
xchg
test
cmp
and
xchg
test
inc
add
shlb
dec
mov
fwait
mov
push
dec
mov
in
shr
or
fdivs
xor
push
movsb
cltd
fldt
es
cs
fs
std
iret
mov
add
or
jno
mov
inc
cmp
and
flds
scas
outsl
cwtl
and
push
arpl
mov
fisubl
popa
ss
pop
xor
test
xchg
adc
pop
mov
dec
xchg
loopne
pop
cmp
push
xor
or
mov
test
std
lods
cmc
fimull
sti
repz
test
es
sahf
dec
lods
jne
fwait
movb
and
adc
jne
int3
lods
adc
jno
cmpsb
cmc
addr16
sti
das
out
cmp
sub
arpl
push
inc
fxch
sub
or
or
xor
sub
fnstenv
xor
inc
roll
xchg
cmp
sti
add
inc
sbb
add
movsb
aad
push
jno
cmp
xchg
scas
mov
adc
cmc
inc
push
pop
sub
lcall
lea
test
aas
rcr
xchg
mov
cmp
mov
das
inc
add
cs
in
loop
jle
inc
mov
push
andl
mov
mov
or
movsb
adc
or
je
flds
fiadds
test
and
push
jg
cmp
out
push
js
arpl
mov
dec
jo
into
and
hlt
mov
push
repnz
js
inc
js
push
imul
xchg
push
lea
or
mov
rolb
cmp
mov
jb
push
jns
imul
xchg
inc
xor
pop
andb
inc
sahf
xor
mov
push
repz
xlat
iret
dec
dec
sub
fidivl
cmpsb
adc
pusha
jecxz
ljmp
fiaddl
les
mov
jecxz
inc
mov
lret
ljmp
adc
in
pop
aaa
cmp
pop
fisttpll
jb
sti
out
stc
repnz
js
mov
adc
dec
cmpsl
sti
or
or
fsub
push
scas
fsub
icebp
sahf
jge
lahf
mov
aam
adc
rcrl
faddp
aam
jae
inc
add
pop
add
pop
shlb
pop
in
dec
decl
es
push
stos
dec
out
dec
pop
xor
out
lcall
xor
test
pop
mov
or
je
jno
mov
sbb
pop
int
dec
cmpsl
arpl
ds
ret
call
mov
sbb
pop
fisttps
jl
cmp
out
jae
add
sbb
mov
outsl
jb
imul
sub
inc
shlb
jmp
jae
inc
dec
push
std
cld
pushl
dec
in
mov
aaa
jnp
stos
mov
test
push
or
pushf
mov
jbe
loop
sub
out
fcoml
js
mul
mov
es
in
inc
push
gs
js
mov
mov
aad
inc
loope
in
or
shlb
loop
mov
add
mov
pop
gs
xor
sub
xor
movsl
in
xchg
mov
or
out
mov
lods
inc
imul
dec
mov
xchg
mov
mov
sbb
jmp
dec
nop
inc
out
xchg
cmp
stos
mov
les
fmul
cmpsb
sbb
stc
fwait
cmpsb
enter
push
sahf
xchg
jge
jl
out
dec
jo
mov
jae
dec
in
mov
out
inc
pop
jno
aaa
icebp
std
jg
repnz
xchg
and
addl
cli
sbbl
daa
jmp
jge
subb
rcll
aas
pop
mov
or
addr16
pusha
fistpl
add
notb
mov
ds
das
inc
mov
loop
add
rcr
out
push
inc
pop
inc
mov
cltd
out
gs
jl
and
mov
mov
sub
mov
push
xor
lcall
pop
dec
aas
fidivl
push
testl
inc
das
mov
in
das
push
popf
lods
or
mov
pop
pop
sbb
andb
mov
sub
xor
loopne
rcrb
sahf
out
aad
cltd
push
add
cwtl
dec
mov
daa
test
cmc
jbe
mul
rclb
push
dec
test
pop
in
fdivr
repz
mov
add
popa
mov
test
insl
mov
stos
xchg
xor
iret
or
jo
xor
test
fisttpl
mov
xor
out
cmp
fwait
cli
call
xlat
mov
adc
jne
cmp
dec
or
mov
mov
out
call
jl
add
xchg
push
jns
mov
pop
mov
pop
xor
lock
add
sub
loopne
adc
mov
mov
cmp
call
xor
bound
pop
out
lcall
mov
push
pop
orl
fidivs
or
lock
and
lods
or
pop
and
rcrb
jae
mov
mov
push
scas
test
mov
jecxz
pop
add
cs
xchg
adc
fmul
sub
sub
dec
add
lods
add
aam
dec
xlat
cltd
cmpsb
lods
sub
pop
sub
cmpsb
and
iret
pop
inc
popf
sbb
in
pop
sub
push
shll
mov
pop
xor
inc
jae
jno
popa
xor
hlt
cmp
incb
mov
mov
repnz
inc
push
xchg
mov
ljmp
and
push
dec
jmp
dec
mov
pop
add
xchg
rorl
cltd
xchg
outsl
in
lds
mov
jbe
adc
ds
inc
das
out
incb
push
gs
dec
insl
pop
xchg
xchg
test
outsb
mov
test
push
je
icebp
test
arpl
je
mov
loopne
fidivrl
jecxz
lock
push
js
push
or
scas
pop
jae
and
mov
int3
cs
push
sub
arpl
mov
jo
fnsetpm(287
fmull
int
aas
jb
mov
insl
lret
push
cwtl
jg
hlt
inc
xchg
dec
fdivrl
sub
ljmp
das
jle
cwtl
inc
ret
data16
ss
sbb
les
inc
xchg
das
std
fldt
loop
mov
mov
mov
mov
sbbb
iret
and
data16
pop
out
leave
and
fdivs
movsl
mov
scas
into
sbb
in
xor
out
jg
in
imul
xor
scas
mov
mov
mov
stc
es
adc
dec
xchg
inc
out
adc
aas
in
pop
daa
sbb
dec
ret
call
adc
cmp
ret
or
ret
mov
cmp
add
nop
gs
mov
lret
ljmp
pop
xor
adcb
dec
fbld
clc
jns
xor
cmp
xchg
mov
sahf
ficoml
jecxz
mov
pop
lods
sbb
mov
push
mov
rol
ret
test
xchg
imul
xchg
insb
stc
adc
jp
mov
mov
lcall
mov
ret
push
inc
dec
and
movsl
out
mov
fdivrl
cmpsl
stos
outsl
ljmp
adc
mov
push
sbb
or
dec
mov
pusha
jmp
aam
mov
into
negl
or
add
mov
sub
or
pop
dec
mov
and
sbb
xchg
mov
enter
popa
outsl
cmp
cmc
out
cmp
push
fmull
or
or
divb
stos
sbb
jle
sbb
adc
or
mov
lds
and
add
imul
jnp
sbb
dec
or
sub
mov
pop
or
jp
xchg
mov
in
push
mov
leave
pop
clc
lret
popf
aad
inc
outsl
or
movsl
push
out
xor
jecxz
jns
mov
data16
inc
dec
js
test
dec
out
adc
dec
jbe
in
icebp
stos
xchg
pop
loope
jl
inc
mov
mov
ret
mov
lret
lahf
jns
stos
insb
lock
int3
mov
movsb
dec
lds
adc
fs
ret
negl
ret
jle
ss
adc
test
mov
mov
sarl
jns
pop
push
scas
mov
cli
inc
daa
xor
test
jge
mov
cli
jne
cld
push
fistl
xor
sti
mov
aas
xor
repz
in
adc
dec
xchg
jg,pt
jmp
lock
add
mov
rol
xchg
xor
mov
lcall
push
inc
call
outsl
xor
jmp
mov
jae
mov
add
cmp
xor
xor
mov
sbb
push
cmpsl
mov
out
aam
repnz
xor
lahf
mov
pop
push
jmp
xchg
mov
mov
cmp
aad
in
mov
icebp
mov
neg
scas
lods
add
sbb
icebp
xchg
adc
dec
mov
inc
testb
mov
push
fimull
shl
dec
dec
mov
cltd
ss
repnz
les
imul
fucom
mov
sbb
jnp
aam
ss
xchg
xchg
pop
xchg
cmp
repnz
scas
lods
push
mov
mov
aam
mov
push
pop
sub
cmp
mov
jl
je
jg
movsb
into
adc
jo
cld
fsub
daa
push
lret
pop
lcall
mov
pusha
adc
jnp
mov
cmp
cmp
mov
gs
lods
pop
dec
push
ja
fisubrs
or
in
lret
sbb
nop
jle
rorl
push
sahf
dec
cmp
push
pop
test
pop
pop
dec
jae
push
cmp
cs
adc
sbb
mov
cmp
test
leave
cwtl
divb
into
aad
lods
stc
jns
push
mov
and
pop
push
mov
mov
push
push
les
cmpb
push
xchg
aad
jae
adc
xchg
cmp
testl
ret
fnsave
aad
mov
popa
push
add
and
sub
dec
mov
mov
add
stc
lock
push
or
adc
or
clc
sbb
xchg
mov
dec
inc
adc
fstpt
xor
and
push
add
add
dec
out
mov
pop
xchg
push
push
lcall
jno
lds
mov
and
push
fnstsw
test
push
fdivrl
addr16
or
pop
pusha
and
les
cmpl
push
sub
pop
insl
pop
mov
fsubrl
mov
inc
lds
out
out
or
pop
sti
mov
and
xchg
cltd
push
fstps
repnz
inc
cmp
test
cld
stc
jmp
mov
cwtl
add
fsubl
stos
jne
mov
mov
dec
and
loop
data16
push
jns
pop
pop
sbb
add
xchg
push
push
pop
outsb
das
jno
mov
sub
xor
jp
pop
xor
stc
jns
inc
mov
mov
fdiv
lods
cmp
pushf
mov
inc
outsb
or
push
dec
push
and
or
sub
stc
sbb
cltd
xor
std
xor
cmc
sbb
push
scas
or
aas
repnz
std
cwtl
push
and
imul
fcomps
xlat
push
mov
dec
jle
iret
daa
stos
lea
bndstx
sub
adc
pop
push
xor
clc
inc
lea
xchg
push
dec
sbb
sahf
ss
out
enter
bound
add
cmc
outsb
call
adc
fisttpll
das
jle
movsl
mov
pop
fisubs
loope
orb
fsubrl
dec
cltd
pop
dec
int3
adc
cld
cmp
mov
fs
jbe
clc
adc
and
fnstenv
std
popf
movsl
shrb
std
clc
sbb
mov
or
and
jecxz
mov
arpl
push
dec
mov
out
and
mov
out
lods
inc
loop
xchg
bt
mov
xchg
test
push
xor
es
insb
out
aad
push
out
test
aad
inc
movsl
les
mov
xchg
sub
or
adc
cwtl
repz
test
mov
ds
lods
inc
sub
jmp
inc
imul
add
mov
cltd
push
pop
gs
or
test
ja
mov
add
fcmovnu
mov
out
cltd
jno
pusha
adc
xchg
insb
and
test
push
and
out
xor
mov
loope
popa
in
outsl
ficoms
cld
and
aas
jo
push
xchg
int
add
inc
jle
mull
add
or
mov
push
es
dec
dec
and
dec
leave
ds
test
adc
pop
mov
rol
loopne
addr16
int3
inc
ret
add
push
clc
or
lret
xchg
ret
test
mov
adc
jg
cmp
sbb
xor
cmpl
inc
cmpsb
and
outsl
jge
test
xor
push
or
or
les
cli
sbb
aad
adc
shl
cld
xchg
cltd
jecxz
outsb
mov
mov
inc
and
in
imul
pop
mov
test
repnz
cld
sbb
pop
add
push
ja
push
hlt
pop
insl
jbe
sub
call
out
in
in
mov
or
js
push
xchg
sub
xchg
enter
negl
jmp
ret
cld
inc
xchg
sub
jns
les
push
and
out
mov
push
mov
cmp
jp
add
lret
imul
mov
hlt
mov
inc
mov
sbb
xor
and
lods
push
rcll
cld
rclb
inc
dec
fcomi
or
and
mov
shlb
out
pop
push
inc
cmpsl
inc
cmc
push
into
fdivs
mov
mov
outsb
and
iret
mov
lods
dec
insl
rorl
mov
imul
cmp
adc
push
ja
loopne
or
pop
lods
roll
mov
out
inc
addr16
imul
mov
xor
dec
xchg
lock
xor
pusha
push
and
adc
mov
icebp
pop
movsl
cmp
sub
ljmp
jle
enter
vmovddup
sbb
jg
mov
fs
cmp
pop
ss
js
pop
lock
xchg
jp
push
mov
push
cmp
inc
jl
movsl
mov
cmp
xor
fiaddl
and
ret
imulb
inc
mov
fistl
jae
add
fcoms
adc
adc
cmp
or
addr16
loope
xor
mov
xchg
testl
inc
rcl
test
addr16
inc
xor
push
daa
and
ja
sub
dec
fsub
cwtl
dec
mov
int
hlt
cmp
int
lcall
jbe
inc
gs
mov
fidivrl
enter
jnp
jecxz
add
ds
shlb
inc
scas
mov
pop
roll
ss
ljmp
cmp
loope
fprem1
idivl
jl
inc
jecxz
data16
ja
je
fcomps
lods
clc
pop
aam
cld
sub
or
adc
mov
cltd
jae
aad
mov
data16
mov
or
loope
cs
sbb
shrl
std
setnp
mov
sbb
push
xor
lcall
cli
loope
es
mov
dec
pop
out
push
add
jne
std
movsb
shrl
cmpsl
ss
aad
dec
mov
and
jmp
jg
mov
pop
pop
jnp
cwtl
lret
lret
insl
push
fldcw
aam
or
fcomi
repz
lods
mov
repz
xchg
popa
mov
jle
fs
mov
rclb
repz
arpl
scas
jp
je
ret
jge
frstor
in
add
or
cltd
xchg
add
mov
das
mov
sahf
aas
push
into
adc
cmpsb
notb
cmpsl
fucom
adcb
ds
sub
scas
notl
adcb
pop
xor
sbb
stos
movsl
xor
stc
xchg
shlb
inc
das
push
cmp
mov
out
fcmovnbe
pop
imul
xchg
test
mov
sub
and
xchg
inc
xor
mov
and
cmp
test
jmp
pop
pushf
push
hlt
mov
dec
push
ds
add
cmp
imul
out
scas
andb
cmpsb
sub
frstor
xchg
jl
push
in
mov
ret
popf
cli
or
inc
push
xor
inc
fisttpl
ljmp
pop
aaa
adc
insl
test
lcall
cmp
mov
rorl
fsts
enter
inc
imul
sbb
imul
add
js
xorb
sbb
adc
incb
inc
mov
rolb
inc
in
aam
mov
mov
nop
pop
addr16
pop
adc
lcall
mov
push
and
adc
mov
stos
std
fstps
xorb
xchg
mov
jb
xor
push
push
xchg
in
jle
aas
cmp
adc
add
ret
stos
orl
lea
fwait
incb
push
mov
ja
adc
addr16
out
inc
negb
jl
cmp
cmp
pop
inc
lods
push
stc
roll
bts
and
lret
xlat
pusha
cmp
push
ret
js
popf
shr
sbb
stc
mov
xlat
aam
xor
adc
stc
mov
xor
lret
adc
lret
lcall
pop
adc
mov
inc
cmc
popl
repz
std
inc
xchg
scas
dec
mov
mov
xor
sub
lock
jno
mov
pushl
dec
mov
cwtl
push
add
ja
or
call
aam
mov
sbb
mov
or
push
mov
sbb
out
push
loopne
pop
gs
mov
adc
mov
mov
loopne
add
adc
inc
pop
push
dec
pop
icebp
aam
lcall
ret
lds
xor
xlat
out
hlt
lret
pusha
ss
adc
adc
aad
gs
sub
bound
mov
out
fbld
test
nop
add
orb
xchg
mov
pop
mov
movsl
push
enter
mov
rorb
pusha
cld
lods
icebp
jnp
sbb
xchg
fimull
in
add
adc
cmp
push
cmp
leave
int
pop
lret
and
lods
aaa
rcrb
out
mov
xor
xchg
loope
aam
in
push
ret
insb
ret
ljmp
arpl
xchg
mov
or
push
jo
cmp
adc
rorl
sub
cltd
loope
push
outsl
xor
scas
dec
dec
dec
cltd
inc
jnp
sbb
add
dec
arpl
test
xor
push
cmp
mov
sub
imul
mov
in
or
mov
ret
push
xor
xchg
pop
mov
ss
popf
cltd
xchg
in
jmp
popf
pop
or
adc
add
adc
pop
and
pushf
ret
rorl
lds
lods
cmp
sbb
inc
mov
xchg
andl
xor
scas
or
and
mov
jns
in
push
mov
sub
pop
add
or
push
inc
rclb
scas
mov
fbld
jo
ficoml
fisttpl
inc
xor
adc
aad
cmpsb
push
out
pop
and
mov
push
pop
aad
leave
pop
leave
or
ret
insl
push
xchg
pop
lea
arpl
ss
cmp
inc
sub
shrb
aad
lock
and
mov
lcall
stos
xor
inc
jmp
stos
xchg
fdivl
cmp
out
int
and
xor
xor
bound
cmp
out
cmp
loopne
xchg
inc
popf
sbb
addl
inc
insl
es
and
repnz
adc
mov
xchg
xor
icebp
sub
jns
xchg
mov
stc
mov
push
push
es
je
nop
gs
add
xchg
cmp
push
sub
pop
xchg
ljmp
add
clc
sub
xchg
dec
mov
stos
out
jbe
mov
mov
pop
mov
roll
aas
push
icebp
imul
lret
push
xor
loopne
nop
popa
jp
mov
cli
adc
lods
pop
cmp
mov
lcall
lea
pushf
addr16
movl
aad
scas
mov
sub
cmp
xchg
popa
lods
xchg
pushf
mov
and
jmp
out
push
lds
mov
scas
fidivrs
push
orb
test
ret
push
xlat
movsb
or
sti
sub
imul
cltd
pop
nop
jmp
movsb
fsubl
stos
jb
or
or
sbb
loope
cmp
mov
nop
cmp
pop
popa
add
add
and
xchg
mov
pop
ficoms
cmovle
int3
aad
shlb
pop
cmc
xor
jae
jmp
push
cmp
mov
call
data16
test
xchg
fmull
mov
pop
ror
in
lret
sbb
das
or
mov
gs
outsl
mov
xor
je
sub
ja
gs
mov
push
or
mov
inc
ljmp
jmp
nop
and
inc
sahf
and
daa
cld
cmp
pop
push
xlat
fildl
ss
inc
mov
pop
and
jmp
push
movsb
clc
push
xchg
fisttps
cmp
iret
or
lock
push
dec
fbld
jmp
inc
outsb
add
sbb
aas
addl
aam
je
jb
divb
mov
data16
cmp
jp
xchg
mov
mov
scas
mov
ds
insl
sbb
filds
sti
cmc
adc
mov
loopne
jnp
mov
cmp
sbb
inc
pop
sub
bound
cli
push
mov
jo
cmpsb
movsl
mov
shll
fwait
push
adc
or
pop
mov
repz
vpsubd
sbb
dec
mov
mov
pop
mov
int
shl
xor
gs
sbb
out
jno
mov
sbb
clc
fists
push
jg
dec
sbb
ja
push
inc
sahf
or
jg
repz
mov
std
out
push
fldt
jnp
cmp
cmp
pop
sbb
dec
sahf
xor
xchg
out
int3
test
add
push
push
std
pop
inc
jg
aas
mov
xchg
in
stos
dec
push
fistps
cmp
mov
xor
in
lret
in
dec
push
jp
sub
cwtl
sbb
loopne
fwait
repz
inc
cltd
xchg
inc
aas
cmp
icebp
ret
adc
nop
mov
xchg
mov
popf
mov
adc
loope
cltd
and
mov
xchg
cmp
clc
push
inc
daa
aam
lret
dec
jmp
sahf
push
or
fisubs
and
stos
ficoml
adc
mov
inc
mov
xchg
push
and
in
fnstcw
aad
lret
ficoms
loope
mov
jo
and
das
into
rcrl
cmpb
and
xor
xchg
pusha
or
jne
clc
popf
leave
push
into
popf
jl
sub
jae
std
mov
mov
add
or
in
repnz
mov
out
cmp
out
xchg
xor
movsl
fwait
jg
and
lcall
xchg
mov
cmp
aas
and
les
movsb
sti
and
pushl
sub
ficompl
int
mov
mov
xchg
jns
cmp
mov
popa
inc
xchg
fstl
and
fsubrl
cmp
jne
sub
or
inc
leave
mov
sub
test
inc
std
stc
pop
adc
xchg
sbb
push
cwtl
and
stos
or
jmp
mov
dec
mov
add
in
dec
stos
add
mov
xor
lods
mov
sub
lock
fisubl
mov
mov
int3
ret
push
and
mov
xchg
push
icebp
je
add
loopne
negb
les
and
outsb
sti
aaa
jno
ljmp
mov
inc
mov
or
stos
mov
mov
and
sbb
clc
mov
or
push
arpl
push
pop
xor
mov
test
mov
dec
adcl
insb
dec
or
inc
test
xchg
or
sub
cmpsb
int
and
xchg
mov
push
add
xor
imul
sub
xor
pop
push
scas
mov
jae
into
cmp
mov
imul
stos
push
sub
sub
mov
out
cmc
ss
fwait
push
test
xchg
out
mov
push
jne
loop
loope
fisubrs
cmpsl
or
ss
fwait
movsb
push
enter
loope
icebp
aad
cmc
addl
adc
mov
jbe
movsl
enter
sbb
jnp
call
fcmovu
add
push
test
mov
and
sbb
pop
into
fbstp
out
xor
mov
and
scas
stos
stos
out
sbb
stc
lcall
mov
sbb
inc
lods
adc
lahf
mov
lds
mov
push
inc
into
add
loope
cmpsb
inc
rorb
test
inc
xchg
sahf
sbbb
jmp
xor
mov
inc
dec
lods
fbld
mov
sub
movsl
adc
sub
cmp
out
xorl
pop
nop
jnp
loop
test
inc
sub
fbstp
test
jae
push
xor
repz
mov
xchg
or
add
and
subb
fnsave
lock
imul
nop
push
imul
and
or
das
mov
das
repnz
xchg
push
adc
test
int3
rcrl
fcom
or
push
pusha
daa
jns
cmp
bound
dec
and
sarb
push
js
and
pop
test
inc
add
add
cmpsl
xchg
inc
jae
stos
lods
lret
inc
mov
adcl
out
and
sbb
outsb
ja
push
out
iret
xor
lds
cltd
inc
push
xor
ss
mov
das
gs
insb
test
nop
cmp
fdivr
add
mov
hlt
stos
sbb
aad
push
pop
leave
push
sub
jge
aad
lea
lcall
mov
dec
and
and
add
push
ficoml
inc
out
lock
mov
ja
bound
loopne
das
jl
jns
imul
jb
and
divb
rorl
mov
pop
daa
dec
xor
inc
jp
rorb
hlt
or
mov
clflush
push
and
out
js
ss
daa
popa
imul
cmp
mov
fiaddl
in
mov
mov
jg
mov
lock
ret
not
int
imul
adcb
inc
sbb
in
add
daa
jae
adc
mov
and
pop
xchg
std
jnp
fwait
scas
push
ror
sbb
lock
fists
push
jg
jns
int
mov
adcl
inc
dec
pop
add
out
pushf
arpl
or
and
popa
lea
mov
clc
out
mov
test
mov
call
arpl
gs
mov
lret
cld
test
inc
leave
inc
fwait
roll
loope
stos
loop
mov
int3
inc
inc
sub
jmp
lods
pop
cmc
popf
stos
or
fbld
cmpsl
jg
sahf
pushf
outsb
pop
jecxz
mov
dec
insb
scas
test
xorb
iret
xchg
and
test
or
or
fistl
les
clc
sub
mov
mov
mov
mov
sti
and
fwait
sbb
dec
sub
inc
scas
cs
sub
ret
in
test
imul
ds
cmp
mov
ss
xlat
adc
jne
mov
cwtl
mov
xchg
sub
leave
jno
mov
imul
sbbl
jo
mov
test
jecxz
bound
add
decl
mov
push
ja
cmp
mov
hlt
mov
insl
jl
insb
lcall
xor
inc
pop
xor
cmp
mov
mov
push
cmp
adc
or
outsb
idivb
inc
not
nop
lret
xlat
and
xchg
into
mov
mov
xchg
xchg
aad
cmc
mov
cmp
sbb
js
pop
push
fmuls
ss
mov
pop
data16
add
xchg
out
dec
or
adc
lock
imul
stos
scas
inc
cmpsb
dec
stc
inc
adc
jo
push
mov
gs
shlb
repz
frstor
addr16
imul
adc
negl
adc
jge
gs
cmp
add
sbb
inc
xchg
lret
cmp
aam
push
int
cmp
mov
dec
or
cmpsl
into
out
out
je
lret
imul
into
enter
mov
clc
aaa
sahf
push
stos
and
xchg
roll
xchg
popa
xchg
inc
cmp
or
inc
jp
xchg
cmc
test
xchg
sbb
dec
in
aad
jnp
out
pop
jmp
pop
nop
ss
gs
add
xchg
mov
mov
ss
cmp
and
adc
pop
adc
or
and
or
or
test
mov
inc
sbb
jp
or
dec
std
in
push
mov
cmp
fdivr
cld
pminub
and
mov
in
loop
ds
or
cs
ds
mov
movsb
aas
mov
shl
icebp
dec
sbb
je
push
lods
adc
mov
pop
xchg
insb
in
mov
fcoml
movsb
popa
mov
adc
out
or
lea
lock
sub
xchg
lcall
inc
xlat
jge
sbb
les
mov
xor
pop
imul
fmuls
add
inc
dec
sbb
stos
icebp
mov
popf
xlat
lea
push
gs
xor
out
ret
xchg
mov
add
movsl
jo
add
movl
std
adc
and
cmp
es
mov
mov
jns
sti
adc
dec
sub
mov
jp
pop
sti
ds
outsb
xchg
inc
scas
lret
stos
in
in
fisubl
out
data16
ja
jb
maskmovq
imull
repz
mov
and
ficomps
xchg
push
xchg
add
in
mov
rolb
mov
pop
inc
fdiv
lds
pop
mov
xchg
pop
movsb
dec
and
mov
ja
add
cltd
aam
xchg
out
das
sub
dec
sbb
cmp
fmuls
jle
ret
inc
test
xor
stc
add
lds
cltd
cmp
or
out
push
jbe
push
mov
push
popf
jb
loopne
xor
pusha
jp
sub
mov
xor
je
push
outsb
imul
loope
scas
xlat
mov
inc
lods
int3
ss
lret
mov
dec
and
xlat
negl
daa
jecxz
adc
fcoml
int3
push
mov
negb
xchg
jmp
cmpsl
in
jmp
push
fistl
mov
adc
daa
aad
adc
sbb
jle
mov
xor
fcom
mov
fdivrs
movsl
call
xchg
call
and
into
inc
mov
cmc
dec
scas
test
fcmovnbe
inc
push
cltd
sub
sub
imul
shr
std
roll
test
lret
add
icebp
adc
sbb
iret
int
jns
cltd
inc
into
das
jecxz
sub
out
test
test
mov
pop
xlat
out
and
push
mov
mov
sub
repnz
pop
cld
dec
sub
and
js
test
dec
jbe
sub
dec
pop
jl
inc
imul
pop
xor
cmp
xor
mov
lods
jno
subb
lds
dec
test
push
cld
jp
mov
imul
jmp
sti
cmp
outsb
xor
addl
outsl
xchg
dec
jo
xchg
adc
sbb
test
add
cmp
es
repnz
mov
lods
cmp
sub
cmp
rcl
mov
xor
xchg
into
aaa
pop
xor
jae
mov
inc
sub
test
cmc
into
add
sub
mov
ss
cltd
mov
mov
and
icebp
pop
enter
jecxz
mov
mov
test
ljmp
cmp
mov
in
into
add
mov
popa
mov
in
mov
push
sub
or
jnp
mov
in
mov
and
shlb
pop
loopne
subb
jp
cmp
aam
mov
jne
gs
and
adc
inc
inc
dec
lret
sbbb
jl
cli
xchg
adc
in
inc
inc
fcos
xchg
fistl
imul
std
mov
pop
mov
sbbb
xor
ds
jbe
mov
or
xchg
ss
sub
adc
sbb
movsl
xchg
dec
cmp
insb
imul
dec
push
imul
pushf
ret
stos
adc
mov
jb
cmp
aam
cmpsl
mov
mov
xchg
cli
into
movsl
dec
dec
mov
xchg
jno
loope
xor
test
mov
adc
pop
rolb
dec
pop
loope
xor
jbe,pt
lret
sarb
adc
add
popf
dec
jb
sbb
jl
scas
or
shlb
sbb
into
jns
pop
fsubrl
pushf
fildll
mov
lret
jno
jl
inc
mov
inc
mov
imul
mov
mov
or
mov
mov
mov
hlt
ds
mov
cmp
or
inc
out
cmp
pop
dec
adc
js
in
fistpl
int
or
cmp
mov
dec
pop
or
test
fs
add
stos
mulb
data16
or
imul
sub
test
dec
sbb
sahf
inc
stos
insl
ds
inc
cld
popa
mov
repz
jne
adc
xchg
dec
lcall
or
sub
jmp
pop
popa
xor
in
js
sbb
mov
push
xchg
xchg
or
out
lods
test
jb
adc
mov
sbb
jno
out
mov
into
dec
xor
adc
popf
push
push
data16
sahf
sub
popf
adc
gs
imul
pop
mov
xchg
push
jmp
stc
jne
push
push
idivb
xchg
loopne
mov
clc
sahf
lret
sub
adc
lahf
cmpsl
inc
movsl
and
xorl
pop
push
and
jp
hlt
sbb
rorb
mov
mov
jns
jb
sub
fisubrl
cmpsl
pop
lahf
add
dec
iret
pop
or
cmc
test
mov
mov
loopne
adc
mov
pop
add
das
test
inc
cmpsl
dec
movsb
movsb
aad
inc
and
jae
add
cmp
syscall
pop
xor
sbb
pop
jns
inc
jno
sub
jns
cwtl
shlb
fadd
sbb
mov
into
daa
rsqrtps
inc
pusha
adc
arpl
add
stos
hlt
or
in
jle
popf
call
fs
cmova
or
aam
in
jno
ret
subl
xchg
ret
shll
pop
sbb
in
jno
pop
cwtl
jnp
lcall
xacquire
je
pop
test
mov
push
xchg
sbb
rorl
sbb
in
and
ds
xor
or
push
sbb
scas
inc
dec
inc
and
push
out
mov
int3
adc
and
pop
dec
imul
out
addl
adc
xor
add
outsb
dec
sbb
mov
pop
mov
cmp
jae
sti
mov
mov
push
and
das
divb
icebp
aad
popf
call
sbb
test
push
ja
fchs
adc
jmp
in
repnz
arpl
in
push
imul
push
in
cltd
mov
add
and
adc
repz
movsl
or
inc
and
lock
int3
pop
jl
push
cmp
lcall
sub
mov
push
lea
testb
jno
das
popl
or
mov
cmp
cs
sub
sub
daa
pusha
pushf
std
jae
dec
mov
ds
lods
mov
fcomps
in
shrb
mov
cmp
sbb
fsubs
or
inc
mov
loop
push
js
xchg
loopne
aad
jns
cwtl
lahf
nop
icebp
data16
pop
xchg
pop
push
repnz
cmp
xor
mov
mov
inc
mov
lds
enter
jnp
aaa
add
push
cld
mov
add
mov
mov
fisttpl
aam
jns
fs
push
dec
fcmovne
jecxz
add
lods
ljmp
cmp
dec
add
cwtl
out
sbb
mov
subl
cltd
dec
out
cmp
sbb
cs
xor
out
mov
imul
push
jb
xchg
xchg
pop
mov
mov
pop
adc
mov
and
hlt
xchg
dec
push
aas
mov
xor
bound
mov
ja
cltd
rcl
in
shrl
pop
fldt
jo
scas
cmp
ret
add
sbbl
rorl
xor
fpatan
mov
in
or
cld
mov
ljmp
mov
cld
xchg
scas
xor
jae
jmp
arpl
je
int3
inc
lea
mov
mov
stc
loope
cmc
hlt
push
adc
ffree
mov
int
out
in
jo
xchg
icebp
mov
add
jle
lea
incl
mov
gs
inc
add
add
dec
or
mov
lret
push
pop
shlb
fldcw
imul
inc
or
das
fdivrs
jle
pusha
xor
mov
aas
sbb
dec
aas
lcall
insl
out
out
mov
bnd
pop
out
push
jg
mov
popf
sub
cmp
ljmp
push
js,pn
push
fmull
dec
in
or
jbe
outsl
pusha
push
sti
mov
jnp
stos
repnz
loope
pop
xor
cs
sub
cmp
sub
jp
xchg
iret
pop
ss
int3
clc
adc
movsl
xchg
sub
xorl
adc
xorl
dec
fidivl
mov
and
mov
stc
and
std
out
rclb
xchg
pushf
hlt
ficoml
lret
jp
fs
jnp
jecxz
push
jge
into
pop
fcompl
sub
cs
ss
xor
mov
std
mov
mov
repz
or
int
stos
ds
popa
sub
xchg
lods
sarl
or
stc
enter
or
sbb
push
cmp
mov
shl
stc
into
aad
into
addr16
push
jmp
test
xor
push
rcll
xchg
push
dec
clc
mov
push
daa
imul
cmpsb
push
cmp
sub
pushf
or
out
pop
out
dec
fmul
lods
rcrb
loopne
sub
cmp
xor
sub
jb
adc
xor
sub
xor
mov
mov
daa
rcrl
stos
dec
aad
jl
add
shr
and
jae
and
int3
mov
cmp
inc
shrb
jecxz
sub
ja
enter
cmpsb
popf
add
xor
push
xor
dec
orb
pop
pop
pop
insl
add
ret
loop
push
pushf
add
inc
mov
imul
rorl
push
push
push
stos
jne
aam
popa
xor
push
or
and
mulb
push
or
add
cmp
sbb
push
clc
mov
jecxz
dec
lds
mov
cld
stos
pop
ret
and
stos
int3
out
adc
xchg
jl
push
gs
cmp
pop
sub
dec
jae
sub
sbb
leave
into
into
dec
push
push
push
pop
pop
mov
fcomp
cmc
sbb
sub
addr16
and
fldt
idivb
push
lret
lock
shl
mov
rep
bound
jp
stos
adc
mov
jmp
sar
das
cmp
shl
iret
movsl
mov
mov
mov
dec
adc
test
rorb
sbb
cmp
add
jnp
iret
outsb
and
sbb
ds
adc
sahf
addr16
cltd
sub
test
xor
jno
fs
in
xchg
jp
scas
icebp
cs
lea
sub
sub
mov
xchg
xor
mov
pop
push
shll
sbb
mov
test
lret
hlt
or
enter
and
sub
xchg
orb
or
sbb
lods
xchg
jo
cmpb
dec
outsl
imul
stos
cmp
fcomps
xchg
shl
mov
idivl
mov
dec
or
cmp
cld
xchg
inc
sub
fs
dec
xchg
pop
in
jo
push
std
cmp
dec
sbb
fstpl
mov
rcl
pop
mov
adc
addb
jne
ror
dec
add
push
stos
inc
pusha
cmpsl
in
scas
add
sub
sub
or
mov
xchg
adc
loopne
push
lret
mov
fsubrl
inc
fs
lcall
ret
mov
dec
or
xchg
repnz
int3
xor
adc
sbb
or
cld
sbb
ret
imul
cltd
adcb
xlat
push
sbb
sbbb
out
mov
cli
inc
add
jmp
cmpsb
sub
dec
test
cmpsl
loop
dec
lods
inc
pop
into
cmp
fsubs
xor
mov
cld
ss
insb
pop
mov
sub
and
stos
orb
call
sti
adc
xchg
sar
xchg
xor
imul
inc
jne
push
sub
push
lds
mov
cmp
adc
popa
or
jo
and
adc
adc
mov
fs
loope
cmpsb
inc
mov
sub
xlat
cmp
incb
ret
aad
add
or
push
pop
repz
out
aam
movsb
inc
mov
neg
xor
sub
jge
imul
pop
jbe
pushf
add
xchg
inc
jp
sbb
clc
les
jnp
push
bound
pusha
bound
in
add
jo
sarb
cmp
xchg
mov
push
aaa
add
arpl
and
gs
cwtl
inc
push
inc
insb
push
int3
cli
in
pusha
pop
cmp
aam
icebp
fs
aaa
imul
mov
mov
push
add
push
cmpsl
sbb
pop
movsb
sbb
mov
loope
adc
adc
mov
sbb
and
ss
iret
pop
inc
add
inc
insb
movsb
xchg
mov
sbb
adc
push
stc
mov
fdecstp
repz
jnp
cmpsl
rcll
call
es
fdivs
cmc
in
shll
fimull
int
xor
and
movsb
mov
popf
out
xchg
out
cmpsl
cli
inc
je
stc
in
adc
and
mov
out
fmull
pop
push
out
pop
cmpsb
cs
jbe
xorb
aad
and
aas
aas
push
lcall
adc
jno
mov
ret
sub
inc
dec
faddl
fldenv
lret
push
cmpsb
dec
jnp,pn
movsl
mov
scas
movsl
je
mov
pop
xchg
mov
ljmp
rcr
out
mov
aas
xchg
xchg
movsb
inc
icebp
pop
loopne
push
inc
push
push
lock
or
mov
inc
arpl
mov
popa
and
xor
hlt
xchg
icebp
sub
pushf
loopne
adc
adcb
jo
data16
nop
in
js
push
mov
in
scas
iret
pop
rcl
mov
jg
pop
sub
fsts
imul
lds
push
xchg
add
dec
ljmp
sti
pop
rcr
pop
jecxz
aas
insb
outsb
lret
push
int3
xchg
sarl
add
push
scas
loop
divb
in
js
scas
push
iret
mov
push
and
fimuls
dec
jo
jnp
aad
cmp
jp
aad
in
xchg
push
cld
dec
pop
mov
mov
cmp
insb
addr16
sub
addr16
aad
or
test
cmp
sbb
pop
mov
es
dec
scas
ror
call
sub
mov
outsl
stos
outsb
inc
sbb
mul
movsl
mov
in
dec
jno
jmp
mov
lds
je
cmp
adc
adc
mov
addr16
dec
popa
into
push
adc
mov
or
sarb
sub
dec
jno
sbb
mov
mov
cli
insb
jle
pop
fwait
rorl
in
xchg
inc
sub
icebp
dec
jge
mov
std
adc
jne
ljmp
sbb
push
adc
dec
and
add
sbb
cmp
cmpsb
xor
sub
pop
jo
jo
push
pop
sahf
lcall
pop
int
xor
mov
or
push
pop
add
and
pop
or
int
cs
cltd
call
mulb
repz
nop
mov
mov
or
ja,pt
das
incb
ret
movntq
rcrl
daa
xorl
imul
enter
fisubs
adc
stos
sub
dec
or
push
sbb
cmp
cmp
pop
data16
fcomp
cmpsb
mov
gs
mov
jb
mov
arpl
adc
add
int
dec
or
and
or
outsl
sbb
push
in
mov
cmp
sbb
jns
sub
rclb
fdivl
and
and
in
mov
add
adc
mull
test
cmp
xor
ret
inc
jmp
cmp
push
xchg
dec
dec
fs
sbb
dec
and
cli
inc
scas
and
std
lods
mov
divb
scas
jle
dec
mov
jne
jg
rcrl
gs
clc
popa
lods
adc
xor
sbb
ret
pop
xor
fldcw
mov
es
dec
mov
mov
or
jno
cmpsl
movsl
mov
fstps
pop
mov
push
mov
cmp
jnp
or
fidivl
out
push
mov
sbb
mov
dec
cld
lods
inc
add
or
insb
dec
pop
mov
sbb
pop
or
cmp
adc
mov
shlb
sub
jge
mov
or
mov
loop
xchg
nop
sub
dec
rorb
sbb
cmpsl
repnz
cmpsb
aam
ljmp
mov
clc
mov
cmp
clc
scas
jle
adc
ljmp
stc
nop
cmpb
xchg
dec
pop
xor
jae
xor
dec
sbb
fwait
xchg
add
jne
insl
shrb
adc
out
and
data16
jmp
sub
lock
leave
jno
and
scas
adc
imulb
xor
mov
pop
sub
xchg
popl
mov
roll
pandn
xchg
mov
ss
test
and
xor
inc
into
lahf
rclb
pop
in
push
mov
push
add
xchg
jp
outsl
fiaddl
sub
aas
outsb
test
test
mov
inc
mov
mov
ret
pop
push
inc
ss
or
or
rcll
sbb
push
in
dec
sub
add
jle
insb
add
int
cmp
fldl
repz
sub
mov
imul
call
das
daa
lret
mov
inc
arpl
sbb
jnp
add
bound
sbb
cmp
fnstsw
test
sahf
aaa
adc
dec
inc
jmp
cmp
jo
fs
mov
andl
and
dec
sbbb
pop
gs
push
ret
ja
xor
hlt
push
push
sub
loopne
sbbb
jmp
mov
fbld
mov
outsb
or
cmc
mov
and
out
lret
cltd
sbb
lods
xlat
sub
mov
in
lret
push
mov
dec
and
pop
sub
mov
or
jmp
mov
jle
push
and
jo
adc
fstpt
cmpb
pop
addr16
cmp
imul
and
stos
jp
cmp
mov
ljmp
jno
in
sub
pop
jge
dec
into
cmp
xor
dec
xor
fnsave
jo
jmp
retw
pop
mov
icebp
xchg
iret
ffree
cmpsb
mov
pop
test
adc
cmpsl
fadds
mov
pushf
adc
sti
jle
pop
pop
int3
sbb
cmp
jb
test
dec
mov
or
cmpsb
shlb
shrl
mov
out
fwait
jg
in
lret
mov
mov
testl
cmp
adc
repnz
or
mov
aaa
ret
divl
clc
xor
in
xor
jmp
jae
mov
xor
inc
outsb
cmp
ss
xchg
cmp
pop
int
xor
ret
bound
dec
adc
inc
sbb
test
push
sbb
js
and
dec
push
stos
cmp
imul
inc
cwtl
out
adc
ds
imul
jg
pop
pop
ljmp
pusha
out
ficoms
dec
sbb
lahf
push
lods
bound
xor
rolb
dec
mov
mov
or
inc
iret
add
and
hlt
add
lods
test
pop
fsubrl
mov
push
mov
add
cwtl
lods
lahf
ss
xor
insb
sarw
jp
movsl
fisubrl
out
js
daa
or
inc
in
xor
shll
dec
stos
icebp
push
pop
aas
shrb
jmp
sbb
mov
jb
popf
dec
inc
das
enter
bound
sahf
adc
cmp
out
xchg
outsl
fisubs
pop
sub
and
outsl
sbb
sarb
sti
sub
add
dec
roll
or
sub
mov
xchg
pop
or
cmp
sbb
mov
mov
std
js
mov
mov
stos
es
or
adc
pusha
repz
adc
je
xchg
int
mov
cmp
cwtl
add
jle
lret
testb
cli
or
loopne
adc
movsb
sub
sbb
sbb
and
jle
push
pop
gs
lock
sti
pop
inc
stos
js
stos
jne
stos
sahf
mov
je
loopne
ret
out
mov
in
xor
xchg
leave
shrl
and
fadds
jl
and
pop
js
pop
movsb
orb
pop
shl
stc
lcall
dec
sahf
shl
into
fnstcw
in
cmp
test
fwait
lods
sbb
mov
xor
jecxz
push
pop
rclb
movsb
mov
ret
jl
call
test
xchg
mov
out
fiadds
dec
lds
jge
cli
jl
cli
xchg
ds
xchg
push
sahf
cli
jmp
push
jb
dec
ljmp
pop
inc
popa
dec
aas
pop
aam
incl
stos
stc
sti
mov
repz
mov
dec
xor
jge
daa
pop
loope
mov
add
ss
imul
out
jecxz
mov
or
stos
lds
push
fdivl
pusha
movsb
je
xchg
mov
pop
loope
jp
popa
push
pop
adc
aas
dec
sub
push
inc
sbb
push
ret
fmuls
mov
cmp
daa
xchg
adc
jno
or
dec
push
andl
mov
sbb
repz
in
bound
movb
dec
gs
out
adc
repz
sbb
inc
pop
imul
shrl
js
mov
xchg
mov
pop
xchg
adc
sub
arpl
aas
cmc
ja
adc
dec
lret
or
mov
mov
lds
inc
lock
inc
inc
jge
and
sub
test
std
subl
push
dec
xor
mov
mov
push
cmp
push
addl
pushf
jb
or
push
mov
dec
pop
mov
scas
scas
cmp
mov
inc
shl
aaa
jns
push
sub
cmp
mov
sahf
insb
inc
dec
cmp
movsb
xor
loop
arpl
mov
cmp
arpl
sbb
sub
in
inc
stc
call
sub
mov
pushf
mov
fistpl
jo
push
jo
pushf
cli
es
dec
mov
daa
add
in
lods
sub
gs
fldt
cmp
cmp
data16
xlat
imul
dec
sbb
mov
pop
mov
sub
iret
push
inc
scas
cli
lret
fwait
mov
fwait
sbb
add
sbb
lods
loopne
fs
seta
jno
fwait
sarb
into
inc
pop
push
push
scas
hlt
mov
testb
add
cmp
mov
fwait
add
and
sub
pop
fcomip
pop
adcl
sti
cwtl
or
repz
insl
test
adc
jmp
insl
in
test
in
fadds
mov
pop
stos
adc
pop
mov
fisttpll
pop
loopne
sbb
test
mov
xor
mov
sbb
dec
inc
pop
int
add
mov
shlb
out
cmp
insb
ss
mov
shlb
sub
add
cmp
ljmp
daa
cmp
mov
inc
pop
je
xor
imul
int
adc
mov
arpl
and
daa
adc
fwait
pop
lcall
pop
mov
fidivl
gs
pop
rorl
add
aad
fucomip
data16
dec
xchg
or
int
adc
pop
jo
lea
jnp
jge
push
sbb
mov
decl
test
aaa
sarb
mov
dec
pop
xchg
add
or
push
pop
jbe
mov
cmp
sbb
xor
jb
test
ret
popf
idiv
and
imul
xor
mov
pushl
sub
rcrl
les
xor
aam
sbb
pop
adc
mov
mov
push
push
stos
mov
mov
cld
xchg
cmp
mov
incl
mull
adc
rcrb
cs
jle
cltd
sahf
inc
fistps
lret
nop
imul
dec
aam
push
fstps
or
mov
decl
lds
and
gs
dec
cmp
jae
jp
mov
inc
sub
sbb
and
popf
fidivs
jecxz
sti
lret
push
std
lret
fidivrl
les
lcall
adc
push
or
int
ds
xchg
adc
push
pop
mov
inc
call
scas
repz
inc
out
fdivl
cltd
add
and
xor
mov
or
aas
jmp
sub
loopne
and
out
flds
fldenv
push
insl
mov
outsl
pop
insb
push
stc
mov
and
mov
aaa
jl
ljmp
scas
xchg
sarb
adcl
adc
xchg
jne
cmp
out
sbb
dec
shl
leave
jg
jnp
lods
mov
insl
xor
mov
fdivrl
je
jne
inc
inc
shlb
stos
mov
push
test
mov
lods
cmpsl
int3
pop
cmp
rcll
inc
and
push
ljmpw
sahf
dec
cmc
xlat
test
pop
push
je
mov
hlt
xchg
mov
or
sbb
fidivl
xchg
jns
sub
adc
mov
inc
out
xor
pop
pop
pop
jo
scas
jns
js
add
test
mov
int
jno
or
mov
cs
andl
loopne
cs
mov
cmp
xchg
and
jp
rep
mov
clc
jbe
mov
xchg
dec
je
jo
scas
outsl
sub
fs
xor
mov
jno
adc
sub
cmpsb
jl
stc
daa
mov
cwtl
mov
sub
xchg
xlat
pop
loopne
inc
shll
jp
sbb
mov
jge
push
loope
push
and
cmpsl
inc
daa
rolb
xor
hlt
and
mov
cmp
adc
sub
jg
sbb
data16
add
insl
mov
xor
in
xchg
sahf
clc
sbb
inc
dec
cmp
fldt
pusha
cmp
and
or
cmp
mov
mov
sub
dec
aam
scas
xchg
fldt
lahf
cmpsb
adc
mov
lds
movlps
stos
sbb
sbb
jo
loopw
mov
aaa
sbb
clc
mov
ss
sub
dec
push
lods
fwait
dec
sbb
xchg
sahf
push
dec
mov
xor
scas
aad
sub
jns
ljmp
ljmp
push
movsl
ss
pop
dec
push
add
cmpb
cmp
repz
cmc
js
int
imul
inc
gs
mov
andl
xchg
jmp
add
adc
hlt
jecxz
dec
out
adc
lds
mov
inc
stc
inc
divb
out
lcall
push
adc
clc
fists
out
dec
mov
pusha
test
outsb
lods
ret
jl
lea
dec
icebp
xor
mov
mov
mov
popf
xchg
push
push
xor
loope
cmp
andb
mov
and
test
dec
or
imul
fwait
in
test
shll
or
lock
jg
dec
add
jge
iret
sti
enter
cmp
in
or
jnp
adc
jo
add
and
add
jns
in
mov
mov
sub
sqrtps
scas
sbb
aam
sub
data16
push
adc
fdivr
jmp
pop
pop
test
xor
pop
sti
pop
jmp
lods
pop
dec
xchg
mov
add
inc
mov
mov
add
mov
stc
lds
xchg
shll
mov
aaa
and
clc
repz
mov
mov
loopne
mov
push
mov
jne
aam
adc
jae
mov
mov
mov
aas
cmp
aas
push
enter
scas
sbb
pop
or
cmp
dec
cmpsb
loopne
fmull
jne
push
outsb
cmpsl
shrb
lea
push
dec
jp
rcr
or
imul
or
lods
mov
jmp
ss
or
jl
xchg
and
adc
xlat
repz
pop
out
call
dec
sbb
stc
jecxz
or
xchg
adc
dec
mov
int3
clc
lret
dec
add
adc
mov
inc
inc
adc
aam
cld
rcl
negl
push
int3
bound
arpl
mov
xor
add
cli
add
push
inc
gs
add
lcall
sbb
mov
jo
ja
adc
ret
test
inc
xor
mov
mov
incl
insb
mov
adc
xchg
jne
jmp
scas
inc
xlat
mov
int3
into
pusha
jb
test
jne
ja
ret
repnz
adc
int
lret
test
pushw
scas
mov
jae
aam
xor
mov
fldt
adc
mov
out
clc
mov
and
enter
xorb
xchg
test
loop
sbb
nop
cmp
movb
jno
xchg
add
leave
movsl
xor
cmpsl
lock
mov
inc
imul
cli
icebp
out
fisttps
insl
adc
divb
adc
jmp
add
lods
and
sbb
in
aaa
addb
mov
repnz
lods
ss
mov
shl
mov
mov
xchg
cld
inc
cld
jg
rorl
jae
shll
int
or
andl
cmpsl
pop
jne
pop
inc
and
in
mov
cmp
xor
xchg
xchg
add
xor
lahf
add
movsb
inc
mov
and
sub
fistpll
adcl
ljmp
or
cmc
xchg
arpl
pop
outsb
loope
sbb
js
mov
es
repz
out
lahf
xchg
fs
sbb
int3
or
push
xchg
aad
pop
fcoml
jne
and
ret
push
stc
add
xor
xlat
sbb
add
sub
mov
jne
fisubl
sbb
cmc
sbb
imul
cmp
out
add
addb
hlt
xlat
add
popf
sub
repnz
mov
pop
cltd
jnp
xor
pop
fisttps
or
mov
js
adc
nop
pop
pop
shlb
std
xchg
jbe
ret
arpl
shl
test
outsl
test
mov
sub
mov
xchg
add
mov
pop
sbb
mov
push
test
not
leave
mov
jmp
mov
rol
and
loopne
outsb
or
fwait
xchg
lods
out
fdivrs
adc
push
mov
pop
ror
ds
movsl
sub
inc
fists
sub
das
adc
jl
outsb
sbb
scas
xchg
ss
out
xchg
adc
rcrb
dec
sbb
je
cmp
lret
push
iret
inc
mov
mov
fldt
dec
or
scas
mov
xchg
call
lret
movsb
les
test
ds
xor
cmp
inc
or
push
mov
push
in
iret
call
fwait
sarb
mov
rclb
ljmp
jge
sub
enter
add
imul
rcll
popf
mov
cs
ljmp
call
sbb
das
fcmovne
imul
pop
adc
loop
fsubr
notl
push
lods
sbb
dec
addr16
pop
cmp
sub
and
lahf
in
pop
cli
sbb
lods
aam
jl
xor
es
jns
lahf
jecxz
add
stos
push
inc
data16
outsl
mov
test
icebp
fldcw
mov
pop
push
fs
fdivs
sbb
xlat
out
rolb
push
ss
push
xor
stc
inc
cld
push
xchg
dec
in
xchg
push
test
iret
ret
scas
cmpb
popf
insl
pop
pop
mov
popa
orl
push
mov
xchg
push
pop
add
xchg
cmp
inc
ficoml
je
int3
xchg
jno
mov
mov
rol
pop
icebp
ja
cmc
ret
imul
and
leave
movsl
out
sbb
mov
icebp
ret
out
into
jle
push
cltd
mov
dec
jne
push
xchg
xchg
jg
out
mov
call
iret
imul
fidivrl
push
loop
in
sub
add
adc
scas
data16
enter
frstor
mov
adc
dec
mov
push
push
xlat
jmp
cmp
push
sub
cmp
pop
push
popa
and
adc
cmp
sub
cld
jle
loopne
inc
fsubs
fisttpll
or
jo
rcr
and
mov
dec
sbb
push
in
mov
push
lahf
mov
push
cmpsb
inc
inc
daa
xchg
insl
pop
xchg
fildl
pop
rcr
jl
dec
mov
adc
push
out
addr16
inc
lcall
mov
loop
sarb
pop
bnd
pusha
into
pop
sub
xchg
std
inc
jns
ljmp
sti
dec
inc
rorb
xchg
daa
or
push
mov
push
jnp
dec
adc
sub
xchg
mov
jl
adcl
cwtl
xor
lds
push
cmp
sti
xchg
sub
mov
jge
inc
lret
lret
aas
shll
repz
fsubr
dec
jmp
jp
mov
add
cltd
ja
fdivs
xchg
and
jg
enter
fwait
jp
push
sbb
test
out
arpl
dec
inc
mov
push
lret
mov
dec
xor
push
jo
movsl
out
xchg
cli
lea
lods
lock
repnz
lods
mov
dec
aam
neg
fsubrl
mov
fcoml
test
repz
mov
sbb
std
xchg
sti
mov
fs
mov
and
mov
scas
ja
sar
push
mov
mov
xchg
cltd
mov
sbb
aam
jnp
ss
daa
test
cmp
pop
orl
mov
test
aas
lahf
cmp
movsl
dec
call
cld
pop
sbb
inc
movsl
xor
push
mov
push
xchg
jns
jno
or
jecxz
dec
popf
int3
push
cmpb
push
movsl
dec
shll
pop
ret
add
dec
scas
mov
adcb
aad
add
or
or
jbe
mov
es
sbb
sahf
sub
sbb
inc
mov
and
sbb
mov
sub
bound
insl
call
es
dec
pop
std
addr16
icebp
insb
push
add
test
dec
pop
lcall
shrb
test
ja
lahf
mov
mov
or
or
test
sub
mov
jae
test
std
dec
cmp
inc
xor
shrl
test
mov
imul
fucomip
and
gs
pop
out
fs
test
fstpt
aas
sbb
movsb
xchg
out
ret
xchg
inc
cmp
and
sahf
xor
outsb
dec
mov
add
adc
cwtl
mull
mov
out
jns
aas
mov
enter
fisttpll
jl
dec
rclb
dec
int
shlb
inc
les
mov
mov
xchg
adc
lahf
aaa
sahf
call
fisubrs
mov
jnp
cmp
inc
adc
jmp
inc
ffreep
add
ret
lcall
call
pop
mov
sbb
jb
push
clc
call
fists
cmp
push
dec
int
mov
xor
mov
je
push
mov
jnp
ret
addl
jle
pop
imul
jbe
and
repz
int
sbb
ds
push
jno
push
add
sbbb
sub
or
sbb
push
mov
adc
and
scas
and
ret
or
hlt
dec
std
jecxz
imul
cmp
mov
sar
icebp
push
jge
mov
push
push
push
mov
cmpsl
scas
mov
ret
mov
cmp
mov
mov
jbe
push
insl
fwait
adc
lock
push
lret
test
clc
mov
addb
sbb
int
mov
jge
jl
fistps
cmp
je
cmp
adc
fsubrp
scas
push
dec
xlat
xchg
push
cmp
jle
sub
loopne
sub
inc
and
push
movsb
cmp
push
inc
ss
push
sub
lea
push
jnp
dec
mov
mov
into
jg
cwtl
test
popa
jns
mov
mov
cld
push
sub
push
in
adc
cmp
mov
rolb
pop
xchg
and
fbld
call
xor
adc
imul
sub
rorb
outsb
cld
dec
ret
lahf
sub
fsubrl
add
jnp
xchg
into
add
iret
mov
lods
inc
cmp
in
push
lods
movsb
or
pop
idiv
enter
push
xor
fsubs
mov
jmp
lods
orb
pop
mov
insb
lret
or
movsb
pop
mov
xor
add
fdivrl
cmc
push
test
lods
cltd
xor
les
and
movsb
sub
push
sub
cmpb
xchg
mov
pop
fwait
jecxz
adc
add
out
int
cli
adc
in
roll
int3
mov
inc
cmp
mov
sub
mov
add
mov
jmp
inc
in
movsl
outsb
pop
lods
into
cmp
inc
sub
jns
sbbl
shll
cmpsb
dec
cvttps2pi
mov
xchg
mov
pop
mov
nop
enter
negl
jae
mov
into
mov
repz
sbb
dec
add
sbb
add
jns
hlt
jge
lahf
and
mull
mov
push
xchg
in
jecxz
and
fadds
mov
jns
mov
jge
les
sub
xchg
push
nop
ja
cmpl
cmp
sbb
lds
repnz
out
mov
lahf
out
call
pop
inc
push
add
shrl
cmpsb
inc
mov
pop
dec
inc
push
cmp
shlb
repz
cmp
fld
enter
jle
xor
fcmove
cmp
add
or
mov
addr16
adc
adcl
sbb
mov
lods
int
push
cmc
sub
std
loop
enter
adc
stos
decb
lret
pop
leave
daa
jns
cmp
jnp
icebp
mov
addb
out
pop
mov
add
mov
je
lods
inc
xchg
push
lods
mov
lock
jnp
mov
popf
loope
mov
cs
jns
sar
into
in
push
loope
inc
xchg
js
jle
mov
dec
add
test
rorl
pop
mov
push
ljmp
and
stos
pop
mov
inc
or
ds
sbb
jge
cmpl
cs
pop
mov
pop
sbb
stos
fmull
push
pop
in
outsl
std
sti
pop
es
adc
movsl
test
bound
pusha
lea
inc
inc
mov
pop
mov
dec
cmp
hlt
add
in
jmp
aaa
xchg
cmc
adc
popa
lods
jecxz
pop
cld
lods
cmp
bnd
ljmp
test
out
adc
int3
icebp
jnp
insl
sti
mov
fs
insl
jne
ret
or
push
fwait
add
mov
and
adc
int3
subl
jb
jp
sti
and
ja
or
orb
ljmp
call
aam
dec
mov
xchg
lods
ret
int
daa
loopne
jno
pushf
mov
xchg
lcall
pop
addb
jge
in
cmp
aaa
int3
mov
add
lods
clc
nop
ja
inc
mov
imul
cld
pop
in
jg
rcll
push
scas
arpl
jmp
js
imul
incl
push
das
test
and
test
adc
popa
stos
sub
sti
shrb
das
mov
mov
xor
cmc
inc
gs
arpl
push
mov
pop
add
in
push
pop
dec
inc
testl
mov
mov
fwait
cltd
movsl
hlt
rcrb
and
push
stos
inc
dec
sbb
int
dec
test
aas
mov
mov
jno
push
jne
leave
adc
loopne
call
lahf
stc
xor
dec
jp
jbe
mov
pop
jg
call
cmp
push
loop
sub
xor
jmp
out
into
int3
fs
jae
fdivr
insl
fcoml
rorl
outsb
xchg
sub
jno
fdivrp
cmp
in
mov
push
dec
mov
sarb
cmpsl
hlt
repz
in
cmp
ds
cmp
sub
fidivrs
andb
das
pop
int3
dec
les
dec
loopne
sbb
or
fldl
pop
fcoms
lea
jo
adc
adc
fdivrp
cmp
clc
fwait
insl
cmp
xchg
jp
inc
fsubp
and
ret
movsb
je
cmp
jne
dec
xor
pushf
jns
in
sbb
sbb
cs
sub
lods
mov
lahf
mov
loope
mov
mov
xchg
mov
xchg
lahf
push
fadds
jmp
pop
sahf
mov
sub
add
lods
add
fwait
inc
fnstsw
rcrl
ljmp
xor
cmpsb
pushf
inc
lods
clc
stc
sahf
jle
jl
sbb
rorl
and
hlt
push
mov
fistps
sbb
jnp
cmpsl
call
data16
lock
mov
cmp
and
sbb
cltd
ja
daa
sbb
mov
jecxz
inc
pop
xlat
mov
sti
int
sub
xchg
push
lock
es
mov
xchg
cld
andl
pop
jecxz
iret
inc
pop
xchg
mov
rcl
fdivrs
fiaddl
xchg
popf
sub
adc
pop
inc
mov
or
and
lcall
cmp
or
outsb
lods
inc
nop
xlat
jns
lods
or
cmp
mov
pop
dec
addb
inc
jnp
lcall
push
xor
add
fadds
push
pop
xchg
stc
push
xchg
leave
ds
dec
les
push
movsb
jne
les
imul
or
or
cmpsb
mov
in
jnp
sub
xchg
jmp
mov
loopne
outsw
ret
add
inc
push
adc
or
rcll
arpl
pop
mov
mov
push
xchg
jge
sub
dec
mov
cmp
add
dec
pop
mov
xchg
decl
or
or
mov
outsb
repz
add
pop
xchg
push
jb
rcrb
imul
jns
daa
xor
push
inc
lock
push
xchg
pop
jne
add
arpl
out
sub
dec
xchg
mov
imul
gs
add
cmp
loopne
das
dec
push
mov
push
xor
adc
repnz
pop
scas
leave
adc
scas
addr16
xor
fstl
sahf
push
jg
sbb
jne
lcall
cmpsl
jnp
mov
sub
mov
add
adc
rclb
cmp
movsl
ljmp
test
not
punpckhwd
iret
inc
add
inc
xor
jg
das
sub
or
xlat
cli
adc
adc
xchg
lahf
dec
outsl
sub
add
bound
mov
and
imul
fcmovnu
sti
roll
jno
mov
mov
lods
stos
js
loopne
adc
in
inc
stos
mov
xchg
sbb
in
inc
scas
sbb
in
mov
cmp
lret
in
outsb
jb
loopne
out
dec
lds
and
mov
xlat
ljmp
and
int
loope
xor
out
add
cltd
std
clc
jl
out
cli
sbb
cmp
push
outsb
inc
lret
data16
jb
mov
daa
lea
movl
int
out
xorb
adc
xor
xchg
outsb
aaa
push
mov
sbb
mov
mov
push
incl
out
fcompl
and
notl
mov
push
out
mov
test
lret
fdivr
testl
pop
ret
shlb
and
and
fwait
sub
mov
mov
dec
push
xchg
js
repz
fdivrl
cmp
fcoml
dec
adc
data16
inc
cli
push
pop
mov
aaa
sub
in
lcall
push
and
daa
jle
mov
push
xlat
fwait
jecxz
repz
pop
lahf
testb
sarl
movsl
jne
sbb
out
xchg
mov
adc
negl
jns
cmp
mov
aaa
inc
xchg
mov
and
in
mov
push
jns
inc
out
cmp
mov
jno
add
sub
pop
xor
stos
sbb
xchg
in
pop
pusha
movsl
fwait
and
andl
sbb
push
jns
frstor
fninit
lret
test
loop
sbb
jae
adc
push
nop
cmpsl
insl
push
sub
mov
cltd
add
mov
pop
std
mov
jae
outsb
dec
inc
mov
pop
sbb
jae
push
add
repnz
inc
test
mov
sub
inc
add
and
fsqrt
and
inc
pop
sbb
xchg
lahf
and
loop,pn
inc
incb
pop
shlb
push
mov
fcompl
or
inc
cltd
or
mov
mov
sbb
ds
imulb
jmp
lods
mov
cltd
in
pop
mov
lds
out
sbb
ret
in
int3
out
sbb
or
gs
inc
cwtl
push
xchg
decb
aad
icebp
push
push
add
fstp
les
push
int3
rolb
mov
jno
enter
inc
decl
xchg
add
sbb
mov
mov
les
dec
repnz
ljmp
push
cmc
mov
movsl
fisubs
into
mov
mov
rorb
pop
pop
xchg
in
push
pushf
xlat
xor
das
sub
stc
cmpsb
mov
cmp
and
adc
repz
cmpsb
jl
pushf
sbb
push
aas
mov
sub
jno
sarl
adc
mov
dec
dec
pop
push
sub
out
shll
pop
add
cmp
fdivr
inc
movsl
aad
xor
int
mov
lret
in
pop
loope
je
jns
pop
std
in
xor
sub
sub
push
dec
jecxz
push
into
push
inc
test
cmpsb
dec
mov
aam
mov
and
and
shlb
insb
mov
mov
and
cmp
add
movsl
sub
mov
jl
gs
pop
shlb
clc
lods
mov
xlat
shr
js
pop
aaa
pushf
arpl
in
lea
jne
push
jb
jmp
pop
fwait
mov
in
mov
clc
neg
push
inc
out
adc
jg
inc
fistps
push
pop
or
sub
dec
in
mov
out
mov
es
pavgw
aas
loope
leave
in
inc
add
dec
in
sbb
xchg
push
sbb
and
dec
stos
add
negl
jmp
cmpsb
ret
or
movsb
popf
in
xchg
shrb
cltd
repnz
call
sbb
gs
push
movsl
daa
jl
inc
xor
das
lret
aas
fsubrp
sub
lock
mov
or
jp
dec
xchg
movsb
ss
inc
add
and
outsb
mov
push
push
addr16
mov
push
cwtl
out
jbe
or
add
shll
fimull
decb
imul
cli
out
or
cmc
fistpll
mov
imull
mov
mov
mov
clc
mov
testl
mov
jno
xchg
xchg
adc
jp
jmp
in
loope
addr16
mov
jns
cmp
stos
push
rcll
push
js
fidivrs
test
lahf
jb
and
out
addr16
sub
sti
loopne
cltd
or
push
xchg
cld
scas
adc
dec
fdivrl
xchg
and
jle
mov
pop
adc
xor
shl
sti
sbb
push
int3
cld
inc
addl
cltd
or
cld
xchg
aas
mov
mov
mov
sub
adc
and
lcall
sub
dec
popa
add
mov
mov
jecxz
mov
mov
dec
repnz
sti
cmp
pop
inc
sub
mov
inc
mov
mov
insl
mov
out
idivb
push
push
add
pop
mov
adc
out
js
sarl
mov
inc
std
cmp
sub
jp
jle
xchg
test
lock
xchg
mov
inc
jecxz
or
imul
pop
shlb
loop
pop
pop
sub
out
add
insl
mov
shrb
into
lock
adc
adc
dec
push
push
cmp
pusha
clc
cmp
mov
in
jbe
insl
adc
push
xchg
mov
mov
jg
mov
or
inc
aam
fwait
sub
xor
add
popa
popf
loop
pop
enter
xor
test
xor
jl
mov
xchg
mov
and
sbb
fcmovne
xchg
pop
or
fsubp
pop
mov
inc
das
int
or
jae
pop
pushf
mov
dec
push
or
pushf
divb
mov
mov
insl
in
fildll
push
sub
pop
fildl
or
aas
mov
add
scas
push
test
xchg
pop
out
push
mov
pop
mov
or
pusha
rclb
nop
sbb
shr
xchg
xor
in
push
mov
and
data16
imul
mov
push
cmp
fwait
xlat
or
icebp
sbb
into
cmc
inc
hlt
fnstsw
mov
rcr
jmp
fwait
les
lods
mov
xchg
cltd
jmp
lods
push
inc
inc
test
adc
arpl
lahf
mov
add
insl
xlat
jmp
lods
dec
add
in
xchg
xor
mov
xchg
lods
jbe
jne
outsl
loop
pop
out
or
sbb
jg
fsubl
ss
push
push
xorl
in
lret
push
sahf
mov
or
mov
out
add
dec
stc
andl
icebp
out
sub
repz
div
insl
in
jmp
aaa
andl
pop
xchg
mov
or
adc
jg
inc
lods
fidivrs
jge
out
or
lods
fstpt
fistps
test
mov
shll
rolb
xchg
repnz
aaa
mov
inc
addr16
lahf
cmp
addr16
popf
push
cmp
pop
arpl
mov
inc
sub
movhps
mov
dec
outsl
dec
mov
cmp
sbb
or
push
inc
sbb
scas
in
cmp
shll
add
popa
dec
cltd
mov
or
dec
pop
subb
call
cmp
mov
in
jg
mov
push
sbb
and
mov
and
dec
cmp
adcl
cli
lock
insl
sbbb
sahf
xchg
cmp
pop
roll
cmp
pusha
and
mov
xchg
lret
push
clc
xor
lds
push
in
and
jmp
sub
in
mov
jl
mov
add
adc
push
stos
sbb
mov
cmp
cmp
jb
jmp
sub
addr16
inc
jns
sub
std
mov
inc
push
xchg
inc
test
cli
aaa
inc
adc
adc
sbb
dec
loopne
iret
popa
fscale
rcrl
or
mov
aam
inc
test
das
mov
in
stos
sti
sbb
es
outsb
cmpsl
outsb
adc
sbb
mov
mov
and
pop
lahf
loopne
icebp
sub
loop
add
dec
push
mov
test
mov
dec
std
add
cmp
pop
arpl
test
lahf
daa
cmpb
inc
cmp
or
rorb
scas
pusha
cmp
sarl
dec
aam
inc
sub
sub
nop
xchg
or
sbb
pusha
cmc
cmp
stos
mov
addr16
or
dec
fdivrp
cmpsl
cmpsl
sub
fs
hlt
pop
fdivrs
in
mov
imul
aas
inc
pusha
std
cwtl
popa
fildl
fs
gs
sub
popf
and
fwait
sub
mov
mov
cmpsb
in
adc
ljmp
pop
jnp
fistps
pop
mov
mov
sub
mov
in
pop
pop
adc
push
cmp
adc
stc
loope
aam
jno
mov
xor
aad
pop
dec
mov
repz
stc
mov
sbb
cmp
inc
jb
adc
std
or
out
jl
je
scas
popf
roll
rorb
and
inc
stc
mov
or
mov
inc
mov
and
mov
adc
mov
lret
sahf
lock
mov
adc
mov
fbld
fwait
cmp
push
dec
jae
sbb
mov
orl
mov
cmpsl
scas
loopne
sbb
sub
sbb
adc
mov
mov
jnp
xorb
jo
sbb
push
pop
in
push
lcall
in
lock
cltd
iret
xorb
jle
push
dec
cmpsb
sti
nop
outsl
xchg
xchg
fisubl
jb
shlb
push
and
cmc
jae
lahf
xchg
mov
testb
sbb
rcll
stos
add
rcrl
mov
test
jp
jb
adc
push
in
cmpl
xor
cmpsl
xchg
lahf
je
mov
add
je
orl
pop
adc
inc
push
inc
mov
div
mov
sub
jg
xchg
out
cmp
lods
jp
mov
xchg
adc
test
mov
dec
repz
popf
xchg
xchg
xor
lret
lods
dec
fstl
outsb
adc
stc
sbbb
sbb
daa
xchg
inc
xlat
pop
stos
jnp
push
jo
xor
lahf
dec
mov
dec
ret
mov
aad
inc
roll
sahf
ds
shrb
jp
push
mov
aaa
jmp
rolb
jge
jge
fstpl
jecxz
leave
jge
xor
adc
mov
decl
shll
int3
lods
pop
stc
mov
lods
lahf
mov
ss
outsl
jns
pop
cmpsl
mov
ret
inc
cli
les
dec
xor
test
lods
dec
roll
pop
xchg
mov
push
les
push
push
cmc
pop
add
push
mov
mov
mov
jecxz
mov
mov
jp
cltd
mov
nop
aaa
xchg
and
jb
mov
and
inc
xchg
lcall
mov
mov
scas
jne
aaa
mov
in
shlb
jbe
inc
fs
shr
pop
xchg
or
cmp
pop
xor
xlat
daa
notb
jmp
insl
pop
mov
sahf
imul
cmp
test
cli
mov
lcall
adc
loope
xor
lahf
into
or
cs
int3
fimuls
mov
mov
mov
pop
icebp
jbe
adc
aam
shrb
notl
sahf
data16
cmpl
dec
xchg
sti
mov
or
push
xchg
mov
push
jmp
bound
sub
das
jmp
adcl
in
idivb
hlt
mov
and
dec
xchg
sub
inc
adc
inc
loopne
cmpsl
jno
cmp
and
in
ret
inc
lods
mov
add
xchg
dec
push
sbb
scas
loop
cld
inc
mov
push
cmp
leave
push
adc
cmp
int
mov
adc
fsubs
jl
ret
cs
push
sbb
jmp
pop
jb
fucomip
sarb
lcall
mov
mov
mov
xor
int3
call
and
xchg
pop
inc
mov
adc
pop
or
xlat
xchg
inc
xor
push
add
enter
add
mov
cmp
lcall
negl
call
push
decl
pop
pop
push
pop
jno
xor
or
ja
mov
loope
mov
pop
dec
gs
jo
mov
lea
adc
jl
loop
dec
ficompl
int3
inc
in
push
mov
pop
adc
mov
sub
mov
mov
jo
pop
and
and
bound
ljmp
inc
adc
or
and
pop
and
push
or
or
xor
push
or
dec
loop
inc
mov
sbb
mov
pop
mov
push
mov
jecxz
xchg
mov
out
jno
fsubs
sub
inc
dec
inc
cmc
jge
cmpsl
into
test
data16
push
mov
mov
sbb
xchg
jmp
inc
scas
js
add
jne
cmp
das
fucomip
sbb
out
xor
subb
push
enter
push
lret
jl
xchg
and
mov
adc
rcrb
push
sub
pop
inc
icebp
rol
lahf
mov
mov
dec
fisttps
jl
add
out
cmp
movsl
jecxz
lcall
push
shlb
xor
pop
roll
gs
mov
loope
jl
out
add
std
cmpsl
and
pop
jae
dec
sbb
pushl
adc
fs
imul
push
gs
inc
or
idivl
out
je
mov
xlat
xchg
popa
ljmp
out
outsl
enter
cmp
cltd
adc
loopne
cmp
jecxz
mov
pop
fisubrs
push
repz
aam
and
fidivrl
add
shlb
mov
aad
sbb
rclb
adc
cmp
lcall
mov
fstps
adc
mov
cmp
pop
in
mov
add
mov
and
out
jmp
push
fdivr
jne
aas
mov
inc
cmp
sti
mov
cmpsb
xorl
test
rorb
dec
jle
mov
ret
adc
pop
jg
jne
xchg
das
xor
out
loopne
push
fidivrl
mov
mov
pop
dec
jbe
lods
daa
xor
hlt
mov
lods
nop
dec
popf
lahf
in
xlat
sahf
sbb
add
cwtl
mov
popa
sbb
add
sbb
sub
cli
dec
cltd
mov
sub
pop
mov
lcall
sub
cld
fdivl
fsubl
xchg
lock
inc
or
fs
add
lcall
aaa
ret
mov
mov
pop
repz
sbb
push
mov
es
sub
cmp
pop
rorl
jl
fsubrs
jb
cmpb
lcall
leave
addr16
lods
lods
mov
mov
mov
adc
movsl
pop
int
ret
xlat
push
xor
dec
and
xchg
adc
jb
enter
cltd
mov
sahf
jae
aad
cmc
or
pop
xchg
rorl
xlat
pusha
loopne
jle
nop
jo
loop
inc
lock
push
jb
inc
ret
shlb
jns
outsl
loopne
lods
xor
shlb
sbb
sahf
fcmovbe
or
mov
mov
lock
dec
fsts
out
sahf
leave
inc
cs
fistps
mov
lods
xchg
lods
aas
push
mov
adcl
sbb
mov
pusha
push
xchg
push
mov
xor
in
mov
xchg
int3
popl
cmpsl
adc
sub
cmp
mov
out
insb
sub
mov
inc
and
pushf
sub
mov
fs
xchg
ds
in
push
enter
popf
xchg
popa
push
ljmp
imul
and
jg
aad
fldz
push
pusha
jle
cmpsb
mov
adc
jnp
xor
pop
movsbl
inc
add
mov
ds
pop
iret
inc
or
and
js
add
icebp
punpckhbw
subl
int
sub
cs
aam
push
mov
push
push
lea
test
sub
scas
fsubl
mov
jmp
xchg
and
and
into
jb
iret
dec
xor
mov
sti
mov
mov
jb
cmp
scas
es
push
mov
sbb
fiadds
and
rclb
nop
cs
rorl
push
lret
inc
loopne
add
fwait
xchg
mov
sti
nop
add
push
popa
pop
sbb
lcall
ficomps
lret
push
std
sarb
mov
jecxz
cli
in
test
cmc
cmpsl
jle,pt
mov
adc
sbb
mov
jno
sub
adc
js
adc
pop
jl
add
test
inc
push
dec
jb
sbb
pop
jg
sub
dec
mov
xchg
jl
iret
mov
dec
lods
lcall
movsl
cmpsb
pop
jmp
loope,pn
adcl
cmpl
scas
lock
mov
stc
stos
xor
or
test
notb
mov
arpl
lea
repz
sub
negb
sbb
shlb
mov
cmp
ljmp
out
sbbl
hlt
fisubrl
cwtl
pop
lret
out
jno
call
loope
dec
stc
bound
ljmp
idivb
or
jo
or
sub
daa
into
stos
mov
lods
ret
lods
add
fisubrs
ret
jo
sti
pusha
jecxz
and
jns
add
jae
adc
push
sbb
mov
pop
negl
loope
ljmp
adc
hlt
fwait
es
dec
push
and
add
rorb
test
sub
xchg
testl
sbb
jle
sub
or
jge,pn
lea
add
pop
mov
dec
xchg
out
dec
push
jecxz
mov
es
stos
jno
inc
lcall
mov
dec
pop
jne
fwait
test
xchg
mov
pop
xchg
call
or
sbb
pop
pop
mov
popa
jae
or
adc
ss
push
jge
and
fldt
leave
jge
pushf
test
mov
pop
ja
ja
scas
add
xchg
aas
mov
cltd
idiv
or
adc
fs
and
add
jecxz
and
jl
xchg
jbe
lds
movsl
jg
ljmp
jb
insw
enter
xchg
jg
push
xor
lret
mov
loopne
enter
xor
les
mov
push
sub
add
adc
lea
push
and
js
mov
iret
adc
mov
mov
xchg
cmp
movsb
mov
icebp
mov
shl
mov
popa
jns
or
insl
mov
sbb
mov
lret
mov
xchg
dec
mov
scas
push
lea
cld
mov
enter
addb
mov
lock
aad
call
and
add
add
inc
xor
sub
adc
clc
push
dec
outsb
add
mov
out
add
scas
lds
out
push
or
loop
push
jecxz
sbbl
inc
leave
xor
sbb
int
inc
stos
inc
ja
fdivrl
sbb
push
ja
aam
lock
mov
js
inc
and
test
ret
and
adc
incb
out
pop
mov
shlb
dec
out
lds
mov
leave
push
xchg
sub
add
sub
cmpsb
jp
pop
outsl
rcrb
and
xchg
or
fbld
addb
inc
cmp
ds
sbb
clc
loope
mov
enter
add
sbb
cmp
adc
shr
aas
in
lcall
cmp
test
repz
bound
addr16
fwait
sbb
aaa
js
dec
mov
fdivrl
cmc
sbb
ja
repnz
mov
cli
jb
cmp
inc
xchg
fucomi
fdivrs
nop
xchg
pop
xor
fwait
sub
or
int3
mov
inc
jno
mov
dec
pop
pop
fisubs
mov
jne
xchg
repnz
js
mov
push
lods
mov
repz
xor
xchg
pop
jae
and
mov
movsl
inc
inc
popa
xchg
lods
mov
test
cli
xorl
jle
pop
loope
push
and
fwait
push
and
cmp
xlat
stc
aad
out
in
lods
int
test
cmp
cs
and
add
dec
adcl
bnd
add
push
addr16
mov
or
adc
adc
in
sahf
fildll
jle
mov
loopne
jg
popa
nop
addr16
jg
aam
mov
in
int
mov
pushf
fcoml
pop
jl
ds
std
or
push
dec
in
repz
icebp
cmp
cwtl
repnz
pop
mov
mov
mov
sbb
sub
cmpsl
xor
jecxz
adc
ret
xor
jno
or
das
xlat
lret
bound
orl
or
xor
out
xchg
rorl
lret
fcoms
jg
mov
je
and
and
test
and
push
and
sub
pop
dec
cmpl
cmpsb
iret
sar
sub
mov
inc
int
pop
outsl
insl
jae
roll
psrlw
or
incb
jne
or
cmpsb
lahf
adc
cmp
mov
xor
test
inc
sahf
cmpsb
mov
sbb
mov
sub
and
mov
stos
popf
and
sbb
mov
xchg
dec
jg
or
fmull
add
aad
and
lret
push
xchg
jl
push
sub
and
dec
ficoms
xor
sbb
fdivrl
stc
movsl
or
repnz
fiadds
cmp
sahf
inc
mov
add
mov
in
imul
cmp
cs
jbe
cld
fadd
test
popa
outsl
sbb
sub
test
mov
aaa
xchg
adc
and
stos
xor
sbb
mov
cmc
es
push
pop
dec
inc
mov
movl
adc
daa
xor
cwtl
sbb
mov
and
movsb
cld
cld
xor
mov
xchg
push
jno
icebp
out
or
sbb
andl
or
pop
jl
aad
je
push
aad
jo
push
add
nop
es
jb
dec
sbb
dec
xchg
cwtl
pusha
sub
lret
lds
xor
fistps
enter
pusha
mov
xlat
in
jb
sub
cmp
or
dec
jb
outsb
aam
movsl
sbb
mov
repnz
mov
fwait
sub
out
jmp
jmp
movsl
loop
int
inc
rol
mov
adc
sub
in
add
stos
pop
div
lods
movsb
mov
mov
lods
addr16
les
js
mov
inc
jne
movsl
and
xor
jge
aad
sub
inc
mov
in
xchg
fsubs
fisttpll
inc
out
mov
sarb
cmp
lods
fbld
jbe
xchg
cmpsb
fwait
cmp
sbb
ja
subb
mov
xchg
ja
inc
es
aas
ds
int3
jecxz
int3
lahf
or
es
pop
mov
enter
xchg
out
pushf
adcl
xchg
ficoml
lret
mov
cmp
test
mov
stc
js
lds
into
shll
movsl
ret
sub
mov
mov
aad
jecxz
sub
shll
je
int3
add
push
into
data16
out
jl
jmp
xlat
cmp
rolb
pop
mov
fiaddl
cmpb
jp
xor
je
sub
jmp
adc
cmp
sub
push
daa
repnz
mov
dec
sub
xlat
fisubl
hlt
lods
dec
jae
jmp
fs
in
fsts
insb
mov
mov
mov
pop
or
aam
adc
lret
rolb
pop
push
mov
jmp
stos
add
add
push
adc
fcompl
ljmp
and
dec
subb
sbb
push
rcrl
inc
jo
mov
pop
xchg
mov
mov
out
xchg
mov
gs
xchg
dec
jge
sti
iret
adc
cmp
das
arpl
mov
mov
and
cmp
iret
xor
cmp
jb
push
nop
push
scas
addr16
and
sub
test
adc
dec
pop
adc
add
popf
ret
into
icebp
shlb
xor
int3
ja
ret
mov
mov
in
fwait
shl
cwtl
scas
or
rorb
add
pop
push
xchg
out
inc
movnti
std
in
ret
sbb
loope
xor
jmp
mov
rclb
sbb
les
jo
outsl
pop
push
in
orb
test
mov
call
cmpsl
xchg
imul
out
mov
fstpt
fcoml
jb
mov
roll
lret
lret
jge
mov
lds
idivl
sub
les
jg
jns
adc
int3
push
in
movsl
xchg
xchg
fs
lret
jb
popa
scas
inc
inc
jp
ds
jecxz,pt
push
adc
aaa
adc
pop
clc
push
xor
out
test
shrb
test
mov
dec
daa
cmovne
lods
mov
roll
mov
nop
cmp
stos
mov
cmp
xchg
push
xchg
mov
in
out
xor
das
or
jp
xor
mov
jl
fdiv
sbb
movsb
mov
fxch
movsb
stc
adc
movsl
jmp
push
jp
fnsave
dec
mov
xor
js
std
sub
xlat
sbbb
bound
mov
mov
repz
ja
fadds
add
stc
sbb
addr16
ret
mov
iret
xor
jecxz
mov
clc
pop
lea
or
aas
mov
nop
fcmovb
xlat
testl
rcll
mov
and
cs
movsl
test
dec
fwait
mov
jns
in
das
dec
push
enter
pop
sar
cld
cmp
repz
add
outsl
lret
add
jne
inc
push
bound
idivb
pop
xchg
outsl
xchg
jae
push
test
repnz
loopne
idivb
or
ja
dec
jp
fldpi
push
ja
sub
inc
xchg
repnz
mov
int
fbstp
or
sbb
cmp
test
mov
mov
pop
movsl
lds
cmc
sbb
pop
xchg
dec
sub
ds
jmp
pusha
inc
sub
cmp
popa
adc
lock
lock
loopne
mov
jecxz
or
xchg
pop
push
jecxz
mov
xor
inc
push
adc
xchg
ss
sbb
js
add
rorl
mov
es
jne
iret
div
add
dec
imul
shl
sub
cmpsb
insb
test
and
mov
pop
mov
pop
sysret
mov
mov
mov
pop
xchg
pop
out
cmp
sbb
lahf
inc
xor
and
cwtl
jecxz
and
push
setbe
adc
adc
push
rcr
inc
jae
int
movsl
inc
push
aam
scas
and
pop
add
sbb
ljmp
ss
mov
repnz
push
in
pop
stos
jecxz
mov
mov
fistpll
jbe
jp
mov
test
sar
sbb
les
andb
mov
ss
xchg
insl
sub
scas
in
cmp
fwait
cs
test
repnz
jmp
sub
pop
push
push
push
stc
mov
inc
and
push
loop
cmp
pusha
mov
cs
mov
loop
imul
mov
sub
leave
sbb
push
incl
push
pop
dec
stc
pusha
mov
pop
test
mov
enter
gs
fldl
int
jecxz
stos
out
stos
movsb
pop
dec
push
adc
mov
addr16
fs
jne
pushf
add
push
sti
inc
insl
fnstenv
pusha
ret
cs
adc
dec
xchg
xor
fwait
or
push
mov
rcrl
pop
movsl
xlat
sbb
adc
sahf
idiv
sbb
and
adc
dec
xchg
pop
andl
mov
mov
mov
xchg
popa
push
ficomps
mov
movsb
jb
xlat
popf
lret
xchg
mov
cli
push
xlat
int3
jmp
push
ret
xchg
ljmp
jmp
and
aam
cwtl
lock
or
inc
sub
push
adc
cmpsb
mov
dec
call
dec
rorl
scas
xchg
inc
mov
mov
inc
xor
sti
cli
jp
andb
cmpb
int
mov
out
mov
dec
lret
in
arpl
or
and
ficomps
test
jmp
xchg
xchg
movsl
outsl
loopne
scas
add
mov
outsb
pop
fsubrl
add
cmpsb
les
push
stc
jae
push
iret
mov
sub
add
or
bnd
lret
xchg
fiaddl
add
lcall
loop
push
int
cli
jmp
pop
pop
outsb
jg
repnz
iret
daa
xchg
cmpsb
lds
jb
outsl
es
test
sub
jb
clc
xchg
in
lcall
jb
aas
test
sub
std
movsl
test
xor
or
in
and
outsb
testb
xor
dec
dec
and
lods
gs
popf
adc
mov
popa
inc
adc
daa
push
cmp
fistl
lahf
mov
rorl
mov
adc
jmp
mov
push
xchg
pop
rclb
pushf
notl
fwait
xor
jl
lods
movsl
scas
rcr
fldl
lods
loop
rcrl
int
or
sub
cld
loope
pop
dec
fs
add
mov
mov
cld
cmpsb
repz
repz
into
jmp
mov
mov
scas
daa
lock
out
inc
sbb
mov
jg
ficoml
das
ljmp
loop
pop
stc
push
push
jbe
cld
and
cwtl
adcb
sti
cmp
imul
jno
test
fiadds
test
dec
ss
fs
cmp
pushf
cli
xchg
test
cmp
sub
mov
xor
mov
rcr
movsl
addl
push
test
fmul
mov
cwtl
rolb
or
loop
adc
pop
and
cltd
jge
xor
push
leave
xlat
lcall
dec
hlt
dec
sbb
pop
fcompl
stos
mov
jbe
cmc
push
or
fcoms
imul
xorb
pop
mov
cmp
add
test
inc
mov
push
dec
dec
ds
mov
das
push
inc
or
enter
inc
cld
xchg
jg
or
xor
out
adc
fidivrs
ds
push
sbb
bound
popa
clc
imul
and
and
lods
sub
sub
push
lds
fldt
inc
aaa
mov
adc
ja
inc
test
faddl
inc
cmp
dec
jae
iret
mov
jno
je
inc
cmp
or
dec
mov
test
jp
and
cltd
sbb
in
test
out
and
mov
sbb
push
stos
pop
cli
jp
fwait
push
inc
aam
xchg
xlat
pop
shlb
push
mov
mov
dec
jmp
dec
add
test
cmp
dec
or
jp
pop
into
xor
dec
jne
xchg
mov
fiaddl
sbb
mov
xchg
push
add
shll
cmp
ss
push
push
pushw
sbb
xchg
outsb
push
jns
xchg
inc
pop
pop
into
dec
bound
movsb
out
pushf
lea
stc
mov
mov
push
cli
lds
xchg
roll
xchg
loop
mov
adc
mov
icebp
jne
adc
pushf
daa
or
out
mov
jo
fdivrs
sarl
inc
mov
dec
mov
ret
lods
pop
pusha
in
mov
push
and
mov
dec
repnz
les
jae
inc
cmp
roll
push
push
jnp
stos
lea
popa
enter
xchg
fsubl
add
mov
in
fiaddl
ljmp
out
lret
sub
mov
xorl
push
cmp
dec
movsb
xchg
js
inc
cltd
cmc
cltd
and
pop
inc
xlat
cmp
mov
jl
stc
mov
sub
sub
push
cmp
mov
mov
or
call
andl
xor
mov
test
mov
testl
pop
in
push
or
xchg
mov
lods
jnp
in
mov
test
stos
shlb
mov
das
daa
inc
daa
test
out
push
movsb
andb
or
push
lds
sbb
jnp
int3
enter
mov
lea
mov
scas
rcrl
imul
mov
and
sub
adc
test
ljmp
rol
adc
fstl
scas
lcall
dec
and
dec
shll
jge
push
jo
jbe
pusha
pop
fisubs
dec
es
ja
loop
pop
movsb
in
push
out
stos
cmp
jp
mov
mov
mov
inc
pop
jl
fiaddl
aaa
leave
bound
dec
xor
decl
jl
loop
fs
out
outsl
push
les
mov
mov
mov
sti
shlb
clc
insb
dec
jnp
popa
and
xor
ss
inc
cmp
sub
inc
mov
addr16
loope
inc
push
mov
and
jb
popf
bndstx
mov
mov
dec
inc
cltd
or
fdivl
les
mov
inc
cmp
mov
notb
jbe
pop
mov
jno
dec
and
xchg
and
shrb
cld
mov
cwtl
cmp
fdivrs
lock
outsb
aaa
test
mov
comiss
xchg
pop
stc
mov
int3
bound
loope
stos
push
or
sbb
or
push
push
loopne
mov
adc
sub
aad
insb
jns
aad
jecxz
dec
cmc
std
les
and
fwait
xor
and
xor
das
das
dec
pop
inc
dec
jmp
jo
xor
aaa
push
lret
adc
sub
jns
pop
mov
jmp
add
icebp
in
repnz
test
pop
dec
lret
jl
pop
ror
clc
inc
cli
sub
jbe
std
add
sbb
mov
les
pop
imul
mov
icebp
push
rorb
mov
mov
in
ret
xchg
inc
loope
xchg
or
xchg
dec
hlt
cmp
push
es
bsf
push
mov
mov
stc
push
ret
and
jmp
xchg
jbe
adc
hlt
pusha
adc
cmc
aaa
push
scas
sub
sbb
jnp
pop
mov
pop
dec
in
pop
mov
sub
cmp
add
inc
sti
fwait
mov
push
dec
stos
lahf
jg
es
scas
stc
in
mov
out
push
sub
out
add
shl
dec
sub
mov
outsl
lahf
dec
les
inc
outsl
dec
mov
pop
or
movsl
mov
push
inc
pop
into
and
push
ret
mov
sbb
clc
mov
std
mov
sub
mov
cwtl
aaa
sbb
adc
add
mov
fs
push
aad
out
xor
jle
enter
data16
mov
inc
add
cmp
pusha
dec
mov
popf
repz
xor
into
mov
jmp
into
mov
fwait
dec
lea
adc
cld
pop
mov
shrl
xchg
les
adc
sahf
icebp
sub
imul
loopne
shl
icebp
adc
xor
push
mov
scas
leave
mov
mov
fistps
fdivrs
xor
mov
das
aam
lds
mov
lock
hlt
roll
dec
add
xor
add
pop
inc
jmp
fistpll
pushl
insl
in
out
leave
data16
or
xor
andb
or
mov
imul
andb
loop
dec
push
jl
mov
jae
in
xor
fcompl
in
adc
pop
adc
mov
and
mov
cmp
mov
dec
jns
imul
mov
jle
jge
push
push
sar
dec
rcrb
jle
pushf
je
idivb
mov
mov
jbe
faddl
mov
push
fnstsw
out
jp
pop
lds
xor
fadd
hlt
das
pop
and
or
add
nop
aad
fisubrs
loop
rorl
adc
add
and
cmc
cmpsb
std
test
in
ret
mov
imul
mov
popa
push
mov
js
divb
xor
stc
pop
add
cs
in
jmp
repnz
or
clc
rcll
push
mov
rcll
mov
push
xchg
pop
cld
jle
ljmp
inc
fimull
or
out
repnz
and
cli
invd
xchg
gs
loopne
stos
stc
and
mov
xor
pop
dec
loopne
ret
xchg
inc
imul
mov
les
jecxz
lds
fdivl
dec
popa
shlb
jb
mov
sahf
sub
insb
ret
out
jmp
lahf
pop
imul
jmp
iret
xorb
jae
popa
sbb
jge
outsl
mov
icebp
movsb
mov
sub
popa
mov
sbb
inc
out
ret
scas
faddl
adc
es
mov
orl
lods
cmpl
rclb
sarl
xchg
aad
mov
pushf
xchg
jl
mov
jp
cmp
inc
negl
or
pusha
xor
shrb
add
cmc
cmp
aam
loop
cmp
ss
out
xchg
aas
xchg
adc
scas
jecxz
cmp
imul
addr16
mov
imul
adc
lock
ret
rclb
cltd
xor
enter
inc
lahf
and
filds
add
subb
push
es
repnz
inc
or
cmpsl
pop
adc
adc
stos
loop
xchg
push
orb
jo
and
js
into
pusha
fs
cmp
pop
mov
jmp
mov
inc
lods
sti
xchg
xchg
call
repnz
mov
dec
or
fsubr
frstor
lea
aaa
xor
mov
rorb
iret
dec
dec
sti
scas
lds
inc
stos
jns
xor
fs
cli
dec
jno
loop
mov
sbb
mov
in
lret
sahf
sbb
nop
add
mov
call
popa
mov
loopne
rcrl
mov
sahf
in
add
das
inc
or
mov
dec
fwait
roll
dec
or
jne
or
scas
sbb
jns
mov
push
pop
xchg
sahf
enter
test
enter
jno
test
ja
jecxz
add
sbb
mov
or
je
mov
inc
iret
negb
xchg
cmc
insb
mov
jno
pop
jo
jne
add
mov
cld
sbb
push
sub
test
pop
shrb
and
in
jecxz
jno
mov
and
jo
inc
push
pop
xchg
lcall
sub
dec
push
loopne
mov
fldl
sbb
mov
mov
xor
fsubs
jno
inc
hlt
or
xor
outsl
xor
mov
cmp
fisubl
sub
movsb
movb
movsb
int
inc
push
add
ljmp
lds
testb
or
or
into
pushf
push
and
xchg
ss
jns
add
clc
mov
imul
cltd
ljmp
sbb
adc
pop
daa
pop
sub
xchg
push
icebp
gs
cwtl
xchg
xor
cmp
adc
sbb
or
outsl
pop
and
cld
jno
mov
out
push
and
mov
mov
sub
test
arpl
sti
cltd
lret
mov
ret
out
rcrb
mov
adc
ljmp
addr16
or
add
cmp
xchg
repnz
cmp
pushf
daa
fs
jp
lret
mov
pop
int3
sub
fcmovu
ret
sbb
je
cltd
or
rcr
push
stc
fs
push
inc
sub
sub
lret
jnp
add
sahf
fwait
nop
pop
sub
sub
adc
cli
cmp
in
lret
cmpb
dec
or
sub
jns
xlat
jo
inc
test
jno
ds
stc
jle
jl
cmovbe
outsb
imul
dec
lea
adc
push
enter
loope
mov
ja
push
js
add
push
push
mov
mov
fsubl
jnp
xchg
lret
scas
cld
push
push
sbb
movsl
xchg
xlat
lahf
je
in
pusha
in
shl
sub
inc
mov
inc
fimull
xchg
test
mov
mov
sbb
or
sbb
xchg
sub
and
decb
imul
mov
out
jbe
sub
sbb
loopne
ficoms
add
roll
in
stos
cmp
mov
insb
dec
xor
push
aam
cmp
pop
sub
ljmp
out
jb
jbe
dec
cltd
push
inc
ds
xor
cmp
fbld
and
lods
inc
sub
sub
movsb
xchg
sbbb
xchg
aas
push
jg
sbbl
icebp
loope
imul
add
pushf
or
les
imul
ds
outsl
jge
xor
xchg
psubusb
add
xor
sarb
repz
push
int3
sti
pop
nop
fidivrs
mov
xchg
inc
cmpsl
mov
addr16
or
adc
or
stos
mov
sbb
push
push
mov
repz
stos
mov
mov
adc
dec
mov
lret
and
loop
xor
out
xchg
ficompl
add
shrb
and
decb
cmp
adc
mov
in
and
stc
ss
data16
xor
idivl
ljmp
ljmp
adc
lods
cltd
in
mov
inc
sub
ffreep
subl
int
add
push
mov
sarb
push
push
lods
cmp
push
cmc
in
fimull
cmp
push
fsts
fs
sahf
loop
sbb
xchg
push
int
mov
xchg
mov
sbb
xchg
pop
fisttps
out
jns
iret
pop
daa
js
dec
sti
pusha
and
xor
push
rorb
mov
dec
inc
outsb
sbb
cwtl
mov
fimuls
out
gs
fisubrl
insb
adc
mov
jne
push
xor
xchg
mov
aad
and
insb
int3
lcall
mov
mov
sahf
sub
cmpsl
pushf
mov
mov
ja
sbb
dec
je
imul
dec
rcrl
jp
inc
test
test
lahf
shll
mov
ljmp
ljmp
pop
mov
push
daa
lods
mov
mov
and
movsb
mov
lea
sub
dec
dec
std
xor
dec
cmp
lahf
add
mov
or
scas
xor
cmc
jp
mov
dec
jge
negb
sti
sbb
push
pop
or
aam
xchg
in
push
mov
cmovb
loop
push
sub
and
mov
dec
fwait
jae
mov
notl
xchg
sub
sahf
sbb
dec
sub
cltd
pushf
test
add
ficoml
dec
cltd
add
ficoml
imul
jno
jns
loopne
xchg
nop
negb
std
leave
pop
adc
and
cmp
sbb
jmp
fucomip
mov
mov
jnp
jo
push
xor
xchg
xchg
cmpsl
pushf
add
inc
lods
addr16
mov
pop
stos
clc
test
mov
xorl
dec
jo
js
add
sti
jnp
int3
jl
rorl
sbb
insb
fbstp
mov
imul
subb
and
xchg
testb
cs
mov
popf
jne
xor
inc
sbbl
ror
or
test
jle
vpunpckhbw
mov
xchg
ret
sbb
lret
cmpsl
clc
scas
jbe
stc
shlb
cmpxchg
lods
or
sub
imul
cmp
jno
leave
cmpl
lea
aaa
in
inc
cmc
or
shl
sbb
add
and
sbb
push
push
sbb
sahf
fs
add
insb
cmp
jmp
mov
cmp
xchg
add
jmp
push
call
xor
sub
mov
jbe
dec
das
adc
dec
loope
mov
dec
mov
rcl
leave
cwtl
xchg
jo
lret
pop
movsb
jecxz
roll
pusha
pop
xchg
rcr
or
ss
in
push
cmc
or
roll
loop
popf
sti
mov
jnp
fcmovb
push
fimull
js
fsubl
dec
daa
mov
repnz
aam
jl
aad
or
xor
mov
aam
pusha
pop
pop
xchg
sahf
adc
pop
mov
insb
add
insl
push
mov
dec
lds
andb
sbb
push
sbb
in
nop
or
fnstsw
arpl
pop
cmp
clc
jg
rorl
push
test
add
or
into
pop
test
cmpsl
rorb
pop
fs
inc
add
and
mov
std
fidivrl
mov
pop
sub
mov
scas
jo
pop
hlt
adc
in
mov
sub
lea
test
popa
in
mov
xchg
cmc
pop
mov
jg
aad
cmp
out
aas
sbb
xorl
lds
std
into
sub
mov
movsl
jecxz
imul
dec
pop
adc
lcall
dec
lods
xchg
mov
add
js
pop
jp
jae
push
neg
mov
stos
jecxz
cmc
xchg
mov
push
lcall
lds
fcmove
inc
sti
hlt
ret
aas
mov
icebp
xchg
inc
xchg
sbb
out
xlat
in
push
inc
outsb
in
es
test
mov
push
pop
mov
cmp
jmp
mov
lock
fistpll
jl
lret
and
jmp
loopne
faddl
out
lods
movsl
sub
adc
pop
jecxz
js
inc
push
or
push
sub
sub
clc
mov
dec
in
inc
sbb
adc
push
mov
enter
or
adc
sti
mov
jp
aas
xor
pop
dec
sub
jl
adc
shrb
lahf
sbb
pop
movsl
fldenv
cmp
xor
mov
popf
adc
jl
mov
pop
stc
jmp
mov
ret
stos
js
mov
lahf
andl
xchg
iret
lcall
ja
sub
cmp
add
mov
mov
and
testl
call
fpatan
xchg
xor
xchg
nop
enter
inc
inc
sbb
adc
push
push
stc
lahf
jne
mov
sahf
outsb
arpl
cwtl
or
push
mov
ss
addr16
stc
mov
shll
jg
pop
mov
sbb
popa
fidivrs
comiss
das
loop
inc
fldcw
sub
addr16
idivb
ds
dec
jbe
aas
inc
into
notl
subb
add
cmp
call
cli
fcoml
pop
fcomps
rorb
add
stc
fistpll
lcall
push
repnz
and
insb
jecxz
mov
mov
test
or
mov
leave
adcl
out
add
leave
sti
cmp
jmp
mov
movsb
adc
jge
jnp
sbb
push
xor
in
push
xchg
stos
mov
mov
scas
stos
repnz
or
imul
sti
push
push
sub
sbb
jnp
test
dec
mov
xchg
pusha
mov
push
push
das
adc
xor
and
loopne
mov
mov
out
enter
inc
outsb
cltd
ret
inc
pop
loopne
or
mov
lret
fwait
push
jae
mov
cmpsb
jo
ret
mov
push
stc
jecxz
fwait
push
mov
ss
and
mov
and
mov
mov
std
enter
xchg
lock
xor
push
scas
jb
dec
loop
iret
stc
shlb
xchg
lods
inc
lds
mov
mov
cmpsl
mov
add
popa
insb
push
jge
ja
repz
add
movaps
out
sbb
je
dec
jmp
je
popa
mov
hlt
push
scas
popf
sbb
call
xor
inc
add
roll
mov
pop
shlb
outsb
mov
and
pop
js
xchg
mov
pop
cmp
cld
fidivs
cmc
mov
inc
inc
into
push
jecxz
sub
mov
test
es
movsl
outsb
leave
jno
out
dec
add
xor
sub
push
inc
dec
call
dec
inc
aad
sbb
test
roll
fs
lret
mov
xchg
push
mov
shll
sbb
scas
in
sbb
cmpsb
mov
sti
push
fildl
stos
jp
sub
mov
jge
pop
sbb
cmpsb
xorb
mov
push
xchg
mov
sub
cmp
adc
lret
push
push
add
loopne
push
sbb
cmp
test
pop
or
xlat
lods
push
sub
jmp
notb
pop
fstl
in
mov
sbb
icebp
lods
outsl
mov
je
sub
data16
push
orl
xor
xor
or
lea
test
pop
movsb
add
icebp
push
ljmp
push
cmovo
xchg
cmp
push
pop
or
outsl
xchg
push
int
rcll
xchg
sub
sbb
xchg
sbb
dec
lret
mov
dec
stos
xor
rorb
mov
cmp
daa
roll
mov
fsubp
aam
out
dec
repz
sbb
in
or
outsb
or
loope
pop
outsb
mov
jns
loopne
rorl
mov
add
inc
inc
aam
loope
push
xlat
repnz
xchg
dec
xchg
mov
aaa
add
out
sbb
xchg
ljmp
enter
in
lahf
inc
lods
jno
jecxz
pushf
push
push
mov
and
add
push
add
es
dec
outsb
sahf
mov
cli
mov
fldcw
cmp
stc
or
sbb
add
push
fcmovb
pop
cmp
xor
jne
fstpl
cs
mov
clc
xchg
std
cmp
test
and
js
sarb
inc
mov
xchg
xchg
imul
imul
pop
stos
ret
ljmp
test
inc
ret
mov
movsb
cmpsb
jle
mov
pop
dec
pop
pop
mov
bndldx
aas
xor
insb
cld
rol
cmp
and
jecxz
sbb
jecxz
cmp
imul
jno
inc
adc
out
and
mov
pop
push
bound
sub
shrb
pop
faddp
pop
sub
mov
into
clc
sub
xchg
mov
loopne
mov
daa
xor
sbb
jmp
push
aam
push
xlat
xchg
in
push
imul
movsb
fcomip
sbb
push
push
inc
jno
lods
sub
add
cmp
jge
adc
mov
jle
dec
into
mov
jle
mov
pushf
lea
push
push
sub
add
jae
leave
sbb
es
out
les
cmp
or
fsubrl
and
push
add
fsubs
sub
cld
int
fwait
mov
xor
test
and
lea
mov
mov
dec
test
std
inc
cmp
add
inc
or
dec
mov
adc
sbb
and
pushf
or
xor
adc
jmp
movsb
lcall
pushf
fistl
shll
in
push
aad
add
push
pop
adcl
jmp
imul
mov
int
bound
mov
or
in
int3
xor
push
flds
pop
push
inc
movsb
or
jmp
or
pusha
inc
mov
jle
or
add
jb
stc
adc
mov
or
and
mov
adcb
cmc
sbbl
sub
cmpsb
jnp
mov
cmp
pop
xor
adc
push
jge
add
mov
xor
mov
jle
xor
or
mov
test
leave
in
in
int3
negl
ljmp
arpl
dec
jge
xor
shlb
jns
movsl
cmpsb
mov
xchg
jecxz
mov
mov
scas
fcmovbe
loop
pusha
inc
xchg
mov
aas
xchg
push
call
imul
mov
es
and
jge
les
cmp
aas
push
sub
sub
cmp
or
xchg
fsubrl
inc
test
mov
addr16
clc
or
les
xor
or
fisubrs
mov
dec
mov
sbb
ljmp
insb
cmpl
mov
adc
imul
int
add
lcall
inc
jmp
loop
std
aaa
jl
jae
and
mov
sub
outsl
decb
push
pop
jle
jo
jnp
pop
test
mov
push
or
test
jg
inc
mov
out
add
xor
mov
aam
dec
lret
in
inc
push
data16
outsl
xchg
ret
hlt
add
cmp
inc
adcl
push
add
jo,pt
xor
je
mov
mov
jb
lods
inc
push
xchg
or
enter
lods
xchg
jne
pop
stos
fmuls
std
push
pop
xor
fxtract
push
mov
xchg
sub
rclb
lods
pop
jl
mov
push
pop
and
jmp
rorb
cld
mov
repz
pop
test
ljmp
frstor
divb
pop
mov
xor
addr16
xchg
ja
sbb
inc
mov
xor
or
pop
sbb
sub
fstpt
bound
insb
pop
ret
popa
xchg
and
lock
out
imul
xchg
add
mov
mov
popf
int3
inc
add
cld
add
repz
mov
imul
push
push
mov
cmp
clc
imul
sbb
rcrb
fs
or
movsl
fildl
jmp
pusha
xor
movsb
pop
jno
mov
insb
mov
fcomip
adc
push
popa
sti
push
sbb
dec
mov
sbbl
lahf
dec
pop
push
cld
stc
or
xlat
sbb
or
in
inc
fisubl
dec
insb
addr16
scas
pop
pop
mov
mov
cmc
mov
mov
mov
rcrb
mov
xchg
jl
mov
icebp
mov
mov
inc
xor
fstp
or
outsb
pop
mov
cmc
and
ret
in
movl
rclb
and
or
xor
inc
iret
push
jne
and
adc
bound
movsl
ss
xchg
xchg
sbb
or
jmp
mov
adc
xchg
push
std
add
mov
popa
fdivl
call
sbb
in
sbb
add
push
testl
lds
jle
pop
enter
ds
ljmp
outsb
xchg
dec
jno
jg
out
ret
cmp
aam
jbe
fnsave
ja
ja
movsl
mov
push
je
push
mov
inc
ds
leave
jne
les
mov
lods
xchg
aaa
icebp
add
mov
notb
cltd
adc
cmpsl
inc
push
jg
es
aaa
cmc
cmp
xor
cltd
add
ficoml
xor
dec
cs
clc
mov
lods
sarb
int3
sub
or
mov
int3
rcr
jae
das
lahf
es
push
jo
test
and
inc
jo
inc
push
push
stos
pop
stos
cs
mov
leave
push
adc
out
loopne
pop
sti
shll
xor
data16
ja
ja
inc
pop
adc
xlat
out
sbb
xchg
xlat
shrb
dec
lods
or
lea
xchg
mov
imul
lods
inc
jno
cmp
cwtl
jns
stc
mov
lret
sub
orb
sbb
jnp
into
mov
cmpsb
fcmovne
inc
mov
xlat
insl
rclb
mov
adc
data16
repnz
sub
dec
stos
jle
mov
xchg
lea
popa
out
rcll
clc
ror
cmpsb
jns
xor
cmp
ror
mov
scas
aaa
push
xor
adc
mov
xchg
aas
xlat
lret
cs
cmpsb
insb
dec
mov
jle
inc
in
packuswb
movsb
and
jo
cmp
mov
mov
ljmp
int
mov
mov
cli
push
jne
scas
jmp
je
add
sbb
out
popw
xchg
shrl
mov
lcall
addl
inc
lret
cvtpi2ps
cs
cmc
adc
mov
xlat
xchg
dec
add
mov
dec
xlat
out
push
mov
mov
xchg
inc
clc
vunpckhps
sti
in
jb
or
ja
stc
cmp
inc
push
aas
mov
pop
mov
and
jecxz
lcall
pop
jmp
jno
stos
sbb
dec
aas
aad
movsb
or
jl
int
fs
push
mov
pop
aad
imul
inc
adc
or
pop
dec
cmc
inc
mov
dec
jbe
mov
push
inc
ss
xchg
mov
pop
sbb
add
cmpsl
js
je
mov
fistl
out
ss
loopne
dec
mov
and
jge
ret
push
or
jno
dec
shll
dec
adc
enter
clc
adc
enter
cmp
inc
cli
outsl
das
or
inc
inc
pushf
addr16
jge
add
mov
fidivrl
sbb
fisubrs
icebp
xor
ljmp
adc
cld
fbstp
shlb
into
imul
minps
adcl
jb
mov
adc
mull
xor
mov
loopne
jp
cli
js
orl
push
mov
cmp
pop
xchg
out
dec
inc
sbbb
and
int
rcll
pop
cmp
or
ret
outsl
xchg
cmp
repz
cmp
sbb
inc
jmp
enter
sbb
scas
jno
mov
jle
test
jo
fiaddl
test
gs
add
in
inc
cli
push
loope
lret
test
jecxz
add
pop
xchg
jl
inc
dec
xchg
sbb
add
push
mov
nop
adc
nop
test
cmp
jg
sti
lods
lods
push
jle
jecxz
jle
dec
movl
xchg
stos
mov
notl
sbb
fldl
add
test
aad
mov
out
jnp
clc
jae
std
sbb
mov
xor
dec
push
mov
pop
mov
and
sarb
imull
imul
ds
aam
mov
std
jno
ljmp
xlat
inc
pop
pop
mov
jmp
ja
cmpsb
es
fisttps
push
out
pop
repnz
test
jno
pcmpgtw
sub
add
inc
jge
xor
sarl
push
inc
pop
lret
fiaddl
mov
loop
push
fcmovu
insb
dec
mov
mov
inc
mov
cli
int3
add
add
ror
mov
cmpsb
nop
std
mov
aam
mov
xorb
jb
sub
aaa
imul
pushf
adc
jl
mov
xor
adc
nop
dec
in
mov
subb
push
xchg
jecxz
xchg
fs
outsl
lret
pushf
inc
xor
in
add
jno
mov
repz
xor
mov
mov
in
push
push
mov
ror
add
lret
shll
mov
cld
adc
sub
cmpsb
test
jb
adc
iret
stos
lcall
rcr
sbb
nop
xor
nop
inc
fcoml
data16
out
rcrb
or
and
mov
pop
test
mov
mov
mov
lahf
dec
sti
scas
push
push
ret
sahf
call
mov
jbe
movsl
addl
fistpll
mov
pop
call
ljmp
out
fstpl
cmp
xchg
cmp
ljmp
pop
pop
aad
dec
sarb
jne
pop
xor
inc
cmpsb
adc
data16
push
mov
sub
xor
ljmp
cltd
mov
mov
stos
loop
std
enter
fwait
pop
stos
int3
jl
call
pop
cmc
sbb
aas
fcomip
cmpsl
pop
mov
mov
negb
jns
mov
int
cmp
scas
sub
cmpsb
shlb
or
nop
xchg
sub
dec
jbe
fisttpl
mov
adc
stc
rdpmc
sahf
pop
data16
lods
in
sub
shl
imul
lahf
push
inc
fwait
cmp
push
and
sub
xor
dec
mov
mov
insb
jl
cltd
add
push
or
in
daa
pop
mov
das
movsl
iret
js
mov
dec
dec
cmp
or
rclb
sbb
jl
aaa
test
inc
ficomps
xchg
cmp
call
sbb
xchg
push
idivb
mov
lock
fists
jo
mov
aaa
mov
pop
jp
cmc
mov
jp
shrb
sahf
push
mov
add
testl
aam
cmp
cmp
mov
ja
mov
mov
dec
mov
pusha
push
inc
pop
and
xlat
clc
das
out
push
ret
or
inc
inc
mov
inc
push
or
movsl
mov
cli
imul
mov
lock
das
pop
hlt
out
mov
pushf
adc
and
das
int3
pop
push
add
sbb
jmp
sub
fwait
shr
inc
es
inc
arpl
shlb
mov
ds
mov
mov
pop
inc
rcrb
add
or
sub
dec
mov
xchg
push
xor
loopne
lret
cmpsl
push
or
pop
test
pusha
mov
outsb
and
sti
sahf
mov
and
and
shl
sbb
add
in
cmp
jo
divl
dec
mov
pop
xor
jl
adc
jne
imul
adc
lock
ficoms
pop
iret
pop
push
sub
sbb
cmp
sbb
lcall
push
jecxz
sbb
xchg
shll
adc
sbb
dec
ret
fiaddl
cld
dec
shlb
imull
xor
push
xor
lock
cmp
int
and
cmpsl
pop
inc
or
mov
shrb
push
std
jno
mov
sub
cmp
outsb
sub
dec
xlat
in
int
jno
pop
jo
mov
arpl
shrb
dec
in
std
test
shll
clc
jge
sub
rcrb
dec
xchg
jmp
xchg
add
jne
jns
ja
mov
icebp
das
adc
scas
inc
lcall
inc
cmp
pop
clc
inc
push
in
dec
outsl
adc
xor
scas
jl
push
and
mov
sbb
add
ss
cltd
pop
pop
pusha
in
inc
inc
inc
sub
jle
roll
mov
inc
insl
divl
pushl
fwait
cld
add
stos
push
sub
xor
add
cli
and
mov
call
je
fs
sbb
push
pop
inc
ffree
xchg
jecxz
cmp
in
stc
pop
scas
adcl
test
data16
ret
iret
inc
je
outsb
das
cmp
inc
sub
sub
daa
adc
dec
dec
xchg
insl
mov
mov
sub
sub
or
pop
repnz
cmp
jnp
lahf
sti
push
pop
in
repnz
shrl
inc
adc
pop
ficomps
dec
and
inc
das
fdivl
ds
sarb
scas
xchg
das
test
mov
dec
cmp
xchg
stos
nop
pop
sbb
popa
mov
je
dec
mov
sahf
clc
movaps
xor
fsubrp
push
or
cmp
pop
pop
pop
xor
aad
int
add
jnp
scas
adc
xchg
mov
sbb
xor
pop
shlb
loop
push
xor
ret
mov
arpl
mov
scas
arpl
scas
repz
outsb
inc
mov
sahf
call
mov
sub
push
mov
xor
sub
adc
outsb
scas
frstor
and
lods
mov
push
xchg
popa
fnstsw
outsb
xchg
fld
xchg
cli
jmp
lcall
test
mov
dec
or
jl
sbb
jo
ss
mov
dec
lret
aas
rol
call
sarl
popa
jno
fnsave
jns
xor
mov
mov
lret
ret
lds
xor
mov
push
popa
inc
cmp
div
dec
fstl
adc
cmc
nop
mov
push
imul
jns
inc
mov
pop
imul
push
dec
adc
push
int3
aam
sbbl
jbe
rcrl
outsb
and
push
imul
mov
xchg
pop
movsl
aad
std
xchg
mov
xchg
dec
ret
outsl
cs
sar
mov
scas
loope
lret
push
push
adc
jnp
mov
fs
xor
mov
inc
push
lcall
mov
aaa
shlb
xchg
inc
jns
ror
adc
lods
pop
cmpsb
data16
mov
rcl
mov
scas
fs
addr16
int3
and
jl
pop
adc
pop
je
adc
xchg
adcb
repnz
mov
and
jo
loop
test
push
cltd
mov
and
in
arpl
sbb
icebp
push
test
mov
iret
scas
push
cmp
lahf
sbb
pop
cs
xor
jae
add
lock
call
notb
rorb
hlt
das
and
in
fdivs
sbb
cmp
mov
int3
sub
pop
loop
mov
cld
xor
or
mov
stos
aaa
stos
or
int
insl
jle
js
adc
shll
adc
insl
mov
idiv
scas
movsb
lcall
mov
out
test
imul
lock
xor
pop
inc
pop
int3
pop
jp
lods
dec
filds
test
and
push
stos
inc
aas
in
inc
and
inc
out
fstps
mov
loop
cmp
ss
mov
clc
out
js
dec
and
jns
popf
add
cli
cmpsb
pop
or
mov
jg
push
sub
jbe
int
int3
dec
ljmp
add
scas
xchg
xlat
pop
cwtl
and
in
lods
xor
jmp
lret
dec
mov
sbb
call
arpl
pop
push
inc
test
scas
sbb
in
movsl
lock
mul
pop
gs
inc
add
sbb
fwait
push
fldenv
push
sti
lds
cmpsb
ljmp
or
push
fcoms
mov
arpl
insb
dec
cs
cwtl
pop
int
pop
bound
ja
sub
stos
out
cs
or
test
int3
loop
stos
fistpl
jmp
lahf
xlat
jp
scas
sbbb
cmp
xor
jo
xchg
lds
out
inc
mov
inc
mov
xorl
aad
mov
loop
inc
inc
xchg
out
mov
adc
cmp
jmp
aaa
lds
enter
mov
push
cmpsb
lods
addb
imul
fwait
mov
sbb
lcall
cmp
orb
adc
inc
pop
enter
and
std
imul
lods
jns
lods
adc
out
scas
xchg
mov
fists
mov
add
jbe
shl
inc
hlt
adc
aas
push
movsb
lds
mov
jbe
dec
fnstsw
arpl
pusha
lock
add
daa
insb
fsts
cmp
arpl
cmp
push
mov
imull
negb
fcoml
jne
sub
ds
mov
push
xor
mov
cmp
jp
dec
mov
call
adc
push
out
sbb
mov
mov
cli
push
adc
xor
das
xlat
pushf
mov
push
inc
xor
add
and
xor
mov
sbb
sub
and
in
mov
popa
nop
sbb
lret
in
add
in
jge
cwtl
sub
int3
and
mov
add
inc
cmc
cmc
mov
pop
pop
xchg
pop
sub
pusha
insb
push
test
insl
inc
xor
cmp
fbld
outsl
mov
fisttpll
xor
mov
jnp
cmp
stos
and
jnp
jns
loop
xchg
add
xchg
pusha
es
loope
inc
ljmp
in
popa
mov
repnz
sbbb
mov
ficoms
shld
or
repz
lcall
das
fdivr
push
lret
stos
inc
jge
shl
pop
lret
test
inc
daa
xchg
jecxz
dec
bound
push
fcomip
les
push
adc
scas
xor
adc
lahf
dec
call
mov
je
adc
inc
jg
cltd
push
jne
mov
roll
push
enter
inc
cmp
lds
outsl
xor
popf
jnp
je
insl
pop
jae
xchg
push
mov
mov
inc
sarb
mov
out
lret
iret
pop
rcl
outsb
dec
sub
shr
cld
cmp
sub
lods
scas
push
mov
or
xlat
and
int
negb
jbe
loopne
imul
mov
js
mov
fldl
xor
icebp
add
js
ds
push
adc
je
mov
inc
xchg
loop
pop
adc
mov
repz
or
and
int3
push
and
fildll
into
sbb
dec
cmc
or
mov
dec
adc
lods
xor
and
mov
inc
xorl
shl
ss
pop
cld
repz
pop
inc
pop
push
xor
jae
mov
or
xchg
sbb
iret
andb
dec
cmp
pushf
sub
sarl
xchg
aam
xor
adc
insl
push
jge
sbb
int3
push
fstp
inc
and
push
xor
cmp
push
shlb
insb
xor
xchg
lret
dec
sub
das
cmp
xchg
in
iret
stc
test
and
pushf
subb
xchg
xchg
fsubrl
sub
les
loop
adc
mov
jo
fisubs
xchg
into
mov
adc
scas
pusha
out
jecxz
lds
mov
lcall
xchg
arpl
sbb
orb
popf
inc
dec
cli
xor
nop
repz
adc
mov
jbe
out
xor
pop
gs
dec
xor
mov
pop
sub
mov
rolb
push
outsb
mov
mov
cmp
ss
add
pop
jmp
and
sub
fcompl
test
stc
call
fcmovb
cmc
push
inc
or
xchg
adc
jecxz
jnp
push
loop
add
pop
add
nop
test
push
das
jg
xorb
pusha
lret
xchg
nop
rcl
jp
aaa
inc
test
push
push
mov
xor
imul
fsubs
aam
test
inc
adc
inc
mov
rclb
push
push
sbbl
lods
cli
xor
ljmp
and
movsb
js
mov
push
fmull
je
nop
add
jbe
stc
fwait
loop
mov
and
mov
sub
fmull
or
das
add
repz
outsl
adc
sub
scas
mov
fdivrs
and
jb
pop
dec
dec
and
pop
jle
mov
and
sbb
rcrl
pop
mov
mov
scas
in
rcl
or
mov
lds
add
sbb
push
std
xchg
in
ret
cmc
jnp
dec
dec
rcrl
das
cmp
inc
dec
dec
add
mov
xchg
jge
mov
cmp
mov
pusha
addr16
push
push
xlat
sahf
sbb
hlt
xchg
lret
xlat
mov
imul
sub
aam
loope
or
bswap
in
addr16
sti
or
push
nop
enter
and
rorl
sti
aad
xor
xor
sub
in
movsl
dec
scas
sbb
ficompl
adc
stc
mov
mov
lods
cmc
sub
dec
arpl
push
and
sarb
inc
jg
in
and
push
test
dec
rcrb
xchg
jo
jne
pusha
jno
das
mov
pop
loopne
stos
adc
cmp
loopne
jecxz
iret
bound
xorb
inc
cmp
ds
imul
cmpsl
jmp
pop
addr16
jl
fbstp
scas
adc
adc
mov
gs
or
cmpsb
stos
es
inc
mov
adc
xor
pop
cvtpi2ps
xchg
sub
fists
nop
and
in
cmpsl
rep
fldenv
jb
xchg
xorb
sbb
ljmp
inc
cmp
jne
inc
mov
sbb
in
jg
push
dec
cs
imull
arpl
cmp
pop
subb
lret
aam
test
or
cmp
push
mov
push
ljmp
repz
out
pop
or
push
push
mull
push
dec
and
jge
mov
mov
lods
call
xchg
in
sbb
adc
js
lods
cmp
pusha
mov
mov
in
scas
xlat
test
stos
movsl
lcall
sub
fwait
cmc
pop
movsl
xor
rorb
rclb
cld
pop
lods
push
mov
int
sub
negb
divb
and
xor
aam
in
aas
or
dec
popa
jno
add
or
cltd
test
icebp
or
sbb
test
fst
lcall
jg
or
adc
jg
popf
lods
push
pop
mov
push
lods
push
out
test
xor
fnstenv
xchg
sbb
lcall
fidivrs
mov
push
mov
stos
fistpll
sub
push
bsf
xor
lods
into
loop
xchg
fdivrl
or
dec
fildll
or
push
in
and
clc
lea
cmp
sbb
fnstcw
into
sub
arpl
hlt
repnz
pop
dec
or
fcmovbe
push
sbb
jg
fnstcw
push
cmp
imul
jl
xchg
mov
sub
jno
ss
jnp
sti
push
test
push
jo
xor
popa
sub
xchg
adc
sub
sub
xor
popf
or
inc
ss
push
lds
and
movsl
sub
sub
add
out
mov
add
and
cmp
fcmovnb
sbb
lea
mov
int
sbb
nop
sub
cmpsl
cli
decb
ret
stos
mov
aad
mov
test
push
jmp
cmpsb
pop
cmpb
fs
pop
lods
dec
hlt
xor
adc
insb
xchg
out
ds
push
arpl
push
jae
mov
xchg
xlat
inc
sti
cld
pop
cmpsb
loope
std
or
sbb
out
add
cmp
ja
negb
test
xchg
test
pop
lea
mov
std
xor
jo
cmpsb
mov
pop
outsb
ret
cmp
add
cmp
scas
arpl
jae
dec
aam
fsts
and
test
aad
cmp
xchg
mov
mov
das
repnz
pop
or
enter
je
insb
adc
xor
or
xor
adc
sub
mov
pop
les
push
fwait
push
loope
cli
ss
mov
cmp
jp
data16
xor
dec
jne
fcomps
mov
fwait
inc
mov
cmpsb
xchg
mov
and
mov
jg
addr16
rep
insb
nop
shll
fsub
xchg
mov
pusha
xchg
out
mov
jno
loope
rclb
sub
add
lock
or
mov
pushf
test
push
jo
mov
mov
dec
pop
add
add
add
push
xchg
sub
aam
lcall
mov
xchg
mov
dec
imul
push
in
add
xor
mov
lea
call
and
lcall
mov
or
xchg
sahf
xor
pusha
jmp
xchg
fdivrs
ds
test
pop
popa
dec
idivl
xor
sub
popa
cli
cs
cmpsb
movsl
out
cmc
add
sbb
insl
jnp
das
xor
mov
jns
xorb
sub
mov
imul
or
push
insb
mov
lret
pop
hlt
sbb
data16
or
dec
jge
imul
mov
xor
ja
sbb
inc
lds
lea
insl
in
aad
jge
and
imul
mov
clc
and
fdivrp
roll
cmp
bound
pop
dec
insb
adc
loope
mov
shrb
cmc
mov
and
rcrb
lock
rclb
lahf
add
lret
icebp
mov
call
or
cld
adc
pusha
mov
pop
cmpsb
jns
testl
subl
js
and
in
repnz
mov
inc
sub
sbb
mov
mov
lcall
cmp
pushf
daa
test
pop
dec
and
sub
mov
pop
mov
notb
push
jmp
dec
mov
xlat
fdivrl
add
sbb
mov
fistl
xor
mov
sbb
mov
lock
mov
mov
clc
lea
and
std
pushf
cmp
fsub
pop
push
cmpsb
push
and
ret
dec
rorl
enter
imul
lcall
in
dec
add
push
push
push
popa
insl
cld
cwtl
push
in
les
sub
mov
pop
outsl
jl
loopne
int
pushw
xor
xchg
mov
dec
mov
int3
sbb
sbb
fimull
dec
pop
je
sub
or
dec
cmpsl
jmp
xor
push
jb
mov
adc
mov
add
std
in
jbe
cmp
mov
sarl
or
push
cmp
lahf
pop
movsb
jmp
xchg
icebp
pushf
mov
and
inc
lret
push
mov
scas
outsb
push
dec
push
mov
pop
or
xchg
jno
je
mov
sarb
jmp
int3
cmp
lahf
dec
iret
fisubl
shll
mov
lcall
rorl
push
push
test
xor
jae
adc
fs
add
int
popf
jle
mov
movsl
jnp
mov
outsb
bsf
push
lcall
rcll
adc
pop
inc
mov
movsl
mov
xchg
mov
lahf
or
ret
mov
inc
mov
xlat
mov
push
add
je
fists
fistps
lock
sbb
gs
jecxz
std
jns
cmc
xor
dec
mov
pop
fisubl
shl
imul
mov
in
add
xchg
cmp
scas
cmpsl
insb
mov
jns
int3
fbstp
sub
mov
imul
inc
push
loopne
repnz
mov
and
or
ja
clc
inc
dec
jg
cli
lods
jb
inc
test
rcrb
sub
scas
xor
aad
imul
push
adc
pop
xor
in
jno
sub
das
add
xchg
dec
pop
in
mov
popa
aad
sbb
cmp
mov
int3
scas
mov
adc
inc
mov
jae
ret
ss
pop
fadds
pushf
pop
je
scas
pop
jl
adc
ds
sub
pop
data16
rcll
and
daa
out
mul
insl
sahf
ljmp
lock
sbb
push
ret
and
mov
pop
dec
adc
mov
mov
xchg
push
push
aas
or
iret
mov
popa
mov
je
and
lahf
arpl
sub
ret
mov
sub
fstpl
ljmp
and
push
lods
cs
mov
aad
fldcw
adc
fisubrs
push
cli
ret
xchg
aad
movsl
lcall
out
lock
mov
loopne
add
or
ja
mov
cs
adc
lret
shll
push
cmp
dec
inc
add
pop
in
into
inc
leave
iret
int
mov
ret
push
adc
jecxz
inc
ljmp
cmp
stc
jno
pop
aad
xlat
fstpl
cmpsb
mov
subb
add
jnp
mov
or
pop
and
loopne
jae
sbb
movsb
les
aad
ja
add
lds
xchg
pop
jp
fdivl
leave
sbb
xor
mov
xor
push
pusha
lea
stos
out
dec
jg,pt
pop
mov
clc
outsb
movsb
and
std
push
fsub
cmp
pop
scas
data16
push
insb
daa
loop
adc
sti
mov
mov
adcl
lock
stos
cmp
fmul
adc
repz
xlat
adc
jg
jno
lods
xorl
sti
es
inc
cmp
push
lds
or
fisubs
mov
sti
and
leave
int3
aaa
push
imul
lret
negl
inc
cmp
add
pop
subb
or
xor
jae
xor
dec
xor
sarl
push
shrb
imull
mov
fsubs
xlat
or
cmp
push
pusha
sbb
xor
and
xchg
js
bound
imul
sahf
jae
fnclex
push
lret
and
jae
xchg
adc
mov
xchg
lret
es
and
icebp
push
cltd
call
or
dec
sub
fdivrl
push
push
xchg
jno
xchg
mov
mov
jno
mov
in
xor
outsb
cwtl
and
stos
rcrl
cmp
xor
nop
cmp
arpl
and
pop
cmp
leave
rorl
mov
lcall
fs
jg
xchg
aaa
add
js
int
es
mov
inc
add
xchg
mov
pop
xchg
inc
mov
cmpsl
loopne
sub
pop
mov
dec
and
sbb
push
scas
cmp
stos
arpl
or
arpl
cmpsb
xlat
pop
fcoms
pop
jecxz
xlat
mov
sub
sub
sahf
cmp
mov
mov
sbb
mov
bound
pop
cmp
sbb
pop
adc
xor
adc
cltd
mov
cmp
shrb
inc
int
mov
nop
iret
add
pushf
dec
outsb
popa
shll
mov
pop
pop
scas
cld
add
cld
mov
sub
push
cmp
mov
ret
or
inc
jle
popa
sub
xor
add
inc
push
popa
call
cmp
jo
in
call
push
xchg
pop
mov
fstl
jp
sbb
lock
pop
jo
sub
push
icebp
push
and
cmp
pushf
dec
repnz
push
add
xchg
lods
test
incl
fstps
cmpsl
aas
loop
jno
aam
xor
test
mov
mov
int3
push
addr16
in
push
or
in
or
cli
mov
outsb
dec
sahf
mov
in
inc
notb
pop
dec
lret
add
mov
add
mov
add
jne
mov
xlat
lahf
rcr
lods
notb
add
call
repnz
outsb
in
xor
jmp
push
mov
or
sahf
in
mov
mov
cmp
jp
mov
sahf
cmovg
subl
cltd
jo
mov
mov
fucomi
in
or
insb
push
jmp
and
ja
negl
mov
dec
fmull
or
jle
fistps
cmc
add
and
sub
add
jle
pop
or
mov
mov
xchg
fdivr
adc
mov
cli
mov
mov
in
mov
xchg
stc
hlt
out
jmp
mov
adc
test
cmpsl
push
dec
not
cmpsb
in
mov
scas
xchg
mov
adc
cld
xor
dec
cmp
lcall
dec
je
ja
xor
mov
insl
xchg
addr16
pop
lds
jbe
mov
adc
and
cmp
fdivr
dec
cmp
and
mov
xchg
sub
popf
cmp
dec
pop
scas
xor
movsl
in
fidivl
sbb
push
jbe
ficomps
ds
ficompl
aad
mov
xor
jne
in
loop
int3
mov
notb
fwait
mov
cmc
pop
cvtdq2ps
cmp
push
leave
dec
push
inc
sti
call
lea
xchg
call
scas
lds
loopne
or
sub
or
les
mov
adc
pop
addr16
ret
mov
lcall
lods
mov
cmp
mov
cmovo
mov
bound
and
xchg
clc
sbb
mov
mov
pushf
push
lods
mov
outsl
scas
mov
call
sub
dec
fdiv
xchg
testb
push
push
fidivrs
add
xor
pop
pushf
and
sbb
das
sbb
and
lcall
pusha
jno
push
shl
inc
pop
fistpll
mov
inc
jbe
rol
sub
ss
data16
or
in
test
mov
aam
and
inc
out
xchg
sub
out
shrl
outsl
arpl
push
fwait
repnz
das
mov
fcmovne
daa
sbb
xor
cmp
leave
mov
mov
jg
sahf
fldt
fsubrs
mov
fldl
in
add
rep
xor
aaa
ror
dec
xlat
or
pop
xchg
push
stos
ja
pusha
out
xchg
and
cmp
mov
test
ss
cwtl
pop
dec
stos
movsl
popa
repz
jecxz
iret
dec
int3
jmp
lahf
cmc
mov
or
mov
rolb
add
mov
mov
arpl
xlat
mov
sbb
pop
ja
pop
int
aaa
lcall
lds
fbstp
or
sub
pop
adc
mov
cmp
fdivrl
cmpsl
fbstp
cmpsl
ljmp
push
repz
ret
lahf
cmc
clc
xor
jnp
das
fsubs
cwtl
sbb
add
cmc
push
and
lret
gs
iret
sub
add
mov
pusha
xchg
div
vpaddsb
stos
lcall
dec
test
mov
sti
and
push
xor
ss
fildll
imul
jo
lock
popa
test
cmp
jne
pop
into
fwait
aad
push
jns
push
lea
mov
roll
ret
inc
adc
jno
dec
push
jl
and
sbb
stos
cmp
jns
cmp
or
xchg
daa
pop
loopne
lret
jo
lods
xor
es
inc
insl
stos
mov
inc
inc
pop
ret
or
aas
cwtl
lahf
pop
movsl
lods
and
push
dec
pop
addb
pop
pusha
aam
pushf
push
mov
adc
sbb
sub
mov
ss
push
mov
gs
stos
push
jns
sti
out
test
iret
cmp
pop
in
and
push
dec
adc
sbb
mov
enter
lahf
pop
jg
push
inc
mov
fisubl
inc
or
movhps
sahf
subl
jbe
push
xor
adc
mov
mov
pop
push
cmpsl
add
dec
xchg
mov
fmul
mov
rcl
in
push
out
lahf
test
xchg
jge
add
push
stc
shl
enter
sarl
xor
lock
je
mov
pusha
loop
adc
pop
cmp
popf
nop
sbb
int3
test
loop
mov
repnz
adc
mov
push
inc
jno
inc
repz
sbb
mov
addl
pop
inc
cmpsl
push
test
mov
cmp
inc
add
lds
scas
shrb
adc
popf
xchg
popf
aaa
faddp
arpl
mov
gs
push
pushf
mov
mov
insl
scas
jecxz
jmp
push
jo
xor
leave
sbb
jmp
adc
jmp
inc
int
mov
push
jb
xor
mov
xorb
movsl
and
les
fwait
scas
js
nop
sbb
mov
and
push
add
inc
adc
and
es
sbb
cwtl
or
pshufw
xor
or
dec
ret
outsb
loop
data16
testl
jbe
dec
test
movsl
fidivl
xlat
push
xchg
inc
in
and
pop
inc
mov
inc
cmpsb
dec
sbbb
jg
fmul
push
jno
fimuls
jns
sbb
inc
adc
push
ret
das
sbb
sti
xlat
int
sbb
fistpl
out
ret
adc
xchg
xchg
movsl
cmpsl
pop
pusha
clc
iret
sub
sub
mov
and
xchg
dec
xlat
push
inc
clc
iret
pop
ja
or
ret
adc
sahf
pop
test
jl
lea
or
jb
pushf
jb
or
jne
pop
push
lret
pop
movsb
cmpsl
mov
cmpsb
aas
jge
addb
mov
push
loopne
xchg
inc
stc
mov
repnz
sub
lods
jae
sahf
data16
push
add
aaa
cmp
aaa
insb
pop
sbb
outsb
pop
sti
cmp
movsb
pop
xchg
push
cs
xchg
push
rolb
push
repz
fld
sub
jp
push
test
mov
fisubl
repnz
sbb
fucomip
jg
xchg
in
test
mov
stos
test
test
rcrb
and
add
pop
stos
cmp
nop
mov
adc
inc
out
pop
xor
leave
cmp
cmp
dec
inc
mov
jb
pop
jecxz
lds
aad
jo
negb
mov
ret
and
and
cmp
or
mov
ja
sbb
cmc
push
repnz
xor
bound
or
out
or
pop
sahf
hlt
push
imul
pop
test
roll
mov
or
push
hlt
aas
jno
sar
repz
mov
inc
and
pop
xchg
mov
aas
mov
adc
mov
xchg
jle
cmp
sub
xchg
loopne
jb
and
sbb
jnp
dec
test
orb
rcll
xorl
ljmp
pop
fildll
cld
mov
push
out
vminps
push
adc
test
repz
add
mov
sbb
mov
scas
adc
or
js
xor
fisubs
sbb
pushl
out
mov
lret
and
mov
jg
xor
scas
fnstsw
cmp
mov
mov
push
insb
push
andb
pop
push
inc
pop
fisubrs
jne
mov
mov
and
dec
test
ficompl
mov
inc
sub
push
sar
sub
push
pop
in
add
gs
je
sbb
repz
std
inc
lods
cmp
fwait
add
cmp
arpl
divb
popa
and
dec
xchg
maskmovq
divl
sbb
in
sahf
mov
pusha
mov
wbinvd
jb
and
inc
jnp
and
fmull
nop
adc
pop
push
out
rclb
mov
movsl
xchg
cltd
in
and
lds
mov
or
and
xor
movsl
enter
out
adc
loop
inc
loope
pmuludq
in
js
in
jg
lock
mov
shll
mov
out
pop
pushf
mov
xlat
fldcw
add
inc
sub
xchg
addr16
mov
xchg
sbb
push
lret
fimuls
sbb
popf
arpl
je
or
cwtl
mov
mov
cmp
mov
mov
pop
push
sub
xor
jp
or
test
inc
fistps
pushf
mov
out
mov
insb
scas
in
fwait
pop
nop
jg
sub
enter
or
pop
fwait
xor
mov
adc
insl
add
ja
mov
cli
addr16
stos
aas
dec
mov
stos
push
addr16
adc
pop
mov
jnp
roll
mov
mov
adc
pop
stc
mov
in
cmpsl
movsl
xorb
ds
lret
mov
mov
mov
cli
push
mov
or
cltd
repz
stos
xchg
cmpsb
daa
xchg
push
xor
mov
mov
mov
xchg
cmp
sub
fstpt
push
lret
jnp
icebp
sbb
aas
test
jecxz,pt
shrl
xlat
mov
fucomip
les
ss
dec
fmull
lea
out
lock
repnz
xchg
cmp
mov
sub
xchg
or
pop
push
bound
popa
sbb
cld
mov
lahf
and
imul
push
lods
push
mov
stc
dec
fisubl
or
push
jb
ret
jmp
mov
fsubl
mov
cmp
arpl
push
ret
bound
mov
bound
adc
push
daa
les
adc
int
lods
sub
and
xor
cli
aam
dec
mov
and
push
cmc
mov
popa
dec
sbb
mov
gs
and
mov
popf
lcall
pusha
sbb
cmp
push
and
lock
inc
ret
ds
inc
test
movsb
sub
addr16
push
lds
jp
sbbb
cmp
in
inc
nop
hlt
in
loop
jo
push
jne
add
jmp
sbb
call
or
mov
mov
sahf
lea
rcll
hlt
sbb
enter
and
adc
cmp
jle
add
add
xchg
add
inc
push
stc
jecxz
pusha
xchg
mov
pop
adc
clc
sbb
push
adc
jle
push
shrl
aaa
xor
popa
ret
in
imul
adc
enter
push
imul
dec
xchg
mov
imul
dec
shl
mov
sahf
push
and
inc
dec
fnstsw
push
leave
inc
and
push
stos
out
push
pushf
outsl
hlt
shlb
sub
pusha
cmpb
test
ss
mov
call
fdivr
xchg
sbb
hlt
cmp
mov
cmp
fwait
or
cmp
lahf
mov
bound
inc
mov
cwtl
aam
test
xchg
sti
imul
out
outsl
xchg
pop
inc
out
mov
stos
xchg
cmp
in
sbb
push
and
inc
or
loope
push
mov
sahf
in
mov
mov
xor
sub
ret
mov
xor
jecxz
cmp
jno
ret
sbb
aam
push
jge
xchg
cmpsl
int
mov
movsb
mov
xor
or
icebp
lret
push
inc
test
cmpsl
sbb
sahf
xlat
inc
add
sub
inc
xor
scas
lds
out
jl
jg
ljmp
sub
jg
fidivl
inc
cs
and
lret
aaa
inc
nop
std
xor
push
fsin
js
and
arpl
inc
sub
les
mov
mov
orl
int3
out
jmp
cmc
bswap
lea
mov
pop
repz
mov
fistps
shrb
lret
call
inc
xor
jae
loope
ljmpw
dec
ret
mov
inc
test
sub
adc
xchg
pop
iret
fadd
sbb
hlt
and
pushf
mov
pop
popa
add
mov
fadds
outsl
gs
jns
out
and
data16
aas
jl
and
rclb
fnsave
xor
idivb
loop
mov
popa
cwtl
mov
cli
xchg
jge
add
inc
out
lock
jg
mov
fsubs
aad
orb
xchg
jae
mov
xor
stos
in
insb
nop
inc
andl
jne
scas
xchg
cwtl
data16
add
xor
push
add
jg
mov
lods
dec
mov
dec
test
mov
sbb
pop
mov
mov
mov
test
dec
sti
push
mov
loop
cltd
repz
cli
leave
jge
test
cmp
add
orl
cmp
push
shll
icebp
jecxz
jno
push
std
sahf
push
cmp
movsl
push
jb
out
pop
or
cmpsb
fistl
in
dec
jnp
jecxz
jno
movsb
lahf
push
cltd
stc
inc
mov
jno
imul
or
out
lret
xchg
cmp
aas
or
insb
cmp
outsb
fiaddl
ja
mov
cmp
dec
mov
aad
or
test
jo
sub
jne
sbb
mov
sti
and
inc
pop
inc
leave
sub
outsb
ljmp
int3
xchg
mov
pusha
ds
jae
xor
std
lods
sbbl
mov
jl
js
dec
int3
mov
loope
cmc
xlat
push
pusha
xchg
or
push
lret
loop
or
pop
and
mov
and
ret
pop
je
addr16
popf
cli
clc
pushf
aam
xlat
xchg
adc
mov
ss
mov
xor
xor
jns
fcoms
stos
add
leave
hlt
nop
adc
xchg
iret
push
jo
out
jl
add
mov
pop
popa
ss
iret
pop
pusha
cmp
nop
inc
mov
cwtl
out
lods
mov
xchg
nop
rcr
ret
sahf
cwtl
push
sub
out
jae
test
or
aaa
ret
orl
pop
push
mov
dec
int
in
xor
jg
ds
loopne
inc
push
pop
out
mov
jo
mov
xchg
shlb
fisubrs
ljmp
lahf
xor
ror
pop
in
mov
mov
mov
xor
rcl
pop
cmpsl
xor
rorl
fwait
cli
sub
mov
xchg
xchg
inc
jp
dec
and
fs
inc
lret
inc
ficoml
xchg
adc
aas
or
mov
pop
dec
push
dec
sarl
or
rcrb
mov
mov
adc
or
shll
mov
push
ja
pop
lods
cmp
sbb
out
lock
rorb
rcl
xor
or
clc
dec
mov
cmp
stc
inc
dec
js
repnz
mov
mov
mov
mov
ret
jp
jg
xchg
inc
jg,pt
or
test
jb
mov
aas
jg
cmpsb
call
jmp
sub
push
loope
xorl
sbb
out
sbb
fs
jae
push
add
or
insl
outsb
pop
js
es
mov
or
shlb
xchg
insl
repz
fists
pop
mov
fimull
outsl
fs
adc
jb
pop
mov
xchg
adc
dec
fstl
xchg
rol
scas
outsb
lods
cmp
nop
or
or
cmp
call
adc
mov
out
or
and
or
stc
loope
call
cmpsl
xor
ss
cmc
add
fidivl
fs
or
sti
xchg
pop
mov
imul
int
adc
add
push
mov
inc
mov
dec
jnp
iret
xchg
inc
mov
xor
lods
or
in
enter
adc
aad
jecxz
mov
add
pop
test
movl
mov
sbb
stos
hlt
jmp
in
in
mov
in
dec
sub
movsb
dec
and
push
mov
and
popa
pushf
fmul
insb
jge
mov
mov
test
imul
add
jno
push
cmp
pop
inc
sar
fcompl
push
push
and
sbb
jo
test
xchg
jns
mov
sub
pop
nop
notl
mov
test
mov
dec
mov
jge
sub
cs
push
pop
aad
sbb
adc
lds
ljmp
sub
jp
sbb
mov
add
push
repz
mov
add
xor
jno
cs
mov
pop
xchg
addb
shrb
imul
or
jbe
mulb
in
or
arpl
scas
stos
aam
pop
push
mov
jle
sahf
or
inc
sub
jle
xchg
add
lcall
adc
ss
loop
xor
sahf
outsl
push
insb
add
cmp
jbe,pn
aam
ficompl
sub
dec
jp
sub
test
mov
push
cld
xchg
mov
addr16
loop
xchg
push
cmp
notl
stc
cli
jge
xor
sbb
mov
in
loope
sub
mov
test
je
inc
test
repnz
shl
and
in
out
adc
movsb
repz
lret
repnz
or
jbe
and
cli
inc
mov
cltd
add
dec
cli
les
pop
nop
pop
pop
outsl
sub
push
xor
iret
sub
mov
mov
mov
je
loope
xor
xchg
ret
push
push
xchg
div
adc
or
sbb
aaa
push
bound
mov
mov
or
xor
cmpsl
popf
inc
aam
ss
lahf
push
test
cmpsb
inc
jno
frstor
orl
and
sbb
shlb
pop
add
test
stc
imul
and
or
repz
pop
mov
test
mov
loopne
test
xchg
jle
loop
xchg
int3
pop
mov
fldcw
jne
cli
sub
loope
loope
or
adc
cmp
jno
fdivrl
lock
lret
adc
sub
loopne
xchg
adc
test
aaa
lods
clc
jl
push
int3
in
mov
xchg
xor
pop
lods
mov
enter
adc
rorl
jecxz
imul
mov
xor
fwait
ja
push
pop
fdivrs
adc
push
stos
sti
mov
jae
ds
push
movb
xlat
iret
into
fstl
add
in
test
jg
adc
add
push
mov
jg
mov
push
outsl
add
xchg
stos
and
add
mov
ja
ret
dec
push
scas
sub
sbb
mov
mov
arpl
or
and
cmc
sbb
orl
jp
icebp
xorb
xor
push
out
dec
and
add
rcrl
push
int
ss
lret
xor
mov
std
cmpsl
enter
jp
ret
xchg
mov
mov
mov
xor
outsl
xlat
cltd
stos
jmp
pop
fisubrl
inc
jnp
popa
fcmovbe
call
and
mov
insl
loop
lods
push
adc
adc
leave
cmp
movsl
xor
gs
iret
add
jmp
aaa
hlt
jecxz
clc
mov
into
xor
in
cs
js
repnz
stos
dec
fs
adc
loope
fmull
das
scas
push
test
mov
or
jmp
test
ret
push
mov
xor
in
dec
jp
cs
xchg
insb
mov
in
or
xchg
push
cmp
inc
xor
js
das
xor
xchg
mov
jno
loopne
and
mov
fmull
mov
imul
imul
mov
cli
iret
iret
push
xchg
insl
pop
push
test
dec
andb
xchg
dec
adc
dec
gs
inc
inc
pop
pop
jno
jmp
in
inc
xchg
xor
jo
aad
inc
nop
push
fisttps
inc
insb
dec
cs
std
fcmovnb
cwtl
mov
lods
popa
sarl
fdivr
call
pop
out
mov
sbb
and
das
pop
sub
loop
pushf
push
mov
aaa
outsl
jmp
mov
mov
lret
and
shr
inc
lods
bound
cmp
sbbl
gs
lahf
jns
push
push
popf
pushf
out
sbbl
cmp
ja
and
mov
fiadds
push
mov
hlt
lahf
js
adc
add
mov
jmp
push
cmp
stos
lret
cwtl
fdivrl
mov
and
adc
cmp
jg
adcb
int3
insl
scas
sbb
and
out
adc
inc
mov
sub
xor
and
xchg
xchg
mov
mov
pop
sub
or
leave
sbb
mov
jmp
jno
sbb
jns
sahf
mov
test
jle
out
sbb
xchg
out
fidivrs
sub
aad
pop
pop
cmp
lcall
xchg
cmp
mov
out
mov
loope
or
cmp
jns
aam
sub
mov
xlat
fwait
jnp
mov
jmp
mov
nop
inc
ret
and
adc
stos
arpl
lods
daa
or
es
in
jnp
sahf
aaa
sahf
sbb
lds
pop
mov
or
and
shrl
mov
or
sub
enter
adcl
cmp
sub
lahf
rolb
and
loop
jmp
repz
sar
in
imul
inc
inc
outsb
mov
test
std
test
insl
pop
stos
js
lods
nop
mov
rclb
testl
popf
jp
popa
mov
js
lret
aam
dec
insb
cmpsl
xchg
push
aad
negl
divb
in
in
mov
pop
out
jne
jae
mov
int3
int
out
sahf
jg
lds
mov
sahf
adc
mov
rcrb
int3
test
das
xorb
test
mov
gs
lea
jg
aas
xor
mov
xor
std
or
mov
aad
or
mov
call
lcall
push
ficompl
lahf
mov
xlat
push
sbb
mov
dec
ja
lret
adc
addr16
pop
xlat
pop
mov
mov
jb
jno
das
sbb
jle
lcall
repz
addb
shrl
cld
cltd
ds
fistpl
test
fxch
outsl
roll
mov
pop
jno
mov
je
bound
sbb
cmp
mov
in
loope
lret
mov
inc
pcmpeqb
xor
lds
fdivrl
adc
and
lds
jmp
mov
out
or
imul
in
xchg
mov
mov
pop
fadd
inc
mov
push
ds
fcomip
add
xchg
stos
add
call
gs
in
push
cs
fwait
in
imul
mov
out
cli
fnstsw
lock
ja
or
fs
test
jecxz
fdivp
sub
or
addb
js
and
dec
mov
push
sub
dec
mov
push
pop
psllq
std
cs
mov
push
or
jg
cli
pushf
mov
lods
pop
inc
insb
test
sub
pop
mov
cmp
fistpll
sarl
xchg
icebp
rclb
rcrl
lock
movsb
xor
xor
cs
lods
rcr
and
push
inc
push
mov
xchg
jo
shrb
jo
leave
call
xor
loope
add
cmpsl
push
add
lds
jl
fwait
mov
add
subb
outsl
out
pushw
cmp
sub
repz
dec
insb
sbb
mov
lds
or
std
lahf
adc
xor
subl
push
mov
xchg
xor
call
into
jb
lods
nop
xor
sub
call
sub
sbb
mov
addr16
cltd
push
out
in
insb
out
cli
divl
pop
add
repz
lock
scas
inc
or
sbb
and
mov
roll
pop
lods
xor
xor
movsl
nop
ret
fistpl
mov
xor
cli
jecxz
dec
inc
or
inc
int
xchg
sub
ret
es
fs
dec
stos
aaa
xor
xchg
xchg
dec
xor
xor
push
andb
mov
and
mov
ret
sbb
sbbb
sub
sub
cli
cli
lret
xor
dec
jle
sub
enter
add
dec
imul
sarb
insb
lds
pop
cld
dec
out
in
jnp
scas
or
std
mov
negb
adc
adc
jecxz
push
shrl
push
cltd
js
pop
arpl
pop
mov
xchg
dec
jnp
pusha
fisttpll
xor
repnz
ret
pop
mov
dec
xlat
mov
inc
xchg
add
cwtl
xchg
mov
dec
jecxz
dec
jne
push
test
iret
mov
fisubl
stos
movsl
repz
push
push
insl
pop
negb
lcall
and
sbb
push
fistps
lods
xchg
push
inc
pop
inc
pop
or
push
cmp
das
and
pop
popfw
stos
ficompl
fsubp
jg
stos
les
decl
dec
cmc
das
push
leave
push
jle
int
rcr
or
mov
mov
fcmovbe
sub
xchg
cltd
aam
sub
pusha
xor
pop
incl
push
pop
repnz
mov
sahf
jg
mov
pushl
sahf
je
push
adc
loope
iret
xchg
jg
jnp
clc
lds
pop
cmp
jmp
mov
mov
out
imulb
mov
or
mov
cmp
pushf
jne
inc
mov
mov
arpl
mov
xchg
xchg
and
push
and
ret
rol
pop
inc
cmc
xor
xchg
pusha
test
inc
sahf
cmp
xchg
xchg
mov
mov
pop
jl
lds
loope
push
xor
pop
jae
push
movsb
fld
popf
or
mov
aad
cmc
ret
jnp
xlat
push
rclb
sbb
inc
cmpb
test
xor
mov
lods
mov
loop
push
jmp
scas
out
test
mov
dec
lock
mov
scas
in
or
lret
inc
repz
jp
or
aas
rcrl
jmp
rcll
cmp
push
cmpsl
mov
pop
cmpb
popa
cmpsb
inc
scas
cmpsb
dec
lret
shll
push
insb
stc
sahf
insl
mov
mov
ss
js
sbb
sub
out
xor
lock
mov
mov
mov
in
mov
push
fsubl
xlat
cmp
js
or
bound
push
push
xchg
dec
int3
push
xor
call
fldt
inc
iret
xor
imul
and
dec
cli
test
inc
aad
shlb
inc
or
adc
jp
iret
arpl
jp
mov
lahf
cs
xor
lcall
jae
dec
fistps
sahf
cld
jmp
pop
daa
jmp
inc
int3
lcall
cmpsl
xchg
out
pop
dec
jb
std
movsb
and
xchg
sbb
fdivs
loope
into
cmp
mov
shl
push
sbb
clc
xchg
out
cmc
cmpsl
outsl
fistpll
pop
jo
test
xchg
pop
es
sahf
fdivl
movsl
mov
inc
add
aam
xor
int3
xchg
xor
into
push
mov
into
jns
lea
sub
mov
push
pop
subl
jmp
addr16
mov
sbb
inc
mov
fsubl
repz
mov
shrb
push
push
test
mov
sbb
pushl
fidivl
sbb
push
or
loopne
pop
mov
adc
call
pop
jae
in
inc
xchg
shrb
rep
in
dec
sub
pop
push
gs
in
bound
mov
mov
dec
dec
mov
mov
negb
push
movsb
cmp
mov
out
mov
arpl
pop
imul
bound
lock
sahf
sub
cmp
and
push
mov
push
push
enter
lods
jb
jle
push
stos
mov
stc
out
mov
insl
sti
sub
inc
xchg
nop
xor
repz
push
inc
rcrb
cmpsl
jbe
jae
dec
jae
icebp
mov
hlt
mov
lods
mov
jp
lcall
adcl
dec
sarl
cmpsb
pop
mov
cmpsb
sbb
negb
in
fldt
std
ja
jb
es
and
jno
outsl
jmp
adc
jp
ss
cmp
arpl
repnz
jmp
push
data16
jno
jae
mov
loop
mov
adc
sbb
jg
inc
mov
sbb
and
lcall
cmp
insb
imul
daa
int
push
dec
or
test
mov
stos
sarl
icebp
subl
jl
test
lock
mov
mov
subl
call
mov
adc
mov
adc
push
push
mov
fidivs
inc
stc
mov
sub
add
jae
jbe
jae
mov
cmp
fs
dec
mov
pop
clc
xorl
mov
call
pop
icebp
insb
pop
les
mov
cld
ds
xor
mov
cmp
cld
stos
mov
jo
insl
jbe
lds
cmp
sarb
in
loop
sahf
enter
jnp
test
add
addr16
aad
mov
mov
mov
in
jp
loope
sbb
inc
mov
insb
mov
lea
iret
pop
jl
cld
in
aaa
sub
and
and
cmpsl
insl
int3
dec
jnp
xchg
push
add
mov
std
sbb
cmpsl
xor
rcrl
cs
fimuls
ljmp
xchg
cmova
mov
adc
mov
es
pop
out
jle
fisttpl
fcoms
js
dec
ss
adc
sub
out
xchg
push
or
std
dec
push
jno
scas
xchg
or
xchg
dec
inc
jmp
cmpsl
in
jne
stos
fs
adc
icebp
ret
sbb
sub
clc
sbb
fwait
jno
jp
cltd
test
loop
mov
dec
test
movsb
adc
xor
std
dec
pop
fimuls
mov
mov
icebp
sbb
sbb
fwait
mov
rcrl
test
ss
stos
push
test
mov
aam
mov
xchg
sub
adcl
lods
or
inc
les
add
nop
into
cmp
mov
xor
in
lock
jns
scas
arpl
daa
stc
dec
aaa
into
lock
lods
scas
mov
or
ljmp
mov
mov
jnp
pop
sub
dec
jp
clc
fiadds
cmp
mul
dec
iret
push
mov
rcl
rcll
andb
jno
lea
adc
es
rcrb
ljmp
xor
mov
cmc
cmpsb
jno
ret
lods
jl
mov
push
mov
call
jno
inc
int
pop
hlt
cmp
sbb
aaa
sbb
cmp
mov
adc
sbb
inc
push
or
cmp
inc
inc
push
out
push
push
out
jg
int
pop
lods
xor
sahf
mov
adc
and
push
lock
insl
clc
shlb
sbb
dec
imul
mov
mov
lret
andnps
movsl
int3
mov
and
call
cmp
add
ret
mov
pusha
xchg
repnz
in
inc
test
dec
imul
or
js
dec
fisubs
notb
loopne
push
push
dec
and
or
mov
ficomps
cmpsl
movsb
cmp
jmp
call
aam
js
xor
and
scas
xchg
sub
cld
mov
out
and
sahf
lea
out
or
or
movsl
fildll
mov
xchg
mov
flds
adc
rolb
dec
aad
pop
dec
inc
pushf
and
mov
mov
gs
aad
mov
mov
push
rcl
xchg
lea
test
xchg
mov
cmp
mov
call
lods
jb
sti
sbb
fs
sub
imul
cwtl
adc
aad
inc
adc
mov
mov
gs
sbb
mov
dec
es
inc
dec
cs
add
jnp
stos
fisttps
jbe
daa
xor
mov
sti
sarl
add
mov
push
cmp
cmp
into
push
jmp
and
xchg
and
jg
and
aaa
clc
pop
lods
loop
rclb
daa
push
in
jp
mov
loop
aad
push
adc
xor
stos
or
xor
push
dec
lods
sub
rolb
xorb
in
xchg
pop
xlat
pop
jnp
push
cmc
pop
or
xchg
lock
inc
and
mov
sbb
jmp
mov
lea
sbb
shlb
cld
sub
mov
repnz
and
push
mov
inc
adc
pushf
sub
stos
dec
mov
fcompl
popf
xchg
push
in
adc
imul
in
cld
jle
add
loope
add
sbb
fsubrl
adc
jno
test
hlt
dec
inc
sbb
ret
push
lret
sbb
lret
ds
cmp
xor
ljmp
and
ss
sbb
mov
pop
dec
mov
inc
mov
outsb
mov
dec
mov
add
jae
sub
xlat
repnz
dec
insl
loop
movsb
outsl
and
xchg
xchg
cli
jmp
cli
mov
dec
psadbw
xchg
movsl
inc
call
xor
dec
xchg
loopne
std
popa
or
xchg
lret
int3
xchg
nop
int3
aaa
fldt
xchg
test
out
fchs
daa
movsb
cmpsb
cwtl
dec
inc
data16
sbb
push
or
or
xchg
xor
rcll
dec
mov
mov
xchg
add
dec
add
pop
lock
dec
fcompl
push
cmp
imul
jnp
lods
sahf
lret
subl
cld
enter
or
jg
add
pop
xlat
mov
out
mov
mov
jle
ret
leave
xchg
mov
enter
sbb
iret
xchg
pop
mov
jecxz
into
inc
aaa
cmp
aam
xchg
shlb
push
insl
push
push
loop
repz
daa
pop
fwait
test
push
mov
data16
xor
repnz
cltd
dec
lods
fisubl
shrl
sbb
cld
sahf
dec
add
push
add
jns
push
hlt
add
xor
fisubrs
lcall
mov
cmc
ljmp
imul
dec
jmp
jo
adc
and
add
cmp
inc
mov
xchg
stos
and
jo
jne
test
scas
repnz
aad
lods
dec
imul
add
lret
and
or
std
ret
pop
jns
sbb
inc
loope
and
pop
imul
sub
jo
jp
fmull
and
jg
icebp
push
jle
push
xor
cmp
incb
sbb
stos
jb
in
jae
sahf
clc
mov
and
or
fistl
aaa
sub
sbb
xor
and
fabs
adc
sbbl
cmp
mov
popl
add
mov
roll
pop
fisubl
adc
sub
dec
cmp
push
mov
outsb
gs
push
enter
sahf
jg
adc
fimuls
cwtl
lret
and
pop
sbbb
cmp
lahf
sbb
shrb
test
and
xor
mov
inc
cmp
aam
and
mov
addr16
scas
push
and
imul
jnp
stos
and
mov
out
jno
rcr
dec
lods
shrl
fistps
lret
std
movsl
lahf
sub
in
jp
gs
js
pop
scas
leave
push
dec
lock
push
add
cwtl
xor
sti
jp
jmp
hlt
inc
cmpsb
outsb
cmp
test
pop
mov
pushl
divb
adc
or
add
fldt
xor
loop
xchg
dec
test
pushf
mov
mov
sub
scas
out
call
ljmp
imul
les
out
test
jg
fwait
and
fadd
movsb
lcall
dec
rcll
aas
decl
cltd
div
inc
jecxz
decb
dec
daa
pop
out
sti
pop
mov
fcomp
mov
mov
and
xlat
imul
sub
xor
lret
shrb
rcr
adc
jg
dec
inc
sub
test
daa
std
jecxz
add
es
pop
loope
aaa
sub
mov
aas
mov
rclb
mov
jmp
lcall
push
test
lods
ret
les
xor
into
cmp
enter
fs
fisubl
lret
push
sbb
popf
adc
loopne
mov
mov
push
fwait
rolb
jg
xchg
ret
adc
lods
in
fisttps
and
mov
or
popa
jb
adc
lcall
and
cmpsb
sbb
add
or
pop
xchg
mov
das
mov
mov
imul
notb
mov
mov
jbe
cld
add
movsl
arpl
fucomip
frstpm(287
cmp
push
sub
out
iret
jg
jle
testb
sbb
cmp
addr16
dec
lret
jmp
or
gs
lcall
sahf
cld
mov
mov
dec
inc
jns
cli
push
mov
add
pop
lods
mov
leave
and
lods
movsb
popf
adc
fwait
xor
test
jmp
les
push
push
jno
sti
jno
inc
ror
jle
and
push
dec
icebp
jecxz
lretw
fisubrl
cwtl
pop
sbb
leave
xor
fs
loop
lods
mov
les
enter
fwait
roll
mov
pop
mov
rdpmc
pop
lods
loopne
int
xor
push
int
jne
adc
lock
xlat
test
or
sbb
stos
test
sti
push
adc
pop
dec
xor
jg
scas
mov
dec
sub
test
inc
or
mov
cld
leave
dec
mov
cmpsl
sbb
add
pop
xchg
popa
loopne
pop
sub
adc
fisttps
orb
push
lods
repz
and
jecxz
jns
insl
jl
xlat
push
adc
mov
xchg
jno
sbb
test
cmp
adc
testb
cmp
sub
cmp
es
cld
mov
adc
fistps
pop
mov
inc
xchg
xchg
fimull
pop
ret
cmc
fdiv
dec
sti
cmp
fistl
mov
ds
adc
adc
inc
push
scas
mov
in
dec
insl
mov
jg
lcall
orl
ret
and
mov
adc
sbb
dec
test
jp
pop
lock
cmp
div
and
in
ret
lahf
sbb
scas
test
mov
and
gs
cmpsb
outsb
dec
insl
sub
aaa
mov
jge
mov
shlb
pop
mov
jno
xchg
xchg
pop
faddp
scas
ljmp
mov
adc
inc
mov
dec
xchg
xchg
scas
mov
mov
push
jo
dec
mov
gs
gs
pop
mov
clc
enter
adc
or
pop
mov
xorb
jb
mov
movb
clc
jecxz
xchg
movsl
stc
jns
jnp
sub
les
or
xchg
xchg
imul
pop
pop
sub
pop
out
dec
xor
out
arpl
adc
pop
sub
test
pusha
jp
xor
mov
xor
xchg
out
test
in
jo
mov
ss
out
shll
ss
xor
cmc
je
add
lea
enter
sbb
xor
mov
adc
aaa
sbb
jle
pop
cmp
xchg
push
xchg
sbb
xor
mov
pusha
xor
mov
dec
add
and
sbb
shl
repnz
mov
xchg
dec
sub
cli
popa
fcmovbe
mov
imul
stos
adc
inc
inc
in
add
das
cltd
mov
pop
push
movsl
cmpsl
mov
addr16
je
enter
lds
xor
mov
pop
xor
cmp
fs
mov
clc
cli
xor
cmp
inc
xchg
mov
adc
cs
lods
cmpsl
lock
xchg
jno
test
pop
xor
mov
push
pxor
lods
gs
out
call
loopne
inc
nop
mov
add
push
jl
stc
outsb
push
jl
push
fstpl
jmp
lret
cltd
repz
jmp
jno
mov
and
sub
inc
sbb
les
and
cmp
fyl2xp1
adc
insl
test
fwait
xor
jmp
inc
fsubrs
movsb
mov
mov
je
push
pop
mov
add
test
dec
fsubrl
aad
out
ss
in
lods
loop
fdivl
lcall
stc
add
sbb
pop
dec
mov
add
mov
shrl
pop
lcall
adc
inc
mov
subl
nop
cltd
lret
add
test
or
mov
sub
fnsave
add
orb
in
or
out
test
or
negb
cmc
fldenv
cmp
test
push
push
and
lds
mov
dec
inc
or
lds
mov
xchg
dec
popf
adc
std
ret
jl
add
cmp
add
jp
cmp
aad
movsl
lock
xchg
mov
mov
ja
pop
pop
mov
mov
pop
inc
gs
push
or
stc
sbb
rcr
xchg
mov
inc
jbe
ret
inc
jbe
aaa
xchg
inc
pop
xabort
push
adc
push
jmp
popa
push
leave
out
dec
xor
pop
or
aaa
mov
jae
lods
lea
sub
lret
push
stos
inc
test
sbb
out
das
xor
insb
in
test
cmp
xchg
int
cli
pop
stos
cmp
mov
outsl
sbb
jle
fwait
cmp
xor
jbe
fnstcw
nopl
and
xchg
cmc
sub
push
pop
or
sub
fwait
adc
jne
xor
nop
mov
fxch
repnz
cmp
scas
and
adc
out
cld
lret
testl
repz
sub
repnz
jecxz
lods
movsb
idivb
and
sbb
adc
mov
stos
fistl
add
fistps
sub
xchg
add
lcall
add
sbb
rcll
dec
syscall
push
sbb
mov
pop
scas
mov
sub
out
ss
jle
int
and
enter
sub
aam
mov
mov
jbe
fdivs
repnz
jbe
and
cs
mov
jl
test
cmp
dec
and
mov
fsubrl
pop
movsb
cld
adc
ret
rclb
sub
push
push
push
hlt
cmp
std
lahf
dec
cmc
mov
pop
rcrb
push
hlt
shrb
dec
jmp
cld
add
insl
into
dec
mov
jmp
gs
push
xor
hlt
pop
mov
cs
addr16
xchg
jl
ds
outsl
or
imul
xchg
push
pop
mov
aaa
leave
cmpsb
in
jno
push
pop
insl
dec
ljmp
mov
lds
sub
or
rcl
or
pop
cmp
and
or
test
push
and
xchg
aas
lea
sbb
jno
sbb
das
popf
xor
pop
push
pop
push
jge
jmp
sbb
adc
fnstsw
ret
arpl
jmp
repnz
mov
in
imul
adc
mov
jae
sub
out
sub
xor
inc
arpl
out
mov
inc
pop
dec
stc
daa
cmpsb
and
push
sub
inc
mov
pop
insl
push
dec
pop
stos
dec
sub
dec
pop
test
in
xor
inc
mov
imul
cmc
fstps
into
arpl
leave
jp
xchg
mov
sub
sbb
sahf
lds
loop
xlat
leave
jno
repz
shlb
outsb
mov
sub
xchg
mul
add
add
xor
cmp
mov
push
dec
cmp
and
push
sbb
in
mov
iret
xchg
ss
fimuls
mov
or
mov
mov
and
mov
dec
mov
icebp
lods
sbb
and
sub
jbe
int
jg
sbb
frstor
in
iret
dec
xchg
mov
fstps
jge
pop
sub
jbe
test
mov
push
sbb
dec
and
aad
cmpsb
add
mov
sti
lahf
clc
inc
xchg
movsl
xchg
movsb
aam
out
lret
scas
popf
cmc
pop
sti
rep
bound
mov
cmpsl
scas
mov
movsb
div
dec
ja
icebp
add
jl
dec
mov
lds
outsb
lret
add
sbb
fwait
gs
pop
and
xchg
jae
call
ret
xor
fimuls
and
mov
bts
les
and
or
cs
inc
out
jno
insl
mov
fsub
and
and
leave
mov
mov
pop
mov
push
ljmp
mov
fcoms
pop
out
lds
icebp
test
mov
pushf
push
push
adc
xchg
sti
jmp
jg
andb
nop
ror
fiaddl
lcall
push
hlt
jmp
mov
mov
iret
jp
into
out
pop
mov
insl
jp
cmp
jg
xor
xchg
mov
adc
leave
lahf
bound
sbb
cmpsb
push
es
xchg
in
inc
sub
cmp
xchg
iret
adc
jo
test
sahf
into
or
aaa
mov
out
popf
popf
add
movsb
scas
lods
imul
imulb
jae
push
mov
mov
sbb
int3
adcl
xor
add
sbb
jmp
inc
xor
sub
scas
adc
mov
icebp
dec
push
fstps
push
jecxz
sbb
inc
mov
jp
jecxz
fstp
jnp
xchg
movsb
enter
pop
aas
enter
nop
and
and
jno
int
in
test
push
inc
jnp
leave
subb
pusha
addl
in
sbb
pop
loope
fldt
jmp
dec
dec
js
or
arpl
and
stc
adc
dec
or
and
shrb
pop
iret
popa
sub
clc
dec
and
xor
mov
ret
add
mov
cld
inc
bound
pop
jg
jb
adc
sbb
push
addr16
mov
out
sbb
adc
and
fdiv
pop
inc
or
inc
pop
inc
subb
jns
aam
jecxz
xor
das
dec
incl
sub
inc
adc
out
ss
fimuls
cld
cmp
cmp
inc
ljmp
fwait
sbb
mov
xchg
mulb
mov
xor
aad
jecxz
push
test
mov
jnp
es
adc
dec
and
lcall
jae
mov
daa
and
xchg
push
lock
mov
cmc
xchg
jno
aam
mov
pop
push
gs
lret
xlat
test
rolb
jns
and
mov
pop
cli
sti
cmp
dec
cltd
fldt
mov
loope
sub
or
popa
push
xchg
cltd
shl
inc
mov
and
mov
dec
pop
cmpl
mov
popf
sub
xchg
lret
loopne
fcoml
xor
xchg
xchg
adc
imul
stc
pop
sbb
fcmovb
jo
sub
sarl
mov
ja
or
inc
dec
dec
adc
mov
mov
push
shll
cld
lods
adc
mov
stos
mov
scas
pop
jp
lds
fsubrl
sbb
dec
and
or
ja
pop
xor
pop
jle
repnz
rolb
add
pop
je
push
test
push
hlt
dec
add
inc
pop
mov
inc
ds
cmp
in
ffreep
inc
cmp
jb
mov
sahf
rcrl
divl
xor
inc
orl
push
mov
add
inc
rolb
mov
push
cmp
and
sbb
push
scas
stos
das
sarb
mov
jns
cwtl
in
outsl
xorb
and
pop
int3
out
fidivl
dec
test
je
popa
jno
orb
or
in
or
loop
push
bound
adc
mulb
mov
nop
mov
jb
mov
insl
aaa
jo
pop
xchg
sbb
in
mov
lcall
fucomi
xorb
ljmp
rol
ret
jl
subb
jb
in
ret
aas
mov
mov
jp
fwait
les
mov
bound
iret
add
bound
adc
jge
pushf
sub
sbb
fwait
in
iret
xor
test
inc
jl
jmp
cmp
rcl
inc
jle
sbb
rclb
inc
js
and
sub
movsl
iret
test
sub
add
or
test
mov
cmpsb
pop
jno
cwtl
out
outsb
xchg
jp
mov
outsb
ss
xchg
lock
inc
xor
popa
je
ds
add
stos
mov
in
add
jne
outsl
and
push
xchg
sbb
jecxz
xchg
fldt
in
xchg
aaa
adc
repnz
movsl
dec
and
popf
in
mov
fwait
adc
pop
fwait
nop
icebp
cmp
add
inc
mov
xchg
dec
mov
fsubrs
std
pushf
cmp
mov
or
enter
ds
mov
cmpsl
iret
jo
fstpt
insl
repz
jg
icebp
cmpsl
outsl
out
gs
dec
aas
mov
add
fiadds
popf
mov
into
sbb
arpl
mov
fisttpll
xchg
lods
pop
add
xor
sub
cmc
push
push
data16
or
mov
push
rep
call
pop
push
loopne
in
adc
dec
dec
or
dec
or
pop
mov
addr16
sti
mov
lcall
adc
add
hlt
pop
shrl
je
ja
sub
les
sub
push
es
sbb
arpl
stos
mov
jo
ss
neg
popa
mov
test
in
mov
or
mov
iret
lret
mov
icebp
xor
pop
pop
mov
mov
insl
fs
pushf
sbb
fs
sub
mov
xor
sbb
jo
mov
and
or
mov
sbb
push
bound
in
loop
mov
inc
push
rcrb
lahf
shlb
lret
pop
ja
testl
scas
push
and
push
xorl
shl
xchg
out
popa
ret
push
inc
test
scas
leave
addb
lret
les
xor
adc
mov
sub
add
in
push
sub
dec
ss
mov
arpl
xchg
pop
pop
dec
loopne
pushf
out
popa
clc
sub
cld
cmc
ljmp
stos
xor
and
inc
ret
xchg
pop
cltd
cmp
lock
inc
adc
std
stc
shll
daa
or
pusha
mov
scas
mov
xor
jo
popa
or
ds
xchg
fcom
and
adc
outsl
test
pop
mov
pop
or
rcrl
mov
jb
adc
pop
hlt
jg
xlat
mov
lds
sbb
and
adc
push
mov
adc
shlb
push
adc
fcoms
cmp
mov
mov
push
push
cmp
les
or
or
adc
jecxz
lret
xchg
lods
and
int3
das
into
sub
xchg
xor
fwait
in
enter
cli
lret
cmp
std
xchg
aam
ja
movsb
jle
adc
fs
cmp
imul
call
jge
add
out
fs
jecxz
add
cwtl
loopne
and
adc
imul
lahf
push
out
cmp
push
shrl
in
fwait
stc
aaa
ds
mov
movl
ja
out
xlat
loopne
cld
mov
repnz
xchg
or
ja
cmp
mov
stos
je
out
enter
ss
out
pop
jle
inc
enter
popf
sbb
cmp
test
push
push
adc
insb
pop
xor
cmp
imul
mov
adc
xchg
aaa
and
inc
pusha
fsqrt
inc
lret
sarl
or
pushf
wrmsr
dec
lret
hlt
mov
arpl
jl
pop
dec
lods
jo
rol
addl
jnp
sub
adc
adc
jge
ret
aas
jp
push
data16
pop
jmp
ja
sub
int
sub
dec
mov
sub
cmp
fldl
or
pop
dec
pop
cld
pop
imul
sbb
xor
xchg
mov
test
jecxz
int3
xchg
jmp
and
add
stos
test
out
adc
mov
pop
push
add
movsb
add
adc
jmp
xor
mov
adc
dec
sahf
add
or
xor
mov
out
ret
sbb
mov
inc
xor
pushf
int
inc
add
cmp
pop
out
sbb
mov
jp
push
shr
test
cmp
mov
and
pop
xlat
subl
fwait
mov
cmpsl
mov
fwait
adc
rcr
xchg
push
jns
xchg
mov
stos
stos
std
out
push
push
stc
inc
inc
lret
jecxz
cltd
outsl
mov
jae
aam
lds
fwait
data16
xor
iret
and
insb
and
stos
stc
sbb
in
dec
in
adc
incb
push
clc
mov
ret
lret
or
stos
and
fldenv
push
mov
gs
call
out
adc
fbld
or
sub
push
fdecstp
cli
pusha
mov
cltd
mov
ficoms
fnstcw
fmuls
andb
jo
notl
test
or
add
fcoml
repnz
fnsave
cmc
daa
iret
xchg
adc
ret
lret
xchg
mov
in
jne
dec
cmp
add
sub
movsb
dec
rorl
cmp
push
mov
xor
xchg
loope
fdivrl
out
iret
lret
mov
popf
xchg
shlb
cmp
pop
xor
lock
enter
mov
inc
inc
push
scas
and
jo
fmuls
pop
repnz
add
jno
cmc
les
pop
dec
mov
lcall
test
cmp
mov
jne
into
adc
cmp
lret
fcoml
and
adc
inc
inc
out
cmp
aas
ljmp
inc
gs
dec
aas
pop
orl
cltd
lret
cltd
adc
pop
inc
rclb
stos
imul
mov
and
mov
insl
mov
lods
and
adc
and
push
adc
mov
je
mov
pop
xor
movsl
dec
sbb
lahf
jo
inc
out
push
add
inc
sbb
es
mov
test
test
mov
cmp
movsb
les
filds
inc
fnstsw
fildl
push
subb
push
enter
jg
ss
adc
pop
add
cwtl
or
fdivrl
and
cmp
adc
adc
jp
dec
out
pop
xchg
push
je
bound
int3
sbb
fstpl
sbb
jne
outsl
sbb
mulb
loope
fwait
insl
into
ret
clc
or
mov
inc
push
push
push
mov
fs
xchg
inc
hlt
dec
icebp
and
dec
xchg
and
push
add
sbb
mov
jl
push
lods
test
lahf
adc
adc
mov
popf
lock
imul
aas
popf
shrb
inc
push
inc
pop
mov
jg
sub
stos
jl
sbb
pusha
or
add
and
imul
mov
jge
psubd
or
fnstsw
cwtl
cltd
jne
lds
mov
mov
clc
dec
pusha
in
int
xlat
sub
bound
sbb
repz
mov
into
iret
fiadds
sbbb
add
dec
sbb
movsb
pop
mov
mov
scas
leave
sub
scas
test
es
and
call
jg
repz
mov
jge
sbb
imul
loopne
loop
fwait
push
out
and
push
repz
sahf
mov
in
pop
and
loope
mov
bound
lods
xchg
jb
or
xchg
shll
dec
sbb
out
pop
scas
cmp
dec
lahf
adcb
dec
rclb
sub
clc
dec
mov
outsb
add
cmp
jo
sub
mov
mov
stos
mov
je
jnp
mov
or
je
push
mov
sbb
dec
sbb
outsb
and
dec
sti
loope
and
adc
xor
mov
pusha
mov
and
icebp
xlat
cmp
pop
cli
movsb
and
in
hlt
push
idivb
mov
dec
push
add
adc
mov
mov
adc
push
out
and
decl
sbb
sub
cmpsb
and
and
fidivrl
out
xchg
push
loope
je
rol
pop
xchg
out
pop
xchg
push
push
mov
ficoml
xor
pop
insb
repz
sub
popf
pushf
outsb
adc
nop
push
xchg
insl
xor
ljmp
add
rcr
push
mov
jmp
imul
addb
imul
es
sbbb
jae
pop
jno
add
mov
mov
and
cmp
rcll
and
add
dec
cmp
enter
xor
pop
adc
scas
lock
push
fs
mov
sub
or
sarl
xchg
cmp
xchg
jle
sti
mov
stos
sub
pop
out
iret
bound
dec
dec
jg
mov
mov
sbb
and
test
jmp
lods
mov
ja
cmc
xor
outsl
fbld
popf
out
cmpsb
xchg
enter
xor
sub
jge
movsb
sub
push
leave
dec
scas
or
mov
ret
inc
cld
adc
sub
xchg
subb
sbb
and
sbb
scas
xchg
pop
jae
push
dec
stos
xchg
adc
xchg
inc
or
and
imul
and
mov
jl
dec
pushf
and
fwait
pop
inc
out
dec
lret
pop
mov
in
cmpsl
in
daa
sbbl
xchg
dec
and
mov
mov
cld
in
mov
movsb
fldcw
pusha
in
in
out
jnp
sbb
movsb
in
movsb
mov
xor
dec
hlt
imul
cmpsb
fsts
and
and
loopne
call
cwtl
xchg
cmp
pop
mov
adc
pop
sbb
adc
cmp
cmc
mov
movsb
push
jae
add
dec
test
jno
loop
inc
pop
dec
xchg
mov
fisttpll
add
test
xchg
outsb
xchg
and
cmp
dec
test
pushf
arpl
mov
xor
sbb
cmpsl
aad
jle
xor
call
ljmp
cmc
dec
scas
aad
lock
and
insb
lcall
mov
cli
icebp
outsl
mov
pop
daa
lret
mov
adcl
lea
push
adc
mov
push
enter
mov
mov
mov
test
fldt
jle
add
or
aas
sub
push
mov
xorl
jp
mov
pop
lret
inc
dec
dec
sbb
add
mov
cmp
adc
aad
out
sbb
and
call
push
ds
and
arpl
pop
sub
mov
adcb
inc
sbb
fdivrs
mov
push
pop
mov
repnz
pop
hlt
sbb
pop
add
cmp
or
pushf
or
or
add
icebp
lcall
cmp
jbe
mov
nop
sub
sahf
int3
iret
js
sti
and
pop
imul
and
push
cld
push
mov
adc
out
and
shl
fsubrl
data16
ds
ret
fildl
movsl
out
push
es
dec
cmp
aam
adcl
call
or
sbb
nop
add
push
push
cld
lret
pop
xchg
push
mov
mov
sub
pop
and
out
push
dec
loopne
push
jg
dec
test
cli
rorl
push
movsb
stos
dec
cli
xchg
or
dec
add
jecxz
inc
fsub
push
aaa
add
loopne
jb
jb
ljmp
fidivl
enter
add
xchg
insb
movsl
sub
shl
and
mov
jb
ljmp
cwtl
jecxz
les
shrb
jmp
xchg
xchg
mov
inc
in
ds
push
mov
cmp
icebp
pop
stc
cmpsb
lods
mov
jg
mov
lahf
pop
sub
imul
mov
xor
int3
cld
rorb
xor
cli
mov
push
hlt
stc
xchg
or
mov
popf
sub
xlat
fsub
lcall
stos
fs
xchg
xor
loopne
sbb
test
add
mov
dec
aaa
mov
stos
dec
int
sbb
or
dec
nop
push
insb
push
mov
sarb
es
fisubs
cmc
adcb
jo
sub
fwait
sub
cltd
in
xchg
out
js
inc
inc
fisubs
movsb
lret
pop
in
pop
sub
jnp
sbb
cmpb
xchg
bound
cmp
ljmp
rcr
jb
and
mov
mov
mov
push
mov
fimull
sub
sub
mov
stc
div
sbb
inc
adc
mov
into
notb
int3
pop
ficoms
int3
das
js
jns
lret
or
pusha
mov
cli
int
mov
repnz
push
dec
mov
fs
lahf
add
mov
mov
xchg
add
clc
cwtl
inc
pop
mov
aaa
xorl
mov
push
mov
inc
dec
mov
test
xlat
push
out
mov
ds
pcmpeqw
jae
lahf
popf
jmp
cmp
je
imul
add
cmp
sbb
flds
sbb
inc
mov
negb
mov
hlt
fadds
fidivs
jb
xor
cmc
xchg
ret
movsb
repnz
dec
std
sbb
mov
testl
fidivl
cmc
xor
in
mov
shll
scas
rolb
or
fs
mov
pop
jnp
shll
jno
push
bound
scas
push
js
loope
lock
ret
xchg
dec
mov
test
mulb
cs
lahf
mov
add
sub
jl
leave
cmp
lea
xchg
mov
pop
push
dec
enter
xchg
icebp
cld
imul
addl
inc
outsb
xor
negl
xchg
imul
es
adc
cmp
mov
roll
jg
repnz
mov
lcall
call
je
insl
sub
sti
fildl
lcall
pop
mov
int3
cltd
or
int
out
icebp
sbb
fcomi
xor
push
outsb
xor
push
sub
mov
pop
sbb
xchg
add
out
mov
rcr
inc
clc
shlb
into
and
pop
push
test
shl
inc
outsl
push
inc
jae
inc
int3
jge
xor
lret
clc
lea
jb
pop
jmp
sarl
jne
sbb
xchg
inc
aaa
test
push
loop
mov
mov
lock
mov
pop
inc
stc
add
test
xor
jno
call
ljmp
nop
mov
sbb
mov
or
xchg
mov
dec
xchg
sbb
xchg
int3
mov
aam
clc
inc
add
cld
daa
sbb
push
nop
push
push
notl
test
push
test
push
mov
mov
mov
outsl
inc
ffree
sbb
and
int3
inc
mov
push
jle
jle
nop
mov
xchg
pop
sarb
neg
gs
add
adc
jp
mov
fdivp
or
pop
lcall
adc
aam
dec
fld
shl
fnstenv
hlt
movsb
mov
ss
pushf
lret
stos
fsubrs
inc
sbb
cmc
dec
mov
out
and
ret
adc
test
adc
outsb
or
negb
lret
cwtl
out
pop
and
fbstp
scas
add
or
mov
ds
jmp
push
inc
je
in
and
aam
out
rcrb
cmp
je
push
or
scas
fdivrl
jns
jle
out
jno
push
jp
push
imul
cmpsl
cld
jmp
insl
mov
jge
and
jns
xchg
fdivs
mov
stos
lods
stos
mov
js
insl
in
mov
mov
add
into
cmp
cmp
cmpsl
jg
jns
inc
into
sub
sub
push
lret
mov
test
mov
mov
in
mov
das
out
test
xchg
sahf
mov
sahf
jl
sub
push
xchg
add
mov
rcrb
adc
mov
cmp
std
stos
xchg
dec
out
div
lock
out
test
lret
pop
or
fbstp
insb
mov
movsb
pop
js
pop
xor
or
sbb
mov
int3
push
and
add
icebp
ja
xchg
adc
dec
mov
arpl
jmp
inc
jg
push
sbb
sbb
sub
cmpsl
lods
xor
sbb
sahf
sbb
es
mov
into
cmc
mov
xor
test
ss
loop
push
lods
jg
push
jl
cmp
test
xchg
fs
push
add
scas
push
fs
inc
test
prefetchw
int3
fcomps
mov
add
imul
xor
lret
mov
xchg
outsl
ret
inc
mov
sub
add
cmc
xchg
push
sub
xorb
jp
shrl
dec
xlat
insl
lahf
mov
out
mov
pop
subb
pop
jecxz
hlt
popf
out
push
dec
iret
add
or
cmp
and
lret
hlt
mov
lret
cli
sub
imul
sahf
inc
pop
lods
test
pop
in
sbb
add
lods
xchg
cs
popl
icebp
or
and
inc
pop
mov
jae
dec
popf
push
add
cbtw
leave
in
inc
push
pop
outsb
popa
aas
xchg
add
cmp
ds
pop
xchg
test
stos
sbb
icebp
xchg
in
daa
dec
mov
xchg
pop
or
arpl
xchg
xchg
mov
push
lock
enter
dec
push
jmp
cmp
lret
adc
rol
popf
sbb
insl
xor
test
ret
bound
xchg
jo
sbb
cltd
pop
into
insb
outsl
inc
mov
testl
xor
movsb
pop
andl
mov
dec
and
fwait
and
sbb
xchg
dec
jbe
rorl
loop
sbb
xchg
dec
out
popf
lds
stos
das
loope
lahf
out
add
inc
es
xor
mov
out
cli
xchg
aaa
push
das
xchg
cwtl
pop
jge
jnp
pop
jp
adc
out
mov
inc
mov
or
cmp
push
xor
xor
aaa
inc
push
cli
cmp
sarb
divb
jge
test
mov
mov
xchg
push
xor
or
incl
icebp
mov
rol
or
jnp
xor
fimuls
enter
mov
fs
mov
xorb
mov
pop
mov
sbb
push
loope
or
xchg
jb
pop
cmp
sbb
leave
in
pop
mov
or
adc
in
pop
ss
pop
jmp
int
xchg
xchg
clc
add
add
out
in
fwait
pop
scas
cli
daa
psubusw
fwait
mov
sbb
out
cmpl
lods
pop
sbb
faddl
lahf
sub
gs
dec
nop
cmc
push
add
pop
lcall
cmp
cmpsl
xor
and
fstps
fsts
xor
mov
push
ss
addl
or
mov
sub
scas
xchg
bound
add
adc
idiv
cmpsl
subl
jp
push
insb
mov
push
xor
mov
shll
sahf
jg
subl
mov
popf
fldenv
pop
int3
push
imul
stos
in
lret
dec
cmp
repz
mov
je
mov
repnz
and
push
pop
xor
sub
fstpt
pop
or
sbbb
mov
and
inc
rorb
out
dec
movsb
repz
jmp
scas
mov
bound
adc
int3
pop
adc
push
pop
cmc
jne
test
lea
lods
outsl
lods
pop
out
inc
mov
test
cmp
insb
dec
in
inc
clc
push
xchg
and
xor
cwtl
rorl
mov
outsb
jge
rcl
test
out
xchg
ror
sub
fcmovne
pusha
idiv
fdiv
xor
arpl
in
or
ds
incb
popf
stc
pop
sbb
mov
jmp
gs
sbb
test
andl
add
aad
movsl
lock
adc
repnz
inc
sub
adc
adc
test
add
dec
addr16
xchg
daa
mov
adc
call
insl
fildll
in
ljmp
andb
int3
movsb
pop
cli
movsl
pop
pop
inc
pop
add
call
or
les
aaa
mov
mov
lahf
out
mov
inc
add
xor
pop
adc
mov
and
or
fsts
dec
mov
insl
sar
adc
cltd
cmpsl
js
mov
xchg
or
dec
ja
and
pop
cmpsl
cmp
inc
push
pusha
cvtps2pd
testl
aam
inc
xchg
pop
sub
xchg
pop
lret
xchg
mov
push
daa
inc
push
js
int
arpl
xchg
inc
push
mov
mov
iret
push
or
lods
ja
jg
pushf
int
lret
lds
in
push
inc
int
dec
xor
and
cli
inc
aaa
sarb
xchg
sub
adc
stos
divl
mov
cmp
ljmp
fisttpll
adc
mov
pinsrw
dec
cmpsb
mov
inc
inc
sbb
loopne
in
and
movsb
xchg
jns
or
mov
dec
mov
sbb
movb
aam
mov
dec
in
fdiv
sub
das
dec
push
shrl
clc
iret
insl
dec
mov
inc
outsl
test
mov
cmp
popa
loopne
test
and
mov
dec
push
xlat
and
mov
push
bound
test
adc
pop
mov
dec
cmc
push
popa
jns
jmp
jae
popf
ss
lock
push
icebp
xchg
dec
fisttpll
sub
xchg
push
or
popf
data16
les
or
fimull
jmp
cltd
xor
xchg
mov
pushf
dec
in
jmp
in
mov
mov
xor
dec
out
sti
fisttpl
ljmp
mov
cmpsb
and
jle
and
mov
js
mov
push
mov
xor
subl
jge
jl
jge
push
jbe
jo
mov
or
in
fiadds
xor
adc
mov
mov
outsl
cmp
pop
and
pop
mov
arpl
movsl
or
outsb
lock
movsb
sub
mov
lods
rorl
ja
add
fisttps
jg
inc
push
into
jns
inc
jle
push
cmp
xchg
mov
enter
push
popf
ja
sbb
jne
push
fcompl
push
lret
add
icebp
lahf
cmpsl
sub
hlt
mov
movsb
and
fdivl
adc
mov
lcall
sbb
dec
cmpsb
mov
out
es
pop
push
jg
sarl
sbbl
dec
pop
sbb
or
je
mov
iret
rorl
in
loope
subl
cmc
popf
aad
lods
dec
and
lret
sarl
or
sub
sbb
stc
jbe
adc
mov
cld
mov
pusha
or
jns
xchg
mov
mov
mov
push
lcall
decl
sahf
cmp
cwtl
jmp
shlb
xlat
mov
jne
pushf
cmpsl
fwait
dec
lret
dec
sarb
xchg
adc
sbb
sub
ja
aad
mov
sbb
fxch
adc
add
icebp
lods
rcrb
and
mov
movsb
mov
xor
xchg
aam
push
cmpb
loopne
or
and
pusha
fisttpl
repz
xor
lcall
and
mov
in
cmp
and
xor
scas
stos
sub
mov
stos
xor
and
std
xor
push
data16
dec
loop
shrb
mov
aas
sarb
mov
pop
push
mov
mov
fwait
sti
sbb
mov
push
rolb
sub
adc
sub
jbe
outsb
pop
loop
repnz
dec
cwtl
das
test
xchg
fadd
mov
or
cs
loop
lock
mov
xchg
jle
pusha
push
loopne
mov
and
lock
adc
divb
or
jns
subb
sub
xchg
inc
bnd
out
rorl
sbb
inc
jge
ret
pop
adc
shr
ss
in
sbb
das
outsb
cmpsl
cmpsl
int
out
push
fistps
mov
fdivr
sbb
leave
loopne
jne
mov
cmc
or
dec
mov
es
pop
mov
sahf
mov
lods
mov
jp
or
mov
scas
jp
scas
bound
mov
lea
out
int
test
imul
lret
push
mov
and
imul
movsl
jg
sarl
and
cmovg
jb
xor
xor
sub
mov
in
sbb
cld
inc
xlat
clc
dec
pusha
and
sbb
ds
jbe
lods
push
xor
fimuls
push
ja
icebp
mov
push
lret
cltd
jge
nop
push
into
add
ja
mov
pop
test
jge
adc
or
cmp
mov
xchg
jae
pop
popf
in
loopne
jb
and
or
stos
movntps
pop
data16
mov
in
sysret
cmp
mov
stos
cmp
and
insb
fidivs
push
mov
pop
jecxz
sbb
insw
pop
and
or
aas
call
jmp
sbb
in
cmp
jmp
movsb
xchg
jbe
mov
push
cmpl
xchg
out
lret
and
imul
mov
cltd
or
cmp
loope
stc
insb
mov
mov
insb
pop
xchg
cmp
cmc
inc
sub
mov
lods
dec
xchg
cmp
or
std
lahf
pop
frstor
sbb
mov
push
push
inc
aaa
lret
fwait
mov
nop
mov
push
mov
jae
adc
adc
and
inc
addb
jmp
mov
jns
or
lock
daa
xchg
adc
mov
add
add
sub
test
xor
pop
outsl
adc
add
and
mov
jns
icebp
add
sbb
outsl
push
xchg
push
and
push
shlb
or
lods
mov
imul
aas
ljmp
and
push
xor
das
xchg
xchg
out
roll
subl
sbb
jp
mov
outsb
dec
adc
or
push
std
xchg
aas
mov
dec
or
pushf
jae
cmpsb
jg
loope
xchg
jecxz
stos
inc
fimuls
scas
mov
cmp
lea
jecxz
in
nop
je
add
loopne
push
out
decb
inc
pop
push
test
pop
jb
cmp
add
jmp
inc
hlt
frstor
jecxz
ja
daa
and
xor
cmpsl
add
popa
inc
in
ljmp
idiv
jbe
pop
pushl
pop
and
push
and
scas
dec
in
mov
shrb
dec
mov
fsub
and
mov
fstl
push
sub
in
cmc
xor
add
pop
jns
sbb
sub
cmp
mov
mov
push
les
jmp
dec
pop
push
add
cs
add
mov
arpl
popf
in
inc
test
aad
rorb
jnp
test
es
jbe
andl
sysexit
mov
cmc
sbbb
xor
std
dec
push
je
ret
push
xor
into
adc
jg
push
jno
add
jl
push
ja
inc
popl
hlt
sub
cmp
leave
out
test
or
mov
sub
fstl
repz
mov
mov
pop
sub
and
mov
add
cmp
jecxz
sub
pusha
mov
cltd
dec
jge
jns
shll
cmpb
call
lds
dec
lcall
dec
aaa
mov
mov
sarl
push
xor
aas
pop
jbe
repz
jns
jae
adc
mov
sbb
or
mov
push
rcll
orb
into
insb
cld
push
daa
jnp
popa
adc
ret
jnp
fidivs
xor
add
cld
fcomi
xchg
sub
pop
loop
data16
insb
sarl
sahf
xor
sbbl
in
int
bnd
xor
pop
jl
mov
nop
scas
out
idiv
movsl
push
jnp
mov
sbb
popf
arpl
outsb
sbb
mov
xchg
pop
jnp
shll
mov
scas
add
mov
sbb
cmp
xor
sbb
fstp
mov
in
mov
xor
pop
push
push
sar
fildl
inc
xchg
insb
xlat
cld
cmp
adc
inc
test
dec
rol
ret
lea
in
imul
jnp
push
jae
enter
cmovge
sti
repnz
negb
imul
sbb
adc
loope
call
lock
popa
xor
lods
ret
test
sbb
mov
xor
jmp
sahf
mov
insl
push
test
mov
jbe
ret
imul
cmp
rclb
repz
negb
adc
arpl
test
and
out
data16
lcall
cli
cmp
xor
fidivs
movsb
rorl
mov
mov
out
jnp
aaa
imul
stos
xchg
pop
mov
push
sarb
or
lds
pop
jnp
mov
inc
dec
pop
push
push
std
pop
xchg
mov
jg
dec
test
and
pop
pop
test
cwtl
test
stc
mov
add
fnsave
sub
push
jns
push
lea
call
in
pop
insl
dec
cli
subb
in
rorb
adc
mov
dec
sbb
test
es
mov
push
mov
xchg
pushf
jns
mov
sbb
dec
imul
in
mov
mov
pushf
jnp
cmp
push
pop
or
or
fimull
jo
jge
xchg
mov
and
test
movsb
and
addb
jb
jno
xchg
adc
gs
jno
movnti
jmp
cs
in
xor
insl
nop
cmp
das
scas
pop
sarl
or
lret
movsl
sarb
test
xchg
pop
jbe
clc
les
fs
setbe
adc
push
ja
mov
dec
mov
push
int3
lcall
loope
in
fs
jecxz
push
pop
call
leave
adc
in
push
ror
movsl
cmpsb
mov
sahf
mov
shl
push
cwtl
pop
mov
loopne
and
xchg
pop
adc
push
rcr
xchg
ja
pop
cld
mov
mov
xor
sbb
mov
dec
movl
jg
pop
sub
ja
pop
add
mov
or
aad
mov
pop
aaa
ljmp
mov
inc
popf
cmp
mov
pusha
es
sub
testl
dec
sub
cmp
in
inc
aam
cltd
xchg
dec
dec
sti
sbb
dec
in
pop
pop
test
and
cwtl
push
mov
xchg
sub
lcall
in
and
int3
clc
cmp
sub
cwtl
jo
pop
mov
int3
jno
aaa
cld
sub
cltd
cmp
mov
sub
cmc
fbstp
das
clc
xchg
divb
lds
in
mov
mov
mov
jno
test
icebp
sbb
rorl
add
lock
sub
cmp
jecxz
inc
js
decl
fsubrl
leave
vmread
add
mov
fcmovb
jns
bound
or
pop
cmp
jle
jecxz
ja
dec
aaa
pop
xor
cmp
out
mov
cmp
or
std
push
inc
outsl
aad
mov
mov
popa
jge
cmpsb
fucomi
in
inc
mov
mov
xor
cmc
xor
push
pop
shl
pop
xor
in
push
xchg
in
mov
divl
out
push
fimull
fnstsw
out
dec
fisubrl
sub
rorb
pop
or
mov
jbe
loopne
mov
ret
insb
xchg
pop
js
testl
lret
and
sbb
arpl
pusha
mov
fstl
dec
jmp
repz
mov
rclb
push
pop
pushf
loopne
and
mov
jg
mov
xchg
and
das
mov
flds
lret
add
andb
popa
es
mov
jns
mov
push
ja
pop
ficompl
filds
dec
push
add
jb
repz
cmp
and
jl
mov
idivl
xchg
aam
test
push
or
push
pop
orl
ja
adc
cwtl
inc
fsubl
xchg
or
pop
mov
mov
pusha
stos
movsb
or
fadds
jb
cmpsl
int3
dec
jnp
xor
inc
adc
rorl
dec
jae
imul
insb
push
out
stc
out
addr16
sbb
frstor
mov
add
mov
shll
mov
les
cli
inc
or
sub
in
inc
sbb
in
repnz
adc
insl
outsl
jns
fdivl
push
mov
sbb
clc
filds
stc
push
pusha
adcl
subb
xor
inc
push
adc
cmp
sub
sahf
pop
mov
mov
test
xchg
sbb
dec
insl
xchg
addb
cmpsl
call
sub
mov
inc
mov
out
mov
aaa
push
lds
pop
inc
push
pop
cmpsl
lods
jnp
xchg
sbb
fldenv
jnp
add
scas
jae
pusha
pop
inc
adc
repz
push
js
ljmp
push
fwait
jg
push
pop
jne
push
dec
dec
roll
rcrl
jp
out
loopne
add
inc
sahf
testl
jl
add
inc
sar
imul
inc
add
in
jp
push
ret
repz
jecxz
inc
lock
rorb
fcmove
mov
jl
cli
cmpsl
movsb
fisttpl
lds
dec
push
shll
nop
adcb
ficoms
jb
fsts
mov
pop
ficomps
rep
int3
sarl
sub
popf
mov
xor
pop
pop
stc
inc
cmp
scas
xorb
mov
push
out
mov
popa
fbld
repnz
rcr
pop
cmp
xchg
jns
push
xor
std
xlat
stos
movsl
daa
test
loopne
add
sbb
mov
adc
and
jle
sbb
add
dec
xor
mov
mov
cmpsb
cmp
push
dec
mov
int3
dec
ljmp
mov
cmp
sbb
ja
repz
cli
clc
fdivr
into
cmp
xchg
ljmp
les
in
adcb
jle
add
mov
movsl
movsb
sbb
outsl
fabs
rorb
adc
arpl
gs
dec
add
jno
xchg
dec
xchg
fs
notl
orb
jae
jmp
mov
jg
clc
push
aas
out
push
add
ret
sarl
cmpsl
loope
in
loope
jnp
pusha
push
pushf
push
push
rclb
or
imul
sub
bound
or
cmpsl
hlt
jl
adc
push
push
mov
add
das
cs
cmc
pusha
add
dec
cmpsb
cmp
mov
aam
out
adc
mov
mov
rcr
push
and
add
jmp
call
ljmp
test
xor
lret
ror
xchg
je
cltd
ja
stos
dec
inc
scas
call
or
popf
xor
mov
xchg
xor
sbbl
or
fs
or
fwait
sahf
repz
bound
adc
pop
sahf
adc
out
jb
std
sbb
idivl
lods
pop
movsb
pop
jmp
jae
or
push
ret
or
movsb
nop
into
inc
xor
or
cmc
fcmove
cmp
pop
aas
fwait
mov
adc
leave
cltd
sarl
incb
lds
pop
adc
pop
mov
xchg
mov
sahf
jne
xlat
stc
add
mov
outsl
repz
cmp
xchg
adc
shlb
fiadds
cld
cli
shrb
shl
sahf
dec
xchg
mov
in
out
cld
mov
imul
int
xor
fnstenv
sub
sub
pushf
push
pop
or
repz
fcompl
in
pop
jns
cmc
sbb
arpl
jne
push
decb
in
test
push
in
add
push
cmpsb
sub
loope
pop
es
dec
je
mov
sub
ret
outsb
jl
in
sbb
cmp
push
stos
js
arpl
sbb
xor
pop
xchg
lcall
xor
aam
aaa
xchg
sbb
imul
hlt
push
inc
out
ficompl
xchg
xchg
adc
pop
xchg
inc
int3
cmp
shlb
out
addr16
xchg
pop
popf
pop
negl
daa
push
sbb
push
mov
es
lret
jbe
adc
fistl
pop
ja
cmp
and
and
lds
ss
pushf
jbe
mov
inc
mov
and
push
add
lahf
std
movsl
les
dec
dec
in
pop
mov
push
cmc
adc
push
mulb
lods
sub
dec
sub
cld
int
pop
jo
sub
js
add
mov
jae
lods
mov
adc
inc
mov
int
outsb
jno
sub
fstpl
or
lods
loopne
out
pop
stc
mov
xor
aad
cmc
sub
inc
lods
loope
mov
stos
sbb
movsb
out
scas
test
mov
cltd
mov
jmp
popf
add
movsb
inc
xchg
js
and
aam
sahf
sbb
fisubl
jne
mov
sbb
mov
mov
adc
iret
popf
inc
add
xchg
movsl
cmp
mov
dec
adc
repz
rep
sti
iret
je
adc
imul
mov
inc
aas
fdivrp
loop
lods
cs
mov
lds
jns
xor
jne
inc
test
test
push
dec
js
inc
mov
cmpsb
movsl
push
inc
lea
movsl
int
cmc
cltd
jne
notb
fisubs
mov
xor
dec
add
mov
ret
cmp
mov
sbb
pop
sti
jnp
and
cmc
into
adc
stos
push
xchg
xchg
jp
xor
jge
cwtl
imul
pop
and
mov
ret
scas
mov
mov
sti
inc
lods
mov
xchg
mov
inc
mov
push
pop
xor
inc
add
cmpsl
or
mov
or
sahf
and
push
xor
mov
fmuls
xchg
or
mov
cmpsb
jae
pop
fstpl
aaa
push
cltd
xchg
nop
mov
jb
aaa
mov
pop
cmp
xor
loop
cwtl
xchg
pop
sarb
in
sbb
xor
divb
pop
stos
imul
mull
fistps
movsl
rcll
push
mov
sbb
cmpsb
and
ja
push
push
in
cmp
jbe
push
add
cmp
and
es
icebp
lcall
imul
xchg
and
es
fucomi
sub
cmp
shl
dec
push
shl
les
das
dec
and
fidivrl
ret
imul
rcll
xlat
dec
leave
test
out
mov
add
hlt
jl
sahf
jnp
sub
pop
hlt
test
popf
mov
daa
mov
or
out
mov
scas
scas
jg
mov
cltd
push
sbb
out
test
pop
iret
jle
ret
fcmovbe
loop
inc
xchg
xchg
jo
add
dec
adc
jns
mov
ret
cmp
or
lahf
adc
std
mov
xchg
ljmp
int3
cli
daa
dec
dec
jge
jge
ja
nop
dec
pcmpgtd
pop
push
es
jb
jb
add
lcall
dec
pop
test
xor
push
push
mov
sub
dec
sbb
bound
cmp
and
xchg
subb
mov
and
lock
and
mov
js
int
stos
jno
sbb
rorl
sbbl
lcall
cmp
loope
sub
outsb
mov
popf
mov
mov
mov
cmp
dec
imul
xor
stc
aad
dec
scas
repz
rcrb
in
call
pop
mov
jg
add
lret
xor
loopne
subl
fadd
insb
lds
popa
sbb
mov
inc
xlat
push
jp
mov
add
pop
mov
push
push
mov
sub
out
and
in
pop
xor
aam
inc
lods
insb
movsl
inc
and
pop
sti
mov
mov
or
mov
inc
jnp
into
mov
add
hlt
adc
loopne
lahf
stc
dec
hlt
insl
jno
cmp
out
iret
sbb
inc
or
repz
out
hlt
sub
pop
les
dec
xchg
add
pop
dec
adc
inc
jnp
pop
adc
fidivrs
mov
imul
sub
push
out
sbb
and
popl
arpl
inc
push
ror
mull
mov
pop
movsb
or
cli
call
scas
lea
inc
sbb
sti
ret
mov
and
push
adc
ficomps
std
xor
pop
sbb
clc
pop
pop
stos
lods
stc
icebp
imul
pop
dec
cmp
xchg
sbb
pop
mov
cmp
pop
sub
std
mov
sbb
nop
dec
ja
mov
lea
ret
rcl
mov
or
decl
js
jmp
jnp
mov
cltd
inc
jno
rol
jno
pop
mov
rcrl
insl
sahf
dec
mov
cltd
push
cs
pop
lds
leave
movsl
test
test
insb
push
jbe
inc
cltd
push
xchg
or
jno
mov
jmp
add
dec
mov
movsb
xchg
fldcw
arpl
add
outsl
add
fsubrl
jne
cwtl
call
lret
lret
negl
or
aas
aam
inc
cwtl
sahf
cmp
jmp
pop
rorb
ss
adc
push
mov
je
loope
fidivs
movsl
xchg
sub
subl
shrb
dec
mov
test
popa
or
xchg
test
xchg
push
sti
sahf
jnp
into
jb
daa
and
jbe
mov
leave
push
shll
je
mov
jecxz
push
outsb
sbb
sub
and
repz
sub
dec
mov
and
ss
es
nop
das
loopne
mov
push
shr
les
imul
mov
movsb
dec
cmp
xchg
loopne
add
cmc
inc
sub
jb
mov
pop
inc
fdivs
loope
fstps
push
dec
or
jnp
mov
int3
pop
and
mov
mov
sbb
test
cmp
insl
jg
cmpsb
jo
mov
test
cmpsl
add
mov
xchg
or
push
pop
or
out
xchg
push
xorb
insb
je
push
int3
cmpsb
inc
xchg
ret
cld
fadd
sub
cmp
inc
std
popf
mov
dec
cwtl
adc
xorl
arpl
fwait
add
call
inc
ret
stos
rcrb
insl
or
and
or
div
bound
jl
mov
sahf
xchg
mov
pop
mov
pop
xor
inc
lods
inc
adc
jb
mov
sub
jb
mov
fs
addb
xlat
test
mov
or
add
test
into
inc
mov
xchg
mov
outsb
in
mov
inc
js
loope
and
jg
out
fucomp
inc
xor
xor
loopne
jle
dec
addb
pop
adc
add
jo
xor
in
inc
imul
cmp
pop
psubsb
test
cmpsl
js
xchg
lcall
cmp
and
push
jnp
and
idiv
mov
pop
cmp
adc
je
popa
sbb
add
jno
cld
mov
pop
push
shr
cltd
loope
das
leave
sub
fisubl
sub
adc
lods
imul
sbb
xor
dec
lcall
sub
mov
scas
stos
pop
pop
dec
int
and
xchg
stos
and
mov
cmp
dec
jp
test
xchg
and
enter
scas
ss
pop
ret
mov
subb
adc
mov
lea
mov
mov
rcrl
rcrb
dec
fstpl
sub
int
enter
sbbb
mov
mov
sub
lret
repnz
je
adc
and
ret
add
bnd
popa
out
xor
xlat
mov
cmp
add
jmp
and
push
loop
or
mov
movsl
in
aas
pusha
mov
xchg
out
and
sti
cmp
mov
fiaddl
cmp
outsl
ja
cmpsl
aas
mov
pop
cld
sbb
push
repz
push
sbb
xchg
pop
repz
idivb
sbb
rorb
je
js
jg
push
scas
push
and
sub
sbb
mov
bound
scas
pop
lahf
or
sub
movsl
add
cmp
ret
fstpl
add
add
adc
rcpps
arpl
xor
jp
loope
mov
dec
stos
jmp
insb
xchg
mov
test
testl
subb
mov
fucom
inc
out
test
and
sbb
sub
jle
mov
fistps
rcrb
push
sbb
fwait
mov
insl
jmp
sbb
cmpsb
pop
ja
adc
test
cmp
icebp
mov
dec
lods
movsl
push
cmp
sarb
dec
test
mov
ljmp
ds
and
test
fcmovbe
xchg
cmp
sbb
int3
mov
ror
adc
dec
sbb
inc
nop
notl
jge
popa
arpl
mov
push
icebp
mov
jae
lahf
and
mov
push
orb
jnp
cli
fdivs
adc
mov
inc
das
outsb
ficomps
lock
fnstsw
fistpl
adc
dec
jle
shrb
int3
subl
xor
stos
and
sub
jbe
xchg
adc
xchg
pop
and
jp
dec
das
shl
push
fwait
scas
push
mov
insb
cmpsl
sbb
mov
ja
push
add
lods
stos
mov
dec
and
jmp
mov
mov
mov
sub
jns
or
addl
mov
jb
pop
retw
fdivrl
cli
jne
push
xor
mov
sub
adc
mov
push
dec
cmp
or
std
dec
dec
jl
hlt
cmp
xor
mov
add
mov
push
repz
aas
inc
sahf
mov
mov
std
pusha
into
xchg
adc
fwait
push
lret
or
push
lods
jbe
mov
pop
aad
pop
mov
pop
mov
outsl
ss
pop
cltd
ja
jb
add
cs
ret
xor
mov
and
push
push
adc
sarl
push
and
cld
movlps
mov
dec
mov
ljmp
daa
mov
mov
fwait
ja
mov
adc
lds
mov
adc
push
imul
push
xchg
ficompl
testl
xor
jns
dec
fmul
mov
lods
shll
mov
mov
lods
and
mov
nop
stc
mov
dec
pop
daa
push
lock
cwtl
aad
sbb
push
adc
ljmp
in
sbb
fistpll
insl
xchg
adc
out
rcll
push
dec
rorl
push
movsb
out
jecxz
addr16
cmpb
lcall
ss
and
in
stc
or
jmp
ret
and
icebp
cmp
mov
xor
jmp
mov
mov
jae
mov
dec
or
cmp
in
icebp
sbbl
outsl
push
adcl
dec
pop
pop
adc
repnz
xlat
fdivl
test
dec
xorl
subl
mov
lods
jmp
outsl
loope
sub
pop
test
shll
sahf
les
add
fwait
sahf
cltd
push
insl
test
and
xlat
sbb
xchg
insb
aaa
nop
fldt
jno
hlt
or
and
lock
test
lods
sub
lahf
cld
aaa
lods
sbb
xchg
cmp
fldenv
jne
pushf
jb
int
add
ret
or
xchg
cmp
pop
mov
outsl
fbld
xchg
sbb
push
jmp
mov
cmpsb
cmpsl
jl
ds
mov
lea
in
add
repnz
imul
ret
and
xorb
ficoml
shlb
dec
jg
add
pop
rcrb
movsb
out
sahf
xlat
je
xchg
cmp
loop
inc
sub
xchg
cmp
add
mov
lret
popa
movsb
push
cmp
or
inc
scas
mov
and
cmc
dec
push
push
rcrl
ret
sbb
mov
daa
aad
jno
xor
bound
sub
add
lea
xchg
rcll
sub
or
mov
cmpsb
dec
add
fldt
shrb
lahf
insl
lods
sub
mov
fwait
decb
cs
push
inc
fdivr
mov
fwait
ja
nop
fsubrl
int3
mov
sub
pop
cmp
lret
pop
sbb
sbb
cmp
cmc
out
inc
inc
or
ret
xchg
ljmp
push
cmc
cld
sbb
push
sti
out
mov
add
rcrb
movsl
nop
int
jns
mov
push
push
stos
loopne
and
in
xchg
jne
ret
test
xchg
int3
sarl
inc
iret
cmp
jecxz
xor
pop
sbb
leave
lcall
movsl
pop
push
inc
fstl
pop
jmp
pop
roll
push
mov
adc
pop
loope
push
cmp
cmpsb
fsubs
data16
scas
mov
popa
xchg
ret
jae
leave
push
mov
rcll
cmp
mov
inc
orb
imul
jbe
push
adc
dec
ficoms
into
push
or
lea
jne
pop
adc
lcall
mov
xor
mov
lahf
movsl
push
jecxz
and
mov
jecxz
pop
test
sub
sahf
mov
sahf
cwtl
mov
cmpsl
dec
nop
jge
jge
stos
loopne
leave
or
lock
shrl
jmp
jmp
push
cmp
jg
push
cmpsl
mov
sbb
ja
mov
mov
lods
loop
and
add
cmp
jle,pt
fisubl
sub
pop
fldt
mov
aad
or
jb
xor
bound
pushf
es
add
xchg
or
in
cmp
push
rorb
icebp
pop
dec
mov
or
dec
push
aam
lahf
jp
fldcw
cwtl
out
cmp
ret
mov
jmp
outsl
mov
xchg
int
lock
push
mov
xor
xchg
push
jbe
aad
cmpsb
mov
jne
dec
jae
pop
fwait
jbe
mov
dec
cs
jmp
cmp
loop
sbb
mov
or
dec
sbb
mov
jg
xor
into
pop
jno
fxch
push
mov
mov
aam
fstps
cmp
mov
pop
jp
sbb
push
jo
sahf
ret
pop
lea
flds
push
mov
pop
ret
and
std
fcomps
repz
adc
jo
lock
pusha
aaa
rorb
push
xchg
imul
cld
mov
sti
in
fsubrl
sub
jbe
pop
jle
ficoms
pop
jae
les
int
xchg
sbb
pop
xchg
dec
cld
lcall
jmp
icebp
push
es
jno
or
add
scas
and
ljmp
out
leave
adc
xchg
adc
xor
jb
in
dec
das
sbb
cmpsl
rcl
sub
cmc
pop
xchg
cmpb
inc
aam
call
and
insl
enter
sarb
sti
cld
dec
dec
test
test
jmp
jae
jo
push
pop
mov
lea
jno
sbbb
jnp
or
fdivp
and
inc
xor
adc
mov
test
dec
insb
xchg
stos
add
out
pop
xchg
iret
xor
push
and
mov
int3
jg
repz
pushf
cmp
mov
outsl
inc
mov
ret
pop
mov
insl
sbb
mov
cmp
jo
mov
insl
ss
or
inc
pop
loopne
mov
mov
mov
rorb
inc
mov
sub
pop
aas
dec
push
push
cmpsl
rcrl
pop
xchg
jne
test
arpl
lods
adc
sub
mov
or
adc
jg
mov
aad
push
push
cmp
or
push
icebp
mov
xor
stc
js
daa
adc
add
cltd
inc
mov
leave
mov
lods
sub
cmp
sub
std
loop
and
push
scas
mov
data16
cmp
xor
jg
filds
jbe
outsb
xlat
call
or
mov
loope
cwtl
rcrl
mov
or
ret
hlt
jg
mov
repz
xchg
imul
xchg
gs
fistpll
test
push
cmp
imul
sbb
xchg
and
fwait
cmpsl
jns
or
mov
jno
inc
daa
sahf
outsb
xor
addr16
xchg
cmp
jns
es
inc
sbb
adcb
dec
lods
pop
mov
pop
jp
call
popf
and
pop
call
pop
jecxz
push
xchg
sbb
fsub
mov
mov
out
adc
sarl
pop
in
jmp
ja
mov
lds
lahf
leave
out
jne
xchg
pop
mov
xchg
pop
movl
mov
inc
and
xor
fwait
shlb
es
pop
icebp
mov
cmp
sub
sbb
mov
test
dec
movsl
xor
lods
sub
out
jae
and
push
int3
int
xchg
popl
js
dec
loop
pushf
sahf
push
fisttps
aas
mov
xor
or
or
sbb
sahf
xchg
cmc
mov
cmpl
lret
jne
repz
cld
mov
sbbb
mov
mov
push
int3
roll
push
addr16
ret
pop
adc
mov
hlt
cwtl
leave
push
and
out
mov
cmp
mov
dec
je
jmp
or
push
outsl
xor
gs
and
push
ret
sarl
adc
jo
stc
getsec
and
pop
push
test
inc
sbb
and
pop
ds
xor
dec
cmp
inc
pop
mov
dec
dec
arpl
fcoml
lods
xlat
ss
jns
and
jae
pop
enter
daa
dec
dec
jbe
and
or
push
push
dec
push
mov
jbe
lds
gs
dec
inc
daa
std
cmp
pop
filds
pop
or
jb
fwait
sub
test
ss
jmp
xchg
dec
es
xor
fstps
popa
mov
jae
mov
sub
test
push
in
sbb
in
push
cmp
out
xchg
xlat
sbb
or
mov
out
sub
jb
in
test
dec
jnp
fldl
in
outsb
mov
in
data16
icebp
and
js
jge
dec
hlt
cmp
cmp
loope
mov
cmpb
jge
out
in
push
push
repnz
adc
xchg
adc
pop
mov
ja
in
add
mov
fidivs
stc
adc
ret
insb
fiaddl
shl
and
push
lret
cmc
mov
cmp
cmp
test
test
jl
push
inc
fiadds
or
pop
cmp
sbb
adc
es
or
cli
or
push
outsb
hlt
mov
outsl
lods
push
xchg
insl
xchg
mov
ffree
push
inc
movsl
aam
mov
jno
jmp
and
jecxz
xor
aam
stc
sub
movsl
push
jb
push
fdiv
popa
jb
mov
mov
insb
jo
xchg
xchg
jmp
scas
loop
sub
out
dec
movsl
lods
stos
gs
and
sbb
nop
mov
int
xchg
cltd
js
push
adc
ret
stos
shlb
jbe
jnp
cld
test
shlb
es
dec
cltd
test
cmp
inc
stos
fisubrs
adc
repz
mov
ret
add
fmuls
scas
lods
sub
cmpsl
jae
rcl
cmp
mov
repnz
jg
outsl
bound
mov
mov
sbb
int
cmp
data16
mov
out
data16
imul
cmpsl
push
push
popa
mov
dec
sub
xchg
and
jp
bound
pop
cmp
call
mov
xchg
xor
in
daa
sahf
xchg
cltd
mov
mov
xor
mov
adc
pop
mov
ror
push
testl
xchg
pop
push
push
pop
adc
xor
stc
fsubrp
out
fpatan
sahf
insb
loop
ss
in
and
std
adc
fwait
test
pop
mov
fdivs
pop
lcall
ja
mov
popa
lock
inc
popf
sbb
test
mov
lock
sarb
adc
mov
out
mov
xor
bound
rorl
aas
cld
cmp
xor
adcb
das
inc
cmp
gs
xchg
push
sahf
add
iret
cmp
sbb
or
imul
shlb
mov
mov
push
push
in
dec
js
data16
push
pop
push
icebp
xorl
adcl
lahf
cmp
mov
mov
cmpsl
mov
cwtl
imul
add
aaa
and
sub
cmpsl
mov
cli
sub
test
out
iret
cld
mov
sub
xchg
xchg
and
aas
push
xor
sti
dec
push
pop
push
push
push
cld
jl
or
cld
roll
add
ret
sbb
sub
lods
ret
es
stc
call
jp
sub
or
jmp
mov
sub
xchg
lea
push
adc
mov
popf
cwtl
add
jae
cmpsb
insb
imul
aam
sbb
fcmovnu
imul
jne
je
xchg
add
adc
movsl
push
subl
jnp
testl
mov
lock
movsb
sub
popf
mov
insl
test
adc
ror
mov
inc
addl
mov
lock
cmp
adcb
inc
cs
out
mov
lods
xchg
sbb
push
dec
cld
js
and
push
pop
jmp
sub
inc
push
sbb
int3
movsl
cltd
mov
dec
cmpsb
inc
jbe
mov
fs
lahf
scas
mov
pop
sub
dec
cltd
jge
add
xchg
xacquire
jne
mov
imul
pop
or
in
cmc
repz
aad
fidivs
and
add
fmuls
add
cmp
push
xor
xor
push
inc
imul
cmp
pop
or
inc
inc
and
sbb
les
mov
mov
aad
clc
cmc
std
in
aad
movsb
xor
mov
and
jg
dec
sbb
and
fstps
ljmp
in
dec
mov
int
pop
sbb
dec
xchg
mov
jnp
inc
add
orl
aas
xor
loope
stos
push
sbb
test
mov
cmp
test
mov
jp
cmp
fcomip
ljmp
flds
mov
push
cmp
xchg
lock
adc
or
es
repnz
repnz
add
fcoms
cltd
jecxz
sub
in
pop
out
lcall
aaa
cmp
add
daa
mov
loope
sbb
push
popw
js
mov
mov
xor
ret
mov
dec
clc
xor
mov
lods
mov
mov
aam
jnp
jmp
jno
push
addr16
daa
lods
ret
enter
or
cld
es
push
fcoml
xchg
test
and
nop
addr16
outsb
adc
aaa
mov
scas
aaa
ror
popa
jl
les
mov
pop
imul
sub
cli
stos
dec
dec
cmc
mov
cmpsb
imul
iret
inc
loopne
ret
sahf
cmp
xor
sbb
icebp
jl
rorl
inc
and
in
shlb
int3
cmp
fsubrl
shl
xchg
jmp
mov
push
clc
sbb
fcoml
sarb
jno
pusha
fisubrl
xchg
cmc
sahf
nop
lahf
aas
aaa
test
lahf
or
xchg
call
scas
test
mov
sub
shll
mov
inc
sub
fadds
imul
cmpsb
cld
xchg
arpl
adc
cli
sub
scas
cmpsl
leave
or
xchg
push
adc
sbb
jmp
test
cltd
or
leave
pop
sbb
jg
fnstcw
cld
add
mov
mov
xchg
ror
push
pop
cs
fwait
sahf
aad
inc
push
cmp
jbe
leave
std
popl
lds
mov
cli
add
push
shrb
xor
jmp
and
sub
sub
mov
push
cld
lahf
push
aam
repnz
addr16
out
cmpsb
xchg
jo
mov
or
xor
adc
xchg
inc
dec
sbb
sar
and
cmp
cld
in
mov
enter
mov
repz
fistl
cli
pop
jmp
inc
gs
xchg
mov
nop
loopne
mov
xchg
push
pop
pushf
xor
mov
cmp
es
int3
lcall
loop
pop
pusha
sub
dec
stos
sub
push
or
enter
jmp
mov
push
xchg
bound
cwtl
shll
adc
mov
sbb
pop
inc
lock
mov
incb
or
icebp
testl
cli
mov
leave
jbe
in
mov
xchg
push
adc
dec
cmp
cmp
sub
jg
adc
jle
cmp
add
enter
hlt
shlb
int
xchg
test
arpl
mov
or
mov
add
pop
stos
lret
insb
sbb
js
cli
xor
stos
popl
or
out
fiaddl
mov
pusha
inc
mov
or
xchg
pop
je
cmpsl
mov
jae
inc
lret
cmc
jp
mov
xchg
xchg
ret
inc
into
arpl
push
push
mov
push
fimull
dec
mov
mov
sbb
sub
push
inc
xchg
scas
inc
cmpl
jg
inc
insb
pop
inc
mov
popf
je
pop
xchg
out
andb
lret
ja
popa
inc
jb
js
in
adc
rcr
pop
test
mov
sub
popf
and
xor
sbb
adc
and
dec
rcrl
push
sbb
mov
xor
add
jns
and
xor
pop
jbe
scas
ds
ss
push
popa
dec
in
xchg
sarb
pop
popa
js
mov
xor
decb
shll
stos
pop
int
shrl
in
fildl
mov
addb
pop
push
mov
mov
stc
mov
sbb
lock
fwait
test
fldz
adc
clc
dec
test
xchg
loopne
inc
aas
push
loope
out
enter
pushf
xor
pop
dec
into
ljmp
je
xchg
inc
adc
mov
inc
cmp
stos
loop
faddp
mov
pop
out
int
mov
ds
fs
imul
push
push
sub
inc
sub
mov
sub
sub
loop
xchg
dec
shll
ret
ljmp
sti
sub
stos
es
jae
dec
scas
stos
adc
push
xchg
test
arpl
or
adc
push
xchg
rcll
or
cmp
loop
xchg
punpckhbw
lahf
addb
ja
fwait
mov
adc
add
cmp
addb
cmp
push
inc
add
pop
adc
mov
fbld
xor
in
sbbl
pop
fldcw
dec
movb
adc
mov
mov
loope
lret
add
dec
push
jns
rorl
sti
sbb
mov
cmp
push
decl
sbb
xor
into
sbb
sbb
xchg
scas
cwtl
and
sbb
jmp
mov
cmp
push
xlat
inc
rol
loopne
adc
cmp
loope
call
jmp
sub
leave
or
imul
sbb
test
ret
ss
sub
mov
data16
or
jp
mov
jle
push
dec
or
sbb
or
test
insb
push
push
bound
cli
mov
pop
popa
enter
and
push
adc
out
xchg
popf
cmp
aaa
sbbl
cli
in
int
out
stos
and
push
in
pop
or
cmp
in
push
movl
stc
and
fwait
xchg
les
pushf
in
and
dec
xchg
int3
xchg
xchg
jne
rcll
add
jp
push
add
popf
mov
in
hlt
imul
repz
xor
std
jno
mov
xchg
mov
int3
pop
stos
fs
lret
fidivl
sahf
and
cmp
mov
push
push
push
lods
cmp
mov
fs
cwtl
xchg
sub
jns
mov
sahf
aas
jecxz
jge
push
and
cmp
and
pop
or
pop
lock
push
ljmp
and
mov
push
loop
add
push
addr16
mov
jg
fcompl
ud1
test
mov
aad
jecxz
dec
mov
sbb
adc
sub
and
mov
and
push
fwait
jnp
insb
das
int
or
jp
cmp
pop
ret
or
lea
add
jl
dec
push
and
test
pop
sti
std
test
sarb
sbbb
stos
mov
and
pop
mov
add
mov
adc
pop
imul
mov
mov
bound
push
xchg
pop
and
xor
punpckldq
lds
out
xor
mov
xlat
loope
mov
out
arpl
icebp
mov
mov
aas
push
inc
imul
leave
xchg
loopne
ret
adc
insl
cmp
outsl
xchg
les
incb
inc
data16
and
lret
xchg
aam
cmpsl
jnp
mov
jge
into
test
and
push
out
jg
jno
mov
nop
or
aaa
iret
ds
lock
sti
rolb
into
xlat
rorb
push
test
inc
bound
sub
xchg
pushl
and
add
and
mov
xor
fistpl
mov
sbb
pop
les
push
clc
frstor
adc
shrl
mov
inc
out
jmp
orl
mov
jno
add
fdivr
cmp
pop
mov
inc
stc
pop
dec
cmpsb
aam
lods
and
fadds
mov
jl
leave
jmp
mov
cmpb
pop
leave
add
lcall
sbb
xor
std
mov
and
mov
sti
das
lods
inc
xorl
jnp
dec
mov
jge
jmp
dec
xchg
jbe
inc
loope
and
inc
add
fildll
push
sub
xchg
xchg
stos
lds
nop
shrb
ret
dec
pop
pop
orl
dec
das
lret
mov
jo
inc
lea
cmp
add
push
mov
add
cmp
int
and
movsb
inc
inc
daa
in
cmpsb
insl
mov
mov
adc
adc
pop
frstor
and
adc
jbe
int3
and
sub
ficompl
mov
shl
in
ljmp
push
repnz
stc
call
xchg
push
push
mov
inc
push
dec
xchg
or
inc
into
inc
mov
bound
or
mov
adc
sbb
jno
sbb
jae
mov
mov
jne
jae
xor
stos
pop
in
push
adc
test
adc
pop
push
xchg
mov
mov
jnp
pop
idivl
int3
cmp
loope
imul
stc
nop
fidivl
lods
push
sub
rcr
ljmp
add
insl
sbb
add
pushf
xchg
test
pushf
and
mov
ret
mov
jl
shr
sub
push
mov
cltd
jnp
ret
lods
jo
sbb
adc
lret
les
lcall
ljmp
xchg
ss
gs
mov
test
fwait
jp
jl
mov
inc
or
ds
pop
push
mov
sahf
test
sbb
push
xchg
push
xchg
ja
pop
xchg
pop
stos
pop
out
xchg
sub
mov
push
mov
inc
mov
js
data16
or
or
ljmp
outsb
repz
cld
pop
icebp
push
andb
mov
js
push
scas
rcrb
shll
outsl
shrb
jg
loope
outsb
jbe
fcomi
gs
xlat
push
scas
pushf
lods
or
arpl
lea
dec
movsl
sbb
xchg
push
or
xor
mov
ss
cld
test
cltd
adc
mov
lds
and
shlb
lock
jp
mov
addr16
pop
xlat
or
ret
in
aam
in
into
pop
push
add
mov
cmp
mov
and
push
jecxz
mov
sub
and
xchg
pushf
leave
clc
sbb
cmp
mov
jle
stos
jnp
dec
sub
leave
movsl
or
idivl
inc
inc
push
and
and
push
fistps
test
pop
pop
daa
ret
addr16
sbb
push
das
sbb
cwtl
sub
and
jge
sub
lcall
jne
pop
test
or
dec
mov
or
push
cmpsb
or
fcmovne
cs
in
adc
js
loopne
mov
sbb
cld
xor
ficoml
dec
daa
mov
jb
mov
push
inc
loope
ljmp
or
pusha
arpl
sub
mov
int3
push
test
jbe
or
xor
lret
dec
imul
sti
aad
xor
call
loopne
int
push
in
mov
xor
cmp
pop
xor
pop
hlt
push
and
sub
add
mov
aam
xchg
mov
push
fcompl
mov
mov
dec
int
lods
inc
inc
stc
test
push
mov
iret
out
xchg
cmp
push
lahf
add
sbb
mov
jp
adc
movsl
push
test
mov
xchg
ret
mov
cmp
xor
lock
loop
push
lods
lret
gs
rclb
cmp
fucomip
xor
aam
mov
xor
je
out
pop
lds
and
fsubrs
xchg
nop
mov
int
push
cld
ficoms
xor
cwtl
cmp
xor
sub
scas
scas
push
push
jns
out
or
and
push
int
ds
xor
jae
test
jno
sti
adc
mov
mov
icebp
mov
jmp
lea
cmc
clc
jecxz
inc
sub
xor
addb
sahf
xor
fdivs
mov
xchg
xchg
test
pop
and
in
pop
test
shrb
js
shr
adc
jecxz
adc
jb
das
sbb
mov
loope
fs
xor
loope
or
xor
loope
vmwrite
arpl
pop
lahf
dec
outsl
inc
sbb
add
fisttps
xor
pop
inc
fidivrl
rolb
nop
in
mov
testb
clc
inc
rolb
subl
mov
inc
repz
dec
jbe
call
pop
in
aad
cmp
cmp
push
iret
les
push
fbld
outsl
xchg
in
rorl
adc
xchg
cli
inc
pusha
fsubrp
pushl
addr16
pop
aas
repnz
mov
xchg
outsb
fs
aas
imul
int
rolb
loop
insl
mov
sub
push
popf
lea
insl
test
xchg
jp
mov
dec
insb
ja
jne
mov
push
pop
push
into
fs
stos
xor
pop
inc
subb
cmp
aam
repnz
ss
aas
xchg
dec
sbb
dec
hlt
jle
add
add
fisubrl
int3
inc
sub
ret
mov
jl
adc
out
into
pop
sbbl
fstl
jecxz
dec
test
test
inc
sbb
leave
dec
sarb
or
xorb
or
add
mov
xor
aad
xchg
das
stc
mov
sbb
fiadds
aaa
call
xchg
xchg
mov
imul
ss
push
popa
call
scas
ja
cmp
cmp
into
jo
sub
jle
stos
sub
cmc
aaa
xchg
inc
dec
pop
jmp
int
adc
fwait
call
inc
pop
ss
cmp
adc
sbb
add
sbb
aas
fwait
push
test
in
bound
movsb
lods
sub
repnz
lret
das
mov
jl
sahf
mov
sub
enter
push
movsl
add
jno
fisubrl
jmp
sub
pop
xchg
popa
jo
mov
pushf
add
flds
out
mov
jne
ret
pop
mov
loopne
mov
xchg
cmp
bound
xor
data16
sub
aaa
out
mov
cmp
inc
jmp
sub
xchg
xchg
inc
or
inc
mov
clc
ret
ss
js
push
arpl
and
push
mov
ret
rorb
mov
add
or
aas
or
pop
and
insl
dec
scas
sahf
into
inc
lcall
filds
iret
lret
jle
jecxz
cwtl
add
mov
lods
lcall
mov
dec
adc
and
mov
and
stc
ds
add
and
lds
cmp
repnz
in
orb
lret
pushf
sub
notl
cs
int3
mov
sub
add
ds
sti
in
jae
mov
jb
aas
sbb
cmp
in
int
adc
mov
scas
adc
push
ficoms
or
in
pop
pop
out
jmp
adc
int3
loopne
in
or
clc
xchg
push
push
bound
mov
ja,pn
push
lret
and
mov
adcb
loope
push
push
stc
ret
inc
cmpsl
orb
or
jns
push
sbbb
lock
inc
cld
cmp
xor
ret
mov
repz
mov
sbb
dec
test
cmp
xchg
jle
mov
out
mov
lret
push
lods
cmpsl
mov
lret
test
mov
gs
mov
in
inc
mul
push
faddl
cs
sbb
ja
or
mov
jae
fsubp
pop
jbe
xchg
mov
adc
jmp
fnstcw
cmp
pop
loop
xor
xor
cmpsb
mov
sbb
cmc
mov
dec
or
popa
dec
je
sbb
jmp
mov
sbb
mov
ljmp
xor
cmp
cmc
xchg
test
xchg
add
outsl
mov
ljmp
int
adc
sub
push
cli
jg
or
jne
movsb
dec
ja
mov
mov
not
add
adc
loopne
lock
in
shl
mov
mov
jp
data16
test
fcom
mov
lret
jg
lods
jnp
stc
and
popf
addr16
sub
popa
inc
xchg
lods
inc
lret
cld
lret
sbb
outsl
in
in
fwait
push
mov
xchg
ss
daa
ds
test
jle
dec
dec
mov
lock
scas
addb
int3
jns
roll
push
dec
or
mov
adc
es
lds
cmc
push
dec
fstps
push
sbb
aam
es
cmpsl
xchg
bswap
test
mov
jp
push
mov
fcmovnbe
sarl
and
or
inc
xor
add
pop
ss
inc
dec
jle
sub
dec
rolb
mov
jecxz
cmp
ffree
pop
shrl
mov
out
arpl
lods
cmpsl
mov
push
mov
aas
sbb
loopne
loop
push
jmp
push
add
lcall
push
or
mov
mov
icebp
inc
fimuls
outsb
adc
andl
fisubrs
xor
inc
or
jbe
xchg
fstps
popa
pushl
test
inc
aas
cmp
mov
dec
xchg
mov
outsl
fcoml
cmp
sahf
xchg
shl
stos
int3
scas
and
scas
xchg
push
inc
push
sub
mov
or
mov
insl
into
push
jne
mov
leave
and
fsubs
sub
inc
js
mov
movsl
dec
xchg
stos
mov
inc
mov
popa
fistpl
arpl
dec
and
out
fbstp
mov
pop
pop
push
leave
sbb
pop
out
sub
jge
mov
add
dec
inc
popf
push
sbb
inc
lret
dec
std
sbb
dec
fisubs
push
xor
inc
and
dec
sbb
aas
add
xor
push
xchg
andb
mov
lret
push
loope
push
push
jns
pop
dec
popl
inc
aaa
xor
and
mov
cmp
or
jmp
lret
jmp
jb
cmp
iret
es
sub
loope
inc
mov
call
aam
jg
out
gs
or
les
jno
je
lret
cmp
gs
out
sbb
or
out
push
mov
and
push
shrl
enter
int3
push
out
xor
jbe
fldcw
mov
bound
dec
add
in
int
sbbb
dec
pop
cmp
xchg
insb
mov
shlb
hlt
pop
add
ds
adc
lret
arpl
stos
mov
pop
xorl
fcmove
jns
aam
lret
clc
nop
inc
pop
in
lahf
jae
mov
mov
fisubrl
dec
mov
lcall
sub
aaa
insl
jle
fsubs
aas
pop
push
repz
out
lret
mov
add
jo
and
pushf
lret
push
loopne
adc
xor
add
jge
fdivrl
fisttpll
and
mov
xchg
fiadds
movsl
int3
test
decb
lcall
inc
nop
insb
and
aas
out
ds
rcrb
sbb
push
cmc
xchg
add
cld
fwait
jae
mov
clc
push
or
mov
loopne
xchg
movsl
std
push
insl
xor
xchg
push
xchg
jp
popa
in
adc
testl
cli
mov
add
ret
movsl
aam
mov
xlat
sub
test
orb
mov
les
std
nop
jle
sub
cld
shlb
mov
xchg
mov
xchg
push
iret
divl
aad
in
mov
lret
popf
mov
adc
jno
pop
inc
fimull
adc
cmp
xchg
push
jno
pusha
jge
rclb
push
sti
das
push
rorl
pop
sbb
fucompp
cvtdq2ps
shlb
fwait
mov
push
push
pop
outsb
mov
cltd
repz
jl
pop
mov
or
xor
xchg
sahf
cmp
pop
cwtl
negl
or
jo
stos
ss
mov
mov
mov
adc
jo
sbb
or
pusha
xlat
repnz
aad
jne
hlt
mov
sbb
push
push
aas
imul
fimull
faddp
or
and
cwtl
or
cmp
cwtl
repz
push
outsb
fnstsw
rcr
add
push
or
das
mov
mov
cmp
jne
cmpsb
das
dec
add
in
repnz
push
xor
cmc
adc
loopne
mov
icebp
pop
mov
imul
add
fistpll
lret
int3
dec
or
mov
out
shrl
adc
or
mov
mov
xchg
xchg
adc
push
fmul
fidivs
sub
xchg
daa
fstps
call
aad
pop
mov
sub
mov
sub
outsl
lods
aam
pop
lds
cmp
or
pop
jg
fcom
push
pop
int3
xor
cmc
stos
enter
sbbl
popf
insb
adc
pop
movsl
rcrb
daa
mov
mov
nop
dec
pop
testb
dec
ret
xchg
pop
add
jp
push
inc
mov
mov
inc
bound
sub
nop
std
pop
push
insb
push
sbb
stos
jo
adc
xorb
or
sub
cs
dec
pop
int
enter
cmp
cmpsb
pop
pushf
je
or
and
notb
andb
cmp
add
aam
fcoml
push
fcoms
jo
sbb
dec
push
bound
xchg
mov
jp
dec
shrb
sub
out
sbb
pop
in
add
adc
int
lcall
xor
mov
lea
sahf
lahf
les
outsl
dec
icebp
push
inc
xor
repnz
adc
pop
mov
sarb
jle
push
out
and
scas
xchg
xlat
lds
mov
cmp
inc
int
hlt
and
repnz
push
add
aad
jne
shrl
mov
lea
push
sbb
jecxz
mov
dec
push
fisubrs
outsb
shll
lods
sbb
xchg
lahf
jle
xchg
das
lahf
mov
inc
sbbl
push
ficomps
pop
lret
mov
shrb
sbb
xlat
jecxz
add
mov
stc
cwtl
mov
idivb
and
movsl
in
jp
pop
sbb
xchg
cld
xorb
dec
cmp
dec
aas
sbbl
push
push
pop
push
mov
inc
lret
inc
sbb
lods
psubsw
mov
push
das
push
int
cmp
inc
mov
push
pop
in
sub
aas
dec
aam
aam
pop
sti
jb
or
mov
cmpsb
mov
je
cmp
test
mov
mov
pop
scas
out
xchg
adc
dec
adc
push
dec
pusha
jo
ret
pop
dec
arpl
iret
push
fnsave
or
dec
test
call
dec
inc
sbb
jle
mov
aam
dec
iret
pusha
adc
pop
and
adc
clc
loope
cli
push
loopne
repnz
xchg
xor
outsl
mov
push
pop
dec
adc
mov
sub
fptan
sub
xor
cmpl
das
mov
cmp
data16
shrl
or
icebp
nop
mov
pop
xchg
jmp
rcr
orl
movsb
das
in
adc
repnz
outsb
xlat
cmpb
int3
stos
mov
mov
std
and
mov
push
not
int3
lods
mov
inc
dec
jb
push
mov
in
inc
inc
xchg
xchg
shl
ret
xchg
inc
xor
cmp
push
add
or
sbb
mov
lea
mov
dec
mov
int3
scas
in
outsb
stc
mov
mov
push
add
outsl
js
fists
nop
or
and
or
jge
sub
stc
repz
adc
dec
out
xchg
sub
scas
lahf
add
jp
xor
jmp
mov
ja
pop
outsl
aam
mov
push
or
das
jle
pop
inc
mov
ja
mov
and
jb
jmp
ja
jmp
mov
mov
inc
cmp
push
inc
popa
jecxz
aaa
scas
xlat
outsl
cs
add
sub
inc
stos
fs
cld
xor
xchg
jns
add
lods
push
dec
addb
std
pop
and
push
fildll
stos
add
push
loopne
shll
cmp
addr16
push
pop
je
push
push
sbb
pop
fs
repz
adc
jae
fstpl
or
and
or
stc
lea
outsl
cs
sahf
mov
add
xchg
inc
xor
xorb
jg
cmp
insl
sub
jge
outsl
pop
sbb
adc
xchg
mov
push
mov
shrl
dec
or
rorl
xchg
sti
xchg
hlt
pop
cs
cmp
rol
cmp
out
outsb
xor
fidivrl
bswap
inc
outsb
jns
arpl
fbstp
fsubrs
cltd
xchg
xor
mov
dec
jo
sarl
arpl
xchg
xor
sub
es
sub
sbb
outsb
fists
std
lahf
inc
pusha
clc
fwait
pop
stc
in
fcmovb
jo
inc
push
jmp
sub
xchg
rol
iret
test
loope
or
mov
jp
fldenv
movsl
sbb
imul
sbbl
and
stos
add
jnp
cmp
adc
ljmp
push
xor
rol
cmp
pop
stc
jne
enter
xchg
fldl2e
xchg
icebp
dec
jmp
jnp
rol
push
pop
xchg
aad
inc
icebp
push
fstl
push
add
fcoms
mov
mov
xor
mov
lahf
pusha
pop
dec
inc
push
and
xchg
push
out
dec
movsb
mov
adc
add
lods
dec
xor
push
ror
sbb
outsb
or
es
cmp
mov
dec
xor
pop
inc
pop
jo
ficoml
and
jb
ret
add
stos
clc
pop
adc
ficompl
pop
inc
test
adc
pop
fwait
loopne
fisubs
or
inc
lret
jae
sbb
xchg
imul
andl
mov
aad
outsb
add
dec
bound
jno
rcll
push
scas
jle
mov
js
inc
loope
pop
mov
lock
dec
movsb
mov
jb
gs
and
push
stos
in
cmc
sahf
je
mov
xor
lahf
aaa
jbe
js
pusha
push
adc
dec
movsb
lods
aam
jns
or
push
dec
mov
movsl
push
inc
or
sub
mov
hlt
jg
mov
in
pop
sbbl
push
in
push
lret
pop
insb
scas
xchg
icebp
add
inc
cmp
mov
jno
fdiv
mov
inc
bnd
pop
mov
and
pop
pop
icebp
inc
test
test
mov
and
and
cmp
dec
xchg
sub
js
imul
lahf
pop
jbe
mov
xchg
test
cmp
pop
fdivs
add
jno
aaa
das
sbb
rclb
insl
ljmp
ss
pop
repnz
test
jecxz
cltd
int3
jl
xor
jns
shlb
out
rol
jb
adc
jns
mov
loopne
jmp
jae
dec
push
add
jecxz
subb
cltd
cs
xchg
mov
and
lock
out
mov
insb
repz
jbe
stc
pop
push
lods
out
adc
xor
mov
test
bound
pop
outsl
inc
mov
adcl
mov
xor
sbb
test
mov
outsl
mov
pusha
loopne
fmull
jmp
inc
dec
stos
cmpsb
xchg
sti
push
push
lret
ljmp
mov
adc
mov
hlt
cmp
cmc
inc
out
out
xchg
xor
mov
fiadds
mov
daa
xor
fnsave
sbb
mov
push
mov
xor
mov
xlat
das
subl
shl
mov
in
sti
lea
mov
and
shl
inc
sub
call
loopne
lret
icebp
lea
mov
nop
mov
fcoms
test
movsl
sbb
clc
das
stos
rcr
icebp
leave
xchg
psubb
jle
push
xor
data16
js
addr16
test
lds
xor
xor
popf
cmp
fisttpl
and
inc
jg
and
ss
das
push
pop
sbb
idivb
sub
scas
popf
inc
int
sbb
fdiv
inc
and
push
orb
adc
sti
loop
lret
js
lahf
jb
fstl
adc
xor
in
mov
hlt
out
out
mov
adc
or
and
div
add
ja
xor
cs
repnz
mov
fs
xchg
jp
dec
jecxz
xchg
insl
bound
sub
icebp
jnp
inc
mov
push
inc
test
or
cltd
push
cmpsb
mov
sbbb
pop
mov
push
sub
jae
add
sub
loopne
and
mov
pop
jmp
xor
jbe
add
cmpsl
jg
dec
or
xlat
mov
xor
packuswb
push
and
mov
or
push
leave
pop
cmp
sarb
gs
loop
into
out
lods
imul
pop
femms
fsubr
push
jbe
mov
xchg
js
inc
lods
xlat
subb
lea
repz
xchg
adc
loop,pt
outsl
idiv
scas
sbb
dec
add
dec
lds
dec
pop
mov
imul
scas
jecxz
adc
adc
ja
out
and
xor
add
pop
cmp
adc
mov
fdivrl
ret
mov
neg
call
cltd
mov
dec
push
lock
push
pop
cmpsb
mov
push
pop
cmp
adc
mov
stos
jb
pop
in
sub
outsl
dec
push
xor
ficoml
ss
xor
jmp
inc
ja
mov
adc
mov
and
pop
cltd
push
gs
cmpsl
xchg
lcall
jecxz
test
mov
xor
iret
mov
outsl
pop
mov
lds
iret
clc
sub
into
call
lret
fdivrs
loopne
jae
dec
pop
sub
adc
cmp
pusha
cmp
das
xchg
into
pop
pushf
push
xor
jnp
leave
inc
call
aam
lret
pop
aam
xlat
jge
aas
jecxz
popf
mov
mov
mov
setbe
test
lea
sbb
mov
jo
push
adc
jne
fdivrl
fcomps
mov
nop
mov
out
push
cmp
movsl
loop
xor
jge
fstpl
dec
xor
jo
pushf
mov
jge
xchg
add
push
int3
jno
jge
scas
in
out
shr
aad
negb
clc
out
push
dec
lahf
xchg
and
shll
inc
in
sbb
loop
or
fdivrl
cwtl
clc
clc
or
insb
lods
mov
out
ret
push
xor
xor
gs
adcl
mov
out
dec
mov
mov
negl
inc
cmp
push
adc
mov
mov
push
testb
jle
push
pop
mov
mov
jns
outsb
addb
test
xor
lret
bound
push
and
es
into
inc
pusha
sub
and
rcr
insl
ficompl
xadd
jno
cmpsl
cli
push
jbe
adc
push
jp
xchg
jne
rorb
scas
and
adc
pop
shr
mov
adc
ret
pop
jnp
xchg
xchg
xor
loopne
push
jecxz
mov
adcb
loop
imul
push
jge
mov
imul
push
das
repnz
and
pop
loopne
adc
call
jno
addr16
mov
add
stos
ret
add
loopne
jb
xchg
inc
sbbb
insl
out
pop
add
cmpsl
enter
negl
repnz
adc
mov
movsb
mov
push
mov
sbb
mov
js
adc
je
sbb
ljmp
shlb
xchg
pushf
arpl
cmc
imul
cmp
xchg
mov
dec
movsl
fcmove
rclb
fs
jns
outsb
cmp
cmp
gs
jl
xchg
mov
out
mov
or
or
loope
xchg
mov
jb
pop
lods
inc
jno
cmp
popa
std
fsubrs
or
xchg
push
inc
push
notl
cmp
push
test
ss
and
push
sbb
inc
mov
xchg
nop
lock
push
fnsave
lret
cmpsb
push
mov
fnsave
dec
pop
sbb
repz
pop
scas
repz
lret
fwait
out
xchg
ds
test
je
daa
out
and
dec
leave
es
inc
push
roll
sub
fsubrl
pop
lret
addr16
mov
push
xlat
shlb
mov
aad
adc
cmp
cld
sahf
and
insl
cs
dec
pop
mov
arpl
inc
or
add
test
mov
fisubs
add
cmpl
push
lods
fsubrs
outsl
xchg
ds
or
int3
clc
lods
shll
jae
inc
xchg
jae
fnstenvs
ja
sub
cmp
ja
jmp
adc
ja
ljmp
movsl
jno
aas
js
mov
incb
ds
test
mov
and
inc
mov
outsl
adc
enter
int
lods
lret
lds
add
mov
loope
push
mov
sbb
pshufw
pop
data16
inc
jns
push
cmp
jle
push
aaa
aad
mov
jns
das
scas
scas
dec
xor
dec
lea
jle
jmp
sbb
into
ds
adc
es
sub
stc
scas
jbe
adc
xchg
out
sbb
mov
clc
cmpb
push
xlat
pop
mov
lock
int
dec
xchg
insb
notl
js
divl
push
inc
rcl
xlat
mov
sub
xor
mov
scas
dec
jecxz
cli
mov
adc
outsl
out
xchg
or
and
jmp
scas
std
lds
cltd
loopne
jmp
pop
cmove
mov
cmp
sbb
cmp
daa
inc
dec
xchg
rcrb
pop
sahf
cltd
and
les
inc
jle
adc
sub
inc
mov
jecxz
pushf
in
xchg
cmp
jmp
mov
out
idivl
or
insb
jl
and
fisttpl
jg
cmp
sbb
mov
pusha
mov
or
addb
dec
mov
or
fstp
test
lcall
add
pop
insl
push
jl
in
stos
je
pop
mov
pop
test
xor
mov
inc
cltd
jg
cs
sbb
xor
pop
out
adc
cld
sub
les
movsl
std
push
int3
lods
add
int3
push
cmp
shlb
std
xor
jnp
out
mov
and
icebp
mov
outsb
insb
repz
not
mov
add
lods
out
or
repz
or
repz
push
push
push
add
dec
test
aam
push
sbb
dec
pushf
out
shlb
mov
loop
sub
mov
out
inc
push
push
mov
std
xor
cs
mov
inc
loope
pop
mov
sahf
shl
mov
add
test
adc
sbb
xor
adc
loopne
xor
dec
cltd
scas
push
outsb
mov
stc
lcall
rorb
adc
or
jb
xchg
push
xchg
aam
pusha
rorl
xor
imull
fwait
loopne
sbb
cltd
test
adc
sti
inc
mov
mov
outsb
in
or
sbb
aaa
sahf
dec
xor
loopne
xchg
iret
add
mov
insb
lds
and
pop
xor
out
sub
out
xor
clc
rorb
or
fstpt
scas
sahf
cmpb
mov
stos
sbb
xor
rol
jecxz
mov
cmpsb
mov
mov
leave
iret
insb
inc
lcall
push
rorl
fmull
push
or
andb
inc
or
xchg
or
pop
sbb
push
cmp
mov
js
les
mov
lods
pop
lret
push
inc
xchg
add
push
sbb
bound
mov
cs
xchg
icebp
outsb
dec
das
sahf
and
fisttps
jle
xor
and
push
ja
or
inc
push
rorw
in
adc
cmp
mov
push
cltd
bound
repnz
inc
mov
int
add
mov
data16
cmp
push
in
ljmp
fnstcw
mov
push
jmp
add
lahf
sbb
mov
jne
loope
jns
leave
lahf
push
pop
into
rcrb
dec
clc
mov
and
xchg
push
pop
mov
test
sub
xor
fidivrs
xchg
leave
leave
rolb
orl
gs
dec
xchg
movb
fwait
xchg
roll
and
test
rep
jb
rcrb
jne
dec
mov
das
add
or
fdivl
or
out
aam
icebp
xchg
imul
cwtl
mov
ss
xchg
or
btc
push
mov
repz
mov
mov
cld
dec
dec
push
lods
shlb
andl
mov
push
and
ret
mov
rcl
jmp
adc
clc
xor
cmp
pop
pop
outsl
in
or
repnz
fsts
test
dec
rorb
mov
push
jle
mov
lcall
lods
adc
loope
inc
add
outsb
jb
add
iret
jnp
mov
lea
das
sbb
jno
testl
cmp
es
push
mov
insb
mov
mov
mov
lods
sbb
dec
popf
sub
adc
and
cwtl
pop
pusha
filds
andb
repz
pop
push
cmp
test
xor
mov
testl
lds
fnstenv
xor
ljmp
ss
sub
sbb
loop
lahf
jno
add
xor
js
repnz
xchg
filds
ss
je
mov
in
pop
fnsave
jp
loope
fdivp
push
xchg
or
out
movsb
jmp
fstpl
sti
mov
scas
pop
es
adc
cmp
ja
push
popa
cmp
adc
mov
or
adcl
inc
adc
rcll
or
lock
inc
sbb
jle
adc
orl
pop
std
loopne
cld
addl
rcll
jb
mov
rcrb
fs
jne
xchg
std
sub
push
enter
dec
dec
or
loop
mov
or
sbb
cmp
lea
adc
inc
sbb
sbb
arpl
shlb
insb
jb
loopne
inc
fwait
dec
jno
sbb
out
adc
mov
aaa
or
in
inc
mov
inc
xchg
xchg
mov
sub
rorb
mov
sub
orl
lds
adc
mov
aad
add
les
pushl
sub
adc
hlt
mov
pop
outsl
push
cmp
mov
sbb
es
out
popa
or
pop
pop
xor
aas
clc
cmp
xor
into
mov
jle
jo
push
das
pop
out
mov
jmp
pop
popf
dec
scas
divl
cmp
and
adc
adcb
and
std
stos
loope
repz
shr
mov
in
lea
scas
in
inc
lock
sbbb
add
ret
cmp
xchg
sbb
aaa
sub
xor
in
pop
sbb
loop
int3
push
sbb
into
lcall
dec
test
adc
inc
roll
fists
stos
hlt
repnz
dec
or
mov
js
or
aad
movsl
cmpsl
dec
fxch
and
mov
enter
cmpsw
cmp
cmpsb
gs
inc
push
push
lock
dec
fcoml
adc
lock
imul
mov
sar
lahf
inc
into
inc
sbb
jmp
int
das
dec
or
sbbb
shl
mov
insb
xor
mov
push
lea
push
add
ds
add
fs
fs
hlt
pop
mov
dec
push
xor
dec
mov
push
insl
dec
sarl
mov
addr16
sub
clc
cmp
add
jnp
pusha
sarb
mov
mov
movsb
shlb
mov
ss
cli
out
xlat
jecxz
popf
nop
mov
inc
inc
xchg
out
fmull
push
inc
loop
adc
lds
les
stos
sbb
push
enter
out
mov
lock
rclb
lds
xor
adc
inc
movsl
pop
adc
xor
xchg
andb
inc
sbb
cmp
fs
jp
mov
sbb
xor
inc
pusha
clc
test
lret
stc
cmp
in
inc
out
mov
cmpsl
icebp
movsl
in
mov
and
int
dec
xchg
jns
and
xchg
pop
stc
or
mov
sbb
ror
sub
cwtl
inc
cld
sub
dec
sub
aam
enter
inc
pop
jge
into
lock
repnz
inc
mov
jnp
inc
add
pop
mov
out
mov
sub
das
jmp
dec
jne
add
gs
xor
jmp
sub
stos
and
roll
mov
cld
xor
icebp
adc
inc
xor
cli
in
pushl
movl
mov
aam
jmp
pusha
jmp
push
mov
roll
mov
stc
cld
in
in
dec
cwtl
fs
jb
out
scas
push
push
jo
pop
and
pop
mov
fstpl
fisubrs
lods
test
sti
lret
sbb
fstpl
push
das
sbb
out
fstpl
xchg
dec
mov
adc
push
iret
xor
xchg
sbb
arpl
mov
xor
xchg
pop
mov
xor
cld
sbbl
lret
xchg
pop
xchg
cmp
jbe
fdivp
js
xchg
pop
test
dec
push
lahf
jl
mov
fisubrl
jne
push
jnp
dec
mov
push
push
pop
in
xchg
sub
lds
int
sbb
in
mov
insl
cli
or
sbb
sahf
scas
scas
aad
cmp
push
in
xor
mov
xor
jge
sbb
inc
mov
dec
sahf
jno
shr
test
inc
mov
stos
mov
stos
or
repnz
pop
mov
pop
xchg
jmp
jne
xor
test
add
aaa
xor
xor
fildll
mov
imul
or
add
arpl
pusha
xor
cmp
fdiv
xchg
sub
repz
ret
notb
add
xchg
sub
xor
ja
insb
out
notb
fs
das
out
cwtl
outsl
outsb
out
sub
cs
lds
enter
cld
cmpsl
imul
inc
jo
std
push
cmpsb
jae,pn
shlb
sbb
cmp
cmp
test
pop
mov
and
movsl
push
dec
lcall
rcrb
out
mov
pop
pop
dec
std
sbb
shll
xacquire
iret
sub
mov
cld
lods
jbe
cmp
mov
fsubrl
icebp
mov
mov
rcll
movsl
add
sbb
mov
or
sbb
neg
fs
lods
mov
or
mov
sahf
adc
outsl
cs
int3
adcl
rorl
popa
or
jbe
and
sub
mov
popf
sbbl
loop
dec
fs
jno
ret
es
jno
loope
test
std
rcr
mov
mov
arpl
fwait
mov
or
gs
mov
inc
arpl
je
shl
add
push
jmp
imulb
dec
xchg
in
cld
mov
sbbb
dec
mov
into
sahf
mov
out
arpl
xor
divl
mov
push
mov
push
nop
jg
pop
int3
pop
xchg
sti
mov
lods
stc
pusha
xlat
fisubrs
outsl
popa
insb
cltd
icebp
pop
adcb
pop
sbb
mov
push
and
lret
mov
outsb
jbe
into
cltd
in
out
lret
test
test
jecxz
clc
loope
mov
fsubs
stos
cmpsl
xor
data16
mov
enter
mov
mov
mov
ja
out
fnstcw
in
fdivrs
and
sub
fs
jmp
add
lea
add
cmp
popfw
das
sub
mul
xchg
mov
sbb
mov
enter
fistpll
popa
add
fs
arpl
cltd
fwait
add
inc
stos
sub
ds
mov
jp
es
out
mov
fdivp
aad
scas
jae
mov
stos
add
in
sub
stos
arpl
sahf
xor
sbb
fs
or
pop
jl
mov
push
adc
jg
or
js
xor
pop
jne
push
or
push
sbb
cltd
call
sbb
jb
xchg
or
je
outsl
mov
test
ficoms
lods
jge
dec
mov
ss
popa
push
sub
movsb
cmpsb
test
les
rclb
aad
test
mov
lea
mov
xor
cmp
ja
mov
cltd
sbb
dec
cmp
fsubrl
mov
mov
cltd
pop
mov
fs
push
fsubp
mov
or
ja
jnp
mov
pop
lods
loope
loopne
ret
mov
out
jecxz
fdivl
xor
fwait
ja
icebp
dec
mov
xor
bound
pop
push
test
mov
mov
mov
out
jbe
imul
jmp
rorb
push
push
dec
bound
adc
dec
in
sub
sub
fistps
inc
cmp
mov
sub
ret
lcall
dec
sbb
ja
mov
lahf
xchg
ljmp
sub
add
mov
cs
push
jmp
fcompl
mov
test
sarb
ja
ret
jno
mov
lock
cltd
lds
gs
xor
push
adc
leave
jno
sahf
bound
jp
xchg
notl
pushf
outsb
jae
nop
rclb
sub
icebp
loope
pop
cltd
je
mov
xchg
mov
pavgw
and
sub
inc
das
cmc
dec
pop
lods
leave
fwait
aas
dec
lods
or
pop
notl
shrl
lock
jno
xchg
inc
je
cmpl
in
sub
imul
lds
jbe
push
dec
lds
es
jne
lea
push
adc
rolb
pop
imul
lods
je
push
add
stc
loope
cmp
clc
sub
xor
clc
push
mov
inc
xor
addr16
jbe
sub
lret
filds
and
and
dec
movsb
jl
arpl
mov
push
cli
pop
cs
je
xchg
mov
mov
jle
mov
lods
std
inc
imul
mov
lods
add
sbb
fnstenv
mov
xchg
xchg
jge
out
movsb
test
add
and
cmp
repnz
and
insb
jbe
popa
loopne
inc
dec
sahf
std
mov
outsb
cs
scas
out
fstps
pop
or
aaa
and
pop
xor
jae
xchg
movsl
pop
test
call
xchg
push
jbe
inc
icebp
cmp
pop
pushf
mov
scas
pop
mov
insb
push
pop
and
push
push
je
mov
mov
movsb
js
cltd
test
and
stc
das
mov
pop
sbb
and
lea
cli
xchg
nop
in
xchg
add
or
shlb
inc
add
add
outsb
faddl
cmp
data16
loopne
cmc
mov
sbb
or
cmp
aam
sub
pop
add
pop
sbb
and
fstpt
aad
out
and
lret
std
fcomp
leave
ror
lock
jl
pop
orl
mov
mov
mov
sbb
das
or
ss
lea
jle
cmp
jbe
cmp
sbb
dec
jbe
push
shll
xor
mov
sub
add
push
sbb
das
jnp
gs
test
mov
push
test
nop
jmp
imul
mov
push
mov
sti
sbb
ljmp
jp
jge
xchg
ljmp
repz
add
inc
ljmp
fists
pushf
jbe
clc
jns
jae
mov
pop
inc
xchg
jnp
push
pop
and
xor
pushf
loope
fildl
js
fistpll
test
rorl
or
roll
scas
ffree
lods
xor
in
jns
jecxz
mov
test
cld
xor
xor
bsf
push
sbb
adcl
loop
bound
fsubs
lret
adc
popa
or
lods
push
cmpsl
xchg
push
fs
jo
cmp
pop
push
shrb
jge
cmp
jecxz
inc
outsb
outsb
test
xchg
fsubp
hlt
fistpl
sub
movsb
jg
and
lock
clc
dec
cmp
std
cld
cli
adcb
imul
fs
in
ljmp
ss
pushf
std
mov
add
fidivrs
mov
fwait
arpl
lock
aas
sbb
sahf
es
jp
mov
mov
dec
outsl
jb
movsl
fcmovbe
cs
sub
ljmp
jp
and
xlat
jg
jle
fisttpll
push
cld
stc
mov
inc
test
adc
clc
clc
lods
mov
add
and
mov
inc
pushf
xor
jae
add
or
stc
scas
arpl
mov
aas
or
sti
pop
cmp
xor
mov
or
mov
pop
roll
in
clc
scas
add
fcoml
pop
je
or
dec
aas
pop
mov
or
jbe
adc
xchg
leave
decb
mov
xorb
pop
inc
insb
jge
clc
jecxz
sub
push
adc
iret
inc
or
adc
fst
sub
mov
xor
or
test
xor
sbb
xor
push
out
repnz
icebp
mov
mov
or
inc
aaa
mov
dec
push
stc
xor
iret
and
dec
fs
scas
jl
pop
jnp
or
pop
mov
push
push
cmp
fimuls
out
adc
sub
xchg
outsb
in
mov
and
inc
sub
cltd
testl
pop
lcall
jg
fmuls
sbb
adc
dec
dec
jle
pop
pop
xor
ljmp
movsl
rcll
fisubs
mov
cld
fnstenv
mov
es
cltd
imul
inc
arpl
cltd
sub
xchg
cmp
and
dec
jbe
inc
inc
push
jno
mov
imul
les
dec
xor
mov
adc
insl
xchg
movl
dec
loope
mov
pop
in
ja
ja
dec
sti
cltd
dec
stos
aam
sti
lods
ss
ret
push
xchg
insl
add
jg
jb
jae
stos
pop
xchg
jne
les
push
out
jae
or
leave
pop
fsubrl
iret
pop
lahf
jg
movsb
push
in
push
xor
enter
mov
add
push
sbb
mov
jmp
cmp
cmpsl
sbb
out
movlps
fmull
movsl
cmc
hlt
ds
fsts
arpl
push
lods
in
jmp
ret
jbe
cmp
push
dec
push
inc
mov
jae
xlat
push
adc
repz
sbb
cld
fs
add
mov
icebp
or
inc
aad
out
add
insl
insl
inc
movsl
ret
sub
adc
or
pop
cmp
and
fdivl
mov
lcall
addr16
loopne
mov
dec
test
inc
pop
mov
dec
ficoms
in
mov
lods
lahf
mov
test
push
xchg
enter
dec
xchg
dec
call
pop
lcall
js
addr16
mov
lahf
cwtl
mov
test
cmp
lods
sbb
add
pop
cmovns
pop
sahf
jae
imul
push
call
cmp
movsb
mov
lcall
push
xchg
jecxz
mov
out
jo
dec
sahf
stc
push
ss
nop
jae
scas
xor
enter
nop
out
repnz
int
in
cmpl
jl
jne
sbb
mov
dec
sti
jge
push
push
mov
aaa
hlt
sub
mov
push
in
jno
adc
subb
out
lods
out
jno
mov
stos
adc
ljmp
push
imul
negl
shlb
btr
ret
cld
mov
ja
stos
in
jg
or
popf
sbb
sub
das
adc
cltd
lret
cli
dec
out
push
data16
jp
clc
roll
sub
xchg
lock
imul
ja
sub
repnz
scas
nop
mov
and
push
mov
das
pop
mov
lds
test
dec
movsb
xchg
stos
mov
mov
xchg
xor
mov
or
mov
inc
sar
decl
xchg
loope
mov
sahf
and
xchg
add
mov
mov
inc
in
sub
movsb
jle
jns
cmpsl
jle
repnz
push
repnz
add
xor
shll
mov
sbb
jle
xor
xorb
das
mov
bound
mov
xchg
pop
movsb
sbb
pop
mov
and
pop
add
aad
mov
hlt
aas
iret
mov
cmp
dec
rolb
add
inc
jo
inc
inc
rcr
test
xor
clc
cld
cmp
into
mov
pop
push
adc
adc
data16
aam
jo
adcl
cwtl
mov
mov
divl
push
cmp
mov
dec
mov
repnz
sti
in
into
cmp
es
mov
clc
mov
push
jb
or
and
or
cs
iret
sbb
das
into
and
cmp
fisttps
shl
push
popf
mov
xchg
add
dec
mov
xchg
fstpl
lods
mov
adc
dec
jmp
loopne
filds
add
fsubs
movsb
and
dec
or
push
in
mov
inc
xor
dec
sbb
mov
in
sub
jae,pt
sti
loop
lret
aad
push
push
cmp
std
fmuls
loop
inc
imul
call
and
pushf
je
mov
and
sbb
pop
shrb
fmulp
mov
imul
add
pop
jg
jnp
xchg
cmpsl
push
cmp
lods
into
fwait
pop
rcl
xor
cmpsb
or
fs
sbb
xor
inc
daa
or
icebp
sbb
je
cmp
pop
pop
mov
adc
nop
stc
popf
out
pop
sbb
lret
adc
decl
frstor
popa
enter
jle
pop
jp
outsb
mov
xchg
dec
add
xchg
mov
or
jo
aad
adc
xchg
and
jnp
xchg
das
add
mov
std
inc
xor
out
aad
stos
clc
xchg
shlb
jp
dec
repnz
inc
inc
xor
fiaddl
inc
popf
test
add
xchg
iret
test
cmp
adc
jg
pop
stc
mov
cmp
insl
ljmp
cmc
iret
dec
add
lock
mov
ds
mov
jno
aam
mov
push
lods
sub
push
ret
jmp
xor
sbb
pushf
push
inc
mov
in
jl
xor
cmpsl
rcrb
mov
or
cmpsl
mov
and
pop
enter
pop
shll
mov
jp
pop
mov
mov
test
sarl
xor
fmuls
js
fcompl
push
pop
push
jp
dec
push
adc
aam
pop
ret
lock
add
cmp
cmp
enter
dec
std
test
out
push
idivl
xchg
pop
inc
in
stos
adc
pushf
sub
jno
push
sub
xor
jnp
xchg
jbe
test
dec
adc
pop
add
ret
mov
lret
addr16
inc
roll
loop
push
push
sub
inc
mov
push
aam
adcl
mov
mov
xor
inc
xorb
inc
cmp
clc
pop
cmp
out
cmp
adc
push
cmp
sub
into
adc
int3
movsb
pusha
fistl
sar
push
adc
popa
adc
cltd
lcall
pusha
mov
jns
lods
es
into
add
pop
addr16
clc
pop
dec
push
adc
ljmp
aad
dec
inc
bound
lcall
sub
mov
je
push
imul
test
add
ja
mov
mov
nop
iret
add
push
jne
aaa
push
in
ds
dec
xchg
lret
insb
or
iret
dec
psubusw
mov
incl
in
push
push
push
inc
imul
pop
mov
mov
dec
mov
call
ret
mov
or
mov
ret
pop
pop
mov
xor
fcmovbe
test
cs
sbb
pop
mov
imul
subb
mov
xchg
cmp
push
test
push
mov
push
lds
mov
addr16
mov
mov
xor
pop
enter
mov
int
or
adc
pop
fsub
cmp
idivl
sub
jns
push
call
outsl
loope
mov
push
inc
icebp
pop
xchg
repz
inc
loop
mov
dec
andb
in
mov
mov
test
xor
mov
loope
mov
insl
xchg
stos
lods
sbb
jno
stc
cmpb
xor
test
pop
add
and
cs
out
int
jbe
pop
adc
push
jnp
std
int
push
sub
xchg
imul
movsl
data16
xor
jo
stc
cltd
aad
fcomps
es
in
xor
sub
push
xchg
icebp
jecxz
jmp
xor
rcl
lods
in
mov
inc
sti
iret
mov
jns
dec
imull
int
lock
mov
and
jo
es
push
sbb
inc
mov
jle
sbb
cmp
pop
xchg
insb
cltd
or
mov
sub
cmp
inc
jnp
imul
movsl
ja
mov
inc
orb
scas
jge
fmull
stos
aad
pop
icebp
jmp
sub
jae
adc
aad
rclb
push
in
pop
loope
adc
mov
repz
xor
and
pop
pop
fdivr
js
xchg
or
es
dec
inc
das
dec
js
mov
dec
bound
xor
outsb
cmpsb
pop
mov
aaa
iret
mov
sbb
sbb
imul
insl
fwait
out
ret
loop
add
xchg
and
shlb
xchg
out
pop
mov
cmpsl
add
cmpsl
imul
or
xchg
sar
movsl
pop
and
xchg
ret
sub
mov
or
scas
adc
dec
pushf
inc
pop
mov
inc
ret
clc
mov
cld
pop
mov
xchg
cmp
bound
mov
incl
icebp
ds
mov
cmc
dec
sahf
or
ljmp
dec
add
mov
test
adc
repnz
cmpsl
push
popa
mov
decl
or
cltd
and
xor
inc
dec
mov
sbb
fsts
xchg
pop
insb
mov
outsl
jp
add
jl
in
push
fldcw
orl
jnp
mov
cmp
jb
mov
inc
jl
out
js
sub
lcall
test
xor
jbe
and
xor
push
adc
xorl
sbbl
out
ljmp
push
std
xor
mov
inc
or
aad
pop
add
mov
sarb
xor
mov
xchg
xorl
loop
sahf
js
adc
add
hlt
decb
nop
ret
add
mov
sbb
imul
sti
daa
aas
jb
incb
cmpl
cmpsb
loop
push
mov
cmpsl
addr16
add
cld
inc
jnp
adc
jle
mov
add
adc
push
xlat
jno
lds
xchg
or
add
mov
xor
mov
or
dec
aam
subb
pushf
cmp
dec
xchg
and
bnd
mov
aad
popf
xchg
add
in
aaa
cmp
push
xor
lods
cli
xchg
aas
adc
jg
lahf
ret
jecxz
mov
or
jns
rorb
call
fcom
mull
jg
ljmp
frstor
movsb
outsb
idivl
jae
loope
mov
inc
lret
inc
test
push
mov
push
sub
sbb
push
push
insl
xor
push
popa
jl
or
cmp
aas
or
inc
mov
outsl
imul
add
pop
or
xchg
lcall
cmp
ja
mov
xor
outsb
adc
sub
sub
pusha
andl
adc
sbbl
ljmp
inc
fisttpll
pop
mov
stos
addr16
sub
cmp
mov
sub
imul
cmp
fldenv
fcoms
xor
rolb
xchg
jno
mov
je
insl
mov
lods
adc
push
pop
xlat
pushf
mov
adc
sub
rolb
es
mov
pop
divb
shlb
push
mov
cmc
mov
imul
js
jae
insb
fsubs
outsl
sbb
lret
addr16
sbb
xor
push
push
test
xlat
repnz
mov
repnz
jae
fsts
mov
push
sub
test
push
std
daa
out
xchg
inc
sub
scas
movsb
xor
fucomi
imul
jns
std
enter
and
outsb
mov
mov
adc
add
jae
in
fmuls
out
push
cld
je
pushf
mov
pop
mull
mov
insb
add
inc
movsb
divb
fdivrl
push
call
pusha
insl
xchg
add
mov
mov
or
cmc
xor
cltd
rorl
pop
sbb
adc
add
add
fisubs
mov
leave
pop
mov
das
sub
ret
jb
sub
sbb
push
xchg
add
ds
push
aad
jmp
mov
fs
fdiv
xor
add
and
adc
loopne
push
sub
sbb
mov
aad
in
or
shrb
dec
and
dec
addr16
mov
mov
push
push
mov
outsb
mov
push
ficomps
out
lods
mov
push
notl
test
mov
pop
test
fs
mov
rcl
mov
mov
cmpsl
or
inc
xchg
cltd
mov
inc
into
adc
dec
outsb
aas
jnp
out
lcall
out
adc
inc
sbb
and
mov
sub
fdivs
push
or
cmp
jp
add
or
std
xchg
adc
mov
mov
push
jge
xchg
jmp
mov
loop
mov
inc
ljmp
push
nop
js
lcall
rorb
shlb
pusha
push
imul
fadds
into
pop
int
sub
jo
push
testb
jbe
shll
cmp
jae
push
rcl
jl
mov
adc
lret
cld
aad
jne
push
push
les
dec
cmp
setno
xchg
aas
push
addl
dec
sbb
shll
inc
cmp
sub
inc
and
inc
icebp
stc
popa
sti
dec
mov
xor
loopne,pn
mov
cltd
mov
adc
aad
scas
sub
dec
arpl
push
adc
and
into
jg
pop
loop
icebp
jne
and
xor
adc
sbb
jae
or
mov
add
or
in
icebp
stos
pop
pop
inc
jns
in
lcall
repz
stos
dec
jmp
push
and
xchg
std
ror
adc
cmpb
hlt
jne
stc
dec
std
adc
jmp
cwtl
inc
leave
and
add
insl
aam
mov
js
pop
sub
lock
add
mov
fstpt
jb
adc
push
in
aaa
imul
jge
inc
scas
in
clc
stc
push
fs
pop
je
push
daa
adcl
sub
outsl
jbe
dec
jecxz
notb
push
flds
pop
bound
mov
lcall
arpl
test
leave
cmp
lcall
add
insb
jnp
sub
push
xlat
aad
scas
loope
aas
sbbl
fdivr
mov
mov
fwait
sub
push
cmp
xor
fs
sti
xor
push
les
sub
lods
fists
testl
cmp
sbb
cmpsb
mov
dec
push
repnz
insl
clc
or
ss
pop
xor
add
sti
fwait
fs
adc
clc
pop
enter
sub
mov
xor
push
out
push
mov
les
fdivl
cmc
adc
jg
pop
pop
scas
xor
pop
lahf
mov
lock
push
cli
adc
add
mov
out
mov
nop
dec
sbb
pop
in
cmp
movsl
enter
cmp
shll
lods
clc
sub
adc
loopne
in
add
mov
jg
and
test
lods
push
pop
popf
mov
insl
ss
pop
int
rol
xchg
shll
mov
jge
mov
je
movsl
roll
rdpmc
xchg
enter
jp
xchg
pop
mov
insb
inc
repnz
insb
sarb
cmp
inc
outsb
push
adc
mov
push
xchg
sahf
subb
xor
outsb
sbb
dec
je
sub
mov
lret
fisubs
jns
gs
aas
iret
adc
add
xchg
imul
orb
mov
push
inc
idivl
mov
cmp
sbb
inc
cld
sbb
call
out
cmp
and
adc
paddw
sbb
cmp
dec
movl
leave
es
push
inc
fldenv
rclb
cmp
lea
push
sbb
in
inc
lea
mov
xor
xchg
notl
push
test
xchg
scas
add
sti
inc
dec
sahf
lret
pop
fnstsw
pushf
js
and
lret
out
mov
pop
les
xor
pop
jge
imul
push
jno
sti
adc
inc
sub
dec
inc
and
mov
cmovl
mov
imul
scas
fsubs
mov
dec
ret
or
gs
push
cmp
xchg
gs
pushf
sub
push
fdivs
dec
test
cmpsl
xor
mov
mov
jl
mov
aaa
dec
jp
filds
jns
sbb
dec
in
dec
xor
clc
dec
clc
dec
jnp
sarl
or
and
push
push
dec
dec
int
dec
repz
push
push
insb
iret
imulb
xchg
xor
mov
fidivl
jp
repz
add
xor
out
cmpsb
push
sbb
xchg
loop
ret
xchg
add
call
cmp
ret
cltd
dec
xchg
cld
rcr
xchg
vmovups
roll
ret
xor
sub
enter
in
js
dec
jge
dec
jne
push
xorb
add
andl
inc
add
or
lds
lahf
mov
fisubl
cmp
xchg
xchg
decb
movsl
loope
sbb
loop
jnp
push
and
mov
cltd
add
jmp
dec
fwait
nop
sub
lods
adc
cli
jbe
orb
pop
push
aas
mov
xor
sub
jns
cld
jle
out
mov
out
mov
mov
add
stc
daa
push
arpl
xor
es
xor
cld
cld
popf
jl
inc
mov
inc
into
scas
rcrl
les
sahf
aaa
jmp
add
or
jle
sti
popa
test
repnz
add
cmpsl
jns
out
jp
lahf
mov
push
or
mov
mov
shlb
call
movsl
push
enter
mov
pop
mov
push
and
xchg
sub
inc
enter
lock
mov
scas
dec
cmpsl
add
mov
in
add
lea
mov
sub
inc
lcall
ds
jecxz
or
pop
hlt
mov
add
testl
xor
pop
pop
xor
andl
dec
mov
popa
loop
inc
jnp
sbb
je
hlt
mov
ret
mov
sub
je
adcl
gs
xchg
sub
aad
xorl
adc
lock
repnz
jnp
test
mov
repz
shl
ftst
inc
xchg
lock
loope
int3
aam
idiv
in
das
clc
pop
lcall
jl
out
in
ss
out
shlb
bound
pop
fld
cmc
and
xchg
aad
xchg
hlt
or
arpl
popf
or
xchg
sbb
dec
xchg
sub
mov
mov
mov
nop
popa
xchg
movsb
jbe
and
mov
cmpsl
push
jl
jp
movsl
cmp
jmp
dec
dec
mov
imul
aaa
mov
inc
mov
cmp
adc
xchg
cmp
je
sbb
hlt
rclb
out
sqrtps
adc
adc
jmp
loop
jne
push
mov
jb
push
add
mov
flds
lret
aam
dec
orl
cs
fnstcw
sub
jl
stos
push
add
mov
or
xchg
push
pop
loopne
jbe
inc
xor
stos
leave
scas
mov
aam
pushf
and
popf
imul
sub
aam
jp
push
mov
cmpsl
adc
insl
push
push
lods
sub
fsubrl
lahf
pop
or
jno
add
mov
sbb
popa
xchg
inc
xchg
sbb
scas
inc
popl
jl
pop
aam
ret
pop
sbb
xchg
mov
test
scas
pop
ror
mov
repnz
pop
pop
fwait
popa
lods
push
test
subl
cltd
lret
mov
sti
pusha
insl
mov
pop
add
call
js
inc
cs
lret
pop
test
data16
xchg
or
lock
mov
test
int3
sub
xor
out
cmp
and
lahf
fstl
mov
loopne
andb
repnz
aas
outsl
pop
jg
inc
jne
lcall
call
pusha
jno
enter
pop
lea
popa
add
mov
js
mov
sub
imul
mulb
movd
insb
mov
pop
iret
push
popa
lahf
pop
out
cltd
mov
inc
nop
xchg
mov
mov
push
loop
or
jo
jae
cld
enter
pop
es
adc
or
dec
int
sub
lock
cltd
adc
sti
push
leave
adc
enter
sub
icebp
xchg
cmp
jge
pop
scas
cmp
scas
enter
int
outsb
into
sub
cmp
push
jmp
fdivp
daa
xchg
jecxz
push
jl
inc
inc
fcmovu
orl
inc
and
addl
mov
or
scas
ljmp
push
jl
mov
notb
and
xlat
dec
sbb
and
rolb
or
ljmp
add
out
ljmp
fwait
mov
add
and
jecxz
mov
pop
xor
rol
mov
xor
push
mov
lods
ret
in
push
fucom
adc
clc
mov
adc
mov
dec
cmp
mov
stc
jle
loop
lods
adc
in
mov
hlt
adc
inc
mov
pop
jge
add
out
or
lret
xchg
and
ja
xor
pusha
pop
pop
les
lock
dec
fldcw
pop
mov
pop
fwait
jge
mov
xlat
jnp
aas
and
lcall
inc
jb
lods
xchg
test
xor
xlat
std
mov
cltd
loope
iret
fstps
push
inc
pop
mov
and
lret
and
pushf
inc
int3
ficompl
mov
jle
jns
decl
mov
inc
imul
or
in
imul
movsb
xchg
daa
cmp
adc
sub
std
push
mull
add
jb
xor
mov
fsts
mov
les
sbb
bound
mov
sub
sbb
ret
jecxz
movsb
mov
loope
imul
push
push
ja
add
mov
mov
int3
inc
push
sbb
xor
adc
jno
lock
sub
add
repz
icebp
outsl
push
pop
shlb
jg
mov
mov
push
stc
mov
lock
mov
mov
jmp
ds
test
icebp
add
shlb
bswap
stos
and
xchg
repz
into
repnz
popf
negl
stos
push
push
or
push
adcb
int
scas
jo
fwait
mov
std
and
mov
xor
insb
pop
xor
hlt
in
shl
push
nop
cmpsl
mov
sahf
pop
cwtl
push
int3
idiv
cltd
xchg
scas
mov
xchg
mov
jl
out
jnp
push
or
adc
or
inc
data16
pushf
or
pop
nop
xor
sarl
mov
xchg
popf
mov
js
dec
inc
shll
pop
sub
inc
ja
sub
push
mov
ljmp
lock
data16
icebp
or
pop
sbb
out
sub
jae
dec
outsl
push
ds
cmp
sbb
aas
push
test
int3
cmc
xchg
mov
xchg
js
daa
stos
xchg
enter
mov
mov
mov
cmp
sahf
add
bound
pop
push
out
mov
or
jp
push
mov
insl
aad
arpl
and
or
outsl
fists
sbb
into
adc
adc
cmpsb
cmp
rcrl
add
cmpsl
push
dec
and
sub
add
cltd
pusha
jl
insl
mov
pop
push
mov
subl
pushf
lods
aad
lret
int3
fdiv
out
sub
pop
pop
fisubrl
aaa
push
lret
cwtl
mov
fdivrs
test
and
sarb
test
incb
decl
out
negl
mov
sarb
rclb
sub
cmp
icebp
sub
sub
outsb
insb
nop
cmpsb
pop
xbegin
fmuls
or
ss
and
rcr
cltd
cmp
push
sub
nop
xor
js
mov
pop
cwtl
shll
cmp
pop
out
jae
add
inc
mov
cmpsl
mov
mov
ljmp
subl
push
xor
adc
xchg
loope
or
mov
mov
fnstsw
je
inc
lcall
out
mov
mov
xchg
out
icebp
outsb
movsl
ficoms
sbb
insl
mov
in
loopne
ss
mov
test
lods
jno
xchg
movsb
inc
shrl
adc
dec
add
jge
push
add
dec
in
and
mov
sub
cmc
pop
dec
imul
add
xchg
les
xchg
addr16
das
in
mov
add
aad
cmp
fimull
push
jne
push
or
cmpsl
sbb
fdivrs
inc
jno
fcoms
jo
scas
test
lods
jno
lods
shrl
lea
sbbb
es
int
dec
jnp
push
mov
movsb
mov
btc
mov
ja
or
fildll
fistpl
mov
dec
insb
cmp
fbld
aam
push
or
or
hlt
aam
jmp
je
mov
xchg
shlb
outsb
lahf
sahf
popf
inc
cltd
enter
sar
daa
add
lcall
stos
mov
scas
imul
inc
clc
andl
dec
mov
mov
lds
inc
push
ret
push
pop
nop
sbbb
adc
push
mov
movsl
cmp
xorb
jge
and
mov
fwait
xchg
std
dec
jl
xorb
iret
pop
mov
das
pop
pop
cmp
xchg
mov
ljmp
mov
test
pushf
stos
js
rcl
push
pop
pop
daa
mov
and
jle
out
cwtl
hlt
mov
sar
sub
and
stos
or
aad
xrelease
add
push
push
popa
mov
out
xchg
and
and
or
inc
mov
jecxz
out
pop
mov
mov
sarl
pop
cmp
dec
add
in
inc
cmpsl
sbb
xor
push
add
xor
adc
cmp
lock
mov
mov
mov
xlat
loope
push
arpl
push
mov
ret
outsb
inc
out
out
xchg
std
mov
jmp
loopne
dec
daa
es
jge
sti
and
cld
mov
shrb
and
addb
sub
insb
xchg
or
je
or
fisubrs
mov
bound
xor
cmc
fiadds
jmp
xchg
mov
sbb
push
ja
movsl
int
subl
scas
jmp
and
push
xor
loope
ud2
fidivrl
ss
in
sahf
repnz
cld
mov
pop
dec
aam
inc
scas
mov
push
iret
popa
paddd
iret
sbb
pushf
pop
xchg
andb
mov
arpl
or
jmp
and
pop
or
in
ss
cs
cmp
movsl
lcall
cmp
dec
push
mov
sbb
subl
pop
add
dec
jp
call
mov
fcmovne
jg
hlt
in
ljmp
cmpsl
divl
roll
imul
or
and
xor
push
fs
add
lret
es
jae
test
push
xor
cltd
popf
ja
sbb
or
jbe
lock
daa
mov
mov
push
in
and
xchg
aas
mov
adc
add
fiaddl
in
inc
jo
xor
push
xchg
aam
xor
and
cmp
pushf
adc
insl
push
and
out
jl
or
push
jbe
out
sbb
mov
nop
cmp
lods
in
inc
ror
inc
movsb
pop
jo
call
and
mov
mov
jp
jle
cmp
aad
fbstp
push
pop
xor
pushf
dec
ds
or
stos
xabort
insb
cmpsb
mov
stc
mov
jne
mov
jb
mov
push
add
add
sub
mov
xchg
push
or
inc
sbb
pop
in
daa
mov
dec
cmp
push
lea
lcall
outsl
shlb
hlt
movsb
outsl
sub
sbb
cmp
inc
js
ja
cmp
adc
jb
flds
aad
dec
lret
xorl
loop
mov
out
add
out
je
fisubl
scas
lcall
xchg
or
jg
lods
js
fstps
cli
insb
jbe
sbb
mov
scas
mov
push
ret
std
jmp
arpl
clc
jnp
ljmp
cmc
out
adc
mov
sbbb
movsb
rcl
push
cltd
sbb
sbb
ficompl
ds
iret
jmp
mov
inc
out
fs
popa
xlat
jl
scas
mov
pop
hlt
fcom
xor
test
inc
jb
outsb
mov
js
and
rcrb
std
ja
fsts
inc
or
divl
sbb
cld
mov
insb
push
cs
inc
adc
movsb
pusha
lret
insb
mov
dec
pop
mov
cmp
push
fidivl
sahf
pusha
xor
test
imul
push
shll
mov
test
xor
dec
mov
icebp
sub
sub
popf
pop
test
shrb
leave
lods
shlb
outsl
xchg
sub
or
cwtl
repnz
sub
adc
call
sbbl
dec
dec
cld
dec
jg
stos
lret
pop
xchg
jmp
push
pop
repz
xchg
xchg
mov
mov
jo
mov
push
scas
mov
insl
fisubrs
movsl
int3
ds
mov
imul
xor
or
xchg
mull
mov
jecxz
rorb
cmpsb
imul
mov
or
jmp
in
sub
jnp
jbe
mov
fldcw
std
fwait
ss
add
inc
push
inc
xchg
pop
sbb
aad
pop
imul
fs
and
adc
js
call
movsl
test
out
addr16
scas
insl
cmpsb
mov
dec
mov
movsb
nop
sub
dec
mov
mov
rorl
cs
pusha
mov
int
lret
lret
push
adc
arpl
test
add
mov
sarl
jge
into
rcr
mov
testb
push
and
insl
cltd
add
addr16
and
adc
cmc
cmp
ficomps
mov
xchg
stc
push
ret
xchg
push
mov
sub
jnp
and
jno
data16
insb
adc
out
cli
loop
hlt
ret
sarl
lea
mov
ljmp
leave
fs
inc
sub
mov
sbb
mov
pop
and
shrb
cld
addl
fcomp
lret
cmp
push
sub
xor
jp
pop
in
add
xor
es
stos
mov
shrl
popa
std
push
aaa
jmp
sub
cmp
ja
cltd
pop
jecxz
cmp
pop
cltd
xchg
dec
and
lock
lcall
cld
inc
fimull
push
call
ret
jge
fcmovb
cmp
jecxz
repz
cld
in
mov
cmc
cmpb
fs
rorb
or
sbb
ret
mov
bnd
outsl
inc
xor
pop
add
mov
insl
in
int
sbb
pop
pop
and
icebp
in
fiadds
mov
xor
in
add
popf
push
xchg
jno
outsb
je
jbe
std
setns
sbb
or
addb
xor
inc
xor
aam
push
cmpsl
test
sahf
inc
jge
sbb
shrl
fdivp
cmp
jg
inc
mov
jno
dec
pop
stos
movsb
aaa
or
ja
jg
cmp
cs
stos
mov
loope
out
scas
lret
sbbb
nop
sbb
sub
sti
gs
adc
repnz
dec
mov
popf
mov
or
add
cmc
loope
sub
push
subb
bound
cmp
jo
fs
sbb
cmp
xchg
xlat
dec
jb
sahf
xor
jl
mov
int3
icebp
pop
stc
stos
mov
jge
lods
mov
fcoml
jns
adcl
testl
or
sub
dec
push
shrb
cmpsl
lds
mov
leave
insl
sub
mov
or
out
fadds
mov
ffreep
insl
test
pop
mov
sub
bound
mov
loope
je
adc
leave
stc
in
lcall
mov
stc
std
sahf
pop
lret
into
sahf
dec
dec
clc
push
paddusb
lret
or
insb
mov
adc
xlat
xchg
test
sub
adcl
xchg
sahf
je
mov
fnstsw
push
push
push
rolb
push
je
in
out
cmp
push
scas
pop
arpl
or
imul
cmpsl
fmul
int3
lock
test
jl,pn
or
xor
repnz
outsb
insl
xor
movsb
mov
add
test
or
cltd
push
push
testl
lds
shrb
fldl
dec
mov
addr16
and
in
call
pushl
xchg
insl
pop
jmp
cmpsb
add
or
ljmp
into
mov
pop
push
sti
jmp
pop
aam
push
mov
repnz
scas
mov
jns
push
out
ljmp
xchg
je
xor
enter
sub
es
inc
out
outsl
add
jno
pop
in
mov
push
outsb
or
dec
mov
lret
sbb
lcall
mov
shll
cmpsl
pop
jge
xlat
sub
cmp
call
jno
cltd
scas
out
jo
push
incb
xor
ret
pushf
es
jae
lcall
xchg
jno
idivb
hlt
cmp
mov
jl
aad
xchg
leave
adc
scas
pushf
rcr
daa
scas
lahf
aad
dec
push
pop
insb
lock
pop
nop
cwtl
cmpsb
into
sub
out
fwait
ret
inc
mov
lods
xlat
xchg
rcr
movsb
inc
ljmp
sub
mov
ret
jnp
inc
dec
dec
inc
imul
dec
mov
cmp
clc
int3
and
xor
movb
mov
lods
cmpsb
mov
ret
pop
in
jnp
or
iret
mov
cwtl
imul
mov
sub
movsl
jb
rorl
ret
xlat
xor
mov
pop
aaa
mov
mov
pop
sub
andl
jg
loop
je
mov
js
adc
add
xchg
mov
stos
sub
insl
pop
adc
lahf
es
movsl
inc
pusha
push
arpl
cmp
iret
sbb
jge
inc
xor
jb
cs
icebp
ja
lods
cmp
daa
xor
xor
xor
out
mov
dec
push
adc
xchg
xor
repz
fwait
dec
dec
mov
jno
andl
test
fs
sbb
mov
add
mov
rclb
add
push
pop
sbb
dec
ret
jns
cli
addr16
or
mov
push
stos
and
or
jae
popa
stos
movsb
or
ret
ljmp
jbe
xchg
aad
in
repz
or
push
jmp
mov
mov
inc
jmp
lcall
sbb
or
xchg
sub
jle
mov
mov
push
add
and
int3
nop
pushf
mov
sbbb
mov
fwait
dec
addr16
mov
cmc
xorl
and
aas
andb
das
scas
sti
test
mov
mov
jmp
aaa
inc
mov
add
pop
xlat
xchg
sbb
lea
setns
xchg
mov
mov
fstps
sahf
pop
movsl
pop
stc
mov
jge
popa
push
rep
push
idiv
inc
push
fmull
repz
lds
xor
sahf
sti
mov
js
pushf
dec
inc
mov
stc
or
pop
or
jns
pop
int3
adc
push
cwtl
jo
cmp
fcoms
pop
fcmovu
jnp
movsb
jg
pop
xor
xor
jl
mov
ds
xchg
jae
mov
pop
setnp
repz
ja
arpl
push
cli
mov
pop
ja
call
inc
adc
adc
or
mov
and
lahf
sub
mov
jge
js,pt
cmp
cmp
call
nop
pop
jecxz
in
lcall
push
mov
ljmp
popa
or
add
outsl
push
mov
les
mov
mov
je
stos
push
movsb
mov
aam
scas
mov
outsb
xchg
or
shlb
xchg
in
ds
test
data16
jno
ret
adc
out
daa
push
mov
jno
sarb
xor
out
or
faddl
dec
and
jle
into
lcall
add
or
jl
inc
fdivrl
out
mov
test
popf
mov
shll
mov
mov
mov
pop
int
subl
dec
test
xor
jbe
jg
scas
sbb
rol
testb
jae
push
mov
jb
lcall
cmpb
insl
jns
xchg
js
fs
stc
mov
ret
dec
pop
aam
xchg
inc
aad
inc
jp
fisubs
stc
mov
aas
adc
xchg
es
xor
mov
cmp
xchg
arpl
push
jg
mov
lock
add
jae
adc
jo
cmp
stc
add
sarl
mov
and
adc
and
mov
lods
and
xchg
cmp
jg
sub
fnstenv
cltd
ja
mov
sub
mov
inc
mov
xchg
test
les
in
or
nopl
shr
push
movsb
inc
dec
movsb
pop
mov
loopne
jp
hlt
dec
jb
pxor
ret
sub
dec
inc
rclb
pop
or
insb
jb
into
ror
sub
call
jge
test
or
mov
mov
push
pop
mov
imul
xor
movsb
scas
lret
push
scas
xchg
inc
sub
mov
cmpsb
push
les
shll
jo
test
jno
and
xchg
stos
pop
insb
insb
enter
aam
adc
add
out
sub
test
sbb
ret
popa
and
inc
loope
push
mov
lret
ljmp
mov
xor
sbb
in
lods
cmp
push
mov
xor
fnstsw
not
mov
pushf
lds
jge
push
gs
addr16
cmpsl
mov
inc
pop
add
cmp
int
lods
das
jbe
jb
ss
repnz
and
pusha
mov
mov
std
subb
mov
punpckhwd
xor
mov
sarb
mov
aam
fldcw
mov
sbbb
sbb
lret
adc
sti
or
int3
std
push
nop
addr16
push
leave
mov
and
repz
ret
xchg
add
jns
adc
sub
idivl
inc
mov
inc
icebp
nop
jns
and
sub
imul
pop
sti
test
jg
pop
xchg
ljmp
inc
jecxz
mov
xchg
test
sub
or
mov
test
sub
mov
inc
repnz
rolb
addr16
xor
jp
sub
test
inc
insb
repz
inc
rcrl
pop
add
insb
popf
shrb
rcrb
fdiv
adc
cmpsb
push
mov
cmc
add
sub
push
mov
int3
or
jge
inc
xchg
test
dec
xchg
hlt
popf
ret
aaa
sbb
add
cmpsb
mov
pushf
cld
popl
imul
cmpsb
nop
dec
stos
outsb
out
mov
popl
mov
mov
or
mov
dec
jmp
pop
sub
sub
jno
xchg
pop
xchg
outsb
iret
cld
scas
xor
adc
ds
pop
xor
sbb
dec
inc
dec
and
xchg
scas
cmp
xchg
mov
sbb
mov
inc
push
or
jb
push
adc
fwait
sbb
movsb
aad
add
ljmp
outsl
inc
and
das
mov
fsubp
insl
sbb
and
xor
cmpb
or
imul
and
loop
and
ret
sub
test
es
pop
fisttps
mov
pop
iret
movsb
repz
mov
xor
xchg
mov
or
test
shlb
cli
cmpl
test
cmpsl
add
les
jmp
jp
dec
or
and
stos
pop
test
pop
dec
das
jb
fidivrl
jae
pushf
jecxz
inc
cmpsb
mov
daa
fnstcw
sub
add
mov
dec
pop
mov
rorl
push
aaa
scas
lret
in
negb
int
mov
mov
pusha
stc
psrlw
in
outsl
in
sbb
aaa
mov
daa
sbb
nop
xor
push
cs
fnsave
push
jbe
and
pop
xchg
mov
xor
adc
scas
shrb
jge
mov
mov
ljmp
pop
adc
pop
mov
fisttps
mov
aas
scas
mov
adc
xor
lcall
mov
clc
mov
test
dec
cmp
insl
lcall
lea
jle
xchg
mov
add
sub
stos
mov
xor
xchg
mov
and
mov
loop
adc
inc
ss
xchg
jo
jecxz
adc
push
mov
mov
sbb
xchg
adcb
pop
mov
mov
adc
add
mov
iret
in
sub
scas
cmp
push
xchg
mov
or
fdivr
dec
add
arpl
mov
push
pop
dec
jb
push
inc
pop
mull
push
mov
add
pop
popf
scas
divb
nop
push
push
iret
pop
pop
fcmovbe
add
jmp
dec
jle
and
decl
add
loop
repz
sbb
jl
ds
insl
fstpl
dec
jmp
rcrl
mov
call
xchg
nop
jno
jge
out
mov
lock
and
jle
add
popf
jmp
aam
or
stos
adc
mov
mov
push
cwtl
inc
mov
mov
lock
sub
fsts
mov
xor
aaa
sbb
pop
mov
ficoml
movsb
pushf
xor
test
movsb
pop
cmp
pop
push
mov
imul
les
sahf
mov
pop
dec
je
pop
jne
dec
mov
pop
push
xor
inc
inc
push
fldt
pop
jecxz
cmp
mov
fs
xchg
dec
pop
mov
cmp
push
adc
xor
mov
dec
fdivrs
loop
mov
ret
psubsb
mov
dec
pop
pop
int3
pop
sti
jmp
std
scas
lds
push
jle
rcl
imul
push
dec
jbe
xor
int3
iret
je
imul
jg
mov
xor
lret
lock
mov
les
or
or
out
fcoms
adc
push
pop
mov
lea
xchg
push
mov
testl
jbe
loop
jmp
test
xchg
xchg
push
xor
sub
jns
jp
in
add
and
inc
xchg
mov
vxorps
mov
xor
mov
fwait
mov
test
cwtl
repnz
cwtl
push
push
cwtl
inc
pop
pop
inc
outsb
in
cmp
sub
loop
cmp
sbb
addr16
ret
pop
scas
mov
negb
sbb
xchg
pop
xchg
test
sbb
fisttps
int3
sbb
cli
pushf
lods
sbb
jecxz
lcall
xchg
dec
sub
js
jmp
cltd
adc
loopne
into
popf
fcompl
jbe
bound
out
data16
jle
push
fisubrl
jae
bound
adc
jb
mov
push
repz
add
cmp
jg
mov
loope
daa
mov
movl
cli
mov
jmp
mov
test
sbb
adc
dec
rcrl
push
dec
movsl
out
pop
jbe
les
into
push
and
inc
jp
push
in
adc
mov
jg
leave
sub
cmc
xchg
hlt
pusha
cmp
xlat
add
sahf
push
xchg
ret
setns
jo
arpl
sti
ss
xor
cli
orl
push
adc
nop
sti
mov
sbb
mov
dec
pop
imull
cs
enter
int
call
scas
jle
sub
pop
xchg
rorb
push
and
pop
xor
out
xor
cmp
int3
insb
cs
lahf
roll
ficompl
clc
dec
xor
jbe
and
js
imul
mov
inc
jecxz
fmull
sub
mov
cmc
out
sub
data16
lret
pop
mov
loopne
mov
xor
mov
shlb
xchg
addb
loop
push
lahf
mov
mov
scas
je
sbb
pop
xor
outsb
push
add
mov
mov
mov
and
cld
das
bnd
movsl
jecxz
dec
in
shrb
in
xchg
test
mov
dec
lcall
xchg
popl
adc
dec
outsb
sub
inc
imul
add
and
test
mov
add
es
dec
pop
outsl
mov
mov
lods
and
out
mov
enter
std
jbe
insb
lds
adc
inc
xor
cmp
jae
adc
sub
pushf
shrl
test
sub
sar
addr16
in
hlt
je
outsb
and
stc
cmpsb
pop
push
fistpll
add
jmp
int3
pop
dec
push
aam
dec
in
inc
xlat
and
xor
xor
push
or
aam
xchg
sub
les
fdivs
dec
lods
lret
push
add
aas
ds
sarb
adc
jmp
imul
pop
movl
sbb
pop
shlb
push
fidivs
push
sbb
mov
cmp
ds
cvtps2pi
dec
lods
loop
pop
xor
les
pushaw
jg
cli
xorb
xchg
push
sbbb
adc
fldcw
mov
or
orb
data16
mov
stc
push
xchg
lret
ljmp
cmp
call
push
and
mov
add
mov
cmp
adc
cwtl
aad
sbb
mov
scas
mov
jns
add
jno
mov
push
sub
jp
mov
adc
add
jg
cmp
addl
stos
xor
aaa
lahf
nop
mov
lret
imul
or
into
dec
xchg
mov
inc
call
jecxz
sahf
xchg
lea
sub
movsl
fadds
rolb
test
inc
push
push
cs
arpl
inc
imul
add
pop
cmp
sub
mov
orl
call
lock
mov
test
testb
sbb
mov
jae
imul
loop
mov
sbb
adcb
sub
push
mov
shlb
into
fimuls
in
clc
ljmp
dec
movb
rcll
aaa
imul
shl
sub
data16
stos
fsubl
lea
mov
pop
out
sbb
into
mov
lds
sahf
cmp
mov
fadd
or
ss
icebp
adc
mov
push
into
jmp
or
jmp
jg
pusha
jl
pusha
movsl
cmp
push
adc
jg
leave
ja
mov
inc
rcrb
xor
pop
outsb
dec
jno
aaa
loope
les
push
push
mov
push
add
imul
sbb
mov
sub
pushf
pop
jmp
out
sbb
adc
js
cwtl
mov
ja
pushf
push
dec
roll
cmp
cmpsb
dec
mov
sub
loop
push
iret
enter
stos
jp
sub
add
in
stos
pop
or
out
jp
std
sbb
pop
adc
adc
mov
loope
clc
or
js
call
pop
xor
inc
xchg
es
sub
inc
cmp
jmp
fsubr
pusha
ficoml
pop
xchg
inc
scas
lret
decl
add
mov
addr16
push
ljmp
cwtl
xchg
dec
lret
movsl
movsb
add
lcall
mov
lcall
add
out
xchg
push
out
fisttpll
movsl
test
jmp
ljmp
push
sbb
inc
lcall
fwait
jg
pop
fmuls
pusha
ljmp
rcll
ss
pop
dec
sbb
push
xchg
inc
loopne
hlt
adc
xchg
pop
sub
insl
or
inc
lods
mov
cld
fldenv
ret
dec
jg
aaa
jecxz
cmp
inc
pop
or
fs
mov
mov
inc
loop
sar
data16
sub
sbb
or
sub
xor
lret
xchg
dec
xchg
xchg
fldt
stos
push
lcall
xor
mov
mov
dec
mov
addl
mov
js
cltd
jbe
js
cmp
push
aam
imul
cmpsl
lcall
outsb
xlat
xor
push
popa
push
test
pop
mov
adc
xchg
dec
sub
scas
pop
mov
movsl
add
lds
push
cld
fwait
push
mov
dec
mov
jnp
roll
sbb
fdivrl
addr16
and
and
imul
repz
cmp
lock
xchg
out
loop
sub
lods
jmp
or
std
test
and
mov
flds
cmp
pop
xorb
xchg
pushf
inc
sbb
adc
pop
gs
cltd
pop
call
repnz
nop
andl
or
cwtl
xchg
jb
pop
lret
mov
inc
xchg
cmp
mov
insb
sbb
xlat
adc
in
jnp
dec
sub
lcall
fwait
iret
push
push
push
out
xor
inc
movsb
lea
push
shr
in
mov
leave
test
xchg
cmp
inc
movb
dec
ja
pop
add
mov
mov
adc
cli
outsb
xor
leave
scas
gs
pop
test
pop
outsl
dec
daa
sub
or
and
leave
push
add
testb
lcall
gs
dec
ret
pop
aaa
stos
test
pop
popf
mov
stc
and
push
inc
cld
xchg
adc
icebp
or
imul
push
jo
and
mov
arpl
sub
mov
pop
push
mov
adc
shlb
shrl
jno
xchg
mov
mov
lock
sbb
cmpsl
fnstenv
lods
pop
add
cmp
lods
and
xchg
xor
pop
sub
cmp
lods
jne
int
adc
lret
xchg
or
mov
out
add
and
add
in
scas
insb
inc
push
std
in
mov
inc
xchg
loope
and
pop
push
mov
out
scas
ds
cmp
jg
push
addr16
repz
cltd
jmp
out
add
iret
or
neg
jg
sub
xchg
in
sti
in
or
sub
lret
jns
jmp
rcr
pop
dec
out
push
pop
stos
test
lea
add
mov
jo
xlat
scas
mov
ret
inc
shll
or
sub
pop
cmp
out
mov
mov
mov
xor
mov
shll
int3
cwtl
loope
pop
je
aaa
adc
int3
jle
loope
les
jecxz
push
mov
flds
lock
jno
dec
orl
or
sub
or
andb
in
mov
ja
pop
add
popf
jbe
outsl
dec
mov
mov
push
shl
jb
aad
fistps
jno
movsb
and
insl
hlt
fwait
xchg
sahf
ja
sbb
stos
notb
data16
movsb
mov
push
iret
shrb
and
test
lods
jecxz
lret
leave
retw
mov
and
xor
cli
jmp
xor
pop
cltd
ja
adc
adc
mov
rol
scas
fs
adc
push
shlb
pop
in
or
pop
lods
sub
cld
out
lods
xchg
imul
jle
aas
cld
sub
stc
ret
sbb
sti
mov
add
mov
or
loop
cmp
scas
mov
test
sbb
jno
das
xor
cmp
ljmp
test
rorl
mov
bound
lods
xchg
in
jp
jecxz
inc
std
outsb
push
flds
sub
scas
jp
mov
mov
repz
cmp
jp
jle
fsubp
jno
pop
push
push
or
lgs
push
test
or
jmp
mov
aas
jl
shl
sahf
clc
pop
addr16
adc
outsl
fists
imul
cmp
cmp
int3
in
add
or
cltd
fdivrs
pop
and
rorl
sub
out
stos
push
dec
jp
test
adc
mov
addr16
and
and
cmp
sti
sti
sub
dec
lret
and
push
ds
mov
out
cwtl
test
cmp
mov
enter
lahf
pop
fadds
pop
lods
dec
sbb
pop
test
push
decl
mov
arpl
cmp
dec
push
shlb
ret
mov
fnstsw
cmova
pushf
jg
sahf
jmp
xchg
xchg
dec
mov
sti
movq
xor
sahf
stos
popf
das
pop
ficomps
aad
cltd
movsb
js
xchg
mov
jb
data16
xchg
sub
pusha
inc
cmp
mov
sbb
dec
lret
call
push
cmp
pop
arpl
mov
xlat
xchg
lds
fsts
mov
lock
jl
push
inc
mov
xor
jecxz
or
shufps
das
xlat
jno
cld
mov
fdivs
jle
mov
add
mov
lds
inc
cmovae
cmp
xchg
xor
sub
mov
sahf
xor
inc
lahf
imul
ja
cmp
inc
outsb
push
jo
jbe
sub
mov
lock
and
lock
int3
fidivrs
xchg
or
xchg
dec
in
lret
mov
rcll
subb
mov
inc
lds
sbb
jbe
aaa
pop
out
or
push
mov
or
mov
adc
fstps
xchg
pop
outsl
lds
xchg
jmp
xchg
mov
out
int3
shll
sbb
shld
cmpl
mov
jb
and
mov
mov
xchg
dec
aas
add
push
xor
pop
push
inc
in
mov
pushf
or
dec
xor
or
jle
es
sbb
les
fcomi
xor
mov
dec
cwtl
dec
mov
adc
les
insb
push
push
je
push
dec
and
out
je
add
sahf
decl
cmp
pop
outsl
ds
pop
stc
jae
dec
hlt
stos
gs
mov
ljmp
sbb
dec
pop
push
xchg
pop
lea
mov
add
and
fisttps
shl
pop
clc
pop
test
xor
es
fistpl
cmc
bound
test
in
scas
in
push
mov
dec
fcomp
fiaddl
cmp
sahf
aam
pop
das
jp
mov
sahf
shr
push
nop
push
dec
jno
call
idivl
pop
sarb
pop
jo
fnstenv
cld
subl
xor
sahf
jle
push
mov
ds
add
push
dec
cmp
lahf
mov
rolb
in
pushf
cwtl
fimuls
ret
sub
mov
sahf
jne
fdivrp
mov
in
xchg
push
dec
xor
enter
sbb
push
das
mov
pop
push
adc
andb
lcall
fwait
leave
test
popf
outsl
lret
ror
bound
idivb
dec
imul
push
mov
stos
pop
xor
add
adc
sbb
push
xchg
outsl
subl
adc
push
mov
shl
mull
sub
pop
add
test
movsb
jl
and
jne
fsubrp
mov
rorb
lcall
mov
mov
gs
or
aam
add
enter
ja
call
cmp
ja
fnstsw
mov
jb
jp
stos
or
jmp
jbe
leave
jl
sahf
fs
mov
sbb
mov
ficoms
jecxz
jo
adc
push
jbe
cmp
in
and
fidivs
push
or
daa
lods
notl
imul
push
sbb
mov
flds
adc
hlt
ljmp
xor
test
mov
mov
add
mov
stc
in
rorl
loopne
and
jle
mov
jae
pushf
in
sbb
lock
insl
cmp
sbb
cmp
or
repnz
inc
push
lret
mov
and
or
aaa
stos
es
pop
movsb
jbe
mov
jmp
xor
daa
xlat
cli
jbe
sti
cmp
arpl
iret
pop
stos
loop
scas
cltd
and
shll
pop
imul
sbb
fisubrs
push
call
imul
out
lock
in
call
dec
lock
cmpsb
or
cltd
push
lret
lea
loop
push
cmc
mov
push
aam
adc
cmp
xor
xchg
dec
mov
jl
dec
mov
cmp
or
xor
dec
das
or
push
pop
sub
rorl
dec
sub
jbe
dec
or
enter
lock
ret
cwtl
or
into
pop
repz
nop
lahf
adcl
cwtl
or
cmpl
xor
push
dec
sub
cs
xchg
sub
pop
mov
xchg
sbb
adc
fs
pop
add
and
sbb
daa
cltd
stc
push
mov
ret
push
lcall
xchg
ss
adc
jns
sti
aas
int3
adc
push
jp
popfw
idivl
dec
mov
and
adc
adc
push
aad
or
xor
mov
lcall
loop
popf
mov
sub
pop
cmp
sti
popf
inc
jle
iret
mov
pop
incl
add
inc
lea
movsl
dec
imul
cmp
outsl
stc
xchg
sbb
data16
push
add
call
push
gs
outsl
out
ret
adc
mov
bound
pop
lods
add
adc
push
mov
add
clc
jnp
mov
lahf
sbb
xchg
fsubrs
push
sub
test
cwtl
es
int
jl
pushf
insb
std
pop
cwtl
sbb
loopne
vmovhps
cmp
lcall
or
xchg
stos
push
mov
cltd
or
xor
cmc
inc
cli
std
fimuls
movsl
pop
push
xchg
jecxz
push
push
pushf
xor
btr
cmp
pusha
lock
jecxz
pop
rcr
lret
push
insl
lahf
xchg
fsubs
add
popf
mov
rcl
and
sbb
push
mul
mov
in
jle
inc
lahf
pop
and
das
sbb
pop
or
xor
push
pop
ffree
mov
adc
push
pushf
cmc
add
mov
pop
xchg
and
sti
jbe
push
adcb
push
gs
jbe
push
or
and
dec
mov
xor
mov
pop
out
sahf
xchg
fisubrl
in
push
mov
lds
bound
notl
leave
push
pushl
inc
mov
out
test
les
mov
jg
arpl
ja
cmp
sub
xchg
inc
inc
pop
hlt
jl
out
cmp
fcoms
sbb
inc
push
outsb
xchg
js
cltd
fdiv
mov
fimull
cmpsb
insl
stos
push
push
cmpsl
fidivl
nop
std
mov
cmc
pop
lods
jp
dec
gs
adc
popa
mov
outsl
lock
js
pusha
push
pop
shll
xor
arpl
cmp
outsl
mov
cwtl
mov
scas
cltd
inc
stos
inc
adc
fwait
jne
jp
mov
add
gs
lahf
jbe
cmp
and
xchg
mov
xchg
fistpll
js
sbbl
pop
xchg
xor
in
or
sbb
add
inc
pop
lahf
xchg
stos
mov
scas
shrl
repnz
lock
outsl
xlat
movsl
push
mov
sbb
lods
inc
push
dec
jo
dec
inc
add
cmpsb
ficomps
mov
mov
adc
xchg
lahf
lret
and
in
cmc
test
test
push
decb
pusha
movsl
and
sub
pop
jnp
mov
sarb
mov
lods
mov
jecxz
loopne
lods
leave
jmp
test
das
mov
sbb
mov
rcrl
outsl
pop
shl
in
lret
notb
cmp
inc
rorl
dec
test
and
inc
lock
mov
out
push
ret
push
pop
lea
sbb
dec
pop
cmc
int
insl
subb
jo
jne
loop
and
lahf
lret
push
jns
jnp
push
test
adc
cltd
cmpsl
or
sbb
pop
rorl
insb
and
sub
inc
les
xchg
ds
in
clc
mov
out
icebp
xor
jns
mov
inc
dec
fwait
sbb
mov
ljmp
lock
push
hlt
test
sub
in
gs
rcrl
jns
outsb
testb
in
aam
jne
cmp
pop
shlb
pop
lds
jns
sahf
std
lock
xlat
and
bound
sbb
cmpsl
cmp
out
lea
dec
sbb
stos
loop
xor
dec
sub
sbb
jge
xor
fstps
outsb
and
mov
push
popf
dec
clc
jns
loop
inc
jp
sti
scas
cmp
push
dec
and
loopne
out
in
xorl
cmp
lds
clc
dec
xor
ja
jp
dec
and
or
jle
fdivrp
loopne
outsb
lds
subl
mov
jno
gs
adc
pop
mov
imull
dec
movsb
mov
icebp
pop
mov
aas
fdivrs
cmp
popa
jmp
fwait
jmp
mov
fstps
mov
addb
cld
test
repz
pop
push
fistps
lret
rcrb
cwtl
clc
cmpsl
or
adc
fucomip
sub
lahf
dec
jb
jecxz
push
mov
jmp
jge
jge
push
fwait
mov
cmpsb
gs
jno
xchg
pop
bound
jecxz
sub
mov
mov
or
pop
mov
inc
mov
pop
adc
and
or
jmp
adc
pop
and
inc
xor
in
ret
cmp
lcall
popa
shll
mull
lock
ss
mov
subb
fists
mov
jns
jge
push
stc
sbb
sub
dec
mov
lea
hlt
or
test
mov
push
or
ret
mov
adc
repz
leave
hlt
and
pop
es
and
popf
sbb
ret
dec
movsb
sbb
scas
push
and
xchg
mov
repnz
xor
lds
pop
andl
jle
fnsave
shlb
sbb
pop
mov
outsb
xor
pop
mov
bound
loope
mov
adc
or
popa
mov
xchg
mov
fiaddl
faddl
jle
pushf
jle
int3
lcall
ret
pop
xchg
inc
mov
jmp
ficompl
mov
xchg
and
pop
mov
insb
sub
fwait
push
sub
aam
and
jo
xor
jae
jbe
mov
lds
call
mov
je
xor
mov
fs
xor
jo
inc
lods
call
outsl
lods
scas
pop
rclb
push
add
popa
daa
add
cmc
lds
testb
les
mov
paddusw
not
orb
andl
xchg
pop
clc
data16
push
stos
push
daa
das
push
ljmp
sti
movsl
xchg
cmp
sbb
test
pushf
inc
lea
outsl
adc
mov
lods
mov
mov
andb
adc
and
cld
imul
lock
or
pop
mov
aas
ds
dec
lods
dec
dec
and
push
xor
sub
adc
lea
jns
test
ja
es
sbb
movsb
ljmp
cmp
xor
mov
aam
pop
imull
and
daa
nop
mov
cmp
lock
pop
push
mulb
and
or
mov
xchg
lret
daa
dec
insl
adc
arpl
and
and
push
or
ljmp
xchg
push
jno
and
sbb
mov
xchg
pop
hlt
and
jne
cmpsb
into
jl
xchg
cmp
mov
inc
fs
mov
add
sub
test
push
mov
inc
xchg
divps
sub
lcall
push
adc
adc
addr16
popf
out
pop
je
pop
aaa
addb
xchg
sbb
xor
mov
pop
out
mov
sub
add
or
int3
push
cmp
mov
sbb
or
dec
popa
test
fldl
enter
pushf
push
sbb
pop
sbb
sti
insl
push
daa
cld
scas
jnp
insb
mov
add
jno
adc
and
pop
loopne
mov
mov
int3
dec
push
out
xchg
ret
jae
pop
sbb
jnp
insb
cmc
pop
mov
sbb
and
lds
add
push
sbb
scas
add
inc
into
mov
push
lret
sbb
pop
cmp
fisubl
in
jp
repnz
fcmovu
loope
fcmovne
xchg
fisubrl
mov
mov
and
popa
push
and
es
inc
fldenv
ret
and
outsl
imul
xor
jo
cmp
dec
ljmp
push
xchg
dec
stc
stc
push
addl
or
call
jne
mov
cmpl
insl
jmp
fxch
mov
fs
jmp
push
jmp
in
lret
aas
out
dec
pop
xor
aad
daa
dec
sbb
stc
mov
repnz
xchg
xorl
hlt
xlat
xchg
adc
cli
loop
fwait
pop
sub
xchg
xchg
push
call
mov
lea
fstpl
mov
dec
call
in
test
test
pop
lds
ret
cmpsl
jns
aas
jns
add
sub
andl
loope
mov
dec
inc
bound
or
rcl
addr16
mov
jns
pop
test
xchg
push
adc
jge
jo
push
pop
inc
xchg
das
jp
jecxz
test
xor
and
mov
xor
push
fstpt
jmp
cmpsl
jbe
out
sbb
cmp
pop
pop
pop
mov
mov
sub
mov
in
jmp
sbb
adc
jl
push
mov
pop
sub
icebp
loop
push
push
int
clc
adc
push
les
xor
cmp
ljmp
cmp
int3
cli
pop
mov
movsl
imul
lcall
add
mov
jle
xor
lret
pusha
pop
dec
dec
or
popf
fistl
mov
imul
cmpsl
mov
dec
adc
jp
xor
mov
or
and
ret
stos
adc
xchg
xchg
cwtl
movsl
daa
repz
mov
xchg
gs
aam
nop
inc
mov
mov
loopne
xlat
sbb
push
test
out
jnp
mov
and
leave
cwtl
xchg
out
jo
mov
or
xor
aad
fiaddl
jb
cltd
ret
idiv
sub
lds
mov
or
push
mov
sub
xor
add
cld
sub
test
pop
test
notl
and
jbe
push
daa
out
js
icebp
iret
cwtl
loop
stos
or
pop
push
sbb
mov
aaa
out
sub
pop
ljmp
jecxz
stos
enter
fsubrs
outsl
fistps
mov
xor
repz
aas
sahf
mov
cld
jg
mov
cmp
jmp
pop
adc
cmp
fnstsw
lret
inc
pop
push
jl
adc
jg
or
mov
sub
xor
xchg
xlat
mov
cmc
adc
sbb
addr16
mov
or
mov
adc
sbb
into
mov
pop
mov
xor
fisttpl
or
add
repnz
sub
insb
mov
in
mov
jle
arpl
mov
push
imul
out
arpl
inc
lds
xchg
xchg
test
adc
and
addr16
xor
jg
test
cmp
pop
ret
pop
cltd
mov
lds
mov
mov
push
mov
jecxz
jno
loopne
push
fs
pusha
loop
fwait
mov
push
pop
xchg
ljmp
dec
dec
movsl
iret
scas
daa
jns
jg
mov
push
jno
adc
jo
mov
push
aad
sub
xor
inc
lret
ds
adc
dec
jecxz
movsl
insb
push
sbb
lret
stc
xchg
dec
xor
mov
dec
jecxz
in
xlat
stos
std
jl
pop
in
pop
mov
push
imul
jno
rcrb
xchg
jno
dec
cmp
mov
insb
test
inc
push
js
mov
pop
push
cmp
in
repnz
fdivl
orb
mov
adc
push
or
add
scas
in
lods
xchg
cmp
insb
js
sub
jbe
mov
insl
mov
xchg
mov
inc
out
shrl
test
dec
push
test
mov
dec
mov
in
fwait
inc
lds
jo
in
fsubs
in
insl
pop
jnp
push
pop
mov
adc
rolb
cmp
fnstcw
out
add
int
or
inc
sbbb
pop
cmp
pop
mov
jnp
jne
test
xchg
push
sbb
popf
dec
inc
mov
sti
push
sbb
sub
or
repz
in
add
loop
jmp
xchg
xor
or
fimull
inc
pop
add
fbstp
cwtl
mov
cld
mov
and
mov
xchg
ret
mov
mov
fsubs
jecxz
and
int
mov
sub
push
daa
insb
scas
sbb
test
sbb
int
mov
xchg
pop
dec
push
and
incl
mov
add
mov
push
out
dec
mov
cmpsl
out
popa
es
inc
or
and
or
aam
xchg
push
cld
lds
test
adc
cmp
jmp
popa
jg
movsl
xorb
xor
call
and
adc
mov
pop
sbb
stos
jo
repz
adc
inc
sti
sub
jl
out
test
inc
cmp
or
or
sub
sub
cs
leave
xchg
fcmove
mov
mov
jp
mov
test
mov
or
dec
loop
add
xchg
icebp
mov
xchg
fnstsw
jecxz
mov
pop
and
xor
ja
movd
sbb
pop
jg
jp
inc
outsb
mov
push
leave
pushf
push
push
dec
mov
or
icebp
movsb
xor
pop
mov
popa
mov
cmp
xchg
xor
add
in
leave
and
inc
in
adc
cmp
push
sbb
mov
inc
jmp
nop
cld
pop
mov
rorl
daa
jmp
gs
push
xchg
lahf
push
nop
stos
fistpll
jbe
add
cmpsb
or
ret
jne
shrb
cmc
xor
stos
mov
into
mov
into
cmp
in
daa
push
push
adc
into
dec
es
push
push
std
sub
sbb
fsubrs
fstpl
sub
jae
mov
xchg
mov
mov
xchg
mov
roll
mov
pop
adc
mov
mov
stos
and
sub
mov
out
lods
sub
pop
cmp
movsl
popa
xor
mov
daa
test
clc
pop
sti
in
mov
dec
cmp
inc
hlt
pop
in
outsl
lret
aad
dec
cwtl
sub
add
cli
mov
mov
out
dec
aaa
and
imul
test
xor
and
imul
rcrb
in
stos
dec
pop
popa
fadds
inc
in
pop
xor
jno
xchg
dec
scas
jp
lret
mov
cmc
mov
shll
hlt
pushl
mov
cld
in
xor
subb
mov
sbb
daa
insl
mov
pushf
out
lods
lret
cmpb
addr16
xor
pop
lret
mov
in
lahf
fucomi
sbb
adc
cmp
xlat
pop
enter
aad
or
hlt
sub
xchg
mov
sub
mov
cmp
lret
and
sti
adc
dec
sbb
rep
pop
mov
iret
and
inc
inc
scas
sub
mov
inc
iret
fdivrs
cmp
mov
cld
fs
cmc
inc
jge
sbb
inc
mov
mov
inc
inc
dec
lods
in
pusha
push
inc
pop
sahf
sub
insb
sbb
cmpsl
mov
inc
adc
add
clc
lcall
xchg
cmpsb
jno
scas
push
mov
sbb
jno
jmp
sar
dec
push
xchg
mov
iret
adc
xor
xor
pop
push
push
jo
mov
enter
and
push
rcr
sub
xchg
push
rcr
imul
aad
loop
mov
jbe
iret
sub
loope
xor
adc
rol
pusha
or
xchg
aad
cmpsb
mov
inc
push
daa
pushf
fwait
iret
ret
f2xm1
mov
pusha
cmpsl
cmc
jecxz
mov
inc
frstor
in
adc
std
push
inc
rclb
jns
je
xlat
loope
dec
iret
cmp
lret
outsl
or
jne
stos
jno
decl
pop
rol
xchg
je
fildl
and
daa
movsb
lret
pop
dec
sub
xor
les
test
rclb
stos
add
testl
rolb
cmp
call
adc
stc
cmp
push
adc
mov
add
jbe
icebp
add
sub
adc
jle
fdivl
sbb
mov
pop
push
mov
xchg
mov
push
js
xchg
rcll
icebp
push
push
jns
arpl
lds
gs
ljmp
mov
xchg
bound
cmpsl
sbb
push
sub
scas
test
sbb
das
fsubrp
and
fcoml
xchg
add
les
fldcw
push
mov
sub
ret
fcom
sbb
iret
pop
dec
push
mov
iret
roll
push
sub
inc
in
pusha
cltd
insl
ret
jecxz
std
mov
scas
aaa
dec
push
cmp
fmul
jne
sti
or
xchg
leave
lea
mov
imul
arpl
int3
xchg
ds
mov
dec
insb
orl
push
or
jg
jp
in
xchg
inc
fwait
or
insl
jo
inc
xchg
or
cli
inc
mov
les
cld
sub
and
xor
cmpsb
in
mov
pusha
push
lret
xchg
mov
cltd
xor
test
dec
sub
jnp
mov
sub
xor
xchg
out
pop
mov
sub
adc
jno
push
aas
nop
je
pop
sub
fwait
pop
inc
icebp
inc
out
std
cld
mov
dec
push
mov
mov
lods
dec
call
in
mov
pop
pop
add
dec
add
pop
int3
lretw
mov
je
shlb
or
repnz
jg
int
mov
mov
test
mov
mov
jbe
ljmp
arpl
adc
jne
lock
fdivrl
pop
mov
aaa
repz
int
cmp
aad
and
mov
mul
in
xchg
and
adc
call
add
mov
rorb
xchg
push
lcall
mov
xor
push
test
dec
add
sbb
pop
out
and
and
mov
scas
data16
sub
dec
jl
jge
jl
inc
push
adc
inc
pop
lock
daa
fcom
enter
cmp
cmp
enter
mov
stos
sti
xchg
push
negl
mov
adcl
cmp
das
cmp
jne
fsts
outsl
adc
adc
filds
lret
mov
clc
sub
inc
in
es
xchg
mov
sbb
testb
hlt
pop
mov
adcl
jge
out
mov
in
adc
clc
mov
outsb
xor
sub
pop
movsbl
es
insb
into
pop
lahf
jmp
jg
adc
add
imul
enter
jg
mov
and
xchg
fmuls
cmpsl
fidivs
cmp
xchg
iret
pop
repnz
out
or
shrb
insb
mov
pop
xchg
ss
xorb
or
and
int
jge
test
mov
sub
in
cmp
cmp
cmp
inc
or
out
imul
js
jp
sbb
adc
add
cmc
popa
aas
mov
and
icebp
imul
test
inc
dec
adc
jns
mov
push
dec
jp
ss
test
insb
fnstsw
mov
lea
mov
and
add
xchg
and
call
sub
mov
add
divb
loopne
inc
notb
or
xchg
jne
dec
sbb
incb
div
xor
push
jl
faddl
repnz
ljmp
in
and
xchg
insl
insb
les
cs
adc
dec
sbb
sub
idivb
or
std
inc
mov
loop
out
ror
nop
inc
sti
jmp
leave
stc
sub
in
jmp
xchg
ja
ret
add
jo
dec
xlat
andl
fisubrl
inc
xchg
sub
xlat
sub
pushf
fistps
mov
pop
jae
xchg
test
jb
orb
xchg
cmp
repnz
cmp
adc
add
cmc
adc
loopne
mov
mov
scas
jo
stos
xchg
test
push
jecxz
add
inc
mov
stos
rclb
lahf
shrb
sub
ds
adc
push
xchg
lcall
adc
xchg
cld
and
push
test
shl
loopne
dec
xchg
not
add
enter
rep
add
enter
mov
ja
rclb
cmc
insl
lea
mov
ljmp
xchg
repz
pop
xlat
dec
addr16
adc
mov
inc
pusha
loop
scas
fsubrl
and
jp
xor
lret
in
repz
pop
jge
adc
fwait
arpl
xlat
cmp
or
mov
popa
xchg
mov
sbb
dec
cmp
jo
insl
inc
cmp
pop
xlat
test
cmp
insl
add
jne
or
push
dec
or
daa
scas
pop
mov
lret
std
xchg
sub
cmp
jae
and
test
mov
sbb
lds
sub
sbb
cmp
ss
mov
insl
or
add
pop
in
mov
pushf
sbb
movsl
lds
call
add
push
test
inc
repnz
push
xor
push
jbe
push
jl
push
dec
and
add
sbb
loop
cli
mov
push
dec
and
fld
int3
or
add
in
jmp
sahf
bound
out
cmpsl
inc
cmp
hlt
push
fisttpll
xchg
sub
aas
cmpb
mov
xchg
push
arpl
mov
and
mov
push
adc
xchg
pop
mov
ss
lods
je
cmp
movl
adc
and
inc
es
into
pop
sbb
lret
mov
in
mov
fistps
repz
jmp
leave
popf
cs
xchg
into
pop
shlb
ja
loop
lcall
mov
pop
xor
cltd
pop
jno
sub
fsubrs
hlt
inc
nop
pop
jo
out
dec
mov
sbb
sub
lret
out
imul
in
lds
and
stc
cmp
je
lds
pop
ret
int3
dec
xor
mov
fists
repnz
fisubl
cmp
aas
push
repnz
jge
call
cld
push
jecxz
pop
cmp
inc
xlat
inc
mov
sbb
jge,pn
jae
je
test
push
ljmp
or
dec
pushf
insb
cmp
push
in
or
and
fbstp
sbb
rol
pop
daa
sbb
mov
jmp
jl
clc
sbb
pushf
mov
dec
cs
movsb
mov
or
ds
or
mov
iret
iret
imulb
xor
push
repnz
stc
adc
pop
xor
js
loope
inc
sbb
repnz
sbbl
mov
xor
iret
sbb
fs
mov
or
sub
xchg
add
nop
push
xchg
cmp
jb
jg
push
movsl
jge
mov
and
insb
insl
add
mov
scas
sti
xchg
js
cmc
push
sar
repz
push
or
add
or
cmp
jno
test
push
sti
pop
fisttps
test
stc
lods
in
xchg
imul
xchg
inc
mov
push
dec
lret
inc
loop
int
sbb
xchg
jmp
inc
lea
sarl
hlt
or
popa
xor
or
sub
inc
outsl
in
xorps
pop
jae
fidivrl
dec
or
inc
arpl
mov
lret
and
mov
lea
xlat
mov
mov
shrl
xchg
inc
dec
dec
test
adc
nop
daa
adc
mov
adc
mov
out
out
or
mov
int
sbb
and
lahf
andb
dec
adc
popf
add
cmp
ret
and
leave
popf
inc
mov
and
mov
ret
lahf
out
pop
or
repnz
jmp
dec
adc
xlat
add
scas
fsubl
es
jb
pop
push
jne
xor
cmpsl
push
test
hlt
mov
mov
mov
loop
jae
mov
mov
push
pminsw
popf
cmp
lods
cmp
out
adc
push
sbb
sub
adc
fsts
imul
daa
push
push
jmp
sub
jp
cltd
xchg
mov
repnz
jmp
inc
pop
mov
adc
pop
adc
mov
xchg
popa
fxtract
test
inc
movsl
jmp
push
inc
jle
pop
incb
jb
lock
mov
cmp
std
xchg
mov
push
jae
fadd
mov
in
insb
test
nop
mov
push
scas
lds
mov
ss
push
inc
mov
hlt
cmp
leave
and
cmpsb
or
xor
shlb
dec
fimuls
push
lods
lahf
inc
add
popa
xchg
xchg
popa
mov
divl
setl
ror
push
insl
mov
aaa
out
movb
mov
bound
add
loopne
sub
add
imul
pushf
sbb
lods
adc
mov
or
ret
jb
in
sub
cld
cmp
int3
ret
mov
aad
inc
dec
push
or
sub
orb
push
or
push
mov
xor
mov
and
sbbb
mov
pop
push
shrl
test
shrl
adc
xorb
arpl
insb
lahf
xor
sbb
push
inc
test
sti
stc
ljmp
divb
rclb
push
jno
or
leave
pop
xor
adc
push
pop
adc
outsl
ss
outsl
mov
jmp
lahf
hlt
xor
cld
jbe
mov
push
jl
repnz
shll
mov
add
mov
dec
fxch
into
push
mov
mov
mov
jnp
mov
add
adc
lds
mov
imul
cltd
jb
roll
sub
ret
xor
cli
mov
push
sbb
shll
mov
stos
aad
sub
es
mov
test
add
ror
pop
outsb
sub
mov
aam
add
jl
aam
adc
push
mov
mov
push
mov
sub
dec
int
sar
leave
gs
or
push
pusha
hlt
lods
sti
and
data16
dec
std
cmp
call
sbbb
outsl
push
mov
dec
lods
call
dec
and
mov
sub
clc
mov
sbb
ror
push
sahf
xchg
or
int
aam
lahf
cmpsb
push
pop
fwait
cltd
jge
or
jecxz
inc
sbb
in
push
into
adc
xor
aad
mov
jne
cmp
cmp
pop
mov
aad
mov
mov
ds
jno
jno
mov
pop
xor
xchg
stos
dec
dec
adcb
jo
div
aas
test
sti
jnp
sbb
iret
push
clc
int3
rcl
fwait
cwtl
enter
dec
loopne
cs
jo
xchg
ds
outsb
xchg
aad
iret
cs
and
lret
adc
jne
orl
addr16
enter
fwait
outsl
fmull
sbb
sub
rcrl
enter
aas
ret
sub
mov
lea
imul
iret
jo
fsubs
xor
shll
and
xchg
js
xor
js
lods
and
fwait
push
icebp
inc
and
mov
inc
push
jp
int
lretw
pop
jp
fs
insl
pop
mov
xchg
insb
adc
fsubrp
jle
pusha
inc
push
data16
sub
sub
mov
jne
int3
pusha
outsb
frstor
sti
fldt
lea
rcrl
push
pop
jb
imul
xorb
ljmp
dec
xchg
push
dec
mov
cld
dec
repz
ret
sbbb
cmp
add
push
mov
mov
xchg
add
aas
inc
xchg
jmp
add
insl
xchg
or
pop
dec
cmp
repnz
aam
popf
xchg
call
jp
lods
insb
pushf
or
in
mov
cld
inc
in
arpl
sub
mov
out
adc
pop
inc
rolb
mov
jae
hlt
daa
fwait
dec
add
orb
jg
and
and
les
push
jge
and
insl
cmp
mov
mov
ret
cmp
sbb
shrb
sub
lock
aam
test
in
movsb
mov
jp
aaa
jns
mov
mov
icebp
inc
sub
mov
mov
lcall
test
sbb
mov
fstl
add
ret
loop
inc
jo
xor
jecxz
test
fs
std
lods
repnz
cltd
aas
xor
lahf
mov
and
push
cmp
ss
subl
xchg
jb
mov
ljmp
fsubs
popa
or
jno
cmp
jnp
cmc
cs
fwait
xor
fstpt
or
jo
add
insb
int3
xchg
cmp
and
mov
int
jmp
lods
pop
mov
gs
loope
testl
pop
icebp
dec
les
mov
jno
mov
stos
xor
scas
or
stos
mov
jns
adc
ucomiss
mov
test
mov
cmpsb
mov
out
push
inc
fsubrl
sbb
mov
pusha
xorps
lods
ljmp
test
cmpsl
sub
cmp
and
fcoms
ficoml
das
mov
mov
push
test
inc
push
push
mull
adc
cld
mov
push
xor
jmp
jle
push
aas
cltd
scas
cmp
and
fcmovu
sbb
sub
movsb
or
addr16
into
mov
bnd
xor
pop
test
pop
iret
test
mov
movsl
jne
sahf
jno
hlt
xor
clc
iret
sahf
jo
aad
cs
dec
mov
mov
pop
sbb
test
add
sarb
icebp
aaa
out
and
ljmp
fwait
in
xor
mov
inc
adcb
repnz
xlat
les
gs
shlb
xor
ss
fdivrs
mov
push
pop
gs
inc
push
test
push
enter
pop
aaa
push
inc
jge
in
adc
add
or
call
leave
mov
dec
out
loop
pop
push
add
jmp
sub
jb
ret
arpl
push
and
shrl
add
test
test
sbb
pop
popf
mov
mov
mov
in
cmp
aam
adc
jge
mov
or
stc
adc
mov
mov
push
and
cmp
je
out
ret
push
jge
dec
cwtl
inc
lcall
call
push
push
imul
out
adc
loop
nop
mov
dec
inc
and
push
mov
xchg
add
movsb
xor
data16
adc
scas
push
stos
sub
xor
sbb
rcl
test
popw
mov
outsb
lea
sub
inc
sarl
mov
jl
test
rcr
cmpsb
xchg
cmp
cvtps2pi
and
sbbl
bound
sub
cltd
push
mov
sahf
scas
jo
insl
xchg
and
movsl
cmp
imul
mov
jmp
negb
into
jae
rsm
jb
rcl
lods
lock
in
ja
insl
sub
add
jecxz
mov
jne
mov
add
sbb
test
mov
cmp
adc
int
out
push
cmpsl
lods
test
jge
and
test
shrl
mov
outsb
rclb
pop
idivb
orl
or
rcl
imul
jl
mov
cmp
jecxz
cmp
ret
sbb
orl
xchg
cmpsl
loop
and
xor
lods
pop
sub
jmp
pop
int
sbb
add
and
lods
popf
subb
shr
xchg
sub
orl
or
add
pop
in
aad
inc
cmc
iret
cmpl
sbb
or
addr16
mov
inc
lds
mov
and
sub
fnstcw
ss
jbe
or
add
adc
cli
les
das
inc
sti
fwait
jnp
aaa
idivb
out
test
arpl
jae
es
xchg
pop
shll
jge
jle
mov
mov
sub
stos
test
sub
push
sbb
xchg
xchg
sbb
sub
jne
adc
pop
mov
popa
cmovnp
add
int
and
push
mov
shrb
daa
ds
pop
adc
pop
lods
pop
lcall
lods
xchg
hlt
in
int
adc
aas
cmp
xchg
xchg
jg
insl
cmp
pushf
jge
lock
mov
enter
mul
test
cmp
push
jne
movsl
outsb
mov
call
xchg
out
or
ja
daa
rsqrtps
inc
inc
xchg
jns
xchg
xor
call
js
or
pushf
push
xor
jle
mov
sub
sub
push
aad
stos
repz
or
push
push
ret
inc
xchg
and
push
negl
shld
push
push
mov
out
xchg
push
nop
insl
jb
test
push
pop
mov
inc
mov
cmpsb
pop
push
pop
push
rorl
fimull
mov
or
xchg
sub
adc
fistpl
pop
nop
inc
test
xlat
push
shll
lods
stos
mov
fwait
cld
idiv
imul
arpl
std
add
jns
popa
adc
orb
out
mov
mov
and
push
add
xlat
sub
jg
cld
and
sub
sub
fcoms
je
sahf
mov
push
in
adc
mov
dec
pop
jp
jb
loop
cmpsb
std
fcoms
daa
aad
add
scas
adc
pushf
pop
enter
lods
xor
adc
jae
inc
std
cltd
aaa
cwtl
shl
inc
xchg
adc
ljmp
paddsb
shlb
mov
lods
loope
pop
lods
call
test
mov
sti
imul
dec
fisubrs
cltd
shr
jl
shlb
cmp
push
or
test
mov
mov
mov
xlat
xor
lahf
fsubp
inc
scas
sbb
int3
test
push
js
lcall
pop
test
dec
rorb
aam
mov
xchg
aad
mov
outsb
pop
inc
adc
mov
cmc
in
jle
sub
pop
fcom
sub
call
sub
dec
cmp
sbb
adc
inc
dec
pop
out
inc
in
fs
sbb
scas
xchg
test
inc
mov
pop
mov
movsb
loopne
sahf
sbb
sub
push
sarb
cmc
ret
movsb
xchg
repz
and
or
test
cmp
add
push
ss
sahf
mov
ljmp
mov
fs
ljmp
imul
in
ja
loope
jecxz
andl
inc
xor
stos
pop
push
dec
dec
rcll
xor
gs
mov
or
sub
push
jecxz
jne
inc
popa
pop
scas
addr16
loope
aas
cltd
mov
and
lcall
inc
mov
imul
fs
pop
lea
adc
mov
int3
lahf
jns
push
pop
les
inc
adc
or
adc
sbb
test
fs
fwait
xchg
cli
pop
rorl
pop
repnz
xor
cwtl
jp
movsb
popf
sbb
repnz
adc
popa
inc
movb
outsb
push
test
adc
inc
sub
outsb
pop
xor
fstl
hlt
or
push
lcall
cmpsl
stos
add
jmp
inc
pop
stos
nop
push
mov
sbb
dec
jnp
mov
mov
xorb
jne
jl
lock
mov
sahf
sub
test
repnz
movsb
mov
add
sbb
sbb
int3
out
jb
mov
pop
lahf
jl
push
mov
pop
call
inc
adc
repz
pushf
pop
push
and
dec
mov
cltd
notb
sub
lahf
andb
sti
mov
sbb
lock
out
cmp
cmpsl
ret
testl
movsb
jae
xchg
inc
add
pop
sahf
mov
or
xor
inc
mov
cli
incb
nop
cmp
xchg
ret
rcll
xor
push
gs
out
add
lock
add
add
jb
loopne
sub
xchg
pop
rdmsr
dec
repnz
jno
push
xor
out
cltd
lods
lcall
lret
icebp
push
mov
in
int
aam
sub
pop
outsl
jne
enter
xorb
imul
aas
push
pop
rorb
or
pop
or
loop
pop
push
xor
inc
addl
push
outsb
lds
loopne
ss
cmp
mov
test
sbb
bound
mov
dec
orl
jecxz
adc
rorb
movsl
lock
gs
mov
repz
and
xor
ja
push
dec
arpl
test
rcll
fidivl
loop
pop
jmp
pushf
mov
mov
nop
mull
addl
aad
ja
fisubl
mov
andb
out
bound
pop
cld
andb
rorl
in
int3
testl
sub
movsl
cmp
popf
bound
pop
lret
adc
push
aas
xchg
sbb
sbb
mov
mov
jnp
mov
xor
lods
outsl
daa
cli
jecxz
fs
or
jp
inc
cltd
or
sbb
jns
test
xor
in
sub
rorb
lods
inc
xchg
sbb
test
out
loop
mov
adc
loope
lahf
dec
insl
mov
mov
lea
out
fisubl
lret
or
out
test
pusha
push
insb
mov
das
movsl
je
mov
mov
add
mov
orl
pop
dec
insl
pop
pusha
push
jne
mov
jno
cmpsl
popa
push
adc
xor
sbb
insl
adc
sub
inc
outsl
fldcw
add
inc
adc
xchg
mov
and
jp
movsb
jb
out
outsb
inc
jmp
mov
xor
cmpsb
cmc
sub
pushf
mov
aad
ds
and
dec
pop
movsl
mov
mov
mov
sbb
mov
test
mov
ret
das
jge
scas
fcmovne
movsl
leave
out
sub
stos
mov
cmpsb
repnz
adc
xor
xor
rorl
cmc
sti
test
jl
sub
mov
xor
pop
pop
enter
repz
rcll
jb
sub
adcl
add
out
push
jae
ficoml
mov
sub
decb
push
lret
fstpl
cmc
inc
not
pop
inc
jns
stos
dec
cmpsb
repz
cmc
mov
fcoml
mov
and
mov
sar
pop
aaa
les
jae
mov
mov
xchg
shll
icebp
stos
cld
xor
add
xchg
aas
xor
jge
cmp
jo
push
inc
push
addr16
lock
jne
pop
dec
push
stos
sub
push
inc
sub
out
mov
into
pop
aaa
popf
add
lret
mov
popf
and
test
and
sub
loop
and
and
xchg
mov
mov
inc
or
push
push
imull
or
xor
test
into
pop
cmp
movsb
inc
aaa
jne
inc
hlt
das
aaa
add
ss
cld
pop
and
scas
stc
cwtl
push
add
hlt
ljmp
stos
enter
out
pop
adc
cmp
adc
or
aas
fcmovnbe
cwtl
nop
dec
lea
push
addr16
jl
nop
sbb
jnp
outsl
and
movsb
push
fwait
sub
xchg
bound
mov
pushf
xor
je
mov
testb
sbb
lcall
adc
lock
ds
mov
lcall
mov
dec
dec
push
mov
inc
hlt
mov
cs
cmp
and
imul
fidivl
int3
push
cmc
ds
rcrl
xchg
push
shl
jle
cmp
je
xorb
sub
mov
pop
ljmp
ljmp
dec
imul
std
les
js
in
fistps
fdivrp
adc
out
xchg
leave
cwtl
out
aas
push
sbb
jg
pop
ljmp
out
sub
xor
inc
in
stc
and
jno
mov
jge
scas
adc
cltd
sbb
push
and
mov
mov
pop
fwait
push
xchg
sti
dec
rcl
divb
pop
jb
std
ja
pop
cmp
in
fwait
mov
jns
cld
xchg
adc
sbb
pop
add
iret
push
shll
xor
and
outsb
push
ja
cmpsb
insb
add
out
aam
roll
inc
mov
push
mov
xchg
divb
jge
imul
fimull
mov
xchg
stos
push
movsl
ljmp
test
push
int3
pushf
shlb
dec
xor
xchg
jns
das
repz
mov
mov
std
jecxz
mov
adc
jmp
xor
pop
js
inc
mov
scas
fucomp
jns
inc
or
sub
addr16
out
cmpsb
fildl
js
test
jbe
jp
lret
sbb
add
xchg
ljmp
cli
and
jmp
push
stos
js
leave
jmp
push
mov
gs
and
xor
sub
lahf
daa
mov
out
jno
adc
cmp
ss
js
and
fucomi
inc
clc
das
lods
subb
sti
cltd
out
bound
mov
or
or
pop
mov
ret
cltd
mov
cmpsb
push
or
xor
adc
loopne
std
dec
xchg
inc
les
mov
out
xchg
push
mov
mov
icebp
inc
push
test
add
sub
sbb
cli
sarl
addr16
pop
in
or
je
mov
xor
popf
mov
movsl
aad
inc
dec
add
lock
pusha
xor
test
sub
fwait
and
cmpsb
fs
cs
cmpb
orb
shl
xchg
pop
mov
add
mov
mov
out
mov
addr16
push
jns
xor
sbb
sub
or
xchg
ficomps
push
mov
sahf
xchg
push
sbb
add
nop
in
test
in
repz
adc
mov
pusha
xchg
cli
arpl
setno
xor
mul
stos
sbb
inc
jnp
pushf
pop
sbb
insl
mov
lods
mov
pop
push
push
pop
addr16
xor
or
inc
jg
or
mov
hlt
sahf
sti
call
sub
cltd
push
inc
xchg
outsl
aas
ljmp
jne
inc
jbe
dec
add
pushf
jnp
xchg
shrb
call
jecxz
mov
dec
add
aam
dec
sub
pop
movsb
popf
pop
mov
xchg
or
mov
js
add
mov
fidivrs
divl
or
xchg
mov
add
mov
scas
imul
and
mov
dec
mov
jns
xor
les
outsl
pop
lods
mov
test
out
mov
jo
jne
dec
cmp
int
adc
add
mov
sti
iret
push
sub
ja
xchg
jns
ja
std
xchg
in
jo
push
imul
testb
cmc
mov
loopne
shrl
xchg
jnp
in
xor
test
mov
inc
jmp
cmpsl
rolb
mov
stc
lock
dec
lret
imul
cld
mov
pop
clc
mov
push
xchg
fst
int3
aaa
sub
dec
pusha
icebp
loopne
rolb
loope
pop
in
scas
sti
xchg
jbe
fistpll
outsb
sbbb
fdivrl
fdivr
jecxz
push
les
pop
xchg
jae
xor
enter
lea
jl
mov
jno
mov
mov
cmpsl
into
mov
inc
hlt
sub
aaa
push
jb
xor
iret
orl
loopne
lret
dec
mov
js
mov
je
cmp
mov
inc
adc
push
nop
insb
push
xor
or
mov
int3
pop
gs
loop
inc
fstpt
shrl
xchg
daa
hlt
fucomip
jo
insb
daa
stc
std
sub
xor
shrl
push
jno
ja
xchg
dec
cwtl
cmc
pushf
lret
sub
mov
add
push
xor
adc
mov
dec
orl
jmp
lahf
out
in
mov
lods
and
add
jb
ja
or
dec
insl
pop
in
mov
or
sahf
bound
jnp
popf
icebp
sti
jnp
in
ss
lock
or
pop
cltd
dec
adc
lahf
fcoml
adc
jle
inc
out
in
pop
roll
iret
sub
cmp
cmpsb
or
lret
shl
das
lea
add
mull
push
lds
fidivrl
dec
mov
xchg
sub
mov
inc
fldl2e
pop
mov
roll
pusha
jmp
fstl
cltd
pop
ficompl
pusha
jbe
adc
mov
inc
rorb
push
int3
in
xchg
pop
lahf
push
adc
mov
or
mov
adc
les
pusha
in
mov
xor
shrb
pushf
mov
fsqrt
inc
mov
or
jae
push
mov
fists
xorl
cmp
cs
xor
jge
push
pop
pop
cld
sahf
adc
test
fs
jnp
push
push
push
rol
mov
fwait
std
mov
loop
mov
dec
adc
shrl
in
dec
sub
jne
outsl
and
andb
ljmp
push
add
add
fadd
cmp
int
orb
lret
lcall
cs
cli
ficomps
adcl
lods
xchg
pop
inc
addr16
ret
scas
stos
into
jbe
inc
push
cmp
fists
xchg
pop
sti
das
cmpsb
std
mov
lock
sbb
aas
sbb
aas
push
pop
mov
negl
mov
sbb
movsl
mov
xchg
lods
cs
push
sub
imul
jnp
fistpll
or
in
and
test
repz
inc
lret
pop
inc
mov
mov
mov
sub
stos
xchg
loopne
push
dec
lcall
stos
pop
les
mov
shll
and
cmc
xor
inc
and
ret
into
iret
call
push
cwtl
ljmp
lret
arpl
aad
aaa
jnp
mov
pop
xor
mov
sbb
cmp
lret
cmp
xchg
dec
push
pushf
mov
sahf
shlb
sub
push
fldenv
std
mov
push
shll
push
or
cli
test
pop
mov
add
sub
cmp
add
push
fsubp
mov
mov
outsl
mov
test
pusha
sti
adc
xchg
xchg
mov
jne
jno
scas
jle
push
mov
pop
cmpsb
fs
rorl
adc
push
adc
cmpsb
outsb
sti
push
push
adc
jbe
cmp
push
sbb
bound
jmp
ss
lds
or
jmp
stos
pop
lahf
jb
mov
pop
out
outsb
lds
or
iret
jnp
cmp
push
xchg
in
inc
pop
dec
jp
xor
ret
sub
or
ret
mov
scas
mov
cmp
or
sub
sarl
inc
fmull
fisttps
mov
jno
bound
sub
insb
icebp
inc
fidivs
mov
lcall
fxch
cmp
push
xchg
dec
sub
mov
mov
stos
sbb
push
cli
push
in
fcompl
push
sbb
cmp
data16
inc
ret
daa
push
mov
lods
test
stc
add
and
jbe
cs
sub
sahf
push
sahf
jbe
roll
mov
in
popa
jg
stos
and
jns
jle
push
js
sub
xchg
sti
icebp
lahf
fs
cli
xchg
mov
pop
lods
pop
fisttps
pop
jmp
pop
mov
cld
xor
dec
loopne
fstpt
adc
pop
sbb
fisttpll
in
xchg
lcall
icebp
idivl
fistps
push
stos
rcrl
dec
fisttpl
ss
push
sbb
mov
adc
sub
sub
xchg
pop
lods
and
in
mov
mov
movsb
push
add
cmp
jno
hlt
lret
flds
add
clc
jne
sub
sbb
loop
add
sahf
add
rcrb
fcompl
setb
push
adc
mov
test
pop
push
dec
aam
lods
ret
add
loope
loope
push
fsubrl
pop
xor
jae
sub
dec
ss
ret
sub
mov
aaa
push
or
sub
lcall
inc
push
mov
jp
inc
insb
adc
js
and
xchg
sub
mov
pop
outsb
push
cwtd
mov
add
xor
push
sbb
jl
imul
push
and
adc
xchg
mov
addb
inc
iret
dec
adc
lea
sbb
loope
inc
rcll
test
cmp
out
lahf
jecxz
sbb
dec
stos
shll
imul
mov
inc
sbb
das
lcall
mov
inc
push
mov
or
cld
push
mov
sub
jmp
negl
push
sbb
outsb
ljmp
sahf
or
sbb
push
repz
mov
cs
gs
ljmp
sbb
int
adc
fcomp
push
in
aad
ljmp
or
mov
movsb
sub
jg
mov
scas
sub
stc
mov
jg
and
mov
cmc
or
push
sub
or
and
sub
pusha
cmp
or
ror
fisttpll
mov
sub
scas
push
add
stos
inc
lods
push
lock
sbb
iret
inc
mov
outsl
mov
stc
dec
sub
lea
mov
lret
imul
vcvtpd2dqy
andb
mov
pop
push
scas
lahf
lea
sub
mov
inc
jb
and
cli
leave
sub
fmuls
and
insb
out
lret
in
mov
cld
cmp
sub
xor
xor
repnz
pop
movsb
iret
sbb
lock
clc
dec
sti
lods
mov
insl
mov
mov
pusha
test
fdivl
sti
cli
inc
sbb
jecxz
pop
cmp
data16
mov
push
jne
hlt
jns
cli
mov
inc
fdivrl
insb
out
aam
popf
inc
xchg
fidivrs
cmp
rolw
jno
pop
or
push
lds
mov
lret
std
fdivrs
jbe
test
ret
mov
mov
push
cmp
insl
sahf
xor
outsl
pusha
jge
daa
push
ret
ret
cmc
mov
cwtl
test
and
sub
aam
mov
jmp
mov
fwait
cltd
mov
int
stos
xchg
xchg
push
int
inc
inc
scas
filds
add
xchg
clc
mov
es
cmp
push
jg
shlb
adcl
ficompl
les
fwait
repnz
xlat
mov
imul
inc
xor
sbb
pop
mov
insb
cmp
call
mov
sti
out
test
sbb
sub
jge
rorb
fsubs
xor
pop
mov
outsb
jge
rclb
jns
xchg
push
xchg
inc
repz
adc
popw
fisttps
mov
adc
les
jge
imul
jae
cmc
add
jmp
insb
sbb
cwtl
xchg
je
fcoms
aam
cld
pop
mov
inc
ficomps
out
pusha
fidivl
lcall
lahf
pop
dec
pop
mulb
pop
or
leave
cmpsl
jg
sbbb
notl
mov
mov
dec
mov
mov
sbb
pushf
dec
repz
and
dec
orb
inc
scas
push
test
xor
push
imul
int
addr16
mov
push
aas
call
lahf
lret
pusha
jl
out
add
cld
cmp
mov
mov
xchg
stc
push
testl
mov
cmpsb
dec
enter
push
add
add
or
dec
test
loop
addl
xchg
push
mov
xchg
les
mov
lods
dec
dec
testb
mov
subb
pop
int3
jnp
mov
sub
orl
sti
push
xor
jmp
out
push
lcall
in
stos
sbb
or
cmp
cmp
mov
jmp
mov
pop
insl
sarb
mov
xchg
push
mov
push
inc
sahf
insl
test
in
adc
mov
hlt
hlt
loope
aas
xchg
flds
stos
xchg
xchg
inc
ret
cmp
aas
xor
daa
jmp
pop
flds
jmp
je
sub
sbb
sbb
push
pop
mov
pusha
sub
add
fsubl
mov
dec
xchg
hlt
inc
add
mov
add
xchg
dec
icebp
xchg
pop
es
inc
cmpb
xor
xchg
je
push
jle
sbbb
subl
inc
and
in
ret
loope
pop
xorl
push
fildll
jmp
push
mov
mov
adc
dec
push
or
out
sub
jmp
ret
cmp
xor
xchg
dec
mov
jno
cmpsb
lret
inc
lahf
ss
mov
fisubs
imul
fucomp
push
add
lods
pop
mov
movsl
scas
aaa
pop
es
enter
in
mov
test
outsl
repz
js
fidivrs
push
mov
mov
xlat
adc
inc
mov
dec
adc
mov
or
or
pop
mov
pushl
bound
aam
xchg
out
mov
lret
xor
sbb
add
mov
lahf
out
pushf
jo
pop
insl
dec
aas
filds
aas
imul
aas
imul
push
sbb
imul
dec
push
jecxz
inc
or
push
call
clc
mov
loop
sbbl
jno
mov
repnz
les
xlat
clc
xchg
test
mov
rcrb
stc
pop
sahf
dec
fucomip
sbb
inc
adc
sbb
mov
sti
scas
lock
mov
inc
push
and
fstpl
popf
popf
mov
lock
movb
push
mov
xchg
stos
or
lret
test
jne
mov
ja
cltd
cmp
push
fisubrs
int3
inc
das
jge
mov
mov
ret
daa
leave
adcb
rclb
xorb
imul
sarb
jnp
pop
cmp
dec
mov
xchg
les
dec
arpl
mov
imul
pop
add
adc
xorl
pop
or
lock
jo
sbb
cmp
js
mov
add
sub
scas
call
jl
jbe
sub
outsl
xor
inc
mov
inc
mov
dec
notl
mov
call
push
or
xor
in
sbb
cltd
out
add
jne
cs
arpl
push
in
insl
adc
sub
push
aas
lret
in
mov
ds
movl
cltd
repz
nop
int3
sub
push
loop
pop
in
cmp
and
repnz
cltd
fsubl
seta
lret
cld
nop
ficompl
das
xor
call
ret
mov
inc
add
pusha
int3
xor
mov
outsb
ds
and
push
sbb
mov
or
xor
or
jmp
rorl
aam
aam
xorb
cli
arpl
add
dec
addb
jb
and
jp
shrl
out
jge
cli
sub
es
mov
add
je
xor
fisttpll
pushf
stos
push
mov
adc
std
add
xor
push
mov
jmp
sub
jle
add
adcl
or
iret
stc
cmpb
imull
push
cmp
out
int3
adc
add
lods
shlb
sub
jns
jo
sub
cld
lods
je
cmp
jecxz
xchg
or
jge
aad
mov
cmp
push
popf
or
inc
rcll
and
in
lods
xchg
xlat
xor
fistps
mov
sbb
ljmp
sbb
les
cmpsb
push
cmp
push
add
mov
jl
xchg
adc
mov
inc
add
mov
adc
mov
es
outsb
out
mov
mov
out
loope
dec
test
mov
sbb
imul
mov
adcw
xor
pop
outsl
push
dec
xchg
sub
xchg
addr16
jmp
addb
out
out
and
mov
stc
in
xchg
jecxz
test
add
popa
hlt
sub
int3
sbb
fwait
sub
pop
dec
mov
in
std
inc
jb
leave
mov
and
shll
cmc
ds
inc
mov
pop
cmp
sahf
leave
dec
or
lock
aas
mov
mov
adc
dec
sbb
jle
cmp
inc
in
xchg
cs
push
pop
insl
fbstp
js
or
jl
push
pop
mov
pop
lahf
or
into
cmp
sbb
mov
push
movsl
rcll
lds
out
mov
pop
and
iret
loope
out
out
cmpsl
loop
lret
cs
xchg
popf
nop
mov
ret
xor
fisttps
inc
lret
pop
cltd
fwait
sti
xor
xor
sub
push
xchg
stos
lea
mov
jecxz
fadd
lcall
and
xchg
sub
fwait
repnz
xlat
mov
jno
xchg
cmp
jnp
mov
popa
cli
mov
jg
cli
mov
sub
xchg
rcrl
stos
xchg
fwait
cmp
add
decb
push
stos
pop
mov
adc
adc
mov
push
pusha
sbb
mov
cmp
les
pop
sahf
test
or
jnp
scas
cmp
out
mov
inc
jle
fcomps
cmp
mov
push
outsl
std
lret
or
mov
add
inc
imul
out
inc
xlat
stc
insb
imul
mov
add
xchg
fbstp
lods
push
xchg
push
ret
add
mov
mov
movsb
mov
jg
push
repnz
lock
or
sub
add
loope
push
lahf
aam
sbb
push
lcall
mov
lret
pop
dec
or
clc
por
lds
inc
lret
fisttps
ljmp
popf
cltd
cmp
jno
xchg
add
dec
pop
outsl
aaa
rcll
inc
sub
sbb
xchg
movsb
push
jge
sub
addr16
ret
sub
mov
cwtl
sahf
sarb
pop
es
and
jge
ffree
stc
cmpsl
test
cmpsl
xchg
push
jno
mov
dec
add
mov
cmp
mov
xlat
pop
fisubs
movsl
imul
ss
std
mov
cmp
mov
mov
add
jnp
iret
push
bound
rclb
ljmp
pop
push
push
xchg
stc
cs
push
jo
xor
add
shl
mov
or
sbb
cmp
xchg
add
cld
xor
lahf
cld
out
fwait
or
adc
or
popa
xor
cmp
jne
xchg
sbbl
dec
ja
push
in
cmp
sub
jb
push
inc
ljmp
movsl
fstps
lahf
cltd
or
rorl
adc
lahf
jno
cs
cmp
repnz
out
scas
call
aas
mov
scas
in
hlt
jle
loope
fwait
pop
jne
pop
add
xchg
cs
scas
jo
dec
dec
cmp
push
push
cmc
jae
mov
mov
cmpl
adc
icebp
fisttpll
inc
jl
pcmpgtw
jle
mov
pushf
jle
jns
push
and
push
scas
jl
pop
sbb
pop
movsb
rcrl
pop
pop
dec
lock
stc
aad
add
push
arpl
lods
lret
cmp
jl,pn
ret
mov
jl
test
mov
xchg
loop
push
and
cli
push
xor
in
push
sub
sub
movsb
leave
pop
lret
cmc
movsb
pop
mov
xor
rcrb
mov
lods
mov
xor
mov
sub
das
sub
adcl
out
cld
fdiv
out
cmc
and
xchg
fisubs
xor
lahf
mov
mov
out
and
jbe
pop
nop
cltd
arpl
clc
bound
addr16
mov
push
mov
dec
popa
imul
push
add
ljmp
aad
mov
pop
or
mov
inc
lods
add
testb
sbb
and
sbb
mov
sbb
mov
data16
mov
mov
clc
fwait
mov
leave
pushf
add
in
push
data16
lods
xor
adc
pop
lret
and
jb
push
and
mov
addb
lret
je
dec
je
pop
aad
push
mov
dec
pop
pusha
xor
push
xchg
and
repnz
inc
xor
cmpsb
pop
pop
sbb
mov
into
sub
pop
aaa
fnstsw
arpl
ljmpw
jnp
movsb
out
dec
or
or
das
mov
lret
sbb
push
in
or
lahf
lea
aam
inc
orb
pop
adc
mov
mov
hlt
icebp
push
sub
push
in
sub
js
aas
gs
aas
mov
add
cwtl
mov
mov
loope
xchg
loopne
mov
cli
pop
xor
sbb
and
bound
mov
sbb
sub
pop
imul
jno
into
clc
leave
mov
cmp
insb
in
stos
sbb
out
sbb
in
inc
dec
dec
or
ds
insb
inc
in
xchg
adc
test
push
ffreep
leave
pop
cli
loop
inc
adc
repnz
pop
push
or
inc
pusha
lods
mov
pop
lods
or
push
push
push
lea
xlat
xor
mov
mov
jno
negb
push
mov
xchg
jb
roll
jns
shlb
and
xchg
sub
mov
mov
mov
or
imul
xor
cld
ljmp
js
lahf
push
dec
sbb
in
mov
sahf
pop
sbb
popf
cltd
xchg
je
fsubl
push
xor
loop
ljmp
cmp
ja
lret
pop
push
dec
pop
jmp
fidivrs
ds
sub
enter
inc
ficomps
push
cs
pop
fildll
push
test
mov
mov
xchg
xor
mov
insl
mov
movsl
pop
das
shl
inc
popa
divl
mov
daa
loop
jge
push
push
movsl
jbe
daa
inc
inc
sbb
les
fistpl
cmp
xchg
dec
jne
mov
cmpsl
ds
mov
xlat
hlt
adc
data16
dec
mov
push
and
cmp
outsl
fildl
imulb
push
cmpsl
mov
mov
movsl
test
push
rorl
push
add
sbb
aam
sub
insb
adc
pop
push
xor
jbe
mov
push
push
roll
push
hlt
adc
sbb
mov
sarb
lret
xchg
and
push
sti
adc
int3
or
mov
push
jmp
jle
lods
adc
push
and
jl
ret
or
loope
xchg
cmc
cmpsl
fwait
scas
lret
fimuls
iret
data16
and
sub
pop
div
pop
lret
xchg
lret
jb
jns
mov
out
xorl
stos
xchg
cli
sahf
mov
out
adc
cmp
push
daa
cmp
dec
arpl
inc
push
addr16
test
cs
cmp
xor
xor
int
mov
test
mov
sbb
xchg
adc
movsl
movsb
cwtl
inc
sbb
bnd
xor
xchg
arpl
lcall
mov
mov
addb
or
in
frstor
jmp
cmp
stc
repz
shlb
loope
aad
cmp
sahf
aam
imul
push
ffree
jo
push
insl
sub
mov
mov
dec
testl
mov
push
cmp
sbb
sbb
xchg
inc
mov
fwait
xor
stc
push
dec
mov
data16
mov
addr16
test
inc
popa
test
mov
stc
and
test
test
popa
xchg
into
jae
lods
cmp
lock
mov
add
dec
out
adc
frstor
adc
jmp
push
cld
inc
mov
dec
push
adc
xor
cli
or
ret
out
mov
sbbb
test
repz
xor
imul
testb
arpl
scas
cmp
fimuls
push
leave
mov
stos
xchg
shll
sbb
dec
jmp
mov
iret
mull
sub
test
dec
test
movsb
dec
test
mov
js
fldenv
sub
test
jne
ficoml
or
mov
xchg
jae
jo
mov
mov
divb
sti
negb
mov
or
flds
jo
stos
das
dec
movsl
inc
dec
jo
and
push
xchg
outsb
sbb
js
dec
sub
jne
pop
adc
and
mov
inc
push
pop
add
push
roll
int3
push
loope
in
rclb
cmc
fsubrl
pop
iret
push
repz
add
fisttps
sub
inc
sub
rclb
int
xchg
popa
fcoml
pop
sbb
mov
mov
inc
daa
cmovb
cmpsb
adc
lods
xchg
test
clc
aam
sbb
nop
or
jmp
jl
mov
add
mov
inc
xchg
sbb
mov
outsb
sbb
fidivl
and
loop
aam
adc
pop
enter
pushf
out
lahf
int3
mull
pop
in
add
aam
inc
push
fucomip
mov
lahf
cltd
adc
mov
pop
mulb
adc
adc
dec
je
push
xchg
xor
insl
add
out
dec
add
icebp
cmp
imull
jmp
icebp
push
cmp
nop
sub
vshufps
xchg
xchg
stos
loop
xor
mov
push
sub
or
aaa
adc
or
and
repnz
jl
insl
imul
and
dec
push
outsb
xor
xorl
xchg
iret
sub
sbb
mov
xchg
mov
jg
push
sbb
jne
xchg
or
jge
pop
int
lods
mov
xchg
mov
dec
mov
push
inc
pop
bound
add
dec
shl
out
or
imul
push
pop
lds
xchg
mov
jmp
jbe
aas
gs
out
inc
into
stc
inc
mov
adc
or
loope
cmp
test
pop
clc
xor
add
jno
enter
shlb
mov
fiaddl
adc
pop
stos
sbb
scas
push
stc
imul
mov
popa
out
mov
les
adc
outsl
xor
jmp
sub
cmp
push
push
popf
in
ret
or
pop
shlb
fmul
scas
cmp
pop
imul
cmp
ds
mov
pusha
and
mov
call
out
cmp
sub
stos
mov
cmp
outsb
cltd
stc
and
or
arpl
lock
push
lcall
shll
xchg
jmp
out
sub
pushf
xchg
inc
or
sub
sbb
cmp
call
mov
call
cmp
pop
mov
test
mov
push
mov
adc
xchg
push
es
fwait
adc
nop
lds
stos
lahf
sbb
js
mov
push
daa
xor
cwtl
stos
outsl
mov
rcl
push
loope
cmp
jge
adc
dec
push
mov
sbb
jl
stos
pop
xor
adc
inc
xchg
dec
or
push
or
popa
fistpll
negb
sub
cs
and
xor
paddsw
mov
fisubrs
and
inc
jae
sub
ds
add
in
pop
adcl
icebp
jp
fsub
stc
jecxz
daa
sbb
fcomps
in
sti
das
lahf
loop
jecxz
in
gs
bswap
xor
jge
xor
lcall
fnstcw
scas
shlb
je
fwait
shl
pusha
cmpsl
pop
leave
mov
setnp
inc
xchg
or
push
mov
imul
push
xchg
or
mov
push
mov
xchg
roll
xor
cmp
xchg
mov
or
xor
leave
test
jl
test
push
push
stos
jbe
sub
imul
sbb
dec
pop
pusha
ljmp
or
xchg
dec
ja
mov
add
das
ds
xchg
outsl
push
stos
push
xchg
adc
sub
sbb
lock
sti
dec
pusha
jae
inc
or
lods
loope
xorb
scas
divb
cmp
ja
shll
ret
and
into
and
enter
cmpsl
push
lods
dec
xchg
jne
sbb
push
jae
in
fnstcw
outsl
das
push
std
sub
jecxz
jp
lds
cmp
insb
xor
sub
xchg
cwtl
lock
iret
xor
jae
lock
mov
sub
cmp
mov
fsubrs
sbb
outsl
imul
enter
mov
push
subb
xor
scas
adc
add
scas
cmp
rcl
jb
faddl
push
icebp
insl
dec
push
add
sub
fnstcw
and
adc
arpl
push
cmpsl
sbb
scas
outsl
or
scas
mov
mov
jo
out
insl
dec
push
addr16
shlb
and
rolb
fmuls
jbe
lea
das
outsb
fildll
out
aaa
and
xor
pusha
sti
jno
test
enter
je
xor
xchg
sbb
xor
std
push
add
push
sarl
xchg
andb
mov
mov
jge
pop
xorl
or
ret
mov
nop
lcall
xor
cs
in
sbb
aad
dec
dec
fwait
unpcklps
cmp
rcrl
arpl
jge
mov
cltd
push
cwtl
repz
ljmp
cs
mov
sahf
test
sbb
gs
add
mov
xor
mov
lret
das
mov
lret
and
mov
xchg
aad
push
insl
cmc
jbe
jge
cwtl
push
jae
imull
ljmp
mov
adcb
push
xchg
pop
shrl
mov
adc
wbinvd
or
outsb
jne
mov
insl
out
mov
dec
inc
mov
les
inc
push
xchg
xor
ffreep
xchg
stc
ror
push
rclb
bound
mov
sub
es
add
mov
and
jns
jnp
ljmp
mov
xchg
adc
sub
xchg
jne
sbb
sahf
cmp
cmc
mov
in
dec
loop
pop
repz
lret
mov
push
pop
call
popf
test
sbb
arpl
movsl
sbb
scas
scas
pusha
mov
dec
je
xorl
add
popa
addr16
call
push
sub
jecxz
xchg
ds
mov
sub
dec
stc
sbb
cmpsl
aaa
add
push
pop
xor
dec
in
push
jmp
cmp
sbbl
adc
sbb
aad
movsl
dec
popa
addl
outsb
lahf
jo
loope
push
push
sub
aad
add
adc
dec
inc
loopne
testl
pop
add
lcall
pop
inc
sub
data16
add
adc
outsl
cmp
ss
push
test
or
jb
inc
dec
jb
test
orb
jl
cmp
push
xchg
mov
sub
push
mov
or
jg
scas
pop
cmp
sbb
jb
fsubs
mov
nop
test
jno
adc
mov
shr
movb
pop
out
lcall
mov
mov
push
call
inc
jns
xchg
mov
sub
jno
sbb
dec
out
hlt
enter
dec
in
cld
jge
movsl
shlb
inc
popf
inc
cmp
ret
cmpl
loop
xor
xor
push
sub
xor
xchg
insl
cmp
push
or
jmp
push
lret
and
fldenv
mov
dec
or
mov
imul
xor
and
out
pop
test
cmp
sub
outsb
outsb
out
incb
xorl
shlb
push
sbb
inc
icebp
test
xchg
aas
or
add
bound
aam
mov
mov
imul
insb
mov
movsb
pop
or
scas
movsl
mov
jae
icebp
mov
test
mov
inc
or
and
push
mov
push
cmp
out
jb
cltd
nop
in
insb
jne
mov
inc
xchg
jae
mov
pop
rorb
loope
and
js
lcall
mov
adc
xchg
vpaddsb
std
inc
out
mov
cwtl
mov
subb
push
mov
add
mov
arpl
cltd
add
arpl
pop
sub
shlb
inc
outsl
jg
fs
mov
adc
jo
nop
lods
cwtl
pop
adc
sbb
pushl
sub
daa
mov
int
dec
mov
adc
outsl
push
ds
mov
movsl
push
mov
jle
nop
outsl
mov
adc
cmp
insb
jg
pusha
cmp
ret
std
cmpsb
jecxz
es
test
test
nop
out
imul
js
mov
clc
jns
ret
shlb
arpl
dec
jle
xchg
mov
fildll
mov
inc
pushf
out
jmp
xor
xor
mov
mov
arpl
cwtl
nop
out
scas
loop
sub
and
mov
test
int3
sahf
xchg
cld
stc
js
cmp
outsl
rol
and
hlt
or
mov
insb
fwait
push
cli
push
inc
lods
cmpsl
pop
inc
in
pusha
mov
sbb
pushf
cmp
xor
xor
jmp
mov
dec
mov
mov
inc
pop
jl
and
gs
lods
add
adc
add
sbb
je
xlat
outsb
add
adc
mov
jns
outsb
jbe
jnp
aas
dec
xor
rolb
cmp
push
dec
pop
adc
lahf
inc
jae
sub
test
xor
push
or
mov
xor
loopne
pop
xchg
je
faddl
leave
mov
shlb
xor
loope
jg
add
lea
shl
xchg
imul
scas
in
lret
enter
cli
cmp
leave
sbb
call
pop
xor
mov
or
imul
fwait
in
fmuls
mov
jmp
add
adc
je
dec
push
divb
nop
mov
in
popa
dec
cli
mov
jmp
pop
xchg
mov
pusha
cmp
push
jb
inc
test
pushl
popa
mov
lret
lcall
sbb
xchg
ret
mov
pop
mov
aas
fld
sbb
dec
loopne
shrb
xor
scas
and
push
xor
stos
xor
mov
push
int
ds
xchg
pop
lcall
fstpl
pop
inc
fstps
adc
bswap
lret
popa
pop
cmpsb
jmp
test
lods
mov
mov
xor
leave
adc
inc
out
add
sub
jmp
mov
xchg
scas
sub
xchg
ljmp
ja
add
js
loope
gs
and
out
mov
and
mov
lods
inc
mov
aad
mov
mov
xchg
test
and
mull
adc
or
add
in
arpl
mov
test
push
shl
imul
into
cld
bnd
shl
or
xlat
sarb
movsl
mov
subl
cmp
loope
mov
add
jg
mov
jp
call
jle
idivl
ja
mov
mull
call
mov
push
mov
aaa
cmpsb
movsb
jnp
push
inc
movsb
loopne
cltd
pop
test
cmp
inc
cmp
cmp
add
sbb
int
dec
fistpll
fldl
into
sub
sti
inc
enter
jo
aaa
or
std
pop
xlat
lock
mov
icebp
xchg
sbb
push
xchg
in
shrl
mov
out
xchg
loopne
mov
ret
cld
inc
ret
jg
push
daa
js
xor
mov
popa
stos
jg
outsb
fstpl
test
sub
in
jns
addr16
mov
out
dec
mov
imul
aad
in
aaa
pop
jne
add
pop
xchg
adc
mov
cmp
test
xchg
icebp
add
add
lock
cmp
enter
daa
dec
xchg
mov
and
test
dec
xchg
movsl
out
pop
dec
sbb
cmp
and
fidivl
push
or
and
cwtl
jns
add
mov
jge
push
or
lahf
sub
cmp
outsb
dec
pushf
add
lods
lds
push
int3
sarl
outsl
cltd
jle
repnz
fiadds
xchg
inc
xor
and
fiaddl
cmp
push
adc
mov
loopne,pt
inc
push
xchg
sbb
push
push
jp
xor
das
inc
jbe
cmpb
pop
ficomps
repz
jmp
sti
out
adc
das
into
inc
idivb
mov
pushf
ret
test
push
sbb
inc
xor
cltd
jp
cld
or
adc
dec
addr16
ljmp
shll
or
adc
scas
lahf
or
dec
dec
test
mov
inc
lds
jne
cmpsb
cmpsl
fwait
jmp
mov
ljmp
loopne
push
mov
mov
call
icebp
das
mov
pop
jmp
cmp
dec
imulb
stos
mov
lods
insl
sbb
lods
push
pop
orl
enter
fcom
movsb
dec
icebp
sti
push
mov
inc
insl
je
movl
dec
rorb
movsb
das
cs
mov
sahf
shrb
sub
aad
mov
shrb
cmp
lea
cmp
fbstp
fidivrl
cmp
or
out
fs
add
loope
repz
push
mov
out
movsb
shl
and
add
in
andb
rcrb
lea
sub
scas
and
or
push
and
repz
push
or
pop
add
jle
pop
or
iret
call
push
xor
cld
mov
xor
dec
sub
int3
data16
push
scas
inc
jb
mov
push
shlb
insb
out
push
roll
movsl
je
add
adc
or
adc
loope
icebp
or
pop
pusha
push
cmp
int3
sti
cmp
xlat
xlat
mov
inc
and
inc
dec
frstor
repz
lods
out
mov
cltd
in
and
addr16
jb
cmpb
inc
and
mov
mov
sbb
add
clc
adc
jae
inc
add
push
in
or
cmp
loope
xchg
dec
andl
sub
inc
arpl
and
cwtl
adc
mov
pop
dec
mov
sub
inc
mov
pop
or
fstpl
cmp
adc
fidivl
mov
jbe
mov
arpl
mov
in
inc
sbb
stc
pop
mov
sbb
push
into
out
adc
mov
ss
gs
addr16
mov
pop
movsl
mov
inc
sub
inc
dec
addr16
push
ret
pop
mov
loope
and
xorl
enter
movsb
sub
bound
fstpl
add
fnstenv
iret
lahf
aaa
jle
mov
mov
and
jge
std
mov
gs
push
dec
imul
pusha
popa
xchg
dec
mov
dec
push
push
imul
ret
cld
loop
adc
pop
addr16
inc
es
sub
mov
movl
out
js
inc
inc
dec
cld
ror
outsb
ss
fstpt
jle
pop
into
shrb
out
push
roll
xchg
mov
add
mov
xchg
or
les
cwtl
test
js
dec
stc
inc
stos
or
fidivrl
shl
pop
outsl
notl
and
hlt
std
sahf
mov
cwtl
and
or
nop
xrelease
arpl
mov
flds
scas
xchg
sub
mov
insb
in
inc
jmp
jne
adc
imul
mov
xor
sub
gs
inc
xchg
sbb
cmpsb
mov
xchg
dec
shlb
inc
add
and
add
sub
das
mov
es
shlb
mov
mov
lds
scas
rcrb
sarl
in
gs
cmp
sbb
pop
xchg
xor
ja
jno
mov
push
adc
mov
fstpt
scas
sbb
cmpb
add
xchg
stos
sti
cmp
sub
in
inc
jge
loop
or
fcomps
shlb
fs
push
xor
rclb
insb
into
imul
je
mov
aas
insb
and
ss
or
add
mov
rorb
popf
movsb
arpl
icebp
leave
xlat
inc
pop
sub
inc
add
jp
pushf
inc
and
ljmp
imul
and
loop
or
jecxz
shlb
ja
mov
jnp
or
mov
jge
jmp
ret
icebp
xchg
aas
fimull
pushf
pop
or
sahf
cmc
add
es
idiv
fldenv
ret
std
xchg
lea
add
adc
xchg
icebp
mov
add
jo
jmp
jbe
sub
int3
cltd
outsb
cli
dec
repz
outsl
xchg
or
adc
in
adc
mov
push
roll
xchg
outsb
add
mov
sub
pop
mov
dec
nop
popa
adc
inc
leave
add
xchg
xor
adc
ss
push
cmp
loope
jg
dec
stos
ret
mov
xor
add
loop
mov
addr16
rcrl
dec
push
popa
and
punpckhdq
scas
sub
cli
repz
fdivrs
loope
cmp
mov
das
shl
push
nop
adc
pop
sub
or
fwait
cmp
repz
mov
sbb
mov
sbb
mov
cmp
rolb
sub
shlb
cmp
mov
cmpsb
mov
pop
adc
std
fidivs
adc
sub
test
mov
or
lcall
sub
gs
xchg
cmpl
mov
mov
xchg
push
or
jne
adc
mov
ljmp
dec
rclb
jle
adc
roll
xchg
fisubs
dec
test
leave
pop
int3
and
jg
in
iret
push
cli
mov
push
in
cmp
and
les
icebp
aas
cmp
div
aaa
mov
cmp
leave
cmp
cmp
clc
fmulp
jge
leave
sub
in
mov
gs
stc
and
pushf
fisttpll
jbe
mov
mov
pusha
mov
sub
aas
mov
dec
repz
cwtl
adc
fwait
sub
pop
and
xlat
xlat
outsl
cmpsl
xor
ret
sub
outsb
scas
mov
mov
jnp
loopne
add
rcrl
sbb
clc
push
and
enter
loope
mov
and
push
rcrl
jo
mov
cli
dec
stos
cs
insl
outsb
jecxz
dec
mov
cltd
dec
cmpsl
pop
push
sub
out
jb
xor
outsl
arpl
cli
je
loopne
test
and
fcmovbe
js
xor
sbb
es
sbb
xchg
pop
and
push
mov
pop
mov
lds
pop
pop
push
mov
outsl
scas
add
fstp
adcb
lret
and
test
cmp
jnp
aaa
andb
pop
mov
sub
dec
jl
and
cli
xchg
icebp
ret
jae
inc
cmp
cmp
sti
push
mov
mov
push
inc
jo
cmp
out
jb
stos
rorb
repz
fwait
add
sarb
mov
aas
pop
sub
mov
jecxz
das
dec
jl
lods
in
in
jbe
xorb
push
lahf
add
fists
cli
ret
test
xor
mov
fldl
mov
lcall
xchg
dec
repnz
mov
iret
pop
or
jne
inc
cmp
daa
arpl
push
aaa
push
push
lea
orb
pop
sar
push
lahf
rorl
inc
jno
dec
rclb
in
jle
fxch
xchg
mov
mov
or
pushf
jp
xor
fcoml
aam
sahf
call
lret
mov
dec
sbb
clc
je
fwait
in
fisttps
sub
jmp
lods
inc
mov
adc
mov
and
xor
jae
add
ret
sbb
nop
jne
or
out
sbb
push
add
js
test
js
mov
out
mov
adc
int
fbld
orb
adc
stc
lret
mov
cmp
cmp
aas
cmp
sbb
mov
jne
adc
idiv
xor
insb
sub
stc
lock
pop
dec
test
cmp
call
orl
sbb
sub
sbb
jecxz
sbb
ss
rcr
adc
pop
or
into
mov
jno
js
or
sub
sub
sub
pop
negl
jle
push
bnd
and
dec
pop
outsl
push
loope
shlb
xor
xor
cmp
xor
push
stos
out
pushf
sbb
dec
and
iret
mov
mov
xor
push
dec
sbb
inc
insl
out
xchg
clc
and
imul
pop
je
jp
inc
das
jne
push
mov
call
lahf
push
stc
mov
sbb
xor
lods
mov
adc
mov
jp
cld
xchg
cmp
mov
dec
shlb
mov
cld
mov
add
jecxz
dec
sub
repz
cli
push
push
out
leave
adc
jl
clc
and
push
adc
popf
imull
lock
pusha
pop
bound
fcoms
dec
and
les
insl
lret
mov
or
sti
cmp
push
notl
bound
out
push
jmp
mov
lea
data16
in
int
outsb
cmpb
sbb
push
mov
cs
loopne
cmp
mov
stc
ror
scas
lds
lcall
test
push
daa
pop
nop
jle
mov
roll
je
repnz
in
push
adc
aaa
repz
jecxz
cmp
mov
dec
iret
aaa
pop
push
cmp
jne
fisttps
popa
aad
inc
scas
sub
sbb
cmp
shlb
ljmp
cmp
mov
dec
addr16
xor
pop
pop
jecxz
dec
and
mov
and
and
stos
sti
out
mov
mov
in
test
ja
jb
cld
jae
mov
jp
mov
mov
pop
int3
loop
pop
es
cmc
inc
mov
mov
push
sbb
shlb
ljmp
mov
insl
xor
push
or
xor
das
loopne
inc
mov
jp
test
sub
jbe
ljmp
inc
push
adc
sbb
jp
mov
and
iret
movsl
push
fsub
sub
ret
pop
adc
sarb
pop
pop
xchg
es
inc
mov
xor
sub
iret
add
bound
sbb
add
test
add
scas
cwtl
cs
add
pop
ret
lods
push
movsb
mov
sbb
jns
fisttps
cld
xor
loop
add
mov
and
lahf
out
dec
jecxz
dec
xor
pop
sahf
jbe
loope
iret
jnp
sub
add
mov
hlt
imul
jg
push
mov
leave
jmp
jbe
xchg
lret
xchg
xlat
outsb
fistps
into
insl
or
pop
and
addr16
mov
jae
ret
cmp
xlat
pop
enter
int
inc
mov
add
mov
dec
fidivrl
and
mov
push
and
jnp
stos
cli
lods
sahf
test
xor
out
adc
hlt
outsb
es
mov
adc
cmp
fwait
xchg
adc
ficompl
mov
insl
cmp
fwait
hlt
inc
outsl
dec
or
cld
mov
mov
cmpsl
adc
jle
xchg
push
inc
call
dec
xor
pop
mov
cmp
cmpsb
cmp
jae
and
test
jnp
xorl
aas
cli
aas
sbb
cmpsl
mov
rcl
aam
adc
mov
mov
je
in
xchg
inc
ss
ret
xchg
ret
lods
out
push
sysret
or
test
insb
dec
add
cmovs
popf
cmpl
xlat
mov
lods
push
push
xchg
mov
mov
dec
into
jl
cmp
and
mov
jno
inc
ljmp
je
in
movsb
lods
adc
aam
pop
xchg
mov
or
mov
fs
pusha
push
shrl
xchg
aad
inc
bnd
pop
sub
repz
inc
bound
imul
test
je
icebp
test
clc
in
idivl
lds
rol
cld
shll
mov
inc
mov
out
fdivs
rcll
add
sub
xorb
pop
add
or
movb
test
insl
data16
js
sti
push
outsl
sub
sbb
ss
loope
pop
ret
jl
jmp
int
cmpsb
data16
pop
fstpt
adc
mov
jecxz
and
xchg
out
sub
and
bound
fxtract
ja
lock
fs
add
enter
cltd
lcall
insl
dec
dec
adc
sbb
mov
dec
adcl
and
and
inc
sarl
aad
mov
roll
call
sub
popf
das
push
sbb
test
movsb
and
pop
cltd
xchg
mov
pop
mov
popf
loop
icebp
inc
push
mov
popa
loop
call
cwtl
or
inc
sbb
mov
mov
adc
dec
cmc
shrb
imul
sub
xchg
in
xchg
cmp
mov
mov
jno
aam
sbb
and
fldt
cmp
inc
cltd
cli
enter
sbb
sarl
or
aas
stc
sbb
enter
or
and
je
movsl
xor
xlat
adc
ja
or
divb
mov
and
sbb
gs
push
pop
sbb
dec
jle
cmp
sub
jle
or
addr16
clc
fwait
dec
fwait
or
cld
mov
ss
xor
cmp
dec
stc
fbld
rcll
mov
pop
inc
ljmp
mov
das
push
dec
je
cmpsl
insl
xor
data16
sbb
dec
pop
in
pop
dec
shlb
xchg
push
adc
fstpt
mov
nop
sub
mov
mov
xor
out
dec
ds
mov
or
je
xchg
gs
daa
adc
test
dec
sti
int
addb
insl
jbe
leave
adc
dec
loopne
adc
mov
xor
nop
iret
negb
lret
push
sbb
in
lock
aad
adc
xchg
and
movsb
es
pop
mov
dec
lods
jl
xlat
sti
out
inc
add
out
flds
pusha
cmpsb
out
pop
sub
push
int3
or
call
insl
rcrb
lcall
subl
and
ja
jne
push
sbb
mov
cmp
add
mov
xor
xchg
scas
call
test
xor
loope
jmp
jo
lret
cmp
jne
testl
mov
jle
addr16
mov
ljmp
or
addr16
mov
cmp
daa
int3
dec
fwait
sub
jp
pop
mov
pop
pop
jb,pn
push
ljmp
add
adc
mov
add
add
dec
lods
pop
or
leave
sub
push
adc
pop
add
xlat
and
xchg
add
xlat
ja
mov
sbb
fcoml
stos
xchg
push
insb
jecxz
out
out
cmp
pop
mov
add
imul
inc
aad
cmpsb
jns
mov
out
test
cltd
insl
hlt
adc
leave
iret
sub
data16
dec
ljmp
lret
loopne
or
fidivrl
jl
push
test
pop
push
iret
into
call
jg
test
or
mov
iret
xor
mov
pop
scas
dec
pop
jle
sub
in
mov
mov
cmp
lods
adc
push
xchg
inc
popa
sub
mov
lock
push
es
adc
dec
mov
inc
mov
mov
cmp
les
clc
push
inc
out
xor
hlt
mov
push
or
imul
adc
xor
jbe
pop
adc
bound
sarl
lods
cvtdq2ps
loop
pop
hlt
mov
inc
movsb
ficomps
and
dec
add
and
cli
out
xor
and
aaa
mov
int3
cmp
or
jge
insl
scas
rcrl
dec
outsl
gs
or
fistpl
test
jo
adc
int
or
sbb
repz
pop
pop
or
sub
lock
push
sti
dec
test
clc
or
popf
mov
sub
jo
shll
pcmpgtw
inc
sub
lcall
add
mov
or
das
xor
sub
mov
mov
or
movsb
jge
adc
into
dec
jmp
push
xchg
repnz
popa
decb
mov
push
mov
addb
fs
ror
sbb
pop
xchg
lock
pop
imulb
sti
icebp
gs
xor
xchg
jae
icebp
sub
sub
sbb
ljmp
inc
mov
dec
push
lea
inc
in
xchg
outsl
into
out
xchg
jb
rclb
xor
sub
out
cmp
mov
push
mov
pushf
imul
sbb
insb
in
in
rcrb
stos
lcall
ss
sbb
scas
inc
add
inc
pop
xchg
lcall
cli
stos
mov
loope
inc
fisttps
mov
repnz
push
mov
es
mov
jge
fwait
xlat
or
orb
scas
testl
fnstcw
jge
shrb
fcmovu
jp
inc
push
pushf
dec
ds
lods
loop
incl
mov
xchg
rcll
fsts
xchg
and
jns
test
lods
inc
out
xor
stos
cmp
enter
jne
sti
adc
or
out
lea
xchg
test
cmp
push
rcrl
push
sti
ret
dec
jo
in
xlat
repz
imul
inc
mov
repnz
or
mov
sbb
aad
push
fsubr
int3
popa
sub
adcl
stos
fs
test
mov
aad
jge
andb
ja
std
pop
rcll
push
jl
xlat
std
cmp
mov
inc
mov
pop
imul
fsubl
movsb
cmp
nop
sbb
scas
jg
mov
inc
fs
push
xchg
clc
inc
cmp
add
inc
ret
sbb
adc
fsubs
and
ficoml
fs
sti
cld
cmp
jns
call
loop
mov
xchg
pop
iret
iret
idiv
cmpsl
lret
aaa
add
push
jo
sbb
inc
cli
inc
adc
daa
aam
jmp
adc
push
push
pop
adcb
sub
add
rorb
or
xchg
xor
stc
jmp
sti
mov
fistpll
sbb
jno
sbb
stc
jo
jb
cwtl
push
and
inc
sub
das
and
mov
jmp
xor
sti
xchg
jne
jge
jg
lods
mov
movsl
je
int
scas
mov
lock
mov
inc
cmp
adc
push
ret
ret
sub
scas
fisttpll
stc
and
icebp
scas
sbb
lock
and
bound
lret
inc
paddb
dec
pop
dec
cmc
jo
push
loopne
out
fmuls
inc
cmp
stc
inc
and
mov
mov
push
push
je
incb
push
outsb
push
int
mov
xor
addr16
pop
das
shrb
fstpl
ds
xor
cmpb
or
mov
cld
pop
dec
sbb
ss
lds
test
mov
mov
lahf
adc
ja
mov
jae
add
or
repz
push
mov
mov
ja
rclb
imull
arpl
ret
ss
mov
aaa
xchg
jno
and
dec
pusha
xchg
in
inc
jl
inc
adc
sub
fdivr
inc
mov
xlat
push
mov
dec
cmpsb
add
pop
add
in
test
inc
cltd
pop
stos
sbb
mov
add
jno
jmp
divb
out
jb
sti
ljmp
dec
sbb
movsl
inc
mov
adc
and
sub
xchg
imul
je
popa
sbb
xchg
dec
adc
imul
xchg
arpl
insb
adc
popf
orb
sub
dec
pop
add
lods
push
xor
roll
xchg
xor
dec
ret
pop
push
adcb
cmp
pop
xor
pop
cmpsl
fcmovu
xlat
test
test
sbb
mov
mov
dec
mov
loopne
xor
cmp
pushf
adc
mov
lea
push
pop
popa
out
out
mov
lods
mov
daa
jl
sub
or
jmp
sbb
in
or
je
clc
xchg
cmp
mov
mov
call
hlt
sub
inc
mov
xor
jmp
dec
jne
andl
sub
jo
jmp
push
pop
imul
push
frstor
sbb
dec
or
stos
mov
mov
jmp
aad
je
inc
sbb
es
in
dec
aaa
jae
push
push
shll
and
adc
or
sbb
mov
and
push
lock
out
sub
pop
mov
mov
jo
in
outsb
xor
imul
ds
js
mov
cmpsb
cld
sbb
movsb
stos
test
sbb
xchg
ret
xor
add
dec
mov
or
or
aam
lret
adc
fadds
mov
out
pop
inc
test
aaa
pop
mov
lods
xor
cmp
push
loope
bound
sub
push
es
push
rcrl
adc
push
sub
inc
add
pop
into
adc
or
pop
insb
outsl
xor
cmp
loopne
icebp
test
and
sbb
push
pushf
ljmp
sub
mov
xchg
sbb
mov
rorl
lcall
leave
rcll
cmp
jmp
pop
lcall
pop
jp
pop
fisttps
call
mov
dec
cmp
cld
movsl
dec
dec
mov
call
mov
js
push
sbb
mov
jb
cwtl
ja
mov
lods
sub
sub
pop
sub
cmpsb
loop
xchg
mov
not
fsubl
xchg
loope
loope
iret
cmpl
dec
xor
sub
js
push
adc
lret
ds
in
cmp
inc
xchg
bound
push
clc
sub
inc
pop
jp
lock
popf
sti
dec
xchg
adc
or
cmc
outsl
dec
scas
ljmp
mov
cld
adc
push
xor
xor
mov
mov
inc
dec
test
in
fildl
outsl
and
shlb
ss
cmp
cmp
movswl
negl
fadd
pop
insl
sbb
mov
or
jmp
in
imul
jne
je
aaa
or
dec
and
pop
push
enter
xlat
cmp
sub
rolb
lcall
lock
push
sub
fs
push
fimuls
int
cmp
imul
xor
popa
xlat
add
repz
xchg
ja
subps
sub
sbb
jnp
out
scas
adc
pop
mov
in
inc
hlt
push
cli
jnp
jns
lret
mov
push
aaa
sahf
and
aas
sbb
inc
insl
pop
popa
mov
icebp
gs
clc
xor
lock
hlt
inc
cwtl
pop
leave
lcall
jnp
stos
cltd
mov
pop
or
jae
ss
cs
xchg
call
cmp
push
cmp
ja
dec
push
out
lds
daa
repnz
in
fbstp
mov
jmp
roll
lock
push
push
pusha
dec
fwait
ss
adc
add
cld
mov
mov
rorb
mov
xchg
sub
imul
test
sbbl
inc
in
push
insl
jae
xchg
and
call
aam
push
cli
push
cmp
scas
pop
mov
lret
addb
cmp
xor
out
in
adc
imul
add
pop
pop
adc
inc
or
mov
or
adcl
arpl
dec
cwtl
sub
roll
lock
test
lock
adc
dec
jne
dec
jmp
and
xor
shlb
ret
xor
std
lods
mov
add
test
sbb
loope
or
mov
mov
sbb
les
ret
js
fwait
daa
popf
inc
je
pop
adc
and
or
push
pushf
dec
pop
xchg
jb
hlt
add
push
pop
adcb
dec
in
fidivrs
in
mov
cmp
pop
lods
mov
sbb
inc
mov
inc
test
mov
pushf
sub
fsubrl
mov
das
addr16
into
sbb
incl
test
inc
data16
xchg
int
outsb
push
push
in
lods
rcrb
js
aaa
inc
cmp
push
inc
sbb
in
shlb
outsl
pop
stos
andl
mov
lahf
sbb
into
cmp
data16
fisubrl
dec
cmp
dec
pop
lret
add
nop
add
cmp
xchg
mov
mov
lahf
loop
jo
jnp
shrb
in
out
mov
pop
pop
inc
sbb
pop
inc
lret
and
movsl
adc
xchg
push
sbb
int3
pop
and
sbb
mov
mov
xchg
mov
gs
js
bound
jmp
jecxz
jnp
and
add
in
dec
in
xorb
mov
mov
int3
cwtl
inc
rcr
repnz
shll
jg
ret
ljmp
mov
jp
xchg
dec
and
je
fs
fadds
inc
xchg
shll
and
jo
sbb
xchg
mov
cwtl
add
js
in
mov
fiadds
int3
add
aaa
subb
xchg
movsb
lods
out
dec
hlt
pop
shlb
sahf
das
ja
aad
jno
xchg
push
cwtl
add
cmp
mov
icebp
rorb
fwait
fwait
xor
dec
mov
fcom
push
pop
pop
idivb
inc
jmp
inc
dec
sub
xor
out
mov
in
jge
out
cmpsl
cld
stc
xchg
inc
lcall
push
mov
sahf
rcll
push
outsl
in
sub
inc
mov
inc
xor
adc
data16
into
mov
test
sbb
mov
push
push
xchg
adc
imul
xchg
jle
in
xchg
addr16
lcall
dec
das
ljmp
sahf
xchg
test
adc
aaa
enter
xchg
push
subl
inc
sbb
aas
fadds
insl
mov
push
scas
add
and
jl
mov
scas
fadd
push
aam
push
jae
fld
or
pop
mov
loopne,pn
lods
jnp
lcall
xor
mov
pop
and
js
mov
test
mov
pop
mov
sti
xchg
into
shll
sarl
rcrl
sub
loope
jecxz
mov
aaa
pusha
mov
mov
in
fisttpll
and
sbb
cmp
das
insl
inc
adc
repz
lcall
bound
sahf
loope
ret
jl
cs
fsub
mov
mov
inc
xchg
pop
push
enter
shlb
addr16
pusha
xchg
je
xchg
sub
ds
out
sti
cs
jne
mov
pop
mov
mov
movhps
or
inc
and
jl
test
mov
addb
cmp
add
fiaddl
mov
stos
pop
add
icebp
dec
in
mov
pop
enter
sbb
xchg
mov
aaa
in
push
sbb
inc
mov
insl
daa
mov
insb
jo
dec
jne
xor
ret
sbb
loopne
push
push
xchg
jnp
dec
out
and
ret
sbb
insb
es
cmc
push
jo
cmp
inc
daa
fs
cmpsb
into
inc
cmp
xlat
xchg
cmpl
jae
loop
pop
jne
ret
mov
cwtl
mov
aam
hlt
jge
ret
fidivrl
adc
shlb
sbb
pop
adc
sbb
push
jbe
test
in
cmp
idivl
hlt
adc
mov
sbb
mov
mov
push
out
pop
mov
cli
push
popf
cmp
mov
cltd
mov
push
adc
adc
test
xor
cmpsl
mov
mov
lds
bound
push
aad
fwait
gs
loop
mov
mov
mov
ja
loop
fcoml
and
lret
sbb
pop
dec
fcompl
imul
out
ss
mov
jns
cmc
push
mov
das
push
in
jmp
mov
imulb
or
ljmp
xchg
xchg
xor
rorb
les
inc
sahf
ja
push
xchg
jecxz
sbb
fdivrp
jno
lret
xchg
icebp
dec
outsl
outsl
imul
cld
push
pop
mov
jae
fidivrs
add
mov
push
mov
jae
cmp
sub
dec
int
data16
aas
or
push
test
jle
lahf
imul
hlt
sub
icebp
test
push
cmpsl
jge
lret
mov
xor
lahf
bound
add
lods
cmp
or
mov
test
sti
cmp
and
or
pop
and
jb
xor
push
and
sarl
popf
push
mov
cmp
daa
lret
ljmp
cmp
insl
cmpsl
adc
sbb
mov
xor
cmp
and
push
jge
fists
mov
leave
enter
enter
sbb
and
aas
aaa
and
xchg
dec
sub
push
mov
or
push
insb
jae
inc
incl
pop
lods
mov
rorl
cmp
cmp
inc
or
inc
clc
filds
pusha
add
or
jp
cmp
sbb
popa
fwait
pop
shrb
shr
addr16
add
jg
int3
pop
dec
mov
xchg
jbe
outsl
sti
mov
jp
dec
mov
push
pop
mov
pop
add
adc
sti
xlat
sub
jl
pop
loopne
dec
call
icebp
sub
or
fbld
daa
mov
jo
xor
in
in
mov
add
pusha
pop
es
sub
push
scas
push
cmp
pop
mov
dec
out
mov
and
mov
out
mov
or
iret
enter
rcr
aaa
add
movsl
mov
loope
testl
dec
mov
pinsrw
or
mov
inc
stos
pop
mov
xchg
gs
cmp
lods
sbb
das
shll
push
cltd
jle
mov
xorb
sahf
in
les
lds
sbb
cltd
adc
dec
in
jle
lods
fidivrl
jge
sbbl
jnp
ficoms
ret
movsb
sbb
ret
scas
cmp
hlt
xchg
mov
shrb
adc
mov
int
movsl
into
jns
add
lahf
xlat
test
jle
cmp
mov
stc
push
iret
mov
rorl
sbb
inc
mov
int
and
ljmp
jne
int3
jl
in
sbb
adc
cwtl
popa
fnstenv
or
xor
or
mov
shlb
ret
cwtl
enter
xor
bound
mov
scas
mov
ss
xchg
cmp
insb
out
imul
cmp
inc
mov
repz
push
shll
push
cltd
xor
repz
andb
lahf
dec
sti
xor
loop
cmp
push
js
dec
pop
pop
inc
cwtl
or
mov
dec
rcll
add
rcll
js
cwtl
lds
lods
lahf
push
rcr
add
dec
xchg
add
add
lock
sbb
pop
dec
push
dec
fbld
sub
repz
loop
inc
arpl
pop
shlb
xor
push
sub
stos
cmc
dec
stc
cltd
inc
adc
out
adc
xor
sbb
adc
pop
jo
and
jl
test
stc
inc
mull
mov
or
shlb
push
jge
xchg
inc
push
aaa
stc
ss
iret
push
sbb
adc
cld
out
das
fisttpl
xor
mov
push
mov
in
icebp
sub
stos
mov
mov
mov
hlt
pop
xor
aaa
push
add
push
cltd
pop
cmpsl
into
dec
jle
inc
push
ds
sbb
test
inc
das
daa
sti
mov
pop
xchg
sbb
movl
add
pop
scas
jg
jg
pop
push
gs
inc
push
jo
ret
mov
and
adc
pop
ret
jl
mov
dec
in
add
mov
lea
clc
jg
sbb
xor
dec
inc
std
add
mov
pop
jb
mov
add
push
test
aaa
adc
pop
push
xchg
push
add
jbe
test
mov
mov
mov
je
push
loope
sub
sub
mov
xor
sub
das
add
addl
cmc
movsl
popf
lret
add
imul
insl
insb
cmp
jmp
sub
test
repnz
fsubs
dec
jecxz
jg
jl
sarb
aam
loope
mov
lods
out
je
fcmove
rep
jno
xlat
vprotb
cs
adc
mov
pop
ficomps
xchg
add
lods
and
push
lods
mov
or
in
aad
out
lods
and
test
xchg
das
xchg
xor
cmpl
cs
test
fnstenv
xchg
fsts
xchg
cs
sbb
fdivl
outsl
leave
or
jmp
das
push
cld
out
pop
adc
rorb
leave
sbb
int3
cmp
addr16
push
mov
xchg
mov
sub
shlb
inc
inc
dec
in
sbb
js
add
sub
fdivl
sarl
call
mov
pop
outsl
sub
lock
lods
add
aaa
hlt
test
inc
cmovbe
add
testb
in
mov
cmp
dec
dec
push
xchg
push
adc
sbb
in
pop
mov
shll
xchg
xchg
jecxz
push
leave
add
js
mov
inc
outsl
icebp
negb
add
mov
dec
gs
sbb
inc
mov
push
or
dec
imul
fs
insb
jmp
inc
test
dec
pop
mov
sub
inc
dec
or
cmp
sar
xchg
xchg
xchg
xchg
inc
ret
sarb
mov
insl
xor
je
fcomi
shll
or
loop
mov
cli
dec
dec
lds
mov
pop
int3
push
ror
push
inc
push
fwait
pushl
lret
xor
int
push
mov
inc
pop
sbb
lret
cmp
into
popf
fimull
mov
sub
mov
mov
dec
jbe
adc
insl
and
xchg
xchg
pop
xchg
cmp
sub
add
fcoml
mov
enter
imul
mov
outsb
loopne
shrl
mov
xor
sub
jge
sub
in
xor
mov
pop
jle
into
adc
je
fistpll
jns
push
or
push
inc
jns
ja
push
lea
sbb
fidivs
idiv
xchg
adc
pop
xor
push
imul
cmp
xor
add
xchg
pop
mov
je
cmpsl
push
imul
into
xorl
add
cmpsl
inc
js
inc
jne
mov
pop
mov
xchg
inc
scas
ja
push
andb
mov
mov
repz
sbb
fucomip
pop
imul
test
push
add
mov
into
jmp
xchg
jne
pop
lea
shr
and
and
out
jnp
movsl
push
rcrb
xor
pop
ss
push
insb
or
push
lcall
popf
jmp
clc
mov
mov
adc
mov
mov
ljmp
adc
cmp
aaa
inc
aam
rorl
mov
test
and
in
jbe
iret
and
test
dec
in
mov
cmpsb
repnz
out
sbbl
in
pop
and
add
xchg
jno
lahf
inc
loopne
push
push
mov
add
sarl
dec
xchg
leave
add
in
jns
div
push
sbb
ffreep
push
push
jle
cli
scas
xor
les
jle
inc
movsl
push
stos
fcmovb
add
cmc
sbb
mov
sbb
enter
cld
push
mov
test
shrb
adc
mov
aad
xlat
aas
pop
adc
daa
jnp
jge
xor
push
jg
add
mov
ja
movsb
das
adc
pop
outsb
jge
popa
cltd
test
jge
adc
rolb
adc
jae
xor
sbb
aas
or
add
jno
cltd
mov
jecxz
les
nop
cmp
lahf
lods
mov
lock
jno
cmp
iret
std
lds
inc
fidivrs
xchg
out
cld
sbb
cmpb
sti
je
jbe,pt
xor
scas
lock
push
cmpps
in
mov
ss
shr
xchg
in
xchg
gs
cmpsl
idivb
add
push
mov
mov
stos
cld
adc
icebp
pop
cmpsb
jo
lods
movsb
stos
imulb
dec
aas
xorb
call
clc
cmp
ficompl
add
dec
in
mov
cs
mov
push
mov
test
sub
loopne
int
xor
push
mov
xor
pop
in
es
cmp
ja
lods
xchg
stc
jno
adc
fs
subl
adc
lret
pushf
xchg
inc
cmpl
sub
sbb
jae
pop
jne
pop
sbb
mov
push
xor
addl
or
data16
mov
add
rcl
push
pop
lahf
or
enter
aaa
fistpll
int3
bound
pop
jns
ss
and
iret
addr16
test
push
mov
inc
cmp
lcall
push
enter
and
test
lret
mov
iret
sbb
sti
addr16
sub
cmp
fisubrs
xor
pop
and
or
add
out
cmc
cmovs
mov
ret
int3
pop
jnp
scas
and
mov
js
movsl
xchg
dec
ja
xchg
out
movsl
or
shl
addr16
xor
sahf
and
call
xor
and
xchg
cmp
aas
mov
xor
dec
dec
mov
sbb
mov
or
test
cmp
add
xor
pop
cmpsb
out
ret
and
push
add
xor
sbb
pop
pop
pop
pop
jb
mov
imul
push
xchg
jnp
mov
das
enter
aaa
inc
push
push
mov
inc
xchg
xchg
cwtl
xor
je
insb
clc
inc
mov
add
hlt
and
inc
push
mov
call
dec
iret
pop
mov
sarl
sub
mov
cmp
daa
push
cltd
inc
in
mov
aas
mov
jl
fcmovu
std
and
jbe
cld
sub
sbb
pop
pop
add
and
sub
fists
cld
mov
ret
mov
lcall
hlt
les
repnz
insl
aam
aam
dec
add
pusha
das
adc
loope
aaa
add
cli
mov
out
inc
popa
in
pop
hlt
imul
imul
repnz
test
adc
repnz
ret
cs
cmpl
test
fidivrl
mov
or
stos
sbb
in
xchg
fs
fxch
cld
aaa
jns
pop
ljmp
ljmp
cmp
test
je
mov
nop
movsb
ds
dec
push
lahf
sub
cmp
hlt
add
int
xor
pop
lret
xchg
xorl
scas
lret
movsb
sarb
test
pop
pusha
insb
push
cmp
in
mov
subl
xchg
push
push
mov
mov
mov
sbb
adc
stos
push
xchg
pop
cld
pop
jg
pushf
nop
out
jns
sub
jmp
lds
mov
dec
insl
out
mov
mov
fsubs
xchg
cltd
js
add
fbstp
adc
xchg
xchg
in
loopne
jmp
test
and
mov
in
jb
pop
loopne
dec
rcr
sbb
xor
std
adc
push
andl
test
ss
pop
mov
test
stc
imul
test
sahf
je
xchg
stc
imul
dec
mov
jb
mov
stos
mov
test
and
ficoml
lret
sbb
mov
mov
pop
fildl
pop
gs
dec
insb
lahf
es
xchg
shll
cli
pushf
and
fs
in
fdivl
pop
rcrb
mov
cli
push
insl
adc
lods
xor
inc
pop
fidivl
xor
dec
pop
jmp
es
repnz
insl
mov
inc
and
cmpsb
inc
mov
jle
inc
daa
scas
std
ja
mov
or
adcl
dec
mov
in
mov
push
inc
fs
add
insl
jnp
or
mov
and
adc
lret
stc
orb
out
movsl
inc
xor
imul
rcr
dec
cltd
mov
ret
xor
add
xlat
into
stos
xlat
add
test
xor
inc
mov
mov
std
aas
and
daa
push
out
xor
mov
je
mov
pop
in
mov
or
mov
shl
mov
jns
sub
dec
sub
xchg
mov
les
into
pusha
mov
adc
or
rol
dec
push
shlb
js
fdivrs
cmp
jb
sub
sub
nop
dec
mov
dec
sbb
sbb
xor
inc
jb
pop
jg
cmp
stos
or
mov
fsts
cwtl
imul
imul
nop
test
dec
cwtl
push
cmc
mov
imul
xchg
jne
insb
push
sub
lahf
push
xchg
mov
push
mov
pop
xchg
mov
cli
fwait
adc
sahf
js
and
adc
sub
xor
cmpsb
push
mov
in
jge
or
rclb
or
rcll
scas
mov
or
test
cli
cmp
and
inc
test
imul
sahf
mov
clc
push
push
clc
dec
push
push
in
outsl
pushf
mov
adc
dec
clc
cwtl
sub
and
in
les
fdivs
and
inc
inc
stc
push
mov
push
and
test
cmp
into
inc
sub
push
ss
pop
jno
cmp
xchg
pop
push
push
popf
xor
bnd
outsl
sar
mov
lock
js
rcrb
xchg
jg
dec
inc
fldenv
jg
and
sub
jbe
lock
mov
and
pop
xrelease
enter
dec
loopne
icebp
jb
pop
push
inc
push
pop
cltd
insl
pusha
jnp
shrl
arpl
sbb
and
jns
sub
xor
push
in
lahf
fimuls
outsb
inc
inc
mov
sbb
push
out
or
outsl
mov
adc
shlb
hlt
pop
scas
pop
shll
mov
in
insb
sahf
pop
shr
movhps
and
inc
jnp
orl
mov
jns
inc
pop
sahf
push
sbb
push
in
pop
jl
es
addr16
fnsave
add
lret
fistps
adc
dec
mov
scas
xchg
mov
ljmp
scas
and
pop
movsb
shll
fisubl
cmp
sbb
add
pop
shlb
push
jmp
mov
inc
lock
sarl
xor
pop
pop
les
jo
pop
jae
mov
cmc
sub
jns
or
push
sub
jg
daa
jge
dec
push
or
mov
int
cmp
ror
arpl
or
out
push
mov
fsts
mov
aas
cmp
add
pop
mov
adc
in
stos
xor
add
test
scas
inc
mov
and
adc
and
pop
jle
jae
mov
jbe
aaa
call
test
mov
cltd
push
imul
adc
ja
cwtl
loope
mov
in
add
rcr
and
out
enter
or
or
xchg
arpl
or
pop
inc
cltd
into
adc
in
pop
mov
jno
jo
mov
rcll
shl
xor
sub
adc
in
jecxz
gs
xor
fsts
push
adcb
cmp
imul
pop
sub
in
or
add
add
jbe
sub
pop
adc
cmpsb
xor
in
jmp
xor
gs
cmp
sub
inc
or
jnp
push
jno
ja
mov
add
adc
add
pop
xor
or
sub
push
stos
test
push
mov
sbb
lods
inc
jb
ret
xchg
ds
jmp
in
bound
setp
add
push
push
sub
test
xchg
das
dec
mov
ss
push
popa
loop
mov
mov
das
fisubrs
dec
lock
jnp
cltd
pop
adc
aam
push
rcr
pop
aaa
leave
cmp
in
xor
push
addr16
pop
sbb
inc
jnp
pop
xor
mov
ljmp
icebp
pop
std
out
or
in
jns
xlat
jne
das
xchg
mov
ja
mov
test
xchg
cltd
movsl
int3
cmp
or
adc
mov
ja
stos
sbb
movsl
xchg
test
or
fnstenv
cmc
xor
scas
or
imulb
cmpsb
push
fs
adc
mov
fbld
mov
lcall
lcall
inc
fisttpl
cmpsl
pop
sbb
xchg
cmp
lahf
lock
jnp
movsl
pop
mov
arpl
ret
pop
xor
pop
mov
sbb
in
sbb
enter
nop
sahf
push
test
movhps
and
sbb
mov
addr16
dec
shlb
ds
inc
shrb
fucomi
fxch
pushf
adc
xchg
sub
cltd
push
neg
imul
mov
loope
or
pop
ja
test
and
mov
adc
fstps
sub
mov
lds
sbb
cmpsb
aas
jae
xchg
cwtl
shll
nop
inc
inc
dec
out
xchg
gs
test
mov
hlt
mov
push
sbbl
mov
int
sub
into
xlat
xchg
lahf
repnz
rcl
adc
xor
lods
das
adc
push
scas
mov
xchg
leave
pushf
jne
mov
xchg
add
fcmovnbe
cs
dec
or
or
sbb
ffree
and
repz
cmp
test
sub
repz
mov
aas
mov
add
sub
lods
push
and
leave
mov
mov
push
scas
mov
cwtl
jb
and
insb
fldenv
push
pop
xchg
adc
jnp
ljmp
jae
movsl
loope
hlt
sbb
les
lret
pop
rsm
and
lret
xchg
mov
adc
inc
lret
loop
adc
jae
push
int3
mov
push
mov
test
push
cwtl
into
sti
pop
testb
pop
pop
sub
push
xor
mov
xchg
lahf
subl
add
jo
mov
mov
call
fs
add
cmp
pop
dec
mov
cli
add
insb
sub
push
sbb
ret
jns
and
aas
lcall
adc
jl
scas
shl
sub
jl
sub
ror
inc
enter
xor
xchg
rcrb
or
fidivrl
mov
dec
xor
xchg
fsubl
jns
imul
push
dec
mov
or
out
jns
cmp
pop
scas
pop
popf
lahf
sbb
and
test
dec
scas
out
sbb
sbb
or
fisttpl
mov
adc
or
sub
mov
jg
pop
jecxz
scas
addb
or
insb
pop
pop
vpminub
and
ret
negl
jb
out
or
add
mov
sbb
inc
leave
xchg
mov
call
testb
imul
mov
pop
test
cmp
jbe
mov
push
arpl
loop
push
ss
lret
cltd
push
add
imul
sub
jbe
jae
jge
jge
decb
dec
jns
inc
movsb
or
add
push
cmp
lret
int3
ret
fcoms
mov
fsubrs
pusha
lds
sbb
jo
dec
je
inc
or
add
movsl
fmuls
sahf
mov
sub
dec
pop
imul
mov
and
push
cs
sbb
leave
jp
faddl
pop
adc
fiaddl
movsl
ret
sbb
addr16
repz
stc
mov
xor
add
jge
inc
add
push
lret
mov
lret
inc
loop
in
cmc
and
aam
in
or
pushf
jmp
or
pop
test
jge
or
add
pushl
into
mov
pop
cmc
inc
pop
mov
outsb
xchg
pusha
pop
sub
stos
cmp
jle
sbb
xlat
nop
adc
or
jbe
fs
hlt
shll
lea
push
sti
xchg
insl
out
adc
push
cmpsl
cltd
mov
orl
lea
inc
lods
rclb
jno
sub
outsl
and
push
push
into
aad
mov
mov
jb,pn
xchg
cmp
or
xor
adc
aad
clc
push
or
enter
negl
jmp
pop
jns
mov
and
jns
lods
push
pop
sub
icebp
jo
add
xor
iret
mov
sbbb
push
sub
ds
mov
lods
lods
arpl
push
mov
push
call
jp
pop
cmp
das
cmp
jge
js
inc
lock
cmc
rorl
jae
test
fcmovbe
mov
sbb
dec
pop
sub
pop
jb
popa
dec
xchg
les
jge
pop
dec
ljmp
data16
test
jns
mov
call
mov
ficomps
stos
xor
xorl
insl
insb
testl
dec
pushf
aad
inc
loopne
mov
js
int3
cs
test
leave
or
adc
addr16
stc
pop
mov
aam
add
mov
mov
lods
loope
loope
cmpsb
scas
xchg
iret
mov
mov
mov
scas
dec
or
rol
loop
les
jmp
jns
popa
fbld
ret
lret
cmp
sub
pop
lss
jmp
and
out
in
cs
xor
inc
les
sbb
jg
cld
lock
pop
inc
mov
xchg
push
int3
imul
imul
cwtl
movl
aas
mov
into
out
inc
pop
push
inc
and
inc
rorl
nop
pop
test
or
sti
out
dec
pop
je
test
rol
sarb
test
or
mov
push
idivb
ret
or
in
ss
and
and
push
mov
xchg
popf
aaa
mov
rcll
push
inc
jmp
mov
mov
push
cmc
push
out
loope
in
dec
or
or
js
out
ficomps
xchg
movsl
nop
rcrb
int
iret
inc
push
and
mov
into
mov
dec
jne
jbe
iret
adc
bound
and
adc
das
or
leave
aas
pop
sub
cmp
push
or
mov
sbb
push
rolb
shl
jmp
lret
and
xor
xor
adc
lds
std
push
rcr
insb
jb
out
out
arpl
adc
or
jno
adc
xchg
lock
mov
mov
mov
mov
mov
cli
mov
cmp
fs
mov
fwait
popf
xor
jb
aas
xor
mov
jl
addr16
insb
ljmp
xchg
inc
add
test
in
mov
jg
adc
shlb
mov
xor
mov
cmp
scas
fcmovu
jb
dec
dec
cmp
jne
cmp
nop
mov
pop
in
or
movsb
fwait
or
fisubrs
push
adc
inc
add
inc
dec
pop
add
sbb
test
dec
or
mov
push
sub
testb
jmp
and
xchg
hlt
push
fstps
aam
mov
in
jbe
fucomp
insl
cwtl
inc
cmc
lds
pop
xchg
inc
arpl
push
mov
jge,pt
jecxz
test
clc
sti
cmp
decb
lods
ret
stc
sti
test
sbb
movsl
out
stos
inc
mov
jmp
sub
lds
cmpsl
call
adc
imul
dec
mov
pop
rcrb
sub
cli
pop
int
mov
popf
pop
xor
jmp
out
inc
xchg
xor
loop
int3
mov
or
dec
stc
ret
test
adc
xor
pop
xor
outsb
and
icebp
cld
add
inc
mov
bound
push
push
fildl
or
mov
or
inc
pop
in
scas
mov
jle
pop
xchg
jae
mov
mov
stos
mov
fwait
adc
lods
cmpsb
sub
sti
adc
sti
fcomps
clc
pop
shll
inc
sbb
arpl
cltd
and
sub
lods
jle
pop
xchg
pop
push
mov
add
jne
jle
mov
sub
pop
mov
pop
cmc
mov
aam
orl
test
sub
mov
sbb
or
rcll
xchg
jae
sub
cmp
push
int3
xchg
jge
hlt
cmp
push
mov
pop
push
pop
rol
mov
push
cmp
add
add
pop
jmp
xchg
rolb
inc
fistps
sub
imul
in
cmpsb
jge
pop
int3
jmp
fucom
sbb
and
jns
sbb
iret
pushf
and
xlat
andb
fmull
insl
in
jb
out
or
cs
and
sbb
aad
loopne
add
insb
xor
cwtl
repz
pop
add
pop
pop
icebp
outsb
jno
xchg
add
aam
popl
out
sbb
push
mov
adc
mov
push
pusha
push
outsl
inc
adc
call
leave
stos
lret
hlt
xor
divb
mov
hlt
sbb
movsl
adc
mov
test
push
movsl
jl
iret
repnz
fldl
or
mov
in
pop
fsubl
cmpsl
popa
jmp
inc
out
mov
loop
dec
sbb
clc
xor
rcrl
enter
enter
cmp
or
adc
add
mov
lret
fstpt
xor
stc
scas
lds
addr16
mov
lods
das
xor
jp
clc
roll
les
cwtl
pop
pop
cltd
xor
jns
out
mov
cmovle
cmp
movsl
mov
mov
jnp
ret
out
in
mov
and
push
les
mov
daa
clc
loop
stos
add
dec
sub
clc
test
notb
das
arpl
push
adc
push
xor
gs
cmp
pop
sub
andb
lret
lret
inc
in
repnz
rolb
mov
xor
sub
lret
popf
call
cmp
mov
arpl
mov
dec
stc
mov
mov
pop
in
scas
insb
inc
shl
xchg
ret
mov
andl
pop
mov
adc
and
mov
lea
fs
sbb
cmc
leave
cmp
aas
subb
sbb
mov
xor
lahf
xadd
jae
cli
dec
pop
pop
lahf
jne
leave
lods
push
lret
lea
add
push
jno
and
mov
mov
loopne
inc
mov
adc
or
pusha
ret
imul
hlt
addr16
cld
std
and
push
pop
fcmovnu
adc
cmp
dec
add
ljmp
inc
in
in
fcomp
jo
sub
ja
dec
jb
fs
mov
pop
int
fidivrl
push
loop
mov
pusha
mov
movsl
stos
out
cmp
int
lret
xchg
fildl
cmpsb
dec
inc
call
ret
dec
dec
test
or
ljmp
stos
xchg
imulb
mov
mov
mov
icebp
inc
push
pop
ja
incb
insl
fsubrl
push
sbb
push
jp
mov
add
test
push
and
and
mov
xlat
inc
sbb
mov
stos
out
push
scas
mov
lahf
xchg
or
aas
cmpsb
stc
lock
jno
enter
dec
imul
xor
stos
jo
xchg
fstps
jne,pt
pop
fwait
test
outsl
cmp
leave
pop
cltd
sub
and
sti
lahf
add
cmc
pop
test
mov
pop
mov
push
les
cmc
ficoms
lret
adc
jns
ljmp
maxps
mov
sbb
push
mov
rcrl
jmp
lds
popf
das
std
fildl
in
or
mov
ret
mov
pop
lahf
loopne
dec
jg
and
lods
mov
push
cmpsb
leave
mov
bound
divb
scas
inc
mov
or
mov
movl
mov
out
rcrb
gs
xor
js
leavew
pop
popf
stos
xor
jo
ret
sub
mov
mov
aam
and
add
pop
cmp
sbbl
xchg
aam
js
sbb
lea
mov
or
push
out
rorl
and
xchg
mov
shll
sarl
les
jns
sub
adc
movsb
rcll
sbb
or
add
cmpsl
in
xchg
mov
jl
lock
ret
or
enter
mov
adc
jp
dec
add
lock
jbe
mov
roll
mov
mov
jp
stos
xchg
lret
ficomps
push
stos
inc
sub
stos
ret
and
dec
mov
lcall
cmpsb
mov
jp
das
jp
mov
sub
test
mov
mov
loopne
cld
or
or
push
idiv
cwtl
push
xchg
dec
push
lea
pop
jno
hlt
adc
testl
gs
lods
cmpsb
adc
jge
push
aam
mov
and
fcmovnu
call
mov
sub
std
xchg
cltd
jo
jnp
in
xorb
xlat
add
rorb
or
sar
mov
in
add
xor
dec
js
out
pop
jle
add
aad
test
cmp
xchg
call
mov
xor
sbb
xchg
mov
dec
bt
cmpsl
out
outsb
xchg
or
xchg
dec
nopl
pop
imul
fmull
push
jmp
out
outsb
ja
sbb
wbinvd
sarl
cltd
inc
or
or
bound
test
cmpsb
mov
gs
xchg
out
mov
aas
and
push
into
inc
outsl
insb
jb
in
insl
xor
cltd
jg
xchg
rcll
add
adc
popf
push
cmc
dec
or
movsb
xor
mov
popa
std
mov
cmp
fadds
arpl
imul
fs
mov
mov
mov
inc
dec
outsb
sti
in
xchg
repz
fucomp
mov
repnz
mov
xor
shll
push
mov
movsb
bound
cwtl
cmpb
mov
mov
lds
mov
mov
data16
push
xchg
add
or
inc
es
aad
adcb
neg
jg
dec
jne
scas
dec
mov
out
fbld
dec
add
enter
out
pop
jbe
mov
lods
mov
inc
dec
adc
int3
jnp
xchg
repz
push
inc
push
movsl
ret
lds
pusha
and
jle
inc
clc
xchg
pcmpeqb
outsl
clc
add
sbb
push
ljmp
repz
cmpsl
pop
or
push
outsb
cmp
jb
iret
mov
push
sti
sbb
scas
xchg
xor
les
jle
lods
je
sbb
jmp
outsl
cli
sbb
and
notb
lcall
insl
movl
scas
mov
push
and
addr16
and
jae
mov
es
fmuls
mov
or
mov
sbb
jb
mov
pop
jae
pop
add
cmc
movsl
push
add
inc
adc
in
push
push
in
jo
pop
dec
add
rol
push
repz
in
mov
les
xor
mov
iret
out
popa
jge
adc
jbe
mov
flds
lea
adcb
push
pop
sbb
jl
movsl
add
mov
test
test
addl
sbb
adc
jae
add
cld
mov
xchg
mov
fwait
mull
inc
lods
push
out
mov
and
mov
sub
ret
stos
outsl
adc
icebp
sub
das
fwait
push
mov
pop
or
shlb
orl
sbb
adcb
out
mov
ret
adc
lret
xlat
pop
and
cltd
bound
mov
lock
push
jmp
mov
imul
push
lret
push
test
add
mov
push
ljmp
jb
xor
xor
lret
aam
sbb
lcall
and
and
mov
jge
xor
fldl
cmpsl
shld
mov
iret
mov
push
xor
pop
dec
mov
inc
jns
iret
and
dec
cs
mov
and
push
pop
icebp
mov
mov
cmp
sub
fisttps
add
iret
in
cmp
pop
dec
mov
push
mov
or
nop
popf
out
cli
and
jge
aam
out
pushf
mov
inc
xlat
xlat
dec
test
jbe
out
stc
push
xlat
out
mov
xchg
and
dec
ret
add
inc
dec
dec
inc
jns
sahf
push
xor
jp
pop
pushf
leave
fiaddl
push
int3
xchg
pop
cmp
sbb
sbb
out
dec
pop
xor
push
neg
ljmp
clc
pop
arpl
jb
inc
cs
or
cmp
xor
fisubl
pop
out
ret
mov
mov
out
stos
push
push
out
add
push
add
push
add
mov
inc
test
in
fnsave
sbb
int3
push
dec
push
negl
loope
mov
ret
mov
jle
stos
cmc
mov
xlat
inc
jo
inc
add
fimull
and
idivl
in
pop
or
pop
shrb
in
popa
mov
xchg
int
push
add
sub
cmp
div
lds
cltd
or
aaa
loope,pt
pop
dec
pop
lods
cltd
push
pushf
lock
jae
ret
int3
inc
adc
je
iret
inc
or
jo
xor
adc
adc
push
dec
in
sbb
sub
dec
and
ja
in
imul
and
dec
repnz
and
dec
xchg
dec
notb
shrl
test
xor
mov
divb
push
jecxz
mov
push
mov
mov
scas
repnz
pop
in
out
cld
ss
push
mov
mov
mov
inc
pusha
cmp
jmp
out
test
cmc
sub
cmp
imul
lods
push
jg
pop
movsb
lock
enter
fiaddl
and
repz
or
jg
fadd
dec
int
mov
push
inc
movsl
hlt
imul
aam
mov
sub
dec
scas
sub
cmp
filds
popa
lock
shlb
jae
je
sbb
adc
sbbl
or
xchg
leave
stos
inc
js
movsb
dec
dec
fiaddl
in
pop
cmovnp
xchg
cltd
lock
mov
and
jg
xchg
mov
movzbl
ss
call
cwtl
sbb
cmp
ret
add
scas
sub
xchg
dec
mov
fisubrs
jmp
sti
xchg
xchg
jg
inc
cld
xchg
pusha
outsb
lret
cltd
sbb
jo
mov
adc
xchg
mov
popf
cwtl
pop
nop
sbb
jo
pop
in
dec
jmp
ret
fnstcw
les
fwait
inc
mov
out
das
sbb
sarl
push
mov
cmp
fmul
bound
bound
xchg
into
jecxz
sub
or
gs
scas
hlt
dec
lods
ja
popl
sub
cltd
sub
cmpsl
sub
test
imul
mov
lods
jmp
lods
rcrb
push
inc
cmp
pop
movsb
dec
dec
ret
mov
sub
std
test
inc
andl
xor
xor
insb
mov
jb
push
popa
popf
push
notb
sbb
sub
mov
jmp
adc
outsl
popf
mov
jbe
sbb
je
adc
das
and
fs
sbb
jnp
adc
sub
in
les
ficoml
imul
inc
outsl
aam
push
aaa
dec
xchg
add
stos
sahf
ret
or
enter
pusha
addl
les
cli
cmp
inc
loope
adc
xchg
inc
imul
add
jae
dec
or
push
add
cltd
inc
inc
shrl
xor
cmp
push
in
daa
push
push
pop
in
out
in
push
push
scas
stos
and
fdivs
repnz
or
push
ljmp
inc
out
pop
mov
inc
aas
nop
aam
mov
pop
mov
or
stos
je
and
add
cmp
test
mul
mov
nop
ds
mov
jecxz
ds
cmp
lret
mov
dec
inc
xor
stos
xor
call
cmp
std
out
mov
lcall
xchg
dec
or
shlb
fnstenv
adc
mov
dec
jg
push
mov
cld
sbb
ror
cld
daa
or
sti
ljmp
adc
and
pop
stos
mov
jecxz
js
adc
cmp
add
nop
int3
cwtl
aam
mov
xor
sahf
inc
cmpsl
loop
mov
xor
pop
lcall
sbb
push
xchg
in
and
add
cmpsb
mov
jno
ret
movsb
add
jle
addr16
scas
lods
mov
sub
adc
pop
mov
push
push
in
cwtl
or
push
jb
mov
inc
decl
adc
insb
sbbb
leave
xlat
repz
xchg
scas
cld
cmc
stos
inc
sbb
loopne,pn
cmp
push
sahf
scas
add
insl
lret
jle
test
adc
test
ja
and
dec
adc
pushf
jle
inc
pop
gs
scas
dec
jg
xor
test
pop
mov
shll
push
fs
daa
and
in
lahf
in
scas
mov
sbb
sub
adcl
cs
int3
mov
pusha
add
sbb
lods
mov
in
aad
aaa
loop
popf
xchg
dec
in
and
sbb
xchg
mov
in
mov
clc
xor
adc
pop
lcall
fadd
jnp
xor
pusha
pop
jne
or
pop
fwait
inc
pushf
cmc
fs
hlt
and
push
stos
adc
dec
sbb
pop
arpl
stos
lods
cmp
pop
aas
cltd
mov
out
fstpl
cmpsl
and
push
push
js
jne
mov
mov
lds
inc
lods
xchg
jnp
sahf
sahf
dec
and
dec
leave
mov
aas
jae
push
repnz
push
mov
pop
aas
lret
jae
sbb
ja
push
sub
rcrl
mov
mov
adc
dec
push
pushl
ret
repz
xor
mov
sub
test
xchg
mov
adc
fistl
adc
notb
fildl
ficomps
lds
imul
cs
fcom
jle
lcall
leave
les
ljmp
lcall
in
iret
inc
mov
clc
out
sub
js
push
stc
push
jmp
push
push
inc
scas
loop
mov
ret
xchg
mov
ret
xchg
adc
testl
movsl
fwait
cs
outsb
adc
dec
in
cmp
jle
mov
xor
xchg
jae
jbe
push
adc
gs
mov
out
out
mov
jo
das
sbb
ret
cmp
xor
mov
pop
outsb
mov
test
pop
movsl
les
loopne
push
addr16
outsl
and
xchg
mov
sbbl
jno
jb
cld
incl
xchg
mov
push
mov
insb
sbb
sbb
imul
dec
mov
and
push
sbbl
mov
mov
or
mov
ljmp
out
add
adc
add
mov
or
rep
sbb
pushf
jb
scas
ret
rolb
mov
or
insb
outsl
inc
xchg
mov
and
sub
into
sub
or
xchg
call
inc
loop
jl
and
cwtl
jge
xchg
and
repz
dec
cmc
fs
aam
jo
rcrb
bound
or
fxch
push
cmc
mov
lock
fcompl
addr16
daa
shll
adc
and
jmp
jnp
loope
mov
adc
cmpsb
shll
lds
in
and
jne
add
sub
aad
clc
call
jno,pt
fxam
jns
mov
test
push
add
mov
pop
js
rclb
dec
mov
xor
mov
inc
xor
jne
sbb
lock
addr16
repz
adc
test
push
xor
fsubrl
enter
add
cmp
push
and
mov
cld
push
mov
rol
dec
iret
into
add
andl
push
mov
push
adc
hlt
jle
std
scas
lcall
xchg
jbe
dec
data16
in
subb
cli
and
cwtl
xchg
lods
or
shl
push
cmp
mov
jl
fcomps
bound
pop
into
out
pop
xchg
jecxz
loope
les
arpl
dec
nop
jge
or
dec
add
add
jo
and
stc
imul
inc
cmp
adc
add
mov
jl
incb
pushf
stos
xchg
insl
in
addb
repz
fdiv
leave
movl
lock
push
adc
add
cmp
inc
jne
push
cld
dec
and
mov
mov
fidivl
rep
dec
pop
and
sbb
fdivl
adcb
and
cmp
push
imul
rorl
repz
jecxz
mov
aaa
inc
scas
into
push
shrb
pop
mov
push
dec
scas
xchg
inc
xchg
repz
mov
and
push
xchg
popf
xor
inc
out
add
js
or
ret
push
mov
icebp
pop
and
jge
out
in
enter
pop
sub
xor
add
sbb
lret
add
adc
test
or
pop
push
sub
stos
jle
or
xchg
enter
shrb
or
hlt
push
movsb
mov
xchg
sub
sub
lret
cld
cmpsl
push
imul
ja
loop
push
sbb
andb
aam
sbb
ja
call
xor
sbb
mov
xchg
es
sub
je
push
pop
in
lret
dec
mov
pop
mov
pop
lods
insl
inc
and
push
movsb
test
loopne
mov
jg
loope
out
xor
arpl
or
insb
push
mov
les
mov
lods
lods
push
fdivrl
sub
lock
fnstenv
daa
pop
mov
lock
push
bound
mov
mov
pop
rolb
push
js
xchg
lock
push
jae
lret
rcrl
jne
xor
dec
jne
add
dec
mov
shrb
jmp
mov
sub
outsl
mov
sub
mov
dec
movsb
jnp
cmp
lahf
xor
push
lods
idiv
pop
lods
xor
pop
data16
addr16
mov
aad
aam
ja
cmp
add
data16
sub
fcoml
fldl
and
inc
rol
ss
and
or
mov
and
cltd
mov
mov
mov
fsts
jne
js
lods
movsl
push
pop
jge
jl
popa
repz
pusha
scas
pop
aam
aad
xchg
push
in
bound
rorb
mov
add
pop
sub
sbb
in
pop
ds
loop
ret
cmpsb
push
or
and
aad
inc
sti
pop
ret
mov
pop
cwtl
lret
stc
lret
stc
std
shl
dec
sti
icebp
stos
push
fadds
xor
out
jmp
fisubs
mov
call
jne
out
lods
adc
enter
dec
sbb
push
rclb
pop
mov
sbb
mov
in
in
sbb
movsb
jns
or
mov
test
cmp
cld
push
inc
adc
pop
int
iret
adc
mov
int
popf
adc
push
mov
add
push
out
out
push
cwtl
stc
and
dec
jnp
jge
insl
cmp
sti
jge
sbb
mov
mov
push
and
pop
push
or
lcall
lds
mov
pop
mov
and
push
in
lcall
push
and
xlat
pop
dec
mov
jge
cltd
shlb
rcl
jb
mov
mov
lret
sbb
dec
adc
mov
loopne
add
sub
cld
fwait
test
sub
jb
adcl
add
movsl
push
mov
xor
or
mov
adc
or
js
cmpsb
mov
dec
fcompl
or
mov
aas
jl
cmp
adc
pop
mov
and
lcall
dec
inc
jns
cmp
sbb
mov
scas
enter
dec
out
lods
nop
add
sub
es
sub
mov
movsl
sub
scas
out
push
mov
jae
xchg
test
xchg
adc
aad
cmp
test
ljmp
sahf
or
cwtl
out
inc
push
add
sub
out
mov
mov
leave
push
mov
aas
imul
lret
mov
jns
jnp
in
sahf
mov
push
loope
adc
aas
scas
push
or
cmp
shrl
mull
loop
push
cmp
mov
inc
cltd
movsl
int3
and
inc
mov
lds
out
push
and
push
mov
mov
ss
fsubrl
push
test
sbb
xor
xchg
adc
pop
mov
orb
rcll
jp
repz
pop
out
push
imul
xchg
mov
push
inc
or
add
or
test
dec
mov
das
inc
jnp
add
gs
aas
inc
repz
daa
jl
btr
jmp
xchg
sub
xchg
ret
arpl
sbb
ss
sub
hlt
jno
lahf
mov
int
aas
cmp
bound
pushf
testb
sub
inc
xchg
leave
loopne
dec
pop
mov
lock
cmc
jge
sub
inc
lahf
mov
fsubrl
mov
mov
add
push
movsb
dec
call
fwait
lods
cmp
xor
dec
in
inc
xor
or
in
cmp
pop
stos
hlt
mov
or
mov
jecxz
push
mov
or
push
cmp
data16
std
addr16
mov
out
ljmp
test
loop
lea
arpl
cmpsl
push
pop
jmp
sti
sahf
mov
mov
inc
jecxz
mov
mov
lret
inc
int3
cmpsb
test
jecxz
fsubs
lds
xor
sti
test
dec
outsl
inc
inc
xchg
xor
sbb
dec
lcall
and
jmp
out
inc
hlt
popf
rorb
ret
inc
out
pusha
or
dec
mov
aam
cwtl
xor
fstps
cmp
inc
cmp
mov
jge
movsl
pop
push
mov
adc
inc
lahf
jns
sar
add
sub
sbb
divb
adc
mov
aas
mov
add
pusha
div
mov
ds
mov
pop
mov
push
lcall
cmpsl
inc
push
push
in
lea
cmp
std
push
pop
call
stos
mov
fisubs
mov
sbb
push
xchg
ret
ds
aaa
xchg
aas
dec
jge
dec
adc
pop
jl
sbb
out
jnp
pop
addb
adc
scas
dec
dec
ss
outsl
inc
jae
aad
pop
enter
cmp
and
push
push
push
idivl
dec
lds
adc
jns
mov
mov
xchg
inc
test
xor
or
or
cmp
jmp
cltd
ret
pop
xchg
fsubrs
cmp
fdivrs
push
cli
or
je
sti
scas
inc
rep
and
mov
fiadds
adc
xchg
sbb
aaa
xor
stos
xchg
lret
xor
and
imul
imulb
pop
test
sub
mov
jg
mov
fwait
jg
scas
es
mov
push
push
sub
xchg
add
aam
pop
hlt
mov
add
dec
out
push
arpl
mov
inc
dec
mov
or
dec
or
mov
nop
and
mov
pop
test
sbb
pop
jl
jno
or
xor
js
jns
aaa
cld
in
add
inc
and
scas
fdivrl
sbb
lcall
out
pop
lods
testl
sbb
arpl
xchg
inc
ds
in
insl
ds
push
inc
test
testl
test
mov
jecxz
popf
es
stos
cmp
mov
shlb
push
in
add
lret
xor
dec
hlt
and
sahf
push
mov
jge
clc
repnz
in
pop
push
cmp
pop
js
icebp
std
inc
lds
and
lret
addb
aad
jns
lcall
bnd
int
sti
jge
std
add
mov
mov
into
cmpsl
xor
scas
es
xchg
shl
jae
andb
sbb
ljmp
icebp
dec
int
dec
push
push
xchg
cmp
dec
xchg
lret
imul
sbb
in
push
jo
dec
nop
inc
sub
mov
adc
xor
cmpl
sbb
popa
pop
in
pushf
cmp
cmpsb
dec
push
ss
push
cmp
or
mov
adc
xchg
sub
mov
inc
cmpl
inc
test
xor
inc
popf
and
pcmpeqw
test
mov
mov
push
adc
push
mov
mov
mov
add
adcl
xchg
test
jmp
xor
mov
mov
jecxz
adc
test
inc
pop
jne
xlat
add
ficoml
or
jb
scas
or
out
sub
dec
lods
outsl
mov
in
sbb
arpl
rorl
aam
mov
fmuls
test
outsb
push
andl
ret
addl
lahf
fwait
mov
rol
jns
test
mov
fildl
jae
sub
int3
adc
dec
or
mov
jg
mov
adc
and
and
jg
mov
cmp
and
push
cmp
mov
push
mov
inc
test
aaa
mov
ljmp
es
add
hlt
mov
xchg
sbb
mov
inc
enter
es
sub
dec
test
cmp
mov
decl
stos
repnz
sub
xor
pop
push
into
push
push
rorb
rorb
or
fisttpll
dec
mov
sub
sti
add
and
mov
pop
inc
loope
inc
mov
mov
mov
and
sub
bound
frstor
ss
cmp
popf
dec
imul
xlat
lret
leave
or
and
out
xor
pop
scas
xor
mov
mov
cmp
jle
andb
and
mov
sbb
inc
jnp
xor
rcrl
cmpl
jmp
xlat
inc
out
ljmp
cmp
jns
sub
cmpsl
pop
jp
jbe
xchg
std
mov
ret
jns
mov
int
xor
add
decb
insb
mov
iret
in
cltd
cmp
mov
dec
or
fcompl
test
mov
mov
pop
sub
pop
loop
sub
lret
or
mov
jns
aam
out
xchg
jns
rcl
cmc
lods
cmp
or
jle
mov
lret
inc
in
nop
mov
insl
and
cmpsb
sub
sbb
in
adc
das
repz
jp
les
lret
xor
fldcw
fisubl
xor
rcrb
mov
mov
test
dec
hlt
jp
cmc
or
je
lock
outsl
and
cmp
jg
lods
dec
imul
cs
cmp
fisubrs
arpl
xor
xchg
or
sub
daa
pop
pop
push
cwtl
mov
jbe
popf
inc
rclb
xor
aad
and
int
sbb
arpl
push
fdiv
dec
call
mov
xchg
cs
sbb
mov
rclb
and
ja
inc
and
not
daa
inc
shrl
sub
mov
mov
sub
jp
mov
ja
mov
sub
cli
dec
xorl
inc
mov
cmpsl
cwtl
scas
in
sti
or
sahf
int3
adc
cli
lock
arpl
inc
popf
cmp
mov
subb
xchg
dec
movsb
push
repnz
and
int3
adc
test
scas
adc
rclb
cmc
xchg
pop
test
adc
shll
ds
xor
rcrb
subb
ljmp
push
scas
daa
mov
push
push
xor
lret
fisubrl
push
cmp
or
insb
lock
jns
cwtl
pusha
adc
add
fsubs
into
adc
test
xchg
pop
dec
mov
inc
loope
cmp
mov
sbb
adc
repnz
dec
mov
pop
mov
pop
cmp
test
mov
or
inc
mov
fwait
mov
aas
repz
cli
icebp
sbb
add
stos
rcll
loopne
adc
jmp
rcll
and
xor
inc
mov
aam
lahf
push
in
pause
cmp
dec
push
fstps
xchg
popa
aaa
cmp
mov
adc
jmp
mov
int3
xchg
mov
outsl
pop
inc
sub
fisubl
mov
das
rcrb
mov
inc
jnp
fwait
jno
popf
rolb
xchg
xor
jne
loope
in
lret
mov
cmpsl
jle
mov
pop
rorl
adc
jne
adc
mov
adc
arpl
inc
or
dec
push
shlb
mov
pop
in
aam
mov
inc
pop
loop
icebp
sub
push
mov
fwait
adc
pop
repnz
data16
lcall
mov
aad
mov
in
xor
adc
or
or
mov
lock
adc
xchg
mov
je
stc
push
loopne
test
cld
stc
sbb
scas
test
jp
cld
jecxz
adc
push
cmp
or
xchg
imul
fistps
sti
test
icebp
movsb
fiadds
lea
mov
cld
xchg
or
push
mov
pushf
push
sti
rcll
dec
stc
cltd
adcb
sahf
sbb
sahf
stc
pop
fsts
add
aas
outsl
xchg
arpl
dec
jbe
mov
xchg
scas
cmp
lock
push
or
insl
test
xor
mov
inc
mov
inc
pushf
and
ret
cwtl
xchg
ja
shrb
pop
adc
hlt
outsl
mov
xor
or
ret
jno
lea
xlat
xchg
jbe
xchg
add
nop
xchg
xchg
rcrb
inc
sub
jmp
aam
push
dec
into
insb
movsb
gs
fisubs
adc
jb
mov
sarb
aaa
aam
insb
inc
int
ss
out
xchg
inc
pop
cmp
mov
mov
in
sahf
mov
mov
int3
inc
ret
push
inc
dec
hlt
fists
rorb
ja
test
repnz
rep
xchg
and
xchg
scas
jge
ret
int3
outsb
loope
outsl
out
xchg
lock
out
sbb
push
jp
and
movb
fs
jp
inc
fiadds
sub
pop
ret
outsb
inc
sub
sbb
dec
adc
popl
scas
sbb
stos
inc
add
mov
ficoms
xchg
call
xchg
mov
addl
arpl
cmp
pushf
or
in
jne
xchg
adc
xor
test
push
fidivrl
mov
inc
lcall
pop
nop
fsubrs
push
fimuls
adc
sub
cmc
lds
mov
les
sti
lahf
les
pop
sub
fidivrl
dec
testb
loopne
xlat
arpl
xor
sub
xlat
pushf
push
dec
popf
mov
push
xchg
mov
sbb
popf
or
mov
dec
dec
sbb
clc
mov
and
movl
mov
inc
rol
and
jle
mulb
imul
xor
movsl
fnsave
push
cmpsl
xchg
pop
leave
push
jns
in
adc
and
scas
bound
cmp
mov
lret
xchg
fimull
cld
push
jmp
mov
aam
mov
mov
xor
ljmp
and
inc
jp
scas
out
add
test
xchg
xchg
out
arpl
pop
jmp
push
pushf
lret
das
sub
mov
xor
imull
push
rcrl
icebp
imul
clc
sbb
xchg
xchg
pop
dec
cmpsl
jae
int
cmc
add
dec
loopne
mov
and
iret
and
mov
aam
push
sub
dec
dec
insb
or
jmp
xchg
add
jno,pt
add
orb
out
cmp
add
sub
ret
mov
push
fucomp
xchg
sbb
movsb
scas
xor
adc
adc
and
lods
enter
sahf
or
xchg
in
cld
orl
jo
cmp
xchg
or
stc
jmp
xor
ds
mov
imul
xchg
sahf
cwtl
in
nop
adc
or
xchg
cmpsb
sub
nop
lds
daa
jbe
add
outsl
and
mov
test
adc
aas
xchg
xor
inc
pop
mov
lret
push
fiadds
push
or
push
sub
shufps
dec
mov
pop
xchg
mov
xchg
xchg
pop
test
cmc
andl
push
imul
cwtl
xchg
or
xchg
rorl
cli
lret
cs
fcoml
dec
pop
gs
sahf
inc
loope
inc
fwait
jle
mov
mov
and
int
push
cmp
out
scas
jl
je
adc
insl
cld
sbb
ljmp
icebp
jo
sub
insb
jle
sbb
cmp
pusha
ljmp
ss
imul
cmp
f2xm1
inc
repz
xchg
mov
fsubrl
inc
pop
shl
hlt
adc
cmp
or
scas
fiadds
std
mov
pop
mov
mov
jge
push
adc
xchg
jmp
repz
lock
push
clc
pop
inc
adcb
push
jp
mov
sub
fildll
dec
xchg
mov
cmp
inc
xor
adc
pusha
xor
xchg
or
push
cmp
mov
sub
add
push
stos
cpuid
fbld
mov
xor
sbb
mov
or
jae
lahf
inc
and
cld
lods
dec
xchg
ja
jbe
cmc
fadd
into
fsub
sbb
pop
test
push
fmuls
je
ljmp
push
push
test
ficoml
popf
dec
orl
mov
cmpsl
mov
ljmp
and
pop
insb
mov
fbstp
xchg
out
stc
sub
mov
clc
or
loop
xchg
fsubp
clc
nop
sbb
lods
mov
sar
and
sbb
lahf
in
inc
stc
je
daa
add
push
ret
imul
xchg
jns
xorl
ljmp
lret
ss
xor
pop
mov
mov
pushf
mov
inc
jmp
push
adcb
lods
addr16
int3
dec
pop
cmpsb
scas
in
stos
sbb
data16
sar
call
or
cmp
gs
cmp
push
js
std
mov
add
mov
or
stc
push
mov
dec
cld
pop
in
subl
push
dec
les
loop
cmpsb
push
mov
mov
or
pop
stc
shrb
push
daa
sbb
mov
jae
es
jae
clc
testl
inc
out
hlt
cmc
cs
fadd
sub
data16
sahf
ret
add
adc
scas
les
nop
pop
sarl
mov
enter
dec
aad
push
pop
loope
push
test
add
mov
cmpsb
je
adc
fwait
cmc
into
sub
adc
test
je
push
jns
stos
xor
dec
lock
call
cltd
test
cmp
xor
divb
jb
in
sub
pop
shll
push
jge
scas
inc
pusha
and
sub
outsl
bound
aad
shrl
jg
fsubrl
ret
xor
mov
cs
mov
cs
cmc
dec
pop
stos
pop
pop
inc
and
std
mov
fiaddl
in
push
xchg
mov
jge
dec
iret
cmpsb
cli
sub
or
pop
cltd
push
xchg
mov
xchg
mov
scas
push
push
pop
cmc
nop
cmp
loopne
or
dec
cltd
or
jb
int
pop
lret
push
clc
out
ret
scas
cmp
xor
jo
lret
sbb
std
xchg
mov
xchg
js
fdiv
xorb
add
ret
repz
pusha
int3
nop
and
daa
jne
jae
sbb
int3
repnz
inc
jbe
push
icebp
mov
outsb
mov
jnp
lahf
and
pop
addr16
pop
movsl
xchg
mov
lods
and
std
jns
inc
push
fsubrl
sub
mov
adc
mov
lods
fnstcw
dec
sbb
loope
add
daa
push
in
pushf
fisttpl
mov
jno,pt
push
dec
inc
roll
push
sub
cmp
fstpl
loopne
addb
cmpsl
fistl
mov
fmull
stc
mov
push
shrb
dec
pop
cmpl
or
sub
sub
cmp
outsl
jp
fnstcw
in
mov
nop
int
add
jns
iret
dec
sahf
xchg
mov
aad
mov
mov
repz
inc
push
dec
iret
inc
add
jle
ror
dec
inc
rcll
js
cmpsl
test
pop
jl
movsb
sub
enter
fwait
jae
cmpsl
fcmovnu
aas
xchg
mov
cmp
mov
lret
pop
inc
outsb
cmp
lea
jmp
aaa
je
loop
inc
pop
xchg
fidivl
inc
xor
std
or
jmp
xlat
inc
subl
pusha
push
cwtl
sub
ss
mov
shr
push
mov
xor
mov
mov
xor
shl
gs
test
scas
cmp
jecxz
cmpsb
test
int
cmpsl
or
cwtl
xchg
sahf
push
fisttps
pop
es
mov
xchg
sti
into
dec
out
dec
imul
lret
fldt
sbb
xor
adc
mov
repz
xor
int3
mov
pop
fimull
or
dec
clc
xor
push
mov
xchg
ficoms
aaa
xchg
fistpl
inc
call
sub
dec
inc
sbb
popa
out
sub
fs
in
jmp
mov
sbb
or
leave
jno
hlt
dec
loopne
pushf
push
push
adc
dec
js
ds
rolb
lahf
pop
orl
sub
shlb
pushf
jno
bndldx
jbe
sbb
insb
push
mov
pop
sti
ja
nop
cmp
outsb
movl
negb
mov
cmpsb
sbb
shlb
or
jns
lcall
xor
mov
pop
sbb
arpl
into
ds
shl
movsb
mov
orb
dec
mov
jbe
ljmp
or
test
cmp
mov
jp
push
adc
dec
gs
in
inc
jle
mov
xchg
mov
inc
je
and
pusha
push
jle
jae
or
dec
lea
xlat
aad
mov
mov
insl
inc
fidivrl
cli
push
sub
mov
dec
stos
xchg
lock
not
in
sub
pop
xor
xor
or
movb
sahf
aam
add
inc
call
sub
aad
je
or
inc
and
cmp
pop
xchg
arpl
fidivrl
adc
lock
cmp
stc
cmp
fcoms
ss
js
and
jbe
fwait
enter
mov
push
out
psubq
jmp
inc
test
jmp
je
push
dec
cmp
pushf
into
fcmovnb
pusha
dec
dec
das
cmpsl
inc
and
insb
rorl
out
fcompl
shlb
mov
pop
out
adc
in
and
push
fwait
orb
insl
sub
andl
sbb
adc
sti
adc
jg
cmp
stos
xor
mov
lods
cltd
and
jns
rorl
xor
rol
mov
loope
mov
aam
cwtl
out
movsb
mov
mov
adc
shrl
or
mov
mov
sbb
out
push
cmp
clc
fildl
pop
cld
and
bound
mov
inc
test
jmp
and
pop
xchg
imul
mov
mov
mov
repz
dec
addr16
mov
push
pop
shrl
push
mov
in
js
ret
outsb
in
add
leave
sub
mov
fisubrs
mov
mov
add
lds
fildl
add
cld
mov
cmpsl
fidivrl
sub
fdivr
dec
or
shrl
into
jo
sahf
repz
inc
add
dec
ret
xchg
and
mov
outsl
cmpl
lret
jg
repz
push
push
adc
faddl
dec
mov
inc
in
hlt
jmp
inc
ss
data16
mov
add
shll
mov
mov
fwait
jecxz
inc
add
pop
inc
pop
loope
inc
repnz
xor
int3
and
mov
push
sbb
rcll
cmp
pop
jae
mov
lcall
fwait
xchg
inc
loop
or
test
imul
sub
mov
add
cmc
outsb
dec
jmp
push
mov
mov
lcall
std
fnsave
mov
and
push
sbb
xchg
and
dec
pop
cmpsb
mov
xchg
daa
hlt
in
int3
ret
dec
sahf
jb
adc
pusha
adc
sbb
mov
cmpsb
mov
cld
sbb
add
js
xlat
js
mov
dec
js
mov
mov
inc
inc
icebp
gs
enter
jbe
iret
push
insb
cmp
rcll
sub
push
jmp
inc
push
repnz
or
idivl
lock
mov
mov
cmpb
xchg
xchg
sub
fld
insb
cmpsl
add
in
push
or
jecxz
jnp
loope
in
xchg
mov
out
nop
sub
das
mov
mov
cmp
clc
mov
sti
fbld
outsl
adc
xor
pop
out
push
jo
and
pop
es
in
and
fldcw
mov
fcoml
mov
pusha
mov
sbb
and
inc
jecxz
loop
inc
lock
adc
popa
popf
add
imul
subl
cmp
nop
aad
mov
pop
sbb
push
fstps
clc
cmp
dec
out
stos
ror
je
push
cmp
outsb
inc
ss
pop
pop
jno
mov
push
push
aam
loopne
lock
sub
dec
jge
adc
movsl
xor
mov
sbb
mov
or
je
or
dec
inc
jne
xchg
or
into
or
xor
andl
xor
das
cli
leave
ja
adc
scas
push
lods
push
adcl
mov
shlb
mov
fstl
ja
pop
pop
cmp
sbb
cld
hlt
inc
cmp
lods
call
adc
mov
sub
std
mov
xor
pop
fmul
and
mov
and
in
fmuls
xor
pop
or
addr16
lret
mov
push
outsb
xor
xlat
mov
cmpsb
adc
sbb
aad
xchg
mov
mov
inc
fucom
out
out
or
jo
and
ljmp
adc
sarb
inc
add
and
call
mov
nop
mov
outsl
push
push
sbb
in
mov
mov
imul
xchg
movsl
xor
xlat
jbe
int3
les
fimull
pusha
imul
xchg
sub
adc
or
sbb
push
popf
popf
pushf
jle
sbb
adc
or
pop
movsb
jl
ds
mov
je
and
das
fadds
mov
push
into
adc
in
imul
push
test
fildl
adc
es
ds
xor
popf
inc
add
fdivrs
ljmp
in
pushl
cmp
imul
rcrb
mov
int
shl
popa
test
jp
inc
push
pop
mov
jne
cmp
ret
jne
clc
push
adc
or
jle
xor
pop
xchg
push
mov
pop
dec
aas
in
adc
dec
sbbb
adc
inc
mov
fdivs
outsb
and
jns
mov
les
xchg
push
fmul
leave
cmp
andl
pop
push
pop
aas
lods
pop
cltd
xchg
jp
push
call
cltd
jle
sbb
imul
and
or
aad
dec
cmpsb
rcl
test
or
or
pop
push
sbb
repz
repnz
incb
sbb
out
inc
add
add
ljmp
jns
pop
pushf
hlt
test
lds
shl
aad
sbb
sbb
cmp
push
push
scas
ds
cmp
adc
dec
loope
and
inc
lahf
repz
jle
shll
mov
pop
les
in
orl
xchg
enter
or
and
and
bound
push
push
aad
icebp
mov
outsb
mov
fwait
dec
gs
pop
and
dec
add
insl
lock
sbb
loope
repnz
sbb
out
cbtw
scas
outsb
jne
jg
cmp
and
adc
xor
lcall
sbb
inc
sub
dec
mov
fimuls
and
insb
push
fsubl
mov
jecxz
jge
cmp
shrb
dec
mov
cs
xor
cmpl
sti
dec
scas
cmpsb
sti
mov
jnp
cld
add
mov
xchg
cltd
cwtl
mov
incb
pop
pop
cs
outsl
xor
mov
fdivs
js
dec
lcall
jbe
mov
pop
test
test
cmpb
sbb
mov
or
popa
or
clc
lcall
fbstp
mov
pusha
cmp
pop
jl
mov
or
repnz
mov
imul
stos
xor
add
test
xlat
addl
inc
lret
shrl
pushf
mov
pop
inc
or
ds
lock
dec
repz
int3
fs
pop
pop
pusha
cmp
mov
mov
add
cmp
loope
stos
adc
shrl
cli
jb
inc
call
add
shlb
mov
push
push
jns
std
inc
xor
xchg
fldl2t
mov
mov
xor
dec
lretw
adc
push
mov
fistpll
push
mov
cmpsb
divl
jns,pt
jl
or
cs
jne
mov
inc
jp
mov
cmp
xchg
mov
mov
fnop
stos
loope
pop
mov
jmp
dec
xor
cmc
mov
in
mov
sub
adc
sub
sbb
popa
mov
cld
lret
add
sub
testb
out
xor
stc
mov
fcomps
pop
cld
and
lret
ljmp
loopne
mov
mov
adc
jg
dec
loop
pop
cli
fst
or
out
pop
lahf
lock
jb
or
sbb
add
in
inc
xchg
popf
xchg
cltd
leave
mov
xchg
mov
arpl
lock
out
gs
insl
call
popf
mov
jl
test
jb
xchg
shll
testl
addr16
mov
adcb
adc
insl
imul
ret
adc
add
pushl
in
outsl
popa
push
cmc
fistl
clc
jg
mov
cmpb
les
sub
adc
lds
repz
sub
cmpsl
testb
ja
mov
cwtl
in
mov
cmpsl
outsb
ljmp
and
addr16
push
pop
test
cmp
mov
in
jno
dec
dec
mov
iret
imul
lret
ret
pusha
bnd
push
ret
imul
lds
dec
adc
jne
cs
imul
sub
jp
cltd
mov
lcall
inc
jl
testl
arpl
inc
mov
mov
and
cmp
aas
adc
sbb
pop
cld
xchg
push
or
aaa
xchg
fdivrl
testb
lea
cmpsl
ret
mov
pop
push
or
shll
cmp
popa
ror
adc
dec
pop
std
aam
out
jge
adc
shlb
adcb
jb
ror
pushf
xchg
fisubl
lret
shlb
pop
or
test
ret
jne
cmp
lea
mov
inc
jns
lcall
or
xchg
ds
mov
jmp
cltd
and
roll
int
sub
fistps
aam
roll
push
icebp
push
push
push
flds
mov
or
cmp
and
pusha
add
ljmp
mov
insb
out
dec
ljmp
dec
inc
jo
inc
push
sarb
gs
pop
cmc
adc
sub
inc
xchg
fs
aaa
cmpsb
xchg
int3
jge
xchg
mov
xchg
outsl
push
or
inc
cmp
mov
push
or
mov
mov
jns
lea
ds
jne
xor
outsb
in
sbb
cs
mov
out
loope
test
in
pop
roll
xlat
or
leave
ss
jg
and
push
mov
fstpl
xlat
or
cmp
pop
jle
aad
shll
sahf
jge
test
pushw
bound
mov
sub
xchg
jl
xor
adc
or
sub
fmulp
aaa
cld
xchg
push
call
sbb
cmp
mov
scas
in
xchg
stos
push
das
sbb
sub
jmp
lcall
mov
xorl
pop
add
cld
adc
mov
mov
lahf
mov
pop
push
jecxz
jne
scas
enter
lock
cmp
dec
stos
aaa
cmp
pop
ds
mov
push
add
pop
and
adc
mov
adc
dec
xchg
sub
pop
fdiv
jne
jno
add
sbb
pop
xchg
inc
push
mov
cmp
ror
sbb
and
xchg
and
cmpsl
mov
loope
jo
sub
aad
loop
cwtl
inc
dec
sub
mov
mov
dec
mov
xchg
xchg
test
cmc
ss
jg
sbb
mov
jb
fstl
sti
cwtl
jbe
shlb
sbb
popl
iret
sahf
fsub
int
ret
fldpi
addr16
mov
xor
popa
repz
mov
or
push
daa
mov
sub
sahf
cmp
jno
fcoms
jecxz
mov
loopne
fadd
ror
mov
jge
or
mov
adc
pop
sbb
xchg
xor
cs
int
xor
dec
push
je
adc
lret
dec
and
add
out
mov
cs
sti
mov
repnz
cmpsb
pop
push
addr16
test
fstpl
les
push
in
adc
mov
xchg
add
outsl
sbb
cs
out
jbe
or
add
mull
movsl
insl
jns
gs
pushf
push
inc
xchg
sti
mov
data16
and
mov
lret
ja
cltd
outsb
or
fiadds
jne
div
mov
sarl
push
push
xchg
ud2
add
scas
loope
dec
pop
cmp
fwait
pop
mov
and
rcll
shll
out
bound
jbe
clc
jp
cwtl
and
mov
and
pop
pop
add
fwait
rcr
je
inc
push
out
lea
das
inc
jbe
hlt
sub
or
push
sbb
in
fs
test
and
clc
dec
fimuls
fbld
sbb
fucomp
notl
dec
xor
sbb
dec
rcrb
dec
xor
lcall
lahf
mov
frstor
test
jo
bound
dec
push
jp
popa
mov
fnstsw
pop
ficoml
out
sti
sahf
jae
mov
addr16
test
loope
mov
daa
movb
cmp
xor
cmp
xchg
mov
cmp
mov
fsubs
ret
adc
cmc
gs
mov
or
loope
xchg
addr16
mov
adc
cmpsb
outsb
cmp
jge
fnstsw
cmp
enter
rol
dec
bound
cmp
cmp
mov
mov
and
xor
mov
fadds
addr16
mov
inc
loope
xor
inc
pop
ret
test
mov
lcall
xchg
cmp
insl
push
pop
sti
gs
sbbb
lcall
ror
movsl
cwtl
adc
jo
xchg
gs
in
imul
jno
mov
xor
iret
inc
pop
push
xchg
not
in
cmpsl
push
enter
test
rclb
mov
out
aaa
push
ja
xor
pop
fmul
lods
push
pop
es
loope
mov
bound
test
in
into
repz
js
sub
cmp
out
jp
xlat
xchg
in
lahf
loop
pushf
adc
into
sub
mov
loopne
cmp
aas
dec
aad
or
dec
cli
jno
pop
push
mov
xchg
sbb
sbb
iret
pushw
pop
dec
pop
out
sahf
and
sbb
adcb
lcall
fdivl
mov
push
push
mov
cmc
cmpb
test
pop
gs
icebp
mov
cmp
push
xchg
leave
imull
inc
inc
fsts
popa
fcomp
inc
decl
hlt
mov
and
pop
inc
loop
cmc
pop
clc
jmp
test
dec
mov
popf
adc
call
out
or
movl
das
mov
push
cld
in
pop
or
adc
imul
jmp
shrl
sub
push
xor
lahf
in
ss
stc
mov
in
stos
shrb
ss
popf
inc
jmp
mov
dec
cmp
mov
faddl
mov
insl
loopne
xor
imul
into
jb
ret
add
sbb
lods
mov
fwait
cld
lret
sub
sbb
rclb
xlat
pop
hlt
push
fldl
les
pop
and
adc
fnstcw
fwait
in
xor
xchg
xchg
mov
loop
int
jno
and
scas
sbb
xchg
das
sub
int
add
adc
fucomi
jg
inc
inc
pushf
addr16
shll
fdivrl
imul
movsb
rol
popf
aaa
inc
mov
mov
insl
mov
inc
hlt
in
les
fwait
sub
roll
out
addr16
dec
xchg
lret
pop
test
pop
rclb
push
push
out
push
sti
mov
loope
push
mov
in
lahf
jge
mov
hlt
adc
cmp
repz
in
cmp
cwtl
out
push
mov
cmc
jle
sbb
arpl
cli
sbb
push
push
cs
jmp
push
push
cmp
mov
mov
pop
xchg
imul
je
std
addl
cs
inc
mov
orl
rcrb
std
add
lret
ja
xchg
ja
aam
je
cmc
pop
mov
jp
ja
cmpsl
push
sbb
scas
sub
enter
inc
mov
cmpsb
and
test
xor
into
push
jno
sub
sarb
push
pop
enter
pop
mov
and
stos
popf
adc
icebp
in
xor
cmp
test
aam
lret
clc
lods
in
adc
in
push
ret
daa
mov
pop
mov
addl
cli
int3
arpl
push
push
mov
mov
adc
mov
in
mov
xchg
jo
jmp
cwtl
lods
hlt
and
aaa
out
cwtl
cmp
jge
shll
neg
mov
mov
mov
mov
rorl
lea
push
icebp
out
loopne
aas
das
mov
stos
ds
sbb
fsubl
fdivrl
mov
out
push
mov
insb
push
icebp
dec
mov
xor
inc
movsl
dec
int3
xor
or
shrb
addb
or
gs
rclb
mov
fwait
xor
and
push
out
or
ljmp
daa
loopne
arpl
je
or
jns
mov
xor
push
cmpsb
cmp
cmp
lret
call
mov
xlat
cmpsl
push
xor
loope
xchg
lret
int
push
inc
mov
ds
jae
das
lea
cmc
icebp
push
xor
jne
andb
ja
aaa
push
add
push
inc
repnz
mov
dec
xor
fldenv
arpl
aam
adc
mov
adc
adc
fistl
sbb
sti
mov
push
pop
push
or
enter
in
aam
cmp
jnp
push
aad
cs
sbbl
aaa
les
adc
pop
sub
lea
rcrl
mov
xor
popf
pop
loop
add
xchg
fmul
dec
dec
push
neg
in
leave
or
shlb
cmc
lret
mov
dec
xor
inc
xchg
xor
jle
sbb
incb
mov
mov
sub
pop
mov
dec
repz
inc
mov
dec
mov
movsb
mov
fcoml
testl
vmwrite
add
out
ficompl
inc
mov
jne
mov
jne
aam
dec
call
test
pop
add
dec
stos
fimuls
mov
test
enter
sqrtps
test
mov
repz
clc
mov
movsb
push
adc
in
mov
xchg
jg
dec
clc
in
insl
cmp
mov
pop
andl
stos
pop
bound
ja
popf
sbb
loope
mov
sub
dec
dec
jge
xchg
shlb
test
push
nop
lods
mov
dec
jae
mov
mov
into
adcb
xchg
ss
pop
jnp
push
rcrl
in
shrl
pop
push
fisubrl
outsl
sarl
jmp
divb
stc
fsubrs
xchg
xorl
push
pop
leave
cmpsb
push
mov
mov
subl
push
mov
pop
mull
pop
jmp
fisttpll
neg
push
cmp
hlt
lret
push
push
cmp
mov
jl
inc
scas
inc
iret
rclb
rol
popf
inc
int
in
cltd
mov
cmovge
and
shll
shl
mov
stos
movsl
dec
cs
out
dec
mov
dec
popl
gs
mov
pop
mov
dec
repz
je
pop
outsl
ret
jae
aad
and
mov
mov
add
jg
pop
inc
lea
cmp
add
mov
cmc
xor
dec
push
jnp
fidivrl
pop
aad
sbb
push
xor
cli
dec
fldcw
mov
out
scas
das
mov
mov
popa
and
dec
mov
pushw
mov
push
rclb
mov
adc
push
in
into
or
js
cwtl
rcrl
sub
lahf
add
out
adc
xor
andb
lock
loopne
repnz
push
jnp
jns
push
ljmp
and
sahf
adc
loope
loopne
loopne
mov
jg
insl
adc
insl
xchg
pop
ret
lea
mov
loop
icebp
push
mov
fcom
xchg
mov
and
sbb
adc
mov
repz
push
gs
and
sub
or
jno
daa
push
out
push
jmp
shl
stos
xor
pushl
bound
lret
popa
adc
xchg
lock
shll
add
mov
or
dec
popa
aaa
mov
xchg
inc
stos
decl
fadd
sub
orb
cmp
cmp
add
fnstenv
pushf
rolb
sub
dec
adc
int3
in
pop
scas
mov
push
mov
add
xchg
mov
cmp
popf
inc
pop
jae
mov
test
jno
lcall
notb
pop
add
sub
cmp
in
push
cmc
xchg
les
mov
push
and
and
push
addb
jl
mov
aam
mov
push
cltd
arpl
cld
push
cmovae
rorb
shlb
push
and
in
mov
adcb
mov
fwait
pop
sbb
outsb
aas
add
in
or
sub
in
xrelease
aas
lret
arpl
jno
arpl
out
scas
std
loopne
pop
ror
mov
inc
leave
and
je
jecxz
aam
loopne
sub
cmp
or
jnp
bound
jecxz
mov
and
in
test
pop
out
test
std
jo
imul
test
xor
or
mov
adc
shrl
adc
pop
sub
rcl
cmpsl
pop
shl
dec
mov
dec
xchg
push
mov
push
in
mov
std
jns
mulb
sub
sub
sub
jno
aaa
jns
mov
pop
mov
push
gs
cmp
push
rcl
mov
and
inc
je
add
iret
mov
pop
test
fldt
or
fwait
scas
xor
nop
out
lret
cmp
iret
push
mov
lock
inc
negl
int3
cmpsl
jne
ret
mov
xchg
push
jecxz
enter
idivb
sbb
mov
xchg
lock
ret
jmp
dec
test
sbb
sbb
rorb
xor
push
or
dec
in
nop
jne
repnz
mov
sbb
xor
mov
mov
data16
inc
clc
pop
pop
jmp
insl
ret
ficomps
push
adc
dec
hlt
xchg
push
ss
shlb
jmp
mov
repnz
and
mov
cmp
mov
popf
icebp
nop
xor
hlt
leave
in
mov
pop
mov
roll
and
sub
pop
mov
adc
xor
jge
out
sbb
mov
or
pop
jecxz
iret
dec
pop
out
or
jle
mov
adc
je
sarb
mov
pushf
push
jp
sub
push
in
std
jno
daa
cmp
pop
enter
int
jge
or
out
mov
inc
test
push
mov
push
adc
lret
into
lcall
in
into
popa
inc
lods
lret
enter
ljmp
rorb
insl
cmpsb
lock
lahf
inc
jb
xchg
fs
icebp
leave
mov
mov
std
ret
dec
in
cmp
sub
and
into
iret
lcall
push
xchg
out
inc
cmp
jbe
fcoml
dec
loope
mov
xchg
or
inc
mov
or
or
std
insb
xor
mov
xor
dec
push
cmp
add
aad
mov
push
out
outsl
xchg
out
ficoms
dec
fldt
xor
repz
inc
xchg
pop
rcll
mov
je
inc
fidivrl
mov
adc
sahf
andl
outsl
xor
jb
inc
or
mov
jne
adc
mov
mov
lods
loop
mov
pop
inc
xchg
adc
insb
fcoms
fnstsw
and
lret
pop
bound
xor
paddd
sbb
mov
mov
pop
outsb
dec
add
xor
add
adc
push
iret
shlb
addr16
pushf
divb
ret
mov
and
shrd
movsb
and
or
int
adc
repnz
cmp
jg
mov
enter
lret
neg
test
xor
inc
xchg
cs
ret
lods
or
jle
pop
aas
scas
jbe
pop
cmc
dec
test
in
mov
and
add
movsl
adc
push
inc
push
lods
mov
sub
push
insb
add
mov
push
mov
xchg
call
fiaddl
divl
test
or
xchg
jle
scas
nop
int3
push
into
and
inc
outsl
push
push
or
cmp
adc
xor
xor
ja
inc
pop
mov
push
stc
lock
xor
or
pop
and
pop
push
and
push
repz
iret
cltd
inc
or
and
add
insl
xchg
and
jecxz
aas
mov
call
das
lret
rorl
cmp
gs
mov
inc
and
hlt
push
xor
jmp
mov
sbb
aad
nop
inc
jo
and
and
add
jmp
mov
inc
imull
xor
mov
add
js
and
xor
dec
in
repz
jge
fwait
out
mov
out
cmc
outsl
mov
mov
xor
add
mov
xchg
lahf
pushf
mov
stos
mov
push
push
mov
mov
data16
daa
into
mov
int3
aaa
lret
mov
lcall
and
pop
addl
sub
jb
fwait
jns
pop
mov
js
repnz
shll
stos
cs
push
inc
lret
inc
pop
mov
and
jo
divb
fmuls
xchg
lock
dec
in
xlat
aad
imul
out
test
lahf
jns
js
mov
and
and
inc
shrb
push
xchg
je
addr16
mov
dec
dec
jge
dec
and
sub
sub
fsts
or
add
ret
das
iret
xchg
inc
ljmp
mov
jns
roll
cmp
les
jle
in
mov
cwtl
pushf
sub
xchg
out
int3
and
loop
adc
aaa
stos
jne
mov
mov
dec
call
adc
pop
addr16
push
adc
ficoms
pop
dec
into
sub
adc
or
out
dec
adc
pop
mov
fcoml
ret
movsl
mov
mov
pushf
sub
pusha
mov
je
fwait
xchg
aaa
iret
pushf
and
or
push
adc
ljmp
sbb
js
pop
pop
sti
popf
ss
add
fs
and
je
mov
push
add
aam
inc
lods
icebp
xchg
mov
fimull
lock
scas
mov
ja
ret
dec
mov
lea
loop
mov
cmp
lods
or
daa
adc
and
pusha
in
fcos
and
xor
movsb
test
dec
in
adc
lea
cwtl
mov
fsts
cld
jnp
add
sbb
xchg
push
mov
pop
cmp
fcmovu
inc
xchg
mov
ficoml
in
dec
jle
add
sub
jae
rcrb
mov
adc
testb
push
and
outsb
ret
add
xor
lret
test
inc
jge
push
int3
pop
mov
inc
lret
insl
mov
xor
bound
pop
ja
mov
insb
scas
push
adc
loope
adc
xor
inc
sbb
mov
pop
sub
mov
out
repnz
cwtl
cmp
mov
xor
aas
cmp
out
inc
lds
cwtl
std
push
sub
lret
jnp
push
sbb
sbb
addl
xor
jp
pop
and
lods
and
aad
xchg
ret
adc
fstps
dec
jge
sbb
fcoml
fimull
jae
daa
add
jmp
sub
cmp
xor
stc
push
mov
ds
outsb
jmp
sbb
pushf
mov
out
roll
sub
xor
mov
loope
xor
dec
sbb
pusha
orb
xor
pushf
or
lods
sub
das
mov
stos
bound
xor
xchg
push
lahf
adc
lods
jl
popa
popa
daa
icebp
and
pop
jmp
lcall
pusha
or
xchg
and
push
fisubrs
fimull
mov
pop
mov
lds
sbb
pop
decl
dec
jne
rclb
mov
inc
dec
jne
ds
mov
add
mov
rcr
push
loope
outsl
dec
jnp
sbb
sub
dec
cmp
cmp
pop
aad
dec
fsubrp
out
popa
pop
stos
sbb
push
xchg
scas
cltd
sub
nop
enter
or
sbb
lds
mov
jp
sahf
sub
cwtl
loope
xchg
fs
cltd
cmpsl
sub
adc
iret
dec
fincstp
adc
pop
or
movsl
popa
in
lods
jbe
xchg
push
xchg
xlat
xchg
test
sbb
arpl
jnp
mov
push
cs
sti
sub
add
dec
inc
mov
lcall
jg
sub
aaa
cs
mov
jmp
fucomi
dec
data16
shr
sbb
mov
jne
mov
movsb
int
ret
add
imul
lcall
xorb
aas
or
mov
out
enter
xchg
sbb
in
movsb
mov
das
test
mov
mov
in
and
inc
imul
jb
pop
cmp
lds
dec
dec
mov
rorl
insb
test
jge
inc
jo
es
sub
int3
bound
jp
jecxz
cmp
movsl
movsl
push
iret
mov
sbb
lods
js
repz
mov
xchg
stos
loop
lock
jge
ds
xchg
fstpt
aas
mov
xchg
mov
into
xor
and
out
mov
jae
jb
push
xchg
outsl
movsl
lock
in
mov
int3
jns
sti
std
fistpll
xchg
cmpsb
xchg
in
lods
ja
clc
mov
jmp
fadds
mov
xchg
paddsb
xchg
pop
mov
bound
ss
int
sub
std
dec
lahf
or
lahf
dec
add
inc
mov
mov
and
call
in
sub
mov
jp
xchg
movsl
and
test
cmp
push
jg
jae
inc
pop
cmp
cltd
mov
out
rolb
pop
xor
sub
ret
cmp
inc
stc
sub
push
mov
mov
mov
jne
lock
loop
mov
xchg
xchg
fcmovu
pop
push
sbb
push
fs
test
ret
insb
inc
sbb
mov
mov
dec
pop
push
xor
lock
xor
sbb
das
test
bnd
pop
adc
scas
stc
push
lea
xchg
iret
mov
aam
or
bound
push
stc
or
insb
notl
pop
mov
push
lods
push
xchg
pop
leave
mov
fmul
inc
mov
icebp
jge
lret
xor
or
in
cmpl
add
cmp
dec
jbe
ss
jne
gs
pop
int
scas
mov
mov
sub
mov
push
fcmovne
jbe
test
test
mov
xchg
out
inc
stc
mov
or
loope
mov
test
add
lcall
lea
fcmovnu
cmpsl
cld
mov
rolb
test
adc
idivl
mov
mov
sub
mov
mov
int3
aas
leave
xor
jo
jnp
mov
lds
getsec
mov
fwait
sub
push
cli
dec
adc
push
add
mov
mov
rcll
faddp
add
jne,pn
fistps
movsl
pop
and
cmpsl
mov
jl
test
jmp
sub
fbld
mov
gs
aaa
and
int
inc
imul
xor
adc
mov
dec
push
sbb
xlat
dec
je
mov
scas
sarl
jmp
sub
push
jl
add
mov
mov
push
adc
lret
mov
insb
pop
pop
stc
mov
pop
adc
dec
push
lcall
cmp
adc
or
jle
test
popw
fiadds
push
adc
add
lret
mov
pop
xor
mov
call
lock
cmc
scas
ss
iret
or
rclb
mov
imull
dec
addr16
xchg
jbe
inc
adc
lcall
mov
scas
rolb
call
jae
aam
js
jb
mov
cmp
or
jae
popf
aad
cmp
das
mov
call
fcoms
adc
jno
daa
mov
gs
arpl
lret
mov
inc
add
mov
xlat
popa
ss
ja,pt
mov
movl
mov
add
dec
sar
xor
mov
mov
test
jmp
out
mov
gs
mov
xlat
inc
call
int
loopne
xor
aad
mov
push
movsb
insl
fisubrl
std
mov
sbb
mov
fwait
ljmp
push
push
dec
lret
and
les
push
out
or
sub
jns
sbb
mov
jno
push
and
sub
or
hlt
enter
jb
aam
filds
add
add
adc
xchg
lea
neg
lcall
pushf
loop
pop
xchg
dec
test
out
jo
mov
mov
aas
flds
mov
outsb
rcll
inc
jb
xchg
mov
fsub
sbb
outsb
mov
xlat
int
sbb
and
out
ds
pcmpeqd
repz
push
repnz
jmp
rorb
pop
mov
mov
movsb
xor
jnp
jge
cmp
test
lods
sahf
and
leave
mov
mov
push
ret
clc
gs
xor
incb
cmp
or
jno
adc
add
jbe
rcl
std
mov
push
mov
repz
push
into
mov
aaa
fnstenv
lock
jmp
xchg
inc
jnp
mov
mov
in
nop
stos
or
mov
int
nop
call
push
mov
int3
push
outsb
sub
adc
out
add
pop
out
hlt
push
out
pusha
adc
imul
dec
sahf
and
adc
pop
mov
mov
rorb
push
fimull
shlb
mov
in
nop
inc
pop
cmpsl
stc
jb
sub
adc
jle
jp
add
xchg
mov
sahf
sub
dec
xchg
mov
pusha
sub
or
leavew
iret
mov
pop
jo
pop
xor
fsub
loop
or
in
xchg
sub
mov
mov
jo
push
sbbb
repz
push
cmpsb
dec
ret
cld
xchg
movsb
loope
outsl
lds
in
pop
jge
cmpsb
data16
mov
rcl
clc
sbb
jg
es
dec
jg
mov
ret
outsb
mov
adc
add
inc
shll
push
mov
mov
cwtl
dec
test
pop
adc
sbb
sbb
mov
popf
or
and
or
int
mov
mov
mov
adc
jo
lea
std
lret
enter
sub
inc
in
sub
js
test
shr
xor
pushf
jmp
movzwl
orl
sbb
mov
cmp
mov
adc
add
repz
rorb
test
iret
mov
shrb
outsb
dec
in
sub
popf
shll
ljmp
add
pop
sbb
addr16
dec
mov
outsb
xorl
xchg
adc
rorl
arpl
cld
mov
aas
mov
dec
xor
xor
out
sti
sub
pop
fs
xor
ret
lea
pop
dec
int
mov
test
pop
lret
pop
sbbb
and
push
aad
sub
sub
mov
cmpsl
orb
push
inc
pop
sbb
lret
jmp
enter
jns
lret
decb
rcrb
lods
fbld
and
lock
jl
xor
out
mov
ds
dec
mov
dec
sti
mov
enter
xor
xchg
cmc
dec
or
pop
inc
sbb
xchg
dec
lret
out
and
pusha
xchg
shrl
stos
and
push
test
inc
cmpsl
jo
cmpl
mov
sub
aam
sbb
jo
repz
ds
cmpsb
cmp
hlt
push
jo
into
pop
dec
inc
js
mov
adc
andb
fimull
pop
jb
std
imul
adc
xor
test
add
cwtl
pop
xchg
es
xor
lahf
push
mov
cmp
lods
test
mov
popa
xchg
mov
xchg
out
sahf
adc
orb
jl
fs
in
xchg
ficoml
jg
adc
outsl
stc
sti
cmpl
pop
xor
bnd
pushf
dec
inc
pop
call
jno
cmp
and
mov
fdivrs
insb
popf
lcall
or
xor
pop
pop
xor
add
push
loopne
jmp
cmpsl
mov
ret
sbb
call
inc
pop
dec
add
popa
xor
sbb
jne
cli
fistl
mov
adc
sbb
mov
adcl
sbb
cmp
push
rcrl
icebp
xorb
fs
mov
or
dec
cmp
and
fs
rol
stc
xchg
imull
lret
out
cli
gs
and
iret
push
jg
shl
and
ret
sub
lock
pop
decl
mov
cwtl
je
ret
repnz
mov
imul
call
or
into
enter
int3
fwait
movsl
inc
pop
mov
insb
jp
out
das
inc
daa
mov
xchg
dec
ret
xchg
aas
cmp
mov
or
jge
mov
in
mov
add
and
fs
cmp
cmp
dec
aad
pusha
push
aad
in
movsb
in
push
mov
xchg
sbb
adc
cmp
sbb
pop
data16
incb
push
sub
ret
lahf
or
jae
es
add
lods
and
mov
arpl
xlat
jl
js
push
lds
shlb
jnp
insb
scas
in
aad
jae
xor
aas
xchg
movsl
fimull
cli
sti
aaa
xor
sbb
pop
dec
lock
lods
test
jmp
cmp
arpl
add
add
xchg
and
xor
shrb
test
cwtl
test
enter
sub
andb
pop
sub
idiv
sahf
xchg
enter
sahf
inc
shrb
mov
sub
scas
mov
jno
sub
in
dec
mov
lret
push
push
cld
insb
aas
add
xchg
imul
xchg
fs
cmc
cwtl
jmp
lea
lret
negb
mov
lcall
mov
arpl
ret
cmp
imul
xchg
jnp
xadd
test
out
lcall
and
push
and
adcb
jge
push
sti
inc
mov
daa
popf
pop
inc
std
or
push
cmp
pop
pop
je
mov
mov
das
fstps
mov
xor
jl
xor
popf
aas
inc
in
xlat
in
lahf
mov
mov
decl
data16
pushf
bt
add
pusha
clc
bt
call
mov
not
movl
bswap
lea
lea
call
pusha
or
jmp
cmp
push
push
movb
lea
jae
pusha
cmc
sub
bswap
not
movzbw
lea
pusha
jmp
pushf
lea
call
clc
bswap
add
sar
rol
pop
pushf
bsr
bswap
bswap
mov
cmp
jmp
pop
bnd
je
adc
jmp
push
incb
aaa
mov
lahf
lahf
jno
xchg
aad
push
inc
sti
pop
push
xchg
std
roll
sub
mov
aam
jecxz
and
popa
sub
int3
and
cmp
dec
inc
pop
lock
jno
and
in
adc
mov
imul
pop
dec
outsb
data16
arpl
push
lock
xlat
jg
add
xchg
loope
cmp
test
icebp
clc
jno
flds
out
imul
jecxz
xchg
xor
das
sbb
repz
and
pushl
lea
call
jle
cmp
test
add
call
push
pushl
lea
jne
lahf
jmp
not
push
seta
bswap
push
pusha
lea
call
xor
clc
test
call
shll
fldcw
cmp
lea
xlat
mov
inc
outsl
stc
mov
mov
mov
jmp
mov
ret
sbb
cmp
lds
cmpsb
pop
sbb
jl
call
jge
cmp
and
xor
fisubrs
out
pop
jo
pop
addl
jmp
sbb
sbb
cltd
out
add
inc
and
pop
call
push
lea
ja
sbb
xor
rcl
not
sub
bt
add
rcl
mov
not
cmc
not
mov
test
test
cmp
repnz
push
pusha
call
dec
or
sub
int3
push
push
xchg
loop
xor
addr16
sub
sub
ret
loopne
repnz
pop
outsb
movsb
lods
mov
cld
fcoms
mov
sub
cmpsb
mov
stos
mov
dec
sub
sbb
loope
shr
lret
sbb
out
leave
sti
adc
cld
stos
or
inc
outsb
pop
movsl
push
pop
mov
jg
fstps
pop
call
push
jns
jno
pop
pcmpeqb
mov
push
push
pop
bound
add
adc
and
xor
outsb
dec
or
adc
nop
add
jl
cmp
fwait
insb
clc
sub
cmp
orl
fcoms
out
fldt
pop
push
inc
fcompl
adcb
dec
test
push
iret
fucom
jne
cmpsb
out
scas
loop
lahf
push
rorl
mov
push
int
pusha
mov
in
comiss
cmp
push
addr16
jg
cli
bound
push
andl
mov
cmp
cmp
daa
ficompl
sbb
inc
or
test
sti
mov
jns
inc
jno
mov
shr
cmp
scas
dec
add
xor
adc
arpl
or
add
int
cmpsl
mov
mov
repz
daa
lret
or
leave
call
pushl
pushf
call
jmp
cmc
bt
cmc
or
pushf
mov
pushf
lea
jne
dec
shld
push
shr
mov
jmp
pushl
popl
pusha
test
cmp
pusha
call
mov
pusha
call
mov
cmc
movsbw
xchg
shld
mov
pusha
cmp
pushf
mov
mov
stc
push
cmp
xor
cmc
cmp
repnz
pushf
lea
jne
test
or
shl
mov
bsf
shl
sub
shl
ror
mov
bt
pushf
test
jmp
shl
pushl
call
call
cmp
xor
jmp
mov
mov
cmp
into
sbb
push
pop
test
je
test
sub
int3
push
ds
clc
jb
jns
push
push
mov
push
ss
pushf
mov
push
repnz
pop
dec
je
dec
xor
jmp
loope
imul
sbb
lods
aad
call
cmp
xchg
mov
int
lods
in
lds
push
push
rcll
pop
dec
ret
lds
adc
test
dec
xchg
in
rorb
addr16
in
push
jns
and
xchg
outsb
pop
fnstenv
xchg
fldenv
add
mov
adc
test
outsl
fsubs
jb
ret
popf
daa
push
mov
out
popf
sub
jnp
sarb
inc
icebp
cmp
leave
mull
std
xchg
int3
cs
test
out
adc
sub
xor
xchg
pop
lds
in
add
fsubl
cwtl
in
hlt
mov
adc
orb
or
cmp
mov
jl
mov
add
jns
adc
lcall
insb
loope
push
out
mov
cmp
fcomip
repnz
popa
sbb
mov
xchg
bswap
xor
test
jo
loop
xchg
xor
ret
outsb
les
jo
fwait
cs
xor
ss
pop
adc
push
negb
les
inc
sbb
jl
outsl
int
loope
popf
sbb
cli
aad
popa
test
in
jno
fsubrs
setp
xchg
pop
adc
in
push
fcmovnbe
add
sub
fwait
call
out
mov
repz
jmp
xchg
negb
movsl
mov
frstor
mov
sahf
out
mov
xlat
vpmacsdqh
lahf
add
jecxz
in
and
inc
push
cs
sub
out
push
pop
fstps
test
mov
cmp
pusha
push
pop
sbb
int3
fs
cmp
ret
or
mov
push
add
mov
push
repz
cmp
into
push
fisubs
push
pop
mov
inc
lret
mov
fisttpll
add
jbe
push
push
inc
inc
fistps
cli
rorb
int
jns
and
sbb
inc
imull
mov
scas
sub
sub
jae
das
or
test
sbb
sub
jae
adc
mov
jge
repz
cmp
insb
add
mov
mov
sub
jne
cmp
push
sbb
pop
mov
adc
movsl
jnp
cmp
js
mov
call
mov
jo
test
icebp
cwtl
sbb
mov
imul
mov
imul
das
xchg
push
push
aad
in
jb
dec
push
loop
outsb
shrl
cli
cmpsb
repz
lods
jp
icebp
pop
insb
jg
repnz
into
mov
lock
ja
cmp
sahf
out
cwtl
and
push
sbbl
inc
push
sar
xchg
pushf
cmp
mov
addr16
sub
jg
add
mov
sbb
int
insb
aam
sti
imul
das
xchg
out
fwait
enter
dec
popf
jno
xor
int
adc
dec
fsub
scas
mov
stc
es
repz
sarb
cmp
add
repnz
neg
add
or
btc
pusha
mov
test
rcr
push
stc
mov
clc
pushf
cmp
pushf
lea
js
pushf
pushl
sbb
jmp
ror
ss
je
pop
mov
mov
jecxz
shrb
mov
mov
scas
jns
jmp
sti
ds
fldenv
mov
add
in
es
rcrb
inc
sub
aas
scas
mul
jns
jo
je
mov
jp
js
aas
es
fiadds
push
mov
test
movsb
lds
jge
mov
fwait
enter
flds
inc
dec
lea
jb
aad
setnp
movzbl
sar
rcl
sbb
shl
shr
rcr
rcl
movsbw
imul
rol
lea
and
push
bswap
btc
shrd
push
clc
mov
cmc
mov
sar
mov
jl
cmp
pushf
cmp
call
call
pusha
test
or
call
call
push
test
lds
pusha
into
dec
mov
call
mov
data16
outsb
pusha
divb
incb
fcomps
inc
shlb
int
nop
addr16
call
loopne
push
loope
std
add
xchg
std
sbb
or
push
fisubrl
mov
not
mov
mov
add
lods
inc
xchg
mov
fdivrs
add
mov
or
mov
or
movsl
push
jmp
adc
pushf
sub
mov
cli
mov
mov
push
or
mov
clc
add
gs
repz
movl
mov
movl
push
pushf
lea
jmp
fldt
mov
dec
clc
bound
je
popf
out
nop
xor
pushf
push
iret
mov
stos
aad
jbe
in
pop
addr16
inc
int
roll
xchg
xchg
shl
push
in
test
loop
enter
or
xchg
fwait
dec
xchg
sarb
mov
jo
pop
xchg
ljmp
ljmp
outsl
pop
xor
and
jge
mov
sub
fs
fs
jb
test
shl
mov
push
not
test
pushf
mov
bswap
mov
add
pop
pushf
movzbl
setb
not
bswap
bswap
not
lea
pushf
jmp
xchg
sub
inc
jp
fwait
inc
lods
mov
jmp
aad
insb
add
or
jae
push
fdivrl
clc
pop
xor
cmp
or
mov
xchg
mov
mov
iret
xor
and
in
inc
push
dec
sahf
jae
stos
mov
imul
testl
mov
daa
cmp
out
mov
mov
cld
inc
fcmovne
les
ds
xor
fcmovb
inc
inc
sub
mov
orb
rorl
mov
jle
mov
and
aas
mov
fcoml
icebp
gs
mov
loop
aaa
inc
sahf
scas
sti
inc
mov
and
add
or
push
jmp
sti
adc
sti
push
mov
mov
xchg
mov
ret
fsubs
mov
add
jmp
fwait
add
in
jge
jbe
xchg
pop
mov
loopne
loopne
hlt
sbb
int3
mov
clc
hlt
cli
add
orb
repz
mov
xchg
add
sbb
scas
inc
cltd
ljmp
sbb
xchg
mov
enter
sbb
sub
cmp
inc
xor
sub
cmp
pushf
nop
sbb
inc
scas
and
inc
movsl
jmp
sub
inc
fstpt
xor
cs
out
or
and
fadd
push
add
adc
jae
popa
int3
mov
push
add
sub
mov
repnz
pop
cmp
cmp
sti
push
mov
xchg
filds
fsubs
jmp
jbe
mov
mov
cmp
xchg
out
iret
movsb
cmp
ret
clc
out
jp
xor
enter
repz
clc
gs
sub
les
ljmp
sti
cmp
ljmp
stos
and
jae
gs
pop
test
push
dec
adc
mov
lahf
push
lods
inc
lcall
stc
fmuls
add
stos
test
adc
and
hlt
xor
ss
insl
mov
push
cmc
add
sbb
mov
mov
pop
jecxz
cmpsb
out
add
jns
cmpsb
lahf
push
cltd
loop
daa
jae
mov
sub
jl
cmp
pushl
scas
or
xor
ret
sub
push
jg
pop
bound
es
add
repnz
fisttpll
or
dec
arpl
in
mov
fs
or
mov
pop
std
addr16
out
mov
mov
data16
mov
pop
into
pop
pop
mov
ljmp
cmp
mov
das
xchg
aam
js
xchg
loop
add
inc
push
mov
mov
sahf
mov
repz
inc
mov
adc
add
push
mov
test
mov
mov
js
fistpll
loopne
xchg
call
jno
pop
rorb
sbb
sar
outsb
add
rcrl
lret
mov
adc
and
pop
insb
xor
lahf
test
mov
push
sub
xor
mov
loopne
shl
cmp
or
cmp
push
rorb
pop
pop
jae
cmp
add
aad
pop
push
stc
orl
cmp
and
mov
in
addr16
dec
xchg
sub
xor
jnp
pop
in
sbb
adc
adc
push
mov
outsl
nop
sub
testb
xchg
push
movsb
xor
mov
jmp
rcr
and
arpl
shll
mov
push
push
test
lock
sbb
pop
repz
push
adc
cmp
pop
jnp
into
lock
xchg
cld
add
push
mov
push
jp
scas
mov
int
add
fimull
fdivrl
and
and
jle
movsb
push
fmul
jnp
std
inc
sub
loopne
loopne
daa
sbb
mov
push
xor
xor
mov
cs
add
cmp
lret
test
rcrb
pop
pop
inc
cli
add
mov
jecxz
fmull
repnz
lea
mov
into
or
push
pusha
movb
pusha
lea
jne
bt
movsbw
mov
bt
test
clc
or
push
push
lea
je
xchg
lea
not
not
pusha
mov
movzwl
call
and
shl
inc
insb
int3
jne
es
pushf
inc
mov
cmp
rorl
push
lock
rorb
pop
mov
jle
and
xchg
popf
ds
or
cmp
cmpsb
inc
mov
hlt
in
test
mov
cld
add
cmp
push
fwait
jo
das
push
arpl
sbb
xchg
inc
lods
js
dec
sbb
mov
sbb
hlt
pusha
mov
pusha
lea
jmp
shrl
xchg
jl
jmp
into
psubw
out
pop
subl
pop
aam
add
adc
jmp
jns
data16
or
cmp
xchg
out
mov
mov
add
xchg
mov
aaa
cli
jecxz
ss
xor
les
cli
or
add
dec
in
sub
iret
adc
hlt
inc
outsl
popf
jb
popf
adc
cwtl
sub
test
jnp
ljmp
pop
sub
repz
clc
sahf
test
jmp
sahf
jnp
mov
ljmp
push
sbb
mov
cmpsb
sub
cmpsl
sahf
roll
fbld
inc
jge
adc
pop
adc
cmpsl
scas
push
mov
xor
and
and
and
push
sbb
repnz
loopne
call
mov
push
cltd
ret
sarb
movl
rcrb
lds
add
cmp
imul
sub
icebp
xor
push
lea
fisttps
rep
cli
mov
sub
jae
lahf
rcrb
push
dec
mov
add
daa
mov
lds
mov
jg
sbb
jb
jns
inc
mov
mov
mov
stc
aaa
rorl
pop
data16
ljmp
sub
sti
add
aad
mov
jg
mov
jecxz
adc
test
push
xchg
movsb
xchg
jno
aad
mov
lock
popa
add
repnz
es
mov
push
add
mov
imul
lds
icebp
pop
out
ja
adc
sbb
cmp
scas
fs
test
cmp
aam
test
adc
in
inc
adc
mov
shrl
repnz
ja
add
mov
adc
cmc
add
push
cmp
stos
repz
and
nop
pushf
xchg
lods
add
push
shll
cmp
push
movsl
mov
jns
mov
into
pushf
adc
fidivrs
jp
or
les
movsl
lahf
cwtl
jp
lea
xchg
imul
jo
jecxz
ljmp
scas
in
xchg
push
xchg
std
dec
mull
sbb
repnz
pushf
btr
sar
pushf
mov
sets
bsr
bswap
lea
shr
test
adc
mov
bt
stc
or
pusha
lea
je
bts
add
xadd
sub
adc
mov
and
push
shr
ror
sar
sub
shrd
mov
jmp
in
fucom
xor
ret
addr16
sbb
push
jnp
mov
cmp
push
and
stos
das
jns
jge
shlb
add
stc
dec
fwait
lcall
insl
push
rorb
insl
lds
mov
in
dec
sub
jmp
push
and
stos
mov
popl
mov
mov
aas
xorl
mov
imul
std
ds
and
fwait
sub
sbb
jb
repz
fsubl
jmp
pushf
movl
pusha
lea
jbe
pushf
push
movl
pushf
push
pushf
lea
jmp
bt
bt
pusha
mov
movzbw
lea
push
cmp
sub
pusha
pushf
xchg
pusha
call
call
pushf
movl
call
movl
call
jmp
and
pop
call
addl
mov
gs
mov
es
mov
test
loop
sti
loope
adc
and
sbb
sti
std
or
int
shl
shr
mov
mov
or
xchg
lret
cmpsb
out
push
adc
ljmp
mov
fwait
sub
inc
hlt
sub
adc
pop
adc
inc
push
lahf
mov
rcrb
add
repnz
pop
lcall
and
sub
sub
push
pusha
mov
pushf
movb
pushf
pushl
ret
pushf
cmp
jmp
pusha
mov
stc
add
jmp
sub
sub
mov
shr
sub
call
stc
pop
ret
lods
mov
test
jns
jns
cmp
or
pushl
in
stc
dec
jecxz
adc
or
pop
xor
jno
in
xor
les
cwtl
cmp
and
movsl
push
int
mov
push
sub
ret
pop
mov
or
lcall
add
clc
mov
jl,pn
push
loope
lcall
repz
nop
dec
pushf
push
lea
jne
btc
shl
push
mov
clc
cmp
call
imul
clc
pusha
add
pusha
lea
jmp
pusha
jmp
lea
je
call
mov
pushf
lea
jb
bts
mov
cmc
pusha
jmp
movb
sub
not
mov
setle
pushl
mov
pushl
mov
stos
pushf
lea
jmp
pop
or
daa
mov
call
pushf
call
or
pushf
push
push
lea
jne
clc
bsf
pusha
mov
test
test
push
bt
or
pusha
lea
je
lea
mov
not
movzbw
lea
movsbw
movzwl
bswap
pusha
movzbw
jmp
mov
or
jl
std
cmpsb
out
sarb
add
ja
cs
shl
xchg
aad
stc
outsl
aad
xor
mov
mov
lahf
data16
bound
push
shll
dec
push
or
ja
loop
jb
dec
push
fisubs
mov
push
add
jl
mov
outsl
sbb
mov
lods
cmp
repz
in
mov
add
adc
cwtl
loop
adc
and
cwtl
loopne
das
clc
pusha
sub
arpl
jle
or
push
jne
xor
add
addr16
nop
jae
and
ds
mov
mov
or
int
movb
mov
icebp
cmp
sbb
mov
into
fwait
push
leave
xor
repnz
stos
out
pop
and
jmp
movb
lea
jne
call
pushf
das
cwtl
sub
std
sub
fs
lds
sbb
icebp
sbb
and
xchg
pop
xchg
gs
sbb
filds
push
aas
hlt
sub
lods
mov
jb
and
insb
jp
int
fs
fidivrl
sub
cmp
int
push
inc
adc
jo
ljmp
add
dec
aas
cwtl
cld
in
cmc
add
xchg
dec
dec
push
cmc
and
push
adc
push
ret
push
sarb
sub
repz
aaa
add
shl
pusha
clc
pushf
add
lea
lea
lea
jns
call
call
movl
pushf
pusha
pushl
popl
push
movb
pushl
ret
in
mov
aaa
mov
push
mov
xchg
fwait
outsl
mov
int
mov
fiaddl
lahf
xchg
movsb
inc
or
pusha
stos
aaa
subl
mov
test
or
pop
mov
pmullw
sub
jecxz
cmpl
add
mov
sahf
aad
xchg
pop
aad
mov
fwait
or
sahf
insl
imulb
out
and
mov
mov
mov
or
lea
mov
scas
jg
add
xchg
xchg
pop
push
in
rorb
test
repz
popf
les
xor
xchg
push
add
movzbl
setne
pop
pushf
pop
pusha
mov
bswap
not
mov
not
mov
jmp
fwait
mov
xor
ret
movsl
scas
inc
imul
aas
or
shrb
mov
mov
call
jnp
loope
cmc
sub
fnstcw
divl
js
xchg
mov
dec
data16
mov
xchg
cmp
jb
add
sbb
mov
out
fldt
outsb
mov
inc
test
sub
pop
push
loopne
mov
repnz
mov
dec
inc
add
mov
fdivrp
call
fldl
cwtl
mov
int3
lds
sub
inc
mov
mov
addr16
adc
scas
negb
xor
fisttpl
jecxz
ss
ss
out
pop
hlt
pop
aas
into
jae
loopne
mov
aaa
jmp
mov
testb
or
adc
stos
xlat
xor
sub
pusha
mov
pop
jno
add
adc
add
bnd
dec
mov
mov
pop
sbb
and
dec
dec
fcoml
gs
mov
or
jge
sub
cmp
add
pusha
fistl
test
iret
fildll
push
sbb
and
jg
idivl
xchg
jecxz
jne
bound
add
fildl
xchg
lret
xor
push
jnp
rdtsc
nop
pusha
jmp
in
inc
test
adc
jo
fisubs
jo
add
repnz
js
cmpsl
lock
xor
out
cs
jnp
sub
inc
pop
pop
iret
inc
lret
adc
xor
dec
xor
int3
add
fwait
inc
out
sar
movsl
sub
add
mov
cs
cmc
mov
ficoms
xchg
loope
cs
js
aad
stc
inc
nop
fdivl
mov
bnd
lock
mov
fcmovnbe
roll
iret
sbb
fcmovb
cli
repz
inc
call
jmp
jmp
and
ja
inc
adc
rcl
ret
imul
push
cmp
xor
add
addr16
pop
push
repnz
decb
mov
ret
sbb
pop
in
mov
mov
roll
jns
mov
out
loopne
cmp
repnz
xor
sub
xor
stc
bt
cmp
mov
movb
lea
jae
pusha
push
push
pushf
lea
jmp
xchg
out
jnp
and
sbb
pop
orb
sub
incb
push
or
sub
out
push
jmp
push
movsb
test
mov
test
in
out
inc
xchg
xchg
xlat
mov
iret
mov
cmp
xor
rcll
mov
xchg
jb
mov
adc
arpl
pop
cmpsb
icebp
mov
jns
adc
or
repnz
fsubs
pushf
movl
call
pushf
mov
movzbl
call
repz
std
pop
dec
aam
in
mov
fiadds
mov
xchg
lcall
std
xor
cmp
fistpl
push
ficompl
and
xor
adcb
jp
das
subl
inc
test
pop
push
xor
nop
mov
push
xchg
jmp
mov
and
cmp
pop
out
add
mov
flds
adc
fwait
dec
add
jno
or
sbb
aam
or
xchg
mov
inc
xchg
inc
mov
and
imul
repz
mov
and
jb
es
mov
lods
xchg
sbb
sahf
rorl
lds
pop
push
xor
xor
decb
stos
mov
jg
test
jg
xchg
xchg
or
pusha
ret
xor
dec
xchg
xchg
mov
int3
dec
mov
adc
movsl
lea
fstpt
into
push
mov
popf
add
and
ds
faddl
mov
testl
xchg
repz
mov
pushf
xor
lea
movzbw
bswap
jmp
mov
adc
fwait
push
popa
stos
push
fsubl
xor
mov
out
dec
cmp
push
push
sub
adc
and
jbe
xor
dec
sbb
fs
cli
dec
push
cwtl
sbb
pushf
adc
xchg
int
mov
stos
jbe
or
lret
data16
mov
imulb
mov
xchg
or
movsl
icebp
out
xchg
dec
jo
or
test
sbb
fs
out
cmp
xor
daa
repz
mov
pusha
cld
call
loop
ljmp
sbb
dec
push
push
xor
dec
repz
gs
pop
subb
mov
inc
dec
jmp
movsb
mov
mov
test
inc
aam
sub
aad
js
loop
push
sti
sti
cmpb
push
shrl
or
and
aad
or
push
xchg
sti
sub
mov
xchg
inc
or
in
cwtl
add
sti
sub
icebp
sub
stos
sti
dec
ss
dec
flds
lods
dec
mulb
dec
nop
cmp
sub
mov
bswap
sbb
notb
inc
addr16
out
test
fdivrl
jmp
lret
je
mov
arpl
push
scas
sub
mov
dec
daa
mov
or
jno
repnz
dec
nop
cmp
xchg
jbe
std
cli
cmpsl
fidivl
incl
test
test
pop
imul
scas
cmp
testb
repnz
mov
pop
mov
ss
outsb
sbb
cmp
insb
xchg
pop
in
je
movsl
mov
push
fistpl
lods
fs
mov
pop
xchg
cmpsl
icebp
cmp
adc
std
mov
sahf
cld
test
xchg
stos
out
xchg
mov
test
push
cld
mov
add
call
cmp
int3
push
cmp
dec
xor
lret
ret
cltd
mov
push
dec
dec
pop
mov
call
xor
sbb
xor
repnz
adc
ret
sub
xchg
mov
addr16
mov
jnp
scas
enter
popl
sub
xchg
cmpsl
sbbb
mov
fnstsw
cmpsl
test
mov
icebp
ret
in
xchg
mov
mov
pop
pop
ss
stc
xorl
lock
cmpsl
inc
pop
push
sti
addr16
repz
sub
cmp
pop
iret
mov
push
sbb
testb
cltd
inc
push
mov
sahf
imul
and
repnz
inc
and
add
imul
mov
and
jne
pushf
inc
call
pushf
xchg
jmp
and
scas
push
fadd
add
mov
inc
lods
jbe
test
enter
bnd
pop
xchg
xchg
pop
add
out
mov
aad
out
int
push
dec
adc
stc
scas
aam
les
leave
loopne
mov
lock
test
arpl
sbb
aad
push
loope
movsl
loop
sbb
or
idivb
dec
inc
push
fildll
mov
std
dec
repz
sub
inc
and
adc
adc
inc
and
pushl
popl
movl
pushl
ret
add
push
popa
je
dec
jae
dec
inc
inc
add
rorb
xchg
movb
cwtl
not
mov
pusha
lea
jmp
pushf
call
mov
lea
je
jmp
pusha
push
lea
jns
inc
call
jno
dec
mov
adc
je
inc
int3
mov
push
nop
popf
push
or
and
call
dec
jo
lods
jg
out
clc
xchg
cmc
les
lret
mov
out
sti
jb
cld
or
cwtl
inc
out
sti
adc
fildll
pusha
ret
or
inc
outsb
sub
out
movsl
sub
subl
jl
sub
jb
or
mov
pop
in
sbb
fildl
sub
test
idiv
push
stc
cmp
call
add
push
jmp
mov
mov
mov
mov
pop
add
loop
nop
jl
insl
clc
and
jp
out
stc
and
cmp
data16
aaa
and
negl
or
push
sbb
aas
sub
cli
out
js
push
xor
js
faddl
add
xor
sub
inc
cmp
nop
dec
pop
cmp
mov
sub
mov
out
fwait
enter
mov
push
and
repz
out
dec
cmp
fstl
nop
ror
xchg
add
repz
cmpsb
fwait
jns
insb
mov
fldl
orb
out
testb
les
sbb
pop
repz
in
mov
adc
cld
xor
cmp
mov
pop
pop
insb
icebp
lcall
xor
jg
mov
test
aas
xchg
adc
mov
in
mov
dec
mov
sub
cld
or
jo
push
xor
repz
in
sub
ret
insb
je
or
jno
ret
push
daa
out
cmp
cltd
movl
cmp
xor
xor
movsb
nop
xor
pop
neg
adc
imul
cmp
jnp
push
xchg
or
jl
cmpsb
nop
push
xor
push
addr16
adc
mov
jle
jo
push
xchg
ds
mov
les
cmpsb
lock
push
push
call
je
lcall
mov
stos
mov
inc
jne
xchg
cmp
pop
imul
cmp
mov
icebp
sbb
xor
cmc
mov
push
lds
arpl
testl
sti
jmp
pop
stos
xor
in
pop
cwtl
js
bound
mov
shrl
aaa
mov
push
int
mov
push
shl
push
add
or
add
inc
xchg
dec
push
pop
add
rorb
or
jge
sbb
xchg
and
cmc
aas
repz
mov
test
out
xchg
add
adc
sub
clc
jmp
mov
in
fimull
clc
sarl
xchg
jle
mov
arpl
inc
shlb
incl
xor
mov
inc
dec
fwait
incl
mov
dec
out
out
mov
movsl
inc
in
mov
mov
shll
jmp
test
int3
cld
mov
rcl
xor
and
es
mov
mov
int3
dec
push
jbe
mov
popf
xchg
cmp
in
and
mov
add
jns
and
ss
push
inc
mov
mov
imul
inc
push
add
xchg
scas
rorl
cmp
push
ss
pop
mov
lods
cwtl
mov
adc
clc
jnp
insl
mov
sarb
repz
xchg
fisubl
popf
stos
dec
out
pop
loope
dec
outsl
nop
sbb
js
mov
stos
addr16
xchg
sub
pusha
mov
test
push
aam
das
dec
clc
xchg
xchg
rcll
xlat
inc
push
cld
jno
push
pop
in
stos
pop
scas
outsb
in
ret
repz
in
cmpsb
ds
push
orl
sub
sub
pop
dec
rcll
inc
notl
inc
lock
xchg
les
imul
rcrb
xchg
mov
mov
clc
mov
xchg
bound
cmp
adc
pop
jmp
jge
pop
mov
clc
mov
jb
mov
es
sub
push
jp
and
xor
ret
pop
xchg
xchg
inc
into
add
pop
push
and
xchg
push
jle
inc
add
sbb
aas
outsb
or
dec
pop
cmp
stos
inc
test
pop
xchg
cmp
lcall
or
sbb
jnp
in
aam
push
pop
lods
jo
or
jne
aam
xlat
dec
jae
sub
aad
lods
scas
jae
add
xor
rol
pop
jns
test
xor
idivl
mov
pop
pop
sub
jmp
enter
mov
jno
sahf
int
clc
push
xlat
loope
push
inc
lds
jbe
pusha
mov
sub
popa
nop
jge
mov
in
jbe
les
jge
mov
fstpl
or
jle
add
xor
inc
je
dec
iret
xchg
xchg
mov
dec
add
add
lret
pop
pop
cmc
sbb
dec
xlat
lret
outsl
cmp
lods
repz
mov
cmpl
adc
dec
cmp
fcomps
or
enter
add
xchg
inc
mov
repnz
pop
mov
stc
pushf
fbld
lods
xchg
jns
pop
inc
mov
add
dec
push
ret
arpl
pop
les
add
sub
mov
push
push
loope
std
xor
test
lret
push
loope
cmpsb
divb
idiv
insl
xchg
pop
inc
jmp
call
push
mov
repz
xor
enter
lret
call
hlt
imul
inc
dec
mov
mov
cmc
bound
movsb
add
jle
scas
push
add
xor
and
jbe
jg
xor
add
gs
xlat
dec
inc
pop
or
lds
ds
hlt
mov
push
shlb
cmpsb
sub
in
push
outsl
cmpsl
gs
loope
xlat
pop
scas
pusha
shr
sub
mov
mov
in
int3
jne
scas
jb
mov
loop
mov
cmc
mov
imul
push
sbb
loope
jno
fdivr
ss
mov
scas
mov
inc
dec
out
cmp
xor
mov
or
mov
shll
inc
or
jno
fstps
sahf
inc
jo
hlt
and
imul
jmp
aad
mov
aaa
incl
call
sbb
push
push
sbb
movaps
mov
aad
test
xor
and
mov
insl
cmp
aaa
pop
int
cli
cwtl
out
icebp
es
add
iret
pop
mov
jno
cmp
and
push
ja
cmp
imul
jmp
gs
ret
imul
cmp
or
lods
lret
jbe
mov
push
stos
sbb
outsl
negl
jp
jmp
inc
xchg
pop
mov
or
std
ret
jmp
in
jle
or
pop
pop
lea
imul
pop
lret
fimull
sbb
cmp
test
movsl
stc
jns
lock
jle
jge
jmp
in
or
or
xchg
out
pop
iret
ja
push
cmpsb
jbe
add
stos
push
adc
je
orb
sti
call
or
xchg
mov
dec
in
pushf
jbe
in
sbb
push
leave
adc
mov
xchg
scas
sbb
stos
out
adc
xorb
mov
xor
add
push
loopne
mov
pushf
cmp
cmp
xchg
adc
mov
mov
call
in
lahf
mov
movsb
int
adc
mov
sbb
iret
xor
out
aam
lods
push
sbb
decb
mov
or
and
push
in
and
fimuls
xchg
sbb
inc
lret
mov
sub
jecxz
mov
aam
sbb
cmc
pop
fiadds
mov
arpl
pop
mov
out
xchg
sbbl
ds
sbb
mov
jns
xor
out
or
mov
mov
aad
ret
mov
pop
daa
cmp
sbb
jns
dec
xor
xchg
fsubrl
aas
sub
and
pop
test
adc
mov
inc
lods
mov
and
loopne
add
lock
repz
mov
and
cltd
sbb
sbb
sbb
stos
outsl
xchg
movsl
mov
fsubrs
push
lock
aaa
shrb
in
imul
mov
movsb
xchg
pop
test
mov
popf
mov
js
scas
jbe
fcmovbe
clc
push
xor
pop
subb
mov
sbb
sbb
mov
and
adc
cs
push
lock
bound
loope
fldlg2
sbb
out
xor
enter
pop
mov
ljmp
insb
inc
sarl
pop
jl
or
inc
ljmp
dec
adcl
test
and
fmuls
lcall
insl
lret
sar
insl
shr
movnti
push
cmp
sub
cmp
adc
rcrl
out
mov
lret
repz
xor
cmpsl
insl
dec
cltd
jl
mov
pop
std
sbb
push
xchg
push
xchg
popf
cmpsl
repz
pop
fsub
ret
jae
jge
fdivrp
sub
sub
mov
pop
jecxz
xlat
xchg
add
pop
loopne
shl
dec
rclb
loop
in
lds
int
outsl
data16
push
pop
fistpl
pop
adc
push
sbb
mov
mov
xlat
and
rolb
jl
mov
push
cmp
sub
push
in
stc
and
xor
pop
out
xor
push
lcall
mov
mov
mov
fnstcw
add
repnz
jecxz
ja
xorl
jg
mov
inc
xchg
imul
adc
fwait
aad
in
pushl
add
decb
cmpsb
daa
inc
or
mov
mov
enter
out
fisubl
mov
sti
sbb
push
fs
push
push
frstpm(287
xchg
movsl
push
push
and
and
mov
enter
xor
jo
cmp
ret
fidivrl
and
in
xor
jbe
fwait
inc
cmpsl
cltd
xchg
xchg
test
sbb
cmpsl
jb
insl
push
loop
stos
scas
push
sbb
fmuls
das
add
push
pop
mov
test
xchg
imul
ds
or
sub
push
jl
addb
std
sub
dec
xor
fbld
cmp
and
xor
jae
adc
push
je
mov
jo
sub
aam
inc
das
stc
inc
stos
sbb
in
mov
cli
mov
out
xchg
dec
cmp
js
xchg
das
iret
mov
pop
les
push
div
out
scas
cmp
and
jmp
push
mov
and
ljmp
mov
cs
inc
dec
testl
adc
in
adc
jp
call
xor
or
ss
lods
cmp
mov
push
mov
cmp
rclb
push
cld
lcall
and
sahf
dec
xchg
scas
mov
stc
mov
sub
pop
test
xchg
mov
cmp
or
cwtl
xor
pop
mov
push
sub
dec
add
repz
jp
inc
rolb
cs
addr16
lahf
test
std
in
dec
xor
insb
pop
mov
loope
leave
dec
mov
jb
loopne
or
lea
outsb
sarl
mov
xchg
pushf
cmpsl
ja
adc
xor
mov
mov
repz
clc
rcrl
popf
into
mov
pop
add
std
outsb
add
adc
inc
xor
lds
test
pushf
out
es
xchg
mov
clc
xchg
pop
jecxz
loop
ds
xchg
mov
inc
ljmp
divb
dec
fcmovu
es
jno
in
popf
lock
sub
negb
push
inc
xor
adc
mov
cld
push
ja
pop
cwtl
dec
out
mov
inc
inc
add
push
pusha
ljmp
fdivs
cmp
repz
xchg
lods
push
mov
cmp
shl
sub
cld
ljmp
movsl
clc
push
idivb
mov
adc
divb
insb
pop
fistps
mov
mov
xchg
push
inc
loopne
mov
out
mov
fbld
xor
xchg
aam
popf
add
jl
insl
lods
mov
mov
insb
pop
inc
and
adc
and
pop
insl
sbb
mov
pop
out
xchg
arpl
mov
lret
pop
movsb
mov
xchg
mov
fiaddl
rcr
cmpsl
addl
add
insl
mov
dec
mov
out
adc
std
fsubs
xchg
test
dec
xchg
stc
jl
subb
popf
sub
ss
cltd
jge
lcall
mov
and
cmp
das
xor
aad
and
int
push
sbb
pop
mov
in
fwait
dec
dec
sub
mov
jne,pn
push
sarb
stos
cmp
ret
cwtl
xchg
add
xchg
sub
xchg
fadd
insb
xor
bound
mov
xor
shlb
nop
int3
adc
jle
push
test
fldl
xchg
xchg
push
loop
adc
je
cmc
sbb
lret
jae
sbb
jno
dec
mov
mov
jle
xchg
inc
js
shlb
inc
sub
push
out
dec
xor
ret
les
fnstcw
inc
sbb
xchg
nop
mov
sub
divb
xchg
sub
imul
mov
dec
xlat
push
bound
cmpsl
mov
xor
sbb
loopne
fisubs
rcl
sub
test
push
cmp
aam
xor
aad
jle
lcall
dec
and
cmpsb
xor
and
les
lock
add
mov
mov
lret
js
dec
fwait
aaa
jnp
test
adc
inc
loope
jbe
arpl
dec
fcomps
rcrl
dec
push
push
pop
push
stos
insb
adc
jmp
xchg
cmc
push
xor
push
xor
add
icebp
cmp
cld
add
add
inc
and
jmp
pop
xor
xchg
sar
mov
div
sub
xor
orb
roll
xchg
mov
xchg
adc
pushf
sahf
add
dec
inc
fs
and
push
and
add
fnstenv
out
and
test
iret
cmp
aaa
repnz
sbb
lcall
cmpsl
sbb
xchg
repz
mov
imul
and
in
aaa
and
mov
mov
adc
fnstcw
and
ss
pop
or
xor
int3
sbb
movsl
adc
cli
cmp
dec
idivb
in
jl
jo
hlt
mov
adc
ficomps
sti
inc
sub
mov
cmp
sub
scas
push
aad
es
mov
add
scas
jge
inc
fucomip
lahf
nop
and
cmpsl
in
ja
fsubr
push
arpl
mov
or
pop
gs
or
roll
jecxz
sbb
insl
sub
sub
popa
ljmp
cmp
addr16
mov
mov
andl
lock
sub
pop
sahf
in
pop
xor
addb
imul
add
and
mov
adc
xor
mov
orb
dec
or
mov
jmp
mov
cmpsl
push
repz
mov
test
js
imul
js
cmp
jmp
dec
mov
test
and
sbb
decb
adc
xor
adc
cmp
mov
fwait
mov
and
jecxz
into
or
sub
lret
cmpsb
mov
ja
fsubrs
xor
inc
loop
mov
scas
test
mov
push
sub
leave
pop
pop
das
loop
fsubs
jno
insb
mov
jbe
pop
lret
mov
sbb
mov
lock
jl
bound
mov
xchg
popf
pop
pop
cmp
xor
xchg
aad
popf
sbb
fnsave
xor
xchg
mov
mov
push
add
aad
or
xor
in
fwait
mov
popf
in
pop
lds
add
dec
sbb
lea
or
push
xlat
nop
sahf
enter
ret
pop
div
xchg
sub
insb
cmp
mov
rclb
push
push
loopne
jge
mov
and
data16
add
dec
pop
add
fdivs
das
jbe
enter
jg
push
mov
imul
sub
xlat
and
shll
iret
inc
xor
jmp
add
sub
sbb
cmpsl
insb
pusha
mov
or
pop
push
pop
loop
clc
loopne
loope
push
adc
xchg
jge
pop
push
pop
or
lods
div
jg
mov
insl
enter
lods
sarl
sub
mov
arpl
add
push
test
movsl
adc
fucom
mov
aam
inc
mov
pushl
push
fucomip
sbb
pop
scas
and
in
stos
sub
fimuls
mov
jne
rorl
and
stos
repnz
sbb
orb
aam
dec
add
fsubs
xchg
sbb
push
stos
mov
jecxz
repnz
fnstsw
fidivrl
and
int
fyl2xp1
rcr
add
push
std
das
pushf
fistpll
jbe
out
push
mov
push
loop
pop
inc
dec
dec
dec
pusha
mov
sub
stos
enter
lea
mov
mov
mov
lock
outsb
mov
in
xchg
lcall
lds
stc
inc
inc
fs
pop
pop
sbb
mov
and
xchg
inc
add
xchg
jne
mov
cld
push
adc
pop
fldl
jnp
ljmp
adc
push
ja
push
jge
fbstp
aad
fistps
lcall
call
cmp
ja
ficomps
lret
add
subb
dec
fiaddl
dec
stos
rorb
pushf
or
xchg
movsl
cmp
dec
lds
xchg
xchg
jnp
xchg
pop
cmp
cmp
imul
sub
imul
add
push
aam
out
push
pop
test
adc
insb
into
and
out
add
cmp
bound
sub
ljmp
test
cmp
cmp
xchg
mov
imul
sub
push
push
ret
push
lds
dec
imul
xchg
sbb
jns
sub
movl
call
ljmp
inc
lods
pop
xchg
cmc
cli
aas
lret
inc
push
push
sub
adc
clc
rcrl
pushf
scas
loopne
mov
jne
jecxz
scas
int3
or
jns
repz
push
sti
nop
inc
dec
push
dec
push
jl
adc
aas
inc
xlat
rcll
mov
adc
ja
push
in
adc
fs
jae
mov
dec
aad
or
lahf
sub
enter
pop
adc
bound
mov
cmpsb
xchg
les
dec
in
pop
or
xchg
sbb
sub
and
ret
xchg
adc
pop
sti
mov
enter
inc
lret
lods
inc
push
add
add
scas
clc
in
mov
jp
leave
cld
dec
out
sbb
adc
cltd
mov
jnp
fists
mov
add
loop
adc
lcall
xchg
int
icebp
out
stos
adc
inc
test
xor
adc
pushf
or
push
pop
jecxz
mov
or
xchg
mov
or
adc
xor
or
push
clc
and
jmp
test
dec
hlt
add
aas
cmpsb
dec
xchg
popa
jo
pop
push
jmp
mov
ja
mov
xor
dec
mov
cmc
mov
mov
int3
push
cli
addr16
inc
mov
mov
cld
outsb
mov
in
ja
jbe
mov
mov
out
push
gs
xor
adc
sbb
inc
insl
xor
inc
or
stos
cltd
lods
adc
xor
ljmp
pop
push
sti
inc
daa
mov
fisubrs
push
inc
push
ss
sti
inc
adc
popf
and
push
sbb
push
push
cmp
in
jl
mov
xor
jg
add
ficompl
sub
pusha
mov
jb
lods
test
add
sbb
inc
push
aad
ljmp
rclb
sub
sub
adc
lret
addb
cmpsb
push
fistpl
add
sbb
sub
ror
data16
xchg
subb
subl
xorb
jae
in
xchg
fimuls
repnz
imul
add
enter
out
cltd
xor
lret
stos
xor
icebp
push
jge
lahf
loope
cmp
mov
jnp
pusha
out
daa
imul
daa
call
rcrb
mov
pop
les
into
adc
icebp
cli
aam
jmp
sub
and
add
jp
mov
or
fistps
sub
lahf
imul
pop
stos
sub
leave
or
ljmp
aad
push
adcl
movsl
mov
pop
ret
jmp
rcrb
lods
std
idivb
jne
ret
push
xchg
xlat
and
pop
xchg
jl
faddl
arpl
arpl
into
sbb
pop
ja
ljmp
shr
jo
mov
inc
lret
push
lods
sub
in
jbe
xor
pop
fistl
pop
lds
xlat
sahf
aad
call
push
mov
pusha
int
lcall
ja
add
shll
xchg
inc
hlt
subb
pusha
pop
int3
nop
push
mov
loope
inc
inc
into
fsub
int3
shl
and
outsl
push
inc
xor
dec
dec
pop
test
outsl
add
xchg
iret
mov
adc
in
push
mov
push
test
xchg
xlat
pusha
jmp
xchg
dec
nop
xchg
cmp
out
mov
add
jmp
in
xlat
jno
bound
mov
iret
repz
and
inc
clc
scas
int
gs
rolb
out
jo
pop
out
arpl
jae
cmp
and
addr16
es
or
xor
push
aaa
mov
dec
and
leave
mov
stc
leave
jg
dec
mov
cmp
inc
mov
sub
bound
cmp
rclb
mov
das
fcomps
idivb
outsb
mov
sub
cltd
loope
outsl
push
and
aad
mov
repz
loope
pop
or
les
sub
fwait
sub
jmp
test
inc
add
inc
enter
pop
in
mov
cli
sbb
cmp
pop
or
sub
jbe
loopne
cwtl
pop
push
sahf
or
shlb
cmpl
rcrb
mov
mov
sbb
xor
stos
push
sbb
push
pop
mov
dec
filds
inc
push
dec
pushf
add
xchg
mov
sub
cmc
xorb
mov
aam
xor
and
lahf
movsb
lds
imul
ss
enter
scas
push
fisttpl
fnstcw
ljmp
inc
jmp
js
pop
mov
xlat
pop
add
push
mov
push
icebp
ror
jmp
mov
inc
lret
add
fnstenv
jnp
ljmpw
jge
imul
test
pushf
into
cmp
loopne
int
fistpll
flds
daa
paddq
in
add
idiv
and
adc
xor
jle
pop
pusha
out
sbb
cltd
mov
es
ret
inc
cmp
aam
enter
frstor
in
cmp
and
or
aam
repnz
or
cltd
imul
lret
xor
in
ss
push
mov
and
cli
scas
pop
arpl
fwait
and
imul
repz
mov
xor
mov
mov
add
jnp
test
sub
sub
xchg
aam
imul
inc
and
aad
jge
mov
cmp
loopne
repnz
jge
bound
adc
sub
adc
cmp
pusha
cmp
cmp
cmp
jmp
adc
neg
jb
int3
cmpsl
adc
mov
sub
mov
ret
mov
sahf
sub
mov
repnz
sahf
ja
out
cmp
andb
cmpsl
or
sbb
rorl
and
jl
sbb
rclb
fistps
mov
lds
cli
out
jg
cmp
cmp
ja
dec
repz
push
push
push
jb
jns
int3
fimull
xor
test
xlat
ror
sbb
push
cs
xchg
mov
les
pushf
jg
in
jae
pop
rcr
subb
repz
cwtl
test
xor
add
fdivrp
xor
daa
fildll
dec
push
sti
mov
or
data16
and
pop
data16
jl
cmc
subb
repz
cmp
ds
push
lcall
and
outsb
ja
dec
xchg
cli
jecxz
xchg
fildll
pop
mov
or
and
aas
adc
add
mov
add
jg
negb
repnz
or
mov
inc
and
testb
mov
pushl
movw
mov
pusha
pushl
ret
pusha
jmp
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
stc
cmp
dec
dec
scas
aaa
orl
add
dec
adc
stos
iret
cmpsl
and
out
leave
aam
fidivs
roll
ljmp
stc
and
pop
fldcw
xchg
and
xor
adc
or
xchg
test
xchg
sbb
jbe
adc
scas
and
lods
xchg
mov
clc
add
call
repnz
incb
std
pusha
pusha
sub
call
sub
rcl
sub
pop
shrd
bsr
pop
pusha
bsr
movzbw
mov
btc
cwtl
stc
mov
inc
shl
movsbw
mov
xchg
mov
lea
add
movzbw
pusha
pushl
pop
mov
mov
pusha
pushl
ret
push
fildl
push
mov
mov
pop
movsl
insl
mov
inc
xchg
leave
inc
testb
js
push
cmp
jg
ljmp
es
xchg
sti
out
into
iret
lods
mov
push
fimull
dec
cwtl
and
mov
test
aam
subb
leave
sti
aaa
orl
add
fcompp
dec
jo
loop
push
xorl
adc
mov
cs
out
shl
daa
insb
mov
xchg
mov
sbb
pushf
dec
sbb
repnz
mov
jae
add
mov
call
aaa
idivb
aad
das
add
je
pop
inc
test
adc
push
dec
sbb
sahf
jle
bound
cld
pop
mov
adcb
jp
mov
add
ret
pop
mov
dec
or
in
jmp
fwait
adc
mov
mov
xchg
loopne
jnp
mov
addr16
xchg
repz
movsb
pop
adc
stos
xchg
in
and
push
lahf
movsl
decl
jge
sbb
movsl
aad
push
rorb
pop
nopl
hlt
repnz
pop
in
ds
or
repnz
fidivrs
add
pushl
popl
pushf
movw
pushf
pushf
pushl
ret
mov
enter
xlat
mov
adc
jge
dec
xchg
inc
sub
mov
add
scas
int3
pop
test
cmp
bound
inc
xor
xchg
rcrb
adc
xchg
mov
ja
mov
repnz
mov
fs
icebp
push
test
adc
mov
dec
jecxz
push
outsl
aaa
mov
cmp
subl
test
decl
sub
dec
mov
mov
shlb
repnz
in
pop
cmc
cmc
stc
or
push
pusha
lea
je
movsbl
push
cmc
sub
daa
shl
pop
bsf
mov
aam
pushf
or
add
jge
mov
shl
shrd
shr
rcr
movzbw
shld
mov
stc
call
addr16
cmp
js
scas
jb
clc
jae
test
jnp
fdiv
add
cmp
dec
push
insb
add
and
sbb
mov
mov
push
push
and
mov
ss
and
in
cmp
mov
shlb
pop
adc
and
sub
cmp
xor
hlt
pusha
insb
js
mov
gs
jo
arpl
jge
call
loop
xlat
es
enter
into
lretw
inc
lea
stos
nop
shll
sbb
adcl
out
jo
loope
pop
or
and
or
test
shrb
pop
jo
or
pop
pop
iret
mov
cmp
sbbl
add
and
or
cmp
scas
dec
in
inc
aam
cwtl
mov
scas
push
fsts
inc
jbe
xchg
adc
inc
push
and
lcall
lahf
mov
sub
lret
and
push
xchg
aas
insl
fs
std
cltd
pop
inc
push
xchg
loop
lea
mov
add
and
dec
or
dec
aaa
mov
dec
out
stos
repz
repnz
aad
pcmpeqw
mov
mov
jecxz
mov
inc
sarl
mov
fs
push
sbb
rcrl
jmp
or
movsl
daa
rcrl
cmp
and
lods
fsubl
repnz
push
fcmovnu
cwtl
ljmp
cmp
pop
lcall
movlps
push
jne
outsb
cmpsb
and
sub
pop
adc
sbb
sbb
or
xchg
inc
les
dec
fidivrs
ret
les
and
push
test
dec
xor
ss
push
cli
idivl
dec
cmp
in
shll
jg
push
sbb
xchg
pop
push
in
pop
add
andb
add
andl
or
sbb
ja
jmp
fstl
lret
sub
inc
adcl
imul
or
std
dec
xchg
pop
mov
sbb
push
mov
jecxz
jl
sbb
ljmp
xchg
jl
lds
push
inc
jecxz
stos
cmp
cmpsb
jecxz
mov
js
or
mov
mov
sub
shlb
push
jns
pop
xchg
and
stc
ficomps
in
es
mov
mov
pop
pop
and
mov
sbb
mov
sbb
sub
jae
xchg
loopne
test
xchg
aam
inc
fucomip
div
cmpb
jbe
pop
or
cmp
push
inc
mov
clc
pop
scas
pushf
inc
dec
mov
arpl
repnz
inc
sarb
lret
es
add
xchg
mov
xchg
pop
imul
mov
rol
xchg
cld
int
mov
int3
mov
pop
push
dec
andb
cld
cmpsb
xlat
xchg
inc
push
mov
xchg
mov
jno
cmp
out
xchg
mov
jmp
shrl
sub
loop
add
adc
das
imul
sbb
or
aas
aad
adc
jg
inc
jb
dec
mov
je
aam
out
xchg
mov
fcmovnb
mov
and
mov
sbb
nop
ss
mov
out
jp
jbe
pushf
vaddss
dec
rcrl
ret
push
cmpsb
xchg
pop
sbbl
in
nop
xor
lahf
inc
cmpsb
mov
sbb
or
mov
sub
sub
loope
int
xor
fcoml
push
push
cmpsb
mov
sbb
push
add
insl
inc
in
xchg
ret
test
cmp
mov
mov
inc
ss
dec
adc
dec
inc
pop
movsb
nop
mov
imul
or
cmp
imul
das
dec
stos
mov
pop
dec
pop
mov
mov
adc
jbe
cmp
fcmovne
fmuls
mov
xor
or
ljmp
push
aad
repz
and
iret
push
jo
es
test
imul
mov
push
lahf
bound
mov
lock
les
cltd
mov
test
movsb
clc
mov
imul
test
mov
popa
insb
icebp
enter
repnz
mov
mov
mov
lea
push
and
dec
lahf
push
sub
daa
dec
into
movsb
mov
add
cld
lahf
jns
cmp
xor
out
lret
xchg
cltd
iret
add
or
sub
xorl
add
adc
mov
push
inc
push
cmp
into
cmp
aam
sbb
sub
pop
xor
and
mov
bound
or
xor
push
or
dec
mov
sub
pop
or
or
rcr
xchg
mov
ret
jo
aas
sahf
enter
pushf
sub
cmp
data16
lcall
inc
mov
dec
sbb
inc
pop
js
leave
dec
jnp
sub
es
dec
leave
or
sbb
outsb
and
stos
add
sbb
es
cmp
push
jns
stos
dec
sub
xchg
sub
call
movsl
popa
inc
jle
inc
cli
jns
fildll
imull
scas
daa
testl
hlt
jecxz
into
xchg
mov
and
xor
aas
cwtl
pop
push
xchg
push
insl
dec
xor
cmp
icebp
xlat
mov
jb
add
in
ljmp
mov
push
dec
fldt
add
pop
mov
shll
lea
push
jne
ds
in
cltd
and
cmpsb
addb
adcb
sbb
in
xchg
inc
dec
cmp
mov
ret
adc
sti
pusha
sti
cmpsl
dec
daa
ljmp
sub
rcll
sub
add
insl
mov
jne
mov
addr16
pop
mov
js
aaa
mov
repz
scas
xchg
sbb
mov
int
dec
jmp
roll
cmp
mov
xor
xorl
ret
push
jge
rorb
mov
push
jnp
in
sbb
js
mov
jnp
xor
or
inc
jno
xchg
int3
popa
mov
mov
mov
test
pop
adc
loope
lahf
icebp
outsb
out
mov
lcall
mov
repz
or
fcoml
or
gs
aas
cltd
lahf
btrl
inc
adc
lods
mov
and
sub
lret
nop
in
dec
add
mov
mov
add
fisttps
sahf
test
cmpl
adc
dec
in
sahf
xor
dec
mov
jle
cmp
mov
das
sub
dec
jecxz
pop
dec
hlt
xchg
mov
jmp
adc
push
test
or
mov
mov
inc
dec
enter
out
stc
insl
pop
popa
sarb
fwait
and
ret
sarl
jae
inc
sbb
mov
mov
sub
movsb
add
clc
shlb
rcll
jno
xor
retw
jg
xor
mov
stos
cmp
sbb
mov
std
dec
or
inc
push
movswl
fdivrl
outsl
mull
cmp
outsl
outsb
fistps
sub
xlat
pop
rorl
push
xchg
mov
stos
scas
push
out
dec
and
nop
jmp
outsl
mov
jne
fimull
or
out
push
adc
loope
lods
pop
xchg
shl
bound
call
cltd
xchg
cmp
stc
cmpsb
sti
cmp
dec
jge
jmp
mov
xor
fcoms
mov
and
dec
inc
int
pop
mov
hlt
add
clc
loopne
push
mov
xor
leave
adc
add
fldcw
mov
adc
push
cmp
xchg
mov
mov
xor
mov
and
cs
ds
sarl
pusha
cs
push
push
cmpsl
sbb
jp
push
pop
cltd
mov
lcall
arpl
stc
pusha
xchg
cltd
sbb
test
push
repz
mov
mov
jae
pop
mov
sub
add
mov
es
or
and
push
cmp
imul
inc
loopne
inc
push
fdiv
mov
clc
jb
cmc
cld
out
bound
cmpsb
cld
jno
dec
aas
fmul
sub
js
mov
xchg
pop
jae
mov
lods
inc
mov
lods
pop
dec
in
fs
mov
lods
pushf
cmp
dec
fisttps
dec
into
pop
jecxz
jl
pop
out
leave
ja
sarl
test
add
xchg
xlat
stos
mov
sahf
push
les
mov
ljmp
cmc
mov
out
arpl
into
ret
xlat
xchg
sub
bound
push
jg
push
loopne
add
jge
mov
sti
jno
push
stc
lret
inc
shll
jno
xchg
jne
add
aas
cmpb
pop
pop
movsl
iret
jnp
sub
fs
ds
lea
stc
inc
scas
adc
xchg
mov
push
into
test
andl
bound
popa
jns
adc
insb
sbb
je
popf
or
jns
add
lret
es
test
mov
movsb
pop
out
loopne
repz
cmp
mov
imul
into
inc
adc
mov
adc
stc
or
loop
sti
scas
iret
jecxz
dec
jbe
leave
sbb
sbbb
sti
enter
inc
sub
int3
xabort
push
mov
sbb
adc
ja
jp
shr
jp
xchg
outsl
lds
jmp
inc
lea
in
fisubrl
mov
dec
jecxz
addb
test
ljmp
jge
push
repnz
jns
insl
sbb
sbb
idiv
in
test
mov
inc
out
sub
and
icebp
addl
xchg
sbb
mov
xor
fcoml
ss
or
dec
lahf
or
sbb
sub
insb
or
push
out
out
pusha
popa
lods
mov
cwtl
pop
mov
push
sub
lea
or
dec
and
mov
xor
jl
cs
cmp
push
rolb
les
jmp
repz
mov
js
pusha
flds
mov
and
xchg
loop
add
dec
jbe
push
pop
push
push
popf
js
lret
xor
jo
mov
xor
pop
adcl
fistps
mul
mov
push
addl
sbb
mov
iret
loope
lock
insl
and
jg
cmp
jle
adc
repz
mov
inc
popa
sbb
out
xor
into
mov
sub
dec
cmp
insb
jbe
in
ss
adc
add
in
dec
add
add
push
fisubrs
rolb
xchg
cltd
add
es
sti
dec
icebp
sbb
jbe
stos
inc
or
and
push
cmp
push
cmp
cmp
adc
cmp
in
stos
test
pop
es
cli
pop
pop
sbb
or
cld
hlt
cli
or
cmp
ret
push
cmpsb
xlat
adc
loope
mov
out
add
jbe
push
xorl
push
loop
cmpl
les
jae
rcll
sub
shll
sub
dec
push
mov
imul
xchg
sub
add
int
inc
ficoms
or
daa
aad
or
mov
push
sti
lret
xchg
in
add
inc
sbb
sub
xchg
adc
jno
das
std
dec
dec
leave
ss
adc
sahf
jo
mov
nop
mov
xor
incb
fidivs
call
int3
mov
xor
sbb
iret
dec
push
movsl
in
ficompl
lea
and
mov
adcb
jne
out
out
and
into
add
and
adc
mov
mov
call
dec
test
aam
fmul
loop
pop
and
sub
std
sbb
idivb
jle
pop
cmc
in
pop
xor
jmp
inc
in
and
sbb
dec
xchg
pop
pop
push
adc
popl
sub
in
fsubrs
cmp
es
sub
mov
shrl
iret
push
aam
xchg
xor
ret
loope
stos
insb
int3
xor
cmp
ret
shll
adc
fstpt
std
and
popl
clc
pop
sahf
inc
xorl
test
int
ficompl
pop
sti
xor
inc
inc
or
lods
into
jb
xchg
int
das
pop
aas
push
mov
add
adc
mov
cmc
xor
mov
inc
idivb
test
sub
addr16
sub
ret
cmp
push
mov
cwtl
push
mov
cli
in
rcrb
jo
cltd
xor
mov
jle
dec
xchg
push
scas
rorb
aaa
mov
and
cltd
jle
cmpsb
aad
jge
movsb
mov
enter
mov
fisubrl
rcl
xor
int
das
cli
mov
xor
dec
and
push
insb
and
daa
sbb
into
cld
and
cmpsl
popa
pop
sub
ljmp
jmp
bound
sub
jne
popa
jecxz
mov
int3
lret
scas
mov
fs
cmpsl
leave
jmp
jae
inc
lret
imul
fmulp
cld
mov
add
push
adcl
fwait
and
aaa
or
cli
aad
imul
es
sub
jg
push
cltd
xchg
pop
mov
lahf
mov
in
xchg
outsb
rolb
aam
mov
mov
jo
xor
add
call
outsb
add
pop
mov
pop
lock
es
pop
push
pop
sahf
xlat
mov
pop
sbb
cmc
aas
ss
in
and
popa
popa
fdivs
sub
jae
fsubs
lret
jg
shl
aad
fnstcw
inc
push
shlb
mov
fwait
adc
push
mov
jno
cmp
rorl
mov
ror
jnp
cmpsl
xchg
sub
xchg
pop
arpl
cmpsl
xor
xchg
jecxz
cmpsl
rcr
sbb
jae
ficompl
and
stos
test
lods
lods
mov
adc
jge
pop
xchg
fptan
loopne
add
sbb
sub
lods
jns
mov
es
xchg
and
pop
imul
fcmovnbe
and
dec
imul
stos
test
roll
imull
es
std
mov
sahf
pop
mov
jle
cmc
and
or
enter
dec
lock
int3
int
xchg
pop
cmpsl
cmp
test
daa
mov
jnp
into
adc
inc
inc
jl
xchg
cld
pop
push
shll
icebp
jg
outsl
lock
sbb
jns
mov
jmp
mov
ja
repz
and
test
cmpsb
pusha
pop
aas
mov
push
jb
sub
push
shll
lahf
sbb
xchg
sbb
nop
lret
mov
lea
push
js
insl
faddl
sarb
test
push
push
mov
in
inc
xor
rcrb
and
in
mov
xchg
or
in
ret
mov
lea
push
inc
or
mov
sub
fildll
jmp
cld
ret
pop
imul
scas
pop
xchg
mov
adc
cmc
pop
movsb
sub
or
lock
cmpsb
sbb
aam
mov
icebp
fpatan
jo
mov
cli
push
out
andl
addb
push
insb
cmp
movsb
mov
push
push
gs
jb
gs
je
in
push
lea
in
and
ja
fwait
cmp
and
mov
inc
neg
mov
loope
outsl
std
xchg
pop
icebp
xchg
testb
ja
pop
or
mov
push
fsubrp
cmp
push
mov
mov
sub
sub
stos
jge
mov
sub
xchg
add
sub
cmp
in
int3
sbb
and
into
mov
dec
mov
jo
or
lret
xchg
and
push
call
sti
adc
repnz
inc
adc
pushf
add
popa
adc
mov
in
mov
inc
loop
xor
arpl
aas
or
sub
mov
gs
pop
mov
test
mov
mov
adc
mov
repnz
mov
out
dec
sbb
stos
adc
fcomps
int
jecxz
dec
cmp
je
add
mov
pusha
ljmp
inc
inc
ret
xchg
push
ss
ja
xchg
std
jnp
repnz
dec
push
mov
sbb
pop
in
lahf
xchg
aad
pop
pop
jl
imul
lds
sub
mov
cltd
mov
adc
mov
lods
and
sti
mov
pop
mov
in
xor
fmul
pusha
jnp
push
jl
dec
aas
imul
leave
xor
push
cmp
push
and
lret
aas
mov
sub
popf
jl
jae
outsb
mov
xchg
fs
imul
xchg
pop
scas
les
inc
jge
mov
cmp
enter
cmpsl
jmp
int
fwait
pushl
sbb
out
sub
ss
sub
in
imul
push
popf
adc
in
imul
mov
or
mov
cmp
dec
aaa
pop
ja
or
xchg
push
into
enter
pop
sti
sub
cld
imul
outsl
sub
mov
stos
notb
loope
xlat
in
fwait
aas
and
filds
mov
adc
jp
push
in
mov
dec
xchg
dec
xchg
pop
dec
in
out
icebp
sub
add
mulb
xchg
stos
jl
adc
jecxz
adc
mov
and
pop
insb
fcoms
imul
jmp
sbb
aad
and
mov
loopne
mov
lock
jecxz
pop
cwtl
or
negb
stc
mov
and
pop
and
dec
cli
rorb
enter
in
inc
or
adc
pop
mov
xlat
dec
lds
xlat
arpl
movsl
inc
jmp
insl
jle
xchg
das
mov
lods
sub
fistpl
daa
sahf
iret
adc
mov
addr16
xchg
push
adc
adc
sarb
lret
mov
inc
push
adc
lods
repz
xchg
pop
mov
add
pop
push
jge
ret
jg
cli
xor
gs
push
push
insl
cld
inc
or
jne
dec
arpl
bound
pop
ret
mov
xchg
std
and
jb
dec
mov
jg
leave
scas
mov
inc
enter
mov
sbb
jmp
add
lods
aad
sub
push
jnp
lahf
hlt
out
jl
sub
mov
lods
pop
push
push
arpl
mov
adc
xor
or
adc
dec
pop
ss
jp
out
imul
clc
in
mov
fistpll
push
rcrb
sbb
sarl
push
repz
pop
ret
out
cmc
dec
out
test
movsl
mov
scas
fdivrl
test
and
mov
incl
cld
loope
push
jbe
rorl
scas
mov
cmp
mov
psrld
cmpsb
adc
pushf
sub
xchg
sbb
outsb
test
lods
dec
and
mov
xchg
cltd
stos
jno
mov
aam
lock
xor
cmp
mov
femms
mov
popf
lahf
xchg
jns
orl
add
add
insl
out
and
mov
push
jns
mov
pop
xchg
jecxz
pop
cmpsb
cmpsb
jecxz
xchg
and
loope
jp
lock
ds
mov
and
sbb
repz
xchg
mov
mov
mov
mov
leave
cli
sub
adc
stc
and
push
cmpsl
mov
mov
jno
arpl
aas
les
add
xchg
es
adc
out
add
jae
imul
mov
test
pop
mov
cmp
jecxz
fs
shll
dec
xor
sbb
es
mov
cmc
sbbb
lea
cltd
inc
mov
sbb
outsb
cmp
xchg
pop
ja
adc
fwait
notl
aas
and
fisubl
and
out
inc
mov
adc
mov
push
add
mov
mov
loop
add
cltd
rclb
lret
sahf
mov
cmp
cmc
shl
ljmp
testl
add
inc
sub
roll
adc
loopne
movsl
pop
loopne
dec
insb
test
int
push
icebp
neg
and
inc
ret
mov
inc
xchg
xor
adc
mov
jne
icebp
add
pop
les
popa
jp
jp
out
jb
sarb
ja
lahf
and
mov
push
inc
int3
push
xor
mov
lds
dec
js
jg
cmp
sub
jbe
imul
pop
call
pop
add
fistl
cmpsl
movsb
adcb
xor
sahf
add
filds
stc
cltd
cmp
ja
jno
push
cltd
pop
push
neg
sub
sti
rorb
rcrl
inc
in
paddq
adc
popa
jo
test
nop
loope
xor
std
repnz
dec
pop
fcmovu
leave
rorl
jns
mov
dec
sub
and
imul
push
test
jo
sbb
or
repnz
push
in
iret
shrl
inc
fwait
jo
rcl
xchg
cld
xchg
cmp
jbe
cli
cmpsl
and
dec
iret
push
dec
insl
or
popf
mov
fisubs
cmpl
mov
pop
iret
xor
push
xor
testl
loop
repz
mov
lea
and
nop
xlat
jae
sub
mov
daa
or
aad
mov
mov
fmulp
out
stos
mov
jp
sbb
repnz
dec
test
ret
jb
xchg
adc
inc
test
sahf
or
fdivrs
fdivrl
cltd
xchg
mov
mov
inc
xor
cmp
shl
leave
mov
pushf
inc
cmpsl
add
js
icebp
dec
out
jne
aam
jbe
dec
lea
lahf
fiaddl
fwait
test
push
lret
or
adc
ljmp
in
pop
dec
inc
or
sbb
sub
inc
fisttps
sbb
push
mov
jmp
dec
movsb
loopne
adc
outsl
dec
insb
stos
mov
pop
inc
sbb
aaa
je
xchg
jne
xchg
push
mov
push
sarl
outsb
sbb
jo
sbb
or
jecxz
scas
out
inc
popa
lret
rorl
sub
xor
cmp
imul
pushf
add
adc
dec
jo
xor
push
jge
notl
test
jne
xorb
insl
dec
loopne
mov
xchg
movsb
mov
push
pop
and
mov
fcmovu
insb
outsl
aaa
jge
les
mov
es
xchg
cwtl
cmpsl
sbb
imul
mov
jne
mov
xchg
lds
in
faddp
cltd
into
push
cmp
dec
or
xchg
lods
daa
enter
into
mov
adc
mov
dec
test
xchg
ss
sub
sbb
jno
push
pop
push
lds
add
push
sub
inc
iretw
mov
xor
jnp
sarb
mov
cmp
cmp
xchg
out
loope
add
fst
pop
xor
bsr
daa
mov
jp
imul
insl
adc
sub
lcall
mov
lds
mov
imul
mov
mov
fimull
imul
filds
repz
xchg
gs
dec
sbb
jge
sub
test
xor
inc
pop
stos
xor
mov
jne
jno
push
imul
jno
popf
xor
xchg
clc
hlt
pop
in
nop
repz
dec
mov
cli
sub
mov
aaa
fildl
push
out
sub
and
xchg
mov
into
mov
xchg
lods
call
dec
xor
jo
xor
cmp
pop
mov
add
jl
jmp
mov
jecxz
mov
xor
sub
dec
scas
inc
cmpsb
lahf
pop
adc
dec
popf
imul
sbbl
push
lahf
aad
out
mov
bound
push
inc
xchg
xchg
pop
daa
outsb
jae
lock
cmp
xor
lahf
jno
jl
pop
push
test
mov
outsb
mov
mov
xchg
push
xor
movsb
sbb
sbb
add
sbbb
ljmp
arpl
add
les
and
mov
shr
lods
fisttpll
lods
aad
std
dec
repz
ja,pt
cmp
xor
fnstcw
data16
sub
aam
xlat
mov
fnstcw
lret
in
pop
jecxz
test
aaa
mov
mov
aaa
inc
cli
adc
xor
out
jge
rcrl
stos
stos
dec
outsb
cmp
pop
pop
cmpsl
repnz
loope
mov
rorl
xor
adc
cmc
mov
jp
repnz
imul
pop
out
push
push
andl
cmpsb
icebp
jp
jb
repnz
mov
jnp
insl
inc
hlt
jbe
outsl
stos
sbb
fs
mov
mov
jecxz
or
stos
ret
mov
hlt
dec
ret
cmp
loope
sahf
mul
inc
imul
sarl
cmp
daa
bound
cld
inc
mov
pop
ret
push
push
repz
or
mov
cmp
jb
cmp
out
adc
xchg
jnp
ja
arpl
lds
repnz
pop
dec
fs
jo
cld
jp
inc
cmpsb
jl
pop
aaa
cmp
and
popa
ljmp
popa
test
es
dec
in
push
rolb
popf
jle
out
xchg
sub
out
out
push
mov
or
or
cmpb
xchg
jns
adc
push
jmp
fiaddl
jle
aaa
xchg
jb
jmp
adc
dec
jns
mov
pop
lret
jns
push
shr
mov
div
repnz
xchg
mov
shll
mov
xchg
mov
and
test
or
stc
jl
or
jo
jl
add
xor
inc
mov
lret
and
jmp
cld
sub
mov
movsl
jnp
xor
sub
mov
jmp
push
daa
fwait
sbb
push
mov
adc
and
test
das
lods
inc
mov
bound
pop
repz
ss
xchg
loope
mov
scas
stos
shrl
mov
cmpsl
and
sbb
adc
sbbb
and
cmpsl
in
fistpll
aam
mov
mov
jg
jo
mov
sahf
loopne
loop
out
dec
setne
pop
test
dec
push
pop
sbb
inc
out
fs
adc
repnz
dec
arpl
icebp
sub
adc
subl
add
cmp
js
popf
cmp
xor
xor
jbe
leave
jo
pop
sub
aad
mov
dec
fstpl
dec
mov
shll
mov
jg
scas
loopne
insl
mov
adc
mov
in
repnz
imul
jbe
dec
jo
pop
les
mov
not
adc
mov
ficoml
test
and
or
pop
cs
inc
xchg
popf
pop
and
dec
jbe
and
inc
cmpsb
aad
outsl
push
lret
push
mov
mov
xchg
mov
dec
mov
rcll
imul
aaa
gs
mov
pop
out
outsl
xchg
outsb
dec
leave
fisubrs
test
ret
pop
icebp
sub
add
cmp
jge
dec
and
mov
mov
popa
mov
or
dec
ss
push
xchg
push
jp
mov
rorl
mov
cmp
adcl
add
leave
jno
add
sti
mov
xor
dec
mov
nop
adc
ljmp
mov
sti
pusha
adc
dec
inc
and
hlt
ja
imul
mov
jl
sub
add
inc
xchg
std
incl
xchg
mov
fldt
mov
je
lds
sbb
and
int
leave
mov
or
or
push
frstor
push
jecxz
decl
stos
aad
xchg
xchg
fmull
pop
fnstsw
shrl
dec
sbb
out
mov
cmp
int3
faddl
frstor
aaa
idivl
fcomps
xchg
inc
pop
fs
cld
sbb
cmpsl
mov
xor
push
xchg
scas
popa
jge
adc
aam
loopne
inc
xlat
aad
mov
jmp
lea
lahf
adc
mov
leave
push
fidivrl
sarb
pop
gs
bound
fsubrl
mov
in
sub
movsb
fisubrs
xor
movsb
inc
mov
xlat
icebp
xor
fimuls
sub
lods
xchg
cmp
dec
std
idivb
xlat
sbb
xchg
add
mov
lahf
pop
data16
pop
xor
jb
clc
jne
sub
into
push
mov
sbb
fcmovne
cli
sti
ss
sub
mov
rcrl
xchg
or
in
cmp
cmp
sub
mov
and
sbb
rorb
mov
inc
in
shrd
push
sbb
jae
sti
movsl
xchg
push
aam
pop
setno
scas
shrb
imul
loop
aad
jecxz
inc
subb
cmpsl
jno
ja
lock
shlb
cmp
inc
push
popa
pushf
mulb
mov
add
xchg
cs
mov
scas
jecxz
mov
fwait
sub
mov
fs
popf
sahf
lret
push
mov
sub
push
inc
xchg
scas
ds
adc
popl
imul
mov
orl
xchg
adc
dec
jmp
xlat
ds
dec
xor
popf
inc
cltd
in
or
xchg
push
cmpl
pop
add
and
jle
push
fcompl
loopne
mov
inc
xor
adc
push
mov
movnti
xchg
subl
test
sbb
xchg
dec
dec
mov
inc
addr16
xor
lret
pop
add
mov
pop
xchg
sbb
adc
ds
and
mov
and
mov
into
orl
fs
fstp
stos
stos
jg
lret
add
das
jp
and
pop
mov
add
data16
loopne
sbb
jg
je
cmp
push
loopne
ret
inc
mov
push
or
fsubs
jb
add
insb
push
dec
das
xor
inc
pop
xor
lods
aam
faddl
and
orb
enter
or
mov
clc
stc
or
push
xchg
arpl
mov
pop
cltd
cs
stos
push
mov
pop
test
xchg
push
pop
xchg
stos
movsb
add
aas
mov
ficompl
xchg
repnz
push
shlb
push
clc
loopne
mov
stos
cs
rolb
repz
jb
xchg
mov
stos
movsb
add
dec
pop
out
and
outsl
lods
cli
shl
xor
and
icebp
ja,pn
fsubs
insb
lock
daa
sbb
scas
fisubrs
adc
adc
jl
fdivs
je
dec
push
mov
and
call
js
lret
mov
dec
shrb
out
xchg
negl
push
lds
je
cmp
push
pop
pop
sbb
cmp
xchg
dec
push
sub
mov
repz
lahf
xor
repnz
in
pop
jnp
jl
in
inc
cmpsl
jnp
or
sbb
adc
pop
push
or
pop
std
testb
or
adcl
xchg
inc
add
pop
push
ja
inc
gs
stc
sbb
test
inc
add
es
jnp
orb
repnz
sub
jno
dec
scas
lods
dec
aaa
push
pop
cmpsb
rol
test
and
pop
mov
push
pop
rcl
pop
rcrb
test
outsb
jecxz
adc
sbb
pop
adc
pusha
mov
cmp
neg
in
fisubl
int
and
enter
insb
inc
shlb
push
mov
adc
xlat
notb
dec
rorl
jg
stos
xlat
je
cld
jg
xchg
movsl
mov
aad
adc
icebp
cmp
les
data16
fstl
icebp
dec
ja
lret
xchg
aaa
pop
xor
fsubrs
cmp
push
adc
or
pop
or
adc
dec
out
mov
xor
xor
sbb
repz
mov
or
mov
xchg
ret
lret
test
jno
popa
and
shlb
cltd
inc
mulb
jle
mov
pop
int
or
pop
lahf
out
dec
push
jg
out
sbb
icebp
insl
lods
pop
int
test
js
push
adc
data16
outsb
jbe
ret
push
add
aas
add
repz
and
jne
lcall
fimuls
jmp
add
les
xchg
sti
addr16
xlat
into
pop
out
ss
ja
in
xor
int3
mov
in
pop
push
mov
daa
insl
inc
or
mulb
pop
mov
aas
enter
fs
sahf
and
mov
jnp
inc
adc
filds
mov
std
add
inc
jp
mov
pop
and
xchg
sbb
lds
ljmp
mov
inc
pop
sahf
fistpl
push
sub
add
add
loope
xchg
out
xchg
pop
mov
push
lock
lods
into
aam
cmp
pop
test
aad
addr16
aas
or
xchg
gs
jg
jecxz
mov
pop
ss
jmp
ret
test
lahf
and
adc
sub
pop
mov
lock
es
hlt
sbb
jp
ja
push
mov
movsl
add
xor
roll
inc
fisubrs
fstpt
cli
fcoms
test
pop
sub
cs
data16
aad
scas
cmp
insl
aad
out
lods
cmovns
cwtl
daa
rep
cmpsl
leave
push
pushf
push
sub
outsl
jge
xlat
mov
std
push
stc
cmp
fistpll
or
pop
inc
mov
mov
insl
out
lcall
je
pusha
leave
dec
dec
add
fcoms
mov
mov
in
arpl
ficompl
jmp
aad
cmc
scas
jl
in
adc
sbb
lahf
and
xor
lret
shl
test
cmpsl
inc
call
adc
jmp
movsl
cmp
dec
cmpsl
cwtl
jle
adcb
adc
inc
out
jmp
movsb
jbe
inc
movsb
sbb
ret
test
sub
jne
and
enter
add
lods
add
movsl
mov
lock
push
mov
add
movsb
pop
cmpsl
cli
aam
rol
and
pop
dec
add
and
mov
test
aas
cmp
push
fisubl
add
sbb
adc
insb
adc
aam
sti
les
mov
movsb
shrb
imul
push
pop
aaa
pop
dec
or
ds
lds
ss
stos
cmp
rcll
dec
iret
xchg
sbb
cmpsb
fdivrp
fs
xor
dec
lods
lods
pop
jecxz
xchg
out
popa
cmp
lods
lret
outsl
or
jg
aad
push
icebp
xchg
loop,pt
call
adc
orl
jae
push
cmc
fidivrs
rcrl
aaa
xchg
sbb
movsl
arpl
daa
mov
or
xchg
xchg
lods
stos
add
xor
adc
aad
mov
mov
js
mov
push
fwait
xchg
xorl
test
add
scas
lock
xor
mov
ret
add
aad
in
xchg
or
mov
jg
out
es
cmp
sbb
pop
xchg
pop
movsb
loope
xchg
inc
add
jno
popa
jb
pop
movsl
lret
outsb
fisttps
sbb
add
mov
push
push
nop
imul
leave
add
or
lret
insl
pop
adc
adc
pop
imul
sub
mov
js
and
and
sub
mov
negl
es
xchg
scas
dec
jbe
lahf
sub
pop
xor
lea
dec
ds
push
mov
sahf
mov
mov
inc
and
push
mov
jnp
mov
es
and
movsb
sub
dec
xlat
repnz
xor
popf
fprem1
scas
and
hlt
adc
xchg
loopne
in
gs
out
ss
xchg
cmc
inc
xor
imul
mov
in
push
loop
jb
sub
mov
daa
pop
imul
sub
pop
add
jl
lahf
mov
imul
mov
inc
stc
xchg
or
nop
ror
cmp
jecxz
dec
xchg
adc
sub
and
lock
cld
xchg
xchg
lcall
pop
push
sub
hlt
xchg
popf
ret
arpl
bound
push
shll
dec
mov
fsts
inc
mov
fnstenv
cmp
xchg
xor
fldl
mov
mov
rorb
outsl
jno
fldl
inc
std
mov
pop
ljmp
pop
stc
or
xchg
dec
or
mov
xchg
fidivs
inc
jnp
nop
sub
sbb
mov
out
mov
inc
sbbb
out
adc
xlat
push
int
sbb
inc
sub
mov
mov
mov
adc
push
mov
adc
mov
inc
repz
mov
mov
cmp
mov
ret
xchg
push
lret
dec
lcall
das
or
jp
or
inc
cmpsb
data16
xchg
fyl2x
pop
sub
push
movsb
xchg
lahf
sub
inc
das
cld
jmp
std
lahf
mov
pop
add
lahf
push
fiaddl
stos
inc
imul
in
jg
mov
add
mov
lret
adc
sbb
push
insl
sub
push
sbb
jnp
scas
inc
imul
test
push
ja
iret
gs
shrl
pop
lcall
int
mov
in
ds
fs
mov
shlb
call
movl
pusha
pushl
pushf
movl
movb
movb
pushf
movw
lea
jmp
mov
pop
mov
lret
jmp
std
xchg
aas
or
int
mov
fidivrs
arpl
mov
loope
scas
cmp
hlt
sbb
addr16
lock
adcb
dec
fistpl
repnz
repnz
rcll
inc
adc
rcrl
mov
sti
sahf
push
scas
push
and
mov
mov
adc
add
pop
lea
call
call
add
add
and
adc
and
sbb
and
or
add
add
add
jb
sub
add
add
add
jecxz
add
pusha
jmp
pusha
push
cmp
out
ret
inc
pop
stc
push
mov
inc
insl
aad
addr16
js
lds
xchg
push
or
or
cmpl
cmp
adc
inc
cltd
or
pop
xor
ja
inc
scas
mull
inc
and
mov
cmp
xor
rorb
xlat
mov
mov
or
orb
outsw
adc
loop
fldl
jle
jbe
adc
dec
mov
movsl
repz
cltd
mov
push
xor
mov
int3
xor
add
mov
mov
in
inc
in
push
pop
int3
imul
je
jae
scas
orl
xor
mov
sti
leave
mov
imul
pop
test
mov
add
sbb
mov
push
xchg
jg
sub
xorl
mov
push
push
or
gs
sub
inc
enter
lcall
add
rcrb
xchg
jo
shr
mov
inc
das
mov
cmp
dec
lods
xchg
push
or
aas
and
test
cli
data16
xor
jb
aas
pop
jne
push
ds
sbb
pop
sti
and
dec
adc
imul
jno
lret
push
mov
and
sbb
xor
idivl
jb
cld
enter
fiaddl
push
and
movsl
icebp
add
std
lcall
fsubs
xlat
pushl
mov
jmp
xorl
xor
hlt
scas
leave
rcrb
sar
orl
shl
gs
in
sub
pop
gs
mov
enter
jecxz
dec
aad
add
iret
lods
pop
and
lock
sbb
sbb
out
jne
xchg
or
push
jae
les
add
push
add
sbb
sbb
lods
jne
sbbb
cmp
push
addr16
dec
call
fprem
or
cwtl
es
lods
sbb
xchg
pop
mov
out
and
std
fwait
movsl
mov
jmp
push
rol
pushf
movb
push
jmp
pusha
call
insl
mov
pop
fiaddl
cmp
xchg
ljmp
aam
stc
mov
or
jno
stc
pop
inc
bound
xchg
mov
lock
dec
in
xor
pop
ja
mov
out
push
rorl
xchg
rcr
in
daa
mov
fistps
das
popf
mov
loop
push
xchg
cld
pop
xor
mov
and
repz
fstenv
call
mov
adc
push
cmp
push
filds
xlat
lods
inc
aam
ja
add
out
jp
mov
or
xor
jns
mov
movsl
dec
push
fwait
jne
inc
mov
push
or
shll
pop
jbe
fadd
ja
push
mov
ja
lods
fbstp
jmp
rcrl
jecxz
fldt
les
repz
xchg
mov
imul
dec
dec
push
inc
push
dec
cs
insb
add
leave
movb
movb
lea
je
bts
movzbw
xor
sar
movzbw
not
sub
mov
shl
xchg
aam
mov
stc
cmc
shr
bt
shr
inc
bts
mov
pusha
pushl
sub
jp
pusha
or
push
lea
je
add
btr
cmc
or
add
movzbw
bswap
sub
setns
sub
bts
shr
jmp
mov
pop
lods
or
sub
rol
sbb
xor
dec
sbb
rol
sub
shl
neg
cmc
add
shld
pusha
sub
sub
sar
xor
lea
mov
push
movzbw
mov
push
lea
seta
lea
mov
lea
setb
mov
lods
stc
call
pushl
movl
xchg
movb
mov
pop
movzbw
lea
push
jmp
cmp
clc
stc
or
pusha
pusha
jmp
inc
cmc
push
leave
push
notl
jns
popa
add
rcrl
sub
or
mov
popa
or
adc
mov
stos
xor
sbb
dec
jnp
add
adc
push
frstor
fsubl
stc
jo
jl
andl
jbe
shl
cmpsb
fidivl
mov
add
dec
add
inc
int
fildll
push
and
roll
pop
das
cld
mov
ja
dec
jg
hlt
cld
mov
lods
fadd
xor
sub
rcrb
cmc
add
sbb
pop
mov
ret
pop
inc
in
jbe
addr16
lcall
fsubrl
rclb
adc
call
ljmp
into
aas
test
leave
sub
add
pop
sbbb
mov
out
test
mov
dec
fisubl
inc
pop
das
cld
gs
add
mov
sub
aaa
in
std
dec
jne
lods
xor
std
xchg
es
mov
push
aam
fisubrs
lcall
pop
das
cld
sub
sub
ficoms
outsb
mov
sub
mov
xor
imul
arpl
in
pop
cmpsb
adc
imul
sub
or
xor
adc
repz
xchg
fcomps
add
push
pusha
pushf
lea
jbe
lea
mov
movzbw
jmp
ss
fisttps
pop
ja
fmulp
arpl
aam
and
push
jnp
das
jl
inc
jp
cmpsl
sbb
test
mov
jnp
xchg
sbb
adc
ficoms
or
shll
inc
dec
outsb
ret
xor
pop
xor
pushf
and
fimuls
mov
addl
and
mov
lock
inc
add
lock
sbb
mov
xchg
sbb
sub
int3
sbb
cli
xchg
xchg
cwtl
bound
push
mov
scas
cmp
adc
or
xchg
adcb
in
push
add
mov
clc
inc
or
bound
jb
in
cmp
xorl
nop
jmp
loop
js
sub
popf
faddl
mov
cmp
ja
mov
fiaddl
lret
cmpsl
cli
cli
lods
sbb
rolb
dec
xor
es
cld
test
jp
add
ret
or
iret
popf
inc
push
sbb
test
xor
cli
xchg
inc
repz
nop
lahf
rcll
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
sbb
push
loope
daa
cltd
mov
loopne
nop
fldenv
mov
enter
rcrl
outsl
mov
in
mov
pushf
shlb
mov
sti
mov
cmp
aas
fnstenv
lret
daa
add
ds
jl
mov
dec
and
mov
test
cli
in
sahf
jb
inc
mov
lcall
lcall
pop
mov
fs
test
and
in
std
xchg
gs
fsubl
adc
sbb
dec
adc
mov
pop
sbb
stos
adc
gs
pusha
add
push
dec
adcb
js
push
mov
popa
mov
pop
xchg
dec
add
mov
in
scas
ja
ja
bswap
jns
lcall
out
or
mov
pop
push
xchg
lods
push
lahf
mov
lock
mov
push
jb
jb
insl
sbb
repnz
stos
inc
cmp
icebp
mul
mov
scas
and
loopne
or
mov
movsl
lock
shll
xchg
rol
inc
into
rorl
mov
lock
ret
insb
aad
gs
aaa
popa
mov
mov
and
iret
popf
test
shrb
arpl
cmc
out
push
aaa
push
add
aaa
mov
dec
stos
cmp
loop
or
int3
pop
popa
sub
sbb
xorb
sarb
cmp
scas
sbbl
sub
stc
scas
add
sub
icebp
jl
xchg
repz
xchg
lret
cs
and
test
adc
sbb
push
sub
shrd
daa
call
push
pushf
lea
jne
jmp
and
mov
mov
adc
add
insb
jae
jb
outsb
inc
add
cmc
or
mov
bswap
add
adc
adc
rol
movl
btr
pushf
neg
movzbl
mov
sub
cmc
cmp
pushf
lea
jbe
dec
sub
bts
sar
xadd
mov
movzbw
inc
cmp
mov
bsr
push
rcl
add
bts
lea
inc
shl
shr
stc
xchg
btr
mov
sar
pushf
add
push
pushf
mov
lea
call
push
push
xor
xor
fs
insb
add
cmpsb
adc
addb
push
xchg
cmp
dec
push
add
jecxz
mov
testl
scas
mov
adc
cmpsl
pop
fists
aas
out
xor
add
pop
mov
outsb
inc
adc
ret
stos
das
sahf
into
jb
mov
ljmp
jb
icebp
popf
jmp
fs
mov
sbb
std
xchg
into
fisubs
adc
inc
fmuls
out
lahf
js
push
cmp
lods
xchg
popf
test
sti
adc
mov
test
push
mull
jno
sbbl
sarl
mov
add
lcall
cmpl
sub
pop
inc
cld
in
mov
test
mov
xchg
mov
imul
pop
jle
movsb
sbb
jo
mov
loop
fwait
pop
mov
in
pop
xchg
repz
mov
fstps
leave
sar
arpl
and
xlat
jmp
stos
inc
sbb
sarl
and
adc
icebp
idiv
loope
fbld
inc
xchg
out
add
std
mov
and
je
bswap
seto
pusha
bswap
lea
mov
pushf
push
movzbw
movzwl
bswap
not
movsbw
bswap
lea
bswap
call
in
and
xchg
inc
adc
fwait
js
jecxz
adc
lds
flds
popa
sbb
pop
mul
pop
icebp
test
inc
out
add
push
pop
sub
pop
fs
sub
pop
dec
sbb
sti
aaa
es
dec
push
jo
add
pop
xor
xchg
pop
xlat
inc
sub
inc
enter
mov
add
add
or
aam
mov
loopne
pop
int
sbb
xchg
jl
test
enter
jbe
pop
xchg
subl
inc
pop
jbe
or
add
xchg
jns
addr16
and
icebp
flds
mov
gs
push
shlb
pop
sarl
aaa
pushf
gs
cmp
shlb
or
pusha
xor
or
xchg
pop
jle
out
and
inc
lods
rcrb
clc
bound
int
sahf
and
in
push
push
mov
jb
adc
leave
mov
pop
enter
xor
sub
std
aad
inc
mov
and
int
adc
test
push
push
ror
push
push
mov
dec
and
mov
enter
and
out
sbb
ss
repz
lea
or
out
add
call
and
mov
add
sub
or
cld
movsb
insb
adc
cltd
lret
xrelease
cs
shlb
insl
mov
repnz
push
and
addr16
sbb
jp
and
pusha
fldl
xchg
or
adc
fwait
lods
pop
lods
jge
mov
lret
pushf
loope
xchg
mov
jo
lock
sub
popa
std
sub
sahf
repz
ljmp
fld
xor
or
scas
cmp
sub
std
mov
icebp
sti
decl
aam
add
pusha
pushf
movw
mov
pushf
movw
movw
lea
jmp
out
lahf
lret
fwait
mov
lds
push
push
dec
xor
inc
dec
xor
adc
je
rorb
ds
add
cmp
int
lret
addb
mov
ljmp
imul
jecxz
sub
inc
hlt
jnp
or
nop
add
js
jnp
adc
lods
mov
or
xchg
fsubrp
cwtl
in
mov
pop
adc
or
in
ljmp
aad
pop
pushl
popl
movzbw
bswap
call
out
inc
outsb
jbe
loopne
inc
imul
bound
sar
mov
shrl
jb
jno
lock
and
lahf
shl
push
lods
mov
cmp
cs
ret
test
jg
loopne
pop
sub
dec
iret
loop
sub
lret
loop
pop
das
aas
inc
outsl
das
sahf
fistpll
adc
jecxz
xchg
xor
into
cmp
roll
lods
cltd
cmpsl
mov
jmp
repz
xchg
sbb
adc
mov
test
movb
cmpb
pushl
mov
lea
jne
cwtl
sub
aam
btr
or
shl
mov
and
add
add
adc
dec
and
mov
stc
test
pushf
pushl
movb
jmp
repz
out
xlat
inc
sub
movsl
cwtl
jne
orb
jl
push
push
loopne
mov
xchg
shlb
outsb
and
cmp
aaa
inc
sub
xchg
push
xor
cmp
adc
push
orl
pop
mov
lods
enter
xchg
mov
jle
and
pop
xor
scas
add
out
sub
repnz
push
sbb
out
xchg
testb
outsl
fwait
cmpsl
jae
sub
leave
repz
mov
adc
mov
sub
in
into
negb
dec
repnz
xchg
mov
imull
mov
cmpb
push
jae
out
sbb
lahf
push
test
mov
or
fnstcw
and
cmp
adc
or
xor
push
adcl
fidivrl
or
addr16
scas
push
and
cmp
push
jo
addr16
movsb
sub
loope
cltd
sarl
or
shl
std
mov
dec
jne
sub
inc
enter
dec
xor
adcb
ret
cmpsb
sar
or
jbe
inc
jmp
mov
pop
test
movsl
ja
and
push
popf
in
fildll
push
test
std
mov
lret
jecxz
jmp
dec
int
cmpsb
dec
push
and
jmp
je
pop
jb
movsl
ja
mov
cwtl
inc
sub
sub
fists
jne
mov
rcll
cmp
aam
lret
inc
jns
pop
or
cmpsb
sub
je
sub
jae
sub
sub
ljmp
sar
ljmp
mov
pop
mov
testb
mov
cmpsb
sub
mov
test
sbb
mov
fbld
int3
ja
mov
or
fstpl
inc
sbb
or
xor
out
dec
scas
das
loope
jbe
xor
cmp
xor
movsb
pop
sub
mov
ljmp
mov
lret
std
mov
in
insb
lea
je
lea
not
mov
movsbw
setl
push
lahf
lea
movl
pushf
call
movl
push
movb
pushf
lea
jmp
lea
jae
jmp
push
push
inc
push
xor
cs
insb
add
rcr
pop
or
in
rcrb
mov
lcall
popf
shlb
aaa
stos
or
or
ret
ret
and
loope
cmp
test
mov
scas
dec
xchg
cltd
sbb
aaa
fidivl
icebp
fs
ja
mov
dec
into
push
add
rorl
dec
push
les
mov
outsb
gs
mov
movsb
xchg
jle
pop
and
scas
mov
add
xchg
xor
or
and
leave
arpl
jno
inc
test
repz
mov
sti
xor
jecxz
xchg
pushf
adc
ret
sub
repz
jnp
stos
mov
into
jecxz
test
dec
sbb
mov
xor
lcall
sbb
cmp
clc
add
shlb
jge
jo
stos
sti
popf
test
jae
dec
cmp
fildll
push
add
repz
mov
mov
lea
movb
jmp
adc
imul
adc
jnp
push
xlat
and
adc
es
pop
sub
jge
stos
ficomps
or
test
sbb
mov
push
stos
cs
jb
sub
popf
adc
mov
dec
scas
lds
xchg
inc
push
xor
sub
out
jle
pop
mov
sub
inc
mov
test
into
stc
inc
repz
test
cmp
and
xor
data16
xlat
mov
cmovne
mov
aam
pop
subl
test
call
jle
mov
push
pop
mov
xor
xor
push
jle
cmpsb
xlat
sbb
mov
bsf
popa
into
mov
sub
jno
mov
adc
pop
jae
ljmp
subb
std
test
and
repz
rolb
in
push
sbb
or
call
popl
add
adc
adc
test
aaa
test
lahf
call
or
jno
cmp
addl
test
mov
push
or
cld
push
mov
test
sbb
inc
call
and
pushf
addr16
pop
lock
pop
lcall
fnstenv
xor
popa
lea
adc
mov
jl
orb
nop
or
dec
push
add
cmc
dec
popa
xchg
rcrl
ja
scas
and
cmpsl
sarl
dec
xorb
inc
jmp
int3
xchg
je
bound
rcrb
xchg
inc
or
std
test
ret
jo
add
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
call
pushl
pushf
mov
movb
lea
call
push
lea
jne
pusha
lahf
lahf
movzbl
mov
mov
pushl
push
lea
jmp
sbb
aas
push
shr
dec
mov
and
xor
shrl
jecxz
push
pop
icebp
scas
pop
and
out
xchg
cmp
add
setns
lods
xor
cld
and
pop
lea
leave
inc
out
sahf
ffreep
hlt
sbb
cmp
mov
fstps
dec
push
fsubrp
jns
repz
xchg
cld
add
inc
and
sub
repnz
and
jmp
push
push
adc
push
mov
incb
out
aaa
pusha
sub
pop
xchg
addr16
push
in
inc
int
jbe
cld
sub
lea
or
cmp
or
lcall
dec
push
lock
fs
mov
push
jae
loope
mov
pop
imul
out
scas
add
adc
jns
je
int3
pop
inc
sarl
shlb
repnz
out
imul
dec
pop
xchg
mov
repz
xchg
jae
rclb
xchg
jns
or
or
data16
cmc
jge
xchg
push
push
or
iret
adc
pop
cli
jno
ret
aas
mov
mov
add
nop
add
push
and
icebp
inc
jg,pn
cs
push
popf
push
test
ljmp
inc
sti
int
or
xchg
stos
cmpsb
mov
xor
out
cmpsb
xlat
shlb
stos
add
xchg
test
dec
add
fimull
ljmp
sti
test
and
sub
inc
inc
idivb
and
inc
test
jno
fs
hlt
mov
fnsave
ret
sub
pop
repz
sub
roll
fidivrs
outsb
ss
sbb
push
and
or
mov
or
and
sbbb
inc
or
mov
sbb
pop
sbb
lods
dec
mov
fmuls
insl
iret
mov
movsb
jno
pop
or
lea
in
loopne
mov
pop
xor
cld
xor
test
push
dec
lods
jge
in
and
je
into
sti
adc
adcb
jae
popa
add
int3
adc
out
clc
and
push
out
push
dec
inc
shlb
and
jg
sub
cmp
in
inc
pushf
ss
dec
rcrl
mov
scas
inc
mov
clc
mov
out
xchg
jmp
inc
hlt
rcrb
dec
xor
scas
adc
add
sub
subl
pop
adc
jecxz
js
sub
lret
adc
das
push
push
scas
push
idivl
iret
out
add
or
and
jmp
inc
xchg
and
repz
orl
pushf
pusha
lea
jmp
bt
stc
call
jns
inc
add
jg
inc
xchg
inc
ret
subl
test
mov
call
xor
testl
dec
cmpsb
stos
xchg
sti
in
push
ljmp
xchg
fwait
and
add
out
jmp
xor
jno
fnstsw
loopne
mov
enter
arpl
shl
enter
dec
outsl
fwait
or
aas
dec
cmp
fistl
xor
ret
and
or
scas
jo
and
xor
clc
in
mov
mov
pop
movsb
pop
arpl
addr16
jg
xchg
sbb
fcmovb
insl
fisubs
scas
sti
xchg
xchg
dec
fs
cmpsl
clc
sub
call
sahf
push
push
sub
loop
push
push
pop
les
jl
xor
fbld
lcall
push
pusha
lcall
adc
or
test
cmp
filds
inc
dec
bswap
bswap
pushl
popl
movzbw
pusha
mov
mov
movsbl
bswap
movl
cwtl
cwtl
bswap
not
lea
pushf
call
xor
bt
cmc
test
push
pushf
pushf
call
jecxz
mov
ret
push
les
int
std
dec
idivl
xor
jmp
adc
adc
scas
mov
cmpb
imul
add
and
xchg
add
out
pop
adc
scas
shl
cmp
aam
push
daa
clc
inc
pop
les
or
push
stc
sahf
pop
jo
int3
mov
sahf
fsubs
xbegin
out
stos
fdivr
inc
lock
addr16
loope
pushf
sub
out
cli
fpatan
std
xorl
cltd
imul
aam
bound
xchg
mov
or
jnp
orb
push
stc
cmpsl
les
xchg
cmp
pop
sti
push
cmpsb
xor
push
ret
mov
in
rcrl
xchg
insl
push
mov
pop
shll
and
xchg
insb
repz
mov
es
ret
minps
jmp
out
add
mov
enter
pop
inc
push
fisttps
repz
or
lea
jne
cwtl
shrd
clc
xor
pusha
inc
mov
movb
or
add
sar
mov
jmp
aam
jnp
scas
mov
add
sbb
jno
loope
adc
iret
push
sbb
mov
jbe
sbb
adc
cltd
sahf
mov
jmp
cmpsb
ds
pop
push
lea
mov
xchg
push
aad
iret
cli
xchg
jge
add
loop
mov
test
in
push
movsl
adc
pop
out
lret
dec
insb
leave
add
sub
loopne
sbb
xor
stos
mov
loopne
jbe
sbbb
or
and
gs
mov
mov
pushf
mov
call
sub
pusha
cmp
jmp
call
or
and
sete
inc
test
xor
aaa
popa
cs
fidivs
xor
movsl
adc
call
adc
out
stos
pop
out
cmc
lods
loopne
dec
mov
pop
pop
roll
shll
jl
out
lods
sub
add
xchg
sbb
rcrl
cmpsl
jg
out
lods
mov
incl
and
call
xor
call
push
mov
jp
std
mov
push
pop
in
dec
push
xchg
cmp
cld
fs
faddl
xchg
and
into
movsb
pop
subb
cmpsb
shufps
xchg
and
popf
and
icebp
push
xor
and
rolb
jae
mov
jo
mov
jmp
pop
mov
mov
push
enter
rorl
or
cmpb
push
mov
or
inc
shll
jmp
pop
mov
push
into
mov
push
je
pop
orb
mov
mov
sbb
cmp
repz
mov
mov
sahf
dec
jne
sti
mov
dec
mov
and
pop
xchg
cmpsb
iret
pushf
inc
test
sarl
hlt
daa
andl
jge
lock
cmp
hlt
jo
xor
flds
and
push
repz
lock
movb
dec
into
pop
pop
jne
outsb
lret
out
mov
xor
outsl
sbb
push
push
dec
fsubl
or
imull
sub
sbb
leave
jp
xor
out
lock
fstpl
ja
xor
lcall
and
sub
and
je
jmp
add
dec
gs
popa
addr16
outsl
js
add
cmp
or
sbb
ror
mov
push
jmp
bsf
rcr
or
mov
test
cmp
cmpb
jae
push
lea
jne
bt
sub
adc
mov
push
add
pushf
push
lea
jmp
push
call
xor
lcall
cmp
jecxz
xchg
std
cmpsb
dec
cmp
mov
addb
cmp
mov
mov
mov
lcall
or
insl
mov
mov
repz
xchg
push
stos
repz
mov
jle
jno
mov
loope
jnp
scas
jb
pop
repz
push
fists
xlat
popf
inc
insl
rorl
sbbl
sbb
mov
push
rorl
das
sahf
in
dec
popa
out
mov
mov
shll
xor
imul
aad
cs
mov
sbb
xchg
sti
fnstcw
das
clc
loope
adc
ret
stos
jb
inc
das
pop
push
ss
shlb
icebp
icebp
in
and
jne
sub
fs
push
cmp
lods
add
sub
dec
movsl
xor
movsl
mov
lahf
gs
sbb
cld
shll
xlat
out
shl
cmp
adc
fwait
mov
cwtl
xchg
pop
cmp
jp
mov
fsubrl
shrl
jb
stos
mov
fsubs
pop
dec
push
test
cmp
test
call
push
sbb
test
lea
lea
push
mov
jmp
bswap
pusha
lea
lea
movsbl
movzbl
mov
pushf
push
lea
call
jmp
sti
flds
aaa
inc
inc
sahf
out
js
sub
add
sbb
xchg
sbb
sahf
inc
out
xchg
gs
insl
xchg
ljmp
mov
inc
cltd
dec
fwait
jne
jnp
xor
call
pop
mov
popf
add
push
in
inc
daa
inc
inc
pop
movsl
jne
enter
and
mov
pusha
pushf
push
xchg
in
fldl
pop
les
cs
dec
inc
das
cltd
push
xchg
faddl
sbb
mov
lods
push
subl
push
and
pop
push
repz
mov
ret
lret
xlat
jecxz
or
cli
rorl
subl
imul
cmp
inc
mov
fistps
mov
add
and
jp
ret
or
or
mov
mov
adc
jno
inc
mov
sub
aam
cltd
inc
mov
or
mov
push
into
inc
test
jae
out
inc
jmp
mov
repnz
pop
adc
cmp
loop
jle
std
mov
add
inc
mov
ljmp
testb
in
inc
imul
or
std
movsb
sub
std
inc
dec
cmp
mov
pop
jne
scas
inc
in
jns
jmp
dec
jmp
lcall
sahf
lcall
mov
dec
test
add
adc
add
aas
or
push
sub
jmp
fidivrl
xchg
mov
pop
xor
pop
mov
stc
aas
fsts
lret
mulb
std
sub
repnz
mov
enter
movsl
dec
mov
idiv
loope
xchg
pop
add
test
jmp
cwtl
xorb
in
loop
lock
shl
dec
cmp
jecxz
sub
enter
das
sti
dec
xor
mov
scas
mov
pop
or
sbb
cwtl
pop
mov
int3
inc
jg
push
test
mov
add
adc
and
sbb
pop
es
movsb
test
cmpsb
sahf
fdivs
int3
rcrl
lret
std
xlat
popf
lret
and
xchg
sbb
mov
cmc
repz
mov
jo
fs
fs
sbb
mov
sahf
inc
sub
jl
in
or
xor
stos
pop
insb
daa
or
inc
sbb
pop
fildll
pop
dec
adc
mov
sbb
mov
mov
mov
sub
sub
adc
mov
aas
push
rcr
mov
jne
sub
mov
xchg
pop
test
push
pop
dec
loop
icebp
cmp
sar
jecxz
xchg
and
sbb
cmp
scas
jp
jae
std
add
push
insl
and
mov
call
cmp
cmpsb
jne
testb
cld
jnp
lret
jmp
cwtl
cmp
adc
jge
cmp
inc
sbb
lods
xor
jl
jg
test
das
shrb
jle
scas
push
cwtl
and
and
sub
arpl
icebp
test
xchg
das
or
nop
popf
stos
pop
xor
out
jmp
bt
clc
xor
clc
cmp
or
pushf
pushf
movb
lea
je
movzbw
call
jmp
cmp
pusha
lea
jae
inc
btr
inc
mov
setae
shr
clc
bsf
mov
cmp
test
shrd
mov
clc
cmp
clc
bt
sub
push
push
repnz
call
dec
loop
cmc
push
arpl
cld
lock
gs
aam
in
cmc
jg
inc
sbb
nop
mov
pop
push
sub
mov
imul
nop
adc
leave
jge
data16
loop
out
and
nop
sbb
or
inc
adc
nop
mov
iret
data16
rorl
jmp
sub
jg
xchg
sub
sbb
mov
cmpl
nop
insl
sbb
adc
enter
sbb
mov
in
jg
mov
cld
adcl
xchg
fildll
mov
jbe
add
cmovne
int3
cmpsb
lea
test
cwtl
popa
push
jl
out
cltd
push
sub
xchg
dec
fbstp
dec
add
mov
mov
xchg
mov
sbb
fisttpll
jae
pop
adc
jno
aas
sar
lahf
stc
aas
dec
in
push
fbstp
inc
sahf
mov
in
pop
insb
inc
lods
inc
imul
jg
in
sbb
xchg
jae
ljmp
jmp
pusha
jmp
and
pop
cmpsl
je
mov
std
mov
adc
movb
repnz
pushl
pusha
movb
lea
jne
call
out
dec
adc
ljmp
or
jecxz
cld
rolb
add
insb
mov
clc
out
mov
loope
test
loop
out
ja
cmp
cs
sbb
cwtl
mov
add
out
clc
mov
mov
daa
push
ss
scas
cmp
sub
mov
fidivs
inc
xchg
pop
addb
lods
in
jmp
dec
addr16
push
sub
mov
fdivp
in
lds
dec
sti
test
test
ja
mov
cmp
and
or
and
push
sbb
addr16
in
jnp
cld
xor
mov
loop
popf
or
rorl
push
orl
rol
out
cltd
popa
insl
xor
rcl
jnp
int3
adc
orl
mov
dec
test
aad
add
jg
cmp
xchg
imul
lret
test
pop
jnp
pusha
out
sbb
popf
mov
imul
fadds
sbb
pop
popf
pop
mov
ret
jecxz
idivb
xchg
dec
xchg
ret
addl
test
insb
inc
aam
mov
loope
xor
jae
sub
les
push
fimuls
repz
mov
sub
cmpsb
cmp
insb
mov
mov
or
ret
dec
je
lds
and
leave
mov
fbstp
fldcw
jp
lods
and
mul
xor
inc
adc
jb
pop
rcll
inc
and
in
and
xchg
cmp
sbb
gs
sbb
test
enter
sbb
loop
cmpsl
jns
adc
mov
sbb
mov
jp
inc
cmp
add
dec
jbe
out
fstl
mov
pop
dec
mov
je
imul
repz
repz
mov
add
lock
jo
cmpb
out
xor
lods
push
ret
ds
add
lcall
out
cmp
jmp
add
mov
mov
shrl
and
adc
add
sub
ds
sub
rorb
add
sub
lods
push
sub
fmuls
add
sub
pop
sub
loopne
cmp
pusha
dec
sub
lret
aad
add
dec
cmp
push
add
add
add
add
or
add
dec
cmp
jo
sub
push
or
add
dec
cmp
js
sub
out
cmp
add
add
add
add
add
add
movaps
or
add
add
add
add
add
cmp
nop
dec
sub
ds
sub
sbb
cltd
in
aad
stos
pop
dec
lret
int
pop
inc
lret
push
mov
inc
dec
sti
shlb
dec
mov
cmpl
sbb
std
int
pop
pop
cs
sbb
or
push
das
xchg
fsubrl
xchg
cmp
inc
dec
pop
dec
xchg
push
jge
jne
dec
cmp
or
add
sub
add
xchg
addr16
daa
xor
ss
xchg
repz
mov
jl
xchg
inc
outsb
cmp
pop
cmp
cmp
or
fwait
arpl
shrl
fstps
repz
aam
fsubrl
mov
inc
int
and
xchg
hlt
xchg
loope
add
ret
and
ss
adc
ds
es
xor
pusha
aam
or
pop
icebp
dec
sub
dec
lods
ret
pop
daa
pop
jge
mov
xor
fiadds
jae
or
add
sub
dec
jae
xchg
xchg
xor
sub
pop
xor
jmp
pusha
cmpsb
xor
std
mov
loopne
adc
jmp
jbe
aas
arpl
jae
xchg
mov
sub
fidivs
dec
dec
xor
or
sbb
scas
push
sub
insl
xchg
mov
pop
stos
mov
cs
faddl
outsb
pushf
mov
xor
or
test
rolb
add
rorb
lea
jmp
add
out
xchg
popf
mov
mov
add
je
xchg
cltd
and
sbb
mov
push
loopne
cmp
mov
data16
in
ret
sub
subb
jb
in
sub
mov
movsl
jge
pop
sub
cs
lret
fbld
popa
in
out
and
xchg
aaa
inc
mov
sbb
inc
int
repnz
lret
test
xor
enter
stc
push
sarl
mov
mov
mov
sub
cmp
popa
or
std
jmp
sbb
sub
shlb
or
sub
sub
out
stos
or
dec
sti
and
sub
imul
or
cwtl
add
call
mov
pop
inc
push
pop
lea
fcomip
fwait
xlat
jg
inc
das
jl
xor
or
test
std
mov
inc
sub
mov
pushf
lea
jmp
sub
pop
decb
adc
push
xor
sub
mov
lahf
or
pop
test
and
subb
or
fcomps
dec
outsl
jns
fucom
rorl
add
and
xor
push
insb
rclb
mov
sbb
or
mov
jp
adc
mov
inc
xor
sub
pusha
lea
pusha
lea
push
lea
call
push
cmc
clc
cmp
add
call
push
add
mov
dec
mov
add
incb
in
xor
aaa
push
push
fadd
inc
je
outsl
mov
and
outsb
stos
enter
mov
test
lcall
cmp
xchg
int
jl
jns
mov
out
cmp
inc
and
sub
test
or
pop
cmp
push
xchg
add
les
lods
idivb
pusha
roll
add
fmul
push
test
push
pop
test
xchg
cmp
enter
mov
lea
pusha
xchg
in
aaa
jns
add
cmp
jnp
sbb
mov
dec
xchg
inc
sbb
xchg
lcall
adcb
lods
repz
adc
aaa
ss
or
je
cmp
add
mov
mov
cmp
lret
sbb
js
lods
lcall
sarb
xchg
orb
shlb
sahf
mov
fidivs
cwtl
and
xchg
cmp
std
and
iret
mov
push
pop
dec
sbb
push
subb
imul
in
insl
mov
movsl
sbb
ds
and
popa
push
jns
sub
ret
aas
cmpsl
cwtl
inc
lcall
ss
mov
sbb
sbb
lds
jnp
xchg
cmp
outsl
xchg
adc
sub
ret
xor
orl
outsb
jle
call
pushf
pusha
call
mov
imul
bt
jmp
nop
in
mov
ja
mov
sub
mov
inc
mov
aas
mov
sub
sahf
jle,pn
fsubl
push
das
sbb
xchg
fimull
lahf
imul
xchg
cmp
cwtl
pop
sub
mov
out
rorb
sti
stc
sarb
mov
aas
pop
fnstsw
mov
xor
xchg
and
sbb
test
std
nop
pop
movsb
add
sub
cmp
cmc
push
sbb
popf
mov
sub
pop
lret
push
repz
scas
sbb
add
xor
mov
and
inc
and
lea
jmp
out
les
cmp
lock
popf
jb
subl
fwait
inc
sahf
testb
aaa
push
or
jns
movsl
lods
in
ret
mov
pop
test
aam
push
into
push
test
and
mov
sub
imul
inc
and
sub
mov
lahf
fs
ret
jne
mov
scas
xlat
mov
into
sbb
jno
sbb
xlat
dec
adc
out
sar
xor
sti
enter
pop
xchg
repz
scas
fcmove
adc
pusha
bt
bt
cmpb
pushf
lea
jne
daa
lea
neg
sub
mov
bsr
movzbw
aad
mov
cmp
add
pusha
movb
push
push
lea
jmp
je
pusha
pushf
push
movl
pusha
mov
push
lea
ja
push
pushf
pusha
lea
jmp
push
inc
imul
cmp
sbb
outsl
aaa
loopne
iret
xchg
and
es
stos
rol
sub
pop
test
pop
outsb
ud2
mov
xchg
and
out
mov
xchg
add
movsl
cmp
aaa
cmpsl
or
cmp
mov
arpl
push
fcmovb
mov
pop
lock
cmp
pop
inc
sub
out
pushf
xchg
mov
mov
inc
xlat
mov
lds
insl
adc
mov
inc
xchg
repz
test
daa
lods
movb
push
sbb
movw
pusha
jmp
pusha
lea
jne
lahf
push
mov
push
movb
push
mov
lea
jmp
mov
lea
jb
shr
mov
add
pusha
mov
clc
stc
sub
ja
pusha
shr
movw
mov
pusha
adc
pushf
sub
stc
push
clc
cmp
shl
clc
cmp
pushf
mov
clc
mov
cmp
push
lea
jae
cmc
bt
cmp
sub
pusha
pushl
lea
call
adc
adc
out
adc
xor
popa
test
mov
push
or
jecxz
jbe
inc
cmp
std
iret
jb
add
cmp
adc
sti
adc
adc
push
mov
push
popa
xor
xchg
mov
and
mov
pop
add
sub
mov
imul
fcmovu
jne
lcall
lahf
or
popa
repz
test
decl
loopne
mov
jmp
adc
subl
push
and
xchg
enter
inc
sub
lret
push
lock
adc
push
fadd
fwait
in
mov
dec
aaa
test
mov
adc
std
test
push
not
movsbw
push
lea
push
movl
pushf
pushl
popl
pushl
pushl
ret
push
jmp
out
bound
push
ja
test
mull
lahf
or
stc
daa
insl
in
push
push
stos
mov
pop
data16
xor
lret
loop
mov
icebp
sbb
dec
pop
bound
sti
jl
mov
pop
loop
fsts
cmp
jmp
dec
and
sahf
stc
push
sar
lods
fldt
outsl
ja
les
pop
test
inc
mov
scas
jnp
repz
stos
push
das
add
pusha
mov
movw
lea
je
call
cmp
sub
mov
dec
rcr
mov
mov
sub
addr16
mov
push
lret
push
fistps
and
jp
sbb
and
popa
xor
es
popa
jne
icebp
ss
dec
push
cmc
jl
mov
pop
lret
xchg
xchg
fsubr
test
test
push
addr16
cltd
in
xabort
sub
lods
inc
mov
inc
ljmp
sub
cmp
or
sub
pop
repz
stos
cmc
jge
add
push
gs
jo
outsb
dec
gs
add
movw
mov
call
sub
bt
push
cmp
pusha
pushl
popl
cmc
stc
cmc
cmp
pusha
push
lea
ja
clc
ror
push
sub
movzbw
test
bsr
sar
add
add
pusha
setnp
mov
rcl
clc
and
mov
cmc
stc
call
popf
cpuid
nop
pushf
pusha
pushl
call
mov
or
enter
push
jmp
cmp
call
mov
loope
adc
adc
jge
mov
popw
cmc
add
adc
mov
int3
hlt
fisttpl
dec
pop
adc
add
pop
rcrl
repz
push
jbe
add
xchg
push
pop
popl
xchg
inc
lods
cli
popa
pop
std
push
int
mov
jmp
mov
shll
iret
sti
in
mov
jbe
fwait
mov
jg
add
out
roll
enter
es
rcll
add
cmc
push
inc
cs
mov
jmp
lock
fildl
movsb
lock
movsl
fstp
mov
into
das
sti
push
mov
pop
ja
pop
aaa
or
jno
or
in
movl
push
lea
jmp
push
pusha
add
stc
mov
cmp
clc
movl
test
lea
jge
pushf
lea
je
jmp
jne
nop
mov
outsb
mov
test
jg
iret
mov
add
inc
jns
repnz
push
jns
clc
and
repz
test
bound
int3
mov
or
pop
in
jne
arpl
decl
test
lret
dec
rcrl
out
add
cltd
shl
sub
xchg
insb
jb,pt
ss
fwait
daa
pop
ja
push
test
js
addl
sbb
pushf
sub
nop
and
xchg
jmp
loope
add
adc
and
mov
loop
ss
movsl
and
movsb
jmp
loopne
xchg
mov
mov
mov
flds
sub
movsl
fstl
int
fwait
inc
jae
mov
jle
rcr
in
pushf
mov
ljmp
jge
sub
xchg
in
mov
cli
test
ja
pushf
or
inc
mov
out
or
jmp
repnz
arpl
stc
repz
mull
cmpsl
repz
cmpsb
cmp
rorb
sahf
mov
sub
cltd
les
sub
cwtl
pushl
popl
lea
jge
push
movsbw
push
bswap
lea
call
lea
jb
jmp
lcall
imul
and
aad
cmpsb
into
jns
add
das
push
sbb
loopne
rcrb
xor
je
fsubrp
mov
inc
mov
popf
faddl
cli
cs
cmp
push
cmp
fndisi(8087
fisubl
push
addr16
jnp
cs
push
test
sti
adc
stos
in
pop
ljmp
lds
push
xor
push
pop
xchg
mov
cmpsb
cld
xchg
int3
add
jge
loopne
sar
cmp
movsbw
movsbl
pusha
mov
call
pushf
movw
mov
jmp
push
or
mov
cmp
jbe
daa
scas
pop
pop
inc
push
mov
push
out
push
or
cmp
cmp
dec
add
pop
test
cli
or
imul
xor
mov
or
mov
jp
sahf
xchg
pop
sbb
and
pop
cmp
movsb
push
push
push
ja
or
scas
repz
hlt
inc
sub
mov
xor
push
lahf
mov
push
mov
cli
add
xor
or
movb
clc
mov
cmc
cmpb
call
stos
pushf
movb
movl
push
lea
jmp
rorb
js
lods
shlb
aas
pusha
and
push
lahf
data16
push
or
pop
jbe
push
cmpsb
jp
aaa
addb
out
push
push
dec
stos
xchg
push
jl
scas
popf
scas
pop
mov
outsb
sub
inc
hlt
pop
cmpsb
push
sbb
and
fcmovnb
enter
jne
movsl
mov
xor
add
pop
cltd
inc
pusha
add
pop
iret
adc
push
call
add
nop
push
mov
addr16
ljmp
std
mov
je
or
call
test
mov
fisttpll
in
mov
and
xor
mov
push
add
mov
nop
shll
mov
pop
inc
sarb
mov
ljmp
pop
aad
dec
jno
sbb
and
push
push
pop
test
js
xchg
inc
sti
jne
jbe
adc
xchg
pop
ljmp
mov
test
push
roll
daa
mov
sub
ret
scas
sbb
mov
outsb
cmp
std
mov
sti
add
pushf
push
lea
je
cmc
cmc
cmc
test
cmp
pushf
push
pushl
call
fldcw
and
les
rcl
xchg
dec
je
and
je
movsb
mov
loopne
cmp
and
ret
xchg
lock
xchg
addr16
jl
incl
int
or
add
pushf
jae
lret
arpl
xchg
out
mov
aas
push
cmp
repnz
addr16
mov
lea
popa
repz
mov
xor
pushl
ret
lea
je
stc
pusha
cmc
pusha
sub
pushf
cmp
cmp
call
pusha
lea
pushf
lea
call
test
test
clc
cmp
call
lea
push
pushl
pushf
lea
jmp
pop
mov
call
mov
sbb
mov
sub
std
les
aaa
rorl
xlat
out
inc
dec
out
flds
dec
add
ss
repz
cmp
mov
je
add
mov
push
or
mov
scas
push
dec
sub
and
adc
stos
testl
ja
sarb
mov
cmp
std
mov
fs
jb
btc
mov
bt
pusha
cmc
stc
sub
pushf
push
mov
call
call
scas
and
push
jne,pt
and
lds
adc
mov
rcrb
sbb
sbb
fnstsw
jnp
pop
ret
dec
into
jecxz
cmp
or
mov
je
js
add
enter
sbb
mov
add
and
insl
mov
mov
jmp
arpl
mov
push
repz
mov
jmp
lcall
shrb
sbb
insl
gs
sub
aas
inc
aad
push
cltd
push
and
jno
adc
inc
jp
sub
adc
or
lret
sub
out
xor
jge
jno
in
xchg
mov
push
pop
cld
or
mov
xor
sbb
clc
movsl
repnz
std
mov
pop
ret
lods
cmc
lds
pop
inc
lods
je
inc
into
ja
leave
xor
sbb
test
xchg
inc
pop
cmp
pop
jge
xor
sbb
mov
roll
je
daa
inc
jecxz
test
or
ret
jp
loop
test
add
repnz
arpl
jns
pop
test
xchg
mov
imul
loope
fisubl
pop
lds
std
fsubl
leave
inc
push
fisttps
clc
and
lret
xchg
sbb
insb
xchg
mov
test
inc
jp
push
dec
repz
jle
or
and
xor
and
aas
repz
loop
pusha
test
ds
xchg
mov
es
cli
jns
sub
pop
and
jp
push
mov
out
push
jle
js
pop
repz
das
aas
scas
mov
scas
popa
js
sbb
mov
jo
sub
cmp
lods
xor
lret
sar
cmp
pusha
movzwl
sub
not
push
mov
call
pop
push
jp
imul
jge
mov
int
sahf
inc
mov
inc
mov
or
in
test
dec
insl
pop
xchg
ljmp
mov
pop
inc
xchg
mov
push
sbb
dec
pop
inc
inc
xor
mov
stos
lcall
or
lahf
dec
aas
mov
xor
mov
lret
xor
or
iret
mov
repz
xlat
or
add
out
cwtl
push
test
test
cmp
jmp
pushl
lea
je
and
add
cmp
neg
shrd
clc
mov
test
push
test
test
add
test
call
movl
jmp
and
push
push
push
add
add
clc
cmp
add
pushf
movb
pushf
dec
push
jmp
adc
and
rorl
dec
and
movsb
lods
push
mov
mov
in
icebp
std
sbb
test
adc
scas
rcrl
imul
cli
xchg
jge
xor
std
fidivrs
jo
fs
jae
clc
stc
stc
pushf
sub
lahf
lea
lea
push
lea
call
push
shr
add
add
neg
movsbw
btr
ror
pop
rcr
shld
sbb
pop
test
bt
cmp
pushf
movw
sbb
pushf
pushf
pushf
movb
lea
pushf
push
push
movl
lea
jmp
movzwl
not
lea
bswap
bswap
jle
mov
call
cmp
push
mov
subb
xchg
lods
and
jmp
or
xor
sub
enter
or
push
cmpsb
xlat
cmp
cmp
mov
or
out
stos
lret
sub
xchg
cmp
lds
mov
aaa
dec
rcrl
test
and
sbbl
mov
mov
adc
imul
into
cmpl
and
inc
leave
mov
push
filds
xor
inc
mov
imul
inc
jae
sub
adc
ds
push
cmp
pushf
pushf
pusha
lea
je
call
push
movb
adc
jmp
pusha
movl
pusha
lea
jmp
cmp
clc
cmpl
jmp
inc
cmp
push
add
jb
movsb
negb
push
dec
push
pop
test
nop
or
push
shll
and
add
xchg
stc
jno
push
ljmp
cltd
push
dec
enter
inc
lcall
aad
jns
lahf
mov
lods
mov
adc
hlt
push
loope
mov
inc
pusha
xchg
inc
jae
and
pop
xchg
sbb
out
std
push
roll
imull
mov
mov
sti
pop
push
and
mull
ret
std
fcoms
pop
push
cmp
dec
xchg
std
adc
sahf
int
aas
dec
sarl
arpl
sbb
ja
movsl
faddl
adc
xor
mov
test
or
push
data16
mov
addr16
xchg
pop
test
push
sti
lcall
cs
jo
addr16
lea
rorb
lods
sub
das
sahf
mov
jnp
ret
mov
sbb
repz
mov
subb
adc
std
fdivrs
and
cmp
sub
sti
inc
int3
cmc
fiadds
pop
inc
stos
jne
adc
jg
adc
mov
dec
add
push
imul
sbb
jne
inc
pop
push
out
int3
repnz
jnp
sub
sti
mov
jae
inc
mov
and
cmp
inc
nop
cltd
mov
cmpsl
es
adc
jnp
add
gs
pushf
stos
xchg
and
jp
bound
pop
aad
sbb
push
dec
clc
dec
stc
inc
aaa
push
xor
add
xor
and
and
hlt
inc
in
imul
and
insl
and
dec
sbb
and
adc
fsubr
xchg
xor
dec
cld
sbb
inc
push
leave
aas
or
xchg
fldl
ds
xchg
add
nop
rclb
pushf
and
fstl
lods
sbb
nop
inc
jbe
adc
mov
xlat
data16
fsincos
jmp
jmp
jb
aas
test
jns
cwtl
or
ja
mov
lods
sahf
mov
push
fistpll
lret
and
sahf
pop
mov
aas
mov
cli
jecxz
pop
loopne
add
aad
mov
sahf
mov
mov
mov
out
sti
sub
sarl
mov
xor
dec
lret
sbb
lods
push
daa
int
bound
cld
test
repz
ficoml
push
add
jae
cmc
add
cmc
bt
pusha
stc
test
movb
mov
mov
mov
lea
jne
call
lea
jne
jb
rcr
jmp
mov
not
lea
call
add
dec
outsl
popa
fs
imul
add
inc
lock
pusha
pushf
ror
push
mov
add
cmc
push
test
cmp
not
mov
cmp
lahf
lahf
lea
lea
pushl
movl
pop
mov
pushf
mov
lea
ja
push
mov
lea
jb
test
cmpb
pushf
call
push
movl
pushl
call
mov
pushf
mov
movw
pushl
ret
repnz
les
mov
idiv
ret
dec
xchg
pop
subl
int3
repz
popf
mov
inc
mov
jp
gs
je
xor
frstor
loop
ret
mov
jl
sahf
xchg
stc
dec
shlb
dec
lret
arpl
ljmp
movsb
sbb
pushf
and
fidivrl
iret
sbb
hlt
mov
pusha
dec
js
mov
std
fldt
adc
jns
dec
pop
dec
pushf
sbb
pop
pop
out
fadds
mov
lods
inc
xor
mov
hlt
into
inc
push
fs
in
clc
and
pop
ss
add
out
mov
and
inc
xlat
dec
push
sub
xchg
xlat
mov
inc
outsb
imul
stc
jbe
push
pop
push
adc
jmp
outsl
push
xchg
cmp
xchg
fucomip
xor
data16
mov
push
jg
pop
test
cmp
repz
aam
out
ja
jae
add
inc
test
xchg
loope
adc
inc
into
jp
inc
sbb
loope
icebp
das
push
jmp
mov
out
out
test
stc
dec
mov
insb
jmp
xor
cmp
pop
push
push
pop
dec
push
xchg
popa
adc
repz
cs
push
aad
in
ja
js
inc
int3
or
ljmp
neg
ljmp
inc
popf
iret
mov
cmp
orb
xchg
sbb
repz
repz
aam
mov
jp
xchg
ffreep
sbb
xchg
cmp
inc
imul
add
jg
rcr
inc
nop
out
xchg
lret
mov
aam
mov
ljmp
jle
adcl
test
jge
andb
cmp
int3
mov
jl
popf
rclb
cmp
arpl
xor
outsl
fcmovu
push
and
cmp
pushf
jb
mov
pop
mov
xchg
popa
dec
sbb
xchg
pop
lods
fldenv
std
aad
xchg
icebp
lock
ret
mov
cmpsl
sarb
add
mov
mov
sub
imul
shll
aaa
jg
neg
xchg
or
mov
testb
js
mov
jl
mov
enter
xor
or
int3
xlat
push
aam
jg
in
loope
adc
sahf
insl
mov
icebp
sahf
sub
inc
jno
mov
adc
std
aad
sub
cmp
sbb
jp
sub
mov
orl
pop
hlt
leave
mov
xchg
jp
in
adc
fisubl
sbb
ret
push
stc
popf
mov
inc
adc
mov
ss
xchg
xchg
aad
das
sahf
mov
xor
inc
int3
cltd
jo
xchg
lcall
repz
push
pop
mov
jecxz
pop
inc
repz
adc
or
rcrb
inc
push
jmp
movb
lea
je
mov
pushf
mov
movzbw
jmp
not
pop
pusha
mov
pusha
mov
pushf
movw
mov
mov
jmp
mov
jne
and
cmp
pushf
gs
xchg
incb
lock
mov
jne
mov
int3
mov
subl
ljmp
mov
lret
das
es
repz
sub
daa
push
jns
xchg
cmp
cmp
fsts
push
enter
adc
inc
rolb
das
sahf
mov
enter
jg
add
xchg
lcall
xlat
mov
test
dec
idivb
std
xlat
push
je
xor
fldt
in
mov
mov
pop
daa
pushf
lock
or
ljmp
jae
nop
mov
lock
rcrl
xor
icebp
fidivrs
call
adc
dec
xchg
jle
in
mov
mov
and
roll
fstpt
ljmp
fldl
sbb
insl
xchg
sbb
pop
lcall
inc
insl
pop
daa
jae
lea
adc
int3
clc
and
std
xlat
xor
mov
shrl
mov
xlat
jg
xor
jle
jae
cld
hlt
adc
sbb
loopne
jnp
mov
in
stos
and
xlat
cmp
adcb
cltd
cmpsl
push
lea
pop
pushf
aad
mov
fldenv
lea
in
and
int3
hlt
cmpsb
aam
adc
adc
jnp
push
add
rorb
roll
add
mov
cwtl
add
cmp
testb
repz
rorb
and
pushf
lea
jne
btc
mov
bswap
bswap
or
mov
neg
sub
shld
inc
btc
rcl
mov
sar
shld
shl
mov
bswap
mov
lea
sar
cmp
ror
mov
btc
setbe
xor
shrd
mov
dec
ror
mov
pushf
dec
bsr
sete
sub
shld
or
movsbw
mov
lea
mov
push
btc
xor
mov
push
sub
sbb
pushl
pushf
dec
and
adc
mov
clc
shl
movl
add
pushl
lea
pushf
lea
call
pusha
jmp
shl
btr
pushf
mov
pusha
cmc
push
cmc
shl
pushl
mov
mov
lea
jo
je
pushf
jmp
lea
jb
mov
sar
aas
cmp
bswap
not
mov
jmp
ja
cmc
and
lret
fadd
mov
leave
jno
orb
and
fwait
negl
lret
add
lahf
jge
ret
dec
add
sbb
daa
sub
popa
jecxz
mov
loopne
xchg
push
pop
inc
jb
loopne
or
mov
test
push
lods
or
mov
xchg
loope
adc
push
adc
inc
pop
bound
sbb
jge
mov
loope
test
in
bound
fdivr
dec
pop
pop
or
mov
pop
daa
mov
pop
sub
adc
dec
dec
out
dec
in
hlt
mov
lret
push
ret
cmpsl
adc
jmp
jecxz
pop
das
repz
shrb
sub
add
add
push
clc
cmp
add
add
xor
cmp
add
add
and
cmp
add
add
pusha
aaa
sub
add
add
fidivrl
add
or
add
adc
add
pop
and
add
add
add
cmp
mov
imul
or
add
add
clc
sub
add
add
push
movb
movl
pushf
jmp
shlb
loopne
popf
ret
jle
push
insb
mov
leave
push
pop
and
xor
push
int3
adc
mov
das
cmpsb
ret
mov
cwtl
mov
cmp
push
cltd
jae
inc
cwtl
jp
arpl
mov
add
neg
test
shrl
mov
fdivr
xchg
popaw
mov
mov
clc
mov
cmovs
mov
adc
imull
stos
loopne
rcrb
loopne
push
jp
aad
cs
or
and
data16
repz
sarl
pop
insb
mov
mov
cmpsl
push
jp
test
rcrl
mov
imul
jae
int
loope
jae
mov
clc
sub
inc
shrl
cs
dec
or
lods
mov
sti
pop
mov
stc
adc
cmp
pop
xchg
adcl
pop
sub
in
cmc
pop
call
dec
mov
outsb
jp
mov
dec
repz
rorl
inc
push
movb
lea
jmp
lahf
movl
movsbw
bswap
movzbw
lea
pusha
movl
push
movb
call
outsb
pop
add
xchg
pushf
xor
out
repz
insl
push
aas
test
cmp
hlt
add
inc
hlt
add
cmp
loopne
sbb
outsl
xchg
push
daa
or
out
jbe
inc
scas
mov
mov
ret
inc
or
imul
pop
push
ret
jle
pop
enter
and
mov
lret
mov
sar
call
mov
stc
cmpsl
stos
add
add
lea
je
bt
cmc
cmp
pushf
pushf
movb
lea
je
pushf
pushf
pushl
lea
jmp
dec
cmpsl
xor
hlt
outsb
out
pop
mov
jmp
pop
xchg
push
jno
mov
rcll
faddl
out
add
std
fnsave
bound
adc
mov
subb
xchg
adc
cmp
adc
and
fidivs
mov
in
mov
test
and
mov
repz
int
ss
inc
sbb
inc
adc
push
pop
addr16
jp
leave
adc
inc
adc
sbb
cmpsl
mov
adc
sbb
sbb
dec
xchg
loopne
sub
ljmp
mov
and
flds
je
es
cmp
scas
sbb
das
sahf
xchg
pop
insb
push
fsubp
xor
call
push
rorl
pop
vmovq
jno
std
int
js
call
pushf
movl
pushl
pushf
pushf
lea
jmp
movl
pushl
mov
lea
jmp
mov
mov
pushf
pusha
lea
jmp
mov
sti
adc
stos
mov
aam
cmpsb
getsec
mov
mov
mov
bound
xor
sahf
sbbl
dec
fadds
or
inc
out
xchg
fldt
mov
inc
mov
imul
fadds
and
fwait
jg
test
nopl
xchg
loopne
out
and
mov
daa
xchg
mov
fxch
mov
jmp
imul
push
mov
mov
pop
repz
into
hlt
call
sub
out
or
jno
push
inc
repz
into
cmpsl
lea
daa
cltd
push
inc
into
pop
ret
lods
adc
sahf
sub
mov
mov
into
pop
imul
push
sub
push
mov
mov
inc
lods
fmuls
test
cmp
jg
js
dec
push
repz
into
ret
lea
insb
and
movb
pushl
ret
mov
adc
mov
stos
iret
neg
es
cmc
sbb
int3
cltd
sub
fs
mov
jge
xor
xchg
dec
aad
pop
lds
sub
ja
xchg
rorb
pop
pop
out
inc
jo
xchg
rolb
jnp
repz
adc
loopne
insb
sub
jg
int
sbb
sbb
aad
or
mov
mov
out
inc
test
sbb
pop
frstor
mov
lea
sbb
mov
hlt
sub
es
imul
push
std
iret
pop
dec
adc
jmp
or
imul
insb
fs
cmpsl
loopne
movsb
xchg
cwtl
iret
lea
push
arpl
jae
xlat
aas
vcvtsd2usi
roll
inc
out
sub
mov
ret
fmull
inc
into
fiaddl
push
sub
pop
lcall
icebp
mov
ds
xchg
repz
enter
ret
inc
stos
ja
mov
out
mov
and
dec
mov
call
xor
loopne
or
idivb
in
in
mov
es
sub
adc
adc
mov
cmpsb
or
jmp
outsl
jbe
inc
arpl
repnz
push
sbb
cmc
in
orb
cmpsb
pop
xchg
pop
or
xchg
jno
nop
repz
enter
lea
pusha
jmp
pop
add
dec
push
outsl
sbb
or
fadd
in
push
frstor
mov
inc
lahf
aaa
dec
push
push
cmp
stc
fiaddl
stos
dec
xchg
rclb
xor
lcall
out
test
cmp
cmpsl
jns
pop
xorb
scas
movsl
push
fcmovne
shrb
push
test
data16
pop
addr16
sahf
xchg
xor
dec
lcall
push
icebp
fiaddl
push
mov
sahf
or
out
mov
lcall
je
xor
push
or
pushf
lea
je
lea
movzbw
mov
jmp
pusha
mov
bswap
rep
pop
mov
mov
call
not
mov
pushf
lea
call
pusha
pusha
jmp
jmp
jno
ja
data16
mov
enter
int3
xchg
mov
test
jmp
int
lock
stos
add
adcl
mov
data16
repz
leave
dec
mov
lahf
push
mov
inc
adc
sti
subl
jl
int3
push
ds
test
cmpsb
int
je
dec
icebp
push
cmp
int3
in
xchg
stos
popf
test
dec
outsl
mov
mov
flds
js
into
jne
inc
rorl
push
pop
inc
mov
sbb
test
mov
test
or
js
inc
movsb
cmc
add
dec
pop
test
dec
mov
jb
insb
flds
lret
movl
pushf
mov
movl
pusha
push
lea
jmp
pusha
lea
mov
mov
movb
pusha
jmp
pusha
adc
movb
lea
jae
bsf
pop
stc
pop
cwtl
movzbl
mov
test
setb
jg
lea
cmp
lahf
mov
call
pop
pop
sub
loopne
mov
mov
inc
or
fidivs
mov
in
adc
out
ret
jecxz
and
das
push
push
cltd
outsb
mov
jmp
fcomip
bound
push
into
xchg
pop
call
fstl
or
sbb
xchg
xor
hlt
mov
mov
clc
jecxz
cmp
fs
std
lret
fcmove
xchg
add
movzbw
add
cmc
add
movsbw
mov
bt
shr
bt
cmp
cmp
call
lea
jne
shr
jmp
pusha
movl
push
pusha
movl
pushf
lea
jmp
adc
clc
clc
cmc
sub
pusha
clc
shl
clc
bt
mov
pushl
cmp
jmp
outsl
ret
mov
push
mov
test
pop
call
xor
cltd
dec
les
hlt
dec
mov
sub
gs
xchg
pop
dec
ds
sub
ret
sub
cs
stos
hlt
push
xchg
loopne
insb
outsb
ljmp
push
sarb
ja
std
les
js
pop
subl
cmp
jb
and
push
sub
sub
mov
adc
out
mov
xor
inc
outsl
cs
int
push
dec
jno
std
les
pushl
popl
pusha
pushf
pushl
ret
shr
call
push
push
cmc
cmpl
jmp
adc
ds
xor
mov
pop
scas
sbb
adc
gs
lahf
lods
mov
mov
jnp
fucom
push
dec
push
xchg
out
ret
cmpb
cmpsl
jae
xor
adc
js
push
fmul
jo
mov
jp
lock
insb
or
call
push
scas
push
lea
sti
fisubrl
sahf
xchg
bound
xor
cmpsl
fwait
int
leave
mov
scas
sbb
xchg
subb
ja
std
ljmp
add
test
test
add
inc
addl
add
add
inc
add
add
das
rolb
add
inc
das
inc
subl
add
jg
inc
add
add
ret
inc
rolb
daa
mov
not
lea
push
lea
ja
pushf
movl
pusha
jmp
pushf
jmp
call
push
lea
je
clc
cmp
jmp
movl
mov
pushf
pusha
mov
lea
jmp
mov
movsbw
movb
jmp
sbb
cmp
mov
cld
cmp
daa
out
ja
test
mov
xor
dec
inc
pushf
inc
mov
sub
pop
mov
push
and
fdivs
fcmovu
outsl
imul
out
add
test
add
dec
xchg
push
in
add
movsl
jae
popa
xor
int
xor
push
pop
jmp
data16
jmp
or
repz
stos
mov
xor
test
movsl
add
movsbl
mov
movsbw
mov
lea
pusha
call
icebp
scas
mov
dec
scas
mov
jge
lock
es
pop
and
add
pop
mov
xor
sub
sub
sub
popf
jnp
mov
push
daa
mov
lret
cld
mov
cli
push
lds
data16
sahf
lahf
lds
mov
mov
dec
jb
xchg
sbb
or
sub
sti
jmp
lret
fnstcw
and
loopne
int3
cmc
mov
add
hlt
dec
movsb
cld
repnz
sub
add
pusha
pop
movsb
lea
test
loopne
pop
shlb
pop
sahf
movsb
mov
lods
mov
jne
pop
dec
pop
push
push
push
sub
and
jo
adc
adc
mov
lret
shlb
iret
mov
inc
pop
mov
push
mov
idivb
cli
adc
sub
xchg
lahf
mov
sbb
xchg
divl
mov
stos
ljmp
mov
imul
test
and
inc
pop
out
mov
call
push
lea
jne
rol
movsbw
setb
setns
mov
stc
not
rcr
sub
bts
mov
jmp
movl
pushf
jmp
pusha
lea
jne
bsf
test
sbb
pusha
mov
jmp
call
movl
pushf
mov
pusha
pusha
pushl
ret
pushf
lea
jne
jmp
inc
stc
add
mov
sahf
cmpsb
rcrb
mov
or
and
push
lods
push
lods
sbb
push
or
jg
pop
sbb
scas
push
and
mov
roll
dec
test
mov
mov
inc
push
cmc
add
sbb
or
dec
jnp
jmp
pop
cmpsl
adc
cmp
icebp
jl
stos
cwtl
js
or
test
add
addr16
dec
mov
jl
push
xor
or
repz
shr
pop
call
mov
pusha
movb
pushl
pushf
pushl
ret
lea
je
cmc
add
cmc
pushf
cmp
pushf
pusha
pushl
lea
jb
call
outsl
jecxz
pop
jmp
aaa
jg
sub
fisubl
pop
mov
pusha
daa
pop
pop
cli
icebp
jne
push
dec
pop
out
or
cmp
and
dec
sbb
xchg
movsb
jno
es
dec
sbb
daa
ss
jmp
dec
loopne
dec
dec
mov
aas
je
mov
fwait
jno
inc
lret
jno
inc
jbe
inc
sbb
in
mov
adc
sbb
jb
push
in
jle
xor
repz
rorl
add
push
cmpsb
icebp
and
xchg
faddl
mov
iret
push
push
out
sbb
xchg
clc
xor
inc
mov
bound
movsb
mov
add
jle
mov
rcl
jmp
inc
cmp
lock
adcl
fisubl
in
andb
loope
push
aas
in
pushf
lahf
mov
adc
ds
xchg
clc
or
inc
and
popf
fs
and
fsubrs
cmp
cmp
rorb
adc
std
ret
stos
inc
mov
sbb
dec
lock
and
jbe
sub
fisubl
out
inc
dec
add
shl
add
push
jl
fistl
push
test
xchg
in
xlat
cmp
push
lahf
int3
adc
mov
mov
add
aad
repz
sbb
mov
mov
push
jge
push
xor
xchg
loopne
test
icebp
std
enter
fimuls
aas
repz
ret
mov
mov
out
iret
mov
into
aad
push
push
push
pop
addr16
loope
mov
xor
jb
in
mov
pop
je
sub
bound
inc
jp
cmp
test
mov
pop
lds
bound
jp
decl
dec
sub
in
ss
mov
push
lods
xchg
inc
fdivs
pop
mov
icebp
ja
cmc
orl
jecxz
mov
mov
push
repz
ret
ret
rcll
add
rcrl
bound
adc
cmpsb
dec
push
jle
lods
adc
xchg
sub
sbb
arpl
sar
ljmp
xor
ret
mov
xorl
loope
stos
test
dec
cli
les
out
xchg
les
jnp
add
xor
mov
mov
sub
sti
jecxz
pop
or
dec
mov
shll
aaa
cmc
mov
popa
inc
scas
jg
ss
sbb
push
loop
cltd
xchg
fucomip
mov
std
ret
cmpsb
mov
in
les
ret
stos
sbb
mov
in
xor
vpcmpeqb
mov
mov
jns
testb
fdivrp
call
gs
ficompl
xlat
cmpsb
inc
adc
roll
fwait
dec
cwtl
out
lret
xor
or
sahf
scas
mov
sub
out
loop
popl
enter
and
imul
add
jge
repz
cld
push
inc
enter
add
in
jmp
xor
daa
lods
shr
add
sahf
lds
mov
imul
pop
dec
jbe
loope
dec
inc
sbb
lcall
inc
ja
ds
fadds
xchg
orl
xchg
into
aam
cltd
gs
adc
ret
fdivrl
lea
or
aas
inc
lods
xchg
sbb
xlat
add
push
or
xchg
pusha
iret
repz
cld
add
clc
adc
adc
je
lods
out
flds
dec
xchg
std
out
negb
fs
and
add
cmp
xchg
xlat
int3
decl
adc
jg
mov
cmpl
sub
divl
ljmp
add
mulb
cmpsl
dec
clc
dec
gs
pop
mov
addb
or
add
adc
cmp
insb
enter
push
adc
test
cld
jnp
and
xchg
xor
repz
xchg
mov
cmp
sbb
pop
xchg
dec
push
loopne
inc
stc
fistpll
dec
rorb
out
incb
call
sbb
xlat
push
cmc
inc
cli
scas
cmc
sbb
scas
sbb
dec
gs
mov
inc
lods
mov
lds
jge
jbe
outsl
dec
push
mov
and
cmpsb
push
ret
jnp
std
mov
push
mov
jmp
push
subl
shr
cmp
popw
aam
ss
and
sub
movsb
xor
add
popa
dec
adc
scas
sbb
xor
xchg
adc
xor
sub
out
push
pop
push
or
lahf
in
push
fsubrl
cmpsb
iret
repz
lcall
xchg
sbb
inc
leave
mov
push
mov
test
jne
or
jne
sbb
xchg
clc
shlb
dec
pop
lret
sbbl
lods
sbb
rcl
aaa
lret
addr16
leave
jbe
popf
adc
aaa
sub
xchg
sub
push
ljmp
roll
daa
adc
mov
mov
mov
insl
sbb
jg
std
push
rcrl
cwtl
shrl
sub
sbb
or
cmpsb
outsb
ja
cs
pop
or
mov
lock
add
shlb
int3
ret
sub
or
repnz
inc
mov
loop
pusha
mov
shrb
push
mov
sub
cld
in
pop
pusha
jl
jp
inc
push
andl
and
jno
int3
inc
xchg
subl
sahf
das
int
dec
pop
cld
cmp
sbb
out
in
mov
xchg
ja
ljmp
out
sbb
push
pusha
sub
repz
pushl
and
xlat
iret
and
sarb
stos
adc
cmpsb
dec
fisttpl
aaa
sub
or
test
call
dec
xchg
push
push
fists
int
cmpsb
je
iret
or
aaa
pop
xchg
xchg
add
add
xor
call
mov
adc
shrb
das
sahf
mov
fwait
leave
jp
cmpsl
mov
mov
orb
mov
sbb
lcall
adc
repnz
mov
mov
pusha
clc
shr
mov
adc
mov
sub
bt
call
outsl
iret
stc
sbb
add
sar
jae
arpl
mov
jecxz
je
les
nop
xchg
add
scas
xor
xor
lods
mov
aaa
push
aaa
in
hlt
decb
hlt
pusha
in
outsb
into
sbb
adc
lahf
es
test
push
and
inc
jae
scas
ficoms
fildl
push
scas
jp
pusha
inc
pop
lock
jbe
xchg
dec
mov
je
jp
popa
jecxz
fistpl
sbb
pop
mov
mov
dec
and
pop
mov
xor
pop
ds
add
inc
je
std
clc
aad
outsb
repz
jmp
rorl
inc
add
ret
sahf
es
ss
out
stc
les
and
cltd
cli
outsl
mov
cmp
mov
std
cmpl
call
or
loopne
dec
push
pop
lods
hlt
cmp
or
and
lcall
gs
jge
adc
xor
sbb
xor
or
xor
iret
push
jbe
jb
movsb
xor
fisubrs
jne
jmp
iret
mov
fwait
pop
icebp
jb
lock
dec
adc
cmp
mov
pop
mov
sub
ret
xchg
mov
negl
in
pop
mov
lcall
adc
lret
cld
movsb
lods
cltd
cmpsb
into
and
popf
gs
or
js
sub
out
shl
inc
push
xchg
mov
cmp
subl
shlb
inc
fnstcw
ja
sarl
pop
jnp
fwait
clc
inc
push
adc
push
add
push
stos
push
arpl
iret
imul
push
lcall
mov
xchg
nop
adc
fstpt
dec
lahf
sti
push
das
aam
idivl
ja
sbb
sub
sub
or
mov
ljmp
lea
out
jnp
leave
stos
repnz
sub
imul
push
out
cmp
testb
insb
repz
cli
loope
cmp
cmc
mov
stc
movb
xor
movb
pushf
call
sbb
inc
xor
sub
adc
std
inc
adc
ror
bound
lods
add
stc
dec
mov
sbb
xchg
sub
sahf
rorb
push
popa
fldenv
jmp
mov
sub
sbb
add
push
imul
lock
fisubs
loopne
icebp
sub
rorb
loop
stos
xchg
and
enter
sub
fdivrs
or
and
dec
aaa
les
insb
aas
xor
loopne
push
or
xchg
mov
and
inc
sub
push
fwait
stos
repz
cli
daa
xor
jecxz
pusha
test
or
pusha
call
aaa
clc
pop
lea
pop
call
sub
mov
cmp
call
mov
inc
xlat
imul
std
in
push
lahf
sub
pop
mov
adc
sahf
out
mov
jge
add
add
inc
dec
jb
insb
adc
sar
mov
dec
jno
pop
out
push
in
faddp
inc
push
test
inc
outsl
pop
mov
push
dec
push
pop
add
rorl
xchg
aad
adc
stc
testl
in
xchg
imul
idivb
loope
mov
push
je
xor
outsb
clc
add
mov
push
movsl
push
or
mov
inc
jnp
jo
cmpb
out
test
pop
pop
cmpsb
icebp
mov
sti
add
jns
xor
pushl
ret
sub
mov
or
or
sbb
gs
add
fisubrl
aas
add
pop
xchg
lcall
icebp
outsb
or
push
and
jno
aas
xorb
push
test
aam
stos
mov
mov
ret
pop
stos
xor
pop
dec
xchg
cld
xchg
dec
insl
and
out
sub
dec
repz
hlt
sbb
mov
loop
mov
stc
mov
push
movb
cmp
call
pushf
call
call
icebp
adc
inc
mov
adc
subb
pushf
in
xor
xchg
mov
loope
sub
adc
mov
lds
xor
pop
push
sub
popl
and
icebp
aam
cmp
push
fimull
divl
hlt
enter
xchg
shrb
pop
xor
sahf
stos
sbb
add
aad
shlb
insb
xor
aaa
movsb
sarb
pop
movsl
repz
hlt
mov
sub
mov
imul
and
mov
or
mov
and
add
xor
subl
jmp
test
dec
push
lret
aad
inc
je
jl
mov
add
pushl
xchg
jecxz
in
or
ficomps
fnstcw
add
dec
fsubrl
xchg
loopne
sbb
repz
cmc
sbb
adc
ffree
mov
outsl
xchg
sahf
xchg
clc
inc
sub
jnp
je
pop
sbb
outsb
movsl
out
xor
bound
out
pop
lock
nop
mov
les
jp
mov
fwait
enter
mov
or
data16
xor
push
dec
lods
das
sahf
movsb
jg
jl
nopl
cmc
xchg
sbb
bound
lea
addr16
ljmp
pop
pop
movl
push
movl
lea
jmp
or
push
mov
je
xchg
push
sarb
rolb
pop
aas
push
lods
fbld
and
repnz
mov
movsl
xchg
aaa
aas
les
and
dec
mov
mov
insb
fs
cld
dec
jbe
das
cmp
aaa
das
daa
and
scas
xchg
lods
add
int
pop
aas
pop
sub
cmp
popa
int3
pop
jecxz
jge
repz
div
in
pushf
mov
jmp
rol
scas
pop
out
xchg
es
inc
lods
xchg
pop
enter
dec
test
mulb
pop
faddl
ss
inc
das
adc
push
xchg
pop
sbb
and
jmp
inc
sub
rorl
mov
jl
xchg
add
fcmovne
dec
shrb
mov
sub
add
aad
dec
xchg
push
or
insl
or
stos
mul
out
mov
repz
divb
xchg
push
jo
mov
inc
xchg
mov
imul
stos
loopne
mov
test
in
out
in
leave
jle
xor
mov
sbb
test
and
scas
mov
jno
jg
mov
sub
mov
pushf
loopne
mov
fbld
mov
test
in
mov
sub
sahf
int
lcall
mov
pop
gs
fbld
std
divl
push
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
movl
pusha
push
pushl
popl
pushf
pushl
ret
lea
call
push
movb
lea
jne
bswap
push
mov
movzbl
mov
movb
pushf
pusha
push
lea
jmp
push
mov
mov
pushf
pushf
pushf
xchg
lea
movl
pushl
pop
lea
jmp
imulb
pop
inc
inc
dec
repz
jecxz
repnz
sub
incb
fcomp
or
stos
pop
aad
pop
popf
ret
call
pop
lahf
push
mov
ljmp
sbb
shrl
jbe
adc
outsb
ljmp
and
xchg
scas
mov
or
fldcw
popf
rcl
mov
or
rorb
fisubrs
std
lock
add
test
pop
rorl
sub
cmp
jb
inc
das
mov
mov
pop
jbe
cli
push
adc
ja
aam
jl
adc
jmp
aad
xchg
and
arpl
rcll
xchg
movsb
xor
test
push
mov
mov
sbb
test
cli
pop
mov
cmpsl
mov
cltd
jecxz
fsts
xchg
mov
sub
in
push
fdivl
scas
push
xlat
fsubs
inc
iret
adc
adc
or
pusha
sub
dec
enter
push
popf
loopne
xor
loope
pop
xchg
push
cmpsb
pop
mov
add
xchg
push
pop
jns
sahf
pop
mov
ljmp
flds
push
cs
mov
rcll
ljmp
or
outsl
cmp
xchg
mov
decb
hlt
fimuls
add
xchg
cwtl
iret
and
mov
in
jnp
xor
mov
es
mov
aam
mov
jp
cmp
call
jnp
xchg
fstl
test
test
outsb
pop
test
lcall
ret
fists
pop
sub
jns
mov
and
push
in
jge
xchg
test
icebp
jbe
maskmovq
and
add
mov
das
inc
test
xor
push
pop
rolb
es
mov
xor
and
mov
mov
scas
xchg
sbb
orl
imul
dec
sti
sti
cmp
cmp
lds
test
insb
sti
loopne
mov
mov
or
sbb
cld
test
adc
and
notb
or
ret
aam
movsl
jmp
push
add
xor
repz
sub
xchg
sub
test
push
push
sahf
push
dec
out
hlt
or
mov
and
cltd
iret
pop
add
inc
xchg
adc
mov
push
sbb
push
andw
push
repnz
in
inc
aaa
sub
popa
jecxz
enter
adc
adc
add
lds
das
fiaddl
mov
mov
test
movsb
xchg
xor
in
aam
in
idivl
mov
lock
fmul
sub
insl
andb
sbb
lods
int3
dec
dec
movsl
push
mov
xchg
adc
push
cmp
shrl
fists
in
fldt
inc
in
jb
sbb
clc
and
push
leave
test
mov
lret
out
mov
or
jnp
fwait
std
or
in
call
xlat
dec
jl
lea
xor
inc
jo
mov
ljmp
jae
cld
sbb
add
push
inc
outsl
dec
or
lretw
add
lods
or
jno
and
inc
shl
lods
push
xchg
push
dec
loope
out
aaa
lret
add
and
add
mov
adc
and
jne
adc
frstor
pusha
mov
mov
fcomip
aaa
cli
mov
xchg
call
outsl
push
es
mov
mov
iret
pop
std
or
gs
inc
jnp
out
jae
inc
movsl
or
and
push
fs
and
mov
lcall
dec
mov
sti
push
add
stc
sti
int
loopne
cmp
test
imul
mov
sbb
ret
lods
jae
and
lock
cmp
test
movb
jg
pop
sbb
push
std
push
sub
cmp
and
in
add
add
mov
fistpll
lahf
push
adc
inc
inc
adc
mov
imul
pop
lock
in
test
ret
xor
leave
rcrb
sti
lods
pop
lods
lods
push
test
adc
cmpsb
jecxz
jae
movsb
add
incl
adc
dec
das
lcall
xchg
insb
addr16
ficoms
cs
pop
push
xor
pop
fsubrs
or
pop
pop
pusha
scas
ds
or
int
push
testl
mov
cmpsb
jae
addr16
jmp
clc
and
jmp
roll
ror
or
jp
sub
xor
arpl
imul
pop
cmp
ror
movsl
clc
or
leave
and
cltd
mov
jo
in
dec
out
mov
fdivs
sahf
enter
test
or
sub
mov
dec
jne
jmp
rcll
movsb
inc
js
cmp
cmpsb
sbb
push
fs
stos
jbe
sbb
aas
cmp
cmpsb
leave
es
stos
in
stos
push
cmp
scas
sub
rol
fwait
cmc
sbb
and
push
sahf
dec
outsl
pop
cmc
movsb
mov
add
std
mov
fcoml
fildll
mov
push
pop
jmp
cmp
in
push
lods
lods
cmovge
mov
or
lock
mul
add
pop
or
mov
jl
dec
stos
fidivl
dec
inc
fwait
cmp
inc
scas
add
push
sahf
outsl
ret
in
fldt
cmpsb
inc
inc
push
xor
fucomi
movsb
or
movsl
pushf
out
shlb
mov
or
push
shrl
add
sbb
xchg
int
sub
movsl
inc
inc
pop
lea
rorb
xchg
xor
sahf
ljmp
test
cmpsb
and
xor
or
push
mov
lods
push
lahf
lahf
mov
arpl
jno
dec
adc
int
mov
add
out
fistl
xlat
and
std
cmp
cmpb
std
imul
fbld
ja
mov
jmp
fidivrl
sbb
in
cld
cmp
inc
cli
out
mov
sbb
mov
pop
xor
dec
sahf
push
push
in
mov
xlat
xor
push
loop
scas
dec
dec
mov
cmp
rcll
push
in
xchg
fstpt
cmp
inc
dec
cmp
lea
mov
jmp
mov
int
ja
pop
pushl
movsl
rclb
mov
push
fisttps
add
nop
jl
mov
adc
insb
aam
movsb
mov
dec
aas
lods
insb
fnstcw
cmc
or
cld
jo
fnstcw
push
push
sub
jb
add
xlat
stos
cmc
scas
arpl
leave
mov
xlat
decb
inc
in
daa
outsl
xor
pop
mov
sbb
sub
dec
add
mov
fistpl
jmp
xor
jne
addl
or
pushf
stos
aas
aam
aad
adc
lret
lcall
dec
push
mov
jnp
out
mov
push
cmp
add
nop
ret
lret
lahf
push
mov
add
inc
lahf
mov
jmp
add
cmp
xchg
inc
sub
sbb
xchg
push
lods
sarb
pop
pop
mov
lods
insl
data16
push
fnstsw
dec
and
cmc
outsl
and
std
loopnew
std
out
movsb
stos
mov
in
adc
fisubs
popa
cli
sbb
popf
jno
pop
xor
dec
sub
arpl
push
dec
shrb
ret
pushl
popf
aad
and
xor
mov
icebp
dec
test
int
pop
insb
bound
ss
jnp
sub
jb
cmp
jle
sub
in
pop
and
call
jbe
push
mov
add
and
push
pushf
popa
mov
je
dec
dec
daa
mov
pop
ss
mov
jge
loopne,pn
push
cmp
rclb
push
xchg
pop
into
adc
imul
push
sbb
pusha
jl
into
lods
into
sub
cli
bound
dec
in
fldl
xchg
inc
or
dec
xchg
out
test
mov
lahf
mov
inc
in
sub
or
shll
lods
fbld
inc
or
inc
add
fwait
xor
jb
pushl
add
pop
aam
adc
pop
jg
sbb
mov
outsb
in
mov
push
mov
jle
push
fsubl
addl
push
repnz
imulb
jne
mov
mov
cli
push
mov
shlb
jmp
aaa
jmp
sbb
push
dec
sub
rorl
xchg
mov
or
test
push
or
ljmp
sbb
sti
cmc
mov
je
in
lds
and
imul
push
inc
fwait
or
pop
mov
les
pop
repz
hlt
mov
cmpsl
mov
in
add
cmp
cmpsb
adc
and
mov
lods
test
xchg
imul
mov
inc
pop
invd
loopne
cli
cmpps
mov
lea
pushf
add
in
mov
or
push
clc
mov
fstps
mov
outsl
cmp
push
cmp
jecxz
xor
mov
sub
scas
test
jp
shlb
js
test
mov
mov
addb
mov
dec
fldl
add
mov
ficoml
mov
enter
or
ret
fiaddl
cli
cld
jle
mov
xchg
imull
push
jmp
pop
jb
push
jo
mov
mov
cmp
or
push
push
jo
dec
js
and
adc
inc
and
pushf
test
inc
imul
push
or
xorb
icebp
mov
cmpsb
and
jnp
shlb
sbb
inc
mov
aaa
arpl
xlat
jmp
sub
mov
sbb
push
fwait
cmp
call
inc
test
xchg
imul
mov
out
les
mov
movsl
cmpsb
addr16
loopne
loope
jl
mov
es
rcll
ds
push
cmp
dec
sbb
int3
and
mov
or
sahf
push
inc
stc
dec
xchg
arpl
pop
ss
jecxz
cmpsl
add
stos
jo
sti
inc
insl
xor
sbb
test
std
stos
js
pop
sbb
clc
addb
test
fnstsw
js
sbbl
out
and
add
inc
dec
jne
in
inc
lret
mov
lds
aaa
sbb
cmp
rclb
ds
test
icebp
pop
push
inc
cli
inc
mov
or
push
stc
pushf
lods
jmp
inc
out
loop
and
cmp
fs
mov
cmpsb
jbe
scas
xlat
adcl
cmp
mov
call
push
popf
fdivrp
int
maxps
dec
in
cmp
lods
dec
je
aad
loop
jmp
mov
and
popf
add
xchg
push
scas
into
mov
push
sub
dec
das
mull
xor
in
inc
fnstsw
sti
xor
jne
fildl
jge
lea
daa
pop
and
and
dec
mov
sub
mov
inc
pop
dec
pop
dec
push
out
mov
gs
call
sub
fwait
sub
jnp
aaa
cmpsl
xchg
dec
jbe
add
leave
stos
aaa
pop
sub
pop
fsubrs
inc
mov
mov
add
hlt
in
in
add
sbb
jmp
int3
stc
mov
or
outsb
out
pop
pop
fidivrl
in
cmp
in
inc
push
inc
jno
lods
add
dec
sub
stos
pop
pop
arpl
xchg
dec
je
lods
and
sub
add
enter
inc
aaa
rorb
aam
mov
ds
push
enter
in
fs
movswl
xor
sub
xor
push
push
popa
inc
es
cmp
jmp
pusha
shlb
cld
push
add
call
pop
xor
cmp
mov
stos
pop
cld
ret
inc
lods
aas
int
push
pop
fxch
pop
les
insl
popl
adc
or
pop
or
ss
lea
out
jp
sbb
movsb
and
outsb
jno
sbb
mov
xchg
ds
movsb
shlb
lods
lods
subl
out
push
xchg
add
sub
orl
movsl
out
insl
pop
pop
push
push
inc
lcall
dec
lock
in
int
js
rol
dec
push
lds
loopne
inc
les
push
sub
insl
das
push
mov
testl
cmp
std
or
js
cmp
cli
mov
adc
loopne
das
shr
sub
faddl
int
dec
sbb
outsb
in
icebp
and
or
lock
xchg
cmp
pop
and
outsb
xchg
out
push
add
xlat
cwtl
cmpsb
xor
pop
push
fdivs
sbb
push
mov
sbb
inc
cmp
nop
and
mov
dec
add
xchg
sbb
mov
sbb
in
std
or
jno
mov
and
es
push
lock
ret
adc
cmp
in
xchg
mov
fisubrs
xchg
fnsave
insb
or
adc
jb
cli
sar
movsl
mov
adc
adc
mov
pop
push
fcoml
adc
test
or
mov
sub
aas
jle
sbb
jnp
pop
sbbl
or
pushf
iret
rorl
iret
or
sub
movsl
push
inc
out
pusha
lods
cmc
mov
jns
pop
nop
ljmp
pop
out
mov
mov
adc
test
mov
or
out
fmul
adc
mov
ja
lods
and
xor
fnsave
leave
pop
push
bound
aad
nop
pop
iret
xchg
clc
inc
arpl
ret
cmpsb
das
mov
jo
sbb
and
sbbl
add
aam
lcall
add
push
int3
xor
or
cmp
mov
lret
decl
int3
ficoml
bound
dec
mov
dec
std
mov
jle
sub
testb
or
push
cld
cmpb
sahf
lcall
iret
gs
xchg
aad
outsb
dec
sahf
cmp
mov
dec
fsts
mov
mov
push
sbb
int
std
cmp
mov
xor
xor
add
xchg
or
sub
or
and
pop
loope
pop
repz
faddp
rorb
cwtl
cmpsl
lods
xchg
push
pop
jge
mov
mov
shlb
pop
outsb
xor
scas
aad
mov
inc
pop
xchg
and
cmp
xchg
imul
lea
and
pop
xchg
imul
cmp
sbbl
je
test
inc
mov
cmp
sub
adc
stos
xchg
fstps
add
iret
cmp
cs
movsl
popf
adc
inc
adc
or
pop
mov
jp
outsl
and
or
pop
push
mov
push
cmpsb
cmp
sub
xchg
mov
jle
sub
fnsetpm(287
rcrl
popf
push
add
in
xchg
adc
jne
mov
mov
das
pushf
adc
inc
mov
int3
scas
sub
mov
or
lcall
jns
js
push
std
pop
push
es
xchg
sub
xchg
bound
xchg
in
loope
stc
lcall
leave
push
jns
stos
outsl
aam
cli
adc
test
push
adc
push
or
popa
into
add
sub
stc
dec
ja
lahf
decb
jmp
pop
adc
pusha
sub
cmpsb
das
addr16
mov
and
add
fldz
rcrl
into
add
fisttpll
outsb
xor
adc
xor
and
add
mov
mov
pop
mov
dec
imul
outsl
sbbb
out
xchg
mov
pop
in
add
movsl
pop
je
int
cld
addr16
lock
cli
jg
or
mov
repnz
sub
aaa
aad
pop
iret
aad
scas
arpl
pusha
loope
pop
in
inc
mov
inc
shrl
or
gs
clc
xor
inc
iret
fildl
shrl
lods
jge
and
or
xchg
les
or
xlat
popf
stos
in
cli
push
add
into
inc
ljmp
fisubl
sbb
and
popf
inc
jne
push
cltd
jno
mov
mov
and
mov
lcall
add
sbbb
add
add
inc
or
stos
push
cmp
mov
in
loope
aas
jecxz
pusha
inc
fsubrl
dec
inc
xchg
inc
cmp
adc
jo
outsb
xor
fisubrl
addr16
adc
mov
jbe
imul
and
cld
ljmp
add
add
lock
insl
push
ja
loop
jnp
and
cltd
out
stc
xor
mov
ret
sbb
addr16
enter
xchg
and
subb
lret
inc
fadds
bound
cmp
mov
xlat
lcall
add
les
insl
or
fsubl
ljmp
sti
push
sti
push
rcl
clc
leave
xchg
cmp
sti
xchg
cmp
cmp
xchg
xor
fs
bound
test
aad
stc
push
fwait
rclb
scas
and
insb
movsl
sbb
mov
xlat
sbb
pop
das
xchg
es
mov
inc
sbb
sub
fcomp
xorl
mov
imul
testl
jecxz
xchg
sbb
aam
clc
subb
push
gs
sub
dec
sahf
pushf
sbb
addl
inc
push
fisubrs
mov
fdivl
fiadds
cmc
jl
adc
mov
hlt
add
mov
loop
lcall
cmpl
jmp
mov
nop
xor
je
xor
daa
push
dec
shlb
pusha
mov
mov
push
mov
push
clc
push
adc
cwtl
cmpsb
jecxz
and
lds
loop
subl
shlb
out
xlat
subb
xchg
inc
in
inc
or
mov
xchg
add
mulb
add
ljmp
pop
dec
mov
arpl
test
sbb
jge
sbb
ret
jl
outsl
inc
jno
inc
mov
push
stos
add
mov
lret
lcall
adc
pop
xchg
negl
dec
daa
xchg
or
fdivs
enter
fwait
js
mov
stos
pop
sub
subb
sub
jns
and
js
fidivrs
adc
ret
and
ficomps
cwtl
jmp
repnz
clc
and
test
add
inc
mov
mov
int
cmpsl
lock
mov
xchg
jb
lods
jg
les
out
int3
mov
inc
xchg
jmp
enter
fxch
adc
gs
jnp
stc
pushf
sub
out
aam
sub
js
xchg
pop
add
stos
cmp
add
repz
lods
cmc
mov
mov
movl
cwtl
rcr
dec
cmpsb
dec
lahf
fnstsw
sbb
push
mov
xlat
ficompl
jp
or
leave
mov
lret
push
cmpsl
and
mov
ss
out
sub
in
cmp
out
cld
cli
jae
cmp
sub
cmp
lret
andl
fwait
hlt
push
std
ret
sub
nop
pop
jae
jge
or
and
cwtl
fprem
add
mov
pop
adc
mov
adc
lret
fstpl
cmp
int
mov
add
push
in
notb
mov
pop
mov
mov
lock
jo
sub
jg
pushf
cmp
add
sets
lahf
ljmp
push
outsb
xchg
jbe
push
adc
call
mov
push
stos
leave
loopne
cmc
stos
fwait
pop
mov
xor
pop
sub
add
inc
rorb
mov
mov
std
lcall
jg
loope
jl
ljmp
out
jbe
pop
sar
popa
xor
cmp
mov
in
mov
in
sub
mov
and
aas
cmpsl
into
cmc
mov
cmp
lods
xchg
ret
rcr
mov
mov
dec
add
add
rcrl
inc
push
mov
stos
xchg
sub
pop
popf
data16
stos
jo
jp
bound
and
test
outsb
cmpsl
xor
jns
mov
nop
push
jae
ror
or
sub
dec
cltd
push
mov
add
into
pop
test
lea
pop
adc
push
mov
inc
sbb
jae
into
or
adc
mov
clc
jle
inc
stos
lahf
shl
clc
cmp
xor
xlat
fs
adc
dec
jmp
mov
inc
addr16
aam
sti
mov
fistl
mov
mov
rcr
cmp
jnp
xchg
pop
insb
pop
mov
push
es
movsl
movsl
sub
xchg
mov
insl
pop
fcoms
add
xor
mov
add
repz
mov
jns
push
jnp
test
arpl
pop
stc
lahf
jae
add
xchg
scas
imul
and
popa
push
mov
int3
sub
xor
push
inc
sbb
rcrb
call
sub
jp
xlat
lcall
inc
outsl
das
outsl
loop
jbe
pop
fbstp
pop
cld
cltd
and
jge
out
adcb
mov
pusha
inc
std
xorl
and
push
adc
outsl
xchg
ljmp
roll
cmpsb
push
les
pop
out
xor
sbb
pop
mov
jo
cmpsl
andl
jp,pn
cltd
cltd
cltd
push
pop
jnp
imul
sub
iret
out
adc
cmp
dec
iret
adc
pusha
xchg
cmp
push
jle
mov
ret
jae
ret
jb
jl
and
pop
fsubs
das
mov
sub
sbbb
inc
jg
sub
mov
lds
insb
and
std
pop
aaa
dec
arpl
iret
sub
adc
sbb
aas
insl
stos
pop
repnz
xchg
out
jae
loop
lret
test
inc
movsb
ja
ljmp
imul
cs
addr16
mov
mov
jns
push
sub
pushf
adc
lods
ljmp
jle
jmp
sbb
xchg
mov
adc
add
mov
mov
addl
ret
jle
pop
icebp
scas
ss
dec
xor
hlt
jae
outsb
outsl
sbb
pushf
cwtl
cmpsl
xchg
mov
mov
mov
inc
jp
das
ret
jle
and
dec
and
pushf
mov
adc
ljmp
or
mov
mov
sbb
in
sbb
jecxz
xchg
xchg
lods
and
sub
add
cmpps
xchg
jmp
xchg
fsub
jle
jne
shll
lds
xchg
sbb
aas
push
push
cld
mov
int3
push
out
dec
test
sarb
js
sbb
sahf
test
pushf
fisttpll
stos
out
fnsave
call
clc
lock
insl
cmp
enter
inc
jle
adc
jecxz
inc
pop
daa
and
mov
iret
jmp
dec
push
push
ror
pop
nop
aad
sbbb
sbb
ljmp
pop
and
inc
loop
push
cmc
xchg
inc
out
inc
leave
leave
xor
mov
jb
insl
xchg
push
pop
out
clc
fcos
out
pusha
xchg
mov
pop
push
rcl
mov
jge
test
inc
push
xor
xchg
dec
lret
xor
out
xchg
pop
adc
lahf
aad
into
and
test
and
jle
movsb
mov
dec
out
cmp
imul
xchg
jbe
mov
ret
jmp
mov
fldt
mov
push
loope
sti
dec
push
or
push
loop
lahf
xorl
shll
daa
mov
xor
mov
xchg
ror
mov
lret
jbe
daa
pop
imul
mov
movsb
cwtl
inc
sub
inc
xchg
je
xchg
mov
mov
and
subl
in
imul
or
ret
lcall
popa
push
je
mov
xor
push
jmp
pop
ljmp
mov
cmc
push
jmp
inc
mov
insb
or
mov
add
and
pop
pop
dec
icebp
bound
in
xchg
punpckhdq
sub
mov
inc
cmp
xchg
and
fwait
xchg
sbb
sbb
mov
popf
cmpb
push
lcall
aaa
sbb
add
xor
pop
cmpsb
add
mov
das
sbb
dec
das
rcrl
pusha
rcrb
fisubrs
xor
push
xchg
mov
push
fnstcw
pop
mov
insb
nop
or
add
mov
inc
lahf
cmpsb
sbb
or
in
and
sbb
sbb
mov
xchg
push
movsl
enter
hlt
into
cmpsl
xchg
pop
inc
sbb
lea
push
andb
sub
iret
mov
or
enter
xor
jo
and
aaa
js
sub
ret
mov
sbb
xor
add
jbe
dec
je
jne
and
sbb
aaa
xor
and
and
jo
cli
js
mov
les
push
out
in
test
mov
je
sbb
fldl2t
cs
pop
push
rcrb
scas
pop
jno
cmpsl
cli
mov
jne
pop
pop
daa
or
jecxz
mov
outsb
xor
xchg
push
movsl
imul
rcrb
cltd
add
pop
repnz
aad
fistpll
adc
scas
jge
add
push
arpl
add
repnz
sbb
fwait
lahf
scas
push
into
mov
movsb
mov
clc
or
sbb
lcall
mov
inc
das
cld
dec
mov
xchg
mov
cmc
insb
movsb
cmp
xchg
addr16
ret
or
push
dec
mov
mov
lock
out
fs
add
xor
leave
std
in
or
mov
xchg
jo
imul
test
xor
arpl
cld
and
rorb
jle
push
je
dec
add
repz
push
pop
jecxz
cs
fwait
mov
xor
iret
push
sub
fcoms
rclb
dec
ja
sbb
je
je
cmp
cmp
leave
push
push
sub
pushf
push
sbbb
insb
or
jnp
shll
xchg
mov
inc
sub
shrb
and
inc
adc
dec
iret
rcl
and
or
fcoms
pop
enter
mov
ret
cli
ljmp
sub
xchg
aad
out
es
jecxz
insb
push
mov
pop
fisubrs
add
fstpl
jbe
cmp
fmuls
xchg
jns
lahf
jp
add
jle
inc
add
xchg
xchg
cmp
jo
xchg
mov
xor
mov
mov
pop
xor
ret
ficoms
sbb
xchg
adcb
movsb
push
mov
imul
push
testb
add
xchg
mov
or
dec
cs
cmp
pop
or
or
pop
clc
cltd
xor
xchg
adc
sbb
cli
pop
pop
sbb
xor
into
ss
xor
push
add
xor
fbld
lahf
jmp
xor
shlb
repnz
sbb
push
pop
sub
jp
adc
mov
add
pop
mov
fwait
mov
sub
fcompl
push
jb
aas
and
das
and
in
mov
xorl
sbb
xor
mov
and
gs
cmp
mov
adc
mov
fwait
add
mov
insb
push
xor
lahf
xor
jns
xchg
ss
sbb
ss
and
xchg
nop
mov
xor
ljmp
aad
adc
outsl
jmp
mov
and
das
push
fs
aad
scas
mov
inc
jge
fsts
adcl
adc
shlb
inc
imul
push
and
das
mov
rcrl
inc
sbbb
xlat
imul
mov
mov
mov
mov
adc
orb
mov
aas
ja
pop
ljmp
jno
imul
add
pushf
sub
mov
or
pop
sub
fimuls
pop
mov
in
mov
lods
sahf
ret
cs
insl
jp
in
jmp
stos
pop
adc
mov
jecxz
sahf
sub
sbb
pop
enter
mov
mov
loope
and
and
js
xor
je
mov
sub
data16
pop
jmp
mov
lods
mov
or
in
push
into
jb
ljmp
outsb
scas
dec
sbbl
or
aaa
les
push
push
pop
adc
inc
xor
scas
jbe
fmul
lret
push
subl
mov
push
cwtd
popa
dec
pop
lcall
adc
adc
arpl
push
inc
sbb
int
in
mov
fadds
sbb
adc
addr16
leave
ss
or
gs
jmp
or
mov
inc
jge
or
push
pop
sarl
add
or
or
inc
ud1
cmpsb
in
sbb
push
movsb
xchg
cmp
jbe
cmpsb
sub
clc
push
inc
in
and
add
lret
in
cli
or
test
loop
cmp
lds
push
shrl
push
mov
cld
addb
xor
mov
fimull
adcl
loope
outsb
mov
dec
or
mov
push
mov
push
jnp
xchg
jo
sbb
loope
pop
push
add
mov
pop
adc
jmp
les
stos
push
mulb
push
mov
iret
aam
jge
push
add
lods
out
aad
jae
repnz
jns
dec
test
dec
sub
lcall
sbb
push
mov
sbb
mov
mov
mov
aam
inc
mov
push
bnd
call
shlb
es
xor
push
inc
inc
lret
in
dec
into
cmpsb
add
inc
cmp
push
gs
pushf
outsb
sub
jno
and
jne
or
in
xchg
test
and
movsl
aam
dec
add
loope
push
add
ret
dec
cmc
sbb
push
insb
xor
shr
xchg
or
add
adc
mov
adc
sbb
dec
cmpsb
or
int3
imul
sub
mov
popa
lock
inc
add
lcall
mov
stos
mov
pop
push
dec
mov
inc
ljmp
jnp
lds
jmp
sub
test
jg
inc
cld
mov
in
mov
sbb
call
xchg
cmp
pop
cli
loopne
loope
je
mov
addr16
enter
das
pop
push
stos
push
adc
call
icebp
xchg
jb
mov
mov
jecxz
bnd
ja
push
cld
cmp
fisubl
loope
aas
xchg
adc
sub
push
clc
push
adc
rclb
sahf
repz
pop
jp
or
mov
push
or
push
mov
imul
and
mov
mov
cli
xor
loopne
push
dec
push
imul
lret
dec
dec
or
andl
jmp
push
push
cmpb
adc
dec
in
xor
cmpsl
bound
pop
les
ja
xchg
pop
mov
dec
sbb
call
jmp
mov
cmp
ja
xchg
mov
mov
pop
lret
adc
int
lds
mov
push
pop
enter
ljmp
mov
add
or
mov
jno
lock
adc
sub
mov
jbe
sbb
xor
loope
dec
orb
push
lods
adc
scas
sbb
jns
sub
mov
add
cmc
mov
mov
fcoml
aad
roll
sbb
lods
test
sarb
cltd
pop
shl
sbb
inc
je
test
sbb
fcomps
cmp
call
mov
xorl
andb
pop
xor
or
add
in
xchg
imul
nop
in
or
insl
fmulp
dec
mov
outsb
push
adc
inc
cmp
inc
xchg
mov
xchg
cmp
je
xlat
gs
out
out
mov
repz
incb
je
push
sbb
into
jecxz
out
xor
pop
cmc
push
test
mov
mov
scas
into
xor
xor
and
sub
fstpt
cmp
call
mov
dec
inc
cli
fucomip
dec
sub
sub
jmp
cmpsb
daa
ljmp
roll
and
add
cmpsl
jae
and
insb
inc
fisttpll
cmpsl
cltd
repz
imul
loopne
jge
add
jnp
jns
pop
xchg
iret
repz
jle
jno
jmp
out
sbb
add
mov
loope
or
aam
pop
movsb
push
xchg
stc
or
pop
std
insb
jae
mov
inc
popf
xchg
lds
clc
dec
mov
push
sub
loopne
mov
bound
dec
inc
sbb
into
outsb
int
loop
sbb
addr16
sbbl
shlb
jp
or
pusha
lcall
test
pop
shr
inc
es
int3
or
dec
dec
pop
push
jnp
sbb
stos
mov
push
stos
jp
or
mov
inc
add
shlb
jl
mov
cmp
ficoms
or
sbb
mov
cwtl
add
repnz
sbb
jno
push
jns
xor
lcall
sbb
xchg
cmpsb
mov
push
and
jg
out
sahf
sarl
mov
inc
in
jl
xor
scas
xchg
push
or
cld
or
js
sbbl
rorb
jae
pop
jl
daa
loop
push
andl
sub
inc
cmp
adc
mov
cmp
and
ljmp
xor
ja
cmp
aad
pop
jns
mov
popf
mov
les
and
push
dec
pop
stc
add
movsb
sub
pop
xchg
pop
mov
push
shrl
sahf
sarl
xorl
test
and
and
outsb
orb
or
cmp
push
mov
cmc
jge
dec
pusha
fs
mov
sub
loope
icebp
inc
cmpsl
dec
ljmp
add
push
xchg
test
pop
add
hlt
in
pop
cltd
pop
or
or
jno
pop
std
mov
adc
lds
cwtl
int3
and
jne
xchg
mov
aad
or
int
jg
sbb
cld
pop
inc
add
cli
aad
ss
int
outsl
leave
jne
stos
gs
pop
aaa
repnz
xchg
mov
fwait
mov
jl
in
mov
and
test
mov
mov
push
lret
sub
aam
idiv
dec
std
sub
je
cli
bound
aad
push
adc
cmp
xor
add
mov
fstl
roll
xor
xchg
xchg
adc
scas
mov
inc
andnps
test
and
fidivs
push
pop
mov
jmp
inc
push
test
cs
lret
adc
into
jns
mov
jae
test
test
add
or
xchg
mov
sub
mov
mov
daa
lods
dec
js
ss
les
cmp
pop
in
mov
add
movsb
pop
roll
mov
jg
pusha
xchg
jmp
gs
push
stos
fdivrs
jbe
hlt
popf
outsl
pop
cli
out
mov
popa
xchg
mov
or
mov
enter
mov
and
repz
fwait
in
xchg
inc
rcrl
lret
mov
jle
cld
xor
mov
pop
popa
daa
std
add
je
fldt
shrl
loop
ret
sahf
dec
aam
ret
ja
popl
xchg
scas
das
push
popf
mov
scas
xchg
add
dec
movsb
jecxz
lahf
push
outsb
out
lea
pop
cld
xor
push
shl
pop
scas
dec
xchg
out
adc
mov
sub
cmp
shlb
mov
sub
mov
dec
mov
lret
jnp
scas
cs
pop
add
xchg
jb
cmp
and
jno
nop
out
sahf
or
mov
mov
push
adc
xor
mov
psrld
int
popa
scas
cwtl
jo
out
adc
inc
outsl
sub
dec
in
test
rclb
or
lahf
fcoms
xlat
daa
pop
leave
inc
and
subb
popf
xor
pop
xchg
and
dec
cwtl
shll
inc
dec
mov
xchg
jcxz
dec
lods
sar
sbb
insb
and
xchg
jecxz
repz
jmp
out
xor
inc
xor
loope
sub
in
inc
xchg
xor
sarl
call
test
sub
dec
xchg
adcb
loopne
cs
or
cmp
xchg
bnd
data16
mov
jbe
jg
imul
xchg
aam
or
gs
xchg
test
ds
out
aad
popf
test
ljmp
sub
mov
xor
out
cmp
xchg
dec
int3
cmp
xchg
repz
arpl
jnp
xchg
xor
add
push
sbb
nop
dec
dec
dec
inc
jmp
test
or
cmp
xor
mov
ret
lcall
icebp
movsb
cmp
lds
testl
mov
jmp
lods
ret
rclb
fists
pop
mov
xchg
lahf
cmpl
js
jno
loope
pushf
push
test
scas
lahf
dec
inc
in
or
ret
orl
dec
fimuls
pop
sahf
dec
nop
mov
jmp
jb
hlt
push
call
into
add
pop
cmp
push
loope
into
jae
out
xchg
clc
subb
movsb
push
adc
push
rclb
imul
mov
xlat
adc
mov
xchg
sbb
mov
lea
xor
mov
sbbb
or
lods
js
enter
sub
ja
sbb
push
fsts
outsb
rorl
call
add
push
out
xchg
jg
mov
jns
movsb
pop
sahf
jnp
add
aaa
mov
xor
xchg
loop
out
xor
repnz
mov
incb
mov
sti
mov
pop
icebp
out
and
cmp
pop
out
fsubs
out
insb
mov
mov
rclb
sarl
jbe
daa
push
cli
sub
push
pop
enter
inc
adc
in
ja
clc
and
enter
adcl
pop
in
mov
ss
sub
cwtl
arpl
inc
jns
neg
xchg
dec
sti
vcvttsd2si
xchg
sbb
fadd
inc
cmpsl
add
xchg
ljmp
mov
sub
fistpl
mov
xchg
rcrb
pop
or
cmpsb
enter
inc
xchg
stc
outsl
inc
jle
and
jg
test
and
sub
in
call
pop
stc
stos
popf
out
dec
push
xlat
push
xor
sbb
mov
stos
lods
sub
mov
add
cld
fsub
push
or
into
cli
mov
mov
leave
mov
xchg
jecxz
sub
imul
fidivrs
cmp
movsl
aas
std
call
dec
stos
cmp
shrb
pop
push
outsb
cmpsl
out
clc
insl
push
stos
adc
ja
incl
repnz
pop
mov
lea
xor
jecxz
xor
mov
nop
or
icebp
xor
sub
jmp
sbbl
fiadds
push
mov
insl
xchg
in
cmp
sub
int3
test
incl
cmpsb
fadds
cli
pop
cld
ja
mov
data16
push
daa
sub
jmp
inc
lcall
mov
adc
inc
outsb
aad
mov
mov
cmp
mov
insb
aam
add
jecxz
push
imul
or
sbb
imul
mov
xchg
push
xchg
in
jbe
push
add
push
sub
xchg
push
ret
out
scas
ret
lret
dec
adc
sbb
jns
jp
bound
sahf
cmc
leave
sub
jo
jge
loope
in
test
ret
inc
mov
inc
popa
add
fadds
mov
jne
mov
lret
arpl
inc
pop
outsl
jecxz
and
test
shll
popa
sbb
dec
cmc
fistpl
or
and
dec
lds
stc
sub
into
sbb
pop
push
cmp
xor
outsb
xor
and
sti
aas
dec
mov
push
xchg
movsl
xor
cmp
fldlg2
mov
cmp
mov
mov
xchg
xor
push
pop
mov
adc
xchg
sub
pop
div
sub
imul
fisubrs
cmp
dec
adc
jg
loope
es
out
lcall
out
inc
into
mulb
xchg
ss
mov
fcoml
shll
pushf
adc
push
ljmp
inc
push
inc
jo
add
repz
adc
xchg
test
lcall
outsb
mov
orb
xchg
pop
sub
inc
and
push
cwtl
dec
lcall
dec
push
and
cli
dec
repz
aaa
mov
jns
xor
test
test
loope
movsl
mov
hlt
adc
dec
sub
inc
cld
repz
jle
mov
mov
mov
stos
mov
inc
dec
or
rcl
dec
test
or
subl
push
or
lock
iret
filds
sub
jo
mov
gs
and
mov
ljmp
popa
pop
ret
xchg
ds
xchg
xor
mov
sub
xchg
iret
push
out
fiadds
mov
imul
and
and
sti
hlt
pop
dec
jae
xchg
mov
cmpsb
std
dec
stos
xchg
das
push
sub
insb
test
inc
mov
push
nop
adc
push
push
in
cwtl
scas
add
mov
sub
push
sbb
pusha
add
fcomi
inc
push
fsubs
lahf
jo
jle
iret
or
sub
pushf
cmp
push
ficompl
add
sub
ficoms
or
xlat
lds
dec
jg
clc
cmp
shrl
insl
stc
add
cli
mulb
std
xor
cmp
loopne
adc
jno
std
bound
sahf
lock
loopne
out
repnz
jns
fsubrl
inc
pop
cmc
pop
stos
mov
dec
adc
mov
push
or
and
add
jge
idiv
scas
pop
jae
rcl
or
aas
push
mov
push
das
xor
hlt
xor
loope
or
xchg
and
bound
inc
xchg
movsb
lds
xor
bts
push
enter
fnstsw
je
fucomi
xchg
or
adc
mov
popa
xchg
adc
mov
push
ret
push
lret
int3
lcall
test
icebp
sti
mov
sub
mov
cwtl
mov
mov
xor
push
into
pop
sar
cwtl
fimuls
jg
and
adc
xchg
ret
mov
mov
pop
push
mov
xchg
out
fwait
xor
adc
mov
cs
inc
pushf
jp
pop
xor
inc
je
fcmovnu
cltd
xchg
loopne
lahf
sub
test
outsl
out
movsb
mov
or
shl
xchg
adc
test
int
mov
fwait
inc
imul
cmpsl
or
cltd
ljmp
insb
jge
jl
cmpsb
sarl
xor
cmp
pop
nop
pop
outsl
push
fucomip
mov
pop
xchg
inc
sub
popf
stc
push
pop
test
pop
hlt
fwait
out
mov
pop
and
in
rcll
lcall
mov
mov
cld
pusha
jae
and
fld
jg
loopne
mov
je
xchg
shrb
js
leave
push
cmpsl
ljmp
cmp
mov
lahf
inc
push
dec
cmp
pushf
inc
movsb
jae
inc
xor
sbb
mov
loopne
mov
repz
cs
xchg
inc
int3
xchg
and
hlt
test
in
inc
jbe
enter
inc
shrb
stc
in
shll
repnz
test
xlat
dec
jmp
shrb
rclb
popf
xor
mov
insb
sub
add
add
xchg
adc
loopne
rorb
or
fbld
mov
jno
mov
rorl
enter
lea
and
dec
and
out
aad
scas
sbb
shll
xchg
pop
push
inc
cmpsb
loopne
sbb
data16
cmp
sbb
sub
lea
or
in
pop
jb
adc
sub
or
mov
lahf
sub
inc
mov
subl
daa
rcr
flds
mov
in
subl
pop
ret
inc
orl
inc
hlt
dec
test
mov
cmc
push
fildll
cmc
pop
in
mov
push
jbe
mov
dec
movsb
adc
fnstenv
inc
aam
mul
in
in
mov
sub
cmc
js
das
mov
out
jae
mov
push
nopl
jbe
call
movl
mov
addb
mov
icebp
test
clc
adc
insl
mov
pop
stos
dec
int
xor
add
or
pop
push
lock
or
hlt
cmp
js
inc
andb
imul
xchg
or
mov
mov
sub
cld
cmpsb
pop
clc
adc
mov
mov
push
rclb
adcl
add
loope
addb
loope
xchg
sbb
int3
iret
popa
insb
aaa
push
mov
pop
pop
xchg
xor
mov
int
mov
repz
call
sbb
or
fdivrl
mov
inc
filds
jnp
adc
jmp
into
sbb
xchg
test
cs
pusha
cs
cmp
ret
mov
popa
xor
push
shrl
mov
add
pop
arpl
aaa
clc
out
xchg
cmp
jae
jl
inc
mov
fwait
and
in
jo
push
pop
mov
scas
jo
cmpsb
fbld
ja
mov
jnp
adc
mov
xor
xchg
sub
fadd
push
pop
movl
enter
mov
jae
movsb
xor
imul
push
pop
cwtl
aaa
xchg
xchg
mov
inc
xchg
test
lods
out
cmp
pop
insl
movsb
mov
cmp
pop
xchg
pop
jl
inc
dec
xor
mov
pop
int3
xlat
std
insl
outsl
sbb
in
fld1
mov
fcompl
and
xchg
jb
jbe
push
in
aaa
outsb
lea
fidivrl
sbb
movb
xchg
inc
leave
ljmp
pop
xchg
daa
fs
mov
sub
mov
mov
scas
push
jp
rcll
mov
add
pop
sbb
test
xlat
aas
loop
idiv
out
rcll
test
cli
and
sar
js
aas
test
pop
xor
aas
mov
aas
push
add
and
sahf
fcmovb
fcomip
je
mov
cli
cmpsb
dec
fidivrl
movsl
sub
jns
inc
mov
cli
call
cld
xchg
add
mov
fidivl
imul
xchg
out
dec
sub
lret
and
push
arpl
xchg
popf
jl
cld
movsl
cmp
jmp
aam
or
shll
iret
ljmp
jb
sti
arpl
movsb
inc
fnstsw
sbb
xchg
scas
inc
pop
stc
dec
cs
stos
shll
jns
sar
gs
xchg
movsl
dec
mov
loopne
hlt
mov
loop
sbbl
aam
add
leave
fdivs
stc
cmp
rcll
add
in
mov
leave
sbb
inc
xchg
rcrb
mov
xor
xorb
add
leave
cmp
out
add
out
out
jno
stos
dec
cmp
jno
pop
lahf
pop
sub
and
mov
xchg
je
lds
ret
aas
rcrb
xchg
jb
inc
fsubrl
jns
cmp
sub
xchg
sub
xchg
outsl
mov
mov
adc
push
mov
adc
add
sbbb
push
or
mov
jnp
and
xchg
int
loop
js
dec
or
push
int
and
loopne
jb
aad
fstpt
sub
xchg
js
adc
out
call
iret
popa
iret
lcall
xchg
xchg
xchg
daa
xor
js
shlb
jmp
cmp
push
mov
mov
pop
mov
xor
sbb
cmp
orl
adc
aad
add
xchg
fbld
cmpsl
mov
das
and
sarb
lods
add
xchg
aas
sahf
outsb
push
add
lods
cmc
adc
push
cmp
popa
add
mov
mov
mov
push
stc
xchg
das
cltd
das
ljmp
inc
pop
or
push
loop
xchg
push
mov
test
mov
sub
add
das
pop
push
push
lret
fstl
scas
cltd
cmp
cvtdq2ps
das
dec
dec
out
dec
int
cmpl
std
mov
push
mov
fidivrl
popa
mov
cmpb
lods
push
inc
out
lcall
mov
lds
flds
cmp
stos
push
xor
sbb
push
rcl
in
mov
es
fdivs
test
xchg
sub
cs
mov
incl
adc
sbb
xchg
ljmp
and
push
lods
xchg
call
inc
adc
daa
mov
add
int3
xchg
lods
aas
dec
jmp
jl
and
movsb
jno
or
in
movsb
jle
adc
dec
push
std
stc
mov
xor
adc
jmp
divb
push
stos
lcall
or
movsb
push
pmaxsw
jae
test
js
jecxz
decb
push
pop
fisttps
cmp
or
pop
adc
int
or
mov
repnz
dec
sbb
inc
data16
test
xor
mov
jge
xchg
sarb
aam
pop
sti
cmp
ja
mov
or
mov
ficompl
jecxz
jnp
mov
cmp
pop
je
jb
sub
or
dec
pop
lret
xorb
mov
sbb
jmp
fimull
and
mov
aam
inc
or
and
ds
cmc
inc
lret
lea
idiv
ficompl
inc
fisubrs
jne
xor
dec
pushf
jo
xor
insl
push
mov
ret
and
fdivrl
or
pop
inc
pop
sbb
mov
repnz
test
mov
aaa
cmp
leave
push
sub
js
mov
fdivp
shrb
sbb
inc
nop
xchg
mov
test
push
dec
das
adc
mov
fadds
xchg
xchg
int3
pop
xchg
and
add
pop
popa
mov
iret
and
call
in
sbb
and
js
int
enter
movsl
pop
out
shrl
lret
and
in
scas
mov
push
out
xorb
or
out
jb
lea
mov
dec
add
mov
mov
lcall
imul
xchg
sub
repz
dec
xor
inc
movsl
sbb
cltd
fistl
adc
popf
repz
pop
hlt
sub
test
pop
inc
into
sub
mov
rclb
mov
test
imul
insb
pop
mov
xor
popa
jae
xlat
pop
shll
and
imul
jbe
jl
and
jno
imul
filds
xchg
xchg
mov
in
jle
test
add
out
int3
sub
dec
xorl
idivl
jg
popf
std
cmovno
repnz
mov
and
push
adc
or
es
in
scas
xor
mov
or
or
and
xor
adc
adc
cli
outsl
jmp
xor
cwtl
push
jb
es
in
cmpl
leave
jecxz
je
xor
dec
or
inc
mov
in
inc
mov
shrl
fmull
rcrb
shl
addb
adc
adc
mov
add
outsl
jg
pushf
mov
jge
or
lods
ftst
lock
mov
roll
in
mov
cmc
imul
dec
sub
jecxz
mov
inc
rcr
fwait
std
push
in
pop
sub
or
jmp
fistpll
cmp
mov
insl
stos
mov
dec
int3
loop
fimull
lret
icebp
push
mov
lock
dec
leave
test
cmp
scas
call
sub
orl
ret
pop
xchg
mov
pop
pusha
negb
scas
out
sub
and
iret
or
xchg
inc
jg
jno
mov
iret
xchg
jnp
in
pop
pusha
lret
jbe
leave
lea
jb
xchg
push
fcmovnb
leave
adc
and
push
dec
pop
mov
cmp
fmull
ret
push
mov
shlb
cli
xchg
pop
mov
or
les
dec
push
inc
pop
out
mov
stos
adc
aaa
shr
idivb
jno
dec
sub
xchg
adc
sub
pop
cmpb
lret
mov
xlat
or
lods
aad
out
aaa
aad
dec
ljmp
or
je
xor
xor
aaa
jge
sbb
fistpll
or
xor
scas
outsb
pusha
cmp
aas
jnp
or
mov
xor
sbb
xchg
cmp
cmpsb
xor
cltd
mov
movsl
call
sbb
into
arpl
mov
out
add
mov
icebp
lods
mov
popa
les
lcall
lods
or
hlt
and
xchg
mov
ds
aam
imul
push
into
leave
inc
jge
mov
dec
das
in
out
rolb
add
ret
add
sbb
dec
mov
inc
push
xor
test
add
out
int
add
pop
loopne
sbb
pop
gs
paddb
lahf
and
arpl
mov
mov
mov
rcrl
aas
sbb
stos
lods
sbb
sahf
dec
or
fisubl
jecxz
pop
pop
stos
clflush
push
std
mov
mov
lods
sbb
sti
lahf
dec
xchg
out
pop
fldt
xchg
xor
jmp
ficompl
pop
cld
mov
jle
xchg
dec
jbe
mov
stos
cmp
ret
mov
mov
add
adc
cmp
or
ficoms
jo
xchg
mov
xor
rcr
pcmpgtb
gs
cmpb
ja
ror
loop
push
lods
xchg
jp
or
incb
xor
and
cmpsb
mov
outsl
mov
or
dec
insl
jmp
pop
movsl
sahf
fcomp
xchg
adc
outsl
out
jno
leave
aam
jb
mov
mov
orb
mov
cmp
sub
pop
pop
shrl
cltd
xor
push
inc
mov
insl
mov
jl
in
adc
lods
jmp
fwait
xchg
fisubrs
push
aad
je
into
fs
fisttps
sub
popa
mov
pop
adc
hlt
pop
int3
jge
jne
cs
xchg
push
cmp
dec
es
sbb
addr16
xchg
out
imul
xchg
jecxz
in
lcall
or
xchg
imul
scas
and
sahf
mov
cmp
das
sbbl
push
mov
sbb
xchg
sbb
test
cmpl
sub
jae
mov
jmp
push
xlat
push
movsl
adc
inc
mov
insb
ret
jmp
jnp
fdivr
mov
dec
pop
paddsw
pop
or
add
pop
xchg
xor
scas
aaa
fnstcw
xor
pop
xor
cwtl
popa
mov
jg
dec
fmul
lret
stos
mov
daa
js
mov
mov
xor
mov
mov
movsb
adc
int3
fldl2e
pop
sbbb
xor
pusha
sub
imulb
push
data16
test
ljmp
out
stos
jle
mov
mov
pop
sti
and
and
test
pop
je
xchg
jb
add
mov
ficoms
dec
loopne
jne
xor
mov
push
pusha
lods
ret
popa
push
sub
aam
pop
lock
mov
or
scas
or
adc
stos
pop
sar
lret
mov
cmp
aaa
push
ret
xor
mov
lods
xlat
mov
aaa
pop
cmp
or
push
xor
aad
mov
adc
test
stc
or
dec
fcompl
test
or
lret
mov
jl
mov
roll
jge
cmc
dec
std
int3
xorb
enter
xchg
xacquire
mov
pop
jae
inc
popa
lds
and
add
mov
pushf
cmc
pop
cld
nop
jp
mov
add
ret
rcrb
lock
push
cwtl
cmpsb
mov
xor
je
lret
lods
xchg
ljmp
cltd
clc
mov
pop
sub
in
dec
js
shrl
add
call
aas
mov
leave
xchg
push
dec
sub
push
dec
int3
enter
addr16
cmp
push
cmp
pop
jo
push
mov
test
lahf
pop
leave
fimull
adc
sbb
scas
adc
and
inc
add
rol
cmp
test
cmc
add
jmp
sub
shr
push
xor
inc
adcl
pop
dec
jns
xchg
mov
lahf
lret
adc
dec
movsb
mov
insb
mov
out
repnz
addr16
pop
sbb
iret
xor
adc
sahf
clc
push
cmpsb
insl
mov
les
jae
sbb
sub
icebp
test
out
stc
mov
xchg
cmp
pusha
loope
push
adc
loope
sub
add
sbb
outsb
mov
ljmp
jo
dec
idivl
sbb
xchg
push
inc
iret
negb
dec
add
loopne
mov
jae
stc
sub
sahf
mov
imul
mov
xor
addr16
mov
jle
and
ficoml
dec
mov
and
mov
add
icebp
inc
pushf
xor
sar
adc
jmp
mov
jg
icebp
js
int3
xor
jns
pusha
ja
adc
jnp
xor
mov
iret
popa
mov
lcall
test
mov
scas
pop
dec
xor
test
push
xchg
xchg
cwtl
mov
test
movsl
outsl
jno
mov
roll
test
push
dec
dec
push
sbb
cli
sbb
in
out
inc
aad
ss
lds
test
repnz
pop
lret
cmp
mov
sub
jecxz
test
daa
xchg
jne
sub
and
inc
lock
inc
jb
fld
dec
jne
pop
popf
pop
and
cld
fadd
mov
pop
mov
jge
mov
cmpsb
sbb
popf
xor
sbb
cmp
clc
pushf
mov
push
mov
xchg
sub
test
cwtl
ljmp
push
adc
mov
aam
jno
jb
jae
inc
repz
sbbb
or
or
xor
mov
fidivs
test
pop
push
sbb
fs
pusha
dec
stos
fidivs
mulb
sbb
fidivrl
into
mov
mov
xchg
test
repnz
popa
sub
add
jmp
cmp
push
and
arpl
cmp
in
in
xor
rcl
xchg
xchg
or
sbb
mov
mov
bound
js
outsb
jle
loope
mov
mov
es
jl
jbe
dec
inc
push
mov
pop
movsl
fildl
xchg
arpl
inc
js
cmp
xor
lods
lods
outsl
add
cmp
in
int3
loop
adc
push
sarb
pushf
div
les
mov
or
push
les
xlat
adc
dec
pop
dec
fmull
inc
jno
cmp
mov
clc
nop
push
jne
push
pop
std
fwait
rcrb
in
jno
and
out
je
arpl
cwtl
mov
jecxz
dec
mov
push
test
ss
mov
jge
out
mov
mov
lcall
mov
push
mov
inc
jns
into
inc
push
lea
jmp
or
jge
jbe
pushf
mov
jbe
dec
rcrl
and
xor
xchg
mov
call
loope
pop
btr
mov
sub
pop
ret
mov
mov
outsb
cmp
jne
outsl
les
xchg
jge
fmulp
jle
dec
push
jne
clc
stos
sub
or
mov
jns
sahf
fnsave
add
mov
sbb
xchg
jbe
sbb
mov
mov
sbb
xor
pop
arpl
lret
xchg
mov
test
add
rcrb
cmp
roll
cmp
leave
mov
in
leave
scas
sub
clc
jle
adc
add
jle
cmc
push
sahf
repz
ja,pt
std
arpl
jmp
push
lret
insl
inc
push
or
sti
movb
inc
cwtl
fdivs
sahf
fimuls
adc
or
stos
sub
pusha
mov
sti
rorb
clc
jns
loope
add
add
cmp
into
sub
mov
pop
xlat
mov
movsl
mov
aad
adc
out
loope
pop
cmp
iret
repz
and
in
lds
fistps
es
add
push
push
lds
hlt
xchg
cmpsb
pop
pusha
movsl
movsb
rcrl
mov
insl
aaa
test
lahf
insb
cwtl
mov
int
mov
and
mov
test
jmp
clc
imul
shr
xor
sar
out
popf
mov
les
and
leave
sbb
loope
pop
mov
xor
fucomi
mov
pop
loope
mov
fmuls
jg
and
sbb
xchg
sbb
pop
std
xchg
rorb
cld
pop
and
and
aad
and
add
out
bound
mov
adc
scas
sbbl
les
data16
jmp
pop
ja
dec
cmp
pop
dec
out
stc
mov
or
outsl
pop
mov
popa
rcrl
adc
and
sbb
xor
adc
or
xchg
lcall
and
jg
js
jbe
mov
dec
inc
jp
pcmpgtd
clc
testb
mov
push
dec
mov
int
mov
arpl
out
dec
fwait
test
or
cmp
ja
lret
push
les
iret
jns
mov
mov
cli
add
mov
ds
xchg
xchg
jb
jo
sbb
loope
lods
int
add
mov
mov
fstl
jnp
cld
dec
iret
call
mov
loope
push
sbb
jne
dec
lahf
dec
test
cli
sub
dec
hlt
mov
arpl
sub
mov
pushf
lods
push
dec
inc
lret
xchg
jl
xor
and
dec
inc
sub
repnz
ret
xchg
jle
out
leave
popa
xor
or
in
icebp
and
inc
gs
xchg
jne
mov
ficompl
jbe
dec
inc
ret
iret
pop
negb
sub
sub
mov
add
lods
mov
sbb
psrlw
out
stos
lret
lret
ret
stos
jp
mov
and
ret
rcrb
stos
add
loope
addr16
ret
imul
xor
push
jecxz
or
pop
jecxz
lods
dec
jae
jb
in
mov
pop
and
or
jns
or
sbb
ficoml
dec
jmp
test
xlat
mov
aaa
inc
inc
pop
cli
adc
lahf
cmp
mov
inc
push
and
loopne
cmp
repnz
mov
pop
cmp
or
in
fisubs
pop
aaa
fcoml
aas
stc
xchg
xchg
pop
pop
pop
cmpsl
les
inc
and
cli
and
es
push
dec
daa
pop
adc
out
adc
mov
fstl
inc
movsb
movb
push
mov
and
adc
bound
push
fcomps
push
mov
addr16
push
ret
movsl
inc
cs
out
mov
push
out
out
les
mov
xchg
test
loop
out
xchg
rcrb
dec
aad
push
int
mov
pushf
out
inc
mov
aam
lret
mov
sbb
cmp
inc
scas
out
and
mov
fstpt
enter
icebp
out
add
loop
test
or
sbb
push
cs
mov
jb
dec
jae
inc
jge
in
cld
pop
jg
imul
inc
mov
mov
repz
ljmp
adc
add
leave
std
sub
jp
mov
cld
sub
test
fcomps
loop
das
inc
out
sarb
int3
and
fldcw
push
sub
test
rcrl
sbb
test
xor
cmp
out
mov
cmpsb
add
mov
pop
xlat
push
insl
push
jae
shlb
jmp
lret
jg
outsl
push
cmp
fdivrs
js
add
mov
dec
pop
dec
adc
sub
adc
pxor
mov
xchg
jne
cmp
je
cmp
mov
bound
cmp
mov
adc
ja
repnz
jecxz
loop
repz
mov
sub
in
adc
icebp
jo
cmc
sub
jnp
pop
rolb
jp
out
out
mov
sbb
pop
out
sbb
imul
in
repz
fs
pop
and
mov
dec
out
jnp
leave
jo
push
jo
hlt
andb
xor
mov
lods
jae
mov
mov
jae
cwtl
fists
mov
cmpsl
fadds
push
pushf
jmp
stc
not
cmp
fnstcw
imul
add
sub
insb
shrb
iret
aaa
dec
aam
pop
sub
mov
lds
lret
insb
cmp
mov
mov
fldl
push
incb
adc
ss
pop
inc
xchg
push
ds
negl
push
daa
in
lods
xchg
test
add
rorl
outsb
mov
pop
shlb
push
insb
insl
inc
orb
negl
into
inc
int3
xlat
jmp
push
insl
xor
sbb
sbb
and
es
jns
loope
sbb
int
fidivl
imul
popf
scas
dec
out
dec
adc
aaa
ljmp
push
jle
adc
loope
mov
xlat
sbb
rorb
lock
add
sub
pop
mov
testb
mov
mov
dec
mov
out
push
mov
loope
xchg
or
and
inc
mov
cs
add
lods
xchg
out
push
ss
push
adc
aas
lods
fldcw
pop
out
orl
loopne
popf
test
shlb
jl
adc
shrl
rcll
clc
fwait
nopl
aam
add
xor
mov
xor
in
in
lret
mov
xchg
cmp
sub
mov
add
lret
clc
out
fs
iret
negl
mov
iret
inc
cmp
lret
mov
sbbb
in
inc
xchg
outsb
pop
idiv
lock
out
imul
cmp
or
sbb
cmpsb
or
add
cmpsl
push
mov
imul
xor
pop
ds
je
ret
gs
push
movsb
dec
in
cltd
lahf
mov
fists
fiaddl
inc
jg
jmp
insb
jno
loope
jno
pop
lock
std
jecxz
push
dec
fwait
push
mov
int
sbbl
testl
adc
popa
lahf
mov
sub
inc
insb
sub
pushf
push
sahf
and
inc
iret
push
or
in
js
into
pop
add
pop
xor
dec
pop
mov
add
sub
cmp
cmpsl
mov
dec
push
inc
in
out
shl
cmc
pop
loop
inc
std
mov
add
shll
loop
int
clc
imul
mov
xchg
test
aas
push
pop
sub
sbb
or
rolb
jge
xor
js
pop
and
push
imul
pop
jmp
jle
add
bound
pop
inc
add
lods
roll
or
dec
mov
loop
mov
in
xchg
pop
fs
in
rcll
fwait
and
add
cmpl
cwtl
int3
sbb
mov
faddl
out
orl
out
xor
dec
sub
adc
cmp
sbb
sbb
push
sbb
shlb
jbe
in
in
push
fld
cs
std
aam
outsl
test
clc
inc
mov
rcl
sub
movsl
xchg
pop
lahf
jecxz
cmp
dec
sbb
pop
sub
push
jns
cmp
es
rclb
cmpsb
push
xchg
cmpl
rol
jmp
dec
cmp
loop
mov
mov
mov
xchg
aad
cmp
sub
loop
loopne
mov
dec
or
xlat
in
xchg
cmp
test
inc
or
mov
mov
and
jl
mov
imul
mov
icebp
fnstsw
pop
jns
jmp
push
inc
or
push
jnp
or
jg
mulb
or
xor
call
pop
stc
adc
gs
xchg
icebp
jge
in
push
rcrb
add
popa
and
cmp
mov
add
mov
aam
les
lods
imul
pop
mov
sbb
cmp
mov
mov
clc
xchg
or
jp
imul
sbb
and
inc
pusha
jmp
aam
xor
xorl
in
push
das
call
frstor
pslld
jl
aas
pushf
std
mov
les
cli
iret
xor
mov
xchg
or
out
jbe
adc
mov
push
psubw
in
push
es
add
in
xor
mov
xchg
sbb
jp
fnstenv
pusha
pop
out
cmp
pop
leave
sbb
clc
jns
nop
sbb
imul
push
pop
mov
or
roll
sbb
out
out
cmp
sahf
xchg
push
mov
jge
add
cmc
jns
test
insl
jmp
xchg
push
popf
stos
jl
addr16
xchg
out
and
sbb
or
outsb
out
into
imul
stos
jecxz
add
in
rclb
std
int3
subb
hlt
arpl
movsl
sbb
mov
sub
and
out
adc
xorb
movsl
ret
jo
or
in
jecxz
out
mov
and
adc
ja
pop
sub
test
pusha
enter
mov
pop
add
movsb
test
push
push
mov
lods
xchg
rcr
or
cli
cmpsl
pop
pop
mov
lcall
testb
pop
adc
xchg
push
adc
js
xchg
sbb
add
inc
popf
and
push
sbb
fsts
fs
movsb
cmp
jmp
cltd
add
push
sub
inc
jo
pop
pushf
sub
pop
dec
dec
mov
xchg
sub
pop
rcrb
push
sarb
dec
push
push
sbb
js
mov
ljmp
test
push
cwtl
pop
je
repz
sub
lock
inc
in
outsl
cmp
jg
repnz
xor
loop
push
fdiv
adc
ret
jge
or
pop
hlt
outsl
jge
in
bound
xchg
pusha
hlt
sbb
pop
or
popf
test
xchg
adc
pop
push
xchg
aaa
jle
push
xlat
sbb
cmp
pop
lret
sub
mov
adc
dec
sub
inc
xor
gs
push
in
mov
fcomps
mov
test
outsl
sub
cmpsb
and
mov
lods
cmp
and
cmp
stos
and
and
les
sub
mov
dec
ljmp
ficomps
ljmp
xchg
scas
mov
sbb
and
cmp
mov
gs
push
pusha
scas
cltd
or
jnp
lds
mov
pop
ficomps
lahf
inc
push
popf
sbb
xchg
push
gs
push
push
dec
inc
inc
sti
movsl
mov
popf
inc
adc
test
xlat
movsb
cwtl
cmc
test
sub
jmp
xlat
mov
xchg
mov
cltd
out
outsb
jge
lea
sbb
push
out
dec
xchg
fs
xchg
enter
add
popf
mov
rolb
fcompl
push
aaa
ss
adc
add
pop
enter
pop
mov
out
jmp
scas
imul
or
lods
push
cmp
out
nop
subb
imul
xlat
lods
or
push
fadd
call
add
sub
cmp
lret
popf
push
sub
pop
ss
jmp
push
and
fs
inc
add
loopne
pop
scas
pop
pop
dec
xchg
repz
ret
push
or
out
xchg
arpl
xor
lcall
sbb
dec
insl
shlb
xorl
inc
pop
cmove
mov
inc
adc
stos
cli
mulb
add
mov
xchg
cltd
sub
andb
sub
sbb
fiadds
pop
inc
inc
mov
push
je
sub
push
push
push
outsb
loope
out
and
cwtl
nop
addr16
xchg
mov
xchg
loope
inc
lds
dec
dec
push
mov
push
or
mulb
pushf
ficompl
fiadds
fiadds
or
lock
sub
xor
mov
xor
popw
or
mov
rcrl
sub
je
outsb
mov
ret
add
pushf
jecxz
std
xchg
pop
sbb
adc
es
and
pop
dec
fiaddl
lea
fs
mov
sbb
dec
fiaddl
outsl
pop
hlt
pop
xor
testl
push
ret
mov
sub
pop
shrl
add
mov
gs
mov
jbe
lea
push
adc
enter
stos
jge
sbb
pop
sub
sub
mov
adc
jne
lds
mov
dec
loope
mov
popa
arpl
shr
rolb
and
xor
adc
ss
sub
xchg
stc
push
in
and
pop
xor
mov
xchg
fstpt
add
cmpsb
cmc
and
mov
cmp
fidivs
push
sub
jnp
fstp
xor
mov
xor
push
dec
fidivl
xchg
pop
mov
icebp
out
mov
mov
sbb
popa
rclb
in
cmpsl
jecxz
out
sahf
xor
cmp
fidivs
cwtl
push
xchg
aaa
push
mov
adc
leave
call
cs
xor
outsl
jae
aas
jecxz
arpl
loopne
adc
test
lods
push
ss
dec
aad
cmpb
xor
pop
mov
or
insb
mov
gs
xor
pusha
jo
adc
mov
xor
pop
fcmovnbe
aad
cs
cmp
jno
outsl
add
inc
mov
out
dec
mov
fistps
adc
enter
or
adc
repnz
sti
sbb
jnp
jb
test
push
aad
pop
adc
mov
xor
sbb
fsubs
mov
fsubrl
bnd
sub
call
mov
loopne
cmp
int3
dec
adc
ds
xchg
ret
push
into
mov
jae
jb
arpl
adc
into
adc
lds
shl
jle
jnp
je
push
sbb
inc
cmp
fimuls
sbb
sub
or
mov
jne
mov
cmp
push
xchg
mov
xlat
add
sub
aaa
cmp
and
aas
sbb
inc
ds
lret
sub
sarb
sub
popa
shrb
jbe
xor
dec
mov
imul
mov
pop
mov
rorl
rcrb
div
cmpb
push
push
je
sub
aaa
lea
shrl
mov
xchg
inc
mov
enter
std
adc
inc
xor
popf
add
sbb
or
or
es
or
icebp
lods
lock
comiss
scas
repnz
mov
or
std
adc
xor
mov
xchg
les
sbb
leave
push
push
cli
aam
inc
inc
xchg
outsl
dec
in
and
out
jno
sbb
popf
rorl
inc
mov
les
pop
mov
cli
xor
andl
dec
in
adc
push
ret
std
lahf
and
mov
movsl
jnp
imul
pop
sub
xor
ds
push
xorb
mov
ss
pop
cli
mov
add
lock
and
inc
mov
mov
dec
jge
popf
push
or
adc
adc
ds
std
ljmp
mov
push
pop
inc
aad
mov
flds
pop
push
arpl
dec
out
inc
jns
out
jne
ficompl
leave
xchg
inc
shr
lods
out
inc
ffreep
les
testb
jns
inc
ror
or
fistpl
cmp
lret
mov
mov
add
icebp
push
rcl
adc
test
dec
in
jne
insb
inc
les
test
sbbl
mov
leave
or
sahf
mov
scas
mov
add
xorb
in
sbb
imul
iret
or
insl
negl
add
jns
sbb
pop
popa
or
push
xchg
jnp
or
pop
out
cmp
movsl
aam
push
mov
mov
not
sub
inc
cmp
outsl
inc
pop
add
ljmp
movsl
cmp
inc
movb
out
das
fstps
popa
adc
or
inc
sti
pop
ss
fwait
ds
outsl
add
popa
inc
xchg
pop
dec
and
hlt
mov
fwait
ja
mov
sbb
imul
or
inc
and
sahf
xchg
and
imul
pushf
ret
das
jnp
mov
mov
cmpsb
add
or
divl
inc
mov
cmp
test
sbb
aam
pop
jecxz
sahf
inc
js
jmp
loope
mull
dec
cltd
std
imul
insl
stc
jg
jle
icebp
jo
jns
xor
inc
mov
jne
cmp
add
cmpsl
aaa
sub
int
cmp
mov
jl
pop
mov
sbb
fstl
lahf
mov
jmp
shrb
xchg
mov
mov
jo
lcall
sti
popa
inc
or
push
in
decl
pop
push
cmp
ja
or
adc
nop
xor
jno
or
adc
and
fisubrs
leave
lret
and
shll
mov
cmpsb
movl
enter
and
aas
add
test
lea
sti
rorb
pushf
fsubl
or
addr16
dec
dec
lods
push
mov
xchg
and
cwtl
inc
jp
adc
sub
mov
out
cli
and
xchg
and
push
lea
stos
mov
testb
push
loopne
push
jp
ret
ret
jge
mov
and
xor
push
dec
sbb
or
mov
pushf
test
decl
mov
mov
scas
pop
mov
ret
or
out
sti
adc
xchg
and
fsts
xor
into
call
inc
cmp
dec
repz
cmp
add
mov
lock
add
daa
ret
ds
jno
int3
adc
les
mov
in
stos
and
lahf
pop
pop
ficoms
inc
mov
in
into
cmp
push
push
and
jo
mov
je
xor
mov
int
ds
nop
cmp
push
lret
mov
dec
push
mov
pop
inc
ja
or
sbb
lea
in
pop
stos
ss
jo
pop
mov
hlt
sarl
ds
pop
xlat
hlt
fld1
inc
lret
lods
out
dec
push
aam
xor
jnp
adc
in
lds
bound
icebp
sub
mov
xchg
pop
push
js
ret
aas
aas
insl
mov
sahf
push
pop
push
add
xlat
mov
fwait
dec
add
test
and
and
ljmp
stc
arpl
jge
xor
cmc
andl
mov
stc
push
enter
push
pop
push
inc
jecxz,pn
addr16
ds
xor
cmp
jp
ret
movsl
into
sahf
mov
inc
push
inc
pop
cvttps2pi
pop
int
add
inc
sub
jecxz
adc
enter
or
fsubl
sub
push
mov
pushf
jo
add
mov
adc
sbb
jne
push
or
dec
xorl
out
or
dec
lret
sbbb
mov
inc
inc
or
sub
and
jle
rclb
ja
shlb
movsb
in
dec
push
sub
xlat
xchg
mov
xchg
pop
push
test
mov
mov
sub
leave
adc
xor
sbb
jne
aam
fsubl
sbb
ss
mov
sbb
push
xchg
mov
inc
mov
inc
xor
xchg
movsb
pop
jae
aaa
pop
mov
xor
xor
bound
movsl
sub
lods
dec
out
mov
push
out
ss
call
shll
adc
mov
sbb
jp
subb
icebp
mov
xor
mov
jle
xchg
mov
mov
fmull
ja
or
subl
sbb
std
js
outsl
jecxz
leave
push
subb
gs
and
xchg
aas
push
cmp
push
lahf
mov
rclb
sahf
xor
pusha
inc
cmpsb
js
ficomps
xor
inc
inc
sbb
jnp
xchg
test
mov
sub
fwait
xor
mov
outsl
push
mov
mov
out
pop
cmpsb
jo
ret
imul
lret
ss
mov
cltd
test
xlat
or
cli
pushf
jmp
jno
outsb
and
mov
movsb
rorl
out
xadd
mov
test
mov
xlat
pop
js
daa
in
popa
cmp
fdivs
fldcw
je
mov
pop
xor
pop
call
sbb
mov
stos
push
mov
push
or
fwait
sub
lcall
mov
rclb
or
cmc
scas
out
ss
inc
aaa
cwtl
faddl
out
daa
jge
cmp
xchg
icebp
mov
sbb
cli
jo
sub
divl
adcl
xchg
sbb
dec
mov
mov
jbe
addr16
push
enter
add
in
icebp
ss
pop
loope
mov
stc
and
add
mov
push
pop
push
std
leave
pop
adcl
pop
add
orl
adc
push
xor
cwtl
scas
pop
sub
and
jae
adc
and
inc
scas
popf
aam
insb
sti
pop
int
inc
push
jne
out
aas
pop
cmpb
int
xchg
xchg
sub
lret
fnsave
push
xchg
stc
clc
scas
ljmp
rcrb
mov
or
outsl
add
es
pop
mov
or
mov
dec
jnp
sbb
adcl
cmpl
push
push
fimuls
cmc
xor
xchg
mov
arpl
out
test
mov
out
jmp
je
cltd
mov
sti
icebp
mov
push
mov
and
push
roll
cwtl
clc
jno
loopne
in
adc
lahf
cmc
mov
pop
xchg
jb,pn
xor
mov
xor
addr16
lods
jp
es
mov
clc
lods
dec
sub
dec
inc
and
test
scas
sbb
sbb
cmpl
stos
call
sbb
lret
int3
loop
or
sub
adc
data16
pop
xchg
mul
push
and
jno
push
inc
idivb
stos
add
jo
lock
icebp
dec
xorb
out
and
jmp
outsl
addr16
xchg
fidivl
in
fs
xor
in
sti
cs
jle
push
xchg
xchg
sub
and
mov
sbb
fs
inc
jg
xchg
fcmove
leave
leave
fisubl
orl
dec
outsw
xchg
mov
or
decl
stos
aaa
pop
and
dec
xchg
mov
or
jne
push
ret
movzwl
adc
inc
fnsave
push
cli
jmp
xlat
outsl
in
stc
mov
mov
call
shrl
sbb
iret
xchg
and
push
cmpb
push
jl
shll
or
pop
mov
push
packssdw
mov
xchg
sbb
sarl
mov
dec
js
pop
pop
arpl
sahf
into
pusha
and
not
fldl
push
xchg
lret
mov
test
sub
dec
cli
lret
mov
mov
cli
and
rcrl
cmp
test
rcrb
and
xchg
mov
rorb
out
dec
call
mov
daa
xchg
shlb
loopne
adc
test
xorl
inc
les
push
call
ds
push
popa
dec
cld
push
mov
clc
jge
adc
sbb
push
xor
push
jns
push
add
into
push
pop
push
push
xchg
popl
mov
add
idivb
push
mov
mov
sbb
out
cmpsb
ret
xchg
jno
lahf
loope
adc
stos
jmp
sbb
mov
push
fs
jl
fisubl
inc
outsl
jmp
imul
push
movsl
xchg
push
pop
gs
inc
inc
mov
pop
pop
adc
cmp
imul
mov
inc
lods
js
in
mov
shlb
xchg
fistl
stos
mov
sub
dec
pop
xlat
dec
in
outsl
pop
mulb
xchg
fwait
mov
loope
sbb
push
std
testb
das
cs
and
cmpsb
faddp
aas
pop
push
ja
sub
adcb
or
push
in
outsl
inc
and
out
mov
fidivrl
inc
int
mov
shlb
lcall
inc
mov
fs
xor
insb
or
repnz
inc
sub
aad
xorb
jmp
lret
sbb
imul
sti
aas
or
push
mov
out
mov
jo
sbb
fiaddl
sbb
es
push
insl
push
push
aad
gs
mov
xchg
mov
sbb
mov
xchg
cld
push
gs
dec
loope,pn
jmp
movsl
push
dec
mov
lahf
add
jns
icebp
or
dec
xchg
pop
xchg
cli
test
push
jae
js
sti
dec
stos
pop
mov
dec
cmp
mov
out
test
adc
sbb
inc
sub
movsl
dec
pop
mov
mov
imul
imul
inc
ret
roll
inc
add
jge
testb
pop
add
push
xorl
fs
into
xchg
xchg
dec
sub
xchg
les
xlat
adc
mov
fld
add
addr16
push
imul
push
add
mov
ret
sbb
or
xchg
cmc
fistps
clc
xor
pop
out
xor
mov
push
lret
inc
push
xchg
mov
enter
cs
dec
mov
lea
fistpll
fimuls
adc
mov
cmp
mov
movb
ljmp
or
ds
jecxz
lds
dec
or
cli
scas
jmp
jne
pop
mov
xchg
sbb
stc
fstps
fcom
dec
mov
add
icebp
popf
lods
dec
roll
mov
xor
mov
repnz
jle
mov
mov
mov
mov
aad
dec
sbb
mov
in
rcll
arpl
mov
out
or
xor
es
out
mov
dec
jp
cwtl
loop
add
cmp
cmp
xchg
ficoml
pushf
or
xchg
insl
dec
cli
push
cwtl
shll
jl
mov
sarb
lods
mov
pop
je
loop
sub
in
ret
outsb
lods
jle
inc
push
lock
cli
test
and
xor
dec
lock
xchg
lds
mov
ret
sub
push
lret
mov
cmp
cld
adc
push
fstpt
add
sbb
popf
test
fnstsw
xchg
fadd
pop
cld
sarl
clc
test
shrb
ds
out
jns
or
mov
inc
mov
xor
add
lret
inc
test
lock
lock
push
mov
push
mov
stc
in
lods
and
lret
cs
cwtl
xchg
jo
js
je
aaa
cli
push
inc
jecxz
std
mov
sbb
mov
pop
mov
mov
out
jb
mov
xor
lret
and
je
pop
sahf
inc
sarb
lods
nop
incl
mov
push
adc
dec
fisttpll
test
scas
add
mov
fcomip
pop
sbb
inc
mov
xor
jbe
adc
mov
shll
and
cmpsl
stc
pop
mov
adc
in
int
xor
mov
scas
inc
fstpl
repnz
cmp
ror
int3
lods
out
pop
mov
pop
popf
cmp
lods
xchg
notl
les
cltd
add
push
imul
pop
es
inc
dec
jmp
roll
adc
ss
pop
in
ss
cltd
ljmp
loop
movq
imul
inc
das
xor
daa
dec
mov
mov
xchg
test
dec
fnstsw
xchg
mov
out
inc
mov
cmp
and
and
inc
jnp
mul
fsubl
hlt
add
outsl
add
xor
mov
xchg
fiadds
int
inc
enter
or
lea
jbe
mov
aas
hlt
mov
imul
flds
lahf
mov
mov
mov
adc
addr16
mov
cmpsb
test
xchg
inc
fdivp
cmp
inc
int
xchg
and
mov
mov
xchg
sub
xor
ljmp
test
fstps
icebp
jo
cs
push
push
arpl
movsl
mov
jg
ljmp
sub
movsb
bound
jmp
subb
ja
jb
cmp
leave
add
adc
pop
xchg
popf
imul
xchg
xchg
fwait
jbe
xchg
fchs
test
fbld
int3
xchg
cltd
add
lock
mov
stos
mov
hlt
cmp
lea
mov
mov
pushf
inc
push
inc
and
shl
push
mov
push
adc
jno
pop
ja
out
and
inc
mov
fwait
aad
cmc
in
sbbl
call
jg
push
sub
push
jp
ss
inc
popf
mov
popf
or
dec
ret
sbb
mov
dec
inc
clc
push
cmpsb
popa
mov
jne
push
cld
repz
inc
std
and
push
jecxz
pop
lret
add
sub
mov
jge
stc
lcall
cmp
cltd
imul
jecxz
das
dec
aam
popa
or
test
jno,pt
sti
add
outsb
push
mov
lret
adc
sub
es
aam
jno
cmpsl
xor
sub
cmp
push
xor
dec
dec
jo
fwait
cmc
int
ror
and
shll
fiaddl
cmp
sbb
cmp
jmp
mov
push
mov
add
jno
sub
incb
jbe
sti
pop
push
xchg
xchg
pop
sub
xor
jns
cwtl
int
cmovne
arpl
jno
sbb
bound
or
adc
add
ret
shll
mov
je
dec
sarl
mov
mov
push
aas
fnstenv
xchg
dec
fildll
sbb
data16
jl
sbb
mov
nop
aaa
fadd
inc
test
mov
aad
add
xchg
pop
pop
lods
lds
push
and
in
ja
mov
or
int
iret
sti
cmc
ss
adc
adc
jbe
mov
adc
sbb
mov
sti
jo
outsl
imul
mov
pop
test
pop
roll
mov
cmc
mov
in
cmp
jmp
mov
nop
mov
les
mov
inc
out
jbe
into
cmp
call
xchg
leave
jns
xor
ljmp
lds
es
nop
or
minps
inc
fwait
xor
mov
andb
sahf
xor
push
leave
xor
sub
jge
iret
cmp
aas
sti
push
and
repz
dec
jge
mov
inc
loopne
insl
pop
lcall
movsb
lea
inc
sar
add
xlat
ljmp
rcrl
out
cmc
in
arpl
pop
mov
addl
dec
add
or
mov
mov
popf
add
cmpsl
insl
lret
cmpsl
sbb
aas
and
cli
addr16
sarl
dec
adc
es
es
dec
loope
or
test
sti
fdivrl
cmp
mov
or
movb
gs
push
pop
dec
shll
dec
xor
xor
popa
es
into
inc
push
cmp
cli
out
pop
stos
cwtl
pop
repz
dec
lret
push
mov
outsl
jge
mov
adc
inc
push
idiv
daa
sarb
jl
in
ret
mov
dec
fmuls
popl
pop
int
mov
push
lahf
out
jne
pop
fistl
and
xor
pop
jae
and
enter
and
test
inc
das
sahf
sbb
mov
adc
or
inc
bound
mov
push
xorb
std
dec
adcb
inc
mov
add
addb
inc
cs
or
sbb
jmp
push
sub
sub
cmp
ret
shlb
cmc
adc
and
shlb
test
scas
add
dec
push
enter
out
movsl
mov
inc
inc
dec
jne
arpl
push
jbe
mul
js
or
lret
push
cld
jecxz
mov
jnp
dec
dec
mov
rorl
js
mov
lods
cwtl
movsb
push
fsubr
aad
pop
das
dec
jg
dec
dec
adc
xlat
ret
push
cli
jae
sbb
jns
jo
std
dec
xor
jmp
mov
aas
clc
jo
xchg
jg
dec
scas
bnd
ret
push
cli
jmp
cmp
mov
test
pop
das
aaa
jle
aaa
sahf
scas
adc
rolb
adc
movsl
rcrl
sti
call
cmpl
push
rol
push
cli
ja
test
nop
mov
repz
dec
add
clc
cmp
dec
xorl
loopne
xor
mov
jb
cmp
mov
and
fnstenv
insb
and
push
scas
sbb
jp
fadds
popf
test
fstpt
jmp
aas
stos
pop
jg
clc
add
mov
fidivl
shll
inc
cs
popa
lea
cmp
mov
insl
mov
std
inc
mov
lods
jmp
stc
mov
not
shl
add
cmc
sub
bsf
add
shl
not
btc
bsr
mov
clc
shr
call
lea
jne
push
mov
mov
push
call
lret
decl
pop
xor
lea
sbb
or
mov
pusha
std
rclb
mov
and
cltd
or
and
rclb
orl
pushf
sub
loop
lcall
repz
inc
call
push
mov
xor
mov
sub
add
aam
dec
mov
mov
cmpl
je
out
inc
rcrl
jae
mov
out
fildl
leave
mov
std
inc
movsb
mov
or
adc
or
scas
push
sti
in
or
add
xchg
sbb
mov
inc
imulb
xchg
mov
mov
or
adc
pop
into
pop
inc
je
xlat
mov
mov
leave
mov
adc
mov
xchg
int
push
xchg
cld
sub
popa
push
and
inc
jl
jge
add
int3
aaa
mov
pop
fcompp
cli
or
adc
xchg
pop
es
pop
fcmovnb
xor
std
stos
pop
fs
stos
repz
inc
es
push
cmpsb
mov
test
in
popf
sub
fs
xchg
loop
xchg
sbb
sub
fucomp
loopne
int3
pop
mov
sub
dec
and
mov
fwait
jmp
adc
jle
scas
testb
fisttpl
dec
aaa
mov
push
ficoms
xchg
dec
xchg
add
jl
aas
jl
mov
arpl
push
fisttpl
les
inc
sbb
fimull
lret
adc
movsb
scas
ds
iret
mov
sub
inc
mov
dec
mov
mov
leave
ljmp
jno
mov
sbb
aas
addr16
add
lea
xor
stos
jecxz
out
mov
popf
pushf
mov
in
mov
movsb
mov
stc
dec
fsubrs
or
and
jne
xor
adc
roll
dec
repz
inc
push
std
loopne
inc
push
stos
pushf
lea
jmp
lock
push
sti
icebp
mov
idivl
shlb
sub
clc
adc
sbb
mov
cli
std
mov
and
mov
sub
lea
cmp
in
je
xchg
push
inc
or
cmc
mov
xor
test
dec
ret
cmpsl
lret
loope
mov
mov
jne
add
xchg
popa
pop
push
push
push
cltd
sarl
fisttps
cmc
frstor
popf
sub
repnz
push
add
out
xor
mov
and
adc
in
stos
push
or
xor
and
test
add
pop
pop
sbb
stos
orb
hlt
mov
mov
cwtl
push
adc
rcr
xor
push
push
push
test
lods
out
sub
or
inc
lods
xor
push
mov
sbb
int
in
lahf
call
jae
cmp
sub
int3
sbb
scas
in
sbb
mul
rcl
rcrb
mov
subl
or
addr16
mov
lahf
je
roll
push
jne
shl
sarb
ds
pop
shl
pop
rolb
dec
repnz
mov
push
sbb
sub
roll
lcall
jl
pop
pop
mov
xor
push
dec
inc
push
lea
xor
icebp
popf
dec
imul
sbb
inc
mov
mov
jl
jmp
loope
lcall
jg
sbb
xchg
mov
popa
pop
loop
jecxz
fmull
lods
add
out
xlat
xchg
out
xlat
inc
dec
andl
cmc
lahf
fbstp
jle
push
inc
cmp
jne
repz
inc
or
xchg
movsbw
pushf
mov
jmp
cltd
mov
mov
sbb
cltd
loope
jb
jmp
lods
or
jno
ljmp
jno
xchg
push
subl
pushf
aad
mov
pop
lahf
xchg
push
push
repnz
add
inc
jge
inc
aam
pusha
decb
pop
jb
push
into
aas
repz
sub
sbb
out
adc
pop
xchg
adc
addr16
and
in
add
inc
popf
mov
cmpsb
mov
push
out
in
cmp
arpl
cltd
dec
adc
mov
rcrl
cwtl
in
push
mov
add
push
imul
ljmp
and
pop
add
and
repz
inc
lods
mov
mov
xchg
mov
lods
xor
jle
xchg
cmp
mov
repz
push
push
and
ret
jbe
cmp
xchg
lods
rorl
movsl
and
xor
cmp
pop
ss
popa
xor
adc
fs
mov
adc
pop
dec
sbb
sub
jp
fnsave
scas
pop
push
sub
das
jb
mov
inc
fildl
cmp
or
aas
dec
icebp
pop
orl
push
sub
push
sub
mov
jge
push
dec
in
pop
push
test
int
scas
or
push
xor
movsb
pop
cmp
in
lds
sub
mov
mov
cmpsl
stos
pop
cmpsb
mov
sahf
setns
and
ja
dec
aad
mov
in
mov
sub
mov
js
out
pop
inc
mov
outsb
pop
in
shrb
repz
inc
add
or
lods
jl
and
xchg
lcall
xchg
mov
push
jne
movsl
sbb
mov
xor
ljmp
xor
or
lods
out
lods
mov
push
nop
fs
mov
popa
js
int3
hlt
cmpsb
aam
or
je
nop
daa
gs
xchg
movsb
xor
xchg
les
in
add
std
inc
pop
dec
xchg
xchg
ljmp
or
lods
push
pop
or
sbb
push
push
sbb
dec
rorl
in
dec
or
pusha
cmpsb
pop
dec
push
pop
pushf
mov
dec
ret
fbstp
add
les
mov
popa
or
push
inc
repz
inc
sahf
and
pop
sub
pop
insl
cmp
add
dec
push
faddl
pop
dec
mov
xchg
xchg
mulb
mov
and
or
fistpll
lds
scas
xchg
pop
pop
subl
push
xchg
hlt
xchg
pop
push
mov
subb
ficoml
push
jge
pushf
or
rcrl
insl
dec
sbb
std
sahf
jne
or
in
unpckhps
scas
daa
outsl
pop
aas
pop
popa
pop
pop
and
test
into
das
add
jg
mov
imul
orl
jle
lea
jb
clc
bsr
mov
bsf
ror
mov
call
pop
repnz
inc
ja
mov
and
push
jp
outsb
xlat
shr
mov
fists
test
jmp
add
movsb
inc
cmpl
mov
push
sarl
stos
and
or
mov
enter
les
xchg
sti
in
dec
fists
adc
jno
add
xor
sbb
fisubrl
das
sahf
sub
popf
cmp
mov
arpl
sti
int
dec
push
or
enter
mov
mov
stc
mov
add
pushl
sahf
aaa
mov
lods
xchg
faddl
push
subb
pop
lods
iret
out
jo
sbbb
repz
pop
inc
lcall
fldenv
sti
shl
fwait
loopne
sarl
mov
fcoms
insb
fbld
mov
enter
jp
out
aas
pop
daa
mov
out
jns
ljmp
sarl
stc
push
orb
xor
sub
xor
repz
jl
ffree
mov
dec
xchg
ds
adc
sarl
or
fwait
in
fadds
dec
repnz
adc
push
or
cltd
push
lods
jbe
push
inc
inc
add
jns
xor
mov
dec
test
xor
loopne
orl
pop
mov
mov
outsb
dec
and
mov
jne
test
push
jp
aas
xchg
out
icebp
testl
add
nop
or
jge
jmp
les
test
repz
jge
adc
mov
hlt
scas
mov
jp
sub
mov
dec
push
add
jno
add
push
inc
lods
ljmp
mov
insb
ds
sbb
jb
insl
mov
push
ret
adc
dec
inc
jbe
dec
dec
xchg
jl
or
fldenv
pop
data16
cs
jge
ficoml
cmc
or
inc
sbb
inc
adc
mov
mov
pushf
push
clc
popa
lods
mov
addr16
repnz
sub
aaa
xor
int
lock
bound
mov
pop
nop
and
push
mov
mov
enter
leave
setns
inc
push
jg
sub
test
cmp
gs
or
adc
ss
jnp
sar
stos
pop
les
fildl
push
loope
cmp
repz
jle
sbb
lret
cmp
mov
cmp
imul
addr16
xlat
pcmpgtb
out
arpl
bound
ja
and
xor
fistl
pop
jne
mov
js
aas
int
lods
fiadds
int3
ret
loope
enter
hlt
sub
out
int3
cltd
or
clc
icebp
sub
inc
daa
mov
push
jmp
jo,pn
pop
adc
jle
pop
repnz
inc
xor
cmp
pop
repz
jle
loop
not
pusha
bswap
mov
pusha
lea
jb
btc
not
mov
bt
test
pushf
push
sub
pushl
call
lea
call
jmp
jbe
jno
dec
mov
xlat
pusha
mov
inc
sub
incb
js
into
inc
sbb
ffree
loopne
loop
sbb
push
pop
fs
push
pop
std
and
rcr
pushf
enter
insb
subl
inc
mov
lock
imul
dec
call
and
pop
pop
add
mov
push
push
sarl
lods
mov
push
and
fbstp
sti
dec
dec
je
adc
in
sbb
inc
insb
sbb
add
add
mov
adc
push
cmp
jnp
lods
mov
lds
mov
int
or
call
xor
clc
hlt
push
cmpsb
mov
in
push
in
pop
lds
mov
pop
das
into
adc
sbb
decl
fsub
clc
sub
inc
ds
ret
jmp
inc
push
inc
jp
push
ret
sub
test
push
fists
push
push
lret
xlat
add
jle
clc
in
sbb
xor
stos
repz
js
lods
repz
cli
movsb
scas
rcrl
stc
popa
imul
rolb
cmp
mov
jg
shlb
jmp
fwait
jmp
adc
mov
sbb
arpl
add
stos
and
mov
out
adc
das
loop
leave
pushf
xchg
pop
rolb
test
cmp
xchg
fwait
add
adc
or
leave
adc
mov
lock
les
sti
pop
rcrl
dec
xchg
add
std
js
call
or
cwtl
setl
mov
movzbw
not
push
cwtl
lea
call
xlat
dec
xor
adc
shl
adc
movsl
lods
ss
xor
es
and
pop
xchg
inc
in
cwtl
jo
in
aaa
call
out
pop
add
movsl
jg
xchg
loop
pop
pop
sbb
aam
leave
xor
adc
mov
mov
orl
dec
pop
adc
add
sbb
jae
out
jnp
adc
or
jns
adc
or
jae
enter
mov
mov
bound
xlat
test
jns
dec
enter
lret
sbb
addl
or
pop
add
add
call
je
loopne
imul
or
dec
test
mov
das
sahf
and
adc
adcb
sbb
rcrl
pop
sub
inc
adc
repz
jns
aam
mov
inc
repnz
or
mov
xlat
mov
dec
aad
jmp
push
mov
popa
xor
adc
jo
mov
inc
cli
int3
bound
and
jae
jecxz
push
mov
mov
lret
sub
xlat
inc
xchg
jno
add
call
add
arpl
sbb
lods
lds
in
das
sahf
and
fcomps
sub
push
movsl
push
jg
lods
push
cmc
clc
ja
out
fiaddl
mov
in
flds
loope
flds
inc
scas
jmp
jmp
jmp
push
imul
sub
ds
scas
mull
mov
push
into
hlt
pop
cmpsb
aaa
jmp
lds
mov
mov
into
jecxz
xchg
adc
dec
mov
xchg
push
je
add
add
movsl
mov
push
sub
cmpsb
add
cmp
les
mov
into
pop
fs
test
test
repz
jp
scas
in
aas
pop
movsl
fcomps
pop
js
stos
jae
inc
scas
mov
cmpsl
das
mov
lea
pop
mov
loop
pop
push
adc
or
fldenv
or
dec
xlat
imull
fiaddl
and
mov
jecxz
jmp
cmp
jno
pop
pushf
stos
sub
bound
mov
add
shrb
pop
mov
test
or
icebp
std
dec
xchg
repz
jnp
jo
push
test
stc
jmp
mov
push
sbb
arpl
cmc
mov
push
jl
out
adc
pusha
dec
xchg
jecxz
repz
cld
movsl
sbb
xlat
sub
push
sub
mov
jecxz
push
pushf
inc
xor
mov
enter
stos
mov
aam
aam
mov
lods
add
cmp
dec
push
incb
fs
xchg
stos
es
lods
cmp
stos
mov
lods
cmc
aad
cwtl
mov
push
pop
push
movsl
xchg
loopne
jnp
aaa
repz
jnp
mov
lods
jne
mov
push
cmpsb
scas
ja
iretw
clc
inc
or
ret
pop
repz
mov
int3
test
xchg
sbb
fldt
in
test
loope,pn
out
add
xor
mov
push
sbbl
lcall
mov
push
mov
das
sahf
and
ljmp
add
jns
sbb
cmp
xchg
loop
stc
addr16
lock
xchg
sbb
xor
lcall
xor
mov
shlb
dec
jecxz
pop
mov
mov
cmpsb
jno
sbb
mov
jecxz
bound
popf
ret
test
mov
lods
jmp
mulb
out
popa
pop
cmp
xchg
popa
mov
cmp
shlb
push
mov
bnd
pop
mov
in
popa
mov
jne
sub
flds
fmull
fs
adc
std
jne
pop
test
jmp
movzbw
lea
not
xchg
xchg
movzwl
pushl
not
pop
pushf
lea
jmp
mov
movl
pusha
jmp
jnp
lahf
mov
test
mov
inc
lea
mov
jmp
dec
inc
inc
aad
dec
iret
int
ss
and
sub
mov
fadds
adc
sbb
stos
cs
mov
scas
inc
test
xchg
lea
out
mov
cmp
push
in
aaa
mov
sub
mov
fmuls
add
and
sbb
mov
pop
jb
test
es
jne
and
inc
sub
add
adc
sti
cld
adc
arpl
inc
mov
mov
lret
mov
test
movsl
sub
mov
jp
fxch
add
bound
cmp
gs
lret
inc
mov
sub
push
das
sahf
sub
push
popa
enter
and
sbb
add
pop
jno
mov
test
imul
jnp
adc
pop
ret
bswap
setl
mov
lea
cwtl
pop
mov
push
not
movb
call
adc
insl
les
jb
ret
lret
rcrl
dec
push
mov
loop
xchg
ja
cmp
pop
ss
adc
dec
pop
pop
loope
dec
rcr
mov
inc
std
sub
mov
jp
cs
jecxz
cmpsb
jo
sbbb
lods
sub
sub
and
lods
and
pop
lahf
sbb
push
imul
es
das
arpl
or
ficompl
dec
cmc
adc
or
outsb
fisttpl
push
orl
into
repz
ja
sbb
stos
jb
adc
mov
sub
mov
loop
cwtl
lea
and
stos
arpl
cmp
mov
and
ret
mov
push
push
cmpsb
in
adc
scas
mov
dec
rorl
aad
mov
pop
rcrb
imul
in
pop
iret
cli
xchg
sbb
push
dec
rcrl
fadd
xor
dec
popa
xchg
mov
or
mov
mov
out
xor
xchg
add
dec
jbe
or
or
dec
cld
data16
ret
ffree
pop
in
clc
mov
shlb
push
ljmp
sub
push
mov
lea
call
test
mov
bt
jmp
push
mov
adc
jecxz
repnz
movsb
insl
push
loopne
mov
aam
inc
pop
cmp
xchg
insb
pop
icebp
or
daa
icebp
mov
mov
ret
jnp
outsl
push
mov
push
sbb
std
xchg
inc
aam
cmp
and
cmpsb
push
add
jns
frstor
dec
mov
and
adc
jne
jp
mov
shrb
mov
outsl
addr16
push
mov
gs
sub
adc
mov
and
jo
jg
lcall
xor
dec
cmp
cmc
frstor
icebp
jl
jne
bound
test
jp
popa
sbb
inc
mov
imul
popa
sub
stc
sub
pop
pop
icebp
xchg
jbe
and
or
cwtl
push
push
xchg
inc
stos
outsl
and
cmpsb
or
sub
addr16
dec
jnp
xor
div
std
jo
inc
jmp
hlt
mov
lcall
and
jp
or
lcall
stos
inc
sbb
dec
repz
rcrl
stos
and
or
cld
popa
fcoms
adc
ret
sahf
or
jne
xlat
add
cld
dec
push
mov
dec
mov
jl
cmpsl
inc
mov
lret
in
das
dec
test
stc
xor
and
dec
sbb
lea
aad
lahf
dec
out
jg
jnp
adc
cmp
mov
mov
rcrl
sub
bound
call
std
jno
push
add
lea
jb
mov
add
shld
das
cmp
cwtl
movzbw
call
bt
repnz
call
insl
mov
adc
lds
push
addr16
xlat
filds
inc
mov
mov
loope
mov
cmp
mov
sahf
int
cld
jnp
add
or
xchg
loop,pn
std
jb
imul
movzbl
pushf
jmp
shrl
sub
pusha
enter
mov
lcall
sahf
int3
dec
pop
lods
das
xchg
test
cmpsb
xor
mov
lods
mov
mov
adc
scas
and
adc
sbb
xchg
or
orb
xchg
or
test
js
imul
and
cli
data16
mov
jb
bound
ret
mov
cmp
or
pop
movsb
int3
adc
lods
in
adc
mov
out
cmpsb
fsubrl
js
sbb
xor
clc
shlb
xchg
mov
outsb
xor
jns
imul
in
daa
push
insb
pop
sub
adc
mov
sub
imul
jp
xor
int3
fwait
repz
jae
es
push
or
movsl
push
or
mov
lds
ss
sub
pop
jecxz
cmp
and
push
fidivs
enter
mov
dec
push
mov
push
rorb
sub
xchg
sbb
cwtl
stos
test
out
mov
dec
sbb
jb
sbb
dec
dec
xchg
xor
sahf
mov
bound
jp
adc
pushf
or
repz
jae
fnstsw
movl
lea
jmp
pusha
movl
pushf
jmp
dec
jle
push
gs
loopne
sub
mov
inc
scas
negb
fists
aas
loope
xor
inc
jno
movsl
xchg
fsub
mov
lods
jbe
mov
subl
xchg
cmp
adc
out
mov
push
push
int3
ja
sahf
cmp
fsubs
jl
add
push
mov
cs
imul
pop
sub
and
std
insb
aaa
mov
incl
not
pushf
bswap
movsbw
mov
movzbw
lea
cwtl
lea
jmp
stc
dec
adc
push
lcall
movsl
outsb
push
loopne
adc
mov
daa
lret
aas
fs
aas
push
pop
cmpsl
mov
lahf
xchg
pop
aam
pop
stos
ja
adc
into
push
sub
out
mov
push
pusha
sub
adc
mov
addl
clc
pop
filds
lret
inc
xchg
fisttps
loope
stc
inc
adc
mov
repz
insb
sub
cmp
decl
mov
and
imul
orb
dec
xor
into
mov
negl
mov
stos
push
imul
jmp
or
inc
push
cld
das
repz
insb
scas
jp
shlb
fucom
mov
push
xor
pushf
test
cmpsl
adc
inc
or
sub
cli
adc
loopne
das
mov
or
inc
and
xchg
mov
push
push
in
arpl
decl
push
jl
and
push
hlt
xchg
sub
mov
iret
pop
mov
into
add
call
and
dec
fsubp
adc
jno
sbb
ja
mov
into
pop
in
scas
mov
jae
sub
mov
sbb
push
dec
fildll
push
rorl
mov
std
insl
lret
pushl
lea
jne
pushf
not
mov
pushf
bswap
mov
setb
pusha
mov
push
lea
jmp
mov
lods
push
and
out
je
mov
out
mov
push
xchg
xchg
call
push
push
incl
es
icebp
inc
sbb
cmp
popa
or
dec
shll
pop
js
insl
cmp
pop
into
cltd
pop
imul
fcomi
mov
mov
and
in
scas
ds
in
xor
pop
xor
adc
inc
test
xchg
mov
mov
push
pushf
jle
sbb
pop
cld
mov
mov
fcoms
outsl
cmpsl
addr16
das
jl
orb
mov
outsb
mov
cwtl
test
jle
sub
mov
xor
jo
push
adc
sti
hlt
or
jbe
in
xchg
arpl
inc
repz
outsb
adc
popa
insb
push
movsl
jmp
test
lahf
ljmp
mov
adc
push
mov
repz
mov
mov
pop
fs
push
inc
or
inc
in
in
inc
xor
cmp
cmc
in
rcll
mov
sbb
pop
cltd
jns
add
adc
pop
cmp
add
and
lds
or
insb
push
hlt
xchg
enter
dec
sbb
cltd
mov
pop
xor
cmp
xchg
and
or
scas
sbb
jp
repz
gs
or
dec
adc
mov
fnstenv
lret
jp
dec
arpl
insb
xchg
xchg
in
jbe
jo
enter
adc
movsb
icebp
negl
mov
loopne
sahf
jno
imul
sbb
je
scas
cmp
fwait
inc
mov
enter
gs
xchg
jg
dec
repz
xchg
clc
inc
lods
sbb
mov
cmp
sub
ret
jmp
jb
stos
xor
pop
mov
mov
insb
inc
cmpsl
xchg
push
subb
xor
or
repz
sahf
cli
xor
or
dec
push
lods
call
or
and
mov
repz
or
adc
mov
rcl
ja
lahf
andb
insl
jae
arpl
mov
add
and
mov
sbb
repz
push
push
ds
cmpsb
or
dec
jb
in
fsub
push
shl
push
dec
xchg
daa
mov
ds
lods
mov
sub
clc
mov
adc
sbb
mov
repz
jle
pop
cmc
rcl
mov
jl
xor
in
mov
add
pop
adc
dec
adc
loope
fwait
sub
push
xchg
pop
inc
in
jle
jb
scas
dec
adc
xor
cmp
fldcw
fsubrs
and
jnp
sbb
andb
jnp
jp
dec
mov
sbb
fistpll
fs
leave
inc
inc
push
lods
fisttpl
adc
into
lret
rol
dec
xor
inc
in
mov
scas
add
in
flds
pop
in
and
cmp
xrelease
dec
leave
lret
pop
mov
add
popa
dec
pop
outsb
xchg
mov
and
rcrb
push
test
std
imul
adc
mov
or
ljmp
inc
or
jnp
stos
xor
in
sbb
mov
pop
jae
imulb
neg
push
inc
cmpsb
cmp
and
inc
in
jns
jae
xor
mov
mov
in
sbb
out
adc
insl
or
pop
and
les
dec
push
popf
cmpsb
cmpsb
leave
nop
or
jb
or
loope
mov
std
imul
in
icebp
push
add
sbb
xor
mov
idivl
push
pusha
jmp
sbb
sbb
cli
popf
subb
jmp
cld
mov
xor
lahf
stc
inc
gs
xchg
ss
mov
mov
pop
jle
popa
xchg
int3
push
ret
call
lods
xor
outsl
adc
xor
fisubs
cmpsb
xchg
ds
mov
dec
icebp
negl
idivl
dec
mov
pop
daa
lret
rcll
fsubl
out
xor
push
mov
addr16
orb
sub
mov
out
sbb
je
xor
pop
out
dec
push
mov
mov
es
add
xchg
xor
inc
adc
adc
popa
inc
xor
rolb
imul
or
pop
aaa
movsb
sub
cld
sub
mov
ja
sbb
arpl
lds
inc
bound
mov
mov
inc
lock
mov
push
in
jmp
fsubrl
mov
add
fiadds
push
cli
and
jne
cmp
call
and
push
stos
mov
inc
pop
movsb
lock
or
pop
out
enter
jae
push
je
lock
xor
push
push
inc
fiaddl
xor
jb
or
sti
push
xor
jae
push
sti
rorl
idivb
dec
in
fisubl
mov
xor
loop
mov
pop
in
repz
imul
sub
mov
cwtl
xchg
mov
push
bswap
mov
pushl
mov
jmp
push
pushl
lea
jmp
sahf
xor
lock
jno
and
adc
mov
jecxz
adc
je
pop
jno
mov
dec
or
ret
cwtl
stos
repnz
or
and
adc
xor
jg
loop
loop
daa
push
stos
lock
repz
mov
mov
hlt
mov
mov
jb
xchg
enter
cmp
mov
sub
pop
or
push
dec
jnp
in
js
jmp
enter
fmul
push
push
mov
cmp
jg
jp
adc
clc
gs
aas
jmp
movsb
push
shl
fs
inc
js
je
jb
arpl
jae
popf
jge
iret
mov
sbb
xchg
adc
fsubp
lock
or
pop
roll
cmp
ja
aas
inc
xchg
ss
xlat
jbe
push
addr16
mov
mov
jae
or
push
nop
pop
push
dec
push
sbb
cltd
loope
idivb
movsb
sub
sbb
cmp
or
adc
sbb
mull
lock
pop
or
add
clc
fucomi
xlat
loopne
add
aad
adc
sub
lcall
mov
aaa
lahf
xorb
mov
mov
mov
pop
push
add
iret
imul
stos
xor
adc
fs
outsl
lods
jns
roll
js
jno
dec
cmp
jns
dec
and
pop
and
test
jbe
iret
in
push
jg
xchg
popf
bound
pop
pop
lds
jg
jge
mov
test
or
testl
and
nop
jg
mov
xlat
lds
repz
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
outsl
jbe
push
lret
popa
flds
xchg
cld
inc
outsb
xlat
mov
daa
das
mov
lcall
and
mov
mov
push
mov
rorl
mov
js
loope
insb
mov
push
dec
inc
jb
test
mov
jns
mov
pop
scas
adc
xor
lcall
push
insb
pop
das
fs
nop
jle
mov
imul
or
rep
mov
inc
lret
int
fwait
add
inc
iret
sbb
mov
scas
pushf
mov
std
gs
cltd
sti
sbb
fimull
das
ja
sub
loop
and
into
mov
dec
mov
dec
sbb
xorl
xor
fcomip
adc
mov
aaa
sbb
stos
fs
mov
idivb
arpl
xchg
xorps
bound
inc
sub
mov
dec
cmp
mull
sbb
jae
nop
lea
outsl
mov
lods
jle
sub
out
xor
call
push
sbb
aaa
pop
das
bnd
pop
pop
insl
xchg
pop
or
pop
dec
mov
sti
out
pop
inc
repz
adc
movb
push
lea
jae
neg
push
mov
pusha
movzbw
btc
jmp
call
jmp
cmp
stc
push
test
cmp
jmp
test
jmp
insb
push
pop
xchg
jecxz
sub
jp
mov
pop
dec
sarl
jbe
jecxz
std
hlt
out
xchg
call
xor
sbb
push
int
iret
cld
mov
pop
jecxz
push
xor
scas
pop
mov
in
les
hlt
call
jp
stos
hlt
ljmp
xchg
jns
mov
fsubl
mov
lret
fsubs
dec
mov
stc
in
cmp
std
addr16
pop
decl
cmp
decl
mov
stc
not
mov
not
bsr
pushf
sar
mov
cmc
movzbw
shld
mov
test
sub
test
pusha
repnz
pushl
pushf
pushf
lea
jne
bsr
push
mov
shr
pushf
bswap
sub
movzbl
lea
cmc
sub
clc
pushf
mov
pushf
pushl
popl
cmp
test
test
cmc
cmp
call
sub
jle
mov
fsubp
test
jae
inc
or
and
inc
jg
neg
decb
popf
jecxz
mov
lea
mov
adc
sub
gs
adc
stc
mov
loopne
jl
sti
sti
pop
or
mov
or
loope
fdivr
pop
test
or
pop
lock
sbb
loopne
cmpsl
inc
adc
movsb
cmp
repz
push
or
rclb
int3
ret
flds
xchg
aaa
neg
xor
aad
sub
hlt
jnp
fdivrl
adc
pop
mov
mov
push
out
fstpl
and
push
testl
sti
mov
push
cmp
dec
mov
in
mov
data16
cmp
add
addr16
les
in
nop
aaa
xlat
rcrl
inc
icebp
mov
sbb
std
pusha
mov
sub
add
gs
cmp
cmc
push
jmp
nop
mov
add
movsb
mov
sahf
nop
xor
jle
jb
insl
jl
call
jecxz
xchg
inc
movlhps
xor
jp
orb
les
jnp
daa
push
dec
mov
shll
adc
iret
cmp
and
push
stos
cld
lcall
sbb
and
xchg
data16
faddl
shlb
or
into
sub
xchg
test
mov
jns
jno
xor
notl
out
xchg
push
ss
or
push
fstl
and
insl
mov
subl
xchg
pop
aam
in
dec
lcall
lea
ja
stc
jmp
call
mov
shl
lea
call
pop
ret
int
dec
aaa
push
int3
xchg
or
aaa
inc
out
mov
inc
lcall
sbb
mov
ss
xlat
mov
das
or
int3
mov
sti
jnp
mov
mov
jp
pop
pop
int
mov
mov
fcmovnu
jg
inc
aaa
test
loope
les
jp
sbb
jnp
jae
and
sub
xchg
sahf
sub
cmc
inc
or
std
fisubs
xchg
sub
data16
lods
jle
mov
arpl
xor
mov
test
sbb
cmp
cmpsb
ja
xorb
xor
mov
xor
int
stos
or
idiv
or
and
stc
push
daa
scas
rcrl
xor
or
lds
jmp
add
xchg
pusha
cwtl
jbe
xlat
sbb
test
inc
testl
out
push
repz
jp
lods
jl
enter
push
je
test
pop
mov
xor
pushf
ja
mov
xor
cs
cmc
fsubl
mov
outsl
dec
cmp
jge
xchg
jno
sub
push
push
sar
xchg
in
xor
pop
lea
das
sahf
aaa
rcll
adc
mov
orb
lds
xor
sbb
outsb
sub
call
lea
jb
setbe
pusha
mov
add
inc
not
xchg
stc
mov
sub
movsbl
bswap
add
jmp
lea
mov
nop
mov
scas
xchg
pusha
daa
iret
aaa
filds
mov
or
in
and
dec
imull
jmp
lods
mov
clc
add
sar
push
mov
or
mov
jecxz
sub
enter
pop
or
jbe
and
test
mov
xchg
flds
stc
test
es
addr16
xchg
loop
fwait
out
pop
or
std
arpl
xor
xor
xor
lea
push
pop
and
jb
add
mov
test
aad
pop
xor
movsb
xlat
arpl
outsb
std
notl
add
sub
popa
test
fisttps
movsb
mul
in
rcrb
mov
mov
sub
xchg
out
push
pushf
sub
bound
mov
add
pop
add
mov
dec
repz
pushf
adcb
lea
jne
cwtl
movb
pushf
jmp
pop
stos
rcrb
mov
enter
cmpsl
xor
jmp
mov
pop
xorb
mov
loope
cltd
pop
xlat
add
mov
sbb
daa
add
pop
outsb
and
lock
mov
fistl
loope
jno
ret
mov
out
mov
jne
nop
adc
jmp
pop
repz
pushf
pop
push
test
inc
and
add
stc
cmp
pushf
pushl
ret
sub
and
jbe
or
push
out
jne
xor
lods
stc
mov
push
les
and
imul
fisttpl
inc
scas
pop
push
mov
pop
mov
or
iret
loopne
push
fsubs
push
inc
lcall
mov
jbe
mov
sbb
and
outsl
js
shl
pop
add
xchg
fsubrl
imul
les
lret
inc
mov
gs
insb
sarl
and
adc
adc
xchg
pop
or
iret
inc
icebp
push
jns
insb
jns
adc
or
jmp
mov
ds
and
or
mov
xlat
jno
incl
dec
cltd
orl
cmpsb
jle
mov
jne
pop
movsl
xor
cmp
pop
stos
and
xchg
test
lcall
into
fucom
cld
pop
rclb
or
loopne
test
cli
push
mov
lea
fists
dec
les
leave
push
cmp
js
add
mov
in
and
pop
in
sub
cld
sahf
cmpsl
mov
lea
jae
bswap
movsbw
pushf
xchg
lea
pusha
call
out
in
pop
mov
push
jns
in
mov
sub
arpl
push
aas
in
fs
shll
mov
bound
and
inc
fsubs
insb
in
xchg
das
dec
jae
add
push
lods
fists
jnp
sub
into
mov
fwait
inc
lcall
or
sbb
fst
sbb
push
fimuls
repz
sahf
ss
call
pushf
mov
bswap
mov
lea
jmp
cwtl
mov
call
movl
call
inc
idivb
stos
pop
jmp
cmp
stos
movsb
int3
jg
adc
dec
jae
add
fidivl
mov
dec
jbe
mov
xchg
pusha
dec
sub
mov
fucomi
mov
cmp
mov
adc
xor
int3
bound
shrb
lock
jo
fincstp
pop
mov
cltd
es
int3
cmp
sarl
push
repz
lahf
mov
je
pusha
jmp
push
sub
cmp
repz
xlat
and
pop
mov
mov
xor
sub
in
out
addr16
stc
sub
jne
inc
mov
and
lock
fisubs
jb
and
dec
cs
rol
or
sti
test
addr16
jge
cli
data16
sbb
mov
shlb
fisubl
cltd
orb
lret
cmp
popf
test
xchg
cmc
dec
lret
push
jg
push
jecxz
jnp
ja
lock
xchg
cld
cwtl
push
xlat
je
addl
lcall
decl
xchg
rorb
and
lea
pop
push
decl
mov
testl
js
ljmp
sub
imul
mov
leave
mov
jmp
dec
imul
cmc
insb
ja
fsubs
sbb
xor
and
lcall
int3
outsl
shll
jmp
stc
cmpsb
mov
mov
mov
repz
cwtl
in
xchg
xchg
sete
lea
push
push
lea
call
jmp
pusha
pushf
movl
pusha
lea
jmp
add
push
test
push
jmp
jmp
lea
je
cmp
cmc
cmc
cmp
pushf
pusha
lea
je
push
mov
pushf
lea
jmp
mov
pusha
pushf
lea
jmp
jg
push
or
or
push
ja
push
das
push
lahf
or
mov
shll
jl
lret
test
pop
cmp
ret
mov
and
inc
inc
lahf
or
dec
sub
cli
and
mov
test
pmulhw
popa
adcl
je
std
push
mov
or
into
pop
add
xor
lahf
mov
adcb
inc
sbb
lods
pop
mov
imul
pop
negl
btc
push
loopne
stc
les
cmpsl
repz
cltd
pop
dec
adc
adc
pushf
pushf
push
pushf
lea
jmp
loop
data16
and
push
pushf
sub
inc
push
repz
test
int
jp
mov
icebp
adc
adc
frstor
pop
ja
into
lcall
mov
jl
dec
setp
mov
gs
fbld
mov
dec
fcmove
repz
lcall
movb
lea
jmp
bound
cmp
test
xchg
inc
call
sar
movsb
dec
cwtl
mov
fbstp
xor
or
loope
mov
fiadds
sbb
mov
cmpsl
insb
fldcw
std
loope
pop
cmp
cmpsl
pop
or
jmp
into
adc
rorl
scas
jmp
in
mov
or
shlb
jge
loopne
pusha
std
scas
loopne
xchg
xor
jbe
sbb
xor
pop
pop
rcrl
and
pop
mov
push
sbb
xchg
arpl
push
iret
mov
call
xor
adc
pop
xchg
enter
xor
adc
testl
cmpsl
jp
push
fisubrl
sbb
hlt
pop
adc
mov
ret
xor
add
adc
fnstsw
sub
movsl
mov
sub
imul
lret
lahf
icebp
mov
pop
inc
adc
mov
in
popa
mov
adc
or
lahf
lret
ret
xchg
cmp
movsl
icebp
and
mov
jns
add
arpl
push
xor
mov
sbb
sub
dec
cmp
bound
sbb
je
testl
out
sub
fptan
sub
sub
insb
dec
jno
add
cwtl
data16
adcb
jo
in
stc
movsl
push
push
or
insb
test
pop
aas
jmp
mov
mov
mov
bndldx
xchg
jnp
cld
fwait
outsb
push
pusha
mov
lea
jb
bswap
shrd
daa
cmp
inc
sbb
call
jle
js
adc
fwait
ret
pop
sbb
outsb
push
mov
stc
lods
and
adc
es
jmp
jge
int3
add
ja
test
add
lcall
add
xchg
add
sbb
jae
loopne
aaa
lar
rcr
mov
cmc
sti
out
or
in
push
insl
pop
stc
xchg
aad
imul
nop
dec
fadd
repnz
repz
xchg
cmp
or
mov
iret
rol
inc
out
mov
push
iret
mov
rorb
stos
xchg
jecxz
ss
cli
and
add
pop
sbb
add
cmp
mov
xchg
or
adc
adc
push
in
insb
test
scas
pop
xor
lahf
les
push
fsub
int
ret
adc
jne
idiv
pusha
pop
add
gs
sub
ds
pop
inc
ljmp
lea
jb
jmp
bt
add
pushf
push
lea
jmp
push
sub
fsubl
scas
xchg
pop
stos
pop
fs
and
cmpsl
icebp
loopne
pop
push
lahf
lret
into
fcmovne
adc
dec
fadds
push
sbb
popa
fsubs
aaa
andb
loop
dec
cmp
cld
xchg
test
jmp
push
test
lret
rcr
adc
and
and
fst
test
adc
enter
or
out
js
movsl
jp
jnp
insl
mov
aam
addl
arpl
jge
fsub
xchg
mov
sbb
out
xchg
mov
and
test
mov
adc
fwait
inc
push
push
repz
xchg
inc
push
jnp
dec
and
pushf
call
bt
clc
shl
jmp
pop
dec
jb
test
int3
push
js
stos
cmc
mov
test
shlb
lahf
inc
jp
sbb
fnstenv
fidivs
popa
out
inc
iret
lcall
call
adc
pop
pop
insb
das
push
in
jae
lods
pusha
sbb
push
xor
je
fmull
jbe
addr16
aas
aam
push
stc
pushf
xlat
or
cmp
popf
push
mov
add
rep
xchg
xchg
xor
pushf
imul
dec
mov
inc
sub
xchg
pop
inc
aad
dec
std
test
adcl
sti
jb
sub
in
das
mov
cmpsl
pop
les
dec
adc
add
dec
sar
jmp
aaa
jge
xchg
sbb
movsb
and
mov
enter
xchg
mov
into
xor
aam
dec
add
rclb
mov
fldt
adc
mov
ds
mov
jmp
xchg
sbb
inc
pop
test
je
test
mov
adc
sbb
pop
stos
xchg
fs
mov
mov
mov
add
inc
sbb
add
dec
bound
fs
dec
cltd
sub
xor
cmp
xor
jg
ret
jle
lds
dec
cmpsb
mov
iret
lret
repnz
test
movsb
dec
ljmp
arpl
into
mov
nop
jp
int
and
sti
mov
jle
pop
sbb
sarl
push
adc
sbb
data16
xchg
mov
jo
in
jae
lods
int3
in
jmp
ret
push
stc
aas
mov
scas
or
cmpsb
jns
xchg
lods
add
adc
xchg
fisttpll
das
lahf
ret
inc
adc
ret
cltd
dec
cmp
incb
outsl
cmp
xor
fsubs
pushf
push
arpl
nop
xor
dec
test
pushf
add
sub
jle
cmc
stc
movzwl
jmp
add
xchg
xchg
sub
jbe
dec
icebp
stc
subb
popa
xor
add
add
fcmovb
hlt
insb
js
rcrb
jno
mov
mov
fwait
outsl
adc
into
movsl
dec
pop
test
push
dec
lods
push
test
into
test
arpl
rcrl
xchg
orb
ja
icebp
cmp
cli
int
pop
cld
adc
stos
cltd
movsl
adc
dec
push
mov
jae
icebp
mul
mov
loope
inc
inc
mov
jp
enter
fwait
addr16
cld
nop
sub
push
inc
inc
push
inc
push
dec
xor
cs
insb
add
pushl
movl
pushf
call
jmp
call
call
clc
call
xchg
mov
fisubs
stc
push
sbb
cmc
mov
mov
es
push
push
sub
in
es
pop
popf
mov
jecxz
roll
pop
dec
test
cwtl
scas
je
bound
call
dec
pop
jmp
inc
push
or
loopne
leave
int
or
sub
repz
test
popf
and
cmp
fists
cld
jmp
mov
sbb
decl
xchg
ret
es
repz
xchg
enter
mov
xor
jmp
push
push
push
inc
push
lcall
aaa
pop
movsl
cmp
and
pushf
ret
test
pushf
mov
and
popl
add
mulb
aaa
mov
fstpl
imul
arpl
dec
ljmp
xor
mov
aaa
ret
emms
repz
xchg
bound
mov
jle
out
pop
sbb
push
shrl
cld
movsl
psubb
jno
shrl
cmp
push
repnz
bound
jo
xchg
dec
mov
mov
ljmp
jp
cwtl
popf
pushl
sbb
push
popf
ds
fcomps
fbld
outsl
inc
aas
adc
and
xchg
jnp
mul
pop
cli
lods
pop
addr16
aam
or
icebp
std
lret
sbb
xor
repz
xchg
mov
mov
push
and
cmc
pusha
call
jno
mov
xchg
iret
and
push
aaa
orb
fwait
inc
int3
rcrl
cmp
andnps
sti
cmp
inc
pop
cmpsb
out
leave
pop
lcall
mov
sub
pop
nop
inc
sbb
pushf
dec
or
pop
cmp
xlat
sahf
mov
xor
xor
sub
push
ret
jo
call
xchg
mov
bt
cmp
call
lea
je
pusha
movzbw
mov
pushl
movsbw
call
pusha
jmp
mov
sbb
and
adc
shr
sbb
mov
pushf
push
lahf
mov
sbb
mov
dec
push
fbstp
pop
mov
push
mov
pop
mov
push
sub
cmp
cmpsl
sub
test
dec
fsubrl
jae,pt
cmp
call
pop
jle
mull
into
lods
je
js
mov
loope
pop
movsl
sarl
sbb
adc
ljmp
xchg
push
pusha
pushf
movb
pushl
popl
push
pushl
pushl
ret
jecxz
aas
mov
add
fisubs
int3
jo
mov
insl
cmc
push
push
sbb
cmp
movsl
je
jmp
ror
pop
out
inc
add
sbb
and
add
out
int
std
mov
cmpb
das
sti
push
stos
push
inc
call
aas
bound
lret
add
xor
or
jo
hlt
mov
push
stos
ds
or
fs
push
std
and
add
or
test
jle
xlat
inc
xor
repz
mov
add
jmp
jmp
jmp
mov
jmp
adc
adcb
add
push
sbb
and
jo
and
pop
pop
mov
and
mov
das
imulb
cmpsl
imul
jae
add
jno
pop
or
cmp
sar
test
cmp
xor
outsl
sarb
pushf
push
fcmove
push
lcall
out
iret
mov
sbb
push
pop
xchg
enter
inc
cmpsl
cmp
popa
sub
lcall
mov
pop
scas
in
ja
jo
mov
les
rcr
repz
lea
push
add
push
idivb
mov
adc
fldcw
les
push
jnp
sub
movsl
dec
idivl
lcall
push
mov
jae
pop
sbb
shl
int
iret
sbb
fdivl
mov
add
sub
xor
lret
and
pusha
sbb
cmp
xor
push
sub
call
bound
scas
push
fimull
xchg
xchg
or
aaa
subl
repz
rol
dec
jmp
cmc
ljmp
pop
inc
stos
sar
add
negl
sub
fsubl
les
adc
xchg
push
repz
push
sub
mov
in
out
push
lret
adc
lret
mov
jle
aad
sarl
jp
dec
loop
les
jno
popa
lock
jno
and
inc
insl
cltd
out
ljmp
stc
inc
repz
mov
add
inc
jae
adc
push
inc
or
pop
pop
sub
shlb
or
mov
arpl
dec
in
push
sbb
out
mov
xor
ret
movsl
clc
mov
movsb
lock
pop
ds
imul
sbb
mov
lods
jge
xor
in
filds
or
sub
cmp
sti
cmp
jmp
adc
loop
out
loop
adc
mov
enter
xchg
cld
icebp
movsl
pop
mov
fistpll
aad
push
inc
in
mov
add
orl
inc
shll
cmpsb
je
add
mov
inc
lods
outsl
out
push
push
cmp
or
mov
xor
sbb
pusha
cmp
pop
cltd
daa
iret
jo
push
mov
xchg
mov
push
ret
push
mov
mov
gs
rcl
push
pop
aad
fldl
out
cld
lret
dec
pop
xchg
loop
cld
jg
push
inc
adc
jo
and
adc
call
push
mov
cmp
or
jbe
subb
inc
push
repz
iret
fldt
cmc
pop
inc
in
push
in
ds
cmpsl
jbe
mov
loopne
popa
xor
out
lock
xor
loop
fsubs
or
or
add
pop
jbe
scas
gs
add
sbb
mov
movsl
fcomi
idiv
aad
loope
inc
mov
loop
xchg
hlt
in
sbb
push
jge
rcrb
adcb
lds
xor
movl
pusha
jmp
mov
xor
pop
loopne
pop
aaa
fadd
push
hlt
mov
or
cmp
mov
outsb
and
mov
arpl
mov
out
dec
in
push
sub
outsb
sbb
push
and
pop
inc
cwtl
inc
cmp
scas
out
fadds
pop
sub
lcall
add
iret
mov
in
scas
add
dec
fldenv
and
mov
incl
add
je
outsl
fs
gs
imul
add
mov
enter
pusha
movb
lea
jb
cmc
shld
cmp
cwtl
mov
push
pushf
pushf
pusha
lea
jb
aad
pushf
and
mov
sub
cmc
cmp
call
jmp
push
lock
std
std
mov
pusha
sbb
adc
inc
adc
stos
leave
lret
sub
add
pop
sbb
xor
pop
jg
jge
jne
in
cmp
and
aam
push
leave
add
jmp
sub
test
bound
xor
lahf
add
ja
in
xchg
push
push
stos
inc
jne
cmp
outsb
add
add
jmp
sbb
inc
cmp
mov
jns
stc
cmp
test
cmp
call
add
aas
mov
push
mov
push
sbb
pop
das
xlat
jg
xchg
pop
inc
sbb
jp
test
add
sahf
inc
or
divb
outsb
lea
mov
in
and
jp
movsb
sti
decl
push
int3
push
jp
inc
sbb
mov
imul
jg
aam
or
xor
mov
ljmp
cmp
xor
insb
ja
repz
mov
pop
pushf
movb
lea
call
shld
shl
add
bswap
pushf
stc
pushf
mov
dec
mov
pushf
mov
stc
movb
cmp
call
pushl
popl
pushf
pushl
ret
pusha
jmp
sbb
jne
lods
add
pop
and
adc
in
ss
daa
scas
cmp
test
aaa
xor
insb
fists
cmp
movsl
dec
paddusw
in
add
cmp
outsb
push
push
movl
cltd
sti
scas
xor
lret
jnp
lcall
or
lcall
cmp
dec
jne
rorl
out
mov
lds
roll
out
push
inc
psubusw
adc
lods
mov
xor
mov
cld
mov
scas
sbb
mov
ret
incb
fadds
jae
sbb
test
add
mov
jg
inc
mov
rcrl
xchg
stos
pop
mov
jp
lcall
popa
push
das
lahf
sarl
adc
outsb
stos
daa
mov
lcall
xor
pop
test
lahf
mov
inc
push
repz
mov
call
xchg
jmp
test
dec
xor
inc
cs
loopne
mov
push
js
in
mov
dec
je
jo
xor
and
addb
or
mov
cli
mov
mov
mov
push
hlt
jmp
sbb
xchg
fimuls
inc
jnp
or
pop
movsl
jo
stos
cwtl
push
xchg
aas
sub
and
mov
and
setp
mov
pushf
push
movb
pushf
mov
mov
pop
push
pushl
ret
mov
jmp
std
rcrb
inc
dec
test
xchg
pop
addr16
pusha
leave
mov
loop
push
loope
cmp
out
arpl
push
div
adc
jmp
scas
xchg
xor
mov
jbe
imul
test
cmc
xchg
push
mov
jmp
push
mov
add
push
popf
lds
rorl
in
dec
mov
test
push
fisubs
xlat
inc
ja
rcl
cmp
insb
std
inc
xchg
test
leave
jl
sub
les
xorb
push
pop
add
scas
stc
int3
push
jns
mov
movsb
paddusb
icebp
cmp
inc
maskmovq
mov
cltd
mov
adc
lret
push
aaa
mov
add
pop
add
fisubl
jae
into
repz
test
adc
add
bt
bt
cmp
pushf
pushf
lea
jb
pusha
cmp
pushf
pushl
call
push
in
sbb
pop
pop
push
clc
subl
enter
mov
jae
adc
or
xchg
addr16
imul
frstor
pop
xchg
push
in
imul
jo
adcb
ret
mov
add
sbb
and
pop
xchg
popa
aad
adc
lcall
sub
roll
rcll
mov
das
lahf
aad
sbb
or
leave
mov
call
aaa
and
mov
cmp
cmp
repz
test
loopne
stos
jmp
ret
leave
push
xchg
adc
mov
loopne
test
cmp
sub
mov
test
push
or
ljmp
and
adc
cltd
cmpsl
xor
jecxz
mov
icebp
sub
jns
loopne
int3
adc
cmc
pop
or
icebp
ljmp
cld
nop
and
imul
push
xor
adc
jecxz
jo
movsb
test
sbb
scas
push
shl
jo
scas
and
subl
adc
loop
push
stos
sbb
dec
hlt
fsub
dec
push
pop
add
push
ret
cli
xor
or
lock
lods
pop
pop
call
dec
xchg
or
pop
xchg
orb
fs
hlt
and
mov
movsl
cltd
stos
arpl
testb
ja
idivb
or
sub
movsl
jg
nop
icebp
imul
mov
fst
and
push
jg
push
scas
in
push
nop
pushf
into
dec
dec
mov
mov
ret
shl
aad
jne
mov
xor
loopne
sbb
push
mov
popf
dec
xchg
repz
xchg
into
sbb
cmpsb
ljmp
rcr
add
sarb
push
cli
jb
std
rcll
in
dec
iret
xchg
in
xchg
push
sub
pushf
mov
adc
sub
jp
sbb
xor
lea
fldenv
repz
xchg
and
pushf
movl
pushf
lea
mov
movl
pusha
lea
jl
pushl
pushf
pushl
ret
push
add
push
pusha
mov
jmp
and
inc
rolb
call
movsl
into
jbe
es
test
mov
arpl
cmp
sbb
lods
add
push
mov
dec
fidivl
mov
mov
call
cmp
push
mov
int3
testl
dec
pop
pusha
or
gs
lahf
arpl
xchg
clc
lea
mov
xchg
test
push
sbb
jbe
ljmp
push
bound
outsb
popf
repz
xchg
jns
xor
testl
negb
dec
push
pop
add
xchg
mov
mov
jno
popf
scas
movsl
mov
in
loopne
pop
int
jge
nop
add
mov
into
lods
mov
fsubl
mov
pushf
das
iret
fwait
lea
lods
nop
xchg
dec
mov
sbbb
push
cltd
pop
mov
in
lea
jo
jo
lods
fildll
mov
out
mov
pop
xchg
cld
sbb
nop
pushl
lea
jne
pusha
bswap
cwtl
not
mov
not
mov
setbe
jmp
lock
xchg
pusha
or
fidivs
fadds
aad
test
ljmp
adc
xor
pushf
push
sub
out
ficoml
fnstenv
test
sbb
repnz
and
loopne
gs
add
ficompl
in
sahf
sarb
dec
iret
aaa
jge
xor
outsb
addr16
rorb
cmpsb
lea
bound
mov
je
xor
cwtl
inc
bsf
xchg
add
cmp
andb
mov
daa
add
cs
adc
bound
pop
subl
enter
or
loop
mov
xor
pop
in
mov
sub
scas
out
mov
add
fisubs
xlat
dec
pop
mov
sub
aad
ds
mov
pop
mov
movsb
xchg
push
pop
outsl
inc
ja
ret
dec
sub
pop
or
jg
xchg
and
pushf
jo
cwtl
icebp
div
cwtl
mov
dec
mov
in
es
push
or
jmp
call
cld
sbbl
rolb
fiadds
negl
inc
dec
fsubs
sub
pop
dec
pop
inc
aaa
pop
lock
imul
jg
dec
or
fsubrs
mov
pop
lcall
jp
pop
push
push
mov
pop
push
push
cmp
pop
pop
dec
push
push
mov
test
out
pop
rorb
popf
or
das
cmp
push
inc
scas
pop
out
jle
repz
adcl
inc
ljmp
pusha
test
xchg
pop
xchg
pop
push
push
push
xlat
or
or
aas
sarl
or
dec
icebp
clc
sahf
shrb
xchg
mov
sub
insl
cmpsb
fimuls
add
mov
adc
stos
popa
xor
repz
push
je
data16
stos
ficoms
jnp
setae
mov
and
xchg
stos
cmp
andb
jae
dec
cmp
cmp
icebp
div
fsubl
jg
loope
xor
test
fwait
pop
lods
xchg
decl
cld
subb
inc
xor
notl
add
xlat
pop
add
dec
rorb
mov
xchg
mulb
push
jbe
jne
fisubrl
and
into
pop
test
or
rolb
sbb
lods
or
shrl
popf
ds
fisttpll
stos
jl
jbe
rorb
inc
pop
out
in
jne
outsb
aas
test
push
pusha
cmp
pop
fwait
in
pop
out
mov
mov
imul
orl
andl
incl
sbb
mov
fs
pop
inc
push
xchg
or
lods
stc
xor
testl
add
adc
shrb
and
outsb
xorl
sahf
or
movsb
dec
pop
insl
mov
pop
mov
adc
loop
std
push
insb
sub
and
mov
and
sub
mov
adc
rolb
bound
pop
in
flds
popf
lret
pop
mov
mov
and
inc
fwait
cmp
push
movl
pushf
pushf
lea
jmp
call
movl
pushl
jmp
call
lea
ja
cmc
inc
or
or
sub
and
lea
rcr
shl
add
push
cmp
adc
shl
mov
dec
not
mov
call
rol
xchg
data16
jno
sti
in
add
out
xchg
jle
out
pop
inc
adc
jnp
ret
and
sub
aam
test
or
dec
pop
je
repz
out
je
fnstenv
push
dec
fs
dec
mov
jmp
sbb
lret
pop
clc
xor
icebp
and
or
and
popa
cmp
adc
mov
push
rorb
jmp
sbb
xchg
data16
cmp
xor
pop
inc
mov
or
iret
repz
mov
jge
inc
inc
and
cmp
aam
jmp
movl
pushf
mov
pushf
movl
pushf
push
lea
jmp
rcr
shl
dec
jmp
movw
adc
pushf
pushf
push
lea
jae
inc
pop
jmp
push
call
sub
pusha
pushl
call
push
movl
call
test
cmp
movw
lea
je
jmp
cld
xor
loope
out
jbe
or
clc
mov
scas
xchg
std
movsl
lock
stos
xorl
and
inc
lods
and
aam
iret
fiadds
jle
aas
fnsave
and
lods
jns
inc
rcrb
inc
daa
push
mov
jg
movsb
pop
sysenter
xor
dec
xor
insb
push
xchg
cmp
lahf
out
push
xor
push
bound
xlat
sbbl
ret
nop
mov
pop
xchg
mov
dec
mov
xor
cmp
sub
jecxz
repnz
mov
mov
cmp
push
jp
pop
push
xlat
lds
add
jle
and
fists
jmp
xchg
pop
movsl
icebp
pop
pop
pushf
mov
scas
sub
das
lahf
out
rclb
jno
lock
add
or
lds
lods
fld
adc
and
cld
mov
jae
inc
add
stos
push
not
cmc
cmc
cmp
push
lea
call
into
subb
adc
aas
inc
lock
cmpsb
outsl
mov
xor
mov
jo
shll
cwtl
adc
push
pop
in
adc
jmp
push
sub
xchg
test
sub
mov
pusha
pop
and
or
mov
sbb
cmpsb
adc
imul
push
xchg
jg
mov
faddl
in
push
fdivrs
sub
setl
loope
stc
add
pop
loope
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
lea
jnp
cmc
test
or
push
pusha
push
jmp
loop
jge
dec
cs
inc
popf
xchg
mov
pop
mov
add
and
mov
mov
mov
mov
push
arpl
sub
lods
xchg
sub
test
sbb
mov
or
imul
repz
add
test
fdivl
mov
push
mov
js
sub
std
dec
std
adc
dec
shrl
out
and
dec
xchg
mov
dec
mov
out
adc
pop
pop
repnz
mov
push
in
pop
cmp
xchg
push
jl
sub
fndisi(8087
out
pop
icebp
scas
mov
lea
vpsadbw
stos
cwtl
lods
sbb
or
dec
or
inc
jnp
mov
test
pop
or
jne
add
cmp
adc
ds
out
fadds
fs
dec
in
pusha
sub
xchg
inc
pop
xchg
mov
popf
enter
aaa
lods
mov
lods
mov
inc
sbb
or
enter
lcall
jg
in
push
movsb
in
xchg
sahf
ja
lds
pop
jp
cmp
cltd
xchg
out
sahf
out
pusha
stos
mov
rcl
cmp
lret
mov
push
inc
pop
in
pop
in
and
icebp
sbb
jecxz
lock
test
mov
jle,pn
popl
cld
mov
in
jbe
jo
in
scas
inc
mov
insb
in
clc
shl
stos
sbb
jle
add
mov
adc
clc
fidivrs
bound
lret
push
jge
xchg
push
sub
loopne
notw
int3
mulb
lods
test
cmp
adc
lret
push
adc
aaa
xor
jo
dec
ljmp
roll
dec
gs
xchg
cmovbe
pop
out
scas
sbb
fldl
xor
adc
xchg
movb
cli
jbe
or
out
inc
inc
or
fiadds
insl
sbb
jnp
sub
xchg
xchg
or
loop
cmp
out
inc
pushf
cwtl
in
mov
sub
xchg
rorl
mov
jle
pop
add
push
int3
and
fst
es
xchg
jecxz
inc
cmp
outsb
and
enter
cmc
movsl
mov
pop
hlt
adc
add
pop
sar
rclb
push
cmp
out
mov
and
or
out
je
pop
into
sub
test
test
inc
mov
ret
lods
jge
push
adc
jno
dec
push
std
xchg
into
xor
jns
imul
loopne
cmp
mov
mov
pop
out
xchg
das
push
sub
push
dec
sub
or
adc
nop
gs
sub
cli
loop
pop
popf
call
cmp
sub
test
enter
stos
pop
xchg
cli
mov
jns
xchg
scas
in
push
inc
pop
sbb
adc
clc
into
xchg
xchg
popl
mov
sbb
push
fdivl
cmp
popa
mov
mov
push
cltd
inc
adc
xchg
call
fsubrl
jae
enter
lock
call
shrl
jecxz
aaa
addr16
imul
push
inc
rcrb
std
bound
add
nop
adc
add
or
xchg
aaa
adc
pop
adc
adc
icebp
xor
adc
fs
sbb
lret
pop
iret
js
lods
inc
scas
out
sbbl
loope
xchg
addb
jne
nop
adc
iret
jge
pop
pop
jne
push
bound
and
add
out
loop
mov
in
pop
xchg
inc
or
fwait
xorl
cmc
xchg
daa
popf
add
push
push
mov
adc
ljmp
pop
jbe
fldt
cmp
mov
add
cmpsl
testl
cli
adc
icebp
dec
data16
insl
and
push
inc
ror
push
fsubrs
jg
sbb
aam
mov
xchg
push
outsl
outsl
pop
xchg
jae
xchg
fwait
adcb
cmp
inc
dec
dec
xchg
scas
inc
push
fnstenv
sbb
imulb
mov
mov
mov
inc
lret
das
fisubl
jae
scas
mov
jp
push
adcl
cmp
cmp
xlat
mov
test
loope
adc
cmc
into
addl
and
push
xchg
pusha
popl
test
mov
pusha
std
or
jne
mov
psubq
cmp
nop
out
mov
mov
loopne
sub
in
mov
mov
xchg
out
outsb
sar
daa
push
insb
in
test
in
ja
lret
mov
jmp
aad
cltd
add
cld
push
lods
mov
pop
decb
jl
scas
sub
mov
adc
pop
movsb
int3
dec
loop
fsincos
mov
mov
test
jge
shrl
add
sub
inc
add
int
mov
adc
or
add
mov
sub
lret
mov
mov
xchg
in
pop
cltd
inc
fwait
pop
out
int3
xchg
int
mov
sub
in
and
cmp
push
pusha
sub
adc
jg
paddb
jne
xor
aas
dec
cmpb
mov
out
std
imul
or
rorl
leave
sub
clc
push
lea
out
cmpsl
push
mov
mov
push
cmp
sti
pop
test
or
rcl
sbb
test
pop
ds
ret
insb
loop,pn
pop
insl
fdivrl
and
movsl
xchg
sub
jecxz
clc
pop
pop
fistps
movsb
lahf
orl
push
mov
push
xor
inc
mov
fucomp
loope
cmpsl
icebp
mov
mov
dec
lea
dec
pop
inc
fdivs
js
mov
sbb
sub
jg
cltd
rol
dec
inc
cltd
into
ja
mov
cmpsl
xor
pop
aaa
lcall
rol
pop
sub
or
in
enter
xor
xchg
pop
out
jns
gs
xorb
mov
push
pop
and
test
mov
movsb
movsb
add
je
lahf
dec
ss
mov
jns
test
clc
lock
dec
or
add
sub
fdivrl
scas
lods
xlat
cmp
mov
sbbb
mov
pop
and
adc
pop
out
dec
and
dec
jp
jle
fsubs
lret
sahf
sbb
push
mov
js
mov
test
adc
push
adc
into
add
mov
iret
je
cmp
mul
mov
mov
push
xchg
dec
std
arpl
adc
xor
sbb
add
and
cltd
into
mov
xlat
mov
xor
mov
xor
nop
clc
mov
and
andb
jg
iret
or
sarl
and
pop
inc
fcmovbe
fisubl
jb
xchg
dec
adc
pop
inc
clc
in
xor
das
mov
jge
ljmp
mov
scas
les
push
sub
xor
mov
mov
mov
sub
mov
lret
lcall
mov
outsb
testl
and
adc
scas
mov
adc
sbb
rcl
xor
dec
loopne
jl
fdivrl
popf
add
mov
stc
add
repnz
pop
iret
fsubl
mov
sar
faddl
test
adc
jmp
pushf
or
cmc
mov
mov
pop
icebp
jb
jg
xorb
imull
sub
mov
popf
iret
out
adc
ds
sbb
rcrb
push
mov
test
sahf
sbb
push
jb
movl
add
loopne
mov
sbb
inc
jge
mov
sub
lcall
outsl
pusha
jae
into
add
adc
test
shrl
das
add
rorb
adc
mov
dec
cmp
mov
xchg
xchg
stos
inc
ficoms
dec
jbe
or
jns
pop
fcoms
outsb
lret
leave
incb
ffreep
push
mov
rorl
pop
testl
pminsw
jp
scas
cmp
out
push
sub
aam
pop
inc
shl
or
mov
mov
mulb
std
loop
add
pop
adc
mov
icebp
pop
mov
scas
pop
push
jmp
aad
loope
in
xor
sbb
mov
pop
lock
xchg
jp
push
aaa
pop
mov
or
movsb
daa
bound
or
ds
xchg
add
outsl
fsubr
dec
inc
mov
jne
or
cwtl
or
cmp
or
cld
shr
imul
xchg
cmc
mov
scas
add
jns
cwtl
mov
in
add
mov
es
ret
cmp
sub
dec
adc
rorb
cmc
lcall
cmp
cmp
jne
cltd
popa
pusha
addr16
movsl
xchg
push
mov
xchg
mov
cmp
dec
mov
mov
xlat
cmpsl
sub
test
int
js
mov
sub
ds
shll
cli
dec
xchg
sub
adc
push
ret
cmp
or
mov
pop
push
insb
ret
mulb
sbb
lods
inc
mov
outsb
xchg
mov
xchg
xchg
xor
sub
inc
loope
sub
cli
loopne
lret
stos
dec
in
fs
mov
and
jmp
fs
push
test
xchg
movsl
movsl
cmpsl
mov
add
arpl
addr16
sbb
lret
inc
cli
mov
jecxz
mov
dec
sbb
sbb
aaa
js
pop
or
jne
or
nop
push
push
stc
mov
or
push
jle
sbb
fcomps
sbb
rcrl
test
inc
in
and
adc
jmp
fucomp
shlb
ret
js
mov
repz
xor
or
xor
cmp
mov
or
call
mov
sub
in
aaa
pop
sub
fmulp
nop
push
leave
jge
mov
pop
out
push
xor
mov
sub
xchg
cld
dec
adc
jo
es
mov
lahf
pop
pushf
adc
mov
stos
outsl
popf
add
dec
mov
jb
in
dec
jne
xor
inc
aaa
cmp
xlat
insb
scas
out
scas
pop
scas
cmp
pop
mov
mov
jle
inc
xor
inc
mov
and
fs
mov
xor
insb
out
xchg
mov
testl
mov
fs
xor
push
sub
dec
mov
inc
xor
aam
lea
inc
sbb
push
inc
mov
push
inc
xor
jmp
inc
mov
cmp
dec
out
fstl
push
push
cmp
icebp
divl
or
fsubrp
xchg
lock
stos
add
test
sub
sbb
fidivrs
popa
add
mov
and
add
cmp
fwait
loop
nop
adc
cltd
push
stc
jo
andb
dec
sub
cmpsl
sub
cli
push
loop
inc
bound
imul
and
cmp
jle
mov
fcoml
inc
pop
stos
fsubs
call
fnstcw
data16
sbb
adc
cmp
push
call
insb
icebp
xchg
mov
icebp
movsb
repnz
dec
outsw
mov
push
cmp
repz
lea
adc
test
inc
stos
dec
dec
test
mov
ja
jo
daa
insl
or
push
mov
cmp
xor
adc
or
mov
repz
pushf
arpl
ja
jecxz
xchg
outsb
mov
xchg
repz
sti
lsl
outsl
imul
inc
mov
test
js
mov
cld
jb
push
add
and
adc
std
stos
aam
cltd
call
mov
xor
test
cmp
mov
add
adc
fimull
push
lret
mov
fmul
mov
shrl
xchg
jns
cmp
loope
ficompl
mov
and
out
or
dec
and
mov
test
pushf
dec
jmp
les
test
ret
sbb
mov
pop
rorb
xor
and
inc
or
outsl
sub
mov
pusha
mov
xlat
jns
sub
cmpsb
xchg
insl
mov
sahf
jnp
mull
pop
in
imul
ja
adc
clc
mov
mov
push
jp
call
mov
dec
xchg
dec
mov
incl
outsb
rorl
into
jns
pop
sbbl
hlt
sbb
mov
adc
pop
jle
add
in
push
in
mov
mov
cmovne
jl
jns
int
imul
mov
cli
add
stos
xchg
and
cld
dec
dec
sbb
cs
pop
icebp
push
mov
adc
pop
dec
and
xor
mov
and
hlt
push
ss
jle
xchg
push
mov
pop
ja
mov
cwtl
pop
aas
lret
dec
pop
sbb
popa
sti
cmp
fistpll
sbb
loop
xchg
mov
call
aaa
xor
hlt
int
dec
inc
and
sub
dec
push
ret
sarl
scas
arpl
test
ret
xor
aaa
add
adc
aam
popf
dec
addr16
xchg
ds
adc
xor
xor
jne
das
sub
imul
cmp
jns
call
icebp
mov
aad
psubsw
outsb
orb
sbb
movl
orl
push
lods
push
mov
iret
add
dec
mov
fsubl
or
negb
dec
rcl
call
aam
imul
jns
sub
jae
mov
cmpsb
lods
movsl
in
mov
dec
xchg
and
shlb
shufps
pop
ret
insb
inc
cmp
mov
arpl
mov
pop
xchg
cli
sarb
jns
jno
inc
loop
push
testb
int3
iret
outsb
cmp
loop
imul
lret
cwtl
adc
hlt
xor
xor
xor
cmpsb
sbb
loop
sbb
xchg
lret
bound
xor
stos
movsl
jb
lcall
lret
dec
jmp
sti
xchg
in
and
imul
or
enter
dec
shrb
cmpsl
jl
stos
aaa
sbb
test
lret
sbb
outsb
pushf
sahf
gs
ret
out
push
mov
mov
cmp
xchg
xor
mov
add
cmp
sub
or
push
das
inc
xor
push
es
in
inc
inc
sbb
cmp
pop
insb
pop
mov
sti
clc
inc
xor
sbb
call
sbb
or
mov
std
mov
imul
add
ja
stos
pop
cmp
lret
rcl
aaa
adc
ss
pop
lcall
outsb
push
adc
stc
ret
push
iret
or
cmp
aad
xlat
push
arpl
ficompl
sub
insb
push
mov
sbb
and
push
xchg
les
lods
ret
in
push
xor
clc
adc
add
sub
insb
cmp
cmpsl
pusha
cmpsl
loopne
mov
or
fcmovbe
mov
pop
push
xor
xchg
jne
mov
and
out
pop
push
pop
mov
mov
inc
data16
pop
ljmp
imul
in
pop
mov
imul
xor
cld
push
aas
or
mulps
int
adc
or
notb
mov
sbb
push
dec
or
cli
jge
inc
ss
mov
cmp
xchg
scas
jne
jo
mov
sbb
stos
aad
cs
adc
dec
add
scas
insl
decl
push
mov
adc
fiadds
jmp
pop
push
sub
mov
cwtl
and
adc
jns
mov
in
sahf
mov
mov
xchg
xchg
fldlg2
and
in
inc
psllw
ds
jecxz
xchg
mov
gs
fwait
in
cmp
jg
lahf
in
imul
push
mov
int
in
imul
mov
add
sub
sub
xor
mov
inc
mov
scas
sub
push
dec
mov
jno,pt
jbe
sub
dec
dec
adc
cld
xchg
push
js
loope
adc
repnz
push
shll
pop
mov
aaa
cmp
sbb
imul
pop
mov
pop
mov
mov
mov
xchg
stc
fdivl
dec
dec
notl
in
lahf
and
and
fs
insb
addb
push
outsl
shrb
in
cmpsb
mov
cmp
xor
movsb
sub
std
ss
lret
adc
rorb
jbe
mov
xchg
in
lds
imull
fidivrs
pop
outsl
mov
les
std
loopne
mov
adc
inc
mov
jb
sub
lods
pop
dec
push
cmpsb
push
stc
in
add
fbstp
dec
leave
xchg
pop
xchg
jle
ljmp
je
movsb
fadds
dec
out
ret
mov
dec
lods
xchg
or
mov
mov
lcall
loop
adc
xor
inc
imul
imull
negb
add
xlat
xchg
or
push
fisubl
or
popa
sahf
add
rorl
loope
pop
sub
xor
cs
jecxz
lds
mov
mov
js
mov
es
jl
dec
stos
repz
mov
push
pop
mov
es
lods
add
imul
pop
add
jmp
stos
test
push
pop
stos
mov
imul
push
pop
jo
out
inc
add
pop
xor
inc
jp
jle
dec
xor
out
pop
inc
push
les
xchg
jne
adc
sub
dec
push
int3
fidivrl
and
icebp
jne
push
sahf
sbb
add
push
xor
sub
popa
imulb
loop
mov
nop
aaa
pop
mov
cltd
sti
hlt
das
lcall
loopne
stc
mov
cmpb
ret
xchg
nop
in
in
inc
push
jo
push
mov
jmp
mov
xchg
cmp
push
push
or
push
inc
jg
std
lahf
repz
pushf
movsl
jge
lahf
cmp
pop
or
inc
dec
inc
fldz
and
fbstp
cltd
idivb
inc
or
xchg
mov
dec
or
lcall
aad
insl
scas
outsl
clc
fst
dec
inc
fnstenv
popa
stos
lcall
lret
dec
and
subb
mov
mov
loop
jge
push
pop
sbb
xor
pop
pop
cmp
jl
scas
add
loopne
pop
mov
push
nop
add
mov
insb
adc
pop
jp
adc
stc
fisubrl
out
enter
jp
or
cmpsb
enter
add
cmp
adc
pop
dec
enter
leave
or
addr16
pop
test
stos
shll
add
jmp
mov
pop
cld
test
sbb
arpl
pop
insb
test
push
test
out
in
pop
push
out
push
mov
mov
jg
mov
out
subb
aam
push
leave
lods
mov
jp
in
inc
cmc
and
std
sbb
ret
mov
adc
repnz
aam
shll
test
outsl
xchg
dec
jge
aam
mov
cltd
into
cmp
nop
scas
cmp
in
les
cmpsb
daa
in
popf
hlt
push
jg
or
mov
pop
pop
inc
lret
add
ja
xor
lcall
mov
ja
aas
or
adc
les
stc
xchg
aas
inc
xor
in
sub
addr16
and
push
ds
xor
xchg
adc
sahf
pop
xchg
inc
xor
inc
xchg
cmpsl
mov
xchg
pop
mov
faddl
lock
notb
mov
out
cwtl
jbe
das
sub
or
test
das
xchg
aas
notb
sub
xchg
rclb
leave
ljmp
jo
insl
pop
xchg
xor
pop
sbb
cld
bound
xor
nop
pop
lods
aam
rcrb
idivl
popf
ss
adc
fwait
and
cli
fwait
lret
out
inc
mov
jnp
push
outsl
or
mov
gs
into
inc
dec
inc
nop
sbb
std
lret
xchg
lock
xchg
es
and
insl
xchg
aam
sbb
ret
or
jle
fs
sub
cmp
jmp
mov
add
std
hlt
or
cmpsl
jnp
movsl
add
fsubrl
lcall
adc
orl
insb
outsl
or
sub
or
jg
or
mov
xor
mov
aas
aas
jo
mov
mov
lcall
in
out
sub
iret
scas
adc
les
popa
out
sub
jecxz
mov
sbb
mov
mov
push
xor
es
jle
push
adc
scas
enter
xor
aaa
add
push
leave
mov
fcmovnbe
add
loopne
cmp
in
clc
fs
push
pusha
jecxz
pusha
mov
cmc
pop
lcall
pop
stos
mov
and
dec
cmpb
pop
clc
jmp
cmp
sbb
aaa
cmpsb
mov
mov
in
inc
inc
adc
xor
les
pop
lcall
dec
push
nop
out
or
lret
cmpsb
jbe
xchg
push
jle
mov
notl
mov
rcrb
mov
popf
insb
insb
insl
mov
sub
pop
cmp
divb
aaa
cmp
mov
ret
xor
in
cwtl
shll
adc
cmc
popf
imul
imul
xchg
push
sbb
sar
es
imul
aam
lods
jb
push
out
fcmovnbe
push
mov
cmp
mov
mov
lea
dec
std
lods
jo
rcrl
lret
mov
incb
std
addr16
sbbb
adc
add
inc
push
push
sub
jecxz
inc
sbb
int
adc
shl
push
ljmp
rep
loope
mov
stos
lods
mov
jl
sbb
loope
loopne
pop
add
or
xchg
sub
int
or
sub
xor
popa
inc
dec
movsb
pop
pop
pop
std
mov
arpl
loope
mov
movsb
je
repnz
outsb
mov
add
insb
dec
in
std
adc
std
pop
jmp
imul
jb
xchg
vrcpps
cltd
ret
xor
iret
mov
aad
leave
sbb
stos
jne
sub
call
gs
aaa
mov
loop
xlat
mov
mov
cwtl
sarl
ja
gs
push
cmc
fwait
push
pop
in
xor
jge
jecxz
int3
push
mov
mov
mov
addr16
and
sbb
and
dec
jp
rorl
and
int3
hlt
mov
pop
cmp
mov
pusha
adc
ljmp
ret
or
push
adc
sahf
sbb
xchg
inc
dec
jge
fwait
push
sub
jmp
sbb
imul
add
inc
leave
cs
in
jns
loopne
sub
and
xchg
insl
test
sahf
lea
lea
inc
adc
cld
lods
inc
add
stos
stos
or
or
test
lret
pop
xchg
mov
jl
lods
push
push
jo
popw
lock
sub
jg
push
sbb
jnp
sbb
mov
stc
push
mov
outsl
aaa
cmp
iret
or
imul
mov
call
pop
xor
mov
fcmovb
sbb
mov
push
popa
pop
mov
shl
mov
movsl
inc
xorl
cmpsl
outsb
mov
mov
adc
arpl
inc
inc
imul
cmp
or
ret
nop
in
dec
sbb
pop
adc
loope
or
mov
mov
lahf
lock
out
pop
sbbl
loopne
sbb
or
sarl
push
push
sbb
jnp
out
bound
out
lock
mov
adc
xor
xor
subb
dec
jne
movsb
movsb
outsb
ret
notb
adc
lods
ret
mov
inc
inc
mov
mov
ss
sub
mov
icebp
jg
cmp
lds
bswap
or
fwait
mov
sub
inc
call
stc
fistpl
lcall
xchg
inc
pushf
inc
mov
outsb
mov
lock
insl
popl
mov
adc
testb
cli
test
jnp
adc
cs
fs
add
or
push
frstor
add
inc
into
dec
pusha
out
sub
movsb
mov
repz
xor
sarl
fiadds
inc
inc
mov
les
fwait
add
dec
fisttpll
add
add
pop
stc
rorl
dec
sti
ljmp
es
xchg
mov
int3
mov
xlat
mov
aaa
sbb
jmp
inc
in
adc
sbb
pop
in
ret
ljmp
adc
je
push
cmc
lret
fdivr
cwtl
cltd
addr16
jnp
dec
out
add
or
cmp
cmp
xchg
mov
sub
cmp
cmpsb
lcall
imul
icebp
and
lods
cli
mov
imul
pop
xorb
mov
xor
addb
arpl
mov
fldpi
sub
imul
push
into
into
cmp
xor
adc
push
sbb
fldt
data16
and
xor
std
jge
mov
cmp
repnz
pop
push
pop
inc
push
shl
dec
and
sti
mov
push
mov
test
fwait
adc
aam
jb
push
outsl
xor
mov
mov
mov
fsubl
loope
cmovnp
out
mov
xchg
aam
mov
or
push
mov
xor
xchg
incb
icebp
lock
or
test
out
outsl
outsb
mov
outsb
rol
mov
subl
shlb
and
int
fincstp
ret
or
fimull
inc
push
shrl
sbb
pop
lea
add
and
nop
ror
jno
and
cwtl
ret
aam
xchg
fistpll
dec
push
ds
xor
push
mov
sub
jge
and
adc
shll
jns
dec
dec
pop
shrl
lods
mov
aad
inc
pop
dec
clc
pop
pop
andnps
fadds
pop
xchg
push
mov
leave
mov
adc
cld
xor
ljmp
imul
mov
fimull
mov
sbb
fwait
icebp
adc
push
lock
pop
aas
push
imul
outsl
loope
xor
cmp
mov
movsl
insl
mov
push
cli
dec
sub
adc
or
lods
js
sbb
leave
sbb
test
and
xchg
mov
mov
popf
add
mov
jmp
xor
xor
xor
xor
lds
imul
push
mov
mov
movsb
dec
dec
jmp
xchg
cmc
push
adc
out
dec
mov
clc
fidivs
cmpsl
mov
gs
adc
mov
rcll
sbb
sub
mov
adc
fcompl
xchg
out
out
inc
mov
and
inc
and
repz
mov
sti
mov
dec
in
and
adc
adc
ficoml
mov
and
pop
ficompl
in
xchg
xor
sbb
test
inc
cli
in
cs
sahf
stc
jle
mov
xchg
mov
in
hlt
push
fucom
xor
jo
jge
cmpsb
or
push
jmp
push
aam
jae
pushf
mov
xor
cmp
mov
mov
pop
flds
dec
sub
xchg
cmp
push
inc
mov
xor
xor
aam
xchg
in
inc
imul
xchg
nop
sbb
cwtl
andb
and
mov
xor
jo
push
add
outsb
out
sahf
std
inc
push
fisubrs
cs
and
mov
adc
icebp
xor
leave
add
add
sbb
fdivs
out
add
jl
cwtl
inc
call
cmp
nop
mov
mov
xor
dec
jmp
xchg
xchg
sbb
in
push
mov
jmp
dec
fs
xlat
xchg
cmp
mov
jle
orb
mull
imul
outsb
mov
jge
shl
cmp
lods
mov
push
lahf
xchg
test
movsb
sbb
out
fwait
mov
mov
add
ja
addr16
adc
jbe
std
and
mov
stos
adc
sbb
sub
cmpsb
pop
add
pop
mov
mov
mov
stos
sbb
loope
out
mov
or
sti
mov
jb
sar
lods
pop
call
fsubl
adc
cs
push
mov
push
or
mov
mul
inc
cmc
add
notb
xchg
repz
and
xchg
mov
or
mov
aad
in
enter
pop
inc
push
sub
fcomps
out
xchg
stc
add
data16
je
xchg
mov
jg
je
clc
push
call
out
lcall
jo
ret
cli
iret
xor
mov
adc
or
fs
mov
add
and
fcomps
aaa
ret
jg
add
jecxz
jle
sub
add
stc
test
pusha
adc
pop
xor
and
xchg
fisubl
cmp
ret
push
rcr
sahf
data16
imul
rcrl
push
dec
rcrb
push
sahf
pop
or
add
mov
inc
and
inc
sub
xor
jecxz
sbb
push
xchg
mov
and
cmp
lea
nop
rol
xchg
or
pop
pop
and
jmp
test
xchg
mov
mov
add
out
out
or
rorl
shlb
adc
inc
clc
sti
mov
adc
decb
add
xchg
push
and
mov
js
fsubrs
mov
fs
int
in
dec
add
pop
out
repz
pop
call
std
xor
jno
add
mov
clc
pop
inc
pop
cmpsl
vmovshdup
dec
jno
and
push
stc
cmp
cwtl
inc
mov
push
and
mov
sub
enter
inc
cmp
mov
jo
mov
insl
and
mov
or
daa
add
xlat
pop
ffreep
or
daa
sub
add
inc
mov
jecxz
out
cmpsb
test
push
pop
repz
cli
and
ret
testb
bound
push
stos
cmpl
cmc
insl
aad
pushf
fsubrs
loope
xchg
push
push
in
fwait
pop
sbb
in
sub
rolb
aad
jmp
out
add
outsb
lock
push
adc
aaa
jb
xchg
repnz
repnz
insb
mulb
aad
test
fwait
imul
jne
and
adc
sbb
pop
imul
and
std
mov
jne
ja
and
nop
pop
loopne
xchg
lret
stos
or
icebp
stos
and
testl
xor
fimull
jae
push
pop
mov
sti
jp
cmp
ja
xor
add
pop
addr16
xor
jge
pushf
xchg
pusha
sub
push
adc
fdivp
dec
jns
xchg
lods
shll
pop
arpl
addr16
clc
jns
mov
aas
aad
leave
movl
add
frstor
fs
cmp
sbb
cwtl
orl
cmp
dec
insb
rcl
cmp
xchg
xor
icebp
xor
pop
into
push
rcrl
mov
repnz
xor
adc
pop
xor
push
mov
fwait
mov
jg
insb
mov
sbb
jmp
cmpsl
out
adc
cmp
xchg
rcrl
pop
mov
push
fisttps
test
cmpsl
xchg
pop
test
sbb
mov
test
sub
sahf
sahf
or
fimull
std
stos
pushf
or
add
ficomps
push
pop
pop
cmc
jbe
inc
shlb
ja
xchg
daa
push
and
imul
and
add
push
add
dec
sbb
xchg
mov
adc
mov
sbb
sub
push
jbe
cld
je
dec
call
push
xchg
int3
loop
xor
lods
and
mov
out
aaa
out
cmp
imul
push
push
fwait
xor
movsl
pop
pop
adc
mov
icebp
shrl
repnz
shlb
xor
test
fdivl
or
xchg
jb
xor
cli
adc
lret
mov
fwait
mov
popf
xchg
jno
mov
flds
pop
int
sub
lcall
cmc
out
mov
andb
cltd
mov
lock
cmp
out
sbb
push
cmc
xor
dec
dec
jg
cld
dec
or
int
lods
jne
xlat
inc
in
adc
pop
idivb
mov
cmp
in
cmp
xchg
aad
pop
ret
shrl
imul
jp
gs
sbb
push
mov
sbb
enter
jp
lahf
lea
cli
xor
popf
add
shrl
sbb
fsubrp
gs
cmc
add
sub
dec
pushf
scas
enter
hlt
test
inc
dec
or
jmp
and
jno
arpl
pop
pop
sbb
jmp
fwait
repnz
and
ja
and
popa
enter
cmc
inc
jmp
mov
xor
int3
and
es
cltd
xchg
int
nop
rcr
imul
inc
shl
xlat
mov
xrelease
repz
into
dec
xchg
shll
or
fstps
add
pop
mov
jb
popf
fisubs
push
dec
ljmp
or
les
jmp
jne
flds
mov
fcmovu
lds
pop
mov
cmpl
enter
aas
icebp
das
xlat
fadd
repnz
out
into
testb
addr16
jecxz
int
andl
push
fsubrl
and
aaa
ficomps
shlb
xchg
or
cli
push
add
fcompl
pop
adc
inc
mov
bound
fcmovb
lods
lock
or
jb
in
cltd
jg
aas
jge
and
mov
lea
add
or
lret
clc
outsl
ljmp
mov
mov
and
fimull
stos
cmpsl
push
xchg
mov
dec
out
jnp
mov
xorl
shlb
push
mov
xchg
push
icebp
enter
adc
pushf
into
push
in
lret
imul
sbb
sbb
and
test
sub
push
cmp
popa
negb
or
scas
xor
aas
add
pusha
outsl
sub
mov
popa
addr16
mov
sub
in
mov
ret
mov
pop
sub
test
addr16
cli
inc
xor
data16
sub
daa
lret
mov
mov
mov
inc
sbb
fsubrp
arpl
daa
sbb
mov
xchg
adc
jmp
cltd
mov
ret
faddl
loopne
mov
dec
fcmovnbe
xchg
mov
fs
insl
lahf
push
pop
sbb
fisubrs
and
cwtl
popa
ror
int
push
or
shr
jp
jns
int3
ret
mov
jmp
and
shlb
adc
sqrtps
sub
fistl
rcl
jl
mov
or
lfs
xchg
fisttps
xor
or
xchg
pop
sarl
pop
xchg
fdivl
mov
mov
adcl
cli
in
mov
inc
mov
sti
loope
and
xor
test
popf
push
fdivrs
stos
sub
xchg
mov
std
fwait
loope
inc
xor
mov
rcl
fcmovbe
stos
xor
mov
dec
pop
inc
mov
in
ret
in
ffree
fisubs
decl
mov
test
test
cli
push
outsl
jbe
add
xchg
inc
xchg
add
adc
shlb
ret
push
mov
sbb
cli
into
nop
inc
adc
jge
outsb
fldt
or
leave
call
xor
cmp
rolb
mov
fwait
cli
sarl
xchg
fs
cmpl
pop
cmpsb
mov
lret
adc
stos
hlt
cmpsb
jnp
adcl
xchg
ljmp
sahf
aas
bswap
aad
xor
mov
jo
aam
sti
mull
bound
fcmovnb
pop
jmp
ja
sahf
inc
ss
ljmp
std
ss
mov
bound
inc
dec
cmpsl
ret
xor
repz
cltd
lea
jb
pop
outsl
pop
xchg
push
add
sub
sbb
jno
aaa
popa
mov
adc
mov
xchg
sub
mov
stos
cs
aaa
in
or
aad
mov
mov
pop
cmp
addb
or
cmp
jb
or
push
jo
add
arpl
mov
cli
jb
ja
xor
stos
sub
xor
ljmp
popf
and
fldl
movq
and
jl
push
mov
xchg
in
and
or
fwait
dec
roll
into
stos
sub
cmpsb
je
xchg
or
mov
mov
stc
sti
push
mov
cmpsb
rcrl
inc
popl
or
mov
loope
insl
and
lcall
jp
fbld
sahf
fstpl
fadds
and
pop
js
jno
test
movsl
mov
mov
mov
jb
loope
or
stos
mov
and
test
sbb
cmp
push
mov
dec
lcall
cmpsb
in
pop
ret
sub
es
mov
addr16
sarb
jbe
inc
xchg
gs
in
pop
and
mov
or
loope
cmp
out
push
je
fimull
inc
negb
imul
dec
pop
push
scas
dec
jge
dec
jno
mov
push
jne
jp
mov
fdivs
stos
jge
jle
jmp
int3
or
arpl
loop
xchg
mov
add
insl
pop
jbe
pop
inc
ss
xlat
sbb
add
fildl
add
pushf
add
scas
stos
ret
mov
mov
jmp
dec
or
hlt
xor
rorl
das
sbb
jl
or
mov
scas
and
outsl
jmp
xchg
call
jbe
mov
fmuls
aam
rorb
test
hlt
ljmp
fcomps
jle
stc
mov
lcall
enter
mov
aas
sub
aam
mov
cld
push
mov
mov
insl
fs
dec
fstps
js
mov
in
into
inc
ret
jne
pusha
dec
push
outsl
leave
into
pop
mov
mov
mov
fnclex
negl
mov
or
in
lds
xchg
sub
mov
sahf
in
aas
jl
jmp
sbb
xchg
push
mov
daa
iret
fcmovne
jp
sahf
sbbb
pop
cmp
jg
ds
mov
das
inc
add
in
adc
push
lahf
cmp
jb
cmp
out
push
dec
sbbb
xchg
popa
cmp
stos
stos
and
add
and
flds
push
xor
or
jle
mov
rol
mov
inc
xchg
mov
rorb
dec
data16
xchg
fistps
out
push
fstpt
pusha
iret
push
fs
add
pop
inc
mov
mov
jae
mov
in
stos
pop
lret
popa
insb
mov
mov
xchg
lret
ljmp
mov
cli
inc
mov
add
jge
ret
adc
fwait
adc
lret
addb
imul
pop
pop
inc
insb
in
imul
xchg
jecxz
xor
outsl
iret
test
lcall
jae
pop
pop
out
xchg
adc
mov
dec
aad
ret
or
xchg
fistps
and
xchg
add
jge
jns
jp
dec
hlt
adc
push
repz
inc
jmp
mov
xchg
pop
aaa
jno
stos
in
movsb
fst
scas
pop
xchg
enter
xchg
jle
mov
pop
xchg
hlt
ret
adcl
push
repnz
xor
jnp
mov
in
xor
and
mov
pop
sbb
mov
cs
pop
push
xchg
out
xchg
mov
loope
push
adc
cltd
jecxz
movsl
push
lcall
inc
imul
push
sub
mov
shl
lds
xor
pop
cs
aas
rorb
dec
out
imul
push
jmp
pushf
in
addr16
xchg
dec
push
lods
in
in
dec
dec
xchg
cmp
ljmp
js
cmp
or
mov
aas
mov
in
dec
je
and
mov
js
push
jl
xor
mov
ljmp
imul
dec
pop
jmp
and
push
jge
shlb
jecxz
inc
sbb
pop
pop
daa
fimuls
inc
and
sub
mov
pop
shl
mov
in
scas
loop
lock
dec
jle
mov
xlat
test
push
add
sub
cmpsb
sti
rcll
call
arpl
dec
pop
mov
add
jne
xlat
cmpsb
mov
dec
xchg
outsb
jmp
inc
popf
test
ret
jge
lcall
aaa
xchg
add
loop
jb
popa
xor
sub
pop
gs
lcall
fwait
std
test
test
and
ss
ret
movsb
sbb
loope
jae
mov
mov
jbe
insb
pop
xor
push
std
jnp
mov
mov
mov
push
dec
decl
seta
mov
fcmovnbe
movaps
rol
ss
notl
or
stc
daa
mov
mov
xchg
in
fs
out
daa
insb
outsb
nop
nop
js
pop
outsl
fmul
cmp
ja
push
jne
lds
jmp
jae
add
push
sbbl
scas
data16
add
xchg
lahf
in
mov
lret
lahf
sub
or
jmp
ja
jl
and
adc
cwtl
add
loopne
push
push
arpl
sbb
mov
popf
sbb
movsl
lods
insl
dec
jae
inc
pop
mov
inc
int
shlb
jp
cmp
scas
xchg
aaa
sbb
aad
ror
pushl
pop
js
rolb
orb
jmp
dec
loopne
aaa
add
push
popa
fbld
xchg
pop
clc
fiaddl
xchg
push
mov
popa
jl
sbb
sub
mov
test
pushf
shlb
insb
pop
sbb
fwait
jmp
mov
scas
shrb
xchg
aam
jo
sti
cmpl
addr16
icebp
loope
loopne
cwtl
or
popf
push
adc
lods
in
xor
and
push
dec
or
lods
rolb
bswap
movsl
jne
jmp
sarb
cs
xor
xor
call
push
sbb
icebp
outsl
push
js
cmp
out
lock
sub
testl
andb
imul
xchg
push
shl
es
adc
add
adc
cmp
and
dec
adc
add
sti
sub
data16
jmp
mov
cmpsb
sahf
dec
shlb
in
pop
mov
ret
mov
xlat
push
and
jmp
in
lea
pop
push
push
cmp
les
addr16
push
inc
mov
in
fs
jle
sub
and
lock
cmp
movsl
or
or
out
mov
pop
repnz
neg
test
jo
out
lea
shlb
andl
test
call
shl
inc
fadd
shl
mov
push
test
dec
mov
pop
lcall
iret
or
adc
push
fidivrl
aaa
lock
sub
movsb
push
mov
clc
aam
sub
loopne
jb
iret
cltd
mov
fildll
xor
fildll
aaa
jmp
aas
mov
inc
ret
sub
stos
insb
fdivrl
lock
jle
sub
xor
cmpsl
jl
inc
push
lock
push
addr16
and
jnp
fs
lods
mov
mov
mov
push
adc
sbb
fimull
pop
enter
sub
mov
loopne
lret
or
mov
dec
js
adc
jae
imul
dec
inc
daa
lods
test
insl
lret
loopne
sub
or
xchg
add
sub
cmp
lods
or
pop
pusha
jecxz
fdivr
pop
inc
mov
clc
sahf
mov
cltd
scas
nop
dec
out
inc
push
and
fstps
sub
aad
aas
inc
adc
divl
in
cmp
scas
add
ss
mov
js
int
cmpsb
scas
xor
mov
and
mov
in
xor
cli
fcoms
loopne
sub
faddl
sub
movsb
gs
dec
fwait
mov
in
and
dec
dec
hlt
mov
or
cs
test
lods
inc
test
mov
pop
in
xor
xchg
out
lock
rcrb
or
pop
js
mov
jae
adc
and
or
xor
lret
mov
lcall
sbb
lcall
pop
jbe
lea
pushf
fstp
mov
inc
ss
inc
pop
in
sub
push
lds
push
mov
mov
out
or
inc
fistpl
xor
xlat
mov
inc
cmp
push
jmp
in
sub
and
stos
subb
scas
popf
aad
push
pusha
addb
sbb
adc
jae
jbe
inc
pushf
sub
push
or
or
inc
mov
insb
lock
inc
cld
jmp
jge
cltd
sbb
stos
pop
or
aaa
or
mov
outsl
pushf
add
push
xorb
adc
xor
imul
mov
fs
cmc
pop
lcall
int
fwait
lret
xor
movsbl
cmp
sbb
insb
and
and
mov
push
mov
movsl
jns
lret
stos
mov
push
add
arpl
xor
adcb
pop
mov
fistps
inc
jb
ja
test
mov
xorb
cwtl
fwait
jo
cld
inc
ljmp
xchg
cmp
dec
out
imul
push
mov
mov
adc
dec
movsl
js
lcall
cwtl
int3
mov
mov
push
jnp
fstl
xchg
test
imul
push
repz
jg
sub
push
stc
stos
jo
pop
add
sbb
push
push
pop
stc
jb
in
loop
push
aam
ror
lods
mov
gs
add
push
sbb
in
sub
jmp
enter
cmp
aad
fcmovnbe
stos
aaa
sub
sub
loopne
dec
repnz
js
rcrl
dec
push
sub
cld
and
pop
jl
inc
hlt
pop
imul
cltd
lahf
or
fs
adc
dec
movsb
xorb
mov
into
aam
mov
scas
push
pop
cmpsb
jae
pop
aaa
jg
jns
rcrl
or
jg
faddl
in
stc
aas
pop
imul
pop
mov
mov
lahf
int
cmpl
outsl
inc
call
fsubrs
data16
aad
cmp
mov
xchg
push
test
lcall
adc
adc
int3
sub
cs
shl
and
jnp
pop
adc
cwtl
cld
addr16
jne
pop
sbb
ret
int3
lahf
adc
cmp
cld
lea
mov
popf
jb
mov
out
push
or
xchg
int
call
cmp
outsl
inc
out
repz
or
cmp
cmp
cmp
hlt
inc
pop
arpl
mov
push
popa
and
lods
add
xchg
inc
jmp
mov
mov
jge
adc
test
jns
xchg
int
rorb
loop
fisubrl
or
loope
sti
stos
dec
stos
add
repnz
mov
fs
lret
sbb
mov
test
test
sbb
repz
jo
jle
int
and
fildl
stos
mov
dec
xor
push
sub
jl
pop
mov
sbb
inc
xchg
sub
mov
out
jp
test
mov
je
adc
cmp
movsb
sub
stos
dec
mov
push
sub
add
in
sub
inc
or
lods
sti
mov
dec
out
loopne
cmovnp
mov
xor
cli
std
and
fidivl
fs
mov
or
or
mov
lret
dec
or
aaa
test
xchg
gs
jge
scas
sbb
jg
mov
inc
mov
aas
rorb
mov
ret
xchg
mov
imul
xchg
in
insl
pusha
test
scas
push
int
jae
test
pop
sahf
outsl
pop
fsubr
gs
jbe
sbbl
or
sbb
loop
std
sbb
clc
pop
sbb
add
mov
rorl
pop
jge
jg
adc
movsb
and
fiadds
push
and
dec
push
mov
pop
and
std
sbb
pop
dec
sti
mov
mov
stos
dec
shl
pop
rcr
jp
push
sbb
cltd
out
ljmp
pushf
cli
sub
addr16
inc
xchg
jecxz
rclb
lock
pop
pop
in
mov
cli
inc
sbb
stos
data16
xor
out
cld
test
sahf
ret
mov
pusha
lea
mov
ss
mov
pop
clc
jle
xchg
cmp
lea
adc
rcrl
sbb
inc
or
rorl
and
das
into
inc
or
and
sub
mov
lods
aam
mov
inc
mov
je
mull
push
lea
in
push
or
jb
out
mov
pop
sbbb
xor
jb
xor
mov
pop
pop
xchg
std
sub
fstps
in
cmpsl
mov
pop
negl
jae
rorb
sbb
mov
into
and
test
mov
or
fldenv
jle
mov
and
in
push
mov
xchg
xor
dec
push
xchg
js
jne
push
cmp
pop
cmp
or
inc
adc
xchg
lds
daa
xchg
out
adc
jns
inc
rcll
jne
dec
test
sbb
call
mov
lods
dec
dec
imul
or
mov
shl
lock
jbe
xor
mov
sub
xchg
arpl
clc
mov
out
xor
cwtl
jbe
bound
leave
and
push
cwtl
cmp
int3
in
dec
mov
hlt
lahf
mov
in
in
imul
dec
sub
xchg
xchg
add
in
cltd
pop
mov
mov
sbb
lret
mov
push
aaa
mov
inc
cmp
cmp
pop
cmpsb
jne
rcll
sub
jbe
stc
fcoml
test
aam
jnp
cmpsb
or
mov
cmpb
pop
add
push
aas
cmpsl
or
out
adc
jnp
leave
mov
cltd
sbb
loop
fisttpll
ret
jmp
mov
push
lock
aam
dec
lea
pop
repnz
mov
inc
sbb
inc
mul
fmull
int
std
jbe
xchg
das
sub
mov
mov
xchg
sbb
mov
inc
or
iret
daa
cmp
xchg
mov
dec
lods
sub
outsl
fcmovbe
dec
inc
imul
daa
cld
dec
add
pop
push
insb
les
mov
loope
mov
loop
pop
mov
mov
mov
jmp
in
stos
stos
outsl
cld
sti
fs
daa
dec
loop
or
sti
and
scas
jne
mov
inc
pop
and
popf
pop
cmc
pop
mov
push
aam
popf
jg
cmp
ret
sbbl
fimull
pop
pcmpgtb
loop
in
pop
into
mov
jp
incb
adc
nop
mov
adc
mov
sbb
dec
and
sti
mov
std
sub
stos
dec
push
mov
mov
lods
cmp
pop
sub
xchg
sub
jns
test
mov
adc
or
out
incl
adc
dec
push
sub
in
mov
inc
arpl
flds
pushf
mov
cltd
inc
dec
pop
out
pop
add
sti
loop
pop
icebp
cltd
mov
cmp
scas
pop
lret
pushf
shl
shlb
stos
lds
or
xchg
cmp
ljmp
gs
adc
test
jnp
sahf
test
out
lods
mov
decb
mov
clc
pop
dec
inc
movsl
sub
nop
add
dec
and
mov
add
inc
add
pop
loope
adcl
pop
dec
ss
test
jl
mov
pushl
inc
mov
imul
mov
push
jmp
inc
pop
push
sbb
fs
mov
mov
push
xor
les
je
mov
in
xchg
add
dec
incb
add
shll
orb
xchg
pushf
push
pop
and
push
mov
cs
and
nop
xor
mov
dec
xor
sub
mov
je
insl
xor
mov
or
test
clc
lods
push
or
lret
push
add
add
roll
fsubl
sub
and
scas
pushf
mov
add
jae
push
idiv
cmp
jae
imul
aad
push
mov
insl
mov
aam
inc
mov
mov
xor
loop
jge
mov
lret
pop
dec
adcb
mov
into
in
adcb
rcrl
test
ficoms
push
push
scas
sbb
cmp
inc
cmpsl
xor
adcl
fstpl
mov
shl
add
lahf
mov
cld
loope
inc
adc
add
xor
jns
ljmp
push
or
sbb
lock
arpl
lret
hlt
stc
xor
inc
outsl
iret
mov
outsb
int3
mov
aam
pushl
insb
int3
pop
lahf
mov
in
push
jecxz
es
add
loope
dec
ret
loope
mov
insl
inc
outsl
push
push
and
xor
pop
lret
in
or
jo
push
push
insb
jbe
sbb
std
aas
sbb
and
xor
jb
movsl
pusha
inc
inc
fistl
in
fiadds
ret
xor
js
popf
or
push
lcall
xchg
enter
xchg
dec
cmpsb
inc
sbb
bound
dec
jmp
mov
or
push
in
cmp
les
mov
push
mov
mov
jb
jp
mov
daa
sahf
push
test
sbb
sbb
pop
dec
loop
mov
and
std
push
dec
insb
jo
fidivs
mov
imulb
cld
mov
xor
in
xor
call
gs
mov
in
lods
std
xor
cvtdq2ps
ret
movsb
pushl
fldcw
das
sub
imul
rcll
sub
mov
adc
xchg
inc
fisttpl
daa
xlat
push
out
add
insl
adc
pop
mov
idivl
sub
xlat
outsl
xchg
cmp
dec
fnsave
xchg
fcmovnb
mov
pop
cmp
shlb
dec
jecxz
add
out
push
jbe
outsl
gs
or
and
mov
sbbb
popa
into
xor
and
xor
add
popf
imul
test
adc
scas
iret
orl
mov
jmp
out
movsb
cmp
jle
mov
jg
inc
rcrb
xor
or
repz
sub
ljmp
mov
stos
fstpt
adc
adc
mov
or
push
cmp
jbe
std
push
in
mov
shll
lock
lcall
int
xchg
jo
sub
jbe
ret
mov
push
push
cmc
mov
mov
mov
cmp
jo
shrb
imul
std
lret
lods
mov
jo
cmp
fisubs
andb
js
andb
mov
cmp
jno
inc
jne
adc
inc
pop
test
jp
mov
enter
nop
cwtl
andb
shrb
add
and
insb
out
fbstp
push
std
inc
in
pop
aam
xchg
and
js
cmc
adc
cmpsb
pop
mov
in
imul
mov
movsb
pop
lock
repz
mov
and
int3
xchg
push
inc
xlat
aas
and
and
shll
icebp
pop
clc
mov
into
push
rorb
push
lods
ja
jo
or
or
jmp
lock
popf
testl
adc
inc
hlt
addr16
and
sub
push
cmp
mov
sub
cmp
pushf
and
push
xor
jnp
and
or
xchg
movsb
or
mov
cmp
xor
sub
mov
push
sarl
jns
inc
or
ja
inc
mov
fmuls
push
adc
lcall
pop
jle
lret
lods
jns
je
pop
mov
imul
icebp
scas
jnp
push
and
into
mov
sub
lds
push
shrl
cmpb
sbb
aaa
inc
out
xor
jmp
cmp
bound
fimull
mov
xor
insb
shll
es
js
dec
mov
lods
shr
adc
jecxz
sahf
pop
sbb
inc
xchg
or
movb
in
sbb
jp
xchg
and
js
outsl
sub
adc
sbb
jbe
dec
xor
sub
jne
or
outsl
jle
insb
adc
xchg
dec
ds
imul
mov
les
in
xchg
shl
jbe,pt
fwait
lcall
inc
mov
mov
lahf
mov
jb
xchg
xchg
inc
dec
jae
jmp
repz
into
cmp
repnz
inc
shl
outsl
mov
cld
dec
cmp
mov
xor
push
push
or
sub
shrb
je
outsb
pop
nop
lods
push
xchg
mov
cmp
fldl
andb
dec
or
add
inc
push
ss
cld
adc
sbb
mov
mov
cmp
movsb
sgdtl
or
inc
loope
pushf
push
xlat
fstpt
mov
mov
dec
iret
push
xor
xchg
dec
test
cmpsb
push
sub
les
pop
sub
add
adc
xchg
inc
pop
jge
lret
cmpsl
xor
xchg
pop
jbe
ret
insl
in
loop
sbb
xor
pushf
loopne
js
pushf
pop
pop
fwait
jne
xchg
aam
ds
push
xor
dec
adc
decb
inc
ss
inc
fldenv
mov
out
or
mov
les
imulb
xchg
lea
xor
mov
fsubrs
daa
cmpsb
xchg
in
push
sarl
jno
int
xchg
gs
in
mov
jg
adc
xchg
bound
xchg
aas
jp
sahf
in
lods
popa
push
dec
mov
out
or
mov
out
dec
jb
mov
imul
call
dec
push
add
mov
aam
xchg
les
mov
lea
mov
js
push
sahf
push
mov
subl
ret
inc
rcr
push
and
sbb
or
sub
data16
mov
jecxz
or
iret
xor
pop
pusha
pop
add
dec
faddl
in
push
pushf
cmp
popf
iret
in
adc
in
mov
adc
mov
push
adc
ss
jns
jecxz
out
xor
sub
dec
sub
int
jo
loope
movsl
lret
pop
adc
push
sbb
dec
jmp
and
inc
mov
xor
mov
dec
mov
sbb
pop
xchg
shl
pusha
mov
cld
mov
push
cltd
or
mov
cwtl
push
pop
push
ffree
mov
xchg
push
cltd
stos
mov
or
sbb
ja
aas
scas
sbb
fs
push
fs
xor
adc
add
mov
push
icebp
stos
push
lods
xchg
dec
mov
mov
dec
dec
cmpsb
inc
aaa
add
cltd
aaa
fstpt
mov
enter
data16
cli
dec
xlat
xor
mov
in
mov
out
xchg
lret
out
adc
inc
sti
dec
hlt
fwait
std
lret
fldl
or
test
jo
int3
mov
dec
mov
nop
pop
pusha
sub
lods
mov
xor
xchg
xchg
jle
dec
inc
iret
loope
std
loopne
dec
mov
mov
lea
push
mov
mov
add
leave
dec
cmc
fs
mov
outsl
ss
mov
shrl
repz
lock
jg
cld
lret
nop
in
js
fbld
cmp
popf
test
cwtl
in
mov
inc
fildll
pop
faddl
out
in
mov
dec
repz
and
dec
push
jge
popf
test
ror
aaa
jle
mov
push
push
data16
cld
push
call
jo
movsl
pusha
dec
into
mov
mov
sarb
adc
je
pop
push
fxsave
pop
jle
cli
xor
sahf
xchg
and
inc
cmp
inc
xlat
aad
adc
xchg
les
cmc
ficoms
mov
pop
inc
push
pop
cld
xor
sti
mov
lock
inc
add
ret
lret
ds
decl
pop
lock
mov
je
cmpsb
xchg
and
mov
scas
repz
lods
dec
cmc
mov
lret
push
inc
or
and
arpl
cmp
push
push
sbb
stos
insl
orl
out
sub
int3
mov
mov
aad
aas
ss
xor
pusha
cmp
lods
scas
shrl
sbb
bound
loopne
lock
int3
ror
lahf
push
adc
fwait
sub
cmp
and
ss
lcall
sbb
lahf
adc
jmp
xlat
and
loopne
mov
into
xchg
pop
ja
lcall
mov
adc
jl
pop
xchg
mov
and
xchg
aaa
mov
or
jmp
adc
loop
cmc
in
lock
movsl
pushf
in
adc
mov
sbb
andl
fcoms
decl
hlt
in
sub
xchg
mov
pushf
jge
xor
mov
je
inc
cmp
pushf
popa
cmpsb
add
adc
add
repz
mov
mov
or
xor
sbb
test
sub
hlt
add
mov
dec
int
sub
xchg
iret
int3
dec
sub
cmp
push
sub
xchg
lds
cmp
out
int
push
jne
aaa
leave
lods
mov
or
cmp
sub
test
fs
andb
fistpll
add
or
enter
lock
ficoms
mov
adc
push
add
outsl
in
scas
or
sbbb
jle
es
mov
repz
sbb
gs
add
add
cmc
dec
and
and
push
xorl
mov
xor
std
jl
fwait
cmp
dec
ds
mov
jl
inc
dec
push
xchg
js
mov
inc
lods
push
enter
and
in
cmp
insb
fsubs
cmp
stos
mov
xchg
add
sti
inc
mov
or
mov
mov
lret
mov
adc
push
mov
sbb
cmp
mov
push
or
inc
scas
loop
xchg
pushf
les
pop
mov
into
dec
jp
sbb
cli
lods
inc
xor
adc
or
xchg
pop
imul
add
mov
icebp
ror
xor
cmpsb
dec
pushf
dec
cmpsb
dec
mov
pop
adcb
in
sbb
dec
popa
es
sarb
mov
mov
jb
push
xor
sti
push
mov
inc
pop
int
sbb
arpl
inc
insb
sbb
adc
cmp
dec
pop
jmp
inc
pop
inc
sub
or
mov
clc
mov
fcoml
ja
test
fs
inc
push
rcrb
mov
push
cmpsb
addr16
sub
sub
pop
daa
pop
sub
call
dec
inc
pusha
stos
mov
or
xor
sbb
mov
in
cltd
xchg
jnp
repnz
and
mov
cmp
xchg
sbb
cmp
and
inc
cld
movsb
inc
pop
sbb
push
jb
push
test
leave
imul
imul
xor
mov
hlt
fstl
mov
mov
push
inc
cwtl
and
jle
mov
cmp
jmp
xlat
or
test
rol
pop
test
mov
sbb
lds
out
daa
xchg
add
insb
mov
xor
ret
cmp
adc
sti
out
je
mov
imul
add
xchg
push
jo
loop
dec
cwtl
push
shl
notb
test
sub
mov
xchg
xor
jge
inc
fcmovu
xchg
xorb
cmp
lods
xor
pusha
faddl
lods
or
in
jbe
mov
ret
mov
fisubs
int3
inc
inc
or
push
js
pop
add
jge
xlat
addb
xor
mov
popf
jg
shll
lret
fs
add
gs
mov
pop
imul
dec
frstor
fisubrl
jmp
jns
lods
insl
inc
sub
jle
push
mov
and
fistpll
cmp
outsl
bound
bound
mov
add
sahf
add
mov
adc
scas
aaa
mov
mov
cmp
pop
inc
call
pop
pop
es
shr
xchg
adc
adc
pop
or
imul
das
xor
sbb
or
orb
dec
jb
mov
ja
dec
cmc
jnp
dec
iret
fadd
in
jae
or
xchg
mov
icebp
pop
and
sub
xchg
inc
jb
ret
push
pop
outsl
xchg
or
mov
sub
jno
cmp
out
mov
fdivrs
or
jne
stc
leave
jbe
cs
std
andb
repnz
jns
cmpsl
push
mov
iret
push
repz
inc
sbb
testl
push
lret
pop
nop
sub
adcl
mov
inc
mov
stc
lock
and
sub
mov
enter
xlat
inc
nop
decl
cmpsb
cs
clc
dec
adc
je
mov
addr16
or
scas
cmp
or
lods
arpl
sub
cmp
adc
loope
cmpsl
mov
sbb
push
pusha
jb
imul
xor
add
aas
mov
mov
rorl
cmpsl
add
xorb
subb
or
adc
js
and
icebp
or
inc
dec
mov
add
jns
push
push
sub
repz
xchg
sub
cmpsl
mov
xchg
cmp
pop
mov
out
and
mov
loop
test
movsb
sub
sbb
mov
xor
test
pop
xchg
sbb
jp
es
std
mov
int3
add
push
sub
sbb
pop
dec
jmp
xchg
xor
xchg
push
insl
cwtl
adc
cmp
add
test
mov
cmp
mov
sbb
adc
cmp
pop
mov
jbe
out
adc
movsb
jmp
test
out
sub
cld
xor
fimuls
adc
into
sub
mov
bound
aam
ret
das
aas
addr16
repnz
push
pop
adc
mov
and
sub
pop
adc
adc
filds
popf
lret
repz
xchg
mov
adc
xor
cmp
add
cltd
out
jno
sbb
xchg
in
xor
out
jne
pop
icebp
lret
mov
jno
fsts
ss
sub
mov
cmp
and
pop
and
and
aad
jle
or
insl
jno
xor
sub
stc
lock
movsl
sbb
out
push
sub
fisttps
rclb
or
xor
pextrw
outsb
rcrb
xchg
xor
and
loop
sub
rolb
or
and
hlt
jnp
xor
and
sbb
or
pop
not
ss
lret
into
jmp
js
aam
adc
dec
push
jle
enter
cs
sbb
add
fsubrl
in
cld
sub
inc
pop
notb
in
push
addr16
int3
jnp
jbe
pop
iret
sbb
push
adc
xor
jns
lcall
push
pop
in
xor
cmp
sub
js
inc
dec
add
and
inc
inc
popf
mov
lds
psubsb
ljmp
in
dec
xchg
cmpsl
push
cwtl
int3
aad
fisubs
ljmp
popl
in
decl
mov
xor
jno
fadds
mov
stos
lds
fmull
xor
sub
or
mov
imul
icebp
mov
mov
ja
aaa
insb
lods
inc
jmp
nop
xchg
aam
push
jae
xor
cmp
xor
or
inc
mov
enter
outsb
xchg
adc
imul
cmpsl
xor
inc
push
sub
ds
andb
mov
stos
loopne
aas
jle
aaa
push
stos
xchg
mov
mov
xchg
rclb
inc
mov
xchg
loope
pusha
jge
popa
push
push
mov
push
ljmp
mov
aaa
idivb
mov
loopne
push
movsl
in
pop
popa
and
push
stc
ret
xchg
push
outsl
jle
mov
fisubl
xchg
mov
sub
out
push
fisttpll
jg
mov
sub
movsl
and
jp
pop
add
sub
sbb
in
fmuls
lret
clc
jmp
jns
stos
cmp
test
lcall
test
add
pusha
rcrb
and
mov
fnstenv
in
repz
popf
je
sub
cmp
fistps
sub
sub
inc
adcb
jl
loope
js
cmpsb
add
test
pop
xchg
cmc
loopne
sbb
xor
enter
jmp
mov
ja
subb
imul
stos
dec
mov
dec
mov
push
rcll
gs
cld
adc
mov
ret
sbb
pop
push
leave
dec
rcrb
dec
leave
in
xchg
and
and
mov
jbe
lods
jns
jae
jnp
ss
leave
and
pop
add
pop
mov
ljmp
adc
jo
bound
sbb
std
inc
inc
aam
sarl
jno
pop
arpl
adc
mov
jnp
jg
push
pop
cs
mul
jae
inc
test
jg
les
jge
inc
hlt
aad
add
test
xchg
pop
dec
mov
imul
mov
push
jne
add
call
pop
inc
fiadds
testb
addr16
pop
lcall
cmp
pop
lahf
fwait
sbb
adc
out
nop
xor
push
scas
aam
or
jl
ljmp
insl
pusha
sbb
pusha
call
les
sub
push
lcall
sbb
ret
in
cmpsb
arpl
hlt
js
cmc
lds
cmp
inc
and
mov
mov
sub
fidivl
mov
or
mov
mov
or
pop
adc
testl
les
rorb
mov
shlb
iret
into
enter
or
rorb
outsl
cmc
pop
mov
test
std
lret
pushf
ja
mov
and
jae
jns
clc
mov
pop
adc
es
loopne
popa
adc
mov
mov
lock
jns
int3
cmc
mov
gs
and
mov
pop
stos
xor
test
or
scas
jo
xor
cmp
ret
lret
rolb
cmp
out
xchg
mov
cmp
fldt
jp
dec
or
out
inc
aaa
sbb
repnz
push
loope
in
mov
inc
xchg
mov
mov
pop
test
ret
inc
xor
and
cmp
rcrl
xor
and
pushf
cmpsl
or
push
decb
pop
jne
arpl
hlt
xchg
dec
push
fs
loope
jg
daa
mov
sub
inc
xchg
and
fwait
adc
push
outsb
dec
push
inc
test
cmpsl
sbb
inc
in
das
cmc
testl
push
add
test
and
movsl
add
push
stos
icebp
cli
and
in
inc
shl
ret
outsl
jmp
or
dec
arpl
adcl
scas
xchg
adc
test
in
mov
adc
jnp
sub
data16
and
call
pop
xchg
pop
sub
repz
cmp
xchg
cwtl
sbb
fsubrl
cwtl
cmp
and
in
adc
push
xlat
pop
cmp
popf
aas
scas
stos
aaa
sar
mov
mov
lea
and
push
mov
mov
adc
sub
xlat
jne
jb
add
outsb
pop
lret
movsb
out
push
adc
cmp
cli
filds
aaa
cld
test
cli
fs
push
pop
xor
pop
xchg
sub
repnz
imul
push
inc
imulb
rclw
int3
aam
fsubrl
movl
adc
lret
lahf
cmp
loopne
xor
outsb
dec
lcall
mov
or
push
aaa
dec
adc
lret
mov
mov
out
pop
xor
cwtl
jmp
stc
xchg
daa
add
pop
pop
shr
lahf
sub
cmp
movsb
les
mov
test
or
mov
pop
movntps
add
or
es
imul
jl
mov
hlt
dec
decb
lcall
sbb
mov
xor
fwait
pop
push
dec
dec
cmp
pop
bound
fistpll
cltd
fisubrs
movsl
shll
xor
in
adc
and
push
mov
and
xor
push
or
pop
cwtl
adc
popa
add
pop
mov
les
mov
movl
out
mov
clc
push
or
popf
adc
bound
and
cmp
sub
sbb
inc
push
mov
mov
push
jg
and
ret
movsl
rcrb
icebp
mov
or
loopne
xchg
inc
lods
sbb
cltd
int3
shrl
cmpb
xchg
loope
pop
inc
mov
pop
dec
jne
push
adc
cmpsl
jmp
sahf
push
cmp
int3
xor
pop
adc
mov
pushf
dec
aad
leave
test
iret
mov
fstpl
inc
or
ss
or
daa
mov
cmc
and
in
pop
dec
in
push
pop
mov
in
adc
test
scas
or
insl
cmp
lods
stc
shl
stc
jo
pop
mov
and
notrack
push
xchg
movsb
sbb
nop
sub
push
loope
out
adc
arpl
dec
dec
and
enter
sub
mov
jge
out
mov
pop
adc
movsb
cmc
into
inc
jb
pop
mull
lea
pusha
xchg
pop
ret
push
clc
popa
mov
cmc
sub
jno
jle
lahf
pop
imul
xchg
cmp
mov
or
mov
xchg
push
dec
pushf
mov
jne
xor
insl
in
gs
hlt
push
ss
mov
aad
inc
pop
negl
stos
js
push
mov
scas
dec
xor
sbb
je
pop
pop
add
std
add
scas
pop
mov
clc
xor
push
push
push
fmuls
fs
jp
cmp
mov
outsl
dec
dec
cmp
mov
push
popa
mov
mov
mov
lock
mov
or
jns
xchg
stc
hlt
cmp
mov
jmp
add
xor
cld
aam
mov
pop
cmp
push
or
adc
test
sbb
imul
or
mov
test
cmp
je
jge
fucomi
js
mov
pop
jne
ret
lock
test
icebp
adc
out
in
enter
push
rcrb
fcom
cmp
imul
or
enter
and
dec
mov
lods
cltd
xchg
loope
stc
push
jnp
and
and
jne
sub
and
ds
repz
out
pop
std
das
ret
sti
push
push
pushf
xchg
or
ja
xor
or
andnps
int
cmp
inc
pop
test
fimull
adc
mov
imul
adc
mov
sub
fimuls
adc
pop
hlt
lret
cmp
inc
adc
inc
inc
adc
push
cld
loopne
mov
sub
fldenv
lret
sub
jne
fisubs
dec
xchg
fisubs
lods
xor
mov
mov
out
inc
add
sbb
paddb
icebp
iret
adc
mov
jecxz
add
jno
js
xor
and
xchg
push
movb
rcll
xchg
jo
das
sub
inc
xor
inc
stc
and
sub
or
pop
inc
in
pop
adc
mov
popf
sbb
mov
pop
stos
xchg
dec
mov
jl
jns
mov
inc
jecxz
fcmovnbe
jmp
imul
rol
inc
inc
add
or
daa
cmpsb
fldcw
cmc
lods
dec
dec
push
les
int
inc
mov
imul
xchg
sbb
sbb
in
adc
cmpl
jbe
jecxz
popf
daa
fwait
loopne
mov
ret
stc
xor
jmp
cli
jnp
adc
les
outsb
mov
jp
xor
xor
xchg
mov
sub
fdivrl
cmp
sbbb
rcrl
dec
lock
repnz
inc
inc
push
ljmp
adc
fsubs
sti
dec
push
gs
cli
cmc
xchg
int
inc
pop
mov
idiv
add
insl
jno
cmp
add
shrl
sti
xchg
mov
movsb
push
lea
dec
js
stos
adc
rclb
mov
in
outsb
cltd
cmpb
out
inc
frstor
popf
shlb
xor
lods
fldl
cmp
sahf
frstor
mov
iret
ret
xor
aas
popf
push
and
jbe
repnz
rcr
cwtl
dec
dec
jg
xchg
test
mov
in
dec
cmp
mov
sbb
cli
ja
js
jge
cmp
stc
lret
mov
add
adc
mov
jmp
sahf
sub
push
lret
cmp
adc
jg
jne
imull
xchg
sti
mov
test
push
sub
dec
test
mov
nop
sbb
mov
xor
lea
xchg
xor
mov
jbe
divl
mov
jg
aaa
or
lret
adc
jecxz
insl
arpl
jmp
cld
inc
mov
imul
and
arpl
and
xor
xchg
hlt
repnz
sbb
inc
cwtl
sarl
adc
in
rolb
mov
lods
adc
repnz
aad
xchg
aas
jnp
stos
inc
jge
pop
jle
ja
xlat
out
or
jge
cli
fisttpll
frstor
jecxz
in
inc
jne
add
stc
sbb
mov
cwtl
test
pop
sbb
and
es
fidivl
jp
sub
and
add
mov
in
int3
dec
cmp
es
xlat
push
imul
adcl
pop
dec
inc
xchg
mov
into
clc
dec
mov
push
push
adc
sbb
repz
jge
add
mov
out
or
mov
fists
fisubrs
lock
imul
pop
xor
fucom
xchg
fcmovb
clc
sbb
lea
cmp
ret
mov
out
cltd
aad
outsl
inc
jbe
das
scas
pop
aas
nop
test
push
lahf
idiv
push
in
xchg
cli
out
xchg
stos
pop
cmp
incl
xchg
ret
fldcw
les
lea
popf
and
js
mov
dec
cwtl
inc
lret
mov
movsb
or
repnz
sbbb
mov
in
mov
pusha
pop
mov
fnstcw
cmp
inc
mov
int3
push
push
or
sub
mov
loopne
ret
daa
lcall
cmp
lret
pusha
cmp
jno
daa
hlt
mov
push
lahf
cli
test
jno
enter
out
in
cltd
push
cld
adc
into
xor
gs
xchg
add
inc
sbb
jns
or
pop
xchg
cmp
and
into
fiadds
add
add
aad
fisttpl
hlt
jae
aaa
jno
pop
in
dec
out
push
pop
or
pop
loop
push
or
adc
nop
inc
pop
test
pushf
test
or
ljmp
pop
imul
mov
add
cmp
pusha
cwtl
std
sbb
pushl
mov
pop
cmpsb
dec
jecxz
adcb
in
int
sbb
xchg
fbld
add
push
inc
xchg
inc
out
push
adc
jnp
cmovnp
pop
test
adc
mov
loopne
iret
mov
push
js
mov
sub
test
mov
aam
cmp
lock
out
inc
xor
lcall
pusha
test
add
sub
int3
addr16
jmp
outsl
adc
or
and
mov
ss
jne
mov
adc
pop
or
jb
inc
jp
cmp
shrl
in
aas
pop
xchg
push
iret
out
inc
int3
jo
fwait
mov
adcb
into
sbb
jo
mov
int3
dec
lods
movsl
jmp
repnz
xchg
inc
mov
sbb
jl
pusha
sarl
aad
jno
add
lcall
js
enter
int
idivb
xor
dec
in
mov
popf
mov
ljmp
int
xchg
sbb
scas
insb
or
sub
test
nop
pop
push
mov
pop
imul
inc
adc
int
dec
add
jnp
ljmp
rclb
mov
jge
dec
in
add
xchg
sub
dec
pop
aam
cltd
gs
inc
push
cmp
lahf
test
stc
fsts
or
test
mov
into
adc
dec
ds
mov
daa
dec
sbb
lret
test
adc
imul
lcall
fucom
mov
push
roll
pop
jl
mov
jae
lret
xor
pop
adc
cs
xchg
xchg
movsl
dec
adc
repz
pop
jnp
outsb
adcl
inc
or
test
mov
lds
add
mov
and
add
ljmp
ss
sar
xchg
lret
ljmp
daa
rcrb
xchg
mov
hlt
test
mov
pop
push
dec
mov
sbb
push
ret
int
imul
int
pop
pop
js
cmp
dec
or
xlat
jp
cltd
out
mov
call
push
inc
adc
xorl
push
aas
out
pop
rolb
xchg
arpl
add
push
out
pop
fldt
mov
inc
or
inc
iret
xchg
mov
adc
in
and
pop
nop
sbb
dec
subb
fadd
cwtl
sub
mov
lcall
adc
mov
pop
cwtl
pop
sbb
mov
pushf
mov
pop
inc
jnp
pop
sbb
pushf
cmc
ja
push
sbbl
clc
subl
inc
cmp
fistpl
std
inc
cmp
add
hlt
out
repnz
or
stos
and
test
jns
ds
push
fnstcw
xor
xor
or
hlt
je
stos
nop
fdivs
pop
dec
scas
into
push
aaa
xor
push
pop
pop
cld
call
subb
fnsave
out
scas
ret
test
sbb
out
sti
push
mov
mov
pop
mov
repnz
cltd
outsb
shrl
outsb
add
movl
dec
dec
sub
mov
addl
sbb
push
test
inc
fcoml
xchg
xchg
sbb
cmp
shrb
aaa
punpckhdq
and
mov
cmp
add
dec
nop
xchg
cwtl
push
fwait
out
adc
ja
das
mov
lcall
mov
lock
sub
push
pop
inc
je
xchg
push
adcb
inc
mov
push
std
dec
insb
jbe
push
jne
sub
jne
push
fstpt
dec
in
lret
sti
repnz
dec
test
popf
or
lea
or
iret
test
std
lods
je
xchg
cmp
jp
sahf
cs
push
ds
je
sti
fistl
mov
dec
jnp
and
out
rcr
loopne
pushf
inc
mov
stos
mov
nop
aaa
mov
push
xor
jg
push
in
shlb
cmp
xchg
stos
add
sub
xchg
push
stc
in
add
loop
out
outsb
sub
cmp
jne
mov
dec
popf
jbe
hlt
sbb
dec
rol
sti
mov
adc
lret
cmp
adc
fsubrl
adc
sarb
call
and
in
pop
jecxz
sbb
jne
shll
bound
cltd
pop
fbstp
add
out
idivl
sarb
or
je
push
dec
xor
popl
mulb
jno
int3
enter
or
ficomps
rcll
shrb
and
ja
call
adcb
or
xchg
daa
xlat
add
or
sub
mov
cmpsl
mov
cmp
in
shlb
dec
rcrb
push
bound
cmp
cmc
inc
in
dec
repz
sbb
or
jl
fadds
fisttpl
test
push
pop
sub
into
cmp
in
fdivl
cli
xchg
jle
pop
xlat
in
dec
cmp
dec
sbb
cmp
pop
pop
cmp
jbe
xchg
or
repz
addr16
vpsubw
jge
dec
sbb
insl
push
xor
and
iret
mov
xor
pushf
inc
adc
push
add
mov
repz
sbb
adc
cmp
decl
add
pushf
mov
pushl
pushf
lea
call
jmp
pusha
pusha
stc
sub
call
add
add
bsf
cmp
push
rcl
xchg
mov
stc
movsbw
movsbl
not
sub
lahf
adc
mov
push
or
rcl
rcr
push
dec
or
bsf
push
rol
cmp
dec
xor
pushf
lahf
lea
pusha
mov
pushf
xchg
mov
mov
lea
lea
bswap
lea
jmp
stc
bt
not
cmp
sub
pushf
pushf
call
xchg
movsl
into
cmp
pop
push
subl
xchg
mov
mov
or
arpl
inc
push
sub
cmp
inc
xchg
scas
sbb
push
pop
push
in
shll
cwtl
lahf
cmp
loopne
sbb
add
jns
push
loopne
lcall
pop
sbb
bt
sub
push
pusha
lea
pushf
jmp
push
pusha
lea
push
lea
jmp
jmp
movl
movl
pushf
mov
pushf
lea
jmp
sbb
lds
sbb
daa
adc
or
outsb
dec
ret
dec
clc
jg
xlat
jg
fmul
add
sbb
sbbb
adc
enter
shrb
mov
xor
jae
js
out
lcall
int3
outsl
push
test
into
stc
pop
push
addr16
dec
jbe
dec
popf
xchg
cld
sbb
call
sti
mov
pushl
cmpsb
sti
cmp
and
inc
out
js
lret
ret
insl
fnstenv
fidivs
stos
jmp
lods
xor
pop
orl
leave
jge
cltd
and
push
and
test
lret
and
fwait
jae
jb
outsb
sbb
lock
movsl
and
mov
das
add
rcll
or
sbb
jnp
out
sub
jo
out
ss
push
test
scas
jg
inc
cmp
push
loop
movb
sub
outsl
hlt
jne
nop
lds
aas
insb
sbb
mov
stos
mov
icebp
repz
sbb
dec
dec
lea
ja
push
sub
shr
sub
add
xor
and
mov
mov
shl
shl
neg
mov
clc
clc
test
repnz
call
xor
mov
rcl
lea
pushl
shrd
mov
add
mov
xor
or
xchg
not
shld
shrd
xadd
mov
xchg
test
mov
rcl
mov
not
pushl
mov
adc
or
bts
adc
mov
shl
btr
bts
mov
jmp
es
pushl
cmp
imul
add
pop
jno
add
push
ret
pop
ret
insb
lods
lret
in
shr
mov
scas
imul
leave
shll
js
les
stc
push
xchg
adc
mov
sbb
or
inc
dec
mov
adc
push
mov
addr16
push
push
cli
mov
xor
cltd
add
mov
nop
and
push
mov
vpmaxub
inc
jb
pop
test
sbb
addr16
jbe
pop
push
scas
idivl
push
or
mov
lock
mov
cmp
adc
push
pop
shl
jbe
fwait
ret
fistl
pop
test
ja
push
and
fwait
rorl
movsl
arpl
sarl
inc
pop
adc
int3
rcrb
aas
mov
lret
mov
mov
into
lds
mov
addr16
lods
sti
imul
js
pop
ss
pop
out
inc
insl
sbb
es
adc
adc
mov
pop
cld
pusha
cmpsl
jo
arpl
je
inc
dec
xchg
pop
mov
sub
lcall
push
pop
pop
adc
and
adc
shlb
fs
lret
xchg
dec
adc
xor
push
mov
lods
adcl
das
jno
insl
sub
pop
dec
incb
inc
popa
pop
aas
arpl
mov
test
int3
cmp
mulb
mov
loope
dec
cmp
or
add
inc
outsb
fcmove
repz
adc
and
xor
dec
ds
das
xchg
shrb
pop
call
faddl
js
rcrb
xor
add
xchg
inc
test
cmc
push
ljmp
sbb
mov
lea
iret
jbe
and
in
dec
inc
lret
inc
gs
mov
xchg
jns
fists
iret
shll
lahf
lods
sub
inc
mov
jmp
ljmp
adcb
pop
jno
jle
jmp
lret
cltd
decl
pop
adc
subps
push
push
lcall
mov
sahf
push
scas
jns
mov
shr
mov
cmp
sbb
loope
ret
push
scas
or
insl
hlt
mov
mov
jae
ljmp
fisubrs
ja
mov
stos
sub
mov
stc
adc
cmpsl
push
test
xor
in
js
inc
push
and
cmp
addr16
push
out
cmp
xchg
sbb
fisubl
int
jo
cs
or
pop
add
clc
add
jo
movsl
and
mov
or
sbb
mov
movsl
in
sub
jb
lock
push
cmp
out
inc
push
scas
test
cmpsl
out
fldt
lahf
inc
rcr
and
cmp
cwtl
je
and
in
cltd
repz
xlat
ret
sarb
out
cli
repz
pop
out
std
test
pop
std
xor
cmp
jo
pop
xchg
ja
test
inc
xchg
xchg
sub
arpl
cld
frstor
ret
xchg
out
scas
xor
or
cmpsb
gs
loop
jmp
les
aas
xchg
inc
lahf
or
mov
imul
jnp
adc
cld
pop
dec
lock
pop
mov
movsb
in
xchg
std
xchg
xchg
jg
nop
pop
ret
xchg
or
rcrb
mov
mov
test
xchg
mov
daa
jl
mov
insl
jg
mov
outsb
scas
clc
mov
arpl
hlt
dec
out
incb
sub
add
loopne
aaa
cmp
jno
adc
sbb
and
loopne
xchg
push
xchg
pop
lods
lock
mov
and
cmc
mov
jmp
nop
push
cmpsb
lods
jbe
add
dec
sbb
jmp
imul
and
loopne
mov
aaa
jnp
inc
sub
popa
mov
sar
test
lods
xchg
cwtl
and
shlb
pop
iret
sbb
pop
out
nop
int3
cwtl
push
ja
xlat
mov
push
imul
xchg
rcrl
or
andl
jl
int
lcall
inc
and
addr16
bound
sbb
in
lahf
push
out
sbb
std
jg
pop
push
jle
add
icebp
and
inc
jl
sub
and
aad
cmp
sub
mov
in
mov
adc
lods
mov
movsl
cltd
mov
movsl
push
scas
sbb
leave
mov
lods
sbb
jo
mov
push
ds
adc
aam
and
mov
add
sbb
or
cwtl
jg
js
dec
sbb
or
mulb
dec
orl
push
stos
js
jo
imul
xchg
mov
lret
ss
repnz
dec
push
dec
adc
add
dec
sbbb
jb
inc
cli
jo
negb
je
sub
add
out
popf
mov
rorl
inc
adc
fsub
mov
ret
cmp
or
sti
xchg
mov
nop
add
aad
adc
decb
insb
add
cld
and
lret
cmc
mov
jbe
iret
mov
pop
add
clc
fs
leave
aad
out
pushf
imul
call
pusha
pushf
lea
call
pushf
call
push
sar
ret
aaa
sbb
stc
bound
xchg
pop
movsb
lods
push
add
xchg
and
stos
out
sbb
dec
pop
pop
enter
test
dec
adc
push
xor
xchg
fldt
dec
dec
es
rcll
ja
pop
in
aaa
daa
mov
xchg
add
xlat
push
sbb
fistps
hlt
sbb
cwtl
jmp
push
mov
jnp
jno
sub
es
repz
adc
repz
adc
push
inc
mov
fiaddl
rcrl
xchg
arpl
xchg
mov
loop
mov
ret
mov
mov
outsl
lods
fdivrs
push
jne
das
aad
fildl
mov
data16
fisubrs
adc
dec
fmull
cmp
mov
adc
pop
in
sub
pop
repz
test
psadbw
or
xchg
popf
dec
xor
nop
jl
mov
lock
cld
adc
shrb
outsl
add
jae
insl
or
outsb
add
and
mov
lcall
int3
push
decl
loopne
addb
mov
add
call
cld
adc
hlt
push
out
push
mov
orb
incl
test
mov
cmpl
inc
pop
mov
addb
push
lods
mov
imul
sbbb
push
add
aaa
mov
insl
addb
call
je
cmovae
outsb
andb
ljmp
mov
orb
xrelease
add
inc
dec
popa
repnz
subb
lcall
shrl
ljmp
dec
jb
push
cmpl
fildll
or
orb
imul
push
mov
addb
mov
adc
mov
push
jge
pop
repz
push
jmp
xor
push
push
in
movsb
loopne
add
add
or
push
push
inc
xor
sbbb
add
clc
push
mov
cmp
pop
inc
mov
dec
into
loopne
cmpb
fidivrs
sbb
or
outsl
add
sbb
cmpl
aas
pop
in
mov
sti
push
inc
mov
push
decl
std
pop
fistpll
outsl
cmpb
call
es
xor
ljmp
scas
clc
in
push
push
pop
xor
add
push
jno
lret
mov
ljmp
add
popf
push
cli
adc
addb
push
mov
dec
sbb
push
push
xor
add
lcall
jo
push
clc
push
cli
adc
sbb
in
idiv
jmp
fsubrs
subb
push
push
xor
xlat
push
cmpl
ja
push
jmp
push
insl
add
cmp
testl
and
hlt
pusha
push
mov
pusha
lea
jmp
push
lea
je
pushf
pusha
push
lea
jmp
mov
in
pop
lahf
jg
or
jge
or
jnp
lods
xchg
pop
and
sbb
jle
jmp
push
out
mov
neg
add
std
movsb
mov
jp
add
stos
loope
jne
xor
lock
adc
rorl
dec
jo
jmp
std
leave
fnstenv
mov
xor
jmp
into
push
rcr
arpl
loope
or
loopne
push
ret
lock
imul
sbb
cld
push
mov
mov
pushf
pushl
ret
loop
and
mov
leave
movl
ja
fldenv
int3
xor
xor
pop
xchg
sub
es
or
xchg
xadd
cmp
jl
pop
in
lock
dec
in
les
ficomps
call
sbb
mov
cs
imul
dec
insb
repnz
lahf
repnz
mov
push
leave
pop
adc
mov
xchg
push
mov
stos
int
fidivs
adcb
addr16
add
xchg
imul
jo
sahf
mov
lods
popf
fsubs
cmp
popf
pop
pop
adc
sti
cs
aad
mov
sahf
jge
lret
std
adc
clc
icebp
imull
sbb
pop
imul
add
js
mov
mov
mov
cli
stos
repz
jns
adc
add
sub
mov
das
stos
mov
cmc
sub
int3
mov
or
loope
gs
xchg
and
loope
jle
int
mov
and
inc
jns
add
faddp
lds
fadd
inc
aam
cs
loopne
inc
cli
in
jnp
repnz
inc
sbb
dec
es
punpcklbw
call
add
push
popf
int3
clc
inc
push
js
pushf
mov
adc
in
rcr
fwait
dec
cmp
clc
jo
inc
nop
in
mov
cmp
fildl
push
movsl
sub
push
or
mov
bound
cltd
mov
cmp
cmp
push
cmpsl
dec
adc
pop
pop
jbe
xor
aam
es
xchg
sub
jns
out
mov
insb
outsl
into
pop
push
adc
push
add
mov
mov
cmpsl
mov
lahf
add
push
dec
jnp
fiaddl
cmp
iret
mov
or
nop
ja
or
add
cli
push
lahf
xchg
fidivrs
iret
push
je
or
and
adc
xchg
lods
jmp
push
je
dec
fs
dec
ljmp
in
js
xchg
jge
lret
fsubs
inc
cwtl
mov
jecxz
stos
mov
mov
mov
lret
lret
or
fldcw
fstl
xlat
out
stos
and
out
push
or
push
and
aad
jl
dec
pop
aad
push
jecxz
inc
push
xchg
push
xor
and
jo
ret
cmc
out
xor
jmp
test
popf
jb
imul
push
sub
jg
out
ds
test
fwait
pop
popa
or
orb
push
repnz
xor
lret
dec
stc
inc
mov
jbe
pop
add
mov
cmp
and
sub
mov
daa
lahf
lds
xchg
add
lock
lds
lcall
push
cmpsl
xchg
adc
mov
pop
in
loop
dec
sub
adc
cmc
sub
mov
xor
mov
dec
pop
clc
shl
das
sbb
fsubl
shr
push
inc
xor
mov
jp
mov
adc
mov
or
out
inc
mov
lret
add
arpl
testl
cs
cmc
push
sbb
and
or
lcall
xchg
mov
decl
or
jnp
insb
test
jmp
out
and
push
push
push
clc
aad
jecxz
shll
frstor
jl
mov
mov
fnstcw
test
test
cmp
popf
cmp
mov
lcall
push
loope
mov
lods
dec
mov
or
push
xchg
jecxz
stos
repz
in
dec
push
std
xor
sbb
hlt
mov
add
imul
mov
out
dec
add
cli
adc
mov
cmp
pop
push
pop
and
push
and
ret
and
mov
scas
mov
aam
int
arpl
cmpsb
xchg
sub
scas
ret
dec
sbb
jns
mov
push
mov
loop
test
inc
sub
cmp
jl
xor
dec
les
xor
pop
cmp
mov
xor
ljmp
aam
add
pop
movsb
cmp
inc
cmpsl
je
mov
ss
xorl
bound
or
push
pusha
out
mov
ljmp
bound
stos
xor
stos
repz
or
xor
loop
cmovs
add
nop
fimuls
sbb
es
adc
stc
inc
xchg
inc
test
push
mov
pop
cmp
inc
sbb
fcmovnbe
adcb
lret
cmp
mov
mov
aad
pop
filds
ja
dec
mov
dec
loop
sub
pop
test
inc
add
notl
jae
negl
daa
pop
mov
scas
scas
xchg
shrl
push
dec
push
test
cli
jmp
cmp
xchg
in
ffreep
pop
mov
ja
notb
inc
hlt
sub
jmp
mov
fcomip
in
mov
xchg
xorl
sub
jmp
jle
xor
add
js
jle
xchg
push
add
mov
sbb
mov
repz
inc
inc
xor
xor
inc
sub
out
mov
sti
out
mov
pop
ja
dec
mov
jp
aam
loopne
mov
mov
pop
scas
lods
cwtl
sbb
iret
cwtl
inc
push
sbb
push
rorb
arpl
inc
jo
xor
jp
addr16
xor
sti
push
cmpsb
outsl
add
add
daa
outsb
dec
loopne
cmpsl
pop
pop
mov
mov
ss
into
fprem
fcmovnbe
xchg
ds
adc
jbe
mov
fistpll
pop
push
adc
iret
ljmp
sub
mov
mov
adc
data16
subb
inc
enter
push
cli
and
insl
imul
jns
pop
mov
pop
movsb
jo
outsb
mov
iret
loopne
mov
add
mov
scas
mov
sbb
or
jmp
outsb
lret
jl
jp
pop
cmpsl
mov
hlt
sbb
shl
jmp
dec
xchg
movl
xor
test
pushf
adc
aad
mov
call
xor
out
inc
addl
call
ror
pop
lcall
jecxz
fcomip
sub
sahf
sbb
xor
mov
movsb
sub
fstpl
int3
or
repnz
dec
adc
dec
xchg
icebp
push
in
or
in
jo
movsl
imul
xor
mov
loopne
imulb
insl
fs
push
std
add
nop
cmp
mov
push
jg
jmp
push
rclb
inc
sbb
inc
lds
mov
sub
stc
push
push
pushf
cltd
jp
pmuludq
mov
aas
rcrb
iret
jge
arpl
scas
xchg
repz
out
push
mov
cmp
jmp
test
pop
push
adc
inc
push
lea
jo
xor
lret
mov
dec
jns
inc
cmpsb
push
push
jle
outsb
dec
jbe
xchg
mul
into
mov
adc
aad
sbb
xchg
jmp
repz
jb
insl
fcomi
pop
idivl
test
das
fisubrs
sbb
push
dec
outsl
mov
in
aas
and
shlb
push
mov
out
mov
pop
xchg
repz
in
or
fs
or
push
push
cmp
mov
mov
bound
andb
cwtl
movsl
jae
jle
push
adc
sub
sub
call
stos
jb
jecxz
mov
pop
inc
sti
cli
loopne
push
cli
jae
fildll
xchg
or
pusha
ljmp
dec
xchg
roll
mov
push
daa
or
pop
lods
push
pop
leave
lds
cmc
mov
cmp
adc
in
aad
cmpsl
add
data16
or
shrb
push
insb
mov
jno
mov
jns
popa
dec
dec
hlt
mov
or
movb
push
or
or
fs
xchg
xchg
mov
std
mov
ja
pusha
or
xchg
cmp
inc
lock
lods
pop
in
or
cltd
dec
xor
fisttps
roll
xchg
push
push
outsl
xchg
loope
inc
iret
push
dec
xchg
scas
enter
fsubr
imul
jo
sub
in
je
push
sbb
push
cmp
push
loope
in
stos
sub
cmp
add
addl
je
mov
or
sbb
inc
cwtl
loopne
and
call
jp
insb
push
fwait
or
fisttpl
mov
test
test
ljmp
mov
push
jp
loop
add
mov
cltd
icebp
mov
sub
jb
jnp
jae
ljmp
and
insb
sub
dec
leave
lahf
sub
lods
cli
rorb
sub
lods
jno
add
gs
fdivr
fsubr
add
push
aam
cltd
mov
dec
outsl
daa
test
andb
in
dec
mov
dec
sbb
nop
movsl
pop
insb
and
ds
shlb
mov
out
in
scas
sub
rcrb
xor
icebp
dec
shrb
test
xchg
sbb
das
jb
mov
xchg
jnp
pop
add
mov
xchg
fsub
enter
clc
mov
sub
sub
dec
xlat
aas
iret
loop
xchg
push
movsl
mov
xor
mov
bound
and
test
push
jg
int
mov
add
push
pop
xchg
mov
and
nop/reserved
sub
ja
pop
andb
inc
jo
mov
stos
fdivl
lds
ret
mov
xlat
stos
xlat
and
pop
sbb
fsubrl
adc
lret
push
xchg
sub
pop
pinsrw
xor
out
cmp
fwait
jl
xor
mov
out
xchg
jp
pushf
sbb
lahf
les
scas
mov
mov
stos
movsb
jge
mov
push
mov
dec
out
or
pop
mov
jne
leave
cwtl
pop
inc
push
bound
and
jnp
aam
push
mov
adc
dec
es
dec
mov
add
push
out
or
outsl
or
ret
fstps
sti
lods
mov
xchg
mov
sbb
out
xchg
arpl
lcall
jecxz
aam
adc
incb
jecxz
jl
dec
sub
xchg
lret
xor
arpl
or
xor
sbb
and
jbe
repz
cmpsb
es
mov
js
enter
xchg
sub
and
ret
cmc
mov
xchg
in
pop
jns
sub
js
lret
addb
xchg
data16
xor
rcrl
jb
adc
lahf
mov
cld
sub
loope
adc
sub
mov
jmp
loop
xchg
movsb
cmpw
jbe
movsl
aas
leave
pop
out
and
inc
inc
and
mov
js
xchg
cwtl
mov
mulb
mov
xchg
rclb
pop
xchg
add
cld
pop
insl
loope
data16
cmp
aam
enter
lret
xchg
lret
fimull
push
xchg
test
jae
addl
in
sbb
inc
rcrb
push
rcrl
cmp
add
sub
ja
sarl
outsb
lcall
adcb
xlat
xor
icebp
sbb
xor
dec
dec
sbb
aas
push
pop
insb
stos
pop
leave
pop
in
and
sbb
xchg
ret
ret
into
dec
in
insb
xchg
call
jecxz
xor
mov
xorb
enter
ss
ljmp
lret
sub
aas
jb
push
mov
stos
dec
shrl
inc
xchg
pop
cmp
pop
icebp
hlt
add
inc
xor
pop
or
or
adc
pop
test
pop
or
mov
mov
pop
sub
jmp
mov
jne
pop
mov
sbb
dec
mov
pop
xchg
adc
add
sbb
inc
inc
iret
int
cmp
loop
push
xor
xchg
inc
and
jle
add
aam
scas
inc
inc
mov
mov
jno
loop
insb
mov
and
add
mov
pop
pop
clc
rclb
xor
mov
sub
push
xchg
rcrl
in
and
outsb
push
fldenv
enter
jp
push
stc
fidivrl
into
bound
xchg
sar
pop
call
jg
inc
xchg
pop
mov
mov
mov
bound
ja
cs
les
test
jbe
daa
and
and
in
xchg
adc
fdivrs
sarl
push
pusha
popf
mov
lcall
pop
negb
push
dec
xchg
xchg
sbb
and
ljmp
add
push
shrl
and
call
push
out
push
mov
mov
or
rolb
dec
lahf
jno,pn
adc
lret
xchg
and
sub
xchg
and
or
and
mov
jle
mov
fs
dec
push
adc
jecxz
mov
outsb
inc
push
ficompl
push
adc
inc
fwait
movsl
mov
add
push
adc
pop
add
sub
push
pop
adc
xchg
add
lcall
icebp
imul
or
sub
lea
mov
or
push
adc
pusha
jge
lock
sub
fcoml
pop
lock
or
inc
das
cmp
addl
dec
inc
add
out
int
xlat
or
test
jmp
lret
shrl
jmp
clc
mov
sahf
pop
lods
sub
out
shr
and
fistpll
out
test
and
inc
mov
sti
xchg
lods
mov
addb
and
mov
out
fistl
dec
test
dec
sub
fs
sbb
in
lds
jo
sub
out
sarl
call
pop
mov
xchg
cltd
je
cmp
orl
and
dec
xchg
push
pop
enter
jo
adc
ss
test
push
sbb
ficoms
imulb
push
fcmovnb
iret
push
fidivs
mov
pop
xorb
add
or
inc
shll
sarl
mov
pop
dec
inc
sbb
mov
hlt
or
add
xor
js
pop
sahf
lods
dec
add
jmp
je
shrl
dec
out
ret
sahf
js
dec
push
mov
stos
lea
mov
and
aam
add
imul
arpl
pusha
and
jae
into
jo
xor
xchg
test
mov
repnz
jne
pusha
jae
push
enter
movsb
repnz
insl
cmpl
jp
dec
push
insl
xor
jb
sub
jns
insl
aas
insl
and
repnz
cmp
enter
mov
les
inc
cmp
insl
movsb
ds
clc
xchg
call
cmp
pop
jge
movl
insl
pop
cli
mov
xchg
lods
outsl
cmp
arpl
nop
adcb
adc
into
fstl
jg
push
mov
jmp
xor
mov
in
lods
ds
push
aaa
push
pop
dec
addr16
jmp
rolb
dec
popa
fisubrl
insl
lahf
xor
pop
mov
mov
push
jg
movsb
sub
pusha
outsl
lcall
lret
sbb
rcrb
in
cmp
stc
scas
cmc
add
cmp
adc
out
pop
data16
aas
push
dec
sub
jb
ret
mov
sbb
and
stos
js
test
ja
dec
loope
jmp
sbb
ds
push
js
adc
xchg
inc
cmp
cld
fnstcw
leave
insl
or
dec
outsl
mov
xchg
out
shll
cmovne
out
mov
jecxz
jbe
loopne
mov
icebp
enter
adc
sti
arpl
scas
fisttps
in
arpl
hlt
data16
cmp
mov
mov
jp
dec
xchg
jp
sbb
mov
clc
xchg
ret
sub
in
test
mov
test
mov
scas
cwtl
sub
pop
push
mov
jle
jnp
int
lods
cmp
repz
imul
push
sub
stos
jmp
mov
in
pop
and
shrb
enter
dec
cmpb
adc
loopne
fldcw
or
jmp
out
insb
and
ja
test
add
into
scas
lret
loope
outsl
inc
mov
inc
stc
jg
jmp
mov
push
lret
jne
out
and
cmp
mov
and
dec
subl
mov
inc
push
ficoml
aad
out
adc
mov
adc
xchg
jne
dec
push
std
xor
or
xchg
scas
testl
and
fdivl
cs
sub
push
mov
sub
lods
popa
pop
popa
push
pop
and
daa
roll
fdivs
mov
data16
mov
les
mov
out
push
in
fwait
and
mov
insl
fldt
loop
test
mov
cmc
jns
add
bound
mov
sub
pop
fnstcw
adc
pop
sbb
xor
push
pop
sub
ret
mov
popa
sub
ja
xor
jnp
fcomp
hlt
lret
xchg
and
icebp
int3
aaa
push
mov
nop
lods
fdivrs
sti
cmp
mov
rcll
xor
ret
push
mov
pushf
mov
xchg
jl
roll
repz
shlb
and
push
push
push
jecxz
cmp
loope
xor
xchg
xchg
ss
repnz
movsb
push
mov
add
adc
outsb
push
lods
jg
inc
icebp
xchg
xchg
cmp
cmp
xchg
xchg
mov
loopne
rcll
cltd
add
dec
sub
mov
testb
mov
gs
inc
in
jmp
repnz
xchg
sbb
sbb
mov
push
and
inc
mov
fisttpll
pop
add
sub
shl
pop
and
mov
adc
div
xor
dec
push
cld
mov
out
pop
sub
mov
cld
mov
pop
jo
jbe
or
leave
pop
mov
pmaddwd
xor
mov
lds
lahf
pusha
xor
pop
or
cmp
mov
lahf
cld
sbb
sbb
add
aas
jbe
daa
or
test
ja
cmc
add
idivb
arpl
ffree
sub
test
or
jp
mov
mov
pop
loope
out
cmp
or
inc
pop
repz
insl
add
push
pop
pop
stc
push
push
sbb
mov
or
adc
sub
mov
sarl
out
int
repz
sahf
ja
and
add
lods
fimuls
cmp
mov
mov
or
daa
loope
mov
inc
pop
loop
jne
adc
adc
or
shll
lock
cwtl
add
push
dec
fadds
in
iret
test
in
jl
leave
cmp
cmp
inc
jbe
push
lret
gs
stc
xchg
add
mov
sbb
test
sti
test
lds
popa
pop
or
shll
dec
mov
pop
lods
fwait
jb
xchg
and
inc
sub
out
rorl
or
dec
lods
mov
xchg
xor
in
in
iret
sbb
nop
xor
push
lods
mov
hlt
push
stc
xor
mov
jbe
popf
jle
pop
jg
lea
mov
mov
fwait
xchg
js
rolb
mov
jb
adc
sti
and
mov
lahf
lock
sbb
mov
mov
mov
mov
ffreep
out
in
dec
inc
popf
in
repz
lods
cmp
inc
mov
xchg
or
push
scas
adc
divb
xchg
stos
outsb
pop
sbb
inc
cwtl
xlat
nop
fadds
push
fldenv
adc
les
dec
enter
adc
push
clc
das
test
inc
shl
xchg
inc
cmc
in
mov
cmpsl
jp
pop
or
js
aad
jbe
mov
sti
ljmp
jecxz
sbb
das
rcll
fists
dec
xchg
iret
fldenv
push
lret
imul
fldt
cli
xor
push
sub
sbb
mov
sub
xlat
lret
adc
fadds
and
into
adc
orl
sahf
pop
lods
or
dec
xchg
add
mov
pop
cmp
mov
jbe
lea
outsl
dec
pop
test
xchg
xchg
lods
jae
ret
inc
jae
mov
arpl
dec
dec
jle
sbb
jbe
adc
dec
lret
cmp
or
out
push
inc
orb
insl
adc
mov
mov
jecxz
aad
pop
add
push
pop
add
orl
sub
pop
and
sbb
call
pusha
call
inc
icebp
inc
lcall
fidivrs
pop
add
jle
cmpsl
sbb
movsb
cmp
dec
in
sahf
add
pop
jle
jae
push
test
or
es
outsl
inc
mov
mov
and
scas
dec
daa
aad
jb
push
mov
nop
mov
shlb
cmp
push
push
adc
aaa
iret
xchg
mov
push
xchg
inc
dec
dec
cmp
jle
scas
in
sbb
xchg
mov
or
ja
add
mov
push
xchg
push
or
fisubrl
push
dec
mov
into
stos
xchg
mov
loopne
dec
imul
rcr
in
iret
xchg
stos
cltd
push
xchg
dec
adc
sub
inc
in
push
jb
jmp
pop
xchg
mov
push
cmpsb
pop
int3
inc
mov
jmp
dec
lods
adc
xor
mov
dec
das
lea
add
pop
or
push
sbbb
push
cmp
push
mov
out
or
fwait
popf
xlat
jno
inc
rcrl
push
pop
cld
cmp
push
pop
mov
sub
shlb
stc
addr16
mov
sbb
dec
inc
sub
lds
popa
int3
cmc
mov
out
xlat
and
inc
dec
adc
and
xor
dec
ds
fwait
insb
add
mov
rcl
sbb
sarl
out
mov
dec
or
dec
sbb
hlt
mov
rolb
testb
adc
jae
icebp
int3
add
or
fcoms
or
adc
or
into
xchg
cmp
inc
ret
loope
aad
mov
mov
std
push
rcrb
ret
sbbb
fs
out
xlat
insl
js
jne
cmp
jecxz
xor
aaa
push
and
sub
stos
cltd
fdivrp
mov
mov
hlt
push
stc
loope,pt
das
xlat
mov
test
es
outsl
and
push
ror
xchg
ss
das
push
repnz
rcr
das
insb
push
insl
inc
or
scas
rolb
out
popl
leave
das
cmp
push
lea
jecxz
mov
in
or
nop
insb
xchg
jp
dec
ret
adc
test
xchg
aaa
lods
out
xlat
jle
pop
pushf
push
mov
inc
mov
adc
ss
xor
or
jmp
dec
mov
push
mov
push
mov
jge
icebp
lods
cwtl
rclb
fwait
mov
lret
mov
das
add
in
dec
pop
and
nop
add
outsl
jmp
or
fwait
inc
fistl
arpl
enter
lret
dec
xchg
mov
mov
int3
arpl
adcb
scas
jo
shrl
cmp
and
xchg
sbb
into
roll
push
aad
adc
nop
adc
cmp
xchg
popa
dec
fsubrs
mov
jnp
arpl
js
fisubl
roll
mov
xor
and
or
jne
push
push
mov
es
insb
jae
xchg
call
sub
and
pop
lds
xchg
and
gs
xchg
mov
sub
fiadds
cmp
js
and
pop
rcrb
aam
cmc
aam
pop
mov
jb
std
mov
test
scas
pop
scas
adc
sub
mov
sub
add
inc
xchg
sbb
fsubrs
pop
mov
mov
mov
adc
jmp
js
pop
hlt
popa
jle
nop
and
pop
fs
cmpl
sub
adc
cmp
jns
jae
inc
js
cs
out
daa
aam
mov
loop
push
fbstp
in
pop
lahf
xchg
pop
push
insl
mov
xchg
mov
fcmovnbe
mov
add
xor
pusha
stc
jp
pushl
sub
insl
sbb
pop
ja
sub
sbb
xchg
leave
inc
cmp
movsl
shll
cmp
xor
psrld
shr
xchg
test
push
pusha
pop
aaa
adc
pop
pop
popa
lods
adc
arpl
fwait
mov
dec
push
loope
cwtl
imul
test
or
hlt
sahf
ljmp
repnz
mov
shrl
add
out
sub
shrb
push
mov
lret
add
adc
ret
xor
dec
mov
cs
xor
std
stos
loope
mov
mov
jl
adc
dec
mov
mov
jo
push
jne
cmpb
mov
pop
cld
and
mov
xlat
mov
jmp
jae
dec
xor
pop
adc
negb
adc
loope
bound
les
ss
jle
fcomp
rcrb
or
pop
xchg
xor
jmp
add
ja
xchg
jbe
adc
ret
out
rclb
pop
pop
imul
or
mov
xchg
enter
fsubl
xchg
and
push
gs
ljmp
cmp
jle
xor
dec
repnz
push
add
push
inc
call
jg
ljmp
mov
sub
ds
or
cwtl
sub
scas
sub
nop
out
cli
or
aaa
mov
mov
stos
dec
test
fildl
les
mov
icebp
call
dec
cwtl
andl
out
fdiv
stos
or
sti
dec
jmp
cmp
aam
push
dec
cmpsl
mov
lock
or
andl
xorl
push
jne
push
out
mov
movsl
inc
and
orl
fldt
nop
icebp
mov
fistps
lret
inc
fptan
jge
adc
cmp
pop
xor
loop
int3
dec
dec
sbb
xchg
sub
and
push
mov
pop
arpl
outsb
icebp
shr
rcrl
adc
insl
out
pushf
cmp
into
lods
mov
int
mov
test
jne
push
mov
test
dec
in
pusha
jl
adc
jno
test
lret
mov
inc
adc
popa
and
into
pop
mov
movsb
out
inc
adc
xchg
push
mov
mov
jno
out
and
push
or
ds
push
dec
pop
cmp
icebp
bnd
cmc
jae
scas
jp
pop
inc
pop
jo
enter
sub
jecxz
add
int
push
lods
rorl
jp
int
out
adc
ja
bound
xchg
mov
lret
add
fs
mov
cs
sub
mov
mov
cmp
imulw
stos
lds
ret
loopne
out
iret
pop
xor
mov
adc
fcoml
int3
cmp
ret
in
leave
and
test
pushf
subl
sbb
scas
inc
mov
inc
je
sbb
jne
cmc
and
jmp
jae
in
mov
cli
cmp
pop
daa
sub
fcoml
ret
adcl
sti
jl
int
xchg
shl
gs
jnp
adc
mov
out
inc
xor
xchg
xchg
test
dec
outsl
loopne
fistpll
cld
sbb
xlat
addr16
enter
lds
cwtl
dec
inc
gs
jge
inc
je
xchg
clc
int3
rol
nop
aad
out
icebp
mov
push
cmc
call
hlt
sarb
sub
pop
cmc
inc
cmc
dec
pop
dec
mov
out
or
dec
cmp
and
lcall
or
js
cwtl
out
ret
xor
push
add
dec
aam
dec
inc
pop
cwtl
fs
sub
aam
adc
scas
inc
sbb
sbb
rcrl
insl
in
loopne
imul
dec
and
add
js
dec
out
pop
bound
mov
lods
daa
pushf
mov
decl
inc
test
daa
sbb
movsb
dec
in
pusha
test
cwtl
test
xor
sub
dec
in
mov
pop
jl
shlb
lea
jge
lea
sub
in
std
add
jb
adc
adc
adc
mov
call
mov
mov
cmp
xchg
cmp
jno
mov
jge
mov
movsl
rclb
je
add
jmp
mov
inc
lea
sbb
cmp
dec
inc
data16
xchg
xchg
cmp
add
ret
push
push
sbb
add
scas
cli
pop
pusha
insl
popa
out
jmp
iret
sar
mov
daa
sbb
or
or
sub
imul
das
adc
subl
xchg
mov
scas
test
nop
or
adc
push
jp
sub
nop
test
aaa
mov
in
xor
and
fstl
in
jb
cmpsw
cmovge
loope
cltd
fnstcw
cmc
inc
adc
xorb
iret
push
add
jne
out
xchg
mov
mov
lahf
pop
fiaddl
sahf
out
cmp
shlb
ja
bound
daa
sub
pop
test
cli
cmpsl
mov
in
lcall
mov
test
fcomip
add
mov
push
ret
notl
enter
fnsave
sbb
sarb
cs
aaa
jecxz
or
dec
faddl
cmp
sbb
mov
xor
in
lahf
lret
js
test
aad
push
scas
xchg
aaa
repnz
and
add
jge
and
and
stos
sub
mov
loopne
adc
aaa
add
aad
jle
cld
fistps
in
add
aam
stos
aad
lea
sub
jno
aas
outsb
xor
xor
pop
and
xchg
jp
sub
cmp
pop
cmpsl
sti
pop
push
pushf
repnz
inc
mov
xchg
mov
cmp
das
cmp
pop
inc
xchg
fldt
lret
shrl
sbb
xlat
stc
daa
xchg
rcpps
jmp
pop
mov
dec
mov
pop
rep
xchg
push
inc
stc
pop
dec
mov
subl
test
in
cltd
sbb
enter
icebp
mov
ja
loop
mov
adc
sub
lret
ss
mov
push
stos
out
loop
sbb
push
mov
inc
adc
insl
sub
or
adc
sbb
pop
pusha
xor
mov
add
sbb
out
mov
push
popf
adc
xchg
lods
iret
lret
jne
mov
ret
jnp
cs
popf
push
dec
add
rorb
hlt
jns
cs
sub
pop
cmc
stc
xor
fwait
inc
ret
adc
call
mov
inc
decb
and
xor
mov
inc
pop
cmp
mov
inc
mov
sbb
lcall
int3
inc
insl
jb
int3
inc
pop
xchg
xchg
scas
xor
xchg
sub
aad
loop
sahf
pushf
rcrl
imul
pop
imul
xchg
aaa
cmpsl
jge
xchg
bound
sbb
fs
inc
cmpsl
sub
sub
outsl
pop
adc
adc
mov
loope
adc
lcall
dec
xor
xor
pushf
sbb
andb
imul
mov
pop
sbb
inc
ret
adc
inc
enter
mov
lock
jae
dec
cmova
lahf
pop
xlat
mov
sbb
es
or
ljmp
cmpsb
pop
mov
jg
add
movsl
into
ljmp
shl
cmp
inc
fsubrs
adc
mov
cmp
mov
jne
dec
ds
out
loop
pusha
stc
adc
stos
pop
stc
dec
imul
adc
pop
pop
sub
popf
inc
push
lock
pop
sub
test
cld
test
pop
aad
gs
mov
lcall
xor
test
pop
jmp
mov
xor
fildll
jecxz
popf
dec
or
icebp
ds
jle
ficomps
lahf
push
and
loope
xchg
cmpsb
cltd
push
sbb
out
adc
lods
out
rorl
push
mov
cli
mov
ds
lea
sbb
mov
aas
or
mov
xor
popf
mov
les
add
sub
xor
fwait
jmp
fbstp
mov
jae
adc
mov
dec
fldenv
mov
dec
or
sarb
adc
inc
fcoml
sub
add
daa
mov
pop
frstor
mov
test
rol
add
jne
lcall
in
fwait
xchg
nop
lahf
cmpsl
testb
lods
adc
dec
clc
jo
adc
and
dec
cmpsb
sub
add
push
inc
or
lret
xchg
cmc
shr
dec
xchg
push
xchg
add
xor
sbb
roll
and
lods
lock
and
adc
cmp
dec
sub
loope
mov
test
mov
stc
push
add
push
enter
mov
or
jns
or
fists
fs
jo
xchg
inc
add
addr16
mov
mov
push
mov
stos
mov
mov
add
and
imul
pop
arpl
outsb
arpl
cltd
sub
jo
repz
add
add
stos
and
jo
int
dec
sbb
push
das
cltd
nop
mov
add
cmp
test
movsl
lock
fadd
pop
dec
inc
sti
lea
mov
repz
jne
movl
iret
ficomps
jo
pop
imul
sbb
xor
mov
push
mov
adc
rolb
cltd
and
int
jnp
push
mov
jle
pop
cld
jle
fsubl
cmp
fwait
push
mov
or
shll
adc
mov
aad
in
in
aad
sbb
cmpsl
dec
imul
roll
mov
sub
stc
push
push
outsl
test
push
mov
pop
jnp
gs
stos
sbb
fstpl
shrl
jbe
in
ret
cld
mov
or
scas
int3
insl
movsb
jge
movsb
mov
sti
add
cmp
gs
stos
push
xor
jno
cmp
ja
pusha
pop
xor
loopne
sbb
sub
inc
dec
fwait
pop
sti
je
cmpb
mov
mov
cmpb
sbb
mov
jg
jge
push
pop
sbb
insl
daa
or
jnp
mov
divb
lock
and
int3
jle
arpl
sub
mov
cmp
pushw
fldenv
jo
jle
jnp
fdivrl
fadd
or
adc
cmpsb
bound
repz
imul
inc
data16
popa
jo
pop
sarb
test
fwait
mov
mov
iret
sub
pushf
mov
pop
lds
push
jne
minps
jp
xchg
std
adc
cld
dec
xor
stc
mov
sbbl
dec
and
lods
and
mov
adc
imul
scas
fs
js
test
inc
mov
in
xchg
xchg
nop
cmp
pop
dec
jno
pop
mov
rcl
out
sbb
outsb
jl
push
sbb
cmpl
mov
adc
popa
pop
iret
mov
or
cmp
jge
les
push
xor
shrb
xchg
stos
out
mov
sahf
ret
sbb
pop
nop
cmp
lret
push
ficoml
int3
jae
adc
faddp
add
pop
xor
mov
cli
mov
xchg
cli
test
pusha
mov
xchg
inc
dec
out
mov
imul
stos
pop
aad
push
icebp
inc
xor
sti
sub
push
xor
inc
imul
loope
leave
mov
idiv
mov
scas
dec
loop
xor
add
cmpsb
cld
cs
dec
arpl
addr16
sbb
jne
cmp
lea
ficomps
fldt
jnp
sti
movsb
xchg
xor
xor
fidivs
test
jns
xchg
in
mov
adc
pop
pop
hlt
out
sbb
inc
test
jne
mov
and
les
arpl
jg
je
ss
mov
mov
loope
rorb
into
adc
xor
sti
sub
push
jae
pusha
aam
shr
jmp
ds
idiv
cs
inc
js
and
ds
inc
cmpsb
xchg
jge
pop
addb
or
mov
cmp
imul
inc
lods
out
sbb
dec
test
ror
movsb
jne
pop
pushl
fwait
gs
sbb
je
jle
mov
add
xchg
call
xor
jno
jle
test
cld
and
stc
dec
stc
mov
pop
push
fildll
pushf
inc
mov
pop
push
in
or
arpl
cmpsl
in
fisubl
sub
aad
cmp
sbb
repnz
xor
adc
push
sahf
mov
xchg
rolb
mov
lods
mov
out
inc
scas
mov
dec
icebp
loop
test
fcom
es
inc
mov
xchg
test
xor
leave
jmp
mov
mov
dec
dec
mov
fxam
andb
outsl
cmp
in
dec
mov
sbb
pop
jmp
rorl
push
ljmp
mov
gs
xchg
mov
mov
dec
adc
mov
stos
inc
iret
mov
pop
adc
ret
aam
nop
sbb
jmp
or
in
cli
adc
sub
cmp
cmc
dec
pop
and
inc
sub
dec
xchg
push
sub
cld
std
jno
jo
jne
std
test
pop
jle
adc
in
and
fwait
mov
add
insl
das
lods
test
jl
lea
and
mov
repnz
enter
mov
sbb
in
adc
pop
call
or
aam
jo
fiaddl
jl
into
call
add
xchg
aas
sbb
in
adc
jg
pop
and
daa
jbe
mov
ds
lods
in
push
frstor
adc
aaa
pop
push
hlt
sbb
lret
jae
fnstsw
pop
inc
mov
pop
pop
movsb
in
push
push
ret
inc
jl
mov
fucomi
lret
jno
inc
mov
pop
add
mov
or
fiadds
push
or
inc
push
punpckldq
subl
es
rcrl
push
mov
or
cmpsb
jbe
popa
xchg
shlb
push
push
addr16
lcall
scas
sti
lahf
jo
int3
fildl
clc
mov
inc
mov
lods
push
std
xor
adc
and
js
mov
in
add
stos
lea
jmp
mov
jmp
xor
outsb
fstpl
push
dec
imul
stos
lret
pop
addr16
mov
xor
inc
and
orl
or
sbb
mov
clc
mov
in
cmovo
mov
outsl
push
add
pop
test
push
and
lret
jmp
call
cmpsl
dec
inc
das
test
mov
rorl
or
or
jg
rolb
cmp
dec
loope
int
out
xchg
loope
mov
pop
mov
test
inc
enter
lret
subl
aas
xchg
xlat
outsl
mov
cmp
je
adc
in
stc
xorl
sti
jnp
add
cwtl
lods
sahf
pop
imul
or
fsubl
mov
and
mov
in
div
lret
xchg
add
bound
cmp
fsubp
inc
inc
mov
std
mov
xchg
sub
xchg
fistpl
adc
adc
cmp
push
xchg
lcall
cmp
stc
xchg
adc
roll
lret
and
outsl
gs
push
jb
ret
xor
or
imul
mov
dec
mov
jb
out
outsl
stc
jbe
mov
iret
cmp
ss
jle
sub
add
test
mov
into
and
pushf
dec
popl
sub
ficompl
push
bound
jmp
sbb
dec
sti
out
stos
std
sub
addr16
and
insl
mov
jae
loopne
js
xchg
aaa
in
imul
lds
icebp
mov
or
cmp
sbb
cmp
sub
out
das
orl
mov
adc
xchg
rcr
add
mov
sbb
dec
in
mov
xor
lcall
jmp
or
popf
mov
ret
dec
das
cs
out
leave
cwtl
ss
push
lock
std
test
mov
push
xchg
sub
fscale
call
shrl
xor
mov
loope
int
pop
mov
xor
push
clc
inc
out
cmp
mov
in
enter
lods
jnp
ret
mov
mov
cltd
jns
inc
dec
fnstcw
fwait
jle
push
jecxz
iret
aas
sub
adc
fdivs
pushf
and
and
call
aam
jno
test
and
mov
dec
cltd
in
cmp
inc
jno
gs
mov
xlat
dec
mov
mov
inc
jnp
loopne,pt
jl
fistpl
cmp
pop
test
out
int3
divl
dec
std
aas
mov
jae
loopw
outsb
stos
xor
test
mov
push
fsubl
iret
sub
sbbl
cmp
adc
cmp
leave
jmp
in
inc
sub
lods
inc
mov
sbb
insb
and
frstor
sbb
cmp
dec
mov
imul
and
shl
fistpl
mov
lret
jno
jge
fadds
sarb
or
andb
in
mov
push
sub
cmp
inc
pop
inc
enter
push
dec
into
shlb
icebp
and
imul
cmp
insb
cmp
lods
cwtl
dec
inc
mov
dec
inc
jne
push
std
or
je
xchg
out
fwait
xchg
xchg
mov
adc
ret
xor
pop
mov
out
loopne
rcrl
ss
notl
bound
adc
adc
dec
xor
outsb
movsb
ds
mov
fsubrl
pop
in
stc
push
pop
push
cmp
lret
popl
out
loope
mov
lret
ja
clc
mov
sahf
aaa
popa
cs
repnz
pop
std
xchg
rcrl
mov
or
clc
jecxz
movsb
push
xchg
psrad
push
xor
outsl
sub
dec
inc
mov
sub
scas
jl
sub
popa
xchg
icebp
fs
xchg
repz
in
mov
xor
xchg
mov
xor
shlb
sub
data16
out
sti
mov
out
shlb
inc
mov
mov
sub
dec
add
push
out
dec
les
std
inc
sar
jae
pushf
cmp
enter
cmp
mov
mov
int3
cmp
sbb
jmp
cmp
divb
dec
cmp
xor
lods
mov
jb
rorb
cmpsl
adc
cmpsl
and
jo
leave
inc
daa
cmp
dec
movsb
lods
in
std
sbbb
xchg
repz
sub
mov
xchg
arpl
adc
lea
xchg
dec
es
jl
fcoms
in
mov
pop
xchg
test
out
sbb
push
loope
in
enter
cmovs
lods
jno
loope
push
add
sbb
gs
jge
ret
fisttpl
lock
push
add
test
cwtl
sbb
aas
sub
add
xor
jnp
mov
mov
cmp
daa
push
add
jnp
xor
clc
fistpl
jns
jp
stos
hlt
adc
repz
xlat
fnsave
mov
in
or
pop
dec
mov
xor
ret
xorl
jo
pop
dec
stos
xor
stos
mov
imul
or
ret
add
mov
in
out
es
pop
sbb
in
or
fbstp
pop
adc
xchg
loopne
sahf
jbe
xor
repnz
aam
ss
jnp
incb
xchg
or
mov
aam
pop
jb
shrb
push
mov
loop
xchg
adcb
xor
ja
gs
mov
js
insb
push
negb
fbstp
adc
push
popa
xorb
xor
xchg
mov
cmc
nop
pop
and
cwtl
lret
inc
push
sub
inc
inc
jl
aas
add
xchg
shrl
push
jae
aam
push
adc
xchg
adc
std
cld
pop
fcompl
inc
xchg
cli
lret
jmp
jne
sub
inc
add
lret
cmp
jmp
xchg
scas
mov
xor
jnp
sbb
daa
jge
repnz
xor
mov
inc
adcb
popa
mov
shl
xchg
pop
shr
xchg
dec
sbb
in
pushf
lcall
sahf
jl
and
cmp
add
sub
je
sbb
rcll
and
dec
cmpsb
imul
dec
xor
xor
addr16
xrelease
push
pop
mov
add
sub
pop
cmp
dec
pop
hlt
int3
jae
push
add
sbb
pop
fidivs
sahf
adc
cmp
mov
aaa
iret
and
mov
outsb
test
sbb
mov
jge
cmp
dec
shl
push
pusha
mov
cmp
sub
rcl
aam
pop
mov
dec
cmpsl
fmull
pop
jl
stos
incl
popf
lock
add
loope
xlat
in
push
pop
cmp
js
and
adc
mov
xor
hlt
mov
adc
inc
repnz
or
jne
xchg
test
xor
cmp
loopne
push
jmp
or
xchg
sub
aas
mov
push
cld
mov
pop
jno
xchg
dec
sti
push
dec
out
outsl
xchg
je
ret
xor
mov
fimuls
sub
iret
xor
int
sub
xlat
cltd
stc
sub
imul
dec
ds
xor
jo
jno
femms
xchg
scas
mov
jecxz
ret
lods
js
xchg
fstl
nop
cmovle
add
sub
adc
sub
sub
inc
rclb
mov
jge
std
into
int
dec
jmp
pop
inc
out
outsb
jae
fs
inc
rcrb
mov
subl
andl
mov
or
inc
or
aas
or
push
cli
or
push
cli
sub
add
aad
sbb
ja
pop
ret
mov
pusha
xlat
mov
sarl
out
xchg
movsb
mov
inc
xor
into
mov
adc
mov
jno
cs
or
sbb
popa
inc
sbb
into
in
jl
dec
pushf
cmp
fistps
lahf
arpl
stos
adc
outsb
cli
fcomip
dec
adc
xchg
pop
int
cmpl
mov
in
mov
stos
int
into
and
dec
loop
cs
out
mov
into
cmp
mov
scas
test
insb
cld
jmp
push
loope
cmp
bound
out
and
nop
sub
bound
mov
cmpsl
in
inc
xchg
rorb
pop
add
jge
push
test
lcall
aad
imul
adc
add
stos
mov
popa
mov
or
push
xor
mov
pop
popf
cmp
or
subb
xchg
test
sbb
mov
aaa
daa
cwtl
xchg
notb
dec
dec
xor
xchg
lock
fistpl
jmp
adc
jb
jnp
aas
pop
lcall
fs
movsb
sub
mov
addb
pop
cmp
stos
xchg
aas
push
push
cld
mov
je
cmp
roll
mov
and
in
bound
fnstcw
mov
idivl
push
sub
ljmp
lods
push
add
iret
xor
adc
je
mov
pushf
xor
pop
mov
and
out
push
imul
aad
jg
dec
scas
add
imul
stos
mov
inc
sarl
aaa
cmpsb
sbb
mov
sbb
mov
adc
mov
lock
cmc
rcrl
pop
mov
in
in
inc
mov
pop
imul
mov
or
cs
push
clc
test
out
jge
xchg
add
dec
pop
xor
pop
pop
xchg
loope
in
decl
out
lcall
addr16
cmp
mov
dec
aad
invd
aam
jg
sahf
in
testb
sbb
sub
mov
pop
push
ror
push
repz
bsr
cmp
add
into
pop
subb
adc
bnd
or
nop
fs
mov
rorl
shrb
sbb
ret
or
dec
jmp
stos
aam
mov
icebp
push
xor
mov
mov
and
xchg
shlb
test
outsb
lods
mov
xor
mov
pop
push
decb
lret
push
mov
mov
add
cmpsb
sbb
ds
inc
popa
in
mov
mov
dec
mov
test
mov
lcall
cli
and
dec
repz
and
mov
mov
and
xchg
add
divb
stos
push
xchg
test
mov
iret
mov
ret
jnp
call
jl
shll
fidivs
inc
out
je,pt
sbb
test
pop
das
fucomp
jnp
int3
and
inc
scas
mov
test
int
xchg
lods
add
pop
mov
sub
outsl
cmp
stc
fimuls
cwtl
cmp
pusha
daa
sarl
adc
sbbl
idiv
and
in
pop
inc
push
cltd
mov
mov
fwait
sbb
inc
sub
in
fsts
outsl
out
push
mov
stos
outsl
fsts
imull
mov
pushf
sub
add
mov
pushw
shlb
ja
push
icebp
ds
dec
pop
xorl
enter
aad
jne
pop
adc
iret
xchg
jns
in
sbb
loope
pop
mov
jo
mov
pop
xchg
imul
or
adc
mov
rcll
insb
push
daa
mov
mov
dec
push
andb
in
or
cmp
mov
xchg
cmc
xor
mov
sub
pop
adc
fmull
imul
lahf
sbb
clc
or
fs
insb
mov
dec
adc
xor
mov
xor
fnstcw
imul
aam
dec
mov
aas
add
or
pop
lret
add
movsb
test
stos
rcll
ss
pushf
ss
mov
sbb
es
andb
xor
jg,pn
push
in
push
lods
fstpt
cmc
mov
dec
rolb
adc
into
data16
add
adcl
inc
cli
cmpsb
mov
sbb
cmc
mov
xchg
andnps
jl
sub
loopne
push
bound
std
adc
std
mov
add
fwait
mov
imul
cmp
rorl
aad
mov
pop
cmp
add
add
and
jmp
add
imul
mov
sarb
es
inc
push
sbb
pop
rcrb
cmp
and
adc
sbb
das
iret
inc
in
xor
stos
mov
push
push
push
fsubs
cmp
mov
cli
scas
fistpl
xor
cmp
inc
inc
jnp
faddl
adc
push
push
cli
jbe
fwait
sub
out
mov
push
pushf
jae
xchg
in
push
in
sub
loop
xchg
push
dec
xchg
sbb
aam
ret
mov
inc
aam
inc
lods
inc
xchg
sbb
or
enter
add
imul
or
or
xor
repz
lods
and
rcrl
outsl
jns
and
dec
cmp
cld
cmpsl
je
out
adc
cld
cmp
and
cmp
aad
lcall
add
mov
out
push
mov
out
idivl
xor
addr16
fimull
frstor
add
stc
push
inc
jle
cmp
roll
xor
addr16
xchg
rclb
fbstp
xor
mov
out
and
fistpl
fsubrl
mov
mov
aas
xchg
mov
lret
xchg
add
gs
fistpll
sub
add
xchg
in
sbbl
push
pop
mov
xor
pushf
xlat
lret
xchg
jne
negl
repnz
icebp
scas
fcoml
stc
dec
xlat
lahf
pop
iret
jbe
test
and
push
mov
insl
lcall
mov
ficomps
pusha
push
adcb
sub
push
mov
xor
int3
adc
jnp
clc
test
aad
sbbl
mov
push
dec
int3
ret
fistps
jno
daa
fdivs
cmpsl
or
mov
dec
js
jns
loop
ja
jo
push
ljmp
mov
sub
lret
sbb
xor
fsubs
pop
xchg
mov
testb
or
out
negb
pop
add
jo
fsubl
or
push
sbb
aam
loopne
mov
inc
rclb
mov
inc
and
das
adc
inc
lahf
out
mov
jne
push
pop
daa
stos
cwtl
push
push
jb
cmp
xchg
cmp
jle
out
sbb
test
dec
adc
cs
out
mov
dec
pop
cmp
scas
es
pushf
add
fcmovnbe
push
and
push
in
sti
mov
subl
adc
stos
popf
popf
movsl
movsb
aad
stos
das
or
fmull
fsub
outsl
pop
insb
ja
sbb
cmp
mov
jle
arpl
mov
leave
call
ficoml
and
scas
jecxz
and
adc
xchg
mov
aam
sarl
push
dec
rcll
fidivl
idiv
aam
ret
pop
int
xor
fxch
xor
lahf
or
xchg
mov
scas
xchg
jg
dec
xor
lds
sub
repz
add
jno
xor
cwtl
pushf
xchg
or
inc
push
add
aaa
sbb
sti
xor
fmul
sarb
and
jge
lahf
mov
sbb
hlt
mov
xchg
outsl
fchs
sti
mov
cs
jge
ret
rorl
xor
and
cmp
pop
rcll
cmp
lods
sbb
mov
add
push
es
mov
and
jmp
dec
xor
cwtl
std
cwtl
clc
and
jge
xchg
sub
or
jb
and
sub
cld
das
ds
or
loope
cld
aam
cwtl
fadd
cmpsl
loop
jb
in
jne
lret
lods
sbb
and
cmpsb
jge
loope
push
pop
fadd
push
mov
ret
mov
int
enter
adc
jle
sub
xorb
fcos
test
ss
sarl
push
rcl
dec
pushw
rolb
jb
in
div
mov
jp
lds
add
mov
mov
jns
dec
std
lods
pusha
fwait
ja
pop
dec
push
fcomps
int
mov
les
dec
divl
mov
mov
and
push
pop
adc
mov
xor
inc
dec
test
and
and
enter
jae
hlt
xor
sub
pop
sub
jg
cmc
outsl
mov
cli
cli
andl
xchg
jns
dec
pusha
sbb
hlt
call
jg
popa
mov
out
add
jg
out
leave
sub
loop
or
ljmp
out
fnstcw
cmp
pop
jge
xchg
insb
jge
shlb
sbb
inc
aad
push
fistpll
ljmp
xor
in
cmp
jecxz
movsb
shrb
pop
out
shrb
cmpb
cld
hlt
pop
xor
mov
in
jp
xchg
mov
imul
xor
xchg
js
and
cmp
dec
pop
out
xorb
and
xchg
jle
mov
mov
out
pop
pop
push
mov
xchg
fadd
scas
jb
cmpsl
xchg
add
cwtl
fcompl
out
mov
pop
xor
xchg
xorl
incl
jno
icebp
lock
ljmp
mov
push
xchg
imul
add
daa
mov
sub
das
jne
mov
fcom
sub
push
movsl
fstpl
mov
arpl
jl
push
xor
cwtl
add
push
loop
cltd
adc
sbb
inc
in
cwtl
xor
loope
and
add
xor
adc
mov
lret
adc
mov
dec
jl
jne
imul
das
sub
decl
xchg
sub
xchg
rcr
sti
fs
cmp
xchg
fldenv
xor
push
push
adc
cltd
sti
pop
in
sub
inc
stc
stos
push
mov
dec
inc
fadds
out
sahf
or
jno
xchg
sbb
mov
into
jp
lcall
sub
cmpb
pop
jmp
or
lds
rcrl
hlt
in
les
sub
sarb
push
inc
push
pop
adc
mov
mov
push
mov
insl
mov
xchg
mov
out
lock
arpl
loop
push
fsubrl
mov
sbb
and
mov
mov
arpl
inc
xor
xchg
xor
fistl
sarl
cmc
out
or
adc
das
popl
jb
fadds
dec
int
movsb
sub
push
call
xchg
sub
push
adc
sbb
jne
xor
cltd
das
mov
mov
xor
call
mov
andb
push
inc
js
pop
ret
stc
xchg
cmp
push
js
xor
loop
mov
aam
pop
in
repz
and
imul
sbb
inc
push
jne
xchg
out
enter
pop
xchg
pop
mov
imul
stos
push
or
dec
bound
pop
test
scas
roll
pop
xor
jns
jns
push
sub
pop
loopne
outsb
arpl
daa
pop
outsl
pop
lret
popa
pop
dec
in
xchg
jo
ja
lock
shl
xor
in
sbb
push
cmc
mov
push
and
movsb
int
sbb
gs
les
mov
push
fcoml
mov
dec
shrl
cwtl
fadds
cli
sbb
lock
insb
xchg
mov
mov
jp
andb
cli
cmp
add
sysenter
aas
push
and
xorb
data16
mov
jle
jg
pop
mov
sub
sbb
cmpsb
cli
inc
test
ds
jae
jle
movsl
jle
bound
sbb
sbb
sbb
add
cmpsl
stc
mov
mov
stos
scas
mov
xchg
std
push
aam
jle
pop
icebp
in
sti
sbb
push
mov
outsl
sub
lret
mov
rcrb
fadd
ds
mov
sbb
jno
call
ficomps
jge
pop
mov
lea
pop
or
and
push
fnstsw
xchg
subl
ret
dec
cmp
sbb
ja
ret
test
or
inc
bound
push
gs
push
fsubr
xchg
mov
lds
shlb
in
inc
adc
leave
stos
scas
adc
xor
sub
into
dec
dec
cmp
push
ljmp
loope
ret
addb
sahf
xchg
adc
std
fwait
dec
and
decl
loope
jb
mov
or
aam
and
test
mul
sbb
xor
pop
pushf
lea
leave
scas
inc
mov
iret
add
aaa
or
inc
leave
mov
outsb
pushf
jecxz
adc
cmpb
push
and
mov
sti
dec
outsb
js
ja
test
es
ja
sarb
lahf
leave
mov
out
fmuls
xor
imul
int3
in
jns
cmp
gs
xor
inc
mov
ss
sub
jmp
jmp
mov
fnstenv
nop
bnd
jl
mov
mov
push
push
cmp
push
lcall
push
pop
cld
sbb
jge
jle
lds
push
lret
pop
das
bnd
cmc
sar
sub
push
ja
jno
testl
add
outsb
and
adc
aad
sub
push
imul
addr16
addl
and
fs
fnstcw
push
and
jg
imul
inc
sbb
mov
xchg
fdivl
push
xchg
sub
jg
or
scas
ficoml
pop
jnp
add
xor
outsb
mov
das
fdivs
leave
es
inc
or
sbb
push
xor
rclb
mov
lods
jle
scas
pop
addr16
out
cmc
icebp
repz
mov
adc
aas
inc
jb
push
xor
push
pusha
loope
out
sbb
push
aad
jge
mov
decb
or
cmc
sbb
outsb
jb
fst
mov
roll
xor
shlb
lods
arpl
lea
mov
xchg
sbb
mov
add
fprem
add
cmpsl
and
jl
push
push
sbb
sub
cs
repnz
sbb
xchg
setge
cmp
subb
inc
jb
dec
test
in
gs
inc
xor
enter
pop
fbld
mov
or
inc
jne
ror
pop
jecxz
ss
xchg
clc
inc
cmp
and
in
push
push
add
dec
adc
mov
dec
fldenv
je
ret
push
or
cmc
mov
aam
inc
sub
inc
in
test
xlat
pop
dec
mov
clc
std
es
adcb
in
stc
and
fs
and
sti
mov
push
mov
push
sub
cwtl
add
popa
mov
push
pushf
jb
and
pop
rclb
fstl
sub
and
dec
cmp
mov
lds
jecxz
lret
addr16
or
cmp
mov
test
shll
mov
outsl
jmp
adc
loope
loop
js
or
add
pushl
or
loopne
mov
and
out
xchg
orl
pushf
movsb
jnp
inc
icebp
mov
fnstenv
out
out
jmp
int
int
push
push
hlt
mov
sti
push
dec
shlb
std
pop
or
and
jns
ds
adc
clc
inc
xor
loopne
in
stc
mov
xor
loopne
mov
dec
test
mov
cmp
mov
pop
mov
adc
lcall
xchg
xor
cwtl
or
popa
dec
mov
in
xor
fildl
adc
mov
jl
and
sbb
mov
or
and
das
and
popa
mov
inc
or
cld
fisubrl
jb
loop
sub
or
cmc
clc
xchg
sub
adc
fidivrs
clc
iret
xor
mov
out
cmp
dec
adc
push
cmp
cmp
sub
pop
popa
pop
icebp
out
inc
popf
mov
cmpsb
push
int3
rol
cmp
xchg
ds
mov
std
mov
movsb
push
ja
aam
jne
pop
cwtl
pop
out
cmpsb
mov
pop
stos
add
cld
enter
mov
push
pop
popa
adc
and
mov
call
mov
mov
stc
dec
pop
xor
pop
inc
ret
mov
mov
leave
cmp
push
fildl
or
and
gs
xchg
in
jl
mov
add
sub
fwait
cltd
pushf
lock
daa
inc
in
jge
stos
or
sbb
or
int
cwtl
xor
inc
cmp
lahf
xchg
imul
call
ljmp
hlt
std
xchg
mov
inc
fisubs
dec
mov
push
stos
jmp
jb
jbe
mov
and
insb
icebp
mov
popf
cs
mov
dec
add
adc
cmp
jg
cld
mov
jmp
inc
es
lods
inc
fcom
iret
inc
add
imul
sbb
jmp
sbb
add
add
test
data16
stos
out
out
das
jbe
testl
push
test
test
xor
adc
cmovns
mov
enter
fsts
mov
pop
jp
and
test
cwtl
adc
adc
fbstp
adc
sub
and
mov
mov
outsb
xor
push
rcrb
inc
jnp
jb
cmp
aam
cli
out
sahf
in
xlat
xchg
lcall
scas
mov
fdivr
mull
scas
popl
icebp
dec
mov
mov
mov
or
iret
cmp
addr16
jg
out
sbb
jno
enter
test
ret
or
scas
cmp
ret
int3
inc
mov
adc
mov
add
in
fnstsw
mov
stos
adc
test
pusha
push
push
pop
mov
or
cmp
jmp
adc
xchg
fwait
sub
shr
ds
inc
int
adc
xor
cmp
and
cmp
outsl
add
mov
jae
std
cmp
cmpl
jge
loop
cs
stc
sub
lock
ss
mov
std
xor
sub
daa
addr16
cmp
xchg
sbb
dec
pop
and
cmp
aaa
imul
xchg
movsl
sbb
jmp
and
rcrl
cmp
stos
mov
adc
movsl
daa
xchg
adc
push
bound
divl
mov
push
pop
mov
sbb
xor
out
cli
pop
xor
lret
xchg
dec
pop
adc
jne
jecxz
xchg
xchg
xchg
arpl
imull
icebp
fstpt
xlat
or
pop
aam
addr16
xlat
pushw
fsubl
js
lea
repnz
bound
fldl
cmp
push
stos
jns
fldenv
out
je
out
sub
mov
pop
push
mov
or
aaa
jns
mov
pop
xchg
mov
sbb
xor
pslld
xlat
fisubrl
mov
adc
cmp
mov
stos
pop
add
mov
shrb
fistl
add
scas
lea
test
dec
and
sbb
int3
into
xchg
cmc
ret
mov
sbb
arpl
fsubr
nop
mov
inc
lods
rcl
mov
arpl
jae
jae
inc
mov
loope
ret
push
fldcw
push
mov
repz
rcl
ret
sti
mov
bound
xchg
push
fsub
add
daa
xchg
movsl
repz
aam
jae
shlb
orl
push
adc
mov
rclb
adc
lahf
popa
test
iret
xlat
and
daa
repnz
or
push
jno
sbb
cmpsl
out
mov
sub
aam
pop
adc
or
adc
icebp
iret
xchg
and
fiaddl
ficoms
rcl
call
and
out
or
jmp
adc
lret
jne
addr16
jnp
mov
cmp
add
inc
lods
inc
test
test
mov
stc
movsb
leave
repnz
inc
and
shlb
mov
push
pop
jge
jae
push
fsub
lret
pop
clc
lcall
aaa
xchg
cmc
fcmove
sub
test
gs
sbb
aam
push
ss
mov
sub
pop
xchg
push
jle
aam
inc
add
mov
xchg
rclb
mov
rorb
push
mov
shlb
push
in
mov
aaa
sbb
or
dec
sub
rorl
in
rol
dec
stos
hlt
js
xchg
sbb
mov
cmpb
ljmp
orl
inc
add
inc
sub
adc
mov
push
insb
jo
push
pop
inc
into
int3
outsl
sbb
or
daa
stos
sbb
inc
jns
call
pop
xor
imul
or
shll
gs
mov
jp
pop
mov
xorb
pop
dec
jle
or
add
jecxz
mov
mov
push
mov
addr16
or
shrb
push
test
adc
jbe
sub
arpl
jecxz
add
mov
int
mov
fisttpl
in
dec
cwtl
mov
roll
pop
mov
enter
dec
jb
jne
pop
xchg
loopne
ljmp
add
cmp
stos
sub
lea
outsb
cmp
pop
sbb
sub
gs
aaa
inc
pop
testl
jl
dec
out
aas
xor
call
shrl
outsl
cmpsb
pop
stos
push
pop
dec
je
push
sub
imul
leave
cmp
xlat
repnz
out
mov
mov
out
mov
aas
xchg
sbb
ret
mulb
outsl
pop
sub
aas
bound
lahf
xor
es
sbb
imul
xchg
mov
and
cmp
push
sub
faddp
pop
sub
or
dec
lret
sbb
shrl
sub
push
gs
lea
into
push
pop
jle
stc
jle
push
lret
dec
mov
xor
mov
sti
out
test
lret
std
jnp
push
enter
dec
mov
lahf
mov
xchg
fdivrl
cltd
inc
ss
in
or
add
dec
aaa
mov
inc
mov
cmp
xchg
adc
scas
xchg
ljmp
adcb
sbb
test
hlt
js
rcl
aam
and
test
and
mov
fldcw
cltd
lods
and
pop
mov
push
les
inc
jle
jno
mov
jmp
shrl
add
add
inc
jnp
dec
dec
mov
filds
jle
sub
inc
push
sbb
out
jae
pop
out
sahf
push
repz
icebp
xlat
rorl
jno
shll
mov
push
fsubr
leave
popf
mov
inc
mov
inc
gs
jbe
enter
inc
fiaddl
les
push
scas
push
pusha
imul
adc
inc
inc
mov
daa
mov
push
movsb
inc
push
cld
es
incb
cmp
jae
cltd
sub
testb
sbb
adc
pushf
rcrl
fbld
mov
inc
repnz
or
pop
xchg
pop
andl
ljmp
mov
dec
mov
out
add
add
xchg
cmpb
bound
cmpsb
aas
inc
outsb
push
xchg
pop
mov
rcrb
inc
popf
mov
rol
leave
cli
hlt
testl
pop
pop
mov
imul
dec
jns
push
adcb
jno,pt
subb
jle
popa
inc
movsl
flds
cmp
fwait
and
jge
je
daa
jle
cmpb
cltd
jbe
lret
cltd
push
xchg
inc
and
into
sbb
test
jb
out
xor
xchg
adc
adc
int
or
dec
dec
xchg
pop
cld
xchg
lods
out
pop
xor
fnstsw
sub
push
testl
and
sub
xchg
ucomiss
std
cmp
lea
and
sub
sub
shll
adc
mov
mov
aad
daa
mov
movsb
sti
mov
cmpsb
cmp
enter
xchg
inc
inc
cmp
dec
inc
es
cmc
pop
rcl
add
imul
shlb
push
sbb
fxch
ja
loopne
or
cltd
pop
shl
orl
xchg
aad
jb
adc
loopne
leave
push
scas
fwait
out
lcall
and
dec
jmp
cli
std
pop
push
mov
sub
cmp
arpl
xchg
test
dec
aam
dec
mov
sbb
xor
into
fnstsw
cmpsb
aas
mov
xchg
mov
test
jmp
stos
test
pop
movsb
hlt
aaa
or
cmpsl
push
test
or
outsl
mov
xor
xchg
into
pop
sub
or
sub
fsubrs
adc
into
out
ret
in
sbb
pop
mov
mov
aam
inc
xor
lock
push
jae
sahf
adc
insb
jl
push
push
xor
push
lock
test
neg
sbb
xchg
jo
jmp
fwait
cwtl
push
lidtl
lret
or
push
das
inc
sbb
mov
cltd
enter
xchg
insl
addr16
add
sub
sbbl
pop
rorb
adc
in
mull
inc
jo
xchg
pop
cmp
mov
out
mov
pop
enter
mov
into
std
adc
adc
imul
push
outsl
sbb
pop
and
mov
push
lcall
lds
push
test
mov
aas
and
pop
xor
jb
faddl
fists
mov
add
lcall
dec
sti
mov
loope
scas
xchg
imul
call
and
daa
or
clc
sub
mov
xchg
and
cmp
mov
pop
ret
rol
adc
test
sbb
dec
mov
sbb
fs
push
shll
rorl
das
hlt
shrb
test
fistps
and
sbb
pop
inc
lea
adc
add
push
add
push
xchg
lret
pop
enter
scas
add
std
xchg
pop
pop
and
jno
aaa
sub
and
in
push
mov
inc
and
addr16
sbbb
negb
mov
outsb
xor
int3
mov
cmp
pop
lock
mov
lods
fimull
cmp
add
push
les
push
imul
fwait
test
sub
lahf
mov
inc
dec
cld
mov
lds
sbb
dec
int
shll
mov
leave
and
aas
insb
dec
imul
mov
inc
sbb
jo
shll
mov
daa
repnz
inc
jae
cmpsl
out
aad
lods
sti
lahf
inc
out
test
jns
adc
pop
jo
dec
xchg
cmp
jmp
movsl
leave
movsl
lock
cwtl
adc
std
div
xchg
movsb
sbb
or
jmp
push
popf
fcmovbe
shll
in
mov
adc
jnp
pop
fidivl
mov
jg
imul
xchg
hlt
sbb
repz
jl
mov
and
lret
loop
push
sub
push
jnp
rol
jmp
cli
cmp
hlt
inc
sbb
mov
and
mov
es
inc
push
out
inc
lret
stc
outsb
dec
cmp
test
pop
and
mov
push
cmp
fdivs
sub
mov
dec
and
stos
adc
lahf
mov
es
mov
pop
jae
je
sub
adc
pusha
call
xor
dec
or
jge
sbb
xlat
leave
popf
bound
in
pop
test
push
movsb
or
push
fdiv
test
adc
aaa
sbb
inc
mov
test
cmpb
mov
mov
or
xchg
test
fnstsw
insl
xchg
mov
jmp
or
enter
xchg
pusha
push
dec
loope
adc
mov
lock
pop
test
int3
sub
call
ficoms
cmp
filds
int3
into
stc
dec
sbb
sub
stc
jo
fs
mov
fcmovb
inc
and
xchg
or
and
lods
cmp
outsl
jae
sbb
mov
aad
hlt
test
push
lock
push
add
vmovupd
mov
in
fidivrs
pusha
mov
cs
test
pop
in
leave
inc
xor
jp
push
add
ficompl
movsb
cld
ret
mov
cltd
add
or
xor
add
les
dec
lahf
cmp
ret
popa
clc
cmp
insl
cmp
mov
dec
adc
cmp
mov
jnp
sbb
testl
jmp
in
xchg
pop
in
sti
arpl
outsl
scas
imul
jmp
les
mov
or
in
mov
jb
xor
xchg
fnstenv
push
cmp
or
xchg
mov
popa
movsl
imul
cmp
mov
push
xchg
lahf
es
dec
es
fisttpl
jo
jae
popf
addr16
sbb
cmc
fwait
dec
icebp
stc
jbe
cmp
scas
inc
dec
shrl
xor
ret
jle
sub
aad
xor
sbb
lret
lret
jnp
sbb
fs
fdiv
mov
pop
or
mov
imul
mov
lahf
movsb
sbb
xor
pop
sbbl
mov
push
cmp
or
xchg
lods
jno
cli
outsb
ljmp
push
and
ret
stos
leave
inc
jp
arpl
popf
mov
xchg
pusha
push
push
loop
mov
cwtl
out
out
daa
je
add
lods
mov
rclb
push
cmc
rcrb
shl
mov
dec
jecxz
lret
aad
xchg
xor
mov
jle
xchg
bound
into
add
movsl
sub
xchg
adc
and
das
mov
mov
scas
mov
enter
aam
mov
leave
and
movsl
orb
cmp
clc
dec
or
pop
mov
cmpsl
dec
popf
pop
rorl
fs
in
jne
inc
jecxz
pop
lahf
cmc
repnz
in
fisttpl
sub
or
inc
inc
jmp
movsl
or
pop
mov
test
aam
dec
sub
clc
imul
mov
mov
hlt
test
popa
icebp
dec
insl
inc
hlt
fs
lret
adc
pop
sub
cmc
cmpsb
or
nop
xor
mov
push
outsl
sti
pop
pop
lahf
push
mov
cltd
inc
lock
sti
and
sahf
adc
call
pop
test
cltd
add
andb
jbe
xchg
adc
mov
mov
dec
test
jg
mov
sub
insl
dec
and
and
push
rol
and
cli
aaa
dec
aam
imul
pop
push
pop
add
add
mulb
mov
lock
push
imul
mov
cmc
orb
inc
das
adc
fwait
pop
aam
mov
mov
or
push
out
repz
aas
fdivr
or
orb
test
pop
pop
lret
sub
mov
push
fwait
mov
push
sub
clc
dec
ret
and
pop
pop
push
inc
insb
pop
test
jecxz
mov
adc
xchg
push
sbb
stos
in
sbb
jmp
and
cmp
mov
or
sub
xchg
fildll
and
iret
dec
push
in
sarb
fcmove
ret
or
sbb
imul
dec
imul
push
imul
je
mov
imul
divb
clc
xor
mov
in
fcomi
imul
pop
stos
jb
dec
cmp
fldl
mov
jmp
or
add
test
ret
cltd
mov
push
nop
or
out
xor
clc
add
mov
sub
das
sbb
andl
and
jecxz
repnz
push
lret
push
popa
xlat
sub
int3
pop
lods
iret
jg
ss
push
ss
iret
addb
cmp
cmp
cmc
push
or
jbe
xor
sbb
lea
in
inc
push
test
ja
movsb
xchg
mov
lret
push
push
xchg
pop
mov
int3
sbb
fnstsw
jp
test
mov
mov
push
mov
jle
fcoms
inc
mov
out
jmp
jns
fabs
and
mov
mov
hlt
or
loope
aad
mov
pop
call
mov
cmp
jge
imul
inc
es
mov
add
clc
sbb
aas
arpl
jne
subl
mov
fidivs
xor
cwtl
out
pushf
sbb
js
mov
stc
rcl
stos
mov
out
push
add
scas
mov
push
and
xchg
es
fldl
fists
loopne
hlt
ja
lahf
aas
xor
enter
mov
sbb
add
push
data16
fisubrs
jmp
fmull
jns
jp
pop
pop
leave
sub
pop
jnp
jg
cmp
cmc
shld
cmp
xchg
and
jb,pt
shll
stos
and
jb
sti
add
xchg
or
test
push
pusha
shlb
cwtl
xchg
insl
mov
divb
out
mov
repnz
aam
dec
cwtl
inc
inc
or
push
mov
sub
loopne
addl
fnstcw
jge
adc
mov
ret
sub
jne
fstl
daa
xor
cmpsb
popf
or
mov
sbb
addr16
in
mov
repnz
out
inc
add
xchg
fildl
jmp
mov
pushf
rcr
jge
out
out
loopne
out
inc
and
ret
pop
leave
mov
mov
in
movsl
aam
jle
mov
jns
jge
aam
push
pop
jl
cltd
imul
mov
mov
pusha
xchg
ficoml
xor
mov
lea
dec
inc
out
mov
scas
and
arpl
outsl
jp
pop
mov
jmp
ss
dec
pusha
aas
pop
xchg
cs
jmp
rorl
xlat
jl
xlat
insl
cld
mov
jge
aam
dec
jae
inc
daa
outsb
stos
pushf
fidivrs
sbb
mov
jns
aam
push
lea
inc
xor
fistps
out
shl
xchg
jno
inc
lods
adc
pusha
or
stos
and
jp
jge
fisttps
and
ds
sub
aam
push
mov
xor
ljmp
js
mov
pop
adcl
std
imul
rclb
scas
fmuls
mov
ficompl
in
fisttpll
test
or
mov
xchg
mov
mov
mov
push
lods
test
mov
outsl
int
movsb
cmp
repnz
dec
dec
aaa
or
pop
ja
adc
cmpsl
dec
add
mov
xchg
mov
outsb
cmp
icebp
push
out
lahf
rclb
popf
mov
stos
and
mov
add
adc
std
pop
xchg
xchg
js
loop
sub
je
pusha
pop
into
hlt
dec
pop
out
mov
adcl
add
mov
dec
or
ret
add
cmpl
inc
adc
ja
movsl
jg
insl
sub
test
or
je
push
arpl
pop
aaa
sti
mov
dec
sbb
mov
mov
adcl
add
jmp
jnp
test
fdivs
mov
cmpsb
popf
cmpsl
mov
stos
neg
mull
sub
mov
repz
sahf
add
mov
push
repnz
xchg
pop
icebp
jno
sub
inc
sbb
jg,pn
in
mov
repz
push
imul
mov
or
and
insb
xchg
mov
mov
lock
pop
push
and
jae
popa
sub
pop
in
cli
dec
loope
testb
jmp
pop
xor
inc
push
loope
bound
xchg
mov
js
outsl
dec
shlb
cli
xchg
shll
pushf
jb
mov
mov
pop
clc
xor
lds
cs
xchg
std
add
mov
sub
fs
push
push
dec
jnp
sbb
add
push
cmc
inc
pop
lret
aaa
not
test
push
movsl
and
outsl
daa
inc
sbb
push
xchg
cli
es
and
cwtl
fmuls
into
fidivs
xchg
sbb
mov
leave
adc
aas
sbb
sub
xlat
add
xchg
shlb
xchg
xchg
xor
xchg
hlt
mov
dec
xchg
pop
xor
addl
cmc
and
les
imul
aad
mov
sbb
popf
aas
fisubrs
jne
sti
not
sbb
leave
or
dec
sbb
outsl
xor
dec
and
sbb
sbb
xchg
stos
mov
dec
sbb
notb
movsl
mov
loopne
dec
xchg
sbb
dec
aam
int3
mov
mov
ja
and
lods
adc
out
adc
dec
adc
enter
inc
outsb
in
cmp
mov
gs
push
and
hlt
push
and
mov
mov
adc
mov
pop
lods
in
test
cmp
rcrb
out
ja
rclb
subb
mov
adc
popa
cmp
ss
pop
push
jg
dec
fmul
jp
mov
adc
push
cld
shll
test
jmp
popf
or
fwait
rclb
insb
jl
fs
pop
notb
sub
xchg
push
shrl
ret
jnp
inc
mov
add
stos
inc
mov
sti
jmp
xor
mov
dec
add
iret
cltd
ss
sbb
pop
xor
in
lds
add
pop
test
cmp
jg
fldenv
mov
or
xchg
fcomip
sub
nop
in
mov
orl
pushf
fisttps
sub
mov
insb
stc
sub
mov
mov
aaa
je
imul
movb
xchg
mov
add
std
mov
mov
inc
jmp
inc
and
jns
imul
cld
cmp
cmp
xchg
scas
jno
fdivl
hlt
or
fs
shrl
lds
lock
gs
jne
mov
jp
cs
pusha
jnp
mov
loop
push
pop
mov
cld
pop
jl
xor
hlt
es
mov
dec
add
ljmp
pop
ret
mov
enter
inc
into
or
pop
neg
pop
es
scas
ret
test
xor
mov
ret
mov
repnz
xchg
xor
loope
push
or
andb
sub
mov
jl
cld
and
fwait
outsl
mov
sub
rolb
jno
call
cmp
out
push
in
pop
xchg
xor
jne
xchg
fstpl
pop
out
aam
xchg
push
out
in
adc
xor
mov
mov
inc
mov
cs
daa
or
xchg
mov
add
neg
or
inc
cmc
fwait
mov
push
push
out
or
xlat
nop
bound
push
xchg
adc
sahf
ret
cwtl
test
mov
std
adc
adc
addl
xchg
cld
insl
pop
jmp
adcl
dec
into
or
mov
movsl
aam
les
call
popf
mov
into
push
and
push
das
shll
aaa
fsubrs
cmpsl
repnz
sbb
stos
xchg
mov
dec
mov
ret
push
shrl
je
idiv
test
mov
mov
xchg
icebp
int3
jbe
add
adc
in
push
jle
lea
pushf
test
xchg
push
pop
jne
sbb
fstpl
adc
pop
ret
add
pop
loop
inc
sbb
inc
testb
or
dec
and
adc
pusha
jbe
sahf
fwait
inc
movsb
insl
and
das
sbb
sahf
fstpl
jg
xchg
les
das
stc
xor
pop
xor
or
xor
pushf
out
stos
ret
adc
das
adc
pop
mov
imul
push
adc
icebp
out
lods
adc
fdivl
jmp
mov
jle
mov
cs
fs
sarb
outsb
sub
daa
sub
fcomps
cmp
cwtl
sub
cs
jne
or
adc
sbb
insl
iret
add
fstp
imul
mov
arpl
fwait
inc
jbe
and
out
push
cltd
jmp
jbe
mov
faddl
or
pop
dec
dec
loop
jp
xchg
out
push
inc
jge
jb
add
lods
sub
inc
js
mov
and
mov
lcall
fsin
lret
sahf
and
movsb
sti
stc
sub
xor
jae
pushf
sahf
icebp
fcoml
mov
pop
xchg
jecxz
fbstp
loop
scas
shr
icebp
jo
lcall
push
les
and
dec
jno
inc
fisttpll
and
inc
add
and
jae
xchg
fwait
cmp
cvtdq2ps
leave
xchg
cs
jno
xchg
jmp
push
dec
sbb
sti
in
sub
jbe
and
sbb
aam
xchg
xchg
addr16
addr16
out
insb
jno
mov
mov
popf
inc
jnp
push
fcomps
sub
mov
shll
sbb
cltd
adc
lret
clc
mov
shlb
mov
test
add
or
in
cmc
gs
jno
xchg
aam
clc
mov
aaa
hlt
mov
pop
pop
addb
repnz
lods
xchg
push
or
mov
imul
fbstp
adc
leave
push
inc
das
mov
addb
inc
cmp
push
push
test
jle
dec
fidivrs
ss
lcall
add
lods
jp
shrb
fisubrs
jp
movsl
lcall
xchg
popa
xchg
out
mov
out
in
mov
ljmp
dec
mov
loope
cs
pop
mov
or
xchg
out
mov
std
rcl
mov
sarl
inc
sahf
clc
stos
aam
push
stos
pop
jecxz
popf
xor
inc
push
sbb
pop
addr16
jb
dec
pop
mov
outsb
dec
les
movb
cld
lods
js
inc
mov
repz
sub
sbb
sbb
je
lcall
jp
inc
pop
push
repnz
dec
loopne
mov
in
pop
xor
sub
jl
sub
scas
lcall
iret
xchg
mov
idiv
mov
adc
xchg
ds
jb
and
xor
int
mov
jge
ds
in
psubusb
xchg
pop
lods
cltd
icebp
cmp
adc
lds
sbb
cltd
nop
adc
dec
push
icebp
in
les
pop
inc
mov
movsl
fidivrs
jmp
jmp
dec
movsb
sub
ja
pop
mov
imul
gs
daa
mov
or
inc
fwait
xchg
and
js
xchg
loop
stos
cltd
xor
test
adc
test
ds
enter
sahf
adc
hlt
cmp
or
cwtl
jg
lcall
adc
jne
out
or
jbe
cli
stos
sub
jo
jae
mov
lods
and
xor
ret
sbb
subl
lock
sbb
pusha
repz
sub
adc
push
cli
int3
adc
punpckhbw
xor
mov
mov
cwtl
lcall
pop
xchg
test
adc
mov
pop
nop
int
pop
sbb
out
pop
frstor
pusha
push
mov
mov
clc
lcall
fistpll
jmp
inc
imul
xchg
shlb
pop
or
jmp
jmp
sbb
sar
xchg
shll
pop
jne
mov
lock
mov
ja
pushl
sbb
fmull
mov
mov
dec
mov
fistpll
xorb
mov
frstpm(287
ret
std
xlat
sbb
add
mov
jl
pop
cmp
out
mov
mov
inc
jnp
insb
lods
jge
and
xchg
adc
dec
cmc
mov
movsl
sub
jge
mov
dec
sub
bound
das
cmp
push
mov
fildl
inc
mov
test
xor
sahf
sbb
inc
sbb
pop
mov
lret
adc
aad
xor
sbb
mov
xor
aad
insl
sub
xor
jg
cltd
ret
lahf
shrb
stos
push
or
and
cmp
xchg
imul
sbb
sub
add
fstpt
push
cmp
xchg
lods
mov
push
inc
xlat
sbb
push
xchg
dec
mov
cmp
bound
jecxz
adc
mov
or
mov
or
cmp
repnz
icebp
pusha
cmp
xor
shrb
jnp
jmp
lcall
inc
frstor
ja
mov
ret
ret
push
lods
jp
inc
hlt
adc
test
mov
or
lea
mov
cltd
cmpsb
push
lcall
sub
cmp
xchg
push
sub
sbb
pop
fwait
leave
pop
or
mov
mov
aas
jno
cltd
loop
js
cmp
aad
movsl
popa
mov
enter
lea
xchg
pop
sbb
jnp
sub
sub
cmpsl
mov
jo
push
push
call
xlat
fdivrl
pushf
rorl
addr16
jmp
sbb
cmp
aad
jp
aad
test
addr16
shrb
fimull
inc
jne
push
in
mov
loope
lret
rclb
mov
or
jg
xor
shlb
pop
adc
rcr
and
mov
adc
ficoml
daa
mov
sub
mov
mov
mov
cld
mov
ror
jle
cmp
lahf
inc
jg
ljmp
out
js
pop
stc
inc
push
mov
mov
and
jbe
movsl
ja
lcall
xchg
leave
sarb
loopne
mov
jmp
js
mov
pop
push
lock
jns
icebp
aad
xchg
pop
test
mov
pusha
ss
in
or
xor
push
pand
clc
in
cmovle
mov
and
aam
xor
inc
je
and
xchg
mov
outsb
and
lods
ljmp
addr16
sbb
ljmp
dec
sub
xchg
es
dec
push
lock
pop
dec
pop
mov
inc
push
xor
xchg
push
mov
sbb
mov
push
adc
inc
cltd
pusha
in
movb
popf
push
cmp
cmp
pusha
loope
js
sarb
push
pop
leave
int3
sbb
push
mov
je
push
int
mov
loope
sarl
out
dec
stos
repnz
push
ror
pop
outsb
jg
repz
insl
mov
notb
aad
sti
sbbb
shlb
mov
mov
leave
or
sub
mov
push
xor
adcl
int
pusha
sub
add
dec
ljmp
mov
insl
mov
and
mov
loop
pop
pop
fdivrp
sarl
inc
or
pop
imul
xchg
cmp
icebp
dec
jne
mov
jecxz
mov
or
inc
jmp
popa
roll
roll
push
repnz
xchg
and
add
filds
roll
cmp
lds
lods
push
push
daa
mov
mov
js
xor
jnp
lcall
enter
lea
push
dec
adc
xchg
dec
adc
repz
nop
lods
mov
insl
xchg
xchg
sahf
push
std
cli
adc
cmpsl
cmpsb
jne
push
sub
xor
sbb
fbstp
orl
adc
jl
pop
sahf
insb
pop
push
xchg
orl
push
mov
scas
fadd
mov
or
fstpl
popf
push
mov
rcrb
jo
mov
inc
mov
movsb
test
ret
jg
movsb
mov
push
daa
ss
xchg
shrl
fbld
imul
jne
enter
mov
pop
add
icebp
mov
lahf
ja
xchg
sbb
stc
and
add
iret
adc
add
xchg
sahf
dec
aam
mov
pop
or
and
jo
jae
dec
sbb
in
cmp
xor
rcrb
adc
or
xor
mov
inc
arpl
shr
cltd
lret
xor
jecxz
sahf
xchg
lret
lods
mov
mov
cmpsb
add
xchg
lea
lahf
cmp
xlat
push
xchg
mov
out
ret
mov
mov
rcrl
push
jge
push
or
daa
lock
iret
adc
mov
mov
int3
dec
imul
lock
xlat
insl
stos
push
stos
jmp
xchg
lahf
mov
cmpsb
pusha
jnp
jg
loop
mov
fldt
mov
clc
fisubs
and
sbb
xchg
or
insl
mov
mov
adc
js
sahf
xchg
xchg
lahf
fiaddl
sbb
xor
imul
daa
shll
int
jmp
addb
fstps
out
adc
push
aad
and
leave
jecxz
pop
sub
imul
and
sahf
mov
test
fdecstp
mov
add
andl
inc
add
dec
into
mov
aas
out
aad
ja
mov
sbb
cmp
int3
int3
pop
fsubl
jle
jmp
movsl
cmp
mov
sbb
fsts
push
inc
cmp
fbld
adc
dec
xchg
popf
popa
jb
push
inc
leave
out
mov
add
push
fdivl
fdivs
cld
mov
mov
fadds
gs
jp
test
mov
outsl
adc
sarb
cmp
clc
adc
je
jmp
xchg
or
pusha
jp
psubsw
jmp
push
cwtl
cmp
mov
pop
rclb
stos
jnp
ror
out
jg
mov
and
popa
loope
push
push
stos
repz
iret
sbb
sub
dec
mov
pop
insb
sub
pop
loope
push
mov
in
mov
inc
sbb
rcll
cmpsl
sub
add
and
push
mov
inc
xor
pop
sub
jnp
pop
stos
cld
sub
mov
sbbb
inc
clc
mov
jns
mov
mov
test
mov
xor
inc
cmpsb
cld
stc
mov
adc
sub
movsb
movsb
jg
jge
inc
lods
cmp
inc
int
fisubrs
push
push
data16
sbb
add
scas
pop
lret
leave
jg
inc
dec
cmp
jmp
lea
jg
or
push
pop
xchg
cmpsb
lods
pop
mov
xchg
add
movsb
int3
inc
mov
mov
add
ficomps
mov
pushf
inc
dec
sub
sbb
dec
sub
or
xor
jae
push
out
arpl
test
mov
mov
dec
push
ss
movsl
or
daa
pop
or
push
rol
sarb
insl
push
add
and
scas
mov
pop
mov
adc
dec
jno
mov
bound
ljmp
arpl
loope
sbb
mov
shrb
push
sbb
and
xchg
scas
push
insl
cmpsb
mov
fsts
adc
adc
or
into
fidivrl
loope
les
mov
cs
cwtl
xor
xor
pop
xchg
jne
add
test
xchg
in
xor
adc
imul
cmc
inc
sbb
adc
mov
mov
js
mov
xchg
fildll
into
filds
shlb
mov
imul
push
add
jecxz
jg
mov
add
insl
mov
les
sbb
pop
fsts
mov
inc
shlb
push
mov
hlt
adc
inc
mov
adc
loop
cmp
push
inc
scas
mov
fbstp
mov
mov
dec
mov
mov
jno
lds
pusha
mov
adc
sub
insl
pop
sbb
ja
adc
or
imul
xchg
mov
stos
repz
or
add
je
sbb
negb
fistps
nop
sbb
imul
pop
repnz
es
out
clc
inc
loop,pn
adc
insb
insb
add
jp
add
fwait
xchg
jnp
inc
data16
dec
les
inc
inc
sahf
or
adc
daa
mov
das
dec
adc
xchg
sbb
pop
mov
dec
dec
and
mov
lret
push
dec
out
jo
pusha
sbb
and
out
mov
pop
lea
xor
imull
jb
js
shr
xlat
pop
cli
ret
loope
push
rcr
arpl
mov
inc
sub
ret
fcomi
add
sub
sub
imul
push
mov
fsubl
popl
push
sbb
and
movsb
loopne
fwait
ss
movsb
adc
dec
xchg
int
aaa
pop
enter
add
shrl
cmp
fildl
cmp
inc
cs
xchg
mov
push
loope
push
and
push
aad
cltd
call
mov
add
dec
lods
in
pop
pop
movsl
test
frstor
scas
xchg
ficoms
aas
loop
nop
mov
nop
pushf
lea
gs
add
adc
jno
out
cltd
and
push
add
stc
push
cmp
mov
icebp
mov
jno
jmp
loopne
mov
add
aad
mov
xor
shrl
out
ljmp
adc
xchg
ja
test
rcrl
nop
aad
sbb
jo
imul
icebp
push
test
inc
adc
icebp
push
cmp
dec
lds
cli
jp
pop
pushf
ss
movsl
hlt
aad
push
movsb
movsl
inc
call
clc
orl
in
sub
pop
push
or
and
mov
pushf
sub
ret
sbb
jbe
fistps
data16
roll
mov
xchg
fsubrl
push
lods
mov
out
xchg
pusha
mov
push
addl
pop
pop
inc
std
sbb
ficompl
cmp
outsb
fwait
mov
testb
add
daa
mov
adc
mov
ss
pop
push
mov
lcall
aaa
fiaddl
or
jae
rcrl
dec
mov
add
mov
ja
mov
shll
test
das
pop
and
cmc
push
fisttpl
in
loope
mov
xchg
lret
push
adc
sbb
add
repz
or
cmp
and
cmp
fildll
and
inc
or
xor
sbb
iret
repnz
mov
adc
cmp
lea
mov
xor
mov
push
jnp
jge,pt
nop
pushf
mov
push
enter
add
mov
repnz
lahf
xchg
xchg
popa
sbb
sub
outsb
pop
adc
lret
jo
lcall
push
ljmp
adcl
cld
movsl
out
sbb
nop
mov
mov
nop
ficoms
inc
ret
es
cmp
arpl
loope
sbb
sti
shlb
loop
xchg
in
cmc
insb
hlt
shrl
inc
int3
inc
in
iret
cmp
fisubl
lret
fnsave
popa
push
adc
shl
dec
fidivrs
mov
and
lcall
jo
out
pusha
aas
shlb
imul
mov
pop
push
sbbb
ss
iret
fmull
fldcw
lods
scas
in
sti
vhaddpd
mov
cmp
nop
int
xor
xor
jno
xchg
aad
add
adc
es
cmpsb
or
fildl
xor
push
ds
inc
clc
call
xchg
rolb
mov
jno
jb
cmp
and
adc
sub
xchg
insl
dec
cwtl
push
cmp
lret
leave
xor
in
dec
aad
leave
sub
xor
push
fildl
sbb
test
iret
je
mov
test
mov
pusha
mov
dec
mov
cmc
jo
scas
xchg
push
add
pop
mov
dec
jne
jle
int
fdivr
cmpsb
pop
orl
shl
xor
pop
add
and
fidivrl
into
fistpll
sbb
mov
cli
stos
jno
xor
jge
sbb
cld
or
inc
adc
inc
pop
inc
mov
sti
mov
js
push
andl
lods
adc
adcl
cmp
movsb
into
add
or
roll
mov
jne
and
fisubs
mov
outsb
mov
arpl
mov
sub
insl
and
xor
daa
cmpsb
push
pop
jns
pop
nop
test
mov
jle
push
sbb
fldt
adc
mov
and
jbe
xor
xor
mov
rcrb
inc
pushf
inc
ja
shlb
clc
mov
stos
or
push
mov
pop
shl
jbe
sbb
pusha
and
insl
lods
sbb
fs
push
pusha
imul
jecxz
pop
stc
mov
pop
inc
shl
cmp
add
inc
nop
add
jb
mov
xor
in
push
sbb
xor
and
jle
xchg
xor
call
jne
fmul
add
mov
rcl
and
shrl
scas
cmp
xchg
aad
test
jmp
js
enter
lret
inc
sbb
dec
add
mov
push
stc
mov
addl
jo
mov
push
fs
stos
int3
out
push
adc
sbbl
inc
scas
stos
jg
and
gs
lcall
pop
mov
dec
int
push
mov
push
out
cltd
test
bound
fdivrs
jl
xchg
scas
jo
jp
mov
cmp
test
mov
push
adc
insl
out
fnstcw
dec
js
dec
cmpb
movsb
cltd
test
and
cmpsl
bound
rol
nop
jnp
loop
adc
mov
jae
xor
inc
mov
mov
dec
mov
sahf
xchg
add
flds
inc
call
push
xchg
iret
pop
xor
leave
mov
sti
aas
dec
outsb
xor
xlat
test
mov
aaa
fs
cld
push
imull
and
cmp
mov
cwtl
and
pop
cmp
or
xor
into
shlb
roll
inc
cmp
mov
sbb
mov
mov
add
jb
push
adc
nopl
cmp
inc
jg
or
outsl
out
es
mov
or
sub
pop
push
roll
mov
je
and
xor
dec
fimull
cli
das
loop
adc
mov
xchg
mov
add
leave
mov
lods
push
inc
cld
insb
fwait
sti
mov
shll
mov
out
add
sub
int3
cs
blcfill
cmp
jb
xchg
rorb
pop
inc
and
jg
or
out
sbb
or
std
stc
out
or
push
std
jmp
push
andl
jns
jb
test
push
into
dec
test
push
aas
ja
mov
dec
imul
pop
insl
insb
ror
jle,pn
sub
jp
std
inc
pop
divl
out
sub
sub
jl
mov
das
nop
xchg
mov
push
cli
popf
shrl
das
js
adc
sbb
fstp
and
shll
push
fs
inc
pop
dec
pop
pop
push
or
inc
pushf
mov
repnz
sahf
jb
ds
orl
mov
movsl
addr16
into
fs
in
rcl
sub
xor
test
cmc
mov
inc
cmp
or
sbb
hlt
pusha
lods
les
push
cld
popf
int
loopne
or
and
push
imul
lret
rorl
pop
rcr
push
mov
sub
mov
or
repnz
lahf
clc
mov
repnz
scas
cmpsl
push
jp
mov
imul
rcll
bound
fwait
mov
cmp
mov
or
inc
mov
push
aad
inc
dec
mov
jge
stos
mov
pusha
mov
pop
je
mov
cmp
and
mov
out
mov
ljmp
jno
hlt
into
fldt
inc
push
ja
nop
push
outsb
jno
mov
adc
mov
add
adc
rcl
push
sub
push
enter
aas
or
pop
jae
jl
sbb
inc
enter
push
daa
pop
pop
stc
sbb
sub
gs
shlb
aaa
lret
or
enter
adc
les
cmpsb
popf
jb
push
leave
mov
xor
dec
adc
jg
or
inc
cld
jne
push
outsl
clc
in
push
jnp
xchg
idivb
add
push
sub
cmpsb
jp
mov
mov
and
sub
jno
out
movsb
dec
lcall
rcrl
stc
add
shll
dec
xor
pop
pop
push
lea
pop
js
xlat
int3
insl
adc
and
add
mov
arpl
xor
pop
pop
test
das
xor
ja
cmp
jp
push
cmp
data16
addl
xor
faddl
iret
add
popf
ds
nop
stos
nop
lcall
je
pop
movsl
sub
cli
movsb
jl
nop
shrl
aad
lods
mov
mov
shll
mov
pop
insl
loope
iret
lahf
subb
imul
outsl
cli
xor
or
add
jo
fs
lea
lods
jge
aad
cmp
arpl
sahf
push
lds
add
pop
dec
pop
popa
add
and
mov
sbb
int3
dec
add
movsb
jno
lahf
xchg
adc
mov
cmp
push
push
scas
mov
jae
outsb
aam
outsl
mov
cmpsl
jns
iret
adc
pop
popa
or
xor
push
pop
mov
xor
push
repz
xchg
mov
addr16
jl
cmp
mov
mov
insl
push
add
mov
xorl
shr
dec
shll
add
sbb
repnz
lea
das
popf
jge
pop
inc
pop
jne
pop
or
loope
mov
pop
test
pshufw
xlat
add
pop
sarb
aaa
dec
xor
decl
les
add
stc
sub
jle
mov
adc
mov
adc
in
cmpsl
test
push
xchg
jp
sbb
mov
pop
and
pushf
js
imul
push
jbe
cmpsl
test
ss
insb
lcall
mov
pop
lahf
pusha
jp
inc
dec
jb
cs
loop
int3
cmp
sbb
popf
arpl
std
mov
aas
jg
dec
adc
cmp
fbstp
mov
loopne
mov
mov
dec
jns
fsubrl
push
push
loopne
jecxz
test
sub
insl
mov
sbb
pop
push
push
out
xchg
adc
ljmp
std
xchg
lods
test
ret
jmp
int3
lahf
insl
das
stos
fcmovnu
int
lock
mov
loop
andb
fsubl
mov
ss
push
add
xchg
adc
dec
lret
sub
xor
sti
xchg
pop
jmp
or
cmp
in
add
es
insb
jbe
add
xchg
imul
rorb
mov
dec
stc
aaa
pop
imul
rolb
cli
pop
imul
cmc
sub
icebp
jns
dec
cli
push
push
lods
loopne
pushf
fisubrl
pop
sub
push
out
pop
inc
jecxz
int
call
mov
test
call
pop
jge
dec
mov
loopnew
push
inc
or
mov
pop
imul
jns
jp
fistl
and
jbe
sbb
adc
loopne
and
push
rorb
aad
cltd
pushf
jb
mov
push
add
pop
mov
mov
cmp
jle
mov
or
push
or
sbb
stos
inc
mov
sub
testl
push
cmc
inc
enter
call
jg
xor
repnz
and
test
leave
int3
sub
test
jnp
push
hlt
inc
pop
shrb
cmp
xchg
push
cmp
stos
inc
inc
fadds
dec
fstps
popf
sub
jge
imul
pop
inc
jae
add
adc
cmp
jnp
or
adc
dec
and
inc
jecxz
xor
mov
stos
enter
pop
cwtl
and
addr16
cmp
mov
lock
mov
mov
dec
pop
mov
xchg
jmp
loop
int3
stc
fcom
sub
sub
jp
push
insb
jae
mov
cmpsb
dec
ffree
adc
out
aam
jne
movsb
outsl
cld
jnp
in
fisttpll
pop
and
adc
xor
jno
inc
into
fdivs
jge
sbb
add
in
jl
push
mov
sub
inc
mov
addr16
mov
popa
mov
rorb
adc
mov
hlt
inc
or
in
lods
inc
pop
mov
dec
xor
clc
jns
stc
lods
gs
dec
or
mov
push
mov
adcl
push
ss
inc
lods
mov
lods
outsl
mov
pop
push
popa
xor
aas
jecxz
lret
or
js
lea
mov
out
xchg
pop
and
xor
ja
jbe
pop
jle
mov
scas
push
fucom
inc
rcrl
insl
cmp
sub
mov
pop
movsl
mov
out
loope
out
sub
in
add
add
daa
pop
in
lock
pop
por
cs
push
inc
fcmovu
mov
loop
push
jb
mov
pop
ss
sub
arpl
es
add
shll
aam
adc
call
and
pop
inc
test
gs
enter
xlat
ja
outsb
movsb
push
aam
out
rclb
fwait
gs
xchg
jne
pop
push
in
dec
sahf
in
mov
cmp
repz
data16
or
push
sti
xor
lock
mov
cwtl
pop
gs
xchg
and
push
inc
push
dec
movsl
xor
adc
ljmp
cltd
mov
and
jmp
mov
mov
mov
in
ljmp
sarl
mov
aaa
xor
clc
jo
fwait
xor
cmpsb
mov
dec
add
jno
pop
stos
sub
jg
test
popa
fldt
ss
fiaddl
pop
add
movsl
adc
sti
rol
ds
jge
cli
shl
jae
mov
mov
xor
in
test
call
sbb
hlt
and
mov
iret
add
dec
add
sbb
rcr
pop
mov
lcall
sub
cmpsl
fwait
or
sub
dec
aas
jl
punpcklwd
scas
insl
push
xorb
add
out
jl
sub
jns
hlt
or
in
inc
clc
inc
leave
sub
call
repz
xor
push
xchg
jge
ffreep
mov
insb
sbb
ret
xor
sub
icebp
and
cmp
or
decb
inc
loope
inc
imul
cmp
fisttpl
adc
mov
lcall
add
mov
popf
fstpl
outsb
cmpsl
jnp
mov
fidivrs
in
cmp
insl
stos
push
jb
comiss
jne
int3
negl
adcl
imul
loop
repnz
inc
and
pop
cltd
pop
xor
or
sar
inc
mov
jnp
pop
pop
out
or
in
mov
fimuls
imul
mov
js
sub
jns
popa
or
inc
and
cltd
xchg
mov
int
jno
xor
out
mov
and
shlb
sub
rorb
lods
mov
in
pop
out
leave
dec
xchg
cmpsl
lock
cmp
dec
int3
aad
call
mov
sbb
add
fmull
sbb
push
cmp
inc
stos
sbb
lcall
mov
sub
sbb
adc
mov
test
xchg
das
inc
dec
fstpl
add
dec
dec
cmpsb
hlt
jg
test
dec
je
into
sub
jae
mov
pop
and
bound
out
cmp
inc
push
add
mov
aaa
or
hlt
je
mov
js
das
xchg
cltd
arpl
adc
and
nop
mov
mov
push
jmp
in
xor
or
pop
and
fdivrs
pop
dec
insl
mov
fwait
jg
je
jb
dec
lret
sti
enter
cmp
rcrb
sub
enter
or
mov
inc
mov
mov
testl
aaa
adc
shll
mov
pop
xor
cmp
sbb
dec
pop
cmp
inc
push
cs
cmp
iret
lds
jb
dec
ficoms
rcrb
dec
scas
fsubs
test
sub
push
adc
cltd
in
pop
sub
outsl
out
scas
cmpsl
xlat
and
insb
pop
shll
in
cmc
test
movsb
mov
xchg
cmp
out
mov
sub
int3
fstpt
rcr
out
xchg
inc
leave
icebp
push
loopne
bound
inc
xor
imul
sbbb
or
clc
fsubrl
pop
pop
fldenv
mov
daa
jnp
mov
xchg
xchg
in
out
pop
subl
cmp
mov
xor
cmp
or
add
in
adc
cmp
stos
fcmove
inc
sti
xchg
inc
jmp
jge
sahf
pop
sahf
xlat
mov
fcomip
js
test
test
sub
mov
fnstenv
enter
dec
lret
adc
scas
mov
fcmove
inc
push
adc
jge
imul
sub
aad
insl
adc
iret
std
or
xchg
or
xchg
pop
mov
test
mov
aas
aas
add
loopne
gs
sti
jbe
pop
and
ret
scas
jg
arpl
daa
leave
add
icebp
cmpsl
xchg
push
aad
sub
daa
jmp
jne
mov
aaa
clc
mov
add
sti
mov
cwtl
jb,pt
lret
mov
loope
jge
addr16
sub
fwait
jne
sbb
xchg
repnz
mov
lret
xchg
mov
rorl
and
add
sub
and
test
daa
enter
add
adc
int
leave
test
cmp
scas
mov
sub
add
jmp
in
adc
cltd
lcall
mov
push
xchg
jp
test
jo
mov
and
sbb
dec
aaa
out
adc
jecxz
xchg
icebp
sti
push
jmp
xchg
mov
sub
mov
mov
adc
lahf
dec
xor
aad
adc
fwait
mov
jb
pop
sbb
into
and
mov
decl
imul
lods
xor
sahf
mov
sub
repz
jl
sub
jno
adcb
add
add
jle
repz
push
lret
aam
out
adc
int
lods
in
outsl
movl
popf
cmp
sub
jnp
sbb
cwtl
sarl
jecxz
movsb
mov
rcrb
push
repnz
add
daa
inc
pop
ret
cmp
out
repz
mov
andl
jae
testl
cs
xor
and
lret
mov
iret
cltd
addr16
lret
and
bound
inc
into
sbbl
jb
xorb
add
scas
inc
mov
jmp
and
mov
stos
jnp
mov
in
pop
int3
inc
inc
shl
out
scas
mov
bound
ljmp
sbb
out
out
into
into
cs
ss
dec
push
sub
test
popl
push
daa
out
jmp
in
mov
xchg
pop
xchg
or
jmp
in
xchg
repnz
mov
pop
mov
inc
aas
test
xchg
sbb
in
push
dec
adcl
and
mov
mov
addr16
iret
gs
mov
rorl
iret
hlt
mov
std
mov
mov
cmp
mov
jno
in
lcall
gs
test
push
lods
jo
xorl
repnz
add
mov
les
pushl
mov
lret
push
and
into
jp
ficoms
xor
inc
dec
sbb
vmread
mov
cmpsb
loopne
pop
cmp
pushf
jl
xor
pop
pop
ficomps
jbe
mov
pop
out
andb
add
mov
pop
inc
orb
cmp
dec
shl
push
mov
lock
call
movsb
cs
out
add
mov
and
test
mov
test
mov
ficoms
xor
mov
jp
xchg
xor
aad
addr16
stc
sbb
aad
in
dec
sub
mov
xor
xchg
and
repnz
inc
pusha
cmpl
sbb
gs
sbb
cmc
jp
push
sbb
push
fldenv
sbb
stos
repnz
testl
push
cs
ds
mov
inc
decb
xlat
pop
push
or
pop
mov
jecxz
xor
sbb
pop
cmpsl
push
imul
out
and
out
sarl
fnstsw
pop
lods
repz
cmpsb
jmp
ljmp
xchg
gs
cld
xor
adc
or
fdivl
rorb
mov
mov
in
cltd
out
cld
jae
add
inc
loope
scas
sub
enter
push
movsl
push
imul
pop
ret
je
xlat
imul
fsubl
jns
push
sahf
lea
movb
in
xchg
mov
sbb
or
mov
fwait
push
movsl
sar
je
jmp
aam
cmp
cmp
jns
push
sbb
cmp
or
cmp
jecxz
imul
test
and
stc
dec
add
sub
cltd
or
js
jg
mov
inc
adc
mov
dec
mov
dec
push
lds
mov
cld
pusha
ljmp
popa
jmp
test
inc
xor
dec
aaa
rol
and
outsb
lds
hlt
jg
xor
mov
lret
sarl
xchg
sub
inc
jo
cmp
dec
sarl
in
add
mov
int3
mov
sbb
cmp
loopne
pushf
cmp
and
into
add
sbb
ret
cwtl
add
lock
fildl
mov
lods
sub
jmp
inc
lods
fcmovnu
les
add
sub
add
cli
jo
js
cmpsl
adc
ret
arpl
cli
xchg
jp
ljmp
mov
mov
pop
xchg
mov
clc
sub
clc
pop
int3
cmp
mov
mov
jmp
movsl
adc
and
mov
mov
pop
cmp
repnz
fidivl
inc
out
lahf
int
mov
arpl
test
xchg
dec
sub
push
dec
jne
insl
mov
std
adc
sbb
xchg
pop
jmp
sbb
xchg
cli
mov
mov
out
imul
les
xchg
cmpsl
ljmp
add
push
and
aaa
and
sbb
xor
and
es
pusha
int3
jnp
adc
or
xor
out
fsubrp
or
sti
cmpsb
int
out
loop
mov
daa
clc
pop
sti
stos
inc
xor
fistl
pop
iret
adc
ljmp
inc
movsl
mov
jecxz
stos
ja
mov
sbb
test
xchg
ret
fnstsw
adc
sti
mov
and
push
mov
push
jl
mov
push
cs
aam
jo
nop
imulb
mov
lods
call
sbb
adc
inc
sub
into
push
xor
ja
add
sbb
fisttpll
jmp
call
stos
fcmovb
lods
sub
pop
cli
cmp
mov
scas
sub
fsub
cli
cmp
cmp
loopne
pop
imul
test
adc
stc
int3
push
xchg
mov
lds
or
inc
add
ss
adc
lret
lea
pop
sub
or
xchg
hlt
mov
push
fwait
jp
mov
je
repz
test
sbb
out
aam
lods
push
mov
push
daa
jmp
dec
mov
or
lcall
hlt
mov
mov
repnz
in
aaa
fstl
pop
fnstcw
jp
xor
mov
sti
and
lcall
lahf
xor
xor
ljmp
jb
jp
lret
lds
bound
mov
and
push
mov
jo
enter
shll
arpl
sub
data16
cmp
mov
and
js
xchg
mov
push
mov
inc
or
js
lock
push
scas
mov
xor
sub
ret
data16
sbb
insb
pop
pop
cwtl
jp
push
out
push
mov
addb
ret
enter
pop
sub
stos
add
push
repz
push
adc
jl
dec
lahf
pop
pop
movsb
shl
int
dec
popf
insl
imul
xchg
and
mov
rcl
in
pop
aaa
loopne
fs
push
xor
push
dec
mov
lahf
mov
scas
lret
clc
sbb
push
dec
mov
inc
xacquire
cmc
cmp
or
push
add
in
mov
cmp
push
cmpsb
repnz
loopne
jo
icebp
clc
stos
mov
sub
push
xchg
int3
mov
push
sbb
or
sub
outsl
ficomps
push
and
in
jnp
into
mov
jmp
mov
and
jp
loop
cltd
inc
push
jo
fdivl
fisubrs
aad
adc
scas
sub
cmp
hlt
test
cmp
pop
aas
mov
test
outsl
sbb
sahf
dec
inc
rorl
icebp
repz
push
pop
stos
adc
mov
xorb
cwtl
repz
cmpsl
nop
aaa
add
int3
test
sbb
iret
fs
mov
testb
or
and
xchg
push
pop
call
xor
pushf
imul
cmpsb
inc
std
stos
and
sub
inc
adc
push
xor
or
inc
in
cmp
ss
cmp
ljmp
jne
jno
scas
pusha
cmp
adc
int3
popf
subb
gs
stos
xor
aam
push
hlt
or
xchg
nop
inc
push
jnp
mov
xor
pop
mov
ss
aaa
aas
leave
sbb
push
jno
sbb
test
inc
testb
cs
mov
xchg
in
dec
cmp
nop
hlt
repz
ret
or
fidivrl
and
sub
adc
or
pushf
add
inc
jb
test
dec
dec
mov
push
call
sti
inc
movsl
mov
je
clc
and
jns
scas
in
fistps
fs
loope
adc
mov
repnz
iret
aas
cmp
xchg
cltd
icebp
popf
pushf
mov
es
mov
aas
jl
repnz
jmp
je
fsubrl
dec
in
push
sbb
mov
dec
pop
and
cltd
fwait
mov
pop
adc
popf
out
cmc
jo
push
push
xchg
sbb
out
mov
mov
pop
aad
stos
je
je
and
ret
push
test
outsl
in
and
jnp
sub
insb
jo
outsl
insb
aaa
stc
pop
xchg
and
lods
mov
xchg
pushf
lret
pop
cwtl
stos
mov
mov
dec
testl
fstpt
or
lret
lcall
jnp
call
imul
sub
mov
lods
mov
sub
jecxz
cmp
idiv
mov
adc
aad
mov
inc
mov
arpl
xor
xchg
fdivs
push
sub
les
dec
cmp
cs
cmp
mov
mov
test
add
dec
rclb
and
das
mov
lods
mov
mov
push
aad
cmpsl
jb
movl
bound
dec
push
mov
xorb
add
shr
cs
dec
daa
sbb
icebp
fimuls
in
inc
aaa
and
negb
mov
fs
sub
jmp
dec
mov
mov
xor
inc
popf
sub
xchg
mov
aad
and
bound
std
jle
push
cwtl
sbb
mov
ljmp
xchg
out
cld
mov
sbb
xchg
int3
mov
mov
cmp
insb
sub
cmpb
rcl
mov
adcb
cmpl
adc
jmp
cmp
cmp
adc
les
and
lret
push
sub
xchg
mov
stc
push
push
test
ret
mov
fucomip
sbb
jecxz
mov
test
mov
jle
pop
sbb
xor
push
in
daa
xor
aam
enter
xchg
out
inc
mov
ds
jle
and
rcr
fnsave
mull
stc
imul
push
pusha
xchg
lea
sub
mov
dec
shr
in
push
mov
les
jae
inc
clc
adc
jbe
cmpsb
test
inc
es
orb
xor
jmp
cmp
fadds
and
out
xlat
lea
mov
mov
add
shlb
mov
push
push
notb
pop
or
pusha
rclb
adc
jmp
arpl
mov
xor
lret
jb
idivb
pop
inc
popa
sti
or
jnp
sub
inc
int
pusha
insl
push
inc
adc
imul
or
ja
mov
jl
imul
pop
jb
ja
push
insl
cld
adc
clc
stos
xchg
test
lahf
fcmovnb
push
jnp
xchg
dec
testl
outsl
outsl
push
iret
popfw
cmp
sbb
mov
js
add
xchg
add
cli
and
inc
pop
push
jns
push
clc
arpl
xchg
sub
pop
andb
aam
push
dec
enter
jg
enter
or
pop
lret
imul
jg
mov
inc
adc
pop
sub
mov
cli
ds
es
xchg
cbtw
jl
cmp
sbb
jne
sbb
lock
inc
pop
shrl
dec
and
imul
mov
cmpl
dec
jge
add
data16
add
push
mov
icebp
inc
xchg
adc
push
push
imul
test
pop
mov
cmpsb
adc
test
jae
sbb
xchg
inc
xor
xor
in
mov
cmp
bound
mov
xchg
xlat
in
repz
sub
rclb
in
xlat
and
sahf
sub
push
or
fwait
dec
pop
inc
mov
sbb
jmp
jnp
push
pushl
pop
cli
insl
add
cmc
addr16
aam
xchg
loope
shrb
mov
iret
xor
test
in
in
mov
sbb
push
mov
cmpsb
loop
ja
aam
mov
loopne
mov
and
push
inc
mov
pushf
movsb
jmp
daa
enter
add
jp
adc
xor
mov
add
dec
cmpb
gs
es
dec
sub
xchg
arpl
pop
pop
push
arpl
inc
lret
ficoms
jo
lret
pushf
mov
push
jno
mov
or
or
cmp
mov
push
mov
test
add
leave
imul
in
xchg
and
ja
dec
xor
js
sub
pop
add
inc
popf
or
ljmp
mov
fucom
leave
add
ret
mov
and
cltd
rcl
jecxz
sbb
and
cmp
and
mov
add
cmpsb
and
shll
lret
addr16
test
jae
shll
push
push
push
in
jne
inc
lahf
xor
cmp
inc
mov
out
jns
xchg
xchg
push
insl
fsubs
xor
mov
mov
shlb
fcoms
ljmp
lock
je
daa
gs
into
xchg
xchg
gs
test
sahf
mov
fimuls
sbb
jle
xor
scas
aam
jne
xor
xchg
out
xor
testl
pop
mov
xor
jo
sbb
pop
pusha
testb
pushf
pop
inc
mov
push
das
mov
lock
sbb
xchg
sbb
or
pop
fadds
loopne
sub
cmpb
lret
pop
push
fdivr
imul
sti
mov
mov
add
popf
sar
int
mov
lea
xor
lcall
clc
pushf
xlat
enter
ss
cmpsb
ss
outsl
das
sbb
cwtl
inc
mov
adc
mov
pop
lea
aam
frstor
std
mov
adc
cmpsl
pop
xor
es
cmp
pop
loopne
fistpll
sahf
sarb
leave
sbb
loope
outsb
cwtl
lock
jecxz
sar
jmp
xor
insl
iret
mov
scas
mov
mulb
lret
lods
add
cmp
cmpsb
fdivl
out
push
ret
or
xchg
fistl
aaa
test
mov
sub
daa
je
mov
cmpsl
fstps
sub
dec
sbb
sbb
inc
mov
bound
cmp
and
push
push
pop
cmp
pop
aaa
cmp
jle
gs
lret
sub
test
mov
dec
dec
adcb
xor
movd
mov
int
popf
pop
into
pop
cli
mov
lret
jne
outsl
push
cmp
adc
movsl
mov
sub
jbe
out
jbe
cmp
xchg
jnp
daa
mov
stc
mov
popl
mov
in
jp
cmpsl
and
into
pushf
test
push
jno
bound
mov
mov
add
push
ds
adc
cmp
lea
call
stos
fwait
mov
andl
dec
adc
cmp
mov
test
pop
nop
cwtl
push
data16
jnp
es
mov
ja
adc
pop
adc
mov
jge
mov
test
xchg
in
xchg
mov
mov
lea
mov
lds
pusha
stc
push
or
lea
lret
mov
pop
push
and
mov
adc
sti
mov
sbb
push
xchg
mov
mov
xor
fnstenv
push
out
loop
jns
scas
mov
insb
push
mov
push
xchg
lret
hlt
and
out
mov
mov
adc
adc
cmp
lock
inc
stc
mov
push
push
xor
data16
add
or
sub
jl
ret
loop
test
sbb
mov
inc
scas
sbb
mov
xor
addr16
rorb
lea
xchg
jg
test
and
ljmp
int3
lea
dec
gs
cmp
cmp
lock
in
fildll
subl
xchg
sbb
inc
mov
jb
sub
or
sub
decb
and
dec
mov
cmpsl
sub
rorb
push
cli
fisttps
xchg
xchg
pop
leave
pop
mov
push
loopne
jo
xchg
xchg
mov
pop
int
repz
xchg
mov
adc
and
addb
lea
loop
sbb
xchg
fcmovne
ss
push
dec
frstor
xchg
sbb
faddl
add
dec
push
clc
shll
insb
popa
mov
into
ds
pop
or
loope
xchg
arpl
and
enter
out
iret
xor
adc
in
mov
inc
ljmp
fwait
scas
xor
mov
push
mov
or
push
inc
push
or
jmp
dec
push
loope
popf
or
and
ret
mov
sbb
enter
jnp
cmc
push
adcb
cwtl
sahf
in
icebp
adc
rcrl
sbb
lcall
jne
adc
cmp
enter
insb
sub
xchg
fidivl
ror
jnp
mov
int
imul
push
movsb
ja
outsl
mov
bound
scas
cmp
xlat
lahf
xchg
popf
fs
push
sahf
sbb
mov
cmpsb
in
cmp
leave
push
insl
test
inc
pop
sub
lret
sbb
inc
and
into
adc
sti
cs
faddp
dec
jg
cld
pop
and
sahf
mov
stc
cmp
fcmovnb
dec
gs
sbb
sbb
gs
xor
pusha
sub
outsb
pop
mov
lret
add
ficomps
dec
inc
or
fs
sbb
rorb
or
dec
jge
cltd
aam
fmuls
sbb
movsb
aam
mov
adc
jb
push
push
jns
xchg
nop
shll
outsl
sub
pop
cli
xchg
nop
xchg
push
stc
jne
in
int
das
dec
add
or
xor
cli
out
xor
pop
pop
add
dec
stos
jo
push
sbb
inc
xor
jbe
nop
push
pop
test
shrb
sbb
fistpl
jge
in
mov
out
inc
xor
nop
adc
sub
cmpsl
mov
sti
ret
int3
jns
pushf
xor
in
mov
adc
or
pop
hlt
jnp
xchg
dec
inc
enter
mov
call
aam
mov
out
mov
push
cmp
mov
lds
fdivrl
cmp
or
int
pop
loope
mov
mov
lcall
test
aaa
mov
push
stos
in
add
push
dec
cs
dec
sbbl
pop
pop
jae
icebp
dec
sti
sbb
sub
mov
mov
cld
xchg
pop
insb
out
jp
cmp
jae
add
lock
gs
das
inc
scas
jne
pop
call
push
adc
sti
aaa
pop
inc
jno
cmp
adc
cmp
mov
jle
movsl
orl
aas
mov
loope
dec
adc
scas
loopne
test
scas
pop
dec
stos
incl
scas
jmp
push
dec
insl
mov
lods
sub
push
addl
int
mov
sub
inc
arpl
scas
arpl
fisubs
add
mov
imul
popf
xchg
cld
pop
test
adc
sbb
cmpb
mov
mov
pop
dec
mov
gs
lret
test
fucomp
jge
pop
scas
fnstcw
scas
orb
add
push
lods
mov
cld
cltd
call
mov
pop
pushw
rolb
cmp
es
cmpsl
in
sahf
sub
cmpb
xchg
jo
inc
leave
hlt
cmc
adc
jno
add
dec
addr16
mov
loope
pop
aaa
orb
and
icebp
inc
inc
pop
cmp
mov
jns
cwtl
test
jns
rcr
sub
ds
stos
sahf
loopne
ljmp
or
jl
pop
aam
sbb
std
mov
xor
mov
xor
es
fwait
les
mov
mov
stos
out
leave
inc
dec
inc
cwtl
sub
in
and
and
cmpsl
jb
ss
lahf
repnz
push
mov
popa
pop
xor
enter
mov
inc
aad
adc
in
fwait
aam
jnp
mov
fsubrs
sbb
mov
movl
repnz
cltd
sbb
movsb
fistl
jb
cmp
sbb
jmp
mov
mov
mov
ss
dec
xchg
enter
push
stos
mov
ja
adc
rolb
cltd
cmp
rorb
decb
loopne
mov
ss
push
jp
mov
lock
jnp
pop
pop
int3
addr16
mov
jg
aam
push
push
imul
jae
cld
sub
ljmp
cmp
and
dec
push
cld
ret
lret
xor
inc
in
mov
mov
adc
cs
push
stos
sarb
jo
das
bound
or
ljmp
adc
push
loope
or
inc
mov
loopne
std
jne
arpl
cmp
mov
out
mov
shrb
mov
repz
xor
std
adc
cs
aad
lock
inc
jmp
insl
ret
pop
sarl
sub
ror
stc
in
push
into
lret
rclb
bound
int
add
aas
or
cmp
adc
je
imul
into
or
fidivrs
or
cmpsb
test
jbe
lods
sbb
lret
push
jns
inc
jmp
adc
and
adc
dec
cli
cmp
adc
xor
jl
imul
cmp
pop
ret
mov
mov
mov
inc
lahf
les
fs
mov
test
mov
ljmp
int3
mov
pop
mov
fildl
mov
das
hlt
cmpsb
icebp
je
mov
ds
mov
mov
and
dec
addl
mov
xor
xor
jae
push
xlat
add
jae
xchg
sbb
push
enter
adc
and
push
mov
mov
test
adc
adc
popa
dec
imul
mov
inc
into
dec
inc
mov
fsts
push
push
dec
lea
mov
jno
sub
jnp
flds
mov
sub
bound
jge
scas
ja
pop
fdiv
mov
out
add
mov
mov
push
fucom
imul
mov
stc
dec
jne
push
sahf
add
cmpsb
push
in
out
or
mov
dec
lret
push
jo
jb
cmp
and
pop
mov
pushf
lock
pop
xor
xlat
inc
repz
stos
insl
pop
frstor
pop
mov
lods
push
repnz
idivb
clc
xchg
xchg
jmp
data16
cltd
xchg
sub
or
daa
addr16
lods
cmp
cmp
lahf
mov
insb
dec
in
movsb
rcll
outsl
inc
movsl
sbb
inc
int
mov
test
rclb
pop
roll
lods
or
fisttpll
in
jno
fisubrs
dec
mov
mov
xchg
sahf
adc
mov
lret
mov
imul
incl
cltd
popa
popf
dec
push
bound
loope
fbld
popf
xlat
icebp
add
sub
mov
das
lcall
ror
pop
push
scas
or
out
imul
inc
jl
addr16
push
sub
pop
loop
lret
insb
cmc
push
jg
clc
sub
push
push
test
push
or
or
xor
adc
cmp
push
push
push
aam
out
push
dec
rorb
in
data16
sub
push
fistpl
clc
sub
stos
ret
out
cld
rolb
out
xlat
ss
inc
jl
jle
inc
cmp
cmp
jnp
pop
loopne
inc
enter
xor
std
sbb
adc
pop
ljmp
fstpt
mov
adc
adc
sub
fs
sub
push
jns
pop
lea
in
rcll
or
xchg
adc
sbb
sub
xor
sbb
scas
push
sub
push
cmp
imul
les
popa
cwtl
ficomps
mov
jge
mov
fists
sbb
mov
lea
sbb
mov
js
xor
pop
popa
out
mov
vaddps
sarl
rcl
icebp
mov
movsb
xlat
clc
cwtl
ljmp
pop
sub
sub
lcall
or
scas
mov
cli
push
imulb
idivl
adcl
dec
aad
pop
dec
ljmp
ret
ja
or
push
push
rcl
xor
mov
adc
inc
movsl
mov
pop
daa
push
int
pushf
aas
fmul
adc
xchg
cli
jno
xchg
outsl
rcrb
push
jge
pop
lcall
dec
jbe
inc
popa
jnp
jno
mov
hlt
push
stc
lcall
pop
dec
pop
pop
cltd
mov
pop
jmp
testl
fimull
sub
sbbl
cmp
orl
cmp
jnp
cmp
or
fidivrs
jbe
mov
imul
push
in
std
inc
rol
jae
mov
xor
xchg
fadds
lock
adc
roll
push
push
punpckhdq
jge
lcall
scas
jb
or
sbb
cmp
into
stos
ljmp
sub
adc
cmp
inc
dec
mov
jne
lea
int3
imul
pop
cmp
push
daa
sbb
shlb
inc
shrl
inc
les
pushf
fcoml
test
pop
jno
sub
sub
xchg
scas
adc
push
ds
pop
aas
and
es
sti
mov
stos
push
jp
fisttps
or
mov
jne
call
into
mov
mov
fcompl
out
ja
dec
jne
add
out
sbb
and
stos
push
sbb
arpl
ret
in
add
pop
lea
loopne
les
push
lret
sub
pop
or
imul
mov
hlt
pop
dec
mov
xor
fimuls
pusha
mov
cld
fstl
pop
adc
mov
std
jne
shlb
dec
pop
inc
sbb
push
leave
pop
cmp
fistpl
test
imul
and
inc
adc
orl
imul
xchg
sbb
inc
nop
and
mov
mov
and
out
int
cs
sahf
loopne
les
xor
fidivs
dec
repz
ss
jae
lods
fiaddl
fldenv
jle
je
mov
call
adc
inc
in
loop
cmp
icebp
add
xor
adc
inc
xchg
test
les
inc
push
mov
in
dec
movb
jo
xchg
mov
sbb
xor
adc
mov
cmpsl
mov
out
test
mov
out
in
xor
aas
stos
cld
ljmp
add
sbb
mov
xor
add
nop
jp
push
movsb
ret
sub
mov
mov
or
cmp
add
es
push
jmp
arpl
test
mov
sbb
int3
sub
push
lahf
fimuls
jno
adc
jmp
aam
xor
jo
ja
fs
out
out
dec
and
imul
cmp
mov
popf
mov
aad
aad
sbb
test
push
pop
loop
stos
pop
mov
test
lock
mov
out
fucom
pop
fisubl
in
push
mov
aam
jge
sbb
or
out
or
sbb
inc
les
sarb
adc
movsb
ret
xchg
movsb
add
jle
std
mov
movsw
hlt
fdivs
fs
pop
shrb
add
sahf
xor
lcall
sub
cmp
scas
lea
jns
push
test
stc
ret
call
xor
mov
orl
mov
xchg
push
jns
add
push
pop
mov
repz
sbb
gs
cmpsb
ret
jle
sub
xchg
shll
sub
nop
push
jns
pop
mov
xchg
sub
jbe
int3
jae
into
gs
pop
testl
repz
or
or
pop
push
leave
leave
shrl
mov
push
sahf
pop
addb
test
lcall
data16
fnsave
inc
and
xchg
xor
inc
movsl
daa
xor
mov
xor
in
shll
cwtl
loop
or
and
arpl
out
mov
cs
repz
lret
push
jne
rcl
xchg
jo
outsb
add
jbe
push
jl
inc
pop
xchg
cmp
mov
out
divb
push
mov
pop
mov
mov
stc
mov
out
daa
daa
mov
jno
push
lret
push
inc
jmp
xlat
icebp
stos
sbb
push
das
pop
adc
mov
fsub
in
cmc
rcr
xchg
xchg
arpl
rolb
xor
std
pop
push
ljmp
xor
fistl
bound
and
sbb
cmpsb
dec
in
lock
out
adc
roll
lods
repz
les
mov
jns
outsb
push
inc
mov
icebp
sbb
push
insb
sbb
test
fdivl
jno
test
ja
stos
or
flds
xchg
sub
call
pop
cli
push
jl
gs
outsb
pop
les
leave
sahf
cmpl
jbe
push
pop
mov
mov
adc
xchg
add
inc
cmpsl
or
sub
mov
test
fadds
cmpsb
dec
lock
mov
jns
sbb
add
in
mov
bound
xor
scas
xor
xor
or
or
xor
dec
pop
pop
popa
adc
mov
mov
incl
aas
fcmovb
test
loope
int3
mov
pop
add
cmp
inc
sub
mov
idivb
push
sub
sbb
xchg
ljmp
mov
push
je
in
das
addr16
push
nop
cmp
icebp
and
mov
jo
loop
push
jmp
push
inc
or
dec
call
xchg
xchg
stos
js
negl
jge
jge
aaa
sahf
and
mov
sub
stos
gs
dec
pushf
mov
and
dec
inc
daa
in
jge
lret
pop
mov
stc
cmp
aas
addr16
adc
and
fisttpl
call
pop
jae
out
xchg
outsb
jle
imul
lods
pusha
sbb
jecxz
jo
cmp
dec
repnz
pop
fisubs
adc
cmp
jbe
imul
scas
mov
lahf
or
add
mov
leave
sbb
shrb
mov
imul
movsb
les
insb
pop
sub
ja
imul
clc
jp
dec
enter
sbb
andb
insl
in
xor
loopne
mov
mov
pop
sbb
mov
outsl
ljmp
sbb
repnz
adc
jb
loop
mov
xor
lods
mov
dec
dec
mov
xlat
adc
xlat
jl
mov
aam
sbb
test
pop
iret
add
test
imul
lcall
dec
mov
and
xchg
and
inc
mov
outsl
imull
xor
xlat
mov
xor
filds
pop
out
dec
jmp
loope
insl
insl
inc
add
sbb
notl
adc
into
out
pop
mov
cli
xchg
leave
xor
jno
bound
gs
icebp
pop
push
mov
mov
pop
je
loop
sub
test
aam
cltd
outsl
addr16
sahf
mov
xor
sub
ljmp
xchg
dec
dec
add
xor
mov
mov
xor
lds
inc
mov
aam
dec
push
sbb
inc
mov
lahf
out
aam
in
scas
lret
jb
test
jo
xlat
in
mov
sbb
xchg
ds
push
jns
pop
jp
add
xchg
mov
sub
or
stos
cmpb
sub
cmp
mov
aad
push
jmp
filds
mov
shlb
popa
mov
stos
shlb
push
mov
adc
setae
add
xchg
mov
loopne
and
cli
jl
mov
out
stos
pop
test
xchg
movsl
cmp
scas
add
lahf
ss
cld
inc
push
rorl
dec
push
hlt
fimuls
push
js
mov
in
cmp
lods
fbld
push
insb
fimull
fwait
jmp
and
je
or
mov
xor
out
push
imul
dec
inc
mov
cmp
arpl
xchg
rcr
repnz
hlt
adc
xor
sbb
push
jae
inc
cmc
sbb
xor
rorl
jmp
imul
mov
ds
test
imul
leave
dec
mov
inc
jo
aam
cmp
pushf
outsl
mov
cmpsl
sti
cmp
outsl
and
adc
sub
and
mov
inc
out
ja
fadd
xor
or
fldt
insl
cmpl
fdivr
inc
push
cmp
mov
adcl
or
jno
sub
jne
popf
jno
out
jne
xchg
inc
das
xchg
and
icebp
ror
nop
into
cmp
imul
pop
addb
shrl
sti
fs
mov
cltd
sub
sub
adc
cltd
sbb
test
sbb
int3
insb
inc
pusha
inc
add
nop
inc
or
imul
loopne
cmp
imul
ds
shlb
lods
imul
leave
mov
mov
push
pop
scas
sub
mov
mov
icebp
push
out
pop
mov
xchg
out
movsl
int
imul
mov
xor
mov
or
or
mov
sub
cmp
xor
jne
adc
test
add
call
push
adc
cld
ret
or
rclb
mov
ret
sbb
sbb
int3
stos
jb
aad
test
jmp
jno
add
sbb
jb
gs
dec
testl
gs
adc
movsl
popf
mov
mov
push
out
out
xor
nop
adc
aam
stc
dec
cmp
aas
push
out
ja
test
loope
arpl
adc
mov
dec
fisubrl
jae
dec
jne
mov
dec
ds
pop
out
ficoml
push
popa
mov
mov
ret
push
icebp
dec
and
xchg
adc
packsswb
jnp
out
pop
mov
pushf
xor
cmc
aaa
xor
imul
scas
push
das
stos
adc
and
sbb
dec
sub
inc
outsl
cli
xchg
popa
stc
scas
andl
dec
enter
xchg
pop
mov
dec
in
add
pop
jae
insb
in
mov
mov
imul
test
lock
sahf
cmp
repz
pop
jge
xor
dec
les
pusha
mov
flds
jg
ds
das
pop
ss
mulb
in
jp
popf
dec
mov
sub
fucom
mov
mov
fs
jae
addr16
repz
jecxz
in
cmp
adc
enter
push
jne
fbld
lahf
mov
shll
test
in
mov
sbb
lock
pushf
fldt
cmp
inc
fsubl
jmp
test
and
dec
lahf
fidivrs
and
push
mov
aam
jge
mov
mov
pop
add
or
and
adc
out
cmpsb
sbb
add
push
enter
push
dec
add
xchg
jp
fcoms
ds
idivl
sti
ficompl
imul
and
cltd
jge
mov
out
test
stos
sbb
xor
mov
sub
mov
pop
mov
sbb
jne
xor
hlt
ds
cmpsb
mov
repnz
imul
out
test
into
jmp
add
mov
push
loop
loop
cli
fwait
sbb
enter
outsl
dec
icebp
pop
jbe
fldcw
pop
adc
push
test
pop
ja
jae
sbb
sbb
ret
mov
int3
iret
push
addl
pop
dec
and
inc
pop
xor
data16
movsl
test
gs
test
pop
push
jae
dec
addr16
mov
imul
lcall
cltd
jmp
push
xor
mov
sbb
dec
jnp
movsl
repnz
fiaddl
enter
movsb
clc
inc
idivb
pop
inc
in
ret
notl
sub
shlb
sub
lods
cltd
lret
push
xor
push
mov
cmp
xor
add
inc
pop
adc
adcl
cmp
outsl
and
loop
mov
or
bound
leave
imul
push
addr16
mov
mov
mov
mov
out
jl
pop
fimull
mov
cmpl
mov
and
xor
lret
stos
enter
cmp
or
jae
xchg
and
psrlw
add
xchg
pusha
nop
push
inc
es
push
les
xchg
addl
cmp
cmpsb
pusha
data16
popa
pop
inc
jno
and
scas
fld
dec
jnp
lret
sbbl
call
shl
mov
cmp
inc
loopne
mov
xchg
rcll
cmp
push
inc
popa
call
js
imul
fisttpl
in
inc
in
sti
lcall
mov
pop
mov
enter
rcl
fld
jg
jnp
in
push
pop
sbb
fadds
cmp
mov
xor
arpl
inc
nop
sub
rorl
pop
add
pop
pop
pop
dec
js
jns
pusha
incb
popf
and
nop
lret
xor
loope
inc
pop
ja
outsb
test
hlt
mov
and
lret
mov
add
inc
jne
pop
out
fsts
mov
jno
inc
inc
lea
mov
push
jmp
in
sar
pop
shlb
mov
pusha
xor
cmp
adc
mov
and
or
sbb
jg
lock
adc
mov
lret
int3
mov
sub
iret
xchg
sbb
sbb
cmp
mov
lret
adc
or
inc
lret
into
dec
and
sbb
mov
lods
clc
mov
xchg
imul
mov
xchg
sbb
and
sub
dec
addr16
aas
cs
dec
add
rorl
lcall
popf
sub
dec
sbb
mov
out
jnp
sub
mov
scas
addb
pop
pushf
test
outsb
mov
fiaddl
lcall
fucompp
test
inc
jge
or
pop
jmp
jno
insl
icebp
jecxz
push
inc
adc
push
pop
inc
add
mov
stc
addr16
adc
test
cmp
stos
adc
push
mov
cmpsl
add
mov
add
out
xadd
or
pop
aas
std
cmpsl
mov
or
push
hlt
daa
mov
or
fdivs
cmp
shrl
out
mov
jae
mov
or
repnz
jmp
adc
mov
repnz
jne
fs
cli
inc
dec
sub
cmp
lahf
in
sbb
cwtl
int
jo
stos
jno
inc
loope
push
jecxz
mov
jge
or
cltd
stos
outsl
add
and
mov
mov
out
in
and
je
inc
xchg
lds
lods
mov
sbb
in
mov
jae
aaa
stc
mov
sub
adc
add
dec
pop
int3
das
lahf
mov
mov
push
mov
pop
ds
out
push
xor
lret
stc
cmpsl
jl
shlb
inc
mov
dec
scas
inc
jns
loop
ficomps
mov
pusha
out
ftst
adc
push
cmp
dec
push
add
outsb
aam
lret
push
clc
stos
cmpsb
push
fisubs
addr16
shlb
movsb
lods
movsl
mov
ss
inc
pop
xchg
cmp
in
xchg
repnz
sub
movsl
mov
rcrb
jo
or
into
pushf
insb
xor
fistpll
mov
int3
jg
dec
cmpsl
sub
popf
inc
es
mov
fs
ja
adc
jne
mov
pop
icebp
outsl
repz
xlat
loopne
or
fwait
les
in
xor
lods
fwait
xchg
add
je
mov
pop
xchg
or
in
sarl
inc
fldl
xchg
fs
lds
loope
ret
out
aaa
jg
pop
cltd
lock
push
sbb
sub
adc
mov
mov
xchg
in
dec
sub
imul
movb
mov
leave
inc
adc
add
out
mov
int3
add
leave
jb
push
push
arpl
push
shr
push
sub
sbb
dec
sti
mov
test
lahf
xor
xor
sbb
xchg
rolb
push
and
inc
sbb
dec
inc
jb
in
jmp
dec
lret
cmp
js
jbe
xchg
and
dec
push
outsl
pop
mov
xchg
repz
cltd
push
pop
sub
aad
mov
clc
and
or
aam
pop
mov
add
dec
mov
icebp
jne
test
push
sub
aam
push
and
xor
iret
sub
push
fs
out
mov
test
push
gs
adc
inc
repz
mov
push
shlb
mov
loope
adc
scas
xchg
jg
pop
xor
mov
pusha
xor
aad
ljmp
andb
xchg
mov
and
pusha
shll
or
xchg
nop
icebp
jns
inc
stos
dec
ret
sti
pop
adc
sahf
pop
inc
dec
in
pop
adc
pop
shl
jne
fcmovnb
pop
pop
push
dec
jne
cmpsl
inc
lahf
push
cmc
rcrl
lcall
cmp
ss
and
inc
sub
ljmp
je
adc
xchg
cmp
fisubs
sti
sub
imulb
jae
ret
jno
dec
aam
lods
test
inc
push
mov
mov
ss
sub
in
arpl
mov
mov
ret
add
in
les
fnsave
sti
cmc
mov
gs
dec
pop
push
cmp
inc
out
mov
adc
add
jns
jnp
sti
es
cmc
jl
lcall
mov
sub
movsl
fstps
adc
js
mov
int3
mov
jno
xor
in
add
cs
sub
or
inc
test
cmp
pusha
xlat
sub
movsb
adc
cmp
aas
arpl
xchg
mov
shl
xchg
mov
mov
popl
sbb
insl
pop
mov
inc
mov
dec
pop
pop
hlt
xor
mov
cwtl
push
mov
jb
popa
adc
push
inc
les
leave
or
xor
xchg
xchg
push
call
sbb
fwait
cmpsl
rcrb
rcrl
incl
xor
rorl
int
cmp
push
hlt
aas
and
cld
std
xchg
jp
mov
inc
cmp
add
loope
dec
mov
in
cli
push
cmpb
stos
pop
jg
orl
or
sub
xchg
in
loopne
mov
in
pop
ret
les
inc
cmp
int
and
push
adc
push
push
mov
leave
adc
xchg
or
mov
dec
add
clc
jle
aam
mov
or
cmp
pop
cmp
loop
mov
and
andb
dec
pop
dec
mov
mov
mov
loope
lods
cmp
dec
imul
mov
rol
jbe
leave
rorl
push
test
cwtl
movsl
bnd
mov
icebp
sbb
sbb
outsl
pop
jge,pn
jne
mov
int
or
rol
mov
mov
sbb
or
lret
mov
lock
loop
pushf
in
dec
out
sub
icebp
repz
sti
and
lret
gs
das
ja
dec
and
shll
cmpsb
fidivl
orb
out
call
jle
push
push
or
fiaddl
mov
into
sti
popa
fs
or
in
popf
shl
lret
xchg
scas
pop
mov
add
xchg
sbb
in
adc
cmp
loopne
cmpsb
jmp
xlat
mov
push
fimull
pushf
cmp
push
xchg
jnp
mov
mov
inc
cmp
push
movsl
or
dec
gs
in
les
or
inc
sub
dec
add
movsl
jge
mov
inc
iret
out
scas
pop
jl
ja
dec
mov
fstpt
inc
xchg
cmp
push
or
aam
xor
lahf
shl
xchg
xchg
loopne
xor
daa
or
in
loopne
xchg
loopne
mov
js
call
bound
rol
push
in
mov
xchg
subb
push
cli
jno
lea
xor
push
dec
sarb
add
insb
shlb
ret
dec
insb
push
mov
adc
sub
push
xchg
and
cld
pop
pop
xchg
xor
lock
rcrb
cmp
pop
cmpsl
enter
repz
popf
jmp
test
inc
cltd
lcall
adc
ljmp
mov
pop
enter
or
gs
fcomps
arpl
push
mov
add
decl
sub
out
fbld
xlat
mov
dec
or
aad
adc
cmpb
push
push
imul
or
mov
jl
dec
sar
test
cmp
cwtl
mov
fcom
fs
dec
lods
dec
cld
fdivp
push
loope
cmpsl
int3
inc
or
push
iret
sub
daa
sub
in
popa
nop
push
mov
nop
xor
sub
insb
mov
arpl
xchg
pop
sti
cmp
je
repz
xabort
out
int
xor
cmp
push
ja
add
add
nop
add
pop
jecxz
jl
loop
scas
mov
jecxz
out
lock
movsl
push
cld
insl
loopne
test
pop
repz
cli
out
cmp
cmp
outsb
fsubrp
and
fnstsw
stos
std
lcall
insb
notb
pop
out
ss
xor
or
xor
dec
xchg
aad
xlat
pop
pop
fnstcw
repz
js
mov
ja
jmp
and
lret
push
ficoms
mov
stc
test
decl
xchg
in
sub
rcl
fistpll
add
pop
shl
mov
mov
lods
inc
pop
dec
push
mull
in
sub
push
subps
fcmovnu
mov
testl
xchg
call
xlat
negb
imul
jne
ret
out
push
insb
dec
lret
mov
mov
cmp
stos
pop
fbld
jnp
jb
test
cmp
insl
movsl
mov
popa
movsb
add
mov
insb
dec
jae
xchg
xchg
nop
pusha
sti
pop
movsb
xchg
or
push
cltd
xor
fdiv
xor
push
push
sbb
movsl
and
test
jno
pop
aaa
sti
mov
les
mov
mov
mov
push
push
loopne
mov
adc
sahf
jb
push
dec
jbe
xchg
test
or
fisttps
mov
stos
mov
jecxz
rcrl
clc
xor
ret
inc
dec
mov
aas
mov
inc
add
cmp
mov
test
and
dec
add
test
inc
pop
fstpl
and
lcall
push
xchg
inc
adc
xchg
jae
cmp
or
pusha
cmp
test
pop
call
nop
add
sti
hlt
hlt
mov
jecxz
stc
jb
aas
iret
xchg
pop
stos
mov
xchg
loop
inc
cltd
xor
clc
mov
aaa
xor
loopne
iret
imul
ror
dec
push
mov
ret
push
sbb
pop
outsl
adc
ja
fwait
and
and
push
test
pop
dec
mov
jge
sbb
xor
jbe
sbb
insl
in
gs
mov
add
xchg
notb
outsl
call
adc
mov
movsl
cltd
cmp
xor
into
push
cmpl
ficompl
loop
jb
cmp
mov
shll
xlat
xchg
mov
and
sar
push
jno
pop
inc
adc
mov
or
mov
jge
fistpl
stos
pushf
nop
loopne
addb
es
sti
adc
int3
jnp
add
and
incb
int
leave
fisubl
or
xor
cli
push
push
push
hlt
xchg
mov
push
add
jbe
pop
dec
jp
jne
lock
int3
lods
sub
aam
mov
daa
and
stos
dec
and
cld
xor
and
fcmovnb
out
inc
loop
mov
cwtl
sub
fpatan
dec
scas
pushf
je
mov
mov
mov
mov
pop
test
dec
fs
mull
push
imulb
lea
stos
dec
xor
xchg
fsubr
out
leave
pop
xchg
mov
mov
inc
fwait
jecxz
sub
mov
sbb
ret
enter
leave
pop
push
jcxz
add
insl
cs
add
sub
inc
mov
mov
xchg
adc
jo
ret
mov
arpl
xor
notb
or
cmp
les
loop
sbb
pushl
adc
mov
arpl
bound
jp
fildll
cs
stc
scas
out
data16
fwait
mov
and
mov
cmp
ret
in
fs
jmp
xchg
and
mov
in
xchg
testl
or
mov
adc
or
pop
jne
lcall
adc
cmp
aad
dec
imul
mov
in
or
pop
loope
jecxz
mov
addr16
push
lret
aam
jg
repnz
add
mov
incl
inc
inc
adc
call
sbb
daa
adc
inc
and
push
adc
jge
or
cmpl
adc
test
lret
cmp
xchg
sti
mov
inc
das
and
dec
lcall
lock
or
mov
andl
adc
and
insb
or
cld
dec
cmp
cli
or
inc
jo
in
fldenv
daa
mov
in
jo
jnp
jp
push
loope
in
pop
lds
xor
push
mov
add
js
sub
addr16
jbe
fnstcw
mov
xchg
push
push
ljmp
sahf
mov
es
fildll
in
pop
xchg
test
inc
iret
movsl
mov
sbb
cmp
arpl
dec
ljmp
scas
mov
and
loop
push
mov
cmp
mov
lock
ljmp
rclb
int
dec
mov
xor
loop
mov
insb
push
cmpb
vpshufd
movsb
je
jl
in
cmpsb
jle
fildl
loope
loop
lea
outsl
aad
testl
mov
dec
cmp
xlat
fistpll
dec
pop
adc
mov
out
stc
and
push
mov
lcall
stos
stc
rolb
sysenter
ss
icebp
int
and
out
or
push
pop
scas
fildll
inc
adc
push
movsb
imulb
pop
xchg
fwait
aaa
mov
push
fildll
jns
repz
dec
mov
scas
enter
subb
jb
andb
stos
repnz
xor
xchg
inc
inc
jp
mov
cltd
mov
mov
push
jne
aad
decl
cmpsb
fists
pop
inc
cmp
jnp
jp
mov
sub
out
jmp
loop
lods
sbb
nop
xor
inc
repnz
sbb
in
icebp
repnz
and
repz
and
into
aam
lahf
adc
lds
mov
rclb
int
aaa
jmp
adc
jmp
cmp
int3
sti
stos
cs
lds
rcrl
and
fildll
jnp
mov
and
adc
cli
sbb
push
mov
in
push
imul
push
mov
aad
daa
mov
xchg
dec
adcb
pop
cs
pop
enter
mov
pop
and
loopne
xchg
dec
push
or
mov
or
or
cmpl
adc
add
loopne
mov
or
idiv
adc
jmp
psubd
pop
int
jle
cmp
inc
in
mov
jb
fnstcw
clc
test
icebp
cmp
testl
xor
ja
dec
sub
dec
data16
lret
fwait
lock
cmp
leave
xchg
mov
sub
inc
int3
fdivrp
pop
xchg
add
jle
dec
xchg
xchg
cli
lods
cltd
js
cmp
testb
xchg
insl
xchg
xchg
loop
shr
mov
lods
pushf
ja
andb
pushf
in
jo
xchg
mov
pusha
cmpsl
fs
bound
mov
outsb
lahf
repnz
xor
sub
dec
repz
xor
leave
mov
fcomps
cmp
outsb
sbb
sub
xchg
push
xchg
repnz
shlb
and
add
add
pop
pushf
xor
pushf
add
add
hlt
cmp
rcll
mov
jle
aam
addl
jp
and
inc
ja
data16
xchg
push
sarl
nop
jge
je
xchg
das
in
pop
cmp
sbb
pushl
push
adc
nop
jae
in
adc
mov
mov
xlat
mov
mov
adc
lcall
push
xor
fisubs
in
pop
adc
fnstsw
subb
or
add
inc
mov
stos
fsubr
dec
dec
lea
mov
xor
fldcw
inc
mov
mov
jo
sub
sub
lret
push
shlb
jne,pt
sarl
xchg
leave
add
iret
or
mov
jns
orl
es
mov
pop
mov
aam
dec
xor
cmp
stos
jge
add
inc
jg
or
dec
rcl
mov
fdivrs
mov
in
rclb
xchg
sbb
data16
lods
je
bound
mov
scas
mov
xlat
fisubrs
cwtl
into
scas
dec
fs
sbb
push
stos
push
dec
push
orb
arpl
sbb
inc
add
bnd
incl
xor
and
lcall
sub
add
cli
movsb
inc
out
mov
les
out
call
or
xor
mov
insl
add
jmp
mov
cmp
gs
add
sub
fcoms
popf
jno
adc
outsl
fwait
add
push
aaa
cmpsl
pop
xor
cmp
inc
sub
xlat
lret
mov
outsl
mov
or
in
adc
sbb
push
icebp
pop
push
jns
xchg
in
loopne
stos
arpl
mov
pop
adc
inc
in
lock
out
out
ljmp
add
imul
inc
aaa
popf
fdivr
xchg
outsb
std
mov
cltd
movsl
aam
pop
lret
xchg
int
sub
repz
xor
add
mov
bound
sub
repz
pop
jbe
mov
sbb
xchg
in
arpl
dec
dec
movups
xchg
lret
out
inc
dec
sti
clc
xchg
dec
push
pop
mov
push
and
jle
out
mov
mov
data16
pusha
cmp
sti
jl
lret
jecxz
dec
cmpsb
lret
xchg
bound
xor
adc
inc
add
sahf
nop
or
cltd
push
mov
fsts
dec
pop
xchg
pop
leave
adc
repnz
fadd
or
lods
push
sbb
push
sub
scas
pop
push
xchg
and
mov
mov
adc
xchg
dec
scas
js
popa
int3
push
mov
or
mov
xor
or
pop
pop
mov
movsb
inc
int3
leave
push
filds
push
pop
xchg
loop
xchg
adc
stos
nop
gs
jle
sti
fcompl
mov
subl
in
or
mov
or
mov
imul
ret
enter
movsl
fisubl
repnz
stos
adcl
pop
ret
ficomps
mov
stos
mov
jb
inc
push
adc
in
repnz
jge
inc
les
mov
push
mov
mov
cmp
and
xor
out
mov
pop
ss
insb
rcll
xorl
adc
jbe
xlat
dec
dec
jecxz
jne
loopne
fptan
mov
xor
sarl
sbb
cmp
pop
pop
mov
data16
ja
adcb
cmp
scas
jecxz
lahf
je
in
push
jge
aas
and
rorl
imul
scas
sbb
dec
in
rcr
cmp
xchg
insl
test
mov
mov
clc
pop
js
aas
lret
sub
mov
lock
mov
iret
jmp
sub
pop
mov
pop
out
ret
popa
dec
pop
mov
test
nop
mov
lahf
and
cmp
lahf
in
fisttpl
out
cmp
lods
cwtl
fsubs
or
push
fistps
jae
add
xchg
jb
lods
std
sub
mov
jle
sti
sub
mov
jp
lods
pop
nop
sti
arpl
scas
out
das
iret
xor
adc
jae
xor
pop
insl
adc
neg
add
sbb
hlt
movsl
or
xor
ss
add
mov
ret
dec
int
mov
mov
sub
xchg
subl
pushf
icebp
test
cmpsb
cmpsl
cmp
pop
mov
pop
adc
mov
adc
inc
sbb
sbb
testb
idiv
mov
das
mov
in
nop
cwtl
jb
pop
outsl
jne
lcall
mulb
mov
aam
iret
lret
das
jne
jecxz
mov
test
sti
inc
mov
sub
es
mov
jbe
jbe
mov
jne
rcrl
push
outsl
jno
notb
sub
jle
test
sbb
imul
aas
out
sub
out
dec
fwait
sub
pop
dec
sub
xchg
jnp
push
inc
jmp
or
push
cmpsb
sbb
adc
cltd
outsb
lret
jo
lods
mov
mov
jle
popa
pop
push
lret
sub
cmp
xor
shl
dec
mov
cmp
jnp
pushf
or
into
adc
push
push
add
test
ja
test
cld
inc
sbb
adc
test
sbb
or
pop
push
cmp
insb
jns
ljmp
cmp
ret
fs
decb
ljmp
insl
or
jo
and
mov
pushf
sub
pusha
xchg
sbb
sahf
inc
xchg
push
inc
test
xor
cmp
mov
fldt
cmpsb
pop
push
pop
mov
mov
mov
ret
pop
mov
push
sahf
repz
inc
xchg
sahf
repz
adc
ret
neg
ret
lods
mov
scas
fisttps
enter
dec
cmp
pop
add
negl
pop
xchg
stos
and
pop
sbbl
stos
ja
cmp
shll
nop
push
pop
cmp
xchg
sahf
mov
scas
adc
jl
arpl
pop
mov
sbbl
sqrtps
fptan
or
add
add
inc
inc
call
js
out
add
loope
jge
jno
stos
ss
fdivrs
ss
sub
shl
push
dec
xchg
aad
hlt
or
pop
pop
pop
jb
xlat
movsl
inc
fbstp
jp
jbe
cwtl
inc
mov
ss
sti
sbb
xchg
mov
mov
and
jmp
xor
test
pop
push
pop
jnp
mov
icebp
movsl
pop
jecxz
outsl
out
mov
movsl
xchg
addr16
sbb
push
sbb
loopne
fdivr
xchg
ss
xor
sub
fistps
sub
lea
insl
sbb
jae
popa
aad
popf
dec
jae
decb
in
int3
mov
adc
push
fists
jne
dec
jns
pusha
ret
mov
popa
insb
fldenv
pop
popf
sbb
mov
inc
ret
les
pop
mov
cli
out
xchg
push
pop
push
jg
lret
mov
mov
sub
adc
sti
cli
jle
adc
lea
and
xchg
inc
jp
out
in
lea
nop
jecxz
cmp
addr16
cmp
cmp
jb
loop
cld
or
int3
mov
mov
cmp
dec
loop
aas
sub
lahf
jmp
rcrb
xchg
test
jmp
and
cltd
mov
test
inc
dec
sub
push
add
popa
cmp
mov
test
mov
fisubrs
lods
js
mov
std
inc
mov
mov
fisubrs
and
lret
add
testl
fstps
int3
test
testb
pop
sub
pop
loop
in
or
pop
pushf
add
inc
fstpt
call
pop
inc
imul
ljmp
imul
sbb
xor
pushf
adc
xcrypt-cbc
cmpsl
push
sarb
cmp
adc
rcrb
dec
xchg
cmpsb
mov
mov
xchg
xchg
fisttpl
pop
or
jae
lods
push
add
mov
mov
mov
dec
insb
sbb
gs
in
push
xlat
add
in
imul
leave
sbb
fwait
and
push
lds
test
jle
xchg
xchg
std
pop
jnp
test
push
repnz
in
inc
xor
or
cmp
add
push
je
insb
jle
mov
jmp
mov
adc
push
push
and
popf
cmp
fwait
xchg
inc
out
stc
scas
cmp
dec
and
into
jmp
sub
inc
adc
loop
or
cld
popf
xor
sub
movsl
push
int3
jle
sarb
movsl
shrl
mov
cmc
fbld
dec
lods
fdiv
inc
pop
mov
cmp
or
mov
or
imul
rorl
mov
xor
cwtl
lret
test
sub
jge
clc
addr16
ja
jne
roll
mov
insb
adc
nop
sbb
push
adc
ja
add
xchg
push
loop
sbb
xchg
leave
jnp
cmp
xchg
out
mov
jle
stos
scas
lds
popa
stc
std
in
sbb
in
in
sbb
push
ds
mov
stos
cmp
popf
xchg
sub
pop
cmpsl
imul
movsl
sub
sub
push
ss
mov
push
adc
sbb
bound
lods
mov
ds
push
stos
cmp
aas
mov
push
in
mov
pop
stos
lret
outsb
jmp
loopne
stc
add
dec
pop
pop
andl
sbb
sbb
arpl
sbb
cmp
movsl
popl
ja
sbb
mov
pop
pop
xchg
fadds
rolb
sarl
add
lcall
xchg
idivl
jnp
sbb
int
adc
sub
or
mov
dec
fcomps
push
and
loop
xchg
aad
shrl
pop
push
push
adc
leave
push
mov
int3
sbb
push
das
test
pop
sti
or
movsl
negl
addr16
leave
sub
cltd
in
idivb
insl
cmpsl
add
test
outsb
inc
notb
subb
and
sub
inc
rcr
jns
cmp
rcrb
add
push
jmp
dec
adc
xlat
int
mov
cmp
sbb
roll
data16
call
cmp
repnz
xor
xor
adc
pop
adc
movsb
mov
push
ss
in
xor
fisubl
stos
and
outsb
xlat
jo
popl
add
dec
sbb
iret
mov
js
pop
push
mov
mov
sbb
js
xchg
push
and
add
pop
cmpsl
cmpsb
xor
dec
ret
pop
pop
addr16
orb
aas
mov
xor
scas
aam
pop
jp
test
daa
mov
xchg
pop
rcrl
int3
lods
inc
pop
adcl
pushf
das
out
pop
outsl
mov
cmp
sahf
clc
xchg
mov
and
roll
punpckhwd
push
jle
mov
cmp
mul
ja
ljmp
push
jo
mov
and
sbb
mov
fucomip
cmp
out
cmp
xor
fiadds
test
js
xor
dec
lock
xor
mov
fcmovnb
and
xchg
data16
mov
sub
shll
cwtl
push
andb
jae
aam
jp
in
cld
and
fisubl
xchg
mov
aaa
push
inc
rcrb
popa
fsubrl
sbb
rcrb
in
sub
test
mov
mov
fldl
or
mov
fisubl
je
lock
movsb
push
fisubrl
xor
jecxz
xchg
lcall
lods
or
cmpsb
jo
jnp
jno
inc
cld
aad
dec
in
mov
push
mov
dec
cmp
sbb
fcomp
xchg
and
mov
sub
sarl
std
dec
xchg
mov
or
roll
add
jle
mov
add
mov
pop
ja
adc
movsb
adc
jl
jne
mov
loop
scas
adc
pushf
sarb
pop
sub
sub
or
cmpsl
add
mov
cmp
rol
out
cmpl
xlat
mov
sub
roll
dec
fmul
inc
dec
sub
sub
imul
and
loop
mov
test
push
stos
ja
mov
cmp
aam
fistl
ljmp
push
iret
divl
pusha
fwait
mov
mov
mov
xchg
and
dec
inc
mov
movb
sub
jl
lock
loope
jecxz
or
dec
jecxz
push
loop
dec
adc
pop
filds
mov
dec
mov
nop
sbb
xorb
test
fwait
sbb
mov
ljmp
imul
arpl
cmp
adc
cmpsl
stos
pop
sbb
es
insl
xchg
ret
dec
out
test
stos
inc
outsl
push
jbe
out
inc
iret
add
inc
mov
mov
jle
rorl
inc
push
paddb
dec
loop
mov
sahf
in
cmpsl
or
int3
int
outsb
je
out
jb
jge
sub
lods
orb
rolb
pusha
shll
sub
punpckhwd
push
gs
ljmp
mov
adc
pop
mov
fcmovb
jl
push
fstp
pushf
dec
out
mov
push
enter
inc
or
incl
fildll
and
jecxz
into
stos
mov
ror
inc
xchg
test
inc
mov
scas
mov
or
pusha
adc
sarb
inc
addr16
notb
fs
mov
mov
imul
mov
xor
lds
xor
or
xchg
pop
sbb
mov
push
mov
and
test
add
in
lret
add
and
in
cld
idiv
push
mov
das
jo
or
sbb
xchg
sbb
sub
insb
sar
push
scas
mov
int
lock
and
jo
data16
adc
test
jns
and
std
add
inc
addb
sbb
aaa
pop
lods
push
sub
leave
inc
aaa
or
lods
out
mov
push
inc
xchg
rcrb
add
sub
sarl
outsb
sub
or
imul
pop
inc
js
or
out
xchg
rcrl
adc
pop
mov
jb
hlt
lea
jmp
sbb
mov
sbb
inc
scas
movsl
xchg
lea
mov
iret
test
fldt
cwtl
mov
rolb
xchg
jge
sub
cmp
mov
xchg
push
gs
pop
push
sahf
nop
in
sbb
test
sub
cmpsb
add
adc
push
pop
pop
es
add
hlt
cli
rolb
xchg
push
fldl
add
cmp
nopl
adc
shl
inc
and
push
xchg
pop
add
lcall
xchg
scas
in
pop
pop
aaa
jo
inc
sbb
nop
decb
repnz
xor
mov
cmpl
cld
faddl
fs
arpl
es
popa
xchg
xchg
pushf
leave
mov
cmpsl
nop
out
pushf
je
das
mov
scas
push
insb
mov
out
fsubl
dec
cmp
lret
idivb
sbb
mov
sub
int3
rcrb
xchg
aam
jne
xor
test
loope
sub
lret
push
cmp
and
repz
or
int
insl
incb
adc
jecxz
jge
mov
adc
adc
cmp
jnp
ss
fnsave
les
xchg
lret
jae
orl
das
cmpb
mov
push
out
xchg
ljmpw
pop
mov
add
inc
xlat
ljmp
in
js
cwtl
push
mov
repz
xchg
cmp
xor
pusha
mov
and
adc
adc
scas
xor
fnstenv
mov
lock
ds
test
and
xor
cs
repnz
aaa
sbb
xchg
dec
xchg
dec
dec
cmpsb
imul
es
and
pusha
cmc
or
les
mov
ss
dec
test
notl
aas
call
and
jecxz
sbb
cs
sti
mov
stos
scas
pop
push
into
jnp
ds
scas
sbb
shll
out
adc
out
or
insl
scas
xor
jnp
and
add
mov
test
adc
sbb
xor
add
es
dec
fdivp
adc
adc
jmp
mov
and
lods
pop
sub
in
fiaddl
push
sub
jns
lods
cmpsl
mov
jne
in
insb
sahf
xchg
push
xor
fldt
dec
iret
dec
mov
push
sarl
push
dec
lea
test
jbe
test
daa
adc
pop
leave
jmp
sbb
and
cltd
fisubrs
cmpb
lods
stc
xor
push
cmc
mov
sub
or
aaa
insl
movsb
xchg
repnz
push
out
xchg
std
fcomp
jp
fldt
and
pop
int3
popf
lds
insb
out
pop
cli
dec
push
jb
pushf
flds
mov
int
in
push
fcoms
leave
mov
fwait
cld
lds
xchg
out
xchg
dec
gs
mov
jo
xor
push
sub
scas
insl
sub
pop
out
lds
push
movsb
incl
scas
iret
xchg
es
and
mov
cmpsl
lea
nop
inc
mov
sbb
lods
push
xor
and
jb
pop
int
cmp
jmp
jge
icebp
fldenv
insb
jno
fimull
mov
mov
cmp
movsl
xchg
popf
push
movl
mov
mull
sub
xchg
sub
jno
xor
dec
cmp
fstl
andb
dec
mov
sub
out
add
sti
inc
scas
aaa
dec
call
pop
jbe
popf
jo
push
xor
xchg
lret
lcall
nop
dec
or
call
jnp
lods
jno
jno
jns
nop
pop
dec
sbb
das
cmp
iret
jns
loope
adc
outsl
adc
lahf
xchg
mov
and
sbb
je
jb
fs
cmp
sub
dec
pushl
loopne
cmc
imul
or
jnp
inc
mov
xchg
repnz
or
mov
or
xchg
mov
add
jge
xchg
rol
clc
inc
ss
or
sub
cmpsb
or
xchg
pop
outsb
mov
sub
ljmp
shrl
in
cmc
or
daa
dec
push
push
scas
or
fnstcw
cld
mov
pusha
xchg
aas
sbb
outsb
clc
jno
cmpsl
or
fwait
movhlps
jae
xchg
imul
mov
or
into
sub
sub
add
int
mov
ret
sbb
aaa
mov
test
and
jno
sar
mov
cmpsb
push
aas
stc
repz
fldenv
mov
and
adc
mov
mov
mov
outsl
xor
or
mov
icebp
jae
pop
loope
cmpsl
push
rol
add
xor
cltd
out
and
fistpl
cmpsl
dec
and
lods
jo
inc
call
movsb
push
mov
pop
mov
mov
cmpsl
jns
inc
cli
sti
or
pop
movsb
mulb
lods
in
jo
hlt
jb
mov
mov
std
ret
insl
push
xchg
gs
gs
adc
lahf
xchg
xchg
cmp
jge
shr
jnp
jnp
out
iret
aam
aam
sub
xor
pop
mov
add
xlat
inc
cmp
std
xchg
pop
push
dec
mov
mov
into
inc
ja
mov
push
sub
push
fdivrl
jmp
outsl
push
inc
jne
std
ret
adc
lret
scas
mov
leave
add
pop
xrelease
aas
inc
cwtl
dec
out
addr16
pusha
sbb
mov
mov
pop
inc
jae
fstpl
cmp
div
sahf
notl
adc
sbb
lods
sbb
push
mov
or
mov
divb
push
clc
daa
loopne
mov
sti
clc
lods
push
cmp
push
adc
sbb
dec
pop
fwait
pop
les
sti
js
add
ss
xchg
bound
mov
aad
mov
lds
test
cmp
test
xchg
push
les
sbb
mov
enter
push
push
push
inc
int3
xor
std
sub
mov
aaa
and
jo
mov
fnstenv
xor
sbb
aas
inc
xchg
lcall
outsl
gs
aad
leave
pushf
fcomi
jge
sbb
int
mov
and
mov
outsb
adc
xchg
jo
std
mov
inc
dec
push
mov
and
aas
cs
pop
jmp
int
xor
or
dec
ficoml
dec
insl
aam
or
sub
sub
aaa
mov
imul
mov
mov
or
aaa
cmc
pop
insl
push
xchg
lods
pusha
gs
or
bnd
xchg
xor
or
jne
imul
cmp
adc
mov
and
sbb
imul
jno
push
inc
jne
inc
add
mov
mov
jne
mov
sbb
sub
mov
jle
stos
je
dec
xor
aaa
jmp
cmp
std
roll
ret
ficoms
cltd
adc
repnz
stos
fwait
and
fdivrs
scas
jno
mov
cmpsb
mov
je
movsb
fistl
push
inc
fildl
sbb
mov
xchg
cli
fadd
in
xchg
sbb
repnz
inc
mov
sar
sub
mov
cmp
or
sub
mov
xor
push
mov
leave
je
out
mov
inc
jns
inc
xor
cmc
xor
lcall
add
adc
fwait
push
lahf
stos
mov
leave
in
sub
pop
push
or
mov
pop
shr
fcmovbe
stos
add
sahf
stos
ja
mov
or
mov
out
out
addb
push
push
xor
jle,pt
pop
mov
fildl
outsb
pusha
dec
aad
std
xchg
aaa
sbb
pop
pop
fmull
inc
pop
pop
and
adc
inc
stos
push
mov
dec
jns
pop
loop
inc
push
xchg
ljmp
insb
fwait
add
lea
push
cltd
xchg
or
lret
daa
adc
lods
or
pop
push
jp
aaa
adc
mov
adc
inc
jle
pop
popf
cmc
jmp
xchg
sub
test
jnp
mov
jge
repz
mov
test
arpl
inc
add
in
and
subb
or
stos
mov
ds
push
inc
mov
push
int
int
int
add
sub
xchg
dec
incl
test
fcoml
mov
inc
sarb
icebp
hlt
insl
icebp
or
mov
je
cltd
fnsave
arpl
aaa
stc
les
or
pop
push
lods
out
dec
fnstsw
mov
aad
call
bound
jp
clc
testb
int3
lahf
dec
je
add
jnp
push
dec
out
dec
repz
add
xchg
xchg
into
cmp
daa
push
jno
pop
mov
mov
pusha
shrl
out
mov
mov
aaa
lahf
ret
add
stos
jns
mov
sar
xor
push
rcrb
aad
mov
mov
mov
and
lods
jle
cmp
push
in
push
inc
ret
out
add
shll
pop
cld
pop
fwait
shl
inc
pop
and
dec
xor
sub
in
sub
push
add
sub
add
mov
pop
inc
cli
mov
int
mov
stos
and
stc
cmpsl
pop
sub
fsubrl
leave
xlat
sub
fdivl
jnp
adc
scas
stc
test
dec
xchg
cmpsb
xchg
xchg
cmpsb
inc
imull
mov
fmul
gs
imul
or
hlt
xor
and
movsl
daa
jmp
ret
ja
sbb
repz
sub
push
in
push
cwtl
fdivl
bound
xor
aam
xchg
lahf
lcall
dec
jns
pop
cmp
inc
jns
into
xchg
add
push
lods
and
les
stc
test
adc
iret
stos
xlat
loop
jno
inc
out
outsb
sbb
pop
loope
push
enter
movsl
mov
ja
call
mov
sbb
pop
xor
sbb
cmc
cltd
popa
mov
inc
pop
cmp
call
cmp
lret
mov
or
add
inc
add
js
add
call
fistl
jbe
test
test
int
adc
or
fistl
pusha
lods
sti
pop
push
ja
nop
jecxz
sbbb
mov
nopl
lret
inc
cmc
pop
push
out
clc
inc
inc
xorl
out
cmp
add
js
repz
std
in
frstor
or
jge
leave
fimuls
cs
fbstp
or
aad
popl
es
aaa
push
jns
movsl
adc
jmp
shll
ljmp
push
popf
cmp
jo
shl
mov
lret
inc
aas
jl
mov
into
mov
sbb
incb
test
fldcw
xor
add
jb
mov
dec
and
sub
stc
loope
push
sbb
jge
and
mov
adc
icebp
mov
pop
push
sub
and
mov
leave
shrl
mov
aam
es
sbb
test
mov
outsl
sub
xchg
shrb
xor
bound
stos
pop
insb
dec
adc
cltd
mov
jns
das
jnp
cmpsl
dec
imul
sbb
xchg
jno
sar
mov
dec
jmp
pop
jg
pushf
and
test
inc
imul
ds
and
xor
cmp
mov
cmp
mov
sbb
imul
or
mov
lods
rcrl
mov
daa
mov
xor
sbb
mov
adc
das
add
imul
lods
cltd
jns
repnz
sub
jmp
insb
push
mov
ficoms
mov
std
push
inc
xlat
jo
test
fiaddl
add
inc
jb
mov
sub
mull
xchg
imul
adc
aaa
or
add
mov
mov
sbb
mov
das
push
jmp
data16
movsl
or
pop
ret
ja
loope
add
xlat
lahf
jno
mov
inc
pop
movsb
std
lods
mov
imul
daa
xchg
adc
jecxz
xor
sbb
subb
sub
fcoml
shrl
repnz
xor
out
orl
mov
movsl
jae
mov
push
mov
push
nop
push
mov
scas
das
and
and
or
and
sti
inc
insb
idiv
repz
lock
xlat
sahf
pop
xchg
mov
adc
jne
add
inc
lods
repnz
cli
std
dec
fsubp
jle
int3
icebp
mov
gs
push
lds
in
push
es
je
push
sbb
dec
sbb
pop
fiadds
fwait
cmpsl
out
xchg
stos
pusha
xlat
adc
pop
pop
rcrb
das
and
aaa
ja
sub
mov
cmp
bound
xor
test
popf
mov
ror
xor
push
cmp
adc
xchg
xor
xor
call
pushf
cmp
inc
mov
push
mov
shl
sub
hlt
xchg
aas
lcall
cmp
int3
js
adc
add
jnp
mov
mov
and
call
les
push
bound
pop
mov
jle
cmpsl
in
jb
jno
dec
mov
mov
mov
adc
cmc
mov
xchg
je
xor
push
jmp
cwtl
jecxz
orl
lahf
push
popa
fs
xor
adc
or
push
jmp
out
xor
data16
mov
xor
repz
pop
jecxz
ds
mov
dec
mov
out
mov
push
iret
push
stos
or
test
scas
jmp
imul
cmp
mov
inc
inc
lods
xor
xchg
arpl
sub
mov
jecxz,pn
inc
push
xor
mov
jb
pop
push
xchg
ret
sub
pop
sti
pop
jnp
dec
jns
pop
fsubs
outsb
jl
call
lahf
stos
ljmp
pop
jmp
ret
jb
shrl
cmp
dec
mov
cmp
mov
loopne
inc
fisttps
mov
icebp
add
and
std
lods
je
ss
js
test
in
pushf
adc
aam
int
dec
cmp
jne
mov
adc
inc
mov
inc
cmpsb
in
inc
xor
inc
sti
icebp
cmpl
pusha
std
add
jp
mov
test
ja
lods
mov
push
adc
push
fidivrs
outsb
test
push
mov
das
enter
testl
push
in
fcmovu
mov
jle
shrb
ficoms
sti
pop
aad
jbe
shll
sbbl
xchg
push
stos
inc
xchg
in
stc
pop
loope
rcrb
mov
cmp
pop
loopne
and
pop
and
dec
sub
iret
lret
inc
ljmp
cli
cmp
sarl
inc
in
dec
mov
inc
sahf
in
je
ja
bnd
hlt
mov
ljmp
xor
pop
cmp
add
inc
xor
call
add
cmpsb
push
jno
icebp
push
insb
sbbl
fidivl
clc
jmp
or
xchg
xchg
jecxz
xor
and
mov
popf
mov
fstp
push
cmp
test
adc
shll
jbe
dec
bound
mov
dec
icebp
inc
dec
lds
add
inc
and
out
inc
mov
sti
jnp
cmp
push
pop
push
jle
push
pmaxsw
dec
mov
push
cmp
insl
sti
mov
mov
sub
cli
lods
fsubl
sbb
lods
jecxz
push
fldl
in
add
rcrl
lret
scas
mov
xchg
mov
fisttpl
les
jae
add
push
pop
xchg
dec
adc
fwait
pop
push
ficomps
inc
mov
mov
cmp
inc
xor
pop
dec
sbb
sub
arpl
xor
sarl
je
int
aam
shr
test
jno
mov
dec
cmp
mov
lcall
push
fcmove
mov
mov
frstor
js
mov
ret
loopne
ret
xchg
add
out
pop
rol
xor
lret
sbb
xchg
pop
test
leave
jae
roll
int
fwait
jge
aas
int
inc
outsb
dec
addr16
or
lods
lahf
outsb
inc
imul
in
sbbb
sub
popf
dec
test
out
adc
sbb
stc
es
pusha
in
pop
push
dec
jg
or
xor
test
and
push
dec
mov
dec
fnstcw
mov
fsubr
adc
mov
mov
call
loopne
jo
pop
cmc
ret
dec
mov
inc
cmp
lahf
push
add
fwait
mov
fwait
imul
ss
movsb
pop
ret
lea
push
pop
xchg
push
cmp
test
mov
push
mov
or
ret
xlat
test
mov
and
add
pusha
ss
dec
inc
push
lret
fsts
fldenv
push
bound
adc
lcall
pusha
jmp
add
loope
push
aad
bound
mov
lds
in
in
pushf
cmpl
sbb
in
js
mov
arpl
shlb
movsl
rcll
mov
ljmp
leave
cmp
insb
xor
or
movsl
inc
push
add
jg
add
int3
cmp
add
pop
xor
push
adc
lahf
es
fadds
add
dec
data16
scas
xchg
lret
dec
pushf
outsb
dec
jle
inc
arpl
ret
or
or
or
adc
cltd
add
out
mov
xor
dec
sbb
push
inc
sub
dec
movsl
mov
fidivs
adc
loopne
inc
cmp
clc
ds
mov
dec
out
inc
stos
sub
pop
cmpsb
mov
je
in
xor
jp
psllw
out
mul
popf
insb
add
bound
sahf
mov
xchg
mull
lret
or
pop
clc
enter
in
pop
or
iret
pop
jb
sahf
cmc
push
addb
int3
loope
arpl
repnz
andb
loope
jmp
push
in
or
jecxz
test
pusha
aad
cmp
loop
repz
push
pushl
or
mov
leave
mov
mov
cmp
in
lcall
mov
sub
iretw
in
ucomiss
shll
rolb
dec
dec
mov
pop
lds
movsb
jmp
jp
push
cwtl
mov
out
rcll
mov
add
clc
or
or
loop
mov
shlb
aas
push
aam
test
pop
rep
adc
repz
add
push
orl
test
repnz
cmp
add
sbb
cmp
add
das
pop
xor
dec
fstl
pushf
iret
cli
insb
movsl
ljmp
adc
fs
push
add
in
jmp
pop
xor
push
out
cmp
mov
sub
mov
mov
andb
daa
sbb
mov
add
and
ds
mov
mov
sbb
inc
int
cmp
lods
jle
fwait
inc
fadd
hlt
push
mov
ret
out
loop
out
lcall
push
push
push
and
aas
mov
cmpsl
mov
cmp
lea
dec
ret
aam
push
repnz
lods
or
mov
inc
sbb
mov
mov
andl
jp
adc
fcompl
xlat
pop
sub
lods
cmpsl
mov
inc
mov
xor
or
add
in
xor
pop
dec
adc
mov
xchg
pushf
adc
stos
orl
pop
cmpsb
xchg
test
andb
mov
pushl
adc
sub
in
or
sbb
rclb
cmp
int
jl
mov
into
or
sub
cwtl
scas
mov
fldl
pop
imul
fisubrs
mull
dec
flds
aas
sbb
sub
mov
stos
insb
xchg
xor
xor
xor
es
adc
ljmp
scas
fdivrs
ja
pop
jle
sub
xchg
mov
xchg
popf
push
dec
cli
nop
lret
ret
mov
into
xor
sbb
into
cvttps2pi
add
jle
in
xchg
push
mov
mov
call
lcall
cmc
mov
das
inc
mov
jne
pop
sub
je
mov
and
insl
push
add
ret
sbb
inc
mov
in
cwtl
jns
push
lds
mov
dec
dec
mov
js
mov
mov
push
sub
add
xlat
jge
cmpsl
mov
hlt
sub
std
or
and
mov
sub
std
dec
mov
cmp
ficomps
les
xor
out
cmp
dec
mov
aad
js
xlat
mov
fstl
jbe
lds
adc
das
daa
fsubs
test
test
gs
jg
pop
jg
sub
in
pop
sbb
jp
repnz
jmp
xor
xchg
les
cld
inc
xchg
subl
push
iret
pop
neg
push
neg
mov
mov
add
cwtl
pushf
shrb
movsl
cld
sti
lret
sub
mov
call
stos
sti
jg
xchg
loope
jg
mov
cmp
or
call
jg
xor
cmp
lahf
into
cs
cmp
stos
in
cli
xchg
std
ret
fimull
fcoml
mov
and
mov
lret
xor
xor
push
sbb
sarb
incl
inc
add
mov
xchg
dec
dec
pushf
mov
pushf
dec
jbe
or
add
aam
inc
cmc
xor
cmp
xchg
loopne
fisubrl
fbld
out
and
xchg
cmpsb
push
push
mov
repz
sahf
sub
pop
adc
pop
les
cli
cltd
repnz
or
mov
push
dec
icebp
ja
out
arpl
cltd
add
xor
push
jle
xor
push
faddl
repz
scas
scas
loopne
lock
lds
pop
je
rol
ljmp
pushf
add
filds
inc
xor
xor
hlt
sub
push
pop
mov
movb
mov
out
add
lds
fdivr
data16
aas
mov
movsl
shr
fcoml
xor
cmpsl
and
ret
clc
movsb
xlat
popl
stc
xor
stos
or
xchg
mov
pop
in
loope
push
jbe
push
adc
add
stos
cmp
pop
sub
mov
xor
arpl
lea
mov
movsb
stos
gs
ljmp
mov
dec
inc
cmc
pop
or
mov
repz
inc
sub
or
rorb
xor
shll
push
je
call
adc
jnp
stc
or
arpl
pop
cltd
push
add
push
xor
inc
inc
mov
rolb
lea
xchg
int
and
in
and
cmpsb
add
sbb
cli
adc
mov
and
shlb
lods
lahf
dec
mov
push
outsl
int
sbb
adc
inc
adc
cwtl
in
and
sub
imul
add
addr16
sub
push
push
mov
cmp
or
into
out
and
or
or
cld
mov
sahf
jg
dec
test
lret
ja
jmp
mull
aam
and
jge
aas
shl
jns
jae
sbb
shr
ljmp
jp
push
mov
fwait
int
cwtl
or
cltd
fldenv
and
pop
loope
cmp
inc
adc
outsb
pop
test
ljmp
xor
orl
repz
mov
xor
fs
jnp
test
jp
xor
sub
inc
inc
in
inc
lahf
push
dec
add
gs
dec
fs
dec
inc
out
lods
cmpl
loope
inc
cld
jge
and
pop
iret
pop
dec
mov
xor
das
push
std
in
push
outsl
jno
jge
jecxz
cmp
ficoml
cld
mov
das
mov
sbb
jno
shl
and
cmpsl
mov
dec
jne
lds
adc
fcmovne
sbb
cmp
xchg
lahf
int
adc
cmp
iret
iret
mov
mov
mov
push
stc
sarb
or
xchg
es
xor
mov
mov
enter
movsb
ret
nop
xchg
daa
hlt
jns
mov
hlt
or
mov
push
or
js
lods
jge
adc
rcr
arpl
movsl
fstps
imul
push
pusha
jecxz
orl
and
mov
jle
ficoml
dec
sbb
hlt
mov
ds
xchg
mov
es
das
dec
les
cmc
out
ljmp
ja
sarl
test
fstl
mov
sub
mov
xchg
outsl
and
dec
mov
xor
or
fmull
test
stos
out
mov
aam
sub
mov
repnz
mov
cmp
cmpsl
int3
shl
push
mov
adc
fisubrl
in
xchg
push
movsbl
int
pop
imul
lods
repnz
gs
cld
push
loop
jno
mov
sbb
popf
insl
push
popf
std
jp
push
push
or
movsl
iret
bound
sbb
in
cmp
ljmp
push
outsb
leave
int3
cmpsb
adc
pop
lret
jbe
lods
scas
mov
cwtl
mov
lcall
test
ljmp
add
lock
inc
xchg
dec
jp
xchg
sub
jae
outsb
enter
cmp
add
adc
dec
push
mov
pushl
adc
nop
adc
mov
in
std
jnp
popf
push
cwtl
jecxz
test
mov
push
fs
pop
or
incl
cmp
mov
mov
mov
xchg
cmp
in
cmp
push
jmp
out
xchg
pop
sahf
mov
lods
xor
mov
iret
in
or
mov
mov
lcall
push
xchg
cmpsb
popf
sti
mov
es
clc
or
iret
push
adc
nop
xor
xchg
adc
sub
jbe
repz
xchg
icebp
hlt
jo
add
nop
push
push
pop
mov
stc
sbb
aam
mul
push
push
adc
out
push
jmp
lods
stos
xlat
push
test
rorb
pop
cld
lods
mov
pop
jo
out
sbb
push
outsb
cmp
fxch
add
daa
icebp
cli
stos
orb
adc
bound
dec
and
loop
repz
adcl
cmp
sbb
pop
push
stc
out
fs
mov
ret
push
mov
test
pushf
adc
iret
cmp
dec
xchg
sub
xchg
mov
imul
mov
xchg
push
mov
mov
dec
loop
mov
inc
icebp
cs
in
jnp
cmp
cmpsl
pop
cmpsl
sarl
lods
mov
cltd
jno
lds
mov
clc
xor
inc
je
sub
call
dec
bnd
das
and
out
into
cltd
mov
dec
js
sbb
outsb
test
filds
mov
lods
mov
jno
lods
cmc
add
js
fldcw
mov
les
or
mov
cmp
sbb
adc
mov
out
xchg
xor
xchg
jg
int
popf
lahf
insl
cmp
push
cmp
and
in
push
je
test
sbb
add
mov
jge
inc
insl
mov
sub
pop
cmp
inc
adc
cmc
test
lahf
sub
xor
add
inc
push
imulb
jmp
es
cmp
dec
or
fcoml
sbb
cmp
xor
divb
mov
std
ss
pop
mov
int3
mov
cltd
popa
push
adc
test
ljmp
xchg
lock
movsb
cld
ds
jns
mov
mov
bound
das
sbb
adc
adc
ss
adc
pop
adc
andb
repz
mov
inc
fwait
xchg
sub
in
pop
adc
hlt
sarl
push
xor
push
and
adc
je
xor
sbb
in
dec
push
jnp
jge
nop
or
cwtl
or
ds
mov
pop
mov
push
xor
test
in
icebp
test
andb
rclb
push
push
jmp
dec
mov
pop
sub
ss
mov
incl
mov
pop
mov
xor
popa
add
mov
jo
fisubl
xor
fidivs
popa
arpl
enter
dec
sub
adc
pop
sbb
incl
daa
in
call
xchg
jb
xchg
push
fadds
lea
pop
push
cmp
inc
hlt
aaa
pop
jae
xchg
rcrb
jbe
and
gs
cmc
out
xchg
outsb
jecxz
aam
subb
inc
pushf
lret
je
out
iret
inc
lods
pushf
sar
inc
nop
add
std
push
mov
and
pop
in
xchg
sbb
jge
mov
lahf
add
jmp
loop
fisubs
sahf
jae
mov
xchg
lods
hlt
aad
jno
jg
add
out
push
cmpsl
fnsetpm(287
or
mov
scas
int
pusha
mov
mov
mov
xor
inc
push
mov
orl
ja,pt
sbb
sti
jns
shl
xchg
dec
or
lea
jno
fxch
ljmp
fimull
test
dec
mov
les
inc
push
push
sahf
jecxz
ret
sbb
stos
push
adc
sti
insb
add
or
fnstenv
push
xchg
scas
adc
or
adc
fwait
sub
mov
mov
aaa
mov
mov
mov
stos
jp
out
xchg
dec
rcrb
mov
arpl
pop
mov
cmp
add
aad
lret
pop
shlb
nop
push
sbb
sub
inc
je
pop
cs
leave
shrl
mov
lcall
mov
jmp
cmp
in
pop
pop
cmove
loope
lods
mov
fdivrp
and
pop
enter
pop
dec
lret
movsl
pop
test
dec
cmp
xchg
nop
pop
leave
leave
popa
ds
scas
fstpl
inc
or
test
out
xchg
rcrb
xor
movsb
jle
in
adc
dec
out
ret
dec
mov
fldl
add
cli
lock
cmpsl
sbb
inc
xlat
inc
push
mov
adc
into
xor
dec
sub
dec
inc
js
sbb
adc
lcall
fadds
dec
sub
jb
push
stc
movsl
out
pushf
xor
enter
sub
into
pop
dec
iret
sub
mov
imulb
adc
jno
add
sbb
mov
xor
lret
add
shll
pop
movsl
fcompl
pop
xchg
nop
inc
dec
dec
mov
ret
es
shlb
sub
sub
shr
cmp
cwtl
cmc
push
insb
push
jecxz
inc
cmp
sbb
je
jb
loop
xor
jmp
dec
dec
data16
lret
mov
sbb
ret
loope
jl
and
jge
cmc
mov
fcomps
cmp
jb
in
jl
jo
js
push
arpl
and
icebp
aaa
push
aad
cmp
subb
pop
push
push
test
jp
lods
lret
xchg
jns
scas
fs
out
lea
pop
pop
push
and
lcall
in
adc
and
mov
push
in
cmp
push
push
lods
popf
pusha
cmp
es
push
xlat
clc
fcoms
mov
mov
xor
out
mov
add
pop
sub
into
or
pop
insb
xor
xchg
aad
jbe
punpckhdq
adc
mov
adc
cmp
mov
pop
cmp
in
inc
aaa
ljmp
push
pushf
test
mov
iret
repz
mov
mov
xchg
ret
ljmp
adc
adc
adc
je
outsb
pop
cmc
sub
in
or
js
pop
cmp
xchg
test
mov
pop
push
test
cli
cs
fwait
mov
iret
cltd
out
loope
add
in
rcr
push
mov
sub
adc
adc
dec
mov
pop
cltd
or
cmp
sbb
mov
shlb
mov
xor
das
cmc
bound
cltd
rcrl
jl
mov
leave
out
sbb
cmp
fwait
and
iret
std
adc
loope
add
dec
cld
test
adc
xchg
sub
inc
xchg
adc
mull
and
xchg
fnstsw
fwait
pop
sub
push
shl
and
aad
iret
adc
and
movl
mov
lret
aad
mov
inc
pop
mov
sbb
dec
out
aaa
into
lahf
pop
xrelease
mov
data16
pop
add
jp
out
fdivrl
fsubr
insb
incl
fdivrl
jp
sbb
fsub
fsubrp
jmp
mov
or
ss
scas
lock
stos
pushf
adc
inc
pushf
cmp
jae
mov
lahf
jb
adc
add
xorl
fs
fisubrs
and
sar
stos
imul
adc
scas
arpl
cmp
repnz
mov
rol
addr16
xchg
inc
and
push
xor
pushf
inc
call
into
lock
cmp
into
pusha
lods
mov
lret
hlt
subl
jp
xorl
cltd
and
je
cmc
mov
fdivrl
xchg
sub
add
lahf
mov
mov
mov
in
or
adc
icebp
inc
xchg
jb
and
xchg
lret
xchg
les
aam
mov
loopne
inc
cmpsl
mov
inc
mov
push
adc
out
xchg
jns
mov
and
xor
jmp
mov
jge
stc
lds
insl
mov
dec
and
xlat
push
sti
sbb
sbb
sarb
pop
pop
push
ljmp
fs
in
cli
cmpl
incb
in
jle
add
les
push
stc
nop
rcll
ss
fwait
cmp
xchg
push
inc
dec
repz
push
shll
cwtl
mov
cmp
inc
xor
xchg
in
mov
mov
pop
imul
pop
jb
xchg
scas
test
sbb
cltd
mov
cmpsl
push
les
orb
enter
pop
cmpsb
inc
jns
pop
cwtl
inc
push
dec
fldl
loopne
es
cmp
popf
movb
jmp
stos
pop
rcrl
xchg
lds
sahf
jno
icebp
test
in
jno
lods
stos
cmp
gs
rclb
dec
repnz
inc
sbbb
pop
sbb
add
ljmp
jne
aad
mov
add
cmp
cmp
insl
push
xor
jg
hlt
and
dec
scas
cmp
ret
mov
aas
mov
leave
jg
lret
scas
add
mov
and
jl
jo
cs
xchg
xlat
jbe
das
jns
pushl
mov
push
dec
add
lahf
xor
fdivr
sbb
push
push
inc
lods
pop
test
fists
jge
sub
pop
pop
popf
or
loopne
sbb
rcrl
outsb
jb
add
cwtl
cmp
addr16
cmp
sbb
mov
and
mul
jmp
mov
jns
dec
pop
rorl
cmpsb
pop
test
notb
adc
xor
sub
add
mull
adc
int3
inc
arpl
cli
lods
test
popa
add
pop
imul
sub
imul
test
loop
mov
xchg
fbld
cmp
or
mov
pop
or
pop
xchg
in
mov
scas
adc
xchg
or
inc
popf
movsl
movsl
jne
iret
out
call
xchg
cmpl
cmpl
and
pop
mov
push
pop
fcmovu
add
fs
jp
das
pop
xchg
jbe
mov
ja
jge
aad
seta
inc
cmpsl
cld
dec
inc
test
mov
popa
adc
popf
xor
mov
fdivl
popa
pop
call
lods
movsb
and
jbe
leave
int3
sub
mov
lret
xor
lods
cmc
insb
stos
filds
and
sbb
repz
andl
pop
into
test
pop
pop
inc
loopne
insb
and
shl
jns
jae
adc
add
push
jnp
andl
adc
xorb
adc
cmp
cld
or
jo
jmp
pop
jne
ret
lods
lock
xchg
push
or
sub
mov
push
push
enter
sub
and
rcrb
push
sub
sub
pop
sbb
cmp
push
sub
jno
push
and
mov
loope
fidivs
jp
cs
movsb
sbb
sbb
cmpsl
and
icebp
mov
ds
jl
decb
dec
or
jae
xchg
aas
dec
sbbb
int3
icebp
adc
ja
cmpsl
xor
xchg
stc
lods
mov
xchg
dec
cmp
testl
pop
add
imul
shrb
mov
dec
sbb
ds
mov
int3
lahf
inc
add
les
mov
cmpsb
inc
loop
mov
xor
pop
enter
sub
cmp
ret
inc
or
scas
pop
xchg
and
or
add
fsubrs
jmp
insb
pushf
lods
ljmp
lcall
adc
mov
stc
test
lods
pop
aam
push
mov
lret
sub
cmp
inc
pop
dec
ret
jo
insb
stos
inc
mov
enter
outsb
in
mov
gs
pop
lea
mov
cmc
mov
test
inc
xchg
test
cmpl
inc
xchg
dec
movsl
fwait
outsb
gs
mov
aas
and
xchg
lods
into
jle
ret
push
es
jne
js
insl
in
push
int3
mov
dec
shl
adc
or
xchg
mov
push
inc
jae
pop
push
fcomps
cmpsl
fld
pop
mov
fs
pop
cld
sub
add
mov
xor
ret
push
in
sahf
ret
mov
shrl
dec
xor
fwait
icebp
inc
mov
sbb
lock
pop
ficoms
iret
sbb
scas
cmp
loopne
lea
push
fnstenv
sbb
mov
es
xchg
mov
stc
lock
pop
aas
sbb
mov
leave
inc
pushf
inc
cli
and
mov
std
nop
fucomi
iret
xor
and
adc
std
divl
in
jbe
inc
aam
xor
jg
mov
mov
xchg
arpl
inc
outsb
inc
cs
nop
std
jp
in
negb
js
stc
fsubrs
lds
lahf
icebp
int
dec
outsl
lods
mov
pop
sahf
push
fstl
sub
cmp
js
sub
add
sub
mov
inc
xchg
push
leave
testb
mov
leave
ljmp
ficomps
mov
les
sbb
mov
dec
or
fisubrs
dec
jl
xchg
xchg
pop
adc
ss
inc
mov
pop
pop
xchg
push
in
fstl
pop
add
mov
fsub
mov
or
jbe
pop
int3
sub
xorl
stos
jmp
lret
sahf
popl
xor
inc
cli
mov
outsb
lahf
pop
lcall
movsl
and
pushf
push
aaa
inc
pop
iret
gs
pusha
insl
adc
pop
jo
fs
push
fwait
sub
xor
push
fs
aam
xchg
mov
add
cmp
loope
leave
sub
dec
mov
or
mov
fsubrs
and
mov
cmp
dec
and
imul
and
aaa
sti
fnstenv
and
ljmp
icebp
dec
outsl
sbb
scas
enter
mov
fldcw
popa
in
shlb
addr16
test
testb
scas
mov
or
push
pop
jne
mov
or
sbb
out
jecxz
icebp
lret
xchg
dec
in
sub
out
mov
xor
mov
call
jno
sti
cli
imull
push
dec
xlat
push
loope
rcrl
int3
jle
or
cwtl
sub
inc
xor
and
xor
scas
mov
mov
dec
sbb
cmp
test
mov
fcmovnb
fcmovnbe
into
arpl
stos
mov
pop
lahf
pop
fwait
mov
xor
test
arpl
ret
push
fbstp
sahf
mov
aaa
adc
cmpsl
cmp
jge
xchg
xor
ret
pop
lds
xchg
xchg
jge
movsl
test
adc
test
inc
add
add
and
sub
mov
jo
addr16
xchg
mov
cwtl
mov
subb
sub
and
xchg
jg
test
or
pop
pop
push
jb
jg
push
adcb
daa
stos
mov
mov
fnstenv
push
inc
in
pop
sbb
ljmp
mov
adc
sbb
test
sbb
hlt
mov
add
lods
adc
idiv
or
push
push
xor
sbbb
clc
lahf
insl
mov
adc
xor
jle
and
pop
sahf
ror
jae
mov
into
jb
lods
mov
movsl
leave
add
push
xor
sub
outsl
fldcw
dec
sub
out
pop
sbb
bound
pop
adc
jbe
rcrb
ret
inc
mov
xchg
mov
dec
inc
mov
inc
je
inc
mov
adc
cmpsl
cwtl
imul
or
fdivl
enter
sub
dec
adc
imul
xor
fdivrs
out
sbb
mov
pop
test
pop
jmp
push
out
inc
cltd
sbb
fmull
les
sbb
pusha
adc
cltd
or
mov
inc
push
sub
adc
data16
mov
cs
or
or
add
mov
into
mov
dec
ja
in
sub
xor
mov
hlt
push
xchg
jle
xorl
inc
mov
gs
roll
mov
movb
movsb
fwait
mov
push
mov
fwait
sarl
mov
xchg
sbb
xor
ja
add
push
scas
pusha
out
mov
popa
mov
push
in
dec
rorb
dec
pop
fwait
mov
clc
pop
xchg
add
repz
rorb
in
ja
daa
lds
insb
in
loopne
adc
arpl
push
repz
pop
pop
add
and
ret
and
lock
mov
sub
sbb
addr16
js
fsubr
sub
fsubrs
push
sub
add
loope
cmp
fldenv
fwait
orb
mov
in
into
ljmp
dec
push
pop
fldenv
jne
dec
addb
jg
shrl
cwtl
fwait
icebp
push
add
sub
jge
add
dec
out
adc
and
sub
scas
lods
push
aad
ret
mov
mov
jae
push
loopne
mov
push
test
ficoms
das
ss
es
je
mov
xchg
fisttpl
and
push
shrb
cmp
adc
jnp
pop
aaa
gs
push
xor
push
push
stos
jno
ja
push
mov
sub
inc
xchg
out
out
dec
mov
adc
imul
jg
stos
ffree
neg
adc
pop
jae
gs
xor
lock
inc
insl
leave
sub
je
ficoml
xchg
sti
mov
bound
enter
rolb
inc
cmp
cmp
scas
scas
in
outsb
dec
ret
mov
loopne
sub
popf
imul
cmp
cltd
xchg
loopne
out
push
aas
sti
bound
shll
icebp
mov
adc
sub
pop
jge
jae
jle
in
repz
cmp
cmp
jg
cmp
adc
mov
lcall
pop
or
sarl
popf
fidivrl
push
sbb
gs
jg
aam
push
pop
pusha
test
sub
adcl
add
add
and
inc
jnp
test
push
pop
popf
mov
cmpsb
add
leave
jae
xchg
pop
dec
dec
addr16
add
pop
cmpb
int3
fisttpl
call
xchg
cwtd
pop
mov
in
mov
int3
iret
or
frstor
mov
call
js
sub
and
and
fmul
push
xchg
std
filds
icebp
inc
mov
cmp
ffree
call
xorl
outsl
aam
mov
jge
lds
test
nop
and
push
cwtl
fcoml
xor
enter
fwait
pop
fsub
popf
out
sbb
xchg
xchg
pop
adc
cs
sub
insb
ficoml
push
lds
leave
xlat
out
leave
jb
dec
jb
mov
jge
pop
mov
jae
adc
ficompl
add
or
aad
aam
cmp
cwtl
mov
inc
movsb
add
sahf
xchg
stos
mov
sti
sbb
ficompl
mov
inc
push
jecxz
sahf
or
dec
jl
shlb
xchg
pop
jbe
add
pop
push
dec
add
xor
movl
imul
filds
xchg
stos
or
push
mov
sti
data16
xchg
mov
fsubrs
dec
movsb
mov
out
fdivrs
ljmp
popf
pop
xlat
push
loop
add
gs
sub
frstor
vpacksswb
pop
push
push
mov
testb
movsb
push
or
xchg
or
xchg
rolb
mov
data16
popf
imul
shlb
sub
rolb
enter
cmp
data16
pusha
insl
mov
push
inc
dec
fmull
insb
adc
mov
int3
sbb
inc
test
add
adc
outsl
les
jle
inc
dec
fucom
ds
imul
push
push
push
sarl
mov
cs
decl
pop
inc
cs
fadds
in
ret
sbb
and
imul
repnz
push
mov
mov
testl
adc
xor
icebp
add
or
mov
test
cmpsb
scas
leave
sub
push
bound
cmp
jae
xchg
xchg
jae
mov
or
mov
aaa
push
cmc
fisttpl
jmp
js
or
lods
cmp
in
and
notl
and
inc
inc
nop
jno
xchg
xor
sub
fsubl
or
pop
test
sahf
arpl
out
enter
scas
imul
mov
mov
ds
in
jl
mov
in
ds
lahf
sub
ljmp
mov
xchg
popa
lods
cmp
int3
sbb
pop
mov
mov
and
loop
push
and
mov
mov
xchg
push
mov
dec
popa
xchg
pop
push
mov
mov
mov
es
and
pop
shlb
fdivrs
push
out
lods
pop
mov
xlat
repnz
sbb
jae
lret
cmp
int3
mov
xor
adc
jle
fildll
cld
aas
xor
cmp
xchg
xchg
fidivs
dec
loop
push
inc
cs
pushf
adc
adc
push
push
mov
fimuls
sti
aaa
sbb
jl
mov
mov
nop
fxch
shl
push
fsub
jmp
aaa
out
cmp
fmuls
repnz
jle
xchg
shlb
idivl
pop
xchg
sub
nop
pop
leave
mov
pop
cmp
xor
inc
in
rclb
jl
fmull
fs
ds
call
cmp
lods
jo
rclb
into
pop
xor
cmp
in
les
or
xchg
ret
js
mov
packssdw
out
insl
jg
repz
fistl
test
sbb
push
or
out
add
mov
push
out
jb
lea
add
xchg
out
inc
das
dec
lock
push
jne
cld
dec
ljmp
aam
mov
and
jnp
push
cs
pop
sbb
int
adc
push
cmp
xor
pushf
ds
pop
stos
mov
ljmp
jl
jmp
lods
inc
sub
lods
adc
xor
rorl
mov
mov
and
orw
or
movsl
sbb
aas
push
and
pop
push
and
push
cmp
pop
adc
pop
iret
mov
push
jno
cwtl
mov
mov
lahf
enter
loope
and
mov
dec
jne
xchg
fldl
pop
call
jmp
adc
jle
dec
dec
mov
mov
in
addr16
inc
test
in
mov
sti
leave
or
pop
dec
cmp
push
inc
dec
jne
mov
gs
mov
fadds
sub
inc
mov
cmp
sbb
test
or
mov
test
inc
sbb
mov
cs
and
xor
jns,pn
fwait
imul
leave
fs
mov
and
dec
int3
mov
dec
sbbb
int3
test
fisubl
dec
mov
sti
push
inc
jp
into
sbb
in
int
ficoml
mov
xchg
add
cmp
rorb
adc
jmp
push
mov
dec
icebp
mov
push
mov
popa
add
xchg
inc
lret
pop
pop
cmp
in
xchg
mov
inc
jle
aad
scas
lods
enter
std
ja
mov
and
mov
fsubrl
mov
out
out
sbb
jmp
push
and
xchg
in
int3
sar
adc
inc
cld
push
orb
and
in
cwtl
fwait
jne
es
addr16
out
pop
aaa
ljmp
ret
sub
and
sub
and
xchg
pop
ret
adc
popa
pop
dec
push
sbb
loopne
fisubl
xchg
lret
jmp
xor
enter
cmp
fwait
lods
int3
cmp
popf
orb
loopne
sahf
cwtl
dec
cmp
xor
insb
loop
sbb
loopne
jnp
xchg
pop
xchg
adc
jo
out
mov
mov
cmpsb
add
dec
push
or
mov
mov
rclb
int3
sub
lds
xchg
and
add
or
push
mov
push
mov
push
cmp
mov
stc
leave
out
inc
jo
and
pop
sub
pop
bound
lea
fdivs
cli
push
xlat
cmpsl
dec
cmp
movnti
in
sbb
in
scas
movsl
out
rorl
cmp
aam
adc
push
cmp
mov
pop
aad
jnp
and
xchg
jno
pop
fimuls
fists
mov
sahf
xchg
cmpsb
inc
mov
add
sub
nop
ss
test
int3
sub
in
lret
pop
aas
and
sahf
xchg
push
xor
clc
xchg
mov
add
das
pop
dec
push
scas
shrb
aam
xchg
jmp
sbb
xchg
insb
xlat
jns
int3
xor
arpl
out
and
daa
jle
jg
out
les
gs
or
cmp
icebp
xchg
jne
ljmp
sub
xchg
orl
xor
mov
popa
jg
mov
mov
push
and
mov
xchg
out
cld
adc
arpl
fcompl
out
stos
outsb
clc
sbb
leave
push
das
cli
loope
outsl
pop
arpl
jnp
xchg
jge
mov
popf
out
dec
fimull
es
lret
mov
ss
cmc
repz
fdivl
mov
imul
pop
mov
cmpsb
lret
aas
cltd
lret
cwtl
addr16
or
or
test
cmpsb
dec
sub
into
adc
icebp
jge
mov
add
or
mov
lds
cltd
jno
andb
into
dec
leave
xchg
inc
xchg
gs
jne
mulb
mov
and
mov
cmp
or
xchg
lds
pop
jne
xor
sbb
cld
jnp
sbb
ja
popf
sub
cltd
ljmp
and
jne
imul
fnsave
xchg
mov
or
sub
int
repz
xor
adc
jne
jl
mov
sbb
imul
dec
push
dec
fildl
add
or
jl
mov
adc
mov
jne
add
and
movsl
pushf
jge
push
in
push
sub
xor
sub
xchg
ret
xorl
inc
jle
aad
mov
adcb
or
jo
adc
mov
mov
jne
jecxz
xor
cli
mov
sbb
xor
mov
push
xor
inc
or
iret
add
test
stc
mul
aaa
add
sbb
idivl
xchg
mov
lret
cltd
lret
out
sub
adc
dec
pop
mov
xchg
aaa
xchg
iret
adc
sub
aaa
pop
faddl
push
xlat
add
clc
dec
pop
shl
imul
xchg
ret
fldl
arpl
jae
popf
sbb
mov
fdivrl
xor
adc
push
mov
mov
outsb
incb
popf
jno
inc
adc
and
mov
push
jb
pop
dec
xor
sub
test
adc
lods
cli
mov
out
fisubl
inc
iret
cs
std
je
dec
push
loopne
push
aas
xcrypt-ctr
cmpsl
pop
sbb
call
imul
adc
roll
mov
not
addr16
insl
and
mov
std
fcmovnb
lods
std
cmp
je
mov
inc
mov
add
stos
push
iret
or
sub
push
sub
lock
mov
lahf
ret
out
and
lret
cwtl
stos
mov
xchg
or
adc
loop
mov
mov
and
add
aam
and
mov
cmp
stc
add
xchg
mov
inc
lock
mov
orb
inc
push
xor
and
ds
and
jge
dec
rclb
add
pop
mov
jmp
leave
cltd
cmp
fcompl
dec
mov
fs
or
pop
in
xchg
mov
adc
pop
inc
sub
loope
jns
xchg
push
pop
xlat
mov
test
sub
xor
leave
mov
add
in
out
insb
push
add
jno
arpl
sarb
mov
push
and
cmp
repnz
movb
lock
add
dec
mov
inc
inc
sub
jecxz
fidivrs
sti
test
or
mov
fwait
pusha
push
xchg
enter
xor
mov
js
scas
leave
dec
lret
jl
stos
pop
mov
das
movsb
jns
clc
stos
shrb
ret
filds
shrb
movsl
lods
pop
faddl
push
sbbb
mov
mov
in
adc
inc
aaa
dec
or
pop
jl
gs
pusha
and
pop
push
lock
or
push
jne
pop
inc
cmp
rcrl
push
mov
mov
imul
lods
and
pop
insb
push
mov
inc
inc
lea
fptan
mov
stos
out
out
scas
outsl
sahf
movsb
leave
sbb
mov
jne
sbb
inc
clc
insl
xchg
lock
imul
mov
push
mov
orl
lcall
or
pop
rol
pop
stos
test
mov
jbe
pop
aas
or
shrl
mov
cmp
cmpsb
scas
int
inc
and
test
inc
or
stos
jmp
adc
pop
in
adcl
in
aad
adcl
mov
test
sbb
lods
es
pop
aas
jmp
lock
sbb
popa
iret
add
adc
cmp
jg
mov
popa
mov
mov
cmc
std
popa
inc
jnp
sbb
rcl
fwait
inc
sbb
stos
aaa
dec
add
xchg
fidivrs
pop
into
pushf
add
cltd
pop
ret
out
jno
mov
mov
add
fnsave
addr16
mov
gs
mov
inc
loope
mov
xchg
inc
xchg
pop
ret
and
cmc
mov
inc
out
das
fstps
fistpll
mov
push
pushl
jmp
outsl
outsb
repz
and
adc
adcb
lods
jae
dec
into
dec
adc
push
enter
jae
mov
out
sbb
adcl
adc
sub
ficomps
xchg
popa
outsb
aad
ljmp
clc
lret
sub
adc
add
jle
fisubs
out
and
sub
ds
aaa
into
and
push
inc
sub
negl
lock
xor
mov
test
scas
jl
adc
int3
dec
fstpt
loope
test
xchg
in
jle
inc
testb
jecxz
popl
enter
cli
push
cs
sbb
fbld
sub
roll
je
mov
imul
lea
shlb
fbld
insb
mov
ds
add
inc
mov
xlat
or
sub
iret
mov
stos
lods
jecxz
pop
xchg
into
pop
in
push
lea
cmp
xchg
push
lods
cltd
mov
mov
add
mov
push
sti
loope
cmpsb
aas
ret
andb
sbb
or
and
cli
inc
aas
push
les
lret
xchg
jbe
xor
xor
arpl
in
cwtl
or
inc
inc
jae
jb
ds
inc
or
or
test
fcomps
jae
push
call
pop
lock
icebp
scas
test
test
movsb
filds
cmp
mov
hlt
inc
stos
jns
xlat
fwait
dec
movsl
mov
ljmp
imul
xchg
mov
in
adc
ds
cmp
leave
add
movsl
cli
pop
dec
out
icebp
xor
xlat
inc
sbb
mov
or
or
stc
in
in
nop
leave
jae
sub
cltd
sbb
cltd
insb
dec
loopne
decb
sbb
stos
ja
jb
or
dec
inc
scas
fcoms
clc
and
xor
ja
fcmovu
sbb
out
cld
mov
testb
in
add
push
jne
jg
add
repnz
jne
or
shrb
mov
std
idivl
cmpsb
pop
nop
stos
adc
xor
xor
test
push
cmp
in
cwtl
jge,pn
mov
arpl
inc
inc
in
inc
mov
es
mov
push
in
add
xor
ret
loopne
cmp
pop
arpl
xor
xchg
xchg
push
movsl
add
jae
push
xor
stos
nop
adcl
stos
adc
mov
push
cmc
push
mov
popf
mov
gs
mov
movb
sarb
or
fistpll
icebp
rcll
inc
mov
xchg
dec
xchg
imul
cltd
in
out
push
xor
sbb
add
ljmp
jbe
pop
mov
jp
popf
cmp
cltd
mov
jp
mov
sub
inc
xchg
cld
adc
push
fdivs
lahf
decl
push
add
cltd
stc
daa
inc
inc
sbb
fldl
rcrb
mov
mov
push
rcrb
pop
call
es
in
inc
jmp
cmpsl
negl
push
jo
and
roll
aaa
cmp
sub
lret
pop
pop
sbb
iret
sub
add
mov
cmc
sub
ljmp
pop
sub
and
shll
lods
inc
icebp
inc
cmp
inc
pop
mov
daa
xchg
mov
jnp
lahf
or
pop
js
enter
cli
nopl
sbb
test
insb
aad
and
mov
lea
test
sbb
inc
mov
lods
popf
lods
cmp
mov
nop
bound
arpl
adc
jp
inc
jne
in
push
fistpl
loop
add
fsubl
push
movsl
insb
jmp
pop
mov
inc
adc
sub
sbb
pop
ss
inc
ret
xor
push
mov
fisubl
or
arpl
gs
and
call
notl
jle
test
cltd
adc
js
mov
add
add
xchg
lods
shll
ja
xchg
jnp
int
or
xor
lock
cmp
or
dec
mov
ret
push
inc
sbb
push
and
mov
insb
push
cmp
push
fst
lods
cmc
mov
xchg
sbbl
outsl
pusha
mov
add
jl
inc
sbb
sub
add
push
add
push
sbb
inc
ja
aaa
adc
jae
fwait
repz
jne
push
push
popf
pop
push
inc
mov
push
lock
call
inc
jo
movsl
sbb
ljmp
lock
dec
xor
xchg
ret
cmc
xchg
push
sti
mov
fmulp
cld
in
push
scas
gs
faddl
push
jo
lds
mov
in
lcall
and
mov
cwtl
inc
mov
and
outsb
daa
cltd
pop
pop
lcall
insb
jmp
or
das
mov
insl
pop
inc
std
es
lret
cli
rcrb
call
sbb
ss
jge
xor
push
bound
aad
inc
jae
jle
jle
mov
push
push
push
pushl
push
cmp
dec
out
add
sbb
aas
bnd
push
xor
mov
in
jbe
mov
frstor
rorb
pushl
in
les
jb
jge
es
and
fucomi
and
loope
sbb
mov
sbb
xor
and
sbb
mov
and
mov
mov
and
inc
iret
and
cmc
dec
add
lcall
or
jle
sarb
mov
mov
pop
sahf
addr16
aas
inc
sub
into
into
and
adc
xchg
inc
pop
inc
std
cmp
sub
add
orb
pop
jg
bound
mov
pop
adc
loop
lahf
in
mov
icebp
je
fcompl
dec
mov
jl
jb
lea
dec
mov
fwait
jno
repnz
mov
cmp
mov
xor
in
fdivrs
cli
out
loopne
and
jge
inc
mov
flds
rolb
inc
cwtl
scas
jnp
icebp
cld
lods
mov
ret
dec
xor
cmp
push
mov
fidivs
rcrb
orl
push
cmp
loope
push
fiadds
adc
outsl
daa
adc
in
je
inc
pushf
pop
lcall
dec
aam
sub
mov
test
push
jns,pn
enter
push
pop
psadbw
in
and
add
dec
mov
adc
pop
cli
mov
int
pop
cltd
fwait
int3
pop
adc
ficompl
sbb
adc
in
test
shlb
jle
dec
aas
es
xchg
push
sbbl
stos
lock
rcll
dec
push
cmp
xchg
sbb
ds
dec
pop
ret
and
and
hlt
iret
mov
push
std
cld
lea
xlat
mov
sub
or
push
jbe
fdivrl
xchg
cmp
and
sub
daa
je
es
insl
mov
mov
xchg
ja
and
mov
movl
push
push
sub
jne
mov
jns
fmul
es
xchg
inc
add
sub
mov
repz
movsl
repnz
repnz
adc
xor
sub
ss
push
cmp
jle
divl
lret
add
subl
ja
lds
xchg
push
adc
es
adc
sbb
sbb
dec
cmpl
push
dec
into
ret
fwait
xor
inc
push
mov
fildl
mov
cld
scas
mov
cwtl
jnp
mov
in
mov
pop
push
and
ret
dec
mov
jns
pop
outsl
dec
add
shll
popa
pop
das
in
pop
lret
lahf
rol
shlb
aas
inc
jmp
mov
xchg
cmp
mov
mov
xchg
mov
test
or
jae
jns
push
lods
and
or
add
pop
test
out
jne
and
xor
in
push
add
repz
mov
sub
movsb
mov
or
inc
adc
pop
dec
test
sarl
xchg
xor
adc
adc
push
or
popa
fisubs
pop
mov
push
jnp
push
and
sti
cmpsb
xchg
pop
jl
and
inc
test
push
out
or
lds
ret
lods
mov
mov
jg
push
scas
fs
dec
rorb
push
and
test
cmp
pushf
out
mov
jp
pop
dec
popa
sub
dec
pop
out
push
pop
mov
cmpsl
cmpsl
pushf
cmp
adc
dec
dec
inc
xorl
xor
mulb
das
inc
arpl
mov
xor
pop
roll
ret
arpl
std
shlb
push
xchg
push
enter
xchg
or
push
xor
inc
fsubs
int
lret
je
sbb
add
and
adc
or
mov
imul
cmp
dec
pop
sbb
xor
cmp
adc
mov
test
insl
movb
fmuls
into
pop
into
mov
aas
loopne
inc
cmp
cmp
push
arpl
pop
ss
rcrl
repz
pop
test
fs
dec
jmp
std
shll
jg
dec
ret
jne
popf
adc
cmc
enter
pop
daa
mov
sti
xor
les
mov
push
or
mov
dec
loope
inc
jmp
and
es
mov
inc
xchg
ss
nop
jmp
jae
aas
stos
add
nop
scas
sbb
sbb
daa
dec
fwait
imul
lock
mov
mov
ficomps
sbb
pop
mov
hlt
sbb
ret
stos
rcrl
xor
dec
mov
xchg
mov
cmc
xchg
cmp
adc
inc
in
int
cmp
rolb
xchg
inc
mov
sbb
or
bound
jle
sbb
dec
dec
push
shr
dec
insb
xor
xchg
pop
push
lret
or
or
jne
adc
lea
add
push
sar
call
jmp
lcall
int3
ljmp
and
or
shlb
test
call
jp
adc
sub
and
and
scas
jge
int3
push
pusha
jns
pop
shr
iret
xchg
add
push
xor
cmp
adc
xchg
and
xor
out
insl
popa
std
add
aad
std
bound
repz
push
xor
jle
ja
lds
in
cmc
dec
or
sub
dec
insl
jae
push
pop
mov
lock
lds
lahf
mov
out
mov
pop
cmp
sub
loope
jnp
xchg
sub
cltd
ljmp
mov
mov
fsts
pop
je
mov
sbb
enter
mov
and
out
or
dec
ljmp
in
sub
das
mov
add
push
outsl
mov
jmp
mov
mov
push
adc
popa
mov
pop
icebp
sub
sbb
dec
lret
mov
or
cmp
mov
clc
pop
cli
xlat
xor
es
sub
data16
ret
loopne
sbb
adc
mov
push
loop
ja
cmp
imul
xor
cmp
cmp
adc
movsl
xor
xchg
jns
adc
loopne
sub
imul
xchg
or
cmpsl
dec
sub
mov
clc
cmp
xchg
xchg
mov
je
and
mov
cli
cmp
daa
push
mulb
jo
cwtl
sbbb
jmp
pop
push
pop
mov
daa
cmp
xor
adc
test
insl
aas
mov
inc
hlt
fmuls
dec
pop
dec
je
sub
push
xchg
in
add
mov
or
fwait
jns
iret
add
mov
sub
jl
aas
lcall
dec
int3
int
idivb
roll
add
loopne
cmp
inc
dec
cmpsl
mov
sahf
pusha
adc
rolb
in
outsl
test
cmp
mov
ficompl
xchg
leave
cmova
mov
mov
mov
mov
xchg
mov
out
insb
inc
or
pop
cwtl
and
xchg
lods
inc
fcmovu
orl
icebp
jb
pop
out
and
inc
push
dec
sarb
enter
lretw
push
or
dec
scas
push
lcall
sub
xchg
movb
mov
or
mov
xor
loop
xchg
movsb
mov
and
dec
xchg
sbb
jecxz
sbb
and
xchg
lock
aaa
mov
adc
sbb
mov
lcall
insl
xor
or
mov
int3
sbb
and
push
hlt
roll
jno
adc
aas
cwtl
sti
outsb
pop
cmpsb
divb
negl
stc
dec
es
icebp
imul
mov
int
adc
stos
jge
ret
add
movsb
cmpsl
and
mov
xor
mov
jle
gs
or
repz
fld
dec
push
in
xor
or
push
sub
lds
jmp
fmul
inc
mov
or
cmp
loop
jmp
mov
mov
insb
lret
jns
int
insl
lds
mov
jmp
out
loopne
stc
cmp
popf
rorb
cmp
les
xchg
or
and
sub
ds
ret
loop
cld
jmp
test
mov
or
pop
inc
xchg
cmpsb
push
stos
xor
push
lahf
xor
push
push
fstl
repnz
mov
dec
adc
and
out
imul
push
test
insb
rcl
pop
test
push
mov
cmp
pop
jbe
inc
add
jbe
ret
fdivrl
xor
mov
andl
dec
scas
pop
and
pop
cltd
ficompl
mov
inc
xchg
insb
ret
js
xchg
dec
pop
push
cmpsb
sbb
push
andl
pusha
aam
out
push
bound
dec
cmpsb
in
mov
dec
push
ret
sub
xchg
mov
mov
xchg
jecxz
cld
mov
test
pop
repz
add
adc
fwait
stos
mov
dec
jnp
mov
pop
sub
cmp
faddp
call
or
xchg
jp
sbb
aas
stos
enter
ficompl
fs
bound
and
in
ss
fwait
mov
fbstp
cmpsb
pop
ret
sbb
js
aas
sti
popf
loope
push
insb
xchg
xorl
xchg
lahf
and
xor
xor
out
xchg
loopne
add
pop
cmp
or
stc
lods
cmpl
lea
inc
jne
mov
ja
add
push
mov
aam
xor
mov
adc
lds
mov
std
into
push
cmp
into
je
gs
cwtl
xor
mov
and
outsb
push
lds
in
scas
rolb
and
mov
fwait
xchg
popf
int3
shrb
cmpsb
mov
xchg
enter
jecxz
stc
xor
jg
pushf
dec
aaa
mov
jb
pushf
push
in
sub
insb
fimull
xchg
xchg
clc
sub
jmp
xorb
sub
arpl
int3
inc
cmpsl
in
aas
jmp
and
sahf
insl
lahf
cwtl
push
insl
mulb
jmp
dec
and
lea
lret
js
imul
xor
jno
xchg
bound
xlat
loope
pop
dec
push
mov
cmp
mov
dec
sub
add
jns
push
pop
cmpsb
jle
test
cmpsb
inc
fistps
jae
inc
jle
push
mov
pop
mov
call
push
pop
mov
mov
jl
and
sub
insl
mov
in
movsl
in
lock
fstps
mov
jge
xchg
pushf
mov
dec
aam
dec
sbb
jecxz
hlt
rorb
test
pop
mov
mov
jb
add
inc
and
jp
lret
clc
and
loop
rcr
movsb
cmpsl
pop
or
jmp
push
and
cmpsb
mov
outsb
test
fwait
xchg
jae
dec
bound
sub
repnz
push
cmp
xchg
cmp
inc
insb
das
mov
in
in
sub
out
loopne
adc
les
xchg
ret
ja
dec
sub
in
add
and
jg
adc
xor
cmc
add
mov
int
in
or
fildll
nop
adc
in
and
mov
sub
popl
dec
inc
inc
insb
loop
lret
pop
and
mov
cmp
lods
incl
lret
stos
dec
xor
mov
sub
sbb
add
fcmovnb
sbb
and
or
les
xlat
inc
popf
xchg
jecxz
jle
sub
loope
mov
int
sti
mov
xor
dec
cmpsl
incl
gs
cmpsb
mov
and
xchg
pop
lods
outsb
dec
clc
inc
rcl
stos
ret
dec
and
rolb
dec
dec
ds
andl
test
cmp
mov
orb
mov
inc
pop
inc
je
sbb
sahf
mov
test
push
mov
enter
inc
ja
ret
add
fisubrs
out
pop
mov
sbb
sahf
jb
popa
sub
mov
adc
push
dec
movsb
add
fisttpl
mov
inc
push
cmp
shrb
mov
rcl
dec
and
leave
lret
movsl
iret
mov
cwtl
xor
push
inc
out
into
xchg
repnz
xchg
ljmp
outsl
pop
add
std
repz
popf
or
lret
test
fsubs
xchg
dec
sbb
inc
imul
mov
dec
pop
mov
push
dec
aas
mov
loop
es
js
mov
push
xrelease
daa
clc
cmp
xchg
xor
cli
add
inc
dec
fnstenv
mov
fcoml
gs
and
jnp
push
dec
mov
sarl
push
sub
push
push
enter
push
enter
jg
fs
and
pop
jnp
loope
out
and
mov
or
sub
fisttps
aam
std
sub
pop
repz
adc
add
push
dec
scas
inc
xchg
movl
push
pop
loope
ja
repz
ficompl
adc
pop
out
loopne
or
aad
or
je
push
jge
scas
adc
jmp
mov
jl
push
mov
add
jp
and
push
clc
negl
inc
dec
mov
jns
mov
adc
xchg
clc
mov
mov
mov
xor
ja
lret
lret
in
sub
out
mov
cmc
cmp
imul
out
and
xchg
sub
stc
mov
aad
or
lock
ret
cli
mov
mov
cmc
cli
ficoms
dec
hlt
ja
lret
mov
cmp
test
xor
cltd
in
mov
add
inc
push
push
scas
outsb
inc
or
outsb
pop
sub
pop
es
push
lahf
xchg
pop
repz
mov
xlat
nop
adc
sbb
leave
push
cmp
lods
inc
lcall
xlat
ds
lret
pop
mov
cmp
lods
ret
pusha
add
cmp
cltd
sbb
in
xor
push
lcall
ja
pop
outsl
adc
xchg
aad
lods
js
aam
xchg
imul
cmp
ret
xchg
stc
inc
cmpsl
add
ret
push
shrl
inc
sub
in
inc
xchg
sub
shll
ja
and
sbb
mov
pop
mov
mov
nop
orl
xlat
or
inc
clc
adc
and
clc
mov
lock
or
xor
push
outsb
in
call
adc
aaa
out
aaa
rcr
jp
pop
xor
xor
xor
dec
fistpl
scas
push
fwait
add
dec
pop
int
sbb
and
xchg
mov
and
mov
add
xorl
ret
imul
cmp
lds
inc
pop
notb
idivl
jge
jae
cmc
sbb
jg
ret
fidivl
ja
fmuls
xchg
lahf
xchg
std
jbe
mov
aad
xchg
sbb
les
push
and
int
push
lock
pop
mov
xchg
xor
int3
std
clc
inc
xor
mov
enter
roll
jg
mov
cli
mov
xchg
mov
push
cs
adc
sub
xlat
mov
int
cmpsb
mov
ljmp
adc
aam
mov
push
lret
add
add
xchg
pop
mov
or
es
test
cwtl
out
sub
in
imul
ret
jb
jmp
sub
cmpsb
or
icebp
stos
mov
mov
fnstsw
lods
adc
dec
jle
or
lock
mov
test
inc
xor
test
repz
jge
xchg
xchg
adc
push
dec
mov
out
sub
adc
outsl
cmpsl
sbb
movb
fwait
mov
cltd
outsl
insb
jge
sbb
cmp
insl
in
mov
outsl
and
cs
xor
ret
insb
pop
sbb
arpl
cmc
adc
bound
mov
dec
idivl
inc
jo
outsl
cmp
pop
ss
loop
sub
sub
and
push
mov
add
ja
xlat
xchg
adc
inc
xchg
dec
dec
int3
push
jae
dec
push
jl
clc
jg
xor
stc
adc
ret
pop
mov
adc
iret
stos
dec
and
int
mov
cld
xlat
lahf
dec
add
gs
aad
or
lea
ja
repnz
scas
sbb
rcr
rcll
jecxz
scas
nop
sub
push
xor
js
repz
sbb
xlat
inc
je
jmp
xlat
mov
lods
mov
pop
cmp
xor
xor
ret
fwait
or
cli
sub
jle
leave
bound
inc
sbb
and
aaa
sub
hlt
cwtl
scas
outsl
fs
lods
mov
out
xchg
insb
ret
pop
in
js
data16
add
repz
out
dec
negb
xchg
sbb
push
cmp
lock
or
mov
loop
adc
xor
scas
fwait
mov
cmp
sahf
mov
iret
imul
nop
dec
popw
gs
lds
mov
push
test
add
or
jecxz
mov
in
push
adc
scas
int3
inc
jae
icebp
lret
xor
inc
lock
mov
outsb
add
jae
hlt
xor
ret
xor
mov
jle
cltd
arpl
das
jecxz
rolb
and
leave
mov
mov
push
in
cmp
mov
orb
fcompl
lock
cwtl
mov
leave
adc
lock
push
call
rcll
aam
sub
jne
loop
xor
xchg
nop
xor
stos
arpl
aad
jbe
xchg
push
add
flds
enter
xchg
in
mov
dec
and
cld
jecxz
movsl
push
in
lods
adc
lahf
aam
inc
orl
mov
mov
nop
out
xchg
imul
data16
cmp
mov
movsb
mov
mov
push
adc
mov
mov
and
sub
rcll
cmpsl
cmp
lods
sbb
push
cmp
test
cmp
movsl
shrb
cmp
xchg
dec
ljmp
loope
aaa
roll
sbb
in
jns
ret
adc
mov
mov
ror
mov
in
xchg
and
jmp
push
push
jmp
sbb
dec
loope
insl
or
jns
cmp
or
cltd
adc
dec
pop
into
mov
push
pusha
jbe
xchg
lahf
imulb
cmp
test
cli
jns
inc
jb
jmp
jno
insb
stc
scas
aam
ja
and
inc
idiv
shlb
leave
adc
jns
mov
and
push
pop
lea
cmp
fdivs
mov
pushf
and
adc
mov
dec
push
testb
repnz
loop
cmpsl
dec
adc
fld
push
shrb
sub
xchg
jns
add
aam
rcl
pop
test
das
ds
leave
int
pop
test
cmc
int3
and
shlb
aad
jl
jp
xchg
add
out
or
inc
nop
cmp
sarb
cmp
shlb
shr
imul
push
dec
ret
ficoml
cmp
imul
pop
mov
mov
cli
push
fistpl
cmp
inc
jl
push
in
in
mov
mov
dec
loope
cmp
out
pop
subb
pop
cmp
test
or
sbb
movsb
lods
ja
xchg
inc
cmpsl
insb
dec
mov
add
call
mov
adc
or
in
movsl
insb
inc
cltd
int3
sub
xchg
or
or
loopne
inc
dec
push
clc
out
lahf
xchg
test
push
bound
sub
pop
fs
inc
sbb
bound
popf
adc
mov
cmp
data16
jb
mov
fcoms
sbb
mov
addr16
fsts
pop
mov
jb
ja
loope
or
ja
or
shl
stos
cmp
pop
fnsave
scas
aas
push
cwtl
stc
lahf
xchg
sbb
push
es
aaa
xor
and
cmp
or
sub
stc
mov
fsts
xlat
dec
push
shrl
or
mov
and
testl
sub
scas
sbb
lds
and
or
mov
test
or
xchg
loopne
and
fldenv
std
cs
mov
or
mov
lock
enter
cwtl
adc
stc
mov
mov
sbb
ljmp
push
and
test
adc
jb
les
mull
jne
and
pop
add
aaa
or
and
or
fdivrl
cmp
lods
xor
push
mov
push
xchg
out
pop
das
inc
gs
inc
dec
xor
push
pop
das
mov
movsb
lods
lret
pop
cli
std
sub
out
icebp
ss
dec
repz
and
cmpsl
cmpsl
in
push
insl
xor
in
cmc
jbe
out
add
mov
nop
mov
push
mov
sub
ljmp
pop
stc
and
fstl
mov
pop
lcall
cpuid
or
push
imul
xchg
inc
lock
stc
push
mov
test
es
clc
adc
mov
jns
clc
je
adc
aam
pop
add
fdivs
lods
inc
arpl
push
decb
clc
shll
scas
or
cmp
iret
mov
pop
and
push
inc
dec
xchg
pushf
push
mov
dec
fucomp
sti
pop
sbb
xchg
jmp
aam
in
gs
andl
push
sub
pop
push
push
leave
leave
push
mov
dec
adc
pop
pop
stos
adc
push
addr16
data16
insl
mov
xor
stc
sti
lods
dec
jmp
mov
mov
mov
push
in
push
sub
shll
mov
jb
xor
popf
mov
fsubrs
ss
mov
jge
mov
test
push
dec
stos
and
es
inc
rcrb
pop
aaa
in
icebp
fs
mov
and
dec
dec
and
dec
lahf
arpl
scas
out
cs
leave
nop
mov
jle
call
xchg
pop
push
ja
jns
dec
das
mov
mov
xor
pop
mov
push
cmp
jae
jp
decl
andb
gs
rorl
addr16
pop
lahf
mov
mov
lahf
out
andb
mov
mov
xchg
push
push
outsb
and
inc
xlat
lds
loope
test
loope
xchg
std
dec
mov
in
cli
mov
movsl
jno
mov
enter
push
xor
fcoms
pop
cmp
xchg
ret
and
mov
cltd
sbb
lods
sahf
aas
jnp
inc
call
xor
push
jb
jle
mov
sub
jle
mov
jecxz
mov
pop
push
xchg
testl
int3
mov
hlt
xor
movsb
out
les
lcall
add
pop
nop
mov
cmp
les
mov
mov
mov
xchg
repz
and
outsl
mov
mov
jge
mov
jle
ficoml
xchg
mov
or
jle,pn
stos
sub
fsubr
mov
lret
mov
jmp
cli
sbb
iret
aad
mov
xchg
sbb
xor
adc
test
mov
in
sub
das
ljmp
add
push
sub
int3
in
xchg
mov
adc
jnp
mov
gs
ljmp
mov
pop
int
into
icebp
out
enter
or
cmp
mov
fs
mov
jecxz
mov
mov
loopne
inc
dec
dec
inc
pop
adc
ds
pop
or
and
nop
push
sub
dec
xchg
ljmp
inc
pop
es
jb
mov
call
mov
arpl
adc
add
outsl
movsb
adc
inc
sbbb
xchg
repz
mov
adc
dec
imul
dec
movsl
ja
inc
add
gs
cmpsb
pop
mov
inc
mov
fsubl
repz
aas
and
jl
out
lods
jle
aam
sbb
jp
dec
sbb
jns
dec
fildl
sub
pop
pop
jecxz
lock
fbld
ss
into
fwait
push
andb
leave
aad
js
jne,pn
repnz
xchg
outsb
xchg
push
movsb
shrl
sti
data16
iret
jnp
jns
sub
popa
sbb
pusha
scas
in
scas
adcb
aam
dec
pop
es
cmp
ret
mov
inc
inc
aad
add
inc
lods
xchg
and
adc
xchg
sbb
pop
in
cs
test
or
incb
lock
enter
iret
sbb
ret
into
sbb
mov
mov
inc
add
mov
rorl
jne
pop
xor
pop
sub
dec
or
or
inc
xor
lock
imul
inc
pop
in
mov
mov
andb
xchg
pusha
andl
xlat
inc
sbb
ss
mov
and
movhps
mov
mov
adc
jge
cmc
cmp
leave
push
pop
mov
xchg
je
addr16
mov
fidivrs
mov
js
clc
scas
add
repz
aad
push
mov
outsb
dec
pop
xor
aas
sub
rorb
data16
pop
push
icebp
out
mov
sub
mov
sbb
in
sti
push
popf
sarl
fisubs
mov
and
jae
fidivrl
insl
jb
pusha
jo
jno
xor
stos
jmp
int3
loop
test
mov
mov
out
fstl
xchg
loopne
dec
jg
cld
push
xchg
call
xchg
add
push
mov
xor
push
movsl
loop
or
xor
icebp
aam
fildll
push
push
scas
jae
leave
push
out
fildl
test
pop
jle
dec
pop
incl
mov
dec
and
mov
xlat
or
stos
cmp
xor
sub
hlt
add
scas
mov
sbb
inc
lea
and
or
cmp
xchg
push
sarb
mov
add
movsb
rorl
and
stos
adc
xchg
pop
int
popf
out
pop
arpl
add
pop
push
inc
xor
call
pop
and
ljmp
repz
ret
scas
iret
imul
int
fwait
adc
sub
lock
xor
xchg
fprem1
leave
cmp
dec
lcall
mov
ret
mov
call
jbe
shrb
fistl
nop
lods
jbe
dec
xchg
fsubp
dec
push
push
and
divl
lahf
and
rcll
mov
push
push
adc
cmpl
lods
pushf
jmp
out
adc
popa
cmp
pop
pusha
sub
adc
aaa
pusha
or
lds
dec
jl
test
mov
sbb
pusha
outsb
inc
clc
push
push
xor
sub
xchg
cli
iret
adc
jl,pn
daa
mov
and
daa
xchg
adc
xchg
in
xchg
or
orb
jle
cmpsb
cltd
shll
xor
aas
out
adc
ja
mov
cmpsb
sub
lock
cmp
scas
mov
imul
push
pop
jbe
sahf
dec
jae
mov
cld
test
clc
push
push
fistl
int
sub
imul
sub
xchg
enter
hlt
push
daa
add
js
clc
pop
cmpl
adc
icebp
jne,pn
fisubrs
or
push
idiv
lahf
sub
dec
cmp
mov
sub
shlb
dec
pop
repnz
in
shlb
dec
lock
adc
mov
popa
imulb
out
mov
out
pop
test
fyl2xp1
loopne
std
sub
gs
icebp
js
mov
clc
fwait
stos
shl
and
aad
nop
jg
xchg
movsb
out
enter
lret
repz
sbb
aas
aam
push
leave
aas
xor
aas
sub
lock
gs
inc
sbb
mov
dec
cld
mov
stc
dec
imul
andl
fbstp
js
sbb
iret
and
mov
stos
add
sbb
adc
mov
scas
loopne
pop
adc
outsl
cmc
push
fstpt
lods
pop
mov
xchg
imul
ret
pop
in
cmc
jae
ja
or
mov
arpl
sbb
xchg
dec
and
pusha
test
imul
out
xchg
fldenv
xchg
and
jmp
and
test
cmp
mov
jb
pop
jge
push
add
scas
mov
adc
fucom
dec
inc
pop
fstpt
jl
mov
outsb
push
rcr
in
jb
nop
pushw
ljmp
or
xchg
shrb
hlt
je
sarb
in
adc
pusha
mov
cmp
xchg
sbb
xor
inc
sarb
xchg
cmp
mov
mov
loope
or
sti
cld
jae
lods
dec
outsl
cli
or
and
insb
jae
xor
addr16
sti
mov
les
arpl
shlb
aas
push
mov
lret
jg
ds
adc
cld
clc
inc
dec
call
sub
loop
aam
pop
jp
shl
rcll
mov
and
and
cmp
movsl
stos
cmp
push
sbbb
or
adc
insb
ds
xlat
popf
xchg
pop
mov
scas
les
dec
test
mov
mov
repnz
adc
jb
mov
std
inc
mov
loop
jle
nop
stc
and
and
test
xchg
sbb
div
adc
sbbb
mov
cmp
subl
xlat
test
jnp
lret
lahf
dec
or
jb
adc
push
or
fucomp
adc
test
mov
inc
xorl
test
cmpsb
xor
xorl
mov
xor
lods
or
sbb
icebp
pop
outsl
addr16
mov
dec
mov
or
out
mov
lods
arpl
dec
aaa
imul
push
fbld
pop
fisttps
movsb
iret
test
inc
xor
loop
pop
mov
shrb
shlb
ss
push
pop
inc
mov
aas
ret
out
scas
inc
emms
gs
jl
mov
lea
iret
jns
in
xor
cmpsl
test
test
fstpl
loop
push
jnp
push
push
push
inc
adc
push
jp
sub
fdivs
cmp
hlt
mov
repz
jne
dec
jb
sbb
ja
inc
sub
sbb
adc
push
or
xchg
sub
movsl
push
or
cmp
jnp
mov
xchg
cmp
inc
dec
lea
test
outsb
xchg
fsubrs
add
mov
xchg
je
lahf
and
repz
push
or
adc
jp
mov
push
add
jb
ljmp
outsb
fwait
pop
mov
jo
pop
insb
es
mov
push
dec
fdivl
push
sti
xchg
or
subb
cmp
xorb
pop
enter
inc
pop
jle
enter
jne
dec
data16
stos
mov
mov
mov
fcos
jbe
mov
popa
sub
jge
or
inc
mov
movsb
or
cwtl
ss
mov
int3
test
adc
sbb
mov
loopne
mov
jae
fwait
cmpsb
in
pusha
mov
add
out
out
std
and
notb
sbb
fcoml
adc
push
std
push
lds
jmp
add
mov
mov
mov
xchg
decl
pop
clc
leave
mov
shrl
enter
pop
add
pop
testl
inc
mov
and
xadd
in
out
les
push
mov
sbb
push
xor
ljmp
fidivrl
cmp
mov
in
jae
es
mov
inc
pop
lods
add
xor
xchg
mov
stc
mov
in
xor
fwait
test
jo
test
xchg
cmc
jp
ljmp
jo
mov
nop
fcomps
insl
into
push
cmp
in
cmc
sbb
sub
repz
test
lret
lods
ret
and
imul
clc
pop
aam
std
cmp
sti
mov
mov
and
in
fcoml
lds
fcoms
mov
add
fwait
cs
xchg
cmpsb
push
int
hlt
push
mov
xchg
negb
arpl
ss
repz
lret
or
loopne
out
imul
cld
sbb
xor
and
in
xchg
in
loop
out
int3
jge
flds
inc
aam
lret
adc
out
jmp
iret
popf
rcll
lcall
xchg
psrld
cld
cwtl
push
aas
inc
mov
test
xchg
aas
or
and
js
xchg
sub
rorl
lcall
lret
xor
mov
xchg
repz
lahf
enter
jl
jg
sbb
push
movsl
jg
dec
leave
pop
dec
mov
insl
div
push
lahf
in
jg
adc
testb
data16
ljmp
add
insl
push
nop
add
aas
lds
mov
and
shrb
nop
es
push
in
jnp
fwait
or
outsl
test
out
pop
data16
test
fwait
dec
jno
inc
out
out
push
mov
jecxz
inc
les
sub
jae
pop
pop
adc
jbe
add
cmp
cmp
mov
pop
inc
ljmp
add
xor
gs
mov
sub
andb
pop
and
cmp
mov
xlat
out
loopne
jmp
mov
pop
daa
adc
xor
cmp
scas
loop
ret
push
hlt
and
sub
ficoml
xor
mov
inc
fmul
sbb
pop
or
std
inc
lds
sbb
inc
mov
push
divl
nop
mov
dec
je
fstpl
add
gs
add
xchg
cmp
jns
lret
jecxz
dec
in
or
fnstcw
sbb
sbb
scas
dec
mov
xor
lods
hlt
jb
imul
ret
shlb
mov
data16
xor
inc
lea
lock
sbb
lods
xor
imulb
xchg
inc
call
stos
or
pop
add
jbe
mov
dec
xchg
cmp
sbb
xlat
jae
mov
push
or
xor
call
dec
incl
add
jns
push
popf
add
pusha
aaa
jecxz
mov
and
pop
xorb
xchg
pop
pop
add
scas
out
mov
dec
push
mov
mov
or
aas
pop
inc
pop
loopne
ljmp
inc
xchg
stc
jp
loop
pusha
vandnpd
pop
mov
add
dec
push
lods
inc
gs
popa
data16
mov
sbb
out
mov
shll
dec
test
lret
cmp
push
pop
pop
and
aad
sets
sti
clc
les
push
into
das
push
push
jo
pushl
sbb
shl
pop
push
movl
into
in
shlb
cli
inc
push
push
js
jbe
cmp
loope
incb
xchg
jg
sahf
push
pop
sub
mov
mov
adc
jge
adc
cmp
dec
adc
fiadds
repz
mov
lods
sub
jge
dec
cmp
pop
in
aam
lods
fisttpl
cmp
nop
lods
mov
bound
sub
enter
aas
leave
lret
mov
xlat
fnstcw
dec
xor
inc
adc
inc
aad
jnp
shll
hlt
popa
mov
test
sbb
jmp
ja
shrb
jb
push
lret
ss
call
into
add
cmp
loop
pop
pop
cmc
push
in
xchg
pop
mov
jno
and
inc
mov
cmp
push
pusha
sbb
cmpl
or
dec
icebp
xor
fisubl
add
mov
xor
or
mov
sub
pop
sbb
rorb
cmp
xor
pop
pop
pushf
and
xchg
dec
mov
and
sub
lods
mov
popa
sarl
movsb
dec
pop
call
enter
fsubrs
adcb
push
mov
inc
fldt
fisttpl
mov
in
outsb
and
sub
icebp
je
push
sti
mov
xchg
jg
xchg
mov
popa
popa
push
rolb
lahf
bound
lahf
vpaddsb
add
dec
gs
cmp
jbe
xchg
insb
out
mov
pop
and
or
push
addr16
enter
pop
cwtl
ret
mov
pop
adc
in
outsl
push
in
mov
ret
jecxz
cmpsb
outsl
int
xor
outsl
or
out
inc
movsb
adcl
daa
xchg
mov
lods
xlat
leave
xchg
sbb
lods
movsb
cwtl
sub
push
loop
and
push
pop
popf
push
fcmove
jb
repnz
cwtl
push
mov
pop
inc
arpl
rcrb
push
xor
cwtl
xchg
dec
pop
fdivr
jns
jne
push
jns
sti
shll
cli
fisubl
test
push
sub
in
int
mov
xor
mov
jp
mov
testl
adc
scas
mov
aad
pop
dec
les
mov
push
push
fsubrs
loope
add
and
lcall
inc
cmp
lods
mov
dec
push
gs
mov
jo
nop
shlb
jno
sbb
shll
leave
data16
mov
rorb
in
mov
push
shll
xchg
mov
sbb
xchg
les
test
sub
adc
xchg
rorb
inc
test
xchg
shl
sub
jae
jae
fldt
sub
adc
call
xor
imul
cmp
sbb
and
je
push
mov
xchg
scas
addr16
scas
cmpsl
pusha
xlat
gs
cs
pop
jnp
jbe
sub
jae
das
daa
sbb
pop
es
std
imul
mov
push
or
mov
es
repnz
loopne
mov
lcall
lea
jno
pop
or
scas
jecxz
xlat
add
loopne
in
and
mov
cmp
aas
xor
lret
shrl
fisubrs
adc
cltd
sbb
sarb
jmp
lahf
inc
mov
xchg
cmp
pop
add
in
andl
loop
scas
rcrl
bound
in
pminsw
add
jle
adc
lret
push
cmc
les
cld
inc
mov
dec
push
jns
inc
mov
fnsave
arpl
sahf
inc
sbb
xlat
test
push
test
adc
test
mov
scas
addr16
dec
arpl
repnz
sub
cltd
jle
push
mov
pop
ds
inc
or
sahf
mov
jne
inc
pushf
stos
cmp
sub
inc
adc
xchg
std
enter
push
lret
push
movsb
inc
sub
imul
adc
mov
data16
icebp
push
negl
jge
jge
sub
xchg
in
mov
stos
in
aad
ficompl
jle
sbb
daa
push
or
in
add
jnp
sub
jbe
js
inc
outsb
sub
cwtl
fcoml
adc
add
bound
sarl
leave
inc
jno
idiv
jb
mov
cmc
add
out
enter
addr16
lods
dec
mov
movsl
cmp
mov
jg
jl
and
xchg
jb
mov
stos
out
fisubrl
mov
push
mov
pop
xlat
ds
sbb
inc
sbb
lret
fistl
sbb
jp
mov
fcompl
cmc
adcb
aad
out
add
push
shll
sub
xchg
andl
jno
dec
jge
testl
cld
nop
in
test
cmp
push
mov
sub
stos
xchg
jno
mov
popf
stc
dec
inc
rorl
jnp
mov
in
jnp
outsl
add
repnz
mov
jne
pushf
mov
sarb
jno
push
ja
xchg
imul
cmp
mov
popf
in
sbb
dec
nop
xchg
aam
pop
adc
ret
push
cs
inc
ficoml
mov
cmp
lock
xor
call
je
xchg
inc
lcall
inc
jl
or
aad
fwait
mov
add
or
out
xchg
add
inc
outsb
or
aas
out
mov
mov
add
add
cmp
inc
jno
push
bound
add
sbbb
in
adc
pop
mov
lds
in
or
push
adc
cltd
or
out
lea
mov
ja
mov
dec
xor
dec
inc
lret
test
sbb
js
xchg
mov
add
sbb
cmp
and
push
mov
ficompl
aam
pop
addr16
gs
sar
enter
mov
dec
cmp
add
les
mov
dec
movsl
mov
and
or
repz
cmp
pop
xchg
adc
inc
push
pusha
aad
xor
push
dec
mov
xor
scas
in
inc
mov
or
xor
mov
es
stc
jae
add
xor
pop
pop
xchg
sub
cmpl
fstp
jae
arpl
test
pop
cli
or
pop
add
addr16
mov
mov
mulb
fcoml
inc
shlb
ljmp
xchg
push
xlat
add
xorl
sbb
inc
jecxz
mov
xor
push
mov
pusha
add
addl
aas
outsl
lcall
fmul
pushf
mov
loop
adc
dec
cmp
fwait
outsb
std
adc
jge
mov
mov
pop
out
mov
cmc
xor
cmp
push
ret
add
bound
cltd
mov
sub
xlat
lahf
fwait
pop
ffreep
pushf
shlb
sub
test
adc
popa
jle
mov
sti
les
enter
rcrb
cwtl
dec
test
and
scas
fstpt
xchg
mov
mov
mov
arpl
mov
add
and
sub
and
mov
adc
test
mov
out
test
jecxz
shlb
mov
iret
mov
shrb
lock
xchg
push
pop
test
aas
or
mov
lahf
add
jecxz
xor
inc
sub
jecxz
xor
pop
sbb
jae
sbb
shl
mov
or
scas
fildll
cmp
add
sbb
xlat
mov
cmp
fmull
lcall
pop
fwait
sub
cmpsl
push
scas
insb
cmp
lock
pop
mov
fcoms
pop
add
rcrb
push
sub
decb
outsl
repz
ja
pop
pop
pop
jp
test
cwtl
gs
fsts
cs
sub
mov
sbb
cld
xor
cmc
jp
sbb
pop
jecxz
mov
mov
pop
cmp
add
push
divb
push
add
scas
xchg
jmp
push
xchg
pop
xor
adc
dec
data16
xchg
testb
cmpsl
jp
push
cld
aam
dec
fldz
push
cmp
inc
mov
cltd
lahf
adc
addl
adc
inc
adc
pop
cmp
push
fdivs
push
mov
pop
loop
mov
sub
inc
ffreep
stc
add
ret
inc
insb
enter
mov
xorl
shrb
ret
mov
hlt
pop
aaa
push
shll
inc
dec
lret
pop
dec
xor
pop
aas
imul
push
fdivrs
fidivl
out
subb
fildll
sbb
mov
jnp
mov
movsl
mov
sti
jnp
ss
das
mov
outsl
shll
or
mov
mov
mov
xlat
nop
adc
aad
sbb
adc
test
mov
fnsave
xlat
dec
push
add
scas
bound
imul
pop
iret
icebp
jbe
aaa
outsb
mov
ja
outsl
jno
push
cmc
movsl
cmp
ret
adc
loop
add
adc
jae
xchg
jne
sarl
add
cmp
ljmp
stos
xlat
pop
out
lahf
aam
push
enter
icebp
jne
jg
push
mov
and
in
lret
fnstcw
popf
pusha
pushf
ret
sbb
test
add
jns
imul
adcb
cmp
xchg
lods
and
hlt
addl
mov
pop
sbb
mov
add
sbb
daa
scas
cmp
pop
xor
xor
nop
and
aaa
outsb
outsl
mov
adc
jne
mov
xor
or
mov
push
mov
jns
call
mov
jnp
mov
mov
movsl
nop
out
and
or
movl
outsb
fdivrs
add
icebp
adc
push
jno
fwait
pop
push
int3
loop
testl
clc
sbb
add
push
divb
sti
sahf
es
mov
imul
fidivs
pop
out
adc
or
lahf
pop
jo
adcl
in
dec
movsb
fnstenv
mov
rorb
or
in
lea
mov
xor
mov
pop
xlat
loop
or
dec
les
and
imul
out
mov
out
cmc
test
sbb
sub
movsl
jge
mov
lods
cmp
pop
scas
jnp
xchg
jno
mov
pop
and
scas
and
jae
and
push
imul
mov
cmpsb
idivb
mov
xor
push
inc
lret
push
scas
dec
sbb
pop
cmp
push
push
jo
lret
jge
sub
push
int3
add
xchg
iret
dec
inc
pop
xor
add
push
inc
or
lods
hlt
mov
lret
aas
or
aaa
xchg
loope
data16
jle
sbb
repnz
mov
cmp
inc
mov
sub
xchg
sbb
xor
movsl
out
add
fwait
cltd
push
out
sub
sub
sub
cmp
mov
pusha
and
inc
shrl
xor
into
popa
dec
les
push
arpl
std
ja
cli
inc
lods
fwait
jno
cmc
sub
jo
les
add
mov
xor
cmp
test
jns
and
cmpsl
gs
push
scas
pop
in
sub
outsl
mov
call
mov
fldt
push
inc
inc
mov
subb
dec
cltd
inc
fs
xchg
stos
and
repz
ret
das
pop
sbb
mov
jmp
add
gs
inc
testl
gs
adc
cwtl
in
xlat
cmp
and
mov
push
add
bound
pop
xchg
imull
xchg
jge
mov
dec
je
lds
stos
jg
shr
adc
adc
inc
jge
add
pop
adc
push
shl
fbstp
dec
aad
call
out
lds
pop
cmp
mov
adc
mul
dec
push
nop
add
cmp
sub
mov
jmp
pop
or
loope
punpckhbw
rcl
cmpsl
push
adcb
cmp
std
adc
js
sub
rcr
fadds
mov
test
out
insb
leave
mov
fildl
testl
ret
xchg
int3
or
adc
push
sbb
push
xor
adc
imul
movsb
in
dec
hlt
pcmpgtb
cltd
ljmp
dec
xor
sbb
ror
add
sbb
and
lock
rcrb
movsb
jb
mov
stos
adc
pop
lods
nop
mov
jl
aas
pop
out
lret
cmp
sarl
pop
ss
adc
mov
xchg
xchg
fwait
push
gs
jle
aam
int3
and
lret
xor
mov
inc
push
je
jmp
cmp
lret
jecxz
shlb
adc
pop
btr
pop
sub
clc
fimull
push
or
adc
jge
mov
int
test
mov
cmp
outsb
cmc
shl
vcmpsd
clc
ss
aaa
lea
arpl
xorb
inc
dec
mov
mov
mov
push
clc
dec
cli
sub
stc
mov
mov
mov
xchg
xorl
cmc
mov
mov
aam
add
adc
mov
es
xor
sub
xchg
cld
inc
push
adc
sarb
mov
xchg
adc
test
sbb
mov
xchg
add
ficomps
aaa
fcompl
incl
outsl
xchg
movsl
inc
scas
fldl
jmp
adcl
js
pop
aad
scas
scas
or
dec
xchg
loope
sub
fdivrs
in
add
mov
mov
shrb
mov
out
xchg
bound
inc
stos
out
xchg
sbb
pushf
leave
loope
insb
test
xor
mov
iret
inc
pop
mov
jp
pop
sbbl
loop
gs
mov
out
mov
dec
pop
sub
cld
stc
dec
out
addb
jo
dec
pop
dec
sub
inc
xlat
ss
shlb
dec
icebp
and
in
add
inc
sub
iret
mov
fisubs
cmp
sbb
outsb
in
shll
ret
shl
jle
std
mov
mov
iret
push
lcall
push
xor
mov
mov
pop
data16
xor
xchg
arpl
aas
push
push
enter
cmp
jge
pop
inc
jge
or
inc
sub
mov
cmp
sbb
mov
mov
pop
or
pop
mov
xchg
jg
xor
int
push
in
and
xchg
lods
cmp
inc
sub
mov
sbb
push
jl
cwtl
aam
xchg
mov
cs
xchg
inc
sbb
push
dec
jbe
fdivs
add
arpl
jmp
and
repnz
pop
jae
xchg
stos
pop
mov
dec
ror
data16
out
xchg
mov
jbe
scas
adc
ror
stos
adc
dec
in
outsb
test
outsb
inc
or
fistpll
sub
xlat
ffreep
mov
mov
xchg
gs
mov
mov
xor
add
movsl
adc
out
mov
and
mov
adc
cmp
and
cmp
icebp
xchg
lahf
iret
fdiv
sbb
leavew
fstpl
xchg
cltd
xchg
iret
dec
cmp
and
jno
jae
aaa
cs
int3
jle
pop
jnp
push
sub
xlat
aad
pop
cmp
lea
dec
lret
mov
sbb
inc
ret
sbb
cmp
mov
push
pop
test
cld
dec
pusha
mov
shrb
jle
mov
addb
ss
das
fisubs
jb
pop
add
shl
xor
or
dec
lahf
sahf
sahf
inc
cmpsl
cmp
sub
inc
add
mov
mov
incb
inc
sub
sub
ret
pop
mov
bts
mov
mov
pop
repnz
lea
andl
dec
into
ss
movsl
lods
cli
lock
mov
push
jmp
aad
inc
add
mov
les
push
mov
jg
push
roll
cmpsl
mov
sti
nop
pop
inc
pop
popf
sub
sub
jno
out
jo
mov
xor
dec
pop
in
mov
ds
mov
sub
push
stos
out
or
int
adcb
iret
mov
iret
mov
or
add
data16
loopne
orb
jbe
shll
pushf
mov
out
inc
and
adc
add
and
lods
scas
mov
mov
mov
adcl
bound
dec
xchg
into
int3
mov
sub
or
xchg
fs
shl
inc
and
rcrb
lret
divb
adc
imul
inc
adcl
in
mov
cmpsb
aam
dec
cltd
pop
inc
pop
xor
stos
lret
daa
sahf
add
jb
loop
xchg
sbb
jg
mov
mov
lods
dec
insl
mov
fs
test
push
aad
jge
sbb
dec
push
jo
and
pop
scas
sbb
nop
popf
cmp
push
ret
fs
scas
rcrl
fwait
aam
mov
cmp
imul
fdivrl
jp
mov
xchg
push
dec
dec
pop
mov
int3
xchg
stos
lds
fidivs
cmp
fsub
pop
cmp
xor
scas
int3
xchg
dec
adc
std
jo
mov
bound
inc
cmc
jle
cmp
and
rcll
cmp
popf
leave
sub
pop
xchg
xchg
mov
js
cmp
xchg
jne
xchg
stos
inc
mov
xchg
dec
daa
push
xor
sti
xchg
push
insl
sarl
in
aam
dec
icebp
jmp
jbe
mov
fwait
arpl
xchg
loopne
xchg
pop
mov
notl
pop
mov
dec
mov
pop
push
mov
cmp
stos
xor
jmp
fwait
enter
loope
repnz
push
int3
scas
sub
hlt
and
jns
and
loop
cld
movsl
pop
adc
push
sub
mov
cld
lea
inc
pop
pop
add
pop
push
jne
data16
xor
incb
std
mov
pushf
xchg
cltd
arpl
sub
ficomps
add
ljmp
cld
sbb
imul
pop
sbb
adc
push
stos
xchg
lea
jnp
popa
push
pusha
push
inc
scas
pop
repnz
or
pop
stos
out
test
adc
or
in
pop
inc
daa
push
sub
dec
cltd
cmc
pop
lds
push
sbb
sbbl
or
fstsw
rcrb
sub
fucomi
test
lahf
fists
push
and
andb
daa
pop
sbb
and
fldl
push
dec
xchg
ss
dec
hlt
cmpsb
test
dec
je
popf
mov
pop
hlt
add
and
add
int
jl
int3
repz
sub
lea
push
adc
inc
push
and
insb
mov
jecxz
add
addb
insl
mov
mov
roll
dec
daa
pushf
hlt
cmp
or
or
and
lret
cmp
leave
jns
in
outsl
popa
and
push
cmp
mov
ret
adc
sti
out
jno
fldt
mov
and
pop
ret
bound
mov
pop
push
test
js
push
inc
add
lea
dec
insb
rorb
push
and
shll
add
pop
push
stos
leave
sub
jnp
push
mov
adc
push
add
movq
mov
xchg
repz
cwtl
adc
test
jns
dec
cmpsb
jne
mov
and
mov
and
cmp
jge
jnp
and
xchg
sub
xchg
mov
rorb
fldl
sahf
sub
shll
je
add
mov
adc
mov
or
xor
mov
push
decb
insl
dec
mov
cld
xlat
sub
dec
pushf
ja
sbb
int
lret
pop
sbb
inc
and
repz
add
xor
outsb
jmp
push
das
xchg
icebp
mov
add
and
mov
xchg
push
cmpb
push
nop
xor
fwait
sbb
les
daa
out
pop
or
inc
call
push
shlb
lods
push
dec
pop
inc
adc
aaa
push
inc
jmp
or
clc
lret
out
cmp
outsl
mov
xchg
sbb
adc
jge
push
mov
xor
mov
iret
sub
pop
add
loope
push
add
adc
mov
jg
pusha
mov
jnp
pop
inc
dec
xor
pop
ret
pop
arpl
xorl
test
inc
cmp
sbb
inc
push
xorb
out
out
lock
lea
sub
mov
movsl
cmp
and
pop
sar
mov
xlat
cld
mov
outsl
sbb
divl
jle
pop
iret
or
lcall
in
fs
pop
mov
insb
inc
lds
sub
es
std
pop
insb
hlt
sub
out
test
or
mov
cmp
icebp
dec
jne
pop
out
xbegin
adc
lods
sub
dec
mov
mov
shll
xor
fwait
insl
sub
call
cmp
adc
cli
es
xor
test
les
js
shlb
test
mov
les
cld
imul
jae,pt
sub
ja
push
ljmp
rcrb
mov
and
mov
cmpsb
xchg
clc
pop
sub
rcrl
les
leave
mov
mov
cmpb
inc
out
ret
fnstcw
xlat
cmpsl
xchg
or
in
shlb
fcompl
lret
loope
push
popa
notl
aad
inc
je
rcll
sbb
lret
into
or
addl
xor
and
test
xor
mov
into
xor
decb
push
add
mov
xor
sbb
jo
xchg
test
lret
mov
xchg
or
sub
js
pop
je
mov
jmp
sbbl
addb
das
add
inc
pop
add
add
push
lahf
mov
mov
mov
cmp
arpl
leave
adcl
xchg
insl
dec
mov
insl
jmp
push
lea
mov
pop
lcall
loope
push
out
adc
push
inc
add
notb
insb
adc
pop
out
cmpsb
sbbb
dec
stos
sub
aas
push
mov
test
inc
pushf
addl
xchg
sarl
xchg
jae
bound
mov
sub
popa
pushf
jge
iret
mov
xor
aas
insl
and
mov
out
mov
pop
add
adc
mov
cmp
jl
cmp
mov
enter
das
shr
adc
fnsave
in
dec
xchg
stc
leave
xor
adc
push
xchg
movsl
in
shrb
push
mov
and
cli
minps
push
mov
sbb
adc
mov
add
lret
jbe
or
enter
adc
mov
mov
xchg
sub
sbb
test
rorb
cmpsl
mov
jmp
mov
jg
mov
test
fisttpl
add
cmp
mov
pop
dec
sub
test
iret
adc
rolb
cli
inc
outsl
or
repnz
jnp
clc
popa
imul
sub
mov
mov
inc
add
outsb
inc
dec
fsubrp
outsb
mov
mov
xor
stc
cld
add
and
push
jg
cmpl
lds
cmp
cmp
cs
out
and
mov
dec
xchg
push
aaa
clc
sub
push
or
in
repnz
pushf
fldt
inc
xor
scas
pop
int
in
jae
stos
xchg
daa
jmp
es
adc
mov
or
inc
popa
scas
or
pop
sbb
shl
stos
test
rclb
push
cmp
mov
mov
loope
dec
imul
inc
or
or
inc
pop
in
outsl
and
lds
leave
lods
in
aad
setle
movzwl
outsb
in
cmp
jecxz
sbb
xor
cmp
inc
inc
bound
aas
sub
les
scas
sbb
dec
fwait
jge
insl
jl
jno
lods
inc
mov
adc
pop
and
out
pop
mov
dec
stc
or
fistpll
or
cmp
xor
pop
fiaddl
call
popa
roll
and
add
popf
icebp
cmp
mov
push
cli
test
pop
adc
movsb
fistpll
cmp
hlt
ret
decb
sub
jno
inc
inc
jg
mov
inc
std
pop
imulb
cld
mov
cltd
fcmovnu
add
hlt
or
add
fs
xchg
pop
and
jns
repz
xlat
adc
cs
xor
lods
jbe
mov
out
cltd
add
cmp
outsb
inc
push
sbb
arpl
push
movsl
enter
insb
xor
add
aad
xlat
test
aad
inc
adc
lcall
push
dec
das
ucomiss
outsb
ret
leave
pop
adc
jnp
or
and
jo
mov
test
push
sbb
ret
pop
es
push
mov
sbb
std
mov
insb
jmp
mov
inc
stos
movsb
jp
xor
sub
fdivrl
into
out
cwtl
lret
sbb
jmp
mov
fs
pmaxsw
and
test
test
addr16
xchg
push
int
lods
cli
cmc
popa
aad
cmpsb
cmpsl
ficoml
loopne
int3
sbb
xorl
add
sbb
pop
push
adc
cmpsb
mov
adc
xor
test
inc
test
pop
inc
lahf
outsl
sarb
fs
or
xchg
cmp
arpl
mov
ds
sti
mov
int3
ss
xor
movsl
subl
or
je
ja
stos
cmp
xchg
mov
cltd
sub
mov
repnz
add
bndstx
ss
adc
bound
jo
dec
cld
es
inc
lret
add
ret
aas
bound
cmp
sub
mov
pop
and
inc
push
sbb
cmpsb
jns
mov
leave
das
cmp
in
lods
mov
mov
dec
int3
push
mov
mov
rclb
jl
inc
gs
push
mov
loope
or
shlb
fsincos
xchg
mov
adc
jno
lea
sbb
out
outsb
sahf
xchg
jno
daa
loopne
je
incl
loopne
inc
xor
mov
add
int3
fistpl
in
icebp
mov
sub
add
and
sti
jge
jns
mov
xor
mov
jno
mov
cwtl
push
aaa
pop
cmp
sub
mov
push
pop
negl
pop
xor
pop
xor
pop
adc
sbb
stos
jbe
shlb
mov
addr16
inc
lahf
cmp
inc
and
pop
call
mov
push
lds
or
lock
push
sub
pop
lret
nop
cltd
gs
insb
outsb
xchg
xchg
jge
adc
sbb
cmp
sbb
sub
push
scas
push
cmpsb
fadds
nop
dec
lret
xchg
and
and
roll
std
dec
xchg
lret
mov
xchg
in
mov
sbb
call
loope
imul
cmpsb
mov
cmpsb
js
and
push
or
jecxz
lea
push
add
scas
pop
mov
stos
adc
pop
es
into
xor
xchg
nop
loope
cmpl
js
pop
shrb
out
mov
cmp
and
fsubrs
int3
adc
stos
into
and
xor
jbe
or
pop
test
sub
sti
mov
xchg
adc
jb
adc
xor
arpl
sub
lret
inc
lret
push
xchg
push
insb
ljmp
xor
jb
fwait
add
pop
cmpsb
mov
dec
les
cmpl
addb
add
aam
lods
pushf
jecxz
pop
cltd
jg
scas
ja
out
adc
xor
mov
aam
adc
bound
rcrb
cmp
scas
loope
fcmovne
sbb
outsb
addr16
stos
jecxz
test
lea
mov
popa
cmp
sbbl
lods
inc
sbb
and
push
mov
xor
sahf
xor
imul
out
inc
xchg
sarl
adc
cmp
xchg
jmp
jne
lret
dec
push
icebp
xchg
jmp
int
adcb
push
pop
lret
loope
je
mulb
add
mov
mov
js
out
dec
pop
ja
mov
add
les
push
lods
xchg
dec
mov
jecxz
out
ud0
mov
stc
sub
xchg
outsl
pusha
jns
aad
push
push
adc
jmp
test
ja
or
jbe
movsl
push
movsb
sbb
icebp
and
rcll
pop
std
lock
hlt
gs
pop
fisttps
sub
sub
sti
stc
jne
push
cmp
lock
push
call
adc
push
adc
sbb
xchg
jae
sub
pusha
lea
adc
sbb
mov
fwait
scas
cmp
int3
push
sub
dec
ret
lcall
ret
sub
out
inc
fxch
pop
add
cs
xor
jb
pop
mov
push
data16
int
aad
xor
pop
cli
sbb
jg
pandn
shr
xchg
andl
fisubl
sahf
inc
stc
mov
outsl
in
cltd
test
repz
test
subl
je
repnz
int3
push
and
aaa
lcall
out
xchg
daa
lods
shll
shlb
sarb
lret
cwtl
ds
pop
out
adc
ficoml
ret
movsl
inc
jno
test
sbb
in
jno
push
cli
adc
mov
jecxz
jbe
outsl
pop
add
insl
cld
inc
mov
negb
in
insl
in
lods
and
psubusw
cmp
cwtl
inc
jecxz
sub
or
push
and
pop
jne
cmp
cld
or
sbb
sti
stc
and
pop
std
test
in
mov
rcrl
mov
xchg
mov
in
leave
xlat
cmpsl
loopne
mov
dec
sbbl
inc
movsb
shll
jo
jecxz
int3
pushf
mov
out
outsl
inc
pop
sbb
jmp
enter
xchg
fwait
pop
lcall
jmp
push
dec
xchg
pop
shlb
icebp
cmpb
push
jge
or
jae
inc
popf
movsb
movsl
sub
orb
jle
inc
into
xchg
repz
mov
mov
cmpsb
andl
iret
push
cmp
push
or
sub
bound
adc
jmp
adc
sarl
mov
sarl
mov
iret
sbb
sti
sbb
xor
popf
sub
and
xchg
mov
jo
push
dec
cmp
loopne
loope
jmp
pop
cmp
jmp
cmpsb
mov
dec
stc
imul
call
add
sbb
les
outsl
inc
xchg
jbe
sub
sbb
iret
outsb
stos
jne
jns
inc
cltd
mov
sbb
imul
jmp
fadds
std
push
sub
pop
ja
cmp
or
push
xlat
scas
push
lahf
std
hlt
jg
cmp
mov
adc
arpl
mov
in
mov
mov
xchg
sub
fisubrl
mov
pusha
test
xchg
arpl
dec
jp
cmp
sbb
gs
cltd
sbb
sub
dec
ja
repnz
or
stos
xchg
faddl
js
xchg
bnd
dec
mov
xchg
xor
pop
clc
daa
fimull
popa
cmpsl
mov
dec
rclb
add
ret
lea
sbb
dec
add
adc
push
pop
in
into
scas
or
jno
xor
push
out
les
js
fbstp
mov
nop
pop
jae
jno
loope
sbb
repnz
cmpsb
sarb
into
cltd
adc
dec
loope
add
xchg
es
mov
movsl
or
loope
jmp
jae
or
negl
insb
jne
dec
enter
in
push
mov
iret
stos
and
mov
inc
ss
dec
shr
inc
mov
ficoms
mov
mov
mov
dec
jle
test
fidivrl
das
ljmp
shlb
add
xlat
fwait
mov
push
enter
xchg
cmpsb
lahf
xchg
sti
sub
jbe
jnp
das
repnz
dec
cli
roll
push
or
mov
fwait
lahf
adc
shl
mov
sahf
fimull
pop
int
mov
into
fadd
jnp
sbb
je
xchg
dec
pop
and
mov
in
and
mov
or
pop
xor
cmpsb
dec
mov
jno
int3
jno
jb
dec
xor
roll
clc
pop
jo
mov
xchg
int
in
sahf
and
dec
xorl
lret
popa
or
por
pop
pop
lea
shrl
sbb
jg
test
pop
sub
fisttps
cltd
mov
mov
std
mov
or
popa
xor
or
sub
adc
fadds
mov
movsl
sbb
jle
mov
jno
loopne
pop
mov
outsl
adc
ret
dec
fs
sub
rcrb
stc
in
ss
clc
jb
mov
cmpsl
arpl
aad
mov
or
ret
in
lret
enter
mov
cmp
and
pop
divb
in
push
pop
fisubrl
push
mov
ljmp
cmp
fdivrp
xor
pop
bound
pop
out
setp
mov
call
lods
pushf
and
pusha
xchg
test
daa
enter
pop
or
jge
sub
mov
cmpb
insb
mov
inc
cmp
and
cwtl
push
pop
out
rcrl
xchg
mov
ror
or
loop
leave
pop
popf
inc
sub
jnp
aaa
arpl
js
dec
imul
in
mov
adc
rcrl
lahf
out
dec
dec
popf
sub
push
ret
outsb
push
mov
outsl
xchg
mov
push
or
mov
in
jl
shlb
aad
cmpsb
push
js
jp
mov
and
adc
mov
dec
in
dec
push
pop
addr16
mov
stos
jo
cmpsb
mov
dec
scas
sbb
pop
push
incl
xchg
dec
and
push
cmc
mov
xchg
negb
pop
jae
jns
xor
pop
cli
cmp
sbb
mov
cmpsl
cs
fidivrs
lret
or
mov
xchg
xor
mov
popa
mov
push
ret
faddp
and
test
outsb
push
cld
and
add
into
std
ja
sbb
sti
jb
adc
push
mov
in
adc
pop
in
cmpl
sub
ret
mov
std
clc
cltd
sbb
xchg
add
dec
pop
sub
in
mov
add
xchg
popf
mov
adc
adc
cwtl
add
lods
dec
mov
jo
in
push
lock
xchg
dec
xchg
out
rcrb
mov
xchg
adc
fadds
mov
mov
mov
sub
pop
jnp
inc
mov
aaa
or
push
jmp
les
aas
fs
mov
stos
and
sarl
int3
sahf
and
das
xchg
shll
hlt
xor
shrl
icebp
int3
fldt
pop
push
xor
arpl
xchg
out
pop
fiadds
stc
fadd
pop
sbb
imul
ds
lcall
in
xor
jno
push
cmc
stc
clc
cmp
push
mov
or
call
push
or
daa
mov
inc
in
fimull
stos
pop
out
dec
aam
insl
inc
daa
in
inc
pop
inc
xchg
psadbw
scas
std
push
inc
mov
les
aam
jecxz
jbe
ja
lock
fidivs
sbb
aaa
xchg
mov
jo
push
orl
frstor
cli
rcll
cmc
and
in
fdivr
stos
or
mov
xchg
into
push
and
add
js
test
jo
iret
xchg
pop
cli
cld
xor
sub
adc
push
mov
in
and
lods
jo
xor
sub
cmp
sub
out
fwait
mov
cmp
in
enter
lds
add
call
dec
add
cltd
stc
xor
adc
outsl
and
inc
pop
xor
mov
arpl
stos
push
adc
iret
or
insl
aaa
pop
fiaddl
roll
clc
xchg
pop
lea
mov
and
scas
and
push
sbb
sbb
xor
inc
cs
cmp
dec
scas
dec
ret
mov
or
xchg
in
je
rorb
pop
int
xchg
ja
adc
fisttpll
dec
fstpl
xadd
cmp
inc
pop
inc
shll
in
andl
push
jmp
nop
sbbb
adcb
push
add
sarb
out
jbe
sub
mov
add
stos
push
repz
dec
mov
dec
adc
adc
push
movsl
stos
add
mov
test
or
loop
testl
sbb
test
mov
sub
inc
add
cmp
dec
add
jae
dec
test
and
fildll
inc
cmp
inc
push
push
adc
aam
fs
stos
xchg
and
arpl
lods
mov
mov
and
shll
ds
fwait
pop
clc
mov
hlt
movsb
shlb
mov
leave
push
loop
ret
leave
xor
jmp
fistps
ret
iret
aaa
cltd
insb
mov
lret
loope
in
mov
and
in
pushf
stos
rclb
cld
testb
std
adc
pop
loopne
daa
cld
push
or
add
jbe
adc
sahf
dec
addr16
ljmp
cmp
iret
mov
aam
xchg
push
sbb
ljmp
sub
in
sbb
sti
jmp
push
xchg
lahf
lahf
dec
mov
sbb
hlt
lea
stos
add
sahf
ficoml
inc
nop
outsl
aas
xchg
push
dec
ss
dec
mov
mov
sub
pop
xchg
mov
jp
mov
xchg
lret
inc
jle
outsb
adc
inc
jp
gs
mov
es
xchg
fstpl
rcrl
int
out
fidivl
and
divb
movsb
lds
mov
es
rcll
insb
mull
loope
loope
and
fdivs
dec
fildll
xchg
sbbl
out
sbb
shlb
push
sub
scas
rolb
int
fldcw
insb
imul
bound
aaa
push
daa
push
add
sbbl
ret
cmpsl
or
in
sbb
out
sahf
sub
clc
clc
sub
cli
testl
std
subl
or
mov
or
pop
dec
fstpl
dec
jp
adc
push
cmp
and
push
add
mov
lods
ds
enter
les
mov
hlt
dec
or
es
mov
push
lret
lret
icebp
or
mov
andb
inc
push
fldenv
imul
loopne
mov
dec
cli
sub
jnp
adc
push
jmp
and
xchg
pop
inc
mov
and
stos
add
cltd
sbbl
jns
lods
aaa
icebp
inc
decl
dec
xchg
neg
andb
popf
rorl
sbb
xor
cltd
xor
adc
adc
xchg
mov
jmp
add
test
dec
or
shr
hlt
shrd
lret
push
jg
pop
inc
adc
in
sbb
push
std
fs
xor
or
inc
pop
xor
push
pop
insb
fidivl
mov
cmp
push
inc
inc
imul
arpl
or
loopne
sbb
and
mov
dec
inc
enter
lock
fists
test
and
cmp
adc
rclb
sub
mov
xchg
jo
inc
jle
jo
adc
sbb
inc
jno
pop
add
aaa
xchg
adc
mov
pop
fidivs
in
push
imul
and
faddl
repz
cs
out
loop
in
stc
shlb
xchg
sbbb
or
iret
sbbb
jmp
and
fisttpll
repnz
int3
mov
push
cmp
add
or
and
or
dec
jmp
dec
imul
ljmp
inc
lret
fcomps
mov
dec
test
mov
inc
out
cltd
mov
pop
xorl
jbe
in
fisttpll
aaa
sub
cmp
ror
js
cmpsb
repz
sbb
xor
pinsrw
mov
cmp
pop
adc
or
dec
out
lea
mov
ja
maskmovq
divl
xlat
mov
inc
repz
lcall
insl
sub
into
pop
mov
cmc
jae
adcb
adc
adc
add
sbb
std
sbb
aas
jp
bound
fisubrs
mov
jne
cld
xor
sub
loopne
leave
xlat
or
jmp
xor
hlt
lock
fistpl
int3
and
add
mov
xor
bsr
repnz
pop
mov
jns
rclb
push
adc
arpl
popl
int
mov
cmp
sbb
out
arpl
jl
adc
stos
cmp
enter
popf
or
test
push
in
int
shlb
jg
stc
ss
sbb
leave
mov
in
xlat
and
adc
xchg
xchg
xchg
push
adc
and
mov
pop
add
mov
mov
add
xchg
sub
xor
inc
hlt
shl
rorl
adc
adc
dec
addb
ret
pop
call
sarb
aaa
cs
xchg
outsl
scas
xchg
or
addb
andl
mov
fadds
adc
ret
sub
out
inc
cwtl
mov
pop
test
jbe
xchg
psraw
or
xchg
dec
insl
and
faddl
pop
dec
cmp
je
pop
cmpb
pop
mov
pop
mov
push
pop
mov
cmp
es
dec
mov
and
pop
loop
ja
out
jge
andb
jmp
pusha
xor
cmp
jge
lock
pop
jno
fsubr
fidivrs
dec
int3
hlt
mov
push
shrl
ficoml
pop
mov
xchg
add
adc
jns
xlat
sub
inc
mov
dec
sbb
sub
and
movsl
cwtl
inc
cmp
mov
cltd
sbb
xlat
std
push
test
mov
push
pop
in
clc
jecxz
push
rcrl
ja
fwait
out
inc
xor
mov
ficomps
in
repnz
or
insb
fcomps
rorb
test
cmp
pop
popa
insb
xor
sti
popa
cmp
sub
repnz
negb
pop
pop
ds
adc
mov
mov
pop
mov
inc
xor
test
xchg
int
jecxz
push
outsl
in
addr16
pusha
ja
xor
dec
std
add
cwtl
ds
adc
adc
push
cld
je
lods
pop
inc
jb
rclb
xchg
das
xor
mov
mov
mov
xlat
and
xchg
out
push
mov
hlt
inc
icebp
lahf
int3
shrl
std
cs
jb
test
cld
sub
dec
repnz
jecxz
xor
mov
and
mov
adc
scas
sti
push
repnz
and
xor
movsl
adc
insb
xor
mov
add
into
xchg
loop
push
shrl
xchg
sub
sub
inc
push
ret
add
out
lods
outsb
jne,pt
jmp
xor
ret
and
jnp
aam
movsb
out
pusha
sub
mov
mov
rorl
inc
nop
xchg
jae
call
adc
sub
push
sbb
mov
pop
out
jg
mov
mov
sbb
shll
adc
stc
cmp
sarl
pop
sarl
mov
push
and
mov
gs
sbb
loope
data16
or
shlb
aam
imul
das
push
mov
jo
nop
xchg
fcoml
aas
jle
faddp
pop
testb
sub
jns
inc
fsubs
fcomp
int3
and
mov
sbb
add
shrl
outsb
lahf
and
cmp
push
push
outsb
mov
mov
jle
xchg
aad
pop
aas
stos
dec
cmp
sub
enter
xor
jbe
ficoml
addb
in
fstl
dec
testl
cmp
lods
mov
outsb
out
jle
push
jb
loope
mov
inc
push
sub
sbb
sahf
mov
mov
push
xchg
adc
and
jne
fadds
imul
je
sub
dec
arpl
pop
dec
jle
outsb
stos
pop
jge
mov
cmp
stos
adc
jno,pt
cld
sub
daa
or
sub
sahf
aaa
ds
out
jg
cmc
fsub
std
jb
fs
cmpsl
xchg
jmp
out
xor
or
fs
and
pop
ret
cmp
mov
sub
mov
fimuls
sub
das
xchg
jg
pusha
sub
cli
dec
ja
mov
inc
fucomip
outsb
mov
lods
jl
cmpb
and
pushf
add
cmp
pop
jbe
mov
lret
nop
adc
scas
dec
push
push
jae
iret
icebp
xor
add
outsl
daa
or
mov
enter
jecxz
insb
loop
sbb
insl
xchg
and
test
outsb
test
std
mov
jno
mov
loop
out
mov
inc
je
mov
inc
push
and
pop
lods
repz
aam
aaa
push
jmp
lods
int3
sahf
or
jp
dec
hlt
cmp
sub
pushf
popa
dec
inc
mov
xor
idivb
shlb
jl
inc
xchg
push
addr16
and
or
mov
mov
shl
dec
pop
xchg
lcall
xchg
jmp
aaa
imul
outsb
fidivrs
add
scas
repnz
jecxz
hlt
add
mov
je
test
rorb
stos
notl
jo
and
loope
lcall
xchg
mov
insb
jmp
les
mov
js
xor
movsb
pop
mov
xchg
nop
adc
jo
andl
push
arpl
dec
pop
lods
movsl
sbb
stc
mov
mov
test
adc
mov
cmp
inc
rcrl
fdivr
mov
mov
inc
xchg
aam
scas
aaa
mov
idivb
repz
mov
cmp
add
ljmp
mov
add
ds
loope
cmp
popa
ljmp
and
iret
movq
sub
push
dec
jno
in
cmpsl
test
gs
pushf
fistpll
mov
inc
repz
pop
loop
add
mov
pop
fisttpl
pop
pop
xchg
hlt
je
pushf
sbb
cmp
mov
push
inc
loop
mov
arpl
cmp
fisttpll
repz
push
adc
sub
jbe
lcall
inc
lods
mov
jl
pop
loop
mov
sub
lcall
mov
pop
jno
aaa
push
adc
imul
add
std
mov
aas
std
bound
mov
mov
dec
cs
cmp
or
stc
popf
pop
cmp
lahf
dec
mov
pop
and
pop
add
movsb
cmpsl
cwtl
outsl
pop
daa
dec
dec
mov
mov
rcl
lret
and
out
pop
xchg
xchg
xchg
push
es
decb
das
stos
sub
test
and
and
popf
jle
cmp
subl
and
sub
push
les
add
or
out
sbb
xchg
sbbb
inc
mov
or
xchg
popf
fcmovb
add
cmp
out
and
or
add
adc
inc
fdivl
pop
sbb
ljmp
mov
and
sahf
cmp
stos
icebp
push
sub
repnz
stos
xor
js
adc
add
and
arpl
push
sbb
xorb
pop
mov
xor
gs
roll
stos
gs
outsb
cmp
or
in
cmpl
xor
int3
add
movsl
dec
mov
mov
pop
and
insb
in
nop
in
push
lods
out
adc
mov
lods
or
pop
sbb
out
sahf
mov
or
mov
pop
in
aad
mov
pop
ljmp
mov
gs
nop
es
leave
hlt
pop
xchg
cmpsl
mov
mov
push
dec
fistps
mov
mov
test
aam
lret
out
dec
jmp
mov
mov
ja
cmp
and
js
sti
inc
jl
arpl
xchg
out
jns
cli
inc
sbb
loopne
rcrl
inc
cs
dec
loop
pop
arpl
xor
or
jp
xchg
insl
out
xor
repz
mov
icebp
leave
push
jbe
mov
mov
xlat
and
jnp
mov
or
dec
fadds
mov
adc
sbb
push
mov
push
rcr
ret
mov
inc
nop
jle
jp
pop
ret
pop
pop
push
mov
cmp
mov
adc
dec
adc
sub
std
scas
int
add
insl
pop
fadd
nop
stos
dec
pop
mov
jo
sbb
std
mov
psllw
fcoms
fists
cmp
push
inc
sbb
in
outsb
es
push
sbb
inc
mov
sub
out
mov
out
in
daa
dec
mov
fsubl
mov
outsl
sbb
loop
out
pop
movsl
jno
xchg
push
jb
xchg
cltd
xchg
mov
out
or
scas
pop
push
repnz
jb
xchg
dec
int3
ja
lds
ret
dec
loop
sbb
pop
outsb
pop
jmp
imul
jmp
out
pop
sti
es
dec
into
rorl
push
xchg
test
clc
rcr
pop
or
in
or
jae
cmp
int
cmp
xor
test
jo
adc
xchg
jg
add
cmovnp
ds
lahf
dec
or
dec
hlt
lods
psubusw
cmpsb
xor
inc
cmpl
in
ret
enter
pop
add
add
ss
inc
or
cmp
jno
fs
cltd
inc
sar
push
jbe
mov
clc
dec
enter
and
mov
sub
xchg
jp
lcall
jne
stos
xchg
arpl
sbb
adc
pop
dec
daa
pop
pop
push
pop
inc
cmpsl
sub
xchg
xchg
iret
sub
movsl
loop
sub
shrd
js
cmpsb
add
popa
or
enter
test
fisubrl
aad
gs
out
nop
int3
jge
mov
sahf
push
outsb
pop
loopne
xchg
pop
lock
and
clc
sub
sub
popf
xor
cwtl
sahf
mov
jp
loope
outsb
mov
jecxz
out
mov
cwtl
xor
fldcw
fs
jno
cli
ds
jb
jb
out
lods
xor
cmpsb
sahf
stos
in
int3
ret
out
iret
fs
pop
fs
cmpsb
cs
popa
vpmullw
rolb
mov
mov
aad
xor
jns
lahf
or
cltd
jne
pop
sti
or
cvtpi2ps
mov
into
or
mov
add
movsb
enter
ja
push
sub
stos
loope
sbb
cmp
repz
flds
jge
sahf
sub
jle
push
jb
sti
popa
cltd
add
or
mov
xchg
int3
push
jg
cmc
xor
add
mov
or
xchg
rcl
in
lcall
adc
mov
xor
push
cltd
add
push
add
inc
xchg
cmp
push
jbe
pop
dec
sbb
pusha
aas
adc
mov
into
inc
icebp
dec
inc
test
shlb
sub
and
lds
xor
xor
sbb
xchg
test
bound
divb
pop
push
ljmp
das
call
mov
or
mov
int3
push
mov
loop
jg
dec
out
mov
mov
addr16
and
add
or
add
fstpt
icebp
add
mov
cmp
bswap
int
addr16
xor
mov
stc
lods
test
lahf
cmp
jae
jnp
add
mov
faddp
int3
and
pop
sahf
mov
mov
ret
fstpl
fdivrp
adc
incl
xchg
inc
aaa
repnz
insl
jge
mov
sub
xchg
incb
sub
sub
lret
out
inc
test
xor
fnsave
les
jno
xor
pop
iret
pmaxsw
or
jg
jae
movsb
add
shr
int3
mov
arpl
shll
ret
adc
or
inc
out
movsl
xlat
mov
int
scas
sbb
cmp
add
in
outsb
movsb
xchg
mov
mov
mov
gs
mov
pop
sti
imul
addl
pusha
daa
sbb
jmp
insb
lahf
cmpsl
je
out
add
xchg
cld
repnz
sti
inc
aad
ljmp
or
sbb
jmp
or
or
punpckhdq
jbe
ja
ficompl
and
aad
adc
call
cmp
pop
inc
sbb
jae
stc
jae
lods
ds
xchg
outsl
outsb
pop
push
xchg
push
inc
aas
mov
pop
mov
addr16
popf
mov
aad
pop
jecxz
push
mov
sbb
add
stos
mov
xchg
aaa
push
or
push
movsl
int
jnp
xchg
lock
cmp
lea
cmc
adc
xor
push
int3
jg
mov
mul
repnz
inc
adc
mov
push
push
xchg
push
shlb
out
lret
sub
push
and
sub
cmp
push
add
cs
xor
test
das
mov
cmp
jns
aam
add
lock
cmp
aad
mov
adc
mov
enter
adc
dec
add
in
sbb
fidivrl
fistl
xor
push
xchg
mov
mov
cmp
pop
fisttpl
and
ljmp
add
fs
testb
pop
in
fdivr
mov
xchg
cmpsl
ljmp
pop
jge
shrl
dec
rorb
mov
outsb
xchg
add
push
stos
je
arpl
push
ret
mov
and
pusha
fdivs
mull
cltd
jae
in
addr16
xor
ror
aaa
xchg
test
mov
or
push
pop
in
outsb
shl
jmp
xchg
popf
pusha
test
mov
push
jne
ja
push
adc
imul
roll
inc
dec
jl
js
adc
mov
negl
dec
and
sbb
loope
lods
pop
mov
sti
or
xor
mov
imull
jp
and
fidivrs
insb
dec
lahf
sbb
call
cmpsl
jne
les
lahf
outsl
cmp
divb
lahf
data16
mov
jno
adc
sub
std
mov
mov
data16
addb
add
repz
sub
jo
mov
sahf
mov
loop
cmpsl
sahf
pop
popa
cmpsl
push
fisttpll
push
pop
in
stc
arpl
movsb
mov
iret
mov
in
mov
rcl
scas
arpl
push
mov
jge
ss
outsb
mov
lods
imul
sub
mul
nop
jl
je
test
mov
cwtl
sub
mov
sub
sub
pushl
loop
mov
xchg
push
cmp
and
fbld
popa
js
cltd
fists
andl
mov
inc
lahf
cld
mov
mov
clc
jne
int3
cmp
out
mov
sbb
xchg
out
ret
add
hlt
lods
ffree
jo
sarl
in
push
fcmovne
push
xor
pusha
mov
sarl
or
stos
mov
daa
dec
xor
andl
sbb
hlt
jae
movsb
xchg
mulb
icebp
inc
adc
add
pop
leave
ret
pop
mov
pop
or
add
push
sbbb
inc
rolb
inc
dec
in
scas
int
imull
out
insl
pop
jecxz
ljmp
and
jo
cmp
iret
xlat
aad
movsl
inc
fsubl
mov
dec
movsb
or
push
dec
dec
lods
mov
dec
lcall
dec
cs
int3
divl
lcall
or
sbb
xchg
repnz
xor
fistps
xchg
fisubrl
mov
lret
inc
shlb
push
push
inc
jmp
inc
into
ljmp
jbe
outsb
cmpsl
dec
decl
push
fcmovb
icebp
negb
jg
jns
inc
stos
in
adc
or
bound
lahf
or
jo
lcall
faddl
adc
test
and
and
lock
popf
in
push
cwtl
sbb
push
fcmovnbe
push
ja
push
adc
dec
shlb
and
sbb
or
movsw
xlat
pusha
or
xor
aaa
shrb
mov
rorl
add
shr
mov
dec
in
xchg
jle
push
cmp
mov
mov
inc
and
jnp
es
adc
dec
lods
inc
loopne
jg
xor
les
bnd
or
into
sub
andl
or
mov
lea
fstpl
lods
out
call
or
inc
rcll
push
cmp
lcall
stos
mov
lds
pop
and
std
add
or
jbe
lods
cwtl
inc
mov
push
cmp
add
cmp
sub
push
outsl
jne
nop
push
imul
mov
test
lods
aam
insl
pop
lcall
and
notl
jl
nop
addr16
cld
or
sub
fsubrs
mov
aaa
mov
inc
sbb
push
aad
sub
les
stos
push
call
aaa
jge
movsl
mov
jno
mov
fnstsw
xchg
inc
jmp
jp
dec
mov
stos
inc
push
push
fldcw
inc
loopne
insb
shll
xor
cmc
push
insb
fsts
push
mov
enter
std
cmp
mov
and
test
jmp
push
jle
lahf
outsl
test
sarl
mov
xchg
mov
inc
push
add
and
pop
insb
xchg
xchg
jge
mov
or
popa
cmp
push
mov
movsb
fwait
xchg
pop
xor
fdivr
lahf
jge
jb
in
mov
pop
sti
insl
test
mov
inc
test
add
nop
fisubl
and
or
jnp
push
cmp
mov
lods
fadds
sub
in
dec
ficoms
adc
cmp
rorb
adc
mov
fwait
test
add
xor
fs
cmp
aaa
cmp
imul
inc
nopl
rorl
push
inc
ja
xchg
loop
pop
or
in
cmp
xchg
xchg
mov
loop
mov
push
pop
fiaddl
adc
in
out
cmc
xchg
sbb
stc
xchg
pop
fimuls
out
mov
fistpl
aad
push
mov
mov
sub
push
mov
sub
sub
inc
pop
cs
push
repz
or
aas
ss
cmp
mov
inc
ljmp
xchg
mov
push
lret
xchg
iret
or
aaa
mov
mov
pop
mov
lods
mov
jmp
mov
pop
xchg
cmp
insb
call
data16
adc
nop
mov
mov
repnz
xchg
hlt
add
push
cmpb
push
hlt
adc
and
fs
test
jge
lods
in
mov
pop
push
sahf
xchg
out
test
cld
push
add
dec
cmp
jl
repnz
cld
sarb
pop
fucom
and
inc
shrb
divb
push
push
mov
dec
es
hlt
fisttps
sbb
sub
cld
outsl
scas
mov
je
push
dec
repz
pop
xchg
fwait
imul
ret
divb
clc
and
sbb
pop
or
push
es
adc
push
jnp
dec
fisubs
mov
hlt
jl
subb
push
not
mov
int3
push
or
xchg
int
ljmp
mov
push
call
push
lcall
jnp
mov
jns
xor
jle
push
repz
ds
loope
inc
xor
dec
sti
adc
cmp
loopne
mov
jl
fnsave
insl
jnp
push
xor
xchg
sub
test
cmp
fisttpll
das
out
lods
out
repz
jns
cli
int
adc
fcmovb
mov
mov
add
insb
inc
les
mov
mov
cwtl
mov
inc
mov
cmp
iret
sub
adc
xor
aad
sub
das
and
push
outsb
adc
ds
or
push
sahf
test
fisttpl
insl
fld
inc
cmp
dec
jp
cwtl
test
iret
mov
out
jo
jl
push
jecxz
push
mov
imul
jle
push
push
test
fildll
cmp
adc
inc
test
adc
push
inc
call
lock
xor
sbb
hlt
or
test
pushf
cmp
mov
pop
bound
add
es
nop
adc
sbb
es
repz
xor
fcmovnb
xchg
mov
mov
mov
pop
mov
xor
push
outsb
ja
andb
mov
mov
scas
int
rolb
cld
sahf
clc
loopne
das
inc
adc
and
addb
sub
aas
repz
jecxz
into
aaa
jl
das
orb
gs
mov
ret
out
shl
mov
data16
cld
mov
xlat
jo
dec
xchg
leave
jmp
rorb
mov
cmpsb
dec
xor
sti
sub
fsub
sti
push
add
cmp
cld
fdivrp
lock
loope
and
in
add
inc
movsl
mov
push
sub
lods
sbb
dec
mov
jp
or
sub
popa
xor
ja
les
push
or
dec
sbbl
outsb
rep
push
lock
jle
daa
cltd
jns
mov
pop
int
sub
mov
jle
lret
pop
xchg
jb
in
cmp
push
imul
testl
xchg
fwait
je
push
pusha
out
movsb
push
ljmp
pushw
bound
stc
xor
sbb
xchg
inc
adc
jne
dec
pushf
cmp
lds
imul
ret
dec
movsb
add
sbb
ret
xchg
pusha
test
mov
cmpsb
mov
loop
sbb
ficompl
mov
pop
fwait
adc
iret
fwait
sbb
js
dec
fadds
lret
pop
les
mov
jnp
pop
push
in
les
mov
inc
pop
or
mov
daa
cmpsl
push
div
fsubrp
test
mov
jns
push
dec
cmc
mov
insb
movsl
adc
xchg
add
adc
mov
jp
scas
cmpsb
maskmovq
notl
aas
pop
push
jge
aaa
adc
std
out
in
shll
push
aaa
and
cmp
pop
ret
fsts
adc
cmp
cs
push
cmp
pop
push
ja
aaa
int3
jno
nop
hlt
cmpsb
jp
pop
mov
cwtl
sbb
jns
mov
aaa
mov
sub
cmp
clc
mov
mov
lahf
sti
imul
lea
pop
imul
mov
lds
pusha
push
cmp
lret
mov
dec
pop
dec
sbb
dec
rclb
push
xor
push
clc
es
or
call
in
lods
jmp
and
mov
mov
shll
cmp
out
call
cli
outsl
pop
ret
mov
rorb
fwait
inc
testb
cli
sbb
out
jnp
mov
shrl
mov
incl
insl
inc
stc
inc
ja
push
out
stos
sub
stos
das
mov
sub
andb
dec
cmpsb
jb
mov
inc
lods
test
popf
dec
pop
xchg
adc
sbb
stc
xlat
lret
jecxz
stos
or
je
leave
cs
cmp
adc
cmp
mov
dec
jb
out
jl
mov
jg
add
cwtl
addr16
jae
push
adc
or
or
cmpsb
push
sbb
out
aas
pop
icebp
aaa
stos
loopne
lcall
in
dec
xor
incb
mov
sub
scas
dec
xor
xchg
push
ffreep
and
in
aad
inc
test
cmp
loopne
in
dec
addl
ret
inc
enter
jno
and
jg
cmpsl
lods
pop
sbb
mov
icebp
inc
neg
pop
das
push
add
xor
dec
ja
clc
mov
mov
mov
je
mov
mov
pop
adc
or
out
mov
nop
push
sub
mov
pop
xchg
xor
add
cmpsl
loopw
insb
nop
dec
jno
or
mov
popf
inc
popa
idivl
repz
fstl
add
push
movsl
aas
add
aad
sub
mov
mov
jbe
sbb
scas
xor
xchg
outsl
ret
lahf
cld
pop
pop
outsb
xchg
out
int
inc
jbe
inc
cwtl
xor
xchg
xchg
sbb
mov
addr16
lret
sub
mov
push
in
or
ds
leave
aas
rclb
or
or
mov
or
xchg
addb
cmp
mov
dec
pop
mov
in
mov
xchg
jl
daa
and
mov
push
adc
push
cmp
pop
push
int3
add
xor
daa
mov
cmpb
sbb
sbb
jb
sub
push
jnp
test
and
dec
outsl
sbb
xchg
xor
in
imul
mov
mov
je
xchg
pop
xchg
ja
bnd
stos
ret
and
cmpsl
leave
repz
or
sbb
aam
and
lods
sbbb
fcmovnu
jnp
pop
add
ljmp
stos
and
jo
js
or
pop
xor
roll
mov
cli
jns
mov
lahf
fdivp
ja,pt
mov
mov
lods
shl
adc
xor
fwait
gs
fstpl
insl
cli
cli
imulb
es
inc
test
enter
sub
shll
ljmp
xchg
mov
lahf
push
rcrb
inc
xchg
jae
div
jbe
xchg
mov
je
cmp
test
sbb
ss
lock
push
repnz
cmpsl
mov
int3
in
xlat
sub
jbe
mov
cmp
mov
loopne
xor
sub
mov
in
xlat
out
mulb
push
stc
fidivrs
orb
cmpsb
rcrl
xchg
lds
sub
jb
and
pop
jns
sbb
jp
aaa
pop
mulb
adc
js
jecxz
cmovg
push
lods
ja
inc
arpl
fiadds
loop
push
lahf
mov
lock
imul
adc
enter
stos
lret
add
aaa
mov
sub
mov
add
inc
sub
sbb
sahf
mov
dec
movsb
clc
arpl
gs
outsb
xchg
xor
or
orb
inc
or
movsb
aaa
ss
mov
mov
xor
inc
pop
fs
or
cmp
dec
push
lock
bound
pusha
cwtl
icebp
mov
popa
bound
and
inc
fbstp
loop
decl
je
stos
or
push
mov
jbe
sarl
jg
dec
push
aas
cmp
mov
fists
jge
movsl
adc
movl
iret
ljmp
out
repnz
push
cmovl
inc
lea
xchg
insb
mov
fs
inc
decl
cwtl
or
add
inc
ja
pop
or
mulb
xchg
jno
push
test
adc
jmp
fsubrs
cmp
or
jns
add
or
inc
dec
pop
mov
add
jae
adc
mov
jb
js
push
daa
xchg
lock
add
dec
clc
xchg
cmp
jmp
sbb
push
fwait
xchg
fiaddl
push
push
imul
mov
cs
adc
sbb
adc
insb
fs
nop
mov
in
inc
ljmp
mov
xor
outsb
and
jl
cmp
dec
sbb
mov
add
and
xor
and
push
cmp
mov
lahf
xor
xchg
in
ljmp
xorb
jmp
pop
cs
outsl
in
stos
push
inc
les
mov
addb
xchg
mov
ds
ds
mov
lods
pop
mov
xlat
int3
adcb
jmp
pop
sbb
mov
jno
sub
test
sbb
addl
arpl
inc
pop
sbb
lds
xchg
lahf
push
lods
mov
mov
sub
jmp
sbb
loope
cmp
addr16
sbb
jle
jl
pop
enter
scas
jecxz
ljmp
push
lahf
cmp
dec
imul
in
in
cltd
mov
negb
arpl
fmul
cmp
ret
aas
xchg
inc
sbb
ljmp
xor
jb
inc
mov
and
mov
outsb
fs
push
dec
test
xchg
in
movsb
aas
inc
es
jb
push
aad
or
dec
jl
pop
xchg
cwtl
jle
mov
xchg
ret
fldt
add
push
adc
ret
mov
test
adc
jno
cmc
test
jp
data16
adc
or
inc
lock
int3
xchg
cld
sub
xor
cmp
cmp
mov
sbb
lods
pop
rcll
mov
or
adc
jno
jmp
andl
and
or
inc
mov
call
in
inc
fwait
xchg
mov
je
int
addb
push
push
fists
or
shrb
icebp
es
scas
mov
mov
inc
jl
jl
mov
sub
dec
add
dec
out
pop
sqrtps
dec
xchg
les
scas
into
pop
sbb
aad
scas
xchg
movl
push
inc
test
dec
mov
es
cmp
and
mov
dec
xor
mov
das
xor
inc
xchg
test
xchg
lcall
sub
xor
icebp
add
sbb
or
in
out
stos
fmul
cmpsl
xor
lods
in
and
mov
sub
adc
aaa
sbb
test
sbb
add
out
lock
insb
pop
pop
sub
into
movb
cmpl
mov
cmc
dec
sti
jmp
dec
sahf
pop
cmp
scas
xor
data16
scas
ficoml
mov
inc
mov
fdivl
imul
shll
sbb
xor
adc
mov
jne
pop
sbb
and
sbb
xor
or
lret
xchg
mov
ret
subb
ffreep
mov
pop
jl
aad
xor
rorl
add
aaa
xchg
notb
pop
add
ljmpw
pop
ret
shlb
cltd
cmc
outsl
fnsave
in
jno
lret
icebp
or
mov
xor
add
test
scas
or
adc
and
dec
rcrb
sbb
lock
push
and
jo
lcall
sti
repnz
mov
add
call
lock
push
dec
in
in
movsb
mov
sbb
loope
aas
xchg
or
bound
push
mov
ss
aas
add
xchg
fldl
mov
mov
mov
insl
push
lock
lahf
push
cmp
addr16
jecxz
jb
mov
add
cld
push
fwait
test
xchg
mov
daa
ret
mov
loop
and
jae
sbb
and
jl
je
loop
sahf
mov
jp
push
les
cmp
scas
cmpb
xor
fldl
mov
into
dec
aam
jns
out
dec
lret
xorb
aaa
push
push
je
ficoms
decb
shrb
mov
je
pop
adc
jp
adc
js
push
adc
push
mov
cmp
insl
clc
sub
xlat
jno
add
adc
lea
fcmovnb
cli
insb
fsts
inc
mov
xor
into
sbb
int
out
mov
rcrb
xorb
cmc
jl
rclb
je
lock
add
sub
mov
jle
xorl
pop
push
or
mov
notl
int3
sub
add
mov
dec
fnsave
xchg
mov
lcall
neg
inc
jb
jl
push
adc
mov
xorb
xchg
jne
je
inc
inc
jl
xchg
mov
stc
dec
loop
incb
call
sahf
pop
movsl
cld
rorl
aaa
imul
mov
ret
mov
aam
jl
loop
jnp
jmp
mov
loope
movb
jmp
dec
scas
mov
adc
repz
ljmp
sbb
and
ja
fisubs
jge
mov
inc
dec
loop
inc
mov
sbb
es
push
fisubrl
aas
xor
mov
out
sarl
lcall
shll
mov
addr16
or
mov
ja
mov
pusha
andl
and
test
mov
outsl
mov
push
sbb
ja
mov
push
xchg
inc
xchg
sbb
cmp
lret
and
icebp
std
ss
push
shl
cmc
xor
shll
mov
lahf
mov
repz
and
je
mov
jl
xchg
jbe
das
cmp
out
cwtl
lahf
jge
push
or
mov
xchg
notl
scas
cltd
mov
mov
outsl
or
shll
inc
push
mov
xor
mov
in
test
das
push
xor
imul
jae
jne
movsl
and
mov
mov
adc
cmp
pushf
scas
inc
dec
das
mov
and
pop
dec
push
scas
cltd
addr16
inc
cmp
pop
push
xor
repz
add
xchg
inc
xorl
lea
push
fwait
leave
stos
call
sbb
push
or
sub
push
out
mov
pop
mov
in
push
pop
jns
add
jne
inc
add
in
mov
xchg
mov
das
mov
jecxz
pop
fs
mov
lods
repz
xor
lret
inc
or
xor
or
pop
cltd
mov
movsb
in
pusha
and
jecxz
cld
fidivrs
xor
xchg
or
call
in
in
push
int3
out
mov
sub
scas
xor
jne
testb
mov
pusha
add
jnp
outsb
mov
inc
cmp
cmp
flds
push
into
ret
mov
mov
mov
ja
aad
int
out
out
jnp
cmpsl
xchg
inc
shlb
mov
aad
or
fdivs
scas
insb
icebp
push
mov
sub
fstps
stos
xchg
xlat
dec
jae
inc
pop
xor
test
pop
push
imul
xchg
inc
or
neg
sbbb
dec
pop
push
in
in
sub
adc
mov
adc
sub
inc
mov
jg
push
sbb
mov
in
js
lods
or
hlt
cmc
ja
call
pop
lods
or
mov
mov
cmp
pop
subl
data16
and
mov
mov
faddl
add
je
or
ficoml
out
adc
dec
fs
and
out
jno
pop
imul
pop
rcrb
clc
cmp
mov
lods
shl
adc
mov
and
cltd
cltd
mov
push
lods
cld
sbb
cmp
aas
push
repnz
inc
adc
sub
das
in
mov
mov
dec
mov
jnp
fwait
mov
jae
mov
push
push
inc
stc
push
cmpsb
pushf
add
xchg
fldcw
pop
cmc
pop
push
es
out
xor
bsr
cwtl
sbb
cmpsb
push
xchg
add
jg
xor
pop
lods
mov
pop
lret
roll
mov
roll
ljmp
adc
or
ds
sti
mov
lcall
dec
xor
out
popf
cmp
xchg
cli
daa
inc
aam
adc
jmp
addl
cmp
decl
xlat
mov
loope
pop
in
xor
rcr
inc
and
test
or
jne
sbb
dec
stos
push
jo
mov
rcr
sub
pop
xchg
and
divb
mov
das
stos
lret
lret
pop
popa
lcall
lret
scas
jge
or
mov
hlt
jl
pop
mov
fucomp
and
test
pop
js
js
and
jp
jns
out
mov
inc
or
fcompl
imull
fs
clc
ja
fucomip
dec
push
ja
cltd
pushf
sar
mov
dec
test
xchg
mov
movl
clc
in
ret
outsl
aas
lahf
sti
pop
mov
loope
shll
pop
mov
roll
push
pop
clc
les
adc
das
cmp
and
js
clc
call
or
and
mov
loopne
pop
aas
inc
mov
adc
mov
aad
pop
loopne
pushf
sub
pop
mov
aam
ret
mov
adc
mov
pop
adc
pop
mov
xlat
mov
in
ficomps
mov
inc
stos
inc
push
adc
loopne
ljmp
dec
cmp
out
sub
xor
mov
int
inc
mov
cwtl
dec
repnz
leave
pop
repnz
or
aad
jmp
popa
out
mov
jo
movsb
cld
repnz
andl
insl
sub
cs
pop
je
sbb
jmp
mov
leave
ds
sbb
add
dec
jnp
hlt
mov
enter
loop
push
sahf
sub
pop
jmp
cmp
pusha
scas
subl
pmaxsw
dec
jns
cltd
xchg
add
lods
in
sub
and
fsubs
xor
xchg
lods
mov
cmp
fists
push
sbb
adc
adc
jmp
add
and
inc
aaa
inc
jno
insb
or
dec
pushf
jle
lcall
and
pop
mov
mov
add
sbb
outsl
adc
mov
fcmovnb
std
fmull
pop
ret
push
lcall
mov
adc
or
pushl
outsb
fwait
xchg
cmpsb
and
jmp
jmp
into
cld
cld
push
mov
and
or
xor
shlb
rorb
call
filds
cld
ret
or
push
fidivs
mov
lcall
cmp
mov
mov
ret
bound
jae
adc
data16
mov
mov
hlt
jne
gs
mov
pushf
out
out
fstpl
jno
push
hlt
fisubrl
aas
movsl
sub
cmp
insl
xchg
loopne
mov
lahf
mov
out
or
inc
xchg
insb
outsl
cmp
out
and
xchg
addl
and
insl
ud2
icebp
dec
cmp
outsl
clc
test
mov
push
div
xchg
xchg
cs
xor
pop
out
int3
cld
inc
mov
inc
shrl
pusha
push
mov
je
or
mov
pushf
lods
aad
arpl
imul
cmp
sub
dec
lds
jnp
mov
jno
repnz
popf
inc
movsl
dec
divb
mov
daa
dec
sub
mov
imull
stc
imul
js
jb
mov
inc
rclb
lret
xchg
dec
push
outsb
fisubs
ja
int
sahf
pop
pop
push
push
pop
mov
sbbb
mov
sbb
or
cld
mov
lea
pushf
push
lock
testl
jl
cmp
std
dec
es
andb
mov
push
fwait
int3
adc
mov
fmul
es
sbb
xor
es
stos
iret
lds
clc
dec
in
ljmp
inc
jns
loopne
jecxz
adc
lds
inc
cmp
clc
test
pop
or
sub
push
jae
ret
xchg
cmp
dec
popf
les
xchg
pop
std
lcall
clc
inc
lods
lds
lds
ftst
insb
hlt
pop
popf
inc
push
jg
push
cmpsl
cmp
xchg
and
push
rcrb
push
shr
nop
adc
xor
xchg
and
bound
pop
std
jg
cmpsb
rorb
jns
aaa
xchg
push
or
and
pusha
insb
mov
dec
or
xor
movsl
stc
nop
add
xor
xlat
sbb
push
dec
xlat
or
cmpsl
mov
popf
mov
sahf
fisttps
popf
cmp
dec
cmp
push
stc
mov
stos
mov
scas
inc
mov
inc
adc
mov
lcall
popa
js
xchg
jns
inc
testl
testb
fstpl
das
sbb
add
call
add
orl
mov
rorb
ljmp
jb
sbb
push
sub
add
mov
in
sbb
mov
mov
jmp
int
bound
bound
mov
inc
jb
das
xor
lods
mov
dec
add
mov
mov
es
out
mov
mov
pop
icebp
popa
or
add
push
test
hlt
mov
dec
adc
xchg
cmp
loope
jb
lods
test
outsb
mov
jg
jne
cmp
cltd
insb
add
cmpsl
sbb
xor
mov
mov
pop
out
jbe
mov
insl
je
rcrl
mov
outsb
add
lcall
les
jp
sbb
sbb
cmpsb
sti
pop
jbe
lret
lock
or
fbstp
sub
testb
pop
outsb
fsub
mov
leavew
dec
sbb
push
mulb
ja
dec
jo
sti
pop
lods
aas
lahf
je
sbb
xchg
mov
fadds
jmp
out
xchg
mov
pop
sbb
or
pushf
or
xchg
hlt
or
xor
fldl
out
push
add
adc
pop
xchg
or
xor
jo
inc
pop
mov
mov
aad
daa
cmc
or
sub
jbe
push
adc
dec
push
outsl
hlt
jle
lds
add
out
lahf
jnp
add
cltd
lahf
jne
pop
sarl
out
mov
push
jne
and
pushf
sub
push
cmc
cwtl
cwtl
adcl
xor
das
mov
or
dec
dec
popf
adc
imulb
ljmp
cwtl
mov
push
je
sarb
jbe
mov
dec
insb
cmp
pop
test
or
push
es
dec
sub
ljmp
popa
popf
dec
aaa
jo
sbb
int
icebp
pop
inc
ret
rol
sub
jge
stos
xor
aad
vcmpsd
roll
pop
push
stos
gs
dec
mov
push
xor
jmp
ds
lret
out
dec
mov
sub
inc
test
in
sbb
xchg
xchg
mov
add
mov
mov
aaa
xor
dec
mov
mov
jb
fldt
inc
pop
xor
xor
dec
lods
xchg
add
addr16
mov
xchg
ds
cwtl
mov
sbb
mov
inc
mov
les
lcall
in
lea
outsl
fdivs
rcr
add
stos
cwtl
push
or
sbb
loop
fiadds
scas
dec
ljmp
sub
in
cld
int3
out
lret
insl
je
inc
je
repnz
push
mov
inc
lahf
sbb
mov
cmp
adc
in
adc
rcr
sbb
mov
pop
hlt
clc
repnz
jns
mov
xor
lret
lcall
mov
add
xor
inc
ficompl
or
mov
aam
xchg
inc
and
stos
out
imul
sbb
pop
lahf
enter
sti
mov
push
shr
orb
sbb
les
cmp
mov
push
setp
pop
mov
stos
sub
push
hlt
das
mov
fwait
inc
das
in
add
mov
repz
mov
pushl
shrl
jbe
jecxz
ffreep
clc
mov
mov
in
dec
pushf
xchg
cmp
popa
jge
adc
xorl
jg
and
cwtl
push
insb
or
leave
push
push
sbb
cmp
dec
mov
je
sub
cs
xlat
sbb
and
stc
jp
adc
xor
test
out
mov
test
movsl
add
add
dec
add
out
jno
call
add
adc
mov
sub
call
test
testl
jp
iret
aas
jle
pop
push
add
mov
and
bound
pop
or
cs
dec
clc
xchg
mov
push
fs
shlb
es
in
pop
insl
mov
mov
pop
or
enter
xchg
out
out
push
fimuls
filds
xlat
adc
sub
mov
xchg
xchg
xor
testb
mov
and
adc
jmp
jl
popf
ret
insb
push
sub
push
lea
test
addr16
push
push
gs
les
fisttpll
movsb
out
ja
xchg
inc
mov
clc
mov
and
loope
imul
pop
and
rol
pop
roll
and
push
test
daa
cmp
jecxz
in
aam
adc
inc
push
inc
jne
loopne
hlt
les
lds
dec
rcl
daa
xchg
push
mov
push
mov
and
sahf
lret
push
ret
cs
imul
sbb
repz
mov
das
add
sti
add
lcall
sub
enter
and
int
pop
ljmp
xchg
ret
inc
cmp
lret
add
jmp
fdivr
das
or
je
jnp
adc
inc
sbb
sub
addl
in
cmpsl
fldenv
rorl
mov
lcall
xor
lods
in
or
je
mov
sbb
repnz
daa
xor
lret
ror
mov
mul
cltd
add
scas
jno
push
outsb
outsl
fdivrl
jae
pop
add
and
inc
insl
add
sbb
in
cltd
inc
ljmp
shlb
fwait
lcall
in
mov
mov
in
fbstp
xor
fdivrs
mov
aas
idivl
adc
add
adc
xchg
dec
xchg
sbbb
pop
add
sbb
xor
bound
into
mov
lock
popf
fnstenv
arpl
pop
insl
or
push
add
test
mov
and
cmpsl
scas
mov
scas
fdiv
inc
hlt
repnz
mov
pop
orb
lds
and
jp
lahf
icebp
les
rol
in
pop
and
sub
jp
cmpsl
or
stos
imul
xchg
push
cmove
fdivs
popa
inc
ljmp
je
xor
jl
enter
push
repz
mov
jle
inc
ret
cmp
fcmovnu
mov
in
lea
fcmovnbe
inc
out
pop
pop
mov
test
xchg
pop
sub
out
ret
inc
mov
mov
sbb
aam
adc
cwtl
idivb
xchg
adc
xchg
xchg
mov
in
jb
xchg
loopne
jns
nop
xchg
xchg
xchg
insb
shll
add
add
mov
push
mov
add
mov
adc
dec
mov
jp
pusha
ds
dec
xchg
mov
xor
push
mov
mov
pusha
daa
adc
ret
sub
push
jge
add
mov
inc
iret
shlb
jo
pop
pop
mov
or
insb
repnz
test
lcall
xlat
iret
jmp
stc
repnz
subb
push
mov
inc
and
inc
into
sbb
cmp
mov
enter
and
lds
sbb
push
lret
sbb
dec
jp
sub
test
out
mov
jecxz
xchg
lret
addb
mov
or
adc
int
dec
adc
int3
mov
or
loopne
aad
fdivrp
loopne
xchg
add
sub
mov
xchg
mov
sub
xchg
jb
add
dec
clc
sbb
xor
adc
cmp
pop
enter
jns
add
inc
in
cmp
or
and
cmpsl
aam
pop
nop
test
scas
into
fsubrl
aaa
in
mov
and
loop
pushf
scas
lods
lods
or
adc
gs
je
xchg
popf
lret
cld
in
out
outsl
popa
cltd
mov
add
cli
pop
outsl
and
push
push
jmp
dec
jg
je
sbbl
imul
xor
cli
inc
scas
testl
pop
mov
popa
jns
jmp
push
sbb
adc
mulb
dec
sub
lods
push
mov
fucomip
adc
repnz
jp
out
sbb
popa
lods
jne
adc
mov
inc
test
cmp
mov
and
push
add
push
xchg
dec
adc
dec
aad
cmp
xor
je
hlt
cmp
mov
sub
inc
push
xchg
mov
pop
xchg
adcl
xchg
push
dec
push
dec
push
fstpl
sbb
and
mov
add
and
out
pop
fwait
lods
push
pop
outsl
gs
fldl
data16
push
cmp
xor
fldl2e
dec
aaa
ja
dec
cmpb
sahf
dec
test
shlb
and
jge
adc
insb
pusha
movb
movsl
mov
sub
sti
jmp
dec
lret
lock
inc
int
test
loope
xchg
xor
and
lahf
mov
loop
jmp
pop
fwait
mov
jo
jno
add
xchg
sub
scas
dec
add
fsub
lret
js
jecxz
xlat
ret
ss
ja
sti
mov
stos
pop
jl
push
jae
mov
dec
xor
adc
xchg
add
lcall
pop
mov
cld
fcmovne
andb
call
push
xchg
and
pop
mov
out
sbb
cmc
or
inc
push
push
cld
insb
mov
mov
mov
lods
jns
or
jbe
push
add
arpl
inc
add
fpatan
lcall
sub
mov
sub
ljmp
dec
in
lret
pop
jmp
dec
xchg
pusha
popa
cltd
int3
sbb
loope
or
jecxz
stos
stos
std
jp
ss
sahf
mov
pop
lret
jns
pop
xchg
jne
push
dec
arpl
sub
ljmp
shr
mov
xchg
sbb
cmp
lret
sub
xchg
jbe
lcall
mov
lcall
frstor
and
xlat
out
addr16
xor
sbb
out
adc
jge
not
loopne
or
mov
mov
mov
mov
fsubs
pop
add
mov
mov
inc
mov
adcl
mov
mov
cltd
dec
stos
pop
jmp
lret
cltd
jo
or
push
jae
push
mov
xor
pop
mov
testb
pop
test
cmp
pop
aad
data16
adc
out
or
dec
fiadds
mov
cmpsb
dec
mov
pop
push
and
in
pop
movl
pop
push
dec
xchg
mov
pop
inc
lret
sarl
lcall
or
dec
sbb
cmp
adc
rcll
jle
push
and
std
mov
sub
pop
shrb
call
les
sub
xor
mov
cltd
pusha
mov
xchg
push
jae
mov
jns
lcall
gs
leave
nop
imul
nop
fcomps
sarb
xchg
std
push
stos
mov
insb
mov
mov
ja
aaa
icebp
push
out
out
or
out
dec
or
and
addb
mov
pop
ret
mov
mov
bound
loop
or
arpl
dec
sarb
std
inc
mov
popa
sahf
pop
call
movsl
mov
push
fcmovnb
xor
cmp
push
lock
subb
sub
adc
mov
pop
pop
lret
mov
pop
push
je
dec
cmpsb
adc
popl
in
xchg
aad
inc
cli
add
jne
cmpsl
cld
mov
sbb
cltd
andb
add
scas
in
repz
adc
aas
adc
sti
cmp
sahf
dec
int3
xor
aam
outsl
data16
divl
jle
out
sbb
xor
aaa
add
rcr
jo
push
fs
jno
dec
cld
outsl
scas
jo
aas
mov
jge
fidivs
fwait
push
cltd
outsb
mov
out
aas
insb
lods
mov
sbb
out
xchg
mull
gs
mov
sahf
and
add
lock
adc
ret
xchg
adc
jge
ret
cmp
rorb
inc
dec
mov
lods
push
inc
jno
andb
icebp
movsl
jns
bound
or
shll
and
pop
push
dec
push
push
insb
adc
ljmp
inc
fsubrs
xor
push
mov
or
jmp
mov
mov
pop
in
xchg
xor
pushf
aaa
cltd
add
push
xchg
fisttpl
sbbb
pop
jg
and
dec
cld
xorl
pop
in
xchg
data16
inc
jo
fnstenv
mov
or
push
aaa
cmp
push
out
jns
or
insb
inc
mov
mov
rcrl
sbb
mov
mov
mov
pop
push
push
mov
repnz
pop
das
hlt
ja
jmp
add
notb
mov
dec
jne
xor
dec
test
in
addl
push
dec
and
mov
cmpsl
ds
mul
fisubrl
ficomps
push
dec
pop
dec
sbb
push
test
lods
std
lcall
xor
out
lcall
insb
and
ljmp
daa
xchg
enter
mov
fidivl
jmp
or
sbb
and
pop
test
inc
lods
sub
out
inc
je
lret
inc
pop
dec
int
sti
pop
cmp
addb
jo
sub
inc
pop
mov
addr16
lock
je
sarb
jno
incl
xchg
mov
mov
shlb
xchg
out
mov
stc
loopne
rorb
notb
add
fisubrs
shrl
pop
cltd
sub
sub
or
movsl
mov
xchg
outsb
jne
sbb
mov
push
and
push
cli
icebp
push
filds
xchg
mov
fbld
arpl
dec
cmp
aaa
pusha
lds
jb
pop
aaa
pop
es
inc
repz
mov
mov
xchg
xchg
pop
mov
fcmovu
orb
montmul
cmpsb
inc
cmpsb
mov
out
sbb
cmpb
mov
pop
lea
xorb
push
dec
scas
mov
or
push
stos
and
rol
rcll
push
in
mov
dec
push
jge
push
mov
daa
repnz
pusha
cmpb
or
sahf
std
pop
jo
sub
sbb
data16
lods
xlat
jge
scas
leave
jp
mov
out
push
rorl
cmpsb
in
sub
pop
fs
hlt
sub
sarb
hlt
out
cmpsl
into
or
mov
psubb
xor
sub
scas
pop
mov
xchg
fnstenv
fdivrl
push
pop
in
push
jp,pt
insl
push
mov
repz
and
add
mov
rol
aam
ss
add
jmp
hlt
scas
cs
cmp
push
rorl
dec
or
mov
loope,pn
stc
inc
in
je
ficoms
in
mov
mov
and
scas
cmc
outsb
inc
std
add
sbb
aam
cltd
mov
mov
mull
xchg
mov
sbb
pop
lcall
dec
stc
stc
mov
adc
xchg
insb
push
mov
ss
clc
cmpsl
xchg
xchg
push
mov
inc
adc
mov
das
and
xchg
mov
int3
ret
je
out
inc
and
sub
xchg
xorb
inc
sbb
fisubrl
mov
push
inc
adc
into
addr16
insl
sub
leave
fs
inc
popf
nop
sbb
dec
cli
jge
loope
sub
sub
adc
fcomp
out
add
mov
jne
or
and
xor
repnz
mov
outsl
lods
push
mov
sbb
sub
add
out
mov
pushf
out
mov
das
sarb
cmp
or
xchg
xchg
push
sahf
test
int
cwtl
data16
daa
sub
loopne
pop
inc
jecxz
xchg
pop
cld
sub
outsl
push
jl
pop
fisttps
notb
lods
pop
sahf
xchg
icebp
push
pop
iret
icebp
std
xor
insl
inc
sahf
push
lcall
bound
sub
add
add
or
mov
mov
jmp
ds
pop
lahf
cmp
aaa
inc
loop
xor
adc
push
aad
mov
popf
adc
push
gs
sbb
iret
cmpsb
sbb
xchg
je
imul
clc
movsl
jbe
loopne
lods
gs
xchg
test
insl
push
out
inc
push
push
into
or
jnp
push
nop
jbe
mov
sub
fwait
mov
in
hlt
in
adc
xchg
lds
test
sub
iret
inc
and
je
and
jge
cmc
cmc
xchg
and
inc
movsl
xchg
dec
sarl
mov
pusha
add
lret
add
aam
sub
repz
mov
cli
faddp
cwtl
out
cmpsb
clc
movsl
or
sub
sbb
subl
shlb
mov
sbb
sub
mov
addb
cmp
pop
jle
mov
and
push
lahf
and
fdivl
dec
test
and
inc
add
inc
ljmp
jg
push
dec
cmp
xchg
xorl
in
dec
into
inc
lret
xor
insl
decb
and
push
pushf
push
mov
mov
dec
adc
std
sub
xor
or
push
xor
xchg
adc
fisttpll
orl
jp
insl
inc
mov
lods
add
dec
fisttps
and
push
cltd
inc
lea
icebp
rcll
push
incl
lds
fwait
repz
aam
fdivrl
cmp
ficompl
enter
jle
dec
subb
shl
scas
xchg
mov
and
mov
push
add
aas
popf
jmp
or
dec
xchg
imul
sbb
pop
jb
inc
sbb
xchg
lret
clc
push
inc
lcall
mov
nop
and
add
mov
imul
mov
test
cmpsl
push
div
fucomp
mov
aas
lahf
out
fbstp
xchg
cmp
and
xchg
in
mov
cli
add
mov
pop
and
lahf
in
nop
sarb
mov
and
scas
fwait
mov
stos
ret
cmp
ror
lahf
mov
mov
iret
jg
lds
dec
jne
push
jb
aas
sub
repz
sti
sbb
push
mov
cli
mov
int
movsb
mov
adc
hlt
pop
inc
xchg
std
xchg
adc
outsb
lcall
sbb
mov
pop
mov
repnz
add
cli
subb
iret
aad
pop
idiv
arpl
iret
inc
sti
dec
pop
mov
sbb
test
mov
jp
out
mov
mov
addr16
std
or
enter
pop
lods
adc
ljmp
loop
mov
sahf
xchg
test
push
mov
inc
inc
pop
sbb
sbb
adc
shl
inc
fstpl
rcr
xchg
jnp
pushf
xchg
mov
lahf
insb
cmp
add
dec
ret
das
adcl
popa
pop
ss
mov
or
scas
sbb
mov
test
adc
sub
dec
cmp
es
push
mov
push
mov
loope
loope
lcall
push
sahf
sti
jae
ja,pn
leave
ds
pop
mov
or
or
jne
daa
pop
rcl
push
lret
push
mov
popa
inc
inc
imul
jmp
call
push
cli
jb
call
scas
xchg
ret
pop
test
icebp
ds
xchg
push
mov
sbb
ret
xchg
lds
es
xchg
xlat
push
rorl
into
push
mov
fisubs
sub
ss
jmp
mov
loope
bound
lods
push
mov
test
lods
adc
sti
movsl
push
adc
cmp
jbe
mov
mov
add
jb
cwtl
add
sub
or
pop
add
pop
pop
movsb
ds
mov
aam
scas
cld
lcall
and
mov
fsubrp
sub
int
faddp
mov
mov
insl
loope
jge
sbb
jp
cmp
filds
xor
sub
enter
lods
mov
pushf
dec
adc
mov
inc
jmp
ss
adc
sbb
pusha
lock
aas
cmp
movsl
subl
push
leave
xor
dec
mov
sbb
push
dec
inc
pop
es
push
cwtl
test
sub
push
addr16
lock
inc
in
fs
xchg
pop
in
fs
bound
sub
jb
mov
aas
pop
dec
stos
or
add
sahf
vprotq
test
jecxz
stos
dec
fdivrs
lret
and
fldenv
mov
xchg
dec
call
dec
das
pop
dec
imul
jge
ret
xor
mov
sbb
arpl
arpl
sbb
or
fdivrl
test
lret
addr16
mov
aas
fcomps
cli
stos
out
xchg
push
out
add
cmp
inc
mov
mov
push
mov
icebp
bound
les
popl
jl
icebp
andps
pop
push
negl
sbb
test
test
add
cmpsl
mov
push
ss
xor
mov
mov
loope
rolb
mov
aaa
jnp
popa
fisubs
jmp
sti
xchg
pop
aad
push
fdivrl
and
xchg
mov
test
and
and
cwtl
inc
pop
orb
ja
out
sbb
mov
xchg
fwait
xchg
lods
out
sti
sub
push
cwtl
or
lret
les
fstps
leave
mov
aad
test
test
or
xor
mov
pop
and
call
sarb
stos
pop
or
push
or
cmp
jmp
inc
icebp
aad
push
add
sbb
gs
cmp
aam
rcr
pop
or
sbb
fmuls
xor
cmp
lcall
into
addr16
mov
push
add
sub
add
jae
icebp
jnp
pop
push
add
out
mov
jecxz
mov
into
add
xor
pop
mov
xchg
adc
stc
shr
mov
sub
lahf
loop
pushf
sub
adc
loope
pop
xor
ret
xor
and
push
dec
ret
xor
jle
mov
dec
cmpsb
pop
dec
jle
mov
addr16
rcrb
pop
pop
aaa
mov
xor
mov
mov
or
fwait
repnz
and
pop
popa
dec
mov
push
inc
movsb
addb
push
call
outsb
pop
ljmp
lods
adc
scas
mov
pop
dec
mov
call
dec
pop
out
push
cmpsl
pop
pushaw
sub
cmp
popa
int3
dec
shl
push
mov
xor
daa
and
test
push
adc
int3
mov
xorb
mov
ja
jns
mov
data16
popf
xchg
push
loope
add
ret
sub
aas
loop
ds
cs
aaa
add
jae
dec
inc
cmp
movsb
pop
dec
ds
rolb
dec
daa
or
lds
add
push
sbb
movsb
ss
fisttpl
into
movsl
inc
in
fmull
jl
out
xchg
out
xchg
xchg
pop
imul
or
jecxz
ficoms
mov
jo
inc
es
dec
xor
pop
out
adc
testl
pop
mov
inc
inc
andl
or
popf
sbb
mov
pop
mov
xchg
lock
int3
and
addb
rcll
daa
dec
notb
add
outsl
adc
fistps
fbstp
add
dec
in
add
jns
arpl
aas
subb
adc
pop
lcall
and
jae
and
inc
fsubp
mov
push
mov
inc
xchg
push
clc
adc
xchg
xchg
jg
pop
hlt
stos
das
cli
xchg
scas
mov
pop
orb
add
add
sarb
mov
pop
jg
push
ljmp
xor
jb
and
pop
or
les
int
loope
sub
inc
cmp
fistl
insl
cmp
adc
popa
test
lods
fldl
movsl
jle
pop
test
sub
mov
outsb
es
push
rcrb
fistpll
arpl
fiadds
sti
push
cmc
xor
sub
sub
popa
inc
push
in
lock
lcall
not
test
xor
push
ret
insb
xchg
jge
cwtl
or
xlat
stos
test
xchg
pop
adc
xor
xchg
add
or
adc
imul
insb
push
test
push
mov
inc
sbb
xor
sahf
and
aam
popa
stos
jmp
dec
push
pop
inc
mov
cmp
mov
test
inc
lahf
lods
jl
nop
sub
mov
jg
aad
jbe
dec
test
pop
cmpsl
aaa
lock
stos
outsl
sbb
xchg
sub
xchg
inc
xchg
sahf
pop
push
cltd
mov
jle
mov
hlt
mov
aad
mov
dec
mov
mull
xor
jg
jg
pop
fstpl
jl
cmp
ja
fwait
nop
push
and
fwait
loope
xor
xor
xlat
pop
xacquire
cs
pop
cmp
test
lahf
jno
ret
add
lock
cmp
dec
and
negl
lods
inc
mov
pop
xchg
out
xor
aas
cli
in
pop
loopne
hlt
jae
fcomp
fistpl
gs
xor
cmpsb
and
sub
push
push
icebp
cmpsb
cmp
push
mov
in
int
out
cmp
inc
insb
push
fistps
and
notl
push
std
cs
sbb
fidivrs
lret
loop
push
fmull
pop
dec
inc
adc
xchg
pop
cmp
test
dec
rcl
xor
cld
and
cltd
mov
lds
repnz
dec
aaa
cld
stos
in
jle
xchg
hlt
lea
fwait
mov
std
notb
mov
and
mov
xlat
add
or
incb
hlt
sub
out
mov
jo
sbb
cli
jecxz
aas
leave
push
pop
ja
ljmp
push
aaa
in
mov
or
icebp
stos
jo
or
imull
cmpsl
testl
and
repnz
scas
mov
dec
cmp
mov
sub
insb
loopne
leave
aam
xor
inc
xchg
call
bound
jge
push
aaa
loop
cmp
cmp
js
jmp
mov
subl
cltd
pop
jbe
cmp
fistps
sub
add
fs
xchg
jle
xor
repnz
add
mov
and
arpl
xchg
mov
inc
and
and
xchg
repz
adc
aaa
mov
xor
leave
insb
sbb
adc
pop
jl
popa
jp
push
popa
jmp
inc
movsb
test
and
test
pop
pop
or
jno
cmp
cld
inc
push
xchg
push
pop
adc
outsb
mov
fstl
jmp
hlt
sbb
pusha
mov
add
aad
cmp
test
push
loope
add
cmp
shlb
sub
repnz
cmpsb
in
xchg
shll
push
or
stc
cld
sub
insl
push
sub
lock
lds
xor
fs
inc
push
mov
xchg
sub
mov
scas
dec
push
das
cli
pushf
sub
faddp
mov
lahf
xchg
insb
adc
sbb
ja
or
push
pop
outsl
or
xchg
pop
adc
sub
lods
rcr
mov
mov
sub
or
pushf
inc
test
call
inc
aaa
xor
pop
mov
das
mov
xchg
adc
jmp
pop
ficomps
fstpt
sbb
dec
dec
js
test
mov
call
jmp
xlat
inc
xlat
inc
push
fiadds
add
cli
lods
iret
andb
inc
jmp
adc
sbb
push
aam
les
loope
pop
ret
fsubl
addr16
mov
loopne
inc
sub
mov
out
jb
addb
fdivrs
js
dec
in
adc
mov
push
shrl
add
xchg
pop
jmp
push
push
roll
in
xor
lahf
les
pushf
fwait
cmp
xor
inc
fstpl
inc
xchg
icebp
loop
lods
lret
dec
outsb
mov
lds
or
push
or
or
adc
mov
adc
jne
jge
fucomp
fnsave
rolb
stos
outsl
pop
int
repz
addr16
sub
add
xchg
inc
andb
ljmp
sbb
enter
andb
mov
enter
xor
daa
arpl
in
shrb
jp
outsb
and
sbb
shrb
sbb
repz
jp
mov
sbbb
push
stos
ja
pop
mov
cld
and
pusha
add
adc
cmpsb
lea
out
inc
push
jge
sbb
jge
imul
add
inc
test
sbb
sub
pop
notl
or
mov
stc
jmp
adc
lcall
insl
ja
bound
jne
dec
pop
fs
ret
jecxz
jecxz
leave
sarl
pop
aas
mov
xchg
push
sahf
fildl
testb
push
lea
lahf
jmp
mov
cld
xor
ret
jno
xchg
dec
cmpsl
lods
jmp
das
mov
roll
loope
in
out
cli
or
pop
mov
cmp
ja
and
xor
jns
daa
add
cmp
jo
sbb
int3
repnz
pop
test
mov
sar
test
test
inc
or
or
pushf
arpl
push
add
and
sbb
adc
int
pop
pop
sbb
popf
dec
add
add
jl
sbb
fwait
cli
test
jecxz
push
xchg
aam
push
cld
rcrl
xor
sti
inc
push
mov
sbb
fiaddl
stos
insl
pop
fcomps
in
cmp
icebp
cs
mov
and
mov
shll
dec
add
arpl
pop
in
sbb
fisttps
dec
int
sarl
dec
mov
jmp
popa
push
lret
xchg
push
xchg
bound
loopne
pop
add
cmp
mov
lahf
inc
push
in
jne
push
pop
call
mov
mov
jne
cs
cmp
mov
mov
es
cmpsb
insl
and
mov
bound
xlat
mov
sub
insl
sti
mov
inc
mov
scas
popa
pop
mov
inc
xor
sahf
mov
push
in
adc
add
and
jae
and
aaa
and
adc
fs
sbb
js
sub
dec
xor
fimuls
and
pop
cmp
add
bound
hlt
pop
push
scas
cmpsb
mov
insl
add
pop
mov
dec
jns
lret
push
sbb
or
inc
lock
mov
je
jbe
mov
mov
mov
insl
pop
ret
cmp
dec
aaa
in
add
inc
test
scas
fmull
aas
sbb
mov
sbb
push
jno
movsl
sub
sub
jo
jecxz
xor
and
inc
loope
pop
ljmp
xor
out
subl
mov
ds
fsubr
jne
jbe
pop
inc
scas
add
in
mov
mov
push
lods
mov
inc
jge
lret
dec
sarl
push
cmp
xchg
push
mov
shrl
cmp
cmc
je
push
xchg
sub
mov
shll
mov
fs
fbstp
pusha
cmp
stos
fninit
mov
dec
sub
mov
dec
out
lcall
sbb
mov
jo
sbbl
fcomps
idivl
mov
shll
push
and
in
add
adc
push
stos
je
jnp
ret
push
loopne
lds
and
shll
push
mov
mov
fcompl
inc
pop
jp
or
mov
add
cmp
pop
sub
pop
pop
dec
dec
or
mov
jle
jns
clc
scas
outsl
add
das
arpl
xchg
outsb
enter
cmp
lret
add
jbe
mov
dec
lret
dec
push
lret
fildl
lret
out
lret
mov
xor
xchg
popa
mov
out
mov
loop
pop
int3
push
xchg
adc
iret
pop
mov
insl
mov
pop
dec
or
pop
lods
jno
int3
movsb
jo
fistpl
xor
test
push
in
pop
mov
mov
or
inc
push
xchg
pushf
in
inc
adc
dec
inc
xchg
and
aas
or
add
inc
jge
mov
sti
in
test
mov
cmp
and
pushf
std
jmp
pusha
pop
dec
in
stos
push
out
rorb
sub
jmp
mov
iret
rclb
push
scas
xchg
int3
adc
out
lods
aad
into
test
js
or
and
cs
rcrl
loopne
les
cmp
pop
mov
pop
jle
add
or
push
inc
imul
popa
frstpm(287
adc
lock
xor
in
out
loop
iret
pop
cmp
retw
adc
into
add
mov
adc
in
mov
sbb
dec
push
lods
mull
loope
lock
jo
xlat
divb
pop
dec
dec
negb
mov
jp
pushf
inc
cs
leave
and
pop
aas
fs
jnp
and
aaa
dec
jle,pt
mov
mov
pop
movsb
cmp
nop
test
and
movsl
sub
lret
push
cmp
popf
mov
mov
rcll
mov
sbb
in
cmp
dec
cltd
inc
negl
or
fistps
out
sub
pop
orl
hlt
xchg
pop
movsl
dec
push
and
loopw
scas
je
pop
lret
out
cs
call
jo
xchg
aad
out
jae
add
out
ja
mov
sub
xchg
cli
faddl
adc
push
ljmp
adc
fsts
xor
lds
lahf
dec
push
cmpl
jne
fdivrs
adc
daa
jg
mov
frstor
xchg
das
mov
dec
inc
mov
stc
push
mov
inc
data16
into
outsl
cmpsl
mov
mov
or
cmp
pop
pop
cmp
cltd
mov
cmp
push
mov
jo
push
cmp
cltd
dec
ds
xchg
xchg
fnsave
mov
aas
add
and
pop
lods
imul
xor
sub
popa
jbe
insl
addr16
xlat
lar
sbb
in
addr16
cli
jle
push
in
jl
push
div
cwtl
shll
push
xchg
pop
movsb
mov
or
or
mov
mov
cmc
aaa
xchg
xor
mov
push
push
cmp
and
mov
and
cwtl
mov
inc
jp
mov
in
les
lds
loopne
pop
push
or
rcll
cwtl
ror
sbb
movsb
mov
xor
inc
mov
or
test
imul
mov
pop
xchg
jge
add
fcompl
ds
and
sahf
sbbb
repnz
addr16
or
and
adc
lea
aad
dec
sub
ret
subl
sti
std
xchg
cwtl
sar
movsb
popa
mov
lahf
repz
or
fcoml
pusha
nop
push
dec
cmp
jp
mov
add
daa
ret
lret
adc
fisubrs
mov
xchg
imul
mov
pop
outsl
aam
xor
dec
xchg
das
sbb
loop
xchg
into
enter
push
mov
cmp
test
negb
std
rcrb
or
sti
cmp
out
aad
in
int
pusha
call
and
pop
push
jne
xor
addr16
in
pop
push
mov
shrb
and
sub
pop
aam
int3
pop
lahf
mov
lock
mov
inc
or
cmp
aam
sti
xor
mov
mov
push
je
and
sub
fisubrl
mov
jbe
or
cmp
imul
mov
repnz
or
xor
adc
add
pop
mov
rcl
push
sub
or
popf
pushf
das
or
xchg
lods
mov
inc
jnp
fdivrl
gs
sbb
inc
xor
push
mov
jnp
pusha
add
or
cmpb
test
push
arpl
out
or
in
dec
or
mov
jbe
xor
xchg
adc
or
xor
push
xchg
pop
jl
test
fcoml
jle
mov
pop
sub
js
pop
jb
imul
adc
adc
xor
pop
outsl
mov
sti
inc
outsl
das
dec
xchg
loope
out
xor
out
jecxz
xor
and
jns
lods
push
or
enter
iret
push
xlat
inc
cs
xor
and
adc
lea
push
cwtl
pop
and
cli
adc
push
cmp
out
mov
mov
fimull
mov
dec
sbb
mov
clc
push
cmc
shlb
adc
sbb
jns
in
subb
dec
lcall
aad
inc
out
jno
insb
cli
daa
jl
clc
pop
sub
test
ja
cmp
xor
mov
movsl
pop
scas
sbb
in
add
dec
dec
xchg
pop
mov
xor
ss
lret
out
jge
and
lret
pop
jbe
inc
lods
and
mov
sub
call
jg
sti
bnd
lahf
xchg
jecxz
aaa
in
push
lock
daa
jno
sbb
and
or
es
pop
inc
jno
dec
cmpl
inc
or
pusha
mov
stc
shl
adc
cmpsl
stos
and
xor
push
sub
sub
lcall
cmp
push
cmpsb
aam
pop
and
pop
adc
push
pop
mov
js
nop
mov
lret
and
sub
and
dec
aam
xchg
adc
int3
push
cmpsl
adc
inc
cs
in
mov
sub
and
and
enter
sbb
scas
es
mov
push
iret
inc
and
mov
mov
sahf
insb
jge
iret
fcmovnb
jge
rol
cli
clc
push
sub
sbb
ret
xchg
push
cmpsl
add
and
imul
or
mov
dec
std
outsb
jno
sub
decb
outsl
or
mov
mov
imul
test
mov
sbb
inc
sbb
fistpll
mov
push
push
sub
ret
pop
or
sub
repnz
xchg
lahf
fs
add
mov
jb
aam
imul
mov
mov
lods
and
adc
mov
sub
scas
cmc
xchg
pop
repz
sbb
call
stos
test
fmuls
subb
nop
jmp
mov
imul
jne
pusha
ret
cmp
jp
mov
rcrl
fadds
add
cmp
add
scas
push
dec
cmp
nop
inc
mov
loope
fsubrs
cs
testb
xlat
popf
push
sbb
add
mov
sbb
insb
fsubrs
imul
int
stc
cltd
cmpsl
pop
jmp
push
insl
xor
sbb
andb
decl
jp
insl
stos
mov
rcll
mov
in
push
lock
add
and
fcoml
jg
repz
das
loope
imul
jno
adc
divb
mov
xor
dec
dec
fbld
inc
add
xchg
inc
sahf
cmp
or
mov
pusha
and
lea
lea
mov
jbe
dec
cld
call
sub
sahf
push
mov
lea
jmp
mov
sarl
adc
jo
bound
jp
mov
and
xor
popa
bound
cwtl
jns
jae
sarl
scas
ja
insb
push
inc
dec
mov
and
sti
adc
rcll
inc
out
pop
scas
js
rolb
jns
mov
jno
bound
cmpsb
xchg
iret
jle
xchg
test
xchg
adc
pop
sti
jecxz,pt
testb
mov
popf
mov
adc
lods
cwtl
mov
popa
arpl
pop
fldlg2
dec
dec
cmp
mov
inc
push
and
dec
mov
xchg
shr
outsb
push
push
cwtl
leave
mov
xchg
or
popa
sub
mov
mov
lret
fsub
sub
mov
xchg
flds
cmp
aas
loopne
jno
test
inc
xchg
sets
add
popf
pop
loopne
test
movsl
dec
jmp
jmp
or
mov
jb
jmp
mov
mov
test
adc
dec
loop
mov
out
test
fidivrl
dec
in
mov
jmp
mov
stos
and
cltd
cmc
fsubrs
pusha
rolb
and
mov
scas
pushf
out
lods
xchg
push
popf
or
adc
fldenv
lret
pop
sub
dec
js
andl
pusha
fadds
xchg
inc
inc
adc
enter
imul
xor
dec
insb
bound
dec
cltd
lcall
lock
imul
in
dec
xor
pushf
mov
jmp
das
jmp
adc
adc
loopne
push
lds
movsl
xchg
pop
and
jno
xchg
pop
nop
jle
loopne
sub
repnz
aam
mov
and
sub
leave
testl
rcrb
jnp
jnp
vpsadbw
mov
stos
icebp
mov
sbb
push
sbb
cmp
sbb
in
mov
aad
inc
aam
loope
mov
jns
mov
jmp
mov
orb
or
sbb
int3
das
movsl
scas
or
push
je
xchg
push
dec
pop
lcall
fdivrs
test
in
push
arpl
pop
xchg
sbb
adc
ret
jns
and
nop
fwait
shrl
jo
sub
jmp
pop
dec
pop
ljmp
mov
sti
cmp
cmc
dec
cmp
mov
push
inc
pop
push
jns
add
cmp
pop
xchg
clc
testb
xchg
insb
inc
mov
mov
stos
insb
dec
addr16
lock
xorl
jg
imul
movsb
rcr
fisubrs
push
cmc
inc
push
push
shl
or
fwait
hlt
pop
jne
nop
sub
rol
rcr
pop
andl
mov
in
out
shll
push
repnz
aad
add
xor
je
outsl
adc
pop
sub
mov
les
or
and
sub
mov
inc
cli
ficoms
push
nop
xchg
cmp
outsl
jnp
mov
iret
jmp
sub
push
mov
dec
mov
lcall
arpl
fmull
sub
dec
xor
adc
pop
sbbl
jno
iret
pop
stc
sbb
push
lods
stc
or
inc
cwtl
pop
push
cltd
and
inc
sub
int3
sbb
sahf
inc
and
fdivl
scas
ficompl
mov
enter
roll
pop
fildl
push
push
sub
lret
push
sub
pop
flds
mov
mov
enter
scas
sahf
xor
jecxz
lods
inc
push
xor
adc
fwait
or
or
xchg
jl
rcrb
lea
bound
in
jg
xor
pop
add
sti
jl
jns
jl
and
jg
lea
aaa
pop
jae
leave
jmp
arpl
movsl
addr16
cmp
add
pop
cmc
stc
mov
jle
push
leave
pushl
inc
xor
jg
adc
pop
cmc
stc
jo
cltd
popf
sub
mov
mov
rclb
pop
inc
mov
mov
adc
or
rcrl
cmpsb
pusha
sub
ja
adc
shll
popa
cmp
out
push
rorb
or
std
mov
stc
or
dec
inc
dec
cmp
or
clc
and
xchg
leave
fimull
pop
adc
pusha
int
pop
xor
mov
lds
xchg
and
and
lea
push
cmp
pop
dec
lcall
rcrl
add
xor
and
jno
icebp
push
mov
loope
jmp
data16
aad
or
ja
xor
mov
xchg
or
clc
test
mov
inc
mov
mulb
es
sub
mov
rcll
daa
inc
lods
jo
lcall
out
jbe
sbb
dec
aam
mov
lods
lret
fsubrs
mov
fsts
xchg
push
cmpsb
push
bnd
loopne
movsb
shlb
pop
popf
dec
pop
mov
pushf
in
inc
cmp
loopne
push
sbb
jno
mov
in
and
sub
fisttps
rcrb
daa
mov
push
mov
in
push
inc
cmp
add
xchg
dec
xor
mov
fimuls
mov
add
addl
sbb
icebp
arpl
mov
daa
gs
nop
mov
jbe
push
jno
add
cmp
js
mov
sarl
das
lods
inc
inc
daa
dec
push
sub
or
andl
xor
test
lock
mov
dec
mov
cmp
push
jbe
push
psubsb
std
push
data16
inc
jge
cmpsb
inc
lds
nop
fdivr
ret
jne
ds
pop
call
pop
int3
daa
push
iret
cmc
jno
dec
or
subl
dec
adc
dec
xor
pop
or
sub
inc
cmpsl
push
addr16
adc
mov
push
dec
jno
popf
or
jg
in
sbb
incl
lods
cmp
and
popa
or
lret
aas
and
mov
cmp
xor
popa
fisttpl
fisttpll
sub
repnz
jo
mov
sbb
pop
cmp
jae
adc
push
push
mov
sub
inc
movl
rcll
adcb
sub
push
mov
pop
mov
xchg
aaa
loop
icebp
int3
cwtl
pop
push
aaa
mov
call
xchg
icebp
scas
mov
jbe
xor
fistl
mov
ret
out
inc
fcoms
out
fisubs
jbe
shrb
jno
sub
xchg
sarl
mov
sbb
dec
hlt
insl
shr
enter
loope
test
jnp
add
push
leave
lret
rcrl
xchg
adc
and
cmp
and
or
push
sub
mov
imul
pslld
add
rcrb
nop
dec
movsb
and
cwtl
int
int
jne
notb
dec
push
jns
pop
roll
push
push
cmp
pop
push
stos
hlt
mov
test
sarl
fimuls
cmpsb
sbb
addr16
nop
push
sahf
xchg
xchg
lock
push
iret
mov
cmp
cwtl
pop
data16
mov
or
stc
pop
js
les
subb
push
mov
leave
je
cmp
iret
mov
rcrb
cs
mov
push
or
mov
out
sub
enter
xor
test
testl
aad
scas
sbb
xchg
mov
loope
and
orl
jecxz
aaa
xchg
and
add
in
or
pop
jnp
test
dec
divl
jbe
popf
mov
mov
pop
sahf
lds
movsl
mov
xchg
push
mov
testl
pop
inc
or
out
sub
shrb
dec
jo
cmp
mov
cmp
xor
cmpsl
mulb
sahf
jbe
mov
stc
std
ss
stos
add
add
repz
in
leave
adc
iret
lcall
cmp
lret
bound
inc
sub
and
cwtl
in
sub
ds
lea
hlt
add
in
lret
add
andl
mov
iret
iret
mov
mov
xor
addr16
lods
sbb
pop
cld
push
loope
jne
movsl
stos
ljmp
xchg
sbb
pop
mov
ret
aaa
cmc
xor
inc
mov
ret
fnstenv
dec
cmpsl
sub
xchg
fldcw
flds
push
mov
add
inc
mov
mov
pop
insb
inc
mov
jnp
ret
xchg
repz
or
in
xor
mov
cmpsl
sbb
cmpsb
enter
pop
neg
mov
loop
cmp
mov
inc
outsl
push
ds
cltd
sub
or
cmp
or
jo
lret
stos
cmc
pop
imul
scas
rcr
idivl
jnp
shll
loop
xor
jb
fbstp
cwtl
mov
xor
xchg
outsl
rcl
push
fcompl
insl
mov
jae
or
and
jge
test
or
sub
xchg
rcrl
stos
xchg
movsl
insl
pop
adc
mov
mov
lahf
inc
jle
and
mov
lcall
sbb
repnz
sub
jbe
addb
jl
out
push
aaa
push
rclb
sbb
xchg
mov
das
or
shr
cmp
pop
lahf
dec
mov
push
fiaddl
jo
jb
inc
scas
add
cmp
push
aaa
push
jbe
aam
add
push
pop
jae
stos
leave
lahf
jb
jb
push
imul
mov
pop
or
movsb
mov
jecxz
jle
pop
frstor
lret
cmp
add
push
pushf
sbb
jno
cmp
adcb
xchg
push
xchg
jle
xor
sbb
hlt
into
sub
test
imul
push
push
divl
inc
es
xor
and
loop
pop
jl
pop
xorl
adc
mov
and
mov
mov
mov
cld
sub
adc
scas
inc
les
or
adc
sub
dec
adc
mov
sbb
lea
ss
mov
mov
scas
mov
shrl
cmp
xlat
or
int
cmpsl
das
pop
outsl
sub
dec
mov
and
out
mov
ljmp
xchg
mov
inc
mov
dec
stos
xor
and
loop
ja
repnz
insb
ljmp
out
jb
mov
or
int3
jmp
mov
mov
fmull
cltd
leave
sub
subl
cltd
aad
xchg
cwtl
repnz
loope
fisttps
lret
sub
mov
pusha
cmp
in
cmpsb
sbb
jg
test
or
mov
enter
gs
add
add
cmp
sti
and
lcall
push
jo
add
lret
xchg
je
mov
fisubl
and
shll
or
mov
mov
mov
test
inc
mov
jne
rolb
rorb
and
jmp
sub
js
jno
adcl
sub
fwait
sarl
xchg
mov
xchg
jl
ljmp
push
dec
scas
loope
mov
mov
icebp
cmp
mov
inc
lods
rolb
mov
add
lock
jb
mov
es
testb
mov
mov
pop
xchg
in
mov
mov
xchg
outsb
fwait
adc
jne
xor
or
inc
xchg
dec
pop
icebp
dec
roll
mov
and
xchg
jle
adc
mov
push
dec
out
dec
aas
loope
std
shrl
mov
xor
sbb
push
or
int3
outsl
mov
add
cmp
lods
notb
mov
push
outsl
outsb
mov
jae
lea
cmp
fwait
xchg
std
sbb
pop
call
cmp
das
ret
arpl
int3
or
mov
dec
fcmovu
or
jp
lret
adc
notb
pushf
in
jb
mov
sub
movsl
aam
mov
mov
mov
xor
mov
arpl
repnz
xor
jns
push
cmpsb
imull
pop
shl
add
adc
cmp
and
test
lds
push
pop
fdivs
mov
leave
sar
js
fucom
mov
data16
fstps
pop
gs
pop
aas
loop
inc
pop
stc
cmp
or
mov
mov
pop
mov
ror
pop
sbb
jb
ljmp
push
arpl
jp
pusha
xor
xchg
push
sbb
jge
pop
subl
push
jo
test
subb
xor
gs
add
subb
jo
fwait
or
cmpsl
cmp
in
iret
insl
mov
push
push
inc
movsb
sub
xorb
inc
pusha
dec
aad
aad
int
lret
sbb
test
clc
popf
imul
enter
inc
fildll
ret
loop
in
mov
pop
pushf
push
inc
ficomps
add
pop
lods
test
and
clc
push
push
cmpsb
push
jp
dec
scas
scas
in
ret
jb
into
add
cmp
ds
into
testb
pop
pop
xchg
push
pop
jno
and
pop
std
mov
cmpsl
pusha
loopne
xor
aam
mov
and
jmp
iret
lea
das
mov
xchg
adc
inc
cmp
xorb
les
mov
sar
jl
and
popf
es
test
popf
mov
movntq
lock
xor
mov
scas
rorb
rcrl
cmpsb
push
sbb
sti
jns
cmp
insl
inc
add
xchg
push
pushl
in
mov
inc
stc
fimuls
add
fcmovnb
cmpsl
lods
cmpsl
dec
or
leave
int
pop
sub
aaa
rcr
fldln2
mov
in
mov
cmpb
push
or
lahf
xchg
call
sbb
cmc
cmc
mov
xchg
adc
jecxz
mov
sub
sub
sbb
cmp
subb
movsb
mov
and
mov
mov
lods
mov
lret
push
sbb
shll
adcb
and
sti
fmull
loop
sbb
jecxz
aam
inc
xchg
out
cmpsb
dec
jbe
cmp
test
lock
ret
jae
fs
push
in
dec
push
dec
mov
sarb
jb
out
fsubrl
inc
leave
and
dec
data16
in
dec
adc
sbb
movsl
push
pop
mov
xchg
filds
pop
jns
ds
or
mov
mov
pushf
nop
xchg
ja
or
add
lret
sub
xchg
cmp
test
lea
add
xchg
cwtl
or
popf
push
clc
dec
divl
xor
cmc
pop
fisttps
mov
mov
inc
sub
mov
pop
xchg
jb
stos
sub
negb
cmc
xchg
adc
jg
pushf
ljmp
xor
lret
dec
lods
test
mov
xor
and
cmc
aaa
leave
sub
cmp
mov
adc
filds
or
repnz
pop
pop
mov
push
pushf
mov
inc
cwtl
cmc
sbb
stc
stc
stos
xchg
lret
movsl
lcall
out
call
in
push
or
jecxz
mov
lds
push
mov
leave
adc
dec
inc
sbb
ja
les
jge
jnp
roll
lods
stos
data16
add
push
inc
sbb
lcall
jns
add
mov
lock
mov
outsb
scas
or
negb
mov
jge
mov
jle
imul
sub
or
insl
fwait
jmp
movl
mov
sub
pop
jnp
insl
pop
lds
mov
jmp
push
adcl
cmpsl
jnp
fwait
mov
push
mov
adc
and
int3
imul
push
lods
call
inc
xor
inc
sbb
mov
mov
cwtl
lock
xchg
test
xchg
shll
mov
xor
aaa
mov
lcall
sbb
push
dec
pop
pop
push
out
insb
mov
loop
int3
outsl
mov
lds
hlt
das
subl
dec
aaa
fldenv
dec
call
lods
pop
call
push
cltd
int3
sarl
mov
loope
adc
push
cli
jae
test
jp
dec
into
andl
dec
pop
outsb
adc
int
inc
jno
ja
jno
enter
bound
idivl
dec
pushf
pop
xchg
dec
push
fisttpl
sbb
into
les
adc
xor
insb
dec
aam
sbb
mov
int
loope
push
pop
mov
push
inc
bound
frstor
jg
aad
mov
xlat
cmpsb
dec
fcomps
repz
inc
adc
imull
dec
aaa
push
imul
adc
cmp
and
cmc
and
pusha
push
sbb
popf
enter
in
sbb
xchg
or
xor
xchg
push
cmp
cmp
decl
xchg
into
bound
pop
nop
or
addl
pop
push
in
mov
pop
fmuls
jbe
lods
cmp
mov
and
sub
inc
pop
mov
mov
inc
fsubr
lods
cmpsb
xor
addl
mov
inc
lret
dec
lret
sbb
loop
mov
fists
std
and
dec
push
mov
cltd
fcmovnbe
and
fildll
fidivrl
xchg
push
aaa
bound
nop
cmpsb
in
xor
in
movsl
push
icebp
std
pop
jnp
push
pop
mov
in
das
xor
iret
cmp
adc
push
arpl
gs
fs
lcall
into
cmp
xor
aas
sub
out
lock
xchg
sbb
jg
repz
mov
gs
je
or
les
shrl
push
mov
jo
ja
daa
fdivl
push
std
cmp
inc
int
xchg
pop
pop
add
repnz
cmp
jne
stc
les
lock
mov
jb
dec
mov
pop
lret
arpl
cli
and
dec
jp
movsb
and
xchg
addl
negl
mov
inc
shll
push
inc
cld
mov
fucomp
sbb
inc
stos
mov
loopne
inc
bnd
rcr
enter
mov
repz
xlat
mov
fdivrs
shlb
popf
xor
pop
jp
adc
mov
cmc
add
pop
mov
dec
loopne
fnstsw
leave
inc
xlat
mov
mov
sub
xor
inc
lahf
leave
adc
sarb
aam
pminub
xchg
mov
insb
xchg
out
fstpl
sbb
mov
inc
mov
adc
inc
pop
lahf
xchg
push
push
pop
cmp
xchg
push
mov
xchg
stc
mov
sahf
mov
jae
insl
das
loop
jae
pusha
jl
loop
pop
push
xor
adc
rcl
sbbb
dec
lods
mov
shll
mov
jns
add
mov
adc
mov
out
popa
cmp
fwait
cmp
lock
sahf
mov
pop
popa
mov
and
mov
cld
hlt
sub
mov
mov
iret
test
aam
and
add
js
cmp
adc
decl
mov
sub
stos
hlt
inc
pop
xchg
mov
push
and
in
sarb
sbb
mov
insl
bound
das
mov
lcall
cwtl
je
in
gs
inc
cld
or
ret
or
rcl
mov
mov
xchg
or
cmpl
pop
or
sub
sarl
fwait
adc
fsubl
test
pusha
fcoml
or
repnz
sub
jno
jnp
xchg
add
fiaddl
add
xchg
cmp
jns
std
mov
jbe
fisubrl
mov
push
xor
int3
adc
adc
test
and
adc
les
stc
inc
sbbl
dec
test
cmp
pop
mov
xor
mov
or
add
loope
inc
push
xor
adcb
add
pop
mov
mov
data16
aaa
jno
pusha
shlb
stos
add
xchg
ljmp
jbe
dec
dec
adc
jb
adc
mov
icebp
sahf
jo
movb
loopne
repz
aam
jb
push
cmc
push
movsl
jg
cld
cmp
cld
mov
bound
adc
cmpsl
pop
stc
inc
adc
mov
dec
or
pop
stos
pop
inc
clc
xor
and
and
adc
js
inc
mov
xor
fwait
test
in
mov
sub
dec
clc
cmp
cltd
cltd
in
jp
loope
jb
mov
dec
cmp
xchg
xor
sub
fwait
jns
jge
in
loopne
push
subl
mov
jnp
rclb
cltd
push
cmp
adc
sub
ret
jbe
and
or
xchg
mov
jp
inc
test
xchg
sub
sbb
xlat
xor
jnp
fucomp
jae
push
push
and
mov
les
dec
les
loopne
loop
rcrb
scas
and
dec
cmp
mov
outsl
xchg
push
call
mov
add
cmp
push
sub
pop
test
data16
loopne
out
insb
mov
cltd
inc
adc
mov
daa
mov
and
insl
popa
lods
inc
add
dec
mov
adc
jae
sbb
in
aam
pop
sbb
dec
adc
sahf
sti
adc
jns
jb
push
clc
adc
xchg
jb
mov
sbb
test
cmpsl
scas
sub
or
pusha
sub
inc
inc
clc
pop
push
xchg
into
mov
pop
push
jbe
xor
jecxz
fsubl
add
mov
aas
mov
nop
ret
and
inc
mov
add
dec
iret
adc
daa
lds
dec
lahf
xor
xchg
push
fcomps
sub
cmp
cltd
lcall
inc
cmp
push
jnp
stos
jae
in
pop
gs
adc
push
fisubrs
mov
pushf
lcall
mov
and
fimuls
stos
add
scas
or
lods
pushf
lret
inc
push
xlat
jecxz
add
je
daa
adc
jmp
or
cwtl
jo
inc
mov
push
loop
fcomi
fmuls
lock
dec
adc
shrb
ret
cmp
lcall
sub
decl
std
jg
sub
or
push
mov
sbb
adc
insl
dec
call
xlat
pushf
cwtl
xchg
lret
mov
sub
in
in
push
inc
arpl
or
dec
bound
data16
dec
test
inc
mov
jle
dec
ds
stos
push
mov
shrb
xor
mov
mov
and
test
and
or
jl
mov
xchg
mov
xor
jb
lret
imul
lods
fstpl
mov
into
dec
cmp
cmp
or
jp
sub
iret
ja
cltd
movsl
mov
mov
mov
sahf
int
js
cs
jl
stos
adc
stos
push
sub
dec
jno
pop
pop
jne
movsb
sub
inc
fidivl
fnstsw
dec
lds
mov
nop
push
inc
rorl
pushf
push
jne
and
stc
jl
pop
xor
jns
mov
icebp
lahf
xchg
ds
push
ss
add
aam
mov
push
push
pop
pop
int
rolb
and
pop
and
sahf
scas
orb
hlt
adc
push
add
leave
data16
divl
mov
test
sbb
andb
dec
add
orb
push
scas
sti
repnz
cmp
mov
inc
scas
and
daa
js
pop
mov
and
and
mov
pushf
ret
das
mov
pop
inc
sub
jbe
rcrl
addb
xchg
inc
xlat
cmp
sbb
stos
jmp
pop
mov
nop
push
orl
outsb
mov
mov
in
hlt
clc
jl
push
add
or
sbb
and
push
mov
out
mov
mov
xchg
cld
or
dec
outsb
iret
lahf
lret
inc
ret
xor
sbb
xchg
sbb
and
cmp
or
jno
adcb
add
xchg
fistpl
mov
sbb
loope
mov
test
jnp
sahf
jl
and
mov
nop
add
fistpll
movnti
dec
cli
fidivs
je
sarb
cs
shrl
rorb
push
sbb
xchg
cmp
outsl
or
xlat
cld
pop
pop
ss
mov
movsb
repnz
push
push
xchg
int
js
cmpsl
decb
push
ficoml
pusha
and
cmp
cmpsl
mov
push
fbld
mov
out
mov
test
jno
sbb
jg
pop
add
rolb
sbb
mov
add
ds
xchg
js
stos
cli
push
or
jnp
outsb
push
in
cwtl
sbb
call
pop
mov
pop
nop
clc
stos
popf
mov
adc
push
mov
shlb
or
pop
fcmovu
xchg
stc
sbb
in
fstpt
stos
hlt
test
orl
inc
vpmacssww
adc
jg
jmp
xor
jge
cmp
popa
xor
adc
cmc
in
int
hlt
aaa
jo
stos
stos
icebp
in
cli
enter
dec
mov
in
jecxz
pop
adc
inc
pop
cmpsl
add
cmp
aas
ret
dec
div
outsl
and
dec
repz
in
mov
les
sbb
lods
pop
popa
add
xchg
sub
out
idivb
cmp
pop
shl
into
and
inc
sub
pop
mov
push
mov
jp
insb
ja
int3
mov
or
xchg
push
ret
mov
and
ds
add
cmp
fidivrs
cmp
inc
xchg
mov
xchg
out
mov
popa
outsb
sub
sub
gs
adc
enter
cmp
ljmp
int3
adc
and
roll
xchg
outsl
push
pop
dec
aaa
jbe
or
cmp
imul
or
std
push
mov
push
sbb
mov
rcl
dec
cmc
lock
and
jl
pop
and
cmp
jbe
and
dec
xor
loopne
xchg
xlat
in
adc
pusha
mov
mov
aas
fbld
mov
push
or
mov
cmc
inc
test
vmovhps
stc
cmp
js
dec
subb
add
or
test
mov
xchg
call
and
loop
icebp
out
cmp
cmpsl
loope
xor
test
call
aam
and
or
loopne
xor
imul
push
sbbl
dec
andl
add
fs
insb
dec
int3
pop
fadds
add
jb
sbb
xlat
pop
push
xchg
movsl
icebp
std
stc
push
jae
out
cmp
pop
ror
out
cwtl
dec
jecxz
es
mov
dec
xchg
xchg
mov
shl
add
outsb
jmp
mov
lcall
sub
gs
xchg
cmp
push
dec
fwait
pop
shlb
xchg
andl
out
cli
push
add
lods
mov
fisubrs
mov
ficomps
jl
adc
fmull
pop
pop
outsb
cmpl
xchg
jnp
jae
testl
push
jmp
mov
push
addr16
and
mov
pop
sbb
rolb
add
imul
outsb
mov
dec
and
inc
shrb
mov
jbe
cmc
mov
push
adc
popa
out
inc
mov
mov
jle
push
mov
pop
lods
push
js
mov
sbb
add
cmp
and
sarb
sarb
push
or
mov
adc
xchg
mov
fcmovne
jecxz,pt
adc
xorl
filds
fnsave
mov
adc
sub
mov
xchg
in
sbb
xor
adc
cmpsl
cmp
mov
sub
rorl
lret
inc
and
sbb
sbbl
cmp
and
pushf
js
push
out
inc
ret
int3
or
add
cmova
div
outsb
jno
fiadds
pop
mov
xor
pop
in
jbe
cmp
add
sbb
xchg
inc
lret
pushf
inc
xorb
cmp
in
gs
fstps
pop
cwtl
mov
lods
sti
mov
addb
mov
test
test
cwtl
sub
repz
dec
js
mov
xchg
add
push
out
addr16
fidivs
movsb
imul
push
mov
jo
lret
pushf
cmp
xor
das
jecxz
loope
xor
push
mov
mov
lret
call
aas
add
in
fistpll
outsb
cmc
outsb
jno
repz
xor
mov
icebp
cltd
loope
je
xor
lds
mov
popa
lahf
frstor
mov
fadd
out
pop
push
pop
xor
movsb
add
pop
mov
test
add
repnz
sub
dec
push
fnstcw
clc
incl
cltd
mov
fwait
sub
cmpsb
mov
lret
incl
push
subb
push
dec
scas
add
sbb
lret
push
std
add
push
sbb
shlb
arpl
filds
xor
add
mov
aas
mov
add
sbb
inc
jae
mov
sbb
cmpsl
in
and
dec
into
mov
pop
out
mov
add
movsl
js
push
dec
dec
sbb
popl
cld
gs
sbb
cmp
add
arpl
jbe
push
data16
xlat
push
test
mov
ret
incl
mov
jle
std
jmp
loopne
dec
fsubl
mov
mov
lahf
mov
mov
mov
pop
lcall
push
pop
push
sub
jbe
adc
mov
iret
rorl
inc
or
dec
xor
int
jmp
pop
outsb
mov
jecxz
mov
or
or
shl
sarl
cli
cs
pop
sub
loop
xor
popa
add
stc
push
push
stos
jle
stos
movl
mov
ja
xor
xchg
aad
es
pop
inc
rcrb
outsb
or
lahf
sub
js
sub
push
pop
sahf
mov
nop
jmp
inc
and
cld
aad
jnp
insb
stos
sub
adc
std
imul
mov
and
sub
movsb
jecxz
and
lods
fucompp
test
adc
mov
mov
shlb
mov
mov
or
roll
mov
test
movsl
or
jl
aaa
test
add
cli
mov
es
mov
stos
add
aas
jbe
jmp
fdivs
mov
scas
mov
xchg
dec
mov
and
cmpsl
mov
cmp
pop
push
into
mov
je
sub
sti
fldpi
shlb
rorl
popa
and
and
daa
inc
pop
fsubrs
push
ret
pop
lock
xchg
mov
mov
nop
insl
pop
cmp
mov
jne
clc
js
adc
cmpsl
jle
inc
pop
sub
jns
fsubrs
fwait
dec
les
dec
ss
rolb
xlat
ljmp
loopne
pop
mov
out
jno
es
sbb
push
lret
subb
mov
mov
or
dec
pushf
push
lds
arpl
mov
mov
repnz
pop
or
inc
and
insl
xor
int
push
imul
pop
daa
cmp
cltd
fcomip
mull
pop
fmuls
jno
int3
in
pop
push
jbe
sbb
mov
jp
cltd
push
xor
hlt
data16
ljmp
popa
es
cmp
rolb
lods
mov
loop
sbb
popf
outsl
push
mov
and
aam
cmp
ljmp
clc
out
sbbl
add
mov
mov
scas
dec
adc
dec
mov
pop
sahf
or
inc
cwtl
es
add
fsubr
push
repz
sbb
jecxz
dec
ds
pop
dec
adc
test
fucomi
aas
mov
call
imul
aam
scas
sub
roll
pop
xor
loope
sub
rolb
mov
lods
mov
ret
push
adc
push
push
fldl2t
add
call
addl
fdivp
fidivl
push
ss
lret
push
ja
adc
cli
cli
sub
arpl
push
fists
ljmp
pushf
pop
in
fwait
and
fwait
dec
data16
iret
mov
aam
lods
iret
cltd
xor
or
lahf
cmpsb
jmp
jecxz
out
push
xchg
stos
pop
inc
lret
jns
stos
and
jae
adcb
mov
mov
ret
movsb
into
cmc
pushf
lods
addl
inc
adc
jmp
arpl
and
fdivrl
jecxz
movsl
popf
cltd
dec
xor
dec
mov
jb
mov
out
shr
loop
fldl
lahf
rclb
dec
cmp
std
test
les
pop
cli
push
out
pushl
or
adc
jns
and
xchg
xchg
mov
or
imul
cmpb
mov
rorb
mov
lahf
add
pop
mov
popf
hlt
inc
test
gs
jae
stos
xor
adc
jbe
ror
inc
test
cmp
cmp
xchg
push
sbb
insb
pop
mov
jne
movsb
in
mov
dec
mov
repnz
movsl
xchg
xchg
popf
insl
iret
aam
inc
lcall
in
es
sub
pop
sub
push
dec
sbb
jg
push
testb
aas
sub
push
xchg
shl
sbb
imul
xor
mov
or
mov
adc
xor
dec
loope,pt
inc
sbb
adc
or
xchg
mov
inc
pop
push
pop
add
in
push
aad
mov
mov
cmc
inc
push
cltd
ljmp
mov
sbb
push
lea
xor
sub
sbb
and
pop
lret
mov
inc
ljmp
cmp
cmpsb
xchg
das
rcr
idivl
fdivr
xlat
aad
mov
push
sbb
stos
mov
sbb
cwtl
push
repnz
xchg
and
push
or
jle
add
mov
mov
fsubrl
mov
in
mov
pop
and
jbe
jbe
push
pop
jg
adc
clc
cmp
mov
icebp
bound
shlb
jns
adc
dec
xor
adc
shufps
fidivrl
xor
popa
call
cmp
mov
mov
cmp
adc
lock
call
jo
lea
or
add
jb
mov
sub
jle
push
movsb
shlb
jne
jl
movsl
push
mov
in
fwait
xchg
into
mov
pop
mov
or
push
loop
cmp
dec
add
inc
and
or
and
mov
mov
fsubl
int3
daa
mov
imul
mov
mov
mov
lret
repnz
cli
nop
scas
jns
mov
cmpsb
xchg
fwait
movsb
mov
add
xchg
inc
pusha
inc
mov
xchg
xchg
pop
inc
and
lcall
jns
pop
enter
mov
sarl
mov
adc
bound
lods
ret
xchg
scas
sbb
push
pop
or
popf
mov
test
cmp
js
sahf
into
sti
pusha
or
xchg
xchg
mov
push
jecxz
in
test
inc
jmp
pop
rorl
sbb
jbe
and
sbb
rorb
push
int
jbe
push
mov
loopne
pop
fstpl
jle
js
sbb
testb
push
sbbb
mov
xchg
xchg
loopne
aas
jnp
mov
lods
mov
pop
dec
lret
jl
pop
dec
lcall
fwait
cmp
popf
imull
divb
push
stos
push
sub
jb
fstpl
repnz
aad
push
pop
enter
sbb
xchg
push
mov
mov
pop
outsb
popa
push
push
pop
pushf
sbb
jnp
out
mov
jno
sub
xor
xchg
xor
push
cmp
sbb
arpl
dec
inc
mov
loope
jae
cs
xorl
xchg
js
pop
fisttpll
jmp
mov
add
add
sub
inc
adc
inc
and
das
lods
mov
jb
cmp
push
adc
push
imul
inc
jne
dec
gs
mov
xchg
divl
idiv
leave
test
cmp
aaa
and
int3
pushf
xchg
pop
push
loop
fld
mov
cs
sub
lock
cli
sub
pop
sbb
jbe
nop
data16
xchg
inc
mov
push
jecxz
dec
dec
clc
enter
dec
push
pop
sbb
add
imul
fucom
push
rcrl
adc
movsb
and
lahf
inc
out
dec
mov
int3
loop
out
les
test
xchg
iret
pop
lock
data16
adc
out
inc
aad
std
in
xchg
and
pop
ds
popa
push
sbbb
mov
aad
jnp
fldcw
cmp
imul
mov
into
add
sbb
pop
jge
mov
lret
faddl
and
out
pop
aad
sub
lods
sub
int3
out
push
pop
jbe
in
jecxz
call
jno
out
icebp
movsl
mov
sub
div
dec
repz
pop
lahf
push
gs
dec
pop
ss
nop
in
push
loop
movsbl
leave
jns
addl
shl
fcomp
xchg
cli
enter
and
cwtl
xchg
in
jge
out
and
jg
movsl
ja
sbbl
loope
repz
jmp
or
sbb
gs
les
sub
dec
dec
jle
hlt
sbb
cmpsl
mov
lea
adc
std
das
or
pop
mov
jb
shll
dec
mov
jae
jp
sbb
in
pop
adc
pushf
jnp
ficoml
lahf
mov
and
loop
add
mov
sbb
inc
stos
inc
and
fs
mov
push
sub
mov
xchg
xchg
jecxz
scas
aas
ret
stos
push
out
add
mov
or
inc
pusha
stos
movsl
sbb
fnstsw
test
lea
jnp
mov
sub
mov
mov
lret
std
xor
movsl
sahf
test
xchg
test
pop
pop
dec
sub
inc
repnz
imul
hlt
sub
ds
or
cwtl
rcrb
fcomps
in
mov
lahf
sub
rorl
std
aam
mov
push
loop
icebp
pop
xchg
dec
hlt
pop
pop
mov
xlat
hlt
out
push
sbbb
dec
lock
ds
nop
repnz
pop
cmp
and
pushl
mov
aam
jp
inc
cwtl
jae
mov
jg
aaa
shr
ja
jb
cmp
dec
popa
fwait
jnp
push
test
push
mov
imull
incb
pop
cmp
adc
test
jns
adc
leave
jb
xor
cmp
xchg
mov
inc
mov
pop
pushf
inc
sbbb
xor
and
pusha
push
lods
push
cmpsl
idivl
inc
pushf
cmp
adc
insb
push
cwtl
aam
fstp
adcl
mov
movsb
cmp
or
out
add
in
inc
mov
xchg
cltd
fwait
add
repnz
lods
add
and
je
xor
mov
inc
pop
sbb
fnsave
sbb
and
pop
es
iret
ljmp
or
test
push
pushf
dec
sbb
adc
cmp
jecxz
xchg
and
mov
and
fcoml
out
fnstenv
mov
call
dec
add
mov
pop
sbb
imul
sbb
popf
sub
les
xor
stos
je
sbb
outsb
xor
mov
push
in
add
cmpsb
mov
das
cltd
mov
sub
iret
push
ret
das
push
sub
xchg
aam
sbb
iret
sub
loop
sbb
nop
in
popa
mov
ds
or
or
stos
ror
incb
in
xor
insb
jbe
cli
hlt
je
cmp
outsl
adc
dec
maskmovq
imull
in
cltd
fucom
popf
add
push
pop
push
xor
fisttpll
jl
cwtl
xor
xchg
sbb
lods
cmp
dec
subl
push
push
andl
xchg
mov
filds
and
ret
pop
mov
and
jnp
push
mov
imul
aaa
pop
mov
mov
pop
incl
cmp
rcrl
aaa
sub
out
pushf
jmp
jne
aas
mov
push
setb
cmp
in
inc
enter
ret
inc
mov
pop
sbb
cmc
lds
dec
enter
push
inc
lret
or
jge
push
pop
iret
sub
cmp
pop
jae
push
mov
jle
js
clc
add
cli
inc
and
mov
mov
pop
imul
movsb
cmp
xchg
testb
addb
ljmp
or
fiadds
xor
xchg
or
clc
mov
mov
rorl
jmp
insb
push
or
pushf
fninit
pop
adc
enter
push
fld1
sub
data16
cld
and
or
insl
mov
mov
insl
jg
inc
aad
mov
or
cmc
in
sbb
xchg
xor
inc
sbb
and
shlb
das
sbb
adc
sub
inc
arpl
scas
or
sbb
xchg
cmp
mov
xchg
xor
mov
cmp
sbb
int3
add
lods
cmpb
xor
outsb
inc
xorl
push
iret
arpl
dec
xchg
push
call
es
sti
jp
addb
mov
adc
jg
jmp
sahf
je
imul
cmp
scas
int3
pop
sub
pop
mov
cmc
rcll
or
cli
out
je
inc
inc
cltd
add
scas
cmp
mov
push
testl
stc
lret
inc
shlb
rorl
pop
lret
out
inc
cld
outsb
adc
mov
sahf
loop
movsl
add
jg
mov
jb
cs
cmc
and
or
mov
ficompl
sbb
mov
data16
nop
iret
fdivrp
outsl
shlb
jne
mov
pusha
xlat
jns
lods
lcall
scas
mov
inc
dec
mov
fdivrl
jecxz
or
sahf
fisttps
mov
je
fnstcw
add
pop
push
je
xchg
jo
orb
xlat
test
mov
mov
outsb
sbb
cmp
jge
xor
call
xor
pop
out
jp
add
dec
int
xchg
sbb
mov
adc
sub
sbb
and
es
xchg
gs
adc
pop
fimuls
sbb
sbb
cmp
sub
xor
or
mov
sti
dec
ror
mov
les
hlt
sahf
xor
dec
inc
cmp
fcoml
lahf
mov
and
xlat
mov
mov
sub
push
mov
cwtl
mov
adc
inc
insb
push
xchg
stos
fnstenv
fstl
sub
mov
xchg
xlat
repz
movsb
pop
mov
pop
jl
in
movb
shlb
jmp
fidivl
mov
aad
inc
push
jmp
add
and
push
arpl
dec
dec
and
mov
adc
xor
scas
insb
pusha
cmc
dec
fildll
and
push
subl
jg
lods
jmp
cmp
rorl
mov
xchg
and
aas
or
mov
sbb
add
inc
repz
cltd
inc
js
sub
popf
push
pop
cmp
mov
jmp
dec
cmc
insb
cmp
out
stos
mov
mov
pop
das
cmp
ds
adc
inc
add
lods
in
push
dec
push
test
in
lret
sub
repz
xchg
jp
orl
jno
aam
adc
jns
lcall
lods
pop
push
and
inc
popf
inc
ja
or
rclb
or
je
push
movb
insl
lret
fsubl
add
scas
sbb
push
inc
lds
cmp
movb
test
push
cmp
sbb
dec
bound
dec
loop,pt
in
in
add
aaa
iret
imul
sarb
and
cmp
push
cmp
and
or
mov
add
mov
push
insb
inc
dec
or
jb
lret
xchg
mov
je
adc
push
and
or
and
orb
filds
movsb
test
lock
push
sub
inc
sarb
jl
das
mov
xlat
inc
shlb
rcl
pop
je
add
imul
fildl
psubusb
jb
jl
mov
xchg
fdivs
jmp
push
lods
pushf
data16
xor
ja
cmp
movsb
cmp
mov
and
push
sbb
outsb
insb
cmp
pcmpgtd
sahf
mov
pop
enter
xor
cmpsl
das
repnz
out
and
cmp
stos
fwait
insl
push
fisttpll
mov
popf
and
lock
push
xor
mov
pushf
rol
fisubrs
cmp
jmp
scas
push
dec
fldl
push
push
lea
xor
cmp
add
dec
imulb
repnz
ret
and
rcll
test
sub
stos
ds
inc
mov
aaa
mov
dec
sub
mov
jge
in
mov
repz
lahf
and
cs
rorl
mov
and
dec
and
roll
dec
ss
shll
sahf
aaa
insb
andb
jp
jmp
sub
sbb
aam
push
daa
leave
jl
inc
std
clc
add
scas
lea
dec
or
sub
sub
test
cmpsl
lods
sbb
xorb
aam
andl
scas
dec
xor
dec
sbb
dec
in
mov
add
addr16
std
cld
xor
imul
jae
and
mov
cmpsl
or
roll
fiaddl
mov
inc
cmp
ficompl
mov
pop
lock
cltd
sub
jne
pop
leave
xlat
js
in
in
cli
pusha
sbb
inc
sarl
fiadds
sbb
ja
sub
cs
sub
in
rorb
aam
xlat
mov
xor
jno
lds
fdivrl
pop
hlt
cmpsl
call
insl
push
jmp
xchg
in
rorl
idiv
scas
push
sbb
adc
push
jge
inc
mov
lret
or
test
cmpsb
sub
push
fbstp
nop
in
jae
clc
loopne
lea
cmc
repnz
mov
jg
push
jmp
sub
pop
out
das
pop
pop
shlb
ljmp
repnz
cmp
stos
mov
lods
js
xor
pop
push
sub
inc
inc
fdivrs
xchg
popa
mov
jge
sbb
or
repnz
ret
sub
jmp
aad
mov
int
mov
lock
lods
mov
or
outsb
fnsave
cmpsb
cltd
out
mov
int3
fwait
and
and
push
xchg
jle
enter
pop
mov
aaa
xchg
pusha
insb
pop
sub
dec
sbb
pop
lods
nop
add
pusha
fdivrs
jne
test
icebp
or
xchg
cld
mov
sbb
ss
and
add
addr16
je
lcall
pop
add
mov
fistpll
inc
xchg
mov
dec
popa
pop
int
sbb
cmp
mov
sub
fsubs
and
xchg
in
sub
inc
aas
xchg
out
pop
jno
hlt
or
and
pop
les
mov
xorl
xchg
sahf
jo
xchg
pop
push
nop
loop
jmp
mov
ljmp
xchg
push
aam
dec
icebp
pop
cmp
sub
loop
sti
jnp
or
jae
ret
push
ficoml
jns
add
dec
pop
mov
and
dec
cld
rclb
push
adc
jae
int3
mov
mov
gs
rcl
ljmp
aaa
push
sti
es
fs
daa
add
xchg
cmp
sbb
lods
cmp
ret
sub
pop
into
add
push
xor
inc
push
inc
inc
fwait
and
adc
jp
push
mov
xchg
mov
inc
jo
push
push
bound
jns
fcmovnu
adc
loop
jno
inc
lret
sti
xlat
mov
das
mov
add
and
dec
pop
mov
cmp
pop
mov
out
notb
lock
out
add
ds
dec
xchg
rcrl
leave
aam
out
out
jecxz
push
sbb
test
pusha
mov
mov
adc
or
xchg
sbb
cmpsl
add
mov
fiadds
negb
sahf
arpl
or
icebp
shll
lahf
mov
dec
lret
jmp
shrb
stos
xchg
pop
jle
adcb
mov
div
cltd
cld
adc
cmp
jns
adc
dec
xchg
cmp
pop
int3
cmp
xchg
xchg
repnz
xor
ret
sahf
and
mov
cmp
cmp
mov
jno
and
xor
lds
add
orl
fcmovnu
repz
pop
pop
lods
loopne
or
lods
dec
and
fbstp
pop
mov
popa
adc
pop
out
push
insl
mulb
out
xor
ret
sub
adcb
sbb
sub
cld
aaa
js
mov
sbb
and
xchg
data16
xorl
adc
and
or
cmpsb
addr16
adc
jmp
jb
adc
dec
cli
fsubs
jb
mov
outsb
jecxz
fs
mov
sub
loopne
mov
dec
lds
xor
jne
jno
ret
mov
push
lds
rcr
lds
out
push
mov
shlb
aam
lcall
das
mov
aad
ds
mov
hlt
xchg
mov
pop
scas
daa
repz
xor
push
and
push
jnp
pop
push
mov
pop
int3
mov
inc
stos
ficompl
hlt
in
test
fbstp
clc
shr
jmp
ret
pushf
fsubrl
test
sub
push
inc
inc
xor
sub
fidivs
punpckhdq
enter
shl
rol
xor
nop
dec
mov
pop
lods
addr16
fdivrs
jle
ja
push
data16
bound
add
ret
test
inc
add
fldt
add
lock
mov
test
mov
dec
out
orb
test
add
cmp
cld
or
pcmpeqw
push
aas
xchg
mov
dec
mov
lret
dec
loope
xor
mov
adc
call
inc
sub
mov
aas
and
std
test
popa
pusha
jecxz
pop
pop
fcomps
icebp
dec
push
xor
jne
dec
jne
ficomps
xchg
push
mov
xchg
pop
pop
std
adc
loopw
xor
lods
push
push
dec
dec
xchg
mov
sub
and
fdivrl
repz
std
test
jle
cli
insl
or
xor
daa
add
loop
dec
jmp
push
stc
fadds
mov
roll
pop
sbb
test
test
std
jo
mov
inc
test
out
out
test
and
xchg
or
lret
or
mov
cmp
jnp
leave
pop
adc
stos
mov
xchg
push
inc
aas
xchg
push
mov
loopne
ret
cmp
dec
cld
inc
mov
sbb
pop
mov
call
push
std
push
mov
mov
repz
mov
cmp
stos
outsl
pop
je
std
clc
push
mov
pop
mov
and
movsb
add
repz
test
int
or
movnti
cmp
push
test
shrl
mov
jmp
pop
dec
cmc
xor
aad
sub
lock
icebp
cmp
dec
or
lods
xlat
or
pop
lods
repz
push
jae
cld
lods
or
lcall
jecxz
adc
add
fldl
rcrl
push
and
sub
jb
sbb
or
dec
dec
ss
and
mov
nop
jl
fdivs
rorl
sub
test
cmp
lcall
and
sub
bound
sbb
lahf
and
lods
jae
leave
cmp
cmp
or
push
jns
mov
stos
sbb
jle
pop
fidivs
sub
scas
and
insb
popf
push
sub
sub
out
icebp
pop
fisttps
pop
ss
jge
push
cs
dec
jmp
or
in
push
out
insl
push
jge
daa
push
or
sarl
push
xor
subb
mov
addl
jp
daa
dec
lods
mov
dec
mov
xor
sbbl
sub
adcl
sti
fwait
push
mov
xor
cs
dec
test
push
out
imul
out
mov
push
data16
pop
into
dec
push
jo
jbe
popa
js
jnp
mov
sbb
mov
stc
pop
cli
xor
sub
testl
aaa
mov
cld
in
adc
int3
mov
pop
add
lods
out
xchg
push
pop
sub
jo
pop
dec
fadds
shl
movsl
and
ja
sbb
dec
mov
inc
negb
scas
mov
sub
add
push
repnz
aas
movsl
dec
dec
into
fwait
mov
xorb
push
mov
jo
mov
daa
dec
pushf
sbb
sub
adc
div
sub
and
in
adc
adc
jg
sbb
loopne
mov
lock
sahf
push
daa
inc
sub
lods
mov
in
sub
mov
les
mov
mov
mov
fs
pop
xchg
or
scas
jecxz
popf
test
mov
xchg
add
sar
lods
pop
ljmp
push
insb
push
adc
sbb
push
jns
enter
cmp
cmp
pop
pop
es
and
subb
sbb
xchg
xchg
dec
shrb
sub
mov
sbb
xor
pop
repnz
add
out
xor
sbbb
jae
inc
pop
push
pop
jno
push
sbb
fld
jno
cld
mov
adc
push
scas
mov
es
out
push
sarl
sub
push
mov
insb
lds
jp
xchg
femms
sarb
adc
pusha
mov
xchg
orb
sbb
fistpll
jl
cmpsl
ret
cmpsb
push
ljmp
mov
das
movsl
rcrl
negl
sbb
add
xchg
xchg
add
push
stc
xor
sbb
jmp
mov
lds
and
adc
xor
fidivs
hlt
push
push
mov
and
and
icebp
pop
call
adc
and
sarl
stos
jp
out
ret
movsl
jg
lcall
test
jle
mulb
in
cs
fiaddl
stc
dec
sahf
push
pop
and
repz
ljmp
adc
rcrb
pop
add
pusha
push
inc
sub
push
rcrb
xor
das
loope
outsb
pop
in
mov
or
add
add
jne
pop
jmp
or
hlt
ficoml
push
shll
jbe
or
or
hlt
jmp
cmp
shlb
mov
lahf
dec
cmp
daa
xor
xchg
dec
or
mov
or
idivl
xchg
mov
pop
popf
fiaddl
fstps
cltd
outsl
mov
cmp
cmc
clc
outsl
dec
pusha
adc
cmp
loope
out
cwtl
fdivs
cwtl
lods
dec
pop
out
ud2
inc
dec
int3
popf
les
xor
gs
inc
icebp
sbb
push
mov
out
bnd
push
jno
repnz
sbb
outsl
sbb
shrb
int3
jne
aas
mov
cwtl
pop
jnp
test
loopne
cli
jno
js
cmp
mov
or
inc
stc
shlb
outsl
adc
and
ret
push
ret
aam
lods
dec
cmc
pop
push
jecxz
sub
loop
fisubrs
and
movsl
cmp
sbb
jl
ja
sbb
pusha
dec
outsb
cvtps2pi
ljmp
xchg
sti
jb
mov
adc
rcrl
dec
insb
or
or
insl
flds
push
add
inc
dec
push
pop
insb
aaa
xchg
pop
pop
es
hlt
push
xor
insl
dec
out
push
mov
jb
adc
push
lea
sahf
mov
icebp
repz
sub
repz
cli
jnp
cmpl
call
fcoml
out
ja
or
jl
pop
mov
mov
or
aaa
lods
shlb
pop
stc
repnz
adc
cwtl
jb
stc
cwtl
cmp
xor
mov
outsb
mov
adc
loop
or
test
xor
addr16
jns
jg
and
jae
test
mov
add
outsb
xor
mov
pop
push
cmpsb
sti
ljmp
rcrb
dec
xor
sub
rcll
mov
xor
mov
pop
pop
mov
cmpsl
pop
add
adc
mov
into
sbb
cmp
test
mov
adc
fsin
lds
push
pop
notb
adc
pop
pop
stos
and
cmp
lods
outsl
mov
aam
sub
xor
inc
pop
and
subl
bound
and
les
repnz
popf
dec
adc
adc
jo
xor
outsl
mov
and
scas
and
loopne
pop
adc
push
lret
sub
std
sbb
and
mov
jb
xor
cmp
mov
outsl
and
call
ret
movsl
add
ja
push
cmp
into
dec
enter
xor
push
out
int3
scas
popf
add
mov
and
xchg
mov
jl
pop
mov
popa
cmc
mov
mov
rclb
inc
mov
adc
push
xor
enter
push
jge
popa
xchg
rorl
xor
xor
in
rorl
aam
fimuls
js
jnp
cs
int3
or
sub
or
jl
jmp
ret
jecxz
mov
xchg
sti
and
mov
ljmp
or
add
jo
xlat
pop
cmp
fcomps
push
cmp
dec
mov
stc
shlb
add
and
add
fwait
mov
xchg
adc
xor
into
jl
fiadds
mov
shr
push
push
sbb
rcl
pop
pusha
jmp
lock
sub
cmp
popa
ss
mov
adcb
loope
push
jp
lcall
dec
sub
adc
push
loope
xchg
adc
and
jp
dec
xchg
inc
mov
dec
cmp
andl
out
or
mov
push
jmp
pop
jp
subb
xlat
mov
cmp
into
rcrl
jecxz
xchg
lahf
push
pop
sbb
mov
mov
stos
pop
inc
dec
sub
jne
daa
iret
adc
fstl
mov
mov
xchg
adc
leave
loope
imul
sub
xchg
cmp
loope
sar
pop
push
xor
cmp
pop
popf
or
xchg
jl
ret
mov
jo
jecxz
loope
mov
lods
cwtl
aam
mov
js
jl
les
stos
aas
dec
add
cli
in
leave
push
es
in
push
jb
or
call
je
loopne
adc
mov
movsb
test
push
push
jns
sbb
mov
sub
test
into
in
test
adc
in
lcall
mov
adc
pop
cmpsl
and
gs
test
push
lahf
or
mov
cli
popf
add
popf
into
ss
sbb
lret
sbb
mov
mov
adc
or
out
jnp
pop
mov
adc
stos
dec
popf
sbb
mov
std
rcl
adc
ljmp
adc
push
mov
push
cmp
lcall
in
cmp
into
mov
stos
insb
mov
movsl
sbbl
in
and
or
mov
cli
adc
fwait
jne
inc
mov
shlb
out
pop
fcmovnb
les
dec
enter
mov
pop
shr
xchg
fbld
cltd
outsb
jae
in
insl
adc
jbe
pop
push
mov
mov
das
push
int
dec
into
sub
loop
and
push
stc
xchg
pop
cmp
fwait
int
fwait
push
sub
js
xor
pushf
xor
adc
aad
sti
int
fiaddl
jle
dec
mov
stc
add
and
xor
popf
mov
jmp
mov
in
jo
adc
and
push
out
jns
test
pop
dec
mov
xchg
sbb
sarb
fmuls
xchg
orb
inc
out
adc
lods
popf
add
cmc
cmp
and
xor
fisubrl
scas
push
fistpl
mov
int
int3
xchg
out
into
jb
ret
inc
xor
push
dec
mov
inc
jge
sub
bound
pop
call
int
aaa
fdivs
mov
bound
mov
out
pop
push
pop
fdivl
or
je
cld
jae
xor
outsl
inc
push
pop
and
push
stc
pop
adc
sbb
xchg
into
imul
xor
movsl
adc
nop
int3
mov
cmp
add
push
or
enter
mov
jnp
movsb
testl
ds
cmp
repnz
add
scas
je
adc
push
dec
mov
test
or
sbb
push
rol
mov
push
imul
dec
scas
mov
sub
aaa
lret
xlat
push
dec
fcoml
stos
mov
push
mov
xchg
ljmp
shll
outsb
push
xchg
add
scas
das
imul
les
outsl
inc
ljmp
outsb
and
jne
lahf
lret
jno
and
inc
fsubp
lods
jecxz
arpl
fisubl
lahf
fadd
jp
dec
fists
pop
fwait
std
movb
mov
push
push
out
lock
xchg
push
addr16
pop
jns
arpl
stos
fs
push
pop
xor
xchg
fucom
sbb
inc
cmpsl
mov
mov
sbb
iret
movl
jbe
inc
sub
loopne
dec
mov
cwtl
fdivl
sti
dec
pop
lahf
imul
orb
cmp
cltd
xchg
sub
aas
nop
das
or
mov
dec
jns
test
push
mov
rcrl
inc
fisubs
aam
popl
mov
jmp
push
popf
gs
inc
adc
pop
orb
sahf
xchg
dec
ret
lods
nop
js
mov
or
jnp
push
repz
lret
int
shrb
sbb
xchg
push
push
ja
in
lock
and
push
pop
add
sbb
std
jg
dec
jmp
roll
dec
cmc
gs
adc
mov
pop
aas
jno
or
dec
xchg
mov
fwait
imul
std
shrb
cli
push
adc
dec
aad
movsl
addb
mov
fdivs
cmp
mov
adc
loopne
scas
pop
pop
push
push
insl
adc
adcb
scas
negl
push
jb
jno
cmc
cmc
in
pop
dec
adc
mov
xchg
bound
aaa
pop
shlb
mov
jb
sbb
pop
sbb
push
inc
push
jle
out
lds
ljmp
fnstenv
fs
add
push
xchg
add
xor
xlat
jno
xchg
mov
dec
out
fstl
xchg
push
add
test
fadd
push
xor
testl
and
mov
es
inc
xchg
stos
push
mov
push
mov
into
cmp
pop
enter
push
sub
jns
push
fstp
and
idivl
lock
mov
jge
test
mov
mov
sbb
mov
xorb
js
mov
leave
adc
inc
cmp
xlat
push
cmp
movsb
loopne
out
inc
in
mov
scas
add
xor
sbb
mov
dec
dec
pop
enter
inc
aas
enter
adc
push
jl
insb
dec
jge
les
add
mov
lcall
cmp
inc
or
ss
lea
and
je
sbb
cltd
jno
mov
ret
xchg
and
scas
pop
clc
push
mov
ret
sbb
fwait
in
fwait
aad
and
insb
mov
jg
add
mov
mov
jg
paddq
int3
push
xchg
lods
xchg
xchg
adc
pop
adc
push
cmp
in
adc
andl
cmp
pop
cmpsl
lcall
cld
xchg
mov
mov
test
pusha
push
mov
jno
jnp
fimuls
push
push
ss
or
into
mov
mov
mov
push
enter
jne
jp
cmp
out
push
je
xchg
push
inc
lcall
cmp
and
add
adc
xchg
xor
and
aam
push
pop
lahf
and
mov
loope
xor
ret
movsl
and
mov
xor
addb
rcll
jo
pop
adc
jle
push
or
cmp
das
pop
daa
movsb
pop
dec
pop
sbb
jns
mov
push
sbb
or
push
lock
dec
fnstsw
mov
xor
mov
inc
jge
or
insl
mov
std
sbb
xchg
adc
aam
jno
fnstsw
and
inc
loop
xorl
nop
outsl
lret
rclb
cltd
sub
jge
mov
sub
out
cld
or
pop
aaa
mov
in
lahf
sub
inc
insb
jle
mov
push
bound
pop
push
fwait
add
int
ss
scas
mov
psrad
gs
xor
jmp
push
inc
xor
add
into
ljmp
inc
stc
push
jo
es
sbb
xchg
add
add
or
ja
jo
jg
pop
mov
lea
sub
andl
mov
mov
jl
out
pop
outsb
cmc
or
pop
sub
or
inc
jg
pop
pushf
push
push
loope
mov
cmpsb
into
sbb
mov
rorb
and
stos
adc
pop
imul
mov
sub
cwtl
xor
xor
xchg
icebp
imul
ds
enter
out
mov
repnz
ja
sub
pusha
ret
iret
aad
daa
fidivl
adc
xor
mov
and
mov
dec
mov
loope
stos
jl
imul
add
sbb
push
mov
stos
or
loop
sbbb
mov
lahf
mov
fcomp
xchg
test
jo
hlt
dec
imul
test
loopne
lea
lods
jle
shrl
jns
imul
cmp
test
push
xchg
inc
ja
push
mov
jb
fwait
pop
sub
aas
dec
jns
popa
dec
xor
jne
insb
sub
pop
cmpsl
xor
push
push
or
mov
aad
pop
sub
cmp
cmp
hlt
aaa
icebp
adc
xor
in
mov
mov
xchg
jp
pop
test
pop
stc
faddl
xor
push
iret
adc
movsb
fstl
pop
test
pop
add
das
cmp
pop
int3
std
sub
movsb
adc
es
mov
xchg
sahf
cld
inc
insb
movsl
repnz
lea
xchg
fldl
cli
aam
out
xlat
das
aas
push
jns
push
cltd
push
leave
out
dec
and
int3
mov
adc
sub
push
sub
and
rcl
iret
jae
shr
or
push
les
ret
fcomps
aaa
decb
or
aad
xor
outsb
out
es
movsl
adc
jecxz
or
shrl
filds
inc
mov
shrl
lods
psubsb
shrl
idiv
add
push
sbb
jbe
sub
pushf
mov
mov
add
ds
rcrb
pop
test
cmp
dec
inc
cmp
inc
xor
sbb
int
jbe
xor
pop
fidivrl
xchg
lock
mov
pop
add
test
daa
rorb
out
sbb
jnp
sbb
mov
lods
jne
mov
stos
jmp
adc
cmp
ds
mov
xor
sti
mov
test
and
or
aam
sahf
je
jl
jge
insb
inc
sub
pop
xor
insb
jnp
lahf
mov
mov
call
mov
dec
lea
or
lods
aas
dec
mov
pop
inc
add
xor
jl
or
into
jbe
mov
sub
mov
ljmp
notb
gs
push
call
add
adc
cmp
and
sbb
call
ja
loope
stos
jge
xor
push
mov
fisubrs
cmp
bound
adc
sub
lods
rcrl
lret
sbb
icebp
incl
add
stos
adc
movsb
adc
mov
out
stos
jecxz
sbb
mov
loop
cmpsl
mov
fwait
mov
or
sahf
xor
inc
adc
mov
inc
rcpps
pop
cmpsl
fs
cwtl
stos
test
cmpsb
xor
push
lods
add
sub
and
aaa
pop
loope
std
xchg
mov
inc
mov
mov
sbb
enter
call
sbb
cmc
push
mov
sbb
lcall
in
mov
inc
inc
mov
fcmove
mov
das
xor
jle
mov
mov
mov
jb
and
test
push
and
jmp
push
sub
pusha
jno
inc
xchg
mov
inc
mov
lods
inc
and
movsb
popa
call
das
adc
xchg
sub
and
pop
cmpsb
sub
pop
aas
jns
dec
scas
add
out
into
cltd
stc
movsb
iret
cmp
std
sbb
fmul
rolb
popa
jmp
pop
das
movsb
jmp
into
test
fsubr
adc
outsb
leave
test
jns
xchg
jl
xchg
adc
jecxz
jo
test
insb
fcomi
sub
mov
popf
xor
or
sub
negl
pop
xor
std
pop
xorl
dec
ss
daa
movsb
xor
jae
sub
mov
fidivrs
xor
les
aaa
loopne
mov
pop
mov
sbb
and
pop
jns
pop
nop
outsl
hlt
sub
sbb
push
clc
xchg
pusha
xchg
andl
test
mov
sbb
cmp
imul
shrl
sbb
ret
inc
and
in
daa
data16
repz
dec
shrb
clc
in
div
ficomps
mov
jae
push
add
inc
push
das
jo
loopne
rol
pop
dec
add
inc
movsl
cs
arpl
xor
inc
int3
cmc
mov
adc
sub
adc
mov
sub
outsb
pop
out
nop
cs
dec
xorb
lods
cmpsl
je
jmp
push
inc
js
push
ja
add
adc
jg
mov
and
push
test
inc
xchg
jne
fucomp
jb
cmpsb
ror
je
sub
fdivrs
push
adc
mov
fists
ss
outsl
scas
or
push
inc
cmpsb
andb
sub
andl
push
fcmovnb
pop
adc
mov
cmpl
push
pop
jbe
lret
fs
mov
popa
sub
ljmp
push
fwait
push
addr16
rcll
insl
and
dec
pop
in
and
mov
cmp
jge
ja
jbe
add
xchg
pop
call
sbb
lock
cmp
insb
cld
les
repnz
mov
mov
imul
mov
pop
dec
push
repz
dec
inc
inc
sar
sbb
das
sarl
subb
and
adc
loop
mov
add
dec
clc
pop
out
push
dec
dec
inc
cli
inc
xchg
pushf
iret
or
mov
test
shr
inc
or
es
cmp
andl
pop
xchg
adc
jo
sbb
push
push
add
fnstcw
push
push
leave
in
fidivrs
fdivrl
add
lret
cmc
cmp
bound
push
lods
adc
push
push
sti
and
out
gs
fadd
mov
iret
nop
add
lock
jmp
mov
jp
dec
push
mov
cli
mov
dec
out
insb
cmc
adc
inc
push
cmp
lods
or
push
add
xchg
mov
xchg
stos
cmp
jae
pop
pop
cmp
inc
fdivr
enter
mov
loop
icebp
insb
fstl
jp
ljmp
xlat
mov
and
cmp
or
pop
adc
dec
test
inc
outsl
out
sbb
push
xchg
mov
push
push
dec
daa
cmpsl
js
adc
mov
xchg
test
data16
ja
cmp
lods
adc
jae
push
int
xor
inc
push
bswap
stos
mov
mov
push
inc
push
xchg
cmc
mov
sbb
pop
stc
pop
jns
jmp
or
ret
xchg
rcll
jp
popl
mov
btr
aas
fisttpl
test
in
shl
into
sub
sub
push
dec
and
sbb
sub
dec
sahf
jp
inc
or
xchg
inc
pop
add
dec
and
xchg
inc
sbb
cmp
push
add
out
int
xor
rol
xor
pop
pop
pop
xchg
jmp
push
loopne
inc
inc
sub
push
mov
mov
mov
std
fucom
jb
xlat
rcrb
mov
mov
dec
lea
std
sub
fcoml
push
mov
jl
xor
mov
cltd
adc
mov
cld
test
jne
xchg
dec
add
xchg
sahf
push
xchg
cmp
mov
xrelease
in
xchg
pushl
ja
lea
lea
mov
fwait
dec
inc
mov
es
scas
fwait
xorb
rol
mov
jne
call
dec
rolb
xchg
ds
push
jns
out
sbb
inc
or
in
xchg
rcrl
fstpl
sbb
loop
loope
dec
xchg
push
pop
dec
xor
or
in
mov
push
add
pop
in
cmp
sbb
mov
jne
int
xor
int
loopne
popl
mov
ja
cmp
fsubr
dec
fildl
ret
fcomps
mov
sub
and
adc
cmc
into
insb
push
jg
pop
pop
mov
je
mov
stos
out
jp
lret
roll
inc
fbld
push
dec
arpl
mov
cmpsl
lahf
xor
xor
pushf
xchg
xchg
arpl
cwtl
aam
je
dec
inc
adc
add
dec
or
cmp
cmp
rolb
and
mov
addl
jbe
icebp
aad
jg
rcrl
lahf
mov
icebp
push
lds
cli
arpl
shlb
and
jne
into
and
js
leave
sbb
cltd
xor
adc
xor
ss
push
scas
sub
imul
imul
xor
fstpt
sub
out
xor
sbb
cmp
aad
and
fcmove
jae
and
pop
jnp
out
fcoms
cmp
lret
imul
mov
stos
adc
aad
sub
mov
icebp
daa
mov
jecxz
pop
jnp
fwait
leave
xchg
iret
pop
adc
jnp
pop
cmp
cld
ret
mov
popa
mov
sub
movsl
pop
cmpsb
pop
sbb
sbb
addr16
mov
adc
fs
add
in
mov
ret
les
loope
inc
mov
ficoms
insb
cltd
jb
lcall
lods
lea
jg
ret
push
cmp
imul
or
jne
ss
test
xchg
negl
dec
xor
lods
inc
cmp
ja
jns
xor
repz
fcmovbe
loope
mov
decb
mov
aam
or
frstor
iret
inc
push
xchg
addr16
out
or
stos
aas
sbbl
dec
mov
fmull
stos
jmp
inc
cld
ljmp
aaa
push
test
mov
mov
repnz
jb
cmpsl
cwtl
jb
pop
cmc
shrb
jns
xor
les
inc
pop
cmpsl
jnp
xchg
push
fldenv
or
adc
adc
fs
pop
or
or
pop
cmpsl
xor
pop
jl
mov
hlt
push
fwait
adc
sahf
in
lret
mov
hlt
mov
adc
test
jmp
stc
cmp
push
bound
pop
cmc
inc
rdtsc
jmp
cmp
loopne
out
ljmp
pushf
lds
imull
leave
adc
addl
mov
ljmp
jae
cmp
adcl
inc
pop
mov
inc
popf
mov
in
ds
dec
and
xor
mov
or
rolb
push
and
mov
in
push
stos
sub
out
add
or
inc
je
cmp
cmpsb
adc
fsubl
and
cs
mov
xlat
mov
jle
stos
cmovle
sbb
jle
sub
push
push
mov
mov
sub
sti
jne
in
adc
gs
dec
push
aas
loope
push
jmp
dec
ja
data16
push
push
jmp
sub
mov
xchg
cmc
cmp
add
dec
fsubrl
repnz
jnp
add
push
xchg
aad
jl
sub
clc
leave
ret
lods
lods
or
rcrl
jle
pop
xchg
and
cwtl
mov
push
cltd
lahf
dec
push
lcall
shlb
jno
lret
incb
stos
pushf
insl
ja
aam
xchg
sub
cmpsl
xchg
lods
int
popf
xor
push
push
ret
cmpsb
add
stos
enter
jg
je
adc
and
inc
push
xor
xlat
cltd
lock
mov
cltd
lods
push
out
out
push
mov
mov
mov
jmp
dec
jnp
mov
into
push
jge
xchg
stc
hlt
addb
jecxz
and
and
repz
or
sti
out
stos
cmp
loopne
into
lock
dec
adc
call
sbb
mov
call
adc
out
ja
mov
call
aaa
sbb
jle
stos
mov
into
xor
push
jno
pop
xor
fs
xchg
inc
loope
inc
out
das
jge
aam
in
cmpsl
icebp
add
xor
fnstsw
jnp
inc
xor
pop
pop
xor
or
pop
out
movnti
and
push
out
mov
ffreep
inc
jecxz
test
push
and
sub
arpl
jp
xor
fistpl
das
mov
insb
out
mov
cmp
jp
push
js
addr16
fisttps
pushf
gs
jbe
xor
hlt
ret
xchg
test
sarb
in
push
cmp
out
xchg
fcoms
xchg
rcrl
push
shrb
lcall
imul
fdivrs
dec
push
and
subb
stos
or
repz
movmskps
std
xchg
call
lods
fldl2t
sti
movsl
int
inc
int3
aam
mov
jp
sbb
data16
fcomps
mov
mov
into
pop
clc
loope
sahf
push
inc
mov
outsb
jns
or
rcll
push
pushf
push
int
sbb
mov
sub
loop
das
lods
dec
insb
dec
adc
lret
stc
aaa
dec
outsl
sbb
inc
out
pop
inc
mov
leave
ja
les
push
dec
lods
lahf
or
xchg
sub
mov
jg
iret
popf
div
or
add
dec
pop
aas
xor
add
cli
popf
jl
pop
mov
lds
push
cmp
mov
imul
sub
in
cmp
cmovns
pop
jne
sbb
pusha
rclb
scas
sbbb
push
jae
xor
dec
lds
jl
sub
push
fwait
pushf
pop
mov
mov
fs
inc
mov
adc
lret
push
int
xchg
add
add
mov
or
aaa
add
loope
lea
inc
cmpsl
inc
in
cmc
enter
les
movsl
popf
movsb
andb
fcmove
adc
xor
movsl
cli
xchg
lcall
cmp
sub
repz
into
aaa
push
dec
sub
imul
mov
loope
popf
adc
mov
fstps
lret
pop
in
adc
shlb
mov
mov
sti
mov
sub
push
test
xchg
jge
in
pop
sbb
fimull
das
jnp
out
sbb
aam
out
ficoms
in
lea
pushf
add
mov
dec
and
jnp
jbe
fwait
repnz
xchg
in
lret
lods
lret
jbe
fdivp
lods
and
jmp
in
repz
adc
xchg
mov
jae
icebp
movq
adcb
mov
xor
mov
push
out
insl
pop
jecxz
cmp
ret
mov
cli
add
dec
fsts
adcb
cmp
scas
sbb
push
aad
add
or
les
rcrb
xchg
scas
cmpsl
out
testl
insb
and
jno
pop
adcl
test
or
dec
enter
aaa
push
xor
mov
push
gs
dec
mov
mov
sub
test
and
adc
rolb
inc
jno
enter
ljmp
push
stc
mov
mov
cmpb
xchg
cmpsl
jnp
inc
data16
mov
add
fwait
mov
dec
fstpt
hlt
in
jnp
dec
adc
das
jle
mov
cli
cmp
pop
inc
add
cmp
push
sub
lods
idivl
and
adc
jg
mov
push
loope
mov
inc
mov
or
shrb
xchg
sub
inc
bnd
nop
or
push
leave
mov
and
jge
aam
outsb
mov
iret
outsb
popf
imulb
jnp
loopne
push
insb
sub
stc
xchg
test
sub
test
add
hlt
jp
xor
mov
adc
test
sbb
xchg
sbb
je
xchg
sbb
cld
mov
sub
ljmp
aam
test
rclb
jg
test
pop
pop
mov
sub
sub
inc
cmpsb
sbb
mov
sub
mov
sarb
repz
and
sbb
out
adc
xchg
jmp
xchg
xchg
pop
test
or
sub
cmp
push
sub
adc
sub
adcb
and
jmp
test
push
xchg
pop
fsubrl
aam
and
jecxz
cmp
subb
addr16
ljmp
mov
repnz
adc
jnp
outsl
dec
lds
mov
fisttpl
dec
out
jg
jne
and
cmpsl
xchg
ss
inc
std
mov
pop
mov
dec
movsl
push
mov
mov
inc
adc
adc
push
pushf
fistpll
and
repz
mov
and
add
fwait
pushf
inc
popa
xchg
sub
imul
call
cmp
jno
fcmovnbe
clc
dec
lret
pop
fstps
pusha
frstor
mov
lret
dec
xchg
test
in
xchg
outsl
push
fstpt
bound
mov
mov
inc
cmc
mov
adc
enter
inc
dec
jp
cmc
mov
or
repz
adc
cli
and
lcall
nop
mov
jns
pop
push
jp
jmp
xor
js
es
inc
pop
mov
not
insl
notb
xor
clc
jns
push
inc
mov
xor
fidivrl
nop
in
and
sub
xor
subb
pushl
mov
popf
sbb
mov
popa
sbb
push
and
scas
fdivr
mulb
inc
loopne
clc
lret
mov
test
test
stos
aas
pop
fbstp
fldt
sub
idivb
js
data16
xchg
sahf
aam
jg
and
or
je
hlt
sbb
sbb
dec
inc
sbb
lods
pop
stc
cmp
popa
adc
nop
fidivrs
or
cltd
stc
and
aaa
arpl
adc
pop
jno
inc
add
add
adc
xchg
adc
jle
les
inc
sahf
incl
and
mov
jbe
ljmp
xor
js
lcall
int3
xchg
shrb
call
dec
sub
adc
fdivl
mov
into
or
test
dec
imul
sbb
aam
cs
insb
dec
aaa
mov
sub
xor
jo
or
icebp
test
adc
jp
std
and
jg
pop
mov
xor
aaa
int
push
inc
out
add
jl
ffreep
repz
fwait
orl
fldenv
sbb
pop
fs
cmp
mov
xchg
push
sbb
repz
mov
cwtl
mov
lahf
enter
dec
sub
adc
xchg
call
outsl
inc
ja
and
sub
test
push
es
clc
pop
aam
lods
push
xchg
cld
shlb
int3
leave
dec
mov
scas
push
dec
add
ds
ja
mov
into
mov
mov
push
cmp
jl
enter
data16
jp
jns
xchg
push
mov
mov
repz
sub
movsb
xlat
jne
lock
jnp
filds
repz
cmc
lea
out
fisubrl
xor
cmp
test
cmpsb
jmp
and
xchg
sbb
xchg
aad
ja
inc
lds
adc
orl
jo
jecxz
mov
mov
xchg
sbb
enter
mov
sbb
mov
lret
push
xchg
cs
mov
mov
jp
push
pop
popf
mov
pop
sub
cltd
cmp
js
stos
aad
aaa
pushf
mov
je
mov
mov
scas
jae
jecxz
negb
mov
repnz
fstps
mov
adc
out
ljmp
push
sbb
or
cmp
cld
mov
and
out
jmp
cmp
dec
jmp
scas
shrb
cld
or
movsl
jmp
ss
lea
mov
fildll
jge
push
jno
add
test
dec
xor
pop
bound
call
xor
cmpsl
fsts
popa
inc
imul
xchg
inc
jge
aad
mov
cmp
xor
inc
inc
jle
cli
xchg
or
pop
sub
xchg
ljmp
leave
in
insl
outsl
xlat
push
lods
push
rcr
push
add
into
call
push
pop
ds
imul
fcoml
jg
xlat
loopne
xchg
jge
pop
pop
movsl
sahf
push
mov
mov
xchg
pop
lcall
and
add
mov
add
sub
jl
inc
push
addr16
xor
fnsave
mov
inc
fcomip
mov
mov
add
jno
les
aad
aad
mov
sub
lock
xchg
pop
dec
add
call
mov
mov
push
sbb
lret
push
or
mov
icebp
xor
inc
adc
negb
push
and
sub
xlat
or
cmp
xor
push
orl
jb
pushf
scas
add
cmpsl
call
pop
lock
mov
sahf
test
insb
hlt
mov
jle
fldenv
test
in
fcmovnb
jbe
lock
xchg
in
mov
cmp
lds
cli
out
pop
fsubl
jecxz
rorl
jns
mov
je
sub
mov
jbe
popf
clc
rolb
in
popf
jns
aam
idivb
lcall
out
stos
push
push
mov
push
loopne
scas
xor
xchg
adcb
pop
mov
jb
adc
inc
jmp
out
insb
sbb
rclb
push
outsl
fnsetpm(287
mov
loop
cmp
iret
pop
es
fldcw
cmp
mov
jge
xchg
jg
mov
std
push
lods
lds
icebp
fcmove
int3
sbb
pop
loopne
fldt
jbe
iret
les
movsl
das
jne
add
test
mov
jns
daa
pop
into
ss
sub
into
xor
jns
lahf
inc
xor
mov
es
fcomip
test
sbb
sub
loop
adc
pop
out
repnz
leave
aad
add
push
mov
stos
add
xor
shrl
or
pop
insl
mov
outsl
gs
loop
or
sub
xchg
push
jb
inc
add
cltd
mov
pushf
or
inc
sub
dec
mov
fimull
and
push
shll
mov
andl
sbb
fs
cs
jns
mov
bnd
fwait
insb
xor
add
decl
or
fisttps
mov
mov
sub
pop
mull
add
cli
daa
jno
xlat
int
ficoml
mov
add
inc
lahf
and
add
pushf
js
pusha
movb
mov
idiv
int
mov
xchg
fiadds
movsl
xchg
je
push
gs
pop
nop
add
movsb
cmpsl
add
loope
mov
sbb
mov
and
push
decl
xchg
add
push
sarb
mov
je
jae
pop
sub
push
push
xor
scas
incb
test
xchg
mov
xor
enter
sub
out
xchg
ss
inc
das
stos
mov
sub
mov
out
and
mov
push
push
aaa
add
sti
xlat
inc
sbb
adc
je
dec
xchg
pop
ljmp
xchg
xor
adc
imul
outsl
sti
dec
jmp
nop
bound
push
mov
add
and
sub
repz
scas
imul
hlt
mov
jne
lret
aas
lea
jae
xchg
pusha
test
pop
inc
roll
sbb
push
fsubrl
lahf
pop
jb
mov
adc
ret
cmp
addr16
int
inc
jge
repnz
repnz
or
mov
xchg
jb
or
cmp
jp
incb
push
or
enter
or
movsl
stos
hlt
daa
mov
frstor
xor
mov
sbb
enter
cmovbe
pop
dec
outsb
fiadds
movsb
loopne
add
jno
fmull
cmp
push
insb
mov
or
lods
dec
fstp
jg
xchg
popa
fiaddl
jecxz
fstps
inc
push
sub
pop
dec
fstps
fsubrs
adcb
and
adc
sbb
or
inc
mov
push
push
movsl
adc
fistps
push
and
out
fldl
stos
int
pop
inc
mov
lret
jb
cld
test
std
jle
scas
insl
imul
sar
insl
xchg
and
dec
jl
push
lods
jo
les
lret
cmpsl
lahf
ret
aad
inc
popf
clc
mov
mov
scas
pop
add
dec
jmp
rolb
xor
int
pop
rcrb
mov
mov
push
in
popf
rorl
dec
xor
mov
jle
loope
sub
lahf
jae
jl
into
mov
lret
sarl
push
mov
and
adc
cmp
xchg
pop
cld
push
inc
jle
pop
push
shrl
lds
stos
mov
addl
add
dec
fstl
cmpsl
rcll
in
push
aas
fstpt
loopne
in
ljmp
mov
icebp
cmpsl
mov
xor
push
imul
shl
fdivp
mov
lret
mov
dec
sub
push
into
mov
sbb
xor
jb
cwtl
cld
test
push
mov
xor
push
inc
jae
in
out
mov
pusha
mov
cld
pusha
xchg
lea
arpl
pop
popf
pop
pop
ljmp
mov
out
mov
push
push
je
scas
inc
mov
pop
mov
pop
fstps
sbb
xchg
sahf
lds
cmpsb
push
stos
fsubs
stos
pop
cld
fcmovbe
mov
leave
sbb
pop
mov
fists
insb
or
push
mov
pop
cmp
hlt
rcl
dec
mov
fdivrs
sahf
repz
cmp
lods
pop
lock
pushf
mov
xchg
jo
out
test
or
push
inc
jge
or
jmp
fmull
xchg
cltd
pushf
mov
in
dec
jae
out
les
and
sub
adc
add
clc
or
shll
insl
lret
mov
lea
clc
pop
shll
cwtl
hlt
mov
mov
repz
and
dec
push
or
add
fwait
jns
test
stc
fists
loopne
das
outsl
hlt
dec
xlat
mov
sub
jp
mov
les
pop
fists
aad
inc
jl
xor
mov
dec
bound
adc
sub
jbe
iret
xor
xadd
sbb
std
xchg
push
xchg
add
scas
fwait
dec
icebp
inc
pop
push
xor
addr16
fildl
or
and
ret
cmc
jmp
add
dec
add
call
je
pop
and
xchg
es
test
jmp
sub
adcb
movl
add
mov
test
hlt
pop
sub
sbb
cmpsb
sbb
mov
arpl
mov
xor
or
dec
xor
ja
lea
arpl
stos
shl
fs
sub
mov
mov
xor
mov
pop
loop
stos
cmp
xor
sub
std
movsl
cld
pmovmskb
jle
push
or
in
iret
xchg
imul
addr16
repnz
cltd
mov
pop
adc
lods
mov
adc
out
popf
int3
cmp
cwtl
dec
lret
dec
mov
add
pop
ret
mov
xchg
cld
shl
jbe
jge
dec
pop
push
inc
mov
sub
int
lret
xor
js
cmp
mov
negl
or
pop
lods
sub
mov
inc
adc
jno
popl
cmp
push
cmpsb
push
inc
or
xchg
adc
inc
imull
lods
mov
dec
inc
sbb
add
pushl
jne
jo
jl
cmp
and
xchg
jnp
xchg
xchg
mov
aas
push
iret
sbb
push
iret
xor
mov
adc
pop
cmp
insl
ret
loop
addr16
movsb
or
aam
in
fs
adc
in
popf
push
xor
lock
aaa
mov
jns
pop
in
push
test
aas
lcall
cmp
pop
int3
xchg
lea
fistpl
pop
sub
jno
outsb
mov
sub
or
in
fsubl
js
arpl
loopne
add
jg
das
andl
sbb
cli
mov
data16
stc
mov
aad
lods
inc
inc
sbb
call
push
and
scas
cmp
push
js
add
xor
lock
movsl
add
lea
mov
outsb
out
pop
cmp
push
mov
movsl
push
sub
mov
mov
pusha
mov
xchg
lods
paddsw
inc
xchg
les
xorl
jp
icebp
jmp
adc
int3
into
adc
fstps
pop
out
fwait
mov
inc
add
rorb
aaa
jno
dec
inc
cwtl
sbb
out
gs
dec
loopne
mov
in
mov
cmovle
sub
add
je
fisubrl
jb
push
pusha
ret
adcl
addl
nop
dec
adc
cltd
sub
stc
imul
xor
and
sti
adc
pop
pop
pop
xchg
jl
mov
inc
push
mov
mov
xor
test
jb
cli
jl
loop
mov
xlat
or
xchg
sub
int3
mov
cmp
fdivrs
mov
test
inc
sbb
mov
insl
lods
or
cltd
or
ljmp
mov
pop
xchg
movsb
and
add
xor
xor
xor
ret
pop
add
cmpsl
mov
dec
aas
mov
adcb
or
icebp
stos
cmpsl
jmp
jl
adc
adc
stc
out
sub
xchg
aaa
mov
push
jno
inc
sbbl
push
cmpsb
add
testl
pop
lock
test
sbb
pop
scas
pop
stc
inc
dec
into
int3
jge
lcall
add
xchg
dec
xchg
jo
push
xlat
mov
cld
lret
xchg
mov
mov
fdivs
or
push
in
push
push
cmpsb
mov
push
insb
xchg
faddl
lods
mov
or
out
sti
jl
mov
pop
test
divb
xchg
push
push
or
inc
fs
mov
mov
jg
mov
movsl
push
push
pop
lds
sub
stc
cmp
xchg
and
shlb
ret
daa
daa
mov
out
and
mov
in
mov
jmp
sbb
mov
jno
out
mov
inc
lds
fisubl
jbe
movsb
or
sub
ss
mov
pop
push
test
mov
das
adc
outsl
dec
stc
mov
jo
add
mov
xor
xor
in
sti
push
in
jne
fisubs
inc
cld
add
scas
mov
cmpl
aad
mov
mov
xchg
out
mov
pop
mov
add
jg
out
sbb
mov
out
cmp
sub
mov
pop
call
adc
loop
shll
pop
pop
pop
scas
sub
push
xor
int
jo
mov
test
scas
outsl
repnz
or
jnp
out
andl
adc
sub
shl
movl
add
cmpsl
xor
sub
in
pop
fcmovbe
das
ret
mov
add
sub
test
imul
jnp
leave
aam
fcomp
and
test
mov
aad
cmp
scas
cmp
fistpll
mov
pop
xchg
sub
push
jmp
or
xor
popa
fadds
lret
movntps
sbb
mov
pop
mov
fistl
in
fs
push
xchg
imul
xchg
sarb
mov
scas
fs
lahf
jle
test
sbb
test
mov
popa
and
mov
adc
daa
dec
xchg
mov
xor
nop
stos
mov
pop
imul
add
jo
pop
mov
adc
popa
cwtl
cmp
sbb
lret
add
jae
jne
add
mov
sub
jmp
enter
outsb
pop
mov
leave
popl
shll
imul
mov
movsl
inc
fnsave
inc
cmp
push
sub
pop
fsubs
popa
inc
dec
into
push
cld
ljmp
cld
scas
mov
lret
call
loopne
inc
and
insl
cwtl
mov
jmp
bound
mov
pushf
movsb
cmp
fs
mov
pushf
lret
clc
leave
shlb
sub
sub
push
loope
xchg
push
imul
fdivrs
mov
xlat
test
mov
cmpsb
xchg
push
xchg
pushf
lcall
and
icebp
aaa
lret
push
test
xor
cmp
jne
fwait
sub
testl
je
fiaddl
jmp
cmp
mov
dec
out
fstps
call
dec
add
jp
iret
data16
mov
leave
pusha
ret
xchg
push
fiadds
rcll
mov
sbb
mov
stc
hlt
fst
insb
cmp
xchg
cli
mov
xchg
jb
mov
inc
js
inc
bound
inc
ror
add
notl
sub
mov
sub
ja
jg
stos
jnp
add
loopne
add
xchg
mov
add
jmp
jae
xchg
xor
imul
pop
cltd
push
xlat
pop
mov
lcall
inc
and
aaa
jmp
imul
mov
xchg
sbb
jae
popa
test
sbb
testb
push
insb
fisubrl
lret
and
xor
and
xor
mov
push
mov
rcrb
sbb
push
scas
aam
scas
js
lret
in
jo
lods
sbb
dec
jle
pop
fdivs
push
loopne
sti
pop
and
bound
sub
or
adc
jecxz
movsl
outsb
or
push
mov
iret
cmc
fdivrl
xchg
pushf
cmpsb
in
push
jne
or
mov
xchg
sub
xor
xchg
bnd
mov
loopne
dec
push
xor
repz
jo
xorb
push
inc
enter
jne
cmc
das
rolb
movsl
in
or
repz
out
es
sub
or
test
data16
aaa
testb
bound
fstpt
lret
cmpsl
xor
mov
dec
sbb
subb
mov
cs
pop
sti
jnp
out
mov
out
or
xor
ds
xor
addl
dec
cmpsl
add
mov
mov
sbb
subl
mov
into
scas
pop
inc
mov
xchg
cmp
jmp
mov
aad
and
outsl
dec
pusha
pop
je
jl
jns
fs
mov
rol
dec
in
xchg
fidivs
jmp
outsl
jnp
mov
inc
pop
aaa
arpl
xor
lods
cmp
push
mov
add
dec
mov
sti
mov
clc
lret
stos
addl
mov
outsb
sbb
mov
jl
mov
sbb
pop
sbb
inc
cmp
ljmp
negb
cmp
cmpsb
sub
es
sbb
sub
int3
push
mov
outsl
fadds
pop
and
xchg
lcall
sub
movsb
mov
ficoms
js
mov
xlat
add
aaa
clc
outsb
and
push
add
mov
xchg
xchg
jbe
sahf
and
adc
test
imul
mov
clc
pushf
stos
jecxz
mov
push
sub
mov
xor
xchg
jge
jbe
mov
or
arpl
or
add
pop
push
ljmp
dec
jp
or
fstpl
repz
in
push
fnsave
pop
inc
rcll
decl
sbb
call
xor
dec
pop
pushf
sbb
mov
int
adc
in
sti
imul
repnz
adc
push
add
in
out
mov
inc
add
xchg
mov
xor
jl
push
cmp
enter
sarl
xchg
mov
cmp
sti
outsb
fsubp
push
mov
ja
add
es
out
outsb
push
sub
call
scas
test
jl
xchg
xchg
cmc
jmp
popf
add
xchg
stc
ds
aad
or
out
xchg
cmp
test
imul
mov
and
clc
push
jle
ficomps
or
nop
inc
sbb
in
or
inc
cmc
test
imull
sub
popa
scas
or
mov
popf
jnp
scas
test
sub
ficoms
xlat
mov
or
out
inc
lods
insb
sub
add
sbb
shlb
mov
mov
xchg
mulb
fcom
das
fists
ss
mov
mov
pusha
negb
add
adc
pop
stc
pop
cmc
scas
jne
negb
cli
pop
sbb
or
es
mov
mov
loopne
cmp
mov
xor
xchg
jg
dec
push
adc
push
lods
pop
cli
test
add
mov
imul
sub
int3
inc
xor
nop
add
lods
loopne
shlb
xchg
in
pop
movsb
imul
xchg
dec
adc
repnz
sbb
mov
setns
outsb
mov
mov
pop
stos
xor
outsl
pop
ljmp
lret
addr16
insb
and
cmp
cwtl
push
and
stc
inc
movsb
mov
sbb
mov
mov
orb
and
rclb
push
fadds
hlt
add
sbbb
sub
jmp
pusha
neg
cmp
out
cmc
repnz
das
mov
mov
inc
mov
loop
andl
add
hlt
bound
sub
aam
xor
ds
jmp
ret
push
int3
adc
jg
insb
or
imul
jb
int
dec
jge
stos
imul
jb
into
in
sbb
add
fwait
push
jmp
mov
std
jmp
scas
sahf
in
jbe
or
adc
outsb
sti
push
test
lcall
in
dec
mov
inc
mov
sbb
cwtl
addr16
jl
cld
fimuls
xchg
ja
test
sbb
fcomp
imul
out
or
and
xorb
scas
adc
jbe
loopne
imul
addl
out
jns
daa
push
addr16
jo
xor
or
and
jl
fists
xchg
scas
jo
sbb
push
pop
mov
adc
mov
sub
dec
daa
jae
icebp
xor
test
xchg
adc
cmpsb
fnstenv
roll
daa
pop
loope
movsb
jl
lea
fadds
bound
jecxz
add
fsubrl
popa
je
clc
aam
movsb
mov
lret
fistpl
dec
and
stos
movsb
pop
cmp
fstps
movsl
sbb
sbb
xchg
jbe
repnz
out
and
jns
mov
loop
lahf
add
daa
insb
cli
add
mov
dec
add
mov
sub
negb
loopne
and
scas
daa
and
dec
adc
sub
jne
xchg
sbb
mov
sub
jb
push
outsb
push
jne
mov
inc
addr16
push
or
and
adcl
fs
add
inc
mov
int3
ds
push
rcll
dec
push
jl
icebp
push
cmpsb
mov
pop
mov
mov
out
xor
dec
insb
addr16
pop
popf
push
bound
icebp
adc
mov
adc
insb
mov
xchg
sub
or
std
enter
fcoml
mov
jnp
pop
jns
jp
aaa
push
ret
cmp
lcall
and
mov
push
pop
aaa
mov
sbb
fildll
inc
mov
jne
jno
or
sbb
pop
ljmp
sbb
imul
pop
jbe
popa
xor
dec
jl
js
test
adc
jbe
imul
sub
pop
jns
fcompl
ljmp
sbb
test
ret
pusha
lahf
dec
mov
imul
mov
fisubl
adc
fs
push
jns
mov
bound
nopl
sub
in
cmp
and
xor
xorl
loop
ficompl
cmp
imul
es
jnp
mov
aad
pop
leave
xchg
or
inc
bound
cmpsb
cltd
push
mov
mov
mov
dec
sub
sbb
jg
jbe
in
pop
dec
or
mov
ss
loopne
pop
nop
push
xor
adc
test
cmpb
pop
repz
scas
addr16
je
mov
lds
push
xchg
pusha
jmp
pushl
pop
jb
jb
ret
sbb
rclb
lods
subl
and
ret
mov
push
push
sub
fcmovnb
cmp
jle
cmpsb
ja
xor
jmp
xor
jb
cmpsb
jno
shl
scas
pop
cmp
push
mov
dec
cmp
push
mov
stc
adc
adc
out
mov
lock
rolb
sti
shr
jno
pop
cmp
sub
sti
mov
loop
fs
setle
mov
push
jne
sahf
repnz
adc
jno
inc
cltd
xchg
xchg
add
xchg
sbb
shrb
test
mov
inc
cli
jnp
ret
inc
outsb
mov
xchg
mov
dec
je
mov
mov
add
sbb
loope
imul
push
xor
movsl
lods
in
mov
pop
in
mov
shlb
dec
cmp
cwtl
scas
inc
imul
fldenv
cltd
jb
stc
fldln2
or
icebp
and
adc
nop
jmp
out
push
out
into
popa
push
mov
xor
adc
mov
pop
repnz
jp
cmp
dec
push
rorb
sbb
lret
imul
add
outsb
xor
jp
je
mov
pop
adcl
in
cmpb
pop
pop
xor
sub
xchg
mov
sub
sub
rcrl
rcll
add
icebp
fs
cli
xchg
jmp
call
cmpsl
cld
push
pop
cmpb
ja
invd
lds
adc
pop
inc
mov
adc
imul
mov
sub
enter
mov
andb
xor
sbb
add
mov
cmpsl
ljmp
or
lods
les
or
insb
js
or
fucomi
addr16
add
jmp
mov
insl
stc
loope
fsubr
xchg
add
std
xor
add
test
mov
jg
js
mov
pop
xor
test
notl
cmp
or
cmp
adc
mov
rcr
out
sub
and
jle
adc
add
popf
xchg
lods
pop
sbb
nop
mov
mov
rorl
mov
mov
cmp
adc
cmp
aas
ror
push
nop
out
lahf
or
jg
jo
xor
test
lds
pop
shll
ret
pop
clc
imul
imul
push
ret
test
mov
mov
test
mov
iret
push
mov
daa
repnz
and
push
mov
sub
add
int
loopne
iret
xchg
adc
mov
and
jmp
out
cmp
xlat
jbe
enter
inc
jl
rcl
add
mov
sub
mov
push
xchg
icebp
addr16
gs
lahf
push
xchg
lea
out
adcb
mov
sbb
jnp
divb
popf
lahf
imul
pop
cmp
xchg
cs
ret
int3
dec
xchg
decl
or
ss
and
test
xor
je
push
sub
xchg
je
andl
stc
leave
mov
das
pop
ret
mov
mov
orb
pop
das
dec
lahf
leave
xchg
testb
lea
loope
or
fists
dec
pop
xor
fmul
sub
ret
fdivrs
fldcw
in
mov
jbe
sarb
enter
xor
sub
cmpsb
leave
adc
jg
add
mov
fnstsw
lret
push
movsl
dec
cltd
or
out
fucomp
or
pop
hlt
pop
rorl
lcall
jecxz,pn
jne
lcall
nop
mov
test
sbb
nop
push
fdivrs
aam
mov
jno
add
insb
or
lds
xchg
sbb
pop
mov
dec
into
push
fstp
bound
test
jp
cmp
clc
and
nop
mov
xchg
sbb
mov
aam
std
inc
mov
mov
stos
mov
fadds
mov
addr16
cmpsb
fisttps
jno
aas
sti
cmp
shll
push
jge
jge
mov
sbb
and
inc
mov
xchg
pop
testb
xor
lods
jmp
ds
cmc
add
fucomp
jno
cmp
cmp
push
jne
xchg
push
push
sub
push
push
cli
pop
mov
ss
inc
mov
and
dec
aaa
popa
cmpsl
dec
inc
stc
stc
and
repz
test
dec
lds
mov
movsb
scas
test
jecxz
rolb
push
aaa
push
loopne
xchg
aas
scas
mov
test
das
ljmp
cli
loope
inc
cmp
sub
xchg
test
mov
sub
pop
enter
lods
scas
pop
out
ret
lahf
les
push
and
mov
shll
or
cmp
mov
push
jae
cmp
negl
inc
push
cmp
cmp
add
fildll
aaa
push
cmp
inc
mov
inc
xchg
xorb
pop
iret
sbb
int3
xor
insl
add
jb
inc
sbb
mov
les
inc
mov
cmp
pop
inc
pop
sub
stc
ss
aas
dec
push
push
push
mov
or
fwait
pop
mov
std
inc
imul
mov
jge
xchg
and
int
mov
ret
aad
dec
nop
mov
idiv
test
dec
xor
je
mov
inc
push
clc
jge
xchg
shrl
push
push
std
stos
ja
jge
pop
jbe
repz
nop
push
pop
cli
pop
test
sub
and
daa
cwtl
dec
cmp
xchg
gs
shrl
sub
adc
scas
out
ljmp
in
scas
or
scas
mov
lahf
flds
fdivl
mov
cmp
test
ret
xchg
xchg
cmp
cwtl
jmp
pushf
push
pop
repz
aaa
jl
test
cmp
mov
in
adc
ret
hlt
dec
mov
fistpll
andl
mov
xor
cmp
xchg
mov
arpl
sahf
aam
out
enter
jg
and
or
test
sbb
sbbl
gs
sahf
push
push
or
popa
les
mov
gs
out
lret
fidivrs
mov
lods
dec
aas
scas
adc
xlat
mov
dec
ds
adc
sarb
xor
mov
in
adc
add
dec
dec
mov
mov
cmpsb
insl
mov
cmpsl
push
xchg
pop
mov
cmc
sub
cmp
cltd
xchg
push
fs
js
pop
and
mov
andb
fdivl
mov
scas
clc
sbb
dec
push
sbb
and
lods
dec
shlb
rorl
pop
out
xor
fstpl
orb
shll
sbb
test
fs
call
sbb
jae
out
sti
xor
xor
mov
test
sbb
in
sbb
fsub
call
sbb
add
stos
add
push
negl
in
daa
push
mov
xchg
mov
jl
sbb
out
add
rcll
mov
movsl
pop
fadds
jle
sub
mov
outsl
iret
inc
add
pop
aad
pop
ret
rcl
xor
cmc
pop
scas
mov
cmc
lods
push
jge
dec
sbb
fwait
mov
xchg
jmp
jmp
pushl
das
rclb
mov
dec
pop
in
mov
movsb
repnz
imul
jns
add
mov
ja
js
nop
sarb
add
jo
lock
add
int
jge
mov
cmp
test
mov
idivb
subl
je
cmp
lods
mov
test
sub
mov
jge
fisttpl
and
es
inc
shll
arpl
add
out
add
sub
fs
and
fimull
repnz
ss
push
and
jb
add
or
pop
mov
xchg
cmp
push
leave
nop
int
dec
mov
cmc
push
out
nop
pop
mov
jp
jo
sbb
lods
xchg
aas
jge
cmpsl
aas
mov
mov
popf
mov
test
mov
aas
sub
fmuls
out
imul
test
fdivr
and
xchg
cmpsb
jae
sub
sbb
cmpsl
out
and
cmp
and
call
inc
insb
fdivrs
lret
addr16
inc
jne
shll
push
sbb
push
fisubrs
scas
imul
pop
push
mov
push
outsb
pinsrw
xlat
adc
shlb
cli
lods
stc
lds
mov
mov
lock
imul
cs
in
pop
fists
adc
jecxz
xchg
xchg
or
fcompl
pusha
xor
mov
xor
add
bnd
pop
push
pop
pushf
sbb
xchg
ret
jge
test
xchg
xchg
cld
and
mov
mov
fst
sti
xor
xchg
int3
stc
popa
fcomi
pop
jmp
movsb
gs
xchg
adc
cs
cmpsl
mov
scas
dec
cs
mov
cmpsb
cmp
or
repnz
dec
add
cmp
clc
rorb
shl
aaa
push
lods
sbb
ljmp
dec
int3
jl
inc
jo
aam
ret
imul
gs
ja
push
inc
ret
pop
push
test
lret
jge
fisttpll
sub
jg
frstor
mov
sbb
test
movsb
dec
pop
sub
orl
mov
mov
lret
sbb
inc
mov
push
out
out
push
inc
js
sti
push
xor
dec
outsl
sbb
jge
sbbl
movsb
inc
repnz
fs
sub
push
cmpsb
pop
adc
mov
push
cmp
push
test
xor
ret
nop
imul
ja
popf
aam
xchg
leave
add
shrb
int3
shrb
pop
inc
bound
inc
loop
dec
or
cmpsb
pop
sahf
mov
push
adc
dec
in
mov
repnz
dec
mov
xchg
stc
mov
scas
adcl
repnz
mov
jcxz
cmp
pop
mov
lret
stos
inc
or
sbb
dec
mov
lea
pop
jnp
pop
imul
gs
bound
inc
cmp
repnz
scas
pop
aam
mov
cmp
into
and
push
jo
cmp
mov
aaa
mov
loop
in
subl
mov
pop
lcall
js
push
dec
inc
push
dec
addl
std
sub
pop
jge
xchg
pop
cmp
mov
shlb
dec
jmp
lcall
jno
jbe
mov
dec
out
cld
cmp
punpcklwd
pop
repz
or
jp
mov
adc
pop
adc
cltd
out
or
ljmp
gs
inc
inc
add
cmpsb
push
inc
ret
push
cs
xchg
xchg
mov
lahf
mov
push
outsl
sti
sub
ljmp
pop
stc
clc
int3
les
pop
adc
add
cmpsb
ret
pop
mov
push
sbb
mov
pop
xlat
push
lea
hlt
es
sbb
leave
cmp
cmp
sub
cmpsb
cmp
xorl
inc
dec
sbb
cmp
std
cmp
xor
rcrb
cli
xchg
and
imul
xchg
pop
lods
mov
add
nop
scas
adc
adc
idivb
jnp
int
test
rorl
subb
popa
mov
fstps
push
adc
mov
loop
xchg
and
jmp
mov
dec
cli
jae
stc
test
popf
stc
std
mov
call
mov
jne
push
dec
sar
and
pop
popf
add
dec
mov
mov
mov
cld
loope
sbb
iret
mov
and
mov
jl
jns
in
clc
mov
addb
mov
std
pop
mov
int3
sub
sbb
nopl
jns
icebp
jl
leave
adc
sbb
mov
cmpsb
push
cmp
lcall
pop
stos
mov
and
lock
popa
jnp
scas
in
lods
and
cltd
xlat
mov
xor
aam
dec
pop
jb
out
js
sti
je
xchg
mov
jbe
int3
popa
pop
add
insb
subl
mov
or
scas
sub
inc
mov
test
xchg
push
push
jg
pop
dec
fldl
pushf
adc
xlat
iret
movsl
adc
pop
mov
idivb
negl
mov
jno
cwtl
or
in
test
or
movsl
outsb
mov
jle
loop
or
ja
rcl
out
jns
out
out
and
sbb
fidivrl
ds
mov
popf
dec
shll
adcb
inc
gs
and
aas
iret
xchg
out
jp
testl
pop
push
movsl
aam
push
ljmp
adc
fadds
testl
or
add
fmuls
fimuls
mov
mov
inc
xorl
jno
adc
cmp
push
inc
add
xchg
dec
pushf
dec
add
sub
xor
stos
sub
out
jns
mov
mov
fwait
mov
lock
jge
and
aaa
call
imul
adc
mov
mov
sbb
mov
adcb
xchg
fisubrs
ret
imul
lods
bswap
pop
dec
das
mov
mov
lcall
aad
shll
je
lret
sub
jno
pop
fcomps
popf
aad
cmc
jecxz
xchg
dec
imul
push
mov
js
jge
test
gs
loope
sbb
fidivrs
shl
sbb
jno
pop
sub
mov
fcoms
add
add
push
add
lods
jmp
out
dec
cmp
mov
in
inc
test
push
stos
cs
jno
shlb
sarl
ds
pop
fdivs
add
inc
cmpsl
or
or
mov
mov
insl
ljmp
movsl
ds
cli
repz
dec
jecxz
sbb
adc
inc
mov
lahf
cmpsl
jle
xor
outsl
mov
and
andb
fwait
mov
data16
cmp
jle
xchg
cmp
and
leave
add
push
aam
sub
arpl
ljmp
sub
addr16
add
mov
xchg
orl
add
roll
or
hlt
in
orb
cld
clc
mov
int
mov
jo
hlt
xchg
clc
sbb
jp
adc
sbb
sub
pop
fcmovnbe
jns
mov
push
imul
sub
roll
xchg
subb
adc
roll
xor
jns
aas
js
add
pop
aam
clc
xchg
adc
lahf
orl
movsl
inc
and
sti
dec
outsb
push
testl
cld
decb
mov
sub
jne
mov
cmc
int
es
cmp
aam
xchg
adc
out
inc
dec
mov
cmp
adc
and
sub
ja
fcmovnu
xchg
fistpl
hlt
inc
aaa
xchg
inc
jl
iret
add
icebp
sahf
movsl
lea
jmp
loopne
loopne
push
mov
outsl
mov
and
mov
aas
push
push
mov
imul
stc
bound
stc
mov
mov
test
rcr
pop
movsl
push
jg
and
popf
lret
dec
push
arpl
sbb
sub
loop
sub
test
or
cs
sub
insl
push
in
insl
push
lret
fwait
test
and
orb
xchg
nopl
out
mov
ret
jl
xchg
out
icebp
fldcw
subl
out
mov
test
jmp
push
stc
outsl
sbb
pop
or
mov
fistpl
xchg
and
jmp
jecxz
lcall
stos
daa
inc
add
bound
pusha
fimull
mov
aas
popf
sub
je
jge
popf
out
lock
jg
fldl
mov
jmp
pop
xor
repz
mov
inc
xor
int3
nop
loop
call
shll
inc
popf
test
data16
pop
popf
cmp
scas
popa
xor
insb
cmp
dec
mov
sarl
sbb
lcall
adc
sub
jb
sub
lahf
jo
pusha
sub
test
loopne
cmp
and
push
sub
stos
xchg
loope
dec
loop
cli
subl
inc
arpl
xor
jmp
scas
shl
pop
dec
jnp
movsl
dec
xchg
cmp
das
mov
mov
in
sarb
add
mov
cltd
inc
xchg
mov
lea
in
dec
repz
ss
jmp
iret
or
sarb
add
mov
ss
cmp
inc
inc
stos
out
fsubl
aam
stc
ja
sbb
xlat
aad
adc
pop
std
inc
insl
mov
mov
or
xchg
mov
jo
aam
cvtdq2ps
std
inc
fucomi
sub
xor
sbb
sub
xchg
iret
adc
mov
sbb
dec
push
cmp
cltd
ja
xchg
sbb
sahf
jmp
xor
jb
sarb
xchg
inc
test
mov
xor
je
loopne
popa
mov
pusha
push
jmp
test
lcall
adc
out
out
mov
jmp
push
xor
push
and
fwait
jmp
mov
adc
out
cmp
xor
shlb
dec
mov
mov
bound
sbb
or
test
and
push
loope
cmp
adc
incl
jmp
sub
ss
lcall
sbb
movsl
test
lock
orb
filds
int
and
mov
pop
in
adc
shl
fcmovne
jo
mov
add
and
out
sahf
je
add
sub
pusha
fs
lret
popa
cmpsb
xor
push
add
adc
repz
js
repnz
enter
ficomps
mov
inc
scas
add
inc
jmp
sbb
stos
cs
daa
dec
sub
std
jno
aam
dec
push
test
pop
lret
sbb
insb
sbb
adc
movsl
cmpsb
jmp
lcall
das
fisubs
pop
sbb
fwait
push
mov
stos
push
nop
clc
mov
xor
test
das
ret
idivb
enter
xchg
xchg
cmc
test
push
divb
or
sbb
sbb
push
les
imul
call
and
lret
cmpsb
push
cmpsb
ret
outsb
test
mov
les
push
sbb
mov
das
insl
iret
es
cmp
add
and
mov
repnz
adc
mov
mov
decl
push
and
mov
cmpl
outsb
jmp
fwait
jecxz
lods
orb
sbb
inc
cmp
dec
and
mov
test
or
mov
lret
iret
sbb
nop
faddl
xchg
mov
push
sbb
loope
xor
add
std
dec
ret
sub
push
or
jmp
xchg
pop
xchg
in
in
mov
mov
or
imul
add
cld
adc
imul
stc
push
pop
lods
js
mov
inc
fbstp
sarl
iret
lods
stos
and
pxor
fstpl
int3
mov
icebp
pop
aad
mov
jns
cli
mov
xchg
sbb
loopne
pop
pusha
adc
pop
leave
mov
mov
fstpl
inc
cltd
out
rolb
scas
insl
cmpsb
ret
cmp
push
or
cmpsl
mov
xchg
or
shlb
jmp
pop
es
retw
rcrl
adcb
mov
sahf
mov
jne
dec
inc
test
dec
rolb
mov
push
adc
stos
adc
jne
or
xchg
loope
les
adc
maxps
insb
fwait
jne
adc
sbb
sub
stos
data16
mov
push
out
std
jne
aas
sbb
cmpsb
cmp
aam
dec
xor
subl
sub
mov
fimuls
mov
mov
xchg
sbbl
fs
iret
cld
mov
xor
fs
mov
maskmovq
testl
pushw
nop
pusha
mov
bound
lret
or
mov
dec
mov
loopne
rcr
add
jbe
fstpt
push
jnp
repnz
pop
jae
and
and
sub
inc
cmpsb
xor
xchg
or
xchg
lods
mov
out
hlt
sbb
dec
je
jnp
out
outsl
lods
xchg
loope
xor
mov
mov
add
filds
daa
fbstp
inc
jo
inc
cmp
add
rclb
shll
lret
test
imul
lods
mov
xchg
outsl
push
inc
shrb
or
cmp
or
movsl
je
pop
push
movsb
jg
lock
fcmovnu
unpcklps
imul
pshufw
mov
xor
xor
add
xchg
out
scas
dec
mov
jle
xchg
rol
add
das
sbb
push
fstp
and
sub
adc
ja
mov
imul
sbb
test
shrl
call
cwtl
jae
in
orb
xor
ret
enter
xor
fdivrp
ljmp
push
test
mov
xor
inc
mov
mov
cmp
mov
inc
or
mov
dec
cmp
lret
push
pop
imul
lcall
mov
leave
adc
dec
mov
mov
mov
mov
pushf
xchg
pushf
mov
fadds
push
xchg
pop
push
hlt
movsb
fwait
or
mov
xchg
stos
cmp
std
adc
sub
shr
ja
outsb
xor
scas
pusha
mov
mov
xor
sbb
in
xor
adc
repz
and
sti
lcall
jnp
cmp
js
xor
add
push
je
ss
popf
sub
xor
mov
sub
sub
in
scas
sub
aaa
cltd
orl
mov
dec
xchg
mov
pop
dec
aam
addr16
cmc
mov
in
push
mov
pushf
push
sub
mov
cwtl
jecxz
sbb
jl
or
push
bound
xchg
test
jnp
xchg
sbb
fwait
or
inc
cmp
lods
testl
daa
sbb
in
addl
decb
clc
lock
add
aas
jmp
adc
inc
push
stos
in
jne
sub
insl
or
dec
xor
fcomp
inc
test
adc
xchg
cmp
xchg
add
sub
sbb
aad
test
adc
jp
add
mov
dec
sub
inc
cmp
fsin
and
pop
push
push
inc
sahf
jnp
or
mov
jbe
mov
mov
pop
movsl
andl
fdivrp
ds
xchg
and
xchg
xor
cmp
push
push
cmp
jne
pop
dec
int
pop
nop
push
faddl
push
out
jmp
int3
cmpsl
cmp
cli
adc
pop
ficoml
cli
in
mov
outsb
cmpsb
add
out
adc
push
jne
aaa
xor
xchg
sti
loopne
xchg
fiadds
push
mov
sbb
jb
movsb
popf
aad
mov
jge
add
popa
movl
arpl
sti
out
cmp
jge
cmp
ja
push
push
lret
push
fwait
repz
jmp
pop
divb
add
out
or
mov
fs
pop
in
push
dec
jno
fnsave
xchg
jecxz
inc
mov
stos
mov
and
daa
gs
ljmp
xchg
mov
movsl
push
repnz
xchg
xchg
out
jmp
pop
jg
loop
mov
mov
scas
sub
pop
enter
or
sub
adc
pop
idiv
xchg
outsl
xorl
out
xchg
sbb
pop
ficomps
cmp
sbb
fsubl
xor
insb
call
cmp
push
xor
fimuls
lcall
loopne
or
xor
out
leave
cmp
pop
or
sbb
xlat
cs
lcall
shr
dec
sbb
sarb
inc
nop
sub
mov
sub
loop
xor
dec
roll
out
ljmp
mov
and
or
adc
xchg
mov
or
out
leave
xor
test
cmpl
repz
jmp
push
pop
add
in
xor
in
fistpl
loopne
sub
adc
cmpsl
cwtl
jl
sub
cwtl
add
inc
les
mov
dec
mov
xchg
sub
mov
sub
xor
pop
jo
int3
out
push
sbb
push
jl
lret
xchg
jl
sub
dec
daa
add
sbb
mov
shrb
ret
mov
and
shr
ljmp
lcall
jae
mov
xor
and
test
xor
sbb
cli
adc
inc
pop
jp
mov
cs
push
fsubl
and
lock
imul
push
sbb
xchg
fwait
insb
jge
jae
pop
mov
test
dec
or
ret
rol
pop
insb
inc
orb
sbb
mov
add
cltd
mov
adc
into
or
sbb
mov
orb
jl
inc
out
lcall
mov
leave
insl
mov
mov
testb
mov
adc
clc
cli
addl
divl
decl
inc
jmp
pop
dec
fcompp
int3
xorb
or
inc
into
int
lods
pop
xlat
xor
push
in
fidivl
sarb
cmp
xlat
mov
je
mov
pop
jo
push
cmc
test
stos
iret
in
dec
outsl
aam
testl
cmpsl
pop
ret
dec
cmp
mov
cmp
sbb
jl
dec
in
sbb
push
jae,pn
loopne
cmp
adc
xor
dec
add
sub
ds
add
inc
add
lcall
lock
jne
or
mov
in
std
mov
les
repnz
mov
rcr
and
dec
insb
push
dec
mov
fs
dec
ret
sbb
int
adc
ret
dec
push
fstpt
pop
sub
jmp
mov
les
inc
sahf
or
push
adc
out
frstor
pusha
scas
sub
xchg
sub
push
or
cmc
mov
inc
jp
cmpsl
sub
rolb
mov
rorb
in
out
insl
das
adc
mov
xchg
dec
mov
adc
mov
lock
lahf
push
sbb
inc
cld
and
sub
pop
insl
je
pop
sahf
dec
or
aaa
jb
scas
add
xchg
push
push
and
mov
rolb
pop
movsl
adc
cmc
jp
arpl
dec
mov
loop
mov
add
outsb
fwait
mov
inc
hlt
aaa
jnp
popa
mov
pop
sbbl
into
stos
jo
cmpsl
aaa
call
cmp
xor
xor
or
inc
push
cmp
add
mov
std
cmp
xor
jge
inc
inc
cmp
sub
in
fld
ret
imul
add
loopne
leave
pop
aaa
pushf
adc
fldl
sbb
and
loopne
idiv
push
mov
sbb
inc
pop
rclb
inc
rorl
and
push
into
stos
fadd
jno
sub
jno
lods
sbb
inc
or
inc
push
pop
sbb
pop
in
dec
xchg
xchg
fst
sarb
adc
cmpb
test
fdivrs
rcrb
nop
gs
test
int
or
mov
aaa
jle
push
mov
and
jae
sbb
rorb
ret
dec
add
pop
sbb
jp
sahf
dec
or
dec
jbe
outsb
sub
sbb
fimuls
push
cld
xor
enter
js
cwtl
std
imul
mov
mov
xchg
sbb
test
aaa
cwtl
jo
mov
cmp
js,pn
mov
sub
hlt
xor
add
addr16
loop
jg
fdivp
out
fmul
jo
imul
enter
nop
movsb
cmp
or
push
inc
cmp
sbb
pop
inc
lcall
leave
aad
and
ds
test
je
int3
xor
add
cmp
inc
adc
xchg
inc
mov
enter
fldl
mov
rolb
xchg
add
xchg
push
sub
clc
or
out
loopne
mov
mov
test
movzbl
movsb
repz
fdivrl
and
and
jo
ret
test
xor
fcmovbe
lds
jge
loopne
scas
pushf
fisttps
sahf
xor
aaa
mov
push
push
mov
push
pusha
testb
push
pop
addr16
push
adcl
and
jo
dec
clc
unpckhps
fdivrs
test
ror
pop
or
mov
lahf
sbb
lahf
out
std
jge
jns
push
xchg
test
xchg
ja
fistpl
ds
test
pop
or
addr16
xchg
lcall
mov
lea
dec
sbb
push
pop
cmpsl
push
xor
leave
push
outsl
mov
xor
insb
sbb
ss
imul
inc
pusha
dec
jae
jge
add
push
fstpl
sbb
enter
sub
roll
into
movsl
adc
roll
adc
int
mov
jnp
out
jp
imul
sub
sti
sahf
cltd
jg
sti
out
mov
std
and
jne
nop
das
shll
mov
cs
push
xchg
inc
sub
adc
xor
rclb
gs
xchg
lods
cmp
or
dec
mov
xor
int3
in
arpl
and
int
outsl
pop
inc
and
mov
inc
add
rcl
push
arpl
sbb
sub
pop
jb
leave
and
in
les
lret
loop
and
roll
sbb
push
iret
mov
je
cmp
push
jbe
pusha
stos
les
idivb
inc
xchg
push
jno
sbb
inc
out
add
jg
mov
cmc
jp
cmp
inc
push
seta
js
mov
inc
xor
out
cs
jp
lock
cmp
lods
mov
push
sahf
repz
add
pusha
sbb
xor
das
aad
push
xor
mov
dec
out
ss
add
adc
jae
loop
movsb
lods
fisubs
test
fdivrs
imul
aam
sti
cltd
pusha
clc
add
push
aad
les
or
enter
mov
daa
rcll
cmpsb
stc
cmp
nop
push
jne
cmp
jb
data16
mov
fisubl
addr16
lret
and
ljmp
scas
and
cmp
pop
inc
addr16
popa
hlt
out
loope
inc
sub
push
outsl
addb
mov
lods
cmp
sub
gs
push
fsts
mov
sub
popf
push
dec
adc
or
lcall
pop
pop
addw
inc
shl
jmp
sarl
jno
mov
jp
adc
inc
mov
mov
lret
dec
mov
out
lret
push
js
dec
fisubrl
push
sar
mov
pusha
mov
int3
dec
push
cmp
pop
inc
lods
push
add
add
cli
dec
popa
mov
cmp
push
push
dec
mov
lods
mov
fdivs
push
test
in
add
inc
mov
popf
cmp
test
es
clc
aaa
mov
test
call
xlat
and
aad
in
ljmp
add
dec
adc
push
cs
jecxz
les
outsl
push
in
lcall
test
dec
addb
into
sub
call
pop
jns
inc
mov
cmc
mov
scas
movsl
add
cmp
inc
dec
dec
jnp
dec
sub
dec
add
repnz
fmuls
adc
imul
push
lods
int3
jp
rorb
stc
xor
inc
int3
outsb
cmp
cwtl
xchg
loop
adc
aam
pop
flds
xor
lock
lcall
lcall
cmpsl
pop
lret
lods
lret
mov
rcrb
test
dec
adc
adcb
sbb
jecxz
pop
lahf
rorb
loopne
pop
cs
jno
lea
ds
pop
cmpsb
outsl
pop
iret
pop
clc
ljmp
sbb
ret
das
and
addr16
inc
mov
xchg
inc
xchg
pop
jge
adc
int3
cmp
aad
sbb
out
add
cltd
clc
xor
pop
xlat
adc
jo
and
sbb
aam
adc
pop
jns
cld
cmp
add
push
lods
dec
mov
cmpsb
repnz
jb
sub
pop
clc
enter
sub
mov
mov
in
adc
add
popf
cmpsl
lods
push
mov
cld
fmul
int3
push
sbb
pop
add
test
in
jmp
add
enter
cmp
push
outsl
pop
adc
xchg
stc
xchg
jecxz
mov
ds
gs
ret
dec
stc
rorb
scas
inc
xchg
mov
shll
daa
cmp
cmp
lods
test
nop
xchg
mov
and
jnp
pop
cmpsl
sarl
xor
imul
test
popf
dec
out
jle
cmp
insl
push
mov
mov
inc
inc
insb
js
inc
dec
lods
loop
outsb
jae
cld
pop
jno
pop
pop
andb
dec
data16
xor
mov
push
out
add
or
jne
mov
sbb
rcr
cmp
push
fdivs
inc
xchg
adc
das
sub
push
lea
or
push
mov
fsubl
and
sbb
in
adc
rcr
es
cltd
sbb
int3
push
out
xchg
dec
std
and
das
rorb
pop
sub
ja
out
xchg
add
push
shlb
fs
push
aam
adc
roll
push
jne
sub
data16
ffree
inc
fistl
jb
push
jecxz
adc
ds
or
mov
lret
push
movsl
push
nop
test
data16
or
bound
pop
and
jne
mov
shll
xchg
testb
ret
pop
mov
scas
stos
scas
loope
xlat
lock
idiv
imul
fnstcw
sub
imul
cmp
pop
outsl
jbe
es
xchg
push
sbb
adc
add
out
and
dec
sub
cmp
jle
fists
cmp
xor
stc
scas
in
cli
and
addr16
jnp
ja
fucomi
inc
into
lds
lahf
shrb
cs
add
add
xchg
pop
shlb
imul
movsb
jnp
mov
idivl
cmpsl
sbb
add
inc
shrb
xchg
roll
jno
cmp
gs
sbb
dec
in
test
push
inc
cmp
cmp
mov
scas
orl
out
rolb
or
jns
mull
xchg
mov
orl
xor
jle
pop
mov
mov
and
mov
adc
sbb
or
mov
push
sahf
mov
rclb
xchg
sub
in
xchg
jo
inc
push
scas
pop
adc
in
fmull
jb
xor
mov
iret
stc
fs
insl
jg
cmp
movsb
popf
push
test
sti
into
inc
lahf
pop
push
sub
xor
js
sbbl
sub
divb
mov
movsl
sub
rorl
out
jge
int3
dec
jno
repz
pop
cmpl
xlat
sbb
fistps
imul
xchg
ss
rcrl
add
in
adc
dec
add
cs
out
sbb
insl
rol
fisubrl
mov
test
fistps
inc
popf
lock
adc
jecxz
add
fdivrl
clc
ret
or
outsb
in
es
imul
bound
stc
stos
sub
icebp
sahf
xchg
lret
dec
cwtl
mov
in
out
les
ljmp
cmp
fsubr
push
in
mov
adc
gs
sbb
push
push
in
mov
fwait
dec
stos
inc
gs
mov
and
imul
cs
daa
leave
aad
pop
insb
xor
jno
push
roll
out
das
jbe
adc
mov
rorl
movq
push
popf
aad
dec
fstpl
pop
lods
pushf
mov
arpl
xchg
add
sti
fidivs
xchg
lds
sahf
adc
loop
cli
sbb
gs
fcoms
cld
push
push
or
icebp
dec
mov
adc
or
adc
push
bound
push
aaa
adc
xor
shlb
dec
addr16
push
js
lds
dec
ret
pop
pop
jb
stos
in
pop
mov
push
les
cwtl
jbe
outsl
sub
movsb
repz
jne
aaa
mov
shl
xor
mov
push
push
inc
sub
dec
push
adc
pushl
and
pop
sbb
fs
mov
inc
mov
dec
imul
mov
into
xchg
and
in
mov
mov
push
sbb
fwait
jg
push
add
push
sbb
or
dec
jmp
enter
call
push
jo
cli
inc
xchg
cmp
sbb
rcrb
add
imul
pop
sarl
mov
shlb
cs
scas
lahf
cmc
imul
jl
mov
cmpsl
cltd
popf
inc
fwait
push
aaa
dec
cmpsb
inc
stos
mov
fstl
xchg
das
shlb
pop
loop
xor
dec
jb
cli
mov
rorl
movsb
mov
or
sub
dec
sub
push
test
pop
int
mov
pop
pop
mov
mov
push
xor
aad
adc
jae
mov
push
lcall
aaa
cmpsl
ljmp
jnp
es
mov
push
or
add
and
xorl
xchg
jno
mov
add
and
popa
bound
mov
dec
leave
repnz
mov
leave
sub
and
mov
mov
outsb
je
sbb
add
fcomps
fbstp
jo
push
mov
inc
sbb
xchg
mov
fsts
sub
std
stos
ja
cld
adc
mov
or
shlb
pop
mov
or
cmp
pop
jns
nop
daa
lock
jg
mov
push
loope
jge
sub
test
cmp
jle
fs
jp
sub
daa
lret
fsincos
add
shl
adc
jo
jp
mov
xor
into
iret
push
push
and
push
pop
mov
imul
lds
lods
in
jmp
rcr
fucomi
loop
sbb
outsb
pop
jp
stos
and
inc
imul
sub
cmp
add
jbe
adc
in
sbb
or
in
repz
inc
out
pop
fld
imul
pop
dec
outsb
fnstcw
fistl
dec
cld
cld
xchg
mov
or
xchg
int3
rolb
mov
leave
loopne
push
fwait
fwait
bound
stc
or
stos
inc
pop
jae
out
push
ljmp
mov
out
xchg
sub
fisubrs
xchg
stos
and
pushf
or
cmc
cli
push
arpl
or
ret
xchg
jl
dec
dec
xchg
pop
pop
mov
jmp
jmp
jmp
les
mov
cmp
cmp
jns
sub
in
in
fsts
lods
push
cmp
cli
sub
fsts
lea
inc
xchg
mov
bound
xor
mov
aam
fcompl
add
jg
sbb
decb
pop
push
mov
je
aad
js
loope
sbb
pop
fisubrs
sti
mov
sub
insl
int
out
insb
jmp
xchg
shlb
or
inc
sbb
pushf
test
and
push
push
add
xchg
cmpsb
out
cmp
cwtl
insl
enter
mov
adc
fsts
ss
cmpl
pop
jge
push
mov
lret
aad
inc
ret
jecxz
nop
sbb
aaa
xchg
insb
add
test
das
push
jnp
add
js
fimull
fisttpll
lret
mov
cmp
push
mulb
inc
loope
ret
cmp
in
mov
dec
mov
pushf
inc
cmp
ret
push
sbb
adc
cmp
mov
sub
dec
inc
cmp
loopne
nop
sub
push
adc
push
repz
sub
and
or
jno
push
cmp
mov
xlat
enter
movsb
test
mov
xchg
add
outsb
incl
xchg
cmp
insb
adc
push
out
xchg
dec
scas
sbb
or
pop
or
mov
addr16
jge
push
movsb
dec
adcl
sub
sbb
pop
push
jno
mov
rorl
fnstsw
or
dec
movsl
mov
in
data16
inc
xchg
sub
inc
test
and
enter
arpl
mov
lods
insl
cmp
jo
fidivrs
and
shlb
popf
jmp
or
pop
adc
lcall
int
lds
jae
lock
push
xchg
cmp
fs
enter
lds
loop
xchg
inc
insl
out
mov
lret
pop
movsl
int
scas
daa
dec
nop
xor
dec
cmp
mov
sbb
mov
lds
mov
inc
cmpsb
xchg
sub
jb
sub
mov
xor
sbb
sbb
add
mov
roll
add
cs
ljmp
xchg
arpl
shlb
mov
jle
scas
sbb
icebp
push
push
out
in
sub
or
jmp
shrl
xor
pop
dec
or
jmp
add
push
movsb
jmp
add
and
pop
jno
or
inc
stos
xchg
push
rorl
fimuls
fsts
cmp
aas
rorb
lods
addb
negb
cmc
adc
pop
xchg
ja
sbb
and
out
mov
mov
cmp
jns
mov
jmp
mov
cmc
lock
xchg
aam
rorb
call
and
in
mov
les
mov
cli
adc
jbe
imul
xchg
arpl
in
dec
push
mov
out
cwtl
mov
shrl
mov
int
out
lods
mov
mov
mov
ror
dec
out
or
cltd
test
popa
iret
add
stc
into
and
fists
aaa
pushf
xchg
jl
insb
lret
inc
inc
cli
mov
and
in
dec
test
aam
mov
mov
adc
std
push
pop
jg
into
xor
mov
jbe
mov
iret
mov
pop
mov
stos
pop
mov
aas
jb
pop
dec
std
ret
sub
jg
addb
fsubp
sti
outsl
add
out
ja
or
sbb
or
aas
outsb
les
call
mov
adc
cmp
shll
lock
jbe
xor
mov
imul
xorl
adc
stc
mov
insb
xor
xchg
or
push
dec
js
aad
ds
add
adc
addb
sti
sbb
outsl
cmp
stc
or
inc
sbb
test
lcall
pop
insb
inc
stc
pop
cmpsb
mov
mov
mov
fisubs
mov
push
outsl
dec
test
mov
inc
pop
push
pop
adc
out
push
inc
mov
and
mov
stos
out
test
dec
test
pop
in
and
xchg
dec
push
mov
out
out
cmp
and
stc
cli
int3
dec
pop
jo
mov
loopne
dec
dec
pushl
mov
inc
or
inc
dec
fcmovnb
xchg
rolb
push
sbb
sbb
jno
sub
push
push
inc
mov
jbe
xchg
pop
and
mov
dec
hlt
divl
lods
pop
iret
jb,pn
gs
pop
sub
dec
unpcklps
scas
fdivr
sub
test
sbb
cmp
test
xchg
xorb
xor
fstpl
or
mov
xor
in
sub
inc
dec
or
dec
aas
cmp
out
fnstcw
xchg
fists
cmp
push
jmp
test
and
and
push
xchg
push
inc
sub
cmc
sbb
decb
fidivrs
loop
mov
cmp
cmp
push
aaa
cmpsl
or
mov
fcmovu
lret
ja
dec
arpl
cwtl
adc
insl
adc
xor
test
mov
ja
inc
xchg
or
sub
push
adc
jmp
cltd
sbb
pop
enter
add
xor
stos
lahf
xlat
push
ja
negl
cmp
nop
mov
dec
push
dec
sub
stos
shrb
pop
ror
sub
inc
mov
das
push
aaa
mov
pop
xchg
pop
xor
push
jbe
hlt
stc
aam
hlt
loop
cltd
sub
xchg
in
fs
and
sbb
enter
cmp
push
hlt
ds
xchg
and
mov
jo
rcll
notl
add
cs
cmpsl
xor
aas
pop
popa
in
pop
cmp
out
and
mov
decb
mov
shrb
je
mov
sub
lahf
andb
adc
lods
jae
jmp
lret
cwtl
and
add
fdivrs
mov
jbe
pop
stos
jnp
test
mov
xchg
lds
mov
jne
mov
mov
push
jnp
mov
mov
lret
cltd
mov
cmp
iret
repz
into
mov
sbb
cmpsl
add
adc
sub
add
adc
pop
sbb
dec
out
and
fsub
cltd
out
xor
inc
pop
and
insb
aas
rcl
sahf
xchg
inc
sub
fbld
in
inc
cs
das
pop
test
push
stos
clc
movsl
mov
push
jbe
into
ret
loop
sbb
and
sbb
jl
xorb
and
or
add
add
mov
cmp
mov
xorl
int3
jmp
add
jl
lea
mov
sarl
xchg
and
pop
cmpsl
out
inc
sbb
xor
mov
mov
or
add
xchg
push
xor
xor
jge
cwtl
nop
pop
ss
mov
dec
fsubl
ja
jns
cld
xor
fdivl
leave
stos
pop
fwait
push
jo
jg
stc
std
fisubs
gs
shr
sub
imul
je
adc
pop
stc
or
lret
sbbl
in
mov
push
pushf
push
inc
scas
jne
lret
xor
cmpb
add
mov
adc
mov
ja
iret
jp
push
push
scas
xor
pop
das
repz
sub
xor
mov
test
inc
cmp
adc
js
push
add
repz
inc
pop
pop
dec
sub
push
out
inc
mov
inc
fcoms
xor
sbb
out
xchg
scas
cld
jnp
jns
es
stos
std
leave
movsb
cld
pop
push
fisubrl
outsl
jns
cwtl
mov
fnstsw
pop
mov
cmp
scas
push
adc
and
mov
mov
push
ret
lea
add
lret
mov
pusha
enter
nop
addr16
in
sbb
mov
frstor
sub
jle
hlt
push
add
mov
push
mov
lahf
dec
mov
xchg
or
test
subl
inc
adc
test
lods
add
cmp
jns
jne
pop
push
mov
imull
mov
mov
jbe
fxch
iret
mov
mov
sarl
push
mov
pop
int
mov
sbb
pop
lea
mov
call
pop
cmp
and
aam
sbbb
inc
mov
mov
lahf
and
mov
cmp
repnz
jp
dec
ljmp
mov
jo
cmp
out
cmpsl
rcll
out
mov
mov
insb
lea
adc
fsubrl
ret
ds
push
fidivrl
mov
and
sbb
mov
cmp
loop
xchg
test
push
inc
add
fsubp
push
mov
clc
dec
mov
mov
mov
and
daa
enter
outsl
je
mov
out
bnd
dec
adc
popa
inc
ss
sub
enter
aaa
btc
loopne
sub
mov
sbb
pusha
adc
adc
xchg
xchg
shrl
out
pop
pop
xchg
jae
lret
mov
mov
jle
in
orb
sub
jg
notl
in
push
cwtl
fs
daa
fildl
or
xor
cli
insl
scas
fimuls
mov
mov
or
fs
fcompl
add
xor
pop
and
cmp
enter
mov
pop
lds
stc
les
icebp
mov
bound
jl
push
cs
xchg
pushf
mov
mov
andl
adc
dec
sbb
mov
push
imul
rcr
cmp
xchg
cmpsl
adc
mov
out
mov
sub
test
notb
ds
adc
sub
adc
sahf
icebp
sbbl
shll
int3
cwtl
popf
jl
shlb
xchg
stc
aad
sahf
scas
pop
mov
in
aad
mov
inc
cmp
add
insb
or
fcoms
push
xchg
xchg
scas
push
mov
cli
mov
or
and
inc
xchg
add
ds
push
cmp
sub
sbb
pop
bnd
repnz
pop
and
add
xchg
repnz
cld
xchg
pop
loop
lods
test
jl
or
testl
mov
lock
ss
loopne
fstsw
sbbb
and
xor
inc
test
mov
xchg
aad
add
aad
sub
jl
fidivrs
out
rorb
cmpsl
sahf
mov
sub
jl
shl
cmpb
or
jp
push
shrl
xchg
stos
cld
push
repz
loop
or
sub
xlat
icebp
int3
das
push
push
add
ja
dec
js
loop
dec
xor
push
dec
fcomps
mov
sbb
addb
fcomp
mov
popf
sub
daa
xor
pop
adc
push
add
cwtl
mov
in
jns
call
inc
mov
stc
pop
xor
insb
insb
xchg
mov
vpand
xlat
in
lods
pop
cmpl
arpl
in
test
mov
add
cli
dec
imul
and
insl
lahf
push
push
adc
cld
jnp
jle
dec
mov
inc
sbb
js
idivb
popf
movsl
mov
sub
jl
stc
enter
js
cwtl
jmp
xchg
call
adc
mov
cli
push
mov
aam
adcb
jo
push
roll
xchg
movsb
xchg
xor
and
daa
mov
sub
les
mov
pop
sub
add
into
hlt
popa
push
rolb
addr16
into
stos
or
ja
jl
les
dec
mov
out
imul
pop
jecxz
inc
mov
jo
push
ret
fsubr
loope
push
fstpl
add
add
outsl
adc
ret
push
outsl
cli
pushf
pop
xchg
repz
inc
cmp
push
pop
push
cmpsl
andb
mov
add
add
insl
or
sarb
sub
sub
shll
cmp
call
push
push
ret
lds
leave
repnz
dec
add
ljmp
cmp
and
cltd
lcall
imul
jecxz
cltd
stos
sub
pop
fisttpll
roll
lods
dec
push
add
dec
negb
xlat
sub
inc
out
adc
aam
inc
jmp
sbb
out
in
decl
imul
mov
out
push
fdivrs
popf
je
xor
add
clc
or
pop
jecxz
xor
pop
xchg
mov
push
bound
adc
aas
lahf
mov
mov
inc
add
xor
daa
rorl
push
push
mov
pop
mov
je
cli
loope
push
dec
test
cld
adc
sub
xchg
les
mov
in
or
adc
in
and
fdivp
cmpsl
push
cmp
xchg
mov
add
pop
sbb
gs
outsl
mov
add
mov
adcl
stos
lahf
sbb
test
mov
fnstsw
lds
out
sbb
out
aas
jge
fildll
repnz
ja
jno
imul
cltd
out
xor
xchg
into
mov
in
jecxz
outsb
aaa
dec
test
pop
daa
add
sub
push
mov
and
and
mov
getsec
jecxz
ja
enter
or
outsl
push
icebp
adc
clc
and
inc
stc
push
es
jle
pushl
xor
xor
jle
pop
mov
cli
or
lmsw
hlt
sub
mov
cwtl
push
pushf
or
push
dec
andl
xacquire
outsb
pop
out
push
sti
jnp
jno
mov
sub
pop
in
xor
lcall
add
je
sbb
xchg
push
inc
jno
pop
push
adc
test
scas
sub
adc
bound
cmp
ret
mov
mov
notl
push
movsw
jp
and
cmp
sub
sub
scas
fwait
stc
fldcw
psubusw
lods
jo
ret
loopne
sbb
cmp
aam
sysenter
mov
push
pop
inc
or
rorb
xchg
pop
adc
push
in
iret
into
sub
dec
imul
outsb
push
movsb
movl
mov
loop
xor
lods
ficoml
faddl
and
sbb
sahf
pop
repz
insl
xchg
aad
mov
pushf
arpl
out
addr16
dec
and
push
pop
and
xor
inc
xorb
pop
lcall
mov
lock
inc
pusha
movsb
mov
push
bound
out
add
lret
fs
mov
pop
out
jp
popf
xor
adcb
xchg
add
push
lods
pop
push
daa
int
jecxz
and
and
ficompl
xor
xchg
sbb
lds
cmp
insl
mov
orl
jo
lock
mov
cltd
mov
sti
stos
xchg
mov
stos
and
int3
mov
push
pop
imulb
adc
pop
and
push
inc
in
std
mov
mov
test
aaa
mov
push
pusha
rorl
out
push
mov
mov
in
test
mov
xor
jb
in
fstpt
in
mov
fisubl
cmp
es
mov
push
daa
ljmp
jge
stc
aad
scas
push
mov
jb
or
add
stos
fildll
push
sub
movsl
dec
adc
push
stos
nop
cld
stc
loopne
adc
sbb
inc
lret
loop
cmp
pushf
cs
mov
mov
push
fldt
movsl
ficomps
pop
pop
orl
shrb
aam
add
cvtps2pd
xchg
arpl
out
pop
lods
mov
out
adc
int3
nop
aad
sahf
or
out
ds
adc
mov
pop
cmp
and
insl
jb
sbb
mov
in
push
push
pop
cmp
leave
push
cmc
mov
jno
lahf
mov
jl
adc
mov
je
pop
or
pop
imul
mov
aad
out
cs
mov
push
inc
out
or
adc
jecxz
mov
cltd
adc
mov
mov
loop
jo
mov
cmp
inc
ss
xchg
xor
cmc
mov
xor
push
inc
xchg
ds
push
inc
not
mov
lea
test
rcrl
xchg
test
jns
jb
xchg
cmpsb
jl
out
out
push
push
cmpsb
dec
push
in
xor
inc
out
push
lret
add
mov
jo
or
xchg
and
stc
lcall
sub
mov
sbb
dec
push
mov
lret
or
lea
adcl
jecxz
push
pusha
lds
fldl
mov
mov
jg
mov
sti
jb
xor
lock
inc
or
test
dec
inc
mov
cmp
subb
jbe
push
jl
fiaddl
dec
push
sub
in
cltd
cmc
xor
ret
loopne
xor
push
rcrb
test
lds
arpl
push
popa
add
int3
lret
sbb
xchg
out
in
pop
add
xlat
pusha
push
xor
mov
cmp
fwait
sti
lods
xor
mov
cli
mov
mov
sub
xchg
push
xchg
mov
push
xor
or
shrl
xchg
push
xor
notl
mov
push
pop
es
sub
call
dec
mov
repnz
push
pop
pop
popa
cmpsl
inc
lods
loopne
add
mov
sbb
fs
mov
aaa
pop
xchg
lock
jns
xchg
inc
mov
jl
or
push
ficompl
or
and
inc
jno
xlat
in
jb
push
test
xchg
cmpsb
call
pop
aas
or
inc
aaa
jp
enter
test
lcall
ds
leave
push
inc
or
sbb
xchg
out
sti
out
movsl
jno
shrb
add
pop
dec
or
cltd
mov
sbb
jg
repz
push
mov
push
xorl
fdivp
sbb
pusha
ss
jbe
subl
xor
call
mov
das
cwtl
pop
mov
mov
add
xchg
push
pop
sub
inc
inc
fsubp
lret
mov
sbb
cs
mov
sbb
jne
inc
and
addl
lods
and
dec
in
xchg
hlt
mov
mov
add
xchg
jno
adc
pop
std
outsl
xchg
cltd
dec
cmp
push
cmpsl
mov
pop
mov
push
sbb
ljmp
jg
ret
cmp
jmp
arpl
iret
in
ret
in
push
inc
jno
addl
fidivrl
scas
jmp
and
dec
stos
in
mov
fdivrl
mov
and
ja
in
out
and
jnp
aad
lods
inc
ficompl
and
inc
fdivrl
adc
jo
push
cmp
push
push
mov
push
mov
jns
rorb
pop
dec
addb
cltd
sbb
dec
cmp
iret
sbb
jle
mov
jb
out
adc
jb
lea
insl
sub
gs
mov
dec
jecxz
mov
sub
add
mov
call
loopne
rep
ljmp
mov
orb
and
pop
push
fmulp
push
mov
xor
call
mov
or
sbb
movsl
addr16
or
push
cltd
ret
lcall
push
push
pop
out
es
mov
add
repnz
sarl
dec
inc
sub
and
cwtl
fimull
fdivrs
arpl
test
pop
frstor
push
push
or
mov
cs
adc
pop
nop
mov
add
ficompl
pusha
div
pop
adc
adc
pop
sub
hlt
pop
mov
dec
cwtl
call
or
lock
inc
dec
mov
scas
mov
out
sub
jnp
rcr
sbb
sub
mov
mov
leave
push
test
adc
cmpb
adc
cmpb
test
imul
rclb
cwtl
cmpsb
lcall
test
xchg
insl
mov
sbb
loopne
push
ja
movaps
add
adc
mov
xor
out
xchg
jecxz
in
fsubl
or
in
ret
js
ja
in
test
and
cmp
inc
lods
lret
fwait
scas
xor
xor
add
pop
xchg
repz
cmp
mov
test
cld
imul
jl
mov
jb
push
ds
mov
insb
and
ret
push
dec
push
sbbl
sub
sbb
shll
dec
mov
out
test
aad
cmpl
aaa
subl
inc
xchg
in
and
pop
cmpsb
imul
addr16
pushf
mov
push
cmc
ss
mov
iret
add
je
sub
mov
pop
push
into
pop
jne,pt
xlat
jne
setnp
xlat
lock
stc
imul
mov
fldenv
stos
pop
fstl
dec
adc
test
xor
out
out
and
mov
mov
das
sbb
ljmp
cmp
mov
hlt
pop
adc
push
addb
insl
les
cld
pop
test
movsb
in
inc
push
jl
push
pop
jle
mov
jmp
es
or
test
jg
jecxz
or
add
outsl
aaa
ficoml
lahf
inc
or
bound
jmp
and
rclb
pmulhuw
add
rcr
lods
popf
lea
lea
popa
add
push
rcr
test
outsb
adc
mov
pop
das
and
lret
psllw
arpl
icebp
inc
je
sbb
sub
push
pop
mov
movsl
jbe
pusha
push
cs
sub
cmp
pop
mov
ds
mov
push
mov
inc
push
mov
push
outsl
pop
js
imul
add
mov
das
mulb
mov
rcrb
cmpsl
jo
nop
inc
movsb
xorl
xchg
mov
xor
sbb
and
scas
adc
inc
adc
cmpsl
sub
xchg
push
out
loopne
pop
jecxz
call
inc
fdivl
std
cmpsl
cmp
out
jle
and
rol
movsb
or
add
lahf
add
lret
cltd
in
decb
inc
popa
mov
cmp
dec
js
iret
pop
xchg
jg
loop
orb
les
push
jmp
mov
outsb
frstor
add
jnp
mov
push
push
into
adc
or
mov
mov
adc
repnz
push
mov
jae
clc
cmp
xchg
xor
cmpsl
cs
mov
cli
or
lret
and
lret
in
add
jg
std
pop
sti
pop
sub
push
fnstenv
subl
mov
dec
dec
fs
data16
ja
in
sbb
imul
and
sarl
add
inc
jno
sti
in
scas
adc
int3
and
mov
stc
xchg
push
sub
mov
cmpsb
fmull
mov
daa
movsl
inc
dec
cld
bound
and
sbb
cmp
sti
or
and
mov
jnp
fnsave
insb
ret
adcl
lahf
xor
repnz
dec
cmp
fs
pop
adc
jp
push
xor
cmp
or
mov
outsl
xchg
sub
push
and
pop
mov
aaa
xchg
lcall
jecxz
aam
lret
cmp
xchg
xchg
sub
dec
mov
jmp
mov
xchg
push
adc
jge
rorb
or
jmp
lea
pop
cmpsb
xchg
mov
pop
test
lods
push
inc
shll
aad
lea
dec
or
jle
cltd
ret
mov
outsb
mov
mov
sub
dec
lret
mov
fiadds
pop
cli
leave
add
pop
push
test
and
and
sti
jg
add
pop
add
cmpsb
test
aas
xchg
gs
fdivl
pop
out
stos
aad
dec
fwait
dec
insb
arpl
jns
jecxz
sahf
stos
out
aaa
push
clc
adc
mov
inc
dec
jne
and
or
jae
addl
icebp
roll
in
fidivrl
sbb
sbb
push
inc
xchg
xchg
lods
int3
andb
in
filds
xchg
pop
mov
sub
mov
dec
das
mov
sbb
jecxz
xchg
push
xchg
pop
add
pop
dec
jle
rol
pop
out
sub
jb
imul
xor
add
dec
adc
xchg
lods
cmp
inc
mov
adc
lea
and
flds
in
das
sub
insl
shr
mov
mov
cmp
jnp
popf
aas
xorb
mov
nop
and
lods
pop
xor
xor
sbb
push
push
inc
add
cld
int
mov
dec
xchg
loopne
inc
xchg
mov
mov
and
aas
outsl
jp
movsb
pop
sub
sbb
mov
jg
push
scas
out
insl
cmpsb
jp
and
add
icebp
repnz
push
fists
mov
inc
mov
mov
adc
adc
sbb
xor
fwait
shll
inc
pshufw
or
fwait
in
mov
cmp
outsl
add
cwtl
or
add
push
jae
cmc
insb
sbb
loopne
movl
stos
repnz
push
andb
insb
testb
push
lock
sahf
push
xchg
and
fcoms
lea
out
inc
sbb
jmp
jbe
xchg
push
popa
sbb
dec
jmp
test
push
xchg
inc
xchg
sti
repnz
popl
push
mov
mov
test
ret
in
dec
in
jns
or
pop
xchg
mov
xchg
mov
out
and
push
ljmp
xor
mov
adc
lods
jne
out
or
jno
pop
mov
scas
sub
cmp
divl
aas
mov
rorb
push
in
cmp
stos
ja
push
adc
fcmovbe
jl
pop
ljmp
movsl
cmpsb
xor
mov
nop
xchg
clc
in
jmp
rorl
mov
mov
mov
outsb
xchg
pushw
icebp
mov
test
add
push
hlt
ficoml
fsts
test
out
sub
lods
leave
pop
ret
sub
out
aaa
push
out
xchg
mov
mov
pop
jecxz
shrb
loop
into
xor
arpl
xchg
push
mov
xor
das
pop
loopne
into
inc
mov
cmp
adcb
and
push
or
mov
in
js
xor
insb
xor
data16
ds
fbld
and
or
aaa
popf
lret
jle
dec
pop
in
shrl
dec
lahf
lret
lret
adc
sub
stos
mov
fmull
dec
icebp
push
mov
or
lcall
aas
add
push
jb
push
leave
fadds
or
clc
rcl
rcrl
fsts
hlt
push
test
xor
stos
pusha
and
movsb
lret
inc
add
pop
dec
and
push
imul
xor
or
int
mov
add
inc
lret
dec
xlat
push
mov
pop
sub
push
or
cmp
pop
jnp
mov
test
fmul
push
jmp
jne
xlat
sbb
scas
das
mov
sub
and
sub
fwait
cs
mov
mov
mov
cmp
dec
mov
sarb
daa
fs
sbb
scas
xchg
or
es
mov
inc
dec
rorl
push
mov
std
les
xor
fidivrl
cmpsb
sub
add
pop
ss
ret
incb
jp
push
add
shrl
int3
lock
imul
daa
inc
fisttpll
or
pop
jb
lahf
in
or
sbb
add
jp
fwait
jns
stc
jns
mov
push
gs
push
in
mov
jge
lret
jnp
rolb
xor
dec
into
sbb
mov
inc
sub
pop
add
in
shrb
orl
ret
add
mov
lods
add
imulb
push
adc
dec
out
jg
cmpsl
push
je
dec
fimull
cltd
xchg
add
mov
jbe
ret
lret
ljmp
ret
ljmp
inc
dec
testl
pop
or
scas
ss
fwait
sbb
pop
lods
mov
stos
mov
lahf
xor
pop
mov
lahf
jnp,pt
loop
gs
jge
push
mov
xor
movsl
adcb
jmp
push
xchg
lret
pop
stos
mov
fildll
int3
or
repnz
std
and
movsb
icebp
in
jge
add
insl
pop
push
cmp
rol
insb
ficoml
dec
add
outsb
xor
addl
bound
xchg
aad
cmp
dec
pop
xor
sbbl
addr16
fs
or
fs
dec
cli
mov
mov
and
adc
loope
cs
int3
sub
mov
cwtl
adc
iret
adc
lods
lods
sub
hlt
dec
in
xlat
outsb
cmp
adc
fwait
add
in
push
push
adc
and
sbb
cmp
in
in
xlat
inc
gs
jge,pn
mov
js
and
daa
fwait
jle
lret
fsubrl
fadds
xlat
lret
sar
mov
xchg
pop
or
xor
xor
jbe
stos
adc
loope
in
push
mov
mov
mov
iret
lods
mov
shufps
ss
mov
dec
push
mov
lret
aad
in
cwtl
andl
out
or
inc
and
fcomi
push
cmp
jae
push
adc
lds
inc
push
jmp
and
fdivs
mov
mov
xchg
std
mov
notb
cmpsl
out
push
cmpsl
and
push
in
mov
jl
push
das
xchg
add
ret
or
rcr
insl
clc
push
add
repz
add
xchg
or
in
aas
inc
mov
fldenv
fcmovbe
movsb
push
jae
mov
push
xlat
jg
adc
pop
fs
jmp
mov
int
in
lcall
mov
out
jl
out
xchg
ficoms
push
popf
in
daa
xchg
pop
insl
ja
sbb
rcrl
add
push
cmp
push
sbb
dec
ret
pop
add
popa
and
cltd
pop
insl
jne
adc
inc
add
sub
nop
adc
dec
fnstcw
es
cmp
cmp
pop
notl
imul
out
test
sub
aam
pop
cmp
cwtl
shl
fstpl
sbb
cld
cmc
dec
rorb
sub
or
scas
mov
mov
dec
in
repnz
mov
adc
fimull
dec
outsb
adc
iret
or
int
lahf
xchg
sub
inc
loopne
push
cmp
add
orb
jge
cmp
adc
dec
std
jl
mov
mov
jo
int
in
xor
cmpsb
leave
jge
mov
jno
rolb
movsl
out
push
and
sbb
sarl
lods
mov
loopne
into
movsl
ss
lret
pop
fnstsw
imul
faddl
xchg
pop
in
insl
and
xchg
mov
scas
fistl
push
and
mov
mov
cwtl
into
mov
xorb
inc
out
ljmp
push
mov
gs
sbb
outsl
lret
in
add
sarb
pop
shrl
cmpsb
loope
sbb
inc
inc
push
lds
push
xchg
dec
jno
lds
jo
xor
push
push
shll
add
inc
icebp
sbb
mov
fsubr
pop
mov
call
in
lret
mov
mov
adc
push
mov
jge
enter
gs
clc
jp
mov
out
jmp
lret
sub
and
cwtl
sbb
sub
int
mov
cmovp
mov
mov
inc
push
iret
bswap
sub
jb
xor
mov
xor
jg
fucompp
mov
xor
sti
inc
scas
rorl
and
rorb
inc
lret
idivl
sub
dec
into
adc
dec
pop
push
sti
add
xchg
ret
out
repz
push
inc
sbb
jp
in
and
ret
mov
repz
scas
xchg
add
in
lret
sbb
fimuls
pop
pop
mov
cs
int3
ficoml
xchg
xchg
arpl
imull
jecxz
xor
add
popf
xor
sbb
sub
and
addb
lcall
add
mov
mov
push
jg
outsb
in
sti
scas
enter
mov
fistpl
hlt
push
mov
loop
hlt
cmpsl
lock
sub
fisttpll
jge
push
sahf
pushf
je
into
loop
mov
add
out
aad
sub
stos
xchg
dec
pop
mov
into
movaps
aam
mov
mov
add
insb
inc
repz
js
jle
adc
push
adc
mov
xor
jne
and
adc
cmc
mov
inc
enter
and
lcall
test
in
mov
push
adc
scas
insb
int
popf
jnp
pop
mov
mov
xchg
testb
xchg
pushf
xchg
cltd
mov
hlt
movsl
mov
mov
push
es
jge
xor
or
lods
lea
pop
and
loop
sarl
mov
jo
lea
pop
imul
and
loope
dec
out
lds
fmuls
roll
inc
pop
popf
sub
mov
movsl
ljmp
sub
shl
lcall
cmp
repz
pop
xchg
dec
fdivr
leave
les
es
or
cwtl
stos
outsb
pop
sti
mov
xchg
fwait
sbb
loope
mov
inc
mov
ret
xchg
pop
pop
xor
shl
cmp
adc
and
mov
leave
cmc
sbb
iret
rcll
mov
push
jb
enter
sub
sub
or
pop
in
adc
mov
sarb
scas
mov
imul
js
shrl
arpl
lock
adc
shlb
adc
xchg
into
outsb
enter
cmp
xor
into
cld
ss
insb
add
ret
fnstcw
testl
sub
mov
jmp
push
shrb
enter
rcll
xor
inc
fs
and
mov
movsl
lock
push
mov
pushl
sbb
movsl
rcll
or
jp
lods
cmpsl
xor
jae
push
std
outsb
jge
xchg
jp
sub
mov
cmpsb
decb
mov
xchg
dec
and
mov
sub
in
rcrl
mov
mov
imul
dec
mov
enter
xchg
insl
mov
shlb
cmp
out
push
testb
into
addb
sti
iret
push
mov
mov
inc
movsl
bound
xchg
lds
mov
dec
adc
outsl
cld
sbb
test
bound
fcmovnu
repz
fsts
jb
test
add
mov
cmp
push
cmpl
add
mov
sub
cmp
xor
cmp
jb
jmp
jge,pt
shlb
dec
call
lods
pop
jp
rorb
inc
push
mov
jp
addr16
sbb
in
jbe
push
push
shrb
sahf
ret
adc
or
jp
push
arpl
push
add
lods
cltd
and
mov
test
xor
adc
fnstcw
cmp
ja
jp
ror
cmpsl
xor
xchg
mov
les
xchg
jmp
sub
out
mov
and
or
or
mov
mov
mov
aaa
mov
mov
sbb
pop
mov
sbb
into
sub
je
sbb
popf
or
adc
mov
add
mov
cmpsb
push
mov
mov
test
in
stc
push
or
jecxz
ja
pop
mov
aas
bound
mov
pop
push
out
std
inc
call
rcll
mov
mov
dec
jbe
pop
or
push
lock
xchg
out
cmp
daa
enter
adc
mov
in
outsb
and
cmp
or
dec
loope
xor
sbb
sbb
jle
adc
mov
dec
shrl
insl
pop
loop
pop
pop
pop
jae
pop
cmpl
xor
arpl
dec
dec
idiv
dec
push
sbbb
ljmp
xor
out
in
push
lret
dec
push
push
mov
push
test
lcall
cltd
in
pop
sub
addl
mov
mov
fldcw
pop
push
cli
mov
imul
nop
mov
les
push
pop
icebp
push
or
pop
mov
adc
insb
insl
mov
sbb
jg
int
cmp
shlb
notb
xchg
cmpsl
fsubrp
pop
xchg
pop
testl
xor
test
sbb
add
xchg
jo
sahf
aas
cmc
sbb
mov
mov
mov
and
and
mov
adc
and
adc
test
cmp
push
jbe
cs
addl
cmpsb
fmulp
rcrl
rorb
inc
mov
jne
push
push
data16
int3
jne
lahf
jb
mov
jo
add
add
jae
pop
cmpsb
int3
cmpsb
lret
xchg
gs
imul
inc
adc
cmc
sub
push
arpl
mov
mov
jmp
pop
int
dec
mov
mov
cmp
jp
inc
leave
add
ss
mov
ficoms
sahf
add
addr16
xchg
xor
xchg
push
xor
mov
ficomps
xchg
idivb
add
adcl
mov
shrb
imul
mov
xor
sub
aaa
ljmp
aam
mov
insl
fcoms
mov
push
pop
fwait
sub
insb
ljmp
cltd
test
cld
sbb
js
ja
or
and
pushf
loope
inc
loopne
xor
xchg
ret
imul
mov
adc
sub
notl
repz
and
sbb
inc
outsb
mov
adc
inc
push
mov
push
js
mov
std
sahf
jmp
scas
or
test
jle
adc
shlb
pop
sbb
and
inc
sbb
mov
mov
fdivrl
add
xchg
dec
pop
sarb
and
and
scas
push
xor
cmp
sbb
ljmp
test
cli
aaa
fldl
cltd
inc
jne
add
pop
adc
jmp
outsb
insb
pop
sub
mov
lret
add
outsb
ror
xor
jne
push
jbe
jbe
add
cmc
std
cmpb
cmp
mov
mov
das
rcrl
aaa
aas
sbb
insb
leave
cmp
repnz
lret
push
not
fists
jae
pop
add
pop
out
xor
aam
stos
xchg
ds
mov
push
and
or
jno
mov
cmp
stos
xor
call
xchg
adc
mov
sub
or
mov
bound
movsb
shll
loopne
push
and
dec
xchg
or
sti
inc
movsb
rcrb
push
ret
push
lret
enter
out
cmc
inc
je
ja
inc
insb
stc
mov
mov
test
pop
imul
inc
mov
ljmp
mov
and
adc
xchg
jp
dec
cmp
or
mov
pop
lea
xchg
movsl
mov
aam
adc
aad
jo
push
adc
das
mov
xchg
sbb
dec
sub
orl
dec
orb
into
int
xchg
cmp
pop
mov
popf
xchg
lods
adc
cmp
push
aas
imulb
leave
fs
insb
rcrl
hlt
push
fistl
push
rorb
sbb
mov
shll
das
jbe
pop
loope
xor
decl
inc
fisttps
sahf
mov
lret
dec
sbb
js
adc
imul
mov
ljmp
push
test
adc
mov
jbe
stc
jnp
or
ret
mov
adc
iret
add
jg
jge
add
and
imul
das
push
ficoml
xchg
lcall
cli
ficoml
shll
lock
xor
mov
lcall
scas
lods
dec
popf
mov
xchg
lret
xchg
movsl
or
cs
fbld
xchg
aam
add
aad
pop
dec
adc
xchg
scas
or
pop
js
mov
or
adc
and
adc
mov
and
xchg
or
xchg
cmp
xchg
pop
cmp
sbb
cmp
pop
mull
popf
test
mov
mov
or
pop
inc
jnp
sub
rcl
incb
lea
pop
xlat
lcall
into
fsub
je
jns
push
js
shlb
inc
or
jl
jge
xor
pop
imul
jbe
int3
icebp
push
add
ss
xchg
std
loop
aam
ds
add
popa
fadds
outsl
pop
lods
push
add
mov
ret
cmp
aas
inc
ljmp
xchg
cmp
int
and
dec
adc
stos
pushf
jmp
or
and
xor
add
cmpsb
xchg
and
lahf
push
dec
mov
hlt
mov
ss
notl
adc
gs
cmp
hlt
inc
ljmp
mov
add
pop
push
dec
push
leave
addr16
and
lock
cli
leave
mov
cmpsl
add
fucompp
ret
pusha
mov
movsb
ja
call
iret
idivb
mov
pusha
cs
mov
mov
fildll
gs
cmp
jae
repnz
lahf
and
xchg
and
xor
inc
adc
shrl
stos
ret
mov
mov
mov
jno
jge
sahf
rcll
jecxz
sub
shll
addr16
and
pop
inc
test
sbb
mov
or
fdivrl
sub
add
aam
hlt
cmc
mov
mov
mov
shlb
push
inc
mov
mov
sahf
add
or
in
jae
xorb
or
lock
std
mov
or
dec
or
add
push
dec
xchg
jae
repnz
fcom
fidivs
lret
pop
xchg
jns
adc
mov
fbld
mov
cltd
nop
push
sbb
fnstsw
mov
push
jne
lcall
rcrl
sti
loopne
pop
ret
cmpsb
testb
jle
pop
bound
sbb
je
nop
rcl
or
mov
pop
or
shlb
jle
add
cmp
fimull
xor
xor
and
repz
ss
and
mov
stc
shll
psubsw
sub
push
out
sbb
xchg
fs
cs
mov
in
negl
icebp
fdivr
repnz
sub
mov
stos
xchg
jae
inc
leave
out
ja
sbb
mov
fisttpl
sbb
cmc
cltd
ret
xadd
jb
insl
pop
gs
pop
jno
mov
jae
ljmp
lea
repnz
and
jne
stos
jae
fadds
fnstsw
inc
incb
adc
out
push
pop
call
xchg
jbe
sbb
iret
movd
and
pusha
pusha
shrb
xchg
mov
sub
stc
push
jne
sbbl
sbb
dec
pop
push
loop
popa
test
and
pop
jbe
dec
xchg
cmp
xchg
dec
and
mov
sti
push
js
movsb
push
pop
and
lea
adc
xor
jnp
ljmp
mov
in
adc
mov
mov
push
dec
or
push
aas
cmpsb
lret
inc
daa
insb
cmpb
add
in
lds
dec
pop
jle
cmp
push
lahf
cmp
xchg
shrl
mov
jle
int
fprem
stc
mov
jns
mov
cltd
data16
stos
ja
inc
aas
rclb
int3
sbb
and
jmp
add
sub
aas
pop
adc
jmp
ss
cmp
and
cmc
std
pop
das
add
adc
lret
popa
mov
push
cmp
xchg
jecxz
or
sbb
sub
mov
stc
mov
push
and
arpl
movsl
ret
mov
cmc
ja
add
jbe
in
imul
or
jl
sbbl
stos
adc
nop
sar
xor
dec
pushf
push
xorb
mov
inc
lahf
xchg
mov
ja
cld
xlat
cli
mov
mov
xor
sti
cltd
dec
mov
cmc
loop
rcrl
sti
xlat
add
pop
dec
das
inc
jle
cmp
int
adc
pop
subl
in
fildl
jbe
xchg
sbb
or
jecxz
cltd
iret
push
fildll
and
and
xor
or
insl
mov
and
dec
jbe
imulb
pop
jae
lds
jle
push
loopne
into
les
lahf
mov
or
inc
jns
xchg
sbb
mov
mov
sbb
lcall
and
adc
sub
icebp
sub
jnp
in
sub
mov
lock
mov
into
cli
nop
loopne
pop
sbb
sti
pop
cmc
sub
ret
cmpsb
out
hlt
in
mov
pop
iret
mov
scas
or
dec
in
jle
lds
pusha
push
push
xchg
mov
or
add
les
dec
sbb
push
dec
or
jmp
xor
xor
jp
dec
pop
pushf
adc
cmpsl
pop
or
stc
adc
and
push
add
lret
nop
xor
imul
pop
les
pop
jne
jecxz
mov
sub
cmp
jns
push
sub
out
inc
scas
loopne
mov
dec
mov
or
into
sub
repz
xchg
adc
adc
fadd
inc
push
jo
and
in
sbb
add
pop
ds
lret
or
loop
xchg
popa
lret
fidivl
pop
cwtl
popf
and
stc
push
inc
sarl
cmpsl
sub
in
es
out
push
sub
push
test
pop
xchg
xor
int3
xor
cmp
aas
mov
cmpsl
adc
push
adc
aad
jbe
sub
mov
js
mov
aam
adc
jns
stc
loopne
sub
jge
int
ja
lret
jg
xor
cli
sub
dec
push
stc
adc
aam
xchg
mov
mov
loop
cld
or
in
push
xchg
idivl
or
xchg
xor
push
bound
jbe
repnz
pop
mov
dec
cltd
loop
or
sub
hlt
mov
mov
movsb
sub
scas
sbb
push
je
sub
mov
stc
aam
cmp
rcrl
mov
pop
cmp
push
or
xchg
xchg
in
mov
pop
and
sub
jnp
adc
xor
push
pop
sbb
jae
jnp
pop
pushf
pusha
test
adc
cmp
lahf
xchg
sbb
and
cmp
fisttpll
or
mov
jbe
mov
push
mov
cli
rolb
xchg
pop
jle
jno
adc
xchg
cmc
cltd
js
shrl
mov
fucomip
imul
mov
mov
cs
clc
mov
adc
jge
fstps
das
push
arpl
test
xor
comiss
inc
adc
lods
rol
push
jbe
or
fidivrs
xor
iret
inc
pop
scas
scas
inc
or
adc
ss
outsl
js
cmpb
out
or
outsl
outsb
popf
adc
cmpsb
dec
sbb
pop
push
cmpsb
out
in
inc
xlat
les
cmpsl
add
pop
popa
sbb
inc
lods
push
lds
sbb
popa
pushf
test
repz
int3
hlt
push
jp
sahf
scas
movsb
test
test
and
push
jl
hlt
pushf
dec
mov
subb
add
insb
xchg
and
or
or
and
cwtl
lods
jecxz
mov
push
out
sbb
lea
cmpsl
repnz
js
in
inc
mov
in
ret
cmp
push
lret
sbb
addr16
out
int
insl
xchg
nop
xchg
in
jle
repz
gs
push
adc
aad
mov
sbb
mov
xchg
inc
das
mov
jl
mov
add
jmp
pop
out
sahf
jns
cmp
scas
daa
cmpsb
mov
aam
test
mov
ret
or
xchg
mov
or
out
and
orb
mov
ss
mov
out
xor
push
sbb
rorb
dec
insl
cmp
adc
dec
faddl
jae
sahf
repz
out
push
push
xchg
test
mov
rcrl
lea
sub
fisubl
jnp
push
jns
xor
dec
mov
jbe
adc
xchg
fisubrs
shll
push
lahf
cli
mov
in
sub
pusha
jmp
and
jp
call
pop
jae
subl
inc
sub
mov
pop
stos
or
mov
movsb
add
xor
xchg
mov
xor
adc
popf
rcll
mulb
mov
pop
lock
testb
jle
test
push
mov
shrl
fistpl
push
fwait
loope
cmpsl
mov
or
ret
mov
test
sub
mov
mov
mov
mov
test
dec
mov
inc
push
icebp
sub
pop
outsb
jo
test
dec
clc
mov
or
addr16
pop
and
and
pusha
mov
movsl
push
mov
fdivrp
pop
test
loop
xor
insb
adc
jp
popa
jl
xchg
push
pop
cld
or
arpl
lds
and
daa
shl
popa
dec
pop
adc
scas
frstor
lret
cli
mov
mov
mov
jle
repz
mov
add
mov
movsl
inc
js
pop
push
out
xor
mov
xchg
pop
arpl
popa
dec
inc
dec
test
adc
jecxz
jno
fidivrl
icebp
push
sarl
sbb
jge
sbb
je
sti
shlb
shll
mov
cmp
sub
adc
push
mov
pop
nopl
repz
xchg
mov
and
push
mov
pop
add
pop
lcall
xchg
test
hlt
or
sbb
stc
xor
mov
pop
and
ss
cmp
ljmp
cwtl
in
cmpsl
fmuls
mov
fnstcw
int3
push
pop
pop
dec
stos
xlat
sahf
lret
mov
xor
sub
dec
or
pop
out
sbb
push
cld
pop
test
out
jp
in
sub
add
daa
lods
mov
in
es
dec
sbb
adcb
pop
mov
and
popa
mov
push
inc
xchg
lock
sbb
mov
dec
shr
loop
mov
mov
nop
push
aas
jl
adc
outsl
mov
dec
pop
jl
inc
loope
push
test
adc
inc
in
sub
movb
test
pop
or
test
pop
adc
das
inc
jp
lods
insb
sbb
rorl
stos
ficoms
dec
std
sarb
mov
cwtl
iret
xchg
jbe
lods
movsl
pop
fstl
xchg
push
sbb
cmp
rcll
repnz
cmp
add
outsl
push
pusha
test
lds
nop
sahf
shrl
dec
test
push
imul
and
adc
pop
or
adc
mov
sbb
lahf
cmp
sbb
mov
repz
jp
push
cld
mov
insb
jno
lods
aaa
jg
sub
loopne
aad
icebp
jae
in
das
out
push
xor
stos
mov
xlat
dec
xchg
pop
push
pop
ficoml
rolb
int
xchg
adc
ljmp
daa
mov
test
out
cmpl
jnp
jmp
fistpll
inc
popf
cmpsb
inc
xor
pop
mov
sbb
fmul
das
push
movsb
in
imul
lods
xchg
or
les
bndldx
out
push
fildl
mov
les
cwtl
rcrb
sub
adcl
inc
notl
pushf
insl
push
pop
into
sbb
gs
or
push
fsubl
inc
jle
int3
imul
jp
ficoms
leave
mov
xor
push
mov
xlat
in
sbb
mov
and
mov
adc
mov
inc
std
jmp
in
lea
leave
aas
push
xchg
xchg
rcr
outsl
lods
int
and
nop
out
sbb
aad
cmpsl
sub
or
or
pop
mov
mov
adc
sub
call
ja
sub
cmp
mov
jae
insl
jne
arpl
cmpsb
popa
fsubp
sbb
iret
pop
and
cmp
or
add
aam
inc
hlt
pop
shll
lahf
mov
adc
enter
popa
fdivl
pop
add
pop
fmuls
and
lock
rcll
inc
or
mov
jg
rcl
push
or
lret
push
xchg
inc
scas
mov
js
scas
aad
lgs
mov
ja
cmp
pusha
and
mov
stc
or
adc
enter
sbb
mov
iret
das
and
jl
pop
mov
lcall
cs
mov
daa
adc
int
or
jbe
pop
inc
movsl
and
mov
lock
push
mov
nop
mov
mov
cmp
xchg
mov
idiv
js
pop
ret
and
jecxz
xchg
jns,pn
add
inc
cmp
arpl
imul
out
rcll
ds
test
imul
in
clc
aad
out
jp
daa
ljmp
loopne
xor
push
mov
aaa
out
pop
mov
int3
pusha
mov
outsl
dec
or
stos
sysret
out
pop
push
xor
stos
repz
add
push
pop
les
sub
mov
lods
pop
pop
jno
mov
imul
out
nop
std
push
and
arpl
xchg
ljmp
xor
shrl
stc
sub
pop
loopne
std
jno
or
inc
faddl
nop
lahf
cmp
iret
ret
push
xor
dec
mov
js
pop
fiadds
dec
push
inc
iret
loopne
sbb
jne
pop
icebp
cmp
add
lret
cltd
std
adc
movsb
sub
in
mov
xchg
fldl
sub
lock
repz
inc
dec
xorl
stos
or
icebp
and
cmp
loope
jb
pop
sub
push
mov
sbb
pop
push
stos
dec
cmp
dec
lods
out
in
in
jge
or
aad
mov
lds
mov
cltd
jb
scas
lock
je
push
push
mov
ds
mov
push
shll
rcrl
and
nop
movsl
mov
sub
dec
fdivl
xchg
rclb
repnz
mov
in
movsl
jns
cmpsl
mov
lods
stc
inc
sbb
sub
aas
andl
popf
xlat
mov
nop
rclb
insl
push
xchg
sbb
sahf
mov
in
push
mov
hlt
jle
and
mov
sbb
add
xchg
lods
orl
adc
testb
pop
inc
inc
test
add
sub
data16
inc
insl
test
leave
repnz
add
daa
mov
xchg
lds
mov
aas
cld
leave
repz
lds
sub
dec
std
ljmp
mov
hlt
push
jl
mov
rclb
cli
mov
sbb
rcr
xor
loopne
dec
je
in
adc
rolb
jle
rolb
fdivrs
adc
and
ret
lret
loop
fcomi
scas
dec
sti
je
pop
idiv
push
cmp
cmpsb
xor
adc
jecxz
xorl
xor
pop
sahf
inc
pop
andl
xor
push
xchg
xchg
xor
pmullw
jno
lahf
sub
loope
jl
cmp
mov
inc
xchg
adc
fs
lret
xchg
fwait
mov
adcb
jge
das
mov
push
outsl
jns
mov
jo
add
fwait
daa
adc
or
insl
pop
dec
push
push
cmp
push
loop
dec
fs
pop
scas
outsb
xchg
fildl
pop
int
pushf
aam
stos
mov
jmp
cld
lret
ja
sbb
jo
cmp
stos
in
jo
dec
test
push
fs
and
dec
adc
cld
xchg
dec
sub
push
lret
mov
and
mov
cmp
das
mov
mov
mov
mov
add
mov
nop
cmp
adc
popf
push
test
mov
cmp
and
xor
sub
scas
scas
std
and
adc
xor
adc
mov
leave
or
fwait
or
push
faddl
adc
add
pusha
sub
outsb
mov
pop
ds
jle
inc
rolb
pushf
mov
das
jbe
packsswb
orb
bound
dec
cld
das
loop
in
jb
outsl
xchg
neg
jmp
sbb
pop
fisttpll
jmp
decl
repz
sti
jle
je
ljmp
sub
pop
inc
daa
inc
mov
jp
mov
in
mov
loop
shrb
and
adc
push
fnstsw
pop
outsb
cli
xchg
test
insb
dec
push
pushl
je
cmp
je
pop
in
add
jp
pop
lods
push
xor
addl
rcrl
dec
inc
xchg
icebp
pop
mov
int3
in
int3
sahf
mov
jp
push
cmpsl
push
faddl
jl
mov
loop
push
fcomps
repz
hlt
ss
mov
lret
xor
pop
mov
test
mov
clc
mov
cli
jp
cwtl
sub
incl
inc
bound
push
fisttpl
push
cmpsb
and
insl
es
xor
or
pop
in
inc
jb
and
cmp
and
outsl
enter
lret
push
cmp
shlb
lods
mov
out
and
daa
add
lods
inc
ror
mov
movsl
loop
xor
fidivl
mov
imul
pop
sbb
xchg
xlat
shll
add
dec
sbb
imul
pop
bsr
jge
clc
xor
lcall
and
push
mov
jge
jp
sbb
lds
fmulp
xchg
jge
xchg
ret
lds
jl
lock
mov
jl
add
loopne
mov
dec
stc
lahf
mov
out
pop
cmp
and
mov
repnz
pop
and
aam
fidivrl
ds
jmp
js
push
xor
xor
push
jo
xchg
loopne
pusha
scas
call
stos
cs
filds
and
mov
ds
cli
lret
hlt
lods
out
pop
sbb
cmpsl
pop
sub
aas
cli
imul
add
cmp
sbb
imul
scas
rcrb
loop
sbb
loope
jmp
pusha
sbb
pop
cmp
pushf
lahf
fstps
out
icebp
mov
insl
sub
push
push
or
xor
cmp
jmp
and
pop
ss
insl
cmpsb
and
jno
pop
push
mov
jae
and
pop
stc
sbb
dec
push
adc
push
fwait
mov
lds
mov
add
jne
mov
sub
adc
adc
jo
into
stc
mov
or
sub
aam
bnd
test
loop
dec
mov
lret
xchg
pop
pop
fucom
setbe
cmp
dec
decl
call
clc
ffreep
cmp
in
add
mov
jle
cld
out
adc
fnstcw
test
jae
ret
dec
movsb
nop
xor
mov
adc
cmp
add
and
xchg
sub
and
outsl
imul
std
add
aaa
jnp
and
and
pushf
pop
gs
je
jnp
mov
pop
add
and
or
dec
inc
movsb
cmp
cwtl
test
xchg
jecxz
push
or
pop
mov
pop
xlat
sbb
dec
push
adc
rcr
in
sbb
cwtl
sub
test
mov
and
or
mov
in
sbb
das
in
cmp
xorb
cmp
dec
pushf
int
sbb
mov
mov
jo
movsl
mov
inc
and
out
std
push
mov
aas
ss
pop
cmpsl
sbb
pop
out
cmc
or
add
pop
pusha
sub
inc
jp
mov
and
fs
lock
sbb
pop
mov
ss
xor
and
fnstsw
xor
inc
xchg
filds
shlb
ret
bound
xor
idivb
adc
add
popf
xor
cwtl
mov
lds
daa
cltd
push
aad
loope
inc
xchg
push
cmp
orb
das
andb
rcll
in
xchg
xor
jo
add
push
bnd
mov
and
bound
pop
movsb
addb
outsl
lock
or
xlat
jae
int3
xchg
xor
xchg
sub
pushf
in
div
shlb
add
je
movnti
lahf
xor
daa
es
sbb
sarl
pop
lcall
cli
aas
lock
mov
sti
fdivr
stc
mov
and
fistps
xchg
fisubrl
mov
in
inc
mov
jns
push
pop
mov
je
add
pop
jnp
lahf
jo
mov
and
mov
mov
xor
sbb
pop
sbb
sbb
push
dec
dec
jnp
ds
sbbb
jl
or
jge,pt
inc
inc
sbb
ret
fdivrs
jne
xor
cld
loop
xchg
test
inc
nop
add
add
xchg
les
in
scas
inc
sbb
mov
pop
insb
rorl
loopne
and
mov
sahf
pop
jb
rclb
mov
fnstsw
cmp
and
test
mov
inc
push
arpl
dec
leave
sbbl
test
and
cmp
push
jmp
and
and
cli
jl
cmpsl
sbb
xchg
dec
popa
xchg
xor
pusha
inc
or
jae
dec
jbe
mov
sub
sbb
aad
xchg
jecxz
mov
mul
push
outsl
cmp
repz
stos
add
xchg
adc
ss
dec
fldt
in
mov
mov
dec
ret
or
pop
cmp
idivb
gs
enter
adc
xor
adc
enter
mov
add
jo
das
fsubr
jbe
dec
int
test
pop
gs
mov
xlat
cmc
adc
dec
xchg
jb
or
pop
les
std
jns
mov
sahf
fwait
pop
add
inc
and
or
lea
cmpsl
inc
jmp
jle
sub
jns
clc
popf
adc
fsubl
dec
xchg
ret
daa
fiaddl
cmp
or
push
ljmp
mov
mov
and
sbb
mov
sti
pop
cmp
jne
lock
ret
test
adc
mov
ja
sar
push
aaa
call
inc
test
sbb
cmp
xchg
test
stos
and
pop
and
lret
push
and
pop
negl
and
sar
stos
and
push
mov
std
lods
test
pop
mov
cmpsb
sbb
push
pop
sbb
adc
jo
adc
mov
jmp
sub
mov
hlt
lret
das
aaa
cwtl
xchg
andb
loop
add
add
leave
shrb
imul
adc
xrelease
bound
sbbb
push
lods
nop
movsl
test
imul
cmp
les
divl
or
dec
and
das
je
push
xchg
jmp
fimull
imul
pusha
mov
test
and
sbb
les
fwait
leave
xchg
jl
stos
int3
or
push
push
stos
aas
fidivrs
sub
into
in
fcomip
sub
ja
jnp
mov
push
cmp
mov
out
mov
cld
sub
mov
pop
xor
loop
outsb
ss
adc
loop
jo
pop
xor
mov
popa
fdivrs
sbb
xor
sub
testb
rep
adc
icebp
aas
mov
push
push
cmpb
inc
ss
or
movsl
in
aaa
in
es
clc
shrd
fsts
gs
loopne
xor
popf
leave
movsl
add
dec
xor
data16
adc
inc
mov
adc
push
mov
rcrb
cs
movsb
pop
pop
std
cmp
rol
or
dec
in
cld
sub
les
dec
sub
das
pop
xlat
lret
xchg
or
arpl
and
outsl
shll
add
mov
decl
push
mov
cmpl
sub
call
lret
call
mov
push
adc
mov
call
std
aad
cmp
mull
sub
cmp
sahf
pop
xchg
push
aaa
pop
andl
ret
pop
lcall
lods
pop
ret
stc
cmp
adc
adc
push
ret
pop
nop
mov
in
sbb
aaa
or
push
adc
arpl
int3
fdivrl
xchg
shll
adc
int3
xor
cmp
lcall
jno
lods
int3
mov
jbe
setns
jb
xor
and
shl
ljmp
mov
or
sbb
sub
fcomps
imul
cmp
pusha
xchg
cmpl
xchg
int3
adc
imul
rolb
jne
mov
cltd
mov
pop
adc
xor
push
xor
call
add
jb
mov
insb
jnp
pop
xchg
xlat
mov
jno
out
aas
pop
and
mov
lcall
cmc
add
iret
fsts
push
test
mov
movsl
xor
hlt
inc
jbe
popf
out
cld
pop
rcrb
pop
insl
jg
cltd
push
inc
je
jbe
mov
jne
mov
fldcw
mov
lods
cwtl
mov
inc
push
mov
sbb
jne
adc
ret
and
les
and
push
in
ret
fwait
gs
adc
out
jb
pop
mov
adc
mov
push
mov
test
mov
pop
push
xor
or
push
add
inc
sti
jno
gs
fcomps
lcall
int
sub
mov
jmp
jne
mov
icebp
or
jmp
imul
cmp
outsl
mov
push
ja
pop
rcr
inc
sahf
mov
mov
rol
sbb
aad
xor
and
xchg
pop
aad
divb
mov
cld
mov
mov
int
in
mov
adc
outsl
sub
fst
mov
pop
cmc
les
pop
and
or
jo
out
jg
jle
push
dec
pop
fstl
repz
push
push
push
rcrl
dec
test
and
das
sbb
fcmovnbe
in
fisubrl
mov
fstpl
outsb
mov
xchg
sbb
sbb
mov
shlb
psubsb
movsb
out
ret
cs
sbb
push
dec
sti
push
out
sbb
add
mov
loopne
inc
cltd
fsubrl
loopne
push
cmp
mov
push
mov
cmpb
addr16
nop
adc
test
fidivl
stos
jae
and
mov
adc
push
popa
fldenv
test
addr16
aas
xor
ja
cmp
pop
mov
fdivp
add
pop
jb
dec
scas
or
repz
and
and
and
xchg
sub
push
or
in
inc
mov
push
dec
lahf
sbb
loope
rolb
pop
into
add
aas
loopne
fldenv
push
jmp
aad
xchg
mov
xor
dec
or
ret
xchg
lcall
lcall
popf
int
sti
ja
ds
pop
mov
cltd
sbb
jg
adc
dec
sub
scas
sbb
pop
dec
sub
arpl
push
lcall
xchg
add
mov
icebp
scas
loop
inc
fdivrp
dec
aaa
rolb
cmp
sbb
incb
dec
repz
push
jne
aaa
dec
setge
insl
data16
cltd
std
mov
ja
das
mov
pop
or
in
nop
cmpsb
jmp
sbb
leave
in
sub
pop
lds
test
xor
test
sahf
and
push
mov
out
std
or
das
or
push
int3
dec
inc
dec
adc
push
and
ljmp
jns
inc
outsb
imul
jmp
fiaddl
test
push
in
xchg
adcl
sbb
push
dec
fcmove
mov
add
dec
js
mov
repz
inc
movsb
xchg
movsl
scas
jae
jb
add
aam
cmc
xor
int3
scas
add
or
add
scas
bound
insl
mov
insb
dec
dec
mov
sbb
nop
movsl
popf
lods
adc
js
push
cmp
imul
mov
stos
mov
movsl
xor
and
mov
popf
mov
fsubrl
jge
xor
ljmp
pop
repnz
or
loop
mov
pop
shrl
cmp
xor
ljmp
mov
pop
in
sbb
xchg
push
stos
xor
stos
subl
icebp
inc
mov
jo
jge
push
mov
mov
inc
adc
ret
dec
cltd
sbb
int
psubsb
push
sub
arpl
mov
and
ds
jo
lds
adc
mov
pop
xchg
leave
push
or
cmpsb
lret
sti
js
imul
aas
sti
popa
bound
cmp
mov
and
mov
ljmp
repnz
lds
mov
lret
mov
mov
inc
pusha
adc
jnp
push
imul
cld
or
loope
dec
adc
adc
jne
sbb
xchg
fcom
sub
jp
stc
leave
jae
mov
shl
fistps
pop
lock
sub
xchg
iret
jnp
lret
jb
ss
pop
cmp
sbb
mov
stos
jb
les
dec
push
pushf
scas
aas
nop
cmp
mov
jnp
cwtl
stc
aad
inc
scas
das
imul
or
cltd
test
lea
ja
fsubs
faddp
and
frstor
stc
cmp
lcall
jg
cmc
aaa
cld
and
pop
cmp
insb
fnstsw
int3
in
mov
scas
int
sbb
and
sub
stos
loopne
aam
jecxz
jmp
insb
andb
insl
es
pop
shrl
rol
cld
push
pop
push
fucom
push
ljmp
and
pop
adc
xor
mov
sub
jne
dec
pop
addr16
push
arpl
add
xor
frstor
jl
imul
sub
or
test
mov
inc
cmpsl
lods
sub
fidivl
jno
mov
insl
mov
mov
or
loop
inc
insb
xor
adc
inc
clc
pushf
dec
xlat
dec
pop
jge
aas
jnp
pop
into
sbb
sub
xchg
insl
push
into
out
imul
mov
std
imul
pop
inc
or
cmc
stos
jmp
ljmp
out
jne
lahf
fnstsw
fadd
jle
pcmpgtb
dec
enter
xchg
push
add
lret
and
mov
iret
cmp
mov
fidivrl
add
sbb
push
ljmp
xchg
pop
mov
mov
rolb
aam
aam
pop
or
xchg
data16
in
les
or
inc
testb
xor
popa
or
add
push
inc
inc
lods
mov
inc
push
add
mov
lcall
call
adc
cltd
sbb
inc
outsb
dec
cmpsb
mov
mov
inc
adc
pop
xor
aad
cmpsl
sbb
xor
scas
ret
jns
add
adc
pushf
stos
jg
sti
test
xchg
addb
mov
loopne
aaa
fists
adc
pusha
aas
jbe
jle
fsubs
cli
js
adc
loop
push
loop
and
or
sti
jp
push
fildl
and
orb
in
sbbb
push
cmpsl
notl
mov
mov
jbe
jmp
or
add
add
iret
fs
dec
les
stos
divb
cltd
cwtl
add
jle
or
pop
push
push
mov
pop
fwait
out
inc
jo
cmp
cmp
idivb
cmp
ja
inc
addr16
pop
dec
push
lods
or
or
mov
push
cmp
dec
and
or
sub
and
or
fistpl
ds
mov
jbe
jecxz
mov
and
fldcw
fimull
test
pushf
insl
mov
pop
in
inc
in
mov
outsl
xor
hlt
ljmp
pop
pop
adc
pushf
cmp
gs
incb
ljmp
pushf
jle
cwtl
push
sbb
cmp
ljmp
mov
enter
shl
dec
adc
or
pop
inc
add
sarl
inc
xor
cmp
stos
xchg
testb
cltd
adc
push
mov
mov
dec
andl
sahf
push
xor
out
movsl
pop
jb
aad
xor
cmp
xor
fisubl
stos
aaa
lcall
mov
jo
repz
push
pop
mov
lock
inc
loop
xorb
push
cli
adc
jg
mov
inc
test
xchg
sahf
adc
cmpsb
sub
enter
sbb
stc
xchg
mov
lods
xchg
sub
xor
add
sbb
aaa
ljmp
daa
xchg
xor
leave
pop
add
cmp
adc
popf
js
push
out
dec
leave
add
fwait
in
xchg
movsb
dec
aad
fisubl
mov
cmp
out
scas
fsub
in
pop
jae
cmp
notb
repz
jae
test
mov
shll
ds
outsl
stos
lcall
jle
cmpsb
test
cmp
je
lods
mov
outsl
aam
cmc
daa
add
or
in
and
insb
push
notl
in
mov
outsl
cmp
xchg
jb
sbb
rol
add
in
push
int3
addr16
ret
xlat
decl
lahf
bound
inc
adc
sbb
fistpl
in
pop
and
test
out
pop
inc
std
aam
lock
jae
pop
and
int3
lock
call
inc
bsr
nop
pop
or
pop
lret
sbb
sbb
iret
popa
mov
gs
loopne
dec
push
dec
inc
mov
push
push
sbb
adc
out
fisubrl
xchg
inc
pop
and
pop
test
sbb
ljmp
sbb
jmp
fstps
add
mov
out
outsb
pushf
ret
xchg
sub
xor
leave
jne
lret
jns
xchg
cmp
in
daa
pusha
andb
adc
aam
jp
mov
adc
iret
jmp
test
xchg
or
enter
mov
jno
cltd
mov
jns
cmp
adc
dec
fcmovnu
fwait
xor
cmpsl
stos
mov
ja
inc
les
jp
xor
adc
repnz
cmp
adc
lock
adc
mov
fcmovnu
xchg
insb
push
push
mov
outsl
cmp
repnz
je
imul
popa
scas
cmp
inc
int3
sbb
ret
jecxz
sub
cld
test
cmpsl
mov
hlt
xchg
cmpsl
inc
ret
inc
clc
fdivs
xchg
mov
jmp
add
aas
leave
cmp
sub
and
addl
sub
sbb
add
scas
daa
test
mov
mov
mov
push
sbbl
jns
loope
fimull
push
and
pop
cmp
push
push
bound
pop
adc
data16
mov
orl
and
dec
mov
inc
cmp
push
cltd
pop
das
rol
sbb
cltd
xchg
pop
and
cmp
xchg
js
xchg
xchg
jl
popf
mov
xor
int3
aaa
jns
pop
shll
sub
out
call
int3
lock
aaa
sub
or
add
jl
fistl
push
out
nop
xchg
lods
scas
cmp
ds
and
or
pop
jmp
jecxz
push
mov
cmp
xchg
add
leave
push
adc
or
gs
arpl
lock
jmp
xor
insb
dec
out
jne
out
push
push
fldcw
mov
lock
imul
in
out
xchg
cmp
repnz
pushf
cmp
jns
lret
ret
lcall
fucomi
movl
scas
dec
inc
xchg
lds
jl
or
jecxz
movsb
sub
push
ljmp
and
movsl
lods
in
cld
insb
xchg
int3
lcall
in
scas
in
push
lock
push
ss
je
push
lcall
int3
sti
cmp
and
cmp
cli
push
pop
mov
gs
fwait
mov
sub
rclb
jg
jp
or
in
out
sub
sub
pop
test
in
dec
das
nop
sbbb
cmc
mov
je
mov
jmp
aaa
mov
je
call
push
loop
push
sbb
enter
aam
add
mov
aaa
loopne
test
adc
mov
cwtl
out
int
mov
mov
int
insb
cmc
add
adcb
or
insl
jmp
inc
out
inc
xor
hlt
fsubrs
jl
aaa
xor
and
adc
push
imul
xchg
addl
loop
neg
in
push
inc
into
mov
cmpsl
test
sub
inc
fadds
mov
out
sub
test
push
mov
cmp
sarb
loope
add
leave
mov
xchg
add
jbe
clc
jge
pushf
mov
dec
fmuls
inc
scas
xor
and
add
push
lods
sbb
jmp
cli
inc
jns
mov
push
or
sbb
cmpsb
pop
cmp
mov
lret
sub
add
test
sbb
scas
ficoml
shrl
sub
mov
pop
pop
mov
icebp
aaa
mov
pop
loope
insb
add
mov
xor
sti
cmp
cmp
mov
xor
jnp
jno
jo
addl
inc
and
outsb
xchg
push
int
imul
dec
mov
clc
int3
or
mov
call
in
mov
or
push
insb
xchg
je
or
xchg
mov
or
pop
and
jnp
dec
mov
pop
pushf
mov
xchg
popf
pop
mov
sbb
fsin
sbbb
push
xchg
dec
imul
inc
jge
dec
mov
and
lret
push
sahf
in
mov
jne
dec
subl
inc
into
fldt
pop
lea
ret
xchg
add
out
and
in
sbb
dec
cmp
dec
adc
mov
push
xor
add
cmc
fisubrs
push
mov
in
mov
dec
mov
push
jbe
popf
fst
and
adc
add
cmpsl
lcall
pop
popf
inc
fisubs
insb
dec
loop
dec
push
pop
mov
out
xor
push
into
mov
data16
cmp
lcall
push
test
addr16
xchg
aas
jmp
mov
dec
daa
repz
pop
jmp
cmp
out
or
jne
pop
xor
bound
imul
out
mov
push
xor
idivb
mov
in
mov
pop
pushf
inc
push
inc
adc
sbb
sar
xorb
jb
loope
arpl
movsb
pop
xchg
fwait
push
movsb
sbb
push
mov
add
xchg
xchg
call
daa
das
cli
and
push
jns
mov
aaa
adc
cs
or
jp
dec
lcall
jl
movsl
sbb
cvtps2pd
or
push
jb
pop
push
cmpsl
out
xchg
insl
pop
dec
cmp
jb
lahf
jne
push
dec
xchg
int3
in
hlt
data16
cmpsb
ret
std
sub
add
push
dec
lret
mov
mov
lret
stc
mov
mov
popf
sbb
pop
scas
das
pop
out
frstor
out
cli
add
ficompl
fs
scas
xchg
pop
adc
imul
test
pop
fcoms
popf
xchg
cmpsl
adc
sbb
gs
push
jo
push
je
js
or
call
dec
xor
lods
insl
sti
xor
sub
sbb
mov
pop
cmp
addb
js
fimuls
arpl
aad
adc
mov
jp
cmp
xor
jno
je
push
scas
xchg
jle
lods
mov
xor
xlat
push
mov
lods
lret
cmpsl
andl
mov
pop
inc
sarl
inc
mov
xor
in
add
lret
shlb
je
ror
jne
cmpsb
pusha
xchg
test
nop
jecxz
adc
add
or
cmp
addr16
sbb
xchg
mov
out
xchg
inc
xchg
repz
icebp
jmp
pop
jl
xchg
dec
push
sub
sub
inc
nop
test
pop
enter
ljmp
push
and
leave
inc
lret
mov
pop
xor
sub
xor
sbb
pop
mov
jmp
mov
inc
jno
cmp
or
testb
inc
push
dec
jb
cmp
add
push
pop
fwait
xchg
mov
push
push
out
stc
push
or
std
adc
scas
mov
std
int
testb
mov
popa
inc
std
fnstcw
mov
xlat
loopne
pop
xchg
data16
push
push
pushf
and
ds
movsl
pop
repz
jl
push
push
mov
mov
or
rclb
test
outsb
push
cmp
mov
imul
call
mov
pop
lcall
mov
movsl
rcll
jmp
in
xlat
mov
mov
daa
jge
ds
pop
mov
xlat
inc
xchg
test
addb
shl
push
or
cmp
out
adc
es
mov
aad
add
aas
loope
sarl
ret
repnz
jmp
ficoml
inc
test
or
stos
rclb
xor
je,pn
pop
outsl
out
imul
loope
bound
es
cmp
and
sub
rorb
repz
les
pop
push
stos
mov
rorb
in
or
jp
mov
roll
jns
cwtl
mov
vandnps
aas
mov
push
std
xchg
sbb
fdivrl
lock
loopne
mov
mov
dec
xor
add
add
sub
imul
push
mov
aad
jno
out
gs
mov
xor
lmsw
call
pop
data16
lock
adc
dec
mov
jo
lods
andl
clc
jns
dec
mov
aad
xchg
mov
stos
mov
movsb
cmp
sbb
pushf
sbb
jne
push
mov
sbb
cmpsl
dec
and
xchg
and
dec
filds
lds
fucom
ret
inc
mov
push
jl
fs
test
pop
mov
or
int
cltd
inc
out
out
dec
xchg
xchg
fisubl
addr16
andb
scas
stos
sbb
lret
push
mov
lods
ss
mov
mov
sub
ljmp
mov
dec
or
jg
fildl
out
std
dec
push
push
fldt
pop
stos
fistpll
aad
pop
push
push
push
lock
pop
or
out
lcall
mov
mov
xchg
and
fcmovnb
push
addl
mov
push
and
jo
mov
push
cmp
add
shrb
mov
and
pop
push
daa
pop
jle
sub
and
js
mov
lea
cmp
or
xchg
shr
xchg
lock
add
pop
cld
jmp
adc
push
mov
mov
fwait
lahf
inc
add
mov
pop
sub
mov
dec
xor
xchg
xlat
pushf
xor
pusha
xor
jns
sub
mov
add
push
fsubrl
mov
lods
adc
testl
cmp
aaa
ret
movl
or
push
je
ficoms
xchg
push
in
jp
push
pop
call
sub
xor
and
cmpsl
mov
inc
cmp
bound
mov
insl
sbb
ss
popa
fiadds
xchg
mov
lea
push
mov
pop
pop
sbb
adcb
cmp
add
pop
fstpl
xor
mov
add
jl
in
popf
loopne
pop
jo
test
cmpsb
stc
mov
sub
pop
xlat
leave
and
mov
xchg
add
inc
xor
outsb
add
sub
fnstenv
and
xor
cvtps2pi
cmc
outsb
fisubrl
outsl
jg
sbb
adc
mov
popa
dec
sub
pop
leave
pop
mov
test
faddl
pop
test
xor
mov
cmp
fwait
adc
mov
push
and
cmpsl
and
sarb
adc
push
sbb
dec
and
jae
jge
sbb
mov
into
enter
inc
outsl
leave
das
cmp
xorb
mov
imull
rcrl
and
test
les
and
imul
scas
mov
or
mov
sub
inc
push
movsl
shll
mov
push
xor
repz
in
or
mov
push
push
mov
test
cmpsl
pop
mov
call
mov
fdivl
data16
inc
gs
in
sub
jns
add
adc
push
mov
and
leave
and
lock
fs
mov
cmp
add
jmp
in
adc
jb
pop
pop
jae
mov
jo
add
popf
imul
aaa
popa
pop
subl
mov
sub
pop
pop
sub
jns
cld
xchg
mov
cs
mov
mov
adc
cmp
inc
lea
insb
dec
sub
jns
cltd
out
aas
mov
leave
mov
mov
mov
pop
or
outsb
ja
in
dec
ret
mov
ficomps
fcmovnb
cmp
nop
addr16
mov
shlb
xor
sub
jle
test
jp
jle
push
bound
loope
scas
mov
sbb
daa
add
xor
adc
dec
call
outsb
jns
mov
adc
stos
les
push
mov
add
xchg
aad
dec
aas
lds
push
outsb
fadds
and
repnz
mov
adc
jmp
add
or
movsb
cmpl
sti
pop
add
mov
jg
dec
add
ret
pop
cmp
xor
inc
push
mov
pop
out
imul
xchg
pushf
sub
std
ljmp
and
jo
sub
adc
push
andb
mov
dec
xor
xlat
stos
cmc
mov
xor
lret
mov
dec
dec
inc
push
pop
and
pop
add
and
scas
push
mov
sub
jecxz
cli
and
aaa
pusha
dec
nop
push
adc
aas
mov
jne
sbb
add
in
push
inc
jno
cmp
pop
mov
fisubrl
shlb
out
mull
daa
and
and
int3
cwtl
divps
call
arpl
mov
sbb
mov
pop
out
adc
fldlg2
jae
pop
mov
cmpsb
and
loop
and
insb
xor
xor
dec
adc
fnsave
stos
cs
and
fidivrl
pop
sub
xor
mov
jne
rep
sbb
or
inc
or
test
jecxz
jl
cmp
or
fistpl
mov
pop
fcomp
nop
das
outsl
lret
repz
push
lea
fsubrs
loop
cs
in
mov
adc
or
push
out
push
jno
inc
adc
aas
pop
jp
daa
pop
lock
ja
in
jnp
and
jb
sub
popf
adc
push
fnstsw
mov
popa
pop
sub
lock
sub
inc
push
imul
pop
push
xchg
lea
mov
bound
jb
nop
push
scas
div
inc
addb
cld
jae
enter
mov
xchg
push
dec
test
mov
push
xlat
lret
and
ret
jl
jmp
in
mov
xchg
or
jne
and
movsb
popa
arpl
ljmp
outsb
pop
add
into
ficompl
ja
jecxz
shl
or
inc
mov
je
jbe,pt
in
ss
jle
cmpsl
scas
orb
jns
and
sahf
ljmp
add
pop
push
lods
test
adc
xchg
sub
movsb
jno
orb
dec
adc
ret
mov
xor
insl
leave
xor
dec
aad
add
outsb
int3
divl
add
and
sub
enter
int3
clc
dec
and
aaa
aaa
xchg
test
push
mov
xlat
and
aaa
mov
les
cmpsb
sbb
fwait
jg
inc
pop
xchg
bnd
mov
into
jl
inc
cmc
icebp
cwtl
lcall
sahf
xchg
inc
mov
dec
push
jns
ret
xchg
shll
dec
scas
lret
mov
daa
clc
cwtl
loopne
add
cmp
jne
fdivl
xchg
pop
daa
mov
xchg
sbb
jecxz
int3
aam
in
fldl
or
stos
movsl
fst
pushf
cmp
repz
xchg
cmpsb
js
pop
ss
mov
ss
cmpsb
xchg
mov
push
sbb
cmc
out
sbb
addr16
ret
popf
outsl
push
jl
dec
cmpsl
cmp
movsl
xchg
sar
xor
test
push
dec
je
mov
xchg
lcall
mov
hlt
inc
mov
sti
xchg
xor
mov
cli
jb
test
roll
dec
mov
je
sbb
mov
sbb
scas
pmulhuw
jno
push
lret
jp,pn
and
daa
and
push
mov
pop
fldl
stc
mov
loop
mov
push
sub
xchg
jbe
cli
mov
nop
cwtl
into
or
outsl
mov
jns
xchg
mov
jge
clc
adc
loop
pushf
adc
mov
aam
lods
fistpl
mov
int3
fwait
jp
aam
jge
ds
ficoml
fistl
addl
lcall
sbb
pop
int
mov
or
testl
jle
or
ljmp
into
dec
cmc
fstpl
call
sub
xor
mov
icebp
faddl
inc
mov
jle
jge
pop
mov
mov
out
or
or
andl
pop
gs
adc
fldl
mov
dec
roll
aad
lret
lds
jae
jge
push
rcll
mov
cmp
mov
jb
pushf
movsb
add
das
xor
mov
out
sbb
fcmovnu
push
jmp
outsl
sub
sbb
stc
jmp
ja
mov
fwait
and
jmp
and
sub
xlat
cmpsl
aam
idivb
push
cltd
es
int
xchg
pop
sbb
or
in
cmp
mov
jns
adc
xchg
sub
cmp
jmp
mov
flds
int3
ja
iret
jmp
xor
shll
mov
sar
xchg
and
adcb
xor
jmp
fbstp
pop
imul
pop
in
clc
add
push
mov
fstl
add
cmp
daa
rclb
xchg
mov
pop
add
mov
mov
push
dec
inc
imul
pop
rclb
arpl
cld
in
dec
mov
idivb
mov
pop
adc
hlt
in
inc
inc
or
and
insb
bound
mov
ss
dec
inc
jge
sub
push
lret
adc
inc
lea
out
in
xchg
mov
fbstp
add
loope
mov
jns
xchg
test
push
cld
pop
add
sbb
mov
mov
fmulp
popf
fists
and
add
mov
adc
push
outsb
adc
jge
loop
jmp
add
xchg
aaa
lret
sti
mov
sub
icebp
sti
mov
push
inc
popa
sbb
adc
pop
sbbl
jbe
xor
push
sub
pop
sub
and
xchg
imul
sbb
js
test
cmp
ss
jnp
lcall
sub
cmp
xlat
jb
mov
mov
leave
cmp
pop
sbb
pusha
push
push
das
fsubs
lret
aas
mov
push
and
stos
xchg
cmp
xchg
jle
sti
mov
mov
pop
mov
outsb
sub
cmpb
pop
cmc
ret
push
jbe
test
outsl
mov
push
sub
addb
lahf
int3
or
ds
push
xchg
and
fwait
push
mov
adc
jp
aad
sub
ret
or
cmp
lret
dec
mov
add
mov
lahf
scas
scas
push
mov
push
mov
test
shlb
push
clc
enter
hlt
stos
aam
mov
iret
jmp
mov
cmpsl
ds
adc
inc
ds
and
fistpll
movsb
dec
mov
push
lods
cltd
mov
cmpsl
mov
stos
daa
stos
jmp
rcl
iret
iret
in
adc
data16
jo
mov
call
ljmp
xlat
out
scas
loopne
mov
cltd
fbld
mov
xor
push
stos
push
dec
lret
jp
test
mov
and
cli
lret
test
out
bound
pop
sub
and
cld
push
dec
lods
es
ret
stos
jb
mov
popf
sahf
dec
dec
add
aad
push
dec
lret
cld
fldenv
popa
cmc
test
dec
rcr
xor
jae
xchg
sbb
nop
inc
adc
pushw
xchg
add
push
mull
push
out
cmp
jae
lock
lcall
xchg
std
cld
and
clc
lea
mov
das
dec
test
push
fstpl
mov
fisttpll
test
sti
xor
dec
or
push
idivl
sub
gs
outsl
aaa
mov
mov
cmp
aam
mov
adc
push
pop
insl
pop
shrb
cmp
fbstp
fucomp
mov
cmp
out
lcall
cmp
xor
shlb
pop
roll
sub
jno
add
inc
stc
sbb
sub
pop
add
ljmp
sbb
and
adc
and
jo
cmp
mov
in
jecxz
aas
idivl
subb
fsubs
popa
outsl
xchg
fcoms
imul
xchg
inc
lahf
test
cmp
mov
sub
sbb
cli
xchg
xchg
sarl
sbb
jae
xchg
js
bt
repz
mov
jns
mov
jb
jne
push
lods
ret
dec
out
aam
hlt
arpl
dec
insb
sti
cmp
pop
sub
mov
xchg
push
and
in
dec
jns
out
pop
nop
xchg
sarb
in
push
lods
ret
lahf
fidivrl
jnp
dec
lahf
pushf
inc
xchg
pop
sub
lea
add
jnp
les
add
cmp
lcall
cmp
push
xor
jmp
rolb
bswap
mov
mov
dec
in
pop
pop
loopne
xor
test
das
dec
insl
pop
int3
xor
gs
fstpt
xchg
jle
outsb
jne
adcl
loope
pusha
test
fsubs
dec
dec
cmpb
fcompl
pop
clc
mulb
imul
mov
fwait
xchg
xchg
push
stos
or
in
sbb
enter
xlat
clc
lods
insl
dec
xor
enter
bound
scas
xchg
xor
lret
aam
ret
adc
xor
xchg
mov
je
dec
mov
adc
scas
xchg
scas
repz
dec
nop
push
sbb
cmp
bound
push
jb
insl
or
sub
dec
ja
mov
ret
lahf
movsb
adc
push
add
xor
push
nop
push
pop
xchg
es
xchg
adc
shr
enter
insb
es
fldenv
mov
cmp
adc
mov
insl
test
xchg
mov
stos
pop
xchg
shrb
fcomp
fidivrl
jmp
mov
mov
mov
pop
repnz
or
loope
mov
pop
popl
in
insl
cwtl
cli
loop
adc
imul
adc
bound
mov
xchg
mov
out
int3
add
pop
jl
push
push
iret
fwait
cmp
xchg
je
icebp
sub
adc
push
int3
mov
je
push
test
adc
mov
es
loope
in
sbb
hlt
jbe
pop
push
hlt
aas
or
sub
stc
cmp
jne
and
scas
mov
cmp
mov
push
rcll
pop
loopne
pop
shll
mov
xchg
cs
gs
mov
aad
add
add
imulb
adc
mov
push
push
push
pop
pop
mov
test
lcall
leave
nop
popa
or
push
or
xor
sub
loope
mov
xor
adc
out
adc
mov
sub
sahf
adcl
decl
mov
ljmp
or
loop
and
push
lods
enter
fwait
lds
popa
sub
subl
dec
loopne
xchg
jae
or
pop
pusha
loopne
fsubr
fcom
adc
pop
in
adc
mov
pushf
pushf
pop
call
mov
and
cmp
mov
in
imul
lods
cld
pop
out
jge
je
fldl
out
lahf
jp
xlat
pop
cmp
jne
shl
outsl
cmpsb
xchg
lahf
sbb
aam
int
je
lds
fidivrl
jb
or
xchg
and
mov
cld
in
jbe
dec
adc
sub
repz
je
mov
xchg
xchg
cltd
jae
repz
inc
rcll
dec
sbb
jne
add
repz
insb
orl
neg
es
fldt
pop
fdivl
xor
lret
pushf
sbb
iret
xchg
iret
movsl
or
xor
fwait
cmp
xlat
jmp
cmpb
sub
je
rclb
cmpsb
xor
enter
int3
add
sti
pop
loopne,pt
imul
lahf
scas
stos
sub
pop
push
lods
in
adc
mov
jbe
cmc
cli
pop
aas
mov
dec
add
jle
outsb
dec
dec
outsb
shl
jg
out
fsts
jbe
xor
mov
add
pop
lods
jbe
call
xor
add
out
cmpsl
or
add
ret
imul
or
jl
mov
daa
test
imull
mov
fstpt
mulb
sbb
lods
sub
dec
lcall
mov
aam
jne
xlat
out
movsl
push
sub
sbbl
sub
cmp
xchg
jo
xchg
rol
shr
lcall
and
mov
sbb
jecxz
and
jae
adc
or
xchg
push
icebp
xchg
hlt
push
fcmovnu
or
pop
dec
iret
push
fsubr
aam
dec
mov
mov
jp
and
or
test
cmc
mov
or
cltd
movb
lods
negl
sbb
rorb
push
aam
insb
jge
mov
rcll
add
fldcw
sub
nop
fsubs
rcll
mov
or
idivb
xor
ja
add
addr16
jecxz
repnz
mov
scas
xchg
int3
mov
das
mov
push
insl
sub
mov
cltd
movq
push
pop
mov
divb
call
xchg
xor
push
mov
orb
insl
mov
imul
ss
push
push
xor
lcall
iret
gs
push
fisttps
insb
hlt
or
dec
mov
sbb
add
jne
scas
loope
sub
mov
iret
mov
dec
xor
jmp
push
sub
mov
aaa
outsl
mov
pushf
popf
stos
shl
movsb
xor
sarl
jno
sub
mov
add
adc
xchg
fs
inc
int
sub
push
dec
dec
sbb
mov
ljmp
xchg
adc
nop
mov
insl
rcrl
xchg
mov
adc
jecxz
mov
fisubrs
mov
aam
adcl
push
jno
fstpl
xchg
in
or
pop
lahf
test
xchg
inc
inc
xor
xchg
adc
jle
push
je
cmp
stc
out
arpl
xor
xor
shl
sahf
lods
arpl
lods
bound
push
mov
test
es
sahf
push
mov
and
int3
ret
mov
js
dec
outsb
inc
push
mov
popf
scas
cmpsb
mov
iret
xacquire
jle
clc
inc
jmp
or
insl
iret
insl
sub
daa
aaa
mov
pop
sbb
cmp
insl
sub
rclb
enter
cli
and
jns
cmc
repnz
or
mov
push
pop
iret
test
in
and
mov
popf
inc
repnz
jnp
adc
leave
xchg
add
jl
sti
or
in
adc
cmpsb
cli
jne,pn
lods
cli
mov
add
cmp
loopne
and
int
or
nop
cmc
dec
outsb
inc
pop
stos
add
mull
adc
loop
test
lcall
xor
sbb
push
dec
mov
test
gs
push
jo
in
bound
or
bound
out
inc
add
or
cmp
or
pop
mov
mov
jo
call
insl
loope
sbb
cmpsl
xor
insl
sbb
push
adc
jecxz
and
ret
cmp
mov
idivl
sbb
mov
std
ljmp
jge
xorb
xor
and
insb
push
cmpb
cmp
pop
aaa
fbstp
inc
cmp
jns
out
and
or
lea
push
mov
popa
stc
sbb
addb
push
mov
outsl
jecxz
sub
mov
push
faddl
sbb
sub
and
mov
pop
push
test
jl
flds
xor
lods
xchg
js
aam
mov
mov
dec
scas
inc
jns
mov
movsb
in
mov
adc
xorb
mov
mov
sbb
mov
jmp
pop
push
mov
cwtl
pusha
addr16
movsl
iret
mov
call
sbb
push
addl
enter
inc
rcrb
js
bound
mov
ror
pop
sub
imul
jle
sub
mov
pop
lock
repz
jmp
pop
stc
gs
pop
lds
sub
inc
mov
leave
pop
jo
adc
insl
and
fwait
inc
xchg
fdivr
out
xor
in
pop
pushf
ljmp
jno
out
mov
sahf
jns
pusha
insb
nop
push
mov
ret
pop
ret
inc
outsb
stos
or
xchg
inc
data16
sbb
pop
ret
add
cli
fcomps
into
mov
jge
add
xor
mov
cmp
push
roll
incb
int
mov
mov
shr
movsb
out
inc
movsl
in
js
push
add
movsb
lahf
test
cmpb
pushf
and
lds
cmp
icebp
inc
mov
push
mov
inc
or
in
sub
jns
dec
adc
clc
scas
cmp
subb
pop
shlb
jp
lret
sahf
mov
sub
xor
popa
mov
addl
xchg
mov
lret
push
in
jno
into
jmp
call
insl
scas
push
mov
in
sbb
fistpl
xchg
mov
push
shr
imul
outsb
xor
mov
mov
xor
xor
lcall
lcall
mov
adc
test
repnz
fistpll
jb
in
lds
xor
mov
cs
test
jl
je
push
jno
and
int3
xchg
iret
sub
fs
popf
enter
mov
movsl
add
stos
push
and
jle
sub
or
in
push
pushf
push
or
or
adcb
lods
push
lock
lods
out
mov
xor
mov
push
sbb
mov
sti
hlt
dec
test
iret
push
cwtl
decl
das
xor
and
xchg
rorb
mov
push
or
insl
nop
mov
xor
mov
cmp
lea
cs
mov
push
jne
test
sbb
movsb
sub
mov
mov
hlt
push
sbb
loopne
cmp
mov
fnstenv
xchg
ret
call
jb
mov
xor
leave
or
clc
jmp
xchg
fimull
fstpt
fcoms
add
sti
shll
ret
test
xchg
push
sub
testb
sbbl
into
lock
outsl
jl
call
mov
xor
xor
inc
pushf
sbb
xchg
aam
pushf
jno
int3
arpl
dec
loopne
data16
add
movsb
mov
dec
clc
mov
pop
icebp
mov
xchg
pop
dec
out
hlt
sub
stos
pop
jg
sub
xchg
stos
lods
insb
orb
inc
sbb
jg
cmpsb
mov
mov
push
lahf
mov
cmp
ret
inc
gs
fcmovb
and
shr
test
mov
mov
fsub
lahf
xchg
cwtl
mov
jecxz
shr
rorb
xchg
jns
mov
orl
insl
nop
ret
inc
xor
pop
jnp
mov
ret
sub
je
sbb
mov
outsb
gs
lcall
insl
std
in
mov
add
mov
mov
cmpsl
cld
fstpl
cmp
jp
push
or
xchg
push
mov
and
scas
mov
std
cmc
pop
shlb
jge
idiv
mov
jmp
loop
xchg
mov
rcr
aam
cmp
and
sub
add
mov
daa
pop
sbb
cs
add
or
out
mov
ljmp
icebp
ret
dec
andl
enter
loopne
or
xor
mov
jb
lds
lods
mov
out
mov
and
mov
add
daa
mov
push
xchg
inc
mov
repz
mov
xchg
push
or
lea
add
push
fisubl
mov
loopne
xor
jl
sahf
pop
mov
cmc
push
ljmp
bound
jns
mov
adc
or
enter
mov
push
dec
or
imul
fsub
popf
repnz
push
ret
mov
sahf
movl
js
leave
das
loopne,pn
inc
add
mov
inc
js
ss
inc
inc
movsl
push
jns
and
cld
lea
shlb
or
xor
mov
ficomps
stc
ss
adc
aam
out
addb
mov
pusha
adc
or
add
cli
dec
sub
inc
mov
push
cmc
cmpb
cmpsl
cltd
stc
imul
add
xor
in
mov
adc
ja
sbb
mov
notl
push
pop
not
in
sbb
jge
lret
test
mov
dec
shll
push
push
add
jne
cltd
push
pushw
outsl
mov
outsb
cmp
hlt
mov
and
cmpsl
getsec
sbb
leave
push
test
xchg
jp
inc
addl
das
dec
dec
sub
movsl
rorl
cmpsb
jae
out
mov
test
testb
fistpll
out
bound
dec
pop
insb
fs
push
cli
xorl
outsl
xchg
fistpl
imul
inc
inc
pop
adc
push
jne
mov
stc
xor
pop
cmpl
cs
pop
out
lods
or
outsb
push
lcall
sahf
adc
es
jecxz
jmp
and
xchg
bound
bound
xor
adc
sbb
xchg
mov
mov
int
mov
sub
test
xchg
cld
in
mov
dec
int3
ljmp
insl
and
or
lock
cmp
inc
jl
leave
fsubrl
xchg
mov
cmp
leave
or
test
mov
cmp
xor
imul
call
bswap
aas
mov
js
sbb
jmp
pop
push
fwait
rcrb
push
xor
aam
fidivs
sub
in
fidivl
movsl
std
push
mov
jp
ja
clc
cmp
int3
sarb
mov
pop
mov
cs
out
dec
cmp
pop
movb
xchg
scas
inc
sbb
sahf
sub
in
int3
push
mov
inc
mov
daa
mov
sysexit
dec
mov
cwtl
cmp
jns
cmpsb
lock
and
pop
shrb
pop
jnp
fdivs
mov
xor
jne
and
imul
cmp
adc
sbb
gs
ret
jb
sub
js
pop
repz
ret
shrl
push
add
mov
addr16
icebp
push
sbb
jg
rclb
sbb
pop
jl
mov
arpl
lods
dec
mov
dec
out
inc
loopne
repnz
sub
adc
mov
pusha
mov
inc
lahf
in
and
mov
dec
xchg
xor
dec
push
arpl
cmp
inc
push
in
enter
jecxz
jbe
xor
jnp
sbb
or
cli
cmp
pop
cmpsl
inc
push
and
test
pop
push
and
mov
lret
or
call
fadds
adc
js
or
pop
out
sti
movsl
in
inc
notl
mov
dec
out
sbb
loope
add
push
xchg
aas
jne
test
mov
mov
add
and
mov
xchg
inc
push
mov
cmp
sub
iret
sbb
sub
divl
scas
sahf
lods
cmpsl
cmp
or
and
mov
cmp
mov
in
sar
ljmp
fmuls
cmp
mov
inc
inc
adc
sarb
fwait
les
rorb
push
jmp
ljmp
and
jle
bound
out
inc
aas
sti
push
push
mov
xor
int3
out
lods
pusha
aam
lahf
jge
pop
insl
insl
mov
data16
dec
push
rorl
pop
xchg
sarb
jbe
add
jns
adc
mov
cmp
mov
mov
bnd
adc
add
test
mov
inc
test
mul
scas
or
icebp
add
xor
outsl
in
or
mov
mov
add
push
xchg
xorb
inc
and
popa
xchg
popa
cmovae
xlat
inc
pop
enter
lret
out
jae
sbb
mulb
add
and
pop
pop
out
sti
cmp
jle
inc
xchg
and
push
and
sar
lock
sub
push
in
dec
mov
inc
or
stc
scas
dec
sarl
pop
sbb
aaa
pop
inc
outsl
mov
cmp
sub
pop
fld
pop
clc
nop
cltd
push
xchg
cmpsb
scas
clc
dec
mov
shl
pop
fdivr
icebp
clc
imul
mov
scas
xchg
aaa
stos
addr16
sti
popa
icebp
mov
push
jnp
add
dec
in
loope
fisttpll
sub
lahf
das
and
addl
and
popf
xchg
xchg
movsb
xchg
mov
jmp
pop
test
cmp
sub
es
cmp
sbb
aas
add
adc
sub
cwtl
push
in
adc
mov
test
pushf
inc
roll
pop
sbbb
xor
pop
push
adc
xchg
jmp
imul
inc
in
sub
push
int3
push
xchg
aam
mov
cmp
jg
cmc
test
pop
push
jbe
out
inc
mov
add
lock
and
daa
push
pop
shr
pushf
and
out
xor
cld
sbb
test
sub
mov
sub
xchg
inc
add
mov
fdivr
jg
push
push
xchg
cmp
cmpsl
or
push
sbb
xchg
inc
jnp
int3
mov
mov
loopne
aaa
cmp
or
mov
ror
rcrb
and
out
mov
xor
sub
test
lods
sub
nop
popa
fidivrs
lret
jae
add
xlat
sub
out
clc
pop
and
je
aas
test
mov
fsubrs
pop
xchg
dec
xorb
sub
push
cmc
dec
xor
adc
fs
inc
push
stc
clc
ss
mov
sub
jle
loope
mov
or
mov
jge
loope
mov
jg
dec
xorl
jmp
cmp
pop
inc
imul
rcl
outsl
mov
inc
stc
push
push
in
dec
test
das
push
push
jnp
cmp
xlat
rcrb
dec
push
dec
aad
daa
or
out
ds
lret
pop
xor
aaa
mov
xchg
and
loop
mul
push
orl
repnz
sahf
sub
lods
cli
loope
fwait
aaa
popf
gs
xchg
lods
cmp
hlt
lock
int3
and
mov
cld
cmp
pop
pop
scas
mov
ret
sbb
add
shll
inc
or
aas
fists
mov
adc
cmc
and
test
mov
inc
cmc
dec
aam
aaa
fcoms
setns
scas
pushf
les
test
jns
lock
push
push
outsl
mov
iret
in
jle
jno
rclb
mov
jecxz
mov
jns
xchg
cli
outsb
test
lret
lcall
jle
or
les
xchg
push
push
or
in
pop
and
sbb
inc
stos
cmp
test
test
dec
or
data16
add
pop
jno
clc
nop
mov
mov
cli
cmpsl
repnz
xchg
jo
fistps
stc
push
sbb
outsb
xchg
iret
aad
dec
out
and
pop
cmp
test
movsl
es
aam
scas
ss
jae
idivl
adc
ret
push
ret
ss
mov
adc
cmp
test
adc
xchg
push
cmp
arpl
xchg
jbe
adc
mov
and
jno
sbb
cmp
sbbb
das
imul
outsl
pop
fmul
cmp
pushf
outsl
dec
pop
xchg
testl
add
es
int3
dec
andl
out
subb
dec
cltd
fisubrl
mov
sbb
jg
dec
jne
mov
dec
inc
push
xor
and
sub
and
dec
xor
je
xchg
std
jl
dec
fnsave
jl
lret
mov
je
hlt
pop
cmp
jbe
cli
loop
sub
push
xor
sbb
xor
dec
and
roll
xchg
jo
jbe
inc
ljmp
push
push
sub
out
sarl
pop
mov
aad
rolb
xchg
mov
das
loopne
fidivrl
cmpsl
jns
inc
push
aad
push
pop
inc
pop
out
pop
fs
pusha
iret
jp
inc
pusha
xchg
divb
test
push
into
sbb
jmp
ret
jno
pop
inc
sub
dec
fs
lock
je
jl
cmpsb
sub
arpl
add
das
testb
test
push
loopne
push
iret
push
push
pushf
cmp
add
xor
sbbl
or
cmp
pop
xor
daa
or
mov
add
dec
pop
add
dec
cld
daa
mov
outsl
mov
xchg
daa
adc
or
xchg
or
adc
mov
jb
arpl
into
test
sahf
dec
arpl
adc
loope
push
mov
and
les
scas
add
and
push
mov
and
scas
mov
sbbb
xor
and
sbb
sbb
xor
negl
stc
sub
xor
imul
push
mov
mov
mov
add
les
fisubrl
aad
sbb
push
sbb
lcall
mov
notl
cld
add
xchg
mov
cmp
dec
popa
in
pop
shrl
sbb
out
mov
jmp
and
mov
mov
test
loop
xor
cmpsb
insl
fdivrp
sarb
gs
aaa
lods
fimuls
loope
jns
fcmovne
cmpsb
cli
insb
cld
in
rcrl
mov
shrl
scas
mov
pop
dec
sbb
push
xchg
dec
xor
and
push
pop
divl
shrb
stos
sbb
lea
xchg
aaa
mov
add
dec
inc
pop
movsb
je
sti
imulb
outsl
shrl
scas
mov
push
pop
jb
add
fcmovnu
mov
mov
repz
inc
jl
pop
stos
loope
fidivs
pop
jecxz
mov
add
fsub
mov
add
mov
add
cmpsl
inc
lret
cmp
outsb
jbe
dec
ljmp
stc
out
cmpsl
fwait
jmp
aam
jne
cmp
stos
test
loopne
cmpsb
fisttpl
jge
jl
fisttps
pop
dec
pop
cmp
add
rolb
ja
push
stos
nop
jg
test
pop
aas
and
roll
sub
inc
inc
test
sub
negb
mov
pop
mov
out
xor
inc
cmp
popf
mov
pop
movsl
sbb
stos
iret
lahf
pusha
sbb
push
and
push
adcb
jl
push
xchg
shll
mov
push
pop
daa
cmp
fisubl
lods
pop
bound
iret
adc
push
dec
jmp
shll
pusha
mov
mov
ret
ss
sarb
imul
testb
les
icebp
cltd
je
cltd
test
loopne
ds
add
push
bound
or
mov
mov
push
mov
xchg
xorl
icebp
data16
icebp
jecxz
sbb
dec
fcompl
or
clc
mov
dec
mov
in
inc
jp
or
imul
cwtl
mov
rorl
ficoml
adc
pop
out
test
mov
push
ds
sahf
xor
mov
cmpsb
pushf
fxch
lret
mov
arpl
jb
pop
xchg
jmp
lea
arpl
mov
xor
out
loop
mov
es
popa
jne
and
or
sbb
icebp
jno
gs
sbb
test
inc
dec
xor
and
jg
xlat
decl
pop
xor
push
cmovae
outsb
xlat
out
cmp
mov
inc
mov
into
sbb
cld
jl
xchg
cld
insb
stos
lods
ficompl
mov
push
pusha
sbbl
adc
out
pop
lret
mov
out
mov
adc
in
mov
outsb
push
rorl
mov
adc
shrb
gs
push
or
sbb
dec
cld
pextrw
aas
mov
les
ljmp
outsl
call
sub
std
jns
aas
jae
pop
popl
rcl
jae
xor
jl
sbb
xor
mov
notb
fs
jno
insb
repz
dec
push
cltd
gs
je
bound
data16
cmc
adc
push
lods
and
pop
pop
lods
imul
inc
adc
out
jnp
xlat
mov
fwait
mov
adc
call
fdivrs
mov
popa
enter
sub
lea
test
je
lret
cmp
sub
fildl
pop
xor
test
inc
mov
jb
inc
inc
add
mov
mov
loope
aas
mov
inc
or
data16
xor
sbb
xor
mov
sbb
mov
jge
mov
sub
push
xchg
inc
mov
aad
mov
mov
or
sub
dec
xchg
sub
test
shl
xchg
sub
bound
xor
mov
cld
and
shlb
mov
pop
adc
int3
cmp
jp
xor
lret
xor
cmp
mov
mov
pop
mov
inc
sahf
mov
xchg
push
add
stos
addb
jmp
xchg
fwait
lcall
sbbb
aam
cmp
pop
imul
test
pop
add
mov
imul
and
std
popf
dec
jns
aaa
mov
cli
pop
add
and
fstpl
mov
fnstenv
decb
ss
pop
aaa
inc
cmp
adc
xor
pop
inc
push
sbb
inc
cmp
mov
and
out
pop
push
loope
in
lret
test
mov
cmp
fcoml
xchg
stos
mov
test
bnd
lahf
push
std
adc
scas
mov
mov
mov
pop
mov
in
inc
jno
ret
xchg
fbstp
inc
lcall
push
xchg
in
xlat
and
inc
loop
jg
out
and
jns
stos
or
sub
push
insb
ficoms
mov
and
inc
sbb
add
add
scas
ja
dec
sub
scas
dec
sub
mov
mov
ret
push
adc
cli
aas
pop
pop
icebp
repz
add
adc
or
pop
adc
lds
dec
mov
jnp
stos
add
rolb
adc
stos
or
adc
imul
inc
cltd
out
fwait
sarl
mov
dec
jb
xorb
aam
pop
rcrl
xchg
cmc
fsubrl
outsl
inc
jmp
inc
andb
or
cltd
fadds
push
in
rorb
cwtl
dec
or
fwait
enter
testb
nop
in
mov
movsl
push
sbb
cmp
mov
jmp
push
sbb
fdivs
popf
dec
pop
cmc
xor
mov
loopne
mov
nop
sti
jecxz
test
sub
jae
clc
cmp
dec
xor
std
addr16
fidivl
push
or
imul
dec
lret
cmp
flds
sub
out
ds
inc
mov
addl
addr16
xor
outsl
loope
repnz
cs
out
xchg
mov
test
cmpsl
rcr
cmp
lcall
fcoms
aaa
out
fstl
shlb
adc
or
add
inc
sub
mov
sbb
push
pop
push
clc
mov
xchg
mov
pop
int
repnz
or
jnp
sbb
or
and
jnp
inc
lret
xchg
lods
jbe
fbstp
push
loop
xor
xor
xor
cli
inc
iret
cmpl
add
jge
or
hlt
xchg
xchg
xchg
das
mov
data16
mov
leave
cltd
inc
sub
ficoms
leave
and
ds
rcpps
push
test
sbb
mov
jae
mov
mov
xchg
xor
icebp
adc
es
lds
jae
push
popf
jno
jle
into
bndldx
mov
mov
dec
mov
pop
add
xor
lahf
jge
das
dec
jbe
or
imul
shrl
pop
xchg
add
inc
dec
lret
and
test
cltd
dec
aam
cs
pusha
sub
stc
jb
mov
mov
push
fwait
dec
pop
daa
add
or
lock
cmp
js
inc
cmp
sbb
insb
xor
fisubl
mov
jns
lods
lcall
mov
out
sbb
cmp
mov
mov
mov
adc
int
jns
stc
addr16
repz
shrb
adc
fnstsw
mov
pop
in
ds
mov
std
mov
add
arpl
sbb
xor
aam
lret
sbb
nop
mov
xchg
ds
mov
shlb
pop
mov
add
loopne
fsubl
adc
mov
jle
push
out
inc
push
jno
jl
out
test
and
imul
in
mov
stos
xchg
mov
fidivrs
add
inc
in
add
or
xchg
sub
sub
stos
mov
push
dec
and
int3
xchg
mov
xchg
inc
inc
xchg
mov
mov
sub
idiv
stc
daa
in
popa
sub
ret
pusha
inc
cmpsl
and
xor
icebp
incb
testl
dec
jl
or
xor
scas
pop
je
outsl
cmp
aam
pop
out
nop
aas
inc
cltd
inc
stos
fbld
xchg
pop
cmp
in
cmp
push
hlt
cmp
cmp
jmp
mov
mov
iret
dec
sub
sub
xchg
pop
jge
adc
imul
pop
std
lods
outsl
xchg
pushl
pop
enter
cwtl
repz
les
ret
pop
movsl
or
jmp
cmp
adc
jmp
xor
pop
mov
out
jns
mov
adcl
lret
sbb
and
jmp
ret
mov
pop
jns
xchg
shrb
push
xor
sub
cmp
popa
mov
mov
pop
test
lock
hlt
push
cwtl
xor
shl
cmp
int3
lea
outsl
or
jno
mov
push
cmpsb
aas
push
loop
cli
and
lahf
out
fisttpll
xchg
cmpsl
add
jne
cltd
bound
outsb
aaa
mov
push
pop
and
push
sbb
xor
adc
mov
adc
into
dec
out
sbb
sbb
cmp
movsb
push
and
sub
sub
mov
mov
inc
jg
jno
call
outsl
es
call
mov
movsb
in
setb
mov
loopne
les
mov
mov
clc
pop
imul
mov
lahf
sub
xor
test
add
arpl
out
lret
andl
cs
mov
mov
mov
pop
dec
pop
loope
push
adc
std
dec
ror
push
cmp
push
call
sub
fnstenv
jmp
or
jle
sub
mov
dec
pop
cmpsl
leave
out
inc
sti
icebp
fs
addr16
movsl
mov
dec
lahf
out
jb
test
pop
mov
stc
mov
in
dec
jns
inc
test
dec
or
adc
sti
and
or
jecxz
out
mov
xchg
cmp
dec
push
push
dec
insl
dec
sub
xchg
sub
mov
xchg
or
test
pop
orl
jl
outsb
add
dec
out
adc
fdivs
mov
enter
dec
jne
or
rclb
and
jo
cmp
xchg
std
push
pop
in
dec
fnstsw
sub
addr16
xchg
inc
inc
cwtl
test
fcmove
inc
inc
sub
mov
add
xor
out
xlat
push
inc
mov
stos
and
lahf
es
fdivs
ficoml
ret
or
push
stos
scas
mul
movb
jecxz
inc
fmuls
or
into
sub
jge
inc
sub
stos
fs
jecxz
cmp
cmpsb
push
stos
xchg
fisttpl
push
xchg
das
repnz
mov
adc
insl
xchg
jns
lods
test
mov
pop
sub
pop
fldenv
out
lea
pop
in
mov
or
xchg
adc
mov
jl
jno
mov
icebp
inc
outsb
mov
inc
mov
pop
imulb
pop
jmp
out
sub
lds
movsl
ficompl
loopne
pop
test
or
jb
lods
jno
push
cwtl
or
xlat
mov
cmp
sahf
popl
ss
icebp
cmpsl
lcall
xor
iret
or
adc
dec
xlat
lret
mov
and
lods
mov
jl
insb
leave
sarl
pop
std
push
js
sbb
dec
incl
jp
mov
pop
ret
ret
sbb
dec
pop
pop
hlt
jle
jb
mov
add
in
mov
mov
cmpsb
xchg
lock
push
aaa
cmc
jge
mov
ret
pop
or
lret
xor
mov
stos
xchg
cmp
ret
and
cmp
dec
jae
jl
sub
mov
repz
jecxz
inc
xor
sub
cld
sarl
jne
or
hlt
mov
stos
push
nop
push
dec
push
mov
popa
insl
outsl
xlat
sub
icebp
test
push
or
les
insl
sti
dec
lds
cltd
push
nop
cmp
or
mov
inc
test
push
or
cmp
inc
mov
xchg
xlat
sub
fisubrl
int
and
adc
outsl
inc
les
leave
shrl
jne
in
int
or
ss
repnz
and
jo
sub
sbb
ljmp
std
sub
mov
fstpt
mov
or
cmc
or
cmp
cmp
jl
in
test
sub
cmp
jns
insb
mov
je
sub
fdivrp
movsb
loope
nop
aam
mov
xchg
dec
test
test
mov
xor
mov
ficoms
jl
sbb
into
jecxz
cwtl
add
lock
jo
clc
cltd
popf
aaa
xor
imul
mov
jne
and
cltd
add
fldl
test
inc
fwait
xchg
cmpl
das
fiaddl
jp
in
sbb
imul
lds
pop
or
insb
test
dec
mov
sbb
sub
and
adc
loope
fimuls
les
mov
orl
pop
fsub
pop
inc
fcmovnbe
nop
mov
std
xchg
sahf
push
xchg
cli
cmp
inc
enter
dec
jmp
push
mov
jno
push
xlat
scas
mov
lahf
cmp
dec
adc
inc
jns
push
cltd
insl
fdivrl
adc
das
xchg
mov
data16
cmpsl
jl
dec
or
mov
or
rolb
aaa
int3
fcomi
mov
inc
ret
fistpll
sbb
loop
test
cwtl
dec
das
lahf
cmp
movb
push
enter
sahf
std
in
bound
loopne
xchg
inc
jg
mov
xor
jb
sub
and
in
mov
adc
jp
aad
mov
or
dec
add
mov
mov
or
cmpsb
pop
mov
jp
aam
in
mov
cmp
in
push
fidivrs
pop
xchg
lods
outsl
or
jae
dec
add
mov
xchg
dec
stos
fs
xchg
cmpsl
imul
or
popa
movsl
cs
or
mov
and
divb
pop
repnz
inc
mov
ficoms
xor
mov
in
mov
push
ret
mov
fsubs
inc
iret
and
and
mov
push
mov
push
push
push
and
sbb
cltd
decb
sbb
inc
add
xchg
add
cmp
lods
or
stc
test
rcrb
loope
push
add
outsl
pushf
inc
jmp
ficoms
cmp
cmp
sbb
dec
pop
repz
popf
ss
jo
aad
add
jge
or
push
cmpsl
xchg
inc
cmp
jbe
loop
insb
movsl
and
mov
adcl
pop
arpl
cltd
ror
or
pushf
mov
jae
mov
aad
jne
jne
or
dec
fwait
popf
inc
cmpsb
repnz
push
xchg
icebp
mov
dec
addr16
lret
and
in
cwtl
popa
sub
mov
mov
in
push
jmp
adc
pop
int
loope
mov
mov
scas
fs
icebp
in
cmpsb
and
mov
xchg
repnz
push
mov
leave
lret
dec
rolb
pop
out
inc
popf
xchg
pop
enter
out
call
jb
push
syscall
xchg
push
jge
push
adc
jns
mov
loop
mov
addr16
int3
sub
testl
shl
mov
dec
xchg
xorb
pop
add
mov
cld
adc
mov
cmp
adc
jp
lret
repnz
xchg
push
jmp
or
adc
in
inc
int
adc
xchg
lock
subl
inc
into
dec
shl
inc
repnz
insl
xor
dec
pushf
mov
dec
mov
test
xor
dec
ret
imulb
xchg
cmp
stos
mov
nop
xor
dec
int3
test
mov
inc
sbb
and
je
adc
adc
or
js
jbe
jo
mov
hlt
inc
xchg
cld
outsl
pop
and
fscale
and
jmp
cmpsl
or
icebp
pop
xor
dec
bound
cld
dec
push
clc
pop
fwait
adc
sbb
bnd
movsb
xchg
pop
aam
enter
mov
jo
pop
mov
js
or
roll
cltd
mov
inc
jo
dec
loopw
xchg
cmc
ret
adcb
add
outsl
sbb
and
jnp
mov
out
lcall
movsl
and
lcall
add
clc
xor
rol
stos
xlat
inc
dec
sub
dec
orb
and
loopne
mov
sub
jne
jl
push
push
enter
lock
mov
mov
std
ss
sbb
push
xor
cmpsb
mov
dec
stc
mov
push
stos
popa
fs
movsb
pop
lods
inc
jb
stos
loop
jo
scas
bnd
pop
mov
xor
jge
je
xor
inc
and
pushf
cltd
mov
dec
or
inc
dec
imul
clc
aam
jns
out
mov
frstor
jg
adc
inc
sbb
mov
cmp
lret
clc
aas
nop
cmp
ret
loopne
bound
mov
mov
mov
mov
test
pop
mov
sub
cmpsl
in
test
pusha
js
call
sub
pop
jle
jle
mov
lret
pop
add
or
dec
inc
dec
daa
push
mov
inc
or
loope
xchg
repnz
sbb
sub
ret
sub
jno
loope
sub
jbe
cmpl
xchg
leave
sub
sbb
fs
xchg
test
cmp
cmp
call
mov
sbb
addr16
out
mov
sub
lea
inc
cmp
and
in
stos
lods
call
jb
test
mov
aam
insb
dec
push
test
out
jb
push
mov
fsubs
fildl
lahf
into
xchg
inc
jae
cmp
dec
out
inc
xchg
cmc
es
adc
or
das
push
mov
inc
cmp
cmp
jl
addr16
loop
int3
pushf
mov
adc
adc
add
loope
andl
push
test
adc
notl
shrl
jmp
je
iret
add
mov
and
ja
sub
pop
pop
aas
sub
jmp
scas
xor
jmp
cmp
pop
mov
cmp
stos
scas
push
dec
adc
mov
inc
test
roll
push
pop
leave
jmp
out
mov
jne
push
sub
fcoml
mov
and
xorl
lds
push
repz
mov
fsubr
imul
fcompl
daa
xchg
and
loopne
jnp
hlt
pop
jp
addr16
fadd
lahf
dec
cmpb
jne
cltd
arpl
sbb
scas
pop
dec
mov
adc
iret
jg
xchg
jo
mov
fdivl
dec
or
int
jg
jb
pop
pop
jo
pushf
dec
idivl
push
xchg
shrb
sahf
pushf
mov
xchg
mov
dec
xchg
aas
imul
lret
pop
pusha
imul
xchg
sbb
sti
mov
mov
es
add
aad
lret
cld
insl
sti
adc
test
fsubl
sbb
sbb
mov
lcall
or
mov
or
call
cs
jecxz
add
fstpl
push
push
imul
xor
adc
dec
fcmovnb
pop
movsb
xor
test
add
sub
aad
das
xor
or
leave
add
adc
inc
and
rclb
push
in
jmp
sbb
in
call
cltd
xor
test
clc
flds
data16
xor
lock
cld
into
outsb
mov
lahf
pusha
mov
jge
fs
sub
push
popa
mov
and
sar
in
jbe
call
pop
jmp
jae
outsb
jecxz
pop
xor
adcb
out
dec
xchg
insl
pushf
daa
loope
inc
push
jle
sbb
outsb
add
mov
jl
shll
loop
in
pop
push
xchg
mov
insb
movsl
outsb
lret
or
jp
orl
sub
out
pinsrw
iret
outsb
xor
les
mov
lock
addr16
jmp
loop
push
or
ss
mov
adc
imul
mov
jb
xchg
test
test
cmpsb
xchg
xchg
scas
outsl
mov
fwait
ret
clc
call
jnp
pop
popa
inc
push
notl
movsl
pop
pop
mov
jmp
jecxz
lds
in
lods
das
jmp
push
dec
mov
push
lcall
mov
pop
fsubr
inc
pop
bound
xchg
dec
add
stc
jecxz
enter
push
pusha
cwtl
push
mov
into
mov
pop
sbb
jbe
lea
sub
test
idivb
mov
sub
dec
loope
jg
mov
mov
lock
out
mov
bound
add
test
mov
call
inc
lret
imul
sub
iret
imul
cmpsl
lret
fstl
dec
pop
xchg
dec
push
add
sub
jp
jl
and
lahf
mov
pop
and
dec
cltd
shl
movsl
cli
loopne
push
decb
add
cmpsl
ficomps
rorl
cmp
les
add
repnz
jmp
std
xchg
test
mov
xor
pop
inc
or
outsl
mov
or
lret
loopne
test
mov
sub
in
jbe
xchg
imul
testl
dec
fxch
inc
gs
decl
and
imul
pop
xor
pop
sbb
cmc
pushw
incb
adc
inc
jg
jae
cld
fisubs
pop
sub
mov
xorb
inc
push
mov
fmuls
adc
push
jne
neg
mov
adc
inc
cmp
sub
mov
cmpsb
fxch
ds
imul
arpl
sbb
cs
ret
data16
cmp
dec
xor
mov
cmp
rcrl
add
mov
lcall
or
add
out
cmp
jmp
sbb
call
pop
jbe
mov
fucomip
inc
cmpsl
lret
or
sub
cli
jns
or
push
add
subl
push
inc
stos
insb
subl
jo
lret
mov
jge
outsl
mov
jno
sbb
mov
ret
ret
xchg
test
je
cmpsb
outsb
adc
scas
adc
and
clc
push
rorl
push
xchg
cmp
push
fnstenv
dec
sarl
daa
es
sub
icebp
xor
icebp
fbld
add
subb
out
iret
hlt
lret
xchg
out
jo
ret
push
mov
mov
jae
out
mov
xchg
jae
sub
aam
push
xor
sti
mov
lret
and
ret
or
add
popa
rcr
inc
lret
jns
sub
imul
xor
aad
sub
js
jb
addr16
and
xchg
lret
push
inc
in
dec
pop
arpl
cmp
shll
adc
test
xor
repz
jb
cmp
inc
push
rolb
push
xor
arpl
mov
stc
cmp
jmp
xor
test
outsl
mov
std
cmp
jnp
jns
jmp
xor
pop
std
sbb
xchg
rolb
dec
pushf
lea
out
add
pop
movsl
andl
push
cmp
dec
jg
push
or
inc
subb
jge
adc
pop
push
mov
mov
mov
pop
jbe
fidivrs
out
loope
lret
inc
aaa
rcrl
mov
mov
ret
lahf
xchg
shrl
or
add
shlb
inc
shll
and
into
cmp
xchg
call
mov
inc
and
adc
pusha
push
popf
cld
xor
jbe
push
loopne
cmpl
fst
mov
adc
jl
out
scas
test
sub
xchg
push
sbb
pop
fdivrl
xor
pop
loopne
lahf
je
lret
cmp
icebp
rcrl
outsb
out
les
pop
stc
ror
in
xor
lods
dec
adc
jbe
push
mov
in
aas
add
sub
daa
imul
cmp
test
and
jae
mov
cltd
lds
mov
mov
popf
ljmp
ja
lret
stos
les
mov
push
aam
cld
mov
sbb
into
addr16
sbb
inc
jns
push
sbb
in
xchg
inc
sub
fnstenv
fwait
outsl
mov
pop
shrb
jmp
sti
inc
inc
xchg
sub
in
mov
adc
scas
roll
aad
inc
dec
sbb
mov
imul
outsb
orb
add
jge
rcll
inc
addr16
jmp
jl
insb
push
out
fsubp
sbbb
lahf
fmul
test
fisubs
cmp
dec
ret
lea
jne
mov
inc
or
out
loop
mov
stos
jl
mov
jmp
add
inc
scas
in
inc
leave
repz
lcall
inc
rclb
xchg
rcrb
push
or
sub
pop
and
xchg
inc
and
pop
rorl
fwait
adc
jo
ds
and
lret
cmp
ss
mov
sbb
mov
jns
js
jo
mov
es
lahf
sahf
sub
sbb
adc
inc
jns
xor
dec
push
mov
xchg
arpl
mov
shrb
fbstp
push
inc
in
je
xchg
loopne
pop
jle
stc
mov
lret
dec
mov
and
push
or
sbb
pop
push
inc
xlat
jno
cld
xchg
inc
mov
das
nop
in
sub
pop
dec
in
fistpl
mov
fld
xchg
or
sbb
sub
jge
xlat
or
sarl
imulb
inc
sbb
dec
test
push
xchg
sbb
les
dec
xchg
lret
and
aaa
dec
dec
push
inc
cltd
ret
push
inc
lahf
pop
sbb
pop
adc
sbb
fistps
xor
insl
fsubrs
pushf
imul
mov
sub
aaa
lea
shrl
pop
dec
std
rorb
out
cld
dec
pop
cs
ror
cmpsb
and
mov
iret
hlt
adc
or
repz
sbb
repz
lock
cmp
xchg
mov
cmp
push
push
dec
xchg
mov
adc
jg
adc
out
insb
or
gs
push
pop
ret
sub
insl
lcall
inc
mov
loop
xchg
aaa
or
inc
xchg
test
adc
sub
loope
outsb
mov
cmp
push
scas
jp
loopne
add
or
dec
xchg
sbb
and
add
stos
repz
ds
fwait
mov
push
lea
pop
in
std
jmp
add
icebp
repnz
sub
jne
jg
inc
mov
iret
mov
mov
sub
pop
mov
xchg
in
inc
pushl
data16
sub
or
sarl
inc
mov
sbb
test
jne
and
movl
test
jae
mul
enter
xchg
jns
pop
adc
cmpsl
and
loop
pop
clc
xchg
test
and
and
je
jle
out
test
pop
outsb
adc
bound
les
aad
jbe
jno
lock
jmp
bound
lods
and
int3
imul
dec
xchg
scas
int
jbe
jnp
mov
jb
leave
dec
std
dec
mov
adc
jb
or
inc
stos
push
push
stc
dec
int3
ja
sbb
push
inc
push
sub
xchg
lds
cmp
dec
out
nop
mov
in
es
mov
int3
cmpsl
or
hlt
cwtl
call
clc
outsl
pop
push
loope
fldcw
rorl
push
push
pop
inc
adc
jns
mov
dec
imul
mov
xchg
adc
mov
dec
pop
enter
jbe
mov
adc
xchg
mov
cmp
mov
jb
std
push
std
cwtl
ficoms
pop
xor
mov
fdivs
xchg
inc
int3
jb
mov
lahf
dec
pop
jge
shl
and
aad
jb
mov
lahf
pusha
ret
xor
add
adc
cli
mov
shll
aaa
and
xchg
or
pop
rorb
fnclex
fs
adc
and
fcomp
fsubrl
xchg
jae
inc
into
cld
clc
jmp
xor
xor
jno
mov
lds
jle
ljmp
xchg
lds
and
push
xor
push
loop
xchg
lret
out
shll
outsb
mov
addr16
xchg
mov
mov
mov
push
jne
push
rcll
ja
or
mov
push
mov
push
mov
or
dec
mov
pop
jne
mov
and
cmp
shlb
arpl
es
sar
add
jae
mov
ret
or
mov
jbe
insl
dec
sbb
push
aam
jne
out
stos
shlb
dec
hlt
fistpl
inc
ficoms
adc
mov
inc
xchg
dec
in
ret
jp
mov
lahf
sub
cmpsl
clc
push
loop
inc
out
pop
jmp
dec
and
inc
inc
push
enter
in
push
outsl
lret
inc
jg
cmp
push
out
vpmovd2m
and
insl
pop
pop
sub
andb
mov
xchg
out
mov
jmp
jnp
sbb
gs
rcll
mov
mov
lods
push
and
and
push
jo
shll
decl
mov
mov
pop
push
js
pop
testl
aaa
dec
daa
in
push
add
sub
lds
enter
mov
scas
xlat
add
sarb
es
rorb
xchg
adc
out
sub
rcr
inc
decl
std
jae
mov
cmp
movsb
leave
test
movsb
fsubrs
pop
sub
mov
stc
mov
cmpsb
inc
cltd
push
inc
pushf
loopne
sbb
repz
shlb
or
sub
xor
pushf
xor
adc
mov
rolb
add
hlt
jp
mov
ljmp
ret
xchg
add
test
lahf
adc
popf
scas
shlb
mov
ljmp
testb
mov
hlt
sub
adc
dec
fdivl
fmuls
mov
sub
popa
ficoms
and
testb
xor
sbb
movsl
xorb
cmp
or
lock
and
mov
mov
cmp
lds
jbe
imul
nop
cmp
stc
aaa
outsl
push
mov
xchg
push
je
stos
mov
rcrb
push
ficomps
stos
inc
mov
out
add
int3
call
in
push
in
mov
sbb
out
iret
daa
xchg
addb
mov
pop
pushf
shl
push
in
call
icebp
es
cli
test
divl
lea
and
xor
xchg
shlb
cld
mov
adc
faddl
enter
xor
cmp
pop
push
addr16
out
sub
mov
pop
orb
jne
or
pop
jmp
jmp
movsl
sarb
insl
mov
mov
rclb
sub
push
adc
andl
xchg
dec
in
and
push
mov
push
aad
lret
test
jns
sub
stos
mov
add
and
ror
jl
mov
fs
shrl
data16
cmp
xchg
inc
cmp
push
loop
adcb
xor
jge
shr
sbb
shrb
inc
jp
call
lret
test
adc
jp
pop
sbb
shll
in
push
mov
dec
fst
cli
insl
cmp
pushf
mov
divb
popa
pop
cli
mov
stos
jnp
js
rcl
cmp
adc
adc
mov
mov
or
enter
in
adc
call
fldenv
jecxz
inc
push
outsl
mov
negb
cmpsl
outsl
in
xchg
xor
push
add
gs
xlat
inc
out
aaa
jb
cmp
lods
mov
test
and
push
mov
orb
jbe
and
cmpsl
mov
or
mov
test
mov
cmp
std
movsb
sbb
lcall
int
fwait
movsb
jno
jle
pop
cmp
inc
aaa
xor
lods
xlat
mov
mov
ljmp
les
dec
rcr
pop
rorl
repnz
sub
cmp
in
pop
and
dec
xor
cmp
dec
push
aas
cmpsb
xor
sub
outsl
xor
outsb
xchg
scas
mov
cmp
dec
pop
cmp
loopw
insl
int
repnz
push
push
xchg
mov
xchg
mov
lcall
stos
xlat
or
lret
iret
dec
sub
adc
pinsrw
cltd
dec
push
dec
int
mov
push
jnp
adc
inc
call
sahf
or
pop
xor
mov
ret
push
sbb
aad
xchg
or
cmp
int3
pop
imul
push
cmpsb
mov
imul
adc
lods
xor
xor
hlt
mov
iret
xor
mov
mov
xor
int3
push
inc
aaa
in
push
mov
lods
fcom
lahf
icebp
push
mov
movsl
lahf
loopne
jo
sub
mov
xlat
roll
sti
aam
nop
push
xchg
xor
mov
mov
inc
sbb
pop
into
mov
dec
xchg
cld
and
pop
or
sbb
rclb
fsubl
imull
xorb
xchg
loop
out
data16
mov
aam
lds
or
inc
add
or
aas
js
push
pop
and
push
adcb
or
xchg
shrb
aaa
movsl
mov
mov
push
ss
cmpsl
mov
aaa
pop
jnp
or
es
shlb
pushl
xchg
jae
xor
add
jb
ret
pop
aaa
mov
fbld
loop
inc
lock
jns
adc
loope
pusha
pop
adc
adc
aad
lods
nop
cmpb
loopne
pop
pop
jl,pt
push
lea
fmuls
mov
dec
movsl
mov
or
cwtl
out
pop
lods
push
lcall
loop
inc
fisubrs
call
sbb
pop
ljmp
cmp
cli
xchg
push
push
ret
data16
add
sbb
sub
inc
dec
into
mov
and
adc
test
push
insl
pop
or
cwtl
jns
sbb
pusha
pop
and
sub
cmp
mov
dec
inc
pop
mov
je
or
add
das
pop
pop
sub
adc
sbb
dec
scas
xchg
repz
je
repz
mov
ljmp
sbb
and
dec
stc
daa
push
aaa
rclb
leave
data16
add
or
js
mov
mov
mov
lods
daa
cltd
hlt
mov
je
cmc
call
mov
addr16
xor
rcrl
lock
xchg
mov
ret
dec
xchg
xchg
push
scas
inc
aas
les
cltd
add
push
or
lods
fisttpll
jl
dec
pop
xchg
shrl
mov
cmp
sbb
sti
clc
adc
aas
hlt
movsb
push
or
inc
in
sarb
inc
cli
sbbl
dec
sub
push
jbe
rclb
bound
stc
daa
xchg
imul
adcb
inc
pop
mov
lahf
jle
mov
push
push
sti
iret
js
push
jne
xchg
jns
mov
xchg
jge
or
adc
add
add
stos
ret
pop
cmp
jo
jb
lret
mov
xor
jno
xor
aam
incl
and
push
rcrb
imul
and
pop
push
in
fwait
mov
add
jmp
xor
add
xchg
cltd
mov
cmp
std
mov
inc
loope
dec
adc
out
bound
mov
mov
ret
jns
mov
cmp
sub
sub
scas
lods
cli
mov
jae
jno
aas
lret
pop
add
hlt
cmpsl
pop
daa
sbb
icebp
sub
mov
std
imul
pusha
pop
sub
leave
mov
push
stos
test
jecxz
out
mov
dec
mov
rorl
xchg
dec
jge
sbb
ja
lock
int3
pusha
rcr
test
cmpsl
fsubrs
lea
aaa
dec
int3
sub
adc
xorl
repnz
pop
jns
in
ret
sbb
sub
rorb
mov
mov
imul
mov
mov
inc
and
outsl
in
pop
js
popa
call
mov
or
push
mov
icebp
lret
lods
push
adc
xor
adc
shll
cmp
lahf
push
stc
fs
jmp
push
lret
xchg
mov
fwait
cli
call
inc
push
lcall
add
bsf
sbb
dec
lock
adc
bsf
cmp
test
dec
jp
jp
push
cli
lahf
push
xor
push
mov
or
jecxz
xchg
xchg
mov
outsb
aad
cs
fimull
push
out
nop
mov
es
inc
pop
dec
lret
add
pop
sub
sbb
jb
lahf
sbb
stos
cltd
leave
stc
daa
mov
mov
lods
push
mov
jne
movsb
jbe
clc
jns
dec
daa
aas
cld
cmp
pop
xchg
mov
xchg
sub
and
mov
push
shl
sti
mov
sbb
push
mov
push
mov
mov
adc
mov
push
cmp
enter
adc
and
pop
out
test
xorl
add
loop
adc
jmp
cmp
xchg
mov
adc
mov
cmpsl
jns
jp
loope
insl
push
scas
inc
stos
inc
pop
sub
xor
jns
ret
aad
in
cmc
jge
xlat
adc
cmp
lcall
mov
xchg
in
out
ja
lea
mov
mov
cmp
add
push
stc
mov
cmp
mov
sti
cltd
cld
popa
cs
add
jle
repnz
addr16
cld
lret
inc
and
jmp
loope
ds
jnp
mov
sbb
test
fimuls
xchg
xchg
add
mov
and
xchg
mov
mov
outsb
mov
or
add
cmp
pusha
repnz
outsb
cmc
aam
mov
mov
call
xor
shll
aas
push
scas
jne
cmpsb
xchg
out
je
rorl
fnstcw
pop
or
sbb
in
or
mov
aas
xlat
or
inc
jno
aam
jecxz
into
movsl
jmpw
mov
push
push
push
rcrb
jmp
fstps
stc
mov
xchg
pop
mov
jno
ss
pusha
inc
cmp
mov
sbb
mov
adc
or
cmp
imul
clc
js
pop
in
sbb
jle
lahf
mov
movb
mov
xchg
jecxz
aad
stc
xor
sbb
xchg
inc
loopne
jbe
fwait
daa
mov
mov
scas
out
pushf
in
xchg
cld
mov
pop
mov
vpsubb
jb
movb
es
stos
das
sti
xor
xor
lds
jb
cld
ret
push
push
sbb
cmp
popf
xchg
es
or
mov
xchg
jo
loop
xchg
scas
push
cmp
dec
nop
xlat
nop
jg
and
and
fwait
addr16
and
sbb
inc
or
jae
inc
xchg
sarb
icebp
fs
fwait
xor
mov
insl
sub
mov
cmc
cs
push
add
mov
sbb
cwtl
sub
ret
sub
jle
inc
push
xor
andb
call
ret
loopne
mov
mov
sub
icebp
pop
mov
mov
pop
xchg
daa
sarl
xchg
ljmp
mov
je
sahf
cmp
mov
lock
lods
xor
xchg
jp
push
pop
aas
mov
scas
cli
cmp
call
dec
mov
scas
repnz
ret
cmpsb
cmp
das
sbb
jne
loop
adc
loop
nop
sbb
jge
jge
lock
xor
cmp
aaa
pop
aas
xchg
cltd
add
or
divl
fwait
push
ja
enter
test
sbb
adc
jo
scas
setl
jge
jae
sub
and
cmp
cld
xchg
xor
stos
push
mov
out
or
xchg
pusha
jle
mov
repz
dec
pop
aad
adcb
and
call
jae
push
rcrl
jmp
inc
lock
lret
mov
mov
pop
xorl
sbb
xor
rep
fisubrl
sbb
vmwrite
sbb
pop
mov
incl
aad
pop
mov
mov
sub
lahf
sub
je
in
add
ffree
orb
adc
pop
insl
jo
sbb
pushf
pop
sbb
loopne
push
xor
enter
xlat
push
es
mov
pushl
mov
js
sbb
xor
shlb
push
pusha
mov
imul
testb
or
xchg
jnp
push
mov
out
stos
repnz
mov
mov
leave
popf
jg
mov
push
xor
fcmovnb
add
adc
andl
sub
lret
inc
lods
mov
jno
lea
imull
lret
xor
cmp
popa
dec
daa
mov
ljmp
adc
mov
add
out
jnp
adc
mov
xor
push
jno
push
fcoms
sti
inc
sub
jo
je
bound
xchg
addb
pop
outsb
call
shlb
imul
clc
cmp
xchg
gs
add
or
lret
mov
out
repnz
dec
jbe
lods
fimuls
iret
pop
mov
pop
xor
sbb
lcall
sbb
xor
das
mov
hlt
divb
in
xchg
cmpl
dec
pop
int3
scas
repnz
in
mov
fiaddl
lods
add
ret
sub
jae
jbe
lods
cmp
in
out
mov
jecxz
mov
jb
in
stos
mov
cs
arpl
insb
hlt
or
adc
mov
cmp
mulb
pop
fldcw
mov
pop
adc
imul
enter
fldl
xor
out
loop
push
mov
movsb
dec
pop
sbb
sbb
xlat
pop
popa
cmp
mov
push
jb
adc
push
add
and
jns
aaa
lahf
lret
mov
scas
mov
mov
in
pop
addr16
xchg
stc
mov
inc
enter
sub
mov
jns
fs
and
imul
in
ja
idiv
fnstcw
stos
cltd
jb
push
mov
pop
arpl
sbb
cs
in
or
cs
ret
mov
and
dec
xchg
push
nop
adc
push
dec
sbb
clc
push
enter
mov
xchg
jns
sub
in
mov
adc
pop
cmpsl
jg
mov
iret
cmc
shrb
test
sbb
pop
lcall
shll
pushf
sbb
mov
sub
sahf
loope
dec
jnp
dec
mov
cmc
sbb
cli
xor
mov
dec
sbbb
sbb
or
mov
pushf
mov
mov
loope
push
cmpsl
ss
enter
jae
lods
sti
push
loope
mov
int
je
inc
shrl
adc
mov
pop
mov
xchg
lods
push
or
push
test
adc
cltd
fcomp
pop
je
mov
jno
ja
mov
ret
push
mov
call
add
sbb
cld
dec
insb
dec
addr16
pop
outsb
lcallw
data16
in
cmp
incl
ret
xchg
je
xchg
dec
jae
jno
mov
mov
and
sub
or
push
outsb
jns
xchg
add
bound
das
push
enter
fwait
sbb
insl
add
sahf
pmulhuw
mov
fsubrs
ret
pop
push
dec
dec
stos
jmp
pop
sahf
pop
jl
xorl
lcall
push
mov
rcl
inc
loopne
jle
xor
mov
pop
imul
lahf
cmc
lret
stos
ds
icebp
xchg
mov
or
push
inc
mov
adc
pop
repnz
pop
testb
jnp
icebp
push
jno
ret
gs
xchg
rcr
je
or
fnsave
mov
in
xlat
in
ret
inc
and
js
pop
or
call
dec
jns
repz
scas
pop
inc
fistps
lret
fldl
or
mov
inc
pusha
nop
stos
pop
add
scas
jo
push
mov
clc
mov
sbb
pop
add
lahf
and
jns
and
or
shr
mov
fs
jmp
lret
test
fnstcw
and
aam
notl
mov
mov
xchg
sub
dec
scas
movq
mov
rcll
and
outsb
sub
sub
xor
jecxz
push
fistl
and
test
push
fcomip
movsl
and
xchg
out
xor
mov
jnp
cmp
nop
sbb
mov
fnstsw
mov
lods
cmp
leave
mov
cmp
mov
outsl
fsubr
popf
mov
dec
out
fdivr
jecxz
cs
sbb
or
movsl
push
std
out
jns
clc
sbb
xchg
inc
and
mov
or
ljmp
inc
stc
adc
mov
adc
aaa
nop
fisttpll
in
pop
shlb
cmp
aas
adcb
cmp
outsl
push
mov
insl
xchg
jl
xor
addr16
inc
inc
jecxz
loope
sub
in
shrb
out
mov
in
xchg
out
fbld
aas
imul
sbb
inc
mov
ss
into
ret
clc
cmp
pop
xchg
push
test
cld
cmp
nopl
mov
je
pop
ja
xchg
mov
cmp
sbb
mov
fnstcw
mov
push
js
add
insl
sub
jo
cli
aas
fldt
rclb
push
jnp
mov
mov
fdivs
pop
shl
aas
xchg
sbb
sbbb
fs
jo
or
cld
adc
stc
xchg
pop
clc
popf
repz
xchg
fwait
xchg
push
and
jbe
mov
lods
dec
adc
movsb
ret
mov
mov
fiaddl
add
push
pop
xor
push
and
sbb
test
xchg
cltd
or
fildll
sbb
jns
or
xor
outsl
mov
jb
pushf
call
push
in
push
adc
lcall
cli
xor
adc
xchg
in
xchg
jp
lds
movsl
movsl
cmp
xor
or
xchg
jno
imul
push
imul
push
jno
lock
jne
ja
xchg
fildll
mov
sub
in
in
jp
mov
cmp
xor
or
inc
faddl
inc
mov
xchg
and
xchg
xchg
pop
sub
cltd
inc
mov
inc
call
rorb
dec
mov
push
or
and
insb
jl
cmp
xchg
scas
nop
iret
and
mov
jmp
loope
jge
mov
mov
xchg
xor
mov
lods
loope
lea
push
ss
das
rcrl
xchg
sbb
xchg
sub
sub
jecxz
mov
cmp
outsl
xor
loopne
jns,pt
add
adc
arpl
aam
xchg
pop
imul
dec
sub
popf
pop
pop
inc
adc
lods
mov
popl
xchg
movsb
call
jp
hlt
xor
sub
enter
pop
pop
mov
pop
lods
mov
das
repz
adc
mov
dec
mov
movb
lods
cltd
cmpsl
jb
mov
jge
pop
cmp
mov
push
xchg
pop
orb
in
add
call
dec
push
pusha
jmp
dec
aas
outsb
and
mov
mov
loop
and
stos
das
push
lods
pushf
dec
push
mov
xchg
mov
adc
jp
test
adc
push
dec
or
lods
ds
pop
and
cwtl
and
xor
scas
inc
roll
sub
push
cmp
push
dec
out
mov
data16
shr
aam
fs
inc
repz
rorl
jbe
test
subl
outsl
mov
mov
fldenv
ss
daa
inc
mov
adc
repz
push
in
or
add
pop
ret
xchg
inc
insl
shlb
movsl
adc
in
test
data16
xchg
lsl
pop
xchg
xor
scas
push
add
mov
inc
fimuls
xorb
push
push
sub
mov
lcall
dec
lret
shrl
jle
pop
xchg
daa
pusha
in
outsb
jecxz
stos
les
lods
in
xchg
cli
xchg
push
cltd
imul
dec
out
lcall
xchg
jmp
cli
sbb
data16
xlat
into
mov
aam
ds
or
jp
push
mov
jle
push
pop
mov
repnz
fldenv
push
out
push
sahf
lahf
imull
subb
test
shll
mov
jl
pop
sbb
adc
mov
or
inc
movsl
shrb
sarl
sub
sbb
and
aas
aad
cli
inc
cmc
sbb
fnstsw
pop
sub
mov
adc
push
pop
pop
pop
dec
enter
mov
xchg
mov
repz
aaa
sub
adc
cld
mov
jge
leave
cwtl
clc
dec
jbe
inc
mov
imul
xor
xchg
lods
test
or
jl
sbb
popa
mov
fs
out
adc
mov
dec
jno
iret
adc
enter
push
cmp
cmp
push
arpl
fwait
sub
adc
mov
jge
mov
push
dec
cmp
mov
pop
jo
mov
out
sub
leave
mov
test
int3
and
xor
shlb
cmp
sbb
fs
lret
mov
data16
push
xor
aad
out
push
fsub
push
imul
test
mov
imul
or
pop
sahf
sti
xchg
std
and
inc
dec
in
and
push
mov
lea
int3
leave
sbb
mov
add
xor
bound
push
lcall
mov
jnp
push
lods
mov
jge
mov
sub
or
sar
out
or
loopne
push
xor
movsl
pop
into
imul
mov
cmp
movsb
add
adc
insl
arpl
lret
inc
test
mov
xor
jg
sub
data16
stos
lock
into
hlt
fstpt
pop
jae
cmp
cld
xchg
cmp
lods
arpl
imul
inc
dec
out
or
fwait
cmp
loope
mov
lret
fiadds
mov
insl
lods
je
jge
loope
sub
sbb
or
push
xchg
sub
mov
inc
sbb
sub
mov
sti
lds
mov
pop
call
movsl
xor
iret
xor
cmpsl
pop
fcom
adc
and
incl
xchg
dec
add
lret
out
or
add
jns
sbb
test
jo
push
sub
out
mov
test
imul
xchg
jo
repz
fsubl
loope
stos
jb
in
xchg
mov
pop
cmpsb
xchg
aaa
push
bnd
insl
lret
sbb
xchg
icebp
add
dec
mov
jmp
fistl
add
pop
out
dec
mov
pop
add
test
mov
pop
push
cmp
rorl
and
mov
inc
dec
xchg
mov
mov
aaa
cltd
xchg
push
cmc
or
lds
jns
flds
mov
xchg
jg
sub
and
pop
stos
test
jb
dec
adc
testb
daa
or
dec
add
jne
dec
dec
push
adc
sub
pop
adc
pop
mov
jg
adc
xor
dec
icebp
push
cli
das
push
xchg
inc
and
scas
push
ss
or
outsb
push
push
aam
add
xor
adcb
and
fstpt
and
rcll
adc
idivb
ror
mov
inc
sbb
adc
adc
sbb
cmp
sub
subl
or
int
fdivr
or
or
popf
insl
lret
xchg
cmpxchg
repz
pop
imul
sbb
sahf
adc
mov
add
pop
stos
cmp
pop
int
out
cmp
mov
das
add
adc
sbb
push
mov
mov
jl
divb
icebp
jl
mov
aas
out
pop
mov
das
in
lret
sub
mov
ficompl
push
int3
sti
stc
out
mov
cltd
fisubl
ret
push
out
sub
jl
addr16
and
adc
gs
test
xchg
lret
mov
fdivrl
aam
outsl
sub
mov
xorb
icebp
xchg
dec
fucomi
pusha
mov
xor
mov
lret
out
lock
ss
insl
jecxz
js
int3
or
push
add
mov
pop
pop
dec
cli
dec
out
adc
add
cltd
adc
sbb
xchg
mov
and
xor
xchg
lods
outsl
out
push
roll
out
insb
xchg
fidivrl
in
mov
mov
sbb
out
and
shl
mov
cmc
push
fisttpl
lret
adc
jne
daa
mov
sub
ja
inc
scas
cmp
mov
aas
mov
push
mov
pop
lods
sub
pop
scas
dec
mov
cmpsb
lock
mov
fists
mov
fs
fldl
pop
add
pop
cmp
cmp
xor
add
dec
cli
sti
scas
int3
ret
rorb
mov
aam
movsb
xchg
mov
and
std
std
scas
push
inc
mov
jnp,pn
lret
in
pop
sahf
loop
lret
push
dec
jmp
sbb
and
pop
pusha
mov
out
enter
push
mov
out
inc
jg
or
mov
inc
lea
stos
or
cld
pop
xchg
orl
push
dec
scas
test
mov
negb
jmp
xchg
les
mov
sub
decb
mov
inc
mov
sbb
enter
cmp
sbb
inc
daa
add
lock
inc
iret
bound
mov
and
dec
push
test
dec
add
inc
xor
pop
call
popa
fistps
popf
hlt
mov
aad
pop
push
es
push
sarl
fs
lret
fsubrs
xlat
mov
lds
xchg
jns
imul
aas
sahf
in
ret
cmp
push
cmp
inc
xchg
in
pop
push
xchg
mov
pop
dec
popf
imull
hlt
rcl
imul
add
fnstcw
lds
push
jle
jle
mov
addr16
cs
mov
xor
mov
mov
lods
in
int3
ja
xchg
outsb
stos
lods
adc
adc
jbe
mov
int
in
out
mov
dec
inc
dec
or
jg
pop
push
je
je
or
fs
ljmp
or
daa
pop
mov
lret
in
lahf
movsl
mov
cltd
push
xlat
xor
and
je
mov
js
leave
out
cmc
test
pop
mov
daa
sbb
clc
lock
enter
test
jnp
daa
sarb
push
mov
jp
leave
sub
popf
jb
xchg
or
fisubs
lods
and
mov
jl
sti
mov
jmp
lahf
scas
lds
sti
pop
sti
sbb
outsl
gs
test
push
insl
outsb
addr16
mov
stos
jge
dec
xor
imul
cmp
mov
cmpb
pop
mov
sub
fnsave
arpl
adc
cmp
rcrl
mov
mov
mov
loope
enter
cld
sbb
cwtl
mov
ljmp
xchg
add
aad
and
sar
rcl
pop
cmp
into
add
sub
rclb
push
lods
ret
cmp
test
and
sarl
xchg
fistpll
mov
mov
mov
imul
pop
in
les
fiadds
add
inc
sub
stos
jne
fs
adc
sub
mov
pusha
dec
sub
addl
in
pop
gs
or
fdivr
dec
adc
xor
test
test
dec
in
mov
loop
inc
pusha
sarl
lret
fwait
mov
inc
xchg
stc
int3
cmp
outsb
lock
jg
push
loopne
sub
fwait
insl
cmp
jns
pusha
mov
push
xchg
orb
jbe
jge
dec
xor
cmp
cltd
fcompl
sti
leave
pop
pop
fst
sahf
daa
mov
mov
mov
sub
fmull
push
add
jg
adc
shlb
push
jns
in
cmpsb
daa
loope
mov
pop
fsubs
in
test
adc
mov
std
jae
xor
add
rcr
xchg
aas
inc
push
jb
insb
push
testl
es
divb
and
shrl
push
ja
jl
pop
or
dec
pop
sbb
add
loop
inc
imul
iret
ror
cmc
cmp
clc
rclb
pushw
push
cmp
and
pusha
jmp
and
mov
outsl
sahf
test
jo
stos
cmp
sbb
fsubp
loope
popa
or
xor
nop
rolb
xchg
jne
push
sbb
or
jp
and
lret
push
add
jnp
daa
or
and
inc
or
sbb
xchg
mov
lahf
loope
jl
xchg
cli
sbb
mov
jo,pn
jns
mov
rol
arpl
cmc
mov
and
in
imul
sbb
es
xor
add
inc
sub
or
div
les
int
or
clc
mov
lret
scas
lret
imul
out
ljmp
test
popf
shrl
inc
cwtl
jp
shlb
mov
sahf
or
mov
inc
xchg
sbb
leave
jmp
roll
jmp
popf
popa
into
dec
sub
ss
and
movsb
cmpsl
xchg
rolb
sti
push
pop
fld1
sub
pop
cmpsb
inc
clc
sbb
push
mov
or
xchg
das
pop
pop
push
ljmp
mov
ret
fnsave
push
mov
or
add
lahf
les
sub
pushf
push
pusha
sahf
sti
stos
add
clc
adc
push
pop
jo
into
cmp
lds
lret
sbb
hlt
sbb
or
sbb
mov
sbb
sbb
xchg
lds
ljmp
dec
repnz
push
mov
push
mov
loope
icebp
mov
xlat
sahf
addr16
inc
and
ret
lods
iret
push
cltd
pop
push
pop
pop
pop
iret
inc
mov
dec
push
cmp
adc
xchg
sub
jb
or
inc
mov
push
jae
jnp
push
sbb
cmc
mov
loope
sub
into
sub
les
stc
int3
mov
inc
inc
sti
in
mov
or
jbe
std
sahf
mov
repz
adc
mov
inc
push
cmpl
adc
jnp
push
fstpl
mov
jp
or
push
lret
cmpsb
hlt
addl
mov
adc
not
sbb
sbb
mov
lcall
pop
pop
cltd
lret
adc
and
repz
les
push
xor
mov
sub
xchg
lret
movsl
pusha
bnd
fdivr
iret
popf
out
dec
mov
ja
xor
cmpsl
cmp
lcall
dec
cmpsb
and
stos
lahf
inc
xchg
push
repnz
rcr
or
jecxz
xor
or
jo
push
sub
ret
dec
inc
mov
jno
add
mov
ret
jns
sbb
or
mov
data16
jmp
dec
xor
adc
dec
jle
sub
xor
es
es
ret
pop
pop
gs
xor
cmp
loop
repz
cmp
jbe
jmp
es
mov
pop
push
lret
test
lods
add
ljmp
int
out
pop
imul
inc
push
pop
inc
lock
cltd
xor
dec
bswap
push
loope
sub
lcall
lock
xchg
jne
inc
aas
push
cmp
sbb
adc
and
pop
cmc
jo
in
cld
jge
add
dec
dec
pushf
fucom
push
out
ret
sub
fnstenv
xchg
decb
lock
sub
je
mov
jbe
cmp
loop
repnz
popf
call
inc
iret
bound
mov
and
pop
in
xchg
shr
les
jge
xchg
lcall
and
xchg
lahf
insb
fiadds
jbe
xchg
jns
pop
psubusb
add
push
insl
sub
push
fsubrs
mov
popl
sbb
in
loope
xchg
in
adc
lods
cmpsl
inc
movsb
cmp
jp
loopne
mov
mov
pop
pushf
jle
jl
mov
cld
push
mov
jno
or
pop
pushf
lret
aaa
movsb
fcoml
push
xchg
mov
sarb
jnp
bound
ret
aaa
jge
ret
jnp
loope
jp
push
mov
pop
cmpb
into
xchg
test
mov
cltd
push
add
sbb
cmp
dec
sbb
inc
out
jmp
mov
or
mov
add
mov
jb
add
and
inc
stc
pop
js
push
repz
imul
cld
cltd
out
aaa
mov
adc
pushf
adc
cmp
inc
insb
sbb
jmp
jo
or
call
push
adc
lods
sub
clc
inc
lods
into
adc
adc
xchg
dec
jbe
js
jmp
pop
hlt
lds
sbb
jo
sbb
or
in
inc
movsl
into
xlat
push
subb
mov
lock
sub
hlt
aas
pop
xor
dec
cmp
and
mov
jmp
das
sbb
mov
fstpt
xchg
sahf
sahf
sub
xchg
sub
push
and
cld
sbb
or
mov
xlat
cs
sub
or
iret
fmuls
cmp
sub
mov
and
hlt
sbb
cld
push
ds
cld
xchg
fwait
cmp
sar
push
int3
adc
insl
test
insb
gs
in
rcr
nop
jnp
ljmp
jp
push
in
or
movsb
or
les
aas
test
inc
jb
ret
loop
inc
gs
enter
fidivl
fs
inc
stos
xor
cmp
mov
push
mov
aam
rcrl
fimuls
push
mov
jne
mov
mov
jmp
add
insb
scas
push
jno
into
leave
xchg
or
sahf
mov
cmp
pop
pop
movsb
xor
and
js
mov
dec
sbb
xor
int
inc
and
jp
mov
fistpll
sbb
xchg
lock
fsubr
popa
mov
aaa
mov
dec
mov
mov
push
pop
mov
test
repz
mov
in
jp
popa
pop
insb
sahf
push
cmpsb
sub
bound
dec
jno
cmp
jne
cmpl
pop
addr16
jae
rorl
sbb
inc
ja
push
je
adc
outsb
out
sub
pushf
mov
movsl
je
arpl
mov
arpl
std
sbb
add
les
xchg
sub
mov
lods
icebp
jp
dec
fdivs
mov
adc
int3
sub
xor
cmp
and
mov
pop
fs
in
test
movsb
mov
shrl
sbb
test
aaa
xchg
movsl
outsl
sbb
loope
inc
mov
push
jb
pop
rol
sarb
call
inc
std
push
aas
enter
sar
push
outsl
clc
rcrl
enter
or
cmpsb
pop
testl
mov
in
fimull
push
outsb
cli
jmp
or
xlat
mov
adc
pusha
xor
out
mov
pop
adc
sahf
popf
arpl
or
adc
dec
lock
sahf
lret
rcll
imul
sub
arpl
out
ds
or
mov
xor
inc
inc
fmul
enter
ss
xchg
adc
sbb
sub
mov
dec
dec
movsb
cmp
scas
push
xor
mov
and
rcr
scas
dec
das
add
sbb
call
fildl
inc
jl
insl
fsubrs
fbld
lcall
insl
ljmp
lret
subb
push
push
pop
push
add
lods
xchg
pop
enter
pusha
imul
stos
push
adc
in
add
push
pop
bound
sub
xor
in
js
push
mov
cltd
xchg
xchg
mov
stos
jne
mov
jmp
movsb
leave
jmp
idivb
scas
sahf
fistps
loop
or
xor
jp
mov
xor
cmp
lcall
add
mov
cmc
cltd
adc
shrb
xchg
mov
pop
test
pop
lret
js
les
lods
test
pop
xor
dec
jge
push
xchg
pop
cmpsl
mov
lea
add
add
das
or
dec
sbb
in
fdecstp
add
clc
das
mov
lahf
lock
movl
push
lcall
sti
jl
and
lea
nop
mov
mov
adc
pop
xor
inc
iret
push
pushf
xchg
mov
cmp
mov
and
mov
insb
pop
pushf
test
loopne
xchg
mov
hlt
lcall
outsb
leave
daa
sub
cmp
movsl
or
sar
pop
push
cmpb
push
cmpsb
pop
push
std
mov
jmp
rolb
mov
lods
inc
icebp
cmp
xchg
pop
lret
inc
push
hlt
xor
cmp
cmp
pop
mov
dec
inc
in
xor
es
push
lods
mov
and
xor
mov
mov
mov
dec
test
adcl
adc
aaa
or
std
nop
ret
push
dec
in
jno
inc
mov
mov
fdivs
dec
fsts
out
in
lods
mov
adc
ljmp
adc
push
cmpsl
sbb
arpl
mov
push
xchg
daa
mov
mov
sub
xchg
xchg
mov
in
or
fbstp
adc
jae
lods
jo
gs
cmc
pop
dec
cli
xchg
jns
xor
lret
enter
mov
xlat
test
out
dec
inc
mov
and
jae
imul
int
dec
shlb
cmp
je
push
or
imul
add
jb
or
enter
cmp
repz
xchg
mov
ds
insl
fimull
cmpb
mov
arpl
inc
daa
and
in
mov
bound
sub
xchg
lret
xchg
xchg
inc
pushf
jmp
imul
inc
cmp
fistpll
out
pusha
pop
movsl
daa
jbe
int
mov
fs
fs
cmpsb
loop
in
adc
nop
insl
bound
daa
adc
adc
or
cmp
insb
jl
push
jecxz
lods
pusha
pop
push
outsb
fstpt
fstl
ret
push
jne
jecxz
leave
add
imulb
push
das
jle
mov
adc
xchg
data16
imul
insl
ss
xchg
into
icebp
jg
and
jae
andl
or
push
andb
out
push
and
sahf
shll
test
xchg
ja
lret
inc
adc
mov
push
loopne
gs
xchg
push
addr16
or
imul
add
lcall
movsb
inc
dec
loopne
mov
xlat
imul
scas
mov
lods
mov
stos
dec
mov
sarb
xor
loopne
pop
lods
jmp
aad
jo
outsb
jge
pop
sub
and
mov
cmpsl
insl
cmpsb
outsb
stc
mov
in
jae
inc
imull
push
subl
arpl
inc
rcrb
std
or
mov
mov
mov
pop
mov
inc
mov
inc
ljmp
adc
test
nop
daa
fnsave
mov
or
int3
scas
and
pop
or
jbe
mov
lret
xor
mov
fbstp
les
jns
lock
sub
sbb
mov
fisubrs
xor
stc
cwtl
mov
cmp
inc
divl
dec
scas
push
pop
mov
mov
lcall
push
ret
pop
or
dec
fldt
or
insb
push
test
stos
ljmp
dec
adc
in
and
xor
xor
cmp
cmp
bswap
pop
pusha
push
jmp
jns
movsl
scas
cltd
ljmp
outsl
or
imul
leave
mov
subl
lock
inc
insb
add
xchg
movl
sahf
xchg
into
lods
mov
lds
xor
call
addr16
add
int3
fstpl
iret
push
sub
jo
pop
ljmp
sbb
loop
cmpsb
dec
loope
loop
mov
add
mov
dec
sbb
or
mov
hlt
add
push
dec
movsl
in
lcall
out
push
mov
rclb
xchg
mov
loopne
or
pop
push
add
sbb
insb
xor
jo
in
xchg
or
mov
and
mov
sarb
stos
jmp
ljmp
cmp
ljmp
mov
or
mov
mov
push
add
out
sbb
or
lods
mov
xor
enter
sahf
out
es
cs
imul
fstl
lock
mov
in
aaa
mov
push
test
xor
mov
xor
incl
or
pop
dec
cltd
les
ljmp
mov
incb
subl
xor
aas
lea
cmp
sub
adcb
testb
push
cli
push
mov
fadds
or
add
fs
and
pop
icebp
jmp
adc
inc
shll
xor
mov
cmp
loopne
jb
jg
cli
mov
adc
cmc
iret
aas
xor
sbb
jnp
push
xchg
ret
lods
aam
xor
lds
sub
fwait
jnp
cmpsb
pushf
bound
out
outsl
arpl
cltd
pop
jp
test
fdivrs
xlat
outsb
mov
aas
sbb
popf
pop
rorl
lahf
arpl
test
lret
add
jno
test
movl
sbb
add
mov
out
data16
mov
jle
mov
jo
scas
jae
mov
out
flds
std
xchg
rcrl
rcll
sub
pop
fmuls
dec
movsb
in
insl
mov
pop
xchg
mov
sbb
lods
popf
sbb
subl
xchg
push
orb
pop
sub
rcrl
popa
or
aad
mov
inc
xchg
aad
push
cmpsl
sbb
and
jne
outsb
lcall
mov
ja
test
jge
aas
xchg
leave
fiaddl
ret
lods
sub
ja
and
roll
daa
jl
cld
mov
sbb
mov
std
mov
call
out
js
mov
rol
out
sub
sub
fbstp
into
fsubrs
add
leave
int
xor
mov
push
aas
orl
jecxz
xlat
mov
push
dec
scas
fisubs
cmp
jbe
mov
and
and
push
jecxz
pop
or
xor
add
out
push
roll
sub
gs
cmpsl
push
mov
test
loopne
pop
pop
mov
das
xor
mov
add
icebp
sti
xchg
arpl
repnz
mov
shll
jmp
loope
cmpl
das
push
mov
aaa
push
test
jl
ja
scas
pushf
push
je
fistpl
and
js
pop
sbb
jb
add
sbb
popa
pop
cmp
push
shll
js
sbb
push
sub
dec
mov
jle
push
inc
push
mov
hlt
aaa
in
movsl
mov
lcall
jp
xchg
sbb
inc
aas
xchg
hlt
outsb
mov
jl
dec
fnsave
xchg
sub
push
sbb
jns
sbb
int3
cmpsl
jecxz
lret
jbe
sbb
inc
push
inc
push
push
cmp
les
jb
ds
sbb
mov
fcoms
xchg
mov
fisttpl
jmp
lock
pop
pop
xchg
mov
scas
je
test
inc
mov
jno
bound
pop
fdivr
mov
nop
xchg
movsb
jecxz
mov
dec
dec
or
sbb
mov
in
sti
mov
sub
adc
mov
icebp
xor
enter
mov
mov
cli
sti
cmp
dec
sub
or
push
cmp
xchg
out
into
cmp
loop
test
fwait
mov
push
repz
mov
inc
adc
lock
jmp
cltd
lds
pop
cmpb
lods
jge
imul
lock
mov
cmpsb
cwtl
fdivp
xchg
push
jns
leave
push
mov
push
or
les
and
cmp
fists
dec
cs
mov
push
loopne
nop
adc
xchg
sbb
jno
loop
add
pop
dec
loopne
mov
bound
inc
addr16
mov
or
test
mov
dec
cmpsl
mov
pop
mov
nop
push
dec
push
into
popf
cs
les
call
scas
adc
lea
push
jecxz
dec
mov
jge
dec
adc
mov
xchg
int3
subb
and
aas
jb
rcrb
icebp
mov
repnz
mov
add
sahf
dec
insl
bound
push
jecxz
lcall
or
pop
or
xor
xor
mov
pop
movsl
out
fisubs
outsl
or
mov
es
cmpl
mov
pop
stos
ret
fbstp
outsb
dec
scas
sub
shll
fcomip
call
es
xchg
aaa
cmp
dec
fcoms
jns
rorl
dec
push
push
jmp
xchg
mov
shrb
pop
jmp
lcall
out
mov
dec
lret
sub
add
add
push
push
dec
mov
add
xor
je
mov
push
cmp
add
jg
mov
xchg
add
sub
xorl
xchg
stos
dec
sub
pop
loop
insb
jmp
or
push
dec
jecxz
xchg
sbb
dec
in
sbb
jns
jge
gs
xchg
add
lret
inc
test
cmp
xchg
jg
xchg
lahf
push
inc
push
push
filds
out
icebp
push
je
in
int3
xor
fmull
xchg
xchg
dec
movsl
shll
arpl
in
mov
push
sysexit
jmp
jge
cmpsb
shll
mov
sbb
sub
dec
ljmp
insb
mov
scas
dec
test
call
insb
lock
add
jmp
mov
xor
int
sub
xchg
outsb
and
xlat
xchg
xchg
dec
cmp
push
push
xor
lret
fsubrp
icebp
out
cld
inc
fmuls
xchg
push
outsb
inc
dec
add
cmpsl
xchg
sub
push
es
cli
add
add
fwait
jns
stc
int3
fmul
into
mov
mov
xchg
sti
test
pop
fs
or
mov
cmp
in
faddp
or
xchg
in
add
mov
les
inc
add
rcrb
push
dec
test
xchg
lea
mov
dec
shlb
ficoml
aaa
push
das
insb
idivb
sub
out
adc
push
cltd
arpl
ja
or
dec
sarl
pop
cmpsl
xchg
and
or
in
sbb
ret
test
into
add
mov
pop
insl
sbb
xchg
popa
dec
lock
arpl
popf
xchg
dec
jge
pop
mov
daa
jno
mov
adc
or
cs
nop
push
inc
sub
sub
sbb
fwait
sub
add
shlb
inc
das
popf
push
xor
and
fnsave
addl
lea
or
jge
ret
xchg
jmp
daa
iret
ja
sub
lock
xchg
imul
mov
pop
int
mov
mov
jle
cli
adc
cltd
cmc
xor
imul
ret
mov
jnp
addr16
push
mov
and
jne
cmpsb
xor
cmp
mov
push
iret
js
pop
scas
and
or
sub
pop
or
lea
pop
push
mov
loopne
xchg
or
rcll
lea
fnstenv
push
sbb
xchg
pop
rorb
in
pop
fadds
push
scas
sahf
xor
jbe
mov
test
jmp
jne
fistps
pushf
cmp
push
gs
rclb
js
data16
push
pop
imul
mov
push
lock
movsl
inc
rcrl
push
pushf
sbb
xor
push
add
sbb
and
std
xor
movsl
adc
sub
xchg
sub
shlb
inc
loope
arpl
jl
aad
addb
iret
test
or
cltd
inc
mov
pop
movsb
add
lea
xchg
sub
fucomp
mov
and
sub
sub
jecxz
adc
pop
fcmovu
mov
push
xchg
pop
out
test
xchg
xor
mov
pop
stos
aam
loop
lock
fists
pushf
mov
js
das
jb
mov
movsb
inc
push
jg
sbb
outsb
or
mov
xchg
pop
inc
add
xor
xchg
adc
or
stos
ja
imul
xchg
ss
fdivrl
xor
add
ficomps
cld
cmpb
std
stc
mov
sub
aas
nop
sbb
adcl
dec
lea
or
ret
pop
lret
js
loop
jg
fsubs
test
out
xchg
pop
mov
gs
xchg
test
jecxz
leave
js
sbb
push
in
push
lods
lods
movl
fisubrl
inc
loope
or
sbb
adc
mov
and
movsl
xchg
pop
mov
sbb
cmp
cmpsb
add
scas
or
cwtl
push
mov
popa
cmpsl
adc
push
pop
mov
and
rcrl
add
stos
movsl
dec
clc
xchg
jo
sub
lret
leave
les
daa
adc
push
push
push
xchg
or
xchg
adc
and
mov
int
ss
addr16
xor
or
popl
ss
sub
jmp
ror
jns
sbbb
push
test
mov
jo
daa
or
push
adc
jp
push
or
test
and
cmp
fdivp
inc
mov
jne
jo
cmp
cmp
jbe
lods
or
cltd
jg
mov
jle
arpl
outsl
jo
addb
mov
outsb
pop
imul
sub
cltd
in
dec
xor
mov
enter
lds
jne
sub
scas
adc
jg
xchg
inc
rcrl
into
push
popa
dec
lea
jle
shl
cmpsb
push
mov
cli
add
mov
pop
pop
out
in
std
js
jbe
sahf
lods
bound
sti
xchg
aam
mov
mov
sbb
cmpsl
xchg
insb
dec
xchg
mov
cmpsl
xchg
mov
icebp
ret
ljmp
aaa
stos
or
mov
data16
jmp
pop
jnp
push
sbb
pop
testl
xor
test
movb
dec
dec
aam
repz
mov
pop
sub
adc
stos
imul
inc
xlat
iret
sub
lsl
mov
mov
lret
xlat
mov
adc
push
loop
divb
in
mov
fs
dec
cmp
inc
fisubl
mov
mov
jne
lret
push
pop
or
or
mov
loope
sbbl
mov
mov
dec
push
dec
mov
ficoml
sbb
insb
adc
lret
adc
push
add
movsb
call
sbb
mov
scas
loop
dec
into
jae
mov
out
sub
jp
mov
add
mov
shr
sbb
mov
loopne
mov
jae
in
jb
sbb
xchg
je
lret
out
shlb
jmp
or
inc
and
sub
push
adc
divb
hlt
ja
sti
dec
jns
pop
into
cmpsb
pop
dec
sub
mov
inc
sub
sbb
mov
and
push
js
mov
hlt
mov
xor
leave
sub
lods
sbb
aaa
cmp
ja
jns
mov
hlt
xlat
incl
sub
xchg
xchg
movsb
pushf
sub
mov
shl
fsubl
enter
and
xchg
mov
sub
outsl
daa
movsb
cmp
pusha
sbb
jbe
jno
cmp
jge
iret
mov
xor
popf
or
fcmovu
loope
adc
add
jge
cwtl
ljmp
out
cmpsl
cmp
sub
dec
dec
nop
ja
rorb
sbb
inc
mov
fldt
mov
fcoms
repnz
rcl
mov
xchg
mov
cmpsb
out
hlt
es
jmp
sub
xor
xchg
add
xchg
sbb
adc
imul
popf
cmc
and
lahf
les
adc
jge
push
and
call
fsts
data16
and
inc
and
xor
stc
es
cli
cmp
inc
or
adc
pop
les
ds
jmp
inc
in
fldenv
jle
insl
add
push
outsl
scas
mov
bound
jle
and
cli
dec
mov
add
pop
sar
testb
aaa
and
shlb
andb
sbb
stc
add
std
popa
adc
or
jg
and
hlt
clc
mov
lahf
sbb
fnstcw
push
push
inc
fwait
andb
mov
stos
ds
ret
sbb
and
mov
sbb
lds
jg
pop
adc
stos
pop
mov
mov
in
mov
test
lods
push
inc
js
push
test
sbb
stos
bound
sbb
lret
popa
and
leave
or
lret
mov
ds
xchg
dec
popf
mov
jo
in
ds
adc
lea
and
or
dec
sahf
push
cld
mov
leave
mov
ret
sbb
shl
imul
and
mov
mov
outsb
lahf
jnp
mov
daa
adcb
inc
mov
pop
leave
int
shl
lret
add
cmp
jge
cli
xor
outsb
fimull
test
enter
or
loopne
test
fsubrs
xchg
fwait
adc
xchg
inc
test
sub
out
push
and
ret
cld
push
ss
arpl
mov
fmuls
adc
sub
and
mov
cmp
lahf
cs
push
ret
iret
sub
fistps
addb
scas
pop
int
fs
popf
pop
jmp
xchg
insb
add
out
cld
or
mov
mov
fwait
sub
cmc
or
mov
xor
xchg
stos
dec
nop
test
cld
std
int3
clc
or
xor
sarb
int
testl
inc
cld
sbb
cmp
mov
push
xchg
dec
mov
imull
movsb
sbb
mov
cs
fisttpl
movsb
rorl
lea
movsb
xor
test
movq
pop
enter
add
aaa
push
pusha
pushf
mov
add
inc
insl
imul
push
test
cli
inc
xchg
xchg
add
mov
add
mov
push
push
mov
pushf
pop
dec
mov
mov
outsb
lahf
and
adc
mov
lds
jmp
imul
pop
sbb
cltd
jecxz
cmp
test
aam
xlat
cmp
xchg
daa
mov
sub
pushf
fisubrl
lods
jmp
fisubs
ljmp
xchg
mov
mov
adc
xchg
dec
pop
inc
add
cmpsl
cmp
pop
aam
es
ficompl
mov
aad
in
pop
cmp
lret
mov
push
rcrl
push
sarb
push
cmpsb
sub
or
nop
dec
je
sub
mov
pop
push
shl
repz
fisubrl
or
ret
ja
mov
lret
leave
cmp
gs
in
jns
cmp
in
sub
jecxz
and
pop
loope
sti
lock
fmuls
ss
in
xor
inc
ret
daa
inc
mov
pop
adc
mulb
or
adc
les
aas
push
aas
loopw
minps
xchg
andl
cmp
int
in
lret
or
hlt
stos
imul
push
mov
into
adc
lahf
jge
add
mov
lret
clc
mov
repz
mov
arpl
pop
jle
leave
cmc
sub
popf
mov
enter
pop
mov
mov
std
push
add
pop
xor
or
sbb
cmc
out
mov
in
cmovg
xchg
popw
repz
and
mov
adc
add
out
inc
cmpb
mov
fldenv
jns
aaa
jecxz
sub
out
es
mov
test
subb
bound
xchg
sbb
mov
xchg
sbb
mov
adc
dec
enter
jmp
loope
mov
ljmp
push
jmp
sbb
xlat
mov
add
shll
scas
ret
cmp
inc
movsl
pop
inc
cmp
nop
lock
outsl
and
sbb
mov
lock
xchg
outsl
jbe
pop
push
xchg
cmp
cmp
xor
int
ds
xchg
call
jl
addr16
mov
fsubl
or
push
pop
scas
shrd
pop
push
aaa
int
mov
inc
les
loope
xorb
jp
or
rcr
dec
ds
fcoml
fs
ja
mov
sub
cli
adc
ret
stos
and
rol
jg
push
loope
int
pushf
or
jo
jge
push
sub
sti
adc
test
sbb
cmp
sbb
add
sti
or
leave
cltd
push
jg
fs
sub
mov
xchg
jae
sub
cmc
push
mov
andl
push
mov
inc
mov
data16
sarb
adc
mov
fsubs
xlat
adc
outsb
out
pop
aad
pop
lcall
aas
xor
xchg
movb
std
enter
inc
aad
lds
ficoms
les
pop
push
es
icebp
adc
clc
push
jmp
cmp
mov
xor
sub
mov
mov
mov
xchg
dec
xor
sbb
cli
dec
jmp
cltd
xchg
or
dec
pop
sub
push
stc
pop
inc
mov
movsb
into
cmp
loope
xchg
pop
lods
mov
inc
inc
scas
es
mov
pop
mov
jno
sub
gs
inc
clc
sahf
es
adc
rcr
cld
inc
or
mov
dec
push
jmp
js
repz
dec
sub
push
dec
lods
aaa
mov
in
jmp
inc
ret
ret
cmc
mov
xchg
scas
mov
iret
jmp
mov
insb
repz
iret
movsl
popa
loope
pop
add
or
pop
je
mov
iret
mov
inc
cmp
and
adc
adc
cmp
inc
xchg
mov
mov
sbb
nop
dec
pusha
and
das
mov
and
add
out
mov
outsl
and
jnp
add
sub
mov
das
xchg
push
cmp
mov
pusha
icebp
sti
ja
das
inc
loop
repnz
sub
xchg
or
mov
fisubl
popf
enter
cmpsb
pusha
fsubrs
data16
daa
mov
sbb
mov
cmp
in
out
out
js
xor
cmp
leave
aas
xor
pop
test
xor
or
mov
mov
add
push
dec
mov
int3
mov
xchg
or
iret
test
mov
imul
or
repnz
adc
sbb
or
inc
xchg
or
sbb
stos
jne
xor
mov
push
mov
popf
push
push
cmp
js
mov
adc
mov
sbb
lcall
or
mov
jne
fldt
and
cmp
rolb
push
andl
adcl
xchg
inc
js
inc
xchg
out
jae
leave
sub
and
jle
mov
stos
stos
and
out
jecxz
cltd
lds
rcl
adc
ja
aas
sti
or
push
leave
movsl
js
jle
lcall
test
or
lea
icebp
add
add
rcrl
push
jb
popa
comiss
dec
aam
sub
hlt
data16
xchg
test
pop
adc
cmpsl
pop
add
test
stos
hlt
mov
icebp
lahf
pop
mov
push
cmpsb
and
out
cmp
inc
dec
mov
ficompl
cmc
xchg
movsb
fisttps
push
xor
fwait
inc
test
sbb
fsubl
outsb
mov
test
cmp
push
jae
loopne
xchg
clc
pop
jge
mov
xchg
adc
imul
movsl
inc
mov
inc
mov
repz
dec
dec
push
rcrl
pop
cltd
sbb
in
cmp
sub
popa
sbb
loope
outsb
or
out
or
mov
stos
jnp
xchg
mov
push
aad
and
inc
lret
push
mov
pop
mov
mov
adc
pop
mov
lcall
popf
mov
das
mov
or
mov
push
adc
imul
push
jl
or
inc
out
sub
nop
dec
pop
loope
cmc
xchg
sub
popf
and
mov
scas
jmp
jp
out
pop
subb
fidivl
sbb
test
pop
xchg
inc
mov
call
push
dec
test
addr16
sub
call
pop
lret
fs
or
and
mov
push
cmp
cwtl
sarl
adc
cmpsl
pop
popf
stos
in
inc
addr16
jo
sub
dec
dec
add
adc
sbb
popf
sbb
pop
repz
idiv
mov
mov
filds
mov
in
and
mov
push
cmp
jbe
cmpb
sub
xor
das
addl
add
je
fildl
ret
stos
shrl
outsb
mov
je,pn
jmp
jg
mov
aaa
sub
adc
jno
jnp
cmp
sti
mov
sbb
mov
dec
mov
das
ret
cmp
push
pop
pushf
hlt
negb
fiaddl
iret
or
fstpt
lock
adc
mov
fcom
inc
mov
insb
pop
fisubs
js
pop
dec
mov
add
mov
inc
xor
hlt
or
mov
test
stos
push
xchg
pop
cli
or
sbb
sub
adc
pop
xchg
cmp
ficompl
shrl
dec
add
xlat
mov
dec
lret
enter
xchg
pusha
mov
adc
test
cwtl
imul
mov
lret
jbe
jge
out
cmp
push
call
xchg
cltd
cmpsb
mov
daa
and
stc
cmp
cmpsb
loop
mov
pop
testb
sbb
jle
pop
out
insl
xor
cmp
add
loopne
pop
mov
mov
movsb
popa
lcall
jl
add
sti
xchg
lret
mov
andl
xor
lea
lds
cmc
sub
lods
jp
idivb
pop
inc
xchg
sub
sbb
adc
and
out
push
cs
fidivl
int3
test
sub
mov
adc
ret
shlb
lcall
rcl
cmp
push
xchg
adc
in
cli
or
mov
nop
sbb
divl
shlb
popf
cli
or
out
les
shl
or
xor
mov
dec
pushf
sahf
cmp
mov
test
push
jno
out
fldcw
and
or
dec
out
cltd
ljmp
ds
scas
ss
xchg
pop
inc
insb
mov
sti
cmc
adc
fists
or
insb
insl
in
ss
in
and
jle
lods
lock
pop
movsb
notl
adc
ss
push
mov
jl
mov
add
pop
andl
mov
add
pop
popf
or
lock
mov
int3
sti
in
sub
ffree
sbb
mov
jns
jne
or
add
xor
jg
or
cli
andb
xchg
and
jl
cmp
dec
push
mov
cld
sbb
sub
testb
in
sti
inc
mov
scas
fldt
leave
push
xor
pmaddwd
and
sbb
popf
aam
enter
ja
repz
notb
xchg
add
into
ret
push
out
sbbb
test
mov
sbb
xchg
rcr
dec
lock
outsb
repnz
ja
mov
sahf
enter
inc
test
push
xor
push
sub
adc
ret
loopne
inc
in
ds
xor
add
mov
sahf
xchg
hlt
push
nop
inc
out
xchg
repnz
into
testb
call
pusha
mov
fwait
shl
fbld
fadds
sbb
sub
sbb
leave
or
les
lock
jne
dec
add
sbbl
add
mov
sbb
xor
icebp
mov
fwait
or
cmp
notl
push
add
mov
push
rcll
lods
and
popf
xchg
sub
xchg
and
rcr
fisubs
add
into
adc
out
pop
test
pop
fsubrl
and
mov
scas
or
adc
push
aad
cmp
sub
xchg
push
xchg
inc
pop
lahf
xor
ficomps
test
sub
inc
movsl
mov
pop
scas
push
insb
dec
cmpsb
repnz
mov
mov
repz
sahf
mov
push
or
xchg
pop
ljmp
mov
mov
xor
push
test
cmp
or
jno
in
repnz
add
jl
out
jmp
xor
and
mov
cltd
inc
popa
icebp
movsl
mov
pop
inc
push
aad
sbb
je
inc
pushl
bswap
sub
test
adc
das
xor
mov
imul
popa
enter
leave
cmp
lods
ret
or
arpl
mov
mov
and
pop
and
gs
ficoms
xlat
jb
test
lea
pusha
mov
sub
and
inc
push
cmc
arpl
mov
nop
jp
fs
inc
cs
dec
repz
xor
dec
mov
test
jbe
cmp
iret
push
arpl
push
inc
jmp
mov
idivb
mov
mov
push
outsb
sbb
sub
out
push
sub
sti
cs
add
leave
loopne
sbb
mov
mov
ja
cld
jecxz
lahf
mov
jge
rorb
dec
movsl
test
inc
ret
sub
bound
pop
cmpb
or
dec
push
iret
and
nop
pop
mov
cmpsb
test
xchg
sbb
xlat
jns
dec
mov
data16
pop
xchg
mov
mov
jbe
adc
jo
xchg
mov
imul
cmpsb
nop
mov
outsb
lret
push
add
mov
stc
sbb
out
icebp
lock
push
loope
loope
in
bound
adc
mov
mov
pushf
xchg
push
push
xchg
mov
leave
jae
mov
pop
sar
lcall
or
shll
outsb
sub
dec
cmp
xor
out
loop
gs
into
xchg
movsl
sbb
cmpsl
push
xchg
mov
mov
insl
inc
mov
pop
mov
add
add
out
adc
out
dec
ret
aam
pushf
xchg
je
mov
pusha
sub
outsl
mov
jp
sbb
orl
out
mov
out
add
lret
enter
mov
pop
pushf
out
aaa
repz
push
in
addr16
in
mov
xchg
ror
insl
scas
inc
cmpsl
push
and
xlat
inc
imul
inc
mov
cmp
sbb
jns
push
sub
inc
or
sbb
xchg
js
aam
pop
and
cmpsb
sub
fldenv
cmp
push
pop
cmp
push
pop
test
mov
loopne
push
in
mov
mov
fcmovne
repnz
mov
jmp
adc
dec
or
and
push
and
outsb
add
or
outsl
pusha
bound
jg
dec
xlat
sub
push
loop
mov
lahf
pop
push
cmp
adc
mov
xchg
into
mov
push
cli
xchg
shl
je
dec
jge
insb
aad
adc
shlb
or
jns
ret
enter
test
lret
mov
fsub
lret
mul
mov
mov
add
roll
std
dec
and
loopne
test
cmp
ret
or
cs
stos
insb
pop
cmc
lock
add
jg
jge
mov
loopne
push
jnp
xchg
insb
stos
mov
push
cli
push
mov
movsl
jp
dec
dec
pop
sbb
mov
cmp
inc
leave
movb
xor
daa
aaa
xor
dec
push
popf
jg
out
xchg
mov
dec
jecxz
mov
in
push
mov
add
adc
out
das
ds
jg
lods
xchg
lret
jg
lods
pop
daa
add
sbb
sub
jb
or
mov
andl
push
xor
stc
inc
sub
insb
lds
sub
ja
mov
js
rcrl
sbbb
push
clc
pushf
into
mov
es
pop
xor
add
sbb
sub
sub
imul
xchg
fldl
fcoml
mov
in
je
pop
pop
shll
xlat
fistpl
lds
loopne
lahf
xchg
mov
dec
inc
pop
lock
push
movb
dec
lods
xor
push
cs
adc
sub
and
subl
xor
dec
mov
mov
adc
lds
imul
or
out
addr16
cmp
into
clc
lret
sbb
fs
or
or
out
dec
bound
inc
mov
xchg
push
out
mov
xchg
jp
xchg
jge
in
jle
mov
int3
add
fs
and
insl
notb
xchg
jnp
call
lock
jecxz
test
in
lock
add
out
jne
popf
jns
mov
shrl
incb
or
xchg
adc
jp
leave
orb
jmp
xchg
cli
push
popf
mov
lods
lcall
cs
shll
popf
popf
jno
or
adc
push
das
ret
into
test
fdivrl
out
movsl
test
mov
movsl
movsl
pusha
movsb
xchg
push
cwtl
adc
mov
inc
test
and
pop
cmp
mov
xchg
cmc
repz
insb
mov
or
push
dec
je
sub
add
inc
add
popa
fs
xor
mov
sub
es
inc
inc
inc
iret
sub
pmaxub
insl
popa
ds
dec
iret
inc
lea
in
cli
and
je
lcall
pop
xor
jmp
sti
sub
fsubrl
fidivrl
enter
fdivl
adc
mov
in
jg
xor
sub
jge
lcall
movsl
scas
test
push
testl
push
sahf
add
and
andl
and
sbb
sbb
jg
loop
shlb
mov
push
fistpl
push
add
pop
flds
mov
out
dec
cltd
push
jg
xchg
pop
fdivrl
push
cld
pop
mov
das
lock
xchg
pop
xor
addr16
add
popf
shrb
adc
and
in
les
dec
mov
mov
and
inc
cmp
xchg
cld
mov
xor
push
inc
movsl
aaa
mov
sbb
dec
std
add
inc
inc
pop
stos
xchg
loope
dec
out
mov
iret
cmp
push
js
js
stos
arpl
sub
movq
and
setns
jo
xchg
or
jno
stos
into
jl
int
inc
add
leave
adc
push
jmp
mov
aam
fst
in
int
sbb
xor
adc
test
xor
xor
popa
lock
sbb
jns
add
imul
pop
in
mov
and
inc
inc
imul
outsb
je
pop
icebp
and
pop
ret
sbb
mov
ret
sti
daa
js
and
sub
lods
ds
push
mov
jne
mov
jb
xchg
ss
rclb
push
cmp
adc
sbb
push
pop
enter
mov
cmpsb
dec
shll
sbb
jbe
daa
psubw
andl
push
js
xchg
setne
and
dec
jns
cli
push
scas
lods
inc
gs
adc
cmp
jl
and
hlt
inc
jecxz
xorl
mov
shr
sbb
int3
loop
arpl
xor
repnz
loop
mov
aaa
pop
mov
dec
test
icebp
push
lcall
fistpll
push
inc
add
repz
add
mov
push
pop
enter
mov
mov
mov
mov
and
test
cmp
orl
lret
fisubrl
outsb
jmp
or
mov
sub
xor
jae
dec
leave
sbb
or
dec
push
sbb
jo
out
inc
xchg
dec
fidivrs
shrb
gs
scas
push
fldenv
add
adc
leave
mov
je
repnz
add
sbb
out
fcoms
mov
imulb
leave
mov
mov
sbb
sbb
push
add
adc
imull
loop
dec
mov
mov
mov
xlat
mov
jae
add
clc
sar
push
mov
je
popf
adc
add
pop
xor
adc
and
insl
lret
out
clc
lahf
adc
call
call
outsl
loope
loopne
pop
les
subl
cltd
insl
pop
jno
mov
adc
mov
movsl
push
imul
cld
scas
bound
lahf
das
adc
and
mov
mov
out
mov
mov
add
push
in
cs
pop
xor
inc
enter
mov
cmpsl
rcrl
or
push
rolb
mov
pop
mov
mov
jae
cmpsb
dec
cld
test
aam
adc
mov
lcall
mov
ficompl
adc
gs
cmp
test
cmpsl
pop
addl
jecxz
push
fldt
icebp
sub
xchg
vucomisd
daa
cwtl
sti
mov
out
pop
mov
sub
lcall
sbb
mov
arpl
out
arpl
or
es
dec
notb
and
push
shl
cli
add
jno
or
sbb
fnsave
sub
and
popf
add
fildll
in
adc
sbb
scas
loopne
emms
xchg
ljmp
repz
pusha
cmp
dec
adc
jecxz
mov
shlb
add
mov
and
push
sbb
push
and
jns
xor
add
and
jg
lods
je,pt
arpl
add
scas
test
mov
insl
ret
add
inc
out
addb
jecxz
shll
fsubrs
add
push
jno
xor
or
cmp
addb
jnp
add
test
das
push
adc
mov
sbb
sub
leave
xor
lods
sbb
dec
mov
ljmp
out
lret
sub
dec
xchg
and
sbb
arpl
cwtl
cmpsl
push
mov
pop
lret
out
stos
jg,pt
btc
push
movsb
sub
mov
jg
mov
loopne
and
xor
push
stos
orb
std
pop
cmp
adc
bound
int3
add
sbb
cltd
or
loop
repnz
test
loop
sbb
inc
xchg
loope
pop
fidivrs
addb
rolb
arpl
dec
pop
scas
and
lahf
dec
je
jne
pop
pop
fstpl
cltd
mov
test
movsl
mov
xor
and
cmp
lcall
sub
push
jbe
adc
ja
out
sti
push
call
sbb
and
push
pop
or
inc
leave
xchg
inc
subl
sti
dec
fldl
and
lret
sub
in
rcl
push
aaa
dec
jns
out
fcoms
daa
jnp
and
pop
js
test
je
mov
push
jg
mov
pop
dec
mov
sbb
test
and
mov
outsl
jns
sub
push
xchg
testl
lahf
js
and
outsl
stc
inc
icebp
xor
or
imul
fisubrs
popa
mov
sbb
mov
mov
pop
cmpps
dec
inc
scas
cmp
leave
xchg
addb
inc
nop
add
lret
inc
push
push
pop
xchg
fstpt
in
xchg
jmp
add
inc
dec
inc
push
fiaddl
pop
pop
icebp
dec
mov
xchg
test
jl
cs
add
faddl
ret
pop
mov
addb
pop
stos
pop
mov
inc
lcall
dec
stos
xor
divl
xchg
rcrb
sub
call
ljmp
sti
lods
pop
jmp
scas
mov
fs
dec
andb
pusha
rcrb
pop
lock
xor
sbb
or
pop
sub
xchg
push
xlat
mov
mov
enter
add
in
push
xlat
ljmp
stos
addl
add
jp
std
mov
adc
testb
aam
mov
call
add
pushf
mov
mov
fstl
test
pop
add
pop
mov
fists
pushf
sahf
jl
mov
xchg
out
mov
in
sbb
or
pop
vpshufhw
addr16
out
and
js
int3
push
int3
sub
jo
jle
adc
ja
inc
xchg
cmp
inc
jne
and
cmp
jb
pop
mov
cs
ret
inc
jmp
mov
incl
outsl
ret
js
inc
mov
icebp
fmuls
in
push
xor
nop
in
std
in
push
test
pop
daa
pusha
mov
sub
push
mov
ficomps
subb
dec
xor
cltd
push
ret
dec
push
fsubr
mov
in
scas
iret
cmc
mov
jmp
inc
mov
popf
test
in
out
mov
sti
mov
jle
cmp
arpl
push
idiv
mov
ljmp
nop
rorb
movsl
jl
lock
idivl
fisttpll
mov
or
sub
ljmp
mov
and
jo
inc
mov
gs
xor
jge
push
fwait
pop
sbb
mov
and
out
fwait
shrb
repnz
or
mov
mov
sub
xor
mov
out
cwtl
ret
mov
or
fs
orb
mov
cld
movsb
mov
pushf
movsb
xchg
repz
mov
jne
sti
and
ret
mov
jb
adc
int3
fistps
jg
pop
dec
imul
movsl
push
mov
cmp
mov
push
mov
ficomps
clc
pop
xchg
xchg
or
imul
iret
cmp
mov
out
out
cli
lea
jg
ffreep
xlat
sbb
mov
lahf
dec
xor
mov
lret
mov
mov
dec
mov
cli
std
dec
or
mov
outsl
mov
push
mov
push
or
sub
ljmp
pop
fwait
sahf
pushf
mov
adc
stos
mov
int3
fstpt
jo
jecxz
sub
dec
push
and
repz
aam
xchg
ja
dec
inc
jp
lret
cmp
cmp
and
imul
xchg
inc
inc
repz
out
dec
lods
shr
loopne
mov
pusha
sub
dec
inc
adc
add
ljmp
adc
js
imul
das
dec
sub
xor
sbb
fsts
stos
hlt
insl
jae
stos
fstp
push
sbb
shl
jmp
inc
add
insl
enter
push
push
adc
stos
mov
scas
sbb
lds
aad
jns
addr16
mov
push
ja
aaa
in
out
and
adc
jp
cmp
mov
das
fisubrl
pop
insb
lret
add
mov
shl
mov
cmpsb
pushf
push
pcmpeqw
xchg
adc
or
cwtl
daa
adc
xor
push
insb
inc
mov
subl
cld
shlb
mov
mov
pop
xchg
js
adcb
stc
sahf
icebp
pop
lock
xchg
cli
mov
mov
fisubrs
outsl
sub
mov
or
pop
in
sub
test
je
push
scas
jg
icebp
push
imul
stc
jae
insl
dec
loop
adc
inc
dec
rcr
loope
insb
sbb
enter
clc
dec
dec
adc
pop
dec
xchg
pop
pop
repnz
cli
mov
dec
in
pop
push
insb
jg
dec
iret
loopne
lock
mov
repnz
sbb
popa
sbb
and
jae
push
sbb
dec
lea
cwtl
mov
xchg
pop
jmp
das
movsb
dec
xchg
jnp
inc
fsubrs
mov
int
add
inc
push
ret
lods
sahf
iret
xor
mov
loope
jbe
hlt
stos
fwait
mov
fsub
shld
aas
jp
vmovdqu
call
push
jne
push
es
popf
pushf
stos
fisubl
aad
faddp
in
or
pop
fld
cmpsl
imul
mov
push
push
addr16
int
cmp
nop
les
into
sbb
fmull
lcall
lea
xchg
mov
push
repnz
lret
pop
lcall
int
iret
jle
sub
jne
fidivrl
int
add
mov
pusha
outsl
or
jb
jle
jmp
jmp
cmc
mov
mov
fnclex
bound
pop
push
pop
pop
dec
cmp
jne
aaa
test
jbe
jbe
rolb
das
addr16
ret
test
adc
std
dec
scas
adc
in
dec
jns
jge
es
sbb
push
mov
cs
rcrl
daa
in
int3
cmp
addb
dec
and
inc
xchg
inc
inc
dec
std
xchg
and
pop
es
add
inc
inc
mov
repnz
pop
mov
jns
pop
in
xor
arpl
mov
lea
stc
js
dec
ret
js
hlt
pop
xchg
push
dec
adc
jnp
out
jl
popf
icebp
push
push
test
sub
js
iret
xor
fs
and
pop
dec
cld
xchg
test
outsl
cmp
inc
jle
test
jns
sbb
lea
outsl
cltd
adc
pop
movsb
mov
adc
mov
mov
icebp
popf
add
clc
inc
sub
fcomip
jl
aas
js
jecxz
adc
lods
hlt
xlat
mov
mov
js
lods
push
dec
bound
scas
cmp
out
int3
in
sub
sbbb
adc
int
mov
sub
divl
psrld
popa
ljmp
stos
shll
aaa
shl
push
jecxz
inc
and
rep
sub
outsb
fimuls
movsl
iret
dec
pop
xchg
adc
and
pop
pop
insl
pushf
pop
loopne
lcall
leave
dec
inc
inc
jnp
pop
mov
mov
rol
mov
mov
mov
add
mov
fistpll
and
jmp
adc
je
test
daa
out
mov
lds
ds
adc
sub
in
jecxz
aaa
test
loop
data16
jno
ljmp
push
shrb
es
jmp
pop
in
repnz
rcll
mov
sbb
add
loope
mov
xchg
ficomps
mov
icebp
out
fcmovb
jb
and
fstps
adc
dec
in
jp
mull
out
ja
xor
outsb
jb
movsb
sbb
vpackuswb
sub
mov
sub
and
sub
sbb
add
jle
dec
test
loopne
add
xchg
enter
jl
js
jg
pop
jge
jg
dec
sub
stos
cltd
adc
fs
add
mov
imul
adc
xchg
inc
xor
push
lea
fcoml
lods
sahf
cld
clc
lock
faddl
ja
inc
sub
repnz
scas
push
negl
pusha
add
pop
lock
push
cmpsb
mov
xchg
mov
fwait
lods
push
cli
dec
push
rcr
xchg
cld
enter
sub
mov
push
xchg
outsl
int3
aaa
adc
in
iret
cmp
andb
imulb
sub
mov
insl
mov
cmc
in
addl
xchg
xchg
out
jo
cmpsb
sub
add
push
jmp
xor
lock
sbb
insl
lock
ss
lods
int
adc
adc
jg
jb
loopne
inc
jne
sbb
push
lods
int
mov
into
data16
and
mov
xchg
xor
push
mov
or
mov
into
mov
jno
cs
dec
cwtl
iret
and
pop
xchg
push
dec
mov
jae
xor
push
adc
pop
dec
cmp
iret
pop
pop
les
mov
xchg
or
inc
jae
test
mov
xchg
jp
add
mov
outsb
ret
js
fimull
add
out
imul
pop
mov
or
icebp
mov
inc
das
cmpsl
mov
adc
mov
arpl
out
and
aaa
mov
shrb
sbb
mov
outsb
push
add
jmp
sarb
aas
pop
test
inc
insl
and
and
in
xor
test
dec
cmpsl
insl
sar
in
push
jne
out
dec
sbb
or
imul
xor
sbb
sbb
mov
ljmp
dec
scas
aam
mov
iret
adc
push
sarl
cmpl
push
add
xchg
mov
mov
pop
xor
inc
aam
mov
popf
int3
mov
and
adc
mov
cmp
fisubrl
divb
daa
pop
push
or
std
xlat
jmp
loopne
pop
cmp
fs
fistps
push
and
les
xchg
mov
sbb
xchg
pop
into
fwait
repnz
icebp
xchg
jmp
bound
sbb
stc
test
mov
sbb
or
xchg
cmpsb
jg
mov
rcl
leave
hlt
mov
pop
clc
shl
inc
or
jl
push
add
in
insb
in
mov
leave
sahf
dec
inc
cmpsb
mov
cmpsl
insb
xor
mov
pop
mov
and
fwait
xchg
lret
xchg
out
in
sahf
jg
push
ljmp
and
cmc
iret
xchg
xor
pop
sbb
ja
imul
stos
aam
imul
imul
sar
jg
sub
pushf
mov
xlat
fucompp
jno
lock
and
push
ljmp
mov
sbbl
jmp
mov
out
rol
loopne
push
jns
iret
mov
pop
dec
jge
sub
fsubs
sbb
mov
inc
icebp
mov
inc
pushf
xor
ret
pushf
pop
idivl
call
dec
mov
or
push
push
inc
psadbw
mov
adc
sbb
movsb
cmp
enter
cmp
jle
pop
inc
fsts
gs
pop
push
daa
rclb
out
movsl
imul
mov
xchg
aas
jg
mov
scas
into
xchg
test
add
lcall
push
frstor
inc
sarb
in
mov
pusha
and
mov
dec
jge
inc
mov
mov
xchg
loop
hlt
std
out
xchg
popf
push
subb
jge
cmpsb
repz
jge
rcl
fdivrs
pop
pop
adc
mov
clc
sub
leave
jne
jg
test
mov
in
test
int
es
or
push
sarb
adc
push
mov
xchg
scas
cmpsb
mov
out
je
or
sub
push
xchg
xchg
pop
mov
aad
mov
pop
inc
loopne
jp
test
sub
cmp
or
mov
cmp
je
das
or
fs
adc
jecxz
sub
loopne
imul
daa
divb
inc
push
mov
mov
push
test
daa
push
jno
test
lods
lods
mov
sub
and
and
add
xor
add
cmpsb
enter
popf
adc
movsl
stc
sbb
mov
jp
pop
in
xchg
add
mov
enter
mov
cmc
jnp
movl
push
out
lcall
ds
mov
orb
aaa
pop
dec
adc
and
push
and
lods
es
in
lds
pop
mov
into
bsr
mov
addl
jbe
push
dec
fwait
mov
cmpsb
jg
rorl
mov
gs
pop
inc
xor
fldcw
cmp
iret
or
dec
jne
js
iret
or
jg
mov
inc
mov
daa
and
and
push
mov
jne
lea
bound
nop
stos
xor
dec
in
add
fdivl
mov
pop
andb
loop
ja
ja
shlb
inc
inc
mov
test
lahf
pop
test
add
xor
ret
out
push
arpl
hlt
push
pop
sub
cmc
jl
lcall
mov
into
and
into
mov
dec
jmp
mov
xchg
test
es
xlat
add
mov
pop
cld
repz
lret
and
sahf
or
mov
mov
out
add
xor
lock
dec
cmp
xlat
mov
nop
aad
sub
xchg
mov
jle
fisttps
xchg
or
sub
stos
test
inc
ljmp
aas
imul
enter
push
cmpsb
mov
mull
pop
loop
push
or
nop
mov
pop
jae
xchg
and
mov
xchg
icebp
add
push
xchg
mov
mov
push
xor
xorb
in
mov
adc
out
dec
nop
and
cld
mov
inc
mov
jmp
pop
mov
xchg
add
pop
pop
into
sbb
adc
lods
in
mov
mov
aam
mov
pop
jmp
leave
add
mov
add
xlat
dec
addr16
cltd
ret
aam
shrb
imull
push
dec
das
dec
rcrl
dec
jmp
jbe
mov
mov
sub
xchg
ljmp
fisttpll
movl
mov
pop
lea
pop
movsl
leave
into
push
bnd
int3
sub
jnp
out
fs
std
cmp
movsb
mov
clc
adc
ja
sarb
mov
ljmp
push
mov
lahf
addb
jae
movsb
mov
and
cmp
and
fs
mov
test
daa
push
arpl
loop
jmp
lahf
das
pop
mov
je
popa
jle
inc
fistps
aam
je
mov
pop
ret
dec
or
aaa
fsts
leave
mov
popf
inc
fsubr
mov
rcrb
cmp
movsb
rorl
push
pop
mov
imull
and
addr16
xchg
cmc
cwtl
les
inc
js
dec
add
xorb
adc
out
ljmp
fmuls
stos
outsb
xchg
xor
add
into
jo
hlt
dec
or
bound
adc
sahf
and
cmpsl
push
add
pop
fstpl
dec
pop
xchg
jns
std
out
push
ret
xchg
orb
jle
leave
sbb
xor
jno
mov
cs
sahf
subps
out
data16
js
add
mov
in
leave
xor
das
sub
lahf
in
push
je
mov
add
enter
arpl
mov
xor
int3
xchg
cld
cmpl
mov
lds
ret
cltd
fdivrs
sbb
mov
mov
enter
cmp
add
les
mov
ret
mov
ja
cmpsl
sti
mov
pusha
add
lock
lret
insb
aas
or
mov
sub
push
cmpsl
aam
sub
shrl
ja
xor
imul
mov
jmp
sub
stos
adc
cltd
mov
sbb
xor
xchg
cmpb
sbb
push
das
mov
dec
pop
test
sahf
cmp
ljmp
clc
loopne
inc
mov
ss
mov
inc
sbb
out
and
xchg
xchg
in
loop
fisttpl
dec
xor
sub
pop
in
xchg
in
mov
test
push
mov
daa
sub
cmp
jp
rcrl
adcb
inc
into
mov
stos
flds
push
mov
xchg
lahf
fxch
subb
sbb
cwtl
sahf
jge
fisubrl
adc
pop
mov
pop
scas
push
lock
inc
mov
aaa
cmp
or
fidivs
and
stos
jnp
cwtl
pop
stos
shlb
test
mov
inc
mov
scas
xlat
iret
cli
sub
in
fistps
xchg
add
lahf
cmp
in
shl
cltd
sub
dec
push
cmp
outsb
sbb
cli
pop
out
test
add
jl
push
sub
mov
pop
sbb
in
and
mov
pop
sub
sub
rorl
test
xor
popf
mov
lret
xlat
mov
mov
sub
cmp
cwtl
sbb
icebp
dec
pop
push
imul
clc
xchg
int
test
mov
mov
pop
push
shll
rcrb
lock
scas
dec
pop
lods
outsl
dec
ds
ljmp
xchg
test
push
sub
mov
ja
push
cmc
sbb
and
pushf
mov
loop
je
lea
pop
cmc
arpl
fld
test
rcrb
xchg
cwtl
dec
adcb
pop
mov
dec
xor
ror
es
mov
adc
mov
push
mov
orb
aam
pop
insl
rcll
lds
push
dec
lds
repz
fisttpl
nopl
xchg
leave
xchg
aaa
dec
jp
mov
testb
cmpb
xor
dec
sbb
sbb
and
addr16
mov
imul
inc
sahf
ffree
jl
xchg
shrb
mov
lods
pop
and
push
push
mov
jae
ds
gs
dec
mov
iret
or
pop
xchg
insb
dec
in
ret
sbb
loop
jmp
cs
dec
pop
cmp
mov
pop
pop
xchg
push
xlat
imul
lods
ljmp
and
in
scas
sbb
das
gs
pop
dec
adc
ja
ja
stos
sbb
sub
cmp
js
nop
je
loopne
jne
je
xchg
in
in
hlt
lods
jno
jp
int
cli
cmc
push
push
pop
sbb
lret
xor
adcl
dec
je
inc
clc
xchg
mov
mov
sbb
mov
sub
push
and
daa
add
iret
add
or
adc
call
pop
mov
les
es
fnstenv
jno
pop
inc
inc
cmpsb
test
mov
cwtl
es
lea
clc
gs
loopne
xor
lret
dec
xchg
push
aam
movsl
lods
cld
fbstp
shll
ret
adc
inc
pop
sub
adc
pop
jg
jle
rcrl
and
push
cmp
orl
divb
inc
jnp
shll
cli
mov
push
icebp
mov
sub
test
pop
fsubrs
repz
xor
mov
push
arpl
jmp
int3
repnz
aam
mov
les
xor
pushf
mov
push
cwtl
dec
out
push
repnz
js
cwtl
pop
sbb
ds
dec
cmp
mov
loop
or
mov
push
hlt
sti
dec
sub
xor
ret
insb
cmc
push
icebp
jb
push
pop
testl
pop
cmpsb
pop
int3
jge
aad
das
add
pop
gs
and
cld
scas
cmpsl
jae
and
insl
sbb
xor
add
push
dec
cmp
mov
xor
rcrl
pop
jecxz
and
mov
pop
arpl
sub
adc
mov
add
push
pop
outsb
xchg
sub
push
mov
jno
xchg
or
shrb
and
xor
mov
jo
inc
scas
pop
call
sub
cltd
repnz
xor
or
outsl
mov
or
add
negl
mov
stc
sarl
push
lcall
or
sbb
insl
dec
jne
arpl
imull
mov
fnstsw
cli
test
icebp
or
clc
les
cmp
mov
pop
xchg
iret
testb
adc
out
dec
sub
xlat
dec
pop
mov
sahf
lods
movsl
mov
mov
mov
inc
into
adc
mov
xchg
test
shll
push
xchg
mov
mov
insl
mov
jecxz
fdivrs
pop
popf
mov
xor
pop
add
data16
xor
loop
popa
mov
shrb
call
movsb
and
cmp
jg
xlat
mov
xchg
test
subb
adc
push
js
pop
add
ss
fs
ret
add
sub
push
cwtl
mov
mov
stc
filds
xchg
jp
insl
pop
ss
shlb
rol
or
sub
rcrb
inc
nop
repz
adc
add
ljmp
or
sahf
in
xor
callw
ret
jne
jl
repnz
jnp
ds
mov
fisubl
bound
inc
xchg
push
and
sub
call
jl
hlt
mov
sub
sbb
cltd
loop
sbb
int
pushf
push
xchg
es
sbb
hlt
mov
pop
mov
pop
in
adc
mov
pop
cmp
addr16
or
sti
ss
fdecstp
movsb
dec
mov
cmp
jb
stos
or
scas
or
hlt
aas
shll
xor
je
sbb
push
xchg
gs
jo
jne
mov
dec
out
cmpsl
fstps
call
pop
xchg
and
shl
jecxz
sub
cmp
pop
sbb
cs
aam
iret
lods
imul
xor
pop
mov
inc
dec
lea
pop
out
inc
cmp
jmp
jmp
rorb
pop
sbb
jns
jecxz
pop
aad
inc
pop
movups
lahf
lock
clc
es
push
jl
add
iret
movsl
cmp
repz
xchg
hlt
bound
repnz
pop
push
adc
inc
push
dec
mov
dec
pop
std
pop
ror
pop
popa
fcompl
sahf
xchg
ljmp
pop
stc
repz
jp
cmove
add
or
push
cs
xor
movsl
mov
dec
mov
int3
pop
sub
pop
outsl
jecxz
pop
inc
xor
lret
rcll
add
pop
mov
jbe
cld
xor
dec
mov
xchg
jge
mov
dec
lret
jns
leave
xor
sbb
xchg
jo
lds
nop
sub
mov
out
xor
inc
test
fisttps
jae
dec
test
lahf
pusha
pop
ret
jle
rcl
and
cmpsl
test
insl
lret
lcall
arpl
xchg
idivb
cmpsb
repz
repnz
cs
adc
pusha
push
shrb
sub
mov
es
dec
jns
sub
lcall
and
pop
cwtl
dec
ja
adc
pusha
es
bound
rclb
and
inc
inc
fwait
adc
outsl
test
repnz
or
xchg
rclb
xchg
mov
cs
cmc
cwtl
stos
dec
sbb
inc
fldl
ret
sbb
fidivrs
dec
push
xchg
mov
out
jg
les
cmp
push
decb
or
sub
pop
mov
das
cmp
es
fs
mov
cmp
xchg
xchg
cltd
faddl
push
sbb
jl
mov
fwait
sbb
push
adc
sub
cmp
shl
pop
jg
repnz
fs
aas
inc
push
mov
or
add
lcall
popf
sti
xor
gs
xor
pop
xor
ds
push
pusha
mov
mov
lcall
stos
lock
arpl
pop
les
mov
adc
kxnorw
mov
les
or
add
dec
lahf
push
shll
data16
dec
stos
or
or
dec
cmp
jno
sub
cmp
xor
xlat
adc
and
ja
imul
iret
pusha
sbb
gs
sti
rcrl
pop
and
daa
inc
lahf
or
sub
cmpsb
sub
lahf
dec
popf
lds
pop
mov
sub
push
jl
pushf
dec
test
nop
cmc
mov
enter
in
mov
mov
inc
pop
adc
mov
imulb
cmp
sub
rcrb
and
pushf
add
cmp
pop
in
in
add
pop
sbb
mulb
dec
addl
pop
les
out
mov
add
cmpsl
push
ljmp
pop
mov
ret
js
mov
mov
cmp
sbb
jb
inc
icebp
adc
fs
sub
into
lods
in
cld
xchg
enter
jge
dec
mov
sbbl
sahf
hlt
lea
and
dec
int3
adc
clc
mul
mov
insb
repnz
dec
bound
rorb
jo
les
dec
or
mov
daa
mov
or
jne
loopne
iret
test
popa
int3
pop
push
stos
sar
jg
mov
insb
and
test
mov
pushf
inc
sub
iret
out
add
mov
not
mov
mov
rcr
xor
insb
aam
cwtl
flds
pop
popf
out
push
lods
cmp
push
out
mov
mov
test
push
dec
mov
inc
out
cmp
gs
jle
ss
lds
inc
pop
xor
mov
jmp
push
xchg
stos
push
repnz
cmpsl
inc
sub
inc
dec
lock
jae
subl
loope
xor
test
negb
into
ret
bound
stos
sar
mov
ja
push
sub
das
loope
loop
cmp
mov
test
rorl
xor
sbb
out
test
fdivrs
pop
mov
dec
pop
mov
in
dec
sarl
les
insb
dec
xor
das
out
in
xor
adc
inc
dec
jle
adc
mov
fsubrs
pop
push
fs
test
addr16
lret
inc
sbb
mov
daa
sbb
xchg
pop
js
fwait
push
adc
nop
sub
lahf
xlat
xchg
js
imul
and
push
sti
pop
push
push
orl
cmp
lods
mov
ss
sub
cmpsl
lods
data16
pop
sbb
push
mov
cmpsb
in
negb
pop
and
ret
jns
push
mov
pop
pop
xchg
mov
mov
daa
fildl
add
mov
xchg
and
imul
fsubrl
in
or
dec
push
cmc
pop
out
pop
in
dec
adc
xor
adc
jp
dec
inc
add
lods
add
jg
or
mov
sub
xchg
pop
arpl
xor
fstpl
scas
addr16
inc
mov
sub
movsl
jno
scas
cli
icebp
out
push
or
into
mov
jl
insl
outsb
xor
adc
enter
inc
mov
xchg
adc
jl
push
pusha
pushf
cli
jge
fwait
adcb
add
das
sbb
add
xor
xchg
in
fsubrl
pop
loopne
cs
es
xchg
sbb
xlat
scas
clc
cli
or
bound
aaa
subl
mov
jecxz
cmp
pop
dec
xchg
popf
in
fnsave
stos
fs
aad
pop
add
adc
sub
cmp
ss
aad
insb
psubusb
push
xchg
jns
jge
inc
fs
sub
adc
lret
imul
inc
fucomi
sahf
pop
cmp
rcrb
push
add
das
xor
sub
arpl
stc
in
or
mov
rclb
xlat
add
enter
xor
out
call
inc
push
sbb
in
lods
sub
imull
ss
cmpsl
test
lock
ja
loopne
lret
out
cmp
inc
or
ret
pop
test
movsl
ffree
lods
mov
dec
movsb
inc
addr16
inc
pop
pop
add
adc
les
idivl
mov
add
inc
sub
adc
mov
dec
jns
in
ja
idivb
in
lret
repnz
fsts
ja
fimuls
insb
xor
cmp
xchg
into
insb
xchg
xor
jecxz
dec
push
dec
das
ret
push
mov
pop
incb
inc
lods
adc
insl
inc
out
int3
sarb
mov
jge
mov
and
mov
cmp
stc
add
in
add
sti
or
xorl
repnz
mov
mov
pop
cld
andl
bound
cmp
mov
out
sbb
xchg
sub
rcl
lcall
stc
xchg
fs
roll
mov
add
mov
jp
in
inc
test
jo
cs
mov
int3
sbb
push
call
lret
mov
cmp
xor
leave
outsb
ljmp
movsl
or
lret
in
in
je
mov
pushf
mov
mov
xchg
cmc
cmpl
pop
aaa
mov
sbb
cmpsb
inc
sub
inc
add
nop
mov
jbe
jp
lea
dec
std
insl
sahf
mov
pop
hlt
push
fbld
hlt
lea
cmp
cwtl
or
iret
pop
xor
mov
in
test
push
jmp
add
jle
scas
add
nop
movsb
fnstcw
ja
add
sub
aaa
xchg
dec
scas
lret
addl
or
aas
jmpw
add
daa
pop
insl
jae
lahf
std
lds
inc
outsb
inc
addl
xchg
jl
cmp
pop
adc
fmuls
leave
sarl
das
cmp
or
push
test
adc
mov
repnz
push
mov
call
test
bound
jns
jge
and
sub
arpl
clc
mov
fadds
scas
or
adc
push
inc
enter
fs
mov
cs
nop
fsubl
add
jb
loope
mov
pop
sar
movsb
mov
mov
int3
push
addr16
fstps
nop
call
mov
jno
lret
cwtl
data16
add
shll
or
mov
inc
xor
add
jno
inc
cltd
lds
fcomps
adc
adcb
shl
add
loop
in
sub
clc
mov
mov
pop
repz
xchg
lods
jnp
lahf
popf
js
bound
call
inc
shll
mov
adc
das
jae
cmpsb
lods
xor
mov
sbb
movl
pop
pusha
cld
fisttpl
and
add
cwtl
push
or
call
ds
pop
jns
mov
mov
pop
and
xor
adc
jnp
mov
lret
mov
out
mov
add
mov
jbe
test
mov
cs
mov
and
xor
fbstp
cmpsl
lcall
test
xor
fdivrs
lcall
or
xor
fs
cmp
mov
lods
out
pop
dec
and
add
sub
into
orl
mov
or
fstps
cmpsb
add
mov
push
adc
std
aas
movsb
or
adc
inc
insl
out
adc
jmp
mov
inc
mov
mov
dec
fwait
in
fldt
sub
scas
cld
test
lret
ud1
inc
sub
lock
sub
and
and
mov
icebp
xor
lahf
mov
mov
pop
test
jae
movups
fdivrp
inc
imul
pop
popa
add
dec
sbb
push
mov
hlt
jecxz
adc
inc
or
out
outsb
sahf
xlat
push
sbb
pop
mov
into
movsb
add
adc
iret
adc
shlb
pop
cmovs
inc
mov
inc
mov
xchg
push
push
outsl
mov
push
sbb
arpl
fsubrs
sub
jnp
xchg
inc
pop
mov
jecxz
xor
sbb
cltd
fwait
scas
hlt
xchg
mov
icebp
adc
repz
addl
mov
or
jmp
fisubrl
push
add
mov
iret
insl
cmp
mov
sbb
leave
aad
mov
xor
std
mov
cltd
dec
pop
mov
cmp
push
faddl
je
fwait
rcll
cs
roll
inc
cwtl
dec
add
sbb
mov
fnsetpm(287
loop,pn
in
stos
sbb
ljmp
add
jmp
dec
leave
add
jb
and
adc
xchg
sti
out
jnp
int
ret
imul
in
xor
mov
jne
jp
rcrl
adc
push
xor
lods
or
imul
inc
push
mov
idivl
enter
dec
shll
xchg
jp
xchg
hlt
enter
fwait
ret
and
dec
pop
roll
stos
push
adc
push
cli
push
dec
xor
and
mov
add
incb
xchg
movsb
xchg
enter
fadds
dec
mov
dec
shrl
scas
mov
aas
add
mov
nop
push
cli
fsubrs
jmp
fnstsw
push
popa
sub
sbb
cwtl
inc
in
dec
push
pusha
icebp
adc
dec
xor
das
jg
or
lcall
and
gs
push
add
ja
xor
imul
mov
push
lahf
imul
aad
mov
pop
mov
mov
mov
sahf
aaa
std
js
int
jmp
test
ficompl
xor
jg
aaa
inc
es
and
mov
clc
daa
or
sarb
jno
mov
adc
inc
dec
cmp
mov
into
movsb
xchg
jle
pushf
hlt
cmc
xor
and
ljmp
pop
and
rcll
mull
and
mov
jo
xor
lret
push
fstpl
or
pop
ljmp
ret
inc
dec
xor
pushl
repnz
mov
and
icebp
ret
fnstcw
mov
jbe
in
push
testb
xor
jns
mov
pop
ds
stc
ja
push
iret
pop
add
mov
push
mov
addb
mov
lcall
lds
mov
shll
dec
push
push
mov
sub
push
xchg
push
ja
data16
fmull
into
mov
test
adc
std
sahf
xlat
and
ljmp
stc
lahf
scas
jle
pop
fnstcw
jbe
fdiv
pop
jg
ret
adc
cwtl
inc
flds
pusha
push
cld
ljmp
inc
push
js
cmp
jecxz
cli
pop
xchg
or
sub
xchg
fisttpl
sub
xabort
lods
fisubl
cmc
and
push
inc
xchg
pop
push
into
cmc
pop
cmpsl
cmp
cmp
cmp
hlt
cmc
push
lret
cmpsl
rorl
jns
shlb
int
pusha
rol
jge
cmp
cld
mov
in
iret
lcall
pushfw
adc
sti
mov
sbb
mov
or
out
daa
fdivl
mov
lock
or
add
sarl
mov
sti
loop
scas
inc
cmpsb
push
jge
mov
enter
popa
cmp
adc
dec
addr16
repz
mov
aam
pop
sub
mov
and
push
js
push
cltd
pop
sbb
jo
adc
les
mov
jge
sub
cld
adc
lea
mov
into
mov
dec
mov
xlat
dec
in
out
xchg
add
sbb
xor
add
xor
mov
subl
mov
leave
ja
stos
push
mov
jne
jg
adc
xor
pop
adc
test
mov
imul
sbb
pop
outsl
cs
int3
shlb
jl
fisubs
or
lret
pop
inc
or
mov
or
mov
nop
dec
jbe
hlt
push
leave
out
test
out
pop
fnsave
in
aad
nop
stos
dec
ljmp
sub
dec
loopne
cmp
push
ss
dec
fmuls
paddsb
insl
xchg
sbb
sbb
jno
sbb
push
mov
sbb
lock
xchg
and
jae
and
pushf
mov
sub
push
testb
sbb
std
call
xor
push
pop
lret
ret
lcall
call
adc
pop
mov
xchg
movsl
loop
xchg
pop
mov
push
xor
cmpsb
popf
jmp
xor
or
add
or
xchg
pop
js
and
mov
sbb
ja
mov
iret
scas
aaa
push
stos
cmp
clc
repz
data16
push
add
cwtl
loop
xor
loopne
aas
jmp
and
sahf
xchg
and
sahf
add
cltd
xor
imul
leave
scas
cmpsl
lods
dec
xlat
jmp
add
aam
jbe
mov
pop
shrl
addl
adc
dec
clc
dec
sar
leave
in
cltd
push
mov
xchg
adc
lar
and
insb
scas
int
push
and
xchg
xor
outsl
mov
add
sbb
jno
sub
fstpl
and
xchg
test
lahf
pop
ja
xchg
or
sub
addr16
lea
aam
rcll
insb
xchg
ret
movsb
aad
xchg
imul
jne
cmp
roll
and
mov
loope
dec
icebp
fstps
mov
xchg
in
or
mov
in
ret
adc
dec
sub
mov
aas
outsl
pushf
or
xlat
jne
mov
in
add
inc
nop
push
fcompl
test
pop
insl
add
int3
mov
imul
mov
xor
out
in
dec
arpl
stos
mov
movsb
bound
or
fstpl
movsb
jecxz
sub
out
sti
cmpsl
jg
lcall
mov
es
fistl
std
fists
scas
rorl
sbb
mov
mov
jno
popa
xchg
out
xchg
xor
dec
cmp
sarl
shlb
lock
cmp
adcl
fidivrl
add
adc
leave
es
cmovnp
xor
scas
popa
sbb
rolb
out
test
push
loope
jg
aas
pop
add
sbb
pop
push
jbe
mov
fisubrl
xlat
sub
aas
cwtl
decb
jnp
cmp
and
jge
mov
notb
inc
das
sub
inc
mov
xor
shlb
insl
dec
insb
test
ss
shll
imul
int
add
xchg
mov
iret
jb
imull
and
push
imul
test
scas
or
out
ficompl
scas
stos
mov
loopne
jo
sbb
dec
sahf
mov
stc
insl
jns
jmp
mov
fidivs
or
xlat
cmpsb
mov
mov
sbb
sub
fdivl
xchg
jo
cmc
and
inc
fmuls
push
enter
sbb
je
insl
mov
sbb
out
mov
jge
pop
das
mov
mov
aad
movb
dec
adc
sub
pop
sbb
mov
cmp
jg
sbb
sub
sar
jne
jb
inc
pop
mov
mov
test
pop
sbb
xor
fdivp
mov
andl
mov
push
adc
clc
mov
fidivrl
nop
mov
add
xor
mov
jge
add
xor
cwtl
js
bound
dec
mov
cmp
xchg
jge
push
cs
fisttpl
lea
xchg
push
cmc
lods
insl
sub
stos
mov
adc
sti
sub
push
clc
sub
mov
ja
xor
dec
jae
dec
cmp
rcrb
lret
push
ret
xor
dec
insb
sub
sub
push
leave
es
lahf
and
add
and
notb
adc
fimull
pop
inc
jmp
outsl
icebp
fs
add
dec
sbb
ret
out
in
icebp
push
les
cwtl
roll
dec
out
cmp
adc
insb
lea
push
mov
lods
in
fldl
ja
aam
lret
popa
adc
cmp
mov
and
fbstp
popa
call
or
enter
jge
fisubrs
in
sar
rcll
add
out
xchg
int
or
loop
jle
ficomps
cmp
xlat
mov
lret
into
outsl
add
jae
inc
cwtl
lcall
cmp
mov
gs
adc
pop
adc
movb
inc
jl
scas
push
pusha
std
lds
mov
jbe
jp
or
mov
xchg
and
inc
mov
push
div
push
or
in
jne
shlb
mov
inc
into
jg
push
mov
je
out
mov
pop
sbb
push
int3
std
int3
jge
dec
mov
gs
repz
lahf
dec
pop
or
adc
add
push
inc
mov
or
ss
xchg
ljmp
addb
mov
fsubr
pop
call
lcall
or
ja
loopne
pop
jbe
daa
inc
mov
dec
lret
jb
cltd
cmp
jns
out
cwtl
mov
ja
cmp
dec
test
mov
inc
insl
enter
repnz
push
imulb
jb
dec
test
addr16
mov
shrb
inc
out
mov
js
sub
pop
mov
faddl
ror
cmp
cld
mov
xchg
fs
pop
cs
daa
fs
lock
mov
out
movups
in
dec
dec
mov
mov
movsb
mov
ret
sbb
inc
ss
outsb
cwtl
push
mov
cmp
jp
idiv
push
stos
adc
cmpsb
xchg
repnz
mov
fisubrs
xchg
inc
mov
or
imul
or
jmp
or
mov
pop
sbb
mov
loop
and
and
lret
add
cmp
cmp
ljmp
lahf
inc
sub
shlb
lods
lret
mov
scas
xchg
shrl
sbb
mov
sub
mov
dec
scas
mov
dec
stos
push
inc
imul
jae
or
push
mov
dec
sbb
into
push
mov
rorb
loope
mov
scas
stc
sbb
add
mov
scas
mov
loop
les
adc
cmp
mov
inc
push
push
ss
xchg
push
pop
outsl
outsl
adc
jg
xor
data16
xchg
inc
pop
jge
outsl
push
fcmovnb
xlat
and
cmp
in
into
iret
int3
pusha
inc
daa
std
cmp
push
and
xchg
push
es
xchg
pop
js
mov
cli
inc
mov
arpl
fiaddl
dec
addl
arpl
aaa
aam
in
loop
sub
mov
adc
jo
cmp
inc
mov
mov
das
dec
repnz
lret
lret
dec
mov
out
sbbl
icebp
lea
arpl
stos
aaa
insl
add
fwait
xor
lcall
daa
out
leave
das
fistpll
lock
mov
mov
mov
xchg
adc
sub
lahf
aas
or
loope
mov
in
cmp
sub
in
popl
push
arpl
push
jp
out
xor
loope
nop
push
sti
cmp
xor
cmp
xor
lret
jle
sbb
jo
aad
mov
movsl
mov
jge
inc
fs
jge
mov
fwait
mov
mov
std
roll
add
cmpsl
xchg
movsb
mov
into
mov
or
jnp
push
dec
jecxz
mov
enter
loope
cs
movsl
xlat
mov
ret
push
enter
jmp
shl
loope
fcomip
adcl
adc
mov
sbb
xchg
mov
lods
sub
mov
xchg
pop
xchg
negl
jbe
pop
mov
mov
movswl
xor
imul
movsb
sbb
lret
scas
xlat
sub
orl
or
mov
cmpsb
outsb
shr
xchg
xor
call
cmp
into
cmp
nop
cli
cmp
mov
xchg
icebp
add
mov
push
test
in
sbb
cld
jl
fsubl
shll
xor
mov
xlat
jno
pushf
mov
ret
ret
loopne
stc
pop
mov
cmp
lret
pop
lods
fldenv
push
sub
xchg
cmp
addr16
mov
and
mov
mov
daa
xchg
fistps
imul
ret
sahf
jp
xor
in
ds
and
pop
xchg
dec
enter
adc
cmpsl
push
adc
neg
loop
cmpsb
sbb
mov
clc
aad
int3
pushf
adc
push
mov
mov
sbb
fucomip
es
scas
lods
dec
cld
ja
in
fcmovb
stos
aam
jecxz
and
jle
test
sub
cmpsb
cld
hlt
push
ljmp
stc
jne
dec
sub
sbb
dec
xchg
pushf
or
rcrl
xchg
xor
sbb
pop
sub
test
mov
mov
icebp
lret
xor
in
push
ds
mov
jl
xor
add
aaa
or
loop
or
in
adc
insl
addr16
fnstsw
dec
inc
mov
in
enter
adc
lahf
aad
add
or
fnstsw
cmp
shll
ror
cmp
mov
cmpsb
or
jo
ja
fimull
pop
in
fidivl
and
xchg
jmp
cltd
les
and
and
rcr
roll
mov
mov
aas
sub
cmp
jp,pn
adc
sahf
sub
sbb
arpl
and
push
lret
fdivr
aam
push
popf
ss
shrb
xchg
add
lcall
cwtl
push
inc
loope
adc
shrb
sub
xchg
mov
adc
ror
mov
pop
dec
jbe
mov
add
cmpsb
xor
cli
sbb
fisttpll
jmp
sbb
in
es
cmp
push
js
pop
jecxz
pop
imul
cltd
push
int
fdivrl
loop
pop
popa
jecxz
aad
int3
adc
jbe
mov
scas
addr16
jle
fsub
dec
in
mov
js
cmpl
test
adc
mov
aas
cmc
xchg
clc
aam
mov
dec
imul
mov
stos
gs
test
jns
xchg
daa
cmp
xchg
push
lods
mov
adc
loopne
pop
shll
xor
aad
push
xlat
sub
dec
jmp
dec
jmp
adc
pop
test
inc
mov
out
outsb
cmp
imul
and
xor
ljmp
orb
adc
je
xor
adc
and
mov
xchg
fnstcw
gs
mov
cmp
sbb
jns
inc
lock
adc
push
mov
les
imul
pop
fwait
mov
pop
pushf
inc
int3
in
pop
arpl
jecxz
push
push
ds
lock
dec
add
repz
loope
popl
ret
pop
add
out
frstor
std
jmp
aad
ljmp
ds
cmp
and
and
sbb
cwtl
bound
aas
es
mov
adc
mov
mov
cmp
ret
and
pop
std
fcmovnu
push
ds
push
call
xchg
mov
lock
std
je
sbb
je
and
ds
pop
pop
pop
push
lods
imul
in
pop
adc
add
mov
lret
jns
xor
mov
loope
inc
int3
out
ficomps
pop
ss
adc
out
cmpsl
jne
jb
mov
xor
push
std
pop
in
fistps
lods
add
in
sub
pop
add
fld
cld
adc
aaa
incl
mov
dec
dec
mov
mov
adc
sub
push
mov
imul
mov
jns
fbld
outsb
sub
xchg
fdivs
insl
xchg
jl
xor
inc
fsubp
mov
push
sbb
loopne
aad
scas
or
push
jecxz
push
imul
rorb
lods
mov
or
fists
mov
lcall
scas
fs
test
test
and
or
insl
or
dec
mov
repz
adc
cmpsl
pop
mov
clc
xor
xchg
xchg
sub
shrb
cmc
mov
sbb
call
dec
je
outsl
cmpb
or
icebp
lods
add
mov
dec
icebp
push
scas
fs
xchg
arpl
subps
cmp
stos
jmp
dec
mov
add
xchg
jns
fdivrl
push
pop
dec
dec
mov
xchg
inc
cmp
pop
xlat
add
cld
and
jmp
sub
sbb
mov
or
jnp
and
test
dec
mov
repz
cld
pop
lret
hlt
push
xchg
test
xlat
push
test
sub
push
cmpb
mov
pop
mov
fdivl
xchg
and
sub
jae
iret
lock
adc
mov
movsl
xchg
push
pop
mov
jle
shll
push
mov
lahf
adc
in
jecxz
dec
lds
in
nop
mov
jmp
sbbb
scas
loop
in
in
and
lock
stc
add
mov
xor
cmp
sub
mov
add
jne
arpl
idiv
adc
jp
cmp
pop
arpl
mov
das
das
outsb
and
les
xor
or
pop
loopne
and
sbb
dec
loopne
and
mov
mov
psubusb
jnp
adc
mov
cmp
mov
xchg
jg
pop
in
cmp
pop
xlat
lods
cwtl
aam
js
lret
add
push
daa
bound
repnz
gs
insl
adc
xor
mov
shrb
dec
lock
repnz
arpl
lods
or
imul
sbb
lahf
adcb
rol
lods
add
sarl
insb
or
sahf
sbb
jno
out
or
ljmp
jnp
pop
push
or
xor
bound
out
push
iret
mov
mov
cld
test
push
lock
jp
jno
xchg
scas
fisubrl
xchg
pop
nop
adc
outsl
fldl
sbb
imul
stos
fstpl
shl
fwait
sti
notb
pop
fwait
inc
add
xchg
dec
mov
pop
mov
mov
movsl
fcompl
jecxz
inc
adc
xor
cs
insl
scas
pop
cmpsl
aad
push
test
les
xorb
mov
and
test
fidivrl
stos
push
mov
jo
xchg
jl
xchg
insb
fsts
mov
sbb
testb
adc
enter
cld
inc
push
mov
in
stos
pop
imul
inc
dec
and
jle
test
or
mov
sahf
out
imul
jp
enter
adc
pop
push
xchg
or
fstp
aaa
xor
mov
dec
xchg
in
xchg
jnp
push
ret
lock
push
mov
fisubrs
xchg
push
shlb
xor
cld
jp
jp
adc
or
sub
pushf
orl
loope
jg
cmp
jle
push
adc
insl
or
xlat
jb
lret
pop
rcrl
or
test
push
inc
push
sbb
sbb
inc
data16
sub
jmp
popf
mov
mov
leave
scas
sub
movsl
dec
inc
call
sbb
xchg
arpl
movswl
xchg
imul
test
mov
clc
and
xchg
into
out
sbb
loope
icebp
js
mov
in
inc
mov
xchg
repnz
fisubrs
inc
sub
mov
bound
xor
gs
ja
inc
sbb
push
repnz
int
sub
aaa
jl
lret
data16
idiv
popf
cs
mov
movsl
in
mov
aas
pop
mov
insl
sti
xchg
in
xchg
adc
ds
stos
jge
mov
cmp
mov
js
cli
cmp
nop
addl
mov
mov
inc
stos
mov
jns
xor
sub
shlb
jmp
add
call
push
iret
or
xchg
out
mov
sbb
dec
movsb
mov
xchg
push
jecxz
inc
outsl
or
xchg
loopne
or
or
lret
jae
sbb
hlt
pushf
mov
jne
xchg
push
push
adc
fildll
xor
mov
and
or
jmp
mov
push
inc
ljmp
pop
push
add
mov
xchg
decb
mov
jb
daa
scas
mov
sbb
xchg
in
fisubl
dec
pop
dec
sbb
popa
cmc
cmc
enter
dec
mov
fnsave
loope
loope
les
mov
push
aaa
mov
sbb
adc
xchg
jae
int
jp
push
ss
ss
dec
cmpsb
out
nop
into
xchg
push
lret
nop
lahf
jcxz
dec
xchg
ret
cmp
or
sbb
fdivrl
jl
mov
aam
xchg
adc
or
rcr
sub
sbb
shlb
push
js
cmp
xor
push
or
xlat
mov
in
fisttps
mov
push
das
bound
lret
xchg
scas
mov
add
jno
mov
jp
mov
js
dec
insb
sub
js
sub
jb
int
add
into
cmp
rolb
int3
lds
cld
fdivrl
mov
in
push
in
mov
push
push
dec
mov
lds
adc
cs
inc
lcall
sub
cmp
mov
sub
inc
lock
jne
cmp
mov
fmuls
xor
rolb
mov
insl
stc
sub
dec
and
enter
movsl
dec
sub
pushf
test
dec
mov
add
mov
sbb
mov
pop
jge
pusha
cli
out
cmp
xchg
mov
out
pop
fcomps
push
add
xor
mov
std
xchg
pop
ss
outsb
mov
push
pop
fldt
xlat
push
xchg
inc
xor
ljmp
movsb
aad
push
inc
stos
jne
stos
and
inc
sbb
imul
loope
xor
arpl
jp
or
add
and
sub
mov
sahf
imul
leave
lret
mov
xchg
fldt
leave
testl
mov
pop
ja
test
inc
bnd
sbb
mov
dec
cmc
cmp
mov
push
mov
and
push
xor
outsl
adc
jg
mov
divl
les
ss
mov
sbb
scas
inc
xchg
int
xchg
sbb
lea
ja
sub
add
sbb
not
daa
xlat
and
jmp
dec
daa
addr16
cmc
out
or
lods
jbe
jecxz
xor
btcl
js
push
xor
mov
xor
mov
enter
jmp
fsubr
mov
mov
jge
setge
test
pop
pop
xchg
lret
aad
out
int3
mov
ja
pop
fbld
push
js
aam
sub
int
xchg
pop
imul
cmpsl
rcll
lods
shl
nop
mov
jnp
dec
mov
inc
dec
mov
push
insb
cmp
and
sub
loopne
clc
call
loopne
ss
lret
lods
add
mov
loopne
mov
ljmp
sbb
xor
lock
insl
aam
loop
lcall
cld
hlt
dec
test
push
fdiv
xor
hlt
test
jb
shrl
jp
jno
push
or
pop
jno
and
lods
jns
outsb
and
insb
jmp
inc
ret
mov
test
cli
push
and
in
dec
xchg
out
pushf
mov
jns
rclb
push
inc
cmc
outsb
sarl
leave
mov
mov
add
pcmpeqb
xchg
pushf
fadds
sub
in
sub
jp
pop
mov
addb
repz
sti
sub
or
lds
adc
mov
and
xor
sub
cld
js
jbe
pop
cmpsb
cltd
rcrb
out
and
mov
push
sti
cmpsb
es
jecxz
fistl
dec
jo
sbb
sub
adc
cltd
sahf
mov
xor
js
pushf
repnz
sub
xchg
adc
cmc
scas
ja
fldenv
dec
leave
fs
mov
or
sbb
mov
xor
pop
add
loop
lds
mov
cld
add
xchg
sbb
in
outsl
adc
mov
dec
pop
jae
lea
inc
out
add
fsubrs
js
insb
add
inc
fists
push
add
shll
add
inc
in
mov
aas
lcall
sbb
mov
and
call
pop
sub
inc
push
or
subb
lcall
inc
sub
mov
imul
push
pushf
pop
push
fs
ja
ljmp
lret
mov
sbb
fsubrl
and
mov
popa
in
jecxz
rorl
mov
cld
arpl
and
das
and
jbe
push
sub
aam
jae
or
sbb
sub
xchg
insb
fs
mov
jae
lcall
daa
mov
loope
fstp
push
sub
shll
outsl
ss
adc
call
mov
or
ljmp
lahf
inc
loopne
mov
and
mov
in
xor
lods
cld
into
push
gs
aas
cmp
add
add
or
or
sub
add
fisubl
loope
mov
fwait
or
insl
loop
xchg
bound
insb
adc
and
scas
mov
adc
les
sbb
cmp
fstpl
lods
or
pop
xchg
in
push
jmp
mov
jo
daa
idiv
mov
jmp
mov
out
cld
cmp
push
mov
push
test
sbb
cmpsb
pushf
or
push
mov
fldlg2
pop
insb
mov
ret
arpl
movsb
subl
pusha
push
lahf
ret
sub
mov
mov
mov
scas
add
fistpll
mov
sub
pop
movsl
ret
call
lret
push
lcall
in
dec
jae
ficoml
aam
sbb
mov
in
lret
mov
pop
in
sbb
leave
mov
cmp
sbb
or
push
and
call
mov
popf
scas
fsubl
push
dec
es
insl
pop
xchg
inc
mov
pop
mov
push
xor
pushf
decl
xchg
das
or
xor
daa
data16
xor
outsb
xor
les
sub
outsb
xlat
adc
test
ret
pop
push
mov
pop
push
in
lahf
sub
subl
push
and
push
cs
fs
shll
repz
rorb
gs
sarl
mov
sbb
das
aas
notrack
dec
mov
mov
test
insl
data16
lods
lds
fstpt
mov
push
or
or
mov
add
and
insl
push
insl
movsb
jp
shrl
arpl
repnz
int3
mov
mov
addl
fistpll
fildl
mov
ljmp
mov
popf
int
in
jno
add
cmovs
cmc
xor
insb
icebp
lcall
loop
push
xor
out
push
insl
popf
inc
mov
aam
mov
mov
or
pop
xor
xlat
ljmp
push
lret
cwtl
dec
ja
dec
pop
adc
mov
mov
ljmp
xor
xchg
cmpsb
hlt
fs
je
rclb
stos
jl
in
push
xlat
adc
xchg
jbe
mov
mov
out
pop
mov
jl
push
inc
mov
gs
cmp
in
sbb
call
lret
ret
lea
push
pop
add
xlat
mov
leave
cli
jecxz
insb
dec
dec
cmp
mov
aaa
push
xchg
popa
cs
xlat
adc
mov
push
lds
ja
test
mov
cmp
jge
mov
inc
xor
pop
pushf
loop
testl
dec
movsl
ljmp
sti
push
add
mov
jl
xor
testb
outsl
sbb
xchg
cmp
out
and
shl
scas
cmp
cmp
push
mov
aas
in
cmp
addr16
cwtl
insl
aaa
xchg
xchg
cmp
dec
pop
ficompl
push
lds
xchg
jo
mov
ss
mov
push
jne
mov
rcr
adc
inc
cld
push
into
or
imul
xlat
jne
mov
cmp
dec
xor
jne
and
sbb
fcomip
daa
jp
add
push
lret
push
pop
outsl
sbb
jbe
fldl
insb
insb
mov
lret
adc
mov
shrb
push
aaa
test
dec
out
xor
ret
dec
js
and
adc
pop
faddl
pop
or
xor
mov
ret
adc
jo
inc
pop
or
aaa
cmc
and
loopne
jp
cmpsl
daa
inc
sbb
aam
jl
dec
cwtl
sarb
xor
test
out
out
push
outsb
dec
in
push
sub
cmc
xor
int3
mov
rcll
je
and
dec
in
sarl
or
lods
and
scas
mov
inc
sbb
out
lcall
insb
mov
cltd
mov
imul
fdivs
sub
mov
sbb
cs
sahf
add
xchg
int
outsl
mov
xor
ja
or
dec
push
mov
aam
mov
mov
lods
inc
les
sahf
sub
sti
out
into
jb
loop
and
dec
adc
adc
scas
pushf
popf
adc
jno
pop
arpl
addb
fisttpll
nop
push
adc
gs
jle
mov
stos
push
addr16
sub
push
imulb
jp
jl
fs
loope
mov
cmpsb
pushf
jo
aas
pop
rol
jl
outsl
lea
mov
adc
sarl
xchg
add
cwtl
aaa
nop
or
adc
cmpsl
xchg
imul
loopne
sub
pop
mov
push
mov
cld
outsl
push
adc
mov
mov
inc
sti
jl
mov
xchg
cwtl
xor
sub
mov
push
adc
xor
addl
scas
push
pop
mov
mov
xchg
pusha
cltd
pop
lock
dec
in
aas
or
xchg
in
dec
adc
inc
cmp
outsb
test
dec
stc
jmp
mov
lea
cmpsb
stos
loop
addr16
and
in
scas
data16
leave
pop
and
or
push
addr16
scas
dec
shll
xor
jnp
pop
jp
pop
imul
adc
push
inc
insl
sbb
mov
cwtl
jmp
cltd
inc
stos
add
fisubrs
or
cwtl
pop
bound
mov
push
int3
or
jge
testb
ds
sbb
cwtl
cmc
cmc
shl
dec
dec
sbb
mov
pinsrw
test
xlat
sub
mov
sahf
jne
lods
jae
insb
lods
test
mov
and
movsl
xchg
cmp
data16
or
dec
add
inc
in
mov
lods
jg
mov
fiadds
mov
rorb
sbb
sbb
das
ret
xor
shlb
frstpm(287
fildll
pop
sahf
rclb
mov
push
out
aaa
xchg
xlat
sbb
lahf
xchg
out
mov
sbb
dec
add
sub
adc
scas
xchg
out
adc
repz
mov
cld
out
fstpl
movsl
jl
popa
mov
lods
mov
cli
sbbl
cmp
aam
push
daa
mov
dec
adc
add
cmp
cmp
lea
lea
mov
jb
xchg
lea
dec
cmp
pop
xor
in
leave
ret
sahf
inc
aad
mov
mov
nop
and
mov
lods
ljmp
out
jecxz
iret
decl
add
lods
insl
xchg
mov
sahf
xor
and
or
roll
sbb
sub
adc
fistpl
dec
pop
shll
rcr
enter
aad
mov
les
or
xchg
sbb
popf
sti
pop
xor
sbb
mov
test
sbbb
lods
ljmp
mov
sbb
mov
sar
cmp
adc
add
mov
cmp
fucomp
xor
movsl
sbb
dec
dec
mov
in
jo
inc
scas
ss
jbe
add
xor
jns
cmp
hlt
push
aad
subl
out
lods
sahf
shr
ljmp
or
jle
mov
xchg
mov
mov
data16
fwait
push
mov
add
sub
jae
pop
push
xchg
pop
int3
cltd
shrl
addps
cltd
xchg
cmova
rcrl
movsl
adc
push
cmp
mov
xchg
cmp
aam
negl
repz
insb
cmp
out
int
mov
push
xor
ljmp
jmp
jle
mov
cld
sahf
dec
test
cmpsb
shld
pop
add
das
stos
ljmp
icebp
stc
lret
popf
cltd
into
lcall
add
jno
add
fldenv
rcrb
mov
in
arpl
mov
dec
xchg
ret
sbb
mov
idivb
aad
in
push
clc
sti
xchg
out
add
lods
xor
mov
jge
loopne
xor
scas
or
add
idiv
xchg
test
int3
leave
insl
setne
pop
pop
loopne
mov
mov
xchg
enter
mov
rclb
mov
mov
addb
and
mov
out
mov
pop
ret
scas
push
ds
scas
cmp
mov
jno
gs
frstor
lds
icebp
lds
lods
fldt
ror
mov
out
push
adc
push
mov
xchg
scas
and
or
cli
rorl
push
scas
xchg
xor
imul
rclb
xchg
xor
pop
fstps
jnp
or
mov
add
mov
push
mov
mov
push
jecxz
add
ficoml
push
popa
inc
jnp
popa
mov
mov
and
ljmp
or
jne
adc
rdpmc
aad
cmpsb
mov
cld
push
mov
loop
pop
mov
fnsave
daa
push
ret
pop
leave
imul
mov
ljmp
adc
cs
inc
push
aam
movb
loope
mov
dec
out
and
push
jae
dec
in
fisubrs
pushl
ret
aaa
pop
add
icebp
jge
jbe
pop
mov
lcall
test
iret
shrb
xchg
jge
lret
mov
push
stos
idivb
ret
dec
sbb
adc
sbb
les
or
leave
sbb
test
in
insb
pop
xchg
je
cmp
pop
or
scas
dec
jae
iret
inc
filds
and
xchg
cld
jg
lahf
mov
repnz
pop
into
lret
jnp
adc
jb
pop
imulb
icebp
dec
fisubrs
adc
push
pop
jns
test
mov
mov
mov
fistps
sahf
dec
in
icebp
cltd
xor
popf
enter
pop
pushf
mov
lret
dec
aas
imul
mov
mov
push
ret
decl
repnz
dec
mov
aam
in
lahf
scas
js
jle
dec
cmp
mov
cltd
xchg
pop
in
insl
das
imul
arpl
sub
mov
imul
xchg
pop
stos
mov
jmp
imulb
aad
sbb
lods
jne
mov
add
mov
arpl
int3
push
and
add
pop
sub
pop
mov
jb
mov
dec
lret
sti
and
jno
repnz
pop
ficompl
out
adcl
je
stc
and
pop
out
push
loopne
push
or
mov
mov
dec
xor
add
es
dec
lret
cmp
dec
push
push
push
mov
adc
stos
scas
in
fsts
add
test
push
jl
rolb
pop
ror
inc
jg
mov
add
roll
test
roll
ljmp
pop
les
jecxz
pop
add
and
ret
pop
xchg
not
and
sbb
sbb
mov
sti
hlt
mov
mov
inc
xchg
fiadds
mov
adc
fs
enter
lods
pop
lcall
and
push
mov
lods
dec
aas
movsb
adc
mov
loopne
cmp
mov
das
cmp
dec
mov
cmp
les
jns
sbb
imull
fmull
outsl
add
aas
sets
sahf
movsb
nop
xchg
aam
out
and
popf
pop
test
notb
inc
inc
fdivrl
mov
push
inc
sti
adc
clc
je
mov
testl
enter
call
cmp
pop
and
pushf
push
push
mov
lret
xchg
mov
mov
loope
adc
mov
dec
add
stc
pop
pop
adc
or
add
icebp
out
in
std
dec
and
cmp
jae
shrl
bound
clc
jne
repnz
lods
and
xor
cmp
cmp
insl
mov
and
aad
mov
arpl
inc
fistl
in
xchg
aas
fidivrl
inc
lret
mov
inc
sub
test
imul
jne
loope
push
clc
sbb
jle
addl
aas
scas
cmpsl
lcall
xor
adc
push
out
push
imul
addr16
sub
cmp
or
cmp
loope
mov
adc
fnstenv
jl
jb
push
call
and
and
mov
jge
hlt
sbb
out
int
pop
mov
push
push
stc
in
fnstsw
lods
data16
add
cld
or
xor
in
adc
and
mov
or
call
rolb
cmpsl
ret
fistpll
adc
fiaddl
mov
insb
mov
xor
pop
jns
or
pop
lret
out
daa
mov
sub
cs
cmp
pop
and
stos
push
lahf
xor
in
pop
daa
std
lds
stos
or
push
mov
stos
push
adc
or
dec
push
sbb
xor
in
lcall
xchg
adc
nop
and
sbb
xchg
xchg
sub
sbb
jno
fldenv
lds
faddl
into
fs
pop
popf
testl
sbb
push
push
adc
xchg
negl
adc
fnstsw
outsl
addl
sbb
jnp
adc
mov
mov
mov
jae
cmp
cmp
in
jle
mov
jecxz
or
inc
mov
stos
int3
test
jecxz
push
test
adc
jnp
cmpsl
dec
lahf
mov
adc
xor
aaa
lods
dec
or
mov
or
jle
push
jmp
xchg
xor
xchg
cmpsb
dec
clc
cmp
fwait
jb
sub
mov
xor
sar
adc
inc
mov
cmp
inc
mov
xchg
push
push
dec
cmp
xchg
loope
mov
pushf
dec
push
dec
insl
pop
inc
pop
sub
std
pop
hlt
test
or
pop
pop
mov
dec
push
scas
inc
cmp
or
mov
adc
add
out
jno
ja
jnp
popf
or
lock
or
adc
test
inc
daa
pop
and
push
sbb
fistpl
dec
sahf
mov
in
rorl
or
les
mov
mov
and
push
dec
mov
cld
inc
jge
into
jp
adc
add
lcall
sub
cwtl
sub
mov
ficoms
outsb
cmp
imul
jle
out
stos
adc
push
aaa
pop
pop
sbb
add
outsl
fs
add
leave
pop
push
jne
shrb
loopne
sub
pop
fcoms
scas
fwait
mov
jp
popa
cmp
enter
push
xlat
mov
pop
js
add
jne
frstor
lret
add
repz
mov
sbb
ret
es
es
inc
push
jmp
inc
add
scas
les
imul
xchg
xchg
je
lods
scas
inc
and
scas
bound
mov
sbb
add
adc
inc
fstpl
das
jne
jb
cmp
test
movsb
mov
into
push
rorb
pop
jecxz
orl
dec
push
adc
mov
cmp
cwtl
jle
bnd
cmpsb
sti
and
add
xor
movsb
and
rcrb
stc
mov
hlt
daa
and
insl
loop
es
or
leave
jmp
int
rcr
leave
orb
ret
sahf
dec
out
mov
mov
in
ja
stos
out
int3
mov
mov
movsl
shrl
lret
in
iret
std
sbb
push
mov
addl
mov
pushf
pop
mov
dec
xchg
sarb
daa
or
lahf
cwtl
les
ss
dec
das
in
cmp
out
sbb
aaa
jg
outsl
sub
mov
sarb
and
and
mov
je
pop
sub
and
fiadds
sbb
xchg
mov
adc
cmpsl
into
stos
and
jb
scas
call
sbb
sub
outsl
pop
inc
mov
aas
or
push
repz
iret
pop
push
rclb
add
stos
or
insb
je
popf
jb
sbb
push
push
aam
les
sbb
adcb
scas
cmpl
iret
arpl
cmp
adc
out
addb
ds
fprem1
jae
movsb
lock
test
pop
or
mov
rcrl
lods
and
add
and
and
mov
mov
ret
ret
add
loop
sbb
dec
jno
fldcw
mov
mov
jecxz
dec
xlat
jb
mov
jb
push
notb
mov
adc
stos
repz
aas
repz
lds
lahf
lahf
repnz
mov
popf
xor
inc
push
jge
dec
sbbb
fs
adc
into
sbb
dec
push
fwait
movsb
cmp
jno
xchg
xor
ret
sbb
pop
out
ss
insb
inc
icebp
or
loop
lcall
sti
mov
push
out
xchg
hlt
rcll
jmp
ja
mov
add
dec
mov
pop
aam
mov
jecxz
sbbl
sbb
inc
insb
push
push
stos
pop
out
movsb
out
popf
xchg
imul
jnp
je
mov
jbe
push
push
movsl
std
orl
repz
mov
or
push
xor
test
xlat
cli
fadds
jmp
xlat
mov
dec
pop
push
outsl
sbbl
mov
lea
sub
push
jne
cmp
mov
pop
cmpsb
add
loope
cli
movsb
add
push
mov
xchg
sub
aam
out
fucom
in
mov
sub
fs
fsubrs
add
fists
mov
aaa
stc
jb
pop
decl
mov
call
aas
int3
push
xor
sysexit
push
addr16
mov
pop
cmpsl
clc
or
mov
or
push
into
bound
and
jle
and
push
sbb
sbb
pop
repz
idivb
pop
cli
popa
add
in
stc
and
sub
mov
repnz
adc
insl
fnsetpm(287
lcall
mov
jb
jns
adc
dec
outsl
leave
mov
and
lahf
scas
and
jno
inc
add
lock
out
out
sub
mov
dec
outsl
cmc
adc
fistpll
pop
add
and
jmp
rcl
insb
into
xor
jne
pop
inc
pop
out
cmpsl
sbb
inc
pop
xlat
in
adc
stos
mov
xchg
inc
cwtl
aas
xor
and
mov
rcl
cmpsl
pop
mov
es
inc
jae
insl
cltd
mov
push
scas
gs
adc
enter
jle
adc
sub
mov
es
fdiv
and
mov
dec
mov
mov
adcl
loope
add
add
insb
jg
mov
popf
shlb
jns
scas
flds
lods
mov
je
add
out
lods
fs
mov
inc
incb
outsb
insl
lret
add
insb
rclb
adc
mov
inc
leave
scas
dec
pop
insb
imul
xchg
clc
pop
decb
xor
mov
push
enter
pop
sbb
arpl
jb
cmp
push
push
inc
sub
sub
lret
mov
mov
cmp
mov
sub
in
cmp
jmp
inc
test
imul
mov
scas
fs
shlb
xchg
mov
stos
out
dec
or
sub
mov
fsubl
sti
ficompl
ficomps
add
adc
jns
cli
out
les
je
jmp
movsl
cwtl
or
mov
stos
xor
insb
sub
leave
ret
call
mov
jg
fcmove
mov
ss
mov
lret
hlt
push
and
mov
xchg
cmp
nop
repnz
stos
dec
dec
jecxz
dec
stc
lods
xchg
jmp
add
xor
mov
jp
cs
orl
cmpsl
out
dec
dec
cmc
lcall
les
out
sbb
cwtl
jl
icebp
outsb
inc
lret
test
clc
cwtl
mov
sub
xor
test
cmp
daa
ljmp
mov
roll
dec
jb
aaa
jae
mov
loope
repnz
aaa
inc
loop
arpl
xchg
jb
or
dec
scas
stos
insb
and
xchg
push
adc
adc
rcrb
jnp
fsubrp
dec
rclb
icebp
push
stos
mov
pop
mov
dec
xchg
fmuls
cmp
jecxz
ret
dec
add
idivl
push
inc
push
lods
or
cmpsl
pop
dec
pop
cmpl
adc
insb
dec
pop
test
push
sub
shrl
sub
jne
pop
dec
mov
iret
and
jecxz
adc
mov
int
cwtl
add
clc
loope
adc
mov
imul
lea
push
adc
setnp
fstl
outsb
xchg
jecxz
idivl
mov
aam
inc
jmp
jle
in
adc
out
cmp
fcmovb
jae
testb
inc
lret
adc
dec
in
push
xor
push
in
sbb
xor
pop
lcall
cmpsl
mov
jae
fadds
sub
je
loope
dec
xchg
popf
scas
adc
jne
ja
imul
mov
jnp
js
pop
mov
push
adc
mov
out
xor
mov
std
fcomps
sub
stc
mov
pop
fwait
scas
repnz
cmp
or
mov
fldl
shll
aam
adc
push
or
jmp
add
sahf
test
cmp
xchg
ljmp
push
cmp
jecxz
push
js
cwtl
mov
and
mov
enter
push
lea
cltd
cli
jecxz
inc
in
pmuludq
loope
incl
mov
cmp
inc
movsl
addr16
repz
pop
mov
pop
cmc
mov
mov
lods
popa
pop
in
cltd
pop
out
mov
lods
aas
inc
dec
call
lods
hlt
push
mov
adc
aad
sub
sbb
push
leave
xor
mov
imull
mov
in
xor
out
in
pop
or
mov
inc
jno
add
cli
jnp
les
lahf
jle
std
inc
in
out
sbb
outsl
mov
fsubs
enter
call
pusha
ljmp
movzwl
ss
xor
xchg
and
cmp
mov
sbb
sbbb
es
jnp
mov
xor
add
shr
inc
jecxz
pop
scas
mov
jl
rorb
push
lods
or
cltd
loopne
js
mov
es
push
sti
jns
jb
imul
int
mov
inc
sbb
das
daa
ljmp
jg
or
fmul
mov
cld
xor
sbb
mov
int3
sbb
inc
xor
popf
jae,pn
push
ficoml
add
cs
aad
xchg
iret
xorb
add
daa
int
dec
xchg
push
xchg
lret
ret
pusha
push
rorb
fstp
inc
cmc
pusha
xor
jnp
or
lret
imul
lret
cmp
jo
and
mov
mov
popa
movsl
lcall
clc
repnz
std
xor
std
pusha
rclb
sahf
xchg
popl
lcall
add
xor
xchg
ds
daa
push
sbb
ss
fcomps
test
loope
cmc
pop
mov
pop
rcll
inc
xchg
pop
and
jae
hlt
rcrw
inc
adc
mov
push
fcompl
push
enter
gs
cli
inc
jb
dec
xchg
dec
ja
or
pop
stc
and
lods
sbb
mov
add
loope
sahf
lret
xchg
xor
loope
push
aam
adc
lret
ljmp
dec
sub
mov
xor
subl
aas
push
jo
mov
fucomip
ss
or
das
or
cmc
or
ret
daa
mov
stc
and
jle
cmc
frstor
push
xchg
mov
bound
daa
cltd
aam
or
dec
cmp
xchg
dec
lea
pop
leave
sbb
in
push
add
out
sahf
xchg
fdivl
xchg
dec
lahf
push
xchg
out
out
jmp
in
xchg
xchg
insl
pop
cmpsl
pop
jno
pop
je
cmpl
jmp
and
add
dec
mov
dec
idivl
sub
loope
mov
cmp
inc
fiadds
in
lock
in
leave
mov
jae
xor
jbe
repz
stos
cmpsl
mov
jnp
cmp
imul
test
dec
mov
aaa
xchg
aaa
cmp
dec
inc
fwait
test
std
rclb
mov
lock
movsb
sbb
addr16
enter
mov
icebp
pop
ret
and
sub
outsl
outsb
negb
mov
or
addr16
daa
adc
sbb
xchg
ret
or
fistpl
fisubs
push
mov
jmp
stos
fistl
sar
mov
ret
jbe,pt
dec
loopne
repnz
rcl
mov
sahf
aaa
cmpsb
sahf
je
popf
cmp
jns
mov
jo,pn
add
dec
jp
xchg
repnz
test
pop
and
jle
inc
and
inc
dec
insl
rcl
pop
inc
pop
out
hlt
scas
push
pusha
fld
add
scas
aam
es
scas
cmp
mov
into
cmp
mov
add
cmpb
and
xorl
jnp
cmp
fs
or
cmp
dec
test
inc
mov
sar
and
jecxz
scas
lods
fisubrs
mov
int3
movsb
js
fdivrl
outsl
cmc
cmovo
add
dec
lods
int
insl
sub
jae
jo
fnstcw
cli
js
popa
outsl
or
es
icebp
fdivrl
test
and
sub
pop
sahf
jae
stos
sbb
les
popa
pop
loop
insb
jns
push
shll
inc
mov
lods
stos
jmp
mov
loope
ret
stos
or
mov
ret
xchg
xor
into
jnp
pop
push
xor
xchg
jno
xchg
lods
out
dec
cmp
mov
inc
add
clc
xchg
sbb
decl
frstor
rclb
inc
pushf
cli
pop
adc
add
inc
ret
inc
lds
loop
or
outsb
add
mov
mov
dec
dec
sbb
cltd
push
cmpsl
jns
cmp
mov
xor
cmp
jmp
cltd
jg
adc
dec
mov
jno
mov
cld
sub
add
jo
xchg
into
or
imul
push
lods
loop
sbb
fldl
sbb
std
movsb
mov
push
and
pop
jp
and
pop
popf
lods
mov
push
subl
paddb
xor
xchg
xor
mov
xor
add
inc
or
mov
sahf
int3
incl
fldl
push
xchg
gs
mov
xchg
jmp
jle
rorb
sbb
loop
mov
out
mov
pop
imul
mov
loope
sub
sub
sahf
jnp
out
aaa
fistpl
xor
or
std
out
dec
pop
or
xor
movsb
inc
mov
mov
or
fisttps
push
out
ds
mov
nop
pop
insl
icebp
sbb
xchg
pop
into
xor
mov
daa
sbb
cmc
push
test
adc
dec
mov
loope
pop
xchg
decb
mov
push
mov
out
call
mov
adc
sar
movsl
xchg
dec
addr16
mov
or
push
ja
hlt
and
imul
inc
lods
sub
sarl
movsb
div
and
sub
popf
shll
popf
mov
mov
adc
jge
addr16
add
fdivr
imul
xchg
outsb
scas
and
icebp
sbb
fisubrs
xchg
jne
mov
loopne
iret
das
mov
cli
add
imul
sbb
out
cs
jbe
aam
xor
and
aaa
xor
push
or
in
pop
lcall
cmp
xor
inc
stos
adc
pushf
std
cmp
jbe
fisubs
je
lahf
aas
push
mov
and
xor
mov
and
mov
gs
add
test
jge
gs
pop
in
inc
jbe
pop
pop
aad
sub
test
fdivrs
mov
test
xlat
and
pop
fwait
push
mov
je
repnz
pop
idiv
push
cld
mov
push
mov
pop
cld
cmp
cltd
jmp
int
cmp
repnz
ljmp
lds
out
lods
add
stos
fcmovu
push
mov
pusha
test
or
mov
addb
test
mov
ret
xchg
push
aas
stos
into
bound
add
jp
fs
loopne
fldcw
fisttpll
ja
cmc
add
xor
cmp
pop
jg
rclb
dec
outsl
sub
mov
insl
dec
arpl
pop
mov
push
les
jnp
mov
int3
or
xor
jmp
jp
orl
push
int
lret
push
xchg
mov
push
in
daa
popf
or
sahf
adc
fstpl
jbe
sbbb
push
sbb
scas
push
mov
ret
pop
bound
pop
sbb
adc
jle
cmc
adc
adc
adc
imul
xchg
jp
mov
call
iret
pop
xchg
aad
and
lea
shl
aam
cltd
test
sbb
outsl
fs
mov
adc
das
push
popa
inc
mov
aas
jns
enter
fidivs
iret
or
and
push
ljmp
fcmovb
out
pusha
stos
gs
cwtl
jge
dec
leave
sub
aam
fcomip
repz
fwait
mov
mov
pop
or
mov
dec
mov
inc
sti
scas
jae
data16
mov
cmp
lods
repnz
xlat
mov
push
enter
mov
mov
jmp
frstor
mov
add
movnti
ja
mov
mov
push
or
mov
js
mov
xchg
jecxz
int
mov
cs
clc
mov
vpcmpgtb
lods
shrb
pop
out
xor
enter
fadds
inc
iret
mov
lcall
in
and
xor
jmp
mov
test
pusha
data16
mov
ficompl
outsl
inc
or
lock
pop
sahf
add
jnp
jle
loope
mov
mov
add
cltd
inc
mov
dec
xchg
inc
fldln2
inc
jo
xlat
lds
scas
xor
in
jae
pop
mov
cld
pop
scas
mov
test
pop
es
mov
movsl
movsb
divb
dec
jl
and
scas
mov
scas
shll
fistl
xchg
pop
sub
lds
mov
jmp
aad
add
adc
cld
mov
icebp
outsb
movsl
inc
pop
dec
or
push
add
popf
ret
push
dec
out
fdivp
mov
jg
cltd
pop
in
sbbl
mov
pop
sahf
jo
xorb
outsl
mov
and
leave
lock
mov
pop
mov
mov
in
mov
pushf
push
mov
or
jle
dec
cmp
repz
stos
lcall
addl
cmp
lcall
push
sbb
ja
cld
mov
adc
pushf
lods
out
imul
sub
push
popa
jecxz
movl
adc
mov
mov
inc
fistl
std
xchg
ret
cwtl
bound
push
pop
lds
inc
pop
jnp
push
dec
push
cli
mov
int
push
dec
mov
jns
stc
mov
cld
sbb
stos
xlat
int3
call
cs
sub
cld
mov
inc
cmpsl
lods
inc
gs
xchg
adc
push
pop
imul
sbb
out
mov
push
out
addr16
jg
mov
je
out
clc
int3
nop
pop
pop
sub
rolb
push
pop
scas
mov
inc
outsl
lods
mov
sti
jbe
pop
les
ljmp
test
sub
rcll
sbb
data16
add
movb
arpl
and
xchg
jne
int3
and
and
or
stos
cmp
add
and
jae
leave
mov
and
sti
cmp
or
add
dec
loope
mov
adc
sub
pop
push
ss
sub
lret
les
ljmp
add
sbb
cltd
stc
mov
rcll
or
push
arpl
mov
ss
pop
xor
fiadds
stos
push
fimuls
mulb
clc
cmpsl
jo
out
add
dec
push
xor
shrl
sub
jge
ss
in
sub
les
ds
test
ss
mov
test
or
outsl
cld
outsl
fdivp
pop
adc
mov
insb
cli
dec
pop
loop
ds
cmp
adc
cmp
nop
push
lcall
sti
or
ror
arpl
dec
xor
scas
jo
push
lods
movsl
mov
cmp
outsl
xchg
pop
cltd
movsl
popf
mov
add
jae
pushf
mov
adc
daa
sbb
mov
xor
fiaddl
lea
cs
push
mov
ds
jge
cmp
add
xchg
push
mov
mov
push
mov
xchg
mov
scas
fstpl
pop
and
mov
lods
call
cmp
lods
test
insl
iret
in
adc
bound
stc
or
sbb
pop
je
dec
xchg
mov
pusha
lds
mov
retw
shl
ficompl
add
fabs
or
call
pop
bound
xchg
xor
jecxz
adc
jbe
cmc
push
jmp
ret
leave
out
xchg
into
lds
fs
pop
fisttps
mov
sbb
stos
jns
cmpsb
jne
scas
sbb
xchg
inc
push
sub
std
push
jl
call
pop
stc
jl
stos
adc
jb
je
inc
imulb
xchg
add
popf
dec
movl
and
inc
bound
cli
and
jne
data16
rcrl
jg
mov
insb
mov
or
pop
add
mov
out
sbb
sub
fmull
pop
cmp
cvtdq2ps
sub
sbb
out
aaa
rcr
and
mov
adc
mov
gs
inc
dec
in
sub
xchg
cs
aam
cld
and
xlat
xlat
pop
lods
test
pusha
out
orb
orb
lods
dec
xor
adc
movsb
loop
or
xor
in
dec
pop
or
add
or
aaa
jo
arpl
pop
push
jecxz
dec
jl
mov
es
ret
xlat
and
mov
in
dec
std
sbb
addr16
push
stc
add
adc
mov
mov
ret
ss
rcrb
cmp
or
push
lahf
pop
stos
stos
xlat
orb
jle
xchg
jnp
insb
ljmp
jmp
leave
lods
sbb
sti
icebp
adcb
cmpsl
dec
ret
cmp
cmpsl
cmp
loope
cvttps2pi
vpcomd
adc
pop
dec
mov
js
xchg
sub
ljmp
adc
icebp
adc
mov
push
xchg
xlat
inc
cli
adc
or
fsubrp
or
sbb
popa
pop
inc
sahf
sbb
mov
fmul
test
leave
scas
mov
pop
pop
sub
fmuls
fdivl
add
repnz
cmp
enter
push
cltd
sbb
lret
push
mov
fisttpll
xor
scas
dec
in
mov
dec
pop
add
pop
mov
jno
xchg
cmp
xchg
jno
cmp
push
arpl
sub
inc
imul
stos
insl
test
fiadds
or
ljmp
inc
inc
and
call
lock
pop
fs
or
incl
out
sub
sub
jecxz
sub
adc
ds
mov
sbb
jg
call
xchg
push
stos
ds
daa
cmp
icebp
and
out
mov
add
mov
out
adc
test
in
fnstenv
xchg
mov
mov
fnstcw
mov
insb
jno
xchg
and
stos
loope
and
adc
add
mov
jnp
pop
icebp
jns
xor
arpl
lock
js
lds
popa
mov
ret
or
jge
mov
cmpsl
xor
push
rclb
cmp
bound
in
dec
and
icebp
sub
lret
repz
xor
loop
or
push
sbbb
xchg
lock
mov
cli
dec
cmp
das
jo
daa
sbb
dec
sbb
mov
jp
je
sbb
dec
cmp
mov
sub
cmp
ljmp
ds
popf
and
loop
mov
xor
fs
stos
aas
push
sub
jmp
xchg
pop
inc
leave
cltd
or
mov
mov
popf
loopne
cmp
mov
sarb
sub
pushf
cmc
pop
and
xchg
popa
cmpsb
push
clc
jnp
pop
and
insb
ja
and
pop
sahf
dec
jo
xchg
push
jle
cmp
add
pushf
cmp
inc
ljmp
cmp
pop
pusha
out
ror
lret
mov
pop
inc
inc
stos
adc
or
push
outsl
fucomp
ret
ficoml
lods
scas
sbb
cmp
dec
sbb
fs
xor
and
iret
ficoml
jns
and
notb
fstl
cs
sbb
sub
jo
out
aad
pop
mov
lcall
add
sub
add
cmp
orl
cmp
jge
loop
pop
popf
das
lea
std
test
repnz
push
cmpsb
movsl
xchg
sbb
idivl
or
data16
pusha
fistpl
pop
adc
cltd
int
pop
roll
loope
xchg
jbe
cmp
stos
enter
sbb
es
imul
sbbl
pop
pushf
loope
icebp
je
sub
sbb
jp
popf
adc
enter
repz
or
add
fisubrs
cmp
mulb
arpl
fisttps
imul
aam
jnp
out
int
or
push
push
mov
lahf
sbb
jnp
mov
xchg
push
push
push
test
lods
int
xor
daa
mov
imul
hlt
int
sbb
pusha
sbb
mov
and
into
ja
fistpll
adc
jae
adc
or
shl
cltd
andl
push
xor
test
jle
push
into
cmp
dec
push
mov
gs
cmp
scas
sub
negl
jae
daa
popa
xchg
jmp
xor
mov
sbb
movsb
dec
lret
mov
mov
insl
push
xlat
adc
xchg
es
mov
ja
pop
pop
sti
popf
inc
and
dec
mov
or
fimull
jo
fistl
insl
sub
stc
add
cmp
sahf
movsl
mov
inc
movsb
add
sbb
fldl2t
jl
insb
aad
into
andl
adc
imul
in
lods
cmc
popf
xchg
dec
mov
jecxz
mov
push
inc
add
mov
jns
icebp
test
repnz
nop
lods
sbb
or
push
stc
repz
xchg
sub
dec
jb
xchg
jae
jmp
mov
movb
pusha
cmpsl
fisttpl
stos
xchg
mov
cmp
mov
shr
jg
mov
bound
mov
mov
push
mov
pop
dec
shll
hlt
pop
push
push
inc
fwait
dec
fistl
dec
dec
mov
mov
jge
in
jl
int
jb
enter
or
dec
lods
fwait
adc
sbbl
daa
add
mov
jb
mov
adc
insl
ljmp
scas
ljmp
fwait
outsb
mov
add
jmp
jae
mov
mov
xor
sbb
dec
imul
lods
sub
cwtl
xlat
inc
mov
adc
pusha
cmp
stos
shrl
push
and
stos
push
or
mov
jne
add
flds
adc
stos
push
sub
hlt
mov
mov
and
mov
dec
and
addb
jno
and
or
jae
pop
inc
cwtl
xchg
or
lds
fstpt
xchg
dec
out
lcall
test
movsb
adc
cs
mov
add
pop
xchg
mov
xor
dec
pop
cmp
push
daa
sub
xor
dec
and
lret
sub
add
sahf
repnz
popf
scas
aad
out
xlat
jno
mov
jo
mov
dec
pop
xor
xchg
and
xchg
daa
pushf
imul
push
mov
out
stos
imul
mov
sub
mov
dec
pop
decl
mov
mov
jmp
mov
inc
jno
inc
or
adc
mov
mov
pop
nop
mov
pop
push
inc
in
inc
idivb
or
call
mov
in
sbb
and
fmull
ror
sub
stos
cmp
jecxz
test
jle
lods
mov
sub
fcompl
xchg
das
pop
xchg
jnp
pop
jmp
iret
arpl
cltd
jns
jno
mov
mov
sbb
dec
pop
cmc
jo
int3
pop
jbe
movsb
fsts
pop
push
pop
into
add
add
sbb
scas
scas
outsb
fcomip
in
fisttps
mov
pop
or
aad
adc
jg
xchg
jecxz
jns
jge
pop
dec
loop
adc
insb
hlt
cltd
jbe
jne
cmp
outsb
push
sarl
shl
push
icebp
movsb
add
cmp
in
imul
pop
imul
jl
ret
or
loop
push
and
iret
outsb
push
mov
sub
filds
imul
jae
jl
das
outsl
daa
sub
shl
mov
pop
mov
pushf
leave
jle
add
cld
mov
mov
or
add
cmp
push
and
xchg
mov
push
xor
pop
fs
ret
je
xor
addr16
das
mov
inc
inc
mov
sub
cmp
ret
add
dec
js
jb
xor
mov
ss
pop
pop
pop
popf
cs
adc
mov
or
jp
push
scas
cmpl
loopne
mov
push
sub
push
ds
jmp
orb
jp
shlb
call
sbb
or
sub
push
push
xchg
push
dec
addr16
jnp
mov
add
mov
je
adc
mov
mov
xchg
cld
xor
lret
xchg
jbe
cmp
mov
cltd
jbe
xchg
sbbb
xchg
loopne
push
into
pop
out
xchg
scas
test
icebp
ret
lret
les
cmpsl
pop
gs
sub
fstl
and
adc
scas
leave
push
call
test
inc
adcl
in
cmp
pusha
sbb
aas
xor
dec
push
pop
je
jns
test
testb
hlt
gs
add
cmc
das
out
fimuls
adc
pop
cmp
stos
call
stc
loopne
push
insb
and
sbb
hlt
js
push
lds
sub
sbb
and
adc
adc
lods
stos
cmp
adc
out
js
hlt
gs
pop
jl
inc
inc
mov
and
repz
lock
ud2
ret
pusha
cmp
out
ljmp
or
adc
mov
and
ss
mov
mov
mov
inc
adc
loopne
mov
add
mov
fsubp
pop
lret
cs
data16
icebp
and
mov
into
aaa
mov
jns
rclb
aaa
sub
dec
pop
repz
fwait
xor
sbb
sub
add
shll
rorb
repz
adc
pop
xor
push
and
divl
shl
lahf
jno
ds
jnp
and
repz
mov
add
inc
mov
adc
out
jne
dec
mov
inc
or
mov
xchg
xor
dec
sbb
cmp
sbb
mov
dec
in
mov
sub
sbb
push
mov
popf
in
push
out
inc
mov
jno
inc
cmp
dec
inc
cmp
xchg
sub
and
cwtl
sahf
inc
sub
dec
rorb
mov
in
sbb
lcall
leave
enter
mov
push
inc
mov
lock
push
lret
adc
xchg
adc
jnp
in
shlb
jnp
push
rcr
or
inc
xchg
fcomps
cmc
dec
xchg
jl
test
das
dec
jbe
mov
and
add
fiaddl
insb
adc
and
cs
dec
mov
jg
scas
les
stos
cmp
fsubp
lret
mov
mov
pop
push
xchg
out
bound
sub
mov
mov
cmc
enter
and
xchg
push
sub
sbb
pusha
sbb
cs
nop
test
add
ret
in
pop
push
ljmp
imul
dec
xchg
cmp
sbb
xchg
xchg
pop
lods
mov
fdivs
fadd
add
mov
jno
or
pop
movsb
insb
enter
call
lea
sti
add
fmull
lahf
xchg
nop
jns
or
and
data16
inc
cmp
aas
jno
mov
xor
mov
xchg
xchg
fsubs
popa
sub
pop
xchg
js
insl
in
jnp
lock
cmp
sti
xchg
loope
inc
sub
mov
add
out
insb
mov
sbb
sbb
add
xchg
or
jb
push
sbb
shl
sub
hlt
sbb
lock
arpl
loope
push
push
sub
xchg
aad
or
iret
and
repz
repnz
add
push
fistpll
dec
xlat
jp
rcrb
test
leave
xchg
mov
xor
in
xchg
jo
orb
mov
repnz
push
push
test
pop
in
mov
mov
in
pop
movsl
mov
enter
mov
test
jnp
mov
adc
daa
jecxz
daa
ficompl
in
xchg
xchg
clc
mov
sub
aaa
nop
pusha
mov
xchg
jle
in
inc
lret
inc
mov
and
sbb
jnp
insl
addr16
das
pusha
lea
xchg
xchg
inc
dec
cli
xchg
or
jg
or
mov
push
jmp
mov
ja
sub
sub
dec
or
mov
push
ret
jbe
jb
push
sarb
push
add
cmp
fwait
sbb
idivb
jmp
pop
push
cld
ror
xor
cs
mov
aam
shlb
push
nop
fs
gs
addr16
and
scas
mov
pop
xor
sbb
mov
pusha
jmp
jbe
xchg
add
xor
ljmp
pop
push
clc
pop
mov
or
je
push
cmc
jp
push
adc
frstor
ret
mov
add
jg
or
pushf
cmp
mov
mov
xlat
sbb
sub
push
sbb
cmp
sahf
push
jle
mov
dec
pop
rcrb
aad
cmpb
add
mov
push
mov
in
or
movlps
imul
out
mov
in
lcall
stos
mov
pushf
mov
jb
xchg
std
xor
movsl
cld
dec
inc
lock
add
add
fcoml
lcall
adc
ds
push
push
xchg
imul
bound
iret
and
insb
lret
fdivs
out
adc
sbb
mov
jg
jp
in
leave
or
iret
cmpsb
dec
sub
or
mov
outsb
imul
jnp
adc
mov
jg
jnp
cmp
jae
shrl
dec
icebp
lds
popf
test
push
iret
xchg
xchg
out
xchg
mov
setg
scas
jae
inc
jns
lods
lea
aas
ficoms
push
into
out
fcoms
sub
dec
sarb
and
dec
out
add
dec
mov
js
inc
subb
or
imul
andb
add
xor
cmp
outsl
pop
inc
cmp
inc
pop
es
gs
in
add
data16
hlt
enter
sbb
lds
fsubr
es
fstpl
inc
add
pop
jecxz
mov
push
mov
pusha
cmpsb
ss
test
out
call
xor
inc
fists
pop
push
aad
push
xlat
cwtl
mov
hlt
arpl
jne
or
aad
mov
add
in
push
push
dec
cmp
sbb
pop
dec
mov
in
lcall
mov
dec
fs
lods
ja
imul
mov
xor
subb
push
mov
push
mov
into
outsl
hlt
cmpsb
dec
dec
sbb
loope
mov
sub
add
std
cltd
jne
iret
sbb
dec
insb
or
xchg
jge
inc
push
aad
mov
dec
ljmp
jbe
js
inc
jl
sbb
in
dec
imul
inc
stos
cmp
movsb
cltd
dec
inc
shrl
sti
adc
push
fwait
push
cmp
push
iret
sahf
cmp
pop
add
scas
shl
jmp
imul
mov
stos
pop
inc
clc
sbb
pushf
add
movsl
push
push
stc
fs
cli
sbb
inc
mov
pop
xor
adcb
pop
mov
push
orl
xor
or
cmp
int3
push
into
pop
sub
xchg
inc
mov
cmp
loop
cmp
cmp
mov
push
mov
loopne
dec
jle
lret
xlat
std
inc
xchg
cltd
add
lods
push
pop
adc
sub
ret
mov
inc
and
inc
or
mov
ja
sub
imul
addr16
std
pop
lock
pop
mov
and
mov
dec
inc
mov
add
adc
scas
cs
or
pop
mov
js
std
dec
mov
scas
lock
sub
xor
outsl
jle
mov
mov
fstpt
gs
adc
mov
sti
or
jno
sub
jmp
mov
add
test
fs
dec
rclb
adc
mov
jge
out
sbb
and
mov
out
lret
sub
jl
or
mov
daa
sti
std
jbe
int
add
cli
lcall
fidivs
jle
jnp
icebp
hlt
adc
insl
addr16
sahf
call
outsl
out
and
andl
and
and
in
mov
or
cli
fildll
add
movsb
jb
push
and
xor
insb
bound
and
lahf
sarl
jmp
pop
dec
rorl
adc
sbb
daa
push
mov
push
loope
sti
lret
mov
mov
inc
out
jae
sti
cmp
mov
mov
data16
sahf
and
andb
or
sub
lcall
and
mov
mov
mov
dec
insl
repz
fisubs
fildl
movsl
jecxz
mov
mov
inc
lahf
inc
mov
mov
fcoml
out
push
cmp
movsb
dec
int3
sub
popf
pop
sbb
lahf
pop
mov
adc
lods
jp
mov
or
cmp
sub
xor
xor
add
sub
scas
mov
pop
gs
mov
add
jbe
or
sbb
ljmp
or
outsb
dec
pop
push
mov
cs
pop
push
pop
jae
test
sbb
addr16
pushf
sahf
in
imul
lock
das
dec
rcrb
scas
in
jo
imul
mov
pusha
sarb
cmp
test
pop
adc
jp
arpl
sbb
mov
xchg
xchg
cli
fwait
push
mov
mov
mov
push
sbb
cld
mov
sub
cmp
push
push
sbb
xlat
out
test
pop
mov
adc
dec
ret
dec
xchg
fstl
scas
shl
inc
push
imul
dec
xchg
pop
adc
mov
roll
scas
jae
sub
mov
mov
dec
popa
adc
nop
scas
pop
cmp
lret
out
popa
mov
dec
cli
cmp
xor
out
out
sub
shll
mov
jp
das
pop
jle
cmp
inc
jbe
jmp
xchg
inc
cmp
cli
push
sbb
mov
pop
cltd
imul
cmpb
jae
cmp
lret
mov
data16
and
pop
and
aas
cmc
mov
mov
push
test
cwtl
mov
filds
inc
inc
mov
push
fcmovnb
test
xor
in
xchg
xor
je
cmpsl
loop
adc
push
bts
movb
lods
mov
fcomi
pop
divl
lcall
jo
ret
loope
lcall
es
ljmp
loop
das
inc
xor
mov
xor
pushf
push
mov
xor
insb
bswap
movsl
gs
mov
cmp
fisttpl
inc
pop
cmp
pop
fistpl
movsb
dec
adcl
and
cmp
sbb
mov
insb
add
add
fimull
sarl
inc
stos
adc
dec
lcall
leave
cmp
mov
gs
add
jnp
mov
mov
inc
mov
mov
pop
fadd
sub
js
icebp
das
cltd
push
xor
scas
je
in
mov
cld
out
loopne
jnp
addl
jle
or
push
push
lods
fwait
xor
or
sub
xor
add
and
mov
adc
jo
sbb
lahf
push
cmpsl
sbb
divb
divl
lret
push
in
add
data16
psrlq
inc
insb
in
dec
insb
insl
adc
inc
or
jnp
cmpsb
test
repnz
xchg
push
xchg
cmpl
pushf
sub
loope
lds
sbb
adc
dec
inc
adc
pop
inc
push
test
xchg
dec
and
dec
enter
imul
jno
cs
rcll
push
inc
arpl
adc
stos
xor
pop
dec
out
cld
inc
push
mov
pop
push
fdivp
xor
inc
fmull
mov
punpcklwd
aad
pop
and
push
push
gs
andl
or
addr16
dec
lcall
cmp
and
and
and
sub
mov
fstpl
push
por
mov
inc
roll
decb
lds
push
xchg
roll
jae
dec
jmp
push
pop
or
movsb
mov
sbb
mov
leave
arpl
rorl
jbe
in
aam
out
dec
xchg
and
jp
pop
cmp
mov
insl
fiadds
scas
cmp
jne
inc
xchg
xor
frstor
sub
movsb
frstor
sti
jno
add
je
add
or
fistpl
push
pop
pop
dec
adc
sbb
scas
fmull
mov
xor
mov
pusha
dec
ljmp
cmp
xor
xlat
fcmovu
out
mov
in
rcr
aam
stc
and
mov
cmp
sbb
addr16
lahf
xor
repz
dec
insl
add
mov
mov
and
lret
xor
xchg
filds
movsb
push
mov
aaa
aad
jecxz
in
insl
mov
aad
jp
xor
or
adc
fnstcw
arpl
mov
mov
lock
test
mov
cmp
rcrl
gs
adc
or
inc
or
fadds
jb
jnp
outsb
outsl
fnstsw
pop
mov
popa
cmp
mov
add
data16
xchg
hlt
movsb
ss
push
pop
mov
mov
or
outsl
das
or
add
shrl
pop
out
fcmove
mov
icebp
dec
mov
mov
stos
cmpsl
lahf
lods
mov
push
sub
jns
cmpsl
mov
pop
mov
sub
daa
sub
dec
jae
inc
pop
outsl
stos
add
cmpsl
cmp
pop
sub
mov
jle
push
push
xor
and
call
and
negb
int
cli
addl
add
push
sub
ret
shll
cs
in
mov
cwtl
inc
lcall
jmp
pop
sahf
ret
and
add
stos
jne
clc
stc
adc
bswap
pop
ss
pop
jns
jge
sub
dec
add
jno
repnz
outsb
xchg
mov
push
test
mov
cmp
xchg
jno
sub
scas
jmp
stc
fnsave
push
loopne
imul
pop
daa
clc
xchg
dec
xlat
out
cltd
stos
dec
cmp
or
push
mov
jl
std
orl
cmp
je
inc
mov
lahf
pop
ljmp
adc
mov
daa
out
sbb
cmpsb
insb
sub
je
aad
sub
mov
mov
arpl
sbb
sub
mov
fistpl
lahf
lcall
adc
jno
mov
xchg
pop
mov
sbbb
push
adc
hlt
movsl
mov
addr16
push
and
fwait
cmp
fisubs
adc
jno
inc
add
test
aad
mov
shrb
xchg
and
popl
sbb
cld
scas
pop
repz
into
stc
hlt
inc
lret
rolb
repnz
push
sub
imul
lret
sub
xchg
xchg
and
and
cs
dec
xchg
dec
mov
dec
xchg
sbb
daa
push
pop
pop
test
xchg
lret
cmp
clc
cmp
pop
adc
movsl
mov
notb
loope
mov
and
push
xor
aad
mov
lahf
imul
and
xlat
xchg
and
sti
or
pop
jge,pn
or
in
scas
out
mov
jno
jg
lods
add
mov
jecxz
mov
mov
jnp
mov
sbb
cmpsl
sbb
bound
mov
aam
xchg
test
adc
adc
jecxz
cwtl
js
dec
cwtl
clc
test
inc
sbb
jbe
mov
iret
adc
pop
dec
nop
xchg
pop
cmp
inc
nop
xchg
jmp
fsts
inc
cmpsb
mov
cmpl
aad
popa
mov
test
cmp
cmc
inc
in
dec
push
iret
jl
jmp
fwait
xchg
cwtl
movsl
test
stos
inc
sub
and
popf
sub
jns
jecxz
dec
lahf
push
cmpsl
jne
jl
lock
fcmovb
inc
and
cs
lret
lret
inc
call
mov
test
fdivrl
int3
movsl
je
mov
inc
scas
mov
outsl
orb
test
les
jg
lods
cmpsb
rorb
sub
mov
call
mov
add
xchg
xlat
sub
mov
and
ret
xor
xchg
icebp
mov
test
cwtl
push
jns
in
mov
push
outsb
push
and
or
gs
shll
mov
ret
bound
jns
icebp
movsl
mov
fldcw
mov
sbb
fisubs
dec
pop
cmc
mov
cmc
mov
out
push
ljmp
stc
leave
movsl
inc
jno
insb
mov
xchg
xchg
inc
push
mov
mov
jo
stos
sub
jmp
push
enter
push
sahf
mov
sub
adc
data16
cmpsb
add
or
enter
mov
sub
cwtl
pop
lahf
ja
fscale
arpl
push
or
daa
shll
cmp
and
jmp
cmp
xor
setl
std
bound
outsl
arpl
mov
adc
mov
stc
aas
dec
xchg
and
dec
adc
jg
adc
sbb
int
jle
hlt
mov
ljmp
add
inc
pop
mov
mov
jns
sub
loope
and
js
fcmovnbe
lret
jns
pop
add
ficoml
lcall
xchg
out
insl
shll
sahf
cmp
jbe
cmpb
inc
cmp
mov
jge
out
inc
adc
out
inc
je
push
ficomps
xor
inc
and
push
adc
loope
xchg
pusha
sarl
test
and
jo
xchg
daa
int
out
push
push
or
push
or
push
push
inc
xor
fldl
gs
jg
xor
rcrl
inc
sbb
inc
pop
negl
push
dec
cmpsl
add
and
shl
test
cmp
cmp
or
sbb
add
out
xlat
adc
dec
arpl
inc
stos
cmp
ret
jmp
in
adc
arpl
or
fs
push
arpl
popf
mov
pusha
loopne
loope
jbe
cli
mov
inc
imul
adc
jno
push
jo
out
mov
je
push
push
add
fldcw
add
jo
xchg
repnz
loope
fnsave
ljmp
push
or
cmp
aam
mov
int
sub
cmp
mov
icebp
popa
mov
mov
mov
xor
test
mov
int
jp
jbe
mov
movsb
les
mov
stos
popa
dec
push
pop
push
mov
enter
push
cld
subl
lret
cmp
lods
dec
jp
xor
jno
inc
pushf
mov
push
movl
jno
mov
xor
mov
imull
das
shlb
lock
sbb
das
push
pop
xlat
test
jmp
call
mov
inc
enter
jp
sbb
sti
leave
dec
dec
dec
pop
sub
cmc
fwait
jmp
ljmp
adc
or
cmp
cmp
dec
into
and
adc
mov
movsl
sar
fwait
ret
push
and
hlt
lods
out
pushf
subb
pop
adc
push
mov
mov
or
enter
jns
mov
stos
jl
jmp
popf
jp
das
cmp
movsb
xlat
int3
cld
ret
ljmp
insl
adc
pop
xchg
movsl
jne
test
insb
adc
jecxz
outsl
insb
flds
inc
js
rclb
pop
mov
leave
sbb
iret
xlat
or
dec
mov
sbb
aad
aad
int
cld
int
sub
sti
sub
fs
les
lret
add
xchg
inc
add
fsubs
mov
push
and
adc
fstl
xchg
xchg
lret
lds
pop
pop
pop
pop
loope
adc
or
xchg
add
sbb
xchg
sbb
xor
out
fidivrl
adc
adc
mov
out
out
dec
test
fistps
lock
inc
loop
or
aad
les
lea
lods
gs
fildl
mov
sti
fistps
ret
sbb
mov
rcrb
mov
jno
sbb
mov
pop
das
cmp
test
scas
pusha
sub
xchg
and
mov
push
and
mov
lret
out
dec
shll
xchg
scas
mov
ja
test
pusha
lods
loope
in
xor
sbbl
pop
sub
lock
cli
orb
lret
inc
lret
adc
adc
jno
nop
jae
dec
sub
lea
mov
mov
shlb
negb
insb
jmp
ds
push
xchg
rcr
mov
adc
xor
daa
mov
iret
movsl
jle
cld
xchg
cli
lret
in
cmpsb
fistps
or
nop
xorb
and
in
xor
scas
jnp
out
push
sub
icebp
push
inc
cmp
mov
fcoms
pop
inc
push
inc
push
adc
adc
out
cmpsb
mov
and
add
out
cmpsl
orl
mov
sbb
data16
pushl
xor
mov
inc
daa
mov
adc
or
inc
sbb
cmc
test
arpl
mov
adc
pop
xor
scas
or
call
jg
in
flds
xchg
loopne
in
sbb
push
pop
pop
fcmovnu
inc
and
push
popa
jl
push
cmp
dec
arpl
push
shrb
dec
imul
xlat
insl
cmp
ja
cmp
loop
clc
and
jp
sahf
test
sbb
jge,pt
test
fcmovne
fcmovnbe
in
stos
jp
cmpsl
stos
pop
sbb
test
fistpll
cltd
enter
andl
lahf
addr16
add
rclb
xor
out
adcb
push
push
inc
xchg
in
mov
movsl
mov
aaa
add
xor
or
pop
sbb
cmc
mov
cmc
add
cmp
pop
shll
in
pusha
xchg
dec
and
jge
pop
repnz
inc
dec
shlb
shll
jl
insl
and
push
sbb
lods
mov
bound
jae
rclb
mov
sub
sbb
ljmp
mov
hlt
and
sub
xor
stos
adcl
inc
stos
sub
movsl
cli
mov
lds
cwtl
bound
push
sub
pop
xchg
adc
arpl
push
gs
and
mov
inc
mov
fwait
mov
mov
std
pushf
xor
test
ljmp
jnp
ds
adc
jp
jne
out
subb
xor
sbb
xchg
in
inc
gs
out
pavgb
stc
mov
xor
hlt
mov
xor
pop
push
xchg
or
adc
sub
and
push
dec
test
mov
xlat
pop
lret
frstor
mov
test
fdivrl
pop
fidivl
fwait
inc
jecxz
fidivrl
add
inc
mov
out
dec
jl
xchg
push
fstpt
lret
loop
mov
cmp
js
call
mov
sbb
mov
sete
pop
mov
mov
pop
push
stc
lds
xor
pop
ficomps
push
adc
adc
sub
inc
add
test
xlat
pop
loope
adc
sub
sub
ret
pop
test
pop
dec
sarl
jmp
pop
and
cs
pop
xchg
mov
mov
jns
test
xchg
sti
movsb
sar
add
aas
mov
cmc
mov
jno
add
movsb
xchg
fs
in
mov
cmp
aas
icebp
cmp
rcrb
test
mov
adc
pop
jo
sbb
outsl
sbb
jo
dec
or
or
mov
pop
cmp
cmp
jne
cmp
cwtl
fldenv
cmp
scas
pop
mov
es
xlat
mov
and
sub
xor
test
push
repnz
xor
push
imul
fldcw
pop
push
out
clc
mov
les
xchg
inc
mov
insl
jbe
cmp
mov
mov
out
push
inc
stos
mov
and
lret
pop
clc
dec
ss
cmpsb
jo
mov
pushf
mov
sbb
pop
mov
add
xchg
cli
adc
fsubrl
test
movsb
pop
imul
cmp
mov
xor
dec
mov
ja
mov
repz
fsubrs
and
push
and
idiv
xchg
push
popa
or
inc
push
mov
out
insl
push
and
sub
lds
aad
cmp
inc
sbb
or
xchg
jns
rolb
js
imul
or
dec
cmp
or
cmpl
pop
sar
loopne
mov
push
jg
pop
sub
fcomps
cmp
cwtl
daa
xor
and
enter
inc
ds
jno
pop
or
mov
ljmp
shrl
sbb
mov
out
push
pop
push
lahf
cmp
mov
cli
inc
mov
sbb
adc
cmp
outsb
add
xor
lds
lret
test
roll
dec
xchg
fidivrs
in
out
push
test
rcl
push
push
push
and
xchg
ficompl
mov
pusha
sub
mov
dec
cmp
jne
or
test
out
adc
xorb
popa
mov
cmpsb
pop
mov
jmp
jbe
and
inc
fisttpll
inc
mov
aaa
movsl
cmp
nop
insb
sub
mov
pop
into
ljmp
and
push
out
lret
mov
test
pop
jg
pop
ffree
push
outsb
nop
jg
cmc
lods
or
xchg
sub
add
ret
pusha
jmp
outsl
add
inc
mov
push
arpl
sahf
lahf
mov
cwtl
add
and
and
nop
push
sbb
cmp
xchg
jg
rcr
cmpsl
into
adc
xor
aad
or
das
and
xor
mov
jb
fisubrs
push
fdivrs
adc
cmp
pusha
movsl
outsb
iret
sbb
mov
add
pushf
movsb
arpl
xor
sbb
mov
jg
jbe
dec
push
js
sbb
jnp
push
inc
addr16
xor
mov
repz
mov
push
lcall
xchg
push
pusha
pop
test
push
pop
mov
fdivr
xchg
or
out
inc
lret
dec
ss
cs
dec
and
and
adc
mov
ljmp
cwtl
xchg
mov
xchg
orl
pop
insb
test
lods
push
pop
pop
xor
dec
shrl
cmpsl
fdecstp
pop
stc
pop
stc
push
cltd
loopne
add
aaa
pop
in
jbe
mov
dec
lock
orb
lock
jge
push
sub
lods
xchg
xchg
inc
mov
mov
cwtl
rep
mov
pop
lods
jns
xchg
iret
pop
ret
enter
subb
loop
dec
in
dec
popa
mov
mov
dec
jge
repz
test
pusha
adc
sbbl
inc
jnp
add
cmpsb
mov
dec
lret
push
int3
call
inc
adc
adc
sbb
xor
fcompl
fwait
cmp
or
pop
dec
mov
rcl
rorb
out
adc
std
stos
sti
aas
test
adc
cs
xchg
loop
fs
ds
fstl
dec
fmulp
dec
mov
mov
add
sub
add
iret
dec
pop
push
data16
add
fwait
cld
xlat
push
clc
aas
mov
andb
adc
fldl
iret
sbb
mov
stos
popf
or
test
cmovne
imul
fcoms
dec
mov
mov
ffree
movsl
std
jb
decb
push
push
aaa
test
jl
jbe
dec
cmp
loopne
push
mov
fistps
mov
xor
fwait
in
mov
sti
ss
std
pop
jne
and
ss
in
adc
sbb
clc
jg
sbb
jno
xor
cli
outsl
nop
sub
test
or
leave
push
ljmp
pop
fs
imul
aaa
xchg
lods
cld
jge
xchg
add
mov
mov
push
cmc
dec
add
sub
bound
scas
and
aad
sahf
mov
in
adc
dec
xchg
adc
fisttpl
mov
or
sub
dec
push
test
les
pop
enter
jae
mov
es
in
mov
insb
ss
xchg
in
or
jge
inc
ljmp
sub
fisttpll
push
and
aas
gs
and
cmp
push
jge
xchg
xchg
nop
iret
lret
lea
rcrl
jge
inc
daa
stos
test
mov
rclb
mov
inc
or
fisttps
movsb
lahf
or
add
lcall
pushw
dec
or
pop
sahf
aad
fbstp
jle
test
push
add
inc
je
cwtl
imull
jns
mov
popl
jmp
fcoms
jmp
sub
push
test
xor
xor
xchg
sub
pop
es
lret
jb
mov
rcrb
sub
fst
stc
xor
add
cmc
arpl
mov
mov
adc
aad
adc
pop
loope
ret
daa
hlt
sub
mov
inc
mov
leave
popf
add
mov
sub
pop
arpl
sbb
repnz
push
std
into
dec
out
popa
inc
mov
xchg
dec
or
mov
push
cli
das
loope
ficoml
stos
cld
inc
fimull
popa
xor
sub
ss
mov
mov
jmp
lock
inc
imul
add
xor
andb
cmp
cmp
lock
jge
out
sub
jle
mov
iret
or
loopne
push
les
leave
ljmp
xor
pop
and
aad
sub
out
test
push
cmp
testl
cmc
stos
gs
and
pop
jp
and
jp
loop
cmp
mov
fs
mov
icebp
dec
adc
jbe
enter
cli
add
xchg
cmp
fldenv
push
out
orb
mov
add
add
xchg
lcall
insb
pop
mov
dec
das
jbe
cld
inc
stos
cs
mov
mov
insb
cmc
jg
fstps
cmpsb
cs
mov
in
push
lds
ja
mov
sbbb
imul
arpl
aaa
shlb
ficoml
xchg
out
mov
fwait
lret
cld
rcl
das
pusha
pop
jg
shl
cmp
loop
mov
aam
inc
push
or
into
and
nop
outsl
xchg
mov
dec
pushf
xchg
xchg
push
sahf
adc
adc
mov
jp
add
out
xchg
out
test
ret
or
scas
sub
mov
repnz
jle
or
pop
fsts
pop
sbb
add
aad
out
push
iret
cmp
ljmp
jb
sarb
call
bound
test
les
int3
ret
popa
or
test
adc
pop
fadds
popf
mov
pusha
enter
mov
jle
mov
in
imul
cmpsl
cwtl
lahf
jmp
fbstp
dec
adc
rol
mov
mov
std
movsl
sbb
mov
cmp
xchg
std
test
pop
xchg
mov
fbstp
decb
aam
jae
lea
adc
push
shrb
popa
xorb
movsb
adc
loope
roll
subb
inc
add
cltd
dec
cmp
mov
cwtl
cli
call
jmp
rolb
push
push
in
lret
lds
pushf
mov
movsl
movl
cli
mov
lods
sbb
push
pop
popf
pop
sbb
jle
mov
pop
stos
shl
inc
and
dec
mov
or
sub
cmp
xor
insl
mov
je
lea
test
jecxz
dec
pop
push
lock
aam
das
add
repnz
rclb
fisttpll
imul
rcrb
push
sbb
cmp
icebp
rcll
adcb
mul
push
mov
shll
loope
fidivl
lods
dec
mov
ljmp
iret
popa
jge
in
mov
fidivrs
fnstenv
outsb
dec
sbb
sti
or
xchg
xchg
jp
lret
or
add
jmp
fcoms
imull
adc
jne
pop
mov
xlat
xor
jecxz
fistps
in
dec
sub
jne
orb
dec
mov
cwtl
sbb
jo
sub
inc
jmp
fnstsw
dec
xchg
xchg
push
in
cmp
stos
jo
lret
lea
mov
push
ja
xlat
sub
int3
xor
and
dec
popa
das
mov
mov
iret
mov
add
mov
pop
mov
push
out
and
mulb
sub
addr16
xchg
or
or
push
xchg
cmp
or
or
sti
notl
rolb
xchg
cmp
ret
mov
push
cli
xchg
lahf
shl
repz
dec
outsb
or
sub
movsl
shrl
mov
mov
jle
cs
sarb
xchg
shrl
push
cmpsl
sbb
popf
and
xchg
not
loope
inc
popa
dec
leave
push
pop
sahf
shlb
pop
outsl
xchg
test
lock
and
xchg
out
movsb
and
mov
cli
push
loop
sbb
adc
mov
cmp
sbb
fsubl
aaa
loop
or
repz
scas
sub
roll
fs
outsb
cmp
jle
or
sbb
insb
push
repnz
aas
push
into
cmp
sub
push
mov
call
cmpsb
sbb
mov
repnz
mov
cmc
xchg
je
fcoml
jle
adc
sub
push
insb
cltd
jmp
adc
lock
mov
mov
push
rcrl
fwait
or
xor
lahf
jo
xchg
inc
sahf
lods
in
cmp
bndstx
popa
mov
hlt
or
in
ds
insb
jae
repnz
lret
jmp
fiadds
sub
inc
sahf
int3
xchg
jecxz
add
fidivs
mov
push
and
jno
hlt
nop
pop
push
mov
cmpsl
cmp
fwait
aad
jno
sbb
xchg
insl
mov
aas
ljmp
push
cli
in
loop
arpl
movl
xor
jecxz
mov
cmp
shl
jno
add
fildll
stos
cmp
xor
push
or
pop
lds
int
clc
fsqrt
enter
loopne
dec
mov
xchg
sbb
shrb
js
pusha
inc
mov
mov
xchg
adc
sub
imul
mov
test
pop
xor
mov
lahf
fs
mov
inc
and
add
and
pop
shlb
add
cmp
inc
cltd
jmp
mov
out
adc
adc
cmc
xchg
dec
and
inc
sbb
mov
xchg
stos
int
push
dec
or
lret
pop
hlt
fs
hlt
push
push
sub
and
in
int3
mov
pop
add
les
xchg
ret
dec
int
push
cltd
push
sbb
push
dec
jle
or
jnp
sub
or
mov
mov
stos
dec
cmpsb
push
fdivrl
popl
cltd
popa
repz
test
lock
std
cmp
test
sbb
add
push
adc
push
cmp
scas
add
cmp
sahf
sbb
hlt
add
movsb
dec
mov
mov
jecxz
lock
pop
enter
mov
dec
xchg
adc
adc
ficoml
loope
push
out
lock
jg
dec
mov
adc
fcomi
dec
fistpll
ljmp
cmpl
or
jns
out
jp
loop
test
xchg
mov
daa
pop
adc
cld
sub
mov
cmp
testb
mov
xor
mov
dec
mov
push
cmp
adc
mov
jbe
xchg
cli
lds
movsl
add
and
xor
mov
icebp
mov
data16
call
sti
adc
push
leave
push
iret
mov
xlat
dec
je
idivl
fdivrs
mov
jo
inc
call
iret
mov
xchg
dec
mov
mov
add
cld
jo
add
lea
imul
dec
clc
fcomp
mov
add
daa
jg
and
std
das
xchg
push
dec
dec
and
mov
push
xchg
loop
inc
aam
nop
lds
mov
fisubl
sbb
mov
jno
test
push
and
filds
gs
inc
sbb
dec
fcoms
fcmovbe
pushf
mov
inc
sbb
cmp
ja
dec
in
test
sub
jg
aad
pop
add
xchg
mov
repnz
pop
and
in
pop
sub
shrb
push
push
jo
or
xchg
jae
mov
aam
scas
jmp
or
jle
jecxz
mov
scas
cmp
pop
lods
pop
popf
add
mov
mov
test
fwait
xchg
xlat
add
jb
fimuls
insl
push
rorb
cmp
sbb
xor
jnp
rcll
and
movsb
mov
jns
pop
adc
sbb
xlat
sub
xor
arpl
jne
bound
dec
in
leave
ljmp
jle
mov
cmpsl
jno
rorb
mov
cmp
add
inc
push
fsub
mov
shrb
out
cmpl
xchg
xor
inc
sbb
pop
loopne
sti
xor
or
out
sub
inc
mov
mov
out
pop
jle
or
jl
sbb
outsl
repnz
adc
fmuls
dec
enter
add
fnsave
lea
loope
and
mov
sub
xor
jbe
fnstenv
jbe
jbe
and
cld
sbb
fsubr
cli
push
lds
adc
jb
rcrb
adc
cmp
repz
sub
not
push
mov
jnp
rcll
push
pop
cmp
outsb
add
and
push
int
popf
outsl
dec
addr16
shrl
push
test
sbb
fcoml
push
xor
push
ss
je
fcom
xor
mov
lds
fnop
mov
es
out
pop
add
mov
loope
add
in
jle
dec
mov
push
mov
cs
or
xchg
jnp
push
loope
flds
loopne
lcall
mov
lds
out
mov
jge
inc
je
jl
ret
int
mov
add
clc
sbb
shrl
pusha
mov
ds
stos
push
lea
dec
add
mov
addr16
ret
push
pop
loopne
pop
rcll
add
bound
push
add
rolb
fcoml
or
xchg
cwtl
mov
in
out
dec
cmp
cwtl
jecxz
lahf
and
pop
lahf
dec
outsb
dec
outsb
and
push
dec
and
bswap
rcrb
lahf
lock
xor
push
cmp
rclb
mov
push
or
lods
call
xchg
sub
xlat
cmpsl
lret
ret
jp
cmp
roll
and
gs
test
cmp
ss
inc
mov
sbb
jo
popf
daa
add
mov
setns
add
lea
ja
enter
xchg
mov
or
jl
or
jg
movsb
mov
repz
pop
sbb
in
gs
cmp
mov
scas
jecxz
cmp
or
pop
scas
jns
jge
jl
cli
scas
push
jae
mov
pop
inc
repz
inc
and
pushf
pop
das
fisubs
mov
ret
in
cli
cmpsb
orb
adc
cli
or
jo
cmc
imul
adc
cs
outsb
nop
popa
mov
loopne
push
or
push
jno
mov
xorl
mov
rcrb
outsl
cld
aam
subl
jno
jle
test
jmp
test
mov
shrb
bnd
lds
inc
jge
jo
test
jnp
popa
imul
icebp
cmp
sub
pop
sti
data16
nop
adcl
push
inc
aas
jae
add
lds
orl
test
cmp
jle
out
insl
int3
jno
aad
adc
mov
mov
mov
dec
pop
fimuls
mov
cmp
or
cli
daa
cmp
mov
mov
in
xchg
aaa
adc
leave
xor
mov
stos
sbbb
popa
push
adc
lods
inc
pop
adc
cmc
jg
jecxz
xor
insl
cmpsl
andb
flds
jbe
fbld
dec
outsl
dec
enter
popf
sub
hlt
sbb
leave
and
pop
dec
push
fisttpll
dec
inc
mov
cld
test
ljmp
and
cwtl
shll
mov
inc
mov
push
pop
xchg
pop
imul
int3
mov
mov
das
mov
sub
xor
mov
int
pop
push
cmpsb
iret
mov
lret
mov
xchg
out
xor
jnp
sbb
xchg
ret
jbe
mov
outsl
lret
cmpsb
jae
push
adc
gs
cmp
les
imul
push
xchg
adc
mov
mov
jmp
inc
push
add
sub
and
pusha
ss
ret
imul
cs
inc
and
outsl
xchg
hlt
pop
adc
adcb
cld
rcrl
fildl
das
xor
movsl
mov
cmpsb
mov
inc
in
sarl
lods
push
popa
loope
adc
sahf
fadds
dec
mov
pop
cmpb
mov
adc
cmp
pop
imull
fstps
jecxz
push
jle
ret
add
dec
lcall
ljmp
mov
shlb
out
add
mov
rolb
rcrl
rcll
add
stos
mov
sub
mov
data16
jne
andl
outsb
int3
ja
adc
jb
xchg
add
bound
inc
test
es
mov
add
lea
and
adc
dec
sbb
mov
mov
sub
inc
mov
mov
jg
rcrl
loope
mov
sub
mov
fisttpl
sub
adc
add
aam
mov
push
pop
dec
roll
shlb
cwtl
jne
inc
adc
insl
mov
and
repz
dec
mov
enter
xchg
arpl
out
filds
jbe
insl
lret
in
int
mov
pop
sbb
and
movsl
lahf
jnp
loope
lea
adc
test
mov
and
add
shll
insl
xchg
test
into
mov
xchg
pop
sub
or
mov
sti
out
lcall
std
push
hlt
daa
test
cwtl
pop
lods
loop
xlat
imul
push
xchg
add
or
ja
fabs
xor
sub
sysexit
nop
dec
add
dec
lock
outsb
push
pop
inc
cwtl
in
fucomp
loopne
movsb
hlt
push
ds
cwtl
mov
xor
clc
adc
push
mov
add
cmc
fmull
xor
xchg
out
add
mov
sbb
popf
adc
imul
cmp
lret
ret
int
popf
push
test
ffree
cmp
popa
popf
into
push
loope
outsl
int3
mov
repnz
fcmovnbe
mov
and
rorb
out
repz
lcall
daa
xor
inc
aaa
aaa
mov
pop
repz
xchg
cli
mov
xchg
jbe
dec
dec
push
mov
cmpsb
ljmp
push
mov
jecxz
das
pushf
test
stc
jl
push
xor
or
and
hlt
jge
mov
shrl
in
add
mov
test
lret
outsl
adc
mov
inc
rorl
inc
int
cs
xorl
mov
jns
jno
mov
bound
cltd
or
adc
inc
push
dec
lret
movsb
inc
aam
popa
fwait
test
lret
scas
loope
dec
data16
dec
inc
in
dec
sub
push
cmpsb
ret
or
push
mov
inc
jmp
popa
loop
push
adc
aad
cwtl
xlat
js
ljmp
pop
cwtl
pop
mov
outsb
pop
jl
mov
cmpsl
lcall
js
jno
shr
mov
fldenv
adc
inc
hlt
test
iret
inc
hlt
pusha
sub
cmp
in
adc
into
insb
add
fsubs
stc
xchg
jo
dec
lods
cmp
sub
ljmp
jnp
sub
test
out
pop
aaa
and
cltd
pop
loopne
cmpsb
inc
stc
sub
out
pop
dec
xchg
push
aaa
shr
js
push
push
pop
aad
mov
lcall
lahf
inc
and
cltd
mov
mov
pop
push
sub
fs
insl
or
jp
out
adcb
inc
lcall
lds
std
inc
push
adc
mov
inc
daa
repnz
pop
cmpsb
jmp
int3
ror
es
dec
pop
mov
cmpl
testl
pop
or
aaa
mov
fstpt
test
lea
loopne
sub
jno
out
pop
ret
push
push
inc
push
sub
mov
fidivrl
sbb
fdivrs
push
outsl
push
sti
cltd
ds
les
and
push
flds
in
ret
ret
dec
call
sub
rorb
inc
sbbw
or
cwtl
in
xor
insl
adc
movsl
jne
sahf
sbb
sub
jns
jae
scas
xor
mov
adc
lahf
push
movsl
insb
shlb
mov
pop
sbb
and
xor
add
mov
std
je
iret
fidivrs
sub
pop
and
ds
push
movsl
inc
xor
cmp
push
cmc
pop
das
mov
pop
iret
pop
adc
ljmp
sbb
repnz
sbb
adc
fldt
jle
outsl
andl
sti
out
mov
jl
iret
add
rclb
out
addr16
xor
jl
ret
xchg
xor
inc
cmpsb
push
sbb
ret
jo
gs
scas
jl
jmp
cmp
imul
pop
lcall
mov
int
cli
pop
sti
and
lahf
sarl
and
imul
jp
lahf
cwtl
inc
out
inc
xor
lea
pusha
cmc
aas
add
fs
fbld
xchg
mov
cltd
push
clc
sbb
jle
les
cmp
jg
xchg
scas
into
jo
jns
cmc
mov
test
insl
shld
imull
jae
test
add
test
fsubs
jne
xor
xor
clc
adc
sub
jmp
stos
mov
xlat
or
cld
testb
push
in
pop
sbb
rsqrtps
pushf
pop
mov
sbb
xor
adc
jecxz
repnz
xchg
hlt
jle
icebp
ret
dec
pop
inc
mov
or
adc
fldcw
in
mov
loope
or
sbb
iret
mov
loop
dec
mov
inc
subl
mov
jno
testl
popa
jnp
mov
cmpsb
cmp
push
sub
insb
add
xor
icebp
ljmp
sub
dec
lods
jo
xorb
les
lods
xchg
and
cmpsl
sbb
sub
fcoms
mov
sub
xlat
loopne
xchg
mov
mov
pop
ret
jb
and
mov
dec
aas
mov
sbb
out
sbb
fcompl
stc
push
cmovp
movsl
push
lret
mov
idivl
push
sarl
loop
cmp
lcall
inc
jmp
movsl
inc
mov
xor
mov
cli
jmp
adc
dec
int3
inc
inc
jb
icebp
and
nop
cli
push
cwtl
mov
adc
ss
xchg
mov
ljmp
aaa
cmp
mov
jb
lret
pop
lahf
or
sub
test
stc
and
cmpsl
inc
adc
test
das
jae
and
call
push
ficompl
fiadds
cli
decb
xor
cmpsb
insl
lds
test
aad
je
nop
sub
mov
call
pop
in
mov
nop
in
cmc
push
mov
xor
and
adc
dec
dec
lock
loop
sub
mov
xor
or
xor
adc
in
jmp
mov
adc
addb
inc
imul
pop
mov
xor
mov
adc
cmp
or
dec
xor
imulb
insb
ret
leave
sbb
jns
push
or
mov
sarb
mov
pop
mov
xor
cmp
int3
cld
and
dec
rclb
jns
or
clc
test
mov
sbb
repnz
push
sub
popf
add
dec
into
int
je
jl
popf
sub
hlt
xor
inc
ret
mov
adc
fidivs
jns
loope
mov
sbb
lcall
popl
dec
and
cmc
pop
xchg
add
xor
lret
dec
lock
dec
and
sub
test
cmp
jp
dec
xchg
movsl
hlt
jb
mov
cmp
fcomps
jmp
enter
insl
jl
aam
jmp
jb
int3
jae
sbb
xor
push
mov
mov
mov
mov
movsl
add
fidivrs
pop
aas
xchg
jns
fwait
mov
inc
lahf
dec
inc
inc
in
xchg
lea
pop
inc
inc
sbb
popf
push
jae
mov
andb
mov
imul
js
inc
inc
ret
fidivrs
inc
sti
sahf
or
insb
mov
ljmp
inc
jns
ds
rol
es
and
ds
sbb
sbb
push
jl
cld
ret
int
fstpt
sub
sbb
movsl
mov
insl
testb
jp
ljmp
fdivr
mov
mov
inc
cbtw
adc
pop
shlb
loopne
aad
push
fidivl
into
scas
adc
jecxz
lret
cwtl
pop
pop
mov
bnd
mov
arpl
shrl
sub
xor
sbb
test
dec
xor
repz
hlt
mov
jg
scas
pop
inc
pop
push
jp
nop
jno
jbe
lret
lret
jnp
mov
popl
dec
or
cwtl
das
push
negb
out
out
add
test
aad
scas
push
in
mov
pusha
cmp
inc
and
dec
xchg
add
inc
ret
dec
pop
xor
cwtl
popf
cmpsl
mov
sub
sbb
lods
int3
dec
or
sarl
testb
sub
rcrb
repnz
movsl
out
inc
jae
stos
aas
stos
subb
gs
test
call
inc
call
into
dec
pop
aas
pushf
icebp
inc
and
push
dec
mov
dec
outsb
sahf
xor
fimuls
push
loop
icebp
mov
add
out
xchg
lret
imul
call
sbb
lahf
jb
adc
jecxz
and
out
lods
adc
int
test
daa
and
jle
arpl
scas
pop
test
inc
or
adc
mov
dec
inc
test
mov
out
test
ljmp
push
and
mov
lret
add
sahf
les
jns
add
mov
push
insl
jns
dec
jno
dec
pusha
insl
xchg
cmpsb
mov
lcall
js
push
push
pop
aas
dec
sub
xchg
dec
add
dec
cltd
mov
mov
imul
mov
pop
les
dec
addl
fwait
pop
rcrl
dec
je
push
or
add
sbb
pop
es
add
pop
inc
jge
jns
divb
mov
mov
dec
loope
test
mov
es
jmp
stos
add
insb
mov
cmpsl
jnp
insb
cltd
adc
mov
mov
pop
call
ljmp
jne
inc
testb
stos
scas
push
maskmovq
imull
jle
inc
mov
push
lahf
xor
dec
dec
push
int
or
jmp
inc
leave
hlt
orl
sti
jnp
or
std
add
sbb
inc
pusha
fildll
mov
lret
inc
mov
push
ret
pushl
jae
js
mov
cmp
les
rclb
cmp
pop
lods
mov
mov
xchg
pop
test
mov
jp
or
sbb
pop
clc
pop
sbb
out
decb
jle
inc
out
out
daa
sub
mov
mov
fs
lea
mov
inc
inc
mov
test
pop
and
iret
fmuls
mov
ds
fsubrs
push
and
aas
add
xchg
mov
cmpsl
aaa
loop
adcl
ret
lret
mov
ret
jno
xchg
mov
insl
xlat
xor
fldt
xor
sub
pop
jmp
push
fucomip
fadd
mov
mov
out
out
je
push
rcll
fcmovne
shlb
pop
sarb
test
inc
int
mov
jbe
mov
jns
mov
repnz
movsl
xchg
inc
xorb
push
pusha
pop
data16
mov
gs
fcmove
fidivrs
cli
int
xchg
cltd
jns
jb
xchg
cmp
jo
push
mov
test
pop
enter
push
mov
jno
sbb
ror
mov
dec
pop
and
jmp
mov
leave
mov
out
stos
push
or
mov
fisttps
inc
test
in
and
fists
aam
enter
sahf
fadds
jne
das
mov
inc
test
sbb
aaa
pop
insb
push
push
and
jb
inc
iret
jl
lock
add
mov
sbb
cs
pop
es
or
xor
cmpsb
push
insl
ljmp
dec
fcmovne
into
inc
mov
xchg
bsr
hlt
shr
aad
test
outsl
cmp
mov
dec
push
cmp
ja
pop
inc
lods
inc
add
cmp
push
jae
jne
test
add
jb
scas
add
fcmovbe
imul
aaa
lret
mov
jne
cli
ss
mov
adc
jbe
pop
cmp
push
das
decl
movsb
nop
dec
jmp
int3
pop
stos
jg
out
in
roll
cmpsb
sub
in
mov
jbe
fmulp
lahf
mov
aaa
movsl
jne
push
movsl
dec
inc
jle
and
fsubl
cmc
sub
aas
orl
and
loopne
scas
ja
inc
pop
fs
js
inc
add
nop
leave
js
cmp
scas
arpl
pop
cmpsl
xor
cld
addr16
xor
pop
imulb
add
cli
pop
mov
add
fistps
cmp
adc
adc
leave
orb
test
push
out
scas
pop
addr16
adc
pop
dec
int
ret
out
mov
inc
pop
or
jnp
mov
pop
rorb
in
nop
lret
mov
lret
and
mov
sub
ja
inc
fldcw
sar
daa
xchg
repz
in
sbb
cltd
pop
adc
xor
fnstenv
icebp
push
add
les
mov
pop
scas
xchg
mov
pop
sub
or
popf
aas
rclb
add
dec
es
aas
cwtl
xchg
cmp
sbb
sbb
inc
pop
cmp
fsubs
in
decb
loope
bswap
shr
adc
movsb
mov
inc
fcompl
lds
mov
cmp
jle
jae
das
insb
inc
outsl
dec
sub
sub
sub
push
mov
push
dec
aas
loopne
pop
and
inc
xchg
out
mov
cmp
lods
jns
jp
push
sbb
ds
das
cmp
mov
mov
jmp
cmp
lock
call
std
cmp
addr16
push
notl
insb
mov
lahf
fisubrs
popf
push
sti
xchg
idivb
fwait
lahf
fmull
sbb
xchg
dec
jl
out
loopne
sahf
fs
cmp
jle
push
in
xor
aam
jmp
icebp
pushf
ljmp
jbe
pop
clc
fisubl
push
sbb
xor
cltd
pop
cmpsb
jne
outsl
scas
fs
mov
les
xor
addb
icebp
div
lea
rclb
js
test
addr16
adc
js
test
dec
sbb
pop
cmpsb
add
lds
es
xchg
pop
cltd
fsubrp
in
fistps
add
xlat
mov
sub
popfw
xchg
int
pop
cltd
mov
js
pop
sbb
mov
rolw
cmpsl
lods
lds
ficompl
inc
cmp
cwtl
adc
sub
dec
jnp
lcall
adcl
pop
andb
out
xchg
shlb
dec
ret
push
and
adc
orl
or
cmp
sti
nop
dec
aas
sbb
notl
rcr
inc
lea
icebp
pop
data16
jmp
rcrl
push
dec
out
ss
enter
btc
je
sub
mov
in
pop
in
adc
call
sbb
call
fsubl
mov
pop
sbb
or
cmp
std
arpl
insl
aaa
push
cmp
in
andl
xor
mov
int3
sub
and
outsl
sbb
in
ror
and
fsubl
xor
mov
rcll
inc
pop
faddl
xor
sbb
push
insl
pop
adc
sbb
mov
xchg
inc
popl
dec
jecxz
insl
ret
push
mov
rcll
subl
bound
in
jmp
push
push
fstpt
stc
leave
and
pop
dec
jl
movsl
in
or
cmp
stc
add
inc
dec
cld
shl
sub
xor
mov
pusha
adc
pop
aaa
jne
mov
mov
and
sub
ds
nop
push
loopne
fisubl
jecxz
int3
push
out
fwait
inc
syscall
sbb
xor
push
out
aam
arpl
add
mov
bound
pop
sub
push
mov
dec
imul
shr
in
mov
cmpsl
mov
lret
push
mov
insl
mov
test
aad
test
rclb
cmp
mov
push
mov
cmp
pop
cltd
mov
std
clc
clc
adc
popa
jle
or
add
pop
mov
addl
push
subb
push
add
aad
fcoml
sbb
inc
fs
jl
aam
jmp
jl
lcall
jne
push
popw
mov
mov
mov
shll
fdivs
stos
pop
in
sbb
push
sub
idivl
enter
cwtl
cmp
test
test
ds
or
xchg
jmp
sub
icebp
xchg
sbb
out
push
xchg
sbb
lods
dec
into
popf
jecxz
sub
mull
dec
js
mov
out
jno
push
xorl
les
xchg
rclb
add
dec
jb
in
add
xchg
cmc
mov
out
dec
stc
and
aam
jno
in
or
lock
xor
sub
mov
push
bound
jo
les
popf
cmpsl
cli
jne
push
mov
lea
and
arpl
mov
cmp
jp
aam
sti
push
sahf
cs
jl
xchg
sbb
xchg
cli
jno
lret
xor
and
dec
lret
sbb
aaa
xor
mov
push
test
jb
fadd
cmp
xchg
aam
sbb
sar
incb
inc
hlt
out
inc
inc
in
or
cmpsl
movsl
ror
and
movsl
xor
cmp
push
enter
jne
push
test
inc
ret
ljmp
shl
add
int3
add
jl
xchg
movsl
shll
aam
fdivrp
mov
sbb
jl
push
add
adc
popf
ret
mov
push
pushl
add
fnstcw
js
push
cmp
shll
call
rorb
xchg
push
pop
ja
lock
adc
popf
stos
xchg
das
push
mov
mov
jle
mov
outsb
pop
lea
xchg
test
test
orl
jle
xchg
les
repnz
mov
cvttps2pi
pushf
jmp
enter
pop
in
adc
icebp
out
imul
insl
add
popf
cltd
push
sbb
orl
bound
ret
mov
in
pop
in
cmc
cmp
jbe
cmpsb
cwtl
pop
mov
jmp
jnp
nop
fst
push
popa
ds
inc
xor
push
cmpsl
push
out
cwtl
xor
pushf
pop
xor
arpl
bound
and
mov
mov
push
fcomps
jg
sbb
jno
incb
loope
jno
jg
es
mov
inc
pop
insl
fdiv
adc
mov
mov
mov
and
loope
jb
loopne
outsl
test
std
mov
lahf
push
imul
push
mov
mov
movsb
fdivrl
fidivl
ret
mov
push
mov
jge
subb
or
imull
jmp
cmp
xor
jp
cwtl
fstpt
adc
leave
stos
and
cmp
nop
mov
shll
sbb
lret
sahf
sbb
rol
jae
popf
xchg
lret
xor
xlat
mov
mov
adc
cmp
icebp
repz
int
imul
movsl
and
xor
test
ds
mov
cmp
cltd
loopne
loope
inc
cmp
pop
xor
dec
or
pushf
xor
pop
cli
jle
cmpsb
or
call
cmc
popf
mov
adc
mov
lds
push
fsubs
mov
mov
repz
popa
pop
sbb
es
mov
push
pushf
jae
cmp
sub
adc
sbb
andl
cmp
add
stc
test
pushf
jns
mov
mov
cmc
xchg
mov
std
adc
xchg
mov
andl
and
cs
add
lods
mov
and
xchg
jmp
lock
push
add
std
push
inc
cmc
sub
aas
xchg
cs
adc
or
lds
cmp
push
pop
decl
jg
dec
or
inc
aad
inc
adc
mov
pushf
cmpsb
fiaddl
pop
mov
sbb
push
out
testb
in
adc
xchg
pop
or
inc
scas
jl
sti
lcall
test
xor
sub
push
push
into
cmp
sub
pop
sub
aas
scas
loopne
cmp
add
sbb
or
add
icebp
shl
sbb
or
push
dec
mov
mov
sbb
xchg
adc
push
push
out
sti
push
mov
lods
cld
jns
sbb
test
jl
dec
cmpsb
mov
pop
xor
sub
cmc
into
imul
inc
adc
jbe
ret
popf
cmp
mov
loope
iret
add
je
pop
les
movsb
adc
push
cmpsl
pop
mov
adc
in
nop
enter
jp
loop
lret
aaa
rcll
daa
hlt
cmp
sub
clc
push
movlps
pop
push
int3
out
int
addr16
jle
loope
jp
cmp
add
mov
insb
add
out
bound
fisttps
mov
das
jnp
dec
lds
mov
mov
jb
mov
testb
xorl
aaa
push
stos
aaa
or
ret
loop
sub
pop
ret
mov
sub
mov
ret
jns
sub
jge
ljmp
insb
ret
fidivl
pop
sar
scas
test
xlat
shl
data16
xor
hlt
push
xor
inc
add
dec
xchg
loope
iret
mov
dec
scas
out
imul
lret
std
push
arpl
pop
outsb
aad
in
sub
sti
jg
and
sbb
push
push
xchg
icebp
xor
test
dec
mov
nop
mov
sahf
aad
push
ss
and
stc
out
arpl
add
lahf
insb
push
inc
test
add
push
push
and
cs
aaa
sbb
imull
cmp
je
scas
pop
int3
outsl
lds
add
ret
mov
push
pop
popa
into
jge
in
mov
scas
inc
xchg
sbb
sbb
outsb
pop
adc
xchg
mov
xor
mov
lock
and
sar
adc
mov
mov
mov
in
mov
nop
push
rolb
inc
push
in
mov
out
cmp
mov
nop
push
mov
test
mov
add
push
sbb
ljmp
pop
cmp
sarl
sub
je
out
sbb
mov
shll
push
imul
and
pop
jne
push
test
xor
and
es
or
jle
cmpsl
cld
mov
pop
xor
xchg
jle
and
dec
fs
imul
pop
movl
and
push
push
leave
test
mov
pop
arpl
xor
mov
cmp
add
movsb
shrl
mov
push
and
daa
pop
adc
add
xor
lcall
cld
add
in
int3
mul
aas
inc
fcmovb
push
idivb
adc
in
data16
fsubrp
insb
and
sarl
cmp
cmp
lret
dec
push
das
loopne
xorl
dec
push
aas
loope
jge
pop
pop
stc
leave
cltd
jne
rcrl
and
pop
pop
mov
push
adc
fwait
rorb
shll
cmp
pop
push
inc
push
xchg
push
pusha
and
sub
or
xchg
dec
pushf
cmpl
and
lahf
js
cs
loopne
into
ljmp
xchg
call
dec
jno
scas
in
pop
cltd
cmpsb
xor
pop
mov
jmp
sarl
scas
not
xchg
and
fisubs
aam
ret
jne
mov
insb
daa
mov
sbb
jge
inc
in
fwait
jl
xor
dec
xchg
dec
mov
imul
jg
pop
inc
ss
mov
xchg
cltd
push
popf
dec
call
push
sub
or
or
sub
fnstenv
sub
repnz
jo
mov
mov
mov
pop
pop
xorl
lahf
inc
lret
xchg
xchg
scas
movsb
daa
repz
mov
into
mov
xlat
mov
loope
popf
jmp
shll
add
call
movsb
pusha
frstor
mov
arpl
pop
jbe
shlb
dec
adc
aam
call
mov
and
rcrl
ret
xchg
rol
xlat
scas
cltd
sbb
and
mov
popf
or
jp
imul
cltd
adc
push
sub
pop
fnstcw
in
mov
lcall
pop
in
dec
push
loope
add
mov
xor
lahf
loop
hlt
cmp
mov
xor
ret
xchg
xchg
inc
and
scas
cwtl
push
ja
and
inc
enter
jecxz
loope
or
gs
jae
jo
adc
cmpsb
mov
dec
jg
mov
sarb
hlt
add
mov
addr16
leave
popf
sahf
dec
jecxz
fucomip
stos
shl
jg
clc
inc
in
out
or
pop
in
loope
arpl
data16
loopne
mov
push
jbe
mov
in
js
dec
adc
mov
jp
gs
pop
xchg
xchg
jecxz
clc
jl
mov
or
pop
mov
mov
pusha
fcmovbe
mov
dec
cmp
mov
inc
push
ss
push
sbb
in
movsb
lahf
mov
xchg
popf
mov
push
inc
mov
adc
stos
leave
fimull
mov
in
stos
push
ret
mov
cltd
rcl
xlat
sbb
pop
es
cmp
mov
dec
dec
sbb
pop
and
cmc
inc
stc
and
cmpsb
adcl
dec
lock
daa
cmp
xor
std
cmpsb
xor
mov
andw
dec
inc
mov
fstl
pop
push
pop
cmp
mov
mov
push
lret
mov
lret
insl
mov
hlt
add
push
es
repz
mov
cltd
mov
or
jae
mov
fldz
cmp
mov
test
sbb
pushf
cmpsl
les
ljmp
stc
leave
das
fcomp
stos
movsl
xor
int
and
sub
and
cmp
add
dec
cmp
add
out
out
add
shll
xchg
cmp
insl
push
mov
fwait
mov
xchg
mov
inc
inc
inc
imul
dec
xor
xchg
sbb
cltd
jns
test
inc
adc
test
jbe
or
aaa
setne
inc
jae
and
rcl
test
lcall
mov
int
adc
adc
jmp
xchg
test
gs
hlt
imul
out
push
fwait
cmpsb
mov
dec
in
mov
gs
loope
cltd
js
lds
jb
add
cmp
mov
into
scas
push
scas
lock
cmpsl
into
pusha
lock
pop
fsubrl
inc
sbbb
fnstenv
out
xchg
sbb
outsb
cmp
cmpsl
sbb
cmp
fsubrl
dec
pop
mov
cmp
in
mov
xchg
pushf
out
xor
insb
xchg
push
arpl
call
mov
and
lret
lods
clc
pop
xor
lahf
cmc
jle
out
mov
adc
sbb
leave
outsl
scas
add
mov
rolb
inc
sbb
mov
cmp
dec
and
test
add
pop
pop
push
lret
adc
stos
and
sbb
and
lret
adc
mulb
jns
daa
xchg
jae
fadds
add
and
push
aam
imul
or
xor
jle
sub
popf
inc
icebp
syscall
fsubrs
inc
leave
aaa
push
pop
xchg
dec
in
mov
dec
out
fbstp
sbb
push
mov
rcr
imul
jp
insb
int3
sub
sub
push
mull
pusha
add
fstpt
je
sbbw
repnz
loop
icebp
aaa
jg
or
stos
out
jl
arpl
adc
add
jl
push
ds
jns
idivl
sbb
push
push
aas
in
cmp
arpl
loope
adc
mov
call
push
dec
adc
jp
je
jnp
subb
lods
adc
clc
test
mov
mov
jle
cmp
ss
loopne
lods
in
data16
call
divl
sti
stos
xchg
xchg
or
mov
add
push
adc
enter
dec
mov
dec
addl
loope
scas
cwtl
scas
lcall
jnp
jae
mov
push
cmc
mov
mov
dec
xchg
mov
test
test
pushf
cmp
cmp
pop
mov
push
stos
and
mov
pop
dec
pop
fs
bound
shll
and
dec
cmpsb
push
adc
pop
stc
aam
aas
data16
inc
sub
dec
imull
adc
mov
xor
decl
mov
jge
cmp
add
addr16
psllq
jns
js
icebp
rorl
mov
outsl
ret
fcmove
out
cmpsb
sbb
pushf
pop
out
dec
inc
movsb
inc
inc
mov
sbb
movsl
cld
repz
mov
xor
and
pop
cmc
sub
jns
or
out
jmp
inc
bound
sbb
push
mov
lock
clc
divl
jecxz
xor
jo
mov
cmp
orb
fsubp
dec
mov
or
jg
movsb
dec
lds
cmp
les
testl
shlb
or
out
out
int
rclb
pop
sub
jo
pushf
jae
lock
movsl
push
subl
mulb
iret
pop
or
jnp
in
cmpsb
imul
push
jb
clc
sti
sub
fnstsw
cmp
test
daa
test
add
sub
repz
mov
add
js
lock
dec
movsb
js
mov
or
push
add
and
sbb
mov
jmp
faddp
mov
xor
jns
loopne
leave
ror
call
lea
jnp
in
adc
aad
into
cli
shll
cltd
jle
jecxz
stc
pop
or
in
adcb
dec
adc
jbe
and
sub
dec
aad
mov
fstps
int3
mov
xchg
movsl
hlt
mov
sub
outsb
adc
scas
loop
pop
clc
pop
ljmp
adc
fisttpl
add
sarl
push
and
shrb
je
repz
sub
cmp
stc
push
sbb
and
insl
sbb
into
std
jg
mov
mov
pop
ljmp
sbb
imul
mov
xor
inc
add
lret
inc
sbb
out
hlt
in
mov
pop
mov
pop
jbe
mov
mov
pop
push
mov
push
jmp
jb
and
stc
jmp
and
insb
fisubrl
in
cld
inc
mov
mov
dec
mov
jns
mov
data16
out
out
push
xchg
je
mov
cmp
clc
rcll
or
sar
sub
hlt
shrl
movsl
rcl
mov
push
lds
lds
pop
test
or
ds
cmpb
stos
aam
mov
jecxz
mov
push
stc
xor
sbb
out
decl
cld
lret
sbb
mov
sub
lahf
imul
sub
add
dec
xor
lret
call
sbb
xchg
xchg
jnp
loop
pop
loop
test
jge
sbb
and
dec
inc
push
dec
les
mov
sub
xchg
ficompl
lcall
push
es
das
add
or
mov
jmp
jl
les
jp
cwtl
les
insb
adc
jmp
jmp
sbb
cmpsl
pop
mov
bound
test
push
int
int3
mov
cmpl
or
add
mov
popa
xchg
sub
out
sti
inc
cmp
aam
stos
psrad
pushf
insl
xor
stos
aam
inc
ss
cmpsl
insb
push
icebp
push
sbb
pop
cltd
lods
push
icebp
fwait
jbe
dec
insb
repz
mov
loop
out
jp
inc
push
lods
test
xchg
and
mov
ds
orb
xchg
and
je
sbb
xlat
rclw
mov
jae
push
mov
lds
jb
data16
mov
cmpsl
leave
pop
pop
inc
mov
xchg
fistpll
xor
and
fsubs
adc
jnp
mov
pop
mov
jl
ljmp
and
repnz
and
dec
scas
push
lock
punpckhdq
lcall
pusha
cmp
in
inc
pop
fildll
mov
js
add
repz
jg
sub
push
mov
lods
or
and
add
pop
xchg
cmpsl
mov
and
fsubl
pop
ret
pop
andl
dec
ret
add
mov
frstor
in
lret
and
mov
movsb
imul
xor
add
push
pushf
mov
dec
ficompl
xor
xchg
push
xor
mov
dec
pop
adc
cwtl
mov
dec
fmull
cli
inc
mov
jno
loop
push
daa
inc
and
mov
mov
pop
sub
aad
jg
xchg
or
mov
jecxz
jmp
adc
jne
ss
fwait
mov
pop
cmp
mov
lcall
imul
push
jnp
xchg
popf
push
das
insl
add
incl
iret
fidivrl
sarb
cmp
fs
scas
test
mov
xchg
hlt
stos
ficoml
xor
mov
and
stos
addr16
add
xchg
mov
mov
sbb
enter
xchg
jmp
sub
jbe
into
add
push
inc
pop
xchg
cwtl
push
nop
mov
jecxz
test
push
into
inc
popa
sbb
dec
mov
push
pusha
loop
scas
xchg
push
ds
lods
fmuls
mov
gs
and
jmp
mov
sbb
jae,pt
inc
shl
dec
call
imul
shl
imul
jmp
lahf
xor
dec
and
or
loop
cmp
cmp
mov
fidivrs
xchg
pop
lock
sub
mov
mov
je
or
jns
push
mov
xor
cmpsb
xchg
mov
dec
xchg
and
outsl
outsb
dec
ret
flds
pusha
dec
fnstcw
das
out
mov
jle
mov
mov
inc
enter
mov
dec
add
mov
fwait
or
arpl
adc
lcall
dec
in
testb
mov
ljmp
ficoms
sub
in
popa
jecxz
lahf
adc
xchg
nop
ja
xchg
cs
ds
sbb
jge
mov
jl
insb
lods
notl
pop
aaa
push
mov
rcrl
sub
aam
mov
sbbb
cltd
dec
out
ret
cmp
jp
sub
mov
push
xchg
sub
xchg
es
cmpl
xchg
ss
fisttpll
jl
dec
insl
jge
movsb
dec
enter
mov
loope
jg
ljmp
sub
adcl
es
jg
insb
jne
aam
jb
cwtl
add
dec
rorb
jp
or
inc
mov
int
mov
insb
and
movl
pop
xchg
mov
je
sahf
or
sub
xor
push
hlt
mov
jg
pushf
mov
rcr
lods
movsb
xlat
cs
sbb
or
data16
mov
sbb
adc
push
dec
xorb
lds
push
je
movq
jnp
in
jge
xchg
dec
xchg
aas
add
in
mov
inc
mov
xor
xor
pop
sbb
mov
push
into
sub
jo
les
inc
add
push
in
in
inc
into
pop
or
sbb
lret
xchg
inc
cmp
in
mov
int3
mov
adc
std
pop
xor
loop
mov
mov
dec
test
std
mov
lds
jle
and
mov
iret
cli
call
in
mov
and
cmpsl
in
sbb
jl
jge
out
cli
mov
cmpsl
cmp
repnz
mov
jns
or
add
fmull
adcb
ja
jmp
mov
sti
jecxz
pushf
scas
nop
mov
clc
jb
fisubrs
lea
mov
movsb
call
lret
pop
mov
imul
mov
cmp
inc
mov
les
mov
dec
pop
insl
cmp
xor
xlat
inc
lcall
cli
scas
push
sbbb
push
loopne
dec
rcl
and
pushf
imul
sbb
add
outsl
or
sarb
inc
xor
xor
cmc
cld
mov
fwait
pusha
in
leave
mov
push
xchg
out
shl
pop
sbb
mov
and
sti
rcrl
push
xchg
sub
cmp
imulb
sahf
xor
and
in
or
mov
push
test
push
in
loop
lret
xor
xor
in
je
mov
stos
sub
out
mov
mov
das
xchg
pop
fldl
je
outsb
cmpsb
jbe
int
cwtl
adc
sub
mov
aam
imul
jg
dec
shlb
aad
mov
fisubs
adc
mov
std
daa
ja
adc
mov
shrl
sbb
sahf
insb
pop
fstpt
imul
xor
jg
sti
mov
fs
cwtl
popa
cs
pushf
mov
xor
inc
test
xchg
pop
lret
fnstsw
incl
test
jg
jle
jb
mov
es
mov
push
pop
loopne
xor
leave
fldenv
movsb
xchg
push
add
ljmp
dec
or
sub
inc
push
mov
mov
fst
addr16
inc
push
mov
insl
add
adc
xor
data16
lahf
int
loope
mov
jnp
adc
pop
out
icebp
mov
add
es
icebp
inc
daa
popf
mov
push
jo
mov
inc
stc
out
pop
mov
and
sbb
fnstsw
pop
pop
adc
jp
ss
jmp
mov
pop
jae
psubw
adc
or
nop
test
cwtl
stos
pop
rorl
sbb
daa
dec
dec
add
int3
xlat
xor
pop
data16
cmp
stos
mov
jns
fscale
or
fadds
adc
testb
ret
mov
test
addr16
mov
cmc
push
sub
mov
ss
enter
scas
ret
add
int3
outsl
lret
pop
cmpsl
xchg
dec
aad
aad
cld
pop
daa
rcr
mov
push
clc
lods
and
clc
test
sbb
mov
pop
pop
xor
or
or
jne
and
lods
sahf
mov
add
pop
add
push
adc
into
push
or
fsubs
sbb
lea
mov
fwait
xor
cmp
daa
xor
inc
push
pop
cs
dec
mov
xchg
xor
inc
fs
subl
lcall
aaa
pop
in
adc
xchg
ret
dec
and
add
push
mov
imulb
test
pop
ds
sarb
imulb
cld
and
divl
ss
gs
or
in
out
and
cmp
mov
ss
mov
xor
cmp
sti
or
clc
sbb
add
dec
outsl
pop
inc
and
and
push
dec
pusha
repz
ret
xor
and
mov
jmp
pop
xor
xor
push
push
idivb
bound
xorb
outsb
mov
lcall
ret
test
inc
bound
or
jno
lods
pop
xchg
aas
fstpt
cs
fldcw
add
add
adc
push
dec
add
adc
sub
pop
cli
icebp
xchg
cwtl
call
imul
pushf
sub
cmc
cmp
fs
test
pusha
in
fcmovnbe
fisttpl
ljmp
and
dec
je
dec
jns
mov
aad
mov
push
jp
pop
pop
xchg
push
xchg
scas
mov
dec
mov
lods
addr16
sbb
imul
cmp
xor
test
adc
ljmp
jae
outsb
dec
aad
pop
jb
cld
fldenv
xchg
mov
out
cmp
mov
mov
clc
imul
jns
sub
test
cwtl
mov
dec
fisttps
loop
outsl
sub
js
cmpsl
jecxz
pushf
pusha
outsl
sub
push
inc
cld
adc
aaa
inc
pop
fldcw
mov
sbb
jmp
mov
sarl
jns
xor
stos
movsb
bnd
int
mov
adc
mov
mov
fcmovnb
jns
pop
xchg
xlat
push
pop
lods
xor
mov
mov
int3
cmpsb
mov
mov
push
xor
cmc
setns
xlat
pop
ljmp
andl
mov
divb
inc
pop
test
test
sub
and
daa
int
sahf
lret
int3
push
loopne
js
out
clc
push
insl
rclb
xlat
inc
or
int3
mov
jg
cli
add
and
rcll
adc
adc
pop
sub
mov
or
add
cmp
ss
dec
in
jmp
sbb
push
mov
mov
repz
add
xor
dec
stos
dec
fwait
jl
push
clc
mov
mov
mov
outsb
icebp
xor
stos
mov
fcomps
mov
add
rsm
fs
mov
xchg
pop
test
mov
jo
push
popa
test
mov
orb
cmp
test
pop
ss
add
jns
sbb
pop
fisubl
push
fdivp
xchg
xor
inc
adc
pop
or
xor
lds
out
inc
cmp
out
pop
test
and
dec
mov
mov
and
xchg
cmp
mov
dec
stos
xor
cmp
push
mov
je
int3
xchg
pop
daa
dec
inc
adc
test
rol
jbe
mov
push
movsb
xor
lods
mov
adc
mov
dec
loopne
js
repz
push
jo
push
cmp
dec
out
mov
add
and
pushf
xor
inc
scas
and
loop
sub
jmp
arpl
and
adc
mov
mov
out
aad
movb
jns
scas
fistl
xor
les
in
jp
mov
inc
psubw
jo
jmp
cli
movsl
clc
int3
ds
mov
jmp
and
dec
xor
movsl
dec
push
test
xchg
jle
iret
jmp
and
gs
mov
cmp
pop
into
push
mov
or
cmc
call
xchg
push
mov
pushf
dec
imulb
fcmove
stos
cmpsl
and
mov
into
cli
filds
js
pop
outsb
push
cmp
or
in
mov
ljmp
push
inc
sbb
pop
xchg
sub
dec
pop
mov
jae
push
push
icebp
sbb
sbb
lahf
inc
jl
in
add
xchg
movb
fs
sub
es
adcl
jne
push
jno
pop
cmc
mov
mov
arpl
jle
je
dec
data16
add
xchg
or
in
out
enter
cmp
or
xchg
jns
orb
decl
mov
pop
stc
adc
push
dec
mov
sbb
ja
sub
sbb
rcrl
pusha
int
add
addl
int
int
push
scas
mov
test
es
mov
xchg
andb
fisubl
shl
shlb
sub
cmp
push
push
icebp
xor
mov
out
bound
jne
hlt
stos
out
dec
fs
inc
jo
and
mov
cltd
sub
bound
repnz
jae
cmpsb
and
int
add
push
outsb
out
frstor
or
pop
fisttpl
sahf
mov
outsl
sbb
js
xchg
or
dec
pop
popf
pop
push
jecxz
inc
jmp
dec
into
out
ljmp
sub
jl
movsl
imul
ja
popa
mov
insl
mov
mov
in
cmpb
sahf
lahf
mov
add
pop
or
fisttpll
xor
dec
jne
pop
mov
mov
fistpll
mov
imul
sub
repnz
es
pop
insb
cmc
or
rclb
popf
iret
and
add
pushf
mov
cli
jp
test
dec
sub
sbb
push
xor
loopne
dec
bound
shl
sbb
mov
pop
pop
jno
icebp
ja
lret
sahf
js
xor
in
and
js
fwait
push
in
popfw
cmpl
and
lret
xor
mov
call
insb
in
push
inc
data16
sub
pop
fdivrl
enter
push
test
mov
or
lods
inc
pop
pop
icebp
in
iret
fidivrs
pop
stc
sbb
ret
je
dec
jl
push
call
dec
cmpsb
or
iret
dec
insb
mov
lret
sbb
cmp
sub
mov
lods
in
adc
and
icebp
add
addb
movsl
mov
nop
mov
cmp
jp
loop
sahf
repz
lea
or
ss
into
std
call
pop
pop
mov
bound
adc
fdivp
lret
adc
jmp
push
out
and
cmp
add
mov
adc
cwtl
orl
inc
and
mov
and
imulb
dec
mov
aam
and
jns
jl
sub
bound
jns
push
pop
aam
ds
aam
popf
mov
pop
bound
inc
cmp
gs
das
loope
push
popw
fisttps
outsb
xor
inc
mov
imul
dec
jnp
mov
pop
mov
inc
cmp
out
cmp
cltd
sti
mov
aam
mov
or
arpl
adc
icebp
mov
cmpsb
in
dec
inc
in
or
lahf
call
dec
insl
clc
shlb
aam
lcall
dec
pop
cli
push
push
dec
stc
inc
or
adc
aam
cmp
and
mov
lods
mov
inc
aad
add
lds
adcb
xor
inc
orb
push
js
mov
mov
and
or
xchg
xchg
mov
mov
fs
dec
xchg
pop
jo
inc
mov
dec
pop
add
lret
adc
ss
mov
lds
stos
cltd
sarb
ret
lea
mov
or
mov
adc
clc
add
jne
mov
xlat
mov
xor
xor
loopne
test
inc
push
in
les
sbb
push
mov
test
loopne
push
js
pusha
xor
rol
mov
mov
mov
adc
adc
popa
cmp
repnz
fstl
add
jg
cmp
mov
xor
inc
cmp
jae
xchg
sbb
and
xlat
adc
inc
mov
shlb
ss
and
ja
adc
leave
or
lods
xor
adcb
icebp
repz
inc
pop
mov
push
mov
int
aad
adc
popa
aas
inc
test
insb
sbb
mov
movsl
xchg
mov
rclb
ficompl
jno
sub
push
jmp
inc
mov
out
int
pop
xchg
jb
sbb
jg
inc
in
pop
addb
mov
and
hlt
pop
sarl
cmpsl
sub
ja
imul
addr16
sbb
loop
lcall
mov
fsubs
sti
sub
ljmp
fwait
aaa
dec
fnsave
in
rorb
cmp
add
mov
pop
pop
pusha
jns
insl
push
jo
test
lret
or
cmp
mov
ja
jbe
xor
jne
xor
faddl
push
mov
pop
jno
push
test
into
sbb
int
cmp
and
mov
insl
shrl
or
xchg
or
push
sbb
adc
icebp
aas
das
stos
mov
inc
pop
stc
lret
imul
dec
dec
outsb
js
je
data16
xor
mov
stos
sbb
sub
xor
xchg
dec
loopne
push
popf
sub
out
push
add
jle
nop
mov
dec
scas
mov
push
repz
dec
je
push
clc
test
sub
ss
mov
aaa
fcoml
imulb
dec
adc
mov
fimuls
push
js
not
or
dec
xchg
jge
icebp
xor
jp
and
fisttps
fcom
push
cs
adc
sub
rcll
movsl
lods
out
lret
xlat
imul
push
sar
test
andb
mov
pop
bound
pop
and
mov
mov
mov
lahf
xchg
and
mov
cmp
lcall
mov
pop
inc
aaa
adc
mov
mov
fucompp
subl
push
sbb
adc
sub
enter
stc
sahf
xor
xchg
mov
xchg
add
mov
leave
adc
lret
pop
sbb
add
mov
push
ret
jne
xchg
jl
and
fs
loope
jg
hlt
imul
pushf
insb
andl
xchg
fsubl
pop
jb
ja
loopne
into
aas
xlat
in
xlat
jg
js
cltd
push
mov
xchg
jne
cltd
jmp
mov
xor
jp
push
pop
pop
pop
pushf
pop
xor
lods
rorl
or
push
je
mov
xor
pusha
adc
mov
psubw
fildl
scas
and
ss
push
mov
adc
inc
cmpsb
xor
adc
cld
mov
and
mov
int3
filds
in
mov
jo
sbb
sbb
outsl
add
je
rorb
push
popa
inc
xor
add
xor
xor
dec
push
dec
rcr
mov
add
adc
jle
inc
sbb
addr16
sub
arpl
loop
das
xor
stos
xchg
popl
jecxz
push
mov
mov
pop
loop
ss
stc
sbbb
outsb
fadds
out
lock
jle
pop
insl
sbb
add
movsb
shr
in
xor
cmp
or
popf
pop
add
dec
cld
test
fcmovne
mov
add
and
addr16
cld
lea
shl
test
inc
int
aas
movsb
dec
imull
jmp
mov
add
push
sbb
les
mov
ja
shll
mov
imul
adc
jno
xor
cmp
sub
xchg
pop
nop
rol
inc
testl
jmp
stos
push
call
pop
mov
ret
and
inc
cmp
pusha
fcoms
jo,pt
dec
stc
xchg
aam
ljmp
cmc
in
pop
adc
push
popf
in
cmovle
lods
fmull
xor
adc
mov
in
rclb
xor
pushf
pop
lahf
outsb
cmp
pop
jecxz
pop
ret
xor
mov
push
dec
pop
sub
mov
jecxz
mov
ret
push
les
mov
shlb
add
push
sbb
xchg
sub
push
or
push
or
test
xchg
pop
cld
mov
lcall
pop
les
push
imul
mov
mov
mov
inc
loopne
repnz
inc
imul
xchg
pop
add
test
mov
or
mov
xor
daa
jo
incb
sbb
repz
ret
lods
jl
clc
ja
jae
xchg
pop
and
push
roll
cmp
clc
stos
jne
and
movb
mov
fsubs
andl
aad
inc
ret
int3
sub
clc
scas
into
inc
jbe
aaa
ficoml
push
mov
fs
iret
scas
jmp
pop
or
ljmp
imull
data16
pop
out
inc
jns
into
and
mov
mov
out
mov
test
fimull
xor
out
mov
add
push
and
movsb
decb
lea
icebp
cmc
add
add
cltd
data16
add
add
dec
push
lahf
jns
adc
add
sub
pop
sbb
aas
mov
inc
xchg
imul
leave
repz
xor
cli
imul
test
aas
jp
outsb
add
pop
push
and
pop
je
je
mov
clc
sbb
cmp
out
pop
fists
ja
xchg
cmp
xor
test
inc
sbb
jb
inc
sarb
sbb
addr16
xor
lds
ret
xchg
xchg
outsl
mov
movb
fcoms
xor
pushf
insb
out
sbb
dec
nop
sub
mov
xor
inc
or
cs
dec
fiaddl
xchg
mov
sub
ja
or
jb
xchg
cmp
js
mov
xor
fildl
inc
jecxz
subl
je
xlat
mov
jg
pop
cwtl
cmp
xor
insb
bound
push
push
out
mov
in
out
xchg
or
push
into
sub
mov
cmpl
push
inc
cmp
outsb
cli
xor
cmc
lcall
inc
push
imul
sbb
push
pushf
inc
sub
insb
jmp
add
xlat
test
leave
sarl
inc
lods
add
xor
mov
stos
jno
pusha
ret
sub
adc
add
popa
loopne
popf
xchg
dec
and
mov
adc
out
xor
push
arpl
imul
pusha
int3
fadd
inc
inc
cwtl
jne
rcl
and
jae
push
mov
mov
jp
in
adc
xor
into
jnp
cmp
mov
gs
mov
cmp
fstl
push
or
lock
rol
enter
sub
fsubrl
test
pusha
fildl
push
jae
pop
sub
cld
iret
jae
cli
dec
aas
int3
mov
es
hlt
cs
mov
sub
pop
xchg
cltd
sbbl
push
outsl
rcl
outsl
ss
loope
int
and
movsl
cmp
cmp
sub
mov
loopne
nop
dec
mov
int3
pop
enter
popa
jg
jns
sub
jnp,pt
cmp
mov
inc
movsb
push
mov
mov
xor
aas
dec
lea
sub
in
sub
adc
cmp
je
and
imul
int
jnp
push
out
cwtl
movsb
dec
or
mov
jnp
test
xor
mov
add
mov
cmp
aaa
cmc
mov
inc
push
lret
je
mov
fdivl
cmp
sub
cwtl
pop
call
cmp
stos
outsl
and
movsl
scas
cld
or
push
push
adc
pop
cmpsl
icebp
mov
loopne
or
cli
or
out
movsb
mov
and
imul
jg
fbld
sub
out
data16
addb
loope
inc
and
dec
inc
popa
add
je
push
jmp
fstpl
or
mov
pusha
insb
sti
pop
loop
sub
ds
call
js
push
dec
or
mov
pushf
ret
fwait
ds
in
xor
lret
jmp
imul
lea
test
dec
adc
jno
fidivs
lcall
and
jp
fwait
jmp
sar
xchg
pop
adc
pop
or
lcall
dec
lds
jge
mov
out
jae
adc
dec
jnp
icebp
jae
sub
pop
loopne
popa
mov
sub
add
pop
movsb
mov
mov
mov
push
mov
sbb
mov
xor
ja
or
icebp
cmp
sbb
xchg
xchg
push
push
mov
leave
or
cmp
fcomps
iret
xchg
sub
icebp
jb
mov
aaa
cmp
rcrl
bound
jg
xor
cli
and
fmull
pop
pop
push
mov
xchg
sbb
ss
xor
xchg
pop
dec
push
js
int
shrb
lods
cmpsb
xor
negl
fstl
dec
aam
push
or
cmpsb
xchg
in
dec
es
ret
inc
xchg
xchg
aad
stc
daa
sbb
cmpsl
shl
shlb
or
in
cltd
cmpsl
fldl
je
sahf
cmp
jl
adc
dec
ret
sbb
subb
mov
inc
inc
packsswb
jnp
mov
sbb
jle
pop
in
inc
sub
mov
mov
jae
fadd
and
pop
mov
inc
xchg
adc
pushf
mov
push
jo
adc
jmp
or
scas
jns
and
call
pushf
fsubl
xor
jns
es
xchg
data16
std
jnp
and
lods
pop
cmpsb
dec
jae
mov
mov
push
inc
and
imul
mov
int3
mov
adc
pop
cmp
notb
orl
xchg
jne
add
nop
pop
sbb
jbe
mov
add
lods
test
ja
sub
mov
cld
aaa
sti
int3
je
in
cs
shrl
xchg
fs
and
mov
loop
addr16
ret
cmp
test
push
sub
xor
cmp
xchg
jno
insl
dec
js
cmp
hlt
clc
ret
repz
fsubrs
out
stos
and
loope
lds
dec
scas
mov
pop
xchg
icebp
xchg
test
sbb
stos
rclb
mov
or
mov
xchg
jb
mov
push
jmp
mov
mov
cli
popf
aam
loopne
cs
cwtl
hlt
enter
push
pop
faddl
xlat
pop
sub
sbb
cld
xchg
mov
ljmp
push
out
add
xor
inc
lds
cld
mov
xchg
mov
inc
cmp
rcrl
pop
mov
hlt
sarl
adc
sbb
sbbb
xchg
jbe
outsl
mov
xor
test
call
dec
test
add
cli
shlb
lea
mov
push
fld
ss
xchg
cwtl
sbb
jl
push
cmp
mov
ss
addb
add
mov
rorb
mov
bound
das
fimull
cmp
cld
pop
sbb
xchg
mov
and
jbe
addr16
sbb
sbb
into
sbb
cmp
xlat
adc
mov
stc
fdivrl
lahf
insl
jne
stos
rol
in
mov
and
jb
sti
pop
std
loopne
cmpsl
jp
jbe
pushf
int
mov
stos
push
loope
ficompl
mov
popa
mov
das
ret
jbe
mov
testb
fdivs
ret
inc
out
imulb
clc
mov
xor
or
pop
cmp
mov
jno
cmp
and
cld
ret
fsubs
arpl
mov
adc
pop
fsubr
incl
fisttpll
sbb
sbb
jl
add
or
cmpsb
cmpsb
insb
sbb
fidivrl
ljmp
pop
enter
jb
and
fwait
xor
mov
sbbb
movl
scas
mov
add
addr16
scas
jne
xchg
ret
mov
jecxz
rcr
adc
lcall
jnp
jmp
sbb
popa
mov
prefetcht2
xor
push
imul
aaa
es
pop
xchg
pop
dec
bound
or
jnp
cmpsb
fsubrl
rorl
sub
mov
out
pop
cmpsb
mov
dec
fisubrl
mov
mov
jmp
add
push
shl
push
push
or
stos
int3
movsb
mov
add
roll
mov
sti
xor
xor
repz
fstpl
js
shlb
push
xchg
mov
xchg
mov
sbb
sbb
add
xlat
dec
mov
and
ss
movsl
push
lahf
por
add
mov
mov
sbb
push
adc
scas
xchg
cli
aas
push
ljmp
pop
jecxz
xor
sbb
mov
mov
mov
inc
mov
pushf
in
and
cltd
dec
xor
cmc
fs
sub
ret
ljmp
adc
sbb
pop
inc
es
and
pop
jg
fsubs
fisttps
mov
and
xchg
mov
cmp
jle
testl
aas
xchg
fld1
stos
push
cwtl
pop
in
sub
add
stc
xchg
mov
push
cs
sbb
sbb
fsubs
and
aas
pop
adc
mov
pop
sub
xchg
push
out
test
mov
pop
jb
pop
stos
xor
das
jg
in
inc
fimuls
dec
push
sub
add
xor
test
xchg
in
inc
push
mov
je
add
sub
dec
add
adc
addl
mov
xchg
rcl
xchg
leave
aam
push
jne
pop
nop
jl
dec
mov
cmpb
fcomp
ds
outsb
sub
stos
int
lock
test
jbe
cwtl
insb
or
test
pop
adc
pop
and
hlt
xchg
cmpsb
inc
out
cmp
cld
push
movsl
inc
popa
out
jle
pop
jmp
and
pop
shll
je
mov
or
aam
out
add
sbb
jns
nop
sub
ret
aam
push
test
or
fdivrl
push
or
jle
push
pusha
mov
jo
add
out
cmpsb
push
outsl
nop
imul
dec
sarl
mov
int3
fmuls
push
mov
push
popf
push
imul
cmpsb
imul
imul
xchg
jl
stos
xor
loope
mov
sub
dec
inc
pop
movsl
add
and
into
mov
cmp
sbb
lock
mov
fadd
jmp
sub
std
push
cltd
dec
test
scas
mov
pop
loopne
icebp
test
xchg
shlb
xor
int
push
cmpsb
lcall
out
in
shlb
bound
push
xchg
mov
es
or
cmp
shll
sub
cmp
stos
cwtl
dec
mov
pop
xor
dec
add
aas
push
lret
and
sbb
add
insb
fwait
mov
mov
cmp
jecxz
jl
outsb
aam
rorl
clc
ljmp
mov
xchg
movsl
sbb
movd
mov
cmp
mov
aad
push
arpl
fisubs
or
inc
movsl
mov
dec
mov
xlat
or
fucomip
into
mov
lods
dec
mov
rol
cmp
fsubrs
insb
mov
or
mov
mov
jl
inc
adc
xlat
fisubrs
xlat
movsl
aas
or
leave
add
sahf
cmp
add
insb
mov
mov
ja
je
and
stos
mov
lahf
pusha
in
push
mov
mov
sub
cmpsb
cmp
sbb
push
ret
gs
hlt
mov
jns
divl
stc
and
cwtl
push
xchg
mov
jns
and
mov
inc
adc
aaa
shll
mov
mov
dec
xor
inc
mov
jb
stc
sub
fwait
push
les
test
cmp
adc
xor
xchg
lods
mov
jge
addr16
movsl
out
repnz
outsb
loopne
pop
lock
and
subb
push
add
or
jbe
sahf
sub
jns
dec
mov
dec
ss
adc
pop
and
jo
inc
mov
loope
xor
mov
nop
xor
xchg
gs
mov
in
aad
jnp
push
ljmp
int
lods
cmp
sbb
movsb
cld
sbb
test
inc
xchg
push
cmp
cwtl
sub
add
dec
pushf
cmp
outsl
leave
mov
aas
aas
shlb
inc
xorb
or
cmpsb
sbb
pop
jle
les
call
sub
mov
in
push
mov
outsb
je
pusha
mov
fldl
outsl
add
lds
lea
cmp
xchg
into
inc
sahf
ja
call
adc
or
arpl
mov
leave
cltd
in
jb
mov
sbb
in
pop
dec
pusha
xchg
pop
mov
jmp
inc
movsl
dec
je
add
inc
ljmp
sarl
inc
mov
jne
aam
mov
outsb
mov
rcll
aad
jecxz
cmp
push
es
jp
mov
cmp
and
clc
scas
sti
clc
push
cmp
or
mov
push
add
leave
js
dec
and
aam
sbb
mov
mov
sbb
rclb
fwait
addr16
gs
sbbl
dec
out
into
out
pop
ficomps
data16
lret
pop
outsb
jle
sahf
test
cmp
jmp
pop
push
jns
fidivrl
inc
fwait
stos
inc
loopne
lock
sbb
gs
sub
movsb
icebp
aam
mov
mov
jne
std
lods
inc
add
sub
addr16
xlat
stc
sbb
je
add
imul
xor
cs
pusha
adc
repz
dec
into
cli
inc
mov
fistpl
adc
loopne
add
imul
push
aad
push
addb
cmp
jbe
mov
js
mov
add
xchg
and
aaa
dec
jle
loope
dec
js
mov
cmp
push
out
add
jns
or
pop
nop
scas
sbb
cmp
sarl
dec
imul
sub
xor
xor
mov
inc
or
sub
sbb
lods
mov
cmp
cmp
movsb
mov
ret
or
sbbb
ja
push
int
hlt
mov
push
mov
mov
cmp
pop
xchg
sbb
pop
push
xchg
xor
or
inc
jbe
pop
jae
dec
out
cmpl
xor
jne
xchg
mov
xchg
aam
les
das
xchg
jmp
sbb
sbb
sub
cmpsl
sarb
jae
out
mov
cmp
cmp
jo
push
arpl
pop
xor
jnp
add
dec
and
mov
inc
pop
arpl
in
imul
orb
cwtl
shll
and
dec
inc
xchg
push
jg
sbb
xchg
xchg
scas
adc
fld
mov
mov
or
cmp
inc
inc
push
out
lahf
loop
jl
js
jge
push
or
mov
push
ja
add
inc
mov
mov
and
push
xor
cwtl
ja
dec
cs
inc
fisttpl
popf
mov
fs
mov
fstl
stos
push
in
pop
lret
ret
sub
push
cmp
add
push
mov
out
insb
sbb
cmc
or
sbbb
stc
int
mov
dec
call
inc
bound
pop
rcll
xchg
test
or
jmp
test
ljmp
adc
andl
xor
cltd
ret
outsb
imul
jge
add
clc
pop
sbb
xor
cmp
sbb
and
adc
xchg
add
sarb
jnp
lret
fwait
mov
xchg
std
fs
inc
mov
mov
cld
or
hlt
int
push
pop
dec
adcl
sarb
lcall
push
and
sub
les
push
push
sub
ljmp
jb
loopne
leave
fdivs
pusha
add
mov
aas
aaa
jno
xor
dec
mov
cmp
and
pop
cmpsl
push
orl
mov
or
inc
pop
pop
dec
lcall
in
jb
bound
jge
fcoml
je
add
mov
mov
sbb
mov
data16
mov
sbb
adc
pop
out
pop
nop
mov
push
sub
xor
xor
outsl
pop
add
push
sub
mov
jp
dec
inc
mov
adc
hlt
pushf
jo
push
movsb
fidivrl
es
test
mov
in
dec
jl
jns
jmp
loopne
dec
rolb
test
lret
les
and
movsl
sbb
fs
iret
test
insb
xorl
inc
aam
idivb
mov
lods
rorb
enter
xor
dec
jns
sub
add
xor
jnp
and
or
dec
int3
hlt
jne
neg
pop
iret
mov
imul
jp
jl
sbb
cmp
and
xchg
xor
inc
test
fucomip
or
aad
fucom
cli
hlt
adc
rclb
inc
xorb
into
add
inc
test
adc
add
stc
sub
jg
jae
test
mov
mov
jbe
add
loop
out
std
xchg
and
or
pop
out
fcoml
jp
push
dec
test
lods
mov
loope
aaa
lds
xor
clc
jbe
inc
ret
int3
int3
xchg
or
decl
stos
xchg
sbb
daa
push
add
add
mov
jle
pop
scas
je
add
and
inc
ljmp
mov
sub
xor
adc
shlb
inc
push
fbld
int3
shll
iret
in
mov
jle
jnp
sub
sahf
pinsrw
int
popf
iret
into
push
arpl
jo
pop
out
icebp
pop
enter
fnstsw
or
sbb
pop
add
sbb
jge
add
jge
or
xchg
mov
sub
push
xor
gs
cmp
sub
stos
cltd
sti
int3
jg
inc
add
stos
stos
popf
and
pop
cmc
jmp
sbb
aas
cmp
dec
sbb
negl
mov
mov
pop
mov
sub
les
sbb
out
mov
dec
add
or
cmpsb
lds
and
push
add
push
test
inc
outsb
cmp
dec
aaa
scas
int
sahf
push
xchg
xor
icebp
dec
aaa
push
out
ds
stmxcsr
lahf
mov
pop
and
testl
pop
sbb
sbb
or
loop
sub
repz
gs
rorl
xlat
and
pusha
shrl
xor
fbld
into
mov
inc
xor
fs
repz
sbbl
inc
mov
xchg
pop
sbb
mov
pop
movsl
repnz
loopne
iret
cmpsl
or
inc
ja
pop
jno
test
pop
ljmp
fsubs
mov
jbe
dec
jmp
int
push
pop
sbb
sahf
adc
sbbl
dec
cld
fs
xchg
lds
dec
cmpsb
push
pop
jg
xor
and
dec
popl
xor
push
cld
fsubrl
inc
cmp
mov
mov
outsl
mov
xchg
iret
xchg
out
mov
nop
dec
inc
xchg
call
xchg
imul
gs
mov
adc
sbb
negl
xor
jg
int3
out
jl
fs
mov
sub
jnp
add
mov
cmpsb
mov
add
and
mov
unpckhps
stos
pop
imul
and
mov
pop
sub
mov
cmpsl
pushf
push
mov
in
adc
add
mov
insl
jp
ds
out
ss
movsb
mov
lret
cmpsl
push
jecxz
add
mov
sbb
sbb
dec
add
outsb
lock
movsb
out
xchg
or
xor
pop
cmp
and
cmc
xchg
mov
sbb
push
jb
jecxz
xor
ss
jno
in
cmp
push
push
xchg
fsubr
sbb
xor
mov
dec
push
test
imul
and
movsb
fnstenv
pushf
dec
outsb
adc
jge
sbb
pop
push
mov
jae
pop
bound
cmp
and
jl
sub
in
xlat
gs
outsb
adc
lods
fnstenv
jns
fistpl
inc
cmp
imul
cmc
rcll
add
scas
dec
mov
jns
mov
mov
cmp
cmp
popf
lea
lcall
rorb
lock
cmp
pop
sbb
mov
add
bound
pusha
ja
adc
mov
les
sti
mov
mov
data16
adc
sbb
cltd
sub
fnclex
push
push
xchg
inc
dec
gs
imul
and
push
dec
dec
stos
int3
cld
rol
cli
orb
ret
pop
push
stos
mov
sti
xor
sbb
xchg
data16
mov
in
inc
adc
addl
push
xchg
sti
push
jl
xchg
loope
je
xchg
stos
inc
and
data16
adc
sbbl
fidivrl
sbb
pop
push
dec
mov
add
jmp
push
out
scas
pop
pop
and
push
add
sbb
fs
xchg
push
inc
dec
out
ja
hlt
cmp
ja
enter
jmp
addl
jno
sbb
dec
pusha
add
mov
pop
add
shlb
mov
jecxz
rcr
data16
xor
mov
mov
ds
loopne
cmp
fisttpll
negl
adc
mov
ss
adc
dec
cmp
int
ds
dec
push
loopne
rorb
xor
fs
inc
mov
je
loopne
add
insl
rolb
movsl
std
add
cmp
add
push
adc
in
jno
or
push
mov
dec
mov
std
int3
sbb
out
jns
add
lock
int
xor
insl
enter
adc
nop
adc
dec
mov
cltd
xor
addr16
jecxz
iret
cltd
adc
shl
addr16
jnp
mov
pop
testb
aaa
mov
bndstx
test
mov
sbb
into
mov
mov
cmp
nop
xor
inc
insl
push
pushf
adc
mov
neg
rep
pusha
jle
mov
pushf
rorb
lods
add
aas
jns
out
aas
sub
pop
inc
pop
repnz
push
mov
icebp
mov
pop
cmp
dec
xchg
dec
push
cmp
adc
in
aas
fucomip
adc
push
xor
pusha
sub
mov
pop
xor
mov
cld
pop
loopne
aam
jne
aas
lret
in
pop
xchg
xor
insl
vsubps
jne
add
mov
cmc
xlat
push
fcomi
fisubl
cmp
push
scas
popa
push
push
fwait
loope
cmp
mov
loop
mov
adc
loop
mov
sbb
and
sub
js
inc
sbb
ss
ftst
lods
pop
repz
call
push
jbe
mov
data16
fs
je
add
out
hlt
push
add
sti
push
add
dec
movsb
sub
and
add
jp
lods
xchg
or
dec
imul
test
insl
xchg
mov
lds
xlat
xlat
mov
lds
mov
mov
jp
xchg
jmp
or
cmp
pop
fisttps
mov
sahf
cli
pop
cmpsb
dec
ret
flds
jl
jp
cmp
sub
roll
add
pop
test
cmpsl
pop
sub
sub
fdivr
test
xchg
cltd
jp
loope
mov
pop
imul
cmp
test
sub
cmpl
psubw
mov
lcall
test
push
call
jne
out
xor
pop
jecxz
sub
push
aas
adc
ficoml
jo
mov
pushf
pop
int3
mov
add
cltd
pushf
cltd
cs
in
sbb
cmc
lret
mov
ds
sbb
jmp
iret
sahf
adc
pop
inc
jle
pop
lock
lods
push
push
outsl
push
loop
dec
and
loopne
or
cmp
js
fs
fwait
lea
adc
lock
jecxz
jl
mov
xor
repz
lahf
movsl
xchg
cmpsb
adc
punpcklbw
mov
inc
sub
xor
cmp
int
pushf
cltd
lds
or
jns
sbb
mov
mov
pop
out
xlat
mov
scas
and
mov
in
in
sub
aam
push
mov
aaa
lret
or
cmp
push
das
push
mov
mov
cmp
movsl
dec
out
mov
in
dec
lret
xlat
fisttpl
jg
movntq
inc
pop
jle
ja
add
cmp
push
mov
mov
cmp
sbb
stos
mov
jmp
sbb
sub
or
ss
cwtl
dec
and
in
stos
cld
xor
js
xlat
push
stc
pop
sarl
fisttpl
lret
gs
xchg
hlt
outsl
push
into
pop
enter
jle
jae
mov
or
xchg
shll
idivb
les
xor
cmp
sbb
cmp
push
in
add
or
cs
shrb
add
imul
inc
sbb
jnp
callw
rcrb
ja
movsb
push
jnp
subb
xchg
rolb
or
mov
lods
ficomps
lock
sub
test
push
int3
mov
adc
stc
xchg
pop
xor
sub
pusha
mov
push
push
sub
add
dec
xchg
in
outsb
jp
mulb
xor
xor
testb
adc
cmp
rcrb
in
mov
and
fdiv
loope
cmp
add
and
cmp
lds
mov
mov
lret
clc
orl
loope
sbb
push
mov
cmp
mov
cmp
cmpsl
gs
aam
inc
lcall
pushf
testl
xchg
mov
fiaddl
xchg
es
negl
xor
iret
pop
das
outsl
sti
mov
mov
and
mov
sub
pop
mov
and
cs
dec
dec
decl
dec
ret
pop
fimull
test
sub
bound
les
sahf
sbb
ror
orl
dec
push
cwtl
ljmp
lds
jg
mov
mov
mov
push
pop
loop
mov
dec
adc
mov
jmp
fs
icebp
xor
aam
or
add
iret
test
testl
jns
xchg
xchg
movsl
sub
jp
dec
aad
jle
loopne
test
push
out
fadds
add
sbb
jo
mov
jae
xor
jmp
ds
push
movsb
hlt
iret
pop
mov
add
bound
outsl
jg
jge
rorl
jns
jge
sahf
mov
int3
out
jge
xchg
mov
cmp
scas
ret
movsl
std
mov
movsl
ljmp
pop
jle
fbld
addb
push
stos
pop
ja
adc
pop
icebp
push
enter
dec
mov
inc
xchg
pop
pop
jnp
fsubrl
jp
sub
rorb
adc
pushf
fdivrl
push
mov
rcr
mov
mov
test
jb
flds
scas
sahf
clc
in
adcb
xor
jp
cltd
jp
dec
jbe
cmc
icebp
mov
rolb
jge
add
cmpsb
lea
repz
xor
std
pop
lock
mov
sbb
jbe
movl
ja
push
and
xor
out
movsb
dec
and
or
loop
fnstsw
sub
or
cmp
roll
add
cltd
mov
flds
and
pusha
mov
mov
gs
lret
pop
loope
push
mov
jb
sar
sbb
jg
and
adc
popa
inc
cmp
mov
fs
lcall
add
lret
mov
es
add
xchg
mov
ret
ljmp
xchg
movsb
mov
jb
mov
shll
cmp
fs
fsubrs
movsl
pushf
xorb
pop
ds
mov
mov
loopne
xor
inc
lea
das
cmp
push
insb
jl
xchg
pop
pushf
xor
outsb
sbb
sbb
das
jmp
jo
fldt
mov
je
add
dec
inc
mov
push
sbb
xchg
push
or
ljmp
addr16
sub
icebp
pop
sub
jo
rep
push
push
iret
and
xchg
push
pusha
rorl
lods
sub
xlat
mov
jb
stos
mov
adc
fbld
rorb
xor
test
cmpsl
sahf
jle
add
nop
jmp
mov
into
insl
ja
xor
mov
popf
sbb
adc
test
push
testb
out
adc
xor
jmp
loope
stos
pop
cmp
pop
fldl
mov
loop
aam
into
std
xlat
sbb
fnsave
std
pusha
add
ja
cli
lods
imul
or
nop
je
or
sub
pushl
loope
adc
push
bound
cmp
inc
push
cmp
ret
pop
and
sahf
add
and
sbb
enter
test
push
pop
dec
dec
lds
test
call
inc
outsb
sub
pop
lock
ds
sub
insb
pop
mov
and
imul
das
sub
addl
xchg
ljmp
int3
call
ljmp
rorb
idiv
xchg
insl
imul
cmc
cltd
fs
aaa
dec
xorb
sub
jle
dec
lret
sbb
fildl
test
sub
daa
jns
xchg
or
jnp
push
cmpsb
je
iret
push
sub
cltd
inc
lea
lret
jg
cwtl
jno
add
dec
push
add
cmpsl
push
adc
push
fdivrl
add
dec
and
movsl
insl
in
inc
jae
std
or
mov
xchg
stc
mov
dec
adc
or
loope
test
xchg
xor
test
js
jmp
or
loope
fstps
xchg
adc
aam
testl
loopne
dec
mov
shl
push
rorl
ljmp
mov
mov
lcall
push
push
aam
fcmovnbe
das
repz
mov
fisubrl
ss
clc
sub
or
cwtl
out
mov
inc
ljmp
inc
arpl
push
ret
fsubr
dec
ret
lock
int3
cmp
pushl
lahf
or
out
lea
mov
xor
sti
nop
hlt
xor
cmp
daa
inc
mov
test
inc
adc
pop
in
inc
mov
lods
loop
addr16
push
pop
pushf
lock
or
sub
xchg
popa
sbb
int3
clc
rcr
mov
jmp
or
mov
adc
int3
mov
leave
or
pop
adc
shrl
or
mov
lods
out
jge
sbb
jno
cli
js
mov
xlat
jmp
sub
pop
cmpb
in
mov
mov
jo
idivl
dec
ret
xor
jmp
sub
lcall
or
inc
jb
js
loope,pt
lods
pop
insb
pop
xor
dec
iret
gs
ds
in
mov
test
js
jg
fwait
sbb
rclb
inc
test
inc
aaa
fscale
sub
popa
dec
xlat
or
xchg
jle
xor
das
push
repnz
hlt
loopne
add
mov
in
or
cmp
push
pusha
ljmp
insl
xor
pusha
lods
fdivrl
xchg
out
mov
shll
jecxz
out
inc
or
fnstenv
sub
xchg
cmp
pop
mov
inc
push
and
data16
out
fsubr
push
mov
and
jno
or
fstpt
jns
imul
clc
inc
sti
outsl
jp
add
inc
je
in
movsb
push
mov
loopne
xchg
addb
rorl
andl
sub
inc
and
sub
les
into
lret
push
xor
cmpsl
loop
test
daa
repz
xchg
adc
push
adc
push
mov
enter
and
stc
pop
and
sbb
push
push
push
sti
aaa
mov
pop
fsubrp
and
xchg
xor
pop
repnz
mov
and
dec
jb
mov
nop
in
sbb
sti
cwtl
or
cmp
ds
xchg
gs
icebp
sahf
jmp
int3
or
jnp
xor
xor
and
mov
pop
dec
xchg
mov
inc
adc
pop
movsl
fildll
bound
out
fidivrs
dec
push
imul
out
fmuls
into
mov
mov
imul
inc
cmovb
mov
push
cltd
adc
dec
adc
mov
imul
aam
and
xor
out
out
cltd
and
pop
enter
adc
repnz
outsl
es
fidivs
imul
mov
xchg
sarl
pop
subl
push
sbb
xchg
inc
sbb
out
sbb
mov
sti
mov
cmp
jp
xchg
ds
push
shr
repz
iret
inc
pop
push
mov
lea
cltd
lock
sti
dec
add
negl
pop
pop
pop
and
pop
fnsave
lock
push
or
hlt
xor
loopne
add
mov
popf
mov
addl
mov
xor
xor
mov
ret
loop
filds
fs
push
fistps
fstps
inc
jl
jnp
fcomp
js
and
or
push
pop
sbb
jo
lcall
adc
clc
cmp
lock
jp
cmpl
orl
push
repnz
jne
mov
jp
jae
inc
jle
inc
popf
lret
pop
mov
not
push
out
cmp
push
and
cmpsl
or
les
test
sahf
cmpsl
lea
cmp
sbb
loopne
and
pop
xor
outsb
xor
mov
gs
sub
sbb
dec
mov
and
imul
negb
insb
or
xchg
or
xor
mov
lock
pop
daa
fmull
mov
sub
xor
fstpl
fbld
iret
nop
mov
xor
xor
jge
shlb
arpl
cmp
mov
push
loop
cmpsl
or
mov
int3
inc
jge
cli
mov
cmp
cmpsl
xor
xor
mov
push
mov
in
inc
stc
ds
faddl
or
push
or
mov
test
push
imul
mov
in
sub
pop
and
adc
xlat
mov
popa
js
adc
add
fwait
mov
mov
xor
int
xor
push
jmp
inc
mov
aas
xor
cld
inc
scas
jbe
cmp
jns
pop
mov
jge
mov
outsb
cltd
xchg
xchg
pop
pop
aam
inc
movsb
pop
test
clc
xchg
pop
in
push
lea
jl
dec
xlat
sub
leave
and
mov
and
pop
cmpsl
inc
jecxz
adc
shlb
inc
sub
insb
or
inc
mov
movsl
xor
shrl
ds
andl
test
jb
in
in
aaa
in
mov
cmc
shll
jb
and
jo
mov
aas
mov
xor
cmpsb
inc
mov
movsb
sub
idivb
incb
push
push
int
add
pop
dec
xor
inc
imul
in
mov
or
out
add
sub
mov
adc
xorb
imul
mov
roll
mov
pop
fisubrl
jno
cld
rorb
xchg
or
pushf
clc
adc
xchg
push
sbb
cwtl
in
test
or
xor
and
pusha
or
adc
std
loope,pn
nop
mov
fisttpll
gs
or
cwtl
cmp
mov
or
dec
push
popa
lahf
xchg
jno
or
loop
repz
shrb
inc
push
pop
mov
les
push
imul
dec
adc
mov
outsb
les
jge
sub
mov
mov
cmpl
out
mov
or
push
scas
stos
pop
push
insl
lods
fadd
mov
mov
mov
sub
push
add
push
inc
loop
cmc
and
mov
xchg
mov
mov
dec
mov
int3
ficompl
dec
pop
mov
scas
mov
mov
testb
mov
mov
stc
dec
arpl
pop
or
sbb
lds
xchg
sub
out
push
scas
sbb
cwtl
fimull
inc
or
jmp
mov
xor
dec
jb
sbb
mov
xlat
fsub
mov
outsb
insb
lret
lea
nop
outsl
xchg
ret
xor
jecxz
aaa
or
jno
mov
add
cmp
clc
sahf
rcr
insb
cli
mov
push
insb
sub
push
js
sbb
popf
add
int
shll
les
in
push
push
daa
out
sbb
pop
cmp
in
or
scas
xchg
ja
mov
mov
cwtl
jl
xor
jb
std
fidivrs
mov
stos
pop
xchg
cmp
stos
shll
shrl
xor
sub
mov
lret
mov
inc
call
sahf
aas
outsl
loopne
jo
es
xor
lods
push
out
insl
or
setg
bnd
and
mov
aam
mov
sbb
inc
mov
push
cmp
jne
mov
xor
or
adcl
pop
shl
ret
mov
inc
adc
inc
fistps
mov
inc
sub
push
aas
clc
jmp
xor
adc
add
test
push
xorb
push
fwait
lahf
cmp
insb
ss
loop
lds
fistl
add
cli
sub
lcall
push
dec
sub
cmc
push
fistl
stc
clc
stos
sbb
out
and
movsl
or
mov
fsubr
jl
add
jp
stos
ss
or
lcall
push
mov
pop
jnp
hlt
imul
out
ds
xchg
xor
push
sub
or
shrl
adc
loopne
pop
dec
addr16
call
mov
out
jnp
add
data16
cmc
ret
push
test
adcl
jmp
mov
insl
inc
iret
inc
hlt
xchg
mov
mov
cmp
dec
sub
xchg
jae
mov
rclb
xor
sub
int3
mov
add
fcoms
pop
rorl
mov
jge
and
pop
cltd
mov
xor
inc
cmp
xor
pop
je
jle
pushf
imul
add
popf
pop
pop
add
jne
or
ja
pop
sub
and
sub
andb
or
mov
addr16
test
fsubrl
xor
test
sub
mov
inc
mov
adc
jge
fadd
ja
sarb
scas
aaa
mov
adc
sbb
sub
xchg
inc
pop
repnz
jnp
and
mov
mov
iret
enter
sbb
aas
jmp
mov
or
mov
add
jnp
stos
rorb
xor
and
shlb
and
xchg
sub
and
and
aaa
subb
jae
cmpsb
ljmp
adc
pop
pop
or
jbe
dec
dec
cmp
in
jl
lahf
int3
incl
sbb
lods
jp
mov
cmc
xchg
shlb
adc
or
add
daa
fildll
js
mov
adc
movsl
xor
aaa
fisubl
push
cmp
test
lret
aaa
jno
lods
dec
imul
sbb
shr
lock
out
mov
mov
push
cli
test
pop
dec
mov
je
push
mov
cmp
xor
adc
adc
test
or
les
ret
mov
dec
xchg
sbb
fistpll
out
or
jg
mov
js
imul
mov
jmp
pop
pop
test
shlb
and
sbb
sbb
push
adcl
loop
sbb
and
mov
stc
inc
fstl
adc
idivl
xor
or
mov
ljmp
lods
cmp
xchg
and
dec
sti
loopne
adc
jno
test
gs
push
or
out
xchg
cmp
push
or
adc
stc
mov
and
lcall
daa
sbb
jbe
sti
sbb
mov
in
sub
push
out
sub
jg
cs
cmp
cwtl
jge
out
pop
sbbb
mov
pop
cmp
mov
test
pop
lock
repnz
pop
xchg
jb
cmp
sub
mov
xchg
pop
sub
or
inc
pop
push
es
mov
stos
mov
sbb
dec
cmp
xchg
gs
jne
adc
sub
xor
inc
mov
jb,pn
add
cmpsb
jmp
and
cld
movsb
and
mov
cmp
jo
jns
lahf
add
dec
sub
dec
cli
sbb
mov
int
inc
enter
test
dec
testl
cmpsl
adc
push
dec
xor
mov
sbb
pusha
test
in
mov
cs
sahf
loope
push
mov
jle
iret
lods
add
aas
dec
in
out
add
jo
cmpsl
sbb
xlat
pop
pop
xchg
rcr
or
add
mov
or
aam
sbb
pushf
sub
xchg
jo
mov
jge
int3
in
xlat
cmp
xchg
repnz
pop
xchg
lods
mov
movsl
das
jno
test
cli
mov
addr16
movsl
and
sub
cmp
icebp
enter
add
pop
cmp
add
pop
decl
lret
add
xor
shlb
sub
xor
add
pushf
cmp
dec
ds
xor
sbb
dec
rorl
and
aaa
cmp
add
sbbl
or
outsl
cli
mov
dec
pop
add
mov
int3
mov
adcl
mov
shll
and
loope
sub
lods
push
mov
int
cld
inc
jp
push
popf
jmp
sbb
xor
pop
xchg
push
xor
push
fwait
scas
nop
jecxz
sub
dec
push
out
mov
adc
scas
mov
fsubs
fs
std
outsl
addl
push
pushf
fldt
out
xor
jbe
rorb
icebp
sbb
popf
call
push
das
inc
iret
mov
cmp
lds
push
push
sub
ss
test
jb
and
imul
out
mov
jmp
in
inc
dec
adcl
pop
orps
shlb
std
out
sbbl
adc
add
in
fs
push
lcallw
or
sahf
mov
mov
mov
and
rolb
insb
bound
test
pop
js
gs
dec
in
aam
addb
lret
mov
xor
adc
pop
popa
es
jae
mov
aaa
test
cmp
jle
in
int3
mov
add
leave
ret
fbld
xor
push
pop
test
imul
sbb
pop
jp
xor
shl
pop
inc
push
jno
push
insb
fmulp
sbb
movsl
adc
fdivs
sub
insb
fistps
loopne
pop
xor
sub
adc
hlt
imul
insl
inc
sbb
cmp
test
enter
fldenv
pop
lock
test
mov
shrl
daa
out
aaa
fidivl
movsl
imul
push
mov
push
dec
or
push
cmp
ja
call
jge
insb
out
addr16
mov
std
pop
cltd
lods
je
or
push
cmp
fnsave
push
jmp
mov
xor
dec
enter
lret
mov
aam
rol
fisttpl
arpl
jl
push
pop
out
in
mov
notl
loop
lret
push
xor
inc
lret
jno
xor
cmpsb
sbb
xchg
lcall
jno
push
or
scas
add
out
mov
add
rclb
pushf
push
std
dec
ss
sbbl
jmp
mov
sbb
fcmovb
or
cld
sbb
hlt
dec
sbb
push
and
xor
pop
decl
sbb
call
push
rcrl
mov
fistpll
popf
std
call
testl
jge
jno
insl
gs
lahf
mov
repz
dec
sbb
add
mov
insb
add
mov
std
mov
inc
lock
xor
dec
sub
jne
adc
cmp
cmpb
mov
aaa
xchg
cmp
shll
mov
out
sarl
add
sub
sub
jne
out
and
scas
out
xor
aaa
mov
mov
movsl
lds
cs
dec
xor
sarl
mov
outsb
loope
add
int
lret
into
pop
adc
sub
loopne
loope
insl
repz
jmp
bound
pop
adc
mov
adc
lods
push
loope
adc
lods
pop
in
adcb
mov
dec
aam
jae
add
jns
adc
out
stc
js
aas
adc
rorb
data16
mov
stc
pop
push
mov
scas
push
lods
pop
mov
call
inc
xchg
test
inc
hlt
add
xlat
mov
mov
xchg
lods
sbb
jae
fildll
pop
scas
sbb
add
cmpsb
xor
mov
mov
js
inc
out
js
sub
pushf
fistpll
add
push
rclb
into
add
mov
jb
xchg
push
outsl
ffree
das
outsl
xchg
es
test
xchg
mov
ljmp
cmp
movsl
ret
jmp
insb
inc
std
in
jnp
inc
das
cwtl
pop
cmpsl
push
aas
pop
jae
mov
jo
or
leave
insl
ficomps
xor
out
pop
sbb
loopne
les
lea
mov
cmc
pop
mov
mov
outsb
sbb
xchg
push
sbb
sub
xchg
sub
mov
int3
push
pop
xor
and
mov
mov
les
add
pop
call
insb
cmp
stc
xorl
std
pop
aas
push
je
jns
out
inc
fnop
mov
add
jne
fsubrl
insb
push
not
lret
aas
and
pop
iret
jbe
out
and
pop
loopne
dec
mov
push
mov
inc
or
mov
imul
cmp
and
testl
pop
push
xchg
cltd
xchg
sub
pop
push
pop
xchg
push
pop
repz
xor
xor
mov
incl
xchg
movsl
fdivl
shl
sti
test
cmpsb
xor
fldcw
inc
add
mov
add
icebp
bound
mov
xchg
aas
js
sub
aas
ss
dec
cmp
mov
popf
stos
out
sbb
add
mov
test
sub
hlt
popf
add
mov
xor
mov
push
xchg
mov
jg
jno
xchg
push
popa
outsb
test
inc
push
sahf
inc
or
and
mov
jnp
mov
jmp
lea
cmp
push
or
mov
dec
jecxz
jo
push
dec
pop
pop
jae
jno
js
mov
or
jmp
cmp
dec
sbb
out
test
sbbb
cmp
cmp
int
test
jp
push
in
dec
or
mov
jl
aad
leave
add
lret
jae
xchg
adcb
mov
mov
mov
add
xlat
or
lds
pop
test
in
push
shlb
lahf
daa
pop
mov
lds
clc
out
cmc
out
jno
jg
pop
add
mov
fld
and
push
sti
in
and
out
adc
mov
das
or
rclb
outsb
sub
pop
pop
jecxz
test
cmp
cmp
adc
mov
sbbb
lds
sbb
push
dec
xchg
pop
xor
clc
mov
mov
rcrl
push
dec
out
test
fs
iret
push
mov
std
add
adc
mov
fs
pop
jle
push
insb
jae
xor
aaa
in
scas
loopne
cmp
inc
xchg
cld
dec
test
movl
mov
pusha
lret
and
mov
test
ret
xchg
push
test
add
popa
mov
pop
aaa
xchg
mov
lret
sbb
bnd
adc
mov
inc
cmpsl
mov
jg
push
lea
pop
mov
lea
in
or
test
gs
fisubrl
cmp
or
cs
mov
mov
inc
xor
mov
bound
stc
pop
mov
ficompl
stos
std
loopne
call
rcrl
out
es
int
mov
sbb
imul
mov
sbb
jne
adc
and
adc
in
push
fsubrl
xchg
xor
and
sub
call
cmp
jg
mov
or
sbbl
fistpll
sbbb
mov
adc
cmp
adc
push
fcomps
shrl
and
jnp
adc
xor
pop
sbb
inc
in
gs
pop
pop
xor
lock
int
sub
shlb
hlt
mov
cmc
or
sahf
ljmp
jp
fildl
popa
lods
sub
cmp
cmpsl
enter
cmp
lds
call
sar
in
stc
test
mov
rorb
stos
dec
or
scas
filds
jo
stos
adc
cmp
xchg
adc
mov
dec
mov
dec
lods
enter
push
mov
lods
sub
mov
xor
bound
inc
add
sbb
or
in
xorb
sbb
dec
jns
and
mov
sbb
add
mov
repz
test
mov
mov
add
xor
inc
out
out
mov
sub
inc
push
lods
push
mov
and
cli
scas
push
add
sbb
daa
or
or
mov
mov
nop
rcr
in
idivl
or
mov
insl
mov
and
popf
outsb
push
sub
inc
roll
lret
mov
leave
mov
out
scas
test
lods
mov
adc
inc
sbb
ffree
or
inc
imul
push
hlt
sub
mov
dec
xchg
sbb
xchg
js
sahf
lcall
pop
lret
push
mov
jno
push
bound
vpacksswb
ja
dec
cmc
shl
mov
mov
outsl
out
xor
in
cmc
xchg
adc
icebp
test
mov
mov
in
lock
outsb
xor
jno
or
lds
cmpsl
loop
xchg
loope
xor
les
cwtl
jo
fiadds
inc
daa
push
jns
not
mov
pop
sbb
out
sub
push
mov
lcall
adc
xchg
xor
mov
test
fnsave
ljmp
jge
cmp
pop
cld
data16
hlt
imul
popf
pusha
cmp
push
sub
imul
push
mov
idivb
sbbl
cmpsb
pop
mov
inc
mov
pop
mov
arpl
mov
push
jp
repnz
mov
adc
or
lret
jne
mov
jge
adc
xlat
fsubrs
push
push
sub
and
jnp
cmp
pop
push
mov
xchg
pushf
adc
in
js
pusha
and
jl
cltd
sbbl
inc
or
packsswb
fwait
mov
nop
addr16
lcall
xlat
pop
outsl
call
movsl
cmp
push
and
xchg
cmpsl
sub
arpl
xchg
or
cld
mov
adc
jae
jge
es
push
push
test
dec
cwtl
pop
cwtl
ja
push
out
jns
sbb
cmp
add
jns
pop
jge
bound
aam
jno
cltd
cmp
pushf
mov
cmpsl
adc
mov
loope
rorb
subb
xchg
inc
push
inc
jmp
andb
je
pusha
mov
inc
xor
mov
aad
sbb
pop
notb
lret
les
xor
ljmp
add
or
inc
add
mov
mov
mov
je
roll
pop
andb
mov
cmpsb
xor
jg
mov
movsl
and
sub
inc
lret
mov
pushf
jae
pop
xchg
test
hlt
pop
outsl
cmp
cs
rclb
push
xchg
mov
repnz
and
into
pop
jmp
mov
adc
fadd
jb
dec
aam
or
fldl
xor
repnz
outsl
popf
dec
lods
lret
iret
cmpsb
mov
in
jp
ss
dec
adc
arpl
sahf
std
mov
and
scas
and
ficomps
jae
adc
int
imul
scas
test
pop
pop
loopne
aam
jno
loopne
xlat
mov
call
inc
ret
jecxz
roll
iret
repz
fcomp
xor
xchg
js
cli
adc
add
pop
cmpsb
scas
mov
scas
sbb
into
push
subl
mov
mov
mov
ja
cwtl
jge
aaa
pop
sbb
sti
mov
fadds
sbb
sbb
mov
fdivs
outsb
lods
fucomi
cld
xor
cmp
je
or
iret
mov
adc
jb
add
lods
dec
cltd
add
movsb
jmp
rorl
sbb
fs
push
mov
inc
shrl
adc
mov
jb
xchg
loope
mov
cld
sbb
mov
aad
sub
lds
xchg
and
cmpb
adc
push
pop
cmpl
xor
fbstp
add
test
pop
mov
addr16
push
repnz
imul
jmp
mov
mov
or
mov
adc
push
out
jmp
call
and
fisubrs
jecxz
pxor
cmpsl
lcall
dec
test
sub
push
dec
into
pop
std
dec
les
sbb
lret
or
push
jp
mov
in
inc
cwtl
mov
mov
imul
stc
ret
cmp
mov
inc
in
in
rcll
sbb
roll
fwait
adc
jnp
cmc
adcl
notb
mov
jne
bound
mov
add
mov
and
cmc
arpl
sbb
mov
nop
and
clc
je
scas
mov
pop
jle
jo
pop
pop
inc
pushl
lret
fwait
mov
push
pusha
icebp
int
imul
xchg
insl
dec
idivl
pop
ljmp
psrlw
shlb
aad
xchg
sub
in
sub
in
ljmp
pop
nop
dec
sbbb
push
pop
cmp
xor
pop
push
insl
add
out
inc
xor
ret
aam
sub
and
push
jno
sbb
arpl
hlt
inc
push
xor
and
sub
ret
out
cmp
insb
add
sbb
jg
push
pop
xchg
pusha
mov
inc
ficompl
std
xorl
push
push
jnp
xchg
js
sub
mov
cmp
or
xor
test
push
xchg
lods
and
ds
mov
test
hlt
test
pmaddwd
jno
shrl
sbb
movsl
int3
mov
aad
cmp
jae
adc
aas
sub
aam
ja
jnp
sub
int
xlat
xchg
test
push
js
sub
ret
xchg
in
ja
dec
or
les
icebp
std
idivb
int
pop
test
push
adc
leave
leave
pushf
cmpl
add
jl
sbb
cwtl
loope
mov
sub
movsl
mov
pop
xchg
fisttpl
int
imul
xchg
push
sub
dec
rcll
and
inc
add
loope
test
pop
aaa
es
push
xor
test
fcomps
xor
inc
je
add
fldt
int3
lret
adc
dec
lea
rcr
loopne
jnp
jmp
js
adc
pop
push
xchg
insb
aaa
adc
sbb
xchg
movsl
cld
jg
mov
out
int3
mov
inc
push
int
stos
pop
out
push
inc
sbb
addr16
and
cwtl
adc
push
andl
mov
sub
xchg
adc
adcb
lods
mov
mov
jge
sbb
jnp
push
daa
cmp
sbb
inc
adc
mov
xor
fidivrs
push
inc
and
out
jno
dec
adc
pop
dec
mov
cwtl
or
push
imul
or
jo
inc
mov
push
mov
mov
mov
add
into
enter
xchg
xchg
out
pop
popa
jl
jbe
loop
cmp
pusha
push
repz
repz
xchg
int
mov
adc
pop
loop
pop
fnstcw
cvtpi2ps
and
fcoms
jmp
xor
das
in
sbb
mov
sub
inc
in
pop
in
loop
jo
lahf
dec
mov
fcoml
mov
mov
xchg
jne
xchg
jecxz
clc
mov
xor
loopne
out
int
aas
lods
or
test
sbb
and
push
sub
repz
shll
mov
and
xor
or
ret
mov
shlb
daa
into
incl
inc
add
sahf
jno,pn
test
cmp
push
ret
or
sub
sbb
insb
pop
pop
cwtl
xor
mov
mov
ret
es
cld
fwait
mov
dec
in
fcoml
adc
mov
pop
test
inc
xlat
negb
push
out
mov
mov
xchg
and
daa
pop
cmc
inc
inc
add
dec
or
out
pop
push
jl
xchg
xor
xor
lret
push
add
jnp
rcll
mov
imul
pop
js
insl
mov
dec
arpl
mov
push
stos
sub
adc
cbtw
test
hlt
lcall
data16
inc
dec
pusha
or
push
adc
stos
shrb
lcall
in
mov
dec
lock
ljmp
arpl
lret
sub
outsl
int
mov
inc
dec
into
mov
hlt
inc
sbb
cmp
and
xchg
adc
loope
sub
lock
pusha
dec
cmp
ljmp
imul
cmpsl
flds
std
div
push
sar
es
pop
and
fisubrl
cwtl
cwtl
mov
or
sub
jns
aam
mov
pop
dec
lods
mov
fimuls
fs
ljmp
out
bound
int3
xchg
cmpsb
imul
outsl
xchg
pusha
sbb
aas
xchg
lret
adc
mov
fs
dec
in
ret
mov
jne
mov
add
gs
lods
or
cmp
inc
add
and
pop
sub
repz
jb
flds
mov
jno
outsl
loop
xchg
aas
popf
das
jmp
jmp
inc
jmp
data16
popf
cmp
push
stos
pop
sbb
fdivrs
lods
jecxz
pop
add
daa
fstpl
ja
inc
das
add
fdivrl
cltd
mov
mov
cmp
inc
ds
int
jnp
inc
std
in
test
int
sub
pop
and
push
imul
das
aas
ret
mov
jnp
sub
xchg
xor
push
aas
mov
jnp
test
shlb
aad
shlb
cmc
adc
add
aam
pop
in
lahf
jecxz
iret
cmp
and
mov
jo
ljmp
and
xlat
lods
les
fmuls
mov
jmp
jg
jge
pop
xchg
adc
ret
cmpb
push
loope
xor
sti
testb
fdivl
pop
pushf
pop
adc
rol
xchg
shll
pop
pop
fidivs
pushf
insb
or
fwait
add
inc
imul
push
rol
fnstenv
inc
inc
mov
test
jecxz
or
mov
mov
mov
imull
mov
pop
push
add
jge
cmp
or
jo
outsb
jmp
xor
fistl
mov
lcall
jg
cmpsb
movsl
jae
and
fadds
push
loopne
push
out
mov
cmpsl
add
out
pop
cmp
outsb
out
sub
sbb
ret
shrb
add
mov
negb
xor
or
sub
fldenv
adc
leave
cli
inc
push
cmc
xchg
mov
mov
out
and
or
mov
add
je
jge
sub
jo
mov
cli
cmp
cmc
mov
xchg
xor
fsubrs
pop
std
mov
insb
inc
je
add
loop
fimuls
rcrb
dec
outsl
repnz
mov
mov
popf
in
test
and
leave
xchg
shlb
jb
pop
and
cld
fmull
pop
jo
mov
xor
addr16
mov
sbb
leave
fistpl
pop
add
dec
xor
rorl
or
jge
ljmp
lock
sub
out
jnp
sbb
imul
notl
call
inc
std
sub
cltd
in
cmp
sub
xchg
rep
daa
or
xchg
daa
jl
mov
sub
mov
leave
rcl
movsb
cmp
leave
dec
push
inc
out
jmp
mov
push
jmp
shl
dec
pop
or
test
xor
add
jae
je
xor
rcrl
cmpsl
or
or
pop
xor
add
jns
insl
pop
sahf
mov
and
jecxz
fisttpl
cmpsl
mov
dec
mov
add
stos
pop
xchg
fdivrp
enter
add
icebp
sub
dec
add
cmp
andb
stos
fistl
mov
subl
push
cmp
mov
es
mov
stos
inc
xchg
gs
in
out
mov
imul
data16
testl
scas
lds
mov
imull
push
stos
push
xchg
jle
and
jmp
mov
aad
sbb
shll
xchg
hlt
pop
pop
addr16
push
xor
push
sbb
jnp
pop
jg
dec
mov
dec
shlb
inc
lock
sub
cmpsb
adc
push
clc
call
xor
enter
mov
xorb
mov
bound
xchg
scas
add
sub
inc
mov
sub
cmp
and
daa
clc
xor
xchg
xor
xchg
sbb
jp
xor
lods
pop
cmovl
stos
sbb
inc
sbb
add
sub
jle
sub
out
mov
adc
ss
mov
ss
lds
inc
pop
sub
add
mov
mov
mov
mov
inc
adc
mov
fildl
mov
aad
aam
lds
jnp
lret
mov
and
dec
roll
sbb
test
xor
ret
rclb
sub
adc
loop
xchg
ss
mov
sti
fldl
ret
pop
dec
mov
mov
jmp
inc
icebp
inc
insl
lods
mov
mov
adc
into
loop
xchg
aas
popa
ljmp
sbb
pop
sub
adc
sbb
lret
inc
pop
cld
or
inc
push
shl
mov
sub
or
mov
daa
pop
insl
imul
dec
push
and
add
dec
pop
dec
rorb
fimuls
loope
in
mov
adc
xchg
hlt
out
and
negl
pop
or
inc
fimuls
fcompl
aaa
fs
int3
pop
dec
leave
rolb
xor
mov
leave
sar
orl
xchg
sub
aam
inc
clc
xchg
cmp
rorl
xchg
call
adc
test
orl
adc
pop
mov
xor
mov
mov
daa
ja
sub
imul
or
mov
call
aas
xchg
sub
add
sub
mov
jnp
flds
pushf
mov
cmp
loop
push
sub
push
jne
push
scas
dec
mov
test
std
lret
jge
push
test
sub
repnz
jbe
loopne
and
push
in
push
add
movsl
xor
shrb
aas
out
and
push
sub
cmp
mov
mov
xor
test
cmpsb
pushw
mov
mov
pop
stos
xchg
mov
lods
gs
aaa
push
outsb
xor
scas
sbb
adc
das
pop
into
mov
outsl
outsl
adc
lock
adc
lret
enter
lds
inc
xchg
add
dec
cmp
mov
or
mov
ss
xchg
loop
aam
mov
and
pop
pop
push
sbb
inc
nop
inc
test
testl
cmpsl
push
mov
ja
jno
popf
pop
xchg
lock
pop
fwait
cltd
ror
cmp
js
jnp
mov
push
psubusb
mov
cmp
outsl
adc
xor
scas
fmull
xor
inc
popf
popf
adc
call
sub
or
pop
mov
fsubs
sbb
and
jno
jno
and
push
xchg
sbb
leave
or
sbb
sbb
cmp
jp
push
jae
sbb
mov
in
dec
adc
mov
cmp
xchg
hlt
xchg
int
push
cmc
dec
dec
ret
jecxz
fildll
jmp
popf
lahf
sbb
mov
push
mov
jp
shrb
add
stc
push
outsb
popl
stos
or
ljmp
push
fwait
lods
divb
mov
xchg
and
xchg
inc
outsl
nop
lds
insb
aaa
cmp
push
insl
jno
pop
add
sub
loop
gs
sub
and
mov
andb
cmp
push
xlat
in
cmp
adc
lds
xor
int3
cli
xlat
push
inc
xlat
lods
pop
pop
cmp
pushf
cs
cmc
xchg
rcl
mov
pusha
pop
fcmovbe
and
or
push
or
int
imul
cmp
rorb
fdiv
jno
fwait
cld
mov
lret
jg
pop
cmp
fildll
jns
push
cmp
fbld
cltd
cli
aaa
aaa
inc
test
mov
sbb
aad
pushf
ret
out
cltd
dec
mov
push
jl
jp
pop
dec
in
shlb
adc
mov
fiadds
push
lods
mov
lahf
mov
call
push
xor
arpl
mov
lahf
dec
cmpsl
lret
jle
or
inc
jne
incl
lret
rclb
rclb
xchg
into
nop
mov
cmp
jo
mov
cmc
mov
sub
mull
inc
mov
add
outsl
adc
movsb
test
aas
iret
adcb
call
dec
arpl
negb
repnz
in
movsb
xchg
cmp
push
icebp
repnz
idivl
in
sub
enter
sbb
or
loopne
fisttpl
rorb
mov
dec
push
push
fwait
add
imul
xor
sbb
adc
mov
xor
aam
sub
mov
sahf
dec
push
mov
clc
popa
sbb
mov
inc
mov
inc
rcr
lea
fdivrl
jno
xor
int3
mov
dec
pop
fldt
pop
repnz
jmp
das
subl
xor
inc
imul
xor
pop
pop
fcompl
lret
shrl
push
outsl
push
arpl
inc
hlt
dec
dec
mov
outsb
inc
adc
pop
mov
lock
lahf
test
insl
push
out
sbb
pusha
mulb
push
sub
mov
push
add
int3
mull
xchg
inc
data16
mov
loopne
lods
stos
idivb
lock
xchg
jns
in
gs
popa
mov
ja
inc
daa
rcl
mov
loopne
xor
mov
out
loope
jmp
jge
test
mov
push
mov
ss
lea
in
in
sub
cmp
xchg
popf
movsl
cmp
push
roll
ss
mov
cwtl
mov
sub
lret
pslld
dec
test
outsb
ret
ljmp
fcomi
xchg
adc
sbb
lret
inc
xchg
in
das
mov
xchg
pop
scas
out
dec
mov
cltd
xchg
pusha
mov
mov
mov
pop
mov
mov
cmp
imul
test
das
jnp
addb
lcall
sbb
xchg
jo
inc
mov
pop
jne
dec
test
and
dec
fwait
popf
insb
int
inc
cmc
push
sti
dec
push
push
or
jo
or
clc
push
jg
out
aas
inc
inc
dec
dec
scas
mov
mov
xchg
ljmp
and
mov
dec
fwait
pushf
add
daa
and
pusha
fisubrl
sbb
clc
bound
dec
outsl
add
dec
push
stc
xchg
adc
inc
stc
stos
dec
add
fimull
cs
jge
mov
lret
jno
and
gs
repnz
or
push
cmc
xor
pop
inc
mov
xor
or
dec
inc
inc
inc
mov
jp
pop
adc
imul
aaa
jae
and
cs
orb
lock
mov
aad
jb
push
jns
xchg
out
push
dec
ficomps
out
cmp
shl
jne
cmp
ljmp
mov
xor
push
dec
jle
lcall
mov
dec
iret
adc
pop
aam
cmp
mov
add
mov
jns
scas
lret
adc
add
mov
fmull
inc
movsl
out
push
pop
imul
movsl
movsl
aaa
ja
sub
dec
cmpsb
popa
jae
push
add
movsb
and
jb
cli
mov
xchg
mov
js
push
lret
shr
ss
and
mov
out
fistpl
test
fidivl
mov
test
adc
jg
ret
stc
inc
pop
sub
cmp
imul
cmpsb
ret
lahf
mov
sub
outsl
lock
pop
xchg
int3
inc
cs
mov
dec
jae
aas
cmpsb
cmp
add
xchg
push
push
inc
fwait
lds
mov
test
imul
or
repnz
xchg
and
pop
jo
adc
test
shll
push
cmp
mov
sbb
xchg
cmc
into
sub
jb
imul
cli
stos
mov
cmp
xchg
add
jl
lret
ljmp
dec
popa
cmp
lods
mov
das
sbb
das
push
lock
pop
in
pop
outsb
lcall
daa
popf
pop
xor
and
ss
mov
push
lcall
outsb
push
adc
bound
xor
lods
adc
pop
sub
stos
mov
jecxz
lahf
test
mov
inc
iret
push
roll
pcmpgtd
mov
xor
addb
cmp
mov
xchg
mov
bound
pop
stos
jp
pop
fcmovbe
xchg
mov
lds
lret
lock
jne
clc
test
pushf
out
jecxz
inc
jle
sahf
bound
mov
in
jae
sub
push
sub
adc
and
sub
push
jge
fs
sub
push
push
aas
sahf
aaa
pop
xor
adcl
and
mov
pop
lds
fdivrp
dec
aaa
cmp
mov
iret
in
ret
loope
mov
in
add
xor
nop
jg
in
sub
sub
cmp
mov
jg
pop
ljmp
sbb
rorl
xor
lret
loopne
stc
scas
or
lret
mov
adc
and
lods
xor
pushf
dec
lcall
xor
xor
lret
add
mov
mov
dec
loopne
btc
pop
jecxz
push
adc
mov
outsb
mov
out
rclb
mov
rorl
out
fxam
fsts
mov
pop
test
cs
fucomip
addb
cltd
es
addr16
xchg
dec
xor
in
add
cmp
call
ss
das
pop
out
in
mov
frstor
sub
inc
leave
add
pop
push
bound
daa
arpl
cmp
or
fs
push
or
lods
divl
int
aam
jecxz
mov
clc
rclb
add
and
pop
insb
mov
lcall
inc
fwait
jo
lea
in
add
mov
test
clc
cmpsw
sti
popa
mov
push
icebp
sub
dec
push
mov
mov
jo
xchg
pop
adc
and
das
stc
andb
ja
out
mov
jl
inc
mov
xor
cmp
xor
dec
pop
fs
xchg
insb
pop
mov
add
sub
es
jae
lcall
inc
addr16
in
mov
mov
outsb
xchg
sbb
mov
cmp
pop
hlt
xchg
incl
cmp
ret
push
push
sbb
jne
adc
stos
outsb
xor
repz
mov
xchg
mov
jo,pt
movsb
xchg
cli
lea
roll
jecxz
and
adc
mov
fiaddl
test
add
xor
outsb
pusha
or
xchg
lods
fiadds
xchg
cmp
xchg
adc
rorl
ljmp
iret
inc
clc
mov
cmpsl
inc
lds
popa
mov
adc
adc
pop
sahf
jle
movsb
sbb
loopne
aas
cld
pop
cld
movsb
rcrb
pop
xchg
ret
inc
mov
scas
mov
stc
jmp
nop
sti
out
mov
test
cmp
insb
call
fsubl
ret
lods
or
or
loope
cli
aam
jns
jmp
ss
mov
pop
test
dec
out
pop
lcall
add
test
data16
adc
sahf
orl
ret
add
jnp
jne
orl
lods
fldln2
insb
add
std
gs
dec
lahf
cmp
add
aas
or
fsts
iret
push
sbb
shll
iret
mov
add
and
shlb
adc
xchg
pop
cs
cmp
cld
inc
mov
fwait
imul
mov
sarb
cmp
jae
or
jae
xchg
lea
pusha
mov
jbe
xchg
mov
ja
je
int3
test
mov
dec
push
fs
cmpsb
int3
mov
cmpb
lahf
nop/reserved
data16
cwtl
inc
daa
cmp
push
mov
loope
in
jno
cmp
xchg
outsl
fldcw
push
fsubr
inc
repz
pop
mov
pop
and
mov
mov
cmc
fwait
mov
mov
push
push
sub
or
mov
stc
cld
das
lcall
kmovw
lret
dec
cmpsb
push
xor
out
loop
and
scas
inc
fistl
fadds
ljmp
or
mov
inc
mov
xchg
or
pop
pop
bound
dec
push
lds
cmpsl
lcall
and
push
addl
cmp
arpl
xchg
mov
mov
pop
subb
jae
pop
inc
cmpsl
or
and
enter
rorl
sub
imul
push
add
mov
lds
mov
pusha
fpatan
cmpl
nop
push
mov
pop
mov
pop
add
sub
jmp
sbb
push
adc
in
dec
iret
iret
sbb
mov
popa
xor
push
jmp
mov
pop
inc
cltd
and
jecxz
mov
mov
inc
inc
stos
sbb
shrl
adc
and
dec
dec
mov
adc
scas
clc
jle
in
xchg
and
addr16
xchg
mov
fs
rcrl
xchg
pop
out
adc
sub
dec
addr16
imul
and
hlt
adcb
and
xchg
aam
bound
mov
push
ret
or
fstps
mov
sti
mov
and
imul
repz
mov
js
mov
fcmovbe
and
xor
dec
jne
scas
add
push
inc
dec
sbb
loopne
mov
pop
jns
adc
iret
arpl
mov
fscale
push
lods
leave
cmpsl
mov
xchg
rol
stc
js
iret
mov
inc
scas
pop
or
js
mov
cs
or
inc
jecxz
shrl
xchg
add
call
mov
lea
scas
and
mov
inc
dec
dec
clc
pop
rcll
dec
pushf
gs
pop
divb
sbb
lds
pop
dec
mov
fadd
cli
cmpsb
add
jp
dec
jmp
jbe
div
sbb
adc
addb
cmp
repz
dec
xchg
inc
ds
int3
nop
mov
mov
loope
mov
sub
and
enter
ret
roll
sub
or
or
and
jno
push
stos
adc
gs
mov
jne
cltd
in
pcmpeqw
cmp
cmc
shl
push
sbb
ret
xchg
mov
clc
mov
mov
call
push
mov
and
dec
fldl
push
cmp
mov
or
push
fcmovb
and
test
enter
pop
add
lret
repz
cmp
nop
dec
and
mov
out
cmc
and
in
arpl
fisttpl
sub
adc
mov
xor
icebp
aaa
adc
pop
imul
mov
outsb
pop
xor
jl
lret
iret
es
jnp
cwtl
inc
addr16
test
mov
shrb
dec
dec
movsb
imul
pop
testb
jbe
fucomp
femms
in
shrl
pop
add
dec
test
sti
arpl
add
xor
push
bound
sub
movsb
loope
push
push
ss
ja
int
push
int
push
cmp
mov
fstpt
xor
inc
movsb
xchg
mov
mov
cmp
hlt
ds
lret
sub
ret
xchg
fdivl
jb
leave
jge
mov
negb
pop
imul
xchg
ds
cmp
cmpb
stc
fmuls
mov
insb
test
daa
or
mov
cmp
mov
stos
fimull
test
insb
clc
or
loopne
bnd
int
push
add
inc
imul
call
add
mov
int
dec
out
outsl
push
adcb
jns
js
outsb
fisttpll
inc
xchg
out
push
fistpll
inc
mov
adc
sbb
jbe
fldenv
mov
push
fildl
pop
cmp
test
call
pop
shlb
test
lods
pop
cmp
sbbb
adc
cld
std
pop
push
dec
enter
or
mov
sbb
mov
sbbl
shlb
and
loop
add
dec
xchg
movsb
add
sub
adc
and
pop
loopne
inc
jecxz
andb
xor
iret
imul
mov
loop
fs
sarb
fcmovnbe
dec
mov
mov
push
addr16
cld
push
out
loope
adc
mov
xchg
lock
and
mov
mov
les
jl
in
mov
rcrb
lods
shl
push
mov
and
test
daa
mov
outsb
xorb
lods
pop
xchg
shrl
pmulhuw
or
ljmp
jno
sbb
roll
shrl
lcall
ret
repnz
outsl
mov
leave
mov
push
imul
xor
pop
in
repnz
aas
inc
xchg
add
lods
pop
fldenv
loope
and
loopne
pushf
mov
push
arpl
daa
ljmp
popa
or
leave
inc
sub
xchg
add
pop
inc
ficomps
add
xchg
sti
and
adc
mov
dec
push
adc
fwait
cld
adc
mov
mov
dec
jp
mov
outsl
clc
in
insb
int
ret
jmp
cmp
dec
cwtl
bound
xchg
fwait
pusha
pop
and
lcall
fsubr
shll
jp
mov
push
clc
lods
gs
lds
jge
mov
pop
pop
shlb
cltd
fcoml
sub
mov
lret
lea
xchg
mov
in
dec
lret
push
out
jbe
lea
and
shr
xchg
pop
ja
mov
sub
xor
or
daa
test
push
push
jp
es
rolb
out
dec
int
pop
sbb
jnp
test
mov
pop
adc
jge
xor
jge
aad
mov
add
shl
aam
sub
add
sbb
out
lods
sbb
addr16
mov
imul
or
test
xchg
lcall
sbb
pop
icebp
ret
cmp
jecxz
dec
pop
stc
sub
out
lea
pushf
pop
pmuludq
test
add
xor
adc
or
dec
adc
je
fs
mov
out
ficompl
fmul
cmp
push
push
sub
shll
rcrl
ja
gs
and
insl
mov
cmpsb
pop
not
jne
mul
dec
lahf
adc
pop
mov
dec
xchg
pop
jle
lret
rorl
cltd
insb
sbb
stos
out
hlt
sub
inc
push
cmp
jns
pop
lods
jp
xor
mov
jl
pop
subb
cmp
cli
ret
inc
inc
xchg
add
cmp
mov
cmp
xor
lret
jg
pop
orl
jge
es
hlt
nop
aam
test
xchg
imul
cmpsl
adc
xchg
cmp
mov
bound
mov
addb
mov
cmp
jbe
jns
mov
pop
sarb
imul
pop
fs
test
xchg
gs
xlat
cs
inc
loop
lock
loop
leave
fnstcw
mov
lahf
sti
int
add
cmp
pushf
and
dec
push
sbb
xor
adc
mov
enter
or
adc
sub
dec
shlb
and
dec
inc
add
ffree
out
in
and
popa
xchg
test
fsubl
aam
imul
cs
cs
add
cmp
fdivp
sbb
out
leave
cli
mov
mov
and
adc
outsl
cs
cmp
lret
lds
mov
jno
cmpsb
mov
ret
adc
pop
jmp
dec
repnz
add
mov
out
in
in
jns
jge
pop
or
xchg
mov
fstps
cs
fdivrl
jge
gs
lcall
shrb
pop
ss
xchg
sbb
xor
outsb
mov
push
fcoms
mov
or
mov
sub
push
mov
jae
out
sarl
pop
jmp
aas
aam
inc
push
add
xor
repnz
iret
inc
sbb
mov
sub
and
fwait
or
and
clc
push
cltd
hlt
cmp
testb
insl
xchg
ja
pop
shlb
mov
lcall
fildll
scas
call
fwait
mov
clc
cmp
movsb
jl
popf
sbb
popa
sbb
fdivr
mov
repnz
fwait
xchg
aam
jp,pn
jl
cmp
mov
ret
push
xchg
or
stos
test
sarb
mov
repz
popa
jo
test
push
in
mov
pushf
jnp
xchg
inc
gs
lods
mov
sub
cmp
aad
subb
gs
adc
push
adc
out
pop
dec
shl
out
mov
xor
iret
adc
pop
cmp
or
push
fcmovb
xchg
pop
dec
or
push
dec
push
lock
in
mov
xchg
icebp
pop
fisttpl
enter
xchg
mov
sbb
jle
fwait
push
or
pop
push
mov
xchg
pop
mov
pop
lods
or
add
scas
push
mov
inc
andb
xor
adc
dec
and
jecxz
aaa
cmpsl
notl
push
arpl
add
cli
gs
jnp
xorl
cmp
push
aas
sub
cld
adc
push
je
std
repnz
sti
sub
dec
mov
out
adc
repnz
ljmp
push
ja
or
mov
inc
mov
aas
cld
imul
xchg
sub
cmp
fst
ljmp
inc
sbb
mov
pop
adc
dec
fldcw
dec
jp
push
andb
push
mov
cld
inc
pop
add
or
fadds
dec
adc
cmp
pop
aad
daa
adc
rorl
fidivrs
icebp
jmp
xchg
repnz
dec
pushf
enter
repz
push
arpl
sub
repnz
xchg
mov
hlt
rorl
sub
lods
out
loope
inc
mov
cltd
scas
mov
push
popf
xchg
out
pop
xchg
or
and
repz
loop
jae
shl
mov
push
pop
arpl
sub
push
push
sub
push
test
xchg
mov
jl
lea
leave
int3
outsl
add
iret
mov
adc
fidivs
inc
cltd
stc
dec
sbb
cmp
test
dec
sbb
fstpt
dec
push
add
adc
sbb
data16
mov
mov
out
dec
or
inc
repz
sub
lock
lcall
dec
jg
outsl
xlat
frstor
mov
dec
lahf
fnstcw
shlb
lahf
loopne
pop
jnp
flds
push
rol
popa
pop
cs
iret
ds
mov
xor
scas
xchg
sbb
push
adc
test
jmp
ret
and
movsl
lods
lahf
repz
dec
stc
popf
pop
int
addr16
jno
rorb
inc
mov
jnp
xchg
push
js
mov
arpl
repnz
pop
repnz
cmp
pop
mov
out
fs
daa
pop
cmp
not
and
cmpsb
cmova
sbb
xlat
ljmp
loope
xor
sub
or
mull
leave
cmpsb
cmp
xor
test
aam
imul
in
test
cmc
mov
sub
rclb
jmp
lret
in
adc
fwait
ja
lods
je
lret
pushf
lods
fsubl
sbb
cmc
into
xchg
fdivrl
fs
and
inc
lods
jecxz
adc
out
push
repz
outsb
xchg
outsb
cwtl
cmp
fiadds
jno
and
push
fistl
aam
cmpsb
dec
sub
push
in
fistpl
xor
filds
push
inc
mov
stos
add
filds
mov
cltd
adc
jge
jge
dec
cmp
jae
cmp
shlb
adcl
mov
pop
jb
jo
lret
add
je
lahf
sub
push
xchg
xchg
cmp
adc
idivb
inc
push
fiaddl
movsb
es
loopne
pop
stc
lock
mov
out
push
pop
sbb
mov
cltd
movsl
xchg
les
cld
inc
sub
icebp
mov
dec
pop
xor
xor
sub
push
idivl
cmp
adc
push
xor
mov
imul
sub
ret
push
int
sbb
loope
stc
jnp
pop
loope
xchg
test
mov
dec
adc
rcr
sbb
andb
fmuls
pop
and
mov
std
dec
dec
insb
add
inc
fidivrs
dec
or
push
movsl
cmp
push
xor
xchg
flds
or
mov
push
pop
in
add
sub
aas
jl
jnp
faddp
mov
lods
xchg
fistps
andb
pop
or
fbld
dec
jns
scas
sub
and
out
sub
dec
int3
pop
cmp
adc
inc
fidivl
mov
xor
lcall
divb
pop
insl
stc
sub
addr16
fimuls
add
add
sarb
and
and
mov
lret
adc
in
cltd
cltd
adc
aad
inc
or
xchg
pop
xchg
loope
push
push
sub
jp
fisttps
jge
sbb
pop
push
lret
xchg
push
cltd
sarb
nop
mov
add
inc
or
cld
fisubl
inc
fiaddl
pop
lods
ss
jmp
lods
lea
mov
adc
dec
or
fcoml
dec
imul
and
nop
or
pop
sub
inc
and
dec
pop
xor
cmp
inc
repz
jg
adc
lods
push
sti
mov
stc
das
cwtl
iret
ljmp
add
popa
fs
negb
fadds
xorl
sti
xchg
push
sbb
mov
add
cmc
lret
add
test
adc
mov
add
scas
xor
ja
test
test
and
lret
enter
pop
repnz
in
lds
mov
inc
ja
shll
cwtl
xchg
scas
sti
clc
stos
cmpsb
sbb
ss
cltd
add
shll
mov
cld
add
sti
mov
stos
jmp
jmp
jle
push
sbb
xchg
or
in
int3
out
xor
ret
hlt
in
dec
inc
les
cmp
and
mov
and
jp
leave
aas
push
push
sbbb
cmp
or
or
add
push
shll
cmp
add
adc
icebp
mov
cmp
xchg
leave
jp
jno
cmp
adc
and
clc
addr16
pop
dec
popf
pop
and
xchg
js
dec
push
push
and
mov
mov
sub
xchg
xchg
jecxz
sbb
dec
push
inc
std
sub
inc
lret
cmpsb
adc
bound
out
sbb
mov
pop
fnstcw
scas
int
jnp
lret
mov
movsl
addr16
xlat
mov
add
sub
mov
jmp
outsb
aas
jmp
xlat
sbb
cld
inc
imul
adc
bound
lock
xchg
shrb
mov
lcall
and
adc
inc
pop
jmp
adc
in
cs
mov
mov
xchg
mov
fsubs
sub
arpl
clc
lea
cmpsl
add
and
imul
test
movsb
rcl
je
xor
sbb
or
ljmp
gs
movsl
clc
shr
cmp
rcrl
mov
popf
pop
test
jns
xchg
push
adc
sub
in
daa
pop
mov
es
pushf
movsb
xchg
imul
adc
lds
repz
mov
and
xchg
sub
fistpll
adc
xchg
adcl
dec
daa
popf
dec
jbe
cmpsl
rol
xor
inc
cmp
mov
mov
insl
xor
ret
loopne
popa
gs
lods
cmp
push
add
push
test
test
inc
rolb
xchg
push
pop
sub
push
jle
xchg
cld
iret
pop
mov
inc
aaa
fnstsw
sub
lcall
cmp
mov
repz
into
mov
aaa
fdivrl
pop
xchg
dec
adc
fwait
aad
jl
stos
insb
lods
outsl
xchg
pop
mov
push
push
push
push
das
fwait
leave
mov
push
inc
push
sbb
dec
pop
in
xchg
or
push
cmp
mov
cmpb
btr
push
mov
cs
in
addr16
out
aam
add
mov
adc
es
dec
cld
inc
mulb
mov
ss
fmull
push
dec
loopne
in
js
lock
imul
pop
add
push
dec
clc
add
je
bts
mov
sub
je
adc
lods
cmp
fwait
sbb
pop
es
cltd
cmp
xchg
cmp
imul
mov
cld
loop
mov
leave
insb
push
xor
lds
add
push
rorb
xlat
loopne
xchg
and
repz
dec
sbb
pusha
jge
lret
push
cmp
xchg
popa
cmp
cmp
cmc
adcb
xchg
pop
scas
jnp
lahf
aaa
add
xlat
push
jno
mov
and
in
icebp
sbb
pusha
ret
pop
data16
pop
cmp
and
and
jg
pop
iret
add
cmpsl
jmp
stos
jnp
inc
int3
fcoml
cmc
enter
mov
or
xchg
mov
out
es
xchg
fistl
ljmp
xor
lea
mov
and
mov
out
xchg
jg
sbb
outsl
es
jo
rclb
inc
jecxz
test
jae
in
and
sub
inc
out
mov
test
ds
xchg
cmpsb
xchg
les
rorb
icebp
lods
jg
inc
into
sub
adc
enter
jp
pop
movsl
cmp
and
pop
dec
test
shrl
into
ror
rcll
add
mov
cs
add
inc
orb
jnp
imul
adcl
mov
jb
lret
cld
enter
mov
in
mov
mov
lea
shll
xchg
cmc
adc
xchg
hlt
lea
shl
push
push
cmpsl
outsl
push
xor
mov
js
mov
mov
sbb
add
push
dec
or
fidivrl
push
loopne
pop
sbb
fbld
inc
rclb
xchg
insl
je
fsubrl
xor
sub
jmp
mov
jg
shlb
jp
call
pusha
push
lahf
inc
cli
inc
enter
cltd
mov
leave
push
sbb
sub
xor
xor
or
push
inc
sub
mov
push
mov
test
js
jns
cwtl
ficoml
dec
xchg
loopne
test
xor
pause
jle
inc
loope
popa
cmp
imul
dec
out
int
out
mov
cli
insb
popa
aas
lea
int
jo
push
and
sbb
jno
xor
mov
push
ret
add
push
xchg
repnz
andb
cmpsl
fnstenv
loopne
scas
fbld
fistpl
repnz
push
push
mov
mov
mov
sarl
mov
outsl
mov
push
sbb
fldt
insb
inc
xchg
stos
pop
test
push
outsl
sub
ljmp
or
jns
into
out
mov
int3
pop
negb
fildl
loope
mov
outsb
or
insl
popf
sub
inc
fdiv
adc
add
jae
imul
mov
dec
push
xchg
mov
inc
ficompl
mov
mov
fdecstp
mov
sbb
lcall
xor
pop
lods
mov
xchg
jne
stos
and
mov
int
faddl
adc
mov
xcrypt-cbc
cmpsl
xchg
loop
test
popf
enter
mov
jmp
adc
int
jmp
jecxz
add
lcall
test
es
xchg
adc
outsl
in
push
xor
cmp
adc
test
mov
adc
fs
xor
sub
jnp
or
pop
and
repz
adc
int
dec
out
xchg
mov
push
shlb
cmp
jo
xor
or
ds
xchg
cmp
andb
ret
aad
dec
cmp
adc
js
data16
aam
add
popa
xchg
or
or
lods
in
mov
addl
xchg
mov
repz
xor
and
sub
pop
in
inc
mov
mov
ret
out
dec
imul
or
push
sub
push
sbb
stc
xor
loop
xor
aad
or
jg
add
add
in
xlat
or
dec
daa
and
mov
dec
and
repz
cwtl
addr16
and
mov
fisubrs
adc
rcrl
fldt
sub
mov
dec
fadds
arpl
das
outsw
cmpsb
mov
mov
sub
cmc
subb
sub
std
pop
aam
mov
or
bound
fnstcw
push
aam
add
test
gs
aaa
xchg
mov
xchg
jae
inc
cld
add
and
popf
mov
sub
mov
stc
dec
add
mov
pop
ss
xorb
out
enter
cmp
movsl
std
lods
mov
movsl
daa
imul
cli
or
mov
push
addr16
jne
add
and
jp
loop
popf
out
adc
fcomip
bound
ss
adc
jno
mov
jno
js
pop
push
jmp
pop
add
xor
in
shl
in
cmp
sbb
sub
jmp
out
jle
and
dec
add
xor
inc
sbb
fs
or
cmpsl
xchg
push
sub
cmp
insb
cmpsl
jo
mov
sbb
mov
out
mov
lret
sti
xor
or
fisttpll
loop
sbb
stos
dec
mov
jmp
mov
loope
ds
pop
pop
mov
add
jmp
iret
sti
or
mov
mov
sbb
test
outsb
adc
push
push
sbb
aas
and
stos
stos
mov
aaa
mov
inc
add
lock
jbe
imul
leave
xchg
shlb
fstps
mov
sbb
push
cmp
hlt
outsb
xchg
adc
pop
ret
cmp
cmovno
test
sub
sub
push
dec
pop
cmp
dec
cmp
adc
inc
fwait
adc
dec
outsl
shrb
and
push
in
add
insb
jno
or
cltd
movsl
xor
dec
inc
pop
jnp
int
es
das
xchg
arpl
test
out
adc
sbb
xor
push
scas
cli
adc
mov
sbb
push
xor
sub
test
sub
mov
pop
pop
push
cmpsl
out
mov
sti
xchg
mov
les
mov
cmc
mov
mov
dec
popf
adc
mov
adc
or
les
pop
popw
or
neg
push
cmp
xchg
ds
add
cmp
nop
pop
cmp
data16
pop
in
add
clc
and
mov
xor
xlat
mov
dec
cmp
lcall
repz
rorl
ss
mov
xchg
mov
mov
clc
mov
and
add
iret
popa
daa
icebp
mov
push
imul
jnp
cs
push
adcb
leave
idivl
sub
xor
inc
enter
scas
jns
dec
dec
cmpsl
into
lock
lret
daa
bound
and
popf
and
or
jb
aam
jno
inc
cs
and
fs
icebp
dec
loopne
inc
mov
or
je
cltd
inc
lahf
fistpll
jmp
mov
shrl
cltd
mov
inc
cmp
jmp
cmc
int3
adc
jo
ja
icebp
mov
fwait
jle
rol
sub
jle
push
ret
jecxz
sub
and
push
in
or
stos
xchg
add
out
mov
xchg
mov
lret
shrl
shlb
fstpl
xchg
pop
push
insl
jecxz
sbb
gs
cld
shll
cli
movsl
lret
mov
outsl
or
aas
in
jne
lahf
adc
jnp
mov
xor
dec
push
scas
test
arpl
mov
push
fwait
iret
mov
jae
add
stc
stos
lods
xor
bound
pop
dec
es
sbb
dec
test
mov
fstpt
in
jecxz
mov
fistpll
dec
jne
xor
jl
insl
cli
and
push
xchg
mov
sub
mov
sti
push
test
insb
and
jle
adc
call
movsb
mov
pushl
aad
jecxz
mov
sbb
adc
nop
pop
or
lret
test
fcompl
cmp
outsb
sbb
in
frstor
jns
fcomip
and
xor
mov
add
cli
xchg
pop
cmpsl
rclb
and
icebp
pop
add
adc
or
outsl
pop
jne
adc
xchg
jg
cli
mov
jge
test
lods
fcomps
and
xchg
sbb
pop
jnp
sub
lds
and
mov
add
out
jp
or
ret
in
shll
push
nop
in
aad
or
out
rcrl
xchg
aaa
test
ljmp
iret
loope
shrl
sbb
stos
movb
outsb
cmpb
sub
fwait
sbb
scas
adc
loopne
mov
imul
cld
or
outsb
mov
push
jecxz
rcll
jne
rcll
mov
pop
loope
pop
or
js
andb
pop
push
js
subl
jo
lret
roll
mov
int
aas
dec
mov
add
dec
in
test
in
push
aas
popa
cmp
fdivl
xchg
imul
pop
shrb
mov
or
test
xor
inc
shlb
push
fisubrl
mov
xlat
ret
ja
push
fnsave
or
enter
out
and
pop
aam
test
and
jle
mov
ret
push
sub
mov
in
mov
rorb
xor
loop
fidivl
dec
scas
adc
pop
lds
in
jns
and
loopne
jo
sbb
ljmp
push
push
fs
cmp
jbe
and
mov
mov
jne
popf
mov
mov
jg
aam
les
in
popa
js
std
push
mov
xor
and
push
jge
out
imul
cmp
aad
fwait
jle
ret
mul
addl
or
pop
jmp
movsl
lock
xchg
sbb
xchg
sti
jo
lock
out
lock
push
daa
inc
incl
add
and
loopne
sahf
inc
bound
stos
out
popa
mov
decl
xchg
aas
xchg
cmp
xchg
lcall
jnp
cmpsb
sti
test
inc
test
push
pop
cmp
adc
clc
sbb
insb
jg
dec
dec
and
mov
pop
mov
mov
gs
pop
mov
jne
add
cmpsb
mov
pop
daa
int3
cmpsl
mov
xorl
sti
ja
push
repz
mov
les
jo
mov
mov
sub
jbe
cltd
inc
xchg
jno
jae
aaa
cmc
popa
sub
push
loopne
nop
jns
fstps
cmc
test
pop
outsl
xchg
adc
insl
idiv
lret
lret
arpl
push
sub
pushf
adc
sbb
pop
aas
data16
adc
xorl
mov
rorb
jne
mov
xchg
imul
ret
cmpsl
imul
in
pop
cs
mov
call
and
or
je
loopne
sub
les
inc
push
ret
push
call
or
xor
pusha
mov
gs
mov
dec
out
push
imul
sarb
adc
inc
sub
cmp
mov
mov
sbb
jae
mov
push
fstpl
hlt
mov
cli
std
arpl
mov
subl
nop
mov
push
xchg
insl
mov
jbe
in
xchg
mov
lds
mov
shl
adc
dec
jo
push
mov
movsl
pusha
or
lock
rclb
arpl
adc
loopne
sbb
cld
inc
cmpsl
push
pusha
mov
repz
insl
cmp
xchg
and
push
lret
jmp
pop
js
pusha
dec
and
jmp
pop
into
cli
xor
add
mov
gs
xchg
clc
sbb
jle
sarb
sub
inc
mov
bndldx
es
and
mov
fnstcw
jno
hlt
ljmp
dec
cmp
adc
lds
jmp
inc
idivb
stos
push
xchg
sbb
xchg
fidivl
sbb
add
ja
jns
and
inc
mov
es
jle
cltd
shll
es
mov
stos
push
stc
repnz
push
pusha
rcll
cli
or
mov
call
xor
rcrb
push
mov
xlat
mov
mov
dec
imul
popa
dec
test
cmpsl
stc
push
sub
fsubrl
sub
pop
stc
lods
adc
xor
pop
mov
push
int
mov
in
lods
mov
xor
fs
and
inc
test
insl
add
adc
inc
or
dec
fwait
and
ret
outsb
cmp
mov
cld
sub
insb
icebp
sub
fildll
jmp
jmp
popa
dec
fwait
mov
jae
cld
scas
in
or
sub
jne
imul
insb
jmp
jo
mov
mov
mov
cmp
insb
mov
push
in
or
loopne
test
xchg
pop
enter
jmp
lret
test
xor
jbe
jle
lods
nop
and
scas
popa
call
dec
or
shr
imul
enter
je
mov
dec
rcll
cmp
iret
and
lahf
mov
aad
in
or
dec
xchg
or
inc
xor
sbb
mov
add
stc
ret
lea
xchg
outsl
out
mov
loopne
add
and
push
mov
fs
add
notl
xor
and
cmp
xchg
scas
push
mov
pop
shll
mov
pop
gs
push
es
cmp
or
data16
in
sub
cltd
or
xchg
push
sub
pop
fdiv
insb
push
pushf
push
aad
inc
inc
sahf
cld
adc
add
and
popf
sarb
sub
sub
and
cmp
mov
mov
jp
lahf
cmp
rclb
addr16
and
inc
jge
jbe
cvtps2pd
mov
dec
mov
call
bound
xchg
loope
jge
add
outsl
push
mov
jecxz
hlt
and
nop
pop
dec
popa
mov
incl
jecxz
pop
cmp
loope
js
push
add
popf
int
push
jae
dec
out
push
jns
xlat
cli
mov
push
mov
fdivrp
bswap
or
hlt
adc
cmp
clc
test
fnsave
xlat
inc
add
lea
pop
outsb
test
xor
inc
dec
pop
mov
out
push
notb
push
mov
xchg
mov
sub
add
push
xchg
jp
mov
add
lret
jle
cmp
imul
lods
ret
jns
scas
outsl
sbb
orb
push
pop
inc
out
add
mov
pop
push
pop
insb
dec
pop
mov
imul
push
sbb
fstl
sbb
jle
jb
pop
push
xchg
xor
ds
pop
sbb
fs
mov
icebp
aas
mov
xor
xor
jge
inc
call
cmp
pop
xchg
add
mov
ljmp
insl
xchg
cmp
xchg
insl
mov
or
xor
push
sub
sahf
mov
call
in
iret
pop
insb
iret
inc
movsl
test
pop
pop
imul
cltd
gs
lods
pop
rcrl
sub
mov
dec
sbb
jp
mov
cmp
not
jmp
xchg
vunpcklpd
in
insb
xor
rcrb
popf
and
dec
testl
or
and
adc
cmp
jbe
cld
aam
cmp
push
or
xor
sub
movb
adc
jnp
in
xor
subb
pop
pop
mov
fwait
push
ds
jno
jl
xchg
pop
xor
mov
and
je
push
mov
scas
or
test
fidivs
mov
loope
flds
cld
adc
fiadds
pop
xor
fldl
mov
inc
or
jecxz
in
sub
lods
fwait
xor
mov
in
jnp
pop
lods
push
test
imul
mov
inc
add
lods
xchg
in
cs
pop
inc
pop
movsl
jle
jns
ja
mov
shlb
pushf
mov
xchg
repz
mov
push
int3
mov
mov
cld
insl
fsubp
cmpsb
imull
xor
jg
out
outsl
push
lock
cltd
adc
cmp
rorb
jmp
cmc
cwtl
adc
testl
pop
shrb
enter
shlb
test
push
xchg
xchg
clc
and
sbb
pusha
std
inc
push
adc
sbb
insb
inc
lds
pop
cmp
enter
jns
pop
arpl
xchg
in
inc
loope
out
xor
mov
pop
or
nop
and
divb
jge
mov
mov
loop
inc
xchg
lret
jno
insl
inc
mov
xchg
mov
mov
pushf
mov
fucomip
add
aas
cmc
inc
loopne
arpl
jae
aas
add
jne
das
lret
mov
jge
inc
cmp
cltd
pushf
ret
or
xchg
filds
roll
mov
test
std
jge
or
enter
es
or
push
mov
mov
cmp
lret
sub
dec
mov
mov
fisttps
sbb
push
sub
sbb
jne
in
in
mov
test
int
pop
daa
test
or
fcomp
xor
pop
lea
push
mov
outsb
mov
lea
inc
pop
add
rorb
cltd
xor
pusha
xor
mov
in
xchg
iret
call
cmp
scas
mov
mov
pop
adc
ss
cmp
mov
push
and
push
mov
mov
dec
in
cli
and
lds
in
pop
aam
xor
scas
sbb
xor
push
int
nop
pop
cmp
loope
ss
push
jno
call
pop
mov
xchg
outsb
xchg
imul
ficoml
sub
stos
sub
mov
icebp
xor
mov
pop
repnz
push
mov
pop
xchg
mov
inc
je
movsb
inc
loope
imul
in
in
ss
dec
nop
divb
rorl
cmpsb
movl
lcall
imul
jbe
push
shll
test
dec
and
cmpsl
and
js
mov
fildl
daa
mov
loop
icebp
xchg
leave
cmp
xchg
sbb
scas
and
xchg
les
ljmp
mov
mov
mov
jae
mull
in
aas
mov
mov
inc
mov
rorl
adc
loope
push
ja
and
mov
scas
js
stc
dec
andb
mov
inc
inc
pop
sarl
add
add
add
into
mov
sbb
arpl
dec
xorb
or
jecxz
outsb
cmp
mov
dec
xchg
xorb
insl
rolb
lret
loope
mov
shrl
sub
loop
pop
adc
sub
ret
test
pushf
pop
dec
cld
jbe
pop
pop
or
sbb
pop
ret
add
push
das
jg
xchg
lea
pop
jbe
sbb
jns
cmp
xor
clc
repz
or
imul
sbb
scas
add
pusha
sahf
test
rcr
xchg
sub
imul
xchg
repnz
movsb
scas
pop
mov
leave
sub
loopne
repz
jno
repz
aas
es
xor
inc
and
mov
es
inc
ds
test
jb
add
sbb
test
jl
cltd
outsb
adc
inc
in
aaa
stc
pop
in
les
mov
mov
js
dec
lods
xchg
inc
scas
outsb
push
test
push
mov
mov
xor
push
xor
dec
mov
shll
pop
jle
add
jno
or
add
loopne
cmc
sbb
xchg
pop
sbb
lds
in
fwait
mov
mov
mov
leave
mov
gs
rorl
cmp
pop
mov
cli
in
andl
loopne
test
jns
mov
ja
das
jmp
cwtl
xor
arpl
dec
icebp
pop
push
sahf
jg
enter
movsl
ret
inc
mov
in
ret
sahf
add
add
mov
xor
sub
mov
cmp
xor
test
and
cli
push
pop
push
jo
int
add
mov
cwtl
outsb
stos
in
and
stos
incl
insl
divl
out
scas
cmp
add
or
leave
jg
fisubl
inc
adc
cmp
mov
loop
jns
cmp
aaa
into
pop
push
es
aas
nop
adc
jns
movsb
jbe
cmp
pop
cld
pop
mov
daa
push
sbb
cld
js
push
jg
orl
mov
fistps
inc
mov
pop
jnp
add
mov
pop
push
imul
dec
leave
clc
daa
in
inc
dec
das
add
jmp
and
std
stos
cmp
cmp
mov
into
test
enter
add
jp
inc
push
jg
xchg
mov
xchg
pusha
adc
cmp
sbb
movsl
xchg
fnstcw
pop
icebp
sbb
ret
cmpsb
stc
test
cltd
and
sahf
out
sub
addl
out
aas
jp
xor
and
lahf
xchg
mov
mov
out
lret
cmp
notb
dec
xchg
sub
sub
push
jmp
and
jne
cmp
scas
push
sbb
add
pop
movsl
mov
sahf
aaa
clc
jle
or
cmp
push
mov
mov
xor
fcomi
xchg
leave
xchg
shlb
jbe
pop
and
cmp
sbb
fidivrs
repnz
cmpsb
icebp
loop
mov
test
out
mov
idiv
stos
push
mov
les
loope
xor
dec
icebp
fsubrl
inc
xchg
and
test
xlat
inc
xchg
cmpsb
pop
xchg
and
dec
das
sbb
sub
pop
sub
lods
inc
adc
pop
out
jne
xchg
mov
jle
out
pop
cltd
and
push
jo
xor
pop
sahf
cltd
out
xchg
and
aad
outsb
cwtl
outsb
inc
ss
into
popa
mov
xor
xchg
xor
loope
sub
clc
cmc
push
lret
pop
mov
sub
mov
inc
ret
sahf
pop
roll
and
and
jbe
movsb
add
popf
sub
insb
mov
sub
and
aam
fcmovu
pop
push
adc
ret
sub
pusha
push
andl
xor
sarb
je
aas
stos
and
pop
push
int
push
sub
sub
inc
xlat
add
pop
call
add
popf
xor
xor
test
movsl
cs
cmp
mov
push
pop
add
xchg
dec
test
pop
lods
mov
inc
mov
push
and
dec
fldl
adc
pop
icebp
jno
xor
neg
mov
mov
pop
sub
flds
push
or
push
mov
mov
adc
push
psrad
jo
inc
bound
and
cmp
inc
mov
ret
cmp
insb
or
testl
push
push
pop
adc
jae
clc
iret
jecxz
pop
adc
nop
mov
push
mov
or
jecxz
mov
inc
lret
mov
movsb
std
push
jp
aas
push
cld
insb
mov
fucomi
pop
fimull
cs
scas
mov
xchg
lret
xchg
rcr
pushl
scas
repz
jp
movsl
out
sbbl
or
xlat
lods
in
and
inc
xor
std
push
push
or
mov
push
add
jecxz
cli
or
or
out
into
pop
inc
mov
pop
inc
xchg
inc
and
sbbl
outsl
xchg
insl
xchg
push
xchg
lret
and
in
idivb
les
cmp
stos
sub
xchg
cli
adc
sti
sbb
jno
jnp
pusha
mov
mov
cltd
mov
outsb
insb
aas
push
mov
rorb
mov
fsubrs
ret
in
aam
pop
adc
daa
push
mov
adc
pop
xchg
ss
in
or
mov
repnz
int3
sbb
xchg
jmp
nop
in
pushf
xor
push
sahf
dec
sbb
push
mov
cmpl
mov
or
inc
dec
mov
ret
cmp
inc
xchg
or
adc
push
aad
cs
dec
and
jmp
pop
xor
divb
mov
test
daa
sub
lods
stos
mov
xor
test
xchg
mov
insb
lcall
sbb
and
lret
mov
add
sarb
mov
fwait
mov
cltd
out
fnstsw
inc
out
cmp
mov
xchg
xor
jb
clc
mov
cmp
mov
sarb
stos
mov
xor
out
fisubl
jno
test
inc
push
jmp
int
xchg
cmc
or
ret
insb
pushf
into
lods
add
sahf
mov
scas
mov
cmp
push
loopne
jbe
sbb
mov
cli
repz
mov
cmpsl
fdivr
mov
jnp
sub
subl
lock
daa
jb
insl
sbb
mov
and
sbb
mov
or
scas
adc
imul
test
gs
jne
jge
and
das
xchg
insl
add
mov
andb
dec
xor
jle
orb
pusha
out
xor
in
xchg
or
xchg
or
xor
dec
imul
and
jp
sbb
pop
test
cmp
sbb
lock
xchg
pop
outsl
addl
in
enter
and
adc
mov
push
sub
sahf
in
loop
mov
xchg
jbe
cli
and
jmp
xor
repz
ret
dec
movsl
and
call
sbb
mov
lock
dec
mov
outsb
pop
sub
or
loopne
adc
mov
jb
push
or
xchg
jecxz
mov
push
cmp
daa
pushf
lods
sbb
and
push
fisubs
in
inc
outsl
in
andl
out
cmpsb
push
push
xchg
shlb
mov
cltd
pop
or
jecxz
cwtl
adc
mov
and
mov
cwtl
pop
scas
nop
add
adc
xlat
shlb
jecxz
mov
fbld
loopne
jno
add
inc
and
clc
imul
cmp
aas
jo
inc
xor
pop
in
movsb
xchg
xchg
mov
add
es
pushf
jno
sar
leave
jae
and
jp
daa
cwtl
and
stos
dec
jnp
inc
jmp
inc
mov
mov
movsl
outsb
repz
fstpt
pop
lret
jl
xor
movb
mov
mov
jne
ret
adc
sub
inc
xor
pop
or
jmp
repz
xor
movsl
mov
lds
xchg
mov
dec
xchg
mov
arpl
sub
xchg
fldcw
test
das
pop
es
or
sbb
xchg
lods
jle
fildl
in
push
arpl
sarb
and
sub
dec
adc
mov
xchg
dec
in
mov
jno
inc
stos
popa
out
xor
notb
xchg
in
sbb
into
movsb
pop
insl
push
cmp
loopne
xor
mov
jle
out
push
adc
mov
lret
fcoml
mov
lahf
les
mov
les
mov
lcall
cmp
stos
jnp
addl
repz
add
int3
cmp
int
lea
jle
mov
add
lahf
je
cmpsb
cmp
mov
testl
cmp
testl
out
sbb
mov
push
cltd
and
inc
sbb
xor
mov
jecxz
pusha
sub
bound
ss
dec
std
mov
fldt
lods
xor
pop
pop
ret
and
sbb
inc
push
or
xchg
xor
dec
jmp
addr16
aad
add
and
xor
jp
fdivr
mov
cmpsb
xchg
in
xchg
or
bound
push
rclb
lret
cmpsb
gs
clc
dec
std
movups
mov
inc
dec
std
push
pop
dec
lahf
or
mov
sbb
std
sahf
and
scas
or
mov
or
notl
mov
adc
ret
cmp
sub
xchg
mov
dec
mull
mov
adc
cmp
inc
mov
xorb
fmuls
xchg
adc
dec
aaa
cmp
sti
add
adc
lods
mov
jge,pt
cli
sbb
fsubl
jmp
push
adc
adc
inc
push
mov
jp
sbb
adc
rorb
sbb
cmp
dec
inc
push
jecxz
into
movb
hlt
filds
dec
xor
push
jae
cmp
sbb
stos
jp
mov
inc
clc
cwtl
imul
mov
in
shrb
xchg
and
and
and
out
xchg
jecxz
lretw
les
inc
or
leave
xlat
lods
clc
sbb
xchg
ffreep
stos
insb
outsl
loopne
icebp
fsubrs
pop
outsl
test
add
xchg
icebp
jo
push
sub
dec
push
fistl
mov
arpl
pop
mov
jne
imul
lods
sbb
aas
adcl
jp
rcrl
daa
mov
cli
mov
mov
pop
aam
dec
gs
push
cltd
lret
push
aas
fstp
das
loopne
jne
shll
push
int3
mov
addb
out
pop
pop
pop
rcrb
in
push
ret
pusha
xchg
xor
test
bound
mov
cs
mov
mov
test
inc
lods
pop
dec
xlat
or
adc
ss
jno
pusha
enter
mov
xor
add
pop
iret
fstl
lret
idivl
or
adc
mov
inc
out
outsl
movsl
mov
ffree
and
pop
mov
mov
pushf
mov
outsl
sbb
pop
lods
and
test
into
test
jae
pop
xor
shrl
int
jb
xorl
aaa
test
lock
push
and
inc
ds
outsl
popf
sub
out
mov
sub
negl
add
lret
repnz
jp
sbb
sbbw
adc
mov
out
aad
dec
cwtl
adc
lret
lea
cmp
or
out
dec
lcallw
cli
popf
aad
jg
out
shlb
sbb
mov
sub
xor
jle
xchg
cmp
ret
xor
add
inc
xchg
push
mov
std
jle
ret
cmp
mov
xchg
jle
addr16
scas
xchg
inc
push
in
inc
cmp
add
cmp
scas
mov
nop
in
loop
jg
and
shl
jnp
loopne
das
scas
mov
sahf
jmp
ret
jle
sub
cmpsb
scas
clc
xchg
cwtl
push
fcomp
in
xchg
outsl
test
mov
mov
test
daa
sbb
fsubr
sub
les
lds
loop
jb
lods
dec
lds
leave
dec
cli
repnz
sbb
or
js
dec
shrb
pop
xor
dec
les
xor
xlat
lock
inc
xchg
pop
mov
jo
out
push
repz
dec
sahf
jae
add
xor
fstpt
pop
cwtl
pop
inc
pop
add
mov
inc
enter
pusha
or
jne,pn
mov
inc
jecxz
out
dec
xor
into
sti
mov
enter
test
inc
or
or
movsl
adc
push
mov
loope
jbe
fwait
jo
cmp
cmc
dec
xchg
pop
insl
idivl
sbb
test
imul
cmp
cmc
sti
jge
push
fistps
pop
stos
cs
aad
popf
mov
jns
add
jle
dec
or
bound
adc
pop
jg
push
pop
jbe
mov
adc
dec
cmp
add
xor
cld
jmp
outsl
pop
pop
sbb
push
test
jecxz
push
push
jle
js
adc
fwait
fs
mov
fsubrs
dec
pop
scas
insl
or
pop
jp
ror
sti
cmp
mov
lds
dec
bound
cmpsb
dec
aaa
fidivrl
adc
dec
dec
les
popf
sbb
mov
fs
fcomi
loopne
scas
xchg
loope
push
insb
test
vshufps
divl
sbb
jmp
pop
stc
loopne
popa
add
dec
add
pusha
cld
xlat
adc
cmp
mov
xchg
jno
je
mov
out
lds
test
inc
subl
pop
pop
mov
cltd
mov
mov
mov
test
sti
xor
repnz
sub
test
and
and
adc
push
shlb
mov
movsl
mov
fwait
cmp
shlb
insl
mov
lahf
sbb
or
arpl
loopne
lea
and
sub
add
inc
pushl
stos
sbb
inc
jle
loopne
fbld
mov
pop
mov
push
frstor
xchg
sbb
pop
xchg
or
cwtl
jbe
clc
in
leave
adc
ret
gs
mov
fiadds
pop
and
nop
mov
sbb
or
or
les
mov
dec
jae
lea
sahf
adc
or
mov
add
jge
data16
mov
in
lahf
gs
stos
mov
pop
mov
or
ret
mov
clc
and
insb
andb
aad
test
xchg
xor
jl
jge
ljmp
xor
fiaddl
loope
int
ljmp
sub
sarb
add
xchg
test
mov
popf
adc
add
pop
sbb
mov
pop
sub
dec
stc
repnz
fidivrs
xchg
dec
subb
rol
pop
lods
or
in
bound
std
xor
pop
test
mov
mov
scas
inc
in
pmullw
fwait
inc
push
jle
scas
sbb
je
out
cli
rcll
mov
in
or
cmp
push
pop
xorb
into
sbb
xchg
add
mov
sahf
dec
xor
xchg
mov
mov
inc
pop
add
cmp
pop
mov
pop
ds
inc
stos
push
pop
ja
jne
dec
push
xchg
leave
pushf
and
mov
mov
aaa
bound
stc
sbb
loop
movsb
lods
punpcklwd
mov
sub
test
pop
cmpsl
mov
mov
ss
pop
popf
inc
adc
mov
stos
cmp
lret
ss
notl
pop
xchg
notl
push
mov
lock
mov
lret
and
test
inc
mov
xor
pop
leave
and
mov
bound
insl
cs
xor
outsl
out
jle
xchg
shll
pusha
movsb
adc
shr
out
insl
sub
lods
testl
adc
call
push
push
loop
add
jnp
xor
ret
xchg
lods
inc
test
mov
cmp
aad
inc
test
rcrl
mov
cmc
scas
sub
adc
or
lock
push
std
mov
xor
jge
movsb
mov
and
mov
cli
out
cs
hlt
add
shll
lcall
cwtl
ret
cmpsb
ss
lea
or
pop
xor
sbb
std
movntq
js
testl
inc
sub
cmp
into
pop
cmp
out
lods
fwait
adc
test
popa
jp
xor
inc
mov
rclb
mov
inc
xor
mov
jne
sahf
sub
ror
and
cli
pop
ljmp
mov
pop
cwtl
pop
mov
aad
fsubs
add
pushl
jp
ljmp
dec
adcl
pmaxub
dec
ret
inc
xchg
mov
add
jg
fs
xchg
lcall
subl
jg
popa
inc
sbb
lock
sub
mov
test
clc
dec
inc
das
lock
out
jle
or
daa
je
ss
or
or
or
inc
icebp
ret
xchg
cmp
xchg
aam
xchg
push
test
leave
push
call
or
in
fwait
mov
lret
sbb
outsb
sbb
out
mov
psllw
sbb
jnp
cmp
sbb
jmp
sub
clc
fimuls
jmp
jb
jl
dec
mov
std
shlb
std
adc
out
dec
jecxz
dec
es
xor
lahf
enter
cmp
push
arpl
adc
inc
sbb
repz
movsl
and
dec
out
or
int
test
sbb
jbe
mov
jae
push
sub
pop
jg
inc
bound
inc
into
shlb
add
jmp
or
leave
ja
pusha
psrlw
popa
imul
jae
movsl
and
aas
sub
xor
lret
dec
decb
icebp
mov
cli
arpl
rcl
jmp
sbb
jno
sub
sbb
mov
testb
clc
jmp
jp
sbb
sbb
mov
inc
xchg
ds
push
inc
pop
divb
jne
sbb
add
cld
or
nop
lods
call
dec
sti
adc
insl
leave
xchg
push
adc
xorl
or
js
pop
jg
add
shl
imul
lret
push
push
inc
arpl
push
scas
ret
mov
test
pusha
out
fildll
into
push
push
or
adc
push
push
push
pop
or
mov
adc
push
and
cmp
lret
dec
adc
xchg
sahf
out
and
insb
jl
in
and
ja
mov
je
sbb
fdivr
cltd
out
fwait
imul
push
jp
mov
subb
jmp
lock
loopne
out
push
faddl
jmp
push
mov
xor
push
or
and
xor
stos
mov
cmpsl
push
lcall
cmp
mov
aaa
iret
inc
add
test
jo
out
and
cmp
mov
mov
fists
mov
pop
xor
xchg
fidivs
sbb
leave
jo
test
mov
jecxz
jge
shr
mov
aam
sub
int
rcll
js
arpl
dec
ret
jnp
jp
imulb
sbb
pop
add
mov
test
sbbb
movsb
sbb
xlat
jl
xchg
jne
scas
aam
cltd
in
andb
jp
mov
jecxz
sbb
add
out
int3
add
popa
mov
imul
sub
adc
jo
lds
ret
jecxz
mov
pop
push
lret
mov
mov
cmp
jno
and
aam
lret
icebp
xor
mov
mov
xchg
mov
lds
ljmp
dec
pop
and
pop
mov
scas
andb
sub
test
mov
xchg
std
pop
dec
push
xor
cmp
sub
push
xchg
jle
jg
mov
in
pop
sarl
add
mov
cwtl
inc
stos
jns
adc
int3
das
or
pop
stos
into
pop
ficompl
pop
dec
orb
divb
sahf
push
mov
jae
es
mull
cmp
inc
ret
shrl
hlt
pop
sahf
addb
xor
stos
and
ja
aaa
stc
and
adc
or
insl
mov
pop
insb
pop
bound
and
and
pop
mov
in
std
pop
cmp
loop
jmp
sbb
jae
sbb
in
xchg
jnp
out
pop
cmc
ficoml
adcl
into
mov
push
xor
push
push
mov
mov
lock
ja
mov
push
neg
movsl
push
int
pop
out
push
cwtl
push
out
sbb
popf
dec
call
jle
mov
mov
out
scas
call
lret
daa
repnz
andl
test
adc
cmp
mov
lods
cld
test
in
lcall
inc
je
mov
sbb
or
orl
dec
or
movsb
sahf
cmpl
push
pop
jl
lods
pop
and
add
xor
bound
fwait
rcll
inc
fisttpll
out
sbb
mov
sbb
mov
or
rorb
or
rdtsc
xor
jno
rcr
ds
fmul
test
inc
addr16
ficoms
mov
inc
fildl
shrl
cmp
add
fcmovnb
and
xchg
cmp
or
add
add
sbb
pop
mov
fsubrl
and
aas
shll
pop
sub
xchg
es
mul
mov
sbb
les
xor
rol
test
into
shrl
dec
xchg
fildl
cltd
jge
jl
jae
fstps
pop
or
push
imul
sbb
xor
imul
repnz
xchg
fildll
dec
jmp
imul
xor
shrl
rorl
popf
outsl
add
inc
cld
addr16
mov
fwait
dec
aas
xchg
and
stos
rcll
dec
mov
xchg
mov
pop
push
std
jb
mov
cmp
jno
bnd
push
xlat
cmp
adc
xor
push
mov
pop
pushf
ret
sbb
pop
mov
pop
pop
jbe
je
leave
outsl
inc
pop
mov
dec
push
lods
dec
cmpsb
mov
and
push
cs
in
fimull
adc
cmp
pop
sbb
jmp
jb
cmc
in
and
das
test
xor
sarb
sahf
jl
xchg
nop
rclb
and
jg
sbb
mov
add
notl
out
mov
nop
and
sbb
jnp
mov
xchg
dec
mov
add
mov
leave
mov
clc
jnp
in
mov
lahf
mov
cld
stc
add
inc
cmp
push
xor
subb
mov
mov
out
sbb
jne
or
int3
push
aaa
push
jg
jecxz
jle
xlat
xchg
ss
push
adc
mov
adc
std
inc
hlt
adc
jmp
lret
xlat
cmpsl
sbb
aaa
push
add
out
cmpb
cs
jp
xor
out
ja
xor
out
imul
bnd
push
imul
aas
scas
outsb
mov
nop
add
dec
push
mov
inc
imul
pop
lea
inc
push
das
or
ret
fsubrl
and
stos
ds
test
jp
and
leave
jmp
sbb
pop
dec
mov
push
xorb
cmp
cmp
adc
shll
cmp
push
mov
inc
ror
stc
xor
push
arpl
push
cwtl
adc
jecxz
cmp
data16
and
jle
test
and
repz
xchg
or
decl
xor
push
ds
lret
adc
or
shll
shll
insl
xchg
in
div
push
test
xor
and
adc
jmp
sbb
adc
pop
push
out
mov
sub
and
pop
cmp
arpl
cwtl
fstl
fcomps
or
aaa
mov
mov
push
iret
pop
hlt
jbe
sub
mov
ljmp
pop
pushf
pop
adc
mov
jbe
enter
fldenv
push
in
rcrl
cltd
loopne
std
sahf
imul
adc
mov
jmp
int3
push
lds
fnsave
mov
fwait
addr16
js
sbb
rorb
cmp
and
int
movsl
jg
adc
push
inc
cmp
out
or
fcmove
pop
inc
or
push
inc
add
je
test
add
outsl
pop
cltd
or
sbb
ret
and
sub
xchg
xchg
pop
scas
mov
addl
pop
imul
inc
xor
clc
icebp
test
call
xchg
or
sbb
mov
divl
mov
lahf
mov
sahf
sub
or
mov
xchg
call
sti
sbb
in
out
mov
xor
mov
sti
gs
pop
xlat
xchg
xlat
jno
sbb
fwait
xchg
fs
aaa
in
test
mov
stos
aam
in
test
loopne
jg
inc
imulb
lcall
push
mov
sub
or
xchg
dec
mov
imul
mov
sub
jle
xchg
enter
cmpsl
test
and
inc
fsts
test
push
mov
fwait
outsl
mov
fwait
lock
sti
nop
shrl
sahf
xchg
xchg
mov
xlat
fimull
fildl
cwtl
push
cmp
pop
pop
xchg
adc
pop
je
stos
das
jle
sahf
test
ret
sub
gs
dec
lcall
idivl
push
test
xchg
jno
mov
gs
mov
xlat
dec
ja
dec
push
dec
inc
fwait
scas
pop
push
ja
inc
ja
clc
push
aam
sbb
cmpsl
daa
loopne
pop
mov
or
pop
loope
outsb
push
lret
fists
sbb
insb
dec
xor
cmc
lret
pop
aas
jo
xchg
sbbl
mov
sarl
je
fdivs
or
jns
cmpsl
pop
repz
dec
movl
enter
pushf
insb
aaa
repnz
mov
jae
xchg
or
or
pop
es
test
stc
xchg
jnp
lret
jle
stos
outsl
cwtl
sub
shll
and
fstpl
lods
adc
pushf
ret
push
stos
cmp
test
sub
ds
jmp
xlat
aas
mov
scas
jp
out
inc
cmpb
xor
push
jne
dec
imul
push
pop
or
mov
scas
cmp
ret
loope
push
or
add
xrelease
mov
jb
mov
and
test
add
lods
lahf
lcall
clc
in
jno
aaa
into
mov
loopne
outsl
shrl
mov
loopne
inc
cmp
sub
and
mov
test
sbb
pop
pushf
lret
sti
das
mov
loopne
push
push
sub
jnp
jno
dec
mov
int
adc
mov
push
jl
jb
cltd
es
data16
fimuls
add
dec
mov
cmp
and
inc
pop
xor
sbb
dec
imul
mov
ds
sbb
push
movsb
and
or
push
or
mov
icebp
lea
xchg
mov
sub
adc
clc
sbb
sub
and
lret
test
jg
lds
sbbl
sub
sbb
fstsw
in
mov
jmp
pop
enter
in
push
and
or
fadd
mov
insl
xorl
mov
push
insb
neg
push
in
test
push
push
dec
jmp
xor
ds
pop
stos
sbb
and
push
fwait
test
add
pop
mov
nop
pop
insl
xor
dec
lret
mov
popa
or
push
in
in
mov
dec
xor
adc
pushf
jl
or
and
xchg
mov
sbb
arpl
inc
fldenv
sbb
mov
add
mov
or
es
adc
out
jl
outsl
xchg
mov
dec
mov
xor
ds
in
jno
sbbl
hlt
dec
xor
mov
ret
cwtl
add
mov
sub
pop
adc
aam
xlat
xchg
aaa
fildll
out
fwait
test
adc
nop
mov
ret
xchg
inc
in
int
and
rcrb
jg
push
or
cmp
adc
mov
xchg
lds
jl
dec
mov
jo
dec
push
adc
push
sbb
stc
cld
fwait
adc
mov
push
and
push
lret
mov
mov
loope
int
pop
mov
adc
rcrb
lret
push
sub
push
data16
sbb
stos
xor
out
xchg
mov
cmc
das
sti
add
push
sub
xchg
daa
jp
jecxz
shrb
lods
push
int3
sub
cli
add
and
insl
mov
sbb
push
stc
mov
clc
or
ja
mov
or
cld
push
int3
ljmp
in
adc
loope
cltd
mov
mov
mov
and
insb
or
in
ja
ds
and
in
pop
mov
fsubs
lods
xchg
mov
data16
xor
sbb
pop
jle
xor
shll
mov
dec
xor
fsts
daa
push
pop
mov
add
es
iret
dec
cmc
xor
shr
add
sbb
repz
arpl
cmpsl
lcall
pop
mov
aaa
cmp
sub
ficomps
xor
jnp
lea
dec
push
lea
je
mov
enter
xor
sbb
or
hlt
lods
xchg
nop
xchg
push
test
push
push
dec
and
out
inc
pushf
in
or
js
push
lcall
loopne
dec
mov
pop
pop
add
sbb
shll
pop
negl
lahf
or
jmp
sbb
fists
adcl
mov
dec
stc
loop
scas
inc
das
mov
mov
and
or
js
inc
icebp
inc
mov
jg
iret
lret
xchg
subb
xor
xchg
ret
out
lock
cmp
data16
mov
fwait
xor
sbb
cmpsb
stos
scas
cld
test
pop
add
aaa
lret
push
mov
cmp
add
mov
mov
jmp
mov
xor
lret
sub
call
sub
mov
fdivl
aas
lods
mov
lock
mov
jmp
fstl
dec
mov
dec
mov
xchg
cmp
push
repnz
xchg
dec
into
stc
shrb
mov
pop
ret
xor
mov
fmull
mov
cmp
insl
adc
xchg
cmpb
test
cwtl
shlb
inc
pop
sub
push
ljmp
ss
inc
dec
dec
cmp
fbstp
jg
fldl
add
fstp
pop
icebp
mov
xor
jge
test
xchg
and
shr
cmp
lret
in
pop
fisttpl
daa
jecxz
daa
ja
popf
fadds
add
xchg
xor
sti
or
bound
xor
cli
push
add
ficoms
cmp
fnstcw
jl
call
pop
loop
movsb
or
jge
add
add
and
imul
push
cwtl
lea
popa
fmuls
sub
stos
fsubrp
addl
cs
jg
xor
dec
mov
mov
call
sub
and
and
push
xchg
sbb
fsubs
aam
fisubrs
fsubrl
push
out
sub
or
inc
movsl
cltd
aas
cmp
fiadds
scas
dec
jne
fcom
cwtl
mov
sbb
sbb
sub
dec
pop
aad
mov
push
or
mov
inc
aaa
mull
enter
es
cmpsb
popa
jne
xor
or
xor
jl
in
out
push
mov
cld
addr16
out
pop
outsb
dec
bound
jne
and
xchg
adc
pcmpgtb
mov
push
dec
pop
inc
aad
adc
mov
add
inc
or
xor
fisttps
push
adc
mov
or
jmp
aas
xchg
aam
enter
or
popf
loop
insb
repnz
pop
xchg
xchg
sahf
push
sub
mov
adc
push
pop
push
cmp
stc
mov
jns
inc
pop
je
adc
jb
dec
push
in
pushf
xchg
cltd
mov
scas
imul
dec
sbb
push
sbb
jl
add
mov
imul
xchg
cwtl
js
dec
inc
stc
sbb
sub
add
mov
xchg
jns
add
loopne
xor
mov
pop
ss
pusha
pop
push
cmp
and
enter
inc
dec
xor
int3
mov
cld
pop
leave
mov
xchg
cmp
fnstcw
mov
pop
notb
cmpl
inc
mov
inc
lret
cltd
sahf
dec
mov
cltd
and
pop
sahf
sbb
test
idiv
xor
subb
fwait
mov
and
and
bound
xchg
insb
jno
bound
rol
lods
mov
xor
nop
cwtl
roll
adc
inc
xor
pop
daa
stos
xor
scas
add
pop
dec
mov
push
push
loopne
sbb
movsl
popf
popa
into
fbld
in
dec
xchg
and
popa
pop
sub
sbb
jge
xor
push
and
mov
stos
sahf
lods
loop
pusha
sub
jo
andl
or
jge
xlat
jecxz
les
jbe
inc
xor
negl
cmp
fs
cmpsl
sbbl
add
ja
mov
in
fsts
ljmp
fdivs
pop
es
cmp
mov
mov
fisttpl
sbb
lcall
pop
cmpsb
sbb
pop
dec
adc
xor
out
add
and
rolb
push
mov
cmpsl
mov
fstp
ret
in
jle
jnp
fisubrl
cld
add
shrb
dec
sahf
dec
jmp
sub
push
mov
lea
enter
or
into
dec
push
and
aad
dec
mov
mov
xor
mov
jb
pop
out
push
not
mov
jb
pop
mov
cmc
cmp
jmp
xor
sub
imul
pop
insl
and
scas
lock
lods
add
hlt
or
jge
cmp
sub
pop
add
cmpsl
sub
adc
cmp
imul
adc
test
roll
sub
xchg
pop
pop
sbb
xor
int3
mov
and
cmp
cmp
lods
sbb
loopne
inc
andb
enter
out
sbb
dec
lahf
pusha
dec
rorl
jnp
inc
hlt
mov
inc
insl
cmp
add
jo
lret
test
push
out
inc
imul
pop
jne
test
add
add
lret
pop
push
sbb
sub
in
jp
enter
es
jg
imulb
pop
pop
push
xchg
dec
mov
fadds
jns
mov
aad
push
bound
fisttps
inc
fnsave
jns
push
stc
aam
mov
jne
mov
imul
mov
sbb
stos
xchg
and
jb
push
add
adc
rclb
enter
pop
pushf
dec
fsubs
bound
out
sbb
jne
sbb
or
cmc
or
fisttpll
repnz
xor
stos
inc
fs
mov
jp
cmp
push
sub
lods
shr
xchg
dec
stc
mov
into
mov
dec
sub
sub
lods
push
cmp
in
inc
cmp
mov
fcmovnb
insl
add
cld
ret
stos
inc
out
push
data16
into
xchg
or
sbb
pop
ljmp
xchg
and
outsb
repz
xor
jge
dec
jle
notb
mov
incb
sarl
sub
push
pop
pop
jno
dec
jmp
sbb
loop
repnz
mov
push
inc
jne
or
push
or
or
test
movsl
jno
bound
cltd
clc
lea
out
push
insl
aam
push
adc
js
or
mov
clc
jns
pop
lods
in
test
push
fmull
mov
inc
push
inc
jae
fidivs
and
ljmp
cmp
and
xchg
mov
mov
repnz
jnp
jbe
out
xlat
sbb
inc
mov
ss
add
les
lds
or
std
dec
push
test
imul
cli
mov
mov
adc
xchg
andb
xor
sbb
ret
addr16
xchg
jne
sbb
mov
mov
xrelease
mov
bnd
js
dec
add
xchg
lea
insl
cmp
inc
fcom
jno
test
xor
sbb
mov
inc
subb
mov
lods
xor
xor
push
inc
mov
out
dec
xchg
rolb
lods
lret
dec
mov
xchg
cmp
testl
insb
cmp
aad
leave
mov
push
icebp
lods
cmpsb
aad
or
add
ljmp
jmp
dec
jne
mov
push
out
jno
mov
shl
xchg
andb
les
cli
jb
add
pop
xlat
jns
push
hlt
dec
inc
ss
or
lea
push
lods
outsb
jnp
bound
mov
or
outsb
inc
sub
out
pop
arpl
ja
test
push
xchg
sub
rcrl
push
nop
pop
lret
sub
shll
push
je
cmp
sbb
push
inc
sbb
add
add
aaa
mov
mov
cmp
stos
loopne
aad
test
insb
lea
xchg
push
fsubs
shll
or
roll
in
insl
pusha
stos
fcompl
sub
xlat
cld
jnp
push
jne
xchg
lret
pop
test
je
xor
mov
jns
ror
adc
mov
clc
aad
popa
mov
sub
cmpsl
hlt
adc
add
inc
ja
pop
out
xchg
lea
jl
push
xlat
push
jno
mov
adc
lods
loopne
sbb
dec
add
mov
sub
jecxz
cltd
push
or
repnz
cmp
fcmovbe
daa
jo
mov
inc
out
adc
ror
mov
sti
sub
sti
mov
test
cvtps2pi
pop
in
fcomps
push
orl
fsubl
out
xchg
pop
cmc
cli
adc
sbb
test
shl
push
pushf
mov
adcb
daa
scas
pop
pop
adc
pop
add
shr
push
inc
mov
rclb
inc
mov
mov
in
outsb
push
rorb
xor
in
dec
mov
xchg
subl
push
cld
inc
sbb
test
shlb
out
addr16
addr16
dec
hlt
xchg
mov
mov
lds
mov
jb
cwtl
xchg
fistpll
mov
nop
ljmp
scas
dec
sbb
mov
ret
movsl
add
arpl
shll
mov
out
push
stc
imul
mov
lret
pop
and
inc
jp
and
add
nop
popa
outsb
mov
mov
dec
cmp
add
mov
pop
dec
adc
cmp
push
insb
das
sub
push
int3
jecxz
clc
call
inc
loope
sbb
test
push
adc
sahf
add
insl
push
mov
out
ja
stos
cwtl
or
mov
bnd
push
add
inc
testb
movsl
push
pop
mov
aad
es
cmp
jne
das
xor
inc
and
xor
mov
mov
and
pop
adc
cmp
push
cmp
jge
int
mov
fiaddl
xchg
cwtl
mov
sbb
das
aaa
push
mov
mov
mov
cmp
in
out
loopne
jns
andb
stos
lahf
ss
and
xor
xchg
sub
mov
push
imul
aam
test
movb
jo
sahf
sbb
or
divb
fnstcw
mul
xchg
jne
jge
dec
inc
mov
and
sbb
push
lret
int3
repnz
xchg
into
and
stc
cmpsl
fldenv
int3
movsb
gs
lret
mov
rcll
aas
xlat
inc
aad
push
jp
push
int
mov
popa
loop
sbbb
and
push
lahf
pushf
fxch
sub
ds
mov
ror
test
cmp
out
imul
cmc
cmp
mov
mov
insb
mov
int
cli
xchg
sub
ret
mov
sub
jmp
gs
pop
sub
je
fsubr
xor
in
rorb
outsl
inc
test
imulb
sub
aaa
adc
sub
mov
shrd
mov
sahf
loop
lods
enter
shrb
sbb
cmp
mov
mov
insl
fyl2x
mov
fxtract
ja
inc
sarl
pop
push
xor
jecxz
repz
sub
inc
pop
push
cmp
shrb
jp
mov
fcoms
aam
decb
or
ja
mov
inc
and
or
mov
cltd
loope
adc
mov
lcall
xlat
hlt
add
inc
fsubs
or
ss
ficoms
repnz
xchg
aad
daa
pop
fdivp
pushf
xor
sub
xor
ljmp
mov
jne
jne
jae
addr16
pushf
pop
lcall
cmp
mov
mov
cwtl
add
out
push
into
ret
lds
push
cli
aad
adc
pop
and
inc
dec
jle
pop
ss
mov
movsl
jp
xchg
sub
mov
imul
arpl
lods
mov
pop
dec
adc
stc
mov
push
inc
out
dec
imul
faddl
xchg
int3
pop
push
inc
mov
test
andb
add
xchg
pop
hlt
jl
call
rolb
adc
pop
loop
jmp
mov
inc
jbe
ret
popf
mov
scas
clc
pop
adc
aam
imul
out
fdivrs
inc
pusha
xor
std
dec
and
cmp
push
out
ljmp
fwait
shlb
testl
jmp
push
jge
lret
aaa
mov
pop
add
lock
cmpsb
in
and
adcb
adc
clc
pop
loope
push
cmc
xchg
cld
je
iret
fidivs
test
imul
aam
mov
jge
dec
js
xchg
mov
cli
sub
dec
es
push
rolb
xchg
int3
je
fidivrl
fldl
stos
or
xchg
xchg
sbbb
imulb
sub
jl
fiadds
push
xchg
push
mov
rep
pop
xchg
shrb
push
je
add
ss
iret
push
arpl
loop
jbe
push
push
fs
adc
sub
xor
add
insl
cli
cwtl
xchg
mov
adc
jecxz
or
imul
ret
pop
bnd
sub
mov
cmp
les
sbb
add
andb
jb
popf
inc
cmp
repz
sbb
adc
popa
jbe
cli
fcmovne
cld
lcall
sbb
xor
xchg
inc
sub
push
sbb
dec
test
inc
and
jb
repz
jbe
mov
out
jnp,pn
sub
fcmovnb
mov
mov
cmp
inc
setae
clc
xor
popa
cmp
sub
pop
sub
ja
push
pop
inc
ret
es
in
lahf
leave
out
mov
rcl
fdivp
loope
dec
and
adc
ljmp
or
mov
mov
es
cmpsb
push
push
imul
pop
add
cmpsb
xor
dec
mov
fs
test
test
rorl
testb
out
jne
sbb
adc
adc
inc
ss
rclb
sahf
mov
in
lsl
mov
mov
adc
lods
fisttpl
mov
adc
cmp
shl
push
lcall
xchg
sahf
mov
inc
cmp
cmpsb
mov
dec
jecxz
jno
cmp
or
push
sbb
loopne
xorb
aam
mov
mov
mov
repz
and
subl
out
mov
inc
xchg
test
add
push
adcb
cmp
std
push
loopne
xchg
lcall
sbb
sub
stc
sbb
jno
lods
out
inc
loope
cmpsl
icebp
and
stc
adc
mov
ja
sti
or
sub
test
mov
lock
inc
add
sbb
adc
sbb
je
sbb
xor
rolb
ljmp
dec
lea
ret
adc
adc
pop
cmp
adc
inc
jb
mov
shlb
sub
cmc
vpshlq
add
inc
shlb
and
mov
js
jae
cmp
adc
jg
mov
sahf
mov
add
push
dec
mov
out
fiadds
das
out
fs
xor
arpl
stos
shrb
push
dec
adc
or
cmp
es
or
mov
push
push
jno
sahf
fsubr
aaa
test
outsl
insl
addl
outsb
cmpsl
and
mov
sub
mov
mov
popa
jbe
or
adc
fstps
lret
sub
in
aas
daa
or
mov
sub
out
pop
sub
lcall
mov
lea
mov
cmpb
lret
mov
arpl
mov
test
leave
adc
pop
pusha
and
or
mov
pop
sub
dec
aaa
jo
out
push
xchg
mov
sbb
mov
lods
pushf
push
test
icebp
fpatan
push
sbb
pop
jnp
ljmp
mov
mov
xchg
inc
cwtl
xor
sar
sub
ljmp
sub
aam
imul
movsl
stos
sub
mov
divl
mov
and
xor
ror
add
arpl
jmp
mov
and
test
pop
jmp
ret
lods
xor
pusha
jg
in
aas
inc
subl
xor
jo
jle
std
xchg
cmp
bound
adc
clc
sbb
ret
add
pushf
mov
xor
scas
cmp
xchg
push
aad
mov
mov
aaa
insl
xchg
adc
add
mov
andl
jp
mov
lods
call
and
push
stc
dec
cld
sbb
adc
dec
test
sbb
mov
cmp
popa
sahf
mov
or
mov
getsec
sbb
addr16
rorb
lds
je
push
loopne
sbb
sbb
xor
pusha
scas
mov
mov
inc
sub
adc
or
mov
loopne
outsl
addr16
mov
adc
inc
ja
pop
movsl
pop
xchg
ja
loope
in
push
mov
jns
pushf
push
pop
cmc
fisubs
fsubp
xchg
cmp
mov
fs
movsl
bnd
fiadds
dec
pusha
xchg
out
pop
inc
or
pushf
dec
lods
mov
fcmovnu
push
lods
int3
sbb
inc
sarb
mov
lods
bnd
emms
lods
and
jle
sub
fwait
pop
cmpsb
mov
subb
push
gs
sti
stos
repnz
push
and
xor
rcrb
xor
sub
pop
out
mov
adc
mov
mov
stc
xchg
jle
ret
mov
bnd
mov
add
mov
jno
test
loopne
pop
and
shlb
or
mov
aaa
mov
cmpsl
mov
mov
insl
push
mov
daa
mov
pop
or
lret
lock
sbb
enter
dec
call
mov
lret
lods
sub
iret
inc
enter
pop
or
add
lret
pop
mov
data16
sub
xchg
pop
loop
shll
repz
mov
lea
dec
mov
fdivs
mov
stos
mov
pandn
cmp
or
xchg
and
out
adc
stos
ret
mov
pop
jecxz
cmpb
mov
icebp
push
mov
ljmp
push
test
dec
fmuls
pop
enter
ds
push
das
das
jne
add
xchg
xchg
mov
adc
adc
adc
mov
mov
repz
dec
fadd
lgs
jne
subl
clc
push
mov
in
test
adc
pushf
sbb
icebp
cmpsl
jns
ret
jge
jl
mov
add
mov
mov
in
and
pushf
cli
lahf
sbb
fcoml
ret
mov
cmp
jmp
out
pop
lret
mov
dec
mov
xor
pusha
dec
stos
mov
pop
imul
aaa
mov
xorl
add
cld
cltd
int3
aad
testb
cmpsb
cmp
mov
xor
sbb
cld
sub
les
pop
out
xchg
push
xor
test
jno
leave
cmp
fs
movsb
je
jmp
ds
movsb
mov
push
mov
jns
inc
test
cmc
mov
lcall
jne
cmc
insl
ja
sbbb
cmp
inc
xchg
sbb
pop
movsb
fwait
or
out
stc
mov
sbb
out
add
pop
fbld
ret
jl
pop
aaa
aaa
clc
xor
jmp
jb
sbbb
jo
lea
inc
int3
rclb
test
dec
dec
les
or
mov
adc
js
pop
add
push
inc
xlat
jmp
pop
shlb
mov
scas
test
mov
or
aaa
inc
mov
sbb
pop
mov
movsb
adc
push
ljmp
and
loopne
dec
sbb
insl
mov
adc
mov
insl
addb
mov
adc
bound
dec
sbb
enter
dec
loopne
negl
insl
lea
jge
inc
outsl
jge
xchg
and
sub
xlat
cmp
js
mov
sbb
notb
xchg
fcoms
lds
add
lahf
lods
test
in
mov
ljmp
sub
lret
inc
mov
sub
sbb
aad
xchg
andb
es
mov
in
dec
cld
sbb
or
mov
or
jne
stos
xchg
sbb
and
and
xchg
mov
sti
or
sbb
mov
add
je
test
cmp
inc
dec
jmp
movsl
mov
pop
xorl
sbb
or
mov
js
fildll
popa
jnp
mov
jge
mov
add
fisttpl
in
add
inc
dec
sub
xor
insb
xor
jmp
add
pop
or
cmp
stc
std
inc
mov
in
xor
bound
mov
icebp
fisttpl
mov
adc
pop
xor
mov
cmp
sbb
hlt
rorb
int3
cmp
icebp
cmp
xor
dec
adc
push
mov
push
movsb
int
dec
push
dec
sbb
cmp
arpl
lcall
mov
xchg
mov
fbld
add
cmp
push
and
sarb
fs
sub
and
lea
rolb
fsubl
lea
movsl
cwtl
mov
xor
aas
subb
mov
sub
xor
jge
xchg
out
out
push
dec
xchg
aam
dec
dec
ss
mov
or
jbe
inc
mov
ffree
gs
testb
rclb
cmpsl
das
jp
mov
scas
lret
loop
xlat
push
out
sbb
cmp
mov
adc
mov
test
and
push
xchg
sub
pop
xor
sti
cwtl
mov
xchg
cltd
jo
int3
adc
sub
cmp
cmp
and
stc
pop
in
cld
sbb
jge
pop
andl
ds
jmp
std
lock
or
inc
mov
daa
cmp
retw
sarl
cltd
jecxz
mov
inc
paddq
push
mov
cli
push
adc
aad
cmp
gs
fcmovnu
fdivs
ss
mov
nop
push
fadd
push
jl
xor
lods
push
pop
cmpsb
out
sbb
jns
shlb
xchg
cmp
fildll
int
sub
sub
jbe
jbe
inc
out
loope
xchg
pop
pop
push
outsb
mov
xchg
mov
adc
push
dec
movsl
and
or
fs
insb
clc
leave
fdivp
xchg
jmp
je
mov
ret
adc
imul
mov
cmpl
loop
je
les
pop
hlt
mov
cld
or
clc
repz
adc
test
and
push
les
out
inc
outsl
mov
incb
sbb
aas
int3
mov
ds
dec
notb
popl
dec
mov
mov
jg
out
mov
sbb
mov
orb
sbb
push
popa
fidivrl
les
push
aad
cmp
aaa
dec
std
push
or
inc
in
test
jo
sub
jae
lds
sbb
fucomi
movsb
pop
addr16
out
rorl
xor
cltd
in
fldl
outsl
pop
outsb
cltd
cmc
arpl
sub
cmpsl
push
jae
push
xchg
pop
push
int3
or
pushf
xchg
bound
jmp
and
in
loopne
mov
scas
repnz
fimuls
cmpps
cld
add
cmp
jecxz
adc
sub
mov
xor
adcb
push
xchg
xor
in
mov
sbb
inc
pop
adc
pop
mov
cs
mov
bound
movsl
jbe
adc
mov
rcll
push
cwtl
rorb
xlat
cmpsl
sub
pop
mov
mov
enter
jl
adc
lret
inc
or
xor
fmull
lcall
mov
pop
out
sbb
cltd
iret
daa
xchg
movsb
out
push
add
push
adc
jl
pusha
mov
pop
out
push
inc
xor
sub
adc
ljmp
sahf
xor
lcall
mov
bsf
mov
mov
lcall
mov
sub
push
xchg
insl
repnz
sbb
jnp
test
cs
cmp
test
loopne
sub
cmpsb
sbb
cld
sbb
ds
xchg
ret
int3
and
mov
cmp
push
cltd
lret
scas
cmp
imulb
sbb
or
shll
loop
lcall
and
mov
enter
pop
sahf
test
cltd
clc
mov
fidivl
push
cs
cmpb
sahf
scas
fldcw
xlat
sub
es
inc
aas
arpl
int3
add
mov
cmp
mov
out
adc
inc
mov
and
sub
lret
mov
pop
or
lahf
stos
dec
jp
idivb
or
push
icebp
fs
divb
xchg
xorb
inc
inc
mov
subl
add
push
sub
mov
cmp
loop
add
call
dec
icebp
ror
lock
filds
mov
push
pop
or
mov
sub
insb
lret
fidivrl
mov
push
cmp
fwait
sub
cmpsl
push
xchg
aam
daa
inc
fldln2
push
popf
mov
imul
add
jns
loopne
aam
leave
insl
push
cmp
repz
cmc
in
inc
decb
inc
aaa
inc
in
xor
imul
pop
jp
push
aam
leave
xchg
fldenv
in
jbe
mov
xor
adc
inc
or
xor
repz
sub
sub
mov
push
add
mov
cld
fs
or
jl
stos
movsl
mov
push
insl
aas
mov
mov
mov
xchg
push
mov
add
out
mov
dec
movsl
pop
mov
movsb
cmp
jg
mov
jbe
roll
and
and
sbb
je
add
add
cmp
add
orb
pop
cmp
sub
das
scas
cli
jge
out
pop
popa
mov
xchg
lock
mov
fisttps
fidivs
fs
or
jecxz
cwtl
add
mov
lods
lods
mov
stc
pop
aas
jmp
pop
xchg
cmovnp
gs
and
aad
inc
sub
sahf
ret
lret
out
pop
repz
mov
mov
push
scas
mov
mov
rclb
mov
daa
movsl
xchg
pop
xor
dec
jb
in
addb
scas
lcall
sti
ja,pn
cmp
add
imul
and
dec
mov
lret
or
push
add
popa
insl
pusha
lret
mov
pop
lahf
xchg
shr
fs
sarb
and
xor
fadd
fs
std
inc
lret
in
fisttpll
mov
movsl
ret
mov
ret
push
divb
mov
notb
ret
inc
arpl
repnz
sub
pusha
out
fnstenv
sub
gs
dec
mov
jmp
jb
aaa
scas
jns
xor
push
loopne
shll
and
push
or
xlat
lret
test
bound
dec
scas
lods
daa
mov
inc
add
pop
sub
out
push
dec
push
out
jo
xor
push
dec
scas
adc
mov
xchg
fldcw
jns
xchg
jecxz
stc
push
and
das
or
adc
aas
jne
and
push
xlat
sahf
jle
mov
mov
ja
inc
shll
stos
cld
adc
push
je
cmpsb
les
mov
xchg
push
enter
dec
in
adc
sub
jle
dec
pop
push
adc
ret
nop
or
mov
jne
jb
jo
inc
mov
xor
stos
lahf
or
iret
pop
cmp
jecxz
xchg
in
imul
aaa
std
mov
lar
jle
nop
stos
shl
cwtl
dec
pop
pop
jp
mov
sbbl
add
fidivs
mov
insb
loopne
cmpb
cwtl
mov
jl
aaa
dec
xchg
stc
sub
add
dec
adc
jmp
loop
sbbb
into
add
ja
iret
insl
or
cmp
movsl
xchg
call
cmp
outsl
cmpsb
enter
outsb
mov
or
add
leave
xor
inc
cmp
fsubl
lods
and
shrl
xor
add
out
push
pop
inc
pop
aas
stos
jae
and
subb
mov
or
xchg
push
or
ror
mov
imul
inc
cmp
or
repz
cmp
out
and
xchg
or
mov
out
ret
or
adc
stc
jge
call
scas
daa
fwait
push
shlb
cmp
xor
jle
hlt
push
sbb
inc
inc
adc
adc
lahf
fcomps
and
ret
repz
ss
cli
push
pop
add
add
leave
mov
jp
xor
jbe
mov
ss
out
repnz
mov
aas
inc
mov
add
adc
xchg
jo
jnp
pop
sub
pop
ljmp
mov
dec
push
inc
inc
push
xchg
mov
push
pushf
and
mov
test
sub
mov
mov
cmp
jbe
nop
scas
and
je
adc
roll
add
scas
xlat
inc
clc
add
push
xor
scas
addl
mov
rolb
xchg
pop
je
adc
or
js
movsl
into
push
mov
inc
ret
in
gs
and
cmpsl
xor
pop
movsl
mov
test
cmp
in
and
jge
loope
int3
push
mov
pop
sarl
jmp
inc
jle
mov
push
out
cmp
xchg
xchg
inc
bound
inc
xchg
add
mov
outsb
xchg
mov
movsl
fiadds
push
cmp
xor
inc
pushf
xor
add
push
insb
or
cmp
inc
pop
mov
repnz
inc
push
cmp
sub
popa
loope
mov
insl
xchg
cld
lods
and
orb
leave
mov
mov
fisubrl
es
pop
mov
inc
adcb
dec
dec
push
sbb
sti
and
sbb
add
fs
rol
xor
adc
jbe
xchg
sub
sarl
in
dec
pop
or
movsl
cmp
addr16
gs
and
out
lds
out
jo
cwtl
je
mov
push
or
cmp
cmpsl
jbe
xlat
dec
orb
mov
mov
inc
cmp
lahf
xchg
or
mov
xchg
push
movl
int
or
ja
mov
and
push
ja
add
lret
shll
add
pop
mov
mov
cmpsl
inc
les
inc
sub
inc
aam
hlt
mov
cmp
xor
sbb
gs
mov
adc
popf
inc
or
jb
or
push
cld
nop
dec
fldenv
test
movl
outsl
xor
jb
fistpl
jecxz
dec
ja
lahf
iret
pop
push
int
pop
push
bound
andl
and
pop
test
jns
insb
mov
dec
adc
push
sarb
add
xor
jmp
jmp
and
sub
insb
std
sub
out
jg
inc
mov
test
hlt
mov
and
stos
jnp
faddl
cmp
es
icebp
push
in
in
les
push
adc
inc
clc
sub
cmpsl
stos
pusha
outsl
cmp
incl
cwtl
fdivl
out
mov
push
jp
xor
xchg
and
mov
sbb
fimull
cmp
cli
hlt
fbld
or
popa
cwtl
push
jg
and
and
repz
in
add
test
mov
inc
sbb
fcomps
ja
jl
mov
das
mov
shlb
pushf
mov
arpl
lods
loopne
dec
sbb
popf
stos
test
xor
cmpsb
loop
shrl
mov
mov
jae
ljmp
fmull
xor
loop
xchg
or
out
xor
sbb
js
lcall
jg
inc
ja
or
imul
lods
inc
jp
sub
bound
cltd
das
cmp
roll
jecxz
push
cmp
hlt
inc
push
adc
or
mov
dec
movsb
xchg
xorps
out
mov
mov
nop
pop
mov
mov
sub
mov
or
or
or
inc
or
nop
lods
pop
push
popf
or
pop
dec
fcoml
pushf
jge
les
dec
jl
bound
mov
mov
enter
out
jo
lcall
cmpsl
jns
inc
subb
jecxz
jp
sbb
icebp
filds
andb
aad
jo
add
xchg
fistps
insb
inc
cmp
or
mov
shrb
pop
push
sub
mov
sub
pop
iret
xor
out
mov
mov
adc
je
sbb
repnz
mov
sahf
or
fdivrl
push
jae
sub
out
inc
dec
jae
push
adc
nop
adc
dec
ret
loope
addb
fldenv
dec
subb
mov
jg
subb
jo
bound
inc
int
scas
and
push
popa
inc
adc
sbb
xor
pop
js
mov
or
bound
mov
dec
dec
inc
ljmp
sahf
shl
or
mov
fidivs
sub
sub
mov
mov
and
jl
sti
cli
sar
adc
jne
push
outsb
adc
lods
jns
sahf
iret
fists
popa
gs
shlb
sahf
xchg
push
cmpl
mov
add
jmp
dec
fstp
sub
fmuls
repz
mov
pop
pusha
mov
dec
xorl
lods
movsl
loop
xchg
sbb
cmpsb
xor
dec
jl
popa
mov
sahf
xor
dec
rclb
scas
loopne
cmp
cmp
clc
in
shl
pop
dec
movsl
add
mov
cmp
mov
xor
or
push
ss
jo
rcl
and
pop
cwtl
add
push
sbb
cmc
sbb
jbe
adc
in
je
push
inc
das
sbb
arpl
jg
insb
in
xchg
push
aaa
pop
mov
mov
lahf
xchg
aaa
fadds
lahf
pop
stc
sarl
imul
push
bnd
and
fdivrl
jne
dec
hlt
shll
mov
cmpsb
loop
icebp
adc
dec
jmp
fistpl
dec
lock
repnz
cmp
and
fsubs
enter
mov
or
xchg
push
mov
jl
popa
jnp
push
xchg
in
xchg
cld
jno
push
sub
sbb
mov
push
jecxz
inc
aaa
outsb
lcall
sbb
xchg
jbe
or
mov
add
sub
movl
xchg
pop
mov
xchg
scas
popa
mov
stos
out
fwait
loopne
inc
lods
add
test
rclb
rclb
add
mov
pop
mov
insb
aas
inc
bound
inc
add
sub
arpl
push
movsb
andb
repnz
sbb
js
push
ret
icebp
lock
mov
mov
pop
push
jns
jmp
jb
lods
popf
rolb
imul
mov
xchg
cmp
xorl
shrb
push
lods
sahf
xor
jp
mov
lcall
ljmp
and
and
mov
cmpsl
xchg
xor
leave
scas
aad
std
cmp
cmc
fldcw
inc
test
stos
add
gs
push
clc
test
out
sahf
mov
mov
mov
cmp
mov
xchg
mov
mov
jge
lahf
mov
push
sbb
mov
jmp
movsl
test
push
jns
movsl
fistpl
mov
popf
xchg
stos
test
popf
jp
dec
in
dec
mov
dec
and
daa
rolb
pushf
sub
cmc
js
or
xchg
lock
and
mov
pop
mov
xchg
in
sbb
mov
lods
int3
and
or
push
jo
inc
in
adc
gs
rorb
jo
mov
or
add
add
pop
stos
popl
adc
add
xchg
vshufpd
pop
pop
mov
cmp
jae
ss
ss
or
xchg
cmp
in
icebp
mov
loop
fiadds
arpl
mov
mov
mov
dec
and
mov
scas
push
mov
mov
mov
imul
out
dec
test
call
cmp
xor
clc
mov
jae
push
call
call
movsl
out
mov
cmpsl
leave
pushf
stos
test
mov
xchg
jne
xchg
cmpl
mov
mov
xor
mov
pop
pushl
cmp
and
ja
sbb
add
xor
push
outsb
mov
inc
movsb
mov
ret
movsb
ret
inc
shlb
push
xor
push
psubusw
push
mov
cmp
in
or
inc
ret
mov
repz
cmp
push
xor
mov
arpl
stos
sbb
fcmovbe
sub
dec
sti
ror
mov
add
mov
and
mov
shll
xchg
ret
inc
mov
jle
orl
loop
iret
or
cmp
adcb
in
lea
data16
and
sbb
das
loopne
adc
xor
das
add
scas
or
push
idivb
lods
insb
add
sub
popa
je
push
adc
jmp
xchg
dec
inc
inc
hlt
lea
pusha
popa
dec
adc
icebp
and
test
out
imul
cli
cmpsb
mov
pop
or
mov
in
imul
insb
inc
mov
add
inc
dec
mov
bound
pop
xor
js
mov
lret
ret
inc
add
lods
fstl
fwait
mov
in
out
movups
test
mov
fidivrs
mov
lret
cmp
pop
adc
adc
orb
clc
pusha
jle
cld
and
push
xor
and
adc
or
aaa
outsl
clc
andl
dec
call
loope
inc
mov
lahf
insb
ja
dec
dec
faddl
xlat
aaa
arpl
addb
orl
adc
xor
push
mov
fwait
jecxz
hlt
test
sub
lock
dec
cmc
dec
jne
out
sub
or
out
adc
xor
mov
and
repz
push
mov
std
jnp
outsb
dec
dec
fdivp
sbb
pop
inc
pop
ljmp
ret
fcomps
movsb
mov
rorb
add
jb
aas
cld
ret
addr16
inc
cwtl
cwtl
push
jl
push
or
mov
in
push
and
xchg
cmpsl
lock
movsl
ljmp
inc
idivb
es
xor
xor
mov
inc
inc
push
xchg
mov
jne
repz
icebp
jns
gs
dec
pop
mov
sub
stos
out
jmp
repnz
mov
xchg
imul
lds
in
pop
xorl
fisttps
sbb
cmc
insb
iret
pop
popf
cmp
and
xor
or
fstl
push
out
cwtl
dec
xor
or
dec
or
arpl
pop
jp
ret
jnp
pop
popf
dec
ficoml
sbb
test
mov
sub
adc
test
cmp
xor
jg
loope
subb
mov
jp
cmc
bndldx
inc
cmp
jnp
iret
xchg
xor
jb
cs
add
xor
outsb
ret
hlt
sbb
cli
push
out
rcll
loop
pop
add
icebp
movsb
pop
lock
mov
push
pop
mov
mov
int3
mov
jecxz
lea
imull
jle
sbb
mov
vmread
adc
or
xchg
int
sbb
aaa
or
les
lret
cmp
repnz
sbb
inc
mov
jae
int3
roll
hlt
cmp
mov
or
js
pop
fimuls
pop
inc
ret
inc
outsb
jno
jno
inc
shlb
jne
dec
mov
leave
in
sub
lcall
test
fcoms
jmp
pop
call
iret
outsl
mov
and
mov
jl
and
fiaddl
js
out
fsubrp
stos
enter
sbb
or
repnz
fcompl
jnp
xor
jns
mov
lcall
push
loop
xchg
xor
and
cmp
cmpl
ret
in
pop
jmp
std
jmp
xor
pusha
sub
fidivrs
daa
xchg
movsl
nop
add
fnsave
jecxz
mov
test
subl
push
or
clc
add
xlat
cmpsb
notb
xchg
ljmp
mov
xchg
repnz
popf
idivl
add
adc
jecxz
jne
pop
pop
gs
or
mov
lods
gs
sahf
push
in
push
sti
add
enter
ja
or
cltd
repz
iret
mov
negb
nop
into
pop
dec
cmp
scas
mov
cmpsb
arpl
xor
test
sahf
addb
clc
arpl
pop
mov
gs
jecxz
pop
in
scas
pusha
in
dec
xor
rol
lea
loop
popa
cmp
sbb
fiadds
pop
xorl
repnz
cmp
mov
mov
in
inc
mov
stc
mov
je
cmpl
dec
mov
and
dec
sbb
insb
lret
cmpsb
push
stos
pop
sub
mov
aad
insl
xchg
pop
inc
dec
sub
adc
or
jbe
and
in
out
mov
movsl
imul
call
fwait
shlb
lahf
push
xor
ficomps
xchg
das
mov
pusha
xor
inc
mov
push
shlb
mov
or
pop
cmpsb
sub
mov
push
add
jns
adc
nop
cmp
xor
movsb
mov
inc
pop
mov
cmpsb
cs
ljmp
mov
das
prefetch
or
push
jle
and
mov
sbb
and
sbb
fdiv
push
data16
mov
roll
imul
pop
incl
push
inc
rclb
scas
xchg
dec
push
out
push
push
or
mov
mov
lea
stos
repnz
and
dec
ffree
dec
pop
pop
fdivp
xchg
lods
jno
decb
xor
int
sub
sub
jmp
adc
cmp
data16
jb
cld
std
ja
push
adc
jns
fisubrs
xchg
mov
dec
dec
mov
shll
addr16
dec
or
lahf
sbb
addr16
sti
sarb
loope
dec
mov
add
xor
mov
xor
dec
cmpsl
repz
mov
mov
fisttpl
idiv
add
in
cmpb
les
push
push
dec
inc
insb
xor
and
add
inc
xchg
adc
and
dec
adc
pop
cmpsl
add
inc
rclb
movsl
addr16
lock
cmp
arpl
push
dec
push
mov
aas
sahf
cmp
lret
nop
stc
bound
inc
pop
xchg
xlat
iret
jne
inc
fistps
sbb
out
clc
cmp
leave
test
fwait
ljmp
lds
rol
or
dec
mov
inc
ds
jnp
daa
jnp
lods
cmc
adc
lahf
adc
xchg
adc
sub
sbb
lods
xor
scas
fldenv
jecxz
out
push
inc
and
or
out
sbb
push
sbb
mov
mov
lea
dec
stc
pusha
push
iret
ret
add
adc
in
cs
shrl
mov
xchg
repnz
in
pop
dec
stc
imul
repz
call
mov
xlat
dec
xchg
xor
inc
jo
pop
pusha
inc
movsl
js
icebp
pop
cmpsl
jecxz
push
mov
in
test
out
cli
cmc
pop
fwait
or
cmp
cmp
lret
icebp
jmp
xchg
lods
sub
sbb
dec
popf
out
xchg
add
push
push
adc
out
mov
repnz
jecxz
xor
push
test
sub
jp
xlat
in
push
aas
push
or
in
test
jge
push
add
xchg
mov
mov
jnp
pop
in
xchg
decb
and
pop
mov
pop
gs
scas
filds
daa
insb
cmp
fincstp
fadds
scas
gs
jae
hlt
mov
fnstcw
sti
xchg
int3
inc
fiaddl
pop
mov
pop
add
ljmp
insb
xor
sbb
mov
adc
adc
cmp
mov
or
adc
ret
mov
out
cmp
popf
add
inc
dec
xor
test
jnp
push
ds
push
pop
out
mov
mov
xchg
cltd
fstl
ljmp
jae
outsl
test
add
test
shl
fmull
xlat
popa
dec
shlb
scas
add
daa
repz
xor
insl
mov
or
mov
mov
jnp
repnz
add
imul
or
jge
add
inc
loope
mov
andb
out
pushf
mov
sub
shrl
cltd
push
popa
and
loopne
or
and
add
mov
rcll
mov
mov
les
rolb
inc
or
xchg
aad
add
fsubl
in
jne
sbb
testb
jbe
lods
in
das
pop
out
pop
pop
jl
je
enter
in
into
js
cmp
or
mov
inc
out
sub
push
or
cld
xor
aas
mov
or
inc
push
jge
mov
das
add
insl
hlt
in
fwait
mov
mov
push
js
jecxz
sub
jg
inc
dec
test
fst
shr
pop
xchg
repnz
sbb
jae,pn
lahf
add
mov
lahf
dec
loope
jecxz
aam
in
lock
out
jae
and
in
mov
sub
lds
mov
inc
pusha
ja
ret
dec
loope
lcall
cld
movsb
sub
icebp
pusha
adc
cltd
inc
loop
fs
fnsave
shll
ja
mov
adc
jecxz
clc
outsb
test
cld
int
aam
sub
jmp
inc
fstpt
mov
cmp
call
or
mov
ret
loopne
jmp
loop
clc
in
dec
js
adc
jl
cmp
fs
add
js
arpl
test
mov
push
lcall
adc
dec
leave
aaa
movsb
test
movq
andb
loope
imul
push
push
sbb
lea
jl
fs
or
adc
in
scas
add
mov
adc
xorl
sahf
insb
imul
int
add
or
testb
loope
popl
lds
jl
int
adc
adc
cmpsb
xor
shrl
jb
or
stc
inc
push
pop
jmp
add
jl
stos
or
mov
test
stos
cld
adc
pop
in
mov
cmpsl
nop
in
cmpl
or
xor
sarl
jne
mov
add
fnstenv
xor
dec
push
in
jmp
adc
cmp
jecxz
movsb
fmul
into
bound
ss
test
dec
int
stc
adc
int3
sbb
mov
mul
or
clc
gs
sbb
push
fidivrs
lret
outsb
imul
mov
xor
hlt
clc
mov
push
mov
cltd
test
ss
loop
and
xor
gs
icebp
or
test
mov
and
lret
data16
movsb
xchg
pop
sbb
stc
xchg
xchg
ja
lea
iret
pshufw
dec
popf
add
cmp
adc
push
test
cmp
rol
and
or
and
and
pop
call
jle
imul
leave
lret
or
aas
cs
stos
and
xchg
out
out
lods
push
jnp
icebp
sarb
mov
push
xor
ss
sbb
out
jl
lods
or
sbb
jns
das
push
pusha
push
icebp
mov
cltd
xor
das
push
xchg
mov
test
push
dec
icebp
jmp
mov
mov
push
daa
call
cmp
mov
and
xor
stos
mov
lahf
jp
pop
lret
dec
cmpsb
push
out
stos
lock
in
incl
hlt
or
dec
jecxz
xchg
mov
add
xor
into
jo
shrb
xchg
ljmp
mov
clc
fwait
jns
xchg
mov
xchg
sar
out
push
inc
repz
in
pop
aam
cmp
shll
les
cwtl
iret
stc
data16
insl
leave
js
ds
xchg
or
xor
mov
pop
and
stos
movsb
nop
shlb
push
das
lret
jne
or
inc
sbb
mov
pop
jp
push
cmp
mov
dec
xchg
jbe
or
mov
fwait
pop
or
or
fnstcw
push
lods
pop
dec
mov
sub
mov
or
test
mov
rolb
adc
jae
dec
cmp
add
jne
sub
or
xchg
mov
pop
push
pop
in
sbb
and
out
adc
pop
cmp
and
bound
test
rolb
mov
movsl
ret
sbb
xorb
dec
and
sub
pushl
fwait
cmpsb
lods
divb
fadds
and
sub
repnz
hlt
test
mov
pushl
xor
push
mov
mov
add
cmp
xchg
dec
mov
out
mov
inc
fstps
fstpl
mov
int3
adc
pop
hlt
mov
rcrl
cs
fsubr
out
push
push
adc
adc
loop
jl
sub
cwtl
sbb
ret
cmp
pop
cwtl
adc
iret
lret
xchg
in
int3
js
fwait
mov
push
xor
dec
xlat
xor
xchg
mov
sbb
scas
popf
inc
pop
idiv
mov
mov
dec
push
out
add
jge
fwait
add
imul
sar
mov
cs
daa
arpl
push
shlb
test
ja,pt
dec
jb
in
add
xchg
ret
andl
and
mov
or
scas
sbb
imul
inc
int
sti
mov
xchg
fucomp
jnp
xchg
cld
rolb
adc
push
in
and
int3
mov
mov
cmp
dec
pusha
mov
add
scas
xlat
shll
and
pop
mov
ds
jecxz
push
push
scas
fmuls
pop
xor
data16
xor
ljmp
into
shl
int
cmp
ja
mov
xchg
popf
cld
sub
fsubs
and
jmp
loopne
sub
xor
stos
repnz
inc
mov
mov
mov
xor
out
and
jbe
push
out
push
xchg
pop
hlt
xor
fwait
add
xchg
ret
mov
daa
bound
jb
dec
lea
cmpsl
jno
pop
pop
in
ss
and
stos
fsubp
cmc
and
cmp
lret
fnsave
das
jb
sub
das
sbb
or
xor
lcall
cs
stos
xchg
mov
jge
mov
fildl
and
xor
test
out
inc
testl
pop
icebp
push
cmpsb
ret
adc
out
fdivl
test
into
data16
sub
in
int3
dec
adc
jecxz
mov
cld
call
xor
out
aas
mov
push
sub
aad
pop
lock
xchg
pushf
arpl
in
mov
fldcw
into
insl
push
pop
jo
inc
push
or
sbb
sbb
mov
mov
std
sub
shlb
ret
mov
sbb
or
xchg
mul
xor
hlt
movb
push
sub
in
or
mov
push
mov
pusha
pop
movsb
pop
mov
add
adc
inc
testb
cld
cwtl
xchg
sub
negb
mov
mov
movsl
push
mov
cmp
cli
cmpsl
adc
mov
cmpsl
stos
insl
into
pop
ja
stos
mov
and
jmp
inc
mov
cli
pushf
test
cs
add
jne
cmpsl
mov
aam
bnd
cmp
add
cmpsb
leave
scas
sbb
outsb
data16
ja
add
xor
ss
xchg
mov
xor
cmc
push
in
and
jno
icebp
sti
pop
sbb
xor
mov
into
inc
push
icebp
sub
or
pushf
sahf
mov
mov
mov
sbb
test
loop
ret
sbb
cmp
in
xchg
add
xor
je
and
out
out
sub
fstps
loop
sti
jbe
adc
dec
test
mov
jae
sbb
in
nop
adc
and
pop
jg
mov
dec
mov
sbb
pushf
imul
and
jno
pop
xchg
out
fsubrl
add
cmpsb
push
int
xchg
mov
mov
sarl
dec
xlat
es
jecxz
sbb
call
daa
sub
ss
sub
jle
jmp
mov
xchg
push
xor
iret
jle
xor
repnz
push
or
mov
es
cmp
lods
jns
jg
ret
mov
mov
ds
cmp
add
imul
mov
fsubr
icebp
xchg
pushf
fcmove
cmp
cltd
and
cmp
pop
jns
daa
push
add
fcmovnu
dec
mov
in
mov
or
or
sbb
cs
cmp
fildl
andb
and
or
cmp
jl
and
sub
mov
mov
dec
xor
int
jne
xor
outsl
or
sub
std
mov
loope
ljmp
in
pop
jecxz
add
rorl
mov
enter
push
outsl
clc
rolb
add
test
mov
call
pop
lds
orl
mov
cmp
pop
pop
in
pop
ret
jg
mov
jbe
mov
cltd
push
push
add
pop
pop
cmpsl
cwtl
or
dec
leave
loopne
jge
cwtl
scas
cs
hlt
inc
lahf
or
stc
inc
xchg
in
imul
jbe
pop
mov
mov
cmc
sub
xor
leave
inc
push
arpl
repz
lea
cmpl
loopne
clc
push
mov
mov
sub
pop
inc
fsubl
sbb
ret
cld
loope
test
xor
aad
xor
push
add
in
push
aam
lea
and
in
inc
push
add
sbb
cmp
cmp
and
xchg
dec
push
add
movsb
or
popa
adc
scas
ret
pop
leave
clc
movsb
scas
les
pop
ja
rcll
and
mov
add
stos
aam
xchg
stc
shll
fstl
push
inc
adcb
push
addr16
pop
mov
push
aad
jb
mov
test
insb
xchg
cmp
adc
out
out
jbe
xor
and
xor
sbb
dec
fldenv
sbb
jecxz
rcr
mov
iretw
test
lods
mov
sbb
adc
es
sti
pop
push
lock
jmp
mov
xchg
mov
and
popa
adc
sahf
push
fsubs
out
shl
shlb
adc
sub
and
jp
add
pusha
idivl
add
xchg
push
and
roll
out
and
lods
push
and
mov
jle
mov
and
test
sbbl
in
mov
dec
loop
or
jnp
jno
fbld
xor
jno
mov
out
jl
and
rol
in
sub
push
rcrb
add
add
inc
popf
or
loop
push
cltd
stos
mov
mov
cmpsb
arpl
cli
pop
pushl
adc
and
dec
jae
data16
in
lea
nop
mov
je
jb
dec
lods
test
pop
scas
push
mov
push
dec
iret
mov
aas
mov
mov
pushw
xchg
push
dec
imul
mov
push
cli
insb
mov
xchg
mov
daa
jl
ficoml
stos
addr16
pop
jge
in
cmp
adcb
push
notl
jne
jb
jmp
nop
inc
rcll
dec
testb
imul
int3
iret
cmp
sahf
xor
xchg
push
pop
cmp
out
pusha
mov
into
inc
pop
out
jmp
ljmp
push
ljmp
jge
gs
stc
mov
mov
rorl
mov
aam
outsb
xor
jb
ja
mov
sub
movsl
xchg
icebp
xchg
sbb
sub
push
sub
shll
jp
aam
arpl
fdivl
daa
lahf
mov
dec
xor
cli
nop
inc
push
mov
repnz
loop
mov
pop
cld
std
decb
in
add
out
addr16
xchg
dec
ds
les
adc
adc
dec
jge
inc
stc
xchg
scas
fimull
lahf
add
xchg
test
mov
lods
mov
xorl
das
mov
divl
aaa
dec
js
mov
enter
out
imul
add
or
test
dec
ret
rcrb
cmp
jo
std
mov
jnp
inc
and
dec
dec
dec
dec
ljmp
pop
sti
in
xor
mov
stos
lret
or
out
aam
mov
mov
xchg
mov
lret
jg
mov
adcl
sub
mov
into
mov
pop
dec
pop
fnstenv
roll
jle
out
fcmovu
and
dec
mov
mov
dec
popa
lea
sahf
lea
out
cs
faddp
fimull
cmpsb
sahf
out
jp,pt
dec
ucomiss
cs
out
xor
mov
sti
scas
sub
es
jp
mov
loope
dec
push
in
jl
adcb
xor
add
test
nop
imul
mov
fcoms
fnstsw
aam
pop
cmpsl
cmp
pop
add
mov
bound
jge
fsts
or
imul
sarl
adc
push
jmp
out
popa
ja
outsb
jnp
nop
outsl
add
mov
addr16
divb
fdivr
pop
or
lods
cmp
mov
dec
jp
mov
aad
mov
xchg
xor
mov
mov
outsl
aam
xchg
call
pop
pop
inc
jno
push
fwait
jmp
inc
jbe
xlat
pop
mov
or
lock
scas
les
testb
push
inc
in
outsl
sub
add
test
inc
jbe
adc
std
push
mov
mov
jbe
push
test
or
mov
dec
xorl
jmp
pop
hlt
dec
ds
fs
push
es
adc
in
xor
sti
xchg
mov
mov
or
into
pop
addr16
stos
sbb
push
dec
in
mov
sub
pop
mov
dec
cmp
cmc
jo
or
xor
pop
cmpsl
or
or
or
inc
mov
sbb
push
xchg
je
cmpsb
or
mov
jns
mov
inc
pusha
jecxz,pn
sub
adc
sub
movsl
std
pop
movsl
scas
and
pop
icebp
or
mov
test
jp
xchg
mov
jns
sbb
out
ss
fs
sub
pop
repz
cld
cld
cwtl
pop
bound
jns
pop
daa
mov
fwait
mov
cmp
ds
jge
lods
js
xchg
push
xchg
push
cmp
shlb
cmp
scas
xchg
scas
or
jmp
inc
dec
pushf
mov
cwtl
push
inc
imul
mov
dec
xor
adc
pop
mov
shrl
inc
popa
test
pop
xor
push
cld
test
cmp
clc
lret
jb
push
stos
jg
jae
push
xchg
xchg
iret
sub
fiaddl
stos
lea
stc
daa
insb
repz
mov
push
push
imul
das
fstps
adc
jno
pop
cmp
in
aad
out
aaa
xchg
loope
lods
pop
jge
lahf
jp
xchg
xor
addr16
inc
pop
scas
insl
sub
js
mov
xchg
imul
pop
iret
test
std
in
cld
lock
or
imull
xchg
hlt
sbb
popa
mov
push
gs
jo
xchg
and
gs
std
jnp
jl
mov
sub
add
daa
mov
dec
std
sub
lea
inc
mov
flds
cmp
std
pop
push
xchg
xchg
pop
ljmp
stos
cmp
push
pop
pop
sub
roll
xchg
inc
jle
mov
int
shlb
mov
aas
jne
mov
fmul
cwtl
cmp
xor
ret
and
and
add
xchg
cwtl
aas
mov
mov
mov
ja
and
push
dec
push
loop
add
mov
xchg
jg
mov
cmp
lods
push
pop
inc
popf
sti
rolb
pop
xchg
jmp
pop
jno
pop
cmpsb
jno
ss
add
sub
add
pop
ficomps
int
fisubl
xor
pop
scas
cmc
insl
out
pushf
cmpsb
mov
sub
or
push
std
sub
icebp
repz
jae
xchg
cwtl
lcall
call
call
fldenv
shll
push
xchg
xlat
mov
jle
adc
mov
repnz
jno
jecxz
jne
xor
addr16
pop
adc
clc
iret
sub
add
int
jge
xchg
fs
mov
mov
fnsave
aam
fwait
aad
sbb
add
ds
cwtl
mov
ljmp
push
std
std
push
xchg
movsl
and
dec
dec
sbb
add
cmp
push
adc
inc
adc
test
or
xchg
mov
mov
push
cmp
xor
enter
pop
scas
mov
lcall
pop
xor
sbb
daa
loopne
push
movsb
sub
sub
lcall
out
jnp
cmp
insb
push
rcrb
mov
xor
test
test
push
pop
cmp
jo
xor
movsl
add
inc
mov
lock
cld
int
push
mov
cmp
add
push
xchg
mov
xchg
mov
inc
aad
or
mov
repnz
sub
js
leave
jle
movsb
jo
pop
add
pop
and
xor
shll
push
and
mov
xchg
adc
cmp
mov
jle
push
dec
dec
jle
addl
dec
loopne
sub
iret
hlt
adc
sahf
clc
push
inc
mov
enter
mov
cs
pop
jno
lcall
mov
push
lret
xchg
push
lock
cmp
cmpsl
mov
lahf
jge
in
jmp
pop
cmpl
mov
mov
xor
cmp
jge
rorl
cltd
lahf
movsb
mov
and
inc
fsubs
pop
lods
dec
adc
ret
push
inc
jne
cmp
sahf
sbb
leave
mov
loopne
lahf
dec
andb
insb
fst
dec
lock
out
stc
lcall
fstpl
cmpsb
adc
adc
aad
add
dec
insl
add
jecxz
adc
inc
jge
insl
cmp
xchg
sarb
push
fistpl
imul
mov
out
enter
das
outsl
out
rclb
add
and
arpl
movsl
pop
mov
inc
jnp
mov
sti
loopne
aas
xchg
aas
xchg
cli
sub
pop
test
mov
cmpsl
push
int3
sub
aas
push
out
mov
sbb
movsb
gs
mov
data16
ret
addr16
int
scas
push
mov
fwait
push
dec
pop
dec
std
jg
cwtl
fildll
scas
das
inc
xchg
out
popa
dec
testb
xchg
mov
jle
aam
sub
fs
call
mov
mov
lahf
out
cmpsb
pop
xor
rolb
and
cmp
mov
inc
rcr
out
sub
nop
shll
rcll
mov
arpl
xchg
loopne
jl
pop
lods
aaa
jge
dec
mov
in
fdiv
ss
add
push
sbb
movsb
xor
xchg
or
orl
lahf
jecxz
mov
cli
xchg
pop
sti
fwait
out
adc
aad
int3
cmpsl
fwait
outsb
dec
test
aad
sbb
add
repnz
add
cmp
ljmp
cli
aad
outsb
and
pop
movsl
clc
imul
in
outsb
lahf
cmp
inc
adc
inc
pop
imul
int3
aad
fstl
lret
pushl
nop
sub
lret
fldt
frstor
gs
sarl
mov
xlat
fiaddl
jp
mov
mov
daa
sbb
test
ret
rclw
push
xchg
data16
inc
mov
repz
push
sbb
cmp
insl
fisttpl
in
adc
mov
lock
mov
fstp
aam
addr16
fs
pop
inc
shlb
pop
push
insl
xor
lret
push
push
xchg
dec
les
push
push
add
sarb
call
stc
in
je
sbb
gs
pushf
mov
es
fbld
imul
xchg
mov
jp
outsb
rclb
mov
cmpsb
mov
sti
mov
mov
sbb
int3
sub
in
cli
mov
inc
or
mov
outsl
sub
daa
iret
mull
sub
pop
and
inc
iret
cmpsl
add
xchg
cmp
adcl
inc
int3
mov
lea
xchg
sbb
es
cmp
enter
loopne
and
or
outsb
mov
ljmp
js
cmp
xchg
pop
out
enter
outsb
rclb
mov
mov
or
aaa
mov
lret
clc
data16
or
sbb
add
jb
pop
daa
inc
adc
xchg
dec
stc
mov
int3
cmpsb
adc
dec
xchg
loopne
push
enter
mov
adc
or
xor
xchg
cmpsb
icebp
pusha
xlat
out
iret
push
pushf
xchg
xlat
enter
shl
rorb
or
cmp
jbe
mov
cli
cmp
sbb
or
js
fsubrl
inc
test
add
inc
and
mov
and
jg
subl
jmp
clc
daa
ljmp
das
incl
inc
cmc
mov
gs
les
js
fmulp
loop
mov
cli
jne
jnp
sub
adc
jae
lcall
repz
in
rcll
sbb
adc
daa
into
push
mov
repnz
lock
lods
push
out
clc
js
fsts
mov
test
mov
dec
loope
in
hlt
mov
ret
add
imul
data16
pusha
pop
shlb
lret
adc
or
test
aad
add
lods
jae
or
sbb
test
mov
cmpsb
mov
add
and
sarb
pusha
adc
jns
push
pop
adc
fbld
popf
push
xchg
call
mov
add
test
pop
fdiv
sub
xchg
mov
inc
orb
imul
lods
fimull
pop
mov
xor
inc
jl
std
daa
ret
adc
dec
pusha
inc
add
div
sbb
cmp
push
or
inc
sub
pop
fwait
or
outsl
cmp
jns
out
sbb
mov
sbb
sbb
mov
xchg
repz
sarl
cltd
lods
dec
sub
shrb
movsl
and
out
sbb
mov
jge
int
pop
shll
xchg
or
cld
ss
push
mov
std
xchg
aas
sbb
test
sub
fdivrl
je
js
mov
arpl
andl
adc
cmp
aas
dec
pop
js
movsb
aas
mov
aas
sub
push
mov
sbb
sti
sbb
mov
mov
mov
xor
fcmovnu
fisubl
out
lods
xchg
lret
pushf
icebp
iret
add
mov
cmp
inc
lcall
sub
insb
sbb
add
jle
stos
loopne
stos
roll
cmp
and
fsubp
sbb
loop
adc
pop
xchg
jmp
rcl
dec
popa
sarb
sbb
adc
lret
das
iret
fistl
rolb
inc
fcmovu
jle
mov
add
fsub
dec
fsts
mov
cmp
fcmovnu
jne
iret
mov
xor
shll
push
mov
mov
inc
iret
adc
pop
inc
shlb
addb
adc
mov
loope
mov
aas
jns
pop
fimuls
inc
xchg
push
int3
std
lods
shrl
jle
xchg
xchg
mov
rolb
xchg
pop
stos
loopne
test
test
pop
mov
mov
mov
and
mov
rol
inc
cmpl
sbbb
sbb
jo
mov
out
mov
cmp
xor
push
sub
pop
lods
inc
stos
das
call
adc
out
dec
push
jp
pop
mov
in
mov
out
mov
gs
shrl
pop
inc
aam
mov
stc
ljmp
mov
jae
ljmp
cmp
sub
neg
dec
jns
popf
jg
adcb
dec
pusha
mulb
jge
mov
and
fdivs
daa
call
mul
push
shlb
sbb
jg
mov
fs
into
adc
push
repz
push
mov
sub
rcll
out
xchg
or
dec
sub
repz
pop
pop
ljmp
rcr
mov
pop
cld
lcall
rclb
int
mov
mov
and
adc
xor
bound
sti
mov
inc
inc
sub
xlat
inc
test
pop
push
mov
xchg
cwtl
sbb
fldenv
mov
push
nop
test
add
cmp
outsl
out
push
jmp
xor
ds
push
lret
hlt
shll
adc
push
inc
jno
xor
or
sub
movsl
adc
insb
or
inc
xchg
push
jl
xor
mov
pop
outsl
test
sbb
mov
cmp
mov
iret
cmpsb
movsl
lock
mov
int3
jg
imul
imul
cmpl
loope
rcll
je
loopne
sbb
or
dec
mov
jecxz
sub
ds
pop
jnp
popa
inc
mov
or
sbb
int3
cwtl
ret
mov
fstpt
mov
movzwl
cmp
xor
out
mov
push
std
fbstp
out
test
add
jge
push
cmp
and
iret
dec
mov
pusha
adc
data16
push
movsl
outsl
imulb
lcall
lcall
test
divl
sar
jmp
jecxz
mov
or
or
mov
dec
mov
mov
pusha
ret
imul
not
gs
jp
adc
mov
dec
and
ret
addr16
rcrl
movsl
or
dec
fdivr
jbe
xchg
push
jg
mov
sub
xorl
lahf
pop
ss
lcall
inc
int
push
call
sub
dec
adc
xlat
add
sub
xlat
sbb
jae
cmp
sbb
fcmovne
or
cwtl
test
mov
std
push
cltd
inc
adc
jae
imul
jnp
add
jno
mov
ret
sahf
idivb
xchg
cmp
cwtl
jb
bound
mul
cltd
cmp
insb
outsl
mov
das
dec
das
stos
inc
mov
leave
stos
or
adc
bound
pop
fistpl
test
cmp
dec
out
popf
in
repz
push
push
cmp
sub
add
add
jp
pop
adc
mov
addr16
xchg
mov
insl
pop
dec
pusha
jp
ss
xor
call
ficompl
adc
repnz
and
stos
xchg
sbb
sbb
test
cmpsb
jge
jl
jne,pt
scas
adc
sbb
sub
xchg
testb
and
ja
mov
add
sbb
ret
shr
sub
ss
xchg
cmpb
pop
aad
repz
rorb
jle
andl
inc
movsl
and
mov
mov
jno
or
outsb
or
js
and
jb
sub
push
shl
sub
lahf
dec
mov
pop
and
jmp
jl
push
mov
aas
data16
add
test
cld
mov
sbb
inc
stos
sub
mov
lahf
jns
and
jo
pusha
xor
jnp
mov
das
xchg
push
push
clc
loopne
xchg
xchg
xchg
out
jno
ds
iret
adc
gs
loopne
xchg
divb
pop
cltd
xchg
clc
xchg
xchg
ja
rcr
cmp
ljmp
push
mov
mov
push
pushf
jge
aas
ja
push
test
mov
mov
ds
stos
lahf
shrl
pop
scas
inc
xor
adcl
test
push
pop
push
push
and
jne
and
xor
pop
mov
push
adc
ret
sub
xchg
xchg
shrb
or
lods
jo
sub
in
sub
mov
push
cltd
rep
in
sub
and
adc
mov
mov
fistpl
bound
ss
xchg
cmp
jnp
xor
mov
loopne
jne
mov
lock
icebp
rcrb
cmp
rcll
les
dec
pop
add
lds
lods
and
pop
or
mov
incb
lret
int3
mov
push
jnp
mov
mov
cmp
out
stos
prefetch
pop
cmp
mov
jle
pop
and
int
stos
mov
fisubrl
insl
xchg
inc
or
repz
dec
and
and
xor
and
add
push
decl
push
sar
flds
in
outsb
jnp
out
loopne
in
xor
push
xor
push
fucomi
add
push
rorl
mov
outsb
pushf
xchg
lock
int3
jecxz
xor
add
mov
fcmovbe
jbe
xchg
cmpsb
dec
add
mov
cli
dec
repnz
loop
dec
and
std
ds
mov
xchg
mov
lcall
jne
punpckhbw
nop
jge
ret
and
mov
add
add
jp
lcall
in
mov
pop
mov
adc
add
sarb
sarl
rcrl
xor
cmpsb
nop
mov
mov
sbb
xchg
add
mov
roll
inc
adc
into
push
sbb
xchg
enter
and
fistpll
imul
ds
pop
js
or
inc
jmp
ss
sahf
cmp
rcr
fstpt
mov
add
inc
mov
pop
add
or
cld
mov
xor
lds
movsb
cmpsb
mov
jno
sub
cli
aam
insb
sti
fldenv
cmp
fidivl
add
out
mov
imul
test
and
push
xor
mov
mov
sbb
shlb
repnz
loope
cmp
loop
dec
inc
cld
cmp
data16
lahf
and
xlat
xor
pop
ljmp
and
xchg
pop
pop
iret
popa
xchg
out
dec
loopne
ror
sbb
outsl
or
pusha
mov
cmc
dec
jecxz
jae
mov
and
stos
scas
in
pop
loopne
and
std
fiaddl
dec
outsl
jns
fisubl
scas
fbld
mov
mov
inc
adc
mov
inc
into
popa
out
ret
scas
jno
xor
push
js
xlat
xlat
cld
aaa
imul
sbb
std
push
shrl
or
jno
dec
fs
outsl
in
add
dec
outsb
jg
fldcw
jecxz
xchg
dec
or
push
or
imull
or
out
cmp
call
iret
cmpb
xor
jmp
cmp
and
sbb
pop
gs
fcoms
lods
bnd
faddl
pop
xchg
lods
add
pop
fcomps
jp
cmp
jle
add
or
or
push
cmp
pop
jge
push
fisubrl
pop
in
int
xchg
sub
imul
inc
sbb
cld
ja
xor
xor
jmp
ja
dec
inc
jmp
stos
mov
loopne
dec
or
leave
push
mov
push
push
pop
mov
xchg
or
jle
popa
push
sbb
fwait
out
and
mov
mov
push
popl
and
lods
jle
icebp
xchg
fisubrs
mov
ds
cmp
jno
mov
shll
xchg
xor
pop
repz
xchg
dec
leave
mov
mov
lret
sbb
jp
or
ja
cmpsl
pop
out
xchg
ljmp
sbbl
and
sbb
cmpsb
ret
mov
mov
dec
mov
psraw
pushf
out
test
out
mov
popf
dec
ret
sti
cltd
jle
dec
imul
sub
jle
addr16
cld
fldcw
xchg
mov
push
aad
push
cltd
mov
cmp
aad
es
or
ret
jb
shlb
xor
imul
int3
sahf
rorl
cmp
xchg
out
mov
lods
mov
out
pop
pop
shrd
movsb
stos
test
adc
mov
dec
and
cmp
flds
or
xchg
pop
jmp
in
leave
pushf
mov
pop
ljmp
sub
popf
jns
add
pop
xchg
shl
test
stos
fs
popf
loope
jo
icebp
push
lcall
pop
cs
mov
inc
xor
mov
icebp
xor
sub
in
icebp
andl
xor
push
push
insb
or
dec
push
ret
repz
jbe
jecxz
loopne
std
lock
ror
fdivs
addl
es
out
fsubs
xchg
decl
jl
sahf
pop
jno
or
lcall
aaa
fiadds
enter
scas
pushf
out
in
stos
mov
dec
in
adcb
fisubrl
cli
jge
ss
inc
push
nop
pop
test
push
xor
and
mov
add
sbb
dec
ret
mov
outsb
shll
lret
lret
mov
adc
jne
push
inc
xchg
cwtl
pushf
aas
cmc
bound
shrl
jl
scas
xchg
inc
test
jmp
aas
ljmp
dec
cmp
rdtsc
sub
cmc
mov
xchg
xor
test
jge
or
leave
int
daa
in
arpl
push
scas
push
fwait
mov
jl
test
jno
shll
dec
sbbl
loope
pop
arpl
push
aaa
pop
and
mov
mov
add
push
cld
ret
mov
ftst
pushf
in
insb
sti
out
pop
jae
sbb
jae
add
dec
xchg
jecxz
aam
cmp
out
cmpsl
lcall
daa
cli
dec
pop
incl
jo
mov
sub
ljmp
jo
out
pop
jnp
es
xor
dec
cmpsl
push
or
jb
push
je
sbb
aad
inc
data16
and
enter
outsb
push
imul
lcall
pop
jle
aaa
and
movhps
sub
into
jae
movb
mov
movsb
fstl
xor
inc
or
lahf
sbb
sbb
sub
mov
les
xchg
pop
jnp
push
push
jl
cmp
mov
outsb
xchg
mov
mov
bound
xor
fucomi
or
sbbb
imul
cmp
xchg
push
xchg
mov
aas
loop
push
leave
lds
mov
mov
or
pop
dec
mov
push
int
mov
push
gs
mov
fisttpll
sarb
fwait
or
insl
out
push
mov
pop
lods
pop
test
mov
shll
cmp
cltd
dec
push
mov
loop
xlat
mov
ljmp
sub
inc
inc
mov
cli
mov
sbb
dec
nop
ds
shrl
cli
or
or
test
and
cmc
sti
lret
pop
jae
loope
dec
cwtl
lcall
sub
sti
lods
mov
jns
push
stos
sub
pusha
cmp
mov
pop
scas
lods
sahf
call
fstps
fcom
push
adc
test
ficompl
hlt
movsl
ret
int
jmp
cmpsl
shrl
push
pop
pop
cmp
lahf
int
pop
lock
outsl
movq
hlt
imul
jo
mov
out
outsl
mov
cld
mov
push
push
mov
sbb
sbb
add
test
dec
inc
out
mov
lods
inc
add
pop
sarb
push
sbb
xchg
cmpl
xchg
aad
loope
sub
mov
jae
lods
or
dec
popa
and
scas
iret
adc
mov
dec
dec
je
mov
and
or
into
subb
xlat
loope
shrl
pusha
sub
mov
int3
cmc
shrb
fbld
adc
cmp
sub
mov
daa
xor
mov
xor
inc
sbb
mov
cmp
mov
outsb
in
inc
stos
sub
push
sub
andb
rorb
mov
push
inc
mov
mov
mov
inc
jmp
cmc
cld
dec
jne
ljmp
test
adc
movsl
sub
fisubl
test
sub
andb
xchg
ret
pinsrw
mov
jg
sahf
pop
push
in
lds
and
mov
mov
in
ljmp
sbb
xor
bswap
jnp
cs
mov
jne
dec
in
mull
mov
call
hlt
xor
jns
cld
mov
std
xor
add
push
push
jp
cld
faddl
dec
push
andl
dec
fcoms
fistpl
mov
scas
dec
pop
push
xchg
std
loopne
fcmovu
aas
rcll
stc
das
scas
pop
adc
stos
pop
pop
dec
or
dec
sub
ds
mov
mov
cmp
es
test
pop
push
sti
or
add
push
or
loop
fsub
fisttps
pcmpeqd
js
inc
sub
clc
ror
lods
mov
and
or
mov
xor
fmuls
das
idivb
inc
add
fucom
xchg
pop
lcall
je
adc
pusha
xlat
jb
rorb
lea
out
cmp
fnstcw
push
jbe
mov
leave
enter
leave
bound
push
xlat
stos
push
inc
inc
notl
sbb
iret
sub
push
jecxz
mov
dec
sbb
out
mov
inc
jp
and
in
mov
inc
int
inc
add
testb
sub
xchg
shlb
adc
clc
lcall
xor
jp
push
scas
cltd
pop
mov
xchg
loop
movsl
and
mov
das
sub
bnd
faddp
adc
into
daa
jbe
xchg
xchg
es
mov
out
jp
mov
testl
fdivrl
xchg
and
sahf
mov
clc
call
fcmovu
jp
test
xorb
out
and
mov
dec
pop
inc
inc
xchg
scas
das
xchg
cli
and
cmpsb
or
shl
xor
jns
test
push
in
xchg
add
cs
stc
mov
ljmp
aas
inc
sbb
dec
ds
adc
cs
jne
shll
ja
jp
cli
sti
pushf
push
sbb
push
cli
mov
sahf
cmc
jae
xor
mov
arpl
cwtl
jmp
ljmp
orl
cs
subl
int3
xchg
and
and
jge
fsub
pop
rolb
pavgw
pop
jmp
ljmp
call
dec
stos
xlat
jb
sbb
xor
pop
lock
xchg
xor
or
cs
sub
mov
out
sub
loope
inc
and
ficoml
push
mov
xchg
xchg
jecxz
pusha
stos
mov
je
xor
das
push
push
int3
iret
ja
adc
call
stos
cmp
nop
lods
aad
inc
pushf
in
sub
ljmp
rcl
xor
sbb
pop
lds
fstps
add
mov
test
nop
mov
mov
and
xor
stos
pusha
add
movb
in
daa
mov
jle
add
out
test
pop
negb
dec
push
mov
out
enter
jo
cs
int3
sub
gs
dec
pop
adc
sti
roll
popf
loope
in
scas
adc
daa
cmp
decl
in
mov
dec
inc
cmp
sbb
scas
ja
outsb
daa
out
fldt
cmp
jl
loope
push
test
jmp
mov
out
iret
mov
mov
flds
jl
xor
fildll
push
and
les
in
movsl
movsl
jp
mov
inc
clc
dec
mov
push
mov
aam
dec
jecxz
ds
js
or
into
pop
scas
test
fidivl
push
xchg
jge
int
mov
mov
xchg
push
lret
sbb
and
sbb
scas
dec
pop
notl
aam
mov
scas
mov
int
fcomps
push
jge
jmp
test
push
andl
push
dec
pop
pop
sub
fildll
push
cli
mov
in
pop
adc
cmpsb
test
es
into
mov
or
fsubl
jno
sbb
lock
or
or
xchg
xor
popa
test
aad
test
imul
dec
shlb
xchg
cmpsb
popf
mov
adc
jmp
loop
mov
push
clc
clc
inc
mov
dec
fbld
loop
std
pop
clc
fcom
fadds
stc
dec
mov
push
dec
ret
out
hlt
dec
inc
bound
push
mov
fucomp
shll
test
popf
mov
mov
xor
mov
mov
or
adc
sbb
ja
mov
sub
cs
add
ss
cld
pusha
mov
jae
pop
xchg
mov
andb
bnd
jne
mov
in
fsts
mov
and
sbb
dec
mov
int
xchg
daa
and
xchg
pushf
cwtl
and
test
xor
mov
stos
jp
xor
ret
and
leave
mov
mov
sub
test
xchg
call
jo
call
adc
test
aad
cmp
outsl
or
xchg
addr16
icebp
loopne
dec
jg
add
lahf
xor
and
xlat
jl
out
inc
adc
xchg
jns
std
jb
xchg
stos
mov
cmc
adc
inc
jo
iret
repz
jno
sub
cli
dec
fwait
cli
jnp
jb
or
push
mov
outsl
dec
scas
pushf
add
cltd
ss
mov
xchg
inc
pop
pop
dec
cmpsb
addr16
clc
lea
out
loop
mov
jl
adc
mov
mov
inc
dec
sub
ret
in
dec
pusha
jo
mov
pop
jmp
out
dec
jne
push
je
loope
add
movsb
ds
lret
push
imul
mov
push
in
pusha
mov
out
test
xchg
out
dec
test
mov
arpl
shlb
shlb
out
xchg
mov
push
out
xlat
add
sbb
mull
adc
adc
xchg
jmp
adc
inc
es
inc
js
xchg
in
pop
js
out
mov
rcll
insl
cmpsl
fsubrl
pop
or
and
rolb
ret
fnstsw
dec
dec
cmove
cmpsb
jbe
ret
xchg
and
push
mov
inc
dec
add
push
sbb
inc
out
mov
cmpsl
cwtl
dec
cmp
insl
jo
pop
xor
fdivrs
xlat
repz
stos
cmc
xchg
mov
in
popf
jle
pop
xchg
imul
jl
and
xchg
pop
insl
cmp
addr16
pop
ss
and
aam
push
sub
adc
add
jno
add
xchg
test
leave
rolb
and
xchg
ss
or
scas
rorb
pushf
sub
aas
negb
in
add
inc
imul
dec
mov
test
fldt
dec
sub
std
bnd
jl
cltd
test
rcll
stos
andl
add
js
fdivrl
es
in
jp
inc
xchg
xchg
arpl
or
pop
jae
imul
push
add
sub
loope
jno
mov
repnz
inc
push
mov
lock
ret
call
or
adc
jne
and
xchg
cmp
call
mov
call
ds
xor
and
xor
sub
inc
ret
xor
ds
or
adc
xchg
inc
push
test
dec
xchg
imul
dec
sbb
clc
jl
sbb
pop
and
test
pop
out
outsl
sub
cmpsb
stos
or
outsl
pusha
jmp
jmp
mov
negb
leave
xlat
fisubl
xor
loope
fstpl
xchg
cmp
icebp
orb
adc
sub
jge
mov
imul
mov
mov
add
jecxz
jl
out
cmp
stc
mov
mov
pop
jae
xchg
lods
fiadds
mov
xchg
inc
pop
fiadds
filds
bnd
sbb
fwait
push
rcrl
adc
pop
jnp
cmp
jno
mov
lds
cmp
outsl
pop
daa
cmc
dec
cmp
mov
imul
outsl
push
call
adc
push
mov
push
sub
xchg
pop
iret
xchg
or
ret
orb
lret
mov
aad
mov
inc
jmp
push
iret
pop
loop
outsl
cs
dec
fmuls
mov
mov
in
repnz
movsb
jecxz
jmp
jl
jmp
jnp
fwait
jae
or
in
imul
fisubrl
mov
xor
imul
in
push
push
rcrl
pop
mov
ljmp
or
mov
mov
imul
add
lods
xchg
dec
ret
inc
dec
adc
into
dec
lret
divb
andl
bswap
add
dec
ds
adc
sub
sub
adcb
loopne
dec
cwtl
lret
out
add
mov
adc
stc
push
nop
pop
sbb
std
fcoms
cmp
xor
sbb
testl
and
jl
push
test
cli
xchg
outsb
xor
enter
hlt
cmpsb
iret
loopne
mov
mov
out
xor
mov
or
jp
xor
mov
fs
shlb
paddusw
pcmpgtb
lcall
dec
cmpsb
mov
rcrb
push
sbbb
stos
jb
loope
pop
sar
and
xchg
pop
gs
or
pop
sbb
dec
enter
sbb
or
sbb
push
out
adc
je
cmpsl
mov
out
enter
dec
andb
cltd
cmpsl
xor
mov
push
test
add
sub
cmp
jecxz
or
xor
outsl
outsl
mov
pop
mov
add
incb
mov
push
out
in
mov
into
xor
rcl
loope
jmp
nop
xchg
xchg
pop
in
inc
inc
push
xor
out
lock
sub
shr
test
pop
mov
lret
pop
std
fdivr
jmp
xor
outsb
jle
jnp
sbb
popf
frstor
mov
and
pop
lods
fs
fstl
fcmovnu
popf
ret
mov
jo
xchg
xchg
jne
adc
icebp
fsubr
mov
insb
ret
loopne
rcrl
or
outsb
xchg
or
insb
dec
cmp
add
xlat
xor
stos
mov
push
into
mov
and
or
dec
movsb
out
mov
rclb
movsb
rorl
push
mov
xchg
push
jno
xchg
stos
add
jb
sbb
push
and
dec
fs
pop
jne
mov
dec
out
icebp
lcall
add
loope
in
sbb
xchg
dec
push
ret
inc
pop
aad
push
inc
testb
mov
fists
sub
xchg
adc
scas
inc
push
jne
dec
add
push
cwtl
cmpsb
iret
repnz
stos
mov
leave
nop
pop
in
ja
subl
dec
imul
loopne
and
arpl
mov
add
fdivrl
push
shlb
push
sti
les
sub
mov
stc
add
adc
shl
dec
xor
jb
jl
subl
call
cmpb
out
pop
jecxz
mov
shll
insb
inc
fimuls
lods
iret
sbb
movsl
divb
mov
mov
mov
jae
popa
aas
popa
push
loope
inc
or
movsl
js
loope
mov
clc
inc
movsb
popa
push
std
sub
imul
mov
loopne
add
jmp
xchg
inc
mov
outsb
dec
je
cmp
jno
nop
pop
sub
outsl
add
jle
ljmp
mov
fwait
outsb
cmp
jecxz
shrl
dec
jp
xor
sub
lock
fcmovne
xchg
sbb
push
jl
icebp
aas
jb
ret
ror
mov
mov
push
jo
rcrl
mov
movups
daa
outsb
sbb
mov
in
pop
mov
add
push
popf
push
jle
loop
fdiv
xchg
cmpsb
iret
movsl
jae
arpl
mov
xchg
mov
push
jnp
shll
or
mov
jae
and
cmpsb
cltd
xor
lods
loope
insl
push
sahf
iret
push
nop
movsl
xchg
pop
adc
bnd
in
jmp
cmpsl
sub
pop
or
mov
dec
xchg
inc
xchg
xor
xor
mov
aas
int3
fs
gs
mov
or
add
dec
imul
mov
mov
cmc
mov
jbe
add
pop
or
mov
sbb
lock
popf
jb
addl
xchg
dec
test
mov
adc
mov
pop
test
imul
pop
sbb
daa
pushf
push
hlt
test
mov
mov
mov
mov
sbb
les
lods
cmp
repnz
mov
xor
add
cmp
xlat
push
xchg
cmp
test
push
fldl
cmpsb
test
push
mov
cmp
mov
cltd
imul
decl
jecxz
sbb
inc
test
aaa
cmp
cmp
sahf
inc
pop
pop
jge
test
xchg
scas
sub
std
aaa
jb
pop
divb
jne
mov
and
mov
aaa
xchg
pusha
std
cmp
xor
sahf
sbb
inc
nop
inc
cli
inc
sub
cmp
jecxz
cmp
dec
jg
cmpsl
xor
mov
icebp
and
xchg
inc
cmp
mov
fidivs
and
xchg
xchg
aaa
xor
add
fadd
daa
xor
sub
int3
inc
sub
inc
daa
aam
out
push
shll
into
fneni(8087
xchg
fidivrl
jns
jg
fists
repz
inc
pop
dec
mov
repz
adc
aam
sbb
push
jns
scas
test
int3
outsl
mov
nop
xchg
fs
jg
lods
sahf
movsl
outsl
fimull
cmc
aam
pushf
mov
mov
sub
test
mov
or
push
or
jl
xor
mov
mov
stc
sbb
sti
clc
jbe
jl
mov
sub
push
mov
pop
xlat
aam
push
lea
ficomps
xchg
xor
fsubs
push
sti
popf
adc
sub
fidivrl
ficompl
fistl
cmpsl
idivb
je
xor
jle
sub
sbb
fdivr
xlat
push
fcompl
aam
out
jle
add
rcll
test
icebp
and
cmp
arpl
addr16
aas
ljmp
fisttpll
or
lock
lea
mov
or
adcl
lret
stc
sub
mov
fdivs
jg
sub
in
pop
out
sahf
xor
mov
clc
cs
outsl
add
cmp
and
pusha
jne
mov
cmp
out
xchg
pusha
es
cmp
pop
push
leave
dec
shrb
push
and
sti
sqrtps
inc
movb
inc
push
jge
jae
sub
mov
jmp
inc
push
dec
inc
mov
xchg
cmp
mov
ds
js
jecxz
sahf
inc
push
test
pop
imul
test
push
adc
dec
in
dec
mov
push
int3
dec
xchg
sbb
daa
or
xchg
push
outsl
mov
pop
xor
sar
outsl
push
ss
pop
mov
ja
mov
pop
pop
shlb
sti
arpl
pop
dec
lock
and
jge
push
imul
hlt
jne
pop
mov
push
inc
ljmp
or
jp
daa
xor
imul
add
into
notl
push
jecxz
addb
sahf
imul
xchg
jle
sbb
pop
inc
jecxz
jbe
mov
ss
jecxz
xor
mov
pushf
ja
cmp
push
jb
sub
and
sub
cmp
pop
xor
push
fiadds
test
jbe
push
cli
adc
add
fs
in
jl
sbb
sahf
jb
hlt
imul
jg
pushf
add
int3
out
xchg
jmp
call
cmp
mov
and
test
fimuls
cld
out
push
cmpl
mov
jecxz
pop
and
push
enter
xlat
mov
cmp
out
cmp
loopne
cld
ja
jecxz
rolb
fidivrl
or
cmp
fidivrl
ret
cltd
clc
or
xchg
pop
jbe
ja
hlt
stos
movsb
pop
gs
inc
mov
cmp
sbb
test
addr16
sub
stc
data16
rcll
stc
inc
jns
xchg
add
mov
push
and
je
jns
imul
cli
into
in
ret
stos
xchg
or
mov
mov
mov
subb
insl
repnz
mov
jb
lret
std
push
test
and
mov
jne
pop
jge
dec
pop
and
out
out
jecxz
mov
xor
mov
dec
dec
stc
jecxz
loopne
cwtl
push
push
lret
pop
movsl
arpl
clc
aad
xchg
pop
cmp
xchg
orl
mov
sub
or
icebp
cmpl
pop
lods
imul
mov
iret
push
stos
iret
mov
cmp
mov
mov
test
and
xchg
mov
pop
sarb
add
stos
xchg
testl
sbbl
mov
mov
nop
push
mov
cs
pop
mov
mov
mov
inc
inc
mov
stc
pop
push
lods
outsb
test
hlt
lods
mov
iret
push
ja
test
jle
inc
or
repz
rorl
mov
mov
in
jb
push
sbb
ret
ror
test
xchg
mov
je
dec
or
jle
bound
dec
and
pop
add
mov
mov
jecxz
scas
add
mov
in
cs
js
and
out
stos
mov
push
fs
mov
arpl
ds
and
fwait
jb
and
mov
dec
stos
pusha
cmp
xchg
lret
xchg
lds
cwtl
out
aad
clc
xchg
cmp
mov
pushf
out
xrelease
mov
iret
push
xchg
sbb
add
adc
je
movsb
mov
ret
dec
jb
jbe
in
mov
stc
xlat
xchg
dec
sbb
or
movsl
lahf
ljmp
jp
out
or
xor
or
aaa
lret
dec
shlb
ret
imul
push
pop
fidivrl
mov
cmp
jb
pop
add
cmp
mov
stos
cmp
and
ret
cli
mov
cmp
jbe
mov
push
push
xor
and
adc
adc
jnp
or
shrb
lret
cmp
jb
cmc
mul
jmp
lds
bsr
cli
xchg
mov
lahf
shll
test
fcomp
cmp
add
cmp
rcl
repz
cwtl
mov
sbb
inc
jle
mov
adc
adc
movsl
pop
pop
pop
xchg
icebp
cwtl
mov
cmp
jp
pop
add
pusha
shll
cwtl
ljmp
out
test
add
dec
jle
leave
jbe
mov
dec
fistpll
cmc
add
data16
mov
cmp
mov
es
sub
cmpsb
fiadds
mov
in
movsl
mov
push
jge
loop
leave
and
imul
cmp
add
sub
cmp
shll
fbld
aam
lret
jb
push
sbb
xchg
xchg
pushl
mov
cltd
lret
stc
gs
popf
les
jne
sub
or
or
shll
and
add
sti
mov
dec
lret
xchg
out
pop
out
scas
push
insl
std
lcall
out
mov
lock
pop
jg
push
cmc
add
push
jno
nop
and
pop
jge
push
add
es
out
mov
int3
fstpl
mov
and
lods
mov
or
cmp
test
and
pusha
pop
aam
inc
movsb
pop
xor
loope
pop
xchg
push
daa
push
test
daa
insb
fdivrs
inc
cmp
fs
insb
ret
inc
xchg
leave
pop
stc
xor
xor
mov
outsb
xor
nop
jno
sbb
test
imul
in
daa
enter
cmp
jmp
jp
stc
lret
mov
mov
fdivl
pop
movsl
xor
imul
rcrl
lds
inc
into
fwait
aaa
cltd
inc
test
movsl
in
sub
xchg
sbb
push
and
xchg
clc
icebp
xor
or
js
sbbl
ret
aas
test
gs
sub
aad
pusha
mov
xchg
clc
loop
clc
inc
jl
movsb
push
bound
jge
adc
mov
xlat
xlat
test
mov
in
sbb
push
pop
ljmp
and
jno
mov
mull
lds
dec
inc
idivl
inc
je
dec
inc
lcall
push
outsl
lods
and
cli
jns
outsb
or
jle
aas
dec
scas
or
dec
int3
cld
and
stc
jae
push
wrmsr
fidivs
faddl
hlt
lock
daa
mov
cwtl
pop
lock
sbb
popa
repz
sub
pusha
test
test
aas
mov
mov
push
mov
mov
inc
mov
mov
icebp
popa
test
lahf
jl
js
jbe
xchg
sub
or
test
loopne
divl
stos
cmp
mov
jns
and
mov
mov
scas
repnz
xchg
xchg
jae
inc
lcall
test
test
popa
movsb
clc
fisttpl
mov
push
lock
out
outsb
sbb
push
loopne
imul
mov
adc
imul
xchg
in
stc
roll
mov
and
cwtl
test
push
mov
lods
fsub
sub
fiaddl
mov
into
mov
sti
or
scas
aad
clc
pop
add
push
jmp
daa
insb
in
xlat
call
cwtl
shlb
out
pop
mov
push
ficoml
fcoml
cmp
lret
add
pop
cli
int3
imul
cmp
ret
mov
test
xchg
pop
rorl
sub
pushf
inc
cmp
mov
jo
roll
pushf
out
inc
or
outsl
sbb
xor
shl
dec
mov
loope
rcrb
push
cwtl
dec
test
jp
jae
pop
daa
pop
test
daa
sub
inc
fnstenv
jl
out
mov
jge
insl
bound
dec
outsb
rclb
adc
cwtl
testb
jbe
dec
cltd
adc
and
repnz
push
je
lock
aaa
pop
jae
xchg
mov
dec
or
icebp
int3
mov
xor
stos
ret
xor
push
int3
mov
lret
inc
pop
int3
cmp
repnz
jo
dec
mov
lahf
in
cmp
sbb
inc
test
dec
out
jbe
in
mov
jge
jb
push
int
jg
lods
sub
cmpsl
dec
adc
test
aaa
lock
mov
call
inc
xor
mov
dec
lret
test
add
pop
push
enter
push
add
mov
leave
mov
sub
aaa
xlat
and
push
lods
xchg
sub
jp
pushf
daa
jo
loop
xchg
jno
ljmp
pushf
sarl
flds
sub
adc
inc
push
xchg
pop
imul
adc
sub
test
mov
mov
push
fwait
mov
xchg
push
cmp
cmp
cli
pushf
dec
pop
xchg
mov
push
ss
sahf
sub
icebp
push
mov
lret
pop
pop
inc
test
xor
jbe
push
lea
mov
nop
inc
scas
mov
mov
add
scas
mov
jo
ss
sbb
rclb
insb
ficompl
js
push
sbb
sbb
push
mulb
push
jge,pn
inc
enter
sbb
mov
inc
or
gs
pop
cltd
outsl
fnstcw
cmp
fucomip
add
pop
xchg
stos
mov
fnstsw
push
xor
lcall
jge
jnp
in
push
mov
sbb
call
dec
mov
in
iret
dec
push
ret
pop
in
dec
lods
xor
fdivrl
repnz
push
pop
lcall
aaa
rcll
out
mov
and
frstor
xor
scas
cmp
test
cltd
adc
cmp
mov
ja
fcmove
jne
in
mov
dec
loopne
icebp
sbb
cmp
and
clc
and
out
mov
add
out
movsb
andl
aam
adc
xchg
adc
divb
aad
pop
mov
repnz
or
add
jg
push
mov
adc
sub
pop
out
rcl
jo
sub
ja
mov
fidivrs
call
mov
ss
fiadds
out
es
jae
dec
inc
cs
jns
or
xchg
ss
pop
jmp
ret
xchg
daa
sahf
call
sbb
arpl
pop
xchg
mov
xchg
and
xchg
shl
pop
in
cmp
xor
push
lock
pop
es
lock
cmp
mov
jnp
test
cli
inc
jbe
mov
cli
jecxz
mov
lods
in
lds
sar
fdivrp
dec
pusha
incl
shl
shl
xor
mov
cmp
mov
inc
or
cli
mov
fcomps
cmpsb
cmpsl
insl
push
in
loopne
mov
lahf
and
add
ljmp
jg
fsubl
jne
inc
lock
in
pop
shl
adc
sub
or
inc
dec
sub
es
daa
test
fnsetpm(287
xchg
xchg
push
sub
xor
push
sub
mov
shrb
ficoml
add
loope
loop
lret
repz
sbb
in
add
lret
sub
push
daa
or
inc
in
iret
notb
add
add
and
jo
pop
push
adc
mov
inc
or
jb
sub
shrb
xchg
aas
and
adc
mov
and
cwtl
insl
inc
ss
adc
in
sub
enter
shlb
test
add
leave
add
jb
fwait
jno
xor
es
lds
adc
rcrl
fs
sahf
loop
pop
lcall
mov
inc
movsl
call
enter
leave
mov
add
or
push
pop
sbb
push
popf
xchg
mov
fisttpl
or
jno
icebp
movsl
movd
dec
pusha
sbb
inc
pop
pop
aam
je
insb
jg
sub
sbb
mov
icebp
data16
out
rcl
push
test
ja
fistpll
sti
repnz
rcrb
aaa
movsl
or
imul
jns
loop
mov
imul
das
mov
mov
cmpsl
jmp
xchg
mov
pop
sbb
adcl
scas
clc
movsb
pop
jge
push
and
sarl
mov
nop
add
cmp
cmp
dec
add
dec
pop
xor
ficoms
dec
jmp
lcall
test
mov
mov
adc
rcll
push
movsb
mov
adc
cmpsl
pop
fldenv
jecxz
jmp
cmp
add
out
mov
or
inc
xchg
sub
push
add
sbb
mov
in
pusha
fldenv
addr16
addr16
in
lret
and
shlb
fwait
and
daa
push
jg
mov
stos
xor
or
iret
pushf
add
push
inc
add
pushf
cmp
enter
ret
pop
jo
xchg
mov
scas
jl
mov
pop
sbb
cli
in
cmp
mov
notl
push
mov
sti
scas
push
out
rcrb
jl
aas
mov
mov
andl
mov
sbb
cli
xchg
pop
mov
xchg
mov
mov
sbb
pop
cltd
clc
jmp
add
out
sub
push
inc
cmp
inc
push
mov
das
ret
push
mov
js
mov
out
jge
mov
mov
das
adcl
mov
clc
pop
stos
xor
sbb
js
mov
jg
cmp
xchg
cmp
push
ffree
or
movsb
push
push
gs
sub
sbb
ficoms
xchg
mov
aam
or
andl
loopne
repnz
in
loop
push
sahf
cmp
mov
push
sahf
push
roll
ret
add
cwtl
mov
in
popa
ud1
into
pushl
push
hlt
mov
push
stos
lcall
or
das
fisubs
sbbl
dec
fidivl
xchg
inc
push
or
lea
mov
sbb
mul
push
or
icebp
mov
push
pop
in
sbbb
in
ja
std
xchg
cmpb
mov
jae
sarl
cmp
bound
sahf
push
jl
fisubs
mov
dec
icebp
push
jmp
ret
xchg
dec
ds
xchg
pop
int
out
sub
daa
push
ja
mov
fs
mov
mov
push
fcoml
push
sbb
sbb
push
fists
insb
gs
xor
mov
and
pop
jp
jno
lods
adc
outsb
sbbb
mov
je
or
pop
inc
mov
repz
xchg
add
cli
mov
inc
enter
mov
lods
adc
dec
mov
mov
loopne
fsubr
hlt
jl
pop
xlat
outsb
jmp
add
imul
gs
lret
and
sbb
fucomi
mov
sub
cmc
mov
sahf
lcall
ret
and
xor
cli
mov
leave
add
sub
and
int
sub
dec
push
stos
mov
xlat
push
or
imul
gs
cmpsl
in
sub
ucomiss
int
xchg
dec
lock
jae
int3
mov
cmp
xchg
out
lods
xchg
lahf
enter
inc
loope
stc
xor
or
xor
movsb
dec
dec
mov
cmp
hlt
loope
clc
repz
cmpsb
outsl
mov
std
imul
adc
flds
dec
push
data16
lret
mov
out
cmc
aam
push
cmp
jp
xlat
sub
push
lcall
push
dec
enter
adc
sahf
push
mov
push
in
sti
cmpsb
and
adc
lds
sub
in
cmpsl
jns
lock
sbb
in
jns
inc
movsl
dec
jnp
xchg
outsb
mov
subb
cwtl
jb
push
mov
mov
out
dec
push
jmp
xchg
and
mov
rcrb
dec
mov
in
daa
push
jne
sub
popl
push
push
insb
data16
mov
imul
and
mov
push
mov
movsb
sub
es
inc
testb
ds
popf
xchg
cmpl
dec
lcall
es
pop
jo
and
ret
dec
jb
mov
mov
pop
adcl
lds
call
dec
xor
bound
out
adc
or
decb
jno
inc
adc
mov
test
pop
sbb
xchg
mov
das
pop
and
mov
mov
incl
mov
dec
out
xchg
repz
mov
cmp
inc
mov
sbb
pop
outsl
inc
es
sbb
lods
mov
into
mov
fistpll
sub
mov
or
test
fcomp
push
dec
out
adc
lods
mov
test
rcrl
push
lock
xchg
test
rclb
jmp
adc
into
in
adc
fmulp
lret
mov
jecxz
mov
xchg
popf
mov
or
and
mov
das
xlat
and
mov
mov
xor
dec
movsb
sub
fisubs
ss
jle
inc
movl
outsl
sbb
rclb
aas
repz
lahf
imul
xchg
pushl
pop
sbb
mov
fwait
pop
loop
cmp
cs
sub
adc
mov
xchg
mov
mov
out
fistpll
mov
andb
push
andl
xor
stc
lret
dec
cmp
aas
lret
cli
jl
xchg
sbbb
addr16
mov
xor
or
mov
mov
mov
add
stc
pop
sahf
xchg
or
cli
adc
push
sbb
sub
push
int
lret
xor
and
jg
arpl
xor
adc
xchg
je
cmp
xchg
repz
and
cmpsb
pop
lods
pop
pop
pop
imul
out
mov
xor
dec
xchg
ljmp
testl
call
aam
inc
fwait
mov
movsl
fwait
rcll
sbb
movsb
xor
lret
pop
sbb
cld
pop
adc
cld
dec
es
getsec
adc
shlb
in
cltd
xchg
rorb
dec
in
into
mov
std
ret
pop
jmp
mov
pusha
and
inc
push
jmp
out
dec
or
sbb
std
dec
les
fcompl
hlt
clc
xor
mov
xchg
ja
mov
ret
mov
rcll
sbb
lcall
cmp
in
cmp
sbb
dec
jle
iret
and
pop
mov
push
push
jge
jge
lcall
inc
repnz
sub
xor
notl
pop
testb
cmpl
xchg
pop
lds
sub
push
adc
fs
xor
in
lods
enter
mov
push
pop
adc
push
rclb
mov
mov
jno
test
jne
in
mov
in
xchg
repnz
push
or
xchg
daa
push
adc
xchg
into
or
sti
dec
or
push
dec
xor
add
nop
repnz
cmp
sbb
xchg
out
arpl
push
sbb
push
int
pop
xchg
jbe
out
jnp
dec
fdivrl
and
imul
subb
inc
cmpl
rcl
andl
or
sub
icebp
adc
inc
pushf
jmp
jge
dec
das
rcrb
mov
ljmp
xor
sub
cmp
mov
cmpb
and
mov
adc
mov
sbb
sub
out
and
stos
ror
stos
movsb
shl
stos
stc
sbb
and
pop
adc
xor
fisubrl
outsl
mov
jp
or
sub
jns
lds
and
stos
mov
es
fwait
ss
rcrl
push
testb
pop
nop
fnstenv
pop
movsl
add
sbb
in
popa
dec
rcrl
pushf
xor
mov
arpl
push
lea
add
sub
ss
inc
sub
inc
bound
divb
out
mov
pusha
cmp
push
and
sbb
aas
inc
dec
cli
in
loop
mov
mov
sbb
popa
call
popa
xchg
push
call
call
btcl
loope
or
dec
daa
out
imul
sbb
flds
jp
sbb
icebp
sbb
mov
cld
mov
xor
xchg
lock
inc
jmp
jp
push
aad
arpl
adc
inc
cs
repz
xor
fistpl
jo
aad
pop
xchg
ret
sbb
push
xor
xor
enter
and
pop
js
mov
lds
sub
and
push
ret
call
jge
gs
jo
loop
cs
inc
inc
adc
fldl
jg
xor
inc
les
inc
idivl
mov
inc
or
shll
lret
leave
cmpsl
lret
jcxz
xchg
pop
xchg
sbb
dec
pop
pop
or
push
outsl
insb
aas
xchg
pop
ljmp
or
loop
lods
lcall
scas
pop
add
push
pop
imul
iret
jbe
pusha
cmpsl
mov
aaa
xor
fistl
adc
mov
rcr
pop
jne
lret
cmp
xor
mov
sub
add
xor
xor
sub
ret
push
movsl
dec
sbb
decb
sub
mov
sbb
inc
mov
jp
lods
and
js
ds
btc
notl
adc
rcrl
lods
aas
xor
pop
sub
push
mov
popf
icebp
sbb
icebp
fbld
xor
lods
in
aam
imul
ret
rorb
shll
loop
loope
imul
sbb
fldenv
xchg
xchg
dec
lcall
or
add
push
push
push
push
mov
pmulhuw
adc
mov
es
das
out
jp
outsb
sbb
and
sbb
ja
mov
inc
jb
push
inc
mov
add
xor
mov
push
out
pop
lcall
out
xchg
loopne
mov
xchg
dec
sub
sub
les
mov
sub
and
add
inc
loopne
negb
sbb
call
ucomiss
sbb
mov
movb
sbb
mov
stc
mov
inc
mov
cmp
jo
sbb
inc
push
cld
icebp
popf
inc
mov
js
add
stc
in
out
adc
inc
in
lea
gs
popa
push
jb
xlat
mov
dec
sub
js
adc
pop
sbb
sbb
dec
inc
inc
pop
test
into
cwtl
mov
mov
insb
push
mov
push
mov
je
inc
adc
dec
in
pop
leave
into
mov
and
add
add
lods
xchg
ljmp
or
sahf
ret
jns
scas
scas
inc
jl
inc
xor
sbb
mov
xor
mov
out
sub
shrb
mov
jns
jae
sub
jmp
xchg
dec
inc
hlt
outsl
aad
sahf
or
mov
cmpsl
popf
ds
jle
jnp
ret
jnp
sub
mov
es
jb
loope
loop
in
mov
jmp
cmp
mov
and
jnp
mov
aad
les
rol
or
test
cli
mov
adc
lock
lret
incb
stc
dec
int3
jge
push
mov
xor
into
popf
in
sub
lea
cmp
cli
out
sub
jnp
repz
adc
sub
push
cmp
sahf
cli
and
addr16
add
pop
das
cmp
sub
sbb
sub
push
out
xlat
xor
loop
nop
adc
push
push
sub
js
add
imull
sbb
add
push
or
push
xchg
push
sahf
das
push
jae
movb
sbb
lds
xchg
ja
adc
jno
mov
or
lods
mov
mov
cmp
push
add
mov
jb
jmp
jmp
mov
push
mov
insl
pop
dec
mov
movsl
lahf
rcrb
add
sub
data16
aaa
stos
adc
fs
or
ret
push
or
dec
in
insb
xchg
cwtl
rorl
loopne
jge
inc
ret
pop
sarl
mov
iret
xor
push
sahf
std
mov
repnz
lds
mov
inc
jp
lods
cmp
xchg
outsb
shlb
push
mov
xor
test
mov
push
adc
loop
mov
clc
push
adc
dec
into
sahf
pop
sbb
cmp
pop
int3
jg
inc
mov
neg
xchg
cmc
clc
push
sbb
out
mov
es
jne
or
adc
dec
call
incb
jb
js
cmpsb
filds
adc
scas
cmp
push
sub
pop
rorb
fstl
adc
cmp
xor
mov
lock
ja
scas
lret
push
mov
fwait
and
adc
and
dec
dec
das
outsl
mov
into
lret
loope
cmp
mov
daa
or
inc
xchg
in
nop
push
inc
je
cmp
mov
or
dec
out
xlat
adc
orl
mov
or
dec
jecxz
stos
push
pushf
mov
dec
clc
std
xor
mov
pop
pop
mov
clc
in
stos
divb
ss
pop
push
add
sub
sub
pushw
movsb
test
dec
lahf
ret
push
jecxz
jmp
inc
icebp
sarb
add
cmpsb
cmp
andl
loope
test
je
sub
pop
test
adc
mov
cmp
shll
je
cmp
pop
int
xchg
in
mov
or
push
movsb
cmp
insl
add
in
sahf
xchg
fdivl
pushf
subl
adc
fwait
jns
lds
negl
das
in
stos
cmp
xlat
add
loope
imul
fimuls
cli
or
sbb
mov
or
and
xchg
insl
repz
pop
insb
cwtl
add
push
xchg
push
push
sub
add
fildl
cmpsb
cmp
loopne
inc
mov
mov
arpl
adc
dec
xchg
pop
iret
pop
push
xchg
test
add
sti
mov
andb
mov
mov
lods
stos
mov
and
pushf
mov
ss
clc
push
push
mov
ja
adc
fwait
mov
mov
mov
ret
fcmovnb
lock
pop
stos
in
mov
cmp
and
inc
fs
rolb
dec
mov
xor
jno
pshufw
cmp
jp
sbb
insl
mov
push
ds
mov
dec
sbb
mov
rcrl
jo
adcl
mov
mov
mov
inc
mov
inc
leave
arpl
and
mov
add
add
das
daa
je
push
add
call
mov
iret
scas
push
imul
stos
cmpsl
xor
or
hlt
dec
inc
xchg
dec
jnp
sbb
repz
jg
sub
dec
add
int
mov
loopne
push
xchg
ret
adc
cmp
xchg
inc
out
ljmp
mov
cmp
out
mov
movsl
jbe
insl
adc
aas
mov
fwait
or
fmull
add
push
adc
cmpsl
mov
mov
pop
ret
call
lods
or
push
dec
dec
roll
sahf
data16
lret
loope
push
mov
roll
and
fcmovb
cmc
loopne
mov
or
in
xchg
ljmp
pusha
dec
mov
xorb
mov
sti
pop
inc
mov
or
push
popf
lret
dec
dec
mov
or
push
push
adc
imul
pop
xchg
fwait
int
jmp
dec
mov
scas
mov
push
cmp
add
ret
stc
and
xchg
jl
push
cltd
shr
cmp
cmp
addr16
push
gs
pop
adc
hlt
js
inc
adc
jae
add
das
outsl
adc
jae
mov
icebp
pop
add
ficoms
xor
and
fwait
or
aam
ds
fnstcw
imulb
jb
sbb
lods
push
fsub
ret
js
add
lea
add
mov
add
scas
pop
xor
sub
jg
sbb
int3
mov
lcall
ret
mov
ja
sbb
ja
add
jb
sub
sub
cmp
mov
pop
xorb
aam
sub
cmovp
jbe
mov
in
or
cmp
mov
aaa
or
jae
cmp
pop
scas
rcrb
test
lea
int
jae
lea
cmc
mov
in
cwtl
into
fisubs
inc
and
jge
sbb
sub
iret
nop
ret
adc
imul
or
stc
scas
sbb
ja
mov
es
adc
pop
repz
mov
add
loopne
adc
popw
nop
sub
test
jle
pusha
and
test
lea
iret
lcall
sbb
popa
sbb
xor
shl
cli
add
inc
ss
ss
xlat
pop
pop
inc
xorb
dec
jmp
jl
das
psubsw
add
jbe
aam
push
jns
pavgb
mov
test
stc
out
pop
repz
jno
or
aaa
jne
sarb
repz
dec
mov
sub
mov
xchg
mov
pop
mov
lea
pop
ss
push
icebp
mov
pop
gs
pop
out
push
pop
pop
rcrl
mov
lods
cmp
out
push
mov
pusha
clc
cli
aas
inc
or
add
scas
adc
add
enter
pop
out
push
nop
movl
push
adc
rcrb
sbb
adc
jge
mov
imul
sub
mov
movl
inc
xor
fdivr
mov
cmpsl
jmp
push
push
adc
daa
vxorps
fsts
jg
ficompl
jge
mov
xor
fdivr
mov
pop
pusha
loop
inc
ljmp
mov
data16
roll
repnz
mov
jno
in
rolb
mov
adc
neg
arpl
mov
pop
cmp
mov
pusha
cmpb
sub
xor
dec
push
push
orb
pop
pop
mov
leave
push
mov
cmp
loope
sbb
inc
gs
jp
aas
push
dec
icebp
adc
push
pop
lods
pop
mov
dec
das
sbb
les
imul
hlt
jge
sbb
adc
sub
push
xor
test
movsl
push
ja
test
aam
adc
popa
lahf
loope
jp
test
xlat
mov
data16
xchg
mov
mov
addr16
and
pop
mov
xchg
push
stc
push
lcall
inc
enter
pop
ljmp
adc
push
mov
jne
or
inc
jg
notl
daa
fsubrl
cs
ljmp
cmp
pop
jg
or
lea
pop
dec
mov
jge
adcl
sub
xor
fcomip
or
cmp
addr16
cmp
xor
imul
int3
jae
gs
jecxz
xor
dec
lods
jg
dec
leave
cmc
fcmovbe
cs
movsb
lcall
outsl
test
push
mov
out
lock
js
adc
fistpll
pop
aaa
xchg
jnp
lahf
pop
fs
scas
or
add
das
xor
ds
dec
dec
mov
rcl
mov
add
mov
cmp
xchg
nop
jo
xchg
insl
cs
sub
pop
dec
pop
js
pop
dec
mov
push
mov
fcoms
or
sub
pop
mov
sbb
lea
jmp
add
add
inc
sbb
icebp
je
aad
scas
sub
xor
and
fdivrs
mov
sub
fwait
pop
mov
imul
clc
add
jecxz
rolb
nop
fdivl
adc
pop
sbb
inc
dec
adc
inc
outsl
ret
push
std
xor
push
pop
dec
inc
idivb
and
fldl
push
push
and
es
dec
loopne
icebp
ljmp
ds
cwtl
cmpsb
mov
nop
xchg
xor
sbb
clc
cmp
jne
dec
aad
mov
xchg
pop
andb
sub
inc
add
xor
mov
mov
data16
add
inc
loope
jo
sub
in
into
push
xchg
jmp
pop
fwait
in
dec
outsl
add
lock
jp
mov
orb
mov
sbb
xchg
push
sbb
sub
lret
daa
imul
pop
ss
fs
clc
inc
ret
jle
and
sub
add
test
xor
popf
xchg
and
sbb
pushf
jne
push
sti
pop
das
xchg
cs
xor
mov
mov
aam
lahf
in
mov
imul
pop
std
dec
push
lods
ds
mov
inc
pusha
scas
jno
popf
jns
pop
mov
test
mov
rcrl
test
mov
cmp
or
enter
popf
pushw
enter
and
fwait
mov
cmp
dec
mov
pop
sub
add
loopne
lods
push
setbe
jnp
in
jae
xchg
test
ljmp
or
inc
mov
cmp
arpl
xchg
mov
loop
icebp
test
ljmp
sarl
mov
lcall
jne
xchg
cmp
mov
mov
sbb
and
add
sahf
js
add
pop
inc
arpl
fidivrs
sti
imul
movsb
dec
or
jg
and
test
in
sub
outsb
mov
testl
pop
sarl
js
rorl
and
repz
sbb
sarb
sub
add
mov
push
and
adc
push
xchg
adc
fldl2t
in
nop
mov
mov
push
arpl
sbb
xor
dec
adc
cmp
jnp
and
shrl
mov
inc
sar
pusha
mov
add
adc
xor
lds
pop
inc
xchg
test
call
jnp
scas
call
mov
insl
in
jnp
add
push
fs
lahf
int
outsb
inc
xor
lret
mov
adc
out
sbb
xchg
testl
mov
ror
dec
es
dec
xchg
scas
inc
mov
hlt
xor
mov
sub
movsl
sub
dec
in
mov
push
in
cmp
jl
movsl
fwait
pop
add
movsl
xchg
repnz
jae
sub
push
ficoms
mov
loopne
in
pop
fstp
sti
adc
fldenv
push
test
daa
dec
das
xlat
je
scas
xchg
mov
js
push
pop
iret
inc
or
xchg
data16
or
inc
and
inc
mov
iret
xchg
ss
lds
pop
loop
test
or
jmp
mov
hlt
lods
push
sbb
stos
in
sub
cwtl
sub
cmp
out
lcall
mov
xor
aaa
sub
bound
leave
adc
arpl
outsb
and
push
iret
ret
and
lods
xchg
aam
inc
fldcw
stc
test
add
in
dec
fisubrs
ret
lods
dec
insb
inc
ja
sub
xor
or
lods
sarb
cmp
stos
jl
adc
andb
inc
xchg
inc
je
sbbl
pop
inc
add
push
insl
mov
dec
das
ja
add
sub
aaa
dec
adc
xor
cwtl
mov
movsl
jl
xchg
popa
bound
push
or
or
pop
stc
addr16
mov
mov
lock
dec
sbb
cltd
mov
mov
js
fstps
mov
sbbl
or
and
jo
aad
enter
lret
or
cmpsb
mov
xchg
push
sahf
fisttpl
imul
int
push
jle
shlb
mov
insb
pop
jnp
lds
mov
fistpl
sub
cli
cmp
push
fcomps
mov
je
out
adc
int
cmp
push
arpl
shll
inc
jmp
dec
addr16
xor
ss
pushw
fistl
enter
jl
push
data16
stc
sbb
xchg
lea
outsb
cmc
cmpsl
cmp
push
incl
xor
pop
out
cs
mov
adc
js
mov
mov
push
imul
push
and
mov
daa
push
jl
mov
and
rcrl
xchg
push
jmp
lea
dec
mov
movsb
xlat
in
popf
push
mov
push
ljmp
leave
dec
adcl
pop
cmp
and
popf
inc
pop
xchg
inc
int3
aad
push
scas
sarb
cmp
cltd
pop
push
addr16
dec
ds
sub
mov
in
into
ret
std
loopne
aad
ret
ja
mov
add
ret
pop
aaa
aas
and
mov
sbb
jg
in
ljmp
dec
iret
jae
adc
jb
push
neg
in
and
icebp
leave
xor
jge
popa
arpl
fcmove
inc
leave
push
sbb
roll
loop
test
lds
inc
jecxz
push
repnz
popa
js
inc
or
and
xchg
lods
mov
cmp
idivb
cmp
js
mov
or
subb
pop
mov
addr16
clc
adc
aas
je
loope
dec
dec
adc
xchg
mov
mov
out
mov
xchg
or
mov
dec
inc
pop
lret
adc
fsts
sub
fdivrl
js
fwait
or
and
sbb
fwait
cwtl
test
mov
mov
jo
ret
test
stos
mov
xchg
push
mov
mov
data16
cmpb
jge
fstps
sub
lea
test
ljmp
adc
xchg
out
cwtl
dec
addr16
std
xchg
data16
dec
out
push
or
mov
jbe
repz
jno
fnsave
cmpsb
mov
lods
push
ljmp
js
xchg
xchg
rclb
mov
mov
mov
test
mov
pop
and
scas
or
jecxz
lods
sub
leave
lods
hlt
and
iret
mov
sub
lcall
rolb
push
shl
lea
or
loop
cltd
das
shrl
and
mov
xlat
mov
cmpsl
stc
scas
loope
insb
jbe
cmc
dec
xchg
sub
add
adc
test
lea
jne
jne
xchg
andl
or
mov
mov
xor
cld
adc
dec
imul
aas
fsubp
mov
or
jns
test
jo
mov
mov
inc
mov
mov
push
and
sarb
js
and
mov
scas
das
lds
enter
add
xchg
repnz
in
cld
outsl
sub
out
pop
mov
mov
jo,pn
xor
mov
dec
mov
rorb
mov
push
mov
popf
ja
mov
sub
jl
inc
out
sbb
or
ljmp
mov
inc
jo
cmp
and
into
xchg
adc
xor
xor
in
inc
or
adc
xchg
adc
je
pusha
pop
in
pop
cs
bnd
xor
and
aad
cld
mov
loope
cld
pop
ret
jl
out
popa
cmpsl
mov
and
jns
mov
add
jg
pop
ret
stos
fimuls
xchg
and
xor
fcompl
in
repz
push
or
cmpsl
add
nop
aaa
or
enter
dec
adc
sbb
roll
xlat
lock
and
roll
dec
movl
scas
xchg
push
adc
test
addr16
icebp
dec
data16
mov
popa
fildll
jnp
lahf
movsb
xor
mov
jns
jno
pop
dec
mov
fnsave
jbe
lds
or
movsl
pop
mov
xchg
cs
dec
pop
jge
imul
ret
cmp
sub
js
pusha
movsl
xor
mov
das
dec
mov
das
pop
inc
fmul
scas
sbb
dec
popf
pop
imul
sub
insb
test
inc
xchg
and
andl
cmp
cltd
outsl
jmp
shr
cld
ss
fidivrs
dec
mov
cmp
jne
in
cltd
pop
stos
movsb
sbb
loopne
push
andb
xor
out
outsb
jno
xchg
and
sbb
repnz
sub
mov
dec
push
repnz
mov
bound
ja
fdivrs
cmp
xchg
lock
fsubr
mov
je
cmp
jmp
xchg
movsb
sar
ss
test
add
jg
ficoms
pop
rcll
push
or
inc
pop
xor
jns
jle
out
and
add
in
dec
outsb
inc
pop
push
int3
cwtl
jnp
pusha
dec
or
jno
pop
adc
insl
pusha
mov
test
xchg
test
mov
shrl
mov
imulb
fwait
daa
xchg
cmpsl
pop
out
std
mov
call
repnz
ja
pop
out
mov
icebp
scas
faddp
loop
mov
jbe
loope
xor
sarl
mov
inc
xchg
push
lcall
in
push
insl
inc
les
xchg
push
pusha
mov
test
mov
xchg
sarl
ss
outsb
xchg
shrb
aaa
stos
pop
negb
or
mov
sub
xor
lock
and
in
jnp
icebp
out
jmp
cmp
cltd
out
loope
dec
dec
inc
aam
test
in
cmp
mov
pop
cmpsb
aaa
das
cs
into
lds
pushf
sbb
popa
mov
inc
pop
dec
dec
out
loopne
push
sbb
cmpsl
pushf
cmp
loopne
rclb
cltd
push
not
lods
sub
adc
mov
imul
pushf
xor
scas
add
push
xchg
and
or
push
test
sahf
sbb
leave
push
lods
cmp
mov
or
mov
movsb
pop
jmp
mov
cld
rcll
stos
js
inc
cmp
dec
dec
ja
into
and
jecxz
out
or
inc
lock
out
rorb
adc
pop
xchg
pop
ja
cli
sbb
mov
push
cmp
cltd
ret
in
jae
lock
pop
inc
pop
test
jnp
jbe
pushl
mov
mov
add
jne
sarb
inc
out
ret
inc
jge
sti
sbb
leave
cmp
dec
aas
in
into
push
jbe
pop
mov
shrl
mov
mov
mov
hlt
mov
mov
in
sub
push
jecxz
popf
mul
mov
jge
sub
jnp
test
sub
gs
ds
in
into
mov
pop
mov
inc
dec
push
mov
mov
leave
sub
stc
cmp
scas
push
fbld
and
sub
jmp
jbe
cwtl
dec
push
sub
aad
xor
pop
cmpsl
mov
jl
inc
or
stos
jle
in
inc
stc
cmpsb
sbb
and
mov
cmp
sub
xlat
or
cmp
hlt
sub
add
ja
xor
or
insl
mov
subl
or
xlat
out
push
dec
faddp
push
stc
ljmp
mov
test
test
jl
push
in
dec
ljmp
mov
mov
es
push
jae
or
xor
mov
push
sahf
repz
in
jg
inc
ja
push
faddp
push
push
xor
mov
cli
test
and
sub
adc
jecxz
lods
stos
andb
sub
adc
in
pop
mov
jns
das
xor
out
cltd
push
shr
jae
outsb
cmpsb
xor
es
xor
ret
pushl
test
mov
test
fstl
sub
pop
fwait
jb
sub
sub
mov
push
js
mov
pop
out
dec
sti
mov
rorl
push
imul
inc
movsl
and
dec
enter
add
loope
mov
dec
cli
inc
lods
fwait
sbb
adc
jmp
push
push
pop
pop
lcall
inc
adc
pop
repz
iret
test
cld
xchg
sbb
mov
mov
push
mov
out
jge
loop
pusha
idivb
aaa
fcompp
push
mov
mov
lea
sub
insl
std
cmp
pop
push
mov
push
scas
rorb
inc
popf
push
mov
movsl
or
scas
pop
jecxz
hlt
jns
loopne
mov
mov
pop
inc
cmp
in
mov
xor
sub
mov
pop
rorl
movsl
cmp
test
jae
and
cmp
data16
mov
cs
or
bnd
push
test
pop
adc
mov
enter
loop
out
addr16
sbb
je
popf
inc
fisubrl
mov
pushl
rclb
xor
mov
testl
jae
pop
mov
push
mov
mov
pushf
jmp
outsb
dec
stos
sarl
lods
aam
and
in
out
mov
ret
push
mov
repz
sub
jle
inc
add
cmp
pop
rolb
cmp
add
sub
lds
xor
xchg
das
cmpsl
mov
test
add
lods
addr16
incl
dec
imul
iret
and
dec
out
sti
aaa
popa
fwait
or
inc
outsl
ret
fdivrl
mov
out
clc
std
add
fisttpll
pop
sub
xchg
icebp
mov
add
repz
imulb
cli
jg
jle
and
in
dec
aas
sub
dec
outsb
sbb
lret
or
adc
sub
mov
fsubp
push
shlb
add
mov
adc
daa
or
mov
and
and
leave
jmp
mov
cmp
mov
push
das
jo
test
into
in
jle
hlt
loop
dec
frstor
insl
cmc
test
mov
imul
hlt
lcall
dec
cmovns
jns
cmp
inc
and
adc
push
jge
sub
push
dec
jb
fmuls
dec
xlat
es
movsb
xchg
push
sub
test
aas
ret
mov
mov
inc
mov
test
xchg
mov
add
lcall
popf
jne
mov
lea
aas
arpl
out
mov
cs
mov
cwtl
mov
ja
inc
inc
sahf
into
lahf
dec
dec
fwait
pop
nop
in
mov
adc
mov
add
mov
cld
mov
cmp
test
push
dec
pop
jne
add
mov
mov
sbb
push
into
or
fnstsw
mov
lret
push
leave
push
lea
cmpsl
inc
xchg
dec
aam
sbb
push
xchg
clc
popa
and
jno
pop
aas
out
push
ljmp
idivl
cmp
cld
ja
aad
jle
pop
xor
aam
ljmp
cmp
add
sbb
in
lea
push
ret
hlt
mov
mov
xor
jno
jno
stc
hlt
loop
inc
fdivrl
popa
pop
push
mov
lcall
push
dec
cmc
xor
add
outsl
mov
scas
les
add
or
leave
pop
xchg
push
cmp
mov
dec
sub
cmpsl
daa
pop
in
loope
push
xor
fstl
into
mov
xchg
push
dec
xchg
in
mov
jmp
bound
lods
in
shl
cli
inc
add
test
push
popf
test
xor
adc
lds
subb
lret
ja
test
or
jne
xchg
add
test
enter
inc
jle
dec
into
int3
dec
test
lock
pushf
aaa
add
cli
leave
adc
fbstp
fsubrl
sub
lock
sbb
cmp
sub
add
imul
into
jmp
cmp
cli
sbb
scas
dec
mov
hlt
jb
pop
mov
dec
mov
or
mov
iret
pop
lret
lcall
or
push
shll
dec
cmpsl
mov
pop
ljmp
adc
imul
ret
testl
cmpsb
xor
adc
les
lds
in
push
outsl
and
das
shl
mov
insl
adc
push
pop
mov
sbb
adc
scas
or
xor
jmp
loopne
into
xchg
jmp
mov
les
add
cmp
jl
mov
xor
call
icebp
mov
cli
mov
iret
pop
add
cmp
ror
mov
notb
mov
pop
leave
jo
mov
jecxz
sub
ss
mov
lock
add
outsb
mov
dec
test
sbb
filds
rcr
mov
mov
push
lret
sarl
gs
sti
shl
mov
fldl
xchg
sbb
std
lcall
mov
cwtl
xorb
cmp
repnz
sub
fdivrs
xchg
and
inc
xchg
movb
aad
jge
repnz
test
mov
sbb
pop
ss
imul
sub
scas
sub
js
repnz
push
in
push
aaa
aaa
js
stos
jle
or
ret
imul
adc
xor
icebp
mov
imul
or
movsl
add
add
je
cltd
iret
xchg
adc
lea
sti
push
mov
test
push
and
iret
mov
adc
hlt
mov
add
cmp
lds
in
sbb
adc
ret
adc
xor
ret
subb
dec
lods
aaa
pusha
xchg
in
add
adc
sub
mov
std
enter
lods
stos
ror
sbb
cld
pop
xor
daa
push
je
stos
idivl
mov
stos
adc
hlt
mov
add
sti
mov
stos
push
hlt
imul
pop
xlat
jecxz
popa
outsb
ja
cmp
sbb
pusha
test
repz
jo
fildl
xchg
jg
sub
dec
out
sti
movsb
push
mov
sub
push
push
std
loope
add
and
test
std
cmp
dec
out
adc
leave
push
arpl
sbb
inc
pop
xor
cld
add
stos
movsl
popl
sti
ret
hlt
mov
and
pop
inc
push
push
imul
outsb
adc
shll
nop
pop
sar
lahf
loope
mov
and
es
mov
sub
ds
out
mov
cmp
xor
jl
cmp
inc
rcll
jno
pop
inc
xlat
lea
cmp
fisttpl
push
inc
pop
jne
fcos
dec
pop
inc
repz
lcall
jge
ja
rclb
adc
cmp
sub
lret
movb
and
pop
repz
mov
xor
loope
xor
sub
dec
les
ret
or
imul
push
mov
aaa
or
pop
sahf
pop
push
inc
pusha
dec
cmp
out
add
mov
sbb
mov
es
mov
push
cltd
pop
cld
gs
gs
jns
mov
fs
cmc
sbbl
jmp
pop
in
add
pop
call
fidivl
jo
inc
xchg
lret
sub
sub
mov
xchg
sbb
cld
adc
loopne
jg
adc
mov
mov
fcoml
jle
andl
shlb
shrl
in
or
xor
movsl
cli
xchg
outsb
hlt
in
in
shlb
ds
in
add
sub
push
mov
inc
mov
mov
mov
xchg
xor
xchg
das
dec
push
adc
mov
jmp
sarl
push
outsb
or
mov
push
stos
fsubs
movsb
pop
mov
idivb
outsb
inc
xor
inc
adc
outsb
cmp
inc
notb
test
movl
jge
mov
jns
loop
inc
out
imul
andl
lock
xchg
fcompl
mov
adcb
into
out
mov
adc
in
mull
mov
sbb
inc
sti
pop
sub
pusha
lret
jl
lcall
xlat
imul
movsb
cli
sbb
fistps
bound
or
outsb
dec
push
xchg
push
adc
pop
pop
jb
clc
sbb
out
repnz
insb
lods
dec
adc
xlat
fcoms
pop
repnz
pop
data16
hlt
notl
fdivrl
dec
sub
cld
jecxz
push
adc
push
inc
sti
mov
inc
cwtl
cli
loopne
or
fildll
cmp
push
and
cmc
lods
iret
and
push
hlt
cmp
pop
add
adc
shlb
lcall
movsb
or
mov
fs
dec
shll
push
icebp
mov
sub
ret
xchg
cmpb
test
cs
lret
inc
outsb
inc
push
sub
pusha
movb
inc
adc
jnp
jnp
imulb
pop
lock
scas
xchg
arpl
sarl
in
pop
inc
stos
pop
scas
mov
jmp
stos
sub
add
iret
ja
jp
lea
xchg
xchg
icebp
pop
push
xorl
jns
outsb
movsb
outsl
jl
test
mov
push
shlb
jmp
test
rcll
insb
pop
pop
lods
adc
xchg
or
pop
fwait
mov
cltd
add
pop
mov
rclb
insl
push
cmp
or
jae
sub
fildl
sub
in
and
xlat
fdivrl
es
mov
lea
mov
or
xchg
jns
xor
sbb
cmp
xchg
dec
je
push
imul
mov
rcrl
sbb
push
aam
ds
lea
and
sub
adc
xchg
mov
pop
js
stos
cmp
and
lea
ret
test
out
lcall
lods
insl
dec
fdivs
jae
sbb
inc
xor
add
je
andl
xor
jl
ja
push
shll
xchg
mov
jo
repz
call
cmp
ss
dec
dec
dec
xchg
jb
sbb
push
test
sub
in
mov
cmc
xchg
out
cs
imul
xor
mov
test
lret
loop
clc
rcll
sbb
jnp
or
dec
das
sbb
xor
mull
shld
popf
ret
and
flds
rclb
fisttps
push
sbb
inc
sti
push
fisttpll
cmp
mov
shl
cmp
sbb
and
xchg
jb
jl
mov
out
test
push
les
pusha
les
loopne
xor
dec
mov
add
fucomip
jl
adc
mov
repnz
stc
outsb
xor
mov
and
enterw
push
jnp
cltd
data16
dec
push
add
adc
sbb
sub
cmp
adc
insb
stos
push
mov
icebp
mov
test
cltd
xchg
mov
pop
jns
imul
mov
shrb
jo
xor
mov
jmp
filds
xchg
pop
jo
int3
inc
pop
mov
lret
fisubs
sub
testb
subl
xchg
call
adc
sbb
fcoml
sub
rcrb
loopne
jbe
inc
je
sub
xchg
lods
stos
mov
movsb
add
hlt
add
sub
andb
call
cmp
and
inc
subb
sbb
cmp
or
mov
lahf
clc
mov
jns
add
dec
cmp
into
test
xor
jecxz
mov
int
shl
sbb
inc
jl
movsl
cwtl
mov
jp
jo
out
out
xor
pusha
fwait
and
ds
cld
xor
in
xchg
pop
sti
adc
cmp
xorb
or
mov
das
cmp
pop
xor
rol
jecxz
or
push
das
jge
xchg
idivb
jecxz
pop
das
and
jne
call
pusha
or
ds
int3
adc
sbb
repz
push
out
shrl
fyl2x
sub
js
in
jbe
movsl
add
dec
shl
fnstsw
mov
cs
cmp
sub
fimuls
icebp
loop
arpl
push
add
out
ds
subb
mov
incb
jns
aaa
xchg
leave
test
lcall
sarl
adc
int
nop
ds
cmc
push
out
jne
jle
pop
push
dec
data16
icebp
scas
mov
mov
dec
cmpsb
das
or
lret
mov
test
iret
stc
mov
icebp
stos
jmp
add
mov
cmpsb
std
xchg
cmpsb
inc
pop
xor
aaa
loopne
lods
imul
inc
pusha
fcmovnb
daa
je
adc
mov
pop
ljmp
in
or
mov
ljmp
int
lahf
jno
gs
js
push
fcoml
dec
enter
lret
xor
insl
and
mov
xor
leave
or
xchg
fcomi
jno
mov
sbb
mov
std
push
and
mov
into
out
mov
mov
mov
test
lods
cli
icebp
mov
add
xchg
loope
and
rcrl
push
or
jns
cmp
cmp
cwtl
mov
shl
jle
aam
nop
inc
jnp
push
mov
cmpsl
cmpsl
dec
mov
lds
adc
outsb
mov
add
add
aam
shrl
ds
push
sbb
daa
pop
test
enter
jne
sub
inc
pop
pop
hlt
push
imul
jmp
test
ficoms
addr16
sbb
jle
das
mov
jl
pushf
outsb
dec
loopne
push
insb
adc
push
sub
shl
lret
sbb
jl
sub
dec
dec
int3
outsb
pop
mov
sti
lret
push
jge
or
and
sub
cmpsb
jnp
jge
cmp
stc
neg
pop
mov
inc
xchg
fwait
xor
enter
out
mov
xchg
mov
pop
inc
in
jne
add
mov
lret
sub
nop
jb
inc
ret
xor
call
xlat
jle
xor
leave
or
in
inc
out
lods
push
insb
xor
jo
dec
push
jae
std
mov
fsubl
push
sub
iret
test
mov
jecxz
test
mov
mov
xchg
xchg
mov
cmp
sbb
loopne
std
lret
push
test
cltd
jecxz
mov
xchg
adcb
dec
cwtl
das
popf
stos
adc
fldenv
jle
dec
cmp
mov
pop
mov
jae
pusha
mov
xor
add
pop
pushf
push
xchg
in
outsb
xchg
push
insb
cmpsl
iret
subps
jp
lods
jno
fdivrp
mov
dec
mov
xor
fisubrl
sbb
rcrb
xor
ljmp
hlt
cld
fidivs
repz
inc
cmp
sarb
icebp
push
in
cld
in
lods
out
cmp
adc
jge
mov
or
xor
mov
lods
xchg
jns
jg
xchg
sub
loope
pop
xor
stos
and
ja
js
xchg
sub
adc
pushf
pop
adc
rol
sti
and
data16
inc
jg
fldenv
xor
out
push
int
repz
xor
push
adc
je
insb
pusha
mov
nop
dec
mov
mov
mov
adc
je
subb
add
jne
push
xor
fstpt
negb
jno
in
sbbl
mov
loopne
dec
enter
aas
pop
xor
or
insb
sub
fidivrs
into
out
pusha
jno
inc
leave
pusha
pop
bound
js
fdiv
fisubs
test
mov
mov
cmpsl
push
int3
cmpsb
push
push
das
push
pop
aas
in
lods
xchg
fisttpll
xor
imul
fs
cltd
std
xor
cld
mov
jge
outsb
xchg
xor
push
mov
jb
xchg
add
mov
xchg
pop
cmpsb
je
push
stc
mov
call
or
mov
dec
mov
je
stos
mov
pop
jp
add
fnsave
lods
fs
sahf
stc
fcoml
sub
mov
ja
xchg
or
adc
inc
jl
dec
subl
fidivrl
lret
dec
xchg
jbe
idivl
roll
leave
pop
cmp
cmp
lods
pause
xchg
pusha
mov
xor
and
fstp
les
lahf
outsl
pop
push
hlt
xchg
push
xor
loopne
and
dec
call
push
sbb
lods
pop
movsl
in
jmp
insb
shlb
jecxz
mov
push
movsb
scas
mov
sub
aam
lds
int3
adc
stc
hlt
inc
jae
dec
lret
inc
shl
repnz
mov
jno
push
popf
adc
and
mov
xchg
dec
les
push
cmpsl
shlb
cmp
fisubl
xchg
mov
mov
in
cmp
ja
divl
push
nop
rorb
imul
push
push
mov
lret
rep
in
pop
xchg
lods
es
loopne
shrb
outsl
out
mov
rorb
jnp
dec
sub
ja
push
push
sbb
cli
pop
inc
cmp
out
jae
xor
lcall
inc
jp
lds
pop
popf
inc
mov
cmp
cwtl
sbb
adc
ja
sbb
xchg
lahf
push
aam
inc
xchg
scas
xor
xchg
fmul
frstor
divl
mov
or
jns
popf
xor
push
jl
cld
mov
lahf
xchg
clc
stos
mov
test
lds
adc
mov
nop
andb
movsb
pop
cmc
into
fsubrl
pusha
ficompl
or
lret
adc
xchg
sub
and
dec
xchg
into
bound
mov
and
int
cwtl
fs
jl
adc
add
mov
rcrl
gs
int3
mov
push
mov
les
inc
sub
cmp
cmp
fbld
mov
ds
adc
arpl
dec
inc
push
or
mov
das
cmp
sbb
pop
add
cmp
in
sub
dec
push
das
loop
add
test
jg
testl
call
rolb
scas
inc
mov
mov
push
stc
ja
add
je
add
jbe
or
mov
adc
fs
aaa
jg
imul
xor
cmp
bound
inc
fwait
scas
icebp
push
iret
lahf
push
jl
imul
pop
xor
fistl
int3
push
mov
cmpl
push
mov
mov
mov
das
adcb
sbb
sti
jle
fidivrl
outsl
add
push
movsl
sub
xor
pop
out
add
or
inc
icebp
pop
cmp
outsl
mov
fildl
jecxz
in
mov
test
aaa
push
or
push
dec
jno
mov
adc
je
shlb
lret
inc
or
add
push
test
cltd
cmp
dec
out
push
xor
notl
cmp
dec
inc
insb
xchg
nop
inc
je
aam
or
cli
mov
mov
shlb
add
sub
jns
scas
fstps
js
mov
insl
jle
cwtl
iret
call
mov
mov
es
inc
pushf
xchg
push
mov
mov
mov
jns
cmp
mov
inc
sbb
cwtl
inc
cmpsb
inc
mov
imul
movsl
or
lods
jle
add
adcb
dec
mov
imul
jp
loopne
push
enter
mov
jns
cmp
out
into
xor
xor
mov
jb
imul
loope
hlt
aaa
loop
lret
sub
cltd
loop
out
int3
int3
inc
cmp
mov
mov
repz
inc
inc
push
aas
neg
clc
inc
ja
xor
fcom
cmp
lret
mov
fcoms
pop
out
jmp
xor
jge
test
sbb
push
xchg
push
push
push
stos
pusha
hlt
loopne
pop
arpl
js
outsb
movsl
rolb
clc
adc
push
ja
dec
mov
cmpsl
rolb
dec
and
ja
push
in
jb
sub
sbb
sub
jl
daa
popa
push
mov
imul
ja
nop
in
inc
out
pop
and
jne
outsl
out
shl
mov
adc
pop
inc
rcrb
push
adc
jne
pop
popa
sub
pop
pop
fiaddl
das
xlat
addr16
ljmp
cmpsb
in
icebp
dec
jns
inc
test
pop
rcll
bound
pop
mov
or
inc
push
mov
cmp
in
xchg
jge
xchg
xorb
xchg
jmp
mov
adc
mov
mov
mov
add
ss
shrl
mov
push
pop
jo
adc
das
pop
dec
idivb
sbb
rclb
sub
cwtl
stos
ljmp
jns
mov
fisttpl
adc
hlt
loope
mov
or
dec
mov
inc
sub
and
daa
loopne
or
xor
or
mov
inc
daa
cmp
shr
xchg
out
push
push
push
mov
imul
pop
pusha
add
jne
add
and
call
sti
shlb
dec
loop
shrl
or
pusha
inc
stc
hlt
xor
sbb
iret
push
sbb
fldenv
sbb
mov
test
xchg
ret
aas
lret
or
loopne
insl
inc
add
in
test
jno
ljmp
test
sbb
jae
cmp
cli
add
pop
mov
push
jge
xchg
lret
lahf
sbb
pop
mov
xor
xor
iret
loopne
lahf
push
jg
jne
jge
push
adc
mov
mov
std
mov
cmp
pop
pop
cmp
mov
pop
out
adc
inc
scas
aad
rcrb
or
scas
out
daa
cwtl
ljmp
xor
xchg
inc
mov
andps
sbb
xorl
test
aad
mov
mov
pop
pop
sbb
or
mov
dec
stc
bound
lret
lahf
push
pop
movsb
outsb
xchg
jne
fwait
lods
push
mov
rolb
lahf
push
cwtl
movsl
movsb
int3
mov
ljmp
daa
popf
int
icebp
lcall
and
jns
push
rcl
test
call
push
arpl
daa
out
scas
jl
outsb
mov
mov
ret
jbe
call
pop
hlt
out
les
shlb
lret
mov
mov
or
push
jo
jne
arpl
lcall
mov
xor
fbstp
or
sbb
inc
xacquire
sahf
push
aaa
xor
mov
addr16
or
mov
pop
arpl
mov
outsb
lahf
shll
aam
scas
add
mov
mov
test
mov
push
ror
outsb
cmc
into
in
cmp
adc
or
pop
mov
bound
push
js
mov
and
push
xchg
add
xchg
jge
cmpxchg
cmpsl
loop
popf
sub
mov
imul
sbb
or
inc
ss
mov
cld
mov
jl
std
lock
pop
cld
scas
sub
mov
pop
shrd
add
cs
push
add
sbb
fstp
sub
cltd
cmp
sbb
lret
push
or
cmc
inc
inc
dec
dec
inc
jge
bound
push
pushf
jo
stos
mov
push
sti
sub
test
lret
sbb
adc
adc
inc
lahf
adc
nop
add
sbbl
and
pop
cmpsl
add
cmpsb
adc
push
sub
bound
clc
lret
cmp
loop
es
xchg
cmpsl
insb
dec
adc
inc
movsb
sahf
int3
xchg
push
push
pop
nop
and
ret
daa
and
loopne
push
and
fmull
mov
cmp
outsl
add
mov
scas
lods
into
dec
add
pop
mov
ljmp
xor
push
xlat
sub
xchg
repz
push
repnz
insb
stos
shrl
sub
jge
testb
out
mov
cmp
xchg
sub
lock
jb
add
mov
mov
arpl
xchg
jg
arpl
jne
mov
cmc
testl
push
or
clc
cmpl
jmp
xchg
push
dec
inc
cmp
cmovbe
insl
in
xlat
repnz
mov
dec
sbb
push
repnz
push
mov
popf
cmp
add
inc
sub
rcl
andb
jg
jmp
popf
xor
cmp
test
imul
ror
dec
mov
push
in
jno
shll
ret
jle
insl
pop
pop
and
leave
xchg
cmpl
aaa
das
cmp
or
push
repnz
add
lock
push
sti
lret
lcall
mov
cmp
dec
fdivs
mov
lods
das
jmp
out
cli
jns
inc
bound
mov
shll
aaa
xchg
and
and
jae
pop
movsb
xor
pusha
and
inc
push
mov
arpl
popf
mov
fmuls
cli
inc
and
dec
sbb
movsl
ret
int
inc
clc
add
adc
das
mov
insl
mov
sub
fcmovne
or
movb
mov
enter
adc
adc
jo
or
xorb
cmpl
aam
test
xchg
and
out
inc
inc
sti
adc
in
inc
daa
pop
or
cmp
testl
lcall
push
and
sbb
mov
in
cmp
loopne
cmpsl
add
outsb
mov
repnz
mov
add
imulb
mov
into
mov
nop
inc
jg
out
cs
xchg
pop
xor
fists
xorl
test
cli
xchg
test
add
sbb
push
inc
cli
jb
stos
adc
push
jno
js
repz
jecxz
int3
in
cmp
mov
xchg
fildl
les
fisubs
loop
mov
jp
mov
inc
jne
test
cmp
mov
xchg
jl
sbb
push
lds
add
jmp
mov
xchg
shlb
cltd
sub
pop
xchg
fs
cmp
lods
ficoml
stc
xchg
clc
stc
push
push
shll
jle
hlt
cmp
shll
jg
cli
dec
clc
pop
ljmp
ss
jl
or
test
dec
mov
inc
les
cs
pop
fsubr
xchg
lock
xlat
mov
mov
fadds
cmpsl
xchg
cli
dec
xor
xchg
mov
pop
mov
test
into
inc
pmuludq
sbb
dec
jne
scas
ds
loopne
push
mov
and
sub
xor
mov
loop
push
aaa
iret
sub
mov
fs
push
aaa
sbb
pop
jo
or
std
out
daa
mov
lahf
lret
mov
mov
mov
pushf
ret
add
mov
andb
enter
push
adc
mov
pop
sub
and
and
push
adc
sub
out
rclb
mov
rolb
cmp
ror
pop
dec
fstpl
xor
mov
xchg
repz
jb,pn
daa
jl
and
mov
jp
and
hlt
or
cli
jnp
cli
scas
inc
fnstcw
jnp
inc
xor
out
mov
dec
pop
inc
adc
sbb
and
inc
adc
stos
pop
aad
sbb
je
dec
shrb
scas
pushf
std
cmp
pushf
lea
dec
movsb
out
lock
cmc
notb
insb
mov
adc
sti
xchg
push
sbb
fiaddl
jmp
dec
pop
mov
mov
mov
bound
fwait
test
in
pop
inc
xchg
cmpsb
aaa
adc
mov
jnp
sbb
call
daa
arpl
push
stos
pop
les
std
mov
fwait
sbb
jnp
call
addr16
jle
sub
xchg
mov
mov
filds
mov
mov
int3
mov
sub
fsubrl
repnz
push
les
pop
jns
mov
test
jno
lds
movsl
pop
or
mov
pusha
xchg
lcall
sub
popa
lahf
in
fidivrs
xor
lret
push
out
ret
xchg
hlt
push
data16
jmp
mov
xchg
js
outsb
mov
fmull
cmp
cmp
sbb
cmp
out
push
and
js
ss
pushf
xor
clc
inc
pop
shll
inc
test
dec
mov
push
subb
adc
lds
fcmovne
ds
push
mov
movsb
in
mov
negl
push
jg
jmp
lea
lret
cmp
sub
adc
mov
es
pop
mov
dec
mov
or
mov
stos
mov
add
fidivl
mov
jg
cmp
jge
jmp
stos
cwtl
sbb
add
adc
xchg
mov
mov
insl
fsub
mov
es
mov
test
mov
cld
testb
out
sbbl
adc
test
rolb
js
out
cmp
pop
push
adcl
sbb
cmp
mov
mov
cmp
xorl
sbb
xchg
sar
mov
xchg
dec
out
xor
xchg
push
and
fdivr
mov
adc
test
jmp
jl
mov
xchg
cmp
push
inc
cmp
sbb
inc
xor
fldlg2
data16
mov
sub
mov
push
in
jg
imul
xchg
cmp
mov
shl
cmp
jno
outsb
mov
sti
pop
in
xor
add
ss
rol
popf
faddl
jbe
mov
pop
fpatan
jne
push
test
lock
push
sub
lods
mov
pop
cmc
ret
sti
inc
add
aaa
sub
pop
dec
inc
mov
xor
adc
in
in
mov
jns
push
mov
std
out
enter
xor
insl
es
addb
addr16
fisubrs
add
mov
lock
push
loope
jg
decl
stc
push
mulb
loope
pop
fiaddl
push
rcr
and
out
loope
dec
dec
dec
mov
int
roll
xor
push
sti
adc
jle
mov
pusha
or
mov
and
add
dec
adc
push
ljmp
addb
adcb
outsl
dec
jl
ficomps
fs
mov
mov
out
scas
mov
jae
scas
fs
std
jmp
ljmp
adc
fcomip
minps
cmp
test
inc
lds
popf
pop
mov
lds
push
xchg
push
jg
lds
jmp
lret
std
sub
dec
cmp
lods
je
xchg
add
arpl
xchg
outsl
sti
xor
repz
fs
push
pop
xchg
aas
mov
dec
into
scas
ret
xchg
and
stos
dec
mov
mov
sarb
adc
push
xchg
je
aas
sub
push
lock
test
icebp
add
shrl
jbe
sbb
insb
mov
adc
lahf
push
dec
xlat
and
test
ss
xor
loope
xchg
mov
test
or
popf
sbbb
loop
in
jmp
mov
ret
sub
rcr
adc
pop
icebp
adc
xchg
jb
adc
xchg
cmp
incl
js
ljmp
lods
adc
jmp
insl
or
mov
imul
sar
xor
aam
arpl
pop
stos
loope
jmp
sarl
xor
xchg
pop
mov
fcomp
pop
mov
push
int3
lahf
xchg
das
ljmp
sub
das
cmp
lret
mov
call
repnz
cmp
jns
add
mov
incb
lods
ficomps
gs
or
addr16
jb
cmp
xor
test
fstp
pop
mov
cmc
pop
adc
ficoml
je
rcr
scas
push
mov
rcl
jp
dec
mov
ret
dec
mov
push
repz
inc
cli
fdivs
lods
or
mov
outsl
dec
sbb
xorb
in
inc
adc
adc
dec
jp
push
mov
icebp
jae
or
in
inc
test
dec
jb
inc
mov
pusha
icebp
xchg
pop
ja
jo
iret
lret
pop
movsb
sar
out
imul
mov
mov
jle
push
int
cltd
sbb
cmpb
mov
fnstsw
or
out
push
mov
push
inc
inc
mov
sbb
inc
adc
outsl
mov
test
push
sbbb
mov
pop
aaa
lahf
iret
fnstsw
xchg
addb
js
and
adcl
mov
jnp
push
lock
daa
xchg
imul
xchg
xchg
rsqrtps
aam
add
and
mov
fnstcw
ror
inc
jbe
push
lahf
outsb
or
mov
adc
fists
loop
je
mov
add
jle
js
dec
movsl
push
imul
adc
sub
bound
movsb
cmp
aad
jmp
jbe
mov
mov
xlat
xchg
xor
cwtl
and
and
sbb
pop
in
push
add
and
or
das
add
imul
push
xor
repz
pop
push
inc
les
js
ret
popl
xchg
inc
int3
iret
and
insb
mov
xchg
lock
aaa
and
scas
arpl
ljmp
incl
push
pusha
or
aas
rcrl
stos
sub
sbb
out
pop
and
sti
daa
test
imul
bound
mov
aad
pop
xchg
pop
mov
outsb
hlt
xor
mov
mov
lcall
data16
push
add
push
add
iret
out
push
movsl
xor
xor
xchg
mov
lea
iret
mov
pop
add
sub
scas
dec
jmp
mov
cmp
xchg
and
mov
push
and
in
push
sarb
inc
cltd
das
mov
sbb
push
lods
adc
xchg
push
nop
xor
clc
fwait
mov
adc
lods
nop
sahf
xchg
inc
orb
xchg
sub
mov
ss
stos
inc
cmp
sub
or
mov
pop
or
pop
aaa
cmp
sub
insb
fcmovbe
imul
stos
addl
popf
jl
daa
and
ss
in
arpl
mov
cli
push
loopne
mov
sub
and
call
test
push
repz
xor
mov
out
in
into
lcall
cmp
xchg
cmp
fsubs
test
sbb
test
inc
xchg
and
jo
xchg
popa
out
ret
inc
icebp
out
mov
pusha
cmp
mov
and
popf
xlat
jae,pn
std
iret
sbb
xchg
pushf
push
xchg
sbb
inc
xorb
sub
mov
loope
jmp
scas
repnz
and
loope
mov
jno
inc
cwtl
lock
mov
push
lea
mov
xor
sarb
inc
dec
aaa
add
and
sbb
inc
push
mov
pop
dec
pop
out
add
loop
test
cmp
push
scas
push
stos
sti
push
xor
inc
js
pop
push
jbe
hlt
mov
dec
sub
xor
mov
jmp
fwait
and
pop
cmp
xchg
mov
outsl
sub
aad
sub
popa
adc
and
sbb
sbb
fisubl
or
sub
jbe
pop
jecxz
loopne
out
xchg
mov
or
cwtl
cmp
xor
push
dec
add
in
adc
adc
dec
scas
fistps
in
jnp
mov
pop
das
loope
push
jae
testb
pop
pop
mov
cli
lds
jbe
in
mov
lods
pop
shr
imul
repnz
iret
icebp
mov
inc
dec
jp
insb
inc
cmp
loopne
js
movmskps
inc
loopne
pusha
push
and
loopne
push
aam
subb
mov
fcmovb
mov
subb
out
addr16
mov
jmp
xchg
lret
and
hlt
push
sbbl
cmpl
fmull
mov
jbe
mov
stos
jno
iret
adcl
cmp
jle
mov
insb
xchg
test
decb
pop
adcl
in
movsl
or
cmp
lock
xorb
sar
mov
mov
mov
mov
adc
xchg
outsl
adc
push
mov
fcmovnbe
add
add
add
xor
call
call
mov
sbb
xor
cmpsl
clc
jae
push
lcall
into
dec
jns
outsb
mov
ja
add
xor
jb
imul
mov
mov
sbb
gs
mov
cmp
popf
mov
sub
mov
pusha
mov
mov
mov
jp
aam
pop
xchg
mov
lahf
pop
inc
fs
ljmp
add
mov
mov
dec
inc
test
out
clc
jge
mov
sti
jne
jecxz
outsb
in
rorl
sbb
test
push
inc
dec
leave
cmp
or
or
inc
imul
jno
shlb
int
sbb
ret
std
xor
ret
push
leave
in
mov
adc
or
jns
arpl
aad
sbb
lcall
decl
sub
rcl
cmp
push
roll
addl
ljmp
loope
mov
call
and
icebp
fimull
add
sti
xchg
fwait
push
jmp
addl
insb
pusha
cmc
dec
jp
jecxz
push
ret
ret
icebp
insl
mov
test
jle
jmp
dec
fnstsw
out
dec
or
lcall
and
pushf
daa
pop
mov
scas
loop
push
push
bound
lds
sbb
jmp
cmp
fiadds
xor
out
std
lcall
insb
fimuls
lcallw
in
fimull
inc
rcrl
hlt
or
pusha
popa
outsl
and
stos
lcall
sub
fnstenv
sbbb
scas
les
and
es
xor
in
pushf
into
outsl
stc
lea
xchg
add
mov
mov
cmpsl
push
push
cmp
incb
and
data16
mov
jb
mov
sub
rorb
dec
leave
or
icebp
in
jb
icebp
repnz
push
mov
or
out
movsl
rcr
xchg
cli
in
add
call
jb
sahf
into
add
js
popa
push
add
or
outsl
cmc
xor
fisttpll
jg
or
mov
or
mov
jae
sub
sub
fstpt
mov
mov
and
sti
gs
out
mov
mov
aas
mov
les
in
pushf
pop
mov
scas
mov
dec
adc
push
out
fidivs
movsb
nop
add
outsl
push
push
into
shlb
mov
test
or
in
xlat
ret
xchg
mov
int
mulb
push
inc
pop
mov
add
push
or
adc
jmp
scas
int3
and
stos
sahf
jns
je
xlat
int3
in
mov
jge
push
fstps
ss
addr16
stc
pop
jns
lods
dec
adc
or
adc
and
sub
xlat
das
aam
imul
cmp
aad
inc
cli
repz
push
cmpsl
inc
mov
or
inc
xchg
pop
rcrb
clc
loope
jo
scas
fs
cmpsb
cmpsl
sub
fildl
mov
data16
leave
outsb
xlat
jg
xor
shlb
xchg
mov
movsl
adc
shrl
cltd
addb
inc
add
pop
xor
push
adc
enter
push
scas
cmp
jl
sbb
or
fnstcw
pop
adc
add
add
mov
cmp
push
cmp
dec
popa
lock
push
pop
mov
push
mov
inc
cmp
popf
hlt
and
sub
cltd
inc
pop
push
sub
adc
sbb
sbb
les
les
xlat
rcrb
mov
sbb
cld
pop
inc
notl
and
add
xchg
dec
fdivs
js
mov
and
sti
adc
imul
jae
std
data16
mov
insb
push
in
in
cmp
mov
dec
pushf
andl
or
and
daa
shr
out
repnz
fwait
shlb
lahf
pop
rorb
jge,pn
ss
and
and
popf
jge
data16
adc
push
push
jb
dec
iret
mov
cmp
inc
inc
or
pop
add
call
push
ja
inc
bound
mov
aam
xchg
sbb
inc
mov
cld
into
mov
inc
icebp
out
cmpsl
adc
and
int3
mov
adc
pop
inc
xor
bound
fdivrs
aas
loop
adc
aaa
jbe
scas
mov
mov
icebp
and
xlat
or
xor
mov
lret
in
fiaddl
into
inc
add
jmp
enter
xor
sub
stc
mov
push
mov
inc
xlat
jmp
lods
andl
adc
mov
aas
sbb
jl
cmpl
sbb
pusha
mov
sar
add
xor
mov
xor
ss
mov
dec
mov
xchg
adc
cmp
int
pop
pop
stos
or
cwtl
mov
mov
xchg
xor
push
popa
loop
push
movsb
sub
or
mov
adc
shlb
aad
adc
pop
adc
mov
mov
push
push
jl
dec
and
pop
enter
jae
push
outsb
push
pop
call
sub
inc
lock
ror
add
das
lahf
js
aaa
jmp
and
dec
shl
popa
xchg
addr16
add
pop
leave
iret
pop
sarb
or
ret
lods
dec
pop
and
int
dec
notl
ficoml
push
or
scas
mov
clc
in
xchg
es
lret
xlat
scas
inc
or
and
push
stos
push
loop
pop
outsb
xor
mov
pop
or
add
or
add
lret
add
push
loope
jg
out
push
test
add
adc
add
dec
insl
inc
push
cmp
imulb
pop
add
and
sub
mov
adc
mov
mull
test
cmpsb
mov
mov
xchg
outsl
push
lahf
pop
mov
sbbb
and
lret
sub
or
cmpsl
sbb
push
cltd
jo
cmp
mov
pop
dec
test
push
mov
ds
mov
gs
rorl
int3
xchg
pop
addb
ret
dec
lret
push
cmp
stos
push
cmpb
push
ljmp
jl
aam
clc
mov
push
rolb
mov
scas
rolb
mov
lahf
repnz
lods
or
adc
fisubs
sub
jb
shlb
fwait
adc
sbb
pop
int
lds
rolb
mov
add
in
in
sbb
loopne
insb
adc
xor
mov
mov
inc
mov
iret
icebp
push
je
or
dec
call
push
pusha
sub
imull
push
sbb
dec
mulb
test
mov
xchg
inc
and
enter
fnsave
repz
arpl
into
inc
sbbl
test
inc
pop
popf
pop
lock
push
fyl2x
movsl
mov
inc
ret
jge
aam
punpckldq
and
fsubr
mov
test
push
aaa
into
int
xchg
dec
xchg
add
sar
movsl
ds
pop
sbb
testb
rcrb
mov
cmpsl
jp
jo
faddl
into
bound
scas
mov
data16
sbb
pop
dec
mov
outsb
push
mov
cmp
ret
arpl
aaa
mov
pop
dec
inc
xor
add
mov
mov
cmp
inc
mov
nop
sbb
fs
stos
arpl
push
pop
cltd
popf
mov
xor
mov
iret
cli
rorl
xlat
lret
sti
adc
lret
rorl
inc
mov
rclb
aas
or
mov
sahf
aaa
mov
jg
xchg
fsubrl
stos
push
sub
add
mov
in
aas
add
mov
stos
pop
xor
push
push
sbbl
fsubl
call
adc
int3
or
jne
pop
sub
adc
fcmovbe
pop
lea
roll
rol
lods
fwait
dec
stc
mov
hlt
scas
fstl
cmpsb
out
pusha
call
test
negl
add
ret
inc
out
stos
shrl
and
mov
ds
aas
je
adc
inc
mov
or
push
and
sbb
cli
fldenv
rorb
or
fs
icebp
imul
inc
mov
or
lds
cmpsl
jmp
sub
or
push
mov
dec
js
popf
movsb
cs
cmpb
jle
cmp
jmp
sahf
clc
clc
dec
in
les
or
and
jle
jb
sbbl
dec
inc
sub
out
jb
lods
mov
neg
xor
xor
daa
data16
rorl
stos
rcl
fcmovu
cmp
xchg
push
jg
cmp
inc
loopne
aas
inc
int
inc
pop
pop
jo
or
xor
jnp
mov
cmp
mov
xchg
dec
push
xchg
jecxz
dec
imul
fs
mov
inc
outsl
xchg
cmc
test
add
cmp
add
lods
push
xchg
xchg
mov
mov
sub
fwait
popa
outsl
es
lret
ret
into
popf
jnp
jae
or
and
es
outsl
imul
movsb
loope
pop
jne
dec
lret
sahf
scas
out
dec
hlt
inc
movsl
cmp
int3
sahf
mov
sub
sub
clc
idiv
cmp
mov
dec
sti
fcompl
xchg
push
and
sbb
lcall
sbb
pop
jb
sub
and
cvtps2pd
mov
mov
inc
jae
dec
adc
cmc
jg
repnz
sbb
mov
and
rclb
clc
leave
dec
adcl
lods
and
push
int
clc
rep
lock
jge
dec
out
jae
aas
xchg
stos
mov
call
adc
mov
enter
mov
inc
add
jns
xchg
scas
sarl
ret
dec
fmul
ret
lods
lds
or
mov
push
mov
jge
add
jecxz
adc
sbb
gs
out
xlat
test
push
insl
cmp
push
test
loope
cmp
iret
andb
jb
inc
ljmp
nop
jo
inc
push
in
inc
fists
int
js
sub
addr16
xor
push
sti
aad
imul
add
ja
pop
adc
stos
cmp
fnsave
hlt
insl
stc
cmp
cmp
div
out
mov
stos
ret
adc
jo
arpl
icebp
add
call
mov
or
add
ljmp
push
loope
fwait
addl
popa
les
ret
and
sar
nop
xor
mov
push
inc
or
dec
arpl
leave
lret
pop
mov
fsubr
mov
enter
movsl
ret
cmp
fwait
je
faddp
scas
mov
jge
sub
call
inc
cmpsl
cmc
inc
fdivl
push
pop
push
mov
jp
dec
ja
push
mov
lea
negl
or
cmc
or
jp
cltd
mov
xchg
es
dec
rcrl
xchg
sub
inc
sbb
cli
dec
push
cs
pop
nop
out
insb
inc
cmpsl
leave
in
xchg
test
loop
sbb
xchg
stos
cltd
inc
leave
frstor
sbb
mov
push
sti
sbb
cmp
or
jp
in
das
addr16
pop
sub
nop
cltd
mov
or
adc
sbb
pop
loop
jecxz
xor
pop
test
sbb
packuswb
data16
cmp
loopne
test
pusha
or
xchg
lcall
or
mov
xchg
clc
and
movsl
dec
sub
aam
icebp
shrb
popa
bound
es
cmp
mov
cs
fs
in
sbbb
mov
push
xchg
arpl
hlt
mov
shlb
out
mov
inc
push
or
js
loopne
cmc
test
adc
pop
or
in
call
adc
mov
inc
inc
xor
push
xchg
cwtl
pop
sub
push
add
xor
jbe
aaa
pusha
jno
add
or
lods
sub
xchg
add
dec
jne
rolb
jnp
cli
dec
inc
pop
fadds
sbb
xchg
or
fcmovbe
popl
add
push
mov
xchg
out
sbb
clc
out
adc
mov
ss
mov
out
out
inc
cmp
dec
insb
stos
adc
inc
loopne
adc
mov
clc
inc
xlat
mov
and
dec
adc
mov
mov
push
dec
adc
in
gs
out
les
xchg
cmpsb
ficomps
addr16
push
mov
xor
push
pop
cs
sbb
sahf
and
mov
mov
or
adc
sbb
or
dec
lods
sbb
add
addr16
jle
sbb
mov
leave
addb
and
addr16
jmp
add
ss
lea
mov
xchg
push
sub
test
mov
ss
mov
fdivrl
jae
nop
ljmp
inc
cmpsl
adc
xor
aad
mov
jg
out
pop
scas
fisubrl
ret
outsb
pop
int3
mov
in
lret
lods
pop
pop
push
dec
leave
scas
sbb
shlw
jg
xchg
mov
dec
push
xor
xor
out
leave
rcrl
repz
gs
adc
dec
pop
push
pop
xchg
push
xchg
daa
or
or
notl
stos
adc
mov
and
test
add
jnp
repz
sub
shll
jb
pop
stos
std
cmp
fbstp
test
push
inc
cld
popf
call
addr16
lret
dec
lcall
and
inc
ret
pop
push
mov
test
enter
and
je
dec
pop
jo
fmull
dec
out
repz
push
mov
push
testb
ret
loope
shlb
inc
mov
mov
push
sub
aas
cmp
push
dec
pusha
push
mov
cs
imul
lods
stos
mov
sub
iret
cmpl
dec
mov
mov
mov
jbe
push
jae
pop
clc
aas
mov
jmp
and
cli
scas
and
clc
inc
mov
mov
push
cmpl
cmp
out
sub
je
std
mov
xchg
adc
jns
dec
adc
pop
inc
inc
dec
jmp
cmpsl
cmp
ljmp
lock
sbb
fidivrl
inc
cmp
adc
xchg
mov
and
js
pusha
in
cli
xor
lcall
test
jmp
lds
inc
lcall
or
push
aad
ds
cmc
es
push
sub
jl
and
pop
jo
add
and
lods
push
jge
sbb
sbb
jo
inc
sbb
push
xor
ja
jmp
sbb
pop
inc
out
sub
shrb
sbb
add
mov
adc
push
imull
inc
aas
and
cmpsb
xrstors
sbbl
js
lods
and
pop
pop
xchg
and
add
xlat
push
cmpsb
in
out
pusha
test
lcall
out
inc
add
sbb
jns
cmpsb
mov
jb
imul
xor
cld
cli
cs
int3
lcall
mov
xchg
in
loop
jnp
and
jne
jecxz
movsl
mov
fdivs
cmp
mov
enter
outsb
adc
sub
push
push
cld
popa
push
pop
xchg
push
pop
and
ljmp
rolb
clc
imul
in
lret
lret
sbb
push
inc
and
inc
mov
sub
xchg
enter
scas
in
into
gs
lods
inc
imul
mov
call
iret
cld
inc
sahf
ret
add
push
hlt
adc
in
cmpsl
divl
outsl
sbb
xor
adcl
and
and
and
and
insb
sahf
mov
adc
sbb
sub
shr
cmp
stos
jle
cmc
fnstenv
aam
mov
mov
jl
scas
lahf
faddl
cmpsb
repnz
out
outsb
loopne
inc
and
lea
andl
pop
dec
aam
int
fimuls
cmp
in
call
test
sbb
rcr
rep
inc
xchg
jne
lods
mov
lcall
sub
out
out
fldl
adc
fsts
mov
addb
mov
mov
adcb
pop
outsl
enter
push
xchg
cmp
aam
testl
cmpsl
ret
pop
lea
sub
shlb
add
test
out
inc
jbe
or
jg
push
addl
add
ret
out
aas
mov
jb
xlat
out
xor
lahf
outsl
xlat
xchg
ficoml
push
jmp
subb
push
shlb
mov
movsl
jle
xchg
xor
ljmp
pop
fwait
cmp
sbb
and
sub
push
lea
mov
inc
mov
sti
jb
inc
sti
add
push
xchg
cmp
xor
cmpl
in
dec
xchg
push
dec
mov
dec
pop
adc
lret
aad
xor
pop
aad
xchg
push
xor
ret
push
stos
imul
pop
mov
add
jb
jmp
movsb
mov
test
lret
mov
das
mov
and
dec
rcr
out
sbb
test
push
insb
or
push
test
push
push
push
shlb
pop
fnsave
int
inc
pop
mov
mov
jmp
dec
or
mov
xchg
cmp
sahf
cmp
mov
int3
mov
cmp
rorb
das
fs
cmc
je
movsb
dec
add
stos
test
daa
cs
lods
outsl
sbb
push
sarb
sahf
pop
sub
cmp
and
dec
ja
add
lock
mov
jo
adc
clc
jmp
mov
adc
mov
cmp
pop
inc
les
popf
pop
pop
popa
ljmp
test
les
popa
aaa
aam
jmp
test
fistpl
adc
jp
dec
mov
mov
adc
in
xor
out
mov
jnp
inc
daa
jo
sub
scas
fwait
mov
mov
mov
fistpl
inc
inc
jmp
xchg
popf
shrl
int3
mov
sbb
jb
mov
cltd
mov
mov
pop
sub
outsl
dec
mov
sub
inc
sub
cwtl
test
int
fnsave
mov
adc
xor
xor
or
jge
jo
movsb
movsl
push
xor
sahf
popf
xchg
jg
fidivs
xor
xchg
ret
clc
scas
push
sbb
into
lret
fs
jns
xchg
fmuls
cltd
scas
xchg
outsl
mov
into
out
jno
mov
pop
sbb
mov
push
out
movsl
stos
out
call
mov
adc
ret
aas
int
mov
mov
test
pop
rorl
lret
mov
rorl
sub
sub
lret
leave
xchg
mov
rolb
test
mov
adc
in
mov
scas
xchg
inc
xchg
aad
lea
cld
mov
jb
xchg
sub
imul
addb
in
and
xor
pop
scas
xor
in
or
mov
lea
mov
repz
hlt
sarb
pushf
daa
shlb
ljmp
fistpl
xchg
xchg
imul
pop
aam
nop
mov
and
xor
clc
add
sbb
fwait
out
sub
iret
xchg
pop
jge
mov
mov
xchg
clc
das
mov
int
vmwrite
gs
fwait
outsb
sarl
cmp
imul
test
lea
int
fwait
fcmovnbe
pop
sahf
popf
pop
dec
jno
arpl
sub
push
loope
xchg
pop
push
ljmp
xor
gs
mov
or
bound
xchg
nop/reserved
push
add
mov
push
jae
push
in
and
sub
xchg
ds
add
sbb
fistpl
rcrb
mov
push
test
lahf
mov
ret
xchg
push
mov
lret
add
bound
adc
lret
and
lahf
rclb
out
xor
add
cmp
es
ret
ret
data16
dec
dec
pop
dec
loop
sub
mov
xor
adc
fistps
mov
sahf
cmpsl
mov
lods
idivl
and
inc
cmp
lds
sub
xor
and
xor
pop
adc
xor
fbstp
cmp
and
nop
inc
dec
jns
and
mov
cs
push
sub
xchg
in
fmul
cmpsl
fisubl
mov
aam
xchg
dec
cmc
das
pushf
scas
mov
out
aas
aad
adc
mov
cld
dec
fwait
rorl
incb
mov
pop
dec
mov
imul
jo
add
push
add
and
push
mov
dec
jmp
cmc
pop
sti
inc
pop
divl
jecxz
xor
pushf
cmp
cmp
push
dec
xlat
jb
jo
das
mov
xchg
inc
jmp
push
jmp
pop
into
xlat
push
scas
cmp
outsb
cs
xchg
dec
add
sbb
rcrb
stos
lahf
shr
adcb
adc
xchg
xor
mov
pushf
mov
scas
sbb
repz
inc
adc
mov
add
dec
mov
es
pop
mov
push
push
mov
or
adc
iret
stos
xchg
jge
pop
in
or
clc
mov
cmpsl
call
leave
std
mov
sbb
movsb
inc
or
push
sub
jl
mov
in
sbb
rol
pop
imul
pop
add
dec
xchg
xor
cmp
mov
in
test
lds
pop
sahf
call
adc
pushf
push
popa
mov
movhps
jp
adc
inc
sbb
fisubrs
fnsave
pop
cmp
push
sub
lret
or
xchg
xor
push
adc
imul
dec
xchg
loope
xor
cmp
jp
js
mov
addl
jl
adc
lret
orl
je
dec
push
add
mov
mov
fstpt
cmp
and
xor
fwait
leave
faddl
cmp
push
add
popf
data16
stos
push
loop
mov
jbe
push
or
xor
lahf
scas
adcl
call
aad
mov
addl
xor
and
imul
sbb
xchg
mov
ljmp
mov
push
aam
jns
cmp
xor
cs
clc
loop
mov
push
in
imul
inc
mov
xchg
call
mov
xor
std
mull
mov
movsl
sub
inc
popf
sub
jb
daa
push
add
cltd
lods
sbb
rolb
push
pop
dec
cmp
add
inc
cs
fwait
lcall
out
or
movsb
std
mov
notb
mov
notb
mov
in
mov
jp
cmpsb
xchg
and
add
mov
dec
sbb
sbb
mov
xor
mov
popf
sahf
pop
sbb
popf
mov
jae
mov
sbb
ds
mov
daa
std
jne
loope
xchg
fwait
and
xchg
push
add
in
mov
ror
cmp
inc
jb
mov
out
sub
addr16
out
test
mov
fadds
inc
mov
test
scas
out
test
pop
sbb
sub
jecxz
stos
mov
and
sbb
mov
std
bound
bound
in
das
mov
test
push
push
mov
pop
repnz
shlb
mov
fisttpll
sbb
cmp
inc
in
and
mov
xor
lods
or
mov
sbb
jne
loop
inc
cltd
fsts
mov
out
adc
xchg
or
adc
jnp
je
pop
pop
mov
lods
mov
cld
imul
mov
out
jl
into
sbb
sub
dec
cmc
mov
movb
pop
roll
int3
dec
mov
inc
cmp
add
sub
iret
lods
test
in
int3
xchg
pop
xor
call
xchg
jo
loope
je
movsb
std
inc
push
mov
mov
add
cmp
mov
mov
mov
inc
call
popf
jl
jne
inc
in
hlt
cmpsb
dec
nop
pop
mov
sub
jns
and
add
scas
and
imul
mov
or
inc
xchg
dec
clc
jns
loopne
fs
fwait
int
lods
push
jmp
adc
push
xchg
jmp
es
jnp
cwtl
stos
frstor
fldcw
xchg
inc
cmp
test
pop
leave
xor
ficoms
shrb
sbb
push
test
outsb
addr16
mov
arpl
jns
ss
and
mov
gs
sarl
or
mov
ds
into
test
imul
cli
into
and
outsb
mov
add
sub
adc
xor
test
int3
mov
nop
and
mov
adc
push
inc
inc
sub
adc
push
mov
pop
pop
aad
rolb
jp
out
add
hlt
sarl
ljmp
mov
aam
jb
arpl
jp
pop
pop
xchg
dec
dec
xchg
push
ds
jecxz
jbe
mov
scas
insb
ret
fisubrl
test
les
sbb
cmp
jb
mov
imul
nop
push
in
ds
orl
jno
scas
lcall
mov
aam
loop
lods
or
ret
adc
inc
or
lret
add
into
iret
and
dec
xchg
add
cmp
dec
fnstcw
shr
xor
mov
mov
or
mov
adc
xor
add
lods
cli
stos
sbb
push
jle
mov
mov
xlat
mov
adc
iret
out
pusha
xchg
push
dec
pop
ss
scas
cli
shlb
pop
lock
inc
xchg
setbe
mov
cltd
add
out
movsl
mov
aad
lock
popa
repz
sahf
sbbl
mov
fistpll
add
inc
jns
stos
fprem1
orb
out
mov
testb
push
or
mov
incb
fidivrs
mov
pop
xchg
lds
sbb
adc
cs
sbb
cmp
daa
adc
pop
jo
xchg
mov
mov
clc
inc
and
or
ja
loopne
jp
leave
fsubl
jecxz
add
rolb
jg
xor
js
mov
add
jne
pusha
push
sub
in
push
jg
jno
jo
jecxz
jmp
and
negb
ret
mov
and
xchg
fstps
push
xchg
lds
xchg
aam
scas
fwait
dec
rorl
in
mov
mov
mov
inc
or
cld
mov
clc
mov
sub
adc
in
mov
sub
mov
jl
lret
mov
fsub
js
push
push
push
mov
pop
cld
adc
jmp
add
in
popf
cmc
add
notl
jo
insb
pop
pop
jno
jnp
push
lds
test
ret
jmp
iret
jp
insl
imul
cmp
arpl
inc
lret
movsl
rolb
insl
push
aas
pop
cs
cmp
add
sub
mov
jo
jge
rorl
sbb
push
ds
mov
jns
push
xlat
jbe
xchg
sbb
daa
mov
out
inc
jb
pop
adcl
sbb
pop
add
pop
icebp
outsl
lret
dec
out
fs
cmp
outsl
mov
rcl
cld
adc
scas
push
inc
lea
es
pushf
int
fiaddl
and
pop
les
out
add
das
stos
fistl
subl
pop
jnp
inc
pop
jb
push
clc
jg
jbe
mov
xchg
rol
pop
adc
ljmp
mov
int
push
mov
jno
sub
mov
push
xchg
jb
lods
popl
sub
out
cmpsb
jno
shll
jne
push
and
dec
outsl
and
shrl
cmpsl
and
hlt
in
lret
jns
adc
leave
outsb
mov
xor
fldt
mov
lds
add
test
fbld
cld
mov
out
jnp
cmpsb
mov
ret
xchg
fbld
imul
xchg
pop
xchg
icebp
arpl
xor
dec
aad
dec
or
ds
push
cmp
xor
addl
pushf
outsb
push
sub
jmp
dec
add
cwtl
lahf
dec
jno
sbb
dec
loope
nop
push
dec
shlb
fcomps
stos
mov
mov
sti
fbld
shll
testb
mov
jb
push
cmp
cmp
adc
xor
sahf
sbb
sarl
push
pop
arpl
std
push
jo
fidivrs
cmp
mov
inc
and
fldt
mov
push
adc
cmp
mov
stc
adc
dec
or
loop
jo
cmp
sahf
inc
add
dec
and
lods
loop
adc
dec
mov
int
xor
movsl
sub
pop
dec
iret
jp
ljmp
shrb
les
adc
shlb
outsw
pushf
notl
in
jle
mov
jnp
and
mov
stos
jns
pop
lds
xchg
hlt
icebp
test
stos
xor
jecxz
jmp
stos
jp
sti
cmp
jp
pop
xchg
mov
lds
dec
xchg
pop
adc
lahf
sahf
mov
and
push
inc
or
fs
mov
cli
adc
or
decb
and
sub
dec
hlt
int3
sub
loopne
outsb
mov
scas
rolb
repnz
adc
sarb
test
out
icebp
or
mov
jne
test
loope
test
orb
mov
sub
mov
pop
scas
repnz
sub
icebp
incl
mov
movsb
mov
addr16
imul
inc
mov
in
jg
scas
subl
lret
ljmp
cmpsb
rcl
mov
xchg
jb
das
ret
pushf
jp
outsb
xchg
lret
and
sbbl
jno
out
out
pop
adc
imul
or
xchg
cmp
aas
sarl
sbb
adc
mov
jmp
adc
dec
out
cmpsb
fcomp
or
mov
lret
jno
stc
test
pop
pop
or
xor
jl
fsubrs
loop
adc
fisubrl
loopne
sub
ror
rcrl
cmpsl
jp
xor
pop
xchg
push
iret
je
bnd
mov
mov
in
and
int3
lea
sti
sbb
mov
push
push
and
cmp
enter
mov
insb
in
mov
pop
or
outsb
into
adc
loopne
aas
push
shlb
leave
xorl
test
mov
inc
xchg
mov
daa
push
inc
and
adcl
push
xor
subl
sbbl
and
mov
lcall
js
xchg
and
sub
mov
imulb
cwtl
fsub
pop
test
in
addr16
movsb
fsubrp
jecxz
in
dec
mov
adc
dec
insb
data16
fcmove
xor
add
roll
and
hlt
lock
push
and
divb
rcrl
stc
inc
dec
arpl
dec
cmp
push
fldcw
sbb
out
push
ror
call
adc
ja
fs
dec
push
cmc
jle
add
sbb
lret
inc
pop
or
aad
aaa
mov
insl
gs
rcrl
daa
mov
lcall
sti
int
in
and
sbb
and
cmp
fcoms
push
popa
js
aam
xchg
cmpl
in
mov
mov
popf
mov
into
inc
push
mov
jl
cmp
pop
xor
dec
sbb
xchg
add
out
add
push
push
cld
repz
scas
mov
pushf
xor
in
aaa
cmc
lahf
inc
mov
cli
stc
jnp
cwtl
sti
xchg
cmp
stos
sub
ficompl
pop
jg
xor
lret
mov
push
repz
push
in
push
xor
lahf
jp
and
pushf
and
test
out
mov
repz
cltd
jb
into
bound
pushf
pop
adcb
into
cwtl
pop
mov
inc
insl
movsl
mov
push
test
lret
jg
sub
scas
lret
and
enter
cmp
pop
xchg
add
xor
push
fmuls
add
outsb
xchg
popa
lret
pushf
stc
lods
mov
xor
rolb
ret
push
sub
sbb
xchg
and
jno
negb
adc
adc
int3
pop
sbb
mov
out
std
pop
sbb
cmc
sub
cmp
mov
mov
sti
sub
jecxz
jne
out
push
mov
xchg
xchg
jns
out
lcall
jle
inc
sbbb
gs
jecxz
loop
movsb
mov
mov
xchg
xor
ds
pop
dec
lock
sub
mov
addl
lcall
fcmovne
or
fsts
mov
xchg
out
or
sub
mov
dec
push
dec
inc
repnz
nop
xor
popf
loop
pusha
lock
sti
dec
pop
cmpb
mov
mov
lret
mov
iret
push
sahf
jl
nop
nop
cli
pop
cwtl
mov
pop
pop
push
push
xchg
pop
add
jmp
rorl
out
cs
imul
xchg
fstl
jno
lret
xchg
fdivrp
push
iret
mov
arpl
fildll
xor
test
pop
lods
jns
pop
aam
cmp
mov
lret
les
push
xor
scas
push
outsb
into
test
ja
test
or
sub
sbb
inc
push
pop
adc
adc
pop
lret
inc
ret
imul
movsl
int3
into
dec
and
bound
pop
mov
outsl
pop
or
daa
pop
pop
inc
push
pop
test
mov
mov
push
outsb
jmp
xchg
inc
or
loope
inc
cltd
in
sbb
frstor
add
iret
or
pop
mov
aam
popa
mov
pop
repnz
mov
sub
jnp
jns
jg
cmp
aas
lret
add
lahf
push
push
fs
push
jnp
mov
icebp
dec
sub
fdivrs
sub
inc
add
daa
int3
xlat
mov
cmc
cwtl
mov
jbe
test
add
loopne
xchg
mov
mov
sub
popa
jp
sbb
int
push
addr16
outsb
jns
movsb
mov
test
jno
pop
push
fwait
xchg
or
lahf
stos
mov
and
imul
or
adc
sbb
cmc
mov
int3
xchg
data16
lret
mov
xor
fs
or
jge
pop
pop
jns
xor
adc
mov
mov
clc
addr16
adc
pop
cli
pop
add
adc
mov
aam
lahf
in
jg
sub
inc
dec
leave
incl
mov
and
aad
add
shlb
pop
adc
inc
movb
outsb
adc
jbe
mov
outsb
mov
pop
dec
fwait
adc
jo
xor
sub
push
xor
xor
fst
test
loope
or
jl
call
test
pop
in
test
inc
cmp
mov
inc
imul
and
popl
add
jle
jbe
scas
mov
ret
jmp
repz
int
daa
inc
adc
int
test
cmp
pushf
mov
ret
lahf
aam
test
push
pop
inc
mov
mov
xor
jb
sti
dec
cmp
fcomi
cmp
outsl
push
aaa
inc
jno
jg
cwtl
lods
and
xor
shlb
aas
jo
inc
and
paddusw
lret
lods
pop
jge
xchg
imul
iret
shlb
adc
jnp
in
dec
imul
sti
aad
sarl
sub
mov
cwtl
xlat
push
call
pop
aaa
jb
lcall
push
dec
adc
lret
cld
fnstcw
out
inc
jae
push
mov
fst
add
pop
mov
sub
out
arpl
mov
fldcw
scas
in
insb
adc
stc
mov
mov
xchg
pop
add
push
mov
mov
daa
jmp
inc
mov
sbb
mov
pushf
push
push
movb
xchg
into
cmp
pop
aaa
int
ss
insb
xor
hlt
cmpb
enter
es
cmpsb
loopne
dec
iret
pop
mov
push
mov
xchg
sahf
pop
fs
or
xchg
repnz
lahf
dec
ja
xchg
dec
mov
iret
jne
shll
rcll
cmp
jmp
mov
fisubrl
repz
inc
adc
lea
jmp
xor
mov
ss
fdivp
mov
pop
outsl
mov
pushf
in
mov
inc
sub
mov
add
sbb
xchg
fdivrl
inc
push
or
dec
out
fwait
dec
call
mov
addr16
ja
dec
daa
out
clc
pop
push
push
inc
stos
popa
mov
push
out
rcr
das
sub
aad
les
mov
jle
sub
cmp
or
arpl
imul
mul
pop
sub
cmp
mov
xchg
int
cmc
mov
shl
outsb
push
icebp
adc
call
adc
loopne
fwait
notl
stos
push
bound
mov
ret
test
push
mov
cmp
jnp
fcmovbe
jnp
divl
ds
push
xor
in
jecxz
incl
inc
sbb
popa
mov
ds
xor
inc
push
or
adc
dec
daa
lahf
mov
or
cmp
mov
ror
test
lret
inc
xchg
mov
pop
insb
xor
push
cs
inc
das
into
pop
push
fistpl
lods
add
cmp
fldt
xchg
scas
jne
cmpsb
sbb
dec
fldl
in
leave
outsb
jecxz
leave
es
cli
fsubrs
push
aas
arpl
xor
sbb
cmp
scas
sarl
and
lret
push
out
icebp
aaa
sub
stos
loope
jge
ret
push
mov
xchg
cli
mov
in
mov
cmpl
sbb
xchg
sbb
xlat
cmp
cmp
stc
shlb
shll
in
and
lret
jmp
es
leave
pop
xlat
fucom
inc
popa
mov
das
ret
sub
push
lret
pop
cltd
or
xor
cmpl
lret
sbb
repz
dec
cmpb
fwait
loope
cmp
sub
adc
je
scas
icebp
leave
shlb
pushf
shr
mov
pop
jb
ret
adc
push
cld
ret
test
mov
fisttps
ss
push
stos
scas
jge
div
add
in
loopne
cwtl
mov
push
jno
mov
mov
mov
dec
rorl
cmpsl
mov
mov
negl
jle
sbb
sbb
inc
jmp
xlat
dec
clc
dec
xor
or
aad
push
das
push
rclb
test
mov
imul
cmpsl
xchg
loopne
aas
in
in
jns
into
push
outsb
push
add
inc
and
shl
add
xchg
mov
xor
mov
test
in
stos
mov
lock
mov
fstpt
cltd
mov
insl
inc
add
pop
xor
sbb
push
mov
or
sub
sbb
rclb
and
mov
add
mov
enter
mov
mov
dec
lods
inc
or
dec
test
imul
and
adc
mov
push
mov
cmp
xor
mov
aas
data16
xchg
rolb
mov
jb
aam
icebp
mov
shll
stos
add
pop
test
addb
lret
fiaddl
cmp
rclb
push
pop
repnz
jbe
mov
jo
pop
fcomps
jg
mov
pop
dec
sub
call
fstpl
inc
or
inc
cmp
pop
and
push
xchg
testl
or
out
dec
popl
movsl
mov
aad
call
mov
subl
out
pop
in
les
movsb
int3
popa
sbb
lods
adc
inc
mov
dec
mov
addr16
inc
out
cmp
gs
sbb
dec
jno
dec
adc
push
xchg
aam
test
arpl
mov
push
out
movsb
xor
xchg
bnd
pop
jno
cmp
cmp
jbe
push
xor
cmc
inc
jl
loop
pop
jecxz
into
fstpt
dec
iret
pushf
xchg
and
jmp
push
mov
push
lahf
push
or
ret
scas
dec
pop
jp
inc
decl
clc
sbb
inc
push
lock
inc
les
sub
pop
test
sbbl
hlt
dec
daa
sub
into
mov
xchg
jmp
insl
daa
xor
and
ret
mov
xor
iret
lcall
xchg
shrd
sarb
xchg
sbb
scas
jno
jno
adc
jb
jmp
push
xor
outsl
sub
je
jmp
mull
test
dec
out
sub
imul
xorl
imul
pop
xchg
test
or
jmp
inc
clc
inc
mov
mov
daa
scas
xor
or
pop
aad
mov
je
arpl
and
adc
into
pushf
and
xchg
pop
ljmp
nop
cmp
push
jno
stos
jmp
sub
mov
repz
or
add
mov
xchg
daa
in
mov
add
mov
imul
mov
jnp
mov
xor
xchg
dec
hlt
xor
sbb
sahf
test
out
movb
xor
dec
sub
jl
iret
sub
xchg
mov
lret
lret
popf
add
subl
pop
pop
aas
mov
cwtl
mov
inc
jnp
icebp
ret
cmp
ja
mov
insb
adc
xchg
xor
das
daa
xor
imull
sbb
daa
out
cld
mov
scas
push
mov
push
imul
pop
popf
jne
mov
inc
push
popa
adcb
call
rorl
sbb
add
jnp
sub
lret
ljmp
std
in
mov
lds
lret
xchg
pop
jp
jnp
pushf
rorb
pop
loope
push
in
cmp
int
movsl
and
jge
cld
mov
jo
mov
daa
add
and
sbb
insb
sbb
xchg
adc
inc
sbb
ret
push
clc
jle
rcrl
cmpsb
ljmp
in
divw
jno
dec
cmp
adc
negl
test
pop
sub
shlb
gs
mov
bswap
aaa
mov
push
dec
and
pop
xchg
jbe
out
into
xor
bswap
adc
pop
in
pop
das
out
fistl
mov
push
add
sub
push
aas
jnp
sbbb
std
jne
add
into
add
std
movsl
sbb
sbb
sbb
cmpsl
sub
xchg
test
and
lcall
scas
dec
adc
jnp
scas
xor
cmc
sbb
push
jl
cs
pop
sub
aam
mov
enter
es
sub
sahf
sbb
mov
cmpsb
add
lcall
mov
ret
add
pop
pop
repnz
mov
shrb
xchg
push
and
pop
push
jl
add
jge
pop
fwait
inc
xlat
xchg
aad
cld
or
mov
je
xchg
fcoml
pop
sub
stc
icebp
jnp
iret
shll
add
fwait
lds
icebp
dec
mov
test
cmp
shlb
shl
dec
push
in
mov
adc
sbb
mov
xchg
xor
daa
sub
cld
pop
add
jp
fcomi
jg
in
mov
sahf
push
movzwl
jae
xor
test
jge
dec
int3
aam
ret
fnstsw
int
xlat
cld
call
int
sbbb
inc
test
push
inc
arpl
aad
lcall
dec
mov
bound
fisttpll
into
inc
ffreep
movsl
cs
test
jbe
pop
add
cmp
mov
mov
xor
scas
mov
xchg
jo
adc
jmp
in
cmp
or
sub
sbb
repz
xchg
mov
fnsave
aad
mov
movsl
mov
ret
fistpl
cs
xor
push
push
shlb
dec
das
das
fs
jne
pop
dec
cltd
mov
sar
mov
push
arpl
out
mov
xchg
mov
in
repnz
dec
push
cmp
sbb
aaa
or
in
mov
adc
sub
mov
inc
adc
push
daa
dec
push
push
aam
xor
xchg
or
imul
lea
fwait
push
test
dec
dec
inc
jb
sub
bound
mov
xor
popa
add
lahf
daa
push
adc
popf
cmp
and
dec
dec
outsb
sub
jns
inc
jne
pop
inc
xor
and
out
test
js
lds
fwait
cmp
or
inc
in
aas
test
mov
add
push
jp
pop
lret
out
mov
fst
lret
mov
in
push
cs
das
pop
pop
cmc
mov
pop
push
jne
mov
pop
cmpsb
mov
and
xchg
mov
inc
push
je
cmc
pushl
addr16
jo
adc
or
mov
sub
dec
lea
rolb
mov
mov
jge
shll
aam
xchg
push
inc
pop
sub
std
push
sub
loope
add
insl
in
cmp
cltd
mov
sti
flds
jecxz
les
xchg
mov
shrl
xor
daa
andl
dec
and
repnz
arpl
add
add
test
mov
jl
pop
jb
int
pop
ljmp
aas
popa
adc
imul
outsb
adc
imul
mov
insb
pop
fs
add
sbb
movsb
cmpsb
int
test
js
int3
and
pop
imul
xchg
add
fs
pop
sub
imul
gs
push
sbb
add
int3
lds
adc
pushl
inc
pop
les
rorl
jno
inc
fistpll
cli
loopne
xchg
xchg
out
mov
or
xor
lahf
data16
adc
jmp
push
push
pop
or
out
xchg
xlat
push
inc
mov
mov
clc
addb
inc
add
outsl
and
addr16
mov
fwait
std
cmp
push
or
inc
ret
movsl
inc
arpl
push
and
push
mov
and
enter
and
xchg
mov
push
jge
pop
xchg
movd
mov
pop
push
out
das
insw
cs
sti
jbe
test
inc
sub
cmp
fadds
pop
ljmp
and
shl
pop
loope
addr16
cmp
mov
je
shlb
push
inc
add
mov
pop
enter
scas
xchg
lea
sahf
ret
jg
or
xchg
sub
add
jae
and
scas
out
jne
add
ror
arpl
loop
mov
popa
mov
jg
mov
and
pop
push
das
notl
mov
jbe
push
push
popl
cwtl
xchg
inc
negl
dec
loopne
xor
mov
mov
insl
aad
in
ljmp
jg
imul
test
xchg
ss
ljmp
lret
int
out
push
pop
cltd
mov
sbb
sub
jno
push
insb
out
jb
lahf
sahf
out
push
dec
daa
mov
push
popf
mov
ja
push
push
in
popl
loope
dec
hlt
xchg
mov
int3
test
fldl
test
ds
mov
stos
addl
lahf
lods
ret
mov
add
mov
pop
cld
popf
pusha
testl
jg
aas
fistpl
shrb
sbb
loope
xchg
scas
mov
mov
fsubr
mov
sbb
das
orl
add
int3
scas
sbb
or
jo
dec
scas
out
outsb
in
cltd
and
shll
push
cli
mulb
orl
add
xchg
in
jle
push
cmp
dec
jbe
js
dec
adc
jnp
jo
dec
leave
lret
jecxz
out
nop
or
fiaddl
sbb
sahf
dec
js
xor
jae
jo
lret
mov
mov
cmp
cmp
pop
out
ficompl
and
stos
or
shlb
mov
stos
lock
mov
cltd
pop
xchg
adc
out
sub
or
xchg
and
loope
lret
fldt
test
shr
jns
das
adc
mov
jg
es
mov
cmp
loope
cmp
jle
enter
dec
mov
mov
jb
adc
sarb
jbe
pause
xchg
test
cmp
out
aam
aaa
and
push
jno,pn
je
lock
loopne
inc
and
xor
add
mov
sbb
mov
call
lods
or
in
pop
xchg
pop
jne
add
push
dec
ror
dec
jecxz
push
in
sub
adc
and
xchg
sbb
imul
sbb
jmp
push
pop
adc
roll
gs
outsl
stos
cmp
adc
aas
and
dec
ljmp
insb
test
cli
frstor
in
int
testb
cs
fwait
mov
push
inc
mov
ror
or
adcl
inc
loope
inc
cmp
and
adc
loopne
xor
nop
xchg
enter
enter
mov
dec
lcall
popa
das
das
fwait
dec
xor
pusha
out
xor
in
jb
outsb
mov
pop
jnp
bound
pop
inc
pop
mov
test
sbbb
push
ret
aaa
mov
add
stc
sahf
sbb
or
in
push
mov
pop
in
out
or
dec
cltd
mov
mov
incb
pop
sti
ljmp
mov
ret
mov
push
test
inc
cmp
jg
scas
cmovg
inc
jnp
xchg
mov
jno
jecxz
and
jb
xchg
loope
je
add
into
daa
pop
push
cmp
lcall
dec
mov
es
jp
xor
adc
sti
sbb
pop
mov
pushf
sbb
inc
pusha
push
xor
int3
pusha
jae
outsb
leave
out
xor
out
adc
aam
stos
jg
sub
pop
mov
add
cmp
stc
mov
push
mov
and
mov
jbe
scas
shll
cmp
xlat
data16
shrl
cltd
mov
test
cld
sub
addr16
and
js
callw
sub
fistps
shll
jno
ficompl
sarl
sbb
mov
dec
jae
cli
call
aad
and
cs
adc
outsl
xchg
fcompl
adc
mov
mov
xchg
pushf
shl
mov
clc
sbb
sub
pushl
lret
xchg
or
les
pop
mov
lds
cs
mov
pop
int
xorl
rolb
and
lds
rcrl
lahf
ret
cmp
jecxz
into
pop
adc
out
push
lret
xor
dec
repnz
ja
adc
push
fiadds
mov
daa
pop
ret
mov
sub
stos
cmp
or
jns
mov
xchg
jg
and
push
mov
movsb
aaa
fcmovb
ds
mov
mov
sub
push
ret
adc
sbb
xor
fimull
mov
dec
lea
addb
push
loope
pop
lret
jg
pop
dec
in
scas
jbe
lcall
mov
jge
lret
inc
outsb
cmp
shr
out
push
cli
push
ljmp
or
and
cmpsb
xor
sahf
shll
pop
adc
mov
xor
dec
out
lods
arpl
inc
jl
out
add
fldenv
mov
mov
or
pop
sub
stos
lcall
lret
add
mov
shrb
push
arpl
cmc
pop
mov
jle
mov
outsb
jle
and
jl
das
je
fwait
cli
jecxz
xchg
cltd
push
mov
dec
mov
xor
imul
inc
dec
add
or
push
fmuls
sub
rclb
add
out
insl
aaa
pushf
rcll
xchg
push
lcall
xchg
rcrl
push
lret
scas
dec
sahf
mov
sub
les
xchg
fstps
shrb
rcrb
inc
jns
mov
push
daa
and
push
sbb
lret
fistl
dec
ret
cmpsb
adcb
sub
or
jne
mov
or
mov
push
push
cmpsb
mov
ss
imul
and
lahf
scas
ljmp
rcrb
sub
xor
adc
sbb
cwtl
add
xchg
lods
push
addb
push
add
and
mov
fcoml
int
aas
jae
or
jl
in
or
inc
rcll
cmp
xor
inc
lahf
xchg
push
sbb
cmp
dec
int3
andl
sub
nop
mov
jp
xlat
cmp
test
pop
int
nop
popf
push
fldcw
enter
pop
pushf
popa
daa
add
or
cwtl
pop
push
mov
push
repz
mov
xor
pushf
mov
sub
popa
fwait
leave
sub
scas
sub
xchg
mov
sahf
push
push
inc
fwait
aaa
inc
cmpsl
mov
sbb
push
pusha
sbb
adc
repnz
xchg
inc
lcall
arpl
arpl
scas
jmp
loopne
ror
nop
inc
rcrl
ror
jno
test
and
inc
jp
into
movsb
repnz
inc
lret
sbb
pop
and
popa
jg
add
jb
rorb
push
call
and
inc
cltd
mov
scas
or
mov
cli
mov
dec
push
xor
aaa
movsb
pop
jmp
lods
aam
scas
lea
mov
mov
aad
lcall
push
xor
mov
add
and
add
ja
addl
sub
adc
bound
ret
inc
lods
pop
xlat
mov
jne
jl
lea
out
or
dec
xchg
xor
sar
adc
clc
cmp
inc
inc
mov
loope
in
dec
call
pop
rcrb
adc
clc
jnp
das
das
cli
dec
insl
fsubrs
inc
iret
mov
mov
gs
mov
or
push
lahf
test
lahf
in
jp
clc
fst
jmp
xor
sub
mov
cltd
mov
call
mov
sub
in
sahf
shlb
xchg
pop
stos
data16
out
mov
mov
ret
shrb
xchg
jg
rcrb
leave
bound
mov
iret
aad
add
push
mov
insl
mull
hlt
ficompl
xlat
mov
lea
sub
cmpsl
push
adc
popf
dec
cmp
pusha
data16
add
pop
insl
mov
out
mov
push
mov
push
sti
mov
adc
lds
add
jge
stos
movntps
sbb
out
ljmp
ja
jno
and
jmp
int3
and
inc
xor
push
sub
xchg
dec
test
adc
add
and
lds
clc
decb
mov
add
or
in
dec
ja
xor
aas
sar
jnp
out
into
test
lahf
leave
les
in
lock
in
loope
xor
loop
arpl
add
cmp
mov
rcrl
ret
push
ljmp
sub
popf
or
mov
mov
sbb
imul
push
cmp
adc
adc
lea
ret
inc
movd
cmp
adcb
jmp
push
fidivl
in
bound
push
cld
adc
push
popf
sbb
jecxz
add
in
push
enter
lds
in
out
faddl
lcall
lret
test
jecxz
jecxz
jbe
outsb
das
jno
or
sub
jmp
fidivs
shrl
and
jb
dec
lret
or
mov
lret
mov
push
and
sbb
outsl
sahf
leave
xchg
fsubrs
lock
lret
push
fisubl
jo
insb
pop
out
cli
mov
and
shlb
push
data16
and
sar
out
sbb
xorb
xor
mov
test
mov
jb
in
bnd
movsl
bound
xchg
aad
movl
mov
pop
es
pushf
popf
push
push
sbb
pop
xchg
mov
nop
shll
push
repz
fldenv
aad
mov
dec
mov
mov
scas
sub
cmpsl
dec
jg
in
jns
leave
jg
adcb
sti
xor
lds
repz
shlb
add
sti
mov
sub
mov
and
xor
shrb
sub
stos
les
arpl
jg
test
pop
adc
cli
addr16
jecxz
ffree
arpl
cltd
inc
mov
sahf
lods
dec
add
push
jle
in
clc
outsb
ljmp
cltd
jg
mov
mov
pop
mov
pop
inc
fsubp
add
adcb
je
lret
cwtl
in
jnp
mov
call
out
mov
inc
mov
mov
lret
sbb
outsb
xlat
test
addr16
xor
lds
pop
jl
pushf
cltd
dec
pop
aaa
xorl
pushf
jns
mov
mov
sub
xor
loop
je
push
lea
scas
or
fdivl
int3
xor
dec
push
and
mov
push
or
cltd
push
dec
scas
inc
mov
out
cs
cmpsb
pop
sub
pop
mov
cmpsl
mov
and
jae
leave
inc
iret
loopne
sbb
scas
xchg
xorl
xor
xchg
mov
push
test
icebp
mov
out
push
dec
and
je
mov
movsb
test
mov
aaa
mov
gs
lods
jge
and
adcl
and
xor
xlat
push
inc
pushf
test
or
fldenv
shrl
fs
adcb
je
into
pushf
mov
scas
push
aas
sbb
insl
jecxz
lret
stos
andb
adc
loop
pusha
icebp
inc
ja
dec
in
nop
sub
mov
sub
mov
inc
jno
mov
bound
mov
jne
adc
xlat
aam
fadds
push
or
aaa
adc
cmc
push
cmp
sbb
shl
mov
jmp
mov
lods
daa
int
xor
add
mov
xchg
movsl
sbb
repz
or
mov
and
push
cmp
nop
out
xchg
ja
daa
or
lods
mov
mov
sbb
push
aad
movl
cmp
imull
notb
or
ljmp
nop
xor
shl
mov
cmp
test
dec
in
faddl
fucom
jnp
repz
mov
mov
mov
fstpl
push
iret
dec
jae
fidivl
mov
and
lret
lds
nop
xor
pusha
dec
add
jmp
data16
lock
ret
stos
vsqrtps
mov
sub
pop
addl
and
mov
sbb
add
xchg
cmp
js
imul
xchg
jp
sbb
pop
aad
int3
shl
scas
pop
inc
fwait
sbb
test
push
aas
mov
fsubrs
and
into
push
test
add
push
sub
mov
pushf
mov
mov
pop
scas
cmp
push
std
mov
xor
adc
insb
fsubl
xor
add
pop
cmp
jo
inc
inc
jno
mov
enter
cwtl
push
xor
aas
sbb
sbb
pop
andl
pop
fidivrl
cmc
mov
test
lods
cld
inc
rorb
lcall
ja
sti
mov
cmp
sbb
add
testl
jecxz
das
push
arpl
adc
aaa
cltd
and
fwait
mov
xchg
mov
out
scas
dec
xor
and
cmp
add
mov
cmpsb
pop
jmp
xchg
sbb
in
pushf
sbb
add
dec
aaa
xchg
push
push
sarl
cmp
add
int
outsb
cmpsl
scas
out
sub
or
rcll
jbe
xchg
xchg
aam
or
lods
popa
insl
xor
ret
xorb
xchg
dec
leave
lods
insl
insb
imul
ret
addb
lea
inc
push
movl
sub
int
loope
imul
mov
nop
addr16
adc
scas
fnsetpm(287
mov
xchg
mov
xchg
and
and
mov
cwtl
add
inc
pop
xchg
jmp
sti
mov
sub
sbbl
xchg
lcall
aas
sub
test
shr
mov
clc
or
test
xor
das
mov
shlb
push
mov
lret
or
loopne
adc
call
pop
sub
cmp
jae
gs
or
insb
pop
cmp
daa
adc
mov
lret
mov
jb
jmp
pop
rclb
test
cmp
jno
outsb
adc
je
cmc
inc
shrl
cmp
dec
out
jnp
push
jmp
or
inc
lahf
lcall
fwait
push
repnz
addb
adc
jns
push
mov
lea
sbb
push
sub
xchg
js
mov
jne
lock
mov
test
jno
xchg
mov
adc
mov
outsb
stos
mov
pop
hlt
xor
sub
push
cmp
pop
adc
ret
movsl
xlat
mov
pop
adc
fwait
xchg
xchg
je
mov
pop
pop
adc
xchg
addb
or
call
pop
sbb
lret
add
jmp
cmp
jge
jo
lods
popa
mov
xchg
sub
not
mov
lock
mov
or
jmp
cmpsb
cmp
adc
mov
lds
shll
push
cwtl
or
pop
movq
aas
pushf
test
xchg
out
das
sub
shrl
cmp
js
lock
bound
jb
mov
out
jno
mov
outsl
imul
mov
fisttps
push
jp
mov
xor
sbbb
incl
pusha
xchg
mov
je
fadds
cmp
push
incl
adc
enter
or
adc
ja
fwait
jp
ds
imulb
jp
dec
movsb
test
dec
repz
pop
sbb
push
cmpsl
xor
loope
mov
arpl
adc
mov
push
xor
test
testl
inc
inc
outsb
or
mov
push
sub
mov
push
icebp
pop
and
push
lret
popa
add
mov
addl
jb
adc
test
popa
inc
mov
jp
pop
mov
mov
mov
rorb
xor
js
sahf
lret
clc
pusha
lret
mov
adc
cmp
inc
mov
cld
inc
or
push
jno
push
outsl
cmp
push
into
daa
xchg
das
int
icebp
xchg
daa
xor
or
push
xchg
inc
sahf
shrb
mov
lret
sahf
ja
adc
fbld
rcll
call
cwtl
inc
ljmp
arpl
in
imul
and
std
sub
inc
adc
add
or
inc
mov
mov
pushf
xchg
pop
adc
jns
jg
aas
enter
loopne
xchg
lcall
orl
and
jmp
in
mov
jmp
and
mov
decl
add
loope
mov
adc
lahf
cmpsl
adc
mov
aas
outsb
pop
xchg
fldl
jno
in
pusha
mov
sti
push
fwait
out
aad
loopne
pop
sub
push
or
add
in
outsl
jnp
xor
dec
stos
mov
jns
xor
push
push
dec
lahf
xorb
jmp
sbb
adc
sbb
dec
lret
push
jg
sbb
push
into
jno
mov
mov
call
dec
inc
imull
scas
jmp
sub
out
stos
xchg
sti
dec
or
jecxz
popl
adc
aas
mov
shrl
ds
sbb
jo
scas
mov
cltd
mov
rorb
xor
xchg
insb
push
jnp
das
sub
inc
sbb
xlat
in
and
xor
enter
xchg
loopne
out
mov
and
mov
sub
inc
outsb
mov
out
add
cmp
ror
mov
bound
cmp
xor
fldl2e
stos
and
dec
shrb
pop
sub
xor
into
cmpsl
daa
pop
xchg
sarb
or
test
subb
adc
cmpl
xlat
test
mov
push
inc
in
fs
jle
xor
mov
negb
sub
or
ljmp
pop
inc
test
sbb
push
or
fsubrs
inc
pop
test
and
xchg
flds
inc
cltd
mov
add
js,pt
scas
sar
dec
sub
cmp
inc
sbb
fildll
xchg
dec
iret
cld
jae
mov
adc
adc
xchg
cmc
cmp
lcall
int3
and
mov
pop
fsubp
hlt
xor
leave
hlt
adc
add
cltd
adc
iret
pop
inc
inc
jmp
cmp
int
in
fnstsw
push
mov
call
inc
sbb
std
xchg
ret
call
xor
outsl
pop
out
xlat
hlt
clc
jbe
lods
adc
rcl
insb
stos
in
inc
fstps
movsl
outsb
stos
iret
sbb
int
clc
add
ud2
orb
int
inc
fistps
cmp
loope
pop
pop
or
movsl
xchg
xlat
cwtl
out
inc
pusha
add
scas
and
mov
cmp
and
xchg
xor
dec
pop
loope
testb
xor
mov
inc
out
lods
jno
xchg
dec
jle
movsl
lcall
cwtl
std
leave
lods
jb
addr16
out
inc
lods
hlt
cmp
inc
mov
mov
out
cmp
or
pusha
fs
adc
sbb
pushf
into
out
or
mov
inc
xchg
push
psraw
testb
lds
jo
cwtl
int3
or
lret
inc
lock
je
add
inc
rolb
sbbl
add
cmc
jl
or
xor
xchg
int3
in
adc
or
std
xor
push
lahf
std
pusha
ss
mov
ret
or
or
or
xchg
lret
xchg
imul
inc
and
sti
inc
shl
adc
or
fwait
xchg
xor
test
repnz
mov
mov
add
adc
fcomi
jns
xor
fdivrl
popa
int
cmpsl
lods
add
dec
jbe
adc
cwtl
dec
mov
scas
lcall
mov
dec
sahf
jp
mov
loopne
xchg
and
inc
ret
arpl
shlb
nop
or
push
xor
aaa
arpl
fsubs
loopne
xchg
int3
sub
sub
jns
push
and
push
ds
cltd
cmp
jne
sbb
ret
inc
jecxz
dec
mov
stos
sti
push
pop
adc
xor
or
out
jp
out
ret
pop
xchg
dec
filds
jg
push
mov
mov
movb
nop
jbe
leave
xchg
mov
pop
lret
insl
jp
pop
dec
pop
xorb
mov
pop
mov
push
adc
mov
inc
cmp
adc
stc
lods
mov
out
adc
pop
int
dec
aaa
dec
jmp
cwtl
mov
or
mov
in
add
fdiv
xchg
ds
call
xchg
cmpsb
stos
lds
cmp
scas
sbb
or
mov
ljmp
xchg
ja
jge
jae
xchg
test
mov
push
and
clc
sbb
dec
dec
popa
mov
adc
sbb
pop
es
testl
xor
into
repz
imul
rcll
ret
jg
pusha
dec
ret
bound
mov
outsb
cmpsl
add
lcall
sub
dec
outsl
cmp
into
jg
inc
mov
rcll
and
loop
in
push
jnp
adc
mov
jmp
out
test
push
push
imul
push
and
lahf
push
sbb
sub
pop
sub
call
jp
test
sub
in
mov
push
adc
inc
lret
imul
xor
out
test
mov
mov
int
sub
call
test
jecxz
sti
xor
sub
repnz
cmpsb
mov
mov
xlat
cld
jb
mov
or
lods
mov
mov
cmp
jne
cmpsl
fbstp
mov
jo
xor
add
fwait
not
mov
scas
adc
loopne
aaa
in
into
sbb
int
aam
testb
or
mov
cmp
std
pusha
lret
and
fs
jp
sub
push
jb
jle
pavgb
cltd
xor
pop
iret
mov
mov
rcll
push
mov
inc
lods
fmul
sub
stos
inc
lcall
bnd
call
sbb
xor
rcll
in
test
mov
sbb
push
mov
in
inc
and
xor
push
daa
pop
and
call
mov
notb
add
sbb
and
and
add
xor
push
xchg
jge
out
sbb
push
push
xchg
or
cmc
aas
pop
rcll
sbbb
mov
inc
and
pop
sbb
xchg
sahf
pop
inc
aad
adc
cmpl
loope
dec
dec
mov
arpl
mov
adc
mov
add
jnp
movsl
cmpsl
dec
and
cli
xchg
dec
outsb
inc
cltd
or
mov
mov
arpl
aam
out
and
ss
pushf
stos
mov
int3
and
fwait
xchg
aas
not
cwtl
dec
enter
mov
sbb
add
push
ljmp
push
adc
addr16
arpl
mov
fadds
xchg
add
and
mov
fs
lods
add
in
test
shrl
lds
jg
mov
movsl
xor
aaa
ljmp
loopne
xor
inc
mov
incl
jle
popa
mov
cmpsl
xchg
fnstenv
ljmp
or
nop
fwait
repz
es
int3
xor
sbb
lret
cmpsl
sub
pop
sub
out
add
lock
jg
adc
xchg
xor
fs
jne
popf
or
aaa
mov
std
bound
pushf
lods
jmp
test
insb
outsb
mov
push
or
inc
jo
xchg
jecxz
sbbl
out
mov
imul
xchg
dec
dec
adc
xor
sbb
test
stos
push
adc
int3
lret
scas
or
mov
xlat
jbe
movb
mov
adc
mov
add
clc
lret
xchg
jl
jo
test
push
mov
sbb
data16
shlb
xor
and
sub
fnstcw
mov
stos
and
cli
dec
cmp
xchg
sarb
cwtl
and
adc
push
add
jecxz
xchg
add
mov
int3
add
cmp
sub
jo
mov
lods
sub
sub
loopne
jns
arpl
add
iret
cli
rcrb
aad
loopne
inc
mov
mov
sbb
daa
arpl
int3
and
or
and
subb
ja
gs
call
dec
xor
and
in
and
and
mov
icebp
in
packsswb
ror
cmp
jb
clc
stos
push
sub
cmp
xchg
repnz
add
jmp
pusha
daa
and
mov
adc
lahf
into
insl
push
fidivl
push
push
mov
iret
jnp
add
stos
lock
pushf
loopne
and
push
in
fcoms
das
jae
mov
pop
jmp
or
mov
mov
jbe
mov
and
popa
cmpsb
lret
imul
add
adc
xchg
jg
add
out
mov
inc
xor
and
movsb
cmc
or
push
sbb
in
mov
adc
dec
mov
ror
inc
mov
inc
clc
mov
fstp
pop
out
xor
mov
or
xchg
adc
push
addr16
popf
push
aad
mov
ljmp
xchg
sarb
jl
popf
mov
outsl
hlt
mov
cmc
in
add
test
cld
enter
mov
roll
mov
fldl
add
ret
push
js
icebp
mov
mov
pop
and
pop
mov
add
loop
sub
es
pop
mov
lea
or
int3
push
into
sbb
xchg
xchg
push
loop
daa
cld
out
pop
jnp
push
push
mov
fldcw
lock
dec
stos
daa
mov
movsb
mov
inc
mov
inc
sarb
movsl
cld
sub
lods
sub
mov
mov
push
adc
and
and
mov
pusha
sub
pop
and
jne
rorb
mov
mov
rcrb
push
mov
rcrb
mov
mov
inc
xor
add
xchg
lret
cmp
jb
xchg
stc
inc
in
xchg
cmp
rcl
pop
fistps
jnp
jne
insl
xor
out
pusha
aam
pop
mov
inc
cmpsb
push
pop
jecxz
push
ret
xchg
inc
inc
xchg
addr16
cltd
push
jl
jle
fwait
cmp
push
jge
mov
pusha
cmp
sub
jle
push
mov
jge
rcll
std
js
mov
mov
fcom
jns
insl
sub
adc
add
insb
cs
lret
out
int
xchg
cmp
sub
mov
sub
popf
sub
dec
jmp
fsubrl
push
cmp
mov
out
jnp
fdivrp
mov
mov
jmp
les
jno
xor
mov
or
mov
sbb
stos
mov
rcll
repz
xchg
int
add
xchg
push
ja
es
cli
les
jl
add
xor
mov
mov
jbe
lret
loopne
fwait
xor
sbb
decl
loop
sub
test
inc
jmp
pop
je
cmp
repz
add
sbb
fstpt
jbe
jmp
adc
insb
stc
mov
lret
jne
jle
mov
dec
inc
dec
mov
xor
stos
sahf
adc
sbb
xor
and
daa
repz
mov
push
pushf
into
mov
in
add
sub
out
js
aas
outsb
scas
sarb
cltd
mov
sub
jecxz
les
mov
imul
dec
leave
imulb
test
mov
jmp
aas
fmull
inc
adc
pop
test
sarl
dec
push
mov
leave
je
adc
sbb
popa
mov
jp
inc
jl
mov
pop
push
outsb
jp
lret
lock
daa
or
data16
or
adc
aad
std
ja
lret
push
repz
ja
push
test
dec
test
int
aas
jae
or
lret
adc
mov
repz
mov
js
test
mov
popa
daa
aas
stos
pop
into
cltd
lock
cmp
test
rcrl
scas
adc
mov
xor
push
mov
dec
lock
jb
cli
popa
sbb
push
lret
and
cli
and
add
pop
fcoms
es
sahf
xchg
jmp
testl
xor
testb
leave
cmp
stos
push
cs
roll
fsubrp
mov
or
pop
jo
outsb
jp
lock
dec
das
and
lock
xchg
sub
mov
sbb
xor
test
ljmp
addr16
js
xchg
mov
sub
lret
fidivl
xchg
pushf
shrb
add
das
pop
push
lahf
cs
sbb
das
repnz
test
fcmovb
out
add
aad
sbbl
sub
push
push
fbld
xor
push
outsb
cmp
call
cmc
mov
jae
das
xlat
roll
and
test
icebp
push
out
lcall
mov
mov
mov
popa
dec
sbb
ljmp
xor
xchg
aas
and
push
jmp
adc
repnz
dec
sub
in
xlat
inc
dec
adc
ds
mov
push
mov
pop
xchg
bound
test
imul
test
sbb
lods
call
sbb
xor
repz
negb
in
into
cmp
rol
adc
sti
mov
js
xchg
sbb
test
pusha
shr
xchg
fwait
movsb
jnp
shr
inc
inc
cli
sub
decb
popf
aam
fdecstp
cmp
xchg
loop
dec
cmc
xchg
push
sarl
push
xchg
xor
arpl
jns
cmpsl
outsb
adc
sub
in
pop
test
mov
fwait
bound
ss
inc
test
out
xchg
pop
cld
outsb
and
outsb
push
fldenv
ret
pushl
and
js
jmp
xor
and
sbb
sub
mov
out
fcoml
lods
insb
push
out
mov
pop
pop
ficomps
cmc
div
dec
mov
inc
leave
mov
orb
mov
mov
test
dec
mov
and
inc
dec
mov
mov
jbe
pxor
push
out
sbb
pop
mov
pop
jmp
xchg
test
inc
mov
lock
cmc
mov
inc
or
pop
es
sbbl
fcmovnb
inc
mov
enter
aam
or
cmp
std
cld
adc
dec
sbb
cli
test
stc
mov
jo
dec
je
sub
inc
jno
or
mov
add
repnz
rcl
frstor
pushf
clc
out
pop
das
and
aam
xchg
fs
mov
xor
mov
jae
inc
out
test
xlat
xchg
orb
cld
and
xchg
mov
cmc
mov
notb
mov
ret
mov
cmpsw
jae
mov
add
stc
out
push
pop
push
mov
pop
jge
fucom
stos
push
pop
mov
rcll
mov
in
mov
loop
jl
xor
sbb
js
shl
xor
mov
mov
out
cs
push
adc
iret
lea
cltd
outsb
je
fisttpl
push
mov
mov
fprem1
insl
xor
push
sbb
aaa
add
or
lods
gs
mov
scas
cmc
mov
mov
push
and
nop
jne
fbld
mov
xchg
sbb
add
js
pop
in
pushf
xchg
loope
jle
leave
scas
inc
pop
mov
cmp
inc
or
cld
pop
jl
xchg
inc
push
cs
mov
pop
mov
loopne
divl
mov
mov
jge
lcall
xor
std
fwait
push
andl
mov
loope
mov
std
dec
add
dec
adc
mov
ret
std
fwait
ss
je
loop
mov
test
call
cmp
xor
jb
outsl
pop
popf
int3
sbb
scas
mov
rcll
mov
sub
mov
lcall
inc
movsb
hlt
arpl
fs
js
pop
push
sbb
shrl
cmp
adc
cli
mov
xchg
in
cmp
rcrb
repnz
inc
xchg
push
jg
jle
lods
sbb
inc
imul
dec
pop
pop
mov
adc
adc
das
fwait
pop
inc
out
jg
shll
movsb
adc
xlat
fsubrl
and
fidivl
test
ljmp
int3
pop
push
fadd
xchg
in
cs
sub
pop
and
in
cmp
jns
push
inc
adc
cmp
xchg
or
pop
mov
pop
pop
clc
mov
cltd
inc
rcr
in
mov
hlt
shrl
add
sbb
loope
push
pop
inc
jecxz
pop
lahf
aas
adcl
sbb
push
inc
mov
dec
daa
scas
fiadds
jb
mov
or
dec
enter
adc
mov
test
mov
or
rorl
mov
sub
into
mov
xor
dec
sub
sbb
int
cmpsl
sbb
xchg
jno
sahf
call
xor
cmp
xchg
test
fucomip
mov
mov
pop
sbb
cmp
inc
sub
in
mov
arpl
cs
hlt
jmp
test
and
mov
push
and
inc
rorl
dec
mov
les
arpl
adc
ja
dec
inc
dec
mov
int
pop
imul
mov
lods
push
mov
mov
xor
loopne
movsb
push
mov
stos
and
xlat
popa
dec
xchg
pop
setbe
adc
pop
and
jo
sbb
popf
push
jo
loopne
int
sbb
pop
rcrl
enter
lds
ljmp
inc
movsb
cmp
fildll
int
dec
pushf
add
nop
fcoml
fcmovu
mov
mov
mov
lods
movsl
leave
push
add
mov
out
sub
push
cvtps2pi
cld
sub
mov
mov
and
cmpsb
cmp
pop
pop
mov
incl
clc
sbb
xchg
enter
jge
in
mov
ds
mov
aad
in
inc
mov
sub
leave
fcomps
push
cwtl
fistl
add
repz
mov
mov
mov
xchg
mov
fs
popa
add
xchg
aad
dec
mov
int
fs
push
mov
jb
lds
scas
xchg
daa
movsl
les
push
jmp
aam
jno
sbb
lds
pop
cs
data16
gs
fisttps
xchg
jge
and
inc
xor
es
sbb
fimull
int3
lods
sti
or
inc
arpl
aad
pop
hlt
mov
xor
arpl
mov
out
pop
mov
data16
inc
mov
and
mov
cmp
add
dec
xchg
mov
sbb
add
xchg
sbb
repnz
lahf
clc
adc
inc
mov
cmp
jle
mov
sub
lock
roll
les
call
jge
or
frstpm(287
push
pushf
daa
bound
xchg
xchg
xor
mov
dec
push
sti
cmp
fldl
xchg
adc
inc
dec
push
fsubr
xchg
jo
mov
insl
movsb
adc
lret
jbe
test
xor
outsl
sbb
imul
add
iret
push
call
pop
inc
leave
out
popa
and
sbb
js
mov
jb
and
inc
jns
paddd
push
jmp
pop
jg
xor
adc
adc
cmp
mov
ja
hlt
push
adc
iret
or
ret
imul
inc
or
sub
icebp
xchg
push
and
mov
aaa
and
xor
lea
jg
sbb
adc
sarb
ret
add
xchg
lds
mov
ret
scas
inc
in
aaa
iret
or
int
and
dec
sbb
mov
mov
xor
fdivp
shrb
out
and
inc
imul
call
mov
imul
cmc
aad
aad
call
push
inc
insb
inc
ss
fidivl
cmp
test
inc
inc
roll
insl
cmp
mov
addr16
pushf
and
mov
xchg
jl
out
xor
cmp
push
lret
popf
mov
into
inc
int3
test
test
idivl
jae
loop
aas
sarl
push
cwtl
sbb
inc
xor
nop
jp
push
and
xchg
adc
cmp
pop
xchg
adc
pop
push
cld
sbb
and
scas
popl
daa
lds
ret
aas
pop
rorb
jmp
sbb
or
out
cld
pop
mov
pop
daa
xchg
mov
mov
sub
mov
fsubrp
pop
sub
insl
inc
cmp
test
cli
lcall
mov
leave
ljmp
scas
xchg
push
fimuls
fiadds
push
mov
out
cmp
fdivr
push
jbe
pop
fstpt
sbbl
stos
inc
or
and
sti
lret
sub
bound
cmc
cmp
clc
sub
shll
jl
lahf
mov
or
mov
dec
mov
xchg
jmp
mov
xor
xchg
test
xchg
inc
loopne
leave
push
in
aam
scas
push
je
rcrb
lods
rcrl
cs
add
mov
mov
ss
push
aas
ud2
arpl
insb
daa
bound
mov
cmc
test
outsb
lock
arpl
out
and
imul
adc
xor
insl
inc
xchg
fmuls
adc
fcmove
test
or
xchg
xlat
ret
test
and
enter
addr16
pushl
sbb
hlt
test
or
mov
push
add
lock
arpl
xchg
xchg
div
mov
into
cltd
cmp
push
xchg
sbb
cmpsl
jb
mov
call
mov
sub
cltd
adc
adc
xor
cmp
mov
or
insb
stos
xchg
mov
call
mov
or
lods
fistpll
and
and
cmpb
mov
mov
filds
push
ds
in
ljmp
jbe
bound
xchg
in
test
loopne
outsb
xchg
inc
jge
cwtl
sbb
cmp
clc
sbb
fisubrs
ss
pop
popa
push
pop
mov
repz
xlat
dec
loop
js
sub
push
data16
add
and
out
sub
xchg
cmp
fists
clc
ret
xor
mov
push
mov
xlat
cld
jge
out
daa
push
je
popa
fldl
scas
js
xchg
or
dec
mov
ret
pop
or
pop
icebp
lcall
mov
or
jecxz
fisubs
sbb
adc
jl
or
add
and
sub
pop
daa
mov
inc
push
call
inc
scas
sbb
test
mov
push
sub
sub
jmp
push
mov
cmp
inc
imul
or
xchg
cs
push
div
ror
xorb
dec
mov
mov
dec
mov
sbb
test
push
xor
std
aas
ja
lret
rolb
jle
push
add
lret
mov
push
sub
mov
or
inc
outsl
call
ret
dec
filds
jne
lret
sub
cmp
jle
gs
hlt
and
stos
nop
jle
cmpsb
ret
fiadds
push
mov
sub
pop
lds
in
cmp
jmp
xchg
xor
into
xchg
scas
in
jb
and
mov
adc
aas
pop
pop
insb
mov
leave
mov
sub
sub
xchg
push
insb
pushf
inc
in
imul
cltd
lcall
and
repz
and
xchg
inc
sub
mov
loope
or
add
inc
sbb
fisubl
sbb
xchg
dec
push
push
inc
cli
mov
jmp
add
add
ret
adc
fstpl
icebp
mov
aad
data16
aaa
pop
ja
test
inc
mov
or
and
fdivl
repz
mov
loopne
push
orb
and
jle
loope
or
add
les
fstps
jns
test
daa
pop
pusha
mov
shll
dec
add
scas
ud2
insb
jg
adc
out
pop
add
rol
and
mov
lret
leave
jb
jle
mov
fwait
pushw
mov
test
jno
pop
fidivrl
add
inc
xorb
sub
mov
cmp
push
lods
in
xchg
jecxz
aam
lock
or
push
jo
scas
hlt
sbb
daa
fsubl
out
std
mov
aad
dec
test
dec
js
rcr
subb
repz
mov
mov
lea
pcmpeqd
aas
cmp
enter
daa
cmp
bswap
add
scas
subb
and
mov
das
lods
popf
add
lret
sbb
sbbl
rcrb
test
adc
inc
cmp
data16
imul
out
jecxz
popf
mov
dec
or
rcr
cmp
test
jbe
jo
dec
pop
mov
iret
cltd
sub
cs
cmp
mov
test
hlt
mov
bound
rclb
call
pop
das
sub
out
pop
mov
push
out
jecxz
add
push
jecxz
mov
popf
icebp
push
in
lahf
arpl
sub
mov
bound
in
xorl
mov
das
jmp
ret
mov
cmp
aas
add
stos
jne
mov
popf
push
repz
cmpsl
or
inc
test
inc
dec
cmp
xor
in
adc
jne
mov
push
xor
sar
cwtl
mov
into
dec
mov
arpl
pop
loopne
jle
fldt
mov
and
mov
sub
mov
repnz
imul
and
jl
mov
xchg
shrl
push
sbb
mov
dec
jg
es
dec
or
int
xor
pop
in
cmp
adc
jge
leave
inc
cmc
inc
test
aam
in
xor
sbb
fwait
inc
ret
push
call
repz
push
stos
shlb
lea
push
cmpsb
inc
jns
cli
xorl
jne
and
or
mov
cmp
fcoms
pop
or
adc
out
outsl
cmp
out
imul
scas
cmc
add
sbb
dec
data16
addr16
test
cmp
push
pop
setge
inc
xchg
push
xor
dec
mov
sar
and
xchg
adc
and
mov
mov
mov
pop
jnp
jmp
ljmp
sbb
and
add
pop
jbe
pop
xchg
sbbb
test
aaa
jle
insl
or
mov
push
cmp
je
mov
or
sbb
jp
or
mov
push
add
mov
fcmovnbe
fiaddl
divb
lds
fistps
js
inc
lret
pop
dec
push
sub
dec
pop
ljmp
into
and
scas
cmc
sub
pop
push
jno
das
and
lods
add
and
aam
fiaddl
dec
aaa
subb
and
imul
mov
xchg
jo
sahf
xorb
mov
test
inc
mov
in
out
je
test
fidivl
push
mov
and
jae
lock
jp
sti
inc
movsb
fs
negb
and
lcall
in
ljmp
popf
int
inc
xor
shll
rcl
out
clc
pop
rcrb
pop
push
dec
pop
jb
sbb
xchg
daa
bound
cmp
out
pop
mov
sub
mov
jle
inc
jo
outsb
inc
inc
mov
xchg
sar
aaa
push
fwait
mov
int3
xor
pop
ss
sub
add
popf
jge
ljmp
mov
pop
adc
shl
pushf
out
arpl
cltd
int3
xchg
iret
mov
fistpl
roll
pop
ljmp
test
faddl
lock
sub
stc
cmp
inc
aam
add
sub
cmc
xchg
cld
xchg
bound
or
imul
xor
xchg
scas
pop
mov
jne
or
pop
pop
mov
xchg
dec
jl
mov
sbb
inc
repnz
dec
push
les
out
std
dec
jns
cmp
mov
punpcklbw
jmp
push
sbb
and
push
pop
dec
pop
sbbl
pusha
push
lret
pop
addb
jg
insl
lcall
xchg
inc
jb
popf
pop
push
into
mov
adc
pop
push
daa
int
pusha
jecxz
xchg
jae
xchg
dec
sub
xchg
cmp
pop
sub
outsl
xchg
adc
mov
call
sub
dec
cmc
add
mov
sbb
inc
outsb
and
push
es
in
call
push
in
fdivrp
dec
xor
fadds
ja
pushf
and
sbb
int
lds
in
or
leave
das
out
xor
sahf
loopne
dec
lret
ret
xor
stc
xor
mov
jae
dec
cmp
in
xor
test
sub
cmc
ljmp
pop
lods
push
outsl
std
out
test
jp
sbb
pop
inc
int
or
stos
inc
inc
dec
jp
sbbb
or
xchg
std
lcall
ret
push
pop
adc
mov
or
push
jle
popa
jle
insb
ljmp
adc
cmpsl
xchg
jecxz
test
xor
into
pushf
hlt
repz
mov
hlt
lods
pop
pop
shrb
xor
xor
cmp
aaa
js
sub
mov
push
sbb
inc
push
mov
loope
pusha
cmp
xchg
push
mov
in
add
rcrl
cs
push
xchg
into
lret
jne
xor
pop
or
xchg
shrl
loop
push
popf
ss
mov
mov
insl
lahf
in
imul
mov
push
pop
testb
std
lods
mov
dec
ret
mov
andl
popf
jge
iret
sti
push
insb
pop
aaa
mov
adc
xlat
mov
into
lcall
std
sbb
sbb
test
push
or
mov
ljmp
dec
sbb
add
js
sti
dec
stos
jns
push
jmp
fistl
addb
repnz
add
icebp
xchg
cld
push
rorl
daa
into
std
call
fimull
js
imul
outsb
je
lods
aaa
das
xor
fwait
cmp
dec
dec
jmp
dec
jnp
mov
lret
dec
adc
rcr
cmpsl
push
int
subl
mov
mov
mov
cmp
and
mov
add
aam
xchg
cmp
jns
addr16
pusha
cs
fs
xchg
sar
pop
fwait
pop
push
push
shr
pop
popf
cmp
shlb
add
dec
xor
inc
xor
adc
and
pushf
cli
push
dec
push
scas
loopne
rol
pop
lret
or
or
or
xchg
mov
adc
sbb
sbb
or
cmp
adc
mov
scas
fwait
insb
mov
sub
mov
insb
test
jno,pn
add
pop
xchg
xlat
lret
add
adc
or
mov
inc
mov
cmpsl
ljmp
mov
cmpsb
into
call
sub
jmp
push
jge
jno
mov
adc
sbb
call
sbbb
dec
or
test
dec
mov
arpl
mov
movsb
add
push
popl
mov
inc
pop
int
cmp
mov
lods
mov
sbbb
push
cld
adc
ljmp
push
and
add
stc
data16
dec
das
cmp
popf
aam
andb
and
jle
mov
mov
and
fstl
adc
mov
mulb
xor
lret
sbb
enter
jo
push
icebp
push
pushf
es
sbb
add
jp
fisubrl
dec
cltd
mov
ss
ja
iret
mov
stos
insl
and
cs
insb
dec
pop
adc
loope
dec
xorb
pop
shll
in
xchg
dec
cmp
loope
push
test
push
mov
cli
pop
shll
ds
faddl
add
ljmp
movl
gs
out
or
dec
in
ds
jl
lahf
add
in
or
inc
sahf
ja
inc
mov
pop
mov
xchg
sti
cmp
cmp
jno
dec
fstl
outsl
scas
xor
mov
aas
dec
mov
and
mov
lret
pop
fnstsw
in
xchg
mov
jle
shll
call
pop
rorb
xchg
adc
stos
jbe
orl
ja
lods
sub
mov
int3
movsb
fdivrl
xchg
sbbb
push
fbld
xchg
add
sbb
fstps
shlb
and
push
stos
test
mov
sti
cmc
adc
cmpl
dec
pop
loope
lret
std
cmp
imul
pop
xchg
data16
fadds
jp
xchg
insb
sbb
add
sti
lock
sub
js
or
imul
cltd
pop
inc
in
js
cwtl
mov
pop
and
pop
leave
pop
mov
mov
xchg
movsb
push
and
jl
fcmovb
mov
push
cmp
insb
xchg
out
push
cmp
fmul
jmp
add
xchg
or
call
stc
lods
mov
cmp
mov
dec
and
out
or
sub
push
mov
pop
test
jecxz
andb
mov
adc
mov
mov
dec
dec
in
enter
icebp
xor
cmp
push
fisttpl
add
sub
in
hlt
push
add
fimull
mov
jno
sub
jbe
xlat
insb
gs
cmp
insl
int3
fistpl
mov
punpcklwd
stos
xchg
aaa
sti
dec
rcrl
orl
ret
lods
inc
scas
mulb
dec
scas
pop
insb
sub
das
imul
lret
sbb
add
push
dec
arpl
cmpsb
mov
ficoms
mov
jg
cmpsb
sbb
jno
mov
jae
or
jecxz
push
stos
ret
sti
jno
push
xchg
shrl
in
dec
pusha
pop
dec
and
aaa
cmp
mov
stos
test
pop
add
in
imul
popa
and
dec
icebp
repz
aaa
insb
push
leave
popa
popf
jbe
subb
lret
mov
add
xor
rol
push
out
adc
rcrl
bound
xor
clc
cmp
inc
sbb
fwait
push
test
mov
ja
mov
inc
jl
pop
push
aas
xor
sbb
dec
add
dec
repz
dec
adc
ret
push
mov
adc
xchg
inc
push
xchg
movsl
out
out
cltd
sarb
mov
push
jmp
insl
mov
cmp
imul
add
mov
pushf
sbb
test
inc
xor
mov
fisubl
mov
xchg
jl
xchg
pop
mov
xor
inc
cmpb
pop
lea
and
faddp
push
out
ret
jno
sti
sbb
add
cmp
aas
movsl
das
adc
sub
jle
jbe
stos
nop
mul
xor
repz
add
or
xor
inc
lds
aas
add
test
push
and
mov
adc
push
pop
sub
xor
shrb
test
pop
mov
mov
lahf
mov
mov
into
ds
dec
xor
dec
adc
std
cmp
pop
xlat
dec
stos
cmp
stos
clc
test
jo
lret
push
push
xchg
testb
fldt
adc
xchg
pop
imul
pop
out
mov
loope
and
mov
pop
xorl
xchg
pusha
fadds
fldenv
xchg
mov
rclb
sti
pusha
push
das
imul
cmp
cmp
roll
inc
daa
xor
dec
cmpsb
mov
insl
sbb
sbb
lcall
push
pop
pop
adc
cmp
ror
add
pop
pushf
test
jns
mov
stos
cli
mov
int3
push
pop
jbe
pop
adc
jp
xchg
out
leave
rol
pop
adc
push
dec
in
scas
test
adcl
sti
mov
xchg
inc
push
dec
inc
dec
test
add
lret
mov
pushf
pop
scas
repnz
ja
imul
loop
cmp
jo
repnz
repz
or
add
fidivrl
cli
dec
ret
jne
sbb
mov
hlt
int3
mov
mov
out
mov
inc
pop
pop
cld
scas
jecxz
std
dec
nop
jno
subl
cmc
mov
cli
or
mov
dec
out
movsl
jae
mov
gs
mov
movl
or
mov
movsl
ret
dec
and
add
sub
loop
imul
xor
ljmp
mov
and
xchg
pop
inc
pop
pop
cmp
in
jo
adc
xchg
cs
xchg
xlat
add
ss
repz
mov
sbb
mov
xchg
ficoml
push
iret
xchg
mov
xor
push
xchg
jmp
jno,pn
bound
mov
sarb
test
cmpl
jmp
jno
xor
leave
add
jg
jge
imul
or
inc
testl
jl
mov
les
pop
push
in
xor
clc
or
pushf
inc
mov
sub
jl
push
std
je
int3
in
das
out
pushf
xor
insl
ja
xor
or
dec
ud1
adc
and
out
lahf
jecxz
xor
repnz
xchg
into
xor
hlt
jl
jae
fsubr
mov
popf
inc
stc
in
push
push
repnz
mov
sbb
stos
pop
dec
and
xor
outsl
push
scas
cmpsl
adc
sarb
add
xor
mov
mov
pop
jmp
sbb
jmp
xor
out
out
add
lds
aaa
lds
xchg
xchg
call
pop
jns
jmp
test
lcall
scas
adcb
loop
and
clc
add
dec
sbb
ljmp
cmp
adcb
sbb
cmp
inc
or
or
test
int3
in
movsb
lds
pop
std
cli
scas
sahf
xor
pop
dec
mov
test
push
adc
out
sbb
dec
sahf
push
scas
sub
dec
pop
adcb
aam
mov
test
sbb
sub
pusha
jmp
pop
jae
xchg
pop
adc
imul
mov
test
jecxz
or
lods
dec
iret
dec
loope
sbb
pop
push
rol
lds
dec
pop
sub
daa
out
jg
pop
daa
sbb
cs
imul
shll
and
es
call
fiadds
dec
test
nop
mov
repz
mov
cwtl
ljmp
inc
sub
pop
daa
stos
mull
jne
pop
cmp
aas
rcll
pop
pop
inc
int3
sbb
sbb
js
mov
pop
in
loope
cmovns
loope
mov
ret
stos
into
jo
icebp
inc
scas
outsb
mov
imul
out
xchg
pop
cmp
sub
movsb
lahf
dec
mov
dec
sahf
ds
xor
and
rorl
add
fs
mov
mov
ljmp
dec
das
dec
jbe
mov
cmp
stos
out
jnp
out
jg
or
sub
out
enter
push
dec
pop
stos
call
xchg
sub
sub
sub
mov
cmp
sub
jmp
sbb
push
fmull
adc
jp
adc
xor
shll
inc
dec
and
pop
popf
cld
mov
outsb
pop
insl
inc
jge
popa
movsl
repnz
test
add
rcr
lock
imull
adc
jne
sub
sub
aam
or
scas
stos
add
add
cmp
and
es
imul
stos
into
xorb
cwtl
jmp
lahf
arpl
sub
and
push
and
inc
aad
js
aas
fwait
popa
in
mov
outsb
aas
mov
fistps
loop
dec
sbb
or
scas
pop
adc
mov
inc
sub
cwtl
fiadds
pushf
push
ss
push
mov
je
and
mov
xor
push
xor
subb
into
loop
sbb
aam
push
in
adc
movsl
es
cmp
fwait
cmp
cmpsl
out
popf
sarl
cmpsb
jmp
stos
jns
xor
fnsave
jl
dec
cmp
cmp
sbb
pop
ret
adc
push
mov
ret
in
cmp
xchg
pop
push
insb
mov
mov
sub
sbb
mov
pop
cmpsb
test
and
cmp
xor
xor
nop
or
cmp
sub
sti
mov
xchg
fstps
xchg
js
inc
and
cmpsb
fnstcw
aas
repz
and
rcll
xor
jp
in
adc
pop
push
call
aad
shl
xor
test
adc
or
mov
das
sub
cmpsl
movsb
repz
xor
xor
testl
inc
add
inc
jnp
xor
cmc
xchg
js
sub
and
mov
mov
or
mov
loop
and
mov
mov
sub
iret
cmc
pushf
pop
inc
pop
pop
aad
add
lock
or
out
addr16
mov
cmp
xor
scas
dec
lret
jge
sub
ss
dec
cmp
sub
fistl
imul
sarl
pop
mov
sbb
dec
jge
pop
and
pop
adc
cld
out
test
inc
xor
enter
jl
mov
or
jns
das
ljmp
xchg
or
dec
and
xchg
out
ljmp
xor
rclb
xchg
cmc
in
mov
adc
mov
int
je
pop
lcall
dec
sbb
push
in
xor
sarl
lods
int
dec
stc
or
cmp
inc
addl
mov
loope
insl
sub
scas
lods
sbb
sub
xchg
int3
xchg
xor
dec
dec
mov
in
in
and
loope
stos
push
cmp
mov
xadd
mov
mov
aaa
inc
stos
roll
add
lcall
mov
mov
ret
sahf
cmp
sub
jnp
pop
pop
inc
mov
rcll
xor
hlt
call
xor
add
pop
fmull
push
sbb
vmovhpd
add
dec
and
xor
push
out
dec
cltd
push
mov
mov
into
stc
fsubs
sarl
gs
push
fidivrs
inc
or
mov
lret
int
insb
adc
mov
loop
push
add
loopne
xlat
xchg
js
mov
mov
jl
mov
push
repz
xchg
mov
jno
mov
lret
dec
inc
sub
xor
push
jae
mov
mov
push
pop
push
popa
adc
mov
ret
xor
repz
icebp
lock
hlt
adc
movaps
adc
mov
jle
mov
fs
add
out
or
push
dec
mov
ret
push
add
jo
ds
inc
mov
mov
push
mov
sbb
or
int
pop
ja
dec
out
lds
enter
cmp
push
pop
call
mov
adc
movsl
mov
pop
repnz
pop
xor
add
jns
sbb
adc
imul
pop
lret
cmp
xchg
sub
xor
mov
rolb
test
test
xorb
mov
cmp
mov
popf
xchg
jnp
xor
xchg
lcall
imul
imul
adc
cmp
push
cld
pop
pushf
les
and
jg
xchg
xchg
andl
into
xchg
dec
in
jns
test
fs
nop
arpl
out
dec
pop
insl
push
mov
iret
pop
dec
rcr
add
pusha
mov
pushf
sub
out
xchg
lret
rcll
bnd
sarl
addl
pop
inc
mov
cmpsl
clc
and
jns
push
xchg
sbb
daa
xor
inc
ret
stos
add
mov
pushf
insb
fwait
lods
dec
xchg
pop
fimull
sub
lock
push
iret
jle
ror
lret
movb
test
outsl
sbb
out
add
cs
in
pop
and
psubsw
mov
or
scas
cmp
sbb
add
pop
das
push
insl
sbb
pop
push
and
xchg
into
cltd
arpl
outsl
sub
sub
cmp
out
mov
sub
cmpb
fdivs
outsb
and
jne
jne
xchg
icebp
pop
iret
test
in
dec
pushf
cwtl
ljmp
add
and
pop
cmp
rcrl
pop
mov
jnp
subl
fsubp
dec
and
add
ss
add
clc
imul
sbb
test
scas
jne
push
ret
shrb
xchg
popa
adc
mov
jno
add
mov
xchg
inc
ret
dec
cmc
cmpsl
fiadds
popa
pop
stc
int
jl
xchg
leave
inc
cmpb
outsb
test
xchg
pop
shl
lock
das
into
sti
sbbb
and
pop
mov
xor
mov
mov
push
sahf
lea
stos
push
dec
jo
xlat
fsubrs
mov
dec
leave
fadd
enter
xchg
jecxz
scas
aad
stc
ss
sub
mov
lcall
les
nop
and
cwtl
mov
inc
adc
sbb
movsl
shr
inc
sub
pop
jp
adcl
sahf
mov
mov
stos
jne
sub
mov
lods
sub
and
filds
cli
xor
fdivs
dec
mov
shlb
addr16
cld
or
jg
mov
mov
ja
push
adc
lock
pop
arpl
pop
xor
cmp
jg
loop
push
pop
xchg
mov
iret
sbb
sub
add
jge
and
das
xor
and
rcll
pop
out
fsubs
stos
inc
dec
push
push
mov
das
ret
loopne
pop
sbb
fnstsw
decl
popa
mov
ret
sub
daa
jnp
in
jmp
sub
outsl
mov
mov
pop
push
or
or
mov
fwait
icebp
sbb
leave
ljmp
jge
mov
fcmovu
in
sub
jo
inc
sub
push
out
outsl
and
inc
cmp
fdivrl
mov
sub
mov
push
jmp
negl
fucomip
scas
into
mov
lock
or
adc
sub
inc
and
adc
adc
movsl
push
sbb
jp
js
xchg
jge
fdivs
insl
bswap
mov
sbb
outsl
repz
fmul
pop
insl
ljmp
scas
rclb
jmp
add
lods
or
loop
into
loopne
fmull
stos
adc
lock
mov
sbb
mov
xor
xchg
out
or
mov
sub
shrl
adc
add
call
mov
dec
pop
sub
stc
shlb
xchg
in
jne
jecxz
mov
pop
dec
cmp
sbb
pop
pop
mov
ror
aas
fwait
or
mov
sbb
xor
adc
cltd
push
inc
in
repnz
aas
in
adc
jns
add
push
mov
mov
inc
fwait
add
fwait
or
scas
inc
cmc
cmp
jno
jns
fwait
int3
push
decb
jae
fsubp
push
inc
sti
sbb
gs
out
cli
lods
inc
or
movsb
lcall
push
push
ficomps
in
inc
les
fcomi
xor
or
decl
test
insl
imul
inc
sub
adc
push
push
imul
push
sub
and
stos
mov
xchg
cmp
xchg
fistpll
stos
cli
cmpsb
psrlw
mov
in
stos
test
inc
sti
xlat
inc
stos
or
push
mov
jns
mov
add
sahf
es
jmp
bnd
xchg
outsl
pop
iret
jmp
incl
pop
fs
std
pop
or
fisttpl
cli
cmp
inc
jmp
aam
cmpsb
nop
icebp
ds
lock
pop
js
mov
in
arpl
loope
jno
jmp
cld
sbb
and
enter
xchg
inc
stc
pop
adc
int
leave
jp
or
xchg
add
pop
in
fiaddl
in
jmp
inc
imul
xor
popa
jae
jg
push
pop
sub
add
or
pop
add
or
cmc
loop
jp
add
test
repz
std
jbe
je
mov
aaa
push
mov
jl
popf
mov
mov
jo
or
mov
jp
nop
mov
fdiv
sti
mov
ljmp
mov
pop
pop
subb
addr16
lods
fmuls
scas
mov
es
sahf
inc
roll
cwtl
mov
imul
pop
sbb
stc
jmp
clc
rclb
push
push
mov
cmpsb
cltd
cmpsb
cmpsb
ret
push
loop
aad
pop
jle
inc
cmpsb
xor
dec
aas
mov
jl
inc
cld
clc
add
fnstenv
clc
xchg
mov
mov
or
jle
cld
push
pop
repnz
shrb
out
sbb
rolb
cwtl
ljmp
loop
test
dec
repnz
addr16
add
mov
adc
inc
loopne
sti
je
into
mov
cs
test
pop
lret
pushf
cmp
pop
cmp
mov
cmp
adcl
jb
mov
push
cmp
test
cli
sbb
mov
mov
add
adc
fisubs
leave
xchg
out
sbb
popf
sbb
xor
int
push
imulb
testl
push
inc
sbb
inc
mov
addb
mov
popa
pop
jne
mov
inc
dec
into
cmp
lea
leave
push
test
or
mov
addr16
fnsave
cs
push
test
mov
jmp
mov
sub
add
movsl
push
pop
cwtl
dec
aad
sbb
cmp
icebp
les
xchg
lcall
mov
mov
mov
mov
adc
mov
sti
subl
inc
sti
push
add
jg
ficoms
lret
movsl
imul
or
ss
out
adc
ljmp
jp
and
mov
daa
out
fnstcw
or
mov
orb
xlat
lods
dec
addr16
lret
rep
fisubrs
or
sub
mov
xor
ret
push
dec
mov
jno
xchg
stos
stos
push
es
dec
pusha
arpl
xor
test
mov
int
dec
and
ja
idivl
xor
push
push
aaa
jbe
imul
xor
dec
imul
cmp
imul
clc
in
cmpb
mov
or
push
xchg
pop
cmp
jae
or
int3
rep
mov
push
movl
mov
cmp
scas
xchg
xchg
jns
ret
sarl
movl
mov
dec
shrb
and
pop
jmp
andl
gs
cli
movsl
add
addl
mov
push
push
xorb
mov
ss
adc
sub
mov
in
push
fmull
cmp
and
mov
loopne
cmpsl
mov
mov
xchg
xchg
inc
jo
or
cmpsb
js
cmpsl
out
and
not
loopne
add
adc
add
fs
cmp
ret
cmp
push
push
xchg
lock
ds
int
xor
jmp
jbe
cmpsl
sub
test
push
insl
and
push
dec
lea
add
jns
jmp
test
mov
dec
ror
nop
cmpsb
sahf
mov
jecxz
dec
out
stos
cmp
cmp
xchg
adc
pop
dec
movsl
or
mov
xor
stc
add
nop
mov
or
in
lret
mov
fdivl
sub
inc
ss
lea
and
js
jle
pop
add
mov
push
jl
push
cmpsb
xchg
data16
rcl
mov
icebp
mov
jle
mov
mov
hlt
sbb
cmp
push
fucomi
adc
mov
add
xor
test
mov
into
cmp
xchg
cmp
int
jmp
lret
test
loope
aam
rcr
fidivl
or
mov
fbld
ret
push
or
pop
inc
sbb
testb
and
push
mov
xchg
mov
cmpl
in
sbb
mov
loop
repnz
sub
stos
out
xchg
lds
pop
inc
push
test
and
or
xchg
mov
pop
mov
dec
test
nop
push
adc
sub
dec
std
xchg
or
push
outsb
push
pusha
call
add
fidivrl
out
out
cmpsl
insl
mov
dec
test
enter
rcrl
rcrb
loopne
push
arpl
ret
lea
mov
xor
outsb
stos
mov
push
fnsave
jge
jne
das
mov
push
push
and
out
ja
pop
js
pop
add
adc
loope
sub
pushl
fdivs
cmp
pop
cmpsl
mov
push
add
fistl
pop
sub
fidivl
aas
lahf
sarl
xchg
or
pop
pop
cmc
and
imul
add
adc
mov
mov
stos
xchg
pop
repz
in
inc
push
fisubrs
out
push
int
cld
imulb
cltd
xchg
or
enter
imul
jmp
popf
ret
mov
sub
push
les
in
shll
add
fcom
or
adc
cmp
fcmovne
call
add
pusha
mov
sbbb
and
daa
mov
mov
jecxz
xchg
fmull
and
pop
stos
push
mov
mov
mov
jns
dec
ds
dec
sahf
push
out
pusha
pop
sub
jle
int3
cmpsb
mov
imul
test
cmp
or
in
sub
ja
pop
dec
sub
leave
pop
test
pop
in
jmp
jmp
adc
mov
inc
pop
imul
cmp
mov
sub
pop
jb
stos
pop
push
out
pop
imul
mov
mov
imul
fnstcw
fimull
daa
push
lock
inc
ror
subl
dec
sti
push
or
xchg
or
mov
test
shll
inc
pop
mov
xchg
adc
test
test
and
mov
fs
mov
imul
dec
push
xor
inc
dec
xor
xchg
sub
add
inc
adc
insb
aaa
dec
pop
mov
out
sti
dec
mov
jle
push
xor
rorb
or
movsb
push
cmp
inc
les
and
add
pop
ja
fs
fstpt
cmp
scas
mov
and
push
inc
xlat
sub
push
out
stos
ljmp
adc
xchg
lret
outsl
mov
ja
xchg
loope
in
std
fcoml
ss
loop
sbbb
cltd
fcompl
mov
dec
jle
mov
xchg
xchg
jl
leave
frstor
out
inc
pop
xor
mov
jge
fldenv
push
icebp
xor
mov
sub
xchg
out
mov
xor
aam
clc
das
or
icebp
f2xm1
xchg
xor
xchg
mul
es
test
adc
icebp
jo
sbb
mov
inc
leave
mov
fisubs
test
bound
ds
lret
sarl
jbe
push
icebp
lds
fldenv
scas
mov
es
cmpsb
not
outsl
clc
mov
or
adc
rcll
push
inc
cmc
and
jp
aad
xor
std
mulb
inc
cmp
leave
xor
negl
push
xchg
inc
add
push
and
pop
shll
ljmp
shrb
arpl
jmp
pop
das
mov
ret
mov
adc
push
xorb
cmp
mov
mov
gs
pop
insl
jecxz
movb
cmp
xchg
subl
mov
cli
mov
daa
and
cmp
or
inc
mov
inc
cmp
lods
test
test
repnz
nop
add
jbe
enter
dec
fidivs
pop
mov
xchg
add
add
mov
clc
addr16
jbe
adc
dec
mov
ja
sub
sbb
pop
push
into
daa
pop
inc
xchg
lods
xor
lock
rcll
sbb
dec
cld
pop
ret
pmulhw
andl
dec
sub
push
mov
jge
pop
mov
stos
pop
push
mov
mov
ss
sbbb
dec
andb
mov
ss
popa
pop
add
ret
sub
mov
jmp
pushf
mov
mov
mov
popa
cli
mov
add
vrsqrtss
dec
add
call
push
push
hlt
test
mov
mov
jmp
lcall
add
adc
pop
insl
dec
ja
cmp
ret
pop
or
sub
sub
scas
fidivl
movsb
stos
mov
mov
and
jge
mov
pop
out
inc
xchg
ds
es
out
and
imul
dec
xor
mov
int3
and
dec
les
testl
sbb
ret
pop
mov
jb
imull
dec
fs
imul
lods
jge
aad
pop
or
std
xlat
xor
jbe
mov
adc
mov
mov
mov
sub
daa
std
out
cmpsb
js
sub
push
push
xchg
iret
inc
pop
and
mov
dec
jo
sbb
sbb
aad
loope
outsl
jae
cltd
scas
fbstp
pop
mov
add
jno
cwtl
cld
cmc
jne
mov
cmc
imul
adc
mov
fbstp
lcall
jge
scas
inc
sti
push
mov
out
jl
push
pop
lret
lods
or
adcl
sbb
ror
adc
mov
fidivl
pop
mov
pop
sahf
mov
xchg
out
push
mov
mov
out
pop
mov
into
jo
xor
fidivrl
mov
and
xchg
mov
xchg
pop
mov
mov
test
jp
comiss
cmp
rorl
pushf
and
js
mov
cltd
push
icebp
stc
test
arpl
adc
inc
sub
mov
ljmp
jae
mov
sub
dec
pop
cli
cli
push
fs
iret
cltd
push
mov
sahf
dec
sbb
dec
xchg
movsl
movsl
or
adc
rclb
pop
pop
testl
dec
icebp
xor
out
fisubrl
mov
inc
jb
add
mov
fcompl
push
push
and
scas
mov
push
mov
jmp
sub
sub
shll
pusha
rclb
insb
into
dec
aas
jge
punpcklbw
xchg
call
aad
push
js
cmp
dec
mov
cmp
in
test
fidivrl
iret
pop
call
out
adc
push
cld
aad
xchg
rcrb
jp
clc
pop
xchg
lds
cli
scas
mov
lret
dec
lcall
shl
outsb
add
or
and
or
inc
pop
rclb
jb
push
push
mov
add
pop
or
lahf
pop
rolb
jo
lods
xchg
cmp
mov
add
jg
mov
jp
cwtl
iret
aaa
push
cltd
and
jmp
jb
cmc
cmpsl
or
repnz
mov
in
fistl
pusha
jg
mov
into
xor
xchg
bound
loop
cltd
test
movl
xchg
int
dec
fistpll
int
sbb
inc
ret
pop
lret
stos
and
xor
fsubrl
xchg
adc
jns
cli
sub
sub
stos
xchg
mov
insb
xchg
mov
sub
xor
jp
fsubrl
in
sbb
inc
rcrb
mov
push
in
xchg
pop
repnz
xchg
jecxz
out
push
sub
or
sub
into
mov
dec
aas
inc
int3
mov
mov
lds
push
pop
out
mov
inc
int
lea
xor
pop
out
push
dec
repz
sbb
xchg
sub
ret
in
or
mov
repz
aaa
in
mov
or
xor
push
adc
inc
jnp
mov
bound
fwait
loop
loope
popa
bound
mov
mov
jo
xchg
mov
imul
adc
mov
adc
ss
xchg
mov
sbb
add
cltd
popf
push
cmpsb
mov
xlat
repz
shlb
mov
cmp
sub
mov
test
imul
push
sbb
jp
push
adc
push
mov
mov
movsb
aam
ror
or
cmp
outsb
pop
mov
cwtl
adc
rclb
jb
push
sti
loop
into
jmp
jl
pop
xlat
inc
or
push
in
jle
ja
cmp
inc
xchg
xchg
mov
ss
mov
xchg
and
lock
add
inc
aas
or
idivl
and
imul
inc
inc
ret
addr16
les
jae
imul
icebp
or
or
aad
clc
mov
fnstenv
popf
scas
popa
lods
movsl
es
pop
add
fwait
std
pop
mov
pop
std
mov
test
xor
pushw
lcall
or
js
cmp
xor
pop
outsl
xchg
sahf
add
mov
cmpsl
add
lods
jp
rol
push
test
mov
xchg
push
xor
dec
push
dec
mov
test
or
mov
fwait
test
adc
stos
or
aaa
mov
in
cld
fdiv
enter
jno
and
int
pop
push
addr16
mov
or
movsb
cwtl
sbb
lock
mov
xchg
and
inc
outsb
je
aaa
aas
xchg
movsb
dec
jns
xorl
mov
add
or
je
loope
fnsave
xchg
adc
mov
push
or
dec
cltd
les
negb
mov
pushf
sarb
repz
push
movsl
pusha
lods
sub
xor
lods
enter
clc
push
push
fbstp
sub
jp
test
cmpsb
sub
scas
mov
hlt
push
pop
ja
rorb
mov
mov
cmp
test
sbb
call
testb
mov
subl
or
lret
xchg
sbb
push
addr16
or
inc
dec
int3
fcompl
jne
ja
sbb
dec
pop
xchg
mov
cld
inc
rcll
enter
cmp
rorb
shlb
push
int3
data16
imul
pop
jmp
cmpsb
ret
test
arpl
mov
cld
loope
pushf
ficomps
dec
std
mov
inc
cmp
dec
mov
test
ja
rorb
mov
push
dec
bound
push
inc
addr16
mov
hlt
or
aas
aas
cmp
bound
loope
inc
jno
xor
inc
pop
mov
xchg
movsb
cmp
mov
xlat
orl
mov
xor
cmp
ss
and
adc
sub
movsl
out
call
inc
ss
in
cmpsb
les
cmp
xor
sbbl
or
dec
pop
push
adc
xchg
je
fnstsw
arpl
push
push
shrb
lods
mov
mov
mov
and
sub
aaa
out
push
ds
movsl
lods
pop
add
mov
cmp
aaa
loop
call
popa
mov
mov
mov
sub
xchg
or
adc
add
xchg
pop
xor
bnd
add
leave
scas
sahf
pop
das
int
fs
adc
jg
enter
inc
aas
daa
enter
lods
aaa
gs
xor
int3
sbb
push
fucom
in
push
jb
xor
ljmp
pop
dec
lret
jb
lock
daa
jb
lret
mov
ja
pop
sub
sub
sub
sub
jne
sbbl
call
imul
mov
sahf
jb
lds
sti
daa
dec
nop
das
orl
ret
push
xchg
repnz
lods
add
dec
inc
cmp
cwtl
stos
mov
jg
jle
push
add
pop
ficoms
mov
js
std
or
inc
fisubs
and
mov
jne
and
pop
cmpsl
mov
ret
jo
loopne
movsb
sbb
lcall
dec
mov
dec
fisubrl
mov
insl
imul
stos
mov
mov
insl
repz
jecxz
arpl
mov
call
dec
ds
lret
push
out
in
fists
test
jae
pop
fstpl
jne
cmpsl
mov
popf
aaa
pop
dec
lods
mov
mov
and
pop
jnp
ja
cmp
xchg
stos
ffreep
jle
jb
mov
mov
and
xor
xchg
les
jo
into
out
inc
nop
mov
outsl
adc
xor
test
fbld
pusha
gs
sub
mov
mov
mov
pop
pop
mov
cwtl
je
pop
daa
cmp
inc
mov
and
leave
jne
popa
lahf
cmp
negb
cmp
lahf
lret
sub
cmp
xchg
imulb
leave
int
sti
push
xchg
push
dec
mov
jb
mov
mov
ss
cmp
and
ja
scas
jp
mov
lock
inc
jecxz
or
scas
movsb
lcall
sub
push
repz
or
into
inc
cmp
pusha
fistpl
inc
mov
pop
push
addl
mov
clc
mov
rcrb
stc
out
mov
or
popa
repnz
and
adcb
into
fdivr
notl
es
fcomps
dec
lea
rcll
pop
loop
push
pop
and
lret
imul
adc
xlat
test
loop
pop
fnstcw
jge
mov
arpl
lods
sub
jnp
push
out
mov
jle
lret
inc
popa
jbe
inc
inc
mov
push
stc
mov
cmpsb
pushl
inc
xorb
xorl
push
cmpb
insb
add
aaa
cmp
cmp
lock
fxam
popl
mov
or
and
xchg
pop
and
repnz
fcom
test
sarl
push
pop
xor
mov
ja
push
adc
inc
shll
or
mov
inc
fisttps
add
dec
mov
sahf
inc
cmp
je
cltd
mov
and
and
xchg
outsb
pop
ds
aaa
jecxz
xor
inc
or
scas
cwtl
repz
sbb
cmp
mov
dec
mov
or
push
mov
scas
dec
lods
sbb
imul
mov
sbb
cmpsl
inc
or
fistl
xchg
xchg
cmc
or
add
out
push
aaa
mov
xor
cmc
lea
orb
fcmovb
mov
fdivs
out
rolb
pop
or
sar
add
xchg
mov
ret
mov
ja
mov
out
fldt
outsl
dec
jmp
adc
mov
mov
rcll
jl
ljmp
sbb
cs
jne
xchg
shll
pop
inc
in
loope
sbb
cmp
rcll
pop
scas
or
dec
inc
dec
test
lahf
sbb
push
pop
adc
fidivrl
adc
std
cmp
rolb
push
mov
pop
adc
mov
test
cmp
add
fiaddl
repnz
scas
int3
icebp
fsubp
push
shlb
push
sbbb
xor
mov
push
ror
out
fstpt
xor
and
mov
scas
add
adc
prefetcht1
pop
popa
pop
das
lods
xor
jo
adcl
fmuls
stos
add
inc
mov
sbb
in
mulb
call
sub
sbb
jno
dec
notl
push
aas
jge
mov
cwtl
sarb
cli
lock
cmpsb
push
js
jg
adc
inc
les
inc
and
sar
outsl
and
rolb
lret
test
xchg
ret
dec
js
sahf
int
push
mov
cmp
mov
sub
nop
add
xor
test
inc
dec
xchg
enter
lods
adc
sarl
adc
push
xchg
pop
xlat
or
mov
mov
into
inc
sub
cld
shrl
out
pop
sbb
or
adc
pop
jbe
lods
jns
aas
pop
mov
aam
into
lret
mov
mov
jge
shlb
lret
xchg
ljmp
sub
sbb
clc
pop
jnp
data16
addb
lret
push
mov
add
push
xchg
sahf
sbb
stos
mov
mov
xchg
add
push
xor
dec
push
ret
cmp
dec
movsl
inc
xor
dec
fstl
test
cltd
jnp
ljmp
in
jle
mov
out
xor
je
je
shlb
add
sub
sbb
rcrb
jbe
or
ret
std
les
orb
mov
sub
aaa
aas
jbe
sbb
pop
mul
jne
cmp
test
test
lret
out
and
mov
outsl
stc
jmp
cld
leave
cmp
mov
xchg
cmp
repnz
pop
sub
mov
adc
mov
cmpsl
out
xchg
dec
inc
adc
mov
or
add
jge
add
imul
jnp
add
andb
pop
int
js
mov
xor
or
sbb
xchg
mov
push
push
int3
push
jnp
mov
inc
ret
popf
rdtsc
mov
dec
xor
ret
out
dec
clc
leave
fldenv
imul
in
xchg
add
pop
dec
inc
pop
arpl
ret
mov
xlat
psubw
jg
insb
and
aas
jns
xchg
inc
inc
add
mov
test
sbb
pop
pop
pop
repz
imul
repz
mov
cmp
push
dec
adc
lods
psrlq
xor
sarb
loop
mov
mov
pop
loopne
data16
lods
xchg
xlat
inc
mov
push
sbb
sbb
lods
test
loopne
bound
and
out
xchg
sahf
shl
dec
out
xchg
jg
jo
adc
adc
aaa
imul
sub
daa
inc
mov
incb
addr16
and
es
shlb
cmpsb
scas
lea
movb
nop
sbb
leave
pop
jo
inc
in
sarl
add
les
adc
fucom
jnp
les
aas
pop
push
sub
mov
xchg
adc
cmp
test
sti
movb
out
mov
inc
push
in
cmc
aam
fldl
clc
int
insl
cmp
fstpt
mov
mov
nop
sbb
inc
ja
fsubrl
adc
call
mov
imul
js
mov
sub
lods
mov
rcrl
dec
add
popf
xor
in
insb
jmp
cltd
sub
add
push
and
lea
mov
jae
test
mov
push
out
add
mov
push
les
sbb
bound
outsb
lahf
xchg
into
cmp
out
pop
mov
dec
mov
popf
xchg
dec
pusha
shll
push
and
push
ret
pop
pop
ljmp
push
cmpsl
test
pop
push
mov
in
cmp
sub
fdivrs
cmp
cmp
xor
sub
std
negb
sbb
mov
and
jnp
push
jmp
insb
and
and
bound
in
inc
cmpl
push
iret
mov
jl
xchg
cmp
sbb
call
cs
hlt
add
cmp
lods
rorb
jno
jg
dec
je
stos
adc
sbb
lahf
pusha
mov
es
xor
cmpsb
inc
cmp
shll
insb
js
sahf
negl
inc
sbb
xor
dec
mov
push
test
or
lods
push
rorb
fldl
das
xchg
xchg
lea
adc
xlat
insb
cs
cs
hlt
xchg
pop
inc
mov
je
mov
into
xor
xor
pop
jecxz
pop
pop
idivb
push
or
clc
dec
pop
add
ret
and
xorb
add
fldcw
mov
pop
xor
push
insl
psrlq
push
xchg
arpl
dec
ljmp
rorl
shlb
xor
pop
inc
sub
mov
mov
rcll
pop
loope
addb
jns
add
xor
pop
popa
je
mov
sbb
je
adc
cmpsb
filds
iret
inc
jle
add
jns
insb
push
push
popa
outsb
mov
sub
sahf
cs
popl
jecxz
icebp
popa
or
adc
xchg
add
pop
cmp
cld
lds
cld
shr
in
push
repz
jge
xor
adcb
cmp
test
shlb
xchg
out
dec
mov
sub
test
and
xor
pop
xor
add
dec
pop
rcll
shrl
push
sub
inc
inc
add
or
cmp
adc
sub
add
movsl
fdivrl
add
push
mov
push
add
xlat
xor
stc
jne
icebp
sahf
aaa
xchg
mov
add
fs
mov
shrb
fldenv
loope
push
shrl
inc
sub
iret
adcl
ficoms
push
cli
fisttpl
fstpl
imul
xor
lahf
bound
ret
shlb
cltd
xchg
negl
cmp
ja
sbb
lret
fdiv
scas
sub
adc
pusha
jnp
scas
jnp
into
inc
sub
mov
mov
shrl
frstor
jno
pushw
mov
add
xchg
int3
out
adc
jle
repnz
imul
mov
push
fwait
jle
adc
out
mov
dec
jl
out
aam
xchg
movsl
cmp
stos
sub
push
add
xlat
test
push
loop
ds
mov
lock
inc
cmc
jno
add
adc
jmp
xlat
cmp
or
adc
decb
mov
cmp
icebp
jbe
or
jg
xlat
mov
xchg
mov
jo
sbb
mov
jg
insl
xlat
xchg
adc
ljmp
lea
aas
add
mov
sbb
jns,pt
hlt
sub
cmp
and
and
sub
std
hlt
sub
pop
jmp
add
scas
stc
add
sti
andl
sahf
popf
add
addr16
xchg
rorb
dec
push
sub
xchg
cmp
xchg
push
insb
aaa
jae
xlat
mov
adc
mov
or
or
adc
mov
push
xchg
sub
jge
pop
ret
sbb
add
int
stos
push
test
mov
call
int3
push
cld
dec
cmp
or
pop
loope
lods
or
xor
and
or
ds
outsb
scas
sbb
sub
or
dec
inc
mov
xchg
jo
repz
pop
lret
int
adc
into
gs
test
mov
cmp
insl
pop
jecxz
pop
fistpll
inc
adc
jbe
mov
mov
imul
inc
jae
jmp
aad
test
aam
dec
in
daa
bnd
jbe
jl
jbe
fistpl
cld
inc
shufps
jmp
mov
movsb
xlat
adc
sbb
inc
adc
fs
sub
or
jb
ja
or
inc
into
clc
sub
push
xchg
xlat
mov
mov
ja
nop
push
scas
jbe
inc
movaps
inc
cs
push
cmp
fdiv
cmp
jg
dec
or
pusha
imul
push
jmp
jbe
xchg
jae
sub
ficomps
mov
int
add
push
bnd
fdivl
call
out
push
rorl
popf
loop
js
cmp
stos
fnstsw
xchg
insl
iret
jmp
hlt
xchg
int
sti
lcall
add
out
mov
push
sub
int
xchg
cmpsl
sbb
mov
cltd
leave
add
enter
adc
nop
mov
dec
lcall
xlat
jmp
inc
add
in
cmc
repz
sub
stos
daa
jb
or
mov
out
cld
shr
inc
lret
jle
xchg
lds
mov
xor
jb
pop
bound
push
out
push
push
cmp
fisttpll
xchg
mov
fisttpl
fsubrp
lret
cs
adc
aam
pop
jne
cmc
push
les
cmp
pop
and
xchg
adc
inc
mov
adc
xor
mov
imul
jge
aas
add
cmp
movsl
testl
add
repz
jnp
daa
push
dec
repz
sub
movsb
cmp
xor
dec
das
push
cmp
inc
or
scas
push
xor
into
sub
dec
or
xor
push
jmp
adc
rcll
cmp
jge
inc
adc
je
sti
std
cmpsb
mov
jnp
mov
add
rcll
cmc
dec
pop
lods
jnp
subl
dec
dec
test
cltd
cmpsb
and
mov
stos
mov
jle
xor
in
push
mov
out
lahf
test
jo,pn
mov
mov
ret
add
sub
xchg
out
jo
jg
icebp
pop
scas
mov
popa
cwtl
lret
jo,pn
scas
repz
cmovb
mov
add
mov
xor
out
push
pop
into
lret
pop
cmc
stos
pop
dec
pusha
jp
test
sbb
pop
cmp
mov
ja
push
lret
mov
mov
jp
jbe
cmovns
add
in
push
in
std
lock
and
lods
mov
loope
pushf
cwtl
lret
rclb
mulb
push
outsb
mov
pop
popf
xchg
lret
in
jnp
arpl
jbe
sub
mov
cwtl
dec
mov
and
lret
push
mov
sbb
out
mov
scas
or
ret
push
push
push
pop
mov
xchg
jge
sub
add
mov
in
mov
xor
repz
in
push
fstps
mov
xor
xor
stc
insl
and
in
daa
int
lcall
push
int3
mov
sbb
dec
xor
lahf
shll
mov
cltd
inc
xchg
shll
fcoml
mov
cwtl
leave
adc
dec
popa
pop
xor
cld
lock
mov
icebp
xchg
aad
push
fimull
rorb
jp
mov
jnp
mov
in
pop
lods
or
mov
dec
sub
outsb
test
data16
outsb
scas
aaa
jge
xchg
pop
mov
dec
int3
out
mov
scas
sbb
jbe,pt
pop
cli
nop
xchg
jg
xchg
and
mov
inc
or
les
mov
cmp
imul
popf
xor
jns
scas
xchg
xor
icebp
dec
movsb
test
jnp
pop
inc
cmpsl
mov
adc
dec
inc
int
ljmp
or
fstpl
lcall
addr16
ss
mov
sub
stos
adc
cltd
daa
aad
push
dec
push
repnz
insl
sub
mov
dec
sbb
test
dec
in
adc
jo
in
insb
cltd
daa
cmp
lcall
adc
iret
cmc
push
loop
push
dec
inc
into
mov
mov
or
cmp
jns
mov
mov
rol
inc
pop
pop
or
pushf
orb
cmp
fldt
or
push
dec
fldcw
xor
aam
in
aam
shll
or
mov
into
mov
add
sbb
popf
fstpt
jmp
jb
pushf
cmc
scas
xlat
outsl
cltd
daa
fsubp
or
jo
int
jmp
pushf
jne
push
cmpsl
add
pop
jns
cmp
lret
sbb
mov
roll
in
fdiv
sub
xchg
int3
loop
addr16
es
int3
adc
popa
mov
mov
xchg
and
inc
add
pop
xchg
fcomi
and
and
loopne
push
pop
mov
xor
sbb
pop
clc
lock
and
add
jmp
movsb
pop
and
mov
pop
pop
sbb
mov
icebp
pop
cs
scas
mov
mov
imul
inc
push
xor
movb
sahf
lea
inc
mov
mov
lret
decb
lret
incb
out
push
aam
xor
mov
mov
add
in
out
aad
jnp
push
test
sti
jecxz
cmp
loope
mov
push
nop
cs
jmp
lods
dec
inc
or
xlat
sub
int3
mov
mov
cld
mov
addr16
fs
dec
and
jecxz
pop
cmpsl
popf
ret
les
xor
xor
adc
ret
cmpsb
or
push
ds
dec
push
movsbl
cld
nop
pusha
xchg
lea
pop
popf
sub
fs
mov
jge
ljmp
dec
stos
movb
mov
clc
ret
lea
xchg
or
cmpsb
cmpsl
out
and
pop
inc
loope
xlat
lods
pop
cmc
ror
mov
cmpsl
js
cmp
pop
insb
ljmp
cmp
push
lahf
push
cmp
out
js
addr16
stc
jo
adcb
and
outsb
lods
push
mov
rclb
xchg
sbb
jge
dec
and
dec
out
int3
pop
mov
pop
out
loope
scas
nop
incl
jmp
pop
and
loopne
sarl
cmpsl
mov
cmp
rol
lahf
icebp
in
xor
adc
inc
fldz
imul
ja
xor
cld
popa
mov
sbb
xor
sub
mov
dec
into
inc
jp
push
and
inc
xchg
push
pop
or
cld
add
sbb
bnd
cmp
jge
mov
paddq
dec
bound
adc
add
pushf
out
pop
cli
add
sub
aad
push
xchg
sti
in
ficoml
xchg
bound
push
testb
mov
dec
pop
shlb
sbb
out
push
dec
inc
adc
sbb
xchg
sub
xor
jmp
dec
ss
and
push
std
out
popf
jge
cs
jns
mov
inc
or
jg
scas
es
rorb
jmp
mov
test
jo
mov
call
adc
dec
testl
test
jne
in
data16
ret
dec
fsubs
mov
mov
imul
mov
dec
in
dec
scas
dec
ds
ds
jg
dec
inc
cmp
push
jae
sub
bound
das
cmp
out
fcoms
cmpsb
imull
outsl
add
dec
xchg
arpl
push
repnz
out
lahf
sbbb
test
out
sub
lods
ljmp
je
testl
cmp
jge
push
fldt
in
decb
rcrb
add
mov
daa
mov
cmp
pop
jmp
testb
cltd
inc
add
scas
cmp
out
aad
sahf
push
rorl
sub
mov
pushf
sbbl
stos
or
cmpsl
mov
jg
mov
sbb
cli
mov
in
jo
dec
add
std
out
or
or
xor
shrb
push
xor
subb
or
shr
mov
add
xor
push
mov
add
testb
pop
pop
sub
loop
scas
push
cmpsl
sub
jecxz
sbb
xor
mov
or
std
test
loopne
inc
repz
je
or
pop
test
jo
pop
and
push
icebp
daa
icebp
addb
fistpl
jg,pt
push
jg
ja
cmp
add
scas
xchg
mov
popa
inc
jo
adc
jae
imul
xor
mov
dec
jp
add
mov
adc
outsb
dec
or
out
out
mov
gs
shll
push
adc
jae
faddl
hlt
js
or
mov
mov
mov
jns
xor
jmp
mov
push
adc
mov
or
ds
jbe
pop
dec
inc
push
mov
jo
mov
pop
out
mov
fimull
movb
rcrl
je
jl
lods
mov
pop
lods
in
mov
pushf
jg
inc
jbe
xor
outsl
sub
cltd
jne
mov
inc
push
bnd
add
cmpsb
adc
sub
xchg
mov
jg
mov
mov
iret
out
subb
cmp
add
inc
inc
lahf
push
jb
xchg
stc
iret
popf
addl
stc
pop
mov
out
insb
or
enter
cltd
and
mov
push
rorl
mov
ret
dec
sbb
subl
fcoml
je
out
jmp
push
push
xchg
sub
push
push
xor
pop
je
int
loopne
daa
out
xor
fwait
vmaskmovdqu
sarl
mov
testl
xor
push
cli
add
in
in
sbb
mov
es
xchg
ljmp
inc
push
js
sub
xchg
mov
dec
shrb
fsubl
in
addb
shr
inc
push
les
sbb
cmpsb
add
mov
jmp
push
scas
movsb
push
push
dec
or
xchg
loopne
add
out
out
daa
mov
and
adc
or
popa
arpl
inc
adc
imulb
sbb
xor
das
jg
xchg
mov
rorb
mov
int3
or
arpl
dec
leave
hlt
mov
cmpsl
mov
mov
sti
pushl
lahf
in
push
int3
mov
cmp
cmpsl
push
ds
pop
cmp
daa
dec
fstpl
sub
scas
dec
lahf
dec
dec
mov
js
jnp
ja
fsts
mov
outsb
je
and
mov
sub
sub
add
push
pop
xor
aas
sub
pop
jo
xorl
fs
pop
les
in
in
jo
inc
orl
push
ja
ficoml
xchg
pop
mov
adc
adc
leave
repz
fidivrs
in
incl
mov
out
das
or
and
xchg
into
outsl
out
push
inc
cmpsl
pop
or
add
arpl
cmp
sti
sub
int
int
cmp
dec
mov
xor
pop
xchg
xor
pop
jecxz
jne
cmc
shl
cmc
test
out
xor
in
sbb
jae
cld
aas
outsb
dec
xchg
sbb
xchg
mov
aad
sbb
cmp
clc
in
pop
or
push
xchg
jecxz
aad
ffree
imul
std
lods
xchg
test
mov
xchg
leave
jl
test
cmp
test
sti
push
bound
in
dec
jae
xchg
mov
pop
js
mov
push
xchg
sbb
push
pop
iret
cltd
sbb
xor
adc
test
adcb
jmp
push
or
and
popf
cwtl
xchg
sub
ja
push
outsl
xchg
mov
rcrl
leave
hlt
jne
add
add
imul
das
outsl
addr16
pop
cmpsl
push
sbb
jmp
inc
add
pop
dec
sti
in
aam
shll
shlb
sahf
inc
mov
pusha
xchg
mov
add
mov
test
sub
sbb
sbb
mov
sub
dec
jo
jp
inc
jg
movsb
shll
pop
ja
xchg
addr16
mov
inc
test
aaa
cmp
rcl
inc
push
jle
cmc
sub
xor
push
push
dec
cltd
fadd
popl
sahf
mov
jle
push
pop
fs
mov
mov
sar
mov
mov
inc
or
or
push
mov
inc
sti
sar
sub
xor
and
inc
imul
or
pop
add
sub
jno
lock
testb
mov
fwait
mov
jne
add
pop
dec
xchg
inc
mov
mov
mov
loope
push
xlat
push
xor
fidivs
lea
and
pop
insb
jnp
fnsave
bound
lret
sahf
add
push
sbb
mov
pushl
pop
aad
imul
adc
outsl
xchg
aaa
mov
or
sahf
xchg
mov
aam
xchg
jnp
clc
shrl
jmp
inc
mov
cmp
and
push
mov
cmpsl
add
mov
outsl
dec
stc
and
loop
and
lret
inc
or
cmp
divb
and
subb
mov
repnz
dec
popa
adc
sbb
pop
dec
and
stc
and
adc
sub
add
and
push
xor
mov
mov
and
lret
push
out
pop
es
out
add
push
out
push
data16
shrl
jecxz
add
mov
insb
jne
jecxz
orb
out
push
cli
dec
pop
shl
ret
out
or
sbb
ss
xor
xchg
mov
adc
ljmp
inc
mulb
mov
push
lea
mov
mov
cltd
icebp
jno
outsb
inc
lds
push
push
or
repz
pusha
je
mov
loopne
add
xchg
and
jo
mov
insl
mov
adc
or
mov
pop
xchg
mov
xor
ja
xor
lea
sbb
aas
dec
js
sbb
fwait
xchg
call
popa
xlat
fnstenv
mov
test
fidivrl
insl
cmp
dec
and
fldl
int
ja
addr16
sbb
popf
add
in
clc
rclb
add
or
std
sbb
or
jmp
and
or
test
test
repz
xchg
adc
ret
shll
push
push
xor
jl
jb
and
inc
sbb
sub
clc
dec
sbb
shlb
pop
add
dec
inc
adc
xchg
dec
and
inc
inc
pop
inc
in
sub
ss
insb
xchg
add
mov
rcll
ret
pop
test
xchg
cmp
int3
adc
pop
aaa
pop
loop
imul
fiadds
std
push
out
call
cmp
add
inc
ja
sahf
mov
cltd
adc
jns
lods
xor
jo
nop
gs
popf
cmp
adc
and
xor
mov
sub
xchg
sub
cmp
cmc
pop
ds
rcll
lods
dec
ds
jp
jae
sub
fwait
add
into
dec
lret
mov
clc
mov
stos
dec
cmp
or
andb
test
imul
testb
jno
xchg
push
insl
and
add
addr16
fildl
cmp
mov
call
mov
jecxz
jae
pusha
outsb
dec
ss
adc
xorb
lds
xchg
sbb
xchg
orl
test
or
outsb
jmp
bnd
xor
cmp
sbb
sub
shrb
push
mov
jge
push
push
daa
icebp
test
and
and
cmc
sbb
push
fstps
cwtl
rcll
int
loope
mov
mov
cltd
dec
scas
popa
clc
out
xor
mov
lods
inc
mov
rcrl
push
mov
movsb
xor
or
rol
and
push
sub
add
mov
dec
add
pop
inc
imulb
mov
sti
push
cmpsl
jno
gs
xchg
xorb
sbb
inc
andps
test
mov
xchg
adc
xor
insl
pop
mov
repz
cmpb
dec
or
jnp
mov
cmpsb
bound
sub
pop
or
loope
arpl
jg
push
jno
cmp
and
cmp
cwtl
sub
cmp
sub
enter
add
dec
dec
xchg
inc
bound
xchg
aam
das
icebp
daa
lret
gs
loopne
ret
jecxz
inc
rol
jne
test
outsb
js
ss
adc
lret
std
addr16
xchg
arpl
idivl
into
sbb
ljmp
lret
cwtl
adc
mov
xchg
fsqrt
push
clc
sub
fisttps
dec
lahf
cmp
mov
xor
loope
xchg
or
xchg
lods
jbe
push
stos
out
mov
push
and
push
mov
mov
cmp
sbb
dec
inc
pop
jecxz
js
call
aas
xor
pop
in
in
lods
movq
dec
mov
mov
repnz
enter
cli
icebp
out
rorl
subl
push
pop
cmp
popa
sub
mov
cmpsl
dec
ljmp
scas
xchg
add
arpl
mov
lods
jge
push
ja
iret
dec
neg
rorl
or
mov
add
add
lea
pop
iret
adc
incb
cmpsl
add
clc
push
es
pop
lock
xor
xchg
xchg
mov
vmread
loop
andb
pop
in
mov
add
aad
inc
addr16
ret
lahf
cmpxchg
pop
cmp
dec
sbb
jae
cltd
dec
das
and
icebp
xor
test
inc
fwait
sub
test
neg
nop
rclb
sbb
jecxz
push
mov
loopne
and
icebp
mov
jl
in
popa
aad
ret
or
fwait
pop
js
push
mov
add
loopne
cmp
pop
imul
add
inc
sub
jge
scas
movsb
push
daa
adc
sarl
jmp
adc
lock
mov
mov
xor
mov
sbb
xchg
scas
lret
int3
push
xchg
pop
stc
mul
inc
or
mov
imul
mov
bound
pop
fcmovnu
fdivs
sbb
jno
mov
lea
xor
outsb
cmpsl
xchg
sarb
xor
adc
push
inc
in
lret
mov
repz
lock
bound
ss
ljmp
add
and
addr16
mov
sbb
push
cltd
outsb
les
roll
andl
pop
scas
aam
jno
loope
imul
data16
mov
les
mov
xchg
xchg
pusha
jp
movsl
push
pop
mov
mov
lret
leave
arpl
xchg
jo
insb
fcoms
enter
pushf
je
es
push
ss
lret
and
mov
sub
fmuls
scas
dec
fs
test
jo
stos
push
cmpsb
dec
dec
test
push
sbb
std
repz
adc
aaa
xor
insl
jne
inc
and
imul
adc
adc
outsb
cli
dec
sbb
jnp
rcll
mov
adc
inc
cld
dec
mov
ss
mov
dec
push
push
pop
jo
mov
cmp
add
add
jnp
lret
push
jno
aad
mov
in
sub
popf
mov
xorb
std
insb
stos
push
cmp
jp
imul
bnd
lahf
arpl
cs
enter
push
cmp
je
mov
sub
push
push
aas
pop
mov
jecxz
fidivrl
mov
jmp
in
jbe
inc
rcll
cld
push
cmp
notl
inc
lods
sbb
sub
xor
push
pop
xchg
jge
rclb
movsb
or
mov
xor
cwtl
push
inc
lcall
jns
xor
push
add
andl
cli
fnsave
xor
outsl
cmp
test
jne
mov
scas
xor
jg
cmc
icebp
lea
imul
pop
cmp
jae
push
rorb
adc
xor
lods
xorb
test
into
jne
nop
dec
mov
inc
mov
aam
sbb
lahf
outsl
shll
jl
test
gs
push
add
xchg
out
adc
cmp
sub
push
sahf
loopne
aaa
shll
push
mov
ss
addr16
mov
scas
ja
andb
out
gs
hlt
fdivrl
pop
xor
mov
push
mov
mov
pop
adc
jmp
cltd
insb
jns
insl
lock
mov
bound
xor
mov
das
lret
adc
test
adc
loopne
push
xchg
push
cmp
inc
pop
xchg
nop
mov
pop
loope,pt
hlt
in
sbb
mov
ds
out
push
adc
cmp
cwtl
lods
imul
fsubrs
dec
dec
or
inc
imul
jl
sub
arpl
lods
lea
cmp
mov
shrl
out
out
fwait
push
cs
mov
pusha
mov
xlat
es
mov
outsl
int
jo
jmp
shlb
movsb
dec
xor
rorl
and
js
call
or
out
add
or
int3
mov
mov
out
bnd
popa
inc
inc
gs
roll
jns
add
into
adc
lds
imul
mov
mov
out
xchg
mov
mov
push
nop
lock
push
sbb
out
adc
mov
sub
cmp
cld
in
test
push
cmp
popa
xchg
movsl
lods
push
movsb
popf
fldt
sub
jo
test
ds
lea
inc
inc
aam
lcall
mov
and
or
mov
pop
xor
mov
push
fs
xchg
mov
jp
adc
data16
stos
mov
ja
jl
enter
sbb
xor
cmp
scas
aad
and
test
stos
pop
mov
jecxz
fnstenv
inc
es
fld
jg
mov
inc
cmp
push
sub
inc
aaa
inc
test
or
dec
dec
inc
mov
pop
xchg
repz
pop
ds
pop
pop
andb
cli
add
mov
movsb
cld
xchg
and
jbe
inc
inc
add
pop
push
insb
push
adc
popf
xchg
ret
push
dec
push
jns
mov
jnp
pop
jmp
mov
jg
cmp
or
adc
fisttps
movsl
lret
push
sbb
lret
cmp
mov
out
xchg
ret
and
lods
mov
or
out
cli
faddl
jecxz
xchg
je
sbb
std
shrl
rol
xor
dec
out
adc
mov
jge
cs
xchg
imul
std
cmc
inc
xor
mov
mov
jb
roll
xor
daa
sbb
repnz
fnsave
jb
fstpt
jl
dec
mov
jmp
adc
mov
push
icebp
popa
icebp
adc
or
mov
jl
loop
jecxz
fnstenv
mov
xchg
movsb
ror
pop
dec
data16
lods
mov
jae
lea
sub
loop
jnp
push
pop
jmp
jp
jp
jmp
mov
xor
cmpsl
test
stos
dec
shl
mov
imulb
pop
dec
inc
rcrl
sub
add
push
cwtl
mov
mulb
adc
pop
push
jecxz
mov
cld
cwtl
loope
iret
outsl
mov
sub
popa
mov
jns
inc
pop
popa
test
out
xchg
fdivrs
lahf
mov
pop
mov
add
add
jmp
xchg
adc
xchg
andl
xor
push
push
rcl
ljmp
cmp
mov
inc
aaa
mov
add
pop
je
in
sbb
scas
jp
sbb
jge
daa
mov
push
orl
xchg
pop
xchg
jno
fwait
je
dec
jnp
and
inc
cmp
mov
loope
xchg
out
mov
add
xchg
shr
add
xchg
sub
imul
mov
bound
lret
or
xchg
adc
hlt
xchg
mov
in
jle
dec
pop
cmp
push
gs
push
andb
or
cmp
test
fdiv
xor
dec
mov
faddl
inc
push
imul
sub
orl
mov
std
jl
sub
pop
cmp
aaa
fmull
popl
shr
jo
xchg
and
outsl
xchg
push
bnd
mov
xlat
dec
aam
into
mov
push
sub
out
sti
xchg
pop
inc
fnstsw
inc
jge
ja
add
sti
divl
iret
cmpsl
pusha
push
xchg
adc
or
lods
jecxz
xor
mov
sub
outsl
cltd
cmp
xchg
int3
cmp
jns
jge
shlb
out
mov
in
mul
sub
jne
ja
aas
cwtl
or
jge
xor
dec
sbb
xchg
mov
idivl
rcrl
cmp
sbb
push
movsl
sbb
mov
or
jno
adc
mov
mov
cmp
or
daa
xor
test
xchg
cmpsl
jo
stos
mov
lods
test
cld
mov
fmul
pop
push
sbb
loop
out
sahf
xor
hlt
jns
repz
and
push
push
cs
dec
mov
cli
and
push
cld
shrb
jge
inc
jl
jae,pn
imul
int
mov
jnp
mov
int3
cli
gs
sbbb
es
and
scas
out
push
cmpsb
shrl
outsb
cmp
shll
stos
subl
add
push
jae
xor
test
mov
into
pop
std
sub
push
bound
mov
insl
pop
xchg
cmp
push
neg
icebp
les
testl
aad
call
hlt
cld
xor
inc
fstl
jnp
or
push
and
push
fnstsw
push
xchg
leave
cld
roll
mov
mov
dec
cld
jp
ljmp
nop
andl
cli
in
cmp
out
call
in
call
or
into
ja
mov
loop
test
inc
pop
xor
mov
iret
xchg
dec
pop
fdivs
sar
cmp
and
and
and
inc
cmp
adc
sub
pop
jae
sub
sbb
pop
mov
jbe
lock
icebp
or
push
std
in
lcall
sahf
push
pop
mov
idiv
xchg
xchg
pop
pop
fisubrl
or
jl
xor
addb
jns
cmp
gs
xchg
mov
lock
dec
cld
js
sub
fwait
xchg
xchg
mov
mov
dec
xchg
jl
nop
xchg
jmp
lock
rorl
jnp
mov
mov
bextr
in
dec
imul
mov
mov
jo
mov
lods
stc
and
rolb
add
fld1
mov
push
or
pop
pop
jle
jns
jp
out
test
ds
fisubs
mov
outsl
mov
jno
subb
lock
cs
call
outsl
clc
sbb
insl
and
jo
cmpb
jnp
out
lret
test
ljmp
ficoms
cmp
or
scas
fdiv
leave
sub
testb
jae
dec
mov
dec
cmc
jmp
or
popa
mulb
in
add
xchg
rol
inc
mov
mov
dec
roll
fisubs
adc
and
test
xchg
adc
dec
test
imul
ret
cmc
jbe
and
int
les
out
scas
dec
add
sahf
xchg
sub
push
xor
ficompl
inc
dec
xlat
pop
add
lcall
push
fdivs
divl
stos
icebp
or
lods
int3
rol
jmp
out
shll
cmp
popa
adc
cld
jbe
or
ret
popf
rcr
pop
inc
mov
lds
aad
cmp
mov
adc
dec
jle
push
movl
adc
jbe
xchg
jbe
sub
xchg
out
in
sub
cmp
mov
mov
int3
cmpb
sub
jbe
mov
loop
push
push
test
in
gs
insb
cmp
cmp
sbb
in
test
lds
out
mov
push
dec
mov
push
push
lock
jne
xchg
inc
fsubrp
loop
lret
enter
subb
jg
ret
cmp
fbld
in
push
push
sub
push
lahf
cmp
cmp
roll
dec
xchg
sarl
mov
popa
out
mov
test
popf
loope
xchg
add
xlat
xor
movsl
and
aam
xchg
popa
pusha
xor
dec
or
outsb
jecxz
das
ljmp
loopne
lock
dec
push
or
leave
mov
lcall
cmp
mov
decb
pop
shlb
push
push
dec
dec
jl
enter
xor
pushf
sbb
lods
adc
fdivrl
dec
dec
aad
jb
mov
inc
js
sbb
or
jno
mov
je
data16
scas
mov
fwait
fs
rorb
cmp
jecxz
sub
loop
pusha
outsl
xor
push
cmc
mov
aam
ljmp
jle
cld
aas
pop
adc
scas
mov
mov
adc
cmp
push
insb
sti
les
hlt
fisubrs
imul
jl
mov
in
xor
inc
mov
adc
add
mov
xchg
and
jecxz
jnp
icebp
mov
jg
cmp
in
les
cmc
jmp
rcrl
or
ret
push
jnp
mov
pop
jge
xor
repnz
loop
push
out
pop
jecxz
jmp
data16
mov
shlb
fldenv
daa
jp
or
bnd
aaa
dec
xchg
pop
lahf
ss
mov
add
pop
cmp
sar
xor
sbb
mov
pop
lret
into
xchg
sbbl
push
inc
test
xor
xchg
inc
loop
lret
jno
and
mov
mov
mov
add
lret
outsb
pop
in
mov
and
pop
scas
jno
enter
stos
sbb
cmp
int
ja
cmpsl
dec
sarl
rorl
push
jge
xchg
cli
xchg
jecxz
movsl
jmp
push
fisubs
mov
hlt
mov
inc
pusha
cmp
icebp
pusha
mov
in
shlb
cmp
loope
iret
inc
out
jne
mov
xchg
imul
movsb
addb
inc
jne
push
inc
xchg
ljmp
test
imul
jae
mov
xor
rcl
dec
push
sub
loop
jmp
cwtl
sbb
int
mov
lret
popf
test
scas
cmpsb
and
sub
stc
mov
jbe
shl
push
add
fldt
inc
mov
mov
sub
xor
dec
ds
mov
pop
addb
aam
mov
ljmp
push
fisttpll
jo
pusha
aas
cmp
add
pushw
mov
mov
sub
lret
scas
cmpsl
push
xlat
mov
out
or
jle
mov
xor
dec
lods
jl
inc
dec
jmp
addr16
test
adc
and
jmp
cmp
into
jae
ds
mov
outsl
or
pop
out
pop
fldcw
add
rol
repnz
jo
mov
popf
incl
cmp
and
xchg
mov
mov
push
mov
mov
mov
push
cli
push
jns
push
add
push
jnp
or
in
pusha
jo
fistpl
popl
mov
push
sub
aaa
pop
int
scas
das
pop
adc
scas
subl
scas
jge
or
inc
mov
add
jg
jp
in
daa
in
sbb
pushf
incl
xchg
xor
inc
sbb
loope
dec
adc
cli
or
call
and
movsb
int
mov
neg
insl
cwtl
stc
iret
fimuls
cmp
cltd
out
insl
cmp
mov
rorb
shll
jg
popf
xchg
dec
jmp
sbb
lret
dec
sbb
subl
jle
mov
dec
xchg
popf
pop
lock
mov
mov
lock
out
or
push
adc
ss
cmp
dec
xchg
repz
inc
jmp
mov
sbb
mov
leave
jo
stc
xchg
out
pop
push
pop
inc
mov
jbe
fstpt
xor
pop
mov
adc
dec
nop
sub
sahf
not
scas
jl
popa
dec
pop
ss
xor
inc
imul
int3
mov
rorl
stos
fistps
aas
cli
sub
daa
push
popf
rorl
mov
jbe
sbb
add
pop
fcmovu
push
sub
xchg
fcomps
repnz
in
push
ret
rcrl
shlb
scas
cli
sub
imull
in
arpl
or
cmp
push
xchg
fsubs
mov
hlt
das
and
int
testl
jns
xor
adc
and
jp
in
aam
jecxz
add
mov
or
or
hlt
mov
es
xor
mov
jnp
mov
cmp
or
movsb
push
sub
enter
mov
out
je
mov
out
jne
pop
mov
xchg
scas
pop
inc
adc
lods
pop
sbb
mov
cmp
adc
scas
jg
xcrypt-cbc
cmpsl
push
sarl
and
adc
mov
pop
jge
mov
adc
fldcw
fs
ret
xchg
out
and
cmp
and
jnp
cmp
cmc
xlat
xor
fiaddl
mov
testl
pop
add
jo
ss
ss
int
les
loopne
stos
xchg
rorl
jns,pn
and
inc
cmp
inc
push
outsb
jne
inc
inc
mov
xchg
addr16
mov
dec
mov
mov
test
test
pop
and
and
sbb
and
subps
into
add
jecxz
inc
mov
or
xchg
mov
xchg
jno
sub
aad
adcb
inc
and
or
addr16
pop
xchg
and
sbb
dec
loope
or
lods
sub
and
mov
sahf
cli
insb
mov
mov
adc
mov
push
sub
lcall
inc
aad
jmp
test
cmpsl
jae
jecxz
test
add
mov
mov
xor
jns
cmp
in
mov
sarb
mov
dec
or
jecxz
dec
fcmovnu
adc
dec
rorb
push
std
and
insl
dec
cmpsl
or
in
stos
mov
dec
test
pushw
sub
test
out
popf
rcrb
xchg
jl
or
ficompl
pop
xchg
jb
sbb
ja
jmp
adcb
popf
std
mov
int
aaa
mov
test
jnp
pop
dec
cmpsl
les
jle
loope
std
add
xchg
pop
outsb
mov
pop
jl
mov
push
mov
out
sub
inc
cmpsb
aad
or
pop
or
loope
fwait
add
sbb
and
mov
cmp
sub
lds
in
mov
in
xor
cwtl
out
shlb
inc
call
jge
aam
sti
pushf
fidivs
sbb
push
sti
mov
push
aam
bound
loop
push
in
es
mov
or
add
jnp
jo
and
sbbb
jne
adc
mov
gs
add
xchg
cmc
notb
ret
mov
ja
movsb
xchg
outsl
mov
ja
insl
pop
adc
push
cwtl
mov
sub
push
jo
push
popa
in
lds
in
repnz
or
inc
jg
stos
jmp
stos
mov
cmp
rol
in
xchg
push
pop
inc
out
adcl
faddl
push
out
mov
mov
fwait
pusha
insb
dec
sub
negb
mov
sbb
jno
mov
out
dec
xor
pop
inc
mov
cmpsb
es
sti
xor
or
mov
add
mov
xor
sbb
lcall
enterw
cltd
popa
pop
mov
rcl
lock
sbb
loopne
ds
sbb
imul
stos
jno
jle
dec
and
orl
add
stos
test
push
leave
scas
xchg
dec
stos
scas
add
adc
inc
and
rcrb
dec
test
pop
scas
aaa
dec
or
add
lcall
inc
push
xchg
and
lea
add
in
cmpsb
mov
mov
mov
cmpsl
jge
dec
ja
xchg
mov
out
idivl
data16
into
push
inc
out
cmpsl
sub
pop
aam
sbb
cwtl
mov
xchg
fsubrs
rcrl
cmc
cld
orb
jge
mov
int3
mov
jp
jle
jo
inc
sbb
scas
sbb
sbb
and
lock
mov
pushf
std
dec
hlt
inc
or
ret
xchg
mov
insl
test
xor
cltd
push
pop
mov
or
je
xchg
push
cmp
xlat
js
aaa
or
sub
imul
cli
int
add
movhps
fimull
ljmp
xchg
cwtl
cmp
in
dec
inc
imul
ret
fxtract
push
xor
push
bnd
fwait
out
xacquire
stos
push
or
pop
inc
jno
mov
pop
xchg
movsl
or
or
or
dec
xor
es
imul
inc
sbb
je
jns
push
jae
push
pop
lahf
cmpsl
jecxz
xchg
daa
scas
dec
mov
int3
lret
push
test
fdivrl
or
sarl
scas
pushf
jg
aaa
sub
cmp
mov
mov
dec
jae
adc
jns
into
add
pop
mov
jmp
clc
jns
inc
dec
mov
cltd
ficoms
mov
int
push
inc
out
dec
xor
xor
mov
arpl
lret
add
push
std
mov
dec
jns
jne
ret
out
bound
and
repnz
je
mov
mov
sbb
mov
rcrl
jg
xlat
xor
shl
push
sub
add
data16
jle
int3
imul
mov
testl
rcr
jp
mov
mov
jle
pop
sub
pop
in
push
test
test
hlt
mov
lods
jns
cltd
ret
jecxz
fldenv
and
push
cltd
mov
mov
xlat
mov
pop
cld
cmp
sbbl
dec
shll
inc
movsb
push
lcall
xchg
ss
pop
hlt
fistps
addr16
scas
jl
pop
jg
rclb
xchg
xchg
stos
movsl
pop
aas
mov
fst
mov
adc
leave
or
push
sbb
jbe
pop
xor
scas
and
add
push
jnp
inc
add
outsl
fstl
xor
outsl
pop
jnp
dec
ret
sbb
jb
ror
and
outsl
gs
insl
pop
dec
mov
xchg
mov
pop
fwait
jl
fs
test
popf
xchg
nop
jbe
loope
scas
xlat
jno
sti
cwtl
sbb
and
ljmp
sbb
jmp
addr16
enter
and
sbb
xor
xchg
add
out
jb
mov
push
mov
imul
inc
insb
test
cmp
movsb
inc
lcall
test
mov
rcll
neg
in
sbb
inc
lods
lret
mov
adc
jg
sub
dec
sub
xchg
ror
out
shll
sbb
and
pop
sbb
ret
mov
xlat
bound
mov
test
add
mov
or
or
or
or
outsl
cmpsb
aas
js
mov
xchg
jp
mov
adcb
or
inc
daa
movsl
adc
ds
out
mov
dec
sbb
stos
lret
ss
dec
xor
xchg
push
mov
mov
cmc
xor
aas
les
outsb
cmp
dec
adc
cs
rclb
fwait
jne
dec
in
repz
mov
or
inc
jmp
loopne
into
mov
lret
ljmp
inc
lods
stos
mov
push
int
push
rorl
dec
mov
and
push
cld
sub
jne
fdivrs
popa
jl
push
ljmpw
insl
sbb
in
in
sti
mov
movsb
mov
out
cmpsl
lods
and
mov
inc
out
std
icebp
jbe
cmc
or
int3
jb
lods
out
stos
sti
jl
push
cmp
clc
mov
xor
mov
imul
sub
lret
inc
ljmp
adc
lds
jl
int3
dec
testb
nop
or
sbb
push
stos
cmp
mov
xchg
lods
adc
mov
scas
lock
insb
pop
sbb
bnd
or
ljmp
sub
or
push
int3
into
jne
xchg
je
out
cmc
cmp
jl
imul
add
mov
jne
mov
lock
loope
shlb
fidivrs
adc
xor
int3
pop
pop
lret
sti
jnp
cltd
inc
jge
popf
push
jae
jge
jbe
inc
or
push
test
lds
sub
adc
clc
xchg
mov
jo
out
ds
add
sahf
leave
out
pop
cmpb
pop
push
xchg
xor
int
shl
xchg
loop
jmp
enter
mov
fsubrl
aas
cmp
dec
xchg
push
fidivl
lock
lods
cmc
cmp
pop
sti
imul
bound
pop
sub
ret
jmp
add
hlt
mov
push
or
nop
pop
mov
mov
lock
mov
ss
sbb
xchg
inc
xor
add
lret
pop
dec
sub
outsb
pop
dec
lahf
jge
xchg
add
lcall
add
mov
rcrb
cmp
xchg
push
mov
loopne
push
outsl
sbb
xor
bound
dec
aas
rclb
mov
sbb
icebp
int
pop
movsb
insl
add
outsl
mov
loopne
cmpsl
jns
mov
loopne
loope
rolb
push
loope
mov
icebp
inc
sbb
popf
cmpsl
movsl
push
gs
mov
sti
inc
out
push
fchs
loop
adc
dec
jg
sarb
pop
push
adc
movnti
dec
clc
mov
inc
jmp
decl
cltd
and
pop
add
adc
pop
int3
pop
ds
xchg
enter
ret
inc
fwait
dec
out
xor
movsb
dec
addl
js
xchg
ljmp
jne
std
test
lock
das
mov
mov
cmp
pop
out
pop
add
ret
or
inc
imul
ret
movsl
daa
shrl
shlb
xchg
mov
nop
inc
sbb
cmp
test
add
adc
mov
lcall
in
dec
scas
push
pop
xchg
add
lret
mov
xor
pop
in
mov
mov
xor
pop
jge
adcl
ret
test
push
sti
xor
lret
mov
lret
add
je
or
ja
jge
fstl
dec
cltd
cltd
out
std
negb
jp
subb
sub
adc
cmp
sub
mov
xchg
sbb
push
xor
outsl
jno
xchg
inc
mov
mov
fidivrl
mov
sub
fdivrs
sbb
or
jecxz
or
push
dec
jle
mov
sub
mov
xor
nop
leave
cs
push
dec
jl
xchg
in
inc
sub
jp
xlat
sbb
popa
add
rcrl
jbe
ljmp
das
push
pop
adc
mov
shrb
xchg
sub
cmp
iret
sbb
icebp
pop
cmp
xor
cmp
dec
repnz
jecxz
cmpsb
insb
repnz
imul
cmp
xor
push
pusha
inc
push
push
jno
sub
adc
push
mov
pop
or
lods
subl
lret
imul
cmp
dec
ja
sbb
pop
int
pop
adc
lret
clc
cwtl
add
push
lods
pop
dec
jmp
push
pop
dec
mov
in
adc
push
dec
pop
ret
sbb
jge
inc
lea
mov
and
int3
icebp
insb
inc
cwtl
test
mov
mov
data16
dec
les
jo
movsl
xlat
leave
aaa
push
out
or
aad
mov
fiaddl
js
cmp
add
and
push
icebp
mov
jmp
add
jecxz
out
add
add
pop
pop
popa
hlt
mov
clc
push
pusha
stos
dec
pop
fisttps
mov
jmp
or
fsubs
test
sbb
cwtl
jl
xchg
ljmp
test
mov
push
lods
sbb
push
xor
cmp
jae
into
mov
mov
xchg
lret
adc
fildl
mov
mov
xchg
mov
dec
inc
push
scas
and
cmp
js
lds
inc
punpckhwd
iret
xor
jg
hlt
mov
popf
rcll
inc
and
ljmp
and
cmc
sub
cmp
scas
cmp
les
inc
shlb
dec
fcoms
cmp
inc
shl
sbb
sub
push
ljmp
mov
hlt
daa
imul
pop
bound
ret
stos
xchg
frstor
mov
sub
sub
out
mov
dec
cmp
imul
mov
add
mov
pop
and
pop
das
push
cwtl
push
popf
dec
jl
jmp
adcl
daa
pop
mov
das
xor
jne
dec
xchg
insl
nop
ficompl
stc
in
cld
hlt
outsb
sbb
jns
cltd
and
mull
pop
xor
push
stos
sub
or
cmc
mov
sub
ret
outsl
mov
sbb
scas
or
or
icebp
adc
sub
nop
in
bound
fbld
cmpsl
sub
enter
test
dec
mov
clc
ds
jo
jl
sbb
pop
inc
jecxz
inc
into
mov
push
jle
sub
inc
clc
adc
shl
iret
xlat
push
push
hlt
or
jbe
mov
jns
xlat
call
mov
cmc
mov
and
stos
test
imul
pop
fs
dec
enter
pop
mov
cmp
push
xor
fistpl
sub
pop
inc
cmp
pop
xchg
inc
iret
xor
pop
movsb
jns
std
sbb
push
or
or
sbb
out
mov
cs
xor
jnp
insb
divl
and
and
mov
fidivrl
cld
push
pop
stos
mov
inc
stc
jle
sbb
sbb
pushf
or
xchg
dec
and
ljmp
inc
rol
add
test
aad
pop
sahf
stos
and
vcvtsi2ssl
fbstp
pop
inc
pop
xchg
jp
mov
jbe
insb
lret
cltd
jns
cmp
cmpb
repnz
rolb
inc
mov
cmpsl
push
sbb
roll
pop
push
cmp
pusha
insb
pop
or
mov
push
adc
mov
jb
and
addr16
mov
sub
js
xchg
clc
cmp
xchg
test
dec
fwait
stos
dec
fisttps
xorps
xchg
pushf
push
lock
scas
fwait
in
mov
cld
cwtl
lret
fs
push
fbstp
daa
xbegin
in
adc
pop
add
fdivrl
dec
cmp
ret
xchg
rorl
imul
or
jo
sub
sub
dec
mov
xchg
lahf
xchg
mov
pop
mulb
mov
xchg
or
shlb
or
jb
test
test
fldenv
dec
pop
push
int3
cltd
repz
popa
mov
jb
cmp
xchg
or
sub
add
cmc
push
addb
cmp
pop
stos
decl
rorb
lret
fucomp
adc
lahf
xor
out
xor
aaa
ret
and
xchg
ficoml
mov
outsl
repz
lret
loop
mov
lahf
lods
aaa
and
les
lods
les
je
and
xor
push
cwtl
outsb
aas
xchg
adc
mov
xor
cli
loopne
shll
imul
fbld
loopne
mov
cmp
fidivl
push
xor
cmp
jl
mov
sahf
mov
jl
push
idivb
mov
std
jb
sub
and
ret
adc
sub
inc
faddl
dec
xchg
imul
sti
sub
sbb
push
leave
imul
gs
subb
pusha
sbb
jp
lea
mov
les
pushfw
std
pop
gs
add
ss
cmp
sbb
cmp
and
sbb
sbb
jmp
addr16
sub
sub
repz
ja
clc
cmp
rcrb
aad
movsb
or
inc
push
int
sub
push
lods
push
nop
mov
cwtl
sbb
push
pop
stos
lods
in
pop
out
out
mov
sub
mov
cmc
mov
mov
push
test
sbbl
lds
pop
out
cmp
loopne
es
mov
push
idivb
sub
inc
repnz
jne
in
jbe
aad
test
mov
roll
fstl
vhsubpd
fldenv
mov
fidivrl
pop
jno
mov
cltd
xchg
push
xchg
mov
and
pushf
xor
inc
or
cmpsb
gs
push
sarb
mov
mov
xchg
add
loop
jo
sbb
add
push
in
movsb
jmp
fidivl
data16
mov
movsb
jns
test
push
and
add
push
cltd
icebp
jg
sbb
cmpsb
fstpt
xlat
inc
and
and
rol
or
mov
testb
dec
sub
inc
insl
adc
jae
mov
mov
data16
push
pushf
repz
or
cmp
pop
into
imul
aad
mov
je
mov
add
push
mov
ret
xchg
xchg
pushf
or
lret
cli
sub
cmp
xor
arpl
pushf
mov
jns
out
inc
loop
daa
and
or
xchg
adc
dec
dec
clc
insb
inc
scas
out
movsl
nop
and
and
xor
xorl
xchg
fildl
pushf
jmp
loop
fistpl
dec
aaa
push
jmp
jbe
xor
mov
mov
jae
mov
pop
adc
mov
push
add
loopne
shl
cltd
pop
mov
jp
add
bound
js
mov
inc
jecxz
push
test
sbb
test
fisttps
insl
mov
aad
or
cs
sub
jle
sti
xor
xchg
scas
sub
fs
pop
je
mov
filds
mov
xor
movsl
sbbl
sbb
mov
and
in
xlat
je
sub
out
mov
pop
inc
shlb
cmp
and
add
xor
pop
hlt
cmp
sbb
pop
sbb
out
test
or
jl
into
cmp
dec
loop
int
inc
andl
jnp
fcoml
idiv
adc
popa
sbb
insl
outsl
push
xor
adcb
clc
lret
lret
pusha
insl
lret
in
xchg
cmpsl
jp
xlat
or
or
and
xchg
inc
xchg
imul
cmp
sub
or
repnz
mov
lds
lcall
cmp
in
punpcklwd
dec
stos
and
and
aas
push
test
jne
adc
repz
sub
add
outsl
sub
push
inc
xchg
fsub
std
push
mov
xor
adc
add
add
cmpsl
push
push
cli
push
sbb
addr16
or
adc
out
push
cld
mov
test
dec
pop
bound
and
xorps
dec
cmpsb
xchg
xor
mov
push
jmp
dec
sti
das
icebp
test
inc
in
pop
xor
stc
mov
loop
popf
jns
inc
clc
imul
pop
add
push
jl
divb
cmp
call
lock
mov
cmc
call
mov
das
mov
and
pop
xchg
or
pop
inc
jl
mov
adc
nop
mov
cs
into
and
filds
cs
call
rorb
pusha
mov
pop
jmp
lret
dec
pop
xchg
imul
sbb
cmpsl
call
scas
sub
sbb
cmpl
pop
add
leave
aas
out
adc
mov
mov
mov
add
xchg
dec
ss
aas
jmp
insb
adc
jle
test
sbb
lds
push
push
test
popa
cmp
and
fimuls
cmp
push
mov
in
push
sub
int
push
jmp
testl
aas
sti
mov
mov
sarl
pop
sbb
daa
jle
xor
arpl
lods
add
pop
subl
imul
addr16
mov
adc
adcb
fcomp
test
xor
fcmovnu
into
xor
stos
lcall
or
dec
jo
xor
lahf
ss
push
push
insl
add
pusha
fcoms
pop
xchg
or
stos
test
cwtl
mov
inc
bound
dec
cmp
cld
push
inc
ret
xor
lods
mov
mov
dec
lret
ret
ss
dec
cmpsb
xor
sub
dec
mov
mov
test
rcr
mov
test
add
push
test
inc
xor
jno
jmp
push
test
push
sbb
jne
aaa
push
ret
pop
ret
push
push
es
into
lahf
rcr
or
sub
je
xchg
out
lcall
pop
push
pop
xor
decl
adc
in
loop
mov
and
adc
xchg
pushf
hlt
xchg
or
outsl
test
out
mov
sub
pop
fisubrs
pop
cmp
aam
ret
daa
ret
popf
sub
clc
pop
notl
push
or
test
shrl
insb
mov
jae
pop
adc
mov
mov
push
pop
lea
push
push
pop
fistl
stos
aaa
popf
add
mov
mov
cmp
lods
push
dec
lret
sbb
out
sbb
pop
ja
call
sti
les
push
cmp
mov
mov
imul
cwtl
movsl
push
mov
mov
daa
dec
dec
jmp
lret
aam
in
or
or
test
stos
pop
rorl
sarl
inc
cli
inc
dec
scas
mov
mov
cmp
adc
inc
stos
adc
mov
inc
inc
push
pop
sub
sbb
mov
and
daa
in
aam
je
jnp
rclb
das
inc
inc
insl
aaa
ds
imul
sbb
xchg
sahf
rol
lods
mov
mov
pop
les
aad
gs
popa
repz
icebp
dec
ljmp
xchg
adc
lahf
mov
and
je
dec
ss
out
mov
cmp
push
xchg
aad
jmp
push
xor
mov
mov
and
mov
les
mov
sbb
push
pop
andl
fninit
pop
cwtl
push
enter
scas
cltd
xor
cmpsl
fcmovnb
mov
lods
imul
dec
negl
bound
nop
clc
daa
sbb
je
lcall
imulb
mov
sbb
push
xorl
ror
fsubrl
sar
stos
inc
xchg
enter
stos
bound
sub
cmp
cmp
dec
daa
sbb
test
lcall
test
out
sub
cmp
jb
lock
mov
fimuls
fcomps
lret
out
or
inc
adc
lcall
sarb
fcompl
xchg
dec
sbb
fwait
xchg
out
cmp
xchg
sub
push
and
shlb
pop
pop
aad
bound
lret
es
inc
jge
push
sub
enter
sbb
inc
repz
loope
cli
or
pusha
mov
jnp
add
sbb
sub
or
insb
mov
mov
lret
mov
lea
fsubl
jecxz
loopne
cmovb
outsb
jbe
notb
pushf
xor
cmp
or
cmp
jge
push
sub
xorb
push
loop
xchg
rolb
leave
or
xchg
aaa
popa
dec
jge
jmp
scas
sub
popf
cs
xor
je
sub
xchg
pop
cli
jns
cmp
bound
xchg
pushf
or
pop
adc
dec
cli
jmp
inc
push
dec
push
sub
cmpsb
mov
mov
stos
adc
insl
int
xor
and
mov
sbb
sbb
scas
and
or
adc
js
cmp
mov
xchg
sub
pop
add
adc
push
cmp
xchg
repnz
test
sbb
or
push
push
push
icebp
in
stos
insl
mov
sbb
sbb
xchg
out
inc
push
sub
aaa
cltd
push
aad
sbb
in
insb
fcmovnb
jno
stc
jnp
ds
loopne
jns
pop
jge
pop
lahf
mov
hlt
xor
shll
aad
jle
pop
inc
xor
sub
push
inc
xlat
leave
push
cmovl
nop
xchg
push
cld
cli
fnsave
stos
push
cltd
dec
clc
mov
fsubl
bound
xchg
cmp
sbb
pop
xor
push
inc
mov
xchg
testb
pop
or
mov
pop
push
dec
xchg
psubb
mov
jne
jle
not
mov
sahf
jmp
adc
pop
scas
sbb
sub
aam
adcb
push
adc
pop
adc
inc
mov
imul
sbb
xchg
mul
mov
cmp
sub
orl
xor
cmp
mov
shrb
sub
cwtl
insb
ret
jle
or
out
jae
push
repz
popl
mov
fwait
icebp
inc
repz
stos
jle
or
orb
pop
push
int3
cmc
fisubs
bound
ljmp
icebp
enter
adc
jns
xor
fisubrl
cs
hlt
loop
dec
lods
jg
scas
inc
movsl
or
mov
pop
dec
jl
push
jge
dec
adc
xchg
sub
pop
int
mov
mov
ljmp
sarl
cmp
fldt
std
imul
shl
adc
aaa
and
jno
shrb
loop
adc
test
flds
test
stc
sub
mov
lock
and
jno
jb
ljmp
add
mov
dec
nop
lods
loope
jns
lret
popf
divl
imul
inc
test
je
cmp
mov
out
sbb
fcomps
inc
imul
ljmp
cwtl
pop
repnz
shl
jp
sub
test
notl
sub
pop
jns
dec
mov
inc
jecxz
dec
pop
sbb
jp
mov
mov
adc
inc
lea
jle
lahf
dec
mov
inc
iret
cmpsb
adc
push
jnp
sahf
cmp
jle
ds
fcompl
xchg
rclw
outsb
or
add
xchg
xor
inc
and
pop
outsl
jae
jns
gs
lahf
lcall
xchg
das
xchg
adc
add
lods
push
clc
test
and
js
enter
lea
cld
imul
dec
cmpsb
mov
popf
in
movsb
mov
jns
cltd
leave
push
mov
mov
mov
rorb
dec
xchg
mov
jmp
dec
cmpsb
nop
mov
movsl
mov
js
adc
push
cmp
sbb
cmp
push
mov
movsl
sti
flds
cmovae
lods
lods
mov
outsb
pushf
xor
or
mov
and
xor
mov
mov
push
adc
xchg
cmp
push
in
adcl
addr16
ficomps
out
xor
ret
and
jno
stc
outsb
adc
mov
add
jle
jo
mov
pop
es
push
xor
aaa
nopl
mov
ret
dec
js
mov
adcl
out
mov
mov
loopne
dec
iret
aaa
push
push
int3
inc
dec
mov
insb
insb
add
xchg
and
cmpsl
xchg
lret
push
mov
xor
pop
mov
enter
jge
gs
mov
mov
push
sbb
jle
jl
pop
addr16
push
push
push
push
pop
cmc
or
jge
loopne
dec
sbb
mov
popf
sbb
adc
sbb
arpl
mov
lcall
or
xor
dec
adc
arpl
ret
fwait
mov
sub
cmp
cmp
inc
std
pop
fsubs
sub
cmp
loop
add
inc
arpl
sub
pop
daa
mov
fimuls
sub
test
stos
negl
or
mov
xor
inc
stc
inc
jmp
jmp
jp
cmp
xlat
sub
inc
test
ficomps
or
inc
sub
jp
repz
inc
jle
and
push
mov
and
lret
xorl
leave
out
imul
icebp
inc
repz
in
dec
andl
sub
out
mov
insb
call
xchg
add
jge
push
pop
push
add
cli
in
lret
mov
jne
cwtl
iret
addl
pop
mov
iret
shll
mov
mov
mov
xchg
popa
cwtl
dec
outsl
int3
mov
inc
ret
and
jo
inc
jo
les
inc
mov
add
xor
aam
mov
sub
inc
pop
lret
out
dec
outsl
decb
insb
gs
sub
jl
cmp
inc
jmp
setg
mov
inc
jbe
and
cli
sub
and
sbb
fdivrs
mov
lret
int
mov
add
jp
mov
push
push
les
push
cmpl
and
sbb
or
push
inc
popa
xor
addr16
sbb
pop
mov
push
push
popa
popl
mov
lret
movsl
jl
add
lret
xlat
push
int
push
dec
jno
adc
and
les
xchg
and
push
push
cmpsl
mov
add
int3
subl
and
out
add
lcall
jo
aam
cs
int3
incl
iret
mov
lret
popa
inc
xchg
ljmp
aad
jns
push
mov
in
pop
xchg
divl
pop
and
ja
loop
mov
in
out
rorb
outsl
sub
sub
adc
stos
pop
ljmp
fbld
or
testl
popf
pop
cmc
loope
jb
cmp
out
mov
notb
in
xchg
mov
sub
cmp
adc
popa
xchg
outsl
shrl
dec
outsb
xchg
shll
mov
add
jb
stos
mov
jmp
mov
cmpsb
ret
add
lsl
insb
push
push
dec
lods
std
hlt
fmuls
gs
shlb
pop
and
lahf
dec
sarl
clc
lods
das
loop
xor
lahf
and
cs
inc
mov
outsl
mov
mov
pop
inc
dec
imul
and
xchg
dec
int3
loope
aad
mov
mov
mov
scas
push
cmp
or
push
dec
xor
xor
mov
mov
add
in
pop
data16
adc
pushf
xchg
cmp
adc
sub
cmp
mov
repnz
rcl
jns
xchg
decb
je
jo
out
sub
movsb
jno
scas
push
jge
cld
mov
pop
cmc
lahf
sub
mov
gs
pop
les
push
loopne
les
fadd
jne
adc
lahf
das
jo
dec
xchg
inc
aad
xor
cmc
and
aas
mul
xor
repnz
add
pop
iret
test
pop
mov
cmp
nop
jecxz
inc
lret
jle
pushf
in
xor
sbb
fmuls
pusha
lret
lods
mov
in
mov
int
pop
cmpsb
push
push
inc
in
dec
sahf
out
push
dec
jle
lcall
outsb
dec
ja
test
fwait
stos
mov
subl
lock
xor
or
pop
mov
out
repz
testb
dec
pop
icebp
pop
lea
pop
mov
pushl
cmp
mov
fildll
popf
in
jecxz
inc
mov
insl
incl
jle
loope
dec
iret
sub
out
or
pop
cmp
sub
lock
xchg
sbbl
mov
cmc
insb
and
test
aam
push
icebp
popa
das
lcall
push
and
andl
adc
xchg
sub
scas
mov
dec
call
sbb
sub
sbb
out
insb
or
push
outsb
sub
int
popf
xchg
cld
stos
inc
bound
ja
or
test
jno
or
pusha
repnz
clc
cs
pop
pop
repz
decl
js
sbb
fdiv
popa
sarb
icebp
mov
dec
push
and
inc
dec
xchg
shlb
cmp
fcmovb
jns
push
mov
fdivl
ja
adc
cmp
out
repnz
mov
xchg
mov
sbb
sbb
xchg
jle
xor
inc
js
xlat
mov
sbb
mov
lret
adc
sub
pop
jmp
sbb
sbb
inc
adc
mov
push
sbb
std
add
push
jp
pop
mov
int
out
push
test
push
sbbl
add
nop
xchg
mov
nop
sub
xchg
fcomps
je
es
sahf
inc
push
add
sub
es
lock
sahf
js
xchg
out
lds
out
sti
xor
jmp
push
ret
jno
push
rclb
in
jmp
and
scas
cli
sbb
push
dec
lea
and
gs
inc
inc
out
dec
push
fs
scas
pushf
fdivrl
xchg
mov
push
outsl
jbe
cmc
je
adc
sub
sub
add
xchg
or
in
gs
cmc
rol
mov
jnp
cli
mov
mov
and
mov
dec
and
xor
rcl
fs
cmpsl
shll
pop
ljmpw
nop
or
out
xchg
popf
shlb
loope
cs
mov
xor
inc
xor
in
inc
pop
gs
lea
jl
dec
add
xchg
inc
sub
push
and
mov
std
mov
bound
jge
test
movsl
jne
rol
xchg
ljmp
decb
or
jg
out
add
dec
cmp
mov
sub
popa
adc
pop
shrb
mov
jb
repz
loop
out
js
fldt
dec
xchg
jmp
repnz
mov
inc
dec
jge
mov
adc
pop
das
fmuls
push
daa
pop
movsb
mov
mov
dec
outsl
or
loopne
push
subb
xchg
jno
and
cli
pushf
jp
fidivs
imul
sbb
mov
sbb
imul
add
jge
sub
outsl
fimull
and
xlat
mov
int3
sti
push
xor
bound
cli
aam
fisttpll
xlat
out
sbb
push
inc
push
push
mov
ss
inc
inc
lea
jmp
inc
dec
fmulp
cmc
arpl
jb
inc
xchg
ljmp
shrl
insb
scas
mov
xchg
dec
cwtl
jb
addl
pop
sti
lret
rol
cmpsb
jmp
pop
push
cmpsb
out
daa
jnp
rol
push
add
pop
bound
std
inc
pop
cmpsl
lock
int
lahf
dec
jmp
loopne
dec
icebp
xor
stos
bnd
adc
or
jle
mov
or
pop
push
add
test
das
out
or
data16
mov
pushf
pusha
ja
push
cltd
in
xchg
pop
dec
sbb
aad
test
out
gs
jle
fistps
and
data16
scas
sub
pop
ficoml
cltd
add
shlb
arpl
fnstsw
and
adc
xlat
ljmp
int3
adc
pusha
pop
dec
es
cmc
fiaddl
lds
mov
shlb
mov
lahf
push
and
insl
fsubrs
mov
push
mov
stos
jg
mov
aad
cltd
xchg
cld
rclb
dec
adc
push
pop
inc
fisttps
fbld
sahf
xchg
aas
mov
test
cmpsb
jo
adc
test
adc
jl
popa
mov
scas
inc
inc
sub
adc
xchg
cmpsl
out
fcompl
inc
sub
or
add
xor
pop
sub
sub
divb
cmc
mov
jbe
mov
andl
shll
cmpsl
cmp
aaa
fstl
mov
mov
inc
fimull
outsb
aaa
cmp
aam
in
cld
mov
and
push
std
inc
int
push
enter
add
scas
daa
cmp
mov
jnp
sbb
mov
mov
loope,pn
iret
xor
and
nop
push
sbb
mov
pop
into
mov
movsl
push
idiv
xchg
sbb
das
fs
add
pop
mov
add
into
stc
imul
inc
js
ret
in
pop
mov
fwait
and
out
push
aam
cmpsb
clc
rcr
mov
mov
sub
mov
mov
icebp
jb
rcrb
xor
and
mov
rcrl
addr16
xchg
cmp
bound
aam
pop
inc
ds
inc
scas
enter
push
adc
dec
andl
inc
or
mov
rclb
sbb
jg
test
mov
das
mov
clc
jmp
mov
cwtl
lock
adcb
or
mov
sti
xchg
icebp
push
mov
lock
in
fcompl
andl
lcall
test
and
jne
cmpsb
mov
or
xor
lret
dec
popf
not
xor
cmpsl
or
into
scas
cltd
pop
inc
int
or
sub
pop
dec
cltd
test
cltd
pop
xchg
fcomip
or
jmp
in
icebp
loopne
loope
into
test
es
cmp
cmp
dec
andl
bound
hlt
pop
sbbl
mov
in
xchg
lods
lahf
imul
inc
loope
imul
outsl
cmpsb
adc
mov
and
popf
out
fildll
icebp
or
daa
cmp
cmpl
dec
and
nop
test
inc
dec
mov
inc
xchg
xchg
mov
mov
aas
add
xor
repnz
movq
in
outsb
scas
adc
pushf
loop
gs
jne
pop
data16
sahf
arpl
xchg
addr16
pop
fwait
xlat
mov
or
out
ljmp
inc
out
xor
xor
push
cmp
andl
or
mov
fidivs
out
lea
sub
movb
xor
jns
ret
ja
outsb
les
test
rorb
pop
jb
montmul
cmpsb
ret
xor
out
mov
xchg
cltd
pop
fs
mov
outsb
add
out
shlb
inc
outsb
mov
push
daa
pop
fcompl
lret
outsl
jae
loop
or
mov
iret
adc
jo
xor
jl
jo
sbb
fadd
push
xor
mov
cmp
insl
sbb
mov
in
scas
mov
and
dec
adc
fwait
add
movsl
lock
dec
adc
and
add
push
imul
in
movsb
xchg
or
cli
out
popa
add
fsubrl
and
mov
adc
ret
sbb
mov
or
jnp
and
jl
xlat
insl
cmp
cli
mov
shll
pusha
std
jge
pop
xchg
adc
inc
movsl
out
jge
mov
jmp
arpl
rcll
mov
or
xchg
or
lods
xchg
push
mov
cmp
aas
sbb
push
push
xor
push
pushl
add
in
dec
cmp
scas
xchg
hlt
xor
xchg
test
cwtl
movsl
xor
movsb
lds
aas
inc
test
cmp
pop
mov
cmc
xor
xor
cmpsb
filds
in
pop
adc
aas
fistpll
insl
mov
add
aas
or
rcrb
loop
insb
fldenv
pop
or
adc
dec
in
pop
fcomps
cmpsb
sbb
mov
ds
cli
fistpll
mov
mov
xchg
das
addr16
movl
cwtl
cs
jo
pop
sbb
ret
lock
mov
test
pop
jo
or
cmpl
in
imul
push
pushf
daa
scas
test
jne
test
or
xor
iret
add
int
fistpl
es
and
sbb
xchg
loop
lret
xor
adc
lea
xlat
xor
pop
push
jne
add
and
sub
add
daa
in
movsb
int
enter
xorl
inc
mov
inc
pop
cltd
mov
ds
js
jno
int
or
in
scas
inc
and
pop
in
popa
and
xor
int
daa
sbb
inc
mov
aaa
mov
dec
aam
cltd
rcl
mov
and
pushf
call
popf
into
jne
out
xchg
cmpl
test
xchg
lods
sarl
cli
je
jmp
add
mov
push
movq
inc
jno
pop
stc
xlat
cld
mov
fs
adc
sbb
mov
xor
mov
mov
fisubs
mov
jl
fnsave
add
pop
lods
add
and
punpcklwd
xor
int
enter
mov
leave
push
inc
push
scas
add
cmp
arpl
add
pop
mov
dec
repz
xor
xor
dec
sbb
scas
pusha
loop
insb
cwtl
cmp
push
mov
inc
ja
fdivrl
lods
loopne
and
mov
add
inc
dec
and
call
icebp
mov
int
jg
insb
cmpsl
or
bswap
mull
xchg
rclb
adc
jge
inc
cli
jno
pop
inc
pop
inc
sub
mov
sub
inc
aas
fxch
arpl
dec
shrb
ds
mov
push
imul
les
loope
fcompl
scas
fdivrs
xor
inc
cmp
or
sub
pop
leave
sub
push
je
insl
pop
sub
inc
testl
shr
pop
jp
pushf
fwait
pop
int3
insb
ja
scas
cmp
xchg
adc
iret
dec
outsl
push
cmp
sub
movsb
lock
test
pop
push
sub
stc
lods
xor
les
cltd
jae
xchg
inc
jecxz
clc
hlt
xor
pusha
cmp
dec
aad
repnz
in
inc
imul
sbb
int
notb
xor
pop
and
mov
xchg
pushf
ljmp
nop
adc
add
subb
popa
out
sub
incl
orb
sub
pop
dec
push
setb
mov
mov
mov
adc
mov
clc
rolb
lahf
xor
xor
inc
lods
or
mov
sub
jo
push
mov
xor
and
int3
jmp
fldenv
dec
sub
cli
popf
and
lods
xchg
lret
pop
push
and
push
ss
xchg
fstl
push
cmp
sub
add
xor
xchg
inc
push
hlt
push
or
out
cmp
pop
jecxz
inc
sub
push
dec
lods
and
push
pop
in
cli
mov
mov
mov
adc
add
mov
pop
data16
enter
jnp
mov
mov
loopne
mov
and
push
xor
dec
ds
fstl
xor
jge
adc
or
xchg
mov
or
mov
nop
call
pop
popf
jge
dec
xchg
xor
hlt
mov
jae
xchg
inc
fs
mov
and
stos
insb
mov
jmp
mov
add
mov
insb
jp
pop
mov
add
cmc
push
mov
pop
leave
sub
test
cmpsl
nop
pop
xchg
mov
dec
mov
lods
addb
xor
aaa
fidivl
pusha
mov
int
icebp
and
cltd
mov
loope
cmp
cmp
mov
xchg
and
push
rorb
enter
mov
or
scas
out
pushw
ds
pushf
int
mov
mov
cmp
mov
iret
shrl
add
stos
fwait
jns
and
out
mov
loope
sbb
pop
ficompl
or
and
clc
xor
push
test
xor
sbb
xor
jno
xorb
jns
mov
add
xchg
sbb
movsb
mov
dec
mov
lds
lcall
and
xchg
lcall
daa
push
rorl
add
sbb
lods
int
push
ds
aaa
mov
scas
add
or
std
stos
stc
xchg
orb
lds
ret
jge
push
mov
aam
mov
push
sbb
adc
jmp
iret
pop
mov
out
scas
divb
dec
mov
cmp
dec
addr16
loope
je
push
xor
jns
insb
imul
jno
cmp
or
int
mov
mov
adc
lret
pop
outsb
das
mov
xchg
out
inc
xchg
in
out
dec
add
cltd
shll
out
jmp
mov
fiaddl
mov
imul
mov
lahf
lahf
jmp
inc
adc
mov
mov
fldcw
mov
push
dec
mov
mov
adcb
or
sarl
pop
mov
add
adc
mov
push
int3
insb
aas
shll
cs
jnp
jb
repz
dec
fnsave
mov
sub
jnp
jge
outsb
mov
mov
and
mov
or
push
cmp
mov
imul
pop
ss
xchg
aas
xlat
sbb
int
into
icebp
adc
fdivs
out
fstl
add
pop
dec
lea
and
cmp
rcrl
mov
mov
inc
pop
push
aaa
add
repz
jmp
push
jbe
out
fnstenv
mov
inc
mov
cmp
divb
repz
jg
cmp
mov
sahf
int
xlat
sbb
popf
btr
insb
mov
xchg
xlat
fisttpl
shrl
and
enter
cmp
push
dec
sub
aaa
insb
lods
mov
mov
xchg
int
scas
dec
and
xchg
or
xor
and
aam
lcall
idivl
in
add
mov
mov
bound
stc
roll
mov
lahf
enter
lcall
mov
jo
scas
test
push
test
mov
xchg
jns
movl
arpl
lahf
insl
notl
fisubrl
add
jnp
push
sar
fs
out
xchg
xor
add
xor
in
xor
xor
pop
sub
jns
out
push
dec
mov
daa
shrb
mov
push
in
push
mov
mov
add
fdivrl
or
test
dec
fsubrl
mov
mov
addr16
dec
icebp
sbb
add
fcoms
lds
iret
out
popf
cmp
xchg
ficompl
leave
xor
mov
cltd
lea
xchg
dec
jae
arpl
mov
inc
aas
movsb
mov
xor
fwait
out
scas
sbb
inc
mov
icebp
and
cmp
mov
mov
or
sub
mov
lcall
xlat
xchg
xchg
adc
sub
dec
or
dec
gs
lret
sub
or
icebp
int
incb
pop
clc
xlat
xchg
pop
out
mov
shlb
mul
jecxz
mov
cmc
es
frstor
mov
or
insb
scas
or
rcrb
sti
out
pop
add
popf
xor
movsb
cmp
mov
out
scas
subl
repz
stos
pushf
and
push
sub
shll
std
ss
push
rcrb
jmp
xchg
lret
adc
sub
dec
mov
fcom
fcoms
adc
pop
jno
xchg
sbb
loopne
jl
xlat
ret
pop
adc
mov
jp
mov
addr16
fmuls
add
jmp
daa
aam
or
out
mov
js
add
insb
pusha
sar
cmp
cwtl
push
rolb
add
push
lahf
jae
xchg
pop
xchg
cmp
gs
and
mov
fistps
or
mov
nop
in
add
in
cltd
aad
mov
dec
daa
dec
fistpll
nop
jmp
sbb
es
in
xor
popl
out
std
ror
adc
cmp
loop
dec
xchg
in
sbb
jb
adc
ds
test
lea
pop
adc
lahf
mov
les
push
mull
leave
lock
hlt
xchg
xchg
add
inc
lahf
xor
mov
lock
andb
pop
out
add
cli
sbb
stos
scas
pop
mov
push
lcall
jle
pop
das
inc
shl
xchg
pop
mov
adc
fidivrs
fld
fwait
ss
sarb
js
dec
xchg
aas
adc
notb
pop
sbb
ds
jno
and
test
std
cmp
adc
jo
jl
xchg
ljmp
sbb
faddl
test
mov
int3
push
pop
mov
icebp
sbb
dec
xchg
pop
in
stc
jns
dec
sub
mov
xchg
les
mov
sbb
push
jmp
gs
ja
cmpsb
lock
cmp
xor
xchg
clc
push
out
sahf
and
sti
pop
push
pop
insb
or
int3
pop
iret
daa
mov
scas
fmul
repnz
testl
and
sbb
cmc
int3
fisubs
movsl
cmp
outsl
in
add
inc
arpl
jecxz
test
mov
std
push
bound
stos
pop
and
les
fsubs
mov
mov
test
or
loopne
dec
adc
and
dec
mov
ficomps
pop
add
imul
mov
mov
loop
mov
test
or
xor
or
inc
aaa
movsl
cmp
pop
mov
jl
outsl
jle
xchg
scas
shl
lret
sarl
cmp
push
cmp
mov
out
inc
leave
roll
sti
ljmp
sbb
lock
adc
pop
cmp
cmp
mov
fwait
outsl
xlat
ret
cmp
mov
jbe
push
loope
dec
sub
mov
frstor
inc
pusha
fs
dec
mov
fbstp
fstpt
pop
mov
es
cmpsb
mov
mov
jecxz
cmpsb
add
fwait
mul
sub
pop
xchg
lea
xchg
pop
das
bndldx
mov
icebp
cmp
jo
fldl
test
inc
cltd
sti
enter
add
cli
push
mov
inc
aad
adc
out
iret
or
pop
std
mov
adc
addr16
jl
idivl
stc
lcall
mov
lcall
jmp
inc
testl
stos
repz
lods
sbb
sub
lea
stos
sar
or
sbb
dec
inc
test
lahf
outsl
outsb
sub
push
cltd
mov
xchg
and
daa
and
adc
cmp
mov
add
mov
mov
and
bound
push
mov
test
jl
outsl
scas
and
push
mov
mov
outsb
cmp
pop
dec
stos
ret
jb
jnp
movsl
push
stos
sub
inc
lods
xchg
and
mov
fsubl
imul
push
xor
popf
fnstsw
or
cmpsl
add
sub
dec
jl
add
les
jns
mov
ret
jecxz
jbe
or
mov
cmp
push
arpl
xchg
int
fwait
pmaxub
addb
notb
mov
cli
and
sbb
idivl
mov
xchg
mov
inc
ds
add
lret
mov
jae
push
sub
dec
adcl
arpl
add
xor
mull
dec
ja
in
ret
das
xchg
sub
lret
push
adc
iret
clc
ret
mov
ljmp
sbb
lcall
in
jecxz
cmp
jne
dec
adc
push
pop
jnp
lret
in
mov
and
dec
enter
sub
cmpb
pushf
jo
mov
icebp
lcall
adc
jge
xor
pushf
lcall
pop
mov
ss
add
jb
mov
push
sub
mov
add
or
lcall
pop
mov
pop
cmp
pop
sub
nop
mul
pop
movsb
or
dec
add
jle
mov
scas
sbbl
adc
sub
mov
sub
jmp
loope
xor
cmpl
lret
sub
push
pusha
lods
imul
lret
clc
ret
shl
andl
jecxz
dec
fwait
movsb
fisubrl
mov
mov
movsl
cwtl
xor
emms
adc
dec
jecxz
adcb
int3
sub
repnz
cmpsb
sarb
pop
jmp
push
dec
push
test
aam
or
hlt
movsl
or
test
and
lret
ret
adcl
pushf
jb
loope
bnd
rcrb
xor
leave
sbb
fdivl
jns
rcrb
cmpsb
sbb
sub
iret
imul
fsubrs
sarl
sbb
mov
es
mov
pop
mov
imul
idivl
test
ja
adc
lds
jecxz
xor
jnp
call
mov
inc
cmp
fldenv
inc
outsl
arpl
bswap
jnp
test
adc
inc
or
dec
sarb
cmp
sbb
cltd
xchg
clc
and
xlat
push
add
inc
add
cmpsb
repnz
test
xchg
test
mov
xor
lods
and
sbb
xchg
jg
movsb
sbb
mov
xchg
out
fisubl
scas
cltd
push
es
mov
or
push
js
push
or
shrb
test
add
scas
pop
sahf
lret
addl
mov
imul
dec
xor
sub
cmp
shr
sub
add
push
cmp
inc
imul
fucomp
add
sub
pop
es
xchg
push
sti
into
stc
cmpsl
jle
pop
adc
mov
inc
dec
pop
pop
xor
mov
aad
ja
cmp
sub
mov
iret
pop
stc
push
cmp
mov
xor
sub
fidivl
xor
sub
mov
inc
std
lcall
test
xchg
sbb
out
or
pop
scas
movb
repz
push
xchg
mov
mov
jo
mov
es
pop
subl
stos
std
into
inc
push
cmp
imul
test
out
into
data16
fs
jmp
mov
mov
fucomip
mov
mov
in
ds
mov
add
or
jbe
mov
fsubs
jne
xor
enter
faddl
add
ja
mov
gs
adc
cmp
ficoms
int3
lock
mov
mov
mov
ss
jg
add
icebp
mov
dec
cmc
cmp
daa
push
mov
xor
push
in
ljmp
roll
notl
fs
test
mov
mov
sarb
jbe
js
repz
outsb
or
jne
mov
ficomps
ret
ret
mov
insl
adc
repnz
mov
or
outsb
lea
out
jnp
xor
in
xor
xor
testb
or
jmp
mov
jae
outsl
inc
leave
and
push
add
adc
dec
lahf
imul
dec
and
push
dec
cmp
jbe
inc
mov
or
pop
inc
aas
jno
and
add
inc
in
loope
pop
das
enter
cmp
mov
push
popf
or
repz
cmp
cli
and
fstpt
shll
pushf
jle
xlat
mov
jno
sbb
push
mov
cltd
int
jecxz
mov
inc
fildll
mov
pop
pop
add
xchg
push
adc
mov
bound
and
in
jl
loop
lret
mov
std
jne
fistps
out
cmc
cltd
pusha
or
xor
cmc
cli
mov
les
imul
bound
cltd
mov
leave
mov
sub
and
or
insl
dec
lea
xor
sub
dec
stos
cld
les
and
lods
jecxz
sbb
es
sbb
shll
out
mov
lock
enter
pop
jle
xor
and
iret
fxch
out
mov
pop
mov
shrb
ja
mov
mov
mov
or
aad
out
ljmp
and
fimull
and
sbb
stc
pop
pushf
pop
ficoms
jmp
push
adc
lret
test
das
sub
repnz
out
lods
adc
out
xchg
rep
fstpl
xchg
nop
cld
mov
mov
or
imul
hlt
inc
cmp
push
popa
cmp
movsb
pop
push
iret
movsb
jl
ja
aad
mov
das
mov
mov
sbb
fwait
mov
dec
insl
cltd
push
jmp
loop
xchg
jg
or
pop
mov
and
lret
lahf
ss
add
sbb
lods
scas
xchg
subl
dec
bound
add
ds
push
cs
cmp
les
test
push
mov
bound
dec
out
in
xchg
push
out
popf
adc
imul
cld
or
xor
inc
imul
mov
ss
ja
orb
mull
add
dec
and
push
addr16
lds
fnstcw
dec
aad
les
cmc
jne
adc
fnsave
ss
pop
jmp
add
xor
mov
into
cmp
sti
xor
xlat
jle
jb
push
mov
mov
push
or
jp
in
cmpl
lods
mov
call
jecxz
and
lods
xlat
loopne
icebp
dec
popf
dec
adc
add
or
cld
cmpb
xchg
sbb
int3
jl
in
jmp
pop
xchg
mov
or
push
gs
loope
or
fdivrs
enter
lea
shrl
push
gs
std
lcall
fisubl
push
push
in
sub
out
inc
inc
jno
fisttps
cmp
enter
or
fstl
hlt
in
gs
push
or
outsb
rorl
dec
shlb
push
jmp
sbbl
dec
cs
push
push
sub
ret
mov
in
je
mov
jno
xor
movsb
lds
sub
push
xchg
ljmp
jmp
jle
lods
fbld
gs
sbb
mov
mov
jecxz
pop
sbb
or
xchg
data16
mov
sub
testb
dec
mov
sub
test
imul
inc
inc
jae
and
dec
jae
es
test
shll
jmp
xor
int
std
in
sbb
rorb
jecxz
inc
sti
ss
cmpsl
xchg
fldenv
inc
mov
aaa
xchg
sub
add
mov
cmp
dec
loopne
mov
xchg
lock
add
imul
push
enter
jnp
into
dec
es
pop
jne
dec
sbb
repz
and
sub
popf
bound
add
mov
push
mov
dec
jb
xchg
jae
jo
mov
jo
fcomps
int
xchg
cmp
adc
pop
cmc
cmp
adc
sub
pop
and
sub
stos
das
push
mov
shrl
pop
jl
lods
push
dec
in
ret
push
test
mov
inc
js
cmp
pop
leave
adc
fnsave
inc
dec
jmp
mov
hlt
js
pop
and
fstpl
pop
lock
xor
mov
int3
bnd
mov
stos
out
mov
in
rcr
pop
sub
mov
jno
popl
gs
sub
dec
xor
dec
pop
mov
sbb
in
mov
and
pop
clc
out
push
mov
test
xor
std
pop
sub
lret
scas
and
push
lods
aaa
js
fsubrl
sbb
incl
mov
fisubs
rcr
clc
js
scas
lds
adc
jmp
inc
and
dec
inc
out
pop
ret
lea
dec
cmc
mov
test
push
inc
xlat
dec
cmp
push
out
enter
leave
sub
daa
adc
rcrb
sub
mov
fwait
dec
ljmp
xor
add
rcll
push
sub
push
cmp
lcall
mov
enter
dec
or
pop
inc
out
rolb
pop
jle
inc
rorb
pop
fcmovb
scas
fmuls
add
je
xchg
pop
repnz
test
xchg
cwtl
stos
mov
fsubl
pop
push
xlat
and
or
bound
jecxz
pusha
insb
add
fbld
incb
out
lods
leave
adc
fs
sbb
and
jmp
push
push
imull
mov
ret
inc
cmp
cld
cmp
mov
movsb
into
bound
push
or
arpl
pop
cmp
and
data16
test
pop
lods
lds
test
cmpsb
cwtl
or
cmp
fiaddl
mov
out
pop
and
loopne
idivl
mov
dec
lds
rcll
orl
sti
xor
or
mov
daa
mov
fcoml
jbe
imul
lods
addr16
add
lret
mulb
out
mov
imul
pop
push
nop
mov
nop
shl
inc
repz
pop
cltd
mov
cmpsb
mov
movsb
xor
push
jmp
jns
stos
cmp
sub
daa
xchg
imul
hlt
sbb
hlt
cmp
pop
lods
adc
sahf
addr16
movsb
cmp
xchg
inc
and
fs
jl
addb
dec
dec
dec
jb
xor
fnstcw
jg
int3
cs
inc
das
adc
jge
dec
xchg
cmp
gs
pop
jne
sbb
or
leave
mov
in
push
sbb
sub
out
aam
mov
push
test
sbb
cmp
dec
adc
cmpsl
addr16
add
mov
jnp
negb
mov
popf
mov
test
xchg
int3
outsb
add
mov
mov
std
jnp
es
jns
dec
gs
or
lret
mov
out
add
mov
mov
mov
sbb
movsl
sbb
pop
dec
cmp
hlt
mov
xor
inc
mov
daa
xchg
repz
imul
jbe
push
cmc
scas
add
stos
ss
lret
jmp
sub
mov
and
icebp
fst
pusha
nop
mov
xor
xor
test
or
loopne
mov
sub
or
pop
stos
enter
xor
mov
jp
pop
sub
insb
jl
fadd
push
jae
push
sbb
ss
and
push
mov
jg
rol
cmp
leave
roll
inc
dec
mov
xchg
mov
jmp
add
jo
xchg
pop
arpl
pusha
outsb
in
xchg
in
jae
sahf
mov
cmp
jecxz
jnp
es
cld
leave
in
rorb
mov
add
mov
out
cmp
adc
scas
daa
mov
adc
pop
test
mov
push
xor
mov
mov
or
adc
mov
sub
nop
iret
cmp
insb
push
out
jnp
jo
sub
cli
mov
push
lcall
sub
push
addb
insb
fcompl
sti
adc
or
cmp
outsl
fmulp
lods
ja
aaa
das
icebp
jmp
xchg
pushl
lock
push
mov
push
xorl
cld
cmp
add
addr16
je
int
dec
add
and
popa
pop
pop
ds
aaa
jl
lock
jbe
fildll
mov
insb
xor
mov
cmpsl
std
mov
jbe
rorl
push
xlat
jae
pop
std
mov
xchg
sub
sbb
notb
xchg
or
push
out
cld
push
add
sbb
nop
fwait
push
nop
test
out
inc
jnp
daa
aaa
add
stos
jp
out
xchg
adc
fldcw
pop
ss
enter
sti
fidivl
jge
mov
mov
or
mov
push
sbb
leave
and
les
mov
push
je
pop
add
aad
xor
fwait
sub
mov
mov
bound
inc
imul
popf
sti
mov
sub
lods
sbb
push
dec
icebp
mov
adc
test
iret
add
sub
push
cld
or
mov
stc
and
testl
stc
or
mov
jns
clc
in
inc
mov
lods
std
int3
or
inc
sbbb
aam
sub
fidivs
enter
inc
sbbl
mov
pop
add
pop
cs
sub
mov
stos
pop
nop
jnp
mov
xchg
mov
push
adc
cmp
mov
cs
xchg
cltd
xchg
ds
push
inc
xchg
mov
std
pop
pop
adc
dec
add
sub
push
test
shl
jo
push
notb
imul
jb
push
and
pop
das
daa
fnstsw
lods
dec
inc
dec
fnsave
jne
addr16
lods
dec
pop
pop
shlb
xchg
or
xlat
int
in
movsl
out
jge
dec
xor
ljmp
mov
cmpsb
popf
and
cltd
flds
inc
xorl
shrb
sbb
sbb
jmp
js
pop
sbb
aas
sub
int
out
ja
cmp
repnz
stos
movb
add
pop
les
xchg
popf
js
adc
mov
mov
cmpsl
lret
cs
or
pop
es
fsubr
iret
pop
bound
scas
into
out
int
imul
jge
xor
jmp
xchg
push
call
nop
gs
fstp
pop
mov
push
jmp
adc
adc
push
xchg
push
out
pop
fstpt
jnp
loop
cltd
icebp
insb
cmpsb
clc
or
fmull
jns
fst
mov
inc
cmp
and
mov
loopne
hlt
jg
sbb
xchg
sub
loopne
sub
fidivrl
mov
movsl
cld
mov
scas
shrl
mov
ja
std
mov
cld
xchg
sbb
jns
cmp
adc
or
fidivrl
ss
ficompl
jbe
ljmp
lcall
mov
out
imul
mov
pop
mov
shl
int3
mov
inc
xlat
jg
fsubr
pop
and
rol
pushf
rcll
or
sahf
jb
insb
push
ret
or
push
pop
pop
lret
bound
inc
cmp
mov
aad
pop
mov
movsb
mov
mov
jge
sub
outsb
xchg
repz
cmp
iret
aam
popa
popa
pushf
cmp
mov
rclb
imul
divb
lcall
mov
push
rcrl
lret
test
jno
add
into
xor
test
jo
hlt
mov
mov
daa
imul
jp
or
push
fistl
mov
popfw
insb
adc
js
jmp
aaa
test
cmpsl
out
add
and
pop
pop
add
mov
adc
ret
shl
lds
popf
ret
shll
imul
dec
imul
push
mov
insb
pop
lods
sub
popf
ret
inc
lds
jno
enter
bound
mov
scas
test
loopne
cmp
mov
push
push
adc
mov
test
mov
lods
xchg
jb
pop
ficoms
loope
outsb
inc
add
dec
lods
adc
test
lret
in
lods
lret
cltd
inc
aam
shlb
xorb
stc
cmp
mov
pop
fstl
jp
outsl
and
push
pop
daa
mov
ret
orl
cwtl
out
loop
shlb
and
pop
mov
pushf
or
pop
cmpsl
popl
test
push
and
scas
xorb
lret
push
pop
or
mov
sbb
mov
jg
fisttpll
add
xchg
jl
or
jne
and
outsl
xor
aad
fsubrs
loope
lea
idivb
inc
addr16
jno
fbld
or
ss
xchg
decl
push
repnz
pop
nop
out
xor
clc
sub
cmp
pusha
xchg
stos
loopne
pop
je
xchg
lea
adc
stc
test
jge
jp,pt
pop
out
les
mov
in
add
cmpsl
mov
out
mov
mov
dec
imul
sub
push
cmp
xorl
cltd
test
into
sub
ja
mov
arpl
pop
and
cmp
in
cld
xchg
jmp
loope
push
xor
and
imul
or
popa
dec
adc
cmp
inc
mov
fnsave
fwait
mov
sub
cmp
mov
adc
pop
in
mov
aam
push
mov
daa
push
pop
mov
xchg
mov
popa
mov
mov
shufps
test
mov
add
mov
xlat
mov
stc
nop
pushf
fcmovnu
sub
inc
add
orb
ret
shlb
out
adc
pop
mov
xchg
cs
or
arpl
cwtl
mov
jns
pop
stos
into
lcall
adcl
movb
add
stc
add
pop
mov
xchg
xor
clc
jecxz
test
jo
out
neg
mov
xor
outsb
add
sahf
jno
je
xchg
ret
adc
imul
lods
cmp
jmp
js
add
xor
cmpsl
cwtl
mov
ja
leave
pop
jecxz
or
mov
lods
push
gs
sbb
ja
test
ds
call
add
xchg
out
cmp
sti
jge
ja
xor
add
pushf
out
and
loopne
jmp
mov
hlt
call
push
jmp
aam
pop
scas
sub
push
add
sti
dec
fnstcw
and
lods
insb
pop
stos
sub
nop
xlat
push
add
int3
xor
mov
sbb
hlt
or
imul
cmp
dec
pop
leave
sub
ss
rcrl
cmp
fstps
out
and
dec
jl
or
pushf
mov
pop
sbb
lock
rolb
push
adc
scas
dec
xor
xor
xchg
xor
ret
ficoms
mov
fadds
stos
cmpsl
in
loop
inc
test
pop
xchg
into
fisttps
fsub
fwait
arpl
fldcw
setg
les
movl
cmp
dec
dec
push
in
ret
lahf
sarl
mov
cld
mov
imul
mov
enter
jecxz
push
enter
imul
lret
int
xchg
sbb
push
cwtl
fs
out
dec
and
inc
sub
test
xor
addb
jl
in
mov
int
mov
into
mov
movsb
or
mov
add
sub
add
lock
divb
cmp
cmpsl
mov
cmpsl
stc
add
js
mov
jne
test
pushf
call
push
pop
mov
stc
shll
push
aad
jo
sub
mov
fcoml
aad
test
inc
and
nop
sbb
adc
out
dec
test
in
cmc
jae
jo
inc
clc
frstor
mov
add
mov
adc
test
or
xor
pop
pop
insl
fidivs
xchg
incl
adc
das
ja
daa
outsl
cmp
push
lcall
add
dec
inc
jae
jp
popf
inc
bound
daa
jge
loopne
nop
dec
ljmp
ret
and
fcmovu
mov
aam
repnz
mov
jb
mov
daa
test
mov
fs
cmp
ret
xchg
jnp
xor
add
ja
ds
popa
xor
or
nop
add
hlt
mov
daa
push
adc
pop
das
inc
enter
loopne
shl
mov
movsl
ds
outsl
xor
dec
fs
inc
sub
mov
fisubrs
lcall
dec
movsb
adc
mov
push
cmp
jg
emms
pop
scas
icebp
rol
movsl
leave
xchg
jae
in
mov
pop
and
mov
out
and
ljmp
xor
out
arpl
sbb
fcoml
sarb
dec
call
int
and
push
test
negb
xlat
arpl
out
jnp
pop
test
add
loop
mov
push
aam
jge
sbb
cmp
mov
mov
fwait
or
mov
stos
add
imul
adc
mov
dec
ficoms
call
jnp
loope
rcll
jae
int3
pop
push
and
in
or
jmp
insl
cs
aam
inc
push
popf
sbb
test
test
outsb
in
sub
std
cld
inc
iret
and
sahf
leave
or
mov
and
je
mov
loope
in
dec
leave
adc
dec
xorl
loop
fists
adc
movsl
icebp
aaa
mov
pop
pop
adc
rcr
clc
jb
inc
xchg
pop
pusha
daa
or
loopne
test
mov
mov
mov
inc
xor
ja
aas
ficoms
cmpsl
push
adc
mov
into
jl
and
cmp
call
cld
push
or
and
int3
les
mov
jnp
stos
inc
dec
sub
movsl
enter
out
frstor
pop
adc
leave
push
dec
lahf
insb
sbb
sarl
shrb
dec
ret
push
and
or
mov
push
pop
mov
adc
leave
dec
lods
sarb
or
pop
arpl
mov
in
xchg
cmp
aas
add
ficomps
cwtl
rcr
cli
mov
jb
aaa
std
inc
aad
imulb
cmpsb
in
mov
clc
jo
mov
sbb
mov
and
add
sbb
pop
cmp
rol
cmp
ds
loop
loope
xchg
ljmp
mov
xor
mov
sbb
adc
dec
imulb
jae
dec
push
stc
cmc
jnp
pop
xchg
ljmp
cmp
sbbl
int
lret
cs
lcall
mov
jecxz
add
dec
push
imul
pusha
mov
fcomps
jmp
xchg
jb
scas
pop
pop
xor
jecxz
fimull
or
leave
jecxz
mov
jecxz
loopne
sub
popf
mov
mov
cwtl
shrb
call
mov
pop
and
insb
cmp
mov
in
sbb
into
sbb
cmp
jb
lods
push
add
and
jb
or
mov
push
fcoms
and
cmp
push
int3
lock
movsb
sbb
mov
mov
jne
pop
ss
jecxz
cltd
xchg
scas
lcall
jnp
in
push
lahf
pusha
xchg
je
clc
sub
and
aas
adc
fldcw
icebp
cld
jo
repz
fisttpl
pop
cmc
mov
in
and
xor
jg
inc
outsl
in
das
cmp
pop
dec
jns
mov
xor
je
lcallw
shrl
push
ds
fwait
dec
sbb
push
inc
jmp
cmp
int
mov
push
ss
dec
cmp
xor
adc
mov
mov
lea
pop
lea
mov
lahf
popa
mov
jl
sub
sbb
xchg
xor
mov
or
dec
adc
idivb
inc
jge
mov
or
cmpsl
stc
add
notb
cwtl
dec
push
out
mov
shrd
sub
cmp
cli
sti
stos
add
sarl
scas
aam
sbb
sub
fstpl
xchg
minps
lret
mov
pushl
jecxz
adc
xor
fldenv
jne
imul
and
pop
adc
or
mull
ret
inc
dec
add
or
xchg
cld
and
das
add
jb
adc
pop
fs
dec
add
mov
sarb
bswap
cltd
lcall
push
mov
jo
sbb
mov
pop
notl
pushl
mov
loope
es
inc
and
es
das
and
outsl
push
xchg
inc
push
inc
add
inc
jge
pushf
adc
inc
jne
pop
sbb
add
pop
cmp
xor
xchg
mov
jl
mov
data16
push
es
les
lds
mov
lds
pushw
mov
hlt
stc
jnp
sbb
jp
sbb
push
xchg
mov
stc
mov
push
dec
leave
sarl
outsl
or
fimuls
les
popa
push
xchg
fs
sahf
pop
jle
aad
add
out
std
inc
js
in
jmp
fmuls
ds
aam
imul
aam
sbb
adc
pop
sub
dec
shlb
outsb
and
imulb
shrl
imul
jo
pushl
in
mov
sti
sub
callw
aas
lds
call
jp
cmc
daa
or
std
lock
ret
adc
jecxz
xor
mov
mov
arpl
outsb
adcl
mov
leave
icebp
adc
outsb
and
xchg
out
lds
shrl
mov
pop
pop
adc
and
daa
roll
scas
popa
pop
mov
xchg
sbb
in
cmp
and
jnp
sub
lods
push
addr16
fsub
mov
inc
inc
stos
mov
ret
mov
jecxz
int3
repnz
push
jbe
movsl
in
outsb
stc
jg
xor
mov
or
sbb
into
and
mov
mov
shrl
inc
iret
out
jbe
leave
fst
jb
aas
sbb
adc
lahf
mov
iret
sti
pop
push
xor
outsl
inc
or
into
fcmovnbe
inc
mov
jecxz
ret
xchg
xchg
jmp
dec
cli
sub
add
iret
popa
mov
lret
mov
jg
xchg
fcmovnbe
mov
dec
aas
pop
jl
xor
jbe
cmp
rcrl
xor
mov
data16
outsb
aas
ds
stos
in
cmp
rorb
push
repz
mov
pop
lahf
in
cmp
xor
and
scas
adc
mov
mov
or
jmp
in
sti
inc
call
test
inc
sub
xor
xchg
and
loope
ljmp
aad
cmp
loope
ljmp
into
sarl
jns
pop
sub
ljmp
cmp
push
fistl
pop
push
cmp
into
mov
and
jns
inc
push
fimuls
js
xchg
push
ds
sarl
xor
and
mov
mov
arpl
xor
jbe
jo
adc
sbb
aas
mov
add
dec
lahf
mov
mov
in
jle
aas
xor
arpl
xor
and
ss
pop
popf
aad
mov
push
mov
mov
push
mov
outsb
inc
dec
mov
xlat
addb
lea
dec
ror
add
xor
xchg
mov
lea
scas
or
jb
cmp
cmp
adc
fucom
cs
sub
or
out
pop
in
mov
mov
jae
mov
movsl
push
jl
mov
fnstsw
pushf
daa
mov
call
nop
or
movsb
xchg
xor
push
insb
cmp
mov
fs
mov
cmp
dec
decb
pop
jcxz
mov
nop
jg
aad
aad
dec
add
pop
xor
movsbl
daa
gs
lret
push
test
int
test
mov
cmp
dec
or
cmovbe
add
out
cwtl
cmp
dec
loop
xchg
dec
out
loope
pop
pop
leave
dec
push
mov
cltd
pop
cmp
mov
mov
in
xchg
loop
xchg
in
push
shll
pop
ljmp
and
lahf
mov
inc
mov
hlt
shrb
ret
mov
or
fnstcw
or
push
sahf
incb
and
xor
add
jne
push
push
mov
pushf
mov
mov
cs
jmp
dec
sub
repz
jp
jne
sub
int
push
and
cmpsl
pop
adc
pop
mov
mov
xchg
dec
pop
mov
lods
inc
mov
fcomps
mov
lahf
into
sti
xchg
fistpll
pusha
xlat
mov
test
dec
fldenv
mov
cmp
sbb
lods
sar
adc
stc
or
aas
cmc
add
sub
add
pop
adc
and
popa
lods
imul
movsl
mov
adc
or
iret
stos
in
mov
sbb
stos
mov
xchg
sub
cmp
lahf
jae
push
mov
lods
sti
idivl
mov
mov
test
gs
outsl
cmp
push
std
push
adc
push
xlat
ret
in
test
aad
fldt
popa
daa
test
fwait
cmpsl
mov
push
add
fdivrp
fists
push
rcrb
test
out
test
pop
add
xlat
jmp
mov
inc
cli
dec
lods
add
hlt
jnp
das
cmc
xlat
out
andl
add
pop
sub
pop
adc
insl
xchg
shlb
xor
dec
jecxz
cmp
shr
in
pop
je
push
and
xor
icebp
xchg
enter
and
pop
jge
push
das
mov
lahf
test
ja
cmp
mov
add
sbb
aas
ja
inc
sub
repnz
nop
xor
adc
dec
add
lock
mov
or
aaa
xchg
xchg
mov
pmulhw
jge
icebp
lods
dec
add
sbb
daa
inc
jp
in
imul
pop
aam
push
push
fcmovnb
mov
dec
fwait
pop
sub
sub
xor
aas
push
push
pop
or
add
mov
xchg
inc
cmp
mov
lahf
inc
cmc
dec
cmc
mov
sahf
stc
lods
push
loope
or
out
or
inc
sbb
pop
mov
daa
das
out
xor
ja
add
loopne
pop
fdivs
mov
repnz
xor
jle
addr16
std
xchg
add
add
cmp
rclb
jge
xchg
lods
push
stos
mov
sbb
add
inc
dec
xchg
clc
fstpt
xor
sbb
adc
push
addr16
jns
icebp
fdivrs
mov
push
dec
ret
arpl
or
pop
cltd
cmp
mov
inc
add
xor
xchg
mov
sub
divb
push
hlt
xchg
fcoml
inc
scas
cmpsb
imul
push
test
and
add
mov
push
inc
popf
xor
and
cli
xor
iret
nop
cmp
outsb
adc
insb
mov
iret
int
leave
adc
mov
fidivl
mov
jae
and
jb
jno
ja
sbb
punpcklbw
xor
pop
or
push
shr
xacquire
and
sub
dec
xor
pop
lds
and
test
fcomps
test
cs
mov
decb
ret
lock
jg
lods
fdiv
icebp
cmp
jl
clc
jecxz
fidivs
arpl
push
loopne
add
mov
xchg
mov
cs
lea
out
les
inc
imul
mov
insl
pop
scas
test
jmp
int
daa
add
dec
cmpb
adc
rol
daa
inc
pop
pop
bswap
fstps
shlb
or
jp
sti
xchg
or
roll
add
push
fdiv
out
add
popf
dec
js
mov
fnstenv
push
imul
push
imul
loop
out
mov
lret
or
es
mov
xor
clc
jg
mov
fidivrs
push
add
sub
jp
aas
add
jns
jae
hlt
ret
test
hlt
xchg
mov
out
cwtl
xchg
push
cmpsb
call
jg
jge
test
sarl
test
jne
jg
push
outsb
cmpb
shrb
xchg
mov
push
js
lds
mov
out
lret
pusha
cmp
lds
lar
dec
std
nop
push
xchg
sub
fldl2t
stos
movsl
cmpsb
rcl
pusha
adc
clc
sbb
dec
lret
cmpb
lods
std
cli
repz
pop
ret
sbb
aas
sub
inc
subl
mov
add
ss
stos
xor
inc
pop
xchg
stos
inc
xor
hlt
orb
mov
pop
cmp
and
or
adc
dec
arpl
stc
leave
push
ja
or
pop
pop
xor
mov
push
ja
xor
sahf
push
insb
pop
or
ret
push
scas
cmpl
xchg
fdiv
test
arpl
pop
out
jl
icebp
inc
push
jle
jl
es
or
mov
xor
jecxz
xchg
pop
jae
scas
sbb
inc
in
mov
ret
repnz
lret
inc
xlat
mov
mov
adc
cltd
xor
mov
inc
sub
inc
lret
jmp
repnz
jne
loope
cli
xchg
mov
add
scas
fwait
lds
daa
add
cmp
orb
sbb
mov
fsubrs
push
hlt
push
call
cmp
mov
cmp
adc
dec
jmp
sub
sbb
aad
push
pop
imul
cmp
pop
repnz
dec
mov
icebp
and
mov
add
push
not
mov
outsl
jnp
cmp
cmp
jp
inc
and
xchg
in
mov
roll
add
ljmp
mov
cltd
add
in
shrl
rcll
mov
add
mov
dec
mov
cmpsb
xchg
push
lret
ret
faddl
stc
jmp
das
or
push
mov
xchg
shl
xchg
stc
cmp
cld
and
or
imul
mov
push
stos
out
scas
push
cli
fdivl
dec
xchg
scas
push
mov
nop
jae
arpl
mov
pop
mov
movsb
push
dec
push
mov
xlat
stos
sbb
cmc
gs
arpl
push
or
pop
push
loop
test
out
out
dec
pop
sub
test
mov
mov
cmp
hlt
cmpsl
push
xchg
xor
push
push
repz
lock
inc
outsb
mov
lods
add
addr16
test
call
insl
add
out
cld
add
popf
add
sbb
or
xlat
int
test
xlat
jne
push
mov
sarb
lcall
loope
sub
ds
mov
outsb
xor
in
inc
repnz
xchg
lret
mov
mov
sbbl
iret
cmp
aas
je
shr
lea
std
and
dec
cmp
push
xlat
aaa
sbb
cmp
cmp
rcrb
addb
jecxz
cld
jmp
cmpsl
inc
mov
les
sbb
in
out
ja
daa
mov
inc
movb
into
mov
pop
jmp
push
adc
fsubrs
in
jbe
shl
mov
sbb
mov
cwtl
jl
mov
jno
bnd
or
iret
mov
xchg
adc
xor
add
das
cmp
pop
cmp
call
inc
cmpl
inc
add
pop
repnz
jle
lds
fsub
mov
les
in
movsb
pop
inc
aam
aaa
fs
out
push
dec
mov
movsb
test
orb
bt
out
fs
mov
imul
dec
stos
pop
sysret
mov
mov
mov
test
sbbb
stc
push
jno
test
jns
test
inc
cmp
jmp
scas
xchg
in
ja
cmpsb
js
inc
out
fs
xor
int
out
and
gs
mov
pop
fistps
jo
lods
pop
int3
jns
or
movsl
pushf
loope
das
xor
cmpsb
loop
sarb
dec
sbb
dec
jg
data16
add
sub
push
aas
mov
sub
lcall
sub
or
cld
scas
push
lock
stc
shll
push
mov
pop
add
adc
fdiv
scas
jle
lcall
cld
rol
mov
xor
add
addl
pop
test
cmpsb
jnp
ret
enter
push
scas
sahf
bound
push
bound
dec
pop
add
fwait
mov
add
lods
sub
adc
xchg
cmp
fisttpll
add
sbb
pusha
sub
idiv
cmp
ret
jae
sub
cmp
adc
mov
outsb
jecxz
dec
push
mov
push
shrb
sub
mov
ret
mov
cmpsb
imul
stc
adc
add
xchg
xor
push
outsb
shr
mov
out
push
dec
ljmp
cmp
jb
sub
fsubrs
lahf
sarl
scas
filds
push
jns
push
dec
and
cmp
leave
sub
in
sub
stc
adc
std
adc
fs
les
pop
call
leave
and
fcomip
imul
movsl
xor
lods
mov
sub
xchg
inc
or
out
push
jo
sbb
sub
shlb
sbb
pop
pop
jns
mov
jo
fsubrs
sub
jl
xchg
add
xchg
daa
rcrb
adc
rol
lds
ret
jne
sarb
push
xor
pop
int
mov
mov
sbb
sub
pop
push
jns
repnz
lret
fstl
lcall
enter
push
mov
add
pop
pop
cli
mov
inc
addl
insl
pop
mov
mov
ljmp
insl
dec
push
cmp
pop
lock
loopne
adc
call
dec
sub
icebp
sub
scas
mov
xchg
push
mov
int3
rep
inc
mov
adc
fiadds
les
pop
outsl
pop
stos
mov
sbb
es
cld
and
xchg
mov
sbb
xor
add
add
es
negb
fldt
out
mov
or
stos
sub
jg
jne
jne
nop
mov
sbb
lods
loopne
jb
fcomip
pop
mov
data16
aam
adc
add
lods
pop
loopne
lods
jb
jb
pop
sar
sbb
pop
fisubs
enter
ficomps
inc
pop
xchg
dec
and
cmp
hlt
out
pop
and
and
mov
mov
sbb
mov
mov
cmp
pop
jns
cmp
fistpll
mov
shlb
pop
pushl
mov
out
jg
daa
inc
inc
out
pop
xchg
mov
shl
sarl
movsb
and
dec
daa
inc
insl
lock
jno
pop
loop
push
and
ss
fs
repnz
and
and
cltd
inc
and
adc
cltd
push
ss
aaa
jle
mov
jp
cli
iret
push
mov
dec
jne
jl
and
stos
rcr
aas
mov
dec
fst
int3
imul
lret
xor
pop
jg
push
cmpsl
mov
mov
mov
lcall
stos
inc
aaa
xor
jbe
xlat
pop
aas
and
cmp
int3
aas
pop
sbb
in
inc
or
aas
cmp
out
js
cmpsl
inc
mov
in
loope
inc
into
scas
out
jno
xor
mov
aad
shll
sbb
xor
addr16
movsl
sub
fisubl
add
rolb
aam
and
loope
lret
xchg
jecxz
test
cld
ret
jo
push
daa
fidivs
push
ja
popf
jl
faddp
das
push
mov
dec
out
cmp
xor
nop
idivl
js
jae
mov
fidivrs
ret
lahf
loope
daa
ljmp
and
pop
mov
ja
loope
sub
jne
enter
adc
dec
fildll
mov
test
inc
std
bound
loope
jae,pt
orb
push
and
mov
adc
lods
adc
adc
aam
test
sub
fdivrs
add
xchg
push
jge
sahf
dec
lods
into
push
push
dec
mov
lret
int
int
imul
mull
push
mov
push
out
push
icebp
mov
add
test
adcb
xchg
out
fldenv
dec
int
cmc
jo
jp
test
push
les
push
push
jbe
shlb
out
lock
rorl
incb
das
sub
xchg
pop
popa
leave
or
imul
decb
xor
not
test
jno
adc
in
jae
xchg
mov
mov
and
fildl
sub
mov
mov
lret
and
push
popf
mov
push
aas
xor
fiadds
cmp
es
mov
push
data16
xor
aam
je
movb
inc
in
gs
inc
mov
dec
add
xchg
js
sbb
ljmp
mov
mov
adc
sbb
outsb
or
fstpt
ret
xchg
shrl
jge
add
dec
xchg
test
ret
jg
pop
insb
pop
mov
cmp
push
in
cmp
sub
shll
aad
inc
int
add
sarb
stc
sub
sti
sbb
mov
icebp
cs
mov
mov
fucom
push
lock
mov
cmp
mov
sbb
outsl
add
pop
inc
in
testb
push
loopne
adc
shrl
icebp
xchg
mov
mov
and
jno
mov
inc
mov
mov
nop
adcl
js
jle
xlat
ljmp
into
dec
dec
jecxz
insl
adc
movsb
mov
jge
fdivl
insb
insl
iret
sbb
jl
ljmp
dec
rclb
add
add
xor
and
sub
xchg
cmp
das
jle
scas
nop
xchg
adc
pop
stos
mov
bound
sub
push
jnp
dec
xor
add
inc
mov
lods
xchg
jmp
add
fwait
xor
xor
insb
push
push
repz
jo
dec
es
fisubrs
add
xor
rcrl
xchg
or
and
lcall
pop
test
lcall
mov
out
jl
test
and
sbb
repz
add
cmpsl
out
sbb
test
lods
pop
outsb
jecxz
fidivl
lods
cmpsb
pushl
xor
mov
sub
dec
add
inc
sub
sbb
inc
sti
std
push
add
or
ror
and
mov
lds
adc
dec
mov
jg
mov
dec
xchg
and
repz
ds
sahf
dec
movsb
dec
xor
insb
jnp,pt
cltd
jecxz
insb
out
test
stos
adc
cwtl
or
imul
jg
mov
push
fistps
xor
arpl
cmp
jbe
dec
inc
mov
mov
test
push
and
adc
sbb
mov
mov
xlat
out
imulb
ret
fucom
notl
or
lret
jl
mov
sub
std
inc
data16
push
mov
adc
rcrb
xchg
stos
cmp
jge
das
adc
mov
mov
xor
dec
push
mov
outsb
mov
popw
dec
in
pop
dec
pop
sahf
inc
add
call
scas
mov
insb
mov
mov
test
int
mov
sbb
or
mov
fmul
mov
mov
adc
xor
or
lock
pop
and
les
and
mov
leave
xchg
inc
fs
dec
cmp
and
ljmp
xchg
pushf
xchg
and
movsb
insb
or
mov
movsb
sub
and
sub
repz
mov
mov
mov
and
mov
bound
push
fsubrs
ret
ud2
xor
icebp
xor
and
jg
push
mov
jb
outsl
xchg
sbb
mov
lcall
push
popf
int
push
sub
in
xchg
fs
or
xlat
sbb
rclb
aam
or
mov
fdivrs
pop
ja
jecxz
xchg
in
xor
lahf
jo
cmpl
outsb
in
cmpsl
pop
pop
xchg
push
cltd
rclb
dec
mov
jmp
xchg
push
shlb
push
or
pushw
out
loopne
fcomps
xchg
orb
jl
imul
mov
cld
jbe
les
loop
mov
pop
loop
jmp
fwait
lret
in
mov
mov
adc
ja
cmp
push
icebp
push
leave
sbbb
cs
cmpsb
mov
lret
fistpl
outsb
mov
jp
mov
inc
nop
notl
and
mov
xchg
jbe
stc
sub
cmpsl
push
fwait
xor
adc
pushl
lahf
imul
jmp
push
subb
fbstp
pop
andl
les
jecxz
loopne
les
pop
inc
lods
out
cmp
xchg
popf
mov
adc
aaa
rolb
mov
inc
add
lea
fwait
xchg
cld
enter
fs
mov
mov
inc
xor
add
mov
cmp
adc
cs
sub
imul
dec
pop
and
fadds
jmp
daa
xor
pop
aam
add
out
jbe
xchg
test
mov
sbb
and
loop
gs
les
lahf
imul
orb
test
sbb
xor
cwtl
rcrl
icebp
not
not
punpckhbw
xchg
out
mov
jecxz
pushf
adc
mov
flds
shl
mov
gs
fstps
add
ret
into
fbstp
sub
mov
jl
push
jmp
and
cli
cwtl
pop
aam
xor
int3
test
loop
mov
add
lods
sbb
jge
xlat
jl
lahf
nop
inc
jle
lock
lods
jecxz
adc
mov
xchg
xchg
and
fwait
pop
inc
lahf
fstps
push
dec
iret
mov
ficoml
add
daa
cmp
push
dec
pop
not
mov
pop
cmpsl
roll
or
sti
xchg
jae
inc
adc
in
sub
cmpsb
mov
lahf
imul
cmp
xchg
testw
notl
scas
xor
repnz
mov
or
push
out
insb
out
je
xlat
dec
sub
or
icebp
sahf
lahf
push
cmpsb
sbbb
lcall
sbb
push
rcrb
pusha
in
jb
cs
adc
xchg
add
inc
jle
iret
inc
addb
and
sbbl
and
arpl
pop
hlt
adc
out
out
js
jg
adc
mov
mov
inc
data16
mov
jge
les
cld
pusha
sti
jmp
ja
iret
bound
pop
mov
mov
push
push
cld
aad
call
push
sub
jne
lock
fnstsw
mov
enter
mov
popf
aas
pop
cld
cwtl
or
adc
jne
mov
dec
push
jecxz
jns
mov
jbe
inc
jbe
stos
ljmp
fwait
adc
sub
xor
jbe
mov
mov
xor
mov
xchg
cmp
and
jge
push
dec
into
pop
cmp
mov
push
and
inc
push
pop
or
or
push
in
mov
mov
cli
mov
data16
xor
lods
sbb
loopne
bnd
ret
insb
lds
adc
pop
cmpsl
mov
movsb
jp
mov
dec
aad
jnp
pop
ljmp
mov
jg
jg
dec
pop
push
test
cmpl
popf
xor
adc
mov
in
mov
or
xchg
lret
add
jp
repz
push
in
sbb
dec
inc
mov
mov
les
cmpsl
ss
inc
dec
push
sub
insb
adc
nop
cltd
sti
rorl
std
fildll
ret
sti
jnp
loope
cwtl
sbb
clc
int3
dec
cmp
dec
out
not
mov
pop
xor
pop
ficoms
pop
sarl
add
push
mov
pop
pop
pop
rcrb
and
adc
jle
xchg
std
loop
aas
adc
nop
pushf
out
mov
test
inc
shll
mov
test
xor
orb
xchg
cmpsb
lahf
out
push
xchg
adc
jnp
sub
pop
jg
leave
test
xor
cmp
fwait
cmp
arpl
cmovge
mov
inc
sub
rolb
jae
cs
cmpsl
adc
push
mov
sbb
daa
mov
jl
out
ds
xor
jae
pop
loop
xchg
js
add
mov
fsubr
ljmp
sub
cmp
movsb
idivl
xor
add
push
jle
xchg
jl
out
loop
imul
clc
xor
mov
sub
jno
sub
bound
jno
ds
mov
flds
shlb
subl
sub
pushf
pusha
push
push
jo
xor
fsqrt
movzwl
clc
cld
mov
push
dec
cmp
xor
test
lods
cld
out
aad
pusha
mov
inc
rorb
mov
xchg
pop
in
imull
into
movsb
pop
sbb
cmp
shll
inc
xor
outsl
or
popa
inc
mov
int
pushf
pop
xchg
pop
adc
pop
push
push
rcrb
adc
daa
scas
out
dec
shrl
test
aaa
in
dec
sub
and
dec
xor
lds
fdivrs
push
mov
mov
cld
dec
lods
es
loop
stos
insb
adc
cs
hlt
insb
rol
rol
cld
ljmp
xchg
dec
inc
repz
outsl
loopne
sub
sbb
xchg
pop
add
jle
out
xchg
or
icebp
dec
outsb
je
pop
lret
adc
mov
sub
std
dec
pop
bound
jmp
ret
mov
sti
mov
sub
es
xlat
jae
ret
xor
addr16
xchg
scas
dec
in
insb
testl
mov
xor
mov
sub
mov
mov
repnz
into
ret
adc
js
and
xor
rolb
into
sub
push
push
sbb
int3
add
xor
jo
pop
iret
dec
xchg
mov
add
mov
dec
scas
icebp
stos
pop
jge
mov
andb
mov
dec
lea
cwtl
outsl
mov
sarl
cmp
dec
jecxz
dec
fnstcw
ss
pushl
fstpt
fsts
stos
inc
loopne
iret
jg
or
repz
pop
mov
push
sub
xor
int3
push
push
mov
repz
mov
cmp
dec
jge
aad
rolb
xchg
das
rep
loopne
cmp
pop
outsl
popa
call
pop
je
pop
inc
push
test
cmp
ss
jno
fs
fimull
imul
iret
push
cmp
repz
fmull
add
outsl
xchg
pop
add
aas
es
hlt
add
fmull
gs
pop
sahf
jmp
int3
and
sbb
sub
imul
addb
aad
sub
xchg
mov
sub
into
mov
sbb
call
inc
int
mov
pop
js
jo
cs
mov
push
repz
pop
adc
testb
or
jmp
mov
pop
pop
and
and
cli
call
adc
inc
gs
pushf
push
xor
xchg
mov
cmp
lret
xor
cmc
adc
adc
and
sbb
dec
mov
cmp
mov
xor
sbb
out
jb
pop
mov
adc
mov
sbb
sub
and
out
push
inc
sahf
sbb
sub
cld
outsl
popf
addb
xor
cltd
cli
sub
les
fsubs
ja
pop
xchg
sbb
push
jecxz
jo
imul
sub
inc
pusha
pop
push
addl
sbb
sbb
jae
test
dec
es
xor
push
inc
addr16
lds
pop
arpl
jb
push
cs
xchg
sbb
daa
and
add
mov
rorl
cmpsl
push
or
ret
jge
pusha
andb
mov
into
sti
sub
stc
or
inc
sbb
cmpsl
jb
jns
lret
adc
notl
les
bound
scas
xor
mov
or
outsl
or
pop
ds
idivb
dec
gs
sub
sbb
mov
dec
call
sbb
cmp
push
mov
cmp
fmull
cltd
call
insb
shll
mov
and
jp
pop
jb
shlb
addr16
jno
sub
lcall
cltd
mov
pop
pop
mov
je
popf
movntq
lock
cmp
dec
jns
addr16
and
hlt
loopne
leave
mov
subps
xorb
xor
add
test
imul
pop
mov
mov
mov
setle
adc
les
fiadds
arpl
adcl
mov
jns
push
xor
jecxz
fisttpll
imul
outsl
add
hlt
test
icebp
lock
jo
sub
mov
in
movsb
mov
jmp
sub
adc
add
push
addr16
or
fnstenv
in
inc
jne
bound
inc
dec
adc
push
in
mov
clc
je
mov
mov
sbb
push
movsb
push
xor
mov
sahf
cltd
xor
cmp
add
daa
out
or
xorl
inc
mov
and
imul
int3
xchg
fnstsw
inc
clc
inc
adcb
add
jo
xor
jmp
pop
clc
mov
ljmp
push
lock
daa
arpl
sub
aaa
jns
xchg
jecxz
mov
negb
std
jl
ja
loopne
shrb
popa
roll
mov
mov
call
mov
cmp
jb
push
push
leave
insb
cmpsl
das
pop
adc
sbb
pusha
test
in
jge
or
xlat
mov
jae
loopne,pn
sbb
and
add
xchg
push
xchg
loope
dec
and
sub
gs
sbb
ds
mov
mov
mov
lret
lds
addr16
test
sub
js
fcompl
call
jne
add
in
repnz
in
adc
push
movsb
mov
loop
and
mov
xor
dec
pop
mov
clc
push
pop
repz
stos
lods
ret
imul
cmc
loopne
xchg
sbb
roll
jno
hlt
sbb
cli
mov
push
iret
push
mov
popa
sub
pop
xchg
ds
je
daa
sub
push
cld
lea
ds
repnz
sub
and
dec
movsl
sbb
xor
adc
in
mov
fwait
cmp
pop
jge
lock
shlb
idiv
lods
dec
xchg
or
jns
fsqrt
cmp
daa
out
jle
icebp
push
mov
mov
and
add
fstpl
dec
movsl
sub
imul
dec
in
or
nop
fcompl
mov
fs
fimull
insb
lea
fwait
jl
push
clc
inc
mov
jecxz
sbb
lea
xor
push
outsb
add
add
pop
inc
fcmovnbe
fisubl
arpl
negl
push
sti
pop
cmp
dec
test
lock
add
and
xchg
xchg
aaa
sbb
and
jmp
dec
pop
adc
scas
sbb
scas
cwtl
xor
xlat
jno
xor
cwtl
mov
fcmovnbe
cli
jg
outsl
lret
lcall
adc
dec
push
mov
or
add
out
jmp
sub
xor
adc
dec
and
je
lds
cmp
xchg
stc
out
add
pusha
pop
shlb
cmp
jle
sub
mov
pusha
rol
ljmp
rcrl
js
push
out
pop
out
adc
mov
mov
loope
hlt
in
iret
xor
dec
aam
mov
call
ss
mov
pushf
insl
dec
lret
mov
xchg
es
xchg
loope
popf
pop
mov
jo
gs
sub
outsb
ret
mov
inc
pop
and
pop
popf
xchg
sub
cmp
or
dec
outsl
cmp
cmpsb
fwait
insb
fs
sbb
test
je
pop
sub
rcrb
pop
pusha
test
push
fcomp
xor
stc
bound
pop
xor
pop
xor
fwait
pusha
add
pop
int3
lods
cltd
pop
push
andl
or
ret
popa
push
sbb
popf
mov
sub
ret
leave
mov
in
ret
mov
push
push
add
pop
sarl
mov
test
mov
mov
adc
roll
and
jmp
out
sbb
cs
pop
test
ja
fwait
sahf
scas
add
pop
sti
mov
dec
push
iret
inc
add
push
mov
pop
mov
pop
xchg
scas
enter
push
mov
repz
mov
addr16
xchg
xchg
rcll
lock
imul
or
xchg
cmp
stc
lods
andl
push
imul
jnp
inc
mov
xlat
into
fs
jmp
pop
inc
insl
lret
sbb
and
incl
ja,pt
test
xor
sahf
xchg
je
ret
and
mov
mov
xor
insb
adc
jge
lods
test
mov
mov
push
enter
std
jns
subb
fcmovnbe
mov
pop
clts
test
popf
push
add
fsubp
adc
imul
fnstenv
sub
mov
inc
cmp
mov
pop
fisubl
gs
push
into
sbb
inc
lahf
xchg
jbe
aaa
orl
inc
adc
adc
and
addb
bound
jle
or
push
jp
xchg
loop
sar
pop
in
and
inc
mov
sti
clc
cmpsb
xor
test
testb
rcrb
or
imul
fildl
mov
in
arpl
lods
repnz
fcoml
outsl
outsl
mov
jg
mov
jae
xor
test
jb
mov
xchg
mov
pop
ret
and
repz
les
and
jns
push
nop
subb
push
inc
push
cmp
lret
in
cmp
lds
mov
fnstsw
inc
mov
jmp
sub
fidivs
arpl
dec
dec
add
arpl
mov
testb
call
rcr
sub
push
in
cmp
sbb
out
in
dec
enter
lret
movsl
dec
mov
idivl
xlat
xchg
push
imull
outsb
add
lock
subb
arpl
mov
xchg
jge
mov
icebp
cs
add
cmpsb
push
lcall
stc
mov
ud0
jns
sub
shlb
mov
mov
aam
xor
aaa
fdivrs
sub
cwtl
inc
mov
and
pushf
lock
insl
mov
test
lcall
push
push
push
add
pmaxub
push
jae
test
in
les
push
inc
xchg
xchg
imul
cmpsl
or
and
std
jno
jp
adc
xorb
sbb
std
in
mov
scas
sub
lret
cmp
js
inc
insl
rcr
gs
aad
pop
pop
sub
jnp
mulb
push
pusha
insl
jbe
movsl
test
in
dec
adc
out
and
dec
or
fildll
pop
fisubs
in
sub
mov
cs
clc
inc
js
inc
mov
in
outsb
fs
mov
sahf
or
popa
lret
inc
sub
and
inc
bound
test
aad
adc
aad
adc
dec
jne
mov
ficoml
lcall
lock
mov
stos
mov
xchg
fdivrl
sbb
mov
bound
pushf
sbb
jae
cmpsb
cmp
and
jp
mov
xor
stos
imulb
adcl
push
int3
mov
ret
aaa
jns
and
ss
sahf
fldenv
mov
or
rolb
push
jmp
push
and
pop
sub
ljmp
outsb
pop
daa
jg
subl
sub
cmpsb
mov
mov
pop
test
mov
cltd
push
mov
int
jecxz
nop
das
xor
pusha
add
jl
jns
push
mov
bound
pop
out
iret
and
xor
sub
mov
pusha
push
dec
mov
sahf
lea
jns
xchg
aaa
or
jno
cld
movl
mov
and
aad
clc
xchg
dec
or
pop
cwtl
ja
jmp
repz
lahf
outsl
push
insb
adc
in
shll
pop
pop
int
test
cmp
movsl
leave
cs
popf
inc
js
sub
mov
xchg
and
out
ja
stos
out
cwtl
lea
shl
ds
jns
lock
sbb
and
and
pop
fcom
push
lret
xor
test
daa
dec
sub
insl
sti
fisttpl
fcompl
or
repz
int3
pop
fiaddl
imull
pop
inc
cmp
mov
fsubrp
dec
call
dec
or
or
arpl
inc
ror
push
adc
jnp
rol
das
add
sahf
mov
and
jmp
mov
pushf
pop
sbb
sbb
and
cli
add
or
sub
mov
push
stc
stos
mov
es
jle
shlb
popf
mov
and
add
loope
orl
inc
int3
fsubrs
jne
mov
xchg
inc
fucomp
sahf
lret
pop
popa
rolb
loope
jg
xor
inc
and
sub
jns
das
fwait
mov
test
add
out
mov
or
fisubrl
add
jmp
fistl
faddl
cmp
stc
out
es
scas
add
cmp
rorl
icebp
pop
lock
jecxz
pop
push
mov
lahf
popa
pop
sbb
jp
mov
cmpsl
sbb
and
sub
je
shr
jge
push
inc
out
cli
daa
aas
add
inc
ret
mov
and
jnp
sub
mov
shl
jl
cmp
js
inc
lret
mov
fstl
arpl
clc
inc
dec
fsubs
jno
outsl
mov
and
ja
and
fiadds
mov
cmpb
hlt
arpl
jle
outsl
mov
mov
outsl
jmp
adc
xchg
sbb
jle
in
xchg
sbbb
pop
xor
jle
pop
mov
scas
aam
dec
daa
dec
mov
push
loop
fistpl
jp
sub
out
in
ja
popa
sbb
adc
fs
push
in
or
sbb
add
js
sub
lcall
jbe
mov
scas
jp
pushf
mov
ljmp
xor
sbb
stc
sub
sub
or
xchg
mov
orl
and
sti
mov
or
and
push
iret
ds
mov
and
insb
push
lret
divl
dec
xchg
pusha
test
lods
inc
and
and
aad
jecxz
pop
pop
scas
punpckhwd
sub
popf
xchg
mov
mov
push
xchg
adc
fisttps
dec
jecxz
inc
dec
shl
leave
cmp
shrl
test
jmp
mov
dec
dec
sub
sahf
iret
iret
int3
iret
pop
or
arpl
fcmovu
leave
ds
testl
loopne
adc
rcr
add
dec
inc
xor
jae
and
push
loopne
add
pop
decb
adc
cmp
sbb
xchg
dec
and
push
in
add
cmpsl
insl
jmp
jcxz
lret
adc
pusha
sbb
adc
jp
ja
jle
sub
jbe
mov
mov
add
scas
mov
fs
sub
mov
out
mov
xchg
pushf
and
jle
aam
daa
shl
push
mov
cmp
cmp
push
fbstp
aad
sarb
jae
sbb
mov
add
xchg
adc
sar
test
inc
push
cmc
push
pop
ljmp
dec
push
cltd
jns
popa
cmpl
and
jp
sarb
mov
xlat
jo
and
xlat
ss
cmpsl
inc
repz
mov
dec
arpl
hlt
cwtl
inc
lcall
fcom
fwait
stc
and
jp
dec
jno
inc
mov
push
pop
adc
out
sub
enter
lahf
insl
jge
add
cmp
sub
lods
add
xorb
push
add
ss
mov
pusha
adc
repz
inc
in
loope
xchg
mov
out
pop
cmpsb
daa
jg
inc
fdivrl
mov
push
push
lret
lock
jb
xchg
pop
daa
jae
lcall
pop
out
lcall
jns
xor
jg
test
jmp
jg
repnz
or
or
push
push
leave
movsl
test
fiadds
fistpll
notl
pusha
cli
sbb
flds
adc
adc
xor
jp
stos
bswap
mov
and
mov
add
into
ds
arpl
fcmove
cld
and
xlat
or
push
inc
lods
inc
add
nop
push
mov
xor
xor
lcall
inc
jecxz
ret
stos
inc
mov
das
cmp
sbb
xchg
adc
adc
sbb
mov
loop
in
and
insb
or
aam
aad
push
repz
and
mov
or
lcall
cmpsl
fsub
jne
dec
sub
push
mov
inc
xchg
xchg
dec
push
out
cmp
push
scas
dec
mov
inc
mov
into
test
addl
adc
or
leave
gs
out
pop
push
xchg
dec
cmpsl
mov
push
mov
inc
xor
fsubl
ret
or
dec
xlat
and
fmuls
stos
and
or
aam
out
cmp
dec
sub
pop
dec
das
xor
or
sbb
imul
pop
aas
fsubrl
inc
dec
mov
shr
out
inc
inc
mov
mov
popa
pusha
ucomiss
xchg
xor
sbb
hlt
shlb
mov
mov
shll
mov
cwtl
mov
stc
outsb
cmp
ljmp
xchg
xor
mov
jnp
insl
fbld
mov
xor
sbb
adc
xor
test
cmpsl
into
jns
sub
cmp
test
rorb
and
in
xor
adc
adc
sahf
inc
jl
stos
mov
sbb
push
mov
or
rcrb
jo
jno
cli
fnstcw
adc
push
push
fimuls
ffree
push
inc
popf
jmp
lret
sahf
aad
or
push
loopne
fnstsw
mov
push
decl
xchg
jp
jmp
insb
xchg
pop
call
mov
sbb
jp
adc
or
dec
sbb
push
push
cltd
xchg
mov
mov
mov
movsb
orb
and
or
mov
incb
mov
push
mov
push
push
rcrl
mov
ds
testl
dec
movsb
aad
fsubl
and
mov
adc
sub
pop
addb
out
add
push
inc
es
jmp
xor
jl
lahf
sahf
lea
sbb
sub
inc
out
shrb
cmp
jbe
rorb
test
imul
int3
push
rorl
fld
std
inc
pop
mov
cmp
scas
movsl
shll
sahf
sbb
pop
ds
das
jae
loop
enter
or
cmc
dec
aad
fucomi
or
in
ret
xor
push
dec
inc
frstor
add
fwait
stos
insb
or
jnp
dec
mov
cmc
scas
stc
inc
leave
int3
sbb
adc
inc
outsb
cmp
jne
loope
mov
fs
mov
lods
mov
or
pop
xchg
and
lahf
movsl
xchg
mov
lds
xor
insl
push
inc
leave
sub
gs
xchg
cmp
cmpl
sahf
mov
inc
push
popf
mov
push
cs
xchg
mov
dec
xor
aas
adc
test
decl
test
push
lods
loopne
imul
jle
icebp
imul
pop
movl
mov
jbe
jle
add
or
jl
sub
cmp
insl
sti
int3
lcall
mov
rclb
xchg
and
pop
imul
loopne
dec
push
aaa
sub
xor
push
fsincos
push
or
mov
ljmp
xchg
dec
push
push
dec
inc
scas
cli
data16
dec
push
in
pop
test
fwait
into
and
cwtl
jne
jo
xchg
je
or
dec
cli
cmp
mov
popf
pop
mov
test
xchg
or
mov
mov
cmpsb
clc
lea
iret
mov
out
rcl
cli
mov
out
pop
or
dec
push
pop
fsubl
divb
jmp
xchg
bound
jmp
jp
push
sahf
adc
dec
sub
in
je
shr
xor
inc
sahf
mov
cwtl
mov
fsubl
cmpsl
cmpsl
movsb
or
or
pop
jge
popf
and
ja
pushf
leave
insb
add
jbe
cmp
jge
fcmove
push
rcl
je
adc
lcall
sti
mov
bound
mov
aam
sbb
ret
out
repz
and
push
and
test
movsb
mov
or
nop
daa
mov
jno
in
es
xchg
out
mov
repz
push
cmp
je
push
jo,pt
lret
les
fcoms
push
mov
cmp
mov
dec
pop
fstpt
das
pusha
sub
jp
insl
mov
lock
orl
sub
test
popl
pop
and
sbb
lds
lea
ret
cmp
mov
inc
mov
xor
xor
stc
pop
andl
movsb
dec
mov
mov
jbe
fstpl
pop
xchg
cmp
fs
push
lahf
mov
cmc
cmp
lret
jbe
and
sbb
ds
lods
jmp
shrd
sbb
adcb
ds
sub
jne
or
sbb
cmpsl
stos
and
jle
fildl
imul
add
out
mov
lds
jne
test
sub
xchg
pushf
inc
loope
enter
imul
and
dec
dec
insl
xor
sbb
lahf
fsts
push
mov
and
jl
aad
adc
mov
jge
pop
cmp
adc
in
loope
sub
lret
test
faddl
daa
mov
stos
fdivr
mov
data16
push
ret
test
lret
imul
outsb
scas
ljmp
dec
push
push
into
pop
sub
ds
pop
or
adc
fstps
xchg
das
xchg
jb
jmp
add
out
enter
data16
insl
inc
nop
jns
cmpsb
cmc
ljmp
mov
jl
adc
lds
or
mov
jne
xchg
xlat
into
mov
enter
cmp
pop
pop
dec
insl
fistl
shlb
xor
sbb
jmp
pop
sub
lahf
lret
xchg
adc
test
pop
fildl
dec
hlt
sub
ljmp
and
pop
xchg
cmp
lret
jle
xchg
inc
adc
cmpsl
or
cwtl
push
mov
lret
mov
cmp
je
rolb
mov
mov
addl
dec
mov
xor
out
push
loopne
outsb
and
and
jl
loopne
dec
add
lock
cmp
je
dec
mov
int
popa
cmpsl
addr16
add
stc
dec
push
sub
insb
inc
push
loop
mov
jno
out
pop
adcl
mov
les
shl
cmp
push
addr16
lret
inc
repz
cli
pop
push
xor
hlt
jg
jae
or
dec
and
pop
popf
or
mov
into
xor
mov
xchg
movsb
mov
xchg
lahf
daa
push
daa
in
jmp
lea
enter
dec
lds
push
loope
inc
add
imul
scas
decl
test
mov
jbe
and
push
daa
xlat
sbb
jne
fwait
jecxz
xchg
pop
jge
shll
int3
xchg
dec
xor
pop
test
mov
pop
insl
cld
iret
popa
add
jge
xchg
pop
jg,pn
outsb
into
push
push
enter
popa
adc
jmp
popa
sbb
dec
xchg
jmp
mov
push
dec
es
stos
inc
xor
mov
dec
and
je
testb
jno
pop
fldcw
rcrb
push
mov
adc
pop
jo
push
xor
hlt
jae
inc
es
aam
int3
jl
fwait
xchg
add
int3
div
sub
cmpl
loope
imul
lods
pushf
pop
outsl
pop
arpl
ljmp
lahf
add
insb
mov
sub
adc
outsl
push
jno,pn
add
es
jno
jo
hlt
cmp
xchg
aad
loope
mov
sbb
mov
clc
cmp
mov
lahf
pop
roll
out
mov
pop
jbe
fiadds
int3
push
sub
push
fwait
out
xchg
push
into
jo
cmp
fstps
mov
xchg
out
mov
push
cltd
add
push
movsb
pop
jne
cmpsl
out
cs
pop
fisubs
push
arpl
and
shl
add
imul
mov
movsb
loope
lret
sbb
js
daa
cmpsb
pop
es
fldcw
fnstenv
int3
push
xor
adc
bound
or
mov
xor
fsubp
pop
cltd
in
xlat
cmc
addr16
mov
es
jmp
mov
insb
lea
lea
mov
push
call
jb
ficompl
pop
pop
sbb
lret
das
xor
pop
daa
push
xchg
xlat
ja
adc
mov
popa
add
add
jp
push
jno
jbe
sbb
push
sbb
mov
inc
jmp
dec
aam
orl
mov
dec
jg
sub
sbb
and
arpl
add
enter
andl
fucomi
inc
jp
icebp
cmp
mov
and
scas
fisttpll
fidivl
movsb
mov
or
jae
and
insb
iret
pop
stos
and
imul
xor
aam
add
xchg
xchg
outsb
cmp
sub
lds
cmpsb
popa
mov
push
stc
lods
mov
lret
mov
movsb
push
movl
scas
jp
sbb
je
push
test
lock
add
lds
sub
nop
xchg
pop
dec
mov
mov
fxch
push
arpl
sub
paddusw
xor
add
shrl
jmp
ret
loopne
sbb
out
sbb
arpl
add
lds
les
data16
xchg
jb
dec
mov
push
pop
insl
adc
in
mov
pop
movsb
xchg
dec
mov
in
test
xor
rolb
ds
fisttpl
ljmp
shlb
xchg
cmp
ds
inc
mov
jae
adc
mov
jecxz
sub
xchg
je
fnstcw
sbb
dec
jl
into
jns
xchg
cmp
mov
mov
inc
dec
repnz
push
ret
rorl
mov
in
testl
dec
addb
push
mov
gs
movsl
mulb
jnp
stos
repnz
jae
cmp
cmp
in
fsubs
or
arpl
imul
xchg
lock
pop
pushf
adc
mov
mov
adc
xor
sub
lock
cmc
jp
xchg
fwait
jp
scas
jp
mov
or
sbb
out
test
popa
mov
notl
loopne
pop
test
mov
sub
ds
fwait
inc
int
push
in
popl
pop
pop
xchg
mov
pop
enter
or
xchg
xor
adcb
aad
mov
int
sbb
cmp
sahf
sub
jo
ret
mov
arpl
arpl
dec
addr16
push
lret
jbe
dec
sbb
push
and
cmp
xchg
dec
arpl
pop
cmpsl
jmp
inc
divb
mov
icebp
cmp
dec
xchg
push
shrl
out
movsl
stos
mov
cwtl
jae
push
push
cmpb
ss
sub
lods
in
mov
jbe
xchg
repz
sub
cmp
loope
mov
aad
xor
push
fadds
adc
ja
mov
dec
movsl
call
pop
mov
and
shlb
test
pop
jnp
xchg
adc
leave
fimull
and
adc
mov
sti
test
sbb
mov
arpl
mov
pop
push
cmp
push
adc
test
clc
js
or
inc
add
cmpsb
cs
pop
dec
fs
mov
call
rcr
imul
aad
adcb
add
xchg
fistpl
das
xchg
mov
ds
xchg
cmp
sbb
mov
pop
insb
ret
movsl
pop
cmp
and
or
jmp
xchg
dec
push
inc
fcomps
inc
adc
cwtl
cmp
test
scas
sbb
orl
push
pop
xor
lret
adc
stos
stc
add
fcmove
int
addl
pop
lret
imul
out
mov
imul
mov
repnz
xor
mov
jecxz
and
cld
pop
jmp
xor
dec
lea
mov
sub
mov
adc
dec
or
mov
imul
movsb
dec
imul
push
push
lds
dec
add
sahf
sarb
out
fldt
xor
pushf
and
adc
inc
inc
shlb
js
fdivrl
fs
dec
in
addr16
in
ds
cmp
loop
push
hlt
xlat
pop
mov
mov
sbb
mov
mov
fistl
test
dec
iret
inc
inc
lods
or
mov
fistpl
scas
mov
sub
xor
add
sbb
or
ss
or
pop
xchg
dec
sarb
fwait
repz
out
sbb
hlt
ret
ret
jo
jle
out
jle
and
in
rcrl
ljmp
jg
bound
mov
adc
sub
data16
or
jle
inc
mov
push
cmp
test
dec
lods
fmuls
jbe
in
inc
imul
cwtl
out
lds
xchg
fists
mov
mov
dec
xchg
inc
add
pop
fsub
jl,pt
fistpl
sbb
cmp
adc
test
lods
shl
push
int3
inc
in
or
jns
inc
out
push
nop
xor
mov
lods
loope
mov
lods
icebp
mov
mov
test
pop
adc
sahf
mov
jb
cmp
adc
jb
sbb
dec
inc
xor
or
mov
notl
xchg
mov
mov
aaa
dec
mov
rcrl
and
scas
cwtl
sbb
ss
pop
push
jmp
and
xchg
and
fnstcw
testl
ljmp
add
cmp
iret
addr16
push
pushf
imul
sbb
stos
mov
xchg
imul
adc
out
mov
jnp
lds
jle
xchg
cmp
jmp
sbb
in
sarb
push
inc
sbb
inc
xlat
jp
jb
and
sbb
and
dec
mov
dec
mov
dec
xchg
xor
and
aad
data16
cli
mov
dec
into
mov
jnp
pop
push
adc
mov
cmc
sbbb
xchg
ss
push
add
cmpsb
in
pop
imul
or
mov
lret
xlat
into
sahf
or
faddp
and
scas
jbe
into
inc
pusha
cmpsb
in
imul
add
cmpsb
ret
mov
sbb
mov
fld
mov
jge
iret
push
ret
lea
aam
pop
dec
ljmp
std
or
mov
cmpl
mov
loope
call
ds
jmp
icebp
jo
pushf
pop
push
xchg
push
idiv
mov
jo
sti
icebp
add
push
jo
pop
mov
dec
xchg
push
dec
pushf
jecxz
shr
imul
xchg
lods
cmp
sub
xor
mov
pop
loopne
mov
test
xchg
jb
pop
testl
cmp
cmpsb
int3
shlb
negb
out
test
xchg
inc
dec
pop
xchg
mov
sti
sbb
xchg
mov
pop
fnstenv
xor
loopne
inc
mov
xchg
roll
xchg
push
cmp
add
mov
jge
fsubp
shrl
pushf
loopne
xlat
setge
int3
dec
rorb
jecxz
push
jle
add
xchg
cmp
xchg
sbb
xchg
pop
xchg
mov
pop
int3
in
jns
inc
mov
scas
mov
in
fldt
test
in
sbb
enter
mov
push
xchg
popf
jbe
rclb
jmp
mov
mul
data16
lret
ret
jb
pop
clc
inc
gs
ss
test
repz
mov
imul
cmp
test
es
imul
rcll
and
or
cmc
fdivs
mov
addr16
pop
inc
xchg
sbb
sub
shl
pop
jmp
dec
daa
and
xchg
cmp
jmp
rcrb
in
dec
adc
lods
inc
mov
stos
mov
lea
cs
or
jge
or
jb
push
push
int
jl
sbb
rcrb
push
sti
in
jns
adc
ljmp
mov
insl
or
test
sub
je
insl
subl
lods
mov
enter
push
int
loopne
iret
sub
jg
cmp
gs
mov
mov
insb
adc
test
jge
inc
clc
mov
adc
repnz
inc
inc
push
sub
inc
cwtl
ret
dec
sbb
les
idivb
shlb
sar
jge
add
push
mov
cmp
leave
movzbl
test
inc
mov
lods
mov
push
pusha
jbe
lds
mov
cmc
lret
mov
in
push
aas
test
add
push
cmp
int
pop
xchg
inc
push
jmp
gs
and
outsb
and
gs
fldcw
pop
adc
mov
mov
xor
cmp
stos
sub
xchg
xchg
js
and
sar
js
dec
dec
sahf
jle
mov
cmpsb
mov
mov
xor
in
dec
loope
fs
or
daa
jo
xor
enter
mov
push
scas
push
sti
xor
jae
ss
jbe
xchg
pop
cmpsb
pop
out
test
mov
mov
add
sbb
aaa
push
push
fstpt
mov
aas
cs
xor
add
sub
jmp
cmp
jae
push
pop
add
lea
adc
dec
orl
gs
xchg
adc
stos
imul
rcll
dec
mov
xchg
push
leave
pop
push
cld
cmp
test
lds
add
add
or
enter
stc
mov
and
inc
adc
outsl
mov
inc
jo
loop
in
std
add
das
popa
inc
cli
dec
dec
push
xchg
lahf
sub
mov
ljmp
rcll
jmp
repnz
pushf
dec
out
outsl
xchg
hlt
xchg
int3
bound
xor
and
mov
sub
in
jo
pop
fwait
or
mov
adc
jns
mov
loop
xchg
jbe
imul
std
jg
testb
ds
push
popf
push
lret
aaa
bound
xlat
xor
in
testl
lods
jb
mov
inc
mov
call
mov
adc
pop
pop
add
mov
adc
fcmovnbe
xor
pop
or
into
pushf
mov
and
inc
adc
xor
push
dec
lret
push
insb
subl
inc
xor
inc
mov
xor
fistps
aam
pop
add
aaa
and
sti
nop
or
lcall
shl
insl
mov
lea
sub
push
pusha
push
xor
jp
add
xor
es
ror
js
nop
xchg
ret
push
mov
and
jmp
clc
ds
mov
and
xor
ror
jg
divl
pop
bound
push
inc
mov
int
data16
ds
das
dec
push
dec
lahf
bound
out
out
mov
test
jae
jae
imul
adc
rcr
movsb
repnz
dec
aad
shr
inc
mov
adc
mov
xor
push
je
daa
lcall
aam
cmpsl
sub
sbb
pop
cmc
jle
xchg
stos
inc
add
jp
fs
dec
mov
push
imul
fs
pop
mov
fwait
add
dec
add
aas
stos
fs
add
sahf
out
push
ficoms
inc
sub
cmp
and
mov
dec
aad
jg
adc
xchg
nopl
pop
shlb
iret
fs
xchg
stc
cwtl
gs
fidivrs
mov
je
xchg
sbb
pop
add
xor
test
add
pop
adc
push
inc
xchg
sbb
ficompl
fildll
sub
mov
call
scas
pop
in
dec
xchg
popf
mov
mov
pop
inc
mov
in
mov
and
push
or
jmp
sub
pop
mov
fdivl
popa
pusha
std
and
cmp
and
add
cwtl
test
inc
dec
shrl
dec
jb
xchg
enter
addl
movsb
stc
aas
rcl
sbb
dec
xchg
dec
pop
gs
xor
cmp
inc
adc
cmc
sbb
into
jecxz
outsl
std
inc
mov
add
cmpl
jns
divl
push
dec
push
cmpsb
scas
adc
insb
mov
fcmovnbe
fstl
cmp
fs
xchg
shll
inc
cmp
xor
loope
test
stos
les
push
mov
mov
data16
outsb
test
rcrb
cmc
xchg
mov
xchg
mov
push
add
in
je
or
xchg
imul
insb
and
jb
adc
push
arpl
notl
inc
insb
lret
rorb
mov
loopne
insb
nop
ret
ficompl
lret
ja
push
jl
fistps
or
mov
ja
pop
mov
adcl
xor
inc
or
lods
not
or
push
push
repz
scas
mov
andb
addr16
outsb
pusha
inc
popa
mov
imul
rcll
clc
add
or
cmp
mov
lret
push
xchg
mov
xchg
loopne
es
fiadds
sub
xor
xor
add
adc
lcall
fucomi
pushl
mov
add
xlat
popa
in
ss
sub
out
js
mov
rcr
push
add
adc
mov
xor
out
roll
mov
shrl
mov
ja
dec
jno
sub
aad
popa
mov
in
aam
inc
out
cmp
cld
xor
push
rcrl
aad
test
ret
hlt
sbb
inc
inc
jle
sbb
cmp
pop
pop
pop
xchg
cld
dec
out
adc
outsl
xor
inc
push
mov
imul
fcmovu
lret
mov
test
shrb
icebp
es
push
aaa
mov
nop
lret
jmp
shll
cltd
sbb
pop
xchg
mov
fisubrs
js
pop
nop
mov
orl
int3
push
cmp
dec
pop
xchg
sbb
stos
sub
cwtl
or
or
and
or
pop
iret
scas
mov
jg
mov
jne
mov
push
ret
daa
stos
in
fidivl
inc
les
dec
stos
inc
jmp
push
sbbl
mov
or
pop
nop
jo
and
inc
pushf
test
aaa
arpl
push
or
cwtl
or
popf
aam
or
or
pop
cwtl
sub
mov
push
adc
cmp
cmp
inc
jns
push
out
jmp
dec
lcall
jno
jo,pt
ds
push
xchg
notl
in
insb
out
lea
mov
fisubs
cmpsl
cli
dec
add
cs
fildll
or
jmp
adc
inc
loope
fbld
push
stos
mov
add
popa
dec
pop
sti
stc
xorl
dec
ljmp
push
inc
xchg
mov
leave
sbb
mov
pop
divl
mov
jae
aad
arpl
adc
sbb
repnz
andb
inc
cmp
mov
mov
ret
xchg
adc
shl
sar
mov
filds
dec
jbe
lods
xor
mov
dec
out
pop
inc
or
cld
mov
sub
dec
push
add
push
cltd
les
pop
push
movsl
and
adcl
insl
jg
test
in
and
pop
mov
jnp
push
scas
cmp
add
adc
jge
insb
xchg
jl
sbb
insb
push
jmp
repnz
xorl
jmp
das
push
inc
sbb
or
jmp
jle
rcl
mov
adcb
jne
dec
shr
pop
inc
fdivrl
dec
je
cmp
dec
mov
jl
ja
jae
xor
orb
push
jne
sub
mov
push
fs
js
clc
test
fimull
xor
push
cld
in
sarl
cmp
test
mov
fs
lds
div
mov
lret
mov
pop
out
push
mov
xor
int3
repnz
push
push
sub
imul
hlt
stos
sub
stc
jecxz
out
inc
jge
repz
xor
popf
arpl
cmp
fwait
mov
xor
in
das
mov
fisttps
mov
clc
insb
loope
xor
sbb
aas
lcall
scas
push
cmp
loope
shlb
push
jo
adc
push
jecxz
data16
je
shrb
jmp
ret
sbb
imulb
fwait
push
sbb
inc
add
cmpsb
xchg
dec
pop
xorl
mov
dec
adc
insb
test
sub
scas
std
push
fisubl
idivb
or
gs
add
outsb
mov
and
xchg
add
xor
mov
pop
dec
shrl
inc
into
push
pop
mov
ljmp
mov
or
rol
mov
ret
mov
adc
pop
mov
popf
push
mov
das
lods
lcall
stos
or
and
mov
outsl
add
movsb
in
rorl
push
cmp
ret
sbb
cmp
and
fldenv
and
jbe
mov
fnstcw
stos
in
aad
cmp
xor
inc
gs
das
fisubs
jbe
sahf
jecxz
gs
ljmp
pop
stc
xchg
jl
sub
xor
inc
adc
repz
push
mov
cltd
pop
insb
jge
loope
pop
push
shlb
and
cmpb
jae
mov
and
mov
mov
test
xchg
loope
nopl
shrb
je
fistpl
andb
push
jge
jge
jecxz
aaa
mov
pop
adc
xor
test
xchg
and
test
adcl
or
insl
dec
dec
mov
jmp
add
test
ss
repnz
adc
enter
cmp
pop
pop
jl
mov
std
mov
sti
add
mov
adc
lock
pop
movsl
not
jo
and
fs
push
pushf
sub
cmpsl
lods
pusha
cmc
int
xchg
loopne
and
loop
mov
push
mov
xlat
dec
lea
jb
test
sbb
nop
cmp
lret
sub
aad
hlt
mov
out
jl
lcall
cmp
outsl
sub
add
mov
inc
aas
add
dec
loope
lods
dec
inc
jl
mov
in
mov
popf
and
mov
cwtl
outsl
cld
jle
fsts
arpl
mov
adc
mov
iret
scas
mov
mov
cltd
ss
dec
aas
mov
aaa
ss
mov
arpl
add
loope
dec
sbb
push
mov
mov
dec
cld
xor
in
or
ljmp
div
call
and
leave
je
xchg
les
mov
adc
bound
and
jo
add
inc
mov
lock
cmpsb
mov
mov
mov
push
repz
xor
sbb
or
pop
test
add
in
repz
test
ds
outsb
dec
loopne
jne
ss
and
cmpsb
ljmp
ret
rcr
push
leave
xchg
das
sbb
sbb
push
in
lods
mov
or
xchg
mov
addb
jge
jo
lods
mov
fnstenv
fcom
test
aam
insb
pop
movsb
je
sbb
mulb
stos
outsl
bound
shrb
sbb
movb
cmp
lock
cli
in
rolb
ret
sub
push
dec
test
xchg
mov
lods
inc
mov
out
in
cld
mov
icebp
xchg
pop
jae
inc
xor
and
fwait
xchg
test
or
push
or
divl
dec
leave
imul
pusha
lahf
icebp
orb
mov
adc
mov
repnz
bound
sahf
call
sbb
push
lcall
mov
enter
jp
sar
cmpb
jb
clc
pop
push
pop
push
pop
jmp
mov
push
xchg
stos
sarl
bound
mov
popa
fst
jnp
jecxz
xchg
cwtl
or
ja
js
xchg
jo
dec
ret
rorb
shlb
push
dec
rclb
pop
in
mov
xor
jns
dec
add
bound
shlb
repnz
fiadds
push
push
and
mov
daa
imul
sti
sbb
out
in
call
in
cmp
gs
into
lods
or
push
dec
push
loope
jg
stc
sub
sub
addr16
repz
xchg
movsl
pop
and
cmpsl
scas
int3
jne
add
xchg
lret
sbb
sbb
dec
fs
dec
sub
xchg
shufps
into
sbb
jnp
loope
mov
insb
mov
scas
mov
push
mov
cmpsb
test
popf
pop
push
sub
jb
imul
xchg
maskmovq
negl
clc
aad
cmp
and
add
in
bound
push
sbb
and
lds
test
mov
mov
addr16
stos
pop
mov
js
fs
sbb
xchg
cmpsb
pop
dec
jp
std
sbb
and
mov
dec
mov
push
cmp
jge
icebp
add
or
cmp
mov
test
jmp
lods
es
mov
xchg
fcomip
pop
std
sbb
lds
sub
out
popa
cmp
xchg
shrl
inc
fmuls
loop
dec
loop
imul
cmp
add
fwait
inc
jge
cmp
cmp
insb
sub
pop
push
outsl
rcrl
cmp
mov
dec
lods
dec
enter
into
dec
sbb
or
iret
mov
jp
mov
jmp
scas
mov
cmp
test
fwait
pop
pusha
movsl
push
mov
xor
sbb
cwtl
jb
scas
pop
aam
mov
stos
out
add
jp
push
pop
mov
add
push
jp
cmp
mov
push
fs
outsl
mov
mov
xor
sbb
movsl
repnz
das
je
mov
lret
mov
in
cmc
das
jns
jmp
sbb
aam
inc
sahf
add
aas
add
jo
int
ret
mov
leave
stos
cmc
jmp
jmp
movsl
mov
aam
push
rol
lods
push
adc
jne
repnz
mov
pop
ljmp
dec
mov
xor
push
in
or
in
pop
inc
xchg
xor
pop
sub
sub
je
dec
xor
or
ret
cmp
movsb
jge
or
lea
aam
shll
lahf
popa
sarb
push
lock
mov
js
push
mov
enter
data16
mov
movsl
aas
bound
fistpll
sahf
add
xor
out
mov
mov
rcll
rorl
inc
sbb
mov
icebp
lock
push
iret
jmp
xchg
mov
xor
rorb
and
xor
aad
or
in
push
inc
cmp
fsubp
mov
jle
rcrb
popf
xchg
je
movsl
xor
dec
cmp
nop
ljmp
jle
test
mov
out
js
sbb
jne
rcrb
fs
aas
mov
jo
sub
imul
mov
mov
push
xor
mov
std
fidivrs
adc
pusha
shlb
add
jl
inc
jle
push
ds
ret
idivb
into
aas
jmp
lahf
or
mov
and
jnp
xchg
pop
inc
iret
mov
mov
les
rorl
hlt
xor
rol
scas
ss
stos
fucomi
movsl
enter
ret
int
sbb
stos
pop
jno
shlb
or
push
mov
out
imul
jmp
pop
sbb
mov
pop
pusha
into
imul
out
psadbw
dec
mov
sub
es
out
ljmp
orl
adc
add
ret
fsubs
mov
mov
popa
pop
enter
das
decl
mov
mull
sahf
jmp
gs
ret
cwtl
std
and
dec
pop
mov
std
add
sub
fucom
and
mov
pop
fsubrl
inc
dec
cmp
fisubs
jns
vmread
pop
jle
sbb
and
pushf
into
push
mov
mulb
add
pop
iret
dec
fsub
and
jns
xor
aam
sub
xor
shrl
clc
mov
into
or
jns
movsl
js
imul
mov
in
mul
cli
cld
mov
in
in
push
iret
and
add
jae
lds
fmuls
je
push
cmc
fsubrs
in
mov
dec
inc
mov
xchg
sub
lock
dec
mov
ljmp
fstpt
xchg
shll
mov
push
mov
sarl
mov
mov
js
mov
add
ljmp
sub
xlat
jecxz
adc
out
imul
mov
imul
dec
push
inc
pusha
cltd
and
push
leave
mov
mov
xchg
jl
mov
js
dec
inc
jmp
mov
mov
ljmp
jle
mov
aas
xchg
lret
adc
sti
loopne
cmpb
mov
enter
sub
dec
or
movsl
out
xchg
dec
adc
popa
insl
add
ror
mov
into
out
movsl
lahf
sub
push
addb
or
push
mov
jl
daa
cwtl
pop
insl
push
or
inc
lret
das
adc
dec
xchg
push
inc
xor
xchg
fwait
xchg
scas
or
xchg
fwait
cmp
xor
pop
fs
jno
or
ljmp
sub
mov
xor
xchg
push
js
and
data16
lods
andl
and
xor
hlt
mov
sbb
hlt
imul
sbb
fnstenv
mov
jp
lcall
pop
xchg
xor
pop
jbe
hlt
or
arpl
mov
mov
mov
repnz
rcl
inc
daa
mov
sub
xchg
js
aas
and
test
insb
mov
cli
addr16
adc
iret
sub
xchg
push
cld
test
sahf
inc
mov
test
arpl
sbb
push
lock
jbe
xchg
inc
iret
insb
sbb
loop
out
roll
or
push
lods
xchg
adc
mov
push
ds
dec
mov
jne
mov
add
lahf
outsl
push
in
push
out
or
xchg
adc
dec
xor
sub
jle
addl
adc
cmp
ja
mov
inc
jno
dec
pop
leave
xor
rcrl
nop
sbb
inc
sar
or
lock
dec
push
iret
mov
mov
popl
mov
pusha
int
scas
mov
pop
mov
push
lods
ja
jmp
jle
mov
dec
xor
inc
out
dec
stc
imul
pop
rclb
pop
and
xchg
sahf
sub
fwait
sub
jo
jl
and
mov
pushf
cmp
xor
imul
push
push
mov
stos
jnp
or
mov
push
add
shll
movsl
adc
sahf
bound
shrb
mov
jo
popf
pushf
cltd
ljmp
dec
mov
jns
out
push
mov
adc
cmp
outsl
xchg
mov
adc
loop
fbstp
jbe
js
and
xchg
scas
add
mov
mov
sub
sarl
imul
cmpb
push
pop
bound
popf
jmp
xor
pop
push
lret
mov
mov
xorb
rcrb
inc
jbe
sub
lds
es
xor
pop
dec
mov
out
sbb
sbbb
mov
nop
shll
dec
cmp
xchg
loop
jp
fldt
jp
or
or
xchg
subl
in
imul
xor
adc
shl
aad
scas
adc
push
aas
or
sub
sahf
and
fs
xor
sbb
xchg
inc
insl
fdivl
cwtl
stos
rcr
inc
aaa
jl
mov
fdivl
xor
sub
dec
dec
mov
push
add
add
mov
rcrl
push
fistps
lret
inc
xchg
mov
les
sub
push
out
mov
jnp
dec
repz
cli
mov
test
or
hlt
aad
xor
ficomps
mov
sub
mov
push
jl
mov
scas
jnp
dec
and
rcrl
push
call
das
leave
pop
add
jo
mov
pushf
jle
in
jae
std
inc
adc
icebp
inc
adc
inc
sub
or
xchg
je
outsb
mov
js
cmp
dec
or
pusha
mov
andb
stos
fnstenv
shll
jge
mov
inc
daa
pop
xchg
cmp
mov
insl
es
iret
es
subl
mov
fcomip
int3
lea
adc
mov
in
je
push
lea
push
inc
mov
testb
imul
scas
sub
xchg
sti
jecxz
leave
icebp
add
out
outsl
bound
lahf
pop
inc
push
outsb
mov
push
ljmp
add
jp
addb
dec
movsl
fbld
jno
adc
lea
and
mov
imul
or
jns
in
aas
xor
std
orb
push
daa
jnp
sub
mov
loopne
mov
sbb
mov
psubusw
sbb
stos
mov
mov
sub
mov
mov
cmc
and
fs
inc
flds
in
stc
dec
movsl
mov
stos
movaps
lock
or
lock
dec
ja
insl
aas
push
mov
popa
jle
add
stos
push
sub
adc
sub
fwait
xor
mov
loope
jmp
icebp
ret
or
cmp
cmpsl
std
sbb
mov
stos
cmpsl
popa
lret
mov
fs
jne
inc
in
or
repz
adc
and
mov
inc
xchg
push
sub
mov
dec
popf
enter
ljmp
jmp
sbb
sbb
movsb
mov
in
xchg
add
jne
lea
cs
mov
daa
jbe
adc
ret
andl
dec
enter
dec
cmp
xor
fnstsw
test
xlat
outsl
cmp
sub
cmp
lcall
mov
repnz
xchg
xchg
ret
adc
adcl
push
fsub
pop
pop
xchg
mov
add
mov
jbe
mov
mov
js,pt
adcl
sbb
lret
test
dec
and
popa
pop
lret
adc
lock
cli
fdivrs
jne
mov
ret
loop
cmp
rcrb
xchg
xor
repnz
inc
mov
imul
jge
insb
ret
mov
test
ffree
lods
mov
xchg
mov
adc
push
jne
cmp
movsl
lea
jo
mov
jmp
sub
mov
mov
lea
pop
pop
xchg
or
daa
push
aad
test
pop
jb
mov
jge
jno
adc
jb
xchg
pop
popa
xchg
or
mov
das
pop
jp
divl
push
sbb
jmp
inc
testb
rolb
push
test
out
add
das
inc
sbb
sbb
lcall
sti
cs
ss
pop
mov
xor
sar
push
cmp
xor
inc
aam
iret
sub
stc
dec
sar
and
inc
fisubrs
movsb
or
mov
popf
xchg
mov
jl
ror
loope
xchg
nop
pop
xor
in
push
xchg
pop
pushf
mov
pop
mov
rorl
lods
jno
dec
or
xchg
inc
jle
mov
push
into
xor
pop
cltd
jp
insl
cmp
jno
inc
or
daa
scas
adc
adc
movsb
outsl
insl
xor
stos
addr16
mov
int
fnsave
and
gs
ljmp
data16
xchg
xor
out
lds
mov
adc
std
fsubl
jle
push
mov
inc
sbb
or
lret
cwtl
stos
and
loope
cmc
pop
cmp
jns
fisttpl
ds
or
pop
adc
cmpl
fdivr
dec
lcall
cmc
sub
test
nop
jno
or
hlt
inc
mov
mov
dec
fs
jns
lock
mov
xlat
jne
shll
fcmovb
mov
ficoml
dec
cs
aam
stc
das
pop
mov
add
pop
mov
jo
iret
hlt
test
fiaddl
xchg
sbb
aam
inc
sbb
stos
pop
test
pop
dec
mov
sbb
clc
adc
xchg
xor
xchg
mov
jnp
dec
icebp
add
cmc
mov
cmpsb
or
pop
std
xchg
lods
pop
adc
sub
dec
xchg
jno
xchg
jg
mov
popf
aaa
dec
iret
mov
je
arpl
fwait
sbb
or
and
and
popf
ret
js
sbb
pusha
fadd
mov
inc
pop
scas
outsb
or
andb
inc
mov
push
lods
into
nop
xor
ds
shll
jbe
push
imul
jae,pn
outsl
dec
xchg
lcall
sti
sub
daa
out
sub
inc
inc
pushf
mov
xor
jne
pop
inc
lcall
add
inc
xor
sti
sub
mov
push
cmpsl
jb
mov
pop
pop
jp
aas
test
dec
loope
push
dec
nop
repnz
je
shll
xlat
ljmp
hlt
in
nop
pop
popf
xor
adc
fwait
inc
test
lcall
and
mov
out
push
imul
inc
orl
jns
mov
adc
mov
std
mov
in
scas
mov
mov
inc
xor
cli
inc
lods
ljmp
dec
cmpsl
dec
nop
cmpsb
pushf
push
frstor
push
push
dec
rclb
xor
cmp
setne
in
imul
jmp
sbb
mov
loop
sbb
xchg
pop
lods
mov
push
xchg
fimull
test
aad
xchg
or
add
pop
pop
push
std
daa
out
in
rolb
sbb
imul
test
sub
inc
in
or
fs
mov
imul
or
cmpsb
mov
fstpl
jmp
addb
adc
cwtl
xchg
test
outsb
int
lcall
out
mov
sbb
imul
shr
fs
lds
je
xchg
lods
test
push
cmp
adc
shlb
sahf
lcall
jo
mov
pushf
jnp,pn
idivb
mov
jae
cmp
mov
lock
js
xor
pop
imull
clc
int
jp
sub
mov
cltd
repz
int
cmp
stos
fwait
ja
jbe
hlt
ret
ja
fimull
push
aaa
push
fadds
lcall
jmp
dec
jbe
test
pushl
add
mov
sbb
subb
pop
xchg
xchg
in
movsl
in
jo
pop
sub
ljmp
mov
fisubl
sub
mov
ljmp
jo
dec
mov
insl
out
sub
ja
roll
xchg
lods
aad
or
and
inc
dec
mov
mov
sti
push
movsb
subb
xchg
in
xchg
cvtps2pd
and
sbb
das
and
adc
jne
push
sti
add
out
push
dec
dec
push
mov
out
and
push
ljmp
daa
jp
sub
xchg
jp
or
rcrl
xchg
pop
jns
and
aaa
shl
jb
hlt
inc
mov
push
xorl
stos
scas
or
call
mov
std
adc
in
addr16
fidivl
xchg
sub
insl
movsb
xor
mov
mov
mov
or
pop
push
fimull
cs
in
outsb
cwtl
into
ficoms
cmp
repz
out
cmovbe
jb
and
ss
aaa
add
and
bound
fildll
out
loope
mov
mov
add
dec
lds
es
add
imul
into
out
mov
or
pushf
aad
jo
stc
sub
push
fmulp
lds
push
leave
scas
sbb
push
lret
clc
add
lock
and
push
shll
cmp
in
mov
adc
sahf
push
test
mov
mov
addr16
int3
cmpsl
sub
es
ficomps
mov
loope
test
in
clc
push
gs
imul
mov
or
into
add
add
imul
and
inc
or
dec
cmp
sbb
std
mov
dec
fwait
jp
cld
mov
int
cmp
sbb
dec
push
iret
jmp
jl
dec
push
andl
les
jo
mov
pop
loopne
xchg
cmpsb
xlat
mov
jl
mov
jb
pop
mov
adc
enter
rorb
into
jl
lcall
cmpsl
xlat
adc
aam
fcmovu
jae
lock
clc
dec
mov
sahf
sub
ja
dec
mul
xchg
nop
sar
out
notl
xor
lea
xchg
repz
jne
cmp
pop
lea
mov
test
ja
pop
stc
cld
add
js
xchg
jecxz
push
xor
xchg
jnp
jmp
mov
out
xchg
iret
pushf
mov
imull
xor
xor
arpl
test
jl
mov
movsb
inc
dec
and
sub
scas
xor
push
xchg
lahf
daa
out
aam
andl
xchg
xchg
aad
jle
inc
xor
jne
mov
sar
mov
test
and
out
sub
out
cwtl
pop
inc
dec
clc
sbb
dec
cmp
sub
pop
or
push
xchg
cmpsb
sbb
sbb
cmp
out
ss
dec
adc
outsl
push
push
jo
stos
xor
sbb
out
icebp
notb
fld
ret
xor
add
shlb
test
pop
pop
movsb
mov
scas
imul
xor
rcll
leave
std
cmpsb
dec
sbb
inc
das
scas
and
xchg
xchg
cmp
stos
xor
and
push
cmp
repz
cmp
fistpll
jge
cli
xor
dec
je
popf
loopne
cmpb
and
xor
mov
sti
insb
daa
adc
add
jns
xor
pushf
sahf
inc
inc
and
pushf
adc
je
pop
lcall
mov
add
stos
call
shrl
jae
mov
push
or
dec
pop
sub
cmp
xchg
jp
addr16
fwait
mov
icebp
fwait
sbb
push
imul
cmp
mov
movsb
sbb
add
mov
aas
mov
ljmp
inc
mov
xor
hlt
push
xor
lock
fs
xor
js
and
mov
int
push
jl
pop
in
aam
lods
mov
adc
or
mov
int3
cmpsb
clc
jbe
xor
daa
mov
push
ljmp
sub
addl
push
repz
fstps
inc
xor
sub
int3
insl
outsb
xlat
xchg
out
sbb
into
xlat
lea
repnz
jne
jnp
push
adc
mov
lods
sarb
mov
lret
rcr
dec
cs
add
add
popa
aas
or
and
pushf
shrl
cmp
mov
addr16
pop
mov
xor
out
sub
sbb
mov
push
xor
stc
divl
test
pop
cmpsl
repz
out
pusha
adc
insl
jne
pusha
pop
mull
xchg
clc
rolb
cli
mov
aas
cmc
jp
and
push
sub
push
les
andl
xchg
cs
notl
ret
pusha
pop
sub
scas
push
and
jmp
mov
jo
mov
pop
mov
xor
outsl
mov
cmp
loopne
repnz
out
jg
dec
test
xchg
pop
int
cmp
mov
icebp
push
jns
rcr
mov
int3
stos
adc
adc
sbb
sbb
sub
cmp
adc
hlt
in
mov
sub
mov
add
inc
cwtl
imul
std
push
fldcw
adc
enter
imul
and
out
adc
fwait
mov
add
sub
fwait
mov
loopne
push
and
xchg
jg
addl
jl
mov
push
into
int3
mov
cmp
push
push
push
xchg
push
sub
cwtl
pop
scas
ja
movsb
push
adc
outsl
jbe
inc
cmpb
cmp
aaa
leave
jne
lret
push
xor
mov
mov
out
ljmp
sbb
and
adc
xchg
fistl
in
xchg
or
in
dec
cmp
ja
jmp
inc
inc
xor
roll
in
adc
jle
lret
and
jne
out
repz
cs
out
out
out
sub
mov
movsl
jno
jns
cwtl
outsl
add
daa
pop
out
adc
cmp
or
jmp
mov
popa
pop
call
mov
stos
rcll
ss
cmpsl
data16
fidivrl
ficoms
push
or
push
dec
sbb
loopne
jb
mov
mov
push
aad
mov
in
add
fs
sub
test
inc
jge
mov
xchg
int
mov
jge
ja
push
xchg
push
lahf
xor
adc
fst
xor
loope
cmpsl
xchg
xor
fcoml
add
mov
fld
adcl
rolb
jecxz
subl
cmp
cltd
fcmovnbe
inc
ds
imul
inc
pop
push
scas
push
mov
inc
cs
jecxz
pop
out
push
fscale
sub
fldl
cltd
test
xchg
inc
ret
and
push
adcb
into
pop
xchg
test
shll
push
iret
dec
xor
mov
push
fcoms
shr
push
fs
inc
adc
pop
rclb
testb
inc
stc
add
fwait
mov
mov
mov
sbb
ljmp
xchg
mov
cmpsb
cmc
pop
fwait
mov
adc
es
dec
cld
insl
aad
out
inc
std
int3
jb
aaa
rol
mov
mov
je
in
and
mov
pop
dec
sub
cmp
outsb
add
repnz
outsl
pop
xchg
mov
insl
idivl
daa
sub
xchg
imulb
outsl
push
iret
repnz
inc
adc
sub
mov
xchg
pusha
daa
aas
mov
dec
inc
mov
imul
sbb
daa
leave
adc
jae
sbb
adc
in
shrl
movsb
insb
shr
sub
rcr
inc
lret
loopne
inc
stos
jmp
pop
call
or
jnp
sbbl
nop
xor
pushf
jle
push
pop
iret
jp
adc
mov
xchg
push
cmpsl
inc
mov
adc
push
mov
mov
in
sbb
xor
bnd
pop
mov
gs
stos
dec
mov
decb
outsb
inc
cmp
push
push
hlt
mov
hlt
pop
loope
dec
sbb
jne
aaa
jmp
xor
dec
leave
outsb
and
push
xchg
adc
das
and
movsl
mov
scas
mov
cmpsb
push
xchg
ds
mov
xchg
hlt
and
push
mov
ss
shl
xchg
arpl
out
sahf
pop
fstpt
cmp
addr16
es
jmp
pusha
and
imul
or
cmp
movsl
mov
icebp
das
imul
ljmp
xchg
imul
push
push
jae
call
sbb
pop
jns
cmpsb
jne
mov
lahf
test
adc
cs
adc
fwait
test
push
mov
sub
inc
mov
in
dec
jns
jo
push
stos
les
subl
fbstp
loope
xchg
xor
sub
mov
idivb
popf
push
jp
cli
sub
leave
sbb
pop
in
and
fisubl
ret
xor
ljmp
cmp
fst
sbb
mov
inc
inc
pop
rclb
push
mov
pushf
dec
fsubl
jmp
mov
jmp
rep
rcrl
mov
pop
rclb
xlat
xor
cmc
pop
ret
movsl
insl
cmpsb
mov
sub
shl
and
cli
mov
push
xor
popf
mov
outsb
cwtl
dec
adc
xor
xor
out
dec
divl
test
flds
fstl
fcomip
lea
sbb
sbb
iret
sub
pop
push
mov
push
in
push
shll
stos
jbe
jecxz
int3
xchg
ljmp
lds
into
out
push
xchg
xchg
sub
inc
dec
aaa
cmp
jno
mov
filds
add
pop
jg
sbb
cli
popa
mov
jnp
ljmp
fstps
out
nop
pop
test
and
stc
les
cmp
xchg
mov
lahf
clc
les
push
inc
leave
mov
mov
push
dec
mov
push
or
in
loope
mov
imul
jl
add
sub
loopne
pop
mov
xchg
test
test
lods
shrl
add
sti
sahf
cs
cmp
into
sti
fwait
inc
xchg
sbbl
stos
fisttps
mov
mov
fbld
lahf
xor
lahf
and
and
les
jns
xor
std
int3
adc
test
add
cmpsb
jbe
les
mov
imul
jg
in
or
mov
xchg
into
les
push
pop
adc
or
outsl
jb
out
jb
push
pop
jb
arpl
clc
mov
cltd
xchg
addr16
test
adc
jo
out
sub
push
idivl
cmp
insb
mov
cltd
movsb
dec
add
or
ret
mov
xchg
push
stc
addb
xor
shll
fucomp
mov
out
pop
mov
xor
imul
or
cmc
iret
jo
jnp
mov
or
das
dec
inc
cmp
mov
repnz
or
sbb
mov
ds
xor
enter
pop
adc
jo
or
cmp
sti
cmp
sarb
push
cmp
adc
std
inc
movzbl
fwait
shlb
add
or
dec
dec
pop
fisttpll
jne
stos
test
cltd
mov
pushf
sub
fs
push
mov
fnstcw
add
scas
xchg
fnstsw
aad
faddl
adcl
mov
push
jmp
mov
xchg
pop
push
das
and
xchg
push
leave
pop
or
xor
cmp
int3
in
les
aaa
int3
imul
ljmp
mov
jge
xadd
pop
fidivrs
popf
cwtl
inc
daa
cmp
ror
mov
push
inc
xlat
cmpsl
mov
jae
rolb
mov
mov
popf
mov
xchg
int3
or
lea
not
pop
pop
sbb
pop
repnz
sbb
cmpsl
sti
mov
fnstenv
fdivl
das
sbb
fldcw
mov
lods
dec
push
cmp
fisubl
rcr
ljmp
adcb
fsubr
loope
lods
push
inc
cmp
iret
js
aas
dec
add
add
inc
enter
icebp
add
rcl
out
xor
iret
out
fnsave
inc
shlb
push
mov
jecxz
fstps
adc
fwait
mul
mov
lcall
clc
dec
sub
repnz
leave
jecxz
or
and
inc
inc
and
outsb
outsb
sbb
das
out
sahf
xchg
push
push
rcrl
sahf
jl
ret
inc
lret
sbb
nop
je
or
mov
and
or
lcall
in
adc
lods
xor
ds
or
pusha
emms
lock
mov
into
stos
mov
loopne
jnp
pop
scas
mov
pop
je
lret
mov
sub
mov
push
lds
sbb
into
mov
or
insb
dec
cli
sub
push
ret
arpl
test
movsl
inc
cli
outsb
mov
pushf
push
pushf
mov
jge
jb
dec
cltd
ja
jno
jae
mov
xor
cltd
sbb
movsl
mov
push
test
lahf
ficomps
sbb
adc
pushf
dec
aad
dec
sub
sub
pop
push
jno
shlb
aad
xchg
leave
aam
jmp
pop
inc
xchg
addr16
jae
push
in
mov
pop
dec
test
xor
push
lds
inc
cmpsl
dec
daa
xchg
repz
es
nop
insb
int3
mov
pop
adc
sbb
xchg
clc
cmp
mov
clc
mov
loope
push
repz
sbb
ret
dec
popf
jae
clc
mov
jl
sti
int3
in
leave
ljmp
mov
sbb
testl
out
std
in
jmp
outsb
pop
lret
mov
imul
mov
pop
mov
dec
in
jne
lret
or
add
imul
push
lods
int
mov
dec
and
push
fs
in
and
jno
mov
imul
sub
mov
push
dec
ds
cmp
adc
scas
pushf
filds
movsl
repnz
mov
stos
push
xchg
pop
subl
or
movl
xchg
ret
gs
inc
call
arpl
xor
and
loop
out
fidivrs
nop
punpckhdq
fs
jo
nop
aas
adc
jmp
insl
adc
or
xchg
mov
mov
xor
jmp
leave
pop
mull
mov
insb
lods
xchg
stos
pop
mov
ror
outsb
jne
jecxz
pop
lret
cmp
dec
jns
shlb
dec
jl
nopl
int
ja
outsb
xchg
popa
inc
push
dec
out
cmp
jno
cmpsl
add
js
jbe
bnd
jbe
movsl
push
add
ljmp
vpaddsb
inc
sub
jns
xor
orl
add
icebp
stos
mov
out
out
popa
inc
and
test
es
stos
mov
jle
push
shlb
xchg
ljmp
xchg
dec
rorl
mov
mov
fwait
or
and
mov
and
jge
mov
jmp
out
push
jl
ret
mov
pop
sbb
cmp
sti
push
jae
lret
jecxz
fwait
jg
sub
jbe
stos
xchg
xchg
cwtl
scas
nop
sbb
notl
cli
jp
push
leave
movsb
mov
test
test
cmc
es
xlat
or
xor
adc
call
mov
int3
or
dec
cmp
push
or
daa
mov
xchg
hlt
inc
xor
insb
cs
or
mov
imul
mov
xor
sub
adc
scas
mov
sti
sub
test
jno
xor
cli
and
fisubs
fistl
pop
bound
push
mov
insl
shrl
cwtl
cmp
rorb
mov
jne
xor
fwait
xchg
pop
sub
or
mov
dec
pop
xchg
movaps
fidivl
mov
lds
and
adc
sarl
rorb
mov
jp
dec
sub
cmpsl
push
mov
rcrb
pop
dec
jecxz
xchg
lcall
popa
das
fs
and
je
leave
lods
xchg
push
jne
and
test
daa
cld
inc
sti
sub
xor
pop
xor
sub
inc
lods
mov
adc
xor
test
pop
mov
sbb
nop
mov
das
push
inc
das
push
dec
loope
hlt
popf
xchg
movsl
jnp
incl
sbb
fwait
xchg
inc
int3
jl
dec
cli
cmp
movsb
sbb
mov
xchg
repnz
sbb
add
mov
and
xchg
jns
mov
inc
lock
test
xor
jno
pop
loop
cltd
mov
xorb
cmp
imul
mov
xor
sarb
mov
xchg
test
cwtl
cmc
out
bound
in
pushf
fsubrp
fwait
rol
adc
cmpsl
andl
push
mov
mov
inc
sbb
xor
sub
lds
pop
mov
movsl
lcall
sbb
outsl
inc
mov
pop
add
mov
or
pop
xchg
sub
test
mov
push
dec
pop
dec
xor
inc
push
push
jb
xor
cmp
outsl
nop
mov
pushf
inc
sbbl
jb
fimull
sbb
xchg
sbb
pop
push
negl
pop
mov
insl
ljmp
mov
out
mov
sahf
mov
out
inc
cmpsb
andb
sbb
fs
jnp
jle
loope
scas
pop
ss
jge
push
push
movb
icebp
inc
icebp
ljmp
add
sub
dec
lret
mov
mov
sbb
push
push
dec
mov
or
ja
mov
push
xchg
push
in
adc
and
shll
vpmacssdd
scas
xor
push
mov
out
dec
mov
rolb
mov
ja
fldcw
loope
rcrb
dec
sti
cmp
cmp
fisubl
push
xchg
fisubs
cltd
fwait
out
add
ja
into
jl
jae
fisubs
mov
sti
mov
cwtl
daa
add
notb
popa
push
jmp
cld
test
std
xchg
bnd
pusha
scas
leave
lret
icebp
push
fs
adc
rolb
adc
mov
popf
ucomiss
and
cmpsw
and
fadd
or
mov
and
jmp
inc
or
sub
loope
into
movsl
lea
and
push
cmp
iret
mov
adc
mov
scas
adc
lret
cwtl
or
into
fcoms
push
cmp
dec
push
mov
lea
incl
xlat
shr
add
outsl
xor
lods
mov
xor
jle
mov
fadds
adc
sbb
js
mov
or
ret
test
mov
mov
fwait
es
gs
rclb
dec
andb
pop
cs
xor
xor
dec
push
aaa
fwait
sbb
jne
lahf
loop
outsl
decb
fnstsw
cmp
sub
sub
test
sbb
xchg
sub
stos
sbb
jmp
dec
mov
nop
cwtl
adc
sbb
add
imul
jne
out
out
stc
popa
dec
jmp
stos
les
leave
jo
mull
push
sbb
and
loopne
xlat
jbe
test
mov
aaa
push
dec
pop
pop
xor
testl
xchg
enter
lret
pushl
pop
xor
push
sahf
jle
shlb
lods
dec
loop
daa
xor
inc
repnz
cmpsb
sbb
sub
dec
cmp
ljmp
out
xchg
in
test
enter
push
xchg
or
sahf
jge
cli
add
and
jecxz
pop
xchg
adcb
add
or
cmc
push
mov
in
sub
pop
inc
test
push
xlat
insb
cmp
sbb
fwait
stc
dec
sbb
jb
stc
out
xchg
push
add
incl
xor
sbb
or
subb
mov
cmp
test
pop
cmovg
mov
adc
movsb
xor
out
clc
inc
je
xchg
or
fadd
xor
pop
and
outsb
fdiv
mov
aas
xor
pop
pop
cmc
sahf
cmp
ljmp
pop
xor
out
mov
out
addl
test
dec
addr16
data16
adc
nop
mov
lcall
shr
test
and
pusha
aas
mov
adc
fidivs
cmc
nop
fbld
mov
and
roll
fs
test
ds
fldt
jg
movsl
mov
mov
in
dec
es
dec
pop
cmpsl
and
fldl
mov
orps
cmp
pop
mov
ds
mov
push
push
pop
jecxz
repz
imul
cld
mov
cmp
push
mov
fldl2e
mov
cld
add
in
pop
roll
sbb
cwtd
scas
pop
xlat
inc
scas
push
iret
mov
cltd
push
mov
xchg
andb
psubb
out
cwtl
adc
lcall
orb
pop
sbbb
and
xor
sub
aam
inc
cmpsl
jg
in
cs
lea
repnz
cmp
loope
adc
or
ljmp
jmp
mov
testl
leave
les
lea
aam
fstps
mov
mov
rorb
jne
into
pop
movsb
pop
stc
pop
dec
sarl
aad
std
or
sbb
sub
pop
int
xor
std
shrb
imul
push
je
outsl
mov
jno
subb
incb
and
test
aaa
leave
daa
add
pop
in
or
sub
jnp
cmc
fnstenv
mov
lret
fdiv
cmpsl
fiadds
and
outsb
sbb
outsl
mov
enter
push
xchg
jns
les
aam
adc
push
les
aam
int3
sbb
in
lods
inc
push
add
adc
push
lret
push
add
sbb
test
xor
scas
add
push
jo
fucom
mov
mov
les
adc
test
std
mov
mov
sbb
push
movsl
xlat
arpl
sbb
or
dec
js
and
testl
lock
push
test
push
mulb
dec
shl
sub
inc
lcall
pop
mov
repnz
arpl
jl
ret
loopne
cmp
daa
jmp
scas
dec
mov
lcall
sti
pop
sbb
adc
std
int
sub
mov
je
cmp
dec
incl
sbb
push
sbb
pop
pop
stos
and
pusha
dec
inc
cmp
xor
rcrb
fadds
jb
jg
sbb
jbe
repnz
xchg
int
movsl
imul
xchg
cwtl
popf
pop
jg
xchg
andl
jge
add
sbb
sub
ret
push
pop
shll
jnp
and
int
push
fisubrl
xbegin
xor
lods
mov
cld
dec
jnp
mov
pushf
in
in
sti
push
jmp
bound
fsubl
rep
sub
mov
and
xor
fbstp
into
inc
dec
push
xchg
jle
pop
cld
mov
cli
icebp
pop
and
stc
jl
xchg
pop
outsb
loopne
loop
test
or
mov
fwait
sti
movsb
and
inc
mov
mov
mov
imul
dec
pop
add
pop
neg
iret
rorb
cmp
sbb
add
out
sbb
nop
sahf
adcl
les
imul
pop
icebp
xchg
inc
iret
test
add
dec
jge
lret
ret
pop
or
fistl
in
aad
pop
adc
into
stos
mov
sub
pop
test
xor
xor
std
hlt
ss
inc
mov
pop
xchg
xchg
pusha
xchg
push
fsubs
pop
nop
stos
push
inc
mov
jb
js
xchg
testb
into
data16
stos
out
mov
lods
jle
jnp
int3
mov
sub
rcl
aas
ljmp
and
sbbb
ljmp
inc
inc
xor
mov
shll
dec
add
fsubrl
add
scas
aas
mov
and
int
icebp
sbb
out
cmpb
cmpsl
adc
iret
pop
xlat
in
pop
xchg
mov
pop
jecxz
xor
popf
inc
mov
xchg
popf
fildl
or
pop
or
jle
pushf
dec
xor
arpl
scas
xchg
xor
fbstp
imul
insl
xor
xor
aas
icebp
push
mov
rcll
hlt
cmp
loopne
sti
leave
fiadds
jns
sbb
ss
imul
inc
outsb
inc
inc
sub
xor
dec
outsb
pop
fisubl
loop
sbb
sub
jo
imull
xor
mov
arpl
add
push
cmpsb
cmp
les
mov
loope
subps
insl
fucomi
pop
mov
cmpl
cld
out
push
in
das
mov
inc
pop
addb
mov
inc
sub
leave
scas
xchg
cmpsb
and
out
sbb
outsb
or
sub
mov
ret
leave
add
ret
add
das
fildll
cltd
xchg
or
popf
inc
mov
xchg
pop
fneni(8087
shlb
push
sahf
cld
push
gs
mov
daa
jnp
sahf
jp
ret
les
mov
movhlps
sbb
stos
in
or
ss
in
mov
xchg
stc
flds
lds
mov
pop
div
lcall
orb
push
dec
or
jne
movhps
lret
xchg
aad
adc
inc
push
xchg
push
rcrl
jno
xchg
aaa
imul
ds
addr16
mov
xor
cmpsb
cld
loopne
mov
mov
push
rcl
mov
dec
shlb
push
dec
shll
mov
pop
stc
push
xlat
xchg
rorb
adc
xchg
into
rcll
jg
sub
test
push
out
iret
sbb
mov
sbb
or
adc
aam
lods
sub
gs
dec
lods
push
mov
mov
mov
test
bound
movl
je
jmp
rcrl
pop
mov
pushf
stc
jne
imul
xchg
pop
cs
mull
sahf
push
std
inc
mov
mov
out
mov
mov
adc
lret
inc
jno
add
push
mov
lahf
nop
lock
sbbl
mov
mov
xchg
mov
sbb
add
clc
fldt
aad
push
call
cmp
pop
sahf
add
push
stc
pop
mov
out
dec
dec
dec
lret
sbb
daa
mov
push
mov
pop
popl
aaa
mov
inc
inc
add
daa
xor
inc
xor
icebp
and
adc
imul
mov
sbb
pop
fdivrl
lds
add
mov
movsl
movsb
mov
sub
sub
jo
icebp
rcrl
push
es
xchg
dec
mov
addr16
outsl
shll
fucom
arpl
or
mov
mov
sbb
test
inc
mov
mov
cmp
jle
or
adc
xorl
mov
cmp
dec
lods
mov
mov
sub
das
push
mov
push
jmp
jne
inc
out
adc
pop
ret
mov
adc
aas
lret
mov
cmp
cwtl
cmp
popa
repnz
ret
dec
fistps
in
imul
inc
xor
inc
pop
mov
sbb
mov
mov
test
fwait
lods
fcmovnu
and
fistpll
decb
inc
les
xchg
das
push
mov
add
ja
push
lret
into
cmpsl
out
fstps
sahf
in
sub
data16
mov
movsb
lea
les
pop
js
loope
mov
shll
xchg
and
test
addr16
pop
idiv
inc
xchg
das
xchg
loope
lahf
mov
orw
insb
inc
jmp
push
pop
jmp
mov
dec
cmp
add
xor
shrb
and
jg,pt
add
mov
jecxz
loopne
and
jno
cmp
icebp
mov
pop
lds
movsl
stos
fwait
outsb
pop
ss
pop
push
sbb
das
push
xor
push
out
sbbl
mov
ss
test
aam
rol
aam
lds
test
imul
jbe
jge
ret
push
movsb
lods
ss
adc
lret
sub
pop
xor
push
out
andl
mov
xor
mov
adc
stc
lods
jne
call
mov
inc
jge
mov
into
sub
cmpsb
inc
pop
lea
pop
pop
adc
movsl
es
sub
cs
int3
frstpm(287
pop
dec
sbb
arpl
mov
cli
int3
sub
ljmp
push
andl
sub
loopne
mov
pushf
mov
jae
inc
mov
push
jecxz
loop
cmp
mov
pop
inc
xor
mov
cltd
cs
dec
pusha
mov
repz
fiadds
shll
fbld
xor
cmpsb
test
fnstenv
lods
in
inc
leave
push
dec
rorb
jns
push
sbb
xor
inc
rol
arpl
daa
adc
sub
into
jl
stos
push
lret
sarb
int
aam
das
loopne
push
aad
adc
inc
push
lea
inc
push
mov
xor
dec
inc
stos
frstor
movsb
cs
shll
or
idivb
or
dec
mov
adc
sub
xchg
inc
scas
inc
addr16
dec
adc
mov
mov
add
sbb
sub
popa
fcompl
outsb
aaa
cwtl
sahf
enter
lods
cmpsb
xor
sarl
pop
xchg
arpl
cli
mov
enter
jp
add
add
test
cmp
fistps
add
xor
xchg
sbb
push
cld
in
xor
mov
pop
inc
lds
lcall
and
int
sub
je
adcb
and
or
lcall
adc
rolb
xchg
shll
pop
fistps
xor
ror
xor
lock
cmpsl
cli
aad
ficomps
mov
lock
ljmp
mov
bound
pop
scas
push
fs
xlat
jle
fwait
rcrl
push
hlt
xor
shll
imul
and
cmp
xchg
jo
cmp
add
jo
jg
xchg
mov
push
mov
leave
lcall
xchg
in
sti
adc
pop
scas
cwtl
pop
inc
je
inc
outsl
ret
test
ret
lds
xorb
fcompl
jne
idivl
cmc
mov
std
adc
rorl
or
dec
mov
mov
mov
pop
mov
xchg
mov
sbb
mov
inc
mov
in
in
movsl
das
push
mov
sbb
in
mov
pop
jmp
sbb
shl
test
mov
cmp
ds
sbb
dec
shl
pop
lcall
mov
andb
neg
lock
repnz
push
adc
push
mov
mov
sub
popw
jns
xor
int3
jecxz
pop
cli
test
aam
add
jp
js
aad
in
or
cs
and
out
push
aaa
shlb
test
mov
jnp
int3
outsb
inc
clc
mov
fdivrp
mov
mov
cmp
mov
lods
add
or
sbb
pop
add
xor
int3
cltd
in
push
mov
cs
jg
hlt
mov
mov
arpl
xor
jmp
mov
movsb
mov
dec
sub
in
pop
jb
xchg
inc
in
jbe
cs
sub
and
fs
and
icebp
push
int3
or
test
xor
jne
mov
shlb
lods
ret
push
pop
rolb
out
or
mov
adc
ficompl
mov
jae
pop
adcb
dec
rcll
cmpsb
push
cmp
out
mov
lds
adc
mov
mov
addps
mov
jns
sub
lea
bound
outsb
mov
fildl
mov
jge
inc
add
fsubrs
sub
dec
add
pop
or
mov
mov
and
cltd
dec
xor
pop
daa
xor
mov
jl
inc
xor
dec
fs
mov
mov
out
enter
shlb
sti
xchg
stos
mov
sub
scas
test
and
xchg
outsb
pop
sbb
movsl
cmpsl
cld
icebp
ds
push
out
incl
jb
pop
push
call
cmpsl
xlat
das
jecxz
or
xor
push
and
push
lock
dec
in
mov
xchg
stos
call
cmpsb
es
add
in
pop
imul
push
dec
jl
push
push
xchg
imul
insb
movsl
mov
inc
subb
mov
addb
xchg
test
jnp
lcall
rorl
pop
jo
test
rcll
xor
sub
xchg
adc
sbb
add
data16
xor
out
call
lea
mov
pusha
mov
repnz
adc
popf
aas
jge
pop
movsb
pop
nop
repz
push
xlat
cmp
push
add
icebp
pop
lods
sarb
das
ret
xor
data16
mov
xchg
push
bound
jp
gs
mov
mov
js
call
icebp
loope
cmp
mov
jmp
inc
cwtl
mov
sub
cwtl
mov
pop
dec
loope
sti
xchg
lock
es
sub
addb
psubd
out
lea
push
inc
enter
cwtl
sub
leave
mov
add
mov
pushf
imul
data16
xor
ret
xor
popf
cmp
pop
xor
mov
cmc
mov
sti
inc
aaa
fwait
sbbl
dec
and
sarl
insb
or
movsb
push
mov
push
lods
cli
out
outsb
mov
out
mov
push
xchg
mov
stc
mov
inc
call
pop
mov
cmp
sbb
mov
cmp
push
adc
hlt
pushf
pop
imul
in
mov
test
jecxz
addl
mov
popf
int
cmp
add
jp
hlt
js
jle
js
shrl
ss
rcl
and
test
and
xor
sti
and
xchg
popl
pop
imul
cltd
jb
jg
ror
mov
insl
adc
popf
loope
daa
inc
push
xchg
add
gs
or
call
pop
adc
jae
pop
pop
push
shr
adc
sahf
icebp
ficomps
jne
push
push
jno
push
inc
scas
aam
mov
adc
jmp
mov
aad
or
cmpsb
jno
cs
lods
idivl
ror
repz
mov
fdivl
push
xor
mov
inc
stos
sbb
icebp
popa
icebp
mov
push
jecxz
mov
into
mov
cmc
xor
pop
add
aad
push
push
in
stos
out
adc
out
push
lds
in
addr16
adc
push
sti
add
icebp
aam
fildl
fisttpll
push
fwait
in
xlat
dec
push
mov
ss
sbbl
stos
pusha
mov
hlt
cltd
mov
outsl
fs
or
and
jp
and
mov
or
jp
jmp
mov
xchg
cmp
fldenv
iret
into
mov
test
test
cmc
lea
push
and
dec
jl
jne
pop
dec
out
mov
push
xchg
in
test
add
xchg
sub
xchg
push
xorl
sbb
incl
leave
inc
repz
loope
outsl
icebp
out
xor
shlb
fldenv
lock
test
xor
idiv
je
sub
mov
cmp
sti
jns
add
scas
movq
out
popf
cltd
pop
push
shll
es
jg
sbb
mov
jo
mov
inc
push
xchg
push
incl
adc
movsb
jns
aam
mov
outsl
out
fbld
fbld
in
jnp
mov
and
pop
movsl
scas
mov
test
popa
cltd
mov
push
xchg
aaa
popa
push
pushl
ud2
xchg
rep
cmp
mov
add
ret
outsl
adc
xor
cld
cltd
mov
pushl
test
jg
jle
test
out
cmpsl
das
or
jns
inc
cmpsb
cmpsb
mov
cs
cmp
fwait
xchg
scas
pop
or
or
add
xor
mov
cmpsb
scas
inc
cmp
push
jmp
sub
lahf
mov
adc
jmp
jb
aam
mov
mov
xor
inc
pop
cmp
mov
xlat
inc
insl
enter
mov
pop
jns
sub
insb
fists
lcall
dec
add
push
imul
adc
dec
lahf
out
divl
shl
sub
add
and
rcrl
and
pop
mov
xchg
stos
test
mov
leave
and
adc
inc
adc
xchg
mov
pop
sub
cvtdq2ps
jne
sbb
mov
adc
int
dec
cmc
and
pop
daa
xchg
cld
hlt
pop
test
xor
in
cwtl
cltd
and
mov
xor
sti
mov
inc
and
inc
mov
sub
inc
enter
sbb
addb
hlt
leave
mov
mov
xor
fcompl
into
lret
sbb
jp
or
mov
lods
or
into
push
dec
out
lods
mov
outsl
mov
loope
roll
scas
stos
testb
loope
and
and
int3
stos
std
jle
jle
push
dec
jp
out
dec
jnp
out
add
jecxz
mov
daa
mov
int3
mov
dec
push
pop
mulb
movsl
mov
sub
mov
inc
or
loope
and
pusha
test
jp
adc
dec
fs
std
inc
jnp
mov
sbb
add
pop
fstps
dec
lret
pop
lds
inc
pusha
or
cmp
aad
pop
stos
pop
lds
mov
cmp
pop
decl
repz
ret
pop
and
sub
jle
dec
ds
mov
push
xor
push
data16
dec
mov
add
outsb
stos
or
lods
mov
ljmp
out
mov
addr16
xor
sbb
push
adc
pushf
sarb
test
mov
js
xor
dec
leave
and
pop
pop
add
dec
mov
xchg
fldenv
out
aas
or
stos
nop
push
aas
ret
mov
repz
stos
mov
adc
sbb
and
mov
jnp
js
sar
std
fs
das
or
test
adc
aaa
adc
jmp
sbb
mov
int3
mov
arpl
adc
in
adc
sti
call
jb
mov
dec
jecxz
cmp
ljmp
and
mov
sub
stos
jbe
pop
cmc
dec
fs
dec
mov
in
sbb
pushf
fsub
loope
pop
fld
daa
adc
movsl
je
stos
cli
ficoms
pop
fstl
sbbl
jg
insl
dec
negl
or
mov
push
jl
xchg
cmp
cmp
in
scas
xchg
stos
mov
push
lcall
push
mov
pop
ljmp
mov
lahf
xchg
iret
pusha
mov
fmuls
adc
adc
push
cmp
add
cwtl
popa
xchg
pop
jg
cmp
cs
icebp
cmp
sahf
or
xor
or
lea
cmp
arpl
dec
mov
mov
mov
push
or
dec
xor
and
nop
pushf
outsl
bound
mov
inc
xchg
fisttps
mov
inc
flds
pop
aad
or
jl
jo
stos
shld
scas
cld
xorb
fstpl
dec
jmp
mov
xchg
xor
lret
repz
sub
pushf
repz
lock
fnstenv
or
lret
fistps
je
icebp
sub
mov
in
inc
push
bound
pop
test
and
xchg
adc
xor
shll
push
mov
cmp
xlat
ja
arpl
and
jbe
repnz
loopne
fnsave
and
sub
test
push
mov
movsb
sub
aad
jg
jno
sub
dec
iret
mov
nop
int3
inc
ffreep
lcall
mov
stc
and
outsb
jo
pop
mov
xchg
xor
adc
mov
addr16
lahf
push
push
sar
stos
dec
cmp
push
jg
sahf
stos
mull
sub
dec
stos
or
scas
mov
push
dec
addr16
push
adc
lahf
mov
mov
mov
or
icebp
cmc
adc
mov
fistpl
jbe
inc
push
popf
sub
and
push
shrb
test
imul
loop
outsb
gs
out
je
and
xchg
or
test
add
sub
sub
mov
mov
enter
inc
mov
push
add
stc
imul
sub
pop
std
mov
mov
and
in
mul
xchg
shl
pop
lock
xchg
jno
insl
xor
pop
or
xor
aaa
jns
cmp
loop
mov
push
adc
cmpsb
in
cmp
adc
add
cwtl
push
decb
stc
es
mov
push
call
pop
cmp
stos
mov
cmp
sti
or
loop
cmpsb
popa
mov
inc
jno
mov
aad
adc
jl
vpunpckhqdq
lcall
movb
dec
push
test
loope
mov
and
push
aaa
in
rorb
mov
fsubp
outsl
add
test
clc
js
push
dec
cwtl
mov
push
cli
sti
inc
jnp
aad
insb
pop
mov
or
jg
nop
shrl
jo
fucomip
cld
and
shl
pop
rcrb
sbb
insl
stos
aad
dec
xor
test
mov
adc
dec
jne
call
mov
jnp
es
insl
mov
mov
fcomp
cmp
mov
pop
jmp
mov
sbb
adc
or
cmpsl
aaa
add
mov
add
and
xchg
dec
inc
test
add
jl
cmp
mov
inc
mov
add
push
xlat
sub
stos
cltd
mov
sarb
mov
pusha
push
and
adc
test
fistl
mov
subb
sbb
mov
and
gs
cmp
in
mov
and
jmp
pop
leave
mov
mov
fstpl
dec
xor
push
ret
sbbl
fnstsw
inc
repnz
out
sub
stos
sub
addl
add
jmp
mov
add
cmp
add
movsb
lods
dec
add
pop
adcb
loop
psubq
inc
jle
inc
jae
mov
sar
cmp
dec
addr16
mov
cmp
loopne
daa
inc
outsl
mov
xor
cmpsl
in
mov
xorl
mov
jns
fcmovne
push
adc
aad
sub
jg
and
add
pop
insb
ret
sbb
inc
int
dec
pusha
push
into
je
lret
push
pop
stos
jl
nop
ja
test
lcall
inc
inc
fcompl
lcallw
sbb
jns
pop
je
ret
push
jb
push
fidivl
adc
add
call
lods
mov
xchg
icebp
jmp
arpl
test
sbb
ja
or
mov
mov
loopne
dec
jb
add
push
mov
lret
pop
jg
rolb
xor
clc
or
fisttpl
loop
mov
pop
inc
lcall
push
repnz
xor
lds
ljmp
jns
jg
pushf
mov
mov
int
mov
mov
call
imul
enter
xor
sarb
sbb
push
lds
scas
sbb
xor
add
iret
loope
dec
aaa
mov
jbe
rcrb
adc
sub
sbb
xchg
or
std
inc
test
xor
fbstp
and
in
dec
lret
inc
out
shlb
aam
mov
dec
loope
and
push
ret
ja
gs
rcl
hlt
push
popf
push
add
in
sbb
xchg
mov
cmp
pop
mov
imul
mov
rorl
mov
fbld
scas
mov
pop
ss
bnd
popa
push
or
sbb
testl
cltd
dec
cmp
sub
jno
push
pop
and
out
loop
cmpsb
addr16
lahf
or
push
jle
xchg
icebp
add
cltd
jbe
sbb
adcl
fimull
adc
xor
pop
std
pop
inc
inc
repnz
mull
ja
xor
or
shlb
sbbb
or
jl
sbb
xchg
xchg
clc
repnz
imul
daa
loope
hlt
mov
outsl
pop
jnp
mov
imull
pop
mov
outsb
lds
jbe
imul
jecxz
cmp
lds
dec
xchg
fistpl
mov
icebp
mov
ret
and
xor
stos
dec
and
shll
das
mov
pop
bnd
xchg
in
ja
jo
adc
mov
pusha
adc
lret
sarl
mov
cmp
xor
sbb
daa
test
sbb
lock
jne
push
cld
fiaddl
out
cmp
adc
mov
mov
lock
push
popa
das
cwtl
pop
push
xor
xchg
push
xchg
shl
mov
aam
scas
fidivs
pop
dec
les
fidivrl
mov
sub
jg
pop
repz
cmpsl
mov
sub
mov
jae
mov
mov
insb
fbstp
mov
inc
sbb
or
pusha
aad
mov
das
xor
jno
cmp
clc
aam
sub
inc
or
sbb
mov
std
adc
xchg
mov
jp
mov
pop
push
fistps
negl
mov
test
xor
jns
cmp
mov
jnp
push
sti
lahf
jbe
jge
sbb
cltd
jns
inc
mov
aas
mov
fdivrl
mov
orb
cli
sub
loopw
bound
mov
cli
imul
mov
sbb
mov
adc
push
mov
dec
sub
loope
mov
dec
and
xor
fistpll
test
insl
pop
jo
aaa
cmpsb
outsb
dec
add
cmp
push
xor
outsb
adc
jbe
mov
lret
mov
mov
adc
mov
push
test
mov
sub
add
and
push
fdivl
sarl
mov
pop
mov
lret
ljmp
in
nop
test
adcb
adc
sahf
in
stos
in
mov
gs
jae
push
xchg
sub
cmp
insb
cmp
inc
popa
jnp
movsb
sbb
cwtl
shlb
out
notl
mov
cltd
loopne
loopne
add
mulb
cs
or
add
stos
lret
clc
push
out
pop
jmp
aaa
pop
sbb
int
xor
pop
addr16
inc
xor
cmc
adc
and
insb
pop
mov
inc
push
or
dec
cmpsb
stc
lods
ds
jns
jae
in
sti
mov
sbb
addr16
adc
mov
scas
push
notl
lods
in
test
push
ss
cmpsl
or
push
mov
and
sub
xchg
dec
mov
repz
insb
sub
jns
sbb
and
pop
dec
mov
push
jns
sar
ss
sbb
adcb
call
mov
ss
fstpt
aad
les
fldl
cld
mov
xchg
cmp
rolb
mov
xchg
lret
mov
or
es
in
cmc
push
dec
ficompl
test
push
movl
pop
sbb
and
jg
mov
sub
adc
mov
shll
or
ret
enter
lea
fcomps
cld
adc
fldenv
cs
mov
sub
push
xchg
mov
inc
aam
sbb
lcall
repnz
mov
cltd
repz
xchg
mov
mov
mov
in
mov
ficoms
pop
jmp
inc
or
pop
xchg
in
inc
orl
out
cli
into
stos
pop
and
inc
popa
dec
rol
mov
fdivrs
jns
mov
out
mov
jns
add
sub
icebp
push
push
js
mov
scas
sub
fmull
mov
sahf
into
cltd
jmp
or
sbb
jbe
in
jnp
sbb
mov
add
xor
fdivl
mov
mov
and
int3
adc
add
and
fidivrl
mov
xchg
jne
ja
hlt
shrb
ret
mov
mov
push
incl
dec
jge
aad
cltd
sbb
xor
iret
xchg
mov
adc
cmp
inc
add
iret
or
clc
hlt
ss
pop
pop
or
popa
repz
pop
iret
popa
cmpsb
loope
popa
sbb
pop
mov
push
mov
jne
or
and
xchg
imul
daa
xchg
pop
inc
adc
inc
enter
repnz
aas
aad
pop
mov
mov
sbb
fldcw
mov
push
movsl
in
push
nop
cmp
jno
push
mov
jg
pop
out
scas
stos
sub
imul
popf
or
test
test
push
repnz
lret
out
inc
mov
mov
arpl
jb
mov
sar
call
stos
inc
pop
fs
aaa
pop
test
les
push
adc
outsb
push
dec
cmpsl
div
fidivrs
pop
into
stos
and
punpckhbw
cwtl
push
icebp
enter
bound
inc
mov
jg
mov
in
pop
mov
sahf
mov
fists
push
mov
mov
movsb
fildl
lods
jo
mov
xchg
bound
mov
mov
shlb
adc
leave
xlat
outsb
sub
xchg
push
mov
jmp
pop
pop
out
iret
lret
scas
push
clc
sbb
pop
lds
shrl
push
dec
ljmp
out
and
sbbb
rcl
pop
mov
movl
xchg
push
incl
or
add
jo
pusha
data16
mov
mov
or
dec
mov
pop
addl
adcl
or
fldl
add
popf
imul
push
xchg
pop
or
add
shl
cmpsl
mov
mov
lock
sbb
jmp
test
add
mov
xchg
in
pushf
adc
push
vcvtss2si
aad
cmp
xor
imul
sbbl
jae
cmp
jae
push
cld
push
pop
loopne
mov
cmp
push
xchg
decl
push
dec
sub
icebp
sbb
repz
fs
or
mov
test
mov
sahf
fcompl
pop
rolb
loope
out
fimull
jle
dec
pop
pop
xchg
cmpsb
scas
nop
mov
cmp
ljmp
fwait
mov
gs
sbb
mov
xlat
je
push
jb
jg
insl
popf
cmp
adc
push
and
mov
jns
popa
das
pop
pop
out
push
fisubrs
jne
sbb
test
xlat
stos
lret
clc
test
jp
adc
fsubl
push
mov
divl
out
dec
xchg
and
js
inc
jmp
and
lds
push
lea
aaa
jae
data16
cmp
or
jnp
mov
add
negb
hlt
pop
outsb
push
xor
cli
iret
lret
sbb
pop
fdivr
pop
xchg
sbb
push
mov
inc
push
jbe
jns
std
jb
push
cmp
push
inc
jecxz
xchg
mov
lcall
and
ficoms
lcall
out
movsl
mov
aad
lea
sahf
dec
pushf
mov
js
xorl
mov
adc
sbb
shr
pop
cmc
fst
rcr
adc
pop
mov
and
and
dec
pop
mov
sbb
or
inc
pop
in
push
movsl
icebp
sub
imul
xor
add
or
cmp
testl
xchg
cli
cmp
add
mov
xchg
and
cmpsb
jecxz
xchg
xchg
pop
or
inc
out
cmp
and
das
lret
mov
mov
inc
jae
pop
dec
jo
addr16
pushf
test
insb
out
cmp
daa
push
cltd
push
dec
xchg
lods
fld
or
dec
popa
jg
jmp
and
lods
pop
bound
mov
stc
ret
mov
push
imul
fdivrl
out
pop
push
sub
mov
xchg
insl
or
inc
dec
fcompl
into
imul
out
pop
cmp
lcall
daa
das
mov
lds
add
xchg
fidivs
bound
test
test
mov
enter
pop
cmpsl
jecxz
xchg
pop
ja
sti
and
mov
add
add
mov
push
push
xchg
roll
jle
dec
lea
xchg
push
sub
js
pop
dec
adc
aaa
imull
insb
dec
das
xor
and
mov
cmpsb
or
aam
or
xchg
inc
jno
scas
push
lret
js
out
icebp
test
mov
xor
sbb
dec
jge
sub
sbb
out
lret
adc
mov
repz
cmp
pop
cld
cmpsb
jnp
mov
xchg
out
mov
and
mov
push
lods
xlat
nop
into
gs
int
mov
shl
mov
cmpsb
adc
jmp
ret
stos
jnp
dec
js
ficoms
jae
fisubs
js
jge
jg
mov
fxch
adc
cmp
stc
shrl
mov
pusha
xchg
aas
out
lods
mov
xlat
jne
push
pop
fldt
cmovbe
aaa
mov
incb
insb
fwait
call
lret
ret
and
jmp
jmp
aad
pushf
enter
lahf
push
sbb
push
sbb
ja
jle
mov
addr16
flds
sub
movsl
mov
adc
sbb
aam
and
xchg
and
fistpll
inc
xchg
mov
mov
xlat
xor
stos
repnz
ror
xchg
inc
or
loopne
imul
cmp
cltd
mov
dec
movsl
mov
xchg
inc
aam
cmp
add
imul
dec
pop
lock
pop
cmpb
sbb
iret
mov
and
out
jae
add
push
out
cmpsl
and
call
repz
dec
int3
dec
in
cmpsb
int3
cmp
mov
aas
jge
adc
addr16
inc
add
stos
enter
jl,pn
xchg
jg
mov
sbb
fistl
rolb
dec
add
mov
mov
lret
or
lcall
scas
hlt
ljmp
ret
test
fsubp
repnz
sbb
push
cmp
cmp
pop
cmpsb
xchg
xchg
aas
lods
int
lret
jge
cltd
dec
lcall
test
dec
into
sbb
ret
dec
test
or
incl
xlat
sahf
mov
add
add
and
aam
pop
daa
add
jecxz
sbb
leave
mov
fstpt
dec
add
mov
and
icebp
loopne
inc
cmp
mov
cmp
inc
fstpl
sahf
add
jmp
lock
cmp
jb
mov
jnp
inc
push
mov
and
mov
ret
adc
sub
outsl
stos
pushf
inc
dec
stc
mov
sti
data16
movsl
mov
xchg
hlt
cmp
lret
shlb
push
push
iret
dec
fstpl
jl
dec
mov
xor
and
inc
clc
addb
xchg
xlat
add
jg
rorl
xor
enter
fldenv
or
add
sub
loope
sti
inc
iret
add
pop
pushf
lcall
dec
xlat
lds
xchg
and
or
pop
mov
inc
fsts
pop
cld
xlat
test
int3
loope
and
adcl
in
sbb
mov
push
pushf
cmp
movb
dec
mov
cmp
jb
aad
vmread
lret
cmp
stos
rcrl
pop
xor
test
leave
es
jmp
imul
pop
mov
adc
bound
push
adc
push
popa
stos
mov
hlt
pop
lods
jbe
mov
xchg
xchg
and
sahf
sbb
jge
roll
mov
mov
cmpsl
lea
hlt
or
or
lods
xor
add
addr16
or
pop
fdivrl
xchg
ss
cmp
xchg
inc
and
ljmp
push
add
pop
adc
roll
popa
hlt
mov
into
lods
or
sbb
daa
mov
test
lahf
jge
jne
jmp
arpl
jb
subps
je
dec
push
gs
sub
push
loopne
stos
movsl
mull
scas
dec
test
enter
fcomip
pushf
push
sbb
scas
mov
fucomi
ds
sti
mov
mov
dec
imul
and
inc
cmp
sub
cmp
inc
adc
mov
push
mov
dec
js
pop
das
cwtl
fimuls
xor
std
jnp
inc
lahf
mov
mov
xor
inc
or
lock
sub
sbb
mov
mov
dec
lret
bnd
bound
fdivr
xor
mov
loope
sbb
outsl
mov
mov
imul
inc
sbb
push
inc
dec
push
dec
and
hlt
inc
push
mov
out
jbe
loop
and
mov
bound
jno
pusha
inc
addr16
addr16
jne
enter
ljmp
jmp
cli
out
insb
int3
jle
xor
scas
inc
cmp
cmp
jbe
dec
jne,pt
sbb
jo
dec
xchg
pop
repz
imul
inc
icebp
jb
jecxz
aaa
push
adc
dec
loop
mov
in
jno
pop
push
out
mov
push
and
loop
pop
mov
into
fwait
mov
push
roll
les
scas
ja
lahf
pop
push
xchg
xor
mov
jb
dec
and
aas
cmp
ret
cli
dec
and
pop
bound
call
mov
mov
repz
lds
dec
dec
mov
popa
nop
sub
push
pop
clc
xchg
xchg
rcl
or
lds
fnstcw
fstps
or
ds
xor
aaa
adc
aas
inc
xlat
mov
mov
lea
cltd
fsub
popa
enter
enter
jp
test
outsl
cwtl
into
addb
stos
push
inc
gs
inc
ljmp
bound
ret
shlb
out
xor
dec
mov
dec
out
sub
dec
rcrl
fisubrs
in
cmp
mov
xchg
sbb
cmp
mov
gs
addl
add
push
mov
cwtl
fnstenv
ret
call
mov
cmp
sub
xlat
jecxz
adc
mov
stc
cmc
lahf
inc
xchg
sub
in
lea
sbb
mov
and
pop
fisubrl
stos
xchg
push
loopne
add
pop
hlt
ficoml
add
pop
pusha
xchg
call
test
and
fsubp
ret
mov
mov
insb
je
bound
or
ret
add
adc
test
xchg
popa
lock
es
ss
cs
in
mov
aaa
sub
dec
push
std
xchg
arpl
fidivrs
les
icebp
add
ds
jecxz
mov
lea
lock
sahf
add
dec
dec
add
inc
mov
imul
xor
sbb
jbe
mov
daa
loopne
aas
cld
neg
adcb
fstpl
cmp
roll
imul
mov
pop
cmp
lods
ljmp
fcompl
test
popa
shrb
adc
jle
xor
and
dec
and
popa
mov
pop
dec
shrb
addr16
inc
test
test
lcall
aaa
je
dec
or
inc
and
lret
stos
push
jb
mov
adc
popf
add
add
mov
xchg
cmp
cmp
out
dec
and
lea
aad
fisttps
push
pop
xor
in
sub
insb
lods
push
jns
sahf
das
push
cmp
jl
adc
xchg
cli
xorl
add
out
pop
adcl
and
push
and
fwait
orb
xchg
loope
push
outsl
pop
dec
xchg
cmp
sbb
insb
fiadds
sub
or
gs
cmc
jns
xchg
loop
xor
push
pop
cmc
or
dec
push
daa
push
mov
jmp
pop
shll
fnstcw
in
mov
inc
pushf
out
cld
mov
enter
cmpsl
jbe
cmp
mov
sbb
jp
mov
leave
mov
mov
lock
nop
sbb
sbb
ljmp
jle
daa
sub
cld
test
lea
stc
js
jae
call
sbb
fs
pop
jg
cwtl
xor
mov
loopne
movsl
es
cwtl
add
mov
sub
mov
jle
mov
dec
mov
push
push
jbe
call
mov
adc
xchg
negb
push
jne
ss
ret
addr16
xchg
leave
xchg
jle
mov
sub
outsb
inc
jae
adc
pop
pop
adc
xchg
mov
pop
movswl
dec
inc
cmpsb
daa
pop
or
xor
mov
sbb
mov
push
mov
or
push
data16
pushf
into
xchg
xorl
loopne
dec
push
add
lahf
cmp
es
lods
inc
cmc
nop
lahf
pop
into
or
pavgw
and
lahf
aas
dec
push
xor
les
insl
mov
mov
jbe
pop
sub
enter
cmp
jbe
add
loopne
push
leave
ss
mov
push
int3
dec
pop
clc
or
int
push
pushf
dec
mov
lret
mov
scas
hlt
and
nop
add
mov
pop
inc
push
sbb
xchg
lds
cld
std
jb
test
jb
or
add
cmp
cwtl
xor
loopne
mov
test
xor
out
subl
repz
sti
inc
push
sbbb
dec
inc
xlat
in
push
xor
or
jg
push
sub
es
adc
mov
mov
pop
scas
cmp
call
mov
sub
jle
in
push
pop
sbb
xor
xchg
or
stos
movmskps
sbb
arpl
xchg
out
out
rorl
cwtl
jae
xchg
push
mov
mov
dec
adc
lcall
scas
mov
rcll
ja
sub
sub
inc
push
push
jg
jnp
test
mov
stc
dec
aas
pop
test
rcr
lods
dec
ja
neg
fdivl
dec
add
sbb
lds
inc
inc
pop
or
js
cmpl
js
push
les
shr
cmp
or
ja
or
stc
inc
xchg
jnp
dec
sbb
sbb
testb
push
adc
xchg
sti
in
add
jmp
sahf
test
push
or
stos
dec
pop
cmp
push
mov
pop
cmpsb
xchg
js
inc
aad
lret
ljmp
cld
iret
xor
add
repz
mov
das
jae
cwtl
popa
xchg
ds
and
add
lock
jmp
or
repz
push
inc
xchg
inc
inc
mov
ret
enter
loop
idivb
cli
ljmp
cmp
sti
mov
std
call
xor
fs
xor
cmpsl
and
sbb
sub
pop
jg
cmp
and
mov
jb
mov
loope
dec
and
addr16
pop
xor
xlat
add
lcall
rcr
dec
pop
lcall
jecxz
mov
outsb
mov
add
add
xor
push
lds
jle
sbb
mov
js
pop
test
les
repz
popf
fiaddl
fistpl
sub
dec
dec
adc
int3
xor
nop
mov
adc
mov
push
std
sub
inc
and
add
add
jge
add
scas
cmc
stc
stc
jae
ficomps
xor
inc
push
sti
gs
jle
sub
push
scas
xchg
mov
leave
lcall
pop
jmp
sub
shl
xchg
rep
jp
lret
movsb
push
push
mov
mov
lea
jecxz
imull
cmp
sbb
aaa
push
xchg
pop
pop
add
arpl
cmp
bound
mov
jmp
xchg
jecxz
mov
mov
fwait
xor
inc
ds
js
xchg
push
and
daa
mov
adcw
das
loop
scas
jg
jbe
out
push
dec
fstpl
pop
xchg
test
stc
cmp
jns
sahf
fwait
popf
fcoms
out
or
imul
enter
rol
lods
adc
jle
push
arpl
ret
mov
repz
pop
repz
jb
popa
test
and
add
and
pandn
jge
dec
pop
data16
mov
pop
mov
jo
cmp
icebp
pop
mov
das
imul
imul
in
lcall
std
mov
mov
sbb
jp
xchg
inc
fnsave
xchg
push
pop
nop
adc
xchg
inc
push
dec
mov
sub
push
add
orps
dec
movsb
or
inc
icebp
or
dec
cltd
mov
lahf
mov
pop
jbe
dec
mov
cli
int3
nop
sbb
ja
in
push
leave
mov
dec
stos
xchg
aam
fldcw
daa
jmp
pop
lods
add
in
cltd
outsl
xchg
cwtl
dec
mov
push
scas
test
arpl
cld
push
mov
repnz
and
jns
in
repz
dec
jmpw
adc
andl
aad
xchg
fstps
test
inc
xchg
or
push
movl
gs
dec
xchg
popf
mov
mov
cmpsb
test
pop
cmp
inc
add
push
inc
lahf
sub
popw
enter
inc
mov
shlb
cmp
xorl
xor
cmc
push
dec
adc
add
add
jle
in
or
mov
repnz
cmpsb
in
hlt
add
push
sub
add
out
iret
xchg
jae
repnz
rcrb
popf
mov
sub
jo
bound
test
data16
icebp
in
stos
mov
insb
and
js
int3
fdivs
dec
inc
pop
mov
push
cmpsb
rclb
xchg
or
cmp
or
xor
repz
mov
sbb
jle
mov
leave
mov
imul
or
dec
cwtl
sbb
cli
arpl
repz
push
loopne
jae
and
jmp
push
out
xorl
inc
sbb
inc
call
mov
and
jg
mov
jle
ja
fnsave
std
hlt
les
inc
ds
or
rcll
scas
cmpsb
icebp
sub
sahf
lcall
or
push
ja
add
ret
push
cmp
xor
mov
jns
repnz
mov
sti
lret
xor
mov
subb
ffreep
sti
cli
rclb
mov
pop
js
mov
cmp
xor
aam
nop
pop
pop
jnp
cmc
jae
push
adc
add
mov
cwtl
repz
dec
inc
pop
or
dec
push
ss
aam
push
add
shrl
fs
or
and
cmpsb
push
cmp
sbb
xor
mov
jg
sbb
pop
mov
cmp
call
aam
mov
in
lea
cli
ret
xchg
or
pop
mov
xor
sti
push
rclb
les
mov
pop
jae
ss
push
shrb
and
jno
pop
push
mov
mov
push
adc
mov
lcall
aaa
ja
shrb
in
inc
xchg
sbb
cmp
or
scas
and
and
aad
lahf
stos
scas
imul
nop
mov
xor
push
mov
mov
mov
inc
jecxz
rcr
movsl
cmc
adc
jno
push
fildl
mov
add
popf
mov
scas
push
clc
pop
ret
adc
xchg
out
push
cmp
ljmp
ja
adc
mov
add
cmp
pop
xor
xchg
out
daa
or
ds
mov
inc
xlat
mov
fldl
insb
add
gs
sub
cmp
xor
push
aad
dec
pop
and
adc
movsb
cmp
fidivrs
cwtl
jge
sti
and
inc
push
popl
lahf
push
xor
sti
adc
test
dec
inc
pusha
rcl
jp
lods
test
inc
cmpsl
or
aaa
sbb
jp
inc
or
mov
insb
inc
mov
xlat
cli
dec
jmp
sub
sub
repnz
jg
cmp
lods
popa
hlt
sub
and
push
in
cld
popf
jge
mov
xlat
push
or
popf
ficomps
outsl
lahf
adc
push
adc
ja
ret
mov
daa
push
mov
bound
int3
out
loope
cmp
pushf
add
xchg
repnz
push
dec
add
xchg
mov
jo
mov
jb
inc
mov
sti
and
insb
into
and
fsubr
iret
xchg
adc
jecxz
add
test
adc
mov
gs
add
aam
adc
or
js
inc
xchg
paddw
ror
push
sbb
mov
lahf
cmp
jbe
insb
jle
testb
inc
mov
imul
push
inc
dec
inc
mov
dec
es
pop
push
les
mov
adc
loop
or
pop
pushf
or
sti
ljmp
mov
push
cli
and
jl
aas
fcomip
push
fmuls
test
test
pusha
test
lods
jge
xchg
out
mov
dec
loope
add
das
ret
cmpsb
sbb
dec
repz
dec
mov
cmp
rol
mov
shl
fistpl
ja
sub
out
mov
fistl
xor
lock
xchg
incb
cmp
dec
out
dec
js
inc
insb
mov
jbe
mov
lret
cli
dec
bnd
inc
push
mov
push
mov
xor
sahf
aad
pop
dec
icebp
push
or
into
shl
out
ss
dec
and
sbb
mov
inc
int
add
insb
mov
jl
pusha
loop
mov
repz
fwait
bnd
inc
aas
jnp
xchg
inc
sub
sbb
xchg
pop
push
add
sub
jne
sahf
and
lods
mov
cmc
hlt
shlb
and
cltd
dec
out
scas
xor
hlt
addl
in
mov
mov
xor
pushf
xchg
add
mov
push
shlb
andb
out
cld
pop
inc
adcb
out
xor
and
idivl
cmp
lret
into
rorl
xchg
xchg
roll
push
clc
jb
push
test
aaa
and
orl
insl
inc
sbb
aas
fcmove
push
das
cmp
xlat
xchg
in
aas
mov
mulb
data16
pop
pop
rcrb
xor
mov
sahf
dec
xchg
add
cmp
imul
xchg
out
xor
dec
ret
stc
fsubr
cli
rclb
subb
xor
out
jae
mov
xchg
push
sub
mov
pop
mov
sub
fs
adc
std
jmp
jp
inc
sarb
and
push
cmpb
inc
or
push
dec
dec
scas
inc
mov
pop
push
mov
lahf
jae
ret
out
repz
cmp
mov
xchg
mov
add
lahf
push
ret
call
jno
in
xchg
adc
je
test
push
pusha
cmp
sub
stos
leave
dec
mov
or
push
inc
mov
ret
jp
inc
pop
or
jbe
cmp
push
pop
inc
mov
push
iret
sub
mov
lock
dec
shlb
xchg
or
fdivp
xor
jmp
push
sub
xor
push
add
add
roll
mov
in
out
mov
cmpsl
push
and
mov
xlat
inc
and
imul
js
in
test
cmpl
lahf
cmp
popa
std
cli
dec
arpl
jns
xor
das
xrelease
sbb
xchg
push
mov
ja
add
insl
mov
imul
sbb
sbb
jbe
fcoms
ja
jl
xlat
loop
dec
inc
es
mov
pop
repz
shr
imul
mov
inc
adc
inc
mov
aam
jne
dec
inc
iret
out
pusha
sarl
dec
jnp
jl
addl
cmp
es
mov
or
shlb
clc
jge
add
add
ja
mov
inc
or
sbb
js
into
push
fdivrs
mov
cmpsl
xchg
pop
les
fildl
xchg
mov
ret
mov
xchg
scas
sbb
xchg
jne
xchg
sbb
pushf
mov
in
cmpsb
pop
push
pusha
ret
xor
les
sbb
aaa
add
and
call
fucomi
xchg
cmp
fcompl
jns
jl
dec
stos
add
movsb
imul
jnp
imul
adc
lret
mov
push
push
lea
or
or
in
mov
int
daa
add
sub
imul
imul
out
lock
sbb
inc
subb
dec
inc
lret
in
inc
enter
sub
mov
adc
xchg
data16
outsb
lea
xor
or
mov
cmp
rclb
aad
sahf
or
inc
jge
mov
aas
mov
fistpll
sbb
push
repnz
in
mov
push
or
jne
fstpt
inc
addr16
sbb
inc
ja
outsl
xchg
testl
cmp
pop
inc
enter
in
push
jno
dec
jo
ljmp
lret
pop
jmp
and
in
addr16
iret
nop
fnstenv
push
pushf
in
mov
adc
arpl
push
int
dec
clc
lods
mov
mov
fsubl
shl
bound
enter
rolb
test
cld
mov
mov
jnp
inc
cli
test
test
push
loop
inc
test
and
inc
enter
mov
add
push
sub
mov
lods
outsl
jmp
sahf
or
inc
mov
xchg
loopne
xor
divl
add
xor
lods
xor
xchg
test
pop
sahf
add
jo
pop
sub
ja
push
add
movb
xor
xor
xchg
jle
cld
push
lods
xorb
add
mov
into
in
xchg
fstpl
mov
sahf
int3
ja
imul
adc
mov
dec
mov
pop
fwait
lahf
adc
pop
dec
int3
push
pushf
out
insb
frstor
ss
mov
sarb
lea
jle
or
sbb
sbb
fisttpl
out
rcr
ss
push
outsb
jo
xchg
mov
orb
out
pop
cmp
push
jecxz
fadd
icebp
mov
fidivrs
adc
js
insl
int
rcll
rcrb
bound
mov
outsb
push
pop
mov
aam
or
hlt
icebp
rcrb
pop
mov
jo
orb
xchg
mov
push
outsb
sti
shlb
movsl
mov
and
mov
js
sbb
xor
test
pop
inc
push
enter
in
cmpsb
jp
idivb
push
sbb
dec
imul
xchg
jno
sbb
sti
fadds
in
mov
fld
loopne
xchg
orb
dec
jbe
pop
dec
ret
push
inc
popf
or
jo
out
mov
add
cmp
xor
aaa
cmp
add
push
data16
sti
repz
into
test
jae
rorl
jno
and
mov
sahf
mov
xor
call
push
imul
xchg
xchg
push
popa
and
push
fwait
jmp
jmp
fistl
bound
xor
stos
rclb
mov
adc
cmp
inc
cwtl
pop
dec
popf
mov
and
mov
inc
loopne
ret
inc
aaa
adc
test
mov
jg
shlb
popf
or
das
mov
cmp
ss
jp
sti
and
or
cmc
mov
push
add
pop
and
imul
jnp
xchg
sub
pop
fdivrl
xor
enter
stos
sub
cmc
and
cmpsl
lds
jo
loope
sbb
jne
mov
outsb
adc
dec
xor
pop
in
jne
mov
inc
insb
daa
xlat
repnz
inc
sarb
mov
icebp
pop
mov
mov
in
test
or
xchg
mov
cmp
jle
cmpsb
pusha
mov
mov
adcl
rolb
icebp
and
dec
inc
or
and
loope
adc
push
add
push
sub
das
aaa
daa
pop
xor
cs
popf
mov
cltd
test
fdiv
aas
inc
and
fistl
pop
xor
iret
gs
icebp
inc
shll
push
lock
pop
adc
mov
popa
mov
and
sbb
loopne
loop
enter
mov
mov
ret
ja
xor
iret
pushf
adc
push
cmp
popf
mov
movl
push
popa
popf
fidivrs
jnp
add
jns
xor
insb
xor
add
dec
mov
or
xor
jl
dec
iretw
fcmovne
dec
nop
movsl
xchg
ss
cld
loopne
scas
jbe
pop
xchg
or
sahf
push
or
adc
adc
or
incb
and
push
int
dec
cmc
sbb
mov
pop
lret
adc
jne
int3
int3
gs
divl
pop
inc
push
xor
movsb
jl
arpl
movsl
cmp
push
jl
push
cld
les
jno
insb
adc
mov
les
aad
fstpt
fnstsw
sbb
fdivrs
xchg
jl
scas
in
lcall
out
cwtl
jecxz
in
or
popf
add
ja
pushf
add
int3
ljmp
jbe
rclb
xchg
push
push
push
add
pop
out
in
pop
das
sub
test
jmp
adc
outsb
sub
add
cmpsl
icebp
and
sub
xchg
sub
and
mov
and
outsl
add
dec
int3
idivl
adc
sbbb
ficomps
jb
fcoml
sarb
mov
nop
add
jecxz
pop
loope
cmp
imul
movsb
addr16
mov
or
sub
pop
adc
aad
pop
xchg
push
cmp
xor
andb
mov
fadds
ret
ret
push
mov
stc
add
sbb
int
shlb
dec
dec
and
mov
jmp
outsl
xor
pop
and
hlt
xor
out
mov
test
stc
jae
xor
sbb
lds
mov
push
hlt
dec
shlb
stos
jecxz
clc
mov
test
pop
xchg
test
scas
jle
loop
mov
add
mov
adc
outsl
xchg
repz
push
mov
mov
into
xlat
das
mov
shrb
sub
jmp
mov
push
enter
sti
push
mov
adc
dec
push
sub
fwait
mov
mov
clc
sub
inc
mov
sub
sub
jmp
jmp
dec
inc
repnz
sbb
cmp
jbe
cmp
push
or
movsl
mov
vmptrld
pop
popf
loope
aam
test
int3
adc
pinsrw
fcomps
adc
dec
std
jne
stos
es
mov
andb
pop
cli
cmc
inc
cmpsl
data16
loopne
jp
imul
jmp
lahf
inc
jl
stos
jp
fisttpl
stc
inc
aad
in
dec
or
test
and
push
cwtl
mov
icebp
or
and
frstor
adcb
mov
sbb
std
xchg
push
dec
push
push
cli
pop
jnp
or
sub
cmpb
mov
or
subb
cmp
sbb
jne
imul
stos
dec
rol
jp
sub
mov
in
mov
cmpsb
mov
es
sbb
add
jno
inc
xchg
incb
jae
cmpb
mov
jg
add
xchg
in
xchg
xor
fisttpll
xchg
scas
add
cli
jge
adc
xchg
xchg
mov
or
push
sbb
int3
mov
add
push
ds
fsubp
xchg
call
pop
pop
mov
cs
sti
inc
xchg
push
adc
ret
sbb
scas
pop
sbb
in
pop
int3
fisubs
popa
out
push
adc
adc
mov
dec
or
mov
jns
jmp
fnstcw
cmpl
sbb
out
dec
ss
aad
xor
shll
and
nop
imul
iret
inc
into
or
adc
push
pop
mov
inc
and
push
scas
or
mov
sub
lcall
jecxz
inc
out
imul
fisubl
jmp
adc
pop
inc
cmp
outsl
shlb
xor
notl
movsl
sbb
adc
ja
or
mov
outsb
fs
add
data16
sahf
jns
fstps
xchg
call
lret
add
popa
sar
add
or
xchg
neg
fdivl
mov
lds
aaa
mov
xchg
clc
fwait
add
addr16
cmp
pusha
dec
or
outsb
jbe
pop
sub
enter
push
push
or
icebp
fstpt
cmp
jae
out
add
sbb
mov
outsl
mov
cltd
inc
repnz
in
xor
pop
in
sbb
movhps
leave
dec
or
pop
mov
lock
mov
adcl
clc
int3
ret
inc
int3
xlat
push
sarb
xchg
jge
aam
test
daa
cmp
sarb
scas
insb
sub
subl
rclb
movsl
add
cmp
mov
iret
call
sahf
dec
dec
add
jp
adc
xor
in
push
lret
bound
jo
cmp
sub
fdivs
and
pop
push
es
dec
sbb
int3
dec
pop
scas
and
add
add
ljmp
lds
push
fiaddl
rorb
mov
inc
mov
pop
push
mov
lret
dec
mov
ror
add
loopne
ljmp
mov
jl
jo
iret
push
fs
mov
ret
repz
fiadds
mov
test
mov
add
push
xor
mov
mov
cmpsb
fdivrs
fidivl
out
cmp
or
jg
and
imul
add
aad
ret
jmp
sub
mov
xchg
add
stc
psllw
mov
test
push
mov
pop
pop
out
lods
mov
fldl
stc
pusha
dec
in
lods
enter
dec
lahf
cli
nop
out
pop
mov
xadd
sub
add
cmp
mov
xchg
xor
arpl
jle
mov
cltd
cmp
rclb
ficomps
cmp
adc
mov
push
sti
xor
imul
sti
fucomp
mov
es
inc
mov
lret
dec
mov
shl
mov
fildl
je
loopne
push
jl
ds
lods
pushl
mov
stos
or
out
bound
cmova
ljmp
lret
push
lea
jo
adc
mov
pop
fmull
insb
iret
insw
das
dec
adc
or
adc
lds
add
sub
xor
dec
push
sub
test
insb
lock
and
outsb
push
gs
add
add
jle
test
addr16
cmp
xor
xor
movsb
jns
jmp
pop
rcrl
pusha
arpl
mov
inc
test
lret
out
lret
jp
in
je
ljmp
mov
bound
inc
jns
add
pop
push
nop
sub
ljmp
std
pop
insl
and
cmp
sub
jl
sahf
and
sbb
xchg
inc
arpl
lock
movups
jmp
jge
mov
lea
adc
inc
popl
cmp
xchg
leave
stos
int3
or
mov
arpl
xlat
in
aas
mov
out
popa
and
push
stos
adc
ret
pop
dec
icebp
fistl
jno
pop
xchg
popf
mov
cwtl
inc
fsts
mov
jb
rcll
movsl
ds
pushl
aaa
dec
cmp
pop
lahf
imul
insb
test
adcl
pop
dec
pop
dec
pushf
dec
test
push
dec
cmp
popa
rol
push
add
movsb
ss
or
movsb
add
ja
xor
cmp
mov
clc
shrl
sahf
das
call
cmpsb
or
jmp
xor
xchg
out
scas
xor
push
sub
xor
inc
jo
mov
and
mov
loopne
sub
or
mov
adc
sbb
popa
dec
mov
mov
pusha
les
xor
jmp
ljmp
push
std
lcall
fadd
fwait
dec
push
adc
push
inc
fmuls
push
xchg
cmp
xchg
divb
adcl
jo
xor
iret
stc
inc
or
push
stc
decl
push
loope
dec
fimuls
jns
dec
lcall
mov
test
inc
outsl
sbb
xor
mov
popf
pusha
jns
xchg
push
push
mov
jle
fsts
xchg
rol
xor
dec
stos
mov
xchg
xchg
mov
xchg
repnz
pop
xchg
fsubl
xor
jg
xorl
repz
add
cli
pop
push
push
add
in
jmp
mov
inc
sbb
lahf
pmaxsw
inc
aad
loop
sub
dec
out
pop
data16
mov
dec
sub
mov
sbb
call
mov
or
les
add
dec
push
frstor
push
adc
and
mov
andb
add
add
add
dec
or
mov
push
dec
jae
inc
cmp
dec
icebp
fildl
mov
mov
aam
or
add
xchg
in
popa
fidivs
push
andb
xchg
dec
pusha
inc
mov
adc
adc
or
inc
lds
mov
sub
sahf
push
fistpl
push
popf
aam
int3
inc
insl
push
lahf
mov
neg
mov
repnz
adc
repnz
andb
inc
push
out
fimull
loope
nop
sbb
xchg
mov
cmpsl
out
adcl
jae
sub
sub
scas
cli
lcall
outsb
or
out
cmpsl
jg
mov
test
and
xor
jmp
mov
lret
lahf
adc
rcr
sbb
mov
add
dec
push
xlat
aas
xchg
xor
sbb
fdivr
clc
mov
pop
test
pop
iret
jp
fcompl
testl
setbe
imul
call
les
in
jo
imul
lahf
shll
xor
addb
subb
cmp
and
xchg
stos
adc
lcall
mov
cmp
test
int3
inc
inc
mov
shll
pop
mov
add
fstpt
lret
jnp
into
in
int3
push
sti
or
sbb
xor
test
inc
xchg
in
in
jne
or
rorl
mov
insl
addb
xor
fdivs
pop
mov
xchg
fnstenv
pop
popf
insl
cmpsl
or
adc
pop
add
out
mov
out
pusha
fistl
ret
ficomps
repz
scas
cmp
xchg
clc
lods
sub
in
icebp
or
aad
ret
arpl
test
fs
test
push
cmp
outsl
roll
mov
mov
in
mov
inc
jbe,pt
cmp
push
push
inc
mov
jns
lcall
sbb
and
movsb
mov
adc
cwtl
push
xchg
scas
loop
rolb
jmp
movsb
dec
adc
add
cmpsb
add
lds
mov
movsb
repnz
cli
test
xchg
std
stc
enter
jne
sbb
sbb
out
push
mov
cwtl
sub
ret
and
sbb
ljmp
xchg
ret
xor
add
jns
jle
repnz
shlb
stos
mov
pop
cmpsl
aam
pop
add
mov
shlb
mov
cmpsl
sar
add
sti
test
js
mov
dec
enter
sbb
shll
nop
xchg
jg
add
ja
jnp
or
pop
movsb
iret
xor
leave
push
mov
mov
insl
popa
aad
addr16
jnp
testb
imul
xchg
loope
movsb
pop
push
inc
mov
mov
lahf
adc
mov
push
stos
pop
adc
xor
push
mov
enter
mov
push
push
fld
and
mov
mov
pop
and
mov
xchg
dec
mov
xchg
jmp
add
out
sbb
sub
gs
fnstenv
jne
nop
jno
ret
dec
push
aaa
icebp
pop
pop
mov
das
sub
and
cld
nop
sbb
or
lods
or
inc
mov
test
data16
xchg
lods
movzbl
aaa
add
sbb
jbe
shl
cwtl
pop
push
or
out
cltd
xor
dec
bswap
fs
and
xorl
daa
push
sub
dec
add
sbb
pop
sbb
setl
mov
push
test
xor
enter
aad
psllw
lea
add
xchg
pause
in
pop
outsl
arpl
mov
and
pop
out
push
out
dec
roll
lds
jge
mov
mov
aaa
push
mov
mov
sub
sahf
cltd
test
mov
and
pop
iret
sar
bound
or
fwait
out
stos
inc
xchg
push
mov
es
in
add
pop
push
jge
mov
xor
xor
aas
out
inc
cmc
fsts
lea
sbb
xor
jnp
add
mov
sbb
movsl
aas
out
sbbl
adc
push
jmp
nop
inc
pop
jge
test
cmc
and
dec
scas
fucomi
sbb
and
cmpsl
mov
inc
sub
ret
ja
jns
in
xchg
sub
rcl
daa
and
push
adc
sarb
out
pop
mov
push
sti
lret
frstor
je
xchg
enter
or
push
jbe
jno
pop
push
inc
or
rclb
scas
jbe
test
inc
cmpsl
xchg
loop
push
xorb
aaa
in
cwtl
rolb
hlt
dec
jno
les
popa
sub
mov
dec
mov
mov
mov
mov
or
push
popa
and
dec
insb
lods
add
iret
in
inc
add
cltd
mov
fchs
cmc
mov
xchg
test
mov
cmp
fnstsw
mov
lods
jnp
inc
inc
dec
lods
data16
testl
sub
cmpsl
dec
pop
pop
xchg
jb
or
cmp
fs
cmp
and
dec
mov
hlt
add
pop
popa
call
dec
sbb
fucom
jmp
xor
cmpsl
repnz
fabs
add
xlat
jecxz
repz
mov
sub
int3
pop
push
adc
inc
negb
mov
out
push
mov
mov
xchg
sub
xchg
icebp
push
pop
int3
aam
shrb
sbb
mov
xchg
mov
inc
sub
bswap
push
aas
xchg
pop
fdivr
mov
adc
xchg
dec
mov
sub
mov
stc
and
mov
jno
scas
mov
leave
pop
xor
cld
and
test
or
xchg
dec
pop
pusha
cli
mov
sbb
test
movsb
clc
push
push
or
mov
aaa
jb
sbb
add
and
insl
aaa
jns
pop
ja
dec
adc
pop
add
mov
xor
xchg
mov
cmp
mov
jmp
test
xlat
call
or
push
pop
xchg
in
push
lock
cmpsb
rolb
sahf
pushf
and
shrl
push
cli
fstl
fldt
loope
outsb
sub
or
push
loope
inc
or
jb
mov
adc
push
or
test
cmp
imul
mov
add
jg
cmp
add
loop
xor
cmc
repz
dec
iret
pushf
lods
ret
inc
mov
in
popf
inc
ret
jl
addr16
inc
lods
jbe
cwtl
out
push
mov
jne
sub
jmp
faddp
dec
mov
jmp
int3
cltd
sti
sub
aaa
mov
jecxz
imul
neg
cmp
test
push
inc
sti
cmp
jae
xlat
in
hlt
cmp
cmpsl
outsl
mov
stos
pusha
sub
insl
bound
cmp
sbb
sub
je
jl
imull
lods
ds
pextrw
nop
mov
int
test
enter
sbb
sub
loope
in
pop
fwait
lahf
sarb
ds
xchg
and
sbb
xchg
mov
xchg
mov
add
fbstp
rcr
lock
daa
push
in
hlt
aaa
sub
xor
cmp
ljmp
aas
or
pushf
mov
jae
aas
or
mov
fdivp
imul
lea
loop
mov
mov
out
mov
cmp
cmp
mov
out
lcall
outsb
lea
xchg
je
xlat
and
sub
cli
cmp
gs
cli
dec
xchg
mov
pop
dec
mov
xor
repnz
stc
push
in
ljmp
add
mov
inc
das
add
cs
fs
mov
daa
cli
fdivs
mov
ljmp
aas
scas
xchg
dec
cmp
fbld
mov
iret
sub
loope
int
ja
and
and
mov
xor
jmp
cmp
xchg
add
loope
rolb
sub
arpl
xchg
mov
cmpsb
loopne
xchg
outsl
adc
stc
mov
lock
les
ficomps
ljmp
xor
push
ljmp
fidivrl
fcmovu
mov
jl
loopne
cmp
jge
dec
orb
call
cwtl
fs
xor
sbb
cs
or
imul
sbb
mov
cs
and
aad
ja
imul
stc
xchg
add
push
mov
rcll
das
pop
dec
mov
xchg
into
push
les
push
test
push
mov
outsl
aaa
clc
mov
hlt
jne
add
adc
pop
rolb
mov
int3
and
out
sub
cld
aam
mov
xchg
mov
sbb
stc
inc
sbb
sub
adc
sub
xchg
test
xchg
push
mov
pop
sub
fldcw
xchg
insb
mov
dec
ret
movsl
test
incb
lret
into
sbb
dec
pop
mov
xor
mov
popf
fcmovnb
mov
in
test
mov
cli
add
nop
clc
bswap
sbb
popa
and
divb
aaa
mov
outsl
hlt
lods
dec
fs
sbb
addr16
out
jno
or
mov
out
lods
xchg
and
fxch
xor
fisubl
roll
lret
push
adc
pop
or
or
adc
dec
cmp
pop
push
cwtl
testb
and
insb
inc
jns
add
pop
lahf
aas
push
inc
cmp
out
mov
aas
in
mov
cmpsb
xchg
cmc
out
jmp
pop
out
mov
mov
rcll
pushl
call
pop
push
insb
sbb
mov
or
jg
scas
popa
mov
out
pushf
cltd
inc
mov
clc
loopne
aas
cmp
lret
sti
lds
sub
push
add
inc
cmpb
pusha
es
mov
mov
sub
andb
fistl
fwait
push
cmpsl
loop
mov
or
push
and
gs
nop
adc
aam
pop
xchg
sub
int
mov
push
xchg
push
fsts
push
jp
insl
out
sbb
iret
jg
add
cli
repnz
je
inc
pop
inc
je
repz
bts
mov
aaa
pop
push
inc
popa
int
int
push
adc
mov
mov
out
pop
jl
outsb
xchg
cmp
push
aad
mov
fsub
pop
cmpsb
scas
inc
pushf
mov
sbb
insb
cmc
mov
pop
push
or
pop
jl
mov
imul
adc
xorb
fadds
dec
cmp
fcompl
jae
jns
xchg
pushf
push
cmpsb
lea
insb
inc
pop
cmp
cmc
cmpsl
lret
and
out
sub
les
lcall
push
in
mov
adc
xchg
imul
jp
mov
aad
repz
pushl
mov
push
ficomps
popa
mov
jo
add
sub
clc
pusha
iret
xor
leave
stc
pop
inc
jmp
popa
mov
sbb
rorl
outsl
fimuls
pop
outsb
push
imul
faddl
into
add
dec
fildll
or
ds
inc
pushl
test
sarl
mov
jle
aad
add
add
in
inc
mov
aas
push
inc
in
insl
dec
mov
push
mov
cmp
movb
mov
stos
pop
popf
dec
pop
xor
xchg
push
cld
imul
in
mov
popf
in
addr16
roll
add
imul
ds
mov
jecxz
jo
mov
add
mov
push
or
cmp
pop
imul
pop
adc
test
out
mov
xchg
jecxz
xchg
fdivs
or
sbb
pop
fimuls
stos
sub
es
mov
icebp
filds
dec
mov
int
rcl
lret
push
mull
int
pop
ss
imull
xor
jno
or
or
push
lods
jge
fmuls
mov
cmp
fisttpl
adc
jae
cmp
js
cs
pop
xchg
inc
insl
jmp
mov
icebp
xor
jl
mov
mov
les
das
je
mov
adc
imul
loopne
xchg
nop
in
popf
jecxz
or
insb
cmp
in
mov
sbb
push
sub
rcr
mov
enter
mov
out
popf
pop
dec
stc
cmp
test
aad
sarl
sbb
dec
sbb
mov
fbstp
nop
add
jl
xchg
test
jge
and
inc
sub
jno
ret
pop
lock
mov
cmp
adc
or
cli
fadds
mov
mov
dec
out
lock
in
in
inc
cmp
lret
outsb
fidivs
fidivrs
je
mov
push
cmpl
push
cs
mov
push
repz
jl
cmpsb
outsl
out
mov
loope
std
push
pmuludq
movlhps
push
jmp
out
into
cltd
mov
push
stos
pushf
pop
popf
inc
imul
in
and
jbe
popf
mov
aad
out
ds
and
adc
out
sub
jecxz
push
es
cltd
jbe
cmp
lahf
inc
cmp
xchg
sti
shlb
std
add
or
test
sbb
and
xchg
ror
adcb
or
decb
xchg
inc
pop
push
jb
jns
out
lret
insb
aad
dec
mov
jnp
lods
jno
cli
xchg
fs
jb
push
mov
jl
mov
bound
and
dec
or
outsb
mov
add
xchg
negb
push
pop
fcomps
or
out
xchg
enter
xor
sub
or
test
sub
push
leave
push
pop
rclb
arpl
imulb
add
xchg
pop
adc
insl
lcall
fwait
push
jmp
sub
movsb
es
arpl
add
cmpsb
or
divl
dec
in
cmp
out
movsb
iret
jns
fstl
and
aaa
out
or
add
test
jns
adc
mov
dec
fnstenv
mov
outsb
lods
jb
push
pop
stos
add
push
mov
or
sbb
mov
clc
mov
push
and
fisubs
dec
stc
pop
aam
dec
movsl
add
ret
je
test
jbe
arpl
ljmp
dec
cli
out
push
jae
mov
jno
or
lods
outsb
sub
in
ljmp
fdivrl
icebp
jne
push
mov
fcompl
xor
test
sub
pop
imul
cmpsl
pop
out
test
mov
push
cmp
lret
fs
push
adc
cmp
out
add
out
cmpsb
pop
lret
or
dec
push
test
mov
call
and
addl
cmp
inc
fwait
push
insl
mov
mov
jg
sbb
jne
jbe
or
xor
jb
arpl
ja
clc
sti
and
imull
flds
mov
push
leave
scas
jns
lea
popa
mov
clc
hlt
scas
pop
or
out
mov
rcrb
sub
aas
pusha
aad
inc
lahf
push
rcrl
sbb
inc
std
cmp
mov
addr16
jae
mov
clc
ret
sti
lds
xchg
push
adc
pop
xchg
push
cmp
cmp
aad
mov
mov
sbb
dec
jb
push
decb
iret
and
sub
stos
aas
cwtl
jno
repz
loop
call
mov
sub
into
jno
leave
stc
leave
xor
jg
arpl
lret
jbe
jb
push
push
xchg
jmp
lret
out
in
in
sahf
insb
ret
sti
in
sbb
jbe
stos
xor
mov
jo
in
insb
fiadds
adc
xor
adc
push
rcrl
mov
daa
sbb
sbb
pop
jp
sub
sti
pop
sbb
add
adc
cmpsl
rorl
fisubrs
mov
hlt
mov
xchg
dec
dec
dec
push
inc
adc
xchg
dec
and
loopne
lret
movsl
movsb
sub
push
jns
into
int3
mov
or
push
jecxz
pop
xor
addb
adc
xchg
mov
in
mov
mov
leave
sbb
dec
xor
dec
and
or
add
cmp
sbb
cmc
aas
or
call
loop
fnsave
sbb
stos
push
xor
daa
lret
mov
fdivs
sub
mov
pop
imulb
inc
or
dec
stc
xor
jb
jle
das
es
inc
inc
mov
mov
inc
popf
xor
imul
je
std
inc
rep
enter
xchg
jo
call
stc
repnz
adc
into
adcl
sahf
mov
daa
popa
roll
sub
call
xchg
mov
rolb
or
movsl
sti
test
jmp
xor
test
lock
ss
inc
or
fbld
ds
ret
sahf
bound
adc
jmp
repnz
mov
lods
insl
outsl
cwtl
pop
cs
sahf
test
nop
and
adc
lret
loopne
push
inc
jle
dec
cli
jns
popf
ss
jl
stos
and
bound
xor
xchg
mov
fistpl
pop
cli
add
cltd
push
mov
mov
add
mov
in
pop
fsub
push
lods
add
pop
mov
fstpl
adc
subb
rcrb
clc
into
jns
stc
lods
outsb
adc
cmovle
cltd
xchg
xlat
arpl
fbstp
aas
int
push
push
into
pop
dec
mov
mov
into
cmp
popa
lret
sbb
sub
outsl
int3
xchg
jo
mov
xor
mov
jns
mov
xor
fcmovne
sbb
leave
movsl
sub
mov
cmp
in
call
aad
mov
filds
clc
outsl
pusha
dec
jl
icebp
xor
pushf
xor
push
mov
loope
icebp
add
push
sbb
inc
fldenv
sub
inc
adc
cmp
and
ss
mov
aaa
test
add
lcall
call
test
xchg
jnp
push
ja
imul
rcll
jge
out
insl
mov
inc
lret
test
push
jmp
shrb
jbe
loope
mov
pop
inc
xchg
aad
jg
push
popf
pushl
frstor
and
cmp
mov
popf
out
push
jns
sbb
ljmp
push
leave
xchg
mov
div
adc
fdivs
rol
fimuls
add
xor
lds
clc
nop
pop
mov
add
cmp
ds
lret
rorl
out
fbstp
frndint
fisubrl
data16
popl
ss
xchg
insl
mov
sbb
dec
pop
aam
mov
imul
mov
mov
or
jle
mov
mov
xor
mov
sbb
mov
nop
adc
sbb
or
or
fldcw
loopne
adc
jp
sar
sub
incl
lods
bound
pop
lods
adc
rclb
xchg
repnz
pop
das
lcall
push
jo
mov
or
inc
lds
pop
imul
sub
xor
xchg
xor
xacquire
add
push
jne
xchg
stos
or
cmpsb
xor
fcmovbe
push
aas
inc
jp
test
pushf
pop
shlb
jns
lahf
pop
sbb
loop
aad
std
shr
addr16
inc
push
add
nop
xchg
pop
cmp
ret
rorl
lcall
cmp
cltd
int3
mov
pop
int
out
pop
nop
xchg
movsb
les
aam
icebp
icebp
inc
ss
jns
xor
cmp
fsubl
cmp
movsl
cltd
loopne
daa
loopne
sbb
sbb
test
or
into
sub
cwtl
and
insl
sub
out
xor
jle
adc
add
push
pop
add
imul
jp
fnstsw
pop
xor
cld
pop
jecxz
or
mov
mov
mov
xor
pop
ficomps
stos
movsb
mov
xchg
insb
cld
jb
dec
scas
and
mov
addr16
in
addr16
pop
dec
mov
mov
rol
cmp
test
push
push
dec
ficomps
jae
out
out
jbe
cmp
mov
test
jecxz
cmpsl
mov
sarb
sbb
adc
lret
test
sub
pop
push
mov
dec
push
mov
pop
incl
sarb
jle
jmp
sub
fsubrl
popa
or
cmpsl
pop
mov
sub
xchg
cmp
es
adc
xor
nop
fistpl
jo,pt
xchg
fcompl
fcoml
push
ds
jo
add
sbb
int3
xor
mov
mov
sbb
pop
jmp
sub
push
lret
mov
xchg
push
cltd
jbe
das
inc
jno
popa
xorl
pcmpeqb
negb
adc
xor
std
enter
hlt
or
xchg
cmp
scas
mov
pop
bound
or
mov
or
adc
stc
add
scas
shlb
dec
aaa
jnp
sub
fwait
sahf
lods
icebp
int3
fcoml
jg
jb
xor
mov
in
mov
mov
adcl
sub
sbb
xchg
fnclex
pop
loope
xlat
xchg
rcrl
pop
mov
pop
lea
cmp
dec
pop
and
or
dec
fistpll
inc
lahf
lds
loopne
aas
push
jns
cmp
stc
out
push
adc
or
push
stc
enter
inc
adc
orb
outsb
xor
inc
js
inc
es
fmuls
stc
sub
pop
add
es
and
shl
jno
push
pop
jl
inc
and
mov
lods
xor
add
mov
xchg
sahf
movsb
mov
lods
nop
mov
out
push
call
mov
xchg
inc
das
jno
mov
fcmovbe
lock
pop
fildll
dec
pop
mov
loopne
jg
sbb
mov
mov
icebp
adc
das
lds
add
movsb
jle
aad
xchg
sbb
xor
xor
or
pushf
cmp
adc
pop
pop
movsb
and
push
mov
sub
sbb
fwait
bound
xchg
divb
jnp
mov
test
pop
inc
repnz
ret
imul
pop
jmp
xor
stc
insl
insl
ds
mov
arpl
mov
or
xor
adc
mov
jmp
sub
cs
in
mov
mov
inc
adc
stos
jge
lahf
push
and
cli
jnp
jl
je
cmp
jl
cmp
cmp
mov
inc
lds
sti
test
mov
negb
xor
mov
dec
rdmsr
dec
dec
xor
es
and
dec
pop
dec
cltd
pushf
mov
sub
sub
mov
ljmp
adc
lret
adc
push
inc
mov
aam
arpl
iret
xchg
aaa
mov
mov
loope
cwtl
out
xchg
add
je
mov
aam
incl
out
jnp
pop
xor
mov
bound
push
stc
test
adc
std
test
xorb
stos
fwait
leave
je
lock
aaa
mov
icebp
pushf
test
xor
clc
push
hlt
mov
sub
or
push
sbb
ss
pop
push
push
inc
fmull
mov
adc
xchg
sub
pop
int3
and
xchg
sub
push
xchg
sub
mov
std
xchg
dec
jle
pop
pop
je
icebp
mov
aad
mov
push
ret
mov
out
mov
jne
adc
das
sub
mov
js
dec
data16
cmpsl
lds
push
dec
les
stos
jb
enter
data16
mov
pop
cmp
xor
dec
daa
or
sbb
popa
js
sub
lret
cmp
inc
stos
ret
mov
icebp
add
jbe
dec
cmp
cli
mov
xlat
mov
xchg
mov
add
push
sbb
cli
push
leave
or
jecxz
and
js
cmp
fldt
pop
push
and
fisttpll
mov
out
inc
push
xor
dec
mov
int3
movsl
js
mov
jmp
lea
and
xlat
lahf
mov
scas
aaa
icebp
cld
pop
punpcklbw
and
lret
mov
or
or
cwtl
mov
jecxz
ja
mov
stos
sbb
std
arpl
stos
adc
sbb
xor
push
mov
orl
daa
rorb
fmull
fimull
js
mov
out
lret
inc
jle
leave
pop
fstp
inc
iret
xchg
inc
jle
gs
push
xchg
adc
movsb
add
pop
addr16
cmp
sub
in
cwtl
jg
jae
outsl
cmp
sahf
pop
cs
push
cmp
xor
insb
ss
sub
cmpsl
jbe
push
and
stc
rcll
adc
lock
call
ret
push
stos
nop
call
pop
fldl
ja
insb
pop
adc
push
and
pushf
jle
imul
inc
lea
int
mov
inc
addr16
push
repz
in
addb
mov
rolb
in
les
mov
mov
mov
repnz
sahf
push
push
pop
aaa
mov
int3
push
jmp
xchg
fadd
pop
pop
sbb
jo
andl
mov
aam
je
pop
mov
loop
or
cmpsl
adc
push
push
dec
add
into
mov
cmp
sar
jecxz
xor
popf
push
pusha
cmpsb
mov
push
jle
jae
lcall
pop
xlat
mov
mov
mov
sbb
es
inc
cwtl
xlat
cmp
in
pop
xchg
inc
push
cmc
pop
in
lock
test
std
addr16
insb
pop
sbb
shll
inc
mov
test
mov
outsb
push
outsl
pusha
dec
mull
das
div
push
pop
adc
pop
out
outsb
mov
imul
js
xor
add
jnp
push
push
daa
subl
scas
ret
popa
inc
out
or
mov
leave
mov
dec
inc
fwait
jne
add
fnstenv
cmc
and
pushw
stos
repnz
in
xchg
lret
mov
out
lret
pushf
cmp
daa
mov
mov
xor
push
pop
mov
xchg
and
test
gs
inc
loope
mov
roll
push
cmpl
lar
and
cmp
leave
pop
jno
hlt
out
sahf
ret
loop
hlt
xchg
fsubs
xchg
ljmp
mov
xor
and
xor
lret
xor
and
test
jae
jnp
ljmp
jno
rorl
fsin
ret
xor
or
aas
subb
mov
dec
dec
int
dec
nopl
mov
stc
jb
xchg
push
xchg
test
mov
sbb
repnz
lcall
pop
idivb
fmul
xchg
out
std
pushf
idiv
hlt
lods
loopne
pop
jge
es
lcall
bound
adc
mov
mov
into
stos
imul
aad
fistpll
dec
loope
out
jp
mov
inc
inc
sbb
inc
cmp
fimuls
jecxz
mov
mov
jecxz
lods
push
xchg
pushf
push
mov
xchg
adc
sub
rcll
jo
push
repz
cmp
rclb
es
and
enter
mov
test
loopne
pop
dec
push
ds
inc
lret
sub
in
mov
stos
fbstp
or
cwtl
outsl
xor
add
bound
insb
mov
cmp
popf
lcall
or
pop
add
cmc
fiaddl
and
adc
sub
ljmp
cmpsb
jae
add
xchg
aam
call
pop
in
xchg
add
out
negb
in
ret
int
aas
das
xchg
add
fimuls
sbb
add
sbbl
and
jge
push
scas
ja
shl
rorl
mov
js
mov
lahf
pcmpeqb
cmp
les
jp
bound
push
sbb
lods
mov
pushf
adc
cmp
cmc
inc
aad
imul
mov
movsb
jge
push
push
adcb
adc
or
pop
icebp
mov
push
outsb
jge
cmp
iret
icebp
mov
xchg
adc
sarl
sbb
or
push
outsb
sbb
daa
cmp
push
fimuls
dec
sbb
cltd
cltd
pop
adc
jns
jo
out
stos
jl
ret
push
shll
movl
in
adc
xchg
fiadds
int
sarb
add
adc
adc
stos
add
stos
repnz
pop
jmp
xchg
add
and
mov
xor
mov
add
and
out
arpl
mov
gs
push
lret
out
push
add
dec
push
mov
xor
pop
daa
or
pop
xchg
add
inc
jae
cmpsb
int3
fs
adc
mov
mov
inc
sub
push
adc
inc
cmp
loopne
pop
fcomps
and
lahf
bound
inc
imul
sbb
adc
jae
dec
cmp
jbe
ljmp
push
mov
icebp
xchg
mov
enter
lcall
jne
mov
int3
mov
enter
hlt
pop
outsb
inc
jecxz
lcall
pop
into
jbe
dec
xchg
outsl
mov
dec
std
mov
cltd
int3
pop
jno
roll
xchg
fisttpll
aad
sub
popf
jnp
mov
xchg
insl
mov
test
jne
and
ja
jl
sub
xchg
fwait
incl
cld
loope
mov
mov
div
aam
stc
lret
clc
dec
pop
dec
popa
and
stos
lcall
inc
mov
jecxz
iret
inc
pop
call
xor
adc
popl
dec
icebp
sahf
jmp
push
stc
into
les
inc
les
fimuls
push
cmc
mov
fwait
xchg
idiv
mov
jb
sub
add
leave
cs
or
xchg
arpl
movsl
neg
xchg
scas
mov
dec
sub
jg
xchg
test
popa
mov
or
sub
js
mov
popf
dec
cmpsl
mov
mov
rcr
hlt
jp
xlat
imul
or
push
popa
mov
roll
jle
not
jae
sbb
hlt
insb
fwait
mov
mov
sub
mov
push
sbb
pop
data16
mov
test
add
sbb
mov
dec
mov
mov
ret
call
cmp
jp
leave
cmp
push
cwtl
inc
mov
lret
push
jg
sbb
ss
sti
dec
data16
push
icebp
fucomip
in
mov
dec
ret
fwait
jae
ficomps
jae
enter
daa
cwtl
pop
movsb
inc
inc
or
mov
push
xchg
adc
bound
mov
loopne
stc
or
fs
mov
jbe
jnp
dec
call
in
outsl
xchg
aaa
xchg
fstl
xchg
jle
sub
mov
sub
pop
mov
call
jno
out
xchg
cmp
repz
sbb
push
lock
sbb
jns
loopne
cmp
cmc
and
sub
cmpsb
inc
divl
lds
adc
adc
daa
sub
cmpsl
es
xchg
in
xchg
add
aaa
adc
xchg
xchg
and
jge
mov
test
in
add
xchg
adc
cli
dec
mov
or
imul
stos
loop
sub
xor
mov
jg
jmp
cmp
and
adc
pop
sub
sub
out
movlhps
icebp
das
in
cmp
outsl
push
loop
ja
mov
inc
fidivrs
mov
ftst
mov
popa
es
adc
into
pop
insb
in
test
jp
mov
das
jo
test
in
or
sub
lcall
scas
leave
add
sbb
lods
jne
mov
je
shlb
scas
cmc
filds
mov
repnz
popa
adc
pop
mov
adc
stos
sbb
inc
jnp
jle
pop
inc
stos
inc
cmp
sub
xchg
outsl
out
arpl
aad
pop
pusha
iret
xor
fisttpl
cmp
test
mov
lds
push
test
and
xchg
xor
ret
test
push
shrb
sub
mov
cmp
into
mov
sub
aam
cmp
fldenv
and
loope
aaa
ja
push
mov
and
aam
mov
mulb
cltd
jnp
dec
daa
sahf
pop
jle
mov
popa
pop
mov
sbb
fiaddl
mov
lds
mov
push
xchg
int3
adc
pusha
mov
sub
adc
mov
dec
dec
les
cltd
xchg
mov
mov
add
loopne
mov
sbb
push
xchg
inc
xor
jno
pop
and
or
cmpsl
xchg
adc
jbe
jnp
adc
mov
sbb
jecxz
pusha
push
push
int3
and
inc
sbb
daa
and
adc
pop
mov
daa
pop
cwtl
fidivrl
xlat
jle
out
add
mov
xor
std
pop
sbb
inc
aam
mov
xor
mov
inc
stos
in
out
mov
rclb
mov
push
daa
mov
daa
pop
xchg
aad
lcall
fstp
pop
outsl
mov
pop
lahf
movsb
xchg
mov
pop
mov
popf
out
mov
cwtl
xchg
push
les
inc
add
jmpw
les
pop
addb
lods
sbb
scas
sbb
jle
cwtl
std
insl
arpl
outsl
sti
push
or
xchg
cs
mov
jecxz
mul
in
cmp
pop
and
fdivr
push
jge
cld
negl
ja
out
sahf
scas
xchg
lods
sbb
lds
aam
mov
fists
adc
cmp
addl
mov
mov
adc
into
lods
ret
aas
mov
dec
sbb
push
dec
movsb
jle
pop
jge
and
xchg
das
push
icebp
cltd
ss
aad
sbb
push
std
shrl
cmp
mov
int3
or
popa
push
notl
lock
scas
push
pop
jo
scas
mov
sub
ss
fisttpl
inc
addb
test
iret
mov
lahf
jp
dec
push
and
shr
sbb
test
stc
lods
and
xlat
aad
mov
mov
loopne
ja
cmp
or
dec
jne
mov
adc
stc
adcb
inc
adc
icebp
push
shll
test
loope
fmul
loope
lret
or
or
je
or
mov
mov
xor
daa
mov
xchg
cwtl
mov
mov
xor
iret
aam
mov
dec
push
cmp
adc
popf
scas
test
cld
push
cwtl
cmc
or
testl
pop
xchg
push
fwait
mov
add
scas
mov
rol
cli
test
repz
clc
out
out
sub
adc
movsb
push
dec
sbb
in
mov
dec
div
scas
mov
or
mov
enter
cli
push
mov
push
fsubl
ret
mov
aam
push
push
adc
mov
mov
adc
xchg
outsl
mov
arpl
cltd
addb
jno
xchg
sub
push
push
in
add
std
mov
or
lods
mov
test
pop
sub
mov
arpl
xchg
and
in
pop
pop
inc
mov
xchg
insb
fsts
cmp
cmp
mov
xchg
dec
sub
std
enter
repnz
xchg
xor
rorb
jge
fsubrp
pop
sub
mov
mov
in
cwtl
mov
cmp
pusha
sbb
and
inc
lds
ljmp
cwtl
je
fisubrs
std
adc
mov
arpl
or
xchg
inc
xchg
or
mov
push
mov
jge
out
jmp
mov
movsl
insl
insl
fcmove
pop
push
push
mov
inc
add
inc
pop
jno
inc
xorl
hlt
push
pop
jp
or
jo
aad
orl
sub
cmp
lods
jge
pop
cmp
movsl
cwtl
clc
sub
mov
or
clc
add
imul
xchg
aad
loope
add
or
rorb
test
mov
mov
jnp
mov
mov
repz
jne
out
sub
fwait
sub
pushf
sbb
enter
mov
cmp
cmp
int
imul
push
and
jge
mov
mov
sarb
in
mov
jbe
xchg
xor
xchg
ret
xor
add
out
and
jns
mov
popa
bound
repz
adc
out
adc
insl
jg
call
add
and
inc
out
loope
leave
xchg
sub
outsl
add
mov
jge
cmpl
cmp
clc
sub
ret
notb
xor
cmpsb
std
push
jb
sub
out
sbb
xor
aad
mov
ljmp
das
arpl
mov
addr16
jbe
sbb
lods
push
cmc
fdivr
inc
lcall
clc
js
scas
or
out
shll
mov
add
mov
push
inc
ror
repz
call
loop
outsl
pusha
pop
cltd
cltd
out
ret
aam
jne
adc
xchg
cmp
push
mov
cmpsb
incb
cmp
and
mov
ss
mov
xchg
test
mov
mov
mov
jp
mov
add
lahf
jns
push
fwait
subl
insb
imul
aaa
repz
cld
pop
sbbl
loop
adc
dec
pop
mov
cmp
je
inc
call
inc
clc
pop
mov
push
cmp
lods
mov
mov
inc
xchg
sub
outsb
imul
adc
or
scas
addr16
xor
xchg
out
jge
outsl
pop
xor
pop
sub
clc
push
aam
fimuls
cmp
mov
stc
mov
sub
mov
push
call
add
fsubl
es
rclb
cmp
push
mov
test
mull
out
cmp
scas
add
jmp
in
cltd
das
mov
subl
ret
sbb
dec
es
mov
cltd
and
dec
add
cld
sti
push
sbb
loop
sarl
hlt
cwtl
add
push
lods
sbb
ja
movsb
xchg
scas
mov
test
fisubs
jbe
xor
mov
and
and
inc
aad
xchg
mov
test
xchg
mov
mov
dec
and
adc
push
or
in
add
cmpsl
cwtl
lods
xchg
std
in
jno
add
popf
xchg
sbb
loop
or
push
jno
pop
xor
addr16
lcall
add
cmp
sub
sbb
ljmp
add
xlat
and
inc
iret
jp
ret
stos
add
mov
xor
and
or
mov
mov
jno
pop
mov
test
adc
adc
or
inc
mov
jg
xor
icebp
mov
push
sub
fbld
enter
int
sti
pushf
scas
loope
sbb
les
nop
or
sti
mov
mov
lods
pop
ret
loope
add
xor
sub
fwait
mov
cmovae
out
mov
mov
in
sub
in
sub
mov
adc
push
lock
push
mov
imul
xlat
mov
rcrl
enter
cmp
cmp
fstps
sti
xor
cli
jecxz
dec
cmp
ret
es
push
fnstsw
mov
adc
call
cs
test
pop
cld
ljmp
in
add
lods
push
in
test
decl
add
pusha
xlat
jne
jl
jmp
sbb
mov
mov
inc
pop
pop
pop
lds
cmp
clc
and
cmp
xor
mov
in
gs
inc
cld
imul
mov
lea
xchg
sbb
incb
les
push
outsb
ja
or
icebp
mull
inc
push
add
imul
inc
push
pop
xlat
test
adc
aad
mov
cmp
mov
imul
pop
movsb
iret
ljmp
bound
lds
push
pop
mov
sub
arpl
xor
sub
lock
mov
je
mov
lock
js
dec
fiadds
sbb
in
iret
mov
nop
clc
shll
mov
loopne
cli
cmpsb
stos
in
shlb
xor
mov
pop
movd
or
fnstenv
and
leave
dec
imul
sub
or
popf
scas
push
icebp
mov
jecxz
mov
sub
jmp
lods
jbe
insl
sub
push
push
aas
sub
ret
inc
loop
add
movups
outsb
mov
jp
in
jne
xlat
jns
sbb
adc
mov
push
lods
int
push
jae
lods
cltd
inc
push
dec
pushf
jns
stc
push
test
mov
fisttpl
clc
jae
mov
sbb
sub
lods
outsl
xor
dec
push
mov
imul
stos
loop
lret
daa
dec
dec
and
sbb
int
ds
push
lahf
dec
xchg
push
inc
test
dec
es
leave
sub
imul
add
xor
stc
adc
xor
rcl
push
mov
ljmpw
mulb
dec
neg
dec
insl
sbb
call
push
pushf
sub
mov
stc
lods
stc
adc
pop
mov
mov
cmpsl
iret
mov
inc
lret
adc
adc
test
mov
pusha
daa
cmp
subb
dec
repnz
inc
fwait
mov
jb
xchg
jbe
add
sbb
fstpl
rorb
xchg
subl
pop
repz
mov
data16
ficoml
sahf
mov
mov
testb
xchg
mov
clc
xchg
add
insl
out
stos
repnz
or
test
movsl
test
les
cmp
dec
ds
fcom
stc
cmp
xor
daa
jae
adc
fwait
mov
mov
das
jg
jl
es
insb
add
pop
jae
cmpsl
xlat
lret
sbb
in
add
sub
push
outsl
adc
data16
or
jg
pop
jp
jge
mov
mov
add
in
sub
mov
add
mov
loopne
lods
and
lea
jp
das
pop
out
xor
or
das
mov
xchg
lock
sahf
and
xchg
pop
insl
mov
loopne
sbb
cmp
mov
sbb
add
pop
fbld
push
push
inc
fs
loopne
sub
sbb
cwtl
xchg
inc
in
test
inc
pop
sub
sahf
lods
cmp
and
inc
sub
sahf
ficoms
cmp
rcr
pushf
dec
lahf
or
mov
leave
inc
jl
addb
scas
mov
mov
les
push
out
aad
iret
mov
test
xor
xchg
stos
or
jg
xor
add
or
mov
dec
push
add
mov
push
ss
or
pop
shlb
aas
push
mov
push
sub
loopne
into
loope
cwtl
mov
push
outsl
sbb
sbb
inc
in
rcrl
mov
and
adc
repnz
fcoms
sub
ja
mov
hlt
pop
in
orb
push
xor
fucomip
out
ret
stos
test
mov
xchg
jo
enter
roll
add
inc
in
test
mov
in
movsb
or
ret
mov
shlb
fdivrl
cmpl
mov
sub
or
fimuls
mov
and
cmpsl
mov
mov
addl
pop
cli
bound
stc
xlat
bound
pop
in
js
jnp
xor
adc
dec
sub
loop
insb
sub
pop
push
cwtl
stc
mov
out
aam
out
pop
ja
imul
jne
packssdw
daa
cmpl
data16
mov
stos
pop
jno
jp
mov
fs
add
loope
leave
jo
outsb
inc
mov
push
or
sub
dec
in
fistpll
cmp
into
mov
adc
jmp
xor
mov
dec
pop
adc
stc
subl
fistl
or
cmc
std
cld
and
push
sub
std
sbb
mov
cmpsl
shl
dec
popa
cltd
dec
mov
pop
jg
insb
icebp
jmp
cmpsl
fistl
mov
add
dec
dec
xor
add
push
fdivs
orl
sarb
dec
inc
pop
cltd
es
jge
fisubs
mov
js
ljmp
dec
or
popa
pop
lahf
jb
cmp
dec
sbb
fwait
ret
cs
pop
jmp
mov
fsubr
lods
sbb
dec
cmp
mov
jecxz
outsl
jo
mov
mov
adc
in
jg
ja
fst
adc
shll
fnstenv
int
lods
cmp
jg
mov
repz
shlb
scas
pop
loope
push
and
ret
mov
sti
outsb
cld
push
test
add
inc
icebp
add
xor
add
insb
bsf
or
es
addl
loop
addr16
and
jne
mov
fdivp
outsb
shl
in
push
sub
pop
hlt
and
stos
mov
inc
iret
insb
cmp
aas
enter
fsts
adc
nop
xchg
lea
aas
je
in
movsb
cmp
jecxz
ja
cmp
jne
int
loopne
dec
icebp
fildll
jbe
jecxz
mov
inc
and
xor
xchg
out
jno
xor
inc
lods
in
in
and
aas
dec
mov
adc
outsl
out
lods
cmp
stc
cmc
sbb
scas
loope
inc
sarb
loop
push
aad
enter
dec
mov
jp
xchg
dec
inc
and
push
div
jle
shrl
addr16
inc
inc
inc
jl
xchg
push
aad
sbb
pop
add
out
mov
cmpsb
sbb
jmp
pop
add
jne
mov
rol
inc
inc
addb
lods
adc
iret
je
lock
add
gs
outsb
fsubrp
aad
pop
outsl
xchg
push
jo
push
insb
jl
lret
cld
sahf
adcl
andb
adcl
out
mov
aam
cmp
int3
or
push
cmpsb
jb
into
pop
insl
sbb
outsl
scas
pop
fs
xchg
sbb
sbbb
cmp
cli
int3
aaa
mov
ret
lods
jb
adc
sbb
repnz
jp
push
addr16
shrl
xor
mov
adc
mov
xlat
cwtl
icebp
pop
cli
pop
jge
fsubrl
mov
mov
icebp
push
cmc
xor
dec
cmp
repz
sub
cmpsb
rol
mov
aad
out
int
adc
adc
int
out
js
repnz
pop
add
xor
cmp
jg
add
pop
push
adc
cmp
inc
int3
sarb
mul
mov
mov
es
jne
stos
pop
pop
cltd
rcrl
push
add
pop
jp
popa
dec
pop
xor
and
xchg
imul
stos
fsubrs
repnz
enter
int
enter
dec
pop
out
rclb
movsb
repnz
int
add
cs
xlat
mov
idivb
hlt
lret
xchg
std
xor
jae
jnp
add
mov
xchg
cmp
inc
jmp
in
pop
or
lahf
std
mov
or
xor
enter
mov
xchg
pop
and
xchg
sub
jo
insb
jge
pop
pop
push
xorl
rcl
jno
stos
mov
sbb
hlt
paddusw
push
ret
push
inc
fisttpll
cmp
push
add
icebp
jnp
sub
leave
frstor
lock
ljmp
mov
dec
out
dec
call
test
sbb
enter
sahf
sarl
jb
lds
mov
and
cmc
push
push
mov
shll
les
or
fwait
hlt
and
sbb
dec
or
and
pop
dec
push
push
adc
sarl
lds
outsb
or
push
js
xchg
pop
roll
mov
ret
pop
push
mov
scas
dec
xchg
daa
xchg
lcall
inc
mov
add
inc
mov
and
sbb
std
sbbl
orl
ljmp
mov
sub
loope
stos
inc
mov
sbb
ds
gs
xlat
inc
cmpb
loop
pop
lahf
or
shr
inc
xor
mov
into
mov
je
adc
loope
mov
lret
movsb
js
and
mov
mov
mov
aaa
sbb
adc
push
mov
test
test
inc
mov
sbb
cmp
jne
rcll
xchg
sub
sbb
xlat
fld
je
mov
pop
adc
fdivrp
btr
cld
lods
ds
push
jns
test
ja
adc
and
and
imul
das
xchg
push
or
imul
sub
cmp
loope
mov
inc
lcall
pop
andl
cmp
imull
xchg
push
std
js
jns
imul
cwtl
mull
xor
jmp
sahf
test
aam
shlb
sbb
push
int
pop
int3
jg
cwtl
jge
stc
inc
sbb
loopne
iret
mov
dec
daa
sar
cltd
jmp
push
pop
mov
lcall
jmp
dec
jmp
inc
lret
mov
movsb
and
not
lcall
call
fs
mov
std
push
out
or
ljmp
stc
mov
mov
mov
pop
int3
je
mov
ljmp
cld
out
add
fnstcw
repnz
fsubs
movsl
push
shlb
add
sbb
sahf
out
outsb
imul
inc
add
pushl
pop
ret
clc
ficoml
xlat
leave
push
pop
push
into
push
mov
out
mov
fsts
adc
and
and
adc
gs
jecxz
enter
call
ja
stos
or
mov
sub
push
cmp
sbb
jecxz
push
add
out
dec
rcll
mov
outsl
cmp
leave
sahf
mov
xchg
cmp
adc
sub
pop
add
daa
jmp
push
test
mov
and
jg
dec
fldcw
dec
fstpl
mov
das
popa
dec
sbb
fwait
repnz
ficompl
nop
xor
inc
int
call
mov
add
lock
lcall
je
mov
pop
outsb
pushf
mov
loope
cmpsl
mov
mov
nop
mov
lods
pop
sbb
xchg
test
gs
cmp
xchg
mov
sub
jne
mov
jnp
test
in
sbb
mov
push
dec
xchg
in
movsl
adc
push
fstpl
mov
dec
push
sbb
pop
ds
inc
xchg
cs
jae
mov
out
xor
in
pop
lahf
inc
sbb
cwtl
arpl
mov
inc
and
add
loope
xchg
andl
aam
aaa
and
ds
ret
imull
out
xchg
int
add
mov
cmp
repz
xor
and
hlt
dec
mov
int
imul
push
negl
cmc
popa
xor
mov
fisttpll
into
es
mov
loop
adc
ja
xor
ret
in
nop
clc
arpl
or
mov
jecxz
pop
mov
jae
gs
adc
mov
popf
push
loope
fiadds
dec
mov
jecxz
xchg
jp
cmp
mov
pop
decl
repnz
std
pop
lds
jne
xchg
and
xorb
out
arpl
cmpsl
dec
lahf
stos
inc
and
or
popa
xor
movsb
stos
mov
xor
push
sarb
je
pop
into
sub
jne
xor
dec
xchg
sub
mov
movsl
pop
les
push
add
pop
test
push
jb
dec
jbe
xchg
fildl
into
jle
movl
hlt
ficomps
inc
sub
mov
push
or
inc
ja
cmp
cmp
lahf
das
xchg
jmp
inc
das
mov
test
addr16
push
neg
pop
icebp
xor
adc
outsl
sbb
push
fs
and
in
pushf
mov
leave
push
call
push
je
fldenv
test
xor
lods
cmp
pop
notb
dec
test
sbb
or
loopne
xor
mov
xlat
jge
jbe
das
inc
or
xchg
pop
sbb
sub
xchg
lcall
adc
mov
test
inc
add
pop
jmp
cs
test
cmp
daa
adc
cmp
mov
xchg
mov
mov
scas
out
ret
mov
push
lret
bound
cmp
shlb
dec
hlt
icebp
mov
xchg
sub
mov
daa
loopne
les
test
lods
sbb
adc
mov
scas
cmpsl
dec
cs
lcall
dec
data16
popa
outsb
add
push
jecxz
call
sbb
pop
aas
scas
andb
cmp
push
push
movsl
jns
in
sti
pop
into
dec
fldenv
insb
dec
test
out
loopne
cmp
cmp
shl
sub
in
out
pop
rolb
mov
js
imul
pop
pop
movsb
pop
mov
cmp
scas
sahf
mov
inc
sbb
sub
loop
xchg
cmpsl
xchg
cltd
inc
rcrb
rorl
movsl
dec
je
adcl
outsl
clc
sub
rorl
iret
scas
out
cmp
jmp
xchg
inc
mov
mul
and
xorl
cwtl
dec
push
nop
ret
lods
adc
inc
hlt
jmp
stos
shlb
and
les
sub
mov
inc
faddp
mov
sbb
icebp
lret
mov
loopne
test
xor
movsl
xchg
dec
addr16
lea
pop
dec
lret
lock
mov
mov
push
xor
mov
push
and
sbb
dec
dec
sbb
cmp
mov
or
dec
pushf
dec
cld
gs
dec
add
stos
jnp
popa
stos
jne
sti
icebp
insl
lahf
pop
push
and
adc
ficompl
lea
mov
and
mov
into
mov
mov
cmpsb
dec
scas
sarb
ds
insb
inc
jp
insl
rep
adc
xchg
sub
testb
cli
pop
sti
es
xor
cmp
jmp
inc
addb
jns
daa
xor
movsb
jmp
xchg
cmpl
mov
add
rdtsc
fsub
xchg
cmp
jae
orl
jg
cmc
mov
int
shll
and
loope
mov
xor
ret
ss
or
mov
ja
lea
fwait
stos
add
jecxz,pt
cmp
aad
popa
lods
stos
xorb
sarl
xchg
es
sbb
jae
inc
mov
dec
mov
push
mov
aad
mov
jo
push
adc
test
inc
in
ret
xor
je
adc
add
jmp
sub
inc
dec
mov
mov
mov
popf
add
out
or
and
xchg
pop
xchg
imul
iret
push
cmpsb
ret
faddp
inc
mov
sbbb
icebp
lods
aas
sti
push
arpl
fwait
mov
mov
addr16
les
mov
push
jmp
jle
mov
sub
sub
repnz
dec
pop
cmp
js
hlt
clc
inc
sub
cmpsl
jno
xchg
and
shll
test
dec
mov
enter
sub
add
stos
jmp
and
push
mov
movsb
psrlw
mov
sbb
xchg
mov
inc
lea
inc
xchg
adc
sbbb
inc
add
push
mov
sbb
add
mov
mov
mov
dec
dec
rcll
stos
push
in
mov
test
es
mov
out
lret
inc
sub
hlt
fadds
jl
jo
cmpsl
sub
push
data16
test
jno
and
xor
push
push
push
sbb
nop
pop
xchg
jae
or
out
mul
cld
dec
mov
cmp
and
loope
mov
cmp
sbb
cwtl
enter
rclb
pop
sahf
negb
rclb
movsb
or
es
lds
dec
pop
mov
ds
xchg
lret
test
mov
cltd
xchg
ret
mov
cmc
sti
shlb
xor
inc
xchg
mov
insb
inc
sbb
movsl
add
ret
cmp
cmp
jns
lods
mov
sahf
pop
mov
cmpl
jae
sti
dec
push
xchg
loope
out
imulb
hlt
dec
mov
xchg
mov
je
lcall
shrb
dec
les
iret
inc
dec
cmpsb
rolb
ljmp
adc
push
mov
rcrb
icebp
cs
jle
cmpb
mov
jg
add
xor
cmp
jbe
cmp
imul
ror
and
jg
jp
pusha
adc
or
xchg
arpl
xlat
push
jmp
ja
xor
sbb
cwtl
lods
and
fisubl
push
inc
xchg
push
add
call
scas
outsl
inc
in
int
shl
movsb
adc
les
lods
cmpsb
xchg
add
ds
push
push
fsub
sub
inc
and
inc
inc
test
sti
sub
mov
call
ja
stos
mov
cmc
jmp
xor
test
in
xchg
stc
pop
sbb
xor
dec
jle
mov
rcll
and
mov
popf
push
arpl
dec
dec
dec
aad
inc
in
jae
test
loop
clc
jo
cmpsb
sbb
inc
fcmovu
sub
jb
pop
cmpsl
fsubl
stos
inc
iret
push
je
or
cmp
gs
jns
cltd
outsb
in
repnz
fs
xor
jle
push
xchg
sahf
xchg
das
mov
sti
xchg
xor
cwtl
test
jecxz
xor
cmp
jne
in
movsw
push
sahf
ret
fs
pop
xchg
sbb
in
xlat
mov
fwait
jle
loopne
mul
or
pop
inc
nop
lods
jae
scas
push
js
fs
das
stos
lds
popf
mov
arpl
in
jg
mov
sub
jae
sbb
push
insb
or
xchg
fwait
cld
bound
in
xchg
sub
xor
ss
mov
lds
out
arpl
aas
pop
sub
fisttpll
outsb
gs
cs
push
sahf
shrl
test
pop
ljmp
pop
std
mov
rcrb
loop
fimull
mov
add
inc
cmpsb
dec
cmp
rcrb
mov
add
mov
sbb
xchg
push
push
xchg
lcall
inc
jle
mov
fnsave
lock
mov
test
shll
xchg
lock
mov
add
lds
and
aaa
pop
scas
into
ds
iret
fcmovbe
in
inc
push
and
xchg
add
mov
in
lods
out
aas
lock
jecxz
aas
pop
cmp
loop
push
aam
cmpsl
cwtl
fidivs
rolb
jecxz
arpl
push
ja
xor
scas
loop
movsb
pop
sub
mov
out
jle
in
mov
xchg
int3
or
mov
cltd
mov
ds
cmpsl
push
mov
pop
push
movsb
pusha
xchg
and
push
adc
jge
mov
test
mov
hlt
ja
inc
daa
pop
mov
outsl
bnd
bound
mov
pop
push
lahf
or
mov
or
xchg
jl
jge
jl
fwait
testl
insb
mov
xchg
aad
add
inc
add
mov
hlt
ret
fnclex
popf
push
pop
call
xor
aaa
in
lcall
adc
andb
cmp
movsl
xchg
je
loop
mov
fdivs
and
pop
mov
sbb
ss
or
aas
lret
cmpsl
xchg
xor
adc
jl
mov
and
movsb
push
adc
push
lds
adc
pushf
mov
sub
stos
ds
or
xchg
mov
idiv
sub
out
lock
xor
cld
xor
pop
mov
adc
jle
das
mov
mov
pop
stos
cmp
fwait
xor
out
add
orb
sbb
add
ret
jo
jecxz
ret
pusha
pushf
push
mov
insl
mov
sbb
pusha
mov
lods
sbb
popf
xchg
cmpsl
or
aad
and
cmc
jmp
vcomiss
adc
sar
popf
shlb
add
jo
dec
pop
dec
fisttpll
jo
push
bswap
ret
pop
ret
test
add
sbb
push
lcallw
arpl
sti
dec
repnz
mov
js
arpl
pop
inc
inc
int3
imul
jecxz
pop
mov
jne
test
jecxz
cld
ss
lods
cmpsb
pop
aas
inc
push
insb
xchg
and
sbb
dec
pop
stc
ret
addr16
sti
cs
outsl
pop
nop
mov
stc
sub
sub
pushf
pop
aas
fnstsw
std
mov
repz
cmp
jns
inc
rolb
scas
xor
cmp
arpl
repz
xchg
inc
mov
or
pop
mov
inc
xor
sar
hlt
fisttpl
push
push
clc
xchg
mov
out
xorb
sub
sbb
imul
mov
es
and
push
push
adc
inc
inc
sbb
mov
test
cld
jl
hlt
out
pop
jp
cmp
xchg
fcom
xchg
call
cmpb
movsb
inc
adc
or
test
shll
cltd
std
iret
addb
lcall
sub
pop
lret
mov
out
das
pop
pop
or
jno
add
test
fldcw
jbe
inc
scas
jbe
mov
lret
push
lea
dec
loop
jp
ror
mov
sbb
push
add
jmp
push
ja
clc
aas
push
and
push
out
insl
xor
xchg
aad
push
push
jl
gs
pop
push
fs
jnp
mov
mov
insl
push
sub
addr16
div
push
clc
das
aam
push
lahf
pushf
xchg
stos
dec
sti
add
cmp
in
das
and
orb
and
inc
test
xor
data16
inc
inc
cli
mov
daa
pop
mov
mov
imul
pop
lea
shl
xchg
call
mov
outsl
aam
js
fidivl
mov
push
push
ret
sbb
sbb
movsb
xchg
cltd
loop
lock
call
iret
ds
jecxz
jb
jbe
outsl
stc
fs
mov
movsl
loope
daa
rol
dec
test
and
fisubrs
out
fadds
push
add
add
nop
xor
enter
mov
mov
rorb
jmp
jae
xchg
mov
fcoms
rcll
aam
xchg
xchg
pop
bound
mov
jnp
out
jo
mov
mov
xor
or
stos
cmp
or
lret
adc
pop
mov
inc
popa
sub
xchg
shlb
fsubrl
lds
ja
or
inc
ds
jge
pop
add
cmp
movsl
dec
sub
sub
lcall
neg
mov
std
mov
lea
test
or
jb
push
mov
insl
add
lret
ret
pop
movsl
push
subl
orb
and
mov
sbb
inc
jge
icebp
mov
mov
mov
cmp
mov
imul
movsb
jge
mov
test
jl
out
cmp
fcompl
add
outsl
push
out
aas
add
leave
cltd
icebp
lcall
mov
or
jb
in
xchg
mov
test
dec
push
out
xchg
daa
inc
subb
lret
pop
inc
sbb
mov
imul
lret
je
gs
dec
test
dec
push
sbbl
jns
dec
cwtl
and
cmp
fwait
adc
fwait
cli
pop
addb
sbb
fmull
bound
mov
imul
mov
loop
mov
insl
push
push
fucomip
ret
in
ret
push
pop
movsl
nop
and
add
cmpb
sbb
movsb
xchg
cwtl
jnp
lods
mov
mov
sub
stos
aam
mov
xor
int
xchg
sub
into
cmp
shll
adc
adc
mov
mov
fcomps
out
pop
pop
dec
shl
sub
sub
mov
inc
shl
cmp
repnz
out
pop
adc
pop
cwtl
out
push
int
in
mov
mov
jnp
flds
and
das
stos
and
ljmp
mov
dec
sbb
pushf
fisttpl
sarb
cltd
pop
leave
xchg
ret
xor
loop
xlat
push
lock
push
cmp
roll
adc
sahf
mov
pop
push
or
call
loope
mov
adc
mov
fmul
mov
lret
jge
xor
dec
mov
push
aam
add
icebp
push
mov
das
mov
fisttps
cs
jp
inc
mov
aaa
loop
outsl
jmp
xchg
mov
push
dec
sbb
dec
or
push
gs
push
pop
mov
sub
jno
pop
cmpsb
mov
idivb
add
fnstenv
or
sbb
movsl
xchg
movsl
repz
dec
leave
dec
scas
scas
shll
sub
pop
daa
lretw
xchg
test
dec
cmp
xor
mov
push
dec
adc
jge
into
cmp
inc
mov
and
mov
lret
inc
rolb
jge
adc
cmp
push
cmc
icebp
addr16
roll
and
mov
out
dec
cmp
outsb
rcl
or
lock
imul
idivl
sub
jecxz
enter
rcll
insl
stos
or
out
mov
popl
mov
popf
shlb
popl
dec
jno
push
inc
push
jg
push
ds
cwtl
or
nop
jb
jno
loop
push
lock
push
mov
cs
cli
sub
stc
jne
test
dec
int3
in
xchg
adc
pop
add
adc
or
ret
push
cmp
int
ds
push
and
or
sahf
or
mov
mov
in
test
mov
arpl
outsb
jbe
mov
adc
in
xor
jl
scas
xchg
test
leave
add
push
fiadds
pop
fwait
jbe
mov
and
movsb
rcr
les
jl
add
popf
pop
xchg
push
add
mov
scas
pop
in
je
or
in
pop
shrl
pop
xor
ret
inc
and
loope
sub
in
push
and
je
adc
out
and
shr
cmpsb
mov
jmp
data16
mov
xchg
mov
cli
fbstp
and
fs
iret
sub
lcall
iret
hlt
or
movsl
dec
push
pop
mov
pop
out
mov
and
outsl
mov
jle
loopne
pop
push
cmp
cmc
dec
lahf
or
xor
add
mov
nop
and
sahf
mov
sbb
nop
fisttpl
mov
adc
ljmp
push
inc
js
inc
in
xlat
aam
aas
repz
adc
shl
movsl
aad
fcomps
es
test
mov
mov
adcb
lea
xchg
adc
aad
mov
dec
out
xchg
xchg
scas
mov
cmp
in
into
xchg
fwait
aas
daa
in
xchg
into
mov
incb
jmp
and
loopne
add
ret
out
pop
popa
jb
adc
fnstcw
leave
push
sbbb
and
sahf
imul
leave
jae
dec
inc
enter
pop
jmp
imul
int
sbb
fmull
dec
enter
btr
andb
testb
mov
cli
xorl
mov
or
sub
adc
add
xchg
sbb
mov
ds
loope
enter
mov
aad
cs
inc
xor
or
pop
sub
sahf
cmp
push
cmp
push
cmp
mov
fmull
sub
lcall
daa
shll
rorl
mov
loop
out
mul
sbb
lret
mov
mov
cwtl
pop
adc
clc
jae
adc
sub
add
rcl
dec
loopne
rcr
inc
and
mov
pop
xor
or
xor
add
jae
imul
enter
ss
add
fiadds
nop
loop
sub
jge
push
movsb
leave
je
outsb
jg
test
push
xor
imulb
outsb
push
mov
scas
push
push
jb
pop
jb
jns
scas
jb
sub
jno
je
jb
idiv
mov
mov
fidivrl
cwtl
lods
adc
lret
cwtl
lock
mov
aas
jnp
sarb
adc
push
idivb
orb
adc
cmp
jle
sbb
push
add
out
aad
inc
and
ja
mov
leave
xor
jo
dec
jmp
and
and
in
pop
aaa
adc
pop
pop
in
inc
cwtl
inc
divps
movsb
push
dec
jecxz
adc
push
mov
jmp
call
cltd
pop
fbld
dec
fists
jb
insb
fnstsw
js
lret
shl
out
cmp
dec
adc
popa
hlt
or
xor
insl
push
into
jmp
popa
cmp
ficompl
jle
jge
js
mov
adc
incb
jno
daa
fistps
sbb
idivl
loop
aad
int3
xor
mov
es
loopne
out
andb
adc
in
pop
mov
lret
insb
ja
lods
xchg
jo
dec
ljmp
sbb
xchg
jns
xchg
js
adc
insb
sbb
lahf
jo
lret
ja
mov
cmpsl
pop
ss
jle
pop
mov
dec
orl
jl
je
xchg
js
out
es
fisubl
popf
popa
sub
test
inc
push
lods
cltd
sti
sub
xchg
imul
shlb
mov
mov
cmp
inc
inc
adc
add
xchg
fs
xor
repz
fnsave
xor
stos
or
xor
or
in
mov
fs
cmp
enter
dec
jl
adc
stos
push
repz
fucomp
inc
inc
or
mov
imul
or
mov
mov
inc
lds
xlat
dec
aam
arpl
inc
adc
dec
jns
fiaddl
mov
lcall
push
ja
jns
cmp
push
or
into
sbb
ret
cli
and
cmc
in
pop
or
xchg
add
pushl
push
iret
cmpsb
pop
pop
loope
push
bswap
inc
loope
jl
pop
fsubrl
xchg
subb
scas
arpl
inc
cmp
mov
lea
xor
jmp
pop
mov
filds
xchg
xor
enter
ja
mov
loope
mov
ret
pop
mov
push
nop
sub
leave
push
outsl
pop
ret
xchg
push
dec
jnp
or
xor
rclb
shll
mov
or
mov
dec
xchg
ljmp
sbb
xchg
cmpsb
orl
pop
pop
je
jb
popf
pop
loope
js
arpl
outsl
push
inc
jns
mov
std
popa
inc
cli
or
push
and
pushf
sub
and
inc
pop
vmovsd
outsl
fistpl
test
mov
int
int
or
shlb
push
mov
outsb
daa
mov
insl
popf
fsubs
mov
pop
inc
pop
hlt
push
mov
cmp
clc
cmp
adc
push
xchg
jmp
pop
fistps
dec
pop
fwait
inc
int3
xchg
sbb
xor
shl
cmp
sub
or
mov
out
pop
mov
fs
xchg
stos
jecxz
push
cld
sti
mov
or
shll
adc
adc
cltd
orl
scas
or
inc
sets
sub
int
push
jnp
jb
out
mov
ja
into
xchg
in
sub
pop
cmpsl
adc
lock
js
xchg
push
sahf
and
pop
dec
imul
fnsetpm(287
cmp
inc
enter
test
sbb
add
ljmp
mov
jl
push
pusha
jecxz
cmpl
std
pop
sub
pop
sub
sub
push
dec
inc
push
inc
fnstsw
nop
adc
inc
test
mov
daa
shlb
push
mov
jp
and
cmp
mov
les
xor
xor
fxch
push
or
mov
adcb
lods
cmp
fdivrs
cmp
sub
push
lcall
sub
pusha
fwait
into
divl
mov
inc
mov
xor
fstpl
sbb
xchg
int
in
leave
std
adc
add
jp
pop
sub
andl
out
sbb
mov
cmp
mov
mov
push
cmpsb
mov
add
jns
push
sahf
xor
aas
sbb
mov
and
shrl
dec
stc
call
insl
jl
dec
dec
xchg
je
icebp
fisttps
aam
jecxz
lret
cmp
pop
fildl
out
xlat
call
loope
sbb
sub
push
inc
sub
ss
cmp
dec
xchg
insl
fcmovu
iret
or
adc
loop
sub
xor
fadds
inc
arpl
pusha
inc
icebp
add
pop
push
int
mov
int
jo
outsl
dec
ss
addr16
testl
cwtl
call
pop
movl
jbe
cltd
clc
gs
ljmp
loop
mov
ds
leave
push
lahf
in
inc
cltd
inc
sub
or
pop
push
mov
pop
or
inc
mov
and
adc
aam
lods
inc
rorb
cmpsl
insl
insl
jnp
xlat
iret
insl
daa
fidivrl
int3
data16
mov
mov
aaa
stos
or
sarb
push
shlb
mov
mov
adc
int3
jo
mov
cmp
inc
xor
cmp
add
scas
cwtl
and
sarl
outsl
xchg
add
mov
lds
push
je
outsl
jb
mov
cs
test
dec
sub
mov
sub
bound
ja
arpl
int3
lcall
js
out
ds
aas
xor
adc
mov
mov
out
mov
jp
dec
or
add
fsubs
and
push
or
xor
pop
fwait
dec
negl
sbb
in
imul
arpl
call
sub
pop
sub
and
mov
pop
cwtl
mov
dec
test
mov
aam
pushf
sahf
sub
decl
dec
jo
das
mov
mov
nop
sbb
cmp
pop
mov
xor
int
add
in
and
dec
mov
add
out
push
mov
pop
mov
lret
clc
push
jns
es
and
inc
and
movsb
and
mov
mov
ds
inc
jb
sahf
into
mov
dec
loope
xor
and
out
ss
pop
xchg
xchg
mov
add
push
xor
divl
test
mov
gs
imul
dec
push
sti
stc
test
push
imul
ret
push
push
lahf
xchg
testb
adc
incl
jle
add
test
sub
icebp
push
adc
imul
add
lcall
inc
and
cltd
inc
mov
mov
mov
shrl
cmp
mov
in
stos
or
dec
and
xchg
and
xchg
xor
mov
rolb
push
add
cmp
iret
jne
pusha
xor
dec
adc
aaa
repz
jae
and
mov
lahf
and
xor
es
add
mov
adc
subl
fldl
push
adc
loop
out
jne
out
xchg
gs
adc
mov
or
cld
les
dec
je
xor
adc
nop
dec
xor
out
push
repz
ds
sub
sarl
addb
or
aad
dec
mov
jecxz
push
xchg
iret
ja
adc
pop
shl
test
and
jl
into
inc
add
pop
mov
jl
sub
adcl
aas
mov
push
ds
cmp
ds
jne
and
or
scas
popf
mov
add
pop
aam
jae
cs
inc
dec
xlat
adc
je
lods
sub
cmpsl
sbb
test
push
loopne
frstor
inc
ret
xchg
mov
xchg
jne
fldcw
enter
loope
dec
or
repnz
or
loope
popa
jne
adc
or
jmp
jns
and
xchg
or
add
imul
out
xor
outsl
pop
icebp
cmp
mov
mov
rol
inc
lock
popf
fstpl
insb
add
into
sub
ror
daa
or
call
inc
xlat
enter
xchg
in
gs
jo
push
jb,pt
adc
xor
mov
std
das
cwtl
sbb
cwtl
adc
push
xor
rorb
sub
push
out
dec
mov
ljmp
push
push
sub
in
daa
mov
dec
push
fiaddl
pop
addr16
dec
ds
cld
sub
pop
std
lods
cmc
jecxz
lret
popf
mov
jecxz
fidivl
jle
loop
mov
mov
jne
mov
repz
and
cwtl
nop
cmp
ja
cld
push
test
push
das
imul
push
imul
and
mov
pop
xchg
or
or
frndint
stos
dec
add
cmp
or
cmp
bound
ljmp
jl
pop
pop
jbe
push
cwtl
inc
mov
cmp
inc
and
data16
pop
or
adc
lea
lcall
jg
push
mov
int3
loope
jp
jns
xchg
mov
sbb
icebp
mov
jp
iret
mov
stos
mov
lret
daa
lret
inc
xchg
imul
push
notb
mov
jnp
ljmp
jo
and
jae
jl
dec
ja
pop
cs
gs
lahf
mov
pop
js
clc
mov
jae
out
inc
adc
cmp
pusha
and
lahf
clc
addl
shlb
inc
push
add
xor
std
mov
rorl
movsb
jo
adc
lcall
adc
mov
bound
js
pop
lcall
fldcw
dec
shrl
dec
push
or
stc
sub
outsl
dec
cmp
imul
in
daa
and
popa
push
orl
mov
hlt
pop
adc
xor
aas
and
fld
jg
test
add
inc
xor
dec
or
jnp
mov
pop
stc
jge
inc
dec
sti
repnz
fidivl
int3
inc
mov
imul
xor
adc
jmp
fisttpll
outsb
jmp
insl
and
cmp
add
jo
cmp
mov
mov
cwtl
push
pusha
repnz
push
out
xchg
test
enter
leave
jg
jp
je
push
xorb
or
in
push
dec
dec
or
dec
push
arpl
or
cmp
xchg
sub
mov
dec
jo
dec
inc
in
roll
jl
mov
rcrb
mov
xchg
jg
jmp
pop
fisubl
mov
cmp
outsb
pop
mov
lock
cmp
xor
popa
mov
mov
cmp
int3
popf
or
and
mov
dec
ljmp
lods
inc
sub
xchg
aaa
mov
daa
scas
inc
test
jne
add
or
insl
adc
fmul
xchg
or
xchg
test
or
scas
cmp
rcll
sti
jge
jb
mov
xchg
push
loop
ret
mov
ror
rorl
jne,pt
testb
push
scas
daa
inc
adc
mov
mov
fsts
or
pop
mov
aaa
push
jle
fdivrl
push
xor
inc
inc
adc
lret
xchg
sar
leave
lock
mov
shl
dec
cmp
insb
bound
jle
daa
in
inc
lret
test
jb
lock
lock
pop
repnz
and
pop
adc
jp
add
popa
popf
leave
adc
cmp
lcall
mov
data16
leave
fstps
in
push
jae,pt
cmp
cmpsb
add
add
or
daa
push
push
cmp
and
mov
pop
notl
mov
scas
mov
out
sbb
mov
push
ja
test
lods
or
int
jp
xor
pop
mov
xchg
dec
outsl
rorb
cmp
addl
jb
add
pop
xchg
push
flds
hlt
inc
out
pop
jge
pop
insl
rol
scas
ja
cmp
popf
cmp
dec
jge
adc
ret
popa
cmp
jno
icebp
out
mov
add
pop
mov
or
inc
push
gs
shlb
mov
movsb
into
inc
xchg
sbb
nop
inc
sbb
mov
xchg
imul
and
pop
mov
aad
push
or
icebp
adc
inc
out
mov
pop
cmp
xchg
js
les
mov
ds
cmp
stos
in
lcall
in
fdivr
adc
add
inc
aas
push
pop
xor
dec
or
dec
mov
jg
popa
movsl
test
push
xor
mov
jnp
inc
push
mov
jge
imul
adc
sbb
xchg
std
pop
xlat
jo
and
jecxz
adc
dec
mov
sarb
rcr
pop
pushf
adc
movsl
lods
cld
mov
out
xorb
xchg
aad
cmp
fs
ljmp
je
out
rsqrtps
cmpsb
pop
sbb
xchg
adc
adc
cmpsl
dec
jmp
leave
pop
sbb
push
cmpl
lret
inc
das
mov
sub
aad
jle
cwtl
sub
aas
fs
push
xchg
xchg
shlb
xchg
shlb
fwait
push
fs
rolb
push
mov
push
idiv
je
outsl
sbb
lahf
cmp
rolb
xor
test
cwtl
pop
add
xchg
push
sbb
adc
lret
mov
mov
in
jmp
out
subl
sbb
pop
dec
pop
or
rol
mov
sub
shll
cmp
mov
xor
cmpsb
inc
cltd
cld
push
pop
js
addl
dec
hlt
sbb
insb
xlat
shll
sub
aaa
stos
cmp
jns
xchg
push
fcoms
sub
mov
and
repnz
cli
mov
xchg
imul
popa
clc
cmp
mov
push
dec
adc
ljmp
xor
in
inc
icebp
inc
loop
addr16
xor
jae
movsl
mov
fs
mov
mov
mov
cmp
das
inc
stos
cmp
popf
addr16
lods
sbb
sub
incb
xor
add
or
xor
lods
adc
test
pop
das
sub
inc
shr
jne
jp
ja
add
and
sub
cmp
ficoml
push
xchg
fidivs
dec
pusha
and
fstpt
jnp
test
imul
mov
aad
mov
xor
rorl
cltd
xchg
jne
sub
test
insl
cmp
jp
arpl
jns
lods
sbb
inc
or
repnz
repnz
sub
pop
xchg
sbb
mov
out
inc
cltd
stos
mov
pop
imul
mov
xchg
out
outsl
jnp
adc
lea
push
mov
inc
stos
sbb
or
ljmp
ds
pop
sub
jecxz
orl
shll
mov
sti
pop
or
cli
cwtl
ja
loope
cli
xor
fldt
sub
sahf
jb
orb
cli
movsl
jecxz
cli
dec
mov
loopne
xor
in
xor
mov
dec
add
pop
lods
mov
out
ror
dec
xchg
outsl
xchg
adc
mov
sbb
jp
inc
aam
xlat
cmpsl
jge
lahf
cli
lret
out
bound
jmp
pop
jo
inc
xor
mulb
hlt
popa
scas
push
lea
fisttps
push
cmp
xchg
cmp
gs
pop
sub
dec
mov
cmp
mov
mov
dec
ljmp
cmp
sub
pop
pop
btr
es
ss
cmp
xchg
mov
xchg
setne
jne
sub
out
xlat
inc
jg
je
movsb
cmc
sbb
cmp
push
rcrb
push
insl
mov
jecxz
mov
pushf
mov
xor
hlt
and
push
orl
pop
icebp
or
jne
outsb
jo
jge
and
repz
xchg
sbb
pop
ret
push
das
cmp
dec
ja
pop
jge
inc
inc
js
in
and
jns
sbb
jbe
sub
jae
pop
sub
cld
mov
aad
pop
call
jo
rclb
fisttpll
arpl
in
jae
push
rol
addr16
mov
mov
mov
fnstsw
xchg
mov
jns
sub
addr16
jne
dec
cmc
jmp
into
xchg
xor
imul
pop
mov
fisubrs
ljmp
mov
scas
test
jg
es
xchg
repz
cltd
or
hlt
dec
flds
sbb
repz
jae
leave
lret
out
out
push
jg
add
insb
ja
sti
inc
lock
mov
push
cltd
jecxz
xor
push
loop
adc
jmp
mov
mov
jne
jae
push
cli
fldt
mov
jmp
int
xchg
sbb
outsb
stos
mov
das
dec
cmp
clc
cmp
mov
sti
iret
mov
or
push
int
test
mov
pop
in
mov
sub
lods
insl
or
loop
push
mov
push
jnp
dec
mov
push
stc
pop
xchg
fwait
mov
cmpb
cld
mov
and
fs
call
add
adc
sar
jle
ficoms
lock
sub
fcomps
or
int
add
mov
xorb
xchg
or
and
xchg
mov
or
pop
pop
mov
hlt
arpl
cmc
and
mov
daa
loop
mov
inc
xor
xchg
mov
push
mov
pusha
aas
inc
ret
mov
sub
inc
mov
rcrl
push
faddl
je
sar
cli
lea
add
fcmovne
int
frstor
pop
xchg
dec
sbb
sbb
and
jae
fimull
sub
mov
xor
adc
cs
shrd
popf
or
mov
sub
shll
inc
push
repz
mov
mov
sbb
jecxz
clc
fcoml
sub
loop
jp
jmp
in
xor
xor
call
sbb
mov
xchg
lods
lret
aas
call
add
or
adc
push
testl
xchg
add
leave
insl
sbb
test
decl
push
jle
in
aaa
inc
jge
and
push
mov
cmp
cmp
cmc
xor
fisttpll
dec
fildl
or
stc
cli
cmc
mov
jno
push
mov
inc
js
mov
push
or
or
daa
push
mov
cld
push
faddl
and
and
pop
pop
pusha
jg
inc
fdivs
jne
sbb
loope
pop
out
nop
test
xor
mov
cmp
push
xor
js
sti
in
ret
inc
pop
push
pop
cmp
mov
incl
test
dec
cmp
movsl
inc
cld
enter
insb
shll
nop
insl
das
addr16
inc
aad
add
cmp
gs
push
jns
leave
repnz
test
pop
sbb
inc
mov
rcrb
dec
les
rcrb
out
ljmp
and
pop
out
popf
lret
mov
fbld
arpl
dec
lock
leave
dec
xchg
in
cld
lret
fdivrl
out
pop
mov
roll
lods
rolb
xchg
mov
dec
adc
mov
add
hlt
je
aas
pop
not
movsb
mov
out
mov
inc
cmpsl
pushf
test
push
jae
xor
lahf
and
rclb
adc
cmp
lods
lds
add
add
ja
push
jno
fidivl
and
pop
xlat
mov
sti
xor
jl
jg
shr
sbb
pushf
pop
insl
cli
rcr
and
push
pusha
pop
xor
addr16
addb
lock
lcall
lcall
mov
loopne
jns
push
popa
jle
inc
mov
pop
dec
sub
push
out
lods
pop
pop
mov
mov
repnz
sub
add
push
and
jle
or
jno
inc
xor
loop
xlat
icebp
xor
cwtl
mov
pop
dec
daa
cmp
icebp
das
xor
fwait
pop
adc
repnz
pop
mov
inc
lods
pop
pop
jecxz
push
lods
loopne
dec
xchg
cmc
repnz
xchg
dec
cs
divb
fistpll
cmpl
and
aas
imul
incl
lock
leave
fnstenv
dec
out
jle
andl
mov
fistpl
scas
test
mov
dec
jae
sbb
lcall
ljmp
imul
inc
sbb
lahf
mov
out
fcomi
xorl
adc
addl
jo
push
inc
pop
mov
movsl
cmpsl
lods
in
push
pop
test
sub
fwait
inc
xorb
mov
bound
mov
bound
inc
cli
stc
adc
xor
xchg
mov
cwtl
cmp
add
in
std
lcall
pop
dec
or
pop
out
leave
repz
adc
hlt
cld
pop
xlat
jnp
insl
add
jp
add
idiv
or
sbb
xor
stc
xor
mov
mov
mov
scas
outsb
int3
shrb
adc
stos
ds
in
mov
cli
imul
jle
ds
mov
mov
dec
test
xchg
sbbl
or
in
jmp
jae
out
adc
sbb
cld
xchg
mov
inc
inc
mov
dec
pop
dec
jp
jae
stos
cs
xchg
jbe
jle
jno
sbb
mov
jl
call
ljmp
pop
les
mov
inc
incl
adc
out
mov
mov
das
loop
lahf
mov
outsl
daa
inc
test
jle
test
cltd
inc
jne
aas
cwtl
jnp
cmpsb
pop
popa
xor
xor
inc
dec
loop
inc
mulb
push
lock
xor
ds
fwait
cmpb
into
push
sti
sti
out
icebp
dec
sahf
lods
or
add
sub
insl
xor
ret
scas
rorl
insb
lods
mov
sbb
jle
popa
pusha
cmc
fwait
mov
inc
notl
mov
lahf
loope
into
bound
push
sub
scas
mov
outsl
mov
imulb
rcrl
nop
sbb
lahf
pushf
call
lods
stos
jae
adc
and
lcall
sbb
xchg
sbb
cmc
ficompl
fstpl
xlat
outsb
pop
mov
shrb
adc
cmp
pop
pusha
jecxz
pop
adc
shlb
out
inc
sub
cmp
cld
cmp
xor
test
cvtps2pd
negb
sbb
imul
out
xchg
ror
imul
xchg
dec
inc
xchg
sahf
pop
cld
add
mov
test
fimuls
inc
orb
mov
loop
xor
dec
fbstp
lret
jnp
push
sarb
mov
std
mov
xchg
aas
test
lea
sub
or
dec
fisubrl
test
push
jle
loop
outsb
fbld
push
das
call
lock
insl
fsts
mov
sub
mov
adc
jns
sbb
scas
dec
xchg
xchg
scas
in
loopne
jne
or
dec
pop
xor
fwait
daa
popf
aad
push
in
xchg
mov
mov
pop
jae
dec
andb
or
iret
movsl
lds
push
xor
stc
roll
pop
icebp
push
cld
shrb
mov
icebp
or
jo
dec
cltd
adc
and
dec
jne
les
aam
xchg
jp
cmp
push
jge
popa
inc
xor
cmp
addr16
inc
test
shll
push
cmp
pop
fists
repz
and
in
js
jns
push
imul
inc
sbb
test
or
add
push
ret
jle
sarl
lret
cmp
pop
pop
and
sbb
lods
or
dec
mov
ret
cli
movsl
and
ja
pop
push
repz
jno
mov
aad
aam
xchg
lds
dec
pusha
push
mov
les
jg
xor
sarl
gs
popf
dec
rcr
cmpsb
cltd
push
fmuls
stos
movsl
xchg
mov
addb
leave
repz
lret
scas
movsl
push
pop
mov
sub
push
cmpsl
imul
aad
in
cmc
pusha
push
mov
dec
fcomip
iret
push
pushf
fmul
scas
out
pop
pop
adc
dec
shll
mov
cmp
stc
push
test
sub
mov
mov
fwait
mov
adc
ds
push
mov
xchg
inc
sbb
sti
pusha
push
cmc
push
inc
out
jnp
inc
mov
les
cmpsb
cmp
shl
lods
bound
mov
cmp
subb
cli
add
imul
ss
pop
imull
inc
jns
push
imul
les
call
jmp
xchg
in
jle
pop
jecxz
inc
sub
imul
xchg
movsb
test
mov
dec
cmpsb
repnz
or
mov
loope
mov
add
sub
push
push
mov
adc
cmc
hlt
bound
inc
fwait
sbb
mov
cwtl
addr16
je
xor
repz
jecxz
mov
add
jge
push
imul
pop
cmp
cld
or
pushf
pop
inc
pop
subb
addr16
jmp
dec
push
sbb
sbb
adc
sbb
mov
cmp
sti
je
ret
add
sub
repnz
jb
or
or
test
shll
cmpsb
sbb
sbb
add
test
sti
sahf
outsl
bound
jns
jp
aas
push
push
fwait
pop
sub
pop
aam
mov
inc
mov
push
loope
add
add
push
in
in
mov
arpl
aam
lods
and
add
data16
mov
ljmp
int3
fildl
xor
pop
mov
mov
push
cmp
xor
inc
push
rcrb
cmpb
mov
rorl
inc
and
shlb
cmp
sbb
mov
scas
jge
dec
and
sbb
loope
mov
aad
insl
jo
sub
cmp
stos
xor
sbb
ds
dec
inc
mov
sahf
sub
negb
xor
mov
cltd
out
aad
sub
push
cmp
mov
jl
std
ds
xor
cmp
addr16
jmp
out
mov
push
and
sbb
xchg
ror
daa
pushf
popf
adc
outsb
push
cmp
shll
add
or
push
aaa
lret
jne
rcll
mov
stos
rep
push
test
jecxz
jle
or
lods
push
arpl
pop
repnz
cld
mov
mov
xlat
or
dec
bound
mov
jns
sub
push
xchg
lock
das
adc
pop
push
sub
mov
mov
sbb
mov
xchg
insl
mov
mov
xchg
imulb
xor
lods
add
adc
dec
mov
int
stos
into
popa
jp
jmp
jb
jbe
fisubl
sti
and
push
mov
xchg
out
mov
adc
mov
cmp
add
cmpsb
sti
add
jno
push
in
imul
jmp
imul
jecxz
lea
mov
jo
addr16
insl
sub
mov
flds
push
sbb
and
mov
jo
adc
adc
mov
jo
and
pushf
and
mov
mov
push
mov
fs
xchg
mov
mov
jp
dec
jl
jp
mov
sbb
add
add
mov
roll
add
mov
push
pop
fdiv
xor
add
aad
lock
add
lock
cmp
jb
jmp
andl
jbe
enter
sub
or
sub
int3
jmp
dec
pop
call
cmp
ret
cld
jle
ljmp
jb
fwait
mov
popa
jge
lret
push
leave
repz
arpl
xor
stos
orb
aam
xlat
call
sub
lock
push
movsl
jmp
pop
jg
int
lods
mov
sbb
dec
jo
sbb
mov
push
psllq
mov
jne
add
cwtl
xorb
popf
jle
lea
bound
je
push
dec
andl
xor
aas
sti
sub
mov
cmp
cmp
sbbb
sti
mov
xchg
fidivrl
add
cltd
test
sahf
sarb
int
loope
dec
cmp
and
andl
cmp
into
mov
call
clc
xor
jo
data16
mov
inc
jmp
imul
cld
rcr
mov
add
and
lods
inc
or
orb
stc
fcom
jbe
mov
jge
in
sub
and
xlat
test
fistpll
das
adcb
fldenv
icebp
inc
xor
aam
push
adc
adc
jnp
repz
sahf
pop
repz
mov
mov
aad
sarb
nop
or
mov
add
add
add
popf
jo
int3
and
xor
push
adc
mov
xchg
cwtl
sarb
aas
lock
mov
and
cmpsl
push
add
outsb
loopne
jb
ds
outsl
and
rorb
stc
xchg
pop
pushf
push
inc
sbb
or
aam
repnz
mov
pop
lock
xchg
icebp
cmp
xor
ljmp
jecxz
dec
xor
xchg
into
mov
mov
pop
adc
repz
pop
or
cltd
out
xchg
fsubr
mov
movsb
mov
push
sbb
xor
inc
fnsave
fisttpl
jg
cmpsl
int3
mov
daa
loop
xchg
or
ljmp
aas
or
inc
addr16
sbbb
bound
insl
in
nop
mov
cmp
xchg
fldenv
addl
test
jge
inc
mov
ret
sub
aam
push
lods
dec
ljmp
das
ljmp
jecxz
out
inc
jmp
lods
mov
sub
leave
mov
js
push
scas
repnz
add
adc
push
mov
and
push
mov
outsb
xor
push
push
lock
dec
push
popa
push
sub
mov
jns
xchg
out
loop
cmpsb
out
call
aas
js
sbb
add
repz
cmp
mov
xlat
daa
inc
popf
cld
xor
out
pop
mov
sbb
dec
or
test
test
cld
sub
outsb
icebp
inc
jbe
xchg
push
cmp
cmovnp
in
mov
pslld
mov
pop
or
fwait
or
push
push
ja
sbb
jns
out
jne
jmp
xchg
subb
push
push
jne
movsl
aaa
fwait
xor
cmp
jae
in
jmp
jns
sahf
mov
xchg
shll
popa
or
add
dec
orl
inc
sbb
fwait
gs
jo
xchg
pusha
sbb
fsubrs
sub
cmp
add
in
ud1
ss
xor
test
xor
popf
into
xchg
loop
sbb
imul
cmp
int3
cmp
pop
ret
lods
adc
xor
leave
movsl
out
aaa
mov
pop
pop
rorb
sbb
adc
iret
cmp
mov
in
stos
mov
insb
adc
inc
pushl
int3
orb
add
cld
xchg
push
xor
add
or
sbb
int3
mov
push
sahf
sub
xchg
cmp
into
adc
sub
xchg
xlat
int3
and
inc
inc
pop
lods
mov
jno
insl
lods
dec
jmp
lea
repnz
push
mov
or
test
addl
movsl
mov
movsl
xor
les
mov
stos
inc
addr16
or
and
cmp
cmc
jmp
jbe
sbb
in
iret
push
jns
mov
mov
jno
adc
iret
mov
mov
shr
ret
dec
movsb
sbb
gs
ss
out
or
repnz
popf
lret
std
or
xchg
lock
icebp
ljmp
leave
das
and
insl
popa
std
sub
and
bound
jl
ret
das
adc
push
gs
dec
jp
cmpsb
fs
mov
es
fmul
push
mov
enter
fldl
pop
mov
in
inc
in
push
mov
xor
push
jmp
scas
push
cmp
loop
repz
arpl
out
xchg
cltd
and
cmpsl
bound
jno
stc
imul
jg
test
fwait
push
sbb
pop
int3
aam
push
lods
aaa
sub
clc
insl
add
push
sub
and
cmp
repz
loop
jo
outsl
inc
test
push
jg
adc
fidivs
or
out
daa
ret
xchg
adc
sarb
cmpl
pushf
or
add
jmp
sub
pop
lahf
jmp
adc
xchg
clc
data16
pop
roll
push
dec
pushf
std
sub
gs
aam
jecxz
pop
aaa
in
cmp
sbb
push
fcomps
mov
fidivrl
shrb
test
xchg
imul
mov
sub
cltd
jmp
cmp
cmp
ret
and
adc
ds
int
out
pop
arpl
mov
fsubrl
jae
gs
fs
fcoms
outsb
shll
gs
dec
lcall
es
in
push
jb
xchg
stos
mov
sti
loopne
adc
insb
inc
lret
sub
sub
lods
jns
cmp
xchg
lods
add
xchg
sbb
inc
scas
sub
jne
shll
xor
inc
rcrl
ljmp
cmpl
cmp
iret
dec
push
push
jne
mov
or
imul
mov
ret
into
lcall
inc
out
cmc
xchg
or
mov
sub
ret
pop
jb
leave
iret
cmp
scas
popf
je
movb
push
or
pop
lahf
mov
mov
xor
in
cmp
idivl
mov
ds
jbe
insb
push
dec
push
cmp
mov
mov
lock
popa
ds
hlt
lock
cmp
lea
daa
cli
jno
mov
stos
pop
push
inc
out
lds
fst
lods
add
mov
dec
jb
into
push
movsb
loope
jo
or
pop
lret
push
add
pop
jae
dec
inc
jne
incb
jp
test
sbb
pop
mov
add
movsl
mov
push
in
jl
ret
mov
dec
jmp
adc
xchg
xchg
push
mov
fwait
push
loope
xchg
jle
outsb
test
inc
mov
mov
cmp
cwtl
popf
xchg
mov
jg
rclb
sbb
insb
daa
test
lcall
lock
dec
adc
leave
test
imul
sbb
pop
sbb
mov
add
dec
push
adc
push
aam
mov
pop
cmpsl
shrb
jo
jo
test
lea
jb
sbb
push
aam
ja
add
pop
movsb
pop
repz
push
fdivl
cmp
ljmp
repnz
pop
pusha
test
fldcw
inc
bound
int3
data16
xchg
mov
or
add
mov
cwtl
pop
adcb
pop
cmp
ss
fldenv
test
xchg
insb
out
push
in
jmp
ret
cltd
stos
mov
cmpsb
sbb
push
adc
and
cld
lret
adc
cmp
xor
inc
das
lods
sub
je
and
push
xchg
test
in
popa
cmp
adc
mov
jle
or
repnz
cmpsl
push
mov
mov
repz
adc
je
and
jb
mov
jo
mov
fidivrs
in
pop
ss
nop
das
stc
xor
jl
popa
mov
rclb
iret
adc
test
pop
mov
and
mov
cmp
push
dec
ds
pmulhuw
shl
ds
je
into
das
or
inc
or
iret
cmpsl
push
imul
and
lods
dec
push
mov
jg
in
inc
cmp
or
adc
scas
sub
or
out
dec
or
mov
ffreep
push
scas
mov
or
mov
mov
adc
mov
cmp
mov
imull
jmp
cmp
popl
xchg
nop
inc
add
das
in
cmp
lock
push
shrb
sub
add
out
mov
mov
adc
pop
pop
ffreep
ret
leave
repnz
adcb
fucomip
lods
ljmp
jb
bound
lcall
push
push
push
repnz
push
outsb
push
cmpsb
outsb
add
sbb
ss
sahf
inc
dec
and
flds
nop
lea
mov
or
ss
fwait
add
mov
cwtl
push
push
xchg
adc
and
lock
sarb
sub
add
sbb
mov
ret
jp
out
fbstp
xor
pop
fs
dec
xchg
test
adc
jl
jbe
xor
adc
xchg
imul
jb
inc
xor
mov
stos
lock
lret
cmp
adc
xchg
xor
mov
mov
aas
jmp
daa
lret
sub
outsb
push
mov
outsl
mov
das
ss
mov
out
movsl
fwait
in
xchg
add
aas
ret
fmul
adcl
xchg
adc
push
fcmovu
int
repz
jecxz
cmp
in
lods
rorl
mov
repz
inc
cmc
lods
lret
or
push
xchg
jg
push
jo
int3
xor
dec
std
jecxz
dec
and
mov
pushf
insl
and
aad
dec
xor
sub
push
mull
sbb
add
push
xor
sahf
nop
xchg
hlt
add
sbb
mov
jnp,pt
ud2
sbb
out
push
xchg
mov
mov
adc
xor
cmp
cld
clc
xchg
cltd
jae
dec
xor
fs
push
shll
out
nop
int
outsb
dec
lds
pop
mov
movsb
in
pop
into
jp
xlat
cmpsl
adc
stos
dec
aam
popf
jg
push
inc
pop
fcmovnbe
fwait
int3
test
push
jae
cwtl
and
jp
in
dec
outsb
loop
push
sub
in
pop
cld
xchg
lret
icebp
push
push
iret
xor
sub
f2xm1
int
xchg
xor
mov
repnz
out
fcoml
or
mov
push
nop
push
in
add
dec
jns
shlb
ror
xor
xchg
pop
cmp
mov
mov
testb
sbbl
cli
adc
in
adc
add
sar
or
out
icebp
inc
addl
inc
call
out
sub
dec
rorl
and
cmp
shll
mov
sbb
mov
mov
clc
xchg
lea
mov
jmp
ret
lret
fistpl
rcll
orb
leave
lock
rcrb
push
sbb
arpl
in
div
dec
mov
and
jle
cmc
rol
xchg
xchg
adc
xor
mov
pusha
and
or
push
ficoms
push
lahf
mov
add
outsb
into
movb
loope
mov
mov
or
aam
jmp
jl
aas
ja
inc
xchg
or
int
icebp
xor
and
sar
xchg
enter
cmp
or
std
pop
pop
push
xlat
std
push
in
pop
inc
fsubl
cld
fcmove
cmp
push
fxch
sbb
mov
ficompl
dec
gs
inc
aad
jge
scas
andb
les
lahf
aad
stos
fildl
pop
out
ljmp
loope
mov
inc
sub
jecxz
adc
mov
mov
sbb
or
mov
add
mov
push
sahf
ds
leave
ret
dec
lods
aam
jbe
push
or
or
cmc
sbb
push
rcr
out
push
scas
cmp
jns
inc
pop
mov
ja
into
repnz
addr16
fwait
repz
movsb
shlb
popf
enter
loope
in
mov
in
cmpsb
lcall
and
clc
dec
sub
in
xlat
mov
testb
mov
out
addl
fisubrs
xor
cld
xor
frstor
xchg
cmp
xchg
adc
mov
jae
xchg
mov
repz
lods
sub
cmpsb
pop
leave
xchg
fcoml
cwtl
cwtl
xchg
push
scas
add
xor
test
xor
imul
jae
rcl
sarb
es
mov
jl
push
outsl
leave
cmp
add
adc
push
xor
mov
mov
sub
fcomps
pop
cs
test
inc
mov
int
jmp
dec
pusha
sub
jmp
test
sub
cld
jmp
das
fcmovnbe
addl
ftst
and
call
push
jp
ds
pop
or
and
clc
sar
or
mov
xor
mov
lds
sbb
out
jp
shr
mov
lahf
popf
sbb
mov
aam
bound
pushf
negl
adc
roll
pop
push
sbb
ljmp
xor
sbb
adc
xchg
mov
mov
or
out
dec
rolb
aas
xchg
stos
push
push
cwtl
adc
sar
int3
ror
push
adc
test
fmuls
sub
clc
cld
shl
jb
inc
test
pop
lret
xorl
and
mov
mov
jae
inc
mov
adc
and
dec
sub
std
aad
xorb
mov
mulb
aas
call
loope
pop
cltd
sbb
clc
fmull
inc
aas
cmp
sbb
cltd
fdivp
shrl
push
mov
xor
cmp
sbb
adc
dec
pop
movsl
imul
je
daa
into
enter
cmp
xor
cwtl
call
in
xchg
jae
insl
lock
cwtl
sub
sbb
push
sub
and
imul
cmp
loop
sbb
shlb
inc
leave
into
xor
mov
xor
add
inc
jl
cmp
mov
int3
clc
mov
push
dec
jns
mov
fdivr
pop
ljmp
lock
mov
sub
testl
jp
cltd
repz
jo
out
in
mov
add
sub
sbb
push
lret
test
push
and
insl
jnp
popf
push
sbb
pop
dec
ds
mov
mov
shll
pop
and
icebp
mov
or
mov
push
cwtl
xor
jecxz
scas
das
mov
dec
adcl
test
imul
sbb
and
hlt
sbb
inc
shll
push
mov
jp
pop
aad
sar
adc
aaa
or
sbb
and
enter
xor
jbe
push
add
jne
sbb
ret
fldcw
stc
jbe
sbb
xor
mov
sub
leave
dec
iret
jae
inc
push
add
int3
jne
fs
or
movl
int3
lods
xchg
ss
nop
pop
mov
shr
add
mov
fistps
push
daa
pop
ja
ss
js
push
adc
stos
sub
jp
mov
mov
subb
fimull
pusha
sbb
lock
jne
repz
jp
cmp
mov
jns
adc
cmc
inc
int3
mov
pop
fldenv
aaa
cltd
cmpsb
sub
loope
xor
scas
or
mov
sub
adc
lret
pushf
mov
pop
or
jge
fs
ja
repnz
jnp
dec
jbe
or
cltd
cld
addl
sbb
les
dec
orl
xchg
ss
outsl
int
cmpsl
out
in
ljmp
ja
adc
cmp
jae
sbb
cmp
dec
and
in
imul
pop
jp
or
mov
or
out
lret
arpl
inc
mov
test
into
into
sahf
or
dec
in
aas
es
adc
fistpl
mov
mov
cmp
into
test
sbb
daa
or
add
ds
pop
mov
mov
push
push
cmpsb
pop
jecxz
sbb
pop
add
sub
sbb
iret
mov
mov
inc
xor
imul
aaa
ret
mov
ja
pushf
stos
mov
repnz
inc
mov
push
jae
cld
mov
or
pop
aam
mov
out
addr16
sbb
sub
sub
and
pop
jge
pop
iret
pop
jg
cli
push
shl
rcll
stos
xlat
mov
jle
xchg
sbb
pusha
or
pop
gs
add
lock
sbb
adcb
repz
dec
cmpl
pop
in
mov
mov
lret
leave
popa
mov
xor
push
pop
jno
pop
mov
xor
and
push
fnstsw
mov
ds
sub
add
lds
fldenv
pop
pop
lahf
popa
aas
jns
dec
xlat
dec
xor
xor
mov
xchg
mov
addr16
adc
mov
mov
dec
std
test
fwait
adcl
xlat
add
stc
fwait
pop
shlb
mov
stos
push
repnz
arpl
lret
scas
and
pop
push
hlt
jne
stos
adc
sub
xor
data16
dec
or
push
inc
jmp
fdivrp
test
mov
inc
mov
and
or
sbb
loop
mov
push
or
data16
sub
ljmp
xchg
fwait
and
pushf
fists
inc
push
pop
mov
and
in
mov
and
in
mov
sub
mov
lahf
pop
movsl
lock
xchg
sbb
or
fwait
pop
leave
test
inc
outsb
cli
int
adc
xchg
jbe
xchg
add
repnz
je
dec
push
popl
adc
inc
lret
pusha
xchg
pop
icebp
add
int3
add
aad
and
imul
subl
inc
xor
popf
in
test
mov
faddl
mov
inc
std
mov
out
inc
sub
mov
add
xor
and
xor
and
movsb
inc
ffreep
mov
clc
fdivs
xor
xor
cmp
mov
imul
mov
sti
jge
sub
nop
mov
sarb
scas
fists
jg
or
dec
out
test
xchg
test
push
cmp
or
in
push
std
out
je
lret
movl
dec
inc
movb
jbe
mov
sbb
push
xchg
mov
jecxz
loop
push
lret
mov
adc
mov
fld
push
mov
lahf
adc
mov
sub
inc
mov
data16
gs
pop
mov
and
push
je
push
pushf
ret
push
fadds
cmp
les
push
outsb
sub
cmp
ljmp
sbb
or
bound
mov
sub
movb
cmpsb
les
xchg
hlt
sub
repnz
daa
cmp
hlt
inc
jb
jne
repz
push
inc
repnz
pop
jmp
xor
push
loopne
pop
push
in
pusha
mov
push
mov
pop
cmp
ficoms
sbb
xchg
test
sahf
sub
mov
fistps
mov
idivl
or
pop
stc
add
mov
insl
bound
cli
cmpsl
pshufw
mov
adc
inc
mov
inc
fstpl
ja
fistpl
adc
mov
pop
or
mov
arpl
je
in
or
iret
xlat
mov
push
rcll
sbb
iret
and
insl
cmp
sbb
mov
xorl
xor
and
mov
adc
das
call
pop
je
testl
xchg
xchg
lahf
xchg
movsb
xchg
push
or
and
dec
cmpsl
cmp
dec
in
pop
adc
dec
scas
lret
mov
loope
xchg
inc
mov
cmp
lds
mov
adc
push
jbe
jns
in
popl
jbe
xchg
mov
cli
pop
es
pushf
inc
push
inc
dec
pop
sbb
push
test
xor
icebp
call
scas
xor
mov
inc
mov
xchg
idiv
movsl
cmp
mov
loopne
popf
xlat
clc
jge
lahf
insl
adc
and
call
cmpsl
scas
imul
and
push
lea
mov
hlt
pop
inc
ds
jecxz
dec
mov
mov
scas
adc
dec
cmp
mov
add
dec
in
adc
negb
mov
inc
cmp
pop
lds
push
icebp
push
nop
jne
lock
fmuls
ficoms
test
inc
xor
or
sub
cmc
push
mov
es
mov
aaa
cmp
sub
inc
int
popfw
addr16
maskmovq
imull
or
loopne
clc
xchg
xor
cld
cli
sbb
int3
jecxz
ds
add
lods
shll
mov
insl
aas
mov
mov
mov
pushl
out
lods
test
out
mov
and
pop
inc
xor
cmp
pop
lret
adc
ljmp
cmp
xchg
inc
xlat
cmp
call
or
daa
push
inc
push
out
pop
or
frstor
insb
enter
adc
and
xchg
shrl
andl
stc
movsb
data16
fs
sbbl
loopne
jae
or
mov
es
mov
sahf
mov
lods
jle
pop
cltd
sbb
cwtl
sub
and
mov
lret
into
xor
sti
sti
inc
dec
mov
ficoms
call
mov
sbb
push
stc
imul
fldl
ljmp
xchg
jmp
fimuls
lods
imul
in
pop
loop
push
pusha
jae
pushf
xlat
adc
pushf
mov
cmc
push
pusha
ss
fsubrs
gs
sbb
mov
sub
es
fdivp
testb
std
mov
inc
testb
test
pop
sbb
btc
stc
sbb
shrb
ss
jg
iret
dec
daa
adc
add
push
sarb
daa
jne
stc
das
shlb
push
loop
xchg
mov
ret
jg
sbbl
movsb
movsl
sbb
jo
mov
lea
cmp
cmc
fwait
cmp
mov
test
sahf
sarb
test
dec
and
jnp
aas
repnz
into
jo
dec
loop
movsb
and
push
lock
jo
cli
imul
stos
xchg
jecxz
icebp
mov
out
int3
shll
outsb
mov
cmp
add
negl
jbe
test
add
mov
xchg
or
inc
aad
jne
stos
movsl
cmpsl
xchg
dec
pop
push
push
inc
cmp
xor
xchg
and
push
rcll
pop
pop
fimuls
and
ja
fcomps
pop
inc
mov
rcll
mov
lahf
pop
cmp
adc
popf
movsl
sub
sub
outsl
add
scas
test
clc
les
xchg
iret
sub
out
mov
jle
sbb
pop
pop
popa
arpl
lahf
lds
gs
std
xchg
movsb
addr16
outsl
sbb
sub
dec
pop
sti
sahf
cmp
inc
cmp
or
repz
aad
lret
xchg
lahf
jp
mov
pushf
cwtl
test
pop
lods
xor
ljmp
pop
xor
add
mov
xor
cmpsb
pop
cld
pop
xchg
add
jnp
adc
clc
leave
in
mov
jns
ja
mov
or
bound
in
es
aas
data16
nop
xchg
add
test
call
lods
mov
nop
fxch
mov
and
fmull
fld
xor
repnz
add
fs
imul
cmpsl
fldenv
lret
jns
push
jp
sub
fsubrs
adc
pop
cmp
cmpsl
mov
jns
xor
cltd
outsb
xchg
sahf
sti
lock
bnd
mov
sub
pop
arpl
inc
push
add
inc
out
nop
push
mov
movsl
fildl
xchg
sub
push
cmp
and
std
and
movsb
mov
cmp
xor
repz
scas
imul
shll
sahf
inc
jbe
xor
fisubl
testb
inc
nop
adc
mov
mov
in
fcompl
push
cmpsl
popa
sbb
or
xchg
mov
adc
pop
fistpl
inc
out
inc
inc
mov
sbb
lods
int3
fldl
mov
rcrb
jg
cltd
enter
mov
fwait
ja
test
xchg
dec
jmp
aam
xor
in
jnp
jae
mov
cmp
push
push
icebp
jle
addr16
and
mov
rorb
test
bound
cmp
fstp
add
arpl
and
cmp
mov
xchg
popa
mov
movsb
adc
sub
movsl
and
fnstcw
gs
push
shlb
xchg
sti
in
lcall
cmpl
lret
push
je
push
inc
imul
leave
or
mov
lea
pop
clc
gs
xchg
cmp
ss
pop
sbb
push
aad
or
cmc
int3
push
dec
inc
jno
cmp
xor
mov
add
icebp
xchg
or
pop
mov
adc
push
je
popa
mov
push
mov
mov
push
cmp
dec
and
incl
loop
stc
cli
insb
adc
in
jno
das
inc
fdivrs
cli
dec
and
sub
dec
movsb
add
xor
hlt
ret
or
int3
push
cld
or
adc
pop
mov
es
loop
mov
test
test
inc
bnd
xchg
addr16
mov
inc
add
xchg
add
test
pop
add
xchg
mov
xor
ret
les
pop
movb
cwtl
imul
fistl
test
lret
nop
data16
pop
lock
call
sbbl
cmpsl
xor
test
jb
fisttpll
cli
sbb
test
mov
add
in
mov
movsb
jbe
inc
push
rcrl
xchg
pop
and
lret
push
flds
push
sbb
mov
sbbl
or
and
repz
pop
outsb
push
out
dec
sub
std
xchg
jnp
xchg
imul
push
pushf
pop
ret
repz
notb
push
out
mov
or
cmp
fs
addr16
jle
pop
add
ljmp
in
push
in
inc
jg
mov
jns
inc
jnp
jne
xlat
pop
push
lods
push
cmpsb
adc
outsb
cmp
dec
sbb
mov
sbb
lahf
loop
arpl
data16
add
dec
iret
mov
sbb
fists
mov
mov
pop
push
pusha
mov
sbb
in
daa
inc
mov
pop
jbe
js
mov
or
loope
aaa
xor
cld
mov
xor
mov
sub
adc
ja
lea
jbe
scas
fucom
lds
sub
or
fwait
inc
lcall
les
stc
and
xor
in
and
aad
sar
push
ret
dec
and
setp
jb
imul
loopne
in
inc
pusha
pop
movsl
or
pop
clc
lcall
ret
std
mov
adc
mov
dec
cmp
sbb
or
jne
or
push
mov
jge
sub
loopne
hlt
sbbl
jp
lock
jle
xchg
dec
jno
jp
mov
js
pusha
call
xchg
in
pop
cmp
jp
sbb
push
xor
fidivrs
mov
int3
shll
sti
mov
mov
or
cmp
fs
es
pop
pusha
xchg
daa
or
sbb
sti
out
dec
loopne
test
or
fldt
mov
xchg
xchg
jge
arpl
iret
inc
and
dec
sbb
sar
arpl
les
std
cmc
dec
ret
add
push
jl
mov
xchg
mov
xor
and
xchg
imul
lret
mov
rol
dec
adc
or
imul
loopne
movsb
leave
cld
and
or
xor
aas
inc
iret
and
jns
adc
cmpsb
xchg
lods
inc
test
xor
mov
add
cltd
dec
xchg
pop
dec
insb
popa
pop
mov
out
cld
and
mov
scas
pusha
into
jecxz
dec
jo
loop
hlt
mov
xor
mov
push
mov
out
pop
dec
dec
fld
and
jge
stc
data16
mov
in
cltd
outsl
or
sahf
and
push
fildl
jp
mov
lret
cmp
rcrl
add
xchg
dec
lds
fucom
and
movsl
mov
pop
addr16
std
adc
loop
fcomps
inc
jb
jmp
je
mov
cli
imul
stc
sbb
mov
in
pusha
test
in
rcrl
mov
cmpsb
and
sets
inc
sub
add
sbb
pop
mov
sbb
mov
mov
and
sti
insl
mov
dec
shll
pushf
adc
mov
mov
sub
movsb
xor
jle
xor
pusha
popf
scas
into
push
jae
in
pop
mov
call
push
js
lods
vmread
sahf
dec
addr16
test
movsb
pop
mov
and
fsubrl
sub
and
xabort
or
leave
or
jae
xchg
sbb
lock
idiv
movsb
repnz
pop
ja
shr
mov
mov
in
iret
sti
xor
rcll
dec
ret
ffreep
mov
shlb
cmp
jl
rcl
push
cs
js
popf
jne
decl
stos
mov
jbe
sti
xor
std
arpl
xor
stos
jns
cmp
jne
aas
popa
push
pop
icebp
andl
or
lock
push
mov
cmpsb
inc
inc
xorb
jo
iret
roll
out
inc
jl
cmovo
rorb
cmpsb
bound
in
jnp
cltd
mov
mov
lock
iret
and
std
test
jbe
pop
rcrl
xor
cmc
adc
mov
or
aaa
xor
push
rcrl
jb
sub
or
nop
loopne
add
push
test
inc
adc
arpl
ret
adc
add
repz
nop
nop
mov
add
ljmp
or
mov
pop
repz
shrl
dec
rolb
imul
and
add
cmp
pop
outsb
jle
push
sti
push
cmp
in
jb
xor
in
mov
and
test
pop
adcl
inc
sub
push
fs
comiss
push
daa
jp
scas
mov
negl
jge
out
xorb
cmc
repnz
xor
cltd
pop
and
aas
les
incl
out
aam
cmpsb
push
add
jl
mov
jno
fsubrl
movsl
and
je
mov
fldl
scas
scas
dec
push
call
adc
in
xor
mov
push
insl
mov
push
jne
in
add
jge
inc
cs
mov
xor
jne
jl
xor
add
mov
shll
shll
imul
sub
aam
xchg
xchg
movsl
das
dec
pop
lret
lods
xabort
sub
mov
jne
jecxz
rolb
lahf
fiaddl
rol
loop
mov
mov
dec
mov
xor
lods
icebp
fsubl
fcmovnbe
xchg
xor
pop
test
jo
pop
cltd
cmp
mov
jmp
and
jnp
sub
mov
dec
mov
pop
adc
lods
or
fimull
inc
js
clc
and
mov
push
jo
stos
mov
cli
xchg
shrl
push
push
leave
int
sub
xchg
sbb
in
or
aad
push
cmp
test
in
xor
cmp
dec
out
inc
cmovle
dec
fimull
inc
lods
fwait
popa
cmp
jp
sub
imull
inc
fstps
add
xchg
mov
cmp
lock
pop
cmp
push
mov
xlat
stos
jns
xor
addl
faddl
imul
rcrb
or
loopne
and
mov
sbb
rolb
ja
sarb
xor
sbb
pop
pusha
pusha
test
inc
faddl
sbb
pop
push
sub
sub
outsb
jnp
fwait
mov
adc
bound
cmp
xchg
out
sub
xor
mov
into
arpl
pop
mov
mov
or
pop
shrb
sbb
ja
movsb
mov
or
or
ss
test
mov
mov
icebp
outsb
jl
add
das
std
and
push
enter
fadd
xor
pop
cmpsl
xor
pop
jns
lret
aam
inc
into
lea
xchg
mov
add
or
add
jl
sbb
in
mov
pop
stos
xor
jb
adc
push
mov
dec
insl
sub
pop
lds
xchg
xor
xchg
push
mov
fwait
into
out
push
jle
call
cld
loopne
out
ljmp
mov
mov
jge
cmovg
lcall
mov
adc
inc
and
cmpsl
cmp
xchg
sub
sti
mov
dec
insl
jo
mov
xchg
fs
in
pop
cmp
testl
ljmp
imul
jle
pusha
sti
ret
and
inc
adc
lcall
ficomps
mov
lret
mov
sbb
xor
xchg
pop
jo
je
xchg
xlat
mov
inc
mov
je
hlt
or
sub
jmp
inc
add
push
out
cld
push
push
call
mov
pop
mov
xchg
jg
add
or
mov
les
loop
inc
stos
or
mov
inc
add
cmp
icebp
loopne
sbb
and
jg
push
pop
jnp
xor
popa
mov
sti
jbe
pop
lret
sub
jmp
ret
inc
mov
enter
stc
cwtl
add
int3
ret
add
je
add
iret
pop
repnz
inc
popa
enter
mov
mov
jl
mov
in
fcmovnb
pop
inc
and
dec
aam
nop
mov
xor
mov
scas
adc
sahf
std
test
push
ret
or
jg
inc
jo
fstl
push
aad
aaa
and
std
push
mov
loopne
mov
xchg
dec
sahf
dec
xchg
sbb
aaa
fisubrl
lret
dec
aas
out
xor
cmc
dec
mov
pop
cltd
jle
cmpsb
inc
cmp
mov
jmp
ja
aad
scas
dec
fstl
test
or
shll
jecxz
mov
in
int
sub
insl
mov
lods
dec
or
push
imul
leave
dec
pushf
inc
outsb
int3
into
imul
adc
pop
testb
xorl
xchg
or
xchg
mov
or
bswap
mov
pop
sbb
je
nop
sub
mov
cmp
push
adc
sbb
in
cwtl
and
lcall
sub
insl
das
leave
fs
or
aas
mov
mov
cmp
cwtl
push
jle
repnz
fldenv
mov
pop
insb
popf
out
xor
test
jle
test
cmc
jae
leave
shl
push
arpl
jno
cmp
mov
jno
ds
sbb
jb
lods
ds
inc
mov
pop
into
cli
out
add
fwait
mov
mov
std
subl
inc
jne
and
mov
test
mov
xchg
imul
adc
jg
dec
xlat
mov
int
cmp
rcrl
push
mov
lret
and
mov
repnz
das
inc
repnz
out
adc
add
or
addr16
int3
xor
xor
cli
inc
jnp
push
sti
mov
fists
sbb
movsb
adc
xchg
mov
sbb
pop
adc
sahf
lock
es
jnp
sub
mov
adc
push
lcall
push
mov
push
add
loopne
bound
jecxz
pop
pop
mov
inc
rorb
int
cmp
push
fisubrl
jge
ret
cli
inc
or
nop
call
addr16
cmp
lcall
inc
and
imul
fistps
mov
test
int3
ds
fcomps
sbb
cld
fwait
cmpsb
daa
push
movsl
out
mov
jbe
mov
in
out
std
and
push
outsb
imul
loope
mov
popf
or
jb
lods
outsl
mov
xchg
mov
jns
mov
imul
jb
and
test
dec
ss
les
mov
adc
jg
repnz
std
sub
and
loop
mov
jecxz
xrelease
inc
pop
fmull
mov
fwait
xor
xor
aaa
pop
pop
xor
mov
or
pop
in
leave
dec
repnz
mov
pop
lsl
xchg
mov
sub
inc
inc
test
nop
addr16
js
sbb
out
jbe
xor
xor
push
push
sub
into
cmp
out
mov
stc
inc
push
cmp
ja
jg
jo
add
adc
leave
xor
inc
add
dec
lret
lods
mov
or
out
jp
loopne
pop
xlat
sub
out
mov
fdivs
sbb
mov
jns
push
popf
sti
mov
xchg
lea
addb
mov
imul
push
dec
outsb
aaa
xor
sub
lds
aaa
push
es
mov
mov
movsb
stc
iret
sbb
add
sub
add
movsb
into
xchg
ficoml
in
test
and
pop
daa
mov
xchg
jbe
add
mov
push
jbe
sub
or
movsl
pop
pop
adc
mov
sbb
xor
imul
int
mov
jno
mov
sub
add
push
sti
ljmp
jno
pop
icebp
xchg
bound
pop
xchg
mov
pop
sbb
call
sub
mov
insb
adc
xchg
mulb
jno
jbe
adc
mov
inc
fs
mov
push
dec
aaa
ret
push
arpl
push
xchg
or
or
sbb
shrl
fidivrs
xor
ja
outsb
and
or
or
sub
insb
js
mov
pushf
cmp
sti
pushf
push
push
xchg
push
xor
movsb
sbb
scas
jp
xchg
push
xchg
push
loop
mov
jmp
ljmp
lods
mov
arpl
xchg
mov
adc
cs
into
adc
jecxz
cs
adc
and
adc
dec
enter
mov
cltd
imul
jae
jae
jle
shrl
mov
inc
xor
lods
adc
mov
andb
dec
je
and
push
xor
test
cmp
jbe,pt
pop
ret
xchg
jno
insl
adc
or
push
xchg
mov
cmpsb
movsl
and
mov
sub
adc
data16
in
sbb
sub
or
mov
jbe
inc
jns
jmp
lret
sbbb
insl
jae
cli
sub
roll
pop
call
mov
dec
pop
pop
les
rcll
and
inc
jecxz
mov
test
insb
fdiv
out
dec
inc
xor
xchg
es
aad
push
mov
lcall
cmc
stos
in
pusha
jb
je
sbb
jns
jp
int
xchg
lret
jne
add
cmp
inc
push
mov
ds
lea
icebp
fisttpll
jle
adc
xchg
fst
shr
dec
loopne
adc
pop
out
pop
push
mov
dec
loope
adc
fucomip
sub
sahf
pusha
into
push
sarb
push
andl
push
pushf
jb
pop
inc
mov
sub
or
push
bound
out
dec
roll
mov
xchg
imul
sbb
pop
flds
rolb
pop
ds
insb
lret
ljmp
out
icebp
ret
push
sahf
or
cmc
push
shll
aad
cmc
cmp
fsubs
cmpsl
push
ret
push
shrb
mov
movsl
xchg
jo
mov
sahf
cmp
add
scas
repz
and
mov
mov
addb
je
jne
and
stc
clc
daa
testb
mov
stos
adc
dec
push
fdivl
or
clc
xor
out
pop
ljmp
push
dec
mov
das
dec
fwait
sbb
aam
sbb
and
mov
and
jmp
xchg
lods
mov
pop
pop
push
iret
and
mov
stos
popf
in
cmp
push
sub
arpl
jmp
or
cmc
data16
shll
imul
das
cmc
pop
lods
test
inc
mov
lock
into
add
stos
and
adc
sbb
mov
push
ljmp
repz
gs
pop
dec
in
ja
mov
mov
push
clc
adc
testl
adc
or
xor
push
push
dec
mov
fcoms
test
dec
fsubrl
jecxz
data16
aaa
outsb
push
adc
or
or
pop
jle
pop
nop
stos
insl
outsl
lcall
xor
jno
add
xchg
sti
pop
call
push
lock
mov
sub
scas
subb
fsubl
xchg
gs
sbb
xor
add
mov
push
mov
fdivs
mov
jo
cmp
cwtl
stos
xchg
movsl
cs
pop
insl
jle
and
out
bt
shrl
push
out
cmp
mov
or
frstor
xlat
adc
jnp
scas
or
out
outsl
xchg
nop
jae
mov
loopne
daa
jae
ljmp
cltd
inc
push
cltd
andl
xchg
cmp
ret
pop
adcb
in
cmc
xlat
pop
lea
lds
aas
shr
add
cmp
mov
adc
lods
push
pcmpgtb
or
cltd
add
xor
ljmp
sbb
out
scas
push
sub
test
andb
push
fcompl
pop
or
mov
into
sbb
jae
add
dec
cwtl
add
mov
scas
jp
push
push
xchg
shlb
fimull
sub
daa
fisubs
inc
push
xchg
and
push
movsb
lock
insl
sub
ljmp
arpl
jb
push
ds
or
mov
add
insl
cmc
add
pop
or
mov
and
sbb
jb
insl
mov
addr16
mov
cwtl
jno
mov
aad
xchg
imul
lret
mov
notb
mov
outsl
inc
pop
inc
xor
popf
dec
add
sub
dec
cmc
scas
cwtl
orl
dec
das
or
or
sbb
test
push
ret
cwtl
jl
and
outsl
mov
loope
add
cmp
loopne
lahf
cld
add
ds
aas
pop
or
and
lock
cmp
push
add
inc
std
lahf
jge
cmp
gs
mov
movsl
jecxz
enter
push
mov
loope
das
push
mov
jp
xor
dec
push
adc
jb
sbb
mov
icebp
xor
push
subl
push
sub
xchg
pop
lcall
mov
jnp
imul
xor
pop
and
dec
vpunpckldq
div
mov
out
mov
xchg
mov
inc
xchg
add
icebp
into
data16
sbbl
push
sbb
mov
ficoms
lea
sti
arpl
jmp
lret
adc
js
shrl
sbbb
sbb
adc
mov
or
ret
or
mov
add
sbb
dec
sarb
leave
pop
and
popf
jmp
std
das
mov
or
outsl
ds
dec
jg
pop
push
outsl
daa
data16
xor
sbb
push
loop
sub
repnz
test
push
jmp
fs
add
and
jge
hlt
xor
jmp
rcll
shlb
xor
out
push
cmp
lret
rcl
mov
fiadds
dec
rol
adcl
lea
push
pushf
pusha
dec
rcrl
popa
jne
cmp
jo
cmp
clc
movsl
adc
xor
xlat
scas
sbb
sub
je
bndldx
xor
hlt
dec
cmp
sbb
cld
mov
jbe
aas
cmp
sbb
mov
mov
adc
inc
in
dec
jecxz
xchg
scas
sbb
out
fnstsw
sbb
verw
mov
cmp
push
sbb
enter
mov
mov
mov
mov
push
rcrb
arpl
and
mov
fnstcw
lods
shlb
mov
cmp
stc
addl
popa
dec
and
mov
addr16
add
call
lret
push
div
pop
sub
cmpsb
lods
pop
ljmp
pop
jo
int3
and
sbb
aam
fwait
clc
jns
dec
es
mov
jns
js
and
push
sbb
adc
or
jp
mov
cmc
lods
repz
jo
mov
mov
faddl
and
insl
or
dec
mov
aas
pop
add
or
ja
insb
mov
out
out
xor
xchg
or
pushf
cmpsl
std
fiaddl
not
popa
sub
addb
imul
daa
aam
push
roll
push
inc
test
test
lcall
ret
sbb
in
xchg
ret
adc
fstl
mov
dec
mov
data16
dec
mov
fwait
sarl
pop
add
xlat
adc
push
mov
cmpb
sahf
in
mov
orb
fs
cmpsb
popf
inc
cmp
mov
jg
ret
insb
mov
lods
mov
insl
adc
lock
andl
add
insl
lahf
mov
sahf
lea
adc
stos
push
inc
fdivrp
or
data16
mov
adc
lock
push
pop
pushf
sti
xchg
pop
and
sub
inc
in
fimuls
lret
jge
sub
cmp
push
iret
inc
insl
xlat
fisubrs
add
xchg
pop
pop
int3
jno
fsts
jge
ljmp
add
lea
jbe
aas
and
in
ds
mov
testl
fstpt
scas
xlat
inc
nop
lea
bound
imul
cmp
mov
sti
cli
decb
xor
dec
push
mov
cli
cmp
ljmp
xor
xor
mov
pop
dec
addr16
or
sub
cmp
inc
inc
or
add
outsl
mov
divl
or
jp
daa
adc
mulb
out
mov
lret
push
mov
mov
movsb
mov
sub
je
jnp
pop
shl
mov
sbbl
mov
mov
nop
or
mov
arpl
rcrb
sbb
je
jle
js
and
adc
sarb
mull
push
xor
into
clc
pusha
mov
rorl
jl
arpl
xchg
mov
xor
divl
or
lods
or
into
mov
adc
mov
ja
sub
pop
cmp
imul
lret
lods
adc
out
scas
fimuls
aaa
enter
lods
adc
addr16
mov
or
and
movb
jne
ds
call
out
dec
xlat
mov
leave
cld
imull
dec
inc
aas
fbstp
mov
insl
and
rorl
add
inc
push
jmp
push
jp
pop
out
loope
aas
adc
dec
dec
imul
sub
aas
xor
das
sbb
pop
push
das
or
mov
getsec
out
push
mov
sub
enter
aam
ret
loopne
pop
sub
bound
sub
push
stos
and
faddp
in
aas
movsb
dec
nop
pop
cld
jae
jge
sbb
les
inc
push
mov
lret
xchg
adc
xchg
aaa
int3
dec
repnz
jno
pop
rclb
inc
loope
and
pop
shrb
cld
jl
ret
jg
and
mov
dec
mov
jb
push
mov
in
ffree
mov
mov
push
inc
adc
mov
fidivrl
push
icebp
dec
pop
fs
shlb
push
int3
pushf
hlt
test
xchg
sbb
pushf
outsb
xchg
enter
fidivrs
ss
add
inc
sarl
jne
push
jmp
jno
stc
loopne
inc
or
inc
fiaddl
loopne
ja
dec
lods
bound
aaa
into
inc
push
movsb
enter
push
xor
mov
mov
repnz
lock
icebp
push
adc
mov
icebp
cmp
push
aaa
loopne
inc
shlb
add
adc
ljmp
jno
test
in
insb
or
xor
xchg
dec
adc
filds
jno
push
cmp
inc
shll
rcl
fdivs
ja
std
fcompl
xor
mov
adc
mov
das
lods
xchg
adc
jecxz
bound
in
xchg
inc
hlt
mov
lahf
mov
leave
dec
insb
xor
and
repnz
or
push
out
enter
mov
or
mov
xor
or
jnp
mov
lahf
mov
and
lds
inc
ret
sbb
outsl
lcall
loope
fyl2x
ret
mov
loop
shll
ficomps
push
mov
lcall
addr16
pushf
or
cmp
jmp
fadds
out
xor
lahf
pop
gs
push
repz
das
adc
pop
sbb
push
jns
out
lods
sub
lods
js
xchg
dec
xchg
lods
jo
cmp
push
and
lea
xchg
add
ret
rcrl
and
test
insb
jg
pop
jns
lods
add
xchg
push
dec
and
out
std
pop
mov
sbb
or
cmp
xchg
cs
subb
movsl
test
mov
or
lahf
or
xor
pop
lds
int
shlw
imul
mov
add
pop
aas
imul
push
mov
int
jae
jle
aam
cmpsl
ja
leave
outsb
ret
sbb
sbb
sub
xlat
test
jl
aam
xchg
push
outsb
mov
xor
mov
inc
mov
inc
inc
fs
and
into
mov
lret
inc
sbb
pop
orb
fs
mov
adc
pusha
push
shll
mov
cli
jl
mov
loope
lods
cmp
enter
cmc
cmp
sub
test
cmc
repz
jecxz
sti
sahf
push
cmp
stos
jg
in
cli
fiadds
cmp
std
sub
push
sbbl
mov
leave
lds
lds
mov
inc
adc
pop
rcr
out
jo
shlb
pop
push
xchg
xchg
aad
push
fs
out
dec
and
js
cmp
or
enter
das
cmp
mov
cmpsl
sahf
cmpb
dec
outsl
stc
or
test
cmpsl
inc
arpl
xor
hlt
gs
xor
fdivrs
ljmp
stos
push
pop
out
mov
fwait
and
enter
xchg
loop
pushf
xchg
andl
push
xlat
pop
aad
sub
sub
ja
xchg
pop
inc
aas
jnp
icebp
cld
mov
inc
adc
inc
jnp
lret
pop
in
aas
or
xlat
stos
out
fmul
adc
clc
and
enter
jl
lock
mov
bound
out
in
pop
dec
rorl
js
add
dec
nop
lea
inc
push
icebp
sub
and
lea
and
push
das
push
in
cmp
mov
rorl
jp
pop
in
push
push
outsl
xchg
in
cmp
and
sti
ljmp
out
add
fldl
pushf
cltd
sub
mov
fs
mov
inc
xchg
xlat
sub
rep
das
inc
pop
adc
jo
push
sub
jne
mov
pop
pop
popa
xlat
ret
call
mov
stc
pushf
pushf
adc
shrb
psubb
mov
jmp
mov
sar
cwtl
inc
pop
add
xchg
icebp
test
sbb
scas
hlt
sarb
popa
lcall
sub
bound
in
push
mov
fwait
mov
push
or
test
xorb
push
das
mov
sbb
or
loop
xchg
jg
out
repnz
scas
outsb
cmpsb
jae
out
test
cmp
movsb
mov
sbb
in
std
outsb
aam
mov
lods
xorl
out
pushl
mov
je
push
dec
dec
sarb
sub
stos
lods
mov
mov
and
cmp
add
mov
scas
cmp
sub
shrl
push
xor
jge
cmp
inc
xor
popf
andb
inc
mov
addr16
mov
push
inc
pop
fldln2
push
xchg
ret
loope
cs
mov
movsb
mov
or
mov
out
jbe
inc
or
cmp
orb
sbb
cmp
jmp
cmpsb
in
scas
fwait
dec
jp
mov
pushf
popa
lret
push
divb
mov
icebp
mov
lret
enter
rol
pop
in
sarl
dec
jmp
xor
sbb
nop
jmp
ror
sub
insb
sbb
push
jnp
stc
jno
push
mov
lret
je
jge
shll
mov
insw
test
pop
xor
fidivrs
jno
jg
lret
mov
data16
jecxz
xor
mov
popf
int
cmp
jb
jns
mov
xchg
movsl
stc
jg
ret
and
stos
les
pop
xor
mov
cli
mov
outsl
mov
add
xlat
mov
xchg
shr
jbe
insb
iret
insb
sbb
clc
or
sub
lock
cwtl
push
jle
movsl
push
sbb
imul
bound
xor
subl
fistpll
outsl
xchg
xchg
mov
loopne
in
in
mov
lods
mov
or
and
in
stos
mov
outsb
je
dec
aas
sbb
das
out
cmp
lahf
adc
push
mov
jnp
movsb
movsb
stc
call
mov
movsl
lcall
lcall
adc
cs
pop
addl
jg
stos
inc
loope
ficomps
mov
add
pop
jae
daa
sti
loopne
jle
insb
sbb
lret
ljmp
sub
pop
cs
hlt
pop
push
iret
mov
mov
aas
ja
dec
stos
nop
shll
jb
pop
aam
add
xor
popl
pop
push
push
jae
pusha
inc
push
mov
test
daa
jns
int
add
jmp
mov
xchg
mov
ljmp
test
xchg
xor
iret
aas
or
loop
scas
repnz
xlat
std
pop
adc
mov
clc
js
arpl
in
push
and
sub
mov
cmp
sub
push
es
mov
and
lods
fisttpl
fsts
dec
scas
adc
push
mov
push
cmpsb
xchg
out
rolb
pushf
insl
ss
push
in
pop
cmp
mov
sbb
push
rol
sahf
sbb
cmp
cli
sbb
inc
nop
sub
pop
push
mov
imul
aaa
jne
cmpsl
pop
mov
or
lret
pop
leave
loopne
push
mov
inc
fbld
push
pop
add
sbb
sbb
lods
pop
repz
jg
mov
mov
shll
xor
cmp
cli
xor
mull
mov
lods
in
sub
inc
ficoml
call
inc
nop
sub
inc
ss
jnp
pop
je
sbb
cmpsl
gs
inc
xchg
xchg
push
out
push
in
jo
mov
adc
mov
dec
stos
ja
lahf
pop
mov
cmc
lahf
push
push
popa
ljmp
jg
add
xor
rcll
inc
jo
cld
cmp
fnsave
push
dec
icebp
insl
sahf
fcoml
insl
inc
dec
push
mov
es
mov
mov
and
mov
inc
js
insb
bound
cmp
lods
movl
pop
stos
stc
or
xor
mov
fdivrs
cmp
adc
fldl
hlt
inc
adcl
fs
inc
mov
or
repz
lock
fisttps
js
out
sbb
iret
ja
jae
out
repz
mov
dec
sub
and
in
je
ljmp
xchg
sub
bound
bound
loope
adc
decl
loop
shlb
dec
in
sub
mov
push
push
inc
ficompl
xchg
hlt
inc
pop
lret
dec
test
mov
loop
xor
push
gs
roll
xor
aas
sub
or
clc
imul
dec
clc
xchg
pushf
mov
dec
ds
mov
push
xor
cmp
xor
rcl
xchg
cld
push
ret
push
ficoms
loop
jnp
ds
sbb
je
xchg
add
ficompl
push
jle
fsubrl
add
in
into
in
adc
and
xchg
sarl
lcall
add
xor
sahf
jl
scas
fiaddl
ret
push
xor
push
pop
aas
mov
repnz
push
sub
xchg
repz
jnp
ret
xchg
dec
cmpsb
out
sub
push
sbb
testb
cmpl
pop
mov
adc
pusha
dec
xor
push
fistps
data16
mov
sbb
push
enter
inc
jo
jae
aas
bound
sbb
js
jge
xor
ljmp
xchg
add
and
popf
addr16
adc
sahf
add
push
or
xchg
clc
enter
sub
jp
pop
inc
mov
cmc
pop
or
sub
inc
arpl
mov
jmp
jle
pop
add
dec
xchg
out
mov
or
fdivr
rcrl
mov
pop
inc
cmpsb
sti
popa
push
out
cmp
pop
mov
out
mov
out
adc
and
es
popf
fidivrs
daa
add
loope
mov
leave
sti
jo
dec
pop
fs
sbb
test
or
sbb
in
out
xchg
push
cmp
push
cmc
addr16
xor
pop
outsb
in
mov
mov
mov
icebp
add
sti
and
xor
lcall
mov
subb
outsl
ds
pop
cmpl
hlt
fstpl
inc
dec
sub
std
xchg
fists
dec
and
movsb
jne
xchg
dec
arpl
dec
aad
xchg
cli
fadd
lods
dec
inc
dec
fcomi
gs
xchg
daa
mov
into
jecxz
lret
pop
jb
mov
xor
jge
push
stos
xchg
test
and
sub
mov
mov
dec
push
jno
out
add
in
cli
repnz
or
fidivrl
pop
lods
sub
adc
mov
push
cmp
sub
sub
aaa
adc
or
sti
into
push
jge
mov
gs
add
dec
pop
jne
mov
inc
gs
pop
pop
inc
add
andb
xchg
pop
and
loopne
test
or
int
testl
imulb
aaa
outsb
call
xchg
mov
xor
icebp
pop
popa
mov
sub
xchg
jle
int3
fsubrp
in
out
stos
dec
inc
add
addl
fld
or
cli
scas
inc
outsb
push
lods
addb
cmpsl
adc
cld
push
push
push
add
or
int
jns
inc
cmp
les
loopne
mov
adc
or
adc
sub
lret
or
imul
outsl
repnz
enter
inc
xchg
sub
imul
fldenv
icebp
popa
in
arpl
mov
filds
nop
aad
popa
aam
int
in
inc
dec
in
sbb
mov
testl
ljmp
and
testl
cmp
mov
add
in
xchg
and
bound
rclb
or
mov
les
jge
pop
jmp
cmc
mov
sarl
mov
test
mov
or
inc
mov
icebp
rolb
and
xchg
lea
ret
aas
push
or
bound
adc
cmp
pop
xchg
inc
jo
add
cli
cmp
push
add
and
lock
dec
or
mov
mov
mov
test
fs
sahf
cli
push
mov
ljmp
pop
ss
shll
pusha
in
outsb
inc
lcall
adc
cmpsl
pop
popa
lret
push
mov
push
sub
mov
dec
fidivrs
cmc
pop
stc
xchg
sub
mov
sti
pop
sbb
aam
pop
xor
hlt
mov
nop
xor
pop
jne
arpl
jbe
pop
and
mov
sub
and
add
in
pushf
mov
cwtl
fldl
daa
push
out
mov
mov
dec
in
mov
push
dec
outsl
sarl
push
neg
inc
xchg
xor
pop
dec
xorl
fs
cmp
sub
aad
jl
pusha
adc
mov
rcll
push
and
cli
call
mov
mov
dec
icebp
jmp
push
lcall
jmp
jge
into
lretw
push
sbb
test
push
loop
cmp
push
bound
push
in
cli
dec
xchg
mov
pop
and
imul
dec
fdivl
sbb
pop
dec
pop
mov
lock
and
ret
addb
xor
pushl
loope
pop
fsubp
inc
adc
scas
inc
in
ja
fisttpl
sbb
xchg
mov
sahf
push
xchg
and
jae
and
fnstcw
sub
pop
mov
cmc
imul
jo
imul
outsl
inc
cmp
mov
enter
jg
test
cmc
icebp
dec
cs
cltd
arpl
inc
rorl
xor
in
mov
xchg
sbb
loopne
mov
dec
enter
scas
pop
pusha
xchg
push
adc
jae
sbb
jmp
clc
imul
mov
les
sub
push
test
fstpt
lods
aas
addl
and
lcall
je
dec
mov
sbb
xchg
mov
inc
sbb
xlat
and
adc
pop
dec
and
lret
cltd
leave
mov
mov
jb
xor
add
pusha
imul
movsb
ficoml
out
loopne
jg
sbb
add
imul
jae
shr
rcr
jbe
movsb
pusha
out
mov
rcrl
and
cmpsl
data16
xchg
nop
dec
jg
pusha
fists
mov
dec
ret
inc
sbb
mov
outsl
mov
jle
cld
imulb
addr16
lods
push
fidivs
stos
stc
pop
cmp
pop
gs
shll
in
sbb
push
inc
push
in
lret
xor
dec
jnp
dec
loop
jl
xchg
sahf
mov
shl
repz
jp
fwait
ret
pop
inc
inc
inc
xchg
mov
fs
and
and
jl
cs
cwtl
or
call
sbb
sbb
fcomps
xchg
into
cltd
or
add
jl
mov
sub
stos
divl
mov
cs
aad
pop
jge
cmp
push
jle
sti
add
gs
mov
stos
js
push
mov
lods
add
mov
pop
ret
es
scas
add
pop
stc
call
outsb
pop
es
or
jb
mov
repz
hlt
mov
push
add
gs
mov
clc
xor
loopne,pt
lcall
bound
dec
inc
xchg
jnp
rcl
hlt
add
xchg
nopl
insb
mov
movsb
hlt
shlb
rcrl
xchg
mov
add
pop
jbe
push
jmp
sbb
cli
mov
inc
jbe
dec
lss
inc
loopne
jmp
xor
in
popa
lcall
add
cmc
pop
xchg
mull
sarb
sub
add
mov
add
adc
cmpsb
dec
ds
sbb
push
enter
mov
jp
js
imul
loope
cmpsb
ret
andb
xor
mov
cmp
cs
sbb
push
xchg
idivl
es
push
repnz
jns
cmpsl
lcall
test
or
insl
xor
and
jge
cltd
or
outsb
fnstenv
outsl
out
adc
jg
fiadds
sbb
pusha
jl
in
xor
ds
int
pop
add
or
and
jo
jle
mov
push
push
scas
insb
push
adc
and
int3
leave
inc
mov
loopne
or
int
inc
sti
xor
les
and
xor
inc
aad
in
jb
shl
addr16
je
push
test
xor
jmp
inc
xchg
push
lret
stos
dec
sub
or
outsl
mov
inc
dec
hlt
fs
mov
sahf
movsl
ljmp
or
lea
aas
leave
scas
mov
lds
jb
ja
xorl
loopne
lret
call
aad
cwtl
lds
add
add
loope
jbe
leave
arpl
out
push
arpl
mov
aam
and
dec
fnsave
push
ret
clc
push
xor
pop
dec
push
dec
mov
mov
ret
push
push
add
mov
and
lds
icebp
hlt
out
lea
imul
test
addr16
cmp
fidivs
xchg
pop
inc
cmc
xchg
stos
cltd
orl
stos
pop
lahf
mov
shll
pop
out
sbb
xor
sbb
cmpsl
push
pushl
aas
mov
push
into
scas
add
repnz
pusha
push
and
cmp
je
js
mov
cmpsl
or
adc
xchg
push
fnstenv
cli
or
push
lods
dec
push
inc
jg
or
test
cmp
enter
push
dec
cmc
out
lods
push
mov
inc
pop
ljmp
cmp
cmpb
cld
mov
cmp
cwtl
int3
push
adc
enter
test
mov
adc
outsb
loopne
jmp
mov
inc
dec
nop
and
iret
movsb
negl
jbe
ljmp
sahf
inc
mov
sub
in
pusha
sub
xchg
movsl
and
jmp
xchg
jbe
push
lock
xchg
aam
popf
xchg
add
xcrypt-cfb
cmpsl
mov
xor
fucom
xchg
xchg
into
hlt
ret
loop
or
nop
push
cltd
cmp
jl
jl
scas
repnz
scas
bound
inc
imul
icebp
fdivp
repnz
pop
jnp
pusha
mov
inc
test
inc
repnz
fdivrp
leave
mov
jl
xchg
cmc
mov
pop
int
or
call
adc
cmp
fsubrp
loope
dec
mov
xchg
shrb
shl
fstps
and
lcall
xor
fldt
fisubl
stc
dec
push
in
cmpsb
push
lods
shl
leave
xor
cmpsl
in
mov
inc
xchg
testb
cmc
inc
mov
xchg
ret
pop
fs
das
xchg
sub
fldt
fcoms
adc
loope
xor
push
push
jl
cmpsb
fcmovnbe
leave
sbb
lock
pop
lret
cmp
mov
loope
jmp
fwait
and
xchg
jg
sbb
xchg
xor
xchg
enter
xchg
pushf
cmp
inc
sub
mov
mov
inc
dec
mov
test
push
mov
push
je
sti
enter
shlb
lret
testl
mov
jo
add
cmp
mov
xlat
aaa
adc
inc
pushf
int3
lcall
test
insl
push
test
fsubr
jo
hlt
or
inc
test
mov
push
sahf
fistps
mov
clc
lods
pop
sub
push
add
fs
or
pop
lret
enter
mov
into
mov
jns
out
sub
test
inc
inc
movsl
pop
sbb
mov
jns
fists
jae
imul
cltd
dec
repz
sbb
subl
into
dec
cmova
mov
lcall
out
sar
lods
dec
mov
mov
jo
add
mov
jp
imul
test
ja
ffreep
mov
stc
addr16
sahf
mov
jmp
dec
cmp
pop
inc
pop
js
loop
push
mov
scas
loope
jo
fnstsw
inc
test
xchg
dec
mov
sahf
xchg
sbb
int3
ja
xchg
push
add
nop
sub
sbb
fimull
pop
or
repnz
loope
adc
xchg
testb
call
push
in
outsb
xorl
out
adc
push
mov
sub
sub
fsts
ss
repnz
out
pop
push
push
loope
adc
add
int3
mov
lret
int
cwtl
aaa
lcall
rcl
aaa
xchg
test
sbb
out
jge
ret
push
sub
xor
ficomps
cmp
jle
fcmovnbe
dec
mov
pop
jg
loope
cmpsl
cmp
loope
je
frstor
xchg
das
jp
pop
sahf
adc
les
xchg
stos
scas
scas
xor
jo
and
int
je
mov
mov
fisubl
push
jbe
scas
insl
clc
inc
js
inc
pop
sbb
mov
mov
xchg
sbb
inc
jb
popf
jne
filds
cmp
lock
rclb
pusha
mov
mov
data16
jns
sti
mov
fistpll
lahf
sbb
es
mov
bound
push
repnz
dec
insb
adc
adc
nop
pop
sbb
daa
pop
in
icebp
pop
std
jne
test
scas
test
rcl
stos
add
shr
imul
or
pop
dec
xor
scas
add
or
jge
movsb
inc
dec
mov
sbb
inc
or
sbb
jo
or
lret
sbbb
adc
inc
es
fsts
mov
adc
cwtl
stos
jl
leave
data16
shrb
pushl
insb
std
fstps
xchg
jnp
pop
test
xor
xor
push
iret
js
sahf
jne
lds
int3
lock
mov
xchg
sub
adc
jnp
dec
jp
push
mov
inc
lea
lds
push
rcr
mov
test
shrl
int3
xchg
add
pop
ret
enter
add
outsl
xor
sub
sub
push
mov
jle
sbb
sbb
inc
xchg
faddl
xor
xor
pop
lock
lret
and
add
ror
sub
mov
jmp
mov
or
and
mov
jg
sbb
cmp
test
jp
outsb
aaa
cmp
fisttpll
mov
xor
push
cwtl
testl
jg
jp
test
fsubs
mov
or
push
outsb
cmp
pop
dec
sbb
and
add
sbb
sbb
insl
mov
ret
sbb
mov
sbb
xchg
addr16
jns
shl
cmp
ss
jp
add
mov
mov
adc
addb
imul
and
xchg
inc
bndldx
pop
xor
adc
jl
jno
loopne
ja
call
add
adc
les
inc
push
test
fldenv
ret
sub
ret
sub
pop
jge
push
dec
sbb
push
div
std
mov
dec
out
es
hlt
bound
pop
fst
xor
dec
adc
dec
jae
nop
push
cmp
cwtl
adc
sub
mov
push
mov
add
xor
ret
push
lods
xchg
push
out
push
cld
sarl
or
mov
push
cltd
dec
fs
xchg
push
dec
push
scas
pop
repnz
mov
mov
mov
xor
or
scas
push
xor
mov
shll
adc
loop
sub
aad
leave
lret
shrb
lods
mov
int
xorb
lcall
push
or
mov
push
loope
xchg
inc
movsb
lret
and
xlat
mov
repz
sbb
pop
jnp
fwait
mov
mov
mov
mulb
leave
inc
sbb
add
mov
lods
sub
sub
insl
xor
cs
mov
dec
insl
mov
add
adc
cmpsb
or
cmp
mov
pop
dec
xor
cld
add
scas
sub
dec
scas
xchg
rorb
add
cmpsb
pop
or
test
sbb
xchg
ret
insl
dec
das
and
testl
dec
je
leave
aam
fidivl
pop
mov
imul
stc
imul
add
or
pop
std
mov
cld
repnz
lret
out
std
and
jns
js
and
div
in
ror
lcall
adc
dec
jno
inc
test
cmp
cmp
dec
adcl
pop
cmp
pushf
rorl
lds
jg
adc
out
lock
outsl
repz
xor
ret
jb
pop
ficomps
daa
in
adc
aas
push
inc
jb
fmulp
std
in
sub
xchg
jle
push
outsb
adc
cmpl
imul
and
imul
adc
imul
sub
shl
lea
sbb
xor
pop
mov
aad
cld
pushf
sbb
out
jo
jl
test
ljmp
mov
sub
adc
pop
adc
cmp
popa
push
add
jl
mov
xchg
mov
out
ret
adc
lea
xchg
iret
shlb
dec
xchg
insb
sub
jg
popf
scas
lret
sbb
xor
imul
add
mov
mov
sti
mov
fldln2
das
or
roll
pop
push
and
test
mulb
and
fisubs
pushf
inc
aad
or
ret
push
push
jle
cltd
mov
mov
cwtl
adc
mov
mov
sbb
jnp
push
mov
clc
and
sub
add
lcall
push
or
arpl
ja
fidivrs
cld
jae
pop
int3
add
mov
lret
stos
lret
jo
inc
adc
adc
xchg
sbb
push
cmc
xor
into
or
push
cmp
lea
xlat
jno
xchg
rcl
icebp
lods
addr16
add
push
xchg
mov
xchg
popa
xor
or
addr16
ss
jae
into
or
cmpsb
in
dec
xchg
xchg
push
es
in
icebp
cwtl
jp
pop
leave
push
jmp
cmp
ljmp
in
addr16
push
xor
jmp
insl
stos
jl
data16
mov
cmp
lods
ret
sahf
stos
cwtl
inc
mov
in
pop
enter
sub
scas
pop
out
movsb
mov
loope
mov
icebp
push
dec
mov
inc
icebp
addl
fstpl
mov
sbb
daa
int3
adc
cli
and
dec
jno
nop
mov
or
popf
outsl
adc
xor
jmp
adc
xlat
push
add
sub
lret
cmp
push
adc
inc
xchg
xchg
xor
jne
aam
push
mov
test
cmp
outsb
fstpt
mov
inc
xchg
mov
pop
push
cmp
insl
filds
fidivrl
aam
cmp
mov
ret
shll
pop
sbb
enter
mul
lods
cli
dec
xchg
je
mov
jnp
repnz
and
ljmp
pop
pop
ds
inc
jecxz
adc
dec
push
jae
mov
outsb
int3
jbe
rcrl
xor
or
mov
jmp
lds
js
leave
or
fs
and
cmp
add
mov
sub
shlb
add
aad
pop
add
aaa
lods
fs
jnp
ret
push
loopne
adc
insl
pushf
scas
cmp
stos
or
iret
mov
add
mov
test
roll
xor
repz
aas
inc
lret
mov
decl
xor
sbb
sahf
in
mov
push
inc
xor
mov
pop
fdivrs
dec
jl
pop
mov
xor
in
rclb
icebp
insl
paddusb
sub
ret
int3
mov
adc
popf
jp
gs
mul
leave
jo
or
les
sub
in
fwait
jmp
and
stos
adc
insb
mov
ja
xor
mov
cwtl
sub
es
shll
mov
fisubl
or
cld
push
jg
lea
data16
adc
and
movsb
inc
cli
popa
fmul
cs
add
lock
arpl
aam
sub
inc
xlat
or
xchg
mov
imul
ljmp
and
push
push
push
jno
inc
jmp
filds
adc
sbb
and
pop
sub
std
lds
inc
std
lock
push
push
sbb
cs
push
mov
int3
sub
and
pop
js
pushf
int
pop
std
adc
cli
in
dec
inc
mov
sahf
outsb
stos
int3
mov
dec
cli
das
imul
orl
imul
outsl
imull
stos
pushf
insl
testl
inc
insl
jmp
bound
push
movsl
sti
nop
adc
mov
insl
pop
sarl
pop
stos
es
jns
sub
jl
shl
shl
sub
clc
cmpsb
cwtl
xchg
sahf
or
loop
xchg
mov
and
mov
jge
popa
in
push
iret
imul
xchg
and
xchg
pushf
push
mov
push
add
fsts
lret
lcall
leave
hlt
ljmp
fstpt
push
cld
dec
lret
call
pop
stc
dec
sarl
int3
or
les
iret
mov
cmp
sub
xor
jo
mov
add
mov
add
das
and
push
in
mov
repz
addl
jnp
pop
mov
mov
pusha
out
inc
icebp
push
lock
aaa
sub
je
leave
or
xchg
test
xchg
and
xor
mov
xor
or
sbb
aaa
icebp
adc
push
mov
xor
popf
add
test
repz
pop
xor
pop
sub
ret
and
mov
mov
notb
cmp
mov
push
cld
mov
push
seta
jnp
in
xor
push
xchg
adc
push
sbb
push
fld
sbb
sub
sub
pop
andl
cmp
popa
xor
xor
popf
jp
repnz
lret
jns
ja
lock
push
setg
fisttps
mov
fcomps
lahf
ds
out
outsb
orb
pop
into
leave
test
mov
inc
outsl
lods
inc
push
je
jle
in
sub
ss
test
cmp
mov
movsb
pop
pushf
mov
test
fnsave
inc
lods
mov
pop
fistps
bound
dec
mov
inc
popa
icebp
aad
stc
jo
xchg
cmp
push
pushf
sahf
pushf
push
mov
xchg
ss
hlt
ja
adc
mov
jbe
inc
mov
mov
push
and
adc
in
dec
sbb
fwait
lods
sbb
shlb
push
lock
nop
push
jmp
pop
cmc
cli
mov
xchg
dec
mov
jmp
mov
bswap
jmp
loopnew
xor
sbb
in
mov
jne
adc
movsl
xor
movsl
stos
movsb
leave
rcll
loop
sbb
bound
pop
iret
dec
enter
stc
je
shll
dec
xchg
jmp
insb
push
mov
dec
inc
push
mov
std
lds
lahf
mov
faddp
adcb
add
shll
subl
in
or
das
popf
in
jl
inc
testb
sub
pop
push
std
loop
rorb
ret
cmpsb
sbbl
mov
imul
dec
xchg
cmc
mov
cli
mov
pop
inc
jmp
mov
lds
sub
xor
ret
inc
mov
mov
pop
adcb
int3
inc
jno
jecxz
push
cmc
push
inc
mov
push
cmc
int
lret
dec
jbe
lea
enter
insl
mov
cmp
cmp
aas
cli
fisubl
jl
scas
jle
sti
push
movsb
rcrl
adc
dec
jge
xchg
hlt
jmp
mov
addb
filds
pushf
mov
insb
pop
inc
cltd
das
xchg
cli
lock
std
cmpsl
movsl
or
push
or
in
xor
jno
pop
int3
xchg
xor
push
dec
fwait
mov
and
and
and
jbe
push
icebp
scas
xchg
daa
frstor
xchg
rdpmc
imul
jp
mov
dec
jp
pop
imul
cmc
pop
inc
add
cmpsl
out
loop
pop
mov
inc
mov
lock
repz
aam
sub
out
push
adc
out
rol
imul
cmp
dec
cmp
lods
xor
inc
push
cwtl
dec
jbe
mov
push
loopne
lods
push
loop
dec
mov
movsb
ds
jno
clc
repnz
jmp
subl
and
notb
add
sbb
popa
pop
or
fadds
fldl
sub
pop
adc
sub
dec
add
daa
shrb
sti
nop
jp
jecxz
push
adcb
cmp
push
mov
sbb
divb
les
mov
test
sti
dec
mov
pop
ret
sub
dec
mov
add
dec
xchg
mov
ds
dec
rcrb
mov
jne
fcoms
movsb
or
ret
and
mov
rcll
addr16
hlt
push
lock
xchg
pop
xchg
adc
push
aam
or
cld
xchg
or
mov
sbbb
or
aaa
test
lds
adc
sbb
push
mov
lock
pusha
lods
jae
xchg
fists
scas
jb
jge
js
and
mov
or
sbb
test
dec
sbb
fnstenv
add
sti
lods
ja
sbb
in
out
pop
cmp
lock
sbb
clc
out
xchg
hlt
mov
xchg
add
add
lret
lods
add
cltd
rorl
cmp
test
je
sbb
and
adc
clc
jbe
xchg
stc
bound
mov
xor
push
addr16
lea
sub
shll
mov
and
test
mov
mov
pop
dec
call
cmp
xor
mov
sub
sub
popa
push
nop
add
js
ss
jnp
in
shrb
loopne
mov
psrlw
jge
aaa
scas
push
push
jl
sti
jge
inc
mov
push
stc
outsl
push
stc
call
imul
jns
sbb
out
ret
fsubrs
js
les
inc
xor
imul
iret
cli
sbb
mov
fwait
cmp
jnp
xchg
aas
pop
mov
shlb
push
mov
loopne
mov
repz
arpl
cmpb
jle
dec
das
loop
inc
fisttpll
jbe
mov
stos
call
andb
out
cmpsl
mov
sbb
int
in
inc
pop
mov
adcb
add
jg
xchg
pushf
je
xchg
aad
clc
mov
test
push
cmp
lock
cmp
lock
adc
pop
push
adc
mov
inc
push
shr
out
ffreep
push
fnsave
or
sub
push
stc
xchg
aaa
pop
mov
xchg
test
mov
inc
add
das
faddl
cmpsl
mov
sbb
sub
jno
lods
movl
rcll
xchg
enter
into
mov
push
mul
xor
andl
or
call
fsts
adc
in
mov
lret
pop
xor
push
ja
inc
aam
xor
loope
std
lods
lahf
bound
stos
mov
add
lcall
adc
out
pop
mov
pop
xor
stos
aad
adc
mov
data16
call
and
add
adc
push
mov
pop
popf
push
sarl
out
fisttps
xchg
mov
loop
or
dec
and
ret
ret
movsl
and
lods
dec
test
jle
pop
mov
mov
mov
out
lea
jecxz
inc
dec
cld
pusha
es
dec
fdivrl
dec
xlat
xchg
add
cli
insl
test
inc
mov
add
daa
or
add
push
fs
repnz
js
stos
ljmp
jg
cs
dec
sub
ret
dec
pop
xchg
dec
push
icebp
cmpsb
inc
and
pop
das
xchg
inc
mov
adcl
insb
rcll
xchg
pop
movsb
jnp
sub
hlt
and
cmc
test
cmp
lahf
cmp
fdivrp
pop
xchg
ja
jnp
mov
cmc
mov
pop
stos
stos
push
push
dec
fcoms
or
and
push
outsl
outsb
jl
out
std
xlat
imulb
sub
call
scas
aad
push
lcall
loopne
or
jg
dec
xor
in
inc
into
gs
data16
add
mov
jns
jae
xchg
loopne
xchg
in
jns
fiadds
xchg
fsubrl
lret
xlat
daa
jno
aad
std
test
nop
mov
jg
push
arpl
pop
stos
inc
and
das
inc
dec
lock
jne
pop
int
push
fwait
dec
test
out
and
dec
xchg
cmp
push
push
lahf
mov
dec
stos
lcall
pop
mov
aaa
iret
or
adc
mov
dec
mov
sub
movsl
js
jno
das
inc
adc
iret
pop
sub
pop
loopne
and
adcl
je
jmp
mov
jo
iret
scas
push
sub
lcall
hlt
xchg
sbb
cmp
and
and
lds
jbe
enter
pop
scas
in
mov
inc
loope
les
ss
aam
pushf
insl
pop
sub
mov
adc
dec
repz
es
mov
in
pop
and
dec
fwait
xchg
int
push
xor
mov
test
jb
pop
or
fcmovb
or
lods
loopne
cmp
mov
xor
sbb
icebp
xchg
and
cmp
ljmp
or
pop
inc
testl
cmp
pop
lds
xchg
les
lods
enter
dec
inc
test
es
pop
frstor
shll
sub
mov
or
in
cmp
push
jo
jbe
xchg
push
sbb
or
cmp
or
out
cmp
lret
xchg
aam
xchg
sbb
ljmp
in
js
cmpb
pop
int3
sub
jge
xchg
clc
decl
fimull
pop
outsl
lea
adc
or
repnz
fdiv
popa
lret
or
lret
fs
adc
push
or
gs
jg
xchg
pop
mov
and
xchg
mov
mov
test
int
mov
xor
insb
sbb
dec
xchg
push
cwtl
outsl
mov
dec
add
shlb
jge
cltd
cld
cmp
adc
scas
cwtl
jb
cmpsl
jecxz
out
mov
aam
add
imul
pop
pop
sbb
test
insb
flds
int3
cmpsb
add
stc
jb
or
adc
cwtl
cmp
cmp
out
jg
and
mov
pop
or
adc
dec
aad
jne
movsb
mov
inc
dec
in
int3
mov
xlat
pop
xor
mov
rclb
jns
inc
mov
add
xor
pop
ja
out
push
add
and
jp
or
xchg
sub
push
jge
out
add
int3
loope
xor
scas
out
out
addr16
fstpl
test
mov
js
or
xchg
cwtl
mov
mov
fwait
jnp
adc
cmpsl
test
sub
iret
adc
ljmp
sahf
int3
jp
jnp
pop
ss
outsl
or
shlb
push
mov
push
push
out
andl
shll
lea
insl
cmp
xchg
or
xorl
testl
loope
mov
fwait
sbb
test
les
sti
in
not
mov
jne
xlat
dec
sbb
mov
push
pusha
lds
jb
cmp
pop
add
xchg
mov
mov
mov
cs
in
mov
or
rol
fdivrl
repnz
shlb
arpl
aaa
cs
jmp
inc
jle
hlt
std
dec
adc
jecxz
scas
mov
dec
mov
xchg
xor
mov
das
call
mull
cmp
mov
cmp
inc
jg
sahf
out
outsl
ljmp
jnp
lods
repnz
inc
xor
notb
cmp
repnz
jmp
fnstcw
scas
cmpsb
loope
rol
xor
scas
popf
test
or
cmp
pop
sbb
sbb
or
imul
sti
popa
mov
loope
jae
cmp
ret
dec
add
in
jecxz
test
pop
and
outsl
inc
xor
add
sbb
sarl
xor
insb
sti
cmp
or
add
movsl
into
pop
stc
stos
dec
movsb
outsb
inc
pop
in
sub
pop
xor
or
stc
xchg
inc
repz
sarb
cmpsb
xlat
add
add
adc
cli
add
rorl
adc
das
loope
mov
pop
lahf
mov
sarl
into
out
dec
dec
in
or
fwait
ret
cmp
stc
inc
push
shll
xchg
cld
popa
test
loopne
nop
or
cltd
mov
shl
mov
add
xor
ds
cmp
das
imul
push
and
loope
repnz
loop
stc
pop
out
mov
xchg
imul
movsb
mov
scas
fdivs
int
enter
mov
xchg
cmpsl
mov
repnz
or
sahf
testl
pop
sub
sbb
roll
push
icebp
repz
lahf
pop
inc
xor
jbe
adc
dec
fnsave
dec
out
sub
leave
dec
shll
mov
cmpsl
xchg
das
mov
adc
mov
cld
out
loop
mov
in
iret
add
sbb
orb
pop
inc
cmp
cmp
ret
add
aas
ja
iret
movsb
jmp
movsb
fistpll
sti
outsl
pop
in
test
dec
xchg
int3
sbb
pop
pop
pushf
push
pusha
je
inc
jnp
inc
bound
iret
xor
adc
mov
lar
roll
idivl
pushf
xchg
push
cmp
adc
pop
andl
js
gs
pop
cmc
shll
mov
pop
imulb
xor
sbb
mov
insb
adc
sbb
scas
les
insb
fs
dec
jl
adc
dec
sti
ror
xchg
bnd
aaa
aas
fwait
shrb
jns
inc
and
cli
mov
insl
hlt
mov
mov
imul
out
lea
rcl
imul
int
xchg
cld
push
subl
sti
fucom
jmp
je
jns
sub
addr16
push
jo
inc
outsb
faddl
les
dec
lods
push
andb
pop
sahf
cli
ret
cwtl
xor
jnp
pop
cwtl
insl
inc
aas
icebp
pop
add
sub
out
jns
add
insb
jno
shl
repz
xchg
lcall
addr16
out
xchg
rcl
loopne
lahf
cli
jmp
int3
mov
pop
sub
sub
mov
popa
push
into
dec
push
jns
roll
dec
fdivs
pop
dec
inc
leave
es
pop
std
mov
aad
out
xchg
cs
xchg
lahf
pop
xchg
out
cmp
adc
outsb
or
iret
mov
xlat
repz
insb
mov
loope
imul
jp
testb
push
outsb
xor
pop
clc
addr16
sub
or
jns
pop
pop
ret
xlat
insl
leave
outsb
fs
enter
push
dec
mov
pop
add
loopne
incl
cmp
mov
mov
dec
cmp
push
push
mov
fstpt
inc
mov
pop
popa
aam
push
and
imul
cmpsb
adc
cmpsb
stos
and
mov
lret
mov
and
mov
sub
xchg
jmp
pop
out
cmpb
fdivrs
int
pop
adc
fsub
xor
fwait
mov
mov
pushf
dec
push
andb
js
fucomi
scas
add
sbb
iret
aaa
fcoms
out
xchg
inc
push
mov
mov
cld
sar
inc
inc
pushf
std
inc
cmp
inc
lock
push
and
and
mov
ret
mov
mov
xchg
popf
int3
dec
push
ret
in
cmpsb
dec
std
dec
icebp
mov
dec
push
jg
test
or
pushf
mov
inc
daa
pushf
pop
pop
repnz
shlb
sbb
pop
add
movsb
je
sbb
sbb
stos
mov
mov
bsr
in
test
mov
popa
stos
dec
mov
das
pop
or
cmpsl
outsl
stos
test
pusha
and
inc
push
mov
mov
andl
sbb
mov
or
mov
int
stos
imul
jb
dec
ss
test
in
jl
push
into
pop
or
jle
adc
leave
push
pushf
shl
stos
aad
sbb
mov
push
add
rolb
mov
popa
jne
dec
pop
mov
fs
pop
add
and
notl
cmp
cmp
inc
push
not
neg
jle
pop
jle
and
jp
push
xor
fnstenv
cld
mov
adc
xchg
dec
lods
lods
sub
add
stc
pop
pop
aad
inc
sbb
cmp
sub
test
gs
xchg
mov
sbb
mov
xchg
popl
xchg
jo
pop
lock
cltd
test
jnp
cmp
bound
insb
and
fdivr
adc
gs
repz
ret
pop
xor
jl
pop
mov
mov
inc
sbb
pop
test
cltd
adc
push
fstpl
dec
lahf
xchg
bound
cmp
fsubs
mov
notl
xlat
aas
jmp
cmpsl
mov
dec
xor
jno
jbe
pusha
sub
xchg
adc
cmp
inc
movsl
push
pop
lods
aad
in
jns
ds
mov
mov
sti
mov
lods
and
mov
loop
mov
xchg
jge
jno
aad
dec
notl
dec
inc
push
aad
out
mov
lahf
je
pushf
lods
xchg
cmc
push
adc
sbb
xchg
movsl
fidivrs
rorb
inc
fs
movb
int3
mov
or
sub
cli
mov
cwtl
jle
sbb
imul
rorb
ficoms
mov
mov
xchg
adc
mov
lods
gs
sar
int3
sar
adc
test
cmc
data16
mov
hlt
in
in
or
push
or
stc
ja
lea
mov
push
sub
dec
and
add
push
mov
lock
or
adc
jno
pop
push
sbb
and
lcall
fidivrl
mov
mov
push
xlat
js
sbb
dec
dec
leave
bound
emms
jl
sub
cmp
int3
ret
mov
mov
inc
and
int3
xlat
popa
inc
mov
or
addr16
cltd
jmp
adc
xlat
test
mov
push
sbb
pop
dec
mov
test
mov
push
jg
dec
test
xor
lods
inc
addl
loopne
mov
ds
sbb
mov
push
cmp
cmp
add
imul
dec
scas
pop
mov
cmpsl
or
cld
push
inc
jae
adc
dec
fs
std
shlb
xor
pop
xor
xor
mov
mov
mov
mov
jg
and
call
test
sahf
and
jo
push
xchg
clc
xchg
cld
dec
ret
inc
push
and
xchg
and
pop
jbe
mov
aaa
and
js
test
add
cmpsl
jne
in
xlat
lret
movups
cmp
ss
ror
xor
pushf
inc
test
mov
mov
pop
xchg
sub
dec
adc
fisubl
repnz
mov
mov
sub
ret
lret
cmpsb
jp
cmpsl
jl
sbb
shrl
outsl
mov
ss
push
pop
dec
loop
inc
jle
push
inc
xor
or
cmp
call
bound
xor
add
rol
jno
and
add
in
adcl
nop
inc
adc
lret
mov
xorl
inc
push
xchg
add
iret
xchg
adc
insb
sub
jle
mov
push
sbb
or
inc
adc
mov
out
fsts
arpl
mov
add
mov
adc
inc
xlat
jp
inc
adc
shrl
jl
jo
aaa
jecxz
mov
inc
mov
popa
mov
jno
mov
sub
stc
lods
push
outsb
clc
rcll
das
clts
cmc
js
jnp
cmp
cs
subb
jle
sarb
mov
push
das
sbb
outsl
jno
stos
iret
es
into
ds
jns
cmp
stos
pop
pop
jecxz
xchg
in
cmp
or
cmp
std
xchg
mov
test
data16
cli
adc
loope
in
sahf
adc
cmpsb
test
mov
jle
cmp
mov
xchg
pop
pop
inc
adc
xchg
cmp
sbb
and
sub
cli
ret
lret
sbb
or
adc
ljmp
dec
sarb
je
loopne
jle
imul
mov
js
lods
inc
hlt
mov
jb
rclb
add
xlat
dec
fstl
popf
jl
add
adc
negb
scas
push
xor
scas
jl
pusha
add
mov
push
inc
inc
mov
hlt
mov
adc
popf
negl
push
xchg
inc
and
dec
lods
shl
fsub
aas
pop
out
push
leave
jns
iret
fcompl
popf
inc
std
push
and
push
adc
aaa
outsl
mov
sub
daa
xor
inc
xchg
fisttpl
dec
or
out
mov
cmp
int3
inc
and
jnp
loop
mov
js
jg
sbb
aam
mov
imul
in
stos
stc
mov
lret
test
test
mov
cli
jo
cmp
in
shlb
cld
cs
push
jmp
mov
jge
push
mov
in
neg
stos
mov
sarb
dec
in
lret
pop
cmp
mov
cmp
pop
dec
lds
jb
mov
jl
push
lock
mov
push
neg
test
push
int3
mov
jbe
mov
lods
xlat
stos
loopne
dec
lcall
mov
pop
cwtl
sub
or
sti
into
adc
inc
imul
mov
xchg
mov
push
jb
test
mov
adc
cmc
mov
push
mov
jnp
pop
sub
test
hlt
sti
pop
mov
jns
imul
mov
fstps
orl
aam
dec
mov
and
stc
fwait
or
mov
add
out
movsl
out
xor
fdivrl
push
test
cli
dec
pushf
xchg
dec
xchg
bound
cmp
dec
mov
lea
sbbb
in
xor
fists
mov
mov
movsl
pushf
cmp
stos
mov
addr16
jbe
and
js
or
ja
in
xor
or
in
jns
insb
or
cld
movsb
push
ficomps
pop
fnstcw
add
sbb
sbb
and
call
add
mov
inc
and
out
gs
ljmp
sub
add
outsl
inc
xchg
cltd
dec
push
mov
push
push
jle
in
jns
popa
rorl
ret
bnd
pop
sub
xor
mov
gs
rolb
shll
sub
icebp
cmp
adc
cmp
mov
lea
in
xor
fnstcw
jne
xchg
jp
mov
push
jns
in
icebp
aaa
or
icebp
xlat
pop
andl
imul
or
stc
lahf
fbstp
clc
sahf
out
jge
adc
stos
jae
push
dec
lea
jns
ret
fiaddl
and
add
out
and
sub
ret
cmp
arpl
or
add
or
shr
mov
loope
lods
iret
ljmp
imul
jge
sbb
and
and
xor
mov
lahf
pusha
out
es
mov
test
enter
lds
lock
pop
adc
xchg
mov
pop
sbb
pop
cmpsb
mov
push
shll
mov
mov
jp
pop
hlt
call
idivl
jne
xchg
les
mov
xlat
xchg
xor
rclb
push
inc
in
xlat
xchg
jbe
stc
mov
add
shrl
pushf
and
out
lcall
mov
pushf
sub
aad
sbb
sbbb
ljmp
sbb
lods
or
adc
arpl
out
inc
dec
xchg
xchg
adc
int3
mov
ja
test
inc
mov
nop
test
mov
xor
adc
jecxz
push
cmc
xchg
pop
mov
movsl
dec
inc
xor
fs
sbb
sahf
jp
mov
pop
cli
sub
and
jo
imul
lods
ja
lods
inc
popa
das
sbb
hlt
sbb
jl
xchg
clc
notb
lret
out
out
cs
and
mov
popa
jmp
fcomp
xchg
mov
mov
fsubs
pushf
fdivp
fisubrl
out
lcall
and
add
sti
movsl
cmp
jno
lret
xor
push
cmovno
ds
imul
jnp
xor
dec
pop
movsl
pop
xchg
fisttpl
push
pop
mov
xor
pusha
mov
mov
jle
icebp
xchg
sub
adc
inc
inc
jecxz
repz
sub
sar
clc
mov
cmp
repz
notl
pop
inc
xchg
mov
pop
fidivrl
inc
jmp
mov
add
loope
insb
loopne
mov
jp
data16
sub
pushf
push
or
jne
mov
lock
lods
push
nop
leave
or
cmpsb
sbb
push
dec
fidivl
and
adc
loop
pop
jp
add
pop
pop
jae
cld
cmp
jecxz
xchg
fs
popf
mov
xchg
lods
js
jb
mov
sbb
sbb
pusha
cmp
ret
movsb
xor
je
fs
adc
jnp
je
fs
sbb
xlat
notb
jno
sbb
xchg
sahf
cmp
xor
insb
aas
ljmp
into
stc
add
or
add
push
movsb
ret
jo
idiv
ret
scas
sbb
rcrb
icebp
fcmovne
mov
push
scas
add
pop
movl
imul
mov
push
je
lret
push
into
mov
push
push
add
sbb
cmp
and
std
int3
ss
lods
in
mov
imul
icebp
pop
xchg
stos
test
or
mov
xchg
push
mov
and
ja
cmp
xor
hlt
movsb
cmp
movsl
ds
xor
sbbl
cwtl
jp
dec
rcrl
sub
popa
cmp
and
xchg
xchg
aaa
jg
push
hlt
xchg
cs
adc
cmova
out
bound
vminss
popa
cli
cmp
xor
or
jbe
lahf
mov
aaa
sub
out
leave
pop
pop
push
cmc
into
sahf
movsb
shrl
enter
add
cmp
sbb
hlt
fs
int3
mov
jg
mov
sbb
imul
clc
sub
lods
sbb
sub
xchg
mov
les
mov
movsb
sub
int3
jmp
nop
outsl
test
popf
or
aas
sahf
pop
mov
push
push
insb
stos
test
add
jo
adc
rolb
lret
cwtl
stos
xchg
cltd
imul
mov
and
and
pop
lret
nop
push
mov
push
clc
xchg
lcall
lock
xchg
adc
inc
xor
push
mov
std
jnp
data16
mov
fwait
adc
cmpsb
out
fcom
inc
test
xchg
out
adc
movl
mov
inc
inc
cmpl
cmc
or
testl
xchg
mov
xchg
out
mov
in
sbb
rcrl
loop
test
sub
xchg
xlat
pop
leave
iret
xlat
lods
dec
xchg
cmc
xchg
sbb
outsb
test
movl
pop
adc
int
or
pop
mov
std
push
sub
mov
aad
sti
insb
inc
lock
and
dec
outsb
sub
cmp
sahf
add
mov
xchg
in
fisubs
into
sbb
scas
cmp
mov
lds
dec
xor
or
test
xchg
mov
pop
mov
int3
mov
repz
fdivrs
adc
jl
jecxz
dec
sbb
lea
jno
inc
fs
mov
lock
mov
mov
and
std
jmp
ret
dec
mov
xchg
sbb
std
xor
inc
cmp
dec
mov
sar
fstpl
inc
jle
dec
add
out
mov
loope
add
sti
in
adc
inc
dec
jle
dec
in
aaa
add
jp
push
dec
cwtl
xor
nop
lock
xchg
push
into
subb
and
pop
sub
pop
jg
fcomip
stc
mov
sbb
or
mov
sbb
push
jae
push
icebp
popf
stc
scas
sarl
add
add
mov
mov
lds
popf
test
xor
xchg
test
insl
mov
inc
inc
call
dec
dec
pop
out
mov
es
jmp
sub
xorb
push
andb
fbstp
fisttpl
movsl
push
aad
fisubl
add
cmpl
or
pop
pop
insb
cmp
cmp
pop
sbb
inc
int
adc
cmp
js
jmp
outsl
push
inc
jecxz
adc
or
in
xlat
inc
test
data16
mov
dec
lahf
adc
xchg
jns
stos
js
jecxz
dec
iret
add
adc
push
sbb
es
jl
inc
dec
sub
or
or
aas
jg
jge
cld
cmp
mov
inc
push
jle
into
or
mov
test
ds
push
inc
and
push
mov
lods
pop
sar
mov
add
fdivl
hlt
js
les
cli
in
lods
inc
mov
mov
pop
jno
mov
xchg
mov
xchg
pushf
rcl
adc
int
ret
sub
push
fdivr
sub
and
dec
jp
cmc
and
lock
xor
mov
aam
imul
jmp
jo
adc
mul
test
into
push
into
jns
test
aad
outsl
pop
sub
loopne
pop
fisubrl
xchg
mov
fbld
sbb
mov
or
push
dec
cmp
and
xchg
push
inc
mov
movsl
fdivl
repnz
in
sbb
jne
sub
push
pop
mov
push
js
lret
xlat
push
scas
sbb
aam
andb
pop
sbb
mov
jle
mov
rorl
xlat
loop
nop
cmpsb
repnz
ret
out
stos
mov
lret
pop
xor
aam
adc
addl
popf
sti
mov
push
repz
or
dec
push
mov
pop
andl
jne
jl
or
mov
xchg
data16
cmp
sub
shr
push
push
xchg
push
mov
cmp
dec
push
not
jmp
shll
add
rolb
popf
aam
mov
cs
popf
fisubrl
inc
fwait
pushl
aas
dec
jno
mov
mov
xlat
shll
jmp
sub
gs
cmc
mov
inc
cmp
pop
mov
inc
lahf
pusha
mov
ja
vandnpd
movsb
into
jnp
mov
imul
push
push
xor
out
stos
cmp
cmpsb
sbbb
adc
ret
js
adc
imul
mov
add
lods
cmc
xchg
push
inc
rcrl
mov
decb
add
xchg
pop
sti
insb
imul
xchg
and
mov
and
pop
mov
inc
roll
movsb
pop
sti
xchg
add
cmp
fcmovnu
insb
pop
shrb
mov
and
lret
gs
cmc
jae
fwait
call
cmp
ret
hlt
adc
cld
cld
xor
push
and
sub
and
test
imul
xor
out
orb
cli
dec
sahf
in
xchg
stos
and
mov
aam
popa
dec
pusha
mov
mov
lcall
repnz
adc
sarl
mov
mov
pop
in
movsb
into
test
push
push
repnz
jp
mov
cmp
cmpsl
cli
fisubs
inc
mov
adc
sarl
push
pop
js
add
int
fldenv
mov
insb
xor
mov
mov
dec
shr
or
decb
jbe
shr
test
xchg
in
fmull
fsubrl
pusha
xlat
pop
addr16
ret
xor
iret
ficoms
mov
aad
sbb
lods
inc
push
sbbb
jmp
insl
repnz
iret
fwait
jae
inc
mov
pop
adc
mov
fisttpl
cwtl
addps
xor
rcr
mov
mov
mov
mov
add
dec
lret
scas
repnz
lods
out
push
fdivrl
lcall
push
fstpl
outsb
mov
xchg
mov
and
push
inc
popf
cld
pop
jp
std
sub
mov
test
mov
iret
push
ret
add
out
jecxz
xchg
or
fnstcw
add
je
ds
and
shll
outsb
jns
and
push
stos
test
pop
sub
sbb
test
xlat
inc
pop
iret
popa
lret
mov
test
add
jnp
xor
mov
pushf
mov
divb
scas
sub
loop
out
xor
cmp
push
inc
xchg
jbe
sbb
std
mov
call
aam
out
pop
adc
pushf
sbb
sbb
mov
arpl
add
scas
es
cli
test
sub
insb
push
aad
xchg
pusha
push
jecxz
jbe
int3
dec
iret
mov
jb
adc
testl
nop
mov
cmp
test
mov
dec
popf
inc
mov
sub
hlt
popa
push
pop
int
movsb
movsl
sub
pushf
movsb
pop
repz
test
test
mov
xor
sbb
leave
dec
sti
psubusw
push
lret
xor
pop
dec
dec
jl
mov
mov
xchg
outsb
add
outsl
xor
xor
sbb
jbe
pop
aas
out
mov
mov
adc
jb
sub
fldenv
add
mov
adc
dec
int3
sbb
and
test
shrb
cmp
mov
mov
dec
inc
mov
data16
outsl
mov
sets
cmp
hlt
outsb
inc
pop
popf
sub
and
lods
decb
dec
xchg
mov
nop
mov
mov
push
stos
mov
pop
or
sahf
push
imul
andb
fucom
negb
push
add
push
pushf
ljmp
mov
and
lea
mov
out
jnp
or
push
xor
and
test
and
fstps
lods
push
dec
jecxz
or
insb
add
inc
outsb
outsb
outsb
ret
ss
je
cmp
cmpsb
lar
shr
dec
adc
inc
lea
sti
mov
movsl
ret
mov
sub
inc
xchg
pop
fldl
mov
aas
or
jmp
pop
xor
popf
out
push
push
imul
aaa
xor
imul
call
push
mov
adc
mov
and
sbb
in
dec
daa
aaa
mov
idivl
fimull
mov
sub
add
and
adc
outsl
ds
jne
pop
cltd
dec
scas
lods
xor
addb
imull
loop
jae
mov
push
and
repz
fcmovnb
loopne
stos
mov
fisubs
and
jo
xor
dec
cmp
xor
cwtl
bound
popa
in
insb
dec
dec
adc
pop
jae
testb
push
loopne
jmp
insl
xor
push
jle
cmp
in
jmp
dec
jne
ja
mov
sub
ljmp
mov
movsl
adc
xor
dec
inc
push
push
stos
push
pop
inc
int3
push
popa
mov
outsb
jge
shrd
sbb
and
aam
insb
mov
hlt
cltd
jbe
inc
add
inc
in
xchg
decb
jg
mov
jns
inc
cwtl
pop
fbstp
or
xor
lea
rcl
push
pop
ret
out
inc
mov
pop
enter
add
gs
sbb
dec
xchg
mov
test
push
movsl
cs
rcr
divb
sarl
lods
cmc
jae
mov
cmp
lods
lods
mov
dec
mov
out
je
icebp
cli
xchg
ret
jne
dec
daa
gs
lds
mov
gs
inc
pop
int3
aas
mov
fs
sti
pop
sarl
mov
out
add
aaa
cmc
xchg
dec
fcoml
vmovaps
jae
aad
xorb
lock
dec
lea
out
bswap
xor
sbb
fdivs
mov
add
or
sbb
fs
das
xchg
or
aam
daa
xchg
xlat
enter
movsb
cmp
dec
in
add
or
mov
loop
arpl
pop
mov
ja
stos
icebp
pop
orl
dec
jne
sbb
rclb
mov
push
out
or
nop
loopne
dec
inc
repz
push
or
lahf
pusha
jmp
mov
incb
aas
mov
int
dec
fisubrl
imul
aas
push
testl
mov
nop
sbb
daa
sub
pop
sbb
cmpl
sbb
mov
mov
push
pop
push
repz
cs
xchg
push
dec
xchg
inc
push
pop
mov
cmp
inc
int3
sub
lret
adc
imul
int
call
push
and
hlt
lahf
fbstp
xchg
adc
and
xor
fs
in
mov
nop
outsl
and
hlt
std
mov
dec
ja
pushf
cli
xchg
outsb
into
test
mov
mov
pop
addr16
jb
loope
dec
jo
dec
inc
jp
xlat
mov
ret
jbe
sbb
aaa
push
push
inc
mov
lods
movsl
scas
leave
lods
out
jo
mov
jb
jb
fcoms
xchg
inc
cli
push
push
push
out
jmp
cmpsb
test
and
shl
and
cmpsb
popf
jge
cmp
dec
xor
mov
cmp
mov
fnstenv
icebp
aad
xchg
jno
jo
push
cld
push
push
loope
pop
dec
roll
jle
ja
ret
insl
adc
push
out
push
das
fdivs
mov
cmc
das
out
fcoml
ljmp
rclb
outsl
inc
std
sbb
rcrl
sub
jp
in
mov
call
jae
mov
mov
dec
dec
lret
scas
xchg
sbb
fucomp
xchg
mov
cmp
mov
lcall
imul
mov
dec
les
xchg
ljmp
inc
sahf
jns
cs
clc
inc
jecxz
xchg
loopne
cmp
inc
addl
xor
mov
sahf
aad
jp
xor
xchg
cwtl
movsl
or
pop
jge
inc
push
cmpsl
dec
add
mov
adc
ret
repz
sahf
inc
mov
push
xor
push
test
aaa
out
sarb
mov
mov
mov
sub
pop
inc
imull
or
repz
mov
arpl
movsl
pop
movl
test
mov
jae
jno
push
adc
out
mov
in
inc
lods
mov
xlat
xchg
int
in
lret
mov
sub
testb
mov
imul
inc
xor
sub
addr16
mov
mov
lock
nop
aas
xor
fimull
adc
pusha
jno
pushf
adc
xor
in
iret
pushf
ret
add
push
je
imul
psrlq
mov
pushf
push
bswap
fninit
in
push
inc
inc
cmpsb
mov
stc
movsl
test
fists
jb
into
es
push
xchg
mov
in
push
lds
sahf
push
jge
addb
push
dec
push
adc
xchg
pop
and
scas
mov
jb
add
je
pop
lods
xor
adcl
sbb
in
movsb
popf
into
mov
ds
sti
pop
mov
jae
mov
mov
add
arpl
mov
pop
mov
loop
js
jg
rcl
inc
hlt
lods
sbb
je
test
push
or
cmp
push
and
arpl
gs
pop
sub
jno
jo
sub
mov
jp
mov
fs
jle
ret
jne
in
jle
lret
or
xchg
lods
adc
movb
ljmp
dec
call
jg
xlat
xchg
sub
adc
ret
sbb
add
xor
decb
xchg
popa
and
nop
push
sub
mov
arpl
jmp
cmc
jno
jbe
xchg
fnstsw
inc
mov
sub
int3
les
test
sub
pop
pop
stc
sti
lds
pop
jecxz
mov
mov
inc
cmpsb
or
and
xor
pop
adc
pop
xor
cmpsb
out
xchg
push
mov
sub
cltd
push
nop
leave
incb
adc
mov
in
xchg
fnstenv
mov
sub
jbe
outsl
push
or
mov
mov
mov
mov
adc
movsb
outsl
sbb
inc
or
fst
in
xchg
pop
gs
add
sub
xlat
aaa
jl
add
dec
sbbl
cmc
jle
adc
testb
jmp
sub
add
push
dec
ret
inc
lods
sbb
mov
cmpsl
fstps
sbb
cmp
lds
inc
dec
push
push
and
popf
sub
mov
push
jo
jle
xchg
xchg
and
xchg
jb,pn
pop
xchg
cmpsb
out
ds
sahf
adc
pop
pop
mov
rclb
inc
push
aad
mov
out
lret
dec
cmp
xchg
outsb
ljmp
add
test
pop
pop
jns
and
jmp
std
fidivs
xor
popl
fs
iret
cwtl
add
ret
shrb
jo
xchg
push
adc
pushf
and
xchg
das
ss
repnz
cmpsl
insb
inc
ficomps
xor
dec
mov
dec
push
or
rcll
ljmp
in
repnz
incb
pop
popl
outsb
ret
adc
je
cltd
push
mov
out
nop
sub
popa
adc
mov
mov
out
leave
mov
add
neg
xlat
jle
xchg
mov
loop
das
mov
pop
gs
or
sbb
aaa
lret
popa
mov
or
jg
xlat
sbb
sbb
cltd
inc
adc
mov
xor
xchg
pop
fs
push
sbb
mov
push
mov
xchg
push
cmpsl
call
addb
cmp
aam
pop
loopne
fnstcw
sub
or
cmpsl
add
sub
popf
aaa
mov
sub
cmpsl
cmp
sbb
in
loop
lahf
jle
sub
mov
dec
scas
or
fwait
add
int3
nopl
dec
and
inc
xchg
fdivr
sub
push
push
popa
leave
jne
data16
fwait
es
dec
pop
or
arpl
clc
popf
test
dec
popf
xor
sbb
jle
or
mov
pop
insb
pop
xchg
pop
cmp
call
jl
pop
jmp
push
ja
sbb
cmp
es
mov
mov
les
movsb
rclb
ss
sub
scas
dec
mov
push
mov
fidivrs
jl
sbb
dec
lods
leave
sub
aaa
mov
jae
jp
insb
or
push
mov
outsb
push
adc
lret
pop
xor
sub
jp
jl
mov
aam
test
enter
pop
in
mov
add
fsts
mov
pusha
xor
out
fisttps
ds
std
push
into
mov
mov
orl
out
xor
rcrl
repz
outsb
fisubrl
cmpsl
out
or
pop
jae
mov
adc
xchg
lret
pop
and
dec
sahf
cltd
sub
inc
icebp
jl
and
xchg
jl
test
cmp
inc
in
test
fsubs
pop
dec
jnp
cltd
ds
rclb
push
cmp
add
lods
clc
gs
call
xor
cmpsl
shr
popf
jge,pt
push
mov
xchg
out
xchg
lods
fsubp
enter
into
inc
jns
in
lret
mov
push
mov
test
push
ret
mov
aaa
cltd
dec
test
xchg
cmp
inc
inc
or
hlt
insl
mov
test
mov
mov
in
or
xchg
scas
ficoms
in
add
shrl
mov
sub
bound
or
sub
mov
adc
stc
test
jno
movsl
flds
xor
cwtl
pop
pop
gs
cmp
or
push
rcrl
rcrl
ss
inc
dec
movsl
cmc
es
cld
lret
sub
test
jo
movsb
xor
out
aaa
jmp
insb
sbb
lods
aas
xchg
mov
jp
mov
xchg
adc
push
pop
test
scas
aam
mov
call
jae
popf
insb
mov
les
sbb
and
lock
popa
jge
fsubs
fdivs
mov
js
lods
dec
cmc
daa
jo
push
insl
andl
mov
and
jae
pop
inc
dec
aam
jae
mov
shlb
sub
lcall
xchg
idivl
repnz
mov
push
sbb
dec
lds
bound
shlb
stos
rol
sub
xchg
inc
sub
pop
mov
pop
xor
rcll
push
push
lcall
adc
fsubs
inc
xchg
in
movsl
ja
mov
inc
jge
dec
arpl
std
bound
shll
pop
sbbb
sub
push
fcmovu
aad
lcall
dec
ret
xor
lods
lcall
lret
call
cmp
push
stos
inc
and
adc
sub
inc
xchg
pop
lea
int
or
shl
mov
inc
test
sub
fstpl
loop
or
push
jns
push
jecxz
and
push
push
sbb
leave
sbb
test
or
xchg
mov
and
lcall
sbb
add
in
es
adc
mov
xchg
pop
and
ja
mov
test
aam
xor
fcoml
cmp
data16
dec
mov
loope
push
cmp
test
fcompl
pop
pop
bound
jle
test
adc
lods
mov
pop
dec
jecxz
mov
lds
ja
xor
dec
ror
je
push
pop
push
mov
inc
jmp
int
xchg
jg
inc
lods
stc
js
jns
cmp
stc
pushf
sbb
loope
push
lods
pusha
insb
bound
mov
test
outsb
sbb
dec
int
cmp
das
sbbl
jmp
sbb
fs
lds
clc
mov
adc
dec
xchg
icebp
mov
add
add
pop
std
outsb
ss
dec
loope
jae
ret
jmp
mov
ljmp
enter
adcl
and
push
mov
mov
pop
mov
mov
hlt
jae
or
add
leave
mov
cmp
das
sub
ja
xchg
fmuls
out
bound
or
push
inc
aaa
mov
lds
mov
std
mov
cmpsb
dec
enter
repnz
mov
or
divb
sbb
or
sbb
pop
xchg
nop
jmp
loopne
sub
dec
push
ret
xchg
ja
in
into
dec
cwtl
xchg
dec
fistps
daa
xchg
mov
enter
out
pop
in
gs
fs
addr16
cmp
mov
push
jle
pop
mov
cmpsl
aam
ret
pop
sahf
cld
lret
repnz
push
les
cltd
dec
push
dec
lahf
or
lret
iret
or
inc
pop
sbb
push
pop
jmp
dec
aaa
pop
lods
or
xchg
lods
xor
je
addb
sti
mov
jo
add
and
mov
push
dec
or
dec
and
dec
fldcw
dec
icebp
cltd
push
into
psubw
mov
icebp
les
f2xm1
adc
daa
rcrl
or
lret
popf
push
xchg
cltd
mov
stos
adc
mov
outsb
in
sarl
pop
mov
idivl
add
xor
push
pusha
ja
mov
nop
pop
inc
fistpl
sarb
pop
mov
in
jle
cs
fcmovnbe
cmc
lods
sbb
push
insb
aam
push
lret
jbe
cmp
pop
mov
rcrb
jmp
add
ror
out
jge
ret
test
and
add
clc
or
pop
mov
test
xchg
out
loop
bound
jp
xchg
fdivs
movsb
out
pop
dec
scas
xor
sub
std
aaa
mov
sbb
out
push
repz
rol
push
loop
xlat
jge
imul
pop
inc
clc
cmc
clc
das
cmpsb
mov
cltd
pop
cmp
mov
je
fnstcw
repnz
das
push
mov
out
xor
out
and
adc
sub
insl
adc
dec
mov
adc
out
mov
leave
cmp
or
imul
dec
mov
sbb
imull
cmc
dec
lock
out
arpl
out
push
test
mov
daa
icebp
icebp
xor
fdiv
das
sbb
push
das
sub
icebp
cli
imul
addr16
int
mov
and
lds
xchg
arpl
lods
fidivrs
frstor
ficoms
roll
cmpsl
xor
loop
mov
xchg
je
xchg
aas
or
outsl
sub
adc
mov
push
iret
pop
fsts
icebp
out
or
xor
dec
xor
mov
push
jns
sub
adc
sub
inc
mov
sub
clc
push
fs
pop
insl
push
outsb
gs
or
adc
sbb
stc
sbb
aad
xor
xchg
xchg
xor
pop
je
rorb
jae
cmpsb
pop
test
cmpsl
imull
sbbb
jle
sub
cltd
sti
cltd
push
movsl
mov
fimuls
pop
sbb
sti
test
mov
xor
lods
xchg
test
sbb
rclb
sub
leave
ret
dec
test
leave
loope
js
and
popf
rol
adc
mov
fisttpll
push
icebp
xor
dec
pop
mov
orb
insb
shlb
addl
rorb
add
stos
gs
mov
movsb
ss
pusha
faddp
js
fnsave
or
int3
push
cwtl
mov
bound
lret
mov
jo
adc
insl
daa
fimull
fldt
in
cmpsl
in
add
xor
add
push
cwtl
fstl
cmp
xchg
dec
sbb
inc
scas
or
xchg
dec
scas
mov
rolb
sarl
lock
jmp
cmp
push
pop
inc
and
jl
jl
xor
insb
sub
into
dec
xor
mov
sub
leave
std
hlt
cwtl
push
sbb
xchg
jns
int
xorl
xchg
cmp
and
cmpsb
pop
jnp
jl
std
rcll
and
cmp
daa
das
mov
insl
mov
dec
jg
add
or
cmp
jb
insl
lcall
xchg
test
and
call
dec
scas
fs
loope
and
cmp
in
insb
or
cmp
js
int
cmp
jmp
loope
add
mov
mov
daa
cmp
mov
pop
or
imul
dec
push
lahf
fstps
loop
fucomip
dec
jg
lahf
dec
lret
out
fnstenv
or
mov
inc
dec
pushl
call
jns
into
movsb
push
adc
dec
adc
inc
stos
imull
cs
sub
lods
push
push
ljmp
sub
or
mov
loope
inc
sbb
add
inc
dec
in
mov
fstpt
mov
ret
decb
push
test
jle
lods
xor
sub
sti
les
jbe
xchg
test
ret
pop
mov
imul
mov
out
dec
loop
lods
pop
adc
in
or
lcall
gs
xlat
sub
lock
sub
mov
sub
lods
jecxz
scas
dec
bound
xor
adc
mov
jp
add
xor
pop
mov
stos
flds
cld
aad
fnstenv
scas
ret
add
les
xchg
test
into
pop
pop
mov
orb
mov
dec
and
shr
subl
and
orl
dec
cltd
mov
jg
inc
sub
add
scas
sub
out
sbb
out
jnp
cmp
xchg
fsub
mov
pop
push
xchg
mov
ljmp
or
je
mov
fdivrs
out
xchg
push
xor
inc
shrb
pop
sbb
cli
loopne
ljmp
cmp
out
lahf
frstor
mov
int3
and
stos
cmp
loopne
mov
cld
divb
ljmp
jmp
test
idivb
in
jo
or
pop
es
int
ljmp
adc
inc
or
popa
cs
lods
sbb
push
cmc
adc
xchg
call
mov
lds
sahf
mov
dec
or
setge
lds
dec
pop
pop
std
add
scas
movsb
xlat
inc
fcomip
andl
sub
iret
mov
push
mov
mov
lods
jne
xor
lcall
scas
scas
pop
das
jo
les
mov
dec
int
test
mov
inc
outsl
mov
or
insl
fcoml
ja
test
xor
push
std
rorb
ds
in
mov
pop
dec
lods
hlt
jg
xor
int3
adc
insb
jns
icebp
movsb
push
js
mov
push
fnstcw
je
inc
xchg
dec
dec
lret
insb
clc
lods
sbb
insb
xorb
adc
cwtl
xchg
push
xor
mov
andb
movzwl
mov
out
in
xlat
mov
xchg
jmp
out
pushf
pop
xchg
cmp
aaa
jecxz
gs
mov
xor
fdivrl
push
inc
dec
lods
pop
xchg
enter
cmpsl
aas
jmp
add
dec
inc
xor
mov
clc
dec
or
mov
and
mov
aas
mov
dec
stos
rcrb
xchg
and
in
sub
pop
dec
adc
subl
and
mov
cmpsb
xchg
push
push
pop
add
shll
mov
inc
inc
ret
add
jnp
jno
cmpsl
adc
and
mov
aam
inc
push
arpl
popf
cmp
icebp
in
idiv
pop
cld
mov
adcb
pop
sbb
adc
nop
adc
push
mov
xor
push
lds
dec
jbe
mov
aas
ljmp
out
jne
movsb
and
lods
js
dec
xchg
mov
xchg
out
sti
lods
xor
sbb
lret
ljmp
sbb
test
xchg
pop
lret
push
out
pusha
out
rol
in
or
and
add
pop
jg
add
enter
dec
inc
push
or
rclb
inc
adc
xchg
inc
push
jbe
push
subb
je
jae
sub
cmp
pop
pop
or
decb
cmp
lds
and
das
fld
arpl
xor
mov
jno
add
push
lods
cmp
mov
ljmp
rorb
mov
and
inc
dec
test
xor
aad
jmp
jb
xor
lods
in
out
out
add
xor
or
sahf
or
adc
call
dec
pop
push
add
sarl
divl
fwait
jl
ss
add
sbb
and
lahf
adcl
imul
mov
shrb
mov
ss
bound
aam
add
push
and
ret
cmpl
cmp
jno
cmp
add
notl
out
fisubrl
push
mov
inc
mov
popa
push
mov
ret
mov
in
mov
cmp
adc
out
outsb
or
xchg
sbb
lock
mov
add
ljmp
jnp
and
xlat
inc
pop
nop
xchg
out
mov
lcall
int3
out
stos
mov
loope
ret
mov
out
fs
imul
xchg
jno
aaa
lret
div
shlb
loope
pusha
push
mov
cmp
mov
inc
jmp
cmp
xchg
xor
mov
xor
test
test
sub
cli
cmp
xchg
pop
mov
in
cld
aaa
adc
adc
sub
pop
mov
cmp
xchg
pop
and
cwtl
xor
xor
dec
sbb
sub
cltd
mov
stos
nop
cmpsl
in
scas
pop
dec
dec
push
leave
pop
dec
enter
adc
mov
xor
jge
push
mov
enter
xor
lods
icebp
pop
lds
mov
mov
cmpsb
nop
jo
dec
add
jp
dec
in
mov
mov
cmp
push
out
sti
push
mov
ds
ret
xchg
in
push
inc
push
xchg
lahf
xlat
adc
idivl
inc
sub
mov
push
mov
sbb
rclb
xchg
test
dec
lahf
rcrb
jmp
xchg
sahf
jns
mov
fcmovnb
pop
jns
mov
aad
lahf
pop
iret
test
iret
push
xchg
inc
xchg
pushf
into
jae
mov
dec
in
lahf
cld
sbb
repz
pushl
popa
cmp
push
shlb
enter
in
push
mov
imul
jne
xchg
ljmp
out
xchg
pop
dec
ja
push
mov
inc
mov
jnp
adc
notl
push
push
push
lods
and
pop
mov
lods
into
mov
sub
adc
mov
fisubl
jmp
mov
popf
les
add
mov
clc
adc
fcomip
outsb
pop
das
hlt
push
add
mov
or
cmp
rol
and
in
dec
sub
loopne
mov
xor
cmp
int3
pop
out
xchg
fdivrl
rclb
sbb
int3
lods
mov
leave
cwtl
nop
inc
pop
std
sbb
in
xchg
or
xchg
das
lret
ja
fimuls
push
out
ret
xchg
aad
gs
rolb
gs
sub
add
iret
cmp
jmp
insl
jns
pop
or
in
mov
jecxz
inc
lods
xchg
fcmovb
ret
pushf
add
adc
rcrb
inc
jno
insl
adc
inc
into
xor
cmc
rcl
cmp
jg
xor
in
shll
aaa
pop
sbb
dec
ficoml
cwtl
in
ror
int3
loop
mov
mov
notb
je
mov
push
stc
jb
imul
mov
dec
movsb
cmp
dec
sbb
dec
jbe
jl
in
push
dec
xchg
outsb
rcll
cmp
push
lock
stos
in
daa
insl
push
mov
or
xchg
jg
and
sub
mov
add
push
inc
xchg
mov
rcl
adc
jb,pn
out
push
push
push
inc
cs
jecxz
dec
enter
mov
stos
shr
cmp
inc
shll
jbe
add
adc
xchg
cmp
cmp
jp
movsb
jge
js
mov
or
lret
mov
out
cmpsl
inc
popa
cmp
insl
xchg
inc
inc
hlt
ficomps
xchg
in
es
xchg
jge
dec
add
push
fdivs
xchg
dec
jae
mov
or
cmp
mov
idiv
mul
cmp
subb
testl
fwait
iret
jmp
test
push
scas
add
cmpsl
js
call
inc
sub
sahf
dec
fsubr
sbb
push
test
mov
jno
popl
nopl
shrl
je
dec
sbb
aaa
pop
out
or
xchg
xor
push
cmp
add
adc
push
sbb
sarl
cmp
add
xchg
inc
sti
aad
imul
incb
add
mov
call
shlb
inc
sbb
mov
or
ss
arpl
aas
cmp
jbe
pop
and
push
addb
jo
arpl
std
xchg
movsl
xchg
lcall
inc
xchg
mov
call
xor
or
pop
movsb
lock
push
pop
xlat
xor
sub
pop
xchg
dec
test
je
cmp
add
or
int3
pop
cmp
xchg
pop
inc
or
in
lahf
insb
pop
pop
mov
mov
xchg
push
imul
leave
leave
addb
xor
add
adc
lods
lds
cmpsl
push
or
outsb
loopne
adc
insl
outsb
or
mov
dec
jno
repz
je
pushf
push
repz
je
imul
mov
cs
ds
push
cwtl
sbb
rcrl
les
sti
add
lcall
lea
outsl
sti
jp
shl
mov
dec
jne
aam
add
imul
jge
popf
dec
std
loop
sbb
mov
notl
pop
xlat
inc
inc
imul
mov
in
jne
lea
and
push
aas
inc
or
sti
mul
mov
xor
sar
lods
mov
sbb
push
rclb
mov
ds
aaa
push
xor
into
mov
shrb
cwtl
inc
fdivrs
fsub
ds
jle
ja
xchg
xor
pop
xchg
xchg
cmp
cwtl
lods
mov
daa
idivl
mov
mov
sbbl
pop
mov
mov
xchg
pop
out
lods
jecxz
fmull
ret
lods
add
and
in
popf
jmp
ror
gs
mov
xchg
add
jp
inc
or
cmpsb
loop
mulb
mov
xchg
lock
lds
xor
mov
mov
in
scas
in
push
data16
xchg
flds
dec
sub
daa
jno
andb
je
lahf
xor
inc
int3
iret
lret
jge
push
insb
mov
jmp
shll
sbb
sub
ficoml
pushf
pop
mov
cmp
adc
push
push
pop
imul
xchg
xor
les
or
dec
inc
jns
mov
jmp
mov
gs
inc
sbb
cltd
jp
mov
imul
test
mov
pop
mov
jmp
xchg
adc
subb
mov
pop
sahf
mov
ds
jns
fildl
loope
push
inc
inc
or
aad
cli
dec
pop
clc
ret
push
jecxz
cltd
enter
jmp
cmp
out
push
cs
jle
cli
nop
testl
aas
pop
mov
test
mov
iret
cmp
out
repnz
cmpsb
jmp
rorb
jnp
xchg
inc
xchg
gs
stc
repz
ljmp
loop
scas
cmpsb
ret
inc
dec
ret
jecxz
stos
popf
cmp
sub
sub
mov
lret
sub
xchg
inc
mov
add
and
ds
xor
xor
mov
pop
or
and
xchg
popf
mov
sub
sbb
dec
bound
pop
fsubs
push
bound
arpl
fiadds
cld
xor
cmc
fildl
pushf
mov
ljmp
inc
jmp
dec
aam
jno
stos
inc
outsb
notl
imul
lods
fisttps
jl
or
dec
push
push
stos
and
ret
in
sbb
fwait
jecxz
scas
and
in
or
mov
or
pop
mov
inc
aas
sbb
imul
adcl
jns
sub
mov
adc
jae
sub
lret
push
push
sti
mov
pop
repnz
outsb
push
mov
pop
nop
mov
outsl
cmp
mov
cmpsb
mov
mov
cmpsl
hlt
xchg
xchg
incb
sbb
mov
shrb
xchg
je
loope
das
xchg
fsubr
or
jo
mov
popa
call
push
popf
addr16
push
aaa
sarb
shrb
lods
jle
push
sub
add
mov
push
push
inc
ljmp
insl
call
js
xchg
add
in
lods
sti
test
fwait
pop
hlt
sbb
jb
icebp
xchg
fdivrs
pop
aad
push
and
jecxz
or
sbb
xchg
sbb
mov
xor
sbb
xlat
push
push
push
mov
lds
call
movl
je
jp
jmp
jmp
out
xchg
outsl
fdivrs
cmp
aad
and
xchg
adc
pop
loop
out
xchg
int
adc
inc
fs
jae
mov
or
out
xor
pop
scas
into
pop
xchg
imul
sub
jg
cli
cmp
fs
movsb
inc
aam
cmp
pop
xor
sub
out
jl
leavew
sub
fbld
and
cmp
push
jle
cs
inc
stos
test
mov
bnd
sub
push
fwait
sub
aas
aad
aaa
push
mov
pop
jecxz
add
aam
adc
std
pop
mov
fstpt
jae
int3
pushf
add
iret
pop
test
insb
inc
inc
jnp
mov
pop
mov
cmp
pop
bnd
xchg
test
xchg
test
xor
xor
dec
or
dec
sub
test
repz
inc
sbb
cmp
lahf
xlat
rcll
std
jmp
loop
adc
xor
mov
inc
lret
inc
dec
lock
adc
cmpsl
mov
adc
js
int3
mov
or
scas
mov
lods
mov
ficompl
cld
xor
adc
push
cli
mov
imul
test
adc
mov
adc
inc
addr16
shrb
rorl
push
dec
inc
insl
cli
mov
ud1
jg
xchg
out
add
cld
jge
jb
test
repz
mov
push
hlt
push
daa
mov
jl
int3
lds
sbb
sub
sub
push
cmp
mov
mov
adc
sub
add
push
sbb
out
sbb
or
jecxz
jle
int3
mov
xchg
nop
xchg
xchg
insb
adc
ret
inc
insb
mov
les
jb
lea
jmp
sbb
and
nop
push
ss
mov
push
sub
adcl
or
xchg
push
xchg
push
mov
xchg
jbe
jle
or
sub
xor
insb
out
dec
ret
in
inc
test
jne
fidivl
aaa
mov
adcb
sub
fcom
sbb
sbb
jecxz
fisubl
fmul
cmp
mov
ret
es
mov
mov
shrb
aaa
out
or
popf
jmp
jmp
lds
je
and
mov
inc
lea
mov
jno
fistpl
inc
pop
enter
popf
or
enter
jg
and
jge
decl
arpl
stc
jo
js
fldt
fstpl
mov
push
xchg
cs
or
pop
sbb
push
xlat
test
dec
das
aam
jecxz
shrl
cmp
stos
jecxz
cwtl
inc
inc
mov
dec
psubsw
in
cmp
lods
xor
in
mov
and
sbb
cmp
and
mov
push
pop
dec
pop
out
push
iret
push
jo
das
push
shl
nop
pushl
jnp
xor
sub
fisttpl
fwait
mov
cmpsb
scas
mov
jecxz
aaa
cmc
add
testb
mov
push
jmp
ret
scas
cmp
add
sbbl
lds
mov
jne
inc
cld
cltd
aas
sub
aad
stc
sub
adc
push
stos
out
or
mov
sahf
repz
cld
xchg
sub
aaa
les
mov
cltd
push
mov
ret
xor
xchg
repz
push
adc
or
andl
mov
lret
test
adc
das
mov
cltd
daa
add
mov
pop
pop
add
aam
rolw
adc
je
xchg
pop
adc
inc
mov
mov
in
or
jg
sahf
int3
mov
mov
mov
xchg
test
in
push
jns
mov
gs
pop
fmuls
addr16
add
out
jp
iret
mov
pusha
int
outsb
popf
js
in
insl
or
jl
adc
add
stos
ret
loope
test
push
jb
xchg
mov
or
cmpl
aaa
pusha
jmp
pop
cmp
jae
arpl
sub
adc
cmc
mov
hlt
or
sbb
cmp
test
nop
aam
and
testb
imul
pop
fisubs
filds
mov
cmpsl
pusha
mov
add
adc
and
mov
fisubs
test
inc
jmp
jge
or
call
cmp
pop
xor
cmp
xchg
sbb
push
adc
rcrl
mov
mov
loopne
sub
repz
sub
icebp
xorl
xchg
xchg
cmp
xchg
mov
cwtl
into
stos
arpl
push
sbb
xor
mov
jnp
out
jmp
adc
dec
test
pop
fsubs
aad
in
jnp
out
sub
xor
fdivs
and
addl
mov
mov
mov
xor
mov
stc
dec
cmp
and
pop
aad
adc
or
lods
pop
jno
sbb
dec
dec
mov
shrb
pushf
mov
push
mov
add
mov
insb
out
jecxz
fcom
repz
push
leave
xchg
test
repz
push
fists
cmp
std
std
test
add
push
out
fisubrs
nop
adc
inc
jbe
repnz
and
mov
mov
loop
pushf
aad
orl
mov
movsb
mov
stc
push
jle
xchg
push
adc
nop
insl
out
lret
add
nop
sbb
aad
mov
jno
call
clc
inc
addr16
push
sbb
pop
mov
dec
mov
xchg
pop
aas
imul
add
ss
or
mov
paddq
loop
inc
jge
bsf
cmp
aad
rorl
push
xchg
in
in
jae
xor
sbb
adc
stos
pop
adc
pop
dec
insb
je
push
les
insl
cmp
sbbb
outsl
mov
sarl
cld
mov
rolb
pop
test
push
inc
xor
int
sub
xor
dec
or
enter
es
ret
sti
pop
aaa
aam
pop
xor
sub
pop
aad
in
jae
push
rolb
gs
fldcw
cmp
repz
dec
mov
loopne
xor
sub
inc
lahf
ret
push
jno
jg
xor
or
and
pop
cltd
add
enter
and
sub
mov
aas
bound
gs
das
paddsb
mov
cmp
jmp
loope
je
jmp
fcompp
xor
ja
in
push
xchg
xor
cmc
mul
sbb
pop
movb
cs
negl
sbb
test
mov
inc
jmp
fidivs
in
sahf
sti
pop
adc
or
and
pusha
cmp
das
pop
jge
mov
shr
outsl
jne
inc
mov
pop
stc
push
adcb
and
popf
les
xor
enter
dec
lods
or
fcoml
outsl
jmp
sti
mov
pop
fsubrs
sbb
pop
sub
pop
jae
cs
loopne
gs
mov
cmpsl
lahf
fcomps
or
dec
or
xlat
or
inc
in
pop
adc
push
xorb
jecxz
jecxz
pop
and
lds
jp
call
cmp
ljmp
cmp
pop
gs
pop
call
xchg
je
jnp
icebp
lock
test
inc
scas
nop
addb
stc
lods
pushf
dec
xchg
xchg
enter
out
mov
mov
push
sub
popf
cld
fwait
mov
xor
test
lea
in
aas
and
frstor
test
mov
lcall
or
dec
out
ret
scas
das
cmc
ja
xor
inc
sbb
or
or
mov
fld
xchg
pop
pop
jo
lcall
dec
mov
outsb
push
outsl
or
movsl
cmc
into
mov
jnp
cmp
mov
insb
inc
sub
das
fdivp
mov
cwtl
ret
hlt
or
mov
test
jno
xchg
addb
adc
and
stos
push
jle
aaa
loop
and
pop
adc
sub
jns
jecxz
insl
xlat
cltd
out
mov
ror
jb
out
pusha
xchg
es
cld
and
std
idiv
insl
jae
pop
mov
or
push
sub
mov
mov
dec
sbb
stos
mov
imul
mov
jl
rcr
sub
inc
je
daa
cmp
xor
pusha
loop
das
loope
scas
cli
outsl
or
inc
dec
mov
aas
pop
adc
and
icebp
and
cmp
mov
dec
mov
or
push
test
frstor
clc
imul
cmp
mov
out
dec
jp
leave
insl
imulb
cmp
jmp
mov
and
cli
adc
push
sub
cmc
lcall
or
les
shrb
daa
adc
gs
pop
add
data16
mov
loop
mov
jecxz
repnz
mov
xor
cmc
or
and
add
outsl
or
pop
subb
adc
jg
ljmp
xor
rcr
mov
pushl
inc
insl
les
push
xchg
xchg
sbb
test
shr
jp
sub
sbb
cmp
mov
loop
pop
push
dec
sar
data16
stos
mov
jo
ljmp
inc
mov
fnstcw
mov
hlt
cmp
fwait
sarb
sub
cmp
cmp
push
and
mov
pop
adc
shr
lea
push
stos
ss
sub
dec
sub
mov
jge
outsb
or
xchg
push
add
xchg
mov
mov
fisttps
sub
mov
testb
add
jecxz
andb
cmp
insb
test
mov
mov
inc
or
test
cmp
shl
data16
cld
call
adc
pop
js
out
add
jmp
jge
push
pop
iret
jnp
or
out
bound
mov
xchg
push
or
jle
xchg
test
mov
jbe
inc
stos
dec
and
mov
call
out
in
icebp
pop
aam
dec
dec
sahf
jge
or
xchg
int
jns
lret
push
xchg
cld
sub
sbbl
cwtl
test
mov
push
mov
jecxz
and
movsl
jns
and
fimuls
xor
adc
cmp
lea
test
lahf
fiadds
inc
mov
lahf
or
ds
and
hlt
test
lret
stos
sbb
lea
inc
add
inc
gs
add
out
push
cmp
pop
bts
push
mov
negb
sbb
outsb
rcl
rorb
test
les
stc
mov
xchg
das
push
lock
jecxz
pushf
jbe
aaa
mov
mov
lods
pop
xor
aam
or
dec
and
lods
aam
xlat
stc
movsb
sub
pop
out
push
icebp
sbb
add
vpcmpeqw
enter
sahf
push
add
ret
ficoms
push
ret
aaa
loope
lods
fwait
and
mov
out
inc
inc
iret
push
fwait
ss
fstl
cmpsl
ds
add
in
jp
popa
outsb
std
sbb
dec
mov
mov
dec
xchg
and
cmp
jae
dec
push
out
into
cmc
push
inc
sub
xor
scas
mov
add
sbb
pop
mov
adc
xorl
xor
pop
test
insl
and
adc
xor
add
jmpw
sub
mov
in
mov
mov
loopne
lods
fstpl
push
scas
mov
jge
jge
jnp
mov
dec
cmp
addr16
hlt
insb
mov
js
ret
out
test
adc
dec
sbb
inc
inc
mov
mov
inc
mulps
in
mov
add
sub
cmc
call
and
hlt
lcall
dec
sub
es
pop
pop
mov
bound
xor
mov
lea
out
jnp
jo
pop
in
leave
add
push
push
jge
pop
dec
mov
sahf
dec
aam
mov
outsb
sub
loope
inc
mov
mov
pop
outsb
aaa
sub
popa
fldt
lods
ret
enter
fstpl
xchg
mov
fs
out
pop
test
inc
xchg
jge
mov
popf
push
jge
lahf
jnp
xor
jg
divb
cli
int
cmp
pop
inc
mov
mov
add
jmp
fwait
aas
sahf
cwtl
das
decl
fisttps
ret
pusha
sbb
inc
mov
out
push
xor
add
jle
repz
rcrb
jnp
sbb
inc
ljmp
pop
pop
ret
out
cli
xchg
sbb
or
aad
mov
sbb
mov
rclb
mov
jno
cmpsl
sahf
call
test
aam
or
inc
loope
outsl
xchg
or
jmp
movb
and
out
aaa
jo
loopne
cld
or
lret
subb
xor
clc
adc
fnstsw
ljmp
inc
mov
pop
inc
lret
xchg
lods
test
adcl
sub
xor
jae
push
out
or
mov
fwait
add
cmp
jg
push
xchg
bound
mov
sbb
inc
loop
cld
ss
stos
mov
ret
bound
faddl
xchg
in
and
out
pusha
fldl
xchg
mov
mov
sbb
jns
loopne
cmp
dec
ljmp
ja
arpl
jne
outsb
push
lahf
sub
mov
jae
stos
lahf
jecxz
mov
xchg
adc
jbe
test
xor
insl
push
adc
popf
cli
sub
leave
aad
inc
mov
dec
imul
into
xchg
adc
and
cli
mov
bound
iret
jle
adc
aas
ljmp
aas
sarb
sbb
push
test
dec
xchg
mov
lock
mov
or
hlt
imul
rcll
les
jns
cmp
and
faddl
mov
pop
scas
adcl
jecxz
cmc
mov
lea
stos
out
mov
popa
jl
push
add
subb
jmp
and
cmpsb
push
pop
inc
dec
mov
or
xchg
sbb
jb
es
sbb
cs
lods
push
jbe
or
add
and
jecxz
mov
or
add
out
pop
loopne
xor
jnp
and
push
mov
adc
jbe
lods
js
cld
jne
cltd
subl
mov
jns
xchg
out
out
or
fnstenv
rcl
icebp
pop
xchg
jb
sbb
or
xlat
fiadds
xchg
jl
add
jno
leave
movl
jnp
adc
rorb
aas
call
mov
cltd
lea
or
mov
push
pop
nop
test
daa
mov
or
jge
mov
pop
push
test
dec
push
mov
cmpsl
stc
repz
ss
xor
data16
pusha
gs
sbb
jp
outsl
test
fmuls
repz
cld
inc
add
inc
test
add
xor
sahf
insb
mov
cmp
push
js
lahf
mov
shll
push
push
jle
enter
push
pushl
sub
mov
inc
add
daa
mov
jg
and
push
repz
inc
rorb
push
int3
lea
jb
jb
mov
out
pop
addr16
stc
pop
pop
mov
arpl
fadd
andl
lahf
shr
lea
mov
hlt
add
addr16
or
test
adc
loopne
ljmp
fidivl
pop
rcl
aaa
out
adc
cli
aas
movsl
mov
ja
loop
divb
mov
outsl
ja
mov
pop
sbb
adc
int3
jb
out
aam
sarb
aad
negb
xchg
imul
movsb
icebp
xor
mov
jbe
mov
mov
insb
rep
or
adc
lea
inc
test
push
mov
jmp
lds
xor
cmp
fadd
popf
popa
dec
fs
je
xorl
jmp
push
dec
inc
cmp
push
js
gs
xchg
imul
rcrb
inc
inc
notl
aas
sub
out
or
orb
cli
jo
jecxz
fiaddl
bound
insl
pusha
dec
xchg
adc
jecxz
test
push
sbb
in
pop
pop
nop
xlat
mov
hlt
ss
stos
mov
lret
xchg
ds
insl
adc
sbb
orl
mov
je
sbb
imul
cli
xlat
jge
loopne
mov
scas
sarb
int3
imul
cltd
xchg
daa
aaa
jl
jne
sbb
int
cmc
or
test
lods
lea
lret
cmp
mov
push
jecxz
cli
mov
lods
pop
push
mov
fldenv
out
fists
jae
sub
and
push
dec
push
movsb
test
dec
cwtl
and
dec
movsb
xor
iret
fidivs
jbe
mov
pop
sub
jae
xchg
adc
mov
or
int3
sbb
jecxz
inc
into
repnz
cmp
sbbb
mov
push
je
inc
enter
push
aam
repz
push
xchg
pop
fcomip
stos
jmp
les
and
dec
xor
fld
mov
into
imul
stos
and
daa
subl
push
mov
fnstcw
sub
and
inc
in
jle
xor
scas
add
pushf
cli
mov
and
inc
cmc
sbb
scas
das
jno
dec
test
jb
ljmp
xchg
inc
bound
clc
daa
jbe
adc
mov
sub
push
xor
movsl
test
test
dec
out
cmp
dec
jl
mov
loope
jge
adcb
scas
add
adc
push
mov
dec
pop
popa
xchg
aaa
pop
mov
inc
fsubrl
xchg
mov
stos
ds
ja
sbb
adc
pop
or
cmpl
mov
andb
sbb
repnz
out
jbe
cli
jmp
push
and
jno
mov
or
xorl
ret
mov
dec
loop
into
pop
add
test
jb
jecxz
add
xchg
adc
and
pop
repnz
xor
push
pop
popf
cli
gs
adc
sbb
xchg
or
insl
push
inc
stc
xor
je
je
push
mov
rorl
pop
push
dec
or
cld
aaa
jns
cmp
shlb
xlat
push
mov
xor
ret
aaa
xor
repz
pusha
ss
aam
rorb
xor
mov
adc
cmp
dec
jne
xor
push
insb
cwtl
mov
pop
mov
xor
dec
lods
inc
mov
mov
je
sahf
pop
jb
xlat
mov
arpl
addr16
xor
dec
mov
mov
ds
es
xor
xchg
int3
push
inc
jg
push
sub
mov
xchg
lret
inc
popa
bound
sbb
jg
adc
and
outsl
lea
leave
xchg
sbb
push
add
fucom
xchg
or
loopne
ret
lods
pop
push
mov
call
and
sub
cmp
ljmp
and
ljmp
sub
dec
jae
pop
pop
and
pusha
test
ds
inc
push
sti
or
js
inc
xchg
pop
imul
xchg
jl
sbb
sbb
hlt
into
jge
adc
out
mov
push
sbb
cmpsl
dec
pop
push
aam
xchg
mull
xor
mov
nop
icebp
dec
dec
insb
mov
sub
bound
pop
xchg
fdivrs
test
sub
sub
mov
movsl
mov
adc
mov
inc
adc
push
and
jno
in
ret
pushf
ret
push
cmpsl
in
leave
test
in
outsl
mov
xlat
repnz
push
pop
mov
or
sarl
push
cli
pusha
adc
js
popf
cmp
xor
push
cmc
iret
data16
mov
ret
cmp
imul
sbb
or
and
dec
jae
cmp
mov
xchg
stc
ret
or
dec
xor
cs
daa
adc
and
in
xchg
leave
gs
cmp
mov
pushf
ret
mov
mov
push
dec
dec
shll
xorl
adc
jb
repz
sub
mov
xor
mov
push
sbb
test
mov
adc
aaa
jns
insl
xchg
jp
adc
push
push
mov
cmpsb
mov
mov
imul
test
scas
out
in
stos
rcrl
adc
and
inc
sub
push
negb
jmp
sub
fs
cld
cmpsb
jbe
mov
xor
and
add
cs
cli
insb
and
subb
pop
push
adc
push
or
andb
inc
xchg
cli
popa
into
mov
addr16
pushf
mov
and
xor
jl
push
jp
mov
dec
sub
scas
dec
int3
test
icebp
enter
cmpsl
outsl
arpl
mov
in
lea
js
out
cs
pop
mov
cs
mov
mov
insl
cltd
loop
jmp
mov
inc
addr16
loopne
adc
aad
bound
pop
and
movsl
test
dec
or
push
aas
lea
fnstsw
clc
xlat
jle
sub
mov
mov
xchg
xor
adc
xchg
adcb
add
lahf
mov
clc
data16
xor
push
scas
test
jo
lahf
imul
xchg
gs
jo
movsb
xor
movsb
xchg
push
pop
inc
ds
jnp
inc
xlat
mov
sahf
dec
out
adc
aaa
add
add
in
sbb
cli
decl
xor
inc
or
leave
mov
mov
jmp
fwait
sbb
and
adc
data16
cmpsl
cmp
adc
mov
add
jns
dec
sbb
outsl
jno
add
aad
mov
or
adc
fisttps
cmp
mov
call
mov
jg
push
xchg
jne
lret
fdiv
sub
rorb
adc
bound
shlb
incb
shlb
in
repz
ret
popa
fisttpl
sub
sbb
aam
movsl
pop
loopne
js
movsb
lods
mov
mov
fmulp
mov
inc
stc
push
or
scas
or
jl
mov
xor
fisubrs
aad
iret
dec
outsl
and
push
adc
test
repnz
arpl
push
mov
movsb
or
in
mov
push
mov
or
xor
push
xchg
sbb
test
lods
leave
lret
lods
cltd
test
fdivs
test
push
sbbl
pop
stc
sbb
enter
mov
repnz
dec
jle
jnp
sbb
jae
xor
xchg
fisubl
icebp
push
xorb
aaa
jb
and
sbb
add
xor
insl
gs
cltd
inc
cwtl
cmp
inc
stc
push
jae
and
scas
fnsave
dec
mov
aaa
xor
fbstp
in
push
in
ss
fisubl
jmp
add
inc
xchg
push
mov
divl
inc
test
jnp
or
in
pop
xlat
ja
cmp
inc
shlb
mov
sbb
dec
adc
mov
mov
fs
cltd
cli
cltd
jnp
mov
iret
adc
cwtl
test
test
push
pushf
mov
jl
loopne
into
dec
pushf
les
lock
push
cmp
inc
sahf
xorb
test
rclb
ja
movsb
xchg
dec
cwtl
aam
push
xchg
shll
subb
loop
stos
or
pushf
jmp
addl
arpl
adc
cltd
push
mov
jae
mov
adc
pop
jp
jae
negb
and
mov
js
jns
mov
aaa
xchg
inc
out
fdivr
ds
xor
xor
rorl
cmpsl
inc
stc
fcom
or
mov
out
mov
jg
and
inc
ss
jge
shlb
jae
xor
aad
cmp
leave
fimull
inc
movsl
lret
push
in
cltd
cmpsl
and
imul
push
js
insl
xchg
jl
int3
or
repnz
inc
mov
sbb
dec
xchg
sbb
add
cwtl
cmpsb
inc
ficompl
push
push
xchg
movsb
mov
mov
lock
sbb
sbb
cwtl
sub
mov
xchg
adc
sub
sti
lret
out
mov
fistl
inc
inc
das
aaa
and
push
mov
mov
addr16
mov
pusha
lcall
jb
icebp
inc
in
clc
xor
cmp
pop
inc
dec
call
xor
dec
pop
ds
mov
push
fcoml
fisttpll
fdivrl
xorl
js
mov
dec
dec
icebp
cltd
pusha
inc
mov
movb
pminub
cmpsl
addb
inc
shlb
jge
int3
jnp
mov
cmp
insl
popa
add
push
xchg
mov
push
xchg
fwait
cmovl
sub
sbbl
fld
push
push
inc
mov
mov
adc
ja
bound
mov
dec
xchg
mov
enter
push
mov
outsl
cs
xor
nop
lods
xchg
adc
out
mov
fxtract
mov
lods
gs
dec
dec
cmp
cmp
out
repnz
xor
in
rorb
add
outsl
pop
repz
dec
add
push
ljmp
mov
in
shlb
js
pop
inc
adc
test
adc
and
cmp
xchg
out
mov
add
xor
push
add
mov
push
data16
sub
fwait
xchg
dec
xchg
add
ret
pop
jnp
fldcw
ja
sbbl
out
pop
jp
aaa
out
push
fs
fistl
push
loop
sbb
nop
mov
cmp
fwait
ljmp
and
and
cmc
cmp
ret
test
int
shlb
iret
xorb
jno
mov
lock
out
hlt
leave
outsb
test
in
stos
mov
jge
dec
mov
cmp
outsl
fbld
xor
mov
ss
sbb
jl
pop
test
dec
mov
decb
int3
dec
dec
dec
stos
or
sbb
push
mov
and
cmc
outsl
adc
pusha
ja
mov
pop
mov
repz
in
int3
loopne
or
daa
popf
sbb
pop
jmp
in
mov
push
pushf
pop
cli
adc
mov
mov
push
sub
out
sub
inc
aas
icebp
or
bound
std
jnp
cmp
aas
clc
mov
orl
ficompl
dec
pop
idiv
or
sub
mov
dec
fldl
jnp
inc
out
push
outsl
xlat
and
jns
data16
xor
sbb
mov
dec
sbb
or
call
out
push
adc
sti
or
fst
jmp
and
inc
fidivs
std
das
adc
out
cmpsl
xor
pop
dec
shrl
adc
pop
dec
repz
std
mov
jg
hlt
pop
test
sub
stos
mov
xchg
cwtl
filds
sbb
in
je
xchg
ret
sub
rolb
rclb
and
inc
scas
push
xchg
test
adc
aam
sub
jo
mov
mov
mov
ss
add
and
bound
push
push
mov
shrb
xchg
mov
mov
jecxz
xor
jno
mov
arpl
arpl
sub
pop
repnz
pop
sbb
or
xor
push
fdivrs
mov
mov
inc
push
imul
addr16
inc
lcall
testb
pop
jg
cvtps2pi
xor
outsl
cltd
xor
mov
inc
flds
das
jp
inc
and
sahf
mulb
lcall
nop
imul
fs
scas
gs
inc
cmp
notb
loop
mov
mov
jo
test
int
push
dec
xor
addb
fwait
paddd
cltd
daa
dec
mov
enter
push
add
imul
push
fcomip
jbe
mov
lea
arpl
or
push
sub
jmp
lahf
das
sub
jo
jp
pop
clc
sbb
inc
lret
sub
sub
arpl
aaa
pop
mov
bt
mov
test
mov
arpl
movsl
sets
rorl
shlb
mov
iret
fsubp
and
lahf
imul
mov
incb
and
loope
data16
sbb
sub
jle
mov
jae
jno
outsb
js
jns
in
push
test
test
jge
push
sub
and
loopne
aad
scas
mov
mov
ss
es
xchg
ucomiss
mov
jns
adc
mov
out
adc
lcall
jb
mov
add
es
dec
mov
dec
idivb
xor
es
cmpsl
jg
subl
cltd
adc
aad
inc
inc
imul
adc
lahf
xchg
jae
jno
pop
add
inc
out
les
jno
adcl
decl
addr16
lcall
mov
out
int
mov
pushf
cld
outsl
movsb
dec
imul
pop
sub
xor
int3
pop
lahf
or
cmp
sahf
js
pop
pop
stos
lret
push
bound
xchg
xor
fwait
xchg
repnz
cwtl
adc
pop
mov
mov
imul
fbstp
cmp
movsl
outsl
fmull
fists
push
add
jns
lock
cmp
lods
aam
add
repz
leave
or
mov
pop
test
stos
cmpsl
int3
imul
push
lods
mov
dec
pop
jecxz
add
inc
andb
push
jmp
pop
sub
mov
dec
cmc
xchg
xchg
imul
and
lahf
adcb
stos
and
mov
shl
es
ret
popa
push
out
pop
inc
inc
mov
adc
and
popa
in
repnz
loop
xlat
scas
and
push
sub
dec
dec
nop
xchg
hlt
xor
aaa
ret
pop
shrl
out
cmpsl
xor
dec
sbb
rorl
mov
loope
jno
movsl
inc
outsb
jo
testb
es
xchg
das
sbb
jbe
pop
notl
lret
roll
test
mov
int3
and
sahf
test
push
insl
inc
cli
ficomps
mov
jg
push
adc
mov
in
repz
loop
mov
movsl
jl
divb
or
pop
and
jmp
loope
test
mov
pop
loop
cmc
out
bound
mov
sub
repnz
gs
and
inc
cmp
mov
xchg
xchg
mov
cwtl
xchg
dec
sub
push
or
xchg
out
dec
aad
iret
cmp
mov
aas
mov
push
push
pop
fidivl
pop
enter
loope
push
push
inc
outsl
rclb
and
xor
je
jb
mov
push
ficoms
dec
pop
mov
xor
mov
jno
fldl
test
or
jb
femms
cld
jnp
pop
addr16
roll
pop
pusha
cld
leave
sbb
out
jmp
iret
test
add
xor
iret
fidivl
or
mov
and
loope
and
xor
inc
add
lods
mov
mov
addr16
xor
dec
xor
cmp
js
sub
push
scas
es
aam
push
push
call
in
fldt
out
adc
xchg
les
xchg
xchg
shl
mov
and
or
pop
dec
in
cmp
pop
adc
lahf
sbbl
pop
out
xchg
loop
inc
sbb
push
push
sub
out
sub
cmp
pop
mov
inc
cmpsl
sub
out
lods
adc
mov
lret
jnp
dec
test
test
movsl
into
cmp
aaa
arpl
idivl
int3
mov
icebp
cmp
fs
ljmp
fwait
mov
mov
test
add
and
test
lock
call
mov
xor
push
outsb
out
jg
cmpsl
xchg
fwait
imulb
jno
sbb
insb
xor
or
inc
or
jl
addb
cmp
add
or
sarb
add
dec
mov
popa
xor
test
mov
dec
dec
inc
inc
sub
imul
ss
mov
mov
icebp
imulb
push
adc
mov
and
mov
mov
mov
mov
imul
rcrl
ret
mov
push
dec
jecxz
shr
fisubs
test
jnp
jp
fstpt
andb
add
push
add
push
sub
xlat
cmp
int3
cmc
imul
jb
lret
and
aad
add
xchg
or
ret
cmpsb
addr16
jnp
out
inc
inc
cmpl
jl
sub
push
mov
fnstcw
or
pop
and
pop
cltd
outsl
mov
imulb
test
pop
adc
xor
and
push
mov
add
in
pop
mov
push
test
xchg
xchg
std
jne
or
and
ret
addr16
push
loop
cltd
xor
call
xor
out
add
loopne
lods
xorl
popa
lahf
inc
popf
jle
test
and
fcomps
repz
xchg
cmc
decb
cmp
and
sub
into
sub
jg
cs
push
cmpsl
mov
cmp
cmpsl
push
pop
cltd
pusha
jne
mov
js
dec
pop
pop
jnp
out
ja
xchg
sub
dec
int3
icebp
repnz
dec
sbb
cwtl
pushf
hlt
dec
pop
bound
jns
pop
add
test
sbb
pop
push
into
xor
xlat
es
insb
ss
lret
cmp
xor
sub
push
jb
iret
mov
lcall
push
inc
dec
aam
lcall
push
das
repz
or
cld
add
outsl
pop
shlb
aas
fldt
imul
add
shlb
test
adc
jle
mov
sbb
or
push
cmp
add
cmpsl
pop
shrl
in
mov
mov
lods
nop
xchg
push
enter
movsb
and
je
jno
fwait
xchg
mov
cmp
outsb
xor
xchg
mov
sub
or
mov
jo
mov
pop
and
add
cwtl
dec
in
mov
movsl
pop
mov
mov
movsb
loope
shrb
xlat
bound
imul
xor
xchg
or
jmp
add
pusha
xchg
sbb
inc
cmp
push
dec
push
jmp
xchg
push
test
shrb
inc
and
and
and
and
lods
movsb
loope
cld
pop
movsl
jo
pushf
lods
sub
test
push
pop
fwait
pop
xchg
push
les
shll
mov
loop
xlat
xchg
cmpsl
adc
cwtl
fistl
dec
lods
cmp
inc
cmp
inc
lock
xchg
inc
or
es
test
dec
cmpsb
pusha
data16
in
or
insl
sbb
inc
adc
add
jecxz
ret
mov
test
inc
mov
sti
in
cltd
ret
dec
push
inc
dec
inc
pop
and
lret
and
mov
lcall
in
jno
push
mov
mov
cltd
mov
lea
pop
sbbb
lods
or
inc
push
and
jne
mov
jecxz
bound
jno
out
inc
push
mov
daa
jge
out
sbb
inc
enter
fwait
and
gs
in
xchg
stc
ss
cmp
ds
mov
sbb
push
xchg
sbb
jbe
dec
and
mov
lret
or
iret
xchg
pop
push
push
adc
mov
dec
arpl
xlat
int
inc
jno
xor
ret
sub
pushf
lds
stc
adc
xchg
sub
cmp
jns
jge
ret
icebp
test
cmp
shlb
xor
push
clc
mov
fs
in
mov
flds
cwtl
test
mov
jge
mov
xchg
stc
mov
mov
xor
int3
adc
out
ljmp
or
push
mov
test
mov
or
mov
sub
cltd
in
mov
nop
daa
cmp
aaa
add
mov
in
test
or
jnp
scas
adc
loop
in
xchg
pop
jae
lds
jnp
push
hlt
daa
push
mov
jne
fisubs
cmp
test
cwtl
int3
lds
sub
imulb
mov
jl
mov
daa
iret
or
arpl
pop
inc
adc
jb
adc
mov
and
cmp
push
push
cmp
mov
cli
xlat
mov
sub
sub
insb
scas
add
mov
decb
dec
xor
push
fcoms
sbb
test
cmp
and
push
repnz
sub
cwtl
movsb
aas
out
test
inc
push
sub
lcall
std
and
push
lret
rorb
inc
out
adc
push
xchg
stc
lea
xorb
jp
loopne
dec
into
inc
xchg
leave
jne
mov
sbb
imul
xor
and
or
mov
fidivrs
lods
cmp
sbb
inc
orb
push
cmp
or
scas
inc
cmp
add
mov
movsb
add
clc
or
daa
aad
cmp
cmp
sub
xchg
lock
mov
push
icebp
push
pop
xchg
mov
and
sbb
jnp
leave
and
sbb
sbbb
xchg
sahf
mov
xor
adc
daa
scas
add
stos
sub
pop
inc
and
pop
das
sbb
push
imul
inc
xor
cmp
sbbb
dec
fmull
ret
lcall
adc
cmpsb
aaa
je
aas
inc
mov
sti
cmp
shrb
push
jmp
cwtl
push
mov
mov
or
fdivr
add
data16
cmpsb
arpl
mov
cmpsl
ds
or
jne
cli
jmp
cmpb
xchg
push
ds
mov
int3
fildl
lcall
cmp
inc
arpl
or
mov
xorb
add
ja
push
dec
fisubrl
lcall
andb
into
add
sbb
pop
mov
jecxz
rcrb
icebp
movsl
pushf
or
dec
mov
arpl
mov
mov
or
jns
or
jmp
or
pushf
fsubl
ljmp
lahf
ss
jg
xor
sub
cmp
in
sbb
mov
cmp
cltd
in
scas
clc
in
shrl
lock
sbb
and
jo
scas
outsb
add
inc
adc
es
jmp
push
sbbb
ficomps
shlb
mov
lods
sbb
push
in
add
xchg
pusha
inc
xor
jno
mov
dec
xchg
and
pop
push
rorb
adc
sub
xchg
dec
pop
xchg
adc
pusha
repnz
or
insb
pop
xor
adc
dec
push
clc
nop
out
jg
insl
ficompl
inc
inc
adc
and
push
cli
sub
sub
mov
xlat
and
adc
push
adc
cmpsl
sub
stc
push
pop
sub
add
std
ret
mov
loop
icebp
ds
das
lret
pop
mov
roll
js
push
inc
sub
dec
xchg
rcrb
test
je
lahf
mov
fldt
arpl
xor
inc
and
jno
mov
mov
pop
pop
out
lods
loopne
icebp
fsubrp
ret
dec
push
xchg
fisubrl
in
pushl
jle
gs
sbb
sbb
cmp
filds
mov
jne
adc
in
xlat
lods
fisubrs
fcmovnbe
pop
fiadds
push
push
outsb
xchg
int3
add
xchg
sbb
sbb
cmp
shl
pop
fstps
push
pusha
push
jo
mov
lods
iret
shl
xchg
jmp
inc
mov
mov
mov
ljmp
add
inc
cmpsl
rclb
pop
sbb
xchg
mov
jecxz
xor
mov
mov
icebp
xlat
aad
push
and
jno
xchg
test
out
fisttps
popf
jl
inc
mov
dec
jbe
pushf
mov
fs
cmp
mov
dec
pusha
in
mov
mulb
sbbb
mov
dec
popl
loop
jo
in
xor
aad
sbb
xchg
aad
pop
ljmp
mov
dec
jbe
xor
or
dec
or
jbe,pn
cltd
sahf
fstpt
andl
jecxz
imul
mov
js
cmp
call
pusha
xchg
jle
xchg
xor
mov
clc
xor
dec
cmp
mov
cli
mov
cld
pop
or
das
xchg
divb
popf
out
mov
mov
add
enter
xchg
inc
lock
cmp
scas
adc
push
cmpsb
push
cltd
dec
mov
mov
jmp
shrb
mov
seta
dec
pop
push
fwait
adc
push
mov
stc
mov
xchg
lds
imul
imulb
xor
test
jg
ret
mov
dec
jl
test
shll
pop
or
push
enter
loop
cld
push
push
inc
push
mov
mov
sub
mov
cwtl
pop
dec
and
popf
xchg
cmp
jns
rclb
mov
mov
les
mov
xchg
jns
sub
iret
ficomps
es
xor
jbe
ret
les
pop
dec
adc
cltd
popa
mov
dec
adc
rcl
and
js
mov
fbld
pop
lret
inc
xchg
ja
je
fistpl
sti
loop
and
xor
fcmovne
notl
cmp
adc
push
add
xchg
xchg
ret
jnp
sub
pop
dec
cmpsb
mov
push
lods
mov
pop
xor
mov
rorl
pusha
lods
test
and
dec
hlt
ffreep
dec
add
mov
xchg
in
lea
sbb
xchg
int
pop
push
icebp
cmp
lcall
cmpsl
shll
or
inc
sti
cwtl
pop
dec
inc
jo
mov
fmuls
and
cmp
or
sub
mov
cmpsl
imul
repz
lock
sub
xor
bound
pop
push
out
ss
fwait
lock
jbe
int3
cmc
imul
jno
lds
sbb
adc
ret
call
nop
inc
mov
xor
rcl
scas
mov
aas
sub
or
das
sbb
scas
mov
out
insb
hlt
pop
xchg
hlt
fisttpl
dec
iret
xlat
sbb
mov
or
xchg
stos
scas
push
jo
pop
pop
push
pop
dec
lahf
ds
out
insl
pop
std
hlt
movsb
les
push
sub
mov
sbb
or
lock
or
push
sub
sub
sbb
lds
inc
sbb
call
adc
rcll
lods
cmp
xchg
mov
push
sbb
imul
ret
push
sbbl
push
and
mov
test
pop
addl
and
dec
pop
pop
lock
xchg
mov
jne
jmp
shll
hlt
dec
xor
sub
adc
push
gs
jbe
cmpsb
and
pop
stos
call
xchg
je
xchg
out
mov
jp
addr16
push
ljmp
and
mov
sbb
mov
stos
mov
push
mov
push
jae
addr16
dec
xchg
mov
pop
push
andb
lock
ret
push
lret
xor
pop
adc
int
mov
push
inc
push
clc
push
inc
jbe
out
test
ret
mov
push
int3
push
dec
xchg
mov
jp
push
mov
xchg
les
enter
ds
je
icebp
fistpll
add
cwtl
sbb
cmp
hlt
mov
jbe
pop
insl
add
add
aas
addr16
std
into
xchg
jae
ret
inc
movsl
push
addr16
jno
ret
sbb
jle
sub
mov
stos
cmpsl
mov
xchg
fs
in
lret
bnd
inc
mov
loopne
movntq
jmp
std
in
pushf
mov
dec
jmp
in
sti
scas
sub
test
jecxz
addr16
inc
je
push
and
jo
stc
jnp
jge
adc
movsb
faddl
fwait
test
pushf
jae
push
or
in
mov
test
mov
hlt
lea
pop
or
jg
push
call
jno
xor
and
xor
shrl
xchg
pop
ror
or
imul
loop
pop
insl
mov
aad
arpl
mov
inc
jg
fldl
mov
fistpll
mov
and
lcall
sub
sbb
xor
repz
xchg
hlt
dec
sbb
stos
pushf
add
dec
aad
dec
in
aas
fmul
pop
or
arpl
sbb
out
push
leave
sub
outsl
or
fmul
leave
pop
inc
jl
sbb
jae
push
xor
int
call
lods
xchg
xor
loope
jb
fildl
out
cmp
or
pop
sbb
push
data16
ds
xchg
in
pop
cmp
sti
sbb
mov
pushf
bound
and
xchg
cld
scas
stos
xor
orb
ret
add
enter
mov
cs
loopne
fwait
mov
add
jb
mov
loop
in
jo
test
sahf
sub
adcb
xor
push
scas
rorl
xlat
xchg
mov
or
jge
sbb
mov
mov
ss
nop
mov
ret
mov
test
pop
icebp
setl
push
fildll
mov
mov
out
pop
sub
pop
aas
lret
insl
jl
pop
inc
lods
mov
leave
jno
movsb
into
mov
ja
mov
add
scas
cltd
jo
pop
shlb
mov
push
ret
arpl
xchg
cmp
je
add
jo
lods
ret
jle,pt
out
sbb
xchg
dec
gs
out
std
jp
mov
mov
and
mov
add
mov
in
inc
jge
and
ficoml
pop
dec
mov
in
cld
out
pushf
loopne
sbb
notb
popa
sub
sbb
mov
sbb
pop
test
xlat
not
mov
xchg
out
rolb
or
scas
arpl
mov
jno
cld
pop
ljmp
pop
inc
xlat
loopne
dec
sub
int3
cli
dec
pusha
sahf
mov
int3
mov
mov
lcall
adc
dec
gs
inc
cmp
inc
inc
hlt
int
insb
mov
adc
mul
adcb
sub
push
xchg
sub
adc
mov
dec
roll
push
adc
cwtl
dec
sbb
pop
cmp
xchg
jle
sub
aaa
jb
sbb
xchg
xor
loopne
movsb
add
mov
pop
cld
fwait
cmc
add
xchg
movsl
push
testb
adc
aas
jecxz
jge
inc
add
out
fiaddl
cld
rcrb
jnp
sub
stos
pop
xor
sub
cli
divb
lret
lret
lods
addb
popf
and
add
ljmp
jle
jnp
std
push
xchg
enter
or
ja
in
mov
ja
insl
mov
push
jns
push
add
pop
punpcklbw
push
xor
or
push
cmp
mov
aad
nop
lahf
jmp
fsubrp
int
lds
push
pop
jne
adc
fidivl
adc
loope
mov
addr16
movsl
int3
mov
jnp
sbb
int
push
std
ret
bound
sahf
inc
outsl
js
andl
pushf
xlat
push
jae
or
fidivrl
aaa
lods
mov
jp
jmp
loopne
test
mov
sub
aaa
sub
jns
int
push
ds
in
cmpsb
loop
pop
mov
sbb
scas
mov
lds
mul
cmp
mov
xchg
pop
sub
stos
popa
ja
hlt
mov
fs
insb
lret
mul
cmc
test
mov
or
add
test
ret
fcmovu
jb
jbe
pop
or
adc
sbb
dec
mov
out
into
outsb
sahf
pop
dec
in
iret
in
jb
dec
inc
clc
aaa
fiaddl
sbb
outsb
add
pop
stos
add
inc
shlb
pop
and
jno
cld
mov
dec
lods
enter
out
add
cmp
scas
cmp
dec
add
pop
cmp
add
mov
imulb
sti
xor
and
jb
ret
dec
sub
int3
xor
rorl
iret
ja
cmpsb
pop
les
push
das
in
inc
call
jge
fisttpl
sbb
imul
cmpxchg
xor
push
push
and
pop
and
lods
sub
cmc
push
insl
mov
mov
mov
popa
jo
dec
nop
scas
in
scas
or
out
scas
mov
pop
jmp
push
mov
jae
xor
enter
mov
stc
xlat
add
mov
cmp
jo
cmovbe
shr
dec
sub
jne
fistl
jb
stos
pop
push
mov
test
les
andb
mov
jo,pn
call
add
repnz
iret
fbld
inc
pop
push
ljmp
mov
stos
outsl
test
xchg
fnstenv
mov
clc
sbb
mov
add
movsl
stos
insb
roll
sahf
sub
or
mov
outsl
adc
fcmovbe
shrb
mov
movsl
std
les
add
xchg
jle
dec
or
dec
imulb
xchg
fldcw
add
xchg
mov
sub
mov
loop
lahf
xor
fisttpll
add
mov
push
mov
dec
mov
mov
dec
in
icebp
jb
pop
call
pop
dec
jl
in
mov
and
sbb
lret
add
mov
orb
inc
add
imul
xchg
insl
sbb
push
xor
mov
cmpsl
mov
int
jno
sub
xchg
shrb
cmp
mov
lds
mov
adc
fwait
dec
hlt
and
stos
outsl
and
bound
add
sbb
fildll
rcrl
push
mov
add
cmpsl
xchg
xor
lods
arpl
jl
fmull
in
and
mov
xchg
addb
xchg
aas
fidivs
idiv
xchg
cmpsl
jle
pushf
jecxz
in
cmc
shll
and
sub
je
inc
adc
adc
mov
add
sarl
dec
es
mov
jne
imul
andb
lock
mov
mov
bound
push
test
mov
es
lods
sbb
icebp
roll
cmp
loop
pop
and
adc
or
xor
sbb
sub
add
daa
lcall
cmc
pop
les
or
cmp
sub
imulb
out
and
xchg
pusha
cmp
cld
adc
sub
xor
dec
mov
jecxz
fsubrs
in
lret
add
arpl
adcl
xlat
out
je
ret
mov
cmp
sub
cmp
add
negl
inc
cltd
cmp
adc
scas
mov
loopne
inc
insl
in
and
mov
pop
mov
pop
mov
enter
xor
ja
mov
cs
pop
pop
mov
bound
roll
jle
iret
ret
test
mov
pop
nop
jbe
dec
popf
repz
shr
or
mov
xchg
hlt
dec
pop
outsb
jnp
and
bswap
jnp
push
int
lock
outsl
or
mov
lcall
jne
push
mov
xchg
dec
aaa
rol
dec
das
adcl
fcomi
stc
lahf
add
dec
add
xchg
pop
daa
loope
push
adc
iret
xchg
adcl
mov
push
inc
dec
aaa
dec
sti
cmp
pushf
sbb
hlt
sarb
std
dec
mov
inc
mov
xchg
mov
mov
jp
or
inc
mov
and
pop
sub
xor
sbb
xor
test
lret
arpl
cmp
pop
es
dec
mov
dec
out
cltd
push
shrl
push
ret
pop
testl
mov
jo
cmp
dec
gs
repnz
lock
fbld
mov
xlat
pushf
xchg
aas
adc
arpl
imul
sahf
jo
mul
mov
arpl
aas
out
cmp
jb
pop
shl
pop
les
inc
xchg
movsl
fidivrs
mov
mull
dec
cmpl
add
mov
or
xchg
enter
jmp
sbb
mov
lods
pop
sbb
and
movsl
mov
adc
push
repz
mov
aaa
sbb
fsubrs
mov
stc
sub
pop
add
jno
je
mov
outsl
xor
dec
ljmp
xchg
mov
jns
cmp
adc
test
addr16
ja
push
jge
jmp
mov
inc
jne
ret
cmpsl
dec
ja
ss
push
add
mov
out
mov
int
jge
arpl
jle
push
leave
frstor
inc
mov
inc
test
cmpsb
mov
bound
cmc
leave
stc
adc
or
aam
lret
mov
lret
pop
stc
jl
fsts
mov
iret
add
and
outsl
jmp
pop
in
add
or
cmpsl
int
subb
aaa
std
push
fdivl
cmc
cs
inc
stos
inc
fsts
mov
xchg
leave
gs
xor
jge
xor
xorb
and
fdivs
dec
aad
out
mov
jnp
adc
add
cmpsl
int
ds
jl
nop
cmpsl
std
xor
and
xchg
sbb
movsb
imul
push
cmp
divb
cli
je
dec
mov
mov
cmpsb
aam
inc
pop
dec
push
roll
pop
inc
stos
insl
lret
add
ret
rcrb
xchg
mov
pop
arpl
or
add
out
sbb
mov
sbb
adc
pop
ret
cmpl
and
int3
inc
xor
std
cmp
in
fdivrl
mov
dec
pop
pop
cmp
mov
pop
es
cmpsl
mov
andl
sub
mov
and
je
aad
cld
mov
bound
pusha
push
stos
or
cmp
or
xchg
dec
and
les
in
dec
add
mov
cltd
cli
outsb
es
lcall
out
push
jmp
outsl
cmp
pop
adc
adc
aam
and
adc
pop
sub
mov
jg
les
mov
mov
pop
lods
call
addr16
push
lea
jge
cs
pop
xor
mov
lods
in
int3
lock
idivl
xchg
mov
jg
add
outsl
cmp
and
add
add
lds
pusha
mov
push
les
fistps
bound
icebp
aad
adc
call
push
fcmovbe
or
xor
xor
mov
insl
ljmp
fcompl
ret
movsb
repz
test
jo
mov
sub
ss
mov
sub
jp
sub
jbe
mov
shrl
fwait
push
xchg
outsl
outsl
incb
cmc
mov
pop
push
dec
mov
pop
in
cli
sub
insb
push
cmc
nop
std
cmp
cltd
popf
push
inc
mov
cmp
adc
shlb
jp
dec
xchg
popf
jmp
int
in
movsl
push
int3
mov
push
call
fldcw
adc
call
sub
subl
mov
stos
jb
and
mov
dec
push
test
outsb
lock
cld
mov
repnz
scas
mov
repz
imul
test
and
enter
mov
ds
pop
push
mov
push
dec
mov
cmp
xchg
jns
and
mov
inc
xor
jmp
insb
xor
mov
jle
ret
pushf
jne
cli
dec
add
les
leave
inc
ss
inc
mov
mov
das
jbe
or
push
xor
dec
jmp
outsl
sahf
js
lods
lods
les
cmp
mov
aam
cld
or
jle
ljmp
cmp
pop
mov
push
cmp
cmpsb
push
test
or
and
dec
hlt
sub
imul
mov
or
dec
pop
aaa
lahf
dec
and
dec
and
jbe
jp
dec
inc
add
jo
dec
mov
push
gs
je
xchg
cmp
xchg
adc
sbb
push
les
imul
adc
or
pop
dec
fisubrl
add
push
fcoms
dec
dec
aam
lret
ja
imulb
sbb
push
pop
pop
mov
mov
pop
ret
test
inc
mov
push
mov
in
sub
cmp
stos
xchg
repz
mov
mov
mov
push
and
mov
aaa
mov
in
lret
aas
stos
push
or
and
add
adc
push
adc
es
inc
adc
cmp
sbb
roll
jnp
push
movups
dec
mov
add
fsubrp
fcomps
dec
sbb
outsl
xor
lea
mov
das
pop
lds
inc
cmpsb
mov
out
push
xor
xchg
fwait
vmaskmovdqu
loope
mov
outsl
bound
push
lcall
cmp
das
lods
cmpsb
data16
mov
pmuludq
dec
mov
or
mov
mov
adc
inc
lahf
mov
test
pusha
push
popf
jmp
popa
inc
add
test
and
aaa
fsts
cwtl
enter
fdivrs
aam
lods
xchg
lret
push
or
push
fidivs
call
mov
test
es
fwait
enter
or
movsb
add
push
lods
xor
xchg
sarb
sbb
lds
out
sbbb
fwait
xchg
jp
inc
outsb
add
ja
mov
pop
pop
aaa
inc
pop
loop
or
mov
jp
out
adc
out
sbb
sbb
jl
push
fiaddl
rolb
push
cltd
sub
xchg
popf
mov
inc
cmpsl
xor
in
push
mov
or
jnp
insb
stos
in
sbb
js
fnstcw
mov
fiadds
push
cwtl
jbe
cmp
pop
movsb
mov
out
inc
adc
stos
pop
out
int3
pop
out
jbe
jle
vmovhps
insb
notb
lcall
sub
and
aaa
lea
icebp
mov
mov
xor
negl
outsb
add
sbb
sub
jb
loopne
and
mov
cltd
mov
sbb
adc
insl
dec
pusha
fcompl
xchg
mov
nop
xor
js
mov
out
or
add
sub
mov
nop
xchg
adc
daa
cli
dec
add
xchg
adc
ljmp
into
mov
xor
adcl
add
cmp
enter
lods
aam
ja
xchg
imul
xchg
mov
jecxz
cmc
dec
data16
test
test
jmp
gs
mov
sub
or
stc
push
test
cltd
mov
dec
push
push
fbstp
jno
inc
std
scas
mov
in
mov
cmp
cmpsb
addr16
out
dec
mov
pop
jg
outsl
inc
cld
subl
jge
or
adc
lret
loop
enter
xchg
push
decb
mov
pop
add
std
mov
jg
push
jge
das
dec
xor
mov
adc
loop
lahf
lock
xchg
push
imul
cmpsl
imul
movsl
xchg
pusha
jo
pop
fprem
xor
mov
inc
xchg
fcomps
out
xorl
arpl
ficoml
add
cmpsb
push
or
imul
clc
jge
cmp
pop
mov
pop
aam
pop
shll
sub
push
scas
ret
or
idiv
jae
sub
cmp
adc
mov
adc
loopne
mov
sub
add
mov
js
pusha
cmp
mov
pushf
dec
nop
int
xor
das
sub
pushf
push
cmp
xor
outsb
or
loope
sub
es
mov
jbe
mov
jp
jmp
insb
lahf
mov
add
jno
adc
pop
dec
adc
push
loopnew
cmp
or
push
jns
test
in
mov
xchg
mov
aaa
cmp
or
rcr
loopne
lods
push
dec
addl
dec
cltd
ja
insb
push
and
loope
rolb
data16
insb
in
push
rorb
testb
mov
imul
iret
push
mov
push
jbe
cmp
lds
push
outsb
lock
xchg
mov
jp
repnz
cmp
pusha
mov
mov
push
popa
fimuls
ss
lret
cmp
sub
fcoms
dec
ljmp
outsl
push
cld
xchg
mov
lahf
sbb
inc
arpl
push
xchg
push
lea
arpl
rorl
jp
ss
sbb
mov
inc
cs
mov
cs
or
jne
bound
pop
mov
adc
daa
xor
cmpsl
mov
cs
xor
mov
inc
pop
jp
out
loope
nop
and
int3
cltd
xorb
xchg
and
xlat
ss
xchg
cli
or
daa
sti
lds
out
dec
sub
xchg
std
and
cwtl
out
or
faddl
pop
das
into
push
scas
mov
push
mov
cmc
xor
add
add
out
push
outsb
popf
scas
mov
mov
fbld
sbb
insl
imul
mov
cs
adc
and
sbbb
sub
mov
dec
mov
stos
dec
mov
fsubs
add
mov
ss
or
and
repz
fsubs
leave
sub
decb
mov
pop
pop
xchg
aam
loop
xor
mov
jg
mov
add
out
sub
add
rclb
dec
push
add
push
out
sub
and
push
push
push
cmpsb
lods
icebp
pandn
in
inc
stc
divb
div
mov
mov
add
pop
fldl
js
push
in
scas
sahf
les
arpl
mov
insl
mull
sahf
stc
cltd
out
sti
repnz
dec
dec
rcll
mov
adc
and
pop
push
sub
cmpb
xchg
jmp
adc
mov
cmc
fs
call
ret
pop
fiaddl
adc
and
xchg
gs
jmp
mov
jecxz
fdivs
and
outsb
mov
enter
movsb
repnz
xchg
push
push
loop
or
stc
lods
jne
ret
fiaddl
dec
pop
xor
aam
sub
icebp
push
loope
mov
cli
lock
les
mov
fsubr
cmp
fcomps
sub
inc
inc
lret
and
cmpsl
dec
cmpsl
aad
xchg
icebp
jno
mov
mov
inc
sbb
push
popa
sub
outsb
xchg
insb
push
aaa
push
push
xlat
hlt
repnz
int
xor
int3
flds
fldenv
inc
pushf
jecxz
and
pushf
mov
dec
outsb
sbb
cmp
stos
out
decl
int
nop
test
pop
stos
fisttpl
int3
arpl
cli
rcll
test
mov
pop
jecxz
outsl
es
add
xchg
mov
jbe
add
xor
aaa
add
imul
push
js
jns
call
xchg
test
js
shl
or
leavew
xlat
pop
push
shll
pop
clc
pop
mov
pop
out
mov
adc
xorl
jne
decl
mov
imul
and
push
cli
push
sbb
and
push
insl
inc
jne
sub
lods
movsb
out
fcomps
inc
push
lea
loop
fadd
sarb
leave
outsl
cmp
insl
sbb
stos
sti
sar
jp
inc
xchg
data16
nop
push
push
pop
mov
xchg
xor
outsl
roll
das
in
xchg
stos
and
or
push
inc
xchg
je
fmuls
loopne
out
xor
int3
call
mov
jae,pn
imul
mov
inc
xchg
mov
ss
mov
sarl
xchg
jp
outsl
add
inc
sbb
cmpl
ss
es
in
sahf
mov
sahf
sti
mov
or
xchg
in
mov
sbb
insb
out
sbb
pop
sbb
aaa
mov
imul
mov
ror
andl
inc
out
aad
lahf
iret
cltd
dec
data16
push
or
sub
adc
out
movl
mov
push
pop
ret
lds
jp
out
mov
jmp
jb
test
jno
cmp
or
das
xlat
cmp
pop
push
sbb
imul
lcall
pop
shl
sbb
jnp
push
ds
mov
pop
ds
cmpsl
jne
pop
cmpsl
shlb
dec
mov
adc
xor
mov
mov
imul
pop
jp
stos
sbb
repz
xor
pop
inc
rcr
sbb
pop
stc
popa
mov
sti
enter
dec
movsl
jle
in
push
adc
mov
cmp
icebp
mov
outsb
cli
or
sbb
int
inc
scas
sti
jnp
mov
push
sti
sbbl
movl
nop
mov
lods
es
and
mov
dec
jne
faddp
mov
xchg
sti
sti
adc
std
enter
inc
jae
dec
or
xor
mov
xchg
mov
stos
dec
xor
or
shlb
push
incl
and
cld
dec
pop
mov
pop
push
xlat
mov
ret
add
xor
sub
sbbl
cmp
add
orl
fldt
inc
push
rcll
inc
cmpxchg
jns
cwtl
hlt
leave
ljmp
ss
push
or
mov
pop
or
fs
adc
addr16
stos
push
add
pop
aam
push
mov
or
cmpsl
inc
mov
add
jno
jle
mov
cwtl
addr16
imul
jg
in
xchg
jbe
fcmovne
rclb
add
insb
sub
incl
out
mov
or
pop
leave
pusha
out
inc
cmpsb
fwait
xchg
or
mov
sub
mov
sbb
or
cmp
sub
and
pop
xor
xchg
push
lcall
xor
fisttpll
mov
add
and
pop
and
xchg
cld
imul
leave
mov
mov
mov
cs
pusha
jnp
dec
test
shll
fs
push
pop
fcmovne
lods
fnsave
push
les
mov
lahf
out
hlt
pop
mov
lods
inc
cmp
cmp
jp
mov
sub
rorb
pop
push
ja
insb
jecxz
and
in
in
pop
lock
lods
xor
add
xor
shr
pusha
inc
xchg
mov
jl
rolb
dec
xlat
ret
jmp
adc
mov
loopne
jb
sub
cwtl
inc
rcr
push
popf
mov
and
test
pop
inc
and
or
arpl
out
popf
stos
les
cwtl
mov
out
sub
mov
lods
sub
jg
in
pop
insb
jbe
sub
js
mov
or
add
xchg
mov
in
sub
je
push
enter
mov
jge
call
hlt
rcl
les
xor
fisubrl
xor
mov
shll
jle
xchg
sbb
fwait
sbb
sbb
cmp
adc
sbb
jge
sbb
addb
push
cld
cmp
lret
mov
jno
pop
pop
lcall
js
imul
and
mov
cmp
stos
fdivrl
enter
mov
lret
aam
in
scas
xchg
stc
cld
test
lcall
dec
push
jae
sbb
push
cmc
cmp
outsb
stos
inc
mov
ljmp
xor
mov
ja
jbe
pop
lods
lea
sub
andb
push
xor
jge
cmpsb
mov
stos
or
pop
pop
test
notb
dec
ret
adc
pop
gs
mov
leave
push
scas
sbb
movsb
jle
mov
aam
xchg
sbb
fbld
cmp
or
incl
sbb
ficoml
inc
pushf
jo
loope
push
in
push
mov
pmullw
push
in
insl
and
and
jb
jge
fwait
xchg
es
popl
lea
dec
imul
cmp
xor
pushf
nop
cmp
ret
adc
pop
arpl
lahf
rep
ljmp
mov
out
shrb
dec
xlat
dec
mov
andl
test
pop
push
push
fnstcw
adc
mov
lods
ljmp
and
les
push
cmp
push
imul
and
adc
dec
arpl
frstor
jl
add
xor
xor
sbb
push
add
jecxz
into
imul
fstpl
or
pusha
adc
push
mov
cmp
push
cmp
sbb
lock
xchg
cwtl
sbb
stc
pop
adc
push
loope
or
shr
fstps
bound
insl
mov
lret
clc
sbb
mov
jecxz
stos
cmc
ficomps
xchg
ds
sub
push
jl
inc
pop
jae
rorl
cmp
xor
mov
std
jnp
mov
rcrb
sbb
mov
xchg
shlb
pushf
push
dec
mov
or
mov
push
ljmp
pop
mov
pop
cmpl
xchg
xchg
nop
add
popf
dec
mov
inc
and
sbb
shl
adc
jb
mov
jg
movsb
jp
pop
cltd
xlat
arpl
lret
hlt
iret
mov
enter
nop
sub
mov
fsubrl
mov
cli
inc
xor
es
jp
into
in
mov
push
sbb
or
outsl
fwait
out
jne
cmp
movsb
scas
sti
jp
inc
out
jl
stc
and
push
divl
sbb
pushf
pop
add
test
icebp
push
and
push
inc
or
add
mov
pusha
bnd
test
adc
popa
popa
xchg
decb
divb
jge
sbb
xchg
rorl
push
call
cmp
xchg
or
pushf
add
dec
pop
lret
in
arpl
lahf
mov
inc
sbb
dec
popa
pop
sti
and
into
lods
mov
jae
inc
in
int3
ds
adc
mov
mov
notb
sti
cmp
jae
and
cmp
ret
xchg
sahf
cmpsb
subl
jno
out
nop
jmp
cmp
sbb
mov
shll
sti
shr
inc
mov
fsubr
dec
inc
push
push
adcl
xchg
and
mov
fwait
test
inc
mov
lea
lret
loopne
mov
pusha
rorb
ret
cmp
ret
loop
stos
add
mov
fists
enter
xor
sub
ja
mov
mov
sbb
mov
sbb
push
add
out
lcall
aam
dec
scas
mov
push
pop
int
enter
inc
pop
or
mov
fistl
jl
inc
sbb
mov
ja
test
fsub
cli
es
scas
add
pop
mov
and
pop
pop
leave
mov
push
or
cmc
out
or
cmp
jb
inc
adc
int3
cmp
stos
repz
mov
pop
push
std
fcoml
bound
and
cli
push
stc
sti
or
sub
xchg
inc
jg
in
dec
lret
lock
leave
jmp
jg
shlb
mov
push
mov
push
imul
arpl
inc
movd
ficoml
ret
jg
aad
xchg
popf
pop
sbb
fldl
mov
call
ljmp
xor
xchg
ret
mov
out
je
lods
cltd
xchg
add
cmc
adc
xchg
mov
test
clc
imul
dec
pop
sub
push
pusha
mulb
adc
lock
or
push
cld
inc
movsl
nop
jg
jmp
sub
je
push
pop
pusha
push
mov
data16
add
add
loopne
xchg
sbb
test
xchg
jns
daa
mov
test
out
and
jg
ret
nop
and
dec
mov
mov
and
and
inc
ficomps
or
add
fistl
movsb
aad
cld
iret
sti
shrl
pusha
xlat
aas
push
faddl
imul
loope
dec
cli
ja
pop
scas
mov
icebp
je
icebp
adc
add
lahf
ud1
rcrw
dec
xlat
insb
jnp
mov
dec
jg
out
shlb
inc
mov
lret
push
mov
pop
push
jg
filds
cmp
push
push
loope
fucomp
ljmp
push
ds
cmp
or
in
aas
in
fwait
into
inc
cltd
aam
mov
and
sub
jb
loopne
pop
aad
mov
or
ds
xor
inc
mov
pop
jg
nop
bound
xchg
add
ljmp
fbstp
pop
decl
popa
xor
jno
dec
xor
and
roll
shrb
adc
lock
xchg
pop
cmovo
mov
std
jae
mov
sbb
ror
jle
sahf
mov
sub
js
fcompl
gs
and
hlt
push
pop
test
and
fisttps
inc
shlb
inc
xchg
in
mov
jns
adc
fidivl
mov
movsb
mov
xor
scas
sub
adc
and
dec
rcr
jb
xor
dec
enter
mov
cmp
out
addb
pop
and
in
pop
push
xchg
xchg
popf
dec
inc
nop
fimuls
fwait
idivb
xor
imul
dec
and
test
mov
fmull
mov
out
or
pop
div
push
cmp
addr16
cld
mov
test
mov
inc
imul
adc
push
insb
and
jecxz
mov
mov
sahf
or
repnz
jmp
jp
mov
notb
add
stos
pop
push
dec
mov
aaa
cltd
inc
sub
ja
outsb
mov
out
fadd
popf
inc
adc
cmp
mov
js
pop
push
andb
xlat
mov
pop
nop
or
addr16
jmp
test
mov
jl
test
adc
ljmp
push
or
mov
pushf
pushf
andb
dec
aad
sbb
adc
test
inc
test
and
ljmp
inc
pushl
xchg
sub
ret
loope
rorb
jo
pop
inc
xor
inc
loopne
inc
in
inc
push
mov
jbe
std
sub
lock
out
call
ja
adc
pop
mov
mov
dec
sub
movsb
xor
xchg
pop
and
pop
xchg
push
xchg
fs
pop
loope
decb
sub
cmp
push
jge
pop
and
dec
add
lret
push
fists
loope
sub
mov
orb
xchg
insl
arpl
and
cltd
je
xchg
or
test
dec
js
lods
adc
and
sub
mov
ss
dec
movsl
push
jmp
icebp
rol
popf
sahf
sbb
ljmp
and
jne
int
sti
xlat
inc
sub
xchg
daa
adc
and
sbb
ja
sti
xlat
das
mov
sbb
mov
mov
cmp
inc
adc
add
in
jge
sub
mov
outsl
lret
cmpsl
mov
cmp
lods
inc
xor
test
sbb
cmc
adc
cmpsl
sub
or
out
xchg
loope
jecxz
int
int3
andb
test
jle
repnz
mov
ret
mov
cmp
mov
mov
das
in
xor
out
mov
adc
and
movsb
or
rcll
out
and
cmp
daa
stc
push
mov
imul
jg
xor
inc
mov
add
pop
daa
je
jle
jg
leave
xchg
mov
mov
push
out
dec
sub
mov
out
pop
push
pop
in
xchg
rol
movsl
adc
popf
rorl
stos
loop
jne
stos
cmp
push
add
and
popf
les
and
fldcw
xorb
fsub
cld
in
push
jnp
pusha
and
jg
jbe
insb
rcrb
das
int
sub
out
test
js
or
icebp
js
fstpt
popa
pop
mov
jae
cmc
loopne
sbb
imul
pop
test
xchg
aad
mov
pop
xor
pop
lods
push
enter
stos
jecxz
sbb
mov
jo
pop
cmc
mov
int
jno
mov
imul
shrl
xlat
fisttpll
inc
mov
mov
test
push
sub
cmc
or
sbb
mov
enter
idivl
mov
mov
pop
stos
lret
roll
out
js
jne
jmp
les
bound
sbb
and
jmp
adc
mov
sub
mov
cld
mov
or
addr16
inc
insl
inc
out
sub
xchg
out
test
test
mov
xchg
out
cmc
js
ljmp
pop
xchg
scas
mov
loopne
popf
int3
adc
cld
dec
addb
sub
mov
mov
lds
lcall
xlat
push
lock
popf
cmpb
inc
shll
clc
mov
iret
movsb
cwtl
sbb
push
sbb
fistpl
adcl
sub
aam
ja
mov
mov
out
mov
loop
mov
ljmp
jecxz
sbb
push
and
aam
loopne
dec
pop
pop
lods
mov
out
cltd
inc
ret
in
lret
cs
sbb
dec
xorl
pop
fwait
loope
and
cmpsb
xor
andb
jmp
dec
and
lods
add
sarl
jns
mov
sbb
mov
leave
popf
ljmp
jmp
ljmp
sahf
movsb
dec
cmpsl
xor
sbb
movsb
push
jbe
out
jno
movsl
jnp
mov
call
stc
add
lret
add
cmp
lcall
pop
enter
jp
push
lret
pop
scas
fdivrs
push
or
mov
inc
xor
pop
loopne
pop
sahf
dec
sub
sbb
jge
or
in
adc
movsl
and
xor
pop
outsl
add
mov
jae
jmp
cltd
and
mov
xor
popa
pop
fnsave
sub
clc
sbb
subl
add
mov
notb
dec
inc
push
faddl
int
shl
scas
mov
jle
xchg
data16
xchg
add
mov
rclb
add
jp
cmpsb
pop
sbb
gs
cmp
fildl
add
ds
inc
or
xlat
mov
push
mov
xor
fsubr
iret
adc
inc
addr16
inc
jle
push
orl
xchg
mov
pusha
xorl
jae
cmc
push
dec
iret
inc
mov
shll
das
int3
jno
fisttps
sbb
jo
add
mov
pushw
or
cli
mov
lret
lret
and
dec
negl
sbb
xor
pop
jmp
test
fidivl
jmp
and
jp
aad
adc
add
nop
rcrl
ret
enter
add
data16
les
mov
push
popa
ds
int3
mov
xor
xor
dec
out
push
push
test
movsb
cs
sub
imul
leavew
cmc
dec
lods
mov
pop
stos
stc
mov
leave
jo
inc
dec
mov
scas
xchg
icebp
cmc
data16
mov
add
dec
orb
inc
cli
gs
inc
ljmp
sarl
daa
add
in
cmpsb
dec
lods
adc
imull
mov
fnstenv
mov
lds
jbe
in
ds
and
xlat
cmpl
or
jmp
loopne
nop
mov
les
sub
out
adc
dec
in
push
push
aaa
das
jg
xor
xor
ret
pop
xchg
mov
inc
and
xlat
fwait
hlt
dec
add
mov
loope
fildll
dec
or
sub
jne
data16
fmuls
ljmp
cli
push
pop
mov
adc
and
mov
int
lret
shl
mov
sub
inc
inc
pop
test
xor
outsb
sub
and
or
test
jge
lahf
inc
fdivrs
mov
jecxz,pt
xchg
cmpsl
testl
shlb
xchg
push
movsl
dec
out
pop
rep
outsl
and
sbb
mov
cmp
cli
inc
loopne
in
test
jge
dec
pop
pop
jb
addl
push
in
mov
push
sub
repz
mov
in
lahf
idivb
aaa
jge
in
stos
daa
sbb
loopne
cmp
push
xchg
enter
fmull
fnstenv
dec
icebp
jno
pop
notb
lock
mov
add
in
out
cmpps
and
mov
enter
addl
out
clc
fldcw
mov
inc
xor
mov
pop
outsb
je
jno
lcall
jnp
push
int3
push
stos
ds
sbb
mov
lea
and
in
fwait
xor
jge
pop
xor
fbld
call
jmp
insb
push
subl
out
stos
or
xchg
cltd
fwait
arpl
lea
cltd
xor
mov
sbb
dec
add
out
in
or
into
jg
enter
sub
add
ss
imul
outsl
push
mov
cmp
mov
add
lods
rcll
cmp
or
ds
push
sti
data16
xchg
pop
cli
push
fldt
push
adc
mov
and
mov
or
sbbb
or
in
testb
fwait
loop
cmp
punpcklwd
lahf
lret
cmp
jge
push
add
mov
jne
mov
scas
xlat
ret
mulb
lods
cwtl
mov
mov
fwait
scas
imul
aas
aaa
fdivr
out
jae
test
gs
stc
mov
test
xor
pop
push
jns
dec
fidivs
dec
les
movsb
scas
mov
fdiv
dec
fdivrl
sub
pop
jecxz
mov
mov
loop
stc
pusha
rorl
adc
pop
push
in
inc
lods
popf
mov
enter
insb
jbe
mov
pop
aas
jnp
jg
jge
les
adc
aad
add
push
in
shl
out
cs
cmc
frstor
mov
outsl
lret
add
mov
fs
or
cmpsl
cs
scas
push
mov
xor
jae
xor
xorl
cmp
js
xor
ret
xor
xchg
lret
jns
add
int3
lahf
mov
faddl
cli
or
add
into
and
push
push
push
xor
mov
cmp
dec
push
xor
or
mov
mov
mov
sbb
mov
std
test
icebp
push
add
mov
sbb
nop
cmp
xchg
mov
lds
leave
or
outsb
test
mov
cli
jge
filds
push
mov
icebp
psubd
xchg
push
jge
dec
dec
cs
inc
insb
add
lret
mov
stos
push
outsl
aas
repnz
cwtl
add
test
xor
pop
mov
aad
sbb
inc
push
flds
lock
inc
sub
lods
mov
xchg
out
push
lods
push
rorb
cmpsb
inc
loope
popa
inc
mov
sbb
insl
pop
jge
pop
mov
jo
loope
fstl
pop
cmpsl
stc
imul
fcoml
nopl
dec
and
sarl
jae
ss
mov
mov
cmp
gs
inc
push
ret
pop
mov
jmp
dec
sub
test
leave
ljmp
push
rolb
xlat
into
cmpsb
lea
test
jnp
ret
pushl
inc
fistpl
int3
dec
pop
dec
push
jo
pop
xor
sbb
bound
sbb
test
cmp
sub
out
es
dec
jnp
inc
dec
mov
test
xor
fldt
stos
aas
cltd
je
mov
scas
aad
xlat
dec
cmp
sarb
and
stos
or
xchg
mov
push
lahf
xor
stc
ret
inc
addl
shrb
imul
lods
and
or
push
movsb
mov
cmp
or
mov
es
loopne
inc
insl
push
dec
sbb
jns
push
lahf
jge
adc
fildll
dec
pop
bound
xchg
lods
nop
jge
iret
xchg
xchg
mov
inc
cmp
sahf
in
mov
in
sarb
xchg
xchg
ret
imul
dec
xchg
xor
sub
add
and
fs
inc
pop
and
jnp
je
mov
push
cmp
xor
repz
lods
inc
mov
mov
aaa
and
je
mov
xor
xchg
mov
inc
fsubrl
pop
cmpb
push
nop
imul
in
mov
sarl
repnz
jnp
divl
fldenv
dec
popa
jns
outsl
cld
stos
scas
sbb
xchg
mov
xchg
xor
add
test
ret
sbb
or
sbb
adcb
inc
sbb
mov
and
adc
mov
in
test
xor
xchg
push
das
testb
cmpsl
inc
and
enter
inc
jecxz
pop
vmaxsd
pushf
das
push
push
or
mov
sbb
fildl
or
cwtl
into
stos
xchg
cmc
cli
dec
mov
sti
sbb
xchg
das
aaa
mov
jecxz
sbb
addr16
orl
inc
out
jecxz
ror
xor
int
cltd
jge
in
mov
fdivrl
ss
shrb
stos
lock
out
mov
jbe
or
or
inc
cltd
xchg
mov
adc
jp
inc
add
stos
xchg
mov
jecxz
lret
aaa
repz
stos
insl
sti
cmp
test
or
mov
add
jnp
shlb
dec
add
push
fs
push
sub
popa
mov
add
js
xchg
jb
or
jae
mov
dec
fwait
stos
or
rcrb
shlb
xchg
mov
sub
rolb
sbb
out
add
jmp
adc
stos
je
int
or
popl
daa
loope
sbb
in
and
or
jmp
cs
pop
fdivrs
fistps
add
push
jl
pop
mov
adc
add
inc
mov
cmp
aam
xchg
inc
sub
cmp
pop
mov
dec
ds
test
push
iret
xor
fnstsw
popa
sub
jb
sub
push
aad
cmp
cs
xor
sub
mov
js
mov
mov
push
mov
out
mov
jmp
mov
out
out
in
fbstp
cmp
rcrb
inc
out
fnstenv
jo
adc
mov
into
insb
bnd
mov
jne
inc
push
mov
adc
add
push
dec
lcall
pop
std
mov
lea
jmp
inc
in
jle
rclb
jbe
aas
xchg
xor
ss
mov
lods
mov
aaa
jae
xchg
mov
pop
xchg
adc
adc
sbb
cmp
icebp
cmp
mov
mov
jne
aas
inc
xchg
sbb
movsb
mov
fildll
out
sub
repnz
sbb
jecxz
aas
bnd
sarl
ljmp
or
add
daa
in
jle
mov
sub
push
sbb
xor
xor
fisubrl
loopne
ret
dec
stos
test
lcall
add
insb
cs
clc
adc
sbb
aad
and
push
lods
push
mov
dec
cld
icebp
inc
lock
and
sub
push
pop
xlat
push
dec
fisubl
in
pop
jno
sub
or
ret
fcomps
lds
push
xchg
xchg
cmpsl
or
inc
cmpsl
mov
insb
push
stc
cs
cs
sti
loope
fstpl
jne
das
sub
push
xor
loopne
cmc
mov
int
stos
mov
cmp
pop
ja
sti
lcall
imul
dec
cli
sub
imul
inc
inc
std
sti
mov
jne
mov
mov
dec
fimull
out
mov
sub
into
stos
sub
test
xchg
cmp
lret
aam
add
inc
fcmovb
xor
pushf
push
dec
cld
lea
loope
scas
adc
and
xor
pop
pushf
test
cmp
andb
mov
mov
nop
outsb
outsl
imulb
xchg
sub
xor
sarl
pop
and
cmpsl
scas
lods
fdivl
icebp
adc
sahf
mov
loope
mov
cmp
mov
rorb
aas
mov
inc
iret
jns
int
jp
sbb
addl
bound
jle
cmp
or
pop
xchg
jmp
sub
les
movsl
lret
loopne
add
icebp
cmp
xchg
insl
push
and
cltd
es
push
inc
and
ja,pt
lret
loopne,pt
push
or
inc
bound
sbb
sub
or
jecxz
pop
aaa
repz
jo
test
ja
cmpsb
cmp
and
pop
sahf
jo
loopne
push
pop
sub
mov
scas
adc
out
enter
sbb
decl
repz
fwait
ljmp
loop
push
sub
cmc
add
push
dec
int3
in
xlat
dec
add
bound
scas
mov
sahf
mov
cmc
aas
mov
cltd
lods
mov
xor
rcll
and
or
lods
cwtl
inc
inc
int
jb
inc
mov
adc
cmp
lods
repnz
pop
call
xor
into
daa
mov
repz
imul
shll
inc
push
xor
mov
inc
xor
or
scas
fildll
mov
out
jle
push
mov
out
ds
lock
lret
xchg
in
addr16
lahf
cmpsl
jo
ror
cmp
push
mov
sub
fisubs
lock
repnz
rol
popw
cmp
stos
fwait
fs
outsl
sub
pop
inc
mov
jg
inc
sbb
push
jge
add
lea
inc
daa
cmp
lret
jp
loop
stc
jne
test
gs
mov
rclb
lock
rcrb
rol
dec
dec
xor
es
repz
ds
mov
dec
pop
in
mov
inc
repnz
push
push
sbb
adc
inc
stos
lcall
mov
or
mov
test
divl
xorl
xor
sub
std
and
and
pusha
mov
mov
xchg
mov
pop
sub
fldcw
sahf
lods
lods
mov
add
test
movsb
rolb
lret
arpl
xchg
mov
outsb
mov
push
sarl
or
xchg
mov
fistps
sbb
xchg
mov
dec
cwtl
mov
iret
pop
mov
jo
pop
ljmp
inc
loop
pop
int3
mov
les
push
test
les
in
mov
gs
aam
push
mov
fwait
pop
xchg
xor
inc
leave
insb
arpl
jno
lods
xchg
lret
sahf
fs
pop
mov
cmc
out
ret
mov
insb
xor
repz
fstl
push
mov
jle
inc
xor
movsl
hlt
lods
cmpsb
inc
push
push
jmp
cld
arpl
push
push
mulb
dec
jl
shl
mov
leave
xor
inc
jle
scas
cmp
cli
and
sub
movups
inc
pusha
fs
out
push
dec
mov
pop
stos
stos
fs
sub
shll
imul
fwait
jnp
adc
pop
insl
clc
jne
fwait
adc
lahf
nop
cmp
arpl
xor
mov
adc
insl
jmp
inc
pusha
mov
mov
mov
jns
arpl
sbb
sub
dec
push
xchg
or
out
push
dec
inc
ja
sub
stc
mov
into
loopne
pop
or
push
mulb
xchg
movsl
xchg
mov
into
and
dec
push
pop
mov
adcb
xlat
stos
mov
mov
add
or
adc
fisubrl
leave
sub
stos
stos
lods
push
jne
and
mov
xchg
test
push
cmp
jbe
iret
popa
dec
in
test
mov
adc
call
leave
jl
lret
jl
int3
call
imul
pop
xchg
js
rcr
dec
inc
ret
fisubl
mov
lds
inc
add
cwtl
sub
mov
jge
loop
cmpsl
pop
add
sti
into
xor
mov
sub
mov
or
cld
mov
scas
mov
fwait
test
xchg
in
gs
and
or
cmp
rol
addr16
popa
pop
roll
xchg
bound
push
ljmp
adc
dec
dec
test
ss
fidivrl
fldenv
fbld
sbb
sbb
pop
or
and
cmc
jmp
add
sub
push
push
mov
mov
nop
mov
cs
xchg
mov
xor
scas
inc
and
out
dec
fdivrl
or
call
mov
push
cmpsl
adc
and
pop
adc
sub
loopne
movsb
ret
xchg
sbb
sub
add
add
imul
aam
data16
xor
mov
nop
lahf
fistps
jnp
xchg
mov
out
cmc
mov
lods
mov
aaa
push
mov
adc
aad
testb
inc
sbb
and
pusha
jnp
xchg
daa
scas
sub
and
insl
shlb
pop
repnz
je
test
or
fisubrl
mov
cli
add
mov
push
aas
in
or
in
data16
icebp
rcrl
inc
cli
cmpsb
sahf
loope
pusha
stos
fisubs
ret
mov
or
test
das
jle
das
sub
pop
mov
popa
pop
call
mov
call
test
mov
xchg
mov
dec
xor
push
inc
icebp
pusha
jno
fs
dec
pop
jge
rcrl
inc
cmpsb
mov
mov
insl
mov
jb
ljmp
cmc
push
and
fldl2e
push
jbe
nop
in
in
cmp
div
movsb
mov
add
pop
mov
dec
gs
and
pop
ja
sub
inc
pop
dec
pop
loope
outsl
xor
jg
fidivs
sub
sub
rol
sarl
aad
add
pop
push
fs
inc
mov
pop
fcompl
mov
test
call
stos
mov
inc
or
pop
fnstcw
xchg
aas
mov
sub
dec
xchg
sub
lea
movsb
gs
adc
adc
mov
inc
popa
jnp
push
sti
mov
xor
in
rclb
gs
arpl
hlt
sub
dec
mov
sub
mov
stc
bound
or
iret
es
lcall
insb
sub
in
xor
es
cmpl
push
fmuls
filds
shl
aam
cltd
aas
xchg
fwait
and
sarb
outsl
add
out
dec
pop
pop
shll
cs
jg
rorb
inc
dec
movsl
jns
and
sbb
int3
inc
leave
xor
inc
mov
das
fmuls
shl
xchg
push
loope
mov
sbb
xor
push
cli
mov
xchg
adc
cmp
pop
pusha
xor
out
jne
lcall
movsl
mov
inc
in
cmpsb
cmp
ror
inc
stc
push
xorb
sub
fiaddl
mov
adc
popa
ds
sub
fistpll
inc
mov
movsl
push
sub
fcomps
sbb
xchg
push
and
mov
pop
dec
pusha
adc
xchg
adc
arpl
add
test
in
push
inc
adc
rcll
lds
mov
adc
mov
aas
enter
dec
mov
push
cltd
loopne
lods
jp
mov
andps
jp
mov
adc
add
fstpl
push
push
ljmp
stos
repnz
imul
pop
insl
arpl
cmpl
sub
push
xchg
lea
daa
push
and
jnp
mov
popa
pop
bound
stos
mov
mov
push
test
jle
inc
and
das
pop
and
das
and
xchg
imul
lods
mov
insb
lret
sub
mov
icebp
cs
cli
pushf
cmp
mov
in
and
je
jbe
or
xchg
and
xor
js
fldt
rcrb
out
jae
sar
mov
inc
dec
test
and
xlat
stos
inc
adc
push
test
push
rcrb
pop
cltd
cmp
aad
mov
loop
sbb
pop
into
pop
dec
lock
sbb
jne,pt
stos
xchg
std
jae
sarb
push
incb
hlt
repz
or
mov
sti
sub
mov
mov
jne
and
or
hlt
aam
cmp
es
dec
push
add
xor
jno
lret
insb
shlb
in
push
iret
outsl
vmread
std
cs
pushf
mov
xchg
cmpsl
dec
add
lock
ret
dec
jg
adc
xchg
jns
ret
lahf
popf
jg
or
outsb
cmpb
mov
dec
sbbb
lahf
decl
pop
adc
cltd
int
out
xor
pop
mov
mov
mov
mov
jb
add
mov
xchg
adc
enter
in
bnd
sbb
jnp
scas
mov
out
jmp
in
sbb
adc
sub
or
add
sti
pushf
pop
test
mov
adc
sahf
mov
cmpsb
out
arpl
ds
jo
mov
ror
loop
lcall
popf
mov
xlat
sbb
lret
pop
bound
xor
repz
ret
stos
fadds
shll
std
leave
lods
test
js
xchg
jecxz,pt
lods
imull
out
sub
mov
or
jg
les
rcl
xchg
leave
repz
push
add
mov
faddl
mov
add
pop
add
xchg
ficompl
xchg
push
lea
cmpsb
pop
or
mov
cmpsb
inc
inc
or
shll
hlt
mov
fstp
mov
mov
popf
mov
jns
es
cmp
mov
and
mov
push
xor
dec
push
or
mov
andl
mov
aaa
rorl
out
jb
mov
shlb
add
test
into
std
sub
xchg
inc
mov
or
sbb
shr
stos
mov
mov
and
dec
es
cmp
rorb
adc
sbb
dec
lea
pop
mov
pop
pop
gs
cmp
jno
push
xchg
cs
imul
inc
jl
add
and
ret
lret
and
cld
ret
jbe
lock
inc
inc
stos
xor
and
mov
xchg
insb
xor
loop
jbe
test
sub
aas
jb
sbb
mov
dec
loope
imul
stos
add
sbb
adc
xchg
mov
pop
scas
or
subl
sub
test
or
lods
push
mov
jne
jo
imul
jbe
mov
fdivl
adc
jb
cli
jo
and
xor
jbe
adc
lea
aaa
loopne
xor
leave
cltd
cmp
cwtl
xchg
mov
jge
arpl
in
pop
dec
adc
insb
and
push
pushl
sub
or
xor
mov
idivl
adc
test
mov
push
and
jle
rcr
xor
mov
testb
inc
mov
les
nop
loope
pop
ja
hlt
xchg
push
pop
inc
and
aaa
mov
pop
xchg
adc
dec
jne
icebp
sub
mov
cmp
lret
icebp
push
mov
imul
mov
inc
xor
mov
repz
mov
unpcklps
pop
mov
es
jle
out
hlt
push
das
jge
add
jne
sub
mov
aaa
mov
xor
loop
jmp
cltd
adc
fildll
dec
mov
arpl
in
movsl
shll
pop
gs
hlt
xor
aam
rcrb
pop
mov
push
dec
nop
stc
cli
fidivrs
test
outsl
jecxz
lcall
outsl
add
dec
or
icebp
or
inc
mov
cmp
int3
sbb
es
pop
fistps
inc
add
ljmp
es
jg
shr
roll
jmp
into
cmpb
leave
cs
inc
pop
jmp
movsl
mull
sub
bound
mov
pop
xor
imul
divb
xor
ret
repnz
xchg
lock
repz
pusha
mov
jmp
inc
pop
popa
mov
dec
cmp
push
loope
lahf
cmp
mov
sar
rolb
popf
fnstsw
stos
xor
jl
inc
cmp
aas
mov
fcoms
es
xlat
sbbb
sar
gs
out
ljmp
push
jns
scas
pop
mov
test
mov
mov
xchg
dec
push
or
dec
sub
adcl
pop
sub
int
daa
dec
mov
ds
and
mov
fdivl
jle
xor
add
popf
popa
mov
sbb
out
pop
out
stos
pop
push
aas
inc
mov
leave
in
push
test
jecxz
add
nop
or
cmpsb
in
and
test
push
in
gs
xor
jl
mov
dec
repnz
arpl
xchg
cmpsl
outsl
sub
push
mov
dec
mov
scas
adc
sub
sub
xor
int
jbe
rorb
bnd
jne
push
das
data16
cmp
sbb
inc
addb
icebp
mov
shlb
sub
fidivs
fistl
rcrb
push
lds
mov
in
js
lds
test
and
fwait
int3
lods
adc
cmp
xor
leave
push
ret
int3
inc
sbb
pushfw
shrb
pop
aam
jno
fistl
fadds
add
scas
jg
outsl
out
ror
insb
mov
orb
imul
jmp
ret
xchg
fadds
mov
ljmp
mov
push
std
imul
push
mov
mov
iret
sbb
pop
pop
xchg
add
in
sbb
inc
stos
fisubrl
loope
sbb
into
movsb
loopne
mov
and
movsb
subl
add
fstl
imul
push
adc
sub
xchg
cmp
es
test
cmp
pop
loope
cs
push
jae
ror
jle
mov
push
adc
inc
jge
inc
clc
push
es
sar
xor
hlt
pop
push
aaa
ds
xchg
jns
xchg
popa
jmp
push
add
and
divl
xor
mov
jmp
rclb
stc
cmp
xchg
or
in
push
push
xor
ret
and
adc
mov
inc
pop
mov
addr16
mov
mov
loope
adc
sahf
xchg
fisttpll
je
notb
shrb
pop
push
mov
xor
xchg
jecxz
mov
mov
xchg
jle
jmp
and
push
sub
lods
cltd
ret
inc
pop
pop
js
out
push
sub
lret
and
pop
leave
cmp
imul
test
cmpsl
sbb
xchg
outsb
test
lds
std
add
fisttps
insl
loope
add
loopne
int
add
pusha
cmpsl
jge
in
dec
and
aaa
mov
push
in
mov
push
dec
pusha
jecxz
jb
test
mov
or
jnp
xlat
sbb
push
jbe
out
loopne
ror
pop
mov
cmpsb
inc
mov
jl
and
test
daa
dec
or
inc
mov
adc
inc
leave
add
mov
mov
add
scas
gs
gs
push
inc
jns
xor
stc
lock
cmpb
adc
sub
pop
iret
pop
xchg
jo
xor
shrb
push
outsl
pop
push
imul
movsl
dec
inc
cli
dec
mov
push
std
xor
adc
jmp
pop
mov
sbb
insb
mov
adc
jne
insl
cli
scas
adc
inc
inc
popf
aas
in
das
mov
inc
or
push
rorl
push
push
pusha
mov
jecxz
or
dec
mov
popa
add
sub
inc
repz
test
inc
dec
jbe
and
xchg
nop
es
and
xlat
jbe
mov
xchg
adc
mov
mov
sahf
mov
aad
or
test
shrl
loope
test
shl
out
pop
js
cmp
and
rorl
pop
cmp
and
mov
jno
pop
aad
xchg
xchg
rorb
and
lahf
stos
ror
dec
sahf
and
filds
adc
push
lds
xlat
cltd
pop
cltd
cs
pop
mov
test
ss
mov
cmpsb
adcb
outsb
xchg
add
xlat
mov
mov
mov
test
aad
mov
mov
pop
lcall
sti
sub
cmp
loopne
xchg
sbbl
inc
test
ljmp
stos
push
mov
cld
hlt
mov
push
filds
cmp
and
xchg
xorb
pop
ljmp
cltd
xchg
mov
addr16
fsub
and
add
outsl
adc
add
dec
cmp
push
test
xchg
aas
adcl
fwait
jge
push
and
mov
es
mov
cmp
cmp
fldcw
ret
stos
jmp
xor
bnd
sarb
sbb
js
idivb
cmp
pushf
test
pop
xchg
lds
pop
cmc
cmp
add
add
nop
fnstsw
xlat
xchg
cmp
jle
push
int3
adc
scas
sub
out
xchg
fsubl
jo
jbe
jo
jg
xor
pop
pop
fdivrs
repnz
xchg
push
idivl
cmp
fisubrl
cmovno
adc
adc
cwtl
scas
dec
add
mov
cwtl
mov
cld
jno
sbb
cmp
add
inc
sbb
and
adc
sub
sub
out
xchg
xor
fidivs
cmpsb
clc
out
xchg
pop
ss
pop
or
dec
push
mov
add
xor
sbb
out
cmp
iret
stc
lahf
outsb
sbb
outsb
sbb
dec
pop
clc
aad
int
pop
imul
outsl
sbb
inc
push
std
and
gs
std
out
cmc
data16
cli
lahf
ds
pop
and
pop
inc
mov
mov
cmpsb
mov
mov
out
xor
fbld
mov
mov
pop
loopne
sbb
inc
sbb
outsl
xor
add
inc
fnstsw
pop
hlt
sti
adc
adc
jb
cmp
fistps
cmp
jns
out
mov
jle
inc
pop
or
lretw
sub
lahf
mov
movsl
cmp
aad
push
dec
jno
mov
sbb
ficomps
jle
add
add
jmp
or
cli
lret
push
xchg
aaa
jb
jno
sub
sti
insl
xchg
cmc
std
adc
pop
dec
mov
mov
in
push
rol
out
setns
push
aam
add
xorl
sub
inc
jb
cmp
mov
cmp
ljmp
cmp
es
pusha
mov
ds
aaa
push
xchg
or
mov
shl
xorb
test
add
loop
push
enter
ret
push
or
and
daa
call
jbe
mov
cli
std
xor
cwtl
and
int3
enterw
push
adc
mov
xor
jg
test
mov
ror
addb
sub
xor
jmp
enter
jns
add
das
sub
shr
fs
sahf
sbb
sub
loop
lds
or
stc
fdivrs
orl
outsl
inc
stc
inc
in
mov
and
inc
div
inc
push
addr16
inc
ljmp
nop
cmp
xor
fistpl
into
xor
jl
pop
mov
into
xchg
pmulhw
or
jecxz
sbb
aaa
push
add
nop
nop
bound
inc
cmp
add
fstpt
faddl
aaa
in
push
pop
shrl
popf
nop
into
mov
adc
and
addr16
lock
dec
dec
jecxz
pop
xor
fildl
popa
sbb
jb
cmp
mov
sub
shrl
inc
call
lahf
rclb
adc
push
mov
pop
sbb
fs
add
rcl
mov
xchg
mov
call
call
jecxz
xchg
fisubrs
test
andl
dec
sbb
repz
jg
push
push
and
sub
shll
ret
jae
fwait
out
ds
in
sbb
stc
xor
jmp
push
push
jae
push
aad
pop
mov
jno
js
mov
pop
push
mov
divb
fs
movsl
outsb
mov
pushf
inc
cmpsb
repnz
xor
shrd
jnp
loopne
inc
dec
scas
jecxz
xor
or
cmpl
dec
popa
mov
push
mov
leave
xchg
mov
sub
jmp
jmp
add
sahf
or
pop
in
inc
xchg
inc
cli
mov
add
shll
scas
lret
cmp
sbb
pop
push
pop
ljmp
leave
scas
stos
stos
lea
sub
dec
sub
test
push
jo
cld
inc
pop
xchg
popa
pop
lock
repz
lods
out
test
dec
jge
sbb
mov
inc
gs
je
push
mov
push
add
jmp
jecxz
or
fisubs
jmp
ja
mov
jae
sub
js
scas
cli
into
mov
cmp
cmpsb
dec
sbb
enter
mov
and
lret
cltd
stos
lods
clc
mov
xor
enter
pop
cs
cmc
sbb
and
push
das
sub
push
orb
inc
lret
jg,pt
movsb
jbe
jo
leave
mov
xchg
iret
and
mov
sbb
push
adc
push
add
ja,pn
lds
or
fwait
push
xchg
in
sbbl
arpl
jp
mov
lcall
and
pop
and
or
add
fistl
pcmpgtw
fcmovu
js
int3
push
xchg
push
cltd
int
lcall
jnp
sbb
shll
cmpsb
pop
jmp
ss
cli
nop
jp
js
jbe
and
xor
outsl
xchg
loope
aas
add
mov
sarb
std
and
inc
push
cmp
add
xchg
icebp
xchg
lea
mov
scas
divb
jmp
xorb
xor
cs
jae
ds
pusha
fmull
dec
or
mov
pop
das
and
cli
sub
adc
add
or
jg
pop
dec
scas
lock
fisubrs
mov
icebp
add
mov
cmc
cmp
dec
mov
and
cmp
sahf
ret
adc
or
sbb
scas
jp
stc
mov
or
popf
push
cmc
cmp
push
xorl
ja
inc
jle
das
jg
cltd
inc
loop
xor
or
pop
xchg
pop
je
jmp
hlt
mov
xchg
jnp
xor
and
lods
dec
hlt
int3
inc
ss
rol
adc
adc
cmpsl
repnz
nop
lahf
jle
sub
jl
cmp
mov
ljmpw
test
sub
les
mov
test
es
mov
insb
xchg
or
mov
in
arpl
cmpsb
inc
xchg
dec
add
lea
out
lret
cmp
mov
pop
sbb
sbb
add
pop
stc
jg
sub
decl
jle
jnp
xor
repz
mov
aad
or
out
dec
aam
mov
add
add
sbb
arpl
arpl
outsl
sbb
neg
inc
mov
push
stc
sti
mov
mov
out
add
lock
mov
and
jge
pusha
jp
push
push
mov
mov
loopne
rcrl
inc
lock
mov
js
loope
dec
addr16
enter
out
call
add
or
dec
mov
fdivrl
outsb
push
cwtl
dec
in
in
and
push
lods
and
jae
xor
hlt
adc
faddl
push
sbb
in
cmp
loop
xor
jo
inc
jp
dec
jecxz
or
sbb
lret
out
loop
pop
cld
inc
push
mov
add
mov
pop
xor
xchg
jnp
cmp
cmp
inc
xchg
cwtl
jns
popa
dec
ss
mov
mov
xchg
mov
out
bound
aam
fsubrs
sub
add
and
inc
jbe
add
out
fcompl
outsl
lret
mov
xchg
lea
inc
and
sub
mov
iret
adc
pop
test
js
cmp
lea
clc
das
dec
dec
sbb
outsl
jmp
daa
jmp
aas
or
xor
mov
xor
repz
push
movsl
xchg
arpl
or
or
loope
push
xor
push
xchg
cli
popf
outsl
testl
mov
out
xchg
or
mov
mov
and
pusha
sbb
jb
add
pushf
cmp
dec
pop
insb
cld
jle
outsl
jae
insb
outsl
mov
lret
ljmp
sbb
cs
movsl
sahf
fstps
pop
mov
data16
orl
jmp
mov
push
jae
sahf
mov
cwtl
xchg
inc
dec
in
mov
loop
in
mov
cmpsl
insb
pushf
mov
bound
sbb
fstl
frstor
and
xchg
mov
clc
jbe
shlb
test
das
mov
inc
inc
lret
pop
mov
aad
xor
gs
xchg
sahf
ret
xchg
mov
adc
loope
in
scas
aam
lds
xor
lods
push
in
cli
mov
js
ret
out
xor
std
jo
data16
shlb
lock
insb
sar
outsb
push
adc
mov
push
adc
jb
aaa
mov
sub
inc
push
int3
cld
cs
mov
and
int3
mov
and
dec
push
cmpb
xchg
mov
and
xor
rolb
and
dec
sahf
lock
outsl
rcll
xorb
push
into
xor
in
dec
cmpsl
sti
movsb
dec
jo
mov
inc
inc
xchg
pop
rcll
mov
shlb
push
jns
cwtl
shrb
fistpll
adcb
orb
loopne
jb
add
outsb
push
push
sbb
into
out
fldcw
adc
repnz
mov
xchg
pushf
fwait
push
clc
fmuls
cmp
in
pop
cmc
test
and
rcr
sarb
adc
pop
cmp
adc
and
mov
pop
hlt
xor
dec
cmp
pop
rolb
in
jg
cmpsl
xchg
mov
add
rorl
lret
push
pop
ror
pop
dec
sti
sub
push
lret
or
mov
test
adc
xchg
mov
ja
rcr
mov
iret
cmc
fiaddl
xor
sbb
mov
pop
jne
outsl
xor
xchg
aad
arpl
sbb
sbb
aam
data16
lret
in
cmp
pop
imul
stc
das
ficompl
pop
mov
cli
mov
cltd
ret
data16
ds
inc
xor
push
jmp
sbb
les
jp
lret
es
stos
xor
ret
daa
scas
movsb
adc
fwait
andb
mov
lret
pushf
or
ret
pop
mov
imul
and
adc
cmp
inc
add
adc
jbe
rcrl
mov
in
mov
out
cmc
orb
out
and
mov
push
cmp
or
inc
gs
jns
push
sub
out
mov
or
int3
ja
add
push
pop
lock
sbb
nop
pop
sub
in
sti
inc
into
out
pop
mov
inc
es
dec
jl
inc
or
test
xchg
pop
imul
ss
pop
adc
aad
aad
fidivl
daa
mov
or
cmpsl
or
incb
bound
icebp
jecxz
mov
nop
out
mov
lret
pop
ret
jl
xchg
jle
jmp
xchg
insl
jle
jo
outsb
ds
xor
inc
xchg
xor
dec
es
mov
stos
leave
loop
jb
mov
out
fisttpl
mov
es
popa
loopne
cmovno
jne
loope
mov
daa
push
xchg
mov
bound
jno
mov
xor
adc
mov
add
adc
mov
int
xchg
dec
imul
repnz
mov
fimuls
add
pop
lock
and
xchg
sbb
orl
addr16
test
cmp
je
pushl
jo
pushf
or
addr16
bound
push
loope
push
outsl
sub
iret
mov
jbe
out
jbe
aad
jg
sbb
xchg
pop
lock
push
sub
cmc
shll
das
jmp
lods
in
jb
add
cmc
add
cli
or
mov
inc
cmp
test
xor
pop
jp
insl
outsb
pop
icebp
pop
mov
cltd
les
imul
xchg
movsl
xorl
pop
outsb
push
iret
popf
xor
les
jb
insb
adcb
repnz
jp
xchg
outsb
add
gs
flds
shlb
dec
adc
dec
insl
clc
or
cld
xchg
repnz
sub
cld
subl
mov
sbb
sahf
mov
jmp
jb
pushf
pusha
cwtl
lcall
fistl
add
fnsave
iret
xlat
pop
insb
rolb
xor
stc
inc
pusha
jno
xchg
and
test
loop
mov
pop
sbb
orl
jbe
test
mov
push
cmpsl
in
mov
push
ret
pop
and
int3
adc
aas
cltd
jb
push
and
scas
rep
xchg
out
outsb
xor
dec
xor
aas
rol
push
cmpsb
push
adc
popa
push
pop
xlat
mov
sub
add
jnp
cli
lods
in
inc
mov
xchg
mov
adc
mov
test
ret
add
mov
pusha
dec
and
clc
adc
mov
sbb
in
pop
push
jp
movsb
data16
xor
popl
mov
pop
outsl
cli
jb
repnz
fsubrs
jns
scas
insl
popf
stos
lcall
jp
ja
mov
lods
or
sbb
aas
mov
add
push
or
dec
xchg
dec
dec
or
push
xchg
jl
cmp
lods
js
mov
and
lahf
movsb
cmp
ja
mov
ljmp
and
xchg
mov
cmp
cltd
iret
cmp
xchg
ss
xlat
dec
cmp
add
je
fs
xor
cmp
cmp
lods
and
loop
jl
or
ja
add
clc
out
int
popa
out
sub
cmpsl
sbb
or
in
sti
mov
cs
ja
xchg
fmuls
cltd
cwtl
cmp
orl
and
ficomps
loopne
xchg
fists
pop
aaa
fndisi(8087
test
xchg
adc
popf
je
es
jno
jmp
xchg
push
int
stos
test
aas
push
lods
shrl
sbbl
rcr
cltd
add
dec
cs
popf
adc
cmp
cmp
comiss
push
xor
push
sarb
insb
sub
or
dec
icebp
stos
cld
outsb
jg
adc
dec
stos
jb
fs
jne
lds
xchg
mov
mov
and
mulb
insb
push
pop
cmp
mov
mov
cmp
inc
push
pop
int3
fnsave
fadds
popa
xchg
fistl
and
push
rclb
stc
dec
aad
xchg
rcrl
pushl
cmp
rorb
mov
leave
and
pusha
sub
inc
cmp
rep
xor
xchg
sub
mov
out
add
pushf
repz
xor
pop
xor
jp
add
lods
pop
ret
insl
mov
nop
lret
add
cltd
pusha
adc
sbb
dec
mov
sahf
sbb
cmc
outsl
pop
xchg
aam
jmp
jg
fwait
loop
xchg
or
xor
pop
mov
cmc
push
jcxz
xchg
sbb
neg
enter
mov
jb
lock
jecxz
xchg
ret
and
das
aam
mov
dec
cmc
popf
inc
mov
or
xchg
pop
in
ss
scas
fs
sbb
adc
jbe
pop
leave
out
add
mov
dec
je
xchg
pop
mov
jo
xor
loope
lahf
fcmovb
jg
hlt
add
mov
je
pushf
mov
cltd
jae
aaa
mov
inc
push
sub
out
mov
psadbw
or
leave
lods
movsl
cmp
push
movsb
jecxz
in
sar
xor
mov
jecxz
and
jp
sti
es
pop
mov
pop
sub
sbb
cltd
les
push
mov
and
and
xchg
shlb
mov
mov
das
cmpsb
mov
and
test
add
popf
dec
mov
lcall
sti
lret
test
add
mov
int3
lds
out
adc
sbb
xchg
sub
pop
and
je
add
pop
and
cs
in
xor
jge
inc
cld
cs
xchg
mov
pop
adc
sbb
mov
push
cmc
fnstcw
xor
fisubs
fisttps
stos
out
subb
out
pop
xchg
add
mov
stos
push
dec
fcompl
in
fadds
pop
adc
xor
sub
bound
jne
leave
xor
aas
lahf
cmpsl
xchg
std
call
xchg
mov
jecxz
jns
outsl
outsl
scas
fdiv
es
or
fildll
mov
push
xchg
mov
and
loopne
icebp
mov
lods
xchg
xchg
call
ret
fidivrs
icebp
xchg
sbb
rclb
in
enter
inc
pop
cs
jne
std
rcr
or
jl
fisubl
cld
fisttpll
enter
stos
pop
cltd
call
movsb
dec
ret
adc
sbb
popf
imull
sub
shrl
out
rorb
or
loopne
adc
sti
mov
and
mov
ret
and
fldt
popf
xchg
hlt
and
out
ret
push
dec
mov
cmp
adc
mov
movsl
adc
mov
xorb
xor
jg
cmpb
add
test
pop
inc
aaa
jl
out
cmpsb
cwtl
ds
insl
dec
cmp
mov
outsb
dec
movsb
iret
cli
sub
popa
and
pop
pop
fiadds
add
adc
out
adc
adc
pop
push
lret
arpl
mov
scas
imul
sbb
add
dec
xor
jle
cmpsb
cmpsl
push
and
les
and
add
je
aaa
jbe
pop
stc
and
into
mov
insl
xor
inc
xchg
insl
pusha
mov
out
xchg
inc
mov
add
mov
xchg
pushf
jmp
sahf
push
inc
and
popa
xor
cmp
repnz
mov
sbbl
jmp
mov
arpl
xor
cltd
xlat
mov
and
cmc
xor
add
hlt
fidivrl
lahf
jge
push
aam
iret
or
adc
scas
or
stos
loop
arpl
aas
pop
lock
pop
movsbl
mov
mov
inc
movsb
mov
sub
pop
in
push
sbbb
bound
je
lret
outsb
test
mov
and
sbb
jle
sbb
mov
fstps
push
movsl
rcll
hlt
adc
outsb
insl
jmp
and
jl
out
lret
push
pop
addr16
sub
adc
dec
repz
out
sub
sub
ds
fwait
sbb
das
std
inc
adcl
mov
or
in
dec
jno
xchg
inc
jb
fcoms
xchg
in
dec
leave
out
dec
clc
dec
insb
sub
mov
cmp
int3
pop
dec
cmp
or
loop
pop
inc
mov
jmp
lret
loop
arpl
push
lea
push
add
dec
dec
cwtl
push
sub
xor
insb
in
add
rclb
lds
pop
mov
jb
int3
cld
xor
std
mov
or
pop
push
das
out
cmpsl
repnz
add
lods
push
sbb
add
jo
cld
lods
push
jecxz
mov
in
mov
mov
mov
cwtl
jae
mov
mov
xor
pop
jl
aam
add
cs
xchg
gs
aas
sahf
in
call
jns
sbb
adc
add
or
test
pop
fnstsw
mov
pop
dec
cmc
pusha
enter
je
vmptrld
loop
nop
sub
bound
adc
pop
mov
inc
insl
push
mov
xchg
aas
mov
sub
ja
es
jp
or
cmpsb
fistpll
or
xor
aas
mov
pop
push
cmp
jg
mov
push
inc
mov
xchg
lock
fisubrl
inc
inc
mul
hlt
fisubl
in
frstor
inc
hlt
sbb
fcoml
rcrb
insb
push
sub
dec
and
mov
push
or
pop
div
fists
jl
jnp
mov
stc
pop
test
pop
or
push
mov
push
pushl
mov
pop
xchg
loop
add
and
into
or
pop
lret
shll
int
pop
scas
mov
lods
pop
popf
lahf
sub
cli
lds
sub
sbb
loope
fidivrs
stos
pop
lods
sbb
gs
test
imul
mov
stc
cltd
push
sub
adc
sahf
out
sbbl
sbb
sti
push
fbstp
push
and
rol
xor
pusha
pop
icebp
out
mov
shll
sub
push
sbb
call
push
fdivs
and
mov
fwait
mov
lea
pop
int3
jecxz
and
adc
paddw
dec
mov
cmp
adc
mov
jg
incb
or
push
sub
in
mov
xor
push
mov
sub
mov
outsb
stos
push
test
loope
and
repz
fs
repnz
dec
mov
fnstsw
int3
jl
call
out
pushf
iret
push
jg
sub
mov
icebp
bound
and
mov
ljmp
adc
cmp
jbe
sub
cmp
jmp
push
push
cmp
or
lahf
idivl
cmpb
and
inc
pop
xor
sub
lcall
or
sub
cld
in
shlb
std
pop
repnz
je
sub
std
aam
xor
sbb
in
push
mov
loopne
adc
stos
lods
cmp
xor
lods
jno
pop
das
push
imull
sahf
lret
outsl
dec
in
out
mov
push
push
movsl
ficompl
shll
adc
dec
cmpb
cli
add
xchg
jmp
cmp
lea
jle
xchg
iret
mov
in
sti
lcall
enter
pop
les
or
push
rcrl
pop
mov
mov
lods
imul
mov
cli
adc
sub
add
mov
inc
cmp
int
push
and
adc
xor
jns
mov
std
mov
inc
outsb
in
or
lods
insb
add
mov
xlat
and
pop
adc
popf
cld
addr16
cmc
and
xor
mov
sub
arpl
das
mov
jb
pop
mov
into
jg
js
xor
xchg
dec
cmc
pop
xor
mov
or
cwtl
xor
push
cmp
adc
adc
fisubl
clc
and
and
mov
add
or
cmp
test
in
dec
mov
bound
pop
dec
jnp
popl
xchg
das
pop
xchg
mov
pop
add
push
lret
addl
aaa
xlat
cmpsl
pop
imul
mov
int3
iret
dec
mov
imul
pop
pop
aas
inc
cmpsb
cmpsl
scas
or
adc
and
imul
mov
ss
sbb
pushf
or
stos
shll
sub
and
lds
cmpsb
sub
aad
lret
aam
and
imul
test
movsb
insb
ffreep
lock
xchg
pushl
imulb
into
lahf
pop
in
lahf
mov
in
push
shll
mov
enter
inc
popf
into
rcll
test
xchg
cltd
adc
lcall
rcrb
ja
mov
outsb
inc
inc
push
notb
aad
roll
sub
es
xor
das
mov
adc
mov
movsb
cs
sbb
cmp
loope
test
dec
out
inc
movsl
inc
xchg
dec
pop
mov
mov
and
pop
inc
sbb
xchg
int
xor
xchg
and
dec
subl
loop
int3
imul
mov
shrl
mov
cmp
cmc
nop
fs
sbb
gs
jne
push
lahf
out
stos
jnp
sub
cmp
pop
test
inc
or
lea
or
js
aad
rep
clc
dec
xor
fsubs
adc
movsl
mov
js
cltd
mov
add
pop
lock
es
mov
dec
pusha
xor
adc
xchg
push
mov
es
push
ret
rcrl
xchg
lcall
arpl
or
sarb
and
push
pushf
adcb
xchg
in
push
push
das
sbb
jb
adc
sbb
mov
xchg
jge
inc
xlat
mov
cmp
xor
rclb
push
inc
addr16
push
cmp
lret
xchg
popa
cmp
xchg
mov
jne
cmpsb
aaa
or
paddq
xor
fwait
imulb
inc
test
jmp
xor
push
iret
xchg
sbb
iret
and
pop
call
xor
cmp
pop
cmpsb
dec
repnz
js
jns
mov
or
and
pop
ffree
cmpsl
jg
jb
cmp
cmpsb
xchg
cli
fmull
test
pop
add
movsl
or
cmp
aas
movsl
popf
push
xorb
stc
into
gs
lret
inc
mov
mov
push
inc
or
sub
mov
pop
sbb
jo
fsubrs
leave
lcall
sub
pushl
inc
dec
cmp
das
outsb
popf
and
xor
jecxz,pt
loop
leave
mov
cwtl
aad
daa
popf
and
shrl
inc
cmp
pop
jbe
ljmp
adc
sti
push
orl
das
jmp
push
or
mov
insb
addr16
mov
push
out
dec
addb
lea
pop
push
sbb
dec
adc
in
test
mov
xor
and
fisubl
cli
push
cmp
ret
jl
mov
test
test
add
jp
daa
out
inc
mov
adc
loop
test
pop
xor
mov
or
mov
das
mov
push
inc
cli
stos
test
mov
mov
icebp
push
js
lret
xor
fisttps
push
les
push
or
xlat
or
mov
mov
hlt
pusha
cmp
andl
out
adc
js
cmc
enter
pop
popa
sbb
jmp
sbb
fcmovnu
pop
mov
mov
jg
dec
imul
jg
dec
sbb
dec
or
dec
les
xchg
xor
cmc
inc
jmp
cltd
dec
out
xchg
dec
mov
lret
or
and
mov
mov
mov
pop
fisttpl
cmc
adc
out
mov
shlb
dec
jmp
jne
in
test
pop
mov
scas
dec
ss
imul
push
hlt
aas
adc
fldl
sub
xor
mov
sarl
stos
mov
mov
out
call
fwait
pop
push
push
xor
xchg
sbb
sub
incb
clc
in
mov
or
aad
loope
aam
imul
inc
inc
sahf
pop
lods
push
jnp
or
adc
das
mov
xchg
stos
sbb
ljmp
add
sbb
xchg
ljmp
sub
xor
push
lock
aas
out
jp
jbe
lret
loopne
cwtl
int3
push
xor
lock
mov
push
xor
stos
or
adc
xchg
and
jp
nop
lea
xor
add
fimuls
xchg
mov
jbe
xchg
fmul
xor
addr16
adc
jg
xor
sub
xor
mov
lahf
xchg
push
in
daa
xorl
xchg
jp
das
test
rcrb
jno
sub
leave
popa
mov
lcall
add
mov
je
mov
insb
mov
int
add
mov
mov
movsb
mov
or
icebp
pop
mov
cmp
outsb
fsubs
mov
int3
repz
jae
push
adc
aas
xor
jecxz
mov
fwait
xor
xchg
mov
pop
xlat
adc
test
test
xchg
or
das
sub
es
sbb
pop
and
in
pop
xchg
mulb
jb
push
enter
xchg
and
add
lods
sub
mov
in
xchg
test
pop
sbb
inc
icebp
negb
jg
jle
sbbl
sbb
iret
test
scas
int3
dec
jb
ds
pop
icebp
popa
jmp
fcmove
jb
jmp
daa
mov
jo
popf
jg
pop
sbb
jnp
jmp
es
mov
dec
dec
mov
cmc
sub
adc
and
add
cwtl
fimuls
mov
jmp
jp
mov
dec
add
dec
dec
aam
adc
inc
in
jmp
mov
or
mov
bnd
insb
mov
or
mov
inc
add
or
jnp
pop
xor
mov
sbb
inc
mov
xor
sbb
ds
dec
je
cmp
mov
mov
jle
jmp
or
dec
les
test
xchg
pop
jecxz
je
ds
fucom
ds
loop
subb
pop
out
cmp
sbb
inc
xchg
mov
cmp
pop
in
rolb
mov
jae
adc
jecxz
scas
pushf
stos
cwtl
pushf
lock
mov
xchg
mov
push
imul
pop
lret
push
or
jns
adc
popf
jns
fadd
xchg
sub
daa
lret
shlb
xor
sti
arpl
imulb
xchg
xchg
daa
xchg
fimuls
stc
xor
lds
in
fdivrs
popa
and
enter
or
out
jge
icebp
cmp
xchg
test
loopne
out
cwtl
mov
outsb
push
push
mov
clc
popf
mov
fstl
sbb
cmpsb
lea
test
gs
jp
imul
xchg
jmp
popa
xchg
ja
inc
cmp
mov
xor
fisubl
push
rorl
xor
jp,pn
adc
shl
filds
movsb
aas
jno
push
movsl
inc
jno
sahf
sub
outsl
dec
jo
adc
inc
in
adc
jnp
pop
jb
fisttps
aaa
fisubrs
push
pusha
lahf
cltd
push
iret
push
enter
dec
jo
iret
loop
lock
xor
in
mov
scas
aad
rcl
mov
test
insb
inc
ret
xor
fwait
nop
sub
dec
mov
ficoml
mov
and
and
push
das
inc
test
shl
or
xor
testb
push
xchg
push
mov
mov
and
stos
jo
testl
shlb
mov
jge
and
mov
jl
roll
popf
aam
inc
mov
roll
inc
stc
leave
testl
mov
add
cmpl
shrl
mov
mov
jnp
mov
lahf
shl
insl
xor
sub
loopne
flds
repnz
mov
nop
sti
or
xchg
gs
cli
inc
mov
lahf
ljmp
iret
mov
pop
jl,pn
test
in
mov
out
mov
enter
lret
shll
cli
adc
sub
outsl
shll
pop
cmp
cmp
loop
push
mov
andb
add
sbb
xchg
mov
mov
push
add
ljmp
outsb
stos
dec
inc
dec
lahf
mov
add
mov
pop
inc
xchg
jo
adc
ret
pop
repnz
lods
push
and
xchg
add
xor
push
dec
fwait
lods
mov
push
subb
dec
test
sar
or
xor
mov
sub
pop
loope
inc
add
pop
cmp
int
addl
jmp
or
adc
pop
leave
out
ret
pop
mov
mov
cmp
sub
fsub
lea
push
jnp
sbb
les
mov
xlat
dec
jl
or
fmull
pop
add
mov
rorl
lods
push
cltd
hlt
and
dec
cmc
pusha
dec
ss
std
xchg
popa
pushf
int
lds
add
xchg
jnp
cs
cld
adc
test
addr16
shll
pop
inc
idivb
sbb
push
je
xchg
mov
movsl
jns
mov
sbb
call
mov
sbbl
push
arpl
jg
push
hlt
loope
xchg
outsb
out
fstpl
lcall
dec
cmpsb
jl
xor
pusha
ds
inc
clc
push
mov
or
imul
pop
xchg
fwait
mov
fidivs
mov
inc
in
ret
dec
add
sbb
xor
mov
lods
sbb
add
imul
xchg
fisubrs
xor
adc
ret
mov
add
xchg
std
jnp
sub
push
hlt
jmp
lds
or
faddl
cmpsb
sub
pop
mov
ret
es
jle
leave
sub
fsubrl
add
imul
ja
hlt
fwait
cltd
cmpsb
inc
int3
movsl
divl
adc
jecxz
dec
mov
movsl
fldl
pop
lods
movsb
in
bound
leave
fmull
add
cmp
out
daa
add
xor
test
je
in
sbbl
sbb
popa
add
adc
mov
mov
fs
out
leave
in
shl
mov
mov
fsubrs
pushf
iret
adc
xchg
and
lcall
sti
mov
mov
lahf
xchg
cmp
shrb
add
cltd
cmp
and
hlt
loop
dec
lahf
jmp
lahf
stos
lahf
test
mov
sbb
dec
sub
mov
das
jmp
fucompp
push
cmp
xchg
pop
test
cltd
xchg
aad
jns
cmp
cmpsl
call
call
lods
xor
icebp
sub
fidivs
nop
mov
xor
ss
sahf
mov
add
decl
push
and
pop
cmp
xlat
sub
jl
aam
aaa
pop
or
in
negb
mov
das
mov
mov
out
pop
cwtl
or
mov
sub
pop
add
xchg
mov
je
mov
cwtl
popf
imul
stos
xchg
or
and
fsubrl
adc
mov
shl
das
movsb
sub
int3
cmp
push
shrl
xchg
xchg
mov
inc
inc
hlt
dec
out
push
sbb
pop
int
das
mov
push
xchg
movsl
push
in
pop
daa
nop
jo
sbb
leave
lods
clc
dec
xchg
shlb
fs
adcl
jp
adc
mov
aam
std
fisubrs
mov
mov
je
es
outsb
movsb
xchg
insb
jmp
xchg
out
and
hlt
sbb
rorl
hlt
adc
cmp
hlt
adc
loop
sub
imul
in
in
pop
imul
movb
xchg
lock
xchg
or
mov
cmp
movsl
jge
mov
pop
push
mov
mov
clc
push
add
adc
call
mov
lea
jl
pushf
mov
cld
scas
sub
rorb
std
push
cmp
es
xchg
lret
and
jmp
or
insb
push
inc
mov
mov
and
xchg
cmp
cmp
daa
sub
decl
mov
jae
pop
adcw
ja
pop
scas
scas
int3
jb
xchg
mov
jl
pop
scas
fwait
xchg
xchg
dec
inc
shrl
loopne
in
or
js
and
ret
iret
je
adc
pusha
outsb
xchg
loop
cltd
cld
sarb
shll
cmpsb
inc
mov
or
lds
movsl
nop
dec
pop
mov
and
test
add
int
sub
and
cmc
shlb
pop
cmp
loopne
inc
cmp
sti
mov
in
imul
jge
fistps
sti
jp
cs
test
or
data16
sti
fmuls
cld
pop
out
jge
ds
fwait
in
mov
js
dec
push
sbb
push
pop
aas
sub
movsb
orb
and
fwait
sti
mov
push
dec
push
and
pop
inc
in
sub
lret
call
cmp
leave
jl
pop
cmp
ljmp
cmp
insl
or
cld
mov
sbb
push
scas
test
insb
scas
jo
fs
fsub
je
outsl
push
push
jb
adc
dec
sti
into
xchg
icebp
jmp
xchg
sbb
cmp
inc
outsb
push
xchg
mov
fwait
pushf
ds
pop
inc
aas
add
jo
adc
jnp
mov
scas
mov
add
stos
xor
rclb
or
sub
push
daa
add
mov
mov
cmp
lcall
jmp
cwtl
pop
add
mov
and
jecxz
pop
int
inc
push
mov
xchg
push
inc
xchg
int3
outsb
sub
je
ds
in
js
jb
inc
dec
cmpsl
inc
aaa
js
sub
push
add
mov
sbb
fadds
push
xlat
adc
dec
cmc
pinsrw
test
adc
mov
and
cwtl
xchg
ljmp
fisubrl
jge
outsb
xchg
popa
and
clc
mov
sub
lahf
outsb
cli
rorb
dec
loop
fisubrl
lea
ljmp
lock
into
jns
addr16
or
andb
xor
sbb
iret
lcall
in
popa
dec
stos
xchg
sub
movsl
add
push
push
stos
push
sub
in
add
push
into
loop
lahf
jecxz
mov
xchg
stos
add
add
jg
adc
fnstcw
sahf
mov
pop
add
mov
jo
xchg
and
adc
rol
pop
xchg
or
stc
push
push
dec
jmp
fdivl
mov
rcrb
aas
inc
out
mov
sahf
sbb
mov
rcrb
lret
out
test
mov
andl
mov
fnsave
mov
mov
cmp
popa
mov
add
mov
mov
push
rcll
push
outsl
testb
add
hlt
adc
add
mov
pop
dec
pop
add
xchg
jne
jns
out
test
lcall
or
ret
xchg
sub
test
sbb
lods
sbb
aam
out
or
mov
int3
xchg
sub
rep
outsb
in
pop
in
add
pop
dec
fnstcw
sbb
xor
divb
mov
dec
jmp
pop
xor
call
popl
mov
aad
mov
mov
in
jmp
mov
pop
xchg
fs
leave
adc
push
mov
stos
insl
mov
mov
out
popa
sub
inc
lods
in
push
push
cmp
or
cltd
mov
sbb
out
stos
dec
imul
cli
cltd
pop
into
adc
push
std
repz
das
inc
mov
push
fwait
mov
je
jmp
sub
popf
cld
pop
add
mov
cld
jle
jecxz
or
daa
adc
jbe
jne
or
mov
or
sub
mov
jne
cmp
jg
imul
cmpsl
lea
int3
icebp
adc
or
leave
sub
cmp
cli
jmp
pop
outsl
mov
mov
mov
fidivl
fistl
out
sub
fbld
shl
jmp
aam
or
pop
roll
xchg
cmpsb
pop
sahf
sahf
icebp
xor
lock
in
mov
enter
sbb
hlt
cmc
dec
or
lods
movsl
push
int3
pop
aad
xor
lods
jno
testb
ljmp
xlat
jne
adc
dec
push
fadd
cmp
mov
add
cmovge
cmc
cmp
jecxz
ljmp
lods
ljmp
jb
mov
jg
jg
mov
sbb
pop
xor
push
push
adc
sbb
xchg
push
and
mov
notl
ret
leave
xor
sbb
dec
popf
push
mov
sub
push
lcall
push
stos
jnp
sbb
sbb
or
adc
cmp
repnz
and
jg
or
push
pop
and
sbb
pop
scas
scas
xchg
notb
out
add
daa
add
xchg
popl
mov
pop
fimull
xlat
fiadds
cmpsb
pop
movsb
es
outsl
std
and
aas
jbe
or
jecxz
sub
iret
fidivs
rorl
loope
pop
sub
sti
or
js
insl
insl
adc
xor
test
arpl
mov
int3
cmpsb
dec
lret
enter
dec
sar
call
mov
lret
les
xor
lods
cmc
and
dec
adc
fcmovu
adc
cmp
xchg
inc
add
sbb
or
aaa
or
sub
pop
enter
fcmove
cmp
es
pusha
movsl
outsb
sbb
mov
or
jae
movsl
sbb
leave
ja
and
lret
int
mov
dec
push
jno
mov
pop
pop
pop
aas
inc
bswap
insb
xchg
add
pushf
in
push
push
nop
jge
inc
lcall
fidivrl
cld
xchg
add
xchg
sbbb
cld
shr
iret
adc
or
fidivl
push
shl
adc
out
dec
ljmp
shll
aad
enter
and
ja
sti
cmpsb
push
sti
dec
jb
je
hlt
xchg
mov
out
in
mov
dec
mov
xor
push
jecxz
bound
jmp
add
std
dec
mov
pop
stos
pop
mov
mov
lcall
imul
pop
mov
int
js
push
icebp
mov
pop
xchg
pusha
mov
mov
mov
subb
mov
mov
xchg
lret
repz
std
cmp
ds
jge
dec
scas
dec
add
jecxz
pop
adc
jns
mov
pop
push
lcall
mov
lret
or
aad
pop
shr
outsb
inc
insl
div
push
and
pop
popa
xchg
mov
jecxz
ret
xchg
dec
sub
mov
pop
inc
psubusb
inc
je
sbb
lret
imul
stos
rclb
mov
jns
jg
jge
cld
inc
sub
cmp
popa
ret
loop
dec
jbe
mov
cmp
gs
addr16
pushf
loopne
mov
adc
std
cld
xchg
push
sbb
cld
push
mov
and
outsb
pop
jmp
push
cmc
mov
dec
mov
ss
lahf
sub
cwtl
pop
fdivrs
in
enter
sub
cmp
nop
lods
pop
mov
gs
sub
fsubr
dec
hlt
mov
and
sbb
mov
ret
fists
xchg
std
sbb
mov
add
xchg
pop
xlat
inc
shl
inc
fs
xlat
rorb
jne
jns
cli
je
mov
test
inc
jne
or
lcall
sub
mov
dec
cmpsb
fidivrs
cwtl
call
hlt
int3
mov
sub
xlat
mov
bound
adc
pop
inc
psadbw
pop
int
inc
rcrl
dec
inc
or
mov
jns
out
negb
mov
add
cmc
xchg
jne
xchg
or
das
rcrb
jge
jle
and
sub
js
adc
test
popf
jl
xchg
push
jl
xchg
xchg
imul
loope
dec
popa
xchg
ds
sbb
fnstcw
cld
cltd
shl
addb
scas
jp
xor
lar
in
lret
mov
lea
scas
mov
inc
xor
insl
xchg
or
push
in
xchg
mov
int
test
movsb
inc
fistpl
lods
cmp
jns
pop
int
cwtl
cmpsl
cld
pop
popf
cmp
sti
stos
repnz
sbb
aam
cli
mov
pop
jns
shr
je,pn
push
fcomps
push
hlt
mov
adc
push
lahf
and
in
xchg
or
dec
ljmp
sub
nop
pop
mov
es
xor
test
mov
pop
mov
sub
xor
adc
sub
mov
push
inc
push
inc
shrl
sub
lret
call
dec
mov
mov
pop
push
xchg
cmc
mov
pop
mov
stos
xchg
ds
aad
lahf
sarb
ret
and
xchg
cmp
and
outsl
fisubrs
mov
js
jne
fs
jmp
mov
cmpsl
jns
sub
fists
pop
icebp
dec
imul
add
xor
arpl
mov
mov
adcb
movsb
mov
loope
adc
lret
or
jle
sub
xchg
add
lret
lds
and
fs
imul
inc
into
in
out
repnz
inc
and
xor
scas
mov
inc
mov
std
sub
xor
ljmp
cmp
pop
ds
xor
mov
out
add
out
cli
mov
dec
lea
dec
push
test
aas
mov
adc
push
or
jmp
or
sbb
and
fstps
mov
mov
stos
scas
pushf
inc
jae
addl
xlat
ficompl
scas
repnz
sbb
lods
cmp
jnp
jo
fs
dec
aas
jge
pushf
jae
pusha
jns
push
xchg
scas
movsb
into
js
xor
out
pop
jge
out
lods
mov
xchg
push
add
stc
dec
subb
test
sub
fldcw
mov
movsb
jbe
adc
in
cmpsl
inc
sahf
andl
ljmp
cmpsb
sbb
xchg
pop
cmp
inc
aaa
das
inc
adc
lret
loop
rorl
aam
cwtl
enter
dec
jne
sbb
fsubr
ja
cli
push
shl
leave
push
fmuls
cld
jle
mov
cltd
mov
repz
lods
pusha
jae
xor
pop
add
leave
cmp
aad
sub
aaa
out
lods
std
pusha
add
js
jnp
outsl
adc
jg
jecxz
add
in
inc
xchg
and
and
mov
sub
insb
dec
mov
cwtl
mov
jl
ret
nop
sbb
cld
xor
popf
push
mov
or
lods
popf
iret
cmp
sbb
jle
and
movsb
cmp
adc
mov
mov
arpl
dec
xorl
pop
push
mov
jbe
pop
add
inc
das
fdivrs
test
pop
and
std
pop
into
jns
fildll
imul
aas
xchg
jne
inc
jp
roll
std
add
loope
lcall
fs
ljmp
arpl
fildll
out
aam
pop
cmp
and
stos
jae
push
pushf
pop
push
jns
gs
mov
lock
pop
sub
cmovns
sarb
enter
stc
jle
das
mov
bound
cs
sbb
test
movsb
loopne
dec
xorb
jno
mov
or
ficoms
inc
push
and
or
mov
pop
adc
sarb
mov
enter
cmp
dec
dec
stos
cld
adc
in
mov
fisttps
repnz
jg
push
lcall
sbb
cmp
jmp
inc
in
jmp
xor
mov
dec
push
add
sbb
decb
nop
pop
imul
inc
cmp
lods
cmpsb
iret
jg
lods
loopne
xor
loopne
cld
lock
mov
or
mov
pop
lcall
push
lret
xor
adc
xchg
je
daa
adcb
push
mov
movsl
and
sub
bound
loopne
push
jecxz
out
ret
scas
push
repnz
jbe
sub
out
xchg
xlat
pop
pop
loope
icebp
pop
dec
cmp
xchg
xor
push
mov
fwait
rcl
inc
xor
adc
rorl
add
fadd
jnp
and
push
xchg
xor
cmp
pop
iret
in
mov
bound
sbb
sbb
and
add
shl
imull
data16
in
stc
aas
imul
mov
pop
xchg
rep
aas
lret
stos
mov
shrl
fprem
xchg
mov
imul
aad
out
loop
cmc
add
clc
scas
mov
jno
xchg
jnp
repnz
inc
mov
push
push
scas
pop
xchg
pop
out
rorb
push
mov
scas
rcll
aam
or
adc
subb
lret
lcall
dec
adc
and
push
push
xchg
cmpsl
nop
into
out
ja
mov
in
adc
and
jecxz
insl
or
stos
adc
dec
repz
roll
mov
nop
xchg
or
out
daa
shll
cli
aas
sbb
mov
pop
lods
in
or
xchg
mov
aam
xchg
inc
aaa
pop
mov
and
std
xor
enter
mov
cld
or
aaa
enter
ret
sbb
out
sub
andl
inc
insb
fistl
loopne
fidivrs
cmp
cmpb
loop
addr16
add
mov
bswap
xor
push
sub
mov
dec
cld
mov
cmp
adc
ret
cmpsl
mov
mov
icebp
pop
loopne
mov
cld
leave
scas
icebp
push
lock
cwtl
sub
out
outsl
push
xchg
stos
sub
rol
xor
je
mov
push
out
sub
fnstenv
mov
jmp
inc
fs
cwtl
in
lds
or
iret
mov
test
xchg
arpl
int3
out
ds
ljmp
mov
stos
cmp
inc
in
fcompl
push
sub
cmpsl
mov
lds
loope
sti
fnstenv
pop
cmp
adc
into
scas
mov
sub
aam
inc
mov
fdivp
repz
xchg
jge
arpl
bound
adc
lods
ret
test
stos
rcrb
int
mov
movsb
test
xor
cmp
rclb
subb
lods
je
cmp
mov
xor
jne
int3
int
inc
ljmp
sbb
xchg
rcl
pusha
pop
cmp
fs
xlat
outsb
das
pop
stc
loop
pop
pop
pop
testb
fidivl
jb
insl
xchg
jns
aas
into
sub
jne
fbld
out
or
movsl
scas
dec
pop
or
ret
and
xor
out
xlat
fdivrl
lcall
nop
jo
les
pop
cli
inc
lea
sbb
xchg
adc
jb
push
js
lds
pop
paddb
mov
sub
xlat
add
inc
push
call
mov
jecxz
and
jo
scas
xor
ficomps
fistps
mov
dec
sub
and
xchg
fldl
xor
inc
inc
mov
jo
or
push
fcmovne
mov
mov
add
rdmsr
pusha
cmp
js
sbb
mov
inc
xlat
fstps
fnstsw
mov
fwait
sti
cmp
cwtl
pop
loope
fisubs
pop
inc
cmc
jecxz
xchg
dec
movsl
jcxz
cmp
sbb
lods
cs
pop
inc
sub
aaa
lods
mov
fldenv
jns
ret
out
cmp
je
insb
xchg
mov
add
sub
push
fisttps
cltd
lret
add
in
mov
push
add
enter
pop
das
loop
xor
xchg
jae
repnz
dec
jne
xlat
in
inc
hlt
outsl
inc
pusha
test
mov
inc
mov
and
lds
arpl
jl
xor
jnp
xchg
dec
fldcw
into
cs
cmpsb
int
test
jns
stc
sti
and
aaa
push
jo
dec
ficomps
sub
and
ret
cltd
fnstsw
or
push
xchg
nop
or
fcmovne
gs
jmp
out
ss
jbe
cs
dec
icebp
sub
das
pop
xchg
pop
push
sbb
sbb
fstps
pop
push
rclb
xchg
mov
int
orb
pop
lea
pusha
lods
push
test
out
push
or
adc
xor
movsb
xchg
daa
xor
pmulhw
push
xor
jle
shrb
outsl
inc
dec
out
aad
daa
cmp
push
rolb
push
das
insl
in
adc
jbe
inc
out
mov
push
iret
in
inc
jp
xchg
pop
out
out
test
insb
inc
mov
arpl
imul
addb
in
test
imul
jo
push
jecxz
lods
es
sbb
xlat
push
outsl
push
or
inc
call
adc
rcll
int3
js
test
sub
inc
in
popf
xor
pop
faddl
insl
mov
sub
test
js
push
mov
in
xor
xchg
mov
add
jmp
movsb
mov
and
push
mov
popf
sbb
and
in
mov
jo
mov
inc
outsl
push
mov
aad
insl
sarl
push
enter
jmp
pop
xor
cwtl
add
repz
add
cltd
xchg
sub
lahf
fnstenv
xchg
pop
or
push
jp
push
jns
add
repz
lcall
lea
push
test
out
cli
lds
jmp
jle
push
dec
adc
mov
cmp
mov
mov
gs
mov
mov
mov
pop
fists
sub
mov
jmp
cltd
push
sbb
fidivl
xchg
nop
cltd
icebp
xchg
xchg
into
scas
js
movb
rclb
mov
fstpt
xchg
test
sbb
lds
xor
add
jo
lret
fwait
push
ja
mov
xor
inc
and
movsb
sbb
jno
sub
mov
cld
sub
addr16
cmc
mov
lahf
ficompl
aad
mov
pop
cmp
int
pop
adc
cld
loope
mov
dec
test
in
clc
test
push
loopne
jp
dec
jbe
push
cmp
pop
lret
mov
fsubl
add
clc
xor
push
add
in
dec
xchg
lods
shl
mov
jge
stos
lcall
rorb
inc
push
adc
jl
xchg
xlat
sub
pushf
pop
mov
ds
leave
pop
mov
xor
pop
js
mov
sub
int3
xchg
and
adcl
jp
fmull
xchg
inc
jecxz
mov
sbb
cltd
add
mov
jmp
push
daa
mov
mov
jmp
icebp
sub
mov
push
and
sub
dec
dec
mov
xchg
je
or
sarb
inc
mov
iret
ficoml
jp
imul
xchg
mov
popf
sub
mov
mov
ss
js
movsb
push
jg
call
inc
sahf
dec
lcall
dec
aam
and
shl
popa
and
xchg
or
add
pop
lods
add
jg
inc
xor
loopne
aas
push
mov
cmp
jg
mov
insl
mov
movsb
sub
xor
pop
nop
ror
adc
xchg
sub
cmpsl
jmp
pushf
aaa
inc
xchg
sti
aas
push
xor
clc
hlt
arpl
loop
jle
clc
js
roll
sbb
cmp
scas
cmp
addl
or
es
push
lds
call
clts
jo
es
fildll
mov
ficoms
push
loop
fs
fsub
call
and
xchg
mov
pop
pop
jo
fildll
xor
shrb
adc
cmpw
jbe
cmpsl
pop
jp
cltd
test
lcall
out
lahf
enter
pushf
call
mov
xor
cmp
add
or
sbb
sbb
inc
das
jmp
orl
push
adc
popf
push
xor
mov
repnz
or
cmp
pop
or
ja
inc
popf
dec
push
mov
movsl
loopne
outsb
jnp
outsb
and
mov
cmpsb
xchg
fistps
sbb
cmp
dec
lahf
jmp
push
mov
stos
dec
dec
hlt
inc
and
repnz
rorl
xchg
add
mov
pop
jnp
outsl
add
mov
mov
pop
iret
sub
sub
popa
loop
pop
and
fidivrl
dec
insb
insl
xor
push
sub
mov
mul
xchg
sbb
adcb
pusha
ret
pop
lods
imul
push
mov
inc
jns
fs
cmp
std
jle
dec
xchg
cwtl
mov
sub
fbld
mov
lcall
fisubrl
fwait
jae
pop
push
sub
out
dec
prefetch
cmpsl
fsubrp
push
idiv
xchg
lcall
inc
and
lods
sbb
shlb
or
movsl
aam
cmp
push
adc
dec
lahf
lcall
push
add
cmpsb
addl
shlb
pop
pop
push
or
adc
lods
sbb
fidivrl
push
roll
call
sub
add
leave
sbb
ffree
repz
push
xlat
in
inc
imulb
mov
lahf
mov
sub
xchg
ljmp
push
scas
in
dec
ja
pop
lock
loopne
lods
sahf
in
loop
repnz
out
pop
or
ds
dec
dec
dec
cld
jnp
daa
sub
mov
adc
mov
and
inc
xor
push
mov
das
add
inc
push
pusha
test
lods
mov
aaa
sbb
andl
mov
insb
jno
shlb
push
or
adc
inc
fisubrs
popa
mov
push
or
jo
clc
jb
in
lods
fwait
or
lea
popa
movsb
aam
jae
repz
sbb
ljmp
xchg
sbb
in
adc
testb
sub
add
je
test
lds
pop
call
aam
outsb
adc
xlat
and
scas
stos
fldl
inc
mov
jmp
call
testl
fldl
mov
jns
dec
mov
and
or
or
xchg
outsl
sbb
pop
pop
dec
inc
mov
bnd
ja
mov
gs
xor
divb
push
pop
mov
lock
add
inc
sbb
stos
in
cmp
daa
cmc
fdivs
iret
adc
xchg
or
test
fsubrl
imul
add
push
mov
in
aad
insb
mov
insb
pop
pop
inc
pop
jl
push
stos
mull
sub
sbb
popf
and
js
push
push
pushf
shrl
ja
xor
shr
cs
add
adc
aaa
stc
inc
mov
sti
push
test
or
inc
xor
sti
aam
cs
mov
in
jno
daa
or
dec
push
add
inc
rorl
in
lea
add
mov
add
sub
dec
arpl
fcompl
das
aaa
out
aas
dec
test
jge
mov
out
mov
cs
fucomi
mov
sbb
cmpsl
ret
int3
ja
xor
not
dec
cmpsl
mov
adc
fdivrl
sub
add
mov
pop
in
mov
sub
add
ljmp
xchg
out
aam
or
adc
adc
inc
pop
pop
je
imul
add
dec
push
mov
pushf
das
testb
add
pop
cltd
cmp
and
sbb
cld
cmp
arpl
add
fs
dec
xchg
fcomi
ret
insl
test
mov
shrl
jne
out
rcll
incb
xchg
add
xchg
clc
push
cmp
pusha
lret
inc
xor
icebp
adcl
pop
adc
jmp
repz
ja
repz
lock
aas
cmpb
sahf
cmp
mov
shl
mov
fwait
jp
sub
xlat
cmpsl
addb
inc
dec
mov
repnz
jmpw
shrb
cmp
nop
cmp
aaa
repz
ja
call
dec
add
add
lret
xor
sub
lock
stc
loope
or
ja
ljmp
rcl
mov
pop
sbb
inc
mov
and
mov
test
adc
add
pop
mov
sbb
movsb
arpl
cld
mov
cmpsb
mov
cmp
and
jp
push
iret
jg
lret
insl
aam
or
or
mov
lods
xchg
add
daa
shrb
orl
cltd
mov
and
hlt
and
inc
add
je
sbb
ret
xor
es
movsb
pop
mov
mov
test
cmpsb
or
mov
bound
data16
pop
and
add
out
mov
aas
ljmp
inc
loopne
dec
js
pop
addr16
testl
and
sub
cmpl
mov
les
mov
mov
jmp
cmp
mov
dec
sbb
and
xlat
cmpsl
pop
scas
xor
hlt
push
sub
out
out
mov
push
sub
mov
push
inc
mov
and
data16
int3
adc
jl
jmp
pop
sbb
mov
jne
cmpsl
mov
fwait
imul
scas
scas
data16
push
or
sbb
shrb
fwait
mov
cmp
push
dec
shl
jmp
mov
movb
testl
cmp
imul
inc
jle
movsb
inc
sahf
inc
or
scas
cmp
mov
sub
mov
int3
and
mov
ds
xor
repnz
dec
jo
xchg
cmp
shlb
into
cmp
jb
lds
stos
aad
push
test
xchg
jb
seta
cmp
jno
dec
xor
xchg
scas
jl
or
sahf
movsb
lds
mov
fimull
pusha
loop
push
mov
fcoml
outsb
shr
add
test
repnz
xor
or
or
loopne
push
and
les
mov
jg
or
mov
mov
pushf
addl
push
outsl
push
arpl
not
push
add
movb
pop
xchg
xchg
imul
add
add
mov
or
ss
and
loope
jg
pop
xor
push
dec
push
or
xlat
ds
iret
mov
xor
cmp
pop
sbb
add
xor
sbb
jg
dec
insb
addb
xchg
mov
jb
cmpl
adc
xchg
or
dec
dec
popa
sub
cmp
add
rolb
aas
fadds
inc
mov
testl
mov
aam
imul
mov
xor
xor
mov
jle
test
xchg
repz
pop
dec
cmp
test
pop
jno
lahf
movsb
mov
loopne
xchg
sub
mov
adc
rorb
fldcw
xchg
int
sbb
add
mov
sbb
iret
cmp
dec
and
or
adc
push
mov
lcall
std
xor
push
push
cmp
inc
sbb
lock
into
out
push
pop
loope
shl
inc
jmp
pop
jo
data16
mov
dec
movsb
insl
push
rcr
push
sbb
cwtl
sti
out
mov
shlb
loope
adcb
xor
push
mov
punpcklwd
leave
adc
cmpsl
lret
xchg
xchg
xorl
mov
leave
jnp
fld
push
and
inc
xor
mov
cli
mov
movsb
sbb
push
lock
test
cmpsb
loop
sub
inc
fmul
add
ficoms
pushf
xorb
add
xchg
dec
mov
xor
xor
inc
aas
fucomip
cld
and
xchg
aas
shrb
imul
fs
ja
out
test
pop
in
push
rcr
mov
pusha
fidivs
mov
cmpsb
xor
ficompl
push
mov
pop
popf
push
sub
repnz
inc
inc
arpl
sahf
push
cmc
mov
and
bound
pop
daa
sahf
adc
inc
push
data16
ds
mov
cltd
insb
adc
mov
loope
addr16
divb
hlt
xchg
out
and
repz
pusha
adc
movsl
stos
add
hlt
icebp
dec
mov
push
pop
lahf
adcb
mov
push
clc
decb
pushf
cmp
out
jl
jbe
rolb
xchg
aad
ljmp
adc
inc
mov
mov
inc
les
cmpsb
pop
lods
push
leave
sbb
test
movsb
test
push
fcoml
fidivrl
loop
dec
xchg
imul
sbb
mov
insb
test
filds
or
push
inc
xchg
inc
push
pop
in
or
cmc
mov
pop
xchg
add
xchg
sub
imul
fs
cmp
je
pop
push
pop
cmp
jns
inc
mov
xchg
sub
out
mov
push
sub
popf
pop
inc
push
movsw
jnp
iret
sub
test
dec
xorb
jnp
in
push
jne
adc
int
and
cmp
push
push
sub
data16
in
adc
push
inc
xor
push
outsb
and
flds
imul
fs
pop
mov
repz
fucomi
insl
hlt
jmp
push
and
lods
push
dec
and
mov
aad
mov
mov
adc
out
mov
cmp
pop
push
aam
or
dec
in
dec
inc
arpl
mov
add
cmpsl
sub
shlb
popf
xchg
bound
sub
xchg
out
sub
xchg
xor
pop
inc
int3
loope
mov
in
stc
icebp
inc
lods
in
xor
test
pop
pushf
push
or
frstor
call
cmpsb
adc
movsl
daa
jg
jmp
stc
mov
dec
push
push
bound
pusha
adc
inc
xchg
pause
scas
dec
mov
fistps
mov
jl
and
lods
outsl
xchg
pop
scas
aad
orl
clc
ret
gs
lret
je
dec
rolb
or
fwait
jnp
pop
imul
xchg
sbb
test
inc
popf
cmp
cmp
push
cmp
mov
push
push
stos
repz
dec
mov
jb
push
xor
cmpsb
scas
push
pop
dec
mov
addr16
or
and
cmpsl
pop
and
dec
stos
mov
outsl
clc
add
fistpll
add
pop
mov
add
xor
fldt
mov
adc
into
leave
rcll
iret
cmpsl
push
cltd
push
adc
push
cmpsl
pop
lods
jge
dec
mov
push
xchg
sub
xchg
push
xor
jae
int
gs
out
shr
sbb
repz
xchg
mov
sub
sbb
mulb
pop
mov
dec
subl
icebp
xchg
jbe
sub
sbb
in
repz
xor
sbb
xor
fdivrp
imulb
mov
sbb
cltd
mov
addl
adc
cmpsl
or
sahf
jnp
lcall
adc
dec
mov
push
adc
push
lahf
jno
sbb
std
test
jecxz
mov
aam
and
and
or
imul
loope
addr16
subb
pop
mov
push
iret
adc
orb
orl
dec
sub
fwait
jae
call
cmp
cmc
lods
dec
loopne
sub
mov
inc
dec
mov
icebp
mov
jmp
xchg
or
mov
sahf
mov
and
sbb
cmp
cmp
mov
dec
pop
aam
jmp
pushf
mov
push
out
cmp
mov
jnp
cld
cmp
jecxz
inc
mov
mov
mov
rcr
lcall
mov
pop
jb
jge
adc
sub
dec
push
mov
xchg
fbld
mov
gs
dec
xor
nop
cmp
loopne
adc
lret
enter
cmpsl
push
hlt
fldt
mov
incl
add
dec
dec
into
mov
push
int3
faddl
int
cmp
jle
pop
movsb
rol
jnp
out
jg
rolb
xor
mov
push
ret
adc
out
cmpsb
mov
bt
jmp
push
push
jmp
xor
repnz
aad
xor
or
xor
sbb
dec
cwtl
push
sbb
lahf
js
push
jp
sarb
sub
push
sbb
mov
pop
adc
xor
push
int
sbb
sbb
in
jb
xchg
daa
sbb
les
imul
and
call
jne
movsl
inc
ret
scas
gs
ret
das
ds
mov
cmp
stc
mov
call
jns
push
jg
insb
add
xchg
imul
adc
lea
mov
mov
xchg
inc
jo
sub
stc
gs
add
and
pop
stc
mov
out
cld
out
mov
jp
mov
cmp
mov
std
cmp
aam
loopne
movsl
inc
dec
and
mov
lahf
mov
xchg
add
push
fisubrs
pop
cli
mov
rol
sbb
dec
and
rcll
cld
enter
mov
push
pop
ficoml
dec
call
andl
mov
jecxz
aaa
jle
or
hlt
pop
out
lea
pop
cli
push
popa
andb
or
dec
stos
lods
sbb
add
mov
jmp
stos
pusha
sahf
jp
pop
xchg
test
jg
jne
jmp
push
cmc
push
xlat
cmpsl
cmp
dec
cmpsb
xlat
cmp
inc
add
mov
sub
out
mov
xchg
repz
mov
sti
adc
iret
mov
test
push
mov
rcll
mov
mov
xor
sbb
pop
jecxz
rorl
data16
fidivrs
xchg
fcmovnbe
fisttps
xchg
xchg
adc
sub
push
sbb
add
je
fnstcw
call
sbb
mov
popa
popf
lret
adc
sahf
in
fidivl
mov
loopne
popa
sbb
pop
outsb
scas
cwtl
or
mov
ljmp
xor
pusha
xchg
lcall
jmp
clc
xchg
imull
xchg
mov
sbb
sbb
out
inc
aaa
xlat
or
fimull
dec
jns
jecxz
loope
xchg
arpl
mov
sti
jbe
lcall
jecxz
adc
daa
inc
adc
and
pop
jns
jne,pt
xor
push
xchg
add
pop
insb
inc
add
add
mov
aaa
in
fmulp
stos
jbe
enter
ds
and
fwait
ds
lods
je
lret
fimuls
xlat
push
data16
mov
loop
out
faddl
sub
mov
mov
movsl
data16
fsubs
outsb
in
dec
xchg
ss
je
cmpsl
addb
ret
cmp
test
pop
fisttpl
fisttpll
jno
insl
hlt
notl
aas
out
in
lock
pop
or
int3
imul
fldcw
nop
adc
fs
scas
push
fcoms
sbb
sub
jne
je
js
xchg
dec
push
cmp
loopne
bound
xor
xor
mov
adcb
inc
xor
rcr
cmp
aam
stos
and
ret
mov
jnp
push
sbb
mov
jmp
jl
push
dec
or
pop
shl
xor
push
ljmp
lock
lea
xchg
loop
ljmp
push
inc
aam
lds
loop
loope
outsl
insl
insb
mov
adc
pop
sbb
push
push
inc
adc
rolb
xchg
cmp
sub
mov
lcall
lods
jns
dec
loop
adc
pop
cmp
data16
push
andnps
out
inc
stos
pop
fwait
jo
mov
into
test
push
popf
jle
push
pop
and
mov
adc
mov
sub
jns
jmp
jecxz
imul
jne
add
mov
repz
jmp
fsubrl
push
shrb
pop
push
addr16
mov
rdtsc
mov
outsl
arpl
lret
testl
pop
ret
cmp
out
or
bound
clc
xchg
mov
cs
push
in
and
iret
jg
xor
xor
xchg
jle
hlt
test
dec
xor
out
push
fildll
shll
fisubrl
xchg
xor
shlb
lods
cmpb
ja
cltd
sti
sbb
xor
push
addr16
dec
ret
push
test
std
subb
jecxz
aas
pop
xor
adc
mov
inc
gs
sbb
clc
sub
xor
and
out
inc
xchg
scas
add
stc
sbb
xchg
in
pop
push
in
rclb
fcoml
add
roll
gs
cmp
adc
or
and
aad
stos
mov
les
fimuls
addr16
daa
mov
mov
jns
outsl
nop
mov
xor
movsb
adc
popa
xchg
add
test
shll
mov
dec
sub
aam
gs
ljmp
mov
ja
cmp
inc
xchg
pop
add
cmp
xchg
mov
jns
insl
push
das
inc
jb
bound
aaa
dec
jmp
sbb
pop
inc
ljmp
pop
in
cmp
mov
or
sub
jbe
pop
je
pop
sbb
int
fs
jl
sarl
cmp
scas
sub
mov
pop
adc
lods
push
dec
push
xchg
sbbl
add
adc
aad
imul
sbb
test
or
ret
xor
sbb
fmuls
push
mov
filds
push
dec
cmp
and
add
lods
scas
pushf
es
mov
mov
fbld
add
inc
clc
inc
ret
mov
dec
or
mov
sub
mov
sbb
xchg
jbe
xor
xchg
mov
ror
sub
nop
push
lcall
pop
imul
jle
shll
lods
lret
testb
movsl
sbbl
loop
inc
bound
push
movsb
aaa
xchg
scas
fmull
push
inc
rorb
frstpm(287
adc
jecxz
xlat
les
jbe
popa
enter
rcrl
mov
dec
inc
mov
jae
inc
pop
xor
xor
cmp
mov
dec
pop
lds
push
movsb
rcrb
popf
sub
pop
icebp
std
fsubs
enter
xchg
jns
or
addr16
jno
adc
add
mov
in
lods
xchg
jge
out
icebp
add
jl
fmul
movsb
fiaddl
call
cld
jle
jbe
xor
xchg
jecxz
fwait
inc
out
sbb
scas
imul
popf
push
pop
push
xor
dec
and
adc
stc
sub
jg
fsubr
push
cmp
rcrl
or
jb
jge
xchg
or
notl
mov
in
icebp
cwtl
xchg
dec
ljmp
cmpsb
daa
mov
shrl
and
cltd
xor
andl
test
and
sub
inc
xor
hlt
das
mov
fidivrl
jns
jns
mov
mov
and
mov
pop
call
sub
push
notb
inc
insb
mov
lret
repnz
mov
jno
sbb
adc
and
int
rcll
pop
push
test
push
pop
push
rolb
mov
inc
rcl
test
xor
mov
xor
xchg
dec
fisubrl
outsl
lcall
cli
pop
dec
fists
in
cmp
cld
xor
int3
inc
mov
jne
adc
out
int
jge
or
ret
imul
sub
gs
mov
lahf
out
arpl
and
rcll
jge
or
inc
fmul
jp
stos
movsb
pop
adc
in
addb
movsl
mov
lret
std
mov
sti
push
mov
push
cwtl
cltd
movsl
addl
les
lods
aam
mov
aaa
mov
cwtl
daa
inc
in
sub
add
lods
mov
insl
mov
lret
adc
mov
xchg
lahf
sbb
loope
std
jecxz
in
sbb
into
ds
xchg
rcl
cmp
dec
out
aaa
and
lcall
aas
das
push
sbb
jno
mov
mov
test
mov
sub
cli
imul
inc
xorb
arpl
std
dec
push
das
andl
stos
les
mov
xor
and
into
inc
movsl
cmp
rcll
addr16
or
dec
dec
js
jl
rcrb
into
out
jno
out
mov
mov
pushf
xlat
and
sbb
jp
mov
adc
fildll
aam
pop
cmp
adc
outsl
test
add
jne
lods
fstps
push
mov
fistpll
out
neg
mov
scas
sbb
fistpll
fisubl
cmp
push
hlt
lret
fldenv
and
adc
cmp
int
in
lock
xlat
xor
movsb
push
jb
les
stos
inc
fcoml
ror
jecxz
repz
notb
cli
or
in
aas
fs
enter
adc
pop
mov
out
frstor
stc
jbe
mov
xchg
popl
mov
loope
push
sbb
push
sub
fprem
xor
sub
stos
pop
js
rclb
push
mov
lret
add
sbb
cmp
push
mov
mov
scas
mov
push
data16
xchg
or
dec
pop
mov
sub
addr16
imul
fstp
stos
mov
gs
dec
jecxz
dec
pop
cmp
mov
addl
jno
lea
dec
and
push
push
adc
adc
inc
popf
test
push
outsl
sub
mov
cltd
xchg
test
cmp
pop
adc
cmp
das
int
push
mov
pop
adc
add
cli
sbb
fildll
in
fisubrl
cli
dec
push
pop
ss
loopne
xchg
pusha
aad
pop
xchg
insb
outsb
int3
or
loop
rclb
mov
arpl
repz
lods
jecxz
mov
jbe
pusha
xor
push
addw
lahf
jae
pop
fadd
mov
lcall
enter
push
jae
negl
cwtl
in
xchg
decb
in
das
mov
in
xor
and
and
dec
add
mov
ds
mov
mov
jecxz
loope
lea
push
sbb
jo
xchg
loopne
adc
add
jno
lods
sahf
fwait
ret
xchg
cmp
fstpl
inc
out
lock
cld
cs
cli
std
push
adc
movsb
inc
sbb
ficoms
cmp
hlt
clc
aam
leave
add
aam
pop
pop
xchg
lret
leave
ss
arpl
test
add
xchg
std
cli
mov
and
xchg
dec
imul
nop
pop
test
or
and
pop
in
mov
cld
insl
jp
dec
mov
out
dec
shl
out
cs
addr16
sbb
jle
fisttpl
push
inc
mov
push
push
sbbl
imul
push
inc
push
xchg
sbb
pop
and
mov
invd
insb
jo
bound
mov
xchg
mov
and
pop
add
roll
jl
out
inc
les
movsb
xor
cmp
xorb
mov
lock
cmp
scas
jo
push
fnstenv
xor
mov
daa
int
or
mov
dec
sbb
into
rolb
ficomps
scas
jnp
lock
push
rcrl
mov
sbb
adc
sub
rolb
push
loopne
push
cmp
test
push
lret
stos
push
add
ss
jecxz
aam
mov
mov
imul
adc
mov
jb
jge
mov
push
and
data16
fs
xchg
dec
icebp
loop
ja
outsb
sub
aas
into
jl
xchg
out
fdivs
loope
jo
push
lahf
loope
je
dec
bound
xor
pop
mov
sbb
aad
sbb
dec
mov
movsb
sti
movsl
push
jnp
clc
outsl
ficoms
mov
dec
or
pop
int
mov
ljmp
loope
pushf
in
aas
sub
xlat
sbb
push
hlt
xchg
fldl
rcll
jl
daa
and
out
cmc
pop
jge
mov
xchg
jl
jmp
push
lahf
lods
out
and
lahf
push
cmp
loope
ja
call
mov
das
mov
mov
mov
and
es
sbb
push
add
ret
dec
addl
sub
cmp
in
add
fcomp
or
jmp
ds
pop
aas
cs
mov
cli
cmp
dec
lock
mov
pop
pushf
scas
inc
cmc
push
xor
or
movsb
cmpsl
xor
push
or
repnz
and
xchg
fimuls
lahf
ljmp
test
sarb
pop
mov
jmp
aas
test
daa
pop
adc
add
sahf
push
fsub
repnz
mov
rcr
add
int3
mov
pop
mov
pusha
gs
std
dec
incb
adc
int3
or
push
sbb
or
ret
les
cltd
add
stos
add
and
mov
and
lds
sbb
fwait
xor
mov
cmc
dec
gs
fwait
cmp
jg
inc
pop
arpl
lahf
pop
mov
cld
dec
jns
dec
ret
and
mov
rclb
or
jecxz
adc
clc
xchg
int
push
jbe
lret
pop
cmp
out
sub
popa
xchg
icebp
mov
call
pandn
cli
mov
test
push
xorl
mov
bound
cmpl
fidivrl
testb
cmp
outsb
aad
loopne
mov
push
push
and
xor
mov
adc
cmp
insl
cmpsl
xchg
mov
push
les
lahf
in
adc
lcall
jge
scas
add
js
dec
xor
mov
add
rcl
sub
test
push
loop
push
xchg
xorb
test
data16
imul
mov
adc
jb
je
ret
xor
push
loop
fadds
les
cmp
or
fld
pop
or
and
rcrl
incl
aaa
negb
lock
pop
das
push
inc
arpl
add
add
fstp
aaa
mov
rcll
arpl
nop
xor
sahf
sbb
mov
mov
pop
mov
das
clc
sbb
jecxz
mov
aaa
sahf
push
cmp
pop
xlat
cmc
movsb
and
pop
leave
jp
fmull
mov
mov
je
cmpsl
repnz
lret
xchg
loopne
fbld
mov
pop
repnz
icebp
jb
jl
dec
movsl
and
pop
mov
dec
pop
setnp
test
add
sub
jne
imul
add
push
mov
push
jg
inc
popa
mov
mov
dec
sub
jnp
sar
aas
rorb
leave
test
dec
lret
inc
lcall
sub
push
sahf
jp
mov
outsb
mov
inc
jcxz
sahf
sbb
sub
lcall
sub
sarl
add
fidivs
pop
sbb
andl
jns
pusha
lahf
cs
mov
jnp
mov
sub
dec
adc
test
pop
add
fdivr
push
sbb
and
sub
cmpsl
push
movsl
sub
test
jp
cmp
fcomps
push
and
pusha
lods
xor
out
sub
adc
je
addr16
sti
sub
insb
imul
arpl
and
adc
mov
inc
push
xchg
bound
mov
inc
cmc
mov
inc
cmpsb
sti
sub
inc
sbb
cwtl
mov
test
cmp
cmpsl
jo
nop
data16
or
call
call
pop
add
cmpsl
xchg
xor
xor
lahf
fwait
pop
and
bnd
outsb
ret
mov
movsb
out
add
xchg
test
cmp
or
nop
cmc
pop
lret
popa
push
mov
xchg
add
mov
add
rolb
repnz
outsl
icebp
loope
xor
fsubrl
jns
mov
fidivl
popa
and
repz
xchg
jle
sub
fwait
lret
rcll
cmp
add
xor
daa
jg
jmp
ds
push
adc
add
cmp
cmp
repnz
hlt
inc
lock
mov
mov
push
cmp
jne
mov
ds
or
insb
sbb
sbb
enter
int3
aaa
into
xchg
cmp
cwtl
dec
pop
push
dec
jbe
xor
jp
mov
mov
jnp
loope
mov
clc
int
xchg
lock
push
mov
push
dec
repz
push
jb
jns
test
jae
and
shll
cmp
idivb
icebp
mov
inc
and
outsb
sbb
enter
or
popa
bound
insb
push
and
sub
hlt
pop
xchg
and
rorb
pop
rcrb
jge
xchg
cmp
sub
adc
cld
xchg
hlt
mov
test
mov
arpl
xlat
dec
pop
lds
loop
pop
push
pop
addr16
sub
icebp
into
ficomps
int3
xor
pop
jmp
int
jge
rcrb
pop
sahf
mov
sub
aam
xchg
orb
dec
jne
ljmp
loopne
addl
test
nop
jnp
dec
or
sti
into
nop
xchg
scas
imul
xchg
ljmp
rolb
xchg
sbb
xchg
push
dec
leave
jg
aaa
dec
or
mov
call
mov
gs
ss
jl
adc
enter
mov
imul
fimuls
mov
dec
in
popa
sub
pop
lcall
adc
lret
nop
mov
or
test
lret
inc
cmp
bound
add
pushaw
imul
sub
xchg
lods
mov
in
in
cmp
daa
push
push
xor
bound
inc
pushf
and
jecxz
pop
pop
lea
xlat
push
addb
lods
int
sahf
mov
add
inc
out
sbb
xchg
mov
xor
jo
cmp
lcall
scas
mov
inc
cmpsb
sub
xor
or
mov
lahf
das
testl
add
addl
xor
insb
mov
and
out
lahf
pop
add
inc
inc
xor
pushl
push
lret
das
in
fisttpll
pop
sbb
mov
movsl
repnz
shlb
outsl
inc
mov
outsl
jnp
loop
cmp
push
cmp
test
dec
push
stos
loope
xor
adc
fldl
jo
jmp
cmp
shlb
adc
cs
icebp
fmull
ljmp
cmp
adc
les
adc
push
or
dec
jo
test
adc
fldl
and
iret
out
and
std
sbbb
mov
cwtl
testb
pushf
scas
dec
pop
mov
sti
pop
jb
faddl
dec
inc
int3
sahf
lea
fimuls
mov
xchg
cmp
cmpsl
sbb
inc
inc
adc
fcoms
mov
cmp
gs
pop
mov
push
int3
mov
cmp
sbb
outsl
shrb
iret
aad
nop
or
repnz
mov
push
or
sbb
mov
cld
pop
hlt
jmp
nop
lret
or
ja
ret
shrb
into
cmp
or
and
dec
lods
ficoml
aad
mov
out
mov
inc
xchg
and
pop
and
xor
mov
inc
sub
cmp
stos
aad
xrelease
pop
jne
lret
shll
push
lea
pop
jno
dec
jmp
in
xchg
adcl
mov
ja
xor
pop
sbb
sbb
aaa
dec
lock
mull
repz
mov
jl
scas
mov
pop
or
mov
sbb
push
data16
xchg
popa
jnp
mov
jae
ret
sahf
sti
arpl
loopne
inc
popa
add
clc
add
add
ljmp
fstpt
lret
mov
and
lea
cld
jl
push
cmc
sahf
sbb
popa
sbb
test
xchg
in
pop
fwait
addl
sub
or
popl
mov
call
cwtl
jmp
mov
mov
out
sub
das
sarl
cmp
or
rcr
movsb
or
xor
clc
xchg
mov
adcb
js
into
mov
pop
daa
xchg
mov
sti
dec
repnz
insl
pop
jp
sbb
iret
and
sbb
dec
pushw
sahf
mov
imulb
shll
xchg
int
adc
scas
mov
sub
xor
clc
sbb
jmp
adcl
jp
add
orb
aad
icebp
std
dec
dec
xchg
mov
cltd
shll
out
imul
rcrb
mov
icebp
nop
popf
add
aas
push
mov
xlat
adc
xlat
ja
jg
and
fwait
xchg
into
fbld
mov
in
loopne
or
inc
shrb
adc
xor
outsl
clc
leave
icebp
or
xchg
das
nop
das
jg
imul
nop
mov
insb
pop
xchg
mov
cmp
pop
sbb
mov
popa
inc
push
xor
repnz
mov
mov
cmp
jg
scas
and
and
mov
addb
jp
mulb
lahf
xor
loop
mov
and
adc
cmp
mov
or
add
jae
cmp
jb
jg
icebp
popa
adc
test
sti
sbb
mov
or
ror
hlt
jbe
or
push
xchg
fldl
xor
and
jne
fidivrl
hlt
mov
jmp
pop
jne
lock
imul
push
cmp
mov
adcb
cmp
mov
lods
sbb
mov
cld
in
aam
mov
xor
aam
in
pop
lret
jecxz
xor
mov
mov
dec
pop
xabort
cmp
adc
jmp
sub
or
jno
pop
xor
clc
pop
add
arpl
nop
movsl
jge
mov
ds
pop
scas
add
addr16
and
inc
sbb
sub
push
stos
add
inc
adc
jne
setne
push
mov
addl
in
ret
in
cwtl
enter
cs
out
aad
jb
cmp
sbb
rcll
mov
rol
outsb
pop
pop
push
push
jb
pop
dec
dec
mov
xchg
in
sub
mov
iret
inc
sub
repnz
fdivl
neg
icebp
inc
popa
xor
and
push
pop
outsb
out
outsb
fwait
mov
mov
pop
dec
fcomip
fwait
mov
xchg
jo
nop
mov
or
pop
andl
lcall
sbb
lcall
mov
add
jne
jbe
jge
cmc
inc
fldl
repz
adc
and
xchg
push
mov
push
pop
jmp
mov
cld
jecxz
aaa
into
test
jbe
xchg
mov
adc
mov
lock
lods
mov
jle
lock
mov
jle
sbb
add
out
leave
mov
and
test
pop
push
add
fimuls
rcrb
bound
notl
mov
mov
insb
mov
lods
fsubrp
and
xor
push
and
jl
nop
scas
loope
mov
pop
xchg
adc
negb
pop
loop
mov
outsl
push
pop
mov
pop
stc
imul
adc
adc
or
or
mov
xor
aas
and
shl
cmc
mov
popf
push
push
jecxz
mov
push
mov
rolb
sar
in
adc
cli
pop
addr16
out
lea
cli
mov
shlb
adc
jle
call
cmp
inc
cmp
ja
aad
mov
cmp
sbbb
mov
pop
mov
sub
call
inc
pop
pop
inc
adc
inc
and
xor
xor
shrb
jno
sub
adc
mov
jae
aam
std
push
stos
xor
int3
add
stc
and
mov
inc
pop
pop
fildl
dec
add
loop
dec
subb
lcall
cmp
adcb
dec
mov
test
pop
sub
jmp
mov
pop
into
add
imul
stos
add
pop
mov
lahf
ljmp
push
add
mov
dec
jl
pushf
aaa
outsl
sbb
push
ret
mov
mov
adc
lret
cmc
sub
sub
mov
push
xor
addr16
dec
jmp
fdivr
adcl
add
stc
cli
faddl
adc
push
loop
cmc
push
out
dec
aam
out
sbb
cmpl
mov
mov
jbe
data16
push
adc
xchg
inc
inc
push
ljmp
in
adc
stc
ljmp
jp
jge
test
inc
add
aas
mov
jb
gs
xor
jg
das
sbb
xor
or
xor
fistl
ja
pop
fs
add
add
negl
mov
sub
or
fldenv
inc
js
outsb
js
dec
xor
jae
test
mov
jge
fs
or
lahf
push
push
rcrb
in
ret
xor
lcall
pop
push
neg
das
lcall
push
adc
mov
mov
cmp
and
je
call
mov
pusha
mov
sbb
or
sub
cmp
dec
fdiv
mov
jns
xchg
cmp
enter
dec
int3
jg
xchg
xorb
jno
out
fildll
pop
rol
pop
pop
or
cmc
mov
aaa
jmp
mov
xchg
outsb
rorb
xor
or
jmp
imul
push
sar
cmp
push
leave
mov
lahf
jg
mov
mov
mov
fldcw
cmpsb
pop
gs
pop
jle
cmpsb
in
or
leave
cmp
std
mov
push
aaa
int3
inc
sarl
inc
hlt
out
shlb
pop
sub
leave
sar
aam
xchg
repnz
cmp
daa
ds
mov
lea
inc
lea
lock
and
jno
xor
lock
ja
stc
sub
in
dec
mov
cmc
pushl
aam
or
arpl
andl
push
mov
sbb
push
push
mov
lahf
mov
sbb
xchg
push
mov
add
sarb
mov
ja
int
out
pop
aad
dec
cld
inc
popa
data16
into
sahf
xchg
and
ds
xchg
scas
data16
mov
cwtl
int3
inc
pusha
and
stos
lods
pop
stc
fstpt
jne
or
fs
mov
inc
push
int3
sub
or
xchg
inc
inc
ds
out
cmp
jmp
repz
outsl
sbb
xchg
outsl
mov
in
dec
bound
inc
dec
mov
mov
or
dec
dec
hlt
xchg
ss
into
mov
add
outsl
aam
dec
inc
cmc
fnstenv
or
lods
pusha
aad
pop
faddp
cmp
movsb
sub
pop
or
inc
fisttpl
inc
sub
dec
movsl
mov
or
add
mov
scas
fsubrl
mov
lods
cmp
test
cmp
enter
aam
popf
mov
push
shrb
mov
xchg
inc
fnstsw
popa
enter
shl
fdivl
mov
int3
incb
sub
out
add
in
mov
test
pop
lds
lds
out
subl
test
sahf
adc
shrb
ja
mov
arpl
inc
fimull
outsb
hlt
inc
jmp
lods
out
sub
call
call
gs
xor
push
cmpsl
dec
adcb
repz
jecxz
jg
cmc
fistl
jae
test
leave
mov
popa
sub
sbb
fwait
scas
xor
xor
addr16
dec
jl
fcomps
in
icebp
clc
dec
gs
sub
hlt
jnp
sub
int
add
inc
in
cli
inc
mul
cmp
sbb
push
cmp
xor
pop
xlat
sarl
mov
sub
cmp
cs
int
outsl
nop
inc
xchg
adc
xchg
and
les
or
xor
pop
insl
sbb
shlb
in
std
push
or
mov
adc
bound
and
lock
hlt
bound
ja
or
push
loopne
stc
in
dec
iret
sbb
lret
adc
and
inc
mov
addl
fs
mov
repz
imul
scas
fdivrs
loope
mov
mov
imul
jmp
out
and
inc
lea
cmpsl
xor
adc
push
push
push
sbb
test
stos
mov
xchg
adc
cmpsl
faddl
in
mov
lcall
mov
pusha
decb
or
ljmp
cmp
sub
mov
pop
fldenv
hlt
mov
clc
or
lds
pop
cld
pop
stos
das
fmull
mov
adc
in
pop
inc
fistpl
shlb
rcl
sub
into
xor
pushf
sub
les
sub
js
xchg
inc
call
push
rcr
cld
outsb
mov
jmp
outsb
icebp
jecxz
pop
mov
loop
jmp
push
les
jg
out
cltd
mov
mov
or
pop
jmp
mov
and
daa
fcom
push
ficoms
ds
cmp
push
mov
xchg
mov
dec
jecxz
jp
in
ficompl
pop
scas
in
add
in
sub
pop
lds
and
mov
jo
andl
scas
pop
jmp
cld
or
pop
sbb
sub
push
pop
loop
out
rorb
aaa
dec
ret
lahf
and
call
mov
loop
in
mov
sbb
insb
cltd
lcall
or
mov
adc
pusha
push
push
outsl
je
mov
aaa
bound
dec
pop
inc
ds
leave
push
jge
inc
mov
stos
sbb
or
fdiv
jg
in
cmp
mov
repnz
adc
jp
xlat
mov
movsb
pushf
push
or
sub
cmp
bound
popa
fistpll
ret
ljmp
lret
int3
mov
jno
cmp
loop
pop
adc
aam
adc
movsl
dec
icebp
mov
jne
adcl
cltd
mov
lods
xor
movsl
in
push
fisttpll
fst
push
push
push
and
ret
inc
scas
pop
fs
enter
dec
loope
xchg
insb
mov
repz
dec
lret
mov
mov
dec
jecxz
push
jle
or
adcl
pop
mov
pop
and
jmp
cmp
xchg
adc
adc
pop
orb
and
mov
sbb
cmp
out
mov
push
in
mov
adc
jp
pop
jns
cmc
adc
xchg
mov
sbb
sbb
mov
mov
mov
pop
jmp
jecxz
fwait
ljmp
mov
flds
adc
xor
aas
repz
out
push
test
pop
lea
cwtl
inc
in
aas
out
and
push
adc
add
enter
ret
popf
jnp
and
jmp
xchg
or
mov
xchg
inc
mull
or
notb
out
inc
xor
enter
xor
mov
outsl
xchg
xlat
js
test
xor
inc
xchg
mov
sub
inc
mov
and
add
aam
into
sbb
push
ret
inc
push
pop
aaa
fwait
inc
sbb
aad
lcall
outsb
iret
push
pop
push
inc
mov
scas
push
in
pushl
pop
dec
fwait
cmpsl
xchg
inc
cmp
stos
or
addr16
jnp
inc
fwait
mov
mov
inc
mov
push
daa
ljmp
rcll
push
stos
push
mov
test
aad
mov
sub
aaa
mov
mov
sbb
into
adc
mov
dec
mov
sub
sbb
je
repz
cmp
lds
jge
mov
xchg
pushf
lahf
stos
sbb
sub
cltd
push
jecxz
sbbb
cmp
les
jl
jg
cmp
loope
cltd
mov
sbb
jae
cmp
sub
mov
cmpsl
sub
jp
mov
lret
sbb
mov
inc
sahf
sub
jnp
outsl
inc
lods
jle
jne
mov
rorb
jnp
dec
add
icebp
sahf
out
xchg
xchg
inc
fadd
push
pop
push
ja
das
imul
xchg
imul
cmc
fadds
pop
jb
fs
sub
jae
cmp
rorb
jnp
adc
mov
inc
aam
inc
test
xchg
ret
push
jno
mov
jmp
mov
or
fisttpll
mov
adc
insl
sbb
sbb
into
dec
insl
decl
lds
and
adc
and
sub
add
inc
dec
lahf
pop
imul
leave
cs
insl
and
pushf
push
mov
add
mov
xor
mov
fistps
outsb
mov
aas
clc
mov
and
cwtl
jle
clc
fnstsw
insb
rcl
dec
in
mov
ss
ss
pop
xor
das
clc
add
xor
cli
ret
lods
and
pop
jle
shrl
scas
adc
cltd
and
sub
test
cmp
push
lods
sub
inc
mov
pop
out
and
xor
jae
lods
adc
xchg
jnp
xchg
cmpsb
push
pop
cli
lret
push
fimull
lret
mov
imul
inc
imul
mov
je
repnz
fistpl
out
jb
xchg
add
mov
lea
mov
dec
xchg
insl
xchg
jecxz
pop
mov
lock
jecxz
fidivl
xor
sub
outsl
inc
insl
sahf
xor
lret
gs
dec
negb
mov
jmp
push
mov
mov
shrb
jbe
mov
lcall
out
scas
cltd
mov
and
sbb
dec
popf
scas
mov
or
out
fs
xlat
int
sub
test
std
xchg
or
or
jmp
cs
pop
pop
cld
push
lock
adc
repz
push
pop
push
or
roll
fs
data16
jl
es
xchg
repnz
pop
sbb
add
popa
cmpsb
in
or
inc
stos
rorb
adc
pop
pop
insb
scas
adc
xchg
stos
mov
mul
pop
outsb
xor
repz
mov
adc
fwait
addr16
mov
loop
andb
int3
xchg
jle
adc
pop
jl
addr16
imul
repnz
in
out
mov
imul
or
stos
mov
pop
stos
popf
push
mov
leave
pop
and
xor
testl
adc
out
inc
jecxz
adc
lret
stos
push
mov
movsb
push
nop
imul
or
in
or
jo
jne
and
xchg
xor
notb
int3
mov
aaa
xchg
int
repz
inc
std
stos
xchg
rcll
push
push
loope
and
mov
xor
inc
loope
in
test
ret
das
jno
dec
pop
add
or
mov
scas
cli
imul
pop
jl
out
cwtl
popa
std
shlb
pop
fiadds
imul
cmpsl
mov
sub
xor
cmp
dec
call
jecxz
jnp
or
bound
sub
sar
dec
jmp
jle
mov
pop
dec
pushf
sbb
and
cs
mov
popl
mov
add
jae
inc
mov
jge
sti
xlat
xor
cmovo
add
dec
shl
iret
xor
and
leave
clc
cmpsl
dec
in
jnp
push
lret
iret
adc
les
out
or
mov
jne
sub
mov
ss
push
jmp
addb
adc
dec
movsb
stos
mov
pop
in
loopne
and
in
loope
iret
inc
xor
stc
mov
cmp
fidivrl
jnp
sub
loop
inc
lea
cmp
mov
aam
cmp
stos
lret
cli
ret
lret
cmpsb
daa
dec
sub
andb
mov
mov
rclb
xchg
pop
jg
ljmp
xchg
loopne
mov
ds
dec
in
xchg
addr16
pop
fs
or
js
push
testb
aad
push
aaa
pop
insb
adc
xor
loope
and
adc
or
stos
xor
mov
popa
cwtl
mov
sub
push
mov
or
rcll
lret
sub
sbb
clc
cmp
arpl
cmpsl
add
jbe
gs
and
sub
loopne
movsl
jle
or
cmp
mov
sub
push
sbb
lcall
iret
jb
xor
push
jns
lock
dec
cmpsb
fwait
mov
xchg
sti
xchg
add
push
enter
cli
sub
in
and
mov
outsb
jbe
dec
js
cltd
les
cld
mov
pmulhw
and
daa
jle
cmp
jbe
jae
lock
movsb
inc
and
cld
popa
adc
cmpsl
push
repz
pusha
lahf
imul
mov
ds
shlb
sub
sub
inc
lods
arpl
cmpsl
pop
imul
mov
cltd
push
cmp
jnp
pop
sbb
insb
mov
xchg
and
inc
cmpsl
pop
adc
push
add
fwait
jmp
sarb
mov
mov
sarl
adcb
out
push
ljmp
inc
sarl
ss
mov
sbb
shlb
xlat
clc
mov
mov
outsb
sbb
mov
inc
push
decb
iret
push
das
dec
xor
or
ret
xchg
mov
fs
fdivrl
push
es
pop
push
sbbb
xchg
xor
enter
out
sahf
sub
xor
notl
mov
test
and
loope
sbb
insb
sarl
pop
movsl
pusha
xorps
and
dec
mov
outsb
popa
cmc
mov
sbb
out
sub
xchg
cmp
cmp
aam
jp
and
into
sbb
stos
jae
cltd
or
dec
jns
inc
or
dec
and
daa
cld
sub
pushf
pop
imul
je
cmpsl
push
inc
dec
mov
pop
xchg
cmp
mov
and
mov
mov
xchg
mov
cmpsb
popf
int3
adc
mov
sbbb
mov
insb
int3
dec
psubw
xchg
out
dec
adc
dec
out
rcrb
in
in
cmp
fcos
xchg
mov
mov
imul
pop
in
xchg
insb
scas
shlb
push
mov
aaa
je
outsb
leave
outsl
sub
bound
cmp
cmp
pusha
sub
xor
add
negl
cmpsb
dec
adc
jno
sub
int3
in
ja
and
add
xor
push
sbb
cmc
sahf
fcoms
stos
insl
push
mov
testl
xchg
sub
xchg
sub
mov
inc
mov
jp
pop
mov
xchg
mov
jo
cmp
stc
cmp
mov
xchg
xchg
mov
or
fmuls
and
sbb
xchg
push
push
testb
rcrb
test
xchg
or
jge
icebp
lods
jae
xchg
xchg
movsl
int
pop
rorl
mov
jae
mov
xchg
mov
cs
cmp
out
popa
cmc
jns
imul
clc
jp
cs
pop
mov
cmc
mov
nop
mov
outsb
mov
and
fistpll
jno
xchg
iret
adc
mov
and
mov
scas
out
add
movsb
jg
andl
push
out
pop
and
mov
insl
cmp
and
imul
push
std
xchg
gs
pushf
lahf
push
sub
or
fiaddl
cmp
enter
adc
dec
add
punpckhdq
addr16
dec
xor
icebp
rorl
mov
test
in
popf
xor
or
and
enter
scas
lret
dec
xor
mov
aam
push
xchg
pusha
pop
lret
imul
push
add
sahf
lcall
add
pop
and
js
stos
stos
pop
xchg
inc
sbbb
cmpsl
sbb
push
ret
outsl
stos
sub
pushf
cmp
push
inc
aam
lock
mov
loopne
cmpsl
push
lds
rolb
in
push
lret
push
xchg
mov
lret
push
and
jae
sbb
jecxz
mov
iret
cs
pop
or
lods
pop
xlat
xchg
bound
xor
pop
outsb
pop
pop
inc
addr16
xor
ss
iret
cmpsl
gs
sbb
push
push
jle
jmp
push
dec
push
adc
into
test
adc
movl
cmpsb
jns
repnz
add
cmp
cmp
std
movsb
sub
enter
jmp
pop
pop
adc
outsb
nop
dec
jo
add
push
fs
jmp
xor
lods
fwait
sti
jp
test
pushf
out
or
in
sub
loope
pusha
pop
movl
sbb
test
push
sub
or
fsubl
lods
and
je
cwtl
inc
inc
push
ror
xchg
sub
sub
xor
decl
push
jns
addl
push
or
cli
adc
push
xchg
popa
mov
leave
dec
xor
dec
mov
scas
xor
or
aaa
mov
in
cmp
pop
xchg
das
or
pop
jne
or
testl
movsl
sar
cltd
aad
pop
pop
cli
mov
jno
cmp
mov
fmull
xchg
movsb
or
ljmp
xor
loope
in
in
dec
aas
pop
mov
push
sub
sub
push
xor
out
sbb
mov
dec
fwait
repz
add
jle
mov
inc
cld
mov
xchg
shlb
dec
jno
call
push
mov
out
fwait
lret
or
pop
or
popf
dec
or
xchg
mov
mov
mov
popa
hlt
add
mov
cmc
adc
dec
and
mov
aad
jge
push
nop
ss
dec
pop
pop
adc
fwait
sbb
jns
aad
jecxz
sub
mov
pop
faddl
f2xm1
inc
dec
aad
and
mov
sbb
enter
subb
les
inc
jecxz
inc
fdivp
dec
sbb
fsubrl
xchg
out
mov
mov
out
jbe
cmp
jmp
mov
xorl
lahf
sbbb
inc
test
insb
jnp
push
sub
loope
mov
rorl
sbb
mov
add
outsb
sbbb
jge
mov
push
cmp
sub
lock
xor
pop
inc
pop
enter
movsl
push
or
in
sahf
iret
lea
or
test
aas
dec
test
es
mov
cmp
addl
aaa
xchg
push
mov
stc
mov
push
jle
mov
or
ljmp
xchg
push
fstps
jne
mov
pop
sbbl
lret
mov
shl
outsl
sbb
fisttpl
xchg
loope
pop
mov
gs
loopne
loopne
hlt
adc
mov
hlt
call
in
adc
les
fnstsw
dec
adc
shll
xor
nop
or
inc
xor
sub
aas
shrb
cmpsl
stos
xor
cld
adc
rorb
push
rcrl
sub
sbb
lock
jmp
and
xchg
jmp
adc
mov
shl
mov
mov
scas
add
cmp
sbb
cmp
popa
adc
inc
pusha
inc
inc
jns
or
arpl
dec
ja
pop
mov
xchg
mov
rcrl
add
inc
mov
bswap
mov
pop
sbb
adc
xor
jnp
pop
mov
outsl
pop
fidivrs
lock
sti
rolb
inc
lock
pop
pop
aam
sbbl
sub
sub
insl
sub
pop
push
sbb
push
ret
out
jmp
notl
out
fcomp
xchg
mov
fimull
push
jns
fs
push
mov
insb
xchg
mov
add
nop
dec
fisubl
mov
fstpl
sbb
adc
mov
inc
fisubrl
push
jae
insb
nop
sti
adc
dec
jl
dec
loop
xchg
cmpsl
int3
addr16
lret
fwait
iret
jb
lds
mov
es
mov
test
mov
dec
movsb
imul
inc
jl
push
pop
cmc
adc
inc
mov
or
mov
je
cmp
push
insb
insb
gs
dec
xor
or
cmc
in
adc
push
outsb
and
jnp
mov
test
dec
cmpsl
inc
mul
jmp
lock
clc
fidivrl
andl
cmp
mov
inc
cwtl
push
add
lret
dec
aas
push
adc
rcl
out
pusha
int
pop
dec
fldpi
sub
cmpsb
movsl
push
pop
fdivrl
imul
mov
sarl
push
sarb
lret
ja
push
xchg
push
imul
in
testl
fldcw
aaa
ljmp
xor
xor
out
cld
fcoms
lahf
inc
adc
sub
repz
dec
lock
adc
stos
push
pop
aad
and
jo
mov
inc
push
lret
and
out
pop
arpl
jnp
das
push
jg
dec
adc
addl
push
adcb
mov
dec
cmpb
cwtl
lcall
fs
push
sahf
sbb
iret
xchg
movsl
inc
push
lock
or
xor
jmp
inc
pusha
adc
addr16
cmpsl
xor
daa
mov
vxorps
movsb
xor
pop
in
jg
jmp
pushf
pusha
jmp
loope
call
iret
xchg
push
outsb
xchg
iret
leave
adc
add
and
jmp
mov
imul
sub
push
pop
push
and
push
pop
push
cld
imul
xor
movsb
inc
xchg
cmpsb
jmp
adc
arpl
rcrw
jmp
xchg
addr16
pop
add
dec
xchg
xlat
jle
aam
sub
or
inc
scas
outsl
js
xlat
and
in
popf
xor
jne
inc
dec
jne
push
aas
xor
and
mov
lcall
lds
icebp
push
adc
sti
xor
out
dec
insb
iret
in
aas
test
imul
enter
cmc
scas
cmc
movsb
imul
add
pop
fdivl
mov
inc
or
push
and
and
mov
sbb
mov
and
stos
ret
int3
push
push
push
sub
cwtl
jl
pop
adc
mov
ret
and
sar
dec
hlt
andps
in
repnz
push
or
dec
mov
sbb
cmp
dec
push
mov
push
scas
mov
jbe
pop
out
repnz
stc
xchg
mov
adc
xor
mov
pop
cmp
pop
add
cmp
jnp
in
and
inc
mov
popf
or
daa
add
mov
or
cltd
add
hlt
or
pushf
mov
and
and
movsb
sbb
push
ljmp
stc
xor
arpl
sbb
pop
adc
jmp
aad
cmp
test
lea
hlt
sbb
ds
add
or
roll
pop
push
jno
mov
xlat
rclb
or
flds
mov
xchg
loop
ret
mov
mov
sbb
fsubp
imul
and
imul
cmpsb
mov
jae
pop
push
mov
xchg
sub
xor
scas
data16
lds
xchg
fists
imul
mov
hlt
repnz
inc
iret
fwait
jne
scas
cmp
sbbb
xchg
cmp
sbb
inc
fwait
loop
arpl
mov
sahf
nop
dec
jl
and
enter
cmp
sub
sti
push
out
ficompl
shr
sarb
cs
ficoml
dec
pop
mov
push
adc
stos
cs
push
pop
add
push
cs
mov
add
jge
cli
mov
xor
out
test
loope
scas
and
cs
pop
push
push
pop
notl
daa
subl
daa
outsb
inc
xor
sti
cmp
inc
ret
daa
sub
gs
aaa
aam
xchg
cmp
mov
mov
fsubrs
mov
lcall
movsb
pop
xchg
loopne
int3
jne
pop
mov
ret
push
enter
inc
insb
lea
jecxz
mov
jl
jns
xor
out
sahf
jbe,pn
int3
int
pop
pop
outsb
mov
pop
test
data16
lock
cmp
sbb
xchg
hlt
test
add
addr16
mov
ja
insl
jge
sub
push
push
cmpsb
fs
in
mov
les
push
aaa
test
leave
fisttps
jae
add
sbbb
push
push
fnsave
mov
aad
mov
iret
mov
dec
mov
or
sub
lahf
push
jnp
aas
jmp
inc
xor
or
sahf
sub
add
movd
mov
fldt
stos
inc
pop
out
and
xchg
lcall
ja
dec
cmp
sbb
or
add
hlt
inc
xchg
pop
shll
sub
sub
jae
jp
jo
xor
mov
jle
ljmp
mov
outsb
mov
sti
adc
testb
hlt
jno
loope
jb
ljmp
scas
pop
adc
xor
adc
and
outsb
outsl
add
mov
je
in
push
outsb
fidivrl
imul
cmp
jne
enter
sbb
aam
xchg
xor
or
mov
pop
ljmp
mov
adc
jo
ja
sub
push
pcmpeqb
push
fwait
mov
test
mov
lea
outsl
mov
sub
xor
incl
mov
lcall
mov
push
mov
lcall
push
loopne
lret
outsb
adcl
mov
das
and
in
fimull
lods
jle
mov
lcall
cmp
jecxz
sahf
mov
repz
out
pop
nop
push
xchg
push
out
iret
out
scas
inc
bound
pusha
lret
push
aam
shr
addr16
dec
mov
testb
fldenv
dec
pop
rorb
scas
lahf
adc
pop
xlat
jne
sti
adc
std
push
pop
jmp
lock
addb
sub
push
loopne
rcr
aas
aam
lcall
jle
jae
xor
push
mov
imul
ret
jbe
push
vmwrite
arpl
jmp
dec
scas
mov
ljmp
testb
testb
dec
sbb
xchg
fsub
test
adc
daa
pushf
movq
cltd
or
add
test
sbb
and
xchg
movsb
stos
lds
ret
xor
or
jp
ret
push
push
lods
out
pop
xchg
lock
add
enter
insb
aad
fs
in
pop
xor
in
repz
push
movl
jne
sarl
ja
lret
pop
mov
fsubrl
sub
sub
loop
std
mov
mov
mov
fnstenv
push
je
rolb
cmp
pop
nop
adc
jno
lods
jmp
jne
sub
outsl
xchg
push
cmc
mov
rolb
sti
sbb
cmpsb
pop
cwtl
or
pusha
iret
popa
fistpl
cmp
lock
lcall
sub
mov
loopne
fldpi
inc
mov
or
and
test
cmp
xor
jne
ja
arpl
cmc
jno
std
or
mov
sbb
xor
xchg
add
xor
lea
aaa
data16
hlt
inc
addr16
lea
pop
cmpsb
and
pop
jmp
xor
push
lret
cmp
fldcw
pop
jg
pop
mov
push
stc
cld
repnz
inc
rcll
or
sub
push
testb
ss
lret
fdivrp
aas
psubd
fdivrl
jns
ja
lock
rorl
sub
or
sub
lret
scas
clc
ljmp
adc
mov
shlb
loope
cmp
addl
out
sbb
lods
and
rcrb
test
and
jle
mov
jmp
cmpsl
ja
xchg
sub
xchg
enter
imul
les
pop
jne
movsb
xchg
movsl
mov
aas
out
int
mov
call
jae
lea
lret
add
ja
mov
push
mov
mov
mov
stc
leave
jg
add
adcl
sbb
jae
enter
mov
fldenv
xlat
sub
cmp
mov
insb
xor
aam
and
jne
cmc
sub
and
jle
in
inc
flds
mov
out
add
shr
in
call
jecxz
sbb
imul
xchg
mov
pop
cmp
iret
and
push
das
add
xchg
insl
mov
xchg
cmpsb
movsb
and
inc
je
pop
js
fimuls
fnstcw
mulb
popf
lods
xorb
fcmovne
ret
lock
cmp
jmp
pop
mov
inc
xchg
cwtl
rolb
adc
mov
xchg
daa
arpl
push
lock
push
aaa
stos
scas
mov
mov
xchg
loope
lahf
mov
inc
cld
pushf
xor
sub
or
adc
addl
fwait
setp
aad
jns
sbb
repz
data16
mov
les
sub
stos
mov
jns
mov
sub
inc
add
jne
push
push
iret
stc
jmp
sub
mov
push
loope
aam
push
xchg
cmp
mov
jp
mov
push
mov
fisttpl
lret
push
cmp
jne
call
mov
in
mov
jno
inc
imul
xchg
into
add
imul
inc
pop
dec
aas
in
outsl
adc
pushl
or
enter
rcl
push
repnz
inc
bound
or
fists
and
mov
sub
jns
dec
push
jno
jb
jmp
mov
cwtl
ret
add
jae
hlt
lods
test
cmp
cld
sbb
jecxz
sub
dec
cmp
mov
cmp
sbb
es
push
inc
add
xchg
repz
les
xor
xchg
cs
mov
lret
dec
fnstenv
pop
jge
add
mov
loope
cs
mov
xlat
xchg
stc
pop
jae
arpl
std
shlb
fimuls
mov
and
loope
fbstp
fstl
inc
add
ret
mov
mov
cmc
insl
std
xor
icebp
mov
mov
notb
rol
sbbb
mov
mov
inc
pop
aam
imull
cwtl
push
arpl
fsubr
arpl
pop
icebp
mov
jg
das
jp
inc
sub
out
sbb
rolb
out
out
inc
js
leave
adc
repnz
scas
enter
lock
popf
repnz
mov
aas
jb
fldl2e
data16
les
jecxz
jb
mov
push
repnz
aaa
hlt
in
fs
pop
cmpl
cld
sbb
jl
clc
push
loop
xchg
jg
addl
cmp
jb
dec
lahf
mov
lcall
fistps
mov
cmp
push
and
and
stc
push
cmp
xchg
mov
lock
pop
lea
mov
int
pusha
fsubrl
sahf
jg,pn
cli
and
pop
push
clc
push
movsl
lahf
push
jnp
mov
cltd
cmpsl
push
xor
mov
sub
fisubl
mov
jo
cltd
mov
ljmp
or
and
jnp
dec
sbb
jmp
xchg
push
mov
dec
cmpsb
mov
movsb
jecxz
movb
out
or
fists
scas
inc
aaa
ss
mov
or
push
xor
out
jae
jl
xor
ret
sub
pop
rcr
f2xm1
ds
in
pop
sub
ljmp
in
cmpsl
ret
cltd
inc
jae
add
jmp
add
les
ret
xor
hlt
arpl
dec
inc
ds
inc
ljmp
mov
scas
test
push
or
sub
cmc
jecxz
test
cmpsb
mov
rcll
adc
sbb
rorl
sbb
fisttpll
or
sbb
testl
xchg
aam
jo
add
jnp
cwtl
lock
jo
and
dec
lahf
lods
pushf
cmp
cmp
dec
in
xchg
lock
xchg
add
shrb
ja,pt
add
jns
push
pop
dec
insb
call
xor
test
and
int
mov
cmc
ss
lahf
cwtl
mov
sub
ss
lods
loopne
sub
addr16
lret
xchg
lea
out
inc
outsl
in
add
xchg
xlat
pop
shlb
adc
dec
mov
sbb
inc
xlat
cs
loopne
mov
orl
les
push
add
mov
imul
pop
jo
cmp
inc
out
loopne
pop
or
dec
xor
aam
inc
xchg
jno
xchg
sub
mov
mov
pop
loop
mov
pop
push
mov
aas
sbb
repz
cmp
test
lds
jge
leave
pop
sarb
push
pop
fsubs
xor
lods
adc
test
adc
aaa
cmp
mov
hlt
cwtl
adc
outsl
test
imul
push
loop
pop
add
mov
nop
hlt
cmp
dec
push
loope
aam
sti
sub
mov
sub
cmp
xchg
pop
adc
adc
imul
push
aaa
dec
rorl
xchg
xor
push
in
fimuls
insb
stos
add
popa
in
stc
xor
aad
jae
jno
or
outsl
cmc
xor
cld
insb
push
sbb
cli
jb
push
rcr
movsl
xlat
dec
add
mov
mov
sbb
jo
std
jmp
push
movsl
cmp
dec
pop
mov
pinsrw
sub
mov
push
ficompl
and
lcall
imul
int
dec
and
mov
mov
inc
push
outsb
call
cmp
cli
movsb
jae
int3
adc
jg
mov
loop
addb
push
pusha
mov
dec
rolb
test
pop
in
pusha
outsl
es
outsl
push
and
mov
mov
and
inc
and
mov
sub
fwait
sub
or
mov
rcr
test
cmpsb
mov
mov
mov
xor
inc
loope
sub
shll
sahf
xchg
or
add
repnz
scas
inc
icebp
repz
fdivrl
mov
sub
sbb
aad
and
mov
inc
push
lock
lret
jb
pusha
in
js
sub
mov
cmp
fcmovb
xorb
aaa
stos
pop
pop
hlt
scas
jb
push
inc
and
lret
out
xorl
cwtl
inc
adc
fdivp
add
hlt
mov
loop
mov
push
sub
mov
mov
fwait
adc
iret
xor
cmp
xchg
push
mov
xchg
lcall
pushf
jle
push
shll
mov
enter
out
pop
pop
int
mov
push
hlt
push
or
push
push
pop
adc
sbb
testb
jae
es
mov
pop
sub
pop
xlat
std
inc
inc
dec
mov
fstps
sahf
cmp
cwtl
aad
push
das
push
shr
xor
adc
jmp
push
mov
sbb
out
inc
das
add
popa
cmp
pop
loope
jl
and
pop
pop
sbb
mov
in
sbb
add
sbb
imull
push
mov
or
and
lock
jge
pushf
lahf
rolb
xchg
jbe
negl
lahf
loope
pop
push
jge
cwtd
popa
inc
mov
pop
stos
and
clc
fs
gs
push
sub
and
loopne
dec
loope
clc
scas
adc
pop
mov
xor
cltd
cmp
pop
xor
cmpsb
sub
pop
inc
sub
bnd
bound
in
or
enter
mov
sarl
loop
loop
xor
push
mov
cmc
outsb
and
dec
adc
mov
xor
or
divl
or
pop
popa
jge
xorb
fildll
dec
pop
sbb
fmulp
aam
out
sbb
xor
pop
or
xor
ss
fmull
cmc
jge
sub
cmpb
push
mov
sub
stos
outsl
add
xchg
xchg
and
xor
pusha
inc
sbb
adc
xor
add
imul
pop
mov
inc
adc
xchg
xchg
icebp
movsl
lds
fwait
repz
in
mov
test
into
pop
jns
jbe
leave
jae
dec
mov
dec
sti
lods
xor
in
cld
inc
and
xchg
ljmp
aam
sub
andl
sbbl
push
daa
imul
mov
popa
jno
into
cltd
adc
push
xchg
and
insb
loope
jnp
add
push
loop
sti
push
pushf
ja
notl
dec
pusha
xor
scas
dec
das
pop
inc
add
add
adc
sbb
jg
enter
jp
cmpsb
jl
out
stos
pop
mov
out
push
jbe
out
jge
cwtl
sbb
in
jo
fildll
lret
dec
fbstp
jnp
repnz
mov
cmpsb
leave
je
and
fwait
lock
inc
or
mov
mov
fucomp
ds
in
movsb
adc
imul
lods
cmpsb
mov
inc
fwait
ret
jne
cmpsl
jle
insl
mov
push
and
pop
mov
pop
popf
fadds
sti
mov
jle
jo
jo
loopne
in
mov
outsb
adc
out
xor
xchg
xchg
and
lock
out
and
add
cwtl
pop
jmp
and
push
pop
cmc
out
mov
mov
loope
pop
mov
and
mov
inc
dec
out
ficomps
in
mov
xchg
mov
and
lret
adc
jb
ljmp
adc
xor
aaa
or
loope
xlat
stc
lahf
pop
dec
mov
test
xor
imul
xchg
sbb
shlb
cltd
add
and
add
js
jbe
pop
clc
pushf
mov
pop
adc
inc
pop
lret
cs
in
mov
mov
xchg
shrl
mov
movb
xor
push
sub
icebp
es
mov
out
out
out
push
inc
or
stos
outsl
mov
cmp
ds
mov
sub
les
jnp
insb
push
arpl
int
ljmp
subl
mov
mov
mov
cmp
in
cmpsl
or
dec
xor
ret
cmp
in
ljmp
jne
add
mov
out
imul
fwait
lret
sbb
mov
dec
cmc
rclb
adc
cmp
adc
mov
lock
fwait
subb
or
inc
sub
xor
sbb
jno
sub
mov
cmpl
pop
xlat
or
imul
inc
xchg
jns
test
xor
leave
lods
fsubr
push
nop
outsb
popf
xchg
xor
adc
pop
shl
mov
imul
ret
in
imul
movsl
sub
sbb
mov
andb
out
adcb
sti
in
dec
in
lds
call
mov
inc
pop
lea
cmp
std
pop
xchg
push
loop
dec
in
mov
xchg
hlt
movsl
or
mov
or
dec
fsubrs
inc
lock
cld
movsb
lahf
lret
popf
pop
pop
cs
mov
arpl
or
cwtl
sbb
sti
jns
test
inc
dec
inc
je
bound
mov
xlat
insl
xchg
shlb
add
jmp
dec
push
nop
mov
gs
dec
cmp
out
gs
pop
ds
cwtl
imul
mov
cld
shl
inc
out
push
hlt
call
adc
sti
mov
sub
xchg
jno
test
xchg
pop
or
xchg
dec
xchg
stos
lahf
add
inc
ss
clc
cmpsb
cld
mov
in
dec
adc
sbbb
pop
std
std
stos
rcrb
arpl
mov
dec
repnz
adc
xchg
in
inc
test
sub
pop
lret
sub
out
fadds
loope
test
inc
ffree
inc
mov
push
pop
in
mov
mov
xor
icebp
inc
dec
mov
mov
sbb
xchg
jb
adc
out
sbb
repz
adc
stc
add
aam
dec
ret
aas
inc
pop
inc
adc
repz
xor
pmaxsw
cmpsl
dec
mov
and
mov
icebp
adc
dec
in
or
fadd
xchg
and
std
aaa
sahf
mov
mov
push
je
stc
popa
pusha
in
adc
and
dec
push
outsl
pop
mov
sub
fmuls
push
inc
xorl
scas
loopne
cmc
bts
sub
mov
inc
cmp
add
cmp
repnz
repz
test
jl
pop
int
mov
push
jle
fidivrl
ds
cltd
pop
stos
testb
and
xchg
test
jno
cmp
dec
xchg
sbb
mov
xor
push
dec
sub
imul
add
fmul
scas
dec
test
inc
pop
nop
fldt
mov
cmp
test
add
jmp
es
clc
loope
mov
xor
adc
or
mov
insl
cs
outsb
cmp
fs
repnz
xchg
mov
sbb
iret
in
sub
push
scas
sahf
jle
add
cltd
pop
leavew
sbb
out
mov
frstor
testb
push
push
cltd
pushf
dec
mov
nop
fimuls
push
shlb
cltd
jp
push
roll
jg
ja
bound
xchg
push
sahf
sub
jmp
icebp
imul
rcl
xor
sbb
mov
cmp
cmpsb
out
jbe
mov
mov
out
movsl
dec
jne
pop
pop
cmpb
les
adc
sub
call
fisubrs
rol
jp
pusha
add
cmpsl
cltd
neg
les
push
test
push
mov
fiadds
js
sbb
xlat
ds
mov
mov
js
mov
inc
hlt
stc
inc
cmp
inc
xor
sub
cmc
lds
lret
cmp
bound
xchg
inc
xor
sahf
xchg
out
push
mov
inc
pop
inc
and
ja
push
mov
push
sbb
fwait
push
pop
mov
push
pop
dec
mov
xchg
add
sub
push
dec
jb
imul
shrb
mov
insb
fisttps
or
imul
cmpsl
pop
sub
mov
addl
xor
call
gs
addb
test
push
in
push
cwtl
push
popf
pop
out
frstor
mov
lcall
adc
lcall
mov
lcall
addb
sbb
sbb
push
lret
movsb
sbb
pop
inc
arpl
shr
movsb
push
mov
icebp
pushf
xchg
mov
aas
mov
adc
mov
subl
repz
mov
push
mov
test
inc
or
shlb
int3
dec
xor
inc
jb
fiadds
add
mov
cmp
cli
call
cmpsb
push
ja
sub
orl
fdivrl
inc
movsl
sbb
jo
test
mov
out
lock
andb
int3
mov
xlat
dec
inc
fwait
push
pop
jg
test
sub
fdivrl
mov
inc
push
in
decl
mov
enter
cmp
sahf
lret
and
and
mov
dec
add
mov
out
int3
movsl
js
cmpsl
push
pop
fmull
adc
leave
mov
sbb
fwait
shll
pop
sub
js
shlb
pusha
cmpsb
ret
into
cmp
pop
inc
fs
icebp
lret
daa
and
clc
pop
mov
aas
jg
jno
dec
push
loopne
sub
in
add
sahf
iret
mov
pop
adcb
mov
push
mulb
out
shr
addr16
jp
or
mov
jp
dec
cltd
jecxz
mov
add
cmp
sub
sbb
xor
dec
dec
inc
jge
xchg
sub
rcl
arpl
fcmovnb
ja
push
test
or
or
addb
inc
ss
movsl
into
rcll
cmc
jo
ficomps
out
fstl
movsb
mov
and
fwait
shlb
daa
stos
lods
mov
xor
sahf
pop
jae
js
pusha
cmp
rcrb
call
dec
aam
xchg
xor
inc
dec
xchg
xchg
aaa
fisttps
or
jl
shlb
in
filds
mov
inc
add
pop
or
dec
out
sub
popf
cmp
push
add
xor
lods
mov
inc
aad
fstpl
into
add
das
hlt
nop
lcall
sti
fwait
js
leave
sbb
xor
fidivs
ljmp
cmpsb
or
jp
ljmp
std
and
divl
aas
push
iret
inc
pop
pop
fcomps
sub
lret
jmp
int3
sub
faddl
ljmp
clc
inc
or
int
sbb
or
ljmp
cmp
ss
popa
xchg
test
inc
pop
imull
enter
adc
pop
mov
test
add
daa
test
lock
cmp
xchg
nop
mov
in
push
mov
jg
das
bound
aam
inc
imul
cmp
jl
popa
or
xchg
lock
bound
jp
add
sar
push
jns
aad
mov
xor
jg
icebp
loope
mov
cwtl
pop
jecxz
fwait
jp
mov
inc
adc
ss
leave
jns
inc
dec
mov
sahf
mov
fwait
mov
lods
dec
mov
add
add
or
cmpsl
and
jnp
dec
fsubl
sub
jecxz
push
test
nop
inc
and
or
rcll
je
sbb
popa
adc
mov
sahf
in
test
out
aad
xor
xor
mov
into
scas
xchg
sti
nop
adc
cwtl
mov
test
repz
mov
push
cmpsb
es
or
in
and
pop
inc
test
push
and
xchg
addr16
outsb
jmp
jl
pop
cs
lret
add
mov
jecxz
or
mov
xor
xchg
mov
or
or
loope
das
jns
aaa
cltd
add
mov
xchg
jns
and
jb
jne
pop
mov
in
or
sbb
test
out
pop
iret
push
push
ret
sbb
sti
push
out
mov
insl
mov
mov
pushf
mov
test
pop
mov
scas
jne
data16
sbbl
pusha
sbb
int3
mov
out
lock
add
dec
cmpsl
add
testb
dec
test
das
in
ja
mov
js
aaa
mov
cltd
add
mov
bound
dec
mov
jbe
sbb
cmp
cli
pop
lcall
adcb
lret
xchg
sbb
lcall
xor
aam
push
xor
ret
dec
or
adc
cmp
scas
bound
rcrl
aaa
push
ljmp
mov
or
mov
loop
sahf
pop
stc
mov
insl
mov
and
xor
inc
jecxz
mov
dec
xor
pop
jnp
sbb
or
inc
movsl
cmp
pop
dec
call
jno
fldl2t
testb
scas
scas
mov
sbb
rol
inc
push
pushf
aad
pop
je
lret
sub
sub
dec
sbb
xor
into
inc
imul
mov
clc
xor
call
fcmovnu
cltd
pushl
mov
mov
nop
mov
xchg
cmp
pop
or
in
in
lret
movsb
jp
lock
lret
push
jge
pop
sbb
lds
popf
aad
or
icebp
shrb
fdiv
lcall
cmpl
add
jecxz
sti
and
flds
out
mov
sbb
adc
mov
jp
ja
adc
je
xchg
rorl
std
xchg
inc
sbb
mov
lret
pop
inc
and
inc
xchg
adc
and
mov
pop
jo
stos
lods
shl
das
lahf
hlt
cmpsl
bound
mov
in
pushf
mov
adc
test
xchg
inc
add
scas
xlat
imul
aad
and
push
sbb
add
jmp
mov
fwait
in
stc
pop
cmp
add
lahf
mov
inc
and
push
imulb
xchg
sbb
popa
mov
jb
dec
mov
fistl
mov
pcmpeqb
adc
pop
hlt
out
data16
xchg
loopne
test
test
lret
test
leave
jns
in
adc
add
vhsubpd
mov
aam
in
mov
cwtl
int
push
divl
pop
add
lods
imulb
out
adc
leave
outsl
pop
pop
idivb
mov
mov
sub
sbb
imul
hlt
push
dec
out
int3
popa
ffree
popa
add
fcmovbe
mov
scas
mov
adc
fsubs
dec
loopne
sbbl
jge
sub
mov
pop
dec
xorl
pop
call
cmpsb
mov
push
clc
repz
je
fs
ljmp
imul
jb
enter
lods
sub
and
mov
stos
add
and
negb
pop
sbbl
sub
repnz
pop
test
test
jo
mov
dec
cltd
pusha
jb
dec
ds
xchg
aaa
shlb
dec
rorb
add
adc
shrb
jne
push
decl
mov
addl
insb
test
inc
push
fisttps
dec
jns
in
scas
xor
xor
xor
mov
imul
daa
sbb
imul
xchg
inc
in
adc
push
aas
inc
cs
inc
imull
push
les
pop
sbb
dec
fstpl
sub
pop
inc
sbb
add
rcr
je
jl
mov
mov
add
inc
aas
push
mov
fcomp
push
add
aaa
flds
jl
or
inc
repz
push
sarl
push
in
or
mov
xchg
dec
test
xor
popa
or
push
add
addr16
inc
inc
xchg
cs
arpl
jp
jb
int
ret
movsb
shrl
jle
in
nop
outsb
popa
push
sub
dec
jmp
or
jbe
arpl
nop
imul
stc
ret
inc
pop
ds
sbb
lcall
sbb
outsb
aam
cmpsb
in
ja
arpl
jg
imul
mov
hlt
stos
repz
mov
stos
push
add
lock
cli
pop
int3
pop
hlt
scas
mov
pushf
pop
arpl
pusha
repz
insl
mov
aaa
xchg
and
xchg
add
adc
mov
and
lods
repnz
cmc
pmaxsw
out
inc
sub
in
lcall
cmp
xor
and
cli
pop
into
mov
test
sub
in
test
mov
inc
add
into
sbb
pop
xchg
inc
pusha
push
pop
mov
fdiv
mov
out
sub
adc
mov
cwtl
cs
sahf
dec
mov
cli
shrl
dec
lcall
sub
sarb
xchg
add
loop
dec
adc
fnsave
pop
sub
and
add
int
sub
pop
sub
cld
jg
xchg
adc
pop
sub
push
dec
jl
add
lahf
les
add
fsin
enter
fidivl
xchg
daa
adc
xor
mov
loop
mov
jp
jno
imul
icebp
inc
test
or
popa
loop
mov
jl
dec
testb
cmpb
cmp
aad
mov
fisttpl
mov
or
repnz
sbb
push
mov
mov
fcomip
pop
mov
sbb
xchg
or
inc
inc
cmpsl
fiaddl
addr16
and
xor
fisttpl
mov
adc
jne
mov
xchg
dec
xor
sbb
jmp
in
mov
push
ljmp
ficoml
je
xor
fimuls
mov
bound
je
pop
add
in
mov
pop
inc
aad
mov
lahf
addr16
rcr
lret
lret
dec
push
or
mov
cltd
es
inc
or
push
mov
dec
or
xor
push
pop
popa
mov
or
mov
lahf
rolb
xor
es
sbb
inc
fmuls
pop
fbstp
lds
cmpsb
pushf
gs
inc
mov
mov
xchg
orb
jge
lcall
cmp
mov
lods
pop
pop
sub
out
loop
testl
or
pop
adc
bound
jnp
arpl
ret
pop
shlb
pop
xchg
or
pop
xchg
pop
cwtl
xor
cltd
or
mov
sub
pop
adcb
sbb
aam
sub
pop
ja
jne
jns
inc
imul
adc
cs
popa
dec
lahf
cmc
or
jle
ss
fnsave
jnp
adc
stc
xlat
or
loopne
jg
cmp
or
inc
mov
cs
hlt
pop
emms
pop
in
add
mov
xchg
testb
jl
sbb
push
xchg
stc
add
and
je
mov
je
jbe
je
cmp
in
adc
jmp
pop
repz
dec
shlb
or
out
mov
dec
push
lret
cmp
pop
mov
inc
and
icebp
add
popa
xchg
mov
push
push
insl
sbb
and
sti
cmpb
addr16
mov
add
lods
mov
int
mov
or
rorb
arpl
mov
mov
faddl
ljmp
or
pop
mov
imul
jp
push
sub
adc
add
cmp
outsl
mov
cmpsl
cs
jo
fstps
and
fistpl
popf
cmp
iret
mov
scas
jmp
and
mov
adc
scas
nop
daa
inc
jmp
or
fucomip
lahf
or
mov
sub
imul
bound
dec
and
fstl
rcrl
pop
sbb
mov
xchg
mov
fcomps
mov
xchg
loopne
aaa
add
iret
mov
dec
fstpl
stos
mov
pop
loop
ds
enter
sbb
mov
out
xchg
lret
mov
push
out
sbb
dec
xchg
std
in
cmpsb
ss
out
or
xor
hlt
inc
insl
sub
add
xor
adc
bound
cmpsl
insb
shrb
dec
lret
aad
fsubrl
or
push
dec
push
pop
mov
sbb
and
fs
cmp
lret
loop
leave
add
adc
ds
int
or
push
test
sub
ret
test
or
inc
lahf
jg
repz
pop
aaa
outsb
inc
adc
stos
lods
sub
addr16
or
jmp
in
mov
xchg
mul
stc
dec
inc
cwtl
xor
div
insb
insl
gs
les
push
push
ja
sub
or
push
mov
or
cltd
aad
or
ret
or
lret
loopne
adc
xor
aas
test
add
pusha
rolb
jle
mov
outsb
jno
or
pminub
cltd
stos
addr16
jo
push
jecxz
mov
js
dec
dec
out
inc
js
jge
addr16
les
int3
xchg
les
add
lea
addr16
dec
popa
xchg
jg
pop
mov
add
sub
ja
cltd
pop
movsl
or
mov
adc
bnd
js
xor
and
xlat
fwait
xlat
mov
sbb
cmpsb
pop
xchg
mov
sub
arpl
sbb
into
inc
add
cltd
pop
mov
sbb
mov
sti
and
cmc
and
imul
lds
sub
adc
sub
sahf
in
outsb
sub
roll
pop
js
and
or
lods
adc
sbb
jge
add
jno
push
inc
xchg
inc
xor
jmp
scas
push
sub
xor
inc
xchg
imul
shrl
aad
xor
jae
xor
sub
popa
mov
add
mov
aad
mov
lahf
xchg
int
stos
ret
push
pop
inc
add
pop
js
mov
jle
mov
sub
mov
cli
push
clc
push
inc
outsb
ret
xor
sbb
ret
in
xchg
lods
xor
mov
xor
mov
insb
repz
push
outsb
sub
and
mov
cmp
mov
push
cmpsl
xchg
cmp
insl
jge
sar
inc
lds
fdivrl
dec
fsubl
popa
inc
mov
lods
dec
mov
mov
xchg
inc
sti
mov
sbb
sub
rolb
mov
ja
dec
mov
lods
mov
loope
mov
mov
mov
push
gs
sbb
xchg
fisttpll
jmp
cmpsl
lea
xchg
inc
loope
call
mov
inc
insb
jp
adc
sub
cmp
rcll
xchg
cwtl
fcom
mov
sbb
or
aam
xchg
jg
sub
xor
xor
xchg
xchg
and
jp
ss
ret
ja
mov
divl
sti
aad
mov
cld
cmp
mov
jge
pop
rolb
cmc
mov
shll
repnz
aaa
jo
inc
and
mov
in
sahf
mov
div
stos
sub
sbb
jnp
or
negb
enter
sub
jecxz
or
dec
pusha
out
loopne
mov
push
inc
push
inc
fwait
std
cmp
incl
cmpsb
ret
loopne
mov
cltd
imul
inc
mov
pop
jae
add
movsl
stc
stos
jmp
push
dec
sbb
aad
inc
xor
inc
push
inc
call
lods
push
vpaddsb
push
dec
inc
mov
js
inc
inc
adc
out
aad
xchg
sub
movsw
add
sbb
push
cmpb
out
sbbl
fistpl
sar
push
pop
enter
mov
inc
push
pop
in
notb
rcr
test
movsb
shl
addr16
dec
rorl
jno
mov
mov
movsb
test
in
sar
push
stos
subb
mov
das
add
imul
jecxz
test
inc
xchg
sub
xchg
and
adc
xchg
mov
clc
sbb
mov
subl
inc
scas
scas
jmp
push
or
push
aaa
lock
xchg
adc
fcmovbe
add
push
jl
cmpl
or
insb
and
cltd
dec
cmp
loop
daa
repz
fimuls
sti
lods
mov
lea
pop
aaa
push
dec
lret
pop
add
insb
mov
not
mov
jns
sub
jl
or
ret
sbb
iret
jnp
and
add
sbb
icebp
xor
cmp
or
pop
stos
test
sbb
stos
pop
or
daa
pop
stos
cmp
repnz
adc
xor
push
sbb
xchg
push
lods
je
pop
into
jno
and
xchg
mov
cwtl
cwtl
das
and
mov
cmpsl
pushf
push
jl
aam
inc
pushf
sti
ds
aam
push
inc
sbb
fwait
rcrl
loopne
and
cwtl
fwait
nop
sahf
add
inc
mov
xchg
inc
shlb
jo
jle
mov
scas
pop
cmpsl
xor
cmp
outsl
and
scas
das
in
lods
xchg
pop
adc
mov
in
ficoms
xchg
cwtl
push
mov
bound
data16
dec
repnz
lods
ja
data16
movb
jg
pop
sti
ficompl
sub
add
xchg
test
and
ja
pop
push
pop
or
fldenv
stos
test
jl
cmp
fnstenv
je
cmc
lahf
push
sahf
popf
adc
pop
loopne
scas
and
cmp
into
adc
xor
dec
xchg
lahf
inc
stos
xchg
repz
push
outsb
leave
sbbb
jb
imul
jb
push
add
push
lret
aas
stc
push
sbbl
mov
mov
enter
xor
scas
cld
cmp
or
cmpsb
mov
aad
js
jle
jp
or
loopne
out
je
mov
imul
addr16
mov
lods
lods
and
mov
xchg
aam
test
popf
shlb
push
rorb
xor
dec
into
dec
imul
xlat
mov
and
inc
xor
pop
xor
shr
repz
imul
mov
outsl
les
sub
ret
xchg
xor
dec
push
stos
or
jmp
pop
inc
adc
ss
cmp
cltd
scas
jle
xchg
test
scas
gs
pop
dec
in
adc
sub
jl
pop
and
loopne
xor
add
imul
adc
cmpsl
push
mov
push
or
fistps
sar
movsl
stc
dec
xchg
aas
insl
mov
fsubl
xor
test
cmp
rcll
pop
arpl
cmp
pop
das
pop
sbb
adcl
cld
mov
sti
sti
outsb
jmp
lods
lock
test
mov
out
or
je
test
ds
mov
int3
out
push
jnp
cli
jno
and
fcmovnu
cmpsl
adc
inc
decb
pop
jge
adc
sbb
cmp
inc
cmp
pop
repnz
loope
inc
mov
xacquire
dec
int3
cmp
and
jge
sub
popa
mov
mov
and
popa
lods
loope
push
pop
sub
mov
push
xor
outsl
inc
jmp
clc
sbb
xchg
push
add
mov
cltd
sar
rolb
lds
cmpw
cli
scas
mov
and
cltd
jne
dec
imul
sbb
add
shll
cmp
rcrl
ja
mov
mov
adc
mov
clc
loope
and
xchg
sub
dec
push
hlt
popl
xor
jo
inc
popa
push
sar
jge
sbb
jl
scas
ficoml
fnstcw
push
or
mov
cmpb
dec
cmp
dec
xor
enter
inc
std
sub
xor
adc
sbb
mov
cld
lea
out
lock
sub
mov
cmp
push
scas
push
cmp
xor
jl
jmp
mov
ja
mov
add
pop
jnp
mov
sti
cmpsl
mov
fdivrs
or
add
pop
mov
push
add
adc
das
xchg
cmp
cmp
jae
fsts
enter
dec
subl
inc
repz
dec
dec
add
leave
dec
mov
sbb
inc
pop
pop
sbb
sbb
call
lahf
adc
rclb
inc
lock
lret
test
xlat
xchg
lea
lret
jle
jmp
push
fmull
dec
cmpsl
test
mov
cmp
sti
mov
xchg
jl,pn
or
xchg
cmp
mov
jle
dec
dec
enter
push
int
adc
call
popf
mov
adc
icebp
fbstp
mov
test
fwait
inc
mov
stos
lock
outsb
xlat
cli
movsb
shlb
cmp
jb
mov
sub
mov
sub
xchg
out
dec
push
bound
mov
in
loopne
iret
mov
mov
or
loop
sarb
aad
pop
xchg
and
insb
pop
pushf
and
cli
add
nop
xchg
mov
fmuls
sub
pop
das
dec
add
incl
push
mov
inc
cmp
insl
sbb
lea
fcos
jp
pop
test
cmp
xor
nop
fistpll
fwait
xorl
in
dec
setae
mov
mov
jae
mov
jle
sarl
cltd
sub
push
sbbb
xor
enter
scas
add
fiadds
lock
add
jl
fcos
lods
adc
gs
cmpl
sbb
insb
int
fisubrs
fimuls
sahf
cmp
or
insl
stc
mov
xchg
cli
xchg
imul
lods
cmpsb
sbb
mov
or
in
sbb
inc
mov
imul
xchg
adc
inc
enter
jg
inc
out
nop
inc
fisubrl
mov
or
inc
test
movsb
roll
mov
pop
pop
xor
loop
aas
lock
rcl
push
sbb
inc
insl
push
sub
sbb
mov
xor
shll
jg
iret
inc
xor
xor
add
mov
repz
jecxz
jg
call
or
scas
mov
sbb
push
mov
popa
mov
mov
mov
repnz
ss
add
mov
inc
or
jl
pop
dec
xor
jge
push
test
dec
test
jge
addr16
jmp
adc
int3
mov
call
add
and
sub
into
add
icebp
dec
cld
mov
mov
lds
inc
fmul
push
xchg
pop
cld
sbb
jb
pop
ss
pop
or
insl
sbb
cmp
mov
aad
inc
push
das
pop
mov
nop
jne
jb
outsl
aam
cld
add
adc
inc
sub
cmp
cs
mov
inc
popa
hlt
subl
jmp
fisubl
fs
dec
out
fimull
aaa
sub
sti
dec
test
jge
push
inc
mov
sti
ret
sti
dec
adc
or
je
fdiv
mov
pushf
ss
test
jns
adc
mov
adc
mov
lods
inc
dec
loopne
sbb
icebp
cmp
dec
push
adc
adc
mov
cmp
push
mov
push
mov
popf
ret
push
cmp
xchg
sub
jne
adc
lret
enter
mov
pop
adc
sub
xor
lahf
mov
push
sub
lods
and
xor
retw
aad
cwtl
xor
fcoml
inc
cmp
stos
cld
add
push
xchg
jno
fcoms
nop
loop
popf
inc
jae
cmp
pop
cmpsb
leave
aam
xor
pop
daa
push
xlat
inc
cs
fidivl
inc
stos
rcrb
imul
lock
sbbb
ret
xor
dec
jp
jmp
cmpsl
mov
sub
xchg
ds
imul
adc
arpl
push
inc
imul
push
negb
outsb
or
sbb
cmc
jp
xchg
aas
push
push
fiaddl
push
es
mov
and
jle
jle
iret
mov
gs
ja
or
scas
xchg
adc
xor
jbe
jae
sbb
jne
stc
lods
lcall
repz
sub
outsl
sbb
mov
aas
or
cmp
push
addb
test
inc
addb
std
out
mov
sub
inc
aas
out
out
in
cmc
mov
daa
pop
ret
push
push
or
xor
mov
movsl
test
push
jg
and
add
enter
lods
inc
pop
ret
ljmp
rcll
gs
aam
xlat
sti
orb
addb
dec
or
sti
adcb
les
jns
inc
push
shll
in
loope
gs
adc
nop
jnp
prefetchnta
xchg
lcall
cmp
pusha
sti
adc
out
jb
out
mov
push
push
pop
push
push
es
pop
and
mov
xor
ret
push
push
cmpsb
lods
in
pop
fldenv
sbb
mov
xchg
test
xor
jne
cmp
push
clc
subl
test
test
out
bound
lret
repnz
ljmp
loopne
sti
push
rorb
insl
mov
dec
or
add
rcll
inc
mov
mov
add
add
in
fwait
lods
jle
movsb
inc
mov
xchg
daa
xchg
negb
addr16
and
adc
clc
cwtl
mov
out
loope
cmp
std
and
les
repnz
add
cld
pop
fisubrl
dec
call
lret
sub
pop
sbb
movsl
add
inc
pop
imul
ficoms
scas
out
jno
jne
fdivl
mov
fdivs
stos
bnd
icebp
int
pop
insb
enter
lock
jne
gs
pop
push
pop
into
pop
pushf
dec
js
aaa
adc
pusha
dec
mov
in
sbb
in
inc
sub
lahf
inc
cmp
jne
shrl
mov
push
push
xor
outsb
ds
loope
enter
enter
fiadds
xor
pop
cmp
jb
repz
into
adc
add
loopne
jge
cwtl
push
add
push
pop
mov
cmp
arpl
testl
pop
add
cmpsb
inc
addb
aaa
insb
mov
clc
inc
push
shrb
push
xor
fcos
shll
cwtl
stos
and
gs
xlat
dec
jmp
jbe
pop
jae
aas
aad
ljmp
mov
mov
cld
loope
stc
imul
sbb
mov
mov
fidivl
mov
inc
das
xchg
mov
or
das
xor
ljmp
call
repz
clc
movsb
fstpt
cli
ret
or
xor
test
jp
int3
xor
movsl
in
pop
inc
cmp
icebp
dec
rol
inc
push
loop
out
loopne
cmp
cmp
stos
xchg
pop
sar
les
xorl
jmp
pop
cmpsl
add
xchg
cmp
vmread
mov
aam
pop
dec
adc
shrb
xchg
scas
jae
popa
jbe
arpl
out
icebp
fimull
dec
jbe
mov
pop
stos
jmp
push
jp
scas
mov
sub
shlb
jge
mov
xlat
pop
call
inc
leave
les
mov
push
jno
mov
lea
jge
cmpsl
xchg
xor
mov
xchg
pushf
jge
push
lahf
in
cmpsb
rsm
jno
shll
dec
mov
stc
insb
pushf
ret
test
aad
mov
push
out
xor
sbb
adc
inc
xchg
lods
cmp
int3
sti
add
add
inc
mov
jle
insl
in
mov
loop
inc
cmp
add
je
into
fdivrl
mov
add
filds
adc
inc
mov
enter
inc
movsb
insl
jg
pop
xchg
jle
sub
xlat
or
dec
add
and
mov
addr16
mov
movsl
cmpb
outsb
add
fs
and
popf
jae
push
insb
orl
mov
xchg
stc
xchg
adc
jnp
bnd
xor
mov
insl
jge
call
call
cmp
test
mov
pop
lods
mov
pop
sub
xchg
push
leave
dec
loope
or
mov
sbb
or
dec
div
jge
cmp
out
xor
je
int
add
and
cmpsb
mov
out
and
popa
or
inc
add
ja
popl
insl
add
sti
mov
pusha
daa
rcl
mov
cmp
dec
mov
xor
adc
and
out
das
repnz
iret
add
mov
jns
cmp
xchg
inc
xchg
dec
loop
andl
sub
inc
arpl
ljmp
sbb
inc
cmp
jg
jbe
loope
mov
pushf
repz
xor
js
jg
or
test
sbb
lods
cwtl
out
or
mov
loopne
rcrb
mov
movsb
pop
arpl
mov
lcall
das
sub
movsl
lcall
push
push
jge
into
and
push
lods
mov
mov
push
cli
loope
bound
dec
pop
std
dec
je
fldt
adc
insl
mov
pushl
pusha
xor
lahf
sub
fsubr
add
imul
bound
cmp
xchg
loope
arpl
mov
cwtl
mov
jne
cwtl
in
xchg
out
mov
adc
in
push
out
push
lcall
movsb
or
pop
mov
pop
ds
mov
jg
push
fldcw
pop
into
and
push
fcmovb
std
ljmp
adc
push
shrl
cmp
dec
insl
int3
sub
rol
add
inc
inc
loope
out
into
stos
fs
fistl
jge
mov
loope
dec
sub
jmp
fs
in
addb
test
cmp
lcall
cld
mov
adc
or
sub
add
adc
and
inc
and
stc
push
pop
enter
mov
lock
sbb
mov
dec
adc
adc
push
jnp
inc
lods
xchg
push
dec
mov
stos
push
pop
cltd
dec
xchg
int3
sahf
test
gs
js
inc
cmpsl
dec
cli
lret
adc
and
mov
mov
dec
xor
js
repz
ds
fsubrs
jmp
outsl
jb
pusha
iret
mov
gs
jmp
lret
sbb
mov
leave
adc
divb
ljmp
inc
inc
negb
inc
jecxz
andb
cmp
test
les
test
push
mov
movsl
imul
xchg
pusha
cwtl
sub
test
in
fimull
sub
cmpsl
vminsd
dec
jecxz
jbe
mov
jno
mov
xchg
stos
push
sbb
xlat
cltd
add
stc
inc
nop
pop
dec
jge
push
sbb
fs
pop
push
push
mov
lret
movsl
je
adc
mov
add
pushf
mov
lods
adc
sarb
sub
push
cld
jae
sub
clc
sbb
mov
sbb
jmp
xor
pushf
repz
lfs
std
loop
jg
lcall
stc
outsb
lea
stos
jne
lods
adc
lcall
and
push
in
xor
or
repz
ficoms
cmp
andl
mov
scas
push
xchg
loopne
clc
into
loop
cmp
pop
push
call
cmpsl
xchg
jne
push
inc
or
mov
mov
push
test
mov
push
pushf
rorl
inc
xchg
mov
mov
mov
add
pushf
sbb
jno
xor
and
fdivs
stos
pushf
mov
and
xchg
ficomps
clc
in
iret
adc
and
in
sbb
and
inc
cvtdq2ps
pop
test
mov
mov
movsl
stos
and
sbb
pusha
adc
fs
out
imul
jecxz
movsl
and
push
push
enter
push
or
stos
lea
hlt
ret
mov
jp
cmpps
or
mov
pop
add
arpl
push
cmp
cltd
sahf
jno
xor
push
mov
cwtl
adc
pop
mov
cmp
scas
jecxz
and
aaa
lock
and
pop
jmp
fimull
shrl
pop
int
out
leave
jl
cmpsl
in
cmp
or
push
ret
clc
repz
mov
lcall
clc
ja
imul
add
and
push
xor
jp
xchg
push
add
mov
cwtl
xchg
stc
push
repz
sbb
inc
xchg
cltd
pop
jae
popa
mov
popa
test
gs
test
mov
hlt
jns
xor
cwtl
adc
push
xchg
repnz
femms
mov
xor
rorb
sub
movb
mov
sahf
fiadds
daa
scas
imulb
sbb
cwtl
pop
setnp
and
mov
icebp
int
jnp
mov
mov
in
mov
fistpl
or
test
mov
call
daa
cmp
ljmp
cmp
adc
push
sbb
cld
pop
sti
push
push
test
pop
repz
sahf
in
mov
fbstp
scas
sub
iret
xchg
and
dec
sub
xchg
push
movsl
mov
dec
and
mov
add
test
sbb
aaa
sahf
and
leave
sarl
stc
les
dec
cmp
pop
sbb
call
shll
lods
test
loopne
jl
call
push
je
nop
inc
rorl
repz
shlb
sbb
icebp
jge
mov
or
and
pop
mov
or
fwait
adcl
pop
aaa
jl
insb
cmc
fmull
and
loop
add
push
rolb
imul
and
inc
jge
push
push
test
out
adc
mov
fstpl
mov
daa
fstps
adc
xchg
add
stos
in
test
cmc
sub
lret
push
add
xchg
stc
push
cmp
shlb
cmp
adc
and
sub
adc
push
and
imul
ficompl
lds
sbb
sub
xor
aaa
xchg
stos
and
mov
aas
lcall
xor
push
cmp
push
les
andl
fsts
negl
cmp
pop
fmulp
je
add
das
push
inc
pop
pop
sbb
sbbb
mov
push
or
addr16
out
push
out
popa
mov
fs
inc
shrl
jge
enter
mov
pop
sub
aas
sbb
hlt
sbb
in
mov
idivb
mov
cmpsl
ja
push
jno
mov
dec
ljmp
pusha
clc
xchg
icebp
mov
enter
dec
add
clc
fisubs
stos
dec
inc
jbe
into
fsts
sub
sbb
sub
lock
cmp
out
sub
es
scas
mov
rcl
pop
pop
jl
lcall
out
movl
roll
out
test
sub
mov
test
adc
xor
push
dec
push
push
divb
mov
sub
mov
mov
dec
sub
pop
pushf
xchg
repz
dec
jmp
mul
push
push
outsl
mov
push
test
jecxz
movsl
pushf
out
xchg
sbb
je
mov
fwait
adc
pop
daa
into
rclb
push
sarl
or
inc
nop
add
les
lods
push
inc
and
int
outsb
idivb
shrd
leave
push
xor
adc
xchg
scas
sbb
std
push
jecxz
outsb
mov
xchg
out
mov
mov
push
insl
cmp
push
jg
mov
mov
sbb
and
fucomp
jle
scas
les
adc
mov
sub
push
testb
repz
xchg
sbb
jle
aas
ja
iret
sub
sub
cli
cmp
dec
xchg
ret
dec
mov
or
xor
lods
fcmovu
lods
push
iret
in
ret
stos
push
aad
stos
outsl
nop
and
cs
aaa
inc
mov
test
outsb
sarb
add
movsl
mov
ds
sub
xchg
nop
fdivl
scas
mov
subb
test
call
movsb
mov
adc
pop
pop
pop
icebp
scas
out
outsb
or
pop
push
std
dec
sbb
pop
fwait
and
call
addr16
mov
xchg
fisttpl
adc
fiadds
fwait
lds
fldl
push
inc
cwtl
sbb
cmp
mov
inc
add
sti
jnp
fmul
cmp
push
and
jg
cmp
mov
pop
iret
pop
mov
daa
fists
movsl
mov
jnp
out
pop
sbb
xchg
xor
out
push
data16
cs
in
mov
adc
in
cmp
fsubr
add
ret
mov
loope,pn
dec
adc
pop
test
std
lcall
in
add
pusha
push
pop
cld
adc
out
cmp
test
outsb
inc
xchg
mov
out
ret
jmp
ds
decb
add
sbb
popf
push
add
stos
out
bound
jno
jp
in
je
cli
pop
and
push
cmp
leave
insl
xchg
xor
cmp
ret
jmp
xlat
inc
test
jle
mov
mov
jg
int3
adc
jmp
stc
pop
pusha
cmpsl
or
jle
int3
mov
add
clc
xchg
je
mov
je
int3
xchg
outsl
jns
loopnew
sub
dec
les
fwait
cmpl
in
sbb
out
push
jbe
sub
shrb
push
shrb
and
ficoml
and
push
mov
sbb
sub
dec
stos
inc
imul
adc
xorl
outsl
leave
cmp
cltd
xchg
pusha
sub
std
mov
adcl
aaa
loope
dec
jns
mov
dec
sub
iret
mov
fildll
in
inc
and
das
mov
out
mov
les
add
pusha
xor
sub
aam
inc
add
je
fcoms
xor
stos
push
pop
adc
loopne
divb
or
adc
dec
lret
in
sub
xlat
jmp
mov
out
stos
dec
int3
and
xor
incl
stos
pop
pop
or
xchg
addr16
push
sbb
adc
cmp
mov
fwait
pop
dec
test
lods
mov
movsl
lahf
push
mov
and
fs
mov
add
push
or
movsl
or
xor
jb
push
push
dec
dec
sbb
insl
or
pop
int
push
cmpsb
sub
add
pop
mov
or
sub
mov
pop
loope
or
stos
sarb
dec
jbe
loop
mov
mov
mov
xor
adc
jae
cmpsl
inc
sub
aad
out
and
sbb
into
andl
mov
mov
test
pop
cmpl
cmp
sbb
dec
dec
push
aas
cmp
js
out
pcmpgtd
inc
and
mov
icebp
jl
nop
mov
jae
shlb
out
out
out
push
add
insl
scas
ret
pop
xchg
pusha
adc
inc
push
and
fiaddl
push
std
aaa
mov
test
in
cmp
sbbl
mov
mov
out
mov
sbb
sbb
xor
mov
xor
int3
add
sub
in
cmpsb
fnstcw
jns
cli
popf
cmp
sbb
sub
mov
movsl
mov
mov
cltd
das
in
add
lods
sbb
push
xor
das
jb
xchg
movsb
ss
inc
lea
pop
inc
rclb
xor
repz
sbb
inc
insl
sub
inc
movsb
loope
mov
sub
sarl
mov
mov
mov
jne
mov
ret
in
vmread
negb
mov
push
call
jecxz
fisttps
leave
popa
cmp
mov
sbb
cltd
xchg
not
in
rorb
aaa
inc
jmp
jg
in
push
std
push
inc
roll
popa
fwait
mov
add
or
inc
cltd
mov
push
std
sarl
adc
push
or
jecxz
lods
gs
or
je
xchg
daa
inc
push
stos
inc
jno
lea
cld
xor
mov
icebp
xchg
std
sub
push
loopne
adc
pop
xor
stos
ss
insb
xchg
adc
sbb
sbb
pop
roll
popa
xor
push
mov
xchg
add
jnp
push
cli
sbb
sub
jb
in
aas
sbb
test
push
ljmp
fcomps
cld
pop
es
dec
aam
stos
imul
loop
lret
cwtl
xchg
pop
pop
jo
pop
loop
xor
sbb
push
dec
adc
add
or
das
les
movsl
roll
scas
fwait
mov
rcll
adc
testl
adc
push
adc
mov
mov
div
in
inc
adcb
mov
les
mov
arpl
inc
scas
outsb
sub
pushf
ja
flds
push
sahf
nop
je
fcoms
stos
add
test
cld
jnp
lahf
lea
mov
in
jo
out
ficomps
ljmpw
pop
imul
inc
aaa
cmp
out
clc
insb
out
sbbb
in
enter
pop
out
xor
or
addr16
lods
les
push
popa
aam
mov
dec
test
lea
gs
mov
jmp
cld
das
mov
sti
out
in
mov
pop
pushf
dec
pop
lds
ffree
test
fs
ja
int
fisubl
and
mov
push
sbb
jbe
neg
sub
pop
in
jae
xor
xlat
jp
push
xor
pop
pop
dec
shlb
lahf
dec
pop
mov
cmp
ja
stos
stc
imul
jo
inc
xor
pop
call
idiv
shlb
inc
xchg
dec
cld
xor
test
mov
cld
stos
inc
xor
rorb
inc
or
gs
fiadds
jecxz
push
jnp
shll
dec
outsl
xacquire
adcl
aas
adc
xor
mov
jecxz
add
inc
jns
push
or
outsl
cmpsb
jae
mov
nop
daa
push
stos
and
cmp
inc
xlat
stos
shlb
sub
adc
cwtl
sbb
dec
or
stc
aaa
ret
ss
test
mov
mov
mov
pop
mov
mov
or
ret
dec
mov
repnz
add
in
mull
dec
mov
cmpsb
lods
pop
pop
add
icebp
lcall
pop
push
pop
test
fsubl
enter
push
iret
xchg
cmpsb
mov
sti
leave
int3
pop
adc
sbb
fwait
out
mov
adc
pushf
add
xchg
cmp
stc
cmpsl
xor
mov
dec
lea
sub
leave
sub
inc
jge
and
lret
lock
ret
sbb
xor
clc
xchg
ret
push
xor
dec
hlt
jmp
out
or
xchg
or
out
pop
pop
sbb
leave
jno
insb
jno
adc
ret
je
jmp
lds
nop
lds
jle
dec
aas
sub
mov
test
in
dec
lock
pop
sbb
xchg
es
icebp
mov
hlt
xor
ljmp
sub
shll
pop
sbb
xchg
js
mov
mov
xor
xchg
aad
cmc
jmp
mov
xor
mov
adc
repnz
jle
sbb
or
adc
inc
push
loopne
mov
aad
nop
cs
jge
enter
loopne
and
fdivr
iret
fimull
mov
cmp
cmp
ret
jns
pop
mov
push
push
out
aaa
scas
mov
das
imul
sub
pop
imul
sub
iret
pop
psubd
push
fadds
ja
test
mov
popf
xchg
xchg
pop
dec
add
sbb
cwtl
add
adc
push
ljmp
cld
call
dec
and
jecxz
and
pushf
dec
jbe
push
insl
dec
pop
mov
push
jb
push
in
ds
sbb
cmpsb
aam
rorl
cli
not
push
leave
rol
pop
negb
rorb
dec
mov
push
iret
jl
push
test
fidivs
scas
imul
mov
xor
and
xchg
lods
es
sub
xchg
pop
and
fdivl
test
cmp
clc
pushf
xor
sbb
rorl
xchg
cltd
or
mov
out
xchg
addb
hlt
cmpb
jle
fcoml
and
pop
stos
xor
sbb
stc
gs
test
jbe
push
push
mov
mov
std
cltd
inc
push
mov
aad
test
insb
arpl
sbb
jns
rcr
les
jge
pushf
je
psadbw
loopne
insl
lock
push
call
lret
outsb
adc
fmuls
dec
sub
ss
aad
test
sub
cmp
pusha
pop
pop
sub
vpand
ret
shl
in
jb
and
mov
jp
inc
lods
inc
loop
add
out
inc
jg
insl
and
iret
add
mov
sub
loopne
and
cs
mov
popa
sbb
pop
cmc
adc
or
loop
enter
push
xor
jle
adc
push
test
rolb
pop
lret
imull
adc
ljmp
jmp
adc
daa
jmp
xchg
xchg
mov
loope
lret
lock
shrb
rcr
sbb
or
sbb
jle
mov
sbb
pop
loopne
pusha
push
or
cmp
arpl
sbb
xor
stc
mov
and
stos
jne
inc
lock
cmp
adc
jl
adc
push
mov
xchg
loope
loopne
mov
pop
mov
mov
sbb
inc
xchg
jp
bswap
pushf
sbb
adc
movsb
ljmp
repz
shl
icebp
scas
add
pop
sbb
mul
dec
mov
aas
jge
test
popa
cmp
rcll
cmp
dec
cmp
or
das
push
inc
push
neg
das
aad
clc
rorb
aam
pushf
xchg
scas
nop
xor
and
sbb
pop
push
inc
push
xchg
popf
jo
jno
inc
hlt
sbb
push
inc
mov
aaa
in
push
xor
cld
imul
pop
mov
cmp
int
jg
mov
testb
out
jnp
mov
imul
out
jmp
cmp
jmp
sbb
adc
mov
es
cmp
pop
bound
xchg
xchg
jno
mov
xor
push
cmp
and
push
xchg
jbe
das
test
mulb
imul
and
adc
pop
cltd
inc
dec
test
mov
mov
mov
xchg
in
adc
addr16
popa
imul
xor
incl
xlat
add
mov
xor
xchg
outsb
and
out
xlat
dec
ss
xchg
popf
jmp
or
out
sbb
and
cwtl
mov
in
sahf
mov
into
sub
push
clc
or
cld
cmp
cmc
ds
and
insb
shrd
test
or
adc
and
cmp
or
fsubrl
ret
xchg
pop
adc
xchg
test
rorb
mov
push
sbb
mov
popa
cmpsl
das
adc
xchg
adc
loopne
sub
jecxz
xchg
hlt
add
adc
pop
sub
dec
in
mov
outsb
jg
jne
test
jge
jmp
lods
cmp
sbb
push
insb
fsubl
aad
pop
sbb
mov
push
jg
popa
out
lods
jge
mov
ret
lret
jmp
cld
cmp
or
or
sbb
dec
xor
or
and
orl
pop
sub
pusha
jbe
or
movsb
insb
imulb
pop
lahf
fistpll
adc
shl
jge
insl
fdivrs
ret
dec
mov
adcb
rcrl
push
cld
xchg
xor
jle
jb
stos
dec
inc
pop
ljmp
push
ror
add
xchg
or
mov
inc
das
jle
mov
dec
mov
adc
call
in
mov
push
loop
xchg
cmp
stc
jecxz
imul
out
xchg
adc
pop
xchg
jbe
sbbb
lds
pushf
xor
mov
cli
repz
pop
adc
cltd
lea
aad
adc
cwtl
xor
outsl
fcmovbe
dec
int3
stc
iret
fdivl
xor
lahf
test
popf
cmpsb
push
inc
inc
mov
aam
testl
inc
push
dec
inc
icebp
add
cmp
dec
jno
xchg
cvtps2pd
repz
leave
lock
xchg
pop
loope
or
in
pop
iret
fidivl
fs
cmp
adc
lar
xlat
insl
cld
push
pop
sub
mov
adcb
cmp
pop
lea
pop
sbb
or
pop
in
jg
or
mov
in
stos
inc
xor
into
and
xor
and
fsts
mov
push
inc
cmpsb
fcoms
es
mov
ret
add
mov
cmp
data16
call
or
pop
scas
mov
cmp
jmp
js
adc
xlat
jmp
scas
jnp
push
in
push
xlat
movsb
cmpsb
rorl
pop
aas
and
rcr
ljmp
xchg
test
mov
stos
fbstp
testb
ja
in
iret
mov
mov
push
inc
fstpl
mov
sbb
in
lock
jecxz
cwtl
cmpsb
pop
adc
mov
mov
ja
pop
insl
mov
mov
outsb
xchg
jns
test
sti
push
cmp
lds
jns
sti
sub
int3
jbe
jo
loope
shll
leave
fisttpl
outsb
into
lret
call
enter
iret
mull
test
in
fimull
repz
inc
mov
test
jg
in
xchg
loop
jg
inc
cmpsl
mov
ss
mov
xor
cmp
pop
pop
std
xchg
imul
mov
cmp
xlat
sbb
loopne
int3
divb
stos
adc
dec
les
mov
sub
aas
xor
loopne
sbb
pop
sub
scas
lods
cli
adc
dec
mov
pop
push
fwait
mov
cmp
repz
pop
pop
fdivs
dec
mov
pop
push
jb
pusha
dec
ds
shlb
pushf
inc
cmp
xor
leave
xor
es
lea
adc
xchg
dec
push
fists
fiaddl
iret
push
jns
std
mov
pop
sti
push
pop
call
mov
push
cmp
and
sub
scas
add
jb
mov
pop
mov
cmp
pop
jb
inc
out
mov
mov
insb
sahf
or
js
dec
subl
loop
cmp
jge
std
and
imul
cmp
cmp
popf
and
push
insl
and
pop
xlat
mov
leave
jge
cmp
stos
repz
pop
aam
rcrl
lods
inc
js
lods
hlt
push
cwtl
fs
repz
and
adc
jle
aas
push
jae
ffreep
sbb
mov
or
sub
fcomps
lds
and
sbb
xor
and
rcrl
aas
movl
or
add
push
add
iret
mov
fadd
imul
mov
inc
or
pop
out
push
mov
cli
in
pop
mov
push
in
repnz
xor
nop
mov
inc
jmp
repz
test
push
outsb
xchg
sbb
xchg
mov
inc
sbb
js
stos
int
mov
pushf
outsb
cs
rcrb
sub
add
pop
cmp
loop
pushf
push
std
mov
in
sub
inc
test
mov
add
cmp
sub
push
pushf
je
js
xchg
jge
push
insl
push
test
mov
cli
dec
mov
push
rcll
mov
or
and
pop
std
and
dec
and
mov
dec
dec
push
dec
fucompp
test
push
je
sbb
xchg
mov
xor
cs
out
repz
and
mov
pop
int3
jp
xchg
cs
popa
mov
insb
mov
dec
call
outsb
sti
xor
and
pop
mov
mov
inc
or
subb
in
jp
pop
lock
loope
push
outsl
mov
or
fcmovu
ret
or
ret
xor
or
nop
push
add
dec
jmp
lcall
ss
insb
pmuludq
ss
ljmp
dec
into
xor
insb
jle
repnz
icebp
aaa
sbb
push
mov
sub
sarl
mov
xlat
dec
mov
inc
and
push
repz
sbb
xor
mov
loope
lock
test
notl
pusha
dec
mov
stos
mov
and
inc
mov
push
dec
cwtl
or
fsubr
test
jne
arpl
jnp
ja
jge
sarl
adc
test
pop
push
cld
adc
lock
xchg
xchg
add
adc
std
loop
xchg
and
mov
ret
adc
xor
sahf
or
cmc
mov
aas
add
popf
clc
fsubl
mov
jle
xor
jle
cmp
cmp
xor
sbb
mov
xchg
les
push
xchg
addb
mov
sbbl
lret
mov
mov
test
stc
ret
mov
movsb
nop
pop
call
sbb
cmp
sahf
push
imul
inc
push
movsb
outsb
fidivs
push
or
inc
fcomi
fldcw
cli
std
lods
mov
mov
cs
sub
adc
mov
cmpb
adc
adc
sub
push
jp
dec
clc
fsubrl
mov
lret
and
mov
xchg
mov
aas
dec
popa
incl
loop
xor
test
push
dec
lret
jo
ja
mov
jno
fcmovbe
fdivrs
scas
sti
xor
aad
test
stc
jp
and
push
fs
sbb
fmull
mov
ss
xor
les
or
cmc
xchg
movsl
dec
inc
ss
mov
sub
int3
movsb
pushf
xor
arpl
fildll
fstps
xchg
adc
xchg
inc
std
fst
jmp
mov
jne
and
rcll
or
mov
out
in
push
popf
out
orl
lods
into
sbb
out
imul
mov
lock
push
pop
push
addr16
jmp
xor
data16
leave
pop
adc
push
outsb
dec
cs
movsl
fcomp
ljmp
inc
add
repz
or
ja
and
into
sbbb
xchg
sub
je
hlt
mov
jecxz
dec
cld
dec
mov
jb
push
mov
xor
cmpl
push
xor
ret
fnsave
inc
loopne
inc
jns
pop
pop
inc
stos
mov
ja
das
mov
push
dec
mov
pop
xor
stos
adc
stc
xor
add
mov
mov
into
push
mov
aaa
and
test
mov
add
pop
push
inc
gs
dec
jnp
cmp
xor
mov
sbb
jno
out
xchg
js
pop
fs
into
out
enter
sub
daa
pop
je
dec
movsl
cpuid
and
or
repz
push
aas
pusha
pusha
pop
and
xchg
test
mov
fistpll
sub
leave
rolb
mov
xor
ja
iret
daa
lea
mov
int3
pop
xor
push
cmp
test
out
mov
mov
push
lods
push
imul
mov
jp
les
xor
xchg
loop
sub
xchg
sbb
add
adc
push
daa
pop
test
pushf
fisttpll
sahf
in
cmp
cmp
sbb
or
and
test
ds
mov
data16
cld
pop
adc
fs
inc
pop
xchg
mov
push
les
fmuls
sti
test
and
mov
insb
mov
push
shlb
push
std
mov
notb
test
outsl
pushw
push
or
std
stc
movsl
pop
mov
cmpsb
idivl
sub
xchg
inc
mov
cwtl
mov
xor
pop
ficomps
mov
es
adc
xchg
adc
frstor
loopne
or
adc
loopne
jno
jmp
xchg
push
arpl
dec
push
sbb
jne
insl
sub
sub
fsubs
movsl
rorl
or
bswap
lahf
rdtsc
and
mov
gs
push
fists
cmpsl
repnz
or
cmp
mov
lds
jo
inc
stos
scas
ret
dec
xchg
lods
shrb
ljmp
xor
outsb
jp
sbb
push
call
mov
or
ds
lods
jmp
xchg
push
int3
xorl
movsl
jle
jle
push
cwtl
cmc
pop
mov
mov
jecxz
rclb
aaa
cs
and
filds
std
mov
data16
out
xchg
pop
fwait
jnp
mov
inc
mov
inc
add
cmp
add
les
cmp
mov
in
fnstenv
pushf
push
jno
aas
mov
add
xchg
lods
cmp
xchg
dec
lret
or
inc
mov
cmpl
dec
push
insl
dec
sbbb
orb
or
sub
jb
fisttps
xor
mov
in
sti
mov
sbb
fidivrl
mov
fsubr
sub
cmp
sub
cmpl
pop
mov
aam
popf
lcall
mov
xor
test
fmuls
mov
inc
and
adc
shrl
cmp
pop
xchg
outsb
mov
mov
xchg
pop
outsb
jmp
out
push
mov
pop
mov
mov
jbe
imul
xor
repz
cltd
jl
mov
adc
test
xor
mov
push
arpl
or
sub
jle
mov
movsb
call
adcl
jp
mov
movsl
adc
mov
dec
inc
jb
dec
jb
jp
cmc
lcall
pop
icebp
mov
inc
jo
ja
les
scas
cmp
stos
and
loopne
fiadds
repz
sbb
mov
xchg
push
je
call
mov
mov
das
bound
scas
mov
cmpsl
fnsave
loopne
iret
cmovnp
jmp
xor
pop
push
xchg
lret
sahf
adc
push
lds
jno
adc
hlt
push
xchg
and
mov
clc
ret
add
out
cmpsb
dec
test
adc
cmp
mov
inc
adc
xor
pop
xor
js
adcl
jns
jg
pop
push
loope
mov
arpl
push
mov
push
jmp
sti
aam
or
ss
lds
xchg
mov
xchg
xchg
pusha
xchg
fisubl
lahf
push
shll
cmpsb
pop
mov
ror
push
add
jns
loop
imul
jbe
scas
fisttps
xchg
mov
dec
arpl
sub
inc
or
push
xor
fmuls
lods
jl
aas
mov
sub
xor
ret
outsb
add
adc
jecxz
into
mov
lods
inc
push
cli
pop
add
cmp
dec
les
inc
push
mov
cmpsb
dec
inc
xor
sub
out
lock
insb
xor
mov
mov
push
and
adc
sub
in
lret
sub
fbld
jge
sarl
push
mov
dec
inc
lcall
mov
repnz
dec
mov
pminsw
pop
xchg
add
icebp
fnstcw
mov
cmp
adc
test
cmp
sub
out
sarl
xor
sub
mov
insl
push
and
int
jle
mov
and
call
in
jl
xchg
xchg
pop
push
out
xor
stc
ret
inc
pop
pusha
inc
xchg
out
js
jb
ss
xchg
sub
xchg
inc
loopne
repnz
sbb
ljmp
push
jmp
out
sub
subl
pop
loop
test
push
lret
push
adcb
and
push
andb
xor
adc
lds
xlat
lods
out
popf
push
xor
xor
lds
or
dec
push
sbb
in
xor
push
lcall
push
jmp
xchg
fs
cmpsb
cmp
mov
mov
nop
push
sub
push
mov
sub
sbbl
xor
insl
outsb
or
xor
sti
fwait
xchg
xchg
fucomi
fsubrl
pop
std
xor
iret
xchg
inc
sbb
addr16
bound
pop
xchg
les
xchg
inc
shlb
mov
shl
aam
cmp
jbe
sahf
mov
or
xor
jnp
adc
ds
jmp
push
and
cmp
adc
and
lret
mov
lea
repnz
bound
lds
aam
in
iret
pop
mov
sbb
jne
push
and
pop
xchg
scas
push
add
fildll
movl
inc
add
fldl
pop
jbe
sub
dec
fwait
xchg
test
mov
mov
xchg
sbb
imul
jp
dec
jb
mov
xchg
cmp
xor
pop
fsubrs
sbb
mov
pop
loopne,pn
mov
shlb
xor
ljmp
hlt
cld
movsl
aas
clc
inc
shrb
pop
cmpsb
sbb
pushw
push
dec
inc
notb
jle
outsl
cwtl
mov
add
adc
sub
jo
jmp
adc
outsl
mov
pop
jle
cmpsb
cmp
jnp
shll
clc
adcb
out
inc
fidivrl
jb
xor
adc
xchg
ja
pop
cwtl
or
xchg
cmpsb
and
std
xchg
sbb
pop
imul
or
sbb
mov
dec
aad
sahf
adc
xor
in
mov
stos
aam
lret
lret
mov
addr16
divl
xchg
popf
and
adc
pusha
loope
ffreep
push
mov
out
ficoml
popf
lret
mov
push
ficompl
cli
push
mov
sbb
mov
mov
jmp
outsb
clc
xchg
jp
mulb
lcall
scas
pop
call
int
xor
repnz
pop
in
imull
mov
ret
pop
dec
repnz
inc
rcll
insl
cmc
call
fcompl
or
es
in
dec
sub
call
jle
dec
pop
push
pop
into
ret
test
aas
fisttps
mov
push
jle
pop
push
fistpll
mov
movl
jb
adc
mov
ret
outsb
or
adc
add
mov
outsb
and
out
and
into
ja
ljmp
pop
fists
mov
xor
cmpl
repz
mov
mov
inc
popa
mov
xchg
repnz
jg
aad
aam
add
icebp
pop
adc
xchg
test
mov
loopne
push
shll
inc
ss
dec
addr16
movsl
and
dec
shl
mov
mov
movsl
fldl
call
add
popa
aad
and
mov
push
mov
insb
add
enter
stos
push
cld
add
and
fnstenv
xchg
pop
push
fwait
jb
mov
nop
pop
sub
dec
jb
pop
mov
jle
mov
mov
jecxz
cmp
lock
fwait
dec
stc
or
jp
xor
sahf
pop
pop
add
scas
outsl
jmp
call
lods
jp
int
push
leave
inc
jle
push
loopne
mov
in
mov
movsb
aaa
dec
mov
xchg
arpl
add
inc
jbe
ljmp
ja
outsb
pop
mov
rol
test
cwtl
adcl
mov
xchg
mov
and
cmp
in
adc
in
mov
lahf
mov
cld
ficompl
push
xchg
and
lret
sahf
and
mov
dec
mov
ljmp
inc
stos
jmp
mov
push
mov
lods
mov
nop
addr16
and
ja
out
cmp
mov
enter
or
add
lcall
pop
loope
fldl
push
xor
push
pop
popl
push
pop
inc
lret
nop
xor
movsb
xchg
orl
pop
into
push
int3
rcl
ds
outsl
xchg
or
mov
cmp
push
std
or
aas
xor
or
jae
pop
ds
js
push
in
mov
sarb
hlt
movsl
cmp
outsl
or
or
dec
jbe
cli
sub
outsl
pop
std
lahf
insl
sarb
xchg
mov
dec
popa
mov
inc
push
out
sub
fwait
adc
push
push
cmp
and
stos
pushf
mov
in
inc
pop
pop
jo
jne
dec
mov
adc
adc
idivl
adc
movsl
and
and
popf
pop
gs
insb
lock
outsb
mov
mov
dec
sub
in
push
inc
pop
out
insl
mov
popa
outsl
and
ja
jnp
or
pop
push
int
insb
adc
cmpsb
sbb
sbb
cmc
push
leave
std
or
push
mov
xor
push
stc
or
jb
fildl
jbe
pop
jle
shlb
shll
je
dec
xchg
jecxz
cmp
scas
and
iret
js
loop
mov
fs
arpl
pop
sti
es
jg
inc
xchg
jns
mov
pop
bound
and
xchg
push
addr16
pop
push
jb
cmp
les
dec
stc
scas
dec
std
pop
adc
aas
aad
sub
push
ror
inc
int3
fwait
xchg
into
mov
jno
cmp
fdivr
mov
push
out
repnz
daa
xor
popf
std
sbb
js
scas
sbb
cmp
cmp
inc
movsb
cmp
lret
cmpb
inc
sbbl
test
dec
lret
lahf
pop
out
xor
sub
aad
xor
mov
in
dec
movsb
push
pop
cmp
mov
mov
mov
rcll
mov
inc
cmp
cld
adc
dec
and
dec
add
in
dec
mov
fs
nop
jge
push
sbb
push
ret
in
add
jg
mov
sub
dec
scas
je
adc
cmp
bound
or
mov
cmpsl
and
dec
lods
rolb
stos
and
int
pushl
lahf
xchg
add
in
xchg
cwtl
push
imul
test
add
jecxz
add
popf
addb
cmp
sub
sub
xor
mov
cmpsb
xor
mov
fists
push
add
jns
pop
and
mov
mov
in
scas
pushf
sbb
es
call
mov
pop
movsl
cs
jo
xor
aaa
or
dec
push
ror
pusha
xor
addr16
movb
dec
and
clc
cmp
jb
hlt
push
inc
rcrl
mov
dec
pusha
mov
pop
fmul
jecxz
insl
cmp
inc
fsubrs
inc
lea
pop
pop
xor
push
in
lods
sarb
sbb
ficoml
cltd
ja
shlb
into
popa
xchg
mov
jmp
mov
xor
idiv
xchg
clc
mov
aaa
and
pop
xchg
jl
jmp
call
stos
ret
stc
mov
sub
fnstcw
adc
movb
in
and
mov
or
lret
cmp
sarl
cmc
inc
orb
in
inc
mov
jno
and
cwtl
mov
ljmp
addr16
sbb
shlb
loop
repnz
ds
mov
aam
dec
sub
ja
jbe
out
jle
pushl
lret
ret
or
imul
int3
mov
mov
sbb
cmp
add
adc
cmp
sbb
jp
decl
xchg
clc
mov
inc
sti
xlat
pop
hlt
jmp
adc
or
outsb
popf
lds
hlt
xor
icebp
ljmp
std
test
dec
mov
fcmovbe
pop
jns
arpl
test
jns
std
adc
inc
adc
inc
int
jnp
lds
push
pop
mov
push
outsl
cwtl
ja
call
fwait
ret
sub
mov
or
jnp
adc
hlt
pop
ficoml
es
sbb
insb
xlat
decl
dec
fsubs
add
cmpsl
shl
mov
loop
push
dec
test
xor
cmp
sub
rcll
icebp
data16
ja
jl
inc
into
mov
cwtl
flds
inc
dec
in
dec
cld
insl
xchg
divl
pop
ss
mov
lods
push
jle
out
push
lods
mov
ss
pop
jnp
rcl
jp
pusha
shll
arpl
in
pop
shrl
test
movsl
mov
mov
idivb
lea
xor
aas
imul
xlat
sub
sub
pop
loopne
stos
inc
xchg
dec
pop
jge
pushf
push
test
push
sbb
xchg
stos
loop
jle
cmp
lock
fdivrs
nop
fadd
or
in
inc
rclb
sub
shll
pusha
pusha
sarb
mov
pop
jns
or
clc
mov
ss
fisttpl
pop
roll
scas
fstl
fsts
rclb
hlt
mov
nop
push
out
and
test
ljmp
test
xchg
mov
into
pop
jge
in
sbb
icebp
pushf
xor
addl
outsb
test
ljmp
scas
in
out
sub
lahf
mov
fnstsw
cmp
je
test
and
cwtl
testl
xchg
add
scas
push
jmp
addr16
data16
in
push
dec
jecxz
gs
or
push
adc
into
and
test
mov
pushf
cmp
jmp
and
cmp
hlt
in
fisubrl
mov
sbb
fdivl
repnz
iret
cmpl
leave
mov
in
cmp
es
cltd
push
out
push
call
outsb
dec
test
scas
jb
push
jb
dec
lds
sub
fs
jno
xor
fwait
into
push
jbe
aad
in
js
outsl
std
xchg
gs
mov
stos
sbb
mov
mov
jns
mov
pushf
cwtl
stos
call
loope
pop
pop
outsl
decb
test
out
out
cmpsb
in
in
imul
and
inc
outsl
mov
cli
scas
cmpsb
mov
mov
pop
sub
inc
push
mov
lret
sbb
fcmovne
jbe
shll
lret
outsl
xchg
scas
pop
scas
out
inc
xchg
mov
int3
pop
jne
and
lahf
pusha
call
push
add
cltd
adc
and
loopne
or
cmc
mov
nop
in
aas
lcall
test
ss
jmp
mov
push
dec
cmp
lret
imul
mov
sti
clc
push
jle
mov
dec
sbb
hlt
xor
xor
in
sbb
rcll
je
lahf
jb
and
add
jecxz
in
dec
adc
mov
pop
sbb
mov
js
clc
rclb
push
into
inc
or
xchg
adc
leave
jbe
cwtl
add
das
outsl
out
adc
push
sahf
cmp
xchg
adc
mov
cmp
enter
dec
incb
add
and
adc
cmpsb
loopne
mov
out
push
xchg
dec
mov
lea
push
pop
add
jl
andl
mov
sbb
test
dec
imul
mov
and
jbe
mov
mov
sbb
xor
sbb
jns
les
mov
les
ss
cmp
jecxz
ficoms
jecxz
sbb
push
sbb
cmp
and
arpl
sbb
sub
lds
ss
xlat
push
dec
into
movsl
push
dec
push
dec
sbbl
jmp
cmc
pop
enter
jl
and
xchg
addr16
ss
je
jo
lods
mov
cwtl
cltd
stc
and
sub
jns
repz
notb
sbb
xor
cld
jns
cld
jno
aas
andnps
scas
cmp
xlat
icebp
add
stc
xchg
and
sbb
adc
inc
mov
daa
inc
idivl
idivl
mov
imul
dec
enter
xor
ror
inc
loopne
jo
fadd
xchg
nop
xchg
hlt
lods
jp
cli
cltd
jb
bound
push
pop
push
outsb
add
xorl
xchg
les
jl
lahf
testb
ss
dec
ljmp
mov
sbb
cld
dec
sub
dec
cmp
jno
push
inc
mov
fcomps
pop
jno
jl
jns
dec
inc
add
fisttpl
pop
fs
pop
jae
aaa
xor
sarb
ret
or
imul
mov
testl
cmc
test
fildl
mov
ds
js
sbb
pop
or
sub
mov
repnz
and
and
test
jns
push
push
xor
aam
pop
popa
inc
in
sub
sub
xchg
std
lds
inc
scas
jg
adc
jb
sub
inc
leave
or
or
jecxz
arpl
out
mov
cld
xor
test
sub
addr16
mov
dec
xor
or
cmp
pop
dec
sub
je
popf
call
aad
xor
jg
stos
mov
ret
sub
icebp
dec
xchg
xchg
or
pop
sub
gs
dec
aam
rolb
adc
mov
scas
fisubrs
ret
psubusb
dec
push
adc
pop
or
push
adc
fldcw
scas
lcall
xchg
dec
or
outsl
stos
icebp
fs
mov
add
sahf
mov
cmp
push
xchg
movsb
push
frndint
cli
ss
scas
cli
push
inc
sbb
mov
outsb
in
sub
cmp
call
lret
lods
cwtl
and
iret
mov
pop
xor
inc
ds
pop
lcall
xor
mov
mov
sub
mov
jp
movsl
int3
daa
push
insb
std
inc
sub
lcall
faddl
and
gs
movsb
and
repnz
mov
mov
stos
add
sub
adc
xchg
je
test
leave
int
scas
stos
mov
popa
inc
and
fstpl
add
roll
pop
sti
xor
mov
jae
jbe
pop
mov
ljmp
dec
adc
push
cmp
mov
adc
mov
sahf
inc
test
adc
dec
dec
sub
mov
in
jnp
es
pop
xor
movsb
fdivrs
xlat
adc
ljmp
in
fcoml
cld
mov
lea
mov
sbb
out
lret
addr16
insl
imul
loop
ds
mov
add
push
aas
fidivrs
insb
dec
mov
mov
ds
push
pop
push
add
pop
jle
xchg
cli
insl
mov
rcl
push
aad
lods
mov
xor
sbb
jecxz
or
sti
adc
loopne
mov
idivb
stc
and
xlat
sub
pop
or
insb
sti
sub
js
bswap
sbb
inc
push
and
dec
imul
mov
push
in
cmp
out
jle
xor
mov
shll
add
jns
cmp
pop
jnp
inc
aad
push
cs
mov
xor
loope
clc
fnsave
dec
sbb
jae
xor
jmp
cwtl
ret
ss
in
or
and
aam
push
into
cs
xor
stos
add
movsb
sti
and
cwtl
sub
cltd
cmp
test
xorb
sub
shll
lea
jl
dec
mov
pop
push
sub
inc
lods
aaa
push
push
nop
and
adc
cwtl
fs
ljmp
fadds
imul
int3
sub
pop
cmp
and
dec
rcl
mov
hlt
jne
adc
push
mov
xor
jl
jg
xor
add
cltd
nop
xchg
in
xor
in
pop
fcomp
xor
nop
or
push
jns
cs
push
dec
dec
cmp
push
call
fisttps
mov
dec
add
add
movb
xchg
loope
addr16
test
or
push
fwait
add
sub
mov
pop
xor
xor
xchg
pop
push
subb
dec
mov
sbb
mov
mov
mov
je
imull
dec
inc
xor
pop
dec
mov
xchg
add
gs
push
int
test
mov
add
fmulp
jae
cmp
xor
xor
int
int3
inc
out
mov
or
inc
push
lret
stc
jmp
mov
nop
add
movsl
sbb
xchg
xor
mov
fwait
mov
les
cmpsl
lret
xchg
or
cmpsb
out
sarl
pop
pop
lea
ror
sbb
inc
jb
data16
outsb
lds
roll
pop
pop
cmpsb
stc
mov
aam
sub
out
pop
or
sbb
sbb
jge
cld
pusha
and
js
inc
es
in
leave
or
mov
push
loop
test
ds
sub
mov
fcmove
jb
fadds
dec
pop
jns
test
neg
jecxz
cmp
es
mov
mov
rorl
outsl
push
dec
xchg
xor
stos
outsb
inc
and
fwait
jno
cmpsl
or
out
lret
inc
adc
leave
mov
jnp
or
xor
add
leave
sbb
test
jne
lds
mov
rcrb
lods
fbstp
repz
ja
insl
call
je
mov
in
int
scas
jbe
mov
xchg
sub
popf
test
xchg
add
ljmp
pop
mov
jae
addr16
xchg
in
xchg
dec
dec
mov
dec
gs
pop
dec
push
roll
adc
mov
cld
or
sbb
pop
ret
fwait
push
dec
push
jns
lods
jl
xor
and
sahf
mov
xor
imul
or
cmc
call
cli
mov
stc
mov
jmp
mov
das
subb
xor
mov
jns
data16
subl
and
ds
call
test
sub
outsb
gs
inc
cwtl
inc
add
jecxz
fistpl
inc
outsb
les
jmp
dec
inc
and
mov
in
into
lods
stc
push
mov
add
dec
lods
frstor
inc
in
push
das
bound
scas
data16
and
test
sahf
dec
icebp
mov
enter
outsb
sub
push
mov
cli
mov
pop
out
lahf
inc
sbb
push
and
cmovnp
mov
fucomp
rol
test
xlat
cld
sub
scas
testl
pop
into
enter
xchg
dec
jno
sbb
cmp
leave
in
sbb
inc
pop
push
mov
inc
or
pop
pop
add
addb
jno
mov
out
sahf
out
loopne
pusha
loopne
lock
xchg
inc
pop
dec
out
mov
jp
inc
cmp
jbe
jge
pop
sub
mov
iret
sahf
loopne
mov
add
sti
lcall
or
mov
ljmp
pop
xor
das
push
sub
stos
cli
aas
xchg
popa
push
mov
data16
lods
xlat
jae
adc
out
sbb
mov
ret
xor
mov
mov
adc
xchg
sub
sub
sarl
fadd
stos
sub
loopne
adcb
add
fdivs
jo
mov
or
add
cmp
mov
push
xchg
test
faddl
imul
pop
bnd
imul
filds
repnz
adc
mov
ret
push
lock
xchg
xchg
mov
out
adc
mov
cli
shll
subb
push
in
and
xchg
popa
xchg
shlb
ja
add
sub
stc
xchg
jae
leave
cmp
scas
mov
push
jo
push
addl
mov
add
cmp
mov
pop
adc
sbb
ja
pop
or
out
dec
mov
les
jb
gs
out
mov
and
xchg
dec
push
es
repz
pop
xchg
aam
add
mov
xor
bound
lahf
cmpb
mov
lods
icebp
int
cli
pop
test
mov
add
mov
lea
xchg
lods
jae
xchg
jo
subb
jo
ret
sbb
data16
lcall
in
je
push
outsl
or
enter
sbb
mov
data16
xlat
lea
lret
xchg
stos
cld
sbb
pusha
push
pop
inc
dec
movsl
push
enter
mov
out
in
sti
pop
jno
jle
fcmovb
mov
cltd
xchg
mov
repz
ret
popa
pop
out
inc
fs
adc
sbb
pushf
mov
mov
inc
mov
cmp
in
fwait
mov
sbb
fldl
xor
jae
sbb
addr16
xlat
pop
rclb
dec
xchg
loop
scas
pop
arpl
adc
push
movsb
sbb
inc
ss
jp
push
call
or
divl
mov
push
pop
test
fs
int3
lcall
popl
rorb
test
inc
xchg
mov
loope
jg
js
stos
push
enter
shll
mov
test
in
push
hlt
rcr
outsl
xchg
pop
movsl
faddl
movsl
and
les
pop
pop
in
sti
int3
rcrb
push
pop
push
mov
pop
test
negl
rcrb
psubusb
add
sub
dec
mov
mov
dec
dec
push
stos
shrl
xchg
stos
mov
outsb
rcll
and
fiadds
movl
cmp
lock
push
sub
addr16
cli
jne
push
cmpsb
or
in
add
ret
std
push
mov
negb
cmp
scas
data16
lods
mov
cmp
fldenvs
mov
dec
gs
subl
outsb
jns
jmp
add
jle
jl
jle
sbb
sub
cmp
out
cmp
cmpsb
mov
les
sahf
adc
xchg
stc
mov
aaa
test
cmc
rclb
test
js
shlb
jmp
pop
add
mov
out
pop
and
pop
pop
mov
fdivr
add
pusha
cmpsb
push
cmp
cwtl
sbb
std
sbb
sub
jecxz
dec
lahf
cmpsl
das
xchg
pop
dec
push
mov
jmp
cs
in
add
jne
in
jae
sub
jecxz
movsl
add
in
pop
daa
or
or
pop
push
popf
fdivrp
cmc
xchg
nop
outsl
mov
in
mov
insl
mov
les
mov
das
mov
or
in
fnop
add
cmp
dec
rclb
sahf
test
mov
add
or
aaa
notl
jbe
pop
lret
lods
scas
orb
icebp
gs
ret
popf
xor
das
fwait
push
cmp
mov
xor
xor
push
adcb
pop
dec
inc
xor
std
mov
inc
stc
jnp
jge
pop
std
or
lods
stos
mov
les
bound
lds
loope
mov
adc
stos
ljmp
movsb
ja
pushf
loop
rorb
inc
adc
out
sub
inc
imul
jle
cmp
ss
lret
dec
xchg
sbb
xor
sub
mov
xchg
aam
jnp
lret
lods
xchg
ja
mov
inc
adc
cmpsl
add
mov
jmp
xchg
out
add
push
sub
jnp
dec
xor
in
xor
repnz
jbe
in
neg
out
sub
fidivrs
ficompl
data16
jae
sub
sbb
mov
aaa
add
sbb
or
into
xor
mov
or
xor
daa
fimuls
mov
push
adc
push
jecxz
jnp
dec
std
mulb
push
dec
in
sub
add
loope
dec
xor
push
scas
pop
add
sub
stc
and
xchg
xchg
dec
add
lea
stos
popf
adc
popa
inc
add
mov
aaa
dec
movsl
adc
jnp
adc
sbb
jl
push
fidivrl
mov
ret
mov
aad
cs
add
into
mov
add
push
pop
cmp
mov
adc
push
add
lea
push
mov
xchg
rolb
sub
inc
in
data16
mov
xor
and
xchg
inc
add
xchg
jns
mov
xchg
movl
pop
mov
sub
sahf
rcl
popf
fadd
aaa
add
push
out
scas
sub
mov
jp
mov
push
or
sub
cltd
pop
rclb
xor
pop
outsl
hlt
rcrl
xor
push
add
or
cmp
and
cld
test
push
cwtl
gs
daa
sbb
pop
imul
scas
dec
dec
sub
dec
insb
jne
fisttpll
adc
jle
loopne
xchg
push
cmp
stos
sub
adc
ficomps
dec
adc
jb
int
lods
pop
leave
pop
outsl
cmpb
inc
inc
cmp
xchg
push
sub
cmp
stos
add
pop
lret
fisubrl
inc
or
mov
or
adc
xor
inc
or
aam
mov
repnz
push
add
xlat
push
leave
push
mov
push
insl
dec
xor
xor
add
xor
inc
jg
adc
sub
adc
jecxz
add
insl
fwait
mov
push
xchg
aam
jnp
dec
repnz
jb
mov
cltd
pop
jecxz
or
add
test
mov
xor
movsl
call
sub
mov
xor
inc
fs
pusha
and
orl
xor
fsin
inc
leave
loopne
pop
lods
pop
arpl
xchg
in
push
pop
xchg
and
xchg
sti
inc
mov
loopne
repnz
jae
shll
mov
mov
sbb
jle
and
push
cmc
inc
xor
inc
iret
mov
xor
inc
sarb
jmp
mov
pop
push
lahf
xchg
lock
lods
dec
or
les
stos
nop
repnz
cmpb
add
and
repnz
ds
xchg
mov
or
or
rol
out
fsubp
jle
aaa
mov
mov
xor
mov
sub
fisubl
dec
in
and
xchg
mov
cmc
out
xor
lock
mov
ret
movsb
roll
mov
repnz
popa
cltd
add
jnp
and
pop
pop
outsb
in
adc
xchg
push
or
add
shll
aas
fmull
fisttpll
push
or
and
cltd
pop
je
das
sbb
lock
sbb
mov
xor
jmp
out
sbb
push
cwtl
fld
shrl
out
loopne
insl
mov
icebp
roll
pop
mov
and
jg
das
mov
pop
jmp
add
jbe
dec
hlt
shll
ret
mov
clc
jecxz
lahf
jb
jnp
pop
push
inc
xchg
dec
ljmp
xchg
jg
jae
sub
mov
jmp
or
frstor
pop
pusha
sbb
pop
mov
jle
push
pop
pop
repz
mov
xor
sub
adc
jecxz
popa
sti
andl
adc
mov
lcall
mov
mov
pop
sti
aam
xchg
lea
pusha
xchg
xor
dec
lods
inc
mov
cmp
test
popa
xchg
xor
call
adc
jno
int
es
scas
mov
adc
cmp
leave
mov
mov
mov
shrb
pop
cmpsb
popf
int3
test
push
aaa
leave
mov
pop
mov
imul
arpl
je
mov
pop
mov
sbb
sar
gs
mov
mov
dec
and
sub
xchg
pop
adc
mov
out
sbb
push
cltd
push
test
rcrl
jne
out
jmp
pop
lcall
xor
loop
cmp
jecxz
test
and
sub
xor
push
sub
xor
cwtl
movaps
jae
cmp
lret
pop
popa
dec
xchg
js
out
fsts
xchg
imul
mov
roll
xor
xor
cmp
mov
inc
clc
divb
sub
imul
cmp
ljmp
das
and
scas
sub
mulb
mov
es
insb
pop
pushf
cs
inc
pop
dec
dec
fistpll
cmp
arpl
jne
adc
cmpsl
std
adc
sar
add
clc
mov
mov
mov
out
mov
stos
mov
in
jge
inc
in
lods
adc
fcoms
rcr
cltd
out
pop
pop
and
hlt
enter
out
pop
sbb
sub
push
dec
dec
mov
jle
and
sbb
jo
add
rcr
push
pop
ljmp
shrl
popf
xchg
loopne
rorb
xlat
inc
out
push
out
push
ss
popa
push
jp
into
mov
inc
pop
or
or
lahf
lret
rorb
or
pop
call
xchg
test
leave
jecxz
pop
cmpsb
xor
fs
inc
aad
shll
fisttpl
fdivrl
pop
adc
or
inc
dec
iret
cmpsl
aaa
movzbl
push
push
arpl
aaa
bound
and
enter
cmp
or
lea
jbe
sub
push
mov
pop
jge
xchg
jnp
xor
mov
push
jge
imul
movsb
pop
out
mov
adc
sbb
sub
imul
dec
stos
stos
inc
repnz
and
adc
dec
in
xchg
mov
mov
adcl
je
rclb
add
lock
push
filds
fistpll
mov
mov
adc
call
mov
std
xor
sub
iret
xchg
movsb
or
mov
imul
xor
adc
mov
xor
cmpsb
fcoml
ficoml
and
adc
sbb
sub
ret
daa
fdivs
and
fs
add
adc
sbbl
xchg
xor
aas
lahf
xchg
call
jge
xchg
call
loopne
xor
adc
hlt
lcall
dec
push
sub
sbbb
cmp
mov
fnstenv
mul
or
or
aaa
fistps
insb
sar
fmull
sbb
test
pop
lahf
jae
cmp
into
sbb
bound
into
test
sti
das
push
adc
mov
add
inc
cltd
mov
cmp
bound
pop
shrb
or
sbb
filds
xor
xchg
loop
scas
lock
loope
jge
sbbl
aaa
cmp
mov
jle
addb
sub
ret
test
jne
lahf
addr16
inc
or
dec
bound
rcl
shlb
fsub
nop
and
int3
in
mov
and
shll
inc
push
daa
test
adc
mov
insl
int3
and
pop
and
vpsadbw
lcall
adc
jnp
push
mov
cmc
test
push
negl
add
push
xchg
jns
cld
pop
sbb
rcll
test
push
fcom
ljmp
mov
in
in
imul
jbe
ret
cmp
test
je
cwtl
ret
mov
jg
mov
mov
loope
xchg
sbb
shl
clc
cwtl
outsl
shrb
in
mov
cmp
mov
clc
cmpsb
or
dec
scas
clc
and
mov
icebp
push
ficompl
movsb
xor
mov
inc
push
icebp
in
fwait
jne
lods
adc
pop
out
xor
cltd
aad
frstor
stc
test
stc
jge
out
pop
and
imul
int
test
repnz
loop
out
leave
bound
dec
arpl
ret
lret
stos
movsb
add
fcmovnb
outsb
loope
mov
jns
pop
in
mov
ds
push
dec
je
sbb
push
loope
inc
mov
jecxz
inc
divb
cmp
cmp
push
out
mov
mov
pop
mov
cmc
clc
or
add
lcall
jmp
push
and
lock
roll
fistpll
movsl
std
push
orl
inc
or
mov
insl
insl
cld
aas
jbe
adc
sarb
aas
mov
add
std
sbb
filds
or
xchg
testl
dec
sarl
addb
subl
outsl
adc
sbb
jns
sbb
int
repnz
push
mov
adc
jne
fisubs
mov
sub
add
or
ljmp
lahf
sub
je
aaa
movaps
mov
or
cltd
pop
stos
pop
jp
jo
mov
lahf
dec
adc
pop
adcb
xchg
mov
mov
cld
insb
or
rcll
shr
int3
test
fs
aam
push
rcll
inc
sbb
mov
and
xor
pop
iret
imul
mov
in
in
or
adc
add
or
inc
and
push
paddsb
sahf
insb
scas
sti
pusha
insb
pushf
aam
jbe
jne
and
testb
ja
popa
test
fiaddl
in
cmpsb
int
insb
xor
mov
and
pusha
imul
pop
jo
repnz
pop
flds
ljmp
mov
scas
mov
cmp
dec
fs
cli
dec
lret
push
mov
xor
inc
mov
jmp
jmp
in
cmpsl
push
add
push
out
dec
mov
dec
lds
pop
cltd
int
out
int
aam
aaa
pop
dec
mov
aaa
and
push
mov
sahf
dec
ds
icebp
or
pop
jo
pop
fistpl
xlat
aaa
pop
xor
in
pop
xchg
push
lahf
lea
fiaddl
insl
sbb
cltd
ret
xor
movsb
xor
sub
fldenv
test
jecxz
add
adc
and
pop
mov
cmc
add
ss
mov
out
pop
lret
xchg
mov
push
arpl
mov
mov
mov
bound
lds
cmpl
mov
push
jle
add
pusha
test
cmpsb
xchg
shl
jecxz
daa
push
pop
clc
push
dec
or
mov
mov
pop
das
push
sub
inc
jle
repnz
aam
out
loope
mov
pop
cmpl
jp
sub
cmpsl
jno
jb
push
cmp
push
stc
add
pushf
out
divb
adc
mov
orl
fisttpll
lret
outsl
shrb
into
inc
jmp
pop
popa
leave
fistpll
adc
inc
hlt
cmp
pop
out
mov
lods
test
inc
mov
test
mov
ja
lret
push
push
push
xor
pop
cs
pop
mov
shll
inc
xchg
popl
fisttpll
dec
icebp
push
xchg
mov
mov
jo
faddl
push
scas
in
mov
jmp
inc
dec
cmp
jmp
sub
fstps
iret
jmp
repz
mov
or
mov
and
fistpll
mov
aaa
ficomps
push
mov
icebp
mov
cwtl
into
xor
mov
js
clc
mov
pop
out
insl
scas
test
xchg
jge
jno
imul
lods
sub
shrl
push
cmpsb
mov
cltd
mov
stc
ret
rcrb
pusha
sahf
push
add
sub
and
mov
incl
clc
cmp
shlb
or
jae
enter
sbb
fwait
pop
addl
sbb
xchg
ss
out
dec
es
pushf
in
xor
scas
lods
mov
int
scas
pop
xchg
js
add
mov
test
inc
iret
mov
daa
mov
mulb
hlt
xchg
jmp
inc
sub
sbbl
cmpsb
iret
lods
mov
push
in
test
lods
xchg
sbb
or
fstps
mov
and
stc
mov
imul
pop
clc
loopne
add
dec
dec
loop
aaa
call
mov
dec
fsubs
adc
mov
jnp
or
ss
add
shlb
cs
sbb
mov
inc
loopne
dec
scas
pop
mov
shr
movsl
sbb
jbe
cmpl
mov
jnp
push
pop
cmp
inc
xor
xlat
outsb
cmc
mov
ds
movsl
addb
xor
xorb
inc
ret
out
dec
cmpsb
int
divl
jbe
dec
add
push
mov
test
cmp
das
push
roll
pop
adc
jno
cmp
test
mov
xor
shrb
dec
mov
cmp
jbe
pop
es
js
mov
mov
mov
lret
jne
jp
inc
imul
or
aad
je
dec
lea
std
cmpsl
mov
mov
inc
pop
push
or
in
fmulp
xor
pop
je
cmc
mov
testb
push
push
pop
iret
cmp
test
pop
clc
aad
rorl
call
lock
adc
lock
repz
fildl
jbe
or
aad
cmpsb
insb
ret
clc
jnp
repnz
lcall
push
xchg
out
adc
into
ja
inc
fcoms
cs
sbb
xor
xorb
and
jge
inc
or
popa
ljmp
rolb
insl
dec
fs
icebp
pop
cmc
inc
push
or
fadds
push
sbb
testb
es
xchg
test
push
fiaddl
and
fcmovnbe
in
dec
mov
cmp
xor
scas
xchg
insb
mov
lret
jne
lods
nop
dec
mov
aas
insl
popf
pushf
mov
push
adc
push
fwait
add
mov
rorb
sbb
adc
mov
cld
dec
int
fnstsw
jge
push
repnz
mov
repz
cmp
test
es
outsb
adc
lock
dec
lds
movsl
cmc
cmp
sub
pop
push
ror
pusha
mov
sub
movsb
scas
add
jns
lret
mov
push
cwtl
mov
jb
add
adc
lds
push
jnp
jecxz
inc
xor
fisubl
gs
xlat
xchg
dec
mov
lcall
out
xor
adc
adc
sub
iret
adc
xchg
xchg
ljmp
sub
xchg
xchg
xchg
mov
add
leave
lret
push
mov
call
scas
adc
arpl
inc
cmp
bound
inc
aas
mov
xchg
jb
ljmp
xor
popl
repnz
fists
adc
std
sub
push
test
mov
leave
adc
jns
mov
out
xor
xchg
push
mov
mov
jne
mov
sbb
mov
mov
popa
push
ljmp
mov
mov
adc
push
mov
lret
orb
int3
nop
cmp
dec
dec
cmc
push
arpl
cmp
add
lret
cltd
mov
dec
and
sub
scas
pop
into
fsubrl
mov
out
pushf
leave
mov
mov
cld
xchg
xchg
adc
sbb
mov
and
cmpsb
lods
xor
push
push
sub
xlat
add
loopne
xchg
sub
test
or
arpl
loop
call
lds
outsb
icebp
mov
cmp
sub
and
sub
inc
fcomps
decl
hlt
sub
popf
push
aas
shlb
ret
mov
and
js
inc
dec
lds
fcoms
testb
out
jno
pop
cmc
mov
inc
gs
fsubs
pushf
cltd
fwait
rcrb
lret
sbb
fldcw
outsb
mov
jae
jecxz
shrb
push
into
and
lods
mov
lret
sub
adc
inc
sahf
pop
sub
js
inc
repz
lret
hlt
sub
int
std
xor
cmc
cmpsb
xorb
xchg
enter
daa
pushl
or
and
mov
lods
loope
push
mov
adc
xchg
xor
jnp
mov
lcall
xchg
jl
fisubrl
incb
cs
xor
rcrl
mov
cmc
jbe
pop
inc
ret
inc
sbbl
pop
mov
mov
sub
dec
mov
mov
jmp
loop
sub
clc
test
push
pop
arpl
push
popa
imul
cmp
adc
outsb
push
out
outsb
jl
adc
cwtl
notb
dec
insb
jl
sbb
insb
mov
sbb
dec
mov
test
xor
cli
movsb
or
xor
pusha
pop
das
test
lret
lds
es
hlt
and
xor
ljmp
lret
sub
dec
imul
and
icebp
cmp
mov
jbe
pop
jg
mov
mov
sbb
pop
adcl
xor
dec
aam
mov
test
or
pop
push
cmp
and
mov
andb
clc
push
cmpsb
jnp
pusha
int3
adc
insb
inc
pop
in
and
xor
pop
xchg
stos
movsl
jae
push
data16
cwtl
cmp
outsb
xchg
hlt
imul
fimull
xchg
fs
adc
push
dec
shll
fsubrl
pop
cwtl
daa
push
test
scas
or
rorb
mov
push
ret
rcrb
adc
jmp
stos
sbb
ret
pop
call
xchg
push
mov
sarb
mov
xchg
inc
push
mov
out
ss
gs
jb
mov
or
pop
add
mov
lock
and
fwait
out
sbb
fwait
push
loop
or
mov
jbe
jle
jmp
ds
mov
mov
or
movsl
cmp
or
add
and
sbb
jo
mov
negb
xchg
mov
jns
in
lcall
xor
mov
hlt
insl
inc
shl
call
shll
or
decb
and
mov
push
shrl
lret
add
in
lahf
std
push
pop
scas
xor
jnp
adc
adc
pop
push
fldl
jle
cld
insl
sbb
jecxz
in
inc
adc
popa
mov
mov
cmp
movswl
stc
iret
pop
sahf
mov
xchg
dec
mov
cmpb
or
adc
xchg
push
or
mov
jb
popa
inc
fsubl
jecxz
mov
stos
pop
jae
and
sar
int3
xchg
lcall
notl
orl
fistpl
push
daa
mov
push
aaa
mov
jp
ja
xor
xchg
ds
inc
push
xchg
mov
in
mov
adc
push
icebp
xor
bound
jmp
xor
xchg
mov
inc
inc
mov
mov
xor
ror
sub
fnstsw
data16
icebp
iret
jge
xchg
in
mov
shrb
test
xchg
inc
mov
enter
jb
addr16
push
or
pop
aaa
in
jl
cmp
out
sbb
xchg
mov
and
data16
xchg
movsl
mov
mov
jmp
out
mov
push
in
pop
mov
repz
cmp
sahf
mov
cwtl
jle
and
aad
sbb
out
xchg
jmp
dec
jmp
push
add
adc
xchg
icebp
inc
mov
xor
mov
aas
pop
mov
aad
cmp
xor
into
pusha
push
jb
mov
shrb
adc
leave
or
dec
mov
pop
sbb
in
daa
bound
iret
sub
div
jecxz
adc
jnp
je
and
into
push
rcl
adcb
xchg
insb
fsubrs
stos
add
and
je
mov
adc
xchg
sbb
push
rol
sub
cmp
out
xchg
data16
mov
arpl
or
fnsave
mov
mov
add
mov
repz
rorb
cmc
cmp
into
mov
dec
inc
xchg
xchg
mov
dec
xor
repnz
das
and
pop
mov
fisttpll
sbb
sub
loope
mov
fistps
in
inc
adcl
jp
lock
mov
pop
aam
inc
mov
call
jp
mov
ljmp
fcom
adc
lret
dec
push
call
ja
ret
test
enter
xchg
js
test
fcmove
xabort
loop
push
loopne
iret
pop
pop
call
loope
in
in
jo
adc
xchg
pop
jmp
lcall
insl
inc
inc
and
or
mov
mov
jns
imul
in
neg
movsl
leave
or
adc
pop
gs
movsl
iret
repz
cmp
out
dec
adc
je
stc
into
push
fsubs
mov
xor
rorl
push
repnz
jle
mov
xor
cmpb
movsb
aaa
or
jg
jecxz
jne
lcall
cmp
lds
mov
in
mov
xchg
les
mov
and
inc
jno
fmuls
sub
idivb
andb
repz
mov
rolb
adc
ret
inc
push
or
xor
push
test
les
dec
dec
cmp
adc
cltd
sbb
jge
fwait
das
jne
test
mov
xchg
adc
fsub
jp
fnstenv
bound
into
mov
nop
or
bound
xchg
xor
xchg
sub
xchg
sub
ret
test
add
push
push
mov
jmp
xchg
xor
fldcw
and
lea
mov
stc
js
idivb
cmpl
lret
mov
inc
inc
or
test
cwtl
and
adc
mov
nop
arpl
adc
stos
stos
ret
loope
test
dec
test
sub
xlat
arpl
inc
cltd
mov
or
pop
or
decl
mov
neg
xor
jb
fcmovbe
outsb
mov
cmp
sti
sub
fiaddl
fisttpl
jae
cmp
rorb
jnp
xor
aas
lea
js
inc
test
enter
insl
hlt
push
sub
into
movsb
xor
mov
push
inc
aad
pop
xor
hlt
sub
sbb
aas
jle
and
sbb
shll
out
subb
into
sub
mov
sbb
or
aaa
and
xchg
sub
and
stc
adc
xchg
fmuls
and
push
mov
retw
lret
movsl
adc
push
imulb
lods
pop
loope
dec
loopne
fildll
add
adc
movsl
imul
shrb
push
adc
lock
lret
sub
out
push
test
lock
out
or
hlt
xchg
push
adc
movsl
sbb
add
into
cmp
pop
xlat
pop
pop
lods
or
rcr
jbe
cs
cmpsl
cld
in
jle
push
lods
lcall
push
jne
pusha
or
xchg
daa
js
aas
mov
jb
pop
adc
push
jle
pop
adc
sbb
jnp
pop
incb
int
mov
iret
dec
xchg
repnz
mov
addr16
rcll
and
mov
jb
sbbb
aaa
jle
pop
lock
cmp
xchg
outsl
dec
lcall
xchg
mov
loopne
shrb
mov
sti
aad
scas
mov
inc
sarl
push
leave
adc
lret
into
or
jl
xlat
sbb
outsl
icebp
idivb
in
mov
insl
mov
jno
int3
popa
push
outsl
adc
cmc
adc
lret
xor
cmp
in
mov
inc
icebp
out
sti
lods
push
sub
lret
test
enter
filds
xchg
call
or
jno
inc
adc
imul
gs
sub
cs
xor
jnp
test
pop
or
mov
fistpll
pop
mov
fdivr
mov
les
and
sub
das
cmp
insb
or
lods
in
and
cmpsl
sub
mov
mov
or
lcall
in
dec
jbe
lret
xor
jg
in
dec
mov
adc
add
movsl
or
jge
jp
sub
jle
enter
repz
jne
jl
aad
dec
xor
imul
mov
push
jle
in
add
mov
push
ss
mov
jno
shrb
inc
push
lods
inc
mov
xchg
lods
inc
cwtl
and
lds
cmp
out
je
jl
outsw
jne
jp
cmp
fcmovnu
mov
stos
xor
scas
mov
dec
cs
testb
scas
sbb
cmp
in
or
lcall
mov
sub
ficoms
mov
gs
mov
div
push
out
dec
mov
push
mov
test
xor
mov
imul
jecxz
test
cmp
and
sbb
bound
cwtl
stc
sbb
lcall
pop
pop
adc
aas
mov
cli
jl
mov
and
cmpsb
mov
jb
dec
jnp
aas
push
mov
aam
sbb
ljmp
gs
out
adc
in
rolb
adc
sbb
rcr
repz
xor
lret
add
dec
in
jo
clc
insb
push
add
sub
adc
fucomp
jl
xchg
add
fimull
mov
pop
mov
and
incl
sbb
mov
aad
jmp
ret
test
ret
cmp
aaa
xor
lods
stos
pop
push
das
cs
jg
mov
mov
push
or
dec
xorl
xor
outsb
pop
mov
in
and
sar
cmpsb
outsb
test
ror
add
orb
jno
push
dec
push
ret
or
xor
jle
mov
mov
sbb
lret
and
xor
fwait
dec
lods
pop
inc
xchg
rorb
fsubs
sub
jecxz
mov
and
out
jnp
ret
mov
rolb
cmpsl
or
adcb
movsb
jecxz
lods
mov
cmpsb
mov
ss
lcall
dec
aam
jae
movsb
xchg
scas
lea
adc
pop
cmp
fucomip
mov
sub
add
adc
cmpsl
mov
sbb
jnp
inc
jns
sbb
flds
insb
pop
mov
out
notb
imul
cli
dec
insl
stos
mov
or
inc
pop
or
into
jbe
ss
jg
sbb
popa
cmp
or
inc
xchg
scas
pop
dec
rclb
dec
and
icebp
leave
jmp
lahf
mov
pop
add
mov
push
outsb
xchg
pop
test
mov
pop
pop
imul
or
subb
mov
dec
jae
jmp
jno
pusha
lods
daa
jge
test
test
push
cmc
jmp
mov
push
inc
insl
cmp
jg
mov
cld
adc
sub
mulb
jmp
mov
push
pop
rcrl
push
mov
mov
repnz
sub
ja
inc
pop
popa
insl
arpl
sub
outsl
cs
faddl
pop
push
and
or
or
pop
icebp
add
add
or
ret
cmp
les
push
add
push
jnp
add
adc
mov
mov
out
movsb
lea
jg
adc
xchg
push
pop
das
ret
push
jle
push
sub
repz
mov
jge
mov
out
in
jo
mov
iret
add
aam
repnz
mov
fwait
jg
bswap
mov
xchg
pusha
push
clc
mov
mov
in
call
jnp
jge
mov
jp
xchg
in
out
testb
dec
mov
push
loopne
cmpl
lret
jp
mov
mov
adc
sbb
inc
daa
xchg
push
lret
outsb
and
xor
mov
xor
xchg
idivl
dec
lock
sub
cld
lret
mov
push
stc
dec
lods
pand
popf
movsl
clc
lea
push
mov
mov
pop
push
test
xor
xchg
or
inc
sub
pop
mov
int
int3
shll
hlt
aad
iret
cmp
xor
jl
pop
lds
arpl
es
lods
jecxz
xor
and
ret
mov
addl
inc
dec
jg
repnz
data16
cli
les
ljmp
cmpsb
lret
cmp
fwait
int
xchg
and
lcall
add
mov
shlb
ljmp
mov
rolb
mov
cs
and
jge
dec
cmpsb
dec
cltd
cltd
ljmp
test
sbb
neg
xstore-rng
cmpsl
xchg
and
fbld
jo
rcrl
dec
outsb
sbb
arpl
stc
adc
and
xchg
jp
out
fs
fnsave
xor
enter
mov
hlt
inc
pop
out
xor
jns
into
and
inc
mov
dec
lods
inc
arpl
xchg
inc
push
mov
pop
sahf
rorl
test
cli
inc
cmp
mov
sti
or
addl
cmpsl
and
xchg
dec
fwait
cltd
icebp
xchg
test
xor
or
in
leave
sbb
popf
push
cmp
mov
add
jg
aam
sub
iret
stos
dec
call
loope
pop
sub
xor
pop
ja
cmp
call
dec
mov
sub
cmp
and
test
mov
inc
pop
dec
pop
cmp
mov
lea
xor
inc
xlat
stos
stc
add
sub
repnz
mov
and
sahf
shll
add
cmp
fisubs
arpl
ds
push
pop
jbe
comiss
inc
sub
xchg
bound
loope
in
xor
mov
sbb
mov
dec
mov
dec
cmp
mov
mov
adc
das
fdivr
fsin
sahf
aad
outsb
movl
mov
sti
pop
cmc
loopne
xchg
lret
dec
sbb
pusha
ja
jb
scas
and
or
int3
push
addr16
cwtl
mov
imul
leave
in
std
ljmp
mov
push
adc
ss
outsb
push
pop
leave
hlt
lahf
or
sbb
or
inc
fmulp
and
les
sbb
scas
xchg
movsl
call
dec
test
xchg
adc
inc
mov
and
icebp
ret
pushf
mov
sahf
push
xor
jge
and
icebp
cld
cmpsb
or
push
mov
js
loope
mov
inc
pop
pop
lds
nop
addb
xchg
sbbb
repnz
and
lret
jg
pop
shll
int
jns
inc
sub
jg
aaa
cmp
ljmp
push
xchg
ss
sar
sar
mov
mov
adcl
insb
pop
mov
cmp
insl
stc
cvtpi2ps
test
lock
inc
mov
into
mov
pop
sbb
or
push
or
or
scas
ss
mov
fldl
jle
and
scas
repz
adc
jge
jnp
aaa
push
cs
cmpsl
aam
jmp
mov
imul
dec
data16
ret
shr
sub
hlt
cmp
mov
cld
add
shr
lret
push
int3
add
adc
jl
cmp
ljmp
pop
addr16
or
lret
lahf
into
test
stos
xchg
or
gs
loope
jns
mov
aas
mov
lret
mov
fwait
mov
jnp
lahf
daa
and
jne
jle
adc
cmpsl
push
push
cmp
cltd
xor
jnp
roll
xchg
add
stos
pop
int3
stos
lods
and
mov
xchg
mov
and
mov
xor
into
pop
ffree
jge
fwait
cmp
and
mov
or
idivl
js
vmwrite
test
seto
and
cmp
int
xchg
xlat
call
mov
fisttps
ret
dec
cwtl
add
cmp
cmpsb
sbb
ret
fstpt
add
mov
jnp
das
loope
sahf
xchg
sbb
mov
jns,pt
rcll
cmp
lahf
je
andl
into
cmpsl
add
outsb
das
jo
pop
inc
xor
mov
gs
push
stos
adc
jmp
push
mov
cmp
pushf
adc
dec
push
or
sub
push
adc
imul
adc
mov
into
or
jno
push
bound
cmp
xor
cmc
je
lods
adc
xor
jo
xor
das
sub
pminub
adc
cltd
xchg
inc
fsqrt
inc
sub
out
loopne
pop
sahf
sbb
mov
add
mov
mov
add
xor
repnz
jl
rclb
insl
cmpsb
xor
pop
stos
dec
cmc
repz
dec
dec
in
test
loop
pop
pop
and
sub
push
cld
sarl
mov
imul
xchg
add
push
xor
bound
fistpll
xlat
in
adc
sub
mov
test
test
cltd
pop
stc
or
ror
sar
hlt
sbb
out
jb
dec
loopne
pop
sbb
mov
es
and
fwait
xorl
jl
fcoml
push
mov
and
rorb
jb
cmp
aas
mov
addr16
add
mov
xchg
sti
adcl
lret
mov
and
inc
xchg
dec
inc
movsl
hlt
negb
and
shll
movsl
fldcw
xchg
outsl
jmp
mov
add
sarb
pop
jne
out
in
push
aaa
fcoms
push
add
adc
ret
add
xor
sarl
hlt
adc
pop
rdtsc
cmpb
cmp
xor
sti
xor
xor
lock
jbe
lcall
cli
imull
andl
lret
adc
das
das
jmp
xchg
insl
jb
inc
fcmove
mov
inc
popf
or
xor
add
jle
jmp
or
je
push
mov
pop
repz
pop
mov
ljmp
out
xchg
pop
addr16
es
movsl
dec
inc
xchg
mov
pop
out
jp
add
xorb
pop
out
icebp
adc
add
push
xchg
mov
mov
cmp
stos
mov
push
mov
in
ds
sbb
test
data16
sti
jge
cmp
jne
aas
cld
xor
dec
dec
cmp
scas
jne
sub
xchg
jp
jb
adc
sbb
repnz
inc
loopne
and
leave
loop
and
aas
sub
insl
fcomps
movsb
adc
cmc
sahf
mov
cli
push
push
xchg
fsubrs
pop
mov
jg
or
les
rcll
iret
ret
xor
nop
mov
loope
sbb
adc
scas
jb
bound
mov
push
xor
icebp
jnp
push
sbb
dec
and
jg
ret
adc
pop
lods
xchg
and
push
ss
fwait
xlat
aam
outsb
ret
add
fwait
sbb
js
pushf
cmp
lock
fs
add
sub
jb
mov
jnp
fcompl
mov
jmp
lods
aas
addb
push
ret
aam
outsl
ljmp
jb
mov
jb
dec
ja
mov
addl
arpl
xchg
add
stos
lods
sub
leave
into
mov
insl
nop
negl
fldt
popf
sub
mov
pop
jne
lret
xchg
cmpsb
xor
ja
push
iret
shll
pop
jae
mov
arpl
jo
mov
enter
add
stc
subb
inc
popf
jl,pn
pop
inc
ret
mov
adc
cmp
dec
or
dec
cltd
pop
mov
cld
inc
test
jbe
pop
fildl
jle
mov
lods
sbb
divb
inc
in
in
sub
cmp
rorb
jae
xchg
popf
fs
mov
jbe
add
mov
fstpl
testl
mov
jbe
push
scas
jmp
mov
leave
loope
or
xchg
inc
lds
and
cmc
push
xor
cwtl
push
std
rorl
int
ffreep
lret
loopne
in
ja
add
mov
sbbb
aas
mov
imul
and
and
mov
dec
ljmp
dec
lea
adc
rol
in
es
push
hlt
fsub
adc
cmpsl
mov
dec
ror
data16
adc
or
aaa
sub
ljmp
addb
movsl
jmp
lcall
sbb
jno
fwait
sbb
xor
xor
cmp
xor
dec
dec
bt
imul
dec
inc
mov
nop
cmpsl
or
inc
jg
addb
dec
mov
push
fdivp
cmpb
ficomps
push
aam
cmp
cmp
lahf
or
xchg
inc
jb
sti
imul
in
inc
sub
cltd
or
jle
or
int3
sbb
pop
jnp
ret
rolb
xchg
sub
daa
dec
loope
dec
aaa
leave
sub
and
cld
out
in
int
dec
cmpsl
scas
fiaddl
mov
out
in
sub
push
lahf
ss
or
push
mov
and
adc
jecxz
pop
push
mov
adc
cwtl
push
adc
mov
enter
pop
cmc
cmp
add
in
jae
out
push
test
sub
or
inc
es
add
adc
lock
hlt
adc
pusha
and
push
shll
scas
je
je
daa
pop
stc
sbb
emms
mov
sub
xor
insl
inc
adc
sub
cmp
mov
je
lret
jp
pop
mov
movsl
cmc
bound
mov
mov
xor
jmp
flds
in
push
pusha
mov
cmp
stos
test
adc
idivb
test
fimuls
xchg
sub
popf
jmp
push
sub
sub
out
imul
fcomp
dec
dec
push
add
mov
es
addb
pop
adc
imul
dec
repnz
je
mov
inc
jae
jl
mov
or
lock
test
icebp
mov
sub
pop
sarl
clc
js
ret
mov
jbe
pop
ljmp
in
notb
jl
inc
test
out
mov
push
pop
cmp
bnd
das
fisubs
lret
or
outsb
adc
dec
sbb
xor
xchg
out
xor
inc
hlt
aam
stc
and
mov
rorb
ud1
loopne
mov
call
out
mov
fstl
rcrb
out
push
cltd
jle
testl
inc
cwtl
sub
dec
mov
fcompl
push
loop
in
push
push
mov
pop
dec
push
inc
dec
dec
inc
add
sbb
ret
movsl
cmp
and
das
mov
clc
pop
in
cwtl
push
push
loop
js
aas
jle
add
sbb
dec
popa
popf
ds
rcrb
loopne
add
aas
jp
cmpsb
jl
mov
cmp
jmp
repnz
pop
sbb
data16
je
jo
and
and
add
mov
ljmp
std
dec
inc
mov
inc
jmp
mov
daa
fstpt
ret
addr16
xchg
clc
cmc
test
mov
cmp
test
test
test
inc
cmp
push
fldenv
loopne
xlat
xor
xor
and
imul
cmp
in
mov
and
fcmovu
sub
adc
int
outsl
cltd
mov
pop
add
xor
jl
xor
lret
insl
ds
pushf
mov
repz
lret
dec
cmp
andb
and
ss
jne
addb
test
cmp
pop
or
ljmp
xchg
roll
insl
repz
mov
mov
mov
je
cmp
mull
pop
sahf
pop
fmulp
xlat
jnp
xchg
ss
sub
cmp
jg
movsb
ss
push
cmp
mov
movl
outsb
cmc
add
xor
push
push
shll
arpl
xchg
wbinvd
xor
push
adcb
enter
cwtl
pop
sbb
cmc
cmc
ss
inc
les
xor
sbb
xchg
jecxz
shlb
test
cmp
jb
lcall
pop
sbb
leave
arpl
out
jl
xchg
jecxz
dec
jg
and
aas
idivb
cli
in
and
les
sti
pop
lock
rorl
js
push
mov
out
sahf
bound
cmp
mov
dec
mov
push
add
aad
movsb
lea
mov
sub
aad
lret
ss
mov
xor
push
lret
sahf
xchg
sub
jo
ljmp
jne
cmpsl
jbe
int3
push
sbb
push
int3
in
ret
sahf
sub
ret
lea
adc
push
mov
sti
sbb
stc
mov
scas
enter
pushf
lahf
inc
push
adc
mov
negb
adc
cmp
sub
mov
in
lea
lds
mov
lods
int
popf
jg
jl
in
aam
pop
shr
lret
mov
test
pop
jg
lret
movsl
lcall
pushf
sti
push
loope
sbb
push
ret
or
and
sti
popf
mov
popf
xchg
mov
js
jo
or
daa
popa
push
cmp
mov
inc
int3
pop
jg
push
pop
mov
pusha
adc
aam
jno
sbb
mov
xlat
xorl
in
pop
inc
mov
jecxz
loope
dec
add
mov
cli
add
dec
dec
inc
cmpsb
out
mov
mov
xchg
fcmovbe
stos
push
lea
mov
mov
inc
mov
or
jp
fisubrl
ss
shrl
pop
or
sub
jae
push
loop
pop
inc
imul
sahf
jb
test
outsb
insb
xchg
pop
mov
aam
addr16
dec
js
or
lds
shlb
mov
pop
sbb
loopne
dec
mov
in
pop
addr16
mov
out
les
fbld
addr16
adc
jmp
sarl
adc
xor
jae
lock
cli
mov
mov
adc
mov
pop
jns
xor
les
jmp
ds
xchg
lret
arpl
adc
push
in
lds
outsl
jmp
dec
test
jbe
in
sub
shll
cmpsb
sub
mov
and
insl
clc
mov
cmc
mov
out
mov
adc
paddd
cmp
cmpsb
xor
push
sub
sub
mov
mov
gs
adc
cmpsl
pop
mov
loope
jp
push
adc
loopne
lahf
inc
scas
clc
gs
insl
sub
mov
push
pop
lock
jno
js
pop
add
test
lock
lea
inc
stos
insl
adc
rcrb
int3
scas
sbb
in
ljmp
ficoms
cld
fcoml
bound
inc
pop
sbbb
aaa
movsb
outsb
xor
in
outsb
push
lods
fdivrp
push
shlb
push
ffreep
pop
ja
loop
bound
mov
jle
and
xor
cwtl
fwait
or
and
cmp
fstpl
frstor
sahf
ds
cmp
mov
fs
stc
push
mov
pop
addb
or
imul
fidivrs
add
int
mov
push
jbe
stos
push
or
idiv
add
fcmovbe
pop
rolb
into
fisubrl
mov
xchg
aad
cltd
outsb
sub
mov
into
adc
clc
mov
leave
divb
iret
cmp
cmp
test
pop
iret
iret
pop
dec
adc
mov
push
mov
shll
jnp
pop
popf
push
sbb
sub
cmp
mov
ret
and
cmp
jae
cmp
cmp
out
cmp
sbb
or
mov
pop
pop
push
sbb
sahf
fldl
push
push
lods
push
or
test
mov
and
js
jle
lods
mov
insb
sahf
or
ljmp
adc
sbb
lret
xor
or
sub
adc
mov
js
xchg
cmp
loope
les
adc
jl
jb
or
ja
hlt
test
dec
shlb
iret
push
jns
xchg
ret
jp
and
jl
nop
fldcw
adc
test
test
test
popf
mov
jnp
jge
mov
repz
aad
and
sub
aas
shlb
xchg
loope
outsl
jns
mov
fbld
jo
xor
mov
notb
jbe
lock
dec
imul
dec
fsubl
push
xchg
subb
pop
imul
adc
sarb
test
fs
lret
jl
lds
sub
inc
das
adc
push
test
jg
das
rcll
and
ds
and
mov
data16
xlat
incb
add
dec
cmc
std
adc
dec
pop
js
jnp
jl
adc
jle
out
jl
sub
sti
mov
adc
pushf
call
sbb
in
outsb
out
in
rcll
jmp
stos
add
stos
xchg
testb
pop
jge
push
inc
imulb
mov
es
inc
ljmp
popa
push
out
repz
int3
cli
aam
xor
or
movsb
jo
jecxz
insb
jge
mov
sahf
loop
jae
lods
mov
mov
enter
div
pop
mov
scas
int
ja
testl
or
jge
add
inc
jge
inc
repz
lahf
inc
fwait
shll
cmp
xchg
cmp
push
in
gs
mov
rcrl
adc
fwait
xorb
pushf
xor
inc
cmpsl
popf
mov
int
outsb
jmp
sbb
push
mov
pusha
mov
stos
xchg
jb
mov
mov
jecxz
dec
or
xchg
js
scas
jmp
push
aaa
mov
movl
mov
sub
or
and
stos
outsl
jmp
mov
mov
movsb
hlt
jbe
mov
mov
pop
xchg
jb
jp
loope
sbb
cmp
mov
jnp
call
movb
in
aas
lcall
sub
in
jle
inc
insb
aam
jmp
dec
aad
int3
mov
fistpl
add
int
fmuls
add
cs
fmull
rolb
scas
enter
stc
fisubrl
out
ds
sbb
cmp
jmp
push
push
and
xchg
dec
push
iret
cmp
arpl
stos
lahf
sti
jl
xchg
or
cltd
jecxz
and
pop
repz
aad
mov
or
inc
push
sub
sub
mull
push
and
mov
mov
outsb
jl
cli
ss
dec
ds
stc
push
push
test
or
fucompp
dec
xor
ljmp
in
or
andl
pop
mov
push
sub
jl
out
inc
lods
stc
fnstcw
push
pop
rcr
ss
add
in
movsl
cmp
xor
mov
xchg
jmp
pop
add
dec
aaa
ror
inc
pop
cmpsl
lods
cwtl
sbb
bound
xor
pop
and
adc
mov
mov
push
aad
inc
mov
and
ds
sub
call
or
std
adc
lock
push
xor
jne
jno
jb
orb
sub
cwtl
push
test
into
jo
fwait
mov
xlat
arpl
jg
add
aaa
cmp
xchg
roll
imul
aam
dec
rclb
push
adc
fsubrs
sbb
push
pop
idivl
mov
clc
add
sub
shlb
stos
insb
out
inc
loop
inc
movsb
push
fistl
loop
inc
neg
cmc
icebp
aam
push
inc
fimull
in
pusha
jecxz
cmp
les
fmulp
stos
adc
sbb
sarb
xchg
inc
jg
adc
cmp
mov
scas
fimull
and
add
pop
mov
inc
es
push
xlat
add
cmp
add
sub
outsb
das
dec
sbb
mov
mov
cmpsl
push
call
stos
div
lahf
pop
jns
mov
imul
adc
xchg
mov
test
xlat
std
pop
pop
shrb
jmp
adc
sbb
fs
xchg
loop
add
lock
jnp
and
sti
push
jmp
cmp
insb
jl
mov
subl
jge
js
leave
mov
ret
stc
int3
mov
bsf
pop
arpl
and
dec
jae
xor
add
rorb
call
push
sub
pusha
jb
stos
clc
negb
inc
sbb
xchg
cmp
sbb
push
enter
clc
mov
xor
xchg
lods
sbb
ja
adc
popf
cmpsl
jae
add
mov
rcrb
nop
xchg
cmp
sar
mov
pop
push
testl
imul
nop
add
iret
add
les
mov
call
shl
xchg
cwtl
out
pop
into
lahf
outsl
xchg
and
in
pop
lret
adc
jmp
mov
jb
rcl
dec
mov
xchg
out
adc
lcall
pusha
fisubl
fstps
mov
hlt
jecxz
test
add
xor
nop
xor
leave
insl
cmpsb
dec
inc
push
mov
and
lock
and
rclb
mov
cmpl
cs
sub
and
pop
dec
test
or
std
jecxz
bound
into
mov
fidivs
and
subl
or
mov
fisttpll
test
es
jl
hlt
lea
lret
ljmp
sub
and
and
jns
in
int3
repz
mov
sahf
mov
stc
sub
mov
jg
mov
movsb
and
insl
enter
repnz
enter
and
fisubrl
adc
jp
pop
xchg
cmp
xchg
loop
outsb
jbe
repz
xchg
or
pop
fimull
xor
outsb
push
aas
insb
sub
inc
call
lods
std
push
lods
out
mov
test
pop
out
ds
shlb
pop
sub
xchg
ret
adc
xor
mov
sub
and
xchg
mov
mov
popf
push
dec
cltd
mov
sti
adc
enter
insb
dec
stos
inc
jae
mov
rorb
loope
xchg
mov
neg
dec
test
pop
mov
and
pop
es
sti
add
ljmp
add
mov
outsl
dec
mov
rcl
jbe
les
jbe
ret
mov
xchg
adc
or
push
xchg
ret
aam
xchg
lods
test
xchg
call
fwait
inc
jae
pop
stos
pop
nop
pop
rcrb
sub
fwait
inc
xor
mov
and
jns
hlt
outsl
jne
mov
inc
dec
mov
and
adc
std
je
scas
fyl2xp1
xchg
sbb
mov
add
jge
push
sbb
je
in
sub
push
sbb
sbb
xchg
rolb
push
or
inc
stos
daa
lods
pop
sbb
sarl
loop
sub
inc
mov
repnz
jecxz
fdivrl
out
in
movsl
cmc
mov
jns
shrb
mov
arpl
push
or
inc
rcll
in
push
pushf
inc
ret
insb
adc
jmp
push
dec
cli
clc
push
sahf
int
int3
add
test
sub
fiaddl
pushf
inc
xor
or
cmp
push
loop
outsb
xor
insb
sbb
shlb
mov
cmp
mov
cmp
addr16
adc
lret
shll
adc
pop
inc
mov
push
les
push
dec
and
rclb
pop
mov
andl
jb
cwtl
fcmovb
stc
rcll
cld
popa
cltd
push
sub
pop
iret
dec
ret
mov
xchg
fmulp
add
or
push
dec
outsb
and
cmpsb
fldl2t
cmc
mov
lcall
scas
sub
dec
test
cmpsl
stos
movsb
sti
dec
dec
mov
xchg
clc
aaa
xchg
enter
mov
jae
adc
jmp
inc
xlat
add
sub
or
loopne
cmp
push
and
xor
pop
stos
mov
frstor
das
fmull
imul
aaa
lret
sbbl
jle
imul
adc
jns
xchg
push
mov
cmp
dec
and
pop
pop
sbb
loopne
dec
mov
xor
ja
cmp
add
push
pushf
sub
in
fidivl
js
loopne
mov
insl
xlat
sbb
push
bound
stos
add
jge
ljmp
jbe
pop
mov
cmp
out
imulb
push
stos
or
add
pop
inc
hlt
pop
mov
les
pop
pusha
adc
aad
mov
inc
push
cs
subb
add
and
cmp
or
xor
xchg
jle
push
pop
mov
xor
cmp
int
iret
jmp
lds
divl
add
and
add
add
and
addl
push
xor
push
enter
adc
mov
fucomip
inc
mov
les
push
iret
sbbb
inc
dec
jmp
pop
sbb
test
mov
fcom
or
bnd
loop
and
adc
or
notl
daa
dec
popf
movsb
pushf
rorl
mov
jb
jbe
or
cmp
and
hlt
dec
lcall
out
ret
out
xchg
sub
mov
loopne
or
mov
mov
jno
sahf
pop
push
sbb
clc
mov
jnp
ss
in
mov
popa
add
inc
mov
xchg
push
subb
adc
mov
aas
call
rolb
nop
inc
jge
and
popa
stos
in
imul
and
cmc
and
iret
popa
loop
stos
xor
jl
int3
subl
cmp
and
jmp
rclb
shl
pop
bound
sahf
pop
push
mov
ja
inc
dec
fwait
aas
and
and
leave
inc
popa
jl
fstpl
jle
test
test
iret
int3
jecxz
dec
pop
fists
jo
jb
cmp
test
mov
hlt
scas
push
xlat
sub
test
rclb
shll
push
outsb
repz
dec
push
add
jl
and
hlt
lret
outsl
pop
mov
inc
ret
add
dec
sbb
sbb
dec
out
mov
or
aas
inc
add
loop
mov
mov
xor
stos
jnp,pn
js
repz
cmp
cmp
cmp
fldl
loopne
mov
cmp
ljmp
scas
cmpsl
mov
sbb
sub
cmp
shll
mov
cmc
xor
insb
jb
dec
std
mov
cmp
jl
dec
scas
insb
ds
sbb
xor
lods
mov
mov
test
adc
mov
pop
adc
ja
pop
fbld
jge
mov
ljmp
imul
xchg
inc
jae
sbb
pop
test
pop
nop
pop
add
loope
dec
lock
aaa
pushl
cmpsb
push
push
test
add
ds
loopne
mov
sarb
ljmp
add
lret
outsl
iret
ficompl
cmp
fwait
dec
push
repnz
mov
pop
pop
in
jge
fstpl
test
in
pop
adc
xor
sti
cmp
scas
iret
fs
sbb
pusha
xchg
sub
push
inc
sub
adc
aas
insl
xchg
sbbl
sub
sbb
dec
movlps
jnp
sub
mov
test
sub
xchg
mov
std
test
dec
mov
add
xor
pop
pushl
daa
imul
cmp
sbb
push
inc
push
sahf
insb
in
out
mov
fwait
mov
cmpsb
push
cmpsb
push
out
enter
mov
imul
ja
iret
xlat
dec
push
sub
mov
xchg
sub
adc
std
fwait
xchg
xor
rol
mov
sbb
mov
and
in
loope
das
xor
arpl
dec
outsb
leave
fsts
fwait
add
mov
jle
or
inc
xor
inc
and
mov
mov
leave
popf
inc
shrb
aaa
out
xor
push
in
inc
cmp
in
cmp
stos
pop
ja
jb
stc
sbb
pusha
and
and
in
inc
fadd
test
inc
bound
jmp
ja
xchg
mov
xchg
jns
call
sbb
xchg
jmp
jnp
mov
cmp
inc
rolb
out
and
cmc
xchg
adc
push
dec
jae
mov
or
sub
mov
popa
imul
in
and
popf
int3
pop
insb
inc
into
fdivrs
dec
pop
cmp
inc
xchg
ljmp
inc
shrl
mov
aaa
sub
out
and
js
and
mov
in
mov
sbb
jne
push
fdiv
pop
pop
popa
out
in
mov
rorb
xchg
vmulps
pop
xor
iret
push
cmp
inc
or
test
xchg
mov
std
mov
inc
pushf
dec
jmp
cmp
loope
mov
lcall
shl
add
mov
in
and
dec
imul
imul
enter
maxps
mov
daa
push
inc
pop
fildll
test
lahf
outsl
jl
push
push
outsb
ja
aas
mov
jbe
sub
pop
inc
out
repnz
fimull
insb
into
ss
js
shl
mov
adc
outsl
xor
lds
rorl
or
ja
push
jno
or
movsb
jl
scas
aam
aas
pop
lock
cmp
xor
mov
push
jmp
sub
adc
lret
cwtl
lds
enter
add
rorl
push
mov
sub
and
insl
push
pop
xor
mov
aam
xchg
dec
daa
loop
xchg
sbb
cmp
cltd
mov
aas
jp
pop
jecxz
fsubl
movsl
add
mov
sub
inc
fwait
js
mov
pop
xor
shrb
pushf
sub
movsl
cld
push
jae
add
sbb
and
in
repz
mov
nop
out
es
ds
ret
add
insl
xor
test
mov
test
cmc
pop
lret
lock
lret
sbb
mov
call
aad
sub
aas
cld
fstpl
inc
jge
jns
add
daa
cwtl
arpl
ljmp
xor
jge
inc
adc
add
and
lret
in
mov
cmpsb
mov
insl
sub
hlt
push
insl
mov
fs
fbstp
dec
mov
inc
jb
icebp
adc
push
ja
pushf
inc
sbb
mov
lcall
shl
cmp
insb
out
cli
insb
arpl
cmpsl
mov
cmp
lret
cmpl
out
testb
fsubs
loop
jo
sub
in
inc
cmp
pop
pop
adc
out
fdivrl
push
and
or
cli
or
lock
cmp
stos
adc
push
or
loope
jge
fbld
and
sub
bound
cmp
stos
cmp
push
sub
xlat
xchg
xchg
sar
sahf
into
mov
xchg
pop
and
lock
aad
mov
ret
jno
out
xchg
ds
dec
xchg
fwait
les
pop
jmp
lock
mulb
lea
sbb
inc
push
orl
or
jg
sti
xchg
inc
mov
cmp
dec
dec
mov
insl
cmp
dec
repnz
or
dec
enter
sub
in
rolb
faddp
in
das
lret
dec
sub
loop
or
fdivl
jns
or
repnz
push
jo
es
cmp
xchg
ret
sti
aaa
or
jns
pop
or
out
cmp
test
test
mov
iret
and
sub
mov
lahf
call
pop
push
cmpb
cli
imul
or
mov
jge
sarb
mov
xchg
aaa
aaa
cmp
inc
mov
mov
test
inc
cmp
push
mov
push
ds
cmpsb
decl
insl
in
out
sbb
lods
rcrb
out
adc
mov
call
inc
xchg
ds
jns
incl
int
dec
lret
sbb
test
stc
js
iret
inc
fstpt
jne
xlat
lea
jne
in
push
dec
pushf
cmpsl
xchg
xor
imul
mov
pusha
fsts
mov
in
test
cmp
xchg
je
xor
mov
jecxz
adc
rolb
aam
js
das
movsl
movsb
popf
jo
lahf
rorb
stos
push
aas
out
mov
xchg
mov
lea
inc
push
dec
ret
rcrb
jns
sub
scas
mov
push
adc
addr16
mov
in
add
mov
popa
std
in
mov
imul
jne
sti
test
jecxz
ljmp
cmp
xor
cmp
sbb
mov
mov
push
sub
fnstenv
lret
pop
nop
hlt
cmp
jno
jg
and
mov
mov
das
stc
push
adc
mov
mov
xor
in
clc
cmp
int
stos
dec
test
loopne
adc
inc
cmp
add
jmp
rcrl
push
hlt
dec
sahf
iret
pop
mov
dec
xlat
and
nop
pop
test
xor
gs
mov
xor
mov
sbb
pop
aaa
xor
cmpsb
push
lret
or
cmp
push
in
push
dec
pop
push
or
adc
mov
sub
addl
cmpsb
inc
and
repz
mov
add
pop
gs
mov
movl
test
mov
mov
jne
gs
sbb
mov
xchg
les
mov
mov
dec
xchg
popa
or
cltd
fiadds
xor
mov
adc
fst
lds
adcb
fs
test
daa
mov
mov
stc
push
repnz
cmp
out
pop
test
stos
add
xchg
dec
cli
sbb
fidivs
mov
incl
aad
mov
xchg
les
ret
push
pop
ljmp
lret
add
sti
mov
bound
push
xchg
mov
cs
out
and
xchg
mov
dec
insb
loope
fstpt
int
pop
xchg
xor
out
jns
ja
mov
inc
dec
mov
nop
dec
push
into
pushf
addb
rorl
cmp
pop
cmp
adc
xchg
adc
not
sbb
mov
push
push
mov
xchg
inc
fcmovnu
sbb
or
out
jg
sub
sbb
incl
push
push
pop
push
lcall
jbe
cmpsb
int
pop
or
mov
push
aad
pop
push
sbb
sar
sub
jb
cltd
hlt
push
aas
in
rolb
jmp
mov
das
adc
push
ja
mov
ja
loop
popf
ljmp
mov
mov
mov
push
mov
and
imul
bound
std
jp
mov
push
dec
insb
mov
in
pop
push
fsubrl
ja
jb
outsb
loop
addr16
rol
cmpsb
add
pushf
es
mov
and
outsb
outsl
mov
xor
into
dec
gs
mov
imul
imull
aad
std
and
xchg
sbb
jecxz
mov
rol
incl
xchg
xchg
inc
arpl
cmp
jnp
iret
and
fdivl
movsb
sbb
enter
sub
push
cmpsb
push
insl
rcrl
or
aam
jne
cmp
mov
clc
sbb
out
pop
mov
loopne
mov
mov
inc
jp
rolb
mov
enter
sbb
das
call
sti
mov
jno
push
jmp
or
xchg
xchg
mov
adc
inc
inc
nop
mov
enter
cmp
sub
call
jmp
sub
test
dec
cmp
sahf
mov
adc
fxch
rcrb
mov
push
aad
leave
movsl
test
outsb
add
stos
gs
sahf
lds
rcll
popf
add
insl
popa
in
mov
imulb
xchg
and
dec
sti
in
and
pushf
jno
mov
inc
test
rolb
inc
negb
outsb
xor
push
lret
push
lret
xor
push
inc
cmp
enter
pop
pop
push
aas
es
addr16
sub
arpl
aaa
mov
cmpsl
xor
ret
or
cld
bound
xchg
cmp
cmp
and
cmp
xor
call
test
scas
adc
sbb
lock
out
sar
xor
mov
xchg
repnz
xor
jbe
mov
or
sbb
push
push
imul
iret
sbb
or
scas
bnd
adc
cmp
daa
loopne
dec
cld
push
pop
inc
dec
pop
inc
into
xchg
nop
cli
pop
sahf
bound
mov
lods
pop
jae,pt
repz
iret
jmp
mov
jno
fstpt
adc
pushf
xor
repnz
mov
loopne
pop
loope
pop
jbe
inc
xor
jne
and
fdivrs
pop
dec
and
jo
repz
jnp
lret
mov
fdivr
in
and
sbb
mov
jb
push
fwait
inc
inc
cmpsb
inc
loope
cmp
popa
in
add
mov
add
cmpsb
lret
hlt
inc
dec
cmpsl
movsl
shlb
sbb
push
test
clc
cmpsb
push
scas
ljmp
sub
sbb
lods
mov
shlb
adc
push
dec
sub
mov
lock
add
daa
nop
cld
movsb
and
adc
inc
xchg
cmpsl
xchg
lock
or
mov
test
ret
les
sarl
ret
inc
adc
push
push
stos
sahf
adc
cwtl
mov
sub
imul
dec
pop
sub
and
dec
fdivl
pop
das
cli
xor
mul
xchg
dec
sub
sbb
rclb
mov
inc
dec
negl
movsl
xor
repnz
xor
roll
adcl
out
cmp
filds
gs
dec
rol
ficompl
arpl
mov
divb
pop
lret
jecxz
mov
int
push
mov
insb
jge
and
jp
lahf
call
imul
add
xchg
dec
js
push
sub
and
add
dec
cmp
fiadds
mov
pop
stc
mov
arpl
xchg
dec
fsubrs
jb
fmul
jb
pop
pop
dec
idivb
jecxz
mov
scas
lds
jecxz
cwtl
enter
out
out
ret
inc
push
and
mov
sar
pop
lea
arpl
pusha
repz
jp
jo
in
ja
ja
dec
lcall
cmp
int3
xchg
mov
or
iret
or
outsb
push
imul
pop
or
enter
mov
sub
jmp
fnsave
add
mov
sbb
and
sub
test
pop
and
jp
pop
sbb
std
jno
and
mov
ss
outsb
inc
lods
mov
cli
sub
stos
lret
das
mov
pop
push
sbb
fisubl
adc
imul
mov
or
pop
es
mov
leave
leave
mov
imul
mov
cwtl
sarb
arpl
mov
dec
push
dec
add
or
cmp
popf
pop
cmp
pop
push
scas
insb
das
xor
push
dec
push
push
dec
cmp
pop
and
pushf
loope
push
adc
dec
pusha
sahf
fst
mov
inc
repz
in
jecxz
aas
push
cmp
push
ret
xchg
aam
xchg
jns
std
adc
jnp,pt
push
imul
loopne
gs
sbb
add
pushf
dec
in
push
sbb
lds
sbb
test
add
and
movntps
loopne
out
jecxz
iret
inc
adc
push
jp
mov
jp
xchg
inc
clc
mov
jbe
dec
out
or
fisubrl
and
and
lock
mov
dec
arpl
jno
pop
pop
push
cmp
jb
or
sbb
adc
and
pop
cmp
nop
inc
flds
or
xchg
xchg
cmp
sub
lahf
pop
adc
adc
out
adc
xchg
mov
sbb
into
dec
mov
insb
scas
test
pushf
ret
shr
sub
mov
sbb
xor
es
out
imulb
std
jns
push
popa
push
mov
mov
test
cmpsl
out
inc
imul
fisttps
or
mov
add
divb
in
ljmp
dec
cmp
daa
dec
mov
push
scas
rolb
jecxz
lahf
test
movsl
inc
lods
addr16
mov
ljmp
push
add
gs
jnp,pt
std
into
sahf
int3
mov
xor
jmp
in
icebp
test
sub
fadds
aam
lds
mov
xchg
sub
inc
jb
mov
callw
mov
das
sbb
xchg
fptan
mov
fistps
mov
xor
mov
fidivrl
fldt
shlb
jbe
mov
testl
rcll
adc
fisubrs
adc
push
jp
xchg
shr
mov
sbb
dec
xchg
mov
cwtl
inc
pusha
lahf
xor
pop
add
xchg
loope
adc
scas
sbb
sub
ljmp
mov
mov
mov
push
mov
clc
sbb
cmp
mov
mov
add
sub
lods
dec
test
or
into
and
pop
scas
xor
dec
inc
sar
sahf
adc
sub
into
push
ret
daa
call
mov
out
test
jo
shrb
xchg
lods
sbb
xor
add
dec
sbb
mov
sbbb
jns
fld
lea
xchg
jg
jno
rcr
sbb
pop
les
push
xchg
mov
lock
jp
pop
out
push
call
dec
test
into
stos
inc
pop
cmp
test
mov
inc
mov
push
dec
ss
je
and
fdivl
mov
and
xor
enter
ljmp
in
add
cs
lds
cld
jge
pushf
popf
ljmp
das
mov
add
sub
test
test
bound
inc
inc
mov
mov
jg
dec
cmp
push
pushf
dec
sbb
or
mov
subl
ja
jl
in
dec
mov
lret
aad
sub
and
cld
in
lret
or
and
mov
inc
cmc
sub
std
pop
or
in
arpl
negb
jb
lcall
pop
or
inc
fs
orl
call
jo
arpl
add
into
rcrb
ss
gs
jge
pop
xchg
inc
or
mov
pop
int
sub
sbb
data16
adc
andl
mov
cli
xor
inc
ds
fnstsw
cmp
add
mov
lds
xor
lret
out
cld
clc
lods
pop
push
cmp
pop
xchg
fidivrs
out
jnp
bound
jg
outsl
and
cmpsb
clc
or
inc
inc
ret
cmp
addr16
sbb
lds
test
xchg
cwtl
cmp
sbb
xchg
mov
lock
dec
mov
dec
mov
mov
scas
jne
pusha
insb
cmpl
mov
adc
cmp
sbbb
xchg
adc
mov
and
jge
out
or
cwtl
daa
inc
sbb
lahf
or
fs
or
push
jl
clc
push
shll
push
jge
lods
rcrl
divb
aaa
or
jnp
lret
xor
push
aad
div
push
daa
mov
mov
frstor
jo
or
int3
movsb
sub
outsb
jg
imul
and
cmp
adc
cmpsb
xor
jb
addr16
testb
fwait
sbb
inc
ss
adc
push
adcb
insb
aas
or
aas
or
mov
loope
push
cmp
mov
mov
mov
jae
xchg
adc
fcmovu
or
push
mov
sahf
dec
sub
sub
sahf
xchg
dec
stos
fistps
in
lds
pop
sbb
ja
fmull
jge
dec
mov
shll
push
cmpsl
sar
push
cmp
mov
je
jg
jns
pop
ror
fdivl
push
fistl
dec
cltd
ljmp
add
sbbb
xchg
mov
mov
sbb
lret
addr16
cmpsb
pop
sbb
sbb
inc
sub
lods
mov
fstps
scas
or
jle
adc
lret
loope
aas
and
and
neg
out
lret
dec
lock
push
mov
std
jne
out
cmp
mov
inc
ljmp
jle
mov
push
sbb
movsl
test
lods
fisubs
pop
add
adc
cmpsb
inc
ret
xor
leave
lcall
fildll
jae
jb
int3
xlat
out
push
dec
pop
xor
scas
test
mov
cmp
cmp
mov
lcall
repnz
cmp
repnz
xor
outsl
mov
push
lret
jbe
add
mov
fwait
popa
lods
jae
and
push
lods
jl
insb
shll
push
into
popf
and
xor
xchg
scas
push
test
lret
push
xorl
enter
loop
or
mov
push
or
sub
mov
in
mov
add
enter
mov
sub
cmpsb
or
mov
adc
aam
mov
mov
xor
or
pushf
mov
into
sbb
cmp
cmp
shlb
sub
xchg
pop
add
and
loope
or
push
inc
mov
aad
adc
inc
and
sub
xchg
inc
fisubl
mov
mov
sub
inc
mov
pushf
idivl
xchg
add
mov
xlat
push
mov
pop
mov
mov
mov
mov
out
in
mov
stos
fnstcw
scas
pop
mov
cmp
xchg
push
dec
and
in
ss
inc
dec
inc
push
sbb
mov
outsb
out
icebp
ficoml
inc
daa
sbb
pusha
jns
fsubrl
loope
xchg
fsubs
add
mov
jo
pop
sub
stos
mov
add
sub
out
xchg
aad
xchg
lods
lock
ss
repz
cmp
lods
push
outsl
cmovs
push
cs
pop
ret
addl
pop
mov
jo
push
sti
mov
fildl
pop
add
cmp
cmp
sbb
xchg
outsl
cmp
inc
adc
pop
cwtl
adc
mov
or
cli
and
pusha
sahf
ret
cmp
or
outsl
cmpsb
push
popf
idiv
push
jge
into
loop
das
push
xor
pop
jne
out
inc
repnz
popa
scas
stos
sbb
arpl
sub
mov
mov
ljmp
jns
lahf
int3
dec
xor
loopne
mov
popa
dec
mov
lea
xor
aas
aam
jle
cmp
or
out
fidivrs
or
test
cmp
xlat
sub
push
sub
das
js
je
cmp
jns
int3
sub
push
outsb
sub
repnz
es
inc
leave
pop
cwtl
pop
mov
mov
ljmp
inc
cltd
daa
dec
mov
or
lret
loop
cltd
cmp
hlt
mov
push
popa
sub
push
ja
mov
or
in
xchg
inc
dec
cmp
out
dec
inc
inc
dec
pop
xor
push
outsb
inc
movsl
cli
rolb
jecxz
xchg
mov
aad
mov
adcl
shr
addb
imul
enter
fs
mov
cmp
adc
imul
or
fs
or
das
mov
push
pop
fsubr
loope
push
and
sbb
push
dec
test
dec
subb
adc
pop
cltd
hlt
dec
and
andl
push
jnp
sbb
fcomps
mov
nop
cwtl
mov
lcall
mov
mov
mov
movsb
or
jae
loopne
loope
mov
mov
mov
cmp
lea
stos
sub
popa
push
or
cmp
cmp
inc
cld
int
or
int3
sbbl
stos
mov
push
sub
repnz
mov
je
add
dec
xor
jp
sub
mov
mov
mov
out
dec
roll
xor
cmp
test
and
mov
pop
cli
jbe
pop
in
icebp
dec
data16
adc
mov
xor
stc
mov
or
push
and
xor
movsl
inc
lret
repnz
rcrl
mov
es
mov
push
xlat
rclb
lds
pop
call
movsb
adc
sub
in
out
mov
xor
xchg
pop
cmp
mov
or
data16
cmpsb
in
sub
inc
jge
mull
dec
or
mov
xchg
out
es
divl
lds
pop
int3
mov
add
adc
mov
push
das
loop
ja
dec
inc
dec
inc
mov
into
dec
cmp
leave
scas
push
cmpsl
sub
adcb
xlat
cmpsl
pop
mov
push
cmpsb
arpl
dec
jle
add
push
xor
push
push
mov
jmp
sub
movb
or
sbb
gs
xchg
sub
fxch
pusha
or
aaa
xchg
stc
rol
pop
jbe
cmpsl
jae
xchg
lcall
mov
aaa
out
mov
push
jmp
xor
and
sub
or
loop
test
pop
mov
mov
xor
scas
mov
loop
pop
mov
pop
out
aam
test
mov
sbb
out
in
nop
or
push
rclb
sub
ljmp
pop
jmp
insl
setle
mov
cmp
pop
dec
jge
sahf
xchg
iret
jne
movsl
sub
lahf
push
mov
jmp
in
push
ds
jb
or
xor
sbb
cmp
dec
push
xor
xor
mov
mov
mov
fsubr
cmpsb
data16
adc
xlat
daa
mov
dec
in
add
jmp
lahf
es
cwtl
pop
fmul
sbb
es
mov
xchg
lods
popf
test
mov
push
imul
cmp
shll
push
mov
idiv
jmp
lahf
jno
push
cmp
in
dec
imul
lods
push
movsb
pop
lcall
xchg
test
lret
pusha
ret
sub
daa
xchg
rcrb
xchg
inc
dec
adc
adc
test
push
sub
or
fistpll
out
adc
sub
bound
mov
dec
gs
in
xlat
push
cli
push
js
cmp
or
jle
call
inc
popa
dec
popf
lods
fwait
mov
out
and
push
jp
push
mov
dec
pop
inc
inc
pop
scas
xchg
sti
jo
push
adc
push
jo
loopne
and
or
adc
aad
clc
adc
loope
lds
push
jl
clc
cli
insl
mul
xor
inc
int
or
lds
imul
pandn
sub
pop
cmp
fsubl
enter
icebp
jg
sbbb
sarl
pmuludq
fcomip
jno
jno
mov
insb
sub
sbb
rep
into
clc
jns
push
push
adc
aaa
lahf
fs
adc
push
fcmovnu
xchg
inc
dec
jge
inc
sub
icebp
inc
out
cmpsl
adc
popf
xlat
sub
dec
or
ret
sti
outsl
mov
inc
dec
jmp
int3
or
shll
or
dec
dec
popa
xchg
and
adc
mov
cmp
ds
mov
dec
cltd
mov
movsb
cld
imul
nop
mull
subb
add
insb
adc
int
xchg
dec
mov
pop
nop
data16
xchg
jnp
mov
inc
test
out
mov
int3
js
inc
fwait
mov
enter
cmpsl
or
lahf
addl
push
movsl
mov
xchg
add
into
into
pop
repz
cld
aas
pop
cmpsb
cltd
into
in
sub
mov
and
xlat
out
mov
xchg
push
push
mov
xor
ds
jae
test
sub
inc
lcall
and
ret
insb
and
and
test
or
xchg
aas
xchg
in
jge
sub
outsl
sub
mov
push
inc
push
xor
inc
test
push
mov
cwtl
pop
xchg
sti
pushf
mov
jb
xchg
roll
mov
lcall
stos
out
insb
fxch
push
jns
xor
and
jecxz
and
xor
lods
in
mov
jg
pop
mov
mov
cmpsl
dec
addb
xchg
fcomi
and
add
imull
jb
inc
jle
pop
and
repz
and
adc
adc
adc
insb
pop
mov
mov
cmpb
fisubrl
insw
hlt
mov
mov
lods
aas
mov
pop
mov
lock
push
add
inc
scas
jno
fwait
jl
sbb
out
cmp
xchg
test
sbbb
gs
aaa
sub
jne
push
inc
in
imul
pop
mov
push
pop
mov
sbb
stos
inc
leave
xor
lds
mov
mov
adc
push
adc
sub
dec
jg
and
inc
add
dec
int3
dec
gs
mov
xchg
adc
xor
cmp
lods
movsb
shll
push
mov
push
mov
adc
xchg
xor
mov
enter
sub
mov
lea
inc
in
aaa
int
dec
gs
mov
std
loopne,pn
fisubs
mov
adc
out
dec
push
xor
scas
pop
cmp
cmpsl
jmp
lds
cmp
sub
popf
in
int
cmp
add
mov
call
dec
mov
adc
mov
cltd
out
in
jle
cld
jb
rcrb
sbb
dec
cmp
in
pop
sbb
out
jecxz
push
adc
repz
xor
sbbb
pop
dec
and
jnp
add
pop
sub
push
jo
or
push
ja
insl
fdivl
add
mov
fldcw
aas
fwait
and
mov
fsubs
xor
cmp
mov
repnz
or
push
inc
jno
or
loop
lods
test
fwait
mov
dec
jne
sbb
shrb
movsl
mov
mov
fisttpll
out
cmp
out
pop
mov
gs
push
lods
fucomp
and
mov
insb
inc
pop
pop
push
dec
push
sub
aaa
pop
xor
repz
add
cmp
pushf
push
xchg
cmp
jmp
shl
push
out
push
sub
out
mov
and
jl
scas
mov
pop
lret
push
xchg
aas
xchg
dec
das
loopne
test
aas
in
xchg
mov
lds
in
aad
lahf
add
xor
push
sbb
mov
ds
push
lods
movsb
mov
pop
jne
mov
popa
lods
in
pop
sbb
or
fwait
stos
out
imul
pop
iret
sub
fs
lcall
cs
testb
push
dec
sub
pop
mov
call
xchg
and
arpl
cmp
push
test
nop
movsb
xchg
push
gs
push
call
add
sbb
movsl
cmpsb
push
mov
shl
sub
xchg
xchg
lock
hlt
mov
mov
pop
mov
jo
xor
cli
das
pushf
push
rolb
std
scas
mov
mov
punpcklbw
gs
lods
pop
mov
and
scas
mov
stos
clc
outsl
mov
cmc
leave
push
movb
xchg
xchg
xor
mov
je
pusha
add
dec
call
xor
mov
or
test
gs
lods
sti
stos
mov
or
lock
outsb
loope
in
jb
loopne
sbb
xchg
xchg
jnp
out
pusha
into
mov
sbb
xor
xor
outsb
push
mov
sbb
inc
stos
insl
mov
shlb
pop
imul
mov
int3
xchg
in
xchg
into
xchg
and
in
fidivrl
pushw
push
mov
push
insb
inc
pop
xchg
add
sti
dec
sbb
dec
loope
arpl
sub
in
imul
mov
sti
mov
icebp
fs
enter
mov
lods
mov
sbb
xchg
fisttpl
cmp
pop
int
pop
fs
adc
push
imul
int3
inc
loop
and
data16
jg
cli
sbb
lods
outsl
enter
movsl
add
cld
dec
mov
mov
mov
ljmp
cwtl
sub
mov
imul
js
or
mov
jb
mov
test
jno
adc
xor
dec
inc
lcall
push
dec
arpl
imul
mov
cmp
imull
mov
adc
and
pusha
cmp
and
or
jne
fdivs
mov
incl
jnp
mov
jmp
rcll
pop
jno
leave
xchg
fcmovnbe
repz
dec
fildll
nop
dec
lods
cmpsb
nop
out
xchg
jmp
push
outsl
sub
nop
mov
jnp
fistpl
bound
or
daa
stos
dec
sahf
insl
cmp
mov
cltd
stc
cmp
or
fs
je
ds
sbbl
in
mov
xor
mov
es
adc
test
mov
cmp
jno
mov
ljmp
inc
neg
add
cmp
mov
and
xlat
mov
movsl
dec
lods
jnp
add
ret
jmp
and
inc
pushf
call
stos
imul
mov
sbb
imul
mov
ds
pop
sbb
mov
inc
adc
adc
mov
xchg
jg
nop
outsl
sub
jg
adc
push
pop
jnp
xchg
and
shlb
jnp
clc
adc
mov
sbb
mov
xchg
and
div
jge
jb
adc
and
icebp
pop
lods
dec
sbb
dec
xchg
in
in
sbb
in
xchg
repnz
fstpt
xor
fdivl
mov
jae
je
andl
pushf
inc
movsl
or
mov
push
rcrb
push
sub
xorb
jecxz
ret
scas
sub
fmull
icebp
pop
mov
pop
jge
push
xchg
adc
push
loopne
sub
sti
mov
xor
push
ljmp
test
iret
mov
pop
jno
daa
and
jne
gs
loop
sbb
xchg
or
jne
lahf
je
ss
cmp
push
loop
mov
sbb
daa
mov
cmp
orps
xor
call
mov
stos
shrl
xchg
push
test
mov
jmp
imul
sbb
imul
lea
repz
daa
push
cld
lea
mov
cltd
jp
cmp
test
mov
lods
out
in
xor
lret
mov
xor
xchg
dec
fs
lcall
test
pushf
sbb
pop
pop
pop
mov
sbb
insb
xchg
jne
adc
push
insl
xchg
shl
cli
adc
mov
inc
fnstenv
popf
add
repz
sti
jnp
sahf
cld
xchg
pop
mov
mov
xlat
je
sbb
push
adcb
imul
gs
add
add
jb
push
mov
xchg
push
dec
rcl
inc
andl
mov
stc
pushw
ret
pop
jge
xchg
lods
arpl
arpl
test
jnp
or
subb
test
and
xorb
xor
jecxz
cmpsb
fidivl
and
sbb
into
and
mov
mov
imul
mov
and
ss
mov
add
addr16
arpl
nop
call
xchg
lahf
inc
addr16
outsb
pop
mov
sti
jae
jns
adc
pop
mov
and
ret
stos
sarb
cmp
mov
lds
out
or
pop
fs
xchg
mov
or
scas
jmp
push
iret
cmp
insl
outsl
pop
cmpsl
mov
je
xlat
scas
xor
dec
xchg
xor
data16
les
inc
push
push
and
or
outsb
leave
push
out
decl
jle
or
stos
dec
jae
int3
jle
jecxz
test
fwait
jns
inc
mov
pop
faddl
or
insl
xchg
xchg
dec
cmp
outsl
xor
lods
lods
fsubs
lcall
cld
adc
jle
loope
sti
ss
xchg
sbb
es
push
inc
movsl
and
mov
test
push
or
cwtl
mov
mov
clc
aad
xchg
jbe
ret
jge
jo
int
ror
cmp
adc
sub
mov
loopne
jo
test
test
xchg
sub
addr16
enter
inc
sub
sbb
call
sub
push
pusha
fwait
scas
jbe
fcomps
mull
push
imull
test
es
fisttps
data16
test
sbb
dec
insl
sahf
mov
push
es
dec
lcall
les
mov
jne
jge
fists
xchg
push
repnz
ficoms
mov
mov
fwait
xor
dec
jo
stc
in
loop
push
xor
lcall
xchg
xor
stos
push
mov
clc
or
inc
popa
das
sbb
outsl
lods
inc
out
cmp
andb
lock
dec
and
fdivrs
lret
cwtl
js
ret
inc
or
cld
dec
pop
or
push
ja
mov
mov
inc
inc
jp
lcall
jae
in
push
test
push
pop
mov
scas
mov
lock
cwtl
fadd
fcmovnb
outsb
lcall
lea
stos
dec
test
das
add
std
sub
std
clc
sahf
mov
icebp
xchg
push
push
cmpsb
mov
xchg
sbb
sub
pop
mov
or
int3
xchg
xor
xchg
push
decl
jno
shlb
in
xor
push
cmc
icebp
and
pop
std
ret
mov
popa
mov
jne
cmp
imul
jb
push
cmpsb
xor
cli
test
ret
test
iret
or
gs
mov
cmp
ss
lods
testl
gs
jb
xchg
arpl
mov
inc
ret
pop
xchg
ret
cmp
inc
imul
aad
lods
pmuludq
in
loop
sbb
stc
inc
in
mov
call
push
cmp
pop
sar
cwtl
daa
xchg
and
inc
or
ljmp
and
rol
addr16
out
fbstp
pop
push
sar
stc
das
jge
push
dec
lret
sbb
mov
or
cwtl
insl
add
dec
pop
dec
xchg
loope
ret
dec
xor
icebp
lahf
aam
jg
out
push
push
xor
xchg
mov
and
adc
push
lahf
pop
movsl
test
ret
pop
xor
push
cmpsb
repz
inc
pusha
fdivrl
mov
jo
add
push
out
sub
sub
rclb
clc
loopne
ljmp
cmp
mov
xor
push
mov
int3
mov
cmp
sbb
pop
inc
dec
mov
pop
xor
stos
int
push
push
push
into
les
imul
xchg
dec
lcall
insl
lea
or
lahf
adcl
jg
jnp
pop
popf
mov
push
dec
jmp
jo
iret
xchg
adc
in
fimull
mov
mov
mov
or
dec
cld
pop
psubb
ss
sbb
inc
xor
dec
mov
dec
dec
out
adc
pop
dec
pop
int
add
stc
jmp
jbe
ret
sbb
das
loopne
pop
stc
cmp
add
xor
aad
loopne
loop
adc
insb
lods
and
mov
or
addr16
orl
jae
xchg
xor
sub
imul
in
sub
mov
push
jae
insb
lea
loope
fsubrs
push
enter
inc
cmpsb
jl
xchg
pop
addr16
xchg
clc
pusha
push
jbe
pop
and
mov
cmp
mov
mov
fnsave
add
mov
ljmp
add
mov
cmp
dec
inc
pushf
imul
daa
loopne
flds
loop
push
loop
scas
repnz
inc
ja
mov
jo
mov
xor
jge
dec
fdivrl
xchg
or
push
ja
jo
pushf
repnz
jbe
sbb
cmp
cld
in
cltd
fs
js
nop
mov
and
and
popl
adc
push
inc
push
cli
addr16
cwtl
add
sarl
int
and
pop
aaa
out
sahf
mov
mov
add
fiaddl
sub
mov
push
daa
aam
pop
out
shlb
adc
das
pop
push
rcll
fstp
data16
fsubs
out
sbb
outsl
ret
pusha
lods
adc
add
push
fistl
mov
xchg
xchg
scas
mov
dec
lods
sub
push
mov
shlb
mov
xor
mov
sbb
lock
mov
jne
mov
filds
pop
rclb
sub
xor
add
fildll
fdivl
inc
inc
jne
addb
dec
xor
jle
jb
cmpl
fs
and
sub
sbb
mov
adc
jnp
adc
sbb
pop
packuswb
sub
add
rcll
mov
jno
repnz
or
sbbl
insl
xor
mov
scas
and
fs
push
mov
loop
loope
testl
dec
test
xor
sbb
hlt
inc
ss
sbb
lret
jo
test
dec
push
xchg
ja
mov
sti
andl
push
sub
cmpsb
cwtl
div
sbb
or
rcr
fldt
mov
sbb
rcl
mov
adc
lret
test
ret
mov
xor
pop
leave
aad
sbb
xchg
imul
daa
adc
sub
xlat
mov
lods
cli
icebp
mov
nop
repnz
sub
or
shll
cmp
push
sbb
sbbb
dec
cmp
es
or
cmp
test
xlat
xchg
or
xor
pop
shlb
xchg
push
les
sbb
mov
fnsave
dec
mov
in
ret
out
jnp
sub
das
cmpsb
dec
xchg
faddl
adc
daa
ret
push
push
je
das
push
ret
es
sbb
and
std
sub
adc
insb
jle
outsb
cmpsb
ror
jo
xchg
push
clc
mov
lea
push
imul
clc
or
mov
ss
pop
xor
and
pushf
xor
sbb
inc
push
aas
shlb
outsl
and
fstl
into
fwait
push
adcb
or
inc
pop
push
push
call
mov
int3
shr
cmp
cmp
ret
loope
stos
shll
ror
xchg
mov
mov
sarl
xchg
out
cmp
fisubs
scas
cmp
inc
dec
lods
call
out
pop
gs
inc
dec
out
ret
push
mov
shl
xchg
xchg
inc
test
repz
add
lods
in
cmp
sbb
cmc
std
cmp
popa
sbb
sbb
rcr
sbb
ret
ljmp
in
or
jno
jns
shlb
jecxz
jle
push
aad
mov
pop
push
inc
ss
inc
sub
push
mov
gs
ds
cmpsb
xchg
add
sti
mov
and
sbb
lahf
outsl
fs
movsb
ljmp
fisttps
fiaddl
cwtl
call
js
fs
adc
int
pop
jnp
loope
xor
jecxz
push
sbb
xor
fistps
daa
aad
jecxz
inc
inc
lea
sahf
clc
or
mov
mov
je
sub
push
jnp
xchg
pop
and
push
jnp
push
push
insb
nop
pop
imul
or
out
lcall
add
addr16
mov
cmc
pop
mov
mov
mov
sarb
add
pop
push
xorb
dec
aam
push
decb
gs
pop
gs
iret
lods
std
mov
mov
sub
je
adc
dec
clc
cmp
xchg
push
test
daa
cli
mov
push
jmp
hlt
popf
pop
insl
pushf
mov
dec
mov
fbstp
xor
mov
imul
stos
dec
pop
inc
int3
arpl
mov
mov
leave
cmp
or
aam
dec
movl
mov
mov
cmp
sti
ja
push
push
and
sub
ds
jge
sub
testw
dec
je
repnz
mov
addr16
cwtl
daa
enter
add
sti
cld
xchg
popa
test
test
mov
shrl
roll
data16
cmp
sahf
jno
mov
mov
xor
cmp
or
test
xchg
les
testb
imul
fadds
nop
jbe
je
or
out
cmp
cmp
addr16
pop
and
call
adc
fwait
pop
pop
repnz
pop
nop
aad
sar
mov
sub
bound
mov
dec
jmp
lds
cltd
push
aas
jns
sub
ljmp
aad
and
cmp
jp
scas
imul
sbb
cmp
in
push
jns
mov
stos
xchg
fiaddl
mov
mov
adc
add
and
mov
mov
divl
popa
iret
and
rorl
push
cs
lea
mov
out
fwait
outsb
mov
aad
mov
dec
xor
stos
ds
shll
dec
aam
adc
js
or
mov
sub
sub
pop
xchg
xor
mov
xor
sbb
inc
mov
and
adc
pop
add
jb
lods
adcl
inc
xor
out
and
je
and
shrl
subb
test
das
pop
cs
dec
lds
dec
dec
in
jo
das
jns
ss
push
call
hlt
cmp
movb
xor
test
inc
ss
dec
lahf
int3
mov
mov
fwait
and
cmc
out
mov
pop
jecxz,pt
sbb
xor
jnp
xor
xchg
fwait
pop
out
sahf
bound
sbb
mov
mov
in
add
pop
adc
inc
or
cmc
out
xchg
cmp
vmwrite
add
arpl
stos
xchg
push
test
mov
in
xchg
push
js
pushf
int3
xchg
and
mov
mov
stos
out
sbb
xchg
ja
scas
mov
stos
test
xor
jmp
sbb
shl
mov
adc
xchg
pushf
xor
movsb
jns
xor
push
xor
call
push
stc
test
in
out
mov
je
mov
push
or
or
mov
pop
hlt
bound
mov
les
sahf
iret
cmpsb
sarb
inc
or
shlw
or
mov
inc
divl
cli
into
or
stos
or
cwtl
or
shrl
imul
xlat
out
leave
jmp
test
cmp
out
cmpsb
mov
pop
aam
out
jae
pop
push
xorb
cs
mov
or
leave
xorl
fists
xor
js
push
pop
stos
roll
ret
xchg
test
dec
scas
dec
and
std
cli
xor
repnz
mov
stos
es
lret
icebp
in
imul
mov
mov
mov
mov
mov
insl
mov
mov
xor
jns
fldt
pop
lods
adc
clc
seto
xor
ljmp
fadds
push
mov
lret
cmc
out
aaa
aad
pusha
hlt
outsb
in
push
fsts
aam
mov
mov
cmp
in
push
xor
out
out
lret
mov
subb
pop
sarb
out
or
mov
mov
call
ret
mov
out
and
leave
das
inc
dec
mov
stos
inc
pop
jg
xchg
imul
mov
or
repz
leave
mov
jns
lea
inc
lcall
repnz
jmp
cld
add
mov
insl
push
sbb
test
pop
mov
test
scas
lea
jge
adc
xlat
inc
or
jnp
lods
les
aas
pop
xchg
in
cmpsb
sti
in
cli
xchg
repnz
xchg
mov
cmc
push
popf
ljmp
aad
std
adc
mov
es
xchg
je
out
pop
inc
dec
and
push
into
cmp
mov
ror
or
push
dec
push
sbb
fadds
imul
sub
daa
and
sub
popa
pop
xchg
outsb
xlat
inc
bound
xor
mov
xchg
subl
dec
cmc
std
pop
int
inc
insb
adcb
pop
dec
dec
push
xor
push
in
inc
xchg
sbb
jo
mov
fistps
shl
mov
out
pushf
push
xchg
lock
xchg
mov
clc
lret
test
sub
sub
xchg
shrl
inc
push
sub
dec
int3
pusha
fsts
and
sahf
push
push
xchg
pop
movsb
jl
fwait
sub
lret
pop
or
imul
and
add
test
pop
mov
loope
jne
sbb
cmc
and
rorb
decl
xchg
jecxz
pop
jecxz
push
xor
ljmp
popf
cmpsb
cmpb
ss
cmp
cmp
and
sub
xor
mov
add
aas
sub
subl
xchg
dec
mov
lcall
out
stc
rcrb
testl
dec
lret
int3
sbbl
fisubrs
faddp
fdivl
cmp
adc
mov
mov
lret
lea
lock
sub
add
fsts
xchg
adc
insb
mov
out
mov
or
out
out
and
pop
lods
xor
lret
pop
jp
mov
xchg
jnp
sbb
or
jmp
mov
cltd
fcmove
into
dec
jae
sbb
popf
fildl
xchg
fcoml
jns
ret
es
xchg
movsb
movsb
je
jge
sbb
out
adc
scas
sub
stos
dec
stc
mov
cwtl
push
ds
stos
pop
sub
sbb
data16
mov
daa
push
dec
jo
int3
jns
adc
sbb
loopne
push
sub
repz
repz
cli
fnstenv
mov
or
mov
jl
fldt
testb
gs
pushf
add
inc
add
dec
sti
popa
xor
idivb
dec
xchg
mov
pushf
ds
fstps
xchg
stos
daa
lcall
dec
jo
mov
pop
fcmovnu
or
scas
scas
cmp
jae
mov
cmp
jmp
cld
mov
sub
push
cmp
or
rorb
push
or
mov
push
shlb
pop
insb
movsl
pop
std
xchg
setl
cli
and
adc
aas
sahf
adc
xchg
cltd
dec
aas
loope
push
adc
add
scas
or
cmp
cmp
daa
sub
or
sbb
mov
outsl
xlat
sub
das
inc
xchg
cmp
or
mov
jecxz
xchg
sbb
cmc
sar
jb
jle
cmp
lods
dec
addl
push
outsl
movl
sahf
push
aas
jl
sub
jecxz
cmp
mov
pop
mov
stos
test
jo
rcrb
lret
ljmp
shl
pop
cmp
in
cld
dec
fildll
mov
push
cltd
adc
push
or
cmpsb
push
nop
mov
dec
movsb
mov
mov
pop
inc
xor
lods
fisttpll
aaa
inc
movsb
je
mov
sbb
out
jecxz
int3
stos
xchg
aaa
stos
cmc
mov
cs
stos
aad
mov
and
jne
add
mov
ror
leave
pop
sbb
ss
fsubs
sbb
rcrl
std
shll
imul
cmpsl
mov
sbb
movsb
loopne
test
fsubs
jge
pusha
lds
fisubrs
in
add
sbb
ljmp
adc
ljmp
icebp
mov
and
push
fcmovbe
movsb
std
fsubr
or
or
daa
test
loopne
out
test
dec
movsl
dec
jecxz
sbb
aaa
imul
jecxz
call
loopne
sbb
pop
cltd
fcompl
pop
iret
popa
loope
xlat
push
insl
push
xchg
cwtl
ss
xor
jbe
ljmp
pop
jle
inc
je
call
loopne
in
mov
mov
push
ret
cli
inc
mov
shrb
push
pop
lods
frstor
leave
movl
iret
xor
mov
add
movsb
jns
xlat
inc
test
enter
mov
xor
sti
shrb
push
stos
daa
fwait
call
imul
inc
xchg
orl
out
jb
inc
jbe
mov
imull
mov
fists
mov
sub
push
andnps
pop
repz
xchg
inc
xor
cltd
fldl
push
xchg
ljmp
mov
in
test
lods
xchg
dec
dec
or
push
pop
jbe
sub
add
hlt
shlb
call
xor
sub
leave
data16
and
ror
fmull
repnz
addr16
adc
jecxz
xor
push
push
sti
and
in
xor
pop
push
cmpsb
cwtl
xor
pop
sub
add
roll
sub
jle
cmp
fstps
xlat
cmp
xchg
adc
das
ja
pop
sbbl
sbb
jg
adc
cmp
inc
mov
push
inc
imul
stos
rorl
mov
or
mov
xchg
mov
inc
movsb
arpl
lods
or
shl
xor
mov
stos
mov
aad
icebp
xchg
dec
inc
ja
sbb
pusha
mov
pop
fldt
jnp
cmp
loopne
in
outsb
mov
rol
into
in
push
fsubl
enter
das
push
icebp
mov
repnz
xchg
dec
jg
push
add
jbe
loop
xor
cmpsb
sub
gs
pop
in
mov
mov
pushf
push
cmp
jb
mov
fwait
das
fcoml
pusha
jg
fs
push
test
dec
nop
and
xchg
push
mov
fisttpl
dec
and
sbb
orb
scas
jecxz
test
mov
imul
mov
hlt
sbb
movsl
insb
pop
cmpsl
movsl
pop
inc
mov
mov
mov
lock
dec
fstps
push
movsb
adc
aad
loop
jae
adc
test
mov
aas
mov
cvtps2pd
sub
add
pop
test
xchg
movsb
lock
lcall
cmpb
mov
jl
lret
cmp
paddb
xchg
sbb
cmp
addr16
sub
fyl2xp1
add
in
and
sub
adc
imul
and
pusha
jmp
mov
cmp
ljmp
push
iret
adc
stc
mov
inc
mov
out
repz
divl
xor
popf
ja
fimuls
jns
fmuls
jl
std
mov
fstpl
xchg
les
inc
and
enter
cmp
ljmp
jg
iret
mov
test
jne
subb
inc
fs
rcr
fdivs
shll
dec
dec
in
jecxz
push
outsl
repz
sub
mov
xor
rcl
push
mov
add
jl
imul
out
into
xor
jbe
mov
repz
jle
xchg
xor
cmpsb
xchg
das
or
fwait
adc
rcrb
inc
push
mov
mov
lds
lods
jge
mov
jg
mov
scas
or
push
mov
cmp
adc
push
dec
jo
cld
push
cli
popa
xlat
xorb
pop
sbb
shlb
cmc
clc
xchg
pusha
sub
jge
jecxz
or
or
test
mov
cltd
and
pop
add
xorb
sbb
aad
mov
loop,pt
mov
lcall
movsb
jbe
push
rclb
lahf
cli
andl
add
and
or
enter
cli
push
fldcw
shll
cltd
xchg
mov
cmp
jl
loop
js
nop
lock
in
dec
pop
jmp
mov
jbe
std
add
lret
in
int3
push
jno
inc
mov
cmp
aas
out
inc
xchg
mov
push
shlb
push
dec
imul
push
dec
inc
adc
fldt
add
cmp
pop
dec
addr16
dec
sbb
sbb
aam
das
adc
aaa
cmpsl
gs
inc
sub
sub
mov
les
cmpl
out
mov
jne
arpl
mov
mov
rcrl
je
lods
mov
rcll
cwtl
cmp
ficoms
pop
cmp
adc
xchg
and
add
clc
imul
pop
jbe
adc
inc
out
idiv
movsb
xchg
ds
xchg
adcb
fisubl
ss
sub
add
push
hlt
and
repz
cltd
ret
jb
cmp
popf
cmpsl
cmpsb
sub
mov
sahf
ljmp
mov
pop
jmp
mov
in
and
test
lea
test
adc
das
xorb
sub
cwtl
lods
pop
inc
jge
sbb
add
shrl
fisttpl
inc
ljmp
push
fistl
adc
cmp
jne
inc
pop
out
push
cmpsl
imul
jmp
and
lods
lret
dec
testb
push
ret
hlt
lret
cmp
xor
repz
movb
lret
pop
fsubrp
ja
jle
ja
push
fcoms
cli
movsb
loop
fldl
and
inc
cmp
push
jne
shr
jnp
jae
stc
push
jno
scas
adc
insl
pop
and
aaa
pop
test
hlt
xchg
xchg
or
jo
das
in
mov
jb
imul
lods
subb
inc
pop
mov
xchg
mov
loopne
adc
mov
push
jge
or
mov
pop
test
insb
add
shl
adc
std
push
adc
push
push
test
out
repnz
out
jle
pop
pusha
jge
jecxz
mov
in
mov
cwtl
cmc
inc
pop
lods
pop
xchg
jbe
pop
mov
je
rclb
sub
mov
fisubl
sbb
cmc
inc
sub
sub
adc
addr16
push
iret
cmp
adc
mov
pusha
je
push
adc
adc
push
jmp
inc
cli
add
mov
mov
sarb
orb
and
scas
mov
loopne
sub
mov
test
push
loop
jbe
inc
xor
inc
addr16
pushl
sub
fwait
mov
aam
enter
bound
mov
push
stc
xlat
sbb
push
mov
push
stos
dec
push
jmp
inc
inc
inc
sub
cmp
cmc
mov
cmc
ljmp
sub
outsb
or
cs
or
fwait
aaa
in
popa
imul
jl
mov
inc
mov
xchg
xor
stc
sbb
stc
fdivrs
jmp
aad
cmp
push
add
imul
jns
adc
lahf
add
push
scas
jne
mov
inc
enter
call
aam
lret
mov
inc
mov
cmpsb
lock
add
stos
push
adc
push
mov
int3
fnsave
lea
shll
negb
rcll
inc
andb
je
jns
fs
bound
or
imul
fs
xchg
sar
pop
lahf
mov
shrb
push
hlt
stos
add
sub
dec
inc
adc
adc
sbb
sub
push
or
sbb
fdivs
dec
out
cmp
cmpsl
and
lret
sbb
mov
mov
mov
in
pusha
enter
iret
xchg
or
lret
inc
imul
scas
dec
out
movsb
adc
sbb
dec
mulb
mov
arpl
outsl
in
inc
xchg
popa
mov
popa
jp
call
cs
cmp
add
dec
lahf
leave
mov
cltd
out
mov
and
aas
pop
popf
xlat
stos
push
mov
mov
sub
and
mov
cmp
cmpsb
loope
lret
jo
dec
xorb
and
ror
nop
push
rcr
in
push
dec
or
bound
jnp
xor
mov
mov
xor
xor
lods
and
mov
dec
pop
push
std
iret
mov
imul
test
mov
cmp
dec
xchg
mov
je
pop
nop
push
stos
jo
and
push
mov
and
scas
inc
loop
fsubrl
mov
hlt
sti
inc
xchg
repz
jp
cmp
cmp
xchg
xor
xor
pop
xor
jmp
jnp
dec
or
mul
ret
jbe
mov
xor
or
rcl
xchg
add
les
mov
cmovl
aad
lods
scas
xchg
test
mov
push
mov
scas
dec
push
fsubrs
and
and
cs
mov
roll
xor
mov
ljmp
pop
adc
mov
pop
lahf
mov
add
in
scas
ljmp
jmp
xor
mov
sahf
icebp
inc
or
fsubrl
test
loopne
lods
in
sbb
imul
scas
pop
inc
jbe
enter
jno
xor
dec
xchg
popf
jle
push
and
not
add
add
daa
or
xchg
or
pop
mov
xchg
jg
pop
dec
out
lods
sbb
xor
ds
push
or
inc
shrb
call
jae
pop
add
or
daa
outsb
push
sbb
daa
push
jns
push
int3
sub
or
loop
lods
mov
lcall
shlb
lds
mov
mov
mov
std
or
mov
jmp
push
lods
xchg
pop
push
add
xor
popf
test
insl
xor
lret
and
and
sub
mov
push
fisttps
cltd
push
jo
or
test
cmpsl
inc
and
inc
js
adc
andb
add
lea
pop
xchg
jl,pt
mov
dec
mov
jmp
popa
jmp
or
inc
xchg
or
mov
fistpll
sbb
lret
daa
pusha
mov
sub
ljmp
pop
js
shrb
jae
jge
fildl
add
ret
out
incl
push
xchg
and
pop
sbb
inc
jo
sub
mov
mov
dec
mov
mov
and
xchg
mov
xchg
pop
fwait
repnz
in
adc
lds
cmp
outsb
jb
cmp
xor
and
jp
jl
mov
jg
sub
inc
sbb
fdivl
and
cmpsb
cmpsl
scas
outsb
xor
mov
and
inc
gs
push
sub
pop
xchg
stos
add
xor
mov
mov
push
cmp
test
rcl
shll
pusha
dec
jbe
or
orb
lcall
mov
out
pop
imul
inc
dec
test
pop
xchg
cld
pop
push
mov
jg
sub
ret
movsl
xchg
jno
cmp
mov
js
dec
call
in
pop
sub
insl
push
arpl
pop
fwait
mov
and
rcr
sti
sbb
testb
std
mov
lods
xor
and
lret
inc
leave
push
push
lret
arpl
insb
fnstcw
and
sbb
mov
xor
push
testb
roll
inc
add
pop
mov
jg
inc
pop
sub
lea
ja
cld
push
pop
mov
xor
jo
push
xor
mov
icebp
dec
sbb
cmp
pop
addr16
outsl
hlt
js
push
pop
lods
repnz
fildll
or
fidivrs
repnz
inc
cmpsb
das
les
cmc
test
subl
jmp
js
or
bound
sbb
fdivl
arpl
das
arpl
dec
movsl
sti
lods
in
ja
mov
mov
lcall
dec
fstl
xor
lea
ret
cmpsl
lock
divb
xchg
std
add
ficoml
mov
inc
xchg
inc
mov
shrb
mov
push
sahf
test
lock
sbb
xrelease
bsr
or
cmp
and
int
mov
outsl
ds
pop
add
rorb
fxch
sbb
mov
push
mov
push
lods
add
xchg
add
and
cmp
mulb
cmpsb
pop
jle
xor
fnstsw
lea
enter
sub
add
jae
and
cmpsb
push
mov
sarl
jae
jne
out
pop
scas
push
dec
scas
pusha
xor
popf
aam
jbe
mov
mov
movsb
jo
sarl
fiadds
es
cmovle
out
xchg
push
sbb
aaa
pop
ret
sub
push
adcl
fs
into
adc
imul
sbbl
adc
xor
sbb
mov
ds
fists
sti
les
sub
mov
mov
sbb
xchg
scas
nop
cmp
test
push
adcb
mov
lock
push
inc
pop
mov
lock
mov
scas
mov
add
jns
xor
adc
flds
filds
sbb
xor
and
fs
mov
adc
jmp
push
leave
arpl
jmp
pop
add
xchg
clc
cmp
loope
push
fwait
js
ja
cs
cwtl
inc
sub
sbb
inc
sbb
add
insl
cmp
std
stos
mov
dec
mov
and
ja
mov
or
push
ja
imul
lcall
dec
cmp
add
xor
pop
push
or
imul
mov
jb
pop
pushf
adc
test
imul
mov
xor
adc
fwait
xchg
jmp
icebp
add
aam
shlb
xchg
sti
stc
stos
rorl
popf
ret
inc
stc
mov
add
or
sti
fldl
xchg
jae
bound
cmc
cli
add
dec
popa
and
fiadds
sub
or
loop
cmp
fwait
jmp
aas
aad
jmp
xchg
pop
test
repz
push
xchg
testl
mov
popf
dec
sbb
mov
cmp
jecxz
mov
jp
shlb
lahf
dec
ja
shlb
fdivrl
sbb
icebp
inc
dec
pop
or
je
repz
outsb
cmp
test
test
jne
dec
out
lods
in
cmp
or
xor
ja
pop
dec
jns
xchg
lea
cmp
in
jecxz
cmp
ljmp
jmp
inc
mov
fldln2
popa
lock
add
lcall
loope
inc
lods
scas
sbb
or
push
push
rcrl
test
sahf
mov
je
ljmp
lahf
and
cmpsl
inc
sub
jo
xor
pop
fstpl
enter
cmp
xchg
cli
dec
or
loope
sbb
adcb
push
test
mov
hlt
jb
mov
jno
dec
dec
subb
in
int
ja
sub
paddw
dec
je
or
movsl
mov
or
loope
or
cmp
loope
xor
and
push
hlt
call
push
cmp
aam
ss
repz
mov
pop
mov
sbb
repnz
repz
mov
inc
fdivs
mov
push
cmp
or
ljmp
push
lcall
xlat
pop
std
cmovp
enter
cmpsb
adc
xchg
outsl
jle
mov
inc
test
ja
dec
xchg
orl
test
fwait
in
cmpsb
add
cmp
imul
lret
mov
fists
pop
mov
lods
mov
fcomp
adc
in
add
and
mulb
mov
push
sbb
xchg
dec
cmc
push
clc
les
xor
xor
sbb
lea
sahf
jae
gs
mov
push
add
ja
lods
adc
push
sbb
dec
divl
push
ljmp
test
pop
clc
out
inc
xor
shll
mov
cmp
insl
cld
iret
mov
aaa
cmp
lods
mov
scas
push
cltd
ja
icebp
and
xchg
rolb
iret
pop
pop
outsl
jle
imul
roll
pop
je
fstpt
lds
inc
sbb
and
ja
cmp
or
mov
pop
jb
jno
cmp
or
sub
push
xor
out
test
dec
dec
sbb
stos
xchg
lret
int
test
shlb
js
fmulp
sbb
ror
push
pop
test
jmp
jnp
lock
pop
test
sbb
adcb
lods
cld
in
add
cld
xorl
sbb
hlt
xchg
mov
cs
test
pop
enter
pop
adc
xchg
loopne
pop
pusha
sub
pop
enter
fsubl
xor
lahf
xor
test
or
mov
sub
and
jge
and
ficomps
fisubrl
aaa
push
hlt
pop
xchg
shrb
jbe
push
imul
xor
or
inc
dec
pushf
imul
xchg
xor
repz
pop
lock
mov
adc
cltd
and
lcall
out
sbb
cli
pop
popf
rcrb
insb
dec
out
mov
and
jmp
lahf
out
lcall
movsl
std
jnp
push
rcr
lahf
mov
mov
lret
pusha
xchg
or
xchg
ja
sub
adc
or
icebp
sbb
xor
data16
jmp
lds
leave
pop
inc
out
xchg
xchg
xchg
and
fcompl
pushf
sub
sar
dec
mov
clc
push
std
cmp
pop
nop
add
dec
inc
in
in
sbb
insb
or
mov
testb
dec
sub
push
mov
jle
cmp
shrl
push
sub
cli
loop
or
or
fld
adc
jecxz
pop
mov
mov
and
lret
sbb
push
mov
inc
jae
mov
push
insb
clc
loope
inc
sarb
pop
xchg
push
sbb
inc
jno
mov
fadds
mov
and
outsb
sahf
and
addr16
pop
push
mov
sbb
adc
mov
jmp
cltd
cltd
ds
in
lods
das
or
repz
in
cmp
pop
adc
pop
pop
jmp
dec
dec
int3
inc
cmpsb
gs
shld
sbb
mov
insl
icebp
and
mov
xlat
mov
cmp
decb
loopne
fstpt
add
in
push
dec
push
xchg
xchg
pop
std
pop
jge
jmp
push
out
shll
inc
cltd
lods
push
ret
sub
fdiv
and
cld
sbb
stos
idiv
sbb
sahf
mov
stos
or
jge
outsl
sbb
daa
stos
bound
jnp
int
sub
fdivrl
adc
push
mov
inc
adc
cmp
loop
push
sti
xchg
lock
out
shld
xchg
rcll
sub
jb
scas
outsb
lock
jb
sbb
std
icebp
lret
loopne
push
fstpt
push
sti
adc
stos
mov
outsl
inc
ret
adc
das
in
sub
call
fistps
aad
fists
into
out
and
scas
imul
or
pop
out
aas
push
xchg
bound
push
das
xchg
push
rcll
std
cli
imul
ret
iret
repnz
pushf
das
sub
xchg
push
mov
out
mov
jg
xchg
ret
movsb
sub
daa
sti
mov
das
sbb
xorb
pop
dec
jae
iret
mov
and
ficomps
cmp
sub
adc
cmp
jl
rcrl
pop
test
cmp
insl
inc
push
dec
stos
and
subb
pop
loop
xchg
dec
pushf
pop
out
adcb
sub
fisttpl
movsl
add
scas
pop
sub
stos
insl
pop
adc
mov
sub
sbb
out
enter
mov
pop
loope
sub
shr
inc
adc
daa
out
aad
jnp
jle
mov
pop
gs
xchg
push
ss
inc
sbb
out
pop
jmp
jle
and
mov
ret
xor
mov
hlt
xchg
and
iret
call
test
pop
cmpb
push
sti
push
stos
scas
lock
mov
scas
stos
inc
pop
mov
movsb
popa
lods
cld
jbe
or
je
into
sti
js
test
push
in
stos
fisttps
pop
cld
loop
movsb
adc
test
dec
lods
mov
jmp
shrb
jg
idivb
and
es
ret
or
es
xor
inc
xchg
or
xor
shll
call
push
pop
xchg
inc
daa
cmp
xor
rorl
cltd
sti
inc
out
xchg
sahf
mov
scas
mov
imul
mov
cmp
mov
pop
aas
adc
xchg
stos
or
incb
pop
shl
jge
aam
jp
lret
fs
or
jo
mov
rcl
adc
lock
sub
xchg
mov
icebp
fisubl
test
scas
scas
xlat
dec
pusha
push
and
into
xchg
ss
cmpsb
push
sbb
pop
daa
inc
out
sub
rcrl
pop
jb
out
xor
cmp
and
rorb
mov
mov
push
push
sahf
or
mov
rcrb
add
testb
test
sti
test
and
aam
mov
stc
xchg
sbb
mov
inc
sbb
jl
lret
pushf
je
push
nop
lds
test
push
xchg
jge
and
in
scas
lea
lahf
pop
mov
out
in
mov
cld
cltd
dec
dec
mov
adc
hlt
pop
roll
fstpl
inc
lods
test
jne
lret
jecxz
insb
jg
outsb
pop
or
add
adc
pop
sar
push
pop
cmp
sti
movsb
push
jo
lret
icebp
pop
jecxz
movntq
out
dec
cltd
push
int
mov
mov
in
mov
leave
stos
sbb
aad
out
jle
pushaw
sub
stc
clc
xor
imul
lret
jmp
mov
xchg
mov
scas
pop
idivb
cli
cltd
repz
fstps
cwtl
push
jg,pt
push
dec
sbb
into
pop
mov
loopne
inc
lods
lock
aaa
xchg
inc
cmp
cmp
xchg
inc
mov
dec
lods
sbb
mov
mov
push
add
fwait
out
inc
pop
iret
sub
inc
or
daa
and
adc
mov
fcompl
in
stos
fimuls
mov
addl
jl
popf
adc
pop
mov
jbe
insb
call
test
imul
aad
test
dec
push
cli
jmp
push
push
arpl
es
stc
dec
jb
mov
repnz
mov
arpl
pop
push
adc
mov
sbb
stc
push
test
es
lea
mov
out
inc
mov
in
cs
push
pop
test
pop
les
push
sub
mov
aas
xor
das
fstpl
jg
dec
sub
mov
dec
icebp
popa
push
mov
mov
iret
mov
jle
gs
sbb
or
or
fdivs
sbb
int3
in
xor
mov
push
inc
test
jle
xlat
fs
addl
in
popa
and
sub
repnz
or
jl
lea
adc
inc
push
sbb
fisubl
xchg
out
rclb
data16
ljmp
insl
fisttps
mov
pop
fstl
faddl
test
inc
push
pop
dec
aaa
inc
jo
std
faddl
addr16
or
sub
mov
lea
inc
hlt
clc
jns
divl
mov
jae
dec
inc
add
cmp
je
xchg
jp
popa
dec
bound
mov
mov
jmp
pop
iret
mov
dec
and
pop
and
testl
popa
add
add
nop
aas
sarb
xchg
repz
movsb
lds
xor
mov
and
xchg
xor
mov
lahf
sub
sbb
mov
fisubrl
push
mov
xchg
je
jno
add
and
jne
inc
es
xlat
fistps
sub
int3
or
fptan
xchg
andl
cmp
or
jmp
out
sub
push
push
add
lahf
mov
fmull
push
leave
xor
imul
and
pop
hlt
bound
bound
loop
cmpsl
sbb
cmp
outsl
testb
std
push
adc
out
in
jbe
orb
push
in
jmp
aam
xchg
ss
xchg
shll
push
add
mov
fwait
add
scas
dec
mov
orb
push
push
pop
loop
sub
xor
popf
mov
pop
movsb
pop
xchg
out
mov
jnp
das
mov
insl
cmpsb
sub
lret
andl
mov
test
daa
push
cmp
pop
push
push
pop
adcb
xor
test
popa
rcl
addr16
outsb
cmp
push
mov
enter
push
fcoml
dec
mov
mov
dec
sub
ds
fisubrl
jns
daa
cmpsl
loop
filds
mov
roll
xchg
pop
lret
ljmp
je
sahf
sbb
pusha
sub
adc
cmp
push
lods
stc
fstpt
dec
push
fs
pop
jnp
in
push
add
pusha
and
jmp
mov
mov
fdecstp
movsl
pushf
aaa
mov
push
and
dec
mov
jbe
jp
arpl
mov
mov
xchg
adc
add
jb
pop
test
cmp
scas
aam
mov
and
mov
sbb
jbe
insl
out
hlt
inc
push
mov
or
aam
xlat
filds
push
mov
fisttps
out
cmp
push
aaa
lahf
pushf
push
hlt
imul
xor
and
lds
xor
into
lahf
cmp
aam
pop
cmc
scas
out
push
push
adc
cltd
repnz
pop
sub
pop
ja
xchg
ds
dec
sbb
mov
shrl
ficoms
xchg
adc
mov
in
sti
fists
and
addr16
icebp
pop
loopne
inc
fbstp
stos
xchg
add
jno
ss
cld
das
ficoms
pop
pminub
cwtl
int3
push
ss
es
rcl
or
lock
jl
jno
jecxz
or
lods
and
sub
and
sub
sub
xchg
fimull
enter
sub
and
xor
sub
xlat
jne
lcall
push
mov
inc
push
scas
outsl
sbb
das
mov
pop
inc
stc
shll
ret
in
jno
inc
cli
addl
out
clc
fnstcw
ja
xor
mov
sub
dec
and
fdivl
adc
or
and
inc
pop
icebp
stc
adc
lea
and
fs
or
loopne
rcr
add
ljmp
inc
pop
mov
cmpsb
sbb
sti
pop
out
push
ret
loope
mov
out
jnp
add
add
jg
sahf
addr16
mov
loop
add
mov
iret
pop
adc
imul
not
movsl
inc
fstpt
sbb
xchg
or
ficoml
sub
arpl
mov
insb
pop
push
or
add
stos
sub
and
stos
ficompl
and
push
shll
repnz
js
dec
push
pop
mov
xor
dec
push
and
enter
mov
mov
push
mov
jno
ja
push
xchg
js
imul
aaa
adc
xor
dec
insb
stc
push
cmp
iret
pop
adc
add
stos
aad
lds
incl
xchg
insb
xor
jecxz
in
pop
xchg
out
out
xor
mov
fistl
and
xor
xor
cs
push
dec
mov
adc
lods
cmpsl
mov
in
rcrl
add
add
mov
stc
outsl
mov
pushf
dec
sub
cmova
js
fdivl
sbb
jge
jp
andl
ljmp
jns
adc
fistpll
mov
add
mov
fldt
leave
adc
popf
scas
clc
mov
lea
or
xchg
jg
lds
stc
dec
insl
addr16
fdivs
gs
lcall
cld
test
addl
add
mov
mov
lea
stc
and
pusha
das
sub
and
cmp
jbe
repz
mov
or
insb
mov
lahf
pop
rorb
aam
es
sub
mov
icebp
cmp
rorl
daa
inc
cltd
cmp
add
movsb
or
adc
lock
imull
popf
fldenv
bound
and
mov
xlat
cmpsl
in
sub
ljmp
dec
cmp
pop
pop
dec
arpl
test
pop
mov
cmpsb
sub
mov
or
sti
inc
dec
and
aam
dec
jle
sub
clc
mov
mov
sub
int
jbe
push
subl
mov
pop
add
push
add
push
mov
mov
sarb
in
or
push
addr16
adc
js
loope
int
dec
clc
sbb
inc
mov
adc
mov
add
jmp
push
in
and
mov
fnstsw
add
mov
mov
adc
dec
mov
and
mov
push
ds
push
stc
pop
aad
cmp
dec
stc
mulps
nop
fs
mov
test
test
adc
sub
cs
fnstsw
nop
lcall
clc
movsb
mov
rorl
adc
mov
ss
push
pop
push
fists
rorb
inc
mov
out
sub
mov
dec
xchg
dec
inc
jp
std
scas
dec
xor
mov
fdivr
xchg
pop
cmp
sbb
cmp
out
push
bound
test
loop
pop
gs
jecxz
mov
mov
leave
push
adc
sbb
cs
scas
test
bound
cltd
lds
in
lahf
mov
orl
fmuls
xchg
jns
movsl
jmp
repz
mov
sbb
inc
fadd
fsubr
divb
movsl
lods
xchg
adc
dec
adc
enter
push
cmpsl
into
popa
test
mov
add
pop
mov
xchg
or
adc
cmpsb
mov
dec
jno
aad
bound
ret
jge
in
mov
shlb
sahf
jle
mov
ret
add
lods
jp
pop
push
pop
cwtl
jo
sbb
test
in
addr16
push
push
mov
adc
adc
in
inc
popa
test
sbb
push
mov
test
loop
lret
popf
pop
mov
repz
and
orb
add
xchg
push
cmc
push
mov
dec
cmp
roll
shll
add
shll
adc
leave
jge
xor
jg
std
sahf
mov
xchg
push
test
inc
cmpsl
adc
jb
lods
mov
jb
fdivrl
daa
popa
xchg
test
je
pop
testl
and
mov
das
xor
pop
cmp
arpl
dec
or
aaa
ss
pop
adcb
inc
es
mov
inc
add
sub
jle
sub
popf
fcom
push
das
pushf
and
jmp
dec
or
sbb
push
int3
push
test
lods
rcrb
pop
clc
xchg
out
sub
add
add
repz
or
fdivs
fcompp
loopne
sti
xchg
jmp
icebp
cld
mov
cmp
out
mov
xchg
xchg
mov
hlt
pextrw
aad
add
or
cmp
aam
cmp
movsb
pop
inc
mov
mull
stos
shr
dec
lds
pop
fists
int
mov
mov
pop
leave
xlat
mov
xor
test
rolb
adc
loope
int
outsl
pusha
in
lock
fmull
dec
pop
aas
mov
push
push
add
mov
xchg
jbe
iret
fidivrs
out
pop
fabs
outsb
inc
and
cld
sti
mov
pop
jne
out
insl
cmpb
jl
jae
or
iret
rcll
lock
sub
popa
mov
inc
sbb
imulb
sbb
sub
test
inc
cmp
lods
add
jbe
xor
loop
mov
leave
jbe
jb
iret
ret
scas
xchg
cwtl
sahf
pop
pop
outsl
mov
mov
imul
daa
push
lea
or
mov
sbb
lea
enter
std
aaa
mov
adc
call
cltd
xchg
test
mov
stc
lret
mov
or
dec
rorb
inc
jmp
pushf
sahf
popa
xchg
xor
add
lret
or
inc
movsb
cmp
push
add
mov
jo
inc
xchg
jo
out
mov
mov
fstps
lahf
pop
pop
pop
mov
mov
jbe
cmpsb
js
in
add
sub
mov
lret
test
adc
or
cmp
mov
cmc
movsl
ret
cmp
mov
jns
pop
cmpsb
lcall
dec
ja
and
sbb
aas
arpl
fwait
push
mov
mov
mov
dec
jp
sub
addr16
jae
loope
outsb
mov
out
sbb
mov
mov
cmp
mov
lods
fs
inc
inc
inc
and
stos
inc
adc
mov
aaa
pushf
fldcw
cli
pop
inc
and
or
xchg
jmp
push
add
test
xchg
push
rol
or
mov
ja
les
clc
stos
and
xor
inc
shlb
popa
movsl
cmp
mov
movb
sub
cmp
xchg
xor
or
ficomps
mov
inc
push
pop
cmc
jns
int
push
pop
pop
lret
iret
es
pop
cld
xchg
jae
js
cli
addr16
xchg
jbe
add
lahf
push
mov
mov
pushf
lods
out
sub
fdivr
in
and
fdivl
out
mov
xor
add
jne
xchg
out
dec
fmull
repz
pop
xchg
and
sarb
push
pusha
scas
sahf
push
in
fldl
mov
daa
adc
lahf
inc
int
push
scas
mov
lahf
aad
test
and
fadds
or
in
adc
jno
push
out
jno
mov
inc
pop
mov
inc
push
mov
popa
and
cli
mov
mov
fisttps
mov
popa
push
add
mov
stos
mov
inc
pop
in
into
adc
add
push
stos
mov
dec
and
or
sbb
xor
mov
lods
stos
movsl
jmp
sub
jl
insl
lcall
rorl
jb
push
ret
cmp
xor
or
and
subl
xchg
mov
jne
repz
add
xor
inc
clc
lcall
add
movsl
jmp
push
mov
jp
xor
ljmp
cmp
fbstp
pop
inc
fisttpl
clc
xor
push
std
xor
xchg
pop
data16
icebp
jle
enter
imull
mov
jbe
lds
arpl
int3
std
adc
ret
outsb
in
xor
fdivl
into
jmp
lods
shl
push
xchg
clc
dec
sub
cli
gs
cmp
sbb
flds
sbb
dec
in
mov
mov
out
outsl
jno
add
mov
mov
push
adc
out
mov
inc
mov
dec
pop
das
jecxz
xchg
dec
ret
or
pop
push
arpl
adc
sbb
fwait
push
in
pop
gs
adc
insb
mov
stos
aas
and
xchg
inc
out
stos
jne
subb
in
add
lahf
addl
mov
inc
test
mov
ror
mov
aad
arpl
sbb
imul
sub
inc
les
cwtl
loope
lods
cli
stc
xchg
repz
insl
or
out
sub
cmp
scas
imul
pop
jge
push
cmp
mov
inc
mov
out
pop
push
cmpsb
movsl
in
cmp
out
movsb
mov
cltd
mov
push
ret
mov
fisttpll
orl
enter
shll
and
js
aam
test
sti
movb
cmp
cmc
sbb
jg
adc
pop
pop
add
shr
pop
loope
jge
inc
lahf
pop
jmp
adc
jg
cmp
add
in
cwtl
lock
movsb
addl
sub
fisttpl
imul
mov
xchg
adc
icebp
jmp
js
mov
mov
fs
jmp
sub
sbb
enter
lret
jbe,pn
sub
jno
ds
cmpl
inc
test
lahf
or
jae
std
and
mov
add
xchg
sub
push
das
paddsw
out
mov
push
out
dec
xlat
dec
fidivs
jecxz
outsl
xchg
cmp
test
dec
xor
arpl
fs
leave
leave
push
insl
int
push
test
jmp
dec
jp
imul
pop
scas
es
pop
cmp
mov
arpl
jbe
mov
scas
cld
fisttpl
jp
cmp
outsb
movsb
push
daa
adc
adc
dec
dec
pop
cmp
fidivrs
inc
add
mov
addr16
mov
add
in
pushf
cs
out
lret
mov
fwait
outsl
in
dec
jnp
xor
cmp
jl
add
test
aad
sub
movb
out
and
push
and
mov
and
mov
adc
cmp
xchg
xchg
cmpsl
pop
xchg
scas
cmp
jmp
push
data16
cmp
bnd
jge
push
rcrl
nop
fisubrs
outsl
push
mov
cli
test
xor
add
adc
jno
ja
movsb
cmc
add
addb
adc
or
pop
hlt
cld
inc
or
loope
cli
cmp
push
xor
int
add
xchg
lcall
sub
orl
negl
out
mov
mov
and
movsl
mov
pop
cmp
outsl
xchg
into
sti
xchg
jae
xor
dec
aad
addb
lahf
xchg
in
pop
sbb
xor
lret
int
xor
xor
pusha
mov
arpl
ss
push
fsts
movsb
sbb
call
movsl
xor
ret
pop
xchg
xor
dec
jle
add
popf
ret
xlat
fsub
inc
xchg
mov
push
in
clc
mov
repnz
int
sub
jae
sub
cmp
out
sub
push
xlat
inc
es
dec
xor
sub
mov
imull
test
insb
jmp
pop
mov
and
and
fld
jbe
adcb
cmp
push
push
shll
sti
push
mov
pop
sub
xchg
cmp
ss
sub
ficoms
push
push
ret
pop
loope
and
sahf
push
ret
inc
cli
fcmovnbe
mov
push
test
rcl
mov
dec
jnp
rcrl
cmp
repnz
fstpt
dec
insb
mov
shlb
scas
insl
loop
add
aad
mov
mov
pushf
ror
sahf
or
xor
mov
and
rcl
push
sbb
addr16
inc
pop
sbb
sahf
enter
pop
sbb
jle
pop
shll
cmc
decb
movsl
in
dec
push
and
xlat
mov
and
scas
dec
test
jl
jge
lcall
push
jb
inc
xor
sbb
mov
sti
pop
test
mov
xor
outsb
add
sahf
pop
leave
fwait
in
inc
je
shlb
cltd
push
in
enter
adc
mov
sub
fwait
adc
movsl
aad
pushf
add
scas
xchg
mov
int3
mov
jo
add
shrb
dec
mov
and
push
arpl
fstp
fistpll
inc
dec
mov
jecxz,pt
jge
mov
xchg
adc
rol
out
cmpsl
inc
sub
icebp
fsubrs
imul
xor
fwait
mov
std
mov
adc
mov
andnps
ficomps
cld
loop
inc
lret
push
lods
jns
cmc
mov
lods
xor
ljmp
in
xor
push
out
data16
xor
or
lcall
cmp
cld
inc
xchg
mov
and
and
inc
xchg
jae
pop
push
mov
jo
add
aad
jmp
pop
mov
inc
inc
sarl
mov
outsl
jle
inc
xchg
shlb
mov
xchg
inc
mov
and
inc
sub
out
scas
test
adc
mul
mov
outsb
cmp
adc
mov
sahf
fidivs
popf
pushl
xchg
mov
test
add
lock
jae
inc
addr16
in
inc
movsb
rcrl
fucomp
test
or
clc
je
jmp
aaa
jno
or
les
movsb
sbb
xchg
enter
mov
dec
xor
pop
jne
inc
xor
or
jae
addr16
or
mov
int3
xchg
aam
push
pop
insl
pop
and
mov
adc
sahf
inc
loopne
ret
push
mov
sar
aas
pop
mov
mov
add
std
cwtl
das
rcrb
sub
insb
mov
dec
loope
dec
adc
popa
ret
xor
or
shl
pop
lcall
lods
cmp
int3
aas
mov
push
das
cmp
nop
xchg
dec
insb
inc
pushf
xchg
lea
pop
faddl
adc
add
or
inc
mov
gs
adc
inc
mov
push
mov
xchg
sub
ljmp
lea
cwtl
add
adc
xor
hlt
inc
loop
xor
or
gs
lret
mov
inc
test
jle
insb
movsb
mov
cvtdq2ps
sub
dec
fiadds
popf
je
loopne
fisubs
mov
inc
push
adc
data16
ret
xor
xor
inc
shll
pop
mov
cmpl
ret
shlb
pop
inc
ss
or
xor
jae
jo
test
lahf
frstor
pop
and
int
inc
sub
or
aam
lahf
test
aad
dec
jo
jns
stos
lret
lods
adc
fidivs
xor
inc
mov
jge
sub
mov
xchg
in
neg
jne
jmp
data16
dec
push
test
lods
pop
fwait
lret
mov
xchg
dec
out
mov
jg
daa
dec
out
adc
pop
xchg
fdivrs
ficompl
ja
popf
xchg
popf
rcrl
loop
xchg
scas
dec
add
mov
inc
add
fs
push
mov
and
push
sub
xlat
mov
out
mov
inc
in
jle
lods
fiaddl
fisubrs
mov
cmp
jns
out
push
jle
movsb
xor
jl
and
shll
inc
or
sub
mov
jp
pusha
loopne
aam
sub
jae
mov
pop
mov
call
jmp
mov
sub
cmp
push
jo
aaa
ljmp
add
gs
or
shlb
dec
or
lock
out
mov
cltd
fstl
repnz
fsubl
dec
loopne
add
jnp
and
dec
arpl
popa
into
jmp
jne
mov
js
movsb
jl
xor
pop
or
push
clc
add
movsb
xchg
mov
les
pushl
sahf
lods
ja
nop
push
cmpb
ret
leave
or
inc
ss
adc
in
div
push
pop
pop
jl
mov
pop
jb
mov
mov
or
cltd
lret
es
jb
sub
leave
ret
iret
stos
push
rclb
sbb
mov
movsl
and
add
mov
sbb
filds
mov
and
les
dec
subb
or
pop
mov
setne
lds
add
and
pusha
cld
pop
mov
lret
fildll
jnp
iret
inc
xchg
lock
xchg
sbb
movsl
mov
push
sahf
push
por
repnz
adc
mov
or
xchg
out
arpl
pop
popf
into
add
mov
inc
mov
mov
inc
enter
xlat
cmp
jne
mov
push
mov
inc
jb
push
mov
push
xor
mov
int
sub
test
ja
xor
cs
test
in
mov
movsb
fists
outsb
push
ljmp
mov
push
sbb
mov
gs
pop
pop
sbb
xchg
mov
es
aas
icebp
popf
fmull
mov
incb
jae
je
mov
and
fs
mov
pop
shll
mov
jl
sub
loope
or
push
stc
jo
pusha
nop
cli
rcl
pop
popl
sub
incb
xor
push
hlt
mov
cmpsl
gs
push
push
sbb
add
mov
ljmp
mov
mov
pushf
gs
add
or
xor
pop
lock
mov
out
test
xchg
jo
push
loopne
pop
adc
or
test
data16
mov
mov
pop
leave
loopne
arpl
incb
or
add
mov
sub
test
push
jle
lret
mov
sti
dec
loop
cld
outsl
dec
mov
jle
scas
sub
jns
cwtl
jne
pop
loope
inc
inc
cld
adc
pop
test
cmp
cmp
pop
jle
lret
mov
sbb
lret
in
fldl
repnz
and
std
je
jne
adc
das
xchg
add
xchg
cmp
xchg
out
fisubrs
fidivrl
xlat
and
pop
aad
rolb
sbb
scas
jmp
dec
xor
es
outsl
pop
js
and
out
jae
aam
mov
xchg
sbb
xlat
fidivs
imul
loopne
sahf
scas
jne
xor
or
jp
mov
call
xchg
and
dec
and
add
addl
lret
push
hlt
inc
jg
shlb
xor
push
dec
das
pop
addr16
lds
pusha
sbb
shl
mov
test
adc
test
push
pop
lods
cmp
pop
iret
or
mov
lahf
and
gs
mov
cmp
lret
sub
std
repnz
dec
lret
adc
fwait
inc
test
mov
add
mov
inc
mov
pop
push
lods
add
add
add
in
pmovmskb
movsl
sarl
clc
scas
fcompp
push
xor
lods
and
push
int3
and
inc
leave
scas
cltd
lock
jmp
inc
daa
cltd
push
shrl
pop
in
ret
fbstp
mov
ret
cmp
fdivr
ret
xchg
nop
mov
les
loopne
jge
fwait
add
cmp
cmp
fs
pop
jb
std
mov
pusha
das
aaa
pop
sbb
mov
xor
pusha
push
mov
cmp
out
cwtl
outsl
add
jae
shlb
inc
jne
dec
mov
sahf
xor
inc
xor
or
lcall
add
dec
inc
dec
imul
mov
adc
mov
iret
sub
inc
in
lods
fs
inc
jl
popf
loopne
jecxz
sbbb
shrl
or
aad
negl
out
testl
push
dec
fisubl
jle
adc
std
xchg
jbe
cmp
mov
cmp
rcll
or
pminsw
sub
adc
es
pop
out
cs
daa
icebp
xchg
icebp
jmp
push
adc
je
test
mov
insb
popf
fucomp
lods
xlat
cs
fisttpll
test
insl
data16
call
push
mov
xchg
pushf
mov
mov
dec
ficompl
fisubrs
xchg
jae
sbb
pop
and
ret
and
fiaddl
push
jmp
gs
pop
push
mov
shrl
lcall
call
push
sbb
ss
clc
jne
jmp
or
outsl
dec
pop
jmp
lock
mov
jns
or
pusha
insl
cmp
pop
sub
xlat
jecxz
xlat
sub
lret
clc
test
jl
lods
cmp
cmp
xor
inc
sahf
fdivrs
mov
inc
mov
mov
mov
ljmp
in
jp
outsb
stos
fildl
popl
daa
shlb
add
xchg
mov
pop
loop
jbe
add
xor
cmpsl
das
je
divb
dec
and
into
out
sub
pop
gs
shrd
adcl
lcall
xlat
inc
push
cmp
pop
popa
xchg
push
mov
pop
cmp
call
pop
mov
lods
and
adc
les
fisttps
js
icebp
enter
cmp
xchg
fs
jmp
js
test
loopne
loop
xor
inc
mov
ret
jae
mov
sarb
cmp
ja
mov
popa
jb
ljmp
das
mov
cmp
std
and
stos
in
orb
mov
sbb
adc
fwait
cmp
aas
jge
sbb
icebp
pop
loope
or
ja
nop
pop
mov
imul
pop
pop
xor
xchg
and
jo
fwait
cmc
imul
cmc
lea
jg
cmpsb
xor
mov
push
in
shll
push
add
clc
les
testb
jecxz
cmp
je
icebp
and
pop
or
add
ja
sub
addb
xlat
and
into
cmp
dec
rclb
cli
cmpsb
enter
add
push
mov
mov
lcall
std
movsb
pop
jbe
mov
push
fistpl
adc
test
sbb
inc
dec
xchg
add
mov
mov
or
and
cmc
sahf
fs
fs
mov
daa
in
jbe
jge
dec
sub
faddl
jmp
lret
mov
in
and
arpl
imul
addr16
leave
pop
and
cmpsl
frstor
mov
cmp
imul
fdivrl
test
ljmp
xor
sub
cmp
inc
aaa
into
lahf
aaa
mov
pop
pop
cmp
xchg
mov
dec
lcall
sti
push
mov
popf
stos
cmp
sub
cbtw
das
sub
and
mov
push
popf
icebp
jle
aaa
stos
notb
add
mov
mov
inc
dec
jnp
and
mov
dec
sahf
or
mov
mov
xchg
adc
mov
outsb
and
stc
rclb
hlt
inc
jmp
jnp
push
bnd
imul
fsubrl
sub
push
inc
out
pop
ficomps
pusha
sub
mov
cmp
nop
xchg
pushf
pop
or
ja
pushw
push
xchg
xchg
data16
in
dec
pop
mov
popf
stos
inc
scas
push
je
mov
test
push
shll
mov
fidivs
in
dec
fsubs
lret
std
cli
mov
js
mov
push
sahf
mov
pop
out
and
sbb
arpl
jge
cmc
push
popa
ret
mov
popa
sarl
rol
push
ja
lock
test
mov
sub
sbb
cmp
fstp
imul
daa
shl
sbb
or
pusha
sub
xchg
pop
std
nop
add
dec
movsl
mov
shll
imul
and
rcrl
lcall
out
push
ja
loopne
in
jb
mov
fadds
ljmp
and
pop
push
add
gs
cltd
jge
insl
pop
out
push
jb
cmpsb
stos
and
scas
in
test
sub
pop
pop
xor
insl
inc
loope
movsl
lea
xor
cld
sbb
or
pop
ja
les
insb
cmp
imul
cmp
mulps
cmc
loop
mov
mov
ljmp
mov
fistpll
clc
dec
dec
fimull
cmpsb
shr
mov
fsqrt
mov
repnz
sarb
cli
adc
enter
aas
mov
outsb
mov
push
rorl
lods
lret
sbb
outsb
popa
cld
cwtl
mov
xorb
mov
mov
xchg
cmpsb
roll
sub
mov
or
push
enter
push
loopne
adc
bound
cmpsl
cmp
mov
xor
scas
jmp
pop
sub
mov
and
gs
dec
ret
adc
pop
loop
lods
lcall
in
ret
push
in
fwait
xchg
xchg
jmp
cmp
fmuls
sub
hlt
dec
call
ds
mov
and
xchg
sub
shrl
aam
xchg
icebp
data16
adc
loop
adc
insb
sub
mov
mov
sub
sub
dec
or
leave
fwait
nop
shl
scas
out
ret
je
adc
das
shl
stos
sbb
daa
dec
ret
add
jae
inc
cmp
add
adc
daa
cmp
jns
scas
jae
cmp
xchg
dec
cmp
cmp
mov
jge
inc
ret
sbb
jnp
mov
sbb
negl
js
in
or
ja
std
arpl
aad
sbbb
mov
fnstenv
cmp
cmp
es
sbb
lret
rclb
fsubl
lea
jns
mov
xchg
ror
adc
filds
and
clc
jae
dec
lret
das
mov
addr16
pop
dec
fs
xlat
aas
inc
sbb
push
scas
inc
add
es
das
pushf
das
out
cld
out
or
mov
jl
scas
mov
fwait
cmp
or
adcb
cmp
outsb
fdivl
cmpsb
jbe
adc
dec
mov
outsb
outsl
pop
fiadds
lcall
hlt
daa
or
mov
mov
sti
imul
test
mov
inc
mov
xchg
popf
iret
div
cmp
nop
out
or
ds
add
mov
xlat
pushfw
scas
stos
jns
push
xor
dec
xorl
push
push
mov
cld
movsl
ljmp
jno
ret
mov
xchg
and
push
lods
mov
pop
adc
push
and
mov
push
and
in
sbb
mov
das
jecxz
fsts
or
scas
xchg
les
ror
cmpsb
jnp
inc
sub
add
mov
push
push
hlt
ja
push
iret
pop
mov
cmp
push
mov
out
xchg
or
lods
mov
push
jl
repnz
dec
ds
test
in
sbb
insl
sub
cwtl
outsb
inc
gs
jns
jno
or
ret
les
push
scas
and
sbb
lea
ss
mov
inc
mov
mov
fwait
inc
cmp
or
lcall
dec
ret
leave
repz
adc
sub
adc
mov
push
ffree
in
mov
jae
cmp
repnz
or
scas
adc
imul
add
scas
idivb
rep
xor
push
push
mov
testl
lea
insw
movsl
out
pop
and
and
sub
popa
xchg
ret
fs
out
push
push
sub
dec
shlb
out
pop
fidivl
das
cmp
or
in
roll
add
and
fwait
repnz
mov
insl
bound
cmp
xorb
add
mov
sbb
test
aam
sbb
pop
xchg
stos
ja
pop
dec
or
cmp
movsb
cmp
or
mov
pop
pop
movsl
bound
lods
or
fld
pop
mov
push
mov
add
leave
push
shrb
sub
jmp
xchg
jae
lret
sbb
mov
sahf
shlb
scas
mov
jnp
inc
and
dec
xchg
notb
fs
dec
shrl
mov
sub
lods
jae
mov
jle
int
dec
add
sarb
push
stos
mov
jecxz
and
push
insl
push
dec
xlat
in
movsl
mov
dec
aaa
xlat
mov
jae
fs
or
xchg
movsb
pop
inc
lds
test
fcmovnu
and
mov
mov
mov
inc
mov
xor
jecxz
jmp
dec
fstpl
xchg
mov
clc
mov
push
push
int
inc
dec
xchg
lods
dec
inc
adc
aam
sbb
js
shll
jnp
ret
iret
shrb
movsb
sub
ror
data16
fdivr
sub
xor
sbb
push
jnp
dec
push
call
xor
roll
aam
mov
nop
jg
xchg
push
out
popa
in
daa
popl
mov
aaa
fstps
pop
xor
pushf
out
and
ret
jno
adcl
negl
inc
push
aaa
int3
aaa
lock
lahf
jo
xor
jmp
adc
pushf
xchg
fistps
cmp
sbb
xchg
dec
fldt
mov
xchg
cmpsb
stos
cmpsl
xchg
push
out
roll
inc
dec
cld
icebp
pop
shlb
dec
cmpsb
or
shr
or
outsl
out
add
scas
cwtl
fs
test
add
inc
pop
leave
mov
out
sbb
fiaddl
push
xor
test
lock
pop
dec
cmpsb
pop
push
jmp
insb
jbe
inc
xlat
pushf
ret
das
jp
popw
shll
push
sub
adc
sbb
sub
mov
or
adc
test
mov
outsl
fidivl
push
shl
xor
cld
mov
stc
add
sti
cli
pop
and
iret
jae
xor
dec
fcoml
xor
pop
mov
adc
mov
ss
mov
jp
rol
sbb
or
shll
mov
lret
pop
and
inc
adc
and
mov
repz
imul
push
xchg
and
loop
jg
sub
out
or
stos
leave
mov
lea
xorl
xchg
push
or
idivb
fbld
and
mov
adc
pop
fwait
loopne
add
pop
cmp
mov
mov
sub
fcomps
mov
mov
inc
nop
pop
sub
cmp
adc
push
or
dec
repnz
push
jge
xchg
push
outsl
or
lret
pop
inc
call
xchg
ss
sbb
scas
shrl
aad
imul
xchg
dec
lea
jle
dec
mov
aad
cld
lods
inc
dec
pop
adc
add
push
xor
sbb
inc
ljmp
insb
push
cmp
mov
and
push
subl
cmp
jmp
pminsw
cmc
gs
add
sub
hlt
jo
rorl
push
mov
stc
lret
leave
cmp
push
mov
call
and
ja
jle
ljmp
fcoms
sbb
mov
rcrb
cmp
xor
jb
sub
xchg
push
loopne
lret
cmpsb
mov
push
inc
and
adc
cmp
repz
mov
cmpsl
in
cli
sbb
dec
push
xor
ljmp
out
loop
fistpll
jae
and
addr16
cmp
pop
xor
mov
fadd
in
shlb
scas
add
mov
outsb
popa
in
jmp
mov
cmpsb
inc
stos
pop
mov
mov
aas
dec
insl
lea
stc
and
int3
fsts
imul
sub
push
mov
add
daa
mov
daa
insl
rcl
push
mov
adc
push
sub
mov
mov
fsts
addb
sub
fisubs
mov
sub
lods
sub
mov
inc
jg
jns
or
dec
inc
and
out
sub
and
xchg
jns
call
icebp
loope
push
xor
je
mov
mov
call
inc
fwait
jp
and
jne
or
mov
mov
icebp
mov
out
xchg
add
mov
push
dec
stos
push
mov
mov
std
adc
fistpl
outsb
clc
repnz
popa
fnstcw
mov
jl
inc
adc
xor
cmp
fsubrl
push
imul
dec
aaa
jae
and
ja
add
add
add
into
cmpsl
or
dec
scas
jl
sbbl
fistpll
dec
pop
sbb
sub
dec
sub
in
xor
cmp
mov
popa
stc
or
imul
ja
scas
imul
ret
add
jnp
adc
xorb
jae
sti
adc
cmpsl
imul
mov
xchg
jb
lahf
xlat
stc
push
mov
cmp
or
repz
sub
pusha
dec
dec
outsl
es
insb
sbb
pop
dec
xor
movsl
inc
popf
addr16
xor
dec
sbb
mov
xchg
insl
add
mov
bnd
shll
data16
jbe
test
push
fisubs
xchg
mov
mov
popa
loopne
cmp
out
push
inc
loopne
adc
mov
xchg
xchg
icebp
lcall
inc
mov
stc
jle
lret
jno
pop
ds
inc
cwtl
jecxz
in
mov
pop
lea
test
in
out
lods
and
sti
out
subl
sbb
adc
dec
repz
xor
dec
out
daa
xor
aas
sbb
cwtl
mov
push
adc
mov
mov
sub
mov
popa
fnstsw
test
call
in
xchg
outsb
pop
arpl
dec
inc
jmp
cmp
or
push
jmp
inc
shll
mov
arpl
xchg
stos
inc
xchg
sbbl
out
in
jmp
jmp
dec
push
or
add
cmp
push
jb
in
test
scas
sbb
xor
movsb
subb
das
inc
mov
fcoml
movsl
xor
enter
sub
aaa
aam
inc
fxtract
icebp
mov
pushf
sbb
add
and
xlat
cmp
mov
sbb
mov
daa
pop
inc
add
aaa
ret
dec
out
pusha
cli
mov
mov
sbb
test
add
pop
and
call
push
dec
or
je
data16
xor
sub
jle
mov
inc
testl
push
and
mov
mov
pop
xchg
jl
stos
ljmp
add
flds
mov
pop
push
je
cmp
out
fbstp
jns
in
cmpsb
cmc
ret
push
adc
sub
das
enter
lahf
mov
pop
mov
mov
cmp
in
jp
clc
pop
es
jno
scas
out
lock
dec
inc
js
xchg
out
sub
dec
push
adcl
adc
ds
fisubrs
ljmp
push
or
call
xor
sets
push
in
nop
mov
cld
push
jp
mov
in
mov
push
pop
data16
mov
xrelease
cmp
push
pop
pop
pop
test
les
sbb
outsb
outsb
bound
call
ss
adc
add
stc
test
inc
or
and
fld
and
mov
and
in
inc
cld
sbb
enter
test
ss
mov
xchg
pop
adc
adc
xchg
push
jmp
and
adc
dec
push
adc
test
adc
es
push
push
fsts
push
mov
test
int3
xor
insb
insl
int3
fidivrl
insb
inc
pop
and
jmp
add
mov
mov
add
and
xor
push
cmp
inc
shll
pop
in
out
lds
fs
and
xchg
mov
mov
pop
or
or
daa
ret
inc
pop
scas
xchg
push
and
or
lods
loopne
push
enter
push
movsl
pop
ret
cli
rol
jno
pop
cmp
into
inc
movsb
cmp
in
adc
adcb
fistpl
mov
jmp
push
gs
push
mov
jae
sbb
shl
and
imul
cmc
mov
cmp
cmp
xor
ds
cmpsl
jae
xchg
fisubrl
and
mov
fistps
rcll
addl
int3
in
sbb
outsb
or
cmp
sub
push
sti
inc
sub
inc
push
repnz
mov
dec
jbe
cwtl
cld
xor
stc
xchg
mov
aad
xchg
mov
mov
xor
mov
push
imul
cmpsl
aas
sub
and
dec
pop
lods
and
inc
dec
outsb
push
ret
and
in
cmp
jp
in
aad
sub
daa
pop
mov
sbb
add
ss
jae
das
popf
cmp
scas
out
out
sahf
inc
add
mov
push
repz
jo
gs
lea
mov
rcrl
pop
pop
fsubrl
mov
ds
mov
arpl
pop
inc
mov
mov
cld
mov
xor
test
xchg
les
call
fsubrl
fnstcw
not
icebp
dec
mov
mov
das
arpl
adc
sarl
xchg
fnstenv
or
sub
pop
ja
or
cmp
xchg
push
repz
in
inc
insl
popf
cmp
mov
mov
out
inc
mov
or
lock
and
jl
test
popf
jecxz
test
push
push
lret
mov
xor
jbe
jp
inc
andb
lret
mov
jb
mov
arpl
aad
jle
aas
loop
icebp
jge
movsb
lret
fs
cltd
fucomip
out
shrl
sahf
sar
into
rolb
mov
jnp
sbb
adc
adc
push
pop
arpl
xchg
xorb
divb
mov
jbe
call
je
mov
mov
mov
push
dec
cmpsl
mov
ret
or
or
das
test
scas
xor
mov
sbb
lret
mov
mov
sub
and
cmp
scas
xchg
mov
adc
ret
rorl
push
fs
pop
cmp
mov
sahf
loop
jmp
mov
mov
push
jns
pop
push
sbb
sbb
or
iret
xor
bnd
pusha
xor
stos
test
test
testb
daa
aad
push
pusha
adc
clc
cmp
rorb
out
push
pop
fimuls
aam
pop
jbe
cld
mov
js
scas
cwtl
repz
add
xchg
cmp
shlb
cld
mov
es
xchg
lea
jnp
jge
rclb
xlat
mov
nop
pop
iret
nop
scas
outsl
mov
xchg
stos
adc
dec
push
dec
pushl
pusha
mov
jecxz
push
cmp
iret
pop
outsb
loope
fcmovnu
mov
pushf
test
xchg
push
outsb
out
jno
mov
xchg
test
rorb
leave
incl
pop
pushf
or
popa
sub
fmull
push
sub
jb
xchg
ljmp
enter
cwtl
xchg
mov
push
jnp
lret
sbb
mov
lock
daa
stc
pop
repz
lods
mov
mov
inc
mov
or
gs
jecxz
mov
pusha
scas
aad
mov
or
aad
and
mov
lock
jae
adc
dec
push
xchg
pop
inc
lods
xchg
divb
int3
pop
sahf
insl
jg
sub
outsb
inc
and
sub
jno
sti
cli
cld
rclb
jge
sub
imul
in
dec
pop
das
dec
loope
jge
xor
jae
in
push
push
gs
sub
jo
imul
jo
loopne
xor
loope
push
jb
push
sbb
pusha
fsub
movsb
or
mov
dec
hlt
in
push
lods
sub
sub
sbb
cwtl
jnp
popa
push
jp
ljmp
dec
inc
mov
push
adc
sbb
xor
lods
xchg
push
in
sub
xchg
dec
mov
pop
mov
repz
data16
movsl
int3
hlt
mov
out
mov
stos
and
out
cli
xor
cmp
cmp
mov
sub
pop
inc
xchg
push
cli
leave
mov
or
movsb
mov
mov
aas
out
add
scas
jle
xor
out
sub
jns
dec
and
sbb
xor
imul
xorb
mov
lcall
dec
push
push
add
sub
pop
push
push
fstpt
loopne
pop
test
sub
fcoms
cmpsb
scas
out
push
cmp
cmpsb
clc
ljmp
pop
aaa
add
mov
insb
popf
pusha
sbb
sub
sbbl
jp
mov
mov
inc
iret
pop
xchg
in
enter
xor
data16
inc
pop
enter
aas
fld
mov
int3
sbb
jecxz
lock
es
scas
xor
or
out
flds
into
pop
pusha
dec
inc
or
push
lret
call
xor
mov
cld
ljmp
repz
insb
pop
sbb
js
mov
push
xor
icebp
push
es
xor
sub
dec
aaa
lds
fstpt
loop
ja
dec
fldt
aam
inc
xor
fs
sti
lock
int3
fsub
addr16
mov
nop
mov
and
xchg
pushf
add
sub
jno
sbb
imul
leave
call
mov
icebp
test
imul
or
js
dec
enter
insl
xchg
push
leave
xchg
mov
outsb
out
sub
pop
push
mov
sub
inc
and
aad
lods
mov
fcompp
sub
gs
outsl
inc
imul
fsubl
enter
dec
imul
mov
rclb
pop
adc
ja
fcmovnbe
repnz
pop
jne
adc
rolb
lahf
lahf
mov
mov
fwait
mov
outsb
popf
call
push
fnsave
cmp
mov
mov
or
ds
pop
aaa
sbbb
push
adc
fdivrs
aad
adc
mov
test
pop
jnp
pop
mov
push
push
cmpsb
mov
add
sbb
inc
cwtl
pop
push
add
inc
add
xchg
adc
pop
clc
icebp
xor
addr16
inc
push
icebp
xor
icebp
shlb
or
mov
pop
mov
add
idivb
push
add
add
mov
pusha
fnstenv
add
sub
mov
loope
and
sbb
mov
pop
push
outsl
adc
cmpsb
ret
adc
push
mov
icebp
jmp
gs
outsl
sahf
cmpsb
xchg
xor
aaa
inc
cwtl
cmp
leave
sahf
xchg
movsl
mov
loopne
test
lds
xor
lods
pop
pop
imul
into
lret
out
out
scas
mov
pop
add
bound
mov
mov
xor
ret
lret
mov
out
out
inc
xchg
and
or
xor
jl
sbb
mov
mov
hlt
mov
aas
std
jle
out
pop
xchg
sub
dec
push
jnp
inc
rorl
mov
fldenv
daa
popa
push
int3
je
cld
sti
imul
aad
rcl
add
ret
mov
pop
das
xchg
mov
outsb
add
xchg
xchg
mov
add
fldl
xchg
lods
mov
cmp
push
or
xchg
aaa
sub
xor
arpl
pop
sub
inc
shlb
add
mov
sahf
dec
inc
and
test
and
test
jl
mov
es
out
xchg
sbb
sahf
fstpl
jbe
repz
lcall
dec
jne
adc
xor
out
mov
mov
push
jecxz
es
jae
ret
xchg
inc
mov
adc
stc
mov
push
pop
imul
iret
jno
fmuls
xor
pop
out
repz
jo
mov
rolb
jmp
jmp
test
pop
jne
rcl
dec
aam
call
mov
adc
xchg
jne
xchg
push
int3
add
lock
adc
mov
inc
dec
mov
in
jo
int3
cld
xchg
xchg
mov
inc
mov
dec
push
inc
xchg
mov
xchg
ret
adc
mov
fiaddl
mov
into
lcall
jne
sbb
call
jecxz
sub
mov
std
lcall
jne
or
loop
insl
xchg
sub
sarl
leave
adc
mov
push
cmp
ja
fadds
loope
in
jecxz
sti
jne
mov
sbb
mov
shl
gs
dec
xchg
pop
rcrb
inc
lock
bound
xor
call
jns
sbbl
push
dec
lods
pushf
xor
fistl
pop
inc
aas
dec
call
mov
inc
push
and
fidivs
adc
leave
xor
subl
subl
push
rolb
push
jecxz
push
mov
adc
push
sbb
mov
xlat
pop
xchg
fwait
insl
push
lahf
or
ret
lods
mov
mov
jl
fiaddl
enter
and
pop
fwait
jne
fisttps
cmpsl
push
xor
and
insb
mov
dec
aas
lret
shrb
or
mov
cmpsb
pop
xchg
xchg
push
add
dec
cmp
cmc
adcl
fstpl
fisubrs
imul
lea
jnp
xchg
lock
das
loop
inc
stos
ds
les
add
repnz
loop
or
loop
jp
mov
fidivl
mov
mov
mov
sub
loop
loopne
dec
mov
and
push
das
or
xchg
imul
fidivs
pop
test
mov
add
inc
lods
out
out
sbb
mov
lods
xchg
ret
fisttpll
xlat
ja,pn
arpl
add
js
mov
mov
lea
iret
sbb
mov
nop
cmpb
pop
cld
adc
sbb
cld
jbe
xchg
sbb
mov
mov
out
ja
cmp
mov
mov
dec
mov
int
sbb
sbb
xchg
xor
jb
ljmp
cld
gs
jp
ror
push
inc
orl
add
lods
xchg
jns
mov
sbb
fwait
jnp
int3
mov
repnz
pushl
sti
inc
jl
lahf
mov
jae
cmp
daa
inc
mov
movsb
lret
sbb
cmp
push
inc
mov
inc
sti
push
xchg
inc
inc
addr16
cld
xchg
or
cmp
addb
loope
and
movsb
add
mov
inc
push
sbb
loope
in
and
sbb
or
repnz
pop
arpl
call
and
sahf
test
push
addr16
js
lock
ds
adc
pop
push
cld
cmp
out
jno
into
cmpsl
ret
ja
jo
stc
xor
lahf
scas
decl
sbb
clc
ret
fsubl
hlt
aad
mov
stc
lods
sbb
mov
in
or
sbb
test
cmpsb
cwtl
sbb
mov
data16
lods
shlb
mov
jae
add
mov
mov
call
xlat
jecxz
push
or
shr
dec
addb
sub
call
inc
xor
imul
sbb
or
jb
push
repz
sub
into
mov
jbe
mov
sub
test
mov
mov
mov
mov
push
add
addl
pop
and
enter
popf
loope
mov
dec
pusha
sbb
rorl
into
mov
sahf
cmpsl
decl
fs
nop
fistps
push
fidivrs
jae
dec
test
test
add
movsb
shrb
pop
jns
jno
jo
pop
int
adc
aaa
aas
negl
movsb
pusha
xchg
enter
add
mov
cmp
pop
xor
aad
jb
adc
mov
cmc
pop
fnsave
mov
sbb
pop
rcrl
je
sub
imulb
divl
rorb
stc
push
cs
data16
popa
cmp
mov
mov
ljmp
jmp
cli
mov
adcl
loopne
movsl
mov
cmpsb
dec
or
pop
lds
dec
mov
repnz
ficompl
sub
pop
mov
call
mov
xchg
dec
jb
dec
jno
iret
mov
lock
insl
xor
dec
rorl
mov
stc
fsubrl
sub
mov
mov
xchg
pop
iret
inc
xor
push
mov
mov
push
fs
arpl
hlt
movsb
lods
pop
cmp
scas
lahf
ret
mov
add
push
pop
dec
or
mov
jl
dec
jmp
mov
jo
shll
addr16
mov
push
or
adc
lcall
adc
xchg
ja
mov
push
inc
pusha
adc
movsl
aaa
lret
adc
scas
push
pop
sbb
inc
dec
mov
jnp
call
xchg
dec
int3
out
insl
mov
sbb
fstps
add
into
enter
xor
fildl
stos
pushf
mov
and
dec
popa
push
jle
pop
mov
clc
inc
cmp
lock
dec
iret
movsl
cmpb
mov
xchg
arpl
outsb
cmp
xchg
das
outsl
popf
lcall
sbb
fildll
mov
or
cmp
push
ret
mov
xor
and
ficomps
and
test
pusha
xor
pop
sysret
pop
jge
int
mov
push
xor
pusha
inc
sub
push
push
pop
jge
fs
nop
xor
mov
and
into
es
cmp
inc
negl
xor
dec
fisubrl
scas
ret
std
push
insl
xchg
and
lock
push
movsl
cltd
pop
iret
pop
push
sbb
add
pop
pop
into
fwait
clc
out
xchg
cmp
inc
inc
mov
icebp
cmp
add
sbb
sub
in
lahf
push
mov
repz
inc
test
pop
sbb
icebp
daa
cld
xor
inc
lcall
xchg
ja
fldl
or
fsubl
cld
jp
or
jmp
jle
xorl
mov
mov
enter
adc
sub
or
xchg
inc
outsl
mov
clc
shl
roll
jne
add
jge
int3
lret
mov
pop
loopnew
xchg
pop
outsl
push
push
out
inc
fadds
mov
test
mov
loop
jl
xor
movsl
cld
mov
rcll
mov
repz
call
adc
repnz
mov
cmp
mov
fisubrl
cltd
ret
lea
fsts
mov
jg
pop
xor
push
xchg
xlat
stos
mov
lea
sahf
push
pop
jl
cs
popa
or
repz
and
out
push
or
mov
lds
xchg
inc
cmp
mov
or
mov
mov
imul
adc
inc
sbb
push
testl
notb
jae
dec
jo
mov
fists
add
nop
orl
or
lds
sahf
jmp
dec
push
mov
cmp
inc
lods
add
dec
popf
aam
jle
pop
xchg
push
add
pop
lret
xor
movsb
or
aaa
pop
lahf
add
push
das
shll
cs
pop
lret
ja
into
sub
sub
inc
enter
in
arpl
enter
mov
cmpb
xchg
pop
movsl
pop
lock
adcb
dec
loope
pop
sub
insb
addr16
repz
or
popl
movsl
divb
pop
push
loopne
pop
loope
shl
addr16
int
out
xchg
cmp
test
push
pusha
cmp
xchg
mov
flds
lahf
mov
xlat
mov
dec
dec
mov
or
mov
and
mov
repz
addr16
push
movsb
push
por
scas
cmc
sbb
bound
inc
add
cmpsl
addl
lahf
inc
pop
xor
cltd
cmp
and
in
divl
or
jb
pop
xchg
xchg
stos
je
stos
inc
imul
cwtl
jle
ret
mov
pop
dec
mov
out
test
cs
orb
add
pop
jecxz
jb
loopne
or
test
push
and
adc
loopne
stc
insb
fcoml
out
out
repz
mov
popf
fldl
or
jno
andl
ds
pop
repz
push
cmpsb
test
sbb
bound
dec
ljmp
jb
inc
lahf
dec
imul
adc
inc
movsb
push
push
loop
lds
sbb
aaa
xchg
dec
add
cmp
cmp
xor
adc
into
dec
lret
cmp
xchg
enter
xchg
xor
js
data16
xchg
xchg
mov
add
inc
nop
cld
test
ljmp
cs
out
push
xor
push
mov
push
adc
push
inc
inc
adc
pop
je
push
pop
sahf
lea
fcoms
xor
adcl
sub
nop
fwait
rcrl
sbb
xchg
cwtl
adc
and
pop
jno
xchg
cwtl
push
das
jb
xorl
add
and
push
jmp
mov
cld
mov
shll
adc
dec
sarl
jbe
movsb
jne
mov
xadd
mov
xchg
mov
inc
mov
dec
test
sbb
popf
add
outsb
pop
jno
and
into
xchg
mov
in
rcll
xor
int3
sbb
or
xchg
cmp
cwtl
mov
in
leave
sbb
and
mov
dec
shll
lcall
lods
mov
mov
xlat
or
xchg
add
xchg
and
shl
bound
out
or
pop
dec
push
fcmovne
mov
int
jmp
sbb
imul
fs
ret
dec
dec
insb
jmp
mov
idivb
in
pop
dec
adc
rcrl
ret
rclb
in
mov
pushf
mov
pop
test
repnz
clc
push
push
test
loope
in
pop
out
loopne
and
stos
jne
cs
add
pusha
imul
test
mov
sbb
icebp
mov
jmp
repz
mov
fdiv
mov
pop
insl
lea
adc
outsb
addr16
jno
mov
pop
mov
inc
outsl
xchg
mov
imul
iret
jecxz
xchg
nop
call
cmp
pop
aas
dec
loope
cmpsl
jl
lods
out
mov
jbe
mov
fisttps
cmp
cmp
dec
dec
dec
mov
aaa
sbb
mov
insb
and
jb
shll
pop
jo
sub
ret
add
das
loopne
jle
pop
mov
movsb
or
andl
jns
lcall
rcrb
fmul
mov
in
mov
mov
push
bound
add
jno
mov
in
inc
inc
sbb
inc
aam
movsl
jbe
and
shll
pop
sbb
inc
push
stos
sub
popf
mov
mov
pop
push
mov
fcomp
int3
mov
lret
adcb
adc
stos
xor
jl
inc
mov
cmp
or
inc
int3
sbb
lahf
or
xchg
loope
mov
stos
in
nop
sub
pop
stc
or
inc
call
mov
lret
push
xchg
push
nop
mov
insb
push
cltd
jg
inc
add
xor
adc
rcrl
es
mov
out
push
push
std
lods
mov
js
xor
or
add
pop
pushf
mov
ficomps
adc
movsb
inc
dec
mov
mov
adc
lea
adc
into
movsl
cmp
mov
lods
test
cmc
mov
lahf
bound
insl
adc
inc
dec
rcrl
mov
icebp
test
jae
cwtl
adc
gs
dec
jle
sub
pop
cmpl
js
sub
dec
sbb
dec
add
repnz
dec
jb
cs
lods
cwtl
cmc
jnp
mov
jp
into
sbb
aas
jecxz
mov
lret
cmp
jmp
out
lret
insb
call
in
popa
and
popf
lret
mov
push
pop
popa
loop
dec
add
test
sbb
data16
mov
in
in
xchg
in
dec
mov
mov
int
into
and
mov
pop
rcrl
mov
test
loope
mov
roll
jo
mov
out
mov
cmp
jecxz
std
xor
jno
pop
mov
stos
into
push
popw
jbe
jp
imul
nop
sbb
dec
or
jns
repz
movsb
pop
xor
addr16
fs
xchg
push
leave
inc
xchg
enter
loop
cltd
mov
adc
inc
shr
data16
repnz
cli
cmpsl
xchg
jl
jg
lcall
xchg
or
mov
fucomp
dec
add
fwait
mov
mov
xor
inc
in
jno
loop
ja
popa
adc
lock
adc
repnz
push
xchg
cmp
les
sbb
dec
stc
and
dec
mov
dec
insl
pop
rcrb
mov
jo
mov
addl
cmp
int
mov
incl
iret
fstpt
jle
pop
mov
xchg
ja
out
sbbl
pop
in
fldt
leave
jge
pop
inc
into
adc
dec
lds
lcall
cmp
and
inc
xchg
insb
add
inc
xchg
in
loopne
mov
cwtl
cmp
clc
enter
arpl
rcrl
rorb
hlt
push
sub
mov
out
mov
push
mov
hlt
leave
jne
lret
or
sarl
and
adc
xchg
jns
cmp
sub
xor
cmp
nop
jae
cmpb
mov
aam
mov
mov
cltd
addr16
inc
subb
adc
push
push
mov
or
int
push
outsb
test
jmp
sub
cmp
test
mov
popf
or
push
in
dec
cld
jl
fwait
loopne
lahf
push
xchg
mov
inc
int
sarl
cmp
pop
rcrb
in
push
cmp
adc
pop
or
shlb
mov
in
test
call
mov
xchg
les
jl
fildll
push
lds
sub
xchg
or
push
cmp
push
xchg
lahf
xchg
or
cmp
sbb
sarl
ret
pop
in
pop
add
push
imul
in
imul
push
jp
sar
js
sbb
ja
sbb
test
out
cmp
cmc
xor
mov
inc
scas
shlb
mov
push
fdiv
dec
out
mov
jns
std
jo
shll
lcall
pusha
or
in
shll
mov
sbb
mov
in
stos
mov
unpckhps
das
jo
popf
cmp
in
stos
pop
xchg
call
cmp
int3
arpl
stos
adc
rol
mov
lea
mov
pop
jb
and
mov
test
sub
testl
xchg
mov
fbld
mov
test
mov
fbstp
or
js
dec
shrb
fisttpl
mov
dec
cmp
inc
sub
jne
outsl
ljmp
fnsave
xor
das
and
stc
aas
popf
mov
mov
test
or
xor
pop
scas
clc
cmp
out
xor
cmpsl
cmc
imul
cmp
jmp
dec
into
jnp
xchg
mov
clc
cmp
fidivrs
sbb
jnp
out
pop
pop
rol
mov
jb
shl
push
add
mov
outsb
ja
pop
sub
xchg
mov
xor
sarb
inc
or
fwait
imul
cmp
jg
movsl
add
testb
pop
and
push
xlat
mov
mov
insl
mov
jno
ja
mov
pop
sub
mov
xchg
sbb
xorl
movsl
cmp
movl
fadds
mov
mov
push
sub
lods
and
incb
hlt
jg
scas
dec
and
mov
mov
jle
sbb
xchg
and
jge
mov
in
sub
push
lds
hlt
pop
sbb
xchg
jle
addr16
cld
test
jns
cmc
sahf
movsb
push
dec
xchg
subb
inc
fwait
push
inc
mov
adc
dec
movsl
pop
cs
lds
adc
lods
mov
jb
inc
or
pushf
repnz
cwtl
notl
xor
fxam
mov
repnz
lcall
in
lds
fdivl
mov
popa
fbld
add
test
push
cld
xchg
ljmp
leave
in
mov
mov
enter
imul
in
fsubs
testb
and
xor
adc
xchg
rclb
xchg
lock
scas
pop
dec
mull
sbb
push
push
xor
jg
and
out
fsubr
push
cvtps2pd
dec
pop
cwtl
movsl
notb
lret
mov
imul
cmp
and
dec
sbb
xor
mov
sbb
add
lods
ret
xlat
pop
ljmp
xchg
fidivrl
push
int
cmp
cmp
repnz
mov
dec
inc
shlb
pusha
xchg
mov
loope
adc
and
sub
jmp
push
inc
cmpsl
out
bound
psrlw
in
int3
inc
scas
sbb
mov
dec
mov
or
xchg
sbb
lods
or
lods
ss
sub
push
pop
dec
adc
jnp
lods
cmp
xchg
jns
cs
xlat
mov
movsl
xchg
shlb
es
mov
out
ss
xor
mov
mov
jbe
fmul
aam
adc
cmpsb
and
dec
call
test
xlat
fs
mov
xor
fcomps
xchg
jnp
lret
push
xor
lock
pusha
mov
jecxz
sub
xchg
imul
xchg
xchg
dec
enter
adc
xchg
lret
movsl
sub
mov
mov
ret
sbb
jns
out
dec
mov
lcall
mov
repz
mov
mov
inc
lock
out
loopne
mov
inc
sub
pop
iret
sub
stos
and
mov
mulb
jo
xor
test
xchg
cmc
aad
pop
daa
and
ret
divb
jge
jo
xor
lea
sbb
sub
cmp
mov
sub
bound
and
iret
mov
std
inc
xchg
shrl
ljmp
push
adc
ljmp
iret
enter
cmp
pop
and
mov
inc
orl
mov
repnz
mov
fisttps
pop
dec
adc
sub
fwait
mov
add
pop
enter
fldt
lea
sub
ds
and
arpl
add
push
pushf
xchg
jg
adc
mov
shlb
scas
fs
and
xor
nop
mov
mov
pop
shlb
push
jno
ret
push
std
adc
jp
outsl
ret
fidivs
leave
cwtl
xor
push
push
aad
shlb
call
xchg
in
test
sahf
mov
data16
outsl
aas
lcall
lret
fistpll
push
mov
xor
push
jno
insb
jmp
sub
addr16
pushf
jmp
cmp
into
test
push
push
insl
adc
mov
fsubl
fs
mov
mov
pop
pusha
sub
les
push
je
pop
movsb
push
dec
mov
les
test
out
push
or
lods
add
ror
or
movsb
scas
jle
test
push
or
and
pop
arpl
mov
lods
bound
adc
movsb
lods
mov
xlat
les
mov
or
sbb
pop
sti
hlt
add
scas
test
xchg
jecxz
pop
mov
push
xor
hlt
adc
sbb
loopne
and
xchg
repz
sub
mov
jae
insl
repz
or
sub
jg
push
mov
push
rolb
aad
pop
mov
fisubl
xorl
mov
xchg
or
pop
arpl
sub
dec
xor
lret
add
aad
push
inc
lret
lcall
mov
outsl
hlt
mov
fiadds
push
in
fmull
lods
jo
mov
xorb
cs
in
rcrl
sar
fs
mov
in
dec
enter
lcall
fstpl
in
or
jns
xchg
ret
sub
pop
xchg
call
imul
lret
push
push
mov
add
ja
mov
int3
ret
outsb
cmp
loopne
cmp
scas
scas
pop
cli
mov
fisubl
ret
std
mov
jl
popa
jno
cmpsb
and
push
xchg
cmp
rcrb
icebp
adc
adc
or
incb
rorb
xchg
rcl
mov
lcall
jl
inc
int
adc
jb
push
cli
aaa
in
stos
dec
xor
xchg
dec
jb
dec
sahf
mov
data16
pop
sbb
mov
aas
or
rcrb
push
cs
and
insl
sub
movsb
lods
pop
jecxz
mov
mov
mov
push
push
mov
jbe
shl
clc
xchg
xor
and
sbb
idiv
xor
adc
mov
push
and
shlb
mov
lcall
xchg
jo
sbb
inc
pop
popa
dec
cld
jl
cmpsl
mov
jo
fs
mov
pop
sti
bound
or
push
popa
push
testb
scas
rcrb
inc
test
xor
lods
xchg
insl
sbb
mov
jae
out
loop
or
dec
xor
aaa
mov
xchg
inc
jbe
addb
mov
adc
pushf
cmpsl
pop
mov
insl
sbb
std
outsl
push
mov
add
sbb
adc
add
mov
loopne
push
insb
or
shrl
cltd
lcall
leave
xor
cmp
or
pop
fucomp
jne
mov
movw
inc
int3
out
shlb
add
inc
inc
shlb
mov
repz
js
pop
dec
inc
pop
scas
testl
jmp
leave
sub
cs
iret
sbb
insb
movsl
in
and
dec
pop
xchg
sub
icebp
mov
push
popa
test
xor
adc
fdivrs
inc
adc
imul
ret
jns
xchg
mov
cmp
std
adc
inc
subb
sti
xorb
push
sub
or
cmp
fs
jmp
js
dec
push
mov
stos
inc
lcall
jp
jbe
test
pusha
test
xchg
lea
sbb
fmull
jecxz
dec
repnz
test
es
mov
insb
addr16
outsb
gs
cmp
sbb
push
ret
mov
or
pop
ljmp
mov
jns
and
mov
dec
pop
add
orb
fadds
cmpsb
mov
out
jl
pop
enter
fbld
push
xchg
mov
and
sbb
stos
dec
insb
xorl
mov
cmp
pop
js
lret
fidivrs
out
or
ja
int
fwait
jo
dec
cmpsb
fldcw
in
testl
aad
adc
jl
sub
mov
sub
mov
cmpsl
filds
es
xor
arpl
xchg
test
mov
bound
xchg
inc
rcrl
es
xor
iret
out
mov
pop
testw
bound
lret
repnz
call
sub
gs
pusha
stc
aad
scas
mov
hlt
ja
sub
push
in
int3
fmuls
jmp
shl
test
aam
and
lds
mov
pushf
push
or
push
ds
sbb
enter
je
mov
fldcw
cmp
test
enter
insb
jg
insb
repz
insl
ret
out
lds
dec
call
xchg
push
loope
lods
sub
les
cli
movsl
mov
sbb
in
out
das
mov
lret
outsl
movsl
lds
push
mov
lds
sbb
sbb
into
dec
mov
cmp
inc
pop
jns
fcomi
fdivs
shrb
fcomp
dec
cs
dec
mov
lret
scas
hlt
xor
inc
dec
add
mov
mov
inc
cmc
push
xchg
rorl
popa
add
push
pop
and
cltd
push
jge
add
push
mov
test
add
ret
jg
adc
xchg
push
aaa
gs
pop
aam
outsl
xor
das
pop
out
fisttps
cmp
push
sbb
scas
cmp
lods
dec
pop
jecxz
push
dec
dec
inc
les
lret
jp
lods
in
imul
mov
les
mov
divl
fucomp
bound
adc
fs
sbb
es
pushf
jns
aad
xor
dec
cmp
out
sub
pop
gs
pushf
add
cmpl
pop
cmp
mov
lods
in
or
push
aam
lahf
jae
mov
xor
xchg
movsl
mov
sahf
sbb
pop
popf
out
sbb
add
cs
shl
das
stos
mov
cmp
mov
or
add
je
xchg
test
add
inc
pop
clc
out
pop
fsubrl
push
repz
push
jg
dec
outsl
or
cmp
das
cli
pusha
sti
sbb
adc
into
das
pop
jmp
inc
xor
fisubrl
push
imul
repnz
push
xor
cwtl
ret
or
hlt
je
cwtl
mov
mov
out
mov
repnz
mov
inc
mov
mov
out
lock
push
in
push
mov
jle
dec
pop
mov
loopne
cwtl
pop
and
test
fcmovnb
push
loop
out
aad
hlt
inc
cltd
sti
pop
filds
ret
cli
sbb
outsb
adc
stos
dec
aaa
dec
mov
pusha
mov
hlt
popa
frstor
adc
cmp
jp
jae
andl
fisttpl
inc
jle
sub
aas
pushf
jl
mov
and
mov
add
sub
dec
jecxz
movsl
jnp
addr16
sbb
jne
cmpsl
aaa
mov
xchg
enter
addr16
pushl
repz
lds
clc
or
js
xor
js
add
or
push
dec
cld
ja
int3
mov
test
push
mov
in
jmp
push
bound
out
stos
repz
xor
ret
pop
outsb
nop
lds
add
arpl
arpl
shll
sub
add
sbb
xchg
lea
and
add
test
xchg
and
sbb
mov
add
xlat
clc
loopne
xor
and
imul
add
mov
out
inc
cmp
testb
mov
mov
adc
sbb
leave
cmp
cmp
and
ja
dec
xchg
and
out
icebp
enter
mov
lods
dec
loope
imul
mov
lods
mov
mov
xor
fsubr
nop
mov
js
mov
je
pop
xchg
cmp
mov
jno
enter
test
fldl
inc
repz
sbbl
sahf
jmp
mov
xor
cmpsl
pushf
outsb
xchg
inc
pop
jo
add
sbb
enter
negl
je
jne
into
enter
mov
out
jmp
cmpsb
sub
dec
pop
adc
push
or
in
out
adc
fcompl
repz
adc
pusha
dec
stos
aam
nop
pop
xor
testw
test
fucomip
hlt
dec
sub
mov
jae
jo
cmp
cld
push
xor
data16
or
shl
jnp
out
stos
lret
shll
pop
iret
ljmp
mov
xor
cmp
mov
scas
aad
cmpsb
movsb
jl
dec
pop
add
ficoml
push
ror
xchg
out
fwait
sbb
mov
aaa
or
pop
jbe
subl
jno
test
adc
fiadds
stos
enter
incl
dec
lahf
lods
mov
mov
ds
mov
pop
rorl
stos
aas
xorb
out
jle
ljmp
testb
sahf
sbb
xchg
mov
and
mov
mov
stos
imul
add
push
dec
sbb
adc
pop
test
dec
loop
pop
test
insl
sub
mov
notb
pop
adc
dec
jmp
lret
mov
fndisi(8087
les
pop
int
data16
call
cmpb
pop
inc
in
sub
add
xor
or
jle
out
lret
jo
mov
fs
les
subb
outsb
adc
sbb
sub
sbb
lret
fisttpl
inc
lahf
jg
into
inc
pop
lcall
pop
push
out
popf
or
xorb
mov
movsb
sbb
jae
adc
jo
mov
pop
mov
outsl
mov
ljmp
testb
in
push
and
sbbb
sahf
nop
mov
or
lahf
push
rorl
cmpl
ret
dec
sbb
pop
push
sub
insl
addb
cli
sub
lret
aaa
xchg
cmp
dec
cmp
adc
test
cmp
mov
fmul
test
test
add
mov
cmp
ret
out
mov
sbb
add
fistps
add
ljmp
jp
xor
ljmp
scas
dec
jne
or
adc
dec
jecxz
cmp
pushf
sbb
inc
sub
xor
lea
popf
bound
jbe
es
inc
add
in
pop
std
arpl
mov
fildll
ds
pop
inc
fcomps
add
aaa
pop
jno
jb
dec
sbb
mov
mov
xchg
ss
cmp
aam
sbb
lret
or
mov
inc
pop
and
test
pop
xor
idivl
cmp
das
mov
nop
rolb
cmp
inc
pop
cli
call
xor
jbe
pop
aas
xchg
mov
cli
cmc
test
mov
push
add
mov
cmp
lret
pop
enter
add
ja
outsl
imul
cmc
mov
mov
loop
dec
je
cmp
lock
pop
sub
js
add
ret
pop
xchg
pushf
jg
or
aad
mov
add
and
dec
sbb
jge
add
sub
ljmp
push
sub
icebp
leave
push
xchg
xchg
and
and
push
aam
nop
aam
nop
or
das
xchg
inc
push
or
mov
adc
push
notb
ficoml
int3
xor
xchg
scas
pop
push
je
push
in
jmp
inc
sub
repz
imul
and
sti
xor
ret
in
add
inc
xor
loope
lret
cltd
push
lods
push
repnz
ljmp
out
dec
lods
movsl
pushf
pop
sub
xchg
push
mov
push
lods
inc
ds
sub
jo
mov
and
icebp
mov
cld
sbb
xchg
imul
aad
mov
insb
popf
xchg
sahf
push
in
cmpsb
xchg
pop
xor
add
jb
test
mov
jl
hlt
inc
and
int3
pop
ret
cmp
and
cltd
xchg
inc
mov
fcoml
outsl
insl
cmp
or
icebp
push
hlt
mov
out
aam
loop
mov
shll
mov
mov
or
mov
sbb
mov
ficoml
xchg
decl
aas
nop
lock
push
xor
das
out
add
ds
push
test
and
call
dec
xor
data16
sbb
loope
dec
shrl
add
mov
testl
xchg
dec
jge
ljmp
push
push
mov
rcll
repz
xor
inc
ret
xchg
int3
or
ss
jl
mov
test
cmp
xchg
sub
ljmp
cmpsl
mov
sbb
in
test
mov
fbld
mov
inc
fwait
sbb
sbb
push
iret
dec
std
mov
lods
mov
pop
inc
jge
push
in
test
pop
add
and
scas
jp
ret
lods
mov
das
popl
cmp
rcr
xchg
sarl
push
fistpl
ds
push
mov
aaa
outsl
addb
jno
mov
xor
hlt
adc
lds
adc
sti
or
rcr
loop
mov
shl
jecxz
fbld
out
mov
xchg
mov
cmpsl
mov
mov
and
dec
or
cmc
mov
mov
fcoml
rolb
jns
jp
mov
inc
aas
sti
sub
sbb
xchg
xor
pop
mov
xchg
pusha
xchg
sub
lret
pop
mov
enter
sbb
ja
fiaddl
cmp
xchg
insl
push
push
inc
mov
lahf
test
jg
cmpsb
scas
jmp
popa
test
dec
add
sbb
jb
addl
sbb
in
mov
into
dec
jno
movsl
add
test
ds
out
inc
sub
popa
adc
jns
or
cld
jno
daa
pop
ljmp
sti
fsubp
jnp
sub
call
pop
xor
stc
or
daa
std
mov
pop
ds
or
inc
pop
mov
xor
addr16
xor
push
aad
loopne
je
stc
push
mov
fcompl
scas
inc
les
out
xchg
or
adc
sahf
pop
popf
out
fisubrs
push
cli
adc
pop
pop
cli
hlt
adc
sbb
clc
int3
or
rep
or
enter
sbb
xchg
adc
icebp
cmp
ret
loopne
cmp
dec
aam
push
mov
into
movl
cmp
add
test
in
clc
mov
cmpsb
movsb
in
and
lea
jae
inc
xor
dec
imul
xlat
fldl
xchg
xchg
dec
loopne
je
fwait
mov
adc
cmp
sarb
call
fcom
add
imul
out
jmp
out
cmp
mov
and
insb
shr
pop
nop
dec
push
sahf
insb
mov
notl
cmpb
sahf
subb
cmpsb
movsb
scas
mov
cmp
fcompl
inc
xchg
lahf
test
arpl
fstpl
in
inc
test
test
adc
std
fisubl
sbb
cmp
int
adc
mov
ret
push
out
mov
inc
iret
rcrl
mov
cli
mov
pop
pop
lods
or
in
js
sbb
dec
and
out
popf
cmp
inc
mov
pop
imul
add
jno
jno
icebp
test
ret
fidivrl
cli
pushf
inc
cltd
in
inc
lds
imul
lds
push
lods
xor
or
adc
and
pop
mov
sbb
ljmp
test
or
lret
aas
adc
bound
add
inc
sub
mov
mov
imul
jb
mov
jmp
xlat
in
sub
xchg
mov
sbb
push
adc
movsl
and
jmp
or
pop
hlt
aad
in
adc
xor
jl,pt
or
mov
fdivrs
int
xchg
mov
pop
jbe
adc
push
xchg
and
decb
pop
mov
sub
inc
or
in
cmp
inc
test
dec
into
shrb
mov
pop
in
and
inc
test
inc
test
push
in
je
sar
xchg
pop
or
inc
lret
test
test
push
cmp
sub
loop
shl
cmpsl
sub
sub
inc
das
cmpb
sub
pop
in
mov
jg
mov
movsl
inc
loop
js
mov
jecxz
inc
and
adc
mov
shll
or
xchg
pop
ljmp
cmp
lret
jl
mov
or
jmp
push
mov
sbb
ljmp
cmp
mov
pushl
lds
movsl
or
pop
add
cmp
push
mov
jns
out
int
pop
in
daa
cmpsl
das
out
dec
inc
dec
pop
gs
sub
nop
push
mov
addr16
sbb
in
imulb
adc
fmuls
push
lods
dec
jbe
lock
call
iret
pusha
shlb
dec
lcall
fnsave
dec
orb
dec
add
insb
dec
lock
mov
push
mov
mov
jbe
and
js
add
loopne
mov
xchg
add
insl
test
scas
aaa
in
dec
add
mov
jno
pop
popf
add
shrl
leave
repz
cmc
xchg
add
inc
invd
mov
push
les
pushf
jmp
pop
pop
mov
cmp
mov
sbb
les
mov
test
cmp
adc
fistpl
test
push
popa
mov
push
das
add
cmp
lret
mov
call
aam
test
je
pop
js
movsl
xchg
mov
mov
jbe
ficoms
xchg
es
ret
dec
sbb
mul
mov
cmpsl
sar
push
sbb
adc
addr16
out
add
into
cltd
xor
cwtl
andb
mov
dec
aaa
jecxz
fdivl
nop
lahf
movsl
int3
outsl
and
repnz
sub
adcl
mov
mov
add
dec
sbb
cld
cmp
icebp
in
pop
or
push
mov
fcoml
xchg
out
mov
mov
mov
jecxz
lods
lds
add
sahf
mov
int
pop
cwtl
push
inc
dec
cmpsl
popa
mov
cwtl
cmp
mov
or
adc
sahf
mov
xchg
fistps
cmp
insl
cld
add
jp
and
lds
jge
add
mov
jno
les
and
je
outsl
mov
jmp
or
mov
ds
adc
xchg
adc
shll
sub
xor
or
lahf
ret
lds
mov
ds
sbb
lea
and
jno
jl
loop
bound
mov
xor
xchg
jae
fldenv
imul
sub
arpl
jle
mov
jne
cmp
out
into
mov
clc
mov
test
enter
rcrl
mov
push
push
popf
cmp
push
xchg
jae
in
bswap
loope
cmpsb
stos
inc
dec
or
rep
popf
test
adc
stc
xchg
dec
jge
pop
in
fs
add
nop
ss
out
dec
lock
fisubrl
jns
dec
out
scas
pop
jo
sahf
jecxz
mov
repnz
jmp
cmp
push
cs
and
or
xchg
shrl
jge
mov
jmp
outsb
pop
inc
cmp
mov
jbe
or
out
out
pop
jb
popa
out
adc
or
sbb
add
mov
out
pushf
cld
mov
fcomp
xchg
mov
xchg
cmp
push
int3
push
fmull
cmp
inc
cmp
gs
daa
lea
mov
ljmp
ss
in
and
repz
sbb
inc
push
lret
rclb
imul
fwait
loop
fnstcw
dec
xchg
sub
add
pushf
cmp
or
lds
stc
inc
or
mov
xor
call
jge
sub
inc
enter
sbb
int
imul
xor
jae
movb
mov
movsl
out
jge
sub
insl
mov
pop
sti
push
xor
and
fmul
push
je
jbe
pop
test
imulb
push
subl
mov
mov
or
xchg
aad
popf
jg
out
cmpsb
insb
cs
sub
ret
mov
mov
sbb
or
and
int3
ljmp
pop
imul
cmpb
or
mov
sbb
jnp
jmp
pusha
loop
and
addr16
mov
dec
cmp
pop
xchg
ret
xchg
sub
mov
loopne
cmp
mov
stc
scas
loop
xchg
xchg
and
fxch
or
inc
aas
int
adc
dec
or
mov
ja
xor
xor
cld
out
testb
fadd
stc
loope
fwait
aam
cmp
inc
loopne
sub
mov
loope
into
pop
sbb
shll
fdivrs
shll
push
xlat
in
lahf
in
sub
lods
or
test
das
jns
sahf
and
push
out
jbe
bound
jmp
sub
pop
mov
mov
sarb
repz
xchg
push
inc
jbe
stc
std
push
aad
incb
and
nop
dec
mov
gs
push
xchg
dec
sbb
imul
int
jno
xchg
add
mov
dec
out
adc
mov
inc
out
ret
out
and
add
xchg
and
loopne
cmp
dec
xor
sbb
aam
sbb
insb
sub
inc
sbb
in
adc
xchg
push
stos
add
dec
xchg
int
sbbb
xchg
and
out
fisubrs
push
and
jl
cmpsb
iret
mov
rcl
loopne
add
movsl
subl
sbb
inc
jo
testb
dec
scas
jge
shr
mov
arpl
mov
mov
or
or
push
xlat
dec
ss
adc
roll
int
sahf
jmp
ss
ja
ds
orb
jno
aad
and
mov
pop
pop
loope
adc
fwait
hlt
addr16
cmpl
test
outsb
pop
mov
jge
jl
sub
test
push
nop
scas
popf
mov
mov
mov
mov
mov
jp
dec
repnz
dec
jbe
mov
aad
pop
xlat
inc
adc
stos
int3
xchg
jns
jae
inc
out
les
std
fwait
xlat
or
fsubrl
dec
and
dec
mov
ss
comiss
mov
inc
adc
dec
push
popa
jecxz
shlb
adc
and
mov
inc
iret
adcb
inc
mov
xchg
or
scas
mov
jbe
lods
outsb
dec
rorl
fcmove
rcll
inc
out
leave
dec
lds
nop
mov
sarl
cmp
cwtl
xchg
sbb
bound
inc
xchg
jle
stos
cld
loop
or
xchg
add
xor
adc
std
fdivrl
cmpsb
mov
lahf
pop
xchg
test
leave
jge
xor
lret
imul
xlat
adc
xor
ss
fcmovu
pavgw
ficoms
ret
lret
movsl
in
dec
lret
lods
popf
or
jbe
shlb
lcall
mov
nop
sub
leave
mov
or
and
jecxz
ds
pop
xchg
lods
push
rolb
adc
hlt
jne
lcall
fldenv
arpl
xchg
xor
sbb
jne
popa
filds
in
jle
sahf
faddl
insb
idivb
js
add
adc
adc
cwtl
out
adc
cmp
in
mul
stos
or
aad
ret
cmpsb
pushf
jle
mov
mov
jmp
add
push
cs
dec
push
inc
mov
mov
stos
js,pn
jne
divl
pop
fs
xor
popf
int3
cmpsb
mov
and
sub
fimull
mull
lds
ja
push
jecxz
stos
not
add
pop
or
mov
scas
stc
pop
int3
test
in
aam
daa
pop
sysexit
sahf
adc
push
pop
and
push
jno
sahf
clc
sub
add
mov
insb
pop
mov
xchg
popf
mov
das
add
xor
ficompl
jmp
xchg
mov
mov
nop
lock
imul
dec
inc
fidivrl
or
popf
das
mov
int3
mov
mov
pop
faddl
outsl
pop
pop
iret
test
incb
push
jb,pn
mov
scas
dec
adc
mov
out
mov
adc
daa
jge
addr16
jno
or
shl
inc
sarl
stos
jecxz
and
pop
push
cltd
pop
enter
inc
loop
or
xchg
jb
out
outsb
arpl
cmp
outsl
gs
mov
jge
mov
cmpsl
sub
scas
mov
int3
or
push
mov
xor
and
jnp
push
neg
arpl
and
rorl
divb
lcall
cmp
or
ljmp
sbb
or
arpl
outsw
inc
mov
xchg
mov
lahf
std
fisttpll
sarb
sub
push
cmp
jecxz
xchg
and
loop
pop
jb
cmp
ljmp
daa
add
in
jns
push
das
fisttpl
sbb
mov
cmp
cmp
repz
mov
loopne
inc
test
inc
pop
sbb
test
outsl
ds
sub
add
jp
and
push
xor
fcom
mov
hlt
fmul
inc
js,pt
or
outsl
fisubl
fldt
or
mov
add
stos
dec
mov
adc
jecxz
scas
cmp
fmull
push
incb
push
enter
inc
lock
dec
sbbb
xchg
dec
shll
and
std
lahf
shlb
lret
out
and
push
shlb
leave
push
xor
or
lods
adc
and
shlb
inc
and
push
ret
mov
xchg
mov
mov
jbe
jmp
iret
pop
cmp
mov
rorl
cmp
fsts
daa
mov
fdivrl
lahf
pushfw
fisubrl
dec
jmp
xlat
out
push
push
lahf
test
mov
pop
mov
pop
scas
into
dec
pop
in
sbb
fwait
dec
lahf
and
sub
roll
call
xchg
insb
daa
mov
lods
add
mov
sbb
pop
xchg
bound
popa
push
mov
fists
sahf
fidivs
clc
fists
dec
cs
mov
imul
mov
xor
jns
mov
xchg
and
dec
ja
mov
mov
fdivrl
fiadds
push
push
nop
rcll
add
orl
aas
lock
xor
subb
es
push
cltd
call
testb
jbe
inc
cmp
fwait
in
inc
and
movsl
adc
pop
push
pop
sbb
mov
test
inc
xchg
mov
lcall
rcrb
fcmovbe
pop
mov
insl
mov
movsb
sub
jno
xor
rcl
mov
mov
xchg
jp
ret
pop
or
jno
or
lds
call
mov
stc
movsl
adc
out
mov
in
shlb
mov
scas
sbb
aam
lea
testb
push
les
inc
jl
xor
je
cmp
pop
fldl
jno
mov
pop
cmpsl
dec
daa
sbb
sub
cs
sahf
es
jge
xor
data16
xchg
push
push
or
data16
mov
int
cmpb
cmp
mov
xchg
in
test
mov
outsb
test
scas
sbb
xchg
pop
lahf
mull
xor
aas
or
aad
sbb
popf
mov
into
in
shrl
daa
lea
in
jge
filds
jne
and
jl
mov
push
jmp
xlat
sbb
out
add
and
jge
adc
mov
mov
cmpl
call
mov
and
mov
add
push
test
leave
imul
loope
mov
adc
sbb
sbb
loop
mov
inc
cmp
jmp
test
ja
jae
clc
aad
mov
imul
sub
mov
outsb
in
inc
jl
and
test
mov
adc
lret
fdivs
cmp
subl
mov
bound
jg
pop
addr16
push
call
xchg
gs
mov
push
dec
jnp
push
loop
push
lods
pop
in
dec
mov
leave
popf
gs
sbbb
arpl
xchg
hlt
xchg
push
mov
aad
xchg
pop
aas
das
int3
imul
ret
push
cmc
xchg
sub
push
loope
lods
push
loopne
lea
add
inc
pop
and
outsb
inc
xchg
xchg
push
xchg
rcrb
mov
std
sahf
mov
imul
cmp
pop
fmull
or
lods
jecxz
imul
inc
pop
xor
std
dec
ljmp
and
jb
aad
test
and
jp
mov
dec
pop
or
sub
clc
cli
mov
xchg
out
jmp
mov
mov
add
enter
lods
ds
push
icebp
sub
popf
sbb
mov
je
xlat
imul
mov
mov
mov
push
stos
lret
sub
add
xorl
stc
mov
vmulpd
sahf
sbb
mov
loopne
cmp
nop
mov
repnz
mov
mov
stc
sbb
out
dec
je
push
mov
xlat
mov
je
jno
es
ds
popf
shlb
push
sbb
sbb
cmp
cltd
cs
insb
sub
adc
xchg
lods
data16
sub
mov
mov
cmp
roll
fadd
popf
in
popa
ss
mov
and
rcl
xor
sbb
or
test
imull
fisubrs
stc
sub
je
mov
cmp
xchg
pop
jae
and
cld
mulb
mov
xor
lret
frstor
dec
cmp
jb
push
cmpsl
gs
xorl
pop
mov
insl
in
outsb
push
push
into
pop
sbb
xor
sub
push
mov
sub
adc
std
jecxz
dec
and
adc
mov
cli
xchg
xchg
call
ss
leave
xlat
aad
mov
es
lea
push
lret
adc
adc
pop
inc
std
inc
adc
mov
sub
fimull
sbb
rcl
jo
lods
jle
aaa
and
adc
sub
or
cmpb
test
pop
aad
ss
test
xchg
cltd
cmp
mov
outsl
cmp
lods
xor
adc
push
mov
rclb
lods
cmpsl
sub
mov
sub
mov
sub
adc
pop
sbb
rol
andb
shl
jns
test
mov
push
pop
push
push
sti
movsb
inc
add
mov
call
mov
jne
ret
cmp
aaa
jmp
pop
add
nop
add
je
mov
and
mov
or
test
pop
cmp
mov
adc
sbb
xchg
sbb
data16
sub
test
mov
cli
mov
adc
ljmp
and
sub
insl
daa
subb
out
movsl
push
and
ds
add
outsb
std
insb
push
mov
jl
and
in
dec
adc
push
mov
sbb
jecxz
inc
aaa
xor
add
cld
loopne
add
inc
out
loopne
mov
mull
push
cli
arpl
mov
ljmp
inc
sarb
jns
mov
outsl
push
mov
mov
mov
sti
das
or
xor
fsubl
sti
repnz
adc
mov
push
inc
or
jo
mov
jne
hlt
ss
pop
mov
fnstcw
push
mov
in
mov
mov
xlat
push
ret
ficompl
add
or
movsb
iret
mov
mov
mov
pop
sub
xor
mov
in
xor
stc
push
lods
sub
sub
loop
add
push
aaa
sbb
fisubs
sub
lds
push
sub
fwait
xor
scas
je
imul
lds
scas
fadd
and
hlt
dec
mov
and
mov
repz
rcll
mov
push
and
mov
das
push
push
jbe
loopne
out
sub
xlat
icebp
ret
add
daa
and
push
lcall
cmc
add
loope
jne
push
cmc
stos
xchg
jae
mov
push
lcall
mov
sahf
push
mov
adcl
lods
jo
enter
inc
cli
dec
xchg
dec
sub
mov
stos
jmp
sahf
sarb
mov
dec
test
loopne
mov
xor
jnp
push
mov
aaa
or
mov
movsl
leave
cltd
xor
rcrb
sbb
sub
xor
shl
in
repnz
fiaddl
jbe
pop
mov
and
and
push
mov
rorb
xchg
les
flds
lock
mov
or
daa
fdivrs
popa
cmp
lret
clc
mov
sub
jb
loope
sub
sub
pop
jle
pop
imul
push
ficoml
fdivl
cmc
mov
mov
mov
jecxz
or
clc
sbb
pop
and
dec
add
pop
mov
xchg
add
pop
loop
add
in
subb
stc
and
pusha
lods
xor
out
es
adc
sub
pop
mov
fsubs
pop
inc
lret
add
adc
lock
sub
xor
cmp
lcall
inc
out
push
jbe
inc
test
cmpsl
push
icebp
sbb
mov
int3
mov
lahf
pop
stc
movsl
cmp
mov
dec
adc
push
xchg
inc
or
dec
adc
ret
sub
imul
and
pop
das
stos
ds
adcb
cltd
shr
sub
test
in
jbe
sbb
aam
inc
add
xchg
mov
push
sbb
imul
test
jo
mov
loop
subb
fcompl
in
stos
add
mov
ficoml
shlb
sub
lds
or
imul
xor
test
out
outsb
pop
rcrb
clc
mov
int3
mov
sarl
mov
popa
lcall
sub
int
je
shlb
mov
ss
cmpsl
addr16
nop
mov
in
popf
fists
pop
mov
fiaddl
jmp
dec
pushf
or
nop
or
push
js
and
add
stos
mov
mov
xchg
icebp
subl
pushl
add
mov
push
pop
push
cmpsb
gs
cmpsl
leave
outsb
subb
push
shrb
pop
dec
aaa
fcompl
or
adc
popl
push
inc
ja
or
repnz
pop
fdivp
not
mov
dec
outsb
push
xor
outsb
dec
scas
lcall
scas
cmp
jns
ror
bound
mov
imul
loopne
stos
loop
inc
out
movsl
shrb
xchg
mov
in
push
sti
ret
js
mov
addb
daa
or
dec
cmp
ret
out
out
roll
mov
cmpsl
out
adc
dec
repz
mov
sbb
bound
lock
pop
lret
into
in
inc
into
mov
cmpsb
test
pop
into
ret
std
outsb
popf
mov
inc
mov
icebp
in
push
sub
add
or
movsb
stc
ja
les
xor
push
pop
push
test
hlt
cwtl
fld
push
adc
aam
cmpsb
mov
jmp
pop
fdivs
outsl
jg
aad
xor
xor
fisttpl
mov
pop
popf
cmpsl
jb
jbe
jns
pop
xlat
mov
vucomisd
lds
shl
out
js
add
in
orb
arpl
add
ficomps
cmp
sub
sbb
xchg
mov
xchg
in
das
cmpsb
out
mov
test
pop
icebp
inc
les
gs
call
adc
mov
gs
sub
xchg
xor
inc
mov
cmc
les
pop
pop
pop
ja
rol
jno
ss
push
mov
push
cwtl
push
inc
ds
adc
testl
cmc
mov
push
or
aas
xchg
jb
fistpll
inc
fsubrs
xor
mov
cwtl
lcall
and
testl
pop
mov
rorl
loop,pn
push
int3
xlat
lret
sbb
push
outsl
sbb
pusha
cmp
neg
jb
cmc
movsl
sub
shll
call
call
or
and
adc
test
lret
stos
rolb
xchg
mov
stos
mov
mov
add
jmp
ja
push
imul
fidivl
popa
pop
inc
xor
test
or
loope
cmpl
mov
adc
or
clc
push
mov
mov
jle
cmp
add
out
shlb
out
sub
clc
insb
dec
js
mov
adc
repz
cmp
sub
pop
in
je
and
mov
sbb
movsb
test
pushf
jae
enter
int
inc
in
push
pop
add
jl
int
adc
fcomi
push
sbb
daa
sbb
int
shlb
jge
inc
jmp
and
push
push
xor
and
scas
cli
out
divl
mov
pop
pop
pushf
inc
mov
push
jb
imul
xor
bound
dec
jge
pushf
sahf
sub
outsl
or
cmpsb
pop
fucom
xor
rorl
push
in
and
fstpl
aad
dec
ficompl
sbb
sub
clc
insb
inc
pop
mov
addr16
repz
xchg
out
negb
loop
addb
insl
insb
iret
cmp
outsl
xchg
cmp
push
test
mov
jle
cmpsl
inc
shrl
std
jmp
out
clc
in
jecxz
xchg
sub
adc
je
mov
hlt
push
outsl
out
mov
xor
pop
vaddsubpd
lock
mov
adc
out
push
aam
imul
push
cmp
ret
jno
push
incb
mov
into
push
or
std
sahf
sub
push
jge
icebp
fwait
stc
arpl
mov
pushf
imul
test
jl
dec
mov
and
lret
ds
xlat
push
test
pushf
mov
dec
adc
jg
int
sarl
cmp
push
or
push
negl
inc
in
lods
ljmp
imul
test
int
mov
fwait
mov
test
lahf
or
lods
addr16
fildl
push
ja
push
nop
clc
push
scas
or
xlat
or
inc
in
scas
fdivp
incl
les
adcl
xchg
ret
fdivrl
ljmp
lock
fstpl
add
mov
movd
bound
in
xchg
xchg
subb
push
insb
or
jo
roll
mov
jl
dec
jp
dec
clc
jle
push
push
rcrb
pop
fdiv
push
test
cmc
stos
stc
ljmp
xchg
xchg
stos
inc
out
es
lcall
mov
inc
mov
inc
mov
pop
push
mov
mov
sub
and
lock
ljmp
lahf
push
cmp
and
mov
inc
or
mov
outsb
xchg
mov
lret
add
mov
add
xchg
dec
or
int3
idivb
jbe
imul
push
and
popf
lret
out
xchg
jns
sarb
stos
call
mov
addr16
je
mov
ja
jg
sbb
call
jmp
out
inc
dec
xor
loope
test
das
push
loope
repnz
aad
xor
cmpb
inc
fidivrs
and
jg
cltd
mov
sbb
pushw
xor
fistl
movsb
pop
pop
out
pop
out
mov
test
inc
or
pop
mov
pop
stc
jo,pt
add
mov
push
and
and
push
frstor
xchg
push
mov
xor
nop
test
inc
or
add
outsl
pop
jne
subb
add
ffreep
adc
jnp
mov
leave
cmpb
stos
push
repnz
sbb
std
mov
repz
mov
arpl
lds
add
adc
sbb
in
gs
jmp
ljmp
pop
xchg
aaa
imull
sbb
push
out
in
test
sub
sub
stc
pop
dec
fucomp
jo
test
mov
adc
aad
lods
lea
movl
sbb
push
xor
lret
mov
popf
sub
inc
imul
icebp
lcall
stos
sub
inc
fmull
pop
mov
dec
dec
icebp
sub
addr16
cltd
cmovg
sbb
adc
mov
pop
aaa
cmp
int
out
aas
xchg
lods
outsb
add
inc
add
addr16
pusha
cmp
imul
push
dec
pop
out
xchg
mov
push
mov
inc
setns
xor
mov
inc
xchg
mov
mov
gs
fstl
shrb
jno
scas
sub
cmp
in
and
or
aaa
jge
into
rorl
cli
ljmp
testb
popf
icebp
leave
mov
pop
push
sbb
popf
pop
sub
sub
lock
sbb
mov
xor
and
scas
sarl
bound
add
fisubrs
outsl
movsl
mov
leave
in
mov
fst
loopne
jge
or
mov
xchg
jb
cmpsb
imul
jb
cli
cmp
pop
stc
clc
ficompl
arpl
sahf
jae
jmp
iret
inc
xchg
jno
pop
mov
inc
and
dec
lahf
adc
and
add
arpl
shl
loopne
clc
stc
aaa
sbb
lret
add
sub
mov
subb
sbb
xchg
add
jmp
rcrb
push
sub
and
or
pusha
daa
jmp
xchg
arpl
mov
push
sub
add
int
dec
sbb
adc
add
xor
es
inc
cmp
test
ficoms
dec
lods
das
and
jb
arpl
call
lcall
mov
in
xchg
ficompl
jmp
les
inc
add
and
rorl
jne
sti
adc
jecxz
xchg
xchg
sbb
sub
addl
cmc
and
call
sub
push
std
cltd
xor
jmp
fisubs
dec
call
es
fwait
lods
add
cs
lock
in
fsubs
jns
out
jp
repnz
iret
pop
mov
dec
jge
movsb
and
and
jmp
or
or
or
std
lret
mov
cmp
mov
ret
mov
push
popf
mov
jecxz
popf
and
jp
pop
popa
int
push
jecxz
jecxz
dec
sub
dec
cwtl
mov
and
or
clc
out
push
jnp
cmp
or
sub
cmp
mov
incl
inc
mov
sahf
push
bound
scas
cmpsb
lret
jns
dec
sbb
das
pusha
jecxz
xchg
xor
leave
test
pop
pop
mov
popa
adc
paddsw
jnp
aad
loope
inc
mov
lcall
lahf
inc
jbe
jne
fwait
out
sbb
pushf
xor
and
ja
adc
shr
stos
pushl
inc
lock
push
jmp
add
jno
test
sarb
sbb
lahf
unpckhps
add
adc
insl
in
xor
insl
dec
xchg
xchg
push
push
adc
jnp
sbb
cltd
cmp
xchg
xchg
scas
cwtl
pop
adc
inc
andb
imul
xchg
fdivr
jmp
jmp
jge
mov
inc
jl
rcll
inc
add
add
int3
jnp
fisubl
jb
loopne
sbb
xchg
lea
je
into
or
out
and
js
lcall
cmp
sbb
pop
and
mull
sti
jnp
addb
mov
movsb
je
cmp
xchg
movsb
clc
fs
sub
andb
cmp
lds
insb
imul
in
sub
out
dec
fstpt
mov
mov
add
mov
sub
scas
push
push
sub
lods
or
in
push
test
pop
jp
inc
pusha
popa
test
ret
and
or
add
int
cmp
adc
repnz
xlat
xor
adc
push
cmpsb
std
jns
daa
mov
into
mov
shl
pop
es
nop
sahf
push
out
lret
std
xchg
mov
sub
les
pop
repz
shll
fcomp
mov
add
xchg
sbb
ja
mov
mov
sarl
popf
cwtl
sub
dec
pop
jp
push
out
inc
adc
fisttpll
push
pop
xor
ffreep
arpl
notl
pusha
subb
sub
lret
out
mov
fidivs
ficompl
movsb
movsb
pushf
mov
jmp
xchg
mov
xchg
loopne
mov
stc
mov
out
out
loopne
pushf
fcompl
aad
pop
jge
xchg
mov
lods
imul
sub
outsl
push
cli
mov
iret
imul
in
lahf
inc
cli
cmpsl
mov
xor
jle
push
and
icebp
push
lcall
adc
dec
insb
pop
xchg
jmp
loop
add
lock
inc
pop
inc
add
adcl
sub
cmp
call
in
rcl
jnp
pusha
jge
rolb
fildl
popa
mov
mov
sbb
inc
lods
stos
loop
popa
xor
roll
lahf
insb
push
mov
mov
stos
xchg
hlt
add
enter
dec
movsb
sahf
dec
pop
fcompl
dec
fisubrs
hlt
sbb
pop
push
daa
call
push
repz
xchg
daa
or
mov
fdivrs
mov
cmc
and
out
mov
cmc
cmpsl
cmpsl
mov
xchg
jmp
mov
and
scas
subb
pop
cli
pop
jge
dec
jb
pop
data16
add
cmp
or
test
sbb
cmp
test
jns
pop
and
jns
jle
imulb
les
clc
mov
jbe
in
pop
adc
pop
pop
xor
pop
icebp
daa
enter
shll
imul
rorl
adc
jbe
mov
sbb
fwait
sub
sub
cmc
inc
add
in
xchg
push
add
movb
insl
into
pop
aam
lock
dec
push
xor
mov
es
icebp
xor
and
inc
outsl
mov
stos
mov
adcb
xchg
iret
push
pop
jge
mov
mov
inc
mov
ss
test
xchg
push
fisttps
or
cmp
adc
test
data16
inc
sbb
push
in
cmpsb
add
push
sub
testl
rorb
pop
hlt
les
shlb
or
adc
subl
inc
js
or
ds
loopne
pop
or
popa
in
in
dec
test
cmpsb
push
push
dec
push
lock
cmpsb
test
cltd
pop
std
sahf
inc
test
mov
rcll
cmpsl
inc
pop
faddp
mov
js
repz
jo
inc
pop
xchg
das
mov
out
daa
jge
jnp
pushf
inc
int
int
cmpsl
cmp
cwtl
ficoms
push
insb
sbb
shl
insb
mov
xor
lahf
inc
cmp
aas
pop
push
lock
jne
sub
mov
lock
mov
mov
lret
sub
or
xor
es
xlat
dec
pushf
lret
mov
popf
push
sub
sbb
call
movsl
ja
pop
add
ja
ud2
sub
outsl
mov
gs
mov
cld
sti
and
lods
add
aam
mov
fwait
jb
sub
testl
addr16
xor
pop
imul
dec
testl
push
ljmp
xchg
mov
cltd
pushf
xor
aam
and
pushf
jl
dec
pop
add
inc
adc
cmpsl
add
aad
xchg
in
and
es
xlat
es
call
loop
adc
mov
ds
and
mov
xor
cmpb
mov
dec
clc
aad
js
and
pop
and
ljmp
fwait
mov
mov
icebp
xchg
or
sub
scas
cld
addl
fisubrl
cmp
push
mov
lds
inc
xchg
out
xchg
sbb
movsl
loope
repnz
and
out
mov
lret
inc
idivb
out
ret
pusha
mov
scas
popa
jnp
loopne
add
lds
dec
pop
lahf
imul
xor
pop
mov
push
stos
lea
imul
bound
cmc
shlb
out
cmp
out
js
enter
inc
mov
adc
inc
push
dec
xchg
flds
sbb
stos
mov
repz
adc
sub
aaa
int3
aaa
or
and
inc
fidivrs
stos
mov
shrl
mov
call
repnz
mov
jle
popf
clts
mov
or
or
xchg
mov
xchg
jno
ficoml
scas
stos
lods
in
mov
mov
test
mov
icebp
xorl
mov
fnstsw
jp
pop
stos
into
xor
outsl
add
and
fisttpll
lock
nop
push
insb
gs
mov
and
lret
sbb
sahf
inc
sbb
out
push
scas
push
add
addr16
in
mov
roll
mov
mov
insb
and
sub
bound
jle
ds
jmp
pop
inc
test
push
std
addr16
inc
jbe
test
mov
popa
sbb
gs
lcall
outsl
adc
push
in
clc
and
dec
scas
or
stc
xchg
and
dec
repnz
jmp
push
push
arpl
jo
mov
xchg
enter
mov
lods
add
cmp
adc
loope
cmpsb
lret
push
or
push
and
mov
test
stos
mov
jge
cmp
sub
mov
pop
out
clc
repnz
push
pusha
and
sub
js
out
xor
cs
dec
hlt
inc
aaa
push
xorl
stos
add
call
and
shll
add
lahf
xlat
cli
sub
mov
push
push
mov
cmp
push
hlt
movsb
fmuls
fxch
and
pop
fisubs
and
mov
pushw
loope
push
daa
bound
xor
adc
sbb
shrb
int
mov
dec
cmp
dec
xchg
ja
into
xor
int
js
dec
repz
jecxz
cmp
sub
cmpsl
dec
dec
inc
pop
loop
mov
mov
mov
sar
sbb
daa
sbb
nop
lret
adc
mov
mov
pusha
std
outsl
inc
inc
push
pop
jmp
pop
adc
mov
scas
leave
add
lret
data16
lcall
ja
adc
rcrb
cmpsb
lcall
xchg
adc
fiadds
out
hlt
lock
in
jne
leave
lds
jmp
add
mov
dec
push
inc
sbb
dec
loope
out
insb
test
lea
jnp
test
jmp
inc
ret
in
mov
loopne
xor
rcrb
cs
jge
fdivrp
aam
jae
outsb
xor
outsb
xor
cmp
bound
lds
in
nop
aam
push
popa
jnp
inc
loope
repnz
xchg
lods
fcoms
adc
or
mov
lock
mov
daa
mov
dec
ljmp
mov
add
xchg
mov
mov
in
xor
fcoms
push
cwtl
in
cli
shll
sub
mov
mov
push
js
or
call
sub
cli
xchg
rcll
pop
jle
sahf
add
jp
stos
pop
dec
dec
push
xchg
fs
daa
and
dec
repz
pop
add
sub
orl
pop
sarl
in
pop
or
pusha
mov
ret
inc
mov
std
jbe
xchg
out
xor
cmp
pop
roll
loope
fstps
sub
sbbb
add
jne
pop
jl
sub
adc
rclb
push
adc
sbb
xor
push
sub
out
push
push
lds
xchg
stos
fmuls
cli
fildl
out
push
and
pop
shll
sbb
sub
out
cmp
rolb
or
add
rcl
xchg
lcall
imul
push
sub
fcmovne
mov
lahf
in
inc
and
and
inc
shll
sarb
inc
sahf
outsl
out
and
inc
dec
cmp
mov
hlt
xchg
gs
pop
aas
fsts
ss
into
mov
imul
add
jne
das
pop
stos
outsl
outsl
fildl
inc
cltd
daa
jl
sbbb
dec
push
mov
cmp
aaa
ja
syscall
push
out
mov
hlt
jmp
dec
push
adc
add
iret
cld
sbbl
xor
sbb
clc
mov
in
fscale
adc
cmp
rsm
cmp
mov
push
in
cltd
insb
pop
std
lea
xchg
push
aas
lahf
cwtl
cmp
adc
leave
std
cltd
xchg
and
jl
dec
icebp
jns
xor
mov
jne
shl
lock
test
sbb
xchg
sti
fcomps
cmp
pop
push
roll
inc
mulb
dec
push
push
imul
add
mov
outsl
clc
adc
in
sahf
pop
call
sbb
test
dec
outsl
sbb
mov
sub
xor
repnz
lret
lock
aad
mov
repnz
fwait
cs
xchg
int
imul
loope
xor
pop
xor
mov
sbb
divb
xchg
and
xchg
adc
adc
or
call
jb
add
cld
mov
dec
inc
cwtl
sub
mov
scas
cwtl
dec
subb
pop
bswap
mov
jne
dec
adcl
fdivr
stos
aad
lds
dec
xor
cwtl
pop
sub
jbe
lahf
ficoms
or
mov
not
adcl
mov
mov
mov
jne
in
cld
pusha
and
inc
scas
pop
push
loop
or
jb
dec
sbb
ljmp
int3
je
mov
or
ds
dec
push
mov
xor
je
jns
pop
mov
mov
fnsave
fiadds
xor
fimull
xor
mov
jns
dec
sub
scas
cmp
dec
in
pushf
outsl
cmpsl
fwait
xor
sti
lahf
movsb
dec
ret
adc
ret
jp
fstpl
insl
jg
sub
sub
fwait
mov
inc
outsl
jae
loop
adc
cmp
mov
cli
inc
fdivrl
push
out
jo
imul
aad
rorl
inc
rcl
push
aas
pushf
ret
mov
scas
shll
adc
les
fsubl
mov
stos
dec
adc
fucom
cmp
pop
jo
or
jmp
into
addr16
sbb
push
out
jns
jnp
negb
aam
or
inc
lods
jne
sbb
adc
xchg
sub
jb
push
cmp
popl
inc
test
outsb
mov
xchg
xor
mov
xchg
add
pushf
pushf
mov
and
cmp
dec
lods
lock
xorl
add
das
mov
push
adc
pop
adc
adc
xor
adc
xchg
fistpll
arpl
jae
inc
jmp
in
stos
sub
movsl
cld
les
test
lahf
jle
mov
inc
insl
dec
and
arpl
push
pop
pop
hlt
mov
popf
push
test
outsb
xor
es
mov
dec
repnz
lods
outsl
cmp
jmp
fwait
lods
lret
in
sbb
fldpi
dec
xor
mov
xor
in
sbb
fadd
sbb
or
es
popa
jno
lahf
mov
in
mov
ds
cmp
mov
inc
sub
mov
and
pop
mov
push
jle
mov
out
decl
testl
rcrl
pop
out
lock
or
mov
icebp
fdivl
xlat
and
adc
jne
call
inc
dec
in
xlat
jbe
ja
movsb
push
aam
out
jp
andl
mov
dec
xchg
mov
mov
xor
cmpsb
loope
mov
jle
pop
xor
jae
cmc
lret
loopne
cmpsl
xchg
movsl
in
inc
pop
mov
push
inc
pop
push
cmp
clc
dec
hlt
sbbl
mov
popf
mov
xor
cld
push
pushf
cmp
adc
push
mov
or
pop
jno
push
loope
fisubrl
aaa
pop
int
xchg
mov
movsb
mov
cli
enter
inc
aad
in
dec
pop
and
jmp
jmp
aam
mov
add
idiv
and
pop
pop
sti
imul
dec
mov
rcrl
imul
push
xor
call
popf
mov
in
fldt
nop
xchg
int3
lea
into
outsl
push
inc
and
mul
out
mov
arpl
jb
mov
dec
ret
lock
xchg
sub
call
dec
dec
rolb
in
popf
je
mov
jnp
pop
popa
dec
jmp
or
or
add
movsl
dec
test
mov
addr16
sbb
in
dec
decl
jle
jmp
sbb
out
gs
mov
leave
dec
pop
dec
sub
shll
icebp
sbb
push
scas
mov
cmc
mov
cld
popa
xor
mov
aad
jg
lds
sub
pop
mov
xchg
dec
leave
and
mov
jmp
jl
sahf
lret
jns
loopne
rcrb
sub
pop
in
and
xor
push
cmpsl
clc
ret
mov
add
prefetch
or
sub
aam
or
mov
ss
xchg
adc
ss
aas
mov
dec
loope
sub
xchg
pop
shr
mov
push
in
int3
into
mov
jnp
mov
jle
in
cmpsb
inc
iret
and
mov
mov
cmc
pop
movsb
std
mov
xchg
insb
lods
cmpsl
mov
adc
fsubrl
mov
jl
jp
and
std
xchg
pop
pop
cs
or
xchg
scas
pop
mov
pop
mov
inc
pop
lods
xchg
xor
push
push
push
sub
pop
iret
xor
fisttpl
or
cmc
aaa
mov
sti
ja
sub
sbb
add
inc
sub
scas
lcall
into
mov
jmp
mov
popf
or
fcoml
iret
pop
or
and
xlat
outsl
idivl
ja
push
addb
das
xor
or
push
inc
cmp
and
jae
xchg
stos
int
adc
imul
movsb
roll
rolb
in
test
nop
sub
addr16
or
xor
add
clc
pop
or
mov
adc
inc
out
mov
push
outsl
adc
das
adc
dec
lea
fsub
enter
cmp
inc
outsb
add
lahf
iret
cmpsl
mov
std
lods
and
fbstp
ja
dec
mov
hlt
fcoms
pushf
gs
xchg
mov
add
pop
or
xchg
rcll
pop
cmp
repnz
push
sbb
movsl
add
xor
xor
cmpsb
test
mov
mov
jbe
and
sub
jg
aaa
lret
jge
or
out
adc
aam
rorl
inc
cmp
xor
pushf
push
popf
sub
mov
iret
xchg
loopne
dec
jmp
xchg
stc
push
dec
sub
pop
sti
scas
cmc
xchg
sbb
arpl
aas
dec
dec
shll
iret
cmp
fnstcw
addr16
dec
loope
inc
pop
arpl
lods
mov
scas
mov
pusha
push
fnsave
jbe
fmuls
outsb
mov
inc
mov
and
mov
xchg
aas
and
xchg
addr16
ret
and
insb
adc
or
arpl
lods
pop
sbb
ds
movsl
and
out
dec
pop
mov
pop
inc
vorps
into
imul
aaa
push
xchg
mov
lock
push
je
sahf
or
je
scas
pop
ljmp
fbld
mov
mov
dec
mov
cmp
xchg
sbb
add
push
lret
xchg
jnp
sbb
mov
and
sbb
rcrb
addb
js
aad
aad
xlat
jge
push
inc
xorb
decb
mov
pushf
adcb
nop
rcrb
aaa
cmp
push
faddp
pushf
inc
dec
push
jo
and
into
fnstsw
into
or
and
in
mov
dec
imul
insl
rcll
push
jge
scas
pop
push
fisttpll
dec
cmpsb
dec
push
in
repz
mov
push
imul
lea
jne
rorb
add
inc
rorl
aaa
mov
cmp
dec
adc
mov
pop
sub
not
std
jo
in
pop
dec
aas
pop
mov
stos
dec
or
ret
mov
fs
pop
pusha
pop
push
in
pop
xchg
arpl
into
sub
prefetch
push
imul
inc
cmp
or
mov
into
pusha
mov
sbb
xchg
jge
pushf
out
and
add
mov
pop
lods
call
adc
add
cwtl
ljmp
shlb
mov
loop
jns
add
adc
dec
xchg
lods
dec
enter
inc
sbb
jb
insl
mov
adc
data16
and
push
and
aam
ja
mov
in
cmp
push
xor
jg
jg
insl
imul
bound
jge
add
inc
sarl
addl
stos
or
imul
in
repnz
loop
sbb
jne
jb
jae
xchg
cmp
stos
adc
jb
pop
lock
fsts
fldt
mov
call
add
sub
jno
out
pop
lea
mov
in
mov
stc
pop
sub
subb
in
imul
int3
push
xchg
sbb
out
xor
add
dec
cmp
nop
sub
ret
jecxz
or
or
mov
or
adc
mov
inc
pushf
in
movsl
fs
into
or
hlt
test
out
addr16
aaa
dec
sub
inc
adc
insb
in
lahf
xchg
xchg
loop
insl
push
sub
clc
mov
ffree
jecxz
in
popa
roll
ja
into
sbb
mov
lea
test
mov
xor
cmpsl
or
addr16
subps
aam
pop
cmp
mov
cli
icebp
arpl
fadds
in
mov
and
adc
xchg
dec
jmp
stc
sbb
sbb
mov
inc
rol
cli
in
mov
out
cmp
mov
aad
push
jne
inc
in
mov
pop
mov
aam
sub
dec
ds
xlat
and
mov
movsl
jae
mov
fildl
sbb
xor
ret
in
ret
sbb
pop
xor
ret
pop
ficomps
dec
or
dec
aaa
cld
cmp
cmp
sbb
in
xor
out
outsl
jnp
sti
inc
rclb
rolb
pushf
push
bound
xchg
lods
sub
ds
stos
dec
adc
pop
outsb
out
inc
lcall
dec
cmp
fs
aaa
aas
icebp
jnp
jns
jns
notl
sti
sbb
test
ljmp
call
nop
push
lret
rolb
cmp
jns
fsubs
jp
sub
popa
ret
pop
fistpl
cmp
inc
add
or
lods
cmp
rcrl
mov
mov
insl
stos
push
inc
jge
outsl
jmp
jecxz
into
mov
je
jp
movsb
jp
or
sar
stc
cmp
mov
loope
ss
push
add
xchg
fidivs
lock
xor
jo
cmp
pop
add
push
ss
sti
sub
sahf
and
fistpl
repnz
jmp
mov
leave
pop
cld
dec
cmp
mov
int3
cmp
adc
jno
int3
mov
pop
shll
xchg
cltd
xchg
and
repnz
or
sub
arpl
xchg
push
mov
int3
shll
pusha
adcl
jle
into
das
ret
pop
ljmp
jmp
sbb
in
jle
rorb
popf
mov
scas
sbb
ja
in
das
stos
adc
mov
sub
pop
jo
cmpsl
cmp
or
adc
push
lahf
push
sbb
xor
out
push
cs
xor
push
sbb
pop
cmp
andl
xchg
cmp
enter
icebp
aam
and
shlb
enter
ds
lahf
nop
and
mov
sub
sbb
fcmovne
scas
cmp
or
dec
inc
jp
ret
push
jne
jge
xchg
js
loop
es
cld
fsubrs
jmp
mov
icebp
lods
movsl
fs
dec
les
aaa
in
inc
insl
lahf
pop
inc
mov
push
popa
out
cld
adc
adc
xchg
jns
xchg
push
dec
movsl
shlb
hlt
inc
das
and
lret
jb
shll
out
enter
add
push
xlat
je
jnp
movsl
xor
add
cwtl
insl
pusha
ds
cmp
sbb
imul
stos
jae
popa
mov
fldl
cli
sub
mov
imul
cmp
xchg
test
jns
xchg
xor
out
xchg
mov
ds
cwtl
lret
mov
ds
xor
dec
dec
adc
sbb
insl
jl
fsincos
pop
stos
lds
orb
inc
out
adc
leave
mov
inc
pop
sub
or
sti
jns,pt
xor
cmc
clc
das
sbb
ret
xchg
imul
mov
jnp
push
mov
sbb
and
and
stos
pop
adc
aas
dec
into
adcb
add
gs
nop
xor
add
dec
inc
mov
fst
lcall
pusha
lea
hlt
aad
stos
mov
or
inc
inc
xor
fwait
xor
push
outsb
ja
sub
xor
inc
test
cs
adc
pop
mov
repz
pop
sahf
jbe
inc
in
das
in
inc
push
imul
mov
mov
fidivrs
dec
and
shll
cmovo
lret
mov
pop
das
and
ret
push
loopne
xor
test
sbb
and
xchg
and
push
push
out
inc
pop
mov
and
std
xor
test
arpl
jne
mov
inc
mov
cmp
jecxz
or
push
nop
dec
ss
xlat
stos
jg
test
lahf
insl
sub
sub
popf
sbbl
add
mov
bound
repz
jno
cmpsb
xchg
and
jge
adc
int3
and
jb
pop
scas
sahf
andb
xor
lods
push
sub
stos
xchg
jae
int3
test
sub
jmp
les
sahf
je
les
push
dec
aaa
jbe
xchg
push
icebp
dec
mov
mov
pop
and
add
pop
stos
push
pop
ja
js
jmp
jb
jnp
or
xchg
inc
call
adc
fnstcw
mov
jmp
mov
inc
lret
jl
add
es
mov
stc
cmp
jp
xchg
or
mov
pop
movsb
cmp
fnop
mov
aas
or
jne
pop
mov
leave
cmp
loope
jg
xor
popa
incb
fnstenv
xor
stos
mov
xor
jl
cwtl
pop
inc
pop
ss
inc
cmpsl
aad
cld
lahf
aaa
repnz
cmc
int3
inc
repnz
rolb
iret
adc
test
xor
xchg
in
dec
sbb
add
inc
mov
test
cmp
leave
xor
add
jecxz
movsb
bound
cltd
xor
xchg
out
dec
int3
and
inc
adc
xor
lret
stos
push
jmp
out
pop
les
pop
fs
cmp
mov
ds
notl
xor
movsb
jno
pop
xor
mov
dec
pushf
adc
cmp
daa
add
xor
jge
sarl
rcll
cmp
ljmp
std
xor
ficoml
dec
test
ret
mov
insb
lea
or
or
inc
daa
jp
fxch
cld
mov
fwait
scas
pop
je
pop
and
repz
xchg
addr16
stos
or
jle
test
xor
or
pop
dec
pop
add
test
outsl
fwait
or
popf
shlb
adc
test
popf
add
andb
and
xchg
mov
lahf
cwtl
pminub
bound
lret
popa
lock
jnp
test
add
sbb
in
in
adc
filds
jb
cmp
ret
sbb
mov
std
or
mull
repnz
dec
jno
stos
mov
les
fs
push
idivb
mov
call
stc
lods
fstp
inc
out
sti
out
cmp
sub
bound
add
ds
das
loop
clc
mov
loopne
movsb
in
adc
mov
fildll
lods
or
sbb
hlt
loop
fcompl
add
dec
adc
pop
adc
repz
add
pop
push
iret
push
adcb
dec
jmp
in
pop
lds
outsl
adc
jmp
mov
popf
notb
iret
cltd
pop
icebp
insl
push
movaps
outsl
lret
inc
inc
in
xor
psubq
fcompl
loope
sub
es
jno
mov
pop
ud2
push
xor
ret
mov
push
and
push
aas
push
cmp
dec
sbb
data16
int
xchg
xlat
in
xchg
jb
rolb
int
pop
test
push
movsb
jbe
sbb
push
xor
je
insl
cmpsb
outsb
add
sub
scas
lret
pushf
push
pop
out
rorl
shll
imul
pop
xchg
pusha
addr16
arpl
insl
and
inc
xchg
mov
popf
sub
pusha
xchg
pusha
add
cwtl
or
push
jmp
testb
mov
scas
sbb
scas
mov
sbb
jb
pusha
xchg
icebp
insb
in
and
ret
jbe
mov
push
popf
outsl
aad
mov
mov
insl
call
push
fildl
jne
or
cmp
jg
xor
bound
inc
fdivp
addr16
mov
fsubrl
aad
iret
dec
push
push
mov
push
inc
and
lods
add
inc
es
xor
call
or
jnp
pushf
fdivrp
adc
xor
add
ret
mov
mov
shll
inc
loop
mov
data16
sub
jl
jb
loop
icebp
fwait
rol
or
mov
and
test
mov
add
mov
fsubrs
jbe
inc
sub
aam
xchg
adc
lods
or
sub
jg
pop
jle
stos
jle
les
pop
cmpsb
and
cmp
les
push
ljmp
lock
adc
cmpsb
xchg
mov
mov
fsubrs
cmp
push
idivl
jge
sbb
cld
mov
insl
faddp
add
sub
es
popa
test
xchg
ds
and
repnz
fisubs
xchg
stos
das
shll
pop
cli
hlt
lea
inc
in
adc
pop
filds
mov
add
imul
jnp
sarb
push
or
xchg
jp
call
inc
mov
cmp
int
jb
sahf
pop
gs
cmc
scas
jecxz
mov
outsl
sbb
mov
js
int
enter
nop
arpl
mov
push
mov
jno
xchg
pop
xor
scas
sub
or
sti
xchg
leave
mov
mov
and
scas
shll
pop
pushf
adc
lods
movsb
cmp
loopne
orb
test
rcll
loopne
jle
dec
js
sbb
and
lods
or
ds
or
pop
jp
xchg
dec
stos
inc
ret
cmpsl
and
aad
shl
xchg
xor
negb
imull
adc
rcrb
mov
cmp
cmc
clc
in
aam
shlb
and
xchg
data16
or
mov
aad
cmp
jns
push
mov
fisttpl
xchg
loopne
add
lret
sub
pop
inc
cmp
mov
mov
xchg
sub
mov
mov
pop
jno
jnp
adc
lods
movsl
inc
cmp
std
push
gs
fldt
fldenv
ret
lods
mov
fs
xchg
add
lods
mov
mov
xor
mov
les
movsb
or
popf
mov
push
in
push
lods
fisubl
loopne
sti
pop
iret
popa
mov
iret
dec
rol
xchg
vcvttpd2dqx
lret
mov
mov
xor
lds
xor
inc
sbb
pop
push
xor
outsb
sahf
push
and
mov
mov
pop
mov
ljmp
fildll
lods
jb
xor
add
test
rcrb
xchg
pop
cs
leave
jb
fimuls
cwtl
fisubl
cmp
lahf
jo
scas
popa
xchg
fld
repnz
xor
adc
sahf
xor
dec
jge
mov
std
jbe
int3
inc
int3
mov
xor
loopne
sub
aad
jno
fstps
inc
es
sbb
xchg
outsl
mov
jge
fbstp
add
imul
icebp
mov
cmpsl
or
mov
jle
fdivl
pushf
xchg
in
pop
xchg
int3
cmp
es
std
stc
jp
mov
lahf
jns
mov
sub
pop
sub
lea
sub
pop
mov
add
fnstcw
clc
ja
shlb
subl
pop
adc
mov
and
mov
pop
ds
mov
add
cmpl
inc
cmpsl
scas
lods
cltd
cmp
fistpll
ftst
ret
dec
adc
xor
test
sahf
xchg
mov
sbbl
mov
mov
daa
iret
in
mov
fisubs
addr16
jb
or
test
mov
jb
inc
insb
stos
mov
loop
test
jl
mov
jp
imul
stos
outsl
xor
in
movsl
add
adc
add
mov
mov
sub
in
fcompl
mov
lock
lahf
insb
jb
add
jecxz
repz
ror
mov
int
xor
jo
into
add
aam
push
mov
scas
in
push
xchg
sbb
mov
or
xor
or
pop
in
inc
loope
adc
push
dec
insb
mov
repz
loop
mov
xchg
jbe
sbb
mov
mov
cmp
pop
mov
xor
nop
jp
fdivl
loopne
inc
test
mov
clc
incl
cmc
in
popf
mov
imul
mov
or
call
add
out
push
cmp
stos
arpl
inc
adc
mov
rcrl
sub
popf
push
enter
enter
fsubrl
in
test
cltd
mov
add
aad
add
cs
sbb
mull
xor
mov
push
jae
jns
test
sbb
push
idivb
lock
pusha
out
mov
mov
das
mov
xchg
mul
mov
inc
loop
or
inc
adc
push
popf
in
inc
mov
ret
and
and
lret
pop
sub
mov
sbb
inc
mov
clc
cld
dec
cmp
call
mov
outsb
push
push
jecxz
lcall
sub
es
rcll
pop
pop
dec
mov
insb
sahf
mov
xchg
stc
js
pop
adc
stos
add
jne
jmp
pop
fisttpll
lahf
jp
pushl
add
fisubrs
mov
xchg
push
inc
or
and
hlt
jp
add
sub
adc
mov
or
leave
jle
iret
rcr
jl
out
jnp
pop
bound
cmpsl
rcr
mov
mov
roll
cmp
sbb
mov
cmpsb
adc
xchg
sub
insb
data16
stc
pop
pop
push
pop
notb
pmaxub
or
aad
push
add
popf
mov
and
jmp
xchg
push
cmovnp
lea
jne
sub
test
cmp
sarb
dec
mov
sub
fcoms
dec
shlb
sbb
push
and
rcr
dec
mov
into
movsb
in
jae
xor
push
arpl
pop
arpl
xor
pop
stc
sub
pop
dec
and
jecxz
push
jns
add
jnp
inc
cmpsb
xchg
dec
sti
inc
ss
xchg
aad
loop
push
push
mov
nop
scas
push
dec
cmp
aad
shlb
enter
xor
imul
js
jnp
pushw
mov
bswap
jo
push
das
and
cmp
aam
add
mov
mov
push
scas
mov
push
xchg
movsl
ss
inc
pop
sbb
jge
sub
mov
pop
sbb
std
xchg
lds
add
nop
cmp
mov
push
push
pop
leave
add
push
ret
inc
or
outsb
cli
pop
cli
push
sub
fisubrs
clc
cltd
and
and
lods
add
fiadds
xchg
int
inc
ret
push
adcl
sub
repz
cmp
and
xchg
push
mov
lods
pop
jno
xchg
jo
fwait
adc
inc
adc
xchg
test
mov
je
stos
or
fstps
adc
cmp
fsubrp
lcall
xor
sahf
movsb
adc
inc
cmp
out
dec
jno
sahf
mov
iret
dec
push
inc
stos
inc
cmc
pop
mov
inc
insb
mov
flds
aas
test
push
add
int
mul
je
loop
dec
and
mov
movsl
and
aas
outsb
fdivl
scas
notl
fdiv
jp
add
mov
scas
jb
jbe
rclb
aam
mov
jg
cmp
lea
mov
dec
das
or
out
mov
loope
testl
xorb
fmul
aaa
xchg
mov
into
cmpsb
je
pop
test
je
sbb
shrb
movsl
pop
xchg
cmp
gs
sub
movsl
insb
outsb
push
outsb
and
aas
push
cmp
mov
rcrl
insl
js
aaa
xor
sbb
mov
es
pop
stc
xor
mov
sbb
insb
lret
repz
jecxz
popf
xchg
icebp
push
fiaddl
mov
pop
sub
mov
and
out
hlt
lahf
cmp
or
std
cli
mov
or
adc
mov
inc
xlat
ficomps
or
outsb
jmp
gs
xchg
mov
push
pushf
imul
int
dec
and
inc
popa
push
je
int
jge
or
lods
aad
dec
stc
hlt
scas
testb
daa
stc
xchg
inc
add
pop
imul
add
inc
das
out
out
enter
in
aam
leave
pop
testb
test
addr16
aad
push
inc
lcall
ljmp
lods
xor
mov
decl
mov
ss
mov
aas
int3
not
hlt
sub
aam
cmp
js
int
clc
adc
adc
loop
les
inc
stos
sbb
xchg
fs
leave
mov
pushf
push
and
pop
sbb
iret
mov
sbb
outsl
sbb
movb
leave
int
inc
jp
lods
loop
stos
mov
or
mov
popf
test
ret
std
test
addb
add
dec
incb
jecxz
or
cwtl
pop
imul
mov
hlt
push
xor
pop
into
outsl
add
iret
pop
je
sub
dec
mov
popf
decb
mov
cmpsl
push
pop
add
push
xchg
and
cmc
add
je
fucomip
mov
jae
push
stc
dec
pop
cli
call
pop
inc
mov
int3
and
outsb
int
jle
xor
pop
aas
sbb
inc
lahf
jmp
aam
xor
lea
pop
shlb
push
test
ret
inc
lret
int
sub
xchg
inc
pop
cli
outsl
sbbl
fldcw
push
in
lods
sbb
shrb
jbe
sub
imul
xor
test
xor
or
xchg
scas
out
scas
jmp
and
in
push
test
pushf
pop
cmp
xchg
notb
scas
and
fsubrl
mov
aas
mov
std
xchg
jae
cs
add
push
fcoms
push
push
jmp
mov
push
lock
mov
mov
and
movsb
out
mov
lea
outsl
iret
int
loop
mov
cmc
sbb
test
jae
sbb
sub
leave
out
hlt
out
inc
call
stos
cmp
or
pop
sbb
mov
sub
filds
mov
xor
int3
jp
dec
ret
stc
cs
js
std
jmp
out
loop
and
or
dec
sarb
xor
xor
xor
inc
ss
inc
cld
cmc
or
cmp
pop
jge
leave
nop
stos
or
jae
mov
cmp
mov
cmp
cmpsb
scas
shl
lret
in
mov
push
push
decl
es
cmpb
mov
jg
aaa
and
mov
cmp
insb
cmp
cmp
sahf
pushf
push
cwtl
inc
cmc
ljmp
out
vzeroall
lea
decl
cmp
aaa
xchg
push
mov
jno
aaa
hlt
pushf
adc
ss
addr16
cltd
rorl
jg
fisubrl
imul
cmc
inc
out
outsb
cwtl
cmp
pusha
jmp
in
out
mov
data16
xor
pusha
sub
xor
sbb
push
aas
jo
and
push
sti
imull
iret
std
call
pop
fwait
sbb
mov
lahf
xlat
lret
mov
and
and
cwtl
popf
xchg
repz
dec
add
and
insb
xchg
hlt
add
loopne
sbb
int
cmp
sbb
lea
jbe
mov
sub
daa
shr
fistpl
scas
aas
test
add
mov
shl
jl
lret
push
shrb
leave
mov
hlt
nop
cwtl
push
cmp
fdivl
fwait
es
jge
out
fld
paddsb
cmp
icebp
or
xchg
stos
les
jnp
pop
stos
xchg
nop
sub
lcall
loop
dec
das
in
xchg
mull
scas
mov
ds
or
inc
cli
test
sub
sti
mov
push
mov
xchg
negb
aad
jle
data16
jae
imul
test
aam
xchg
mov
hlt
jg
or
and
mov
jnp
sub
adc
lret
jle
fsubrl
push
and
std
pusha
and
insb
add
jb
or
push
sbb
and
inc
test
daa
adc
mov
sub
and
sbb
mov
adc
sbb
pushf
lret
push
addr16
or
fidivs
adc
outsl
pushf
jb
movsl
pop
iret
addr16
xor
xor
stos
cltd
dec
ds
xchg
sarl
in
adc
jb
cmpsl
outsb
ret
and
cmpsb
adc
adc
pop
cmp
loop
lods
xchg
imul
ds
jle,pt
lods
add
scas
adc
mov
cmc
aam
adc
rcr
push
ss
addl
popf
pop
pop
xchg
mov
pop
mov
jne
sti
in
rcrb
push
pop
imul
and
dec
sarl
xchg
ret
lret
xchg
sarl
or
and
add
add
add
aad
add
lret
dec
push
outsl
rclb
repz
mov
mov
sar
sbb
popf
in
sbb
mov
jmp
pop
imul
notl
popf
stc
scas
and
dec
xchg
imul
arpl
push
cmp
aad
orb
lea
outsb
push
sbb
mov
jae
fmul
lds
fisttpl
xchg
push
psraw
or
into
daa
push
sub
les
jb
or
lcall
test
sub
dec
out
popa
or
dec
cwtl
adc
andnps
push
mov
insl
psubusw
xor
int
fidivs
aad
scas
mov
inc
test
add
rcrb
jnp
mov
xchg
fisubrs
mov
push
push
mulb
pop
jno
push
add
sub
jnp
out
jne
pop
sti
xchg
stc
std
pop
push
lahf
lret
pop
arpl
mov
dec
adc
aas
outsl
imul
mov
xor
add
cmp
test
sahf
jne
hlt
pop
cmp
imul
jae
and
cmpsb
in
ds
push
leave
lds
mov
repnz
data16
xchg
sti
inc
scas
sbb
gs
xor
movsb
idiv
in
sub
push
jns
jne
daa
mov
aas
mov
jno
pop
insl
ljmp
jle
dec
xchg
daa
push
mov
iret
cmp
or
adc
mov
out
popl
cmpsl
mov
mov
or
jmp
pop
repz
das
les
sub
cmpsb
mov
add
push
add
aam
xor
loop
in
and
xor
sahf
sub
gs
pop
xor
mov
mov
push
push
pop
test
out
mov
push
std
dec
xchg
les
test
sub
movsb
pop
cld
jle
mov
cmp
or
sahf
aaa
call
test
mov
adc
pushf
push
mov
mov
call
mov
and
pop
stos
jg
sub
mov
negb
lahf
scas
or
loop
sbb
fucomip
dec
or
jno
adc
lret
test
dec
inc
mov
in
int3
push
fwait
int3
xchg
sbb
roll
in
or
mov
movq
mov
fs
inc
pop
push
scas
push
out
popf
pushf
mov
sub
inc
lahf
lcall
pushf
stc
arpl
push
sbb
and
movsl
movsl
push
add
sub
mov
adc
adc
jp
incl
sub
popf
mov
enter
xor
mov
or
cltd
sbbl
aad
lods
fists
call
or
jge
mov
js
sarl
sbbb
push
pop
inc
mov
jbe
scas
roll
pop
minps
clc
xchg
movsl
mov
and
in
aam
leave
xor
js
xlat
jge
or
mov
aas
das
fstl
jno,pt
xchg
test
add
rorl
mov
pop
adc
jmp
and
sbb
cmp
xchg
jecxz
xchg
xchg
fidivl
cmpsl
mov
xchg
fldl
and
dec
lock
loopne
int3
ds
mov
aam
mov
cmp
repz
dec
sub
ja
jge
sbb
dec
dec
xchg
inc
test
xchg
xchg
aas
push
mov
sahf
jp
out
das
fisttpl
and
mov
sub
xchg
popf
push
sub
movsb
xchg
fisttps
xor
lods
das
icebp
stc
shlb
adc
sub
int
xchg
xor
xor
cmpsl
sbb
push
loopne
out
sub
mov
mov
mov
cli
arpl
insb
and
xlat
mov
ret
movl
sbb
mov
jmp
inc
hlt
cmp
iret
cwtl
jmp
adc
mov
pop
orb
scas
aas
incl
lcall
rclb
mov
and
jg
jbe
mov
mov
mov
fmuls
fsts
push
shll
ljmp
in
lock
fldt
jae
adc
mov
hlt
mov
or
push
add
jb
cltd
mov
arpl
xor
js
pop
lcall
es
pop
jge
add
jnp
pushf
imull
cld
or
xor
ret
mov
adc
adc
mov
cmp
sahf
and
jb
insb
mov
or
lret
or
sub
adc
mov
or
mov
xchg
sahf
lahf
cmp
out
mov
jle
stc
fistpl
xlat
xchg
and
mov
mov
mov
add
fists
pusha
cmpsl
mov
pop
adc
fdivl
push
pop
sti
test
fnstcw
sub
xchg
call
out
repnz
mov
pop
dec
das
xchg
sbb
jg
mov
es
jae
adc
rclb
pop
push
xor
lea
sbb
jecxz
and
ficompl
repnz
xchg
mov
jle
imul
cmp
mov
idiv
xchg
call
inc
insl
mov
pop
outsl
cmp
sbb
aas
xchg
sub
je
xchg
add
and
sub
cmpsb
data16
inc
cmp
dec
pop
or
jo
jge
ds
jb
hlt
sbb
stc
and
mov
ljmp
les
or
addr16
cmp
mov
ja,pt
and
scas
rcll
adc
loop
lret
xchg
inc
push
fiaddl
bound
dec
cli
cmc
mov
insl
and
sbb
adc
repnz
aam
stos
adc
push
pop
xor
pop
test
data16
les
inc
cmpsl
ljmp
or
repz
cmp
rcrl
popf
adc
cmp
hlt
mov
or
mov
and
xor
sbb
mov
cmp
dec
add
aaa
rclb
iret
repnz
scas
in
js
push
lods
push
adcb
push
orb
sub
daa
test
aaa
fmull
xchg
adcl
jo
inc
sub
lods
jge
add
dec
mov
mov
sbb
pop
lea
int3
fcmovnu
xchg
ret
neg
fistpll
push
icebp
add
insl
dec
aad
ja
pop
dec
xor
push
xor
xorl
lret
sub
out
cmc
xchg
adc
sbb
xchg
adc
push
imul
mov
movsb
insb
xchg
dec
les
xor
lds
sbbb
push
mov
jg
adc
mov
mov
stos
and
pop
pop
out
mov
mov
and
sti
std
bound
mov
pop
daa
and
lret
negl
xor
cld
inc
cs
ds
daa
leave
outsl
outsl
jo
sti
add
shrb
cmp
push
dec
popf
or
out
popa
pop
nop
xchg
in
cmpsb
imul
lea
xor
sbb
js
fisttpl
ja
dec
fisubs
jmp
in
mov
and
inc
pushf
fcoms
cmp
out
push
jmp
add
inc
cmc
cmp
sbb
pop
call
adc
cmp
imul
or
iret
push
xor
in
cmpsl
or
push
inc
adc
add
mov
mov
sarl
cmpsb
push
pusha
adc
test
mov
dec
loop
xor
mov
and
adc
push
pop
ljmp
in
xchg
jmp
scas
shrl
mov
jne
rcr
lods
xor
or
adc
ret
stos
push
and
stos
mov
cmp
std
xchg
das
sub
fmull
xchg
mov
cmc
cld
into
sbb
arpl
mov
fsub
xor
mov
jle
jp
push
data16
lcall
adc
loopne
xor
jb
pop
arpl
xor
xchg
hlt
test
or
mov
repnz
es
cld
lret
fldz
js
mov
data16
iret
cmp
lea
push
repz
mov
fstp
mov
dec
sbb
adc
jge
add
add
pop
adc
shll
dec
and
and
out
insl
xchg
xchg
mov
sbb
lret
mov
icebp
push
lods
and
in
popf
sbbl
push
xchg
dec
mov
push
inc
fstl
or
mov
test
xchg
out
call
into
sub
cmpsl
inc
xor
pop
sti
testb
cmpsl
jecxz
mov
enter
fwait
mov
daa
mov
aam
xchg
mov
dec
mov
pop
xchg
cmp
test
add
cmp
cmpsb
cmpsb
cmpsb
ljmp
adc
fcoms
repz
sub
mov
mov
shrb
inc
rclb
lret
lock
pop
adc
fiadds
jns
sub
addr16
iret
out
cmp
icebp
jmp
js
cltd
push
divb
fsubs
in
imul
xor
fdivp
ljmp
rorb
jbe
popf
std
pushf
inc
dec
sbb
out
push
cmp
outsb
adc
push
mov
xor
and
ss
call
ss
sbb
add
das
push
cmp
dec
jmp
in
or
mov
leave
fsubrl
ds
push
shl
int3
stc
sub
jb
clc
inc
adc
add
jbe
js
add
out
jo
sahf
cmpsb
xor
mov
push
and
hlt
lods
xchg
mov
mov
lock
jecxz
xor
pop
dec
clc
adc
repnz
aam
orl
mov
hlt
or
cmpl
ret
jp
sub
jo
mov
mov
imul
inc
nop
iret
enter
icebp
aaa
bound
sbb
mov
call
sub
push
in
outsl
gs
stos
fistl
mov
incb
divb
inc
cmp
pop
aas
jle
lock
mov
cmp
jbe
call
fdivs
cmp
xchg
popf
lock
and
arpl
inc
xchg
inc
mov
adc
pop
jb
inc
pop
or
add
fucom
push
xorb
mov
xor
sub
cs
and
add
repz
jb
xor
mov
and
cld
xchg
aas
mov
test
dec
add
nop
dec
and
push
sub
imul
or
xor
pop
loope
mov
sbb
imul
pop
pop
pushf
ret
movw
dec
adc
adc
repz
gs
cmp
outsl
sbb
std
in
sbb
subl
push
push
test
inc
cli
and
jne
pop
xor
or
fwait
lcall
shrb
inc
dec
pop
loop
xchg
clc
imul
xchg
jecxz
or
add
inc
jl
imul
xor
mov
je
outsb
loope
push
out
xchg
cmp
lret
jnp
pop
cmp
and
push
xor
outsl
mov
pop
sbb
sbb
icebp
aaa
dec
enter
es
sub
pop
lock
es
pop
stc
push
int
add
popa
adc
movsb
push
mov
ja
popa
inc
scas
sbb
sub
aad
in
sbb
aad
sub
push
and
sub
out
cwtl
aaa
add
popf
lock
dec
enter
mov
dec
mov
sub
pop
adc
int
jg
adc
pushw
and
std
pop
push
and
ss
fsubrl
jp
jnp
mov
xchg
lret
sbb
cmp
add
jecxz
push
lods
movzbl
std
xchg
fstl
pop
xchg
xor
mov
sbb
push
in
sub
pop
lahf
cld
movsb
data16
adc
xor
push
xor
or
push
pop
es
bound
aaa
jbe
je
cmp
jg
lock
xor
pop
popa
subb
mov
std
imul
jg
in
ljmp
dec
sbb
push
out
fwait
jb
inc
popf
jb
cmpb
cmpsb
mov
test
mov
mov
cmpb
push
pushf
push
xor
mov
imul
call
push
adc
sub
clc
lcall
js
push
mov
jge
leave
aad
adc
jg
mov
pop
sarb
inc
xor
xchg
icebp
lahf
pop
jmp
ss
fcmovnb
outsl
aam
ret
ret
movsl
lcall
xchg
test
jecxz
cmp
mov
adc
sbbl
outsb
icebp
pop
pop
push
or
lea
sub
mov
sub
sbb
pop
jns
andl
inc
push
repz
es
lret
jmp
lahf
lock
out
inc
pushf
outsl
lcall
pop
push
and
mov
sub
inc
mov
push
je
mov
jnp
xor
push
xor
inc
movsl
std
rcr
xchg
sub
pop
pusha
add
push
cmp
inc
daa
xchg
out
dec
out
inc
fs
jo
sbb
lret
add
pop
cltd
ss
sbb
pop
shll
pop
test
mov
and
movsl
mov
js
incb
jb
int3
mov
faddl
ljmp
mov
js
outsl
add
in
mov
call
adc
popf
mov
lock
shl
sbb
mov
fisubrl
sbb
outsl
es
pop
lret
call
mov
int
jb
sbb
jle
jmp
ret
mov
sub
test
in
or
repnz
fmull
fists
nop
pop
sahf
loope
mov
mulb
and
test
jp
pop
stos
aad
test
mov
outsl
adc
in
out
and
mov
lret
nop
mov
scas
popa
sbb
das
push
push
mov
xchg
or
je
dec
inc
push
cli
ss
adc
push
out
xor
mov
push
ja
int
js
adc
fistpll
mov
mov
inc
cmp
scas
or
cltd
mov
jp
std
add
sar
out
sbb
mov
mov
or
imul
jo
xchg
out
jae
mov
fisubrl
bound
mov
and
fcomps
je,pn
cmpsb
xchg
bound
roll
ret
mov
scas
jne
lcall
mov
das
popa
mov
mov
jno
ss
in
dec
mov
sar
pop
iret
push
xor
shrb
dec
jne
push
adc
repz
rorl
push
sti
int3
pop
xor
lret
jmp
pop
movsb
xchg
sbb
add
push
pop
mov
mov
mov
cltd
aad
xchg
mov
cmp
loop
cmp
lods
adc
movsb
jg
mov
push
popf
xchg
into
xor
or
aaa
pop
je
ret
sahf
or
in
add
push
pushf
add
or
shrl
mov
jmp
mov
dec
test
sbb
int3
mov
imulb
scas
ret
sub
sti
aas
jne
inc
xor
sbb
outsl
cmpsl
test
hlt
les
lea
push
pop
mov
sbb
pusha
int3
mov
push
addl
sahf
andb
aas
dec
fisttps
fdivp
xchg
dec
mov
push
mov
mov
ja
repnz
sub
mov
cld
cmpsb
pop
xchg
dec
stc
test
add
push
xor
pushf
or
mov
sbb
mov
insl
imul
std
xor
and
pushf
ds
jmp
test
add
stos
push
rolb
stos
push
sbb
nop
dec
push
repnz
in
xchg
cmpsb
inc
xor
cmpsl
loopne
pop
jno
mov
pop
push
lahf
adc
dec
xchg
jae
lds
fs
rorl
fmuls
mov
xchg
out
sbb
inc
out
mov
lock
stos
int3
insl
and
push
aaa
aam
call
jae
rcll
and
mov
insb
pop
adc
out
movsb
push
xor
mov
outsb
je
out
inc
xchg
inc
pop
sub
sbb
icebp
shll
pop
in
sub
lcall
mov
lret
mov
pusha
mov
push
sub
fidivs
pop
rol
movsb
push
jns
lds
out
xchg
popa
hlt
xchg
inc
xor
push
cld
dec
lods
out
or
sbb
inc
pusha
addb
cmp
cmp
sbb
arpl
popa
cmpsl
add
ja
lret
pusha
jno
inc
inc
xor
cli
insb
and
roll
ja
loop
call
dec
sbb
daa
repnz
pop
push
or
cmp
ljmp
imul
cmp
and
lds
mov
shll
mov
push
xchg
adc
mov
and
xchg
push
ds
fisubl
jbe
xchg
int3
mov
jp
stos
push
xchg
daa
cmp
xchg
push
test
mov
icebp
add
or
bound
out
lock
mov
push
pop
fmulp
sub
mov
push
mov
fdivrl
outsl
ret
mov
xor
jb
scas
push
mov
xchg
into
xorl
daa
shl
int3
pop
pop
arpl
out
lock
cld
nop
stos
bound
leave
sub
aas
pop
outsl
pop
xor
push
js
jp
pusha
mov
pop
adc
push
mov
dec
xchg
mov
ret
push
shlb
mov
loop
xorb
add
pushf
sahf
popa
xchg
add
mov
cmp
in
imul
inc
out
cmp
lahf
sub
dec
jnp
and
cmp
movsb
fs
xchg
fs
in
push
xor
inc
push
lahf
cltd
movsl
ret
test
or
xchg
push
sub
rorb
sti
or
sbb
or
mov
sub
mov
iret
add
fistps
fwait
push
xchg
in
sub
fisttpll
jge
movsl
jle
insb
test
xor
dec
lret
or
sbb
adc
cmp
jb
pusha
adc
or
call
push
adc
mov
xor
ljmp
pop
pop
insb
xchg
cmpl
stos
push
test
bound
mov
xor
aas
xchg
ret
or
fbld
cld
jb
pusha
and
xchg
xor
in
test
jl
push
fistpll
jmp
in
out
dec
ss
repz
cmp
repz
sbb
sbbl
and
adc
rcr
dec
sbb
insb
loope
mov
loopne
fstpl
add
out
inc
add
and
add
xor
in
ss
xchg
stc
push
cltd
jbe
lock
out
jle
pop
mov
xor
imul
jo
cmp
jmp
out
out
push
sub
idivl
cmpsl
pop
fs
test
jmp
xor
fwait
cltd
nop
adc
add
repz
test
mov
es
lods
icebp
sbb
sub
push
pop
idivl
jecxz
lods
daa
sahf
xchg
add
notl
out
stos
adc
stos
mov
pop
stc
xchg
jo
jae
cmp
rolb
stc
pop
fwait
dec
lods
loope
idivb
push
shlb
jmp
or
fcoms
popl
sti
pushl
je
je
inc
popf
xchg
cmp
mov
push
mov
je
ffreep
push
cmp
pop
popa
push
stos
or
fmull
xlat
push
mov
iret
xlat
insb
adc
out
cwtl
adc
cltd
loope
popa
enter
rcrl
xor
inc
mov
ds
mov
je
js
mov
rcll
hlt
adc
inc
xor
mov
pop
push
roll
sbb
pop
mov
jp
outsl
lock
inc
pop
push
push
clc
in
jmp
xor
scas
out
ret
mov
fisttpl
mov
jl
iret
bswap
jmp
out
leave
inc
out
insb
pusha
mov
jl
popf
pop
rcr
test
push
imul
rol
mov
pushf
js
clc
imul
push
dec
or
stos
xor
dec
cmp
adc
mov
cli
je
daa
pop
repnz
leave
stos
inc
loopne
fdivs
adc
jbe
adc
adc
push
cld
jecxz
jmp
bound
inc
int3
addb
sub
fildll
jp
lahf
out
test
jae
aaa
lret
or
jl
sti
stos
xor
jp
mov
fwait
push
jl
push
andb
mov
int
and
in
mov
lods
fldlg2
dec
pop
lock
sub
pop
addr16
or
fcoms
sub
sub
xor
cli
xlat
mov
dec
leave
cmc
pop
in
jo
sahf
add
or
aad
jno
shll
inc
fnsave
loop
and
xchg
sub
xor
in
xchg
pop
repnz
ficoms
jmp
mov
jle
lods
cwtl
incl
inc
pusha
inc
shll
js
jns
stos
cmpsb
cmp
pop
cltd
popa
in
jo
inc
push
adc
stos
inc
jg
and
cwtl
sbb
clc
and
mov
or
and
inc
xchg
inc
mov
stos
test
int
add
cmp
mov
fwait
inc
add
arpl
lea
icebp
testb
fucomi
dec
and
ret
push
aam
mov
push
js
aaa
lea
int
xchg
xchg
jmp
push
negl
jl
sbb
movb
out
jo
movsl
sbb
sti
sbb
popa
sbb
in
rcll
movsl
sbb
mov
data16
mov
sti
push
ret
fisubrl
dec
lahf
and
sub
xchg
pop
or
sbb
xor
and
daa
or
fsubrs
inc
mov
mov
adc
mov
xor
shrb
aas
jb
cltd
subl
stos
mov
mov
jmp
add
leave
cmp
shll
pop
adc
xchg
jns
pusha
test
ds
sub
lock
push
out
popf
push
out
mov
sbb
nop
loop
sbb
push
loopne
pop
jne
lret
jecxz
xor
xchg
push
mov
divl
cld
push
push
jle
ficompl
inc
jmp
or
xchg
movsl
sub
ret
lahf
add
rcl
cmp
cli
lock
loopne
add
dec
mov
pop
test
fdivr
fcoms
dec
sub
push
add
mov
push
cmp
aam
iret
cmp
adc
insl
mov
sub
cmpsb
and
mov
dec
jb
lret
inc
idivl
loop
in
pusha
rclb
repz
or
mov
insb
cmp
and
ljmp
and
mov
loope
mov
pop
in
inc
fisubrs
enter
lahf
push
inc
push
jno
jne
cmc
andb
dec
jecxz
mov
std
cld
mov
sub
inc
xchg
test
aaa
cltd
mov
divl
sar
gs
dec
lret
inc
sub
or
xchg
lret
xchg
loop
ret
jle
imul
fwait
push
ja
sbb
and
or
addb
repnz
sarb
pop
push
mov
xor
mov
lret
add
sub
shr
or
sub
xor
sub
stos
pop
or
outsb
hlt
popa
dec
popf
sbb
in
jl
adc
push
fwait
in
and
ret
scas
push
push
and
jne
pop
add
daa
jno
loope
mov
test
fcom
into
ret
cmp
mov
out
or
add
test
and
ss
out
jno
and
jp
fildll
dec
and
pop
mov
fidivs
faddl
aas
popf
test
sbb
push
xchg
in
lahf
lds
mov
je
add
push
test
repz
xchg
or
mov
push
dec
xchg
cmpsl
insl
xchg
cmc
mov
push
jo
daa
mov
int3
das
jae
or
call
add
insl
push
adc
jmp
cmp
cmp
jge
mov
popl
add
insl
cmp
jns
fidivl
add
and
ss
push
insb
cmp
mov
jo
xchg
adcb
xchg
loop
popa
sbb
jecxz
dec
movsl
mov
testl
mov
les
fdivrs
xchg
scas
test
pop
push
aam
push
or
pop
sbb
mov
or
rcll
or
pop
lcall
scas
test
cmp
incl
mov
or
sbb
push
xchg
xchg
fistpll
imul
shlb
mov
out
or
cmpsl
fiadds
mov
inc
push
fsubrp
iret
ror
insl
insb
iret
call
xor
mov
pop
mov
adcl
add
push
cwtl
dec
cmp
push
sarl
out
jg
dec
mov
mov
lods
push
in
movsb
dec
push
dec
jns
lcall
enter
mov
push
ljmp
sti
mov
in
imul
lock
fcomip
pop
jae
jne
cmc
xchg
aam
sub
in
idivl
inc
or
sub
inc
mov
pusha
push
jmp
inc
test
inc
scas
adc
je
je
dec
bound
cmp
shlb
aaa
ret
fstps
mov
sbb
or
insb
pop
int3
mul
lcall
dec
jno
das
movsb
iret
das
add
fnsave
stos
ret
insl
in
int
test
jne
adc
ret
or
sub
adc
cs
and
sbb
pop
pop
adc
xor
jne
xor
xor
cmp
mov
dec
repz
iret
xchg
xchg
xor
dec
rol
arpl
ret
add
mov
ret
lods
push
xor
icebp
sbb
decl
cmp
pop
out
loop
lcall
scas
movsl
inc
pop
icebp
mov
jp
lcall
fsub
test
xchg
xor
sub
into
out
jge
push
ret
mov
cmp
mov
add
sub
add
pop
and
iret
pop
mov
mov
dec
mov
mov
push
outsb
sarl
lods
cmpsl
fdivs
jns
jno
movsb
pop
testb
test
mov
popf
add
mov
jae
clc
xchg
mov
or
sbb
in
pop
push
inc
jae
add
mov
lret
int
mov
ljmp
js
mov
sbb
lcall
incb
xor
jle
pop
adc
and
inc
ljmp
push
add
sbb
idivl
cmc
imulb
pop
iret
loop
dec
jl
cmc
sub
and
jge
rorb
sub
lock
cmp
int
sub
in
cli
test
dec
or
sbb
jg
jmp
xor
cmp
icebp
inc
in
xor
xchg
jge
negl
daa
cmp
and
js
inc
std
enter
jne
cli
push
push
and
test
ficoml
lret
xor
lar
jmp
cmp
leave
pop
inc
stos
pop
daa
jecxz
stos
mov
rorl
mov
popa
fidivl
xor
sub
aaa
ja
das
xchg
sbb
and
fs
cmp
jecxz
and
int
call
enter
mov
bound
mov
or
imul
inc
xchg
lds
orb
notl
pop
jg
jmp
shl
or
aad
mov
jnp
mov
loop
insb
mov
addb
rcr
aas
repnz
mov
gs
mov
xchg
dec
lods
sub
std
and
add
xchg
jnp
sti
ret
popa
imul
repnz
and
insl
push
insl
popf
mov
add
ret
in
daa
test
inc
leave
mov
xor
rcrl
cwtl
xor
mov
xchg
mov
testb
movb
loop
and
mov
inc
lret
fstl
rclb
cli
xchg
xchg
adc
inc
push
xor
push
pop
sarl
push
push
or
aas
jmp
call
insl
movsl
cmpsl
xor
xchg
fdivr
clc
pop
and
push
dec
add
sti
mov
dec
mov
fcoml
sbb
ja
icebp
xchg
sarl
pop
mov
cmpsb
ss
sub
or
mov
fbstp
fstl
out
pop
aad
lock
mov
arpl
popf
lods
xchg
gs
xchg
sbb
mov
aam
cmp
push
filds
or
push
ja
int
pop
dec
add
jne
js
mov
repz
mov
adc
imull
test
push
repz
iret
data16
xor
and
jp
popf
sub
shrb
hlt
fldt
jg
dec
gs
mov
add
roll
adcl
pusha
sahf
sub
ud2
add
out
std
les
sbbl
sbb
subl
out
filds
dec
shll
outsl
cmp
sti
das
scas
dec
leave
int
aaa
or
sub
stc
sbb
lret
scas
ret
cmp
inc
mov
xchg
andl
pop
popf
data16
gs
push
orb
cmp
or
jne
cmp
std
push
sbb
imul
xor
jnp
daa
out
cld
push
or
inc
sbb
jg
mov
inc
out
jns
fisttps
and
xchg
mov
pop
push
ds
cmpsb
push
cwtl
jns
mov
loopne
inc
icebp
or
lods
test
stc
push
sbb
fwait
pop
sub
or
divl
cli
xor
dec
pop
sti
mov
pop
js
jb
shll
cmp
ficoml
push
data16
push
dec
and
clc
add
cmp
sub
mov
mov
call
fisttpl
mov
adc
scas
push
les
inc
mov
out
clc
negb
cmp
scas
loope
outsl
insb
sbb
aas
push
xchg
outsb
loope
push
cmp
jmp
bound
sbb
cmpsb
jne
cmp
pop
or
das
bound
sbb
aam
sub
and
or
and
bound
cmp
and
shlb
out
jno
or
scas
jmp
imul
fiadds
cs
mov
xor
scas
ds
addr16
cmp
ja
or
xlat
repnz
dec
fisubrs
and
jns
or
xor
xor
lcall
lds
mov
mov
mov
out
shll
push
cmp
nop
or
lahf
inc
ret
mov
stos
test
jl
icebp
ja
xor
hlt
xchg
addr16
jle
mov
icebp
cli
test
cmpsb
sub
ds
mov
cmc
dec
incl
lea
sbb
xchg
and
dec
xchg
je
add
jp
xchg
sub
dec
fisubs
dec
rdpmc
scas
inc
ret
cmc
enter
cmp
aam
xorl
jno
dec
and
imul
xor
imul
nop
cmp
mov
cmp
cmpsl
das
xor
jle
stos
xchg
loopne
cld
and
lods
add
jp
rorl
clc
cmpsb
movsl
pop
sbb
xor
stos
scas
js
popf
popf
loope
movb
stc
insb
test
scas
ds
in
fnstenv
enter
cmp
mov
stos
lods
iret
xor
mov
repz
das
cltd
addb
cmpsb
gs
adc
fnstcw
cltd
dec
inc
sti
jnp
insb
in
pop
xor
pop
jmp
repnz
dec
movsbl
mov
push
sbb
jecxz
addr16
mov
mov
xchg
bound
out
hlt
jns
fistl
xchg
and
into
adc
inc
jno
sub
xlat
jg
push
push
pushf
sbb
mov
ss
test
dec
imul
jmp
sub
pop
aam
aam
xchg
ret
fldl
ret
mov
mov
mov
adc
push
jmp
xchg
xor
lret
push
out
pop
and
and
stos
sbb
js
stc
bound
pop
inc
adc
mov
push
outsb
push
ds
mov
add
cmc
out
mov
lock
push
sarb
roll
mulb
mov
inc
push
mov
push
cmpsl
sub
mov
mov
andb
mov
jmp
sbb
jns
int3
gs
mov
test
or
jb
and
sbb
pop
test
ficoms
dec
adc
int
aad
mov
xchg
xor
stos
jecxz
aam
pop
add
xor
inc
stc
out
pop
jle
stc
shrb
or
aas
push
lret
sbb
mov
add
prefetch
sub
xor
jg
insb
sbb
sub
xor
adc
mov
mov
xlat
adc
cmp
pop
mov
sub
pop
js
je
lock
mov
cmc
dec
sahf
xor
nop
jno
mov
mov
pop
fistps
mov
dec
stc
mov
loopne
dec
cmp
stos
test
cld
in
test
jecxz
add
arpl
add
lcall
loopne
mov
pop
push
fsubrs
mov
jb
je
movsl
add
sub
imul
scas
xchg
lock
sub
mov
add
jl
push
lea
push
mov
push
xchg
lcall
aad
iret
out
xor
mov
mov
push
xchg
push
xchg
adcb
stos
dec
loopne
jmp
jge
pop
inc
je
cld
or
mov
cmp
and
xchg
lock
das
xor
xchg
xor
ficoms
dec
cmp
mov
pop
mov
inc
ds
pop
jmp
fidivrl
aad
stc
add
cmp
sbb
jge
je
cmpb
inc
jo
loop
sti
jecxz
cmp
clc
jns
inc
sub
imul
repnz
pop
mov
pop
out
shll
mov
jb
fnsave
mov
enter
jnp
arpl
push
mov
jae
and
lcall
add
cltd
dec
mov
sbb
inc
push
mov
fwait
sub
jge
std
push
dec
repz
outsb
add
roll
pushf
rcrb
sub
insb
rcl
push
cld
popa
jmp
fstpt
es
fs
sub
pop
dec
ds
pop
jnp
and
mov
or
xchg
xchg
stc
pushf
jno
and
jmp
add
popf
push
xchg
cmp
push
mov
je
push
xlat
scas
cmp
jp
dec
xor
mov
outsb
xchg
call
fists
mov
cwtl
movsb
cltd
das
pop
mov
mov
bound
cmp
pushf
mov
and
mov
daa
fisubrl
ret
lds
adc
lods
mov
in
sbb
movsl
cld
dec
out
inc
cmp
sbb
mov
push
xchg
push
sbb
into
add
dec
loope
mov
mov
or
loopne
xchg
mov
and
mov
pop
lahf
sub
dec
fistpll
loope
cmp
sbb
cmpsb
out
in
inc
fcomip
stos
jp
push
cltd
sbb
ja
shll
shl
or
out
jns
mov
data16
iret
cmp
mov
in
pop
xlat
and
push
mov
les
mov
jle
pop
mov
negl
loop
xchg
loope
push
imul
ret
cltd
leave
dec
inc
cmovae
test
pop
and
xor
adc
pushf
add
repnz
lods
imul
out
dec
jb
ja
into
das
and
cli
outsb
add
loopne
or
les
xchg
insb
mov
jle
fsubr
lods
aas
aas
testb
inc
inc
cmp
int3
filds
out
and
femms
inc
pop
xchg
jne
sub
push
lret
in
xor
xor
push
repz
into
movsl
mov
mov
fidivrl
stos
cmp
xor
sbb
xchg
mov
aas
sbb
mov
out
sbb
mov
mov
test
imul
stos
add
mov
mov
pop
stc
jmp
test
lret
sarl
or
bound
ds
js
fidivrs
push
dec
fs
dec
jl
arpl
push
adc
add
cld
inc
mov
push
aas
and
repnz
xchg
lret
mov
jno
add
call
jg
sbb
in
bound
and
sub
push
ss
setae
and
sbb
arpl
jp
cmpsb
out
stos
fstl
xchg
xchg
rorb
cli
popa
outsb
int3
call
jl
ret
inc
adc
sub
cltd
push
clc
test
into
bound
cli
sub
fdiv
push
mov
rcr
jnp
jl,pt
sub
dec
ds
hlt
repz
cltd
cmp
adc
ja
cltd
sub
xor
ja
aas
or
ss
std
das
cmc
outsl
xchg
outsl
mov
push
and
ffree
arpl
adc
or
repnz
daa
out
ja
mov
test
mov
mov
mov
call
push
sbb
inc
popf
fldenv
dec
ss
adc
mov
push
xchg
push
sbb
push
jle
xchg
or
jge
add
lahf
push
lahf
mov
rolb
test
jge
aas
fs
out
es
subl
leave
mov
popf
mov
dec
dec
pop
leave
inc
iret
sahf
mov
arpl
mov
pop
jo
lahf
sub
test
jno,pn
fwait
cltd
sbb
aam
mov
movsl
adc
stc
aam
jo
stos
add
xchg
xchg
mov
lea
clc
inc
imul
and
xor
jmp
popa
sbb
xchg
pop
fldenv
sbb
sbb
mov
sub
mov
xchg
xor
sbb
sarb
add
es
inc
dec
mov
out
iret
mov
mov
add
gs
outsb
and
sarl
dec
push
into
bound
aam
outsl
push
loope
mov
pop
fs
pop
rolb
mov
cli
cmp
sbb
adc
lock
inc
add
scas
jmp
popf
pop
jne
dec
jg
sub
pop
insb
pusha
xchg
call
sub
sti
or
popa
mov
xchg
js
outsb
dec
shr
hlt
mov
push
jle
aaa
test
dec
int
std
dec
test
int
push
loop
pusha
aad
jmp
fs
call
nop
and
lea
mov
pop
lods
add
lods
sbb
xchg
sub
sub
les
fbstp
test
imul
dec
andl
imul
scas
sbb
fnstenv
in
adc
xchg
pop
sbb
dec
iret
pop
push
sbb
cmp
push
jecxz
push
testb
lock
cmc
cli
sub
adc
xor
addr16
jnp
lret
mov
jno
call
mov
mov
fsubs
xchg
sub
insl
or
daa
add
gs
push
cmc
test
inc
pop
cmc
aaa
in
mov
sub
lds
pop
ficompl
xchg
fwait
aad
pop
in
rorl
jmp
subl
cmp
jmp
aad
out
sbb
add
xor
stc
dec
sub
int
mov
jbe
out
outsl
stos
xchg
sbb
mov
out
jge
rcrl
mov
fimull
push
push
push
fucomi
lret
mov
sub
jbe
xlat
mov
xchg
outsb
adc
test
js
in
aad
sub
cmp
imul
outsb
shr
dec
sbb
daa
mov
scas
pop
jle
imul
adc
out
jle
pop
in
fiadds
xchg
xor
mov
popa
or
addr16
leave
dec
lds
lods
dec
stos
cmc
mov
das
dec
push
pop
cmp
xchg
int
movsl
cltd
pop
js
mov
and
fucomip
cmp
divb
and
lea
movsl
sub
push
and
stc
mov
cmp
xchg
fs
xor
cmc
add
xchg
sbbb
xor
dec
stos
dec
jmp
lret
mov
adcb
lret
test
cmp
sbb
lret
push
js
push
inc
adc
add
js
sti
sar
mul
lret
pop
imul
insl
hlt
mov
adc
inc
xlat
cwtl
inc
ds
jle
out
lods
add
mov
mov
pop
adc
jmp
or
movsl
sbb
fistpll
pop
push
mov
cmpsb
and
jl
and
insl
sbb
cmp
pushf
gs
sarl
pop
sbb
sub
loope
test
mov
ljmp
jmp
pop
sbb
js
push
lods
push
mov
mov
mov
jmp
call
mov
cmpsl
sbb
imul
inc
or
imul
sbb
test
cltd
in
mov
push
push
cmp
ljmp
dec
pop
push
push
test
rolb
ljmp
mov
xor
insl
mov
cld
out
inc
in
xchg
pusha
dec
add
rolb
mov
scas
push
movb
xor
int
jg
loop
mov
push
push
daa
faddl
dec
jo
loop
lods
jge
scas
xchg
push
test
bound
push
push
scas
or
pop
fcmovb
dec
fscale
mov
ret
or
sbb
dec
push
sbb
ret
fs
xchg
mov
and
sti
xchg
hlt
jbe
inc
inc
stc
mov
mov
and
fsubrs
cmp
mov
shr
inc
mov
dec
mov
jnp
xor
xchg
dec
repz
jmp
push
cmpsb
adcl
in
pop
mov
push
sbb
xchg
mov
xchg
loopne
pop
lahf
push
inc
xor
aad
xchg
cld
enter
js
pop
mov
dec
fisubl
and
mov
dec
cmpsb
stos
aad
pop
clc
mov
mov
std
pop
stc
imul
fwait
xchg
sub
push
pop
inc
test
push
and
and
testb
inc
pushf
xchg
pusha
dec
fsubrl
scas
mov
popa
movsb
insl
loop
xchg
movsl
outsl
daa
mov
data16
mov
sub
and
mov
pop
wbinvd
imul
idivl
icebp
loope
aaa
pop
pop
adc
xchg
sar
mov
js
cmpsl
loopne
mov
pushf
sub
inc
mov
pop
lret
aam
int3
and
xor
cmc
dec
or
popa
repz
jl
call
jl
lods
ret
pop
arpl
fildll
xchg
sub
fs
fstps
fisttpl
cmpsb
sar
push
cmc
cmp
ficomps
sub
lds
xchg
out
push
pop
jb
inc
std
jmp
mov
leave
cmpsl
pop
or
cmp
enter
adc
or
mov
jp
sbb
addr16
fcmovnb
bound
and
inc
sahf
out
out
push
inc
sbb
shlb
inc
mov
cmp
push
sbb
jmp
mov
sbb
push
sub
movsl
sub
pop
mov
test
cmp
xchg
daa
pushl
cmp
out
or
mov
out
xor
xchg
sbb
mov
jne
movsb
mov
mov
lcall
adc
jmp
jbe
add
inc
pop
pop
je
xor
clc
pop
into
mov
adc
push
pop
add
pop
xchg
push
push
sar
adc
fistps
sub
shlb
pop
movsl
fidivl
or
or
xor
inc
fldcw
xchg
or
cltd
inc
inc
sbb
fs
int
dec
push
lret
sbb
mov
fadds
or
out
lcall
in
dec
fucomi
pop
imul
cld
and
push
repz
mov
sub
insl
xchg
mov
sub
ljmp
lahf
insb
xor
adc
nop
fcom
andb
sti
push
jnp
in
add
pop
imul
jne
sub
gs
pop
cld
xchg
stos
out
xor
imul
call
pop
es
add
mov
jns
push
lcall
std
xor
xchg
xor
scas
in
je
and
or
adc
aam
xchg
orb
xadd
in
mov
mov
lds
jbe
mov
sub
movsb
jl
pop
fucomp
cmp
into
int3
adcl
movsl
cwtl
cli
push
cs
bound
and
xor
enter
xchg
lcall
ds
stos
and
push
jmp
aam
mov
daa
shlb
and
and
into
fbstp
xchg
int3
xchg
and
adc
int3
addl
sub
outsb
sub
cli
adc
int
or
add
adc
push
jbe
in
dec
mov
dec
lods
or
pop
push
cmp
fisttpl
pop
shl
sub
xchg
sub
fwait
dec
pop
hlt
fsubs
dec
jns
icebp
je
adc
imul
lret
movb
adc
repz
arpl
mov
mov
mov
pop
loopne
add
in
scas
mov
pop
push
movsl
inc
xchg
fs
insb
jmp
xor
sahf
pushf
and
clc
push
mov
ffreep
inc
sbb
cmp
stos
loop
mov
dec
inc
jo
int3
or
sahf
mov
pop
dec
jne
xchg
sub
xor
adcl
or
and
dec
jo
call
sub
mov
mov
adc
call
add
call
gs
outsl
adc
fwait
push
aaa
pop
fs
outsl
mov
add
sub
inc
pop
pop
sarl
or
repnz
mov
push
adc
push
stos
je
rolb
push
mov
xor
loopne
pop
dec
xor
js
mov
jmp
fistpl
aad
int3
and
scas
push
int
pop
icebp
cmc
push
subb
jo
cli
aam
cmp
popa
hlt
stos
mul
fcmovbe
mov
imull
sbb
mov
fs
push
add
movsb
sbb
das
andl
adc
frstor
icebp
gs
repnz
cs
sub
push
insb
and
jns
arpl
xchg
mov
cmpsl
adc
mov
cmp
sub
pushf
xchg
pop
inc
shll
aam
les
popf
popa
mov
adc
sbb
jle
dec
jb
divb
fldt
inc
test
jo
inc
xor
mov
call
adc
pop
cmp
jno
dec
push
xchg
dec
movsb
mov
in
addr16
push
fdivrl
pop
jbe
adc
xor
jmp
mov
adcl
andl
cli
lahf
stos
push
mov
ficoml
push
lods
mov
rcrl
decb
lds
inc
mov
es
inc
int3
jbe
stos
xchg
mov
dec
and
adc
stc
movsb
fbstp
mov
and
jns
repz
test
and
xchg
lret
dec
sbbl
fucomp
ss
repz
cmpsl
push
int
gs
es
push
imul
insl
adc
inc
pop
xlat
fidivl
jno
mov
adc
inc
mov
adc
xorl
cmp
or
lret
clc
push
roll
pop
test
mov
movsl
lods
mov
push
shrl
popa
aas
fnstsw
xor
jmp
jbe
shr
pusha
and
imul
cltd
xchg
inc
outsb
pushf
lock
xor
add
xor
sub
daa
mov
push
adc
stos
or
pop
mov
xor
xchg
add
mov
or
push
mov
fwait
pop
popf
adc
in
push
mov
lods
push
subl
xor
jne
sbb
pop
inc
sahf
push
cmpsb
jnp
addr16
xchg
popa
jg
cmpsb
cmpb
in
sub
leave
adc
out
nop
pop
lods
add
or
mov
pop
jb
lock
jnp
and
nop
inc
sbb
xchg
fs
jne
lcall
hlt
shl
jecxz
or
jnp
fistpl
in
mov
cmc
mov
jmp
stos
or
add
mov
stc
cwtl
hlt
xchg
popa
mov
push
add
in
push
fstl
test
daa
mov
adc
aad
ljmp
jbe
jmp
mov
sub
push
rcl
arpl
imull
mov
sbb
mov
orb
enter
add
aas
lods
mov
push
enter
jmp
jecxz
mov
sbb
in
fidivrl
push
enter
movsb
and
hlt
jle
fsubrl
sbb
push
cmpsb
fldenv
mov
xchg
fcoml
inc
jle
mov
add
imul
adc
or
nop
ds
enter
mov
or
and
int3
dec
dec
mov
cmp
ljmp
pop
mov
and
adc
shlb
xchg
fidivrs
outsl
push
xchg
mov
je
push
xor
daa
mov
movsb
rcrl
pop
mov
divb
mov
sub
lods
inc
out
stc
data16
imul
push
mov
mov
enter
jb
fwait
mov
pop
out
lcall
or
mov
pusha
test
sub
push
or
mov
jg
mov
sbb
mov
cmp
jge
sbb
add
idivb
test
xchg
push
jl
pop
pop
bound
cwtl
addr16
mov
or
push
adc
inc
mov
shl
aas
inc
rolb
pusha
sub
pop
lahf
into
sbb
stc
ja
jmp
std
or
hlt
dec
mov
iret
ljmp
mov
mov
dec
cmp
sbb
scas
xchg
pop
xchg
mov
sub
cmp
imul
arpl
test
pop
lods
std
loopne
ret
cmp
test
xchg
out
jge
jno
sti
testb
jecxz
sar
xchg
fucomp
mov
repnz
ja
pop
test
fnstsw
stos
adc
adc
xor
mov
js
xchg
int3
jae
pop
jnp
add
adc
dec
in
xchg
lcall
outsb
sahf
ljmp
push
aad
repz
xor
sahf
lock
notb
cmpsl
adc
movsb
pop
sbb
leave
test
cmpsb
add
dec
imul
cmpsl
sbb
or
fwait
jae
stos
jo
or
aam
cltd
mov
xchg
loop,pt
jmp
fldenv
mov
adc
in
adc
insl
add
push
aaa
cmpsb
orl
mov
test
movsb
mov
fwait
dec
jae
std
fildll
in
in
fsts
insl
or
xchg
cmp
movsl
icebp
sbb
push
cmc
cmpsb
test
and
inc
push
and
lret
clc
mov
cwtl
popl
pop
loope
pop
int3
sarb
or
sub
out
sahf
jne
xchg
addr16
dec
cmp
leave
arpl
mov
decb
repnz
push
xor
xchg
add
es
jo
xor
inc
inc
iret
cld
push
cld
adcb
gs
push
dec
mov
add
xchg
push
pop
push
imul
int3
out
cmp
lods
sbb
into
add
xchg
popf
jb
inc
mov
and
and
pop
or
jp
cmpsl
fists
idiv
sbbl
push
mov
mov
dec
cmp
push
push
sbb
and
nop
out
test
mov
cmp
xor
nop
push
jmp
xor
dec
rorl
lret
int3
mov
test
mov
cmc
push
hlt
test
add
jmp
movsb
movsb
adcl
cmp
inc
mov
leave
test
dec
jge
js
and
sub
test
or
movsb
inc
pusha
inc
and
or
mov
rcrb
mul
es
inc
push
mov
and
jns
pop
mov
es
ljmp
dec
in
jbe
fisttpl
repz
fcmovnu
negb
push
pop
cmp
ret
xchg
add
psubsb
repnz
mov
lods
lods
nop
xchg
add
mov
out
add
outsl
movsb
xchg
jl
jp
ss
mov
add
mov
std
testb
sbb
jb
mov
idiv
mov
lock
lea
sbb
cmpsb
dec
fildl
inc
xchg
jo
orb
adc
sub
mov
adc
push
fst
add
lods
ja
aaa
and
sbb
aad
jo
xorl
jg
sub
jb
mov
lods
mov
lods
cmp
std
push
push
orb
aam
iret
adc
popa
leave
and
xchg
jmp
outsl
lret
dec
movsb
or
outsb
jo
popa
jecxz
adc
xor
cs
inc
std
cmp
add
inc
mov
jo
mov
cs
insl
lret
xor
mov
cmpl
sahf
rcrb
out
ljmp
je
mov
inc
push
sbb
cmpsl
subl
inc
imul
sbb
dec
dec
sub
mov
fistpll
sub
jbe
cmpsl
cltd
xchg
inc
fadds
dec
aad
lods
add
inc
stos
cwtl
aaa
cmpsb
ljmp
mov
inc
push
jecxz
and
test
mov
or
pop
jb
xor
mov
inc
and
cli
out
les
push
stc
sbb
xlat
sbb
ds
pusha
inc
and
or
cld
rorl
xchg
inc
leave
or
negl
cmpsl
mov
mov
xorl
fldenv
dec
movsb
inc
xor
jle
adc
inc
push
mov
add
lds
sbb
not
mov
clc
sub
push
mov
icebp
jmp
mov
rolb
mov
ja
mov
loope
lock
push
in
aas
cmp
lret
push
outsb
adc
lret
arpl
xor
outsb
or
fnsave
ja
and
cli
pop
daa
movsl
cmpsl
clc
call
xlat
and
cmp
popa
dec
dec
mov
add
fimull
test
cmp
sahf
and
xchg
fscale
mov
jno
jg
and
push
sbb
jns
cmp
mov
xor
jl
mov
ret
test
push
xchg
sbb
inc
mov
mov
sub
pop
pushf
and
xchg
jecxz
jb
ja
ds
sbb
pop
mov
mov
in
scas
shl
lea
xchg
cmp
jmp
cmp
push
mov
les
faddl
cmp
mov
mov
cmp
adc
cmp
inc
xchg
cmpsl
sub
aas
cmove
rcll
incl
aaa
std
fimull
sub
xchg
lods
enter
mov
jmp
or
sub
cmp
mov
mov
lods
or
in
outsl
addr16
mov
dec
jnp
arpl
ja
or
mov
push
lock
fs
outsb
arpl
or
mov
mov
jae
xlat
adc
pop
pusha
push
mov
mov
and
pop
fadds
hlt
xor
adcb
hlt
mov
fidivrs
add
out
fbld
sbb
gs
or
fidivs
ss
mov
inc
movsb
pop
jmp
mov
sti
or
dec
add
adc
push
mov
sub
arpl
sbb
cmpsb
lret
or
loopne
outsl
xchg
mov
rorb
sti
fldenv
and
ret
fstp
adc
sub
xchg
mov
push
lfs
fnstsw
xor
cmp
cs
sub
test
adc
out
les
dec
inc
add
dec
movsl
outsl
push
and
and
enter
pop
push
jge
inc
and
int
dec
test
dec
cli
cmp
push
push
mov
jne
sub
mov
adc
test
inc
pop
outsb
cltd
mov
arpl
ret
nop
or
xchg
mov
sub
stos
bound
mov
cld
bound
mov
jb
or
testl
hlt
pop
dec
sub
xchg
cmp
sbb
fwait
mov
rolb
pushf
imul
das
inc
and
add
loop
or
mov
or
lcall
je
xor
dec
mov
mov
sahf
and
scas
xor
enter
sbb
fwait
cmc
iret
jle
repnz
dec
lahf
call
addr16
nop
sahf
insb
repz
pop
xor
jnp
lock
mov
push
idivl
cmp
inc
mov
stos
sub
mov
aas
mov
mov
data16
negl
add
lcall
stc
dec
and
mov
gs
adc
je
and
cmp
das
scas
jmp
mov
nop
or
inc
jge
movsb
fwait
sti
inc
or
dec
out
cmp
and
mov
push
in
mov
sub
nop
cmp
adc
je
fsts
push
inc
add
lds
xchg
lcall
sub
mov
fwait
movsl
iret
xorb
rcll
sub
mov
mov
stc
scas
cwtl
ret
xlat
dec
xor
daa
and
xchg
cmp
inc
sbb
lock
and
dec
xor
pop
in
sub
mov
or
lds
sarb
pop
or
cli
xor
dec
scas
or
cwtl
sahf
add
or
pop
iret
shrl
inc
ljmp
xchg
out
lret
mov
rorb
push
enter
mov
aaa
and
sbb
cmp
mov
dec
mov
movsl
xor
and
jns
scas
insb
fs
pop
add
loopne
mov
pop
out
sbb
dec
shll
jns
in
dec
std
cmp
lcall
movsl
pop
sub
aam
out
lret
cltd
dec
cmp
shrb
test
enter
adc
pusha
sub
int3
mov
shrb
js
mov
sbb
add
mov
in
jbe
mov
mov
add
push
fisubs
aad
sbb
and
ljmp
adc
lods
xchg
cmpsl
outsl
sarb
dec
out
add
arpl
cld
repz
std
stos
lahf
scas
jb
lret
inc
leave
repz
pop
ja
hlt
idiv
test
test
mov
loope
xchg
clc
inc
ret
cmp
mov
xor
mov
inc
jae
addr16
mov
cltd
mov
popf
inc
jo
imulb
mov
lahf
les
jne
outsb
adc
push
lcall
xor
sbb
pop
pop
or
das
jb
outsb
sbb
mov
or
rol
inc
std
cmp
aam
aaa
ror
xchg
sbb
fwait
push
sbb
in
pop
pop
sarb
stos
xchg
cmpsb
scas
mov
adc
or
mov
sbb
frstor
push
enter
fistps
enter
imul
iret
jg
jl
inc
mov
add
gs
jl
push
mov
out
dec
inc
or
sub
or
adc
ret
xorb
mov
sbb
cltd
cmp
cmp
orl
fwait
push
bound
xchg
jbe
sub
jle
xor
sti
fs
popf
mov
jns
jae
mov
outsb
dec
pop
jbe
add
mov
mov
lock
lret
sahf
lret
insb
rcrb
add
sbb
push
pop
inc
adc
imul
cmc
dec
insl
aad
cmp
in
jle
add
mov
jne
add
repnz
adc
test
fcmovnbe
inc
movups
mov
sbb
inc
movsl
push
adc
mov
jle
mov
cld
test
jmp
jno
out
push
addb
adc
xor
pusha
xchg
inc
and
push
jbe
movsb
popf
cld
sbb
ljmp
addr16
jg
in
das
sub
lret
inc
mov
fsubrp
xor
movsb
dec
xchg
and
inc
sub
call
pusha
imul
pop
std
or
push
fdivrs
pop
cmpl
cmc
mov
or
out
popa
xchg
movsl
inc
pop
jno
jmp
cmpsl
fbld
mov
cltd
in
loop
test
jge
lds
push
or
and
int3
js
loope
fistpl
les
mov
es
inc
adc
pop
movsl
test
mov
mov
pop
aaa
dec
and
ljmp
or
scas
in
ljmp
pop
mov
leave
mov
ret
lods
fisttpl
adc
mov
rep
dec
sbb
inc
cmp
mov
mov
test
ljmp
pop
mov
xchg
pop
dec
xchg
mov
es
inc
and
fnstenv
movsl
mov
sub
and
pop
push
mov
daa
inc
push
shll
sbb
jnp
adc
push
and
mov
mov
loop
scas
jbe
add
xor
inc
std
cli
adc
out
lea
pop
sbb
sub
add
orb
jp
inc
ffreep
dec
enter
push
fadds
inc
lahf
ds
testb
iret
mov
cmpsb
pop
xchg
in
inc
rcr
mov
stos
mov
cmp
lds
ja
arpl
and
jno
pop
ljmp
or
mov
sbb
ret
shlb
push
aas
mov
push
cmpsl
mov
imull
std
adc
daa
and
sub
fcompl
and
lea
lret
inc
nop
dec
inc
or
ljmp
sub
shll
push
mov
pop
test
sbb
push
dec
sub
imul
cld
pusha
je
addl
jno
xor
cmc
pop
lret
mov
int
adc
mov
cmc
mov
jno
inc
adc
pushf
adc
cwtl
insl
push
je
mov
pop
mov
sarb
and
movsl
gs
jmp
daa
mov
pop
dec
or
out
xor
jge
push
inc
mov
outsl
or
sbb
dec
flds
mov
aad
test
jge
add
das
push
fildll
test
ss
pop
mov
dec
sbb
mov
add
jnp
gs
dec
add
pop
pop
aaa
jbe
add
jne
push
repnz
pop
xor
out
jns
sar
dec
add
lods
lret
ljmp
or
fadds
xor
lods
or
lcall
mov
mov
push
fldt
in
arpl
inc
mov
add
cmpsb
not
sub
rorl
or
cmp
js
sbb
xorb
scas
fucomp
cld
outsb
fcmovnb
ds
lods
xchg
cmpsb
inc
xchg
mov
test
sub
mov
aas
das
push
fistpll
push
jecxz
test
les
movsl
mov
jo
mov
mov
cmp
shll
or
lea
aas
popa
lahf
mov
xchg
add
sbb
loop
aad
cs
sub
lret
xchg
xor
push
xlat
adc
aas
test
dec
sub
jle
jecxz
sub
test
shll
xor
jmp
sti
pop
mov
adc
mov
xor
sahf
mov
les
and
push
pop
sub
ljmp
and
pop
add
aaa
add
push
lret
test
mov
xor
sbb
cmpsb
sub
popa
lea
jb
push
pusha
xchg
and
test
jbe
loopne
stos
fcoml
rcrb
dec
loope
imul
jns
push
xchg
notl
mov
ljmp
cmp
or
sbb
mov
pop
adc
cmc
xor
imul
mov
sub
jl
enter
mov
insl
outsb
sbb
lods
outsl
loope
dec
jne
sbb
dec
push
ljmp
cwtl
icebp
jl
fildl
jae
ffree
fidivs
imul
aad
mov
jne
and
iret
jns
mov
sahf
xchg
scas
insl
ss
mov
push
cmc
test
sahf
stc
jne
mov
pop
rcrl
enter
push
clc
dec
pop
repz
sbb
in
dec
fbld
rcrl
dec
sub
xor
cmc
push
fcmovnbe
and
xchg
pop
push
icebp
movsl
mov
lock
jmp
imul
adc
adc
jbe
loop
add
call
mov
xor
xor
js
lcall
sysenter
iret
dec
bound
and
loop
mov
pushf
iret
imull
les
xor
ficomps
jl
stos
pop
push
out
dec
and
rcll
stos
xchg
jge
enter
adc
aad
mov
pop
data16
lret
fisttps
dec
mov
bound
mov
jle
popa
pop
cli
imull
xchg
arpl
shlb
insl
scas
xor
cmpsl
mov
or
mov
cmp
push
pop
add
movsl
arpl
popa
and
dec
fstl
push
xor
enterw
and
rolb
dec
in
repz
fsub
mov
or
lret
mov
lahf
sbb
cld
sbb
inc
inc
out
and
or
jae
fwait
sbb
push
rcll
add
nop
mov
out
cmp
aaa
aam
std
les
int3
xor
in
xchg
mov
popf
popf
repnz
mull
sub
xchg
xchg
or
xchg
int
inc
and
je
push
push
nop
call
or
inc
in
out
cld
cs
xor
das
and
sbb
gs
in
mov
ffreep
mov
mov
pop
aaa
mov
hlt
popa
push
add
mov
loope
std
lods
repnz
xorl
xor
and
leave
js
out
in
xchg
pop
sub
mov
xor
pushf
ss
pop
in
fstp
faddp
mov
cmp
push
add
cmp
outsb
cmpb
es
cwtl
jg
mov
cmpb
out
mov
adc
movsl
iret
mov
add
jne
jecxz
push
sbb
cld
sub
push
or
jnp
mov
xchg
inc
lea
push
cmc
cld
roll
out
push
jns
sub
out
mov
pop
adc
out
les
lock
lea
sahf
dec
mov
and
clc
rol
lock
xor
cwtl
loop
dec
cld
daa
inc
cmp
out
test
add
out
outsl
aad
lret
mov
mov
jecxz
fwait
or
stos
add
test
add
popa
xorl
nop
push
xchg
ss
xor
loop
stos
and
and
mov
addb
iret
stos
lods
ss
xor
icebp
cwtl
fwait
mov
repnz
sbb
out
pop
xchg
inc
inc
jle
int3
push
pop
xchg
inc
lret
jl
lods
icebp
add
cmpsl
jne
repnz
in
dec
popa
stos
movsl
sub
or
push
lods
xchg
xchg
sahf
iret
mov
push
dec
push
aam
add
mov
cmp
inc
add
lcall
xchg
xor
sbb
bound
xchg
adc
xor
mov
push
lret
je
ss
push
adc
push
fdivp
mov
mov
nop
pop
push
add
pushf
outsl
adc
fcoms
ja
and
fcmovnb
mov
pop
popa
mov
inc
movsl
fists
enter
mov
daa
pop
lock
xorb
mov
andb
cmpsl
xchg
inc
sbb
dec
out
ss
mov
fdivrs
jbe
inc
push
xor
cmp
dec
movsl
lock
lds
outsb
loope
enter
sti
or
dec
lret
sub
inc
mov
ficompl
comiss
call
cmp
xlat
mov
or
nop
xchg
push
mov
xorb
mov
sbb
mov
faddl
sub
pop
sub
sub
out
cs
fmull
call
pop
cmpsl
enter
movsb
push
imul
mov
nop
pushf
or
or
inc
lahf
cltd
dec
and
jne
popf
pusha
jno
ror
dec
xor
xchg
mov
outsb
or
iret
insw
notb
outsb
add
push
mov
cmp
jp
mov
shll
pop
xor
pop
popf
mov
inc
pop
xorb
hlt
adc
ljmp
xchg
cmp
cmpsl
mov
bound
pop
sub
std
stos
mov
scas
loop
add
shl
cmpsl
and
push
ljmp
push
repz
ljmp
aam
ss
fidivl
shlb
pop
sub
vmaskmovdqu
shl
push
sarl
mov
sbb
mov
sbb
iret
popf
inc
mov
push
sbb
and
add
sar
adc
gs
sub
pop
andl
in
dec
adc
imul
insb
xchg
or
mov
push
fldenv
cmp
stc
in
jae
fldcw
jbe
jg
data16
data16
mov
mov
inc
and
xchg
outsb
fsubs
in
adc
es
stos
repz
cwtl
mov
das
xor
mov
nop
repnz
adc
sbb
js
aam
enter
das
pop
in
loop
fnsave
ljmp
pop
fwait
pop
xchg
scas
dec
in
pop
aaa
clc
dec
push
push
movsb
sub
mov
divl
inc
sbb
inc
in
movsl
xor
add
popa
push
pop
hlt
mov
repnz
xorb
lahf
ret
and
mov
xrelease
pop
xor
xor
pop
daa
popl
mov
xchg
jecxz
je
aam
xor
sbb
pop
mov
push
push
pop
sub
adc
xchg
aas
push
cs
fwait
lods
int3
repnz
jg
aam
inc
pop
xor
and
sub
or
fs
push
outsb
adc
dec
inc
push
arpl
movsb
ss
or
add
mov
mov
vmovapd
adc
push
pushf
sub
out
fnstsw
mov
mov
push
xchg
xor
dec
mov
adc
outsb
scas
js
test
inc
inc
inc
xchg
rcrl
jnp
or
and
xchg
mov
decb
sbb
pop
mov
repz
pop
ficompl
xor
out
lds
arpl
mov
xchg
or
and
test
lds
or
push
push
cld
pop
add
cmp
std
xchg
mov
adc
jg
in
js
hlt
and
jmp
cmp
pushf
cs
and
sbb
inc
movsl
xchg
xchg
adc
insl
inc
test
cltd
cmp
jg
out
add
into
out
mov
fcoms
mov
mov
out
and
data16
push
lds
mov
cld
sarb
mov
fmuls
shrl
ja
xchg
sub
jecxz
pop
stos
xchg
das
sub
out
xor
jecxz
mov
test
popfw
popf
ffree
sarb
xchg
cltd
test
pop
subb
stc
movsb
add
loopne
push
test
adc
dec
jmp
insl
cmpxchg
scas
push
adc
pop
scas
cld
sbb
push
sbb
cmpsl
jbe
cli
xchg
rcrl
filds
mov
enter
jp
push
jo
inc
mov
je
addr16
inc
mov
out
mov
inc
xor
ja
jge
lahf
mov
sbb
inc
iret
ds
into
inc
xorl
mov
xchg
sub
push
cmp
jecxz
stos
pop
push
inc
cmp
notl
out
ja
aad
pop
inc
adc
push
jl
rcll
adc
adc
cld
aad
xorb
ds
sbb
pop
stos
push
stos
mov
xchg
test
pop
xchg
out
adc
push
inc
mov
mov
ret
fisttpll
sbbl
jne
stos
clc
fwait
and
out
int
test
xlat
adc
xor
or
mov
mov
int3
sub
add
mov
aam
cmp
sbb
in
pop
lods
js
jno
divl
or
lods
or
in
xlat
mov
mov
xor
inc
pop
and
lock
int3
sbb
and
inc
mov
leave
mov
mov
sub
mov
adc
and
aas
fwait
xchg
sub
ss
adc
jnp
mov
mov
mov
dec
cs
cwtl
xchg
add
mov
mov
call
jbe
add
xlat
or
lock
into
mov
les
pop
push
pop
xlat
ss
sbb
xchg
mov
fdivrl
push
mov
mov
test
out
inc
inc
jb
movsl
or
sarb
adc
or
adc
xchg
adc
push
jle
mov
les
push
sbb
adc
pop
sbb
mov
inc
cld
pop
stc
popa
inc
inc
xor
pop
jno
jmp
fbstp
adc
xchg
or
test
test
imul
xor
dec
cld
icebp
jecxz
jo
ss
int3
push
test
lods
mov
and
into
jmp
cwtl
inc
push
pop
xchg
ljmp
cmpsl
push
mov
aas
mov
ret
rolb
daa
divl
scas
outsb
add
incb
xor
mov
cmpsb
jno
fwait
ljmp
dec
test
shrl
mov
roll
add
mov
jbe
iret
jmp
imul
ljmp
out
adc
xor
sbb
mov
out
je
call
fst
jno
insb
push
in
out
cli
lahf
gs
pop
ds
mov
push
xor
das
sub
cltd
adc
mov
add
shrl
and
push
pushf
imul
mov
fistpl
fcomi
inc
sahf
ds
or
fisubs
loop
cs
push
add
mov
mov
int
mov
outsl
push
or
fwait
xchg
repz
outsb
nop
sarl
xor
pusha
aaa
rep
nop
aaa
inc
adc
std
xchg
repnz
mov
andl
jb
xchg
and
xor
dec
lcall
mov
ss
xor
into
pop
push
xchg
in
icebp
in
lcall
fdivrl
out
div
mov
sahf
mov
dec
nop
jno
pusha
ds
push
mov
push
and
cmc
mov
lahf
push
jl
jl
loop
les
pop
cmp
sar
lcall
hlt
sbb
subb
inc
insl
dec
and
adc
pusha
testb
scas
clc
adc
jmp
aas
sbb
pop
mov
inc
insl
and
xchg
ss
mov
dec
push
jne
jg
cs
inc
in
pop
xchg
mov
popf
cwtl
and
pop
movsb
inc
ds
xchg
and
out
movsl
mov
mov
fistl
shl
fcomps
adc
inc
shrb
xor
insb
sarl
lds
mov
sub
fstpt
in
inc
movntq
out
mov
std
pop
cmp
insb
mov
ja
or
jns
dec
lahf
lret
jno
es
xchg
cmp
mov
test
jae
push
pop
pop
in
mov
sbb
push
int
fldl
mov
adc
icebp
insb
pop
loope
or
in
movsl
rol
mov
xlat
adc
lahf
inc
inc
add
jmp
hlt
pop
mov
leave
mov
mov
or
jbe
mov
je
inc
push
ret
xor
js
mov
push
lds
sti
jecxz
dec
xchg
test
mov
cmp
sub
call
cmp
lock
xor
cmp
mov
out
mov
push
or
in
fmull
aam
roll
lea
mov
sti
ss
jp
lahf
mov
push
cmpl
inc
inc
sti
push
in
and
and
js
cmp
lods
add
rorb
push
ficoms
movsb
adc
lea
xor
lock
aas
pop
push
mov
std
jb
pop
iret
clc
stos
and
frstor
mov
enter
leave
xchg
xchg
insl
pop
ljmp
lock
jo
add
test
dec
stos
and
mov
in
xor
mov
pop
loopne
lahf
push
mov
leave
ds
sub
aam
dec
repnz
rcrl
xchg
mov
lcall
add
adc
lods
push
pop
xor
stos
xor
adc
mov
xchg
jne
xchg
rclb
icebp
test
andb
mov
push
daa
addl
and
imul
stc
mov
cld
adc
mov
mov
mov
popa
cmp
and
pop
leave
shll
jle
mov
call
shll
and
cmc
sbb
adc
inc
leave
gs
stos
jmp
mov
js
pop
out
adc
jecxz
and
xchg
dec
subb
dec
mov
lret
fdivrl
in
adc
test
in
and
jp
push
rclb
mov
arpl
cmp
mov
dec
insl
cmp
mov
jae
in
xchg
fcoml
push
std
sti
add
jle
sbb
nop
imul
lcall
adc
and
in
push
sub
lret
push
js
add
pop
pop
shlb
negb
lods
data16
jbe
lret
popf
in
jno
or
add
cmp
aam
loop
in
dec
adc
enter
mulb
mov
dec
cvttps2pi
sub
aam
into
shr
dec
mov
mull
push
insl
xchg
jo
mov
jnp
loopne
mov
test
lahf
mov
lods
in
dec
add
mov
dec
ljmp
dec
cmpsl
mov
insb
pop
sahf
push
add
daa
icebp
cmpsb
sti
int3
leave
fcmovbe
and
es
xor
adc
add
push
es
sbb
inc
loopne
lods
pushf
lahf
in
jne
mov
mov
movsb
sbb
cmc
sbb
lods
cmp
add
stc
rep
cmpb
mov
or
fsts
mov
mov
xor
sbb
pushf
adc
shrb
fcompl
les
test
bnd
push
adc
sub
jl
sub
push
imul
dec
insb
pop
sti
ds
notb
add
mov
sub
std
mov
mov
ljmp
movsl
xchg
jnp
icebp
out
shll
sarl
fmuls
jl
fwait
and
push
xlat
push
inc
iret
pop
xchg
movsb
cmp
inc
mov
pop
mov
pop
iret
pop
xor
repnz
xchg
out
cmp
ffree
and
les
dec
add
and
sbb
pop
int
pop
xor
xor
aam
rcrb
or
mov
jg
dec
jmp
gs
pop
nop
mov
mov
inc
add
dec
cld
mov
popf
fldl
xchg
pop
or
or
notb
pop
jns
sahf
addr16
fsubrl
push
aas
cmp
addr16
mov
adc
or
lods
repz
or
mov
push
lcall
imul
mov
rep
jge,pt
fdivrl
enter
dec
stos
mov
cmpsb
lahf
sub
test
repnz
dec
pop
nop
adc
in
js
pop
inc
mov
lods
shrl
fistl
insl
enter
dec
or
rorl
loope
lds
pop
sti
pop
jnp
lret
inc
jge
fs
pushf
fbstp
pop
gs
fistl
pop
xor
or
dec
shl
pop
lret
or
les
push
xor
mov
mov
subb
cmp
lods
shrl
mov
repnz
aad
push
test
inc
es
nop
test
iret
aas
add
adc
mov
mov
ret
sbb
in
dec
lds
mov
mov
je
jno
enter
cmpsl
outsb
push
outsb
sub
or
jp
adcb
lods
out
call
add
or
test
inc
je
shl
rorb
lods
add
mov
adc
inc
mov
jno
cld
mov
sbb
imul
jne
push
mov
aam
xchg
aas
push
in
outsb
mov
jp
xor
in
test
fs
lret
pop
je
pop
leave
sbb
test
movb
adcb
xor
mov
inc
push
lods
xor
rclb
js
icebp
scas
loope
add
in
cmpsl
dec
out
stos
pop
push
mov
xchg
jnp
mov
cli
push
mov
sub
fstpl
and
mov
xchg
mov
repz
inc
adc
lea
cmp
leave
and
loopne
push
push
bound
rcl
add
ficomps
pusha
add
into
aas
push
mov
pop
test
add
mov
outsl
inc
popf
or
fsubp
add
or
roll
inc
and
or
inc
push
jp
ss
and
add
xchg
rcrl
jge
cmp
jl
adc
cmpsl
xor
add
mov
mov
sub
lods
lods
je
cmp
jg
test
or
setno
lock
imul
arpl
loopne
iret
repz
dec
xchg
jg
cmpsl
call
rolb
xor
xchg
int3
test
sarl
fwait
xchg
inc
fdivrl
bound
mov
fcomps
dec
xchg
ret
fisttpll
icebp
sti
hlt
daa
add
pop
sarb
lock
popa
out
xchg
mov
stos
inc
jb
pop
in
xor
icebp
sub
data16
cmc
in
int3
push
jg
packuswb
orl
mov
push
mov
add
test
sub
xchg
mov
fs
popf
aad
cld
fistl
loop
push
sub
repnz
cmp
addr16
daa
aaa
arpl
mov
arpl
out
andb
xchg
lods
and
mov
adc
popf
pop
loop
testb
inc
inc
insl
mov
pop
jae
nop
jo
cmp
mov
scas
test
adc
mov
adc
push
add
mov
inc
scas
je
sbb
adc
es
or
shlb
xchg
sub
shlb
cmp
xor
or
jecxz
test
sbb
push
and
jbe
inc
int
adc
into
repnz
sti
pop
sub
aas
pop
or
mov
and
pop
or
repz
inc
and
add
adc
gs
xchg
push
aaa
ror
add
add
daa
jne
push
bound
in
stos
fsubrs
and
and
xchg
jnp
push
jb
ss
in
push
sbb
lahf
jecxz
dec
pop
cli
adc
notl
cmpsb
mov
outsl
mov
cmp
lods
jl
sbb
xchg
aas
jl
ja
sub
mov
sub
mull
aaa
shll
push
sbb
sub
xchg
pushf
lds
shlb
adc
fldenv
not
pop
cwtl
pop
add
push
lahf
lcall
filds
and
aad
sti
scas
jo
pop
aaa
fcom
jae
fucomi
data16
cld
mov
dec
adc
lods
cmp
adcb
jns
mov
test
je
or
pop
sti
xor
mov
repz
inc
loop
push
push
stc
jp
rcr
sub
lea
ret
xor
xor
jae
cmp
cmp
xor
cmp
ret
xor
lcall
fsubs
cmp
nop
inc
and
lods
xlat
inc
lock
pop
push
cltd
jmp
jmp
cmp
mov
test
ficomps
pop
jp
fnstsw
into
jge
js
lods
loop
aad
or
xor
or
xchg
mov
xchg
dec
aaa
dec
jp
test
jno
inc
outsl
sarb
cmp
fmuls
mov
jg
ja
mov
push
mov
fstps
out
cld
arpl
adc
int3
arpl
mov
arpl
inc
movsb
dec
push
lcall
xor
add
inc
sti
mov
loopne
lea
fcom
xor
jnp
sahf
and
add
mov
add
dec
push
sub
or
push
idivl
loopne
ds
lods
std
push
sub
movsl
cwtl
mov
xchg
insl
inc
or
jge
outsb
cmc
jge
stos
xchg
ljmp
les
mov
std
adc
push
aaa
fbld
pop
ret
jp
pushf
pop
enter
decl
pop
sti
pushf
ret
mov
insl
pop
inc
mov
pop
shrb
fsubr
sti
xor
sbb
call
enter
and
add
insl
frstor
push
es
push
test
test
das
jbe
mov
xchg
xor
or
insl
in
xchg
or
dec
out
xchg
jb
mov
pmulhw
pop
iret
cwtl
pop
push
loope
mov
les
adc
add
add
and
pushf
int
add
shlb
push
mov
ljmp
scas
adc
mov
or
push
push
scas
mov
mov
int
lahf
mov
pop
mov
cmp
xlat
mov
mov
jae
or
xor
mov
xchg
mov
pushf
es
mov
mov
xchg
xchg
xchg
mov
mov
inc
cmp
fists
sbb
push
add
jo
sub
cmpl
pop
dec
or
paddusb
xchg
mov
cmp
lcall
xor
jle
sub
rcll
or
rcrb
mov
jle
cli
cmp
push
xchg
add
out
push
mov
xor
mov
xor
das
lods
jp
xor
lahf
sbb
loop
scas
lcall
dec
add
cmp
pushf
jbe
mov
inc
xchg
adcl
scas
aas
mov
lock
add
mov
pop
jne
test
push
and
popa
add
jg
fwait
nop
inc
bound
push
mov
movsl
adc
jbe
sbb
pop
data16
adc
pop
lret
inc
inc
xor
sub
jns
rcll
mov
enter
add
sbb
test
sbb
sarl
mov
adc
lea
push
adc
lds
push
add
xchg
mov
or
es
popa
popf
fists
stos
dec
test
insl
pop
fisttps
dec
adc
dec
push
addr16
add
out
nop
int
pop
dec
fsubrs
movsw
inc
mov
xchg
cltd
xchg
arpl
gs
jp
dec
sysenter
dec
popf
mov
cmp
inc
dec
or
loope
cmc
adc
xor
jnp
add
lcall
cltd
aaa
push
mov
cmp
out
in
in
jae
insb
pop
sub
sbb
xchg
imul
and
dec
xor
dec
jmp
jecxz
and
mov
dec
or
dec
pop
mov
mov
test
in
ficomps
cmpsb
outsl
jae
ds
push
adc
ja
rcll
aas
pop
dec
lods
cmp
call
add
addl
rcr
in
data16
outsb
jp
mov
loope
pop
cs
xchg
push
pusha
loopne
ss
cmpl
adc
mov
jmp
sahf
mov
pushf
aam
push
inc
cmpsl
cmp
xor
ret
xchg
or
data16
inc
fcompl
cmp
je
sahf
and
ficomps
icebp
xchg
xchg
insl
push
pop
ss
nop
out
test
inc
adc
repnz
sbb
mov
push
stos
mov
mov
and
test
repz
xchg
roll
and
repnz
int3
rorb
sub
loopne
fnstcw
inc
ljmp
mov
adc
sbb
cmp
imul
sbb
scas
dec
or
movsl
and
ljmp
or
lods
ret
inc
dec
stos
scas
push
je
cmpsb
xchg
scas
imul
xchg
push
test
mov
and
mov
loope
repnz
fnsave
add
or
test
nop
ss
outsb
adc
ret
add
js
aam
sbbb
xorb
sarb
add
test
push
jl
lret
jge
cmc
jae
or
add
cmpsb
mov
clc
lock
int3
or
js
icebp
add
pop
adc
mov
mov
aam
mov
jb
add
lahf
js
pop
cmp
clc
pop
jmp
push
sub
xor
inc
mov
mov
icebp
pop
ds
add
fcoml
loopne
mov
das
stos
test
ret
roll
add
adc
push
repz
pusha
ret
or
test
movsb
es
xor
les
pop
sub
mov
divb
call
je
lret
jbe
or
sbb
shrb
mov
add
negl
aad
and
push
dec
inc
and
movsl
fs
fwait
ds
cmp
mov
xchg
inc
bound
aaa
inc
imul
cmp
imul
push
fstpt
sbb
or
call
jg
ss
dec
dec
or
push
jnp
into
adc
jne
js
adc
and
or
pop
pop
in
outsl
rcll
imul
lods
add
sbb
insl
cmp
sub
dec
or
add
push
mov
fsubp
not
es
pop
xchg
cmp
pop
dec
loopne
test
scas
xchg
push
pop
ljmp
out
mov
sbb
mov
jecxz
ds
aaa
mov
mov
or
or
adcl
loop
sub
sub
push
cmp
push
fimuls
mov
cli
inc
call
loop
push
testl
cmp
pop
push
es
add
adc
in
into
or
sub
in
mov
fcomps
sbb
imul
push
test
gs
or
mov
push
aas
test
jnp
aas
movsb
fnstenv
cmp
movsl
repnz
out
mov
dec
push
movsl
jo
or
lret
in
int3
inc
mov
mov
test
and
push
mov
mov
mov
mov
push
dec
lods
fldenv
leave
pusha
aad
sub
movsl
scas
mov
cli
cmp
lods
mov
outsb
jecxz
push
popa
jg
imul
jge
popf
cmp
xor
xor
dec
jb
xchg
push
dec
cmp
jne
leave
inc
je
dec
xor
inc
jge
cmp
lcall
xlat
mov
push
ds
sub
les
mov
xchg
cld
std
inc
jns
jns
pusha
in
dec
pop
or
in
jge
dec
mov
xchg
in
push
gs
hlt
xchg
test
lods
jmp
subl
test
jmp
pop
push
mov
ljmp
je
add
addr16
jp
enter
inc
mov
sbb
inc
ficomps
xchg
jmp
sub
outsb
jne
sub
mov
push
push
fprem1
ret
addb
int3
fsubs
adc
cmpsb
pop
pop
mov
daa
icebp
inc
mov
cmp
es
adcb
notb
and
or
into
loope
cli
sbb
fstpt
hlt
test
shrl
lds
dec
jg
out
mov
fistps
mov
xchg
mov
jle
fnsave
xchg
movsl
mov
clc
neg
ficoms
sbb
xor
cwtl
dec
jecxz
lcall
add
loop
mov
mov
cli
and
dec
daa
mov
into
cmp
mov
icebp
mov
fcom
mov
and
repz
test
push
movsb
sarl
add
pop
dec
jnp
loop
xor
aas
xchg
outsb
sarb
repnz
dec
mov
pop
mov
fmulp
xor
mov
jg
shrb
pop
out
arpl
xor
cltd
pop
jbe
sbb
movsl
xor
sbb
jge
inc
loopne
sub
fmull
sbb
repnz
sbb
ss
xchg
jbe
ljmp
cmp
cmpl
std
cmpl
xor
xor
mov
out
adc
aad
cmp
call
sub
sbb
mov
or
pushf
pop
fwait
add
and
lock
pop
jle
sbb
fsubs
xchg
insb
sub
negb
adc
dec
sti
imul
nop
jg
lock
mov
sub
sub
popa
fs
mov
jle
mov
pusha
daa
inc
int
dec
bound
fmuls
rcr
test
mov
lods
das
in
outsb
lods
cmp
dec
cmp
inc
push
jge
xor
or
add
neg
mov
test
xchg
loopne
xor
std
popf
out
test
sub
mov
sbb
xlat
iret
pop
mov
xchg
dec
pop
push
xor
pop
lcall
leave
mov
mov
push
add
sbb
add
or
ret
mov
push
arpl
je
inc
lods
fmull
pop
call
repnz
cmp
cmp
movsl
out
mov
jl
jae
rclb
shrl
fidivrl
mov
mov
imul
leave
xchg
aam
stos
add
int3
je
push
adc
cmp
outsb
ss
test
cmp
jge
sub
mov
mov
add
sbb
dec
iret
push
out
sub
ljmp
out
imul
rolb
push
test
cs
and
sub
outsl
aad
hlt
and
dec
sub
addr16
mov
xor
daa
xchg
ror
test
jno
call
popa
adc
test
or
aad
jp
mov
mov
pop
xor
fcoms
mov
mov
sbb
dec
popa
add
clc
stc
lods
lods
add
fcmovbe
jmp
stc
stc
shr
ds
fstl
filds
frstor
movsb
mov
mov
inc
daa
sub
clc
jno
adc
insb
pop
mov
mov
dec
mov
cmp
xchg
dec
mov
cmp
push
dec
jns
testl
aam
dec
pushf
or
out
fnstsw
hlt
pushf
dec
adc
pop
mov
lret
cld
aam
jae
jnp
jecxz
dec
mov
mov
mov
adc
lret
xchg
dec
mov
out
out
icebp
jno
adc
popa
inc
or
or
or
inc
inc
pop
jmp
mov
and
ret
fmull
sbb
or
mov
xchg
ret
mov
jbe
jl
mov
dec
fwait
out
insl
mov
push
dec
lea
xor
xor
dec
cmp
and
inc
imul
or
mov
mov
sbb
loope
imul
sbb
push
ret
add
mov
cmp
movsl
insl
cmpsl
daa
sbb
mov
pop
mov
loop
mov
loop
test
mov
inc
add
in
jp
xchg
inc
pop
scas
push
aaa
adc
divl
movsl
mov
lahf
pop
movsl
aad
in
pop
add
lods
cmp
inc
inc
testb
push
dec
enter
stc
push
adc
popa
jmp
cmp
out
mov
icebp
dec
add
or
fistl
dec
hlt
int
or
in
jge
and
cwtl
dec
outsb
testl
mov
sbb
push
dec
pop
test
and
jg
dec
lea
jmp
cmp
xchg
xchg
lods
push
out
push
xor
jns
jbe
bnd
pop
jns
pusha
mov
out
in
pop
ljmp
jns
or
andl
mov
clc
je
incb
fsubr
adcb
mov
push
shl
jae
push
fimull
mov
cli
sarb
push
inc
repz
mov
jmp
add
push
push
js
add
xchg
pop
daa
pop
enter
aam
mov
cmpsb
scas
in
sub
fisttpll
dec
sub
dec
xor
sub
jg
xchg
stos
jge
ret
or
pop
cmp
add
cwtl
ret
push
movsl
sbb
push
jb
add
push
sbb
icebp
and
mov
test
les
xor
int
cmp
jbe
outsb
mov
mov
xchg
mov
jmp
in
mov
outsb
scas
loope
shlb
or
fneni(8087
inc
insb
in
arpl
jge
mov
mov
adc
pop
xchg
sbb
xor
lea
and
lcall
dec
jecxz
jnp
int3
xchg
push
fiadds
aaa
pop
jle
scas
inc
pusha
cmp
or
mov
in
jg
lcall
cli
xchg
push
jbe
inc
sub
mov
pmulhuw
fs
addr16
loop
es
add
sub
or
roll
pop
pushf
jle
dec
sbb
lods
mov
js
dec
das
and
push
fisttpll
out
bound
roll
in
cmp
jecxz
lcall
mov
scas
sbb
inc
and
mov
inc
pop
loop
pop
sub
in
cltd
jl
clc
add
mov
lock
test
repnz
mov
stos
pop
cmpsl
out
mov
cmp
dec
mov
mov
mov
push
cmp
xor
mov
mov
mov
popf
cmpsb
int
adc
or
mov
lods
test
ja
das
stc
cmp
xchg
push
jecxz
push
test
out
pop
jns
xchg
call
clc
pop
xlat
stc
clc
fdiv
ljmp
mov
adc
add
cld
sub
or
add
jmp
into
test
pop
shll
in
adc
repz
mov
add
aam
scas
inc
dec
adc
mov
xor
stos
inc
sbb
stos
inc
jnp
sarb
dec
mov
lea
mov
xlat
jno
add
mov
loope
sub
push
iret
pop
xor
lcall
sub
cltd
daa
out
aaa
jno
cmp
lret
xor
sub
pop
rcll
mov
divps
test
fiaddl
aad
pop
shrb
repz
xchg
sbb
lock
icebp
enter
orb
arpl
and
nop
dec
and
mov
pop
repz
jbe
inc
jmp
dec
push
jo
les
fiadds
or
push
fs
lret
pop
fstp
aam
test
push
test
jne
mov
fistpl
add
test
adc
out
fiaddl
sbb
inc
loop
fdivrl
and
mov
inc
xchg
cmp
sub
mov
lahf
mov
dec
mov
fwait
popa
lock
mov
ret
sahf
mov
pop
nop
fcmovbe
nop
nop
mov
ret
inc
add
aam
xor
cmp
fcom
adc
mov
int
sub
out
das
add
sbb
mov
jl
xor
rcrl
push
jno
cli
js
and
mov
inc
ljmp
mov
ret
dec
mov
push
jp
ja
xor
mov
jbe
xchg
mov
movsb
xchg
pop
icebp
pop
push
int
lahf
cmp
xchg
test
fildl
xor
es
in
je
outsb
mov
inc
push
push
iret
jmp
lods
lods
jns
aaa
inc
call
lret
stos
test
xchg
or
lods
sbb
fs
or
xorl
dec
lock
mov
stos
orl
outsl
adc
jecxz
push
add
and
leave
cmp
sbb
loope
iret
mov
fcomip
fdivr
fisttpl
xor
out
ljmp
out
cwtl
int
rcll
out
ds
in
jecxz
cli
pusha
xchg
into
mov
and
data16
out
ja
or
outsb
mov
mov
lret
mov
inc
cmp
daa
mov
lods
fcoml
pushf
in
push
psubw
popa
mov
cmp
stos
add
outsl
shrl
pop
inc
scas
cmpsb
sub
arpl
ret
mov
repnz
cmp
pop
mov
adc
incl
xchg
sbb
adcl
or
push
leave
add
mov
leave
fstpt
in
inc
sti
sub
adc
pusha
pop
mov
arpl
pop
push
cmp
adcb
pop
dec
int3
fldenv
pop
scas
in
jmp
and
sub
iret
push
movsb
into
roll
lock
mov
push
add
js
cmpsl
outsl
xchg
mov
loope
inc
int
in
into
cltd
mov
push
cmpsb
adc
mov
lods
loop
mov
adc
lods
push
movsl
pop
in
and
adc
inc
gs
push
cmp
pop
gs
xchg
jbe
bound
leave
xor
adc
fadds
ljmp
add
and
fpatan
or
ds
aad
cmp
popa
add
pop
ja
push
dec
mov
inc
jbe
rcrb
pop
rclb
and
xchg
pop
call
sbb
sarb
int3
or
fidivrl
psubb
outsb
cmp
fs
dec
push
js
cmpsl
leave
negb
jns
movsb
sub
push
pop
je
push
aam
xlat
dec
cmp
pop
adc
lcall
or
jo
loop
inc
std
or
push
mov
dec
xor
push
outsb
mov
ror
cs
xor
jp
mov
inc
hlt
pushf
aaa
stc
cmp
jecxz
xor
in
aaa
mov
test
test
out
out
repnz
jnp
cmpsl
cs
and
or
cmp
popf
shrb
gs
pop
pop
mov
lret
ja
xor
dec
push
sbb
pop
jl
dec
in
popf
mov
cmp
repnz
xchg
jge
es
fsubl
out
and
popa
int
popa
cmc
mov
les
mov
loope
push
in
movsl
jbe
mov
testl
cld
mov
loopne
outsl
hlt
mov
scas
xchg
ret
test
rorl
movsl
pop
sbb
add
mov
pop
pop
jne
out
popa
pop
outsb
xor
inc
and
movsl
test
loopne
or
sub
or
bound
xchg
ss
mov
push
stos
out
or
or
call
jo
pushf
jno
pop
loop
push
rolb
es
mov
addr16
adc
mov
cltd
scas
sbbl
cmp
mov
and
mov
ja
xlat
test
fildll
dec
jmp
rclb
jp
push
hlt
pop
xchg
sbb
xchg
sbb
mov
movups
cmp
notb
xchg
out
movsl
test
loop
or
daa
inc
dec
sub
sbb
in
pop
je
es
adc
sub
mov
andl
ljmp
push
mov
inc
cs
insl
xchg
sub
iret
cld
popf
jmp
dec
fstl
test
add
iret
roll
iret
mov
or
jg
jae
fisubl
aad
insl
fbstp
mov
cld
aas
negl
aad
sub
xlat
sub
stc
push
imul
mov
call
xchg
sbb
dec
mov
cli
cmp
in
jge
pushf
subb
inc
hlt
ljmp
sub
xchg
dec
daa
xor
fwait
dec
xchg
add
inc
int3
add
aam
mov
dec
cltd
idivb
test
pop
test
ds
ret
scas
or
jno
sbb
inc
push
stos
jp
push
divb
jmp
adc
cmp
ret
xor
insb
sbb
scas
inc
lcall
pushl
cmp
inc
jle
cs
std
jae
enter
movsl
faddl
dec
push
stc
push
out
cmpsl
add
or
sub
xor
sub
sarl
dec
mov
pop
pop
cmp
lret
pop
jbe
daa
jnp
in
into
mov
fldenv
dec
push
pop
es
xor
mov
mov
pushf
fimuls
add
aaa
inc
pop
iret
jg
inc
aad
les
push
cmp
pop
xchg
movsl
and
in
fs
dec
repz
sbb
mov
adc
ja
cli
inc
xchg
addr16
fnsave
cmpsl
movsl
call
xchg
js
cmp
jne
mov
xchg
cmp
mov
fimuls
notl
out
adc
cwtl
pop
jae
adcl
inc
fdiv
sbb
jl
jo
pop
cmp
nop
jp
mov
mov
xor
mov
and
repnz
push
mov
int
fisubrs
daa
enter
aas
push
or
inc
das
pusha
rcrb
inc
mov
cmp
pusha
pop
xchg
out
pop
xor
dec
fwait
jno
out
and
in
scas
ret
sub
jmp
xchg
push
jae
mov
lods
out
pop
pop
mov
lock
cmpsb
pop
pop
stos
inc
dec
ficompl
jae
addr16
aas
sub
xor
fdivl
incl
or
jbe
or
shll
enter
sub
xor
inc
add
loop
or
adc
gs
dec
pop
or
push
pop
arpl
insl
xlat
sbb
dec
das
xchg
repnz
mov
sahf
sub
pop
daa
icebp
cltd
cmp
cmp
insl
in
fsubs
dec
xchg
inc
add
imul
js
jecxz
in
pop
adc
imul
inc
lcall
aad
repnz
fldenv
repnz
into
add
cs
and
repnz
sub
movsl
dec
lock
sbb
dec
bound
and
push
adc
shrb
fstpt
mov
push
cmp
js
pop
pop
andl
in
sbb
and
xor
div
dec
lea
je
sub
push
cmc
insl
jns
mov
lcall
mov
sbb
cmp
addl
fcmovb
sbbl
inc
aam
clc
pushf
dec
jl
mov
test
push
addb
push
adc
popa
push
test
mov
test
jg
hlt
mov
dec
mov
icebp
or
lcall
aam
cli
int
popa
cltd
push
mov
lods
dec
sbb
jle
lods
jns
xchg
cmp
sub
dec
mov
or
jl
xchg
and
into
dec
dec
lods
movsb
jecxz
divl
cmp
adc
adc
push
stos
jmp
fs
out
jne
es
mov
mov
push
imul
pop
mov
add
or
imul
xor
shrl
xlat
call
cmpb
dec
sti
jnp
into
or
pop
adcl
rorl
xchg
xor
mov
stos
movsl
adc
jge
loope
sub
xor
mov
inc
stc
inc
xchg
jg
fs
xor
mov
shrb
rolb
or
jne
push
cmp
xor
aas
mov
fldl
jne
pop
add
jo
mov
mov
fwait
xchg
js
dec
fs
dec
pop
movsb
js
adc
leave
insl
push
ss
dec
mov
sbb
roll
adc
xlat
adc
inc
or
cmp
pop
ret
jp
addr16
aam
and
imul
lret
xor
xchg
aam
adc
dec
cmc
inc
mov
inc
and
xchg
mov
std
push
inc
cwtl
cmp
pusha
push
sub
mov
stos
pop
inc
add
aam
push
cmovo
mov
mov
xchg
inc
repz
mov
popa
mov
ret
hlt
push
mov
push
or
pop
movsl
insb
dec
dec
mov
icebp
pop
popa
mov
adc
pop
inc
test
mov
xchg
push
push
xchg
xor
adc
mul
jge
adc
xchg
mov
mov
jo
push
bound
jl
cmovae
lret
pop
sbb
popa
xchg
jmp
mov
je
testl
add
sbb
enter
pushf
aaa
fnstcw
sbb
lcall
lock
mov
push
xchg
xchg
jl
outsb
test
enter
ret
dec
push
inc
jecxz
loop
xchg
push
adc
jg,pn
or
or
and
add
or
cmpsb
sub
mov
dec
adc
jg
rorl
sub
int
iret
jp
jns
popf
xor
addr16
push
xlat
insb
inc
push
push
fcmove
sub
in
bound
cmp
xor
cmp
fmuls
loop
dec
push
and
int
dec
add
fwait
out
dec
mov
gs
inc
jbe
sub
cmp
sub
push
iret
push
cmp
pop
out
xor
or
fs
push
testl
jge
inc
sub
pop
rolb
sub
mov
enter
mov
or
cmp
int
inc
adc
and
inc
xor
add
test
out
pop
inc
aad
shlb
mov
lret
mov
std
pop
aas
sub
aaa
in
fstpl
sub
mov
and
cmp
lock
divl
mov
mov
in
push
stos
lret
xchg
fldcw
aaa
sbb
sti
bound
sub
pop
and
in
adc
shl
pusha
dec
adc
pop
xor
mov
rcr
pop
stc
mov
or
add
stos
sbb
jbe
test
jle
fistpl
mov
cli
mov
out
cld
shr
fucom
aam
pop
mov
sarl
lds
lods
vpaddd
das
xor
cmpsb
lds
jmp
out
or
mov
movsb
imul
ret
fisttpll
adc
lods
dec
mov
jmp
fisttps
sub
gs
dec
loop
out
roll
push
xor
outsb
inc
xchg
mull
add
fcoms
sbb
cmp
out
pop
pop
popf
fsubl
test
mov
mov
jbe
in
fst
mov
push
insb
sbb
pop
pop
int
hlt
in
out
jecxz
repnz
push
lock
scas
pop
dec
mov
sbbl
in
mov
nop
jecxz
pushf
mov
sbb
je
mov
inc
or
ds
and
sti
sti
cmp
daa
loop
mov
js
in
push
sub
add
xor
cwtl
sbb
xchg
and
xchg
add
sub
dec
mov
clc
fwait
jp
jl
push
xchg
xchg
fstps
push
out
lret
mov
jae
dec
sbb
arpl
cwtl
mov
outsb
and
shl
mov
out
xchg
je
gs
mov
stc
xchg
in
push
aas
dec
sub
divb
loop
ja
test
movsl
jo
fistpl
cmp
enter
or
jp
mov
ror
cmpsl
arpl
xor
pop
arpl
lret
dec
stos
jmp
mov
fdivrl
andb
pop
inc
push
jo
fsts
cmp
flds
mov
sbb
adc
dec
aas
cmp
and
lea
sub
mov
push
daa
inc
jl
gs
mov
addr16
pop
repnz
cmpsb
jo
mov
iret
or
mov
jae
nop
imull
rcr
iret
lock
xchg
mov
jmp
mov
mov
subl
and
movsb
iret
enter
sbb
mov
std
cmpsb
and
test
xchg
sahf
aam
cli
lret
cmp
or
aas
adc
sbb
repz
mov
sbb
test
inc
inc
mov
mov
iret
mov
int3
mov
daa
and
mov
cmp
add
fnsave
pop
jo
js
clc
fnstcw
ljmp
sbb
ss
inc
pushf
sub
or
xor
and
or
popa
mov
mov
movsb
jmp
inc
mov
sub
pop
push
inc
stos
push
cld
xchg
aas
aad
pop
pop
lea
cmp
push
in
add
cli
push
and
or
cmpsb
addr16
rcrb
pop
xchg
cmpsl
xchg
mov
and
adc
nop
jecxz
bound
sbb
push
push
cmpsb
repnz
popa
ljmp
jecxz
stc
mov
xor
mov
mov
shll
in
push
and
imul
fcmovb
mov
sub
lock
leave
icebp
cwtl
insl
inc
je
imul
pop
outsl
ds
scas
lea
xchg
jnp
mov
lock
mov
loop
xchg
in
or
gs
pop
popl
inc
iret
stos
lahf
jbe
lods
inc
cmpsl
addl
dec
cmp
fisubrl
gs
dec
jp
mov
xchg
mov
call
clc
imul
mov
cltd
fimull
inc
loopne
mov
bound
cld
stos
dec
cmpsl
out
fisubrs
data16
iret
pop
inc
jl
mov
test
cmp
push
adc
mov
andl
and
in
jo
mov
push
jg
inc
out
xchg
fisubs
xor
xlat
mov
repz
clc
mov
imull
jnp
js
ud1
mov
pop
jecxz
jl
ljmp
in
test
dec
adc
cmpsl
mov
dec
xor
pop
pop
ret
shl
pop
aas
add
mov
inc
fsubs
push
and
ret
sbb
mov
xor
mov
pop
lcall
out
mov
hlt
fldl
jg
sbb
std
test
mov
hlt
cmpsb
jnp
mov
jl
std
les
cmpsl
scas
push
fists
add
adc
sbb
inc
cmc
add
clc
lret
int
roll
cmp
loop
aad
mov
inc
outsl
shl
adc
jno
rol
push
clc
ret
daa
leave
into
adcl
mov
pop
mov
mov
inc
out
js
sbb
pop
or
call
loope
jecxz
cmp
aad
cmpsl
dec
notl
lock
dec
imul
inc
mov
add
into
test
testl
iret
aaa
inc
ret
mov
xor
ss
jecxz
fisttpll
test
xor
lods
xchg
movsb
lods
add
add
sub
bound
inc
fsts
jmp
cmpl
adc
push
mov
cmp
mov
icebp
inc
outsb
dec
xor
and
xor
mov
inc
sub
xchg
lods
fcmovnb
into
xor
test
pop
loope
mov
push
cmpsb
cs
adc
insb
push
xlat
sahf
testb
xchg
cmovns
lret
jle
adc
dec
jo
or
decl
mov
lock
xchg
ss
adc
inc
jecxz
adc
movsl
out
js
sti
xor
fstl
daa
jecxz
inc
hlt
jbe
call
repnz
push
add
jl
imul
mov
adc
add
fistpll
movsl
int3
movsb
xchg
rclb
repnz
add
jb
xor
mov
xchg
sbb
fnclex
push
xorl
inc
push
faddl
push
jbe
mov
sbb
lods
addr16
rol
popf
cmpl
push
cmp
loop
cli
xchg
stos
fwait
mov
or
loop
jnp
dec
popf
xchg
dec
mov
push
loop
xchg
mov
ljmp
push
and
pusha
xchg
dec
clc
push
cmpsb
push
pop
inc
or
addl
pop
dec
pop
test
pop
repnz
andb
cmpsl
push
and
mov
fldl
dec
mov
lea
inc
shlb
in
xlat
inc
or
xchg
lret
ret
fcoml
movsl
bound
xchg
lcall
xchg
lock
mov
adc
dec
mov
xor
lds
pop
push
out
ds
scas
inc
and
pop
pop
adc
push
mov
sub
pop
jbe
int3
lock
dec
enter
dec
cmp
popf
test
loopne
jl
jns
inc
inc
call
lret
mov
inc
lcall
pop
out
inc
leave
das
jae
push
lret
lahf
sbb
out
inc
dec
into
lods
cmp
sub
ljmp
mov
jb
mov
mov
aam
mov
sbb
lods
cmpsb
pop
inc
jnp
mov
imul
or
fsubs
mov
popf
dec
hlt
xlat
pushf
cmp
jge
scas
cmp
add
call
stc
dec
lret
cwtd
add
mov
cmpsl
mov
pop
scas
aaa
gs
add
add
dec
sbb
outsl
mov
es
or
insl
jbe
adc
je
jae
jns
mov
daa
pop
xor
pop
add
xor
jbe
xor
mov
pop
sub
mov
fcmovne
inc
push
sarb
imul
sub
or
pop
push
outsb
cltd
arpl
sbb
lds
and
add
cmp
ss
mov
inc
hlt
negl
sbb
data16
std
xorl
or
add
fstl
xchg
or
mov
mov
pushf
mov
xchg
pop
push
cld
sub
add
sub
lods
mov
test
xor
movsb
jecxz
gs
in
pop
adc
inc
mov
seta
clc
fs
into
dec
adc
mov
or
xchg
mov
js
leave
cmp
stos
and
test
addr16
pop
lods
pop
pop
test
xor
outsb
push
fistl
push
js
and
lahf
ss
movsb
sbb
mov
cmpsl
push
and
cmp
pavgb
sub
sub
add
adc
mov
mov
or
adc
push
jle
xor
pop
jle
push
inc
loopne
or
sub
cmp
dec
scas
mov
dec
or
sub
pushf
mov
notb
adcl
adc
cmp
mov
mov
lcall
andl
sbb
mov
aaa
or
pop
pusha
fs
lea
pop
jmp
and
aas
jecxz
sbb
add
aas
pop
lahf
fildl
mov
loopne
subl
faddl
dec
lea
mov
adc
adc
addb
arpl
inc
pop
test
andb
and
nop
xchg
jo
jnp
xor
inc
ja
mov
addr16
dec
out
xchg
gs
lock
imul
mov
cmc
xchg
inc
ja
xchg
addl
rorb
mov
and
or
aad
dec
bound
adcl
inc
mov
jb
pop
ss
jge
int
repnz
pop
outsl
add
push
or
pop
fdiv
test
adc
cmpsb
or
cmc
cmp
fisubl
cwtl
daa
out
xchg
and
out
pop
push
adc
dec
out
test
pop
xchg
add
fsubrl
mov
and
push
dec
mov
js
pusha
push
jp
cld
xchg
stc
rcr
add
loope
mov
mov
cmpsb
fwait
inc
out
sahf
arpl
jecxz
mov
adc
hlt
mov
cwtl
das
jmp
ss
push
lock
pop
fstpl
adc
roll
sbb
sub
mov
aas
in
push
pop
jp
mov
bound
and
xor
fidivs
cld
imulb
push
shrl
adc
dec
popf
mov
in
aaa
pop
stos
pushf
adc
jbe
shlb
andb
xor
iret
mov
sbb
sub
xor
lcall
and
out
adcb
dec
lock
mov
adc
sub
test
fwait
inc
sbb
cltd
popf
mov
xchg
daa
mov
ret
adc
cld
cmp
mov
jecxz
pop
int3
shrl
icebp
addr16
mov
popf
and
lret
je
ljmp
js
sub
je
nop
adc
mov
sub
mov
imul
hlt
mov
in
icebp
xor
jb
inc
shlb
mov
inc
xchg
mov
xor
in
and
jae
xchg
push
out
fs
insb
jno
dec
fstl
call
addr16
jecxz
testl
push
fcom
push
out
xor
fisubl
sub
insl
insl
adcb
cmpsl
pushf
ficomps
cltd
inc
loop
lahf
stos
bound
inc
push
push
ds
lfs
pop
mov
mov
negl
out
xchg
and
loope
xchg
jl
sub
jmp
in
push
pop
xchg
test
sti
jmp
xlat
push
xor
test
sbb
cmc
mov
iret
repz
xor
mov
mov
xchg
sub
dec
mov
pop
pop
push
inc
mov
cmp
out
pusha
or
push
jecxz
cmp
stc
fldenv
jle
add
pop
mov
mov
icebp
popf
xor
jecxz
nop
rol
in
mov
insl
dec
adc
test
pop
add
int
push
test
jo
enter
mov
popf
dec
cli
cmpsl
pop
not
sbb
clc
les
int
out
adc
leave
es
push
jb
or
ja
mov
sub
sbb
push
sub
or
jno
fcoms
jp
mov
jo
cmp
out
nop
dec
std
mov
bound
add
outsl
scas
ficoms
dec
and
add
dec
sub
jns
sbb
arpl
sbb
cmc
xlat
mov
push
sub
pop
js
mov
lock
jae
sbb
shlb
mov
xchg
sbb
in
daa
xor
adc
mov
jns
mov
push
mov
mov
test
pusha
and
mov
imul
cmp
sub
mov
adc
dec
adcl
test
xchg
rolb
cmp
dec
pop
push
push
loope
int3
nop
dec
je
inc
std
loopne
mov
icebp
inc
push
dec
clc
mov
pushf
loop
stc
xchg
xchg
repnz
pop
mov
and
sbb
push
xchg
mov
jmp
mov
je
sbb
push
xor
out
mov
aam
lret
pop
ret
xor
mov
push
xchg
fs
xor
out
call
mov
or
pushf
daa
lock
xchg
inc
and
lret
mov
imull
out
mov
stos
mov
leave
mov
mov
pushf
cmpsl
fdivr
out
aas
sub
jb
lods
jecxz
sbb
push
mov
das
sub
cli
fbld
mov
movsl
int
jmp
or
adc
repnz
lret
enter
stos
and
daa
ret
rcrb
adc
cmc
xchg
push
xchg
sti
sub
or
ror
sbb
dec
les
insl
orb
xor
inc
shl
inc
xlat
mov
dec
xchg
mov
pop
inc
das
xchg
mov
sub
cmpsl
and
dec
push
xor
push
cltd
daa
insb
sahf
xor
adc
adc
push
cmp
xchg
test
xchg
fsubrs
imul
clc
sti
outsl
jne
adc
cmpsb
fstpt
mov
pmaddwd
or
lret
jle
add
jp
mov
jl
xchg
cmc
xchg
shrb
mov
int
pop
es
mov
mov
mov
xor
js
jns
ss
loopne
mov
in
mov
call
jbe
inc
or
mov
jb
aam
aad
popa
push
xor
push
add
into
cld
xchg
repz
lret
xbegin
sub
xorl
and
cmp
sbb
fnsave
mov
into
jo
push
pop
fnstcw
push
repnz
pop
add
fnstenv
sub
lret
jns
pop
add
out
cmpsl
out
arpl
in
frstor
dec
enter
leave
call
sbb
cs
mov
adc
mov
cmp
ret
pop
loope
fsubl
mov
lea
sub
movsl
dec
enter
fbld
leave
xchg
js
testl
xlat
sbb
pushf
mov
adc
shrb
ja
or
es
and
jl
push
jns
add
push
sub
test
repz
scas
sub
icebp
and
movsb
call
push
fiadds
daa
cmp
cmc
mov
flds
push
jb
test
sub
js
or
test
aas
std
mov
cmp
add
adc
dec
dec
sbb
cmp
xchg
sbb
xchg
lret
and
sub
lea
lods
push
adc
out
fdivrs
rcrl
mov
push
add
imul
rcrb
out
out
daa
add
inc
dec
dec
inc
or
pop
lcall
std
cmp
out
mov
sub
add
and
sbb
aas
push
das
es
push
adc
xchg
jle
adc
pop
and
inc
scas
pop
repnz
outsl
pop
enter
dec
cwtl
leave
cwtl
sub
lret
pop
xlat
idivb
stos
fnstcw
sbb
inc
scas
lret
addr16
inc
pop
mov
xor
push
and
mov
inc
mov
mov
stc
mov
mov
sbb
test
jecxz
orl
jle
mov
leave
xchg
jns
popl
cli
adc
das
imul
mov
adc
lcall
adc
sub
data16
cs
mov
jae
imul
mov
out
and
roll
lcall
dec
enter
cmp
xchg
dec
js
leave
popa
ljmp
sub
push
and
fwait
xchg
sbb
pushf
adc
shr
popf
out
imul
sub
fsubrl
cmc
add
pop
rcll
xor
jo
jge
pop
mov
outsb
xor
cli
insb
stc
test
jecxz
imul
mov
aas
test
lock
push
stos
hlt
or
and
mov
sbbl
lods
into
lds
mov
xchg
lods
ds
in
sbb
stos
popf
sbb
dec
cmp
and
gs
cmp
int
dec
lea
add
lcall
sbb
or
out
lret
cmpsl
sbb
scas
pop
push
mov
inc
mov
sub
icebp
call
lods
adc
jmp
sub
test
cld
mov
js
ja
dec
lock
rcr
mov
test
mov
loopne
jmp
insb
mov
sub
push
mov
leave
xchg
outsl
xor
pusha
fsubs
ja
mov
imul
fst
aas
cwtl
sub
test
incl
pushf
and
push
int
xor
cwtl
mov
push
jne
add
std
sahf
jne
roll
in
daa
xor
inc
shll
cwtl
out
sbb
sub
add
adc
inc
mov
aam
mov
push
addr16
mov
outsl
sbb
jns
push
push
lcall
rcrl
lods
mov
jo
and
mov
mov
fimull
lods
mov
pop
lds
mov
outsl
mov
pop
out
or
shlb
push
pop
mov
imul
mov
rorb
iret
sbb
cmpb
in
ret
fiaddl
int
jbe
add
inc
sbb
mov
cmpsl
aad
sub
addl
loopne
and
addr16
shll
adc
loopne
pop
loop
mov
xorl
pop
das
mov
sub
add
pop
stos
mov
jne
sti
sub
xchg
pop
call
pop
jge
adc
roll
inc
pop
mov
adc
bnd
aas
pop
rorl
ljmp
inc
movsl
dec
mov
pop
cld
dec
xchg
mov
movsb
shll
mov
call
mov
adcl
bswap
bound
aad
fidivs
xchg
out
mov
or
insl
in
sub
xchg
popa
sbbb
xchg
loop
stc
sbb
cmp
mull
push
ret
sub
xor
sbb
pop
movsl
xor
mov
mov
ret
into
cmp
mov
cmc
inc
mov
push
fcmovnb
push
aam
loopne
pop
gs
test
icebp
movb
aad
bound
aas
and
xchg
mov
mov
call
pop
jl
stos
popf
les
dec
dec
inc
test
xchg
icebp
inc
pavgb
aad
test
sub
scas
jl
and
cmp
or
sbb
movsl
and
pop
or
dec
nop
mov
dec
push
fwait
insb
xchg
jge
add
sbb
xchg
push
stos
sbb
sub
inc
mov
push
push
add
int
jne
lods
xchg
aam
inc
sub
pop
int
sub
popa
jnp
inc
sub
xchg
pusha
push
jecxz
loopne
push
push
es
bound
xor
push
mov
rcrl
mov
inc
add
mov
sbb
addr16
add
cmp
push
jg
lea
arpl
push
loope
push
add
out
or
push
aad
in
ds
push
and
xor
je
cli
cli
jb
in
jp
dec
in
xor
push
mov
mov
inc
jae
js
popf
pop
inc
je
mov
test
and
decl
and
subb
sarl
cmp
inc
dec
push
add
popf
dec
adc
jmp
ret
outsb
or
aaa
and
xchg
xor
inc
aas
and
pop
inc
daa
lret
and
in
cltd
cli
adc
mov
arpl
incb
sub
aas
int3
inc
leave
adc
popa
lret
sbb
aad
jg
push
ret
int
xor
repnz
and
shlb
mov
jle
pop
in
fildll
sti
pop
jns
adc
call
add
pop
mov
scas
cli
pop
mov
cmp
xchg
sub
rcll
adc
add
cwtl
sbb
push
inc
mov
imul
mov
mov
cmp
ret
mov
mov
addb
mov
inc
and
shl
cmp
call
in
rcrl
mov
dec
je
xor
push
sbb
push
mov
cmp
ljmp
js
sub
jle
xchg
pop
shll
test
roll
pop
push
sar
mov
mov
fwait
dec
fsubrl
scas
push
orb
mov
pop
shl
pop
shr
aas
test
sbb
dec
mov
and
xchg
dec
xchg
inc
mov
jmp
pop
pop
popf
dec
mov
add
xchg
xchg
mov
or
xor
nop
int
ret
out
pop
rcll
fisubl
fisttpl
inc
jg
outsl
mov
jg
movsb
je
mov
and
popf
pop
into
and
ja
add
and
mov
sub
cmc
mov
insl
and
lahf
or
movsb
push
sti
stos
fcoms
cmp
push
ja
push
pop
add
mov
icebp
repnz
mov
lret
push
cmp
ljmp
stos
or
fsubp
in
les
sbb
and
adc
mov
mov
enter
je
xor
cmp
add
pop
dec
or
stc
jo
test
xchg
push
push
inc
aad
outsl
cld
jne
aad
adc
js
dec
nop
xchg
add
fs
adc
mov
sbb
rorl
in
lods
dec
negl
ja
xchg
xchg
sub
lret
ss
shrl
bound
mov
push
sbb
fucomp
call
add
aad
lahf
iret
mov
mov
outsb
inc
ds
mov
push
and
loope
lret
inc
lahf
sbb
cwtl
jae
or
sbbl
idiv
mov
cld
movsb
sbb
call
fdivrl
nop
lcall
dec
daa
jmp
dec
mov
scas
loop
add
shlb
pop
dec
pop
push
and
cwtl
cmpsl
pop
hlt
outsl
lods
cmp
inc
xor
ret
pop
sahf
inc
and
mov
movsl
mov
inc
repnz
mov
xchg
pop
or
fcomps
movsl
dec
inc
sbb
std
add
nop
rcrb
into
or
adcl
mov
cmp
mov
in
loope
pop
cmc
enter
arpl
cltd
pusha
loopne
dec
ss
ret
mov
xadd
mov
clc
movsb
int3
repz
aas
xchg
mov
adc
push
mov
adc
mov
xor
sub
daa
out
lret
nop
das
xor
add
dec
dec
pop
ja
mov
pop
ja
xchg
pushf
hlt
xchg
shll
out
stos
xchg
sub
sub
dec
in
push
loopne
jl
in
mov
xor
outsl
dec
adc
mov
gs
ret
jns
pop
pop
sub
jne
jbe
enter
sub
mov
xor
adc
sbb
out
dec
imul
loope
lea
inc
pop
or
jp
int
xor
mov
out
cmpl
aaa
test
jp
outsb
jno
in
add
test
xchg
mov
pop
daa
mov
cwtl
push
outsb
xchg
mov
or
jge
jns
cld
push
test
sahf
cmp
lea
lcall
hlt
push
push
cmp
push
adc
bnd
sbb
iret
popa
push
jmp
in
mov
arpl
or
xorb
es
cmp
fldenv
and
pop
sbb
jmp
fwait
inc
push
push
sarl
pop
mov
insb
loopne
jno
xchg
push
jb
call
clc
mov
imul
sbb
lret
jp
ljmp
aad
mov
hlt
rorl
xchg
call
shrl
mov
xchg
ja
add
cli
in
popw
lods
enter
xor
fidivrs
insl
mov
pop
mov
jp
xor
xor
dec
ret
imul
mov
push
mov
cmc
das
xchg
jmp
fcmovnb
fimuls
jo
ret
sbb
cmpl
popa
push
cmp
jg
inc
icebp
sbb
clc
rcll
fcmovu
adc
and
les
cmc
fimuls
mov
and
xchg
mov
dec
jge
out
xchg
stos
aas
push
leave
cmp
xchg
adc
sub
push
aas
cltd
push
adc
loopne
sbb
add
les
test
lahf
jle
imul
xchg
call
cmp
and
jne
lcall
lods
jne
int
fistl
sarb
dec
sbb
dec
out
xchg
lret
rorb
movsb
pop
outsl
imul
das
mov
xchg
or
push
jnp
mov
or
cmp
jge
clc
sarl
mov
xchg
lahf
add
pop
jp
movsb
push
std
mov
scas
into
push
jl
imul
push
mov
mov
mov
mov
popa
lret
adc
mov
mov
mov
jbe
mov
daa
push
subb
pusha
lds
adc
jmp
bound
in
lea
add
test
dec
test
and
insl
ljmp
mov
mov
lret
ret
xor
xchg
lds
xor
or
loop
fsubl
sbb
and
cmp
xchg
xor
sbb
sbb
fbstp
repnz
fisttpll
call
mov
sahf
loopne
test
popf
fldenv
in
cmpb
jb
sbb
adc
add
inc
jbe
dec
js
inc
out
ret
inc
int3
mul
fidivrl
cmp
ss
dec
cmpsl
pop
lds
pusha
mov
les
movsb
aad
fs
cmpsl
imul
pop
pop
sahf
xor
and
sbb
outsb
mov
shr
imul
jle
movsb
sub
dec
jnp
xor
mov
jmp
idivb
scas
rep
je
sub
popf
mov
sub
mov
jo
std
sub
push
xor
or
mov
jmp
mov
orl
int
sbb
cs
mov
or
roll
lea
pop
push
dec
jbe
pop
cwtl
pop
rclb
stos
jo,pt
rcl
inc
mov
out
dec
dec
xor
dec
and
cmp
rorl
cmp
sub
jno
xor
or
pop
inc
sets
dec
cmp
adc
pop
test
lods
notl
mov
dec
xor
sbb
xchg
inc
movsb
pop
bound
mov
jo
fsubrs
adc
cmp
popa
jne
dec
or
add
mov
mov
jb
pop
push
arpl
adc
xchg
xadd
jns
dec
std
cmpsb
xchg
xor
pop
push
dec
add
xlat
add
adc
insl
adc
pop
cmp
mov
lcall
jns
lret
sbb
lret
rcrl
in
push
dec
mov
cltd
std
xchg
popl
aas
pop
bnd
add
lret
pop
push
enter
je
mov
sub
sub
cmpsl
jnp
sub
cmp
dec
or
jmp
jb
fcompl
clc
jp
mov
dec
movl
ret
stos
out
cmpsb
rorb
sub
inc
cmp
leave
dec
rcll
jle
mov
lahf
pop
mov
mov
cmp
cmpsl
adc
jmp
stos
mull
or
popf
mov
movsl
inc
pop
push
sarl
mov
dec
push
pop
push
sbb
jb
inc
incb
iret
in
imul
xchg
std
movsl
and
fistpll
bound
sahf
xor
and
jo
jecxz
mov
into
mov
jmp
es
push
mov
in
shll
xchg
sbb
jl
xor
cltd
pop
lahf
pop
sti
jmp
push
ljmp
adc
in
std
mov
insb
add
push
adc
lods
pusha
mov
int
int
test
int
mov
jmp
dec
outsb
push
dec
ja
pop
xchg
push
sub
imul
es
decb
bnd
aad
mov
sbb
adc
jcxz
or
rclb
mov
mov
insb
cltd
sbbb
lods
test
pop
gs
ss
mov
outsl
es
sti
es
pop
fdivrs
jmp
frstor
aam
push
mov
adc
mov
lods
arpl
dec
lret
mov
sub
add
in
mov
push
adcb
cmp
daa
negl
sub
nop
add
aam
cwtl
loopne
sahf
mov
ror
pop
fwait
cmc
fcmovne
nop
pushf
inc
xchg
push
sbb
aas
test
xor
test
dec
nop
nop
aas
ds
fsubrs
and
aam
cmp
imul
cmp
cmp
pop
stc
jge
push
das
test
test
lods
fistpl
out
and
dec
cmp
movsb
test
jb
xchg
lock
jge
or
mov
cmp
add
lea
cmp
adc
jns
sub
lcall
scas
inc
ficoms
mull
fbstp
sti
jno
jle
insl
push
cmp
adc
or
or
fists
lea
dec
mov
outsb
sub
iret
out
dec
inc
pop
inc
xlat
outsb
loopne
dec
cwtl
popa
fs
and
push
add
add
xlat
sub
je
dec
sub
mov
pop
and
cli
dec
fwait
mov
push
jp
xchg
lds
jne
jbe
xor
inc
pop
push
mov
mov
inc
je
cwtl
cmpsl
imul
cmp
xor
rcrb
data16
mov
sub
iret
sti
sbbb
fs
ret
pop
cmp
xchg
idiv
stos
aam
sbb
les
mov
inc
add
sbb
mov
jl
mov
xor
sahf
mov
sub
pushf
sbb
test
and
pop
and
les
adc
outsl
inc
cmp
jg
loope
addr16
fmull
clc
jl
sbb
add
jp
sbb
mov
jb
fistps
sbb
ljmp
push
sbb
xchg
pushf
fwait
lods
cld
xchg
xor
in
insl
scas
xchg
jl
pop
aaa
pop
int3
xchg
add
inc
je
jp
cld
scas
xor
jp
sub
adc
cmp
xlat
jae
nop
fsubs
push
js
movsb
bnd
stos
adc
loop
sub
jo
push
add
lds
call
clc
loopne
pop
xchg
dec
add
dec
sub
loopne
inc
pop
mov
mov
fsubr
filds
inc
push
and
pop
mov
leave
pop
je
aam
fwait
and
iret
scas
and
popa
jmp
adc
mov
div
sti
jno
mov
xlat
shlb
inc
xchg
inc
mov
in
xlat
mov
iret
popa
xchg
or
push
cmc
loopne
shll
jl
sub
mov
pop
or
push
ljmp
ja
into
and
xor
lods
push
repnz
xor
push
js
mov
and
sahf
xlat
pusha
clc
jp
in
pop
jbe
adc
mov
mov
mov
sub
jmp
enter
push
mov
xchg
push
xor
icebp
repz
cmp
xor
dec
inc
les
lock
xorb
and
and
dec
movsl
push
jmp
ret
mov
insb
or
adc
clc
jns
dec
aam
pop
sbbb
cs
xlat
les
cmp
mov
in
jmp
shld
insl
faddl
dec
jmp
rcll
xchg
cmp
inc
cmp
cmp
cmpsb
outsb
das
out
fdivr
or
imul
mov
adc
ret
push
dec
push
scas
jnp
call
and
mov
fcoml
adc
and
jmp
sbb
push
mov
shrb
adc
cs
adc
jmp
xchg
scas
pop
jb
adc
or
jo
jle
orb
adc
cmc
pop
cmp
push
out
fisttps
movsl
add
std
jle
mov
ja
and
dec
cmp
jns
inc
mov
pusha
xchg
push
mov
jle
ret
jecxz
cmc
outsb
insb
sarl
ljmp
cmp
test
ss
jae
add
xor
mov
mov
subb
imul
push
jae
push
cmp
mov
insl
test
imul
add
add
aas
pop
and
mov
mov
or
loop
and
sub
xchg
jg
icebp
mov
push
loope
jo
jns
cld
inc
call
into
not
or
pushf
lods
xlat
imul
and
mov
or
test
add
mov
sub
mov
das
push
pusha
lcall
stos
mov
out
test
icebp
inc
inc
inc
into
inc
fidivrl
ljmp
loopne
lcall
mov
out
fistpl
mov
mov
das
pop
xor
pushf
and
shll
data16
fwait
imul
xor
jmp
dec
push
lret
inc
scas
stos
push
repnz
ret
les
add
and
xchg
pop
mulb
shl
cmpsl
mov
stos
mov
xor
mov
loop
call
add
jnp
sub
lcall
inc
cwtl
cmp
test
test
jo
push
ret
xor
push
dec
fisttps
test
push
insl
jge
out
lods
push
adc
jp
pusha
popf
rcr
pop
xchg
mov
popa
jbe
sarb
jmp
sahf
inc
or
mov
jmp
mov
in
sbb
cltd
pop
int3
out
mov
jg
inc
sahf
out
mov
mov
insb
jmp
lret
aam
and
ret
ja
sar
cmp
lret
jo
fsubrs
mov
pop
lret
dec
mov
in
pop
and
pop
dec
lea
addb
mov
and
and
arpl
push
cmpsl
inc
aam
shl
fidivrs
add
pop
cmpsl
or
lahf
add
push
cmpsl
push
or
add
push
and
aam
clc
call
aad
dec
decl
aaa
xchg
sbb
pop
add
testb
and
jge
adc
or
pop
lcall
jl
mov
das
mov
dec
inc
mov
stc
sbb
inc
lahf
push
cli
sti
xor
cmpsl
popa
inc
ret
mov
push
inc
inc
xchg
test
jecxz
in
xchg
push
aas
cmp
pop
pop
xlat
push
and
lret
insb
je
das
push
outsb
sbb
cmp
push
xor
mov
loope
ror
push
jmp
sahf
cmp
fcmovu
inc
inc
lods
stos
pop
xor
inc
jo
cltd
sbb
cltd
pop
in
adcb
adc
and
int3
xor
insb
pop
mov
leave
mov
int3
pushf
cmp
scas
push
mov
nop
fwait
and
and
mov
movsb
insl
rcr
pop
or
lret
xor
je
add
sub
lret
mov
mov
lods
lock
sbb
sti
popa
aam
imul
sarb
add
cltd
imull
int
xchg
mov
mov
inc
jae
fdivp
pop
lea
insl
mov
inc
xlat
je
cmpsl
jo
and
std
gs
cwtl
pop
or
enter
push
jnp
push
roll
out
xor
stc
push
arpl
fmuls
pop
rcrb
mov
jmp
out
loopne
lret
mov
sti
jle
inc
xor
gs
pop
lret
jnp
jo
pushf
jg
jmp
pop
mov
sti
mov
inc
pop
repnz
xchg
pop
dec
test
movsb
pop
lods
push
add
cwtl
push
xchg
xlat
lret
mov
lea
mov
ds
std
mov
data16
mov
mov
lock
daa
push
sub
js
imul
mov
or
cs
push
lods
jbe
dec
mov
insb
push
loopne
test
ret
dec
sub
bound
xchg
and
scas
mov
test
sub
or
popf
sahf
xor
xor
inc
push
adc
xor
pop
mov
sbb
jecxz
dec
jge
bound
sbb
mov
mov
je
mov
into
out
fbstp
add
ret
add
sub
sub
fsubl
cli
xchg
xor
inc
lret
mov
mov
ror
scas
insl
cltd
fmuls
push
and
movsl
jmp
aad
xorps
inc
shrb
add
dec
jo
xor
or
divl
js
pop
jp
mov
les
sbb
mov
inc
dec
pop
xor
into
sub
mov
add
pop
scas
jg
jnp
loop
hlt
arpl
movsl
push
test
sbb
stos
imul
dec
and
test
sahf
xchg
rcr
scas
out
test
lret
cmc
sbb
inc
inc
mov
pusha
mull
cmp
insl
notb
push
add
fnstcw
ja
repz
mov
aaa
icebp
loopne
xchg
cmpsl
xorb
push
mov
sub
sbb
mov
out
lahf
lea
js
pushf
adc
xor
jg
mov
push
inc
pop
in
pop
sbb
ss
mov
jb
push
sub
mov
dec
and
lock
loope
imul
iret
mov
out
not
dec
dec
adc
in
das
in
into
or
cmp
push
test
fdivl
in
into
push
push
xchg
mov
jle
pushf
andl
enter
aas
mov
fs
inc
cs
bound
cld
xchg
adc
mov
xchg
daa
sub
insl
inc
sub
xchg
jl
lods
push
push
das
mov
test
push
inc
or
ljmp
xlat
jb
mov
and
pop
sub
in
nop
rep
stos
scas
orl
xchg
in
subb
test
ja
in
jmp
sbb
xchg
or
xchg
jo
push
mov
adc
cmp
arpl
add
sbb
pop
cld
add
popf
adc
adc
xor
paddw
xlat
fiaddl
mov
fmull
add
push
xlat
insb
fcompl
or
stc
xchg
push
add
jbe
cwtl
mov
test
mov
clc
cmp
or
jnp
imul
mov
xchg
ds
jno
add
aaa
rclb
inc
xor
xor
xchg
test
push
dec
aam
cmovnp
push
dec
rcl
sbb
fsubl
and
nop
adc
addl
cld
mov
pop
push
pop
pop
or
roll
dec
mov
popl
repz
xor
lret
in
xchg
cs
fnstcw
movsb
pop
mov
lods
lods
xor
xchg
fiadds
hlt
ja
push
sub
cli
inc
xor
xor
fisttps
js
out
paddb
cmp
loop
add
dec
jp
out
leave
adc
mov
cmp
imul
frstor
add
cmp
xchg
adc
inc
mov
sarb
in
xchg
les
mov
movsl
gs
cmpsl
cmp
movsb
push
clc
jg
jmp
in
mov
cmp
mov
gs
and
add
jno
loopne
popf
dec
adc
lahf
ret
mov
popa
mov
xor
mov
pop
shll
jae
mov
xchg
jmp
fdivl
incl
in
sub
lock
in
push
mov
and
push
mov
adc
push
rorl
pop
in
fildll
fwait
mov
push
xor
mov
lock
fimuls
add
bsr
dec
jo
lods
inc
test
add
sbb
xorl
bswap
jge
jnp
lcall
xor
movsb
jns
pusha
jae
inc
out
push
bound
jmp
aad
jmp
pop
push
ss
test
add
xor
lahf
xor
out
sbb
push
fidivl
arpl
pop
into
jno
lahf
popl
out
adc
adc
push
sarb
mov
fcomps
sub
out
in
imul
not
shrb
cmp
adc
xor
shll
inc
xchg
fwait
scas
rorb
mov
and
mov
int
fs
cmp
cs
mov
xchg
stc
mov
mov
cmpsl
leave
dec
call
fmul
push
in
pop
sbb
inc
push
dec
cmp
call
sbb
call
xor
cmp
shll
and
add
push
in
xchg
jle
hlt
int
bound
mov
add
lods
loopne
or
mov
mov
js
pop
das
addb
mov
mov
fdivl
ret
aad
imul
test
adc
push
aas
mov
or
test
test
out
push
mov
mov
add
clc
into
pop
repz
incb
dec
xchg
push
movsb
pop
icebp
mov
adc
mov
les
mov
pop
xchg
mov
imul
cmp
fistpll
test
adc
pop
xchg
sbb
xchg
mov
enter
jnp
mov
das
test
aas
scas
lahf
xor
jge
inc
pop
push
cs
jle
push
lret
repnz
aad
adc
cs
stos
shlb
jnp
stos
push
push
lds
mov
push
dec
push
dec
mov
sub
scas
sbb
loope
sbb
sti
test
jl
stos
outsb
xchg
sbb
scas
jbe
jae
sub
add
mov
stos
leave
mov
cwtl
test
cwtl
test
insb
daa
daa
cmp
and
jbe
out
ret
fsubrs
mov
addr16
xlat
sbbb
in
sbb
xchg
vpsrld
nop
jp
nop
arpl
cvtpi2ps
in
pop
xor
cmp
into
cmc
inc
repnz
insl
lcall
jp
pushf
ss
push
pop
test
std
out
fsubrs
es
xor
pop
fnsave
mov
pop
xchg
cmp
flds
xchg
sub
in
lcall
mov
cmp
mov
adc
daa
sub
mov
je
cmpsb
cltd
divb
js
aas
or
in
cmpsl
sub
pushf
shl
xor
and
and
fwait
push
inc
ret
jns,pt
lds
movsb
mov
mov
mov
sub
outsb
xchg
lret
mov
dec
test
push
out
mov
rorl
fs
cmpsl
dec
inc
cmp
fwait
mov
sbb
xlat
mov
xor
stos
aad
stos
out
xchg
push
mov
xchg
dec
cs
jecxz
xor
cs
hlt
adc
movl
jb
add
cmp
xchg
jmp
in
jns
js
pop
push
ss
mov
in
jo
mov
mov
imul
sbb
push
mov
sti
ret
in
addr16
push
std
shlb
leave
pop
jb
xchg
pop
pop
add
ss
xchg
loope
popa
push
sub
sub
ret
jo
and
or
pop
push
mov
push
mov
sub
xor
jnp
sti
addr16
cmc
js
dec
data16
mov
test
xchg
movsb
mov
xor
sbb
mov
xor
mov
sub
push
je
aas
mov
shl
movsb
dec
mov
jnp
fiadds
mov
shlb
loop
aaa
dec
adc
inc
or
insl
lahf
imul
fnsave
add
xchg
enter
xchg
cli
mov
xor
xchg
inc
pop
jae
outsb
xor
hlt
jge
pop
jnp
out
call
lcall
pop
pop
adc
loopne
push
jns
sbb
adc
xchg
es
pop
add
movsl
mov
outsl
jl
cmp
ja
adc
insl
out
mov
cmp
xor
imul
pop
sub
lods
data16
sub
leave
dec
mov
les
adc
xor
and
call
push
mov
lds
inc
call
xchg
or
pusha
mov
adc
jb
lret
dec
js
sub
call
rcl
cmp
mov
xor
xor
push
or
les
inc
das
fwait
xchg
fdivrl
adc
add
int
gs
test
aaa
dec
fisttps
jmp
rol
adc
test
jle
dec
pusha
cmp
std
das
rolb
aad
ljmp
xor
xor
add
cmc
cld
dec
mov
sbb
or
div
test
pop
pop
mov
mov
lock
push
vshufps
outsl
je
std
jne
fistl
mov
dec
or
testl
aas
mov
mov
lods
insb
dec
out
enter
adc
stos
clc
test
sub
jae
xchg
arpl
testb
push
jp
ret
xor
cli
sahf
push
rclb
ja
ficoms
sbb
shrb
sub
jecxz
jmp
jg
push
out
mov
xchg
xlat
mov
mov
and
sub
pushl
insb
ficoms
popa
adc
sub
ret
dec
lds
pop
popf
aaa
outsb
ffree
sarb
iret
dec
jmp
push
mov
insl
mov
fwait
pop
into
dec
push
push
es
iret
push
imul
arpl
push
dec
add
orb
xchg
pop
xor
cmp
add
cmc
mov
or
imul
dec
push
int3
aad
inc
fs
pop
fwait
inc
rcpps
rcrl
ja
mov
inc
imull
and
xchg
cmp
or
fcomps
shll
loopne
push
cmp
mov
dec
fadds
aas
dec
push
jecxz
addl
cli
daa
dec
lock
push
insl
pop
mov
inc
pop
jo
pop
fnstsw
mov
scas
inc
aas
xor
repnz
adcb
xchg
lret
xlat
pop
jnp
add
mov
xor
lock
stos
ror
mov
in
loopne
dec
es
jno
and
xor
cmp
data16
outsb
bound
cmp
ds
add
icebp
subl
and
ja
inc
icebp
cmp
push
xchg
fld
ret
fistl
test
or
cltd
test
or
sar
sub
push
jg
and
test
movsl
rcll
imul
adc
test
es
sahf
lret
push
iret
jmp
mov
stos
cmp
xorb
xchg
les
inc
sbbl
pop
out
sbb
scas
add
add
fdivrl
cli
sbb
out
and
xchg
pop
iret
push
pop
fs
loopne
mov
outsl
cmpsb
rorl
fldt
fisttps
call
add
xorl
lds
bnd
push
insb
test
test
arpl
or
push
in
lods
adc
jb
pusha
lret
inc
xchg
mov
dec
loop
sarl
pop
dec
jb
and
in
xchg
mov
pusha
aaa
pop
mov
sbb
outsb
pop
xor
sub
cmp
into
add
shr
lods
les
pop
lock
jns
mov
mov
aas
push
adc
js
mov
in
jb
dec
mov
gs
fldt
inc
cwtl
and
jmp
sub
cmpsb
mov
les
push
cld
mov
leave
lods
and
sti
nop
or
fmulp
jmp
sub
imul
in
sbb
ds
jg
rorl
xor
sbb
dec
shll
fcomps
js
sbb
sbb
cmp
jb
pop
add
test
test
fsubr
pop
frstor
dec
jmp
xchg
insl
or
dec
or
mov
or
loop
testb
jb
lret
cwtl
or
sbb
mov
lcall
dec
rcll
out
cmp
pop
jae
stos
xor
and
outsl
add
xor
orl
mov
cmpsl
addr16
rorb
sub
add
int3
out
xchg
xchg
in
lret
pop
scas
cmpsb
sbb
mov
dec
sbb
push
ja
decb
sub
pusha
mov
lcall
andl
xor
mov
in
stc
ja
ret
das
std
inc
inc
shll
xlat
lret
mov
aad
xor
pop
sub
inc
and
adc
jne
leave
mov
adc
fs
inc
lret
mov
lock
fwait
pop
je
cltd
or
pop
push
push
sbb
pop
pop
inc
mov
in
or
mov
mov
loop
stos
sbbl
jmp
inc
push
orl
sahf
mov
adc
stos
in
adc
inc
call
xor
dec
ret
cmp
mov
aam
adc
daa
repnz
cld
incl
cmp
pusha
cmp
or
scas
push
clc
sti
or
add
adc
mov
in
int3
and
pop
fildll
fcomps
fldt
dec
push
bound
pop
add
rorb
iret
shr
aam
leave
shll
inc
inc
data16
mov
or
adc
out
in
inc
hlt
bnd
dec
mov
hlt
imul
mov
les
adc
fistpl
lods
and
bound
scas
inc
push
adc
lods
xchg
jmp
mulb
sbb
push
mov
adc
lock
adc
pop
adc
mov
popa
enter
inc
dec
pop
dec
lret
push
or
jne
int
mov
adc
inc
lahf
add
mov
jb
cltd
in
add
cmp
sbb
add
fldcw
dec
pop
insl
mov
loop
and
je
ljmp
jns
nop
ret
std
rclb
pop
sub
or
popa
stc
fprem1
adc
flds
sub
ror
das
pop
cli
rorl
fistpl
cmc
movsb
jo
pop
frstor
or
push
cmp
iret
inc
mov
add
nop
gs
aad
xchg
nop
jg
adc
pop
ss
sbb
lcall
fcoml
xlat
pop
iret
sub
in
cmc
data16
aad
int
iret
mov
addr16
cli
pop
lea
outsb
leave
adc
fiadds
imul
lock
incl
shlb
mov
jmp
dec
loop
rcrb
dec
mov
dec
fisttpl
lods
repnz
mov
xchg
mov
fstps
repz
or
and
rclb
ljmp
outsl
out
ret
mov
xlat
xchg
in
in
or
and
or
movsb
mov
ds
lret
imul
mov
lock
xchg
dec
out
imul
mov
jge
mov
insb
mov
lret
dec
cli
test
movsl
int3
cld
jecxz
ja
int
test
lret
jne
lds
jno
pop
inc
push
sahf
dec
stos
loopne
or
pop
ret
mov
scas
and
sub
sbb
sti
mov
stos
cmp
mov
inc
jns
dec
shll
or
dec
or
and
and
out
cmpsb
push
fcmovnu
pop
dec
and
jnp
cltd
mov
dec
into
sahf
or
or
pop
add
lcall
sbb
sysexit
jb
in
jns
bound
cmp
sbb
ret
ss
mov
lret
adc
fldenv
in
int
inc
jecxz
jo
xor
cpuid
pop
adc
pop
jns
push
cmpsb
ljmp
xchg
xor
and
ds
cli
pop
gs
xchg
inc
dec
les
pusha
int3
inc
inc
add
and
daa
enter
imul
push
hlt
xchg
outsb
inc
test
leave
pushf
mov
imul
insb
push
cs
test
sub
mov
or
dec
aaa
adc
mov
iretw
mov
in
aaa
cmp
pop
pop
sub
lahf
scas
and
movsb
sbb
repz
push
mov
xor
in
outsb
sbb
adc
popl
outsl
out
sbb
jnp
sarb
lock
inc
cmc
mov
inc
add
xor
dec
test
jbe
das
or
pop
or
outsl
jmp
int3
ja
or
mov
flds
stc
mov
or
and
and
dec
xchg
add
clc
adc
xor
out
mov
push
stos
xchg
lahf
dec
test
stos
mov
fisttpll
adc
cwtl
fimuls
adc
mov
jle
jnp
repz
or
nop
add
stos
push
xchg
rcrb
inc
mov
insl
stc
in
in
push
jge
cmp
rcl
and
nop
and
push
mov
fidivrs
adc
sub
jb
fiaddl
jns
sub
dec
scas
sub
push
cmp
dec
push
sahf
xor
push
jecxz
and
xor
sbbl
inc
push
gs
fidivl
fbld
andb
sub
or
jecxz
insl
add
xchg
cmc
and
pop
andl
mov
outsl
adc
andb
jb
out
add
shrb
sbb
fwait
test
cld
rcr
rorl
push
pop
add
dec
test
cmp
pusha
cli
and
pushf
push
inc
mov
shrb
push
scas
fcomi
push
dec
push
mov
hlt
jne
jge
xchg
add
andb
enter
and
or
adc
xlat
add
mov
pop
adc
cld
mulb
xor
mov
push
add
out
push
and
out
in
jae
fucom
lods
sub
icebp
cmpsl
cmp
imul
lcall
push
nop
hlt
es
sub
dec
sub
fistpl
out
xchg
scas
les
bndldx
mov
mov
xadd
fildl
mov
bound
adc
cmc
movhps
shrb
imul
mov
sbb
shlb
cwtl
nop
xchg
mov
fwait
push
fchs
mov
dec
rclb
pop
xchg
jecxz
adcl
dec
fdivrs
dec
test
sbb
mov
mov
mov
xor
pop
xchg
sbb
mov
incl
lods
stos
insb
decb
cld
sbb
dec
xchg
inc
push
or
mov
or
shrb
sub
mov
ret
cmp
fdivrs
pop
popa
mov
lret
mov
sbb
fnstcw
push
or
aaa
lods
push
ret
loope
bound
or
mov
cmc
jge
imul
mov
xor
push
push
inc
push
mov
mov
adc
inc
or
scas
inc
or
sbb
loop
push
test
push
mov
jp
push
das
pop
dec
mov
mov
jg
lcall
xchg
fists
dec
inc
add
push
stc
pop
push
insb
sbb
jb
dec
bound
jae
aad
mov
inc
sbb
pop
repnz
imul
push
xchg
mov
ror
dec
test
rolb
lret
cmpsb
mov
cmp
jge
icebp
sarl
idivb
int3
or
dec
xorb
test
push
jge
dec
shl
movsl
mov
inc
loop
push
fwait
xor
inc
dec
mov
insl
adc
rolb
jecxz
cmpb
imul
nop
sbb
xchg
inc
das
jecxz
rol
inc
imul
aaa
inc
cmp
adcl
jp
push
jmp
add
dec
int3
mov
adc
mov
cmp
mov
popa
sbb
decl
push
aam
rorl
mov
jno
pop
cwtl
sub
out
out
sub
cltd
xor
push
cmp
mov
xor
mov
aas
cmp
dec
cmp
aas
sbb
mov
inc
xor
jle
push
stos
mov
add
sub
inc
outsl
sbb
dec
subb
scas
fcomps
cs
ss
shll
call
cmp
ss
test
lods
test
jge
mov
cwtl
ja
sbb
mul
gs
add
or
into
xor
and
enter
push
lcall
push
cmp
addb
jl
insl
add
outsl
mov
fnstenv
push
gs
mov
xchg
fbstp
lds
jbe
adcb
imul
iret
lret
sbb
jno
or
xchg
cmp
pop
imul
push
stos
ds
mov
mov
add
or
xor
in
fadd
cwtl
jmp
or
idivb
xchg
cld
mov
les
mov
sub
mov
push
pop
push
jmp
cmp
fcmovnu
insl
pop
xor
sub
je
aaa
and
mov
bswap
mov
adc
pop
push
adc
jnp
out
movd
push
lea
int
mov
scas
fnstsw
lcall
add
jl
and
push
jl
inc
fstl
jge
mov
jg
cmc
dec
inc
notb
dec
jg
fiaddl
sub
and
lahf
push
xchg
or
xchg
and
movsb
sti
mov
cmc
lds
sbbb
es
add
shrl
jg
cmc
or
testl
push
dec
dec
sbb
in
orb
lock
and
sub
mov
addr16
and
inc
pop
sbb
sub
mov
xchg
xor
outsb
mov
roll
cmp
imul
mov
dec
nop
int3
jecxz
or
scas
xchg
sub
ljmp
lret
loopne
jl
test
shll
out
scas
cli
dec
sarl
enter
cmp
xor
test
mov
add
enter
je
sbb
sbb
push
push
xor
or
sahf
mov
xor
cmp
test
mov
or
sti
les
das
xor
jle
fcmovbe
or
or
inc
inc
mov
dec
and
nop
jo
jg
jmp
dec
out
and
sbb
sub
push
inc
rcr
pop
stc
adc
scas
push
fcomps
in
mov
xchg
fadds
fisubl
sarl
cs
mov
lods
push
scas
inc
push
or
inc
jne
push
cmpsb
bnd
inc
clc
xchg
out
popa
lods
cmp
jg
sub
out
js
cmp
rorb
xchg
stc
xchg
cmp
imul
push
mov
leave
dec
mov
repz
xor
sbb
test
jmp
das
cld
inc
insl
mov
jl
dec
cmc
jl
mov
and
jp
pop
ljmp
leave
xor
sub
push
dec
xor
xchg
test
sbb
lds
mov
push
pop
add
lods
mov
xchg
popf
fimull
mov
sar
and
and
lods
sbb
or
inc
xor
push
inc
and
bound
movsb
pusha
sub
jmp
mov
in
and
add
loop
cmp
call
jle
sub
and
cmp
es
jne
and
jno
dec
scas
imul
stos
push
in
cmpsb
sahf
add
pushf
in
mov
daa
leave
test
push
mov
and
add
arpl
scas
pop
lret
sub
cld
cmp
cmp
mov
sbb
xchg
xchg
mov
sbb
rcpps
repnz
add
mov
out
and
jmp
movd
std
into
or
shlb
nop
push
lret
mov
cli
mov
js
jb
out
cmp
mov
or
inc
push
pop
push
insb
sub
lods
movsb
imul
push
in
movsb
add
cmp
gs
sub
lock
out
fwait
cld
scas
sbb
xor
stos
adc
dec
loop
mov
sub
inc
leave
cmp
lods
sbb
xor
stc
leave
sbb
pop
std
cmp
dec
movsb
jp
dec
repz
outsl
stos
out
fbstp
dec
stos
jp
out
pusha
cmp
sahf
shlb
lcall
push
pop
rorb
divb
lds
cld
jo
pop
insl
jle
cmc
test
jb
push
cmp
add
das
adc
push
mov
cmpsl
into
es
mov
lret
lahf
insl
xchg
outsb
cmp
add
outsl
jnp
call
pusha
sub
cwtl
stos
mov
pop
imulb
idiv
ss
sbb
lds
iret
xor
dec
sub
jno
mov
cmp
mov
adc
test
xlat
cld
push
iret
jecxz
scas
xor
mov
inc
scas
jbe
mov
xor
loopne
insl
xor
or
in
rclb
inc
push
sub
mov
cmpsb
xorl
dec
ja
sub
lods
repz
out
add
daa
jns
gs
adcb
jae
addr16
das
mov
inc
mov
ja
stos
shrb
jo
add
pushf
stos
add
mov
jle
outsl
inc
cmp
push
cwtl
cmp
adc
rolb
jo
fdivl
sbb
jge
mov
push
sub
insl
arpl
push
pop
jg
sbb
loop
dec
add
sbb
nop
pushf
fstps
or
or
sbb
mov
sub
aas
icebp
jns
ds
xor
dec
mov
cmpsb
movsb
mov
cmp
and
clc
and
push
cltd
inc
hlt
push
imul
fld
stos
xor
pop
mov
inc
andl
mov
fstl
push
xchg
fs
xor
in
cld
mov
mulb
mov
add
fs
cmc
bound
adcl
and
outsl
mov
xor
out
jbe
xor
jmp
das
push
dec
push
out
pop
cltd
jle
scas
pushf
pop
add
or
pop
jmp
popf
or
test
add
xor
mov
push
mov
mov
out
mov
or
pop
pop
pop
push
imul
inc
sarl
lcall
das
movsb
push
test
pop
dec
lahf
ljmp
call
sbb
cs
pop
out
pop
push
add
mov
pop
sbb
adcl
lock
mov
mov
sub
xor
loopne
and
jg
inc
out
xchg
out
xchg
push
mov
imulb
push
repnz
add
pop
pop
mov
filds
and
cmp
inc
repz
test
aas
fsubl
aam
mov
jg
icebp
aad
add
rcl
and
lods
mov
push
jb
mov
adc
ja
cli
lahf
int
mov
cmp
negl
and
push
lods
xchg
cli
mov
mov
jo
sub
mov
lret
adc
xorb
popl
cmpsl
fcmovbe
movsl
fdivrl
jns
movsb
mov
push
lods
push
js
and
daa
jbe
lods
pop
insb
dec
xorb
gs
mov
lcall
sub
les
test
fists
dec
addr16
sbb
cmp
loopne
xchg
pop
imul
test
cmp
repz
inc
pop
jecxz
dec
mov
fistpl
and
decb
aam
sti
or
pop
insl
shlb
movsl
mov
iret
mov
xchg
in
xchg
mov
lods
mov
aad
xor
js
fdivs
test
push
adc
xor
mov
aaa
mov
push
pop
xor
jo
sub
ja
mov
mov
sbb
jns
repz
frstor
test
xor
cmpb
inc
xor
andb
dec
popf
sbb
insl
jecxz
jnp
and
movsl
and
shll
xchg
mov
cwtl
dec
scas
jb
repz
pusha
xor
rcrl
sub
std
lods
add
lahf
mov
iret
adc
lods
cmp
stc
mov
xrelease
mov
je
les
jp
inc
add
imul
pop
sti
arpl
subb
jae
fsubs
cmp
movsl
lea
pushf
das
jns
push
mov
lea
cmc
pop
inc
mov
pusha
out
push
ljmp
cmp
mov
clc
cmc
or
mov
adc
fdivl
adc
call
adc
dec
xchg
leave
mov
inc
negl
inc
fmuls
orl
call
aam
inc
into
or
mov
mov
sbb
xchg
lock
les
inc
shll
add
dec
pop
loop
icebp
push
xorb
insl
sarl
dec
out
bound
and
mov
add
xchg
xchg
adc
shrl
test
xchg
ds
sbb
sub
fstpl
lret
repz
in
sub
pop
inc
stos
insb
aad
popf
cwtl
loope
xor
jns
and
mov
pop
mov
ja
fisubrl
xor
lret
mov
in
push
loopne
scas
movsl
out
mov
cmc
cmp
mov
out
inc
push
push
push
sti
fdiv
pop
inc
bound
ljmp
lret
add
leave
shlb
xchg
mov
test
xlat
popf
add
jl
mov
push
je
push
addr16
test
jnp
mulb
push
jnp
mov
and
sbb
adc
and
cli
add
scas
sub
ret
jl
ret
into
lcall
test
cmp
or
std
pop
inc
mov
popa
int
jne
stos
cmp
and
push
rol
sbb
gs
orl
inc
loope
jno
or
xor
int
mov
mov
push
sub
dec
push
out
stc
add
or
xor
cwtl
dec
pop
adc
inc
jl
mov
push
pop
or
and
enter
inc
xchg
lods
shl
pop
jecxz
test
adc
and
cli
rcr
jne
lahf
mov
sahf
mov
fcompl
mulb
inc
fcoml
mov
fbld
sbb
jp
or
mov
xor
pop
cmc
lret
popf
loopne
xchg
pop
aad
pop
cmp
adc
jns
sbb
xchg
xor
in
les
inc
xor
adc
cmp
loop
sbb
xor
in
pop
lcall
mov
or
mov
and
push
and
or
and
push
xchg
add
push
js
or
push
xchg
push
jle
xchg
mov
hlt
jle
xchg
stos
ja
ljmp
mov
and
pushf
shll
enter
cmpsb
out
pop
mov
fnstsw
fimuls
push
and
pop
cld
mov
leave
inc
add
mov
push
cli
aam
enter
cwtl
fsubl
lods
xchg
test
ficompl
lock
or
sbb
lret
negb
imul
imul
les
jno
outsb
xchg
ret
dec
lret
ret
pop
dec
enter
and
cmp
fsts
push
or
inc
sub
sbb
ss
sbb
test
jmp
shr
mov
cmpl
cmp
ficoms
adc
inc
mov
push
dec
stos
rcll
stos
cmpsb
stos
mov
imul
cmpsl
fisubrs
push
mov
and
dec
fbstp
icebp
iret
mov
inc
in
fstpl
and
add
or
add
out
sbb
mov
push
in
lock
in
xchg
mov
cmp
cmp
iret
rclb
push
pop
lcall
jnp
scas
dec
sbb
or
pop
sbb
cmp
aam
cmp
lods
pop
cmp
sub
lret
stos
loope
and
pushf
mov
sub
in
adc
scas
ffree
aam
pop
jae
push
outsl
je
sub
jb
je
loopne
cmp
test
ljmp
sub
sub
shl
adc
hlt
xor
sar
mov
cmp
or
test
fucom
add
pop
add
cmc
in
push
add
inc
pop
out
adc
sbb
push
test
fisttpll
dec
outsb
or
adc
xor
sub
add
test
adc
jge
adc
sahf
push
lret
nop
xor
sub
movsb
cwtl
dec
std
mov
in
pop
push
inc
sub
mov
push
pop
mov
inc
push
inc
hlt
lods
ret
pop
pop
mov
jnp
nop
cmp
inc
adc
outsb
test
and
mov
test
test
out
fists
leave
cs
ja
push
negb
inc
fwait
mov
leave
lret
fnstenv
movzwl
and
push
rclb
ret
sub
push
push
stos
lds
jae
stos
addr16
out
mov
cmpl
inc
dec
or
je
mov
enter
mov
push
xchg
sti
xchg
sub
cli
fimuls
xchg
mul
lods
cli
xchg
movl
adcl
hlt
loop
xchg
cmc
xchg
dec
add
mov
leave
push
test
mov
cmp
and
pop
pop
ret
and
je
outsl
xor
ret
shll
jg
dec
shll
or
iret
out
popa
lahf
cs
xchg
mov
mov
int
push
mov
mov
leave
outsl
sub
or
jno
and
cmp
xchg
push
add
cmc
adc
out
mov
mov
push
shl
mov
repnz
sub
icebp
and
jecxz
cmp
jp
fisubrs
sbb
pop
push
xor
push
cmp
pop
in
in
add
xchg
pop
mov
pop
adc
clc
jae
fmull
cmp
aas
rcr
cmp
xchg
dec
addr16
adc
mov
add
test
sub
int
pop
mov
test
js
mov
fidivl
out
mov
shrl
push
sub
in
sbb
push
dec
cmp
repz
lret
pop
stos
cmp
lret
and
add
add
dec
or
cli
ds
push
stos
cmp
sbb
xor
push
popa
push
imul
mov
cmpsl
shl
jno
lds
lods
or
rcrl
outsb
inc
mov
or
das
push
and
mov
enter
in
sbb
or
cmpsl
xchg
dec
mov
fcompl
arpl
in
push
sub
xorl
imul
mov
insb
shrb
mov
xchg
cmp
andb
fildll
sub
or
jmp
popa
je
test
dec
mov
loopne
dec
mov
mov
cmp
fs
vpsubsw
out
cmpsb
inc
insl
sbb
dec
test
lcall
shl
scas
rcll
roll
xor
xor
cmp
xchg
ret
xor
into
jnp
mov
test
xchg
pop
add
imul
or
ror
jae
push
inc
xchg
sbb
leave
dec
subl
in
int
cmp
imulb
and
mov
dec
fldl
cli
shlb
jb
jbe
xor
les
mov
icebp
push
mov
aas
iret
mov
in
push
lock
mull
xchg
mov
mov
cld
adc
sbb
inc
lea
out
or
or
fistps
sbbl
pop
dec
lcall
sbb
pushf
addb
sub
or
add
out
mov
sub
mov
mov
adc
cmc
lcall
out
pop
shr
xor
and
in
popl
sub
mov
mov
adc
cs
hlt
lods
jb
xchg
push
cltd
rcrb
and
shrl
xchg
cmp
mov
mov
mov
addr16
ror
xchg
jmp
mov
negb
rcr
push
int
inc
int3
jg
sbb
and
fmuls
mov
xchg
rclb
js
adc
movsb
scas
sub
xchg
mov
lahf
ds
add
dec
lahf
xor
insl
jle
adc
and
mov
mov
pop
sub
dec
cmpsb
xchg
mov
dec
adc
jns
or
pop
cld
je
lret
sti
jae
cld
inc
mov
gs
and
stc
ret
scas
xlat
jmp
lock
popf
push
push
mov
jae
sub
lahf
lds
enter
sub
sub
sti
push
sarl
movsl
je
leave
lods
scas
lcall
push
mov
xchg
push
cwtl
cmpsb
in
mov
mov
mov
jne
xchg
add
sub
mov
mov
psllw
test
mov
cmp
clc
and
cmp
sbb
jp
cmp
inc
mov
dec
lret
stos
mov
mov
bound
cltd
jnp
mov
inc
push
das
adc
jnp
aas
adc
fwait
aaa
or
test
arpl
xlat
sbb
xchg
jbe
lea
cmp
outsb
adc
dec
rorb
imul
pushf
repz
stos
insb
jecxz
jg
in
adc
lods
orl
hlt
pop
aam
mov
js
cmp
sbb
mov
cmpsl
in
add
dec
lret
outsb
adc
cmpsl
push
xchg
push
and
dec
lahf
ret
lret
jnp
stos
or
test
mov
call
mov
mov
inc
repz
sub
and
or
cs
mov
lret
jo
mov
dec
into
call
arpl
inc
sub
dec
ficoms
and
mov
fsubrl
sbb
in
int
pop
or
inc
push
mov
iret
cmp
mov
out
sub
out
outsl
in
dec
adc
pop
clc
xchg
faddp
xchg
mov
push
inc
add
cs
add
stos
mov
sbb
fsts
dec
pop
mov
inc
xor
push
push
add
int3
or
xchg
jl
lret
jg
jmp
daa
or
lea
sub
nop
and
jg
daa
xor
loopne
mov
dec
push
pop
mov
je
jle
add
cmp
xchg
push
rclb
cmp
fcoml
mov
mov
in
and
sub
and
mov
stc
mov
shll
inc
mov
movl
mov
icebp
stos
and
test
mov
ss
sub
pcmpeqb
add
jo
js
mov
les
mov
mov
xchg
int3
xchg
ret
dec
xor
movsl
xor
push
popa
jne
mov
push
imul
lock
cmp
pop
sub
enter
mov
adc
fcomi
pusha
dec
inc
or
mov
orb
imul
rorl
push
into
mov
mov
push
mov
es
lock
inc
sbb
ljmp
pop
aaa
ds
rorb
cmpsl
dec
je
repnz
and
or
sub
loopne
das
repnz
imul
pushf
js
mov
xchg
jl
mov
jp
or
cmp
xchg
imul
add
in
add
nop
ret
cmp
out
add
push
jl
popf
pop
jge
dec
popa
lret
insl
sbb
cld
pop
cs
cmp
sbb
inc
in
faddl
jg
push
inc
push
dec
insb
add
push
and
sbb
cmc
or
pop
push
adc
lahf
sub
push
ss
pop
ss
in
arpl
mov
add
hlt
push
lret
out
mov
and
pmuludq
mov
mov
popa
cli
xor
sbb
test
jbe
repnz
push
cltd
xor
jle
push
lds
push
and
loopne
aas
xchg
pop
mov
add
pop
jno
leave
pop
add
cmp
out
bound
lahf
outsb
mov
ja
and
pusha
sbb
pop
orl
in
insb
add
fstpt
out
pop
inc
stc
push
push
arpl
mov
inc
cmp
lret
or
cmpsb
cmp
adc
hlt
mov
xchg
adc
xlat
inc
div
imul
fistl
daa
push
insl
push
jl
int
cmp
fimuls
mov
aaa
int
mov
dec
and
shlb
cld
jmp
cmpsl
mov
jp
vmread
dec
lret
cmp
ret
sub
xlat
shl
xchg
lahf
mov
xchg
je
push
aad
test
sub
push
mov
xchg
sbb
into
dec
scas
sub
xor
movsb
jbe
ffreep
sti
mov
or
sub
and
or
sahf
lods
inc
test
jno
xor
shr
mov
and
enter
je
movsb
mov
push
adc
pop
rol
fcoms
mov
mov
fwait
daa
subl
cmp
xor
insl
ficompl
dec
add
xor
dec
popf
popa
push
std
add
cmp
outsl
xor
push
stos
cwtl
fstps
xor
icebp
stos
insb
outsl
mov
std
inc
shrb
data16
dec
int
out
mov
das
movsb
adc
xor
mov
faddl
aas
aam
cs
test
inc
jg
lret
pop
pop
fstp
loopne
pop
jbe
test
sbb
dec
mov
mov
or
dec
push
push
xlat
jns
test
rcr
jg
into
std
dec
xlat
jecxz
cmpsl
imul
lahf
add
mov
and
stos
les
push
mov
stos
das
iret
mov
subl
cmpsb
lcall
adc
call
popa
sbb
loop
pop
out
icebp
mov
out
mov
sub
sbb
fstpt
xchg
nop
cmc
sub
xchg
dec
sbb
mov
mov
andl
idivb
arpl
add
out
pop
mov
addr16
popf
jo
adc
adc
loopne
in
ds
mov
xor
into
cmp
pop
test
ret
dec
or
repz
sbb
and
ret
adc
js
add
jns
adc
lahf
and
push
hlt
test
test
dec
in
jno
mov
jmp
mov
pop
xchg
cmpsb
and
mov
cmp
xor
cld
mov
dec
push
and
jno
nop
pop
pushf
sbb
stos
jg
in
outsl
push
into
pop
push
pop
sti
and
sub
sbbl
add
add
ror
imul
pop
adc
xlat
jmp
add
mov
test
int3
nop
mov
mov
jmp
das
rcr
push
jmp
nop
or
and
int
call
cmpsb
adc
pop
sbb
fisttpl
jo
mov
inc
movsb
aam
sub
lock
rorl
sarl
sti
sbb
cmpsl
js
xchg
or
sti
mov
sbb
xlat
and
mov
insb
sbb
test
add
push
and
in
or
std
jecxz
pop
inc
dec
mov
cltd
jmp
movsl
ljmp
push
cmpsb
fisubrs
pop
xor
mov
rol
xor
lods
faddp
sub
xor
les
push
xor
xchg
xchg
inc
repz
dec
adc
inc
adc
push
rol
add
out
push
dec
inc
xchg
push
adc
pop
js
test
adcb
movsb
insb
dec
mov
scas
xchg
je
into
push
lahf
adc
cwtl
cmp
xchg
lods
sbb
repnz
in
ficoms
loop
mov
mov
icebp
cwtl
imull
mov
outsl
ret
jne
loopne
fmul
lret
pop
xchg
nop
repz
or
lock
push
inc
loop
mov
xchg
loop
add
mov
gs
pop
js
mov
sbb
fldt
fs
iret
imul
push
push
mov
and
pop
aad
push
outsl
arpl
lods
in
out
push
cmpsb
testb
mov
xlat
and
jmp
inc
test
and
int
mov
lret
mov
rcrl
mov
mov
sub
mov
push
rcrl
mov
inc
test
sbbl
shrb
sahf
inc
inc
push
jae
pop
mov
push
add
mov
lret
lahf
hlt
and
fwait
imul
out
negl
int
out
mov
jl
fwait
dec
mov
jp
repnz
pop
adcb
mov
mov
mov
in
inc
int3
xchg
icebp
push
cwtl
jmp
out
popa
add
jb
xchg
adc
xor
mulb
lods
xchg
cli
ss
push
xor
push
stc
das
add
jp
or
loope
inc
xchg
jns
jg
lret
mov
and
addr16
xchg
mov
stos
clc
imul
sub
adc
clc
sub
rol
popa
pop
lcall
adc
lock
cmpsb
mov
lahf
jecxz
loop
leave
dec
enter
inc
les
sbbb
push
inc
dec
addr16
mov
add
inc
lock
fisttpl
cmpsb
mov
pop
push
xor
fwait
pop
out
adc
mov
test
cmpsl
xor
adc
jae
testl
pushf
imul
xor
push
rcrl
dec
sbb
mul
les
mov
fisubrl
cmp
sbb
divb
dec
jno
sbb
jle
mov
sub
cmp
xchg
daa
push
adc
sub
out
cmpsb
xor
test
stos
les
and
mov
mov
mov
sbb
stc
inc
call
in
xchg
fstpt
pop
imul
lcall
cmp
pusha
inc
dec
dec
testl
aaa
sbb
sub
mov
ja
in
jns
mov
mov
lret
dec
dec
shrb
cmp
mov
dec
into
into
jmp
dec
std
sbbl
xor
mov
pop
push
int
add
jae
in
jmp
push
mov
mov
jno
xchg
dec
loope
popf
adc
and
mov
popf
mov
ds
dec
push
pop
ljmp
push
xor
or
das
and
add
xlat
add
pop
iret
outsb
leave
push
scas
addr16
xorb
mov
out
ret
inc
mov
pop
and
cmp
dec
xlat
xchg
out
dec
inc
or
lock
pop
mov
mov
add
leave
ret
gs
mov
repnz
outsl
sub
dec
or
in
imulb
lock
aas
push
xchg
in
add
add
nop
jo
dec
pop
and
mov
jp
push
outsl
js
daa
cmp
mov
lock
dec
add
idivb
inc
lea
daa
fcomps
shrb
cmpxchg
push
sbb
xchg
cmp
roll
and
lret
sar
inc
hlt
out
mov
and
sahf
xchg
es
movsl
push
pop
sbb
xchg
xchg
mov
cmp
dec
xchg
or
stc
push
and
aas
mov
les
xor
sub
sub
repz
sub
pop
xchg
mov
faddp
imull
testb
sub
pop
fwait
cltd
or
icebp
cmp
jge
aaa
fisubrs
sahf
add
sub
xorb
jbe
jns
sub
sbb
leave
int3
testl
aad
imul
xchg
mov
stos
lret
xor
nop
push
cmp
jne
popa
enter
push
ret
add
imul
stos
sbb
sarb
push
jae
sub
fildll
lds
jecxz
aas
push
xor
imul
lock
ret
sarl
dec
and
leave
xor
dec
imulb
pushf
stos
mov
js
or
push
pushf
or
loopne
inc
gs
sub
cmp
push
repz
mov
outsl
cmpsb
or
lcall
mov
fcompl
cmp
stos
sbb
inc
test
or
in
jno
jl
add
std
notb
movsb
mov
cli
lock
jecxz
addr16
adc
adc
mov
lret
xor
mov
enter
pop
aad
mov
sbb
pop
jl
out
dec
cmp
lahf
mov
mov
xor
mov
hlt
pop
mov
pusha
sbb
fidivrl
ljmp
insl
cs
or
ss
arpl
fwait
scas
adc
sbb
outsb
xor
lea
cmpsb
icebp
mov
lea
mov
test
dec
mov
sbb
sbb
jns
xchg
sarb
jae
push
cmp
je
pop
or
dec
pop
xor
jmp
mov
dec
or
scas
cs
cmp
scas
lock
js
stc
add
cmc
shl
mov
insb
scas
mov
dec
inc
mov
test
or
rolb
xor
sub
inc
and
mov
sub
mov
sub
repnz
outsl
mov
pop
mov
dec
adc
push
cs
mov
dec
jmp
xchg
dec
jl
mov
jg
arpl
out
xor
adc
mov
lcall
rcl
outsb
sub
jns
out
mov
adc
pop
dec
push
lods
or
das
pop
push
cld
add
pushf
cmp
orl
and
call
inc
add
cwtl
std
push
gs
inc
pusha
push
divl
mov
and
sub
in
xchg
pop
sub
test
pop
cld
push
jae
aam
outsb
loop
mov
movsb
dec
enter
inc
pop
or
xchg
pushf
je
rcrl
xlat
mov
call
push
jne
movl
inc
push
fdivrs
inc
sub
mov
sahf
in
dec
daa
fsubs
adc
and
loopne
push
cmpsb
push
push
xlat
push
push
jno
dec
sti
sub
call
xchg
push
push
add
insl
movsb
sbb
mov
mov
jns
out
js
inc
addr16
scas
mov
cli
mov
in
lods
nop
push
shl
fucomi
sub
and
mov
or
push
movsbl
xchg
repz
xor
jbe
cwtl
jecxz
xchg
sub
jne
adc
imul
cwtl
insl
loopne
dec
add
leave
sbb
cmp
iret
add
pop
popf
xor
sahf
or
mov
mov
lret
imul
pop
loope
or
fcomi
mov
push
mov
push
jb
leave
daa
arpl
fidivs
fsubl
and
xor
imul
mov
sahf
add
repnz
xor
mov
xor
push
neg
or
outsl
dec
pop
xor
repz
nop
push
ljmpw
pop
lret
mov
add
mov
xlat
lret
dec
and
push
mov
cmp
ret
rol
jae
icebp
xchg
xchg
arpl
mov
in
outsb
ds
negl
dec
hlt
jl
xchg
cmp
clc
or
mov
sbb
adc
jno
fs
notb
mov
adc
jnp
inc
push
ljmp
xchg
mov
jle
adc
push
sbb
imul
rcrl
sub
inc
test
adc
mov
mov
addr16
rolb
mov
sahf
sbb
xchg
out
xchg
pop
xor
push
cli
loope
mov
inc
daa
enter
pop
adc
pop
sub
or
fsubrp
in
or
into
sbb
adc
cltd
push
xor
repz
nop
mov
fcos
jo
fiadds
repnz
adc
movsb
fstpt
in
popa
loop
in
jmp
decl
pop
ret
mov
outsb
nop
cmp
dec
leave
ljmp
push
jmp
cmp
stos
mov
jl
dec
xor
cmpsl
sbb
pop
aaa
fcoml
cltd
ljmpw
outsl
xchg
mov
sahf
ljmp
adc
push
outsb
adc
aaa
jb
jno
incl
xchg
lds
dec
pop
or
add
dec
in
shl
push
mov
pop
push
out
jbe
xchg
push
scas
sbb
inc
push
mov
jle
call
fnstenv
pop
xor
data16
xchg
adc
jo
xchg
fwait
mov
and
test
inc
gs
add
in
hlt
ss
jnp
jnp
test
dec
lret
shrb
in
cmpsl
addr16
sbb
xchg
xchg
push
adc
dec
xchg
sti
or
sub
aas
adc
xchg
xor
inc
jp
xor
push
pop
jns
rorl
std
ljmp
push
lods
cld
xchg
shlb
xlat
pop
int3
cmp
xor
int
or
ja
pop
ja
pusha
loop
ret
cmp
cmc
mov
and
push
pop
pop
shl
push
sti
and
and
loopne
mov
cmp
pop
shll
xor
dec
lret
sbb
cmp
pop
aas
call
mov
push
movsl
inc
or
dec
ss
mov
lret
jno
mov
adc
push
dec
pop
mov
fcmovu
pushf
dec
in
aam
pop
test
les
bound
or
mov
imull
xchg
and
fs
clc
dec
iret
pop
add
lds
add
mov
mov
aad
je
dec
inc
inc
cmp
mov
inc
loopne
or
pop
pop
or
hlt
daa
jae
mov
mov
xor
loope
std
lcall
adc
outsl
fdivrs
push
jecxz
mov
rclb
outsl
sub
cwtl
testb
out
out
repnz
call
dec
fistpll
in
movl
ljmp
cli
adc
mov
mov
jg
addb
lock
dec
inc
and
lods
movsl
mov
and
leave
or
dec
es
dec
scas
repnz
loopne
xchg
mov
xor
scas
daa
dec
sbb
in
fwait
or
repnz
lock
dec
inc
mov
push
mov
adc
mov
movsb
fs
xchg
lea
enter
call
mov
pmullw
fs
jne
movsl
popa
xor
sarb
xor
jns
insb
push
adc
jne
loop
stos
adc
xor
and
sar
xor
jb
rorl
cli
mov
in
lahf
in
das
lahf
inc
into
mov
repnz
cmc
setle
inc
aad
xlat
xchg
test
test
dec
sub
cmp
xchg
xlat
mov
testb
in
mov
faddl
push
cmc
or
xchg
les
sti
into
jne
or
stc
pop
add
in
push
add
stos
sarl
push
das
push
dec
rcll
fsubl
pusha
cmp
testb
int
imul
add
inc
xor
pop
shrl
and
dec
jo
dec
lcall
cmpsb
scas
cmp
push
inc
mov
xchg
xchg
loope
loope
je
lods
xchg
fs
nop
lea
pop
enter
dec
subl
cmc
mov
lods
push
jp
push
inc
jg
insl
dec
mov
adc
sub
adc
jp
ret
adc
sub
mov
fs
xchg
cmpsl
rcrb
in
push
mov
dec
es
and
cmp
mov
or
fidivl
mov
inc
lods
add
repnz
fimull
and
and
fdivl
popaw
imul
cmp
and
imul
push
cmp
jo
xorl
push
leave
mov
pop
sub
dec
mov
icebp
pop
imul
aad
ret
xorb
xchg
lea
outsl
scas
clc
clc
andb
mov
lea
addb
pop
xor
adc
fcomi
mov
push
pop
shlb
mov
inc
push
cmpsl
sbb
notl
mov
adcl
test
cmp
ficoms
pusha
mov
jge
mov
cmp
or
fiaddl
test
test
and
dec
mov
aam
jo
or
fcoml
fwait
gs
mov
arpl
mov
out
mov
fidivl
dec
sbb
xor
repnz
dec
pop
pop
fnstenv
dec
mov
in
test
jge
push
mov
and
shl
xorb
iret
jns
scas
or
jb
xchg
ret
stos
sub
rol
dec
push
xchg
pop
fisttpl
fimuls
sbb
arpl
addr16
fiadds
cmp
mov
adc
mov
and
dec
cmpsb
dec
cmpsb
roll
mov
test
pop
mov
sbb
pop
jno
push
add
iret
notb
cwtl
inc
scas
int
mov
push
movsl
mov
rcrl
shll
loope
pop
sbb
bound
lahf
enter
push
mov
std
mov
pop
pop
xor
push
xor
inc
lret
push
dec
xor
bound
sub
dec
sub
je
jp
inc
xchg
ficoml
ret
sbb
call
push
sub
jecxz
mov
int
jl
inc
xchg
push
in
mov
mov
ljmp
imul
js
mov
leave
into
pop
cmc
daa
es
sbb
cli
test
xor
in
dec
xchg
bnd
lock
loopne
int
shrb
jno
ffree
sub
test
stos
ss
cld
cltd
je
sub
mov
adc
adc
pop
ret
int3
push
lock
outsb
mov
gs
and
insb
std
xchg
cmpsb
xor
iret
or
push
inc
cmpl
pop
cwtl
inc
out
mov
jl
lock
push
add
mov
mov
add
jno
adc
aad
out
mov
ljmp
shlb
mov
mov
and
jp
incb
sub
fdiv
insl
fsubs
fcmovb
data16
cmp
jnp
xchg
aaa
jmp
mov
out
and
scas
int
xchg
shlb
mov
les
xchg
seta
jns
xor
ds
insb
adc
push
lret
ljmp
out
sub
mov
call
sbb
fdivrs
sbb
mov
fistps
push
push
dec
dec
out
call
push
xor
fdivs
loope
sbb
test
aad
aad
in
mov
dec
mov
jecxz
or
jno
in
sbb
shlb
movsb
loopne
jae
add
inc
mov
adc
jl
add
inc
aaa
stc
push
fiaddl
aaa
fwait
and
adc
dec
dec
push
mov
xor
lcall
lret
js
shl
add
mov
stc
in
out
cmp
adc
xchg
or
pusha
dec
mov
dec
add
movsl
movsl
lea
xchg
fisubs
sub
pop
jg
sbb
jmp
dec
push
scas
fisttpll
push
adc
subb
sub
dec
and
lea
fs
pop
sar
fnop
jbe
jae
mov
hlt
or
pop
mov
lock
mov
in
mov
xchg
in
test
idiv
pop
xchg
je
lcall
cs
das
pop
mov
test
and
mov
loopne
sbb
rorl
mov
push
cwtl
sar
jne
movsb
into
fucomip
inc
xlat
or
inc
pushf
push
inc
sub
add
adc
lcall
imull
data16
xchg
lods
adc
ja
mov
bound
pop
rcll
or
stos
daa
sahf
ja
push
inc
or
outsb
and
rcll
xor
cmp
enter
lret
inc
and
add
adc
lret
dec
cmc
add
inc
xor
jb
insl
xchg
orb
mov
lahf
jp
sbb
mov
add
jecxz
popa
shl
popf
xlat
cmp
daa
push
jno
and
adc
int
icebp
popf
dec
xor
sarl
ja
icebp
lea
cmpsb
and
xor
mov
jle
mov
jno
add
mov
shll
jbe
jmp
jmp
aad
shl
add
lret
add
ret
dec
jg
cmc
jne
and
fistl
pop
ss
jmp
jno
fcoml
push
xchg
and
mov
lock
loope
faddp
mov
fdivp
push
cwtl
add
loope
mul
mov
inc
in
jo
aam
test
in
mov
aad
sub
xor
push
mov
lea
bound
or
stos
push
bound
pop
scas
cmp
mov
mov
cmp
dec
or
lock
popa
xor
push
bound
sub
cmp
loop
dec
jno
sub
jbe
sbb
popa
jge
sahf
subb
dec
out
pop
push
adc
mov
ret
adc
dec
mov
lahf
pop
paddsb
subb
cmp
push
push
sbb
in
mov
jae
add
mov
jbe
mov
fiaddl
pop
inc
add
dec
sub
adc
add
out
mov
mov
and
jns
jns
sbb
cmpsb
mov
aad
push
jg
mov
cmpl
jne
lds
out
movsl
mov
stos
sub
popf
pop
movsl
lods
lret
mov
fcmovnu
add
inc
test
out
xor
mov
dec
mov
dec
xor
add
adcl
or
sub
inc
xchg
xchg
mov
jb
xchg
sti
push
loope
ds
lea
inc
adc
or
in
or
icebp
xor
lret
lea
int3
out
inc
sub
mov
iret
sti
and
mov
adc
sahf
mov
jb
mov
lahf
adc
je
pusha
stos
mov
mov
mov
pop
sub
aaa
out
and
dec
pop
xlat
icebp
bound
push
adc
mov
add
push
xchg
iret
les
sub
xor
or
mov
es
lock
les
test
dec
popf
icebp
sbb
scas
push
ret
push
add
sub
iret
push
insl
cmpsb
loopne
inc
and
xchg
enter
mov
jp
fs
push
gs
dec
adcl
jne
push
call
lret
push
mov
dec
daa
imul
dec
jns
pusha
ja
je
in
int
pop
pop
dec
sbbl
lcall
inc
dec
or
bound
popa
xchg
nop
lcall
inc
inc
iret
pushf
adc
sub
int
adc
fsubs
movsb
sbb
sbb
fcmovnb
repnz
pop
jmp
or
mov
pop
lret
inc
mov
lret
out
or
test
xor
cs
aam
filds
dec
mov
jns
adc
aam
cltd
mov
bound
in
inc
push
inc
cmp
push
rolb
push
sbb
dec
xchg
mov
push
hlt
xor
sub
std
inc
test
sub
outsl
repnz
stc
movsl
dec
push
enter
loope
mov
movl
out
jp
inc
jecxz
push
js
push
lret
lds
outsl
jb
ja
pushf
pop
inc
arpl
inc
mov
iret
or
inc
and
sarl
fistps
int3
sbb
outsb
cmp
mov
inc
pop
mov
popa
xchg
mov
xchg
jbe
or
in
dec
pop
cmpsb
lods
or
std
stos
push
pop
test
stc
and
fildll
jmp
xlat
add
sbb
out
mov
sbb
sbb
ret
mov
sti
add
push
pop
cmp
xor
xor
xchg
dec
pop
jl
aad
rcl
jne
out
push
jge
jae
movsb
loope
incb
xchg
push
mov
jo
into
adc
arpl
sub
add
jns
jno
adc
push
jecxz
loop
xchg
and
jns
cmpsb
pop
gs
xor
dec
enter
das
pusha
mov
push
sahf
adc
rcrb
add
inc
into
scas
mov
xchg
ret
scas
vpaddsw
sbb
sbb
mov
push
adc
or
pop
repnz
jmp
mov
cld
test
or
bound
test
pop
dec
adc
cmp
pushf
cmp
test
daa
fs
xchg
dec
xchg
pop
mov
or
dec
xor
lcall
sbb
jno
pop
xchg
fmulp
inc
enter
stos
test
sub
imul
add
add
jle
xchg
test
and
in
mov
pop
mov
dec
cs
mov
xchg
aaa
lock
jg
dec
and
je
shll
xorl
leave
or
fimull
loope
mov
jge
mov
outsb
inc
mov
mov
xor
mov
lcall
jge
pop
sub
inc
adc
inc
into
push
mov
aam
xorl
sti
ljmp
dec
cmc
stos
mov
push
or
jl
aad
out
into
xor
lret
dec
sub
popf
dec
or
aas
xchg
imul
inc
stos
lods
cmc
sub
and
in
push
mov
and
push
jne
jbe
mov
inc
mov
inc
sub
test
pusha
add
test
xor
aad
lock
add
dec
pop
scas
cwtl
jae
ret
adc
pop
xchg
xchg
lds
lock
cmpsl
mov
in
mov
lods
aaa
cmc
add
cs
jae
aad
dec
icebp
mov
jnp
ljmp
fildl
xchg
fmuls
and
stos
sbb
and
push
add
subl
adc
jb
jne
pop
iret
mov
in
jecxz
pop
mov
sub
jbe
mov
daa
shll
leave
xchg
pushf
xchg
shl
frstor
arpl
aam
or
lret
aad
hlt
jmp
ljmp
addr16
inc
test
mov
call
test
loope
int
into
mov
in
xchg
sbb
mov
shrd
jb
xchg
fs
push
lods
adc
je
out
jmp
lcall
fnstsw
inc
mov
subb
push
and
mov
data16
scas
inc
loope
mov
orb
lods
insl
mov
or
addr16
cltd
test
inc
or
lods
adc
aad
rcrb
out
iret
cmp
mov
leave
xor
push
pop
mov
movsb
addr16
das
test
push
xchg
into
pop
xor
ret
xchg
daa
rcll
add
pop
jl
ror
mov
push
sbb
clc
add
mov
mov
int3
and
add
fistl
ret
push
mov
push
fs
xlat
inc
mov
mov
pusha
cmc
and
jns
push
add
jns
xor
pushf
in
xchg
mov
hlt
xor
jle
lea
push
jge
int3
xlat
mov
inc
shl
mov
xor
jmp
arpl
pop
sub
xchg
lcall
daa
jecxz
test
and
psubusb
je
dec
or
jo,pt
lds
add
ret
xor
in
daa
or
test
jns
iret
cltd
push
dec
xor
jno
adc
and
out
add
push
outsl
sbb
out
adc
mov
jl
jbe
and
jo
clc
adc
imul
push
xchg
in
mov
inc
cmp
ljmp
int3
pop
sub
pop
outsb
ja
in
push
enter
xor
rol
jle
loop
mov
dec
jle
push
mov
inc
jp
sbb
sbb
mov
cmc
lods
push
lcall
push
outsb
lods
mov
xchg
jne
jmp
pop
xchg
pop
into
sbb
xchg
movsl
ljmp
loop
push
insl
cmp
xchg
cmp
sbb
nop
jne
ljmp
push
add
shlb
repz
pop
cmp
or
divb
jne
sub
fadd
clc
fmuls
sbb
jne
adcb
or
and
inc
popa
xlat
pop
fnstenv
add
pop
add
pop
sti
sub
inc
xchg
or
and
les
or
adc
push
negl
xlat
mov
incl
pop
mov
sub
mov
imul
pop
add
pop
adc
int
mov
sbb
mov
sbb
lcall
sub
in
and
mov
stos
shlb
repnz
icebp
cli
push
icebp
pop
jl
or
div
adc
cmp
sub
jb
cmc
lods
cmc
and
pop
mov
aad
frstpm(287
repnz
aas
add
and
subb
inc
cltd
arpl
push
mov
lahf
xor
sbb
xchg
cmp
or
xchg
hlt
lock
mov
lahf
dec
and
mov
push
adc
sahf
data16
mov
dec
leave
xor
in
repz
mov
and
mov
pop
xchg
push
and
ret
push
mov
add
or
inc
lods
out
out
mov
mov
xor
lcall
fcomip
mov
fsubp
sbb
ja
sbb
divb
mov
into
push
and
jb
xlat
ja
mov
mov
inc
jmp
cwtl
adc
out
push
cmp
iret
inc
mov
pop
xchg
adc
into
icebp
lcall
jle
mov
mov
sub
cmp
mov
sub
cmp
mov
sahf
daa
mov
popa
jo
push
dec
incb
fsub
sbb
xor
sub
lea
mov
jle
jg
cld
add
mov
inc
jmp
rcrl
fcmovu
lods
adc
dec
xor
enter
jge
sub
xor
dec
ret
adcl
cmp
sarl
mov
dec
jae
repz
cmp
cvttps2pi
sub
push
loop
mov
fbstp
pop
push
mov
lds
sbb
je
push
mov
sbb
cld
xchg
and
pop
or
mov
xchg
data16
stos
push
inc
nop
gs
ret
add
cltd
das
inc
mov
jg
subl
ljmp
inc
aas
dec
sub
fnstsw
jge
subb
push
std
xchg
pop
and
in
cs
xlat
push
sbb
sbb
jmp
sub
sbb
int
std
push
in
in
fdivrs
dec
pop
mov
xchg
sar
jbe
xchg
sub
push
scas
lret
rolb
mov
imul
shrb
push
cmp
shl
cwtl
enter
ffreep
insb
or
das
push
jle
imul
and
das
dec
ss
push
inc
mov
ss
dec
mov
push
and
in
rcll
adc
jns
mov
pop
inc
and
and
andl
mov
dec
sahf
xchg
sub
dec
stos
ljmp
lods
nop
repz
outsl
imul
daa
lds
mov
push
mov
stos
mov
loop
and
inc
fldcw
adc
dec
loop
sbb
jne
int3
test
pop
push
inc
insl
out
lds
js
addr16
pop
xchg
sub
pop
sbb
sbb
int3
or
xor
adcl
cltd
js
fcomps
xor
test
popf
fsts
inc
repz
jg
xor
sbbb
ljmp
subb
std
sbb
jg
sti
jp
xchg
lret
cwtl
js
out
sub
das
inc
xor
or
js
cltd
fisubs
and
sbb
das
push
jecxz
adc
sqrtps
xchg
dec
movsb
add
and
cli
out
add
inc
cltd
cmp
and
sub
les
mov
aam
mov
cli
mov
xchg
cmpsb
iret
ret
mov
stc
popa
arpl
aaa
mov
setb
call
inc
mov
in
cld
cs
push
xchg
push
inc
int3
cwtl
sub
sbb
xchg
push
test
push
icebp
sub
ja
xchg
mov
jne
dec
dec
cmp
popa
addr16
mov
adc
xor
dec
or
jb
scas
ret
call
std
sbb
sub
mov
cmp
jno
push
and
and
or
in
lods
addr16
mov
int
testb
test
mov
stc
das
orl
lahf
imul
scas
lahf
faddp
roll
jae
ljmp
cmp
mov
pusha
aas
clc
or
out
outsl
pop
in
sbb
inc
sub
notb
xchg
pop
pop
ret
push
xor
jnp
inc
xchg
mov
js
jnp
jno
adc
inc
mov
and
mov
xchg
stc
loopne
popf
gs
std
lods
ficomps
aaa
push
pushf
dec
or
pop
mov
dec
lds
nop
xchg
andl
mov
sahf
mull
dec
test
sbb
and
leave
xchg
ret
and
nop
ret
sbb
imul
cmp
xchg
loop
inc
sbb
leave
add
in
iret
sbb
add
mov
jne
iret
pop
adc
cmpsl
in
scas
dec
loop
aad
cmp
cmp
xchg
xor
lods
adc
jbe
iret
and
out
cmp
xor
imul
fs
xchg
std
repz
mov
ljmp
sbbl
mov
nop
sbb
jg
push
mov
pop
mov
cmp
or
push
std
push
idiv
pushl
hlt
outsb
jp
test
pop
xor
sbb
inc
dec
fists
xchg
ret
sub
or
mov
cmpsl
pmuludq
inc
or
dec
test
jecxz
adc
pop
andl
out
ja
fistpl
mov
call
sbb
cmp
pop
insl
inc
aam
add
clc
cwtl
push
cltd
shlb
pop
xchg
sbb
dec
es
pop
jb,pt
aas
sub
rcr
dec
call
stos
out
push
push
sti
je
lahf
outsl
push
mov
icebp
fistpll
ss
int
rclb
push
sub
sbb
out
gs
dec
mov
movsl
cs
or
jbe
dec
aam
sbb
adc
icebp
mov
ficoms
imul
and
lock
es
xchg
daa
repnz
sub
pop
xor
test
pusha
jno
icebp
cli
fidivl
inc
sub
loopne
inc
mov
call
push
and
add
push
jno
insl
ss
lods
data16
push
inc
scas
xor
adc
push
popa
out
mov
scas
es
or
mov
scas
cmp
xor
mull
repz
pop
inc
push
push
das
and
adc
test
push
adc
inc
pusha
mov
out
into
adc
mov
dec
inc
addr16
pop
addb
orl
imul
jo
jno
pusha
jne
mov
dec
and
push
mov
mov
cmpsl
add
or
fldln2
inc
pop
dec
loope
adc
sbb
jne
std
xchg
cmp
mov
and
xchg
call
rcrb
test
inc
dec
test
incl
dec
sbb
or
mov
xor
mov
call
push
xchg
mov
inc
mov
mov
shll
jo
xchg
daa
bound
fdivrs
mov
jae
mov
add
inc
mov
nop
aas
mov
out
dec
sub
sub
daa
mov
xor
leave
leave
cwtl
or
pop
cs
daa
cld
inc
pop
faddl
add
mov
dec
sub
outsb
addl
sbb
sti
and
mov
mov
sub
sbb
daa
sub
cmp
pop
fdivrp
and
movsl
xchg
or
sti
mov
fisttps
insl
push
out
cmp
jmp
sahf
hlt
ja
in
repz
leave
stos
and
jecxz
hlt
lahf
dec
or
or
sahf
lahf
in
lret
mov
mov
sbb
mov
mov
hlt
sub
push
insl
rcrl
inc
jmp
jbe
jge
pushf
xchg
jle
jg
aam
jp
das
jmp
lock
xchg
jnp
nop
fldenv
xchg
out
mov
inc
dec
in
or
push
in
movsl
ja
push
jno
jp
or
stc
movsb
xlat
push
push
imul
cmp
adc
and
add
lret
and
gs
ret
test
dec
pop
imul
mov
movsl
inc
nop
and
and
jbe
jne
je
mov
pop
rorl
rorb
dec
fisubs
push
outsl
xor
push
mov
cmc
mov
or
jb
mov
scas
sub
into
scas
sub
movsl
push
mov
enter
test
cld
test
loop
jno
pop
mov
lods
jp
mov
call
jbe
jne
mov
iret
gs
dec
xor
cmpsl
jae
fwait
ds
push
cmc
and
xor
pusha
ret
arpl
or
outsb
pusha
mov
iret
sti
xchg
mov
shrl
mov
js
jbe
xlat
jo
cmp
pop
jo
sub
jecxz
in
andl
es
sub
gs
insb
daa
pushf
loopne
or
popa
push
lea
popf
lcall
cli
aaa
push
or
dec
inc
cmp
inc
clc
imul
push
or
jbe
sub
je
insl
dec
ja
mov
insl
sbb
loopne
mov
fildll
adc
fwait
mov
loope
mov
dec
pop
and
jg
or
das
push
out
mov
jle
or
mov
rolb
hlt
mov
xchg
mov
ficompl
push
jge
push
jecxz
cli
negl
cmc
fs
fisubrs
es
fildl
clc
sbb
jno
dec
cld
adc
pop
pop
pop
jp
pop
pop
adc
mov
outsl
inc
dec
pusha
sub
mov
cld
notb
jl
xor
push
or
ret
cmp
mov
xor
and
leave
icebp
fbld
mov
scas
ds
jns
lret
aas
pop
xchg
cmpsl
shr
es
push
cmpsb
or
xchg
pop
pop
loope
das
test
push
bound
ds
jmp
jo
fldt
js
int
mov
out
pop
hlt
dec
sbb
add
fnsave
fisubrl
pop
ss
iret
out
in
push
stos
fs
orb
push
hlt
loop
cmpsb
pop
push
out
rcrb
testb
or
test
inc
jne
aas
lock
hlt
imul
ficoms
outsb
and
scas
mov
fcoms
push
adc
mov
rcrb
int3
or
out
in
in
nop
pop
sbb
jbe
xchg
mov
dec
int
cwtl
xchg
push
ja
das
sbb
aam
and
push
mov
fildll
lcall
lea
push
dec
sbb
repnz
into
mov
jo
popf
add
push
testl
fildll
out
jns
test
xor
sbb
push
inc
pop
adc
adc
movd
pop
outsb
xchg
into
hlt
repnz
add
mov
and
iret
pop
loopne
add
pop
lcall
jecxz
cli
lahf
sub
sahf
sub
dec
cmp
call
into
fstl
aaa
imull
xchg
fwait
cmc
xchg
fs
out
subl
call
mov
xchg
jnp
xchg
adc
cmc
adc
aaa
dec
push
pop
dec
arpl
cmpsb
pop
dec
pop
stos
dec
fstpt
dec
or
repnz
or
cmp
xchg
and
cli
out
sub
cwtl
das
xor
push
divb
dec
cltd
pop
popf
adc
mov
push
jb
test
push
dec
xchg
push
in
adc
cmp
xchg
stc
movb
mov
in
mov
out
pop
or
xchg
or
ffree
mov
lods
inc
xchg
out
cltd
fbstp
dec
rclb
and
filds
mov
and
fwait
sti
inc
in
aam
inc
fcoms
push
cmp
sub
imul
loop
cltd
lods
sbb
cltd
loopne
mov
dec
fcompp
pushf
mov
aas
ret
imul
pop
inc
mov
dec
and
inc
sbb
adc
push
mov
xchg
adc
ret
sub
mov
cmpsb
mov
mov
sub
xchg
jmp
xchg
push
jle
in
push
lods
mov
cmp
mov
jl
dec
push
std
jge,pt
push
lods
sbb
or
mov
cld
xchg
mov
and
sbb
in
std
shrl
pop
mov
mov
push
pop
and
ficomps
mov
pop
push
std
jb
add
jmp
push
jp
pop
rorb
mov
stc
fisubl
maskmovq
nop
fs
pop
jmp
std
cmp
jge
addr16
clc
stos
add
std
sub
push
pop
mov
push
xchg
ljmp
push
add
hlt
push
aas
adc
out
dec
fnstenv
imul
repz
jp
dec
cs
sbb
push
xchg
and
lock
fwait
les
sbb
inc
mov
jno
fcmovb
add
pop
mov
lret
aad
add
in
adc
nop
xchg
mov
jne
fcomp
xor
jl
aaa
in
leave
xchg
pop
mov
hlt
inc
call
mov
xlat
ljmp
xor
ss
daa
cmpsl
sub
or
in
jecxz
rep
movl
add
xlat
cmp
jecxz
mov
repz
xchg
mov
lahf
loopne
test
call
cmp
shll
outsb
push
cmp
mov
daa
xchg
cmp
pushf
push
movsb
inc
mov
cs
cmp
ffreep
adc
sub
adc
fcmovb
inc
xor
xlat
mov
iret
inc
out
lock
dec
dec
push
loopne
je
idivb
jns
notl
pop
jg
pop
test
jle
test
out
vphaddubw
adc
fs
lock
sub
inc
xchg
xchg
mov
mov
adc
sahf
cmp
sub
mov
mov
cmpsl
fiadds
in
jecxz
sarb
mov
push
pop
or
aaa
ljmp
jnp
rorl
mov
fcmovbe
mov
out
subl
adc
sub
push
ret
stos
dec
inc
push
iret
filds
adc
loope
jmp
popf
inc
xchg
xor
in
shl
or
out
int3
xor
rcl
outsl
js
and
rcll
and
ds
mov
pop
imul
ja
mov
dec
call
bound
ret
ss
int
enter
lret
cmp
test
fsubr
mov
cmp
lods
add
jl
cmc
or
pop
fisubrs
xor
cmp
das
call
adc
je
add
ret
sub
mov
aam
cwtl
and
push
daa
jle
mov
mov
repnz
cmc
enter
cmp
add
fnstenv
and
push
mov
add
xor
dec
sbb
sub
lcall
sub
movsl
inc
cmp
je
xor
dec
test
pop
cmp
std
jno
pop
xor
and
inc
push
repz
rcl
cs
xlat
loop
out
inc
pop
shrl
mov
sbb
adc
cli
shl
xor
mov
jae
inc
pop
inc
push
ss
xor
imul
arpl
cmpsl
mov
sarl
pop
testb
notl
push
sub
mov
push
fstl
add
pop
jecxz
cmpsb
shr
in
repz
mov
shll
inc
xor
and
repnz
sti
adc
sub
lahf
pop
push
fwait
cmp
idivb
fidivs
out
or
mov
and
pop
xchg
xor
xor
addps
or
out
pop
sub
sahf
and
mov
sar
xchg
popa
mov
int3
push
in
gs
push
dec
xchg
clc
icebp
xor
xor
jae
mov
fdivs
mov
ds
ds
cs
add
cmp
inc
out
and
sti
test
scas
jmp
pop
push
mov
sbb
popa
loopne
xchg
xlat
in
movsl
lea
lds
out
fadds
sbb
jae
ss
sbb
sbb
push
stos
daa
mov
in
data16
rorl
and
stos
iret
mov
mov
loope
test
lds
xlat
movsb
sbb
int
rcll
cmp
shrl
jecxz
cli
pop
cwtl
mov
dec
mov
add
mov
ss
fs
or
or
xor
adc
insl
push
add
outsl
bound
daa
add
out
or
pop
packssdw
sbb
sub
fisubrl
pop
insl
out
aas
pop
pop
or
loop
lea
mov
cmp
rclb
into
je
insb
mov
adc
cmp
push
aam
push
sub
out
ret
jns
test
in
jb
cmp
xor
add
ja
xchg
lds
fs
mov
outsb
pusha
nop
add
scas
cmpsl
xor
xchg
jl
pop
fisubrs
cli
sbb
dec
outsb
outsb
xor
insb
mov
pop
jp
jecxz
sub
sbb
sbb
inc
jae
inc
xchg
rorl
and
dec
mov
push
dec
mov
adc
jne
pop
xor
data16
fistps
sbb
xor
adc
inc
add
sbb
nop
xor
add
inc
test
pushf
int
xchg
ljmp
rclb
movsl
dec
cmpsb
dec
mov
iret
mov
jmp
cld
pop
outsb
lcall
ret
jl
inc
lcall
loopne
jnp
and
js
jno
cs
push
add
push
shlb
bound
jle
mov
mov
cwtl
inc
push
pop
push
ja
pop
inc
stos
int
push
stc
movl
cmp
ret
andb
inc
cmp
cwtl
mov
es
add
xchg
push
and
jl
or
jle
push
and
or
sbb
cmp
xor
add
or
pushf
pop
mov
lcall
dec
pop
scas
mov
pop
mov
xchg
outsl
ret
mov
adcb
lcall
insb
and
mov
sub
jl
push
mov
lcall
add
xchg
pop
rclb
cs
adc
out
addb
and
push
lods
pushf
test
mov
push
ja
lret
pushf
mov
jecxz
or
out
add
sub
pushf
testl
in
icebp
cli
stc
mov
cltd
and
cs
out
cmp
pop
in
mov
xchg
xor
jne
push
out
or
cmp
or
cmp
cltd
adc
shlb
in
pop
loope
dec
mov
sbbb
sarb
pop
dec
add
aad
es
cmpsl
mov
xchg
rorl
push
loopne
cwtl
popa
imul
lods
inc
push
dec
cmp
addr16
rcrl
js
sub
bnd
nop
mov
shlb
push
add
dec
bound
pusha
cltd
sub
pop
aas
fnsave
dec
inc
sub
add
dec
stos
and
ljmp
cltd
les
xchg
arpl
sarb
lods
in
mov
mov
nop
xchg
fisubl
xor
mov
jne
scas
pop
add
popa
loopne
inc
sub
jmp
je
cld
mov
mov
jge
inc
fmull
sbb
cwtl
rclb
out
pushf
mov
xor
out
test
ja
js
aad
mov
test
in
push
gs
and
rol
in
rorb
lock
in
sub
ljmp
pushf
mov
xchg
fidivrs
jnp
gs
push
imul
mov
inc
das
inc
and
fcoms
xor
push
ja,pt
mov
gs
pop
in
mov
mov
cmc
out
jae
cmp
les
int
dec
or
mov
ljmp
xor
sbb
sahf
xorb
stos
rcll
mov
shrl
dec
inc
daa
mov
sbb
test
lret
loope
out
loop
mov
lret
jae
aaa
pop
fsubrl
out
dec
jo
movsl
hlt
lock
pop
rolb
mov
mov
fstp
mov
xchg
test
cmp
or
dec
bound
and
or
mov
mov
outsb
call
out
adc
out
mov
rdtsc
mov
pop
idivl
cmp
das
popa
arpl
lods
fadds
out
dec
out
cmp
sub
inc
nop
sub
jae
mov
iret
xchg
add
push
fs
int
pop
orl
and
call
cmpsl
rorb
ror
hlt
outsb
daa
adc
fsubl
jge
pop
stos
loop
hlt
push
sub
mov
aad
loope
jp
mov
in
enter
push
push
and
mov
sti
clc
js
push
lea
and
loope
inc
cmp
lret
dec
xchg
cwtl
pushf
addl
and
std
mov
xor
lahf
add
fsubrl
mov
mov
rcrb
mov
imul
in
dec
xor
pop
mov
aaa
xor
mov
adc
pusha
xchg
jo
pushf
popa
shrb
movsb
or
aad
mov
jae
lods
test
lods
mov
mov
inc
jnp
test
and
popa
adc
mov
push
mov
mov
push
sbb
inc
adc
sub
jo
dec
mov
popf
or
and
stos
popa
jnp
jge
mov
push
sub
jne
faddl
cli
es
ja
push
incl
into
or
divl
lahf
push
inc
and
stos
mov
ja
dec
cwtl
loop
fyl2xp1
add
inc
dec
pop
call
ljmp
and
push
and
or
dec
add
pusha
mov
scas
xchg
pushf
jle
mov
mov
mov
sahf
lret
leave
sub
mov
fs
gs
pop
mov
fcmovnu
jns
testb
dec
add
sbb
jae
stos
inc
mov
xor
loop
cwtl
test
jge
sub
lret
cmpsb
in
int3
sub
shl
or
clc
xchg
sahf
shl
imul
adc
lcall
xor
push
adc
sub
lcall
fidivrl
addr16
jbe
jge
in
es
sub
sub
inc
push
or
ret
xchg
xchg
jl
cmpl
mov
sub
xlat
cwtl
popa
mov
lock
pop
lods
jecxz
push
data16
inc
cmp
add
mov
sbb
cmp
jns
cmpb
mov
or
pop
inc
cmc
rclb
or
pop
out
pop
je
movsbl
andl
add
mov
jne
mov
adc
nop
mov
mov
jmp
iret
repz
insl
fiaddl
mov
mov
out
dec
dec
xor
ret
call
inc
mov
incl
mov
add
sub
inc
pop
outsb
mov
pop
mov
cs
fmull
and
push
cmp
xor
and
push
repnz
push
in
mov
cmp
loope
mov
subb
jo
mov
aas
adc
xor
in
movsb
bound
cmp
pavgw
aas
or
pop
jbe
cmp
inc
push
in
jge
ret
pusha
in
xor
add
xor
mov
rolb
jnp
stos
jae
mov
pop
popa
movsb
repnz
mov
fildl
or
iret
test
dec
mov
adc
nop
xchg
and
adc
ret
sarb
fdivrs
scas
and
or
pop
fwait
jnp
xchg
arpl
fnstcw
arpl
dec
pop
inc
push
aas
mov
xor
rclb
negl
fs
adc
int3
mov
std
push
cmpsl
mov
jo
cwtl
in
xchg
mov
adc
out
outsb
cmpsb
leave
fucom
push
daa
stos
mov
jbe
push
rolb
and
mov
hlt
or
or
and
mov
inc
daa
push
adc
sbb
les
sbb
or
lea
mov
add
shlb
mov
or
stos
std
ret
push
push
lods
popf
in
sub
jl
add
adc
jg
pop
mov
rorl
push
scas
fnclex
xchg
sbb
mov
enter
add
jnp
push
aam
test
mov
lret
out
stos
adc
xchg
popf
xchg
cmp
stos
mov
or
jge
cwtl
pop
lock
les
imul
gs
out
jno
mov
pop
inc
pop
in
iret
jg
movsl
movsl
mov
jns
aad
cmp
lock
xchg
sbb
mov
repnz
lret
repnz
cmp
scas
mov
mov
inc
and
fbld
xor
notb
inc
test
jle
cmpsl
lds
cmp
cld
fwait
insl
daa
pusha
test
inc
dec
sub
loop
inc
xlat
dec
jnp
mov
fcomps
fsubl
push
test
push
push
daa
les
cmpsl
dec
cmp
push
std
jb
cmp
fisubrl
shr
xlat
ret
jne
xor
vandnps
xchg
sub
pop
push
jge
out
pop
mov
cmpsb
lods
sub
mov
imul
out
popf
push
jb
loop
add
stos
sbb
lcall
jl
popf
es
sbb
jb
in
xchg
jo
rcl
fcmovnu
mov
lret
fcoml
shl
or
jle
out
pop
xchg
mov
jno
xchg
xor
lods
or
fs
mov
mov
aam
mov
pushf
push
rcr
sbb
mov
mov
into
and
mov
pop
sub
dec
mov
test
and
pusha
and
push
xor
roll
sbb
test
and
push
pusha
mov
ja
add
add
fcmovbe
loope
int3
cld
sub
dec
pushf
loope
add
jno
xchg
push
sbb
insl
xor
xor
lods
jmp
mov
adc
jmp
jg
jge
cmpsb
xor
mov
add
aam
mov
sub
je
or
and
sbbb
rclb
pushf
rcll
enter
test
inc
or
mov
into
xor
dec
iret
mov
pop
or
popf
pop
xchg
xchg
add
fmuls
sbb
inc
adc
cltd
les
sti
pop
jbe
cld
xor
xchg
pop
sub
mov
lods
mov
push
sub
shl
mov
jno
popf
add
sub
sbb
dec
pushf
call
stc
lock
lds
and
push
push
testb
push
ret
push
inc
test
or
jo
jmp
inc
test
jo
xor
or
divl
mov
jne
xchg
rcrb
sti
ret
repz
sub
dec
fwait
je
lds
outsb
jnp
popf
stc
jge
push
mov
popf
jae
mov
mov
jbe
push
imull
hlt
push
out
das
mov
int3
aam
lret
pusha
push
sbb
movsl
or
sbbb
mov
mov
mov
insl
rolb
loopne
mov
mov
pushf
push
loope
fimull
push
cs
xchg
sarl
out
pop
movsb
data16
push
fsubl
add
inc
outsb
icebp
out
imul
push
xor
pop
push
lret
insl
pop
mov
add
fs
jns
jb
jne
pop
cmp
mov
jo
mov
sub
in
repz
mov
sbb
or
mov
ljmp
fisttps
push
ja
mov
or
push
mov
add
push
lock
cltd
out
push
in
rcl
outsb
or
push
out
fimull
call
out
cmp
insl
or
xchg
daa
test
jmp
in
fcoms
mov
jns
iret
scas
xor
fistl
stc
adc
mov
int3
or
jg
inc
or
inc
sub
lahf
cmp
mov
pop
insb
fsts
mov
call
cs
fildl
out
mov
popf
lcall
mov
cld
dec
mov
das
mov
xchg
mov
insl
or
xchg
repnz
sub
iret
mov
pushf
push
or
mov
cmp
jl
jbe
scas
aas
inc
jne
xor
lods
and
pop
push
sbb
jo
nop
pusha
xchg
add
pop
fsubs
mov
int3
enter
mov
aas
jo
int
cmpsl
push
mov
xor
mov
lahf
adc
jp
push
js
fidivl
inc
leave
push
push
xor
mov
jmp
nop
loopne
inc
xlat
lahf
cmc
jecxz
in
lret
es
fs
mulb
jge
cltd
imul
xor
jnp
mov
mov
rorb
or
inc
out
xchg
xchg
lahf
outsb
lahf
inc
xchg
jb
pop
push
jne
mov
push
fldcw
fistps
pop
loope
xor
push
mov
sarb
mov
mov
test
loope
stos
or
outsl
shl
pop
sub
fcmove
cltd
mov
jno
push
cwtl
xchg
inc
or
cmp
cmp
dec
out
dec
xchg
inc
aaa
jno
jae
pop
cmpsb
hlt
and
lds
jge
dec
or
cmpsb
mov
xchg
mov
sbb
xchg
test
mov
mov
int3
mov
mov
mov
test
xor
mov
mov
mov
ds
mov
cmp
push
inc
sbb
les
mov
lcall
repnz
push
cmp
push
jmp
pop
or
insl
pop
xor
xor
add
pop
lea
test
or
sarb
mov
fcomip
addr16
cmpsb
and
jnp
adc
or
lahf
mov
lret
fdivp
stos
inc
mov
push
lahf
gs
xchg
jne
lods
mov
pusha
and
xchg
mov
lret
mov
gs
lods
loop
jp
add
addl
addr16
pop
leave
cwtl
cmpb
inc
cmc
test
xor
jae
inc
push
les
enter
add
mov
jae
dec
xchg
sub
cmc
sub
popf
cs
mov
outsb
xchg
push
mov
stos
out
enter
insb
add
outsb
dec
xor
sbb
push
shlb
addl
gs
dec
sub
ret
sub
mov
inc
test
and
in
fcoml
jp
and
mov
leave
js
cltd
sbb
fisttpl
push
dec
scas
cmpsb
fstpl
and
dec
es
mov
movsb
ja
push
ljmp
cli
popf
pop
xor
loope
inc
jns
pop
sub
add
mov
mov
fmuls
jge
arpl
fyl2xp1
pop
lock
icebp
and
cli
push
cmpsb
lcall
test
mov
fnsave
arpl
sti
or
mov
ret
out
es
sbb
int3
adc
add
lds
cmc
xor
pop
int
add
add
sti
ljmp
insl
xchg
jns
aaa
out
lahf
add
jns
insl
movsl
push
dec
xor
mov
jp
popf
nop
insl
dec
adc
inc
adc
push
add
cmpl
jge
xchg
add
mulb
mov
test
adc
popa
out
or
cmpb
rolw
dec
pop
xchg
xor
out
adc
push
push
mov
add
xchg
push
push
mov
les
movsl
inc
mov
stos
mov
into
nop
add
shlb
aad
cmpsl
nop
mov
hlt
push
stos
mov
xchg
xchg
add
xchg
insb
xchg
push
or
jle
dec
jp
faddl
mov
lcall
lret
sub
xchg
imul
or
sbb
arpl
mov
cmp
shll
push
sub
add
ljmp
leave
jle
je
pop
pop
icebp
mov
int
and
jbe
fistps
or
sub
mov
jo
adc
pop
mov
dec
lods
fsubs
ficomps
sbb
in
mov
leave
inc
cmpsb
cmpsl
dec
icebp
mov
idiv
inc
daa
push
into
shlb
dec
push
rcl
inc
leave
and
scas
lea
and
add
jno
xchg
lahf
inc
pop
loop
xchg
sbb
dec
jle
jle
outsl
dec
out
lods
aam
inc
ljmp
pop
xor
push
xchg
fimull
adc
add
cwtl
hlt
imul
sahf
pusha
cld
xchg
scas
imul
add
arpl
hlt
push
jle
shr
out
aas
sbbl
add
adc
adc
mov
dec
insb
push
jb
pop
xchg
fs
imul
pop
ret
int
clc
ds
mov
xchg
leave
jno
outsl
mov
pop
mov
call
sbb
dec
dec
repz
inc
or
sub
paddusw
push
fdivl
pop
call
ficomps
jmp
fcmove
push
jno
mov
loope
roll
push
push
or
adc
dec
pop
dec
xor
push
pusha
fwait
negb
insb
xchg
hlt
mov
imul
xchg
rol
imul
mov
cld
dec
mov
dec
loope
lcall
loop
xor
jnp
inc
icebp
xchg
repnz
add
decb
push
xchg
jmp
adc
loope
mov
inc
stos
sbb
repz
imul
adc
cmp
pop
hlt
jnp
add
ss
into
in
sbb
in
int3
fs
enter
icebp
xor
cmpsl
xchg
xor
mov
and
xor
movsl
movsb
mov
mov
movsb
pop
rorb
hlt
repnz
sbb
adcl
enter
sbbb
adc
jmp
pop
int
xor
fwait
dec
addl
pop
je
cli
dec
push
mov
adc
inc
sbb
add
mov
mov
imul
aam
test
dec
jb
imul
pusha
ret
and
mov
jne
stos
add
aas
jg
call
or
int3
cmc
sub
lods
cmova
adc
jbe
jmp
mov
mov
out
lods
mov
daa
test
popa
add
lods
mov
outsb
fwait
sbbl
jle
mov
outsb
pop
mov
mov
lods
pop
mov
leave
or
xchg
push
inc
cmp
cmp
or
pop
repz
mov
lods
shlb
or
xor
inc
xlat
mov
bound
movb
je
cli
fnstcw
and
cmp
mov
addr16
push
cmpsb
cmpsl
push
fcoms
test
das
pop
xchg
jecxz
scas
cwtl
aaa
lods
jbe
dec
mov
push
test
scas
xchg
ljmp
cmp
sub
mov
in
or
js
dec
test
mov
xchg
aam
xchg
push
or
cmc
jmp
movsl
add
or
cli
test
mov
hlt
arpl
sarb
xchg
sbb
lret
add
sbb
jl
out
dec
scas
hlt
push
adc
and
pop
dec
or
adc
loopne
xchg
push
adc
or
loopne
dec
lods
hlt
pop
add
mov
jno
fdivs
ficoml
pop
adc
das
or
aam
test
in
fbld
cmpsb
daa
lahf
rcll
decl
cmc
adc
fadd
adc
daa
vmwrite
gs
mov
jb
dec
or
loope
cs
lds
ret
js
fisubs
pop
popf
mov
movsl
push
je
mov
cmp
roll
cld
bound
push
cmovge
int
mov
int
andl
add
shll
push
mov
ds
orl
pop
jg
test
imul
out
xchg
push
dec
mov
add
arpl
dec
xchg
push
cmp
pop
and
movsl
pop
lret
pop
into
sbb
pop
pop
vmulss
ja
dec
sub
xor
and
jae
inc
mov
rcrb
xor
outsb
aam
mov
mov
xchg
fstpt
or
lods
ja
shlb
fs
sub
and
loopne
cmp
and
and
adc
call
pop
cld
and
rclb
pop
scas
jns
jb
sbbl
mov
push
or
inc
sub
out
adc
mov
jp
fcmovne
sti
ja
jo
xchg
aaa
fwait
jle
sbb
mov
movsl
iret
cwtl
add
sarl
sbb
inc
dec
arpl
orb
dec
mov
dec
adc
mov
stos
mov
mov
push
sbb
adc
or
mov
faddp
sub
or
cmp
inc
es
jecxz
sbb
jae
rclb
aaa
call
sbbl
fsts
pop
ret
mov
dec
mov
loope
jnp
inc
mov
shrb
xor
dec
imul
and
lea
or
js
je
test
lret
pop
nop
mov
ds
xchg
popf
pop
adc
mov
jl
jp
dec
lea
jmp
lcall
xor
xor
dec
inc
inc
xchg
mov
inc
jle
jbe
addr16
stos
in
jecxz
lcall
lcall
sahf
clc
subl
sbb
outsl
inc
out
out
push
xchg
push
add
cld
mov
mul
xchg
lods
sarl
popa
cmpsl
inc
enter
aam
add
int
aas
add
arpl
mov
mov
mov
xchg
call
repnz
add
jbe
and
dec
orl
dec
test
shrl
rorb
push
call
xchg
lahf
jb
mov
lea
jne
dec
insl
or
in
rorb
or
xor
cmp
jno
and
cltd
sti
fwait
jp
lock
sbb
pop
int
xchg
fists
frstor
sub
sub
dec
cmp
call
and
ja
mov
pusha
dec
fstpl
xchg
out
adc
ljmp
in
icebp
popf
adc
sti
lds
xchg
jmp
pop
fcom
scas
cmpl
pop
push
nop
inc
sti
dec
cmp
mov
jno
aaa
pop
jg
mov
lods
xchg
pop
in
dec
into
push
aad
mov
ficompl
dec
aam
cmp
xor
aam
jbe
xchg
mov
sub
xchg
mov
xchg
cmp
js
aam
push
js
cmp
jns
jne
lret
mov
rcll
rorb
jle
in
imul
inc
lods
icebp
inc
xchg
jbe
in
mov
mov
jmp
sub
outsl
out
xor
scas
and
pop
mov
test
lods
addb
ss
xor
pop
loopne
insl
into
in
imul
cli
jnp
fiaddl
or
subl
mov
pusha
lock
scas
adc
es
mov
loopne
jl
xchg
and
inc
mov
sbb
jg
icebp
xor
adc
stos
inc
pop
or
fdivl
adc
stos
dec
sub
jg
mov
sub
or
dec
out
stos
or
cmpsb
icebp
sti
mov
mov
outsb
std
gs
push
and
mov
push
outsl
or
int3
add
jbe
aaa
add
add
xor
out
cmp
add
adc
lods
pop
xlat
push
addl
mov
in
dec
fsubrs
jne
js
xchg
notl
into
cmp
stc
mov
pushf
inc
ss
xor
xor
add
mov
or
and
bound
jnp
add
call
add
jo
lcall
mov
fistps
clc
adc
outsb
dec
rcl
or
fidivs
dec
fnstcw
and
test
shll
adc
iret
dec
jno
and
mov
sti
lds
cltd
mov
hlt
jge
xlat
dec
das
sub
xlat
mov
mov
movsb
lods
mov
out
out
sub
or
fs
sub
lods
jo
in
mov
sbb
test
mov
cs
xchg
mov
or
pusha
or
dec
inc
aad
out
cmp
mov
cmc
mov
lods
push
outsl
adc
std
xor
fsubs
lea
fsubrs
adc
in
cmc
pop
mov
leave
les
xchg
das
add
jae
xor
icebp
imul
adc
out
inc
jl
adc
xchg
push
xchg
cmp
arpl
enter
scas
dec
push
popf
sti
pop
push
stos
sub
repnz
pop
mov
mov
or
daa
pop
or
pop
jno
in
mov
mov
jno
dec
js
testl
mov
js
jo
lcall
adc
das
fnsave
pop
shrl
cmp
mov
xor
pop
dec
cmpsl
aad
mov
inc
cmp
sbb
decl
xor
and
ljmp
push
repz
ret
pop
std
rorb
fldl
mov
ja
repz
cmc
mov
pop
cs
or
sbb
sti
cli
rcrb
movsb
xchg
pop
mov
repnz
mov
fisubrl
stc
cld
add
add
adc
pushf
and
icebp
jle
mov
out
sub
jne
mov
leave
fcomi
jmp
jo
add
jne
test
add
mov
pushf
jl
sub
inc
mov
cmpsb
mov
cwtl
pop
fwait
mov
fmull
enter
mov
fstps
scas
add
incl
sbb
add
add
dec
jnp
ret
jae
or
ja
cld
and
je
out
mov
fistpl
popf
aas
sub
pop
test
test
inc
lea
rcll
out
jg
aaa
lahf
add
adcl
push
test
shll
test
inc
ficoml
cmp
or
sbb
ds
sbb
in
shlb
adc
data16
jmp
fisubl
mov
and
xor
ljmp
mov
int
xchg
jbe
repz
repz
in
dec
mov
cmp
push
cwtl
in
pop
fsubs
std
xchg
dec
scas
in
jbe
out
xor
sbb
fs
inc
in
cmc
push
out
sub
jg
js
adc
push
insb
testb
add
mov
mov
aad
sbb
mov
es
sbb
pop
inc
sahf
mov
pusha
xor
sbb
repz
out
cs
push
in
test
add
mov
out
push
ss
dec
ret
hlt
inc
loop
je
jecxz
ret
or
test
bound
dec
std
jb
xchg
jb
rol
insl
roll
or
dec
cmp
aaa
icebp
int
fcomps
push
and
repnz
mov
mov
sub
pop
arpl
pop
outsl
sub
scas
addr16
out
test
push
std
mov
inc
fwait
add
mov
cmpsb
aad
mov
scas
stos
push
inc
push
push
stos
adc
lahf
push
dec
cmpsb
mov
lods
xchg
aas
pop
lahf
sbb
pop
jmp
cmovg
cmp
pop
cmp
pop
shll
push
push
add
adc
cmp
jae
fwait
addr16
sbb
gs
pop
sarl
mov
pop
mov
loope
fisubrs
out
lods
shl
dec
icebp
pop
ja
fldl
xorl
dec
or
mov
sub
sub
cmp
repz
sbb
cmpsb
cltd
push
xchg
and
out
stos
adc
xchg
jle
fbld
cmp
mov
jle
mov
add
push
icebp
fists
fwait
push
mov
push
stos
enter
mov
xchg
lcall
and
mov
bound
scas
mov
imul
jnp
insl
xor
add
xchg
fwait
sahf
jl
xor
sbb
stc
pop
push
dec
ljmp
cmp
shlb
inc
sub
ret
add
dec
cld
xor
test
lahf
push
aam
stc
loopne
mov
adc
mov
cmp
pusha
sbb
into
push
pop
dec
dec
jne
scas
lock
inc
xchg
in
and
loope
insb
inc
clc
sub
ret
loop
inc
jmp
jge
xchg
inc
fiaddl
loop
lea
jle
cli
sub
mov
lods
mov
sbb
jg
cmp
xchg
mov
stos
clc
pop
and
cmp
sbb
lret
jo
in
xchg
mov
sub
jp
ss
test
xchg
and
jp
out
dec
sub
and
sub
jne
mov
shlb
out
cmp
add
cmp
xchg
mov
insl
rcrl
lret
jp
sub
stos
insl
add
pop
jnp
cmp
lret
int
and
stos
mov
xor
pop
jae
in
inc
stc
add
jae
scas
push
aas
adc
sbb
test
add
sbb
sub
push
lods
sub
popa
inc
or
lcall
cmp
cld
popa
insl
stc
adc
mov
rcr
ss
jns
out
pushf
mov
push
ds
negb
loop
mov
out
addr16
xchg
or
inc
sbb
daa
sbb
sub
int3
pushf
and
inc
xor
or
dec
cli
adc
adc
fwait
loop
nop
inc
and
ljmp
inc
sub
xchg
pop
sbb
xor
shlb
mov
dec
inc
outsb
and
mov
data16
inc
adc
mov
cld
subb
inc
dec
mov
int
add
jo
mov
sti
add
mov
leave
xlat
mov
je
jns
insb
xchg
std
shlb
movsl
sbb
or
pop
xor
inc
shll
subl
add
mov
xor
sub
iret
and
iret
or
int
call
lret
dec
imul
inc
jns
pop
fimull
popf
lock
testl
jb
out
insb
mov
into
push
ror
test
jb
das
fiaddl
jbe
fbstp
fcomi
or
sub
sub
and
out
and
add
sbb
xchg
sbb
mov
push
cmpb
test
fsubs
stos
dec
xor
pushl
inc
rclb
in
or
dec
push
and
popf
fisubs
outsl
or
out
adc
sarl
jp
mov
shrb
es
mov
add
sub
lret
mov
lods
add
insl
lcall
aad
bound
pop
jmp
int
lahf
bound
push
inc
cmp
les
popa
jle
dec
sub
cmp
or
jne
lret
idivb
aaa
arpl
mov
adc
imul
or
daa
movsb
mov
mov
insb
jmp
out
xchg
and
pop
sub
mov
sub
pextrw
adc
pushf
mov
arpl
dec
loopne
jg
orl
jmp
popa
sub
jp
cmp
test
in
inc
jmp
xlat
loop
adc
mov
pushf
push
jle
rcl
gs
maskmovq
idivl
popa
pusha
sbb
cli
out
bound
lds
sbb
mov
or
push
mov
cmp
imul
xchg
pop
test
mov
in
push
mov
push
push
pop
aad
cs
test
stc
sbb
adc
mov
mov
push
clc
dec
jb
mov
dec
out
push
in
push
xor
cmp
mov
pop
sbb
jg
inc
pusha
sbb
push
xchg
ja
sbb
mov
jecxz
mov
lods
das
xchg
cmp
xorl
sbb
ja
mov
adc
shl
aaa
notb
cwtl
and
and
push
lods
cmp
sub
mov
dec
push
sbb
fsts
aaa
dec
adc
jnp
clc
rcll
out
push
aam
fcmovne
into
cs
jle
cs
and
xchg
outsl
mov
mov
sub
and
push
ss
jne
adc
scas
mov
add
push
push
push
lcall
or
cltd
mov
loopne
dec
cmp
mov
push
mov
shlb
sbb
xor
jo
push
jle
add
pop
and
fs
mov
stos
sarl
lea
and
pop
sub
cld
and
idivb
inc
in
in
loop
inc
mov
addr16
addr16
aaa
test
imul
outsl
bound
stos
push
call
jecxz
ret
mov
sub
loop
inc
icebp
jecxz
adc
push
and
je
xchg
jno
stos
mov
push
adc
mov
jae
push
imulb
pop
mov
cmp
frstor
test
sub
adc
push
repz
sub
xor
shll
sub
lcall
movsb
push
inc
pop
mov
push
xlat
jbe
and
mov
loope
cwtl
ret
push
jl
bound
mov
sbb
orb
adc
or
fs
cmp
or
mov
jo
gs
or
mov
or
sub
sbb
call
sbb
fsubr
push
pop
jle
sbb
cmp
jl
inc
mov
and
cmp
out
cmc
sbb
test
add
jne
mov
pop
jle
loop
push
cwtl
jmp
cmp
jmp
lret
lahf
xor
sahf
dec
fwait
and
mov
adc
out
jg
sbb
daa
out
cli
push
inc
mov
sub
or
inc
cltd
jle
test
xor
popf
mov
mov
shlb
pop
pop
cmp
ja
sub
pop
aas
dec
mov
aas
and
mov
sub
sbb
jo
data16
pushf
xchg
cmp
dec
fldenv
pop
fisttpl
stos
sub
mov
repz
pop
in
sbb
mov
mov
adc
addr16
aas
xlat
gs
into
es
ret
loope
xchg
insb
xchg
rorl
xor
popa
xor
jae
ss
fsubrs
out
fistpll
mov
in
orb
and
pop
xchg
in
cmpsb
aad
and
adc
iret
jecxz
out
jmp
jmp
jmp
cmpsb
mov
stc
ret
cmp
pop
inc
cmp
in
popa
stos
cwtl
jns
scas
imul
std
and
pusha
add
mov
test
mov
leave
xchg
mov
sub
scas
insb
mov
sub
sbb
inc
mov
testb
pop
mov
nop
add
or
add
aaa
lds
sbb
daa
adc
aam
aas
mov
lea
inc
adc
mov
lds
pop
testl
mov
ss
cmp
xchg
inc
rolb
sahf
add
stc
sub
aas
adc
outsb
lea
dec
neg
jge
sub
das
cld
clc
mov
mov
lret
mov
cs
in
fucomp
enter
cmp
ja
ja
stos
cwtl
jnp
or
stos
or
push
mov
jp
lret
daa
adc
sub
jns
mov
xchg
int3
adc
or
push
aam
xchg
orb
out
es
mov
inc
jns
mov
mov
mov
cltd
adc
jmp
js
cs
test
push
mov
insw
mov
xchg
ja
insb
or
or
push
inc
arpl
pop
std
pop
sbbl
add
xchg
and
je
hlt
and
jle
addb
jnp
shll
stc
push
sub
imul
jle
mov
mov
push
push
ss
cmp
pop
pop
sub
jno
pop
mov
xchg
cmpsl
incl
fidivrs
mov
push
xchg
push
xor
jge
sbb
add
dec
lock
lods
adc
push
sti
xchg
fnstenv
adc
les
or
xor
iret
sbb
push
adc
and
mov
cmp
or
fsubrp
inc
les
repz
cmp
mov
lods
mov
daa
dec
cmp
inc
mov
add
sub
in
add
lock
sub
cmp
test
push
fsin
fsubrl
jne
or
sbbl
jmp
js
push
lret
push
lret
aam
int
insl
cmp
mov
mov
mov
jo
cmp
jnp
aaa
mov
dec
and
hlt
mov
sub
pop
mov
mov
out
inc
daa
mov
shr
insl
loop
push
addl
scas
lock
cli
and
xchg
insl
test
std
mov
lea
cli
mov
push
lret
mov
jae
mov
dec
fdivrs
dec
out
test
jb
dec
inc
lods
mov
in
ss
pop
fsub
mov
mov
xor
xor
or
cwtl
insl
push
push
adc
scas
jae
mov
ja
and
les
sahf
mov
mov
das
pop
inc
inc
repz
xchg
jo
scas
push
movsb
movsb
fdivl
jne
pop
les
jecxz
mov
push
push
jg
je
dec
jmp
xor
outsb
push
and
mov
aad
push
xchg
testb
out
pusha
inc
jae
lds
andl
out
rcrb
jge
ja
xchg
fisttpl
pop
sbb
rcrl
sahf
and
sub
inc
inc
ja
orb
jmp
mov
adc
mov
xor
dec
fildl
push
ret
adc
leave
adc
cmpsl
and
inc
push
repnz
arpl
popf
shlb
or
in
sbb
dec
dec
and
sub
sbb
push
pop
adc
popa
dec
mov
addb
cmpsb
orb
sahf
aas
fsubrs
leave
sub
or
xor
and
or
cltd
push
xchg
push
or
lds
mov
popa
movsb
popa
pop
cs
bound
push
and
dec
xchg
mov
inc
lahf
mov
jne
addr16
into
shlb
imul
inc
mov
stos
imul
inc
fists
loope
scas
lods
dec
dec
repnz
mov
adc
xchg
outsb
in
shr
sub
sbb
nop
pop
mov
and
pushf
jb,pt
es
mov
mov
inc
push
adc
aas
mov
push
int
xor
and
xchg
sbb
repz
xor
arpl
pushf
out
cmc
mov
add
call
hlt
inc
xchg
pop
andb
mov
sub
cmp
add
sbb
xlat
int3
mov
adc
mov
push
dec
xchg
ss
stos
push
fdiv
push
lret
add
mov
mov
lahf
mov
stos
sbb
daa
rcrb
mov
icebp
rcl
xchg
mov
mov
ret
and
aad
or
aas
add
js
cmpsb
clc
lods
cmp
xor
pop
adcl
addl
idivb
mov
les
cltd
xor
mov
fmulp
rcrb
dec
insb
ss
jmp
cmp
mov
add
fldenvs
xor
orb
test
pop
dec
xchg
mov
cld
popa
ret
out
xor
test
push
mov
xor
or
add
push
rolb
arpl
addr16
cltd
push
ret
pop
or
ja
fdiv
xchg
cmp
roll
mov
outsl
sbb
lret
xor
enter
add
xor
insb
jno
pop
sbb
jae
popf
jge
add
cltd
test
add
dec
xor
xor
sbb
xchg
xor
and
mov
sti
or
aad
gs
arpl
rcrl
xchg
xor
es
test
test
adc
adc
popl
outsb
cs
cmpsb
outsb
addr16
dec
in
fnstcw
sub
sbb
inc
pop
imul
cmp
jmp
popf
jnp
jno
mov
mov
lds
add
cmp
ss
inc
fsubrl
xor
lea
filds
shrb
lods
sbb
sub
repnz
mov
es
neg
out
mov
shll
add
js
ret
push
es
cmp
mov
xchg
data16
dec
xchg
xchg
add
xchg
xor
ret
pop
push
push
fwait
daa
push
fcmovb
mov
insb
and
andl
mov
adc
mov
mov
sbb
xchg
bound
adcb
test
and
cwtl
ffreep
aam
mov
std
int
iret
mov
icebp
inc
cmp
in
lock
add
xchg
daa
adc
pcmpeqd
aam
outsb
out
dec
mov
in
ss
pop
or
mov
or
mov
mov
pop
pusha
add
xchg
aad
jecxz
jb
and
mov
add
fnsave
imulb
les
enter
es
dec
xor
mov
pusha
outsl
inc
fimull
iret
cmpsb
push
xchg
lds
scas
rcrl
or
pop
sbb
jnp
or
out
pop
cmp
roll
and
outsb
js
aas
sbb
aam
xchg
outsl
loop
push
scas
clc
pop
push
xchg
mov
rcrb
mov
xor
push
fsubrs
inc
or
lret
jns
out
sub
jnp
dec
pop
shll
jge
inc
mov
pop
in
or
mov
push
pushf
fwait
cs
ds
movsl
push
adc
hlt
ds
add
adc
int3
mov
gs
test
lahf
pop
xchg
and
or
arpl
and
testb
ret
dec
or
cmp
enter
loope
sbb
add
shll
push
dec
jle
mov
mov
adc
mov
jne
lods
cmp
pop
add
testb
mov
push
outsb
pop
imul
xchg
fdivrs
fstp
push
mov
cltd
sub
js
xor
jp
shrb
and
sbb
mov
xchg
addr16
push
lret
into
push
pop
mov
notl
loopne
inc
xor
and
inc
mov
mov
dec
daa
cmp
or
push
adc
dec
aaa
dec
std
jnp
rorb
cld
popf
cmp
and
dec
fisttpl
inc
shll
rol
xchg
jg
int
fldt
test
mov
mov
lahf
cmc
sub
xchg
pop
popf
add
test
cmp
sti
es
int
inc
inc
mov
mov
dec
xchg
aad
jnp
or
pop
cmpl
push
mov
xlat
sti
pop
in
and
je
mov
cmp
mov
rorl
enter
adcl
mov
ljmp
adcb
and
cmp
gs
sbb
xchg
and
pop
rclb
cltd
mov
sahf
in
and
push
sbb
xor
sbb
xor
push
daa
xlat
sbb
add
inc
jg
in
mov
repz
pop
push
mov
sbb
jg
hlt
lret
enter
cmp
cld
test
jg
or
jnp
mov
or
dec
pop
xchg
in
rcr
adc
and
sub
fwait
out
cmp
xchg
clc
pop
bound
clc
cld
add
fwait
sbb
and
sub
imul
cmc
mov
imul
aad
sub
aas
shrl
pop
ss
std
inc
dec
xor
pop
clc
imul
scas
cld
in
loop
push
sar
add
cmp
ja
clc
lcall
xchg
cmc
mov
cmpsb
fidivrl
dec
cs
cmp
cmpsb
jmp
sbb
nop
aaa
xor
pop
push
xchg
stos
xchg
notb
lret
dec
sub
jmp
mov
insl
jp
aaa
and
mov
xchg
push
pop
sbb
and
jb
inc
in
test
jp
dec
push
or
push
adc
adc
rolb
adc
inc
dec
shll
cs
popa
decl
sbb
dec
pushf
cmp
int3
or
xchg
lcall
add
test
sub
mov
mov
subl
ret
sbbb
and
push
clc
or
mov
out
pop
jmp
popl
mov
pop
jp
addr16
jns
test
sar
shr
scas
xor
xchg
fwait
stc
xor
jae
dec
pushf
and
out
push
daa
or
mov
fdivl
mov
xchg
out
scas
rcrb
and
std
mov
lods
aad
xor
movsl
or
fisubrl
or
and
into
pushf
mov
cmpsb
sbb
jnp
and
out
fbld
call
lahf
cs
sbb
hlt
sub
cmp
dec
dec
fidivrs
push
hlt
pop
pop
xchg
test
test
sub
rcrb
ss
pop
fists
cmpsb
inc
xor
out
mov
fs
jmp
push
lea
and
mov
loop
ljmp
int
or
or
jge
sub
cmp
jae
jge
ficoms
js
rcrl
push
xchg
and
test
push
std
enter
fstps
cmpsl
add
ror
jle
sub
adc
test
inc
sbb
test
fwait
inc
icebp
loope
testl
movsb
mov
sti
daa
ds
add
movsb
jo
fnsave
push
xchg
lcall
pusha
shll
dec
je
test
aas
xor
arpl
add
nop
xchg
out
inc
add
jbe
cmpsl
add
xchg
mov
and
mov
aad
je
or
push
cwtl
sbb
je
js
out
fcoml
shrb
cli
das
sahf
cmpsl
jmp
xor
shrl
aad
push
jae
std
insb
mov
dec
lahf
jmp
jno
das
adc
mov
cmpsl
add
cmc
or
cs
jp
std
and
xchg
mov
ljmp
mov
stc
insb
push
pop
xchg
jmp
nop
pop
rcrb
mov
jmp
sub
mov
mov
pop
inc
jecxz
test
pop
dec
arpl
xlat
shlb
rcll
xchg
push
fwait
clc
xor
cmpsl
pop
je
cmc
and
or
rolb
fbstp
push
out
mov
out
popa
add
pop
fimuls
adc
outsl
sahf
or
add
mov
enter
movsl
pop
push
xchg
jecxz
btc
mov
adc
loopne
mov
xchg
sub
loop
sbb
lds
icebp
in
jno
fists
movsl
mov
mov
xor
xchg
bound
in
pop
inc
mov
fiaddl
iret
outsl
lret
iret
and
mov
mov
pop
insl
push
lea
cli
lds
jl
adc
in
pop
xchg
xchg
inc
push
fisubrs
ficoml
mov
in
rcrb
push
idivb
arpl
jmp
dec
adc
mov
and
cwtl
in
sub
js
mov
test
pushf
lods
ret
ljmp
mov
and
pop
movsb
ret
or
sub
lock
icebp
int3
int3
inc
cwtl
and
mov
or
adcb
pusha
and
lods
aaa
cmp
fldcw
rcrb
ds
add
jmp
stos
pop
mov
pop
lds
stos
cmpsb
repz
fs
or
push
repz
xor
sbb
jge
clc
into
jle
fmul
test
scas
jns
popa
outsb
push
subb
cmc
mov
std
pop
xorl
imull
jp
out
adc
rcl
jno
and
mov
movsl
jl
lods
mov
adc
popf
stos
pop
xchg
ficomps
lahf
cli
push
in
cmp
pop
cltd
pop
mov
in
xchg
inc
rcr
push
sub
dec
jmp
jns
pop
movsb
dec
shrl
sbb
or
jno
mov
fcoml
sub
ret
fcoml
fwait
pop
mov
test
push
fldl
into
hlt
outsl
fldt
rclb
jp
pop
ja
icebp
and
mov
add
dec
xor
std
inc
pop
outsl
cwtl
sbb
mov
fsubrl
xor
mov
dec
jnp
popa
gs
jae
mov
mov
lret
or
movsb
gs
xchg
mov
loop
outsl
mov
adc
push
out
xchg
cli
shlb
add
cmp
insb
push
and
hlt
sbb
add
inc
push
pcmpgtd
stos
mov
mov
lods
fld
stc
std
mov
xchg
fstpl
and
loopne
popf
outsl
or
pusha
adc
xchg
notl
xlat
cmp
hlt
test
inc
mov
insl
or
icebp
fdivr
push
fiaddl
ret
stos
dec
mov
sbb
test
mov
rclb
cs
cli
sbb
test
fcompl
jae
mov
push
xlat
sub
jl
cwtl
sti
and
xor
clc
xchg
sbb
gs
shl
test
mov
lcall
mov
mov
outsl
es
das
jb
scas
mov
sub
xor
testb
inc
clc
imul
in
aaa
subb
std
and
dec
xor
xlat
adc
mov
wrmsr
ja
sbb
push
adc
push
mov
enter
out
in
ja
pop
sarl
cmp
pop
notl
pop
fs
jbe
jns
cwtl
xchg
push
loopne
aas
add
dec
jg
cld
in
pop
addl
mov
popf
rolb
cmc
aas
rolb
rolb
shrb
lock
mov
pop
das
and
imul
data16
insl
xor
add
mov
js
pop
dec
dec
repz
loope
pop
inc
and
mov
mov
or
pop
pop
mov
dec
ss
js
jnp
pop
sahf
cmp
outsl
mov
cs
js
cmp
push
inc
test
fs
fs
sub
and
sub
in
lahf
scas
inc
jbe
cli
popa
rclb
imul
mov
std
movsl
push
mov
bound
xchg
xor
push
mov
mov
aam
mov
test
ffree
dec
add
pop
xor
push
int3
pop
rol
cmc
xchg
sub
pusha
lock
fscale
stos
movl
xchg
and
pushf
rcll
rorb
mov
xor
jecxz
mov
mov
lea
xorb
aad
adc
repz
lock
imul
add
into
mov
sub
cli
js,pn
mov
fsts
into
mov
aas
arpl
test
int
test
pusha
mov
xor
xchg
or
stos
in
ja
movsl
sub
lock
lock
out
adcb
push
cld
lock
fcomip
pop
pop
lods
sub
pop
std
push
mov
test
into
call
jnp
add
fsts
push
fisubs
inc
loop
loope
jns
das
cltd
cmpsb
shll
lea
xlat
fs
fucomip
mov
cmpsl
adc
push
xchg
testb
sete
jg
dec
das
inc
inc
out
mov
sub
aam
add
mov
push
testl
shrb
out
pusha
xchg
cmp
sbb
mov
movsl
sub
mov
push
mov
inc
xchg
adc
movsb
enter
les
xchg
int3
dec
insl
pop
in
aam
fsubrl
in
pop
pop
out
leave
lcall
xor
pop
sub
imul
out
movb
sbb
push
pushf
cmpsl
mov
testb
and
inc
outsl
sbb
mov
lea
push
in
ljmp
out
sub
mov
ret
jl
lahf
lcall
push
rorl
sbb
xor
enter
fidivrl
std
jle
out
xor
imul
out
pop
and
xchg
sbb
ss
mov
repz
iret
pop
popf
in
subb
mov
pop
jmp
inc
hlt
mov
incl
mov
pop
xchg
xchg
stos
and
cld
adc
stc
hlt
nop
orl
int
mov
mov
les
cmc
scas
mov
clc
jmp
shl
aaa
ret
or
fdivs
mov
cld
fldl
imul
lcall
lcall
cmp
ja
imul
add
mov
or
adc
sub
or
mov
sbb
cvtpi2ps
sti
je
pop
cmp
add
in
jmp
imul
xor
jb
insl
es
lret
rclb
push
add
jb
test
aaa
imul
fwait
mov
add
pop
hlt
out
mov
xchg
fimuls
inc
test
loop
jp
psubusb
test
test
sti
fcomps
mov
mov
dec
jmp
imul
jns
sbbb
pop
or
es
outsb
test
sub
and
mov
inc
or
bound
test
pushf
bnd
pop
incl
push
dec
push
push
xor
push
mov
add
mov
stos
sub
popa
inc
xchg
xchg
or
adc
push
fidivl
cmp
mov
and
push
mov
test
dec
mov
inc
mov
stc
sbb
lods
ss
test
jecxz
push
mov
lods
outsl
lods
insl
iret
mov
repnz
sahf
insb
xor
mov
out
lock
lock
push
movsb
sub
jbe
fcomps
jnp
and
ret
pop
push
xor
call
xchg
lahf
loopne
inc
xor
js
and
pop
jle
inc
push
inc
xor
cltd
aam
movsb
xchg
cmc
mov
aaa
mov
lods
mov
aaa
test
ficoml
xchg
pushf
add
out
stos
lods
call
repz
sub
xchg
in
adc
scas
fwait
sbb
dec
imul
aaa
adc
and
fistps
xor
rcrl
or
xor
mov
arpl
out
pop
sub
aam
or
lcall
cwtl
xchg
js
adc
stos
hlt
test
arpl
andl
sbb
cmp
push
push
std
sub
pop
xchg
fidivs
orl
or
push
scas
js
negb
and
cs
xorb
nop
and
fstpt
fwait
dec
arpl
adc
daa
les
and
xchg
cmp
mov
adcb
push
add
xorb
inc
loop
movsb
fsub
cmp
xchg
sub
jnp
andb
jns
mov
call
das
xor
rcll
pop
dec
clc
shr
adc
dec
push
dec
cmp
out
out
push
sbb
in
jmp
or
sub
add
in
sti
lret
addb
mov
xchg
pushf
add
arpl
xor
std
jo
or
popf
outsb
push
inc
sbb
out
inc
mov
ljmp
seto
dec
imul
mov
icebp
fucomi
push
adc
adc
mov
inc
sarl
add
ss
pop
pop
xchg
xchg
repz
fsubp
fstpt
ss
outsb
sbb
and
mov
into
cs
lods
add
andb
or
pop
es
add
or
mull
push
jmp
fxch
scas
dec
scas
rolb
fsubrl
push
adc
jecxz
and
inc
lods
ret
in
inc
std
hlt
mov
pop
div
ret
inc
mov
hlt
lahf
shlb
popl
sarb
push
lods
jge
sti
pop
data16
xchg
inc
xchg
lret
addr16
inc
dec
inc
push
das
mov
ficoml
mov
xor
faddl
rcrl
out
loopnew
dec
jmp
cmpsl
lea
jmp
movsl
loopne
lahf
mov
push
cmc
xchg
imul
xor
jns
sahf
scas
jne
ret
pop
out
cmpsb
mov
stos
divb
sbb
out
rclb
mov
inc
push
movsb
inc
push
add
and
add
sbb
add
xchg
clc
ret
adc
leave
or
out
pop
cmp
pop
mov
es
xor
daa
or
roll
mov
mov
hlt
adc
or
xchg
ja
lahf
mov
jno
xor
mov
add
clc
pop
enter
lock
dec
dec
sbb
sub
popa
test
sub
ds
mov
pop
hlt
shlb
movsl
mov
xor
test
stos
fucom
jmp
fisubrl
retw
fmul
sub
push
inc
inc
aaa
cmp
xor
mov
inc
pusha
popf
addr16
sbb
lods
sub
sbb
push
and
jg
stos
in
aaa
xchg
mov
bound
jae
mov
aaa
push
fcompl
popf
jp
aaa
sub
add
fmull
mov
jmp
ret
test
or
aad
into
jp
lret
mov
or
push
fcoml
cs
jnp
mov
out
cmpsl
inc
aas
outsb
outsl
out
cmp
daa
outsl
adc
mov
into
sub
adc
mov
or
inc
decb
lahf
popf
sub
sub
mov
std
dec
pop
or
popa
sub
add
fnstcw
subl
push
push
jne
add
imulb
or
das
scas
test
aas
and
sbb
mov
fxch
data16
repnz
ret
cwtl
in
push
shrb
imul
sahf
jg
in
cmp
jne
cmp
inc
lret
out
mov
or
dec
int3
pushf
std
in
je
sbb
push
addl
xor
push
loope
das
mov
xor
inc
test
jg
add
jmp
sbb
mov
mov
jno
inc
gs
inc
ficomps
mov
test
int3
xchg
mov
fadds
nop
mov
dec
sahf
stos
imul
lds
push
push
cmpsb
mov
xor
lds
push
fnstsw
xor
ja
fisubs
mov
and
sbb
shlb
push
sbb
arpl
dec
shll
in
subl
pop
xchg
mov
push
jns
mov
ljmp
jmp
mov
ret
lcall
ss
mov
mov
and
sub
adc
lret
nop
lcall
lahf
adc
xchg
inc
scas
std
insb
imul
mov
xchg
fcomip
xor
lahf
push
loope
in
xor
push
cmp
pop
outsl
push
lahf
cmpsl
call
pop
je
divb
adc
mov
pop
mov
bound
push
mov
insl
icebp
popf
pushf
xchg
mulb
dec
jnp
mov
dec
lock
fs
ja
fmul
dec
jecxz
cmp
inc
ror
mov
clc
xorb
fcomip
jae
sti
dec
ds
or
dec
pop
jp
shlb
sbb
xchg
inc
sbb
inc
mov
iret
test
loope
or
repnz
mov
push
fwait
ljmp
xchg
loop
shl
insb
sbb
ljmp
pop
push
dec
std
enter
icebp
movsl
aam
jecxz
jae
aam
add
add
int3
jno
leave
push
xchg
lock
adc
lea
into
loope
cmpb
xchg
push
ljmp
sub
arpl
adcl
shrb
mov
jl
push
sub
out
rorb
fmulp
add
repnz
cmp
je
xchg
out
lods
sbb
bound
xor
movl
pop
call
push
xchg
mov
test
xchg
xchg
out
loop
leave
push
jno
xchg
nop
stos
push
jne
insb
icebp
push
sahf
pop
gs
pop
outsl
fcomp
addl
pop
enter
jl
lds
out
adc
out
test
mov
lahf
adc
jl
jle
packuswb
mov
sub
pop
ffree
lret
sbb
xlat
dec
jp
dec
arpl
cmp
sbb
stc
jo
test
xchg
insl
ja
dec
es
xor
jmp
mov
mov
mov
test
imul
mov
cmp
shrl
shrl
arpl
mov
mov
mov
imul
sbb
adc
add
push
mov
cmp
mov
mov
pop
loop
add
jnp
in
icebp
pop
inc
stc
and
jmp
dec
mov
enter
insb
js
in
int
test
mov
xchg
or
add
shlb
lret
push
ss
std
dec
push
mov
mov
mov
icebp
ss
inc
dec
stos
jg
xchg
add
fisttpl
xchg
dec
inc
das
pop
push
movsl
or
fdivp
lahf
add
stos
int3
movsb
push
dec
test
fsubs
dec
or
sbb
int3
faddl
subb
cmpsl
sub
cmp
cmpl
dec
lret
lods
movsb
les
sbb
mov
out
xchg
mov
fs
aaa
mov
jp
mov
cmp
dec
negb
mov
inc
sarb
push
rclb
xor
enter
pop
cmp
in
mov
pop
push
jbe
sbb
loopne
cmpsl
cld
dec
and
mov
orl
lret
xlat
sub
add
sub
call
fs
bound
testb
jp
shlb
fnstenv
adc
rcr
mov
and
mov
push
lahf
fisubl
sbb
mov
xchg
inc
outsw
shll
jo
cmc
cmc
push
cwtl
lahf
xor
movsb
mov
ja
sub
sti
insb
je
arpl
pop
jno
sub
lea
mov
std
and
push
adc
adc
imul
sub
out
pop
sub
cmpsl
xor
scas
mov
test
pop
dec
ss
mov
das
add
and
add
sahf
dec
xor
stos
adcl
lret
movsl
popa
mov
adc
sub
jae
sub
loope
out
mov
push
cmc
sti
pop
out
out
pop
mov
add
xor
dec
add
cmpsl
adc
out
push
call
sbb
inc
rclb
sti
loopne
fnstsw
insl
fsubrl
sti
sahf
out
les
into
pop
dec
mov
push
outsb
mov
xor
sbb
int3
xchg
push
inc
out
loop
loopne
jae
mov
insl
dec
popf
mov
test
lock
inc
xor
push
add
inc
clc
ja
sar
addr16
fstpl
sbb
push
mov
and
test
push
inc
xchg
call
xchg
sahf
cmp
inc
xor
jbe
pop
cmpsb
or
cmp
dec
sbb
xchg
int3
sahf
rcll
push
js
mov
lahf
shlb
sarl
out
or
jo
mov
or
in
add
fstpl
push
sbb
pop
insb
xor
cs
jno
outsb
xchg
int
sbb
add
mov
pop
xchg
jb
mov
gs
jl
aas
adc
adc
rcl
adc
push
lret
lods
or
popa
je
add
mov
mov
or
imull
cltd
xchg
sbb
cmp
test
inc
pop
mov
imul
push
iret
cmc
rcl
mov
mov
adc
fsubrl
adc
sub
pop
jp
pop
inc
in
cmp
add
jle
jl
and
lods
cwtl
into
dec
cli
adc
in
jae
sahf
loope
ja
jge
adc
push
add
ja
cmp
fists
daa
adc
test
dec
fnstenv
sbb
stc
adc
gs
mov
jg
cmp
mulb
mov
fbld
mov
mov
fnsave
stos
and
mov
je
stos
xchg
xlat
sbb
xlat
in
add
mov
fnstsw
push
mov
mov
dec
cmpsb
and
inc
jae
jo
push
stc
mov
sbb
mov
mov
scas
clc
and
mov
xchg
dec
mov
jb
add
xor
xorl
shrb
inc
imul
pop
xchg
push
jbe
xchg
jne
jns
mov
filds
cmpsl
xchg
pop
mov
inc
cmc
jne
bound
scas
adc
cmp
mov
dec
ret
mov
rcll
xchg
add
pusha
or
sarb
add
out
rorb
adc
les
cmp
cmp
mov
mov
mov
shl
dec
hlt
test
jmp
sub
jmp
push
cltd
and
mov
mov
inc
stc
test
mov
push
mov
or
stos
pop
fnsave
or
adcb
ss
out
mov
or
mov
sbb
pop
ret
push
lock
daa
test
cli
idivl
inc
xor
fadd
xchg
enter
cmp
pop
fsubrs
mov
icebp
mov
mov
push
add
out
out
adc
sbb
jmp
push
push
jbe
add
mov
fistps
adc
jo
xor
push
jbe
inc
cmp
ja,pt
lock
outsb
xor
inc
sub
mov
stos
sbb
fstpt
outsb
mov
xor
outsb
pop
inc
es
ss
pop
ret
ret
jne
addr16
pushf
call
mov
inc
fs
push
or
mov
fildl
shlb
pop
push
add
ret
jle
dec
gs
test
pop
pop
divl
jge
mov
inc
outsb
jo
imul
xor
cmpsl
popa
or
fwait
out
jbe
push
jg
shlb
popf
pop
popa
fldl
je
pop
aas
push
and
ss
outsb
gs
xchg
lahf
mov
repnz
sbb
lret
pop
jl
pop
and
jne
pushf
divl
aaa
insb
loop
inc
jae
and
loopne
test
subb
inc
push
leave
jbe
pop
lds
and
iret
jmp
mov
shll
js
fildl
adc
lock
test
mov
jbe
push
adc
arpl
mov
push
xlat
lea
inc
out
ljmp
outsb
int
shll
stos
xchg
mov
ret
outsl
add
pop
xlat
and
or
cld
inc
inc
xchg
sbb
out
andb
xor
jo
out
mov
push
out
arpl
outsl
sahf
and
xchg
jno
fsubr
cli
ljmp
adc
xlat
cs
jecxz
mov
mov
xchg
clc
lea
dec
lret
dec
mov
dec
push
loop
xor
push
out
inc
int
loope
iret
in
rorl
loop
rcll
xchg
cmp
xor
inc
fbld
in
mov
out
shl
or
pop
aam
mov
shlb
lret
test
xor
xchg
nop
fistl
push
adc
imul
call
mov
inc
xchg
add
loope
jecxz
xchg
rolb
push
pop
mov
sbb
fisubrl
xor
flds
jb
dec
push
sub
add
cmpl
sbbb
cmp
fsts
jnp
dec
sti
inc
mov
mov
std
je
xor
jb
mov
adc
sub
inc
jo
and
pop
xchg
cs
push
or
scas
xchg
aad
in
movsl
cltd
jno
cmpl
movsl
in
mov
and
lods
aaa
mov
les
movsl
movsl
fadd
insl
arpl
jge
xchg
cli
mov
loopne
mov
orl
mov
ds
mov
xchg
xchg
fwait
sub
shl
jbe
pushf
rolb
xor
into
rcrb
leave
int3
into
adc
icebp
add
adc
orb
imul
push
pusha
outsl
and
divb
sti
jge
sub
mov
sub
and
add
mov
push
sub
test
stc
cmp
lret
xchg
xchg
mov
mov
push
test
test
pop
daa
pusha
add
adc
sbb
and
test
cli
fisubrs
pop
or
push
call
dec
rcrb
and
in
dec
in
sub
rclb
adc
nop
add
xor
pop
int
dec
dec
outsl
mov
mov
ja
dec
es
cmp
pop
data16
outsl
hlt
fdivrl
inc
and
sub
push
mov
dec
push
ret
sbb
push
js
mov
sbb
xchg
mov
into
les
and
add
jnp
mov
sub
clc
sarl
scas
loope
iret
call
mov
add
dec
ljmp
fwait
out
pop
inc
repz
add
or
adc
xchg
mov
add
cmp
je
into
push
stos
add
repz
insl
sbb
mov
jae
mov
inc
jae
in
shrb
cmc
xor
sub
stos
inc
scas
push
in
push
shl
push
push
sub
cmp
outsb
jmp
les
pushf
mov
xor
dec
inc
out
and
test
and
mov
add
inc
incl
push
add
loop
jae
test
push
jae
mov
pusha
lahf
daa
xlat
pop
rcll
mov
inc
adc
push
dec
or
push
adc
mov
ret
push
dec
subl
sar
mov
sbb
loopne
mov
movsl
add
mov
ja
push
mov
jmp
popa
adc
xor
loopne
mov
movsl
mov
pop
shl
lahf
jg
cmp
mov
scas
and
fidivs
ret
mov
push
adc
test
mov
xor
inc
stos
jp
js
add
js
outsl
je
sti
jecxz
xchg
push
out
fistps
cs
negl
repz
fxch
or
cmpsb
daa
adc
call
xchg
ret
movsl
popa
xchg
stos
push
and
aad
adc
mov
aad
xchg
cwtl
divl
cmc
js
push
test
cmp
sbb
mov
or
popf
jb
pop
push
pop
and
cmp
mov
es
ret
cmp
adc
out
nop
or
push
mov
insb
cltd
enter
ret
cmp
test
mov
cli
cmp
movsl
clc
mov
mov
sarl
lods
shll
cmpsl
xor
scas
add
fcoml
push
dec
lods
jmp
addr16
jne
dec
xor
xchg
scas
add
push
mull
mov
inc
xchg
out
stc
enter
sub
fadds
ss
and
push
lea
ljmp
sti
push
cld
mov
xchg
ja
and
push
push
sub
shrl
movsl
clc
pop
sbb
push
jg
dec
pop
fistpll
es
and
mov
fisttps
xlat
adc
movsl
cmpsl
arpl
lret
inc
sbb
dec
dec
loope
dec
and
cmp
ja
pop
inc
rclb
cmp
jmp
jno
xlat
lods
icebp
daa
aam
lcall
je
xor
xor
and
mov
mov
ret
sbb
repnz
mov
ljmp
lods
pop
push
cwtl
jnp
int3
inc
push
and
jns
testl
or
divb
pop
test
push
mov
das
pop
inc
jecxz
xor
add
lds
sbb
in
into
xor
mov
xor
cmp
scas
jns
iret
orl
push
arpl
inc
cmp
dec
imul
or
sub
push
lahf
dec
or
cmp
fwait
add
cmp
lahf
mov
mov
lods
xchg
mov
lods
add
push
or
jne
loopne
mov
mov
cmpl
xor
sub
cmp
mov
mov
mov
mov
dec
sbb
lods
aam
in
fcoml
jne
lret
push
fcmovb
test
fdivs
push
push
fldt
insb
cmp
jb
or
stc
lahf
repz
xor
insl
and
popa
mov
mov
mov
cmp
mov
jns
inc
or
adc
add
rorb
aaa
lahf
jns
add
add
fs
loop
lods
repz
or
in
std
loop
rcrb
test
mov
sub
add
aad
loopne
in
inc
hlt
inc
xchg
mov
sub
mov
stos
xor
inc
push
lcall
xchg
add
negl
pop
mov
aam
das
out
pop
loope
add
rcll
inc
pop
push
lods
out
stos
arpl
adc
xchg
mov
cli
shlb
mov
movsb
shll
rorb
push
push
mov
push
pop
push
dec
push
dec
mov
addb
in
mov
add
mov
mov
push
insb
add
test
fidivrl
add
testb
cmp
fnstcw
lds
inc
rcrl
jae
sub
pop
cli
push
cli
daa
ret
notb
scas
sub
cmp
mov
pop
sub
fistps
or
rorb
xor
pushf
mov
mov
lcall
jge
pop
lret
push
mov
pusha
jnp
xchg
cmpsb
inc
addps
rep
call
jecxz
mov
cli
and
rcll
hlt
pop
int3
xorb
push
adc
mov
add
mov
stos
sbb
or
lea
mov
scas
push
xor
sub
test
mov
cmpsb
sahf
cmpsb
xchg
sbb
loope
int3
shr
lret
jle
mov
movsl
cmp
ds
push
inc
add
dec
leave
jle
negl
roll
cmp
push
imul
ret
sahf
mov
shlb
jl
test
jle
gs
js
shll
mov
push
movsb
pop
push
or
and
mov
insl
inc
je
cmp
or
mov
and
aad
cmp
pop
jmp
lret
inc
sub
jl
and
xchg
outsb
jns
mov
push
mov
pop
xchg
lock
push
sub
faddl
repz
js
stos
jmp
xor
ja
shld
insl
lcall
jno
inc
outsb
mov
adc
jb
pop
xchg
scas
stos
mov
add
push
inc
jae
ret
cmpsl
stc
mov
dec
inc
xor
lret
push
fmul
dec
dec
fwait
jbe
mov
inc
movsb
mov
and
lods
jge
inc
and
dec
roll
mov
mov
add
push
mov
arpl
in
xchg
sub
sbb
mov
push
int3
mov
ret
cmpb
mov
loope
dec
sarb
mov
lea
dec
cmc
mov
push
sarl
mov
mov
in
jg
cli
lahf
mov
xlat
push
adc
popa
pop
ret
or
scas
mov
lock
rcr
pop
dec
mov
dec
push
adc
rcrb
mov
adc
adc
adc
insl
js
mov
dec
pop
into
jp
sarb
mov
inc
sub
sbb
movsb
xor
mov
shrl
mov
notb
nop
xchg
and
jae
gs
adc
fmull
in
lods
inc
pop
xchg
add
lcall
in
jno
not
push
sbb
stos
jnp
pop
fistl
inc
xorl
push
test
mov
imul
xchg
sbb
mov
shrb
insb
cmp
cmpsb
fisubrl
fsubr
mov
or
sbb
mov
mov
lds
jle
icebp
adc
inc
mov
push
and
sti
sbb
out
cmp
jg,pt
push
das
jns,pt
sahf
sbb
dec
lds
add
or
or
pop
int3
mov
leave
xor
jae
add
mov
sub
jle
mov
ja
arpl
xchg
cmpsb
lods
imul
add
mov
dec
test
xchg
fnstenv
push
and
pop
jecxz
mov
cmp
jns
leave
addr16
jg
shl
int
jne
xor
sbb
jne
fsts
sbb
out
and
inc
lea
nop
and
pop
jmp
test
push
aas
sbb
dec
xor
in
mov
adc
cmp
icebp
fisttps
mov
cmc
stos
into
sbb
shrb
arpl
cmp
mov
adc
lret
sbb
pop
sub
ds
inc
xor
aaa
aaa
sbb
in
iret
push
cmc
jmp
movntps
iret
leave
shlb
subb
adc
xor
push
mov
mov
mov
adc
repnz
ljmp
xchg
fldenv
pop
cli
in
bound
rolb
sti
in
mov
sub
or
repnz
mov
rcll
outsl
mov
negl
xrelease
pop
mov
or
sub
sbbb
lock
addr16
xchg
hlt
shlb
in
cmp
test
jns
hlt
mov
cmp
aaa
add
jno
and
sbb
imul
cltd
pop
popa
pusha
xorb
xchg
rorb
mov
pop
sub
leave
out
int
or
pop
or
push
pop
pushf
fcompl
and
stos
xchg
mov
mov
loop
shll
movsl
mov
cwtl
cwtl
push
std
or
jl
adc
jno
idivl
in
pop
push
popa
orl
lret
dec
sub
scas
xchg
or
mov
mov
jp
and
inc
stos
icebp
adc
add
xchg
or
inc
add
fwait
xor
lea
push
int
jmp
mov
mov
pusha
lds
mov
scas
mov
adc
clc
filds
repnz
push
pop
dec
sbb
pop
sahf
jecxz
es
aam
push
nop
xor
aad
hlt
add
pop
xchg
cmpsl
inc
cmpb
lock
mov
mov
mov
insl
add
mov
push
mov
xorl
mov
xor
sub
xchg
xor
push
mov
or
xchg
jo
mov
daa
leave
mov
xorl
fs
jp
insb
push
imul
mov
pop
push
imul
xchg
cmp
sti
or
aaa
jmp
jno,pn
cmc
leave
xchg
xor
mov
jne
fucomp
xor
test
cmp
xchg
fs
push
or
sbb
sarb
jmp
lock
pop
cmpsl
ret
xchg
out
jl
jl
push
pushf
test
test
ret
ljmp
inc
notb
add
xchg
or
sub
test
jmp
push
adc
ljmp
ds
mov
jmp
jle
jns
mov
adc
shlb
sti
iret
mov
jb
roll
mov
adc
inc
insb
jg
fs
cmp
mov
dec
cmpsb
or
mov
mov
pop
or
pop
sahf
getsec
sbb
xor
mov
pop
nop
loopne
hlt
adc
dec
xchg
fcoml
jl
int
xchg
adc
xor
add
inc
add
add
idivl
xor
pop
sbb
cmp
cmc
or
and
leave
out
add
jno
cwtl
pop
ds
lret
sarb
rol
adc
pop
scas
pop
lock
das
mov
movsb
push
xchg
pop
dec
shl
test
mov
inc
xor
popf
loopne
scas
inc
and
jno
les
and
clc
xor
rolb
push
movsl
lcall
outsl
das
add
stc
arpl
inc
fnstsw
sub
cs
pop
ror
jo
stos
ljmp
pop
inc
jno
mov
mov
mov
or
xchg
adc
jae
out
dec
pop
subl
push
stos
mov
jmp
ror
jle
call
lcall
cmpsl
xchg
pop
scas
xchg
push
xor
inc
push
and
lcall
loope
fildll
pop
jmp
loop
mov
arpl
add
insb
sbb
pushf
imul
daa
push
and
arpl
repnz
xchg
mov
je
jne
dec
dec
push
clc
inc
and
sbb
push
daa
adc
hlt
xchg
movsb
sub
jmp
cs
push
add
and
cmp
inc
lea
dec
or
pop
lds
sbb
dec
das
cmp
fs
jle
mov
xlat
out
inc
fadds
in
mov
sub
stos
push
gs
pusha
iret
sbb
dec
lcall
jge
rcrb
sarb
xor
stos
pop
int
pushf
or
xchg
daa
xor
test
pop
jnp
es
aaa
or
add
mov
sbb
repz
pop
fs
in
inc
sub
add
in
loope
in
es
idivl
popl
push
jl
xor
push
movsl
add
aam
and
jg
pop
sti
mov
pop
repnz
repnz
cmpsb
lods
and
mov
adc
xchg
movsb
das
popf
addb
stc
dec
loopne
lds
or
mov
sub
mov
inc
ja
push
xchg
fcoml
out
inc
pop
jp
dec
das
mov
cld
xchg
xchg
mov
push
xor
mov
cli
sub
rcl
push
imul
mov
adc
stc
es
leave
and
jle
sti
or
pop
call
rolb
adc
arpl
clc
push
outsb
outsb
xor
fiadds
sub
or
mov
es
add
mov
sbb
and
mov
sbb
fisubs
push
mov
push
iret
sahf
mov
xchg
mov
sub
loop
mov
mov
mov
lock
mov
inc
pop
adc
jl
or
scas
jle
insl
cmpsl
xor
cld
inc
rcrb
add
cmp
xchg
out
sub
add
or
adcl
out
jns
mov
lods
or
mov
out
inc
ret
push
imul
insb
push
aad
xchg
xchg
rorb
ret
les
je
adc
sti
and
xchg
xor
sahf
sub
adc
daa
arpl
cmc
loope
push
in
adc
pop
and
out
pop
aaa
hlt
ja
mov
pop
arpl
xchg
in
sbb
push
outsb
xor
hlt
adc
or
and
insb
add
ret
scas
jbe
ret
jge
adc
sbb
fisttpll
icebp
adc
icebp
pop
stos
mov
push
negb
iret
mov
jb
jne
lds
xchg
cmpsb
rcr
pop
mov
sbb
icebp
xor
rcrb
cmp
sub
xlat
dec
sub
mov
gs
std
notl
test
mov
add
mov
push
mov
mov
push
ficoms
or
inc
outsl
sti
lahf
adc
es
shlb
jb
outsb
push
mov
sti
cltd
out
movsl
je
lretw
pop
mov
clc
cmpsl
aad
mov
pop
sbb
cmpsl
int3
sti
pop
add
dec
xor
jo
test
mov
xor
cmp
hlt
icebp
sti
std
inc
jge
ret
fidivl
call
repnz
inc
mov
pop
xchg
sahf
loopne
outsb
loop
inc
pop
xlat
dec
lock
cld
pop
mov
cld
ror
sbb
cs
mov
mov
push
ds
adcb
dec
sub
mov
in
sahf
cmp
inc
aad
mov
movsb
fstpl
jmp
mov
sub
nop
xchg
pop
iret
fdivrs
mov
sub
pop
sub
push
jno
pop
xchg
sahf
call
and
jecxz
pusha
stc
dec
adc
or
mov
ret
sub
inc
mov
je
sub
daa
pop
push
leave
xchg
add
shr
sub
dec
test
inc
add
dec
sub
les
outsb
fcomip
sbb
fmulp
inc
pushf
out
mov
out
or
sahf
adc
jne
inc
mov
xchg
jbe
dec
adc
adcb
mov
popf
cmp
sahf
mov
ss
sti
cmpsb
mov
movsb
fwait
adcl
push
mov
lds
jns
repz
cmp
movsb
xor
ret
jge
sahf
cmc
cmp
push
mov
mov
push
mov
pop
lret
and
add
pop
or
inc
iret
movl
mov
out
add
sub
adc
inc
push
jae
jmp
xor
leave
decb
gs
int3
lock
or
xlat
cmpsb
pop
in
push
xlat
cmp
mov
int3
xchg
push
in
add
xchg
or
test
push
aas
ljmp
fstps
jge
mov
aad
mov
xor
add
push
adc
xor
or
inc
jbe
rol
in
and
push
jl
inc
pushf
lcall
in
or
xchg
clc
pmulhuw
ds
sub
iret
bound
sbb
and
sbb
int3
sbb
jno
insl
dec
cltd
loope
push
popa
mov
sub
dec
scas
jecxz
sub
jns
pop
loope
cmc
adc
or
scas
mov
jmp
dec
jmp
push
sbbl
fiadds
or
and
fcmovbe
into
mov
ret
in
inc
xor
dec
inc
test
mov
lock
sbb
popa
insb
pushw
cmp
mov
lods
out
pop
cwtl
sbb
jnp
push
stc
fs
add
out
loope
insb
in
cmp
rcpps
sbb
aad
mov
xchg
cmc
lahf
int3
ficoml
lea
aaa
or
jp
xor
dec
mov
pop
outsb
icebp
ret
sub
idivl
cmp
jns
test
iret
sub
in
xchg
fsub
xor
mov
pop
insl
stos
mov
insb
ret
jle
rep
icebp
cmp
push
fsubrl
cwtl
jae
jle
add
pusha
jl
out
pop
sti
das
xor
push
inc
insb
cmp
enter
inc
outsl
dec
mov
jo
pop
div
pushf
mov
fistpll
mov
or
mov
in
outsl
xchg
xor
ret
xor
xchg
add
jecxz
push
xor
xor
leave
lahf
das
iret
mov
outsb
push
mov
mov
pop
fwait
push
jg
out
push
xchg
jecxz
xchg
dec
mov
cmpb
cmp
sub
pop
xlat
nop
xchg
push
mov
sub
or
mov
add
inc
icebp
sbb
loope
aad
outsb
push
jae
pop
cmpb
push
test
adcb
pop
push
mov
jl
cs
inc
sbb
hlt
jmp
movd
pop
imul
ficoms
and
pop
dec
loop
xchg
sbb
popa
popf
mov
stos
push
push
push
in
jmp
mov
test
int
or
fcoml
push
cmp
cmc
dec
outsb
lock
aaa
adc
iret
jmp
sahf
cwtl
fildll
stos
mov
pop
icebp
fisttps
push
dec
mov
imull
sub
adcb
xchg
out
or
repnz
sbb
stos
outsb
sub
aad
outsb
or
or
int3
adc
in
mov
push
lahf
fs
ret
add
imull
sbb
pop
in
ja
mov
mov
jo
jge
les
push
xor
push
cmp
mov
flds
sub
adcb
out
mov
pop
popf
sub
test
push
sub
adc
cmp
jns
and
xchg
dec
pusha
jmp
cli
rcr
les
pop
sub
pop
push
data16
roll
jb
mov
cs
incl
push
and
cmc
cmp
scas
int
sub
and
jae
stos
repnz
jge
push
sbb
mov
pop
gs
mov
bound
adcl
adc
push
movsl
shl
xor
test
popa
add
fwait
add
pop
push
xchg
add
add
push
fcoms
sub
clc
cltd
push
and
in
loopne
ret
cltd
setge
lahf
mov
popa
dec
xchg
mov
stos
mov
insl
imul
adc
push
xchg
popa
dec
sbb
pop
sub
inc
jmp
rcrb
sub
in
mov
outsl
pop
scas
mov
push
pop
pop
inc
sbb
xchg
jecxz
jno
jbe
cwtl
mov
test
popf
push
jnp
dec
push
lahf
icebp
mov
mov
lock
and
xchg
sbb
add
sahf
mov
jae
mov
mov
pop
sarl
data16
pop
mov
lcall
or
dec
xor
cmpsb
dec
rep
js
mov
insl
mov
addr16
inc
xchg
push
or
adc
out
pop
xor
in
mov
mov
daa
or
enter
push
and
rcll
xor
inc
mov
fwait
lcall
cmp
fcoms
dec
lret
cltd
out
icebp
jl
sti
dec
pop
push
popf
stos
xchg
jo
mov
xchg
push
sub
popf
jp
xchg
push
loopne
fwait
push
mov
int
int3
xor
fwait
sbb
push
cli
icebp
dec
push
lds
lahf
push
sub
jo
out
sub
repz
lahf
xor
sarb
xchg
shl
rcr
sahf
mov
pusha
jmp
cmp
in
jo
sub
inc
ret
movsl
sarb
fs
shll
test
cmp
cmp
adcl
jle
or
fnsave
cmpsb
popf
mov
pop
jae
or
sub
sub
insl
push
jns
jbe
xchg
ss
mov
xlat
das
xchg
mov
push
pop
out
xor
mul
xor
dec
loope
out
aam
into
das
pop
pop
inc
fisubl
clc
push
jl
jle
in
cwtl
out
xchg
loope
mov
fldenv
and
movsl
addr16
xor
xor
push
sub
nop
and
pop
inc
mov
es
ret
lcall
mov
jne
test
sbb
cmp
xor
jb
call
fcmovnu
sbb
loop
int
jns
cli
lret
jp
rcl
jno
sub
fcomps
scas
orl
add
adc
push
or
pop
cmpsb
cmp
adc
pop
adc
popf
loope
sbb
and
and
xchg
sub
xchg
xor
mov
fwait
push
jp
and
enter
xchg
outsl
adc
cld
dec
inc
jge
roll
sbb
sti
push
mov
fldenv
pop
mov
xor
sbb
sub
or
cld
mov
rol
icebp
push
imul
mov
call
mov
pop
ljmp
out
jmp
and
mov
mov
gs
push
lcall
push
jne
orb
popf
into
int3
out
adc
int
dec
outsl
jl
pop
sbb
les
cwtl
mov
inc
psrlq
xchg
loopne
les
xor
fists
and
negl
in
jmp
outsb
jmp
popf
xchg
call
xchg
sub
push
push
xor
adcl
test
test
je
mov
test
inc
inc
or
push
loop
leave
inc
movsl
test
sbb
push
mov
add
xchg
dec
movsb
jns
jmp
enter
int3
cmp
jmp
xchg
jmp
mov
mov
insl
jg
mov
and
insb
xchg
pop
mov
dec
xchg
mov
int
iret
call
lock
test
fwait
ret
ret
sti
stos
push
insb
jmp
es
data16
lds
out
mov
pop
rorl
jge
add
jnp
add
xor
jbe
mov
adc
add
xor
push
dec
imul
je
je
insb
or
call
loop
add
addb
dec
sti
or
sbb
pop
xchg
ret
add
or
stc
jmp
xor
pop
rclb
inc
and
rol
roll
cmp
jmp
iret
pop
nop
je
xchg
mov
cmp
scas
movb
mov
sti
jno
lock
shrb
lock
inc
or
popl
ret
movsb
sbb
jmp
mov
lcall
push
lret
dec
addl
das
adc
aam
or
push
repz
xor
push
into
mov
jmp
loopne
fs
in
pop
imul
push
push
repz
sbb
pop
test
mov
in
xchg
scas
lods
or
push
test
pusha
xchg
frstor
jl
orb
sub
add
loopne
loop
out
mov
mov
orb
in
cmp
sahf
inc
pushf
mov
push
pop
add
xlat
add
mov
or
fidivrl
mov
testl
lds
jle
mov
test
rcrb
out
fcos
cmp
loop
aad
jge
push
pop
jo
and
xchg
xor
inc
fbld
xchg
dec
and
daa
dec
dec
cmp
mov
jmp
hlt
cmp
dec
loop
xor
xchg
xchg
mov
pop
imul
mov
pushf
inc
xchg
sbb
and
aas
out
adc
push
test
loope
adc
mul
movntq
push
stc
repnz
divl
add
and
outsl
push
pop
sbb
fs
ds
out
sub
adc
adc
jecxz
je
dec
dec
sbb
stos
popf
or
push
rcrl
dec
test
jno
cmp
lds
arpl
lock
out
dec
inc
cmp
les
in
cmc
fisttpll
nop
pusha
cmpsb
ljmp
inc
shll
sub
lea
jp
int
test
pop
in
mov
sub
rcrb
ss
movsb
js
add
sbb
rcll
call
mov
insb
xor
fcmovnu
aad
je
inc
fdivr
inc
aaa
jne
push
sub
sbb
dec
in
lods
das
xor
jge
cmpb
arpl
imul
lods
jmp
mov
jp
xor
pop
fiaddl
or
leave
push
dec
fwait
int3
pop
das
mov
icebp
xchg
sub
cmp
xlat
pop
rorb
mov
sarl
insl
adc
mov
pop
gs
fdivrs
notl
icebp
fiadds
and
mov
xor
loop
jnp
pop
cmp
pop
push
pushf
outsl
xchg
imul
stos
or
pop
push
jb
jns
lcall
cs
jecxz
push
shl
inc
mov
xchg
or
xor
test
jmp
loop
mov
call
xchg
test
dec
repnz
mov
scas
pop
add
pop
lods
cld
out
es
int3
mov
push
lcall
int3
mov
and
call
push
sub
add
loop
and
xor
mov
daa
xchg
mov
push
test
imul
loopne
adc
subl
inc
test
mov
sbb
sub
pop
in
xchg
stos
stos
jle
mov
push
mov
ss
fs
inc
lret
mov
jae
xlat
push
sub
cli
bound
cltd
push
cltd
push
pop
sub
and
fbld
pop
in
dec
jnp
pop
jno
jp
jecxz
repz
movl
jmp
and
push
dec
push
adc
xchg
dec
mov
adc
dec
hlt
test
leave
cwtl
pusha
test
xchg
mov
test
in
imul
popa
sbb
das
das
int
faddp
xor
add
scas
pushf
dec
mov
mov
mov
out
outsb
jg
mov
mov
stos
sub
push
repz
dec
lret
into
or
adc
rcrb
cmp
es
jno
std
rcrb
shlb
rorb
cmc
mov
daa
aad
daa
xor
shr
or
inc
ja
inc
test
mov
dec
sub
cmp
sti
mov
push
lcall
cld
cmp
fistl
in
icebp
gs
add
test
and
andl
bnd
cmp
lret
or
pop
inc
mov
pop
pop
rclb
xor
mov
fcompl
mov
or
stc
mov
or
sti
fstpt
add
inc
bound
mov
mov
pushf
repz
sbb
aas
jns
jp
hlt
xchg
mov
xchg
push
pushf
mov
or
push
popa
cld
dec
divl
sbb
rcrl
cltd
gs
and
adc
pop
sub
jmp
lea
lds
xorl
mov
je
pop
dec
xchg
imul
jle
fcoms
push
or
add
xchg
in
ss
rcll
cmp
js
or
adc
mov
daa
out
sub
andl
fsts
lcall
inc
or
mov
into
scas
and
ljmp
jne
and
stc
fbld
push
jge
lods
leave
xchg
pusha
push
pop
mov
adc
out
ds
and
stc
and
push
jle
mov
xorl
and
movsl
jno
xchg
jno
add
pop
push
mov
add
xchg
popa
mov
sbb
pop
pusha
xor
mov
cld
pop
mov
stos
bound
jb
insb
test
ss
adc
xchg
mov
mov
sbbl
jecxz
ret
ja
cmp
fstps
stos
pop
jecxz
fs
pop
fidivrs
data16
jecxz
aaa
lods
ds
pop
xor
cmp
lcall
pop
or
sbb
popa
pop
shll
iret
xchg
add
dec
adc
out
mov
adc
pop
rcll
push
xchg
iret
stos
cmpsl
pop
jg
adc
rcrl
xor
push
scas
adc
test
sbb
aad
mov
clc
xchg
test
out
jle
sub
cmc
cltd
pop
mov
popl
jge
sbb
cmp
out
jbe
shrb
in
sub
xchg
xchg
jnp
lock
push
aad
in
push
out
aad
push
add
cmp
jnp
sahf
adc
test
jg
icebp
jecxz
enter
sbb
adc
adc
out
xor
ds
xor
movsl
or
mov
or
dec
imul
xor
popl
xchg
mov
sub
in
cmp
xchg
mov
jbe
cmc
push
mov
cli
out
mov
inc
xchg
inc
je
sub
adc
movsl
ffree
sbb
fwait
cmp
cs
outsb
mov
enter
pop
mov
pop
or
inc
fyl2x
lcall
cmp
or
sub
cmc
pop
jg
xchg
movsb
insb
inc
xor
jmp
mov
movsb
loope
outsb
movsl
repz
imulb
push
cwtl
jecxz
mov
loop
adc
inc
cmp
jbe
xor
push
xchg
sbb
sti
repz
lar
popa
jb
xor
insl
xchg
das
out
aaa
jb
cmp
int
out
adc
dec
jno
jge
loopne
add
stc
filds
sahf
stc
mov
push
dec
gs
ret
mov
sbb
testb
rolb
or
push
outsb
movsl
jo
jnp
or
lahf
cmp
mov
clc
lcall
xchg
iret
mov
mov
andl
loopne
add
sub
inc
mov
mov
dec
les
cltd
repnz
and
repnz
cwtl
icebp
xor
and
iret
push
cmp
rcl
mov
or
push
push
mov
popf
adc
leave
jle
imul
add
jecxz
leave
fs
xor
dec
add
xor
or
mov
sbb
jmp
add
and
xchg
cmpsb
fs
sub
sbb
and
xchg
cmc
sbbl
xchg
sahf
sub
mov
sbb
mov
imul
and
xor
das
or
fwait
rclb
leave
and
ds
mov
cmpsb
add
lods
pushf
mov
cmp
out
jmp
xchg
and
or
cs
and
lea
pop
jno
mov
xchg
mov
stc
and
inc
shl
test
push
cmpl
adc
and
push
fmuls
mov
cmp
sbb
loopne
inc
mov
or
sbb
data16
pop
mov
pop
mov
xchg
test
sahf
and
mov
pop
mov
jl
repnz
push
xorb
dec
insb
mov
push
xchg
test
in
xor
or
adc
fmuls
inc
mov
or
push
pusha
pop
loop
mov
gs
jle
shll
mov
inc
mov
adc
add
sbb
ss
out
into
imul
mov
dec
mov
fidivrs
test
and
xchg
vpaddsw
inc
pop
sbb
jle
arpl
dec
ret
loop
mov
repz
mov
inc
in
jge
jmp
lods
popf
sub
idiv
aad
daa
push
js
sbb
andb
pop
leave
cmp
fwait
out
xor
xchg
push
jg
push
scas
jle
and
push
mov
or
xchg
jle
sbb
mov
mov
scas
or
or
mov
jl
pushf
xchg
jnp
sub
and
and
outsl
lahf
sti
ret
cwtl
pop
pusha
mov
mov
mov
pop
add
add
sarb
push
outsb
xor
ds
and
adc
cmpb
xor
into
jl
ret
add
push
repz
xchg
cltd
mov
je
pop
fwait
mov
loopne
test
idiv
sarl
lret
sbb
push
out
dec
pop
in
in
push
and
insl
push
out
sub
cltd
adc
add
xchg
push
sti
and
fsubrs
mov
add
push
xorl
daa
cs
adc
sub
mov
ds
pop
inc
cmp
in
mov
std
arpl
out
pop
adc
lret
mov
and
out
push
cmp
inc
jb
mov
into
push
and
cmpsl
mov
and
inc
add
pop
stos
fs
cmp
cmpsb
and
das
enter
stc
mov
movsl
dec
xor
les
pop
and
pop
lds
xor
xor
leave
mov
jecxz
add
ret
push
xchg
mov
mov
jo
cmpb
sbb
mov
adc
dec
into
xor
idiv
xchg
jo
pop
xor
cmp
sbb
cmp
jae
ret
pop
add
lods
jl
popa
fstps
pop
loopne
loopne
aam
pop
stc
adc
or
adc
jnp
cmp
out
xor
test
xlat
dec
jb
cmpsl
filds
movsb
xorl
pop
jge
add
sti
lods
idiv
mov
and
fstpt
icebp
lods
insl
cmp
outsl
sbb
addr16
add
mov
inc
je
pop
in
xchg
add
jbe
inc
insb
stos
mov
cmp
pop
pop
pop
fwait
shll
in
jo
xchg
hlt
sbb
and
cli
outsl
and
bound
cmpsb
sbb
in
jecxz
fists
dec
orb
and
and
push
mov
mov
cmp
divl
cli
insl
push
inc
push
subl
lods
ja
sbb
add
dec
rcl
mov
mov
push
push
dec
test
or
push
pop
sub
inc
pop
pop
mov
les
inc
fsubrs
mov
pop
mov
mov
xor
sub
sub
xchg
jp
and
and
adc
xor
jle
mov
xchg
or
or
cmp
fucomp
imul
popa
or
xor
dec
jno
inc
sub
inc
or
ja
test
orl
pop
adc
jno
into
scas
pop
mov
sbb
mov
in
mov
cmp
ret
std
or
ret
fwait
pop
subl
mov
repnz
daa
jg
dec
loopne
into
andl
popf
cs
mov
scas
sub
dec
or
xchg
add
push
fwait
cld
xor
jp
rclb
fsubrl
add
testl
loop
fldt
fstl
mov
cld
shrl
sti
fs
nop
jae
mov
ret
sub
dec
in
std
pop
pop
mov
fldcw
add
push
cmp
pop
dec
sbb
adc
or
popl
jl
fnstsw
or
sub
push
xor
push
jecxz
mov
jge
call
cltd
jnp
push
pusha
shll
add
lods
mov
sbb
mov
lret
sbb
int3
or
inc
mov
pop
push
out
jb
dec
in
stos
inc
jmp
add
rolb
pop
and
jmp
inc
rorl
loope
ss
rcrb
mov
and
loopne
sbb
sbb
lret
sub
adc
cs
stc
dec
dec
dec
in
pop
inc
cmp
sbb
sbb
dec
xchg
cmp
add
push
aad
aas
jno
stc
clc
stos
sar
adc
cmp
sbb
or
mov
xchg
test
push
cwtl
mov
test
bound
pushf
mov
les
and
sub
xchg
jno
sub
test
mov
mov
jae
icebp
int3
inc
loopne
and
or
cmc
push
sub
dec
ss
scas
adc
inc
jbe
shl
loopne
imul
cmpsl
outsb
sbb
fadd
lock
jl
mov
adc
or
loopne
pop
rcrb
mov
add
call
outsl
test
shrl
push
int3
gs
js
lcall
insb
insb
insb
cmp
fs
clc
sbb
cmpsb
push
mov
mov
jp
es
lret
mov
loop
xchg
cwtl
push
mov
enter
inc
and
loope
into
in
xlat
clc
cmpsl
mov
push
xchg
push
sub
jns
jp
bound
movaps
pop
addr16
cmp
aas
pop
icebp
push
aas
cli
ja
xor
mov
lds
jge
ficoms
pop
push
and
stos
pop
insl
sbb
in
push
inc
inc
mov
add
int3
or
push
or
mov
sub
mov
imul
inc
push
push
clc
enter
xchg
push
cmp
inc
mov
xchg
aaa
rcll
cmp
xchg
mov
jle
jne
outsl
add
gs
or
cld
mov
data16
insl
cmp
mov
push
out
enter
mov
jae
in
inc
sbb
lcall
add
stc
jne
out
push
mov
aad
imul
rol
pop
andl
icebp
dec
adc
or
adc
mov
test
loope
insl
outsl
add
rolb
in
stos
jb
cmp
pop
jecxz
jno,pt
fadds
and
mov
enter
aad
jne
out
outsl
mov
xchg
in
xchg
jo
push
insb
popf
cmp
fwait
ja
rorb
pop
or
pop
das
je
jp
test
and
enter
xchg
dec
dec
imul
mov
or
cld
sbb
mov
mov
rorb
lea
stos
mov
push
pop
ds
cmp
add
pop
or
es
ljmp
and
sub
mov
leave
push
imul
aad
mov
mov
aad
add
mov
sub
dec
pause
vaddpd
cmp
or
xchg
inc
dec
sbb
es
inc
fisttpl
mov
sbb
sbb
or
es
frstor
cld
sbb
cs
icebp
push
fildll
stc
out
inc
addr16
push
in
xchg
ljmp
add
xchg
jbe
insb
sub
dec
shl
adc
xlat
cmc
rcl
jno
cmp
jg
mov
ror
push
arpl
and
out
or
dec
jnp
push
popf
push
das
sbb
stc
sub
push
jp
xlat
cli
and
imul
js
cmp
mov
xor
mov
mov
stos
mov
pop
lahf
jne
adc
mov
test
dec
mov
js
popf
jns
pop
pop
addb
cli
inc
pop
mov
fisubl
pop
gs
and
ja
add
mov
jne
sub
cmp
loop
adc
ficomps
sbb
push
fcomp
mov
or
pushf
lahf
sub
push
xor
push
mov
addr16
outsb
and
jo
ffree
inc
into
xor
jbe
jae
mov
mov
js
mov
ret
xor
cmp
fcoms
icebp
dec
stc
arpl
inc
add
mov
mov
leave
gs
int
aad
aaa
jle
out
pop
mov
sub
aam
into
or
arpl
pop
and
loope
mov
and
leave
scas
xchg
fucomp
dec
mov
test
adc
scas
fmuls
mov
xor
dec
xchg
fs
inc
inc
ret
std
ret
shlb
ror
cs
rcll
pop
out
je
mov
ficompl
nop
adc
cmpsl
sti
popf
hlt
test
xlat
jmp
xchg
mov
into
mov
fadds
or
inc
outsl
pushf
inc
ja
insb
push
xlat
rorb
xor
aaa
dec
lret
lret
dec
sarl
mov
xchg
adc
dec
in
xchg
rcr
dec
dec
jo
xor
xchg
stos
and
mov
push
testb
test
jnp
daa
mov
xchg
scas
xchg
pop
or
and
pusha
movsb
outsl
xor
nop
lcall
mov
jecxz
scas
mov
xlat
mov
lahf
pushf
jbe
push
in
and
mov
push
clc
bound
mov
or
sub
inc
lods
js
sub
test
inc
test
call
xchg
and
mov
jmp
sbb
jmp
pop
stos
ss
adc
cltd
pop
insb
lcall
jp
fbstp
and
roll
out
fwait
inc
out
notb
repz
xchg
call
xchg
add
movsl
xor
out
pusha
std
pop
aas
pop
inc
fucomi
jmp
jle
clc
clc
lods
push
addl
pop
pushf
ss
add
sub
mov
and
test
jg
xor
jle
cmpl
pop
or
aad
push
jae
xlat
pavgw
mov
pop
add
dec
lret
shrb
mov
xchg
mov
std
xchg
jmp
mov
sub
sbb
push
sbb
dec
rcrb
xchg
adc
mov
mov
rcll
iret
pop
iret
inc
loopnew
shll
add
rorl
xchg
dec
ds
ljmp
push
adc
jo
test
in
pop
loop,pn
inc
xchg
fs
and
sbb
in
sbb
dec
add
insb
adc
xor
mov
pushf
mov
mov
sbb
lods
dec
fwait
call
jmp
add
imul
push
add
push
sub
cmpsb
daa
dec
loopne
inc
popa
in
and
xor
mov
xor
inc
dec
mov
push
in
mov
adc
jge
jl
aad
aad
mov
jecxz
adc
dec
inc
gs
push
std
xor
sbb
push
jg
lahf
push
mov
mov
xchg
xchg
mov
jmp
scas
adc
jge
push
cmp
jb
int3
lea
inc
push
clc
pop
fisubrl
test
ror
xchg
mov
and
int3
add
es
add
sub
dec
mov
jb
inc
push
test
sub
leave
jbe
xchg
jo
leave
push
dec
data16
aaa
pmaxub
popa
inc
mov
mov
pop
sub
cli
cmpsl
sub
or
jbe
sbb
push
mov
pop
fistl
adc
addr16
cmp
cmp
repz
mov
cmp
inc
aaa
cmpsl
mov
mov
push
cli
push
lds
idivb
sub
cmp
aad
hlt
push
fidivrl
enter
mov
repnz
jmp
ja
out
js
mov
push
mov
aad
pop
mov
addr16
out
sbb
orb
or
dec
call
jecxz
sub
and
cmp
fwait
add
xchg
push
pop
push
pusha
roll
mov
mov
or
dec
and
notb
push
jne
xchg
cmpsl
mov
xchg
push
cs
fs
push
pushf
add
mov
mov
stos
aam
push
pop
pop
push
jg
mov
aaa
fiadds
sub
incb
cmp
and
push
outsl
mov
sbb
testb
mov
mov
stc
jne
pop
or
je
dec
jecxz
and
test
ret
and
xor
fbld
inc
or
pop
test
cmp
mov
add
mov
jnp
xor
inc
loope
out
gs
mov
sbb
movsl
xchg
xchg
sbbb
xchg
add
jmp
xchg
dec
gs
pop
mov
fwait
xchg
sbb
cli
xor
cmc
and
cltd
dec
push
jle
cwtl
sub
in
xor
sub
ds
push
xor
xchg
push
sbb
mov
pop
mov
and
test
out
or
fcoml
mov
in
daa
hlt
imul
mov
mov
stc
push
mov
lret
mov
jbe
dec
inc
pop
xor
rorb
sub
push
clc
pushf
out
mov
add
add
jne
test
pop
mov
sub
inc
dec
dec
or
das
adcb
out
mov
mov
cmp
pop
inc
jp
xorl
sbb
loopne
fldcw
fimuls
cmc
jbe
jno
dec
fistl
push
add
sbb
push
fwait
cld
insb
or
xorb
xchg
xor
xchg
sub
test
xchg
dec
lea
sub
jbe
cmp
dec
push
mul
xchg
xchg
jnp
jg
xchg
xlat
pop
vandps
or
idivb
pop
rolb
mov
adc
aas
jg
out
aam
shrb
cld
inc
jae
lret
mov
lea
imul
jnp
pop
sbb
mov
cltd
cmpl
cmp
pop
jle
jmp
enter
jo
push
sahf
repnz
lahf
push
aaa
push
add
pop
movsl
movsl
pop
xor
rclb
jecxz
xor
das
jno
sarb
jne
jnp
adc
jbe
sub
adc
push
pop
jbe
int
sub
imul
xchg
dec
das
lods
mov
cltd
pop
jecxz
sub
addr16
scas
pop
mov
mov
push
ss
je
xor
sbb
arpl
hlt
roll
fistl
lret
sbb
stos
add
pop
push
push
test
dec
js
adc
mov
gs
loope
icebp
xor
fimull
sbb
fmuls
cli
sbb
add
into
mov
pop
lds
and
dec
push
cwtl
aaa
jbe
push
int3
bound
jnp
hlt
xorps
xchg
jns
jecxz
inc
pop
stos
pop
rcll
ret
hlt
and
out
testl
fisttps
and
add
push
mov
pop
jno
in
push
out
adc
ja
fdivl
push
or
out
fstpt
imul
sub
jbe
xchg
sbb
arpl
mov
outsl
leave
js
dec
pop
neg
insl
test
mov
loopne
in
fs
dec
movsl
xchg
ja
hlt
adc
push
into
int3
je
lahf
ret
mov
daa
jecxz
pop
add
and
sub
dec
cmp
xchg
popa
rcrb
mov
adc
movntq
mov
xchg
add
mov
aad
mov
lret
frstpm(287
data16
xchg
mov
int3
inc
mov
divl
or
int3
cltd
icebp
and
rolb
int
gs
js
or
es
push
cmpsl
sbb
jbe
mov
add
test
inc
mov
test
loope
or
sbb
in
and
mov
imul
test
pop
dec
jae
and
or
sbb
mov
out
push
pop
dec
mov
adc
inc
mov
push
mov
inc
inc
add
jmp
test
hlt
inc
addr16
out
jp
cmpsl
shrb
sbb
shrb
andl
cs
pop
pop
in
stc
add
mov
cmpb
sub
div
mov
mov
sub
xor
sti
mov
sbb
xor
jl
popa
jg
ss
lcall
fnsave
and
sbb
outsb
or
adc
std
add
mov
andl
jmp
sbb
mov
cmc
fldt
mov
jnp
fisubrs
cmp
dec
cmp
test
cld
sbb
rclb
add
popa
pushf
stos
ret
fs
push
sbb
imul
pop
fs
xchg
and
loope
jmp
cmpsb
mov
dec
imul
ljmp
adc
dec
push
scas
add
addb
loop
or
inc
jmp
jp
stos
pop
pop
push
sub
cli
sbb
mov
shll
call
mov
jmp
dec
enter
sbb
movsl
lret
es
loopne
xchg
pop
stc
hlt
in
sub
sbb
xor
cmc
pop
pop
roll
xchg
mov
cmp
push
mov
xor
mov
dec
adc
fcomps
mov
test
push
std
lret
and
jb
and
xchg
mov
mov
adc
mov
sbb
xor
pop
ss
sbb
in
nop
mov
mov
loop
aam
sbb
dec
adc
and
and
dec
in
add
cmp
xor
movsl
daa
mov
lock
pop
xchg
dec
jg
std
ss
mov
cwtl
fdivrl
adcl
xor
ret
lea
les
inc
outsl
xor
jmp
jp
mov
fwait
popa
adc
pop
and
aaa
push
cmp
mov
jnp
daa
in
xchg
popf
sub
into
pop
jp
xchg
mov
insl
jecxz
xchg
lret
addr16
inc
packssdw
std
shl
aas
sti
dec
adc
lods
fmulp
xor
test
lods
push
lahf
cmp
leave
sub
addr16
pop
fsubrl
in
adcb
pop
divb
xlat
xor
pushl
sub
rcrb
in
jae
cmpsl
push
sahf
push
sub
inc
cmpb
pop
xor
jne
jnp
test
lock
mov
fs
mov
out
repz
in
inc
into
add
sarl
dec
fucomp
add
jp
xchg
and
add
lds
push
xchg
mov
xor
aam
or
xchg
mov
mov
sti
jmp
mov
out
gs
push
xor
ret
or
jb
xchg
rcrb
loopne
mov
popf
xchg
insl
push
icebp
push
cmp
lods
sbb
inc
bnd
ljmp
push
pop
and
gs
inc
rcrl
pop
inc
test
lods
scas
testb
mov
pop
inc
shrb
xor
adcb
rolb
dec
push
adc
shrl
cmp
lock
jecxz
cmp
xchg
shll
fdivl
scas
imul
movsl
leave
mov
or
popf
out
mov
and
sub
fbstp
xchg
out
adc
pushf
call
test
cli
inc
push
shll
test
jae
cmp
jmp
adcb
or
es
fmull
fsubs
inc
mov
jecxz
les
outsl
out
cmpsl
xchg
imul
adcl
lds
sbb
aad
lcall
jmp
lret
mov
gs
jmp
jno
outsb
js
call
ds
leave
ljmp
mov
add
bound
push
inc
inc
or
xchg
jns
mov
xchg
xor
xlat
out
bound
daa
ret
popa
add
xor
nop
rcl
lds
and
xchg
inc
add
add
jne
ret
sub
push
loop
dec
mov
insb
rcrl
stc
inc
mov
repz
aam
push
imul
out
popf
xlat
mov
mov
push
stos
xor
sub
dec
sbb
ficoml
sub
insb
nop
pop
push
daa
cmc
fstl
dec
push
scas
jl
lods
imul
shl
dec
in
push
rclb
sub
bound
cs
sbb
push
adc
xchg
pushf
adc
mov
outsb
sbb
bound
and
cmp
cmp
mov
and
xchg
push
sbb
push
leave
imul
js
rcr
add
fsts
arpl
rcrl
and
and
imul
clc
mov
cmp
inc
loopne
add
xchg
sbb
nop
push
xlat
gs
mov
in
xchg
mov
push
dec
scas
pop
dec
je
add
sub
pop
dec
rorl
movsb
das
fisubrs
fists
lret
in
sbb
xlat
and
repnz
cmp
jge
popf
xchg
sbb
addr16
cmpb
dec
xlat
push
jp
les
mov
ss
hlt
stos
jp
xor
and
rclb
in
dec
lods
int
sbb
in
fwait
xchg
pop
xor
out
insl
cmpsb
push
add
mov
mov
pop
out
mov
dec
test
jl
andl
jbe
xorb
jo
sarl
jmp
aam
andl
mov
fiaddl
inc
dec
std
jecxz
cwtl
add
mov
jae
mov
push
xor
aam
xchg
add
insl
insl
mov
mov
repz
mov
movsl
mov
and
adc
and
adc
dec
icebp
lods
jo
xor
imul
pop
cmp
addb
or
jne
mov
mov
cwtl
jmp
lahf
lcall
out
mov
fnsave
rcl
inc
inc
gs
insl
fcmovbe
lret
aas
sub
ss
daa
test
push
dec
dec
jmp
inc
xor
in
mov
call
cmp
outsl
xor
imul
sbb
mov
test
stos
cli
imul
sbb
icebp
lock
cltd
imul
popf
cld
fwait
sub
xor
ret
lcall
insb
jg
fistps
loope
add
mov
out
add
fs
fwait
mov
fnstcw
fidivrs
or
adc
aam
jge
mov
mov
inc
sbb
mov
lahf
xor
adc
into
push
out
pop
mov
out
lods
lods
mov
jnp
js
sahf
aas
leave
in
popf
aas
addl
iret
out
int
dec
pusha
lea
popa
js
xlat
jnp
mov
pop
inc
out
fiadds
cmp
adc
push
pop
mov
shlb
mov
popf
iret
xchg
inc
test
mov
lea
lea
push
or
addr16
lret
mov
sub
or
and
std
hlt
repnz
cmp
dec
shrl
mov
mov
push
pop
xchg
xchg
sub
test
jecxz
fcomps
cli
mov
lock
hlt
and
aas
sbb
cmp
lret
xlat
xor
lcall
push
and
mov
out
adc
dec
jno
or
mov
and
sub
cmp
sub
xor
mov
pop
mov
sub
out
mov
outsl
ja
data16
dec
xchg
sub
mov
mov
or
mov
sbbl
xchg
push
sub
test
sbb
xor
imul
adc
or
push
xchg
push
movsl
aam
ror
xchg
fsqrt
mov
pop
cmp
add
les
les
mov
lret
bswap
or
pop
push
lahf
scas
dec
and
or
push
loop
bound
or
in
mov
into
fwait
cmp
out
insl
out
xchg
push
pop
add
lock
pop
xchg
xor
push
scas
stos
mov
mov
out
mov
lret
pusha
or
mov
fcmovu
dec
repnz
lods
imul
sub
dec
fwait
cmpsl
insb
xchg
mov
loope
adc
inc
sbb
cmp
add
mov
adc
test
cmp
scas
loope
enter
xor
sub
loop
cmp
jae
cwtl
loope
push
cmp
daa
ret
popf
outsl
and
inc
jp
inc
cwtl
in
and
repnz
in
movsl
pop
inc
je
les
push
into
addr16
sete
cmp
adc
or
lret
popa
cwtl
movl
sub
cmp
ret
sub
fsubrl
mov
sub
testb
mov
mov
pop
push
lahf
ljmp
imul
push
pop
and
cmp
cwtl
and
lods
mov
mov
push
push
mov
push
es
dec
inc
out
pop
pop
jns
mov
adc
inc
aas
psubsb
pop
pop
subl
mov
xor
popa
inc
movd
ret
push
hlt
cmpsb
fcoms
push
adc
jb
rclb
fiaddl
jnp
jb
pop
add
pop
mov
out
fxch
data16
je
addr16
push
scas
push
dec
or
xor
pop
loope
aas
sbb
mov
fucomp
adc
jp
pushf
mov
mov
jnp
test
dec
add
mov
adc
sub
inc
mov
sbb
xchg
jns
subb
call
xchg
or
xlat
dec
dec
cmp
repz
add
movsb
jo
sub
inc
mov
and
mov
andb
cltd
cmp
call
dec
pushf
mov
or
bound
sarb
hlt
and
in
das
xor
push
pusha
pop
loopne
push
xor
mov
adc
inc
fsubl
mov
cmpsl
or
mov
movsl
push
mov
and
outsb
stos
mov
mov
lret
fidivl
sub
lods
daa
rclb
fwait
jg
popa
pop
fnstenv
mov
inc
or
inc
mov
jbe
in
daa
imul
xor
sub
sbb
in
in
cmp
into
lea
or
movsl
mov
imul
data16
scas
movsb
add
jae
gs
push
push
andl
adc
in
lea
add
mov
add
pop
dec
gs
jmp
sbb
movsl
scas
xchg
mov
aas
fcoml
out
or
jno
and
lret
adc
or
mov
test
mov
push
pop
loop
cmp
jae
push
inc
mov
adc
add
int
fwait
sub
push
jmp
repnz
pop
dec
addr16
fsubrs
mov
mov
jecxz
sbb
ret
aad
push
mov
or
cwtl
mov
cmp
leave
sahf
jne
push
push
jbe
jecxz
adc
std
xchg
fcompl
dec
jo
push
inc
repz
filds
enter
push
clc
xchg
fstps
fnstenv
ljmp
adc
std
cmp
sbb
inc
add
push
xchg
sub
decl
xor
notl
jge
xchg
aaa
pop
repnz
xchg
ret
cmp
aam
fisubl
cmpb
out
mov
xor
mov
pop
loop
pop
push
aad
jmp
hlt
movsl
pop
cmp
mov
adc
subb
ja
ret
out
aas
fnstsw
and
pop
and
ja
dec
jg
pushl
cmp
or
sub
sbb
test
jge
cli
sbb
xchg
sub
daa
cmc
dec
les
sbb
cwtl
sbb
and
mov
pop
push
scas
mov
insl
jo
cmpb
push
hlt
pushf
xor
int
nop
andb
jne
sahf
sub
xor
or
mov
xchg
test
xchg
aaa
scas
lods
les
fs
jl
divb
pop
insl
daa
scas
hlt
add
outsb
sbb
adc
mov
subb
enter
or
jbe
inc
stos
push
mov
daa
sub
sub
sbb
loope
sub
mov
cli
sbb
jno
inc
and
mov
sbb
imul
adc
or
les
mov
fwait
mov
sbb
adc
insb
sub
stos
jmp
add
fmuls
xor
adc
pop
jb
je
sbb
daa
stos
mov
xchg
loop
pop
add
xchg
jns
dec
sbb
mov
mov
jo
fdivp
push
xlat
jmp
jmp
pop
mov
xchg
sarl
popl
mov
mov
sbb
mov
cmp
iret
popa
xor
js
cs
lret
lods
pop
adc
or
mov
loopne
xlat
cli
into
push
pop
aaa
icebp
or
xchg
sbb
cmp
jno
pushf
or
jecxz
sub
push
mov
mov
repnz
movsb
xchg
mov
push
mov
outsb
add
xchg
push
or
call
mov
daa
push
add
jmp
pusha
xor
xchg
dec
ds
cmp
addr16
or
xchg
pop
dec
sti
lea
into
fistpll
xor
xlat
add
pop
rcrb
push
imul
repnz
adc
loope
cld
push
imul
scas
and
leave
add
sub
fmul
int
sub
dec
repz
push
xor
jmp
daa
or
adc
and
sub
imul
pop
sbb
jae
and
dec
pop
cmpsb
sarl
inc
and
xrelease
addr16
or
stc
xchg
and
fidivl
pop
cmp
xchg
pop
add
cmp
mov
cmp
xor
mov
scas
xor
add
iret
or
loop
fdiv
in
or
lods
pop
sub
xchg
adc
and
sbb
decb
xchg
fistl
mov
jmp
in
xor
add
repnz
jns
popa
movsb
add
jle
push
jecxz
sbb
or
pop
cwtl
xchg
pusha
xor
scas
mov
pop
mov
loope
lret
cltd
fists
ss
xchg
cli
cmp
cmp
push
mov
jecxz
popf
lock
ja
inc
and
jmp
lods
ret
subl
cli
mov
sub
mov
inc
sub
xrelease
pop
add
cld
ret
mov
aas
cmp
push
sbb
mov
int
or
ja
push
jge
imul
shll
out
dec
aas
jne
in
mov
cmp
adc
popf
mov
scas
ret
fidivs
scas
aam
rclb
leave
add
jl
mov
inc
scas
jnp
cmpsl
js
rclb
outsl
xchg
push
lcall
ss
push
pop
leave
lods
addr16
xchg
fwait
les
jo
ds
pop
jbe
faddl
fisubl
fldl
jl
lods
ja
pop
repz
repnz
mov
jl
ret
cltd
adc
loopne
inc
cli
rclb
lea
int
stc
jp
arpl
cmp
sub
and
out
xchg
rcll
int3
addr16
sti
sub
sarl
mov
sub
xor
loop
mov
cmc
sbb
adc
xchg
cmp
psubd
std
pusha
aad
sbb
pop
in
jbe
jnp
ja
xor
pop
fadd
es
ljmp
pop
popa
call
cmpsb
lods
cwtl
mov
inc
push
lods
mov
pop
arpl
testb
gs
xor
hlt
push
fsubrl
add
sbb
and
sub
js
repnz
add
jl
pop
hlt
mov
jle
jns
pop
dec
mov
cmp
mov
cltd
add
mov
out
cmc
xchg
push
iret
addl
dec
repnz
addb
test
xchg
sub
divb
test
mov
jle
xchg
in
sti
xchg
dec
add
or
jae
and
mov
and
xchg
clc
int3
daa
mov
icebp
adc
sbb
test
push
sub
cmp
popl
ljmp
out
cmp
mov
mov
sbb
insl
mov
stc
lea
fldz
mov
push
jg
mov
push
pmuludq
fisubrs
pushw
aam
mov
ja
lea
divb
pop
cmpb
xor
cli
cmc
and
dec
jle
flds
mov
fs
lahf
and
ja
insb
mov
int3
call
jl
xchg
dec
xorl
fs
cmp
jae
int3
mov
movsb
nop
stos
jmp
movsl
loopne
xorb
pop
lea
leave
inc
lcall
add
cmp
cld
cltd
mov
mov
pop
and
mov
aad
out
push
arpl
clc
ret
outsl
add
loopne
push
fiadds
jge
pop
dec
pop
call
adc
loop
lcall
cmp
rcrl
pop
leave
lods
cmp
dec
test
pop
pop
scas
ss
mov
xchg
jl
push
push
pop
xchg
jae
and
fwait
outsl
dec
push
mov
add
push
cwtl
cltd
mov
test
mov
jb
jge
ret
sbb
icebp
sbb
out
cli
int
rcr
and
mov
mov
push
xchg
mov
popa
and
adcl
shr
test
std
pop
sub
cmp
add
sub
add
cld
pop
inc
bound
mov
dec
mov
rcll
adc
movsb
mov
or
sub
jbe
mov
adc
cmpsb
test
mov
insb
ss
enter
xchg
ljmp
lret
enter
adc
fimull
arpl
cmp
jb
mov
add
cmp
icebp
out
xchg
mov
cmp
in
xchg
aas
cli
sub
int3
test
xchg
mov
aad
jmp
xchg
dec
je
xchg
mov
jle
insb
aas
cmp
in
xlat
mov
lock
xchg
sub
loope
pop
mov
xchg
stos
imul
mov
je
pop
leave
insb
dec
cmp
cmc
sub
xchg
arpl
enter
imul
jne
nop
jmp
inc
mov
jb
jo
movsb
adc
sti
sub
test
bound
je
xorl
sbb
cld
std
fwait
out
outsl
dec
and
test
mov
pop
fistpll
jmp
pop
pop
dec
xchg
fmull
addr16
popf
push
xchg
dec
cmpsl
fadds
enter
fcomps
insl
push
xchg
pop
fisubs
ljmp
out
cmpsb
or
loop
jnp
mov
sbb
push
jo
into
xlat
xor
pop
addr16
fadds
inc
dec
or
pop
push
or
cmp
xor
stos
cmp
cmc
popf
repz
jmp
mov
shrb
aas
cmp
mov
push
lret
ret
inc
inc
arpl
and
loop
lret
gs
cld
cmp
in
mov
xchg
sbb
fstpl
cmp
mov
popa
leave
or
nop
xorl
in
sahf
mov
push
stos
fisubs
mov
std
sbb
or
das
arpl
ret
std
sbb
ret
mov
stos
iret
and
test
fcmovb
pcmpgtd
sub
lret
sbb
mov
cli
popf
leave
int3
xchg
test
scas
mov
lret
pop
shl
outsb
xchg
stos
mov
jo
mov
push
add
mov
lea
pushf
dec
lahf
mov
nop
outsb
inc
test
pop
lods
jae
jle
out
mov
rcll
inc
shrl
rclb
stos
add
inc
jo
xchg
mov
dec
in
jp
iret
fildll
ret
aad
and
xchg
ds
test
aaa
int
xor
std
xchg
daa
mov
sbb
xchg
mov
push
test
not
xchg
mov
cmp
pop
clc
repnz
push
pop
adc
addl
fidivs
cmp
test
xchg
pop
xchg
xchg
add
imul
inc
test
loopne
dec
sbb
push
loopne
aas
mov
pop
mov
dec
mov
in
mov
ljmp
int3
push
push
int
and
push
adc
mov
outsb
push
push
xor
addb
cwtl
bound
dec
fs
loop
daa
nop
sbb
xor
sar
sub
push
iret
push
hlt
daa
shll
jo
fmull
shlb
xor
or
push
cmp
add
popf
dec
jg
sahf
sbb
bound
jp
and
std
repz
mov
push
pop
fcmovbe
ljmp
mov
push
lcall
mov
mov
jnp
stc
lods
sbb
ljmp
insl
cmp
push
mov
mov
mov
dec
inc
add
aas
gs
leave
sbbb
or
shlb
cltd
dec
decl
mov
lret
into
adc
dec
pop
cmp
sbbb
data16
xor
insb
push
xor
out
pop
loop
ret
roll
cmp
inc
movsl
or
inc
in
sbb
mov
call
mov
fsubrp
nop
fidivrs
rorb
cmp
xor
xchg
mov
xor
incl
xchg
xor
iret
loopne
jbe
divb
jge
jae
mov
cmp
or
push
mov
pop
inc
pushf
rorl
xchg
sbb
rolb
pop
sarb
scas
add
jo
inc
hlt
aas
stc
stos
or
std
imul
pop
and
es
mov
lret
loopne
test
into
or
jge
and
cmp
cmp
cmc
pop
js
sub
xchg
pop
outsb
fisubs
cmp
or
fnstenv
lock
lret
xor
jle
sbb
or
in
xlat
shlw
mov
add
fsts
push
push
push
push
push
or
loope
sti
mov
mov
xchg
mov
jnp
addr16
push
jg
push
movsl
add
lea
repz
leave
mov
scas
inc
mov
mov
push
inc
sbb
mov
lcall
mov
aas
rorb
sbb
stos
xchg
adc
dec
rorl
lret
pop
in
inc
imul
outsb
ljmp
pop
out
mov
mov
push
or
stc
aaa
fistps
jb
inc
pop
and
in
add
push
push
jge
out
aam
call
cmp
pop
cmp
and
out
lret
mov
xor
mov
mov
jle
sbb
mov
loope
push
mov
sahf
and
sahf
subb
lret
sbbl
rcrb
ror
ret
sbb
jb
and
add
xchg
movsb
mov
and
sbb
dec
push
mov
lcall
int3
mov
mov
xor
push
sub
sbb
pop
fistl
push
mov
jmp
xchg
mov
leave
jnp
std
fwait
xchg
loopne
test
xlat
cmc
leave
test
add
movsl
jb
dec
cltd
and
mov
lcall
arpl
add
pop
scas
popf
mov
xchg
cmpsb
gs
dec
jb
jl
les
pop
push
sub
movsb
in
aaa
xor
xchg
xor
add
ljmp
push
ret
and
mov
popa
xchg
into
sahf
stc
jbe
push
inc
adc
daa
sub
addr16
les
mov
leave
stos
xchg
ds
subb
push
es
or
jp
xchg
rol
lcall
pop
popf
lahf
outsl
stos
push
mov
int3
mov
mov
dec
xor
cmp
sub
push
and
add
leave
popl
jae
jge
mov
pop
mov
movsl
gs
push
mov
test
test
cwtl
in
jmp
or
dec
mov
mov
jns
and
scas
dec
aad
jg
pop
jbe
rclb
mov
push
hlt
movsb
adc
xchg
cmp
jp
cmpsb
dec
mov
mov
pushl
cmp
pop
scas
sub
mov
dec
jb
scas
pop
sub
out
scas
popa
fs
mov
sub
aaa
in
nop
outsl
pop
sub
or
xchg
mov
mov
fcmovne
mov
xor
xchg
out
push
push
int3
add
fcmovbe
dec
sub
inc
push
fidivrl
roll
dec
mov
sbb
jns
mov
cmp
pop
ret
clc
ljmp
popa
inc
dec
stc
and
push
mov
stos
cmpsl
push
xor
push
scas
cmpsb
push
cwtl
scas
jge
dec
mov
push
call
xchg
rolb
loop
fnstenv
jmp
push
mov
ret
dec
mov
and
pushf
push
jl
callw
std
cmpsl
xor
outsb
jp
push
arpl
das
fmuls
pushf
inc
fsubr
push
xchg
or
je
mov
in
in
add
inc
and
jne
xchg
ja
xor
jge
pushf
data16
dec
aam
scas
sbb
les
imul
pop
mov
xchg
push
adc
aam
jae
fs
fwait
add
daa
cmp
push
cld
and
adc
add
popf
dec
and
out
stos
cmpsl
clc
divb
jbe
nop
out
stos
pusha
push
adc
xchg
add
mov
inc
or
icebp
clc
pop
mov
mov
fildll
lahf
fcmovu
in
jmp
jle
xor
mov
pushf
fsubr
jg
stos
pushf
imul
mov
sub
or
push
loopne
lret
mov
sahf
repz
outsb
adc
jns
cmp
inc
pop
iret
cmpsb
fildll
std
and
mov
xor
lahf
and
imul
cmc
pusha
sbb
pop
push
arpl
testl
sbb
mov
andb
aas
fs
popf
jg
sub
push
fwait
pop
mov
div
xchg
adc
xor
arpl
jle
movl
scas
mov
sti
out
insb
jbe
fwait
in
bound
or
adc
sub
jne
sarb
fwait
inc
push
adc
test
jo
add
xor
aaa
add
mov
mov
inc
jnp
imul
bound
test
pop
mov
and
jne
icebp
je
je
sahf
mov
das
sti
mov
lods
pop
sbb
mov
mov
dec
das
outsb
fisttps
pusha
ror
lods
cmp
lds
jbe
add
add
in
imul
sbb
loopne
shrl
enter
lea
dec
imul
mov
push
aad
xchg
inc
clc
repz
jae
add
scas
orb
lods
jns
jge
inc
jmp
cltd
mov
fbstp
jg
xchg
sub
jb
inc
clc
clc
xchg
aad
jbe
ja
jl
aam
pop
xor
lret
sbb
ja
mulb
xchg
dec
jge
sahf
mov
mov
js
cli
subl
or
in
notb
std
not
cmpsb
dec
and
adc
cwtl
xchg
xchg
bound
xchg
xchg
test
push
cmp
dec
cmp
pop
fisttps
sub
notb
bound
pusha
and
xchg
mov
jae
pop
lods
push
fistps
jecxz
dec
mov
es
mov
xchg
int
scas
fwait
mov
cmp
shrb
xchg
lahf
xchg
pop
filds
jbe
mov
dec
out
xchg
lret
cmc
jg
loop
or
sub
mov
jl
xor
dec
inc
js
sbb
repz
lods
cmp
push
adcb
push
dec
mov
and
sbb
xchg
inc
divb
mov
bound
mov
cmp
dec
aas
loop
pop
jmp
jg
add
pop
int
mov
dec
xchg
lahf
lods
addr16
inc
sub
rcll
mov
xorl
mov
mov
adc
sbb
jns
iret
aaa
sbb
loopne
xchg
hlt
pop
es
xchg
pcmpgtd
jne
xor
add
fisttps
outsl
mov
and
sub
fimuls
sub
or
loopne
or
jae
xor
test
gs
mov
push
and
sub
sbb
add
je
hlt
xchg
mov
int
cmpsb
outsb
add
pop
ret
mov
ss
pop
xorl
push
daa
push
lock
fistpl
pop
sub
lcall
inc
mov
scas
cmp
call
push
add
in
inc
lea
or
dec
repz
in
cli
or
insb
clc
js
push
inc
xor
jg
or
jge
lods
xor
and
leave
add
aas
js
addr16
mov
and
aam
pop
xchg
dec
in
jle
imul
daa
mov
insb
or
dec
adc
aas
movsl
sub
add
or
cmp
xchg
pop
mov
and
enter
or
lea
add
aaa
mov
adc
lcall
int
outsl
cld
or
pop
add
out
xchg
pop
or
xchg
fdivrp
or
addr16
aad
cltd
inc
inc
pusha
cmpsb
int3
adc
sub
dec
xchg
into
adc
rcll
xchg
xchg
test
push
inc
stos
xor
xlat
cmp
xchg
sbb
hlt
mov
push
jo
xor
pop
inc
nop
sub
outsl
fs
les
jmp
push
pop
pop
push
xor
jl
dec
in
out
sbb
inc
or
std
or
add
and
mov
es
shll
or
push
cmpsb
sub
and
ja
mov
push
pop
xchg
mov
ds
mov
mov
sysenter
in
fldcw
data16
and
sub
rcl
nop
inc
ljmp
mov
fiaddl
sarb
adc
sub
sub
leave
fstpt
sub
mov
sti
dec
xor
xchg
lea
mov
into
and
fstpt
outsl
cmpsl
pop
xorl
inc
mov
in
xchg
inc
fcoms
je
std
sub
jle
gs
rcr
cmp
fldcw
or
call
pop
pop
add
add
mov
xor
xchg
cmp
inc
xor
sub
popf
cltd
pop
std
addr16
jo
push
sub
push
iret
mov
sbb
outsl
sub
pop
ss
inc
add
and
jmp
or
clc
xchg
je
mov
or
dec
pop
mov
fcoml
fstl
dec
fistpll
sbb
test
mov
xlat
sahf
mov
in
push
xor
push
js
cli
sub
sub
cli
cwtl
nop
cli
xchg
push
stos
or
scas
mov
and
jmp
jge
mov
aam
push
or
adc
adc
sbb
dec
stos
fwait
fwait
insl
mov
lods
inc
pop
cld
daa
push
sbb
and
pop
addr16
int
push
rcrl
iret
loope
movsb
xor
jns
int3
fstl
insb
mov
jle
dec
xchg
push
inc
add
xor
pop
pop
clc
aas
ret
push
xchg
movsl
and
push
out
ljmp
shrb
push
jge
sbb
pop
pop
jecxz
lods
sbb
rcll
jno
repz
sub
faddl
add
inc
or
cmp
push
mov
pop
xor
outsb
cmp
clc
sub
mov
xor
cli
in
dec
daa
push
dec
mov
add
sti
int
popf
sarl
jmp
push
lea
out
in
and
push
xor
mov
scas
push
sbb
es
dec
xchg
fstl
int
jb
in
sbb
ret
dec
ljmp
jns
sti
cmpb
push
xchg
jmp
cmp
jg
je
sub
mov
jmp
mov
mov
mov
int3
sbb
add
push
aas
pusha
or
ljmp
lret
pop
rep
xchg
jl
dec
dec
leave
adc
aas
out
movsb
mov
into
icebp
cltd
mov
invd
testl
push
jmp
daa
rorl
mov
mov
ss
xor
adcl
mov
iret
test
push
pandn
xchg
cltd
cmpsl
jae
inc
push
inc
cmpsb
add
and
push
and
bound
xchg
or
call
into
lahf
sbb
dec
pop
cld
jle
jg
xchg
jl
mov
add
xor
add
test
in
push
mov
js
in
and
movsl
imul
loop
ds
aas
fcom
xor
rclb
xchg
mov
inc
jg
inc
cld
mov
jno
xor
sub
xchg
mov
shlb
andl
mov
mov
sti
in
mov
and
fldt
lock
aam
pop
add
dec
lcall
sub
sti
pop
in
jo
mov
outsb
xor
fs
pop
mov
fcoml
jecxz
bound
and
inc
leave
or
cwtl
ljmp
outsb
push
scas
std
sub
mov
std
pop
mov
lock
js
leave
add
int3
jno
repz
sbb
cmc
jae
xchg
lahf
and
icebp
ljmp
adc
movsb
push
loope
jg
lock
aaa
sti
fnsetpm(287
aam
into
sub
cmp
jno
sbb
pop
xchg
enter
test
in
pop
hlt
lret
sbb
fnstsw
xchg
fcoml
jne
stos
push
addr16
and
lea
dec
scas
js
cmpsb
adc
inc
mov
or
fimull
and
hlt
call
clc
mov
jnp
pop
adc
outsb
stos
mov
xor
in
loop
jecxz
adc
mov
cmp
mov
pop
mov
ret
xchg
loopne
adc
inc
mov
push
adc
fwait
cltd
xor
adc
mov
std
mov
ficoml
xchg
pusha
je
jmp
inc
adc
decb
sub
jns
or
sub
mov
ss
mov
push
push
out
insb
cmpsl
add
sub
mov
push
xor
mov
je
cmp
iret
xchg
rclb
sub
xchg
lods
shrb
lods
fisubl
cmp
xlat
mov
and
cli
push
arpl
loopne
xor
clc
out
and
add
addr16
jno
mov
push
addr16
dec
or
jo
xor
mov
mov
xor
cmpsb
enter
jno
mov
pop
jbe
popa
adc
loop
jle
in
in
push
cltd
cs
aam
js
fcmovbe
clc
leave
push
sbb
rol
xchg
add
lods
insl
loopne
sbb
cli
lahf
jmp
loop
std
jnp
adc
cmpsb
int
mov
jo
push
aaa
pop
mov
cmp
xchg
xchg
mov
jle
add
shlb
ficomps
sub
ja
or
xchg
mov
mov
das
mov
xchg
inc
inc
jle
jmp
inc
dec
lea
test
cs
mov
ret
or
inc
scas
out
cwtl
test
jecxz
and
rclb
aad
and
mov
insb
xchg
stc
jae
dec
pop
out
or
mov
pusha
hlt
es
aaa
add
sahf
inc
cmp
fists
daa
ss
fs
faddl
pop
movsb
fimuls
pop
and
inc
xchg
lcall
push
ret
sub
out
sbb
ror
aaa
xchg
add
mov
jle
mov
ficoml
aad
mov
add
add
push
xchg
xor
loop
into
ss
cmpsl
sti
addr16
insb
mov
jge
sub
dec
scas
mov
paddd
gs
xchg
outsl
in
or
fwait
dec
jns
mov
xchg
mov
lahf
shll
into
xlat
mov
mov
sahf
mov
cs
push
adc
js
mov
ds
sti
pop
mov
ret
mov
sbb
mov
mov
cmp
movsl
es
mov
je
and
sbb
packsswb
test
repz
rcrb
lods
pushf
movsl
or
aad
add
fidivrl
add
mov
ja
pop
sbb
jge
fcoml
xor
call
daa
sub
jp
jno
cmp
inc
jae
insb
outsl
jne
add
and
xchg
insb
test
mov
jle
and
jns
pop
jge
or
dec
rclb
cltd
in
into
dec
mov
daa
jmp
cmp
repnz
mov
out
cmp
xchg
mov
cmpsl
sbb
stos
mov
addr16
or
ljmp
jl
insl
dec
dec
pop
into
jo
addr16
jmp
ret
pop
mulps
in
add
sub
rcrl
pop
add
dec
xchg
adc
push
orl
mov
icebp
mov
sarb
stos
bswap
mov
jecxz
fs
add
mov
test
jecxz
mov
test
xor
aas
pop
sbb
or
scas
aas
repz
sbb
xchg
shr
adc
cmp
sbbl
shll
mov
andl
mov
je
aad
test
cmp
fwait
daa
popa
dec
jmp
xor
js
jecxz
dec
cmp
std
mov
arpl
neg
xchg
rolb
jae
jbe
inc
sbb
js
pop
mov
push
jnp
cmpsb
cmp
shll
mov
xchg
xor
add
fcmovbe
imul
aam
leave
ljmp
jge
bound
pusha
and
and
fdivrl
pop
pop
xlat
fldenv
enter
inc
int
nop
dec
js
add
cwtl
clc
loopne
push
jne
in
pushf
fidivrl
cmp
add
xchg
sub
shlb
fimuls
pop
loopne
shlb
ja
leave
cwtl
jmp
cli
cmp
leave
mov
and
lret
imul
jne
sub
dec
sub
pop
daa
rorl
or
sarl
mov
jo
fdivl
ss
adc
aaa
or
shlb
inc
jge
push
sti
adc
sarb
cmp
pop
xchg
xor
dec
outsl
mov
or
or
arpl
jo
sub
loopne
and
inc
jb
fimuls
adc
ror
mov
mov
cmp
pushf
push
dec
je
sub
pop
cltd
jne
pop
repnz
in
fstpt
dec
fsubl
lock
jnp
adc
xchg
adc
ret
push
ret
test
ret
mov
movsb
test
or
insl
and
mov
stc
and
inc
test
mov
xchg
daa
pop
orb
xchg
mov
jo
stos
push
push
stos
jmp
dec
int
pop
fcmovu
aam
pop
xor
jmp
push
es
lcall
pop
mov
aad
test
add
inc
inc
lahf
push
adc
pushf
mov
mov
fistpll
lods
pop
int
dec
mov
dec
push
sbb
adc
mov
sub
daa
and
push
gs
inc
push
or
add
pusha
loopne
xlat
movsb
push
sbb
ret
jno
and
pop
jne
mov
les
jmp
fwait
pop
hlt
mov
jne
fmull
xchg
mov
mov
jmp
sbb
into
add
pusha
xorl
in
xchg
decb
xor
arpl
inc
fsubr
lock
push
enter
int
dec
and
mov
mov
jno
out
sarl
outsl
sub
int3
cmp
cmp
dec
std
sahf
repnz
xchg
and
push
fnstcw
xor
arpl
mov
pop
enter
test
pop
lods
call
push
dec
mov
incl
jecxz
jl
jge
xchg
add
out
inc
pop
jb
jno
xlat
cmpsl
or
shlb
mov
cltd
xor
sti
mov
loop
jg
sbb
push
cmpsl
mov
fidivrs
xchg
in
cwtl
mov
out
imul
cmp
in
push
sti
adc
daa
js
mov
and
xchg
cmp
and
in
mov
jmp
movsl
jg
push
arpl
fwait
aad
aaa
inc
movsb
sti
inc
push
loope
lret
addr16
inc
dec
aas
data16
pop
enter
out
lcall
sbb
stos
pop
push
test
dec
xor
std
mov
xor
js
sbb
and
test
lahf
sahf
aam
pop
fcmovne
repz
lods
testl
ljmp
call
movsl
sbb
adc
dec
fnstenv
dec
sub
cmp
cmp
std
pushf
xor
lret
dec
xor
es
lods
out
lods
mov
xor
dec
add
sub
clc
out
dec
mov
aas
imul
insl
push
sahf
les
mov
fwait
insl
push
jl
jg
mov
loop
ss
jmp
adcb
jbe
test
leave
out
push
popa
sub
xchg
adc
insl
stos
bound
fdivr
cmp
xchg
sub
sbb
in
sbb
and
mov
fneni(8087
inc
jns
lods
out
pusha
in
pop
data16
push
dec
lcall
fwait
add
in
xchg
clc
lea
jle
and
adc
ds
add
addr16
cmc
fimull
push
add
test
into
add
jno
movsb
xchg
and
js
movsb
mov
and
ret
aas
xlat
sbb
mov
add
mov
fidivrl
ret
shll
jmp
push
jecxz
daa
cmp
fs
add
sub
adc
shr
adc
mov
pop
leave
xor
jp
push
push
in
cwtl
jo
inc
call
mov
sub
add
in
push
inc
enter
pop
jle
xchg
in
mov
inc
std
pop
loop
and
jmp
mov
not
mov
repz
cmp
jmp
add
inc
mov
addr16
jmp
cmc
ss
outsb
ljmp
repz
inc
jne
push
mov
cmp
push
xchg
sub
add
push
mov
ret
addr16
mov
aaa
or
jmp
xchg
imul
jg
mov
mov
rcrb
and
sbb
adc
mov
xchg
icebp
mov
inc
dec
sahf
mov
jne
xor
cmp
rcl
cmp
sbb
push
and
into
jne
jle
dec
sub
lret
cmp
pushf
cmp
cwtl
insb
pop
or
lret
test
sub
lock
adc
outsl
and
nop
mov
or
sub
sub
lods
in
outsb
pop
jp
cld
xchg
sbb
xchg
sarl
jl
push
int3
or
push
xchg
sub
dec
fs
add
push
xchg
cmp
mov
mov
lock
or
sub
cmp
inc
icebp
loope
adc
insb
fcoml
add
fsubl
mov
cmp
inc
mov
std
lahf
bnd
call
pop
ljmp
mulb
enter
in
ret
and
loopne
mov
je
aad
or
js
fisubrs
out
mov
add
test
xor
lea
sub
mov
movb
and
or
inc
jl
mov
dec
jnp
jecxz
or
rcrl
push
into
push
push
add
cmp
shl
add
mov
fisttpl
mov
push
js
out
fstl
and
xchg
out
xchg
sbbb
test
daa
ret
sub
xchg
and
aaa
out
addr16
mov
pop
mov
cmp
pop
leave
filds
testl
shl
mov
out
jmp
adc
mov
xchg
hlt
in
push
shr
push
xlat
popf
sbb
lock
push
stos
sbb
setl
push
dec
mov
mov
outsl
aas
int3
shrl
rorb
iret
les
mov
mov
jecxz
and
ret
cmpsl
mov
aam
xor
xchg
adc
sbb
xchg
xchg
insl
aam
jns
fsubr
adc
jge
mov
cmpb
xor
aam
and
pop
arpl
ret
pop
sarl
cmpsb
pop
jb
sub
cmp
rorl
mov
ljmp
leave
int
mov
xchg
movsl
cli
pusha
lahf
fsubs
mov
notb
push
ljmp
icebp
insb
jmp
sub
cmovge
enter
cmp
dec
jmp
inc
scas
shll
add
lahf
fistl
test
je
jmp
cmp
out
nop
stc
lods
push
hlt
jne
mov
mov
sub
out
lods
in
adc
mov
or
gs
out
das
inc
inc
lods
enter
mov
mov
push
and
imul
sub
push
jmp
mov
dec
push
pushf
jmp
aaa
jmp
or
test
jae
push
mov
fs
sbb
or
push
jns
arpl
mov
mov
in
or
dec
pop
mov
pushf
sbb
scas
xchg
lds
or
arpl
aam
int
mov
adc
rcll
iret
jecxz
out
shll
inc
imul
inc
enter
fstp
pop
ret
sti
movsb
stc
je
add
arpl
loope
add
xchg
sub
ret
mov
addb
adc
int3
popa
iret
incl
fistpll
fwait
cltd
stos
fstpt
push
inc
push
iret
call
cmpsb
stos
xor
inc
xchg
sub
push
jo
lods
jmp
push
adc
cli
push
insb
ret
and
adc
test
mov
lds
or
dec
in
test
mull
repz
in
rolb
adc
lret
mov
dec
add
test
xor
test
lahf
pop
sbb
fdivrp
testl
popfw
test
mov
rolb
pop
push
js
clc
mov
or
pusha
enter
aad
pop
es
fsubl
fimuls
and
cltd
push
lods
push
divb
loopne
divb
in
jecxz
mov
test
xchg
sar
pop
bound
cmp
insb
mov
mov
movsl
test
mov
hlt
je
or
leave
mov
jb
sub
mov
movsl
orl
aaa
cs
sub
std
jbe
imull
enter
mov
jne
movzwl
cwtl
sti
mov
sub
aam
pop
mov
leave
xchg
xor
mov
fsubl
les
cmp
sbbb
mov
inc
push
and
pop
mov
insb
subl
xor
and
inc
and
test
out
ds
xor
pushf
inc
xlat
sbb
dec
or
repnz
mov
and
mov
ss
ret
imulb
add
call
mov
cmp
dec
sbbb
jge
aaa
out
popf
movl
mov
fidivrl
cmp
xor
call
sbb
das
add
jnp
dec
add
push
add
cmpsb
ret
or
mov
inc
movsl
jnp
mov
lea
lahf
dec
fadds
dec
orb
mov
rclb
xor
jl
into
setp
xor
je
dec
in
movsl
orb
sbb
popf
push
dec
movsb
test
adc
push
mov
mov
push
dec
es
loop
aas
idivl
stc
and
add
or
ficoms
sbbb
mov
les
push
ljmp
xor
dec
scas
xor
inc
js
cmp
daa
lds
jecxz
cmp
dec
fnsave
xchg
push
jmp
mov
pop
je
aas
sub
out
mov
mov
add
sti
push
aas
fnstcw
stos
fs
testb
fstpt
mov
mov
push
cmp
jno
pop
je
ffree
popa
jno
mov
and
push
add
ret
xchg
push
aaa
dec
jo
add
inc
adc
scas
add
loopne
ret
pop
and
shlb
lods
pop
adcl
test
jb
sub
imul
leave
dec
inc
or
fcoms
cmp
ret
sbb
fwait
adc
int
dec
dec
out
lods
movsb
cli
add
sarl
int3
iret
sub
xor
inc
cld
pop
sub
fldenv
out
fmull
pushf
push
fs
aaa
movsl
cld
lods
mov
nop
and
xor
push
dec
ret
dec
dec
psadbw
and
or
sahf
fisttps
or
xchg
ret
fwait
or
rcl
test
jmp
out
lods
mov
jg
lret
or
out
push
addr16
or
mov
jo
nop
add
jp
mov
inc
das
movsb
repz
aas
mov
std
mov
in
cmc
and
in
popa
add
sbb
dec
cwtl
arpl
ret
dec
push
rcr
add
outsb
orb
cmpsl
lcall
sub
xchg
xchg
mov
adc
pop
pop
ds
shrl
xor
jb
cmp
add
stos
test
ja
mov
adc
fldt
sub
push
out
sahf
dec
fwait
ret
jbe
xchg
js
call
adcb
inc
mov
add
xchg
test
push
and
aad
pushf
cmp
or
ljmp
scas
lock
push
and
idivb
scas
fdivr
loop
jb
in
push
push
add
inc
sbb
or
fwait
nop
sarl
mov
fs
dec
mov
mov
mov
ret
mov
sub
jmp
mov
or
and
mov
sbb
in
mov
cmc
mov
push
decl
fidivrl
push
sbb
sbb
sahf
scas
mov
sbb
pop
xchg
popf
stos
arpl
mov
mov
xchg
mov
dec
loope
pop
movsl
lahf
adc
mov
hlt
xor
inc
cmpsb
movl
or
test
cmp
jecxz
adc
adc
or
or
xor
mov
cmp
pop
je
jnp
push
push
inc
dec
dec
ret
orb
mov
pop
push
push
mov
outsb
enter
or
les
push
dec
pop
hlt
push
xchg
fstl
fildll
lods
bound
mov
and
pushf
sbb
xchg
mov
push
lods
ret
dec
xor
mov
dec
xor
add
dec
fwait
aad
add
xlat
mov
mov
pop
jnp
sub
mov
int
jbe
jns
dec
cld
pop
dec
sbb
daa
sbb
mov
sbb
pusha
sbb
in
inc
xchg
inc
inc
imul
jno
cwtl
dec
movsl
lock
mov
ds
rclb
mov
fcoms
es
adc
movsb
aam
loop
inc
mov
outsb
sbb
xor
std
mov
mov
aam
stos
test
sub
cli
dec
cmpsb
pushf
xchg
sub
cmpsl
mov
push
gs
pop
jge
cmpsb
cmp
pop
mov
movsb
mov
popa
fsubrs
movsl
mov
pusha
and
inc
push
jno
stos
jbe
xchg
es
inc
sbb
sbb
jo
fisttps
sbb
lods
outsb
mov
mov
jecxz
add
movsb
push
js,pn
or
iret
sub
cmpl
add
push
aam
xchg
or
xchg
int3
jo
xor
test
shrb
pop
push
rorb
xlat
ret
cs
test
pop
cld
xor
dec
loop
mov
or
sbb
add
out
lods
addr16
pop
arpl
pushf
add
pop
stc
cmp
jle
mov
faddl
repnz
push
outsl
sbb
pop
mov
sub
fisubl
mov
mov
stos
lret
pop
daa
pop
add
test
sbb
cmp
dec
push
repnz
mov
aad
ja
or
push
insb
dec
xchg
fdivl
rcrb
cmp
pop
push
jle
into
cli
aaa
sbb
loop
xchg
cmp
lods
sahf
adc
insl
and
and
mov
ficompl
push
loop
mov
dec
jnp
sahf
jge
and
mov
cli
mov
int
sarb
orl
ret
arpl
rcrl
mov
adc
cmp
sbbb
mov
rol
fmuls
repnz
sahf
mov
and
mov
xor
out
decl
daa
stos
push
add
push
mov
imul
pushf
js
popf
adc
ret
pop
add
mov
cli
cmp
fidivrs
mov
sub
out
insb
cmpsl
loope
pop
stc
pop
adc
xchg
scas
sbb
and
mov
gs
stos
xor
and
cli
cmc
dec
adc
stos
jecxz
gs
add
push
mov
daa
bound
add
xchg
cmp
cltd
dec
and
nop
cmp
xabort
jle
mov
andb
jo
sub
rorb
sub
dec
out
inc
orb
call
mov
lcall
xchg
je
pop
ljmp
popf
mov
lcall
repnz
jp
xor
dec
fisttpll
out
push
adc
xor
repnz
das
divl
sub
cli
mov
jge
xor
and
xorl
cwtl
fcmovne
jno
jp
lods
inc
mov
push
or
pop
push
sbb
mov
cmp
pop
fucomi
pop
data16
imul
or
push
fcmovnb
add
addr16
push
pop
cltd
xchg
jo
adc
mov
mov
push
jbe
fdivrl
pop
push
xchg
xchg
mov
lods
adc
add
xchg
fistps
jbe
xchg
dec
mov
mov
cwtl
sbb
jl
icebp
data16
add
cli
insl
jp
sub
aad
jne
push
lods
inc
subl
push
fucom
loop
xchg
inc
mov
xchg
push
int
sbb
adcl
aam
aas
mov
mov
sub
pop
dec
mov
mov
cmp
rolb
dec
inc
cmp
or
cmp
out
aaa
lock
fistl
ja
push
or
sub
xchg
outsb
sbb
hlt
scas
mov
lods
lahf
insb
xlat
in
and
sbb
mov
xchg
pop
push
ds
out
dec
call
sub
insb
push
fistpll
bound
orl
push
push
repz
sti
repz
sbb
inc
fsubrl
nop
fnstsw
insl
ljmp
inc
jnp
add
nop
sub
ljmp
clc
aaa
sbb
sbb
push
mov
mov
and
fildl
jmp
mov
inc
mov
xor
mov
arpl
cmpsl
fisubrs
inc
rcl
mov
inc
push
mov
xor
sahf
dec
push
bound
mov
loop
mov
mov
jecxz
lahf
pop
outsb
insb
xor
adc
inc
cmpsb
pop
ja
mov
sti
sbb
loopne
jns
sti
dec
outsl
mov
test
into
in
fiadds
inc
jns
sarl
xchg
sbb
dec
add
inc
sub
cmpsl
iret
jg
xchg
xor
adc
inc
jno
mov
stos
inc
enter
insl
in
xchg
cmc
xchg
push
cmp
xchg
mov
or
pop
cld
stos
xchg
jle
inc
push
mov
in
or
sub
pusha
and
rcrl
jp
fwait
stos
jle
pop
outsl
int
cmpl
jmp
cmp
loopne
aas
hlt
xchg
jno
into
pop
push
dec
cmp
pop
decb
xor
clc
insb
test
xor
cli
jns
clc
xor
xrelease
or
push
mov
and
pop
push
hlt
jbe
fildl
sbb
ljmp
repz
stos
mov
loopne
cmc
mov
pop
insl
mov
pop
mov
push
ret
mull
jmp
push
push
movsb
in
mov
cmp
mov
jl
sub
or
xchg
leave
adc
shll
je
xor
int3
xor
cli
or
mov
mov
mov
and
fnstcw
orb
and
out
ret
push
adcb
jmp
push
nop
scas
fwait
xlat
jae
xchg
insb
ja
mov
ja
cmp
pop
insb
push
stc
xor
sahf
iret
sub
lahf
insb
push
adcb
dec
aad
test
pusha
fimuls
cmp
mov
push
clc
iret
outsb
xchg
lea
hlt
push
notb
mov
scas
dec
lret
adc
int
push
cli
jg
dec
pop
add
sti
cmp
repz
ja
pop
push
ljmp
js
out
dec
icebp
std
xor
jg
fcoms
push
out
dec
enter
jecxz
popa
or
in
cmp
dec
aas
push
cli
inc
xchg
jnp
mov
jb
icebp
leave
inc
jp
aas
push
bound
xchg
inc
rcll
rcll
pop
ljmp
paddsw
fidivl
stos
inc
cltd
insb
pop
out
add
aam
cld
xor
rcr
fisttpll
jle
jb
popf
mov
mov
mov
pop
insb
aas
pop
inc
sub
push
sub
pop
inc
test
xchg
fistps
add
mov
insl
imul
in
or
xlat
dec
fs
ret
fistpll
je
test
jnp
pop
clc
sub
inc
push
mov
pop
mov
sbb
cmc
pop
mov
rcrl
ret
add
out
xchg
in
mov
loopne
mov
movb
addb
pop
pop
dec
push
sti
mov
dec
imul
insb
fcom
dec
lods
push
pop
out
sbb
cld
xchg
addr16
in
lret
sarl
push
testl
out
xchg
setg
jle
pushf
leave
push
adc
pop
add
or
sbb
sahf
lods
jnp
mov
cmpsl
sbb
ret
in
dec
push
pop
pop
add
idiv
push
and
fs
insl
xchg
std
jmp
jae
rclb
data16
mov
push
cmp
rclb
dec
popa
sbb
mov
or
pop
aas
arpl
dec
and
inc
sbb
int3
jmp
push
pop
adc
jo
adc
fmull
jecxz
aas
cmc
jb
jbe
xor
add
inc
jle
and
mov
adc
nop
cli
lahf
out
mov
push
or
pop
js
xor
cltd
fistl
lock
iret
jno
stos
sub
jg
dec
cltd
popa
adc
lea
xor
test
jl
push
into
adc
and
in
pop
mov
mov
dec
fsubs
jno
push
insb
adc
ja
push
sbb
in
inc
xor
and
mov
in
pop
jle,pt
jb
or
repnz
movsl
sahf
pop
jo
jge
sub
mov
jnp
dec
or
test
data16
sbb
sbb
and
sbb
push
mov
ja
das
repz
lcall
std
out
loopne
cmc
xchg
fs
jge
adc
ret
ja
dec
cmp
idivl
ds
xchg
cmp
sbb
jg
fwait
and
call
push
mov
mov
inc
push
pop
dec
and
jae
lods
out
xor
lcall
mov
push
mov
fidivrl
xchg
cmp
and
fmuls
imul
pop
sarl
and
pop
movsl
inc
mov
mov
inc
into
mov
cmpsl
sub
cmp
sti
cmpsl
mov
data16
pushf
xchg
sbb
into
shlb
test
sbb
cli
stos
sub
sbb
mov
pop
jecxz
loopne
movsb
test
mov
lock
ficomps
jge
outsl
xchg
test
mov
adcb
inc
sti
pop
imul
sbb
jle
jbe
mov
and
cmp
add
iret
lret
mov
push
cmp
mov
test
enter
pop
push
mov
outsb
sahf
fisubs
add
mov
dec
push
cmpsb
leave
mov
mov
xchg
jl
dec
jle
pop
adc
lock
out
jecxz
lret
push
jecxz
sahf
sbb
hlt
lret
scas
fdivrl
std
inc
push
adc
mov
pop
cmpsb
pop
fcmove
jae
aam
inc
pushf
push
pop
mov
cmpsl
mov
ljmp
test
insb
scas
inc
xor
movsl
sub
movsl
shll
and
and
or
into
dec
cmp
jmp
in
sub
loopne
loopne
sub
repz
push
shll
pop
add
inc
jmp
stc
sub
adc
ds
or
out
cwtl
ret
rclb
mov
mov
in
pop
dec
push
jle
out
adc
push
jnp
and
add
lea
das
andl
push
mov
adc
ds
aam
sub
subl
nop
dec
inc
dec
sub
aam
ret
cmpb
push
mov
mov
bound
icebp
loope
pop
mov
sarl
js
xor
and
add
lods
dec
popa
subb
xlat
or
jmp
out
xor
es
pop
fiadds
jl
mov
xchg
xor
lret
or
pop
jg
fs
push
fcmovu
sbb
adc
cltd
jno
xchg
out
loopne
scas
iret
mov
fsubrs
cmpsb
mov
leave
xchg
pop
jo
push
popf
cmp
mov
adc
xchg
and
and
jg
mov
aas
testb
sub
cmp
stos
out
cmp
pop
cld
mov
dec
pop
popa
fs
roll
xor
and
fistpl
dec
push
lds
push
jnp
inc
and
mov
push
push
ret
aad
dec
jo
add
aas
fistps
adc
arpl
fwait
pushf
mov
adc
or
mov
int3
xchg
lods
jle
dec
lret
jl
mov
das
ret
sbb
jmp
and
dec
pop
repnz
push
mov
jnp
mov
cmp
xchg
jp
and
fmull
dec
ficomps
jb
iret
cs
scas
in
inc
scas
mov
mov
mov
push
call
cmpsl
jecxz
inc
fisttpl
cs
or
pop
arpl
mov
loopne
adc
test
xchg
lret
mov
dec
testl
incb
ja
shll
cli
test
std
outsl
rep
mov
iret
or
jns
in
outsl
or
das
mov
sbb
les
sub
cmp
data16
fabs
mov
inc
in
add
loope
arpl
adc
imul
lods
cwtl
test
sbb
subl
out
push
mov
dec
loop
mov
fisubrl
push
lahf
xchg
rolb
xchg
sub
ret
cli
jae
push
pop
dec
jle
dec
mov
mov
jecxz
jle
scas
std
imul
divl
imul
push
inc
add
add
or
scas
xlat
pop
mov
jbe
adc
mov
loopne
add
inc
inc
pop
rclb
adc
dec
test
cmp
pop
push
pop
je
adc
test
fld
les
lahf
mov
les
cmpsb
xor
jb
pop
jge
push
or
jl
mov
scas
inc
call
cld
jp
cmpsb
push
jle
xchg
mulb
out
jb
xor
push
xor
cmp
leave
mov
call
jge
add
fwait
popa
and
addb
dec
push
xchg
int3
xlat
lcall
inc
inc
data16
adc
leave
cmpsl
jae
aas
stos
cmpsb
push
repz
push
pop
mov
xchg
pop
xchg
adcl
nop
cmp
hlt
lret
mov
addr16
out
or
adc
dec
js
add
push
test
dec
inc
inc
pushf
pop
mov
push
mov
stos
sbbl
add
dec
or
jg
ds
sub
fdivp
push
ja
roll
pushf
movsb
cltd
mov
jbe
or
sti
xchg
fistpl
inc
sub
xor
ret
add
lcall
in
push
daa
orb
cld
loop
pop
jbe
adc
std
hlt
fs
sar
fcoms
and
aad
mov
push
lds
xor
push
mov
pop
lahf
ja
shll
inc
and
in
daa
jne
sbb
jl
fbstp
test
pop
lods
ret
push
loop
std
add
xchg
add
outsb
dec
sub
fxch
mov
or
mov
xchg
mov
repz
adc
adc
pop
mov
adc
pop
subb
push
fstpt
pop
arpl
mov
movsb
jno
pop
xchg
cmpsl
subb
loopne
sub
jns
stc
addl
xor
ljmp
sbb
lahf
ret
xor
cmp
mov
jae
mov
mov
cmp
xchg
mov
clc
test
pop
or
orl
and
lods
pop
aas
ja
xchg
add
and
inc
pop
gs
sub
call
repnz
jle
add
adc
andl
fwait
and
jg
fsubl
outsl
outsl
xor
rcll
dec
out
mov
xor
adc
pusha
mov
ret
call
cwtl
dec
xchg
das
cltd
bound
xchg
aaa
pop
loopne
pop
sbb
sbb
shr
cmp
mov
sahf
popf
dec
mov
rcll
lods
roll
out
jbe
inc
in
add
mov
or
and
stc
or
nop
cld
pop
inc
mov
je
in
push
xor
and
pop
sbb
sbbb
stos
pop
mov
movl
pop
pop
loopne
fisttps
push
inc
dec
fs
adc
pushf
loop
test
adc
outsb
dec
xchg
add
adc
or
cmpsl
xchg
and
cmp
pusha
xchg
out
push
mov
xor
xchg
inc
xchg
imul
cmp
inc
popa
loopne
cmp
ja
movsb
dec
lahf
lcall
cmp
int
jle
bound
cmp
aaa
cmp
inc
sbb
in
out
add
lcall
mov
and
repnz
pop
inc
rol
push
repz
jae
hlt
stos
out
pusha
cmp
in
loopne
mov
aad
int
sub
add
push
inc
ja
xor
cs
inc
fistl
xchg
adc
xorl
jge
popa
or
flds
neg
cli
aaa
les
outsl
lret
xchg
cmp
jle
loope
adc
fdivr
in
subl
inc
mov
stos
xor
cmpb
lods
mov
pop
xchg
ret
sbb
and
dec
sbb
fimuls
imul
add
xor
idivl
mov
loop
mov
idivl
das
push
in
rolb
imul
repnz
add
dec
adc
cmp
mov
and
cmp
rcl
iret
pop
ja
jae
lea
or
mov
cmpsb
int3
pop
push
cmpsl
mov
sub
mov
stos
jns
cmp
and
hlt
cmp
stc
adc
js
into
call
mov
jecxz
mov
adc
mov
sahf
xchg
sahf
fmuls
test
cmp
mov
jae
stc
or
bound
cli
push
adc
mov
sahf
lock
jo
cwtl
stos
in
pushf
icebp
xchg
lcall
xor
ror
fimuls
outsl
das
dec
pop
dec
imul
pop
icebp
pushf
xchg
xchg
and
mov
sbb
and
js
negb
push
mov
call
sub
inc
sarb
js
xor
cmp
xchg
jne
stos
fldenv
ljmp
sub
fidivrl
push
sub
sar
jns
add
cmp
jne
clc
stos
in
arpl
movsl
fs
xchg
fstps
xchg
jge
cmp
mov
cmc
pop
ds
push
inc
repnz
out
fnstcw
mov
es
lret
push
push
fcomps
insb
sub
in
enter
das
dec
cli
xchg
inc
lahf
adc
and
adc
popf
pop
cmp
or
jno
fs
mov
test
in
adc
cmp
inc
test
rcll
sub
daa
scas
movsl
mov
push
mov
fwait
notb
loopne
xchg
xlat
sub
mov
or
ret
xchg
pop
cmpsb
dec
inc
add
sti
sbb
xchg
push
mov
mov
jle
ja
loop
stos
repz
cmp
or
shr
sub
pop
mov
cmp
xchg
cmp
inc
push
movsl
mov
pop
aas
or
mov
std
push
xor
dec
test
mov
pop
call
mov
and
rorl
insb
int3
mulb
inc
push
cmp
faddl
rclb
and
mov
xchg
mov
inc
pop
cmp
cli
cs
js
loop
clc
lods
outsl
andl
scas
cmp
sbb
cmpb
and
iret
mov
mov
mov
adc
pop
cmp
pop
and
push
mov
scas
cmc
pop
sbb
xor
mov
cmp
and
scas
adc
int3
lea
mov
clc
nop
cld
or
mov
mov
daa
pop
js
bound
lahf
or
cmp
xor
sub
iret
push
cwtl
xlat
sub
sub
icebp
sbb
sub
lret
jp
mov
cmpsl
dec
loopne
fwait
fwait
lock
in
lret
cmpsl
cmc
push
lock
push
push
lds
lret
sub
lret
ljmp
push
pushf
out
push
mov
mov
push
sbb
and
mov
mov
les
mov
pop
add
aaa
mov
test
pop
xor
dec
and
rorb
scas
aad
nop
in
aaa
jmp
push
rcl
add
cs
insl
mov
or
adcb
jnp
cmp
shl
in
mov
clc
loope
sbb
cwtl
pop
and
incb
push
mov
lods
jl
sub
add
sub
pop
xlat
xchg
add
in
adcb
adc
outsb
int
push
sbb
adc
ss
jnp
or
sub
push
cmp
push
mov
push
mov
xchg
fidivl
add
or
sbb
pop
jne
push
call
insb
enter
dec
jl
mov
int
int
mov
aaa
cmpsl
cld
mov
mov
xor
push
cmp
enter
push
out
dec
push
mov
test
scas
cwtl
dec
xchg
cmpsb
mov
mov
inc
fstpl
dec
pusha
mov
xor
hlt
lret
scas
cwtl
mov
cmp
push
push
xlat
jge
insl
add
int3
clc
add
popa
pop
dec
bound
dec
outsl
daa
cmp
mov
ljmp
mov
pop
jne
xchg
addr16
loop
cmpsb
dec
adc
cmovl
mov
pop
arpl
pop
pop
cmp
adc
out
leave
movsl
sbb
push
cli
test
fsubs
icebp
or
addr16
inc
cmp
mov
sbb
mov
jne
sbb
adc
test
inc
mov
mov
pushf
jbe
jns
add
dec
push
push
inc
shll
xchg
outsb
cmp
add
and
lock
aad
dec
adc
shll
cs
cmp
cmc
xchg
call
cmp
addb
inc
or
shrl
sbb
cmp
xor
loopw
xchg
repnz
lea
fisubs
in
int3
jp
inc
sub
daa
pushf
lret
cmc
xchg
mov
or
dec
ficoml
jb
jge
hlt
push
ficompl
scas
filds
cmp
aas
add
roll
out
int3
out
xchg
mov
std
aad
push
mov
lcall
push
out
inc
jecxz
adc
bound
and
add
enter
add
jl
mov
mov
lcall
pop
iret
ret
mov
mov
fdivl
mov
sbb
mov
push
push
cs
pushw
lods
imul
pusha
adc
enter
dec
sub
das
pop
mov
dec
lods
clc
in
addr16
jl
or
dec
xchg
or
imul
clc
or
or
cmpb
sub
dec
push
mov
jns
fstl
push
mov
lods
sbb
rcrl
test
mov
jns
inc
mov
aaa
scas
pop
and
loopne
jnp
mov
and
and
mov
or
mov
push
add
mov
nop
loop
adc
dec
add
push
and
lods
mov
push
in
dec
dec
mov
xchg
xor
xchg
pop
sbb
imul
pop
cmp
xchg
add
xchg
js
mov
jo
dec
fs
jne
aad
fs
cmc
push
test
int
fadd
adc
dec
adc
sbb
cmp
js
xchg
out
push
adc
jne
sbb
and
sahf
sub
push
push
sbb
or
clc
fs
mov
jno
nop
das
inc
sbb
inc
xchg
inc
and
les
fdivrs
mov
mov
in
add
jns
out
push
loop
mov
inc
call
mov
sub
inc
mov
inc
testb
push
sarl
fstpt
adc
push
js
outsb
xor
pop
jae
xchg
movsb
sub
mov
xor
push
aas
shl
mov
pop
leave
add
jo
mov
xor
pop
adc
jo
popf
pop
jge
loopne
or
pop
and
pop
les
jbe
in
xchg
inc
mov
xor
icebp
jnp
dec
jle
sbb
pop
cmp
in
pop
cmp
outsb
adc
pop
bnd
dec
sub
ss
movsb
add
sbb
sbb
sbb
xor
popf
loop
aaa
add
sbb
faddl
mov
in
xorl
mov
loop
inc
aas
and
pop
gs
ffreep
inc
loope
test
dec
sbb
nop
sub
stos
sarl
jmp
dec
xchg
fisubl
fisttpll
cmpsb
and
gs
add
ja
jecxz
clc
jp
fdivrs
sub
push
pop
inc
sahf
pop
fisubrs
enter
pusha
bswap
sub
cmpsl
xchg
push
push
lods
test
sbb
lret
xor
adc
scas
and
ret
push
sahf
dec
fsubs
jo
push
push
dec
shll
sbb
popa
sub
imul
jecxz
cmp
sbb
pop
outsb
mov
mov
dec
loope
mov
imul
or
cmc
inc
loope
cmpsb
sbb
popf
mov
and
push
and
daa
dec
xor
flds
cmp
mov
or
fstp
int
aad
push
sub
movlhps
clc
push
cltd
decb
mov
into
pop
ja
bound
push
pushf
repnz
addr16
daa
test
les
xchg
call
repz
sar
in
es
insb
mov
ret
jg
sbb
daa
cld
jp
jl
lock
lret
mov
mov
jge
sub
lods
fdivrl
daa
add
sub
mov
inc
dec
dec
sbb
jnp
lahf
cwtl
scas
shrb
sub
pop
in
and
and
push
adcb
lods
pop
and
loop
pop
mov
sbbb
mov
xchg
sub
nop
mov
mov
in
add
cmc
cmp
daa
push
mov
inc
add
nop
je
int3
lock
clc
sbb
loopne
loope
jae
xor
lods
in
arpl
rcll
test
jns
test
outsb
in
aaa
mov
mov
rorl
mov
cmp
xlat
sub
rclb
jmp
pop
cwtl
mov
and
sbb
stos
xor
dec
xchg
testl
orb
mov
or
lods
stc
aaa
fidivrl
js
dec
test
cltd
test
jmp
scas
sbb
jbe
sbb
insl
pop
ret
pusha
test
xlat
mov
xchg
mov
shr
add
jp
in
sub
mov
sti
mov
mov
fisttpll
out
push
rcrb
aad
cld
imul
notl
add
and
mov
ljmp
popa
sbb
sub
and
popf
push
adc
test
loop
outsb
sbb
popf
xchg
add
xchg
or
jp
push
jne
push
fists
fcomp
imul
lods
mov
mov
cld
add
fidivs
jnp
dec
inc
push
not
out
mov
loopne
loop
sub
mov
lock
mov
rcr
dec
mov
push
lock
inc
jne
fdiv
sub
xor
and
sub
inc
rclb
lret
das
lods
leave
das
cmc
mov
repz
out
add
outsb
dec
or
popf
lods
das
and
mov
cmp
cli
jnp
inc
in
jle
and
stos
jno
pop
pushf
pop
pop
ss
aaa
sub
movsb
pop
outsl
lahf
rclb
out
sahf
nop
adc
and
hlt
xor
lahf
push
leave
xor
jge
mov
sub
mov
xchg
fistps
jbe
sbb
mov
mov
test
lcall
sbb
pushf
rdpmc
ss
add
jnp
shrb
pop
jae
clc
inc
xchg
jno
and
pop
sbb
stos
push
shll
mov
cld
bound
notl
mov
push
jno
or
inc
fdivl
mov
cmc
mov
icebp
leave
outsl
sub
jbe
sahf
dec
lea
xor
scas
xlat
pop
jne
or
xchg
mov
rclb
insl
out
sbb
hlt
adc
test
and
daa
jnp
jnp
xor
mov
insl
mov
sbbb
add
push
cltd
sub
mov
or
addr16
mov
cs
adc
pushf
test
cli
mov
add
sbb
aas
mov
adc
xchg
shr
shll
mov
lcall
mov
mov
cmp
jp
mov
add
rcrl
and
add
imul
jp
push
aam
xchg
js
adc
sub
mov
pop
jge
push
jno
cmp
push
pop
push
xor
or
popa
popf
cld
dec
in
sbb
xchg
je
lock
pushf
test
xchg
fsubrl
or
inc
pop
jb
xchg
cld
xor
xchg
fistpl
repnz
pop
cmpb
out
sub
je
jl
hlt
cmp
push
dec
hlt
ds
scas
scas
pushf
fmul
popa
addr16
inc
adc
push
enter
push
push
loope
aaa
mov
cmp
jae
xor
mov
mov
mov
dec
inc
out
es
or
aam
xchg
push
xor
divb
dec
cmc
nop
lods
scas
and
leave
add
arpl
inc
cltd
dec
mov
lahf
and
jne
cld
aas
vmread
aas
push
jle
je
mov
jle
fdivrs
sub
mov
fisubs
addr16
dec
xchg
imull
in
mov
and
mov
es
fistl
xor
jne
pop
in
inc
xchg
and
int
leave
frstor
fwait
int3
xchg
pop
mov
jbe
mov
mov
adc
sti
jns
jecxz
adc
adc
mov
data16
mov
sti
cmc
inc
andb
aad
push
rclb
xchg
xchg
cmpsb
push
mov
nop
imul
lea
ficoms
aad
jae
aad
in
mov
stos
and
add
negl
fdivr
mov
mov
jg
aam
mov
fistpll
mov
push
mov
sub
arpl
dec
stc
inc
mov
out
mov
xchg
inc
ret
scas
sbb
insl
xchg
push
pop
xchg
in
imul
mov
xchg
xchg
jmp
out
mov
push
push
sbb
cmpsb
ret
or
xor
jp
or
xlat
das
push
aas
stos
xchg
mov
sbb
and
sahf
cmp
loop
test
mov
sub
push
xchg
imul
xchg
imul
push
lds
ljmp
mov
sub
sbb
sarl
loope
mov
dec
stos
xor
sbb
xor
jmp
sbbb
popa
test
mov
inc
cmp
mov
sub
in
out
lret
add
test
ljmp
sti
ficoms
lods
or
mov
decb
stc
das
mov
lahf
aaa
sub
jg
inc
mov
sub
and
jb
mov
lret
rorb
test
push
add
adc
xchg
pop
adcb
push
jnp
jl
mov
jmp
mov
repz
mov
pop
xchg
in
mov
jmp
adcl
test
imul
loopne
pop
lock
fisubs
flds
adc
pusha
sarl
les
insl
loopne
std
in
and
test
sbb
sub
inc
mov
cld
xchg
cmp
lds
popf
out
adc
lahf
mov
ds
and
xchg
xchg
pop
imul
mov
clc
adc
pop
push
test
push
cmp
pop
mov
ret
and
cmp
and
inc
dec
add
andl
push
mov
dec
std
push
ljmp
adc
into
test
and
mov
stos
cmp
cwtl
leave
dec
jne
clc
pop
push
xchg
mov
test
jae
lock
push
inc
in
cmp
add
popf
dec
ja
pop
scas
in
xchg
inc
xchg
sahf
lcall
push
cmp
lcall
fimuls
cs
es
pop
mov
arpl
ret
mov
push
push
daa
sub
add
fwait
push
fnsave
fadds
mov
outsb
adc
adc
mov
ficoms
jb,pn
imul
movsb
out
js
inc
inc
xor
dec
lea
sub
out
adc
inc
inc
sbb
xchg
popa
dec
nop
into
leave
outsl
out
or
mov
not
and
sub
mov
adc
outsl
mov
out
add
add
js
xor
mov
jae
inc
sub
cli
fbstp
cwtl
pop
xchg
pop
stos
sbb
xor
outsl
out
dec
cmp
loop
mov
dec
jns
jp
pop
decb
shlb
lods
push
test
sub
stos
or
or
dec
into
repz
in
loope
fcmovu
sub
push
push
fildll
push
cmp
in
pusha
pop
cmp
xchg
xchg
inc
and
ds
push
fidivs
lahf
clc
jle
rclb
or
repnz
xor
ds
lods
push
mov
jnp
cmp
shl
push
inc
inc
dec
scas
js
fstps
push
sub
fists
loopne
xor
pusha
pop
mov
push
stos
and
sbb
pop
into
dec
ror
mov
push
arpl
xor
imul
gs
inc
or
inc
mov
push
mov
icebp
add
xor
hlt
push
loope
in
and
int3
push
clc
mov
ja
cld
leave
iret
and
test
ds
inc
sub
cltd
mov
add
es
adc
das
xchg
aaa
clc
cmp
sub
popf
in
inc
mov
iret
xor
in
mov
jbe
loop
mov
fnstsw
and
mov
inc
jp
jns
rcll
movsl
dec
lds
int
mov
mov
movsb
cmpsl
inc
cltd
insb
push
mov
mov
jp
aas
je
jb
dec
sub
jb
jb
mov
inc
ljmp
hlt
xor
ret
mov
dec
movsl
insl
push
repnz
sbb
xchg
jns
or
jo
jns
mov
add
and
adc
movsb
xchg
push
adc
jle
cltd
or
fdivl
test
sbb
pusha
jmp
xchg
out
in
or
mov
jbe
xchg
jbe
dec
test
movsb
mov
mov
not
sub
fwait
add
sbb
in
ret
stc
dec
cmc
pop
sbb
out
fdivrp
adc
ja
push
dec
xchg
sahf
lods
stc
add
mov
pusha
je
push
scas
dec
outsl
cmc
pop
push
mov
shl
ret
inc
test
mov
inc
adc
int3
data16
in
rclb
notl
adc
jle
xchg
andl
mov
ficompl
movl
xchg
mov
mov
orl
mov
push
lea
dec
jmp
adc
ljmp
or
dec
inc
jl
in
insb
sub
cmpsb
adcb
out
pop
ljmp
lea
push
fdivs
add
adc
scas
fisubrl
adcb
data16
xchg
push
push
popa
push
aaa
xor
js
fisubs
add
mov
mov
and
int3
mov
pop
sub
outsl
mov
into
push
outsl
jg
pop
es
cld
jp
es
xor
lods
sarl
xor
repz
js
mov
or
fisubs
push
dec
mov
daa
mov
ret
test
rcrb
sub
mov
and
mov
and
xor
inc
jne
adc
inc
cmc
dec
mov
push
and
mov
sub
enter
push
jmp
adc
jae
mov
jns
mov
jno
adc
je
pop
cld
clc
loope
mov
push
and
mov
push
dec
scas
dec
mov
mov
fstps
syscall
fs
cld
loopne
inc
shrl
test
add
das
mov
aaa
mov
negb
lea
enter
aaa
das
cltd
mov
inc
das
xchg
bnd
mov
or
pop
repnz
out
lret
and
icebp
jge
sub
icebp
mov
sbb
cmpsl
aaa
xor
lock
mov
nop
stos
sbb
push
lods
loope
jnp
inc
adc
jmp
mov
mov
lds
mov
xchg
aas
test
add
mov
xchg
push
in
sub
xor
sub
push
shll
incl
mov
or
mov
jle
jmp
inc
sbb
dec
xor
add
inc
aam
cmpsl
push
rcrl
xchg
fwait
push
add
sub
das
arpl
hlt
xchg
cmp
push
or
cmpsb
sub
js
lea
int
in
outsb
push
out
outsl
and
mov
jg
aad
fldt
cmp
pop
mov
and
fidivrl
dec
jb
mov
cmc
loop
daa
ficomps
leave
shlb
add
into
push
push
mov
cmpsb
push
test
out
mov
xchg
out
inc
fcompl
xor
dec
jo
cwtl
sub
jmp
mov
sbb
scas
pop
test
outsb
sub
xlat
mov
icebp
out
ss
sarl
test
and
mov
aaa
mov
cmpsl
int
orl
out
fdivrp
jne
daa
mov
inc
loop
lods
cmp
nop
jecxz
cmc
lea
cmp
rclb
dec
jge
xchg
push
mov
rcll
arpl
fwait
jne
cli
repz
pushf
sub
imul
into
mov
stos
inc
mov
inc
fldenv
gs
scas
fstps
add
pop
stos
iret
mov
mov
push
or
sub
test
push
popa
jno
fs
icebp
dec
bound
ss
pushf
push
adc
add
movsb
notb
shlb
xor
lret
lock
flds
pop
lods
dec
xor
lds
xor
adc
mov
jo
xchg
xchg
push
sti
adcl
ljmp
shlb
mov
mov
aas
outsl
inc
sahf
adc
add
loopne
das
mov
pusha
mov
inc
enter
test
xor
aad
sub
push
mov
mov
inc
mov
loopne
fisubrs
push
jmp
lcall
cmp
test
test
ljmp
push
call
clc
subb
jnp
std
inc
add
cmp
pop
mov
lods
arpl
rcll
test
xchg
push
out
xor
sete
and
mov
dec
sub
iret
rclb
sbb
les
out
cmp
out
imul
insl
pop
add
repz
negl
enter
mov
sahf
or
cmovbe
mov
dec
and
leave
inc
jle
in
cwtl
mov
outsb
pop
xor
jle
mov
pop
ret
in
jno
out
push
inc
dec
jne
test
movsl
mov
adc
aam
in
push
outsb
pop
adc
or
fildll
add
push
add
jbe
xchg
jmp
pop
out
aas
out
repz
in
test
push
or
mov
cli
cltd
mov
int3
and
lock
cmpsb
mov
mov
dec
dec
in
adc
inc
fwait
dec
or
ds
lds
sub
push
or
fldcw
dec
mov
adc
sbb
dec
pop
test
shrl
sub
movsb
push
sbb
pop
fcmovnb
cmp
jns
bswap
push
cmp
sti
into
cmpsb
jge
mov
and
in
fwait
push
ret
ss
pop
out
push
jle
sub
push
int3
popa
sti
mov
mov
mov
cmpsb
repz
aam
mov
jp
jns
adc
pop
call
cmc
pop
cmp
and
das
or
data16
xor
cli
jge
stc
mov
lods
inc
ss
xor
test
adc
aam
xchg
xchg
push
shrl
inc
data16
movsl
cld
pop
cmp
jns
daa
int3
sub
jbe
sbb
cwtl
fmull
sbb
rcll
or
pop
push
roll
imul
mov
out
mov
bnd
lods
jne
test
dec
add
sub
aad
aam
mov
dec
gs
mov
pop
mov
lahf
xchg
into
adc
in
add
mov
test
fdivl
fistps
or
pop
jmp
xchg
and
push
adc
sub
stos
clc
sahf
repnz
cmp
sbb
jl
push
inc
call
jp
sbb
js
ja
daa
dec
and
test
pop
dec
out
add
jno
lret
loopnew
cmpsb
dec
sbb
xor
cmp
dec
ret
jp
inc
mov
test
enter
lock
clc
mov
dec
fwait
sbb
popf
stos
xor
mov
adc
cmpsl
movsl
sti
inc
jo
in
xchg
test
push
xchg
or
jecxz
repnz
in
jecxz
int3
mov
lods
mov
movsl
mov
dec
divl
lea
lahf
cmp
push
ret
in
popf
das
xlat
shlb
dec
loopne
push
dec
jg
jg
pop
and
pop
lahf
xchg
clc
push
mov
cmp
popa
data16
xchg
xor
xchg
data16
outsl
jle
lods
jecxz
in
test
or
les
lahf
in
pop
jnp
pop
xchg
add
mov
scas
decl
sbb
fwait
out
int3
das
dec
loopne
sbb
lcall
xchg
adc
xorl
pop
insl
std
jb
xchg
cld
jne
xchg
mov
cmp
inc
jg
outsl
jmp
repnz
cmp
fcmovbe
push
lret
inc
or
aas
cmp
mov
add
sub
lock
sbb
add
cmp
pop
dec
cltd
bound
test
pop
fbld
popf
pop
in
jo
xchg
rcrl
jge
mov
ljmp
ja
les
shlb
addl
adc
je
push
xor
test
xchg
cmp
lcall
pusha
dec
mov
stos
mov
fcomps
loope
lock
push
push
dec
jo
mov
mov
inc
loope
ds
sub
dec
insl
ss
mov
nop
fistps
lret
pop
cmp
dec
xor
pop
int
pop
gs
cs
or
adc
mov
push
lcall
jbe
fidivs
xlat
push
jns
inc
or
pop
test
mov
and
push
mov
push
mov
orl
mov
lods
pop
mov
adc
and
ret
push
lcall
lods
lock
dec
je
and
sbb
adc
inc
xchg
mov
mov
iret
push
cld
pop
add
add
sub
xor
jno
add
inc
bound
xor
out
sub
gs
cmp
inc
fs
or
adc
mov
sbb
and
jle
test
sbb
popf
lahf
push
icebp
lds
xchg
and
mov
fwait
loope
not
pusha
ficompl
out
inc
adc
xchg
outsb
cs
orb
sti
rcrb
push
xchg
scas
xor
lock
jo
lcall
adc
aaa
push
imul
filds
jg
in
hlt
in
js
and
ficoml
and
xchg
sub
cltd
push
repz
adc
ljmp
xchg
aad
xchg
je
addr16
add
clc
dec
adc
jae
int
jne
xchg
push
adc
lock
dec
insl
sub
nop
into
fcompl
cmpsb
mov
mov
aad
xor
ret
sti
mov
fs
fadd
push
sbb
and
mov
mov
insl
pop
ret
mov
lret
inc
sub
addr16
xor
cmp
bound
lret
out
inc
and
rorl
aam
loope
mov
out
mov
mov
inc
std
insb
pop
pop
adc
sbb
call
lret
out
sbbl
pop
push
mov
pop
sub
sbb
les
push
lret
enter
add
sahf
xchg
cmc
mov
cmpsb
cmp
dec
jbe
jmp
cmc
sarb
cmpl
fildll
cs
inc
fwait
jle
cmp
imul
mov
sbb
in
sbb
lds
xchg
in
shl
cltd
jl
adc
iret
inc
add
and
lods
cltd
sub
adc
push
xchg
pop
dec
scas
dec
scas
pop
pop
jo
or
adc
lret
test
out
pop
mov
fnsetpm(287
inc
into
dec
ja
dec
and
jecxz
xchg
data16
loop
cmc
jae
jmp
lock
sbb
arpl
divb
aaa
inc
adc
lcall
int3
scas
mov
jg
lret
push
xchg
loopne
movsb
rcrl
enter
and
stos
into
test
fcomi
lret
aam
sub
inc
mov
inc
sub
push
pop
int3
loopne
xchg
lahf
push
mov
sub
shl
jae
cli
out
push
mov
arpl
test
cmp
or
sbb
insb
call
test
rcrb
mov
dec
test
shl
push
rcr
push
imul
in
icebp
xchg
mov
or
inc
in
pop
push
std
lea
repnz
lods
dec
movnti
or
add
cmpl
out
pop
xor
cwtl
inc
bound
pop
icebp
or
int3
sub
test
dec
sub
loope
rcrl
pop
inc
scas
jbe
or
cmc
jp
je
and
out
jecxz
or
add
cmp
fs
data16
test
cmp
stos
sbb
out
xor
mov
adc
mov
and
fnstsw
hlt
mov
xchg
add
jnp
pop
or
div
fwait
add
cmpsl
ljmp
sub
cmp
xorb
mov
inc
jns
test
leave
sahf
sar
or
lahf
adc
jne
insl
shl
cmc
xor
test
scas
outsb
sbb
add
cmp
sbb
dec
adc
xor
dec
dec
and
icebp
js
divb
xchg
cmpsb
and
insb
adc
mov
out
scas
cmp
mov
push
js
mov
sub
shlb
and
sbb
jl
xor
aam
add
mov
mov
push
add
ficoml
arpl
sar
and
jp
daa
and
in
shlb
mov
jb
push
test
ret
outsb
popl
sbb
pop
pop
test
push
ljmp
and
ds
out
lock
sti
jno
test
push
lahf
xchg
in
and
test
iret
mov
sub
mov
int3
or
inc
les
jge
jmp
mov
insb
pop
sti
popl
xchg
loop
out
dec
test
int3
xor
aad
repnz
push
mov
dec
imul
mov
popa
call
stos
scas
mov
sbb
lcall
repnz
inc
stc
push
fistpl
xchg
and
es
add
inc
cmpps
add
bound
mov
ret
std
mov
jnp
mov
dec
imul
add
xor
icebp
push
jmp
or
rcrb
pop
pop
outsb
adc
call
out
jbe
jg
fimull
lods
imul
and
mov
and
sub
add
xchg
pop
lret
call
and
sar
fnsave
lret
inc
adc
cmpb
add
push
push
fidivrl
sbb
xchg
aas
inc
jge
movsb
out
jnp
lahf
into
jnp
pop
mov
movsb
jecxz
mov
in
mov
jo
ret
dec
inc
xchg
push
in
andb
insl
in
push
xor
push
mov
lahf
fldcw
mov
into
and
and
or
bound
sbb
mov
cmpsl
les
lock
fcompl
or
nop
lret
cmp
movsb
sub
jbe
fsubrl
fwait
dec
sub
out
mov
inc
xor
outsl
enter
lret
mov
shrl
aad
inc
gs
xor
cmp
cmp
fidivrs
rclb
mov
sub
mov
add
xor
sub
pop
mov
jnp
out
push
cmpsb
icebp
push
jge
sbb
mov
add
adc
mov
adc
imul
mov
sbb
jnp
mov
jno
mov
ret
cwtl
mov
pop
xor
ja
cld
popf
ljmp
icebp
sub
mov
sbb
and
sahf
xor
rorl
and
add
dec
or
or
ja
out
mov
adc
repnz
nop
lcall
mov
jmp
xchg
imul
test
adc
sub
dec
xchg
gs
fstpt
adc
sbb
lcall
pop
nop
mov
adc
cmp
or
mov
add
sub
sub
std
pop
jb
jmp
push
mov
std
fstl
push
int3
lcall
rol
cmp
cmpsb
mov
or
scas
dec
dec
pop
and
lods
cmp
aaa
cli
lods
jnp
shlb
das
stos
movsl
add
fimull
cld
mov
jbe
inc
jp
mov
test
xor
mov
xor
arpl
adc
sub
dec
and
lret
fwait
test
stc
rcr
iret
jmp
pop
lea
int3
jno
fidivrs
iret
xchg
mov
sbb
lods
ret
dec
sub
and
mov
mov
sbb
into
mov
push
pop
int3
stos
cmpsl
sbb
jl
fndisi(8087
xchg
sub
cmp
cmp
mov
pop
sbb
shll
add
and
inc
cld
lods
inc
movsb
aaa
sub
dec
mov
shrb
icebp
mov
mov
mov
or
pop
sarb
fidivrl
sahf
loope
push
pop
inc
pop
mov
shll
dec
shll
fcoms
cmp
in
imul
lds
sbb
jg
dec
mov
jns
cli
sti
icebp
jnp
bound
in
aaa
pop
aas
cmp
push
mov
jecxz
das
movsl
jb
daa
adc
cwtl
adc
sub
test
pushf
fdivl
lcall
insl
lret
aas
jo
adc
sub
in
rclb
xchg
ja
inc
in
leave
enter
test
test
adc
jge
jnp
lret
sbb
adc
lds
movsl
inc
testl
out
mov
jbe
adc
ret
push
mov
cmp
sti
add
lret
mov
mov
inc
xor
gs
lods
fwait
jmp
fs
jge
xor
ja
cmp
fsts
push
jmp
loope
mov
outsb
ljmp
lcall
outsb
dec
ret
testb
in
sub
adc
jp
sub
insb
adc
in
cmpsb
nop
mov
pushf
or
adc
push
cmp
mov
into
push
jae
movsl
fnsave
les
xchg
in
xor
aam
inc
test
outsl
adc
xor
xor
xchg
cmp
fisubs
shr
lods
or
aad
jbe
rcrl
fpatan
push
stos
adc
inc
or
out
push
add
xchg
call
dec
push
divl
fiadds
pop
push
out
xchg
push
mov
aas
aad
je
call
aam
xchg
in
mov
push
xchg
inc
pop
or
fldl
push
cmc
mov
rcll
fwait
dec
es
pop
cmp
rep
mov
in
mov
sub
dec
call
mov
xchg
adcl
jg
push
inc
jns
stc
mov
lahf
pop
nop
mov
and
or
jp
or
sbb
repz
push
mov
call
rcl
sti
cmp
adc
jo
addr16
arpl
sbb
pop
pusha
or
sahf
xor
rorl
icebp
dec
pop
sbb
repz
mov
mov
dec
movsb
iret
xlat
inc
cwtl
inc
rcrb
push
and
mov
leave
mov
and
xor
sbb
loope
push
sbb
pop
ljmp
pushf
aaa
jb
sub
jbe
jp
mov
jmp
jmp
and
int
ret
repz
inc
cmp
xrelease
fidivs
or
cltd
stos
sbb
cmp
sub
and
sub
xchg
js
jmp
movsb
mov
mov
push
xchg
pop
gs
mull
push
dec
sbb
fisubl
or
sbb
in
push
cmp
mov
xchg
xchg
sbb
fstp
pop
pop
and
jmp
fwait
mov
cmp
jnp
pushf
mov
leave
dec
or
xchg
stos
cmp
pushf
dec
test
lods
fisubrs
xchg
dec
mov
loope
mov
adc
lods
mov
les
or
hlt
clc
mov
mov
jns
sahf
sbb
lock
pushf
sbb
mov
xor
test
mov
add
push
insl
sbb
pop
push
dec
fnstsw
inc
push
cmp
push
fcompl
leave
sbb
imul
fcomps
mov
mov
and
add
orl
fsub
stc
dec
les
pop
dec
out
push
dec
inc
out
cmp
mov
mov
mov
sub
inc
jg
xlat
mov
sub
pusha
inc
ljmp
popa
xchg
dec
push
shrb
aas
xchg
cmp
jne
mov
fsqrt
out
lock
mov
sub
and
xchg
stos
jle
mov
and
mov
push
or
int3
add
jp
stos
cmp
test
test
into
out
shrb
push
movsl
ds
push
jbe
cmp
testl
pushl
push
sub
outsl
into
aam
imul
out
sarb
sub
sarb
rcr
and
je
pop
xor
test
imul
test
mov
lret
pop
cld
rorl
or
stc
lds
mov
pusha
setp
jl
nop
lcall
xchg
out
int3
lds
pop
nop
xlat
push
pop
aaa
comiss
and
repz
cmp
mov
int
jne
stos
loop
pusha
lods
mov
es
jbe
and
addb
jmp
adcl
jns
aas
sub
sbb
lea
loopne
mov
sub
fidivl
or
xchg
or
iret
add
lret
pushf
jne
xchg
mov
fwait
mov
xor
jbe
mov
outsl
xchg
xchg
loopne
xchg
pop
dec
repnz
loop
popa
imulb
dec
sbb
aas
inc
inc
xchg
or
aaa
jge
fsubs
and
stc
movsl
and
clc
loop
mov
mov
cld
inc
inc
dec
sub
sub
ror
jne
jne
lods
sub
call
xorb
decl
dec
xchg
xchg
push
pop
ficomps
pushf
pop
jo
jne
fcomps
je
mov
fs
jae
xchg
bound
push
ss
pushf
fcomi
test
mov
cltd
aaa
shll
mov
push
sub
jmp
xor
mov
sbb
in
dec
adc
sub
mov
cmp
insl
inc
pop
and
xchg
lods
jecxz
sub
add
lahf
cltd
jno
imul
adc
xchg
inc
mov
dec
and
les
sarl
sub
jnp
imul
pusha
mov
xor
xchg
les
add
hlt
aam
ret
sbb
inc
fistpll
add
lahf
mov
cmp
ret
adc
test
insl
add
mov
cmp
xor
jmp
scas
int3
jmp
or
pop
inc
lock
movsb
lahf
ret
lret
ja
adc
and
fildl
es
push
sub
sbb
jecxz
fdivs
pop
mov
inc
hlt
sbb
cli
sub
or
pop
mov
ret
sbb
loopne
jg
dec
rcll
mov
xchg
mov
mov
and
aaa
mov
popf
dec
cmovb
jle
jns
mov
enter
gs
inc
int3
push
mov
into
aam
cmc
add
jmp
mov
sbb
leave
push
hlt
inc
std
lret
pop
cmpb
pop
or
sbb
sub
pop
imul
xchg
subl
jl
pop
jne
jg
out
loopne
mov
xlat
push
stc
xchg
fsubrl
xchg
fnstcw
dec
cmc
mov
sub
dec
aad
or
mov
xorl
ljmp
pop
cmc
and
iret
mov
mov
movsl
xchg
dec
icebp
pop
popa
sub
jle
popa
xchg
inc
inc
adc
cmpsl
inc
in
dec
and
pop
jo
push
cmc
shrb
aad
stc
cmp
sub
in
fs
sub
insb
negl
jg
push
or
test
clc
mov
out
mov
jecxz
push
mov
jmp
stos
xchg
in
add
lret
push
jp
push
repz
nop
insb
jge
leave
mov
cld
loop
jg
cli
movb
jge
pusha
push
loope
cmc
mov
fwait
jp
jae
jbe
subl
push
xor
cmp
and
cmp
mov
xchg
mov
mov
cs
test
lcall
pop
leave
add
mov
sti
mov
dec
dec
lret
lret
inc
loope
mov
pmaddwd
sub
lea
sbb
jnp
das
pop
mov
mov
lea
pusha
lcall
pushf
or
sub
dec
jnp
cmp
out
adc
aaa
inc
pop
xlat
es
aaa
cmp
lret
push
andl
inc
outsl
cmpsl
dec
jecxz
mov
pop
mov
fadds
xor
sub
or
aas
mov
cli
pop
push
cmp
popa
pop
mov
notb
cmpsb
in
inc
xchg
push
push
movhps
aaa
dec
and
sahf
adc
test
test
cmc
mov
cli
jbe
ficomps
stos
gs
fcmovne
std
xchg
pop
test
fwait
jae
scas
mov
push
push
inc
ret
inc
stc
adc
lahf
dec
add
adc
mov
xchg
enter
push
les
mov
mov
mov
pusha
sbb
sub
sbb
fistps
or
movsb
sub
rolb
or
scas
fnstenv
ja
int3
inc
or
fldcw
jno
sub
cmpb
in
inc
ficoml
orl
js
lret
outsl
adc
push
shlb
int3
mov
mov
sbb
out
jg
scas
push
adc
mov
rorb
inc
push
sbb
cmp
pop
insb
scas
scas
stos
push
repnz
dec
in
add
int3
and
push
ja
popa
mov
jecxz
out
enter
jecxz
sbb
repnz
int3
sbb
test
adcl
sti
jp
in
mov
jne
call
jecxz
fs
out
sbb
lods
add
inc
movsl
jb
loope
jae
xchg
iret
or
out
xorl
add
pop
sub
icebp
test
dec
jecxz
jne
fucomp
sti
in
out
sbb
xchg
shrd
sti
repnz
cmp
shl
iret
and
mov
enter
ss
fcomps
shlb
and
shrl
in
std
xor
mov
fiadds
sbb
add
and
repnz
outsl
pop
loope
rolb
in
test
test
push
ja
xor
cmp
mov
cmp
sub
xchg
icebp
add
lret
pop
jbe
out
fistpl
sbb
pop
insl
mov
adc
adc
inc
cld
sub
shll
fstpt
add
sbb
jae
jmp
dec
nop
aad
mov
es
popf
pop
mov
or
add
ffree
jne
fldt
popf
cmp
jmp
dec
scas
aaa
push
push
and
adc
sahf
into
dec
das
fimull
or
adc
and
mov
cmp
subb
in
vpaddsb
stos
sbbb
add
das
jl
hlt
push
test
insb
popfw
push
add
cmp
ret
out
mov
adc
lcall
sub
xor
lcall
outsb
mov
mov
mov
jnp
and
cwtl
push
pushf
andl
dec
pop
fstl
xchg
mov
icebp
cmp
sbb
mov
push
mov
and
pop
or
adc
and
inc
push
mov
add
jnp
xchg
and
or
arpl
inc
lock
stos
repnz
add
mov
jne
ss
xchg
adc
scas
cmp
pop
pop
daa
fwait
decl
sub
roll
out
fxtract
xchg
icebp
push
push
adc
lret
add
jb
cli
mov
pop
ljmp
adc
sub
idivb
mov
rcrl
mov
jo
mov
adc
test
jl
mov
and
xor
adc
imulb
sub
push
xchg
xor
cmp
aam
clc
dec
push
iret
push
adc
xchg
xchg
push
cmp
enterw
enter
cmc
jecxz
push
cmp
or
daa
cmpsl
les
rcrb
loopne
inc
loope
mov
test
pop
dec
inc
fistps
sub
cmp
fsubrl
jmp
fmuls
mov
fnstcw
xor
jb
mov
push
pop
or
in
add
and
in
adc
aas
rcl
cs
fdivs
pusha
dec
aas
xchg
pop
test
cmp
stos
and
movsb
adc
sub
sub
xorl
mov
jp
cmpsl
movsl
movsb
inc
call
imul
mov
mov
dec
mov
ss
lret
jno
pop
mov
push
pop
loopne
cli
add
out
jecxz
or
inc
jmp
imul
nop
pop
mov
mov
push
ffree
gs
push
aam
xchg
and
nop
cld
mov
pop
aaa
cmp
and
mov
lods
cmp
ficoml
sti
cmp
je
mov
test
aad
aas
or
mov
shrl
iret
xchg
outsb
out
aaa
mov
push
hlt
ss
out
xchg
and
fidivrl
or
dec
outsb
adc
jle
in
enter
hlt
out
fmulp
xchg
out
fdivl
pop
nop
or
cld
cmp
sub
shrl
imul
in
push
or
mulb
mov
fwait
inc
sub
mov
out
lret
scas
dec
pop
clc
and
imul
jb
push
jo
inc
insl
sub
and
dec
sti
fdivrp
adc
xor
sub
jle
popf
sub
movsl
out
daa
sub
dec
jmp
cmp
jmp
jo
insl
jecxz,pt
or
daa
adc
mov
lods
add
das
mov
pushf
jg
ds
mov
fimuls
or
mov
mov
mov
pusha
xor
imul
jb
xorb
scas
adc
sub
xor
fwait
dec
bound
outsl
insl
pop
jg
bound
ljmp
cmp
xorl
inc
sbb
arpl
std
ss
rolb
mov
es
push
xchg
mov
push
push
mov
lret
mov
movsl
mov
pusha
pop
outsb
push
mov
shll
sub
les
sarl
ds
ja
mov
pop
mov
std
cmpsb
cwtl
mov
dec
adc
inc
mov
add
adcl
filds
cmp
push
xor
insb
mov
mov
mov
das
or
mov
fsts
lahf
sbb
fimull
adc
xor
addb
xor
push
outsb
xchg
aad
jle
xchg
dec
push
jl
sbb
or
cmpsb
lret
js
frstor
sub
mov
xchg
push
and
aas
cli
sbb
cmp
inc
lock
addb
mov
cmp
and
add
pop
push
notl
sub
sub
je
mov
and
add
adc
mov
xchg
hlt
pop
es
mov
pop
mov
add
cltd
cmp
jb
fnstsw
adc
push
negb
pop
inc
mov
aaa
fdivrl
xor
sbb
clc
cmpsb
in
add
inc
xor
int
and
js
xor
mov
lret
popf
push
mov
cmpb
dec
and
jl
repnz
or
push
push
cmp
into
pop
dec
insb
ficoms
sbb
xlat
push
in
xor
adc
ss
mov
mov
in
or
sub
jno
sbb
and
mov
rcl
ficoms
adc
fwait
les
hlt
mov
and
xchg
xor
jle
insl
adc
pusha
ret
jns
mov
in
mov
icebp
push
daa
xor
cwtl
int
mov
mov
rolb
lock
push
xchg
xor
mov
into
cmpl
pop
mov
mov
cmc
mov
and
sbb
int3
add
pop
ss
pop
scas
xor
add
xchg
xchg
fiadds
mov
imul
call
and
cmp
test
and
lods
lcall
inc
xchg
lcall
shl
dec
aam
jne
push
movsb
insl
and
call
or
jle
mov
fadd
es
enter
or
mov
jg
shll
prefetch
push
inc
xchg
mov
jne
frstor
fwait
rorb
sbb
cmp
js
adc
sti
lcall
dec
mov
xchg
xchg
dec
pusha
fcomp
push
and
cmp
inc
or
insl
mov
mov
cmpl
ret
jb
pop
jmp
push
mov
shlb
je
dec
adc
rcll
lea
add
pusha
pop
iretw
adc
inc
pop
mov
dec
or
into
icebp
shl
in
outsb
push
aas
outsb
js
push
and
test
jo
inc
loopne
outsb
cmp
mov
sbb
or
jl
test
push
cmp
inc
sub
ss
mov
loope
icebp
sub
je
push
frstor
mov
push
loopne
jno
xchg
sub
jmp
push
dec
insl
jns
push
adc
pusha
push
scas
cmp
cmp
mov
popa
push
fmuls
jbe
ljmp
sub
lahf
jnp,pt
xchg
dec
or
adc
aam
iret
movsb
jp
add
es
mov
ffree
fiaddl
cmp
sub
add
cmp
mov
cmpsb
sbb
or
movsb
xchg
mov
pop
leave
inc
loop
mov
scas
icebp
inc
xchg
cmp
and
bound
mov
notb
cmpb
and
pop
xchg
fiaddl
sbb
enter
push
aad
pop
mov
rcrl
mov
add
sub
test
cmp
and
fdivr
dec
in
dec
aad
enter
dec
in
jnp
add
stos
loop
xor
hlt
lret
ja
adc
cmp
push
inc
xchg
pop
xchg
mov
or
sub
mov
dec
sub
lods
pop
bound
ss
and
icebp
dec
dec
adcl
cmp
mov
leave
push
mov
iret
pop
adc
pop
xor
xchg
mov
add
int3
pop
push
or
cmp
lds
leave
test
cwtl
loope
int3
xorl
add
jnp
aaa
dec
scas
cli
inc
push
rcr
jae
shrb
stos
xchg
int3
mov
jge
out
jo
xor
mov
data16
roll
and
call
dec
jb
dec
mov
stc
fs
lahf
add
jmp
addl
lock
push
popf
loope
sbb
sar
jbe
inc
cwtl
add
hlt
fs
xor
in
fnsave
push
aas
into
movsl
aaa
xor
sarl
lods
cmovno
pop
fcomp
out
sub
ss
dec
mov
sub
ret
fisttpll
sbb
xor
hlt
ds
cmp
mov
or
outsl
and
dec
pop
repz
fldt
or
mov
clc
or
jno
jnp
repnz
mov
iret
add
mov
aad
popf
out
movsb
jg
ljmp
icebp
jbe
sub
std
mov
adc
pusha
mov
add
popf
ss
int3
inc
mov
jle
mov
aaa
mov
jl
stos
in
int
pusha
mov
in
xchg
in
jp
es
nop
stc
jl
arpl
aam
xchg
and
inc
movsb
fbld
cmp
dec
and
xchg
pop
push
scas
mov
xor
shlb
aas
sahf
and
mov
pop
dec
pop
and
cli
xorb
mov
mov
mov
in
dec
lea
push
inc
mov
mov
xchg
sbb
and
sub
hlt
cmpsl
cli
lock
push
dec
movsb
leave
icebp
mov
add
or
aam
add
fstps
lds
loopne
fldt
push
lods
and
cmp
negb
cmp
cmc
sahf
int
in
sbb
cmp
dec
and
mov
fwait
lret
xor
popa
int3
push
xchg
dec
add
mov
push
pop
mov
stos
sahf
push
jno
rcl
dec
push
pop
jle
cwtl
ficompl
add
mov
imul
pop
cmp
push
loop
ds
cmp
imul
stos
dec
icebp
repnz
inc
lock
xchg
jmp
xor
mov
in
and
fstpt
lds
inc
test
adc
dec
in
sub
hlt
mov
push
jmp
mov
inc
icebp
inc
mov
jge
bnd
sti
jno
cltd
das
sarb
pusha
add
mov
push
lods
in
outsl
sbb
xchg
xchg
pushf
fistps
jb
lcall
leave
pop
test
stos
pop
and
mov
mov
jmp
mov
addl
sahf
add
fisubl
xor
xor
dec
push
fiadds
iret
fldenv
or
mov
pandn
in
aad
popf
and
sbb
jp
xor
pop
sub
inc
pop
push
js
xor
mov
bnd
jno
jg
xchg
mov
cli
mov
adc
out
inc
hlt
leave
repz
pop
pop
lea
and
es
push
lahf
ljmp
aas
cld
cli
pop
inc
adc
pop
adc
add
fmuls
pop
pop
outsb
mov
lock
shlb
pop
das
sbb
vmovhpd
inc
mov
outsb
jns
sub
mov
das
icebp
cli
mov
and
sbb
aaa
ret
pop
enter
add
jecxz
push
xor
fdivl
pop
lock
mov
imul
mov
inc
add
sbb
pop
push
inc
pop
jmp
inc
sub
jno
mov
fisubs
adc
pop
and
xlat
inc
test
addl
jns
mov
and
js
divl
dec
jno
push
in
inc
in
pop
imul
in
xchg
aad
cltd
xchg
adc
push
aaa
pushf
shll
xchg
jb
ret
push
loop
pushf
add
xlat
jmp
sub
jp
xchg
insl
xor
mov
mov
or
mov
std
jne
or
jl
test
int
das
rcrl
pop
push
dec
mov
inc
sti
pop
mov
roll
imul
mov
add
cmp
pusha
loope
aad
stos
sub
dec
push
xor
sub
jge
lret
jmp
les
sub
sub
or
pushf
push
mov
mov
movsb
adc
sbb
xorl
movsl
dec
mov
popa
cmpsl
es
and
mov
mov
xchg
inc
ljmp
subl
sub
clc
test
cmp
sub
sti
xor
jb
or
das
cmp
cs
mov
cmp
rcll
xchg
inc
rcl
lcall
arpl
pop
push
inc
sti
sbb
sarl
xchg
jg
ja
ds
fstpt
or
jmp
xchg
pop
adc
insb
test
mov
shr
sub
lods
pop
nop
sub
mov
ret
sub
repz
cmpsb
cmp
leave
mov
ljmp
daa
add
es
imul
movsb
rcrl
inc
xchg
jl
xchg
shll
push
lds
lods
mov
and
mov
mov
and
push
imul
pop
sub
xchg
cltd
push
out
popf
fs
xchg
jmp
jbe
std
inc
jo
sbb
push
cmpsb
enter
subl
push
cmp
add
lock
xlat
ja
lods
hlt
cmp
sbb
rorb
fsub
nop
jno
lock
daa
pop
fs
adc
dec
mov
mov
and
movsb
fldt
dec
in
xor
add
fnsave
dec
je
cmp
mov
mov
loop
jae
out
les
test
mov
inc
mov
mov
es
adc
shrb
jmp
dec
mov
and
jp
dec
jno
shl
xchg
pusha
inc
mov
hlt
pop
mov
xchg
add
repz
scas
test
sub
xor
xchg
insb
mov
add
add
cld
push
stos
jl
mov
cmc
push
add
inc
xor
icebp
mov
outsb
neg
fldcw
mov
cmp
pop
sub
inc
cmp
mov
mov
ljmp
jae
mov
fldcw
push
inc
cmp
pop
push
lods
in
push
fs
inc
dec
or
scas
or
or
jb
and
xlat
outsb
sub
cltd
sub
scas
sbb
push
push
add
test
jne
mov
rcr
test
lds
ja
in
mov
mov
inc
jbe
mov
adc
and
xchg
sbb
mov
mov
dec
lret
lret
cmpsb
mov
insl
push
inc
rcrb
inc
push
lock
lea
pop
or
mov
jg
in
mov
sti
pop
jo
shr
sub
scas
test
pop
out
mov
notb
into
xor
dec
jp
insb
or
pop
jno
movsl
test
les
jle
icebp
int3
add
push
add
xchg
sbb
out
cmpsl
pop
insb
mov
or
test
cmp
sti
data16
mov
mov
data16
pop
or
in
pop
fs
out
add
out
or
cmp
in
adc
popa
popf
sbb
ss
push
imul
add
fwait
sub
sub
lret
rcl
adc
mov
pop
sbb
lea
in
adc
test
arpl
jmp
ffree
mov
sbb
das
sub
mov
test
cmp
adc
shl
iret
xor
jne
pushf
add
sbb
inc
and
test
push
std
push
ljmp
cmc
pop
mov
sbb
or
jle
les
popa
outsl
ljmp
jmp
mov
fldt
stos
mov
dec
fildl
mov
aaa
xor
pop
lea
adc
push
lock
lret
in
xchg
cmp
xchg
push
lds
sub
xchg
cwtl
shl
inc
mov
adc
not
dec
or
cmp
jmp
loop
fmuls
and
add
aaa
sub
sub
push
dec
shrl
dec
outsb
fwait
imul
rorb
dec
testl
cmp
je
movsl
fdivrs
dec
arpl
mov
fstps
loop
mov
pop
out
ljmp
dec
imul
data16
leave
push
pop
popf
imul
int
add
jle
movsl
inc
adc
mov
push
mov
fwait
inc
xor
jecxz
lods
xchg
imul
sub
jecxz
aas
mov
or
loop
add
mov
xchg
aas
xor
xchg
fistpl
daa
inc
mov
fwait
jmp
imul
hlt
leave
and
push
jne
loop
push
and
orb
sbb
push
xchg
cli
stos
loop
outsl
mov
test
sub
cmpsl
scas
mov
lahf
sbb
inc
insl
xor
aad
ss
outsl
out
mov
jl
call
out
std
imull
and
pop
stc
stos
cli
rolb
jbe
jp
lock
add
dec
xor
add
push
adc
or
jae
xchg
test
cmp
cmp
add
add
sub
xor
fnstsw
pop
dec
jmp
loope
test
inc
call
mov
xchg
idiv
cmp
aam
or
int3
insb
lea
clc
fcmovnu
inc
outsb
push
push
cs
js
and
dec
stc
fcomps
repnz
fcomps
and
or
push
or
xor
mov
call
dec
cmpsl
repnz
sti
mov
sbb
lcall
jp
add
sbb
movsb
addr16
mov
or
inc
lods
sbb
mov
sarl
cmc
xlat
call
jnp
adc
out
and
push
sarl
xchg
xchg
popf
push
mov
dec
aaa
sbb
repnz
fisubrl
or
cwtl
xor
adc
push
adc
sbbl
or
inc
xchg
and
insl
xor
test
adc
dec
fstpt
cmpsb
mov
scas
xchg
shll
xchg
jnp
iret
push
clc
jg
xor
cli
insl
add
dec
fdivrl
movl
jmp
data16
scas
mov
jns
in
fcompl
jp
mov
jecxz
outsb
adc
scas
pop
push
in
je
adc
mov
lahf
lcall
mov
out
xorl
in
jle
aaa
test
fistpll
jge
cwtl
inc
xchg
inc
sbb
iret
fcmovbe
cli
add
pushw
cltd
fldt
fnstenv
int3
xor
movups
jnp
dec
pop
mov
dec
xlat
jae
push
jns
aam
cmp
xor
insl
es
imul
pop
outsl
inc
push
xlat
repnz
loope
fstpl
cli
sahf
movsb
add
pop
adc
mov
jp
jae
fidivrs
sub
xlat
in
sbb
cmp
gs
aaa
arpl
addr16
loopne
add
jge
pop
pop
mov
jmp
inc
pop
adc
sub
sub
outsb
fistpll
lcall
fistl
xor
sub
jbe
add
clc
inc
int3
xchg
aaa
adc
mov
ljmp
sbb
sarb
shrd
lahf
mov
stos
loop
pop
push
icebp
mov
mov
jmp
in
je
cwtl
sub
lods
mov
cmp
fcomps
xchg
inc
dec
jle
fmull
adc
cltd
jecxz
or
inc
adc
popf
jbe
stc
outsl
stos
outsb
jp
cmp
data16
mov
xor
das
mov
cmc
xchg
or
shr
push
xor
shll
cmpsl
jmp
cmp
gs
cmp
cwtl
push
sub
jmp
xchg
ficoms
mov
adc
mov
repz
add
sbb
dec
pop
cmpb
dec
push
xbegin
mov
movsw
xchg
stc
sub
pop
push
add
jge
ss
mov
adc
push
subl
xorl
cmp
adc
or
and
mov
bound
add
ds
xor
lea
adc
scas
jmp
mov
lss
mov
nop
in
repz
icebp
and
fnstcw
iret
loope
fwait
clc
push
in
nop
jp
out
mov
lret
cld
cld
inc
aaa
inc
rorb
pop
mov
jns
sarb
xor
insb
dec
cmp
les
lret
std
push
fdiv
stos
aaa
out
idivl
testb
ss
jp
pop
cmp
sub
sbb
dec
data16
jbe
cs
test
test
cmp
push
mov
cmc
imul
int
loop
jno
imul
mov
gs
in
lret
mov
and
sbb
js
dec
inc
shrl
ljmp
sub
pop
pop
outsl
sbb
pop
pop
stos
lods
aas
mov
ret
ds
xchg
in
cmp
mov
or
xor
mov
lock
fstpl
aam
jge
cmp
pop
adc
and
mov
xchg
mov
test
jmp
rol
sbb
push
jb
lret
push
and
adc
or
xor
pop
std
inc
jb
lcall
pop
sarb
adc
push
data16
mov
cltd
jns
or
inc
dec
into
xchg
jb
lcall
mov
push
add
cmovae
xchg
push
pop
imull
lock
sbb
mov
push
sub
outsb
dec
aas
inc
xlat
in
lret
push
and
xor
mov
mov
sbb
xchg
sbb
pop
lea
imul
mov
and
fucomi
je
in
lret
xor
add
xchg
repz
addr16
scas
cs
jl
push
sbb
imul
mov
sbb
add
stos
cld
retw
sub
push
xchg
lret
nop
adc
pop
movsb
inc
mov
xor
add
clc
movsl
add
adc
push
inc
test
mov
and
cwtl
repz
push
sti
jle
lock
aas
int
bound
adc
aas
mov
frstor
out
mov
mov
pop
aam
cmpsl
inc
bound
test
shlb
mov
test
jecxz
pop
or
dec
ss
jae
inc
movsl
mov
sbb
or
jl
aam
adc
mov
repnz
insb
push
lods
mov
fldenv
pop
adc
cld
stc
aam
lret
mov
fsub
ret
int3
arpl
js
inc
push
mov
xchg
dec
sbb
cwtl
or
add
mov
les
sbb
sbbl
imul
fxch
fldenv
dec
pop
pop
fildll
test
push
cmp
shl
jnp
sarb
adc
jno
mov
stos
add
push
push
sbb
pop
fs
js
leave
inc
pop
dec
sub
xchg
adc
jb
roll
lcall
in
ret
in
out
dec
mov
jns
cmp
pushf
sbb
jl
out
fcom
bound
ja
mov
mov
cmp
dec
mov
adc
nop
mov
fcoml
mov
fdiv
jno
mov
sub
mov
push
or
repz
xchg
xchg
lock
daa
adc
insb
fistps
mov
lret
mov
cli
gs
and
xor
repnz
or
sub
or
leave
loope
xchg
jmp
jo
push
pusha
ret
jle
and
add
out
loope
pop
adc
rol
mov
ds
pop
std
jae
jno
fdivrs
mov
push
es
pop
shlb
mov
stc
push
jns
int3
popa
out
lahf
je
pusha
fimull
mov
push
outsl
outsl
push
ret
xchg
clc
negl
fildll
and
pop
lods
das
or
mov
and
out
cmp
sbb
xchg
or
push
sub
call
mov
nop
inc
mov
ljmp
cmp
inc
test
inc
pop
xchg
xchg
mov
in
repnz
push
repz
pop
mov
pop
popa
sbb
into
clc
mov
push
fnstenv
out
mov
aaa
daa
jge
arpl
pop
push
pop
in
call
adc
xchg
repnz
xor
dec
lcall
cwtl
pop
cli
cmp
mov
idivb
mov
mov
mov
repnz
xor
je
inc
pop
xor
lds
aam
mov
fucomip
sbb
icebp
jno
pop
push
mov
jae
sbb
in
inc
xor
xor
and
add
cmpsl
fmuls
cltd
scas
bnd
sti
cs
cmc
xchg
push
sbb
add
and
xor
xchg
push
xchg
push
and
outsb
jmp
and
xchg
sub
pop
outsb
or
and
nop
pop
sbb
sti
int
insb
daa
out
cltd
mov
jb
push
jbe
cs
mov
dec
pop
and
adc
mov
pop
jmp
mov
and
mov
int
in
cmc
int
jns
pushf
out
fs
leave
inc
mov
mov
mov
push
cmp
outsb
jl
aad
xlat
and
lret
rorl
jge
push
sub
imul
fdivr
jbe
syscall
les
dec
aad
inc
mov
movsl
or
pusha
cmpsl
fs
or
scas
dec
xor
fsts
jecxz
mov
test
out
addr16
in
pop
jl
cld
in
sar
mov
push
jae
insb
cwtl
sbb
imull
lret
mov
mov
int
cld
push
mov
fwait
loope
ret
mov
ljmp
negb
stc
xor
mov
and
mov
out
add
jo
ret
sub
shlb
mov
dec
ss
sbb
aaa
retw
pop
movsl
fiadds
out
mov
ret
add
insb
das
push
jp
in
rclb
je
dec
push
mov
jae
in
mov
test
jecxz
and
sti
cmpsl
lret
fisttps
sub
jg
xor
jo
rcl
test
sub
jecxz
call
jge
sbbl
dec
ds
nop
aaa
sbb
xchg
dec
lret
jae
outsl
lret
pop
jae
stos
lret
mov
das
je
push
stc
clc
adc
pop
outsb
mov
lock
mov
inc
mov
and
into
pop
xor
lock
dec
add
clc
rol
repz
call
and
push
jb
push
sub
movsb
loop
imul
mov
xchg
fcom
sub
dec
arpl
jbe
push
ret
ljmp
fildl
imul
jno
xchg
sbbl
push
mov
push
in
pop
jg
or
shrl
inc
lcall
or
xor
rorb
push
paddb
in
push
gs
pop
mov
cwtl
pop
xor
mov
xor
pop
push
lock
xor
loope
bound
pop
jbe
es
sbb
hlt
scas
cmpsb
pusha
test
xor
test
cmp
das
bound
loopne
mov
mov
test
mov
add
cmp
sbb
rolb
popf
mov
ss
arpl
ret
and
addr16
push
sbb
mov
outsl
xchg
jne
movb
mov
popa
movsl
scas
sub
and
mov
jo
mov
jb
shll
loope
iret
shll
scas
sahf
mov
add
scas
cs
inc
shlb
int3
lcall
sbb
scas
das
mov
cltd
push
pusha
xchg
push
mov
dec
inc
fnstsw
int3
rclb
cmp
hlt
leave
pop
xor
mov
out
jp
adc
lods
mov
rcrb
add
mov
cmc
mov
lret
lods
and
or
popf
fmuls
pop
sbb
sub
test
mov
pop
je
je
mov
adc
mov
popa
sub
or
test
xchg
stos
mov
in
or
jb
sbb
cmp
dec
test
mov
and
push
adc
pusha
mov
mov
sbb
xor
ljmp
xchg
push
js
in
mov
adc
sbb
das
cld
mov
cmp
push
outsl
jl
sub
sbb
push
mov
xchg
out
lods
mov
push
sti
xchg
hlt
push
jne
cmp
mov
loope
or
ljmp
loope
movsb
add
or
xchg
pushf
outsl
pop
dec
cs
push
ret
js
leave
jns
fwait
sub
xchg
gs
lds
out
decl
and
rolb
add
stos
sub
or
mov
fadds
pop
jnp
cmpsl
or
data16
cmpsb
mov
lcall
les
scas
or
ds
loope
inc
leave
jp
js
or
and
into
lods
pop
pop
test
pop
jne
pop
lret
ja
adc
or
inc
mov
pop
xchg
xchg
cmpsb
sub
lods
jecxz
icebp
mov
sbb
icebp
insb
negb
jmp
push
sahf
rcrl
jmp
mov
inc
cwtl
stos
sbb
dec
adc
mov
mov
pop
xor
mov
fidivs
movsb
sbb
mov
cmp
daa
cmc
fstps
fadds
add
orb
jecxz
sbb
sub
xchg
cmpsb
ja
add
lds
dec
imul
adc
popl
pop
sahf
jecxz
test
bound
sbb
mov
adc
jl
pop
fstpl
adc
jnp
add
push
call
adc
adc
mov
jecxz
fimuls
divb
sub
ja
or
xchg
push
jp
adc
gs
mov
inc
lea
dec
dec
pop
lret
push
pop
jge
add
arpl
or
mov
jne
cltd
mov
jp
mov
cli
inc
inc
fs
push
mov
sub
adc
xchg
xor
into
sbbb
in
xchg
fdivl
adc
mov
or
imul
inc
imul
scas
pop
mov
scas
cmpsb
mov
fnstsw
subl
add
sbb
gs
push
push
cmpl
push
mov
fildll
rorb
fs
cmpl
mov
inc
push
cmp
test
out
shrb
repnz
mov
cmp
mov
shl
sub
popa
bound
nop
aas
aad
cld
pop
ret
cmp
fs
js
pminub
arpl
xor
adc
lret
push
sbbl
loop
loope
push
lret
jae
data16
sbb
insl
jo
sahf
aas
test
mov
divb
fdivl
add
mov
xor
mov
fistps
and
mov
ret
pusha
inc
imul
shlb
sbb
test
in
pusha
mov
xchg
mov
mov
fldenv
lds
stos
adc
mov
stos
mov
mov
jb
repz
int3
sub
aaa
pop
push
nop
dec
or
sub
popa
aam
inc
mov
push
push
test
in
mov
xchg
cltd
add
loopne
or
ss
mov
fistpl
xchg
stos
js
inc
xchg
imul
xchg
adc
xchg
lret
stos
add
inc
ss
data16
inc
push
dec
add
pop
cli
and
inc
inc
add
pop
sbb
xor
pop
jg
mov
push
shrb
addb
cwtl
repz
mov
jne
outsb
test
loopne
inc
lea
pop
inc
inc
or
scas
nop
pop
ljmp
push
popa
dec
inc
push
sbb
inc
pop
mov
out
fistpll
xor
shr
imul
movsb
std
xor
aas
xchg
cmpsl
adc
test
push
mov
mov
jb
cmpsl
and
dec
push
mov
fisubl
sub
into
xor
sbb
sarb
inc
and
cmc
lds
pop
pop
clc
xchg
inc
cmc
stos
push
rorl
cltd
das
aam
adc
mov
jae
cmpsb
insl
ss
jmp
mov
call
add
add
leave
or
pop
negb
lock
gs
sbb
shlb
lock
mov
cmp
fs
mov
jp
fs
daa
xor
or
mov
dec
sub
push
push
mov
or
inc
movsl
xor
jle
mov
test
mov
aaa
add
mov
jnp
sub
pop
mov
cwtl
xor
lea
inc
mov
xor
fcmovbe
nop
dec
jbe
fistl
testb
dec
push
xor
aam
cltd
loop,pn
mov
jl
sbb
out
sbb
scas
les
inc
xchg
sub
out
pop
aad
sahf
push
aaa
pop
add
int
fildl
add
add
mov
cmp
xorl
mov
insl
int
mov
faddl
sbb
in
jl
add
and
flds
out
cwtl
sub
jl
sub
mov
lods
push
mov
xor
mov
push
xor
or
push
orb
pop
sub
popf
data16
fmul
sarl
rcrb
pusha
in
ret
aas
in
arpl
cmp
jl
cmpsb
xchg
jmp
in
sbb
add
pop
pop
mov
movl
adcl
test
adc
lock
pop
jle
addr16
cmp
es
jle
in
dec
roll
jo
sar
scas
pop
dec
mov
pop
cld
xchg
pop
stos
mov
inc
fnstcw
sti
mov
ret
mov
ret
mov
fbld
loope
jp
add
shl
addl
jns
mov
push
std
cmpsb
mov
out
idivl
pop
andb
adc
lret
std
inc
adc
rol
push
mov
xchg
dec
movsl
xchg
push
add
pop
dec
leave
cmpsl
stos
pop
xor
fldl
and
inc
cltd
dec
jnp
inc
scas
dec
xchg
jle
lock
cltd
jp
add
adc
adc
mov
cmpsl
std
ret
loope
jg
test
lret
ja
es
sbb
pop
mov
xchg
lods
roll
call
inc
ret
in
add
ss
ds
jo
xor
insb
and
addl
push
mov
adc
or
loopne
ret
add
cmp
adc
aad
inc
mov
cltd
jns
aad
cld
jp
cmp
test
aam
adc
jns
xchg
scas
incb
out
push
es
cmp
sbb
mov
xor
nop
xor
ret
lods
sub
or
jns
iret
or
iret
mov
xor
rcl
push
jge
add
cs
jecxz
fisubrs
mov
sahf
stos
sbb
xor
pusha
mov
push
dec
jns
pusha
rcrb
xchg
mov
xchg
push
xchg
inc
fs
mov
insb
or
and
pop
mov
dec
es
jno
push
sbb
rclb
inc
fistpll
and
jp
adc
ret
sbb
jno
push
push
jp
jne
xor
in
in
out
mov
shlb
xchg
das
push
jmp
xchg
jl
pusha
es
insb
lea
lcall
lds
outsl
movsl
or
sbb
mov
ds
mov
cwtl
pop
jle
jmp
pop
test
mov
cmpsb
outsl
shll
mov
shlb
loop
mov
xchg
mov
mov
mov
dec
pop
pushf
std
shl
fisubrl
pop
pop
lds
jnp
mov
mov
into
or
pop
or
sub
sbb
pop
or
xchg
cmpsl
jns
jmp
dec
push
dec
cmpsb
adc
mov
or
out
shlb
sub
out
adc
rcrl
dec
cmpsl
das
lock
mov
cmp
mov
cmc
mov
jecxz
sbb
sahf
xchg
adc
inc
cmp
pop
adc
dec
icebp
push
and
push
mov
ret
out
sub
push
sbb
xor
rolb
stc
mov
pop
dec
incb
and
and
fsubrp
cmp
dec
scas
pop
xchg
filds
lea
dec
pop
inc
jns
add
xchg
int3
test
and
sub
stos
pop
push
in
mov
add
jle
push
das
push
sbb
fstpt
xchg
loope
or
cmc
push
sarb
cmpsl
shll
out
into
out
out
xor
inc
push
rorb
dec
das
lds
imul
mov
mov
mov
pop
xchg
mov
movsb
push
cs
inc
movsb
repnz
dec
pop
mov
cmpsb
push
pop
inc
cltd
cmp
lahf
push
call
insl
je
test
call
sbb
fucom
lahf
xchg
lds
add
xchg
lods
movsl
ret
ds
ss
pop
mov
cmp
xlat
subl
cld
int
push
add
mov
mov
jb
pop
and
inc
fistpl
sub
loope
fnsave
xor
es
incb
pusha
sub
inc
lods
shr
xchg
pushf
or
mov
fiadds
into
mov
mov
jb
lret
push
pop
andl
or
and
and
fwait
les
lods
clc
xchg
xlat
jp
cmpsb
jmp
insl
and
cwtl
movsb
insl
add
fmul
xor
pusha
lods
jnp
xchg
xchg
xchg
add
push
lret
xor
mov
inc
cld
sub
or
test
aas
cwtl
cld
negb
aaa
arpl
or
cmc
repz
ljmp
movsl
sahf
adc
mov
imul
aaa
xchg
push
call
fndisi(8087
xor
popfw
and
xor
ds
and
stos
jg
sub
and
xchg
rol
pop
das
sar
or
jl
jecxz
ss
movsl
testl
xor
shr
hlt
jge
jbe
out
icebp
mov
mov
movsl
inc
cmp
cmp
leave
adc
in
in
jnp
mov
add
jmp
loopne
dec
ljmp
stos
aad
lret
arpl
mov
imull
repnz
in
addl
jnp
xchg
sub
mov
dec
rorb
mov
push
lods
jecxz
das
test
dec
cmp
ljmp
je
dec
ja
push
jle
das
stos
push
xlat
loopne
push
lret
movsb
mov
sahf
push
xor
jns
orb
adc
roll
in
aaa
in
lret
insb
sbb
sbb
lcall
jo
int3
cmp
pop
cmc
mov
adc
push
outsl
cltd
scas
ss
inc
jb
inc
push
movsl
and
jl
repnz
add
cmp
leave
sbb
xor
mov
stos
add
mov
xchg
or
shlb
movsb
insb
ljmp
adc
sbb
dec
adc
insl
pop
or
pop
push
cs
sbb
jbe
fs
in
sbb
daa
outsb
aad
adc
lods
mov
lahf
jge
pop
pop
cltd
inc
and
inc
lea
xchg
cmpsb
cld
repz
cmp
pop
add
fwait
stos
and
out
sub
cmp
xchg
inc
adc
xchg
mov
bound
jle
xchg
jle
jnp
andb
sub
lea
cwtl
and
loope
xchg
std
jbe
les
rorl
mov
push
jo
push
jbe
dec
sbb
loop
icebp
ret
dec
add
ja
jge
fidivrl
jo
aam
cmp
mov
fidivrl
lret
add
lret
testl
xchg
push
mov
jns
ds
mov
and
xchg
push
out
push
adc
imul
adc
fdivr
mov
xor
or
loop
or
adc
push
mov
sbb
cmp
int
test
jecxz
jae
push
inc
aaa
out
sbb
inc
sti
sub
pop
lahf
sbb
and
bound
sub
popa
fldl
int
or
adc
push
push
push
push
sbb
in
inc
cmp
adc
scas
cmpsb
mov
in
cmpsb
sbbb
push
stos
fldl
lods
frstor
xor
cmpl
or
imul
ret
and
jecxz
loopne
mov
dec
movsb
imul
fcmovnbe
xchg
inc
inc
in
xchg
div
sbb
fidivrl
sub
jno
fsubs
push
add
add
xchg
nop
rcrl
inc
adc
iret
mov
dec
and
mov
mov
dec
cmpsl
sbb
xor
mov
loop
fisubs
les
and
mov
push
shl
enter
mov
or
lods
sub
and
mov
hlt
stc
loope
sub
ret
cs
jo
sbb
add
pop
mov
sub
sbb
pop
mov
push
cmpsl
push
sbb
xor
jecxz
insl
cmp
mov
in
sub
jb
jecxz
sbb
sub
cmc
mov
or
std
xorl
popa
loop
fcmovbe
mov
mov
sarb
jbe
movsl
in
push
mov
inc
orl
sahf
xchg
push
sub
xorb
adc
or
pop
sbb
xor
xchg
bound
mov
fsubr
std
mov
push
pop
sti
xchg
mov
imul
clc
fwait
inc
add
push
jp
jno
out
in
enter
int
loopne
cmpl
pop
ret
ss
xchg
pop
xchg
out
sub
pop
repz
mov
das
loop
pusha
imul
add
push
ds
mov
leave
jle
xor
leave
cmpsl
mov
xlat
andl
push
and
xlat
stc
inc
jns
int
and
test
pusha
jge
xchg
test
xchg
push
loop
push
xlat
jno
cmpsb
fsubs
push
call
sarl
pusha
xchg
out
sbb
or
jmp
fstl
scas
sti
dec
lds
mov
fwait
mov
or
aad
in
jmp
push
cs
adc
add
pop
and
ret
dec
mov
xor
add
ds
nop
cmp
cmp
xor
insl
inc
fimull
lahf
test
data16
adc
xchg
call
xchg
xor
fsubs
jo
stos
jne
addr16
push
xchg
shlb
aas
add
adcl
pushf
adc
pop
cmp
loopne
push
xchg
out
fcomi
sahf
imul
and
adc
imull
and
push
mov
ljmp
lods
insl
incb
adc
incb
inc
lcall
mov
xor
lods
out
subb
ljmp
or
adc
cmc
loope
mov
std
hlt
pop
hlt
into
push
inc
in
mov
fs
arpl
loope
inc
outsb
sahf
pop
cmp
rol
insb
andb
cmp
jle
popf
push
jo
insb
mov
mov
dec
and
popa
sub
ficoms
jg
int
inc
mov
test
add
loopne
std
inc
mov
push
dec
xchg
jnp
int
mov
jne
push
inc
lahf
sahf
testb
imul
dec
jns
and
add
inc
cltd
add
nop
ret
push
pushf
jmp
sbbb
cltd
test
push
mov
and
out
cmpsb
adc
inc
mov
pop
jne
cmpsb
imul
inc
dec
shll
push
push
cmp
cld
pop
sub
int
shll
ret
push
js
imul
dec
jg
adc
out
daa
xlat
sbb
leave
dec
xor
repz
jl
inc
inc
fwait
inc
xchg
mov
xchg
push
out
sar
cmp
ficoml
pop
cmp
cwtl
push
pop
jno
adc
or
je
outsl
int3
jle
ret
js
in
push
cmp
pusha
and
fcmovb
testl
test
and
push
mov
outsl
or
mov
cmp
sub
shlb
mov
ljmp
dec
fnsave
inc
push
xor
mov
hlt
mov
aam
stc
pop
xchg
cli
lret
cld
adcl
imul
nop
pushf
dec
aam
sub
pop
adc
les
xor
pop
mov
cli
inc
push
sbb
mov
cmp
lea
mov
push
sbb
test
xor
adc
mov
int3
and
lods
cmpsl
sahf
aaa
jbe
mov
dec
sbb
fucom
jecxz
aas
xchg
add
add
out
popl
into
cmp
cld
testl
int3
dec
das
sbb
push
sbb
mov
dec
imul
imul
andl
aam
pusha
mov
dec
in
in
and
mov
in
mov
mov
cltd
neg
add
out
movb
call
ss
push
das
mov
ds
aad
mov
add
loop
mov
inc
popa
push
xchg
iret
add
aad
mov
clc
jg
cmp
sub
jae
lret
jp
pop
je
scas
xorb
mov
add
or
imul
push
jle
add
push
push
xchg
call
pop
mov
mov
insl
xor
and
out
daa
mov
mov
rcrl
out
call
rcrl
into
and
int3
cmp
out
and
rcl
imul
andb
hlt
imul
or
out
sbb
mov
push
cmp
out
icebp
push
sbb
rol
imul
je
mov
mov
int
jnp
pop
xchg
push
mov
push
jae
dec
jg
dec
lret
js
mov
inc
xchg
xlat
jle
addl
sti
mov
adc
jg
aas
cmp
pop
add
jae
jmp
mov
das
and
or
pop
mov
or
cmpb
test
pop
push
mov
rclb
mov
fnstsw
ror
sub
scas
cwtl
ficoml
insl
mov
int
ss
lret
fwait
lret
lock
jmp
and
jle
push
fcompp
cmpsb
push
sub
sbb
jno
pop
dec
xor
and
xlat
addr16
fs
call
je
enter
clc
jnp
inc
fisttpll
mov
nop
cmp
mov
aas
dec
lret
ss
hlt
and
out
nop
mov
test
adc
int3
and
cmp
xchg
test
adcb
sti
loopne
ja
cmc
jle
and
lds
das
fiadds
pusha
jnp
and
mov
ret
jecxz
mov
sbb
xchg
jb
lock
inc
jmp
jb
enter
xor
mov
adcl
nop
pop
or
jp
rorb
jecxz
xchg
jp
jecxz
ffree
xor
nop
scas
adc
lret
mov
dec
jecxz
enter
push
loopne
jge
jecxz
rcrb
and
ret
add
push
adc
push
sbb
stos
mov
fcomi
cld
dec
or
sbb
andl
lcall
in
lods
int
jmp
dec
bound
outsb
lds
pop
paddusb
pop
inc
out
push
sub
and
xorb
test
test
adc
out
pop
pop
sbb
sub
std
ret
push
sub
sub
mov
mov
jnp
pop
cmp
push
xchg
or
push
push
jg
repz
out
xchg
xchg
sarl
je
out
push
xchg
pop
and
clc
jno
shl
pop
lahf
jno
rep
sub
into
sbbb
and
push
pop
testb
jo
addr16
sbb
jne
dec
cmp
mov
pop
mov
xchg
enter
jbe
sub
xchg
leave
mov
or
lret
sbb
sub
out
mov
imul
lods
xchg
cs
cmp
push
push
call
or
jo
add
push
aam
cmp
xor
insb
out
or
mov
inc
cmp
scas
cmp
cwtl
lret
mov
and
ja
into
xchg
and
inc
mov
cmp
xchg
jge
in
test
lcall
adc
dec
sbb
mov
sahf
aas
icebp
or
dec
ss
mov
ret
mov
jle
push
stos
test
insb
push
loopne
jecxz
nop
daa
into
fwait
add
sbb
addr16
scas
movsl
and
push
repnz
cltd
cmovo
cs
popa
fadds
mov
xchg
lret
xchg
rorb
test
sbb
and
lcall
xchg
push
lods
pop
mov
inc
sub
sub
dec
bound
adc
sbb
mov
test
mov
addl
sub
std
movsl
push
out
fwait
mov
adc
outsb
lods
pop
test
cmpsb
icebp
mov
mov
sti
std
sub
lock
movb
or
call
movsb
or
jl
xchg
add
test
dec
shll
sub
lods
addr16
nop
das
sti
lret
out
mov
sub
sbb
mov
sub
out
ret
lret
and
roll
cmpsl
dec
lret
cld
xchg
aaa
sarl
inc
fmuls
pop
jno
insb
jbe
push
mov
mov
and
sub
or
push
decb
repnz
push
enter
aam
in
jmp
push
push
stc
gs
push
rcrb
cmpsb
fdivs
nop
xchg
imul
xchg
lods
aaa
call
mov
cmp
push
daa
xchg
or
js
cmp
lods
mov
sbb
inc
pushf
insb
push
add
fdivrs
adcb
sbb
pop
xchg
mov
sub
dec
xchg
jp
int3
sub
scas
mov
in
orb
dec
aad
add
out
push
mov
aam
aaa
or
mov
clc
int
imul
mov
lods
sub
es
outsb
jecxz
das
xorb
pop
dec
outsb
mov
js
test
movsb
lock
lret
push
push
mov
jns
inc
pushf
jl
and
or
mov
lea
lods
cmp
push
cs
sub
sbb
repz
mov
ljmp
out
call
loop
leave
daa
lea
ljmp
jp
icebp
leave
push
and
out
xor
inc
lea
cmpsl
dec
das
ss
fcomp
outsb
in
xorb
add
test
sarb
or
sbb
mov
outsb
test
xor
outsl
lea
pop
dec
and
pushf
mov
sub
mov
mov
shl
jmp
cmpb
cs
fcom
into
ds
jae
sbb
les
cmp
dec
mov
push
push
sub
fisttps
hlt
and
and
inc
push
dec
inc
lret
mov
fwait
iret
adc
inc
mov
and
cwtl
inc
mov
adc
fsts
jo
icebp
mov
cmp
jmp
pop
adc
push
jnp
or
mov
inc
or
and
dec
sub
cmpb
ret
repz
xorb
mov
sub
pop
hlt
jmp
or
sub
cmp
pushf
and
addr16
mov
pop
jbe
xorb
mov
sbb
sbb
gs
cmpl
add
inc
cmp
data16
add
push
mov
in
fcmovne
insl
mov
mov
andl
dec
push
sub
iret
in
pop
pop
dec
xchg
inc
outsb
sbb
cmp
rcrl
xchg
mov
fdivrl
insb
cmp
sti
negl
add
loope
pop
inc
je
rclb
cmpsb
sbb
jmp
leave
pop
sub
lock
jnp
loop
add
out
inc
mov
sbb
repz
shlb
cli
adc
lcall
and
xchg
mov
das
jg
mov
hlt
dec
test
repz
repnz
adc
add
lock
insb
mov
xor
sub
ja
xor
jp
mov
outsb
jg
xor
idiv
rol
xor
mov
cli
pop
mov
inc
or
xorl
xor
bound
mov
dec
and
sub
add
das
push
mov
dec
jle
xor
les
lea
cmp
inc
cmp
lcall
idivl
scas
dec
mov
fimull
fs
fiaddl
inc
imul
movsb
jg
orb
jno
out
adc
mov
push
ja
test
fs
pop
scas
sub
jge
out
push
jmp
push
mov
ret
or
stos
and
jo
or
ljmp
roll
ljmp
add
lcall
fisubl
in
jge
push
pop
ss
cltd
mov
decl
fbstp
push
xlat
leave
xor
cltd
inc
fsubp
push
jb
sbb
bound
push
in
cmpsb
js
popf
lock
fcmovne
mov
inc
aas
repz
insl
cs
jae
dec
outsl
mov
divb
mov
clc
aam
push
out
mov
loope
dec
test
jg
mov
in
clc
ljmp
stos
sub
mov
call
push
pop
jae
xorb
jnp
sub
arpl
ror
sbb
pop
stc
and
mov
dec
xchg
mov
mov
outsl
pop
clc
dec
sahf
add
arpl
pop
scas
jmp
inc
ret
rorl
and
jmp
mov
clc
inc
mulb
xchg
ficoml
insl
imul
fiadds
xor
lret
call
add
inc
pusha
xchg
aad
and
xlat
jb
in
push
testl
out
jg
iret
arpl
mov
inc
mov
cs
pop
fldcw
cmc
push
lea
cld
pop
mov
mull
scas
adc
push
mov
fnsave
xor
add
push
ret
cmpsb
cmp
cli
rol
test
scas
push
xor
xchg
cmp
jl
push
mov
popf
or
test
cmp
xor
clc
or
icebp
lret
mov
xchg
dec
mov
xchg
cmp
sub
cld
and
mov
popa
movsb
cwtl
cmpsl
jne
mov
outsb
out
out
insl
mov
jecxz
cmp
cli
cmp
jle
stc
jl
xorb
into
pushf
mov
andb
inc
je
push
mov
ja
lea
xchg
push
inc
mov
adc
iret
jb
test
and
add
or
jne
pop
pop
pop
or
imul
ss
cmpl
les
lea
in
jmp
fs
and
shll
xor
mov
insb
pop
xor
mov
sub
adc
adc
mov
push
aaa
cltd
cmpsb
loope
and
lahf
mov
xchg
popa
inc
test
rorb
sub
test
mov
xor
dec
xchg
pop
pop
jb
es
mov
mov
test
lds
add
cmp
inc
jae
mov
xchg
sahf
push
inc
repnz
popf
sub
mov
inc
or
cmc
outsb
sti
pop
jl
divb
sub
cmp
ret
ret
lods
out
subb
pushf
sbb
pusha
sub
out
fucomip
and
out
repz
and
or
insb
sbb
cmp
cmp
push
push
dec
mov
test
cmp
inc
inc
cmpsl
jecxz
pop
rcrl
xor
int
aas
xchg
js
mov
mov
push
pop
inc
rorb
xor
dec
std
lods
cs
sti
int
fdivrs
out
pop
mov
int3
in
adc
ds
push
pop
mov
cmp
cmp
insl
push
sbb
addr16
jbe
jae
xorb
scas
and
mov
hlt
pop
int3
or
cwtl
sub
nop
xor
mov
cmp
xor
enter
push
mul
nop
and
pop
xor
pop
jmp
cmc
mov
jge
daa
or
hlt
shll
lret
out
adc
push
shlb
sub
std
jmp
iret
lcall
pop
loope
insl
test
aaa
xorl
fldl
ret
enter
mov
orb
push
adc
mov
stc
cmp
cld
aas
adc
sub
or
lea
arpl
jp
lcall
inc
sbb
xor
jp
or
and
jge
or
xchg
jecxz
aaa
ret
and
xor
es
mov
add
pop
lahf
mov
mov
add
and
push
adc
mov
sahf
push
andb
sarl
pop
neg
jmp
icebp
mov
pop
mov
sbb
mov
jne
push
pusha
push
bound
fldl
inc
adc
mov
push
loopne
mov
aad
gs
jp
cmp
sbb
dec
nop
lods
mov
adc
roll
stos
scas
cmp
outsb
mov
fmuls
cmp
or
ja
rcrl
pop
adc
mov
lahf
jmp
lods
ds
fdivrl
sbb
scas
sub
addl
insb
sub
xor
pop
stos
pop
inc
jle
pop
cmp
dec
insl
daa
jg
adc
pop
call
js
fwait
inc
arpl
push
mov
mov
lods
and
movsb
stc
push
cmp
mov
mov
and
repz
mov
lret
and
loop
pop
and
movsb
fsubr
and
subb
ds
sbb
push
ss
mov
add
sub
jb
pop
add
popf
mov
sti
push
push
push
sub
adcl
jb
divl
xchg
mov
pusha
dec
stos
pusha
aas
test
ja
lock
jae
xor
outsb
sbb
hlt
cmp
xor
pushf
cli
outsl
ja
xor
xchg
pop
ds
in
cli
sbb
std
mov
test
je,pt
inc
inc
mov
ret
or
jl
nop
adcb
push
orb
cwtl
sbb
sub
jns
adc
test
mov
jb
cwtl
lcall
and
loop
notb
mov
cmp
cmp
cmpb
xor
xor
psrlw
movsb
ja
cmp
fiadds
sub
jno
addr16
xor
repz
repz
aaa
shrb
xchg
push
push
lahf
sub
jns
inc
or
sbb
fistpl
fs
dec
sti
xchg
mov
dec
jnp
jmp
enter
into
es
cmpl
idivl
dec
mov
cmp
cmp
adc
dec
lock
xor
adc
into
mov
mov
ljmp
mov
inc
push
push
push
add
repz
aas
sbb
lahf
adc
sub
inc
jl
xchg
in
repz
jnp
imul
repz
rclb
aaa
in
lret
imul
xchg
mov
outsl
or
repnz
rcrb
clc
imul
ret
sub
mov
mov
pushf
cmpsb
cmp
push
sub
push
add
lcall
stos
pop
dec
les
inc
or
call
cwtl
mov
cmpsl
lcall
movsl
dec
imul
sbb
mov
mov
popa
pop
jns
scas
pushf
test
adc
in
mov
or
mov
mov
aad
push
mov
nop
xchg
arpl
les
dec
push
mov
fistps
aas
dec
loopne
or
outsb
lcall
cltd
sbb
cmc
aaa
jae
add
inc
icebp
imul
insl
sti
xor
outsb
mov
jne
stos
jmp
adcb
pop
add
test
jb
or
inc
jmp
int3
dec
arpl
pop
and
leave
data16
lds
lods
mov
and
cltd
fwait
js
orb
iret
cwtl
pop
sahf
fmull
pop
fidivrl
sbb
pop
push
lods
push
mov
mov
outsb
mov
mov
xchg
js
sbb
in
push
push
inc
repnz
xor
pop
cld
cmpsb
xchg
jg
popf
sbb
push
or
out
sbb
pusha
js
jnp
bound
xchg
and
dec
imul
lds
out
sbbl
sub
dec
push
push
sbb
loop
fwait
rorl
add
out
js
jl
or
lahf
xchg
xchg
xlat
stc
bound
or
push
mov
loopne
sarb
fwait
jae
pop
hlt
clc
inc
decl
ucomiss
jg
sbb
out
inc
movsl
loop
pop
aaa
pop
dec
jmp
lahf
sub
cmpsb
and
inc
sub
nop
xlat
in
data16
xor
dec
jle
lods
adc
pop
daa
jnp
dec
push
sbbl
mov
fcoml
ficoms
fbstp
rcl
add
cmp
and
cmpsl
mov
sbb
xor
and
mov
sbbl
pop
lods
arpl
mov
bound
fldl
roll
mov
sub
cmp
pusha
testl
test
xchg
popa
arpl
cmp
add
outsb
pop
mov
daa
std
dec
mov
hlt
loopne
cmc
push
jmp
inc
and
sahf
push
sbb
push
cmp
mov
cmp
cld
cmp
add
push
movsl
pop
jbe
jnp
dec
pushf
dec
push
out
and
mov
data16
fnstenv
push
xor
pop
hlt
pop
push
outsb
adc
nop
and
fildll
scas
cmp
int
xchg
clc
cwtl
mov
mov
scas
pop
pop
mov
mov
mov
sbb
push
lock
xchg
mov
and
call
adc
dec
add
repnz
jo
xor
out
and
movsl
popf
in
add
pop
xchg
inc
movsb
imulb
mov
jecxz
inc
pop
add
aam
insb
and
inc
icebp
insb
fstps
out
or
jg
out
lret
loop
xchg
adc
fs
cmc
mov
icebp
mov
jg
sbb
pop
pushf
jg
add
in
sbb
xchg
sbb
mov
adc
cmp
ljmp
jp
xchg
idiv
jnp
divl
addl
push
test
stos
add
push
or
repnz
and
jo
ret
ljmp
lods
inc
xchg
jmp
jns
mov
pop
test
stos
mov
inc
jle
mov
int3
add
jno
cs
xor
mov
sbb
sbb
push
xor
mov
scas
lods
lods
clc
mov
addr16
inc
fidivrl
mov
sbb
and
dec
lcall
inc
jecxz
mov
repz
cmp
lods
xor
add
insb
or
mov
test
xchg
int3
iret
sahf
call
cmpsb
int
mov
les
sbb
mov
hlt
outsl
aad
push
testl
call
jns
js
dec
in
sub
popa
call
aas
mov
lods
cwtl
sub
xor
nop
fs
lock
ja
inc
sbb
lock
jo
jmp
pop
xchg
shl
outsl
popa
xor
inc
aad
rep
mov
addr16
jl
mull
and
push
mov
dec
and
add
mov
clc
jne
icebp
cld
push
cmp
cmp
mov
outsl
add
cmp
cmp
loopne
dec
and
test
sub
mov
iret
sti
jno
mov
mov
push
mov
pop
in
lods
cmp
lods
dec
adc
inc
mov
int
loopne
sahf
dec
mov
leave
mov
add
sbb
rcrb
cmp
enter
cmpsb
mov
jb
imull
hlt
mov
fwait
outsb
dec
nop
mov
xchg
pop
out
call
cwtl
fnstcw
and
jbe
ja
sahf
mov
inc
pop
loop
pushf
xor
clc
mov
cmp
lcall
mov
jmp
sub
pop
decl
sbb
cmpsl
mov
fcoms
sbb
imul
inc
push
cmp
jmp
int3
mov
and
xor
mov
cmc
jbe
inc
cmc
cmc
sub
fistpll
ret
and
call
jmp
in
inc
cs
lcall
int3
ret
sbb
inc
popa
cmp
dec
xor
test
daa
rclb
cld
out
stos
aas
jae
xchg
fcompl
pop
xlat
mov
aam
xor
aam
jmp
cmpsl
mov
shl
jmp
mov
pop
cmp
shrl
arpl
or
lret
repnz
aaa
dec
lods
das
push
data16
pop
mov
xchg
stos
dec
shrl
stos
sub
add
mov
cmp
cmp
lret
test
sbb
cltd
mov
xchg
insl
cld
fiadds
rorb
sub
std
push
adc
pop
out
or
and
mov
gs
dec
push
sub
popa
add
mov
sub
jp
dec
mov
cmp
std
add
pop
dec
push
movsl
push
pop
xchg
push
inc
xor
in
pop
jp
icebp
dec
into
and
mov
int
cmp
add
bound
adc
mov
cmp
loopne
sbb
pushf
adc
aaa
mov
in
loop
xchg
dec
insb
sti
outsb
and
mov
mov
mov
test
aaa
cld
xor
push
mov
out
in
mov
or
pop
ss
movsb
pop
add
add
loopne
mov
out
jmp
pop
jmp
xchg
sbb
fucomip
mov
push
pop
outsb
jns
bound
mov
data16
dec
into
repz
mov
pop
rorb
inc
xchg
cmpsb
jg
push
adc
stos
jecxz
jno
aas
xor
lahf
sub
mov
pop
push
les
cli
push
fwait
xchg
loop
jmp
sbb
add
dec
loope
leave
dec
popa
lods
icebp
and
xor
mov
sbb
ja
push
mov
pop
fwait
stos
pop
add
dec
sbb
jo
arpl
or
add
jo
cmc
or
cmp
jge
add
add
fisubrl
cltd
in
inc
sub
xchg
repz
inc
sbb
mov
sbb
jnp
cltd
repz
das
icebp
push
cmp
popa
loopne
mov
inc
jmp
das
adc
sbb
fyl2xp1
in
dec
jbe
out
dec
into
dec
repz
inc
xor
scas
jmp
add
push
test
mov
xor
xchg
dec
popa
pop
and
pop
push
lods
mov
iret
mov
outsl
lret
bound
adc
jae
int3
fistpl
xor
mov
out
mov
push
cmpsl
out
mov
push
and
mov
mov
sbb
jge
cmp
adc
pop
out
push
xchg
fcomi
cmp
cltd
lret
xor
ljmp
pop
add
adc
popf
mov
pop
mov
int3
lds
push
push
into
mov
xor
ret
daa
cli
sub
cmp
mov
push
jns
jecxz
into
fstpt
sarl
fcmovb
jnp
lods
dec
xchg
pop
shlb
sbb
sbb
mov
dec
cmc
push
lahf
lds
subl
xlat
add
cmp
test
shlb
fnsave
mov
cwtl
sbb
out
mov
dec
and
cmpsl
add
insb
jl
push
jno
das
mov
mov
jge
femms
add
hlt
and
mov
jle
aad
dec
xrelease
sahf
fbld
imulb
dec
mov
xor
xchg
js
loope
outsl
jecxz
fldl
imul
fisubrs
subb
dec
or
dec
adc
sub
cmpl
aas
sti
js
pop
mov
adc
adc
adc
cmpsb
fsubr
sub
add
stc
sbb
vmovmskpd
and
mov
mov
xor
or
inc
inc
mov
xchg
int3
std
cmp
je
mov
repz
rorb
mov
push
sub
and
loop
xor
xor
pushf
loope
rcrb
out
sub
js
pop
push
jbe
or
icebp
daa
ds
into
sub
lods
fldz
stos
xchg
xchg
sub
inc
iret
jns
mov
mov
xor
test
push
lds
daa
inc
mov
out
xor
out
sbb
pop
mov
mov
rol
adc
shlb
popa
xlat
xchg
or
sbb
aad
cmpsl
mov
push
sub
jno
or
xlat
or
dec
punpckhdq
pop
cmc
xchg
mov
rcrb
pop
mov
inc
push
mov
f2xm1
jae
adc
mov
aam
and
shlb
fmul
adc
out
xor
jo
nop
xor
icebp
gs
inc
insb
sub
sub
lcall
or
lea
sbb
test
ljmp
push
inc
sub
lea
jg
mov
loopne
sti
adc
loopne
adc
repz
dec
xchg
cmp
stc
cmp
dec
cmc
lods
cmc
mov
push
jge
dec
jmp
mov
iret
aad
cmp
lock
jnp
mov
inc
xrstors
mov
movsb
call
stos
mov
imul
jge
lods
ret
outsb
mov
xor
neg
movsb
xchg
lock
push
lahf
push
push
ljmp
pop
pushf
lret
mov
out
xor
mov
les
scas
xchg
add
add
xorl
or
pusha
fisubrs
test
inc
mov
gs
pop
xchg
subb
mov
daa
sbb
sub
and
jo
sbb
mov
cmp
mov
add
adc
ljmp
jmp
stos
cmp
sub
movl
lds
jbe
lods
mov
ds
aam
sbb
cwtl
mov
ljmp
sbb
hlt
pop
scas
movsb
cs
xor
and
pop
inc
loop
inc
scas
test
cltd
jmp
in
xchg
or
mov
sub
pop
mov
add
sub
ja
shl
push
or
inc
xor
pop
cmp
xchg
rcrl
repz
je
xchg
jecxz
pop
cmp
rcrl
lret
ja
fdivs
shrb
and
cmp
lret
je
dec
and
das
push
mov
adc
ljmp
cmp
aam
jecxz
inc
mov
leave
xchg
stos
sub
mov
or
lea
test
das
insl
cmp
imul
aam
and
push
pop
in
add
xor
ret
push
lcall
test
imul
xchg
sub
jae
mov
scas
in
dec
mov
into
xchg
stos
fcmovnu
outsl
jecxz
mov
punpckhbw
fisttpl
stos
push
jne
in
jp
icebp
aam
cld
cltd
pop
jle
jle
or
lods
and
xor
shrb
lds
adcl
push
jne
lock
jns
lret
dec
pop
sub
sbb
inc
push
sub
insb
jbe
inc
outsb
insb
das
bnd
push
out
pop
div
mov
xor
stc
je
cwtl
sub
add
add
out
or
cmp
inc
fcompl
inc
aam
pop
in
fcoms
add
pop
adc
xchg
stc
and
dec
and
dec
inc
sbb
mov
jne
testl
in
fwait
mov
push
pop
pop
push
jno
mov
mov
adc
jmp
jb
ds
pop
mov
into
pop
jnp
int3
lahf
mov
fisttpl
leave
inc
stos
xor
test
pushf
mov
lds
pushf
jbe
movsl
or
or
or
jne
loop
daa
andl
push
shlb
mov
inc
ror
push
into
mov
repz
in
dec
out
jge
add
les
and
dec
dec
fimuls
sbb
mov
outsl
push
mov
xor
dec
stos
xchg
pop
fildll
mov
int3
mov
test
iret
and
jae
pop
inc
ljmp
mov
stos
aam
xor
mov
fisttpll
jmp
mov
adc
rol
jno
les
insb
cltd
adc
mov
repnz
mov
xlat
xor
jmp
fiaddl
ficomps
add
adc
repz
int3
xor
cmpsb
fdivrl
call
pop
test
lock
popa
pushf
pop
adc
mov
stos
jbe
jbe
mov
fs
adc
mov
in
lahf
loop
push
das
fisttpll
mov
jg
ss
jns
and
lods
out
cmp
adc
sarb
insb
pop
imul
addr16
mov
incl
stos
sahf
cmp
and
lea
ljmp
xchg
inc
es
xor
hlt
imul
push
fidivl
in
mov
icebp
test
repnz
sbb
call
shll
test
dec
ja
ds
bound
stos
add
mov
adc
sbb
sarl
gs
mov
dec
mov
jle
clc
cmp
push
enter
cmp
jbe
xchg
and
dec
test
dec
jb
inc
dec
xchg
mov
xor
iret
sarl
clc
mov
icebp
lret
test
inc
xchg
pop
cli
adc
sub
pushf
mov
xchg
inc
mov
pushl
mov
mov
out
rorb
mov
xchg
mov
sbb
js
ja
ss
aam
cmp
test
xor
je
sub
nop
inc
rolb
fld
cli
cwtl
and
cwtl
decb
ret
nop
cmpsb
lret
mov
leave
das
mov
pushf
popf
jb
or
es
pop
mov
sbb
xchg
or
cmpl
je
sub
add
and
jnp
fisttps
lret
nop
aaa
mov
sbb
lcall
ja
inc
mov
jne
mov
insb
andl
ficompl
mov
rcrl
shrb
and
push
sub
xchg
push
adc
gs
cmc
and
pop
cmp
mov
out
sub
dec
out
imulb
jno
push
cmc
push
or
addl
call
sahf
push
sbb
ret
std
scas
insl
loopne
lahf
adc
int
push
movsl
sub
aas
lahf
lock
cli
push
push
mov
rcrl
push
xchg
pop
inc
push
test
adc
fcoml
mov
cmp
push
mov
mov
mov
fnstenv
clc
lods
or
xchg
sub
int
test
js
cltd
movsl
ja
jmp
pop
mov
or
popf
jp
xchg
pop
push
repnz
scas
call
xchg
mov
outsl
jmp
ret
ljmp
jp
out
xchg
je
or
sub
push
lods
stos
dec
push
dec
push
in
push
pop
jmp
mov
leave
rolb
or
lods
mov
add
testb
mov
imul
jbe
inc
stos
sti
stc
loopne
in
push
sub
mov
out
repnz
jo
pop
fstl
dec
push
pop
add
sti
add
cld
mov
add
out
xchg
fisttpll
or
lahf
stc
cmpb
cs
in
jmp
aad
mov
in
or
push
pop
addr16
aam
test
lret
pop
jge
push
lret
mov
mov
les
int
add
adc
xchg
mov
push
push
outsl
or
jae
mov
inc
sahf
out
or
aaa
popf
push
xchg
stos
dec
jp
test
out
mov
data16
jle
mov
add
and
pop
movsl
push
repnz
sbb
xchg
push
ret
sub
les
or
lods
jno
iret
and
inc
adc
aad
lds
out
mov
or
dec
mov
rcll
sub
adc
xchg
enter
ds
into
movsl
and
push
xor
sub
in
pop
push
adc
mov
orl
xchg
pushf
mov
in
sub
dec
cld
push
cmp
cmp
imull
fstpt
sahf
sarl
fisubs
mov
add
dec
loopne
xor
cmp
and
inc
cmp
adc
xor
add
jmp
popf
call
jge
fists
lahf
jge
mov
mov
xchg
or
mov
sti
mov
lret
movsb
out
xchg
pop
xor
subl
cmp
inc
outsl
lods
movsl
pop
push
jno
outsb
mov
shrl
imul
push
sbb
push
enter
outsb
push
ret
and
popa
std
fs
aaa
lds
jmp
mov
dec
add
sub
pop
add
pop
call
outsb
ret
aaa
dec
scas
push
pushl
js
int
out
cmp
loop
xchg
cmp
lahf
cltd
mov
push
jg
dec
cmp
aam
cmp
sbb
leave
jbe
jno
aaa
and
cmp
and
out
fiaddl
push
push
sbb
daa
jecxz
fadds
fs
dec
pop
fnstsw
stos
sahf
movb
add
push
sahf
fisttps
add
xchg
adc
stos
dec
repnz
out
sub
ljmp
insb
repnz
pop
je
int3
ds
adc
fwait
iret
fmuls
stos
mov
or
adc
add
aam
stc
push
adc
push
pop
pop
roll
imul
sub
shrl
nop
sub
outsb
sub
adc
or
subl
rcrb
mov
insl
adc
and
pop
hlt
cmp
lea
mov
adc
mov
pop
loop
dec
cld
movsb
nop
pop
enter
or
mov
dec
mov
dec
mov
cwtl
pop
lret
mov
pop
aad
mov
ret
pop
add
test
lret
mov
xor
nop
jg
lcall
test
loopne
jb
mov
fistpll
mov
out
shrb
loop
cltd
daa
stc
sub
mov
lods
fbld
icebp
pop
push
mov
test
jne
or
divb
int
adc
outsl
hlt
cmpsb
xchg
inc
je
popf
leave
dec
aam
and
je
sbb
mov
mov
xor
add
cmp
addr16
mov
adc
cs
sub
mov
adc
ja
in
ljmp
cmpsl
inc
or
loopne
cmp
xchg
insb
addr16
enter
xor
add
cmp
cs
push
jge
out
insb
adc
and
inc
sub
out
ss
mov
js
outsb
jmp
movsl
cwtl
sbb
in
cwtl
push
sub
cmc
or
sbb
sbb
mov
xchg
cwtl
sbb
adc
dec
fadds
sbb
and
pop
or
ret
adc
cld
out
cs
das
jecxz
out
sbb
andl
pop
or
mov
push
fbstp
aas
dec
push
mov
xor
stc
mov
movsb
rol
popf
push
icebp
ljmp
popa
ljmp
add
in
xchg
mov
fidivl
jno
adc
mov
mov
jg
and
lret
adc
lods
stos
adc
rclb
rol
fdivr
aas
add
push
dec
out
stc
mov
xor
aaa
ret
jmp
push
aas
shll
cmp
cmp
sub
pop
sub
push
xchg
push
gs
push
mov
jmp
pop
insl
and
mov
add
sbbl
mov
cld
dec
mov
add
mov
sti
daa
xor
cmp
mov
movl
mov
lock
cld
jnp
and
and
jbe
popa
pop
jns
pop
mov
dec
xor
push
lods
dec
inc
cmpsb
shll
adc
or
popf
sub
pop
pop
mov
test
xchg
arpl
mov
test
xchg
adc
push
xlat
xchg
shrl
mov
out
add
and
xor
mov
popf
sarb
aaa
xor
pop
jl
jge
sbb
imul
xchg
inc
fcomp
lods
test
orb
xchg
cmc
fnsave
mov
or
lock
mov
jns
into
adc
xlat
dec
cmp
or
ja
xchg
lret
add
enter
lods
clc
mov
pop
jo
cltd
lcall
pusha
mov
incl
insb
pop
push
pop
dec
inc
mov
mov
inc
cmpsl
push
stos
inc
push
cli
mov
inc
inc
sbb
movntq
out
cmp
lret
mov
je
sbb
fidivs
and
jbe
jne
sbb
nop
shl
ret
jne
loope
mov
inc
sbb
add
pop
movsl
adc
mov
mov
cmp
insb
ret
sbb
test
mov
mov
dec
jns
and
mov
push
pop
and
and
lret
mov
sbb
subl
jl
das
stos
mov
push
adc
fcoml
jnp
pop
dec
push
dec
push
lahf
sbb
mov
jecxz
ss
sbb
inc
imul
repz
or
push
sbb
sbb
int
pusha
adc
loop
and
mov
jg
leave
push
aas
lahf
pop
pusha
inc
xor
sub
mov
inc
sub
xor
or
sbbb
je
les
addr16
jno
inc
stos
wrmsr
jbe
mov
adc
xchg
bound
les
mov
mov
ljmp
nop
andb
mov
sti
fcomi
loopne
mov
inc
push
sub
sbb
push
mov
sbb
cmp
add
jno
dec
in
es
xchg
lock
mov
push
cmp
fnstcw
es
add
out
fisttpll
dec
daa
jge
jae
popf
push
call
xor
xchg
fcmovbe
sbb
sbb
dec
movsb
cmp
xorl
mov
fstps
push
xchg
add
push
cmp
cltd
xlat
pop
sbb
ret
and
mov
inc
sub
mov
xchg
mov
fldl
rcll
cmp
aas
ret
pop
in
sbb
and
mov
lods
fldl2e
or
hlt
pop
dec
popa
mov
mov
insl
jp
mov
dec
repz
cltd
ds
rclb
shlb
jnp
daa
pop
push
js
nop
sahf
insb
imul
fsub
push
mov
dec
popf
mov
scas
adc
jb
fdiv
jl
jne
fsts
popa
rorb
mov
and
mov
movq
popa
add
adc
jp
incb
adc
out
mov
push
clc
xchg
std
sub
dec
mov
shrb
fstpl
pop
sub
cmp
imul
loopne
jb
js
mov
lods
fildll
adc
sub
xor
cmp
dec
adc
outsb
sub
aas
outsl
jge
lea
leave
xor
std
inc
sub
and
xlat
sub
cmpsl
pop
and
dec
lods
ror
movsb
clc
push
scas
lds
mov
out
mov
adc
lds
push
xorb
pushf
orl
aaa
loopne
mov
xorl
cmpsl
lret
pop
jl
jp
or
orb
sbb
sahf
cmp
imul
or
xor
fwait
push
mulb
outsb
rorb
aas
push
adc
popa
push
movsl
pop
insb
and
andb
mov
shll
xor
enterw
and
in
mov
xchg
pop
test
inc
cld
adc
test
lods
inc
stos
fidivrs
xchg
mov
fildll
incb
and
add
mov
adc
xchg
daa
cwtl
push
lcall
add
push
ljmp
inc
pop
lds
jo
xchg
mov
mov
es
push
push
mov
mov
push
ficoml
sub
jl
insl
popf
int3
pop
or
jbe
xor
shlb
lods
add
dec
cmpsb
cmp
adc
outsl
pop
xor
pop
test
arpl
inc
cs
mov
xor
cmp
testl
push
push
lods
ss
push
xor
popa
push
pop
lock
jmp
popa
jmp
bound
ret
ljmp
enterw
adc
sbb
sub
push
ja
out
inc
push
mov
inc
test
xlat
lret
push
add
fcmovbe
sti
inc
fisubs
rorb
scas
enter
xor
bound
arpl
cmp
pushf
stos
sub
mov
pop
je
das
jno
les
les
stos
stc
inc
iret
push
hlt
or
xchg
icebp
ret
inc
mov
and
sbbb
push
sbb
pop
xor
call
hlt
push
pop
push
dec
nop
add
jne
das
test
mov
aas
aam
pop
pushf
inc
jae
int
outsl
mov
aam
sub
sbb
adc
daa
mov
outsl
mov
dec
inc
sub
jnp
psubb
ja
or
mov
lods
lods
mov
iret
xor
repz
mov
cmp
cli
lret
xchg
cmp
rcrl
fs
cmc
scas
lods
jecxz
sbb
xor
hlt
sbb
clc
xchg
cmp
leave
cmc
stos
push
in
out
imul
and
jp
jg
mov
adc
push
loope
fwait
shlb
jb
push
ja
mov
scas
pop
movsb
in
add
out
xor
outsl
mov
cmpsb
repz
jg
sbb
popa
movsb
push
icebp
jne
xlat
fcomps
shl
mov
loopne
popa
test
imul
sub
dec
pop
cmp
jnp
cmpsb
les
sahf
sbb
scas
add
sub
xchg
sbb
notl
subb
mov
outsl
int
adc
or
xchg
sub
xchg
jo
sub
jb
ds
aam
cld
pop
js
rclb
stos
icebp
int
xchg
inc
add
lcall
clc
xor
adcl
cs
sbb
data16
arpl
pop
xchg
sbb
idiv
testl
addr16
sbb
adc
push
hlt
cmp
add
es
arpl
imul
lret
jl
std
test
shrb
fcmovnb
mov
data16
sbb
inc
mov
adcb
adc
push
add
mov
cmpsl
jnp
loope
push
lods
cmp
into
popl
cmp
mov
and
enter
sbb
mov
inc
daa
into
repnz
outsl
lcall
pop
in
xchg
arpl
es
xlat
test
ds
gs
outsb
push
pop
and
mov
dec
ja
mov
mov
fildl
in
mov
int
and
rcr
bound
sti
repnz
scas
leave
lock
sbb
popa
xor
pop
incl
fists
mov
repnz
fists
subl
cmpsl
lret
lock
jl
popf
add
adc
into
fnstenv
dec
ret
lock
sti
mov
add
jecxz
adc
aad
jae
lret
shrl
xor
mov
addr16
jl
add
clc
mov
rclb
out
jl
stos
scas
push
xor
or
fisubl
ljmp
cld
ret
roll
push
cmp
outsb
ficoml
cmp
mov
sti
or
xor
push
add
lahf
mov
pop
test
fisubl
adc
lods
test
mov
adc
pop
and
loopne
inc
adc
fistpll
dec
ds
sbb
sbb
mov
pop
sbb
movsb
in
test
out
inc
mov
out
mov
aad
sbb
fldlg2
fcompl
mov
call
stos
or
pop
test
rclb
sahf
inc
fwait
xor
out
fists
xchg
pop
das
scas
test
popa
in
push
push
loopne
xor
dec
jb
pop
cmp
adc
mov
xor
sahf
out
cwtl
jno
xchg
fdivr
addr16
jnp
ja
pusha
ret
loope
lret
inc
shl
dec
inc
ja
je
fadds
inc
js
aas
cs
stos
jecxz
adc
inc
insb
orb
add
add
mov
aaa
cmp
addb
outsl
xor
dec
ret
ss
or
movsb
jb
mov
inc
jp
xchg
or
add
outsb
fadds
push
pop
jecxz
mov
fsub
movsl
jns
and
clc
push
mulb
mov
scas
cmpsl
cs
dec
sub
movsb
js
push
loopne
int3
push
adc
int3
lds
movsb
mov
mov
cs
jle
into
add
aas
lahf
cmpsl
bnd
pop
sbb
popf
cmp
ss
cs
cwtl
dec
fcmove
push
mov
outsb
sbb
repz
adc
sbb
xchg
ds
jb
adc
push
lods
inc
sbb
popa
ret
jno
cmp
out
dec
mov
mov
out
test
push
xor
dec
push
jge
pop
fs
mov
femms
pop
jb
adcl
out
mov
test
mov
cmovno
pop
inc
lahf
push
mov
xchg
mov
pop
sub
mov
sti
push
ret
push
xor
stos
sub
inc
adc
push
outsb
mov
out
pop
ret
xor
push
in
out
stos
xchg
ljmp
pop
into
insb
mov
out
push
xchg
jb
pushf
pushf
and
jnp
popl
mov
sbb
mov
icebp
add
cmpsb
mov
int3
out
mov
push
mov
adc
outsl
aam
xor
cld
and
sbb
pop
ficompl
sbb
popf
jg
push
aam
xchg
xchg
adc
sti
mov
sti
pop
mov
sahf
inc
inc
ss
cwtl
aad
in
enter
out
push
jg
out
jecxz
pop
int
dec
rcrl
pop
sub
mov
lods
push
rcr
pop
cmpsl
cmp
addl
cmp
jb
cmpsb
aam
mov
jp
out
outsb
lds
and
mov
pop
cmp
adc
adc
mov
je
std
inc
fcompl
cmp
adc
push
sbb
push
pop
and
dec
push
add
aad
mov
loopne
jp
adc
inc
fwait
jns
inc
or
inc
jne
les
xchg
adc
jg
adcl
sub
repnz
pusha
mov
lcall
fcompl
xchg
mov
adc
movsl
inc
dec
mov
sub
je
mov
sti
mov
hlt
and
or
cmp
cli
es
testb
imul
mov
inc
xchg
sub
mov
insl
cltd
lock
jge
dec
je
fsts
out
out
xchg
sbb
test
clc
xchg
rcl
jmp
add
dec
ljmp
test
pop
popf
sarb
pop
out
loopne
fs
cmp
add
les
add
enter
mov
and
aaa
or
xor
dec
mov
out
dec
out
xchg
sub
dec
das
mov
lods
mov
dec
cmc
ret
mov
rclb
or
pop
cmp
cmp
xor
popf
movsb
jp
in
sti
mov
es
ljmp
flds
push
push
adc
xchg
pop
lock
add
je
dec
adc
add
cli
xchg
aas
push
mov
arpl
stos
jnp
scas
jns
daa
pop
mov
lahf
adc
push
pusha
cmpsl
push
push
out
add
push
sbb
insb
jae
cmp
call
push
xor
scas
out
or
fmuls
dec
dec
jo
mov
and
jg
push
clc
in
sahf
scas
sbb
pop
lods
xchg
lea
push
cwtl
or
xor
fnsave
xchg
repnz
cwtl
adc
jbe
jns
cli
lods
rcrl
aam
adc
pusha
xchg
fldcw
dec
stos
and
pushf
push
xchg
lahf
xchg
adc
shr
cmpb
adc
gs
push
xchg
lock
into
test
ror
pop
icebp
test
and
adc
cltd
pop
xlat
imul
fistl
cmc
test
in
jne
mov
fisttps
ret
add
push
push
mov
mov
mov
addl
and
inc
xchg
out
sbb
adcb
xor
pop
sbb
mov
lea
lods
mov
mov
xor
imull
jne
mov
mov
fisttpll
das
jp
mov
cwtl
cwtl
movsl
lahf
imul
mov
push
mov
aad
push
dec
or
xlat
sub
stc
cmc
pop
rol
jbe
sub
cmc
sub
pop
dec
negb
mov
mov
add
xchg
sbb
mov
adc
jno
mov
out
ret
push
int
and
int
jge
mov
bound
pmullw
lea
sub
sub
dec
xor
rolb
call
or
cmp
fs
and
arpl
es
cmp
xor
inc
out
jle
ret
adc
cmp
cmp
adcb
jl
mov
lock
sbb
pop
fidivrs
mov
roll
adc
push
and
js
jns
pop
sbb
add
or
xor
fwait
sub
ss
subb
add
or
cld
and
add
inc
mov
xor
lcall
test
jg
mov
or
js
in
ret
jnp
out
outsl
or
imull
add
adc
mov
dec
inc
lds
lods
jbe
jg
pushf
pop
icebp
mov
xchg
es
inc
ret
andl
sar
jl
and
scas
xchg
fs
pop
cmp
xor
jnp
outsl
shl
push
in
test
clc
cmp
fcmovne
out
stc
mov
xchg
mov
mov
add
fimull
cmp
test
shlb
loopne
outsl
mov
xorb
divb
jecxz
cmp
push
mov
jge
loopne
ret
arpl
sub
mov
rclb
enter
je
notl
ret
mov
and
sub
xorl
rcrl
adc
adc
xor
dec
imul
mov
xchg
aam
lods
inc
ljmp
sbb
insb
fcom
ds
add
xor
add
aas
cmp
and
sub
stc
mov
dec
cmpsl
test
mov
sarl
mov
arpl
cwtl
test
out
xor
lods
leave
inc
mov
inc
mov
push
sub
adcb
pop
sub
clc
int3
xchg
pop
das
leave
add
imul
mov
inc
scas
inc
test
dec
ja
stc
scas
outsl
jecxz
push
inc
dec
mov
mov
sbb
adc
jbe
add
cmpsb
push
lret
dec
dec
cmp
and
das
enter
in
in
out
pop
and
cmp
adc
or
sahf
and
inc
ja
imul
pop
push
sbb
mov
mov
pop
movl
insb
fdivr
pushf
mov
pusha
sub
icebp
pop
mov
xchg
mov
dec
mov
out
jmp
push
icebp
jne
in
out
dec
test
in
push
bound
cmpsl
pushf
out
jae
ds
pop
out
in
push
ret
jmp
shrb
cmpb
mov
cwtl
push
test
inc
dec
cwtl
pop
cmc
sbb
mov
sbb
out
inc
xchg
sub
lock
jmp
jg
push
in
jge
inc
pop
jns
push
adc
insb
mov
push
fistl
cmpsb
aas
lds
test
and
xchg
stos
cmp
pop
jge
daa
std
mull
jp
fwait
mov
xor
dec
xor
mov
adc
aam
xor
adc
jp
aad
fsubrp
jne
out
mov
ljmp
stos
fcomip
dec
adc
imul
sarb
cmp
popa
jg
es
js
mov
jno
fcomps
push
rcrl
dec
sbb
lds
xor
fs
dec
push
movsb
filds
xor
repnz
inc
cmpsb
testl
js
add
push
fsubp
inc
jg
pmulhw
and
shlb
imul
fiadds
push
mov
sbb
mov
sub
xchg
jae
je
fsubs
loope
movsb
xchg
js
adc
mov
xchg
xlat
push
mov
pxor
mov
mov
xchg
out
jmp
cltd
hlt
orb
int
jbe
in
mov
mov
and
cmc
mov
add
pop
jns
stc
mov
push
cmpsl
int3
cmp
fsubs
or
xor
aaa
inc
jns
sub
lods
in
xchg
icebp
push
stos
mov
mul
fisttps
jo
push
ss
dec
lock
adc
cmc
pusha
and
ds
lret
sbb
sub
insb
lods
push
std
push
jmp
xlat
push
lock
push
mov
push
push
mov
adc
jns
inc
int3
in
popa
inc
popa
sbb
lods
or
push
inc
push
adc
push
jo
xchg
xchg
lods
dec
jns
sbb
int
adc
pop
mov
fldl
jno
push
or
cmpsb
mov
inc
sub
push
mov
jno
pop
xor
mov
adc
mov
adc
jge
adc
and
or
lret
insl
xchg
mov
in
jmp
mov
cmp
fsubrl
and
dec
cmp
incb
or
or
sbb
jns
rcl
aam
xlat
xor
sub
xchg
mov
cmpsb
add
lahf
or
mov
adc
push
das
ja
xchg
js
adc
ljmp
out
and
aaa
je
xor
stc
clc
fimull
lds
in
cmp
into
inc
sub
loope
and
cltd
rorb
testl
cltd
lea
cmp
and
arpl
and
push
jbe
popf
mov
add
xchg
out
jae
adc
cmp
xchg
push
xor
aas
in
mov
jecxz
pop
ds
xchg
mov
fnstsw
push
or
xchg
jae
loop
xchg
pop
imul
jo
fcoml
insl
es
jb
inc
mul
jb
pop
test
adc
pop
lret
lret
sub
bound
ret
gs
push
push
outsb
sti
pushf
das
cld
xchg
clc
movd
xor
add
aam
inc
sahf
xor
iret
int
mov
xlat
es
pop
inc
mov
fdivs
mov
mov
push
outsl
out
inc
add
imul
das
out
jbe
push
es
ficompl
shr
repnz
test
leave
mov
sarb
test
cmc
movsl
mov
outsl
ss
hlt
lret
adc
mov
xchg
data16
sahf
mov
mov
sahf
xchg
jmp
in
stos
xchg
ss
or
cmc
cltd
pusha
shrb
cmp
adc
push
xor
jno
scas
mov
mov
inc
jb
jg
fbld
dec
stc
push
push
jg
movsl
addl
cwtl
outsb
sahf
push
std
lret
lahf
imul
cmp
lret
cli
jno
cmp
mov
xchg
jg
test
adc
ja
rorl
ja
adc
xchg
stos
scas
mov
mov
jge
dec
movsb
addr16
rol
cs
js
fsubl
cli
dec
push
mov
sub
xchg
inc
andl
add
scas
adc
sbbb
inc
cmpsb
push
sbb
sub
enter
push
sbb
fldl
and
mov
out
divl
std
xor
hlt
add
xor
or
out
shrl
out
adc
aad
mov
int3
jmp
cs
orl
cmp
ja
movsl
loope
aam
xor
fcmovne
fsubrs
lds
sbb
call
sub
jae
lods
xchg
xchg
push
push
stos
mov
jp
push
and
mov
or
aad
xchg
add
jae
mov
scas
xchg
inc
and
testb
or
test
sbb
push
stc
jb
stc
mov
sarl
xchg
cmp
xchg
movsb
imull
das
pop
fst
divl
and
dec
mov
popa
dec
pop
pop
add
xor
adc
rorl
add
cmpsl
in
jecxz
hlt
and
inc
adc
or
insb
cs
daa
loop
test
repnz
sbb
mov
test
outsb
outsb
hlt
add
dec
out
sbb
frstpm(287
cmp
js
cmpsl
hlt
add
add
mov
iret
and
mov
out
cltd
add
pop
lds
mov
shl
sbb
mov
sbb
push
xor
insb
jbe
mov
test
sub
lock
loopne
hlt
or
test
add
xor
in
inc
lock
loop
and
mov
sbb
cmp
xchg
imul
aam
fwait
push
jb
aad
pushf
inc
dec
jle
ret
pop
xchg
fnstcw
daa
push
les
leave
cwtl
sbbb
and
ret
and
jae
lods
xor
nop
jl
dec
xchg
mov
daa
fistps
xchg
rclb
jecxz
inc
popf
std
imul
cmp
sbb
sbb
dec
dec
dec
and
pusha
add
mov
dec
nop
out
dec
mov
mov
lret
std
movsb
repnz
fsubr
lods
xchg
push
jae
rorl
icebp
jmp
out
fmull
fldenv
mov
jo
addr16
pop
stos
push
bound
hlt
adc
mov
rol
or
mov
mov
xchg
adc
dec
mov
cwtl
cmp
push
cmp
jo
xor
pop
lds
jns
push
push
or
aad
popf
fistpll
scas
push
fnstcw
add
add
data16
movb
fcompl
test
int3
test
add
xchg
mov
movsl
arpl
pop
pusha
jmp
jmp
and
insb
xchg
xchg
xchg
xchg
cmp
dec
push
add
and
jmp
popf
mov
jmp
mov
mov
shll
outsb
pop
xor
negb
push
aad
fdivrs
xor
xchg
sarb
lret
mov
xchg
push
pop
cli
pusha
decb
jecxz
jle
pop
fmuls
or
es
push
sbb
pop
push
int3
xor
dec
dec
and
adc
jns
leave
aad
adc
sbb
sarb
nop
enter
jecxz
pop
add
test
add
nop
or
imul
pop
xlat
push
test
nop
xchg
aam
pop
jmp
loope
stos
loop
jp
es
dec
inc
inc
sbb
adc
jno
stos
ds
imull
xor
sahf
aam
push
fsubrl
xchg
nop
into
jecxz
xchg
loope
inc
fs
sbb
fwait
dec
dec
outsb
or
sbb
fidivl
and
jge
mov
dec
xchg
sti
and
arpl
sbb
or
scas
xchg
fdiv
fistps
rorw
push
je
and
ja
pushf
fistpll
jne
fmull
or
jae
andl
stos
jnp
jg
fcoms
xchg
es
jno
lahf
mulb
xchg
dec
jmp
push
imul
mov
fmull
cmpsl
sahf
loop
mov
aas
mov
jmp
lods
rorb
loope
int3
dec
pusha
adcb
arpl
adc
mov
loopne
or
arpl
daa
xor
or
and
clc
add
test
mov
adc
mov
adc
adc
arpl
jns
cmp
bound
lahf
sti
outsl
add
and
ret
xor
cli
and
gs
push
inc
push
popa
xchg
pop
jns
xor
xchg
sti
jns
out
sbb
sub
enter
lods
std
pop
imul
in
mov
test
cli
cmp
xor
jo
addr16
and
sub
ds
cmpsb
dec
push
sub
xchg
lods
push
mov
cli
mov
mov
pusha
jnp
pop
xor
addr16
sbb
insb
xor
repz
icebp
xchg
fidivs
or
roll
mov
add
or
stos
mov
adc
xchg
and
ljmp
fcmovnu
and
adc
out
xor
adc
aas
sub
cmp
int
or
xorl
and
addb
pop
fisttpll
push
data16
lret
in
add
push
imul
test
iret
in
ret
mov
dec
aaa
mov
enter
das
mov
shll
xchg
push
jns
lret
cmc
adcb
or
aaa
imul
lret
mov
cwtl
xor
ret
leave
dec
clc
push
xchg
dec
push
jbe
jne
mov
or
leave
mov
push
or
mov
std
mov
ja
cmp
sti
idiv
xchg
int3
testb
inc
xor
stc
push
mov
mov
into
icebp
fstpt
jmp
sbb
dec
or
aad
adc
sti
aad
fstl
sbb
mov
mov
int
xchg
mov
notl
aaa
stos
sub
inc
lcall
mov
adc
push
popf
cmpsl
pushf
hlt
rcpps
xchg
int3
insb
cmp
jbe
cltd
loope
or
and
sub
or
jb
cmpsb
inc
movsb
popa
and
fistpl
leave
ret
mov
sbb
pop
mov
inc
jge
jbe
dec
mov
or
aad
dec
push
rcrl
insb
fs
in
rclb
bound
cmp
lret
add
sbb
sbb
xor
outsb
sarb
ljmp
jg
cmpsb
jb
icebp
or
lods
leave
adc
dec
inc
cmp
roll
push
dec
inc
int
or
lahf
mov
dec
dec
daa
push
stos
clc
push
lcall
test
loopne
sub
inc
sub
addl
pop
out
sub
push
fpatan
mov
lcall
xor
mov
cld
jl
cmp
inc
adc
adc
les
adc
and
ljmp
or
iret
pop
xor
adc
push
sbb
sbb
sbb
outsl
movsl
adc
or
orb
mov
jle
fcoms
enter
add
into
int
xchg
xor
enter
jns
cmp
shll
imul
pop
fwait
xor
aam
shrl
std
jno
call
jecxz
mov
mov
rorb
negl
push
pop
push
test
cld
nop
rorl
cltd
push
rcl
mov
ds
pop
dec
cltd
adc
or
xchg
sbb
int
stc
cmp
sbb
setns
scas
movb
and
pop
rcr
imul
cmp
jo
adc
jne
xor
push
in
jbe
add
fwait
js
insl
xor
push
pop
mov
pop
jno
jno
xor
mov
lret
ljmp
jns
jo
xor
adc
std
lods
in
xchg
add
movsl
xor
cmp
add
pop
push
sbb
mov
pop
fistpll
pop
psrlw
in
mov
repz
push
cmp
cmc
push
call
and
xchg
or
clc
add
ret
imul
dec
in
inc
jb
pop
ja
enter
clc
lods
jle
clc
push
xchg
push
aam
out
leave
scas
mov
divl
mov
mov
shrl
mov
xor
mov
lret
fimull
popf
bnd
es
test
mov
lcall
int
pop
and
push
push
push
jns
arpl
or
jne
mov
jg
add
cmp
cmp
scas
stos
outsl
andb
dec
lahf
mov
xchg
decb
xchg
sub
data16
pop
or
push
adcl
aaa
or
into
inc
pslld
gs
mov
inc
test
stos
jne
xchg
cld
adc
pop
mov
dec
notb
aas
in
inc
out
gs
lds
or
fwait
mov
sahf
xchg
sub
lock
push
iret
push
or
jp
jb
mov
faddl
cmp
pop
push
sbb
int
add
push
cmp
dec
adc
dec
gs
scas
test
sub
sub
sbb
lea
pop
popa
pop
push
addb
insl
jbe
jb
loope
cmp
jae
push
cmp
inc
orb
dec
jno
aaa
xor
shlb
stos
mov
mov
faddl
and
movsb
jecxz,pt
test
add
insl
xor
fdivrl
sbb
or
call
cmp
js
lret
rorl
pop
jae
out
sub
fwait
mov
repz
outsl
inc
and
push
cli
movsl
and
mov
cmp
std
inc
pop
or
adc
mov
jecxz
aas
adc
in
xchg
mov
ret
mov
mov
outsl
or
mov
xor
inc
ja
data16
imul
push
xchg
shrb
shrl
sub
cmp
dec
push
test
dec
repz
xor
popa
mov
sub
loopne
cwtl
clc
inc
dec
inc
in
push
mov
cmpsl
jbe
not
repz
and
je
jge
pop
out
aam
mov
int3
ja
test
jno
xor
jp
jnp
inc
ret
push
xor
jecxz
mov
push
adc
ficomps
dec
cmp
pop
test
and
movsb
stc
push
sub
or
out
and
cs
fwait
hlt
stos
jbe
inc
dec
cli
xor
ds
cmpsl
outsl
mov
jmp
mov
mov
in
lock
xchg
movsl
icebp
fldenv
fists
and
sub
scas
xor
cmc
sub
mov
pop
fcoms
sbb
pop
xor
aaa
std
xchg
daa
divl
adc
aam
in
cmpsl
jecxz
jge
dec
pushf
call
inc
dec
aad
aam
mov
xlat
test
pop
pushf
inc
xor
in
or
or
or
mov
sbb
stos
andb
repz
call
pusha
divb
lods
fcoms
fmull
mov
ja
in
mov
mov
xchg
int3
lahf
fistps
push
mov
adc
pop
dec
sbb
dec
jp
pop
xchg
std
les
push
imul
cmp
ljmp
sub
fdivrl
sbb
inc
sub
jl
std
and
mov
xchg
adc
int
ret
cmpsl
sub
rcl
cltd
aaa
xor
pop
pushf
jbe
push
out
pusha
test
push
mov
pop
imul
xlat
sbb
pop
dec
imul
shr
lret
mov
mov
cmpsb
jnp
sbbb
scas
lret
pop
add
jae
int3
add
xchg
fsub
fstpl
ljmp
jg
adc
out
mov
jmp
mov
inc
mov
lret
les
jle
jp
test
mov
mov
xchg
dec
and
in
pop
xchg
scas
rorl
std
mov
icebp
mov
sbb
jne
lds
jb
push
cmp
pop
shll
mov
sub
dec
and
push
push
pop
fs
outsl
cmpsb
mov
push
sar
inc
hlt
inc
scas
mov
in
pop
loope
ljmp
js
mov
xchg
xor
mov
shlb
push
and
jno
shl
cltd
in
or
leave
pop
cmp
leave
pop
xor
das
inc
aas
test
jecxz
fcoml
sub
insl
adc
cmpsl
pop
ret
outsb
adc
bound
mov
out
loope
insl
rcll
pop
out
movsl
lret
xor
or
int3
stos
ljmp
inc
xchg
mov
xlat
mov
xchg
loop
add
mov
in
mov
js
mov
dec
in
lea
dec
cli
inc
add
xchg
adc
xchg
out
xchg
sti
popf
js
std
cmp
aaa
add
rcrl
iret
bound
loop
xor
loope
leave
shlb
rol
jo
scas
push
xchg
shrl
cmp
and
xchg
cmp
scas
icebp
pop
cltd
iret
mov
xchg
push
adc
or
lcall
int
ljmp
jmp
lea
iret
out
loopne
mov
lea
xchg
fs
test
sahf
jp
dec
or
jno
scas
and
push
iret
in
push
dec
mov
lahf
test
lret
pop
xor
addr16
pusha
pusha
adc
in
int
push
movsl
fwait
cmp
dec
inc
xchg
repnz
push
daa
inc
dec
lret
jno
dec
jno
or
out
pop
fisubrl
push
js
jmp
cmp
fistl
pop
aad
adc
mov
or
or
adc
adc
push
xor
sub
rclb
mov
mov
filds
sti
add
pop
clc
jno
ret
mov
push
cs
movsl
movl
mov
pop
das
ja
testb
repz
and
sti
inc
popf
mov
lods
mov
in
call
loop
cli
pushf
mov
mov
add
lcall
push
fldenv
mov
adc
and
dec
xor
or
add
jne,pt
mov
xchg
or
xor
pop
push
aas
in
xchg
int3
mov
mov
xlat
sbb
xchg
push
pop
scas
mov
xchg
shl
cmp
or
jb
stos
xor
je
and
repz
mov
call
push
pop
push
pop
mov
inc
add
imul
xorb
rorl
fcompl
leave
pop
cmp
jecxz
loop
pop
lret
jbe
and
sbbb
imulb
add
leave
cmovns
cwtl
pop
nop
rolb
inc
pop
cwtl
sub
or
arpl
lea
dec
dec
adc
cmpb
test
push
cmp
insl
out
fadd
iret
imul
mov
or
xor
jmp
push
xchg
fcmovu
in
or
push
bound
andb
repz
notb
xor
jge
add
lods
dec
js
pop
roll
pushf
lds
loop
adc
out
jecxz
sbb
mov
pusha
sub
lahf
dec
std
insl
into
bnd
rolb
imul
add
jbe
outsb
pushf
mov
dec
fldl
mov
int
jl
int
lret
inc
pop
mov
fimuls
ret
out
cmp
insb
in
push
ror
cmp
int3
call
movsb
xchg
repz
out
fnstenv
nop
aaa
xor
xchg
cmp
cmp
je
mov
movsb
sbb
adc
scas
and
or
daa
sub
dec
in
jb
jg
dec
jmp
sbb
xchg
or
adc
imul
leave
loop
bound
dec
pop
ds
test
or
in
mov
insl
and
xchg
mov
insb
cli
jbe
movsl
lods
addr16
mov
scas
pop
lock
out
inc
and
cmp
xchg
mov
out
jmp
std
inc
jmp
in
jb
dec
shl
into
test
or
daa
xor
add
jle
les
add
fsubrl
mov
insb
or
push
sub
stc
inc
sub
mov
or
inc
xchg
xchg
or
repz
adc
cwtl
bound
shrl
cmc
cltd
or
xchg
insb
dec
outsl
daa
ds
sbb
pop
cld
fnstcw
push
add
and
adc
inc
xlat
pusha
mov
rcl
movl
add
xor
lret
pusha
push
pop
mov
ljmp
out
mov
loopne
fwait
mov
leave
and
sub
stos
lods
or
cltd
xchg
cmpsl
jo
sbbl
sahf
test
jle
hlt
mov
loope
sbb
xlat
outsb
add
out
leave
sbb
jle
fistps
popa
jo
sbb
cmp
enter
popf
imul
xor
jae
xchg
in
rcrl
sub
adc
into
arpl
lahf
ss
movsl
pop
dec
adc
lds
in
pop
dec
cmp
adc
out
fmull
adc
pop
lcall
cltd
test
jnp
push
jmp
popf
outsb
sbb
cld
xlat
sbbl
test
ret
nop
inc
shll
xor
testb
ret
sub
leave
mov
sbb
insb
mov
xchg
insb
dec
sbb
add
nop
sub
sub
mov
jne
mov
mov
inc
mov
and
cltd
adc
xchg
dec
and
mulb
loopne
or
mov
and
add
je
ljmp
popa
lock
pusha
cs
mov
jg
sahf
xchg
jecxz
xchg
push
add
scas
rolb
les
xchg
aas
decl
aad
fisubrs
ret
loope
dec
fdivs
iret
xor
loopne
aas
xor
rclb
enter
dec
clc
xor
or
push
aam
xchg
xchg
in
mulb
mov
push
cmc
mov
inc
jb
mov
popf
pop
pushf
pop
fwait
andb
cmp
jg
hlt
adc
mov
mov
and
cmp
add
bnd
pushf
xchg
cmp
insb
pop
notb
mov
jle
jmp
mov
lcall
lods
mov
sbb
push
int3
std
frstor
dec
fdiv
fcmovbe
adc
pop
xor
lea
icebp
push
popa
mov
in
adc
xchg
and
or
and
inc
repz
pop
and
jp
push
test
mov
and
hlt
cmp
jecxz
hlt
xor
sbb
aad
loope
into
cmp
pop
adcl
jb
js
bnd
cmp
hlt
popf
pop
push
cld
adc
lcall
popf
mov
shll
sahf
es
fmuls
mov
mov
adc
pop
push
sbb
das
jg
and
int
cld
pusha
aad
loope
push
sub
stos
cmp
pop
or
adc
xchg
and
lcall
mov
jnp
adc
push
js
mov
pop
ljmp
pop
and
or
stc
mov
leave
dec
stos
movsl
int
mov
addl
data16
popf
push
mov
cmpsb
sbb
mov
or
scas
or
mov
jae
popa
mov
jns
lret
cli
adc
insl
jns
testb
fistpll
sti
mov
dec
je
loop
or
sub
stc
mov
fs
pop
fisttpl
popf
lret
push
jne
or
mov
rcl
cmpb
popl
in
pop
mov
scas
popa
xchg
and
test
loopne
push
outsl
push
jle
jecxz
sub
lret
mov
xchg
and
sub
sahf
aad
pop
lret
push
or
out
incl
push
and
sub
jmp
mov
xchg
insb
loopne
insb
pop
mov
lock
sarb
mull
fildll
push
jg
push
pusha
pop
mov
loope
aam
ret
jmp
mov
add
add
xor
cmp
xchg
lods
cmp
loopne
add
xchg
mov
repnz
lea
cmp
insb
fwait
inc
daa
and
stc
out
sbb
inc
or
xor
push
jge
int3
xor
cli
and
inc
call
and
les
xchg
and
pop
cs
stc
stos
ret
adc
adc
sbb
adc
push
cmp
test
sub
or
loopne
adc
cmp
fstl
addr16
test
ret
and
sub
xor
ja
push
stc
cmpl
sub
adc
call
scas
call
ret
adc
sti
xchg
push
lock
adc
imul
mov
stos
dec
call
dec
fs
mov
mov
mov
in
mov
mov
jg
jp
in
aas
push
mov
int
mov
add
outsb
fcomp
loop
sbb
sub
xchg
fcoms
fimuls
fldt
cmp
jns
mov
jmp
jo
dec
fiaddl
cmp
fstpl
scas
pop
xchg
insl
dec
dec
cs
mov
fmull
icebp
lods
adc
cmp
rclb
std
adc
xor
mov
mov
mov
sbb
cmp
add
mov
push
lcall
or
inc
xchg
push
flds
jle
fldenv
movsb
aam
in
lret
jae
fidivrl
xchg
clc
mov
lds
rcrb
es
inc
cmp
popf
mov
mov
shl
sbb
cmp
sbb
outsl
push
cmp
test
out
add
mov
inc
sti
mov
sub
out
sub
mov
enter
pop
popa
fs
mov
lds
xchg
lahf
repnz
add
ss
adc
mov
jns
mov
in
and
dec
out
mov
mov
aad
pop
lcall
ficoml
cld
out
aaa
out
andl
jo
int3
std
inc
jbe
or
cmp
jnp
mov
and
sbb
negb
ret
push
push
push
jb
push
cld
stos
or
subl
repnz
outsb
scas
xchg
mov
push
push
mov
cmp
stos
sub
cli
inc
dec
lock
stc
call
insb
les
popf
inc
sub
idiv
in
arpl
adc
test
scas
push
fstpt
pop
adc
jmp
mov
aaa
cmpsl
pop
mov
sub
movsl
rolb
jno
adc
scas
loopne
pop
call
fs
mov
stc
mov
mov
lret
nop
popf
jne
and
sahf
lods
adc
mov
sahf
push
sbb
test
cmpsb
sbb
sub
test
cmp
ljmp
and
scas
aam
sbb
and
sbb
push
in
xor
test
and
or
inc
shlb
stos
pop
dec
imul
cmp
xchg
fstpl
fwait
popf
shrb
xchg
adc
sahf
lods
fcomi
ds
das
adc
ret
fcmovnbe
call
pop
and
push
test
ret
inc
sub
xchg
bound
xchg
xchg
xchg
mov
sti
cltd
mov
arpl
fstpt
movsb
stc
sar
pop
pop
scas
out
mov
adc
xlat
inc
daa
mov
fmull
pop
rol
jl
jb
idivl
jecxz
jno
daa
jno
jle
adc
pop
movsb
inc
ja
insb
lret
inc
popa
lods
cmpsl
xchg
out
jno
adc
push
mov
push
xchg
cmp
sbb
loope
xor
inc
popa
repnz
mov
pop
xor
ja
sub
push
mov
xchg
sub
jne
or
pop
mov
loop
sub
imul
bound
shll
jns
xor
movsb
jo
push
mov
or
ret
rcrb
mov
imul
push
repz
rcrb
push
lahf
and
mov
add
jl
dec
mov
mov
stos
mov
loop
mov
call
pop
xchg
es
loopne
stos
hlt
jb
out
cmp
pusha
adc
mov
adc
int3
shlb
fdivl
mov
stc
adc
imul
jns
repnz
in
in
inc
sti
adc
sbb
mov
stos
dec
jp
mov
cli
mov
std
shll
mov
pop
andl
mov
cmp
mov
fs
out
imul
cli
ds
test
addr16
sub
insb
mov
pushf
pop
jle
in
inc
add
out
lret
out
adc
cmc
sbb
cmp
les
enter
xchg
mov
or
inc
in
int3
cs
or
ljmp
pop
insl
push
push
cmp
push
jne
xor
std
out
mov
inc
in
xor
push
push
dec
sub
mov
jmp
pushf
add
adc
pop
pusha
daa
add
scas
test
fidivrl
inc
jl
push
pop
sar
les
adc
pushf
scas
mov
test
cmp
in
cmpsb
or
repnz
mov
out
and
and
inc
mov
pop
pop
stc
add
cmp
jl
mov
faddp
js
push
mov
std
sub
jns
and
push
int3
test
sub
in
push
xchg
ficoml
jo
jmp
aaa
lock
stc
or
fs
add
push
sbb
jb
test
jmp
test
outsl
repnz
leave
movsb
rcrl
or
push
push
test
xchg
mov
aas
sbb
das
and
enter
xor
ljmp
or
add
jns
icebp
dec
jg
xchg
je
arpl
mov
bound
fnstenv
or
dec
les
xorb
add
xor
stc
push
test
addr16
and
mov
out
sbb
sbb
es
xor
dec
out
pop
pop
icebp
jg
mov
mov
mov
in
cmp
mov
and
mov
fistl
sub
lret
jecxz
and
pop
jp
aaa
clc
pushf
fimuls
imull
sbb
jmp
stos
aam
pop
and
nop
subb
sbb
pop
fdivrl
dec
add
sub
rcll
movntps
and
sub
jns
insb
mov
jae
dec
pop
aas
cmp
cmp
in
frstor
nop
pop
mov
dec
test
icebp
lock
ficoms
fbld
add
mov
out
pop
fwait
cmpsb
jl
outsw
dec
inc
jmp
jnp
pushf
adcb
in
adc
clc
cmp
jbe
ds
adc
cltd
add
push
outsl
pushf
shll
iret
stc
jno
mov
movsb
jp
sub
cltd
mov
decb
loopne
movsl
jl
je
lock
lods
loope
lods
mov
lods
xor
daa
mov
pushf
sti
out
inc
pop
mov
jp
adc
push
lahf
stc
out
pop
mov
dec
movsb
std
push
xor
sbb
add
cltd
jno
jmp
mov
mov
inc
xchg
sbb
in
and
test
call
cltd
ljmp
xor
addl
jb
into
sub
xor
jle
xchg
jo
lock
data16
sub
inc
xchg
test
mov
push
imull
add
mov
ja
jl
iret
sbb
call
ljmp
stos
cmc
je,pt
je
jl
lock
pop
jle
push
or
mov
mov
push
outsb
jl
int3
adc
adc
xor
fsubl
dec
or
cld
xlat
jp
inc
ljmp
adc
ja
pushl
insb
andl
mov
xchg
or
jne
outsb
xchg
loope
xor
test
add
pop
inc
mov
xor
je
stos
aad
sub
pop
dec
stos
and
mov
nop
jae
ss
jne
in
push
pop
lods
shlb
mov
and
adc
das
sahf
pusha
mov
imul
mov
xchg
cld
xchg
leave
std
mov
pop
add
call
jl
in
xchg
inc
jmp
push
repz
pop
negl
dec
mov
lock
or
sahf
stc
fisttpl
lcall
les
dec
add
cmp
in
sub
int3
ret
mov
fwait
call
and
pop
popa
addr16
es
iret
pop
dec
jo
dec
cmpsl
inc
sub
mov
test
test
inc
inc
cmpsl
mov
out
adcl
pop
hlt
fstl
xlat
and
inc
in
or
lock
shl
popa
dec
or
scas
sbb
lret
and
pmulhuw
fcoms
xor
pop
das
jmp
leave
stos
pop
cmp
insb
jge
sbb
jnp
sbb
scas
xorb
pop
lock
xlat
sbb
test
push
or
stos
callw
xchg
push
call
push
sub
lds
jmp
sbb
adc
mov
dec
sub
test
inc
stos
mov
jbe
sub
dec
add
pop
xor
add
and
mov
sub
mov
inc
adc
mov
cmp
rep
xor
dec
adc
inc
add
add
inc
hlt
inc
iret
imul
shrl
cli
out
jne
jno
dec
xchg
dec
pop
mov
push
jno
fisttpl
in
mov
adc
andl
xor
lods
in
mov
aaa
dec
pop
shl
mov
iret
test
cmpsb
jno
adc
test
sub
test
dec
not
dec
int3
imulb
js
or
or
pop
in
or
xchg
hlt
mov
adc
out
xchg
xor
mov
adc
lcall
test
add
adc
push
sub
add
sti
cltd
jl
lock
mov
lods
ljmp
push
popa
roll
xchg
ret
jecxz
les
rol
dec
or
mov
dec
pop
sub
cmpsl
mov
cwtl
subl
leave
stc
xor
ljmp
das
pop
pusha
inc
adc
aam
fisubs
pop
xor
into
push
std
in
xor
or
notb
pop
movsb
adc
jl
scas
dec
add
push
testb
jl
es
test
cmp
dec
lock
cs
je
bound
jg
jg
and
std
in
jns
loop
out
dec
inc
sub
jns
jp
cmp
xchg
daa
add
das
jmp
fcompl
ficompl
sub
jle
sub
inc
insb
sub
lret
pop
jns
mov
jo
ljmp
rclb
shrb
das
xchg
in
push
sbb
xchg
repz
fwait
das
stc
mov
shlb
pop
jno
xchg
daa
xchg
jbe
lahf
ss
std
adc
rorl
cmp
subb
addr16
ret
jb
inc
and
mov
inc
in
lret
fiadds
rcl
sub
cmp
fcoml
xor
xchg
jne
arpl
sub
mov
loopne
insb
pop
lret
fimull
out
clc
cmc
adc
rcl
arpl
or
call
push
xor
into
adc
test
mov
xor
hlt
mov
jae
pop
popl
jg
mov
adc
lcall
data16
sbb
jmp
pusha
jb
xchg
rcll
mov
enter
mov
or
adc
jne
mov
fstl
out
stos
xor
lahf
and
iret
fnsave
and
lea
sbb
inc
xor
push
jecxz
mov
clc
or
add
and
xchg
sti
or
jbe
aam
xchg
int
pop
enter
push
leave
mov
inc
mov
dec
popa
cmpsb
xchg
in
iret
xchg
mov
mov
gs
sbb
pop
lock
sbb
push
sbb
xor
sbbb
inc
mov
test
xchg
add
push
mov
insl
push
sbb
push
push
in
pop
push
js
test
xchg
vmaxsd
cltd
repnz
xchg
test
in
jo
mov
xchg
es
les
call
mov
repnz
xor
push
dec
or
push
adc
out
decb
pusha
push
shrl
cmp
jb
pop
hlt
jg
scas
push
add
mov
add
sub
sub
lret
dec
cmp
shlb
enter
xchg
jecxz
sti
adc
lock
loope
loop
shl
adc
adc
lods
mov
movsb
jae
rolb
xor
pop
and
jg
adc
sub
out
call
in
push
mov
cmp
sub
repz
sbb
lcall
push
lds
cmp
sub
rcr
pop
addr16
jo
fsubrl
jp
mov
cmp
scas
mov
xor
jg
test
mov
dec
dec
in
pop
call
inc
add
sbb
adc
addr16
loopne
add
mov
pop
push
pop
shl
fs
push
ret
mov
mov
inc
pop
lret
aas
lret
add
faddl
fstps
cltd
pop
mov
mov
or
stos
jbe
xchg
pop
dec
popa
add
pop
fs
fldl
inc
xchg
fidivrl
sub
popf
cmpsb
push
in
adc
mov
cmp
sbb
mov
push
hlt
addr16
pop
out
out
cltd
jl
mov
adc
push
push
mov
mov
fistpl
les
sub
and
or
mov
mov
cli
mov
cld
pushf
je
repz
inc
adc
cmp
fstpl
sahf
sub
or
lock
dec
cs
neg
push
push
push
test
push
cmp
sub
add
lcall
lret
hlt
pop
xlat
add
ds
jecxz
sub
push
mov
fiaddl
aas
mov
mov
shlb
inc
in
lea
mov
and
daa
push
aaa
xor
and
jno
and
fnstenv
clc
and
sbb
mov
into
mov
pop
mov
push
add
popa
lret
push
add
lock
lods
into
out
decl
mov
pop
loop
mov
stos
fcmovbe
test
cmc
adc
movsb
int
adc
xor
xchg
cmp
lahf
add
mov
mov
and
negb
jbe
adc
jecxz
cmpl
dec
in
ficoml
push
mov
jnp
cmp
jg
cmp
inc
sbb
sbb
lea
imulb
arpl
sbb
sbb
lods
sarb
inc
ljmp
jp
push
fisubrl
int3
inc
push
or
mov
out
inc
stc
sbb
in
mov
xor
jnp
out
lock
ret
loope
xchg
xor
out
sub
xor
cmp
testw
mov
lahf
pop
movsb
lret
ficoml
stc
inc
in
jge
sarb
mulps
call
adc
mov
mov
push
pop
sbb
cmp
inc
mov
pop
js
jb
movsb
in
lods
ret
inc
sbb
lods
pop
mov
mov
sub
cs
push
lea
dec
xchg
or
rcll
xor
mov
inc
push
adc
mov
sbb
jp
flds
insb
mov
in
mov
shl
icebp
add
jae
jmp
fwait
mov
repz
mov
test
xor
aad
jge
inc
or
mov
loop
or
sbb
sti
cld
cmpsb
shll
xchg
loop
je
pop
mov
pushf
mov
int3
pop
in
ja
sub
inc
lret
aad
je
out
mov
sbb
mov
lret
mov
sbb
mov
sub
cmp
std
enter
loope
lahf
out
xchg
add
test
repz
ret
rorb
popa
pushf
pop
mov
xor
test
mov
aam
cmp
add
insl
dec
sahf
pushf
outsl
cmc
inc
stos
push
inc
pop
mov
gs
shll
rcrl
cwtl
sbb
icebp
hlt
mov
jg
es
les
das
jno
je
fs
push
dec
xlat
loope
test
inc
loopne
ja
mov
out
push
jle
mov
adc
pop
or
movl
rorb
in
pop
mov
mov
in
jmp
inc
jl
dec
pop
mov
sub
ficomps
or
ja
stos
mov
add
xor
std
dec
jle
mov
xor
lods
pop
cmp
push
mov
fdiv
push
roll
and
ds
loop
dec
ficoml
pop
adc
mov
je
pop
sbb
add
popf
push
into
jecxz
into
dec
push
add
loope
pextrw
stos
aad
inc
nop
popa
out
push
bound
inc
inc
mov
not
imul
cwtl
cmp
enter
movsl
ja
cmpsl
rcll
push
test
pusha
insb
xorl
add
pop
xor
mov
jmp
cmc
dec
inc
jnp
cmp
or
pop
xchg
or
cs
xor
sub
arpl
adc
test
popa
mov
clc
call
inc
mov
dec
ss
fildll
add
popf
repnz
daa
ds
dec
xchg
mov
mov
xlat
sbb
pop
sub
dec
mov
xchg
and
ljmp
stc
jnp
mov
rcrl
shll
push
inc
add
sahf
mov
out
xchg
ds
dec
cli
mov
xor
sub
sarl
xor
imul
push
mov
fistps
dec
mov
sbbb
fcompl
mov
mov
adc
mov
data16
push
mov
cmpsl
aam
iret
cs
dec
sbb
sbb
hlt
pop
outsb
mov
rcrl
push
repnz
hlt
pop
jne
push
fmulp
rcrl
popa
inc
mov
push
xlat
scas
mov
dec
mov
in
stos
jb
insl
fstpl
or
mov
mov
jg
sbb
push
test
push
and
dec
fsubs
xchg
xchg
aaa
imul
lret
push
inc
mov
stos
outsb
jb
dec
mov
mov
inc
inc
sbb
adc
scas
mov
sbb
stos
push
insl
enter
push
iret
pushf
adc
add
lods
cmp
xchg
gs
dec
dec
sahf
add
xchg
sub
sbb
icebp
xor
xor
push
std
mov
sbb
cmp
sub
pop
mov
gs
hlt
popa
add
rolb
inc
mov
pop
into
dec
jb
gs
xchg
inc
arpl
mov
add
sbb
jl
mov
out
lds
mov
stc
xchg
ret
cld
adc
fstpt
pop
loopne
push
and
xor
mov
xchg
subl
testl
leave
push
xor
enter
hlt
enter
repz
push
mov
jle
lea
mov
mov
js
lods
test
push
out
sbb
fsubrs
push
inc
sbb
repz
cmc
mov
xlat
pop
cmp
cmp
ds
insb
dec
add
and
loop
xchg
push
mov
fsts
in
shlb
fisubs
or
adc
rorl
xor
mov
cwtl
mov
sti
dec
mov
not
push
push
es
lahf
subl
outsl
jp
pop
stc
cmp
shll
sub
popa
xchg
and
lahf
mov
inc
or
xchg
inc
arpl
stos
mov
int
testb
mov
jmp
in
push
dec
js
add
pop
mov
jecxz
sbb
adc
jmp
in
cmp
pushf
push
push
pop
push
sbb
in
mov
add
cwtl
imul
push
or
movsb
push
push
jb
sbb
orb
call
mov
std
mov
xor
fcoms
mov
imul
scas
scas
sbb
mov
xchg
cmp
pop
mov
rol
inc
jp
hlt
dec
or
sarl
mov
insb
jno
std
cmp
dec
or
subl
repnz
jb
bnd
out
mov
push
pop
test
sbb
mov
shll
jo
outsb
jp
lret
jo
sarl
lahf
lret
and
inc
add
jnp
stos
cltd
push
push
out
addr16
mov
pop
fs
jge
ljmpw
data16
sub
fidivl
pop
add
push
cltd
fnstcw
fcompl
shll
sbb
inc
imul
add
fimuls
cmc
mov
push
cwtl
pop
mov
dec
jb
adc
sbb
mov
in
mov
fdivs
sub
xchg
data16
xchg
and
xchg
mov
jbe
stos
sbb
ret
daa
into
jnp
jmp
sub
scas
test
ljmp
cmp
push
lahf
pop
shlb
add
notb
xchg
pop
neg
lahf
mov
lods
imul
pop
jge
mov
push
fidivl
lods
mov
push
adc
push
inc
clc
jnp
sbb
jnp
iret
ja
or
iret
pop
push
xchg
jge
jecxz
xor
mov
loop
push
es
aaa
pop
fbstp
or
ds
cmc
cli
lods
cmp
inc
jno
scas
push
push
mov
xchg
je,pn
sub
or
jg
push
jp
lods
movsl
sahf
addr16
jbe
jge
and
int
mov
fwait
stos
xchg
cmp
aad
inc
es
cmp
pop
outsl
dec
mov
push
rcll
notb
pop
adcl
roll
cld
inc
cmpsb
xor
aam
jp
lods
pop
ds
nop
aas
xchg
mov
leave
cmp
popa
sub
adc
jl
or
pushf
fwait
sbb
and
mov
lds
icebp
xchg
sbb
loopne
sbb
and
addl
inc
loope
mov
and
outsb
loopne
xsaves
int3
addr16
cmp
inc
movsb
pusha
in
push
xchg
and
cltd
xchg
xor
lcall
push
insl
jle
test
pop
add
test
into
out
daa
inc
cld
orl
loope
ss
jecxz
fidivrl
ret
dec
xchg
test
mov
jg
mov
leave
pop
inc
push
dec
adc
in
leave
loopne
outsb
mov
enter
repz
stos
ret
mov
lret
xor
sbb
ds
fimull
sbb
inc
movsl
arpl
jl
fs
bound
xor
sbb
arpl
aaa
add
mov
lods
es
popa
mov
int3
cmp
pop
test
xchg
stos
mov
lods
aas
lret
pop
rclb
es
test
aas
dec
ja
and
cmpsl
popa
push
adcl
and
inc
jno
adc
aaa
sbb
in
xor
pusha
xlat
jnp
out
mov
outsb
sub
mov
aad
sub
push
or
add
ret
es
pushf
xchg
adc
mov
shll
outsb
stos
outsl
mov
mov
aaa
out
jae
xorb
js
les
jmp
shll
pushf
aam
out
je
sub
sub
lea
jne
mov
or
in
adc
out
test
mov
rcrb
popa
pop
jb
push
test
ja
jnp
mov
or
loop
cmpsb
sub
out
fsubrp
stc
sub
aas
push
scas
adc
mov
aam
push
sub
push
lock
jae
dec
out
jno
mov
loope
ds
andb
outsl
imul
xorb
int
jl
push
mov
aas
sahf
dec
cli
mov
je
cltd
dec
in
jno
inc
mov
xchg
cmpsl
pop
or
xchg
lods
xor
lcall
add
in
mov
addb
cmp
xor
xchg
cmp
cs
cli
inc
sub
rolb
add
inc
jo
add
sub
shll
movsl
repz
xchg
dec
fsts
sub
adc
push
jo
rol
xor
push
push
std
inc
not
mov
jns
rorl
and
mov
push
inc
fnstcw
adc
push
cli
ds
mov
xor
adcl
xor
mov
test
test
mov
mov
add
jne
sub
lret
outsl
cmp
jp
enter
pop
xchg
adc
or
fwait
cmp
sub
adc
jg
jno
add
out
mov
push
pop
inc
fcoml
fnstsw
das
arpl
ret
clc
dec
cld
pop
out
add
int
cmp
sub
mov
pop
sub
ss
sbb
mov
pop
or
cmp
adc
ret
pushf
adc
lret
aad
pop
stos
mov
mov
sti
mov
fstp
loope
inc
iret
aas
sbb
fmull
xor
and
or
or
inc
pop
hlt
jl
push
push
int
mov
pop
jg
xor
sub
push
add
push
rcrl
mov
add
mov
arpl
xlat
add
shll
ja
call
loopne
sub
inc
pop
scas
inc
push
inc
lods
repnz
mov
out
xchg
sahf
out
pusha
add
and
fwait
xchg
mov
add
jmp
hlt
mov
xor
test
cmpsl
insb
pop
xor
mov
mov
pop
fistpl
mov
mov
imul
popa
pop
jle
gs
fstpl
mov
push
iretw
adc
jmp
in
pusha
fiaddl
mov
push
testb
repz
push
out
fildl
add
data16
jmp
pop
sbb
cmp
ja
or
and
inc
iret
outsl
push
scas
cmp
pop
nop
xor
mov
adc
call
sub
adc
hlt
mov
or
or
lds
cmp
push
push
fdivs
es
xor
xchg
outsl
dec
ss
pop
fs
shr
xchg
and
cwtl
cmpsb
sub
sub
push
xor
or
jle
pop
imul
leave
cmpsb
or
fimull
jge
or
push
insl
mov
push
jae
subb
cmpsl
loop
repnz
scas
out
dec
lret
jnp
cs
out
test
in
loopne
sahf
mov
cwtl
cwtl
icebp
aaa
jge
xchg
cld
xlat
and
cmpsb
pop
lret
fldcw
inc
cld
test
sub
call
icebp
mov
fldt
repz
sub
push
ds
adcb
cmp
iret
loop
push
sub
push
stos
mov
jle
out
out
std
inc
mov
cmp
dec
js
loopne
mov
add
pop
cmpsl
loop
and
fnstenv
rcl
jbe
int
in
cmp
sub
popf
je
push
into
inc
jbe
outsl
popa
sbb
dec
dec
pop
mov
xchg
sti
or
and
xor
out
sbb
or
in
jl
xlat
daa
js
mov
inc
loope
aas
fdivrl
push
mov
pop
cli
adc
scas
int
mov
pop
fwait
shl
mov
lret
adcl
rorb
rcll
inc
dec
jmp
or
in
in
fwait
ds
fwait
js
cmp
imul
lods
shll
dec
pop
pop
lahf
inc
mov
inc
xor
ret
cld
in
push
cmpb
sbb
add
gs
jmp
shl
or
test
push
and
pop
popa
xchg
les
es
mov
mov
movsb
ja
popf
adc
cmpsb
sbb
add
fnstsw
loope
mov
cs
mov
pop
or
fs
lret
push
sbb
push
mov
adc
roll
push
vpunpcklqdq
jae
ljmp
roll
pushf
dec
mov
dec
sbb
stc
mov
loope
pop
mov
inc
sbb
mov
sub
insb
cs
addl
add
fnstcw
insb
fsubrp
add
sub
mov
mov
jnp
dec
sti
imul
jmp
outsl
popa
test
int3
xor
repnz
aaa
sahf
sub
inc
add
subps
hlt
jecxz
stos
insb
mov
js
push
arpl
int
or
cli
pop
mov
jne
aas
adc
add
bound
lret
cld
push
clc
mov
in
mov
test
mov
or
sahf
les
inc
push
xchg
push
arpl
nop
inc
movsl
mov
fisttps
outsb
cld
test
and
cltd
lods
dec
mov
pop
faddl
dec
ret
jb,pt
insb
xchg
and
into
bound
push
add
dec
lock
cmp
fcmovb
test
je
out
iret
jne
pop
lock
pop
loopne
and
lods
inc
and
pop
fmull
stos
aad
or
je
adc
push
ds
mov
pop
or
aad
in
pop
sub
add
add
mov
lret
and
decl
loope
mov
pusha
dec
or
sub
push
sbb
cmp
lahf
sbb
pop
ret
cmpsb
je
in
mov
inc
ds
sti
cli
adc
cwtl
arpl
push
lock
test
jo
jp
xchg
dec
inc
xor
lock
cmc
add
sub
loop
and
lcall
fisubs
push
sub
cwtl
sbb
nop
xor
cmp
sahf
dec
sbb
mov
dec
push
aas
adc
mov
js
xor
inc
flds
cmp
sub
popa
mov
push
shlb
cltd
pop
popa
fsubrl
cmp
std
sbb
aad
inc
inc
push
mov
mov
out
or
cli
sti
sbb
jnp
out
ficoml
loope
insb
ljmp
jmp
sub
imul
and
jmp
icebp
cmp
imul
mov
mov
loopne
jbe
mov
mov
dec
jbe
mov
popa
sub
lret
dec
testl
xor
dec
daa
cmpsl
jl
xor
test
int
or
pusha
in
lcall
add
loop
mov
ljmp
xor
xlat
jne
mov
sub
cmp
inc
push
pushf
loope
jl
mov
jecxz
lods
mov
inc
shrl
pop
int
pop
lret
or
lahf
xchg
cmp
xchg
xchg
jp
dec
shrl
add
loop
sar
jle
sub
sbb
jle
cli
sub
inc
jl
lock
fdiv
test
lret
scas
ret
pop
add
push
lea
fiadds
adc
and
mov
in
in
andb
ljmp
push
sbb
xor
mov
mov
add
in
cld
add
lea
mov
sarb
test
mov
xchg
jmp
add
sahf
in
mov
mov
adc
and
xchg
or
les
pop
xchg
push
ffreep
lret
mov
push
lock
add
push
pop
imul
mov
aad
icebp
pushf
lods
add
cmpsl
add
cmpl
mov
cmp
cmpsb
outsl
sbb
xchg
aad
rorl
push
mov
imul
add
mov
inc
cmc
outsb
sub
xchg
xchg
rorl
push
jo
adc
popf
xor
mov
shlb
dec
add
inc
add
aad
dec
or
xor
add
adc
stos
push
shlb
pop
sub
stos
mov
cmpsl
push
int
aad
shlb
xchg
push
div
adc
xchg
nop
das
repz
mov
icebp
mov
mov
data16
or
xchg
stc
mov
adc
es
mov
push
mov
cmp
jnp
ss
inc
data16
push
inc
test
dec
mov
lret
hlt
sub
jno
add
adc
xor
push
xchg
vmovntps
xor
clc
daa
push
xor
xchg
adc
nop
adc
aas
or
add
subl
pop
dec
xor
test
and
jp
push
test
push
cmp
clc
lods
jecxz
xchg
xchg
es
jp
or
or
test
adc
lods
mov
dec
ret
inc
or
bnd
ret
shrb
cmp
cmp
adcl
and
loopne
xlat
test
ret
cli
scas
push
out
cmpsl
jno
rcll
jp
pop
xchg
push
or
out
jl
jg
out
call
cmp
dec
loop
into
out
loopne
xchg
ja
xchg
insl
dec
cmp
rclb
mov
cmp
dec
in
mov
or
es
dec
cltd
push
in
stos
stos
cmp
and
mov
sub
loop
out
stos
lcall
cmp
cwtl
jbe
sub
test
lea
mov
sahf
mov
add
decl
inc
lret
mov
pop
into
sub
mov
push
fstps
repz
jg
push
stos
xchg
adc
loopne
fdivl
inc
xchg
lea
aam
aam
notb
inc
and
sti
scas
mov
icebp
rolb
mov
shl
test
loopne
cs
stos
std
test
rorb
inc
ds
lahf
or
lea
xor
mov
out
int
popf
pusha
sub
or
mov
addl
fbstp
or
push
shll
dec
jmp
xor
inc
lahf
push
dec
inc
in
mov
mov
pop
lahf
mov
gs
xchg
cmc
cmpsb
or
sub
xor
clc
lock
lods
test
adc
push
rcr
ds
sbb
retw
fcmovne
jmp
xchg
mov
cld
pusha
sbb
stos
push
xchg
push
mov
pusha
cltd
push
add
mov
add
jne
lcall
lea
cwtl
mov
sub
jne
mov
push
mov
lds
pop
cmp
cltd
add
inc
lret
cmpsb
outsb
jecxz
scas
movsb
inc
adc
or
dec
push
cmp
mov
je
xor
jno
add
daa
shl
pop
in
inc
fs
dec
loop
xor
sbbb
sub
adc
test
xlat
mov
adc
cltd
push
mov
fpatan
jbe
inc
icebp
lds
out
dec
pop
push
les
outsb
ret
negl
scas
mov
mov
fs
or
dec
pop
push
jbe
push
xchg
lret
pop
lods
adc
inc
adc
jmp
daa
test
shll
add
mov
jbe
sbb
addr16
jae
dec
popf
sub
loop
hlt
ja
xor
mov
inc
cli
pop
hlt
add
or
jb
adc
jg
mov
scas
xchg
mov
sti
push
decl
ds
out
into
ja
cmp
rolb
repnz
std
cld
jns
insb
and
xor
xor
dec
xor
lcall
in
scas
or
nop
jae
pushl
int3
cmp
lea
lcall
out
xor
jnp
xchg
movsl
push
cli
fidivl
ljmp
jb
fdivrp
mov
cmc
jnp
sbb
pop
sahf
xor
pop
xlat
sti
pop
jmp
es
in
fsubs
pop
lock
adc
or
sbb
pop
cmpb
cmp
insl
add
mov
mov
dec
mov
jle
inc
pop
fwait
ret
js
gs
inc
arpl
add
fprem
shl
mov
mov
fs
jg
cmp
mov
adc
adc
aaa
dec
or
daa
cs
add
cli
dec
les
mov
cmpb
in
decb
je
sbb
cmpsl
or
ret
adc
ljmp
adc
jmp
mov
shl
push
lahf
mov
jle
fbstp
loopne
jmp
bound
lcall
rcll
gs
cmp
fsubl
ret
jae
jle
das
test
ss
lahf
xlat
sar
xor
adc
or
lods
mov
mov
movsl
jmp
shll
repnz
inc
mov
scas
fnstsw
loopew
lret
sti
fnstenv
sub
push
mov
mov
push
xchg
nop
jo
and
mov
jp
hlt
out
cmp
imul
test
cmc
repz
mov
mov
leave
fistps
cld
scas
jl
mov
inc
aas
enter
add
pushf
insl
addl
xchg
push
xchg
dec
jbe
rcrl
inc
add
push
insl
pop
and
fistpll
xor
mov
out
cli
jbe
std
mov
int3
mov
adc
les
insb
aas
in
lods
cmpsl
sbb
xlat
sbb
mov
inc
cmc
dec
nop
call
leave
je
push
adc
mov
jbe
dec
fidivrl
mov
cmp
inc
bound
lods
lret
or
clc
rclb
mov
or
push
mov
scas
jmp
dec
dec
aad
push
sbb
xchg
xchg
notl
int3
sbb
addl
lret
ror
mov
arpl
adc
adc
bnd
sub
cli
mov
adc
pop
lock
inc
lret
in
sbb
dec
inc
push
adc
mov
mov
adc
inc
xchg
xor
inc
dec
ret
xchg
test
sub
dec
sbb
jmp
pop
test
in
mov
cmp
inc
test
cmp
mov
or
sbb
scas
sbb
lret
jmp
or
stos
mov
ficoms
mov
insl
dec
ljmp
mov
mov
pop
push
lret
mov
imulb
ficoml
mov
decb
mov
push
xchg
fbstp
push
mov
cmp
add
test
sub
mov
popa
jmp
loope
mov
add
sti
idiv
fbstp
push
jns
mov
and
pop
xchg
and
xchg
sti
or
jo
inc
fstps
pop
mov
stos
pop
call
mov
sahf
mov
push
pop
in
inc
and
js
jo
mov
jo
mov
push
dec
in
pop
xor
mov
pusha
pop
and
aas
mov
jno
pop
outsl
test
mov
push
sub
int3
and
cmpl
sbb
aas
pop
or
fwait
inc
fistpll
cmp
mov
inc
movsl
call
scas
aad
add
shlb
cli
sub
push
pop
cwtl
inc
int
imul
and
shrl
mov
pop
mov
mov
mov
cmpsb
mov
fistps
cmp
xchg
pop
mov
mov
cmp
cmp
sub
mov
mov
incl
pop
and
mov
mov
lds
pop
pop
fs
enterw
jo
adc
mov
jns
push
push
fcomps
mov
pop
stc
inc
inc
fdivrs
jmp
jno
jge
inc
xor
popa
jo
mov
add
lret
jl
std
les
pop
addr16
addb
xchg
in
mov
mov
loopne
insl
jne
pop
mov
lods
add
sub
negl
and
orb
push
std
mov
ret
sub
or
aaa
out
clc
test
jge
loopne
sti
iret
outsl
cmp
sarl
push
lret
hlt
cmp
das
clc
mov
or
inc
push
mov
test
sub
jno
ret
cli
call
mov
push
jmp
rorb
xchg
test
mov
rcll
rcll
stc
ja
nop
lret
aas
jmp
hlt
mov
mov
and
dec
jmp
hlt
mov
mov
mov
jecxz
fadds
mov
aad
movsl
pop
ss
fisubrs
cmp
std
pushf
sbb
in
and
mov
out
sub
dec
dec
jle
data16
cmp
pop
and
aad
data16
xor
xor
aam
scas
or
pop
jns
cmp
jp
cmp
repz
js
dec
insb
iret
sub
or
loop
loope
jmp
mov
stos
stos
daa
notl
push
jg
dec
gs
xchg
fsubs
sub
pop
inc
repnz
fsubs
mov
add
iret
aad
mov
or
popa
or
ficoml
and
out
dec
mov
mov
jecxz
push
lock
dec
out
fucomi
popf
mov
cmpb
insl
xor
mov
inc
pop
adc
sbb
dec
call
scas
scas
fwait
xor
jle
jmp
shll
pop
outsb
das
xor
push
ljmp
cwtl
sub
lods
xlat
sbbb
jmp
repz
fimull
sti
clc
cmc
jl
push
add
in
in
pop
lods
lret
fisttpll
popf
out
xchg
add
out
outsb
pusha
out
dec
cs
jmp
int
xchg
adc
jnp
movsb
push
jge
cmp
inc
cltd
push
pop
push
outsb
jle
iret
dec
arpl
outsl
shrb
jge
jg
and
fsts
aad
pop
cltd
loop
loope
inc
flds
mov
insl
add
sub
cld
shrb
fsubrl
mov
lret
jae
push
mov
lcall
cli
mov
fmul
sub
cmp
call
pop
pop
lods
mov
push
ffree
add
nop
jg
lods
outsb
cs
nopl
adc
imul
pmaddwd
push
les
inc
loop
scas
into
add
fsubrl
jne
inc
rolb
adc
cmpsl
jle
add
std
out
add
xor
inc
cmp
cmpsb
jne
sub
sbb
sti
add
jno
xor
cmpsl
out
inc
imul
mov
jp
pop
mov
adc
ja
js
addr16
sub
lds
fsubrl
hlt
xorl
jne
sti
inc
add
pop
mov
fimuls
popa
push
ficoml
jp
pop
test
es
lret
or
int3
mov
iret
xor
imul
and
or
in
dec
scas
jae
cmp
into
dec
iret
jno
stos
pushf
cmp
cmpsb
std
pop
cltd
adc
inc
jo
mov
sbb
out
mov
sub
sti
fcmovbe
lret
dec
icebp
jne
xor
jmp
cmp
mov
std
andb
dec
std
push
xchg
aad
fldt
mov
xchg
sbb
dec
push
lahf
jecxz
push
cmc
sbb
xor
fwait
pop
add
add
or
shlb
add
jmp
and
xchg
sbb
movsb
subl
int
stos
test
or
inc
lds
loope
mov
mov
imul
sti
insl
xor
adc
jg
adc
mov
jne
jo
mov
mov
inc
mov
push
in
pop
cmp
mov
mov
push
pop
rorl
push
adc
inc
or
pop
fldenv
and
xchg
mov
cmp
les
and
mov
push
or
xor
mov
xor
dec
test
or
push
add
and
neg
adc
testl
dec
mov
loope
push
ljmp
idivb
pop
sub
push
mov
or
hlt
cwtl
cmpl
add
inc
cli
dec
add
and
jo
adc
repnz
inc
hlt
insl
cmp
jge
inc
dec
xchg
ret
inc
sbb
test
xchg
std
mov
cmpsb
mov
pop
xlat
push
int3
jne
pop
inc
sbb
sub
movsb
rcrb
call
and
push
inc
cmp
jne
adc
dec
mov
lret
imul
mov
jne
adc
mov
out
adc
sub
adc
sti
sahf
xchg
cmp
jo
push
bound
pop
int3
cmp
std
daa
orl
ds
add
cmp
mov
out
into
cwtl
pop
ss
nop
shlb
rcr
sbb
xor
cs
adc
out
fwait
mov
dec
icebp
testb
outsl
mov
mov
and
push
mov
sub
mov
dec
xor
ret
sarb
sbb
aad
inc
outsl
pop
push
dec
sti
mov
stos
pop
mov
in
sbb
pop
fwait
xchg
mov
adc
jge
lds
aaa
daa
sub
outsl
jg
dec
push
divb
jnp
out
mov
addb
cmc
pop
push
cmp
xor
xor
insb
rcrl
mov
xor
imul
push
data16
pop
mov
lock
adc
pop
sub
hlt
lahf
and
mov
adc
push
sti
pcmpeqd
stos
xchg
sub
xchg
repz
jge
popa
cli
xchg
idiv
push
dec
cmp
popa
and
aad
aas
mov
adc
mov
inc
gs
jmp
mov
jecxz
ja
fnstcw
fimull
fmull
flds
pop
jae
arpl
ja
aam
and
aad
rcll
aad
negb
in
repnz
sub
xor
lock
int
dec
sub
jp
jb
std
sbb
inc
cmp
xor
push
cmpsb
dec
adc
xchg
push
sbb
lret
dec
loopne
std
sbb
stos
cltd
mov
lods
sbb
movsl
stos
stos
sub
cmp
mov
mov
push
stos
out
or
xchg
loop
dec
test
cmp
fcmovbe
into
cmp
shr
cmp
adc
inc
sub
jae
xor
notl
je
not
push
or
jnp
mov
out
test
jo
std
adc
push
mov
in
outsl
ret
movsb
cwtl
in
sub
jecxz
lds
add
lahf
and
dec
lret
shrl
mov
or
sar
or
or
push
sub
push
push
movsb
testl
pushf
mov
es
out
mov
xor
jl
mov
xlat
push
pop
out
cs
dec
mov
or
mov
cmpsl
and
jns
pop
cs
sbb
movsb
pushf
fucomi
imul
or
add
mov
and
pusha
sbb
adc
push
push
mov
mov
roll
jg
icebp
cmp
xlat
cmp
icebp
dec
cwtl
testb
imul
jb
mov
xchg
pop
mov
push
jns
iret
jmp
pop
data16
cmp
jbe
lock
pop
or
add
and
xchg
icebp
pop
pop
xchg
mov
cwtl
aam
fwait
dec
pop
lea
scas
adc
ret
mov
lret
int
sub
cmp
test
sub
in
and
jne
leave
icebp
xor
cmc
sets
mov
hlt
mov
pop
jne
jl
std
rcrb
adc
jmp
gs
aaa
out
lcall
leave
sub
push
in
cs
xor
sbb
sahf
fnstenv
adc
leave
pop
test
scas
movsb
pusha
mov
nop
pop
loopne
dec
or
mov
bnd
sti
mov
ret
test
sbbl
mov
dec
mov
es
cltd
stc
addr16
ds
push
cmp
pop
jo
push
mov
jno
ja
and
daa
int
push
push
dec
push
cmp
and
push
imul
or
mov
outsl
outsl
js
jno
or
and
xor
jo
xchg
popf
xor
cmp
insl
mov
lret
sub
mov
push
dec
dec
iret
pop
bound
add
mov
pusha
out
jecxz
inc
xchg
adc
jp
add
push
and
jne
mov
fwait
cwtl
mov
sub
or
adc
dec
ljmp
sbb
punpcklbw
mov
inc
mov
mov
dec
pop
arpl
push
jns
pop
xor
pusha
add
cltd
jo
testl
add
xchg
fiadds
pop
jge
cwtl
fs
jmp
xchg
fs
or
mov
pop
addl
pushf
jle
lods
push
lea
sbb
loope
ret
mov
stc
push
xchg
jmp
enter
ret
jo
pushf
insl
add
daa
faddl
jo
popf
ss
pop
xchg
test
movsb
clc
mov
pop
xchg
orb
ja
inc
das
ret
cmpsl
aam
mov
pop
andb
mov
push
add
pop
in
cmp
inc
aas
sarb
stos
js
std
roll
cmpsl
mov
scas
sarb
sbb
fadds
popa
fsubrl
add
jbe
imul
iret
xchg
outsl
adc
jnp
xchg
push
cmp
xchg
fs
jnp
mov
test
mov
je
insl
inc
inc
sbb
mov
leave
fldt
jge
or
mov
pop
add
call
ds
push
cmp
mov
and
pop
lods
movsl
or
sub
sti
dec
aad
gs
call
mov
mov
dec
dec
je
cwtl
testb
push
push
jo
gs
dec
add
popf
pop
cmc
repnz
ljmp
ret
jp
mov
arpl
testl
lea
dec
xlat
addr16
adc
xchg
fstpl
cmpsb
cmp
sti
fcmovnu
xchg
jno
sub
pop
out
ds
pushf
cmc
addr16
mov
insb
or
testb
orb
sub
fimull
cmpsl
rcrl
pop
adc
rcpps
sahf
mov
int3
cmp
xchg
push
sub
ja
add
push
pop
imul
insb
imul
into
add
push
mov
clc
cmp
cmp
movsb
into
push
sbb
add
loope
mov
out
rcrl
xchg
mov
add
hlt
xor
xchg
jp
xor
pusha
inc
int
adc
mov
push
jp
lcall
mov
push
icebp
and
cmp
mov
adc
push
enter
xchg
inc
mov
mov
lret
sbb
mov
xorl
out
test
int
daa
lods
xlat
inc
loope
inc
loope
xlat
pop
cmp
sbb
andb
and
aad
mov
shrl
jge
cmpsb
xor
or
jmp
loop
xchg
mov
pop
xchg
je
mov
cld
cs
pop
dec
bound
enter
adc
movsb
imul
mov
or
lock
std
out
xor
test
adc
mov
fldt
div
add
fildll
sub
lcall
cs
mov
and
aaa
popa
outsb
insb
arpl
cmpl
enter
popa
std
arpl
cmp
inc
dec
rclb
add
sbb
sub
loopne
mov
push
in
scas
clc
jl
sbb
test
sahf
pop
adc
mov
push
push
imul
push
mov
sub
scas
sub
sahf
xchg
sbb
or
rcll
test
repz
mov
lods
jmp
das
into
jp
push
push
ljmp
mov
adc
sbb
leave
mov
fimull
mov
out
les
xor
fwait
repz
xchg
sub
cmp
xchg
notl
xchg
and
lret
ret
inc
lods
push
jg
imul
xchg
stos
and
and
lods
fbstp
and
or
rep
je
lret
in
cwtl
mov
pop
loop,pn
sbb
notl
call
lea
and
xor
xor
js
clc
pop
ficoms
insb
loope
adc
rcl
fcmovu
pabsd
negl
cmp
mov
stc
hlt
sbb
dec
add
fucomi
rorb
dec
adc
pop
lods
cwtl
les
xchg
xchg
repnz
lret
pop
and
aam
hlt
jle
das
das
and
inc
test
lds
in
mov
xor
cld
lahf
loopew
jnp
faddl
sub
sahf
dec
subl
insb
jecxz
test
leave
in
shrl
dec
movntps
pop
push
stc
int3
insl
jg
rclb
imul
repnz
aas
gs
lcall
or
jecxz
insl
cwtl
mov
xor
pop
adc
loope
pushf
sbb
lods
outsb
mov
and
frstor
cmp
adc
sahf
xor
jbe
and
in
mov
or
sub
add
pusha
sbb
test
pop
xchg
adc
aaa
xchg
pop
rcl
xor
shrb
cs
adc
fisubrs
lods
pushf
fsts
adc
xor
outsb
cmp
stc
jge
cmp
inc
push
scas
jg
push
and
fstpl
loop
scas
or
cwtl
xchg
fstl
dec
cmp
adc
loopne
ss
ja
les
ret
mov
mov
sbb
aad
push
mov
xlat
lahf
jmp
cmc
fwait
jge
mov
cmp
lods
mov
int3
mov
fistps
sub
lret
fwait
test
xlat
sahf
fwait
pop
xchg
out
dec
scas
ss
pop
inc
into
dec
sbb
jb
inc
cmc
xor
aam
je
popa
jle
and
repnz
mov
fwait
jecxz
cmc
addb
insb
push
test
inc
cmpsl
insb
sub
mov
sar
inc
inc
sarb
js
xor
fistpll
aad
rclb
test
inc
or
pop
daa
push
jmp
jnp
es
lods
push
cld
pop
mov
xlat
push
fwait
pop
stos
cmp
aas
subb
and
dec
jo
loop
mov
mov
sub
insl
popf
sbb
and
push
push
lret
fs
push
jge
lods
mov
ret
mov
inc
jp
scas
fsubl
test
cmp
or
push
or
sub
pop
cli
mov
cmp
lahf
fwait
sub
out
aaa
jge
js
es
decl
lret
out
push
in
push
push
fildll
push
sahf
out
pop
mov
int
fwait
shrl
inc
stos
arpl
or
sbb
adc
bound
adc
pop
xorb
es
add
push
sub
sub
pop
daa
jnp
popf
xchg
bound
xlat
push
aad
mov
cwtl
jne
mov
push
daa
push
xchg
leave
cmp
adc
aas
xlat
sbb
ret
in
fnstcw
adc
sbb
imul
int
icebp
sahf
les
not
push
lock
xor
cmpsb
jg
mov
shrl
jbe
ja
mov
sbb
add
rclb
cwtl
fwait
and
and
push
es
imul
ja
rcll
mov
and
stc
xlat
scas
das
push
or
rcrb
or
or
push
sbb
dec
add
int
stos
pusha
jl
mov
inc
outsl
inc
and
icebp
mov
shl
test
xchg
mov
push
cmpsb
arpl
mov
mov
pop
or
pop
cwtl
lock
jbe
jmp
fnstenv
arpl
or
push
sahf
jg
scas
mov
sbb
push
icebp
sbb
stos
inc
mov
fdivr
adc
popf
inc
pop
fstpt
stc
mov
push
mov
bnd
loop
inc
sbbb
mov
pop
push
aaa
clc
daa
sub
out
lds
adc
inc
test
xor
adc
jno
add
cli
insl
and
lahf
aad
xor
pop
mov
test
lods
jo
push
sub
push
data16
or
test
cmp
dec
cld
mov
rorb
into
js
gs
mov
xchg
or
and
lahf
push
scas
out
inc
xor
mov
mov
ljmp
inc
xor
in
fiaddl
adc
jg
cs
push
inc
repnz
pop
popf
ret
fstps
leave
icebp
or
mov
dec
or
enter
lea
push
lods
mov
inc
pop
out
mov
adc
dec
xchg
xchg
push
add
ret
xor
cld
pop
dec
shrl
mov
aad
push
xchg
fidivrl
lcall
cli
addb
pushf
xchg
sbb
and
jg
test
mov
cltd
and
or
jnp
aas
scas
arpl
out
pop
add
mov
mov
lcall
jmp
out
ja
hlt
idivb
pop
int3
lcall
movsl
dec
dec
repnz
mov
jns
mov
push
in
cmpsb
dec
inc
nop
addr16
sti
add
sub
jae
sub
rcrl
es
sti
push
push
adc
xchg
adc
aam
mov
cltd
xor
mov
sbb
mov
dec
add
jmp
inc
sti
pop
cmp
cmp
sbbb
add
push
clc
sbb
inc
popf
mov
jb
fs
stos
push
inc
int3
les
mov
adcb
pop
dec
push
test
xor
pop
cld
into
daa
sbb
sbb
add
cwtl
jecxz
aad
pop
sahf
ds
adc
jge
iret
dec
pop
lods
fsts
rol
mov
orb
xor
stc
in
scas
movsb
dec
inc
or
test
cmpsb
ljmp
popf
mov
mov
scas
mov
push
or
mov
imul
fstps
dec
hlt
cmp
in
adc
and
bound
mov
cs
inc
inc
ret
xlat
jmp
subb
pop
cmp
insb
lock
pop
cmpsb
in
int3
adc
bound
pop
push
sbb
rcll
shll
stc
mov
mov
ja
push
pop
adc
xor
ret
jbe
mov
int3
dec
jp
arpl
lock
mov
push
push
rol
cli
xchg
cmpsl
mov
negb
push
cld
and
sbb
sbb
dec
xchg
mov
out
leave
jo
inc
shl
cmpsb
fdivrl
and
cmpsl
lahf
cwtl
fisubrs
jge
outsl
cld
jo
push
test
cld
stos
repz
out
xchg
lea
es
ljmp
xor
aas
dec
jmp
fcom
dec
dec
call
in
or
push
jp
dec
rol
test
and
mov
comiss
subb
sti
daa
push
call
xchg
in
int3
pop
mov
shll
fstps
sbb
sbb
xlat
mov
mov
mov
sbb
cmp
std
das
fcmove
cmp
dec
ja
push
mov
test
lret
ret
shr
gs
nop
stos
ljmp
cmp
adc
hlt
jmp
cmpsb
mov
mov
sub
inc
mov
movsl
mov
push
ret
cmp
loop
scas
jecxz
rcl
add
testl
sbb
addl
out
scas
pop
sub
enter
rcll
xchg
jb
sbb
adc
add
inc
lahf
adc
nop
or
loope
lock
aas
loope
popf
add
jmp
mov
mov
loop
and
xchg
test
lret
add
fsubrl
lcall
setg
jns
mov
mov
sub
pop
out
or
and
push
roll
fisubs
adc
push
cmpsl
push
lods
pop
mov
mov
loopne
xchg
dec
bnd
nop
popf
mov
in
out
pop
sub
jp
push
js
dec
sub
cmp
or
sbbb
sbb
mov
mov
mov
rcr
push
and
leave
jnp
push
fcom
push
add
repnz
pop
adc
push
fldt
mov
pop
and
mov
or
in
push
test
add
cld
mov
mov
mov
mov
adc
ljmp
icebp
xchg
pop
pushf
in
add
xlat
mov
mov
adcl
sbb
jp
repz
pop
pushf
lea
fnsave
xchg
scas
jno
or
or
pop
sub
nop
push
test
lds
xor
into
pop
roll
cld
cmpsl
rolb
mov
cli
addr16
nop
nop
xchg
xchg
xor
addr16
clc
loope
push
ja
fmulp
gs
cli
pop
cli
shll
in
xor
xchg
fwait
jbe
or
mov
pop
mov
and
aad
div
sbb
mov
push
daa
addr16
cld
cmp
shll
popf
add
mov
ds
mov
sbb
push
mov
push
add
or
jno
int
insb
xorb
sub
sbb
mov
popf
inc
mov
or
push
shl
mov
ja
push
lret
xor
cmp
lds
sbb
dec
mov
aad
fbld
xlat
imul
nop
testb
lahf
jge
incl
in
add
out
add
mov
inc
or
test
rsm
or
jl
call
clc
mov
mov
pop
lds
sub
mov
push
out
insl
pop
nop
scas
mov
ss
sbb
mov
or
pop
add
aas
jle
lret
xor
leave
lods
push
sub
sti
push
mov
inc
outsl
push
lea
daa
test
iret
cmp
lods
iret
sbb
stos
das
into
cs
pushf
sub
lret
stc
fldlg2
cwtl
subl
clc
dec
dec
js
out
outsl
fisubrs
dec
adc
push
or
mov
js
sub
pop
insb
in
insb
jp
push
jle
push
push
or
sbb
test
and
pop
cmp
dec
sbb
xlat
jns
add
push
mov
pop
pop
inc
mov
jbe
xchg
pop
bound
xor
dec
xor
pop
pusha
ret
push
popf
ja
incb
jb
or
movsl
cmc
mov
mov
cmp
adc
sub
ror
popf
mov
pusha
push
in
add
or
mov
dec
insl
ret
and
mov
shr
or
pop
test
jns
mov
add
mov
inc
hlt
xchg
mov
add
mov
pop
dec
push
mov
and
aam
sub
outsb
dec
add
lcall
mov
movsl
je
shlb
stos
lahf
pop
pop
sub
aam
ret
jl
adc
cmp
and
fiaddl
sarl
jne
jge
ss
daa
dec
mov
fidivs
out
cltd
fsubl
or
xor
mov
rorb
mov
adc
lcall
cmc
mov
jne
in
in
call
jo
icebp
xchg
jmp
in
jo
into
push
xchg
jno,pt
and
pop
xor
xor
movsl
mov
pop
mov
popa
popf
mov
int
cmc
lret
sahf
jge
fstpt
jge
stos
sbb
lcall
mov
daa
xor
test
and
cmp
mov
mov
xor
sub
aam
or
sbb
mov
lahf
ds
imul
pop
cmpsl
lret
mov
pushf
add
adc
insl
pop
sub
xchg
inc
mov
push
mov
lcall
enter
or
mov
stos
popf
xchg
xlat
repnz
pusha
jg
sarb
mov
sysexit
inc
dec
loope
mov
aas
out
dec
fnsave
popa
rcll
xor
and
push
jg
test
ret
and
adc
sub
test
push
jbe
ret
push
pop
cmp
jl
in
pop
gs
adc
lds
lret
fwait
dec
jo
dec
jb
push
ret
push
jo
mov
mov
inc
sti
insl
sub
fs
push
adc
sub
and
dec
mov
pop
pusha
scas
mov
sub
notb
mov
mov
xor
sbb
fmull
push
cltd
mov
inc
bnd
mov
clc
popa
xor
mov
lea
adcb
xchg
lahf
pop
mov
movsb
lock
pop
test
xor
cmp
outsl
jge
xchg
and
jb
in
fidivrl
out
cmp
xchg
or
sub
xor
jno
rorb
cmp
push
sbb
aam
inc
adc
stos
stos
mov
jecxz
ret
dec
or
lret
rcll
xchg
or
aam
lcall
icebp
push
sbb
fs
into
inc
dec
in
faddl
lret
in
mov
mov
mov
dec
cmp
add
lret
mov
call
pusha
lea
les
push
push
cs
mov
jae
ret
push
xchg
aad
and
ljmp
sbb
aas
ret
mov
or
es
ss
sub
xor
xlat
and
push
fwait
inc
and
imull
dec
inc
ja
rcrl
cli
pop
in
mov
xor
into
add
pop
dec
jecxz
jb
dec
jg
adc
inc
add
loope
mov
leave
iret
sub
mov
clc
lods
not
xchg
fildll
push
dec
int
xor
lahf
mov
xor
add
je
or
sahf
outsb
lea
std
sbb
mov
push
inc
pushf
repnz
cwtl
push
inc
mov
xchg
pushl
fbstp
fsts
dec
cs
jle
mov
imul
rolb
pop
xor
and
jp
push
ljmp
sbb
cmp
jmp
sbb
xor
xlat
jg
sti
xor
sub
jnp
xchg
outsl
cmc
pop
pop
jle
outsb
shll
in
pop
cmp
out
or
jmp
sti
les
and
mov
or
in
mov
jns
push
stc
test
dec
lods
sbb
or
adc
cld
cmp
inc
rcll
aaa
or
xorb
sbb
andl
inc
addr16
and
mov
shrl
and
sbb
fwait
popa
arpl
sbb
leave
js
nop
and
mov
jecxz
lods
cmpsl
or
xchg
fidivrs
repnz
xor
gs
push
sti
and
push
or
insb
cli
xchg
xor
mov
xor
cs
imul
test
xor
xchg
add
in
and
jb
sbbl
mov
xlat
sub
rcrl
or
loop
mov
sub
ficomps
loop
mov
call
cmp
shrb
sbb
adc
stos
loope
test
inc
fimull
xchg
mov
lahf
xchg
dec
sub
or
inc
stos
mov
stos
int
cmpsb
ret
sbb
push
add
mov
jge
lahf
cmp
and
adc
into
into
cmp
ss
cmp
push
rorl
jo
aam
sti
jno
js
cmp
ja
nop
into
mov
in
add
movsb
es
pushf
pop
sbb
outsb
xchg
mov
push
sbb
cltd
pop
popf
inc
arpl
pop
shl
and
mov
jg
ret
dec
ret
not
sub
pop
shl
fwait
jae
in
leave
inc
jp
jae
stc
mov
in
mov
std
sbb
fidivrs
mov
pand
cmpl
icebp
cmp
loopne
lret
les
pop
js
or
adc
inc
test
xor
push
mov
push
dec
sub
icebp
lods
mov
call
test
pop
stos
repnz
lods
nop
and
addr16
fsub
mov
fsubr
xorb
ljmp
cmova
cs
js
mov
mov
xor
pop
inc
gs
ja
dec
mov
lret
test
xchg
sbb
inc
outsb
int
cs
into
loope
xor
ds
hlt
and
jae
push
les
fnstcw
push
pop
jbe
mov
ficompl
dec
hlt
in
mov
push
cmpsb
sbb
cmp
cmp
shll
stos
addr16
adc
fiadds
inc
jae
mov
jne
push
pop
fbstp
sub
outsl
lods
or
adc
pop
fidivrs
and
aas
lahf
xchg
mov
pop
icebp
sbbb
pusha
mov
pushf
std
mov
ss
nop
out
cs
xor
hlt
add
xchg
inc
insb
lods
test
movl
out
popa
outsb
pop
ret
andl
ljmp
xchg
out
bound
clc
xor
and
mov
pop
aaa
loope
ret
clc
mov
lock
loop
jecxz
ljmp
testb
push
dec
out
adc
cwtl
in
subb
jae
xchg
cli
push
std
das
mov
mov
mov
cmp
in
or
xchg
call
inc
pop
test
in
push
shlb
or
aam
js
sbb
cld
data16
insb
mov
ret
sub
mov
dec
push
cli
js
add
js
orl
add
call
cwtl
mov
mov
dec
sbbb
mov
cmp
in
xchg
in
fdiv
test
pop
mov
and
cmc
mov
cmpl
push
ffree
adc
inc
xlat
mov
std
lock
nop
mov
inc
push
or
data16
push
mov
fcmovnbe
pop
aaa
cs
js
dec
cmp
shl
pop
mov
sub
popa
inc
sub
xor
cltd
test
xor
xchg
adc
inc
mov
lods
or
xorl
pop
mov
push
popf
mov
jnp
nop
ljmp
test
stos
lds
sbb
mov
inc
cmp
lahf
pushl
mov
stos
fsubl
and
jmp
movsb
mov
cmp
xor
loope
mov
mov
imul
imul
fsubr
pop
aas
rcll
dec
imul
pop
inc
cmp
daa
test
inc
jle
or
cmc
cmp
inc
ffreep
jmp
lods
cmpsb
pop
pop
and
and
xchg
das
js
sub
pop
pop
adc
sahf
jge
std
jg
jbe
jae
adc
fsin
scas
in
push
xchg
dec
ret
push
mulb
inc
out
in
xor
fbstp
push
jmp
xchg
push
dec
hlt
dec
add
or
pushf
inc
adc
outsb
scas
lds
add
xor
cmc
test
mov
push
hlt
xor
mov
les
ficoml
jb
add
pop
mov
clc
outsb
jne
fistpll
push
repz
sbb
push
in
sub
fildll
mov
xorb
cli
pusha
cmc
mov
jae
stc
pushf
jns
jnp
fbld
jns
loope
cmpsl
loopne
sub
icebp
xchg
adc
cmp
jmp
and
mov
mov
icebp
mov
aas
cmc
fwait
lds
push
or
test
push
enter
dec
xchg
pop
adc
ret
add
push
sub
and
push
repnz
pop
sarb
stc
or
jb
gs
pushf
cmpsb
into
imul
loopne
xor
and
bound
mov
jno
cmp
mov
loopne
pusha
fcomp
sbb
pop
das
or
xchg
imul
mov
inc
cmpsb
cli
fisubl
iret
mov
pop
mov
imul
scas
add
push
stc
mov
leave
inc
add
xor
cmc
cmpsl
test
cmpsb
out
push
mov
arpl
mov
mov
nop
push
sub
pop
or
aad
add
xchg
sbb
les
or
lds
movsb
inc
inc
sti
xor
leave
shrb
into
dec
int
mov
cltd
or
das
shll
adc
ss
inc
pop
dec
push
data16
stos
xchg
lret
pop
cltd
inc
leave
xchg
outsl
sar
pop
push
imul
jp
jge
inc
or
mov
rcl
pop
sbb
insl
negl
loop
std
neg
mov
gs
push
or
jecxz
xchg
adc
dec
int
scas
aas
imul
pop
push
stos
mov
cmc
dec
inc
sarl
add
out
jbe
sub
adc
test
jecxz
out
lods
pop
cmpsb
inc
daa
mov
pop
xor
fcompl
push
mov
mov
outsl
loope
out
push
test
jno
in
popf
repnz
pop
mov
push
xchg
xor
cmp
cld
test
test
and
push
adc
je
push
mov
jne
pop
stos
push
dec
fsubrs
pop
pop
orb
jns
shll
into
xor
inc
ds
imul
aaa
movsb
clc
les
imul
aas
movsl
add
jne
stos
xchg
dec
lahf
jno
jg
pop
imul
jmp
test
call
adc
push
mov
lcall
lret
outsl
aad
lret
fwait
inc
cmc
sarb
mov
mov
test
xchg
jae,pn
fidivrs
pop
hlt
cmc
xor
subb
sahf
push
inc
addr16
jle
push
push
ret
and
lds
sub
int
aas
jp
cwtl
inc
sub
faddl
mov
bound
or
pop
mov
jmp
or
rcrl
fwait
mov
push
scas
test
insb
sbb
inc
popa
mov
mov
fstpt
or
mov
daa
fwait
xchg
pushl
loop
lea
fsubrl
cmp
int
aam
sub
ljmp
aas
sbb
mov
in
pop
sbb
lret
and
in
fstps
xchg
mov
or
mov
pop
enter
push
ss
rep
sub
stos
push
xchg
js
in
movsl
dec
add
mov
mov
nop
inc
test
lods
int
out
mov
push
or
das
push
lods
repz
mov
popa
lret
and
aad
push
in
pop
data16
sub
pop
add
mov
in
lret
xchg
xchg
add
xor
inc
mov
rorl
lock
pop
test
push
stc
or
pop
mov
popa
cmp
ja
inc
xchg
pop
fistpll
lret
stos
imull
push
or
dec
fsubrl
push
lret
mov
mov
cmpsl
pop
cmp
inc
push
pop
cmp
push
imul
loop
dec
cmp
cwtl
xlat
pop
and
cld
mov
loopne
je
push
inc
shrb
jno
mov
loop
add
xor
mov
repnz
lahf
and
in
push
ret
jno
cmpl
inc
in
and
enter
pop
orb
jmp
pop
push
mov
pop
int3
push
movsb
movsl
dec
outsl
mov
push
loope
outsl
cmpsb
cmp
and
mov
mov
cld
mov
mov
mov
shlb
pushf
push
nop
push
nop
push
cli
in
jo
cmpb
mov
jge
aad
shld
mov
adc
into
and
lock
ljmp
jnp
xchg
testl
mov
mov
iret
jbe
xchg
int3
or
cs
jmp
or
mov
loopne
jecxz
inc
xchg
jge
js
fs
movsl
pop
mov
mov
rcl
inc
add
imul
cli
outsb
aaa
movups
adc
push
xchg
iret
ds
mov
loopne
mov
int3
push
bound
xor
mov
lods
out
roll
push
jmp
fsubs
push
xchg
pop
xchg
pop
shll
cli
adc
mov
inc
push
in
imul
leave
dec
mov
adc
xor
lods
cwtl
add
sti
out
dec
inc
dec
xor
mov
aas
ja
xchg
dec
sbb
inc
test
push
mov
push
push
cwtl
cmp
sbbb
sahf
pop
push
pop
pop
add
or
jns
pop
mov
jg
jb
push
xchg
cld
lods
push
cld
mov
jge
jge
and
jae
subb
add
pop
ficompl
les
out
add
enter
mov
rcll
test
sbb
inc
mov
mov
cmp
pop
iret
push
sti
xlat
mov
dec
pop
in
call
push
cld
push
loope
rorb
mov
mov
adc
repnz
test
repz
out
adc
aaa
std
fs
pusha
dec
call
aas
xor
mov
xor
scas
icebp
out
aas
inc
lock
test
insl
mov
test
jge
aad
push
pop
mov
fiadds
inc
out
ret
aam
stos
stos
adc
mov
daa
out
stos
outsl
bound
mov
and
and
jo
std
pop
out
outsl
adc
add
jl
lods
xor
mov
sub
stc
imul
push
jae
out
lret
repnz
xor
sbb
lds
aad
mov
sbb
inc
outsl
cmp
lods
inc
sbb
hlt
add
icebp
adc
test
int
fdiv
dec
sub
dec
cwtl
cmp
sbb
jmp
or
rolb
daa
int3
hlt
pop
out
pop
add
cmpsb
adc
add
push
pop
idiv
das
jecxz
cli
daa
repnz
ja
adcl
sbb
icebp
inc
div
shlb
jp
pop
movsw
fnstsw
push
fwait
add
dec
xchg
pop
jecxz
or
fldcw
jge
jb
shl
cmpsl
adc
cli
scas
dec
outsl
es
xchg
adc
pop
jle
imul
sarl
jno
cmp
push
cltd
ficompl
cmp
sub
adc
aaa
dec
ljmp
and
test
cmp
test
flds
pop
sbb
add
aas
xchg
in
sahf
popa
pop
fstp
mov
nop
aad
arpl
xor
ret
cmp
dec
jl
fucomip
movsl
shl
or
es
sbb
dec
xchg
cs
stc
cwtl
xlat
lcall
adc
movsb
mov
or
ds
mov
mov
mov
lods
mov
adc
adc
mov
out
in
and
inc
jno
inc
stc
mov
subb
cmp
gs
clc
jno
add
filds
cmp
sbb
jmp
or
pop
jo
sbb
inc
cmc
lret
shr
das
sar
sub
push
lods
imul
sbb
adc
dec
std
nop
add
out
fimuls
je
in
sahf
dec
push
pop
push
pusha
cmc
cmp
mov
xor
cs
loope
mov
call
cmp
pop
xor
sub
in
insl
nop
imul
outsl
or
lea
icebp
cmc
stc
or
push
enter
adc
xchg
lea
outsl
mov
into
xchg
out
aad
inc
add
xor
sub
mov
inc
mov
std
or
iret
mov
xchg
mov
push
inc
add
lock
out
in
add
rclb
mov
fs
out
call
sub
push
xor
xchg
out
iret
lret
jns
ret
mov
pop
push
xor
jne
roll
out
push
pop
mov
addr16
cwtl
and
push
imul
outsl
insl
xchg
mov
js
sbb
insl
cli
movd
aad
xchg
cltd
cmp
jo
addr16
push
addr16
xor
jle
mov
jg
push
mov
outsl
mov
outsl
jns
jecxz
push
insl
into
scas
dec
adc
add
sarb
push
out
jecxz
dec
enter
mov
shr
loop
mov
or
cmp
shl
xor
in
inc
les
addr16
fs
orl
cs
sub
ljmp
mov
lods
loope
adc
or
dec
ret
std
pusha
lock
sub
sbb
lcall
mov
adc
mov
mov
fsubl
int
mov
fs
aad
aad
cmp
cs
stos
sbb
mov
mov
pop
mov
in
mov
out
jl
cmpsl
cli
call
in
jbe
dec
mov
cltd
je
test
push
jne
bnd
lret
sbb
inc
out
pop
rol
subb
sbb
push
pop
mov
pop
xchg
js
pop
mov
femms
mov
add
sbb
movsl
cmp
and
jle
cmp
sub
mov
xor
insb
mov
add
mov
and
jge
xchg
push
dec
aas
out
repnz
pusha
lahf
jge
in
cld
jmp
push
push
popa
lods
adc
imulb
jmp
lea
mov
popf
scas
mov
mov
cwtl
mov
and
xchg
inc
fdivs
cmp
int3
xor
popa
sub
xchg
imul
add
in
in
leave
aad
clc
mov
lahf
pop
cwtl
scas
iret
fiaddl
fsts
mov
fwait
mov
or
idivl
cmpsb
push
pop
mov
jb
cmpsl
popa
push
dec
xlat
loop
loopne
jnp
es
mov
jg
lds
inc
cltd
aad
sub
js
mov
or
popf
testb
mov
push
push
mov
movsb
outsb
insb
xor
aaa
lods
js
sahf
loopne
lods
stc
push
fdivs
pop
in
stos
lahf
or
pop
sbb
sub
cli
xchg
imull
push
int3
add
test
jge
bound
push
cld
out
xor
push
and
mov
adc
ljmp
data16
repz
pop
out
mov
add
push
add
aam
iret
and
loop
mov
idiv
sub
imul
inc
mov
or
stos
inc
add
lods
inc
lahf
add
out
popa
imul
stos
cmc
ds
faddp
cmp
sbb
mov
dec
add
xchg
sub
lods
push
fmul
mov
pop
test
test
or
mov
xchg
cmpsb
lret
xor
add
arpl
imul
push
loopne
icebp
or
ss
fldl
hlt
mov
and
and
mov
push
push
mov
and
inc
cld
mov
inc
ljmp
inc
push
arpl
mov
mov
inc
call
push
les
and
push
stos
in
aas
mov
mov
jno
fiaddl
mov
or
add
cli
in
inc
addr16
ss
push
dec
push
lods
add
das
cmc
jnp
inc
fmulp
outsl
inc
insl
sub
pop
xchg
leave
jae
imul
fdiv
ja
cmp
push
push
and
addl
aaa
out
jmp
testb
movsb
xchg
xchg
scas
out
scas
pop
add
ljmp
nop
sbbl
ret
xchg
es
outsb
and
jge
les
pop
fldl
push
je
pop
pop
scas
aam
pushf
loop
nop
mov
std
add
imul
or
int
cmp
sub
in
fistpl
and
arpl
fwait
mov
xchg
cmp
xor
fidivrs
sub
std
mov
mov
push
fnstenv
out
sub
stc
pop
dec
sbb
outsl
pop
mov
lods
push
xlat
xchg
pop
insl
aas
out
rclb
mov
push
cmp
addl
jne
shll
movsl
mov
jmp
in
or
adc
and
daa
mov
sub
push
dec
aaa
adc
arpl
orl
inc
subl
sbb
push
push
daa
adc
mov
rcrb
dec
aas
xchg
and
cltd
fisubs
pop
or
inc
iret
or
pusha
jb
cwtl
int
or
lock
cmp
lea
out
dec
arpl
leave
xchg
popf
xchg
jp
and
fildll
cmc
push
add
or
ret
arpl
cmpsb
faddl
rclb
xor
dec
outsb
out
jbe
std
imul
mov
xchg
dec
nop
scas
ss
int3
into
cwtl
incl
add
fld1
sbb
cmp
sti
push
ljmp
mov
xchg
pop
fldlg2
mov
insl
call
dec
pusha
pop
xchg
sbb
push
test
cmp
jno
stc
sub
int
jb
push
in
pop
scas
call
push
std
xchg
pop
fistpl
inc
sbb
adc
in
adc
or
mov
mov
inc
mov
add
pop
in
mov
mov
es
es
lods
add
add
or
mov
pop
in
sbb
jne
lahf
mov
pop
mov
add
out
stc
mov
out
mov
pusha
negb
cld
clc
add
in
jae
mov
adc
jmp
rolb
adc
pop
es
xchg
jne
jg
dec
test
enter
ds
loopne
aad
icebp
repnz
mov
pop
nop
daa
out
mov
sarl
dec
xor
test
movb
das
movsl
sbbl
ret
out
shr
mov
sub
mov
rolb
or
xchg
pop
sbb
adc
mov
jmp
repnz
xchg
sub
or
aam
icebp
ljmp
push
loopne
mov
and
rolb
adc
pop
repz
inc
cs
add
sbb
cmp
cmp
outsb
int3
xchg
add
push
pushf
dec
xor
pop
cld
loopne
mov
cltd
nop
xor
stc
add
daa
enter
dec
adc
push
pop
mov
jecxz
sub
movsb
push
push
daa
insl
sbb
inc
pop
movsl
and
push
inc
push
in
vpsrld
popf
mov
outsl
sarb
ss
sub
imul
ret
push
into
jmp
data16
inc
in
pop
push
pop
lods
imul
jle
test
cmp
xchg
push
loop
sub
ljmp
jb
lea
jbe
int
aaa
jmp
xlat
je
inc
outsb
inc
pop
stos
imulb
sbb
fisttpll
jb
repnz
aam
mov
inc
pop
movb
push
jle
cmpsb
push
jo
fldcw
add
adc
lahf
jmp
aaa
adc
inc
cmp
push
mov
out
push
imul
sub
jl
mov
inc
and
data16
sub
pop
adc
iret
xor
and
test
ret
ja
mov
fistps
dec
xchg
das
xor
cli
loopne
scas
push
adc
cmp
push
roll
sbb
mov
dec
dec
out
imul
mov
jb
jne
test
sbb
loope
jl
push
sbb
scas
mov
jl
lret
push
mov
je
jnp
dec
pop
xchg
fisttps
rcrl
mov
gs
and
mov
fucomi
ret
push
cwtl
dec
or
mov
pop
or
sbb
push
jl
or
scas
sbb
pop
jae
stos
xor
add
testb
add
xchg
stc
outsl
xchg
orb
xor
push
inc
sub
jmp
mov
cmpsl
dec
imul
imul
lret
call
push
sub
cld
mov
and
call
loop
or
and
cld
jl
fucomp
mov
popf
mov
inc
add
ljmp
jae
sub
and
pop
adc
fadds
jmp
clc
mov
jns
mov
dec
push
in
xchg
add
adc
lds
int
sbb
push
jb
popf
sahf
out
pop
adc
xor
jmp
xchg
das
std
lock
or
inc
push
pushl
adcb
sub
call
outsl
pop
lret
divb
shlb
fwait
lret
push
sbb
jns
fidivl
mov
jbe
sarb
js
sarl
fcmove
leave
mov
in
inc
popf
dec
sbb
test
loop
mov
adc
push
data16
sbb
push
inc
lcall
adc
fs
xchg
fdivp
in
jmp
push
adc
ret
sub
xor
and
jmp
ljmp
in
js
pushf
pop
mov
mov
cltd
in
cwtl
je
test
aad
cltd
push
cli
inc
sti
push
dec
pop
add
add
and
jmp
lock
cmc
gs
mov
inc
jl
test
pop
mov
fs
mov
xchg
gs
pop
pushf
xorb
dec
cld
aas
jae
mov
push
inc
pusha
orb
mov
adc
nop
aas
sub
and
sub
push
not
adc
lds
insb
in
mov
fsubs
cmpb
es
hlt
outsl
push
push
sbb
and
test
mov
or
push
ret
aad
hlt
push
movsb
mov
jecxz
fmull
jbe
add
lcall
and
xchg
nop
shlb
insl
inc
mov
lret
pusha
push
mov
aad
out
ret
push
into
sbb
movsb
popa
cmpsb
add
or
push
or
insl
xchg
cmp
jmp
adc
call
xchg
sub
push
or
and
push
xor
mov
out
cmp
and
movsb
int
pop
addr16
sub
fsubs
fdivs
popf
adc
insl
out
out
mov
iret
daa
mov
movsb
sbb
je
in
pop
call
fxch
or
cld
leave
clc
testl
xor
add
adc
cmp
lret
out
sub
cmc
sub
sbb
mov
enter
mov
xlat
icebp
test
icebp
sub
adc
fildl
sbb
cltd
xchg
std
push
push
inc
out
sbb
xchg
ljmp
shll
xor
sub
push
fcoml
jl
dec
mov
es
adc
dec
clc
mov
cmp
lea
xor
pop
jb
testl
lock
lret
dec
aam
cmp
lods
xchg
mov
lods
pushf
mov
aad
sbb
cmp
cltd
sub
imul
push
jno
jne
sub
dec
dec
push
push
das
pop
cmpsb
jmp
pand
insb
adc
mov
adc
xchg
test
test
in
loopne
sarb
mov
fsubr
idivl
cltd
add
add
jg
mov
js
jns
dec
jo
mov
pop
pop
xchg
jae
xor
out
cwtl
fcoml
push
cmp
test
xor
negb
xchg
lret
subb
mov
in
lret
stos
into
test
sti
mov
pop
add
jmp
sbb
cmpb
scas
insb
push
loopne
push
sarl
cmpsb
add
je
dec
cmp
adc
or
and
movq
add
jge
mov
in
cwtl
in
jnp
jle
fbstp
mov
bnd
aad
mov
rcrb
xor
popl
pop
pop
pop
hlt
mov
mul
cmp
dec
out
pushf
pop
jp
sbb
sti
cli
pop
inc
icebp
stc
mov
jb,pt
or
lock
add
jnp
cltd
push
xor
jbe
jno
iret
cmp
push
icebp
aaa
mulb
jmp
dec
lcall
stc
push
dec
sub
add
push
pop
push
xchg
jo,pt
shlb
std
push
movsb
sub
es
test
jmp
int3
ja
inc
xchg
cmp
push
lods
test
lods
aam
dec
mov
push
nop
cltd
push
xchg
hlt
jp
cmp
push
cwtl
dec
icebp
aam
sub
xchg
int3
xor
push
push
inc
mov
pop
xchg
movsb
push
xor
or
xchg
mov
sub
inc
loope
imul
xchg
test
enter
push
xor
pop
jmp
xor
test
inc
adcb
clc
mov
pop
pop
or
lcall
imul
push
sub
add
xchg
sbb
outsb
je
dec
add
enter
mov
insb
dec
add
mov
xorb
hlt
mov
lcall
je
ret
sbb
icebp
or
cmpl
iret
adc
rol
sbb
xlat
mov
xchg
mov
sub
repz
xchg
mull
push
mov
fnstenv
inc
addl
jne
jmp
inc
fwait
adc
push
fbld
clc
js
inc
aas
jmp
lret
pop
inc
push
pop
pop
mov
ds
dec
pop
pop
loop
int3
mov
cmc
mov
testl
mov
ja
iret
push
mov
fldt
add
inc
outsl
jnp
xor
xor
stos
sbb
repz
imul
pop
sub
or
sub
mov
loopne
mov
adc
test
bound
xchg
pop
jnp
cli
jle
push
pop
mov
mov
repz
jle
cmpsl
fstpt
je
dec
fstl
mov
push
jo
dec
iret
mov
cmp
pop
and
pop
out
dec
leave
bound
pop
cwtl
in
pop
jb
mov
xchg
enter
pop
mov
adc
fidivs
xchg
fmulp
call
ljmp
cli
fbstp
xchg
stc
dec
lcall
jns
inc
stos
sbb
icebp
divb
cmp
or
repnz
xchg
jnp
test
adcl
sub
hlt
sti
rorb
dec
sub
or
ja
push
add
jg
dec
pop
dec
jb
inc
popf
sub
iret
push
jnp
test
outsb
mov
cmpsb
fimuls
dec
stos
and
dec
cmpsb
xchg
xchg
sar
incl
and
out
lahf
or
insl
dec
pop
fsubr
lcall
leave
bound
pusha
adc
fldln2
mov
and
or
imul
mulb
in
int
cs
inc
les
loopne
add
popf
pop
push
cltd
jp
cli
mov
in
daa
fwait
mov
lods
dec
lds
push
test
push
scas
sbb
mov
and
mov
popf
jae
mov
inc
add
push
xchg
sti
mov
jp
cltd
int
inc
sub
jecxz
ds
or
push
push
add
dec
mov
or
xchg
hlt
pop
int3
popa
mov
es
xchg
test
sub
push
fisttpl
add
xchg
xor
stos
fwait
ret
movsb
xor
stc
fs
sub
jnp
out
mov
fs
adc
jl
in
aaa
sub
inc
or
xlat
jge
std
repnz
adc
imul
je
and
jns
mov
addb
jo
lea
and
pushl
test
mov
cmp
mov
push
bound
cld
imul
cmp
xlat
cmp
mov
inc
xor
lods
cs
xor
jne
xchg
in
ja
loop
pop
mov
add
leave
xchg
shlb
mov
aam
pop
insl
jle
cmp
out
lods
loopne
test
push
jmp
lahf
paddusb
push
cmp
fcmovne
outsl
or
and
test
xor
das
pop
xlat
adc
pop
test
xlat
lcall
cs
xor
inc
mov
mov
lds
push
adc
out
sbb
or
dec
lahf
fldcw
cmp
and
xor
sbb
mov
push
inc
lcall
mov
ss
xor
lock
push
test
pop
sbbb
cmp
add
jmp
int
repz
cmp
mov
test
sub
lds
popa
imul
movsb
mov
xchg
add
xor
popf
adc
lds
fdivs
mov
mov
int3
sbb
adc
loope
shrb
fnsave
cltd
shll
insb
cltd
inc
loopne
lcall
push
xchg
lods
inc
sub
in
nop
jecxz
dec
inc
cs
cmp
jne
dec
mov
jno
testb
popf
lds
js
xchg
mov
dec
ljmp
cmp
and
cltd
mov
jns
xchg
inc
ret
shrl
sti
adc
jo
inc
add
fwait
je
or
push
data16
imul
out
mov
add
mov
xchg
sbb
cli
jbe
jnp
or
gs
cmpsb
subl
orl
push
out
imul
mov
lock
mov
test
and
out
bound
jmp
push
xorb
into
xchg
rclb
js
in
sub
lea
mov
dec
fcmovnbe
ljmp
push
scas
push
xor
or
jo
mov
enter
xchg
cmp
shl
xchg
mov
push
jae
push
scas
cmp
xchg
lahf
fisubrl
push
xchg
adc
sbb
or
add
xchg
add
sbb
dec
subb
fs
lock
sbb
int3
sub
and
xor
fadds
hlt
ret
mov
cld
ret
cmc
sub
cmp
out
or
sub
push
add
loop
lret
xchg
jg,pn
mov
repnz
pop
xchg
add
imul
fisubrs
sub
out
fwait
sub
or
dec
jne
movq
pop
popf
ds
lods
jle
add
mov
stos
sbb
int3
pop
dec
push
in
shlb
mov
pop
mov
call
ss
lods
mov
xchg
ljmp
pop
std
inc
mov
inc
mov
int
mov
repnz
sbb
sbb
push
dec
inc
inc
pushf
fstps
adc
xchg
adc
sub
imul
sbb
sbb
flds
fwait
dec
mov
movsb
repz
pop
es
cmp
clc
outsl
aad
out
dec
sub
fcmove
pusha
cmpsb
cmp
push
push
mov
popf
push
mov
xor
inc
sarb
push
fwait
shrl
ss
xchg
pop
cs
out
popf
popf
sub
dec
out
xor
push
push
dec
mov
sbb
push
imull
test
dec
addl
xchg
int3
fcoml
ret
shr
jmp
mov
sahf
ss
ss
iret
and
ljmp
mov
les
data16
shr
outsl
add
adc
push
es
jo
cli
mov
and
ja
out
mov
sahf
jno
lahf
and
xlat
adc
stos
ds
mov
lods
mov
mov
es
jge
into
add
jo
imulb
cmpsl
mov
inc
push
cli
movsl
mov
inc
jg
les
pop
sbb
iret
xchg
jl
mov
enter
push
add
aas
lea
inc
inc
call
cmp
mov
lret
test
sti
add
mov
loopne
adc
rclb
fstl
pop
jae
inc
xchg
push
xchg
jns
mov
call
inc
mov
xor
sub
sbb
arpl
jg
and
sbb
mov
ds
mov
jb
out
shlb
jns
cwtl
pop
jae
andl
cmpsl
inc
xor
pop
push
mov
sahf
xor
fcoml
cli
dec
and
loope
push
and
mov
ss
mov
fimuls
jg
xchg
aam
movhps
sub
mov
cwtl
movsl
xchg
push
inc
or
cmp
rcr
add
icebp
bound
ds
jle
dec
ror
jb
movsb
std
push
pop
sahf
mov
inc
mov
mov
rol
jl
stos
cmc
in
sbb
xor
aas
cmpsb
or
out
sbb
loope
test
iret
test
inc
jae
xchg
cs
dec
mov
enter
mov
shrb
mov
in
outsb
jecxz
push
or
mov
loop
sub
inc
call
call
xor
je
inc
and
xor
jecxz
sbb
int
lret
pop
lret
out
pop
add
jns,pn
xor
push
cmp
sahf
or
stos
enter
mov
out
cmp
mov
out
imul
mov
mov
cli
in
jbe
mov
repnz
test
push
inc
mov
sbb
aaa
lret
sbb
or
negb
mov
inc
jmp
nop
and
push
aad
xchg
push
shl
lret
dec
fbstp
xchg
bound
push
movsl
pop
nop
xchg
adc
in
pop
push
add
call
pop
xchg
je
sbb
mov
and
std
lcall
push
je
jecxz
xchg
xchg
pushf
les
adc
push
cwtl
inc
push
cmp
daa
pop
pushf
out
jae
push
in
dec
call
stos
hlt
sarl
xchg
decl
mov
les
fmuls
and
add
xchg
fwait
sti
scas
and
pop
cli
dec
xchg
jp
out
add
leave
sub
jno
scas
test
inc
add
int
inc
mov
xchg
add
push
dec
sbb
mov
mov
jns
shlb
mov
insl
aad
sahf
inc
clc
cwtl
test
push
jne
inc
or
sub
mov
sbb
mov
bound
push
lret
inc
loopne
loope
dec
lock
lahf
dec
leave
pop
push
into
jno
lahf
adc
sub
fildll
movl
fidivrs
mov
cmp
adc
scas
fs
pop
xor
jecxz
and
cmp
sti
cld
inc
cld
call
outsb
stos
adc
adc
aam
in
sbbb
jo
es
stos
xchg
mov
lods
inc
fsubr
int3
dec
movsl
or
cmp
sbb
jmp
shr
cs
add
outsl
cmpsl
pop
xchg
mov
fwait
sub
push
bound
fcmovnbe
xor
cli
sbb
lock
jl
das
xchg
mov
xor
outsl
and
or
push
dec
sub
icebp
push
sbb
inc
imul
ficoml
dec
push
adc
xchg
or
imul
and
pusha
movb
hlt
negb
shr
cmp
pop
mov
scas
jl
adc
cltd
inc
scas
sub
sbb
test
pop
jp
rcrb
mov
dec
mov
sti
pop
sbb
inc
adc
in
add
hlt
repz
fs
cmp
adc
fmuls
mov
cmpsl
and
loopne
out
mov
push
push
cld
pop
cmp
js
in
lret
test
mov
ret
mov
inc
lock
in
xchg
insl
jbe
jo
fldt
std
add
jl
cmpsb
sbb
test
adcl
mov
insb
and
negl
dec
jne
shll
inc
fildl
imul
jns
dec
push
mov
imul
pop
mov
push
mov
out
nop
sbb
ds
mov
int
nop
ljmp
and
movsl
xor
test
push
push
mov
stos
test
out
inc
mov
int3
jb
push
mov
imul
std
scas
pop
into
nop
and
aaa
addl
scas
std
and
addb
jp
lods
or
fisubrs
xor
inc
jg
push
mov
sbbl
xor
in
or
jmp
push
rorb
addb
mov
mov
jo
mov
cmp
add
rorl
shll
lcall
xor
fbstp
into
cmpsb
out
adc
jae
insl
pop
add
cmp
mov
xchg
xchg
call
pusha
cltd
push
inc
out
dec
lahf
sbbl
popa
add
pop
cltd
inc
orb
add
and
jno
cmpsb
fs
mov
imul
cld
cmc
mov
mov
jecxz
scas
sub
cli
in
jle
push
mov
push
mov
shlb
push
hlt
fidivs
xor
lds
stos
pusha
int3
xchg
sbb
mov
cmpl
int
mov
push
scas
mov
mov
sbb
cmpsb
push
xlat
mov
jge
pusha
rolb
cmp
repnz
shll
inc
push
repz
idivb
cwtl
flds
jnp
in
lock
jo
push
stos
mov
adc
and
xor
mov
sahf
int3
mov
pop
dec
mov
ret
pop
mov
lods
and
daa
cld
test
cmc
push
mov
mov
adc
or
in
enter
aam
dec
loope
cmpsb
push
xchg
int3
mov
insl
xchg
push
sub
out
adc
mov
mov
ret
sub
fdivrl
vphaddubw
lcall
pop
sbb
test
xchg
jnp
inc
adc
stc
dec
stc
or
push
cmpsl
lcall
mov
fdecstp
dec
cmp
into
push
jnp
call
xor
mov
fcmovnbe
fisubrs
sub
pop
rcrl
mov
cmp
aas
loopne
bound
loope
mov
clc
in
lods
or
sub
dec
cli
inc
or
sahf
lret
imul
inc
cmp
jecxz
subl
icebp
iret
neg
inc
or
xchg
mov
xchg
ds
lock
push
ret
pop
lcall
push
ss
addr16
js
cmp
adc
push
mov
inc
lds
xlat
enter
es
xchg
int3
iret
xor
mov
mov
subb
xor
dec
jmp
adc
jp
mov
cs
xor
std
dec
in
test
cmp
cmpsb
in
jnp
mov
incb
fidivl
inc
in
mov
ss
xor
mov
pop
or
lods
add
ss
test
sub
stos
mov
sbb
add
arpl
es
lcall
mov
mov
jo
ret
dec
jecxz
je
mov
and
or
mov
scas
push
imul
data16
jl
pop
inc
pop
mov
out
mov
push
xchg
ds
mov
and
das
pop
dec
outsb
rcrb
fisubs
mov
shrb
bound
xchg
and
fdivr
add
pop
cli
push
jge
mov
or
repz
mov
mov
into
movsl
jb
mov
test
lret
adc
add
pop
dec
inc
iret
lea
sub
ret
ljmp
mov
jl
int
lea
loop
jns
mov
call
mov
inc
sub
dec
shll
ja
gs
int
jb
mov
iret
sub
jbe
ja
pop
dec
push
insl
aas
or
and
cltd
in
dec
adc
aas
and
jbe
pop
orb
arpl
or
std
insl
jmp
or
pop
icebp
or
shll
sbb
loope
ja,pn
test
mov
scas
aam
cmp
in
jnp
arpl
bound
in
scas
arpl
fs
into
push
ret
pusha
in
test
lahf
adc
sbb
lret
and
jae
fwait
flds
push
mov
cltd
mov
and
pop
xchg
xchg
jl
aad
mov
test
mov
sub
jo
mov
jp
call
mov
pop
or
mov
dec
ret
push
inc
mov
fucomi
leave
jl
cmp
jle
pop
add
std
and
inc
adc
xor
aam
jbe
repz
jno
filds
loope
adc
outsl
mov
pop
scas
adc
fcoms
out
gs
shrb
cmpsl
pop
sbb
dec
mov
cmpsl
testb
movq
rorl
adc
or
sti
pusha
adc
jbe
mov
stc
cmp
das
push
ret
fcoml
pusha
call
sbb
out
sti
pop
and
or
jns
mov
movsb
sbb
jbe
adc
popa
daa
push
sbb
aam
add
push
shl
repnz
xchg
sub
dec
adc
adc
jge
sub
mov
ja
dec
inc
inc
mov
and
pop
mov
xor
lock
mov
cs
pop
xchg
or
dec
dec
push
daa
mov
and
rolb
push
push
outsb
movsb
pop
adc
orl
lds
or
xor
out
inc
dec
aaa
sub
lock
dec
jae
xor
sbbl
xchg
and
mov
jne
fildl
fildl
lcall
xor
pusha
and
cltd
mov
or
inc
push
push
cs
push
shlb
adc
lods
in
test
sti
into
and
sub
std
mov
jno
mov
lret
repz
sti
rol
xchg
jo
lahf
sysexit
mov
inc
cli
dec
aas
sub
and
cmp
xchg
call
leave
sbb
add
or
add
inc
ret
mov
outsl
or
decl
fcom
sub
imul
jne
fstpt
ja
stos
sub
mov
xchg
push
xor
mov
adc
in
xchg
xchg
mov
and
dec
rolb
fmul
bsf
sub
push
mov
push
xchg
add
add
dec
into
or
dec
sbb
xor
mov
pop
push
decl
rol
adc
inc
xchg
out
pop
dec
stc
push
leave
jp
mov
ret
inc
ffreep
rclb
loope
and
cmp
mov
xchg
push
pop
nopl
cmp
mov
lea
subb
leave
adc
or
add
sarb
sub
loopne
movsb
mov
pop
gs
sub
inc
test
test
xor
inc
testb
out
js
inc
inc
xchg
nop
dec
lret
aas
jbe
inc
insb
cs
add
mov
xor
cmp
in
stos
cmovnp
loop
push
movsl
sbb
adc
and
mov
mov
test
mov
loopne
jge
inc
dec
out
addl
sbb
test
out
pusha
cltd
mov
hlt
or
xchg
xlat
roll
inc
test
imul
lods
mov
lret
fsubrp
add
fmull
add
adc
jecxz
lret
mov
mov
div
loopne
mov
movsb
enter
inc
or
test
outsl
lds
mov
in
into
stc
jns
inc
inc
add
push
std
gs
adc
xorb
mov
lea
notb
ss
roll
gs
jmp
xor
fnstenv
add
stos
pop
sub
cmc
xor
add
dec
mov
icebp
pop
sub
mov
sub
jecxz
cmp
pop
push
scas
mov
arpl
aam
mov
inc
mov
pop
imul
jo
stc
cmp
add
and
sbb
sub
aad
in
pop
addr16
inc
pop
and
xor
insb
sub
xor
lahf
je
mov
push
jmp
insl
pop
push
or
and
or
in
dec
mov
xchg
sbb
jno
add
scas
lods
les
push
ret
aas
lret
jns
aam
push
stos
stos
jne
mov
inc
mov
hlt
loope
fnstsw
mov
or
sub
xor
jae
mov
sahf
push
adc
adc
pop
outsl
test
lahf
jmp
and
push
xchg
fiadds
mov
xchg
jp
mov
movsb
out
or
popa
mov
clc
stc
fcoml
push
roll
push
xchg
icebp
cmp
mov
or
mov
stc
dec
fisttpll
addr16
mov
and
inc
mov
inc
mov
dec
mov
ret
and
data16
iret
push
loope
jp
shlb
inc
cmpsl
xchg
lret
arpl
jne
repnz
add
pop
out
pop
add
mov
pause
lea
shll
jo
sub
fwait
inc
xchg
xor
imul
add
push
fs
push
stc
fs
pop
fdivr
in
cmp
les
sbb
nop
daa
iret
fadds
out
imul
xor
es
repz
mov
rol
sub
or
mov
add
adc
inc
fstl
sahf
in
push
cmc
inc
mov
mov
test
lock
in
push
incl
push
aas
shr
add
xlat
xorb
fimuls
daa
push
add
icebp
push
out
iret
aam
add
test
rcl
push
rorl
sbbl
pop
hlt
int
jo
add
cmp
rorl
push
jne
mov
mov
lret
or
bound
jno
jbe
xor
mov
jno
scas
or
jmp
or
and
lods
add
hlt
daa
push
adc
test
pop
jns
hlt
rol
mov
and
xchg
sub
and
dec
and
fcompl
mov
push
jns
mov
xor
nop
xchg
daa
xchg
jo
jp
inc
scas
mov
outsb
orb
mov
add
sub
jmp
push
repz
ds
ja
jecxz
in
mov
addl
cltd
and
shlb
bound
loopne
ja
test
pop
mov
pop
push
mov
cmp
xchg
movsb
sbb
lahf
sarb
stc
sbb
fs
jg
dec
push
icebp
jecxz
repnz
dec
pop
adc
shlb
and
imul
push
shl
mov
mov
loope
fwait
pop
sub
fstpl
sbb
jmp
ds
mov
mov
cmp
int
in
ret
hlt
cmp
out
add
aaa
dec
inc
cmc
jecxz
push
cmp
sub
lds
mov
subl
inc
mov
ret
insb
shl
mov
inc
push
adc
test
inc
in
daa
icebp
testl
aaa
js
dec
loope
and
pop
arpl
popf
adcb
dec
inc
adc
rclb
jb
push
pop
in
sub
pop
xchg
fiaddl
popa
outsl
cmp
out
adc
sbb
lcall
ret
jmp
insl
and
pop
sub
xchg
jg
inc
jle
mov
scas
enter
stc
incl
and
fstpt
enter
bound
jns
lret
xchg
jmp
dec
sub
inc
testb
dec
add
mov
scas
jle
pop
sub
mov
int
in
pop
rorl
popf
and
pop
aas
call
or
imul
mov
imul
mov
lea
loopne
xchg
xor
sub
jne
pop
dec
clc
push
inc
ds
mov
jb
jmp
mov
cmp
adcb
jl
mov
xlat
flds
mov
inc
jnp
rorb
xlat
test
clc
call
dec
add
jle
pushaw
cld
rol
shrb
scas
into
mov
ds
lds
ja
xchg
sbb
fldcw
fsubrl
lods
dec
jle
sbb
cmp
shl
add
cli
adc
adc
push
sbb
inc
xchg
test
popf
mov
es
shr
out
stos
pop
enter
int3
and
daa
mov
cmp
cmp
lret
lret
or
int
dec
mov
adc
popa
and
sbb
pop
push
add
mov
jg
xor
das
jae
in
data16
cltd
or
and
notl
or
mov
mov
jb
insl
out
cld
xor
fdiv
daa
movsl
int3
mov
shlb
add
rcr
test
pop
iret
test
ljmp
out
lds
ss
icebp
sbb
xchg
inc
sub
js
jmp
adc
adc
imul
fwait
xchg
push
sbb
jecxz
imul
or
sbb
shlb
lods
jb
and
lds
pop
subb
clc
or
mov
fs
loop
pop
sbb
adc
pushf
aad
jge
xor
imul
push
jp
shll
ror
inc
pop
push
dec
pop
testb
testl
xchg
and
dec
cmp
inc
sbb
leave
movsb
mov
mov
mov
and
iret
sub
xor
xchg
push
push
lods
cmc
popf
repz
outsl
aam
push
dec
test
inc
mov
ljmp
dec
sub
push
in
and
pop
cmp
loop
out
loopne
out
sub
inc
push
sbb
xor
les
call
xor
dec
add
int
xchg
xchg
notl
cmp
add
inc
dec
stos
inc
jmp
xchg
xchg
sub
push
subl
iret
mov
addr16
rorl
inc
jbe
inc
sbb
pop
scas
mov
and
int
rcr
shll
pop
add
cli
ds
lea
cmp
push
imulb
mov
cmpb
scas
pop
add
fwait
addb
cmp
dec
add
jne
jle
cmc
push
call
mov
jo
cld
sbb
mov
jl
or
jne
hlt
dec
mov
test
jl
les
mov
andb
and
cmp
or
pop
inc
mov
xchg
pop
cmp
add
inc
and
cltd
push
test
shll
in
bound
iret
xor
jnp
or
xlat
and
pusha
fstl
out
push
push
lock
and
xor
rclb
mov
rcll
in
dec
mov
xchg
repnz
fcomip
sbb
mov
mov
out
sub
xor
jbe
stos
xor
imul
sbb
xchg
push
or
cmc
das
popa
loop
mov
sbb
aas
jb
clc
lock
imul
or
aas
xchg
les
jae
inc
and
fdivrs
loop
dec
int
in
or
ret
lcall
sbb
xchg
sub
in
popa
jbe
lret
sbbl
gs
inc
rcrl
adcb
jecxz
push
js
out
cmpsl
pusha
inc
or
and
sbb
sub
dec
dec
rcrl
add
xchg
mov
fimuls
cld
lea
xlat
mov
shl
jbe
cmp
insl
xor
fldenv
pop
dec
inc
test
movsl
aas
orb
dec
fcomps
inc
add
out
shrb
in
mov
arpl
rcrb
mov
or
mov
xor
xor
repz
or
jge
pop
leave
rorl
popa
xchg
cmp
fstps
pusha
mov
cli
sub
imul
test
mov
jmp
enter
inc
and
sbb
dec
cmp
test
out
cltd
add
mov
dec
ret
push
sbb
cmp
push
dec
test
pmaddwd
arpl
sbb
jae
lods
lahf
movsl
sub
rolb
enter
aam
es
fs
es
push
sti
cmpsb
push
cltd
fimull
sub
negb
xchg
pop
sbb
cmp
sahf
pop
or
ret
test
jge
pushf
fiaddl
popa
push
and
sahf
mov
cmp
sahf
shll
rcrl
es
scas
inc
push
pop
or
sarl
add
pop
mov
lods
inc
mov
xlat
push
das
sbb
ja
or
inc
inc
nop
mov
hlt
push
into
loope
pop
xchg
nop
fcompl
adc
xchg
aad
dec
aad
rcrl
push
repnz
lret
sub
mov
push
adc
nop
lret
shrb
ret
sub
mov
data16
gs
cwtl
scas
mov
or
pop
xchg
add
sbb
cmc
or
sub
clc
jne
aam
aas
jne
jne
dec
xchg
mov
pop
loope
sahf
cmpsb
mov
das
push
outsb
and
lea
and
pop
aad
in
int3
cmp
mov
aad
jge
jno
xlat
es
outsb
xor
mov
gs
ret
mov
aam
push
cmp
jnp
outsb
sahf
ret
in
stc
pop
sbb
movsl
cmc
sub
aas
jle
push
xor
daa
stos
fnstsw
scas
lret
enter
inc
jl
add
dec
popf
mov
mov
mov
add
movsl
cmpsb
lcall
lret
xchg
pop
repnz
nop
sarb
lret
add
int
add
dec
call
sub
dec
in
push
and
pop
adc
repnz
sahf
jbe
xchg
scas
in
pop
test
gs
mov
adc
xchg
aad
fidivs
dec
inc
sbb
or
ret
je
call
and
shr
pop
sub
int3
xor
mov
sub
push
mov
sbb
das
loopne
fistpll
push
adc
subb
pop
inc
xorb
push
push
ret
xchg
sbb
into
cltd
dec
push
push
and
sarb
fimuls
sbb
dec
add
out
or
ds
test
dec
inc
xchg
mov
jp
push
test
in
pop
fadd
cmpsb
jle
loope
bound
lret
dec
ss
sub
push
mov
mov
adc
jno
les
push
pop
andb
jns
test
mov
dec
mov
jae
mov
loopne
inc
lds
sbb
adc
adcb
add
mov
mov
loop
pop
out
loop
xor
aad
sbb
test
cmp
push
dec
into
push
mov
notb
andl
mov
insl
xor
dec
and
andb
mov
shlb
jle
test
insl
and
clc
jbe
mov
repz
dec
or
cmp
jle
mov
mov
mov
int
fimuls
out
dec
imul
xor
mov
mov
out
je
ret
mov
and
jmp
jno
out
fisttpl
pop
loopne
mov
imul
inc
inc
repnz
or
es
jo
add
dec
int3
add
mov
popf
pusha
push
push
mov
mov
cld
pop
or
lret
sbb
mov
inc
mov
loope
test
mov
sub
jo
iret
inc
loopne
mov
jge
or
pop
xchg
out
fsubr
std
cmc
stos
in
leave
cmpsl
add
sahf
dec
fdivr
fistpll
shll
mov
enter
mov
adc
dec
lods
test
mov
mov
pushf
adc
test
test
inc
dec
push
mov
imul
movsb
js
push
stos
pop
xchg
sub
nop
outsb
daa
nop
pop
lcall
mov
pop
rclb
aam
shl
push
popf
inc
push
jbe
fs
push
xchg
pop
imul
outsb
mov
test
sub
sahf
mov
stos
rcrb
testl
aaa
jne
pop
movsl
fdiv
jns
push
dec
sbb
fucom
sahf
pop
xor
mov
sub
mov
jp
scas
into
enter
add
insb
stc
lcall
leave
stc
ds
add
fnstcw
sub
mov
int
jns
rcll
sti
fsubp
lock
and
and
aad
loop
sbb
jecxz
xor
in
jae
daa
outsb
add
decb
ds
arpl
cltd
fdivrl
ljmp
mov
int
out
fwait
lcall
mov
and
addr16
movsl
xchg
ds
jmp
fucomip
xchg
lret
push
sub
loop
ss
xor
les
pop
pop
mov
push
push
inc
or
mov
dec
mov
fimuls
inc
jecxz
pop
jmp
mov
mov
andb
jns
into
je
push
hlt
test
es
cli
mov
adc
out
mov
xor
or
movl
push
inc
jge
dec
and
loop
or
xchg
fwait
adc
xchg
sbb
push
popa
rorb
sbb
lret
sbb
in
aad
push
lods
repz
test
mov
dec
mov
jle
add
popa
mov
pop
je
mov
arpl
xor
push
pop
aam
ljmp
mov
ret
sub
mov
aam
xchg
add
out
cmp
and
das
test
push
xor
movsb
add
mov
popa
imul
push
in
xor
out
add
into
out
lods
mov
sub
rorl
sub
pop
repnz
sbb
sbb
pop
clc
loop
add
add
loope
or
rcrl
popf
inc
and
fwait
xchg
lret
push
jno
xchg
inc
lahf
xor
mov
push
inc
mov
out
mov
xchg
movsb
mov
and
pop
add
cmp
cwtl
psrlq
scas
das
adc
rcrb
xor
dec
lds
std
js
stc
xchg
int
push
mov
or
arpl
fsubr
adc
ja
mov
leave
xchg
stos
dec
sahf
in
addl
xlat
jb
or
jl
sub
jl
adc
call
cmp
lret
add
das
cwtl
cmp
loop
mov
in
loop
jae
jecxz
mov
or
out
jae
xchg
or
sub
cmpsb
test
addr16
les
cmp
lods
aad
imul
scas
sti
sub
jmp
sbb
test
cmp
cmp
rclb
stos
lods
or
out
jge
jmp
and
sub
adc
addr16
mov
lods
rorl
inc
pop
push
clc
and
loopne
xchg
mov
pop
add
in
mov
jns
push
sub
xor
jg
mov
push
pushf
adc
and
scas
jbe
inc
pop
mov
sbb
sarb
shll
gs
pop
inc
cwtl
push
stos
or
std
pop
inc
ror
mov
mov
and
data16
stos
cltd
loope
mov
popa
das
jge
sbb
mov
lret
or
out
xor
mov
mov
sub
ljmp
and
push
mov
push
lods
and
adc
pop
dec
call
jbe
xor
mov
dec
repz
add
arpl
icebp
push
sarb
inc
and
inc
sahf
outsb
push
fimuls
pop
mov
les
lret
rcrl
in
dec
es
scas
std
hlt
jl
decl
into
movsl
gs
add
dec
sub
repz
inc
cli
fs
sbb
std
mov
ds
cmp
lcall
in
cmp
mov
mov
fs
rolb
and
lock
daa
lods
adc
aam
add
jge
fldt
cmp
xchg
es
jbe
std
pop
es
jp
rolb
in
cmpb
sbb
mov
insl
jne
xor
xchg
test
cmp
jae
push
mov
sahf
daa
test
iret
ss
mov
mov
repz
int
mov
sbb
or
or
pusha
sub
outsb
ds
push
xchg
and
dec
push
xchg
mov
loopne
sub
pop
lret
lahf
xor
jle
out
out
mov
mov
pushf
sbb
test
ja
bound
cmpb
sbb
imul
out
call
out
or
test
and
scas
xchg
sti
fnstcw
pop
pop
fimuls
push
sti
mov
push
sahf
dec
lcall
push
or
cmc
cli
mov
and
mov
cmp
int
fs
es
test
add
cmp
inc
scas
add
insb
lcall
and
cmpsl
aam
add
cmp
mov
inc
faddl
push
xorb
leave
jns
stos
mov
push
push
add
or
fbstp
lret
lcall
inc
call
pop
inc
mov
fadd
push
stos
lea
jns
and
dec
dec
lret
mov
loopne
pop
out
dec
xor
xchg
sub
or
push
je
xchg
shrb
mov
pop
sbb
lods
pop
fwait
cli
mov
sbb
add
fs
jg
pusha
es
jo
push
test
in
xchg
or
mov
scas
xchg
popf
cltd
pop
cmp
xchg
enter
outsl
pusha
cld
insl
loopne
mov
push
add
dec
loope
stos
hlt
insl
test
aam
popf
xchg
arpl
xor
leave
jo
dec
jbe
sbb
dec
fisttpll
pop
dec
test
popf
mov
aam
sub
fbstp
mov
stos
add
jl
push
or
adc
dec
add
orb
push
sbb
repz
adc
sub
adc
jns
xor
fildll
out
test
stos
add
xchg
mov
jb
and
scas
adc
mov
pop
sahf
jp
sti
cli
test
pusha
sub
sahf
repz
ret
and
inc
push
jb
mov
cmp
mov
dec
dec
or
push
or
mov
mov
out
xchg
das
cmp
call
and
jl
sub
mov
xor
cmpsl
jp
xchg
cmp
xchg
sbb
hlt
pushf
adc
mov
jmp
fwait
and
call
mov
jne
mov
out
jb
in
repnz
inc
test
je
mov
sub
xor
push
push
adc
add
mov
int
insb
jo
push
cmp
pop
lods
and
mov
dec
icebp
shl
outsb
mov
out
jbe
and
mov
test
je
push
or
loope
inc
jb
jbe
pushf
and
das
dec
add
imul
or
fbld
push
or
jae
xchg
cmp
xor
xorl
ds
fwait
call
pusha
pop
outsb
jno
mov
push
loope
cli
mov
arpl
lods
ljmp
incb
jbe
pmaxub
jne
adc
mov
cmp
mov
int
mov
sbb
cmp
add
sarl
sbb
jecxz
pop
pop
jge
adc
adcl
stos
xchg
sbb
pop
mov
jmp
aaa
outsb
ja
sahf
mov
testb
xor
xchg
adc
sbb
mov
mov
sub
mov
cmpsb
adc
ret
or
cltd
ljmp
mov
or
adc
lcall
xchg
jp
jp
mov
xchg
lods
fwait
mov
jae
ds
in
cmpsb
push
lods
mov
aad
mov
sbb
mov
sbb
insb
ljmp
out
xchg
in
xchg
adc
cmp
aas
mov
mov
loop
mov
rol
xchg
dec
mov
adc
lret
sahf
lea
dec
imul
jge
lods
mov
cwtl
inc
xor
imul
stos
sbb
rcrl
mov
adc
inc
scas
inc
xchg
popl
sub
repz
das
roll
daa
mov
mov
inc
adc
dec
fs
xchg
test
add
dec
inc
or
cmp
mov
sahf
mov
je
ds
pop
xchg
xchg
test
pop
dec
xchg
jg
cmp
fidivl
popf
ds
cmpsl
mov
aad
dec
pop
pushf
adc
jmp
adc
pop
mov
cwtl
sbb
dec
sbb
sub
push
mov
inc
stc
sbb
stc
or
rcll
test
cmp
xchg
out
aad
inc
outsb
pop
cmp
or
xor
cmc
lods
popf
sahf
les
ret
fwait
div
fbstp
mov
rcr
inc
adc
xor
pop
push
cwtl
add
mov
out
imul
sbb
jle
push
mov
or
lods
xor
or
cmp
sbb
fcoms
xchg
arpl
fsubr
jb
popf
cmpsb
xchg
subl
jns
cmp
lahf
inc
les
decl
aas
dec
or
test
adc
xor
icebp
jl
mov
ret
sbb
pop
pop
out
xchg
add
add
jae
xchg
sbb
pusha
xor
xor
es
clc
inc
mov
mov
dec
dec
push
jecxz
rcll
pop
out
ds
je
hlt
int
xchg
sbb
sbb
rorl
mov
push
mov
cmpsb
cmp
adc
mov
push
mov
lret
test
sub
adc
pop
xchg
mov
sub
xchg
adc
adc
xor
cmp
roll
inc
mov
inc
xor
call
clc
mov
inc
cmp
and
mov
jne
leave
jno
adc
insb
xor
xchg
xor
xor
mov
inc
out
cmpsl
mov
loopne
sbb
out
xchg
xchg
fstps
gs
lret
repnz
or
mov
es
mov
sbb
jb
call
sbb
jae
shll
scas
jo
sbb
fsub
xchg
dec
scas
roll
mov
mov
aaa
int
mov
shll
test
sbb
aad
insb
outsl
les
ret
aaa
sbb
jmp
in
or
fisubs
lcall
xchg
movsl
push
ret
add
cmpsb
int3
xor
in
loop
imul
xor
cld
dec
mov
int3
inc
fcmovnb
push
and
push
aad
mov
cwtl
fldl
dec
rolb
push
in
in
or
jns
ss
or
mov
loop
jne
bound
xchg
mov
push
push
fisubrl
dec
cmp
popf
mov
loop
inc
adc
es
push
push
xlat
call
arpl
xlat
mov
rcrb
and
pushl
adc
inc
cmpsl
or
fsubrl
push
push
push
fcomps
cmc
je
mov
ret
xchg
popa
cmpsl
fdiv
ss
insl
addr16
cmc
pop
or
xor
add
push
inc
pop
mov
test
outsl
or
je
jl
jge
sub
xchg
loopne
jb
outsb
lret
cltd
out
cmp
or
shr
scas
iret
shll
lret
sbb
out
lds
jecxz
jno
mov
jno
push
add
cmpsb
and
fwait
xchg
or
mov
mov
dec
icebp
bound
push
xchg
cmpsb
popl
incb
scas
jo
inc
test
sub
pop
roll
adc
jbe
in
fbstp
call
fisubl
shll
cmp
add
jle
jp
les
icebp
adc
cmp
jbe
lock
mov
mulb
notb
mov
adc
or
push
and
lods
pop
jo
add
cmp
sbb
inc
jle
jbe
jl
jne
rcrb
jp
push
push
dec
jg
out
fstp
sub
jle
add
mov
cmp
or
dec
into
mov
pop
jne
mov
imul
inc
and
data16
push
loop
imul
shlb
sahf
xor
pop
aad
roll
dec
mov
jb
lods
mov
mov
lods
xchg
mov
lods
jae
jmp
or
inc
or
fistps
shl
fcoms
sub
lods
call
sbb
pop
sbb
or
sub
sub
mov
inc
insl
inc
jmp
es
imul
mov
cmc
mov
mov
lret
sub
out
and
sbb
mov
push
pusha
gs
xor
push
int3
mov
dec
fidivrl
adc
fdivrs
stc
leave
push
out
scas
xor
lcall
xor
dec
pusha
add
popa
cltd
push
fidivrl
and
mov
stos
and
adc
push
scas
jnp
push
cmp
push
ljmp
pop
xor
loop
jge
xchg
sub
pop
aaa
rcrl
push
jl
mov
rcrb
pop
mov
push
push
pop
les
cmovge
ss
hlt
daa
adc
outsl
in
ds
shl
adc
dec
bound
inc
in
pusha
push
sbb
lds
std
jb
out
add
aam
sbb
imul
xchg
jb
mov
pop
das
sbb
lods
data16
and
xchg
mov
push
std
xor
xor
lock
std
hlt
push
mov
test
jno
mulb
add
pop
jne
or
push
xchg
jo
stos
adc
lods
loopne
push
cmpsl
outsb
pop
daa
push
shlb
cmp
adc
dec
mov
call
outsl
add
adc
test
js
rcll
pusha
cmp
sbbb
inc
jecxz
data16
add
sub
movsl
pop
sbb
push
or
xor
enter
dec
push
mov
push
pop
sub
xchg
ret
insb
add
fnstcw
pusha
pop
jnp
sahf
mov
je
pop
or
xchg
mov
lods
cmc
cmp
sbb
out
lea
mov
adc
mov
push
or
test
mov
adc
js
lods
pop
sbb
jle
out
inc
pop
mov
inc
fists
push
out
cwtl
call
jne
pop
xchg
insb
shrl
stos
or
pop
pop
stc
mov
fsubr
std
mov
lock
cmpsb
xchg
loopne
push
sub
insl
test
push
sub
mov
popa
xchg
sub
dec
inc
in
mov
and
pop
push
lret
or
add
pop
mov
sbb
lret
test
mov
lods
test
and
pmullw
inc
mov
aam
pop
inc
inc
mov
pop
stc
add
and
leave
clc
in
aas
in
ds
cmpsb
jne
sub
adc
and
xchg
pop
jmp
mov
into
fwait
sub
fldt
push
mov
loop
mov
cmpsl
das
mov
inc
mov
xchg
int3
stc
pop
xorb
dec
lock
fildl
in
fdivl
mov
jecxz
add
and
pop
dec
rcrl
addr16
daa
push
clc
dec
pop
les
dec
out
sbb
sahf
arpl
js
arpl
addr16
ljmp
cld
vdivps
sub
incl
icebp
xchg
scas
sbb
loope
adc
sbbl
jmp
gs
push
mov
mov
xchg
push
mov
cmc
xorb
jo
pusha
movsl
jle
pop
add
out
subb
into
aam
jbe
call
adc
dec
lock
sub
mov
pop
dec
subl
addb
imul
xchg
and
lock
in
adc
jecxz
pop
shlb
mov
outsl
fdivrl
mov
in
inc
rcll
mov
std
mov
bswap
pop
mov
scas
js
sub
xlat
xchg
xor
icebp
outsl
fistpll
xor
andl
pop
add
and
mov
insb
cmc
push
mov
pushf
in
cwtl
mov
cmpsb
fisubrs
lea
ret
fldl2e
bound
dec
es
outsb
cmp
neg
mov
mov
icebp
cwtl
and
jp
out
push
jb
cmp
mov
loopne
jmp
jg
out
or
xchg
xchg
outsl
mov
test
push
sub
lahf
fiadds
mov
cs
popf
cld
cmp
xchg
sub
mov
jmp
ret
xchg
mov
out
icebp
mov
push
imull
imul
xchg
ret
lret
dec
stos
std
and
pop
rcrb
inc
in
ret
mov
test
pop
into
push
mov
repz
inc
or
pop
cmpsl
add
test
xchg
xchg
mov
aaa
xlat
and
arpl
insl
xorl
push
ficomps
pop
test
cmp
add
fisubs
fisubrl
in
inc
inc
ss
dec
cltd
out
push
ss
pop
flds
xchg
notl
inc
xchg
jnp
pop
imul
or
not
mov
push
mov
outsb
in
std
subb
adc
pop
fucomip
loop
movsl
leave
or
mov
in
test
push
push
rcrb
test
out
cmp
jo
cmp
movsl
mov
push
jmp
pop
fwait
or
repz
out
mov
outsb
inc
and
cmp
mov
cvtps2pd
pop
sbb
and
sbb
call
xchg
imul
xchg
lret
movsb
pusha
fists
clc
shlb
xor
push
mov
cs
xor
ds
lea
mov
stos
ljmp
ss
repnz
fidivrs
into
hlt
rolb
insl
iret
sub
sbb
pop
je
sub
mov
sub
cs
jae
dec
insb
or
add
push
pop
into
ja
lods
jmp
jmp
outsb
scas
jae
movsb
dec
dec
lret
jl
ss
cmp
push
push
xorb
pop
lret
aaa
fs
xor
mov
inc
pop
jns
fnsave
decl
jb
cmpb
arpl
int
push
inc
movsl
mov
repnz
dec
dec
adc
gs
rcll
insb
adc
test
ficoms
enter
or
rclb
lret
sub
xchg
test
xor
mov
sbb
in
mov
adc
gs
pop
ss
adc
mov
outsb
lret
jno
sub
mov
jmp
enter
push
pop
int
inc
mov
mov
out
xchg
jle
mov
addr16
and
add
pusha
enter
or
jne
mov
enter
daa
ja
fs
push
pop
movsb
out
fs
lcall
ljmp
cli
push
mov
sbb
idivb
mov
and
or
mov
daa
cmpsl
loop
sub
jp
in
adc
sbb
das
adc
add
popw
dec
mov
hlt
pop
sar
std
fs
push
mov
leave
lret
add
inc
orb
pop
data16
pop
mov
fucomi
sub
out
fs
cmc
notb
lods
xchg
mov
aas
mov
mov
out
shrl
ret
sbb
push
dec
and
mov
sbb
test
cld
dec
repnz
push
sub
jns
fsubl
mov
sti
fistl
push
je
xchg
mull
mov
mov
cmc
sbbl
insl
rorl
mull
adc
push
jae
int
ret
hlt
into
adc
fsubs
xlat
loop
lea
and
ljmp
movsl
and
in
jnp
pop
mov
sarb
and
dec
rclb
mov
cmpsl
test
inc
mov
pusha
in
push
sbb
xchg
dec
xchg
ret
sbb
ja
add
xor
negb
popa
jp
push
shl
cmp
popa
icebp
push
xchg
dec
xlat
add
lret
jg
inc
ud1
jbe
push
add
test
pop
inc
je
nop
xor
aad
enter
repz
push
out
pop
push
and
xor
shr
xlat
add
sub
inc
add
sbb
xchg
and
rolb
xchg
mov
dec
ret
push
pop
sbb
mov
add
scas
push
ja
inc
or
mov
sub
inc
jp
js
data16
rol
cmp
or
sbb
jl
push
imul
push
lahf
mov
sbb
inc
cmpsl
and
adc
dec
sub
imul
stc
leave
sub
sbb
pop
in
and
jp
cld
cld
test
pop
xchg
jle
out
adc
mov
jne
ret
bound
adc
popf
gs
xor
xchg
jmp
outsl
mov
out
outsl
dec
ss
cld
cmp
adc
call
lods
sti
out
test
rcll
int
lock
das
lods
scas
add
xor
dec
jmp
mov
fwait
mov
sbb
inc
xchg
insl
lret
ss
fnsave
xlat
stos
dec
cmp
or
std
fistpl
inc
add
push
fcomp
arpl
add
mov
fadds
ljmp
inc
xlat
test
daa
cwtl
jle
scas
out
xchg
ret
push
lret
push
into
ss
addr16
dec
sub
dec
neg
loopne
les
repnz
clc
lcall
lods
inc
and
test
sahf
ficompl
pop
jb
out
mov
or
aaa
stc
addr16
xchg
jl
lods
mov
loope
xchg
jg
mov
hlt
and
push
add
fidivrl
pushf
sub
mov
or
lret
dec
pop
push
sarb
loope
enter
cs
scas
push
sub
inc
xor
add
loopne
aad
ficompl
lea
xchg
imulb
xchg
sub
movb
sub
jae
popf
cwtl
sub
add
push
mov
insl
xchg
adc
sub
outsb
sbb
and
sarb
adcl
dec
xchg
inc
jb
adc
ds
push
xor
xrstor
ret
push
cvtpi2ps
mov
cwtl
mov
mov
leave
xchg
fstp
mov
adc
scas
pop
movsl
aas
or
repz
and
lock
mov
xchg
scas
or
mov
mov
out
xor
xor
dec
mov
shll
ds
cmp
rolb
lcall
pop
test
jae
lea
cmp
or
outsb
adc
insl
pop
loope
pusha
and
mov
cs
dec
sub
xchg
out
imul
xchg
aad
jb
jno
dec
or
pop
out
mov
jae
outsb
lret
mov
fcmovne
inc
das
mov
aas
xor
pop
outsl
ds
dec
fdivs
js
stos
push
out
stos
add
or
into
or
ret
mov
in
mov
sbb
pop
xchg
xchg
jns
sub
jmp
sub
jp
or
adc
mov
sti
out
sub
pop
call
fdivl
loopne
push
pop
sarb
push
std
sarl
lods
lcall
cmpb
cltd
mov
xchg
vmovsd
sbb
push
pop
cmp
and
cmp
dec
sbb
test
push
out
sbb
mov
pop
popf
push
jns
push
nop
pushf
jle
aam
cmp
xchg
push
js
fstl
cli
or
sub
adc
add
movsl
xor
rcl
ja
or
inc
adc
mov
aas
pop
leave
aad
aam
mov
mov
sarl
add
sub
and
es
outsl
das
lods
cli
dec
xor
aad
int3
fldenv
movsl
pop
add
fisttpl
repnz
lcall
pop
sbb
gs
mov
fcoml
mov
add
call
mov
roll
mov
mov
gs
add
mov
or
mov
daa
push
dec
sub
insl
into
negl
xchg
repz
loop
faddl
adc
pop
mov
out
cmpsb
push
dec
fbld
sub
loopne
xchg
fs
popa
enter
cmp
pop
adc
loopne
pop
inc
jp
ja
push
push
sub
divb
dec
pusha
inc
fucomp
lret
sub
push
mov
xor
js
pop
lock
adc
mov
movsl
xor
int
movsb
mov
loopne
lods
inc
jae
test
mulps
or
pop
xchg
mov
push
leave
addr16
ljmp
fs
insb
repnz
xchg
xchg
xchg
mov
jo
roll
push
stos
enter
xchg
es
movsb
in
jl
in
mov
add
fistl
ret
inc
cmp
mov
dec
dec
or
sub
adc
ret
sti
imul
sahf
push
push
fadd
dec
and
jno
and
rcrb
inc
mov
popa
or
mov
stos
aad
xor
aas
add
outsl
movups
loopne
mov
jne
or
mov
pop
jnp
sub
leave
shll
cli
sbbl
sub
and
sahf
fisttpll
lock
shrl
aam
movsl
je
dec
jmp
xorl
movsl
jle
out
arpl
js
loop
out
les
ljmp
int3
aaa
cs
jecxz
cld
movsb
mov
jle
cmc
and
pop
jns
loop
clc
cld
jecxz
test
mov
fxch
or
sub
inc
lret
js
fmuls
addr16
dec
sub
and
xchg
cli
add
lret
xchg
adc
mov
scas
je
addr16
xchg
sbb
xor
xchg
cmpsb
inc
fisubrl
jmp
jg
sbbb
int3
push
inc
dec
imul
sbbb
sbbl
aaa
mov
imull
popa
push
in
xchg
lods
rclb
xor
jns
nop
add
sbb
in
fistpl
pop
or
mov
mov
icebp
adc
jne
out
push
mov
icebp
adc
push
icebp
arpl
popf
add
ja
jno
add
mov
pop
insb
xchg
xor
xor
dec
jecxz
and
repnz
add
sbb
int3
into
push
mov
aad
lahf
xchg
push
fisttps
pop
pop
pop
sub
push
and
pop
andb
nop
mov
pop
rolb
mov
push
rclb
lods
sbb
xor
lret
jns
lods
mov
stc
adc
mov
scas
mov
enter
mov
add
movsb
stc
pop
stos
and
mov
mov
sub
and
xchg
das
pop
test
int
inc
cltd
in
in
mov
popa
push
jg
popf
mov
aam
cwtl
dec
mov
mov
loopne
mov
or
push
pop
fnstcw
cmp
pop
loopne
push
and
ret
jle
test
lds
ret
pop
ja
jmp
out
or
add
enter
mov
out
push
adc
sbb
push
lret
fs
inc
pop
xchg
jo
out
movsl
dec
loop
inc
adc
xor
in
sub
push
or
pop
in
iret
inc
iret
xchg
or
xchg
adc
sub
test
loopne
jge
stos
xchg
daa
sbb
mov
add
divb
js
js
and
add
repz
add
movsl
scas
mov
mov
adc
std
adc
aas
in
outsl
cmp
push
pushf
sahf
add
pop
stos
add
cmpsb
in
cmp
push
ja
aas
out
push
mov
out
inc
subl
mov
ret
stos
test
mov
inc
jne
pop
test
adc
lret
jl
mov
jg
cmp
pop
jl,pn
lods
fwait
mov
enter
mov
pop
mov
mov
xchg
jg
mov
xchg
xor
test
sbb
sub
adc
inc
addb
sub
fstl
sbb
cmc
fidivl
dec
sub
in
into
add
sub
dec
push
xchg
loop
pop
pusha
push
or
popl
std
lock
jmp
mov
xor
out
cmp
clc
sarl
aad
and
jg
push
idivl
or
mov
cmpl
cmp
inc
scas
push
iret
scas
stc
dec
and
mov
mov
mov
pop
mov
xor
pop
stos
inc
ret
mov
xchg
pop
sub
pop
sub
sub
jle
and
push
sbb
dec
movsb
ret
int3
aam
rcrl
orl
adc
sub
test
ret
cmp
or
or
cltd
lret
jns
lret
outsl
push
adc
arpl
lods
rorb
adc
pop
push
insl
loope
jecxz
test
jecxz
arpl
les
mov
adc
push
push
cld
ljmp
xor
movb
push
sbb
or
mov
add
jle
adc
lahf
rcr
imul
inc
ror
adc
mov
sub
jle
xchg
push
sbb
dec
iret
int3
sbb
adc
fcoml
jb
popa
movsl
mov
push
arpl
jbe
adc
subl
outsb
mov
sub
fimull
rorl
jmp
xchg
pop
pop
pushf
in
sahf
inc
stos
lods
jg
or
mov
jp
es
pop
inc
cmc
aad
test
outsb
sbb
addb
mov
push
jo
test
sbbl
es
push
and
push
push
push
mov
sbb
adc
das
repnz
pop
addr16
and
rorb
test
pop
test
sar
rorb
lods
inc
cmp
psrlq
jbe
or
add
pusha
pop
jge
test
pop
cmc
shll
hlt
xchg
popf
push
xchg
pop
xor
inc
lahf
inc
xchg
subl
inc
addr16
pop
push
mov
ds
mov
loop
push
xorl
inc
in
rcll
insl
mov
xchg
fcoms
rcrl
sub
in
mov
call
loop
cltd
fmulp
pop
out
ret
mov
lahf
inc
xchg
in
mov
fidivrl
inc
lret
sub
pop
rolb
dec
in
and
les
mov
or
lods
mov
add
lahf
jg
jbe
sarb
jmp
and
jno
movsb
cmpb
mov
lds
dec
add
mull
mov
fwait
add
lret
scas
mov
and
pusha
mov
outsl
xchg
mov
push
jo
scas
outsb
cmp
cwtl
jns
inc
fsts
es
sub
jo
adc
and
push
inc
jae
popf
jge
mulps
in
ljmp
cmp
pop
cmp
in
xchg
lds
sub
xor
lods
iret
adc
dec
ficomps
cwtl
leave
in
repnz
pop
push
mov
jmp
xor
scas
sub
lea
jns
jge
jl
leave
lcall
sub
hlt
scas
add
rcrl
repz
pushf
ret
mov
dec
lret
mov
push
mov
daa
jecxz
mov
daa
fildl
rol
adc
sbb
adcb
ljmp
mov
adc
xor
and
fists
inc
cwtl
mull
sub
arpl
push
ret
lret
xor
cld
or
movsb
aaa
sahf
mov
loope
or
xor
pushf
jns
dec
inc
jg
cmp
idivb
int
lret
ret
dec
popf
outsl
rcl
hlt
dec
fnstcw
lds
fs
xorb
dec
mov
sahf
push
cmpl
jecxz
test
cld
pop
out
sub
inc
sub
mov
repnz
orl
cmpsb
test
pop
stos
pop
xlat
in
xchg
push
daa
adc
push
loope
insb
in
xchg
push
and
pop
cld
stos
jge
xorl
cmpsb
lret
les
dec
cmp
jb
mull
jge
loopne
jb
loope
sub
popf
xchg
addr16
ret
pushf
xchg
bound
mov
cwtl
je
inc
sbb
and
push
aad
sarl
sbb
mov
loopne
mov
xor
jmp
mov
cmp
xchg
cmp
fdivl
mov
insb
jmp
push
add
dec
cmpsl
push
lahf
pusha
outsl
in
and
pushf
bound
daa
mov
cmpsb
push
add
clc
push
or
test
xorb
inc
pop
enter
dec
inc
or
mov
rcll
mov
insl
scas
jg
loopne
xor
arpl
inc
popa
sbb
insl
xchg
dec
sub
shrl
jp
loop
mov
jl
xor
popa
or
cmp
pop
rcrb
and
fiadds
daa
xchg
arpl
sub
jne
xlat
fucomi
add
mov
pop
push
outsb
iret
dec
sbb
push
sbb
dec
mov
popf
cmpsb
je
gs
repnz
dec
sbb
and
dec
push
cli
fwait
int3
gs
aaa
daa
fdivs
mov
mov
sahf
cmc
iret
ss
xor
mov
lds
and
outsb
mov
fildll
push
hlt
in
xchg
in
lret
pop
imul
and
adc
adc
out
leave
pop
stos
xor
mov
pop
js
repz
add
pusha
je
xchg
dec
int3
pop
and
jnp
addl
push
fistps
cmp
pop
std
movsb
mov
xchg
lret
add
mov
push
adc
adc
xorl
xchg
or
jecxz
sti
sub
inc
popa
out
test
fsubr
xchg
mov
jle
mov
lcall
adcb
cmpb
lods
cmpl
pop
sub
cmpsb
out
nop
pop
mov
outsb
inc
ss
mov
jae
fstpl
pop
sbb
adc
sub
insl
rcrl
jle
lds
popl
xchg
push
imul
or
mov
fisttpll
cld
cld
sub
add
jo
repnz
je
mov
mov
aad
xor
add
in
or
dec
cld
adc
and
divl
hlt
jno
adc
in
push
mov
push
mov
mov
fidivl
shr
or
pushf
sbb
clc
push
mov
pop
xor
pop
or
sbb
pop
push
jge
pop
divb
lret
es
sbb
jecxz
aas
add
adc
push
loopne
mov
pop
cmp
js
inc
and
lcall
das
loop
cli
sub
ret
cs
test
int3
test
push
fldt
mov
jle
xchg
mov
xor
sbb
xchg
shl
push
insb
dec
cld
scas
ja
jae
shl
call
icebp
and
fisubrs
add
xor
sub
mov
sbb
sub
xchg
mov
jb
imul
les
add
xchg
rcr
dec
fisttpll
loop
cmc
adc
adc
cwtl
cld
mov
xor
adc
dec
sbb
sbb
cmpsb
and
pop
adc
mov
and
aam
outsl
push
mov
add
int3
push
mov
xchg
jge
ljmp
lcall
ficoml
dec
ret
xchg
and
adc
jg
pusha
push
xchg
lret
cmp
cld
sbb
fistpl
mov
mov
stos
dec
dec
loop
lods
pop
aaa
inc
sub
imul
out
jecxz
jmp
les
int
data16
insb
sub
xchg
xor
repz
gs
mov
cltd
lahf
mov
add
inc
xchg
addr16
sbb
repz
pop
push
cmc
and
decb
push
aam
push
jns
jno
and
cmp
scas
cmp
fs
in
push
scas
in
ja
pop
js
repnz
lret
scas
enter
addr16
sub
loop
lods
fldenv
dec
push
push
xchg
lahf
popf
cmc
sub
mov
sub
fs
idivl
rol
add
fldl
pop
andl
push
xor
xchg
lods
cmp
or
adc
rcl
push
fildll
fsubrl
ds
pop
lock
sub
mov
rcrb
or
adc
repz
push
mov
ja
push
xchg
js
scas
into
add
mov
aas
inc
fisttpll
es
cmp
xchg
je
int3
sub
mov
fwait
xor
ret
pop
lret
add
push
or
jmp
push
add
loope
mov
ficoml
insl
pop
mov
and
jge
test
cld
arpl
xor
shrb
lods
add
dec
sub
sub
enter
out
test
cmp
xchg
test
aad
ljmp
sbbl
js
and
xor
mov
jle
test
push
daa
jmp
xor
imul
movl
inc
push
or
popa
mov
loope
ljmp
sbb
and
dec
andb
dec
and
outsl
mov
sarb
xchg
daa
lahf
sbb
bound
cmpsb
sbb
bnd
pop
imul
in
cltd
lock
pop
or
mov
inc
inc
aas
adc
cmp
jnp
inc
lods
notb
imul
fbld
add
mov
jae
stos
lcall
sarb
xchg
xor
testl
mov
pop
xchg
divb
jno
in
xlat
sbb
call
mov
addb
push
push
dec
jmp
fstpl
add
popf
fwait
xor
xchg
jb
or
int
pop
movsb
and
aas
mov
cmp
rolb
dec
sub
sar
adc
xchg
mov
add
lahf
negb
std
xor
add
sti
leave
jnp
cmp
cmc
sub
jle
imul
addl
aad
sub
lods
std
mov
mov
rcr
jo
in
xor
xchg
inc
insb
cwtl
sahf
aad
cmp
sub
sbb
ficomps
inc
lea
add
push
mov
push
shll
push
dec
faddl
mov
into
int
outsb
rcll
mov
xchg
add
mov
daa
mov
in
or
mov
xchg
bound
xchg
cmpsl
lea
lods
dec
sub
xchg
hlt
and
das
push
push
mov
aam
enter
jp
stos
popa
mov
fidivrl
or
lods
popf
imul
push
or
mov
dec
fdiv
les
xlat
fwait
ljmp
fsubr
shrl
jno
lahf
dec
imul
lods
bound
idivl
rorb
add
popf
call
movsb
test
cmp
dec
xchg
mov
xchg
fdivs
push
subb
adc
aad
adc
testl
xor
hlt
add
jg
push
insl
out
inc
lcall
cld
lahf
or
adc
int
test
fldpi
movsl
sub
or
sbb
out
cmp
loop
mov
adc
test
mov
add
in
mov
pop
sub
sub
lock
lcall
xchg
bswap
mov
pop
mov
dec
int3
addl
inc
xor
add
loop
jecxz
jmp
pusha
das
jno
fcomps
mov
pop
mov
mov
sbb
sub
int3
test
pop
cmpsb
aas
mov
rolb
sbb
daa
add
adcb
xor
test
lahf
das
insb
out
jge
cmpsl
and
push
cmp
into
sbb
mov
and
imul
mov
sbb
push
fbld
lods
or
lods
lahf
loope
sbb
fwait
jnp
sub
not
fadd
sbb
je
cli
fcoml
fwait
and
cmpsb
aam
int3
adc
into
lret
cwtl
mov
dec
ds
inc
ss
lods
rorl
cmp
outsb
adc
xchg
jg
push
iret
pop
sub
cwtl
jp
std
add
loop
inc
push
jecxz
sub
daa
pop
scas
adc
and
cmpsl
int
movsl
sub
jge
or
or
adc
or
punpckhdq
push
call
test
mov
xlat
cmp
xchg
dec
nop
adc
rcrb
rorl
scas
lds
cld
lea
mov
mov
rorl
adc
lcall
jns
mov
adc
stc
mov
insl
imul
xor
and
movsb
cwtl
fistps
in
jb
fwait
rcrb
mov
repnz
or
pop
das
and
dec
insl
jb
pop
loopne
inc
in
push
jb
cmp
cmp
rcll
shll
add
mov
lds
push
jnp
or
nop
jae
mov
mov
push
pop
sbb
in
stos
outsl
fldt
pop
fidivrl
add
test
cwtl
shlb
add
negl
push
jno
pop
mov
add
and
and
cmpsl
pop
sbb
enter
jbe
jb
sub
push
xchg
rcl
push
outsb
es
notb
mov
add
cld
xor
cmp
mov
aad
test
or
lock
idivb
jg
cld
inc
fisubrl
aaa
sub
bound
and
add
pusha
mov
cmp
pop
adc
jno
lods
push
or
and
jae
jl
clc
test
cmpsb
in
pop
fisttpll
lock
lods
mov
mov
push
icebp
mov
adc
mov
pop
sahf
popf
loop
jl
gs
sub
inc
cmp
hlt
and
and
push
dec
lret
push
out
mov
les
fldt
fxch
sub
in
loope
inc
xchg
xchg
xor
sarb
bound
ret
xor
jbe
mov
jmp
adc
stos
lret
pop
push
lret
jns
fimull
enter
inc
pop
shll
xlat
subl
jecxz
aaa
mov
fsubrs
xor
xor
mov
fadds
mov
sub
xchg
adc
jo
mov
sbb
fucomp
cmp
sbb
mov
add
xor
stos
enter
cmp
lret
fsubs
in
xchg
lcall
movsb
xchg
enter
mov
mov
add
sbb
popa
out
mov
dec
jl
movsl
imul
inc
mov
and
jecxz
pop
sub
mov
mov
repnz
push
push
addl
je
mov
loopne
loopne
jge
mov
test
push
adc
push
lods
inc
out
mov
pop
bound
fbld
push
pop
mov
xchg
push
adc
fs
inc
add
xchg
ret
mov
outsl
cli
and
sar
xor
insl
jne
iret
les
push
jmp
andl
sarl
dec
jns
cs
lods
pop
lods
iret
scas
jle
xchg
push
iret
out
iret
ret
aas
inc
dec
call
sbb
lahf
iret
add
jl
mov
cmc
outsb
out
cmp
loop
or
dec
imul
fldl
jbe
push
push
mov
data16
ret
pop
adcl
dec
and
cltd
xchg
test
imul
dec
or
or
lret
and
aam
in
or
adcb
stc
and
sbb
sbb
in
push
or
fisttpll
sub
addr16
add
loop
fmuls
push
cmc
iret
adc
sti
and
push
or
jmp
xchg
push
or
jecxz
xchg
jge
mov
xchg
jmp
mov
cs
lds
fisubrl
xchg
int
testl
push
sahf
ss
add
shlb
cmp
cmp
es
in
pop
sub
pop
inc
mov
sbb
adc
push
or
push
and
mov
into
xor
mov
lds
andl
jne
popf
lret
test
fldl
mov
jecxz
dec
out
xor
jae
ds
cmp
sti
xlat
fstp
lods
adc
and
jnp
xlat
xor
add
mov
fcmovne
cli
aad
and
fbstp
pop
lahf
jge
ficomps
dec
jno
push
leave
mov
das
jae
adc
push
xor
pop
and
mov
cli
pop
mov
mov
sub
add
add
outsb
fwait
lods
dec
lar
fbld
aam
lcall
mov
jnp
jmp
lock
mov
fcoml
fcomip
push
test
xlat
lds
fidivrs
jl
gs
cwtl
andl
mov
mov
out
jmp
nop
je
std
lret
out
cmp
stos
fldt
adc
gs
out
cmp
xor
ds
xor
xchg
enter
mov
scas
sarb
into
ja
pop
push
jnp
shll
into
sub
in
int3
add
bound
movl
lds
imul
push
outsl
cs
adc
aaa
dec
or
test
jno
lret
sub
xchg
sbb
daa
jl
push
xor
fnstcw
out
pusha
shlb
pop
mov
and
and
aad
jge
loopne
adc
fwait
or
xor
mov
fwait
shl
push
dec
or
xor
or
arpl
aam
jae
pop
add
cmp
and
les
mov
adc
mov
lret
loopne
std
insb
shrb
popf
jae
mov
sbbl
jg
lea
ljmp
push
ret
test
std
adc
mov
or
or
sbb
push
imul
cld
pop
pop
xor
cmp
in
mov
pushf
jb
js
in
cli
imul
test
mov
lret
rclb
cmp
cltd
add
test
bound
rcll
test
adc
outsl
push
xchg
adc
xchg
push
int
adc
iret
pushl
mov
push
clc
xor
clc
or
dec
add
add
pop
fnstcw
sbb
mov
xchg
shl
subb
and
adc
mov
jne
rcrb
xor
mov
inc
pop
je
jno
mov
cmp
xchg
aaa
jo
scas
xor
mov
sbb
nop
or
sub
pushf
cltd
inc
pop
frstor
cmpsb
ds
lret
sbb
cmovg
iret
outsl
out
adc
mov
cmp
pop
jge
ss
shll
mov
or
enter
pop
pop
enter
leave
pop
movsl
sub
fsubp
testl
or
decl
jmp
dec
sbb
scas
mov
dec
pop
inc
outsb
cmp
jns
pop
push
push
daa
xchg
lock
clc
push
and
xor
cmpsl
outsl
xor
push
mov
jmp
xchg
mov
insl
int
pop
mov
pop
rcrl
xor
jge
fidivl
inc
push
push
jae
enter
xchg
in
fdivrl
notb
aas
push
ds
dec
fwait
cmpsb
aaa
not
sbb
mov
fst
hlt
lods
hlt
cmp
inc
aam
push
inc
arpl
stc
sub
jo
ja
adc
and
orl
aas
mov
loopne
push
enter
inc
lret
push
arpl
jbe
aam
scas
jmp
xchg
inc
lods
adc
push
inc
xor
lahf
loop
movsb
repz
idivl
das
cmc
out
cwtl
mov
push
dec
pusha
or
mov
dec
add
jb
ret
push
fucom
js
xor
adc
dec
sbb
adc
in
push
cmpsb
cmp
sub
xchg
pop
jns
cmp
jg
pop
adc
sub
xchg
hlt
push
sub
pushf
ror
enter
mov
hlt
rorb
mov
enter
into
in
sub
lock
inc
imul
pop
sahf
xchg
mov
cli
shl
pop
mov
mov
mov
shl
xor
mov
rol
and
out
mov
aaa
fdivrs
lods
cwtl
lret
adc
mov
lcall
sub
inc
scas
pop
sbb
nop
inc
inc
xchg
loop
nop
imul
call
stos
push
xor
cmpsl
shrl
icebp
and
sarl
adc
add
jo
xchg
aas
inc
pusha
add
test
pop
bound
push
lahf
sarb
add
movsl
fisubrl
dec
mov
add
add
lret
in
jns
push
mov
imul
adc
jecxz
or
ds
mov
or
dec
mov
dec
sub
mov
and
ljmp
dec
out
mov
js
pop
lret
adc
jmp
adc
nop
sbb
in
push
pop
out
lods
inc
stos
movsl
shrl
into
push
xchg
es
in
cmp
shll
or
adc
out
lcall
push
inc
lods
sub
inc
dec
mov
cmp
mov
push
ret
in
popa
mov
das
test
pop
inc
cmc
add
inc
ljmp
cld
ss
xlat
push
jp
iret
pop
add
xor
adc
fnstsw
dec
xchg
mov
and
cmp
dec
push
xor
ds
call
testb
push
xchg
dec
stos
push
adc
shrl
cmpsl
imul
xchg
inc
pushf
sbb
or
add
aaa
aad
sub
shll
inc
adc
leave
out
data16
sub
sbbb
mov
ss
inc
cmpb
addl
mov
sarb
ss
jp
sets
gs
js
fidivs
shr
add
jo
sbb
inc
fstpt
cs
gs
xchg
call
jmp
mov
jg
push
into
and
inc
and
pusha
jg
sbb
test
decb
sbb
xor
push
xchg
out
ret
jmp
pop
push
aad
xchg
dec
xorb
mov
pushf
cmpsb
mov
add
das
or
ss
ss
mov
adc
mov
push
xchg
mov
je
and
push
mov
icebp
sbb
in
js
inc
xlat
cmp
test
fstps
xor
xchg
add
xchg
shll
js
pop
pop
xchg
ffreep
add
mov
sub
aad
fs
sbb
sub
hlt
pop
xlat
lahf
iret
sahf
arpl
add
and
mov
test
fdivs
jbe
sbb
jae
addb
out
mov
inc
xor
pop
add
insb
test
scas
sbb
inc
pop
pop
cmp
adc
mov
popa
push
adc
mov
dec
popf
xor
xor
sub
out
push
idiv
insl
gs
mov
jle
dec
jno
xchg
in
xor
shld
jge
inc
ror
das
jno
pop
pushl
pop
jb
add
mov
mov
shll
inc
nop
adc
cmpsl
cmp
push
cwtl
in
fildll
sub
pushf
lods
scas
push
ret
cmp
ret
mov
mov
mov
imul
cli
mov
nop
push
cld
cmp
outsb
or
nop
rcr
or
inc
xchg
sbb
xor
aad
xor
or
mov
push
sbb
push
sub
test
xchg
mov
mov
jp
pop
push
push
shrb
cltd
int
cmp
mov
dec
jbe
lret
sbb
sbbb
nop
inc
push
and
subb
fimuls
mov
ss
pop
dec
lock
enter
in
adc
xchg
sub
aad
jp
repnz
jge
call
fsubl
out
jne
add
sbb
cs
lret
sbb
push
push
inc
fs
shlb
cmpsl
xor
dec
mov
inc
pushf
rorb
jp
cli
pop
adc
mov
push
and
in
loope
popf
lock
scas
add
sbb
and
lret
lea
stos
add
je
inc
cmpsb
mov
mov
fs
sti
setnp
xchg
push
inc
lret
jg
sub
sbb
lret
pushf
fstps
cmp
and
cmp
int3
loopne
sbb
cmpsl
xlat
and
cltd
sbb
inc
or
loope
add
shlb
pop
push
cs
int3
jmp
push
pop
mov
dec
subb
pop
fwait
out
lcall
xor
aad
add
xchg
jge
mov
cli
push
subb
hlt
xchg
orl
test
add
gs
inc
cs
les
fs
jo
pop
xchg
inc
sub
sbb
push
jno
cs
add
cwtl
xchg
stos
xchg
cli
xor
xchg
fsubp
mov
popf
lahf
sahf
xor
pop
leave
inc
mov
in
mov
sub
dec
hlt
jl
mov
lds
xchg
cmp
fwait
xor
sub
ljmp
test
je
cmpl
cmc
push
lds
in
lret
aad
shrb
xchg
sbb
mov
jp
jnp
pop
movsl
adc
sbb
movsb
sbb
mov
stc
xor
or
call
lds
mov
mov
jmp
sub
xor
lock
inc
and
dec
in
jno
nop
popf
add
icebp
pop
or
push
inc
pop
iret
add
mov
cmc
pop
pop
mov
adc
or
cmpsb
ljmp
in
inc
pop
adc
or
xor
xchg
push
out
test
sbb
sbb
mov
sahf
and
jo
fcmovbe
sbbl
lret
or
jmp
pop
cmpsw
add
sub
cmp
pop
pushf
dec
popf
mov
daa
sub
icebp
jnp
mov
xchg
pop
cmpsb
mov
mov
add
repnz
adc
jae
fiaddl
xor
stc
test
aam
adc
sbb
push
pop
push
push
fs
clc
stos
pop
pop
imul
icebp
lock
push
lret
lret
adc
dec
lcall
mov
dec
sti
cmp
and
add
xchg
test
sbbb
out
ret
movsl
pop
sbb
dec
add
jle
xchg
lret
mov
sub
ret
in
jge
add
ds
fisubrl
ljmp
fs
fcoml
test
fmuls
or
stc
sti
arpl
xchg
mov
jns
cmp
dec
inc
mov
in
dec
cmp
das
int3
fldenv
push
xchg
cmp
mov
outsb
lods
add
outsb
fcomps
shrb
insl
and
push
outsl
inc
mov
dec
fwait
or
and
pop
adc
fidivrl
sbb
nop
push
js
mov
ljmp
mov
sub
mov
adc
cmp
mov
scas
and
push
jnp
arpl
or
pop
cmp
icebp
movsl
les
push
scas
clc
dec
adc
mov
inc
sub
push
pop
inc
les
xchg
mov
jo
mov
pop
addl
out
xchg
push
in
mov
fcoml
ds
cwtl
shrw
cwtl
and
jmp
adc
daa
sbbb
add
inc
push
fmul
sbb
js
ret
jb
fsubr
xchg
mov
mov
add
aad
sub
xor
stc
ficomps
pop
cmc
mov
adcb
rep
pop
lret
adc
out
cmp
pop
dec
lock
mov
jb
scas
cmpsl
mov
shl
popf
cmp
mov
mov
or
mov
or
std
fnstsw
push
andl
xchg
fcoms
mov
in
xchg
lea
test
jbe
xorl
sbb
or
insl
stos
mov
xchg
cmpsb
mov
jg
fistl
jmp
xchg
subb
daa
and
jmp
std
pop
and
pop
sbb
andb
outsb
es
dec
test
xor
in
stos
shlb
jl
out
push
jns
mov
insb
push
fimull
push
xchg
fstp
fldcw
std
sub
aad
sbb
fsubs
xor
arpl
xchg
imul
adc
js
les
loope
pop
xchg
jno
mov
xchg
xor
add
xor
in
into
sub
pushf
pushf
ljmp
mov
jmp
mov
lods
add
pop
pop
aas
clc
into
add
shl
or
pop
mov
shlb
out
mov
leave
test
or
push
xor
cli
pop
int
and
jmp
sub
or
dec
in
aaa
jg
stc
movl
sub
lods
and
jae
mov
pop
mov
pop
adcb
out
jp
pop
in
mov
pop
jno
bound
add
or
fs
inc
xor
shrl
insl
mov
xchg
ret
mov
xchg
dec
data16
and
test
or
imul
mov
out
adc
lock
sbb
leave
push
test
and
xor
push
push
pop
inc
mov
js
jne
dec
pop
sbb
push
and
fists
sbb
ret
shlb
addr16
push
cmp
sbb
je
mov
jns
and
mov
pop
mov
test
mov
pop
nop
sub
lods
lret
je
or
orl
cmp
push
mov
ljmp
loope
mov
or
dec
pop
adc
sub
jae
pop
pop
xchg
mov
mov
jo
pop
or
xor
leave
mov
in
hlt
dec
sbb
cwtl
xchg
sbb
enter
sbb
out
pop
xor
mov
mov
jle
jle
popa
mov
adc
jno
les
loop
mov
mov
cmp
adc
mov
je
mov
adc
or
sub
cli
cmp
jge
bound
mov
inc
dec
and
cli
push
out
enter
jmp
sub
or
and
sahf
outsb
in
imulb
jg
loopne
sbb
jcxz
clc
inc
mov
or
cwtl
xchg
add
fiaddl
adc
out
xchg
pop
lock
mov
add
add
lret
pop
mov
cmp
jns
mov
fs
push
insl
dec
push
insb
aad
outsb
lcall
add
pop
mov
aam
cld
popa
push
push
adc
xor
and
and
mov
repnz
lods
add
or
and
or
cmp
mov
loope
icebp
sbb
xchg
xchg
lcall
dec
ret
cltd
into
jmp
js
mov
gs
fistpl
cwtl
fsubrl
sti
ficompl
dec
jno
jmp
mov
je
out
gs
scas
sub
fistps
jp
out
loope
add
out
push
pop
jno
insl
and
arpl
scas
inc
xchg
push
std
pop
dec
cli
into
ffree
xorb
add
ror
push
and
xchg
jmp
xlat
data16
mov
mov
cs
pop
out
jne
insb
mov
lock
stc
ljmp
xor
negb
test
pop
test
cmpl
mov
and
jp
ror
movsl
inc
pop
sub
mov
aaa
dec
sub
add
jb
das
test
mov
xor
jne
in
out
mov
out
pop
sbb
sub
ss
mov
aam
fmull
push
cmp
movzwl
mov
lret
aad
dec
xchg
fs
nop
adc
jg
mov
rorl
outsl
push
push
loopne
mov
pop
ja
mov
bound
mov
ja
inc
mov
or
jno
cmp
sub
and
xor
scas
sub
outsl
rcll
out
dec
sbb
cmp
test
add
lods
mov
jl
rclb
fildl
jecxz
out
lahf
and
pop
sub
mov
jnp
cmpsb
dec
jnp
scas
fdivrl
sbbb
add
shlb
leave
pop
daa
jne
or
and
nop
sub
shlb
sbb
or
mov
das
add
out
shll
mov
jne
push
pop
sub
xchg
cmp
push
scas
or
sbb
pop
lods
imul
jp
cmp
or
lock
sbb
push
xchg
pop
dec
ss
xchg
mov
xchg
xor
imul
jo
lcall
xchg
or
or
xor
dec
sub
movsl
out
das
pop
jmp
aad
mul
push
scas
push
pop
inc
sub
fnstsw
dec
sahf
jecxz
outsl
sbb
repnz
popw
jno
mov
mov
pop
lock
mov
mov
jnp
cmp
nop
or
inc
cmp
fnstcw
negl
shlb
nop
adc
iret
mov
movsb
push
sbb
dec
add
pop
push
jbe
daa
xor
mov
adc
ljmp
sub
push
nop
sti
xchg
adcl
xchg
dec
xor
out
adcb
je
mov
push
jmp
mov
xchg
pop
xor
out
adc
fidivs
adc
and
ficomps
sbb
ret
jle
push
lods
leave
repnz
inc
add
lock
cmp
lret
aas
cmp
aas
data16
cltd
cmp
pop
sub
or
sub
push
pop
dec
out
mov
sub
in
jmp
daa
scas
lahf
jp
inc
dec
outsb
scas
int3
enter
and
push
pop
bound
mov
call
sbb
lret
movsl
jge
jbe
sbbb
xchg
scas
push
jne
or
subl
push
in
lahf
and
sbb
jl
test
scas
in
add
and
fwait
mov
scas
sub
lea
sub
test
xor
insl
insl
sub
add
lret
or
insl
cli
mov
in
stos
ljmp
mov
cli
fwait
cld
xchg
jb
js
adc
sbbb
inc
push
pop
lods
add
jno
out
subb
mov
jnp
iret
jecxz
xor
and
divb
xor
ljmp
xchg
in
gs
push
push
mov
mov
jp
mov
ret
inc
popa
subb
mov
adc
and
adc
pop
leave
int3
cmpsb
pop
xchg
xchg
and
outsl
pop
jmp
adc
sbb
mov
lahf
inc
clc
cli
mov
repz
sub
mov
bound
sti
sbb
mov
aad
push
adc
inc
rcrb
imul
and
cmp
negl
xor
pop
stos
aam
stc
jb
aaa
ret
stc
sbb
jmp
inc
les
cmpsb
mov
xchg
inc
fcomp
lea
loop
dec
imul
not
jae
loopne
and
ss
fs
test
daa
push
xor
mov
push
lret
jno
dec
fistpl
xchg
jns
test
dec
xchg
lods
test
inc
ret
ss
jmp
ljmp
ds
test
pop
inc
mov
fmull
fdivl
mov
ljmp
adc
mov
sub
ss
test
xchg
inc
jl
xchg
mov
aas
ss
hlt
test
pop
sub
mov
add
mov
and
mov
sub
sub
xchg
mov
xchg
xchg
xor
mov
jo
fsts
out
inc
je
rorb
push
inc
aad
aaa
cmpsl
add
pop
mov
push
push
push
in
add
ss
mov
mov
mov
push
push
cld
rcl
dec
je
pop
xchg
es
in
cwtl
lcall
cli
add
into
shll
nop
lds
pop
or
cltd
jle
xchg
inc
cmp
inc
pop
mov
pop
adc
cmp
enter
xchg
pop
mov
add
inc
sbb
fsubrl
pop
mov
jnp
arpl
test
sbb
inc
cmpsl
dec
sbb
daa
inc
jno
adcb
cmp
mov
dec
shrl
cld
addr16
mov
lea
loope
pop
jne
insl
es
int
mov
call
dec
cmpsl
pusha
rorl
cli
cmpsb
mov
push
hlt
arpl
enter
inc
movsl
es
sub
mov
ja
sbb
xchg
inc
xor
inc
pushf
stos
adc
mov
std
popa
shlb
rcll
push
cmp
or
xchg
call
or
ja
cwtl
dec
mov
notl
shlb
ss
push
cmp
adc
dec
ret
gs
and
adc
les
cmp
popa
and
dec
lret
outsb
loop
xor
scas
and
xor
push
sub
fldenv
add
adc
and
movb
rorb
push
push
add
imul
sbb
xchg
cmp
jl
fistps
or
insl
lret
xor
pop
popa
movsb
aas
and
cli
orb
enter
int3
ret
and
lcall
popf
pop
fldt
push
mov
pop
scas
imul
sti
clc
stos
mov
fmull
ret
push
xchg
sbb
mov
cwtl
jge
scas
rcl
outsl
push
push
mov
dec
pop
push
scas
fsubrl
into
dec
popf
nop
dec
in
fwait
jnp
sbb
cmpsb
mov
popf
and
pop
mov
cmp
jbe
add
sbb
inc
sub
jb
sbb
lahf
cwtl
inc
pushf
push
sub
mov
inc
arpl
pusha
shrl
or
stos
outsb
pusha
or
pmuludq
mov
lret
xchg
jg
sbb
repz
pop
sbb
mov
inc
cmp
in
dec
test
pop
lcall
xor
mov
adc
in
mov
popf
pushf
insb
fs
inc
mov
cwtl
in
iret
ja
sub
fidivrs
fimull
in
mov
adc
fs
inc
dec
sbb
sbbb
and
insb
xchg
cwtl
js
mov
inc
lret
ja
mov
out
hlt
cmp
and
js
addr16
fdivrs
sub
icebp
and
add
pop
mov
rep
dec
pop
xchg
add
std
arpl
dec
ja
inc
inc
mov
iret
xchg
mov
test
push
in
scas
jae
in
push
mov
into
adc
pop
xchg
rorb
inc
adc
mov
mov
pop
out
and
das
cmp
rol
mov
ss
mov
ret
xchg
fs
int3
and
mov
sbb
push
lret
fidivs
push
adc
sbb
mov
lods
mov
stc
lcall
and
sub
jae
fcoml
inc
pop
fld
sbb
cmpsl
mov
test
cmp
pop
mov
mov
jle
jbe
ret
xchg
jno
add
pop
add
movsl
mov
inc
fs
loop
idivl
aas
lods
hlt
mov
cmp
push
mov
scas
jecxz
loopne
mov
fimuls
ljmp
pop
je
cmp
outsb
icebp
cld
aaa
mov
dec
fs
xor
clc
test
mov
int
jmp
rorb
jne
xor
insb
mov
pop
rol
mov
jo
dec
lds
mov
xor
lods
xor
out
push
or
cmp
xchg
adc
lahf
fs
cmp
roll
mov
or
mov
adc
sti
lds
lret
aam
sahf
enter
push
mull
les
or
push
or
pop
jnp
sub
jbe
adc
jecxz
arpl
movsl
rorl
mov
xchg
adc
push
ds
std
lds
out
xchg
int3
adc
jg
adc
mov
pop
out
pop
xchg
pop
xchg
push
sub
ret
sbb
jg
dec
jge
popf
imul
test
loope
out
dec
lea
lea
xor
enterw
loope
cmp
xchg
int3
jo
dec
push
jo
inc
jae
push
xchg
ds
xor
cmp
or
mov
push
push
cld
sub
xchg
or
sbb
dec
popf
fisubrl
add
inc
dec
icebp
push
mov
and
dec
outsl
stos
jmp
sbb
jl
xchg
push
in
lock
sbb
mov
and
dec
xchg
push
lea
push
xor
dec
aas
test
pop
push
test
dec
dec
fisttps
sub
adc
and
mov
lahf
dec
dec
in
mov
fwait
cmc
sub
aas
cmp
lcall
xor
rcll
jecxz
test
sbb
insb
lahf
or
loop
adc
mov
mov
cmpsl
pop
pop
dec
inc
les
mov
jb
loope
cmp
and
mov
popf
dec
bound
fmull
gs
mov
into
cwtl
push
ret
mov
mov
xor
xchg
xor
push
xchg
test
xor
out
lret
in
cmp
xchg
cmp
mov
mov
sub
or
fstpt
ljmp
aam
push
inc
pop
lock
into
inc
xor
dec
cmp
data16
fwait
xchg
addr16
xchg
repz
or
leave
dec
pop
jle
jmp
nop
add
mov
mov
dec
insb
jns
xor
leave
mov
out
push
or
in
xchg
pop
xchg
inc
stos
and
ds
cmpsb
xchg
imul
add
xchg
test
push
pop
inc
pop
test
mov
mov
lcall
jno
loope
cmovg
xor
and
cmp
mov
jo
sub
into
jmp
icebp
dec
ss
and
adc
mov
dec
xchg
out
push
mov
mov
mov
mov
xchg
xchg
mov
je
inc
pop
add
std
push
mov
jge
jo
repz
int
jmp
mov
rcrl
mov
pusha
adc
push
sub
sub
aam
sub
mov
leave
test
shrb
bound
jl
ds
mov
cltd
cmp
rolb
mov
pop
ljmp
mov
lret
int3
outsb
popa
push
adc
into
test
ret
xor
mov
mov
mov
adc
pop
pop
pop
popa
inc
out
mov
fadds
adc
push
mov
mov
jle
aad
jecxz
in
xor
testb
mov
jle
out
xor
scas
push
loope
shl
push
jge
lds
test
dec
sahf
jns
ds
fistps
adc
sbb
inc
push
push
or
out
cmpb
xor
test
loop
imul
pop
ret
dec
and
dec
adc
pop
and
sub
inc
mov
ret
test
mov
and
lret
js
shl
fnstsw
loop
nop
pop
dec
insb
clc
inc
sub
cmp
stc
mov
in
mov
shll
and
scas
and
ja
mov
dec
mov
dec
jge
lods
pop
ljmp
or
es
repz
sub
push
sub
scas
rcll
gs
and
lret
or
insl
sub
aad
sbb
add
ljmp
jnp
stos
rcrl
mov
dec
add
push
sbbb
mov
in
xlat
dec
mov
addr16
pusha
jnp
mov
loop
jmp
mov
xor
jecxz
mov
adc
bndldx
add
jne
jmp
pop
das
ret
mov
dec
imul
mov
mov
sbb
pop
ret
mov
push
cmpsb
movsb
stos
inc
and
insl
xor
push
int3
pop
leave
adc
xorb
xor
dec
imul
addr16
push
push
push
jmp
pop
lcall
or
test
xor
add
inc
icebp
xor
les
or
hlt
int
add
mov
push
stos
imul
mov
pop
repnz
or
mov
jg
lds
xchg
pop
fadd
mov
push
lret
mov
dec
cmp
add
jb
sub
dec
xor
pop
rcrl
pop
adc
shlb
or
mov
mov
dec
cs
aaa
loop
sbb
lea
xor
push
ret
negb
jnp
dec
ret
fwait
in
sub
aam
xor
in
loop
nop
cmpb
fisubrl
mov
dec
ja
sti
aas
scas
push
and
fwait
and
push
and
cmp
sub
subl
in
mov
add
ja
pop
adcl
cmp
jae
pop
popf
pop
test
xlat
lret
insl
add
fmul
popf
adc
xchg
xor
lret
inc
ret
call
inc
push
ret
xor
jbe
stc
mov
push
daa
sub
imul
xchg
jle
adc
mov
adc
and
filds
in
ss
jno
mov
dec
int
cmp
in
sub
xlat
sbb
mov
stos
dec
mov
test
sub
out
push
test
pop
jmp
cmp
add
or
mov
out
inc
popf
adc
push
fucomip
sub
xchg
test
sbb
pop
scas
out
sub
sub
mov
test
outsb
push
or
int3
pop
push
and
std
sub
fbstp
sub
dec
stos
sub
cld
popf
sub
push
pushf
insb
ljmp
shrl
call
inc
das
or
inc
les
sbbl
add
cmp
fadds
movsl
mov
xchg
sarl
push
in
dec
pusha
jbe
push
or
hlt
iret
jp
stc
adc
mov
pop
jp
aam
jp
out
mov
daa
or
shl
push
rcrl
enter
mov
jne
jo
sbb
fadds
mov
xchg
pushf
pop
popa
sub
cmpl
xchg
sub
jmp
jne
xchg
add
pop
xor
int
in
sbb
enter
mov
xor
push
lods
cwtl
aaa
into
dec
sbb
dec
lods
subl
and
imul
mov
lahf
ds
push
xchg
mov
xorl
mov
mov
fwait
xlat
dec
adc
mov
jns
ret
neg
xor
comiss
pop
adc
lret
pusha
ret
shlb
pop
cmp
cmp
mov
adc
push
loop
add
clc
adc
sahf
popa
hlt
pushf
push
xchg
loope
add
lods
xor
add
add
andl
xchg
xor
out
sub
xchg
inc
cmp
push
inc
lds
test
movsl
jle
ffree
rcr
push
mov
dec
sbb
cmpsl
lods
hlt
jle
xchg
pop
xor
andl
clc
out
xor
cwtl
test
lods
cmp
cmp
inc
pop
outsb
xchg
mov
mov
push
cmpsl
dec
out
out
sub
decl
add
ret
sbb
or
jo
fisttps
or
inc
xorl
push
mov
add
mov
lret
dec
sti
inc
push
add
out
flds
jns
fs
jmp
jge
call
out
cmc
lahf
or
pop
pop
cltd
jo
sbb
jecxz
or
sbb
icebp
in
adc
cmp
xlat
cmp
inc
fbstp
out
jp
xor
testl
jb
add
cmp
lock
push
out
imul
test
xchg
lock
test
pop
mov
cmp
push
cltd
ret
jbe
push
jno
mov
pop
in
and
xchg
adc
cmc
popa
jae
push
insl
montmul
cmpsb
inc
aad
test
or
daa
popf
push
pop
mov
mov
mov
adc
push
pusha
addr16
lods
rorl
das
ret
cmpsb
jge
and
insb
sbb
sbb
cld
sub
jge
stos
icebp
adc
sbb
add
dec
inc
and
pop
pop
or
aas
incl
mov
add
mov
mov
jb
movl
adc
jg
adc
cmc
lret
push
test
addr16
bound
or
ss
lret
cmp
xchg
out
cmp
les
pop
jg
mov
imul
jae
sbb
inc
push
fsubrl
push
xor
ds
jnp
jg
lret
cmpsb
add
or
sbb
sbb
scas
ficoml
out
push
inc
jo
outsb
sbb
mov
jns
inc
lahf
outsb
adc
sub
xchg
mov
dec
std
cmp
adc
call
pop
xor
nop
shl
jno
movsb
xlat
pop
xchg
subb
sub
loope
pushf
inc
lcall
xchg
dec
push
insb
arpl
sbb
mov
mov
adc
iret
je
or
js
bnd
das
outsb
and
push
and
packssdw
mov
call
nop
inc
ror
jnp
out
loop
inc
sub
mov
push
mov
stos
cmp
std
rcr
pusha
loopne
fidivl
rep
add
mov
outsb
xor
sbb
std
add
dec
push
pop
ds
fwait
adc
push
mov
stos
adc
mov
jle
xchg
pop
ficomps
ss
int3
lds
or
movsl
dec
rcrb
pop
ficomps
push
add
fidivrl
inc
mov
dec
jbe
xchg
cwtl
data16
andb
cmp
or
cltd
mov
int
in
js
add
xchg
in
fistpl
jne
mov
jbe
pop
dec
mov
mov
icebp
pop
lret
arpl
pop
adc
ja
adc
cmp
push
in
loopne
negb
cmp
adc
xchg
push
xor
lods
lods
test
loop
push
lods
adc
or
push
arpl
inc
xchg
and
pop
ljmp
les
leave
mov
xchg
into
divl
xchg
cmp
push
leave
nop
sti
xor
cli
mov
adcb
call
test
jmp
arpl
stos
jle
pusha
aas
push
inc
adc
prefetch
sub
sub
mov
mov
add
repz
rolb
stos
and
rorb
mov
rcll
pop
adc
bnd
out
orl
mov
xlat
popa
subl
jno
lods
sbb
add
push
mov
cmp
inc
push
add
mov
imul
ljmp
mov
dec
mov
sub
lock
adc
iret
sub
je
xlat
rcrb
movsl
sub
lret
mov
add
mov
push
mov
and
addl
je
push
sbb
xorl
mov
sub
int3
adc
cwtl
loopne
dec
adc
icebp
cmp
arpl
rorl
lds
push
add
es
xchg
inc
out
out
pop
cmpsb
pop
scas
add
jae
mov
movsb
mov
lds
les
jge
and
lret
aaa
xor
and
mov
pusha
lods
cld
in
inc
jecxz
mov
in
in
mov
xchg
mov
mov
ss
fstpl
inc
push
xchg
add
push
inc
ret
leave
repnz
mov
pop
aas
lahf
vsqrtsd
stc
sbb
xchg
dec
dec
sbb
push
shll
sbb
cltd
inc
and
sub
and
loopne
stos
fcompl
or
cwtl
or
xchg
jmp
out
xor
cmp
out
std
jp
adc
fdivp
scas
and
and
jg
outsl
ja
inc
sub
fdivrp
stos
lcall
out
push
jl
sub
or
pop
mov
pop
loopne
adc
add
jl
call
push
pop
adcb
insl
pushf
loope
les
out
das
pop
xor
sub
scas
cld
std
lret
std
lret
adc
sub
jb
dec
add
cmp
xchg
add
insb
mov
or
pusha
mov
xor
scas
mov
mov
test
pop
adc
fwait
and
mov
jo
rclb
inc
sub
pop
add
pop
ljmp
push
and
fmuls
mov
inc
outsb
repnz
lock
cmc
xor
mov
sub
mov
push
and
out
out
xchg
mov
or
add
pop
mov
adc
lahf
sar
idivb
cmp
data16
push
push
sahf
pop
ds
push
push
cmp
or
inc
and
fisttpll
adc
inc
imul
cmp
cmp
jmp
nop
out
pop
mov
in
dec
adcl
or
push
jl
push
ret
mov
adc
jo
or
inc
outsl
lret
insb
addr16
orb
xchg
add
and
mov
rcll
mov
mov
cltd
xor
js
sbb
sbb
daa
iret
inc
dec
decb
xlat
jg
pop
imul
data16
incb
in
sbb
pop
adc
push
jnp
sbb
repz
xchg
ss
or
lds
cli
mov
es
sti
xchg
lods
mov
icebp
push
mov
mov
adc
push
fdivr
es
adc
cmp
mov
dec
add
pop
rolb
outsb
push
js
mov
and
xchg
lock
push
xor
pop
int3
xchg
sahf
mov
lret
jp
inc
sbb
shrd
cmc
bswap
js
adc
push
push
cmp
pop
mov
sarl
lds
push
push
fwait
into
adc
mov
das
jp
adc
pop
dec
and
sub
bound
stos
inc
cld
idivb
mov
cld
popa
inc
sbb
pop
lds
daa
or
pop
or
outsb
dec
jnp
sahf
subb
movsb
cmp
xchg
stos
call
dec
fisubl
lock
push
mov
adc
add
iret
dec
jb
outsl
lahf
mov
and
stos
cmp
out
lds
lret
call
or
outsl
pop
sub
sbb
lahf
jno
mov
fildl
and
jge
mov
fisttpll
loop
bound
and
xchg
xchg
add
inc
xor
cmpsl
pop
out
pop
add
sbb
or
xchg
and
lret
dec
test
daa
lahf
addr16
sub
or
rolb
xor
aaa
jl
mov
mov
ja
out
rclb
icebp
mov
fadd
cmp
lret
push
cltd
bound
push
push
jbe
adc
jl
mov
in
cmp
dec
daa
adc
mov
xchg
jp
lcall
mov
not
aad
jp
cmpsl
flds
inc
dec
dec
push
int3
mov
mov
outsl
roll
int3
push
or
mov
pop
out
lcall
pop
imul
lock
lret
or
sub
mov
cmpsb
mov
push
in
dec
std
call
pop
rolb
ret
out
stos
add
mov
sbb
or
or
cwtl
shlb
and
jne
dec
xor
cmp
imulb
xchg
pop
andl
enter
loope
bound
ror
pop
popa
mov
and
sbb
outsb
jmp
and
int
sbb
push
xor
xchg
xor
clc
in
jle
rcll
push
xchg
hlt
jmp
push
mov
or
pop
movsb
outsb
push
inc
cmp
push
ret
or
jnp
data16
mov
lret
add
pop
or
repnz
inc
add
and
push
popf
adc
out
rclb
xor
and
jae
fs
divb
and
jnp
popa
xorb
mov
mov
fdivrs
sub
xchg
in
cmp
pusha
xor
sbb
in
cmc
push
movsb
roll
pop
ret
sbb
int
push
cwtl
or
lods
mov
fcomip
inc
sbb
adc
mov
pop
mov
loope
pop
mov
mov
icebp
aaa
es
insl
add
mov
sbb
or
inc
sbb
jle
and
sub
mov
leave
out
mov
jmp
sub
add
dec
xchg
and
scas
cmpsb
leave
mov
outsl
mov
push
mov
movsb
adc
cmp
scas
imul
add
lods
push
movsb
addr16
cs
movsl
mov
lcall
imull
nop
xor
fisubrs
cli
movsl
mov
data16
xchg
push
pushf
rol
clc
dec
lds
in
out
orl
int3
dec
xor
mov
mov
add
xchg
mov
sub
sub
pop
imul
aam
or
or
push
je
dec
inc
fdivs
cmp
shrb
lahf
or
pop
pop
scas
jle
jmp
adc
lret
pop
outsb
mov
in
cwtl
xor
cmpsl
adc
cmpsl
push
in
jnp
push
negb
sbb
lret
pop
inc
insb
rcrl
test
cmp
in
add
push
sub
stos
add
test
dec
cmp
pop
enter
daa
push
jle
stos
push
mov
mov
pop
pop
nop
xchg
fs
mov
pusha
push
adc
daa
cmp
lret
ss
stos
xchg
or
mov
leave
in
xchg
iret
fs
lock
mov
movsb
rcrb
sub
sub
lods
pop
mov
shll
pop
bound
into
or
push
push
pop
inc
pushf
dec
les
push
cmp
xchg
nopl
adc
iret
jbe
ror
xchg
lahf
pop
sbbl
mov
inc
inc
test
ss
repnz
xchg
les
js
push
xchg
or
or
push
mov
arpl
sti
add
test
mov
mov
movsl
pop
lods
adc
xchg
adc
out
lods
push
or
hlt
loopne
scas
leave
mov
lcall
or
lock
cmp
loope
mov
xor
es
shlb
sbb
xor
or
jne
rol
mov
inc
in
ror
call
xchg
not
in
adc
xchg
int
out
bound
sbb
call
dec
stos
mov
mov
insb
lret
testl
inc
sbb
pushf
jecxz
jecxz
mov
xor
dec
sahf
loop
xchg
imul
pop
faddp
jmp
stos
std
aam
cmp
adcl
add
gs
daa
outsb
sub
mov
xchg
sbb
adc
cmp
arpl
jmp
xchg
divl
nop
or
mov
cmp
or
std
incb
ss
mov
jne
push
mov
inc
lea
cltd
sbb
mov
lock
xchg
orb
jge
lcall
pop
shrb
rcrl
push
xchg
sub
cmpsl
dec
mov
mov
repnz
mov
sbb
aaa
mov
pushf
push
push
loop
sbb
fstpt
andl
test
push
in
jl
push
jae
mov
jae
bound
adc
mov
mov
xor
adc
inc
clc
mov
cli
inc
test
int3
je
push
mov
cmpsl
add
ja
jne
inc
push
sub
and
lea
lds
loopne
xor
fnsetpm(287
cmp
leave
pop
xor
cs
imul
mov
xchg
cltd
sub
mov
fcomps
repnz
lds
dec
mov
add
push
sti
into
mov
movb
mov
xor
jnp
sarl
mov
jbe
dec
xchg
adc
lret
mov
int3
push
xchg
sub
out
test
jge
aas
test
inc
ljmp
fisubrs
addl
adc
mov
cld
repnz
and
jg
jnp
imul
cwtl
xchg
into
sbb
imul
out
and
jnp
and
jae
arpl
js
lds
es
mov
mov
movsl
sub
out
pop
add
cmp
sbb
je
call
pusha
popf
lret
xlat
jo
fsubrs
aaa
adc
scas
inc
pop
sub
xor
jmp
movsl
out
dec
inc
leave
mov
das
and
or
pusha
mov
xchg
xchg
jno
push
push
ja
add
pop
xchg
iret
punpcklwd
jb
popf
xchg
pushf
sbb
aad
das
cmp
ljmp
loope
orb
ds
imul
pop
adc
adc
leave
mov
movsb
mov
add
push
xlat
ret
dec
xlat
add
into
inc
jns
pushf
cmp
in
and
pop
push
pop
pop
mov
mov
cmpsb
mov
cmp
popa
outsl
repnz
inc
pop
dec
orb
mov
fiaddl
sub
pusha
jl
xchg
repz
mov
mov
pop
jne
movsb
dec
stos
xor
xor
jnp
shll
decb
mov
add
add
push
mov
lcall
xchg
test
scas
sbb
ret
mov
push
jne
xchg
xchg
je
mov
test
dec
mov
iret
js
in
mov
dec
push
sbb
negl
xor
push
inc
pusha
pushf
inc
fmull
lods
sahf
fisubrs
xchg
xchg
cs
jge
aad
xchg
aad
push
imul
sub
test
or
leave
push
inc
xor
xchg
pop
or
ja
dec
cltd
data16
icebp
inc
ja
loope
shrb
pop
or
cmpsl
push
pop
mov
mov
rcrl
and
jecxz
bound
inc
xchg
xchg
cld
mov
jno
insl
mov
mov
pop
test
mov
mov
lret
sbbl
dec
ja
lcall
mov
shlb
call
push
mov
test
mov
rcll
int3
lret
sub
jno,pt
fcmovnbe
dec
stos
sbb
gs
aam
fisttpll
mov
ljmp
bound
mov
push
jnp
mov
xchg
movsb
sbb
out
pop
inc
push
pop
cmpb
loope
dec
xlat
mov
or
sbb
mov
addl
or
clc
rclb
cld
pop
sbb
call
push
cmp
push
out
fstpl
lcall
pop
in
xlat
pop
mov
push
roll
test
test
mov
pushf
icebp
mov
hlt
sbb
jo
jle
pop
push
leave
xchg
mov
stos
movsl
cmp
and
test
dec
fisubs
add
adc
xor
xor
fsubrl
and
xlat
or
dec
add
jne
or
pop
in
or
pop
stc
mov
lock
aad
sbb
fists
mov
movb
xor
out
jne
add
push
pusha
jns
jbe
jl
cwtl
or
lods
sbb
ljmp
aas
cmp
out
pop
dec
sbb
mov
mov
xchg
push
cmp
xlat
mov
pop
xor
xor
mov
loope
jp
outsb
add
in
insb
jmp
fbstp
mov
int3
mov
ds
mov
mov
fisttpll
int
xor
into
lahf
lea
inc
les
je
out
lahf
cmp
push
and
mov
add
inc
inc
mov
push
cwtl
dec
fcomps
outsb
outsl
or
mov
mov
add
cs
loopne
arpl
test
cmp
sbb
adc
push
in
xchg
popa
mov
rolb
add
push
ds
cli
push
sbb
sbb
push
pop
xchg
sbb
jl
inc
mov
sbb
pop
mov
or
loope
movl
lods
icebp
jp
push
inc
movsb
jne
pop
sahf
in
fsubr
negb
rcrb
push
loopne
adc
cld
mov
inc
mov
add
add
mov
pop
data16
jo
add
testb
int3
pushf
sahf
mov
sub
mov
testb
and
adc
push
fwait
or
call
jmp
je
add
xchg
cmp
fisttps
jg
jne
xor
lock
cltd
adc
lret
fistpl
movsb
fldenv
cmp
repz
ss
jge
sub
push
fimull
push
imul
stos
sbb
jl
sub
sbb
mov
fildll
pop
int3
mov
add
fisttps
xchg
jnp
inc
in
inc
or
jne
jg
cmp
mov
xchg
ret
dec
rol
lea
mov
cltd
mov
stc
data16
mov
sbb
mov
decb
xchg
lret
add
dec
mov
or
push
fisubrl
lret
sbb
sbb
jecxz
and
jno
imul
in
and
jle
lcall
xchg
jbe
inc
in
pop
xor
cmp
je
shlb
sti
das
inc
mov
mov
lcall
or
and
adc
icebp
xchg
fdivrs
idiv
ja
repz
and
mov
mov
aam
inc
xor
out
aad
mov
test
xchg
test
stos
pop
loop
cmpsl
xchg
leave
pop
pop
add
mov
mov
or
dec
aad
or
cmp
push
mov
pop
sahf
clc
lea
pop
movsb
shlb
mov
test
dec
mov
adc
or
test
xchg
ret
inc
mov
lcall
in
pop
nop
in
notl
enter
cwtl
js
ja
dec
lahf
jg
rcrb
mov
insl
out
mov
leave
pop
and
mov
and
jno
imul
hlt
iret
add
stos
and
push
inc
and
testb
enter
out
icebp
stos
ja
push
pop
xchg
fwait
jnp
ja
imulb
fsub
jp
jmp
mov
loopne
cs
jle
lds
push
sbb
insb
shrb
int
in
scas
idivl
aam
movsl
xchg
lea
stc
imul
jp
ljmp
mov
pop
dec
dec
sub
mov
jl
into
dec
xor
int
sbb
adc
inc
and
daa
xor
adc
xorb
sub
out
adc
sub
inc
mov
mov
notb
cmp
mov
sahf
test
lea
mov
mov
xchg
es
push
out
movsb
and
mov
loope
insb
pop
push
sbb
loopne
int3
adcb
push
mov
punpckhwd
into
jp
imulb
push
dec
mov
arpl
xlat
sub
jmp
out
lret
fmuls
sti
xor
call
js
outsl
inc
mov
int3
lcall
inc
outsb
mov
and
cld
lret
inc
insl
jge
insb
push
dec
jnp
dec
and
or
fnsave
lahf
ficomps
adc
imul
es
cwtl
adc
mov
pushl
push
in
push
stos
jnp
fisubs
and
xchg
lahf
mov
cmp
lahf
and
adc
hlt
push
mov
push
jecxz
out
icebp
aad
mov
fdivl
adc
orl
add
cld
jb
adc
cs
or
clc
xchg
push
das
xchg
or
popa
add
cmp
lret
fs
inc
mov
and
xlat
xor
loop
enter
lods
push
adc
push
jecxz
loop
xor
filds
repnz
inc
xchg
pusha
aaa
pop
and
in
lods
sub
or
int
std
lods
loopne
sub
adc
test
pusha
xchg
xor
pusha
call
pop
lea
inc
clc
push
mov
in
inc
and
pop
push
sbb
loopne
loope
test
jne
cmp
dec
arpl
fidivs
shr
push
dec
les
mov
scas
rclb
stos
xchg
mov
inc
mov
mov
filds
inc
stos
xchg
movsb
scas
xchg
gs
jl
xor
arpl
cmpsl
stos
add
fdivrs
test
jo
test
jl
iret
aaa
lret
jns
popa
rcll
loop
xchg
sub
out
xor
adcb
push
loopne
aad
xchg
hlt
pushw
dec
iret
xor
adc
jbe
imul
ljmp
int3
add
in
insb
mov
xor
scas
pop
mov
pop
cmpsb
pop
shrb
xchg
fldt
mov
xor
sahf
mov
ss
test
push
xchg
add
push
push
pop
enter
fwait
push
movsb
mov
popa
and
jg
daa
insl
leave
cmp
jmp
xchg
sbbl
lock
aaa
in
test
call
clc
xchg
push
inc
cmp
push
outsl
cmpsl
popf
int
cmc
test
jb
pop
push
or
cwtl
fsin
test
mov
out
iret
xlat
add
stos
cmp
in
mov
test
push
jae
inc
int3
mov
loopne
pop
add
iret
test
dec
jge
jbe
ja
and
jae
rcl
xchg
jnp
cmp
mov
xchg
aas
xor
inc
dec
add
xchg
cmp
mov
or
jae
outsb
cmp
mov
aas
aad
je
sbb
pop
aad
mov
ljmp
mov
push
xlat
inc
xchg
jg
xor
sarb
cmp
sbb
adc
adc
or
pop
push
jno
pushf
push
add
jno
sbb
cmc
out
push
push
mov
push
and
mov
and
jb
mov
inc
ror
pop
enter
shll
push
insl
cmp
xor
loope
test
mov
xor
fcomp
push
jno
loop
cmc
shll
adc
pusha
jbe
cmp
jbe
add
push
mov
aam
jp
jbe
add
call
pop
mov
bound
andl
adc
and
add
add
or
and
jecxz
dec
repnz
dec
mov
xchg
addl
dec
ds
rolb
mov
cmp
add
sub
mov
aas
push
movsb
xchg
sbb
adc
out
adc
sub
insb
jne
add
fsubrs
push
insl
inc
rorl
pop
xchg
cmp
js
mov
and
xchg
push
mov
out
in
or
inc
inc
xor
and
jbe
aaa
and
fldenv
mov
xchg
andb
loopne
add
inc
mov
adc
sub
movsb
jp
xor
and
add
std
pop
and
aam
sub
mov
push
cmp
pusha
bound
push
push
movsl
xor
addr16
subb
push
add
frstor
dec
mov
mov
push
push
inc
out
scas
push
and
sub
xor
negb
in
add
mov
inc
or
and
inc
sbbl
cmp
cmpsb
cmp
mov
mov
jne
xor
inc
sbb
mov
imul
mov
sub
ret
xchg
test
shll
fstpl
sbb
fmuls
push
sbbl
into
push
daa
inc
int
mov
addr16
mov
jmp
jnp
jle
xor
mov
addb
pop
fwait
xchg
ja
or
inc
mov
cwtl
push
push
lock
imul
inc
data16
out
dec
cmovs
jl
and
rolb
int
rclb
fsubl
in
loopne
mov
push
fwait
loope
sub
test
cli
or
sub
stc
in
cmc
pop
sbb
dec
adc
or
push
xchg
and
dec
dec
sbb
sub
shll
pop
mov
pop
jnp
inc
pop
lret
push
callw
fdivl
daa
leave
add
arpl
mov
mov
xlat
in
mov
loop
adc
xor
mov
jmp
imul
pushf
jl
gs
mov
adc
js
mov
inc
cmc
shll
dec
push
cmc
jmp
and
mov
leave
mov
cmpsb
lret
addl
imul
ror
dec
push
cmpsl
out
into
popf
push
jmp
push
mov
adc
jle
jmp
xor
shlb
in
xor
dec
movsl
cli
cmp
or
sbb
scas
cli
or
adc
pop
repnz
stc
ljmp
pusha
cwtl
icebp
int3
daa
add
test
fidivs
jo
ficoms
mov
out
dec
push
shll
call
xchg
leave
enter
ret
sub
and
cmp
cmc
dec
movsb
xchg
mov
adc
adc
sti
into
int3
fwait
scas
orl
jecxz
xchg
loopne
cld
lds
icebp
fwait
jg
inc
mov
sarl
adc
jo
roll
push
pop
mov
mov
fyl2xp1
xor
adc
shrb
cmp
cmp
repnz
add
test
jns
popf
ljmp
jbe
rol
into
jmp
push
or
push
sbbb
xchg
hlt
mov
call
adc
out
sbb
lods
cltd
and
inc
imul
sahf
stos
sahf
push
scas
or
fwait
outsb
jle
mov
arpl
imul
xchg
and
and
push
push
adcb
mov
lea
mov
sub
pop
xor
mov
add
fildl
cmp
cmp
xchg
cmp
inc
xlat
stos
aas
inc
stos
push
stos
test
jne
orl
mov
push
les
gs
cmp
pop
movsl
dec
sbb
jp
dec
fmuls
into
mov
scas
adc
int
push
push
out
aam
outsl
dec
cltd
lds
xchg
gs
sbb
jns
test
mov
sahf
jbe
leave
cmp
shll
jo
adc
sti
dec
sbb
xlat
dec
enter
xchg
xor
divb
push
cmp
les
test
xlat
gs
sbb
jb
fs
fadd
xor
ficoml
jecxz
aad
jbe
mov
call
addr16
fcmovb
aam
insb
jnp
ret
and
add
inc
xchg
sub
and
sbb
mov
filds
ss
jne
add
stos
ljmp
call
xlat
ja
pop
addb
int
dec
jo
cs
xchg
fucomp
ss
dec
push
rcll
imul
cmpsl
ss
cmp
negb
int
and
xchg
jge
ret
cmp
rol
and
je
push
mov
and
xor
stos
loope
pop
sub
arpl
mov
inc
jb
loope
lcall
xchg
cmp
test
lods
pusha
cmc
sbb
les
push
or
aaa
pushl
xchg
rol
cmp
pop
xchg
jb
mov
stos
popa
jbe
dec
cmp
and
sti
xchg
in
cmpsb
fdivrp
and
sahf
mov
pop
popa
or
shlb
jnp
dec
xchg
imul
add
fsubrp
jecxz
cmp
out
hlt
nop
inc
scas
adc
fcmovne
xchg
push
icebp
sbb
lds
sub
cli
adc
cmpsb
push
or
shll
je
daa
sahf
sub
jp
ficoms
inc
lret
shll
outsb
outsb
nop
push
sbb
jae
mov
shl
std
gs
jo
movsb
or
adc
push
jecxz
mov
arpl
pop
jp
cwtl
mov
lcall
rcr
cmp
mov
lods
aad
pushf
lock
xchg
int
test
mov
btl
jb
lret
bound
into
pop
fmull
or
retw
int
adc
push
out
sbbb
icebp
jno,pt
cmc
cmp
inc
mov
xchg
in
into
add
cmp
in
sbb
or
or
in
flds
mov
repnz
jo
cmp
je
mov
mov
xchg
test
sbb
sub
call
add
std
ljmp
test
jb
mov
pop
out
or
in
dec
cmc
repz
jle
into
insl
sub
jmp
pop
lods
cmp
sbb
or
lcall
test
adc
mov
mov
xchg
pop
inc
and
mov
in
dec
mov
insb
cmp
fadds
xchg
je
xor
cmovp
xchg
xor
scas
jno
mov
sahf
jae
pop
out
dec
push
and
lea
cld
mov
push
sbb
xor
and
cmp
jnp
das
sbb
dec
or
mov
dec
mov
mov
sti
lock
lahf
mov
fs
bound
in
sti
adc
aad
or
mov
into
xchg
push
jne
leave
mov
loope
icebp
outsl
dec
cwtl
divb
and
jmp
push
dec
mov
xor
ljmp
negl
std
mov
movsl
sbb
loope
mov
ret
popf
mov
bnd
xchg
dec
pop
push
jmp
pop
jle
add
jmp
jo
shr
repz
int3
mov
jo
mov
pushl
ss
mov
ja
fidivs
jge
fwait
adc
icebp
and
into
inc
loop
add
es
mov
ret
roll
or
popf
sub
js
mov
out
icebp
dec
mov
pop
ret
push
mov
mov
jg
fcmovbe
cmp
cmp
lcall
repnz
repnz
jl
and
pop
js
xor
mov
jp
sbb
xor
pop
dec
fldl
cmp
lods
fidivrl
fcoml
add
push
mov
lds
cs
dec
adc
dec
dec
in
dec
push
les
outsl
lret
int3
scas
loop
or
sbb
aad
popa
in
add
cmp
icebp
mov
jnp
push
add
lret
adc
jg
and
je
sub
cmpsb
inc
cltd
adc
mov
dec
inc
loopne
push
mov
sarb
arpl
lahf
sarb
cmp
mov
pop
push
into
dec
aas
aas
jle
sti
jecxz
pop
outsl
dec
sub
xchg
push
in
ret
mov
repnz
pop
sbb
add
pop
mov
inc
imul
cmp
inc
inc
dec
xor
cmp
pop
out
shrb
push
jne
sub
pop
adc
cmp
mov
sahf
js
cmp
mov
sbb
in
sar
inc
dec
out
sar
test
mov
movsl
mov
jp
xchg
lds
cmp
mov
sbb
jge
loop
adc
and
je
mov
bound
and
mov
push
xchg
xor
lcall
cmpsb
mov
mov
flds
sbb
notl
or
sub
addr16
lret
xor
loopne
lret
int3
dec
sub
or
jl
pop
pop
adc
xlat
jmp
int
cltd
scas
fisttpll
pop
xchg
or
stos
ret
adc
in
sbb
mov
xchg
lret
out
mov
daa
sub
icebp
movsb
in
jp
or
out
mov
in
pop
jae
movsl
add
insb
inc
jb
movsl
cmpsb
push
std
dec
aam
fdivs
push
stos
sbb
jb
jns
adc
inc
pusha
cld
xor
je
pop
scas
dec
rolb
dec
jecxz
js
es
sbb
stc
mov
inc
das
push
data16
pop
call
movsl
jbe
lock
push
outsb
sar
xor
add
jmp
or
shr
or
xor
mov
xor
pop
rcrb
imul
inc
push
or
fnsave
jp
mov
int
popa
cmp
mov
add
dec
add
sbb
inc
jecxz
insl
fimuls
leave
sub
test
mov
and
mov
jecxz
xchg
scas
jp
xchg
add
movl
inc
clc
and
popa
cld
movsl
cld
push
pop
cmp
cmc
pop
shlb
fisttpll
out
jl
xchg
sub
or
lret
lods
addb
shlb
fwait
pop
insl
add
dec
mov
popa
jp
sub
push
cmp
rorb
stos
icebp
repnz
mov
mov
jbe
push
push
pop
inc
xchg
cwtl
xor
das
jmp
sub
fs
andl
cmp
out
sub
mov
or
cmp
cs
inc
hlt
push
call
sub
mov
inc
loop
mov
nop
es
jmp
mov
loop
mov
les
xor
out
push
adcb
hlt
ss
imul
insb
jns
fcmovnu
sub
lret
sti
cld
jp
stc
and
movsl
and
sub
add
mov
dec
das
jmp
pushl
add
and
sbb
fnstcw
bound
jb
xchg
inc
call
inc
sub
cmp
int
sbb
test
cmpsl
inc
cltd
cwtl
orl
push
addr16
fwait
add
or
push
pop
scas
fcmovne
ds
cmp
mov
int3
dec
mov
inc
mov
lret
sarb
cmp
addr16
stos
adc
push
mov
shl
gs
pop
inc
lret
sbb
aas
cmp
xchg
clc
push
mov
adc
add
fistpl
mov
push
xchg
xchg
push
aam
ficoms
pop
mov
xor
xor
mov
test
addr16
lea
or
nop
inc
pusha
jp
sbb
mov
mov
pop
xor
mov
xchg
mov
clc
loopne
adc
inc
ljmp
pop
cmpsl
negb
lahf
mov
aam
jecxz
lcall
add
pop
mov
push
inc
mov
push
int3
xor
adc
jg
or
fistpll
lret
or
outsb
roll
sbb
mov
push
dec
inc
sub
push
popf
xorl
shr
cmp
dec
mov
xchg
sarl
out
inc
cmc
test
and
testb
sub
sub
dec
and
out
fs
mov
push
cmp
sbb
jmp
jnp
pop
insb
fstpl
jne
lcall
push
xchg
sub
add
adc
fs
rcll
inc
mov
pop
pop
loop
push
adc
jecxz
pop
push
clc
mov
dec
xor
or
test
js
pop
mov
cmp
sub
ds
icebp
fsubr
jg
outsb
sbb
aas
pop
sbb
xchg
arpl
inc
out
cli
sbb
push
push
mov
loop
and
movsl
fs
icebp
jp
inc
mov
push
inc
shrb
lret
mov
roll
std
test
xor
es
push
scas
loop
mov
inc
iret
loopne
cli
stc
push
sahf
in
arpl
cmc
lea
or
movsb
pusha
push
sbb
nop
xor
sbb
mov
icebp
xchg
xchg
mov
popf
stc
mov
inc
xchg
jge,pn
mov
scas
out
cmp
ss
fs
ret
negb
mov
push
popa
flds
int
int
mov
push
sub
push
xor
loopne
stc
ljmp
bound
sbb
stos
out
iret
cmp
popa
es
mov
pop
xor
fcmovbe
loop
jae
loope
cmpsl
mov
call
cmp
mov
inc
jnp
jmp
sub
orb
int3
xlat
test
xor
stc
xor
sub
adc
push
push
int
repz
jnp
push
cmp
daa
in
int
cmp
xchg
dec
mov
iret
xchg
fdivs
mov
outsb
dec
out
pop
bound
imul
cmp
pop
and
sub
mov
fidivrl
inc
push
not
cmpsl
mov
mov
dec
mov
push
out
mov
jo
push
inc
lahf
int3
mov
in
mov
ljmp
push
lock
repnz
jo
mov
xchg
fisubrl
out
and
fs
or
lods
xchg
enter
fdivs
adcb
mov
jne
jno
sbb
adc
mov
pop
xchg
es
sub
imul
sbb
sub
dec
aaa
mov
adc
xchg
or
cwtl
xchg
xor
mov
sbb
cwtl
jns
mov
pop
push
ret
ret
ljmp
xchg
cmp
out
push
xor
mov
fwait
inc
lds
aad
dec
loop
jmp
sub
and
dec
adc
mov
hlt
push
movsb
xchg
int
dec
push
mov
movsl
and
pusha
ds
push
push
inc
cld
and
aas
dec
push
adc
mov
fsubl
push
sub
or
push
sub
and
xchg
sub
lret
and
std
or
jg
mov
clc
clc
adc
rcl
pop
fwait
push
daa
sbb
push
sub
loop
shll
mov
fisttpl
jnp
scas
daa
and
in
mov
jg
or
cmp
loop
xor
cli
dec
mov
aam
outsl
into
int
stos
cmp
incl
int
cs
sub
jmp
jbe
stos
sub
or
test
jae
imul
xchg
lret
inc
popf
xchg
add
push
sbb
sbb
repz
cmpb
rcr
imul
cmovs
outsb
ds
push
iret
inc
test
inc
sub
std
and
xor
adc
loope
xor
adc
adc
loop
mov
pop
xor
xchg
mov
ja
add
icebp
into
pop
insb
leave
jg
xchg
mov
cmpsb
jge
push
enter
idivl
xlat
out
jnp
and
aad
mov
mov
push
cltd
xchg
mov
test
mov
mov
pop
mov
stos
daa
jne
out
adc
xchg
fsubrp
test
mov
scas
mov
bound
lret
dec
inc
cld
dec
js
lods
mov
dec
les
int
inc
outsb
out
mov
inc
xchg
loope
pop
jns
sbb
mov
cmp
scas
cmp
aad
mov
mov
push
lea
pop
pop
negl
clc
xchg
out
cld
mov
add
gs
cmpsl
pusha
xor
gs
mov
jae
cmc
fisttps
mov
mov
scas
sbb
ja
add
lds
insl
sti
sub
pusha
cmc
jge
nop
mov
out
fnstenv
aaa
jecxz
mov
cmp
sbb
mov
mov
cmp
out
mov
ljmp
xchg
sbb
mov
icebp
cwtl
jo
mov
xchg
or
cmp
mov
xchg
and
sti
dec
fsubs
sti
mov
inc
push
in
hlt
mov
sub
lods
aam
or
jae
mov
insl
dec
in
cmpsb
sbb
jno
lods
push
lds
outsb
adc
subl
xor
out
das
push
xchg
xchg
xchg
dec
jg
jmp
adc
xchg
lea
adc
inc
pushf
xchg
cmp
cmpsl
inc
mov
lret
and
inc
dec
insl
push
adc
jnp
or
sbb
sub
jle
mov
jg
add
subb
inc
sub
rcrl
je
test
mov
lods
inc
push
pusha
inc
dec
jne
aas
add
push
sub
rcl
scas
inc
push
or
inc
iret
adc
and
imul
mov
mov
and
stos
add
loopne
sub
or
ja
dec
mov
pop
mov
dec
xor
and
xchg
mov
cmp
test
mov
inc
rolb
jle
mov
mov
dec
inc
mov
cltd
out
leave
sbb
loope
pop
push
pop
loopne
dec
sbb
cmc
push
sahf
sbb
or
fildll
or
out
xchg
dec
mov
sahf
shrb
mov
repz
and
xchg
out
sbb
jg
dec
ja
sbb
lods
repz
push
loope
scas
or
in
jl
test
imul
sahf
or
inc
mov
inc
push
lds
push
and
or
inc
call
imul
les
ret
test
add
cmpsl
or
popf
dec
dec
pop
adc
jl
rclb
cmc
sbb
xchg
clc
lods
jmp
lock
xor
xchg
dec
pop
aas
pop
test
xchg
stos
imul
push
xchg
pop
test
jg
mov
xorl
or
pop
jae
rclb
es
call
ljmp
test
repnz
or
push
push
mov
lods
xchg
cmp
cmp
rolb
and
xor
xchg
cmp
sub
jecxz
clc
rorl
stos
shlb
psadbw
push
lods
or
fmuls
ljmp
ror
push
test
orb
sahf
add
imul
stos
orb
and
mov
jge
ret
dec
or
js
mov
out
inc
sub
fcmove
dec
call
sub
iret
push
push
mov
dec
push
or
sub
lcall
jge
or
mov
iret
adc
jle
dec
adc
cmpsl
xchg
and
lea
fdivr
jbe
aaa
or
cmpsb
push
xor
xchg
adc
jecxz
cmp
call
dec
mov
jp
or
dec
out
aaa
std
in
scas
mov
xor
adc
in
mov
add
lcall
sub
jno
idivl
adc
in
divb
js
inc
add
fwait
mov
jb
popa
xor
adc
dec
add
leave
push
xor
mov
in
lods
ret
call
and
nop
mov
imul
sbb
add
nop
xchg
and
std
popf
into
nop
std
jmp
fwait
sbb
addr16
xor
cmpsl
popa
mov
rclb
bound
sbb
lds
pushf
fnstcw
in
mov
cwtl
insb
xchg
adc
lahf
mov
imul
add
jmp
out
sub
sub
sub
or
pop
movsb
repz
mov
mov
mov
icebp
push
into
hlt
jns
push
out
shrl
push
xor
dec
ds
rcl
out
loope
lods
push
test
aas
lret
lret
imul
sbb
mulb
xor
pushf
movsl
jb
scas
pop
mov
xor
mov
mov
push
jl
shrb
and
dec
popa
mov
shlb
cltd
das
mov
jle
mov
xchg
pushf
jecxz
lret
into
mov
jp
dec
test
jno
push
sub
or
or
xlat
xchg
inc
pop
or
xchg
mov
fimuls
cmovg
repnz
icebp
or
mov
pop
std
lods
nop
popa
ljmp
rcl
scas
cli
ret
mov
pop
sbb
or
xor
mov
add
push
cmp
push
push
pop
push
xor
or
mov
stc
testb
xor
hlt
hlt
mov
jae
imulb
dec
cmp
scas
mov
cmp
mov
dec
mov
pop
lret
inc
dec
or
icebp
xor
imul
mov
test
dec
xor
mov
in
imul
mov
xor
xchg
pop
cmpsl
push
sub
pop
jecxz
jge
mov
xchg
mov
aad
xor
outsb
cmc
mov
cmp
ficoml
enter
mov
imul
jmp
in
jb
ss
scas
dec
and
adc
jnp
xor
cmp
mov
push
mov
mov
dec
adc
ss
insl
mov
xchg
xchg
roll
xor
or
mov
dec
inc
or
or
dec
sbb
pop
inc
inc
add
movsl
popf
dec
shrl
mov
lret
insb
xchg
add
push
clc
pop
arpl
sti
fwait
clc
loope
arpl
sbb
cmp
mov
rclb
mov
sti
or
jecxz
into
les
jb
mov
cmpsl
xor
mov
push
rorl
movsb
fmuls
jb
movb
lods
cmp
addr16
testb
add
push
cmpsb
out
shll
sub
in
repz
push
ja
cwtl
cmp
loopne
les
fwait
adc
orb
sbbl
lods
dec
clc
adc
rolb
mov
pop
add
and
pop
add
arpl
movl
insb
xor
in
popf
subl
or
push
imul
or
in
push
jns
add
add
mov
ja
popf
sbb
xchg
scas
fcomps
int
mov
gs
and
bound
jmp
ret
cmc
ret
xor
mov
aas
and
mov
push
xor
mov
mov
test
aad
cmpsl
xorb
mov
sbb
sbbl
cmp
sub
and
faddl
js
ret
inc
fimuls
mov
fsubl
mov
xchg
fbld
leave
pop
mov
adc
bound
mov
pinsrw
cmp
dec
pop
xlat
das
iret
push
jp
loop
testb
sub
imul
ljmp
stos
in
repnz
fnstsw
sbb
pop
mov
insb
xor
sbb
pop
iret
xor
jg
mov
lods
cmp
dec
in
pop
aaa
and
and
mov
mov
and
pop
orl
jle
jge
addr16
xlat
jo
das
scas
push
pop
push
test
stos
jmp
into
xchg
cli
hlt
xchg
cmp
fwait
sbb
xor
in
lds
push
icebp
xchg
ja
or
andl
fdivrs
jbe
notb
add
adc
dec
sub
movsl
xchg
lods
cmp
jbe
imul
les
pop
inc
xchg
cmp
gs
sub
or
push
int3
sbb
mov
push
dec
rolb
imul
jns
jb
pop
xchg
faddl
and
fidivl
aad
aaa
sar
ss
cmp
xor
xchg
mov
scas
mov
or
clc
sub
daa
ja
notb
das
push
cmc
pop
pop
or
fnstenv
orb
push
adc
sbb
or
add
xlat
ret
jl
scas
out
movsb
rcrl
push
dec
fisttps
rolb
lock
mov
fstpl
fadds
mov
sub
addr16
std
cmp
movsl
addr16
adc
fmulp
lods
icebp
out
fdivr
movsl
cmpb
pushf
aam
inc
aaa
push
enter
nop
pop
flds
testb
ret
fidivl
jecxz
jnp
loop
fldl
pop
sub
call
xchg
dec
xor
xchg
push
or
mov
or
mov
movsb
lahf
adc
nop
pop
jecxz
cs
pop
aam
pop
andb
ljmp
test
pusha
xor
or
out
enter
and
aaa
inc
mov
jb
fwait
fidivrl
loop
and
jne
mov
add
stos
and
std
fdivrl
pop
shlb
push
das
pop
jp
ret
dec
mov
out
scas
or
xchg
dec
in
push
adc
or
fisttpl
xor
pop
mov
imul
scas
test
jp
or
gs
jb
xchg
dec
sub
mov
mov
mov
aas
icebp
pop
cmp
sarl
or
or
scas
mov
leave
xor
cmp
scas
jle
or
into
mov
inc
jbe
sar
rcll
sahf
imulb
out
mov
sub
xchg
dec
out
sbb
test
movsl
mov
lcall
xchg
sub
scas
repz
in
sti
repnz
push
mov
push
adc
sub
enter
dec
mov
cmpsl
add
sbb
addl
sti
fimull
hlt
mov
lods
cmp
or
test
xchg
and
fldl
lret
pop
adcl
outsb
outsb
dec
pop
jne
jp
xchg
repz
mov
mov
addb
and
push
push
ret
sub
shlb
shrl
jge
cmp
icebp
add
movsl
push
jnp
cmp
out
fucomip
sbb
ja
or
fidivrl
ret
shll
or
jb
xor
adc
popa
negl
pop
sub
adc
subb
jle
mov
popf
call
stc
lods
gs
lret
xchg
mov
xor
ja
inc
jge
mov
sub
fcompl
lea
insb
push
test
cmp
inc
inc
mov
mov
adc
jae,pt
push
outsl
add
mov
xchg
loopne
test
testl
mov
xchg
in
sbb
xor
ret
jnp
jnp
mov
mov
fildl
repnz
aad
cmpsl
test
repnz
outsb
lahf
sub
jae
or
insb
mov
xor
inc
lahf
lret
sbb
fdivp
int3
xchg
jo
pop
sub
call
pop
jnp
xchg
je
insl
jp
cmp
cltd
xor
repnz
sub
add
pop
lret
xchg
repz
out
scas
sub
sub
lock
clc
fidivl
imulb
jp
mov
cmp
filds
xor
mov
mov
scas
or
mov
or
ret
xchg
push
arpl
push
sar
je
sub
lods
out
push
push
sub
dec
fistl
push
fcompl
lds
mov
dec
mov
popa
mov
and
dec
xor
aam
cwtl
fs
or
fcoms
loope
xor
mov
sub
xchg
subb
les
lahf
call
fmull
std
mov
loop
in
push
ret
sbb
pop
sub
mov
fs
inc
loop
repz
jns
mov
test
adc
sub
out
mov
mov
aam
lret
icebp
pop
push
xor
pop
test
repnz
cmpsb
push
adc
cmp
lock
out
inc
ret
arpl
cld
jno
lret
pusha
data16
pusha
pop
sbb
clc
dec
or
or
cmc
xor
adc
iret
scas
mov
out
push
in
out
lcall
roll
dec
pop
mov
jmp
pushf
insb
xor
jno
pop
enter
push
and
lret
and
punpcklwd
sub
fwait
movsb
sub
in
ss
lds
mov
dec
or
sahf
into
gs
jp
sbb
cmp
fisubs
jns
mov
pushf
movsb
movsb
mov
pop
sbb
lcall
sub
je
jae
popa
ror
loop
jbe
clc
xor
cmc
xor
add
scas
ficomps
sahf
push
enter
daa
mov
sub
pop
test
aas
sub
nop
fwait
out
imull
xchg
arpl
or
push
mov
inc
add
fs
and
imul
lcall
sbb
outsl
and
aaa
pop
cmc
ja
xor
dec
xchg
mov
pop
int3
push
jmp
or
pop
sub
jecxz
mov
dec
push
pop
jno
ja
bswap
lahf
cmp
adc
inc
mov
pop
inc
int3
leave
frstor
lahf
movsb
mov
inc
int3
mov
adc
mov
scas
add
cmp
lret
sub
inc
ljmp
xchg
iret
std
ss
jp,pn
out
adc
out
add
outsl
sbb
ret
add
sub
sub
or
ret
adc
mov
jmp
xchg
sbb
mov
stc
scas
lock
fldt
fstps
js
ret
push
into
mov
push
xchg
ljmp
jl
push
cmp
mov
dec
or
bound
imul
dec
sahf
hlt
imul
inc
or
outsb
mov
in
loope
int
add
pop
fninit
mov
inc
mov
xchg
cmpsl
jb
add
lret
pop
mov
push
add
pop
cli
push
or
inc
jb
push
outsl
ficompl
rolb
and
xorb
sbb
repnz
xchg
shl
lcall
or
in
test
adc
cmpsl
lret
fisubrs
test
rcrl
dec
cmp
adc
dec
icebp
pusha
pusha
jle
iret
icebp
cltd
test
lahf
dec
bound
bound
or
div
outsb
inc
mov
in
bound
mov
mov
jge
sbbb
jl
divl
push
jno
pop
xchg
xlat
repnz
clc
sbb
cmpsb
and
hlt
sbb
lods
dec
test
ljmp
push
inc
pop
mov
mov
pop
int3
dec
mov
stos
cmp
je
push
xlat
loopne
mov
adc
testl
pop
adcb
lcall
mov
mov
or
inc
sbb
aas
and
mov
mov
mov
push
test
jecxz
dec
and
or
jbe
cmc
inc
repnz
jno
push
or
push
cmp
mov
xchg
nop
rcl
or
jp
xor
sub
mov
cld
mov
test
and
jmp
sub
pop
inc
push
mov
jge,pt
cmp
add
sbbl
dec
imul
push
into
out
inc
insl
mov
ret
jne
clc
xchg
int3
sbb
lea
push
stc
int3
add
cmp
aad
pop
aas
mov
ret
jl
sub
or
fisttps
test
mov
xorb
int
or
sarl
xchg
and
sub
aam
or
inc
inc
sbb
ja
loopne
aam
mov
aas
dec
lea
and
int
xchg
xor
dec
out
rcr
outsl
sbb
pop
add
adc
dec
sahf
push
jmp
mov
fldenv
cmp
fiaddl
inc
out
ret
push
test
sahf
bound
mov
fs
xor
ret
fisttps
out
push
add
je
maskmovq
mull
mov
mov
out
adc
outsl
or
aas
mov
cmpsb
outsl
loope
rcrl
push
lret
inc
adc
andl
mov
sbb
jbe
lret
push
mov
inc
xchg
cmp
sbb
lcall
cmp
mov
dec
inc
add
cmpl
mov
adc
dec
in
ja
dec
dec
subb
test
xor
pop
enter
xchg
aas
cmpsb
mov
cwtl
cmc
adcl
inc
or
xchg
jbe
add
daa
mov
push
rcl
mov
loopne
sub
das
clc
lods
sub
imull
test
in
cmp
push
mov
data16
popf
or
adc
frstor
mov
idiv
sub
in
popa
cmp
lcall
dec
pop
insb
dec
and
push
cmp
jle
and
cmp
mov
inc
xor
sbb
into
mov
popf
mov
add
movsl
pop
jne
mov
xchg
in
mov
movsb
test
pushl
or
mov
xor
shll
fsub
dec
sbb
cld
sub
imul
mov
push
dec
adc
and
sub
rorb
push
fs
jae
rcrl
mov
mov
xchg
loop
pusha
fwait
out
cmp
adc
cs
add
cmp
cmp
roll
mov
int3
inc
cmp
in
pop
loopne
push
mov
movsl
add
or
pop
shrl
inc
add
add
ss
pop
ljmp
and
lret
add
out
mov
std
or
outsl
ss
out
lods
inc
jg
add
xchg
ret
cs
jmp
cmp
mov
cmc
ljmp
lods
mov
pop
adc
sarl
jp
jge
push
loopne
out
mov
cld
or
js
lock
lods
xchg
hlt
or
inc
push
lock
push
dec
scas
dec
mov
mov
cmp
jae
je
popa
loopne
dec
mov
lods
stc
fcom
nop
cmp
mov
cmpsb
cmpps
xchg
shll
jne
arpl
test
mov
clc
iret
pop
adc
test
das
out
sub
sbb
cmpsl
push
add
and
pop
mov
cs
test
xor
and
cld
xlat
sbb
mov
fidivl
mov
xorl
or
xchg
and
cmp
dec
push
push
mov
adc
in
jne
mov
xor
fld
or
pop
sbb
jbe
xchg
sub
mov
stos
loope
jle
cmp
adc
push
ljmp
lcall
lea
cmpsb
test
dec
pushf
lret
icebp
and
aaa
mov
xchg
es
xor
repnz
lcall
icebp
lock
out
shll
sbb
xchg
sbb
fsubrl
cld
xor
jno
cmp
shrb
mov
movb
lcall
scas
in
je
stos
cwtl
cs
jl
cmpsl
mov
mov
shr
cwtl
sub
jo
inc
into
push
mov
icebp
testb
mov
in
mov
cmp
dec
bound
xlat
mov
xchg
into
lcall
or
dec
cmp
std
jo
imul
mov
or
xchg
repnz
adc
xlat
lds
shlb
mov
sti
sub
stos
cltd
jnp
xor
push
push
out
ds
enter
sub
imul
cmp
mov
mov
pop
mov
fiaddl
jbe
pop
loop
cld
pop
gs
push
hlt
mov
jge
pop
lret
push
xchg
icebp
addr16
dec
xlat
xchg
sub
mov
cwtl
cmpl
rcrl
or
test
ljmp
jb
mov
jbe
push
les
stc
dec
mov
mov
adc
inc
mov
ds
inc
insb
or
ret
push
sub
sbb
mov
cmc
mov
js
lcall
sbb
ljmp
or
gs
inc
jns
jae
adc
into
adc
xchg
scas
pushf
shl
fwait
lahf
sbb
cld
orl
adc
les
fadd
mov
fiaddl
popf
mov
cmp
outsb
sub
push
cld
adc
lods
movb
mov
ret
imul
andb
xchg
inc
pop
pop
rcrl
sbb
les
mov
popf
mov
inc
fiaddl
and
aas
mov
jmp
rclb
xchg
dec
int
jbe
fstpl
daa
pop
xchg
rorb
popa
jnp
cld
jns
sarl
pop
push
push
stc
sub
push
pop
fcmovbe
or
or
insl
imull
sahf
out
jnp
sub
sub
jno
int3
jo
xchg
jmp
outsb
push
jno
sbb
mov
lahf
out
jg
mov
adc
cwtl
mov
or
fistps
xchg
ja
mov
mov
aaa
dec
lahf
lret
lds
inc
push
out
and
sbb
int
addr16
popa
fidivrs
mov
out
sbb
test
sbb
pop
sub
mov
sbb
or
mov
add
shlb
mov
cmpsl
mov
mov
lahf
lahf
and
jns
test
ret
leave
in
std
repnz
stos
mov
out
ffreep
or
mov
cmp
adc
add
or
aad
sub
in
and
jmp
dec
xlat
jne
mov
movsb
or
fwait
insl
test
in
inc
in
jle
fs
push
scas
or
pop
inc
push
cwtl
scas
mov
push
lret
leave
cmpsb
enter
add
mov
adc
xor
or
or
push
mov
outsb
sbb
mov
cs
and
int3
in
fstpt
mov
fisttpl
mov
push
arpl
jae
adc
daa
xor
aam
scas
insb
push
pop
shlb
and
inc
ror
and
fbld
mov
out
pusha
loope
add
jecxz
fs
movsl
xchg
mov
test
or
cmpb
sub
push
lods
fisubl
adc
bound
mov
inc
dec
push
out
adc
mov
adc
iret
call
sbb
adc
popf
add
mov
pop
and
and
adc
cwtl
mov
pop
push
inc
lret
call
inc
cmp
loop
and
add
or
outsb
icebp
cwtl
jne
rcrb
lahf
cmp
pop
outsl
jne
cmpsl
lcall
mov
out
mov
push
fsubr
enter
outsl
inc
push
xchg
push
sub
call
stc
decl
jmp
dec
push
xchg
adc
jg
aas
sahf
outsb
add
inc
push
sarb
lods
mov
flds
adc
incl
in
jmp
dec
lods
stos
xchg
loope
sub
add
rcrb
xor
jb
mov
stc
xchg
xchg
xchg
pop
mov
stos
call
adc
leave
xchg
sub
push
add
sbb
sub
sbb
lret
mov
movsb
pop
mov
orl
adc
jb
jmp
jae
add
push
and
or
insb
idivl
sbb
je
adc
or
dec
pop
or
aaa
sbbl
dec
popf
push
test
sbb
and
adc
add
xor
pop
test
cmpsb
push
jbe
idiv
jne
popf
add
icebp
in
jne
aad
mov
xor
and
enter
jbe
cmc
push
lcall
ja
mov
nop
outsl
int3
mov
mov
ror
cltd
cltd
ret
in
mov
push
mov
sbb
cmpsb
or
sub
cmp
mov
mov
pusha
inc
pop
stc
cmpsb
ljmp
decb
into
inc
push
sbb
js
add
ficoms
ret
movsb
call
imul
arpl
call
push
call
dec
add
repnz
add
fs
popa
add
mov
cltd
fcompl
xor
inc
jbe
jle
adcl
mov
push
mov
pop
or
daa
movsb
roll
or
scas
daa
sub
xchg
xchg
mov
cli
pop
and
cmpsb
pop
fistl
push
in
psraw
test
push
in
cmpsl
in
sbb
lods
movsl
xchg
xchg
incb
insl
fs
in
mov
or
jge
into
lods
cmpsl
das
cmp
mov
sti
test
add
aad
popf
movd
mulb
and
arpl
add
outsl
cltd
push
test
xlat
test
iret
loop
insl
repz
jmp
test
push
arpl
sub
pop
test
int
jbe
sbb
insl
rorl
cltd
xchg
fimuls
int3
xchg
in
aaa
movsb
adc
mov
mov
shrl
lods
cwtl
icebp
inc
and
cmp
std
lock
mov
rorl
leave
out
xchg
mov
jo
imul
ljmp
mov
mov
xchg
jl
xorb
jmp
pmaxsw
xchg
sub
movsb
lcall
pop
jmp
clc
dec
insb
stos
mov
loopne
jmp
aas
ljmp
xchg
push
push
push
inc
sbb
fnstenv
imull
clc
gs
cli
xchg
mov
popl
lea
sub
iret
xchg
sti
or
shlb
dec
orl
fs
adc
lock
imul
cltd
jecxz
lods
jnp
fdivs
push
and
out
repnz
int
pop
lahf
ret
in
popf
mov
and
pop
dec
push
sbb
or
or
aad
scas
insb
or
insb
jmp
enter
insb
cmp
push
stos
cmp
pushf
push
out
inc
add
dec
jns
mov
bswap
mov
pop
dec
push
cmp
mov
in
icebp
fistl
mov
lcall
cli
and
jle
shlb
enter
mov
popf
push
sub
sbb
and
lahf
mov
jae
addr16
mov
mov
dec
pop
popf
mov
mov
insl
pop
pop
mov
ror
or
jns
imull
cltd
push
sub
and
add
cwtl
xchg
push
gs
sub
push
jns
andb
clc
or
or
repz
adcb
ljmp
nop
jne
mov
outsb
les
adc
sbb
clc
outsl
leave
inc
mov
xchg
dec
mov
push
push
jl
cld
nop
out
cmp
lcall
xchg
test
in
push
jg
repnz
inc
pop
outsb
lahf
popl
inc
nop
imul
movsb
mov
loope
dec
adc
mov
shlb
lock
inc
sbb
sbb
mov
fcoml
je
inc
scas
mov
dec
jmp
mov
cltd
pop
pop
or
sarb
jno
add
test
hlt
and
mov
aas
mov
out
adc
sub
dec
and
ljmp
mov
sbb
hlt
nop
lock
inc
aaa
iret
mov
and
jno
push
mov
xchg
sar
mov
or
out
mov
cmpsb
push
adc
neg
stos
sub
lock
pop
ljmp
lea
imul
mov
popa
pop
lds
and
out
and
imulb
inc
fwait
stos
dec
fadd
stc
rclb
mov
or
das
daa
jns
lods
stos
test
hlt
leave
mov
mov
cmp
hlt
clc
xchg
fwait
xlat
or
cmpb
pushf
fnstsw
dec
mov
mov
push
sub
or
jge
imul
push
adc
in
lcall
cmp
imul
xlat
cltd
pop
call
sbb
mov
add
aaa
push
in
addl
and
nop
ljmp
adc
inc
adc
pop
arpl
xchg
mov
ljmp
add
xor
ss
lods
outsl
pop
cmp
mov
in
push
es
or
inc
xor
test
adcb
xchg
add
test
jmp
cmp
enter
outsl
jecxz
inc
ret
iret
xchg
inc
adc
adc
push
jno
pop
pushf
out
movb
hlt
daa
xchg
mov
in
cwtl
mov
push
add
pop
ss
cmpl
pop
ret
mov
es
adc
loope
jnp
xchg
mov
push
cmp
mov
push
mov
xor
add
mov
push
sti
int
ror
sub
pop
pop
clc
xor
mov
loop
shrl
xchg
cmp
mov
in
test
outsb
push
pop
push
xchg
popf
mov
xchg
mov
pop
xor
sbbb
inc
arpl
stc
leave
pushf
xchg
mov
lods
clc
inc
movsl
in
push
incb
ret
mov
loopne
mov
mov
stos
adc
aam
xchg
mov
add
pop
lret
pop
sub
mov
sub
aam
mov
push
xor
popf
outsb
pushf
stos
lret
out
pop
nop
dec
fwait
aaa
das
daa
insb
jb
cmp
sub
xchg
mov
shlb
fs
mov
out
insl
lea
insb
outsb
mov
fisttpl
divl
xor
lret
mov
out
mov
cmp
inc
xor
xor
dec
shr
lahf
movsb
push
sub
mov
in
sub
inc
xchg
out
jmp
test
fs
lods
adc
loopne
cmp
int3
sub
test
rcrl
roll
loopne
dec
adc
fcoms
rorl
sahf
ficomps
loop
test
out
push
leave
pushf
stos
pop
mov
xchg
push
fs
add
test
and
mov
pop
mov
sbb
je
les
xchg
add
jle
or
push
adc
mov
sbb
push
xchg
dec
fiadds
fld
out
insl
popf
sbb
data16
sbbl
inc
jno
fs
mov
out
test
mov
jp
jb
lods
aad
and
outsl
xchg
push
sub
jg
popf
loopne
xor
xchg
out
imul
mov
push
call
inc
gs
xchg
psubq
and
inc
fldl
mov
pusha
add
pop
in
push
fsubs
fcomps
outsb
orl
roll
xor
mov
cmpsl
cmp
mov
push
scas
xor
or
add
sti
data16
lea
and
je
cs
xlat
stos
mov
fldenv
sarb
mov
inc
xchg
dec
pop
sbb
imul
xchg
insl
pop
inc
mov
shr
inc
hlt
sar
inc
scas
lcall
repnz
aam
mov
nop
loop
inc
int3
pop
sbb
push
cmp
cltd
les
sbb
les
int3
ffreep
lcall
shl
jnp
in
push
ret
enter
test
mov
sbb
fstp
loopne,pt
mov
inc
test
push
add
xor
rcrb
and
jecxz
shlb
aaa
mov
lret
stos
jmp
jb
add
sbb
je
and
sub
push
xchg
iret
jle
ret
outsl
add
lods
and
xchg
fs
dec
pop
fwait
sti
ss
into
inc
jne
cmp
dec
iret
mov
or
fidivs
adcb
mov
xchg
mov
inc
test
pop
sub
dec
ret
jle
arpl
in
cmp
bswap
outsb
fwait
jge
jae
xor
iret
xchg
mov
xchg
cmpsl
iret
jecxz
push
xor
inc
out
jg
pop
fidivs
in
dec
mov
dec
out
cld
xor
aaa
xchg
push
lret
stc
cmp
imul
je
fbld
cltd
mov
inc
inc
loopne
insb
stos
adc
movsl
xor
mov
inc
lret
imul
push
scas
in
rcrb
sub
mov
int
push
push
and
inc
and
adc
in
sub
jo
adcb
popf
mov
xchg
xor
cmp
ret
cmpsb
adc
outsb
pusha
add
shrl
mov
js
testl
push
xchg
std
out
adc
ret
dec
jl
dec
jmp
mov
push
inc
cmpl
test
cmp
cmpsb
inc
or
outsl
enter
fimuls
pushl
push
mov
adc
les
in
ret
mulb
arpl
inc
test
js
lea
jle
mov
inc
mov
insb
jp
xor
sbb
jae
add
pop
mov
int
xor
sub
pushf
push
push
jge
pop
push
fsub
insl
out
push
cwtl
mov
into
das
js
mov
xor
add
arpl
adc
mov
int3
mov
stc
rorl
pop
clc
and
jnp
out
push
scas
xchg
cmp
inc
jo
mov
cmc
pop
lahf
cwtl
xorb
and
lahf
xchg
jge
jle
cmpsb
adc
les
ljmp
fsub
sbb
in
lcall
jmp
sarb
testl
mov
mov
insl
jb
pop
cmp
pop
jp
jns
adcb
mov
insl
mov
outsb
stc
sub
or
ret
loop
jns
repnz
or
and
addr16
les
popa
inc
repnz
jge
in
loope
sahf
push
xchg
mov
shlb
adc
jmp
lods
ret
jne
jns
test
fisubrl
or
push
pop
push
lds
cmp
pop
dec
dec
popa
mov
loope
int
jge
dec
test
loop
and
xor
pop
pop
arpl
jp
cmp
mov
mov
stos
cmp
cmpsb
push
in
lds
or
adc
xor
push
ljmp
and
cmp
mov
cld
lcall
xchg
xor
bound
mov
jmp
mov
scas
xor
test
fbstp
movsl
leave
shlb
in
push
cmpsb
add
mov
jle
sub
mov
out
repnz
push
sbb
aaa
enter
loope
sbb
pop
xor
add
sahf
pop
test
add
pop
sbb
mov
aas
or
ds
sub
xor
add
loope
mov
stos
pushf
push
jbe
out
mov
xchg
dec
ljmp
jb
int
outsb
jne
test
dec
mov
lret
fsubrs
mov
jp
adc
lret
mov
add
dec
leave
inc
ss
cli
pushf
aam
add
or
shr
push
das
jmp
stc
and
imul
lock
rcr
call
sub
dec
pushf
rolb
in
xchg
sar
cmp
popf
dec
cli
pop
xchg
sbb
iret
sub
ds
out
pop
jl
nop
cmpsl
les
push
push
add
sarl
push
andb
out
push
sbb
movsb
and
push
arpl
sbb
in
mov
push
ret
push
jno
add
out
in
jecxz,pn
cmp
lods
pop
adc
lock
jge
add
xor
mov
pop
mov
xor
inc
push
push
adc
sub
test
mov
adc
add
shrl
add
mov
jge
jge
lods
jnp
aam
stos
dec
jnp
pop
pop
add
sub
push
dec
rol
jb
sbb
int
push
add
inc
call
push
dec
lds
call
in
repnz
das
inc
pop
stc
mov
sbb
fiaddl
out
jae
fdivrp
xchg
in
mov
out
mov
enter
push
jecxz
push
lea
ret
outsl
mov
jge
push
insl
sbb
shl
jnp
cld
js
mov
jp
push
movsl
jmp
cmc
push
mov
sub
cmp
or
add
dec
lods
out
mov
arpl
pop
sub
out
scas
outsl
lods
popa
add
in
dec
adc
mov
push
mov
lcall
dec
stos
and
jbe
mov
push
ds
push
mov
ret
outsl
sbb
sub
int3
mov
xchg
es
jp
adc
lcall
pop
mov
mov
add
lods
sbb
cs
hlt
fldenv
lret
pop
aam
mov
dec
or
test
sbb
enter
xlat
scas
add
xchg
dec
push
lcall
mov
ds
in
cmpsb
or
cwtl
rol
lds
dec
hlt
stos
sbb
jnp
push
pop
cmp
mov
nop
cmpsl
cld
mov
inc
mov
in
cmp
mov
fs
daa
jne
sub
dec
hlt
imul
pusha
mov
and
pop
and
aas
or
sti
xlat
test
fcmovbe
out
jmp
push
lcall
jmp
pusha
add
cmpb
sub
push
aad
popa
sub
add
add
push
cltd
leave
lret
jp
jns
jge
popa
xor
mov
mov
movsl
lods
sub
rorb
daa
jge
cld
lds
cld
out
imul
mov
pop
jp
sahf
bound
test
stos
aam
mov
push
xlat
sbb
roll
jecxz
push
outsb
cmp
push
std
xchg
and
xchg
aad
out
sbbl
ret
push
lcall
in
je
call
ljmp
out
lock
out
div
movsb
lods
jle
cli
adc
add
or
pop
mov
pop
add
in
or
xchg
test
xor
fs
sub
mov
cli
dec
push
dec
fwait
push
sub
aas
or
mov
add
mov
dec
push
into
mov
int
xchg
test
pop
movsl
push
into
pushl
cmp
popl
or
xor
jle
cmp
push
cmp
pop
push
pop
jl
xchg
adcb
pop
push
jns
or
fwait
dec
xchg
or
inc
and
cmp
pusha
mov
mov
fidivrl
call
mov
subl
decl
jae
lcall
pop
cmp
adc
ret
fwait
push
pop
es
push
leave
test
sub
jp
and
shrb
lods
mov
fcoml
mov
ret
inc
mov
insb
jnp
pop
pop
rcrb
and
inc
inc
int3
jle
orb
neg
or
or
cmp
filds
sbb
outsb
adc
push
or
stos
pop
add
xchg
icebp
ja
nop
sbb
cmp
hlt
adc
std
cmc
pop
pop
adc
mov
xchg
inc
out
js
lods
les
les
dec
sub
mov
jge
adc
jbe
mov
cld
add
xlat
add
and
aaa
aam
or
jle
loope
lcall
push
test
jne
push
cmp
cli
push
xlat
test
mov
mov
repnz
or
orl
dec
push
cmp
jge
inc
pushf
leave
and
dec
mov
xrelease
sub
mov
adc
push
sub
xor
test
mov
fs
sub
mulb
ret
addl
xlat
cmp
or
and
das
iret
sub
stos
dec
dec
scas
pop
xor
pop
dec
imul
mov
inc
scas
inc
cmpsl
lret
sub
pop
jmp
testb
stc
xchg
sub
iret
pusha
mov
mov
xchg
outsb
pop
int
xor
inc
fsubs
insl
scas
mov
xchg
negl
xchg
xchg
fwait
mov
sbb
shlb
out
pusha
pusha
add
xor
adc
dec
lahf
xchg
cmp
repz
jp
add
pusha
aaa
or
and
add
in
mov
aad
pushf
mov
aaa
and
lret
or
mov
out
rcrb
xor
pop
ljmp
cmp
aam
inc
pop
pushf
mov
jo
cltd
and
mov
dec
lods
dec
jnp
fsts
punpckldq
mov
cmc
pop
adc
call
xchg
mov
sub
call
imul
int3
or
xor
shr
inc
stos
add
adc
nop
mov
adc
test
sub
fstpt
shlb
mov
xor
and
movsb
lods
repnz
xchg
addr16
cmpsl
lods
xor
shlb
out
xchg
enter
xor
add
xor
movsb
mov
xchg
cmp
call
mov
bound
iret
jecxz
sub
xchg
mov
ret
xchg
xor
movsl
cltd
insb
roll
sbb
sbb
cwtl
fisubl
jno
shld
std
call
outsb
pop
mov
scas
sahf
stc
sti
lds
cmc
cmp
pop
idivl
mov
loop
pop
inc
in
add
mov
inc
rol
inc
pop
fcompl
xor
insb
pop
stc
and
jecxz
lret
jne
push
lret
add
pusha
cmp
and
insb
cmp
xchg
imul
icebp
loopne
testb
test
and
iret
sub
sub
jmp
in
cwtl
mov
ud0
shll
and
cmp
push
mov
add
cli
xlat
cmp
shrb
dec
lock
mulb
cmpb
pop
insl
les
adc
pinsrw
ret
roll
push
add
jl
pop
fidivrl
xor
cltd
pop
dec
insl
lret
ret
fidivrl
or
outsb
inc
xchg
ret
mov
pop
pop
das
lret
and
jno
push
mov
sub
cmp
sub
push
rcrb
jmp
xchg
and
lret
fs
xor
add
sub
fdivrl
adc
or
loopne
xlat
subb
inc
xchg
add
xchg
xor
aam
shl
xor
shlb
jge
scas
dec
inc
popf
or
push
jl
xchg
and
pop
xchg
pop
fs
nop
and
cmp
clc
inc
mov
cmc
inc
pop
mov
ljmp
jp
add
xchg
in
sub
jae
add
sbb
sub
jb
xor
aaa
shrl
and
cmp
dec
add
xor
sbb
scas
mov
inc
cmpsb
push
cli
out
int3
adc
jae
mov
das
fistps
sub
or
addr16
scas
mov
push
or
rorl
leave
dec
adc
movsl
push
cmpsl
cmp
ljmp
je
shl
adc
mov
cli
nop
mov
cmpsb
fstl
rorb
cmpsb
icebp
jmp
jg
sar
or
fstps
stos
scas
pop
lock
out
adc
pop
loopne
or
pushf
cmp
mov
cwtl
lea
xlat
xchg
out
clc
mov
pop
dec
mov
stos
mov
push
xor
cli
adc
popf
mov
push
cli
sbb
rorb
mov
and
ror
out
cli
mov
imul
ljmp
xor
fcompl
xchg
ficompl
jmp
aam
test
les
sbb
loopne
repnz
xchg
push
or
mov
fwait
movsb
add
xchg
adc
mov
hlt
fadd
xchg
lods
js
mov
sbb
xor
pop
sub
and
xchg
cmp
je
testb
loopne
pop
or
andb
xchg
movsb
dec
daa
mov
mov
call
dec
add
push
mov
push
jo
aam
cmp
and
sub
mov
cld
fnstenv
test
hlt
jns
icebp
xchg
fists
leave
ret
jle
test
jns
jle
jne
sbb
cmp
xor
out
push
decl
cmp
imul
push
pop
rcrl
inc
jbe
jo
sbb
int
inc
lret
je
mov
push
mov
ja
fwait
pushf
jmp
gs
scas
sbb
lret
push
and
scas
in
and
mov
inc
xchg
hlt
sbb
pop
inc
jb
imul
mov
or
cli
aam
add
cmp
data16
jae
cmc
decl
and
pusha
and
dec
sub
fistl
sub
push
xor
pop
cmp
js
mov
mov
lret
cmpsl
xor
pop
pop
pop
mov
clc
push
shrl
pop
in
jnp
ss
dec
pop
out
lods
icebp
xchg
jno
adc
mov
std
jno
dec
dec
and
cmc
inc
les
mov
sub
xor
cmp
push
les
ljmp
xor
mov
mov
inc
incl
addr16
lcall
cmp
xchg
insb
addl
mov
mov
es
pusha
cltd
jg
pop
pop
int
sahf
add
or
push
xchg
frstor
jnp
aam
xor
push
push
xchg
subl
cs
mov
dec
out
or
arpl
or
data16
xchg
add
dec
push
fs
or
pop
dec
xchg
pushf
out
js
das
sub
fwait
jo
push
inc
icebp
mov
dec
aaa
cld
and
mov
jge
pop
xlat
mov
cld
enter
mov
inc
bound
fidivrl
adc
adc
mov
cmp
je
mov
and
push
test
loop
ss
xor
hlt
shll
frstor
cwtl
pop
jno
daa
adc
addr16
cmpsl
jl
into
push
mov
push
xlat
shl
leave
xchg
mov
cs
fabs
decl
aam
lret
fucom
hlt
sub
xchg
pop
mov
cmc
mov
fldt
frstor
movsb
out
cmp
adc
xchg
cmp
push
stos
das
sbb
iret
shlb
cmp
lds
cmp
xor
cmpb
loopne
push
dec
loopne
cmp
sub
jmp
js
adc
pop
xchg
roll
mov
jmp
orb
arpl
adc
sbb
rcr
in
add
rorl
clc
xor
stos
mov
or
call
cmp
test
pop
sti
cwtl
inc
fistl
movsb
mov
cmpsb
pop
mov
xchg
in
fisubrs
cs
xor
jmp
fisttpl
aam
xor
sbb
cmp
xorb
xchg
push
and
or
xor
add
and
inc
insb
pop
and
push
dec
push
sub
stos
dec
idiv
lock
mov
and
inc
fnsave
scas
gs
mov
adc
xchg
add
cmp
loope
popl
ret
mov
les
push
cmp
mov
cmp
popf
movsl
shlb
mov
sub
push
aaa
or
adc
jb
jo
outsb
aam
sub
adc
dec
mov
lret
jl
xchg
scas
inc
dec
aaa
xchg
mov
jno
adc
aaa
fists
jo
pop
sbb
mov
sub
stc
xor
jno
movsb
push
aad
ret
stos
dec
mov
sub
gs
mov
icebp
inc
pop
sbb
mov
adc
inc
jno
adcl
popf
pop
shlb
mov
mov
xchg
or
cmc
add
ja
jns
cmp
hlt
stos
jle
fidivrl
ljmp
push
xor
bound
cmc
sbb
mov
push
andl
mov
loop
jo
ficompl
xchg
xchg
movsb
mov
pushw
push
cmp
cmp
jecxz
ss
dec
and
push
sub
mov
push
cli
out
xor
push
sbb
dec
sub
xchg
pop
stos
mov
scas
lock
mov
movb
adc
cmp
hlt
sarb
lret
mov
and
lret
or
aaa
shll
cld
jmp
fbstp
cmp
jbe
or
fwait
mov
mov
incl
fs
mov
jbe
dec
shl
popf
arpl
or
sbb
popf
stc
stc
insl
mov
scas
dec
jnp
inc
sub
mov
mov
jge
jns
rcrl
sbb
pop
xor
enter
cmp
insb
pop
cs
cmovno
mov
xchg
nop
jmp
jmp
push
insl
adc
push
icebp
pop
add
jmp
add
mov
imul
scas
xlat
icebp
mov
in
pop
js
imul
ds
jno
stc
je
arpl
lcall
mov
mov
cmp
mov
adc
xlat
lods
adc
mov
inc
and
sub
cmp
push
pop
mov
jnp
mov
cs
push
xor
ret
leave
loopne
sub
movsb
push
arpl
inc
repz
or
pusha
adc
mov
aaa
sbb
inc
fiaddl
repz
leave
aam
stc
jo
insb
inc
mov
arpl
in
jbe
and
test
stos
hlt
inc
add
cmp
int
aam
inc
mov
fdiv
jp
leave
jo
jecxz
gs
xlat
dec
jae
add
sub
test
nop
fimuls
inc
mov
fsubr
or
out
xor
and
mov
xor
adc
lods
cli
and
sbb
xchg
xchg
mov
popf
mov
cmp
rorb
in
jbe
sub
sarl
jns
fwait
xor
faddp
mov
lds
jg
lret
orb
frstor
dec
lods
adc
pop
mov
ds
rcll
xchg
adc
cmpsl
in
sbb
sub
inc
mov
mov
les
nop
in
jnp
enter
scas
aas
mov
adc
lods
aam
inc
jle
cltd
mov
pop
mov
xchg
push
andb
dec
pop
lret
sub
outsl
hlt
js
xor
jb
enter
push
aad
or
or
jae
addr16
inc
cltd
mov
test
shll
daa
je
lahf
sbb
mov
sti
mov
jne
xchg
and
loopne
ljmp
test
mov
int3
pop
sarl
or
pop
cmp
dec
xchg
icebp
fwait
xor
pusha
mov
adc
and
int3
inc
mov
adc
mov
movsb
dec
or
sbb
rcrb
push
into
cmp
sub
push
pop
and
jl
out
xor
lcall
pop
shlb
dec
dec
add
sbb
push
xor
xor
nop
sbb
jae
xor
jp
outsl
lret
mov
lock
lcall
inc
imul
mov
out
lea
pushf
mov
or
test
or
pop
pop
pusha
leave
inc
fcmove
addl
lcall
or
push
xlat
cwtl
insb
push
jle
cwtl
jmp
test
pop
push
test
jl
movsb
cmp
or
and
lods
pushl
cltd
xor
adc
add
push
popf
popa
pop
cld
pop
sbb
and
fbstp
and
popf
jl
jo
push
cld
xchg
inc
xor
lea
sbb
popa
xor
pushf
mov
ja
xchg
sub
fnstcw
dec
in
imul
jle
jmp
pop
push
xor
cli
adc
hlt
cmp
xor
insb
add
sub
and
xor
dec
lds
pop
shr
test
pusha
and
push
ror
out
jne
xchg
inc
imul
roll
sbb
fsubr
das
pop
or
std
inc
cmc
mov
cltd
fisubs
sarl
mov
scas
dec
xchg
xchg
sbb
pop
data16
dec
in
aaa
xchg
pop
int3
add
xchg
fcomps
test
neg
and
xor
add
int3
push
sub
fldl
or
cmp
popa
adc
repnz
adc
out
aaa
xchg
jno
ja
push
lcall
lahf
je
adc
mov
push
fistpll
jo
sub
add
pop
call
ljmp
push
xchg
lret
mov
aas
jnp
lods
mov
and
nop
xchg
loop
and
sub
mov
xor
in
scas
dec
mov
dec
cmc
add
adc
inc
cmp
dec
bound
jl
and
inc
lds
je
sarl
and
insb
out
leave
dec
lods
xor
cmpsl
inc
mov
mov
mov
or
mov
aad
shrl
push
jno
fsubr
aaa
push
sub
adc
cmp
in
sbb
push
xchg
ficoml
xor
mov
fmull
ja
cmp
lea
pslld
cli
xor
pop
mov
popf
inc
loop
sbb
cmpsl
xor
mov
dec
adc
pop
rcrb
divb
mov
fistl
or
adcl
or
ljmp
and
xor
idiv
cli
dec
das
lret
mulb
clc
jp
inc
pop
jl
dec
adc
repz
push
push
mov
data16
push
hlt
lret
mov
adc
std
adc
pop
lret
arpl
and
jbe
jge
popa
push
ljmp
jns
rcrl
cli
and
jns
in
ficoml
clc
gs
xchg
jg
jle
jae
jg
push
inc
cmc
out
loope
sbb
pop
rclb
and
jo
add
sbb
jno
pop
fnstsw
cmpsl
push
popf
data16
xchg
mov
sbb
adc
sbb
gs
xchg
int3
jnp
or
pop
mov
mov
xor
push
stc
pop
adcb
cmp
sahf
sbb
in
lods
xchg
sbb
jl
nop
inc
pop
xchg
mov
push
pop
dec
pop
cmp
dec
popf
stos
cmc
jb
ss
lret
inc
outsb
aas
xor
out
cmp
out
adc
jno
xchg
and
or
testb
test
pop
jbe
jmp
pushf
test
cltd
std
push
or
fistpl
inc
std
stos
pushf
jnp
hlt
sub
cli
add
dec
mov
mov
cwtl
fs
das
sti
or
jnp
push
pop
inc
repnz
mov
and
dec
mov
xlat
sbb
cld
loopne
mov
xor
mov
ret
arpl
dec
lret
cmp
sbb
inc
je
addr16
in
xchg
mov
mov
mov
cltd
ror
dec
cmp
mov
rcll
leave
mov
loop
ret
sbb
orl
aad
aas
jg
jne,pn
sub
inc
scas
in
fbld
scas
mov
dec
sbb
cmp
dec
pusha
mov
fs
cltd
and
jl
jmp
mov
int3
imul
mov
pop
add
outsb
int
ret
push
pushf
rorl
mov
popf
jl
out
fwait
pop
imul
jns
and
cwtl
icebp
hlt
adc
es
loope
jb
dec
stc
movsl
notb
inc
add
insl
leave
bound
stos
or
mov
fwait
les
sbb
cs
je
inc
sub
pop
mov
nop
add
lds
out
add
inc
mov
icebp
inc
test
arpl
xor
cs
jl
test
push
in
adc
out
idiv
xlat
pop
insb
add
repz
cwtl
ret
cmp
ret
dec
sub
fidivrs
inc
hlt
xor
push
sbb
out
fsubrs
mov
xchg
add
jno
cli
rcrl
cwtl
lock
test
out
push
rcr
popa
sub
xchg
ljmp
jb
sub
push
cmp
pop
mov
add
idivl
adc
xchg
test
dec
sub
stc
inc
std
out
pop
idivl
sub
jl
or
pop
mov
push
pop
xchg
insb
in
adc
sub
repz
pop
movsb
aad
xchg
add
adc
ret
and
lds
mov
fidivrs
aas
iret
sub
jecxz
fstpl
mov
mov
mov
sahf
mov
repnz
mov
add
xchg
or
push
or
inc
sub
fidivl
test
ss
xor
pop
mull
lret
daa
andb
adc
imul
jp
xchg
sbb
insb
xchg
pop
test
insl
shll
popa
mov
jbe
dec
cmp
ret
or
jmp
jmp
psubb
rcrl
push
test
dec
push
outsl
mov
add
jp
ret
test
jp
cld
push
int
mov
jmp
aad
sub
mov
xchg
sbb
add
push
aas
pop
bound
jo
mov
push
jmp
int3
mov
mov
aad
in
and
cmp
sar
mov
pop
js
and
mov
jle
loope
jb
cmp
ljmp
dec
stos
or
aad
mull
inc
inc
aam
cmp
inc
imul
cmp
sarl
mov
xlat
mov
lock
sbb
push
sahf
sbb
or
into
or
mov
ss
pop
frstor
fs
cli
jno
cmpsb
call
je
rclb
pop
fistps
xchg
or
mov
or
cmc
and
daa
popa
outsb
inc
lds
gs
or
mov
lock
xchg
adc
mov
popf
popf
xor
jo
mov
inc
ja
xchg
ret
outsb
loopne
jecxz
notb
out
cltd
jle
mov
aaa
xchg
repz
push
repnz
inc
jne
or
dec
inc
mov
add
sbb
or
mov
or
lcall
or
xchg
jg
cmp
mov
adc
in
fisttpl
scas
cmpsl
in
cmp
lcall
out
xlat
mov
mov
xchg
mov
xchg
scas
outsl
test
jl
aaa
or
icebp
cld
lahf
aas
cli
es
shlb
and
jns
or
call
test
fwait
data16
movsb
addl
aad
mov
mov
jb
xchg
loop
shlb
bound
mov
sbb
pop
out
repz
cmpsb
add
push
sbb
cli
mov
mov
stos
mov
leave
jnp
frstor
ljmp
dec
add
jle
cmp
mov
pop
jb
pop
cwtl
leave
push
and
sbb
ret
cli
sbb
pop
cli
and
mulb
sbb
jbe
xor
lds
xchg
push
or
repnz
ret
xor
add
jo
pop
sub
lahf
cli
jbe
dec
stc
xor
or
adc
jg
cltd
in
xchg
push
call
push
dec
mov
aaa
es
out
cltd
add
push
cld
sar
or
out
ds
push
lock
push
subl
movsb
clc
dec
nop
popa
popf
aas
or
mov
jno
adc
arpl
mov
fsubs
leave
enter
addr16
mov
das
and
subl
shlb
push
ret
add
repz
pop
lret
sub
push
xor
lea
jno
push
sbb
mov
lret
xchg
lds
fmull
shll
mulb
mov
jg
gs
xor
cld
fbld
aam
xchg
xor
or
cmp
inc
or
mov
cli
ret
adc
rcrb
mov
stos
mov
or
xor
pop
es
ss
mov
cmp
jmp
sahf
mov
jmp
inc
clc
pop
jne
fadds
stos
cmc
sahf
imul
fwait
lret
push
cmovne
adc
mov
xchg
or
sbb
sbb
add
pop
int3
jb
or
inc
fldl
and
pop
movsl
adc
adc
add
xor
xchg
mov
dec
ss
push
roll
lds
jmp
icebp
xchg
jg
mov
inc
add
mov
jb
inc
cmp
mov
jg
cltd
or
cmp
or
cmp
ds
in
out
xchg
mov
popf
gs
sbb
mov
cmp
daa
inc
adc
pop
insb
push
pop
inc
jae
rol
in
and
outsl
add
stos
in
ljmp
call
sbb
stc
jae
pop
pop
add
insl
jne
or
mov
inc
andl
outsl
cmp
xchg
inc
icebp
repnz
dec
inc
adc
cs
jns
aas
xor
addr16
and
jp
fwait
lods
ljmp
subb
decl
or
pop
cmp
xchg
popf
pop
push
dec
pop
scas
inc
leave
xor
and
shll
lock
out
fistps
jns
adc
inc
lahf
mov
cmp
mov
and
in
jb
add
push
sub
in
cmp
xlat
roll
test
hlt
lcall
int
add
add
fwait
pop
fsts
xlat
lods
lods
dec
sbb
mov
js
dec
mov
push
mov
sub
js
imul
sbbb
xorl
js
jp
mov
xchg
sub
insb
push
jae
sub
popa
movsb
push
leave
fs
popa
int3
and
sub
or
add
cmpsl
cs
xor
sbb
fadd
sbb
cmp
popf
aam
sti
xchg
aad
cmc
insl
or
sbb
jge
sti
imul
and
jmp
stos
xchg
mov
adc
push
das
inc
jmp
fldenv
mov
in
sub
in
mov
lret
sbb
adc
pop
sub
outsl
negl
xor
icebp
inc
cmp
hlt
mov
sbb
mov
movl
jno
add
psrlq
or
jmp
test
jl
std
sub
icebp
jno
popl
cmpsb
dec
cmp
lcall
mov
sbb
mov
jg
stos
mov
dec
cltd
xchg
out
sbb
dec
push
push
push
add
fmuls
dec
in
mov
cwtl
mov
xchg
jg
mov
inc
xchg
ljmp
xchg
sub
fwait
cli
rcrl
sbb
test
in
imul
mov
push
out
pop
aam
idivb
push
das
xchg
lahf
jg
and
rolb
pop
mov
int3
push
fwait
inc
lds
jno
clc
sarb
insb
jl
cld
js
xchg
or
push
scas
lock
lret
jns
fbstp
push
or
push
dec
test
xor
sub
mov
jg
jmp
jle
inc
push
loop
shl
fs
std
ja
or
mov
dec
int3
or
or
mov
sub
iret
clc
out
lret
add
das
leave
in
xor
jb
pmulhw
jle
int
xchg
fs
inc
cltd
andl
mov
sub
pop
ret
mov
jb
out
notl
pop
xchg
aam
inc
clc
mov
pushf
push
and
sahf
daa
mov
mov
mov
loop
dec
add
ret
push
mov
lahf
fsubrs
faddl
xor
sarl
incb
jg
cmp
jae
mov
jge
cmpsl
xor
fdivl
push
sbb
inc
jae
jl
push
push
shl
or
bound
or
adc
dec
add
jb
mov
cmp
jmp
xor
in
pop
mov
int
and
push
adc
sbb
scas
jbe
pusha
xchg
adc
jg
mov
gs
xchg
xor
xchg
rcrb
fs
xlat
orl
mov
mov
loope
fwait
dec
gs
outsl
mov
fnstcw
int3
dec
xchg
or
dec
das
add
mov
mov
and
or
or
lcall
mov
sahf
push
leave
mov
or
add
dec
xchg
fildll
fisttps
jmp
std
sub
fwait
xchg
inc
sub
repz
mov
add
sub
sbb
rcrb
jns
iret
and
push
jp
bound
imul
hlt
fisubrl
mov
andb
jle
xchg
or
inc
addr16
ljmp
iret
or
dec
jle
mov
or
stc
pop
pop
pushf
add
into
pushf
movsl
aad
pop
xchg
mov
clc
cmp
je
xchg
test
fwait
inc
out
fldenv
adcl
lret
testl
inc
xchg
mov
pop
and
jne
mov
scas
std
addr16
outsl
push
add
ret
stos
dec
sti
mov
ja
in
std
xor
and
stc
add
mov
inc
aad
out
gs
push
call
cld
mov
inc
xchg
arpl
jb
sub
shrl
jecxz
and
jnp
outsb
jno
adc
cmp
mov
xchg
cmpsb
mov
testb
mov
xchg
mov
pop
fsts
sti
mov
std
pop
aas
add
testl
push
test
jp
fs
cltd
mov
repnz
mov
sub
cwtl
pop
rclb
enter
mov
jae
sbb
jp
or
lahf
sbb
pop
rcrb
shrl
pop
push
or
cld
sbb
or
out
ficompl
pop
leave
sub
push
psubw
add
push
mov
xor
imulb
mov
push
pushf
pop
sub
cmc
pop
adcl
in
ret
xor
xchg
lret
pop
stos
mov
pop
ljmp
inc
xor
call
sub
cld
fistpll
lret
shll
lods
mov
je
mov
push
pop
push
aam
inc
add
cld
inc
or
lret
outsb
lcall
push
push
incb
daa
shll
jp
pusha
fwait
lods
mov
jb
cltd
pop
stc
jb
add
int
iret
sub
in
xchg
or
mov
test
loopne
fxch
pop
xor
push
sub
and
sbb
and
in
push
and
sahf
mov
push
inc
cmp
pusha
hlt
mov
mov
push
jmp
inc
ret
mov
pop
mov
jg
jnp
xor
xchg
inc
adc
cli
mov
into
or
xchg
orb
jg
jp
inc
fwait
popa
or
outsl
inc
sub
out
jns
out
hlt
in
sub
lods
xor
jbe
cmpl
roll
out
xlat
insb
inc
mov
jg
ror
cltd
inc
mov
mov
fs
add
sbb
dec
mov
inc
push
incb
icebp
les
pop
mov
outsl
pushf
cwtl
imul
sahf
mov
sbb
sbb
xlat
inc
xchg
sbb
mov
pop
mov
mov
xchg
out
lea
xor
test
fmul
std
sbb
jmp
je
mov
std
ss
sbb
push
inc
push
pop
xchg
jmp
shll
jno
ss
sbb
dec
std
xlat
out
enter
movsl
sbb
arpl
call
es
out
inc
cmp
or
push
push
fsubrs
mov
fimull
out
pop
add
inc
lret
push
xchg
sti
xchg
dec
pop
loop
push
adc
pop
pop
mov
es
dec
test
test
fisttpll
and
mov
jae
movsl
inc
jns
movsb
mov
loopne
jbe
mov
jmp
jns
inc
inc
mov
mov
loope
pusha
sahf
call
xor
inc
sbb
insb
pop
int3
sub
daa
loopne
sbb
ret
mov
scas
subl
mov
pop
sbb
outsb
and
sbb
scas
cwtl
xchg
jecxz
sub
dec
sar
test
sbb
lds
rclw
mov
fdivl
leave
fldt
cmpsl
sub
pop
enter
or
stc
adc
stos
push
push
mov
inc
mov
sub
cmp
pushl
movsl
f2xm1
xchg
xchg
push
and
cmp
rcll
push
js
pop
mov
lcall
add
lock
mov
fdivr
cmp
popf
sbb
int
push
sbb
push
pop
xor
mov
dec
push
lods
les
mov
mov
sbb
inc
mov
es
jg
cmpsb
cwtl
sbb
imul
dec
pop
sbb
xchg
sbb
data16
sbb
movsl
sarl
and
bound
ljmp
add
push
xor
mov
mov
mov
sbb
add
aaa
loopne
fcmovb
adc
adc
je
out
cs
jecxz
int
inc
jge
fsubr
enter
stos
js
jle
ficoms
fistpl
mov
mov
sub
jmp
lret
repz
in
mov
fldt
cld
xchg
adc
pop
loope
repnz
and
mov
fs
cmp
mov
popa
inc
out
fstpl
into
loopne
jmp
mov
orb
movsb
inc
stc
add
hlt
push
fisttpl
inc
mov
fs
lock
out
xchg
or
jno
mov
and
rcl
imul
int
push
cli
cmpsb
mov
jne
fldl
mov
jecxz
divl
cmp
xlat
sbb
jle
nop
adc
or
fcomip
inc
es
cltd
xor
cmpsb
fmull
fbld
lods
xor
shl
js
shll
dec
cwtl
inc
cmc
addl
push
cmp
int
fisubl
call
test
lds
push
fnstenv
push
hlt
cld
hlt
mov
aaa
sub
out
xchg
les
pop
mov
ss
xor
outsb
cmp
lods
or
ja
pop
daa
mov
iret
dec
ds
adc
fs
jmp
jp
xchg
andl
cmp
cmp
pusha
sahf
stc
inc
mov
fdivl
fsubl
into
sbb
or
test
push
test
mov
shrd
iret
shl
and
leave
jo
in
sub
lods
mov
clc
leave
dec
sarl
mov
mov
or
lahf
out
mov
push
addl
es
clc
fidivs
cmc
mov
loopne
lahf
inc
pushf
cmpsl
xlat
sbb
cmp
xor
xchg
test
addr16
and
shll
cs
sbb
xor
test
ds
push
xchg
inc
in
sbb
pop
mov
lret
in
push
cs
pop
in
sbb
repnz
imul
cltd
rcrb
rcl
xchg
mov
aaa
nop
scas
cmp
add
or
lods
popa
and
fidivs
cmpl
add
and
mov
or
pop
add
loope
inc
fbld
dec
das
aaa
jnp
mov
push
add
xor
sbb
imul
in
ret
fildl
ljmp
sbb
push
inc
sub
mov
adcl
adc
ljmp
push
mov
xchg
int3
sbb
pop
inc
aaa
jo
pop
mov
xchg
mov
fdecstp
xchg
xchg
lret
mov
imul
test
xchg
mov
loopne
rolb
popa
in
loop
test
into
aaa
or
sti
data16
cli
popa
hlt
popa
addb
pop
push
xor
int3
xlat
lcall
jne
stos
pop
iret
out
lds
add
inc
clc
jo
data16
in
lret
movsb
jnp
inc
mov
mov
dec
cmpsl
jecxz
add
or
enter
in
xchg
mov
dec
repnz
ljmp
and
add
sub
cmp
push
cmp
or
dec
ret
out
fwait
sbb
cmp
loope
sbb
add
cltd
daa
rcll
mov
push
mov
push
inc
out
subb
insl
int
out
mov
leave
aas
pop
jecxz
pop
pop
or
push
cmpsl
or
xor
inc
movsl
and
mov
rcr
std
test
jle
mov
sub
lcall
arpl
jb
lock
lock
push
ffreep
jb
dec
jo
in
clc
loope
xchg
int3
icebp
shlb
es
test
movups
cld
nop
adc
xor
addl
rcrl
rcrb
sbb
repz
lock
sub
or
ljmp
and
dec
adc
out
mov
mov
xchg
adc
mov
adc
fdiv
push
sub
iret
stos
movsb
ljmp
add
sbb
shl
test
or
mov
lods
sub
xchg
ret
mov
outsl
test
push
imul
popl
inc
push
cmpl
xlat
add
repz
cmp
pusha
std
or
clc
or
or
adcb
jmp
addl
add
lea
cs
leave
ret
mov
mov
mov
jb
insb
add
sub
mov
pop
sub
iret
inc
lahf
insl
subb
xchg
mov
or
jl
lcall
push
pop
scas
lret
lret
mov
insl
data16
mov
insb
out
push
aaa
pop
push
rolb
sbb
adc
mov
sub
aad
hlt
loopne
rorl
test
popf
push
adc
rcrl
xor
jecxz
pop
std
call
pop
repz
lss
add
sub
lahf
xchg
push
mov
aaa
sbb
sbbb
pop
rorb
push
mov
int
dec
cmp
sar
inc
add
out
stos
pop
xor
pop
fnstcw
dec
imul
xor
jl
test
mov
fcmovnbe
or
or
and
nop
add
lahf
pop
js
xchg
jg
jmp
sti
mov
and
dec
fimull
testl
sbb
sbb
pop
xor
cmc
imul
or
arpl
dec
out
add
mov
pop
mov
mov
scas
mov
and
cmp
jecxz
out
jmp
xchg
nop
jae
mov
pushf
in
sub
xor
out
fisttps
mov
pop
mov
inc
ja
xchg
inc
dec
arpl
and
adc
adc
arpl
jmp
and
adc
add
mov
pop
push
and
inc
fldcw
cltd
push
push
and
mov
push
inc
cmp
shrl
ljmp
sub
enter
sbb
jl
lcall
pushf
mov
imul
movsb
xchg
notb
jle
outsb
dec
xor
ja
sbb
or
sbb
xchg
cmp
mov
pop
mov
shlb
pop
sahf
dec
in
add
int3
mov
fdivl
loopne
outsb
sbb
ja
movl
data16
sahf
cmp
xchg
shlb
fisubrl
pop
loope
popf
icebp
sbb
and
adc
sahf
push
jo
pop
out
lret
cltd
cld
arpl
jns
mov
mov
aam
mov
movsb
add
das
sbb
cld
or
xchg
cmp
dec
xchg
fs
push
insb
mov
arpl
mov
into
in
mov
mov
jl
and
mov
insl
enter
mov
pusha
and
cltd
pop
std
popf
addr16
or
enter
dec
push
push
add
lock
add
aad
inc
mov
jmp
inc
mov
sbb
xlat
sub
sbb
pop
data16
inc
sub
mov
pop
and
arpl
gs
jle
dec
negb
xchg
push
pop
cmp
rcll
or
cmpsl
aam
scas
xchg
cmpsw
xor
inc
repnz
sbb
push
insl
lods
push
jnp
rolb
dec
xlat
retw
mov
mov
sub
sub
outsb
fwait
mull
mov
push
jmp
push
push
aam
cmpsl
cltd
pop
divl
enter
push
lock
movsb
in
in
lret
loopne
xchg
fisubs
sub
neg
icebp
dec
mov
stos
pop
or
int3
cmpsl
aad
mov
sub
clts
sbb
aas
and
add
push
aaa
fdivrl
mov
roll
es
jg
mov
push
push
and
mov
mov
jo
mov
push
sub
sbb
insb
popf
dec
jne
scas
push
add
cli
loop
push
xlat
setae
movsl
dec
int3
movsb
push
sbb
add
or
inc
iret
lret
and
xor
mov
movsb
out
iret
jbe
or
int
sti
scas
xlat
cwtl
push
mov
inc
add
jns
das
mov
pop
cmpsl
ret
xchg
ljmp
mov
push
ret
cmp
jmp
xchg
ss
jl
inc
insl
mov
in
xchg
aas
jo
loope
push
out
into
push
mov
jnp
dec
into
or
jge
adc
sbb
mov
clc
fstl
aas
es
mov
cwtl
mov
xchg
arpl
cwtl
lret
por
xchg
mov
cs
or
lret
ja
mov
jnp
sub
mov
pop
xchg
pushf
aaa
fldt
or
mov
mov
xchg
sub
xchg
jp
push
xor
arpl
stos
popa
dec
xchg
cli
dec
or
push
xchg
mov
xchg
sub
cmpl
cwtl
repnz
dec
ret
mov
insl
xor
cmp
lret
add
enter
add
dec
insl
pop
les
inc
mov
jmp
or
mov
inc
push
fists
dec
loop
inc
sub
stc
jmp
rol
jno
shll
fistl
jno
pop
or
insl
ja
xchg
lds
mov
sub
sub
sbb
das
inc
mov
or
xchg
out
mov
xchg
and
jmp
push
adc
mov
adc
sub
xchg
xchg
outsl
sbb
or
dec
add
in
adc
mov
sub
movsb
xor
cmc
test
mull
or
xchg
jno
or
dec
inc
mov
cmc
gs
xor
mov
dec
ja
orl
jns
inc
aam
rorl
mov
test
mov
packuswb
mov
cmc
les
mov
mov
rcr
aam
shl
mov
or
jp
fs
mull
jle
jg
neg
mov
rolb
movsl
scas
sub
mov
inc
insb
mov
pop
sbb
push
mov
or
scas
dec
xor
das
into
or
mov
jecxz
imul
xor
add
stc
enter
cs
add
fstl
dec
dec
jnp
and
adc
add
xor
pop
in
cli
std
dec
mov
or
dec
test
shlb
cmp
xor
mov
pop
xchg
pop
push
es
movsl
dec
dec
les
lds
mov
jb
jb
cli
bound
pop
jae
jae
mov
rcrl
call
jo
inc
jl
shl
fsubr
jns
scas
lds
aaa
pop
pop
cmpl
add
out
enter
arpl
push
add
add
in
cli
or
lock
cmp
sti
call
pop
mov
mov
dec
popf
lods
and
pop
xor
jl
cmp
pop
fsubrs
mov
idivb
inc
or
mov
loop
movsl
popf
xor
dec
es
xchg
mov
imul
addb
std
fwait
add
out
popa
insl
add
ret
inc
testb
pop
icebp
sub
idivb
icebp
sbb
xor
in
xchg
jmp
fs
int
imul
stos
push
sarb
jecxz
fwait
jae
in
or
ret
cmpsb
les
pop
or
out
and
dec
add
adc
dec
push
mov
aad
pop
pop
scas
xchg
xlat
add
jns
fldenv
outsl
or
sbb
dec
cmc
popa
dec
je
out
rcr
in
loopne
faddp
sbb
pushf
in
mov
mov
loope
and
es
lea
xchg
out
shr
cmp
push
pop
jg
test
ret
jle
cmpsb
stos
arpl
sub
cmpsb
hlt
out
inc
mov
in
shll
cli
sub
idivb
xor
mov
aaa
aad
fmulp
fdivs
pop
and
inc
lds
lods
inc
push
imul
add
jne
call
stos
test
pop
or
inc
cmp
rcll
mov
cmp
jmp
orb
add
flds
je
fmul
in
adc
sub
js
pop
inc
and
or
test
out
in
leave
int
std
lahf
and
subb
int3
and
or
ja
pop
mov
adc
mov
inc
pop
fdivl
pop
scas
cmp
nop
push
outsl
sbb
jnp
stos
ret
pusha
jge
ss
jae
adc
dec
pop
in
movsb
mov
and
or
xchg
pop
fists
xor
push
inc
stos
adc
mov
cmpb
aaa
loop
mov
add
inc
mov
adc
pop
inc
and
test
dec
mov
pop
inc
orb
pop
ds
pusha
push
and
xchg
mov
popa
adc
in
sti
cmc
out
add
push
jo
mov
adc
xchg
lret
ret
mov
outsl
mov
mov
popa
idivb
test
jl
mov
inc
xor
fldt
insl
or
mov
and
push
cmp
mov
dec
push
js
mov
movsl
in
xchg
dec
push
leave
gs
pushf
sub
filds
fucomp
fs
sahf
inc
cmpsb
lock
sbb
pop
imul
dec
inc
pop
xor
test
and
sbb
data16
out
test
jmp
ja
ds
mov
push
ds
jl
cmp
xchg
pop
int3
cli
cltd
data16
ja
lods
xchg
fs
pop
or
adc
int
fdivp
push
hlt
mov
aas
cld
sbb
das
pop
scas
notl
in
cmpb
mov
xlat
mov
addl
mov
push
gs
cmp
pusha
mov
je
fildll
sahf
xor
mov
aas
ss
push
dec
xchg
out
xchg
int3
add
pushf
mov
sub
mov
mov
inc
inc
mov
xchg
jbe
or
in
jb
mov
jo
mov
dec
sub
push
cmp
cmp
sub
in
push
mov
jno
inc
insl
cli
inc
adc
shll
pop
dec
andb
sbb
fwait
stc
aam
mov
lea
xchg
outsb
or
clc
dec
pop
test
pushf
movsb
aam
xorb
xchg
dec
aas
cmp
and
inc
adc
xor
icebp
fsubl
aaa
jp
aas
sub
lds
xor
jge
mov
xchg
xor
sbb
mov
mov
jmp
in
dec
or
jg
adc
fsubl
fsubp
or
leave
push
lahf
jnp
sbb
popa
xor
mov
mov
xchg
jp
es
out
or
inc
in
int3
and
adc
xchg
mull
les
and
in
sbb
jg
and
mov
lods
testb
popa
into
cld
fwait
cmp
sti
mov
pop
xchg
loopne
cs
mov
mov
push
or
adc
fwait
test
jbe
mov
cmp
leave
mov
add
xor
cmc
mov
roll
popa
dec
cs
xor
push
add
sbb
cmp
jecxz
sub
orb
push
mov
pop
xchg
push
push
loopne
pop
dec
cmpsl
addr16
lds
inc
js
popf
nop
std
fisttpl
ds
movsb
rclb
fisttpll
adc
push
jns
mov
xor
call
std
leave
cltd
pushl
stos
out
push
sbb
lret
cmpsb
mov
clc
roll
cli
nop
imul
jns
in
insl
mov
sbb
mov
out
push
scas
icebp
js
and
xchg
inc
adc
pop
pop
pop
and
andb
stos
push
or
movsl
jne
pop
pop
jecxz
add
enter
xchg
add
cli
add
mov
pop
mov
insb
pop
lahf
xchg
cmpb
mov
dec
mov
fistps
xchg
test
mov
push
fstps
aaa
cmpsb
mov
movsl
adc
outsl
push
loop
push
xchg
mov
test
pop
lret
adc
test
push
or
mov
add
rolb
repz
cli
aam
and
or
cmpsl
sub
mov
pop
xchg
inc
testb
sar
pop
mov
inc
test
mov
xor
jg
xchg
inc
inc
mov
fs
mov
jbe
aam
mov
pop
sbb
dec
cwtl
dec
outsl
xchg
aas
jo
add
ljmp
push
cmc
nop
pop
cwtl
dec
or
adc
in
jmp
test
loopne
or
push
inc
mov
pop
sub
out
in
test
jbe
in
xchg
xchg
or
repnz
dec
mov
mov
cmp
cmc
imul
sub
in
paddsw
int3
pop
mov
popf
mov
xchg
xchg
cltd
push
mov
jns
xchg
out
daa
aas
ds
imul
addr16
call
jge
jnp
mov
mov
sbb
popf
xlat
lret
mov
cmp
cmc
loopne
inc
adc
mov
jmp
mov
and
das
push
push
push
pop
cvttps2pi
aam
js
lods
xchg
scas
into
lods
nop
jl
cli
fst
iret
dec
out
cmpsb
cltd
fstpt
movsl
cmpsb
adcl
or
out
dec
push
sbb
fucomi
dec
int
aam
adc
dec
test
ljmp
cmp
aam
push
leave
pop
cmpsb
sahf
pop
stos
jp
out
xor
sarl
enter
sub
xor
or
push
mov
je
xor
sbb
xchg
or
jbe
pop
xchg
lcall
lea
out
add
call
mov
ja
cld
inc
push
out
shll
sbb
ljmp
out
lock
mov
lcall
jge
ficoml
pusha
push
lea
sti
nop
jb
xor
add
pop
js
sbb
inc
mov
add
pop
call
sub
int3
pop
sti
jle
cmp
jo
inc
jnp
icebp
adc
add
jno
xchg
mov
cmp
pop
add
pop
repnz
jo
out
xchg
adc
xchg
cld
rcrl
add
mov
cmp
les
addr16
bound
lds
sbb
push
cmpsb
cli
xchg
xchg
and
xchg
mov
out
cltd
lret
aam
sarl
xchg
clc
in
arpl
or
adc
movsb
addr16
inc
out
jne
mov
fstp
shll
sub
inc
popf
xor
lret
imul
cmpsb
fisttpl
lcall
mov
jbe
sub
or
cmpsb
push
fdivrs
ljmp
mov
pop
int
sub
add
mov
inc
mov
mov
push
jns
cwtl
addl
aad
fucomip
lret
imul
out
dec
or
cld
and
bswap
jl
out
inc
inc
lret
mov
loopne
or
aaa
idivb
loopne
mov
and
pop
call
hlt
iret
ss
jo
cltd
sub
xchg
into
enter
repnz
aaa
into
ficomps
call
outsb
mov
mov
lahf
lods
out
lcall
pop
jo
mov
push
shrl
mov
xorb
cs
mov
adc
push
in
sbb
and
les
clc
lret
stos
call
insl
cmp
testb
xor
push
push
das
mov
sub
inc
sub
fists
dec
jp
lds
sti
dec
aam
push
sarb
mov
movsb
pop
cmp
xchg
ret
xor
push
cmp
mov
decl
shrb
fisubrl
addr16
jg
jmp
mov
or
mov
adcl
push
inc
xchg
dec
pop
out
dec
mov
mov
push
add
jb
add
incl
mov
stc
jno
and
fisubl
imul
inc
popf
out
lds
push
test
movsb
out
pop
stos
push
xor
jl
nop
mov
pop
xor
push
push
lock
cld
mov
fisubrs
in
pop
lods
popa
fisubrs
data16
jb
push
cmp
je
inc
and
push
ljmp
cltd
mov
in
aam
lcall
xor
sti
pop
insl
jge
outsl
mov
das
inc
stos
jns
jle
out
mov
mov
lret
stos
jp
adc
xlat
dec
addr16
xor
lock
push
notl
sbb
jge
adc
call
mov
and
and
inc
jo
outsb
pop
aad
mov
lods
push
ljmp
rdtsc
pop
js
in
and
sbbl
loop
lcallw
mov
icebp
mov
xor
jo
cmp
test
pop
adcl
rcl
sbb
xor
and
addr16
adc
add
je
or
jle
ds
lods
mov
ljmp
adc
notb
sub
rclb
fs
sub
mov
movsl
str
or
xlat
shrb
or
cmpsl
dec
sub
fcmovb
clc
pop
xor
push
mov
nop
mov
outsl
test
rclb
jo
jne
rorb
lds
mov
jns
jecxz
in
dec
xchg
jp,pt
decl
jl
push
sub
rcl
nop
add
mov
shrl
jl
sbb
jp
push
scas
neg
test
or
lret
jo
leave
dec
loope
imul
xor
mov
out
mov
sbb
testl
cmpsl
mov
rolb
icebp
repz
fmull
ja
sbb
cmpsb
mov
and
jbe
fstps
mov
sti
in
lea
in
pusha
or
loopne
lea
jp
xchg
or
or
dec
or
pop
popf
push
mov
push
aaa
or
jbe
inc
dec
pop
or
sub
mov
gs
out
std
dec
imul
push
or
cmp
cmp
mov
mov
iret
jb
push
and
xchg
adc
out
insb
sbb
popa
test
or
rcll
lods
pushf
into
and
mov
jl
cmp
imul
fcoms
notl
in
in
clc
jmp
mov
inc
sub
mov
jno
jg
pop
xchg
fisubrl
push
inc
rep
push
or
mov
sbb
add
mov
push
pop
shr
hlt
cmpsl
adc
add
test
sahf
movsl
outsl
xchg
movsl
in
loopne
inc
xor
lods
aad
or
mov
cwtl
sub
xchg
dec
movsl
pop
movsl
and
xor
outsl
xor
in
gs
cmp
jmp
jle
adc
lret
outsb
and
data16
cmp
add
cmp
push
ja
lds
dec
sbb
ret
cmc
cmpsl
shrb
pusha
incl
push
mov
xchg
sti
shll
xchg
cmpsl
pushf
loop
cmp
cmp
push
dec
stos
xchg
lods
fcmovnb
or
or
das
sahf
notb
pushf
push
shl
push
pushf
stos
pop
in
loopne
hlt
xor
fwait
rcrb
subb
xchg
jmp
pop
add
sub
insl
and
imul
sub
inc
push
or
push
dec
je
fisubs
jmp
mov
push
pusha
mov
sbb
ja
js
jbe
sahf
inc
adc
subb
xor
addr16
and
or
xor
push
test
mov
jle
jne
mov
mov
cmp
ja
sub
push
test
lds
push
or
pop
inc
hlt
test
in
jp
or
mov
into
push
dec
imul
xor
and
lock
adc
sbb
pop
out
shll
jp
and
or
nop
push
sbb
jnp
orl
sub
push
pop
sub
and
cmpsl
les
sbb
pop
jne
cmp
mov
in
jnp
ret
jp
add
or
aaa
enter
call
insb
imul
cmp
xchg
call
fnstenv
pop
enter
repz
enter
push
rcl
pop
add
push
dec
inc
loopne
xor
test
movsl
call
lods
test
and
lods
shll
xor
cld
test
jns
or
das
dec
aas
and
adc
lock
sti
mov
jb
sbbb
cmp
jg
sub
jmp
out
jno
xchg
call
mov
pop
loop
addb
add
mov
mov
push
dec
inc
mov
cmpsb
call
inc
das
imul
outsb
sbbl
xchg
jecxz
sbb
ret
adc
adc
sub
aam
cmp
repz
inc
dec
les
push
cmc
imul
or
jb
fs
sbb
fsubrl
jp
inc
mov
jmp
sbb
xchg
jecxz
mov
loopne
push
scas
out
test
and
mov
enter
jo
push
das
jbe
cmc
add
stos
jge
cmp
push
push
imul
adc
sub
or
popf
jg
cli
push
xchg
cmpb
iret
add
xor
lock
pop
add
inc
sub
and
adc
loopne
xchg
jg
pushf
sbb
outsb
cmp
mov
outsb
xor
mul
lock
sub
add
inc
add
popa
ret
sbb
pop
pop
cmp
cld
stos
int
je
cmpsb
mov
add
std
xor
inc
jge
lods
sub
or
cmc
mov
andps
cmp
pop
xchg
repz
mov
aam
out
and
and
test
sbb
iret
inc
mov
jnp
iret
jp
ror
cmp
inc
push
mov
mov
sbb
out
insl
das
and
push
push
mov
push
lret
and
hlt
mov
out
pusha
xchg
faddl
mov
push
clc
mov
in
sub
out
decb
jnp
mov
adc
xchg
fimull
xlat
js
jae
or
iret
cmpsl
lods
out
cltd
stc
pop
mov
flds
stos
push
mov
repz
push
int
orl
jo
inc
xlat
jmp
sub
rorl
xchg
divl
and
aaa
pusha
add
hlt
add
enter
rcl
notl
rclb
pop
dec
push
mov
push
mov
and
sbb
mov
rorl
sbb
outsl
or
rol
sar
dec
cmc
cmp
fwait
push
sti
fsubrs
decb
or
daa
mulb
nop
loopne
lret
mov
fadd
stos
daa
mov
loopne
fucomi
ljmp
fsubrs
popf
fdivl
dec
int
je
xchg
pop
sbb
sub
mov
xchg
pop
in
and
hlt
jle
outsl
mov
fwait
adc
or
jo
test
into
lcall
mov
inc
add
cmp
inc
lret
in
or
insb
inc
cli
jo
repnz
push
or
mov
enter
das
mov
pusha
adc
jl
jg
jg
cmp
pushl
sub
xchg
inc
xor
insl
inc
fcompl
jnp
add
mov
add
cs
popa
outsl
fdivl
loop
test
jl
sbb
add
or
sbb
int
add
stc
sbb
or
shlb
pop
fs
in
xchg
fs
add
adc
addl
aaa
in
ror
mov
fnstenv
cmp
stos
lcall
cmp
test
shrl
mov
add
scas
lods
inc
imul
jae
push
push
sarl
data16
shl
loopne
dec
sti
cmp
inc
adc
mov
mov
or
pop
rorb
mov
cmpsl
sbb
outsb
add
add
mov
aas
aaa
adc
add
jbe
mov
or
push
pop
sbb
inc
jecxz
mov
scas
or
lds
fidivrl
adc
xchg
scas
ds
cmp
aam
push
jg
or
adcl
and
jae
push
out
xor
arpl
imul
mov
pop
imul
outsl
rcrl
clc
or
add
incb
and
insl
mov
cmpsl
iret
mov
movsb
out
cmp
stc
xlat
adc
negb
dec
fistps
fidivl
xor
das
adc
shrb
insb
jecxz
or
test
and
jle
xchg
mov
mov
ret
jne
in
scas
xor
xor
mov
outsb
iret
cld
push
jp
sti
popf
sahf
lret
nop
jmp
out
imul
pop
dec
pop
push
mov
lret
icebp
fcomip
mov
xor
iret
into
lods
push
pop
into
pop
mov
cmpsb
movsl
loopne
push
jmp
jge
insb
out
lahf
ds
sbb
lret
sbb
fiaddl
inc
std
inc
dec
cwtl
adc
ds
add
das
push
je
movl
pop
daa
or
or
xlat
stc
cmp
jb
mov
push
mov
jno
insl
mov
push
clc
in
subb
call
or
mov
mov
push
cmp
cmp
lcall
mov
adc
jo
pop
popa
rclb
sbb
xchg
cmp
call
inc
cmp
orb
jno
lods
xor
dec
in
or
stc
cwtl
add
add
add
lock
sbb
xorl
xchg
arpl
clc
cltd
pop
adc
jl
jp
or
cltd
cmp
stos
stos
test
jp
xor
rcrb
out
in
xchg
push
popa
xchg
pop
cwtl
jmp
ja
pop
ja
mov
inc
mov
movsb
dec
je
xor
cmp
into
xchg
xor
pop
daa
mov
adc
aad
jg
push
je
xor
dec
pop
inc
pop
mov
cmpsb
mov
sbbl
push
popa
mov
rcrb
loope
or
dec
push
les
or
cmp
cmp
mov
push
lods
jne
dec
div
xchg
sahf
or
fsubp
jg
fwait
in
or
aam
icebp
stos
push
lret
ja
in
fcoms
imul
push
shlb
sbb
or
ja
out
mov
dec
mov
xchg
addr16
sbb
filds
xor
inc
sbb
cli
pushf
cmpsl
ret
int3
fidivrl
xor
xchg
test
cld
xchg
lahf
bnd
or
testl
jb
push
mov
in
hlt
insl
idivl
into
mov
in
cmp
pop
scas
clc
subl
data16
sbb
pop
gs
pop
stos
cwtl
dec
aam
sti
repnz
sbb
lret
xor
push
outsb
fmul
sbb
es
and
inc
addr16
lret
xchg
sub
dec
cli
pop
mov
xlat
jo
leave
and
xchg
sbb
or
fisttpll
and
mov
dec
xlat
and
push
cmp
sbb
es
pushf
xor
js
out
ret
and
pop
dec
and
xchg
and
push
push
imull
out
sbb
mov
arpl
pop
icebp
cltd
int
adc
hlt
cs
loopne
test
loop
xchg
sub
aaa
sub
cmp
dec
push
jle
or
lods
jno
lds
adc
mov
clc
pusha
inc
out
dec
mov
nop
dec
add
mov
push
sub
xchg
jp
stc
jg
mov
jo
sti
add
sbb
xor
stos
inc
orl
fdivs
push
mov
ret
push
mov
xor
or
adc
mov
repnz
inc
mov
clc
stc
test
or
add
xchg
stos
stos
mov
int
daa
in
inc
inc
sub
mov
clc
iret
lahf
inc
pop
mov
lods
mov
mov
call
add
jo
push
and
cmpsb
mov
fstpt
lds
cld
js
loopne
jge
jo
sub
ret
cmc
xchg
jns
sbb
inc
cld
add
jp
movsb
aad
clc
and
fidivs
and
pop
mov
push
lds
pop
dec
test
out
call
pop
addr16
sbb
or
mov
dec
xchg
inc
jne
adc
mov
jge
fucomp
out
cs
lock
lock
mov
mov
push
xor
mov
shl
bound
aam
or
jmp
xchg
jb
cmp
jnp
daa
mov
fiaddl
add
pop
mov
ret
or
mov
mov
sub
bound
shrb
out
lret
mov
pop
sahf
lea
cltd
xchg
add
xchg
out
or
lock
lods
pop
lea
jo
mov
arpl
int3
mov
dec
xor
mov
loope
fcoms
jl
aad
stc
test
xor
xorl
ds
sub
or
gs
jl
or
pop
outsb
or
mov
xorb
popw
popa
cmp
adc
add
cmp
jecxz
fadds
lods
push
jle
and
psadbw
inc
and
repnz
mov
or
mov
into
fildll
insl
in
pusha
fisttpll
movsb
decb
mov
or
add
inc
cmc
push
arpl
idivl
je
mov
rorl
ds
dec
cmpsb
push
jno
jo
sub
in
mov
arpl
test
test
cmpsl
mov
sbb
out
incb
clc
jmp
and
repz
push
push
inc
jae
lods
shrl
xor
push
popf
dec
xor
jbe
pusha
fcmovnb
sub
out
int3
xchg
adc
mov
mov
out
dec
xchg
cmpsb
push
fimull
mov
or
hlt
ds
test
mov
fwait
cmp
jl
cmpsl
and
pop
adc
inc
dec
pop
add
gs
aam
jecxz
xchg
repz
lods
faddl
loopne
testb
into
jno
cld
push
leave
fcomps
ja
out
mov
fcmovbe
jge
sbbl
inc
ret
add
sub
adc
data16
jl
fcmovnbe
mov
or
xor
ds
out
fadd
cmp
inc
mov
dec
pop
sub
mov
push
rcl
hlt
mov
pushl
sbb
frstor
fwait
dec
je
lahf
clc
fisubrl
cmp
dec
test
mov
xchg
mov
arpl
fcoml
pop
mov
cmp
stc
daa
sbb
jmp
mov
mov
inc
adc
sub
or
mov
add
les
das
pop
movsb
test
in
and
push
xlat
and
mov
les
jne
sbb
lea
inc
dec
jb
ja
leave
sub
lret
ret
push
loopne
les
push
pop
sub
sbb
icebp
mov
adc
pusha
mov
xlat
sbb
rolb
mov
adc
mov
fiadds
ret
testb
sbb
sahf
sarl
mov
push
xchg
push
call
iret
je
jmp
cmpsb
ror
mov
rol
sub
pop
loope
push
gs
adc
pop
xlat
push
cwtl
fnstsw
ja
bnd
xchg
inc
pop
ljmp
outsl
gs
fbld
push
cmpsb
mov
pop
popf
cmp
ss
fstps
sub
jns
mov
pusha
sub
int3
mov
or
insl
pop
pop
stos
cmc
sbb
sub
push
test
cld
lock
mov
jp
pusha
jl
loop
dec
inc
mov
pop
cmp
xchg
pop
push
sbb
mov
aad
out
or
sub
cwtl
mov
xchg
mov
jmp
mov
fwait
push
lret
sub
mov
jo
fistpll
add
sbb
aas
scas
rclb
xlat
add
xchg
popa
fsubs
jbe
cwtl
rclb
sub
hlt
pop
mov
mov
pusha
ret
jecxz
scas
loope
dec
cmp
pop
dec
fistpll
and
xor
dec
sahf
fdivr
pop
andb
mov
inc
loope
cmp
ja
in
dec
add
leave
mov
inc
scas
or
ja
dec
mov
ja
je
sbb
adcb
inc
shlb
pop
inc
and
lret
shl
cmp
push
stc
dec
adc
cmp
loope
aas
popa
mov
pop
xor
das
decb
and
jb
sbb
aam
adc
xorl
je
in
and
ret
test
push
inc
iret
or
fiaddl
mov
and
dec
icebp
jp
xchg
test
sub
pop
mov
in
pop
repz
jle
xlat
sbb
dec
cs
xchg
fs
mov
push
push
out
sbb
dec
out
fbld
hlt
fs
sub
push
fwait
xchg
mov
mov
sbb
loopne
xor
sbb
lea
repz
scas
and
cmpb
scas
or
lea
mov
lahf
fdivrp
popf
aad
lock
cmp
cmc
and
scas
and
aas
insl
in
popf
cmpsl
jle
test
xor
add
or
into
or
mov
pxor
lds
xchg
inc
mov
jl
enter
out
jl
mov
xsaveopt
push
xchg
scas
rclb
fimull
shll
sbb
dec
and
fcomp
cs
ficoms
and
flds
mov
mov
loopne
xor
decb
cmc
nop
jecxz
filds
icebp
sub
in
jmp
sub
jl
push
push
pop
push
jge
xor
mov
cmp
int
add
add
xchg
mov
xor
test
push
pop
sub
jl
sti
shrl
sbb
cltd
outsb
cmp
push
repnz
xchg
jp
pusha
jnp
sub
jb
fldcw
inc
in
in
divb
dec
pop
push
mov
adc
jb
add
jns
and
lds
xor
pop
add
out
push
sbb
cmp
jns
xor
xchg
pop
popa
lret
mov
lret
mov
into
test
inc
lock
loopne
idivl
jecxz
pop
inc
test
bound
enter
fldt
clc
mov
scas
mov
rclb
push
pop
in
lods
idivl
lea
fucom
push
mov
ret
mov
dec
in
fs
mov
daa
mov
neg
mov
aad
jns
xor
adc
adc
inc
mov
sahf
loop
ret
add
lds
lods
mov
xor
outsb
jle
ja
cmpsl
xor
js
in
pop
or
nop
cld
or
push
and
jns
dec
nop
mov
jae
lcall
xchg
cmp
sar
outsl
pushf
or
ljmp
fdivs
jl
dec
add
cwtl
sub
js
arpl
lods
dec
and
jne
lea
or
cmp
push
ss
aam
or
dec
outsl
aaa
mov
inc
sbb
mov
cmpsl
cmpsl
shlb
adcb
cld
pop
mov
sahf
or
mov
test
punpcklbw
push
loop,pt
push
inc
repz
mov
ljmp
sub
jno
scas
add
sbb
test
iret
or
testb
leave
in
daa
mov
or
mov
out
shrb
inc
jp
outsb
rorl
scas
test
outsl
push
lcall
mov
cmpsb
xor
add
pop
sub
jne
jnp
pop
cs
cmpsb
es
add
arpl
sub
jb
sbb
andb
dec
insb
jo
adc
xchg
inc
rorb
enter
fstpt
add
jno
out
ficoms
dec
stc
je
lods
and
xor
cld
xor
jne
push
lds
cli
add
fs
ds
stos
jmp
out
jmp
add
fildl
cmc
ficompl
incb
and
repnz
es
into
lahf
stos
test
aam
popf
imul
test
xchg
aaa
lcall
faddl
fsubp
mov
psubw
jns
jmp
or
pop
xor
sbb
mov
xor
cltd
out
fistpl
jae
shl
out
sbb
xor
mov
push
andl
scas
call
mov
mov
notl
mov
sub
sahf
xchg
jl
mov
xor
hlt
sbb
sub
jl
gs
roll
jnp
lods
pop
pop
mov
mov
dec
mov
xor
aad
mov
pusha
ds
cmp
mov
jae
cld
arpl
movsl
xor
stos
jae
inc
int3
inc
mov
out
pop
pusha
or
or
lds
jg
jecxz
xlat
xlat
or
push
xor
dec
push
and
cmp
test
js
lods
test
cwtl
inc
jns
xchg
repnz
mov
xchg
add
or
and
dec
loope
or
or
jno
jb
dec
or
lock
push
sahf
add
retw
cld
sahf
insl
lcall
imull
jb
xchg
pop
es
xlat
test
or
sub
jmp
inc
ret
lock
lods
inc
stos
cmc
outsb
push
jnp
out
sbb
arpl
adc
andb
sbbl
cmp
aad
addr16
lods
jge
sub
insb
ret
mov
fsubr
stc
ffree
mov
dec
imul
gs
sbb
idivl
cmp
andl
jl
int
mov
sub
pushf
shr
jmp
iret
push
add
lcall
repz
dec
and
cmpsl
xor
lahf
pop
movsl
lock
dec
xor
push
inc
or
push
adc
sbb
nop
mov
add
or
adc
dec
mov
inc
loop
aaa
aad
push
fidivs
sti
inc
pop
scas
or
jo
jns
adc
ret
ljmp
rcl
dec
shlb
adc
daa
push
jl
out
push
cltd
aam
mov
cmp
stos
xor
sti
xor
or
xor
cmp
sbb
lahf
xor
xor
mov
sbb
stos
cmp
cmp
xchg
cmpb
xchg
inc
push
fwait
clc
cld
sbb
pop
xcrypt-cfb
cmpsl
cmpsl
mov
mov
adc
outsb
mov
insb
xchg
mov
xchg
icebp
xchg
mov
mov
or
sbb
mov
imul
mov
jp
xor
pop
pop
dec
aad
enter
scas
push
sbb
push
dec
pop
push
stc
lds
xlat
push
outsb
testb
in
mov
add
cmp
jg
mov
ret
dec
aad
add
fiaddl
jae
test
inc
mov
popa
pop
je
and
xlat
neg
xchg
hlt
test
or
test
fucomp
mov
adc
jae
out
ret
gs
imul
xor
sbb
inc
mov
lret
cmc
addr16
not
lret
and
cmp
push
dec
rcr
lret
inc
cmp
cmpsl
push
push
fwait
jmp
lret
insb
jb
push
mov
xchg
and
pop
rclb
rcll
rcrl
or
mov
jge
fs
cld
sbb
mov
icebp
mov
in
mov
or
in
cmp
sub
enter
nop
mov
xchg
sbb
sbb
jnp
js
das
imul
call
adc
xor
call
mov
inc
jge
mov
cld
mov
int3
dec
ret
xor
fsubrl
dec
push
mov
adc
fistl
mov
test
sub
push
dec
mov
fsubs
and
pop
xor
stos
std
jbe
clc
aad
jae
and
insb
pusha
jp
pusha
loopne
push
add
inc
xchg
jne
insb
pushf
movsb
test
push
adc
das
lods
lret
dec
pop
repz
divl
lock
xchg
lret
popf
add
fiaddl
hlt
das
mov
mov
cltd
jle
out
jae
sub
dec
bound
lds
mov
je
repnz
leave
pop
divb
sub
cmc
mov
adc
push
xor
imul
je
mov
rorb
decl
add
aad
jnp
pop
xchg
jmp
ret
divl
stos
mov
inc
mov
js
inc
lea
lahf
or
enter
pop
orl
test
mov
adc
add
outsl
stos
push
adc
push
data16
pop
push
enter
repnz
inc
xchg
lods
pop
mov
sarl
and
sarl
lods
js
add
push
adc
push
xchg
push
inc
lret
int3
mov
in
jb
adc
andl
lahf
sbb
pusha
lods
int3
pusha
mov
dec
cwtl
cmp
adc
es
push
ret
insl
cmc
stc
je
mov
fs
lds
jge
and
pop
xor
jecxz
add
inc
mov
add
inc
xchg
int
or
push
sbb
and
jo
or
xor
and
inc
addr16
add
push
jl
adc
pushf
scas
out
jg
pop
pushf
inc
sbb
sub
pop
popf
inc
std
aas
fmuls
mov
mov
into
ror
ret
mov
jmp
adc
fcoms
add
insl
popl
or
mov
leave
cmp
loope
jno
outsl
mov
mov
sub
xchg
pop
sub
int3
fsubl
adc
xchg
addr16
mov
pusha
sbb
inc
push
xchg
mov
mov
xchg
xchg
inc
mov
scas
mov
pop
lcall
add
out
shrl
mov
jmp
mov
into
shrb
sbb
lock
repz
add
xor
cltd
push
aas
mov
test
into
adc
mov
subb
sarl
faddl
dec
xor
jne
notb
sbb
or
shll
xor
jae
or
mov
lock
jg
cli
jle
bound
xchg
xor
and
add
out
push
jg
in
or
sbb
xchg
xchg
push
lods
pushf
inc
and
pop
push
add
stc
pop
push
test
sarb
daa
stc
mov
pop
arpl
addb
sahf
dec
push
xchg
sbb
dec
jmp
jno
inc
hlt
and
insl
jb
sarl
inc
and
xchg
pusha
mov
fdivrs
jp
imul
xor
stos
jbe
fldl
data16
cmc
or
and
mov
cmpsl
popf
sbb
enter
arpl
and
in
das
imulb
mov
or
push
and
and
xchg
aad
inc
mov
add
fcompl
add
sub
push
in
sbb
mov
outsl
movsb
pop
mov
mov
dec
mov
or
in
pop
bound
shll
addl
in
adc
fcomp
jmp
fcmovu
and
in
sti
imul
sub
je
out
jbe
jbe
adcl
gs
in
sbb
mov
mov
cmc
imul
push
scas
dec
inc
mov
cs
mov
sub
lods
iret
add
pushf
in
es
pop
mov
fsubr
mov
and
lcall
shl
ret
clc
jne
lcall
stos
test
jl
xchg
push
ret
mov
outsl
arpl
inc
in
movl
lods
adcb
sub
jp
ret
loop
fisubl
lock
in
scas
xchg
xchg
mov
and
pop
and
lret
pop
mov
cs
stos
cmpsl
dec
mov
fisubrl
push
push
test
push
xor
sbb
and
mov
jp
test
arpl
in
push
scas
std
jne
in
jae
adc
enter
jge
fists
int
icebp
xor
mov
inc
inc
inc
cld
ss
ror
ljmp
imul
pop
jnp
xchg
and
ficomps
int
inc
into
dec
stc
jecxz
roll
shr
call
and
sub
lahf
pop
lahf
popa
mov
xchg
popf
jge
sbb
mov
cmpsl
dec
sub
jae
lcall
dec
cmp
mov
cwtl
mov
push
fildl
pop
and
negb
xchg
hlt
sub
es
aas
inc
push
sub
xchg
pop
sub
pushf
push
es
push
aas
mov
inc
in
pusha
fsubrs
xor
adc
add
jno
xor
and
jo
cltd
and
data16
out
fdiv
jo
mov
push
iret
sbb
into
icebp
stc
jno
mov
jmp
pop
cwtl
mov
mov
test
es
sbb
jno
dec
pop
jg
js
out
push
mov
sbb
popa
cltd
xor
popf
popf
or
repnz
cmp
push
fs
fldl
mov
xor
sarb
cwtl
cmp
mov
cmp
int
inc
xchg
sbb
mov
imul
popa
push
int
and
fs
cltd
pop
adcl
mov
jg
fidivs
jns
pusha
clc
iret
popf
adc
and
pop
push
sbb
add
addb
ficoms
mov
pop
mov
bswap
cltd
jp
or
stos
imull
xchg
jno
lret
mov
mov
lock
jecxz
adc
cli
subb
into
pop
jecxz
jo
mov
lds
pusha
in
pop
mov
out
mov
sbb
add
inc
xchg
mov
cmpsl
fdivrl
add
pusha
fildll
mov
or
push
cmpsl
notl
ret
lock
subb
adc
int
or
movsb
lds
or
out
lods
mov
std
pop
sahf
cmp
repnz
mov
or
xor
xor
push
and
les
bts
scas
xor
mov
mov
stc
pop
mov
shl
fucom
fists
fwait
scas
mov
xchg
xor
loopne
add
sahf
imul
bound
lret
movsb
push
popa
dec
int
sub
sbb
in
xchg
mov
add
push
push
mov
mov
out
xchg
push
sbbb
mov
arpl
adc
and
idiv
mov
sti
sbb
jmp
mov
inc
ljmp
pop
in
stos
loopne
push
mov
push
test
outsl
jp
jp
or
mov
scas
aad
sbb
xor
xchg
lcall
lcall
ljmp
pop
fnsave
mov
and
repnz
xorb
nop
out
xor
std
mov
psrad
xor
shl
mov
insl
xchg
inc
jnp
xor
add
pop
cltd
js
fisttpll
in
jg
dec
fcomip
es
mov
clc
out
adc
or
int
sub
scas
add
pop
cmpsb
xor
sti
pusha
insl
jae
adc
mov
push
or
xchg
cmp
mov
fsubs
cli
scas
rcl
xchg
inc
jl
dec
adc
lea
mov
jne
in
pop
adc
sbb
call
xchg
mov
ficompl
mov
mov
fdiv
push
push
ret
push
push
movsb
rcll
loope
jae
pop
mov
test
add
imul
pop
fisttpl
aas
cli
inc
js
sbb
fildl
lds
shrl
movsb
dec
push
push
cmp
js
pop
f2xm1
inc
xlat
push
pop
dec
adc
fnstcw
ja
lds
and
lahf
mov
cld
ljmp
dec
lds
pop
or
mov
test
jnp
jne
scas
add
cmpsb
stos
lret
add
clc
imul
jae
xchg
push
test
cmc
mov
adc
jo
pop
dec
mov
mov
xchg
int
jge
push
pop
in
mov
jns
loopne
scas
push
or
mov
mov
popa
test
enter
add
fsts
and
and
push
push
rorb
cmp
fldenv
pop
test
lea
clc
in
jnp
pop
mov
or
cmp
movsl
sbb
ljmp
sub
mov
or
fldl
cmp
out
sti
inc
sub
mov
cmp
and
add
cmp
popf
clc
adc
bound
stos
xchg
mov
iret
gs
pop
test
pop
ljmp
fucom
bound
cmp
ret
pop
ja
call
inc
clc
inc
lret
and
pop
dec
cmp
movl
les
adcl
mov
cmpsb
xor
xchg
shl
xor
and
pop
sahf
adc
bound
and
jbe
sar
pop
pop
lds
gs
push
push
nop
mov
dec
repz
push
hlt
shl
lods
jecxz
test
inc
and
dec
cmpb
or
inc
lret
aas
sub
mov
mov
cli
or
push
mov
sbb
ss
push
cmpsl
xchg
pop
push
xchg
ret
mov
xor
and
sbb
xchg
push
mov
mov
lods
int3
sub
mov
sub
outsl
adc
int3
fcomps
mov
cmp
jmp
and
or
cmp
inc
nop
sub
jg
pop
lods
pop
mov
mov
or
xchg
shll
std
es
fmuls
pop
scas
adc
mov
xor
adc
movsb
fcmovnbe
cli
sbb
add
int
dec
orl
pushf
cmp
cmc
lret
push
jp
jmp
sbb
jmp
out
dec
ss
enter
test
pop
mov
dec
imul
clc
xor
fwait
sub
jnp
pop
loope
push
pop
mov
out
inc
or
mov
push
xor
xchg
repz
and
lods
bound
jge
std
fadds
add
jb
imul
mov
lahf
pop
mov
out
push
xor
rol
imul
and
inc
mov
dec
jbe
mov
sbb
jns
out
cmpsl
push
push
nop
stos
orl
xor
aas
adc
aad
or
mov
adc
icebp
scas
dec
out
int
bound
lret
std
mov
outsl
pop
and
lret
sub
push
in
sbb
or
dec
lret
xor
lds
scas
adc
pop
out
jno
loop
jne
bound
je
xchg
adc
int3
int3
cmp
inc
xchg
cmp
sahf
nop
push
inc
test
imul
sti
dec
arpl
cmpsb
iret
inc
cmp
jg
iret
stc
outsl
xchg
bound
leave
or
lahf
push
fwait
sbb
fwait
cmpsl
cwtl
fstl
in
lea
scas
popa
sbb
or
ljmp
add
fs
ljmp
add
loope
mov
cli
gs
dec
dec
lahf
out
pop
popa
cmp
outsl
test
mov
lods
pushf
mov
push
dec
sub
mov
je
and
roll
push
js
outsb
mov
push
imul
outsl
testl
cld
push
gs
aas
sar
mov
jne
std
js
sahf
dec
jmp
cltd
mov
in
pop
lods
js
addr16
pop
loop
shl
mov
outsl
aaa
hlt
inc
inc
mov
mov
dec
jmp
fwait
cmpsl
js
jmp
dec
mov
mov
bound
mov
je
xor
negb
cmp
loope
add
addr16
stos
data16
les
daa
ss
into
mov
das
push
push
jge
or
into
pusha
jecxz
lcall
jns
stos
push
mov
jo
push
pop
incb
loop
ficoms
inc
pusha
xchg
adc
sub
mulb
cmp
mov
test
lock
xchg
and
mov
cmpsl
pop
or
xchg
out
mov
push
scas
pop
or
mov
nop
les
lods
adc
jns
mov
bound
sbb
mov
aam
mulb
adc
xor
xlat
push
les
mov
cltd
ljmp
or
loop
les
push
and
das
inc
imul
lea
std
lock
dec
xor
enter
insb
jo
das
out
or
cmp
lods
add
in
pop
push
or
push
or
inc
cmp
bound
lock
lods
xchg
inc
pusha
xchg
out
insb
sub
xchg
sbb
imulb
xchg
jmp
hlt
add
enter
loope
dec
mov
mov
dec
mov
adc
or
sbb
mov
addb
repnz
pop
jmp
adc
mov
jecxz
push
xchg
mov
cmpsb
mov
mov
sub
shlb
bound
ret
add
jle
sbb
iret
lret
addr16
or
inc
push
push
xor
nop
addr16
jns
pushf
push
sub
dec
sbb
cmp
pop
and
nop
mov
xor
jmp
sub
inc
cmpb
mov
out
andb
mov
shl
push
fistpl
push
cmp
pushf
inc
sbb
aad
xor
jns
adc
repz
or
repnz
xorl
sbb
lcall
aaa
pop
pusha
mov
mov
add
adc
sbbb
jns
enter
jmp
enter
or
or
jns
inc
imul
inc
push
sbb
lock
aad
leave
loopne
inc
mov
jmp
inc
stos
jmp
fmuls
cmp
add
js
add
and
mov
adc
das
sar
sub
inc
inc
testb
cmp
loop
xor
scas
iret
dec
cmpsl
push
comiss
ds
pop
scas
shlb
movsl
sarb
mov
stos
lahf
nop
push
outsb
lret
inc
pusha
jp
push
xchg
mov
scas
inc
nop
xor
mov
push
xchg
push
inc
push
int3
mov
mov
addr16
xchg
std
inc
mov
xorb
out
mov
cli
pusha
jnp
das
ds
je
js
and
daa
cmp
mov
adc
fwait
or
movsb
xor
add
popf
jb
mov
ja
test
movsb
xchg
inc
aad
or
inc
out
inc
xor
orb
xchg
jnp
mov
or
div
sbb
adc
cltd
loop
lds
xor
loop
scas
shrb
push
or
or
test
lcall
out
add
jmp
add
lret
fnstsw
and
test
or
jne
pop
pop
inc
mov
es
repz
adc
std
or
fcom
xor
cld
or
xor
push
dec
xchg
or
ja
fadd
mov
test
rcrb
dec
sbb
movsb
lahf
call
das
pop
inc
push
mov
cmp
pop
outsb
sub
adc
push
cmp
sbb
mov
dec
rcrl
insl
sbb
hlt
repz
in
add
mov
or
stos
leave
inc
ss
leave
orl
movsb
test
xor
lock
sub
icebp
mov
loop
into
and
movsb
test
jb
loopne
xor
fsubr
int3
xchg
inc
enter
clc
lcall
in
cmp
inc
mov
mov
addr16
mov
sarb
sbb
and
sahf
dec
dec
mov
pop
xor
mov
push
repnz
dec
pop
or
roll
push
cmpsb
sub
pushl
ret
dec
into
adc
out
repz
xchg
popf
scas
lcall
mov
and
nop
lods
mov
sub
sbb
jbe
push
pop
xor
insb
je
addb
pop
ljmp
cmp
jecxz
movsl
pop
dec
dec
movsb
movsl
or
xor
jp
dec
xchg
lds
out
or
dec
xor
rcrl
stos
push
or
xlat
mov
jmp
mov
repz
lods
je
or
jp
stos
xor
push
sti
sbb
mov
fdivrp
sub
mov
sti
jnp
fstpl
aam
fimuls
in
xor
sbb
les
adc
and
push
dec
jae
test
dec
dec
ss
push
rclb
mov
ljmp
pop
xchg
pusha
sub
lea
mov
call
pop
repz
in
fwait
push
pushf
arpl
nop
test
xor
push
mov
lods
jp
lcall
int
jb
fs
data16
int3
jmp
push
mov
aam
push
clc
sbb
mov
jecxz
and
push
fisttpll
sti
data16
out
fildll
jb
push
push
jbe
movsb
and
std
sahf
enter
mov
xor
mov
mov
jl
sub
adc
sti
imul
inc
ret
push
frstor
mov
xor
and
shlb
mov
mov
push
inc
add
push
pop
or
cmp
push
fucom
dec
popa
cmp
iret
add
cwtl
std
fstpt
sub
imul
cpuid
test
das
and
mov
mov
fwait
lea
outsl
sbb
outsb
xlat
mov
mov
push
fs
rol
cli
push
insb
outsb
or
jbe
out
cmp
xchg
rorb
je
adc
fimuls
xor
jns
das
fcmove
xor
outsb
rcl
cltd
xor
jo
fcmovb
add
and
dec
xlat
push
adc
pop
loop
push
mov
inc
rorl
insb
inc
aaa
outsl
xlat
push
movsb
cmp
ficompl
jns
sub
out
push
rorb
fbld
stos
jb
sub
das
sbb
jmp
xorb
cli
xchg
push
clc
outsb
push
dec
std
lods
sbb
stos
add
mov
pop
mov
add
push
fidivs
out
jle
mov
and
test
inc
mov
repnz
adc
cmp
or
call
jae
jle
dec
mov
cmp
sarl
mov
xchg
movsb
xchg
pop
sub
je
pop
ret
fidivs
dec
cld
ret
push
pop
push
imul
int3
ja
push
adcl
push
mov
ds
std
fdivs
fstl
pop
frstor
mov
sub
cmp
repnz
movsb
mov
pop
jg
pop
jmp
dec
sbb
push
and
mov
xchg
andb
scas
pushf
jge
movsb
mov
add
jmp
dec
cwtl
mov
mov
pop
andl
xor
pop
xor
jge
cmpsl
sub
xor
lret
dec
shrl
icebp
jle
jl
nop
cmp
clc
aad
sub
mov
xor
sbb
hlt
pop
sub
icebp
xlat
dec
push
lret
or
xchg
cli
lods
nop
int
or
and
mov
push
sbb
nop
bound
pop
repz
hlt
ret
push
lods
testb
and
iret
movsl
inc
push
int3
xchg
mov
or
or
add
cli
and
fneni(8087
add
les
andb
dec
popa
adc
fldenv
cld
mov
out
vpsubw
repnz
scas
add
in
pop
loope
inc
inc
pop
cmc
inc
lahf
cmpsb
shl
xor
loopne
sub
mov
shlb
mov
cmp
jno
pop
pop
js
insb
cmp
mov
cmpsb
pusha
inc
sub
mov
mov
subb
mov
loope
pop
push
popa
arpl
and
and
sbb
xor
lret
aam
xchg
nop
xchg
jns
das
sub
jg
inc
fistpll
in
and
push
lods
push
icebp
and
js
mov
rcll
jmp
push
adc
lret
fldcw
mov
fidivrs
sbb
jbe
pop
daa
stos
outsb
test
inc
sbb
push
js,pn
cmpsb
lods
and
or
inc
imul
mov
in
icebp
subl
je
rcll
sbb
pushf
inc
pop
lahf
sbb
push
cs
adc
or
mov
sbb
add
stc
xor
leave
das
fisttpll
or
mov
xor
jmp
jle
fwait
mov
pushf
fcmovnb
fidivrl
addr16
lret
inc
pop
pushf
popa
fadds
sahf
out
jno
push
jo
aad
cmp
stc
sbb
inc
imul
jo
test
sub
int3
xchg
push
in
aaa
imul
sub
jl
ja
lds
sbb
xchg
nopl
mov
das
bound
call
sahf
int3
rol
and
lods
lods
imul
mov
jl
int
pop
fsubp
sahf
dec
sub
bound
xchg
das
fsubs
jae
fcomps
mov
xor
jp
mov
stos
xchg
xchg
fstps
dec
push
fcoml
nop
ss
sub
pop
sub
sub
xor
xlat
repnz
inc
mov
jge
xor
les
ret
mov
sub
xor
push
fucomi
cs
jecxz
mov
jbe
pop
rcll
xor
outsb
dec
test
repnz
cmpsb
adc
popa
mov
cmpsb
clc
xchg
and
xor
es
int3
mov
js
push
rcll
push
mov
scas
push
rolb
lock
cli
icebp
mov
or
iret
out
mov
lcall
adcb
loopne
jle
in
js
xor
das
fcomps
insb
in
sub
sbb
in
insl
inc
lea
loopne
cltd
mov
jbe
sbb
jo
jmp
push
pushf
jbe
inc
sbb
imul
mov
icebp
andb
mov
mov
cmpsb
jecxz
dec
fldenv
xor
aaa
ljmp
mov
pop
xor
fisttps
inc
jl
fsubrs
or
repnz
mov
add
dec
add
and
mov
cli
cld
daa
fbstp
rcr
mov
test
pop
jl
push
inc
pop
xor
pop
push
cmpsb
inc
xchg
sti
rcrb
xchg
ljmp
cmp
data16
sub
pop
scas
rcll
fcmovnb
sti
je
sbb
jnp
sahf
mov
push
into
sti
cltd
ds
insl
pxor
aas
push
mov
in
dec
xchg
out
fdiv
daa
testb
push
rolb
lret
pop
roll
movsl
pop
xchg
pop
in
dec
push
fists
pop
xor
out
repnz
jg
stc
sti
out
ret
cmc
sub
xchg
in
pushf
or
jno
push
push
fs
xchg
jmp
sub
dec
cmp
lods
daa
mov
test
or
mov
sbb
and
leave
cwtl
lods
neg
lock
sub
fstpl
cmpsb
sub
dec
call
mov
and
ss
sub
dec
cmp
clc
inc
inc
and
les
adc
ficomps
outsl
repz
shr
hlt
fists
mov
movsl
push
mov
mov
cltd
sub
js
or
in
repz
int
cmp
test
sbb
in
cwtl
mov
add
idiv
or
lock
mov
adc
adc
cmpl
inc
cmp
lret
xchg
movlps
push
aam
ret
jge
ret
ret
aam
mov
jb
lahf
dec
int3
lahf
movsl
xchg
xchg
js
or
mov
cmp
sub
mov
in
cmp
fucom
mov
in
push
roll
jb
jo
cmp
pop
fldenv
pop
jbe
push
lret
sti
and
cld
jl
xor
jecxz
popf
das
pop
mov
push
mov
pop
aas
movsl
adc
cmp
xor
lahf
add
cmc
mov
lea
mov
test
push
movsb
lahf
aaa
aad
cmc
pop
pop
mov
inc
in
sbb
mov
ud0
xchg
or
mov
jle
cmc
pusha
add
adc
pop
divb
rcll
nop
push
scas
fnsave
inc
adc
ljmp
jl
cld
clc
jns
mov
add
loopne
out
pop
and
jae
push
xor
inc
sub
shrb
mov
fwait
rorl
cmp
call
mov
jmp
aam
sarl
stc
movb
movsl
lret
pop
xor
dec
je
mov
dec
inc
scas
dec
push
pop
xor
aaa
pop
dec
push
stc
outsl
imul
in
push
dec
lds
cli
dec
mov
aaa
out
in
test
shll
inc
jno
jmp
jecxz,pn
and
in
sbb
adc
xor
lret
lods
push
sbb
xchg
jne
xchg
push
gs
nop
sbb
js
test
mov
and
es
jge
rorb
sub
mov
sub
adc
sbb
and
movsb
mov
push
daa
mov
fsts
loop
mov
iret
mov
adcl
add
sub
mov
mov
push
repz
out
cli
xchg
jp
ret
mov
into
sub
stc
cld
shrd
js
roll
inc
adc
pop
lcall
pushf
and
xor
fwait
lahf
test
or
lea
xor
aaa
jno
jne
xor
xchg
xor
mov
push
inc
stos
aad
mov
int3
cmpsb
lods
fwait
cmpsb
sub
jne
test
call
hlt
fisubl
adc
ficoml
and
jno
jmp
push
sbb
rcr
es
push
mov
push
clc
mov
je
jge
push
data16
adc
pop
je
xchg
popf
jae
cltd
addl
loopne
push
das
jo
rcll
outsb
sbb
and
dec
xchg
xchg
adc
inc
dec
sub
inc
leave
je
and
inc
loopne
and
mov
out
test
repz
cmp
cmpsl
inc
push
cmp
int3
xchg
or
outsb
lret
mov
pop
int3
pop
sub
cmp
sub
js
jo
test
and
push
lahf
push
repz
push
mov
rcll
and
inc
iret
xor
xorb
mov
stc
sub
sti
dec
pop
or
mov
test
sti
ret
pop
icebp
jmp
jle
fsubrp
inc
pop
ds
repnz
test
mov
jb
pop
pop
in
mov
xchg
push
mov
adc
cltd
das
add
xchg
outsl
fmull
add
pop
test
add
mov
or
inc
adc
imulb
dec
sbb
fneni(8087
push
sbb
dec
add
sbb
test
inc
dec
test
std
push
mov
adc
mov
mov
or
push
xchg
and
cmc
notb
mov
orb
lock
clc
push
add
dec
aam
xchg
std
int
test
mov
dec
sbbl
jns
xor
cmc
lret
cmp
lock
inc
sarb
cmpsb
jns
push
lock
and
mov
ljmp
into
cmpsl
sbb
push
xchg
neg
xchg
popf
or
mov
inc
pushf
cmc
cmp
cmp
cld
inc
out
in
aas
loop,pn
dec
decl
mov
jge
stc
add
out
popa
fldl
sub
jnp
mov
inc
add
cmp
fiaddl
xor
and
cmp
pop
into
cmp
xlat
dec
lock
push
pop
icebp
movsb
pusha
pop
fldt
mov
movsl
jle
xchg
rclb
mov
arpl
push
mov
lahf
fwait
pop
jo
rol
popf
or
movsl
mov
mov
test
mov
adc
insb
jmp
enter
sub
sbb
xor
cmp
pop
in
sub
add
or
out
push
dec
mov
and
icebp
ret
mov
dec
dec
mov
xlat
pop
imul
sub
lea
hlt
jae
clc
push
mov
sbb
es
push
insb
clc
xchg
pop
adc
pop
mov
jg
shlb
cmp
sbb
in
mov
cltd
mov
and
loopne
pop
daa
pop
sbb
pop
add
mov
push
inc
jmp
leave
loope
jae
int3
js
cmpb
or
mov
jge
scas
scas
push
mov
ret
cmp
popl
stos
pop
sbb
inc
out
jae
lahf
cmpsb
add
add
into
adc
outsl
stos
mov
sti
popf
push
jg
rcrw
out
mov
adc
fbld
sbb
loope
insl
cmp
mov
icebp
lahf
adc
ret
cs
out
daa
mov
dec
push
jnp
jbe
or
sub
outsl
cwtl
mov
in
pop
pop
adc
insl
xor
cmp
movsl
jbe
icebp
cwtl
pop
lret
adcl
in
sbb
fcoms
xor
bound
out
jb
outsb
outsl
push
and
xor
add
rol
ret
mov
sbb
cmpsl
test
pop
mov
arpl
or
xchg
mov
mov
inc
sub
jb
push
pop
clc
pusha
cmp
int3
nop
loop
movsb
iret
dec
mov
xchg
in
cmp
test
fcompl
into
mov
mov
push
int
pop
enter
mov
push
mov
test
popa
xlat
ror
cmp
mov
sbb
std
pop
fs
stc
ret
jle
cmp
cltd
psraw
out
in
or
xor
out
scas
popf
xchg
fildll
mov
inc
mov
dec
divb
dec
test
sbb
movsb
cmp
sbb
das
dec
lret
or
add
clc
dec
int
adc
movsb
in
outsl
adc
ljmp
adc
push
iret
push
sbb
xor
pushf
dec
pop
pop
mov
iret
ljmp
jno
mov
into
xor
dec
jb
enter
negl
pop
sub
or
std
add
sti
sbb
sub
daa
pushf
decb
scas
dec
fwait
mov
mov
sti
xchg
loopne
fildll
iret
inc
sbb
dec
xor
repz
cltd
or
mov
jp
dec
push
rol
pop
mov
push
data16
daa
sbb
rcl
scas
push
shl
daa
popf
fisttpl
dec
ret
push
shl
xchg
fs
pop
jns
add
sub
and
cmp
dec
sub
filds
mov
or
imul
jmp
cmp
movsl
aam
inc
std
or
out
push
mov
shrb
jmp
sub
mov
jbe
push
sub
daa
xor
rcrb
jp
int3
jns
push
inc
xor
imul
lret
mov
push
repnz
inc
insb
add
out
jbe
adc
les
cwtl
fcoms
cltd
adc
and
aam
les
add
inc
sub
mov
sub
sub
jae
or
lret
mov
mov
mov
repz
pop
mov
cmp
mov
mov
cmp
cmp
repnz
idivl
dec
out
cwtl
in
aam
cmp
adc
push
gs
sbb
mov
in
sub
rorl
adc
lock
out
sahf
push
shl
aad
pusha
adc
test
movsl
sbb
xor
daa
mov
addr16
fisubrs
mov
jle
inc
std
mov
repz
iret
xchg
cmp
rep
test
mov
pop
ljmp
notb
rolb
mov
aaa
inc
push
pop
cmp
and
js
fidivl
lods
and
sub
mov
clc
ret
xor
jnp
inc
cmp
sub
xchg
scas
dec
cltd
jne
push
mov
sub
xlat
das
lret
jno
jp
jl
bound
xabort
xor
push
sub
test
adcl
std
adc
sti
hlt
lods
jae
mov
and
cmp
or
inc
cmc
repnz
and
out
stos
or
lea
mov
or
dec
push
shrl
pop
jnp
loopne
jnp
mov
inc
outsb
sub
aad
sbb
xchg
sub
aam
sets
lcall
out
add
outsb
mov
lret
jge
jge
scas
mov
loopne
loop
rorl
jecxz
sti
imul
cmp
or
mov
pop
xorl
add
dec
inc
sub
in
sub
aas
lods
dec
imul
sub
sahf
jp
scas
into
scas
addr16
data16
xor
adc
dec
pushf
jp
inc
cmp
sub
cmp
ret
out
call
push
stc
adc
jg
pop
mov
or
fs
ljmp
xchg
mov
mov
rol
jns
enter
int3
aaa
dec
push
xchg
js
pushf
cmpb
adc
cmp
filds
and
pop
movsb
dec
mov
insb
dec
cmpsb
mov
mov
ja
mov
xor
orb
enter
cld
roll
and
loopew
cmp
xlat
sub
adc
into
push
dec
xlat
stos
pcmpgtb
mov
out
pop
and
mov
loopne
and
sbb
jne
gs
nop
fnstcw
insb
lds
ror
cwtl
and
cltd
lods
and
cs
adc
imul
setp
sbb
dec
cmp
and
repnz
fiadds
push
xor
dec
or
adc
cs
cwtl
lds
jge
imul
popa
and
or
xchg
push
mov
pop
cs
jle
xchg
inc
xor
fldl
or
cwtl
dec
mov
clc
adc
movsb
xorb
adc
lcall
pushf
mov
sub
add
int3
or
jle
xor
or
cmp
cmp
pop
mov
fimuls
ljmp
push
mov
rcl
in
js
imul
lcall
adc
cmp
add
xchg
xor
std
call
es
loop
call
lret
xor
sarl
push
mov
cli
cmp
and
cmp
add
out
and
iret
imul
mov
and
mov
dec
dec
mov
and
icebp
push
imul
jne
sbb
push
pushf
sbb
sbb
lods
pop
pop
mov
fildll
data16
inc
sub
loopne
mov
jle
lods
aas
testl
into
sub
pop
inc
std
loope
xchg
add
adc
inc
mov
ja
push
sti
sub
push
ljmp
pop
inc
out
adc
push
sbb
dec
xchg
and
stos
push
mov
cmp
xor
shrl
ret
mulb
mov
pushf
lcall
in
lods
add
movsb
add
pop
in
out
cmp
stc
mov
cmpsl
shll
xchg
notb
xor
fcmovnu
adc
repz
push
lcall
jmp
mov
ja
sti
outsl
imul
test
call
insl
push
shrl
int3
mov
dec
rolb
cld
sbb
pop
ficompl
outsl
dec
or
mov
shlb
rcll
imul
call
in
jp,pt
mov
mov
daa
sub
jl
inc
inc
fdivr
mov
or
fists
adc
and
push
cmpsl
mov
xchg
data16
and
inc
jo
jno
xchg
mov
add
mov
pop
and
and
aas
xlat
add
mov
cmpsl
cltd
jp
orl
xchg
push
dec
jne
int
imul
das
subb
lcall
mov
pop
push
dec
cltd
or
xchg
cmp
jle
adc
leave
orb
adc
lcall
ja
jno
out
cmp
xchg
in
pop
data16
or
pop
or
adc
push
and
aas
sub
out
pop
xchg
push
out
mov
adc
and
es
outsb
sbb
mov
add
dec
or
jmp
jmp
xor
lods
push
fs
or
arpl
das
inc
sub
ja
sub
call
pop
iret
inc
sub
or
das
jecxz
mov
imul
and
repnz
imul
xchg
mov
cld
and
lods
sbb
jmp
xchg
lods
cld
mov
outsl
clc
and
xor
push
hlt
jbe
xor
jecxz
push
in
xlat
hlt
inc
fwait
setle
jbe
push
repnz
dec
iret
adc
aad
arpl
jns
mov
cmp
inc
mov
xchg
testl
push
dec
sbb
mov
inc
sbb
daa
and
adc
pop
cmp
mov
mov
dec
cmp
int3
iret
cmp
lods
cmpsb
pop
mov
in
ret
movsb
mov
mov
loope
aam
add
and
iret
jno
and
test
addr16
mov
ja
xchg
loopne
std
mov
divb
mov
mov
xchg
jl
in
add
push
dec
dec
xchg
scas
int3
dec
mov
xlat
arpl
adc
mov
ret
xrelease
push
mov
pop
push
cld
xchg
rep
je
mov
sbb
inc
or
shlb
cmp
insb
cmp
mov
jo
fstpt
sub
shll
repnz
fildll
aad
pushf
sub
cs
or
pop
mov
scas
sbb
mov
in
mov
pop
in
imul
pop
imul
mov
ret
cwtl
pop
mov
sbb
loopne
int
push
jae
in
testb
orb
and
fwait
mov
xor
cli
popa
loopne
sbb
xor
mov
adc
nop
pop
xchg
hlt
cmp
mov
jecxz
add
call
cld
call
jge
dec
mov
cvtdq2ps
xor
adc
cmpsl
scas
inc
xor
sbb
xchg
scas
xchg
out
dec
pop
arpl
mov
pop
arpl
jo
jg
jne
repz
shr
insb
jle
clc
lea
sub
rcll
xor
scas
iret
fucomp
push
jbe
mov
cmpb
mov
int3
mov
std
mov
mov
in
lds
pop
into
adc
pop
jbe
inc
test
sub
in
push
test
jbe
pushf
push
adc
loope
packuswb
jl
mov
cmpsb
xor
xchg
insb
jg
xchg
adc
enter
pop
fstpt
pop
jns
push
xor
cmc
push
dec
in
xor
lea
fmuls
aad
mov
cmp
mov
mov
les
or
add
and
popf
call
jne
and
lahf
mov
and
cmpl
es
xor
mov
es
jmp
jge
loopne
inc
dec
test
imul
and
or
sbbl
shrl
fildll
add
add
inc
inc
pop
mov
fidivl
add
mov
int
mov
bound
ljmp
sbb
shlb
mov
sar
mov
bound
popa
jge
lret
in
sub
push
aam
sub
pop
mov
or
sbb
pop
js
popf
sub
cmp
lahf
js
push
push
movhps
lret
negl
call
stos
enter
cmp
xchg
adc
mov
mov
adcl
dec
mov
repnz
jg
icebp
fisttpll
js
fstp
imul
aam
fistps
int3
mov
js
shll
mov
pushf
fcmovb
dec
or
mov
pop
xchg
xor
mov
loop
mov
mov
pop
inc
sbb
adc
xor
sbb
jmp
fbstp
push
jns
xchg
xorl
xlat
aas
das
sbb
mov
fisttps
push
jnp
mov
aad
call
fsubrs
rcrl
fistpl
adc
push
ret
add
cmp
adc
add
lret
xchg
pop
mov
sub
jne
sbb
imul
jb
aad
decl
jbe
mov
jg
fmuls
push
mov
sub
mov
fldenv
pop
pop
push
jns
mov
mov
mov
shlb
je
outsl
sbb
loop
outsb
imul
push
loope
into
scas
fadd
sbb
xor
cld
insl
cmpsl
divb
aas
jmp
jnp
inc
mov
cmpsl
xchg
add
mov
lret
adcl
jecxz
jmp
xchg
dec
mov
enter
cmpxchg
sbb
test
es
cld
mov
rolb
lods
mov
xor
iret
xorb
fsub
psllw
test
imul
stc
popa
stos
cmp
add
mov
xchg
add
bound
push
mov
mov
dec
sbb
mov
arpl
fistps
icebp
sub
int
cltd
mov
jne
sub
movsb
ret
dec
lahf
add
imul
dec
sub
jl
loop
push
aaa
divb
mov
in
adc
call
cld
rep
arpl
sbb
and
xor
ret
push
rcl
enter
sti
and
add
sbb
pop
sbb
lods
jo
sbb
or
sahf
jl
outsb
push
dec
iret
xchg
pop
jo
add
mov
xchg
in
pop
push
cli
inc
test
lcall
sbb
rcll
push
popf
adcl
mov
adcb
cmp
decl
cmovle
push
dec
imul
inc
inc
xor
mov
mov
push
jb
mov
xor
movsl
leave
insl
iret
cltd
cmp
mov
or
pusha
push
mov
jle
ficomps
dec
mov
fstpl
push
sub
add
dec
dec
movsl
test
sti
scas
mov
jp
pusha
mov
adc
add
in
mov
push
inc
ljmp
xchg
enter
aaa
daa
xchg
add
and
xlat
sbb
sub
out
jno
fs
jg
and
std
lods
enter
dec
jge
test
decb
nop
mov
or
in
lock
ficomps
lock
push
movsb
sub
xor
inc
loopne
mov
mov
fsubp
mov
cmp
adc
cmp
add
jg
adc
mov
xor
xchg
and
ja
mov
es
cli
cld
mov
mov
rcr
icebp
sbb
sub
cmp
jns
push
jb
mov
ret
std
ja
adc
call
rcll
mov
sbbl
aad
xor
arpl
cmpsb
dec
orl
cmp
pop
and
xchg
xchg
testb
in
inc
sub
adc
add
cs
repz
inc
int3
repnz
and
dec
push
push
jne,pt
sbb
repnz
stos
sub
inc
fdivp
iret
movl
or
lcall
pop
push
enter
xor
cli
inc
lret
test
clc
outsb
inc
and
mov
mov
sti
and
roll
call
jp
xchg
dec
xchg
imul
loop
jb
fsubs
vcvttps2dq
dec
pop
insb
xor
outsb
mov
push
push
jge
filds
arpl
adc
mov
mov
out
fcmovnb
aaa
sub
mov
sub
push
mov
jecxz
addl
pop
rcrl
lret
mov
cmpsl
lcall
in
xor
mov
sbb
fs
shl
dec
inc
sbb
pop
xlat
mov
push
inc
mov
push
imul
lea
cmp
fstpl
outsb
dec
ljmp
pop
mov
jle
cmp
push
divl
cli
or
js
sub
lret
insl
add
pop
inc
ss
sbb
lcall
fwait
mov
int3
mov
push
outsl
xchg
mov
insl
xchg
mov
std
cs
cld
ljmp
outsb
decl
adc
test
sbb
pushf
xchg
pop
jbe
pop
mov
and
fs
nop
js
in
jbe
popf
xor
mov
cmp
sbb
addl
pop
cmpb
iret
inc
fwait
mov
mul
sbb
dec
lock
push
pop
dec
xchg
fxch
dec
cmpsw
sahf
push
mov
aad
dec
dec
les
jnp
repnz
shrb
add
mov
pop
cmp
lea
lcall
xor
testl
pop
and
int
mov
lods
push
data16
cmpsl
jbe
mov
mov
push
jae
xor
rcl
mov
pop
dec
loop
jns
inc
push
push
dec
movsl
clc
pop
stos
mov
sbb
outsl
int3
cmp
mov
dec
rcll
mov
fdivl
adc
cmpsb
xor
jns
cmc
jle
push
sub
mov
pop
nop
out
leave
dec
orb
or
std
cmpsb
push
jae
int
out
popa
scas
sub
leave
push
pusha
incl
lea
mov
sub
cwtl
inc
das
pop
push
xchg
leave
icebp
push
sub
pop
shll
dec
cmp
das
push
sti
sbb
out
popf
loop
scas
mov
add
sub
imul
out
pop
mov
push
rcll
pop
leave
mov
test
dec
mov
dec
orl
add
mov
outsl
xlat
pop
das
pop
push
dec
int
rcll
sti
inc
rolb
sub
adc
jg
xor
xor
xor
dec
adc
and
lds
xchg
or
inc
jg
xchg
daa
stc
nop
mov
sub
pop
je
mov
aad
and
sbb
stos
adc
shlb
inc
mov
test
insb
popa
sbb
dec
lods
les
sbb
shll
dec
pusha
xchg
push
xchg
or
dec
fcmovnu
cmp
jo
aas
repnz
imul
rolb
imulb
add
jo
adc
pop
xlat
push
pop
jae
mov
inc
xchg
xchg
shl
gs
dec
imull
mov
push
pusha
ret
fimuls
bound
js
mov
or
test
dec
scas
adc
add
fprem1
push
push
outsb
sub
cmp
and
fistps
jmp
add
lods
and
cmp
lahf
cmp
das
jbe
arpl
fsts
into
cmp
loope
inc
test
out
nop
xchg
sub
pushf
push
cmp
jle
mov
add
pop
adc
repnz
clc
mov
push
mov
inc
loop
and
dec
mov
dec
sub
push
test
pop
js
popa
cmc
dec
lret
xlat
cld
jns
adc
sub
and
aad
xchg
sub
pop
inc
movsb
push
adc
mov
xcrypt-cfb
cmpsl
mov
add
add
push
sbb
das
mov
lods
cltd
addb
dec
das
mov
bsf
push
add
stos
ss
sti
mov
stos
dec
and
and
jmp
test
or
jne
ret
repz
sub
mov
lcall
setnp
adc
push
xlat
mov
rolb
add
jo
cmp
outsb
in
mov
sti
sarl
mov
lods
pop
and
popf
insb
xchg
daa
or
imull
xor
dec
mov
mov
add
ds
arpl
int3
fcmovnu
adc
mov
xchg
fwait
fwait
add
imull
cld
cwtl
mov
cs
loop
data16
push
clc
roll
xor
dec
push
xor
lahf
xchg
lret
nop
outsl
ror
lret
mov
pop
pop
jge
fdivrs
pop
iret
lret
in
push
cld
inc
jge
pop
mov
cld
jne
std
pop
and
popf
nop
add
repnz
inc
cld
dec
ja,pt
shll
add
pop
sbb
mov
cmpsb
mov
inc
sbb
mov
xlat
xchg
test
mov
and
into
mov
addl
mov
adc
inc
aad
mov
xchg
jnp
in
lock
mov
in
out
dec
jl
out
clc
push
adc
test
shrl
or
jg
ss
icebp
xlat
push
cmpsl
jbe
or
or
mov
mov
insb
push
cmpsb
mov
outsl
iret
scas
pop
subb
lcall
dec
or
mov
jmp
cmp
mov
cmp
bound
shll
cmc
in
sbb
out
pop
adc
sub
ja
popa
jo
xchg
ffree
pop
push
stc
push
and
cmp
mov
call
aam
mov
push
or
xor
add
mov
aad
adc
sub
ja
pop
jns
adc
mov
inc
xchg
arpl
ja
xchg
shrl
pop
xchg
mov
popf
fsubrl
mov
or
or
in
cmp
and
mov
cmpsb
xor
push
inc
or
cmp
mov
in
fiaddl
or
inc
adcb
mov
dec
loope
iret
mov
push
sbb
adc
mov
out
pxor
xchg
and
pusha
and
push
mov
jmp
xchg
lahf
sub
sub
stos
sbb
jae
adc
inc
sbb
mov
arpl
scas
lcall
xchg
cmp
daa
push
jg
pop
ja
cmp
sbb
push
jp
mov
sbb
jb
enter
add
or
jb
nop
xchg
and
inc
sbb
icebp
push
push
mov
mov
mov
cld
pop
mov
push
mov
fisubl
popa
jp
adc
dec
jecxz
cmc
pop
dec
push
les
push
jbe
test
push
pop
loop
pxor
ffreep
repnz
fsubrl
movsl
xchg
data16
jne
xchg
dec
imul
add
and
ret
and
mov
or
adc
arpl
adc
iret
push
nop
cmpsl
add
dec
subl
cmp
xchg
aad
lcall
pop
je
dec
insl
xor
mov
cli
lcall
lcall
mov
jo
pop
add
aad
sub
sub
fs
sub
dec
les
rcrl
data16
cwtl
popf
jecxz
sub
mov
add
std
insl
daa
icebp
emms
add
and
jns
xor
mov
fstpt
mov
dec
sbbl
push
clc
cmp
orb
pop
mov
fmul
jle
mov
imul
rcrl
sbb
sahf
mov
outsb
into
cli
sbb
cltd
pop
dec
mov
nop
into
outsl
inc
adc
sahf
loope
xchg
cmc
xor
es
dec
push
movb
movb
rcll
cmp
sbb
mov
mov
push
movl
push
adc
in
addl
sbb
das
sub
pop
sbb
adcb
dec
adc
sahf
inc
int3
push
aas
pop
aam
xchg
testl
push
cli
xchg
push
imul
das
fdivl
mov
inc
and
mov
adc
iret
in
dec
call
daa
clc
inc
outsl
cli
xchg
dec
clc
out
sbb
jl
mov
adc
or
or
aas
loope
sbb
aas
mov
adcb
adc
insb
stos
sarb
je
movsb
bound
sbb
lds
or
ds
orl
imul
xchg
push
push
and
jecxz
xor
or
subb
xchg
sub
mov
in
mov
out
xchg
pop
xor
jbe
push
sbb
jmp
jmp
lods
lret
ljmp
pop
scas
orb
out
mov
arpl
js
into
mov
sub
arpl
push
jp
sbb
mov
movsb
lods
adc
ret
jmp
fldt
enter
pop
mov
das
sub
mov
repz
lret
cmp
adc
cmp
dec
inc
sbb
xor
movsl
xchg
push
xchg
scas
push
mov
ja
out
xchg
push
arpl
lds
cwtl
dec
aas
inc
sti
mov
ret
or
mov
cs
fwait
cmp
lret
adc
push
or
sbb
jmp
stos
orb
in
stos
pop
add
mov
rcll
iret
adc
pop
mov
xchg
sahf
inc
jmp
subl
jb
xchg
xlat
xor
pop
fwait
mov
add
js
push
fcmovu
rolb
mov
inc
pop
cmpl
cmp
sub
shll
fistps
pop
jo
xchg
lahf
xchg
ja
rcl
fcomps
leave
push
into
sbb
icebp
pop
mov
fcomp
mov
mov
mov
mov
jl
outsb
jp
mov
sysret
pushf
mov
pusha
cmpsl
addb
test
jge
push
jp
xor
mov
sbb
and
lret
je
jle
loope
push
mov
push
movsl
loopne
bound
push
adc
lret
mov
xor
push
pop
xor
cmp
xchg
addb
cmp
jle
mov
hlt
pop
dec
add
mov
in
sub
jle
jnp
fxch
cmp
push
sti
pop
lock
lcall
lods
call
jecxz
pop
sbb
int
test
mov
outsl
test
aad
rorl
mov
push
adc
leave
clc
adc
repnz
mov
das
sub
aas
pop
lret
int
test
in
ret
dec
jmp
nop
mov
gs
aad
call
std
mov
mov
cli
arpl
hlt
mov
cltd
popa
jnp
mov
mov
sbb
movsl
insl
shr
push
inc
lds
adc
imul
adc
lea
lods
and
push
das
orl
adc
movsb
cmp
ds
stc
jle
scas
addr16
mov
and
fistpll
and
xchg
mov
cmp
insb
je
or
cmpsl
cmp
daa
sahf
push
sub
leave
mov
lods
sbb
push
and
sub
pop
repnz
xor
mov
mov
fldcw
mov
jle
push
sahf
sub
push
cmp
cltd
sbb
pop
push
dec
push
lock
and
cmpsb
mov
pop
and
out
addr16
pop
in
mov
push
adc
and
daa
sbbl
sub
xchg
mov
or
cmp
add
jb
dec
mov
mov
mov
jo
js
flds
inc
xor
dec
or
loop
cwtl
enter
and
sbb
icebp
mov
dec
testl
cld
int3
int3
ret
addr16
pop
dec
add
add
push
xor
push
ret
xchg
and
mov
call
out
imul
loop
jg
and
cmp
clc
fldl
push
jl
mov
xlat
xor
imul
iret
or
xchg
shr
jg
fsubl
jne
fidivs
push
push
insl
push
jecxz
sub
int3
xor
int
enter
rolb
lret
or
cmp
dec
cs
int3
xchg
push
jl
loopne
inc
clc
imul
or
cmp
ds
das
jno
repnz
mov
pushf
push
aaa
or
jl
int
cld
add
les
ja
rorl
or
dec
imul
cs
sbbb
lahf
sbb
fistpll
cmpsb
hlt
imul
push
jmp
mov
pop
xor
mov
movntq
andl
inc
jl
dec
loope
std
imul
scas
mov
add
sub
mov
adc
cmpsb
cmp
inc
scas
mov
pop
sti
hlt
lods
imul
sub
aaa
pop
imul
cmpsb
mov
lea
add
clc
sub
sbb
add
rcll
add
mov
push
mov
xchg
push
lods
mov
jp
repnz
outsl
lret
in
icebp
bound
sarb
fprem
xchg
pusha
das
stc
sbb
cmp
sahf
jle
dec
xor
fiaddl
mov
push
arpl
mov
cmp
std
leave
in
adc
xchg
pop
jnp
cmpsl
fadd
jne
cmp
hlt
arpl
sbb
xchg
sub
xchg
cmc
cmp
aas
fcomps
push
incb
push
lds
scas
mov
xchg
push
ja
cwtl
cltd
mov
sub
imul
sub
push
mov
mov
sbb
int3
adc
add
cs
pop
xor
pushf
cld
mov
fisubs
fs
imul
jmp
adc
sbb
ds
vmovups
pop
cwtl
sub
out
push
cli
jp
popf
enter
push
lret
orl
xchg
pop
and
pusha
ja
repnz
repnz
mov
pop
sbb
subb
scas
fcmovnb
mov
mov
adc
aad
push
bound
push
ror
popl
inc
ljmp
cmpb
lret
cmpl
jmp
mov
and
mov
pushf
mov
push
testb
add
and
cltd
sbb
jb
out
loope
inc
lock
dec
jo
rcll
mov
push
lcall
pop
or
xor
xchg
push
mov
adc
sahf
or
sbb
push
popf
cmp
jae
lods
xchg
pushf
sbb
xor
or
jno
adc
adc
iret
stos
jbe
mov
adc
cmp
mov
mov
stos
mov
mov
pop
xchg
lock
mov
pop
mov
xchg
xor
out
lcall
sbb
leave
xor
inc
add
pop
cltd
and
pop
cmp
push
icebp
pop
and
cmp
mov
mov
jae
mov
mov
inc
add
pop
add
mov
out
addr16
dec
nop
out
push
je
or
xchg
scas
push
jno
repz
loope
aas
inc
inc
call
aam
mov
into
inc
cmc
clc
or
xor
sub
enter
cmp
mov
sbb
pop
xor
ret
out
insb
jb
pop
xor
rclb
cmpsb
push
sbb
cmp
sbb
nop
mov
push
shl
pushf
insl
mov
add
inc
test
add
adc
loope
sub
xchg
scas
xor
ficompl
add
jp
mov
fistpl
cmpsl
inc
leave
jg
adc
cmp
stos
data16
outsl
push
pop
or
outsl
in
lods
mov
insl
lds
int3
xchg
jns
push
xchg
push
sub
xchg
movsl
dec
jle
rolb
dec
testl
ret
mov
sub
inc
stos
sbb
sbb
out
adc
xor
xor
imul
mov
scas
dec
sub
repnz
add
push
push
into
push
popf
dec
add
out
add
lahf
out
test
add
jno
ja
shrb
lahf
adc
inc
ljmp
movsb
scas
out
sbbb
scas
push
mov
add
push
in
test
jns
and
rorb
es
pop
dec
mov
negl
add
ret
push
ss
pop
lea
pop
subl
je
push
js
or
cmp
mov
mov
mov
sbb
jae
mov
stos
mov
out
add
insb
dec
lea
out
mov
adc
incl
rcrl
pop
push
and
xchg
fisubl
fwait
pushf
or
popf
lea
inc
inc
fstp
in
sbb
or
mov
mov
cmc
and
cmpsl
repnz
addl
test
cltd
addl
int3
aas
ljmp
mov
xchg
repnz
bound
push
dec
xchg
std
pop
imul
push
test
cltd
subb
adc
out
iret
dec
adc
mov
sti
pop
xor
repz
ss
pop
cwtl
push
movsl
sub
fldt
ljmp
fisubl
fistl
cmpsl
pop
adcb
daa
lods
or
lods
xlat
jge
pop
xchg
mov
out
lret
mov
push
lret
cmp
pop
xor
jbe
shl
movsl
leave
sbb
mov
dec
mov
jno
pop
pop
mov
call
xchg
outsl
cwtl
aam
xor
ljmp
or
sub
out
push
lock
adc
push
and
mov
int
or
lods
adcb
sub
inc
outsl
lcall
inc
icebp
cmpsl
sub
add
pushf
adcl
enter
sbb
mov
lds
dec
lahf
repz
sbb
aas
cli
jg
pop
pop
push
stos
mov
rolb
out
or
add
into
bnd
mov
leave
pushf
and
fimuls
repnz
and
sbb
mov
mov
imul
mov
rorl
jl
jg
xor
mov
nop
dec
add
rcr
xor
shlb
movsl
push
mov
push
jne
and
idivl
xor
dec
push
xchg
je
in
or
mov
xorb
adc
fs
pop
scas
movsb
fdivrl
or
lods
mov
int3
loope
jl
testb
loop
or
dec
jno
lds
ficoms
pusha
inc
popa
lea
cmp
mov
sub
dec
les
mov
sbb
fdivl
xchg
push
sbb
lcall
dec
jae
ljmp
xor
and
add
fs
xor
sbb
and
rclb
out
push
xchg
das
mov
inc
iret
stos
in
nop
adc
js
push
inc
sub
scas
push
repz
mov
in
or
cltd
andl
mov
ljmp
pop
add
and
mov
jns
jo
stos
das
xor
lahf
es
push
pusha
xor
aas
pop
popa
cmpsb
add
iret
adc
xlat
xor
push
pop
dec
dec
clc
sbb
mov
and
mov
loopne
test
push
ret
add
insb
xor
fstl
xchg
stc
xchg
sub
sub
ss
add
mov
repz
sub
xchg
add
push
int
repz
andb
fbstp
mov
or
push
xlat
sub
cmpl
push
test
jno
mov
mov
lock
mov
push
jl
and
in
jg
insl
sbb
fisttpl
sub
fwait
lods
out
lock
cli
inc
cmp
mov
inc
rcrl
mov
sub
rorb
stos
ljmp
cmc
pop
pushf
mov
mov
adc
cltd
cmc
xlat
mov
insl
divl
dec
jne
ret
mov
out
mov
cwtl
insl
push
insl
xor
xchg
jne
inc
aam
fs
jbe
xor
lcall
push
push
adcl
xlat
pop
insl
pop
imul
and
insl
jp
push
push
lock
xor
xor
cmp
andl
pop
lret
inc
das
mov
push
mov
call
pop
and
jns
repz
push
jmp
fdivrp
scas
inc
andb
mov
mov
add
out
dec
insb
adc
sub
mov
inc
enter
sbb
rol
jno
sbb
add
cmp
outsl
cmp
xchg
vmovd
mov
mov
fdivl
dec
push
scas
out
mov
scas
push
mov
insb
movsb
into
inc
jl
ss
pushf
pop
xchg
lods
roll
fldt
in
into
cwtl
ja,pn
or
pop
sbb
mov
xor
out
push
lahf
pop
mov
adcl
jge
pushf
push
xchg
push
pop
mov
or
and
lods
stos
cmp
sub
dec
stos
shl
stos
rol
sbb
mov
xor
push
fbld
aam
add
stos
out
lret
lahf
adc
sbb
out
iret
fadd
ljmp
loop
into
pop
mov
xor
push
pop
xor
ret
mov
movsl
or
cmp
scas
or
ss
bound
mov
mov
popf
jge
ret
outsl
xchg
in
gs
push
leave
dec
xor
std
inc
sbb
push
sub
cmp
jno
lcall
jb
ret
push
daa
mov
mov
les
jb
std
pop
inc
mov
out
insb
xor
xchg
adc
and
bound
dec
jb
into
out
sbb
fcompl
mov
js
jge
jge
add
push
fbstp
fwait
mov
mov
xchg
xchg
sbb
push
std
xchg
mov
in
xor
mov
and
pushf
and
outsb
sahf
dec
jmp
aas
shlb
nop
mov
dec
fwait
or
inc
dec
jl
sbb
cmpsb
out
or
lds
cmp
mov
sub
mov
jnp
gs
xchg
outsl
mov
hlt
mov
hlt
dec
neg
popa
inc
dec
mov
test
mov
sub
and
cmpsl
cmp
sub
cwtl
or
out
mov
in
push
mov
lcall
pop
jnp
jns
popa
or
and
dec
scas
jbe
dec
ss
into
subl
cmp
mov
mov
cmc
aas
fsubl
clc
fwait
inc
push
and
pop
and
sbbl
jg
push
fsubs
add
punpckldq
int
mov
pop
adc
outsb
sahf
sbb
mov
inc
fs
adc
test
sbbb
dec
pushf
push
jae
fs
add
iret
inc
outsl
fldl
push
dec
movsb
mov
jge
pop
push
in
dec
xor
mov
push
mov
subl
test
cltd
or
jnp
pop
pop
push
xchg
fdivrs
sbb
sub
fwait
loopne
or
and
mov
lcall
or
sti
xchg
icebp
outsb
jno
mov
xchg
mov
in
mov
movsl
push
andl
movsl
inc
mov
in
mov
and
outsb
test
mov
jo
pusha
mov
mul
popa
and
xor
sahf
pop
sbb
movsl
repz
mov
cli
push
sti
daa
ljmp
jbe
fwait
out
mov
data16
push
stc
into
in
jecxz
cltd
stos
lret
insb
out
insl
popf
pop
addr16
adc
ror
or
adc
pop
pop
outsl
xchg
pop
cld
mov
mov
sub
aas
fwait
dec
xchg
xchg
rcrl
rcll
jge
insl
test
divl
pop
jmp
add
push
mov
lock
outsb
xchg
cmp
testb
aad
push
mov
fwait
cmpsb
xchg
lea
iret
inc
mov
lahf
cmp
sub
dec
dec
mov
cmp
insb
sub
test
xor
data16
ljmp
jg
lds
xchg
incb
push
push
xchg
cmpsl
lcall
xor
mov
orl
decl
push
and
data16
pop
adc
cmc
nop
mov
ret
fbstp
push
and
scas
test
fstpt
aas
loop
adc
mov
bound
xor
ss
cmp
and
inc
dec
addb
addr16
lret
scas
fbstp
das
xor
pop
clc
mov
cmp
push
xchg
imul
mov
imul
add
aad
adc
xchg
mov
inc
xor
push
ror
pop
sbb
out
push
pop
ljmp
add
mov
jno
push
sahf
jb
int3
loope
xchg
mov
inc
xchg
jns
or
lret
ljmp
negb
jne
inc
pop
push
or
pop
pop
mov
lret
mov
dec
and
cmp
add
xchg
dec
and
mov
dec
rcl
inc
shrl
xchg
mov
stc
and
cmc
push
sub
fisttpl
push
jp
lods
mov
or
icebp
push
sub
rcrb
pop
sbb
in
pop
mov
js
or
fwait
jno
sub
daa
sub
mov
test
and
js
xchg
jno
mov
mov
push
and
pop
jae
aam
sub
mov
add
repnz
leave
sarl
popa
mov
mov
cmp
das
mov
sub
icebp
icebp
dec
mov
inc
xor
xchg
push
pop
mov
scas
in
ret
mov
call
inc
popa
int3
xchg
jg
jnp
cmp
and
inc
inc
and
cmp
jp
inc
inc
jb
aaa
or
fmull
fs
lahf
or
and
xchg
in
pusha
jl
jns
adc
push
ja
sbb
icebp
imul
mov
lcall
pusha
lret
push
inc
icebp
cmp
in
lret
aaa
jne
popa
rep
stc
jbe
or
sarb
jb
nop
cmpsb
in
dec
sahf
xchg
inc
mov
or
enter
ret
clc
je
cmp
mov
or
enter
repz
imul
and
xor
mov
lret
adc
cltd
inc
adc
mov
ljmp
adc
push
icebp
in
jecxz
mov
jno
lcall
mov
ja
out
add
imul
add
es
imul
xor
fisubrs
xchg
sub
rcll
mov
out
lds
pop
sbbb
stos
pop
push
adc
in
sub
insl
push
ljmp
sub
xchg
pop
lds
call
jmp
daa
xchg
cmp
sub
aad
insb
pop
or
andb
xchg
add
pop
sbb
mov
in
pop
add
sub
cltd
xchg
sahf
shll
mov
mov
mov
mov
sbb
sub
and
adc
arpl
jmp
hlt
add
idivl
mov
push
lea
pop
xchg
xchg
inc
loopne
cld
pusha
shlb
call
stos
pop
pop
loopne
in
and
xchg
jge
mov
add
insb
cmpl
out
inc
jl
xlat
jnp
cmp
adc
adc
pop
inc
mov
ds
popa
lds
mov
or
cwtl
idiv
shlb
fwait
test
cwtl
inc
fnstcw
push
lahf
sbb
sub
sbb
jecxz
cld
mov
stc
aam
pop
jp
dec
lahf
negb
inc
inc
xchg
fsin
jns
testl
js
shl
in
sbb
ss
jb
dec
repnz
aas
in
jle
mov
jle
sbb
cmp
loope
mov
cmp
pop
inc
sahf
out
clc
aas
mov
mov
ss
mov
push
dec
xchg
fmuls
mov
pop
inc
mov
shlb
ds
or
jne
stc
push
pop
cmpsb
sar
adc
stos
scas
shll
xchg
lret
in
mov
roll
and
jmp
mov
sub
sbb
arpl
sub
rorb
fs
popa
dec
cmpsb
test
dec
fcmovne
sub
dec
adc
fimuls
and
jg
fisttpll
sti
rolb
pop
cmp
loopnew
mov
dec
jg
lods
movsb
insb
inc
enter
and
popf
adcb
sub
mov
push
push
mov
out
loope
fs
mov
dec
aas
lcall
popf
add
imul
ret
out
inc
xchg
mov
push
jmp
adc
ljmpw
outsb
mov
xchg
and
stos
jb
add
or
dec
xor
mov
or
mov
or
out
pop
mov
iret
or
jnp
ds
mulb
fbld
mov
adc
cmp
imul
inc
outsl
pop
sbb
push
in
push
ret
ja
pop
clc
inc
cmp
jb
movsb
xchg
stc
data16
cltd
sti
sub
es
iret
into
push
dec
fisubrl
cwtl
icebp
pop
push
mov
and
arpl
cmc
lret
cmpsb
cmpsb
push
cli
add
cld
cmc
addr16
popa
enter
aad
sub
mov
sub
stos
insb
mov
repnz
imull
stos
pop
lahf
and
aad
cmp
lock
cwtl
sar
popa
pop
ss
movsl
cmp
pop
addr16
mov
rcrl
mov
sub
in
dec
and
cld
cld
sub
mov
cli
lds
fnsave
adc
movsb
jns
daa
movsl
inc
clc
int3
add
xor
mov
add
and
and
mov
mov
sbb
dec
fcomps
in
std
mov
inc
cmp
jmp
cmp
adc
xor
sti
bound
dec
xchg
adc
adc
sbbl
rcrb
pop
pop
shlb
and
or
ret
dec
and
xchg
push
ds
dec
pop
out
enter
mov
add
aam
jo
cmp
mov
cmpsl
popf
inc
pop
push
std
cmp
fiaddl
es
xor
dec
cwtl
aad
push
push
sarb
in
xchg
ja
mov
andl
call
fidivrs
fdivl
cmc
out
aas
in
add
pop
cmpsl
mov
shrl
ss
mov
repnz
je
imul
mov
sbb
popf
sbb
pop
cli
push
mov
clc
push
cli
shlb
add
shrl
out
cs
out
andb
sti
imul
mov
mov
sbb
or
out
add
mov
and
mov
xchg
mov
sbb
jae
test
lock
cmp
jle
mov
pop
loope
fistpl
aam
movsb
out
mov
push
xchg
adc
pop
insl
adc
fisttpl
sub
mov
xchg
mov
test
adc
shl
mov
pop
int
mov
sub
sbb
addr16
gs
shll
or
and
mov
lcall
stc
jns
xor
sbb
imul
out
push
fisttpll
xor
ja
xchg
hlt
incb
mov
xchg
xor
fsubrl
lock
inc
insb
test
push
mov
cmc
test
cmp
adc
mov
loopne
jl
mov
aam
mov
decl
out
call
jl
jno
dec
ret
push
shrb
test
jge
es
je
xor
add
mov
clc
outsb
out
ljmp
sti
jbe
adc
sbb
in
jge
inc
pop
loop
mov
add
pop
sbb
jp
mov
and
push
and
and
and
in
lcall
push
jg
mov
lahf
mov
pop
and
mull
in
push
inc
jp
clc
cmp
mov
repz
popf
push
cmpl
jbe
jp
fcompl
mov
sbb
orl
cmp
xchg
mov
shll
inc
jnp
leave
xor
mov
sub
test
jns
adc
xchg
loopne
pushf
pop
inc
xor
call
push
bound
imul
mov
push
cli
in
mov
fwait
arpl
or
dec
ret
je
add
pusha
das
sbb
sbb
push
rcrb
or
inc
shl
xchg
adc
and
repz
imul
add
es
clc
xchg
mov
pop
inc
frstor
dec
and
int3
mov
jo
sub
xchg
arpl
jmp
adc
shlb
add
test
push
movsb
or
xor
sbb
mov
dec
out
push
pusha
js
xchg
subb
aam
pop
scas
enter
and
loop
rclb
sub
sahf
repnz
sbb
incl
jmp
mov
cmp
int3
movsl
mov
outsb
xor
sbb
ja
and
cmc
mov
addr16
xlat
push
ds
pop
jmp
cmp
out
es
std
popl
je
in
out
aam
popw
xchg
aaa
and
imul
lock
in
cmp
mov
cwtl
inc
or
adc
insl
dec
jp
andl
xlat
inc
test
and
adc
fwait
gs
loope
push
aam
sbb
sbb
push
ret
fucom
jmp
adc
push
lret
enter
cmp
into
xor
popa
test
sub
and
jp
lea
inc
mov
daa
push
mov
imulb
clc
dec
subb
cli
loop
dec
das
add
cwtl
xchg
sbb
push
lods
xchg
mov
add
cmp
xchg
mov
push
and
mov
rclb
xchg
xor
movsb
push
xchg
ret
sbb
push
cltd
inc
mov
scas
insb
push
lahf
icebp
loopne
sub
ret
idivl
mov
aad
lods
outsb
in
ret
cmp
adc
mov
xchg
clc
mov
mov
lods
sarl
mov
mov
jno
lea
mov
daa
repnz
sbbl
xor
mov
jo
int3
ficoms
add
inc
dec
push
inc
dec
mov
imul
lods
fcomps
or
stc
stos
xor
lret
xchg
sub
outsb
out
mov
cmpsb
in
and
mov
jae
lahf
inc
jnp
sbb
cmp
fsubs
push
loopne
mov
xor
add
cs
imul
dec
aas
sbb
or
lcall
push
sub
inc
pop
sbb
jne
pop
dec
aam
xor
call
pop
dec
aam
mov
mov
iret
call
mov
sub
repz
leave
ljmp
scas
xlat
xchg
test
or
cmp
xor
inc
mov
xorl
add
insb
fsubrl
cmp
jl
aas
cs
loope
lds
outsl
addr16
loop
push
js
xor
sub
mov
push
sub
mov
push
cmc
cmp
cmp
mov
out
inc
out
sub
je
jbe
jecxz
dec
loop
push
int
add
loop
pop
movl
repnz
mov
scas
loope
arpl
xor
ret
mov
and
jb
cltd
dec
or
add
jp
push
dec
sarb
jns
fsubl
fstpt
repnz
mov
mov
xchg
loope
cmpsb
loop
mov
adc
daa
lods
xchg
jge
xor
mov
dec
shlb
mov
lods
mov
cmp
sbb
mov
jb
pop
hlt
push
sti
jge
lcall
arpl
addr16
test
data16
jg
pop
fsubs
pop
iret
xor
cmp
cmp
and
sbb
mov
sub
adc
push
push
mov
adc
addr16
mov
scas
xchg
ljmp
aam
push
test
ljmp
sub
mov
push
es
cmp
insb
jnp
lret
xchg
add
rorl
pop
sbb
mov
push
in
adc
or
push
mov
add
sbb
ret
scas
lahf
xor
or
xor
inc
adc
popa
push
and
sbb
jo
jno
add
pop
pop
pop
cmp
dec
data16
movsl
scas
roll
jne
into
cmc
pop
lcall
incl
call
outsb
jmp
jo
rol
xchg
xchg
data16
mov
shrl
mov
pop
daa
jno
shr
aas
lods
data16
popf
iret
cmp
cmp
aaa
cld
dec
mov
add
push
adc
aaa
cmp
sbb
nop
in
cmpl
and
mov
scas
mov
mov
push
lahf
fs
movsb
insl
sbb
sub
cmpsb
xor
and
sub
fldl
loope
jg
mov
in
popa
inc
and
push
push
xchg
pop
sbb
cwtl
in
sub
fsubl
inc
into
cmpb
ret
cmc
push
js
cltd
cltd
mov
pusha
call
ret
punpcklbw
sbb
push
js
pop
fsubl
arpl
sbb
mov
pop
mov
int3
insb
insb
shll
lock
fisttpll
js,pn
fsubrs
out
add
xchg
sti
ss
fldl
mov
and
add
xlat
adc
adc
shlb
mov
pop
loopne
mov
fldt
stos
xchg
scas
pop
imul
mov
insb
adc
in
xchg
bound
pop
jns
clc
push
mov
popl
jno
sahf
lods
movb
out
xchg
mov
pop
fstpt
imul
cmc
and
or
push
mov
sub
adc
repz
push
sub
rorl
jmp
jl
or
sub
pushf
aam
pop
xchg
fstpl
inc
jg
or
sbb
jmp
es
insb
out
movsl
mov
sub
out
inc
mov
cbtw
add
mov
push
rorb
pop
cld
loope
in
iret
jae
jmp
dec
lods
adc
dec
cld
out
inc
add
lods
fwait
jb
fsubs
sbb
mov
test
cmp
mov
in
in
in
js
fldcw
mov
lret
jl
es
pop
jp
xchg
aad
inc
jns
push
pop
shlb
jb
into
xchg
push
mov
inc
inc
xchg
pop
ja
outsl
sarb
push
out
je
add
cwtl
sbb
cmp
xchg
push
jge
lahf
repnz
sbb
out
insb
mov
jb
adc
rclb
sbb
push
or
push
xor
stos
pop
or
movl
cmpsl
xor
out
cs
into
or
and
ficomps
or
mov
xchg
cmp
and
call
cmpsb
out
push
fstp
mov
and
sub
scas
daa
pop
scas
sub
mov
loop
outsl
pushf
imull
arpl
jge
or
fcoml
leave
lods
xchg
mov
rcrb
aaa
inc
mov
sub
loope
mov
mov
sub
cmp
test
mov
dec
in
mov
daa
mov
int
xchg
mov
mov
jge
xor
push
mov
outsl
xchg
mov
push
cmp
cmpsb
ss
xchg
out
jo
xchg
mov
mov
ret
sub
jge
push
stos
jo
mov
sub
ljmp
add
int
ret
sub
int
insb
dec
out
and
scas
add
outsb
movsb
scas
gs
in
fs
dec
fnsave
mov
inc
dec
cli
insl
push
out
mov
lods
jge
pop
or
std
pop
sahf
pop
push
out
in
jnp
adc
std
and
mov
popf
inc
jno
clc
hlt
xchg
adc
pop
sar
cmpsb
cs
and
push
inc
adcl
cmp
cmovae
shlb
or
jae
xchg
xchg
push
jmp
adc
loope
sub
push
pop
mov
dec
cmp
outsb
xchg
mov
mov
gs
xchg
xchg
rcrl
imul
xor
fwait
sub
or
push
in
or
mull
dec
into
mov
repnz
clc
dec
lods
ror
mov
loop
cmp
mov
testl
push
mov
mov
sub
arpl
and
ds
lods
hlt
in
mov
mov
icebp
jmp
fsubrl
push
push
lret
jg
clc
orl
sbb
ljmp
xchg
jno
repnz
adc
std
out
orb
xlat
mov
add
push
push
lret
pushf
fdivrp
push
push
mov
test
pop
sub
pop
cmc
pop
cmpsb
fwait
sbb
inc
mov
mov
outsl
cmp
lds
xchg
mov
adc
ud0
dec
inc
loopne
push
lret
repz
and
dec
ret
das
scas
rolb
shrb
and
loop
mov
push
fsubrp
jo
ds
inc
std
int3
pusha
ror
lock
pop
jle
adc
cli
sub
lock
sbb
push
into
mov
ret
int3
adc
push
push
push
inc
sbb
mov
mov
pop
add
jge
sbb
stc
lret
push
fstl
test
mov
pusha
fstpl
mov
jo
fs
xchg
out
jno
pandn
popa
add
push
in
inc
daa
mov
lods
lret
dec
out
clc
mov
mov
mov
int3
dec
jo
xchg
xchg
ret
mov
xor
mov
addl
cmc
mov
sbb
sahf
int3
pop
xchg
iret
sbb
pop
in
lods
in
test
push
shr
inc
add
inc
sub
inc
popa
lods
mov
mov
js
mov
popf
mov
call
repnz
aas
lods
bound
imul
jne
int3
mov
clc
je
addr16
mov
mov
mov
and
or
cmp
subl
xchg
mov
mov
in
jno
loope
push
jle
sbb
pop
mov
movsl
jp
mov
xor
pop
out
mov
clc
cld
pop
lds
jne
mov
mov
push
or
jo
fs
and
fisttpll
dec
mov
push
jg
divb
or
imul
sub
jecxz
rorb
int3
jecxz
mov
jno
inc
sub
outsl
sub
push
jnp
repnz
and
jae
pop
sti
imul
stc
mov
jmp
in
cmc
fldenv
es
jno
sub
xchg
outsl
arpl
movl
shlb
ds
mov
out
sbb
sahf
lock
lahf
popf
xchg
inc
inc
sub
mov
push
ss
or
mov
jae
xor
adc
xchg
es
and
sbb
imul
shrb
bound
mov
sahf
scas
popf
xacquire
and
ja
xchg
popf
cmp
add
or
stos
in
lods
sahf
sbbb
cmp
sahf
clc
fidivrl
mov
mov
divb
fsubrl
nop
xchg
fnstsw
inc
pop
mov
xchg
hlt
mov
mov
scas
mov
pop
hlt
stos
pop
push
sub
cmp
mov
daa
and
aam
ret
inc
adc
push
insl
jnp
add
sub
mov
fimuls
mov
sub
shll
push
pop
cmp
cmp
mov
inc
scas
mov
xor
mov
mov
inc
sub
inc
sub
inc
insl
cmp
xchg
cmpl
je
or
lds
std
fmuls
jo
ja
mov
dec
rorb
dec
call
push
jbe
mov
or
test
insl
pop
xchg
dec
test
jbe
add
arpl
dec
outsl
into
fdivrs
xchg
sbb
daa
dec
subb
lcall
aaa
sbb
sub
mov
dec
ljmp
outsl
scas
das
pop
sti
push
or
lea
jmp
mov
int3
fisttpl
xchg
js
cmpsl
ret
cmp
aaa
pop
stc
leave
rcrl
test
sbb
test
jno
in
push
ffreep
insl
sbb
pop
mov
cmc
ja
or
sub
xchg
and
ret
jl
pop
jo
fdivrp
pop
repz
cltd
fiadds
cmp
fcom
sbb
test
or
fdivrl
pop
shlb
dec
enter
jp
loope
push
movsl
push
shrb
fdivl
mov
inc
out
cmp
push
jmp
pop
mov
cs
loopne
fstl
pop
mov
add
add
sti
xlat
pop
mulb
test
xor
cmp
mov
rorb
push
cmp
push
xlat
rolb
insl
andb
cmpsb
cltd
inc
cmpl
cmp
les
mov
xchg
stc
mov
out
sbb
mov
cmpsb
lds
nop
adc
mov
sahf
bound
add
stos
cmpsb
sub
or
mov
mov
in
loop
jne
aas
aad
sbb
outsb
outsb
aam
mov
inc
mov
xchg
enter
cmp
fisttpll
xor
stos
addr16
xor
bound
xor
mov
inc
sahf
xchg
jne
sbb
out
jns,pt
dec
jb
mov
lds
stc
mov
mov
lea
test
cli
xor
cmp
jno
dec
stos
lods
sti
cltd
out
shl
cmpsb
or
outsl
enter
push
out
push
lcall
pop
mov
ret
push
loopw
jecxz
sbb
fwait
inc
insl
sbb
xor
mov
ds
push
fld
jp
dec
sbb
push
mov
add
fs
jne
and
fcompl
mov
scas
pop
push
cmpsl
xor
add
inc
and
and
xchg
in
jo
sbb
sbb
scas
mov
inc
mov
int3
loopne
out
stos
or
xchg
cmpsb
clc
mov
push
repz
sub
nop
adc
popf
push
or
test
mov
inc
dec
or
outsl
push
std
adc
cmp
or
int
movl
out
cmc
jg
cmp
xor
fiaddl
sub
repnz
push
aaa
push
insb
mov
xchg
jecxz
aaa
outsl
les
and
outsb
mov
fs
push
enter
push
pop
dec
pop
mov
push
fiaddl
insb
pop
insb
cwtl
sub
xor
ja
jnp
mov
mov
mov
cmpsl
pusha
into
in
cmp
andl
aaa
dec
mov
and
pusha
xchg
outsb
cmp
stos
fcompl
fistl
lea
loopne
mov
mov
mov
icebp
jo
pop
or
imul
mov
scas
pop
sub
fsubr
bound
sbb
outsl
adc
mov
shll
xchg
mov
xlat
imul
decb
mov
cmpsl
rcrb
mov
mov
scas
loop
jmp
mov
repz
xchg
or
push
repz
pop
push
dec
stos
in
jns
and
xchg
mov
mov
sub
mov
mov
mov
xor
stos
popa
sti
push
xchg
aad
xchg
jo
int
xor
jp
and
lock
push
xchg
int
inc
pop
lcall
lret
push
jo
mov
adc
xor
jns
mov
or
testb
aas
cwtl
aad
push
lds
sub
xchg
je
adc
shrb
mov
or
mov
and
test
cmpsb
dec
aas
jecxz
sbb
out
dec
push
push
in
mov
into
sysret
jnp
mov
leave
add
jno
std
jg
gs
sub
scas
xchg
outsl
jmp
out
scas
enter
fwait
push
lret
mov
cmp
rcll
mov
sub
sahf
popa
aas
pop
int3
ss
repnz
test
or
aad
inc
jnp
jne
mov
das
mov
imul
popf
pop
push
mov
lcall
in
idivb
xor
lods
mov
insb
insl
xchg
mov
push
std
bound
lea
bound
inc
jg
pop
lea
push
mov
dec
popf
sub
add
inc
push
jb
dec
pop
jo
mov
inc
popf
xchg
pop
outsb
pop
add
cmc
dec
mov
xchg
add
mov
test
gs
and
jecxz
sahf
pop
xor
mov
add
scas
cld
sbb
push
pop
pop
lret
push
dec
mov
cmc
les
sbb
push
jae
push
jg
sbb
faddl
mov
orl
jl
mov
xor
out
or
xor
cmc
ffreep
and
add
sub
clc
and
cmp
push
jo
lahf
jmp
jmp
fwait
pop
jne
movsl
leave
insb
or
jae
cmp
cld
cli
jbe
jno
jns
movsb
mov
adc
inc
aas
push
ja
iret
dec
pop
mov
outsl
test
in
push
pop
lods
in
es
dec
mov
loopne
mov
lret
repnz
mov
shl
sarl
sub
adc
les
pop
rcr
cmc
test
add
add
push
pop
xchg
imul
ret
jmp
imul
or
rcl
insl
jne
pop
cmp
jo
and
cwtl
xor
dec
imul
push
imul
jle
jl
loope
int
xor
xor
jge
fbstp
inc
dec
inc
or
xchg
mov
js
std
push
adc
out
jle
adc
dec
in
fnstsw
xor
shr
or
push
into
xor
pop
mov
cmp
and
test
aad
cmp
push
inc
pop
stos
jecxz
xchg
repz
mov
adc
push
jg
in
add
cmc
adc
pop
pop
pop
fs
jnp
mov
lcall
cmp
call
adc
mov
out
push
loopne
lahf
ret
ss
mov
push
xor
shll
decl
mov
test
out
ds
lods
notl
jno
mov
pop
cmp
pusha
or
adc
cmp
mov
outsb
cld
insb
out
jb
cmpsl
cs
stc
scas
pusha
scas
inc
jmp
icebp
adc
xchg
push
rcrl
test
scas
js
clc
mov
and
inc
pop
push
fadds
fstps
flds
xor
fstl
xchg
in
add
cltd
popa
push
and
in
aam
lds
imulb
clc
cltd
cmp
out
dec
mov
push
in
and
lret
cmpb
or
mov
push
pop
pop
repnz
mov
inc
mov
sbbl
mov
cmp
call
shll
add
dec
out
fdivrl
cmp
lret
adc
add
cmp
daa
mov
pop
push
cmpsb
jmp
push
movsl
mov
jo
inc
dec
fstpl
mov
repnz
inc
push
mov
std
mov
jnp
cmp
aam
dec
mov
int
cltd
lock
incb
xchg
push
imul
aas
or
ret
fmuls
xchg
jno
mov
xor
dec
ret
jbe
int
ret
rcrb
addr16
or
adc
addr16
and
mov
add
xorb
mov
xor
dec
dec
lret
test
push
notl
in
pop
and
into
xor
dec
cltd
lcall
stos
mov
ret
loop
outsb
es
scas
jbe
movsb
daa
pop
xor
repz
dec
push
xchg
inc
pop
push
push
popa
aam
push
js
cmp
pop
jp
cli
and
push
mov
icebp
xchg
int3
adc
cmpsl
xchg
inc
mov
jne
jg
imul
rorl
xchg
pop
pusha
pop
inc
mov
fidivrl
adc
rol
into
sbb
and
mov
inc
enter
call
xchg
shll
fidivrs
insb
sub
push
sbbb
jmp
cmp
mov
stos
dec
pop
insl
xor
jnp
push
add
out
sbb
mov
mov
push
jp
clc
add
fstpt
decb
cli
xor
cmp
andb
adc
call
jns
and
xchg
aam
mov
sbb
lock
sbb
dec
dec
int3
pcmpeqw
sti
xor
dec
shlb
lds
pop
xchg
mov
std
xchg
fsubrs
add
lahf
test
cmp
in
test
shl
and
push
sub
cmpsb
repz
xor
aam
cli
clc
adc
dec
in
or
imul
loope
jmp
es
lods
cld
fxam
lds
nop
push
xor
loopne
sub
rorl
mov
cmp
loop
adc
notl
mulps
loop
dec
jl
arpl
mov
mov
pop
mov
mov
popf
scas
iret
sub
xchg
pop
js
mov
icebp
fwait
pop
or
fstpl
inc
movsl
popa
push
fchs
sub
and
test
stos
repz
mov
xor
jno
cmp
sub
rolb
shrb
or
add
loope
jle
push
mov
into
add
pop
mov
shrl
and
loope
shlb
inc
stc
adc
pop
mov
push
xchg
pop
out
loop
inc
sub
xchg
mov
mov
icebp
push
int3
incb
adc
movb
testb
pop
mov
push
sti
test
push
int
outsl
or
jo
mov
mov
cmp
int3
add
push
xchg
cmp
jae
lods
ret
pushf
andl
add
mov
pop
loopne
cmp
stos
nop
mov
vpmulhuw
or
adc
gs
adc
lahf
out
xchg
push
xchg
pop
cmp
pusha
jp
stc
push
sub
filds
adc
cltd
clc
sub
adc
pop
pusha
movsl
pushf
adc
movsb
dec
andps
push
xchg
sub
push
jp
lcall
cltd
xchg
cmp
dec
mov
inc
rcrb
imul
inc
cld
nop
push
fdivrs
mov
push
sbb
mov
addl
cmpsl
int3
dec
xlat
sti
imul
movsb
mov
pop
imul
inc
sub
js
aaa
pop
iret
mov
mov
jle
gs
int3
adc
in
mov
sbb
mov
into
push
leave
inc
xchg
pop
ljmp
sbb
inc
dec
cmp
add
jp
xchg
fistpll
adc
fsts
lea
lret
fistpl
adcl
daa
jmp
mov
pop
add
ljmp
dec
jmp
sub
mov
lret
cmp
xor
inc
decl
pusha
mov
inc
cmc
xor
or
and
hlt
mov
out
jmp
ljmp
and
loopne
pop
lcall
pop
mov
test
faddl
std
adc
cmpb
rorb
scas
cmpsl
add
rcrl
pusha
xor
cltd
dec
std
add
push
jmp
mov
imull
xchg
roll
arpl
daa
jbe
push
jno
push
call
xor
xchg
arpl
pop
jns
loopne
repnz
jl
repz
leave
push
jne
lea
lods
leave
aad
and
mov
jecxz
scas
xchg
call
sbb
movl
jns
stos
add
popa
xchg
aaa
pop
out
pushf
faddl
sub
daa
cmp
jne
fistl
jl
adc
xchg
jle
xchg
out
inc
movsl
jl
xchg
xchg
outsb
sub
pushf
lods
das
negb
cltd
and
outsb
inc
test
pop
imul
jmp
jp
aam
sub
inc
xchg
xor
lcall
mov
ss
push
fs
pop
stos
push
gs
mov
and
setg
mov
push
sub
int3
and
fsubs
loop
je
or
jl
paddusb
pop
repnz
repnz
dec
jb
aad
dec
aad
repnz
das
in
jle
jl
int
dec
in
lods
pop
gs
cmp
dec
in
adc
dec
xlat
adc
cmpxchg
sbb
pop
lock
push
jle
call
inc
cmpsb
cli
xchg
pop
and
mov
and
and
sbb
ds
add
out
jmp
xchg
or
pop
dec
fs
cmp
cltd
insb
mov
dec
cmpsl
cltd
movsl
mov
cmc
shrb
test
sarb
mov
fs
cltd
xchg
iret
jnp
cmc
push
push
sub
hlt
xor
mov
sub
xchg
adc
sbb
mov
call
fsubrs
jno
das
dec
and
add
iret
iret
cmpsb
mov
in
out
lds
cmpsb
inc
mov
push
pop
iret
or
sbb
cmc
mov
jmp
lcall
push
jns
cmpsb
pop
pop
shrb
idivb
add
mov
loope
sbb
adc
xchg
std
mov
test
jns
xchg
outsl
inc
xor
jb
pop
adc
stos
add
fldenv
push
mov
sbb
or
push
sub
add
lret
pop
jp
push
mov
daa
jle
sub
cltd
jnp
adc
je
and
cmp
mov
rol
push
and
inc
jne
je
inc
cwtl
dec
jnp
pushf
sub
sbb
call
scas
pop
lcall
pop
inc
ret
fs
into
lds
cmp
adc
jae
push
inc
xchg
mov
mov
adc
repnz
and
test
hlt
push
sbb
add
adc
xor
xor
adcl
stc
inc
mov
loopne
iret
out
mov
test
add
fcmovne
sbb
repnz
hlt
mov
dec
test
sti
jle
pop
sbb
out
add
inc
cltd
inc
dec
push
xchg
cmp
sbb
rorb
cmp
xor
js
not
inc
pushf
and
dec
sub
adc
sbb
jnp
lds
fdivrs
and
xchg
rcll
test
pop
mov
rolb
out
sbb
inc
aad
sub
leave
es
dec
cmp
mov
jno
in
ficoml
mov
scas
aas
pop
sarb
and
test
das
rcrl
loopne
incb
loopne
adc
or
jo
xor
pop
sub
mov
inc
dec
neg
mov
lea
mov
xor
fcmovu
push
shlb
testb
loopne
mov
mov
and
jle
cwtl
and
jge
in
dec
gs
roll
inc
xchg
or
pminub
mov
mov
mov
bound
mov
ljmp
mov
mov
ljmp
scas
sahf
daa
add
fdivrl
jae
jae
jmp
mov
std
jnp
mov
pop
xchg
hlt
sbb
fisttpll
inc
or
push
lds
into
mov
jle
cmp
mov
xor
and
mov
lock
mov
mov
popf
xor
cmpsl
xchg
loop
mov
mov
xchg
sbb
sarl
xchg
ss
or
push
addr16
mov
xchg
or
sar
xchg
data16
jae
loope
xchg
popa
push
and
mov
insb
cmp
add
js
fs
mov
xchg
inc
jl
push
pop
imul
mov
push
jb
jo
lahf
fidivrs
bound
pop
and
inc
push
cltd
les
sub
mov
xor
mov
ss
incb
mov
out
and
sbb
out
sub
out
push
lods
mov
sub
testl
and
sbb
adc
push
inc
call
dec
stos
daa
pop
in
inc
xchg
sub
dec
insl
mov
clc
test
les
xchg
dec
mov
mov
push
shl
cmp
push
jge
sub
loopne
xchg
mov
xor
push
in
xchg
or
lods
scas
mov
test
ljmp
and
shll
add
sbb
mov
bound
test
push
daa
jb
ljmp
xchg
or
jb
mov
sub
xchg
repz
in
push
pop
loop
aam
xor
ss
das
je
add
jle
mov
test
mov
leave
pop
out
out
or
nop
stos
jle,pt
mov
lea
inc
sbb
and
out
fnstenv
add
test
and
sarl
pop
xchg
rol
into
xor
and
rclb
fisttps
pop
or
addr16
fwait
mull
and
das
fmull
pushf
pushf
das
xchg
ja
aas
pop
cli
outsl
push
sbb
lods
mov
loope
imul
hlt
clc
and
stos
jb
mov
jmp
cwtl
mov
pushl
fisubs
push
inc
mov
ja
inc
mov
pop
lods
adc
or
xor
repnz
loop
aaa
aas
fisttpl
jno
cmp
ja
roll
mov
xchg
js
jle
mov
repnz
and
repnz
ficoms
mov
fdivrl
or
mov
aam
out
inc
inc
jbe
inc
loope,pt
jnp
fdivrp
or
cmp
jbe
pusha
test
std
mov
push
dec
and
call
dec
jmp
adc
jne
jge
test
or
ss
push
mov
inc
mov
es
cs
cltd
xor
xchg
jb
sbb
sub
mov
cmpsb
mov
jge
push
push
pop
mov
add
add
pop
flds
js
push
jmp
in
mov
les
mov
mov
jbe
inc
scas
push
aaa
jnp
cmp
jp
repz
xor
fs
push
or
or
mov
push
adc
sti
andps
mov
popa
pop
mov
xchg
cmpsl
adc
mov
jb
push
cmp
cmpsw
neg
dec
xor
rcrl
in
adc
jo
adc
aad
lods
lret
call
xor
dec
push
imull
xchg
add
daa
mov
push
enter
mov
imul
cmpsb
mov
out
push
bnd
aas
pop
xchg
cmp
pushf
into
and
sub
test
inc
ja
mov
out
cmpsb
lock
sbb
sbbl
mov
sub
je
adc
sti
jmp
notb
jo
mov
mov
xor
cmpsl
push
jno
movaps
mov
mov
rorl
mov
dec
push
loope
jg
push
lods
lock
jle
mov
xor
dec
xchg
xchg
mov
mov
stc
ja
dec
imul
arpl
and
pop
inc
ret
outsl
bound
or
xchg
mov
and
scas
loopne
cmc
jae
mov
adc
xchg
sbb
nop
cli
jmp
pop
sbb
int3
dec
in
sbb
cli
in
je
sbb
pop
cmc
push
scas
cld
stc
cmpsb
xchg
adc
addl
inc
les
pop
inc
xor
fimull
cmc
push
mov
in
add
xor
jb
loope
inc
mov
ljmp
mov
cmp
enter
pushf
or
jns
push
and
es
and
xor
push
iret
push
mov
push
out
sahf
pushf
fnclex
jne
cmp
loope
lods
mov
js
mov
adc
xor
test
andb
ret
inc
push
int3
sbb
shll
mov
pop
inc
lahf
sbb
jg
add
fwait
repnz
xor
cmc
pop
dec
add
outsb
xchg
stos
sub
jl
shll
roll
xchg
push
negl
mov
mov
jmp
sub
mov
pop
pop
push
test
cmp
loopne
sbb
lcall
rorb
xor
push
js
push
dec
pop
xchg
pop
mov
aad
test
stos
mov
xchg
testl
inc
cmp
mov
dec
lret
or
pop
jno
xchg
pop
jmp
imul
pusha
pop
dec
cmpsb
pop
sbb
lds
sbb
jp
es
cmp
jno
gs
xor
push
pop
enter
push
inc
sbb
adc
push
sbb
sub
scas
movsb
in
outsl
add
sub
and
fists
clc
sbb
pop
cwtl
inc
pushf
mov
xor
popf
inc
dec
push
mov
jl
cmpsb
subb
stos
mov
and
and
mov
test
jno
cmp
imul
jle
lods
adc
mov
push
sub
dec
xchg
mov
iret
out
sbb
push
test
hlt
inc
sub
adc
jg
lods
loop
add
dec
xchg
insb
mov
jle
inc
ret
xchg
fs
jg
cmc
cmp
test
aam
mov
dec
adc
jbe
sbbl
inc
in
iret
test
fildl
mov
jp
or
jmp
lea
into
lock
lea
xor
fidivrl
mov
mov
or
out
pop
mov
mov
vmptrld
out
dec
or
mov
movsb
push
sbb
fisttpll
cmp
das
add
sbb
mov
test
cmc
mov
xor
popl
pop
dec
ret
add
xor
dec
adc
pop
cltd
inc
movsl
add
add
jno
inc
xor
lcall
mov
pushf
imul
mov
or
adc
and
and
ljmp
xchg
jnp
dec
sarb
and
fcmovb
inc
lea
iret
in
dec
ja
leave
inc
jo
mov
xor
pop
push
xor
inc
pop
call
push
push
testl
lcall
movsb
adc
mov
lret
iret
aam
mov
sub
hlt
mov
xchg
int
sarl
cmp
push
jg
jb
sti
iret
sub
aas
js
leave
xchg
push
rcrb
push
ljmp
shlb
jbe
fldt
aad
mov
fwait
push
sub
push
outsl
jb
and
inc
adc
enter
repz
enter
xchg
inc
test
cld
ret
xor
out
adc
ljmp
mov
jns
inc
jmp
adc
xchg
cltd
mov
enter
leave
cmpsb
mov
and
and
jg
jmp
lret
sub
negl
push
pop
fwait
add
movsb
adc
rcrl
jmp
adc
mov
jnp
arpl
jp
lret
insb
stos
pusha
into
pop
xchg
aam
leave
and
pushf
ljmp
les
jl
arpl
divl
cld
movsb
add
adc
mov
sub
inc
jl
mov
ja
lds
jbe
sbb
xchg
subb
push
pop
ljmp
mov
mov
icebp
adc
cltd
popf
jg
sbbl
sub
inc
aad
fs
decb
pop
pusha
sbb
push
adc
adc
cmp
cld
mov
dec
bswap
cmp
cmpsl
mov
or
imul
out
mov
mov
flds
dec
js
jb
dec
jbe
arpl
jb
add
es
xchg
std
imul
xchg
int
lods
mov
dec
jmp
sub
sub
cmp
jl
movsl
lds
movsb
lahf
dec
and
xchg
push
and
xchg
shl
jmp
push
icebp
xchg
jns
inc
lds
cmp
imul
cmp
adc
jbe
sub
popf
in
mov
add
or
call
or
push
cltd
lods
push
outsl
jg
fisubrl
mov
insl
sbb
into
out
ud0
or
shrl
ret
shrl
inc
call
sub
outsl
int3
test
je
mov
dec
add
sbb
sbb
sbb
out
cli
lods
data16
mov
pop
out
mov
in
fwait
aas
jne
push
dec
dec
cmp
aam
xorb
sahf
or
cmp
pop
test
jmp
movsl
dec
cs
in
stos
bound
pop
and
mov
mov
dec
xlat
popf
and
outsl
cli
ss
or
nop
mov
lcall
add
das
mov
mov
push
push
pop
jg
adc
xchg
sbb
add
daa
or
loopne
cmc
push
jle
adc
mov
dec
cmp
mov
out
mov
inc
pop
in
push
bound
fisubl
add
cmp
push
mov
sub
loopne
pop
imull
or
mov
ret
out
fwait
cmp
inc
sarl
js
jo
cmp
lea
dec
dec
push
in
les
mov
cmc
add
xlat
push
pop
les
add
mov
andl
jb
xlat
js
or
mov
mov
inc
jne
sarb
inc
mov
shr
mov
repz
jl
add
and
cld
sub
fidivs
fadd
movsb
clc
clc
jge
xchg
addr16
jg
out
fstp
jno
mov
nop
sbb
mov
push
dec
or
scas
bound
mov
stc
or
mov
adc
inc
jge
call
out
pop
push
lahf
dec
mov
xchg
in
lret
sbb
scas
mov
loopne
jb
jp
scas
in
and
nop
sbb
enter
cwtl
fiadds
push
mov
shll
mov
mov
jns
call
push
inc
mov
test
xchg
jmp
xor
pop
test
lret
jl
cs
ret
inc
enter
aaa
je
call
out
mov
xor
pop
fwait
enter
jnp
or
iret
or
push
and
repz
or
div
mov
dec
push
out
in
dec
mov
or
adc
insb
mov
jg
js
pushf
jb
in
or
dec
mov
inc
rorl
add
push
pop
mov
ficoms
shlb
mov
orl
leave
mov
push
pop
dec
cmp
push
je
cmp
xchg
outsb
push
fldl
push
stos
inc
push
fisubs
imulb
sbb
rorl
cmpsl
movsb
dec
pop
mov
jnp
cmp
mov
test
dec
mov
xchg
or
jnp
mov
sbb
decb
lock
mov
ja
enter
lret
jle
popa
movb
aad
xor
outsl
mov
push
adc
xchg
pusha
outsb
clc
in
push
lds
cs
mov
mov
sbb
mov
insb
int
mov
sbb
jnp
xor
lea
mov
ret
push
cmp
xlat
jge
dec
fwait
xchg
lea
insl
mov
cmc
mov
imul
and
call
inc
scas
repz
rorb
outsb
add
or
gs
fisubrs
int3
push
enter
hlt
popf
dec
cmp
push
xor
movsl
fcoms
lcall
fnstsw
fs
aad
inc
enter
add
dec
rorl
in
mov
loopne
jb
aad
xchg
mov
mov
pop
sarb
push
shrl
dec
pushf
imul
loope
add
mov
sbb
pusha
inc
aam
sub
outsw
add
shlb
ss
jl
movsb
push
clc
mov
int
pop
ficompl
insl
fs
loopne
jae
inc
lock
sti
cmp
sub
sbb
ljmp
jg
cli
inc
mov
or
xchg
aaa
loope
push
lods
fwait
sub
dec
shrl
and
mov
sub
ds
mov
das
mov
lret
daa
enter
rcll
rcr
xchg
sub
or
mov
leave
jbe
push
pop
cwtl
sahf
pop
add
sub
movswl
scas
cld
mov
inc
inc
scas
das
cltd
adc
jp
cmp
ds
stc
mov
sti
adc
les
and
jp
in
je
xchg
sbb
mov
pop
out
dec
xor
sub
xchg
rorl
mov
icebp
leave
push
sbb
pop
pop
loope
jns
mov
icebp
add
dec
push
jp
dec
xorl
ss
jge
packssdw
xchg
cmp
or
addb
adc
mov
sbb
xor
jl
xor
out
aaa
jnp
push
ds
xor
push
cmpsb
fbld
or
dec
mov
xor
pop
push
movb
xchg
lock
aas
sarl
testb
imul
mov
add
jae
or
adc
insl
ja
mov
jmp
test
dec
cmc
fistpl
and
jbe
call
ss
adc
xor
inc
movsb
int
mov
mov
xor
rcrl
adc
add
icebp
dec
stos
outsl
testb
std
adc
fldl
push
cmp
inc
out
inc
btc
int
scas
push
pop
outsl
ret
mov
shrl
mov
add
lret
popf
xchg
cs
popf
xchg
pop
pop
int
lea
in
mov
mov
mov
gs
cmp
mov
mov
jp
sbbb
mov
jmp
sub
int
dec
push
out
push
sahf
jnp
and
xor
xchg
or
mov
sbb
testb
or
xor
cmpsl
add
jbe
dec
loopne
pop
add
fdivs
cmp
xchg
or
dec
rorl
sahf
push
jmp
adcl
call
adc
into
ret
subl
pusha
adc
xchg
cmp
pop
bound
fistpll
popa
cwtl
or
test
iret
xchg
mov
push
xchg
daa
mov
enter
sub
pop
cmpsb
xchg
inc
mov
pop
pop
out
inc
sub
xor
push
lret
and
hlt
test
cmpsb
and
in
jnp
adc
push
outsl
ss
adc
cli
aas
jbe
test
push
cmp
dec
das
or
dec
into
cmc
outsl
lret
pop
loop
xchg
js
mov
xor
and
into
xchg
mov
pop
inc
mov
inc
lods
fcmovnbe
jne
insb
in
cmpsb
hlt
sahf
lahf
popf
jae
dec
frstor
push
lea
repnz
mov
mov
ds
out
arpl
in
imul
jb
mov
outsb
test
std
mov
or
dec
mov
xchg
xor
pop
insb
xchg
ret
cmp
enter
popa
das
fwait
repz
lds
shl
inc
cwtl
inc
jecxz
mov
scas
jecxz
dec
sbb
sahf
insl
push
push
ss
xchg
stos
loop
mov
pusha
add
das
xchg
xchg
loop
pop
push
sub
dec
add
xchg
leave
test
or
shlb
push
loopne
dec
mov
adc
pushl
ds
sub
pop
mov
sti
out
pop
sbb
or
lcall
sub
jns
mov
jl
mov
inc
inc
aas
sub
scas
mov
mov
jl
add
pushf
jae
outsb
jmp
pop
arpl
mov
cmp
icebp
push
outsb
fs
lock
aam
xchg
fistl
das
cmpsl
data16
add
movsb
in
mov
sti
in
pusha
mov
les
dec
sub
loopne
fcomps
fdivp
or
pop
cs
dec
xchg
js
aas
lret
and
loop
mov
push
mov
or
popa
popa
push
fimuls
cmpsb
inc
lods
pop
shl
sub
ljmp
stc
mov
adc
inc
sbb
cmp
rcr
ja
shrl
push
fwait
cli
pop
call
mov
sbb
and
leave
fcoms
sbb
and
pop
sar
testl
faddl
test
and
ret
setg
cmp
sbb
mov
inc
sarl
xor
and
scas
test
inc
pusha
nop
data16
rcrb
lahf
ret
aas
dec
xchg
sub
dec
pop
or
js
stos
insl
sbbl
jbe
pop
jnp
xchg
sbb
popa
pushf
adc
cmp
xorl
fidivrl
add
out
sub
or
sub
jle
pop
mov
aam
inc
dec
push
mov
insb
and
pop
mov
insb
or
movsb
jg
fcomip
loopne
mov
popa
mov
test
rcr
mov
insl
xchg
push
sub
stos
xchg
mov
mov
je
jne
mov
adc
je
jmp
dec
add
mov
test
gs
jo
or
repz
ficoms
pop
leave
push
call
dec
lea
cmp
inc
fstpl
rolb
dec
adc
xor
aad
add
aad
lret
jno
push
mov
iret
mov
or
sbb
jle
fbstp
mov
xchg
test
inc
ret
pop
dec
lret
pop
fildl
inc
inc
lods
aas
push
or
je
fisttpll
dec
push
adc
cmp
cmp
and
push
xchg
cs
push
cmp
fidivl
add
out
decl
in
push
dec
jecxz
cltd
jmp
fcoms
jns
cmc
enter
push
outsb
fistps
push
mov
and
ss
in
fnstcw
shrb
and
add
adc
sbb
inc
jmp
xchg
xchg
icebp
push
xchg
cwtl
or
or
xchg
adc
xchg
adc
push
adc
ja
xchg
jns
add
loopne
lods
pushf
add
sub
add
sub
movsl
adc
jg
mov
sub
shl
ds
inc
mov
outsb
and
aas
sub
sub
insb
sahf
cld
mov
pusha
push
adc
xlat
jb
rorb
pop
inc
out
hlt
pop
bound
or
dec
push
jl
mov
outsl
pop
or
jns
adc
and
aaa
adcl
jp
jecxz
xor
adc
out
sbb
push
hlt
lods
daa
es
insl
mov
mov
pop
pop
shr
inc
and
int3
xchg
fidivrs
leave
ja
sub
and
adc
sbb
push
push
mov
jge,pt
push
xchg
in
outsb
iret
mov
fxch
loop
subb
sub
loopew
rclb
rcl
dec
mov
pop
imul
pop
aam
dec
cmp
in
mov
aaa
add
mov
lahf
or
sahf
and
test
outsb
xchg
xor
mov
pop
mov
loopne
mov
or
push
cmc
loop
mov
pushf
ret
mov
jbe
fstpt
call
ror
dec
xor
and
lea
push
sub
add
inc
xchg
daa
jmp
pop
std
hlt
jbe
mull
ja
push
sahf
push
adc
and
dec
and
jae
mov
inc
dec
aam
cwtl
xchg
xlat
jle
cli
lods
push
push
xorl
and
mov
fiadds
into
or
cmp
testb
aas
add
shll
adc
das
mov
adc
pop
out
arpl
stc
shll
ja
stos
pop
sub
cmp
out
mov
out
pop
sbb
lds
dec
xor
cwtl
icebp
mov
movsb
ljmp
adc
dec
sbbb
or
orb
push
jno
enter
jbe
xor
ret
inc
cmp
and
xor
jb
pop
clc
loopne,pt
rol
xlat
sub
or
fisubl
sub
mov
je
sbb
cmp
or
add
push
inc
dec
cmc
xor
push
inc
daa
cmpsl
pushf
and
and
mov
adc
out
push
pop
cmc
pop
outsb
ljmp
mov
pop
cli
sub
pop
lcall
scas
jle
jne
pop
sbb
mov
mov
cmpsl
in
xor
cmp
fcompl
mov
inc
mov
scas
out
scas
jmp
insb
mov
imulb
pop
mov
cwtl
add
es
cmpsl
pop
pop
mov
inc
aaa
jne
mov
xchg
mov
jmp
inc
mov
mov
mov
mov
push
adc
cmp
out
idivl
aam
mov
ret
or
js
mov
pop
ja
sub
cmpsl
push
in
insl
mov
sub
popa
in
insb
mov
xlat
loopne
xor
in
or
imul
cmpsl
add
xchg
mov
jne
loop
mov
sbb
test
sahf
aaa
inc
ficoms
mov
ljmp
insb
loope
push
jg
aaa
dec
nop
adc
pop
sub
out
mov
cld
jmp
in
lahf
in
xor
mov
dec
jmp
add
rcll
pushf
and
push
inc
test
popa
push
fsub
cmp
pop
orb
mov
add
or
xchg
testl
das
cltd
and
adc
xchg
mov
inc
mov
cwtl
ret
xlat
ss
outsl
out
sub
mov
shrl
lea
out
mov
sub
lret
xchg
inc
adc
out
lret
shlb
xchg
stos
push
lret
imul
in
fs
stc
rcrb
cmp
mov
lods
sub
loop
cmpb
add
fiadds
frstor
adc
push
or
testb
out
cld
enter
test
dec
mov
lock
dec
scas
push
mov
orb
mov
mov
in
fisubrs
int3
cmp
gs
pop
inc
rcrl
nop
stos
sub
lock
rcl
repnz
es
push
jle
mov
or
shrb
mov
out
das
mov
adc
cmp
into
jb
xchg
ror
inc
pop
dec
mov
adc
jg
dec
js
pop
xchg
mov
pop
in
jp
daa
sarl
addl
pcmpgtw
fsub
mov
movaps
stc
addb
jo
movsb
outsb
and
loopne
adc
lods
inc
xor
stos
push
adc
scas
inc
mov
out
push
pushf
inc
pop
xchg
je
lahf
pop
stos
sahf
dec
or
push
mov
sahf
dec
addr16
fsts
jp
mov
push
or
insb
add
in
adcb
push
and
lds
cmp
sahf
shl
fnsave
imul
inc
pop
das
lods
push
or
shr
fidivs
cmp
xor
dec
jg
lods
fisubrs
aaa
mov
push
push
pusha
jae
jnp
js
fsubp
pop
dec
das
push
cld
das
mov
cmp
sub
mov
pop
clc
iret
movsl
cmp
pop
sbb
ret
movsb
inc
dec
jae
lahf
or
imul
movsb
mov
dec
addr16
in
jno
or
xor
mov
cmpsl
mov
out
lahf
pushf
mov
fs
jnp
push
mov
adc
add
sub
ljmp
mov
fs
xchg
js
int
outsl
add
cmp
fidivrl
mov
xor
decb
imul
sub
push
pop
fwait
and
out
std
fisttps
mov
cmp
nop
jmp
stos
fisubl
adc
jae
aaa
shr
add
mov
arpl
pop
mov
shr
xor
out
jle
dec
popa
leave
and
push
mul
jne
addr16
mov
ss
aas
cmp
dec
ret
xchg
pop
scas
lock
sbbl
jno
shll
sbb
loop
xor
sbb
lods
gs
xor
inc
add
notl
adc
addr16
outsb
mov
int
insb
push
xchg
push
lret
xchg
lods
int3
or
add
andb
add
pop
adc
pop
push
jp
cmp
das
add
lds
movsb
imul
push
test
pop
lcall
sub
ret
adc
cmpsl
mov
sub
add
mov
inc
mov
addb
xchg
push
stc
mov
js
rcll
mov
xchg
sbb
scas
fisttps
fmull
xor
icebp
fwait
std
sti
test
or
ljmp
leave
jb
aas
xchg
and
syscall
add
fdivrl
lods
mov
mov
jmp
xchg
jb
addr16
adc
mov
les
mov
sub
push
sbb
ss
addr16
popf
imul
dec
sbb
cmp
inc
cmpb
shll
push
movsb
jecxz
gs
jg
in
ret
data16
jb
jle
cmp
out
out
ret
int3
dec
sbb
lret
sarl
adc
dec
mov
mov
and
xor
push
jb
cmp
ds
icebp
sbb
ret
jns
jb
mov
mov
sbb
in
mov
lret
in
lock
pushf
mov
push
stos
sub
jg
mov
sbb
daa
fimuls
aas
xor
jnp
mov
push
das
or
lds
gs
and
dec
jle
dec
pop
dec
or
incl
addr16
lock
xor
add
int
gs
dec
enter
popf
insb
int3
cwtl
mov
cmp
mov
mov
mov
push
mov
jg
and
std
rcll
mov
lcall
push
cmp
xor
push
into
and
xchg
xlat
cmp
dec
push
xchg
pop
dec
imul
pop
pop
push
stos
sbb
lret
dec
jl
movsl
sahf
lods
mov
jns
pop
insl
sbbl
jge
movsb
and
add
push
push
or
arpl
rolb
and
push
dec
and
mov
ss
push
repz
test
in
jo
sbb
nop
cli
lahf
jne
xchg
mov
pop
fdiv
int
or
inc
in
repnz
addr16
jns
sbb
fcmovnu
xchg
fcoms
push
lret
jecxz
jp
or
ss
aaa
out
arpl
aad
int
xchg
adc
cmpsb
jge
fucom
mov
loop
xor
pop
xchg
pop
in
or
out
fistps
fisttpl
stos
cmp
enter
fsub
xchg
stos
pop
adc
nop
push
sbb
xchg
imul
mov
mov
fs
imul
push
or
adc
lret
fs
adc
jno
add
sbb
push
xchg
and
xchg
sbb
jmp
addl
fcmovnu
stc
dec
shlb
inc
sbb
pop
inc
dec
mov
loope
ds
in
lea
insb
into
jp
fs
xchg
fists
push
mov
push
sbb
adc
test
lcall
jns
xchg
jmp
cmp
imul
mov
inc
in
lock
mov
popf
sbb
jb
sarl
mov
pop
loopne
pop
push
mov
fbstp
lret
dec
fdivrs
pop
pop
xchg
pop
mov
mov
lea
add
mov
inc
lahf
mov
add
inc
cmp
sbb
test
xor
sbb
addb
inc
bnd
jbe
popa
mov
xchg
and
in
push
pop
aas
pop
je
rorl
int3
mulb
dec
mov
test
or
xchg
in
mov
mov
xchg
bound
sahf
cmp
and
adc
add
clc
sbb
ss
jecxz
cltd
cmp
test
jns
mov
stos
dec
xchg
pop
inc
aaa
insb
outsb
test
in
and
pop
or
xor
jae
shll
test
loop
ret
enter
push
imul
inc
negb
pop
sub
into
xor
jnp
or
lahf
das
push
dec
fnstsw
dec
cwtl
cld
sub
jp
and
cmp
mov
adc
adc
cmp
ret
iret
sub
dec
mov
add
cmp
sarl
jne
xor
mov
repz
mov
pop
adc
mov
out
or
pop
sahf
jb
mov
mov
and
mov
cmc
lcall
das
push
push
out
iret
add
ja
pop
or
xchg
push
and
mov
push
test
hlt
insl
xchg
into
jae
call
fcomi
xor
aaa
rcll
inc
inc
mov
repz
shrl
rcl
mov
jp
xchg
incl
cmp
pop
add
jp
mov
les
jo
mov
jl
cmpsl
lods
or
xchg
add
cmc
sbb
sbbb
imul
pop
jbe
ja
and
sub
jp
inc
mov
dec
or
test
push
lcall
mov
pop
cmpsl
sub
arpl
pop
mov
inc
adc
shrb
cmp
mov
outsb
mov
mov
cmp
movaps
lret
cmpsb
lods
sbb
pop
in
jo
js
aam
cmc
adc
fstl
dec
cmpsl
je
rol
jmp
cmp
int3
add
and
les
dec
popa
lahf
cmpsl
jecxz
mov
cmpsb
sbb
mov
jmp
mov
dec
ljmp
ja
xor
ret
cmpsb
push
or
lods
push
pop
nop
fsubrs
cli
jmp
jae
ja
pop
inc
mov
and
movsl
dec
loopne
shll
test
xorb
test
scas
loope
stos
dec
bound
xchg
cli
call
enter
add
push
leave
push
fimull
int3
sub
xor
and
jmp
mov
sub
mov
cltd
cmc
xchg
repnz
or
jl
mov
xor
dec
sub
or
xorb
dec
cmpl
out
mov
loope
dec
aad
mov
cwtl
mov
mov
mov
adc
sahf
mov
call
and
loop
pop
xchg
fimull
add
fdivl
faddp
xorps
out
sub
sub
sbb
mov
loopne
or
mov
add
out
push
dec
ficomps
sbbb
ret
mov
out
rorb
enter
mov
dec
pop
inc
jle
adc
push
cmc
icebp
imul
icebp
les
nop
cs
sub
jg
out
addr16
xor
bound
pop
sub
cli
or
mov
mov
xor
jge
pop
mov
daa
into
sbb
out
aas
inc
call
jl
xlat
xorb
push
hlt
and
icebp
or
mov
mov
subl
inc
nop
les
filds
iret
or
nop
mov
sbb
pop
bound
jnp
repnz
movb
je
das
xchg
xor
lret
xlat
sub
xchg
int
jecxz
call
push
andl
movsb
lcall
in
adc
lret
sahf
ds
mov
xor
icebp
stc
push
lods
lock
pop
leave
push
cmp
ret
adc
ret
mov
mov
push
nop
les
pop
push
ds
jns
hlt
shl
or
and
ret
ficoms
mov
cmp
loop
lds
push
push
loop
push
xlat
or
lock
push
push
jb
movsb
cmp
pop
repnz
mov
pop
xchg
dec
sub
push
ffree
mov
fdivrl
pop
fmul
flds
lahf
sub
popa
sub
cli
fcomip
cmp
pop
in
in
fs
xlat
pop
lret
push
mov
mov
rcrl
rol
pop
or
add
popf
mov
xchg
mov
aam
fmuls
mov
pushf
das
mov
movsl
out
adc
pop
ljmp
test
mov
out
sub
xor
lret
ds
gs
dec
mov
or
push
pop
ret
xor
pop
shl
push
xorb
cs
shl
clc
inc
and
test
lcall
dec
mov
jg
or
xchg
cltd
sbb
push
fsubl
mov
js
cltd
cltd
loop
or
pop
push
jb
jl
inc
popf
cmpsl
rclb
fsubrs
xor
out
enter
bound
adcb
lcall
and
ljmp
fs
push
xchg
insb
iret
push
add
psubq
dec
jbe
sbb
and
stc
fsubrl
imul
sub
push
ret
aad
in
pop
inc
jbe
lods
mov
push
ftst
rcr
adc
pop
sub
out
icebp
ret
loop
pop
mov
add
inc
sbbb
insb
sub
addr16
inc
orl
sahf
and
loopne
lea
mov
aad
cmpb
and
in
lcall
es
xchg
cmp
cs
stos
adc
add
xchg
jmp
sar
fmull
push
fs
aaa
mov
inc
xor
fstps
adc
or
mov
mov
cmp
xor
lcall
mov
rcll
cmp
roll
inc
xlat
mov
cmp
dec
in
shrl
mov
popf
and
or
jl
or
cwtl
mov
insl
xchg
movsl
es
daa
adc
and
inc
mov
xchg
xor
int3
mov
and
sub
inc
out
fistl
push
movsb
cmpsl
mov
shrl
pop
jle
pop
daa
inc
mov
imul
std
je
mov
nop
in
xchg
dec
cmc
sub
dec
push
push
dec
mulb
out
popa
xorl
jmp
clc
addr16
repnz
scas
in
jmp
scas
lock
xor
inc
or
mov
roll
es
push
aad
addr16
mov
or
mov
ljmp
pop
mov
pop
inc
sahf
enter
je
dec
mov
cmpsl
mov
inc
icebp
xor
sbb
ret
mov
test
and
mov
in
mov
out
stc
add
dec
inc
jbe
enter
fisubl
xor
stc
fildll
sbb
xor
out
fdivs
mov
push
mov
jmp
fdivl
ss
icebp
pop
in
jecxz
bound
stos
inc
roll
in
enter
rolb
adc
lods
jmp
cmp
xor
repz
push
or
or
jmp
or
lret
bound
es
ja
jae
aaa
iret
sbb
arpl
or
sti
pop
scas
popa
test
movsb
stc
push
cmc
stos
fcmovnbe
cmpsb
icebp
mov
fidivl
pusha
loop
and
jbe
call
cmpsl
into
fs
or
mov
sbb
rolb
jae
add
fistl
test
inc
fsubs
imul
push
dec
cs
xor
push
dec
lods
or
mov
out
add
push
sbb
xchg
lcall
jge
fidivrs
jp
xchg
push
aad
clc
and
fdivp
xchg
mov
mov
cmp
shll
insl
xor
fstpt
test
jb
scas
cmpsl
stos
adc
lret
mov
aas
jo
movsl
push
fisubrs
sbb
lcall
dec
mov
lret
sub
inc
imulb
fs
dec
inc
or
sub
or
sbb
cmpsl
das
inc
or
les
or
stc
aas
test
in
sbb
xchg
pop
and
popf
inc
mov
mov
jl
out
inc
pusha
dec
jp
shrb
mov
mov
int
movsb
in
repnz
adc
loop
std
out
cmp
adc
xor
xor
rcr
inc
xchg
repnz
out
addb
ljmp
out
mov
test
nop
adc
add
stc
pop
push
pop
xor
inc
loope
iret
jns
mull
lahf
imul
mov
stos
mov
fisubl
dec
xlat
cmp
aad
add
xor
jb
fs
jl
push
pop
fisttpll
or
xor
and
mov
push
push
xor
adc
lret
sahf
add
cli
mov
xchg
lods
decl
inc
pop
add
push
or
imul
mov
or
or
sbb
arpl
adc
je
pop
cmp
cwtl
xor
insb
dec
jo
mov
scas
sub
pop
in
pushf
outsb
push
cmp
arpl
lea
int
add
xchg
pop
push
xchg
sahf
fbstp
jmp
dec
sub
pop
sbb
sbb
push
in
stc
pop
pop
push
clc
mov
mov
enter
jl
dec
pop
fs
or
clc
lea
xor
inc
popa
je
adc
mov
inc
fdivs
jge
dec
shl
mov
pop
int
pop
jne
in
or
loope
add
repnz
inc
sbb
jmp
out
hlt
jmp
or
inc
in
addl
jnp
mov
jp
adc
in
repnz
mov
sbb
test
cs
sbb
js
out
loope
sbbl
pop
jns
or
roll
jb
lret
inc
xchg
mov
das
cwtl
jmp
fdivrl
jle
mov
jo
adc
sti
stos
xor
aam
movsb
inc
das
mov
loopne
add
adc
jle
fdivp
inc
pushf
dec
add
repz
mov
dec
clc
sub
jnp
xchg
or
lds
popa
pop
cmp
pop
or
test
and
mov
repnz
pop
and
cwtl
lcall
jl
xor
fs
push
lods
pop
xor
xor
outsb
in
test
popf
pop
js
push
iret
lret
clc
push
test
pop
lock
imull
inc
add
mov
push
mov
add
sbb
xor
push
dec
inc
int3
sbb
test
xlat
daa
push
dec
cmp
mov
xor
pslld
and
in
ds
cmpsl
loopne
je
sbb
hlt
mov
xchg
lret
mov
jle
aas
je
mov
lahf
pop
and
add
mov
fisubl
dec
lret
mov
push
daa
cltd
inc
and
xor
jg
lods
and
nop
repnz
shlb
mov
insl
and
cld
sbb
inc
jge
aaa
mov
sub
inc
pop
lcall
xchg
lea
out
rclb
ljmp
xchg
sub
mov
bound
mov
mov
xlat
sub
mov
std
dec
or
ret
pop
into
loop
push
jge
jbe
push
adc
push
or
and
mov
push
sbb
je
sbb
xor
loop
mov
pop
pushf
lret
hlt
xor
xor
xchg
pop
ja
mov
jge
mov
mov
or
dec
lret
cltd
sbb
push
pop
inc
dec
jg
outsl
pop
push
pop
mov
test
push
enter
jne
pop
mov
out
fisttpl
int3
inc
lret
push
xor
lds
stos
aas
mov
dec
sub
or
add
mov
inc
ret
fcompl
mov
push
iret
fbld
bound
jle
cmpsl
scas
idivb
adc
pop
xchg
mov
inc
add
mov
adc
mov
inc
jno
mov
xchg
and
call
sbb
ja
sub
mov
dec
sbb
add
stos
loopne
orl
cmpl
cmp
adc
lds
out
call
imul
push
icebp
popf
inc
sbb
mov
test
sti
xchg
push
leave
mov
or
test
imul
std
loope
aaa
mov
jae
outsl
lret
fsubr
push
jg
inc
hlt
rolb
in
push
aas
movsb
jne
and
sar
inc
iret
fcomp
adc
pushf
jecxz
jmp
xchg
pop
cmp
pop
sahf
adc
ljmp
and
mov
enter
add
popf
dec
clc
mov
mov
ja
out
inc
in
mulb
dec
cmp
inc
shl
pop
sub
push
mov
add
sbb
push
test
jb
in
int3
jge
lret
mov
les
sbb
sbb
sbb
mov
pop
adcb
push
test
mov
inc
xchg
js
push
sub
cltd
cs
pop
or
pop
mov
or
les
push
cli
outsl
mov
mov
pusha
pop
mov
jb
call
sub
or
mov
shr
pop
sub
jp
and
jle
xlat
jbe
mov
lds
scas
jge
mov
jl
adc
lods
jb
lock
sbb
and
cmc
add
xchg
lcall
mov
jle
or
inc
test
repz
inc
cmp
push
push
adc
jle
outsl
ja
mov
fbstp
or
hlt
mov
push
dec
or
mov
push
inc
lret
sbb
ss
lahf
es
inc
pop
popf
adc
insl
lock
pop
std
jne
lods
sbb
fldl
cmp
adc
in
dec
add
jae
in
mov
loope
cld
pop
xchg
shl
jecxz
or
and
sbb
xchg
xchg
lahf
push
pop
das
mov
push
fisubrl
push
es
cwtl
fisttps
mov
inc
ja
push
cmp
sahf
xchg
sub
or
cmpsl
ja
outsl
pop
mov
jns
inc
dec
mov
jg
mov
ret
add
dec
fisttps
push
adc
js
mov
pop
stos
mov
idivl
inc
pop
fdivs
je
hlt
push
lcall
inc
cmp
mov
inc
add
and
cmp
jmp
pop
cmc
inc
lock
dec
or
ss
in
add
mov
ret
das
push
mov
add
mov
pop
testl
mov
jbe
and
or
cmp
or
hlt
incb
inc
push
push
leave
loope
fadds
pop
std
mov
mov
push
jp
adcb
mov
push
call
inc
mov
sbb
test
mov
cltd
pop
jl
test
xor
mov
sub
mov
add
push
pop
adc
call
adc
pop
cmp
daa
xchg
and
aad
mov
lcall
inc
xchg
enter
ret
shrl
les
inc
mov
sub
or
push
xlat
or
inc
mov
mov
je
dec
cmp
adc
clc
imul
dec
ljmp
out
cmpsl
mov
andb
lret
mov
pop
xor
adc
testb
inc
inc
leave
lea
xchg
mov
cmp
cld
pop
pop
xor
jo
enter
shlb
fdivr
aaa
mov
adc
notb
fs
sbb
flds
cmpb
mov
fwait
xchg
mov
fcmovb
push
mov
lahf
rclb
mov
cmp
sarl
sbb
aaa
cmp
popa
idivl
cltd
fimuls
mov
or
lea
cmp
daa
sarl
xchg
addr16
stos
add
jns
lret
jne
sub
sbbb
rcll
push
jne
in
rcrb
dec
cli
cmc
roll
pop
sbb
push
das
call
dec
in
das
fldenv
push
rcl
shlb
hlt
movsb
out
push
fimull
adc
cs
outsb
adc
xor
stc
outsl
movsb
rclb
pop
mov
pusha
xchg
test
add
dec
arpl
outsb
sbb
pop
mov
inc
cmp
sbb
xor
pop
sbb
push
jl
ss
lds
je
scas
jo
mov
mov
ljmp
mov
mov
int
or
ja
sbb
jnp
xchg
jno
dec
arpl
in
stos
cmpsb
int
cmp
movsl
cltd
inc
repz
aaa
adc
push
cmc
mov
pop
jmp
mov
sahf
xchg
cmp
std
pop
xchg
cli
cmovb
or
insl
pop
jl
cmc
xlat
jl
mov
lea
jmp
shr
addr16
pop
popa
mov
jae
out
or
test
hlt
outsb
fsubs
enter
xchg
adc
dec
lret
mov
sub
repz
inc
jne
or
lea
or
enter
mov
incb
cmp
pushf
insl
int
pop
or
push
sub
mov
sub
cmc
mov
cmp
insl
and
sub
lcall
daa
jae
les
sbb
cmpl
stc
mov
stc
test
incl
scas
clc
out
in
xchg
clc
adc
dec
sbbl
xchg
push
stos
mov
iret
or
push
cmpl
sub
sub
arpl
push
sbb
dec
xchg
insl
fstpl
clc
sbb
jmp
add
outsl
adcl
xchg
or
pop
in
xor
out
sub
sub
sub
enter
loope
pop
mov
divb
cmp
xor
ss
push
lahf
cmp
cmp
add
fsubr
dec
jnp
sub
inc
sub
cmp
xchg
mov
xorl
aad
xor
pop
cmp
sub
lret
filds
adc
mov
leave
sbb
lcall
jo
mov
stc
mov
sub
xchg
sub
ds
push
in
jne
cld
fsincos
dec
inc
daa
repnz
mov
in
js
lea
dec
sbb
xor
push
adc
pop
sbb
push
std
insl
push
mov
ljmp
add
jo
pop
into
push
scas
lock
jg
cmp
cwtl
xchg
xor
mov
out
stos
pop
mov
fstpt
mov
dec
xor
sar
inc
enter
rolb
push
mov
xchg
das
dec
sub
dec
int
hlt
das
pop
cmp
and
mov
mov
sub
sub
xchg
stos
xor
push
sbb
fmull
lcall
fwait
insl
jg
stos
insb
adc
orb
jge
aaa
outsl
movsb
or
jnp
inc
or
jae
push
add
push
popa
dec
dec
add
repz
bound
cmp
mov
loop
and
push
cs
shll
cwtl
clc
push
aaa
sub
mov
xor
divl
xchg
xchg
int
and
jnp
rcll
int
sub
sub
lret
mov
ss
jno
sbb
das
lods
cli
test
adc
das
repz
dec
xlat
jo
or
xor
jbe
fsubs
outsb
xchg
fbstp
ljmp
mov
cmpsb
dec
xor
xchg
xor
pop
push
rcr
lahf
push
pop
movsl
popf
add
out
jmp
sub
lcall
pop
pop
push
js
xchg
lods
jbe
in
add
dec
xlat
mov
push
sub
pop
loope
mov
push
push
aad
les
insb
pop
and
hlt
mov
out
mov
mov
push
sub
fsubr
cld
jo
fistpl
shll
mov
addl
push
xchg
scas
adc
pusha
xchg
sub
xor
in
cmp
adc
scas
das
cmp
jae
ret
pop
sub
dec
xchg
pop
push
push
and
mov
jbe
adc
outsl
adc
jnp
inc
sbb
cld
lock
adc
pop
dec
sub
cmovs
jbe
arpl
out
call
arpl
cmp
addl
push
add
jnp
pusha
pop
test
mov
inc
lock
jecxz
mov
push
stc
push
enter
enter
icebp
test
push
ljmp
scas
jnp
inc
out
pop
aam
push
add
loopne
push
push
sub
repnz
adc
leave
mov
icebp
pop
xchg
push
xchg
cmpsl
jo
std
in
jecxz
fbld
adc
out
xor
mov
rcl
fstpt
test
sbb
mov
mov
pop
mov
or
jne
je
notl
daa
add
or
pop
mov
flds
sbb
push
sub
mov
lods
fwait
mov
insl
dec
mov
adc
arpl
scas
adc
stos
pop
fsubrs
mov
jmp
dec
add
lret
dec
lea
pop
cli
or
insl
fxch
jg
inc
out
outsb
and
sbb
mov
inc
xchg
ret
mov
pop
mov
push
jmp
aad
stos
ret
or
ret
mov
ljmp
rcr
jecxz
stc
out
inc
or
push
aad
out
fwait
js
jbe
jecxz
push
clc
rcll
test
xchg
adc
pop
cmpsl
mov
mov
int
dec
shll
imul
xor
icebp
fidivl
in
lods
shll
cmp
or
outsb
lds
test
or
sbb
addr16
clc
out
gs
cltd
int3
adc
xor
xor
or
andb
sbb
mov
subl
hlt
leave
adc
aaa
inc
scas
xchg
imul
mov
mov
gs
aas
jno
jbe
sub
scas
xor
pushf
jmp
or
inc
mov
in
pop
inc
push
mov
sarl
adc
aas
in
scas
add
pop
lret
outsb
xor
inc
scas
mov
fisubrl
xor
loopne
mov
inc
cmp
sbb
arpl
pop
fwait
jmp
xchg
imul
hlt
addr16
int3
xor
cmpsb
out
xchg
xchg
arpl
bnd
dec
mov
cmp
insb
mov
inc
in
xchg
and
enter
pushf
inc
add
sub
dec
and
lcall
int
xor
lods
lds
jne
and
xchg
sub
mov
ret
out
sbb
xchg
sub
and
pop
cmpl
clc
bound
stc
movl
sub
sarl
daa
leave
xor
and
or
pusha
sti
and
and
lods
test
xchg
dec
jge
aam
sbb
add
loopne
fwait
jmp
mov
ljmp
sub
xchg
and
rcrb
shll
mov
ret
out
jg
mov
xchg
ret
test
pop
sbb
je
iret
dec
mov
xor
loopne
shlb
out
mov
mov
fnclex
daa
inc
add
ja
xchg
mov
mov
adc
add
pop
add
sub
stc
and
xchg
adc
repz
xor
push
dec
in
lcall
and
add
fbld
mov
sub
inc
cmc
mov
fstsw
je
addr16
add
stos
xchg
sbb
mov
sbb
repnz
rcll
stos
push
cltd
test
out
lock
mul
out
bound
fs
scas
xor
lds
repz
imul
cli
jo
int
testl
dec
inc
xchg
ret
ljmp
jmp
in
cwtl
in
leave
xor
mov
mov
inc
pop
mov
xor
loope
test
cmp
rorl
mov
mov
repz
jmp
xchg
rcrb
cmp
mov
adcl
mov
ljmp
cs
orl
adc
xchg
repnz
rolb
stos
lea
xchg
push
fisubs
xchg
movsl
add
adc
ljmp
daa
mov
ret
mov
bound
cmp
cmp
fwait
jge
faddl
out
push
mov
xchg
xchg
add
and
dec
or
int3
or
rorb
les
fldl
pop
test
popa
xor
das
lods
xor
pop
xchg
ja
jnp
cmp
dec
mov
jno
push
inc
mov
cmp
mov
mov
add
inc
fs
sub
fstps
vpackuswb
xchg
pop
mov
sub
lea
scas
cmp
adc
cmc
pop
bound
and
pop
jb
test
lds
mov
dec
add
push
sbb
xchg
repnz
decb
rcll
push
xor
lahf
or
sbbl
clc
pop
sbb
dec
sbbb
mulb
addr16
ja
or
ret
mov
nop
jb
or
js
jnp
adc
sbb
inc
mov
in
cmp
mov
push
jbe
in
inc
mov
or
ljmp
xor
je
xchg
jl
lahf
inc
lcall
lret
jle
mov
movsl
cli
pop
daa
sub
or
adc
adcb
ret
subl
mov
call
cld
movsl
mov
xor
in
adc
lahf
xor
cs
adc
dec
fnstcw
inc
enter
jge
js
clc
mov
sti
adc
cvttps2pi
shrb
cltd
jns
push
dec
mov
or
adc
ror
xchg
rclb
es
mov
dec
mov
ss
clc
dec
cmc
add
rorb
inc
repnz
call
sub
jae
insb
push
cmpsl
lret
mov
pop
mov
repnz
or
inc
or
mov
mov
add
pop
dec
jno
add
stos
hlt
shrb
popa
xchg
dec
xchg
and
shrl
pop
pop
repnz
ds
cld
push
les
mov
jge
cld
lret
pop
inc
rclb
sub
je
test
sbb
int3
push
and
and
movsb
scas
stos
sub
fldenv
out
out
int
mov
test
das
in
mov
testl
inc
xor
arpl
shr
jno
sbb
fwait
pop
fcomi
cs
xor
push
outsl
pop
stc
ret
lds
jae
iret
dec
lds
iret
nop
mov
jmp
hlt
pop
sbb
mov
shl
je
stc
dec
mov
cmp
ja
add
fs
ss
jnp
fmuls
xor
xchg
scas
xorl
jecxz
and
les
push
add
xor
scas
sub
sar
cli
cmp
repnz
pop
mov
xor
hlt
adc
and
mov
in
cmpsb
je
cmc
or
add
add
mov
xchg
in
repz
mov
jo
push
imul
mov
das
out
dec
shlb
pop
rorb
gs
push
rorb
sbbb
pop
pop
cmp
dec
bnd
sbb
adc
pop
add
nop
stc
mov
ret
lahf
aaa
pop
arpl
or
sub
pop
mov
dec
sahf
add
cmpsl
pop
or
or
je
sbb
xor
and
lock
mov
jge
out
or
xor
mov
out
pop
pop
and
lcall
ret
nop
mov
repz
mov
dec
test
push
cmpsl
lock
xchg
imul
dec
jno
push
mov
ja
mov
jmp
dec
mov
mov
test
js
jle
mov
push
ljmp
cld
test
mov
xor
rorl
inc
mov
mov
mov
or
push
cld
sbb
inc
fwait
lcall
lods
sahf
mov
jmp
pop
xchg
mov
pop
cmp
cs
lret
pop
lods
popf
pop
jge
inc
pop
fmull
and
mov
addr16
xchg
xor
xchg
adc
lods
ja
cltd
nop
cmp
ficoms
lret
mov
jmp
ja
data16
mov
ss
cmp
ljmp
in
sbb
je
add
push
ror
jp
ljmp
enter
mov
ljmp
clc
in
push
call
lcall
fwait
stc
mov
aam
push
shlb
shl
lahf
rcr
push
inc
mov
les
push
push
cmpsb
rcrb
xor
test
dec
ret
test
adc
les
inc
loop
ja
les
push
test
cmpsb
lahf
lock
cmp
cmc
adc
enter
or
pop
xchg
repnz
stos
icebp
nop
jb
pop
in
cmp
cmp
fdivs
into
imul
inc
das
movq
mov
xchg
mov
dec
movsl
jae
das
dec
insb
cwtl
cmp
cmpl
data16
rol
clc
insb
jl
mov
push
aad
sbb
sbb
pop
cmp
pop
xor
jb
or
push
cmpsl
inc
or
cld
les
gs
sub
fcmovb
mov
into
cmp
pop
mov
in
jns
mov
adcb
sarl
in
dec
int3
test
adc
mov
mov
ficoml
dec
aas
push
jne
enter
mov
add
cmp
mov
jg
dec
cmc
roll
mov
cmp
shl
push
cmp
int3
or
sbb
cli
ficomps
cmp
in
mov
das
leave
lods
mov
movsb
call
nop
movb
clc
rep
enter
mov
cld
jle
imul
jg
cld
sahf
mov
lahf
mov
mov
add
jbe
sbb
mov
stc
lods
adc
xchg
fsubrl
xchg
jae
xchg
out
mov
dec
cltd
mov
sub
push
leave
cmc
test
movsl
in
outsb
cs
adc
mov
dec
jae
arpl
push
add
movsl
dec
xchg
js
test
adc
mov
sub
or
mov
arpl
scas
aad
push
jp
pop
adc
and
and
inc
into
adc
and
push
and
pop
and
les
loop
pop
sbb
push
add
mov
mov
in
lds
or
nop
orb
aad
test
jmp
arpl
sub
into
push
fwait
mov
pop
mov
out
or
in
test
rcrl
xchg
xor
inc
insl
push
cmp
pop
jmp
fstpl
jp
cli
out
jb
test
popa
inc
negl
xchg
mov
mov
inc
shll
dec
lcall
sbb
js
scas
enter
inc
das
std
insl
movsl
xor
mov
sub
movsb
aad
xchg
loop
inc
adc
popf
in
push
shrb
push
cmpsb
jae
scas
mov
jno
movsl
jne
lods
loope
dec
mov
xor
adc
fs
std
scas
adc
ficompl
mov
push
pop
leave
dec
ds
das
mov
adc
xchg
es
out
call
lods
ror
mov
mov
cmp
int
into
pop
cld
sbb
jno
fisttps
imul
testb
fistps
and
addl
dec
call
sub
push
nop
ja
push
dec
sub
dec
xchg
inc
xlat
xor
inc
lods
inc
sub
jne
scas
subb
jp
pop
push
pop
push
xchg
inc
loope
fcompl
and
mov
iret
mov
aam
mov
test
add
pop
cmpsb
mov
bound
pop
cmc
incb
mov
lock
adc
xchg
dec
into
or
jecxz
pop
inc
or
pop
pop
inc
jnp
push
pop
push
adc
out
lret
scas
mov
sbb
in
int
jle
rolb
or
pop
sahf
outsl
xchg
loope
lret
or
sub
xor
adc
scas
insb
dec
repz
sub
pop
lret
loop
nop
aas
jle
cmp
adcl
mov
mov
aaa
push
sahf
or
addr16
lret
push
xchg
repnz
sbb
jg
mov
mov
std
or
hlt
stc
mov
aas
add
pushl
fimuls
add
mov
add
and
test
loop
xor
jl
push
mov
push
xchg
mov
jg
inc
add
outsb
lods
add
jg
add
mov
xchg
pushf
loop
call
cmp
cmp
mov
imul
sbb
hlt
cmp
cltd
aam
dec
mov
subb
inc
rcl
inc
xchg
enter
daa
xchg
bound
in
xchg
mov
test
xchg
xchg
jns
call
shll
nop
or
int3
loop
mov
adc
into
and
adc
mov
cs
mov
lods
addr16
aas
call
cmp
cwtl
sub
sbb
mov
dec
pop
and
lock
mov
mov
movsb
xor
iret
dec
mov
ret
iret
adc
xor
adc
std
aad
ret
fwait
xchg
cmp
mov
push
andl
xchg
xor
jg
out
adc
dec
les
arpl
xor
and
lcall
out
jge
xor
scas
fistl
les
cwtl
pop
and
daa
xchg
xchg
jbe
adc
inc
rolb
jmp
mov
push
mov
xchg
mov
daa
fistl
and
adc
push
inc
rorb
cmp
ljmp
xor
xchg
lret
push
pop
sub
adc
sbb
cmp
pop
xor
mov
call
movsb
imul
aas
iret
iret
add
shlb
fbstp
cli
jb
dec
push
pop
lcall
faddl
fdiv
sbb
sbb
sbb
test
jge
xchg
jb
scas
movsl
aam
test
xor
dec
les
rorl
jmp
push
fldcw
pop
cld
fdivrs
and
dec
incl
out
imul
mov
in
rorb
sub
adc
adc
shl
addl
sub
inc
fldenv
mov
push
popf
int
sub
mov
and
cld
cwtl
adc
roll
in
sahf
sarl
into
dec
in
or
outsb
mov
jmp
push
test
mov
sbb
fmull
jmp
out
mov
scas
sti
pop
adc
mov
lahf
mov
mov
outsl
and
mov
insb
fwait
sti
cmp
add
stos
cli
in
mov
xchg
dec
jmp
popf
mov
xchg
arpl
cmp
outsb
stos
add
stos
shrl
xor
int
pop
dec
push
cltd
scas
and
pushw
jl
xor
les
pop
std
mov
out
leave
fsub
insl
cli
filds
mov
adc
jmp
jp
cmp
int
shrl
mov
xchg
adc
imul
sahf
outsl
add
aaa
addr16
inc
ds
rcl
stos
and
mov
mov
inc
pusha
add
inc
fstpl
fdivrs
and
sbb
rclb
stos
sbb
fwait
or
aam
jle
mov
cli
push
and
nop
int3
add
or
and
fcoms
mov
imul
jg
lods
fisubl
ds
stc
jge
clc
std
xchg
jnp
clc
cmp
sti
dec
imul
repz
xchg
rcl
sahf
cmpsl
push
push
jg
pop
jmp
mov
add
insl
cmp
mov
and
cmp
add
bsr
in
dec
mov
pushf
add
sub
pop
or
and
adc
jmp
xchg
stos
push
mov
pop
add
imul
orb
andl
fcmovb
xchg
and
fstl
sarb
sbb
stos
sbb
das
pop
test
and
insb
xchg
mov
fdiv
jne
mov
jno
aaa
cmc
jge
jno
or
lea
test
or
mov
cmc
aas
push
jg
add
into
xor
fmulp
sbb
data16
lret
not
popf
cmp
lock
orl
lds
rcll
insl
mov
clc
mov
jbe
jne
dec
in
jno
mov
and
in
mov
jp
lret
add
push
rcrl
xchg
icebp
mov
jo
mov
and
mov
fiaddl
push
pop
xlat
stos
push
push
adc
inc
add
lds
movsb
dec
pop
push
test
fsubrl
mov
cwtl
mov
dec
or
push
pop
pop
cmp
enter
cld
xchg
insb
jbe
push
pop
cmp
subb
add
sub
mov
mov
and
mov
and
dec
mov
lahf
jns
loope
test
jae
push
sbb
cmpsb
fisubs
fstl
push
insl
test
push
lea
or
in
ret
pop
jge
popf
int3
jno
jmp
sbb
imull
xchg
xchg
fdivrs
push
xchg
int
mov
ret
pop
inc
mov
in
loop
xchg
pop
or
mov
imul
je
push
cmp
pop
fdivl
loopne
sub
inc
nop
jl
andb
mov
outsb
test
gs
mov
inc
and
mov
in
and
inc
push
mov
xorb
aam
sbb
dec
mov
das
jae
adc
add
sbb
dec
cmp
cmp
mov
adc
sub
jb
out
jg
call
xchg
push
mov
and
fbstp
addl
pushf
sbb
ret
ffreep
pop
xor
insb
stos
stos
mov
iret
outsb
mov
in
xor
fmulp
inc
out
lods
mov
outsb
xor
sub
and
or
jmp
jb
inc
mov
iret
pop
fs
sbb
mov
movsb
xor
push
jp
xor
jp
dec
dec
xor
popf
je
cli
mov
mov
adc
inc
dec
mov
leave
test
dec
fsub
jae
inc
icebp
in
in
mov
adc
popf
push
adc
mov
push
cmpb
mov
lret
push
mov
fwait
jae
mov
test
fidivrl
push
add
sub
xor
rorb
es
cmp
add
jo
adc
out
loop
cwtl
fs
lret
inc
dec
inc
push
inc
lods
inc
jbe
cmp
xchg
test
inc
mov
aaa
in
or
popf
idivb
lock
xor
push
dec
leave
push
cmp
pusha
rcrb
mov
mov
push
lret
pushf
cld
cmp
lock
jo
mov
imul
inc
inc
scas
ja
out
lods
adc
adc
std
mov
cmp
std
imul
push
mov
ja
enter
dec
sub
test
out
dec
lret
jmp
push
iret
push
mov
inc
xlat
in
jmp
test
cmp
push
cmpsb
lods
mov
lea
rcl
xchg
mov
subl
mov
dec
outsb
jge
sub
shrl
movsl
push
stos
add
mov
adc
inc
dec
adc
popf
bound
ja
push
loope
add
test
lret
cli
sbb
popa
push
mov
dec
mov
pop
sub
enter
sub
fisubrl
pop
mov
imul
mov
int3
jecxz
test
add
outsb
mov
push
xchg
test
pop
adc
sbb
fdivrp
ret
or
cs
cmp
xor
push
mov
enter
inc
inc
or
fisubrl
lcall
loopne
jmp
addl
fldcw
repz
push
addr16
sbb
or
movsb
nop
ret
divl
push
pop
inc
insb
and
xchg
push
jmp
jg
stos
push
and
outsl
sti
ds
jle
loope
in
insb
imul
adc
jne
aas
dec
dec
and
jo
sti
dec
pop
pop
fcoml
pop
or
adc
adc
adc
cmp
pop
xor
xchg
pop
dec
or
xchg
insl
jbe
clc
hlt
sbb
loope
outsb
pop
mov
cld
jmp
add
gs
in
fidivs
cs
push
mov
aas
mov
jno
inc
js
lret
push
and
pop
mov
lds
test
mov
push
xchg
into
mov
mov
stos
scas
test
push
mov
mov
test
sbb
aaa
pop
pushf
cs
in
add
outsl
dec
and
scas
xor
cmp
sarl
pop
stc
insl
push
or
lcall
aaa
fisubs
lods
fisubrl
bound
jb
in
and
xor
dec
cmpsb
jno
movsl
sbb
sbb
imul
test
aad
lods
jp
pop
loope
inc
in
pop
enter
repnz
ljmp
pop
cmpsl
xor
jmp
push
push
jmp
xlat
cwtl
lcall
dec
orl
stc
pop
sub
dec
mov
push
add
xor
cmpsb
and
mov
push
add
aaa
xchg
xor
sub
mov
sahf
xchg
mov
retw
xchg
inc
push
fldt
xchg
inc
mov
or
fsubs
ss
xchg
cmp
push
inc
imul
imul
inc
cmpsl
sbb
cmp
scas
pop
lock
js
xchg
adc
mov
dec
mov
and
dec
lods
rcrb
clc
add
hlt
pop
sbb
aas
rorb
jle
daa
sbb
jmp
pop
jle
jne
daa
into
xlat
mov
incl
pop
mov
shll
cld
aad
das
jns
popf
int
loopne
jno
mov
sti
cmc
pop
xlat
nop
add
xchg
repz
and
testb
insb
stc
add
aas
orl
in
add
inc
vmovq
inc
lret
inc
or
cld
mov
subb
pop
xchg
mov
cwtl
adc
movsb
jp
jne
mov
subl
lret
mov
pop
insl
ret
pop
daa
mov
stos
dec
subb
cld
or
add
pop
xor
cli
mov
jne
or
lcall
cs
cwtl
or
lods
pop
sbb
lcall
pop
lea
and
mov
mov
cltd
sbbl
addl
das
pushf
inc
nop
sub
in
sub
inc
rcrb
push
ret
mul
movsl
rsm
push
mov
add
adcl
dec
dec
scas
add
or
cltd
or
enter
jne
ret
loope
jns
stos
lret
sub
pop
je
jmp
ljmp
jmp
nop
mov
xor
push
push
addl
lret
pop
mov
inc
lea
push
popa
add
aam
dec
xchg
dec
ljmp
inc
push
out
and
add
jmp
mov
test
test
scas
mov
leave
enter
cmpsb
mov
lds
inc
mov
cmp
mov
lcall
fdivs
loop
inc
aad
stc
push
lea
add
clc
ficoml
outsl
jne
jae
sbb
pop
push
sbb
inc
pop
insl
xchg
or
out
shr
cli
in
sbb
or
jb
mov
xchg
xchg
pop
sbb
mov
sbb
aas
and
mov
aas
jmp
lcall
cmp
mov
or
aad
dec
mov
mov
pop
push
add
mov
out
sti
fimuls
mov
pusha
dec
arpl
xchg
add
add
jne
inc
int3
mov
leave
add
orb
sbb
mov
in
out
addl
das
xor
je
ds
sbb
inc
out
xchg
cmp
ret
in
lock
sbb
sub
inc
std
push
cmc
imul
xor
pop
rcrl
roll
xor
and
les
in
pop
nop
imul
cmp
push
aad
scas
or
sub
push
test
cmp
repz
je
xor
push
push
icebp
ret
push
xor
movsb
filds
lods
mov
mov
in
jl
loope
and
out
pusha
mov
daa
cmp
popa
out
jle
pop
sub
add
dec
jo
addl
mov
data16
sub
push
ret
clc
fistpl
inc
data16
test
dec
call
push
scas
bndldx
dec
push
arpl
es
data16
mov
sub
add
xlat
mov
pop
icebp
pop
jo
pop
sarb
arpl
and
insb
aas
lcall
and
pop
cltd
imul
ret
jno
ds
dec
adc
stos
icebp
cmp
jecxz
sbb
push
pop
jle
mov
fistpl
pop
sbb
xchg
ret
mov
mov
out
cmp
sahf
cmp
and
jle
or
call
fistl
hlt
cli
push
xor
adc
pop
ror
adc
pop
repnz
stos
popa
not
mov
bound
xchg
fcoml
jg
mov
jo
fistl
insl
fnstenv
add
xor
cmp
je
ds
dec
fidivrl
sbb
mov
outsl
pop
dec
ret
cmp
jecxz
leave
into
xchg
in
dec
loopne
mov
xor
sbb
rcll
add
dec
stos
mov
das
xchg
les
ficoml
stos
jp
bound
pop
mov
xchg
scas
lods
mov
jle
cltd
divl
enter
les
iret
xlat
jle
mov
in
movl
sbb
jnp
arpl
bnd
sub
sbb
sub
xchg
int3
into
stos
repz
lret
repz
lds
mov
sbb
repnz
pop
pop
mov
push
xchg
out
out
int
pop
iret
jne
mov
lret
fcoms
mov
arpl
imul
cwtl
add
adc
test
jnp
inc
mov
fwait
or
mov
imul
and
ss
mov
addb
shr
test
rcrb
or
or
mov
inc
or
adc
cmp
nop
add
ljmp
jl
repnz
scas
push
aad
nopl
mov
jbe
outsb
dec
mov
movsl
push
mov
adc
jg
sub
int
pop
sarl
cmp
into
or
inc
xchg
push
testl
bound
sahf
imul
push
fs
and
fs
cmp
jecxz
push
ja
fldl
insb
lret
loop
lea
aam
test
xor
mov
mov
xor
cmpsb
xchg
cmp
icebp
fldenv
inc
lret
add
mov
lods
pop
das
lea
cmpsb
imul
icebp
test
in
ret
adc
je
cltd
or
and
pop
test
xor
add
adc
mov
add
insb
mov
dec
push
mov
mov
repz
int3
and
fistpll
or
sbb
mov
or
std
lods
rcrl
jo
sarb
cmpsl
xchg
das
cmp
inc
pushf
add
out
testb
sbb
mov
inc
pop
call
sbb
enter
adc
inc
adc
add
testl
jl
or
les
sub
cmp
xchg
rcrl
in
sbb
jge
or
lods
lcall
xor
cmp
jo
jge
into
xor
dec
out
cs
negb
xchg
jp
xchg
les
arpl
roll
outsb
in
jmp
sub
add
sub
in
or
sahf
add
mov
out
cmp
das
add
jp
addr16
sbb
rol
sbb
lret
rcr
mov
into
adc
pop
xchg
insb
dec
cmp
adc
negl
loopne
and
outsb
shll
fists
adc
ja
push
cmpsb
pop
add
xchg
addr16
stos
push
shrb
shlb
stos
jbe
xchg
mov
cmp
xor
mov
fists
mov
pop
or
inc
add
test
and
inc
stc
popf
mov
in
mov
movsl
mov
adc
data16
movsl
push
and
arpl
mov
pop
sbb
push
sub
pop
mov
pop
shrb
pop
pop
aam
lods
cmc
repnz
push
sub
fisttps
in
sahf
push
rorl
sub
jne
aas
push
negl
mov
mov
mov
sarl
jmp
decb
cmpsl
mov
or
scas
mov
stc
or
jo
pop
adc
aas
fcmove
stos
mov
fcmovnb
out
andl
add
xchg
dec
dec
outsl
and
out
sub
pusha
jbe
pop
rcll
or
aam
adc
dec
test
jns
fiadds
pop
cs
nop
xor
mov
xor
jecxz
enter
iret
stc
imul
push
aas
pop
outsb
sarl
test
sbb
inc
rclb
mov
sbb
aam
xor
sbb
les
sub
lret
ja
sub
arpl
enter
and
ds
xor
insl
sbb
jae
jg
jne
movsb
add
push
inc
sbb
lcall
add
mov
adc
sarb
lcall
loope
lea
out
rorl
iret
sub
shl
out
test
mov
hlt
and
test
adc
mov
cltd
lea
fwait
cmpsb
mov
pop
or
rcrl
test
push
adc
mov
rclb
enter
xor
jecxz
dec
cltd
out
push
or
sub
and
xchg
adc
gs
test
dec
lret
fbstp
js
mov
stc
push
dec
adc
xor
decb
adc
pop
aam
cmp
es
xor
out
xorb
xchg
pop
pop
outsl
sahf
lds
adc
mov
add
aaa
test
push
iret
or
mov
orb
adc
sub
inc
loope
dec
aad
cwtl
test
jge
mov
xchg
andl
mov
rclb
loopne
pushf
out
sub
hlt
xchg
daa
or
or
and
das
mov
cltd
xchg
and
lock
cmp
mov
xchg
add
aaa
adc
jp
jo
inc
and
jl
stos
pop
sbb
or
int
adc
push
sbb
loopne
ds
cs
sub
testb
xor
sbb
or
fisubl
popf
js
add
pop
leave
stos
mov
jnp
and
das
lcall
clc
adc
mov
xor
fisubl
shl
mov
xchg
sbb
dec
xchg
mov
mov
add
jecxz
fldenv
mov
jns
dec
push
sarb
inc
imul
hlt
popa
lea
cli
fwait
mov
pusha
mov
iret
outsl
xchg
faddl
mov
sub
push
ret
mov
scas
or
dec
sarl
mov
and
test
add
xchg
xor
decb
add
ret
pop
mov
dec
inc
cmp
fistpl
enter
dec
ret
jns
inc
daa
jmp
adc
loope
popa
jb
cmpsl
fdivr
fsts
cmp
sbb
js
cmpsb
jp
add
scas
stc
push
insb
xchg
lret
bound
filds
push
xchg
cmp
shl
cmp
insl
loop
stc
imul
cli
test
movsl
push
lcall
mov
mov
js
in
loopne
push
pop
imul
bound
je
lahf
int3
nop
jle
movsb
jbe
sbb
xchg
sub
and
jg
sbb
imul
fnsave
insl
mov
jno
or
jae
mov
test
mov
rcrb
scas
mov
or
dec
push
jecxz
and
lea
adcl
insb
movsl
xor
add
push
mov
repz
mov
je
cld
shrb
aam
repz
lds
jbe
sbb
mov
adc
adc
aas
mov
imul
into
lret
loopne
dec
mov
mulps
adc
lret
add
add
shll
pop
jmp
jnp
hlt
cmp
cmpl
add
xor
xchg
shll
dec
loope
repz
shr
mov
pop
cmp
aad
and
xchg
jecxz
fmul
icebp
adc
mull
ret
push
cli
pushf
rolb
sbb
inc
popa
fsubl
jmp
jmp
adc
ljmp
fimuls
xchg
dec
lds
mov
loopne
inc
xchg
clc
divl
insb
aas
cli
fidivs
movsb
mov
jecxz
jnp
add
in
rcr
xchg
xor
xor
and
pop
cltd
adc
fwait
clc
aaa
cld
pop
lahf
orb
or
out
mov
arpl
jecxz
push
pop
cmc
hlt
and
fldenv
mov
jbe
push
cmp
sbb
cmp
es
cmp
cmpsl
lea
or
or
xchg
or
lds
jb
cmp
sarb
pop
cmp
fs
movsl
std
adc
sbb
popa
lcall
cltd
out
rcrl
aas
into
push
or
shlb
daa
push
and
inc
pop
jne
xor
mov
mov
fcmovne
daa
dec
loopne
mov
mov
test
fwait
cmp
push
dec
icebp
add
dec
gs
xor
stos
popa
mov
dec
xchg
in
push
lret
divb
xchg
jecxz
cli
std
push
add
adc
lods
mov
in
sbb
inc
sub
mov
sub
fsubr
cmp
dec
imull
fs
jle
dec
jns
sbb
popa
sbb
in
popf
xchg
rolb
xlat
add
leave
fcmovne
nop
data16
mov
lea
and
or
jno
or
ficoms
sbb
adc
pop
sbb
push
dec
mov
lcall
and
inc
push
fistl
cs
jae
arpl
enter
sahf
pop
fimuls
and
add
frstor
imul
stos
xor
data16
jo
mov
jns
rolb
sbb
aas
out
out
xchg
pushf
add
mov
sti
or
roll
rorb
std
pop
jl
xchg
or
push
shll
call
jae
push
dec
add
xchg
sub
xlat
mov
dec
inc
divb
xor
cmp
mov
jbe
dec
rclb
stos
pop
jmp
xchg
xor
pushf
push
jecxz
rolb
outsb
test
fwait
sarl
sbb
push
test
lods
pusha
outsb
pusha
inc
cld
movsb
jmp
xchg
pop
stc
add
pop
fnstcw
add
call
xchg
pop
jne
out
inc
add
push
fisubrl
mov
rcr
mov
mov
inc
shlb
inc
or
sub
cmp
sub
push
test
xchg
int
insb
in
add
xor
push
add
cmc
push
jl
repnz
cmpsb
mov
fcomps
adc
movsl
loopne
sub
je
mov
hlt
add
push
repnz
jl
lcall
mov
test
mov
and
jp
jbe
push
paddsw
or
shll
push
mov
fs
xor
xor
dec
adc
dec
inc
decb
xor
mov
push
cwtl
mov
cmpsb
mov
scas
popf
lock
out
adc
fadd
mov
lahf
fcmovnu
test
mov
dec
lcall
push
stos
push
fisubrs
mov
fistpll
xor
jns
fnstenv
in
dec
jmp
inc
jae
sahf
lret
test
loope
cwtl
leave
test
mov
mov
add
jl
or
lcall
inc
std
xchg
sarl
jg
jmp
jl
sbb
clc
in
mov
cwtl
fstpl
add
je
fcom
mov
mov
out
not
mov
add
inc
cs
push
add
adc
insb
sub
rcll
gs
loope
and
cmp
mov
sarl
lret
cwtl
jbe
jbe
mov
in
lahf
aaa
cmp
adc
push
mov
lods
cld
mov
fwait
adc
lods
and
daa
out
xor
fcmovnu
inc
lahf
inc
sub
push
aaa
mov
dec
jb
cli
test
inc
orb
lahf
fs
adc
out
sub
and
pop
into
adc
lods
sbb
xlat
push
scas
in
cmp
and
inc
in
lods
add
xor
pop
xor
dec
sarb
and
sub
loopne
mov
sub
sub
inc
add
cmp
pop
inc
inc
sbb
fs
cmp
push
mov
jle
je
jno
mov
cmc
iret
adcl
iret
xor
inc
out
dec
xchg
movsb
in
mov
dec
lea
fsubp
paddd
pop
add
sbb
fdivr
lods
jo
leave
dec
dec
pop
jae
cld
and
ret
out
add
test
out
push
jp
fmull
cmp
out
and
push
ret
pop
jbe
es
pop
xchg
push
or
daa
or
or
popf
idivb
xchg
cmp
xchg
push
fs
shrb
add
and
add
loop
in
test
push
inc
popa
sahf
daa
mov
adcb
jmp
fs
shl
fisubrl
into
leave
add
jl
sbbb
inc
fmulp
jmp
shrl
dec
jae
cltd
dec
test
aas
leave
sbb
dec
shl
jns
cltd
inc
sbb
add
es
xchg
xchg
shll
frstor
xchg
push
cmp
and
ffreep
arpl
pop
cmp
mov
push
scas
or
adc
aaa
insl
out
sti
inc
fistpl
lret
pushf
jl
aas
mov
pop
mov
clc
inc
pusha
std
test
rolb
dec
jns
icebp
add
shrb
adc
jno
sub
aad
or
and
popa
or
push
or
orl
dec
and
add
sbb
fnstsw
clc
mov
dec
lahf
loopne
sbb
fcmove
sbb
aaa
shlb
imul
fdivrs
ljmp
push
hlt
mov
enter
inc
lods
xor
int3
adc
sbb
and
test
mov
lahf
sbb
push
js
cmp
ror
iret
pop
xlat
sbb
int3
in
fsubrs
jmp
mov
pop
loop
add
dec
std
ds
sahf
testb
add
xlat
sub
xor
mov
lret
cmp
adc
lcall
divb
push
jae
ret
js
mov
mov
dec
shrl
xchg
hlt
out
mov
lods
push
xor
fcoml
lds
sti
in
inc
sbb
addr16
out
daa
push
jbe
and
dec
xor
push
inc
out
sub
pop
xor
xorl
mov
fistpll
rcll
adc
or
ret
stc
gs
ret
and
mov
and
pop
adc
stos
jae
stc
mov
lcall
nop
cmc
cld
xchg
ljmp
dec
aam
std
int3
mov
pop
aad
mov
loopne
add
cmc
inc
sbb
shll
jo
clc
fdivrl
clc
addr16
xor
iret
bound
sbbl
push
xchg
fld
ljmp
cmp
xlat
es
add
jns
mov
daa
or
outsb
in
pop
push
inc
out
cmp
and
sub
insl
mov
cmc
jl
testb
cmpsl
or
jecxz
mov
lcall
pushl
and
push
mov
notl
dec
xlat
shrb
stc
jmp
dec
xchg
cmp
orl
out
jge
movsb
mov
iret
xor
rcl
xchg
xchg
push
enter
cwtl
push
mov
movb
cmp
sbb
popf
out
sti
ret
ret
pop
std
mov
push
aad
mov
pop
ret
hlt
adc
sbb
std
aaa
cmp
adc
mov
jecxz
pop
cli
mov
mov
js
inc
cmp
mov
outsl
cmp
inc
jmp
es
mov
xor
icebp
cmc
mov
cmpl
jle
xchg
flds
xor
push
in
leave
ljmp
cmpb
pop
in
aas
jns
sahf
sub
mov
imul
add
jge
mov
mov
notl
sbb
movsl
test
jno
ret
push
out
mov
or
cmp
xchg
jne
fs
mov
insl
inc
sub
jb
ds
leave
adc
add
dec
cmp
lahf
fwait
sti
mov
or
xchg
sub
pop
adc
stos
xchg
add
test
lcall
in
jmp
sub
xlat
cmpsb
fs
mov
mov
mov
or
into
or
sub
xor
iret
and
cmpsb
cli
mov
cwtl
xchg
push
pop
lahf
icebp
scas
cmp
jne
mov
mov
mov
pop
mov
loop
pop
call
out
leave
incb
pop
fisubrs
fiaddl
mov
pop
test
rolb
mov
pushl
jne
cmp
leave
pop
repz
dec
pop
in
inc
lret
mov
lcall
jno
and
das
nop
fidivl
cmc
push
add
lret
aas
leave
das
or
fstl
or
leave
jae
push
roll
and
out
nop
pop
fwait
scas
sbb
cmp
and
mov
inc
xlat
data16
cli
xlat
pop
mov
vpextrw
lds
mov
pop
or
cli
pop
lcall
fisttps
addr16
scas
data16
cld
adc
sbb
test
sbb
xor
call
xchg
pop
push
in
mov
or
push
mov
stc
dec
aam
jmp
in
dec
jp
inc
fcomip
je
ja
adc
ljmp
inc
or
je
loope
sbbb
gs
mov
js
lret
xor
lret
sbb
sbb
xchg
cmc
pop
push
movsb
subl
inc
movsb
iret
sbbl
adc
jns
ret
decl
jnp
xor
mov
add
and
sub
stc
out
cmp
mov
ret
cmc
ret
dec
sbb
mov
orb
es
push
js
pop
sarl
cmp
mov
les
jnp
cmp
push
dec
inc
movsb
cmpl
and
rol
popf
andl
std
sbb
mov
and
push
aas
cltd
nop
je,pn
outsl
or
shrb
pop
aaa
subb
and
cmp
lretw
iret
insb
jno
stc
jmp
lret
mov
sbb
das
testl
and
cltd
jns
mov
into
mov
repnz
adc
rcll
clc
pop
sarb
mov
fnsave
ljmp
sub
insb
jb
xchg
inc
push
mov
jno
xor
test
sub
inc
jns
and
jge
in
inc
in
lahf
in
sub
adc
loop
jecxz
lret
mov
mov
lods
mov
in
xor
pop
lcall
adc
sbb
pop
enter
dec
pop
and
mov
cli
push
mov
out
fucomi
inc
or
add
xchg
pop
clc
jle
inc
add
lahf
xchg
mov
lahf
out
ffree
and
xor
aaa
je
xchg
adc
sbb
or
out
dec
test
shl
mov
out
ret
add
pop
and
xchg
mov
les
mov
jp
fldt
fcoms
mov
mov
ret
mov
mov
rcl
mov
negb
inc
add
imul
lods
lret
fisubs
lahf
stc
and
lods
adc
daa
dec
ret
mov
cmp
jle
mov
xchg
mov
or
add
lods
mov
sbb
in
lcall
divss
jno
out
adc
aam
inc
dec
pop
add
cmp
ljmp
movsl
mov
jecxz
loope
into
in
outsl
jg
jns
dec
movsb
xchg
and
pop
and
xor
sub
mov
push
mov
insl
scas
call
push
and
jne
aaa
xlat
add
fbld
cwtl
insb
jg
inc
idiv
pusha
and
rorb
fadds
push
je
insl
sahf
mov
mov
adc
xchg
jmp
pop
ds
lcall
and
or
fimull
sub
xchg
mull
push
std
int3
mov
aad
negl
xchg
leave
ret
mov
adc
dec
mov
sbb
or
push
mov
inc
subl
add
loope
aas
xor
mov
gs
xorl
int
sub
xchg
scas
js
in
movb
je
inc
sub
jmp
call
xchg
aad
call
inc
clc
dec
fcom
mov
in
fadd
push
test
add
hlt
sti
pop
shll
dec
popf
cld
cmp
dec
fstp
adc
pop
xchg
jecxz
les
ret
jle
jp
adc
dec
stos
inc
mov
xlat
pop
imul
dec
mov
mov
icebp
and
sub
or
mov
add
adc
sub
push
scas
dec
subl
sub
adc
xlat
or
pop
fildll
or
test
orl
mov
mov
loope
adc
lret
repz
enter
test
je
ss
or
and
push
inc
xor
jecxz
push
sarl
lods
mov
int3
mov
test
or
ja
insl
ja
cmp
and
mov
adc
inc
sbb
imul
rolb
adc
lret
enter
pop
les
addb
pop
scas
mov
cmc
imul
outsb
rclb
js
fs
jmp
ss
shll
inc
jne
shll
test
mov
inc
adc
cltd
into
repz
pusha
and
cmp
sbb
jne
daa
push
push
iret
leave
sub
icebp
punpckhwd
test
lahf
fstps
inc
push
xchg
xor
sarl
cltd
xchg
lcall
cmpsl
popf
dec
test
push
dec
mov
fwait
push
subb
faddl
lea
fldt
add
in
pop
xlat
adc
cmp
insl
push
pop
bound
cmpsb
ret
xchg
aaa
cli
pop
sbb
push
cmp
int
addb
data16
cs
xchg
rcrb
sub
out
stos
jl
les
sbb
nop
xor
arpl
insb
out
xchg
cmpsl
adc
icebp
and
mov
jg
sub
fistps
paddw
or
rcrl
fwait
mov
mov
sbb
mov
lcall
pop
sarb
and
inc
es
mov
divb
xchg
stos
mov
insb
or
pusha
cmpsl
mov
or
ljmp
xlat
lcall
cmpsb
or
aam
pop
mov
and
pop
sub
ret
pop
xchg
adc
rcl
shlb
jecxz
dec
je
sbb
sub
insl
xchg
pop
lahf
mov
mov
aam
rol
int3
in
jbe
dec
jae
inc
insl
fcomps
lock
rclb
shr
fdivrp
imul
xchg
shl
ret
fbstp
fbld
cmp
mov
fildll
fcomip
in
jmp
jnp
sub
fwait
aad
pusha
adc
jbe
adc
stos
lret
out
add
icebp
mov
movsl
inc
lahf
mov
addr16
push
or
jnp
cmpsl
lds
sbb
push
adc
ss
pop
cmc
mov
dec
jge
push
js
mov
loop
fsubl
push
sbb
out
jns
xor
jo
pop
mov
inc
mov
leave
inc
pusha
sub
ss
filds
pop
enter
and
and
imul
lahf
add
aas
xor
cmp
jns
lds
outsl
jecxz
call
and
add
inc
rolb
xor
ret
cmp
outsl
push
mov
pop
into
mov
cmp
push
inc
mov
mov
xchg
in
pop
add
aad
rcll
outsl
out
enter
movsb
std
dec
lock
or
in
loop
pop
jg
cmp
shll
jmp
mov
mov
lea
sbb
enter
loope
lods
pop
push
xor
ja
xchg
cs
adc
out
pop
sahf
dec
cli
out
nop
movsb
pop
mov
out
aam
jg
inc
test
xchg
inc
sbb
sbb
sbb
enter
imul
lock
dec
scas
add
aas
arpl
mov
inc
pop
bound
mov
lea
sbb
filds
enter
dec
test
movsl
cmpsb
pop
inc
fimull
and
push
arpl
inc
imull
push
jmp
iret
jge
pop
fsubrl
cmpsl
or
icebp
cwtl
rolb
xchg
adc
sub
icebp
mov
ds
js
sahf
mov
aas
insl
xchg
mov
cld
rcrl
push
movsb
dec
addr16
add
shlb
popf
mov
sbb
xchg
xchg
xchg
sbb
push
and
ror
jbe
xor
push
std
outsb
popf
xchg
sti
cmpsl
or
jecxz
jae
adc
fidivl
pop
out
bound
adc
test
inc
std
add
cmp
aaa
loopne
mov
in
xchg
jmp
lret
punpckhdq
das
cs
insl
xor
xchg
mov
sbb
mov
neg
adc
mov
aaa
xchg
cmp
es
adcb
mov
adc
xchg
push
jnp
mov
push
stos
stos
add
inc
pop
xchg
mov
and
mov
lret
inc
sbb
xor
or
or
gs
adc
push
mov
les
pop
xchg
pusha
aad
ret
sub
imul
popa
jo
mov
and
movsb
inc
out
out
and
inc
or
stos
and
dec
outsl
sbb
jno
addb
xor
push
mov
or
out
mov
mov
pusha
adc
sbb
loop
sub
repz
in
xor
int3
cmc
push
pushf
xor
or
iret
dec
out
gs
dec
cmc
dec
jne
and
in
or
add
push
arpl
test
popa
cld
fdiv
or
adc
imul
stos
jle
aaa
ret
cli
test
loope
rcrb
test
loopne
mov
mov
pop
iret
ficoml
es
iret
sbb
int3
loope
clc
out
shr
mov
and
add
dec
and
movzbl
movsbl
seto
mov
lea
call
shl
in
mov
adc
arpl
and
jl
lock
adc
fisubl
data16
jge
adc
xchg
test
push
popa
sub
sarl
jne
inc
arpl
stos
add
xor
shrb
mov
inc
mov
jne
push
cld
push
sbbl
push
lds
dec
dec
inc
and
adc
dec
add
invd
test
cmp
je
scas
sti
call
insl
add
jns
sbb
cmp
test
mov
repz
outsb
jg
jae
daa
out
jmp
test
rep
mov
push
clc
fs
daa
sub
pop
add
adc
sub
cwtl
add
ja
mov
cmp
jne
or
iret
cmp
imul
aad
loope
leave
call
sbb
hlt
iret
mov
mov
in
outsb
hlt
clc
mov
jl
out
lods
lea
jle
xor
rorl
cmp
test
inc
pop
jno
lock
popa
stos
sbb
filds
pushl
or
jecxz
movsl
xor
movsl
inc
shl
ret
lock
test
push
jae
testb
pop
push
add
mov
movlps
das
cmp
jl
xchg
dec
orb
divb
sbb
mov
stos
mov
je
dec
shl
in
outsb
xchg
dec
dec
inc
inc
push
push
xor
cs
insb
add
orb
out
cmp
jmp
xchg
inc
dec
pop
popa
cmpsb
cmp
loope
sarb
or
call
into
scas
and
loop
in
es
aas
out
dec
xor
xorl
pop
add
inc
adc
jae
not
data16
jns
mov
sbb
cmovbe
and
sub
pop
stos
fsubs
fsubrp
pop
fs
mov
jl
es
jae
add
sbb
jg
dec
xor
xor
pop
shrb
sub
imul
xorl
in
arpl
sub
nop
add
lret
xor
mov
iret
cmpsl
test
xchg
pusha
mov
adc
jno
add
mov
dec
notb
lds
xorl
adc
mov
dec
frstor
stos
lock
fimuls
sub
sbb
in
push
xor
push
lea
pushf
pushf
call
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
add
inc
gs
gs
dec
bound
arpl
repz
test
out
or
mov
ljmp
mov
jo
add
ds
jmp
ja
jecxz
add
out
add
and
lahf
out
jecxz
or
js
arpl
ds
pop
arpl
sbb
fidivrl
cmp
loop
leave
lds
inc
or
xchg
movsb
decl
jno
mov
mov
arpl
fs
cmc
inc
mov
dec
adc
aam
addr16
push
or
push
aaa
mov
aad
aad
bsf
aad
sub
rol
bts
cmp
rcr
push
pushf
inc
mov
clc
cmp
pushf
aad
mov
setns
lahf
aam
push
bt
aas
mov
cwtl
mov
bt
test
pushf
pusha
lea
je
stc
cmp
mov
sub
lea
add
bt
adc
mov
mov
jmp
dec
aas
or
fsts
cmp
add
mov
call
inc
testl
sahf
hlt
jbe
nop
cld
iret
xor
orb
imul
rcr
xacquire
and
mov
inc
dec
into
ds
aas
es
mov
pop
daa
cmc
shll
or
sub
jb
or
pushf
in
scas
push
ds
sbb
test
xor
mov
in
imul
ljmp
adc
cld
daa
mov
adc
and
xchg
jp
ljmp
cs
sar
stos
xchg
test
mov
fsts
fmuls
cmp
subb
cmp
and
xor
je
xchg
dec
adc
mov
add
sub
fs
shl
cs
cmp
mov
aas
popl
cmp
in
loopne
jne
sub
jo
mov
lock
outsl
jl
adc
mov
push
icebp
sti
xchg
pop
pop
and
call
repz
popf
test
loopne
cmc
and
jmp
gs
inc
js
mull
jmp
loopne
fcmove
sbb
pop
mov
adc
repz
push
jb
mov
push
fwait
int
inc
add
mov
and
add
adc
xor
add
push
add
and
rcrb
cmp
add
push
loop
les
sbb
add
mov
push
dec
cmp
clc
lret
mov
aaa
aaa
das
xor
xor
dec
xchg
or
push
inc
clc
dec
mov
push
xorl
mov
out
push
repz
imul
dec
movl
push
pushf
pushl
popl
movw
pushl
ret
clc
xor
mov
setge
pop
bsf
pop
push
mov
shld
mov
sar
pushf
aam
mov
or
cmc
sub
mov
rol
dec
stc
pop
add
lea
pop
pusha
push
pusha
push
pushl
ret
pushf
call
or
pushf
pushf
movw
lea
je
jnp
mov
pushf
lea
call
pushf
mov
mov
not
lea
pusha
jmp
add
mov
fbld
mov
jne
lret
ret
in
xchg
pop
mov
movsl
sbb
push
orl
mov
cs
divb
and
adc
inc
push
mov
jbe
sbb
push
repnz
xchg
push
clc
fists
and
bnd
push
ljmp
inc
iret
pushf
ljmp
pop
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
inc
and
add
mov
bt
cmp
test
pusha
lea
je
bt
call
jmp
or
fwait
js
movsb
sub
pop
inc
push
push
push
jmp
ljmp
inc
movb
pop
mov
jne
sub
or
jle
movsl
cmp
inc
pushf
in
pop
pop
inc
sub
test
xchg
stc
movsl
roll
mov
imul
imul
mov
aam
mov
nop
lahf
inc
sub
sbb
pop
xlat
and
rorb
test
sbb
imull
pushf
js
sbb
pop
insb
scas
cmp
fsubrs
pop
sbb
icebp
test
dec
outsb
push
and
daa
push
sbb
sub
fldt
shll
inc
mov
in
fiaddl
xor
aad
mov
dec
mov
xor
mov
daa
pusha
in
cli
lds
in
gs
jns
aas
or
mov
cmp
popa
int3
xchg
aaa
bound
mov
fnstcw
push
sahf
out
or
and
push
push
test
orl
fimuls
xchg
stos
addr16
or
sub
inc
bnd
aaa
inc
adc
mov
into
data16
adc
fisttpll
mov
xchg
mov
fsts
out
jge
repz
gs
xchg
jl
icebp
cltd
cmp
xchg
or
cli
arpl
mov
movsb
int3
mov
cmpsb
jno
xchg
or
mov
xchg
cltd
dec
cltd
jne
add
cmp
mov
pop
xchg
cmp
inc
sub
mov
movsb
mov
pop
or
pop
aaa
fldt
fsubl
cwtl
or
iret
sub
or
mov
loopne
mov
xchg
inc
jmp
sarb
inc
shr
push
mov
rorl
sbb
pop
push
adc
fstpt
jle
fxam
push
mov
push
stos
push
sbb
mov
mov
dec
or
xor
xchg
adc
lods
push
int3
fildl
cmpsl
repz
rol
push
fidivrs
cmpl
adc
push
pop
lds
ss
hlt
aaa
outsl
test
das
xor
popf
stos
pop
jo
shlb
adc
ja
into
pushf
or
int3
xlat
test
sub
repz
leavew
fildl
sub
fldl
outsl
negb
inc
xor
jecxz
or
dec
xchg
ss
aam
xchg
dec
arpl
ret
in
popa
repz
push
fiaddl
mov
lock
pop
hlt
sub
jl
shrl
dec
xor
call
sub
loopne
mov
xchg
movsb
xchg
mov
mov
or
int
dec
fdivr
bound
dec
push
incl
add
inc
fdivrs
cmp
push
mov
outsl
out
scas
cwtl
jge
inc
xchg
sarb
inc
xchg
ljmp
pop
stos
jno
in
addr16
add
pop
dec
pop
sti
ljmp
inc
lods
je
enter
ljmp
andb
out
cmp
ljmp
clc
fstpt
xlat
xchg
das
divb
and
mov
dec
pop
push
es
mov
stc
pushf
ret
cltd
daa
scas
mov
add
sub
adc
mov
jb
jmp
add
in
addr16
test
add
jmp
cwtl
and
aad
daa
xor
xchg
or
jne
fcoms
or
mov
or
lea
out
jbe
jo
lds
je
cmp
mov
mov
jl
sbb
adc
push
mov
imul
xor
adc
scas
loope
rclb
adc
add
mov
loop
cmp
sahf
dec
pop
movsl
adc
pusha
clc
fsubr
pushf
push
jp
scas
pop
repz
push
sahf
getsec
fiadds
ret
cli
outsb
push
and
fs
dec
push
shl
sbb
add
and
lret
sbb
insl
pop
fcompl
idivl
int3
jae
mov
popf
xor
pushf
lret
push
rclb
xor
sub
aas
sub
jecxz
cld
or
orl
fs
call
jmp
inc
xchg
jg
adc
pop
lret
mov
mov
add
clc
ret
rolb
lcall
stos
mov
cltd
insl
nop
sbb
in
loop
inc
or
sbb
mov
push
cmp
xlat
or
mov
sub
xor
push
sub
test
mov
mov
jge
cmpsl
fistps
jge
jl
dec
mov
cmp
add
lock
scas
cmc
lea
lcall
sbb
fbstp
fcoml
push
mov
sbb
xor
icebp
scas
popa
push
xchg
fiaddl
jle
xchg
add
adc
xchg
es
not
pusha
movzbl
movzbw
mov
pushf
pushl
pushf
push
pushl
ret
pushf
bt
pushf
sub
jmp
cmp
jmp
mov
bswap
shl
movzbw
mov
cmc
pushf
cmc
xor
call
gs
outsb
pop
loope
adc
add
mov
out
lret
push
mov
mov
rcr
shl
jp
adc
decb
inc
arpl
test
test
sbb
pop
jmp
in
bound
jmp
mov
aas
aam
add
xchg
flds
dec
mov
stc
cs
notl
pushf
cmpsl
pop
nop
add
inc
stc
dec
cmp
es
mov
aas
jecxz
jmp
sub
inc
inc
and
test
mov
or
and
imul
xlat
pop
loope
jmp
push
sub
mov
out
ss
das
cmp
outsl
imul
lds
dec
xor
adc
aad
sub
sub
dec
aaa
repz
bound
or
int3
dec
jae
jbe
enter
lahf
inc
iret
idivb
out
xchg
add
cmpl
repnz
stc
or
ret
adc
scas
mov
push
and
or
cbtw
inc
sahf
lahf
and
cld
data16
inc
mov
sbb
lods
mov
test
xor
or
or
lahf
dec
cmp
jecxz
cld
inc
push
repz
arpl
inc
sub
lahf
inc
movsb
add
data16
xor
lahf
or
int
in
in
mov
dec
mov
scas
mov
xlat
and
clc
fs
mov
push
mov
lock
iret
out
adc
mov
ljmpw
cld
push
nop
mov
daa
xor
scas
cmp
hlt
inc
dec
mov
movsb
or
or
push
sbb
mov
push
push
cmp
xor
and
test
daa
mov
dec
movsb
mov
aad
cmp
jg
sbb
rorb
jne
gs
cltd
cmp
sbb
fnstcw
mov
sbb
and
add
xchg
push
sbb
fsubrs
fdiv
sub
scas
mov
cli
in
cmp
repz
pushf
push
push
and
out
push
pushf
pop
jecxz
cmpsb
mov
lea
xor
fsts
pop
jg
popf
cmp
mov
xchg
sbb
or
cmp
mov
adc
mov
call
in
fdivrl
jp
jb
cmpsb
pop
mov
out
fsubrs
xchg
mov
test
push
or
std
inc
enter
fs
pop
rcrl
and
mov
inc
sub
pushf
xor
jnp
jl
mov
pop
sarl
inc
lret
aam
push
nop
clc
jg
shrl
aad
inc
lock
pop
push
mov
xchg
cmp
out
adc
rorb
sub
xor
scas
clc
outsb
in
pop
gs
mov
push
fisttps
decl
testl
and
pop
leave
nop
xor
out
xchg
test
cltd
je
cmp
ja
iret
pop
push
add
xor
popf
je
aad
leave
push
arpl
mov
push
scas
ja
or
mov
and
jb
xor
adc
xchg
xchg
or
in
je
data16
or
jle
std
insb
mov
sahf
mov
les
jb
pop
dec
push
test
stos
mov
or
inc
push
inc
mov
fdivl
cli
dec
movsb
push
out
xchg
test
test
es
popa
insl
cmp
out
popf
xchg
orl
movsbl
lea
call
cmp
mov
stos
jb
arpl
gs
xor
xor
shrb
fcompl
test
ret
loop
insl
pop
adc
sub
sub
out
sahf
cmp
ss
insb
test
dec
pop
mov
dec
icebp
sbb
cmc
xchg
mov
push
sub
mov
rorb
stos
or
push
rolb
fildll
out
or
xor
sbb
or
jg
repz
xor
sbb
aam
lods
pop
adc
repz
sahf
sbb
mov
or
aam
out
decl
in
popa
pop
mov
sbb
dec
mov
push
out
jns
movntq
out
inc
jge
mov
pop
fbstp
int3
adc
lds
stos
push
hlt
push
roll
mov
movsb
inc
add
mov
dec
sub
sub
mov
or
jb
fcomip
sbbb
jb
dec
push
add
fadds
inc
mov
dec
adc
cmp
xor
bound
mov
scas
ret
mov
jo
mov
psubb
lods
fsts
dec
mov
loop
cmp
test
mov
push
imul
cmpsl
cmp
stos
mov
js
stc
mov
jp
add
pop
je,pt
lret
inc
sbb
mov
mov
repz
mov
leave
mov
push
mov
stos
icebp
jle
test
gs
imul
push
aas
dec
clc
or
repz
lahf
xor
call
lret
adc
sub
sbb
test
mov
push
adc
cmp
das
ja
sti
loop
and
xor
pop
lahf
call
cli
lret
add
movsb
hlt
or
pop
push
enter
add
push
rcrl
xor
leave
mov
push
add
adc
inc
ss
mov
imul
out
cmp
xor
xchg
mov
xchg
xor
addr16
and
lahf
pop
add
out
jg
xchg
loop
repz
cwtl
insb
addb
add
lock
jmp
shlb
fistpl
pop
outsl
mov
and
mov
push
out
mov
jnp
int
inc
sub
mov
mov
pop
lods
mov
rcl
mov
sbb
iret
xor
mov
sub
cli
aaa
push
test
jp
mov
dec
add
cmp
cmp
push
cwtl
loopne
sar
push
mov
cltd
das
mov
arpl
fisubrl
test
xchg
hlt
outsl
in
add
sub
ja
push
repz
cltd
mov
or
repnz
in
lcall
adc
cltd
test
xor
rorl
add
lret
inc
sbb
fcmovu
or
inc
aas
add
xchg
subb
js
xchg
adc
push
lret
div
ja
ret
sbb
jo
int
mov
int3
add
adc
push
mov
js
push
ffree
sahf
pop
adc
jmp
cmpsl
mov
fmul
sbb
push
adcl
mov
or
jge
mov
in
ss
push
loop
fisttpll
xchg
xchg
xchg
mov
btc
mov
bt
sar
mov
bt
pusha
mov
push
call
cmc
pusha
stc
shr
movl
jmp
pushl
push
call
clc
push
or
push
pushf
lea
je
bt
cmc
ror
xchg
add
shr
dec
btc
shld
sub
bsf
cmc
rol
shr
btr
neg
sbb
mov
call
push
lea
jne
call
call
cmc
cmp
jmp
movsbl
pushl
popl
pop
mov
setne
setl
movl
movsbl
movzbw
lea
pusha
call
pop
mov
out
adc
fs
push
ffree
scas
pop
pop
addr16
adcl
sti
mov
cmc
jnp
sub
and
pop
jae
in
push
sub
sahf
or
subl
mov
call
dec
cld
add
pop
add
roll
insb
dec
fistl
jge
shlb
aaa
sub
ljmp
mov
or
mov
sub
inc
push
pop
je
or
in
pop
aam
inc
sti
xor
or
loop
jl
clc
push
ds
add
or
out
fwait
inc
jmp
add
jae
or
mov
pushf
gs
push
pop
add
rcr
inc
dec
xchg
push
adcb
jle
xor
mov
push
fistpll
lret
jae
and
or
add
sti
mov
fmuls
cwtl
adc
mov
push
jnp
imull
stc
and
pop
lea
inc
mov
mov
aad
xchg
or
or
cmc
daa
test
repz
sub
data16
scas
pop
out
pop
in
sti
repz
fwait
push
fcompl
adc
add
lds
rcrb
jmp
sbb
jb
sbbb
shrl
cld
je
fwait
popa
in
fadds
jl
sub
xor
lock
cmp
mov
inc
lret
cmp
push
cmpsl
rclb
outsb
fistpl
push
mov
aas
outsl
inc
mov
push
outsb
pop
test
lock
sahf
xchg
fsubrl
repz
push
mov
cli
repz
push
adcl
fwait
sub
outsb
es
cmovb
fcomps
cs
sbb
jl
cmp
mov
xor
dec
sbb
xchg
cmp
std
push
sub
add
decl
inc
ja
mov
lret
sbb
hlt
fisubrl
and
orl
inc
out
xlat
lahf
jmp
add
int
jg
cli
and
fcomi
loope
cmc
push
cmc
pop
and
mov
out
mov
dec
cmp
xchg
repz
xchg
inc
push
jge
push
loop
jmp
push
and
xchg
pop
add
aad
hlt
or
pop
loope
cmc
adc
popf
loop
pop
add
sbb
jne
orb
pop
add
mov
ss
out
jp
xchg
popa
scas
sbb
mov
mov
add
imul
jmp
jns
or
repz
xchg
push
movsb
sar
popl
clc
cmp
pushf
push
lea
jne
push
lea
ja
shl
sub
push
bsf
bswap
btr
add
add
inc
adc
setp
setae
mov
add
stc
rcr
add
mov
push
repnz
pusha
call
daa
jp
dec
hlt
arpl
mov
movsl
pop
out
push
mov
dec
adc
lock
pop
shlb
or
popa
fdivrl
sbb
in
push
cmp
pop
push
in
stos
mov
fcomp
add
cmp
lahf
shl
add
fistpll
fs
addr16
add
inc
idivl
mov
lods
mov
add
pushf
mov
loope
scas
insl
dec
mov
or
andl
jb
sti
int
sub
push
loopne
xlat
ret
nopl
push
sbb
xor
out
inc
inc
and
icebp
lret
rol
pushf
push
pushf
lea
jmp
movb
mov
lea
jp
pushf
stos
call
insb
fildll
cmp
add
andl
sarl
or
ret
sbb
int
or
cmpsl
dec
xchg
or
mov
inc
xchg
jle,pt
out
ds
enter
push
insl
repz
loopnew
sub
dec
arpl
inc
cli
int3
orps
verr
inc
mull
sbb
leave
mov
ret
lret
xor
stos
jbe
or
pop
push
inc
icebp
in
pop
loop
aaa
mov
cli
cli
stos
xchg
dec
and
aam
into
jp
repz
xchg
aaa
and
movsl
clc
sub
insb
fcmovne
or
sbb
insl
mov
mov
xchg
mov
pushf
and
xchg
sbb
cmp
mov
xor
mov
popa
icebp
mov
mov
push
cmp
inc
or
xchg
pop
cs
xchg
xor
mov
sbb
dec
push
test
cmpsb
jb
call
orb
in
mull
jecxz
pop
test
repz
xchg
sti
jmp
xorl
clc
loope
hlt
cld
in
fisubs
je
mov
aad
outsl
loopne
dec
adc
test
mov
sahf
add
dec
outsb
dec
sbb
xor
sahf
xor
ja
scas
sub
add
das
mov
mov
shrl
jae
xor
jecxz
fldt
test
ljmp
pusha
pushf
pusha
movl
call
aaa
pop
dec
shr
aad
rcr
pop
or
shr
pop
cmp
cwtl
push
mov
shl
mov
xchg
clc
mov
cmp
pop
sub
shl
add
mov
pop
push
movb
mov
pushl
pushl
ret
int3
pop
pop
mov
lea
lds
xchg
enter
or
mov
adc
add
cli
xchg
int
loopne
add
arpl
and
mov
cld
shr
mov
scas
clc
mov
test
lcall
jo
mov
stc
jg
jl
int
insb
loop
loop
mov
hlt
dec
and
scas
push
or
or
inc
fildl
pop
cmp
lock
mov
jge
aaa
out
int3
jbe
ljmp
scas
pop
xor
dec
sarl
daa
sub
icebp
cmp
add
pop
cs
cld
out
push
loop
lcall
arpl
lods
rolb
scas
call
not
jmp
mov
fisttpl
pop
xchg
jg
mov
sbb
cmp
sub
or
fmuls
sub
test
or
fidivs
stos
mov
fdivrs
ds
dec
pushf
or
and
xor
cmc
lret
xchg
testl
les
data16
sbb
dec
xchg
add
test
leave
sbb
enter
dec
ja
mov
fildll
out
ror
and
repz
xchg
sbb
lret
adc
subb
add
je
in
adc
ret
dec
sti
mov
and
repnz
xor
rclb
and
sub
xchg
dec
popl
mov
shl
loopne
ret
inc
push
bound
insb
int3
cmp
push
inc
lods
mov
or
fsubrs
mov
inc
mov
addb
lds
cmpsb
xor
scas
and
push
fldl
inc
movsb
push
int
ss
and
pop
lret
cwtl
test
stos
aaa
jecxz
js
out
xchg
insl
jg
stc
cmc
pushf
cmp
call
mov
not
lea
jmp
push
arpl
xor
adc
mov
stos
jb
inc
into
push
inc
cmove
scas
test
dec
les
data16
xchg
imul
push
leave
pop
mov
rcll
js
dec
or
frstor
or
dec
sub
or
pop
pop
mov
iret
mov
push
xor
jbe
cmp
movsl
sub
leave
push
in
sub
mov
jp
mov
xchg
cli
xor
dec
popf
loopne
push
and
mov
xor
mov
dec
pushf
or
inc
xor
lret
out
xchg
xchg
pop
popf
adc
inc
cli
lods
nop
mov
inc
imul
or
out
fisttpll
dec
in
push
mov
adc
jp
rorl
rcll
into
push
leave
shrb
jb
pop
jae
hlt
outsb
cmp
pusha
mov
std
inc
mov
dec
inc
mov
mov
sbb
lea
xchg
js
pop
xchg
or
or
xchg
mov
cs
call
dec
shr
and
cmp
je
insl
fxam
xor
xor
call
stc
imul
pop
hlt
jns
dec
xor
gs
aam
pop
iret
mov
cmp
mov
rclb
jmp
mov
loopne
dec
mov
add
cmpb
jmp
sub
adc
jo
sub
add
push
push
bound
es
movsl
ja
jecxz
stos
lcall
pop
imul
popa
shll
mov
roll
mov
mov
loop
stos
add
mov
je
in
cmp
decl
repz
mov
mov
repnz
sub
pop
inc
int3
xor
cmpsl
jne
movsb
mov
repz
dec
inc
push
mov
inc
out
jmp
shr
push
push
sbb
ficomps
clc
ficomps
xchg
xchg
add
mov
push
sbb
lds
and
ds
jb,pn
int
fsub
in
sbb
mov
mov
xlat
cmpsl
cmc
sbb
ret
addl
cli
test
jl
mov
scas
lcall
orb
movl
pushf
movb
lea
jmp
int3
popf
jmp
add
call
call
jmp
stos
mov
imul
out
cmp
iret
clc
add
imull
xchg
jmp
in
inc
dec
pusha
gs
dec
adc
out
cmp
lcall
xchg
je
sarl
mov
pushf
inc
test
mov
mov
sbb
adc
gs
out
xchg
mov
xor
mov
sub
jecxz
test
lods
jge
adc
ljmp
test
sbb
fisttpl
jae
cmpsl
cmp
loop
jmp
mov
fisubl
je
sub
inc
dec
mov
pop
int3
inc
arpl
add
xor
daa
cmp
push
pop
or
iret
inc
outsl
retw
in
and
divl
mov
lahf
popa
das
mov
and
cmpsb
jns
imul
mov
rcr
inc
leave
hlt
rolb
mov
fs
xchg
push
dec
lret
movb
mov
push
push
lods
pop
dec
cmp
dec
lahf
ret
insl
cmp
outsl
lds
push
cmp
mov
or
mov
out
sbb
in
xchg
xchg
lret
dec
dec
dec
sahf
fmull
inc
stos
jg
imul
cmp
mov
mov
idivl
jnp
xchg
inc
outsb
sti
repz
mov
fisubs
add
add
bsr
add
sar
shl
stc
mov
push
pushl
stc
cmp
shr
bt
cmp
test
cmp
pushf
lea
je
cmp
cmp
push
jmp
movsb
dec
push
and
and
sbb
lock
hlt
call
mov
mov
xor
adc
mov
fmull
adc
mov
pop
cld
iret
aaa
mov
or
dec
xchg
mov
lock
int
sarb
inc
mov
pop
jmp
ret
mov
mov
repz
blsfill
pushf
jmp
push
jmp
jl
outsb
push
mov
in
push
stc
dec
mov
jl
es
and
outsl
or
sub
imul
out
xchg
adcb
jle
xchg
bound
scas
mov
jnp
movsl
pop
icebp
in
pop
dec
jo
push
mov
loop
repz
call
test
out
and
movsl
outsb
xchg
push
cli
inc
inc
jle
mov
add
fsubs
push
inc
mov
bound
and
pop
push
jg
push
push
jl
repz
mov
out
ds
xorl
mov
push
scas
adc
rol
iret
imull
in
mov
out
mov
rcrb
loop
cmpsl
mov
push
pushf
lea
jmp
test
lahf
inc
add
pop
push
sar
or
insl
dec
jb
adc
leave
ljmp
cmp
dec
out
into
loop
push
push
lds
stos
dec
mov
dec
nop
dec
sbb
aaa
gs
adc
add
fsubrs
les
sub
xor
popa
jge
in
mov
xor
adc
push
adc
push
pop
repz
mov
scas
or
and
mov
add
fsubrl
and
adc
orb
pop
jbe
loop
cwtl
cmp
mov
cld
dec
sbb
ss
sbb
sbb
pop
subb
pop
adc
test
push
jo
pop
hlt
dec
arpl
push
add
jae
cli
lea
mov
mov
sbb
mov
jl
pusha
dec
jae
sbb
inc
mov
es
xorl
insl
pop
adc
mov
icebp
in
or
fists
repnz
repz
adc
inc
cld
test
loopne
repz
mov
out
adc
loope
popf
call
lods
xor
xchg
idivb
push
inc
pop
outsb
iret
dec
fldenv
cmp
cmp
ds
push
ljmp
cmp
test
fidivl
filds
sbb
mov
fisubs
sub
inc
push
sahf
jg
leave
gs
sbb
out
dec
enter
mov
sub
lret
xorb
lret
push
mov
scas
in
mov
data16
lods
mov
mov
repz
mov
jns
clc
shr
adc
fcoml
jecxz
jb
arpl
jae
orb
mov
cmp
jbe
jbe
movsl
or
pop
or
incb
cwtl
mov
jnp
add
and
sbb
mov
out
sbb
mov
movsb
lcall
cmc
mov
std
jno
pop
shll
stos
lahf
sub
adc
imul
nop
xor
cmpsl
je
mov
repz
mov
xor
movl
pushl
pushl
push
lea
jmp
ss
pop
dec
fisubl
xchg
cmp
lock
and
imul
roll
adc
jno
ret
dec
sub
xlat
out
js
push
xor
insl
clc
mov
fs
push
aas
or
sbb
sub
inc
sub
pushf
movsl
adc
jg
lcall
adc
les
sarl
fs
je
movsl
scas
mov
ret
adc
jno
in
mov
mov
mov
adc
and
and
xor
push
out
fs
enter
jg
pop
repz
xchg
bound
icebp
pop
lock
mov
fdivrp
mov
dec
clc
jmp
sbb
and
mov
or
daa
jnp
add
push
jb
pop
in
or
dec
jb
jle
fs
fimull
xlat
je
out
pop
pop
push
xchg
sub
out
inc
pop
mov
dec
xchg
popa
push
jg
sbb
ljmp
js
seta
in
fisubrs
arpl
shrb
shrl
negb
das
dec
sbb
cmp
dec
pop
cbtw
cmc
mov
inc
add
mov
movsl
stos
movsl
rcr
inc
imul
jno
add
mov
std
enter
ds
gs
es
outsb
push
push
lret
mov
enter
leave
repz
xlat
pusha
syscall
ss
pop
or
add
jg
loope
or
icebp
in
sbb
bnd
ss
dec
cltd
lds
cld
push
test
mov
cmp
push
pop
addr16
push
daa
adc
popa
test
push
lret
repnz
test
and
mov
mov
push
cmpsb
popa
nop
mov
push
mov
xchg
popa
scas
lcall
sub
mov
int
jmp
xchg
and
sub
adc
add
imull
mov
divb
xor
insb
inc
ja
sbb
out
inc
subb
add
btc
mov
dec
fdivp
out
test
adc
scas
cmp
mov
movsb
or
cmp
fildll
mov
add
mov
out
and
xchg
dec
jo
clc
add
movsl
inc
sbb
jo
repnz
ljmp
pop
jne
xchg
cltd
or
cmp
fwait
or
adc
das
data16
clc
clc
add
stos
sub
xchg
fiaddl
sarl
loope
or
mov
dec
mov
mov
sub
or
inc
lods
repz
test
push
add
push
in
hlt
clc
aas
daa
rcrl
sub
mov
clc
or
jl
xchg
nop
mov
daa
and
fisubrs
sbb
icebp
ds
mov
pop
push
repz
cmc
sub
leave
sub
mov
out
fisubrl
mov
mov
icebp
cmp
aam
call
mov
push
jl
push
and
data16
repz
test
cwtl
hlt
mov
and
adc
testb
xchg
cmp
insb
push
cld
push
sub
cltd
inc
mov
cli
lock
lea
mov
cwtl
sbb
movl
out
sub
and
mov
loop
int3
pusha
jl
scas
les
dec
sahf
or
xchg
ds
add
aas
lea
fisubl
mov
xchg
movl
pushf
lea
ja
push
pusha
mov
movb
movl
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
call
add
pop
ret
call
addr16
xchg
push
popf
outsb
xlat
shrl
popa
sub
mov
jp
jbe
popa
dec
dec
xor
sub
test
and
pop
lcall
out
pop
jecxz
adc
lret
sahf
dec
das
mov
fsubl
pop
test
mov
cmpsb
ljmp
fmull
and
pushf
sub
xchg
das
cmc
bt
clc
cmp
pushf
call
pusha
pusha
movl
pushf
call
jnp
ret
enter
jl
jne
inc
pop
inc
dec
mov
inc
dec
jne
cli
mov
pop
in
aam
and
mov
mov
mov
aad
cmp
sub
xlat
or
insl
bound
inc
adc
mov
or
sbb
negl
movsl
adc
dec
pusha
pop
inc
in
mov
jg
push
bound
fsubrl
push
repz
xchg
fs
je
bt
stc
pusha
pushf
add
bt
stc
cmp
call
shl
cmc
cmc
pushf
pushf
mov
jmp
jns
ss
push
fisubs
xchg
sbb
test
mov
mov
cmp
andl
sub
or
sahf
push
sub
jl
and
das
cmp
inc
xor
data16
popf
int3
lcall
fwait
addr16
scas
xchg
jmp
dec
and
aas
sbb
add
xchg
mov
stc
mov
les
js
xor
xorl
repz
andb
das
ret
test
cmpl
jo
das
add
inc
add
add
das
rolb
add
inc
das
inc
subl
add
jg
inc
add
add
ret
inc
rolb
daa
mov
cmp
jecxz
mov
fs
ss
int
mov
jae
lods
je
movsb
cld
pushf
sbb
add
and
fwait
pusha
scas
into
xor
ss
push
negb
pusha
scas
popf
cltd
mov
je
fcmovnbe
out
add
jnp
cmp
call
je
insl
lcall
repz
andl
push
aam
push
jbe
jle
scas
push
mov
or
push
add
dec
daa
test
mov
sahf
add
nop
cwtl
jl
mov
hlt
inc
or
mov
shlb
jne
addb
sbbl
add
sub
push
loopne
dec
in
mov
mov
xor
cmc
loop
pop
lods
repz
subl
xlat
pop
and
push
icebp
fwait
lds
mov
adc
add
test
mov
lods
add
pushf
mov
jbe
cmp
push
cs
rcrl
push
push
test
outsb
cwtl
push
pop
int3
push
xor
loop
mov
in
push
mov
test
nop
sub
test
shll
cmp
jbe
fistpl
cld
or
mov
xor
add
inc
push
adc
jecxz
and
mov
jg
int3
cwtl
inc
das
pop
dec
mov
mov
xor
repz
add
fwait
movsbw
movb
pusha
bswap
mov
movzbw
mov
lahf
lea
call
lea
jnp
push
lea
je
stc
push
add
pushf
push
push
lea
jmp
push
pushl
popl
push
pushf
pushf
pushf
pushl
ret
hlt
xchg
jp
rcr
arpl
enter
dec
adc
and
cltd
inc
push
inc
fwait
lock
das
jne
xor
mov
int
mov
aad
imul
sbb
sbbb
stc
mov
daa
lret
insb
xchg
jg
scas
pop
mov
dec
cwtl
loope
iret
loopne
daa
pop
or
fiaddl
sahf
call
jo
xor
adc
jb
mov
imul
pop
mov
test
sub
add
sub
movsb
mov
push
fs
pop
dec
aaa
ret
mov
out
sbbl
cmp
xchg
clc
jge
nop
xlat
mov
leave
xchg
cltd
arpl
stc
lods
inc
mov
push
stos
jbe
cltd
decb
cwtl
cmpsl
test
pop
test
xor
inc
push
xor
push
push
movsb
mov
stos
push
inc
out
bound
fmull
xchg
sub
jl
cwtl
mov
cmp
std
or
repz
subl
loop
inc
lret
push
sbb
lahf
mov
int
adc
jle
ds
xor
inc
test
mov
xchg
cltd
loope
xchg
fs
xchg
outsl
je
std
add
imul
scas
fdivrl
sbb
or
out
lcall
out
imul
adc
sbb
les
jns
push
std
mov
and
or
pop
cld
call
sti
cs
data16
sbb
andb
enter
mov
fiaddl
jmp
in
cmp
sub
ja
dec
xchg
out
imul
and
pop
pop
xchg
mov
mov
stos
lods
sbb
push
add
ret
rorl
jbe
sub
adc
out
jl
xchg
or
cmp
xchg
dec
movsb
mov
stos
aaa
add
pusha
mov
lahf
mov
loop
imul
push
lret
xor
jmp
roll
mov
xchg
xchg
xchg
add
lcall
cmc
push
sti
xor
mov
lret
into
hlt
and
stos
stos
dec
cs
mov
sub
mov
dec
das
rcll
loopne
add
arpl
arpl
xlat
push
scas
push
lcall
movsb
cltd
dec
repnz
sbb
push
xor
lods
pop
insl
aam
notb
fisubrs
out
inc
lds
fmulp
call
insb
xchg
add
xchg
jnp
shlb
and
push
out
mov
jp
fldln2
dec
dec
nop
insb
adc
dec
hlt
lods
test
cli
xor
mov
ss
dec
jne
xchg
movsl
cmp
arpl
testl
mov
into
loopne
jo
std
or
and
mov
xor
pop
insl
mov
xchg
xor
mov
jns
in
dec
inc
push
arpl
lret
mov
out
xchg
sub
jecxz
fsubs
mov
jmp
jmp
fcmovbe
sbb
aaa
mov
sub
sub
imul
repnz
in
mov
xor
pop
lea
scas
cs
mov
sub
loop
and
pop
jb
push
dec
pop
lods
xchg
ljmp
push
out
sub
je
dec
and
jns
or
cmpl
outsb
sbb
mov
int
dec
testl
jbe
gs
int
fbld
add
pop
sbb
jno
sub
mov
dec
fimuls
pop
pop
jno
or
push
xacquire
js
dec
jl
in
andb
push
add
inc
add
leave
pop
jns
pop
cmp
xor
push
call
cmpsl
jmp
mov
cmp
std
and
and
je
dec
dec
sub
sub
mov
cmp
lret
lret
or
insl
rcll
outsb
loopne
dec
fisubs
sbb
xchg
jmp
dec
inc
mov
mov
pop
inc
sbb
test
cmp
push
inc
test
imul
push
fnstenv
stos
lock
push
rorl
xchg
pop
testl
scas
jge
aam
pop
fmul
dec
mov
mov
mov
loopne
fidivrl
mov
xor
adc
cmp
push
mov
insl
sub
inc
lock
call
jle
xor
adc
jno
or
mov
mov
cmpsb
inc
arpl
mov
xchg
cmpsb
cmc
push
and
pop
imul
fsts
jae
ret
js
push
jecxz
nop
adc
sub
mov
scas
aam
mov
aam
enter
decb
add
cmc
ljmp
xchg
stos
jbe
aam
jge
rcl
mov
stos
idiv
mov
or
jp
dec
in
clc
movb
mov
add
mov
cs
mov
enter
les
lock
fs
insb
fdecstp
popf
in
push
mulb
xchg
jne
jp
add
rcl
sbb
movsb
adc
in
int3
push
push
aaa
dec
xorb
lret
in
mov
ja
mov
jb
mov
lea
mov
cli
jns
pop
mov
test
filds
ret
cmc
inc
sub
adc
orl
pop
shll
push
sbb
jae
sbb
or
je
in
adc
xor
into
ljmp
inc
out
sti
fucom
js
push
mov
pusha
fstps
sbb
sarl
inc
sub
das
bound
hlt
popa
nop
idivb
mov
leave
mov
or
inc
and
sbb
add
mov
mov
jnp
adc
fs
imul
mov
mov
sahf
jge
js
push
popa
lds
sub
stos
lock
inc
jne
mov
shrl
js
jle
imul
cmp
out
mov
push
testl
cltd
fisttpll
in
rorl
push
clc
je
sub
das
xor
mov
mov
dec
out
inc
pushl
ljmp
sub
insl
incl
push
in
and
psubw
iret
inc
push
adc
cmpb
lock
mov
sub
fdivl
pop
cmpsl
imul
sub
xor
sub
dec
push
mov
sbb
jae
repnz
insb
test
roll
pop
lret
insl
add
popa
mov
push
lcall
arpl
mov
in
dec
ljmp
adc
and
gs
ror
popf
loopne
jmp
mov
mov
and
inc
inc
scas
aam
je
es
dec
sub
mov
and
dec
push
neg
jnp
lock
jbe
lret
cmp
sub
mov
or
call
add
lock
jl
xchg
jl
loopne
pop
clc
aaa
iret
cmp
adc
lret
insl
cli
mov
adc
dec
xor
test
push
popa
gs
dec
imul
dec
fcoms
mov
sbb
mov
or
sbb
in
cmpsb
lahf
ds
fwait
mov
or
lods
push
xchg
inc
xor
jl
arpl
sbb
push
xchg
cld
decb
jnp
inc
int
mov
push
test
jnp
insb
mov
jne
mov
push
cli
or
push
push
push
test
add
lcall
cmp
in
push
test
push
mov
sbb
scas
push
insl
ja
int3
jmp
mov
mov
daa
inc
add
inc
jb
lds
xlat
mov
aaa
sarb
repz
cmp
int3
or
adc
pop
adc
aad
or
inc
test
dec
cmp
dec
cmp
out
push
daa
xchg
mov
test
pop
mov
lea
imul
mov
dec
mov
sbb
loop
imul
out
cmp
aas
add
loope
push
aaa
xchg
ficoms
mov
xorb
je
dec
test
movsb
add
sti
cmpb
and
inc
mov
fisubrl
scas
es
sbb
mov
out
scas
cld
sbb
aaa
xchg
mov
inc
xchg
mov
push
mov
cmc
xor
push
mov
lret
jl
mov
loop
xchg
mov
sub
mov
aas
stos
lock
shrb
iret
or
ret
pop
xchg
sub
jno
adc
insb
mov
pop
mov
dec
or
out
xor
out
sbb
ret
add
pop
jbe
add
jne
mov
sub
je
test
cmp
mov
jno
imull
ret
cmpsl
movsb
cmpsl
rcl
movsb
dec
hlt
clc
jge
mov
cmp
and
cs
leave
push
mov
shr
pusha
sub
ror
aam
push
lds
jl
sbb
je
fcomps
mov
int
cmp
shll
jbe
es
jmp
add
jle
addr16
stos
xchg
jns
push
cltd
loope
ret
add
jp
incb
cmp
xor
or
into
and
pusha
push
xchg
xlat
sub
out
jmp
add
xor
xor
push
push
pop
inc
aam
push
test
sbb
push
mov
pop
fisubrl
cmp
or
pop
jb
push
idivl
mov
ficoml
dec
push
jne
and
std
pop
dec
addr16
stos
in
int3
cs
mov
loopne
int
loop
sbb
jl
xchg
out
loope
add
sti
imul
and
push
mov
mov
cwtl
push
xchg
xor
fistl
fildll
mov
xchg
shlb
pop
outsb
mov
arpl
sti
stc
pop
cmpsl
pop
dec
ret
into
xchg
jle
jecxz
pop
mov
or
mov
fdivr
dec
out
cmp
sahf
mov
dec
xor
pop
sti
dec
shl
sbb
sub
pop
and
hlt
test
into
xor
test
aad
push
jo
stos
out
std
sti
fisubrl
ret
ljmp
scas
add
xchg
push
loop
in
iret
jl
mov
pusha
outsl
and
call
ja,pn
test
adc
push
in
xor
mov
inc
mov
sub
out
jle
jle
mov
es
adc
movsl
add
ret
mov
roll
cmpsl
xchg
ret
pop
sbb
and
sbb
mov
and
pop
cmc
mov
push
dec
adc
push
sub
push
sub
nop
jne
and
mov
mov
stc
fs
jne
adc
and
mov
dec
popa
sbbl
push
push
xorb
push
lods
fbstp
push
cmp
or
push
lret
lock
hlt
push
cmpsl
jbe
xchg
adc
sbb
cmp
pushf
mov
jne
xchg
popa
cmpsl
cwtl
xor
cwtl
xor
out
dec
jo
push
xor
sub
xchg
xlat
bound
les
jo
loope
movsb
adc
or
fsubr
outsb
aaa
add
jmp
js
xor
ds
add
lock
jae
std
push
add
push
fcompl
lret
je
mov
gs
icebp
inc
dec
inc
es
mov
xchg
mov
fldl
mov
or
test
xor
lret
push
lahf
mov
dec
dec
hlt
lock
mov
inc
iret
sbbb
mov
pop
ljmp
rolb
lods
pop
dec
insb
push
mov
stos
push
pushf
sub
xchg
xchg
arpl
cltd
mov
test
fidivl
xchg
les
cli
fbstp
jmp
push
xchg
jb
popf
xchg
ss
aas
jbe
out
mov
inc
int3
push
mull
inc
jae
daa
mov
mov
jle
or
and
cmp
cmc
pushf
mov
mov
jl
cs
xlat
in
int3
or
jbe
mov
dec
pusha
jp
xchg
jbe
mov
fptan
jecxz
lcall
lods
iret
mov
adc
dec
jg
xorb
imul
sub
addr16
adc
dec
cmp
ret
and
and
pushf
fldcw
movsb
fdiv
cmp
cltd
dec
cli
dec
lods
cmp
push
jb
in
fmulp
push
aad
stos
xchg
mov
dec
js
data16
inc
cmp
cmp
xchg
jbe
movb
lcall
mov
lods
mov
shl
xor
lods
idivl
jl
popl
outsb
mov
icebp
fistpl
mov
sub
add
ljmp
adc
les
pusha
xchg
jl
das
aaa
cmp
mulb
xor
and
pop
adc
fbstp
repnz
inc
clc
das
sub
outsl
pinsrw
stos
xor
popf
sahf
sbb
cltd
lods
pop
jge
cli
jno
ljmp
cltd
jmp
push
sub
daa
fimuls
or
aaa
lret
loop
ss
adc
mov
vmread
add
and
and
inc
inc
push
xor
push
cmp
pop
xlat
icebp
das
js
aas
push
cld
cmc
insl
fbld
adc
xchg
xlat
xchg
fistl
addr16
cmp
jo
adc
aad
in
das
pusha
in
cmpsl
ja
aas
xor
pushf
and
pop
addr16
jmp
sbb
rorl
mov
inc
cltd
dec
adc
jns
jmp
cmp
push
xor
lods
std
or
lret
andl
add
push
fisttpll
cwtl
xchg
outsl
pop
push
lfence
ds
enter
mov
mov
and
out
adc
mov
lahf
scas
les
popa
testl
lock
push
ror
sub
movsb
mov
loop
je
adc
or
stc
jle
mov
ret
fistl
cli
mov
pop
xor
cli
or
leave
mov
cmp
sahf
adc
lock
mov
pop
mov
out
pop
add
out
add
xchg
pop
xchg
adc
sub
das
add
push
call
dec
adc
vmovdqa
or
popf
dec
sbb
arpl
sbb
outsl
shl
cmc
fcomp
popf
ret
push
pushf
jp
aas
dec
inc
dec
sarl
xlat
cmpsb
bound
jl
xor
iret
mov
adc
imul
cmp
inc
stos
cmpsl
jne
inc
and
xor
xchg
lcall
add
cmp
and
jp
lds
cmp
ret
sbb
pop
sbb
xchg
xlat
insl
arpl
jb
int
adc
imul
add
ret
loope
fdivrs
clc
daa
inc
adc
add
xchg
cmpsb
mov
js
cwtl
cmp
hlt
push
loopne
mov
push
or
and
outsb
ud0
rcll
inc
pop
int3
out
mov
loope
aad
popf
add
dec
adc
cmpsb
movsl
fcompl
into
pop
adc
xor
add
and
ja
push
mov
sub
cmpsb
nop
push
jle
out
fiadds
cltd
and
mov
and
pop
xor
fiadds
outsb
mov
enter
out
lods
pushf
inc
insl
test
ja
loopne
in
sbb
mov
inc
movsb
cmp
scas
addb
test
ja
lock
cli
jnp
push
or
das
xchg
dec
sbb
cmpsl
fldcw
pop
xor
testl
xchg
rorl
das
ja
testl
xchg
jne
out
in
outsb
jno
lret
adc
inc
js
ljmp
sti
pushl
in
xchg
and
sub
fsubs
pop
cmpsl
mov
cld
pop
push
ret
aaa
mov
sbb
xchg
xor
loopne
sub
add
test
xlat
push
xchg
mov
add
mov
loopne
mov
xor
loopne
fisubrl
push
out
mov
addl
xchg
xchg
pop
sub
cmc
add
rcrb
nop
imulb
mov
mov
rorl
int3
addl
cmp
test
or
enter
cmp
shr
sbb
ljmp
out
sbb
les
fsqrt
adc
aas
jo
loop
pushf
lahf
scas
sar
add
sbb
scas
jo
add
add
shll
adc
stos
jbe
stos
or
jmp
push
cmp
stos
call
mov
or
mov
in
adc
pop
push
mov
enter
test
pop
push
outsb
xor
mov
fs
sub
mov
fistpl
cmp
cld
or
outsl
orb
in
and
push
pop
cmp
xchg
mov
data16
push
jmp
and
fnstcw
jbe
test
dec
pop
cltd
insb
xchg
push
clc
cmc
int
icebp
adc
test
ljmp
mov
mov
test
lret
pop
cwtl
mov
mov
stos
es
fs
pop
adcl
or
out
add
sbb
gs
popa
das
add
inc
inc
scas
xor
and
jle
push
mov
into
mov
add
daa
mov
jb
movnti
lds
mov
stc
out
inc
shrl
popa
dec
sub
pop
outsb
or
jle
or
cmpsb
jmp
data16
les
adc
jmp
sbb
pop
pop
rorb
inc
shll
insl
lods
lahf
pop
pusha
ds
sub
enter
fcompl
popf
mov
dec
iret
lds
mov
cli
jl
add
mov
out
dec
sbb
fsubrs
ds
nop
jae
dec
out
fwait
pop
dec
int
jb
dec
jns
xor
cmpsb
mov
in
xchg
lcall
decb
inc
cmp
mov
mov
iret
push
cmp
in
add
and
testl
je
or
pop
mov
fmul
int
adc
sub
in
xor
scas
xor
fbld
rcrb
pop
push
cld
sbb
push
cmp
dec
adc
pop
mov
jmp
dec
scas
xchg
xchg
cmpsl
pop
push
mov
stos
jb
sbbl
push
movsl
cmp
add
ret
adc
xchg
movsl
aad
or
jb
push
mov
mov
movsb
icebp
pop
aam
dec
fisttps
stc
jg
xor
xor
xor
push
inc
jp
jb
inc
outsl
sub
rclb
xor
les
cmpsl
into
cs
mov
rcl
mov
mov
push
sbb
jmp
out
xchg
xlat
and
out
add
push
pop
jns
sub
cmp
dec
inc
scas
pop
push
push
dec
dec
lods
cmp
imul
shl
cld
aaa
cmp
je
cmp
cmc
in
push
pop
mov
sti
sbb
mov
cmp
rcll
ljmp
ja
adc
decl
push
int3
jns
mov
mov
push
jp
imulb
push
inc
add
sbb
xchg
sub
jg
xor
mov
nop
cmp
sbbl
jg
mov
out
xor
pushf
nop
in
iret
sbb
repnz
lret
repz
mov
xchg
mov
call
sub
mov
test
out
lods
push
movsb
cmp
mov
cmpsl
sbb
in
shr
aaa
jmp
cmpsb
cmp
or
cmp
sbb
imul
jmp
fwait
leave
sub
jl
xchg
lods
mov
push
sub
mov
test
cmp
adc
sbb
push
rep
aam
pop
xor
outsl
mov
mov
fwait
cmp
sub
inc
sub
sbb
add
iret
icebp
movsb
fmul
sub
sbb
cmp
mov
mov
push
mov
inc
jg
adc
mov
flds
sub
sub
dec
sbb
rcrl
dec
pop
imul
bound
shl
push
je
push
enter
repnz
and
repz
shlb
cli
sub
mov
hlt
xchg
and
xchg
sub
aad
inc
and
pop
lahf
mov
pop
mov
into
scas
push
ficoml
pop
mov
notb
mov
push
pop
add
or
inc
dec
bound
js
adc
jl
and
mov
les
add
in
adc
jb
xor
xchg
rolb
mov
mov
jmp
add
xorl
mov
jl
push
addps
fisttpll
xchg
jbe
jg
lods
leave
mov
jmp
scas
xchg
pop
jmp
jnp
and
repnz
cmpsb
adc
and
negl
fwait
sbb
add
das
xchg
cwtl
xor
pushf
scas
push
jp
cmp
xor
clc
xor
fistpll
adc
jle
mov
push
in
cltd
xor
push
ret
ja
jae
add
int3
pushf
rcl
les
add
in
xor
jno
pop
adc
mov
cltd
mov
add
dec
aas
call
popa
or
xor
negl
fs
dec
jae
mov
mov
push
dec
jae
and
sbb
mov
icebp
les
push
iret
sub
or
sbb
daa
lcall
loop
adcl
mov
das
or
sti
sbb
inc
loop
aaa
pusha
inc
aam
out
and
aaa
and
cs
std
repz
shrb
sbb
aam
outsb
pop
pop
mov
dec
adc
pop
mov
hlt
cli
cmp
insl
pop
jmp
pop
and
shrl
lcall
cmp
scas
addr16
repnz
adc
iret
outsb
cmp
push
add
cmovp
movsl
daa
movsl
cmp
inc
mov
adc
inc
pop
inc
shl
aam
insb
repnz
push
sbb
xchg
or
in
sbb
add
push
iret
sarl
jne
push
add
add
ret
or
xor
out
lods
adc
fisubl
mov
imul
iret
push
ss
sbb
rcr
fstpt
xchg
mov
imul
data16
mov
test
sbb
jae
aas
clc
mov
push
xlat
jo
mov
in
outsl
xor
scas
cld
or
adc
lock
dec
cld
jl
jae
and
ja
outsb
push
cmp
mov
and
mov
in
cli
lods
das
add
add
lock
ja
mov
lea
and
inc
xchg
popl
out
cmp
push
mov
cmc
cmc
jmp
and
aas
shlb
xchg
inc
stc
rclb
cmpsl
xor
pop
call
popaw
mov
inc
xchg
cltd
fldenv
push
pop
cmp
in
leave
xchg
test
sbb
fadds
fldt
rcl
push
fidivs
mov
or
adc
dec
xor
xchg
lods
xchg
add
fsubrs
dec
rclb
push
mov
cmp
les
jg
and
jo
sarb
xchg
mov
out
loope
push
dec
fs
sub
bound
fldl
sbbl
push
stc
mov
push
in
mov
int
push
jb
pop
and
pop
and
ljmp
jl
sub
sbb
mov
shl
sbb
mov
or
adcl
jp
add
icebp
in
and
jmp
outsb
xor
push
mov
adc
rcl
fmul
fisubl
and
xchg
data16
bound
dec
int3
fdivl
int
fdiv
sub
and
pop
fdivs
xchg
pop
fmull
je
xchg
push
pop
sarb
mov
loop
pop
test
nop
ror
pop
in
insb
out
je
fidivl
in
movsl
inc
stos
or
sbb
in
cmp
call
arpl
push
mov
xor
daa
loop
mov
cld
dec
loopne
sub
cmp
cmp
shll
xor
inc
std
lods
adc
addr16
add
in
outsb
mov
js
mov
fmull
sbb
out
mov
jns
sub
shl
sbb
push
lods
dec
ds
mov
int
scas
daa
scas
stos
and
notl
push
cmp
adc
xor
dec
rorl
rcrl
xchg
addr16
jp
pop
sub
sbbb
xchg
outsb
jmp
lret
sbb
push
mov
enter
or
push
sahf
mov
sub
mov
das
in
pop
mov
scas
push
sarb
mov
adcl
and
imull
or
inc
test
dec
xchg
mov
into
inc
loope
dec
xor
popf
addb
pop
ljmp
jo
push
scas
loope
push
jle,pt
ficoms
addl
sbb
or
imul
out
mov
push
sbb
mov
daa
movsb
ret
icebp
enter
xchg
lret
outsb
lahf
subl
xchg
int
ds
fsubl
inc
call
stc
lods
mov
inc
std
or
cmp
mov
inc
jmp
push
sti
and
jl
mov
mov
jns
push
mov
sbb
nop
movsl
or
pop
out
das
mov
push
mov
stos
push
aad
addr16
jae
dec
pop
and
jb
into
push
in
dec
lcall
or
cli
cmp
lds
orb
mov
std
jmp
jmp
xchg
and
insl
clc
xlat
cltd
mov
mov
aam
out
pop
cmp
xchg
in
in
mov
mov
push
cmpsb
cmpsl
idivl
sbb
sbb
xchg
pop
mov
addb
jne
xchg
or
out
and
jbe
push
xor
lret
push
cmpsl
xor
or
pop
mov
adc
imul
jnp
pop
and
test
xor
cmp
icebp
adc
enter
or
lods
mov
cmp
dec
in
and
leave
add
add
mov
int3
in
in
jg
push
leave
dec
ret
push
mov
pop
xchg
push
inc
mov
push
in
rcrl
pop
cmp
jne
mov
call
adc
xchg
push
xchg
aaa
push
fildll
jmp
ret
jl
mov
das
fildll
mov
push
dec
popa
cmpsl
sarl
out
mov
repz
int3
rorb
push
add
cmc
sub
sub
pop
and
ficoms
sub
dec
loopne
push
xchg
insb
inc
xlat
jmp
xor
movsl
and
fstpl
sub
in
aaa
and
and
mov
mov
out
data16
scas
mov
push
adc
inc
cwtl
jle
cld
mov
loopne
add
or
in
addr16
mov
in
dec
cmc
adc
jbe
cmpsl
adcl
pop
into
jecxz
into
pop
xor
xorb
sahf
cmpsl
hlt
sarl
adc
stc
mov
cmpsl
pushf
scas
lds
push
cmc
sbb
ljmp
dec
add
push
gs
xchg
xchg
adc
adc
dec
loopne
sub
sub
push
and
dec
lret
and
pop
cli
dec
test
in
xchg
outsl
mov
sbb
mov
jne
rolb
iret
enter
out
test
repz
and
add
cmp
test
rcll
gs
xchg
mov
mov
in
pop
pop
jecxz
pop
das
push
in
jns
mov
adc
in
stos
push
cmpb
mov
xlat
sub
xor
xchg
cli
test
add
jae
js
test
sbb
rsqrtps
sti
pop
push
outsl
xlat
js
inc
pop
lock
sahf
stos
rcrb
or
jl
xchg
ret
sbb
ret
orb
stc
inc
pushf
or
push
mov
xchg
xor
movsb
xchg
mov
in
sub
adcl
and
aam
or
flds
aam
adc
aad
sbb
jecxz
dec
and
inc
call
push
xchg
jo
pusha
sbb
int3
jg
mov
fisttps
arpl
out
push
push
jmp
fdivp
repz
nop
mov
loop
pop
cmpsb
mov
push
mov
std
repz
in
jmp
inc
xchg
dec
inc
ret
add
pop
pushf
push
scas
push
ja
pop
sub
ja
mov
cmpsb
filds
sub
test
pop
int
adc
xchg
mov
mov
mov
pushf
inc
adc
lods
xor
adc
push
xor
inc
xchg
xchg
lret
sti
jno
push
xchg
in
roll
stos
inc
add
and
sbb
repnz
mov
xor
inc
inc
jmp
xchg
ficomps
sub
cmp
cmp
mov
ret
es
mov
repnz
mov
ljmp
xor
out
mov
inc
enter
sbb
dec
fs
jo
decb
dec
or
add
subb
cli
mov
add
mov
and
and
jle
repnz
mov
orb
inc
dec
fcompl
dec
push
or
addb
push
cmc
inc
scas
aam
clc
dec
mov
jo
testl
jns
repnz
pop
into
add
inc
xchg
rcr
cmp
stc
jb
daa
mov
jl
sub
jle
dec
out
ret
pusha
mov
cltd
xchg
push
rcrb
xchg
sbb
fsubrl
inc
ss
enter
push
jl
xchg
sub
xchg
xchg
fiadds
mov
xor
std
push
fwait
adc
adc
push
fwait
ret
add
dec
push
aam
sahf
mov
pop
cld
stos
xchg
leave
xchg
ja
mov
fadds
inc
xchg
pop
inc
cmp
inc
hlt
hlt
outsl
into
push
cmp
stos
fsubrs
jge
inc
push
fsubs
aas
les
or
adc
sbb
mov
dec
cmp
mov
in
nop
out
pop
sub
mov
mov
test
push
hlt
cmpsb
in
nop
arpl
stos
push
push
cmp
mov
mov
lods
add
mov
mov
nop
imul
cmp
lock
inc
pop
fwait
cmp
cmp
aaa
push
ss
shlb
call
imul
add
rolb
sbb
decb
jae
lahf
fmull
shlb
aad
sti
inc
aaa
add
cli
scas
ja
int3
mov
adc
pushf
adc
push
xchg
mov
addr16
dec
or
inc
dec
mov
dec
mov
xor
outsb
add
mov
daa
mov
bound
and
add
shrb
outsl
and
sbb
jne
or
jmp
mov
xchg
andl
pop
shr
shl
mov
movl
mov
and
data16
or
js
mov
pop
or
xchg
loopne
mov
push
lret
ss
and
pop
xchg
es
pop
insb
xor
xor
lret
adc
sarl
or
repz
repz
fucomp
mov
movl
push
lea
ja
jmp
xchg
bound
repnz
mov
dec
xchg
aas
pop
xor
mov
ret
stc
jnp
gs
mull
push
dec
add
mov
jle
ds
jnp
pop
rolb
in
mov
dec
xlat
lea
sbbb
add
pop
jg
and
in
push
lcall
dec
hlt
arpl
dec
push
pop
xchg
sub
sbb
ljmp
dec
cli
xchg
fidivs
add
lea
jae
jmp
lea
jne
lahf
mov
pushf
pushf
push
pushf
lea
jmp
divl
sub
adc
mov
sub
out
adc
jne
mov
pusha
jbe
cmp
test
xor
inc
ja
repz
jbe
inc
ret
sub
hlt
ret
leave
mov
int
mov
clc
ficomps
xor
mov
iret
cwtl
arpl
repz
fbld
xor
pop
movsb
ljmp
dec
xor
movsb
imul
push
bound
add
mov
mov
negl
sti
call
pop
bound
mov
in
lcall
lret
sbb
inc
dec
movb
pop
aaa
out
stc
jp
dec
dec
push
hlt
lret
pop
ret
pop
inc
lret
jge
lahf
pusha
out
jmp
mov
mov
jecxz
stos
jns
rcr
xchg
inc
jmp
lock
pushf
lea
je
pushf
push
push
pushl
mov
pusha
mov
lea
movl
pop
pushf
mov
pop
lea
push
pushl
movl
movb
push
pushl
popl
pushf
movw
movb
pushl
pushl
ret
cmp
cld
and
adc
mov
loop
test
sbb
mov
mov
das
lea
insl
jns
mov
es
int3
mov
mov
mov
mov
xor
dec
pop
cmpsb
push
pop
push
repz
fadds
les
push
push
push
jge
nop
clc
orl
lahf
pop
out
pop
add
fwait
not
pushl
mov
adc
mov
in
incl
jbe
data16
adc
cmp
adcl
mov
scas
orb
jno
inc
dec
aas
popf
dec
fsubrl
jbe
icebp
push
or
add
mov
repz
fchs
hlt
cmp
nop
cli
inc
mov
push
in
push
sbb
lret
je
inc
das
mull
adc
pop
sub
loope
jo
lods
es
sub
aaa
mov
out
icebp
xor
pushf
aam
mov
sub
push
fnstsw
cltd
cmp
mov
scas
ja
xchg
sub
cwtl
test
mov
mov
in
mov
pop
scas
fldcw
shrl
jl
subb
inc
jbe
scas
push
sahf
cli
std
bound
and
add
imul
bnd
ret
jbe
ljmp
mov
daa
stc
rorb
lret
push
rcll
push
out
lock
inc
jmp
inc
mov
scas
cltd
inc
jp
call
mov
repnz
lret
sbb
mov
adc
nop
repz
fxch
jno
call
push
stc
cmpb
push
pusha
jmp
clc
cmp
clc
test
pusha
mov
pusha
movb
push
lea
je
push
cwtl
push
lea
call
movsl
cmp
insb
je
sbb
inc
call
fs
jb
inc
dec
push
insb
in
jmp
inc
inc
mov
test
mov
jo
xor
cmp
inc
mov
pop
scas
jmp
adc
cmp
mov
dec
mov
inc
xchg
dec
add
and
ja
mov
in
jnp
sar
jb
and
into
cmp
adc
or
cmpsl
je
repz
fimull
and
jne
pushf
not
movb
mov
mov
pusha
lea
jmp
gs
lea
call
add
hlt
popf
or
insl
gs
mov
add
lock
adc
scas
sub
mov
pusha
mov
jge
cld
jbe
repnz
sahf
std
sbb
mov
xchg
fwait
int3
mov
xchg
cwtl
lds
xor
mov
sbb
loopne
mov
sbb
lock
sub
pop
scas
repz
xor
mov
movb
jmp
push
cmp
xor
adc
adc
inc
ljmp
arpl
push
dec
aaa
ror
fneni(8087
imul
scas
jmp
fbstp
arpl
jecxz
aas
sub
sub
mov
in
dec
xor
cmc
mov
jg
fnstsw
daa
enter
mov
hlt
pop
cmc
fiadds
add
aas
jmp
sub
and
lcall
fstpt
cmp
pushf
outsl
std
mov
ljmp
es
cmpsb
push
jge
in
and
mov
inc
cmc
cmp
scas
fnstsw
inc
push
cltd
adc
inc
dec
stc
stc
xlat
movsl
adc
adcl
mov
mov
cmp
pop
add
push
daa
mov
repnz
inc
cvtdq2ps
repz
aam
sub
lea
ja
shl
xor
push
add
add
clc
rcr
sub
setge
mov
test
test
test
cmp
push
movb
lea
jb
bt
cmc
pushf
cmp
pushf
call
jmp
cmpsl
adc
inc
stos
bnd
sub
mov
sub
push
jmp
xchg
or
sbb
popf
lret
aaa
and
popf
jmp
inc
icebp
test
inc
sub
inc
fs
inc
mov
insl
add
xchg
fisubrs
repnz
repz
aam
lret
pop
jno
fs
adc
jnp
mov
sub
push
jbe
cmp
inc
mov
ss
push
insb
mov
inc
push
pushf
inc
mov
xor
fisttps
cmp
and
aam
insl
sbb
xchg
or
inc
ljmp
add
aam
stc
mov
mov
repz
aad
mov
cld
inc
jmp
ljmp
mov
popa
sub
cs
clc
ret
pushf
jge
push
jl
mov
addr16
fadd
sub
pop
cmpsl
loopne
insl
or
or
scas
in
cmc
xchg
sbb
fucomip
xor
shlb
push
jb
iret
orb
jge,pn
cmc
push
mov
addr16
or
pop
lahf
mov
icebp
in
in
jp
cli
mov
mov
fcom
pop
repz
leave
jbe
adc
repz
aad
or
add
add
add
add
add
add
hlt
cmp
add
add
and
cmp
add
add
pusha
aaa
sub
add
add
fidivrl
add
or
add
adc
add
pop
and
add
add
add
cmp
mov
imul
or
add
add
clc
sub
add
add
add
add
xchg
sub
jmp
out
xlat
loopne
repnz
mov
dec
hlt
and
repz
js
mov
sub
loopne
enter
popf
jbe
loop
test
dec
fwait
cmpsl
adc
rorb
cmp
mov
lods
and
and
jl
nop
dec
test
or
cmp
pop
dec
xchg
std
repz
call
fs
jb
or
mov
btc
lea
mov
push
stc
pushf
shr
call
mov
mov
or
cld
cmpsl
orl
mulb
scas
test
cltd
scas
push
adc
push
and
jbe
xchg
fcmove
sub
dec
cmp
nop
jb
pop
xchg
mov
pop
push
pop
or
imul
dec
call
sub
adc
hlt
push
mov
mov
ja
inc
call
fwait
lahf
out
or
popa
loop
into
and
dec
mov
fucomp
or
or
lret
push
cmpsb
mov
mov
pop
mov
nop
repz
xlat
int
xchg
lea
call
pusha
pushl
pushl
movw
adc
push
lea
jae
xchg
pop
neg
cmc
lahf
dec
pop
shld
lea
mov
rcl
shld
lea
rcl
cmp
lahf
mov
jmp
lea
call
jmp
mov
movb
pushl
popl
movb
movb
pushl
ret
stos
sub
lock
mov
or
pushf
addr16
lret
dec
icebp
rcr
out
dec
mov
into
out
xchg
mov
fstpl
pop
clc
push
xchg
aad
outsb
cmc
rcll
push
adc
sbb
movsl
jl
test
je
out
pop
imul
aas
incl
sub
sbb
mov
lds
jno
pop
data16
mov
jl
out
rcl
ret
push
test
cmp
call
pusha
pusha
call
push
lea
bswap
movsbl
push
lea
push
lea
call
mov
movsbw
bswap
pushf
mov
jmp
repz
xchg
sahf
test
cmp
push
mov
nop
inc
lcall
mov
int3
mov
and
andb
adc
into
popa
cmc
cmp
insb
lcall
xchg
addl
repnz
pusha
push
adc
stc
cwtl
mov
xchg
lea
sbb
xor
faddl
jecxz
clc
fsubl
inc
jnp
inc
dec
rcrl
push
mov
sbb
push
and
test
insb
repz
shr
xchg
mov
mov
add
or
sbb
or
sbb
je
outsb
cmp
mov
xchg
ret
mov
call
fisubrs
repnz
adc
mov
push
lods
jns
or
cmp
xchg
rol
pop
loope
and
or
mov
mov
push
std
dec
sbb
icebp
test
lock
and
xchg
mov
pop
and
repz
shrl
mov
pusha
call
jbe
adc
dec
clc
jmp
mov
jecxz
icebp
sbb
jnp
push
ss
inc
out
xor
in
push
push
aaa
ficompl
add
pop
pop
pop
xorl
sti
std
lock
and
mov
fildl
push
out
dec
adc
xchg
gs
push
xor
mov
sub
nop
call
scas
sbb
push
shll
jae
fiadds
pop
stc
adc
and
mov
cld
aam
ret
stc
out
inc
or
je
lret
test
lds
repnz
push
inc
movsb
or
fnstcw
push
inc
xor
sub
repz
shlb
mov
inc
fidivrs
pop
push
mov
lea
jmp
xor
xor
sbbl
xchg
jns
xchg
js
test
push
fimuls
je
sbbl
iret
pmuludq
jnp
cmpsl
insb
pop
jge
cmp
xchg
test
add
jno
pop
cli
stos
pusha
scas
sbb
xor
and
ret
xchg
hlt
pop
or
push
cltd
inc
sysenter
push
fwait
daa
movsb
xchg
pop
enter
xor
mov
cmp
xchg
out
and
mov
xor
cwtl
test
pushf
sub
repz
shl
loope
movsb
cmp
jp
adc
lea
mov
insl
mov
or
dec
add
mov
or
xor
mov
jbe
daa
iret
and
cmp
sbb
je
inc
mov
or
popa
and
enter
mov
dec
jmp
stos
inc
sub
lds
imul
outsl
pop
or
dec
sbb
dec
adc
adc
pop
sarl
lock
lret
out
rcll
cmp
pushf
lea
je
pusha
pusha
push
lea
jmp
lahf
not
pushf
mov
mov
call
jmp
add
dec
outsl
arpl
inc
jb
add
mov
rorl
lahf
cwtl
setno
lea
push
pusha
lea
call
jle
push
adc
pusha
jmp
shr
btr
mov
bt
pusha
bt
or
pusha
call
enter
and
xchg
ja
out
test
cmp
mov
mov
fcomip
push
ja
sbb
add
repz
test
add
xchg
fisubl
loope
push
dec
and
dec
sub
mov
mov
fidivl
or
test
in
aam
dec
inc
push
gs
xchg
fnstcw
pop
dec
mov
sahf
mov
jno
aaa
and
cld
sbb
stc
pop
mov
mov
cmpsl
or
mov
and
push
in
fstpl
fstl
add
add
push
xchg
out
inc
aas
and
test
lds
xchg
mov
jp
popa
das
mov
xchg
fistpll
push
adc
jecxz
sbb
in
push
add
inc
mov
adc
push
pop
imul
cltd
cmp
push
jg
pushf
mov
jns
in
adc
call
mov
xor
xchg
or
jecxz
xchg
inc
sub
fs
xor
lret
inc
pop
pop
dec
fdivl
push
add
sbb
or
pop
add
cmpsl
pcmpeqb
mov
xchg
cld
pop
or
lods
dec
pop
cmp
lds
dec
popf
loope
sbb
cmp
lret
pushf
add
mov
add
or
clc
and
mov
outsl
push
sbb
daa
fld
mov
adcl
push
cs
cmp
mov
sub
movsl
sarl
mov
mov
icebp
sub
enter
ret
insl
test
push
mov
into
mov
lcall
shr
ljmp
jbe
call
or
cmpb
out
jmp
fsubs
fmuls
mov
cmc
stc
pushf
shl
cmc
bt
push
jmp
or
adc
cs
cmp
or
pop
inc
or
jnp
aam
mov
or
jns
inc
movsl
imul
xor
pop
pop
imul
dec
and
out
pop
jo
jnp,pn
fidivl
dec
es
mov
pop
repnz
cmp
mov
push
dec
pushl
inc
cmc
test
jne
lods
clc
ret
xor
sti
daa
out
into
jae
or
push
hlt
in
call
push
dec
pushf
push
movb
mov
lea
jmp
mov
lea
bswap
mov
pop
pushf
jmp
pusha
pushf
pushf
fstps
mov
movb
pushf
pushf
lea
jmp
jmp
pushl
popl
pushf
pushf
movb
push
lea
jmp
push
lea
jne
pushf
mov
pusha
push
pushl
lea
jmp
pusha
cmc
xor
call
movsbw
pusha
mov
movzbw
movzbl
mov
bswap
lea
push
jmp
sbb
mov
movsbl
mov
test
add
call
sub
push
pushf
movb
pushf
lea
jmp
mov
pushf
pushf
popl
pushf
pushl
popl
mov
pushl
pushf
lea
jmp
mov
pusha
pushf
popl
pushl
pushl
popl
push
pushf
push
movw
lea
jmp
xor
sbb
mov
or
call
movb
mov
movb
jmp
pushf
call
pusha
pushf
push
movb
mov
pushf
jmp
jmp
call
jmp
mov
pushf
pushl
pushf
popl
jmp
add
pushf
mov
push
lea
jmp
fcompl
push
lea
jmp
pusha
xchg
movzbl
mov
movsbl
pushf
movzbw
mov
not
mov
lea
push
jmp
push
mov
pushf
lea
jmp
bt
shr
pushl
lea
jge
push
push
mov
pushf
pushf
mov
pushf
popl
pushf
lea
ja
pushf
mov
pushl
popl
push
lea
jmp
mov
not
lea
lea
push
movzbw
bswap
push
repz
popl
bsf
sub
inc
and
push
bsr
movzbw
call
shld
lea
test
sub
neg
dec
mov
and
bswap
not
dec
mov
sar
sbb
bswap
sar
add
ror
setb
mov
movzbw
stc
xor
dec
add
jmp
cmp
add
call
pushf
add
push
pushf
call
cmp
xchg
cltd
rdtsc
cmc
cmc
sub
push
pusha
pushl
lea
js
mov
pushf
call
pushl
popl
push
pusha
movw
movb
lea
jmp
ror
mov
or
mov
pushf
std
pushl
popf
movb
pushf
movb
lea
jmp
pushf
sub
push
cmp
pushf
test
xor
cmc
ror
call
pushf
fdivl
pusha
pusha
lea
jmp
add
btr
mov
shrd
sbb
sbb
bswap
mov
neg
mov
pushl
popl
and
sbb
movl
call
mov
jmp
mov
mov
pusha
movw
push
lea
jmp
push
lea
jg
push
mov
mov
jmp
inc
push
cmp
movsbl
bsr
lea
pushl
cmc
pushf
cmp
sub
push
movw
pushf
pushf
lea
jmp
mov
mov
movb
push
lea
jmp
xor
stc
movb
clc
cmp
add
pushf
jmp
ror
movb
bswap
cmc
xor
test
cmc
pushf
xor
pushf
sub
jmp
mov
pushf
push
push
lea
jmp
xchg
bswap
mov
pusha
cld
lea
je
push
rep
or
pop
pop
mov
pop
clc
clc
popf
pushf
push
push
pusha
lea
jmp
push
repz
popl
xor
pop
pushf
pusha
mov
rol
neg
rcl
add
mov
call
push
call
mov
movsbw
lea
push
call
clc
jmp
jmp
ror
pushf
mov
mov
cmc
add
push
pusha
lea
jmp
mov
pushl
pushf
lea
jmp
mov
jmp
jge
sub
test
mov
rol
inc
rcl
ror
mov
pushf
not
clc
test
bt
not
stc
call
jmp
inc
xchg
clc
ror
mov
inc
mov
jmp
xor
test
cmc
stc
stc
sub
jmp
pushf
push
call
clc
sub
pushf
pushf
shl
jmp
mov
pushf
mov
pushf
jmp
call
mov
movsbw
pusha
jmp
pushl
popl
mov
mov
movl
lea
jmp
clc
cmc
test
and
call
mov
not
movzbw
jmp
lea
bswap
inc
cmp
lea
or
sbb
bts
shrd
sub
rol
not
sets
mov
jmp
mov
lea
je
push
clc
xor
jmp
push
pusha
pushf
mov
pop
jmp
xor
test
add
bt
call
clc
shrd
push
mov
jmp
bswap
repz
shr
rcr
bsf
movsbw
push
adc
bswap
xor
push
not
and
rcl
pushf
mov
and
rol
push
or
bswap
bts
pushl
cmc
sar
cmp
pusha
movl
shl
shl
pushf
mov
shl
xor
call
sub
jmp
lea
mov
and
shr
mov
mov
push
cmp
movb
pusha
add
push
pushf
call
mov
pushf
lea
jmp
mov
push
lea
jmp
jmp
pop
not
push
push
lea
movl
mov
movsbw
push
bswap
jmp
push
pushf
popl
jmp
mov
shl
mov
clc
test
xor
push
push
dec
clc
sub
jne
cmp
pusha
xor
stc
push
pushf
movb
ror
cmc
bt
jmp
jmp
pushf
popl
push
push
movb
pushl
popl
pusha
lea
jmp
sub
movb
mov
pushf
movl
pushf
mov
lea
jmp
add
rcr
ror
not
inc
adc
push
adc
lea
bt
stc
pushf
cmp
sub
pushf
movb
lea
jmp
bt
stc
ror
pushf
xor
cmc
add
pushl
test
clc
mov
sub
jmp
ror
xor
shl
neg
push
inc
and
btc
add
sbb
bsf
bswap
adc
movzbl
and
shld
sbb
mov
cmp
cmp
clc
pushl
xor
cmc
pushf
cmp
add
pushf
mov
movl
mov
pushf
pushf
movb
pushf
pushl
ret
pushf
popl
lea
jae
push
pusha
movw
pushl
popl
pushf
movw
mov
lea
jmp
pusha
mov
lea
mov
mov
lea
mov
pop
not
movsbl
jmp
shr
call
rdtsc
movsbw
daa
mov
neg
cmp
btr
mov
sar
mov
stc
cmc
cmc
test
add
bt
shld
call
test
mov
xchg
rol
movzbl
cmp
setle
dec
add
add
not
not
mov
pusha
inc
jmp
pushf
popl
push
pushl
popl
movb
lea
jmp
jmp
mov
cld
stc
mov
lahf
clc
pop
ror
mov
dec
bsf
mov
bswap
xchg
mov
xadd
add
jae
rcr
sub
popf
lea
lea
pushf
mov
pusha
setnp
call
push
pushl
mov
movsbw
pushf
mov
mov
not
mov
call
pushf
mov
jmp
dec
bswap
mov
jge
mov
test
add
pushf
mov
pushf
lea
jle
mov
push
mov
lea
jmp
not
rol
btr
mov
jmp
push
mov
call
pushf
movb
mov
push
xchg
pop
pusha
call
pushf
popl
mov
pushl
popl
pushl
lea
jmp
jmp
movzbw
push
movsbw
repz
adc
movsbl
cmc
test
push
pushf
pusha
xchg
cmc
or
mov
xor
pop
movsbw
mov
pop
ror
shrd
pushl
popl
rcl
movl
or
test
mov
stc
rcr
add
push
call
pusha
jmp
call
pushl
mov
pushf
pusha
lea
jmp
rcl
sub
inc
mov
cmp
pusha
push
mov
add
pushl
mov
push
pushf
lea
jmp
jmp
call
lea
ja
sbb
bt
mov
adc
jl
aam
lea
not
xchg
sub
cmp
shld
lea
jmp
inc
adc
bsf
inc
add
lea
cmp
bt
bt
test
sub
pushf
pushl
push
lea
jmp
mov
pusha
push
mov
lea
jmp
pusha
mov
pusha
bswap
pop
mov
lea
mov
pushf
lea
push
not
lea
call
or
pushl
popl
shrd
mov
ror
movsbw
movl
not
pop
lea
jp
test
mov
jmp
call
call
push
pusha
jmp
cmp
sub
push
stc
stc
jmp
rol
shld
mov
inc
ror
test
bt
mov
push
call
jmp
pusha
mov
movb
mov
movsbl
pushf
mov
pusha
movsbw
mov
mov
lea
jl
push
pushf
repz
popl
shld
push
jmp
call
pusha
xchg
jmp
add
jmp
lea
bt
xor
call
call
not
mov
lea
push
movsbl
repz
bsr
clc
bts
push
ror
bt
push
jmp
movw
mov
jmp
mov
pusha
pushl
lea
jmp
pop
lea
inc
cmp
shld
bswap
sar
mov
pushf
mov
sub
pusha
lea
jmp
mov
bsr
btc
bt
btr
add
bts
cmc
lea
bswap
ror
pushf
inc
sbb
lea
test
jmp
call
pop
push
lea
jmp
not
movzbw
mov
movsbw
mov
pushf
jmp
movl
call
sub
jo
pushf
sub
call
lea
mov
rcl
add
mov
cmp
mov
clc
add
jmp
pushl
popl
stc
pusha
movl
add
jg
bt
test
or
mov
movsbw
not
add
mov
movzbw
ror
not
bswap
inc
mov
inc
rcl
movzbw
movsbw
mov
clc
sub
pusha
pushl
push
mov
lea
jmp
pushf
movw
mov
not
movw
lea
jmp
repz
popl
shld
push
pushf
xchg
rol
push
shr
rcr
push
neg
sub
btc
pushl
btc
movzbl
bswap
push
and
not
xchg
mov
movsbl
add
ror
pushf
ror
jmp
sub
mov
pusha
mov
mov
mov
movzbl
pushf
pusha
movw
pushl
mov
lea
lea
mov
push
movsbw
lea
jmp
push
pusha
sub
clc
shl
jmp
jmp
bt
cmc
pushl
popf
mov
movl
mov
lea
jmp
bswap
inc
shld
movw
sar
rcr
lea
bt
sub
pusha
movb
pushf
lea
jmp
stc
stc
jmp
repz
popl
bt
not
adc
push
test
push
lea
movsbl
push
push
shrd
mov
cmp
rol
dec
pushl
shrd
push
jmp
lea
push
jmp
mov
mov
call
ror
push
rcr
xor
btr
neg
movw
shl
or
movzbw
add
btc
mov
cmp
pushf
lea
call
pushf
pushf
movl
mov
not
pusha
pop
mov
push
bswap
mov
push
lea
lea
push
jmp
lea
jne
popl
pushf
movb
movb
lea
jmp
bts
clc
rol
ror
pop
movsbw
pusha
inc
btc
shrd
lea
call
mov
movl
pushl
popl
pushl
pushl
pushl
pushl
lea
jmp
and
pushf
mov
push
sub
lea
jg
push
push
pusha
mov
push
lea
jmp
pusha
call
lea
repz
bt
not
push
dec
shld
pushf
xchg
bts
ror
cmp
push
pushf
mov
bswap
push
call
xchg
pushf
jmp
pushf
inc
jmp
add
add
mov
movb
lea
jmp
bsf
and
movsbw
pushl
popl
shl
pushf
movl
neg
bswap
pusha
shl
mov
cmc
add
movsbl
add
not
not
cmc
ror
call
shr
push
mov
jmp
add
jmp
pusha
mov
sub
push
jmp
xchg
push
mov
call
jmp
test
mov
clc
jmp
call
mov
push
lea
jmp
shl
add
add
xchg
movsbw
clc
sets
ror
inc
call
call
ror
push
bts
movzww
pushf
jmp
push
sub
mov
pushl
mov
mov
pushf
pushl
lea
jmp
push
mov
pushf
push
movb
pushf
lea
jmp
pushl
mov
btr
shr
xadd
pushl
popl
sbb
push
sar
shrd
and
mov
pushf
sar
bts
pop
add
bts
btr
movsbw
rcr
ror
movzbw
pushf
jmp
std
mov
lea
bswap
std
movzbw
mov
pushl
cld
call
clc
pusha
sub
test
cmp
pushf
movw
cmpl
mov
call
pusha
call
lea
call
pushf
divl
pusha
mov
mov
call
pushl
popl
cmp
pusha
pusha
add
cmp
jmp
call
push
pushl
popl
push
pusha
pushf
lea
jmp
not
bswap
mov
lea
pushf
call
pushl
popf
pushf
pushl
push
lea
jmp
not
mov
mov
movzbw
movzbw
lea
push
pushf
movzbw
pushf
lea
repz
popl
sbb
bt
mov
xor
sbb
push
test
xchg
shld
not
push
pusha
mov
mov
movl
xor
shl
pushl
popl
dec
bts
shl
test
movl
shld
mov
sub
add
call
jmp
mov
add
rol
shl
pop
mov
xadd
add
pushl
popl
xadd
movl
bt
not
sub
mov
shr
bswap
bts
and
add
ror
lea
ror
not
pusha
movsbw
inc
inc
test
and
lea
jmp
mov
pushl
popl
pushl
pushf
lea
jmp
pushl
jmp
cmp
add
jmp
pushf
cmc
bt
xor
call
bts
das
clc
mov
jl
rcr
or
mov
cmc
cmp
clc
sub
clc
call
btc
test
aaa
sub
mov
shr
mov
stc
jmp
rdtsc
cmp
dec
mov
inc
mov
stc
sub
jmp
call
push
btr
mov
test
bswap
jmp
repz
add
push
shrd
rcl
mov
push
inc
test
push
mov
mov
bts
mov
pushf
mov
shld
pushl
ror
shl
push
neg
sub
not
shr
mov
and
movzbw
dec
ror
add
btr
ror
lea
not
not
jmp
pushl
pushl
popl
push
push
lea
jmp
cmp
shld
sar
lea
popf
pusha
setae
jmp
jmp
jmp
fnstsw
pusha
call
bt
bt
ror
bt
pushf
cmc
sub
jp
xor
bt
push
clc
cbtw
bt
clc
pushf
stc
cwtl
pushf
bt
sub
pushf
mov
pushf
lea
jmp
sub
dec
ror
movzbw
bt
mov
jmp
daa
dec
shl
lahf
mov
shl
shr
mov
push
call
shrd
neg
movsbw
sets
inc
movzbw
add
bt
shr
movzbl
shl
bts
pop
mov
push
pushf
jmp
push
mov
mov
mov
pushf
mov
push
xchg
mov
xchg
push
lea
push
setbe
not
repz
cmc
xchg
push
jge
pusha
xadd
mov
jmp
pusha
movb
mov
call
ror
rcl
sar
push
xchg
dec
stc
shld
push
call
aaa
push
neg
daa
mov
cmp
sub
call
jmp
mov
sbb
popa
xchg
arpl
pop
mov
xchg
popf
popa
xchg
pop
mov
popa
xchg
and
popa
xchg
and
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
mov
popa
xchg
or
popa
xchg
lahf
mov
icebp
xchg
cmp
popa
xchg
dec
mov
xchg
and
in
popa
xchg
sbb
mov
xchg
stos
mov
xchg
and
popa
xchg
sub
popa
xchg
dec
mov
xchg
sub
popa
xchg
jno
popa
xchg
stos
mov
xchg
fwait
popa
xchg
je
popa
xchg
pop
mov
cltd
popaw
xchg
jl
popa
xchg
sbb
xchg
fstpl
popa
xchg
mov
mull
xchg
mov
popa
xchg
sbb
popa
xchg
jp
popa
xchg
out
popa
xchg
sub
popa
xchg
arpl
sbb
xchg
mov
mov
fstpl
popa
xchg
push
xchg
popa
xchg
mov
mov
xchg
and
xchg
stos
mov
xchg
and
popa
xchg
and
popa
xchg
fwait
popa
xchg
xchg
popa
xchg
pop
mov
push
xchg
popa
xchg
icebp
xchg
and
popa
xchg
and
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
sbb
mov
popa
xchg
mull
xchg
lahf
mov
mov
mov
popa
xchg
sbb
xchg
jp
popa
xchg
lahf
mov
push
sahf
popa
xchg
icebp
xchg
mov
popa
xchg
icebp
xchg
mov
xchg
popa
xchg
clc
cltd
popa
xchg
fstpl
popa
xchg
cwtl
mov
popa
xchg
sub
popa
xchg
push
xchg
popa
xchg
mov
popa
xchg
jno
popa
xchg
cltd
lahf
popa
xchg
testl
popa
xchg
push
xchg
popa
xchg
push
xchg
popa
xchg
xor
popa
xchg
pop
mov
inc
andl
pusha
popa
xchg
xchg
popf
popa
xchg
call
mov
out
popa
xchg
xchg
popa
xchg
push
mov
xchg
stos
mov
xchg
jno
popa
xchg
in
popa
xchg
jno
popa
xchg
pop
mov
popa
xchg
inc
mov
or
popa
xchg
popa
mov
popa
xchg
and
popa
xchg
and
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
sub
popa
xchg
and
popa
xchg
mull
xchg
mov
popf
popa
xchg
pop
mov
popa
xchg
cltd
popaw
xchg
sub
popa
xchg
inc
mov
lahf
mov
and
xchg
cltd
lahf
popa
xchg
in
popa
xchg
sub
popa
xchg
inc
andl
fwait
popa
xchg
inc
mov
dec
mov
xchg
and
xchg
popf
popa
xchg
pop
mov
popa
xchg
mov
lahf
mov
xor
popa
xchg
stos
mov
xchg
inc
andl
mov
popa
xchg
mov
popa
xchg
ret
xchg
push
xchg
popa
xchg
sub
popa
xchg
sub
popa
xchg
jno
popa
xchg
xchg
popf
popa
xchg
sbb
xchg
pop
mov
popa
xchg
xchg
popf
popa
xchg
pop
mov
popa
xchg
clc
cltd
popa
xchg
inc
andl
xchg
popa
xchg
dec
mov
xchg
add
popa
xchg
clc
cltd
popa
xchg
and
popa
xchg
and
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
movsb
xchg
popa
xchg
ret
xchg
mov
popa
xchg
cltd
popaw
xchg
dec
mov
xchg
mov
popa
xchg
sbb
xchg
popa
xchg
arpl
mov
or
popa
xchg
inc
mov
or
popa
xchg
or
popa
xchg
sbb
popa
xchg
push
xchg
popa
xchg
fstpl
popa
xchg
mov
mov
xchg
pop
mov
popa
xchg
xchg
mov
popa
xchg
pop
mov
inc
mov
sbb
mov
pop
mov
popa
xchg
and
xchg
arpl
sub
popa
xchg
sbb
xchg
xchg
popa
xchg
sub
popa
xchg
jno
popa
xchg
in
popa
xchg
sub
popa
xchg
inc
mov
push
xchg
popa
xchg
add
popa
xchg
xchg
mov
xchg
idiv
call
add
ja
jmp
inc
add
push
lea
jmp
stc
mov
bt
clc
add
pusha
mov
jmp
repz
neg
and
rcr
bsr
push
bt
push
lea
push
rcr
push
cmc
xadd
rcl
not
pushl
bsf
shrd
pushf
movl
xchg
stc
mov
rcl
adc
add
btc
bt
call
push
pushf
mov
pushf
not
lea
movzbw
mov
jmp
jmp
bt
pushl
mov
jmp
mov
mov
push
push
lea
jmp
pushf
lea
jg
pusha
mov
movb
pusha
lea
jmp
test
pushf
pushf
not
call
jmp
pushf
pushf
mov
call
sub
push
xchg
call
shl
pushf
pusha
jmp
pusha
jmp
mov
pushl
jmp
stc
cmc
bts
mov
pusha
test
cmc
cmc
sub
jmp
pusha
mov
mov
lea
jmp
mov
movsbw
movsbw
pushf
bswap
mov
push
not
call
call
lea
jne
inc
mov
push
mov
and
cmp
cmc
movw
cmp
pusha
jmp
pushf
popl
lea
jns
push
pushl
popl
pushf
push
pushf
lea
jmp
movb
jmp
pusha
mov
clc
call
pushf
lea
push
call
call
pusha
xor
rcr
call
jmp
inc
sar
sub
mov
lea
cmp
cmp
test
pushf
sub
pusha
pusha
lea
jmp
jmp
call
pushf
popl
call
cmc
pusha
mov
pushf
btc
not
inc
xor
mov
pusha
dec
and
lea
xor
bt
clc
bt
ror
setbe
movzbw
cmp
sbb
xor
bswap
bt
movzbl
call
call
push
mov
call
add
cmc
xor
bt
clc
not
cmp
cmc
stc
push
xor
cmc
cmc
bt
pushf
cwtl
call
setg
jmp
cmp
push
cmp
sub
lea
jge
pusha
mov
pusha
pushf
movw
lea
jmp
lea
movsbw
pusha
pushl
mov
pushl
mov
movb
mov
pushf
pushf
mov
movb
mov
lea
jmp
jmp
mov
mov
push
lea
jmp
ror
jmp
lahf
mov
call
movb
mov
mov
lea
jmp
or
rcl
shrd
mov
btc
pusha
add
push
rcl
ror
call
pusha
mov
mov
lea
jmp
bswap
pushf
popl
cld
pushf
pusha
pushf
mov
cld
xchg
not
pushl
mov
cld
cld
jmp
push
clc
sub
jmp
mov
dec
mov
pushf
test
jmp
push
call
sub
movb
pushf
jmp
xor
mov
jmp
sbb
bsf
lea
lahf
stc
ror
shl
sub
das
lea
or
dec
clc
shld
and
bsf
movzbw
bsr
sub
bswap
jmp
pushl
popl
pusha
push
mov
push
lea
jmp
cbtw
stc
cwtl
clc
cmc
sub
pushf
call
jmp
call
movzbl
pushf
jmp
call
pusha
xchg
pushf
pushl
movsbw
mov
jmp
inc
movsbw
push
and
jmp
inc
mov
mov
push
sub
push
pusha
push
push
lea
jmp
lea
jle
sub
clc
clc
pushf
and
push
mov
pushf
call
cmp
shr
mov
stc
clc
pusha
pushl
add
jmp
clc
pushl
popf
mov
pushf
movb
pushf
lea
jmp
movw
bts
ror
not
inc
pusha
lea
cmc
mov
movb
sub
pushf
pushf
mov
lea
jmp
pushf
lea
cpuid
cmc
jmp
setp
movzbw
sete
inc
movzbw
xor
rcr
setno
rol
shl
adc
and
bsr
mov
jmp
lea
bswap
mov
movzbw
mov
call
test
pushf
shr
add
push
pusha
mov
jmp
test
add
pushf
lea
jb
pushf
mov
mov
mov
pushf
lea
jmp
mov
push
lea
jmp
call
stc
call
pushf
xchg
movsbw
movzbw
bswap
mov
mov
bswap
call
dec
bswap
inc
rcr
shr
dec
shld
xor
stc
not
not
rol
cmc
rcr
pusha
bts
and
pusha
not
sbb
shl
mov
stc
stc
jmp
pushl
popl
movw
pushf
pusha
lea
jmp
pushf
mov
movb
lea
jmp
stc
cmc
imul
pusha
lea
jne
pushf
pusha
mov
call
call
bts
sar
push
shl
rol
lea
adc
push
push
pushl
popl
dec
neg
xor
push
lea
adc
mov
sbb
add
stc
ror
movsbw
bswap
movzbl
not
inc
shld
rcr
btr
mov
cmc
js
sub
pushf
push
lea
jmp
push
pushf
popl
jmp
call
lea
push
movzbw
movsbw
repz
btr
push
sbb
push
pusha
jmp
push
pusha
and
call
inc
mov
lea
stc
stc
sub
push
pushl
pusha
movb
lea
jmp
push
jmp
mov
push
pushf
pusha
movw
lea
jmp
lea
jmp
pushf
mov
pusha
jmp
pusha
lea
jle
pushf
pusha
rep
pushf
ror
mov
movsbw
sbb
movzbl
not
mov
clc
clc
pushl
popf
push
pushf
pushl
lea
jmp
clc
clc
sub
pushf
pushf
movb
movb
lea
jmp
pushl
popf
pushf
pushf
pushf
pushl
lea
jmp
push
mov
pushf
pushf
pushl
ret
bswap
mov
pop
push
pushf
not
mov
mov
mov
pushf
pushl
ret
pusha
das
movzbw
mov
pushl
rcr
btr
movzbw
mov
stc
not
cmc
stc
pusha
not
pushl
cmp
test
sub
jmp
lea
pop
inc
inc
shl
bswap
lea
call
push
pushf
lea
jne
jmp
xorb
lea
movzbw
jmp
mov
pushf
call
clc
call
pusha
push
mov
pusha
lea
jmp
call
rol
mov
cmc
add
pushl
call
mov
mov
pop
bswap
movzbw
mov
push
call
push
pushf
mov
pushl
pushf
pushf
mov
lea
jmp
call
bswap
sbb
push
mov
xor
btr
and
shl
xchg
jmp
mov
pushf
pushf
popl
call
mov
jmp
pusha
pushf
popl
mov
mov
call
pushf
popl
pushf
pushl
popl
pushf
mov
pushf
lea
jmp
pushl
call
pushf
pusha
mov
pusha
lea
jmp
pushf
pushf
pushf
popl
jmp
bsr
jmp
sub
push
pusha
lea
jmp
rep
bt
xor
mov
rol
mov
jmp
jmp
ror
cmp
clc
cmc
clc
neg
mov
clc
cmc
sub
push
push
mov
mov
add
cmc
pushf
stc
push
mov
jmp
rep
std
call
pusha
pushl
popl
mov
push
lea
jmp
lea
push
pusha
lea
repz
popl
bswap
adc
or
neg
mov
bswap
xor
add
and
mov
stc
mov
neg
not
mov
pusha
btc
pushl
popl
and
movl
test
neg
shl
bsr
mov
shld
cmc
jmp
call
push
push
pushf
pusha
rep
bt
mov
bt
mov
call
mov
mov
pushl
pushf
lea
jmp
bts
shl
adc
mov
push
cltd
aam
mov
xchg
lahf
clc
call
push
pusha
pusha
call
sub
test
call
xor
mov
setnp
cmc
jmp
pushf
push
pushl
lea
jle
mov
pushf
lea
jmp
stc
pusha
push
add
jmp
jmp
call
std
mov
bswap
push
mov
pushf
pop
movsbw
lea
pushf
mov
lea
pusha
mov
mov
cld
call
sub
stc
cmc
clc
sub
pusha
test
cmp
mov
push
bt
jmp
pop
push
ror
inc
jmp
call
mov
setle
lea
setne
bts
ror
inc
sub
rcr
setge
neg
not
inc
inc
push
adc
movsbl
adc
add
neg
shr
bts
movzbl
bt
mov
pusha
mov
xor
pushf
add
pushf
mov
push
pushl
ret
shl
mov
and
add
rol
movzbl
ror
ror
lea
dec
inc
not
shl
lea
pusha
test
pushl
sub
pushf
movb
pusha
mov
lea
jmp
sub
shl
rcr
test
mov
call
mov
movsbw
push
pusha
pushf
not
lea
push
movsbl
jmp
mov
push
push
movb
mov
lea
jmp
pushf
sub
pusha
pushf
pushf
lea
jmp
jmp
call
xadd
rcr
pusha
mov
ror
mov
bt
sub
clc
stc
stc
clc
shl
call
pusha
mov
mov
mov
mov
pushf
push
pushf
lea
jmp
stc
lea
call
pushf
popl
push
pushl
popl
pushl
movw
movb
lea
jmp
shld
lahf
movzww
cmc
push
movb
xchg
bt
cmp
cmc
xor
pusha
call
dec
pusha
setns
mov
cmc
test
clc
clc
sub
pusha
add
pushf
pushf
pushf
popl
pushl
call
cmc
jmp
movb
pushl
popl
mov
pushf
pushf
lea
jmp
sub
pushf
movw
lea
jmp
movb
jmp
dec
rcr
bts
push
sar
xchg
bswap
shr
push
btr
bt
mov
setg
push
adc
shld
and
pusha
pushl
popl
xor
lea
dec
movl
xor
pushf
mov
rol
add
bswap
btr
ror
ror
not
inc
call
clc
add
pushf
movsbw
clc
cmc
ror
call
pushf
add
call
not
bt
movl
test
cmc
not
pushl
movb
and
call
push
mov
mov
mov
lea
jmp
jb
push
pusha
lea
pushf
push
mov
pushl
jmp
pushf
popl
call
cmc
add
sub
dec
rol
ror
mov
bts
or
add
movsbw
bswap
not
lea
jmp
xor
clc
jmp
push
push
mov
pushl
pushl
jmp
adc
call
jmp
pushl
mov
flds
pusha
pushf
lea
jmp
pushl
bt
lea
mov
stc
mov
cmp
or
jmp
jmp
jmp
xadd
shl
cmp
sbb
lea
rcl
sub
and
or
neg
sub
pushf
call
pushl
popl
pushf
lea
jmp
pushf
mov
lea
lea
not
movzbw
mov
mov
pusha
mov
lea
pushf
lea
push
not
mov
not
repz
not
btc
bswap
cmp
push
shr
rcl
adc
push
btc
sar
shr
ror
push
or
shl
push
test
stc
add
pushl
movsbw
adc
push
xadd
pusha
mov
not
add
lea
push
pop
bswap
ror
pop
not
dec
not
inc
not
pop
lea
pushf
test
jmp
dec
cltd
mov
xor
mov
pusha
jmp
cmc
bt
mov
sbb
btr
shr
shrd
mov
cmp
add
pusha
jmp
jmp
stc
cmp
add
push
pushf
mov
mov
push
pushl
push
lea
jmp
pusha
lea
jne
test
call
lea
push
mov
xchg
movsbw
movsbw
mov
mov
movsbw
lea
pusha
std
std
std
mov
push
lea
mov
cld
pushf
pushf
std
cld
push
pushf
rep
pop
bswap
shrd
mov
movsbw
sub
mov
cmp
stc
test
call
rcl
or
mov
cmp
jmp
jmp
call
pushl
popl
pushf
pushf
lea
jmp
shrd
add
mov
movzbl
neg
movzbw
mov
call
fmull
pushl
lea
jmp
jmp
call
jmp
pushf
mov
bswap
mov
movzbw
pushf
jmp
adc
cmc
btc
shl
lea
cmc
bt
pusha
lea
jp
cmp
jmp
sbb
mov
pusha
neg
movzbl
rcr
push
bt
call
jmp
pusha
mov
pushf
movw
pushf
mov
pushl
jmp
add
add
lea
jmp
and
push
movl
mov
pushf
pushf
pushf
popl
call
and
bt
mov
rol
bswap
ror
add
ror
ror
inc
movzbw
pusha
inc
neg
or
lea
test
sub
pusha
mov
pushf
lea
jmp
setne
pushf
ror
xchg
bswap
inc
rcl
sbb
lea
rcl
inc
bsf
sub
btc
lea
rcl
shr
mov
movsbw
neg
mov
rol
add
cmp
shl
shl
or
mov
jmp
call
jmp
pushl
popl
pushl
pushf
pushf
push
lea
jmp
pushf
popl
pushl
mov
push
pushf
pushl
popl
pushf
lea
jmp
mov
mov
call
bswap
mov
rcr
dec
cmp
mov
cmc
bt
sub
cmc
cmp
call
lea
push
movsbw
jmp
bswap
lea
bswap
pusha
mov
movzbw
mov
pushl
call
bswap
mov
push
push
mov
call
pusha
push
pusha
mov
pop
lea
not
mov
pop
pop
movsbl
mov
push
pop
lea
pop
lea
push
mov
pusha
repz
popl
cmp
pop
shrd
bsf
mov
rcr
shld
mov
dec
movsbl
xor
mov
pushf
btr
adc
mov
add
not
or
or
pushl
popl
xor
rcr
movl
movzbw
test
shrd
mov
mov
rol
add
pushf
ror
jmp
bt
rcl
mov
sar
mov
add
call
neg
mov
stc
jmp
jmp
repz
popl
stc
test
push
inc
cmp
push
xchg
adc
stc
push
xadd
rcl
push
call
pusha
mov
pushf
mov
mov
lea
jmp
test
sub
pushf
movb
movb
lea
jmp
jmp
mov
bt
add
jmp
pusha
pushf
pushl
dec
mov
xor
pushl
pushf
dec
call
movsbw
repz
sbb
movzbw
add
push
cmp
test
push
not
sar
push
inc
movzbl
test
push
test
and
pushl
cmp
rol
sar
push
bsf
add
mov
rcr
shr
add
call
bsf
push
movsbw
add
btc
pop
lea
not
btr
ror
ror
call
push
mov
pusha
jmp
jmp
movsbw
not
repz
rcr
sub
movsbw
shl
push
shld
movsbl
push
sub
stc
push
shrd
bt
shrd
clc
push
push
dec
not
xchg
pushl
popl
lea
inc
bts
stc
push
btc
mov
neg
add
rcr
rcr
ror
not
not
bswap
inc
adc
mov
push
sub
pusha
pushl
push
lea
jmp
cmc
push
bt
cmc
xor
test
bt
jmp
mov
pushl
pushf
popl
push
lea
jno
pushf
mov
pushl
popl
pusha
movw
movb
lea
jmp
call
cmp
push
jmp
sub
sbb
xor
inc
add
bts
ror
test
cmp
pushl
sub
btc
cmc
seto
jmp
or
mov
stc
btc
inc
add
inc
not
sar
xor
inc
bt
neg
mov
test
shl
pusha
test
shr
cmp
or
cmc
xor
movw
inc
pushf
call
pushf
movb
decl
push
mov
lea
jno
jne
push
pusha
pushf
mov
pushf
lea
jmp
pusha
movl
pushl
mov
push
push
push
pushf
pushl
ret
pusha
sub
jmp
ror
rol
push
mov
pop
shld
mov
pusha
add
mov
mov
push
pusha
mov
lea
jmp
mov
pusha
pushl
ret
daa
rcr
notl
shrd
mov
test
sub
push
and
call
mov
inc
bt
push
push
mov
shr
test
cmp
stc
pushl
jmp
pushf
call
mov
movw
lea
jmp
mov
test
cmc
bt
sub
push
pushf
jmp
jmp
mov
jmp
inc
push
pop
inc
push
lea
pusha
sub
pushf
pusha
lea
jmp
mov
pushl
call
xchg
cmc
stc
call
cmp
clc
pusha
cmp
cmp
pushf
lea
ja
push
lea
btc
bt
shl
rcr
lea
bt
lahf
aad
sub
sub
ja
sar
lea
shld
test
bt
bswap
and
shld
cmc
shl
sub
not
movzbl
mov
lea
pushf
push
pushf
call
jmp
jmp
bswap
mov
pushf
lea
push
push
movsbw
pop
call
clc
call
add
add
add
add
add
pop
adc
cmp
scas
add
add
cwtl
add
loopne
add
add
add
or
add
lods
inc
push
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
add
dec
push
add
dec
push
add
dec
push
add
push
add
push
add
push
add
dec
push
add
push
add
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
push
add
push
add
push
add
dec
push
add
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
push
add
push
add
dec
push
add
dec
push
add
add
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
add
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
push
add
push
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
add
push
push
add
push
add
pop
push
add
pop
push
add
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
push
add
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pop
push
add
push
add
pop
push
add
add
push
add
pop
push
add
pop
push
add
pop
push
add
push
add
pusha
push
add
pusha
push
add
popa
push
add
popa
push
add
bound
add
push
add
add
push
add
arpl
add
arpl
add
add
gs
add
push
add
push
add
pushw
add
pushw
add
addr16
add
addr16
add
push
push
add
imul
add
push
add
imul
xor
add
push
add
imul
pop
insb
push
add
insb
push
add
push
add
insb
push
add
insb
push
add
insl
push
add
push
add
sub
ret
test
daa
add
out
sub
add
or
add
or
add
or
add
sub
