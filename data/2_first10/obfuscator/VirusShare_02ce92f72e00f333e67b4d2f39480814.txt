add
add
call
add
cld
xor
add
add
jo
add
jg
add
nop
xor
add
xor
add
xor
add
xor
add
add
add
jb
gs
xor
cs
insb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
add
gs
je
push
jb
arpl
jae
add
add
imul
jae
add
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
lea
push
mov
push
call
sti
add
pop
xor
add
add
jg
add
nop
xor
add
xor
add
xor
add
xor
add
add
add
cld
pop
pop
ret
mov
push
mov
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
pop
ret
lea
push
mov
push
mov
mov
mov
add
mov
add
mov
add
mov
pop
pop
ret
nop
jmp
inc
cmpb
jne
inc
ret
mov
add
ret
push
mov
add
push
push
push
mov
add
mov
mov
cmpl
jne
call
mov
call
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
add
mov
add
mov
nop
nop
jmp
and
inc
cli
dec
push
inc
dec
jmp
jmp
inc
decb
add
add
jmp
jb
push
hlt
jmp
dec
mov
jmp
jmp
inc
push
gs
test
inc
fnsave
data16
push
inc
loope
jb
popa
jmp
inc
movl
jmp
mov
inc
jmp
jmp
jbe
movl
jmp
inc
fldpi
add
jmp
test
add
pushl
jmp
add
push
aam
add
add
add
push
jmp
repz
jmp
add
jmp
xor
add
int
jmp
gs
jmp
mov
inc
int3
dec
dec
push
inc
jmp
push
movl
jmp
loopne
shr
jmp
inc
mov
add
mov
jmp
xor
mov
mov
inc
movsb
jmp
rorb
mov
jmp
jmp
add
add
mov
jmp
decl
test
jb
inc
mov
inc
mov
add
add
mov
jmp
add
inc
mov
add
add
add
movw
jmp
call
add
jmp
mov
call
inc
mov
add
push
push
push
push
lea
push
push
call
test
jne
push
call
mov
push
call
mov
push
call
mov
mov
add
mov
mov
mov
dec
test
jb
inc
movl
cmpl
je
mov
add
mov
add
push
push
call
add
add
incl
dec
jne
push
push
mov
mov
push
push
call
mov
mov
mov
add
mov
push
push
call
add
mov
jmp
lea
push
call
mov
cmpl
jne
push
call
mov
mov
call
mov
mov
add
mov
test
jbe
mov
movl
testl
jne
movzwl
push
mov
push
call
mov
mov
call
mov
jmp
push
mov
push
call
mov
mov
call
mov
add
incl
dec
jne
mov
cmpl
jne
jmp
add
decl
je
decl
and
push
push
mov
push
call
jmp
add
decl
je
incl
or
jmp
add
call
inc
push
mov
push
call
jmp
xchg
imul
mov
jmp
je
xchg
insb
decl
add
add
rclb
add
mov
mov
mov
jmp
inc
mov
mov
mov
jmp
inc
add
jmp
test
decl
jmp
jecxz
xchg
insb
decl
add
add
int3
pop
pop
pop
mov
pop
ret
nop
push
mov
push
push
push
mov
push
mov
pop
mov
pop
pop
pop
pop
mov
jmp
and
dec
mov
push
push
jmp
cmp
pop
pop
jmp
and
adc
call
pusha
je
jne
sub
test
shrd
test
sub
mov
mov
xadd
mov
adc
sub
mov
and
btr
imul
jne
je
pop
push
sub
dec
dec
push
nop
mov
sub
dec
sub
dec
dec
pop
dec
je
jne
xlat
push
lcall
push
bound
dec
xor
shrd
mov
rcr
imul
call
ret
nop
add
inc
add
loopne
add
lock
add
add
add
add
jge
add
in
add
shlb
add
add
mov
add
add
add
pop
xchg
add
inc
jns
add
add
add
add
add
inc
nop
push
add
add
add
add
add
or
add
push
add
add
add
add
add
lret
add
push
add
add
add
add
add
or
add
inc
mov
add
add
add
lock
sbb
add
inc
fwait
push
add
fmuls
add
inc
fwait
push
add
add
add
adc
add
add
inc
add
adc
or
push
je
imul
add
add
xor
sbb
or
inc
mov
das
int
xor
cli
and
push
dec
bound
push
arpl
adc
sbb
rclb
adc
or
or
add
sub
in
jno
rcrb
clc
mov
and
xchg
in
enter
jb
cmp
sbb
mov
sub
pusha
mov
cmp
lret
xor
fwait
and
jb
fwait
adc
inc
or
les
push
call
testb
je
mov
or
std
pop
test
xor
cltd
or
and
fs
loopne
ficoms
sbb
add
push
push
jne
fisttps
jl
cs
ds
mov
mov
pop
aam
or
mov
rolb
shl
dec
push
pop
lea
mov
ds
add
hlt
or
orl
fs
lea
lahf
mov
and
mov
or
fisubs
jle
test
push
push
into
push
clc
out
repnz
call
pop
dec
cmp
jmp
cmp
xorb
or
stos
mov
push
adc
ss
sub
stos
pop
sub
rcr
add
pop
ror
pop
outsl
es
push
mov
fwait
movsb
inc
adc
or
jle
or
loopne
fisubl
nop
adc
push
cmp
cld
cmpb
inc
insb
inc
pop
fcompl
sub
sahf
pop
xchg
push
xchg
aas
lret
add
cmpl
jne
adc
arpl
or
pop
or
add
push
fimuls
or
shlb
aas
jno
shll
movsb
lahf
add
aaa
jne
rcl
loopne
call
test
xchg
icebp
inc
jbe
pop
push
pop
mov
mov
dec
in
hlt
stos
xchg
mov
addb
xor
pop
sub
stos
jp
lret
jbe
xchg
and
inc
or
or
sub
sub
inc
dec
push
mov
call
dec
xor
sub
xor
sbb
push
pop
xchg
pop
test
add
lock
sub
sti
mov
mov
ljmp
lods
pop
jmp
nop
callw
xchg
lea
fnstcw
push
mov
out
xor
adc
mov
dec
adc
scas
cmp
or
mov
in
dec
mov
inc
lock
push
push
push
mov
mov
mov
ja
and
and
or
fdivr
push
jno
es
andb
adc
and
push
lods
add
call
popa
push
push
jne
or
call
or
jns
xchg
dec
inc
mov
ja
gs
dec
mov
push
dec
pop
cli
inc
leave
mov
or
stos
adc
push
dec
jb
adc
adc
pop
push
jmp
mov
pop
ret
cmp
push
popa
into
inc
jp
or
xchg
inc
daa
and
jae
dec
flds
popf
or
jae
insb
ss
jmp
mov
mov
add
or
sbb
xor
cmp
pop
lret
add
xor
adc
or
fs
sbb
imul
lea
rorl
js
jmp
and
dec
lods
sarl
cmc
ret
and
loop
adc
popf
adc
or
jmp
pop
pop
mov
add
inc
adc
pop
adc
lods
xor
and
adc
nop
popf
test
pop
and
sub
push
inc
sub
es
sti
jge
je
jmp
sbb
fnsave
stos
rorl
or
add
insb
mov
cmp
inc
add
inc
pop
pop
pop
jae
mov
mov
push
and
mov
cli
es
mov
dec
mov
mov
insb
js
rolb
mov
or
and
cmp
jg
in
aaa
cltd
loope
call
lods
aas
pop
fisttpll
pop
add
push
or
out
pop
sbb
outsl
add
jmp
jns,pt
cmp
jne
int3
imul
lea
call
inc
xchg
dec
adc
push
add
and
mov
or
pop
cli
adc
lods
adc
enter
call
je,pn
rorb
pop
pop
sub
int
hlt
xlat
sub
cltd
int
lods
lsl
cmc
enter
cmpsb
mov
inc
sahf
xor
mov
lock
or
inc
call
add
rorb
test
push
call
xor
and
dec
add
push
push
dec
repnz
sub
push
jge
cmp
jne
cmpsb
mov
jg
push
repnz
mov
push
and
mov
stos
jns
or
push
adc
xchg
sub
push
movsb
test
data16
mov
fs
inc
dec
add
mov
dec
or
arpl
push
pop
lret
mov
sub
sbb
cwtl
adc
lea
bnd
je
enter
outsb
dec
mov
rcll
or
inc
test
fistpl
xchg
fcomps
cmp
jl
cmp
cmp
xor
sub
mov
inc
rcl
je
dec
adc
inc
clc
adc
push
cmp
das
dec
push
arpl
mov
cmp
mov
mov
hlt
lock
jne
movl
push
fwait
push
aam
mov
adc
mov
sbb
pop
push
subl
ret
jmp
jmp
mov
or
ret
push
mov
push
je
add
sbbb
xor
and
test
movsb
cmpsb
cwtl
lds
and
sbb
xchg
xchg
mov
sbb
jne
cwtl
and
adc
mov
fmull
cld
cmpl
and
ret
ss
and
sbb
int
pop
or
and
sbb
fistpl
pop
insb
ret
add
or
cld
or
jg
shrb
pop
test
sarb
sbb
ret
add
hlt
jmp
xchg
pop
sub
and
adc
fld
cmp
xchg
mov
sbb
sbb
pop
pop
int3
rclb
int3
cwtl
add
and
cmp
inc
cmp
jb
lahf
sbb
push
or
adc
mov
cli
out
inc
add
add
inc
pop
pusha
mov
sub
aas
lea
mov
jl
mov
adcb
insb
dec
xor
jl
push
or
adc
lods
mov
ljmp
sarl
add
adc
js
insb
shll
jl
xchg
lret
mov
add
pop
push
sub
or
add
andl
inc
push
push
push
ss
xor
stc
push
je
cmc
les
fiaddl
xorb
rcrl
testb
push
sub
mov
mov
cmp
lods
and
push
mov
pop
fsubp
pop
adc
js
fdivs
mulb
or
and
mov
and
add
sbb
lods
lcall
jmp
repnz
shrb
sbb
icebp
repnz
test
push
enter
push
sub
shlb
cs
dec
sbb
push
lock
cmc
insb
jmp
jmp
jmp
aad
push
and
flds
pandn
in
mov
and
cmp
and
int3
cmp
aad
fistpll
xor
pop
pop
nop
not
jbe
or
jnp
and
push
cwtl
or
hlt
btr
test
mov
xor
dec
leave
pop
adc
add
dec
sti
ror
jbe
test
mov
adc
mov
jge
lret
addr16
xchg
xchg
mov
jmp
mov
fistpll
inc
mov
sti
push
enter
jl
les
cwtl
xor
inc
mov
xchg
xor
aas
pop
xchg
stc
dec
pop
cmp
cmp
dec
or
cmp
mov
test
sub
dec
in
sbb
dec
mov
push
mov
xchg
enter
icebp
leave
lea
xchg
movsl
jecxz
cld
call
pop
xlat
jbe
jo
repz
mov
daa
push
cmpl
sub
add
or
add
repz
jae
movsb
insb
xor
pop
cmp
lock
pop
lea
mov
in
outsl
sti
mov
andl
das
adc
mov
lods
hlt
push
fildl
or
in
adc
pop
mov
pop
lea
divl
mov
test
push
mov
int
into
adc
out
rcrb
dec
xor
adc
pusha
out
add
and
in
or
mov
mov
xor
subb
stos
mov
dec
comiss
lcall
inc
fimuls
xchg
sbb
and
push
int
jbe
enter
pop
pop
out
sbb
cmpl
pusha
xchg
sbb
pop
jbe
jmp
pop
push
jecxz
adc
cmpl
pop
sub
or
sbb
sub
xchg
dec
mov
imul
jecxz
pop
dec
ficomps
jmp
pop
decb
sarl
add
xchg
call
push
icebp
fimull
jne
dec
shlb
mov
sub
cmpsb
mov
pop
test
movsb
push
dec
and
adc
mul
mov
shrb
jle
in
add
cld
jmp
test
ss
out
cmpl
pop
popf
jecxz
xchg
sti
pop
or
dec
rorl
lods
cmpsb
sbb
jle
push
nop
cmp
jne
out
inc
sbb
lcall
push
sbb
adc
jne
push
cmp
jmp
es
pop
dec
lock
mov
outsl
adc
jno
aaa
outsl
stc
jmp
in
int
dec
sbb
pop
nop
aad
pop
ret
adc
aad
sbb
sub
or
push
jecxz
xchg
loop
aaa
pop
xchg
jno
dec
xor
inc
std
cmpsl
inc
adc
and
mov
mov
dec
mov
cmpsl
xor
lods
mov
mov
pop
call
push
mov
adc
mov
and
mov
mov
sbb
ret
adc
jne
dec
mov
mov
and
lcall
add
add
cmp
mov
test
aas
enter
cwtl
fsubrl
dec
ror
rcll
insl
pop
bnd
sbb
pop
call
xchg
movsb
mov
sub
or
add
dec
sub
add
mov
jle
call
stos
fimuls
jae
loopne
adc
test
add
xchg
and
sbb
orl
add
outsb
lock
mov
add
addb
adc
or
xor
sbb
call
cmp
pop
rcll
movsl
push
xchg
mov
mov
test
in
adc
es
push
cli
call
xor
push
add
out
cmp
add
mov
jmp
push
fcoms
nop
sub
jmp
clc
and
adc
imul
sbb
pusha
mov
jmp
inc
mul
cmp
inc
or
nop
jmp
call
std
add
addr16
int
movsl
sub
fsubl
dec
inc
push
sbb
setp
or
sti
sub
and
xor
add
sbb
fists
ss
outsl
sub
shll
sbb
ret
sub
xchg
sbb
in
push
cmp
adc
lds
cmp
rcll
jle
jge
out
aad
push
mov
mov
fstpl
pop
mov
test
popa
xor
xchg
add
mov
popa
jmp
adc
ja
pop
fs
or
mov
adc
add
mov
xchg
push
sbbl
adc
dec
bound
cld
jmp
loopne
push
cli
andb
and
cltd
ret
lock
xlat
cmp
adc
xchg
es
adc
pop
sub
dec
jmp
das
or
int3
inc
push
fadds
or
adc
in
daa
and
jne
xor
fadd
inc
imul
xor
ds
lahf
add
sub
out
insb
pushl
ret
inc
inc
or
je
or
push
mov
push
cmp
sbb
jmp
xor
xor
dec
sub
and
adc
and
fucom
mov
in
jg
jb
jecxz
adc
inc
data16
call
cwtl
shrb
add
jo
mov
cmp
or
pop
call
enter
loopne
adcl
jle
push
push
push
push
call
mov
jne
clc
xor
jmp
mov
call
pop
addr16
loop
pop
mov
fcomi
dec
pop
adcb
xor
test
add
cmp
ja
je
das
sar
js
rep
jmp
and
add
popa
inc
je
cld
sarb
inc
sbb
std
dec
sbb
cltd
push
movl
sub
push
fildl
mov
out
jne
sbb
shll
and
jae
or
cs
flds
jmp
xchg
ret
pop
mov
lock
sbbb
inc
sub
call
lahf
mov
or
pop
add
mov
das
or
fdivs
clc
and
or
jne
push
sbb
lock
dec
or
es
stos
mov
incb
jmp
cmp
lea
sub
adc
mov
push
shl
data16
shll
adc
xchg
push
push
insb
inc
insl
nop
fstpt
mov
inc
and
mov
push
sub
sub
pop
inc
and
js
pop
jg
inc
push
xor
and
adc
cld
inc
and
add
jg
out
xor
and
ja
cmp
call
sbb
rcrb
sbb
je
aam
push
jbe
dec
push
testl
dec
pop
sub
cld
inc
aaa
inc
inc
jb
mov
sub
test
add
or
adc
add
or
push
aad
sbb
lcall
adc
cld
lock
repz
out
dec
sub
jo
xchg
mov
jl
sub
cmp
lea
pop
mov
and
pop
xchg
push
fldt
add
add
pcmpeqw
sbb
je
fadd
and
cs
push
sar
dec
adc
stc
adc
mov
inc
sbb
stc
por
fstp
cmpsb
stos
jns
mov
out
enter
cmpb
or
add
mov
push
ret
hlt
inc
adc
xchg
cwtl
push
pusha
and
imul
sbbl
xchg
movsl
aam
xor
out
je
test
xor
out
sub
test
add
leave
sbb
mov
lds
mov
call
or
inc
call
mov
adc
jmp
lods
inc
add
xlat
fadds
lods
outsb
xor
and
or
push
push
in
add
into
sbb
rorl
mov
cmp
cmp
sbb
push
sarb
mov
hlt
daa
lret
into
pop
rolb
cmp
sbbl
xlat
pop
mov
addr16
add
leave
repnz
bound
and
cmp
mov
sub
imul
mov
mov
stos
add
mov
addb
inc
mov
pop
out
add
mov
imul
cmp
call
jecxz
xchg
push
mov
jmp
add
jmp
stos
push
inc
mov
add
sbb
sarb
int3
repnz
mov
daa
movsb
lahf
in
call
scas
adc
call
jmp
fs
aam
add
jmp
dec
jp
iret
call
add
fdivrs
mov
add
cmpsb
scas
mov
pop
or
jne
xchg
jbe
dec
dec
in
add
mov
push
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
std
repnz
and
repz
mov
fldl
mov
add
les
aad
bound
xor
pop
repnz
adc
mov
clc
pop
jne
jecxz
jecxz
cmp
and
or
cmp
xchg
fcoml
movzwl
mov
xchg
outsb
das
and
lods
test
push
dec
aas
inc
js
das
sub
aaa
inc
hlt
xchg
or
or
push
jmp
xchg
push
push
movsl
bound
mov
ret
jmp
out
mov
sar
loope
cli
shrl
lock
mov
loopne
add
push
push
inc
push
inc
pop
add
jb
popa
outsb
fs
gs
jo
push
dec
add
push
dec
popa
sbb
insb
jne
enter
jecxz
fldcw
push
clc
dec
fs
push
fmull
xlat
loopne
aam
leave
mov
push
inc
rep
mov
mov
xchg
jmp
test
movsb
and
enter
pop
sbb
cmpsb
mov
jg
cmp
push
cmp
gs
sbb
pop
fwait
adc
add
ret
lods
adc
insl
jo
adc
jecxz
mov
outsl
or
push
cld
sti
sub
xchg
stos
clc
dec
fcoms
lods
rorl
add
mov
cltd
cmp
mov
lds
fmull
cmp
sbb
in
cmp
lock
pop
add
jnp
mov
and
sbb
jne
mov
scas
lock
jecxz
jbe
adcb
xor
movsl
inc
mov
daa
stos
or
inc
push
stos
lock
mov
mov
xchg
jmp
test
popf
test
or
add
pop
repnz
or
pop
push
sbb
xlat
ret
pop
shrb
ret
je
cld
fsubrp
fcompl
cmp
or
arpl
inc
xchg
in
mov
cmp
and
xor
or
add
push
outsb
sub
psllw
loope
inc
sbb
js
push
push
push
pop
ss
rcll
adc
sbb
imul
xor
mov
pop
xchg
pusha
fucomi
cmp
enter
hlt
or
add
mov
push
xchg
pop
and
test
in
adc
push
dec
clc
int3
movsb
or
sarb
jge
adc
call
cmp
add
push
cwtl
add
push
call
sbb
aaa
pop
popa
push
bound
nop
cmp
or
push
dec
sbb
add
pop
add
push
push
repnz
filds
sbb
jmp
jmp
push
movsbl
decl
add
xor
imul
loope
pop
jecxz
mov
adc
mov
pop
pop
push
adc
ja
insl
lea
divl
and
dec
xorl
push
sbb
dec
add
outsb
cld
call
adc
getsec
test
push
lcall
mov
repnz
pop
shlb
into
add
aaa
sub
or
and
das
aas
ja
xchg
test
ret
in
loopne
enter
mov
in
or
jmp
or
cmp
adc
mov
or
fsubrl
jo
dec
add
pushf
enter
inc
push
sbb
dec
sbb
fildl
mov
fstpl
and
fucomi
scas
mov
mov
mov
pusha
mov
inc
mov
push
les
ret
mov
cmp
scas
les
mov
popa
adc
or
push
dec
mov
sub
xlat
or
jecxz
pop
jmp
ds
pop
adc
inc
push
das
shrl
fs
fcoms
add
push
es
push
inc
inc
pop
scas
adc
insl
nop
mov
and
xor
cwtl
mov
movsb
mov
add
andl
xchg
mov
or
scas
jecxz
stos
dec
clc
mov
dec
adc
push
adc
insl
or
lea
je
adc
fs
ss
je
dec
mov
vprotq
outsb
inc
mov
xchg
adc
or
xor
mov
jle
push
pop
cwtl
xor
cmp
jg
je
in
inc
or
mov
outsl
xchg
dec
jmp
add
sub
aas
jb
aas
xor
push
cmp
cmp
cwtl
inc
adc
and
jg
push
std
comiss
push
cmp
mov
mov
scas
bswap
and
sbb
xlat
clc
push
clc
into
clc
adc
fdivr
push
clc
or
fprem
push
clc
lret
rdtsc
daa
mov
call
pop
ret
ss
dec
inc
cmpsl
out
xor
fimull
or
stc
jno
movsb
ss
out
xor
sub
add
adc
inc
sbb
sti
in
inc
rorb
fstps
inc
or
mov
or
aad
dec
or
fwait
push
adc
add
jbe
xchg
add
movb
mov
outsl
dec
in
jmp
push
mov
and
push
or
dec
cmp
jne
cmp
jp
or
cmp
jne
pop
and
cmpsl
clc
or
hlt
inc
or
gs
out
or
cmpsb
sub
jle
push
xchg
test
sbb
xor
les
pcmpeqb
call
ss
pushf
xchg
loopne
adc
negb
or
adc
and
lods
lahf
shll
mov
xor
xchg
jno
aaa
test
cmp
jle
subl
cmp
inc
adc
xor
out
jo
xchg
push
sbb
movl
dec
jo
mov
cmp
mov
aas
xor
cmpsl
jecxz
mov
ret
ljmp
sbb
pop
sub
clc
add
mov
or
jmp
pop
cs
sub
and
dec
pop
mov
dec
or
in
adc
mov
cmp
ret
mov
testl
push
rorl
cmp
icebp
popa
enter
mov
add
mov
loope
xchg
push
push
xchg
inc
mov
dec
out
movsb
adcl
neg
sbb
sbb
ja
push
and
aaa
dec
mov
xchg
pop
leave
bound
sub
sbb
and
hlt
and
adc
mov
or
out
push
push
push
call
jecxz
inc
or
adc
xchg
cltd
sbb
shlb
jne
dec
push
mov
mov
sub
push
mov
xchg
xchg
push
cmpl
or
mov
and
arpl
adc
jne
mov
xor
lods
decb
lea
sub
push
inc
adc
inc
rclb
orl
add
jmp
adc
sub
imul
jne
cmp
add
or
lahf
ljmp
add
sbb
je
add
jne
xchg
dec
and
lret
mov
adc
sti
push
jmp
cmpsl
mov
and
nop
sub
push
add
push
sub
orb
jl
xor
decl
jne
push
lea
call
mov
adc
adc
push
sbb
add
or
mov
ret
fcmove
xlat
nop
push
and
inc
inc
jg
js
sub
mov
fs
sbb
cmp
pop
xchg
int
add
xchg
outsb
xchg
dec
testl
mov
adc
pop
sarb
adcl
loopne
inc
add
movw
rorb
mov
mov
cmp
popf
sbb
incl
xlat
stc
hlt
xchg
jbe
mov
mov
push
xchg
cmp
xchg
sub
xor
pop
push
add
or
push
adc
or
aad
mov
push
les
pusha
es
xchg
leave
mov
or
frstor
lea
andl
sub
cli
je
mov
aam
dec
mov
divb
mov
lock
call
sub
fldl
fcmovne
pop
shr
and
outsb
test
pop
sbb
sbb
sub
xor
adc
imul
or
loop
jmp
push
add
xor
nop
and
jne
je
es
add
or
ret
cmpl
sub
enter
push
cmp
bound
or
pop
or
push
push
xor
xor
in
add
vsubps
aas
or
sahf
push
and
push
sub
mov
add
scas
pop
lds
rcrl
rcrl
and
add
jno
scas
jnp
mov
mov
stc
in
je
loop
jns
push
xlat
xor
cli
cmp
mov
stos
andl
out
sub
inc
pop
jns
out
jns
and
and
addl
adc
pop
mov
movsb
insl
movsb
pop
jae
jmp
rorl
add
inc
cld
add
mov
xor
fmuls
in
cli
test
add
push
mov
notl
dec
jno
adc
jmp
dec
mov
sbb
xor
adc
je
cmp
popf
and
aas
add
dec
jmp
inc
add
push
or
ret
and
iret
jne
and
call
int3
push
inc
mov
aaa
add
jmp
sti
xor
sahf
mov
sbb
sbb
or
add
call
jne
inc
js
or
out
fs
pop
xchg
and
pop
xchg
addps
test
xor
xor
repz
mov
faddl
mov
call
xor
push
mov
xchg
lds
adc
sahf
push
jmp
cmpsb
adc
lock
gs
mov
ds
call
test
aas
sub
jbe
add
sbb
fidivrl
sub
out
jmp
push
adc
ret
xor
shl
mov
repz
adc
ret
mov
and
dec
jl
add
jmp
and
icebp
and
flds
mov
repnz
add
dec
push
scas
push
cld
sub
cli
pop
mov
mov
dec
rolb
sub
js
push
jne
call
inc
push
loopne
mov
maskmovq
testl
push
or
sub
and
adc
xchg
xor
ljmp
fsubl
or
inc
push
sub
add
call
in
test
sbb
add
cmp
clc
push
pop
mov
test
cmp
ficoml
int3
mov
daa
pushf
lret
out
in
f2xm1
cld
cmp
pop
call
adc
mov
stc
push
add
loopne
push
push
mov
hlt
add
mov
and
js
jl
dec
or
jl
outsb
cvtps2pd
jl
adc
mov
xchg
adc
dec
popa
into
jg
call
xchg
dec
and
jl
sbb
call
ja
sbb
roll
andb
movsl
repz
push
add
or
add
in
rcll
pop
ret
inc
cmp
decl
push
nop
lock
inc
push
add
cwtl
into
or
cmp
jo
test
icebp
jmp
and
mov
enter
lods
mov
fidivrl
adc
hlt
das
mov
adc
fs
or
ficoms
aam
lret
mov
and
dec
mov
daa
mov
sub
xchg
js
test
lods
filds
test
mov
rorl
pop
add
mov
sub
add
aam
sub
xor
add
cmp
call
jne
ss
lods
or
pop
js
ljmp
adc
mov
sahf
ds
sub
cmp
inc
or
or
push
or
or
clc
xchg
repnz
clc
jmp
mov
jne
push
sti
movsb
pop
scas
arpl
jne
xor
dec
or
xchg
ret
imul
add
sbb
mov
inc
andl
or
push
sbb
jae
push
inc
inc
push
call
out
jge
push
adc
test
popf
leave
push
call
jg
movsl
push
mov
int
jmp
andb
inc
pop
or
xchg
jne
pop
add
dec
lcall
inc
inc
xchg
mov
inc
call
cmc
adc
or
pop
cmp
sub
adc
inc
jne
call
push
inc
adc
decb
sub
pusha
fs
inc
push
cmp
in
inc
push
xor
jbe
data16
mov
mov
add
andl
je
add
mov
jl
std
or
adc
add
push
cmpb
test
orl
xchg
dec
cmpsb
repz
inc
pop
mov
push
in
cmp
test
mov
inc
xchg
push
gs
pusha
insb
xor
cs
fs
inc
add
outsb
addr16
popa
fsubrl
call
adc
fcomp
decb
fists
ja
mov
inc
out
and
shrl
ljmp
fisttps
subb
mov
inc
sbb
xor
add
cmp
cli
int3
dec
push
insl
popf
in
xchg
test
inc
mov
test
and
pop
out
or
call
and
inc
push
fwait
mov
lds
repnz
inc
scas
inc
cltd
and
ret
jmp
jmp
xchg
addr16
popa
call
add
xlat
pop
ficoml
or
lret
add
fildl
addr16
pop
dec
jge
push
push
or
mov
loop
mov
sub
jmp
jne
fidivrs
or
and
adc
shl
fstpt
inc
dec
pop
je
mov
sub
insb
and
fldt
test
and
mov
inc
stos
sub
xchg
je
sbb
fpatan
sbb
nop
dec
mov
ret
adc
repnz
xchg
ret
outsb
push
je
popa
jb
mov
fs
data16
repz
jae
xor
pop
aam
enter
mov
mov
jb
cmp
arpl
mov
stos
add
push
mov
in
push
dec
out
loop
sarb
adc
out
dec
or
inc
and
mov
jle
or
mov
call
jo
adc
mov
add
cld
lcall
jp
jns
push
jnp
inc
ds
rorb
xchg
leave
faddl
scas
xor
mov
lahf
xchg
add
push
or
in
loop
push
arpl
cmp
add
adc
mov
pop
adc
idiv
push
in
xchg
push
leave
cli
enter
or
repz
mov
mov
push
mov
cwtl
adc
push
sub
aam
out
inc
mov
cmc
das
push
push
mov
mov
mov
adc
notb
dec
jecxz
mov
push
mov
cmc
mov
gs
sbb
mov
fstl
test
dec
push
test
or
mov
dec
rorb
orb
ret
and
pop
leave
push
rcrb
subb
roll
cmpsb
nop
subl
push
test
add
pop
hlt
pop
iret
ss
push
fsubl
jp
les
movsb
xchg
push
adc
adc
nop
sbb
dec
adc
ret
ret
adc
cld
cmc
mov
cmp
inc
or
adc
and
je
sub
pop
adc
xchg
sbb
in
and
mov
and
jnp
test
adc
mov
push
sbb
mov
mov
hlt
push
push
or
dec
nop
dec
pop
jnp
call
mov
call
je
cmpl
add
loop
mov
popf
xor
fcmovb
inc
pop
xor
adc
or
sub
pop
and
adcb
sbb
addl
mov
jp
mov
sub
push
dec
je
ret
xor
push
movsb
adc
xor
xchg
inc
in
les
ja
cltd
hlt
sub
addl
pushf
and
mov
inc
mov
in
movsb
lea
push
dec
iret
sbb
xor
add
or
add
or
push
sub
movsl
cmp
jle
and
sub
sarb
xchg
loope
cld
inc
shll
clc
xchg
hlt
enter
jb
cmp
sbb
mov
and
xchg
aam
shl
int3
jb
cmp
sbb
mov
mov
lods
enter
jb
cmp
and
in
jb
cmp
mov
and
insb
enter
jb
cmp
inc
shlb
and
sbb
sbb
cmp
cmp
test
pop
or
sub
add
and
dec
das
mov
nop
sub
xor
adc
and
jo
and
or
and
xchg
repz
jb
cmp
sbb
mov
and
xchg
sti
enter
jb
cmp
jb
cmp
sbb
mov
and
xchg
in
out
out
call
mov
and
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
aad
in
jb
cmp
sbb
mov
and
xchg
fsubp
fbstp
cmp
sbb
mov
and
xchg
xchg
enter
jb
cmp
sbb
mov
and
xchg
iret
enter
jb
cmp
mov
mov
mov
mov
cmp
mov
enter
push
jno
gs
push
and
dec
adc
les
mov
repnz
pop
inc
adc
push
dec
xor
add
or
arpl
gs
imul
aam
add
adc
dec
push
adc
jb
inc
dec
gs
jo
pop
sub
sbb
test
inc
sbb
jne
shlb
insl
outsl
jb
jns
insb
in
notb
mov
or
outsb
mov
mov
and
fsubl
test
adc
or
xchg
pop
testb
lock
scas
and
push
jno
pop
pusha
enter
or
push
nop
mov
dec
inc
push
adc
inc
inc
imul
outsl
sub
push
cmc
add
push
popa
outsb
xchg
pop
mov
sbb
dec
push
jbe
adc
inc
je
push
jle
inc
fs
or
dec
test
xor
enter
mov
mov
jbe
add
dec
jo
or
inc
or
sub
adc
xchg
insb
xchg
popa
nop
insb
push
mov
ljmp
pop
nop
adc
mov
mov
cmovne
push
outsl
sahf
insb
test
and
or
pop
inc
aam
je
jo
enter
sbb
outsl
sarb
and
pop
lcall
cs
arpl
add
mov
mov
test
push
int3
push
dec
jb
push
insb
gs
pop
and
fiadds
push
inc
push
je
arpl
addl
inc
cmc
dec
jo
pop
imul
nop
jnp
and
popa
nop
or
in
mov
push
enter
and
ret
and
fs
mov
loop
popf
pusha
inc
push
or
fnstenv
jae
mov
enter
lods
push
push
cmp
pop
jle
inc
addr16
movsb
push
stos
push
movsl
adc
and
push
adc
andb
gs
enter
adc
or
aaa
xor
dec
scas
push
dec
or
or
jae
cmp
enter
and
cmp
call
add
repnz
or
mov
stc
imul
mov
subl
movsl
test
sbb
jns
neg
call
sub
push
ret
mov
push
xor
div
stc
je
cmp
adc
pop
mov
push
jne
push
pop
pop
sub
inc
lret
add
cmp
jmp
mov
dec
ss
insl
cltd
push
xor
notl
mov
pushl
xor
mov
notl
fisubrs
sbb
inc
and
inc
call
sub
sbb
add
jl
add
cmp
data16
fs
mov
daa
arpl
jg
push
insb
and
cwtl
pop
fadd
xor
rcll
cld
add
outsb
sbb
fdivrp
mov
fdivr
mov
sbb
cmp
js
mov
fcom
fstsw
sahf
cmp
add
add
ret
popf
ret
mov
pop
lret
enter
or
lret
pop
nop
mov
aam
call
mov
push
pop
mov
cmp
inc
xor
pushf
sbb
inc
xor
clc
or
out
repz
ja
loope
and
cli
inc
push
xor
fildl
adc
xchg
and
xlat
daa
test
and
mov
call
and
out
cltd
mov
mov
jno
xor
inc
daa
adc
out
outsl
dec
test
rcrb
xchg
dec
repnz
pusha
jo
out
rcll
push
and
xor
adc
jbe
je
jo
mov
or
push
lea
je
int
cwtl
adc
mov
push
pop
cltd
hlt
add
call
clc
inc
rolb
sub
mov
popa
mov
and
mov
call
rolb
pop
xor
jne
push
dec
out
jg
das
pop
push
add
push
xor
jnp
xchg
xor
push
loope
lock
adc
mov
sub
call
pop
cmpb
out
add
mov
dec
mov
pop
mov
fsubrs
fcmovnu
repz
push
jmp
lock
dec
add
add
mov
inc
js
adc
push
or
and
and
loopne
leave
push
cmp
outsl
das
in
sub
dec
push
movsb
sti
push
das
push
bound
arpl
sar
and
adc
mov
adc
push
xchg
xchg
test
test
dec
imul
mov
push
mov
mov
mov
pop
dec
lock
dec
push
push
inc
sti
inc
fiadds
dec
fnstcw
add
push
repnz
test
nop
lahf
enter
and
ret
lock
test
daa
fbstp
mov
adc
sub
mov
add
push
nop
fsts
inc
lcall
lret
mov
leave
test
inc
jge
mul
roll
rep
lods
push
icebp
mov
pop
pop
pop
test
cltd
imul
rorb
push
and
xchg
repz
and
jb
mov
sub
mov
sbb
or
push
add
je
fildl
rorb
int3
xorl
or
cmpb
jne
cli
repnz
cbtw
mov
outsb
dec
mov
mov
dec
and
cmp
jp
add
sub
mov
outsl
sbb
idivl
or
lds
leave
call
push
les
xor
cmp
mov
lret
cmp
sbb
shll
xchg
pusha
mov
xor
cltd
pop
mov
les
dec
sahf
or
xor
leave
xchg
add
jge
pop
or
js
push
in
or
je
or
cmp
and
add
mov
sub
jmp
das
repnz
mov
mov
pop
inc
out
sub
fsubrl
stc
or
lods
xor
loope
loopne
or
daa
mov
sub
popa
jne
push
push
cmc
xchg
lea
pop
mov
je
add
or
cmpb
or
lret
cltd
rcll
mov
in
sub
mov
jge
fdivs
outsl
dec
push
sbb
xor
leave
sahf
jmp
cmp
je
shlb
jb
cmp
imul
mov
add
lret
xchg
pop
in
jmp
rolb
adc
or
mov
jge
loope
push
je
test
ffreep
and
mov
mov
cmp
nop
push
pop
xorb
xor
in
push
pushf
push
add
and
mov
dec
popa
or
and
pop
adc
mov
das
es
jl
xchg
enter
dec
xor
push
ja
call
mov
ror
loop
sub
cli
int
jne
faddl
xchg
cwtl
inc
add
sub
je
mov
adc
inc
clc
or
jmp
enter
pop
jo
adc
inc
clc
mov
adc
jp
adc
stc
push
cld
test
adc
ret
dec
punpckldq
jbe
mov
xchg
imul
xchg
inc
add
leave
movsb
and
xor
lods
nop
adc
enter
sbb
inc
sbb
add
cld
and
test
ja
insl
jl
pop
jp
stc
jle
push
sbb
stos
cmp
test
add
dec
fdivl
mov
jmp
dec
enter
mov
dec
cld
stc
sbb
icebp
pop
inc
push
add
and
xlat
inc
hlt
jmp
mov
jns
roll
stc
sbb
out
inc
ja
in
cmovbe
adc
add
dec
mov
dec
push
mov
mov
mov
cmp
jbe
and
jne
sbb
adc
adc
je
cmp
mov
mov
inc
jno
mov
and
iret
movsl
inc
xchg
decl
cli
xchg
push
adc
or
pop
shll
adc
mov
push
cltd
inc
push
std
icebp
in
cli
sub
mov
xchg
imull
cld
mov
sbb
or
into
fldl
cmp
call
xor
mov
sarb
jmp
outsl
dec
in
xchg
xchg
loop
dec
mov
imul
mov
mov
fcoms
lock
cltd
and
fstps
inc
aaa
jge
or
adc
xchg
push
and
cld
lea
jecxz
adc
sti
jg
int
sub
notb
adc
cltd
add
clc
jl
jmp
sub
jns
repnz
adc
dec
lret
adc
push
jno
adc
inc
cmp
popa
sbb
fiaddl
xchg
fiaddl
iret
call
push
daa
sub
add
imulb
das
ret
loopne
jge
cmpxchg
or
add
sbb
jecxz
divl
subb
adc
dec
push
and
jmp
stos
cmp
cmp
pop
jae
adc
xchg
add
mov
mov
or
mov
mov
ret
or
movl
int
shlb
xchg
mov
movsb
fadds
jle
movsb
pop
jbe
stos
push
or
dec
add
add
call
jge
movzwl
sub
adc
jae
push
sbb
jo
add
mov
in
dec
mov
jmp
ret
pusha
inc
pop
adc
or
or
mov
jle
add
test
xor
or
shrl
jns
cld
andb
imul
in
sbb
inc
dec
cmp
cmp
lods
or
or
mov
in
and
shll
stos
test
aam
xor
jg
cmp
jl
xchg
cs
sbb
cmpb
dec
cmp
fstps
repz
sbb
inc
lea
je
adc
clc
or
mov
inc
push
stos
or
lret
sub
cld
fs
mov
or
int
repz
sbb
sahf
fadds
or
inc
in
mov
call
addr16
dec
mov
ds
or
jb
mov
das
xchg
mov
jmp
aad
add
or
add
inc
test
add
je
dec
jne
hlt
mov
xchg
inc
sahf
in
sti
adc
sub
ret
and
stos
jecxz
jnp
dec
add
jne
call
es
sbb
adc
lahf
sbb
mov
add
cmp
cwtl
sbb
lea
ja
inc
and
sub
or
movsb
lret
and
lea
or
mov
jge
pop
loop
cs
mov
add
push
and
inc
add
fstpt
outsl
and
frstor
sub
sub
sub
add
dec
sub
in
sub
cs
insl
adc
mov
adc
xor
jne
fnsave
aam
or
les
cld
adc
add
jmp
or
pop
mov
mov
and
cmp
divw
inc
push
fs
adc
inc
fisttpl
cmpl
sbbl
inc
mov
popa
int
fldt
sub
rclb
dec
or
clc
mov
mov
and
dec
add
fabs
movsb
shr
sbb
or
fldt
xchg
mov
je
or
mov
lcall
lea
mov
mov
out
add
call
data16
sahf
pusha
inc
shlb
clc
add
dec
and
ja
lahf
cmp
or
dec
or
daa
cmpb
lea
dec
js
or
cmp
jmp
sub
mov
xor
adc
movsb
sahf
xchg
sub
cs
or
fmull
add
dec
xchg
out
shr
adc
call
pop
popf
gs
add
mov
test
mov
mov
adcl
cmp
decl
sbb
mov
pop
dec
mov
jg
cmpsl
sbb
jae
repnz
add
and
int3
push
in
fildll
cli
mov
or
xchg
inc
test
lock
or
or
or
cmpxchg
dec
jo
jmp
cmp
enter
and
push
and
lret
inc
ljmp
or
enter
or
mov
jmp
inc
fmull
mov
xchg
sub
add
test
outsb
ret
test
sbb
inc
xor
sub
dec
aad
cmpsl
push
mov
orb
jb
or
aam
jo
imul
pop
popf
int3
shl
incl
push
dec
xor
pop
shrl
pusha
xchg
xchg
adc
xchg
jne
loop
sub
add
adc
je
test
clc
push
and
add
cmpsl
push
test
ja
adc
cmpsl
imul
cltd
je
outsl
mov
in
mov
mov
dec
push
push
add
imul
dec
loopne
in
xlat
insb
add
rorb
push
push
or
mov
xchg
lock
inc
pop
dec
lret
test
inc
iret
adc
lock
sub
adcl
fwait
push
inc
inc
sbbl
movb
or
cmp
insb
sbb
pop
add
cltd
idiv
call
or
adc
add
call
nop
jecxz
fisttpl
or
mov
or
or
inc
call
inc
into
ret
adc
test
pop
xchg
addr16
daa
sbb
sbb
negb
jle
je
or
test
adc
popa
into
or
dec
and
mov
jp
addr16
or
insb
or
enter
dec
ljmp
adc
movsb
adc
mov
mov
sbb
cmp
int
or
xchg
lock
pop
mov
sub
nop
mov
and
fbstp
mov
adc
imul
pop
dec
mov
cmp
std
mov
push
push
int3
repz
push
and
jo
mov
adc
pushf
mov
jo
hlt
xor
push
lret
or
mov
stos
inc
ret
nop
dec
leave
pop
jno
and
mov
xchg
jno
sahf
outsb
or
push
or
in
mov
mov
or
adc
fdivrl
jb
cmp
xchg
je
sub
repz
std
rclb
loopne
push
cmp
aas
and
push
fsubs
jb
rcrb
iret
addl
fmuls
mov
and
cld
hlt
mov
mov
bt
jae
ljmp
cld
sub
out
fisubs
and
cmpsb
add
int
push
add
jmp
mov
mov
je
cmovl
mov
xchg
jmp
aad
bound
add
js
adc
add
add
push
aam
dec
repnz
sbb
in
and
cmc
ret
add
jne
and
clc
adc
and
add
daa
enter
adc
cmp
shll
aas
xchg
lret
or
vpmulhuw
mov
sbb
add
dec
je
inc
gs
in
mov
mov
inc
sbb
ret
xor
cmp
xor
xor
xor
push
cwtl
and
fdivrl
cmpl
ret
daa
mov
add
sbb
cld
pop
cltd
les
incb
push
xor
jmp
daa
add
xor
shlb
and
decb
xchg
adc
adc
jo
xor
dec
or
pop
adc
rcrl
push
and
mov
adc
pushf
cmpb
pop
or
cmp
or
stos
push
add
lahf
ret
xchg
mov
xchg
and
sbb
sbb
addr16
sbb
nop
lods
enter
in
hlt
nop
and
cmpl
enter
push
push
outsl
push
push
mov
sbb
pop
push
xchg
in
into
popl
cs
xchg
and
and
cwtl
je
andb
sti
setae
sub
call
push
fwait
mov
xchg
push
sub
dec
shrb
cmp
jns
dec
or
mov
hlt
and
fisubl
xor
cmp
loop
jmp
std
inc
and
xor
rclb
mov
and
push
and
decl
fisubrl
lods
xchg
scas
jae
jmp
shrb
lea
enter
movsb
lcall
ds
xchg
jns
insl
sub
js
inc
sarb
jno
xchg
push
push
mov
or
dec
or
test
enter
add
inc
enter
nop
jle
mov
jle
pop
inc
or
lea
stos
in
push
aam
les
enter
jb
cmp
push
clc
stos
cwtl
or
aad
lret
loop
lock
leave
and
clc
mov
xor
pop
arpl
test
cmpb
pop
inc
cwtl
mov
mov
or
inc
push
arpl
xchg
iret
dec
daa
je
pusha
xor
call
iret
jmp
inc
clc
sti
push
jg
or
xor
enter
push
icebp
push
adc
int3
mov
jp
push
and
sbb
xlat
pop
add
or
ljmp
pop
and
and
and
rorb
lret
or
add
ljmp
push
and
nop
inc
and
add
out
in
sarb
pop
mov
nop
ret
aad
test
mov
sbb
cld
jbe
push
adc
daa
or
inc
shr
jge
test
arpl
cli
rorb
fists
or
in
push
lock
clc
and
in
dec
push
loopne
add
dec
iret
inc
dec
mov
inc
fmuls
and
mov
cld
rclb
mov
movsbl
cwtl
hlt
mov
movsb
inc
insl
mov
scas
inc
xor
lea
roll
lahf
fisubl
subb
sbbb
fucomp
popa
stos
test
adc
push
les
lahf
jmp
addr16
aaa
in
sub
push
jmp
les
mov
jae
fs
add
and
inc
or
orl
push
jmp
pop
add
jbe
decb
mov
pop
sub
popf
add
or
or
xchg
pop
mov
adc
ja
rcr
cld
andl
adc
adc
and
and
clc
mov
adc
mov
sbb
or
aad
cmpl
test
xlat
sub
loopne
inc
sbb
push
xchg
cltd
movsl
lcall
and
xchg
or
mov
lret
xchg
inc
mov
pop
loope
mov
mov
sub
mov
adc
int3
lret
dec
addr16
test
mov
rclb
inc
push
imull
and
cltd
nop
sbb
pushf
or
mov
add
mov
sbb
pop
inc
ja
cwtl
xchg
call
enter
xchg
dec
add
ret
into
mov
mov
jecxz
xchg
lods
enter
or
bound
std
gs
pop
rolb
or
ret
dec
dec
or
or
ds
stc
repnz
cmp
shrl
int
xor
insb
popf
loopne
add
mov
arpl
adc
inc
rorb
dec
enter
xor
push
and
mov
push
mov
out
adc
cltd
sbb
pop
mov
dec
mov
nop
mov
inc
ret
xor
push
out
lds
mov
les
and
fstps
mov
adc
mov
jecxz
inc
xor
push
sbb
inc
mov
mov
shlb
or
movsl
inc
cmp
sbb
or
dec
xlat
and
les
add
pop
xchg
push
or
add
xor
inc
test
rcl
xchg
add
insb
call
lock
rolb
les
inc
adc
or
mov
add
adc
inc
mov
or
inc
or
sub
adc
xorb
ret
jo
mov
lock
shll
data16
das
pusha
lock
cmp
pop
push
pop
jmp
mov
dec
pop
cld
rolb
adc
and
jb
mov
xor
into
add
cmpb
pop
or
inc
test
add
add
cmp
add
mov
pop
pop
popf
jae
and
xchg
or
mov
mov
cmp
loope
nop
xor
push
roll
push
lods
sub
in
rcr
sbb
or
call
sub
pop
inc
dec
out
dec
pop
inc
adc
sub
adc
push
xor
sub
lea
adc
push
add
dec
adc
push
sub
shrl
repz
xor
mov
sbb
dec
ud0
push
and
sbb
test
cli
sub
and
jecxz
scas
ret
ja
aas
js
or
sub
and
add
je
sub
in
pop
mov
dec
or
xchg
daa
ret
jne
dec
sbb
xor
hlt
sbb
mov
inc
mov
test
mov
mov
mov
hlt
xor
xchg
outsl
add
adc
imul
mov
or
dec
cmp
mov
inc
adc
sub
pop
call
jb
inc
mov
stc
into
push
push
les
add
jne
add
lahf
mov
jge
inc
cs
nop
push
jne
mov
ret
xchg
cwtl
in
pop
es
sbb
xchg
shlb
fs
sub
and
add
mov
adc
dec
mov
mov
adc
and
add
mov
sub
rol
or
jge
or
push
movsl
mov
add
jne
jmp
mov
inc
pop
ret
and
inc
or
mov
and
pop
mov
add
add
xchg
ret
mov
or
cmp
mov
lea
add
cmp
sub
sub
adc
push
cmc
or
ss
pop
js
sub
and
adc
cmp
or
and
dec
sub
cs
push
movsl
push
xchg
xor
sub
mov
adc
xchg
sub
mov
push
xchg
add
push
js
sbb
push
rcll
orb
call
in
or
dec
out
and
fsubrs
push
xor
test
fisubrs
mov
pusha
mov
je
and
xchg
call
sbb
and
sbb
arpl
and
sub
mov
xchg
and
mov
jmp
dec
in
sbb
ficomps
in
jae
orb
and
xorl
adc
test
ljmp
push
out
sarb
mov
inc
aam
mov
movsb
sub
in
mov
mov
or
inc
fildl
mov
rclb
mov
and
mov
test
adc
sbb
or
mov
iret
clc
add
loope
push
or
mov
cmpsb
xchg
push
enter
cltd
cmp
xchg
mov
push
sub
adc
dec
aas
in
popa
loop
or
mov
aas
subl
mov
scas
bound
hlt
mov
aas
clc
repnz
leave
jne
add
cld
push
or
mov
xchg
sub
pushf
pop
or
cltd
jmp
pushf
std
push
mov
mov
xor
jl
push
mov
jb
popf
cmp
and
inc
loopne
add
insl
or
jo
add
repz
bound
push
in
xchg
adc
fdivl
into
sub
jae
mov
jae
push
xor
pop
repnz
lods
andl
lock
pop
dec
or
out
cmp
cld
mov
mov
add
mov
inc
pop
in
dec
lock
mov
lcall
ret
mov
in
mov
adc
xor
mov
cmp
jne
ljmp
fs
add
jmp
scas
test
mov
or
cmpsb
jno
xchg
in
cld
push
xor
cmp
push
cwtl
fadd
and
push
sbbl
movsb
pop
inc
adc
pop
xchg
pop
lods
fadds
jae
inc
jb
inc
push
jo
arpl
inc
js
lret
ficoml
subb
mov
mov
xchg
lret
lods
push
cwtl
les
movsb
xchg
adc
pushf
mov
lcall
adc
adc
push
or
and
xchg
adc
inc
push
shrb
xchg
adc
mov
inc
fs
and
and
fisubs
dec
movsb
adc
dec
xchg
xor
xor
adc
pusha
xor
mov
and
cld
mov
mov
cltd
sub
adc
fcoms
fsubl
enter
adc
popa
int3
xchg
pop
pop
xor
mov
xor
sbb
mov
mov
inc
mov
mov
cmp
adc
cltd
or
adc
and
adc
cld
cltd
and
pop
dec
in
dec
call
or
nop
dec
mov
in
dec
xor
test
push
orb
jl
mov
js
sub
je
js
jo
test
insb
dec
and
dec
cmp
fs
int3
pusha
fs
dec
insb
in
inc
and
bound
add
or
sub
xor
inc
push
dec
adc
dec
dec
fmuls
dec
dec
cld
in
dec
pop
out
push
sub
and
cmp
mov
or
xchg
xor
xchg
cmp
xor
cmp
xchg
sbb
sbb
lods
sti
lock
into
pop
test
jle
xchg
pop
daa
call
insb
addb
in
mov
adc
inc
mov
inc
pop
jo
inc
xor
lock
add
adc
sbb
inc
call
test
mov
mov
jo
or
aas
adc
adc
nop
mov
rol
dec
or
sahf
or
pushf
mov
cwtl
or
test
and
inc
mov
cmpsl
adc
and
mov
inc
lods
adc
mov
adc
lods
mov
sbb
and
inc
or
mov
dec
orl
xor
mov
sub
sub
icebp
adc
xor
adc
cli
adc
divb
pop
xchg
out
inc
lods
dec
cmp
pop
js
clc
aas
mov
xchg
movsb
enter
jb
cmp
xor
movl
and
add
pop
xchg
lock
mov
cld
and
or
inc
inc
scas
adc
mov
iret
add
scas
and
cmp
or
aas
xor
cmp
add
outsb
movsl
pop
fs
and
xchg
adc
jb
mov
sbb
sub
or
nop
adc
scas
pop
inc
adc
sbb
jb
pushf
bound
fs
je
js
add
inc
out
pop
outsb
mov
enter
in
add
add
sbb
xchg
or
mov
rorb
cmp
inc
inc
or
jo
sub
xchg
sbb
loopne
nop
lock
jo
and
loope
push
dec
add
and
xchg
in
std
rcll
jl
and
je
inc
lret
in
ja
pop
inc
cmp
xor
adc
jne
dec
outsl
insl
cld
mov
jg
rolb
mov
or
cmp
insb
push
jp
insb
sbb
jecxz
sub
jl
sub
xchg
andps
arpl
mov
ret
xor
jg
std
sbb
cmp
mov
popa
pop
ret
push
pop
mov
or
and
inc
add
jne
hlt
je
xor
test
imul
jno
mov
pop
ret
roll
jge
or
xorb
add
daa
inc
pop
in
jbe
sbb
jle
cmc
inc
das
icebp
pop
mov
mov
in
xchg
push
cmpsb
rcrl
test
and
stos
clc
clc
fadd
dec
roll
inc
mov
fs
test
pop
stc
mov
xor
test
mov
or
inc
movsl
in
pop
into
pop
pop
mov
in
scas
dec
mov
sar
andb
sbb
call
add
jmp
cmp
or
inc
jne
jne
popf
add
arpl
sub
xor
dec
cmp
or
sbb
clc
cltd
push
ds
mov
pop
pop
dec
test
clc
popf
stos
fsubrl
fisttpll
adc
mov
movsl
loopne
leave
mov
fistps
les
cltd
xchg
or
push
jmp
pop
push
fnstcw
stc
call
pop
call
cmp
cld
mov
mov
jo
and
repz
mov
and
adc
cltd
push
sbb
std
or
cli
sub
addr16
fs
xchg
pusha
inc
jae
sbbl
adc
dec
inc
imul
or
jns
and
aaa
jo
jbe
or
jl
or
inc
cld
call
or
cmpsl
adc
aaa
cltd
cmp
jae
or
add
push
mov
ret
out
mov
sub
lcall
and
mov
in
inc
xchg
mov
call
jmp
pop
in
test
sarb
test
sub
add
repnz
xor
lret
js
push
ret
shlb
mov
pop
cmc
adc
dec
cld
gs
icebp
enter
jns
inc
loopne
or
mov
mov
push
jo
push
pop
aas
add
push
xchg
and
lahf
xchg
mov
push
mov
call
enter
mov
cmp
test
mov
push
call
test
push
movsl
clc
inc
outsl
and
push
and
xlat
mov
push
push
enter
mov
mov
imul
mov
mov
mov
movsb
pop
push
js
sub
xlat
pop
icebp
jnp
jle
add
mov
les
adc
sbb
jmp
movzwl
lds
cmp
jge
int3
cwtl
loopne
in
inc
lret
pop
gs
xchg
and
les
fisttps
adc
xchg
repnz
xchg
pop
inc
cmpsl
and
inc
mov
jge
add
call
leave
ret
mov
adc
fstps
xchg
sub
and
mov
xchg
or
pop
pop
lcall
dec
int3
dec
or
jnp
test
jl
mov
jae
sub
pop
notb
cmp
jge
aam
addb
ret
mov
adcb
add
pusha
xor
insb
testb
pop
add
je
cmp
sbb
jmp
sahf
adc
or
push
push
add
fidivrs
aas
call
fiaddl
int3
sti
mov
jno
jnp
dec
xchg
lret
in
inc
call
sub
sti
xchg
mov
shll
mov
adc
pushf
push
pushf
add
dec
lock
aad
je
pushf
popf
daa
or
sbb
and
adc
jmp
or
ds
push
scas
push
lods
adc
pop
les
imul
mov
in
adc
outsb
sar
repnz
cmp
incl
cmpb
idivl
or
inc
mov
in
xchg
adc
and
loope,pt
mov
add
push
loopne
stc
and
adc
adc
shlb
jne
movaps
xchg
out
dec
aaa
jmp
dec
ret
std
adc
inc
mov
nop
and
xor
pop
adc
cmp
mov
jmp
push
lahf
and
movsl
jecxz
push
sti
dec
aaa
das
cmp
jnp
jo
add
lock
adc
adc
sub
fbld
adc
adc
repz
lds
adc
xchg
adc
dec
adc
jmp
out
ficomps
nop
sub
pop
test
imul
out
sti
add
loopne
and
aas
pop
ret
popa
or
pop
dec
jnp
cld
jno
xchg
push
xchg
add
and
pop
mov
dec
mov
mov
sahf
sahf
dec
das
dec
xchg
data16
and
mov
rcrl
inc
daa
je
dec
add
mov
clc
adc
adc
rol
sbb
adc
les
inc
mov
jnp
hlt
or
pop
hlt
orb
jno
add
cmpsb
mov
adc
test
js
pop
cld
mov
rcll
cltd
mov
lcall
test
mov
fisttpl
pushf
ret
sbb
pushf
test
xchg
and
pushf
push
jnp
xchg
inc
imul
sahf
xchg
test
lcall
ds
mov
adc
adc
lock
scas
mov
pop
adc
jae
push
pop
cmpsb
pop
jo
adc
hlt
add
sub
lea
jnp
andl
clc
mov
sbb
stos
popa
cmc
gs
adc
movsl
pop
js
dec
pop
loopne
rolb
jp
mov
cld
sbb
dec
mov
jne
js
data16
adc
jle
and
adc
or
test
or
cmpsl
xchg
mov
scas
popa
jmp
dec
xlat
add
mov
sub
daa
fsts
add
sbb
cmpb
mov
mov
dec
test
iret
sub
fisubrs
jb
or
push
call
aam
hlt
jns
dec
mov
sub
fcomps
stos
into
xchg
jmp
rcll
in
daa
shlb
mull
cltd
ja
push
mov
mov
sub
sbb
ja
das
lcall
adc
or
dec
enter
nop
cmp
mov
sub
push
cmp
cltd
sbb
pusha
or
xchg
ss
stos
dec
mov
sub
mov
mov
das
adc
ss
and
cltd
jecxz
mov
or
cld
js
jecxz
pop
sbb
test
mov
sbb
push
push
orl
dec
les
call
adc
lahf
ret
xor
movsb
mov
leave
push
and
fsubr
push
mov
frstor
mov
sub
jb
popf
or
push
push
mov
cmpsb
and
or
clc
loopne
or
dec
aaa
sbb
cmp
and
adc
adc
pop
mov
lcall
adc
cltd
xchg
movsb
ret
mov
shl
loop
fs
mov
iret
sti
and
pop
pop
dec
pushf
repz
enter
lahf
or
bound
fcmovb
or
mov
add
mov
and
inc
xchg
xor
mov
and
dec
or
dec
inc
or
mov
mov
push
sahf
mov
mov
arpl
sbb
hlt
sbb
jmp
pop
fs
jmp
test
lahf
ret
mov
cmc
adc
daa
and
and
into
rolb
pop
and
fdivrs
adc
pushf
pop
cwtl
or
popf
movsb
jo
out
adc
aas
mov
rcrb
lret
mov
mov
inc
movl
mov
push
mov
add
sahf
shlb
mov
fisttpll
dec
out
cld
cltd
inc
stos
imul
in
xchg
roll
cmpb
mov
jmp
daa
lds
xchg
jge
pushf
or
pop
mov
xor
add
or
arpl
cmp
mov
inc
and
mov
or
out
fsubl
or
nop
or
or
jne
lahf
pop
inc
ljmp
in
mov
push
mov
sub
pop
sub
mov
ljmp
arpl
lds
cwtl
fxch
inc
pushf
adc
xchg
xchg
dec
adc
mov
fsubs
inc
or
or
add
arpl
mov
arpl
shr
xor
pcmpeqd
inc
leave
call
and
add
pop
or
addl
add
sub
xlat
call
mov
inc
aad
xor
clc
adc
andl
test
add
mov
daa
aam
mov
mov
cmp
movsl
ljmp
call
mov
inc
or
idiv
bound
push
stos
enter
pop
lock
xchg
inc
hlt
adc
ds
aam
adc
or
enter
push
in
mov
adc
orl
leave
mov
cwtl
sbb
sbb
mov
sub
xchg
test
ja
lea
lods
fidivrl
jns
pop
out
cmc
inc
out
test
and
pusha
jecxz
mov
dec
and
mov
jno
pusha
or
rcll
xchg
inc
sti
mov
ret
adc
xchg
xchg
aam
mov
cmc
sahf
push
and
ret
and
mov
lcall
mov
dec
leave
jl
xchg
push
movsl
jecxz
loop
aad
movl
pop
inc
js
xchg
or
mov
cmp
fcomps
mov
sub
mov
push
push
adc
stos
mov
stc
fwait
inc
inc
adc
into
fildll
ret
out
xchg
push
mov
mov
adc
loop
xchg
pop
imul
das
jle
add
enter
mov
sbb
mov
mov
cmp
adcl
jo
pop
call
xor
mov
cmp
adc
je
inc
or
fadds
mov
dec
mov
add
rorl
sbb
shrl
dec
jne
mov
ret
adc
mov
push
fs
cltd
fs
mov
mov
das
dec
push
adc
popf
sub
push
mov
add
mov
int3
jmp
mov
insb
mov
adc
nop
or
push
clc
cwtl
push
test
push
stos
subl
enter
cmpsl
rolb
inc
repz
push
mov
push
adc
xchg
dec
cmpsl
inc
push
push
adc
gs
sti
leave
adc
jo
mov
cmp
bound
nop
int
and
adc
inc
dec
and
adc
dec
sti
outsb
mov
inc
mov
fwait
orb
and
data16
cltd
or
adc
icebp
adc
adc
and
sub
lods
xchg
mov
xchg
js
nop
xchg
xchg
aad
mov
cmp
shrd
call
inc
add
add
or
adc
cmpsb
sbb
mov
lock
xor
or
sti
es
xchg
mov
inc
xor
dec
cmp
jmp
syscall
mov
sbb
inc
dec
and
push
mov
inc
inc
adc
xchg
sbb
adc
bound
leave
ja
and
push
sub
add
mov
lods
and
xor
pop
jno
xchg
lods
mov
ds
mov
adc
call
xor
pop
xor
shlb
rcrb
inc
pop
push
xchg
aaa
xor
push
push
xchg
call
sub
push
xor
push
and
mov
jae
mov
or
pop
adc
inc
pop
pop
xchg
push
adc
insl
inc
xchg
add
sub
dec
call
clc
or
ret
lods
aas
or
xchg
in
enter
xchg
inc
adc
adcl
xchg
sub
push
inc
dec
add
inc
jb
lods
adc
add
jp
pushw
add
inc
push
push
je
jmp
cmp
xor
outsl
imul
push
in
dec
arpl
xchg
outsb
stos
cmp
pop
pop
es
gs
and
iret
cmp
push
in
jb
and
insl
hlt
cmc
sbb
adc
and
jne
add
add
inc
and
adc
or
je
xor
adc
mov
mov
daa
sub
int3
enter
iret
add
into
fcmovnu
fcmovu
lret
fstp
fnstsw
loope
shl
popa
inc
jb
outsl
cmp
push
add
je
insl
gs
mov
aam
pop
popa
je
xor
inc
fdivs
xor
add
inc
inc
push
inc
inc
inc
inc
incl
loope
mov
sbb
pop
adc
cmpsb
or
or
adc
mov
add
xor
andb
imul
cmpsl
cli
lods
sbb
sbb
sbb
and
cmp
inc
dec
push
mov
pusha
and
dec
jo
js
addb
cwtl
adc
xchg
mov
rorb
call
jo
dec
or
and
xchg
xor
cmp
les
add
xchg
add
add
cmp
dec
and
xchg
movsb
enter
push
xor
push
mov
and
and
xor
fcoml
xchg
nop
rorb
mov
push
ret
xor
cmp
push
mov
mov
mov
add
dec
and
sbb
mov
rolb
dec
es
or
xchg
mov
call
stc
es
xor
mov
mov
cwtl
lock
or
test
xor
fs
add
jl
xchg
mov
xchg
or
mov
rorb
fwait
or
fsubs
xchg
mov
xchg
mov
sub
jb
call
and
or
les
cmp
fsubrs
icebp
push
and
or
dec
adc
sub
jno
xchg
mov
push
inc
enter
clc
adc
mov
mov
in
lods
and
sub
fs
sub
ss
dec
cmp
adc
or
cltd
mov
and
push
or
sub
enter
rolb
movsl
add
shlb
or
rcll
cwtl
xchg
xor
fsubs
jl
mov
adc
and
fadds
adc
cmp
add
xor
inc
outsb
xchg
rorb
fisubl
call
shll
mov
ds
dec
bound
sahf
mov
ret
and
dec
out
xchg
cld
sub
lods
push
and
or
add
pop
adc
or
mov
cmpsb
inc
mov
out
sub
adc
and
mov
or
adcb
mov
adc
daa
add
jns
or
and
inc
inc
push
mov
insb
and
dec
xchg
xchg
cmpsb
and
repnz
add
and
dec
inc
xchg
push
and
nop
mov
dec
fcoml
or
jno
inc
sub
mov
sub
sbb
xchg
or
mov
jnp
add
cmp
inc
xor
or
add
add
pusha
add
cmpsb
add
push
and
arpl
push
addb
adc
or
sub
roll
ret
xchg
dec
rcrb
sbb
or
cltd
xor
adc
adc
and
add
dec
and
adc
xor
or
or
adc
and
loop
fs
repz
nop
nop
add
ucomiss
and
stc
rorb
enter
lock
and
enter
inc
js
adc
test
add
sbb
add
sbb
and
inc
enter
xor
add
adc
mov
or
lock
dec
sub
adc
jae
push
inc
cmp
push
or
push
adc
dec
xchg
or
and
dec
or
dec
fsts
add
dec
lods
or
or
out
or
bound
dec
pop
push
add
insb
rolb
faddl
jne
jo
and
imul
dec
mov
test
xchg
faddl
jp
add
add
add
push
xchg
pusha
jecxz
movl
and
dec
dec
xchg
cmp
sbb
pop
sbb
decb
fmull
jae
pusha
jecxz
and
dec
xchg
jae
push
jo
int3
or
cmp
and
dec
lock
loop
mov
adc
inc
xchg
jp
bound
dec
and
dec
mov
jle
hlt
dec
incb
xchg
and
dec
push
xor
adc
and
push
pop
je
xchg
adc
bound
cltd
xor
adc
and
dec
xchg
jae
push
inc
push
dec
mov
dec
sbb
jno
mov
jle
add
jecxz
inc
stos
mov
pop
adc
dec
inc
cmp
sbb
dec
loop
mov
and
dec
adc
xor
int3
pop
sti
pop
fcomps
xor
lock
loop
and
dec
mov
std
ret
mov
dec
push
movsb
aas
jle
mov
mov
mov
dec
dec
xchg
and
or
mov
dec
push
sub
stc
aam
popa
inc
loop
and
dec
mov
loop
or
jge
in
pop
pusha
cmpsl
and
repnz
out
sbb
or
cmp
ret
orb
sbb
addb
outsb
adc
outsb
add
push
sub
faddl
adc
push
xor
add
es
addl
fsubs
leave
jo
push
add
pop
nop
add
lods
or
in
sub
jo
and
push
sub
ja
call
ds
cmp
push
incl
movsb
cs
add
mov
hlt
jbe
xor
test
repnz
push
jg
scas
mov
adc
test
sti
mov
fs
lock
imul
add
shll
adc
xor
sub
sub
fstps
or
adc
or
mov
fldenv
adc
jae
and
sbb
dec
sub
sbb
pop
xchg
arpl
rcrb
leavew
insb
xchg
es
or
cs
dec
lea
xor
jle
lods
xor
sub
data16
jmp
rcl
sub
mov
js
mov
or
pop
cs
les
pop
pushf
push
orl
test
and
mov
xchg
push
pop
push
sbb
jb
sbb
add
sub
jo
mov
gs
adc
pop
pushf
inc
adcb
jo
cmp
xor
loopne
adc
jbe
and
arpl
add
dec
or
push
and
cmpsb
scas
adcl
cltd
jo
outsb
push
push
cmp
lahf
test
pop
inc
lret
or
dec
outsb
xchg
adc
or
jb
mov
sub
adc
mov
or
daa
movlps
mov
or
popf
add
mov
int
mov
or
cltd
test
xor
push
adc
add
push
hlt
push
insb
jp
add
gs
insb
cld
push
data16
cmp
xor
jbe
popf
insb
mov
jb
dec
and
and
pop
adc
es
imul
insb
pop
dec
jb
shlb
adc
gs
sub
inc
icebp
push
cmp
sub
inc
dec
dec
add
js
inc
mov
sbb
data16
nop
jmp
dec
and
lea
test
adc
sbb
or
push
fs
lea
fcmove
dec
push
xchg
push
sub
sub
adc
int3
inc
sub
push
test
inc
mov
inc
mov
data16
cmp
test
mov
mov
sub
and
add
mov
movsb
gs
xor
mov
enter
test
sbb
mov
xchg
cmp
xor
cmpl
add
pop
lret
shr
sub
loopne
test
mov
rclb
sbb
movsb
cld
add
fisubs
cli
out
adc
add
mov
clc
movsb
mov
mov
inc
insb
stos
adc
xchg
arpl
fs
lahf
pushf
mov
jle
adc
dec
push
and
outsl
mov
mov
and
push
pop
cmp
sub
adc
xchg
fs
jb
loope
jbe
xor
mov
pushf
pop
sub
in
adc
fidivl
inc
sbb
enter
arpl
jo
push
inc
or
dec
xchg
mov
push
sbb
nop
lret
gs
dec
test
push
mov
adcb
cmpsb
clc
rolb
pop
jae
pop
dec
in
mov
cmp
dec
and
hlt
jecxz
rcrl
jmp
mov
sub
push
sub
stos
inc
adc
cmpsl
push
xor
dec
bound
dec
jae
or
or
es
inc
pushf
dec
ror
cmp
push
pop
inc
sub
cmp
lods
sub
adc
adc
mov
pop
stos
jo
out
jns
enter
adc
mov
movsb
sub
mov
sub
mov
mov
pop
mov
addl
imul
dec
cld
adc
jb
jb
imulb
loopne
inc
mov
jae
or
les
adc
jae
sbb
cmp
clc
aam
loop
pop
fiaddl
lret
out
adc
and
in
xor
sub
repz
addb
xchg
fs
inc
push
xor
xor
add
lahf
lock
out
cmp
addb
mov
sbb
cmp
loopne
adc
lcall
mov
adc
add
sti
int3
clc
js
inc
jno
add
iret
lcall
and
mov
jg
xchg
idivb
mov
dec
out
sahf
std
dec
fldt
push
add
adc
clc
add
fildl
mov
add
dec
repz
test
push
testb
push
push
sbb
lcall
enter
and
push
xchg
lret
xor
stc
in
lcall
sarb
jnp
out
pop
roll
mov
jecxz
lock
aaa
inc
jle
out
mov
wrmsr
stos
push
lods
nop
sub
jbe
ljmp
mov
add
faddl
lret
hlt
ret
mov
and
nop
mov
pop
xor
jp
mov
push
ss
mov
xchg
mov
cmpsl
add
push
jbe
push
sub
inc
add
repz
mov
inc
decb
out
sub
xchg
add
hlt
adc
xchg
add
and
sub
mov
loop
loopne
add
pushf
repz
shrl
dec
add
xchg
outsl
loop
mov
fwait
add
mov
sbb
cmpb
js
xchg
adc
stos
sub
add
mov
loope
sbb
outsb
rclb
add
movsb
mov
jle
mov
cmp
into
test
addl
loope
pop
xchg
rorl
out
fistpll
into
xchg
mov
sbb
mov
jl
push
loop
jmp
pop
iret
sti
mov
sub
sub
inc
pop
pop
add
dec
fadds
sub
push
dec
outsb
arpl
mov
mov
lds
leave
jo
inc
loopne
add
mov
mov
push
mov
imul
cmc
xor
inc
or
jb
icebp
add
jae
xchg
xchg
xor
lock
bndcn
mov
cld
lret
add
sti
sub
cwtl
les
fdivrs
adc
mov
shrb
inc
inc
les
cmp
rorl
inc
adc
shl
push
faddl
add
jb
cwtl
insb
xor
cmp
fs
inc
fists
je
inc
jb
pop
inc
arpl
push
out
mov
dec
icebp
icebp
jbe
adc
jb
adc
push
mov
jl
push
jb
jne
push
inc
into
gs
outsl
insl
arpl
adc
xor
jae
cmp
inc
jnp
fadds
push
push
dec
xchg
add
mov
sti
out
lock
outsl
dec
xor
mov
sub
or
or
sti
jle
ss
js
xchg
xchg
push
pop
stos
mov
mov
push
outsl
and
mov
dec
jae
nopl
outsl
rolb
push
inc
adc
dec
popa
insl
adc
inc
out
insl
cmp
out
sarb
xchg
sbb
or
shll
inc
movaps
incl
fwait
ljmp
pop
pop
add
push
xchg
xor
es
das
stos
jno
push
out
cmp
jge
popa
fildl
pop
inc
iret
sub
sbb
sarl
and
fstpl
dec
sarb
inc
adc
stc
push
fnsave
inc
push
fsubs
outsb
addr16
mov
dec
outsl
daa
push
pop
cmp
adc
mov
pushf
push
jbe
jo
inc
pusha
push
gs
bound
jns
mov
stc
std
inc
inc
adc
sahf
outsb
mov
pop
loopne
enter
rclb
inc
test
jae
pop
or
dec
pop
test
test
push
pop
ret
push
aad
push
popa
or
inc
dec
cmp
scas
popf
sbb
or
repnz
push
fsubr
sbb
bound
xchg
dec
xchg
mov
pushw
mov
arpl
mov
test
negl
out
cmovno
movsl
mov
sbb
dec
aad
adc
jp
decl
bound
adc
addr16
or
push
jp
or
bound
dec
or
push
scas
rolb
push
xor
xchg
adc
push
imul
ja
inc
mov
or
push
dec
cltd
add
push
clc
insl
jo
shrl
leave
adc
dec
gs
in
or
inc
jp
jmp
fildl
push
inc
jb
mov
shll
jns
inc
mov
inc
mov
inc
inc
mov
xor
jae
xor
jo
push
mov
mov
xor
xor
fnstenv
subb
sub
imul
jbe
and
adc
shl
push
mov
leave
mov
fwait
movsb
dec
jge
mov
insl
flds
arpl
test
imul
add
add
add
add
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
pushf
add
mov
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
pushf
add
sbb
add
add
and
and
add
add
test
add
add
add
sub
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
add
add
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
inc
mov
incl
decl
imul
add
add
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
add
add
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
add
add
imul
imul
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
decl
imul
add
add
imul
imul
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
decl
imul
add
add
imul
imul
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
incl
decl
imul
add
add
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
incl
incl
incl
decl
imul
imul
imul
imul
imul
imul
imul
imul
imul
add
add
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
incl
incl
incl
decl
imul
imul
imul
imul
imul
imul
imul
imul
imul
add
add
imul
imul
incl
incl
incl
decl
imul
add
add
imul
imul
imul
imul
imul
imul
imul
add
add
imul
imul
imul
imul
imul
imul
imul
add
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
lock
pop
push
pop
push
pop
push
pop
incl
