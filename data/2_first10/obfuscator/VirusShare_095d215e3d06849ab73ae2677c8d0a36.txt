mov
data16
mov
js
xchg
pop
xor
push
cli
jg
adc
fnsave
hlt
lret
adc
out
mov
xor
jae
pusha
mov
inc
jb,pn
cs
cmc
inc
sub
or
test
mov
in
xchg
insb
cmp
in
push
loope
cmp
xchg
mov
sarb
mov
xor
std
sarb
out
enter
bound
dec
inc
sub
adc
or
mov
dec
dec
arpl
cltd
repz
out
sub
xor
into
inc
enter
cli
loope
or
out
cld
loop
inc
ret
aaa
inc
cmp
xchg
pop
pushf
push
bound
cmpsl
pop
cwtl
mov
mov
adc
outsb
out
test
shlb
out
orl
into
out
lods
nop
lock
fsubs
inc
dec
jno
fstpt
sti
std
xor
testl
cld
cmp
das
out
dec
daa
ss
rol
xlat
push
inc
sbb
mov
mov
cwtl
enter
sbb
add
sbb
jmp
xchg
test
stos
popa
mov
ficoms
inc
sub
inc
push
bound
ss
pop
fwait
lods
cs
mov
add
push
popf
jbe
in
jg
movhps
shr
inc
push
add
cmp
rcrl
or
jnp
mov
inc
or
int
adc
mov
sti
outsl
dec
pop
xchg
call
mov
pushl
push
sub
or
int
push
ss
add
mov
push
sbb
adc
xchg
loopne
mov
dec
mov
dec
adc
sbb
sahf
sbb
sub
cmp
mov
jge
jg
lret
cmpsl
dec
pop
outsl
mov
data16
inc
mov
jg
jns
and
sub
add
int
nop
leave
shl
rcl
iret
add
mov
mov
cmp
pop
xchg
js
mov
mov
andb
call
fs
arpl
dec
loop
jecxz
pushf
mov
mov
mov
mov
xchg
push
cmp
jb
xchg
sub
xchg
inc
inc
sub
inc
or
je
sahf
inc
and
inc
dec
xchg
sbb
adcl
mov
mov
cmp
and
xor
or
fs
inc
jp
push
cmp
lret
mov
adc
clc
push
cltd
insl
and
or
in
cld
mov
mov
js
test
mov
outsl
pop
lock
pop
sti
mov
add
sbb
in
add
jge
das
andl
push
es
dec
pop
sbb
sbbl
add
add
out
out
add
aam
dec
rolb
lahf
arpl
and
add
push
inc
stc
xor
popa
popa
mov
inc
mov
adc
in
xchg
enter
ret
jb
int3
test
arpl
fwait
xchg
pop
or
cwtl
punpckldq
mov
aas
in
xor
or
mov
cmpb
sahf
fmull
inc
pop
push
enter
sub
jne
mov
roll
cmp
sti
mov
imul
aad
test
inc
popf
adc
lahf
fcmovne
xchg
int
lds
clc
gs
out
and
mov
cld
ret
ret
popf
stos
cwtl
inc
sbb
imul
mov
jp
cmc
mov
mov
stos
and
push
outsl
xchg
out
jnp
leave
push
cmp
js
clc
int3
loope
inc
cmp
jge
cmc
lahf
mov
add
test
adc
popa
pop
dec
clc
pop
add
inc
adc
fisttpll
jle
mov
sbbb
mov
jb
mov
cmp
das
ja
cltd
notl
jbe
xchg
js
cmp
xor
mov
jb
in
pop
ja
mov
jg
pop
push
mov
loop
jmp
add
pop
inc
dec
daa
mov
je
movb
lret
leave
push
mov
mov
adc
add
inc
and
adc
in
sarb
add
inc
jmp
cmc
mov
sti
add
outsl
orl
mov
cmp
jbe
fnsave
popf
dec
test
sbb
cs
push
push
lea
lea
jb
or
jp
and
scas
mov
adc
lahf
dec
or
dec
sahf
iret
arpl
aaa
push
stos
lret
icebp
out
push
mov
aaa
or
in
test
movsb
cmp
adc
mov
scas
stos
in
testb
sbb
movsb
mov
inc
cld
cltd
mov
push
push
push
lds
mov
and
insb
in
xchg
jae
cli
iret
pop
ja
gs
pop
jp
out
insb
incb
cmp
nop
loop
daa
fbstp
jnp
cmp
loope
xchg
adc
sub
jge
jno
mov
or
mov
xchg
mov
mov
jp
test
push
inc
arpl
cmp
lods
sti
or
pop
pop
test
fldenv
or
lods
xchg
mov
outsl
sti
sbb
adc
add
pushf
mov
imul
dec
loope
shll
dec
sub
in
jle
icebp
fdivrs
inc
mov
test
aam
and
xor
and
andl
mov
dec
in
sub
movsb
test
cld
test
push
push
add
pop
test
test
test
pusha
push
mov
pop
mov
jae
js
push
inc
pop
and
xchg
shl
test
push
pop
js
test
jbe
and
jle
and
clc
lea
push
cmp
pop
cld
add
xchg
cld
cmp
cmc
cld
lea
push
jno
push
lea
pop
pop
add
stc
jmp
jmp
call
push
cmp
pop
add
stc
and
mov
inc
inc
inc
inc
jne
push
and
pop
xchg
cmp
push
or
pop
clc
clc
xor
add
nop
push
pop
test
push
push
test
pop
pop
lea
lea
push
add
mov
pop
xchg
cld
pushl
pop
sub
push
call
mov
ret
and
cmp
cld
pop
inc
xchg
xor
pop
pop
test
je
shl
jmp
cltd
sbb
sbb
jns
scas
mov
insb
sub
pop
in
jecxz
mov
inc
or
mul
imul
add
pop
sub
jg
xor
xor
cld
push
mov
xor
pop
xchg
xor
jo
push
cmp
pop
push
movzbl
xchg
loop
pop
and
jo
push
sub
pop
test
jge
or
jge
push
or
pop
nop
test
push
mov
push
xchg
movsl
xchg
mov
pop
push
js
xor
pop
xor
lea
xor
rol
xor
nop
clc
sub
jmp
sub
add
int3
loop
jnp
sahf
xlat
testl
jg
clc
inc
insb
daa
adc
fstpl
inc
mov
mov
in
and
adc
aad
sbb
mov
int3
and
cwtl
dec
jne
jl
and
ja
jne
cmp
stc
push
push
test
pop
pop
push
mov
pop
push
or
pop
push
and
pop
push
shl
pop
cld
xor
push
ror
pop
test
test
stc
jmp
loop
jecxz
mov
or
nop
push
das
push
sub
jns,pn
out
inc
decb
inc
jmp
jae
push
sub
scas
adc
push
outsb
repz
pop
jp
push
flds
mov
nop
dec
xor
mov
push
test
mov
call
enter
test
push
push
dec
cmpsl
jb
mov
mov
les
xchg
imul
setg
outsb
mov
insb
sbb
das
and
push
fdivr
popa
fidivrl
pcmpeqw
into
push
add
fdiv
push
mov
ds
out
mov
dec
cmp
or
cmp
jle
lahf
out
es
pop
test
hlt
lret
dec
xor
subb
push
ret
loope
xor
gs
push
cmp
jae
xor
repz
pop
xchg
cltd
out
pop
xor
push
enter
sbb
mov
imul
outsb
mov
stos
sub
sti
mov
es
push
or
mov
xchg
jg
icebp
cmc
push
ds
lods
push
push
int3
into
jne
cmp
inc
clc
xchg
lret
cmp
pop
push
xchg
mov
cmp
mov
adc
lcall
mov
xchg
std
xchg
leave
xor
jmp
aam
into
sarl
sbb
cmp
mov
push
stos
out
push
adc
push
stos
cs
sub
inc
cmp
into
mov
cmpsb
imul
push
inc
enter
sub
ss
gs
mov
mov
ljmp
cmpsb
adc
jecxz
push
idivl
into
stos
jp
fsubrs
sbb
cmpsb
scas
shlb
repz
mov
dec
js
cmpps
fucom
stos
dec
xchg
sub
cmp
and
sti
enter
fsts
cwtl
movsl
out
push
loope
stos
sub
sub
mov
cmp
pop
mov
push
or
mov
push
call
push
cli
cmpsb
push
lret
add
ret
push
mov
stc
fwait
stos
cmp
jp
test
ljmp
adc
aas
xchg
ja
out
clc
dec
into
jle
imulb
sub
inc
clc
dec
pop
scas
cmp
aas
push
mov
out
push
das
mov
mov
enter
xchg
mov
fdivs
jmp
mov
cld
sbb
cli
lods
sbb
in
mov
mov
add
dec
adc
es
testb
push
das
clc
stos
sbb
fcmovbe
cld
lcall
cmc
cmpsl
push
xor
mov
sub
int3
sub
insl
mov
mov
add
push
xchg
insl
pop
cmp
and
mov
cmpsb
rcrb
mov
push
push
ret
cmp
mul
call
push
mov
cli
push
rol
imul
xchg
sub
adc
and
mov
jne
mov
adc
lret
movsl
xor
pop
decb
into
enter
scas
into
aad
pop
ljmp
jnp
aas
out
push
in
or
aad
fldt
xchg
cmp
int3
leave
shrl
test
clc
xchg
cltd
inc
xchg
pop
iret
jb,pn
mov
js
mov
js
mov
imulb
pop
push
ljmp
sti
iret
out
jae
enter
cmpsl
stos
std
stc
mov
xchg
mov
enter
js
xor
orb
repnz
dec
pop
sti
cmp
je
iret
and
cmp
push
push
lds
out
pop
mov
mov
aas
lret
jp
add
xchg
pop
and
push
popf
test
repnz
out
jp
into
into
int
stos
push
cli
clc
push
fucomip
mov
xor
xchg
mov
cli
fildll
adc
mov
ficoms
hlt
clc
sti
xchg
mov
enter
xor
xlat
sub
xor
cmp
stos
movsl
aaa
cmp
xchg
lods
leave
iret
shll
cmp
and
scas
stc
or
out
shl
sti
dec
add
push
push
popf
mov
push
adc
mov
mov
es
das
outsb
dec
lret
pusha
sub
orl
sbb
mov
les
cltd
sbb
sub
add
xor
sub
and
xor
lret
dec
in
popa
int
jbe
sbbl
dec
es
pop
mov
clc
ja
pop
xchg
pop
or
push
jb
pop
pop
inc
push
push
and
loopne
outsl
stos
fcompl
xchg
xchg
dec
adc
push
jbe
sub
xchg
lahf
mov
xor
push
mov
sbb
cwtl
add
insl
repz
pop
push
sub
cmpsb
jb
inc
in
sbb
lcall
jmp
rclb
test
xchg
pop
dec
dec
notb
fisttps
loop
loope
pop
fwait
push
pop
test
or
rorb
cwtl
popa
pop
sbb
enterw
push
or
cs
fwait
push
outsl
pop
cmpxchg
ja
in
hlt
adc
lds
ds
in
sbb
ds
inc
push
das
scas
dec
sbb
stos
inc
adc
ds
sbb
test
testb
push
test
lret
pop
das
xchg
mov
in
dec
outsl
sbb
sub
lods
mov
sbb
push
ret
jecxz
in
ja
scas
sarb
popf
mov
and
or
popf
insb
dec
mov
js
lahf
push
jo
jl
clc
inc
imul
and
jmp
pop
sbb
stos
cmpsb
xor
sub
popf
cmp
cmp
adc
and
mov
push
jmp
jo
fsubs
sbb
mov
aam
adc
lods
je
jns
cmp
inc
loop
jmp
cmpsb
cmpsl
int3
jecxz
shlb
xor
sbb
ficompl
js
push
in
mov
mov
inc
adc
cmpsb
pop
add
pop
in
fsubrl
push
mov
gs
mov
cwtl
lcall
and
test
in
je
in
jp
push
lods
push
inc
ja
fistpl
xchg
sarl
gs
cmpsl
push
mov
mov
push
mov
xchg
cmp
int3
and
scas
insb
mov
hlt
mov
inc
shll
mov
mov
jne
iret
cltd
xor
inc
lock
leave
pop
ficoms
inc
mov
or
cmc
mov
inc
or
popf
cltd
repnz
js
sub
xchg
xchg
sub
movsl
fwait
loopne
add
xchg
xchg
in
dec
stos
nop
xchg
cmpb
pop
or
andl
add
dec
addb
ja
movb
mov
add
outsb
rcrb
ret
fimull
cmp
fadds
lea
std
mov
push
push
adc
jg
cmpsl
out
pop
mov
call
pusha
add
mov
fs
lahf
popa
jp
push
xchg
sbb
mov
test
jmp
and
rcrb
outsb
mov
push
pop
mov
cwtl
jbe
das
mov
cmp
sar
repnz
mov
pop
jmp
cmpsb
lds
and
push
and
inc
aad
mov
lods
aad
xor
in
iret
lock
ss
outsl
ds
cmp
sti
cmp
push
out
xchg
pop
jnp
push
in
push
out
call
jb
pop
repnz
xor
mov
test
ds
lcall
xchg
inc
dec
scas
push
jbe
jl
fcmovu
push
xlat
xor
pop
inc
fldenv
xor
daa
scas
mov
push
mov
sbb
cltd
enter
lcall
dec
jbe
inc
ret
clc
in
loope
jge
hlt
sub
dec
push
or
lock
sub
aam
sub
loopne
pop
push
lahf
mov
cld
jb
mulb
jnp
sub
jns
fcoml
fisubs
dec
shlb
loope
cmp
add
adc
mov
pop
rcrl
mov
inc
movsb
dec
mov
fnstsw
pop
sbb
push
out
mov
jp
in
imul
mov
lahf
xor
jge
shl
xlat
dec
popf
mov
leave
and
sbbl
xchg
pop
inc
lds
push
es
in
jp
cld
and
sub
mov
jecxz
adc
adc
jbe
inc
sahf
nop
mov
xchg
xor
lret
cwtl
or
mov
dec
cmc
mov
lahf
add
or
out
dec
or
xchg
fstpt
jne
sbb
xor
out
bound
stos
jl
cltd
add
cld
mov
fsubrl
xchg
mov
repz
scas
jno
xchg
dec
jnp
lahf
mov
imul
int
jmp
xor
stos
ret
xchg
sbb
outsl
insb
add
xchg
adc
sub
popf
clc
sbb
push
stos
jl
cmp
in
xchg
out
push
imul
mov
jns
aaa
push
pop
aaa
mov
inc
ljmp
cld
inc
cmp
in
inc
popf
mov
xchg
loop
roll
test
test
cwtl
adc
push
int
mov
mov
pop
ja
pusha
out
scas
jmp
mov
xor
mov
popa
ficomps
mov
jo
lret
cld
ljmp
lds
stc
cwtl
cmp
jmp
xchg
clc
rorb
subb
gs
pop
nop
push
push
cmpsb
test
scas
incb
vmaxsd
ja
adc
ret
fnsave
cld
stc
bound
cmp
inc
frstor
cmp
sub
add
sahf
pop
or
jno
and
lret
mov
scas
sti
mov
xchg
clc
rcrl
sbb
jnp
test
movsb
or
mov
cmp
scas
lods
sbb
fidivrl
iret
inc
cltd
inc
std
jnp
xor
aam
inc
andl
cmp
mov
lahf
mov
inc
cmp
mov
sbb
push
push
shll
xor
jle
or
or
sub
outsl
inc
iret
xor
dec
dec
enter
jae
mov
pop
pop
mov
movsl
mov
bound
pop
into
cmp
mov
push
push
insb
push
push
filds
push
push
sub
mov
psubusb
and
xor
xchg
leave
inc
ljmp
add
lcall
movsb
test
push
cmpsb
jnp
sbb
imul
bound
push
cltd
xchg
mov
in
push
clc
jne
mov
mov
lret
enter
sbb
std
sbb
stos
jg
cmpl
popa
pop
aas
clc
les
push
xchg
shll
jb
into
add
movsl
outsb
in
std
cmp
orb
ficomps
imul
push
inc
out
repz
insb
jne
les
pop
pop
inc
imul
cld
adc
shlb
outsl
lds
and
imul
decb
std
cmp
iret
test
dec
aam
jp
das
in
mov
jge
adcl
bound
dec
xor
push
data16
jg
adc
arpl
icebp
and
push
imul
sub
bound
jecxz
in
clc
pop
dec
stos
or
xchg
fldcw
std
aad
dec
aad
loop
sub
repnz
jne
cmp
mov
pop
je
adc
pushf
es
jp
movl
push
mov
xchg
jecxz
shl
xor
xor
dec
dec
mov
xchg
scas
movsb
sub
stos
sarl
in
adc
scas
mov
cmpsb
outsl
inc
loope
inc
dec
les
out
pop
mov
pop
or
mov
and
jne
mov
jno
into
sbb
and
pop
sbb
mov
outsl
and
sbb
cmp
jae
mov
dec
mov
rorl
pop
aad
pusha
adc
fwait
mov
lods
jp
fcoms
in
jmp
js
push
cld
jo
out
or
gs
jecxz
loopne
mov
mov
or
xchg
xchg
out
jae
jecxz
xor
js
sub
mov
jg
lock
mov
and
into
mov
cltd
daa
scas
repnz
add
xor
cmp
inc
push
aad
fsubrs
test
fisubrl
xor
movsb
sub
cmp
enter
movb
pop
repz
mov
cmp
cmp
das
mov
sbb
shrb
jecxz
dec
sub
int
out
inc
jge
rcrl
sub
les
cld
mov
shl
mov
test
sbb
sti
jg
push
in
mov
frstor
sbb
pop
fwait
cmpsb
lcall
insb
xchg
add
jnp
std
das
mov
or
xchg
inc
mov
cltd
mov
mov
dec
dec
push
je
fdivrp
inc
mov
push
leave
in
outsl
adc
sahf
cwtl
arpl
dec
mov
gs
jge
lds
cmc
cmp
mov
push
push
push
sbb
jne
je
cld
fs
jmp
in
add
hlt
inc
adcb
adc
fmull
sbb
ficomps
sub
mov
xor
bound
arpl
mov
push
int
pushf
push
pop
pop
int
mov
pushf
inc
adc
mov
test
cmpb
lds
xor
mov
idiv
jnp
jo
shrb
mov
push
pop
mov
sub
aas
mov
call
out
dec
add
test
lock
or
dec
out
mov
or
pop
jbe
dec
jo
fldenv
in
cltd
xchg
xchg
mov
push
cltd
dec
jbe
and
lea
ja
or
sbb
cltd
iret
testb
cmp
imul
addl
xlat
enter
ja
scas
das
adc
enter
ljmp
je
test
hlt
cmpsb
mov
jne
icebp
cmpsb
mov
cmpsb
lea
out
pop
insl
or
or
cmp
mov
dec
lret
mov
lea
inc
jle
sub
popf
cwtl
xchg
sahf
xor
cmp
jbe
dec
mov
das
cmc
and
mov
popa
pushf
xchg
outsl
es
shl
insl
or
xor
sub
mov
ljmp
rcll
add
ljmp
loope
lahf
push
arpl
repz
dec
adc
fwait
lret
in
adc
test
cmpsl
xor
add
leave
cmpsl
adc
inc
or
adc
push
mov
test
stc
and
dec
xor
jp
daa
stos
jnp
mov
inc
or
pop
jmp
sub
xor
sub
insl
outsb
mov
or
lds
call
adcb
test
xor
pop
or
icebp
xorb
inc
aas
sbb
push
std
insl
inc
mov
pop
inc
push
leave
jb
addr16
adc
aaa
push
out
aam
mov
sbb
lret
push
cmp
ss
fldz
dec
jo
dec
and
jl
int3
push
and
and
adc
pop
rolb
call
xor
fisubs
jp
xlat
insl
cmpsl
mov
push
adc
add
jnp
cli
adc
mov
shlb
loopne
xchg
mov
cmpsb
repnz
mov
xor
mov
xchg
rcll
sahf
push
fisubl
jb
push
push
pop
into
add
mov
add
pop
orl
mov
es
rcpps
xchg
push
fistpl
xchg
std
sbb
out
fwait
into
jmp
aad
leave
imul
mov
popa
js
fistps
andb
std
or
scas
jg
mov
into
imul
jbe
icebp
mov
lahf
mov
mov
les
aad
pop
xchg
rcr
inc
push
fwait
test
push
mov
repz
mov
sub
push
adc
nopl
stos
adc
ljmp
movsb
fists
add
fdivp
daa
ret
ret
jae
mov
mov
orb
inc
mov
or
dec
add
pop
dec
adc
sbb
ss
cmp
mov
shlb
add
scas
inc
lret
fistl
inc
dec
add
shr
jmp
imul
test
in
or
sahf
pop
leave
inc
pop
fistps
int3
mov
jecxz
pop
stos
inc
int
mov
lret
mov
lods
push
js
leave
cltd
mov
cmp
int
test
enter
outsl
sarb
cs
jnp
pop
shll
adc
mov
outsl
jl
and
insb
aam
sbb
idivb
mov
in
sbbl
nop
adc
xor
adc
mov
xor
xor
mov
mov
faddl
test
inc
jne
jmp
pushf
ja
in
les
jno
push
call
jle
add
sub
cmp
pop
imul
or
mov
lods
into
aam
stos
daa
sub
fbstp
mov
icebp
jnp
push
inc
sbb
pop
sbb
movsl
mov
fwait
in
xchg
and
test
add
xchg
imul
loop
insb
add
cmp
inc
xchg
mov
imul
mov
xor
subb
fadds
ja
xor
inc
jge
sbb
pop
loopne
ljmp
sbb
cmp
push
mov
or
mov
in
rcll
mov
daa
ja
stc
lds
mov
jmp
mov
jl
dec
rolb
mov
inc
xchg
and
mov
jl
gs
xor
mov
in
mov
test
mov
pop
in
popa
and
sub
jno
nop
xchg
lret
arpl
and
push
test
fwait
repnz
lret
lds
cmp
pushf
lods
int3
pop
lock
out
push
or
nop
jbe
mov
dec
cmp
xor
jmp
xchg
sbb
cmp
je
int3
or
outsl
fadd
dec
out
sub
sbb
sbb
cmpsb
mov
shr
adc
sub
sti
cmp
stos
inc
xor
push
or
push
jae
xchg
add
push
push
mov
insb
fnstcw
sbb
outsl
lret
pop
adcl
loop
and
subb
std
out
jp
cmp
out
mov
mov
iret
xchg
inc
pop
sbb
push
or
addr16
add
jne
sbb
mov
sbb
repz
dec
iret
nop
inc
ja
imul
ljmp
cli
in
lds
loopne
or
or
adcl
mov
fs
lcall
mov
jno
fmul
adc
mov
cwtl
or
and
repnz
scas
loop
sub
fwait
jnp
cmp
icebp
jno
pop
dec
dec
jecxz
jb
fwait
in
sub
mov
mov
pop
jnp
dec
add
aam
jno
xlat
out
shll
cmpsb
inc
mov
xchg
arpl
push
or
fadd
push
push
stc
mov
mov
lods
cltd
sbb
xor
inc
inc
shr
xor
imul
jecxz
mov
jecxz
mov
dec
xchg
ljmp
mov
dec
daa
mov
adc
xchg
pop
add
jns
mov
ja
cld
jl
inc
xor
jae
inc
and
xchg
fwait
push
in
lret
call
loopne
je
test
lcall
mov
mov
dec
adc
shll
and
push
cmpsb
into
aam
xchg
inc
adc
jb
xor
pop
adcl
frstpm(287
mov
xor
push
js
sub
fistl
push
add
mov
loopne
mov
pop
rclb
stos
mov
ja
nop
fimull
inc
je
inc
call
pop
in
test
mov
push
cmp
cltd
cli
mov
dec
jb
jecxz
call
and
pop
adc
xor
xor
adc
dec
scas
mov
in
cmp
xlat
sub
shll
dec
pop
lret
cltd
mov
sub
popf
int
and
divl
cld
adc
jo
outsb
xlat
sti
test
mov
add
jmp
add
fistps
inc
cmp
pop
mov
in
push
std
cmp
out
sub
out
insl
scas
mov
mov
mov
aas
xor
mov
aam
sbb
shlb
stc
adc
pop
push
sbb
popf
cwtl
sbb
ftst
jne
push
fs
sub
pop
push
daa
push
sub
ficomps
jb
cmp
das
pop
or
fs
adc
xchg
addb
cmpsl
in
cwtl
mov
pusha
pop
stos
adc
mov
sbb
adc
repnz
imul
cmp
and
jmp
stos
cmp
xor
jae
ja
adc
push
xor
jb
into
pusha
mov
inc
add
stc
scas
lahf
mov
std
in
outsl
xchg
jno
aam
mov
push
lahf
dec
lahf
cmp
inc
stc
cltd
hlt
mov
sbb
sbbl
mov
repnz
dec
sbb
xorb
xor
sbb
pop
lret
cld
lret
pop
mov
jne
or
out
fsubs
push
inc
and
inc
push
jp
jns
pop
cmp
popf
cs
cmp
pop
shrl
push
fcompl
jbe
xor
jle
mov
cmp
aam
jo
xchg
adc
push
cmpl
outsb
pop
orl
shll
jnp
adcl
subl
dec
insb
pushf
repz
and
mulb
push
jo
std
testl
mov
rol
daa
pop
mov
push
push
push
pop
pop
adc
dec
cli
enter
push
mov
pop
xchg
lret
jne
cltd
ljmp
mov
enter
in
push
jbe
out
iret
dec
push
or
dec
stos
sahf
sub
or
pop
mov
sbb
push
imul
cmp
imul
dec
adc
rclb
or
int3
mov
pop
rorl
insb
mov
xchg
adc
fwait
pop
ja
popf
push
bnd
std
push
pop
jns
jns
push
ljmp
loopne
leave
push
das
push
jo
sbb
add
mov
nop
add
out
and
push
testb
lods
cmc
xchg
sbb
sub
aas
pusha
jmp
aam
iret
aas
jnp
adc
mov
push
fmulp
push
nop
mov
mov
sbb
js
xor
scas
dec
lret
jnp
jno
push
xchg
xchg
mov
jge
popf
adc
add
test
in
testb
lea
stos
es
scas
ja
xchg
sar
push
sbb
mov
popf
xor
sbb
xor
sub
jb
mov
insb
sub
inc
jle
dec
adc
into
sbb
test
in
jmp
mov
push
push
icebp
jns
sbb
icebp
pminub
dec
jo
mov
push
push
jp
dec
ss
movsl
xor
adc
aaa
xchg
gs
mov
jnp
mov
jecxz
adc
sub
ret
out
out
dec
cltd
fcom
sarl
sti
sub
mov
mov
xor
add
jg
faddp
out
lcall
jbe
or
sub
mov
dec
pop
shrl
xchg
mov
add
add
sbb
ss
dec
daa
mov
rorb
mov
jg
xor
push
aaa
and
add
pop
adc
cmpsb
repz
xor
lock
jl
loop
rep
test
pop
loopne
and
leave
inc
lods
jns
mov
mov
movsl
in
cmp
push
rol
and
mov
bound
mov
imul
sbb
aas
ss
jg
inc
insl
sbbb
and
stos
cltd
add
mov
arpl
or
xor
int3
je
in
test
sti
cltd
loop
cmp
movsl
or
outsb
jg
push
enter
xchg
dec
pop
add
sbb
sbb
fisubrs
pop
idivb
mov
mov
mov
ret
stos
push
into
leave
or
adc
aas
mov
or
call
neg
fstpl
in
popf
jno
repnz
cmp
xor
fsubrl
dec
cmp
dec
outsl
inc
pop
out
daa
xor
xchg
mov
rorl
cmc
push
int
in
dec
fistl
repnz
adcb
fcompl
sub
cmpsl
sbb
sub
movsl
cmp
jae
test
outsb
insb
mov
test
mov
adc
cmc
sbb
call
mov
cmp
in
sbb
mov
and
or
cmc
adc
sub
mov
lret
pop
and
jg
int3
out
call
adc
test
cwtl
int
dec
cmp
adc
ljmp
cmp
loope
mov
cli
jge
test
and
fcmovnu
movsb
add
mov
addr16
mov
in
mov
push
xor
push
lret
inc
xchg
out
ret
mov
out
jbe
nop
mov
dec
subl
mov
jno
dec
outsl
enter
add
adc
mov
inc
movsl
scas
xlat
xor
cli
mov
lret
sbb
sbb
mov
insb
adc
and
jns
rcrb
dec
ficomps
je
mov
lock
push
stc
adc
jb
sahf
dec
jl
xor
or
rorb
in
mov
leave
shlb
add
sbb
pushf
ret
orl
jbe
outsb
adc
mov
push
ljmp
add
and
stos
cli
add
push
mov
scas
imul
popf
data16
out
and
incl
fcomp
imul
int
adc
fucomip
stos
pop
cld
je
stos
aas
cmc
lea
test
jno
pop
cmp
or
jae
das
out
xchg
add
and
and
test
jge
leave
mov
pusha
repnz
std
adc
js
addl
outsl
push
test
sub
in
out
push
vpcmpgtd
rcrb
adc
sahf
xor
mov
std
scas
xor
lds
insb
mov
mov
loopne
mov
insl
ja
mov
inc
sub
pop
clc
cmp
shlb
push
xor
dec
jns
xor
pop
xor
imul
mov
dec
sub
cmp
cmp
pop
cli
call
jb
xor
into
push
xchg
rolb
notb
dec
jae
es
ret
mov
pop
pop
jmp
pop
jmp
cmc
or
jle
das
fcmovnbe
addr16
test
sbb
and
scas
leave
mov
dec
leave
sbb
push
or
popf
dec
stc
daa
pop
add
arpl
in
imul
xchg
enter
loopnew
call
xor
cmp
lds
mov
add
popa
cmpsl
mov
lods
insl
daa
pop
in
mov
xchg
sub
xor
xlat
lods
popf
jl
dec
dec
lods
mov
loope
cmp
mov
js
sti
in
lods
xchg
inc
xor
lods
incl
fimuls
cmc
adc
or
pop
div
mov
mov
jae
jge
ds
adc
lcall
dec
lret
test
or
ret
mov
xchg
fsubrs
pop
push
mov
stc
mov
or
imul
xor
inc
push
lret
bnd
add
dec
mov
and
push
pop
test
dec
or
push
inc
jle
lock
cmp
add
push
or
jnp,pn
fwait
je
sahf
clc
inc
jne
jae
mov
mov
ret
lock
outsl
movsb
loop
mov
mov
dec
push
gs
fnsave
mov
add
fildll
xlat
inc
add
pop
pop
cmpsl
mov
dec
jmp
movl
ret
lahf
mov
mov
imul
xorl
jl
jmp
mov
ret
and
sbb
bound
push
daa
xor
popf
or
loop
sub
fwait
mov
push
fwait
adc
mov
nop
mov
out
cmp
repz
and
stc
xor
mov
mov
sub
mov
add
jnp
push
popf
aaa
stc
movsl
mulb
cmp
stos
mov
popf
loope
xchg
add
dec
mov
jno
out
jge
jge
out
test
jge
or
or
jl
sub
jp
js
popf
cld
cmp
loope
and
lea
fisttps
mov
xchg
inc
std
fisubl
sbb
insb
dec
pop
or
insl
pop
outsb
inc
pop
test
insb
mov
test
clc
jns
add
or
push
loope
mov
cld
push
xchg
dec
lods
test
fadds
jp
mov
xor
jno
adc
sbb
jnp
scas
cmp
pop
adc
or
movsb
dec
jnp
add
mov
mov
addl
outsl
pushf
pop
push
div
xchg
adc
mov
movsb
jb
adc
outsl
stos
fcmovnb
subb
push
stos
mov
mov
outsb
inc
xchg
fisttps
lods
les
mov
pusha
lret
mov
mov
ret
add
cmp
lods
inc
iret
and
sbb
sbb
lock
repnz
dec
adcl
rorb
pop
mov
fbld
xor
push
movsb
cmp
mov
pop
mov
loop
jnp
sub
sbb
dec
idivb
inc
xor
fimull
xchg
pop
movb
mov
repnz
adc
aaa
pop
push
rcll
push
sar
daa
sub
leave
pop
nop
dec
dec
int3
sub
inc
jne
ja
and
dec
mov
dec
adc
out
outsl
ds
push
sub
inc
xor
jl
pop
cmp
jno
mov
cmpl
mov
inc
lods
ljmp
push
pop
add
push
shlb
lods
in
bound
rorl
cmpl
inc
sbb
fldt
je
sbb
cmp
xor
and
in
cs
cmp
push
push
rcll
add
lcall
push
repnz
pusha
pop
pop
and
lods
aas
pop
fimull
jp
cld
insb
cmc
mov
hlt
pop
out
dec
pop
push
cs
cli
inc
shll
cmp
insl
pop
fidivrs
addl
std
out
and
inc
push
loop
cli
cmp
and
pop
sub
clc
or
jnp
leave
xchg
and
mov
jnp
scas
movsb
shlb
cwtl
cmp
cmp
and
aaa
int3
push
jb
inc
cs
call
jp
cld
lcall
or
mov
addr16
adc
mov
mov
xor
pop
scas
arpl
or
insl
repz
push
fs
enter
sbb
xor
dec
push
sbb
and
call
sub
std
out
cli
and
leave
iret
cmpsb
mov
neg
xor
xor
sub
mov
int
mov
pushf
fisttpl
mov
roll
dec
push
das
lcall
nop
xchg
outsb
std
sbbb
out
pop
subl
icebp
xchg
jecxz
mov
enter
mov
data16
mov
fwait
loopne
sub
xchg
pop
popa
subl
sbb
incl
mov
xor
std
jae
sbb
in
xor
and
mov
test
push
dec
add
and
daa
out
flds
mov
je
popa
arpl
out
fcmovnbe
add
jge
mov
sub
testb
pop
stos
arpl
jmp
dec
out
loope
popa
inc
cmc
std
pop
repnz
cmpsl
enter
loopne
jbe
mov
xchg
adc
mov
dec
cmp
dec
cmp
fadds
test
jmp
fldcw
fstpt
gs
push
lret
sahf
imul
cld
and
xchg
adc
test
xchg
cmp
lahf
mov
into
inc
jecxz
sub
xchg
xor
or
data16
push
jmp
icebp
in
cmp
dec
fs
inc
lea
xchg
inc
cmp
ficompl
cmpl
repz
mov
and
pop
or
cmpsb
daa
gs
dec
dec
shll
dec
dec
and
scas
mov
jns
cs
jb
gs
adc
insb
jl
loope
jo
add
or
fistps
push
loope
sbb
mov
loope
scas
add
popl
mov
test
jae
sub
or
and
sub
xor
push
or
jecxz
mov
pushf
fistl
mov
mov
mov
and
subb
adc
stc
mov
pop
loope
int3
sti
int
repnz
adc
add
lahf
lret
test
xchg
outsl
iret
sub
mov
mov
in
push
xchg
mov
int
lods
adc
sbb
sbb
inc
fidivl
push
dec
pop
pop
push
pop
adc
inc
dec
int
cmp
aad
and
jne
xor
mov
aas
out
insb
mov
cmp
insb
cmc
mov
fs
fldenv
jnp
je
sub
and
test
adc
sti
aas
xchg
mov
lretw
mov
filds
je
jg
fcoml
and
stc
frstor
jg
ljmp
xchg
int3
aad
push
mov
mov
ds
daa
jno
and
dec
pop
inc
mov
into
and
mov
push
sbb
sbb
jge
xor
fistpll
fwait
dec
outsb
xchg
lea
sarb
xor
pop
mov
ror
inc
fstpl
cmc
xchg
ret
inc
mov
fstpl
push
pushf
out
movsl
fiadds
jge
pop
sub
inc
repnz
aad
xor
push
test
mov
ret
aas
or
adc
mov
rcll
add
pop
add
loopne
xlat
inc
sub
jns
xchg
out
testb
stos
movsl
fistpll
or
js
lret
mov
mov
jns
push
and
lods
sub
loope
dec
into
and
rcll
cwtl
aad
out
dec
xor
fcmovnbe
inc
icebp
leave
xor
inc
repz
hlt
call
inc
test
push
lds
into
push
ja
sub
dec
imul
lock
jp
jne
mov
fs
daa
dec
push
xchg
or
out
mov
pop
into
fists
cmc
and
dec
out
aas
mov
dec
push
xor
repz
gs
pusha
cmpsb
push
inc
pop
neg
js
mov
adc
movsl
inc
insb
mov
and
bnd
loopne
adc
adc
fidivs
insb
cltd
jg
cmc
inc
inc
jmp
push
lcall
icebp
sbb
adc
xchg
push
jg
jnp
sub
aad
mov
adc
popf
lods
jne
dec
sahf
jb
loop
test
cmp
jg
test
pop
sti
push
adc
mov
es
dec
and
popf
sbb
inc
or
popf
leave
insb
inc
push
or
popa
jb
out
push
adc
jne
mov
scas
mov
or
std
cltd
cmp
add
aaa
movsl
cmpsl
sbb
inc
sub
pop
xchg
xchg
rorl
push
mov
jecxz
sarb
out
inc
cmp
sbb
cmpsl
test
xor
push
mov
out
jo
adc
xchg
cwtl
push
add
fdivr
jmp
bnd
xor
adc
test
das
cli
adc
pop
xor
pop
xchg
cwtl
xlat
sbb
push
enter
sub
in
dec
mov
lock
dec
insl
fidivrs
lock
cmp
inc
cmp
ljmp
mov
adc
outsb
pop
jnp
icebp
push
and
aaa
sub
push
lcall
dec
arpl
dec
sub
std
in
dec
xchg
jns
sbb
push
insb
sbb
jg
out
ficoml
movsb
shrl
rorl
pop
lock
cltd
xlat
jp
call
push
mov
cmp
stc
je
fimull
jnp
insb
add
imulb
pop
xchg
cmp
mov
pop
into
imul
aas
repz
mov
int3
sbb
out
inc
push
and
mov
xor
dec
fs
ret
inc
add
out
xor
jmp
dec
pusha
test
popa
mov
sub
out
leave
mov
push
aas
clc
push
push
cmp
cmpsb
scas
mov
sub
outsb
dec
loope
cli
stc
lret
lds
fisttpll
lock
mov
cmpxchg
dec
dec
pop
je
bound
jl
cmp
mov
and
roll
mov
pop
pop
adc
aad
adc
cld
dec
scas
xor
cmp
mov
loopne
pop
cmp
jb
jl
insb
lcall
and
cltd
sub
test
andb
stos
dec
mov
push
lcall
mov
shl
push
movsb
xor
mov
pop
pop
add
mov
mov
lds
leave
add
call
dec
mov
das
jle
ds
iret
sub
pop
sbb
pushf
push
push
mov
sbb
push
pop
sbb
push
sub
jns
dec
jns
pop
aam
int
mov
in
lea
dec
mov
lret
std
add
dec
shlb
adc
xor
loop
mov
loop
idivb
pop
and
mov
stc
cli
pop
fs
pop
mov
fdivr
mov
ljmp
inc
lock
cmc
cmp
mov
xchg
insl
xor
mov
add
adc
dec
mov
add
and
inc
rcl
call
mov
mov
push
sub
orl
add
inc
lods
sbb
sbb
sbb
aad
in
rorl
ljmp
nop
aaa
divb
sbb
scas
daa
pop
sub
test
lock
lock
push
bound
cwtl
psubw
adc
xor
push
mov
sub
push
pop
fwait
add
imul
jle
movsb
jmp
xor
mov
test
add
mov
and
stos
lods
lods
je
dec
popf
adc
push
mov
sbb
or
daa
fadd
push
jg
jmp
insl
jbe
cli
dec
dec
dec
inc
fisubs
dec
jle
jns
in
xor
push
fsubrs
repnz
dec
jp
xor
dec
fadds
ret
je
iret
out
test
add
mov
xchg
pop
fcomi
and
mov
jg
or
mov
xchg
add
stos
mov
mov
loope
sbb
incl
mov
scas
popf
push
fs
and
sub
daa
outsb
insl
ss
cmp
das
mov
xor
scas
mov
push
insb
sub
push
add
les
jne
js
outsb
dec
ss
pop
pop
mov
push
sbb
das
xchg
jne
xor
out
std
stc
dec
stos
iret
inc
mov
xor
push
aas
push
popa
loop
xor
popf
or
int
out
orl
loopne
daa
adc
dec
adc
mov
inc
dec
or
cmp
xchg
in
mov
push
scas
sub
rcrl
mov
movsl
ss
dec
jne
add
test
repz
enter
outsl
ss
push
mov
inc
or
xchg
lcall
pop
dec
adc
ror
mov
aad
cmp
call
hlt
jbe
cwtl
xor
arpl
inc
mov
jecxz
movsl
dec
cmp
popa
rolb
jp
xchg
pop
cmpsb
rcrb
lods
outsb
aad
dec
lock
dec
sbb
pop
cmc
aad
cmp
mov
ljmp
cmp
daa
in
xchg
cmpsl
push
cwtl
push
mov
dec
repnz
stos
enter
jp
mov
movsl
out
idivb
lret
jecxz
insl
cld
mov
jns
xor
aaa
xor
out
test
ret
cmp
jmp
addr16
cmpsb
ja
dec
sub
testb
shr
notl
dec
xchg
subl
mov
xchg
fcmovb
sub
dec
sbb
mov
test
ret
mov
stc
mov
sub
jge
mov
fcmovnbe
mov
xor
jmp
xchg
jge
jns
inc
fs
lret
roll
mov
sub
loopne
cs
mov
mov
out
pop
fwait
lret
mov
pop
pop
or
inc
add
mov
mov
mov
xchg
scas
sub
into
insl
lahf
js
fisttpll
cmpl
jp
test
sti
pop
rclb
lock
out
aas
gs
movsb
inc
jl
xchg
sti
adc
mov
in
xor
jo
rorl
mov
xor
inc
dec
mov
mov
imul
sub
or
clc
out
pop
outsl
bound
or
in
dec
mov
lret
xlat
dec
pushl
clc
je
inc
add
mov
cmp
outsl
cwtl
mov
fidivrl
lahf
mov
int
lods
lret
dec
inc
fcoml
into
push
in
add
pop
xchg
das
mov
test
push
mov
dec
xorl
and
movsb
inc
jbe
cmp
cmpsl
push
push
lcall
xchg
mov
sbb
ljmp
int
add
pop
add
movsl
in
xchg
mov
movntq
out
sbb
adc
push
rorb
pop
push
push
int
xchg
dec
and
lcall
xchg
int3
stos
jno
fistpl
popa
sahf
fbld
mov
das
and
dec
int3
fstpl
and
cmp
ret
in
inc
fstl
out
out
cmp
sbb
add
lahf
daa
push
daa
xor
xor
inc
xchg
inc
push
je
sbb
fwait
out
mov
movsl
inc
sub
xchg
ret
loop
sar
push
insb
ret
mov
jno
mov
cmc
imul
jno
test
dec
or
and
mov
sub
add
or
cmc
scas
movsl
xor
push
or
gs
iret
fs
mov
xchg
or
imul
inc
add
loopne
mov
cmc
fstpl
mov
pop
or
enter
sub
mov
mov
xor
inc
pop
std
shrl
shlb
sti
pop
and
shll
dec
push
xor
test
or
pop
cltd
inc
sbb
std
xor
inc
jmp
mov
jno
inc
shlb
in
pop
or
xchg
dec
pop
aaa
fsubp
aaa
xchg
mov
sbb
push
mov
pushf
gs
movsb
nop
mov
xchg
dec
jae
mov
push
xlat
icebp
cmp
cli
pop
ljmp
dec
hlt
lock
mov
iret
popa
push
xchg
sub
clc
add
jecxz
dec
mov
mov
cwtl
stos
movsl
neg
adc
cltd
pop
jnp
sub
stos
test
push
cmpsb
lods
pop
jmp
hlt
ds
insb
das
pop
mov
sub
adc
dec
cmp
fstpt
mov
jecxz
add
movsb
mov
cmpsb
cli
pop
xchg
pop
jecxz
leave
xor
std
stos
jle
push
sub
jmp
cmp
add
adcl
mov
xorb
add
lods
push
mov
dec
aaa
mov
stos
xor
cld
cs
or
aam
cld
fsubl
xor
in
mov
cmp
insl
test
dec
jge
in
mov
ss
inc
arpl
push
xorb
inc
fsubrs
into
or
inc
ljmp
hlt
fadd
jbe
xor
mov
add
in
mov
iret
repz
sbb
into
push
int
outsl
sbb
lea
cmp
cmp
into
in
and
lods
in
jae
call
sbb
les
inc
je
fistpl
push
test
xchg
shll
sub
adc
sbb
xchg
movb
and
jb
push
xor
inc
xor
push
repnz
imul
lcall
sbbb
sar
pop
push
dec
jecxz
mov
push
or
jnp
adc
cmp
aad
arpl
test
inc
pop
jle
push
fldt
add
dec
xlat
js
ss
shl
lods
or
mov
pop
jne
pop
add
leave
mov
sbb
xor
mov
movzbl
subl
in
inc
sarl
fistl
sbb
mov
lret
pop
sarb
mov
movb
sub
jg
push
cmpsb
les
jecxz
push
fstpt
sub
lret
push
out
pop
sbb
cmp
rcrl
push
inc
mov
inc
add
jbe
jl
imul
pop
push
popf
push
repnz
iret
sbb
ja
popf
mov
stos
in
test
xor
jnp
subl
xor
or
mov
mov
pop
mov
arpl
mov
inc
push
fisttps
sub
sub
jmp
or
adc
xchg
push
lods
mov
int
sbb
xor
imul
fdivl
mov
sub
sub
xchg
push
mov
sub
mov
ret
loope
cmp
sti
jle
xchg
push
sub
push
mov
mov
cmpsb
push
int
cltd
pop
xlat
scas
adc
push
xchg
dec
das
sbb
xor
je
adc
out
idivl
std
or
sbb
inc
sub
pop
int
pop
xchg
cmp
lods
xor
fsubs
inc
fwait
jp
mov
js
stos
push
insl
inc
fldl2e
sahf
fisubrl
xchg
cld
sbb
sub
test
mov
push
xchg
pop
scas
adc
fcmove
inc
mov
mov
fimull
xchg
cmp
data16
aam
pop
cmp
jp
mov
cmp
das
pusha
cld
sbbb
xchg
or
push
fisubrs
push
mov
iret
aaa
imul
inc
sarb
out
mov
push
lahf
sahf
stos
jae
xchg
lods
fdivs
jp
xchg
shlb
sub
or
popa
sub
outsl
repnz
ret
add
shlb
jne
inc
jb
dec
and
xchg
les
arpl
cmp
in
mov
xor
dec
mov
aaa
mov
mov
pop
gs
test
cltd
pop
dec
cli
cmpsb
dec
aas
cmp
or
dec
and
loop
sub
ret
ss
popf
sbb
scas
lea
dec
sub
imul
sahf
ja
data16
les
out
imul
stos
mov
in
les
add
sbb
jo
flds
daa
outsl
push
ret
lock
leave
imul
inc
stos
into
lods
repnz
call
mov
loop
andl
movsl
or
insb
fidivrl
sbb
fldt
test
les
daa
pop
and
lods
xchg
add
rolb
pop
adc
insl
mov
add
push
into
out
cltd
push
xchg
mov
aad
add
xor
mov
inc
out
pop
or
cli
add
jne
inc
flds
je
mov
or
in
mov
sbb
cmp
push
dec
out
jp
lock
les
mov
push
adcl
mov
lret
add
outsb
loop
push
andb
pop
daa
mov
rcr
pop
xchg
dec
dec
clc
int3
sub
add
mov
add
rorl
cmpb
sbb
idivb
test
and
mov
test
add
sbbl
daa
cmp
xor
fld
xor
lds
ret
jo
mov
aad
cmp
inc
shll
in
push
mov
in
pop
sub
dec
xor
pop
jg
ljmp
das
mov
pop
jge
add
mov
add
repz
out
pop
sub
gs
or
inc
pusha
lcall
pop
adc
sbb
addr16
scas
es
pop
dec
decb
inc
iret
pmaxub
push
mov
andps
pop
test
mov
sbbb
mov
push
pop
jb
cmp
push
std
push
hlt
inc
ds
in
pop
dec
and
jmp
and
push
int3
pop
hlt
jecxz
in
enter
add
inc
repnz
in
leave
cmpsl
out
inc
dec
or
xorl
fwait
ret
sahf
push
das
jae
in
jp
sti
out
cmp
pop
push
jmp
and
imul
pop
pop
mov
ja
fsubrs
movsl
enter
jno
subb
fldt
and
icebp
js
sbb
pop
or
jae
push
fisttps
cmp
popf
ret
sub
andl
inc
inc
push
push
clc
jge
xchg
pop
pop
adc
fdecstp
je
ret
mov
push
add
jg
mov
pop
mov
je
ret
cmp
mov
cmp
dec
jno
mov
xchg
add
lds
push
fcomip
pop
xchg
xor
xor
dec
dec
jl
jnp,pn
mov
push
insl
in
test
je
mull
test
pusha
add
sub
ss
iret
mov
xor
cwtl
jo
jns
out
popa
mov
aaa
mov
data16
stos
mov
pop
icebp
inc
lods
inc
js
jnp
dec
lods
jno
in
dec
and
sbb
sti
ret
imul
sbbb
push
ror
pusha
pop
sub
lret
xor
pop
jle
push
cmpl
add
adc
repnz
sub
push
pop
mov
bound
cmp
inc
jns
nop
pop
mov
into
outsl
lods
mov
fimuls
mov
push
dec
xchg
pop
xlat
aas
negl
push
js
leave
loop
cld
cmp
dec
sbb
mov
dec
outsb
int
iret
clc
movsb
mov
mov
lds
or
lea
pop
fcmovbe
cli
adc
enter
popa
jo
mov
xchg
and
hlt
xchg
in
insb
enter
sahf
enter
lds
in
into
jp
pop
notb
arpl
xor
lahf
insl
jbe
das
inc
jmp
test
lock
adc
outsl
enter
fisubrl
pop
mov
dec
or
std
psraw
adcb
repnz
pop
mov
ret
test
cld
ljmp
flds
stos
cmpb
out
or
cmpsl
aas
push
js
xchg
pop
lds
mov
loope
push
fstl
mov
or
jo
mov
fsts
fmuls
mov
xor
nop
mov
adc
lret
inc
mov
les
out
fbstp
lock
mov
lcall
in
jge
mov
cltd
test
xor
scas
sub
loop
dec
nop
pop
arpl
stos
or
jns
mov
dec
testb
call
mov
sub
shrb
enter
xchg
jecxz
popf
mov
rol
inc
mov
mov
je
std
adc
repz
pop
out
mov
dec
dec
adc
pop
enter
pusha
or
xchg
test
mov
add
lcall
pop
jl
xchg
dec
pop
xchg
repnz
and
pop
add
arpl
in
push
shlb
jecxz
fadd
sbb
aam
push
imul
lret
daa
test
fwait
pushl
adc
add
nop
mov
mov
daa
out
lcall
sub
insl
lock
mov
or
mov
ret
pop
push
lahf
outsl
popa
adc
into
cltd
fistps
push
lahf
lods
xor
inc
mov
stc
pop
test
pop
outsl
js
xor
test
out
lahf
test
sbb
fs
mov
iret
aas
inc
cmp
push
inc
bound
push
adcl
rcl
jg
pop
fwait
sbb
inc
ja
jp
mov
push
push
stc
pop
xchg
jbe
icebp
mov
fmul
and
push
ja
cmp
dec
push
sahf
cmpsl
and
mov
int
out
mov
daa
dec
sbb
cld
in
fsubr
xor
in
push
xchg
push
xor
in
aas
ja
mov
adc
pop
xor
scas
imul
jno
or
or
cld
xchg
xor
mov
int
mov
mov
inc
push
mov
sub
rcrl
sbb
inc
inc
aaa
stos
pop
adc
dec
sbb
jae
mov
xchg
adc
imul
jo
iret
xor
inc
aad
add
mov
lock
add
or
fistpll
jmp
fs
scas
out
pusha
out
or
pop
jno
pop
sbb
sbb
cmpsl
rcrb
mov
sbb
call
pop
dec
and
and
mov
and
mov
inc
pop
and
les
jg
and
orb
call
and
inc
jno
and
and
dec
scas
dec
adc
sub
adc
inc
pop
sub
inc
dec
daa
xchg
insl
sahf
xchg
je
fistl
fdivs
mov
lods
sbb
pop
jl
sti
pop
cmpsb
leave
add
in
dec
mov
push
inc
cltd
adc
jns
fiadds
inc
test
test
cmpsb
lea
fisttpll
int3
inc
mov
and
les
je
add
out
out
int
out
xchg
jae
sbb
pop
pop
outsl
xor
jnp
mov
pop
lods
xor
out
jge
cs
lods
ja
jns
xchg
or
insl
fldt
or
inc
sahf
stos
add
xchg
in
loop
fs
mov
pop
aaa
mov
xchg
mov
fsubrl
popa
loop
fsubs
pop
cli
cmc
xchg
ret
mov
jo
xlat
sti
insb
or
push
popa
ds
lods
cmp
mov
or
adc
mov
leave
xchg
mov
lret
and
xor
jmp
mov
mov
cmpb
popa
push
bound
outsb
sub
jle
or
xor
stos
xor
inc
lret
movsb
fsubrp
mov
xchg
rcr
popf
lea
loop
or
sub
add
inc
shrb
inc
out
dec
mov
repz
cmp
insl
adc
daa
shll
jge
popa
scas
mov
mov
sar
jbe
jecxz
adc
xor
sub
jg
test
repnz
mov
cs
shr
xchg
cmpsl
xchg
stos
decl
jecxz
sub
out
adcl
mov
es
ret
idivb
imul
nop
push
scas
jmp
popa
or
imul
pop
gs
daa
push
or
sarb
ret
pavgw
pop
sbb
xor
das
push
or
rol
or
mov
cmovp
out
arpl
and
imul
jb
inc
mov
xchg
andb
xchg
mov
cmpsl
jo
fwait
leave
sarl
xchg
jmp
popa
ljmp
jno
loop
xchg
xchg
adc
call
insb
xchg
repz
mov
xchg
and
sub
pop
push
jae
cmpsl
mov
mov
push
xor
insb
cmc
add
lds
fists
lcall
or
sti
jbe
xor
push
test
outsl
xor
mov
push
ret
decl
jb
inc
jmp
inc
cmp
fs
mov
mov
push
incl
js
mov
and
addb
jle
inc
push
mov
mov
push
stos
into
scas
inc
adc
inc
repz
hlt
cli
mov
cmp
stos
shll
ljmp
inc
fidivrs
sub
mov
les
xlat
xchg
clc
jg
popa
ret
fiadds
jmp
incl
es
xchg
pop
mov
jae
in
lret
fistpll
dec
mov
or
les
inc
inc
jne
xor
nop
pop
addr16
cli
rclb
insb
or
pop
aad
mov
cmp
sbb
jge
cmp
mov
push
mov
fldl
mov
sarb
insb
in
repnz
es
cmp
jecxz
jl
inc
lds
adc
leave
lds
cli
in
ret
movsl
scas
dec
adc
mov
xchg
push
out
push
testl
fldcw
push
decb
out
clc
aaa
fwait
ja
mov
jg
mov
mov
js
ljmp
int3
pop
cmp
sub
cmp
dec
push
jno
pop
and
mov
out
shll
xchg
jnp
and
cmp
test
sub
mov
cmpsl
loopne
sbb
bound
ret
mov
shlb
inc
mov
stos
clc
insb
les
test
pushf
dec
cmp
sbb
push
jo
ja
mov
ret
je
jo
sbb
test
mov
xchg
shrl
andl
jnp
arpl
idivb
push
fwait
call
iret
inc
rol
cmp
xchg
arpl
sbb
cmp
in
lock
movsb
lret
pop
add
push
loopne
int
rcrl
fwait
pop
dec
adc
imul
dec
test
mov
sahf
or
lods
ljmp
sub
pop
jmp
jb
test
and
xlat
add
in
fiaddl
mov
jbe
insl
dec
pushf
and
ds
pop
jno
cmp
pop
push
addr16
fdivr
popa
xor
adc
jecxz
data16
and
in
mov
cmpsb
sub
or
in
into
lods
and
cmp
into
ljmp
add
js
mov
jle
or
daa
jae
jp
fistpl
push
mov
call
and
xor
dec
pop
cmpl
lret
shl
jmp
lret
daa
push
mov
es
or
outsl
mov
decb
loopne
ret
out
mov
sbbb
movsb
mov
cmpsb
jbe
push
xchg
roll
ljmp
scas
fwait
xchg
push
pop
addb
xchg
repz
dec
repz
fmul
imul
cmp
fistpll
cmp
sahf
push
enter
test
sbbl
ficomps
stos
xor
mov
mov
mov
push
into
out
std
decl
mov
pop
rorb
sbb
xchg
addr16
mov
popa
inc
paddd
enter
sbb
cmp
add
cwtl
sbb
xchg
stc
into
lret
cmp
and
jnp
mov
ds
sub
mov
push
rcr
xchg
adc
cmp
jb
or
xor
and
pop
mov
push
mov
out
rorb
mov
or
jns,pn
adc
cmp
mov
stos
push
pop
xchg
dec
sahf
rorl
mov
test
sbb
test
shrl
sub
pop
pop
add
mov
mov
and
stos
cmp
push
adc
pop
jae
add
xchg
jno
imul
dec
lods
movsl
add
mov
daa
mov
aas
push
in
jb
lret
int
hlt
daa
popf
stc
stos
cmp
outsl
cmp
push
mov
fcoml
test
aam
xor
into
mov
pop
add
jne
pop
inc
mov
arpl
mov
lds
outsl
and
clc
mov
daa
loopne
adc
in
mov
call
sbb
mov
or
fcoms
xor
sbb
mov
mov
dec
xor
in
and
and
adc
subl
adc
xor
das
adc
sub
push
cltd
addl
sub
xchg
dec
das
punpckldq
stc
jge
pop
push
or
out
imul
ljmp
pop
jne
repz
jle
in
mov
pop
and
sub
cmpsb
fwait
inc
xchg
ds
jne
pop
mov
loop
shrl
dec
icebp
jle
inc
add
test
fnstcw
fmull
fincstp
into
mov
mov
mov
and
sub
xchg
pop
mov
insl
les
mov
stc
leave
int
sbb
sub
addr16
inc
insb
fwait
andl
imul
fistl
sub
sub
add
pusha
sar
xor
ds
stos
inc
lock
adc
arpl
jae
pusha
xchg
push
adc
adc
jle
stos
cli
mov
push
loope
sub
sub
inc
or
add
je
xchg
je
out
push
aas
imul
push
sbb
inc
enter
test
cmc
imul
and
pop
dec
or
fidivrs
lods
push
xchg
mov
xor
mov
fisubrl
push
arpl
sub
pop
lret
in
sbb
cmp
sti
adc
lock
dec
cmovg
mov
fdivr
ds
idiv
sbb
mov
aad
int
cmp
adc
jb
mov
push
and
pop
pop
mov
push
adc
adc
xorb
stos
hlt
cmp
mov
hlt
jnp
imul
lahf
lret
pop
push
sbb
insl
adcb
les
jl
daa
je
and
mov
mov
in
mov
fnstcw
push
pop
lods
cmp
mov
insl
repz
adc
divl
mov
cld
inc
inc
adc
jmp
inc
iret
mov
sbb
in
jae
add
icebp
add
jne
shll
or
xchg
sub
xchg
or
sbb
push
cs
jns
cmc
stc
or
ja
les
insb
xchg
xchg
xchg
int
sub
add
cmp
popa
test
dec
cli
add
lods
push
fists
dec
pop
push
mov
dec
movsb
mov
cmpsl
jp
adc
mov
xchg
je
clc
xor
out
fnstsw
arpl
jo
gs
xchg
or
ljmp
cld
loopne
and
out
jg
fstps
lretw
and
push
fs
in
xor
mov
xchg
push
mov
leave
test
aad
fs
inc
out
sahf
fisttpl
mov
out
out
in
sbb
es
inc
lds
fidivs
icebp
dec
xchg
aaa
xlat
push
test
insb
jo
lods
jne
mov
shl
xlat
lea
cld
fistpll
xor
fcomip
or
mov
xchg
xlat
imul
adc
pop
sub
jp
cmpsb
inc
dec
or
leave
mov
fdivrl
xchg
mov
out
adc
xor
inc
pop
jo
jmp
inc
and
jmp
or
xorl
jns
mov
xchg
or
vcomiss
in
or
or
je
sbb
icebp
sub
pop
mov
cmc
or
fldcw
fcomi
or
xor
out
fiaddl
mov
movsb
xor
rcll
call
test
or
xor
data16
or
or
mov
sbb
mov
jl
shl
sbb
subl
das
sbb
jno
lods
and
into
adc
faddl
xchg
sub
sbb
cmp
inc
inc
cs
repnz
push
fimull
nop
js
dec
cli
cmp
push
stc
fsubr
imul
test
mov
out
pusha
xor
std
in
sahf
or
enter
popa
nop
hlt
xchg
ja
jns
adc
sahf
shrl
mov
sahf
lcall
ret
pop
adc
dec
in
pop
outsb
add
lock
push
xor
xor
jp
jb
imul
dec
cmpb
test
dec
ss
sbb
mov
fldt
mov
pop
sbb
pop
fbld
cmp
sti
subb
cld
push
mov
sub
in
jo
add
sar
imull
test
sub
xlat
xchg
bound
ds
aad
cmpsl
add
dec
sub
adc
dec
and
stc
add
lock
rcl
mov
sub
pushf
add
jae
pushf
pop
inc
xchg
dec
fsubl
mov
pop
pop
push
jb
ljmp
lret
mov
fistl
cmp
fisttpll
adc
jg
sub
aas
sti
int
bound
out
push
sub
add
cmp
ret
pusha
ds
xchg
into
in
out
push
add
mov
lds
fstpt
xor
push
in
js
or
mov
pop
sti
ficompl
xorl
fcmovne
adc
mov
mov
jle
mov
std
ds
decl
call
ficoms
lret
and
scas
ds
cmpsl
pushf
sub
and
aam
cmpsl
mov
xchg
inc
dec
mov
fists
scas
testb
pop
jmp
dec
add
test
icebp
push
testl
push
fldcw
xchg
outsl
cmc
push
xchg
push
imul
fiadds
testl
in
lds
enter
inc
inc
jmp
mov
jle
xchg
jns
mov
jmp
sbb
pop
daa
xchg
aad
xor
mov
movsb
test
test
xchg
data16
xor
sti
loope
fisubrs
clc
and
xchg
clc
xchg
cltd
shl
cmc
jle
xchg
jg
mov
das
xor
fldenv
or
mov
adc
dec
jmp
adc
pop
and
xchg
fstl
push
adc
mov
push
shl
outsl
cmpsl
popf
jmp
and
stos
push
jns
mov
cmp
repz
push
add
inc
repnz
stos
popa
adc
jg
pop
dec
cwtl
repz
std
movsb
xor
xchg
xor
cmp
mov
push
aaa
dec
mov
add
pushf
repnz
mov
mov
daa
adc
jmp
pop
dec
mov
das
pop
jmp
cmp
out
subl
test
ret
cltd
dec
adc
ss
cld
push
cmpsb
push
cmp
loope
pop
push
inc
lods
jge
push
loop
add
adc
xchg
sbb
loopne
mov
movsb
or
outsl
movsb
xchg
divb
lods
int3
cmp
mov
loope
adc
cmpsb
stos
iret
mov
sub
or
inc
enter
iret
mov
lds
sub
add
jp
mov
pop
adc
fwait
outsl
xchg
iret
jbe
test
iret
mov
jmp
mov
inc
gs
nop
sbb
xchg
lds
or
mov
repz
and
rol
sbb
imulb
adc
imul
ljmp
cmp
orl
mov
arpl
test
pop
ret
loopne
jle
iret
cmpsb
mov
add
cmc
jge
and
rorl
inc
pop
nop
test
sub
shrl
fstps
sub
jle
pusha
test
orb
cmp
xor
mov
sub
out
and
jle
movsl
daa
or
mov
repnz
inc
xor
pop
sub
add
scas
adc
fisubs
cmpsb
dec
pop
negl
push
repnz
jae
adc
lods
sbb
sub
pop
pop
daa
dec
sbb
in
bnd
push
cltd
xor
push
sbb
dec
dec
xor
and
xor
pop
pop
mov
xchg
inc
mov
dec
push
movsb
flds
fsts
or
repz
push
cli
imul
andl
inc
push
add
jecxz
xchg
jne
add
mov
cmp
mov
jmp
lret
loop
stc
les
mov
cmpl
inc
lea
push
scas
xchg
aam
xchg
cli
cmpsb
pop
or
mov
jns
fs
sbb
inc
fnstcw
pop
jge
lock
dec
pop
mov
mov
adc
jecxz
mov
not
sub
pushf
hlt
in
inc
sti
popf
sub
movsl
fwait
pop
or
rolb
xor
xchg
mov
mov
lds
fildl
xchg
xchg
dec
test
cmp
xchg
cwtl
fmul
arpl
fwait
mov
push
dec
jae
pop
pop
mov
and
leave
push
les
jl
mov
movsl
mov
xlat
sahf
cmp
divl
int3
cmpsl
leave
mov
and
sarb
mov
sub
jb
jge
inc
rorl
or
aaa
or
mov
fisubrs
cmp
lcall
inc
and
fistps
mov
divl
xor
cwtl
cli
pop
mov
xor
dec
mov
pop
fsubl
pop
adc
adc
dec
mov
outsb
ror
cld
ss
je
sahf
xchg
test
dec
mov
pop
cmpl
daa
loopne
ljmp
mov
mov
xor
cwtl
cltd
shl
insb
mov
lods
cmovl
jnp
lcall
icebp
stos
inc
icebp
xor
inc
pushf
andl
rcr
shl
and
jns
jg
dec
in
incb
aad
pushw
insb
and
xchg
hlt
add
xchg
out
push
or
je
in
xchg
adc
mov
jns
pop
sub
nop
add
or
loopne
andb
adc
mov
jmp
mov
repz
or
js
and
and
push
jl
popa
pop
iret
lahf
xchg
aam
sub
push
mov
xor
inc
sahf
sti
out
cs
js
es
jecxz
mov
push
xchg
cmp
mov
sbb
lods
dec
inc
dec
and
movsb
mov
test
push
outsb
cs
mov
jns
and
enter
lret
mov
add
ficoms
outsb
shl
pop
pop
in
jp
popf
lret
xchg
popf
jb
or
mov
or
pop
add
mov
out
push
adc
fisttps
movsl
dec
cmp
inc
and
cmpsl
adc
lret
nop
scas
das
sub
add
sub
sbb
and
jbe
movb
inc
leave
xchg
or
push
shl
jg
incb
cmp
loop
stos
loope
xor
xchg
mov
repz
fsubrp
sbb
aas
cld
sarb
sbb
shl
inc
mov
fcmovnbe
pop
scas
enter
sbb
fcmovbe
mov
shrb
fistpll
adc
aas
pop
ja
inc
andb
add
in
aas
xor
push
mov
imul
insl
push
inc
das
imul
lret
dec
jmp
sti
sub
push
jo
or
into
lret
insb
xchg
jmp
mov
imul
mov
or
mov
jecxz
xchg
shlb
xchg
xchg
dec
sti
shlb
mov
and
or
sbb
fildll
dec
insl
flds
jno
cwtl
lcall
push
sbb
stc
add
test
rcrl
cli
mov
ljmp
mov
mov
decl
cmp
inc
out
pop
and
push
lods
int
rorl
adc
sub
mov
les
insl
jno
and
es
dec
xor
repnz
fistpl
sub
daa
packsswb
xor
adc
rorl
pcmpeqw
fnstsw
jae
mov
xchg
adc
ret
lcall
clc
rorl
ljmp
jle
jno
mov
cmp
jo
sbb
xchg
ret
mov
mov
dec
fiadds
cmpl
push
loopne
mov
dec
or
rcll
inc
aad
cmovns
push
push
in
mov
or
add
shrl
scas
mov
push
fld
xchg
loopne
ret
push
pop
pop
pop
ss
mov
sbb
shll
les
pop
push
mov
in
je
xor
xchg
lcall
or
testb
sbb
lcall
testb
cmp
mov
out
adc
dec
fldcw
jp
pop
leave
add
nop
mov
rcrl
bnd
sbb
dec
pop
insl
repnz
movsb
push
dec
adc
mov
cmp
stc
pop
out
xchg
in
dec
cmp
cmp
push
mov
jnp
fwait
or
dec
pop
push
pop
dec
movsb
out
arpl
pop
push
jbe
data16
arpl
das
sbb
pop
pop
mov
adc
aaa
icebp
int
insb
and
xchg
pop
lds
sti
into
outsb
add
filds
jg
xchg
sub
scas
push
xlat
test
xchg
or
das
pop
scas
xor
out
jle
inc
cli
imul
sub
jb
add
aad
les
pop
jmp
sbb
push
jnp
jle
std
adc
inc
cmpsb
push
sub
mov
add
mov
sub
mov
adc
fdiv
xorb
test
sub
ljmp
es
rolb
test
push
push
pop
lods
mov
cld
xchg
ss
sub
inc
ret
push
out
cwtl
lds
jb
cmp
inc
sbb
repnz
sub
dec
ljmp
out
xor
pop
cmpsb
jp
xor
mov
jg
jge
xchg
ret
dec
aaa
dec
insb
js
popf
aaa
ret
inc
xchg
xchg
clc
push
push
mov
fiadds
mov
fsubs
dec
cmc
in
lds
jl
mov
lds
cmp
orl
add
jp
ljmp
or
adc
out
test
mov
cld
xchg
adc
stos
adc
or
bound
and
sub
icebp
fdivrs
lods
into
cmp
in
sbb
mov
mov
mov
cmc
and
dec
ja
mov
es
push
out
fnstsw
out
fidivrl
xor
sbbl
jl
adc
push
xlat
clc
hlt
dec
inc
call
or
fadds
jge
and
daa
out
hlt
sbb
test
addl
aas
mov
outsb
cmpsl
out
pop
shlb
push
fadds
mov
mov
adc
ror
xchg
sti
pop
or
cmp
clc
rorl
fwait
sub
aas
jmp
xchg
push
cmpsl
push
in
popl
jns
adc
inc
aam
out
jno
fistps
mov
lret
call
fildll
arpl
mov
int
pop
ja
es
ljmp
xchg
jge
aam
jle
mov
add
mov
std
push
jmp
sub
stos
mov
and
test
jne
or
pop
std
cmp
cld
jle
jmp
shll
pop
int3
icebp
adc
mov
cmc
dec
scas
cmp
fxch
pop
lret
xchg
push
test
jmp
and
cmp
hlt
mov
adc
rcrb
test
xchg
das
and
push
ret
jl
shrl
fimull
and
inc
xor
pop
mov
in
fisubrl
js
in
sub
dec
data16
add
sbb
sub
sub
push
sbbl
mov
stc
pop
les
fidivl
xchg
add
js
mov
aad
xlat
pop
aas
and
add
das
test
dec
shrb
mov
int3
jle
sub
xor
daa
dec
fst
out
xchg
test
jbe
sbb
dec
fs
movsl
ss
not
stos
test
push
scas
jae
cld
iret
inc
or
push
pop
shll
cmp
dec
adc
xchg
popf
mov
test
pushf
in
add
add
inc
dec
ss
push
pusha
xchg
testb
stos
inc
pop
jb
cli
aaa
mov
mov
adc
mov
sbb
arpl
and
lret
insl
adc
pop
xchg
dec
and
mov
jecxz
pop
sbb
lcall
and
mov
mov
adc
dec
pop
adc
lods
jp
movsb
mov
jo
imul
push
pop
lods
mov
pop
sbb
jb
inc
mov
es
imul
xchg
lret
jbe
imul
movsl
cs
xchg
mov
outsl
mov
jnp
pop
add
cmp
or
mov
int3
cvttps2pi
xor
out
sbb
xor
nop
mov
out
cmc
clc
push
pop
pusha
xor
push
rolb
data16
or
xchg
cmp
mov
xor
bound
pop
test
jle
cltd
cmpsb
or
ret
sub
pop
pop
test
push
adc
push
notb
ret
pop
out
sbb
mov
jl
je
cmp
iret
dec
mov
cmc
ss
test
aad
adc
cmp
push
pushf
jb
push
mov
push
xchg
lret
shlb
jae
jp
mov
adc
sbb
movsl
fnstcw
in
adc
inc
dec
insl
and
test
dec
xchg
mov
inc
shl
pop
dec
insb
call
imul
mov
fildl
jae
fisubs
out
jns
leave
adc
movsl
arpl
ret
fists
packssdw
adcl
inc
pushf
int
xchg
hlt
mov
push
sbb
adc
mov
es
movb
iret
aaa
das
add
sub
mov
jmp
inc
add
lock
test
je
push
hlt
ret
das
push
incl
loopne
mov
or
jae
pop
inc
mov
add
cs
jle
pop
push
lret
jp
jb
jge
lahf
xlat
cmp
mov
jmp
pop
sub
mulb
ljmp
sub
dec
add
out
dec
xchg
add
sub
negb
call
stos
xchg
mov
fists
mov
insl
and
jnp
ss
stos
add
out
mov
mov
cmp
add
aas
xor
add
imul
mov
rol
cld
insb
cmp
notb
lret
cmpsl
iret
jecxz
es
ret
in
imul
sub
and
xchg
enter
mov
xchg
popf
icebp
mov
push
dec
inc
in
ja
mov
cmp
cmpsb
int
and
idivb
adc
push
scas
sarb
cmc
jno
jge
push
push
mov
mov
cmp
outsl
xchg
loop
xchg
out
js
ret
aam
mov
lods
scas
mov
and
ss
out
cld
push
push
ror
cmp
fwait
mov
adc
cmp
enter
sbb
dec
sbb
xchg
cld
mov
idivb
xor
mov
fwait
aaa
inc
sbb
into
xchg
movsb
sub
xor
pop
jno
nop
int
and
jne
dec
xlat
repz
pop
loopne
lret
push
inc
sub
dec
fisubrl
or
and
sub
cwtl
jg
xchg
jbe
jl
add
or
scas
lcall
ret
push
mov
lods
mov
insb
xchg
sub
shrl
sub
add
mov
rcl
xchg
aas
stos
cmp
or
popf
insl
cmp
sahf
mov
or
movsb
pop
nop
add
mov
push
xlat
in
or
xchg
inc
inc
lock
pop
jbe
daa
cmp
xor
fs
xchg
jo
out
add
xchg
popf
mov
iret
or
add
inc
xchg
xor
dec
in
lock
adc
mov
mov
lods
and
imul
dec
xchg
enter
ljmp
rcrl
jno
loope
push
mov
ret
mov
jge
fbld
mov
sub
or
sub
jo
test
mov
test
fcmove
mov
mov
mov
loop
rcrl
lock
adc
or
adc
lea
pop
cli
ja
or
mov
in
pop
and
xor
mov
divb
or
inc
mov
rcrl
lock
mov
inc
cmp
dec
idivb
pop
negb
xor
pop
mov
jge
pop
jmp
xor
mov
cmpsb
fildll
dec
jp
hlt
jnp
cltd
loope
jl
pushf
mov
ja
stos
pop
loop
testb
inc
mov
sbb
popf
adc
popf
mov
or
rcll
je
aas
mov
pop
cwtl
adc
adc
outsb
iret
xchg
jmp
dec
jmp
out
sti
clc
je
adc
dec
jge
insb
push
sahf
lahf
sbb
fidivl
cltd
stos
lret
mov
adc
pop
fsubrl
in
outsl
repz
cmp
xchg
cwtl
add
sbb
out
es
push
movsl
imul
rorb
inc
inc
roll
add
or
xor
adc
pop
jecxz
loopne
push
push
into
insb
sahf
jae
pop
mov
out
and
push
xchg
cmpsl
mov
pushf
shl
pop
neg
push
pop
xchg
hlt
mov
aam
test
shlb
outsl
dec
popf
lcall
lahf
fmuls
sbb
mov
xchg
rcrl
adc
mov
inc
aas
out
mov
push
fwait
jmp
addr16
shlb
add
in
mov
daa
ja
shrl
and
mov
insl
sti
aaa
xchg
cwtl
adc
push
nop
or
xchg
jg
push
pop
les
push
sbb
int
bound
outsb
xor
fnstcw
push
cmp
push
sbbb
add
cmpsl
cld
add
push
lods
xchg
sbb
stos
fs
sarb
mov
or
jno
call
shrl
pop
rol
mov
cmc
jae
inc
loopne
lret
sahf
mov
jmp
imul
cmp
cmp
aam
push
inc
ds
imul
or
mov
cltd
jecxz
xor
nop
mov
sub
xor
imul
sub
lahf
dec
int
dec
sub
mov
incb
out
popa
xchg
jmp
jae
stc
movsl
mov
sbb
arpl
movsl
hlt
dec
sub
push
lea
mov
jbe
or
out
dec
mov
mov
add
push
mov
adc
aaa
in
dec
xchg
rorb
and
adcl
mov
mov
mov
in
mov
mov
push
neg
les
test
jge
cmpsl
jmp
in
popf
pop
fsubp
cmp
cld
fcmovb
mov
jae
jmp
add
adc
mov
mov
adc
in
mov
mov
adc
jge
outsl
std
insl
mov
hlt
xor
xor
lods
inc
cmc
insl
jno
repnz
cld
sbb
sbb
xchg
cmp
ror
xchg
insl
or
pop
dec
lods
mov
lret
loopne
aam
outsl
mov
outsl
and
xchg
shrb
aam
mov
lock
insb
iret
sbbb
in
cmp
pop
into
inc
jl
out
lahf
add
inc
add
cmp
sub
imull
adc
fwait
in
jecxz
lods
aam
into
cmp
cwtl
stc
ja
cs
notb
pop
aad
fdivl
pop
fimull
mov
sub
jnp
iret
or
inc
into
and
jecxz
mov
leave
inc
mov
inc
shlb
shlb
ljmp
popa
inc
dec
mov
xchg
jg
push
daa
mov
fsub
cli
push
fucomp
ret
xchg
or
sbb
sub
or
sbb
push
incb
and
pop
mov
fcmovnbe
xchg
out
mov
pop
mov
jmp
and
scas
mov
cs
pop
pop
das
jl
cmp
and
stos
scas
daa
enter
imul
add
add
ja
std
lock
decb
and
cmp
push
and
xor
in
xchg
sub
inc
dec
mov
sbb
clc
mov
in
cmp
mov
xchg
js
mov
cmp
mov
call
inc
mov
into
inc
cmc
xchg
jge
mov
lea
cmp
sbb
and
pop
sbb
push
or
lret
pop
notl
cmp
outsb
mov
sahf
xchg
adc
mov
xchg
pop
xor
mov
mov
ja
adc
xor
add
out
jecxz
loopne
pop
dec
lret
pushf
and
cmp
lods
stos
mov
xchg
sbb
je
test
js
lahf
pop
adc
and
xor
rolb
mov
aam
sub
sbb
sbb
ds
mov
jae
out
xor
mov
and
mov
or
sbb
inc
pop
stos
jb
fisubrl
mov
push
cmp
cli
jmp
mov
dec
lahf
mov
rcrb
addl
pop
inc
jb
pop
dec
aad
fbld
sti
or
pop
xor
pop
xor
dec
icebp
and
movsb
xchg
lods
in
push
popa
mov
xchg
hlt
jp
rcll
pop
es
add
dec
sbb
dec
pop
jns
jge
push
sbb
ret
ret
repnz
mov
lea
stc
xchg
or
aam
int3
sub
std
jmp
test
test
pop
dec
shll
cmpsb
dec
icebp
sahf
sbb
aaa
pop
inc
sub
ret
inc
pop
cwtl
inc
xchg
xor
fcomi
cmp
imul
sbb
ret
xor
add
push
adc
mov
mov
rcll
enter
sahf
inc
add
dec
sahf
sar
and
cmpsl
cmp
fsubrp
faddl
cs
mov
in
xchg
push
aam
leave
sahf
xchg
sbb
call
adcl
jmp
lods
adc
sti
sub
sti
push
outsb
fnsave
call
mov
mov
lcall
incl
outsb
and
push
test
mov
jns
scas
add
call
dec
cmp
mov
movsb
jae
shl
jmp
xor
popa
mov
loop
aaa
dec
xchg
lahf
and
ljmp
inc
popf
mov
inc
xlat
push
push
push
sbb
loope
push
mov
jb
inc
xchg
ss
or
popa
pop
add
push
lcall
pop
sahf
dec
lods
notl
icebp
push
jmp
mov
and
jp
out
outsb
or
daa
sub
sbb
mov
mov
outsl
icebp
mov
sahf
ror
and
test
pop
and
cmp
lds
dec
push
outsl
push
jb
dec
jle
in
add
js
add
pop
adc
jl
cmp
add
xchg
or
in
jle
faddl
xor
mov
loope
daa
jnp
mov
inc
divb
in
clc
add
mov
sub
push
popa
or
lea
out
xor
fidivl
push
nop
xor
fisubl
mov
clc
mov
push
mov
inc
fs
add
sbb
test
sbb
cmp
or
xchg
adc
sub
adc
push
mov
lods
xchg
mov
inc
js
test
out
inc
lea
in
sub
stc
sub
dec
adc
or
lods
lahf
stc
test
scas
jno
cs
cmp
inc
push
mov
movsb
lea
je
inc
mov
xlat
mov
sub
push
movsb
cmp
push
fidivrs
pushl
mov
dec
cmp
test
fdiv
enter
stc
arpl
pushf
pushl
or
or
cmp
in
iret
xor
addr16
scas
shrb
dec
inc
mov
jg
dec
mov
in
stc
mov
and
jns
cmp
pop
or
inc
mov
jge
sarb
add
mov
rcrl
aad
scas
push
xor
mov
icebp
adc
sbb
inc
mov
push
push
fdivs
pop
xor
cmp
test
sub
ja
mov
push
into
xor
icebp
or
sbb
cmpsb
subb
push
cld
arpl
mov
mov
das
fwait
cmp
in
lret
icebp
xlat
shr
sbb
frstor
xor
ss
cs
lods
pop
push
scas
add
out
repz
or
push
shrb
fnstenv
pop
inc
sbbb
test
or
in
xchg
cmp
repz
and
mov
jmp
and
xor
fwait
jbe
dec
mov
cmp
arpl
and
loope
imul
inc
push
add
or
pop
mov
popa
jecxz
jmp
or
adc
cmp
pop
mov
rcrl
lea
dec
and
xchg
iret
lods
dec
shlb
xlat
adcl
mov
adc
dec
fcmove
mov
cmp
inc
sbb
cmp
mov
add
sub
fs
jmp
les
scas
repnz
mov
ret
add
popa
out
jb
mov
push
cs
push
lods
and
cli
sarl
mov
and
daa
sub
andl
and
or
xchg
xchg
adc
push
xchg
mov
inc
fnstenv
lret
mov
and
test
mov
mov
stos
shll
nop
xor
add
sbb
icebp
les
jle
mov
mov
sub
lock
ljmp
lea
dec
mov
mov
sti
int
nop
rolb
call
push
push
xor
int3
xchg
bound
push
lret
loopne
inc
ret
and
iret
cs
pop
outsb
pop
sbb
daa
sbb
iret
inc
xchg
push
lds
stos
mov
push
imul
in
loope
fmuls
lahf
hlt
sbb
sub
cld
dec
mov
jmp
xchg
or
mov
rorl
jge
sbb
imul
cmp
inc
dec
jae
lods
ret
add
test
jbe
push
push
scas
test
sbb
xor
pop
sub
inc
cmp
fadd
push
movsb
add
fs
fnsave
mov
jge
int3
outsb
hlt
dec
jb
inc
emms
std
ss
enter
fs
and
dec
sbbl
xor
xchg
lods
pop
ss
inc
jge
mov
ret
xchg
mov
pop
push
dec
insb
mov
xchg
inc
push
pop
out
xor
into
sub
out
push
push
mov
popa
pop
adc
fnstcw
xlat
xchg
xchg
lahf
shlb
aaa
notl
rclb
fisubrl
daa
test
push
shrb
pusha
outsl
hlt
es
sub
aam
out
mov
or
call
dec
mov
sub
fcoml
mov
mov
jp
cs
mov
fisubl
xor
call
sbb
scas
dec
inc
cmp
push
push
xor
mov
les
add
outsb
inc
in
subl
xchg
mov
cmp
cmp
push
cmpsl
xorb
js
dec
sub
add
inc
fnstcw
loope
sbb
xlat
mov
push
pop
jle
sub
mov
lahf
push
sub
cbtw
mov
or
mov
inc
es
sbb
fs
vpmacssdql
or
sti
leave
mov
jmp
push
mov
jl
and
ja
mov
pop
cmp
movsl
push
jl
cmp
and
iret
jnp
mul
mov
adc
js
divb
int3
int
iret
sbb
pushl
xchg
shr
xor
lods
inc
push
loope
jo
pop
inc
cmpsb
inc
or
sub
movsb
xchg
lcall
dec
jno
add
adcl
mov
lret
leave
shrb
hlt
cmp
cltd
dec
pop
aaa
sub
pop
mov
push
lods
imul
sbb
cmp
loop
aas
fistpll
negl
xchg
and
or
mov
pusha
cmp
aas
fiadds
insb
rcrb
or
inc
xchg
dec
in
out
cltd
rorb
test
lds
dec
jne
jb
adc
std
gs
out
insb
lahf
lods
pop
jg
xchg
mov
xchg
cli
lods
sbb
rol
fistpll
test
pop
in
mov
add
insb
lret
inc
pop
dec
mov
imul
movsl
cmp
leave
movswl
in
stos
xchg
xor
push
mov
inc
imul
dec
push
push
in
sub
inc
adc
addw
imul
mov
aad
aas
inc
inc
lret
je
add
add
lock
stc
fwait
add
cld
fstpl
mov
sbb
push
cmp
dec
cwtl
icebp
cwtl
jb
fidivrs
lods
nop
rcr
iret
call
aaa
idivl
mov
xor
pop
inc
repz
lods
push
mov
fstpt
push
inc
stos
out
filds
out
cmpsb
repz
clc
mov
add
jp
mov
mov
in
mov
das
mov
mov
js
ja
jg
inc
mov
cld
mov
mov
outsb
test
jbe
sahf
push
out
sub
test
out
sub
sub
lret
out
jp
mov
movsl
add
cmpsb
ret
fidivrs
inc
mov
aas
mov
inc
mulb
mov
xchg
xchg
mov
test
mov
mov
cld
mov
adc
inc
or
call
xorl
leave
or
pop
in
daa
leave
out
sub
data16
outsl
js
lods
aas
aaa
mov
nop
pop
lods
in
loop
cli
movsb
in
in
or
adc
cmp
enter
cmc
cmpsb
int
pop
xchg
xchg
test
mov
or
mov
dec
sub
jae
jne
mov
out
inc
dec
loope
mov
aas
jl
fidivl
mov
fidivl
imul
and
xor
mov
aaa
pop
cmp
fldl
insl
dec
mov
mov
pop
add
movl
jmp
cmc
and
fs
gs
scas
stos
sub
sarb
jl
repnz
jl
pop
cld
xchg
pop
adc
jns
pop
iret
mov
fwait
jle
iret
and
sbb
loope
iret
xor
jns
mov
push
arpl
and
outsb
imul
and
sub
test
ret
lcall
mov
sub
js
dec
test
out
enter
xor
xlat
aad
and
arpl
push
je
out
add
inc
push
shrl
iret
stc
flds
test
fisttpl
dec
lods
rol
popa
arpl
les
in
mov
hlt
jle
mov
cli
and
cltd
push
pop
sbb
dec
fimull
adc
repz
mov
lret
scas
mov
mov
aas
aam
jmp
dec
scas
cwtl
jmp
and
cmp
and
insl
sbb
xor
mov
pop
imul
and
jp
stos
in
pushf
xor
cmp
xchg
data16
push
lods
enter
lods
pop
dec
xchg
in
xchg
pop
iret
sub
fistl
dec
mov
nop
add
mov
pop
dec
das
pop
lods
push
pusha
and
cmpsl
addr16
dec
pop
sti
sbb
cmpb
xor
call
and
pusha
fisttpl
cmp
mov
out
addr16
push
fisubs
mov
nop
ljmp
xchg
jp
test
insb
inc
mov
pop
int
fs
pop
movsl
mov
lahf
sub
mov
sbb
xor
aaa
pop
pop
mov
addb
xchg
loopne
push
mov
dec
jl
mov
popa
sahf
dec
gs
outsb
mov
xchg
jecxz
fs
pop
dec
adc
push
aaa
pusha
adc
mov
push
mov
dec
sub
enter
xchg
aam
ljmp
aam
daa
sub
sbb
jbe
add
mov
cvtps2pd
sbb
data16
movl
mov
pop
add
std
push
fiaddl
mov
aad
mov
fwait
or
xor
div
jbe
cmp
mov
in
nop
hlt
fs
fisubrl
jae
mov
mov
cmpsb
mov
mov
ret
fcoms
sbb
xor
xchg
pusha
push
add
loope
ret
inc
inc
cmp
daa
jno
lret
adc
sbbl
adc
jl
pop
fwait
in
push
test
push
out
dec
outsl
push
popa
out
dec
xchg
jne
bound
repnz
rol
pop
lea
loope
lods
mov
enter
jle
nop
scas
int
mov
jg
lods
inc
cmp
sub
lea
fucomip
insl
mov
in
clc
cmp
or
inc
inc
fldl
inc
icebp
rclb
mov
or
cmpsl
imul
cmp
sub
push
mov
push
fldln2
jnp
lret
push
ja
popa
mov
in
mov
xorb
or
mov
stc
aam
mov
loope
jecxz
mov
push
dec
pop
cmp
inc
inc
jne
mov
aad
mov
pop
rolb
push
mov
cmpsl
mov
popa
sbb
mulps
ret
loope
fsubl
push
rcr
mov
cmp
xor
cmp
xlat
xchg
imul
bound
orb
inc
cli
jns
push
fimuls
ljmp
aam
push
and
xchg
mov
lea
aas
push
pop
pop
mov
or
jle
ljmp
xchg
into
scas
or
pushf
and
mov
bound
cli
cmp
inc
sti
leave
mov
mov
inc
les
scas
inc
or
and
loopne
mov
and
fdivs
ss
rcrb
adc
or
jl
xchg
jg
mov
push
ja
jle
mov
pop
and
xchg
add
xchg
mov
push
aaa
xor
ficoml
ret
mov
imul
add
dec
jb
pop
lods
inc
lret
sti
mov
lahf
jl
ret
cmc
xchg
xchg
enter
rorl
scas
incl
test
adc
xchg
push
gs
sbbb
or
xor
add
popa
aam
inc
jl
test
js
ljmp
cmc
iret
popf
inc
jg
femms
movsl
xchg
push
and
data16
xor
aad
adc
dec
jmp
mov
inc
adc
jecxz
jg
movsb
insb
sub
pop
mov
and
imull
stos
mov
pop
pop
sub
dec
call
imul
pop
into
adc
mov
xor
pop
das
movsl
jp
aad
dec
movsl
cli
mov
xor
fxch
sub
add
push
pusha
aas
xor
cmc
ja
inc
xor
ss
fdivrl
xchg
fwait
jmp
popl
mov
mov
sub
les
jmp
sbb
mov
xor
xor
ficomps
ss
mov
fsubl
fmuls
call
xchg
sub
mov
ljmp
and
enter
je
dec
xchg
cmpsl
or
inc
out
cmp
rcrb
jge
xchg
lahf
add
dec
jecxz
sti
std
rolb
push
sahf
vpaddsb
adc
sub
mov
xchg
sbb
jmp
dec
sbb
mov
jl
aas
xchg
mov
neg
jo
mov
int3
dec
cmp
mov
adc
sbb
adc
lods
lcall
dec
dec
jmp
and
shl
inc
nop
dec
fcoms
outsb
sahf
xor
mov
sbb
push
out
jbe
and
lahf
adc
dec
cmp
inc
mov
outsl
jge
test
lods
mov
repz
lods
xchg
dec
sbb
out
pop
icebp
shll
inc
pop
repnz
jg
cmc
ret
push
sbb
push
fistps
loop
fistps
mov
cmp
sub
in
xchg
pop
or
std
fdivrl
sbb
xchg
cwtl
sarl
clc
push
stos
jecxz
and
jno
int3
pop
cld
int
fsubl
into
out
lock
push
inc
iret
imull
sbbl
cmc
cmp
sti
mov
mov
push
test
clc
insb
cld
mov
imul
pop
ret
les
add
mov
sub
fiaddl
jnp
xor
push
cmp
arpl
gs
cs
xchg
loopne
and
cmpsl
dec
repz
add
mov
sbb
sbb
cmp
sbb
loop
cwtl
push
cmp
or
mov
push
stos
mov
cmpsl
xor
cmc
xor
inc
je
lock
add
ret
out
mov
in
test
ss
sbb
pushf
fpatan
adc
cmc
push
lcall
je
movsl
fildll
fistpll
gs
ljmp
out
out
sub
dec
inc
repz
push
lret
orl
xchg
es
push
lods
inc
and
cmpsb
sbb
fistpl
mov
mov
mull
sub
imulb
adc
or
lea
out
mov
clc
mov
jbe
test
xchg
sbb
sbb
mov
mov
jne
adc
or
dec
pop
lea
cmpsl
add
test
pop
data16
dec
xor
leave
pop
mov
test
outsl
es
cmp
sub
jmp
jg
fdivl
pop
mov
out
adc
and
adc
out
in
xchg
and
outsl
mov
jnp
cmpsl
jmp
xor
jle
int
pusha
add
sub
addr16
sti
sub
fmuls
fbld
icebp
mov
xchg
nop
inc
leave
out
pop
icebp
sbb
mov
bsr
jae
adc
in
xor
aas
sub
sbbl
mov
cmpsl
add
push
dec
pop
mov
bound
insb
int
push
push
pop
pushf
cmp
push
push
ds
adc
movsl
lcall
jno
lcall
xchg
or
push
in
and
gs
xor
add
mov
inc
cwtl
ds
and
mov
movsb
je
in
dec
out
sub
xchg
enter
aad
xchg
fmul
cmp
xchg
mov
mov
das
popa
rcr
mov
and
es
or
lea
mov
add
jl
aas
jmp
mov
sbb
sbb
dec
loop
aas
add
mov
clc
push
sbb
xchg
sbb
add
cmp
iret
and
out
xchg
outsl
movsb
adc
es
mov
xor
inc
shr
ja
adc
mov
jg
mov
xchg
pop
cmp
loope
insb
xchg
clc
popa
loop
or
pop
jecxz
mov
adc
shll
pop
pop
xchg
in
pop
pop
mov
or
std
jmp
popf
jbe
outsl
or
dec
in
out
push
incl
mov
sub
sub
hlt
push
jo
sbb
adc
data16
sbb
jp
jmp
rcrl
mov
add
rcll
xor
sub
and
pop
cwtl
repnz
js
push
xor
pop
leave
jno
ficomps
adc
inc
or
test
jae
sbb
mov
dec
pop
fsubp
lcall
push
dec
test
ljmp
cli
jge
aas
test
lods
repz
daa
lahf
repnz
lds
jne
ja
adc
imul
sub
inc
cwtl
cmp
insl
cmp
stos
int3
inc
gs
dec
mov
push
jp
inc
outsb
mov
aas
cmc
mov
fistpl
je
lahf
les
adc
fwait
cli
addr16
cmp
enter
cmp
lret
cmp
aas
sub
mov
push
sub
adc
inc
imul
fisttpll
mov
mov
lds
int
jecxz
xlat
mov
sti
cmpsb
loope
bnd
mov
fimuls
popl
aam
and
in
jnp
add
xorl
dec
cmp
mov
pop
dec
push
xor
decb
or
pop
xor
sub
mov
dec
sbb
pop
test
pop
push
mov
push
push
sbb
repz
iret
push
jb
mov
jle
lret
mov
fisttpll
cmp
mov
fs
mov
jecxz
cmpsb
mov
ss
icebp
ss
adcb
adc
xlat
inc
insb
jecxz
out
insl
aas
cmc
mov
dec
clc
sbb
aas
and
mov
lret
and
daa
mov
mov
mov
fbld
adc
fdiv
repnz
pop
push
lret
push
std
xchg
sub
shll
add
xchg
cmp
add
mov
insb
jle
outsb
xchg
dec
lds
je
pusha
pavgw
aad
push
out
cmc
incl
sbb
je
lret
mov
jg
lcall
insb
jne
stos
sbb
cmp
pop
jge
shlb
or
push
xchg
mov
shll
sbb
sbb
popf
addr16
sbb
shll
rcl
push
mov
adc
frstor
lock
sbb
sbb
in
mov
je
cmp
cmpsl
cmp
outsl
push
mov
int3
dec
dec
test
dec
pusha
jle
addr16
lcall
pop
js
and
jnp
imul
jecxz
pop
gs
mov
scas
cld
arpl
jno
dec
xor
xor
sub
mov
jnp
enter
shrb
sub
outsb
movsl
xchg
nop
push
mov
mov
xor
popf
scas
jg
mov
call
imul
push
sub
mov
gs
or
sub
adcb
pop
adc
inc
jl
insl
cmp
push
xor
lds
leave
adc
pop
jle
or
xchg
in
inc
es
sbb
jne
cli
and
jle
mov
stc
pop
xchg
nop
adc
shrb
jge
arpl
and
imul
call
loope
push
sub
popa
inc
mov
in
lret
das
popf
sbb
inc
ret
sub
stc
mov
lahf
imul
lods
cwtl
pop
movsb
sbb
pop
adcl
push
push
cmp
mov
xchg
jl
iret
inc
jmp
mov
arpl
mov
inc
mov
xchg
sub
insl
icebp
pop
dec
mov
jne
fwait
test
inc
test
inc
mov
push
movsl
nop
pop
sub
test
lahf
outsb
aaa
xchg
and
mov
xlat
mov
mov
mov
divb
pop
xchg
loop
sub
incb
lds
cmp
rcrl
xor
cmp
int
mov
cmpsl
xor
sub
rcrl
ficoml
ljmp
inc
adc
out
jmp
roll
std
mov
add
inc
iret
imul
mov
fwait
jge
mov
ds
pop
nop
mov
adc
sbb
cmp
xchg
sbb
xor
mov
pushf
out
push
dec
fsubl
sbb
push
mov
aas
jle
pusha
lret
add
cltd
iret
jae
je
xchg
add
lret
cwtl
push
popf
dec
hlt
int3
sub
ret
gs
dec
sbb
scas
orb
adc
jno
lahf
xchg
inc
mov
or
jno
xor
or
pop
in
jno
inc
hlt
inc
xchg
sub
int
pop
dec
jnp
pushf
je
aad
jns
xor
mov
int
jmp
cmpb
lret
pop
mov
push
jnp
jns
jo
aas
rorb
aad
lods
int
sbb
xor
inc
dec
fbstp
and
sub
clc
rcrl
xchg
push
lret
lds
ljmp
cmc
inc
add
mov
sahf
jns
dec
sub
mov
adc
add
lret
rcrb
adc
outsb
sbb
and
icebp
jg
cltd
push
cwtl
stc
pop
imul
insb
fisubl
jo
test
lea
sub
inc
mov
jo
sbb
mov
pop
testl
jbe
xor
pop
rcrb
rclb
cmp
sti
inc
cmpsb
push
cmp
lock
stos
dec
fistpl
mov
les
sbb
scas
int3
es
sub
aaa
dec
push
sub
adc
call
arpl
test
repz
push
cmpsb
jb
jbe
dec
fincstp
xchg
push
pop
lahf
push
xchg
call
lret
dec
aas
sbb
ja
insb
push
hlt
outsl
and
push
loop
or
nop
cli
cld
jo
out
movsl
mov
add
cmpsb
hlt
xchg
insb
add
push
fcoms
jg
sahf
sbb
leave
dec
popf
out
gs
cwtl
fstl
rcpps
cmp
push
xchg
fistl
ret
push
popa
insb
aas
inc
jmp
mov
lcall
xchg
out
jae
pusha
outsb
aas
mov
cltd
sbb
mov
or
mov
leave
outsl
cmp
std
int3
mov
mov
test
mov
mov
cmp
lods
mov
andl
lret
fidivl
push
sbb
insl
mov
pop
sub
outsl
out
in
pop
in
and
push
mov
repnz
push
cmp
stc
mov
stos
cmp
insb
fdivrs
das
insb
movsb
mov
arpl
rol
mov
mov
aas
cli
push
leave
in
push
inc
aas
inc
mov
pop
stc
mov
lret
push
sti
push
dec
xchg
sub
or
and
in
dec
lea
mov
sbb
mov
xor
or
xor
movsb
imul
cmp
cmp
push
push
jmp
adc
imul
lds
fsts
pop
and
mov
lcall
cmpsl
xchg
iret
iret
andl
jp
std
jnp
pop
mov
lods
sarb
add
sbbl
pop
js
lret
mov
push
pop
xchg
pop
and
inc
push
mov
sbb
push
mov
lods
cs
add
jnp
rcr
dec
and
aaa
push
daa
popf
xchg
sbb
dec
xchg
jne
cld
jnp
popf
inc
and
adc
mov
sbb
xor
adc
imul
rorl
sub
rolb
mov
pop
imul
stos
and
cmp
inc
inc
jb
ja
es
mov
push
fcmovnu
pop
inc
pop
mov
mov
cmp
cltd
mov
in
data16
sub
lods
mov
mov
movsl
xchg
cmp
je
push
test
mov
adc
pop
je
out
xor
aad
bound
cmp
sub
call
rolb
fldcw
aaa
int
sti
sbb
or
add
insb
push
or
insl
add
lea
cmpsb
flds
dec
push
int
pop
mov
insl
pop
subb
jnp
adc
mov
dec
pop
loop
jp
mov
es
mov
enter
mov
xchg
xchg
inc
jno
movsb
rorb
mov
cmp
mov
mov
mov
or
dec
jl
scas
mov
outsl
daa
mov
bound
ss
jp
jns
lds
dec
pop
repnz
push
sub
fiaddl
inc
pop
xchg
cmp
jb
or
in
pop
jno
sub
mull
jnp
jge
xchg
mov
cmp
pop
orb
jmp
lret
inc
pmuludq
inc
cmp
pusha
icebp
into
in
add
xchg
pop
mov
sbb
mov
pop
jg
subb
cmp
jle
fildll
jge
and
test
jge
gs
leave
mov
adc
jl
push
ficomps
test
mov
or
pop
sub
in
inc
aas
jo
xchg
daa
arpl
mov
out
dec
fs
loop
sbb
je
aam
mov
push
dec
xor
jae
jo
pop
sarl
inc
mov
lods
pop
ret
movsb
dec
sarb
mov
mov
mov
xchg
jmp
and
in
inc
adc
out
stos
xchg
cmp
pop
popf
es
mov
movsl
cmc
ret
and
les
and
push
fstps
cmpsl
add
adc
popa
jg
push
ja
cmp
movsl
pop
mov
lretw
aas
lret
es
iret
adc
add
fldz
aad
sbb
jle
aad
insb
xor
rorl
test
mov
jae
and
push
je
inc
arpl
out
pop
mov
movb
je
cmp
mov
add
pop
test
outsb
and
mov
loope
negl
cld
adc
sub
rcr
faddl
aas
cmp
sbb
mov
mov
popa
div
jae
cwtl
daa
jg
mov
or
in
sub
jns
cltd
scas
roll
pop
popf
jp
sbb
push
xchg
dec
iret
int3
or
lahf
inc
cmp
mov
std
pushf
adc
in
cmp
les
lcall
dec
mov
sbb
pushf
arpl
sub
mov
imul
or
cwtl
insb
dec
sbb
xchg
adc
mov
add
iret
int
jo
aaa
rorl
push
arpl
or
dec
inc
xor
shrb
push
mov
lret
imul
mov
je
jl
push
mov
int
iret
aad
rcr
andb
shl
xchg
jl
movsl
add
dec
imul
iret
mov
call
mov
and
adc
inc
fwait
push
xchg
push
int
sub
lds
jns
aad
outsb
adc
inc
mov
adc
mov
into
fstl
arpl
dec
les
shr
dec
and
fnstcw
inc
xor
pop
enter
and
pop
mov
pop
lahf
jne
lret
sub
ficompl
and
out
lods
mov
addr16
test
cli
jge
fildl
ret
roll
or
leave
icebp
pop
lea
dec
and
inc
notl
out
js
pop
adc
sbb
xor
cmp
fsubrs
push
mov
pop
daa
sbb
gs
out
ret
or
xchg
sbb
repz
sbbb
adc
pop
scas
or
ds
ds
xchg
dec
push
jno
xchg
adc
enter
rcll
ret
xor
mov
pop
inc
fadd
inc
cltd
insb
stc
sbb
adc
cltd
jno
subl
ret
lahf
fldenv
int
xchg
xchg
fwait
push
push
push
jae
rep
inc
mull
sbb
call
sahf
in
adc
mov
jmp
cmp
cli
mov
add
pop
and
ret
popl
cmp
es
sbb
lret
in
dec
sbb
hlt
add
dec
jno
cwtl
leave
iret
call
cmp
cmp
sbb
call
sub
test
inc
inc
test
xchg
rcr
clc
sub
sti
mov
cmp
pop
movsl
lcall
nop
xor
scas
das
mov
insl
es
int3
adc
sub
mov
mov
stos
pop
push
cwtl
ficompl
out
jae
xor
dec
stos
movsb
nop
jnp
inc
je
cmp
mov
cmp
clc
imul
push
movsb
sarb
lea
fwait
sub
aad
into
xchg
mov
mov
push
in
adc
or
mov
dec
add
in
jo
aam
sbb
imull
shrb
sub
in
push
call
aaa
fnstsw
cltd
in
mov
in
fisubrs
inc
iret
adc
ljmp
cmpsb
rcr
jp
jle
jp
xor
ss
push
dec
arpl
movsb
bound
pop
mov
or
inc
mov
dec
sti
addr16
fstpt
sahf
loope
and
fsubs
sbb
mov
enter
pop
dec
jmp
addr16
dec
push
mov
or
jno
rolb
cmpsl
and
pop
mov
add
xor
dec
cld
jnp
jle
sbb
and
inc
pop
test
pushf
inc
and
cltd
out
js
jae
adc
inc
imul
adc
cmc
adc
jb
pop
call
push
jmp
mov
xchg
cld
jo
xchg
nop
daa
mov
fcomi
aas
pop
outsb
mov
leave
jae
ret
cltd
pop
in
push
mov
repz
sub
sahf
inc
cmp
mov
cmc
into
pop
adc
cmc
and
push
lret
mov
sub
out
call
xor
sbb
mov
dec
int3
mov
roll
test
pop
dec
mov
mov
dec
inc
inc
imull
stos
scas
std
xor
push
stc
or
stos
arpl
out
arpl
inc
sbb
arpl
stc
xchg
xchg
and
outsl
clc
in
int
clc
cs
sub
xchg
mov
sbb
jecxz
mov
in
adc
in
insb
ret
cmpsb
or
scas
dec
mull
in
imul
sub
or
testb
dec
jge
and
lods
mov
mov
dec
roll
mov
add
scas
in
aas
jmp
lods
mov
jge
les
push
insb
insl
and
cmp
stos
in
jmp
xchg
pop
xlat
scas
cmpsb
cmp
sub
lret
gs
or
xchg
sbbl
out
insb
mov
leave
call
jg
push
or
lods
mov
lea
lret
in
jnp
sbb
adc
sub
test
cld
push
ss
mov
ja
lret
jmp
pushf
pop
and
rorl
mov
mov
push
out
xor
jge
inc
rclb
xchg
je
jnp
mov
push
std
sbbl
adc
jle
xorb
push
push
sti
dec
xchg
sbb
adc
lds
mov
sbb
sarb
aaa
push
idiv
push
cltd
lea
jae
mov
into
cmp
jecxz
cli
roll
ret
enter
sbb
arpl
cmc
adc
inc
scas
pop
push
dec
stos
adc
outsb
les
and
cltd
jmp
dec
ja
and
xchg
in
pop
cli
mov
aad
pop
sbb
mov
xor
push
adc
jecxz
sahf
inc
insl
pop
xchg
sub
push
inc
mov
mov
mov
push
mov
mov
mov
andb
sahf
xchg
sbb
and
mov
jmp
mov
insb
xchg
inc
push
cmp
movsb
hlt
js
push
cwtl
out
arpl
ljmp
inc
je
and
or
dec
mov
push
jb
add
test
add
push
push
xchg
sbb
cmp
jecxz
cmp
mov
outsb
fbld
and
mov
mov
stos
loop
jp
mov
sti
repz
les
jne
das
jg
or
jecxz
ret
pop
in
jnp
mov
jmp
sti
inc
lahf
dec
adc
cmpsl
aam
dec
imul
sbb
iret
fcmovbe
pop
cmp
fidivs
push
xor
xor
sub
mov
pop
mov
adc
push
fsub
in
mov
xchg
lods
cmpsl
xchg
sbb
and
pop
push
mov
jg
imul
jns
mov
or
pusha
jp
mov
shrb
iret
add
pop
and
adc
movsl
and
gs
inc
icebp
or
movsl
mov
xchg
stos
cli
and
popa
mov
jne
jle
dec
das
jg
push
insb
dec
sbb
out
mov
cwtl
jmp
mov
ficompl
pop
dec
pop
cwtl
adc
push
bound
out
xlat
inc
cmp
xor
push
mov
sarb
sbb
and
mov
mov
cmp
imul
aas
jno
sbb
loope
fcomp
cmp
inc
repnz
push
out
mov
ja
ret
sahf
xor
jno
or
aam
lock
push
jecxz
in
and
repnz
and
cmp
sub
loopne,pt
sbb
test
ds
shll
cmpsl
dec
scas
or
std
imul
sub
mov
arpl
jge
insl
lea
test
fcmove
xor
dec
arpl
xor
add
push
xchg
ss
arpl
das
popl
sbb
test
or
and
call
aaa
adc
add
add
call
push
push
test
inc
iret
jo
cmp
mov
aad
in
add
jns
pop
xlat
hlt
push
out
add
push
inc
adc
cld
inc
push
movsb
cmpsb
mov
loope
xchg
inc
mov
sub
inc
ficoms
scas
xchg
cmp
inc
jl
and
pop
pusha
mov
loopne
outsb
sbb
into
mov
sbb
add
leave
xor
mov
pop
mov
xchg
sbb
jns
and
cmpsb
out
pop
jae
jmp
rcll
fidivs
es
pusha
xchg
test
lahf
out
dec
sub
pop
mov
push
fsubrl
fbld
lea
cmp
pushf
lods
rorl
test
cmp
push
cwtl
fbld
pop
push
sub
or
orb
fistl
fwait
xor
call
fs
xchg
mov
or
fwait
sbb
push
data16
mov
jo
lret
mov
adc
divl
push
ret
and
push
cmp
xchg
adc
pop
das
fimuls
int3
adc
jb
fadds
inc
pushf
pusha
js
jp
std
or
movsb
rcrl
jmp
sbb
pop
lret
outsb
cmpb
lods
call
mov
xor
xor
xor
pop
inc
sbb
mov
mov
flds
shl
mov
adc
out
or
sub
popa
adc
aas
sahf
mov
inc
add
sub
pop
inc
icebp
sub
sbb
xor
out
movsb
or
jo
in
outsb
ja
xchg
adc
shll
inc
xchg
inc
rcr
pop
fldenv
mov
rcl
test
dec
mov
in
enter
es
out
adc
xor
int
dec
test
adc
inc
inc
xchg
popf
arpl
outsb
sahf
mov
mul
fistpll
or
mov
mov
sbb
clc
popl
jbe
cwtl
sarl
jl
fcmovnu
sbb
adc
xlat
icebp
fwait
xchg
xchg
sub
jg
mov
inc
mov
iret
clc
es
push
ficompl
test
xor
push
cld
adc
pop
pop
jbe
cmp
push
jge
popa
xor
test
mov
icebp
js
rcrb
jle
add
rorl
mov
lret
ret
scas
enter
rcl
mov
cmp
lock
popf
xor
and
out
inc
lcall
mov
adc
push
xor
sti
test
nop
inc
sub
ja
in
fsubl
dec
imul
adc
mov
insl
pop
cmpb
sub
stc
or
jmp
adc
lods
loopne
insb
in
push
andb
outsb
xor
cmp
sbb
bnd
addl
add
mov
lds
jmp
clc
pusha
inc
mov
test
bound
pushf
int3
mov
add
cmpsl
push
xor
outsl
aad
pop
loopne
test
push
sbbb
pop
inc
test
imul
ret
lret
push
add
aas
std
xlat
sub
push
adc
push
adc
push
cmp
aaa
fnstsw
pop
jmp
and
jno
push
ret
loope
jmp
push
or
mov
push
outsl
inc
cmp
or
enter
arpl
dec
add
cmp
ljmp
gs
rorb
imul
iret
imul
jbe
aam
scas
mov
mov
repz
pop
cmp
bound
fs
mov
xor
mov
loop
add
push
insb
out
movsb
dec
xor
loopne,pt
test
cmp
jno
add
sbb
icebp
fidivrl
xchg
fsubl
dec
movsl
jnp
cltd
or
sbbl
adc
ret
jnp
in
imul
inc
sbb
ds
ja
mov
jne
lea
imul
cld
push
fdivr
cld
dec
gs
rorb
pop
xor
das
add
jns
xchg
adcb
push
pop
outsb
cmp
mov
xor
xchg
outsl
mov
lcall
push
insl
insl
cli
xor
mov
pop
inc
xchg
test
xchg
out
adc
ds
hlt
rcl
push
jp
aam
aad
xor
rorl
pop
cwtl
xchg
adc
popa
xchg
sub
ret
clc
inc
adc
push
sbb
xchg
inc
fcomip
mov
dec
push
mov
xchg
mulb
movsb
jmp
or
test
pusha
push
push
add
out
sub
out
in
ja
or
cmp
int3
and
aas
imul
xchg
sbbb
push
and
into
inc
aad
outsl
movntps
mov
das
dec
dec
out
pop
push
call
out
lcall
addb
sbb
adc
lret
pusha
cltd
test
fnsave
cwtl
sub
jg
mov
aas
lcall
out
sub
mov
push
into
sahf
xor
inc
xor
fcompl
mov
push
addr16
inc
mov
and
decb
pop
scas
mov
mov
cmp
xor
repnz
or
add
imul
inc
mov
mov
mov
iret
mov
fmuls
loopne
or
xchg
jbe
adc
adc
mov
test
movsb
into
divl
insb
mov
test
mov
lcall
insl
mov
fxtract
repnz
sbb
mov
sahf
dec
mov
cmp
sbb
mov
cmp
and
mov
out
xchg
fadd
fimuls
cmpsb
fcomip
jo
popa
or
imul
mov
int3
mov
jo
test
pop
sub
xor
push
lea
ja
fs
pop
lahf
xchg
dec
outsb
out
xchg
sub
mov
lods
lret
sub
dec
inc
rcrb
push
xchg
and
dec
daa
pop
rorl
mov
test
shrb
dec
and
std
test
jg
xchg
lret
cmc
mov
cmp
shr
and
add
mov
dec
add
ja
xchg
jmp
xorl
in
lods
das
xor
mov
xlat
sub
lret
push
mov
fdivl
bound
lds
enter
outsb
mov
lock
hlt
mov
adc
mov
sbbb
std
popf
lds
jae
add
sub
push
push
gs
pushf
or
fwait
xor
jl
shl
int3
ja
ret
sub
imul
mov
push
incl
ret
sbb
inc
sbb
mov
sub
int3
mov
imul
out
stc
js
cmp
lock
loopne
xchg
cmp
outsl
xor
cli
outsl
addr16
and
and
ljmp
add
fmull
jns
mov
das
test
dec
movsl
xlat
je
inc
idiv
mov
sbb
insb
dec
cmp
int3
mov
iret
sahf
xchg
pop
push
mov
stc
mov
push
push
cmp
dec
pop
jp
scas
nop
mov
in
mov
jo
into
dec
ret
or
bound
cmp
negl
xor
call
insb
inc
daa
dec
jp
and
jno
add
xchg
cs
out
inc
sarl
cmp
fs
dec
dec
add
lcall
xor
movsb
int
popf
xor
imul
arpl
mov
insl
mov
push
jno
stos
mov
int3
and
outsb
pop
ret
add
inc
inc
jecxz
insl
xor
fstl
cltd
sub
mov
push
jno
icebp
jno
xchg
jno
push
cld
mov
pop
mov
ret
and
xchg
nop
pop
or
xor
sub
icebp
fucom
jae
lret
shrb
inc
pop
xlat
leave
inc
movsb
pushf
xor
test
mov
mov
cmp
lods
xor
fwait
and
aaa
int3
push
icebp
movsb
mov
add
dec
int
test
lea
stos
stos
adc
lock
call
fs
sub
sbb
cltd
testl
into
jge
ja
push
rcrl
xor
xor
fsubrp
cli
adcl
dec
call
mov
scas
cld
dec
sbb
mov
lret
jg
inc
mov
mov
nop
mov
xchg
inc
inc
in
cs
scas
movsb
jae
sub
lods
push
data16
lahf
fidivrs
xchg
pop
sub
adc
into
xorl
xchg
mov
aam
mov
cmp
jmp
sub
xor
push
mov
and
shrb
pop
add
hlt
xchg
adcl
cwtl
out
fucomp
sub
push
mov
mov
cmp
mov
popf
fsubr
xor
xchg
bnd
cmpsl
gs
lret
xor
rclb
mov
add
xchg
dec
fwait
clc
fidivl
or
mov
sarl
mov
sbb
lods
mov
mov
pushf
xchg
outsb
sbb
adc
daa
xchg
jno
and
stos
sub
jmp
jg
rcr
movsl
push
mov
sbb
mov
pop
je
mov
mov
xor
fdivp
mov
mov
inc
pop
pop
pop
sbb
call
sbb
jae
test
sbb
push
es
inc
call
ficompl
addr16
cmpsl
or
cmpsl
int
dec
iret
dec
sbbl
sbb
add
dec
or
fs
or
pop
jg
in
outsb
sbb
pop
or
lret
leave
shr
xchg
xchg
das
pop
jne
iret
pop
jmp
sub
sbb
mov
popa
test
or
push
scas
push
andl
shrl
mov
aas
sbb
cmp
xchg
xchg
ss
mov
loope
iret
push
jle
sub
push
hlt
and
xor
adc
xchg
xchg
idivb
cmove
pusha
fisubl
fs
push
and
js
loope
add
add
movsl
xacquire
pop
adc
out
and
pop
push
jl
sub
jmp
mov
pusha
in
ja
mov
add
hlt
out
scas
mov
adc
jne
mov
adc
stos
das
lods
std
cld
call
ljmp
dec
inc
pop
jp
inc
cmp
mov
dec
inc
fidivs
das
mov
xchg
and
xchg
rcrb
jno
sbbb
mov
pop
inc
pop
adc
push
sbb
fists
stos
sbb
mov
cmp
jl
ja
clc
stc
pop
mov
xchg
sub
movsb
pop
sbb
loop
jne
pop
jmp
sarb
xchg
add
sub
or
in
ljmp
sub
int
inc
in
pop
dec
push
std
aaa
fs
outsb
mov
adcb
popl
sub
jne
das
in
mov
pop
adc
loop
and
and
push
repnz
aam
mov
or
sti
mov
bound
lret
mov
jecxz
push
aam
lret
addr16
xor
push
and
xor
lret
outsb
and
cli
ja
outsb
jnp
mov
inc
clc
push
pop
icebp
mov
dec
nop
daa
stos
xor
popf
and
xor
xchg
cltd
mov
inc
gs
sbbl
scas
push
mov
adc
mov
add
test
int
pop
ja
loop
aam
push
sbb
and
mov
pop
sub
pop
or
xchg
repz
lods
cmp
rcll
aad
xchg
gs
sub
shrb
pop
scas
add
ja
aad
adc
mov
pushf
push
cs
xor
lods
leave
sbb
dec
ret
loop
insb
adc
adc
lret
nop
sub
jecxz
sub
or
jo
ja
xor
add
push
push
ss
testl
mov
mov
add
psubusb
dec
mov
dec
imul
lods
jg
out
or
or
adc
fldcw
xchg
popf
sbb
push
push
sbb
nop
jne
xchg
jg
xchg
add
and
sbb
lcall
mov
add
mov
call
and
push
pop
sti
imul
mov
andl
fwait
shrl
cmp
or
jo
push
cs
outsb
pop
out
loope
cmp
inc
scas
imul
ss
mov
pop
xor
movl
fistps
sub
jae
pushf
xchg
jb
sbb
dec
mov
shl
inc
pop
jae
jle
out
out
rdmsr
sti
cmp
lcall
jmp
pop
jns
pop
imul
je
jg
jae
clc
inc
jno
mov
test
jnp
push
mov
lret
fsubrl
dec
inc
divb
jg
mov
shlb
clc
inc
stos
mov
mov
xchg
cmpsl
xchg
mov
mov
jb
mov
scas
pop
das
test
into
ss
addr16
jg
pop
xor
int3
mov
push
repnz
inc
cmp
lahf
cmp
sub
or
cwtl
addl
in
nop
int3
jecxz
mov
pop
mov
pop
ret
sbb
add
sarb
repnz
inc
notb
insl
imul
hlt
xchg
xchg
cltd
push
push
outsl
fwait
test
sar
roll
mov
ror
int3
shll
cmp
sbb
add
ror
outsl
adc
lcall
xchg
scas
mov
xor
andl
btr
jo
in
ret
in
mov
iret
sub
out
cmp
sub
xchg
je
adc
lds
mov
lret
mov
insb
jae
adc
stos
icebp
scas
or
fidivs
cli
cmp
out
sbb
arpl
push
push
jle
ss
dec
mov
addr16
lahf
repz
mov
xchg
lahf
jno
mov
mov
sbb
and
jecxz
inc
sbb
mov
dec
pop
ror
ret
fcmovb
add
mov
fcomip
sti
mov
fnsave
mov
pop
inc
arpl
cmp
ds
inc
test
or
xor
mov
jb
leave
xchg
xchg
add
adc
enter
sbb
repnz
icebp
int3
mov
test
adc
stos
jge
cltd
les
cmpl
hlt
in
sub
cld
jmp
fsubrl
xchg
stos
lea
inc
imul
inc
xchg
inc
int
stos
xchg
xor
rolb
popa
and
jns
mov
pop
xor
ds
sbb
ret
jecxz
icebp
js
push
jnp
xchg
mov
xchg
cwtl
jno
ljmp
pop
movsl
lahf
jae
roll
adc
push
mov
stos
pushf
cs
pushf
pop
out
cmpsl
cmp
mov
pop
ficoms
or
xor
push
push
out
jne
lea
shr
mov
cmp
clc
in
or
shll
sahf
dec
dec
or
icebp
sub
jl
imul
add
cmp
mov
push
push
xchg
clc
xorb
cltd
rcrb
sub
push
test
es
ds
cli
test
adc
mov
scas
mov
push
je
inc
push
xor
mov
jp
pop
mov
inc
push
pop
xchg
enter
scas
pusha
mov
ljmp
ja
sbb
enter
and
jle
insb
cltd
fdivr
mov
cmp
repnz
inc
and
cmp
imul
pop
push
pop
loopne
lret
push
popf
jbe
jl
test
fdivp
popa
push
icebp
xor
shlb
inc
push
fwait
cmp
in
imul
cli
add
fldl
divb
add
xchg
fisttpl
out
sbb
cmp
ret
out
mov
jmp
pusha
pop
cmp
popf
push
pop
fldenv
enter
pop
daa
cmp
mov
push
mov
cltd
xlat
std
jecxz
aaa
mov
jae
and
stos
mov
add
mov
scas
lods
jmp
fldenv
loopne
fldl
mov
out
gs
jge
int3
notb
repnz
ja
test
jo
call
fnstcw
pop
jo
aas
lods
dec
pop
bswap
push
sar
daa
int
push
movsl
xchg
jp
data16
cltd
mov
sub
mov
mov
pop
mov
xor
movsl
xlat
sub
dec
clc
and
add
mov
cmp
mov
cwtl
sub
ret
jbe
jl
nop
aaa
dec
add
mov
mov
xlat
jnp
xor
arpl
cmp
outsb
rorb
outsb
adc
xchg
inc
xlat
sub
cmp
cmove
out
je
cmc
sbb
mov
add
sbb
dec
sbb
push
inc
in
mov
lea
xchg
ds
aaa
sbb
xchg
std
aas
scas
scas
movsb
les
pushf
sbb
loop
test
roll
aam
dec
sub
cwtl
call
mov
hlt
ss
xchg
sub
shlb
lea
push
lock
jnp
movb
xchg
sbb
int
or
or
mov
in
jmp
sub
iret
pop
stc
xchg
aad
pop
out
in
jb
ret
or
mov
sti
fimuls
pop
push
testb
or
xor
out
ds
xor
pop
repz
pop
cmp
xor
sbb
ror
daa
cwtl
sar
push
out
aaa
outsl
ret
dec
xor
sub
mov
mov
sub
sub
cltd
sbb
pushf
pop
jecxz
jbe
jge
mov
sbb
fistpl
in
xchg
lahf
cmp
mov
add
cmpl
cwtl
mov
ja
add
outsb
movsl
fcomi
jecxz
cmp
aaa
pop
push
push
push
sbb
mov
dec
sub
lea
loop
fistl
gs
adc
stos
pop
pop
or
xor
xchg
lods
xchg
das
out
xor
ds
xchg
jb
fildll
inc
add
test
mov
pop
add
or
dec
xor
add
mov
call
push
mov
and
ljmp
cld
xchg
pop
loop
orw
out
loop
nop
push
push
in
loop
xor
je
outsl
fsubrl
lret
xchg
pop
jl
mov
aad
test
or
dec
sbb
jle
shlb
dec
xor
xchg
and
movb
mov
cltd
mov
sarb
aaa
push
pop
data16
pop
mov
mov
jnp
or
pop
cmp
fimuls
hlt
movsl
xchg
pop
lret
movhps
repz
andb
cmp
cwtl
inc
mov
jmp
out
dec
dec
jp
insl
mov
jp
out
adc
cmp
and
cs
cmp
fwait
pop
ljmp
push
xlat
dec
and
sub
cmp
clc
or
sub
jge
or
shlb
testl
pop
lods
sub
mov
loope
push
xlat
hlt
mov
pop
add
cld
aaa
mov
adc
je
and
and
enter
inc
enter
jmp
cmp
fidivrs
xlat
divl
orl
mov
sarl
fisttpl
and
pop
inc
jns
cmp
push
lcall
xor
daa
jmp
fsubs
pcmpgtw
shlb
mov
inc
sbb
lret
sahf
gs
movsl
sub
push
or
cltd
hlt
cmp
adcl
mov
fsts
loop
les
repnz
xchg
in
xchg
add
jo
out
mov
mov
push
jle
lahf
movsb
stos
mul
pop
bound
ds
inc
push
out
mov
into
out
negl
pop
jmp
ja
int
shll
dec
add
sti
mov
mov
aaa
aam
stos
ljmp
add
and
call
or
lds
imul
xchg
jb
popf
xor
or
mov
adc
push
inc
jg
lahf
lret
je
jno
sub
and
pop
jge
aad
dec
adc
jg
adc
or
dec
mov
inc
push
xor
js
cmp
xor
jg
jg
mov
cmp
js
lods
and
movsl
test
fidivs
test
shl
gs
mov
sbb
fldl
push
out
or
add
loop
lock
fstpt
sub
xchg
mov
int
out
or
es
mov
jnp
scas
and
sub
mov
lods
movsl
pop
test
in
testb
stc
aas
pop
rcrb
out
lahf
mov
sbb
xor
incl
xlat
cmp
sub
fs
loop
and
jno
mov
push
dec
pop
add
jg
adc
jecxz
push
hlt
dec
lret
adc
data16
push
inc
sub
iret
cmp
or
jns
or
mov
fwait
jmp
ret
out
inc
jae
insl
xor
stos
push
push
stos
push
add
lcall
inc
jle
popa
xchg
call
popl
pushf
gs
inc
xor
int3
into
jb
jge
sub
xor
bound
imul
adc
cmpsl
repnz
fwait
dec
push
repz
or
sub
jle
fstpl
mov
test
test
shrl
out
dec
xchg
addb
mov
es
lcall
subb
mov
cmp
xchg
orb
adc
adc
jno
mov
push
addl
cmpsl
mov
jno
out
jne
mov
iret
pop
pusha
fsubrs
mov
jbe
dec
lret
mov
fcomps
pop
out
in
dec
mov
lods
mov
cwtl
rcr
sti
push
outsl
push
hlt
aam
or
pop
in
xchg
popf
popa
cmpb
lods
or
adc
or
testl
addr16
cld
sbb
dec
in
xor
lret
ret
ret
sbb
jge
cmp
lea
insb
sbb
add
and
leave
mov
mov
in
sub
push
sahf
xchg
sbb
sbb
out
or
out
and
adcb
pusha
aaa
cmpl
inc
cmpsl
dec
xor
adc
pop
mov
cmp
cs
mov
or
jle
fidivl
xor
sbb
jns
add
xchg
cmpsl
test
ds
mov
shlb
loope
out
mov
add
and
jle
insb
push
imul
movsb
aam
cmc
pop
into
cmpsb
orl
js
jle
xchg
lock
dec
rcr
ret
icebp
pop
adc
fs
mov
dec
hlt
loop
scas
cltd
clc
sti
cmp
sub
pop
pop
ret
jp
rcrb
sbb
ror
mov
int3
push
xchg
stos
cmpsl
lds
out
jmp
fadds
push
data16
aaa
ss
pop
sub
mov
test
inc
in
pop
lret
loopw,pt
xor
jmp
lahf
pushf
pop
ja
mov
cmp
or
js
mov
je
adc
jl
lods
cltd
push
lea
addr16
mov
jmp
sub
dec
inc
push
mov
shlb
popf
push
addl
jne
cltd
cli
fcomip
in
popa
adc
add
in
movsl
xor
jne
cmpsb
inc
mov
test
sub
fisubl
jmp
xor
ret
fisubs
and
daa
xchg
mov
dec
and
xchg
icebp
lcall
xchg
mov
sub
xor
ljmp
push
sub
repnz
sub
adc
jne
jle
mov
ss
inc
mov
mov
sub
mov
push
add
sub
ja
pop
pop
bound
inc
push
xchg
cmp
leave
inc
jb
cmpsb
push
jg
int
jbe
jecxz
sahf
push
sbb
mov
fldenv
nop
mov
pop
xchg
insb
bound
mov
jmp
inc
mov
inc
mov
push
cmc
fstpl
inc
push
dec
scas
xchg
repz
sahf
imul
cltd
push
int
enter
mov
jae
mov
aas
out
call
test
and
clc
pop
inc
shlb
mov
push
mov
inc
divl
or
imul
add
call
dec
into
xchg
scas
repz
rol
dec
push
sbb
pop
shrb
frstor
inc
loope
push
add
insl
or
push
mov
xchg
es
test
dec
xor
cmp
sub
cli
inc
test
insb
inc
xchg
pop
out
and
jns
std
imul
add
popa
in
imul
addr16
add
xor
fsubr
pop
lock
sub
ds
lea
into
div
fisubrl
or
dec
int3
mov
sbb
and
xchg
jne
insl
sub
outsb
jbe
inc
fstp
jnp
push
ficompl
neg
mov
xchg
xor
lret
mov
mov
out
sub
mov
sub
jbe
adc
addr16
outsb
dec
leave
add
jecxz
imul
addl
roll
dec
sub
or
and
fisubs
jmp
mov
aaa
jb
xchg
mov
ljmp
adc
push
movsl
sbb
sar
mov
sarl
leave
jg
and
inc
aam
mov
pop
daa
and
sti
adc
daa
bound
xor
in
cs
hlt
xor
andl
pop
xchg
shlb
mov
push
add
test
lret
mov
xor
add
xorl
pop
inc
push
cmp
dec
imul
jnp
enter
xchg
mov
pop
dec
push
and
test
mov
pop
cmp
popf
stos
mov
aaa
lcall
pop
lds
mov
inc
or
and
inc
pop
cltd
adc
fcmovnb
ss
or
test
jo
rcl
push
mov
jecxz
push
data16
inc
lds
test
cmpsl
jnp
jb
jmp
ret
or
sbb
test
push
xor
imul
mov
xor
cmp
cmc
and
mov
imul
mov
bound
jb
dec
cmp
jecxz
mov
sbb
jne
icebp
into
xor
fdivrs
dec
mov
xchg
nop
adcb
pop
push
mov
cmp
xchg
pop
ds
icebp
icebp
ss
xlat
inc
arpl
dec
mov
insl
jae
stos
fildll
pop
leave
inc
jnp
lret
popa
cwtl
pop
mov
fstpl
call
outsb
pop
push
sub
or
push
sbb
sbb
add
xlat
cs
dec
aam
pusha
shl
jl
mov
lahf
xchg
fsts
fcmovb
andl
push
loope
xor
mov
cmp
mov
and
bound
xchg
testb
mov
mov
repnz
imul
push
xchg
adc
ffree
int3
jge
add
lahf
ret
ret
xor
lahf
push
cmpsl
add
pop
fnstcw
xor
sbb
pop
cmp
hlt
mov
push
mov
jo
xlat
pushf
sub
cmp
push
daa
mov
stos
jmp
inc
push
pop
jo
hlt
je
imul
movsb
repz
outsl
jno
and
fwait
push
cmp
lret
pop
in
insl
test
cmp
jmp
popa
cs
pop
jge
sbb
mov
je
aas
fldcw
and
inc
dec
movsl
nop
xor
negl
movsb
jle
mov
sbb
repnz
mov
and
jecxz
jb
lret
or
repz
shlb
dec
dec
ret
xchg
add
ret
nop
push
dec
shr
inc
adc
cmp
sbb
inc
cmpsl
and
lret
ljmp
cmpsb
or
sar
ljmp
cli
cmp
dec
mov
pop
inc
std
push
daa
mov
rol
jecxz
loope
jg
and
mul
cli
or
dec
in
in
jecxz
aas
fcomps
call
jl
mov
ds
jns
xchg
fstpt
adc
roll
ret
pop
jne
mov
bound
mov
iret
cli
in
popf
inc
lret
nop
ret
mov
sbbb
inc
rcr
pop
fsubp
mov
jg
pop
insb
hlt
jge
and
sub
push
jae
jecxz,pn
add
sbb
rorb
pop
mov
gs
fbld
fcmovne
xchg
aam
jno
scas
imul
jg
xchg
cmpsl
add
clc
bound
ret
fisttpll
push
loopne
mov
lds
loopne
jnp
add
push
cli
inc
repnz
mov
push
or
out
ljmp
inc
sbb
daa
adc
jo
mov
negl
sbb
xchg
push
jge
mov
inc
xorl
inc
or
mov
dec
jb
inc
xor
cmpl
insl
repz
or
adc
add
adc
push
int
js
mov
pop
adc
sub
movsl
fmul
xchg
popa
add
pcmpgtd
in
sbb
out
movsb
and
movsb
hlt
out
test
sti
dec
repz
sbb
lret
xor
imul
mov
dec
push
aaa
sbb
loop
xor
mov
gs
mov
and
push
movsl
flds
mov
imul
lds
mov
inc
cmp
mov
inc
inc
jno
mov
ss
ret
fstpl
inc
xchg
gs
xor
xor
xor
sub
xchg
mov
clc
mov
cld
fwait
sub
scas
xchg
in
cmp
mov
leave
cs
jb
mov
mov
push
pop
cli
inc
cmpsl
paddq
xchg
xchg
jmp
pop
test
jp
leave
imul
xchg
std
xchg
xchg
icebp
cmpsl
not
cmp
call
fisubrs
mov
cmp
test
xchg
sub
inc
pushf
out
nop
sub
and
fiadds
cmp
pop
outsl
outsl
push
pop
lahf
inc
jb
jg
pusha
test
lea
gs
mov
push
addr16
jp
push
mov
lods
sub
hlt
xor
daa
add
cld
pop
mov
cmovno
jns
hlt
adc
sbb
sub
mov
dec
dec
in
fistl
mov
xchg
pusha
mov
negb
and
stos
dec
and
mov
rorb
cmp
movsb
push
insl
push
xor
mov
repz
fildll
or
cmpb
scas
jno
cmp
scas
bound
cmp
mov
pop
imul
jnp
idivl
insb
or
dec
xchg
lret
fisttpl
hlt
popf
mov
jno
jmp
jae
dec
rcll
mov
dec
mov
pop
jge
cmp
es
dec
repz
cld
mov
in
or
push
mov
xor
ficompl
and
stos
jmp
and
xor
adc
xor
sub
lret
jns
out
jle
or
dec
pusha
sar
orb
cmp
lret
dec
xchg
popa
xchg
jecxz
inc
pop
mov
sub
sbb
sahf
ja
sahf
mov
jb
sub
jno
mov
in
testb
xlat
fidivl
std
lahf
mov
adc
lods
daa
in
call
mov
xchg
dec
subps
unpckhps
popa
push
loop
push
loop
ss
push
jno
lea
or
or
lea
ret
shl
aam
jg
dec
fisubl
xor
data16
mov
rolb
push
and
sti
sbb
in
pop
inc
scas
push
cs
sub
jae
into
jle
je
mov
repz
or
cld
lea
iret
or
fcmovnb
in
mov
push
and
shlb
aaa
pop
cmpsb
jnp
mov
mov
xchg
in
pop
psubusb
outsb
or
and
das
movsl
dec
dec
adc
lods
fmul
shlb
xchg
insl
testb
aaa
cmp
jge
lcall
xor
push
cmp
jg
aad
cmp
outsb
outsl
aam
or
mul
fiadds
iret
sbb
scas
out
das
cmp
mov
dec
inc
leave
stc
ret
les
push
mov
mov
jle
stos
xor
cmp
push
in
mov
faddp
jge
cmpsl
frstor
xor
das
pavgw
and
mov
adc
pushl
pop
out
idiv
push
shll
pop
cmp
mov
mov
xchg
mov
mov
cmp
fcomp
out
fwait
mov
mov
jne
inc
fcoml
lods
std
push
sbb
cmp
insb
jmp
fidivrs
fistpl
xor
push
mov
pop
sub
fildl
jmp
inc
enter
loope
loopne
dec
mov
push
in
test
fstpt
cmp
ds
inc
mov
pop
xchg
stos
stc
ja
rcl
xchg
cmp
push
mov
scas
lret
dec
mov
sub
pop
mov
mov
testb
and
xlat
cmp
mov
mov
or
sbb
push
add
jp
jne
pop
or
outsb
dec
or
aam
sbb
mov
dec
pop
dec
fisubrl
adc
nop
xlat
inc
push
addr16
std
or
out
xchg
add
cld
out
mov
sub
mov
andl
mov
lea
addl
cmp
lds
sbb
cmc
icebp
outsb
add
ljmp
fwait
pop
push
adc
and
xor
adc
cmpl
dec
aaa
in
inc
xchg
rcrb
cld
je
vmovhps
sbb
xchg
loopne
test
cmp
in
movsl
icebp
lret
idivl
movsl
cltd
and
adc
dec
pushf
imul
rorl
jmp
and
adc
pop
loope
inc
jne
out
pop
pop
aad
call
mov
xor
clc
jp
les
add
inc
push
pop
jge
xlat
in
repnz
aam
add
sub
pop
hlt
mov
push
xlat
insb
out
stos
sbb
xor
dec
pushf
aam
out
jge
hlt
adc
adc
push
mov
push
or
sub
dec
leave
decb
and
xchg
int3
mov
and
xor
fstpt
xor
ja
js
out
lret
fmull
xchg
setnp
add
dec
pop
dec
push
cmpsb
push
aad
sbb
nop
fs
jp
jmp
mov
rcrb
mov
mov
jbe
cmp
jnp
push
or
repnz
cmp
adc
mov
les
sbb
cmp
pop
popa
or
mov
lods
std
frndint
add
cld
stos
sbb
sbb
jb
mov
das
sti
and
xchg
cmpl
pop
adc
pushf
loop
lods
push
dec
cmp
pop
out
nop
test
cwtl
out
ficoml
push
cmp
enter
cmpsl
mov
popf
out
cld
jbe
clc
rcrl
or
popa
cmp
mov
sbb
sbb
sub
sub
or
or
jmp
jne
in
test
pusha
cld
mov
out
or
cltd
sub
mov
popf
stc
pop
mov
adc
aad
rcr
les
mov
sub
xchg
ret
xchg
jmp
orl
xlat
jne
lret
test
sbb
test
adc
mov
test
fisttpll
iret
je
push
cmp
push
and
shll
subl
push
sub
mov
sub
cli
ret
inc
add
fldt
xlat
out
ffreep
fs
xchg
sbb
sbb
add
sbb
sbb
jnp
scas
pop
push
int3
adc
xchg
jb
push
aas
mov
mov
fcomp
into
bound
jle
dec
push
pop
ljmp
push
inc
into
pushf
and
incb
pop
je
add
addr16
adc
sti
mov
pop
inc
xor
xchg
adc
lcall
pop
adc
sbb
xchg
testl
arpl
bound
add
iret
pop
adc
mov
xor
mov
jp
daa
mov
nop
jg
and
fwait
push
in
fimuls
push
push
mov
jge
adc
cs
inc
inc
stos
cmp
mov
and
mov
sub
dec
iret
loopne
out
push
mov
inc
xchg
dec
xchg
cmpsl
into
and
inc
fnsave
xchg
or
cmp
push
dec
addb
dec
mov
xchg
inc
sbb
in
incl
add
jo
lock
pop
dec
mov
lea
dec
je
push
rolb
lea
fldt
jge
push
cmp
sbbb
mov
jmp
fnstenv
js
ffree
pop
imul
ljmp
lcall
cmp
pop
aam
mov
or
push
mov
inc
fnsave
aam
icebp
in
adc
dec
jmp
fldt
sbb
mov
ja
push
mov
daa
cwtl
xchg
cmc
dec
cmp
aas
pop
inc
test
and
adcb
jbe
xor
sahf
scas
mov
pop
movsb
out
fmuls
sahf
push
lods
dec
push
xor
adc
insb
test
and
into
inc
bound
outsl
mov
or
frstor
insb
int
mov
xlat
movsl
cmp
pop
pop
outsl
mov
jp
int3
inc
in
jle
xchg
pop
adc
call
mov
rolb
lods
xor
add
imul
inc
cmp
jne
in
or
sbb
icebp
out
xchg
fcoms
je
pop
dec
pusha
xor
test
mov
xchg
sub
cwtl
push
andl
lahf
je
push
inc
popf
xor
scas
pop
xor
xor
xchg
jne
rcll
mov
lcall
xchg
xchg
mull
mov
mov
jge
sbb
daa
addb
xchg
mov
nop
mov
mov
popa
pop
push
andb
lahf
aam
or
dec
sar
pop
inc
insb
inc
and
std
xor
aad
add
ret
sub
jmp
aad
imul
mov
imul
scas
or
outsb
xor
dec
shl
aas
inc
dec
lret
xor
cmpsl
daa
cltd
mov
jl
pop
sbb
jg
rorl
dec
loopne
push
dec
aam
mov
lcall
aam
push
cmp
pop
outsb
add
adc
ljmp
xor
mov
popf
sahf
fwait
bound
fisttps
gs
mov
es
pop
dec
jo
shll
fidivs
adc
push
or
loopne
or
in
daa
add
xor
stc
dec
jecxz
imul
arpl
cmp
std
mov
xor
movsb
rorb
push
mov
mov
push
cmp
mov
cmpsb
scas
mov
sarl
jo
fdivs
push
outsb
dec
insb
sbb
jno
ret
xchg
data16
lods
aaa
repz
pop
insl
jbe
addb
mov
xchg
data16
or
xchg
sbb
jne
pop
ljmp
add
push
arpl
out
dec
adc
mov
ret
scas
dec
inc
mov
pop
adc
inc
mov
xchg
shlb
jg
xor
outsb
cli
pop
xor
in
int
xchg
jo
xor
pop
inc
loopne
into
sbb
and
push
sub
sbb
testl
stos
hlt
inc
cmc
and
jmp
adc
xchg
push
movsb
movsl
or
das
cmpsl
pusha
movsb
ror
and
xchg
insb
sbb
in
aaa
mov
inc
push
popf
push
cmpsb
mov
test
inc
xor
arpl
jp
fimull
test
pop
cmp
cmp
orb
imul
or
shlb
dec
xchg
imul
jnp
inc
dec
push
fmuls
pop
rcrl
xor
pop
xchg
inc
xchg
dec
jl
sub
dec
sub
cwtl
ret
movsl
or
loopne
jecxz
mov
jg
mov
xchg
rcrl
cs
mov
mov
testb
inc
aas
sub
cmc
ljmp
cwtl
mov
cmpsb
sbb
aam
cmp
mov
mov
mov
dec
inc
add
cltd
push
adc
and
repnz
xchg
test
mov
xchg
push
cmp
mov
repz
sbb
push
and
cmpb
jns
std
mov
jmp
insl
push
int
sti
adc
jg
or
jmp
fldenv
movsb
xchg
lahf
sbb
sbbl
cs
out
insb
test
test
lea
jp
int3
fcmove
mov
and
js
jb
fidivl
adc
inc
test
mov
insl
push
int3
decl
aaa
pop
std
inc
push
xor
lret
imul
mov
xor
lock
test
aad
stos
daa
xor
lret
sahf
dec
mov
insb
insb
xor
inc
push
call
insl
and
xchg
mov
and
push
mov
and
aad
push
mov
fists
ja
dec
cs
jo
fwait
fwait
clc
cmp
inc
dec
sbb
lea
lds
es
xchg
push
in
xchg
xchg
or
jle
aas
jmp
ret
sub
imul
sub
repnz
add
adc
test
jo
jle
mov
mov
mov
mov
addr16
push
int
call
das
pop
jecxz
jle
mov
inc
daa
xchg
xor
jbe
inc
pop
jno
cwtl
xchg
add
fists
xor
mov
sbb
xor
lret
lods
daa
movl
jg
ret
mov
xchg
cs
mov
xchg
or
jmp
sub
sti
xlat
shlb
icebp
xorb
icebp
js
xchg
push
fs
adc
pop
fdivl
inc
bound
loope
add
rcll
and
movsb
dec
jl
push
mov
xchg
xchg
mov
mov
cli
je
sub
xchg
lds
mov
fiaddl
js
shl
mov
int3
push
mov
les
hlt
mov
or
enter
roll
sub
aaa
jbe
push
nop
cli
es
enter
repnz
xchg
popa
cmpsl
jle
cmp
jl
gs
push
rclb
shl
pop
cld
and
sti
add
or
bound
mov
cltd
cmp
pop
mov
jmp
ret
fwait
imul
cld
scas
repnz
arpl
sub
pop
shrb
jmp
fsubp
popa
lret
pop
cmc
shl
out
loop
lahf
aam
jb
adcb
out
and
fwait
lock
lods
pop
ljmp
and
pop
mov
test
push
mov
jl
imul
jae
stos
and
cmpsb
fsub
loopne
cltd
addl
push
mov
loop
jl
adc
bound
xor
jle
xchg
push
or
sub
mov
sti
repnz
xchg
pop
jbe
inc
dec
sub
cmpsb
clc
adc
loope
mov
inc
addl
push
lea
or
outsb
dec
inc
pushf
ror
xchg
or
xchg
mov
or
mov
jle
jmp
mov
xchg
or
xor
aaa
ds
mov
outsl
jne
mov
test
lock
sbb
lock
cmp
outsl
mov
mov
dec
pop
iret
pop
jmp
mov
loop
and
and
mov
cmpb
shll
loope
imull
xor
and
or
int
jnp
fstp
dec
cld
fwait
dec
aaa
imul
dec
xor
mov
cmp
popf
mov
mov
inc
xor
movsb
push
pop
inc
je
sbb
mov
sbb
fsubp
jae
ss
jge
fcompl
pop
and
dec
pop
ret
cmp
cmp
out
cmp
vmwrite
in
jo
fildll
cmp
out
jmp
sbb
jecxz
idivb
popf
and
cmp
inc
mov
enter
mov
jg
in
or
sbb
test
push
cmpsb
push
mov
lods
mov
loop
in
andb
mov
addl
add
xor
jge
or
ljmp
test
mov
jmp
sbb
mov
sbb
pop
jnp
mov
add
jle
movsb
cmp
mov
lret
mov
lret
pusha
or
out
ss
xor
or
int3
push
cmpsl
cmp
pusha
ret
aas
xor
clc
xchg
mov
jne
and
pusha
cmpsb
outsl
mulb
mov
mov
xor
fucomi
mov
cwtl
test
mov
mov
and
scas
lds
je
ret
pop
mov
rcl
jmp
push
push
cmc
lods
pop
outsl
add
out
ficoml
mov
add
cmp
push
jnp
addb
aad
inc
inc
cmp
dec
mov
mov
push
outsl
repnz
leave
add
inc
gs
sub
test
xchg
sbb
cmp
mov
lret
orb
xor
ja
aam
shl
and
cmp
arpl
mov
mov
inc
jmp
movsb
mov
leave
xor
mov
outsl
mov
sbb
call
andb
lcall
dec
jbe
dec
jb
dec
das
mov
movsb
jb
inc
xchg
xor
xchg
in
roll
push
int
xchg
xor
push
mov
adc
xor
xchg
ret
adc
mov
cmp
mov
or
in
mov
leave
xlat
xchg
push
sti
mov
push
addr16
pushf
cmp
stc
xchg
or
xor
jmp
add
in
ret
call
loope
dec
push
mov
dec
dec
push
push
push
and
repnz
pop
mov
jg,pt
mov
aam
outsl
test
xchg
int3
je
clc
xlat
sar
shlb
loopne
mov
lret
outsb
sbb
and
pop
pushf
fisttpll
ss
mov
pop
pop
xor
xor
dec
jne
mov
sti
lock
imul
lods
mov
dec
push
inc
mov
daa
lret
xchg
imul
hlt
lock
cmp
test
enter
sti
and
outsb
lcall
loope
in
addr16
ja
jmp
ret
jmp
out
das
sbb
mov
in
decl
push
dec
jle
add
stos
into
dec
es
fwait
push
xor
push
xchg
cmp
sub
test
cmp
pop
mov
mov
adc
xchg
mov
loope
dec
or
mov
push
clc
jo
icebp
dec
xchg
adc
insl
cmc
sbb
push
mov
jl
lcall
ret
mov
dec
mov
in
es
xor
xchg
in
jns
mov
int
imul
dec
pop
mov
pop
loop
adc
mov
cmpsb
scas
jnp
push
xor
psubw
dec
push
les
call
es
sub
mov
sbb
inc
inc
jnp
cmp
mov
xchg
fists
cld
fcomps
fwait
out
mov
ss
pop
cmc
pop
mov
add
pop
loop
dec
je
cmp
mov
fisubrl
mov
mov
jmp
xlat
or
ficoml
dec
xchg
gs
dec
fwait
lds
xchg
pop
pop
int3
push
pop
inc
cltd
mov
jns
ret
add
cltd
jne
inc
sub
sar
enter
mov
pop
int3
and
jae
jb,pn
call
push
mov
test
inc
pushf
call
xchg
pop
loope
jae
es
subb
out
mov
cmp
pushf
ja
mov
and
in
adc
cmc
mov
scas
xchg
jo
icebp
xchg
test
sarl
pushf
sbb
fs
or
mov
jmp
dec
pop
sub
aaa
shlb
imul
xorl
mov
inc
mov
sahf
out
xlat
xor
inc
repz
mov
sbb
jmp
pop
mov
ret
loope
mov
jbe
inc
daa
movsb
hlt
or
jmp
dec
aaa
xor
cmp
ficomps
into
xor
outsl
cmc
xor
fwait
inc
loope
fs
out
push
icebp
mov
push
pushl
data16
jl
and
fadds
push
stos
rcrl
push
dec
in
xor
pop
jl
push
bound
lea
jae
pushf
sub
mov
ss
call
xchg
or
lods
cmc
dec
movsb
xchg
aam
clc
push
xlat
ss
inc
mov
andb
sub
and
pop
inc
into
pop
and
stos
jecxz
cmp
jns
push
mov
pop
imul
insb
dec
push
cmp
ret
sbb
mov
outsb
cmpsl
aas
repnz
mov
cmc
adc
pop
xchg
lock
push
data16
aad
dec
add
push
mov
imul
mov
add
cmc
mov
jp
mov
bnd
rcrl
insl
push
jmp
ret
mov
test
push
mov
jge
mov
negl
ds
xor
mov
sbb
sbb
mov
cmp
jle
pop
out
mov
add
mov
out
incl
xchg
sub
push
jnp
mov
jl
push
lret
push
jg
sbb
cwtl
subl
xor
jl
add
lods
mov
and
stos
or
jno
lret
into
mov
add
rclb
mov
sub
daa
sbbb
sbb
int3
scas
dec
push
outsl
inc
ds
and
mov
enter
subb
mov
repnz
xchg
test
je
fwait
add
bound
cmp
fnsave
cwtl
cmpsb
or
cmp
aam
or
cmp
clc
adc
push
or
push
cmp
sub
xchg
jns
mov
cmp
sub
cmp
data16
cwtl
insl
aam
or
lret
mov
pop
das
push
test
cmpsb
mov
orl
mov
xchg
in
les
jo
mov
shl
sub
sbb
inc
add
mov
xchg
loope
xor
adc
jl
xlat
inc
in
xchg
gs
out
sbb
adc
hlt
and
cltd
daa
mov
cld
into
addr16
insl
aas
ret
mov
mov
mov
and
test
mov
lcall
rorb
mov
lret
or
xor
bound
jae
jge
mov
sub
sub
add
pop
sbb
sahf
pop
adc
jge
add
imulb
jmp
dec
pop
mov
in
pop
or
sbb
pop
push
pop
jp
push
lea
pop
jg
fwait
sbb
pop
ss
insb
insb
daa
imul
dec
mov
sbb
test
push
inc
in
in
fnstenv
or
cmp
in
cmpl
repz
or
inc
or
xor
dec
call
jmp
bound
xor
lret
sbb
out
cld
lret
test
or
mov
pop
sahf
gs
xor
xor
xor
jp
outsl
icebp
sbb
cltd
push
push
lea
into
test
jb
pop
mov
movb
push
ljmp
inc
mov
mov
ret
inc
enter
mov
ret
outsb
jnp
jbe
jp
push
loope
ljmp
inc
loop
push
lret
sbb
or
iret
push
mov
jecxz
mov
jno
xchg
pop
push
test
int3
lods
lock
pop
jb
pop
jp
test
lahf
cs
mov
in
mov
ss
xor
sub
lret
lods
clc
jb
mov
and
insb
cmp
mov
cmpsl
stos
inc
jl
fildl
and
call
aad
ret
pushf
jp
add
scas
lahf
jg
xchg
xor
leave
mov
add
push
xchg
mov
cmp
dec
mov
fwait
int3
int
mov
mov
bound
sub
sbb
sub
jbe
int3
jmp
pop
fsts
mov
sbb
out
cmp
test
dec
addl
jns
jns
sbb
ret
jle
mul
enter
mov
ds
mov
dec
fistl
push
cli
push
and
and
negb
jno
push
daa
repz
inc
and
jge
aaa
push
xchg
scas
das
popa
sub
adc
mov
mov
ss
xchg
es
pushf
cltd
xchg
xlat
enter
dec
hlt
mov
leave
aam
sub
xor
jb
flds
sub
mulb
push
add
sub
push
out
lea
ret
mov
cmpsl
sbb
dec
xor
sbb
ss
fwait
xor
dec
int3
aad
push
ja
outsl
insb
lcall
lods
aad
fcomps
and
push
stos
push
outsl
ss
jecxz
pop
mov
pusha
das
out
loope
cmp
aad
aas
and
dec
insb
and
lcall
scas
pop
xchg
das
pusha
test
scas
bound
adc
cwtl
cmp
dec
nop
lcall
dec
inc
cmpb
fstpl
add
std
aam
call
push
push
dec
add
cmp
fidivrs
jl
test
inc
loopne
pop
ficoml
sub
inc
ds
jo
std
xchg
xor
shl
jo
test
mov
mov
fmulp
into
jns
repnz
adc
fistpll
popf
out
or
adcb
inc
cld
xor
cmp
cmp
dec
insb
nop
inc
gs
xlat
out
int3
repnz
jecxz
pop
lahf
dec
xchg
xor
outsb
loope
sbb
or
inc
xchg
dec
daa
shrd
adc
xchg
pop
test
cld
adc
test
xchg
cmp
xlat
mov
mov
adc
pop
xchg
jp
push
adc
adc
mov
or
mov
or
mov
popf
pop
xchg
push
sub
bsr
repnz
mov
push
adc
bound
stos
stos
movhps
pop
std
fwait
repnz
xchg
cwtl
push
cld
mov
daa
aad
pushf
sbb
icebp
stc
sbb
and
add
mov
dec
orb
dec
lods
sti
insl
std
jbe
jle
jg
push
jp
ljmp
jle
cltd
lds
lods
mov
fdivl
daa
dec
inc
dec
push
inc
xchg
mov
cmp
mov
enter
jmp
xor
mov
jg
sub
mov
clc
xlat
and
and
jno
mov
stos
fcomp
icebp
dec
jecxz
inc
sub
int
push
stos
mov
adc
jl
pop
addb
pop
andl
repnz
cs
lret
add
lahf
rclb
adc
in
adc
aad
mov
ret
int3
int3
fbld
xchg
test
pop
mov
aam
stc
mov
aaa
sbb
ret
add
cwtl
popa
inc
xor
mov
sub
push
in
les
inc
sub
push
test
das
andl
shlb
push
push
pop
ficoms
iret
loop
jns
testl
mov
or
xor
mov
lea
inc
fwait
xor
pop
and
stc
add
in
dec
cmpsl
inc
fs
mov
xchg
mov
jle
sti
pop
fnstcw
stos
mov
ror
or
dec
xor
aad
mov
pusha
aas
mov
pop
ljmp
dec
fsubp
shlb
bound
adc
dec
jne
pushf
push
jg
xlat
add
fnstsw
lahf
xor
xchg
fisubs
scas
and
sub
shll
fwait
push
cmp
lret
inc
cmp
jo
mov
arpl
inc
xchg
sbb
cmc
cmpsb
shll
cmp
jb
in
sub
hlt
mov
add
ret
mov
dec
and
adc
mov
clc
dec
adc
ds
fildll
push
and
ljmp
pop
cmp
mov
push
adc
mov
dec
xchg
xchg
inc
cltd
xchg
jmp
dec
push
aad
mov
add
pop
mov
jmp
or
xlat
cld
pop
push
stc
push
push
sbb
rclb
mov
xchg
lods
test
mov
loope
inc
mov
lahf
iret
je
push
ljmp
xchg
and
out
xchg
mov
push
lods
fadds
mov
ja
call
orl
loop
jne
push
add
ret
adc
in
out
push
adc
xor
xchg
dec
xorl
or
xor
cmp
jbe
mov
movsl
sbb
mov
shlb
dec
add
inc
outsb
xchg
loopne
stos
out
inc
nop
pushl
pop
adc
lds
pusha
xor
mov
cmc
xchg
incl
test
mov
and
pop
push
dec
fildl
push
xlat
shl
cmp
push
outsb
test
aas
cvtps2pi
xchg
lea
inc
add
out
sub
add
jle
xchg
push
fmulp
sbb
cs
popf
arpl
data16
mov
adc
xchg
je
sbb
xor
in
xor
addr16
jmp
daa
mov
popa
mov
and
inc
js
xchg
call
jo
lods
or
imul
out
cmovge
jl
fdivs
add
mov
push
adc
xchg
ljmp
and
andl
imul
cmp
es
mov
adc
filds
sub
xchg
jnp
lods
cmp
or
add
adc
and
lcall
negl
in
ror
hlt
ss
adc
lods
mov
mov
lods
enter
popf
sti
push
mov
xchg
jae
cmp
dec
stc
mov
nop
fprem1
out
jbe
enter
cmp
arpl
pusha
rcrb
cmp
test
iret
pop
sub
inc
fstl
dec
inc
push
mov
and
add
cmp
sub
repz
sub
fistpl
inc
sbb
mov
jnp,pt
lret
jnp
sarb
push
dec
mov
pop
cmp
pushf
dec
jne
out
loope
arpl
lods
mov
jns
fldenv
mov
and
nop
iret
mov
ljmp
or
insb
in
inc
divl
divb
icebp
lods
mov
cmp
inc
push
int
adc
sbb
pop
inc
insl
and
mov
xchg
xchg
int3
std
fsubl
in
out
or
dec
imul
adc
cwtl
ret
movsb
xor
add
jns
inc
lods
fdivl
mov
lret
mov
lock
push
fcmovnu
mov
out
test
push
stos
dec
call
dec
fidivl
mov
mov
jb
iret
mov
fcom
idiv
int
movsl
icebp
and
jo
fisttps
nop
sub
insb
rcrb
mov
imull
mov
std
aas
jo
repz
mov
fnstcw
fistpll
mov
jl
aas
inc
mov
xchg
ficompl
mov
jo
outsl
out
pop
sbb
mov
jb
cmpsl
jne
mov
cltd
pop
into
mov
imul
pusha
std
loope
out
arpl
out
shlb
xor
and
insl
jecxz
mov
into
bound
movsb
mov
cld
pop
aam
fcmovu
pusha
mov
rcl
xor
aad
leave
xor
sub
shrb
xchg
mov
or
fistps
jle
pop
pop
add
je
push
inc
sbb
enter
mov
cmp
call
lret
iret
in
test
bound
pop
sarb
sarb
mov
mov
adc
xchg
int
jae
in
imul
icebp
sub
cmpsb
mov
sub
ljmp
pop
mov
sub
mov
pop
mov
pop
and
scas
mov
mov
mov
aad
std
add
push
subb
or
mov
and
ret
cmp
mov
addr16
rclb
or
pop
pop
pop
pop
out
daa
or
xor
sti
movsl
adc
pop
aad
pop
lret
call
inc
mov
adc
rolb
out
fsub
add
aad
imul
mov
mov
pop
dec
xor
into
popa
outsl
adc
pop
loop
in
div
icebp
sub
test
cmp
popa
dec
loopne
jl
std
cmp
popa
adc
in
cmc
jmp
mov
jle
mov
es
jmp
xchg
jnp
sbb
and
ja
test
push
pop
shlb
or
xchg
push
shlb
xchg
out
rorl
pop
cld
cmc
sub
jo
dec
ss
sbb
das
jge
or
or
arpl
cmp
shr
cltd
das
xor
rcrb
ret
lret
fwait
mov
xchg
adc
push
fstpl
call
call
rcll
jmp
mov
ret
in
aaa
call
cmp
xchg
pushf
pop
add
scas
cmc
lcall
lea
in
add
stos
xor
lds
aas
push
mov
push
lahf
jbe
adc
jb
shl
jle
gs
outsb
aaa
mov
sahf
aaa
pavgw
add
fcomp
js
sbb
int
cmpsl
or
push
out
push
mov
push
inc
add
in
out
xor
and
sub
lahf
aaa
dec
addr16
push
test
imul
cmp
jnp
lock
xchg
fucomp
shr
xchg
loopne
cmpsl
pop
gs
out
pop
mov
sub
stos
pop
cmp
es
push
dec
scas
pop
bound
popf
into
jne
push
and
ja
inc
and
adc
loop
pusha
fs
push
test
das
sub
jmp
pusha
jmp
xor
jno
into
xchg
push
adc
cmpsb
out
outsl
pushf
enter
add
jp
cmp
mov
int
loop
andb
mov
lret
clc
jo
das
mov
call
dec
xor
xor
inc
xchg
push
adc
add
xchg
testl
hlt
inc
scas
ret
mov
fstps
popf
ret
mov
cmc
movsl
push
jmp
ficomps
push
sub
scas
in
jmp
xor
into
addr16
jmp
out
lcall
ss
dec
push
dec
nop
loope
mov
inc
sub
dec
jnp
daa
adc
test
mov
daa
sub
lods
cmpsl
jns
xchg
aad
mov
fsubs
aam
icebp
or
jl
aaa
fsub
mov
jbe
int3
mov
xchg
cmp
mov
jp
sub
repz
mov
xchg
lcall
cmpl
mov
mov
loope
rcll
lcall
adc
cld
aam
inc
sbb
sbb
lret
fs
pop
stc
pusha
adc
inc
dec
outsb
fsubrl
pop
pop
mov
cs
push
xchg
dec
dec
ret
jnp
cmpsl
pop
adc
leave
dec
fwait
adcl
or
sub
push
test
xchg
leave
loope
adc
sbb
adc
imul
mov
push
inc
jne
xor
mov
aas
lds
leave
xchg
cmpl
movsb
in
push
repz
or
pushf
outsl
mov
mov
dec
jle
or
repz
hlt
mov
inc
pop
xorl
and
lds
mov
mov
ljmp
sub
xchg
sti
scas
mov
sbb
out
sbb
jno
push
and
les
pop
adc
and
pop
cmp
outsb
pop
push
lods
gs
fiadds
xchg
das
bound
imul
add
loop
xchg
xchg
jns
js
popf
popa
ds
out
or
outsl
mov
jp
push
cmp
xlat
mov
lock
test
fcmovnbe
mov
popf
push
insb
sbb
test
ds
mov
inc
mov
xchg
pop
xor
mov
dec
dec
xchg
dec
push
mov
push
xor
outsl
cli
cmpsl
push
adcl
lahf
cwtl
ficoms
das
sub
outsb
aam
out
fcom
inc
push
ret
jae
mov
mov
adcl
pushf
cmpsb
add
pop
jp
push
xor
or
out
pushf
xchg
push
sti
fs
loope
test
ds
mov
jg
scas
lock
lods
mov
xchg
push
pop
subb
scas
mov
mov
push
scas
les
sub
add
test
sbb
push
fdivrl
and
add
xlat
push
fisttpl
jne
in
ja
sarb
loope
fdivl
or
iret
repz
add
push
jbe
mov
inc
ret
pop
add
xchg
das
nop
movsl
inc
mov
mov
mov
imul
inc
cmp
inc
test
scas
pop
movsl
shl
push
and
jo
add
lret
pop
adc
out
inc
fisttpll
lret
ljmp
adc
out
push
rorl
jnp
test
mov
jae
fldenv
mov
mov
add
cld
arpl
sub
rcrl
popa
xor
dec
imul
push
repz
popf
in
adc
mov
add
mov
adc
sbb
or
mov
or
adc
dec
adc
fdivs
inc
mov
js
or
dec
fmuls
outsb
scas
or
sbb
cmp
sub
sti
int
sub
or
ds
leave
xor
lods
cmpsb
sbb
ja
mov
mov
sub
xchg
cwtl
js
dec
icebp
ds
fstl
jecxz
out
mov
adc
push
fsubrp
in
sbb
pop
pop
les
andb
sbb
lods
adc
mov
jge
push
push
repz
lds
jg
add
repz
movl
repnz
cmp
insl
cltd
ja
test
movl
lcall
and
jecxz
cmp
inc
pop
adc
mov
iret
mov
or
and
sub
mov
movsb
adc
test
cli
mov
adc
popf
and
adc
in
ficoml
icebp
push
shrb
nop
mov
outsb
cmp
iret
sub
out
test
popa
sbb
sbb
out
imul
and
movsb
lock
sbb
xlat
int3
inc
jnp
sub
dec
xor
popf
pop
pop
or
dec
sub
inc
push
int3
je
mov
add
lcall
outsb
mov
fs
dec
sub
scas
testb
sub
stos
or
xchg
ds
pop
dec
imulb
aaa
push
lcall
xchg
mov
movsl
mov
sub
jmp
xorl
lahf
sub
mov
dec
cmp
mov
sub
test
jl
pushf
pause
scas
pop
leave
mov
xchg
mov
shll
js
scas
mov
push
les
or
mov
fs
mov
js
inc
mov
adc
mov
xor
push
xchg
outsb
sbb
fwait
jge
nop
pop
aad
pop
sbbb
xchg
cmp
lock
bound
out
jle
jns
pop
sahf
ljmp
sbb
iret
mov
fimull
add
inc
xor
and
jp
icebp
push
shll
repz
jae
and
mov
lahf
xor
jle
in
scas
adc
mov
rolb
popf
pop
leave
jl
adc
pop
cli
jmp
adc
rclb
sub
mov
and
push
iret
dec
lret
out
adc
pop
movsl
mov
leave
dec
sbb
inc
adc
xchg
adc
xchg
mov
clc
xchg
test
outsb
cmp
sub
in
in
fldcw
iret
subb
xchg
and
push
adc
jns
inc
subb
pop
jecxz
and
in
aam
cmpsl
iret
push
inc
sub
mov
lret
jle
pop
push
push
mov
jle
mov
mov
add
push
shlb
in
mov
iret
clc
mov
xor
fistl
test
enter
out
movsl
fbstp
adc
mov
jo
mov
adc
adc
sbb
dec
mov
jne
popf
addr16
test
faddl
or
inc
inc
jne
mov
jne
lds
and
jp
imul
aad
mov
or
sahf
aad
std
iret
xchg
out
mov
out
clc
adc
and
cli
or
jo
and
and
lret
das
lock
adc
push
je
cmp
or
pop
xor
xchg
mov
push
mov
jae
in
mov
popf
sub
in
mov
fucomip
dec
test
xor
sar
cmpsb
fs
jp
mov
xlat
or
mov
inc
sbb
push
cmp
in
ret
jge
mov
aaa
cmp
inc
push
repnz
sbb
fisubs
sahf
aaa
fidivl
or
das
pop
orb
xchg
not
scas
js
add
pushf
jne
lods
int3
xchg
pop
rcl
lock
repnz
or
lret
inc
dec
mov
mov
jo
icebp
mov
mov
fsubrl
fisubl
nop
and
cmpsb
outsb
push
push
push
mov
icebp
mov
dec
jb
cld
mov
mov
insb
dec
xchg
inc
movsb
sub
sbb
ljmp
xchg
jae
scas
movsl
out
dec
mov
or
sahf
push
daa
adcl
jnp
lahf
add
pushf
call
sub
adc
cmpsb
faddl
add
ss
and
mov
jmp
es
call
jge
dec
dec
in
imul
adc
scas
cwtl
mov
xchg
pop
loopne
sbb
mov
inc
inc
lods
dec
mov
add
in
jp
gs
ja
inc
insl
aam
and
test
insl
popa
dec
pop
and
fnsave
push
add
add
xor
mov
out
inc
movb
mov
mov
mov
pop
inc
fdivrs
push
cwtl
jne
stos
sub
imul
and
push
das
inc
dec
xor
cld
mov
int3
push
scas
jbe
dec
std
aad
stos
ret
push
dec
and
xchg
ja
aas
sbb
icebp
or
lock
gs
push
push
push
sbb
or
jne
insb
adc
leave
subb
xchg
jns
pop
pop
xchg
loope
pop
xor
daa
mov
sbb
nop
jge
and
rolb
and
xlat
sti
dec
lahf
xchg
sbb
dec
xchg
mov
nop
sbb
rcll
push
dec
dec
aad
lds
mov
shrl
and
in
icebp
mov
outsb
stos
les
imul
lock
xchg
mov
pop
dec
sahf
mov
fdivs
into
jne
cs
lock
jbe
outsb
arpl
push
invd
pop
push
dec
enter
into
cmpsb
xor
pop
sub
cmp
push
pop
leave
adc
mov
inc
aaa
push
lods
xor
stos
add
mov
jo
clc
or
ret
push
pop
lock
dec
adc
push
or
insl
or
mov
or
xlat
mov
stos
mov
push
out
xor
vmwrite
aad
cmp
sub
cmp
pop
not
jno
mov
xor
and
loop
sti
dec
nop
push
fiadds
outsb
xchg
sub
imul
lahf
sbb
xor
push
sub
or
lahf
sub
jle
stos
inc
jo
je
daa
push
js
mov
cld
xor
sti
or
inc
popa
in
mov
xor
jnp
int3
cmc
dec
inc
or
pop
loope
or
aad
rcrb
dec
out
sub
std
inc
int3
sbb
pop
inc
mov
sbb
iret
aas
imul
xchg
mov
popl
mov
sbb
std
cld
jmp
cmc
cmp
int3
add
dec
pop
cmp
adc
xor
dec
dec
aas
fstpt
adc
mov
jecxz
add
mov
call
or
push
roll
dec
pop
sbb
pusha
std
in
arpl
and
or
es
push
test
mov
mov
nopl
not
das
jae
dec
pop
in
xor
repnz
fnstcw
je
mov
cmp
jg
cmp
int
jp
pop
jge
add
shrl
out
push
ljmp
out
push
je
daa
outsb
add
mov
test
test
movl
test
dec
cmp
mov
xor
inc
insb
mov
dec
xchg
adc
push
ret
shlb
das
adc
clc
aaa
adcl
xor
mov
ret
xor
pop
or
cmp
inc
jmp
push
loope
cmp
or
orb
sarb
mov
lret
lods
jb
inc
das
inc
dec
aas
jg
int
pop
jb
mov
add
sarl
and
outsl
stos
mov
mov
mov
movsl
in
psubsw
jmp
cmp
mov
jbe
dec
pop
inc
repnz
mov
mov
popf
push
add
add
out
ja
ds
dec
rcrl
mov
stos
cmpsl
loop
les
inc
gs
mov
and
and
add
sahf
shll
lea
or
cmp
and
jmp
in
mov
arpl
fsubrs
xlat
fnstsw
mov
lret
or
int3
jno
push
dec
cmc
or
movsl
jmp
popl
cmpsl
repnz
lods
stos
cwtl
sub
std
nop
mov
adc
cmp
jnp
xchg
shlb
mov
xor
icebp
jmp
pushf
sbb
mov
xchg
mov
pop
and
bound
inc
dec
sub
stc
mov
jmp
dec
aas
hlt
adc
andb
popf
add
xchg
mov
xor
sub
mov
cmpsl
cmp
inc
cmp
dec
adc
xchg
lahf
add
in
fs
jp
jg
inc
testl
data16
fs
add
fdivrs
xor
ds
push
inc
loop
jae
and
add
jp
mov
dec
jnp
or
jnp
scas
jg
pop
dec
push
pusha
scas
push
xchg
inc
mov
pusha
mov
mov
or
mov
sbb
mov
repnz
push
in
sub
mov
adc
mov
and
jecxz
cwtl
sbb
or
rclb
aas
xchg
ljmp
loope
bound
fdiv
pop
dec
jnp
popa
test
test
pop
sbb
in
loope
repnz
xor
jp
filds
test
stc
ja
decl
jbe
sbbb
or
xor
fs
mov
xchg
xor
jns
xchg
sbb
dec
and
push
popa
push
adc
repz
ret
repz
nop
bswap
clc
xor
mov
out
cs
fs
jle
adc
xchg
leave
lret
add
push
xchg
push
aam
movsb
add
sub
adc
cmc
and
or
das
dec
iret
or
xchg
xchg
sub
les
cmpsb
fcmovnu
fdivrl
scas
test
pop
out
in
jmp
pop
in
mov
iret
loopne
out
xor
mov
adc
jae
mov
mulb
testl
push
mov
dec
pop
jg
add
pop
dec
nop
rcl
das
push
mov
sub
scas
daa
jmp
repz
rcll
cmp
push
scas
pop
lcall
cmp
cmp
sub
dec
pop
adc
cmp
xchg
clc
mov
sbb
pop
add
mov
mov
data16
xchg
cmp
ljmp
ret
mov
popf
lea
jecxz
or
fldz
insb
jle
imul
or
jno
imul
push
dec
lods
hlt
xor
mov
or
lea
push
xor
fwait
outsl
add
leave
xchg
or
out
in
test
sti
jb
std
push
add
inc
arpl
outsl
or
xchg
mov
xchg
add
sti
sub
pop
push
popa
in
adc
mov
movsb
pop
mov
repz
mov
ljmp
cwtl
xor
nop
sub
scas
sti
das
fistps
aam
int3
mov
sbb
fwait
mov
shrl
mov
dec
push
jmp
imul
lret
pop
fiaddl
adc
cmp
imul
dec
pop
mov
xchg
pop
incb
jne
xor
bound
imul
jno
fistl
push
mov
stos
mov
push
add
pop
dec
mov
je
mov
sub
lods
lods
scas
lds
cld
nop
shrb
cvtps2pd
repz
or
inc
je
sub
inc
push
and
daa
pop
mov
mov
je,pn
test
movsb
xor
dec
pop
pop
xor
movsb
cmp
sbb
outsl
push
cmp
outsl
mov
iret
fstpt
adc
cld
aaa
rcrb
daa
gs
in
xchg
jecxz
add
jne
inc
adc
dec
movsb
push
adc
hlt
test
push
icebp
test
mov
pop
outsl
cmp
sbb
sub
rolb
mov
rolb
outsb
in
in
add
adc
ret
dec
in
stc
movsb
jae
mov
push
out
hlt
or
cld
or
inc
xor
mov
negb
lods
push
fs
insb
adc
xchg
das
test
leave
out
leave
jnp
mov
mov
fs
xor
cli
lret
pop
js
cwtl
rcrb
mov
sarl
sbb
rcll
adc
fcoml
orl
adc
dec
sub
lock
mov
mov
mov
inc
pop
and
add
jecxz
jbe
aas
imul
jbe
xor
or
jnp
jecxz
arpl
adc
bound
push
push
cmp
xor
clc
cmp
mov
xor
push
mov
and
out
adc
lods
sub
push
mov
stos
pusha
divb
push
in
cmp
movsl
mov
sbb
rol
mov
push
js
push
or
test
std
ret
testl
sub
xchg
shr
mov
and
sub
leave
or
or
jl
ljmp
loop
mov
pop
sbb
inc
mov
mov
pop
dec
cltd
jnp
xor
sub
xchg
jmp
lods
jle
pop
add
addr16
les
out
stos
fldcw
lret
inc
mov
or
out
adc
scas
fldcw
fs
pop
cmpsl
mov
repz
mov
repz
pop
cmp
mov
sahf
iret
mov
cmp
lods
sbb
and
add
jo
xor
sbb
rcrw
jo
xor
jp
lahf
pushl
xor
inc
mov
outsl
mov
and
stc
push
or
push
fcomi
mov
inc
jp
mov
lock
mov
mov
xchg
pop
add
add
jo
pop
cwtl
pop
mov
jle
mov
xchg
rorl
shrl
inc
in
loope
mov
out
bnd
mov
ljmp
sbb
bound
dec
or
and
enter
and
popa
mov
fmull
fnsave
cwtl
addr16
in
movsl
scas
xchg
push
push
cmp
cwtl
js
fs
mov
add
push
pusha
inc
icebp
outsl
xor
mov
pop
loop
jecxz
adc
loope
pop
dec
mov
xchg
test
addr16
sbb
pusha
jb
push
movsl
gs
mov
int
mov
mov
roll
pop
lea
ss
outsb
xor
and
pop
adc
push
adc
andl
inc
mov
leave
dec
jecxz
xchg
aaa
dec
fiaddl
xlat
lret
xor
add
enter
sub
jbe
sti
leave
adc
xchg
roll
roll
push
inc
mov
pop
add
mov
xor
cmc
cmp
jg
cmp
xor
fisttpl
mov
add
lds
sti
ljmp
mov
inc
fidivl
dec
cmp
popf
jns
add
dec
cmpsl
mov
inc
mov
jne
mov
les
mov
inc
cmp
cs
push
xor
add
sbbl
sub
or
or
pop
ss
xchg
adc
hlt
push
mov
cmpsl
or
enter
hlt
fstps
cmp
sbb
lret
inc
or
loope
call
cmp
aam
out
fwait
lods
test
es
push
pusha
cli
cmp
fisttps
mov
aaa
push
mov
cmpsl
lret
dec
or
scas
push
jnp
fsub
mov
add
sahf
sub
inc
popa
pop
movsl
leave
mov
mov
and
mov
lea
or
xor
add
xlat
lret
sahf
or
mov
shrl
call
push
insl
dec
pop
loopw
mulb
lcall
and
jmp
loopne
mov
mov
inc
xor
iret
out
outsl
ss
jo
into
xchg
cmp
fnsave
out
rcl
mov
xor
mov
int3
movsl
out
add
xchg
mov
sbb
push
pop
repnz
add
xor
jge
and
lods
dec
loope
adc
aaa
pop
pop
out
adc
add
mov
fs
stc
and
dec
mov
leave
mov
in
or
shl
arpl
mov
arpl
int3
aas
es
jae
sub
fwait
sub
sbb
mov
lods
negl
and
add
mov
lcall
loop
shl
add
xor
ret
fdivrs
lret
lock
daa
js
adc
xchg
inc
insb
adcl
jo
mov
pop
je
lds
xchg
mov
lea
inc
and
loopne
lock
mov
fucomi
je
insl
mov
inc
icebp
xchg
and
movsb
pop
push
out
sub
mov
inc
or
subb
jp
push
lods
fs
xor
repnz
shl
mov
stc
pop
push
leave
iret
push
push
push
sbb
xchg
push
out
lahf
movsl
jbe
aam
test
push
sub
fstpt
nop
mov
sub
popf
cmp
aas
sub
sub
mov
cmp
shl
push
imul
cmpsl
cmpsb
scas
push
jns
stc
lods
shlb
pop
xor
clc
repz
sub
movsb
shll
cld
iret
sbb
decl
and
lea
dec
movsb
iret
cmp
shrl
cmp
test
mov
cmp
jp
adc
repnz
jne
cwtl
adc
cld
in
xor
and
jecxz
dec
call
push
frstor
add
out
stc
scas
inc
mov
out
inc
lods
inc
cmp
mov
cs
iret
das
sub
rorb
jmp
sbb
fwait
jp
pushf
inc
push
xlat
out
jno
fsubl
notl
out
mov
cmp
imul
jo
int
aaa
mov
in
or
adcb
loope
or
sbb
leave
push
xor
push
lcall
pop
xchg
mov
out
or
push
mov
mulb
cmpsl
cmp
lock
enter
jge
mov
add
out
jmp
shrl
aam
adc
faddl
pusha
cmpsl
xor
dec
and
mov
out
in
fistpl
or
and
ret
sbb
jnp
int3
xchg
cmovno
push
mov
lock
cs
int
outsl
div
test
cmp
mov
mov
adc
decb
lahf
mov
mull
cmp
mov
xor
sbb
scas
xchg
arpl
test
jbe
cmp
cmp
push
enter
pop
mov
mov
mov
ds
scas
nop
jo
pop
mull
cmp
and
andb
jno
pop
or
inc
imul
ret
lock
sbb
pop
lret
out
sbb
imul
pop
nop
xor
cmc
sbb
movsb
outsl
loope
movsb
cmc
enter
mov
xor
cmp
push
mov
adc
sbb
rorb
pop
leave
sub
pop
lock
cmc
xchg
jg
lds
xchg
ljmp
aam
sub
psrlq
mov
popf
xchg
pop
add
pop
pop
out
mov
roll
jge
dec
pushf
in
sti
lock
lcall
subb
jecxz
and
add
inc
stos
adc
inc
pop
xor
add
stc
or
add
sub
scas
ss
popa
popf
ljmp
adcl
mov
mov
xchg
enter
gs
mov
popf
mov
push
out
pusha
stos
clc
jl
and
add
cmp
clc
mov
repnz
push
pop
and
aam
fidivrl
aad
dec
dec
ret
and
out
mov
cmp
xchg
or
inc
repnz
ficoml
arpl
fwait
in
pushf
sbb
xchg
cli
sbb
add
push
dec
ss
divl
push
add
push
xchg
addr16
lret
fdivs
test
jmp
mov
mov
sbb
push
sti
sar
mov
int
xor
enter
pop
fisubs
test
cmpsl
movsl
adc
adc
sbb
push
shrl
xchg
jno
imul
mov
inc
cmp
shrl
sub
scas
push
ja
imul
adc
in
ror
fwait
jle
mov
cs
add
dec
adc
mov
cli
pop
xor
ljmp
sbb
jle
inc
inc
jmp
pop
jo
jecxz
mov
cmp
nop
pop
pushf
in
and
and
pop
mov
xlat
sub
or
inc
mov
in
push
ja
dec
mov
scas
xor
xlat
push
inc
sarb
xchg
repnz
inc
cmp
test
jb
or
popa
pop
add
ret
idiv
arpl
jmp
data16
fs
sbb
gs
mov
pop
cmpsb
outsl
add
pop
rclb
xor
jmp
xlat
mov
xchg
mov
pop
xor
int3
dec
ss
repz
rcrl
jbe
jbe
sti
ljmp
ljmp
sub
mov
repz
shlb
rcll
dec
fisttpl
cmp
outsl
xor
mov
dec
xchg
mov
sub
test
lods
clc
pop
xor
mov
add
cld
sub
push
loop
push
repz
pop
fdivl
xor
out
xchg
paddusw
neg
fldcw
jb
sub
push
mov
outsb
int3
movsb
cmove
jl
je
rcl
mov
test
mov
pop
jle
or
push
clc
out
repz
pop
add
test
xchg
fcmovnb
pop
les
mov
xor
ja
je
roll
fstpt
inc
ja
insb
cmp
es
mov
insb
nop
jl
out
lret
fs
cmp
hlt
dec
ret
dec
ss
mov
rcrb
sub
push
inc
mov
mov
xchg
stos
or
ljmp
mov
or
or
sub
popf
inc
mov
mov
cmp
std
add
ja
sbb
push
in
sub
ds
lods
inc
sahf
mov
xor
lock
pop
popf
insb
icebp
inc
lods
outsl
add
leave
add
xorb
mov
mov
enter
jo
mov
movsb
adc
mov
rcll
xor
hlt
test
and
mov
mov
in
inc
mov
clc
in
das
adc
xor
mov
in
xchg
fidivl
addr16
aad
add
mov
sub
stc
lods
xchg
daa
pop
lock
imul
mov
addr16
mov
and
cmp
jbe
iret
ret
inc
in
cmp
pop
aas
dec
and
or
ret
orl
sbb
fs
jbe
xlat
inc
cmp
decb
out
inc
int
mov
fcmovnu
sub
cmp
mov
adc
xchg
jne
ljmp
lds
mov
jle
pusha
ljmp
lahf
jge
and
inc
sbb
xchg
sbb
push
lds
out
daa
mov
scas
or
mov
push
xchg
mov
jne
stc
jb
cld
imul
mulb
xor
jb
out
test
add
es
testb
adc
icebp
jb
inc
sahf
xchg
cltd
push
jp
ror
fs
push
out
add
test
push
je
dec
jl
ficomps
adc
mov
dec
jmp
mov
xchg
nop
adc
push
jg
dec
mov
sti
pop
pop
mov
jne
cltd
mov
bound
cmp
sub
mov
mov
sub
xor
mov
pop
or
loopne
and
dec
stc
ret
dec
aas
adc
fisubrs
jmp
pushf
lods
mov
js
rclb
push
inc
aam
mov
mov
xchg
sbb
movsb
cmp
adc
xlat
mov
rol
scas
adc
add
ret
xchg
test
xor
clc
xlat
int
mov
stc
pop
iret
ss
mov
fistl
push
push
and
popa
shrb
call
lcall
hlt
xor
xchg
mov
ljmp
lret
iret
loop
sbb
adc
lret
loop
mov
jb
inc
push
cmpsb
cmp
xchg
leave
dec
push
push
or
adc
adc
cmp
mov
dec
pop
fistpl
cmp
out
fucom
inc
mov
dec
cld
sbb
adc
xchg
mov
push
push
jp
clc
outsb
lods
out
sbb
popf
add
ret
popa
mov
jle
add
aas
inc
mov
cmp
lcall
scas
inc
loop
xchg
xchg
or
mov
loopne
mov
inc
out
lret
dec
call
pop
and
fistpl
ds
enter
xchg
cmp
adc
cmpsl
mov
iret
mov
or
jns
in
xor
sub
pop
and
or
dec
mov
stc
repz
dec
adc
inc
fstpt
xor
add
loope
imul
and
sti
cltd
shll
int3
hlt
idivl
mov
push
test
testl
mov
add
xchg
mov
sahf
and
or
addl
fidivl
fstpt
lret
iret
mov
pop
xchg
sbb
mov
ljmp
jl
mov
lock
sub
aas
xchg
inc
add
push
cmpb
jle
scas
leave
xchg
sub
lods
repz
outsl
add
std
push
push
mov
push
sbbb
pusha
movsb
mov
jne
xchg
xor
ss
push
mov
gs
out
inc
je
dec
je
push
add
mov
les
cld
mov
lret
cld
insl
xchg
mov
sub
fstl
dec
lcall
jp
inc
lea
subb
sbb
mov
jle
popf
ss
inc
ficomps
movsb
sbb
mov
setne
inc
cmpsb
mov
stos
jmp
outsl
cs
add
ljmp
hlt
rcrb
ret
into
cmc
mov
inc
cwtl
ficoml
fisubrl
stc
sub
lret
and
les
mov
sar
jge
in
xor
repnz
jno
add
dec
leave
es
testl
testb
test
ficomps
dec
dec
sub
xchg
fsubs
adc
scas
int3
jmp
clc
jae
pop
lahf
adc
inc
dec
jle
enter
int3
idivl
popf
rorl
xor
bound
out
aad
xchg
in
mov
pop
mov
je
push
dec
addb
xchg
hlt
out
mov
cmp
mov
pop
pop
mov
or
jp
pop
xor
fdivrl
push
inc
test
popf
shl
in
xor
mov
aaa
xlat
insl
in
cmp
mov
stos
xor
mov
or
test
pop
lret
xchg
insl
stos
jle
out
cmp
sub
xor
mov
int
icebp
mov
test
cwtl
cmp
fcoml
mov
cmp
imul
lock
nop
mov
push
sub
mov
inc
pop
outsb
cmp
mov
outsl
push
cmpsl
mov
cs
aas
mov
insb
inc
mov
jecxz
jle
cltd
xchg
dec
cmp
xchg
jecxz
lret
outsl
mov
push
jb
ficoml
xchg
aas
std
inc
and
sbb
or
jge
xor
ds
xor
mov
and
pinsrw
cmp
mov
push
insl
or
ss
leave
gs
mov
sbb
jno
test
sbb
sub
in
mov
fs
fwait
rcl
pop
xor
test
outsl
shlb
std
jp
or
cmp
stos
shlb
pop
sahf
insl
xchg
scas
jb
ret
sub
cmp
jmp
xchg
mov
std
in
ja
pop
call
cs
and
loop
add
mov
arpl
pop
push
shll
push
xchg
fldenv
imul
fs
add
adc
mov
sbb
push
push
cmp
mov
jl
addl
lock
in
mov
loop
inc
das
movb
in
lods
dec
dec
mov
or
out
add
or
fisttpl
sub
icebp
pop
cmpsl
ret
int3
pop
ret
jecxz
daa
lcall
jno
push
test
sub
out
insb
add
ss
mov
fs
pop
dec
sbb
inc
dec
add
out
imul
dec
out
add
inc
jno
sahf
adc
inc
adc
and
adc
inc
push
xor
rorb
pop
xorb
stos
jne
inc
jb
mov
or
cltd
fsts
fwait
lret
fsts
aam
int3
xor
in
test
pop
test
cmp
scas
cmp
flds
push
pop
add
add
push
xchg
xor
addr16
push
dec
add
push
add
nop
outsb
sbb
add
adc
out
sub
imul
add
xchg
pop
ret
stos
out
dec
xor
movsl
out
lock
fildll
and
pop
adc
mov
insb
clc
fmull
int
cmpsl
into
push
cltd
les
in
jno
ljmp
mov
jo
pop
lahf
repz
mov
or
decl
aaa
sti
xchg
inc
mov
add
xchg
daa
cmp
imull
xlat
sub
jo
push
je
aas
addr16
mov
dec
bound
jle
lret
fdivrp
push
ljmp
adc
xchg
adc
sbbb
aam
mov
popf
scas
mov
inc
dec
add
xchg
jmp
cmp
mov
mov
out
mov
mov
in
ja
pop
int
cmpsl
into
sub
sbb
mov
sti
or
das
roll
movsl
jg
icebp
js
cmp
inc
or
ret
jne
sbb
jmp
idivb
fucom
xlat
out
adc
popw
mov
xlat
xchg
mov
ss
fisttpll
loop
nop
push
lds
mov
inc
xchg
sbb
inc
imul
pop
dec
cmp
dec
lods
ret
mov
cld
cmp
movsb
ss
inc
lods
sub
out
push
int
or
iret
outsb
lret
test
call
push
es
lock
bound
jb
rcrb
sub
testl
adc
mov
mov
inc
stc
adc
mov
arpl
and
mov
lock
push
ret
sub
fbld
pop
aam
xchg
idivl
and
mov
std
mov
mov
add
outsb
pop
and
lods
bound
sahf
pop
or
movsb
shr
cld
mov
lahf
jae
les
jo
lret
cmpsb
pushf
push
sub
adc
test
or
test
mov
mov
call
js
or
push
jl
lods
bound
ficoms
lret
mov
push
les
adc
out
mov
in
cmp
cmp
sbb
jl
mov
insl
jecxz
push
aas
enter
jl
out
dec
scas
sub
add
inc
in
orl
pop
daa
xor
aad
adc
stc
xor
stos
ret
int3
outsb
push
mov
jno
pop
std
push
inc
push
jno
mov
jg
sub
inc
pushf
lret
inc
mov
sbb
or
rorb
pop
data16
dec
sbb
xor
push
test
mov
shlb
jmp
push
xchg
jne
mov
dec
and
inc
cmpsb
mov
jle
pop
lods
jmp
loopne
insl
xchg
cwtl
sub
dec
inc
sub
push
xor
cmc
std
mov
andl
fisttpl
inc
mov
fcmovnbe
push
sti
pushf
idivl
mov
pop
test
inc
jbe
push
out
pop
cmp
fidivrl
xchg
sub
or
sarl
pop
pop
pop
adc
divb
insl
jns
mov
jnp
sub
dec
mov
cmp
push
lods
outsb
pop
ret
or
frstor
dec
pop
int3
pop
bound
out
push
add
xchg
test
cmp
and
insl
scas
movsl
lds
sarb
addb
dec
adc
lock
mov
add
xchg
ret
and
ja
xchg
call
jl
sbb
sub
sub
jle
mov
pop
movsb
leave
cmp
mov
iret
sbb
jnp
jmp
jb
jp
in
sahf
fidivrl
sbb
clc
sub
sbb
adc
push
pop
sbb
xchg
xchg
cltd
bnd
insl
nop
mov
hlt
adc
gs
push
ret
shll
out
cmp
into
and
pop
stos
std
lea
sub
shlb
pop
hlt
mov
loop
popf
shll
aad
shr
pop
xchg
xor
pop
inc
mov
sahf
mov
push
fnstenv
jne
mov
push
lahf
scas
or
nop
lea
aaa
cmp
lea
decb
push
pop
cs
sbb
inc
push
or
icebp
and
push
jno
repnz
sub
inc
sbb
dec
dec
in
stc
fnstcw
jle
cmp
in
xchg
push
repnz
enter
je
out
jbe
pop
cmp
pop
test
xchg
mov
loopne
add
out
mov
cs
adcl
xchg
fildl
into
xchg
mov
mov
outsb
lds
sub
xor
add
fsubp
and
sbb
lods
pop
adc
ds
or
xchg
mov
jp
rclb
lahf
out
mov
mov
data16
push
or
xor
add
adc
dec
jg
and
add
cltd
push
cwtl
mov
sub
sbb
adc
stos
aaa
fistps
xchg
xchg
mov
leave
popa
stos
popf
in
jno
stos
push
sbbl
cs
les
pop
ljmp
bound
sub
dec
pusha
cmp
daa
inc
test
sub
icebp
pop
orl
xor
cwtl
outsl
les
leave
or
pop
sahf
pop
dec
aam
es
mov
leave
incb
cmp
xchg
cs
inc
adc
test
ljmp
xor
sub
fistps
mov
push
imul
aad
jge
mov
sbb
pop
mov
xchg
xchg
adc
push
in
imul
popa
add
pop
xchg
add
xor
lret
pop
xchg
out
sbb
and
jne,pn
ret
in
fcomi
pop
pusha
xchg
sub
add
add
inc
mov
jnp
sbb
lea
add
mov
ret
daa
es
mulb
adcb
xor
cmpsl
cld
outsw
rcrb
fidivs
or
mov
insb
clc
ss
mov
pop
jmp
es
stos
xor
xchg
jno
shrl
jge
lret
dec
pop
mov
dec
addl
iret
add
arpl
fcompl
fs
int3
mov
adc
mov
lock
lds
xchg
outsb
stc
and
rcr
hlt
mov
loopne
inc
cmp
enter
jg
mov
cmp
or
jns
jmp
lea
bound
test
mov
imul
jb
std
cmp
pop
loopne
inc
pop
mov
aas
jbe
add
mov
xlat
and
ljmp
andb
ja
xchg
sti
push
mov
roll
dec
popf
sarl
xchg
and
sbb
mov
sub
push
test
pop
aam
cmp
xchg
pop
jnp
hlt
jl
negl
sub
cmp
jae
push
mov
push
mov
int
dec
push
lds
jmp
iret
fwait
and
rcrl
xchg
repnz
mov
sbb
pop
stos
test
out
mov
shl
dec
imul
stc
jg
cmp
pop
mov
jmp
cmp
dec
out
stc
jg
js
into
loop
sub
lock
in
std
cmp
dec
ret
hlt
inc
shll
ficomps
mov
and
xchg
xlat
test
mov
add
icebp
xor
pop
inc
mov
movsl
ficomps
clc
xor
imul
xchg
ficoml
jns
fcomi
mov
cld
popa
mov
xchg
or
mov
insl
pop
outsb
xchg
xor
push
pop
mov
stos
sub
cmp
and
fst
call
adc
in
and
mov
mov
cmpsl
mov
pop
push
jmp
adc
fcmovne
aas
les
sbb
popf
pusha
stos
out
mov
fldt
add
mov
ret
push
add
jbe
xor
xor
cmp
dec
sbb
nop
sub
pop
push
pushf
cmp
jge
add
or
push
dec
mov
jbe
push
inc
mov
push
dec
jns
adc
popa
int
mov
jno
dec
scas
cltd
sarb
sub
repnz
mov
sub
in
fstpl
das
movsb
pandn
inc
out
je
mov
popf
jae
sub
push
adc
aad
dec
ret
mov
sti
lods
std
or
rclb
arpl
add
pop
push
jo
inc
lods
mov
jg
les
jmp
stos
scas
mov
cmp
sub
jge
call
sub
call
roll
loop
mov
mov
push
mov
iret
cmp
aam
in
jg
inc
sbb
scas
pushl
mov
fwait
dec
xchg
mov
fistps
mov
or
fs
and
mov
push
fmuls
adc
push
arpl
jb
fs
cmp
fsubrs
xor
sarb
fcom
gs
loope
xor
adc
jbe
sar
aam
xchg
sub
pusha
sbb
mov
dec
mov
adc
mov
loopne
cli
or
jae
inc
mov
add
sbb
into
ret
inc
shl
push
add
mov
lds
or
repnz
shl
sbb
mov
pop
dec
mov
mov
jg
sub
outsl
jle
orl
in
es
scas
insl
ret
repz
decl
cmp
push
xor
sub
lcall
sub
in
push
xchg
pop
xor
xchg
in
jl
loopne
stos
fwait
cmc
clc
jmp
xor
movsb
sbb
pop
ja
in
mov
mov
lock
ds
mov
and
and
faddl
mov
mov
jns
out
xchg
out
stc
popf
add
adc
push
jae
fistpl
sbb
inc
sub
lea
repnz
movsl
mov
add
mov
add
adc
shll
leave
adc
sub
clc
jo
push
test
jl
sbb
cmpsb
lods
jg
sbb
inc
out
or
jns
jg
push
pop
jno
sbb
arpl
xchg
mov
inc
lods
jne
cld
dec
out
sub
ficoml
imul
jecxz
orb
fisttpll
jno
int3
ja
out
outsb
cmpsl
cltd
jns
mov
imul
mov
cld
or
test
bound
sub
lret
jl
xor
jmp
in
call
ljmp
insb
lea
push
outsb
inc
add
nop
push
add
daa
scas
mov
pop
outsl
xchg
cmp
pop
ret
xchg
jne
and
ret
pop
push
cltd
enter
js
addl
es
sahf
dec
mov
jge
xchg
sub
sbb
mov
je
out
or
inc
xchg
ljmp
jo
dec
fistpl
insb
fwait
ljmp
sbb
aam
xchg
int3
inc
les
adc
bound
mov
add
enter
pusha
imul
test
icebp
mov
adc
or
fcompl
push
jg
ljmp
movsb
clc
xchg
mov
das
orb
jae
mov
adc
sahf
in
and
loop
cmp
or
leave
or
imul
popf
hlt
fmull
addr16
cmp
pop
pop
xchg
in
pop
adc
hlt
repnz
js
je
idiv
mov
je
loop
xorb
fwait
jecxz
imul
xor
cmp
adc
adc
add
aad
sbb
in
adc
adc
in
call
in
repz
jle
mov
cmp
das
inc
in
out
mov
sbb
mov
push
inc
sti
mov
mov
hlt
adc
js
jecxz
testl
adc
and
mov
dec
xor
add
scas
xchg
dec
jnp,pt
mov
enter
idivl
fmuls
pop
shrb
pushf
outsb
xor
int
jbe
mov
add
jle
std
inc
or
or
inc
data16
lock
loopne
int3
cld
fs
push
int
into
jo
xlat
stos
mov
aaa
mov
inc
mov
leave
xchg
sti
inc
jo
js
int3
nop
cld
adc
imul
jecxz
xchg
xchg
sub
ds
dec
mov
loope
push
adc
mov
daa
sarb
push
cmc
add
cmc
xor
cmpsl
xchg
shrb
push
cli
xor
jecxz
sub
popf
jle
lods
jno
or
inc
pop
mov
es
xchg
push
insl
pop
addr16
sub
dec
adc
push
pushf
cmpsl
mov
mov
xor
ss
xor
jae
xchg
xchg
test
ret
mov
out
sub
sbbb
xchg
adc
cmp
mov
in
xchg
mov
xor
xchg
jnp
scas
cltd
cmpsb
jmp
xor
shrb
jno
add
mov
adc
ficoml
jb
adc
cli
jl
inc
je
scas
and
fwait
sub
lods
out
jg
xor
or
insl
pop
hlt
or
mov
inc
mov
pop
sbb
pop
push
inc
xor
lods
push
mov
fs
cmc
insb
das
push
mov
movsl
sbb
push
lcall
shll
and
xchg
insl
and
stc
into
push
jle
mov
mov
mov
jae
xchg
push
push
cltd
mov
mull
jecxz
jl
mov
nop
fs
xlat
push
int
fidivs
jg
cmp
js
xor
xchg
fsubs
add
mov
jg
scas
nop
int3
lock
ud0
mov
lock
js
addr16
mov
lcall
cmp
sbb
xchg
and
push
mov
in
xchg
add
out
sti
inc
sbb
lret
ret
xchg
jmp
dec
divb
gs
test
sbb
jl
and
js
sahf
mov
ljmp
push
pop
loopne
add
sbbb
add
cmp
insb
pusha
dec
mov
inc
repz
mov
lock
stos
ljmp
test
fldl
movb
push
mov
subb
cmpsb
mov
pop
xchg
mov
dec
cmp
ljmp
pop
out
icebp
fcomp
jmp
pop
iret
add
adc
mov
jns
xchg
subl
add
imul
xor
pop
xor
or
adc
cmp
mov
xor
inc
cmc
call
mov
cli
mov
mov
push
fdivrl
lret
mov
mov
cmc
mov
pop
jle
push
stos
data16
popa
ret
mov
inc
es
mov
inc
mov
cmpb
add
rorl
dec
lock
xchg
in
mov
and
faddp
mov
aam
add
inc
cmp
sbb
lds
sub
movsb
push
mov
hlt
fadds
lds
and
shlb
out
dec
cmp
and
out
pop
int
ds
xchg
adc
test
sahf
mov
jbe
or
cltd
inc
pop
push
push
jb
ljmp
lret
or
insb
xor
je
cltd
pop
xchg
adc
in
adc
push
loopne
jno
out
xor
gs
and
in
pop
daa
inc
int3
mov
pop
dec
std
out
push
fsubs
fwait
xor
pop
mov
sbbl
jnp
cmpsl
jmp
out
jl
xchg
loop
lret
mov
mov
test
xor
mov
push
jl
out
mov
sbb
mov
xor
icebp
nop
sbb
xor
xor
push
ds
push
mov
std
imul
out
mov
jnp
cmc
sub
jb
add
jnp
fwait
pop
loopne,pn
jg
ljmp
enter
mov
xchg
out
mov
sti
mov
add
xchg
inc
sub
hlt
lods
cmp
cmc
inc
test
mov
negb
nop
lock
out
pop
popf
iret
cmc
mov
icebp
push
insb
inc
iret
push
aaa
mov
mov
outsb
jl
cmc
xor
mov
dec
lcall
add
mov
aam
fs
enter
shlb
cs
inc
pop
and
pusha
insb
lahf
cli
cmp
cmp
xor
insb
sahf
cld
push
xor
and
dec
leave
push
int
sub
add
or
adc
aaa
imul
mov
jecxz
sahf
xchg
call
les
imul
cmpsb
scas
jb
jno
cmp
ret
jnp
test
and
aas
add
dec
adc
mov
pop
out
jnp
scas
or
imul
jo
jecxz
add
outsb
push
and
flds
inc
mov
cmpsw
push
sti
subb
sahf
xchg
cs
shld
adc
scas
mov
mov
mov
fsubrs
aas
jp
fwait
push
push
xor
sub
and
mov
sbb
push
xor
mov
cltd
pop
xor
inc
incl
ficoml
sbb
xchg
cmpsb
jnp
hlt
and
mov
adc
push
movsb
mov
int3
mov
push
test
xor
lea
mov
mov
add
add
mov
ficomps
jne
push
insb
fsts
out
jge
and
vmovupd
mov
add
int3
les
repz
xor
les
xor
std
jmp
in
dec
pop
dec
dec
movsl
add
es
and
inc
jge
inc
cmp
add
loopne
xchg
arpl
push
cli
xchg
and
mov
je
pop
jae
pop
loop
les
mov
lret
push
add
and
loope
rcrb
xor
adc
inc
inc
mov
jge
les
iret
jnp
js
pop
jno
push
fnstcw
jecxz
push
dec
pushf
xor
ret
rolb
cmpsb
add
jmp
xchg
mov
add
xor
mov
fwait
lcall
xor
cwtl
or
add
mov
xor
pushf
jno
push
xchg
in
in
inc
xor
xchg
shl
pop
mov
xchg
xor
insl
xor
xchg
in
icebp
mov
ja
xchg
mov
push
ficoml
test
mov
rcr
roll
xchg
dec
rorl
pushf
daa
jecxz
push
lods
lcall
in
jo
icebp
scas
xlat
inc
cmp
iret
test
adc
add
cld
dec
xchg
mov
test
mov
push
cmp
add
and
sbb
cs
shll
push
jp
dec
adc
jmp
push
sti
add
adc
mov
testl
or
adc
out
insb
push
jg
mov
xchg
mov
adc
dec
add
inc
lds
movsb
scas
pusha
call
add
xchg
test
mov
xchg
pop
jge
and
pop
push
jmp
rolb
data16
sbb
loopne
hlt
push
sub
inc
or
inc
inc
inc
and
aaa
fcoms
loopne
mov
movsl
nop
dec
repnz
out
loopne
or
cmp
sbb
and
loope
push
movl
push
mov
int3
add
cli
cmp
pop
jns
loop
jno
into
movsb
aam
arpl
fstps
daa
cmp
or
pop
sbb
and
sbbl
jmp
add
popa
and
mov
sbb
sub
add
repz
xchg
jp
pushf
pop
jp
in
cmpsl
push
out
sub
scas
movsb
bound
in
mov
mov
mov
and
imul
mov
shlb
dec
push
pop
jbe
mov
pop
insl
xor
and
icebp
and
repnz
xchg
xchg
add
push
xchg
call
xchg
sbb
sahf
in
addl
push
sbb
push
lcall
adc
mov
mov
xor
sbb
imul
sub
sub
mov
das
push
stc
mov
ret
sbb
cli
shrb
stos
cmc
adcl
orb
popf
sub
adc
popf
add
imul
adc
fs
jmp
std
ret
and
loop
xchg
arpl
imul
pop
or
out
sarl
dec
mov
aas
rorb
xlat
or
push
pop
inc
or
sti
xchg
ret
ljmp
xchg
adcl
icebp
mov
add
xor
sub
and
out
in
lds
and
aas
mov
inc
inc
cmpb
mov
fiaddl
outsl
lock
add
cmp
jo
add
or
adc
loope
pop
roll
pushf
push
and
mov
jge
dec
in
cmp
pop
adc
or
ret
cmp
les
fs
rolb
ja
cmpl
sub
mov
fcmovne
and
add
add
mov
mov
aad
mov
scas
testl
push
aas
jl
mov
add
and
je
sti
leave
push
hlt
es
mov
out
ja
ljmp
add
cld
je
arpl
js
out
jmp
ret
mov
push
mov
and
add
pop
in
mov
inc
inc
fistl
adc
rclb
or
and
push
lds
xchg
mov
or
insb
repz
adc
ret
les
addr16
out
add
adc
out
fwait
mov
popf
or
sbb
pop
mov
jge
sub
lock
cmp
out
fldl2t
repnz
loopne
out
mov
dec
jno
adc
stos
pop
push
pusha
push
out
push
aaa
xor
sti
jno
stos
nop
int3
fistpll
movsl
fldcw
push
andb
sbbb
xchg
or
cli
mov
push
repz
add
dec
mov
icebp
jo
mov
inc
and
test
outsl
enter
xchg
jb
outsb
scas
popa
pop
aas
and
repnz
lea
mov
mov
pop
divb
popl
mov
out
xlat
cmp
sbb
movl
adc
loop
cld
sbb
daa
testb
sbb
lods
movsb
into
rclb
mov
frstor
cs
lods
pop
lea
push
inc
jns
push
ljmp
test
pop
mov
push
movsb
xchg
loop
movsb
cwtl
mov
fcoms
add
mov
cld
mov
scas
fildl
pop
adc
jp
stos
enter
mov
push
xor
sub
adc
pop
je,pn
sbb
push
dec
mov
add
dec
stos
insl
ja
jmp
addr16
xor
pop
int3
cmpl
cld
scas
into
add
in
outsl
dec
mov
cli
lock
ret
lsl
xor
std
and
push
push
call
int3
mov
and
inc
popf
test
mov
insl
sti
xor
and
push
iret
mov
syscall
jnp
cmp
in
add
pop
xlat
push
and
filds
cmp
push
mov
scas
out
in
adc
pop
pushf
pop
push
lret
xor
std
and
mov
inc
in
sub
les
les
stos
sub
mov
stc
movntps
or
push
xlat
push
or
or
push
int
cmp
jge
jo
inc
loopne
push
outsl
jge
jmp
mov
rcr
aas
sbbl
sbb
pop
leave
adc
rcll
inc
arpl
pop
jl
xchg
sub
sbbb
mov
push
mov
sub
jle
loop
in
scas
aad
das
inc
outsl
cs
bound
popl
xchg
xchg
dec
scas
dec
xchg
push
mov
jg
js
lahf
adc
test
xor
ja
cmp
test
outsl
jo
mov
or
mov
dec
mov
inc
mov
aas
shll
imulb
and
cmp
add
mov
sub
mov
dec
cs
test
popf
je
in
arpl
xchg
stos
jge,pn
fcmovu
and
mov
inc
push
sbb
xlat
jae
xor
cltd
xor
jp
dec
movsb
fcomip
mov
ds
mov
cmpsl
out
pop
xchg
adc
loopne
jae
add
sahf
data16
insl
pop
testl
je
or
addr16
or
cld
and
daa
add
push
mov
ja
in
xor
push
stc
jo
or
push
mov
xchg
inc
ss
cmp
jge
outsl
push
lret
and
out
mov
add
pop
xorl
outsb
iret
push
dec
call
xor
mov
fs
mov
cld
addb
inc
sbb
in
ja
jne
xorl
loopne
lods
fnsave
jb
or
outsl
aas
add
mov
addr16
in
push
testl
jo
adc
push
xor
mov
test
xrelease
aad
mov
jmp
cmp
cmp
mov
mov
cltd
xor
jns
jo
std
shrl
push
les
popf
std
jbe
mov
out
int
lret
iret
std
sub
inc
sub
pop
outsl
cmp
cmpsb
ja
test
dec
lahf
jmp
std
push
mov
xchg
mov
int3
pusha
add
dec
mov
scas
call
xorl
das
xchg
stc
fdivs
pushf
sbb
fmul
incl
inc
test
pop
outsb
movsb
inc
cs
mov
enter
scas
lahf
imul
and
into
outsb
xchg
sub
nop
xchg
sub
mov
cmp
push
cltd
loopne
daa
js
cmp
cmpsb
movsb
mov
or
rolb
add
push
push
inc
mov
enter
mov
xor
push
or
out
cmp
cld
push
aaa
mov
cmp
movsb
pop
sbb
jecxz
cltd
or
adc
scas
cmpsl
test
dec
push
mov
xlat
mov
enter
scas
pop
aaa
gs
inc
loopne
sub
hlt
sbb
mov
shlb
das
clc
add
dec
sahf
jge
fadd
cli
addb
push
pop
psubd
or
sbb
mov
out
aas
jo
fnstcw
cmp
xlat
jge
cmp
jae
shlb
or
dec
rcll
loopne
push
cmp
stos
adcb
xchg
dec
pop
xor
push
pslld
shr
inc
mov
jmp
push
jbe
aas
push
xor
adc
dec
push
dec
jl
jae
xor
ror
jns
or
jg
repz
aaa
sbb
inc
mov
aas
jp
in
pop
mov
push
push
adc
and
cmpsb
popa
mov
xorl
and
mov
scas
mov
out
data16
pop
and
bound
mov
insl
xchg
loope
adc
rorb
cmp
fcoml
jb
je
sub
add
cld
stos
xor
xor
mov
imul
cmp
scas
dec
xchg
pop
inc
mov
and
dec
fstl
jnp
out
popa
push
test
cmp
outsl
popf
testl
js
out
loopne
mov
test
add
xchg
jge
lahf
xor
dec
shlb
push
add
mov
jmp
mov
pop
xor
or
orb
clc
mov
mov
pop
cwtl
or
cmp
in
inc
mov
inc
or
sbb
add
cltd
sbb
jne
push
cmc
pop
jle
dec
jnp
pop
pushf
enter
or
orl
in
push
sub
cmp
int
jnp
repz
repz
inc
test
and
mov
dec
and
jp
inc
ret
adc
or
add
and
mov
insb
inc
push
fists
imull
mov
cmc
stos
sbb
mov
push
dec
pop
cmp
ja
xor
mov
lcall
pop
xchg
and
push
inc
inc
mov
jnp
aam
push
mov
rcll
gs
dec
jno
mov
xor
cmp
xchg
movsb
scas
pop
adc
mov
push
pop
jge
addr16
mov
pop
hlt
test
pop
lods
and
mov
cmp
imul
jecxz
insl
xchg
insl
in
in
dec
xchg
pop
es
mov
aam
xchg
and
dec
dec
cltd
leave
test
fnstsw
push
pop
fsubs
push
test
loop
or
sarb
jbe
xor
lods
mov
ret
mov
push
cmp
inc
push
aad
dec
or
mov
xor
pusha
jns
dec
frstor
xor
and
nop
out
jo
and
inc
pop
fcoml
push
lahf
xchg
mov
mov
shrl
ret
hlt
mov
jge
aas
aam
cmp
in
es
mov
dec
hlt
add
inc
inc
orb
aad
dec
bound
add
cltd
mov
jp
mov
leave
pop
or
mov
loope
gs
loop
pusha
in
loopne
sbb
jne
add
adc
push
push
pop
popa
xchg
push
test
test
cld
jae
or
jecxz
aad
mov
jge
push
lcall
ss
and
sub
mov
sar
fisubl
cmp
sarb
insb
and
imul
sbb
jns
fwait
jno
cmc
add
lock
pushf
xorb
cmp
cmp
mov
push
iret
cmpsb
leave
jae
ja
pop
mov
dec
insl
push
inc
adc
mov
mov
scas
xchg
insb
jne
call
popa
aad
pop
cltd
push
daa
ja
addb
adc
sti
mov
cmpsl
inc
daa
in
cmp
sub
lret
sbb
cmp
sbb
fsts
cmp
mov
inc
push
pop
aam
mov
icebp
cmp
cwtl
sub
inc
rolb
lock
inc
icebp
stos
add
and
or
ds
sar
rorl
mov
inc
dec
lret
xchg
sub
idivl
scas
fdivrl
les
pop
insb
sahf
or
jp
lods
jb
jecxz
add
lret
fs
pop
adc
inc
test
push
shll
cmp
cmpsb
push
sahf
jmp
or
ret
jns
repnz
mov
enter
stos
data16
nop
push
rorb
popl
sbb
bound
cltd
sbb
or
add
push
xchg
stos
scas
in
movsb
mov
ds
adc
pop
xchg
ret
xor
lods
dec
mov
setnp
imul
in
imul
outsl
pop
out
sub
cltd
das
andb
std
xlat
test
mov
jne
push
fdivrl
cwtl
mov
jl
pop
sbb
inc
scas
enter
xchg
jnp
test
push
jb
pushf
jl
push
cmp
and
push
shlb
scas
enter
jg
outsl
lahf
push
sbb
sbbb
lea
test
pushf
flds
add
pop
aad
pushf
rolb
inc
or
aas
gs
mov
xor
xchg
sub
ficomps
jns
test
xchg
push
pop
insl
mov
stc
movsb
mov
jg
outsb
xchg
mov
add
loope
dec
ret
inc
pop
pusha
jge
fmuls
push
sti
rclb
sub
push
push
add
popa
jns
ud0
xchg
aaa
adc
xchg
mov
adc
insb
xchg
inc
inc
nop
popf
sbb
clc
mov
movsl
inc
in
mov
mov
jmp
inc
adc
and
loop
xor
into
sarl
pop
xchg
inc
mov
rolb
imul
mov
push
mov
mov
mov
clc
mov
lods
outsl
hlt
or
pop
push
nop
jge
mov
fistl
cmpsw
push
in
push
push
pop
sub
push
stos
repnz
pop
js
mov
in
xchg
mov
sbb
call
xor
repnz
pusha
ret
mov
mov
mov
in
out
mov
sub
movsl
jecxz
adc
lea
fwait
lahf
and
rcll
das
mov
movsb
sti
lods
or
push
ljmp
mov
add
repnz
jle
pop
gs
int3
mov
push
sub
scas
aam
ret
arpl
fldl
cmp
daa
mov
mov
pop
inc
daa
push
adc
mov
inc
mov
rorl
fcmovnu
pop
fdivrl
cmp
jb
icebp
ss
scas
fstl
scas
orb
fmuls
jge
scas
and
adc
outsb
xchg
hlt
das
in
adc
push
lds
pop
in
xchg
xchg
push
push
cwtl
pop
push
cmpsb
adc
mov
out
adc
sbb
inc
or
adc
inc
push
and
cmp
xor
andl
jo
shr
test
les
mov
test
xor
fs
pusha
pushf
dec
sub
loope
dec
stos
imul
outsw
popa
daa
out
ss
repz
lcall
jb
jb
sbb
lods
aas
dec
jge
test
mov
dec
dec
les
dec
push
xor
inc
lcall
shlb
push
jb
sbb
js
inc
jne
movsb
dec
shlb
call
push
sbb
cmp
ja
sbb
mov
jle
cmp
mov
mov
fwait
data16
daa
xorb
daa
mov
or
adc
aaa
or
scas
imul
pminsw
mov
or
addr16
jns
cmpsb
lahf
sbbb
mov
sbb
jle
fdiv
mov
repz
rcrl
ficoms
je
divl
addr16
test
cmp
fcoml
roll
mov
les
pop
xchg
sar
fimull
sbb
xchg
mov
imul
shl
mov
aas
push
inc
inc
mov
scas
pop
cld
push
add
jo
rorl
pop
jg
jg
xchg
fsubrs
xchg
lea
ss
cmp
push
cmpsl
cmpxchg
mov
je
outsb
push
jb
test
jae
sub
or
out
imul
mov
push
jmp
or
arpl
pop
pop
mov
adc
push
in
xchg
sbb
test
add
out
and
push
add
xchg
jmp
js
inc
pushf
shll
sbb
jle
mov
bound
pop
cwtl
fdivr
jecxz
loopne
pop
pusha
enter
push
push
mov
out
xchg
iret
xor
insl
and
loop
adc
inc
sbb
test
mov
ljmp
out
dec
sbbl
cmp
xor
jne
push
in
mov
pop
clc
pushf
shl
push
iret
jo
mov
cli
insl
hlt
push
inc
ljmp
clc
xor
xlat
icebp
mov
incl
inc
dec
sbb
aas
sahf
xchg
and
cmp
in
push
dec
pop
repz
inc
push
xchg
jmp
xor
push
push
pop
ds
jb
sub
sub
mov
int3
nop
sbb
dec
jno
push
cwtl
add
or
and
or
es
mov
xor
xchg
inc
mov
push
mov
stc
outsl
ret
cmc
scas
and
push
popl
push
aas
lods
mov
hlt
test
jle
push
lret
jp
ret
cld
rclb
lods
cmp
pop
mov
xchg
mov
inc
xorb
jle
dec
repz
mov
push
out
mov
cmp
sti
sti
sbb
scas
in
xchg
shrl
push
cwtl
mov
and
or
in
test
sub
mov
dec
pop
lods
cs
lret
add
or
repnz
sub
rcr
mov
clc
fnsave
add
cld
out
and
or
add
xchg
pop
inc
sub
and
outsl
faddl
add
xor
jle
or
rcr
leave
mov
bound
mov
sub
aam
adc
push
and
negb
push
loopne
cli
xor
addr16
daa
push
xor
data16
das
jmp
push
inc
pop
pop
xchg
mov
pop
movsb
lea
mov
in
mov
push
enter
repnz
jl
mov
divb
mov
inc
sub
ret
xor
mov
mov
aam
notb
and
pop
aam
mov
out
xchg
fwait
shlb
mov
daa
call
xchg
push
shrd
fistpl
jae
sub
sbb
mov
fdivrp
test
hlt
mov
insb
adc
insl
add
rorl
daa
and
jl
loope
mov
stc
pop
xor
sbb
push
es
push
mov
sub
sub
test
decb
mov
out
mov
pop
sub
dec
cwtl
mov
mov
ds
cmpsl
xchg
data16
dec
fcmovnbe
add
std
xor
mov
or
mov
in
insl
gs
lahf
or
rorb
xchg
jmp
in
hlt
and
adc
jle
sbb
inc
xor
or
and
or
fisttpll
aad
addr16
mov
add
popf
rolb
add
inc
into
cmpsl
xor
jne
clc
fdivrl
insb
inc
jno
pop
mov
orb
lods
int
imulb
icebp
sub
call
mov
sub
arpl
mov
fwait
sarb
jb
rcrb
in
sbb
mov
sub
daa
dec
mov
mov
out
sub
inc
loope
pop
in
inc
fsubr
dec
lds
push
jmp
ljmp
ret
test
sti
add
fst
xor
sbb
dec
adc
mov
mov
push
jle
xchg
out
je
add
add
pop
inc
cmp
and
outsb
mov
cltd
test
dec
sbb
sarl
lret
out
sbb
dec
nop
sbbb
jb
sub
jp
sbb
and
pop
or
ja
xchg
je
es
and
jnp
mov
mov
nop
je
test
pusha
pop
xor
inc
out
xchg
inc
stc
jge
inc
sub
add
rorb
mov
test
jb
int3
pop
cld
mov
mov
scas
and
je
stos
imul
adc
xchg
in
popf
add
call
cmp
xor
pop
ret
leave
cmp
cmp
ud0
lods
in
stos
lcall
movsb
add
jae
ljmp
xor
ss
jbe
mov
mov
push
mov
js
fstl
dec
mov
or
xchg
dec
fld1
fwait
cmp
lcall
sub
cmpsl
std
push
adc
xor
test
pop
dec
ss
add
ficomps
imul
mov
and
addr16
adc
popa
fcomp
mov
sbb
dec
movsb
jno
and
out
test
add
push
and
ds
push
jae
xlat
xor
pop
xor
jae
inc
call
add
push
mov
or
adc
imulw
outsb
inc
jbe
stos
and
out
xchg
mov
mov
shlb
das
movsl
adc
inc
mov
mov
inc
addr16
jg
hlt
int
je
sbb
sub
mov
mov
shlb
out
int
ja
psubsw
dec
call
xor
xor
pop
jge
movsl
popf
jle
add
xor
mov
lods
xchg
cmp
rcrl
cmp
push
push
add
es
jno
sub
stc
add
jb
dec
mov
sbb
add
clc
in
adc
dec
gs
lea
cwtl
adc
xor
jmp
dec
or
and
int3
into
in
daa
mov
jno
sbb
adc
pop
add
jle
popa
sbb
sti
pop
js
push
push
cmc
in
jg
out
lods
fidivrl
push
stc
push
jg
fimuls
cmp
or
sub
jnp
and
das
mov
in
push
in
rcrl
adc
ret
mov
fwait
add
js
pop
dec
js
xor
leave
andl
sub
hlt
jnp
mov
ss
mov
mulb
mov
jne
addl
rcrl
mov
cmc
je
cmp
xor
roll
pop
push
mov
shll
jnp
and
iret
push
jg
dec
inc
scas
and
inc
cmc
test
insb
xchg
movsb
mov
out
adc
dec
cmp
lret
xor
test
stos
and
mov
mov
loop
ret
adc
subb
pop
daa
mov
xor
ror
ss
sub
xchg
movsb
xchg
out
and
scas
or
or
cmp
cmp
aad
cmp
push
outsl
daa
pop
jae
test
mov
jno
outsl
xchg
out
shlb
addr16
lods
xchg
test
sub
mov
je
dec
xor
sbb
and
mov
add
pop
jmp
out
mov
push
cmp
jb
jne
and
aam
xchg
iret
lea
push
cmc
enter
push
sub
or
inc
mov
pop
jbe
shll
mov
cmc
inc
dec
aad
add
xchg
add
mov
mov
inc
xlat
mov
xor
bound
inc
iret
jbe
dec
jno
in
out
gs
xchg
sarl
fwait
jne
test
insl
xor
push
pop
dec
popf
sbb
jbe
xor
inc
fwait
decb
sub
xlat
fisttps
arpl
jb
pop
push
cmp
or
repnz
mov
cmp
xor
jecxz
mov
imul
loopne
jb
dec
fistps
xor
sbb
mov
loope
inc
pop
inc
stc
in
lea
es
sub
push
mov
jns
mov
cmp
mov
scas
aam
test
dec
xchg
mov
fbstp
cltd
adc
cs
in
jne
rep
push
mov
or
jge
inc
repnz
test
lahf
cmc
fmull
jbe
or
sarb
sahf
pop
lret
mov
push
rcr
mov
test
mov
push
aad
adc
sti
pusha
je
mov
mov
mov
in
pop
mov
xchg
cmpsl
cltd
cli
sbb
imul
lds
mov
xchg
pop
jno
nop
push
xlat
xor
cmp
pop
inc
mov
sub
jno
int3
into
sub
mov
mov
sub
cmp
call
or
std
xchg
fldcw
or
mov
jmp
sbb
mov
dec
out
jecxz
cli
sub
inc
std
js
cmp
pushl
aas
ds
subb
out
sub
test
inc
xchg
add
insl
cmp
mov
and
cmp
in
shr
xchg
pop
cs
mov
and
add
push
add
stc
and
add
rcpps
dec
xchg
dec
andb
popf
out
jbe
pop
xadd
mov
pop
mov
jb
cltd
and
sbb
mov
cmp
les
fldl
sub
push
mov
data16
pushf
mov
aad
push
xchg
adc
mov
mov
xchg
adc
es
jne
mov
pop
push
cmp
dec
cmpl
xchg
test
imul
lds
das
test
lret
xor
in
and
dec
xor
mov
sub
js
sti
jne
xchg
incb
adc
xchg
test
adc
stos
cwtl
fwait
xor
and
jecxz
xchg
mov
orl
out
out
ja
cmc
or
mov
lcall
lods
cwtl
dec
out
jno
push
or
stos
pop
add
dec
pop
popf
iret
rol
nop
xor
jmp
fwait
call
cmp
xchg
sub
jns
push
cmp
imul
sub
data16
sbb
shrl
insl
adc
std
mov
push
movsl
lds
repnz
nop
cmp
xor
fwait
loopne
nop
and
test
mov
push
orl
inc
shlb
and
icebp
insl
pop
or
cli
inc
cwtl
sbb
cmp
and
inc
pop
jecxz
faddl
or
xor
jns
lret
js
sub
in
aas
cmp
aad
xor
push
dec
cli
pushf
in
lods
jecxz
pop
xor
sbb
inc
stos
push
pop
sahf
add
test
jg
mov
cmpsl
jns
movsb
sbb
repnz
mov
mov
inc
loope
movsl
sub
sub
mov
inc
mov
jno
dec
outsl
push
sub
jo
and
xchg
pusha
mov
lods
dec
adc
call
mov
lahf
test
lds
jne
out
fs
les
test
push
stos
inc
leave
daa
stos
arpl
fisttpl
shrl
out
push
pop
add
outsl
addr16
inc
lahf
mov
fxch
fnstsw
rorb
cld
sub
xor
push
int
loop
aaa
clc
shrl
push
gs
gs
std
cmc
add
sbb
lcall
cld
xchg
jecxz
jmp
xor
jae
sbb
loopne
push
pop
shrb
mov
pop
jmp
dec
imull
sub
inc
inc
iret
lret
inc
es
xchg
or
xor
pop
adc
pop
in
xchg
insb
sarl
dec
aaa
int
xchg
mov
or
inc
aaa
jnp
out
lea
sbb
xor
cmp
lcall
sbb
cmc
mov
xchg
nop
ret
sub
cli
jmp
and
push
call
fdivs
ret
lret
or
mov
mov
ja
inc
mov
mov
insl
xlat
lret
addr16
jns
push
fidivrl
lret
pop
add
pop
adc
aad
push
jne
shlb
cli
sbb
add
xchg
adc
push
aad
push
xor
idivl
xor
dec
jmp
mov
mov
cmp
hlt
xor
push
adc
rcll
out
jge
test
dec
bound
push
cmp
xchg
in
rorl
and
xor
arpl
mov
in
jg
xcrypt-cfb
cmpsl
out
stos
jbe
xchg
jg
adcb
xor
jbe
and
les
jnp
dec
push
xchg
lahf
cmp
push
adc
mov
popa
in
inc
inc
insl
xchg
fnstenv
push
pop
out
mov
out
sarl
popf
icebp
jp
pop
cltd
ds
es
mov
imul
or
out
inc
lcall
mov
mov
repnz
xchg
mov
cltd
cs
sti
stos
clc
sti
push
sub
pop
stos
or
stos
sbb
add
jmp
imul
xchg
xor
pop
cltd
dec
sbb
shll
adc
jb
je
pop
xor
jb
out
int3
dec
mov
push
js
es
or
add
addl
dec
leave
dec
sbb
cltd
sub
xlat
das
or
int3
jnp
push
cmp
mov
fcomps
out
dec
dec
imul
pop
ror
rcll
cmpsl
jp
movsb
or
jns
and
xchg
jle
mov
lods
mov
in
imul
fdivrl
int3
sbb
fildll
cmp
jmp
mov
sbb
mov
out
punpckhdq
mov
fidivrl
adc
cmp
mov
push
imul
rclb
mov
xchg
jle
loop
cmp
pop
push
popl
movsb
push
lds
lret
loopne
fdivs
movsl
ret
sarb
jnp
cmp
xlat
imul
sub
mov
rolb
mov
test
push
imul
imul
stos
xchg
sti
mov
xchg
pop
sub
xchg
das
outsl
inc
xchg
test
xor
rol
mov
fidivl
loopne
sub
lods
roll
shrb
stos
pop
pop
adc
mov
mov
lret
push
sbb
imul
inc
add
jmp
or
outsb
lock
js
mov
mov
xor
iret
mov
and
cmp
cltd
sti
fcompl
ret
stc
jne
jmp
push
or
pop
mov
scas
cmp
mov
loopne
jmp
sti
data16
mov
sbb
cmp
dec
pop
add
mov
arpl
dec
shlb
dec
das
in
repz
xchg
and
lods
push
pop
inc
mov
push
adc
add
adc
push
xchg
divb
adc
hlt
jle
xor
dec
mov
pop
hlt
ret
jecxz
lods
out
cmpsb
mov
xchg
adc
xor
stos
sbb
dec
clc
sub
push
sahf
fsub
ss
push
xchg
cld
or
out
aaa
and
aad
or
xor
sub
leave
iret
xor
push
inc
mov
clc
push
mov
fcomip
stos
das
ds
cli
add
jb
xchg
int
ret
xchg
fadd
mov
mov
shl
sbb
mov
addb
jae
sub
mov
xchg
xor
test
lods
dec
les
adc
shr
mov
pop
mov
sub
add
pushf
enter
cmp
fadds
rcrb
cwtl
mov
mov
cmpsb
jl
into
dec
loop
mov
insl
push
lret
mov
cmpsl
sub
cmpsb
or
cmp
push
sbb
sbb
jnp
xor
movl
mov
stos
xchg
or
outsb
cmpsl
push
imull
fcomps
jge
int3
add
sub
sbb
jmp
nop
pop
push
cmp
mov
lods
and
gs
jmp
jnp
adc
xchg
mov
mov
push
sbb
lret
out
repnz
sub
pushf
xor
sbb
nop
clc
notb
or
and
and
je
ret
cltd
rorb
out
mov
fsts
mov
iret
daa
push
jnp
setnp
jno
aad
push
push
call
mov
fbld
jl
imul
das
cltd
add
sarb
and
pusha
pop
and
dec
push
jge
mov
std
cs
ret
xchg
or
ficomps
scas
ds
ds
out
loope
xchg
fidivs
shll
or
inc
aad
ds
hlt
cmp
push
aad
movsb
push
out
mov
jge
xchg
xchg
roll
rorb
adc
cmpsb
ja
stos
addb
mov
call
sub
mov
movsbl
sbb
lret
jbe
pop
adc
insb
repz
gs
divb
push
mov
sub
fidivl
sarl
outsb
imul
fninit
add
sbb
dec
cmp
dec
das
scas
notb
into
and
or
movsl
and
icebp
fldt
or
outsb
xor
lret
testb
loop
inc
in
inc
mov
nop
pop
jg
sti
iret
les
in
and
mov
test
cld
adc
or
shlb
jne
dec
add
inc
pop
jo
ret
sub
pop
add
cld
cli
pop
or
test
mov
sahf
into
and
jns
pop
dec
scas
mov
out
inc
inc
add
push
gs
mov
or
cmp
adc
sub
push
mov
fwait
mov
push
sub
addr16
inc
test
mov
pop
add
sbb
adc
dec
gs
les
stos
aad
cmc
and
pop
sar
mov
mov
pop
std
push
inc
sub
lods
pop
movsl
pushf
cmpb
jp
fldenv
fs
push
or
xor
mov
fsubrs
xor
out
jg
lods
add
mov
lock
imul
dec
inc
push
lds
sbb
jg
mov
pop
lods
mov
xorl
mov
ljmp
shrl
loope
fsubrl
pop
sbb
push
bound
xchg
repz
lods
xorb
in
xchg
push
ja
pop
aas
cld
je
and
jg
pop
repnz
pop
mov
daa
out
xor
aas
js
ljmp
mov
jmp
imul
mov
sub
sbb
inc
cld
shlb
sbb
xchg
lcall
popw
dec
push
cwtl
xor
ficomps
stos
cmp
cwtl
rcrl
push
jno
sbb
push
fs
sar
loopne
ret
or
daa
pop
aam
out
std
dec
sbb
je
dec
ljmp
lahf
loopne
movsl
pop
push
fwait
stos
pop
mov
jbe
jg
jle
mov
sbb
fisubs
es
mov
jle
or
rcrb
or
jge
jle
arpl
sbb
xlat
adc
roll
dec
adc
xlat
push
xor
push
mov
mov
out
mov
xchg
dec
fcomip
push
sahf
pop
shll
shlb
cmp
inc
dec
xchg
cmp
jo
jle
or
sti
mov
test
xchg
add
sbb
fistps
xchg
iret
xchg
insl
incl
cltd
in
push
or
sbb
xor
mov
jle
mov
loopne
sbb
adc
and
xor
out
mov
sbb
je
es
jp
mov
xor
xchg
loopne
clc
fdivs
xchg
xor
pusha
loop
leave
movsl
mov
aam
fcmovu
dec
scas
xlat
ret
and
add
push
arpl
sbb
mov
or
push
ret
daa
sub
adc
sub
pop
jmp
cwtl
jbe
mov
cld
lahf
lret
mov
and
sub
outsb
push
js
pop
mov
popf
daa
sahf
scas
jno
and
clc
xchg
cmp
int
mov
sbb
ret
jecxz
mov
sub
mov
shrl
stos
xchg
mov
adc
xchg
fxch
mov
fwait
sahf
xchg
pop
hlt
jae
xchg
sbb
jo
daa
cli
cmp
inc
subl
insl
mov
push
and
and
les
cld
mov
sub
xchg
out
fbstp
es
lcall
sub
call
popl
shll
fistpl
inc
loopne
mov
sub
xlat
leave
jmp
sub
sbb
enter
inc
js
push
stos
cmp
sub
cmpsl
mov
xchg
inc
out
mov
jl
xlat
jp
das
sbb
and
cs
mov
and
sbb
loopne
mov
cmc
mov
inc
sub
outsl
mov
jmp
int
or
in
jl
ljmp
jg
xor
loopne
fisttpll
sub
gs
loope
jg
pop
mulps
cmp
mov
mov
out
pop
pop
lock
xor
xorl
sbb
push
dec
mov
sub
in
int
cmp
or
aas
cmp
mov
cmp
lahf
xor
xlat
mov
mov
ret
inc
repz
mov
outsl
or
sub
push
xor
jbe
mov
outsl
cmp
ret
shrl
push
xchg
pop
into
or
push
insb
xchg
dec
dec
js
pop
test
cwtl
pop
xor
jo
icebp
and
sub
push
mov
pop
loopne
test
add
incb
fnstsw
mov
nop
stc
lret
xor
jo
mov
cmp
push
mov
ret
and
inc
filds
cld
into
test
fsubrl
je
sti
xchg
fmul
cmp
xchg
fs
shlb
cmp
loope
test
or
stos
outsl
cwtl
jne
xorb
lcall
test
adc
loop
cltd
cmpsl
xchg
sub
aad
push
lock
jns
arpl
xor
mov
es
xor
inc
add
sbb
cmpsl
sub
or
push
lods
aam
or
fs
je
andl
mov
sbb
mov
movsl
loope
scas
push
mov
cli
pop
dec
cmp
cs
ja
push
and
push
xchg
mov
lahf
xchg
nop
loope
pusha
mov
and
daa
dec
lahf
mov
mov
sbb
filds
mov
aas
scas
hlt
negl
mov
call
mov
test
cmp
dec
inc
mov
jp
jge
stos
mov
or
jne
lret
rcll
xchg
sar
das
and
add
jno
dec
pop
xchg
cwtl
test
loope
clc
adc
cs
lea
imul
xlat
cmp
bound
sbb
pop
xor
or
popa
enter
lods
mov
and
push
or
or
mov
cltd
ljmp
pop
or
lds
mov
mov
arpl
push
sub
add
pop
cmpsl
mov
mov
sub
outsl
mov
cmpsb
ss
sahf
fistl
out
or
mov
jl
push
or
mov
je
in
push
cmp
fdivp
lcall
leave
xchg
fisubrs
enter
push
cs
sarl
sbb
data16
subl
sub
roll
fisttpll
rclb
cmp
cs
inc
fidivl
push
loop
lret
out
aas
aam
or
adc
imul
mov
dec
cwtl
shll
pop
sar
mov
test
ss
mov
cld
cltd
mov
aam
bound
lock
mov
xchg
inc
push
popf
and
push
pop
ret
nop
loopne
xor
adc
inc
pop
dec
outsl
cmpsl
or
sti
adc
outsl
jnp
test
stc
xchg
mov
aad
out
push
xor
loop
jns
cmp
pop
xchg
outsb
popf
outsb
lock
pop
shll
pop
xchg
cmp
fs
push
jecxz
mov
inc
adc
imul
cmpsb
xchg
mov
lcall
dec
push
or
daa
add
push
insb
and
sub
push
popf
inc
repz
mov
mov
lea
mov
adc
and
push
pop
clc
add
and
sbb
lock
and
cmp
dec
mov
and
leave
add
fcompl
test
xchg
out
dec
mov
or
mov
add
cmp
out
test
shlb
pop
jo
pop
stos
fcoml
mov
cmp
daa
lods
shr
or
add
movb
popl
dec
and
lods
fisubrl
gs
cld
rcll
iret
sti
lret
and
sarl
outsl
into
nop
jecxz
jle
loopne
pop
xor
aam
sahf
cmpsl
add
push
loop
cmp
orb
mov
sbb
xchg
test
insl
iret
sbb
sub
ficoml
fwait
dec
jg
mov
insb
pusha
push
inc
xchg
add
pandn
or
sbb
push
push
lods
ret
jbe
imul
stc
jle
mov
sub
notb
and
pop
xorb
sub
int3
jo
lods
xor
add
mov
mov
xchg
insb
dec
xchg
mov
mov
push
adc
test
popa
push
mov
iret
mov
arpl
push
insl
movsb
in
mov
out
inc
xchg
xchg
movsb
and
mov
rcll
ret
faddl
in
cwtl
popa
das
ljmp
xor
fwait
sub
jg
jecxz
mov
sub
mov
fnsetpm(287
mov
aas
cs
jge
cmpsl
movl
jne
and
gs
lahf
ljmp
xor
mov
xchg
inc
fwait
lds
mov
xor
mov
push
mov
shrl
dec
jbe
dec
insb
jg
lret
jne
rcrl
leave
jae
ret
test
sub
stos
out
mov
sti
jb
mov
inc
dec
rolb
fsubrl
or
loop
aaa
mov
push
loope
daa
clc
and
inc
loop
mov
pop
sbb
ja
or
icebp
and
and
jae
sub
test
fldcw
xchg
pop
iret
in
in
fstps
mov
stos
stos
pop
popl
pushf
adc
inc
xlat
pop
jg
or
add
sbb
loopne
in
lcall
push
hlt
mov
aad
clc
and
xor
das
mov
in
loope
fimuls
lock
inc
pop
and
adc
cmp
xchg
push
enter
push
or
and
sarl
je
lock
xor
adc
faddp
out
sub
dec
mov
dec
mov
insl
mov
roll
leave
into
add
movsl
jge
call
adc
shl
pushf
mov
pop
andb
in
aas
pop
dec
popa
aad
test
add
outsb
or
push
je
dec
in
inc
add
sbb
push
mov
dec
lahf
fs
or
out
aam
inc
cmp
gs
mov
lods
pop
lods
into
cmp
jnp
fnsave
pop
xchg
jnp,pn
mov
mov
dec
pop
add
push
lahf
das
or
sub
mov
mov
and
mov
int
fs
mov
pop
in
jno
sbb
dec
xchg
push
push
scas
pop
test
cmc
ljmp
jg
xchg
jb
jo
ljmp
push
adc
adc
rorl
mov
jns
dec
movsl
adc
sti
scas
shl
mull
sub
popf
inc
cmc
sbb
inc
push
movnti
movsb
aas
push
xchg
ret
sbb
cmpsl
xor
pop
cmp
mov
jne
aaa
cmc
xchg
adc
sarl
and
xchg
jmp
mov
mov
xchg
sub
push
loopne
push
dec
jl
jge
insb
scas
imul
inc
push
xchg
orl
pop
xchg
dec
adc
test
and
ja
jbe
push
inc
test
xor
rcrb
mov
stos
dec
pop
lret
lods
jle
ficoml
xchg
jb
push
push
push
dec
xchg
sub
cmc
pop
jb
push
nop
in
fmuls
into
les
sbb
lret
rcrl
pop
test
lcall
jp
pop
out
in
fwait
notl
add
js
sub
add
push
xchg
mov
lret
cmp
pop
and
pushf
frstor
or
pop
pop
xchg
dec
sbb
mov
sub
sbb
jle
inc
xor
sub
mov
mov
xor
push
out
or
pusha
cld
jecxz
pop
push
cli
pop
mov
mov
pop
pop
ss
or
cmp
xchg
cmc
sub
mov
outsl
add
test
xor
rcrl
cmp
adc
rorl
xchg
stos
add
dec
in
fwait
adc
out
ljmp
fldl
xchg
pop
cmpsb
bound
movsl
sbb
lcall
xchg
out
leave
pop
mov
or
out
jno
popa
jl
pop
sbb
mov
pop
cmp
fyl2x
inc
lds
adc
mov
and
mov
pusha
mov
shlb
xchg
les
scas
es
jp
sub
adc
ret
fdivrl
test
ret
adc
das
pop
sbb
rcrb
mov
out
pop
sti
add
ja
ss
out
je
rorb
jg
and
adc
pop
imul
sti
fwait
add
imul
jge
jecxz
andl
ret
ss
fildll
sub
push
stos
jp
into
jg
sbbl
mov
loop
sub
dec
push
push
push
mov
rcl
xor
push
mov
cmp
ror
xchg
es
pop
dec
push
fs
out
outsb
ljmp
sbb
jp
jmp
sub
movsl
out
icebp
mov
imul
pop
xor
fildl
jns
addr16
dec
sub
sar
push
hlt
in
inc
test
bound
lahf
inc
cmp
dec
mov
out
sbb
inc
push
xchg
lea
hlt
inc
mov
sub
xorb
inc
loop
rcrl
dec
shlb
or
xchg
mull
out
mov
adc
and
jo
inc
fwait
sub
fwait
int
rclb
shr
je
in
xchg
enter
or
inc
and
bound
scas
push
sti
mov
inc
mov
and
subl
sub
mov
dec
andb
in
out
leave
addr16
cmp
cmpb
xchg
sahf
or
sbb
das
sti
aas
cltd
movlps
push
push
subl
xor
popf
pop
insl
xchg
xchg
mov
lret
mov
mov
cmp
clc
frstor
add
add
ret
mov
and
fsubr
and
lret
enter
scas
xor
push
imul
mov
int3
xor
and
push
push
xchg
outsl
jle
lock
fidivl
les
jo
sub
mov
divl
in
adc
push
lds
std
nop
dec
ljmp
repz
adc
add
or
mov
sub
inc
popl
xchg
bound
push
punpckldq
pusha
aas
adc
fmull
popf
test
push
stc
rcrb
fsubs
cmpb
adc
mov
sub
xchg
in
dec
mov
ret
mov
les
mov
mov
jno
push
lcall
fs
jo
popa
adc
pusha
sub
inc
fwait
loop
sbb
inc
ja
popf
adc
inc
adc
cld
pop
rcrb
shl
rcl
mov
cmp
mov
lret
ja
push
mov
out
push
mov
push
ss
mov
sbb
inc
out
push
int
push
dec
test
sbb
cmpb
inc
rep
sbb
mov
dec
fcmovb
stc
cmp
sbb
cli
inc
das
ljmp
rcll
lret
pop
repnz
fstps
pop
mov
jle
inc
push
jae
mov
mov
xor
jns
adc
or
sbb
push
xchg
adc
or
jle
in
cmp
mov
xor
xchg
aaa
lock
cmc
dec
fimull
outsb
sbb
adc
pop
lods
fiadds
aam
push
mov
icebp
fcmovnu
pop
lock
mov
pop
lea
int3
sbb
aam
es
add
into
cmp
jns
jmp
movsb
adc
andb
hlt
dec
push
stc
out
inc
mov
sub
dec
mov
and
jecxz
adc
jno
jbe
xor
mov
pop
test
sbb
add
push
cmp
pop
adc
pop
adc
or
jns
sub
inc
push
jg
sub
xlat
testb
mov
loope
sarb
repnz
bound
cs
push
hlt
dec
jg
dec
pop
xor
cmpsb
inc
xchg
xor
cmpsl
stc
or
mov
pop
sar
mov
mov
outsl
repnz
ljmp
mov
call
ja
pop
lahf
and
scas
xchg
pop
mov
cmp
stos
jge
int
je
jo
jp
sub
mov
mov
inc
push
stc
dec
nop
add
adc
xlat
es
dec
mov
out
inc
push
ss
jo
pop
je
mov
testl
scas
out
insl
push
cmpsb
adc
rcrb
out
jg
push
mov
dec
push
mov
push
data16
sarl
jge
xor
add
popf
inc
pop
dec
je
int
jg
test
pop
inc
sbb
fisubs
cmpsb
es
hlt
aas
adc
gs
xchg
xor
das
sub
push
or
add
outsb
inc
sbb
gs
rcll
xchg
or
imul
fsub
and
jno
xor
sub
push
repz
shll
cmp
fistl
cwtl
lock
out
rcrl
ret
push
and
repnz
js
int3
sub
das
and
sub
dec
adc
cwtl
inc
push
cltd
mov
das
sbb
movsb
nop
cmpsl
lahf
jecxz
imul
popf
xlat
cmpsl
dec
jb
popa
jmp
xchg
fyl2x
cs
pop
and
push
jl
push
and
mov
jmp
mov
ret
add
outsb
add
sub
add
inc
and
ret
mov
push
mov
iret
pop
push
jnp
add
in
mov
xlat
xchg
ja
mov
jnp
lret
xor
fnsave
icebp
mov
sbb
dec
and
leave
xchg
test
insl
fadds
cmp
pop
push
dec
mov
add
sub
inc
int
out
clc
fidivs
leave
std
sbb
xchg
fistl
lods
cmp
mov
shrl
dec
aaa
mov
data16
test
rcl
mov
addl
out
sub
inc
push
shll
sbb
pop
inc
stos
test
aas
fwait
dec
lock
je
or
adcb
and
push
add
out
sub
stc
popf
rolb
jle
aam
lret
lds
out
mov
insl
xchg
mov
cmpsb
orb
cwtl
outsl
jecxz
lds
push
cmpsl
popf
mov
mov
push
lret
outsb
dec
lea
mov
ss
jnp
pusha
xor
xor
and
mov
cmp
in
out
lea
push
lock
outsb
mov
dec
scas
lods
or
jbe
pop
rcrb
adc
pop
mov
int
xchg
inc
dec
inc
js
lea
shlb
dec
jmp
stc
inc
jle
lcall
imul
repz
push
push
cli
jne
fsts
or
aas
nop
jb
bound
inc
adc
call
xchg
xorb
call
lods
stos
nop
scas
icebp
mov
inc
mov
lock
adc
mov
into
mov
pop
mov
pop
add
lock
lds
in
or
out
popa
fwait
test
into
sub
adc
mov
imul
mov
jae
movsl
aam
popf
cltd
mov
xchg
cs
xor
inc
dec
and
popa
fcmovnbe
shll
push
push
xor
add
mov
js
shrb
or
sub
mov
mov
arpl
pop
scas
mov
popf
lock
divb
pushf
fstpl
cmp
ret
popf
pop
icebp
mov
loope
adc
cwtl
xor
in
adc
faddp
lret
loop
sbb
pop
shll
sbb
enter
or
rcl
xlat
rol
cld
pusha
jne
setge
add
sahf
sbb
inc
adc
and
push
sub
adcb
leave
inc
cmc
cmp
cmpsl
jle
fdivl
inc
outsb
pop
pop
cmp
pop
imul
leave
or
pop
cli
cmpsb
fld
nop
mov
push
jb
pushf
cmovo
dec
ret
adc
imul
cltd
push
xchg
pop
popa
or
imul
stc
and
inc
pop
fs
rolb
jmp
pop
clc
call
test
addr16
sbb
or
repnz
jge
pop
inc
imul
insb
loop
jmp
jbe
xchg
cltd
jg
insb
xchg
mov
mov
xlat
inc
mov
mov
scas
xor
pop
jecxz
jbe
sbb
test
lahf
mov
addr16
xlat
mov
into
push
sbb
pusha
jl
sbb
dec
into
lahf
push
xchg
mov
pusha
or
pop
jb
push
int3
sahf
les
rcrl
push
cmc
mov
and
hlt
add
jg
outsl
icebp
cmovo
mov
cld
scas
in
cmc
xchg
mov
jmp
cltd
fdiv
lods
pop
pop
icebp
pushl
mov
ror
test
stos
dec
jo
cmp
push
stc
cmp
mov
pop
mov
sub
inc
pop
rorl
dec
inc
inc
pop
sbb
loopne
adc
das
sub
xchg
std
ljmp
pushf
xor
push
aad
push
stos
mov
lret
test
push
in
cli
and
mov
pusha
jge
dec
loopne
adc
repz
repz
pop
mov
xchg
jbe
xor
mov
xor
adc
adc
into
subl
xchg
xor
fmulp
shlb
dec
cld
iret
mov
test
sub
fcomps
ljmp
fmuls
mov
sub
dec
inc
aam
popa
popf
pop
fisttps
sub
pop
dec
sbb
mov
cltd
xor
and
mov
add
lahf
jmp
out
xchg
add
rcrl
or
testb
into
mov
int3
scas
jge
in
sub
insl
mov
push
push
jo
ficompl
cld
mov
stos
dec
lahf
cmp
loop
roll
push
das
sub
xchg
jge
or
sbb
sub
scas
pop
out
lods
imull
das
sbb
mov
test
xlat
call
mov
js
mov
movsl
fidivs
sbb
jbe
inc
pop
imul
fdivl
xchg
and
gs
and
fs
pusha
repnz
out
push
outsl
add
cld
sbb
cs
in
scas
lahf
and
mov
xchg
pop
lcall
and
lret
lahf
leave
jne
mov
fcom
lds
adc
iret
mov
cmp
cs
mov
or
out
push
loopne
repnz
jo
clc
adc
pushf
lahf
sub
adc
loopne
bound
lock
out
xchg
std
aas
mov
imul
lret
mov
push
and
xor
sbb
popa
imul
mov
sub
jns
loope
ss
mov
inc
mov
sbb
pcmpgtb
dec
xor
cmp
or
enter
shl
daa
mov
iret
xchg
jg
adc
int3
jns
fisubs
and
sti
cmp
mov
outsb
nop
fsubrs
push
out
sbb
mov
out
insb
or
popa
in
das
xchg
enter
dec
ret
scas
shlb
fmull
icebp
inc
jo
out
ljmp
xchg
adc
push
inc
int3
xlat
or
adc
lock
sbb
add
shr
mov
add
fcoml
sub
pushf
push
mov
arpl
jb
out
insl
mov
cld
in
add
fcmovbe
sarl
lds
int3
popf
mov
jle
aas
lods
xchg
fsts
and
loope
dec
push
out
mov
sub
sub
ja
movsb
insb
xchg
adc
pop
or
jbe
push
push
jns
and
repz
ret
cwtl
cmpsb
or
out
xor
mov
cmpsb
lods
adc
mov
xchg
cmp
out
aad
xchg
mov
fists
cmp
sub
cmpsl
push
adc
sub
lcall
dec
hlt
imul
mov
adcb
aam
mov
adc
add
mov
ss
mov
add
out
loope
sub
outsb
pop
sub
push
sbb
aas
popf
inc
loopne
out
mov
push
aaa
inc
pusha
sbb
fs
hlt
add
call
mov
dec
dec
fwait
out
sahf
mov
lock
or
push
lock
add
rclb
pusha
adc
int
test
xchg
sub
mov
add
sbbl
or
dec
je
jl
scas
inc
adc
add
pop
push
aam
jno
cs
add
addl
push
insl
clc
mov
adc
rol
xchg
mov
pop
xor
notb
test
mov
aaa
jmp
ffree
or
sbb
icebp
push
jnp
fistps
js
mov
imul
cmpb
jne
add
test
dec
pop
bound
and
mov
pusha
cmp
mov
inc
mov
jnp
shlb
dec
dec
cld
out
push
jmp
call
aad
jmp
test
fnstenv
test
subl
xor
push
ret
int3
mov
jo
xor
aas
dec
add
repz
aas
jecxz
inc
and
dec
mov
aaa
into
jg
mov
or
rcrl
dec
fwait
add
xchg
or
testl
cmpsl
cmc
pop
mov
insl
ret
add
lea
daa
adc
stos
push
icebp
sbb
dec
dec
out
repz
movsb
test
shlb
fcmovne
cmp
cltd
push
xchg
shlb
cld
dec
xor
push
outsl
test
fxch
cld
or
xchg
fldenv
or
cmp
cmp
pop
test
aam
fisubl
shr
in
jg
xorl
enter
andl
int3
nop
sarb
pushf
out
popa
dec
imul
mov
sbb
dec
sub
inc
jmp
push
sbbb
mov
xchg
negb
jo
lret
xchg
shlb
xchg
lret
mov
shll
push
dec
aam
inc
int3
inc
sbb
pop
cmpl
pop
and
arpl
sbb
gs
push
stos
jecxz
out
popa
mov
push
repz
mov
ds
jp
aas
clc
bnd
xchg
cmp
or
xor
and
fwait
mov
lock
movsl
int
sub
jb
lods
and
es
ds
pop
aas
lret
adc
pop
mov
outsb
out
pop
das
inc
dec
xchg
lcall
push
test
push
add
add
clc
outsl
cmp
aad
jg
inc
cli
std
xchg
out
addb
sbb
pop
outsl
out
out
jg
xor
cmp
and
xchg
cmpsl
and
sub
mov
cmp
mov
dec
jns
jecxz
decl
add
pop
in
mov
subb
dec
shlb
push
cmp
subb
jae
out
and
sbb
pop
pushl
and
cltd
push
push
pop
inc
sbb
mov
lods
movsb
in
inc
imul
arpl
in
sub
jge
sbb
cmp
dec
xor
push
sbb
mov
or
jge
fidivrl
shrb
xor
inc
inc
jmp
adc
shlb
push
rol
push
mov
sub
sbb
mov
inc
adc
popl
jecxz
lods
es
pop
jg
sbb
cmp
sub
mov
and
adc
sub
push
push
or
cmc
xor
mulb
jle
js
in
int3
popa
or
sbb
and
or
in
adc
dec
addr16
xor
out
jg
mov
jne
cs
add
lea
add
inc
or
sbb
mov
icebp
fimull
test
into
jmp
sbb
and
mov
push
pop
xor
and
lock
test
hlt
loop
das
scas
test
jl
mov
xor
stc
mov
mov
mov
xchg
add
in
dec
xchg
jbe
sbb
xchg
sub
icebp
xor
and
pushf
movsb
test
add
pop
xor
xchg
sbb
in
mov
movsb
lods
divb
xor
adcb
cmp
pusha
sarb
je
cli
dec
cmc
lcall
mov
mov
adc
and
fs
pop
jnp
mov
push
mov
xchg
add
mov
push
push
cltd
and
inc
sub
mov
and
xor
addr16
cmp
bswap
mov
push
add
into
loope
cmp
xor
pop
pop
push
pop
inc
ret
jmp
xchg
mov
sub
dec
jg
pop
inc
imul
sub
in
js
in
das
mov
cmp
pop
jne
jecxz
xor
sbbb
out
dec
jno
fnstcw
pop
arpl
je
inc
jnp
mov
test
pop
pusha
jg
test
popf
aad
xchg
je
out
inc
sub
xor
pop
dec
test
hlt
pop
push
and
jno
cwtl
cmp
lods
jo
push
sub
sub
add
in
jb
mov
adc
jno
mov
dec
mov
xor
test
jbe
mov
pusha
js
clc
and
std
in
dec
rolb
push
lock
je
and
lcall
cs
mov
test
mov
cmp
sub
pop
je
pop
mov
lods
repz
cmpsl
sahf
dec
pushf
test
jl
mov
js
add
dec
push
fcompl
mov
dec
mov
mov
push
repnz
in
scas
into
movsl
xchg
add
inc
pusha
push
iret
pop
push
jnp
pop
stos
data16
pop
les
iret
pop
mov
mov
mov
pop
pop
cmp
adc
sbb
out
pop
jmp
int3
push
pusha
sbb
stos
push
stos
mov
icebp
mov
cmp
aad
enter
push
cmc
xchg
xchg
or
sbb
in
jb
out
lret
das
cmpsb
jge
in
push
add
les
sub
push
push
std
jbe
pop
mov
call
mov
jne
sbb
in
dec
lods
int3
or
jp
shr
lea
or
jp
add
pop
mov
iret
fisttpll
xor
aaa
cmc
mov
xor
jb
cld
cmpsl
push
movsb
cmpsb
hlt
arpl
and
push
pushf
push
xchg
lret
fwait
push
sbb
in
xlat
add
movsl
jl
in
popa
jno
inc
pushl
fldt
and
mov
sub
cmp
popa
mov
mov
cmc
push
arpl
xchg
outsl
divl
fs
dec
out
shlb
gs
push
les
imulb
adc
fldcw
pop
push
adcl
sub
dec
push
mov
jecxz
test
push
jae
lahf
pop
push
repnz
ret
xchg
mov
and
into
xchg
into
push
adc
pop
adc
fadd
mov
sub
test
jge
les
aam
loope
add
push
inc
test
imul
cmpsl
repz
popa
sbb
push
into
imul
ss
lods
cli
mov
xchg
and
fcoml
dec
xchg
jne
stos
inc
fwait
pop
jg
fcmovbe
enter
movsb
subl
cmc
mov
pop
dec
push
loopne
filds
inc
out
lea
mov
shlb
push
jl
pop
test
push
mov
push
call
addr16
movsb
ret
or
imul
lahf
xchg
xchg
sub
fstpl
imul
in
pushf
int3
jle
sub
push
xchg
inc
hlt
cli
xchg
jl
jge
das
push
lret
imulb
and
inc
aad
mov
scas
je
xchg
push
pushf
jno
mov
stos
sarb
push
rol
loop
movsl
or
leave
xchg
push
push
cmp
retw
jle
mov
or
iret
pop
inc
mov
mov
cld
push
scas
adc
lods
fsubrs
lahf
ja
dec
cmpsl
inc
or
mov
jecxz
subl
popa
pop
outsl
sub
test
sub
in
mov
and
push
add
xor
shll
xchg
xchg
add
fstpl
mov
scas
jae
out
into
std
pop
jns
xchg
inc
jo
mov
outsl
loop
sub
push
mov
std
pop
movsb
mov
lcall
arpl
push
add
or
icebp
cmpl
lods
test
sub
lods
xchg
call
iret
pushf
pop
fisubrl
leave
inc
inc
and
mov
movsl
mov
mov
std
sbb
pop
push
sub
mov
lods
mov
mov
sbb
sarl
shlb
cmpsl
in
xchg
sbb
in
sub
mov
test
push
mov
jmp
push
clc
scas
lret
test
adc
pusha
cwtl
lahf
jecxz
repz
das
loopne
push
js
cmp
pusha
and
fldl
push
xchg
and
sub
insl
fldcw
outsb
mov
movl
lcall
mov
movsl
jl
xchg
cmp
movsl
and
fcoml
out
jne
arpl
mov
sub
rorl
insl
adc
test
xchg
cltd
mov
push
pop
push
push
adc
jl
mov
push
adc
jns
stos
mov
das
sbb
test
aad
inc
push
popf
xchg
or
sahf
loope
xor
inc
cmpsb
daa
daa
fstpt
jno
jns
lds
xor
andl
mov
mov
jnp
jmp
dec
iret
sub
imul
cmpsb
fists
push
pop
mov
out
mov
sub
xor
xor
jmp
push
sub
and
sbbb
dec
fs
adc
mov
jle
mov
inc
fs
xchg
inc
outsb
push
data16
daa
mov
das
cli
lods
push
mov
data16
xorb
fidivrl
fsts
lds
sbb
add
pop
sti
or
mov
push
cmpsl
mov
stos
shrb
adc
mov
fcoms
xor
xchg
ja
sbb
sbb
clc
es
into
mov
fcmovnb
jle
mov
filds
arpl
jp
test
dec
outsb
mov
inc
or
inc
lret
test
xchg
dec
xor
cmp
lds
cmpsb
mov
push
jo
add
dec
jecxz
sbb
or
imul
mov
sbb
shl
ljmp
jmp
xchg
sbbl
inc
jmp
add
jae
cltd
pop
fcoml
mov
enter
add
xchg
pop
cmp
adc
mov
lock
xor
push
pusha
mov
pop
enter
xchg
inc
and
jg
sbb
movsb
andl
pop
push
sbb
and
outsb
xor
mov
ret
ds
gs
test
das
sbb
xchg
lds
scas
mov
les
cltd
jge
cmp
lods
jl
nop
ret
js
cs
push
xor
repnz
scas
pop
xchg
ret
scas
dec
mov
fsts
loop
cmp
xchg
cli
sub
or
mov
mov
cmc
xchg
inc
repz
lds
adc
mov
xchg
xlat
push
scas
imul
scas
mov
xchg
jl
sbbb
cltd
outsl
mov
cmc
cmpsl
mov
es
in
mov
push
push
js
and
adc
fcmovne
mov
and
push
sub
sarl
std
xor
loope
add
sub
loope
leave
dec
jnp
mov
roll
lret
or
cmp
push
add
xor
xchg
int
jge
test
mov
pop
sbb
adc
jp
push
jl
mov
fdiv
adc
cmpsl
sbb
cmp
idiv
cld
lods
jno
mov
xor
push
and
xchg
sbb
inc
cltd
movsl
inc
add
jo
sub
dec
lods
jno
imul
nop
xchg
push
xchg
faddl
aaa
mov
dec
xchg
mov
sti
push
insl
fnsave
shlb
xchg
nop
ret
adc
mov
dec
lahf
mov
mov
mov
fimuls
mov
jo
fsts
mov
test
xor
adc
in
test
xchg
jle
insl
cltd
push
push
push
repnz
cwtl
dec
sbb
out
add
add
aad
xor
jns
xor
push
push
add
cmp
out
mov
or
mov
xlat
fwait
and
int3
hlt
stos
push
xlat
das
push
int
stc
in
setle
cmp
mov
xlat
scas
xor
loope
cwtl
jnp
push
bound
xor
hlt
shrb
dec
enter
test
into
popl
mov
shr
lock
inc
aad
std
ds
jae
jno
jb
fxch
pushf
or
outsl
xchg
movsl
call
insb
pusha
fisubrs
stc
lcall
ljmp
dec
sbb
popf
add
xor
fistpll
loop
roll
shll
or
and
cmp
mov
jnp
fwait
mov
push
jnp
jae
into
stc
and
cmp
or
add
adc
sub
out
mov
mov
pop
std
out
xchg
ds
mov
xor
xor
jne
pop
and
dec
sub
push
shll
dec
enter
lods
adc
xor
mov
pop
fwait
inc
sahf
pop
push
mov
out
outsl
sahf
push
mov
sahf
scas
mov
cmp
insb
mov
jp
xlat
fs
shlb
inc
push
jb
xchg
and
or
sub
js
mov
pop
test
sub
pop
pop
or
mov
dec
jo
stos
outsl
fisttps
das
xchg
pop
adc
sub
lods
push
adc
lds
push
nop
ja
xchg
int
sbb
xor
cli
dec
sub
jns
fistps
popa
pop
out
or
clc
or
inc
andl
lods
out
sbb
and
mov
cwtl
filds
and
mov
push
jmp
scas
stc
pop
sbb
jno
mov
ja
loope
pop
lods
mov
popf
clc
xchg
dec
js
aam
add
cmc
push
int
pop
dec
fisubrl
mov
int
xor
les
mov
je
sbb
jo
sbb
das
jecxz
movsl
nop
dec
push
cs
inc
stos
vpaddb
fldpi
aas
adc
cltd
cmp
jne
xchg
aam
jg
lods
or
xor
mov
mov
pop
bound
cmovs
add
mov
in
sbb
mov
les
movsl
icebp
xor
sete
cmp
aad
pop
cmp
jg
inc
insl
add
outsl
rorb
leave
push
pop
jmp
loop
sub
cmpsb
sub
scas
lods
inc
jno
shr
or
adc
sub
mov
addr16
fwait
push
cltd
jno
ljmp
fcmovbe
rorb
mov
dec
clc
mov
inc
arpl
fs
xor
fnstenv
test
cld
pop
fsubl
inc
es
js
pop
aam
pop
jmp
dec
sub
addr16
cmp
jl
add
call
jecxz
call
popa
data16
lock
cmpsl
jg
dec
movsl
mov
and
pop
cmpsb
pop
push
adc
aam
mov
sti
jle
cmpsb
dec
and
and
dec
ss
add
xchg
jmp
repz
loope
pop
and
arpl
pop
mov
jb
push
push
xchg
stos
in
daa
sub
pop
cmp
add
and
mov
roll
cmp
arpl
stos
xchg
loope
mov
jnp
insb
push
fldcw
sub
int3
adc
repnz
movsl
push
outsb
push
xor
in
pop
mov
fcomi
sbbl
xchg
faddl
xchg
mov
inc
xchg
pop
jp
lock
xor
mov
cmpsl
adc
sub
adcl
jp
mov
cmpsl
add
lds
shll
xchg
test
ret
enter
or
jg
in
sub
test
insl
mov
push
aas
jecxz
lret
or
clc
and
mov
mov
fimull
xchg
out
out
mov
xchg
mov
inc
out
adc
fldl
addr16
jle
test
mov
int3
dec
push
push
in
fdivp
rcll
dec
flds
sub
mov
pop
sgdtl
cmpb
lcall
and
gs
les
outsl
xchg
mov
in
dec
arpl
mov
or
and
les
sub
inc
push
mov
aad
jle
out
mov
sahf
imul
loop
fisttpll
adc
bound
enter
push
jae
pop
loop
cmpl
jl
fistpll
sbb
sbb
je
sbb
push
repz
pushf
mov
mov
push
fbld
loop
lock
xchg
int
mov
mov
dec
jge
mov
and
cltd
ds
mov
jecxz
fimull
jae
leave
negl
mov
mov
adc
xor
hlt
lods
cld
lds
jnp
and
scas
nop
adc
movsl
or
scas
cmp
adc
adc
mov
subl
out
mov
mov
cmp
mov
jae
fimull
inc
pop
sub
out
dec
and
push
jmp
sbb
loop
mov
stc
xchg
daa
adc
ljmp
ret
cmp
jne
add
iret
mov
iret
or
inc
in
dec
or
rcll
push
mov
ret
fisttps
sbb
and
lea
jmp
icebp
cmpsb
pop
sub
jmp
mov
add
push
pusha
ret
in
fwait
push
mov
mov
in
pop
adc
push
popa
je
out
cli
lods
stc
fdivrs
xchg
push
sqrtps
je
test
adc
out
fstpl
ret
adcb
in
sbb
push
xchg
jl
jl
ja
push
dec
daa
jg
nop
xchg
push
mov
sbb
in
in
dec
ret
leave
mov
into
sbb
into
imul
imul
push
fstpl
cmp
jg
jnp
test
push
cmp
adc
sbb
in
imul
sti
mov
repz
in
inc
in
add
sbb
cli
ja
cs
insb
mulb
bound
mov
insb
mov
test
repz
sbb
jmp
xor
sub
out
imull
and
out
dec
dec
insl
test
push
adc
xchg
int
xchg
jmp
mov
xchg
inc
call
pop
in
dec
adc
fs
pushl
adc
cmpsl
data16
ja
push
and
jb
fiadds
xchg
jb
mov
xchg
stc
mov
mov
out
pop
aas
rep
rolb
repz
call
fdivl
cmp
sub
pusha
mov
arpl
push
mov
bound
add
sti
and
mov
jmp
and
cs
lods
add
xchg
jnp
test
xor
sbb
stc
filds
mov
lea
adc
lcall
fldt
sub
jg
aaa
jp
pop
cmp
lcall
cmp
test
push
and
jae
push
mov
stos
mov
ljmp
push
adc
and
sub
test
xor
pop
push
adc
ja
inc
or
icebp
ds
mov
mov
fs
ret
fnstsw
push
aam
clc
push
in
push
sahf
lock
jnp
pusha
mov
into
push
shlb
enter
imul
sbb
mov
ret
loop
cmpsb
xchg
loop
pushf
int
stos
or
adc
pop
and
mov
lock
cmp
dec
mov
dec
push
fsubrs
xchg
add
jne
adcl
adc
jae
cwtl
in
sbb
jecxz
push
inc
push
int3
call
imul
in
mulps
lret
in
push
mov
roll
lret
dec
shll
arpl
inc
mov
inc
sbb
inc
cld
rolb
into
mov
shll
mov
shlb
inc
jnp
mov
jno
push
jo
stos
add
std
das
rclb
xor
push
adc
and
jns
push
add
aas
imul
add
sub
and
mov
fcomp
jecxz
shlb
pusha
jnp
mov
rorl
es
or
scas
decb
sub
imul
addr16
shl
mov
ret
aas
aas
mov
jb
data16
iret
mov
hlt
xor
sub
and
jo
jo
gs
leave
sbb
out
push
icebp
adc
xor
and
add
adc
xor
push
ljmp
lcall
xchg
ss
push
rcll
mov
mov
push
divb
inc
cli
lret
repnz
jp
subb
cmp
clc
cmp
dec
aaa
jg
into
mov
add
sbb
mov
add
xor
rclb
cmp
jne
add
das
inc
inc
out
loope
dec
jle
add
and
shll
js
push
or
mov
aas
je
aaa
mov
add
std
test
je
ret
cmp
imul
sbb
lea
jae
sti
repz
sbb
xor
xchg
ljmp
loope
xchg
inc
gs
add
mov
lahf
fistpll
lret
subb
gs
xchg
mov
rclb
mov
mov
mov
scas
aas
adc
loopne
bound
push
jmp
pop
test
stos
xchg
mov
add
jns
gs
jmp
es
dec
mov
test
push
popl
aam
scas
je
mov
gs
or
aas
negb
and
int
aaa
push
mov
lds
adc
inc
mov
pop
test
jb
lcall
add
cmp
push
lahf
pop
pop
adc
sbb
sub
mov
jnp
mov
push
bound
ss
je
das
push
xor
mov
cmc
push
adc
add
popa
pusha
sub
or
adc
jnp
push
sub
or
cmp
mov
mov
btc
and
ljmp
fwait
sbb
in
jg
adc
andl
mov
ja
aad
je
push
dec
enter
outsl
loopne
daa
mov
outsl
jecxz
call
scas
cli
cmc
test
mov
inc
shlb
push
dec
mov
push
or
rcrl
arpl
mov
ljmp
lcall
and
cmp
xor
mov
fwait
mov
mov
movsb
adc
es
jns
arpl
mov
ss
cmp
cmp
mov
mov
sbb
std
aas
xchg
pop
rcrl
jge
outsb
addl
inc
call
add
cld
fucomp
mov
sub
in
mov
or
jp
addr16
testb
js
out
or
push
push
stc
cwtl
or
pop
inc
sbb
das
data16
push
sbb
mov
in
addr16
loope
ja
testb
test
mov
add
jmp
enter
xor
roll
nop
and
cli
pop
cwtl
adcb
pop
adc
sub
mov
jg
mov
mov
mov
addb
subb
push
adc
sti
mov
shr
or
inc
aad
jne
mov
test
adc
enter
mov
cmp
movsl
hlt
loope
xlat
xor
mov
scas
jae
sbb
xchg
inc
and
and
xchg
mov
cmp
jecxz
xor
ret
iret
xlat
dec
int
pop
mov
and
rol
sub
inc
mov
lea
mov
lret
lods
mov
cmp
push
or
aam
fstps
mov
push
loope
and
les
lret
xor
das
cld
hlt
pusha
sbb
jo
xchg
dec
movsl
sub
aad
mov
mov
popf
test
stc
negl
mov
push
sbb
jmp
out
inc
xor
mov
stos
sub
fwait
inc
sbb
cmpsb
pop
mov
ljmp
popl
data16
sub
rcrb
jp
xor
pop
adc
add
xor
mov
or
test
sarl
mov
cmp
in
sub
mov
inc
std
arpl
add
test
mov
pop
outsb
fs
addl
movsl
jns
int
mov
jmp
mov
fisubrl
adc
nop
xor
lock
inc
pop
dec
negb
mov
mov
enter
inc
in
sti
icebp
dec
pop
xchg
fs
fmuls
jne
mov
test
aas
test
cmp
adcl
xchg
and
xchg
movsb
cld
stos
in
iret
sub
jecxz
fdivrl
mov
xlat
clc
bound
rcl
and
rep
push
jp
sub
sbb
inc
pop
dec
adc
pop
loopne
mov
pusha
cs
lahf
pop
and
and
pop
jecxz
in
mov
mov
pushf
shr
mov
xchg
ror
test
js
xchg
popa
dec
stos
inc
out
ljmp
jnp
fcomp
mov
inc
mov
mov
pop
and
or
push
dec
mov
aas
dec
inc
jnp
dec
xchg
rcrb
mov
cmp
into
loope
ljmp
sub
ret
mov
aad
mov
xchg
dec
fildl
lock
lock
and
icebp
out
sbb
fists
test
popa
or
mov
sbb
jmp
je
xor
inc
mov
rorl
movsb
sbb
in
xor
xchg
sub
mov
inc
mov
fidivrs
dec
pushf
int
aas
inc
cld
aam
add
cmp
cmpsl
fisttpll
xchg
repnz
pop
inc
fwait
cmc
lock
lea
adcb
push
std
inc
sub
dec
pop
nop
lea
sub
repz
mov
xchg
dec
rorl
ss
adc
add
mov
ror
xchg
fimull
mov
popl
xor
jb
sbb
js
fisttpl
fstps
cmp
push
cmpsl
scas
test
mov
sbb
cltd
jne
add
in
dec
jge
or
jb
xchg
sbb
pop
mov
pop
mov
js
push
push
js
lret
daa
xchg
iret
int3
dec
jno
add
mov
and
out
mov
shll
xor
xor
dec
cmp
fdiv
imul
cmp
adc
jp
enter
mov
imul
dec
leave
jb
xchg
fildll
dec
pop
mov
popa
pusha
cmp
in
push
add
pop
inc
pop
nop
cmp
lahf
nop
cli
out
cmp
aaa
aad
add
xor
shll
inc
imul
push
push
pop
and
jb
and
sub
lds
inc
icebp
out
pop
or
adc
pop
testl
push
insl
pop
add
push
cmp
pop
inc
cmp
decb
mov
cmp
jne
mov
pushf
sbb
sbb
ja
jo
rep
jbe
push
jle
out
inc
inc
std
les
stos
mov
xor
gs
push
cmc
adc
je
sbb
mov
fsts
inc
ds
jmp
xchg
cmp
inc
clc
dec
mov
push
dec
push
je
push
inc
fs
cmp
sub
int
sub
adc
les
ljmp
cmovbe
and
cmp
mov
popa
nop
and
mov
inc
xchg
popa
leave
popa
mov
fs
mov
sbb
sub
lods
repz
shll
mov
iret
fildll
into
daa
fisubrl
mov
scas
push
cli
or
xor
jnp
mov
push
outsl
cmp
lret
pusha
pushl
dec
xor
jle
pushf
push
icebp
cs
xor
lods
push
jb
mov
addr16
aad
adc
inc
xor
jb
mov
adc
dec
and
and
inc
or
cmp
jge
add
fwait
cmp
aas
mov
not
es
mov
pop
aaa
cmp
push
out
test
add
ret
mov
mov
mov
or
xorb
xchg
mov
mov
les
dec
adc
imul
or
adc
mov
scas
and
xchg
pop
ja
xor
push
das
and
flds
fdiv
cmp
xchg
clc
sti
inc
lock
pusha
fwait
shlb
fmull
lret
sbb
ss
jmp
notb
pop
scas
cmp
je
sbb
lcall
bound
xor
ja
daa
mov
inc
mov
outsl
ds
push
mov
loopne
push
cmp
aas
stc
iret
mov
xlat
popf
dec
movsb
popa
fcoms
push
sub
mov
and
test
ret
ror
push
add
je
fisubrs
popl
cmp
addr16
dec
nop
adc
es
inc
out
repz
mov
mov
jnp
aas
xchg
ss
fcompl
inc
or
xchg
ss
stc
sbbb
lods
loop
mov
bound
or
mov
xor
lahf
cli
ret
mov
lret
test
jo
rolb
gs
push
mov
pop
movsl
negl
daa
xchg
xor
cmpsl
and
stc
scas
push
in
mov
inc
pop
add
push
shll
faddl
xor
std
insl
pop
out
or
jno
push
xorl
addr16
cld
push
out
pop
adc
pop
imul
mov
xor
cltd
jo
cmpsb
into
arpl
jle
cmpb
dec
dec
aam
xchg
icebp
int3
and
sub
enter
scas
mov
js
test
push
add
jnp
ljmp
and
in
jo
sbb
jg
jns
shll
lds
adc
sbb
repz
and
jge
shrb
gs
push
in
insl
adc
adc
push
scas
jp
aas
fstpt
cmp
or
jb
pop
jp
mov
sbb
test
pop
gs
mov
add
mov
mov
sub
movsl
je
jmp
or
mov
mov
inc
mov
int3
xorl
mov
fisttpl
test
jns
ds
aam
mov
les
pop
xor
mov
or
push
jnp
insb
std
enter
jb
pusha
in
jmp
sahf
stos
mov
imul
cmpsl
jo
jg
cs
scas
fbld
es
je
in
lret
movsb
popa
out
xor
jo
das
lgs
adc
in
sarl
and
sub
in
loopne
bound
addb
inc
lods
bound
cmpsl
cmp
cmc
mov
repz
push
fsubrl
mov
cmp
lods
fidivrs
mov
scas
sbb
mov
xor
inc
subb
data16
mov
rclb
lea
inc
inc
dec
fisubrl
repnz
dec
hlt
int
pop
jle
or
jge
push
stos
mov
mov
inc
das
aam
and
lods
notb
add
mull
es
push
mov
pop
out
cli
icebp
lcall
insl
mov
xor
les
test
out
mov
enter
xlat
mov
loop
cmp
call
pop
xor
lds
fcoml
insl
arpl
jle
fs
dec
dec
jae
push
test
jle
lods
out
ret
popf
adc
popf
dec
clc
stos
and
inc
lock
and
add
mov
inc
xchg
das
pop
mov
lret
movsb
mov
mov
loopne
inc
inc
imul
repz
iret
and
or
mov
out
movsb
xchg
pop
lcall
dec
cmp
cmp
in
push
push
in
aad
nop
push
xor
and
int3
pop
mov
stos
push
jo
and
adc
inc
push
lock
pop
daa
scas
sbb
scas
cmp
and
in
sbb
ret
outsb
aaa
mov
insb
aaa
inc
xorl
inc
iret
mov
roll
xchg
test
mov
xchg
sub
fisttpl
sub
inc
ljmp
cmp
sub
inc
fwait
push
cmp
pop
xchg
add
and
mov
aas
inc
mov
sbb
lret
je
lods
iret
leave
lret
or
int3
jnp
pop
ficoms
and
std
xchg
cmc
or
inc
das
andl
hlt
scas
and
mov
test
lds
xor
push
fldl
test
mov
mov
mov
addb
repnz
mov
mov
sbb
pop
adc
mov
xchg
in
aad
xor
bound
or
mov
dec
xor
test
popa
jmp
jl
xchg
pop
gs
add
dec
cmp
push
jne
or
fwait
fwait
test
xchg
push
add
cld
pop
lods
push
pop
sbb
mov
mov
xchg
std
dec
gs
movntps
add
pop
push
into
mov
inc
test
in
adc
test
pop
mov
push
and
jmp
mov
add
sbb
pop
mov
adc
sti
iret
push
loopne
fisubs
je
sbb
mov
mov
adcb
mov
push
sub
outsl
pop
lods
push
fwait
in
xor
test
mov
xchg
cmpsl
in
adc
pop
pop
ret
xchg
mov
scas
jno
sbb
pop
std
fdivrl
rcrl
cld
ror
adcl
pop
cmpsb
popl
xor
sub
cmp
loope
pop
mov
xor
jne
lcall
dec
jle
jne
push
imul
int3
fidivs
and
loop
lds
outsb
mov
leave
xchg
jmp
not
xor
jmp
stc
aad
push
jmp
lock
inc
mov
popf
jecxz
xchg
mov
mov
xchg
dec
popf
mov
dec
push
mov
push
lcall
sbb
jns
xor
sub
xlat
and
mov
test
mov
mov
jmp
test
adcl
rorb
mov
xchg
adc
add
fstpt
jecxz
xor
mov
push
into
fstpt
push
aam
jmp
sub
xlat
dec
into
xchg
inc
jae
mov
jg
fisubl
pop
dec
mov
and
fdivrl
jle
pop
mov
dec
mov
inc
lea
loop
in
xchg
sub
fldenv
add
loope
jns
aas
adc
jno
pop
repz
pusha
push
xchg
jne
dec
xor
mov
mov
adc
nop
and
and
lds
cmp
mov
filds
or
push
movsl
add
or
pop
mov
push
aad
scas
jb
dec
movsb
stc
ror
sahf
movsb
xor
add
sbb
test
or
daa
inc
data16
xor
cmpsl
add
add
pop
cmp
mov
inc
pushf
jp
lret
sub
negl
or
out
pop
mov
out
in
data16
xlat
and
iret
sub
mov
pusha
xor
ja
sub
icebp
cmpsb
outsl
ror
adc
add
mov
lahf
and
sub
jle
cld
ja
mov
pop
cmp
iret
or
outsl
mov
lahf
adc
pusha
imul
jbe
scas
stc
cs
pop
or
xchg
xor
xchg
xor
mov
ja
push
out
fnstenv
mov
mov
pop
ja
mov
outsb
and
jge
imul
in
stos
loopne
xor
hlt
push
out
clc
dec
lcall
in
adc
inc
jle
repnz
jp
mov
add
daa
xchg
or
jg
es
push
ds
push
cmp
jno
jae
pop
or
jbe
lds
cs
dec
loope
mov
cli
les
cli
sahf
xchg
pop
rcrl
addr16
cmc
jbe
stc
mov
cmp
repz
outsl
ret
loop
and
add
stos
andb
mov
imul
jge
mov
lds
roll
out
lcall
outsl
cmpsb
test
shrl
out
xchg
mov
push
fiadds
or
and
mov
add
add
bound
lods
cltd
test
lods
or
lret
mov
aam
xchg
in
push
inc
jp
jns
fdivr
ror
adc
lret
sbb
outsb
inc
push
stos
andb
dec
mov
decl
cmpl
psubsb
loop
shlb
jmp
mov
mov
jo
fmull
dec
je
fwait
popl
je
imul
inc
das
mov
stos
outsl
xor
lcall
out
cvtpi2ps
jb
daa
add
mov
movsb
jl
cltd
mov
jge
loop
and
xchg
mov
insl
mov
or
cmpsb
and
mov
and
vpsrlw
sub
jnp
add
aam
mov
enter
mov
ret
mov
xchg
nop
enter
lods
lret
lea
lahf
and
and
popa
or
sub
cld
jecxz
and
outsb
dec
or
test
cmp
jge
out
jmp
into
push
and
clc
inc
lods
or
adc
mov
or
ss
xchg
sbb
out
dec
dec
xchg
arpl
es
mov
cmc
fldt
inc
mov
mov
push
cmpsb
shrl
movsb
das
rcrb
popf
sub
xchg
stos
test
xorb
inc
ss
movsl
imul
add
dec
call
mov
jg
ret
and
pop
in
pop
mov
rep
add
xlat
cwtl
xchg
cmp
lcall
xlat
fists
cmp
aaa
call
lods
adc
sbb
sub
dec
addr16
mov
in
int3
lea
add
or
jae
rcrb
sti
mov
pop
ret
cmpsl
jnp
push
addb
mov
clc
mov
test
cmp
xchg
test
inc
jp
xor
dec
std
aad
aad
fisttpll
sahf
jp
xlat
xor
mov
sbb
movsl
int
mov
lock
and
mov
ret
aam
int
cmp
scas
sarb
rol
xchg
out
push
mov
xor
mov
mov
andl
sub
push
or
js
adc
and
daa
cmpsl
xchg
jae,pn
into
jb
repnz
fwait
out
loopne
add
dec
mov
inc
mov
push
sub
or
adc
decb
outsb
pushf
fwait
pusha
stos
rcr
mov
push
xor
dec
clc
add
popa
fldcw
lea
scas
inc
lahf
push
push
mov
call
fs
cmpb
les
call
lods
imull
mov
push
inc
lock
aaa
dec
jns
xchg
sub
insb
int3
dec
stos
adc
dec
stc
push
cmp
lret
mov
adc
xor
mov
jae
pop
jbe
push
jle
push
jno
push
ror
xor
adc
sub
lret
out
leave
mov
imul
cmp
shlb
xchg
adc
ret
xchg
xchg
je
xor
cmpsl
in
mov
sub
lret
movsb
movb
pop
bound
mov
jb
mov
sbbl
outsb
popa
mov
jmp
sbb
mov
lods
and
fscale
mov
and
aaa
jp
out
cltd
pop
adc
xor
adc
cmpsb
fdivrl
sub
mov
shlb
inc
sbb
into
pop
mov
dec
xchg
gs
fiaddl
sub
jecxz
in
cmp
subl
add
mov
loop
ret
xchg
inc
aad
xchg
fs
fwait
pop
rclb
sbb
sub
pop
inc
add
loopne
das
scas
fmull
push
sarl
cmpsl
push
xadd
sbb
fisttps
outsl
bound
adc
lds
inc
shll
pop
notb
dec
ret
jmp
mov
or
push
jle
mov
dec
dec
push
jg
mov
scas
popa
adc
mov
stos
sti
add
jns
pop
xlat
sbb
xor
and
call
sub
add
loopne
hlt
xor
dec
js
stc
pop
mov
mov
mov
sahf
stos
adc
sub
ljmp
push
ror
add
and
bnd
xlat
inc
sub
dec
test
mov
into
mov
mov
in
fidivrl
icebp
mov
or
repz
mov
mov
push
roll
shlb
ljmp
sbb
xchg
pusha
lcall
fadds
mov
lods
mov
std
ret
push
popa
in
out
cmp
in
push
cmp
arpl
enter
fdivs
dec
lods
testl
push
loopne
das
lods
ja
cmp
mov
ja
jo
push
cltd
jge
xchg
pop
or
push
in
scas
fcmovnbe
loop
mov
jmp
pop
ds
bound
mov
orl
pop
xor
add
mov
xchg
adc
sahf
fcmovbe
in
loopne
repnz
push
repnz
fistpll
out
es
pop
jle
jle
das
pop
sbb
push
inc
popa
je
into
stos
mov
bound
fwait
mov
sbb
lret
add
xchg
les
aad
and
aad
pushf
adc
mov
insb
lea
add
ret
fcmovu
push
stos
andb
pop
stos
test
cmpb
scas
mulb
cmc
jne
data16
lods
ret
sub
or
push
test
clc
push
arpl
jo
sbb
pop
mov
es
adc
fs
pop
lret
and
mov
and
inc
je
popa
cmc
xlat
mov
xlat
dec
cld
fcmovnu
stos
cli
test
iret
sahf
ljmp
mov
popf
lods
xlat
inc
add
imul
andb
mov
cmovae
xor
cmpsl
sub
shlb
add
jbe
push
mov
adc
mov
cmp
xor
push
or
push
sbb
aas
cmpsb
iret
xor
in
push
push
sub
push
repz
rcl
js
cs
bound
mov
or
and
cld
xchg
sti
cmpsb
cmp
push
jmp
lds
add
out
cmpsl
lds
mov
movsl
insl
pop
imul
push
shlb
lret
jmp
leave
mov
stos
pop
jmp
lods
add
outsl
fs
fistl
jcxz
rol
insb
mov
aad
sub
or
lea
loope
sbb
addr16
cmp
inc
scas
jge
sbb
pop
inc
outsb
adc
jb
iret
jge
inc
jb
xchg
inc
adc
jmp
adc
jb
pop
mov
and
lcall
imul
out
int
xlat
cltd
ds
ret
dec
fstl
and
xor
xorb
lock
inc
adc
xor
cli
fxch
xor
and
lahf
and
lea
movl
jne
repz
cmp
lock
les
jb
cli
aam
mov
lahf
lods
orl
cli
inc
dec
mov
push
ficoml
and
cs
push
jae
imul
dec
int
push
out
cmpsb
fnsave
mov
in
adc
orb
ret
sub
cmp
jmp
mov
int
push
add
pop
clc
push
in
into
fdivl
lea
shll
push
mov
cmp
mov
pop
add
aas
mov
xchg
outsl
jge
popf
or
or
gs
inc
or
sahf
pop
mov
clc
and
and
dec
jg
pushf
imul
jno
out
adc
add
mov
or
movsb
xor
inc
hlt
rolb
jae
mov
lods
fmull
jbe
dec
std
leave
push
mov
cwtl
mulb
add
mov
sub
push
jns
xchg
jmp
cmp
dec
data16
ret
test
fs
lcall
in
cmpsl
xchg
adc
ds
aam
addl
sub
dec
jb
addr16
inc
test
je
sbb
mov
subb
jle
shl
push
mov
xor
les
lods
in
in
test
and
push
push
rol
out
sahf
inc
popa
out
in
mov
sbb
in
ret
jne
rcll
xor
cmp
lods
and
sbb
add
xor
outsb
hlt
mov
jecxz
stos
push
adc
jns
and
mov
addr16
xor
add
xlat
xchg
rep
in
mov
and
xor
popa
pop
xchg
mov
mov
cmp
mov
inc
scas
lret
mov
pop
sbb
data16
stos
dec
in
cmp
jge
inc
dec
mov
jnp
gs
add
jecxz
rcl
inc
call
jecxz
repz
mov
inc
adc
cmp
js
mov
int
jl
pop
xchg
in
mov
mov
dec
out
push
rorb
fdivs
dec
enter
mov
adc
cmpb
lcall
cmp
dec
fmuls
cli
ds
jle
call
xchg
pop
xchg
cli
jb
fstl
jp
mov
pop
js
mov
mov
nop
rcrl
call
into
push
sbbb
jae
popf
push
sti
subl
popa
sahf
inc
xor
inc
add
xchg
sbb
cmpsl
stc
mov
sub
scas
push
fwait
in
and
jne
in
mov
loopne
mov
xchg
test
inc
icebp
rolb
push
les
jno
cmp
pusha
pop
sbb
mov
arpl
lea
mov
lds
repnz
push
xchg
or
jno
iret
dec
mov
jg
jnp
mov
mov
adcl
adc
inc
mov
mov
push
vmovdqa
and
xor
insl
aas
pop
sub
cmp
mov
vcvtpd2udq
int3
mov
cmp
mov
ret
dec
mov
cwtl
stc
inc
adc
filds
xchg
addr16
lcall
ret
int
push
xchg
jle
outsl
mov
xlat
mov
loop
add
lea
test
mov
ja
push
or
adc
inc
and
aad
icebp
lds
or
shl
push
addr16
fwait
mov
scas
push
popa
addr16
sub
jo
adc
repnz
loop
push
mov
add
push
and
mov
sahf
lock
dec
sahf
jb
mov
add
scas
fistps
bound
ret
dec
fistps
lea
or
divb
dec
push
jp
dec
cmc
in
xor
das
push
xor
mov
pusha
pop
jae
jecxz
sbb
mov
mov
lahf
lds
divb
repnz
jbe
fst
mov
dec
or
or
dec
and
stc
or
jns
ret
movsl
fs
xor
cmp
pop
add
into
fstpl
push
jno
jle
jbe
lret
inc
jl
aad
fcompl
test
nop
push
and
test
sti
pop
shl
xor
pusha
repz
jg
lahf
pop
ljmp
push
inc
cmp
and
push
xor
cld
pop
inc
arpl
inc
or
mov
pushf
push
lea
fwait
call
sbb
sub
arpl
add
mov
cltd
adc
cs
mov
jnp
mov
pushf
jp
aam
stos
xchg
jmp
add
push
cwtl
and
test
mov
xor
cmp
pop
in
pop
mov
sbb
pop
cmpsb
sub
ljmp
push
cmp
mov
repz
jmp
in
cmc
rorb
adc
dec
iret
pop
add
out
xchg
ss
mov
sahf
cltd
pxor
stc
repz
imul
adc
incl
adc
ds
jbe
outsb
mov
mov
adc
inc
cmp
dec
imul
js
add
sbb
aad
cmpsl
mov
or
test
mov
xorb
or
aaa
inc
pop
and
mov
xor
pop
iret
sub
lods
fisubl
mov
jge
fcompl
mov
cmc
pushf
dec
xchg
mov
cmp
dec
lods
jle
test
aas
rcr
lahf
insl
mov
lods
fmull
rcrb
lods
xor
mov
jbe
xor
dec
in
add
repz
outsl
mov
mov
xchg
out
mov
xor
sarl
sbb
mov
daa
movsb
out
shrb
mov
xchg
and
repnz
mov
lods
adc
dec
add
mov
push
cmp
push
es
mov
mov
dec
xchg
push
inc
cmpsl
and
sahf
push
icebp
sub
push
xchg
out
push
scas
aad
int
adc
mov
mov
or
leave
test
xor
mov
pop
ds
insl
hlt
mov
adc
bound
nop
aas
or
aaa
cmp
leave
movb
sbb
add
dec
mov
xchg
adc
push
ret
daa
out
add
pop
mov
xchg
xchg
pop
int
in
mov
cs
dec
mov
bound
mov
je
rcrl
decl
lret
and
lar
cmp
nop
aad
pop
cld
or
adc
and
inc
jae
int
xchg
xchg
cld
mov
add
imul
cld
xchg
icebp
push
dec
loop
adc
jg
adc
in
dec
std
add
fiadds
out
and
movsl
adc
mov
jp
loopne
insb
dec
and
ficoml
aam
mov
aaa
add
xchg
out
sub
fmuls
adc
test
in
addr16
scas
inc
pop
call
sti
sub
lret
popf
adc
inc
add
mov
ja
push
push
lahf
adc
dec
es
mov
icebp
in
loopne
lds
xor
mov
js
ret
inc
push
orb
push
mov
and
ds
iret
mov
inc
and
repz
inc
sub
mov
and
test
scas
mov
lods
insb
or
add
popa
lahf
mov
incb
pop
test
push
shlb
pushl
cmp
loope
testb
aad
int3
data16
shr
push
test
mov
pop
aam
push
xor
mov
cmp
movsl
insb
push
and
enter
leave
cmpsb
pop
or
inc
bound
aad
aaa
lret
ret
nop
xchg
mov
dec
out
push
jge
dec
xchg
jb
popa
cmp
inc
out
stc
lret
inc
mov
inc
leave
sar
jmp
or
fbld
add
and
fisttpl
fsubr
aas
out
aas
add
lahf
fld
aas
sub
mov
lret
cmp
add
inc
push
outsl
das
lahf
jae
sub
pop
insb
mov
and
jo
ljmp
mov
fs
and
xor
iret
es
inc
out
xor
js
adc
in
push
inc
popa
stos
repnz
xchg
inc
and
lahf
add
aam
adc
adc
jge
daa
push
dec
mov
pusha
daa
mov
add
das
popf
xchg
pushf
decl
and
cs
rolb
filds
outsl
inc
xchg
pop
xor
ret
and
test
dec
aas
fldl
insb
jle
das
inc
sub
lcall
jb
cwtl
es
popf
push
add
aas
les
pop
mov
lock
pop
cmp
aas
movaps
xchg
mov
dec
iret
add
ret
rcl
fists
xor
daa
sbb
insb
mov
leave
push
and
loop
fisttps
mov
jne
mov
je
mov
and
adc
sbb
lods
dec
jae
xor
mov
push
jnp
addr16
mov
rclb
mov
mov
push
popf
cmc
in
daa
pop
xchg
scas
xor
pusha
jge
iret
lea
arpl
mov
adc
push
lret
nop
lcall
add
or
jp
lcall
jae
push
test
mov
or
decb
and
add
lods
cmp
cs
pop
test
imul
mov
push
push
iret
push
dec
cmpsl
push
sbb
ret
pop
xchg
sbb
push
push
mov
xor
xor
insb
sbbl
jle
push
push
mov
adc
pop
push
jge
mov
mov
enter
frstor
jl
lahf
and
sahf
mov
out
inc
xor
sub
dec
hlt
jbe
mov
mov
push
aam
pop
mov
arpl
pop
pop
push
das
add
inc
mov
mov
stc
imulb
adc
and
shl
faddl
pusha
inc
push
fcompl
ror
xor
ret
dec
sbb
ret
cmp
xchg
add
push
btc
jl
in
push
or
push
push
mov
sbb
pop
imul
push
xor
rolb
sahf
aaa
jae
mov
stos
mov
cs
push
insb
out
mov
pop
loopne
and
push
aaa
xchg
les
or
mov
and
pop
sbb
mov
xchg
mov
mov
fsubrs
inc
adcb
pmullw
and
mov
repz
rcrb
fptan
xor
sub
insb
dec
mov
mov
xchg
sbb
cmp
xchg
adc
ljmp
jecxz
add
test
mov
xlat
shr
sbb
xchg
sbb
adc
setl
fldl
sbb
lds
fwait
scas
pop
lods
push
ja
jbe
lea
cli
mov
sub
push
ja
stc
rsqrtps
mov
pop
iret
shll
mov
call
insl
mov
test
outsl
fwait
in
je
jl
fstps
sub
adc
test
ljmp
in
xor
in
cmp
cmc
stos
int
inc
lods
push
inc
xor
stos
popl
test
iret
gs
lds
and
movsb
jle
or
xor
adc
aas
cs
cmp
iret
push
and
lret
stos
nop
adc
dec
inc
fldcw
adc
jle
rcl
jl
jmp
lcall
mov
or
or
xchg
ret
push
in
adc
pop
out
dec
shll
shll
popf
push
jb
hlt
outsl
sub
shrb
sub
addr16
push
in
dec
into
jl
in
loopne
jae
pop
jo
mov
lods
ret
inc
pop
in
inc
jae
ret
test
add
mov
dec
rorb
repnz
mov
mov
sahf
inc
sbb
imul
lahf
popa
mov
inc
jbe
jnp
div
das
mov
push
sbbl
std
add
adc
int3
mov
jge
pop
jl
pop
adc
fadds
push
pop
mov
push
mov
shll
das
fs
push
push
cwtl
js
sbb
xor
cmp
int
mov
bound
adc
gs
sti
sti
xchg
xchg
aas
cmp
bsr
call
shl
rclb
ret
outsl
inc
mov
cmp
ret
cltd
fadd
or
mov
test
adc
test
jmp
fidivl
mov
lcall
adc
aad
in
les
xorl
fcoms
pop
sub
inc
inc
xor
repz
jns
and
cmpsl
inc
sbbb
mov
nop
fidivrl
add
dec
xchg
inc
andb
aad
push
mov
shl
jge
lret
rcr
adc
aad
stc
lds
mov
sbb
mov
pop
cmp
push
sbb
push
pop
mov
das
jle
jae
mov
mov
cltd
clc
or
cmp
out
adc
lock
imull
out
rclb
lahf
dec
add
fcmovnbe
jns
xor
jg
bound
negl
fdivrl
xchg
or
daa
inc
or
call
mov
pushl
aas
dec
push
jbe
dec
cs
push
xor
sbb
sub
dec
aam
into
xchg
js
repz
pop
andb
in
xor
loop
pminub
sub
dec
inc
loop
xchg
sub
jp
pushf
fdivrs
push
leave
test
mov
ret
add
into
popa
xor
hlt
das
insb
jb
or
cmp
and
nop
sub
adc
inc
arpl
popa
sub
inc
lret
stc
pop
mov
or
or
icebp
sub
subb
pop
inc
inc
dec
cmpsb
jne
mov
add
in
je
mov
or
in
rcll
xor
imul
int3
mov
lods
popf
pop
inc
jge
in
adc
popf
add
and
inc
int
xor
add
scas
xchg
push
aaa
cmc
xor
pop
cmp
test
and
std
pop
imul
add
xor
shll
xor
sbb
add
movsb
mov
mov
leave
lock
loope
mov
sub
add
mov
movsl
and
mov
jo
mov
push
test
iret
stos
pop
push
push
dec
js
imul
cmp
xchg
int3
lret
addr16
outsb
mov
in
cmp
std
mov
sub
and
test
fldt
repz
adc
cld
aaa
sbb
push
in
jge
pusha
jge
addb
push
xlat
adc
stos
add
pusha
stc
dec
in
inc
outsb
imul
fbld
inc
mov
loope
mov
lret
test
pop
shl
add
pop
cmp
fwait
inc
sti
das
stos
repz
std
pusha
push
jl
pop
leave
pop
pop
out
dec
inc
daa
xor
fldl
inc
sbb
xor
pusha
jnp
mov
in
add
adc
test
jle
das
rcl
lahf
dec
test
shll
js
sbb
aam
lcall
gs
leave
mov
mov
pop
pop
testl
std
jo
inc
add
jmp
jmp
pusha
adc
mov
int
scas
repnz
ret
xor
push
jecxz
cmp
cltd
cmp
mov
mov
ret
cmpl
push
ficoms
movsb
cmc
out
pop
lods
in
cmp
out
ret
rolb
add
in
or
cmpsl
pop
xchg
mov
adc
pushf
mov
jne
xchg
cli
in
test
pop
xchg
outsb
and
cwtl
mov
imul
sbb
xor
dec
int
push
xchg
cmp
or
adcb
push
notl
xchg
scas
loope
fcoml
jne
inc
pop
push
mov
dec
ds
mov
push
pop
sbb
mov
inc
mov
mov
xor
fisttpll
dec
repz
std
popf
dec
rcrb
cltd
mov
xlat
inc
mov
idivb
jnp
roll
pop
lea
enter
jbe
add
or
fcmovne
jno
jg
mov
inc
in
or
lahf
dec
clc
xchg
or
insl
les
and
dec
jbe
dec
scas
or
or
fbld
fnstsw
add
pop
aam
sub
ja
jle
dec
loop
clc
ss
jns
jge
cwtl
fldenv
xchg
ja
fisubrl
enter
out
aam
cli
call
insl
mov
pinsrw
add
cmc
pop
add
popf
push
sahf
insb
and
mov
sbb
test
mov
xor
inc
cmp
outsb
loopne
loope
test
jl
mov
mov
mov
xchg
aaa
rolb
xchg
inc
jbe
int3
lahf
jnp
lods
mov
pop
cs
sbb
pusha
rolb
cld
adc
pop
sarb
and
fld1
dec
inc
es
push
sarl
jp
cmp
pushf
jne
xchg
mov
jbe
cmp
out
fwait
sub
push
dec
xor
xchg
pop
mov
cltd
add
sub
mov
cld
push
test
loop
lret
sahf
or
sbb
add
xchg
push
sbb
pop
je
cmp
lea
cmp
nop
push
or
out
mov
push
cmc
xor
idivl
je
out
adc
js
stos
std
push
and
inc
out
pop
pusha
rcl
push
lcall
ja
movsb
jecxz
push
ret
insl
add
and
lahf
in
aad
hlt
push
addl
xchg
mov
inc
dec
test
jne
cld
in
mov
rolb
xor
sub
fisubrl
xor
lods
inc
lcall
lock
jle
cli
loopne
sar
or
jbe
fs
sub
inc
inc
insl
xor
push
imul
sti
xor
add
aaa
insl
mov
out
mov
fiadds
insl
mov
push
and
push
movl
or
add
push
add
adc
xchg
test
hlt
mov
cmp
pop
dec
std
repnz
xchg
sarl
dec
loop
or
inc
sahf
lahf
or
sub
notl
data16
fimull
sbb
xchg
mov
into
fistps
add
scas
mov
add
hlt
es
or
loop
icebp
inc
mov
inc
popf
pop
and
push
lahf
out
pop
int
dec
xor
add
pusha
dec
pop
fs
add
mov
and
subb
sbb
in
mov
pop
enter
sahf
or
cmpl
call
or
lret
add
xchg
xorl
mov
push
adc
pop
in
loop
adc
inc
adc
or
jle
mov
mov
push
cld
das
fsubl
dec
cmp
hlt
mov
repz
sahf
ja
mov
into
je
adc
repz
daa
data16
mov
bound
mov
and
rol
sub
jle
jb
add
push
dec
sub
test
ret
stos
and
sahf
fcoms
push
hlt
xor
das
mov
push
in
je
and
jp
and
into
lods
mov
and
nop
pusha
mov
cltd
cmpb
sub
push
lds
aaa
stc
popa
add
mov
add
inc
shll
mov
inc
pusha
jno
cmp
push
aas
loop
aaa
and
rcpps
insb
mov
cmp
dec
shl
mov
fcomip
xor
mov
out
lahf
push
pop
pop
add
pop
subl
jp
and
xchg
int3
addr16
cmc
jb
sub
imul
mov
sti
repnz
je
jmp
fs
rolb
xor
cmp
inc
add
lret
mov
mov
mull
lret
adc
add
dec
xchg
mov
sbb
fmull
rolb
inc
cli
cli
cmc
pop
pop
mov
sbb
or
or
cmp
leave
enter
repnz
or
fadds
cmp
fisttps
cmp
jecxz
in
jbe
rorl
icebp
adc
fldl
push
insl
mov
jg
jmp
xor
jne
lea
jno
aad
add
adc
mov
mov
aaa
mov
xchg
cmp
gs
mov
mov
int
stos
outsb
cmc
in
int3
nop
clc
lcall
aas
outsl
aas
aaa
xor
stos
shr
movb
lret
jnp
sbb
int
fs
or
int
in
cli
scas
sub
jle
jne
icebp
je
sub
xor
xchg
outsl
jb
std
cmpsb
xorl
clc
imull
shrl
push
ds
xor
mov
ficoml
mov
jo
jmp
ret
pop
aad
je
mov
scas
out
pop
push
popf
xchg
lods
fldt
pop
cld
insb
pop
insb
push
mov
aad
mov
xor
dec
fst
and
leave
ja
addl
lret
cmpsb
and
add
push
mov
lods
dec
lahf
jp
repnz
rorl
data16
int
gs
mov
cmp
jge
repnz
pop
jle
cmp
inc
iret
mov
std
sbb
pop
or
in
xchg
mov
jle
push
push
mov
add
test
pop
xor
jne
jecxz
push
cmpsl
jp
mov
popa
mov
adc
xlat
inc
adc
in
fistps
data16
rol
cwtl
or
push
cli
inc
jae
jmp
ret
xchg
iret
dec
mov
lds
cmp
or
jl
cmp
mov
add
mov
xchg
or
in
cwtl
inc
scas
lcall
sbb
mov
sub
cmpsl
jmp
dec
inc
test
jns
rcrb
xchg
sbb
outsb
push
and
in
jne
shrl
dec
or
les
loop
lds
and
jg
dec
pop
pop
push
and
sbb
lret
ffreep
mov
xor
bound
bound
fbstp
in
js
xchg
negl
je
das
cmp
mov
cmp
insl
sub
add
or
movsl
jnp
mov
sbb
lea
jne
xchg
lds
push
dec
adc
add
test
loope
int
int
sub
push
sub
jp
out
dec
in
push
add
hlt
and
jg
fldt
xchg
mov
int3
add
xchg
cmpsl
sub
adc
sub
fwait
shlb
cmp
in
mov
rcrb
pop
cmp
xchg
mov
data16
ja
lods
jg
lahf
xlat
mov
xchg
cwtl
out
jne
jmp
xchg
jns
inc
jnp
mov
sbb
arpl
jo
mov
es
je
pop
xchg
xor
std
push
dec
scas
rol
jne
jmp
test
je
mov
movsl
inc
movsb
mov
push
out
mov
cmp
insl
subb
daa
ret
jns
mov
mov
fwait
cmp
insl
pop
and
test
jg
arpl
push
or
movsb
rorb
push
aam
mov
pop
jge
cli
push
or
sbbl
stos
imul
sub
inc
xlat
add
sub
push
and
push
mov
adc
gs
pop
push
shlb
fimull
fldl
fdivs
scas
mov
jg
call
hlt
sbbl
ja
adc
cmpsb
rorl
adc
cs
stos
je
in
pop
sbbl
push
adc
aad
es
pushl
jns
dec
jne
popf
movsl
xchg
in
das
cmpb
jp
notb
mov
fucomi
clc
sub
mov
outsl
cmpsl
ja
xchg
call
repz
mov
mov
jg
lret
shll
test
cmp
pushf
mov
xor
test
add
bound
cmp
pop
lea
mov
gs
mov
gs
movsb
inc
jg
pushf
xor
cmp
xor
jmp
add
jae
sbb
push
mov
insb
or
subb
lret
jne
xchg
push
iret
movsb
adc
sub
push
mov
adcb
movl
movsb
lcall
cmp
outsb
loopne
clc
or
test
rcr
hlt
or
std
adc
cmc
cmp
jo
cmc
push
jg
push
fimuls
sub
scas
mov
xlat
adc
and
push
pop
jl
cld
daa
mov
xchg
mov
jo
mov
adc
insl
rol
ds
sub
jnp
sub
ja
pushf
les
loop
mov
fwait
dec
mov
mov
subl
inc
cmp
add
mov
add
inc
push
mov
cs
imul
and
cmp
sbb
push
sub
loope
pop
cmp
jns
pop
jmp
jb
lods
fcoml
push
movsb
ja
jno
mov
cwtl
int
mov
pop
inc
movsb
xchg
gs
aad
out
ret
push
shlb
outsl
sti
jp
repnz
repz
sub
or
lcall
inc
ret
xchg
pusha
inc
fcmovnu
lods
mov
icebp
xchg
adc
add
fs
cwtl
rolb
pusha
push
jge
sbb
inc
pop
jnp
push
call
sbb
out
xor
sysexit
decb
and
mov
out
scas
rcrb
nop
enter
pandn
outsl
mov
ficompl
rorb
jns
pop
mov
xchg
in
mov
pop
andb
mov
adcb
out
cmpsb
mov
xchg
fildll
xlat
push
push
and
dec
adc
mov
dec
add
sbb
mov
xor
into
pop
push
sbb
mov
push
mov
out
mov
xchg
jnp
sub
jb
pop
std
shl
mov
ljmp
gs
clc
orl
mov
lahf
dec
jl
and
repnz
push
xor
adc
jge
xor
xchg
in
sub
push
mov
pop
test
adc
and
mov
dec
sbb
sahf
aas
mov
out
xchg
js
adc
xchg
repz
cmp
cmc
add
mov
pop
add
adc
mov
out
test
ficomps
push
mov
bound
xchg
imul
sub
push
pop
jne
inc
mov
xchg
pop
int3
pusha
xor
pop
xor
add
push
and
je
cmp
dec
push
cmpsb
xchg
push
insl
imul
pop
out
je
push
bswap
mov
je
jne
outsb
enter
inc
jnp
test
inc
xlat
inc
je
mov
popf
mov
mov
call
cmpsl
xor
push
pop
cmpb
xchg
sahf
outsl
lds
jp
sbb
xor
es
loop
fwait
mov
mov
pop
mov
jmp
fsubrp
add
inc
outsb
mov
pop
sub
add
js
push
js
in
hlt
fnstcw
test
in
jg
push
test
hlt
sbb
jbe
xlat
sub
add
push
mov
inc
inc
ds
fsubrl
addl
and
into
leave
inc
lods
mov
adc
lods
lods
jb
cmp
aad
or
cmpsl
ss
popa
push
test
mov
and
lds
dec
mov
icebp
cmp
stos
fisubrs
mov
mov
cld
dec
inc
mov
cmp
xor
repnz
cmp
push
mov
in
fnstenv
xchg
aam
loop
out
mov
sub
inc
sub
push
sub
xor
cwtl
cmp
shll
test
daa
inc
lea
lea
imul
call
mov
or
and
add
pop
mov
pusha
jle
push
in
shll
push
das
mul
int3
in
and
xchg
lods
imul
adc
mov
in
ja
xor
and
xor
push
lret
mov
inc
push
pop
lods
sbb
std
aaa
das
pop
xchg
add
daa
inc
lods
icebp
in
loopne
mov
dec
sahf
out
test
sbb
ret
sub
test
jle
jne
in
filds
xchg
pop
fsubr
movsb
lahf
add
sub
push
push
fdivrp
push
icebp
outsb
cmp
lret
idivb
imul
test
sbb
mov
xor
in
and
ret
mov
outsl
clc
add
mov
stos
cld
adc
inc
das
mov
push
adc
jle
aam
shr
and
imul
push
ret
jge
xchg
aas
lcall
aad
push
jnp
movsl
imul
pop
jl
cs
fs
mov
fsubp
push
mov
out
ss
aad
xor
adc
inc
cli
frstor
jge
out
dec
into
cmp
fwait
and
jle
test
ljmp
push
jns
loop
clc
cmp
xor
add
stos
aas
mov
out
iret
ss
out
iret
clc
or
in
in
shr
not
add
sub
jno
mov
mov
xchg
xchg
pop
push
in
and
popa
push
and
jge
stc
ds
outsl
mov
ss
inc
add
mov
dec
push
pop
or
in
dec
lahf
jle
mov
jge
stos
inc
add
in
lea
icebp
punpckldq
push
fbstp
ss
jmp
adc
into
int
sub
jnp
fistps
cmpsb
rcll
std
or
stos
jns
stc
mov
les
xor
push
sti
jb
mov
incl
jl
out
xchg
mov
cmpsb
or
test
inc
pop
test
in
cmpsl
mov
fimull
fimuls
cwtl
push
rcr
pop
rcll
mov
jle
dec
imul
or
or
cmp
sbb
push
or
mov
or
test
icebp
mov
aam
pop
xchg
cmp
pop
lods
inc
scas
test
push
mov
lds
aad
and
scas
inc
fsubrl
sub
insb
lods
sbb
shl
mov
pop
and
push
loope
or
pop
jmp
pushf
cmp
push
imul
and
cmc
fwait
push
scas
lds
inc
xchg
insb
dec
mov
dec
popa
mov
test
imul
or
outsb
lcall
mov
popa
leave
xlat
mov
jge
adc
push
dec
lock
cmpsb
imul
cmp
cmp
je
movsl
mov
add
dec
fidivrl
pop
addl
mov
pop
and
fcmovnbe
push
lods
popf
xchg
add
add
sub
mov
and
add
pop
mov
icebp
addr16
xchg
stos
ret
dec
push
push
mov
or
mov
mov
lahf
lcall
cmp
arpl
loope
inc
cld
lahf
les
mov
xor
fistpl
scas
rorl
jmp
insb
jmp
lahf
gs
pusha
incb
dec
xchg
sub
es
ja
rcrl
sbb
in
and
movsl
lret
call
es
add
fsubrl
cmp
orl
jae
rorl
xor
adc
xor
push
sti
jno,pt
cmp
push
pop
fs
mov
dec
ss
mov
mov
loopne
out
arpl
lret
xchg
int3
jne
in
jle
adc
fstl
jo
gs
stc
cmp
aas
out
xor
fistpll
popl
popf
stos
imul
fidivrs
xchg
call
in
inc
add
xor
leave
popf
jns
ret
mov
sub
cs
hlt
jle
push
and
sbb
mov
push
pop
addr16
xor
dec
lcall
add
mov
in
icebp
dec
mov
dec
xchg
movsl
lahf
lds
mov
mov
pop
push
xchg
mov
pop
add
lods
xchg
jl
fwait
mov
jns
cld
gs
mov
xchg
and
insl
out
roll
pop
test
cmpsb
push
cmpsl
clc
jbe
dec
lea
idivb
jl
mov
rcrl
lods
and
popa
sbb
inc
cmp
repnz
dec
push
out
jbe
pop
addl
sbb
or
popa
xchg
add
jmp
popf
mov
pop
int
add
pusha
icebp
cwtl
lods
pop
fists
inc
fsubrl
jecxz
sti
lahf
pop
xchg
mov
imul
or
bound
rcrl
in
cli
push
cld
sub
dec
xor
mov
dec
pop
fldenv
push
sbb
cs
push
sub
std
test
cmp
ret
jnp
sbb
sbb
xchg
shll
test
aam
loop
adc
push
sbb
xor
push
rcl
ds
fwait
hlt
out
jge
shrb
mov
push
lods
mov
push
cmp
jp
xchg
cmc
add
divl
faddl
jle
fadd
js
push
dec
mov
mov
je
jbe
dec
xchg
stos
push
dec
int
ror
dec
xchg
scas
lods
inc
mov
popa
sbb
push
cmp
xchg
stos
lods
dec
inc
test
aad
dec
jle
xchg
aad
frstor
ds
jo
icebp
mov
fwait
push
mov
aas
test
pop
cmp
jmp
in
outsl
cmp
rolb
enter
out
in
ja
push
mov
jae
leave
rorb
pop
inc
sbb
call
lret
xchg
add
sbb
gs
sub
rorb
cltd
outsb
enter
fdiv
adc
sbb
pusha
rep
bound
mov
cmpsl
popf
mov
dec
jp
inc
jo
or
jl
mov
loopne
mov
insb
xor
insb
movb
xor
out
xchg
pop
or
std
out
je
and
mov
push
mov
mov
cmc
test
fsubs
int
sarl
loop
cmpsl
jne
adc
inc
cmc
pop
jno
incb
out
cli
cwtl
inc
ja
jbe
sub
add
cwtl
inc
mov
aas
sub
or
stos
cli
fnsave
int
and
sbbl
adc
aas
ret
test
push
jb
pop
std
jle
push
jp
inc
mov
insb
inc
jno
dec
cld
lods
pop
adc
jmp
cmc
fistpll
sub
ffree
xchg
sub
mov
jo
pop
ffreep
fildl
popa
mov
xchg
pushw
dec
scas
push
and
les
push
and
loope
pop
jno
jl
aad
leave
mov
push
stos
mov
dec
sti
sub
ficomps
sub
jle
adc
roll
jl
stos
ja
test
dec
cmpsl
es
sahf
push
mov
xchg
lds
push
xchg
rorb
mov
mov
and
out
cmpsl
cmp
sbb
xor
ret
arpl
rcrl
xchg
bound
add
lods
pop
lret
movsl
icebp
cwtl
sti
jecxz
mov
sahf
mov
jne
movsb
repnz
push
pop
dec
fsubrs
in
jae
cmp
int
int
hlt
pop
fidivrs
je
mov
mov
mov
dec
push
mov
sub
mov
cmp
in
fistps
cmp
push
std
je
lret
ret
and
dec
jnp
push
pop
cmpsl
cltd
push
addr16
xchg
push
inc
pop
pop
sub
dec
mov
mov
je
rclb
movsl
in
and
mov
nop
xlat
frstor
cltd
insb
adcb
movsl
pop
lcall
dec
cwtl
movsl
notb
daa
sub
aad
or
lgs
jno
mov
mov
clc
cmp
jb
aad
sub
icebp
mov
dec
mov
jae
jo
pop
roll
add
stos
pop
sbb
sbb
adc
add
aaa
loop
xchg
mov
jmp
pushf
ljmp
imul
push
mov
popf
sbbb
addr16
icebp
inc
icebp
mov
jne
cld
or
dec
pop
and
and
dec
clc
test
mov
mov
xor
into
dec
push
int3
fcomps
sub
mov
out
add
repz
mov
sbb
fldt
ret
sbb
mov
cmp
dec
adc
mov
fcoml
mov
jp
sub
cmp
filds
inc
mov
and
fcomip
call
sbb
jmp
push
jg
pop
jo
subl
mov
mov
sbb
pop
mov
popf
shrb
imul
cmp
add
cmp
mov
mov
inc
cmp
cltd
outsl
and
ret
jmp
mov
sti
jg
icebp
daa
test
inc
je
inc
lds
mov
insb
call
pop
pop
stos
lds
filds
fs
out
pop
sbb
sbb
outsl
add
arpl
cmc
jae
loope
inc
push
mov
mov
jmp
std
mov
xchg
mov
out
jle
cmpsb
out
test
out
nop
shlb
ret
jbe
sub
mov
pop
repz
fisubs
test
sbb
push
cli
push
lods
pop
psubb
and
and
aas
push
cmp
stos
or
rcrb
mov
inc
jle
add
mov
jmp
fmull
or
push
mov
flds
out
dec
outsb
adc
imul
insl
fadd
cmp
mov
jmp
sbb
sbb
out
pop
jmp
outsl
jo
push
xchg
scas
scas
mov
into
cmc
popf
les
xchg
jno
mov
xchg
adc
loope,pn
mov
movsl
mov
popf
mov
loope
lods
or
fmuls
xor
push
stos
mov
bound
add
les
adc
push
push
mov
push
mov
notb
cmp
cmpl
daa
mov
sbb
and
ret
call
mov
hlt
push
outsl
sub
cs
insl
setb
add
fs
loope
pop
mov
xor
imul
in
mov
iret
adc
ja
mov
xchg
xchg
mov
xchg
aam
ret
rcrb
in
mov
sub
jbe
lret
mov
cmp
insl
lods
inc
cmpsb
ja
sbb
out
pop
daa
mov
fcompl
or
in
mov
inc
dec
popf
sub
cmpsb
popa
lret
cmc
mov
push
cs
fnsave
lock
add
and
sti
push
push
subl
dec
stos
movsb
test
test
xchg
movsl
jecxz
inc
sbb
pop
and
inc
decl
mov
xor
push
xor
orb
sub
ret
inc
outsb
idivl
out
pusha
push
xor
push
and
push
and
cmpsl
add
sub
inc
stos
in
pop
loope
testl
popf
inc
cltd
imul
lret
add
pop
bound
push
in
dec
xchg
cmp
jbe
shlb
ds
mov
fistpll
xchg
sbb
mov
sub
xor
mov
dec
dec
loop
jmp
lods
fbld
pop
sub
mov
adc
xchg
lods
sbb
push
mov
xchg
lret
jp
xlat
sub
xchg
cli
pop
loope
cmc
cmc
xchg
roll
adcl
pop
iret
fcmovbe
jecxz
push
pop
push
jg
fstpl
adc
fistl
je
or
xchg
cmpl
repz
rorb
pop
pop
int3
or
mov
popf
ja
lahf
dec
sti
mov
imul
ss
pushf
inc
fwait
jge
mov
shrb
int3
mov
mov
xchg
dec
test
cmp
cld
lret
int3
sub
fiaddl
mov
ficomps
sahf
push
aaa
xlat
cmp
mov
rolb
add
add
cmpsb
adc
sub
jle
jne
inc
xor
cmp
or
cmp
jne
mov
ror
push
shlb
jne
ret
pop
push
gs
cmp
sub
in
xchg
scas
dec
sbb
jnp,pn
fbld
int3
jmp
pop
push
loop
jge
fcmovu
popa
cmpsb
test
adc
add
cmpsb
xor
jl
lods
call
mov
stc
xor
mov
jp
pushf
add
pop
push
jb
dec
and
jge
jb
popa
lahf
sbb
int
mov
xchg
rcrl
scas
pop
ss
roll
jno,pn
loop
xor
leave
es
sub
int
pop
push
dec
jle
std
sbb
inc
inc
popa
fsub
push
mull
lea
nop
fistpll
js
cli
mull
and
xchg
fldl
js
pop
scas
sub
test
jl
inc
pop
inc
std
push
pop
and
xchg
movsl
jno
push
mov
mov
das
movsb
mov
sar
aas
outsb
or
pusha
jge
mov
xorl
sbb
mov
jl
scas
push
js
out
pop
out
mov
mov
xchg
mov
or
lods
jg
lret
in
ficoms
dec
jns
ret
jecxz
jmp
inc
inc
mov
sub
stc
add
or
pop
loopne
jg
mov
adc
loope
or
pop
mov
or
sub
mov
cld
cmpsb
test
pushf
mov
adc
imul
mov
shrl
arpl
gs
xor
adc
fldt
sub
mov
mov
iret
jg
fsubp
outsb
fnsave
dec
sbb
ds
dec
sarl
lock
cmc
ljmp
jbe
push
push
repnz
dec
notb
cmp
push
inc
int
push
cld
jae
xchg
dec
xchg
push
or
xor
sar
cmpl
push
insl
fbstp
push
sbb
sbbb
mov
adc
imul
jmp
imul
das
sti
shll
sbb
subl
dec
icebp
call
dec
inc
std
push
cwtl
gs
insl
outsl
mov
loop
mov
ss
push
cmpsl
mov
push
cmpsl
ret
decb
lds
push
push
imull
loop
pop
rcr
add
dec
jnp
and
or
add
inc
push
out
or
femms
fbld
scas
push
ja
in
jp
aas
cmp
adc
aam
and
ret
xchg
and
mov
icebp
mov
pushf
aas
or
outsb
cmp
fs
mov
inc
xchg
jmp
fs
mov
outsb
lret
int
push
push
adc
dec
leave
fsubrl
fmulp
mov
shrl
shll
adc
mov
pop
push
hlt
or
test
or
mov
incl
adc
dec
gs
mov
push
cmp
cmp
testl
or
jmp
cmp
iret
in
push
sbb
bound
incl
mov
inc
fadd
fcmovnb
fdivr
int3
mov
cmp
shlb
loopne
popf
jns
insb
pop
dec
les
imull
gs
pop
mov
jle
cwtl
insb
sahf
sub
jmp
lret
sbb
cs
orl
pop
inc
or
mov
add
pushf
in
mov
jecxz
add
pop
addr16
mov
pop
les
mov
xor
adc
jge
stos
test
arpl
outsl
mov
fsubs
popf
cmp
xor
mov
or
rcr
jge
jae
or
loope
mov
out
or
fcom
push
mov
push
jmp
jbe
shlb
popf
pop
dec
std
xchg
mov
mov
test
lret
mov
and
stc
fistl
adc
fldl
fs
arpl
aaa
adc
mov
shll
add
pop
cmc
shrb
das
xchg
add
ljmp
repz
jle
and
push
cltd
ret
push
jle
push
cmpsl
aaa
imul
push
popa
sbb
mov
dec
and
sahf
mov
dec
xor
mov
jge
xlat
pusha
sbb
stc
into
outsb
outsl
fs
sahf
pushaw
dec
loopne
or
es
mov
inc
in
xor
bound
cld
loopne
das
outsl
insl
jl
cmpsb
add
jnp
bound
ja
mov
dec
adc
cs
jmp
cmp
jnp
and
loope
and
jecxz
les
inc
repz
fmuls
mov
icebp
scas
arpl
sti
insb
icebp
call
sahf
sub
leave
inc
in
repz
cmc
inc
lds
or
mov
ret
sahf
mov
lea
inc
loope
add
xorb
cmp
dec
jnp
fistpll
add
push
icebp
loope
mov
inc
jne
pop
dec
cmp
sbb
mov
dec
arpl
imul
push
adc
jg
shrl
popf
les
cmp
nop
adc
mov
dec
scas
loopne
aam
sub
nop
mov
ficomps
cld
clc
cmp
out
xor
add
inc
fwait
outsl
push
xor
mov
mov
outsb
addb
or
push
jmp
jnp
mov
insl
jmp
add
les
mov
mov
adc
repz
sub
fadd
arpl
sub
outsb
arpl
mov
call
adc
mov
jecxz
out
xor
mov
mov
sbb
insl
shll
xchg
pop
negl
faddl
push
mov
jno
mov
jg
inc
aad
add
mov
clc
pop
jnp
jb
and
push
push
sbb
jo
push
stos
xchg
aas
int
popa
xchg
mov
or
cmp
jmp
adc
filds
movsb
and
adc
daa
out
jmp
inc
xchg
xchg
xor
mov
or
adc
jb
sub
mov
inc
jnp
ljmp
mov
lods
lds
mov
adc
mov
sub
ja
ljmp
imul
lahf
pop
addl
fldln2
xlat
pop
sub
imul
aas
xchg
sbb
or
ret
adc
sbb
cmpsl
xchg
cmp
stos
ficompl
push
sub
stc
and
dec
cmpsb
xchg
sub
mov
outsb
mov
leave
iret
mov
or
pop
or
cli
cmp
or
xchg
dec
sub
jecxz
stos
sub
add
or
jecxz
push
mov
test
sub
fidivrl
pop
pop
in
subl
idivb
mov
cmp
xor
pop
out
pop
push
pop
lret
out
imulb
add
nop
mov
mov
add
xor
mov
ljmp
adc
sbb
nop
mov
arpl
push
jge
inc
pop
sbb
pop
add
cs
sub
pop
adc
pop
ja
xchg
ss
xlat
cmc
int3
xchg
fidivs
add
jg
push
cmp
lcall
cmp
xchg
add
sub
xchg
bound
lahf
int3
sar
ja
rclb
inc
dec
and
pop
icebp
push
inc
idiv
test
adc
imul
shl
lret
pop
mov
sub
out
xorl
mov
insb
jp
sar
in
push
lea
mov
or
push
fisubs
iret
mov
xchg
jge
and
and
lret
inc
mov
sahf
xchg
sbb
sahf
mull
js
pop
fsubs
sbb
cwtl
dec
xlat
xchg
jg
pop
pop
lret
mov
aad
lss
jmp
lock
cld
and
fwait
es
lret
pop
ss
call
push
leave
ja
shrl
lret
sbbb
jne
cli
pop
xor
sub
cmp
push
push
test
stos
dec
insl
inc
or
dec
out
or
inc
in
mov
push
jge
call
mov
xor
mov
movsl
es
fsubs
pop
pop
and
push
fiaddl
dec
pop
cmp
pop
daa
std
cltd
cmp
push
push
xchg
ds
inc
or
andl
push
js
ficomps
dec
pop
lods
pushf
mov
sub
popf
lea
fcoml
ljmp
arpl
mov
or
inc
xor
lret
xchg
jns
int
rcll
not
mov
std
push
cmp
ss
and
cmp
pop
xchg
push
fwait
in
xchg
movsl
push
dec
jae
jg
mov
jle
jmp
dec
jecxz
inc
iret
into
mov
sbb
hlt
xor
push
sbb
dec
xor
in
mov
push
dec
aaa
fwait
inc
push
cmpsl
sbb
out
sti
rorl
inc
xor
mov
mov
push
mov
mov
push
xor
jecxz
xchg
rcl
std
inc
frstor
sub
and
cmpsl
sbb
sar
jmp
dec
scas
outsl
and
into
loop
ds
fs
jns
enter
stos
mov
or
or
arpl
jg
push
imull
movsl
movsl
call
fstp
and
inc
insb
fs
aam
and
imull
dec
cli
cmc
cmpsl
mov
daa
fisttps
mov
inc
loope
mov
mov
mul
aad
mov
shl
jecxz
sbb
or
mov
cmp
xor
mov
and
mov
and
dec
imul
xchg
add
lods
leave
arpl
dec
mov
iret
dec
mov
daa
xor
jnp
inc
decb
push
aam
cmp
push
nop
push
and
out
scas
inc
add
test
daa
xor
aam
imul
cmc
ret
movsl
mov
pop
jb
daa
mov
adc
adc
xchg
cmp
loope
pop
and
repnz
cltd
aam
orb
pop
xor
mov
addb
iret
mov
xor
lret
rcl
outsb
cld
push
popa
cwtl
cmp
sahf
sbb
dec
sub
or
cmp
fadds
int
repnz
mov
icebp
pusha
out
push
cmc
daa
fcompl
pop
dec
pop
or
sub
jno
mov
fwait
nop
adc
inc
xor
pop
in
jb
daa
aam
aam
pusha
jno
out
sub
imull
add
jo
and
and
xchg
addr16
ret
popf
push
mov
lds
data16
clc
and
add
popf
cmpl
loop
inc
icebp
outsl
fisttps
in
scas
in
arpl
jge
ret
stos
cld
sti
jmp
xchg
repz
rcr
mov
cs
shl
arpl
das
dec
push
ss
repz
xor
pop
stos
cltd
cmc
sarl
scas
xchg
jnp
shrb
sbb
ror
insl
mov
xor
jb
mov
dec
and
xchg
sub
and
fadd
dec
jnp
mov
ffreep
rclb
xchg
dec
insb
fnsave
xor
and
push
loop
stos
cld
or
adc
cmpsl
sub
les
adc
addl
xor
scas
dec
lods
ljmp
arpl
mov
mov
das
sub
ficoml
ss
test
int3
negb
sahf
and
or
cmpsb
pop
js
mov
and
cli
pop
inc
push
xchg
mov
or
jbe
int3
iret
add
lds
xchg
out
push
sahf
jmp
adc
addl
test
or
push
mov
adc
and
lret
jo
jg
js
pop
and
sub
jno
cs
jne
scas
jp
mov
xor
neg
dec
cmp
lret
pop
inc
xor
ds
cmp
add
cmp
test
fwait
scas
dec
add
xchg
in
loope
mov
stos
mov
add
jo
shlb
repz
js
cwtl
lds
movsl
outsb
push
jae
mov
jnp
bound
aam
inc
lock
int
adc
insb
dec
imul
ret
outsl
cld
push
loopne
in
inc
jp
and
mov
mov
stc
daa
add
xchg
je
cli
xchg
arpl
dec
int
mov
es
hlt
stc
and
sbb
stos
loop
scas
mov
xor
aaa
in
imul
lods
sub
mov
jp
push
lret
iret
das
packsswb
imul
jmp
xor
fwait
push
jmp
add
fnstenv
inc
mov
cld
mov
xlat
jg
fnstcw
inc
hlt
dec
inc
mov
or
in
pop
xor
test
pusha
or
aad
js
fistl
mov
faddl
loop
fnstenv
dec
popa
sbb
stc
fidivrs
mov
dec
jnp
daa
es
aam
test
bound
fists
xchg
cmp
pop
cmc
xchg
pusha
jns
aas
sbb
rolb
in
xchg
add
fdivrs
jg
aam
cwtl
repz
or
rcrb
mov
imul
shll
mov
cmp
push
or
pop
dec
subl
test
test
inc
push
outsl
mulb
femms
inc
int
xor
mov
ja
push
test
jp
push
call
mov
scas
fdivrp
adc
mov
divl
scas
test
frstor
mov
push
in
xor
out
pop
pop
xor
shrb
pop
sub
jp
test
mov
sbb
cmp
fsts
incb
mov
mov
mov
and
jns
jbe
add
sub
lock
mov
sbb
fwait
cmpsl
cmp
cmpb
stos
xchg
push
pop
mov
fnstsw
jb
push
jmp
adc
or
lds
int
jp
shlb
test
ja
mov
jl
add
xchg
call
imul
mov
xor
sbb
ror
xlat
out
mov
mov
dec
mov
mov
mov
lcall
add
jbe
es
xor
add
push
push
jo
mov
sahf
mov
popa
roll
aas
jl
movsl
and
dec
leave
mov
mov
sub
insb
jno
push
pop
test
ds
test
incb
and
imul
pop
jmp
sarl
pushf
iret
movsb
sub
add
popf
adc
push
stos
push
pop
hlt
pop
jns
movsb
loope
and
outsb
aad
adc
xor
js
adc
lods
aam
or
pop
dec
add
jo
add
push
pop
mov
enter
mov
std
lret
or
int
adc
mov
and
mov
mov
mov
push
movsl
es
inc
mov
xorb
rorb
je
ds
jmp
lods
scas
icebp
cli
cltd
or
pop
cmpsb
xor
add
addl
push
push
repnz
test
js
shrl
push
cwtl
pop
je
and
sbb
loop
dec
or
add
sub
movsb
or
push
arpl
xchg
mov
adc
out
xor
into
in
jnp
pop
mov
sub
out
fwait
xchg
xchg
pop
sbb
pop
gs
daa
and
sub
out
lret
inc
insb
jae,pt
cmp
das
mov
sbbb
ret
aad
sub
cltd
js
inc
mov
xchg
popa
mov
pop
inc
xchg
push
sub
lods
mov
xchg
sbb
mov
cmp
gs
lea
cs
ret
aas
mov
dec
sti
loopne
inc
xor
daa
ret
sub
shlb
inc
jmp
jmp
repnz
xchg
or
cmp
mov
xchg
xor
mov
ret
xor
sbb
sub
sbb
hlt
popa
aam
stc
arpl
loopnew
loopne
or
dec
outsb
xchg
mov
out
enter
jo
fsubrl
or
ret
xchg
xchg
mov
mov
es
adc
lret
movsb
gs
push
push
call
dec
jmp
pop
jno
pop
add
test
xchg
adc
stos
sbbb
and
scas
ret
mov
pop
cwtl
or
cmp
cltd
pusha
ja
insl
cmpsl
rclb
sub
xchg
pop
leave
sbb
mov
mov
dec
pop
movsb
cld
xchg
inc
xchg
mov
mov
mov
call
fs
mov
jmp
push
iret
sbb
sbbl
push
jle
inc
inc
repnz
loope
std
insl
inc
shll
dec
add
sub
push
mov
sub
lcall
mov
imul
les
jo
lret
mov
out
add
sbb
lods
mov
test
mov
and
orl
andl
dec
iret
out
mov
dec
add
lcall
push
or
or
bound
orl
push
jbe
xchg
call
rol
or
pop
mov
push
xlat
push
jmp
push
faddl
xor
nop
call
mov
pop
push
jge
push
mov
inc
dec
loop
jnp
cmpsb
xchg
stos
loop
inc
mov
mov
jle
cs
lock
es
xor
jl
mov
cmpsl
aam
jnp
inc
popa
cld
cli
or
xor
mov
inc
and
test
in
jb
adc
pop
iret
js
repnz
dec
lea
mov
xchg
in
adc
fsubrs
xchg
enter
mov
lds
insb
bound
pop
jg
jl
jno
push
lret
lods
xor
into
frstor
mov
sarl
loop
lds
stc
ret
mov
add
outsl
imull
ret
in
ret
fcmovne
cmp
out
lahf
orl
mov
jmp
sbb
jle
jp
adc
push
push
sub
ss
xchg
or
mov
dec
outsb
movsl
mov
push
std
xor
stos
sub
dec
pushf
jnp
mov
dec
add
mov
sub
lea
dec
das
mov
add
scas
std
outsb
andb
dec
nop
jne
addr16
movsl
imul
inc
inc
pop
xor
cmp
dec
cmp
roll
and
movsb
pop
or
cltd
mov
add
mov
push
mov
test
cli
add
add
sub
std
lods
mov
pop
icebp
idiv
xchg
filds
leave
mov
das
xor
inc
jo
imul
inc
adc
rclb
in
lock
add
xor
mov
lret
xchg
fstpt
inc
fsubrs
mov
gs
inc
jmp
aad
fmuls
cwtl
mov
mov
xchg
cmp
xor
mov
imul
outsl
ficomps
jbe
xor
inc
inc
lds
add
pop
push
daa
ds
scas
outsl
in
pop
push
dec
mov
cmp
add
cltd
add
fimull
stc
dec
jmp
jb
mov
mov
mov
scas
fnsave
sub
or
out
ror
in
lret
pop
lret
dec
int
call
mov
cmp
rcr
lock
or
iret
push
stc
js
pop
jge
loop
cltd
cld
pop
inc
lcall
stc
testb
js
mov
scas
fbstp
and
push
sub
hlt
mov
rorb
jo
xchg
les
mov
outsl
push
scas
ret
pusha
add
xchg
test
and
push
stc
mov
adc
scas
mov
loop
outsl
xchg
incl
push
jb
xor
fidivrs
cmc
add
clc
adc
adc
pop
fnstsw
fwait
cmpps
mov
or
out
rolb
rorl
mull
lods
xor
dec
insb
fistpll
lods
popa
dec
daa
inc
pop
xlat
sub
or
idivb
and
cmpl
mov
inc
out
aas
inc
push
xor
cmp
mov
jl
nop
xchg
and
add
insb
fidivs
adc
mov
dec
pop
jns
push
sbb
das
xchg
pop
lcall
push
outsl
and
jle
icebp
mov
push
ret
mov
dec
mov
cmp
mov
cmp
pushf
test
sub
adc
adc
push
pop
popf
cmp
movsb
jp
sub
jge
loopne
xchg
aad
push
jbe
jge
add
xchg
fs
add
or
pop
mov
imul
popf
xchg
mov
fiaddl
or
clc
sbb
divl
xor
enter
cmp
add
sub
mov
and
sbb
mov
sbb
popa
dec
pop
mov
mov
lods
pop
std
iret
mov
mov
inc
jne
and
mov
cmp
ja
popa
aam
negl
scas
cmp
pop
pop
jle
lret
dec
imul
dec
lret
orps
jae
loop
or
popf
mov
fcompl
sub
xchg
std
fistpl
jle
push
lds
mov
or
daa
push
pop
mov
xor
push
roll
lea
or
ljmp
lds
jl
call
aam
mov
jge
jae
adc
pop
lret
int3
cmpb
inc
xor
jge
jmp
mov
dec
in
ret
xor
addr16
sbb
add
or
nop
dec
inc
inc
xchg
imul
cmp
jmp
add
or
xchg
mov
fdivrs
iret
cmp
sti
cmp
mov
mov
enter
movsb
pop
cmp
outsb
ret
aam
adc
mov
mov
add
fcoml
cld
adc
ret
mov
shll
lcall
sbb
dec
mov
mov
subl
repnz
stos
push
pop
jle
mov
push
add
cmp
out
sahf
dec
ret
sub
pop
lds
ficompl
in
xor
cmp
pop
loop
popa
enter
popf
popf
daa
adc
fnstsw
or
mov
and
mov
mov
inc
xlat
lcall
cmp
loopne
or
dec
jb
xchg
hlt
mov
lcall
fwait
pop
jne
cmp
push
inc
out
les
add
jp
ljmp
bound
cmp
mov
stos
sbb
add
mov
push
popa
xchg
lea
das
mov
test
xor
push
aad
pop
sub
fmull
out
sbbl
jo
pop
fidivl
cs
cli
ds
push
aas
addr16
sub
aad
arpl
dec
icebp
inc
cmpsb
movsl
fstpt
sub
je
insl
mov
pop
jl
add
lcall
cmpsl
testl
enter
lods
inc
or
pusha
sti
movsl
imul
jnp
in
and
inc
shl
and
xchg
dec
outsl
and
and
cwtd
lods
scas
pop
lret
stos
je
orb
std
inc
inc
sarb
xchg
cmp
imul
out
and
mov
hlt
mov
aam
outsb
dec
daa
incl
xchg
int3
xchg
loop
lea
push
push
daa
pop
xchg
je
rclb
lea
and
out
dec
and
jb
bound
jl
leave
inc
add
in
jl
pop
pop
in
inc
push
push
or
dec
jge
xchg
in
clc
fscale
in
std
cmp
dec
jecxz
and
imul
cmp
inc
jb
lock
mov
std
out
sar
dec
orl
xchg
in
lahf
out
daa
clc
cld
dec
or
hlt
xchg
jbe
fcom
push
add
outsl
imul
dec
nop
out
dec
cli
and
aad
dec
jo
imul
js
pop
sti
xchg
mov
and
mov
jmp
lock
mov
or
push
pop
int3
xor
or
sbb
jns
mov
pushl
jp
movsb
scas
push
repz
push
pop
mov
movsl
loope
ljmp
cld
xor
xchg
loopne
lods
test
dec
jecxz
scas
add
rcr
test
mov
add
cmpsl
divb
pop
mov
inc
repnz
jbe
xchg
in
jle
and
out
mov
pop
sbb
dec
push
das
hlt
xor
aas
jle
jle
add
mov
sub
clc
gs
cmp
fcmovb
lcall
xchg
or
jnp
lock
sub
pushf
and
cmc
push
xor
inc
pop
mov
cwtl
data16
inc
int
xlat
jae
outsl
sub
xor
popa
je
rol
aad
jo
outsb
mov
push
loope
rcll
loope
call
jg
dec
sbb
aad
lcall
fmull
dec
mov
nop
jl
xchg
movb
jb
pop
or
test
dec
outsl
xor
shl
push
mov
cmp
cmp
orb
adc
dec
imul
popf
add
lods
sbb
sub
lcall
daa
and
insb
iret
adc
movsl
sbb
push
xlat
dec
mov
aas
ja
sub
aaa
aas
xchg
sbb
lret
fsubp
dec
dec
jmp
adc
dec
gs
pop
xchg
mov
xchg
dec
pop
stc
pusha
and
dec
adc
pop
push
idivl
cmovle
pop
fs
jg
scas
jns
add
int3
in
push
jbe
xchg
jne
jle
sub
dec
stos
pop
lea
lds
aad
jb
loop
lods
push
inc
mov
pop
sub
sub
sub
std
xchg
in
fldenv
cmp
and
out
fsubs
cmp
sbb
add
sub
xchg
and
mov
outsl
mov
cs
push
repnz
lcall
adc
cmp
loope
movsl
ds
lds
push
enter
and
xchg
out
sarl
clc
sub
jl
in
mov
push
popa
mov
mov
jecxz
clc
fs
dec
xor
in
aad
lcall
mov
pop
sub
dec
fsts
bt
mov
mov
mov
mov
mov
pop
sbbl
jp
pushf
ss
leave
pusha
mov
add
mov
popf
repz
xor
inc
mov
js
inc
addl
rcl
xchg
nop
js
push
xor
mov
data16
xchg
lods
and
insb
sbb
leave
das
mov
test
push
add
mov
frstor
std
add
xchg
decl
iret
push
sahf
jmp
pop
lea
out
jnp
push
mov
jl
push
jns
fimull
xor
xchg
pop
outsl
bound
aad
xlat
adc
shll
shrl
cld
rorb
xor
xchg
loopne
js
pop
ja
filds
div
out
jge
pop
ret
icebp
outsb
adc
loopne
loopne
sbb
push
mov
out
and
and
mov
outsb
sub
push
mov
xchg
push
jmp
loopne
mov
in
or
movsl
pop
xor
mov
mov
leave
xchg
or
mov
shlb
in
loop
xor
lcall
mov
insb
jne
shrl
movsl
inc
lea
repnz
cmc
divb
fs
jecxz
xlat
xor
jmp
xor
pop
in
jb
dec
sub
cld
add
sub
pop
mov
or
imul
push
call
mov
daa
int
jle
lahf
dec
or
stc
dec
jle
loop
jnp
push
pushf
scas
adc
xchg
in
stc
jnp
or
and
cmpl
sub
sub
lock
movsbl
out
or
clc
or
pop
adc
sub
repz
mov
sub
ret
call
xchg
lods
repz
iret
movsl
push
incb
mov
mov
rcrb
ret
lds
cmp
addr16
icebp
icebp
int
aas
ljmp
scas
cmp
dec
out
push
fistl
sahf
cmp
pop
sahf
leave
lods
dec
jecxz
faddl
orl
pop
sbbl
test
scas
shlb
dec
ret
scas
cltd
push
fdivr
fldl
popf
ret
aam
xor
add
dec
test
fsubs
int
pop
cmp
test
cmp
xlat
add
lahf
les
add
mov
push
bound
and
pushf
cmp
les
xchg
xchg
das
pusha
mov
push
xchg
cwtl
add
mov
pop
adc
scas
add
and
sarb
cmc
shrl
dec
or
add
mov
mov
outsl
ja
sbb
jmp
lods
mov
aad
jp
dec
vpmulhuw
pop
add
inc
aad
push
xchg
adc
mov
pop
lret
cmc
and
mov
mov
daa
or
xchg
and
jge
dec
addl
and
outsl
mov
lods
and
lahf
cwtl
mov
out
decl
mov
lock
dec
popf
push
or
testl
jecxz
and
mov
or
inc
das
xor
push
sbb
imul
ret
lret
test
cli
jg
cmp
mov
cmp
js
ficoms
and
mov
lods
jbe
sahf
mov
jl
pop
dec
mov
adc
xor
rcrl
jmp
jo
pop
xchg
xchg
inc
popa
cld
or
rcrl
mov
inc
loop
aaa
jo
xchg
sbb
dec
or
cmp
out
mov
call
outsb
pop
arpl
test
mov
sub
dec
pop
sbbl
call
jmp
xor
fwait
xchg
clc
cld
jge
dec
pop
or
adc
shll
lahf
xor
rolb
jo
lret
pop
jne
les
sub
mov
sub
pop
mov
sub
dec
cmp
push
cmp
pop
push
mov
jmp
fs
aam
les
repz
xchg
add
cmp
mov
xchg
fmull
sbb
lds
cmp
hlt
jne
and
push
cld
in
lahf
lods
stc
out
pop
data16
mov
xchg
into
jne
xor
adc
sub
in
adc
stc
cmp
fildll
add
pop
mov
fcoml
sahf
xor
ret
mov
sbb
in
rcll
test
cmp
lock
insl
in
and
pushf
xor
repz
inc
cmp
jne
cmc
mov
or
out
adc
sub
fwait
stos
and
mov
xor
jno
push
mov
and
pop
aas
add
sti
testb
lret
adc
rcrl
adc
aam
adc
aam
lock
daa
dec
mov
loop
dec
daa
lods
fildl
cmpps
mov
clc
push
lahf
mov
orl
cltd
nop
std
sbb
nopl
mov
jmp
scas
ret
mov
lods
repnz
ret
nop
pop
sbb
js
clc
call
cmpsl
push
stos
loop
xor
stos
mov
mov
xchg
cs
pop
xchg
cmp
sti
and
sub
dec
jo
fimuls
push
out
or
jmp
popf
clc
sti
mov
out
stos
sub
shll
popf
and
stos
movsb
pop
jmp
xchg
lds
incb
and
pop
jne
mov
int
jle
inc
out
jge
out
aaa
cmp
sbb
mov
shrl
push
push
shll
outsl
or
out
stc
xor
cmpsb
test
jecxz
inc
push
mov
ljmp
shl
imul
outsl
adc
xchg
jo
fwait
shlb
punpcklwd
insl
mov
lods
push
jmp
test
sti
cmp
cmc
mov
shlb
pushl
fcoml
imul
mov
loop
ja
sbb
jmp
add
push
xchg
movups
pop
mov
fdivp
fistps
pop
sub
push
add
jmp
outsl
adc
aam
mov
xchg
adc
out
inc
xor
cmp
pusha
fldt
adc
cmp
je
jle
and
jbe
xor
mov
inc
fwait
mov
arpl
bts
jle
test
pop
pop
push
icebp
loopne
cmc
mov
pop
lds
sbb
and
cmpsb
sbb
dec
cmpsb
jno
flds
mov
arpl
les
sbb
inc
ret
int3
nop
add
pop
shll
or
notl
inc
fdivl
test
sahf
mov
jnp
pop
testl
push
push
int
mov
push
push
iret
shrb
pop
xor
fmul
push
icebp
sar
ret
gs
sbb
cld
faddl
punpckhbw
popa
xchg
insb
cmp
push
addr16
outsb
cmp
insl
stc
nop
sbb
adc
push
cmc
loope
jmp
dec
mov
js
sbb
addb
cwtl
pop
lods
rcr
ljmp
cli
aam
inc
jg
push
and
popa
or
dec
inc
fbstp
jb
mov
mov
cmpsl
scas
mov
in
daa
jle
xchg
imul
xor
jl
and
cmp
lock
mov
sbb
mov
sub
xchg
push
mov
addr16
loop
or
adc
cli
mov
cmp
int3
filds
jmp
adc
mov
mov
adc
loopne
aad
cwtl
inc
xorb
and
popf
int3
xor
mov
lods
mov
and
xchg
jne
and
pop
pop
jne
arpl
adc
ret
daa
jmp
mov
call
mov
mov
popa
push
arpl
xor
and
pop
mov
or
mov
pop
movsl
adc
sub
adc
iret
xchg
lcall
loopne
fs
int3
in
shrl
inc
dec
mov
mov
cmp
fstpl
call
leave
mov
imulb
jno
or
lea
cwtl
ud1
stos
mov
cs
push
cmp
xchg
repz
mov
icebp
pop
es
or
inc
add
pop
pop
mov
not
cmp
dec
sub
aas
inc
iret
sbb
inc
cwtl
aaa
push
dec
out
scas
cmp
jo
and
out
leave
aam
sarb
adc
test
test
cmpsl
leave
test
jmp
mov
mov
and
pop
jecxz
jne
xor
imul
mov
jae
adc
xlat
xor
test
movsb
xchg
call
mov
loope
cmp
xchg
and
push
mov
fisttpll
cmp
lock
inc
sbb
mov
loopne
mov
aaa
mov
std
fwait
icebp
pop
shrl
cmpsb
enter
stos
or
out
push
push
add
fmuls
scas
sub
sbbl
popf
xor
imull
ret
push
add
inc
inc
xchg
insb
aad
push
cmp
xchg
enter
xchg
dec
fcoml
repz
push
and
xchg
mov
out
dec
icebp
in
push
push
jno
movl
sbb
clc
insl
xchg
pop
mov
mov
iret
or
push
push
cmp
mov
lahf
loop
sahf
loope
xor
rcll
lcall
mov
mov
xor
fnsave
jmp
nop
mov
fimull
mov
enter
pop
pop
or
inc
xor
xchg
sti
sti
adc
fucomip
into
cs
pop
add
inc
psrad
inc
lahf
add
sahf
pop
int3
pop
leave
stos
dec
jns
sar
xor
or
loopne
lock
add
cmovns
jge
repz
mov
shll
shll
into
ljmp
fistl
jp
outsl
es
in
ret
aam
cmpsb
pushf
sbb
shll
push
ror
loopne
dec
xchg
xchg
je
test
jp
stos
sub
sub
add
jecxz
loop
mov
notl
adc
leave
leave
mov
cmpsb
sub
arpl
push
xlat
imul
ja
in
pop
push
test
push
and
mov
dec
jbe
pop
cmc
add
out
enter
iret
sarb
dec
xor
adc
hlt
leave
shl
mov
jno
scas
mov
and
push
dec
add
leave
pusha
ret
dec
sub
lea
jae
mov
test
bound
jbe
and
movsl
popa
inc
in
sub
push
das
lcall
xorb
xchg
xchg
sbb
jbe
cmpsb
jmp
stc
mov
lock
push
mov
mov
jle
xchg
adc
pop
dec
mov
fidivl
les
cmpsb
jge
fstl
or
mov
js
movsb
enter
stc
push
test
pop
arpl
or
mov
pcmpeqw
repnz
mov
int3
and
incb
cmp
xchg
stos
outsb
adc
rcr
pop
je
xchg
sub
movsl
fldt
sbb
or
push
adc
aam
lahf
sub
andl
daa
pop
push
xchg
daa
test
sub
lock
mov
and
mov
mov
jecxz
scas
sbb
xchg
insl
sarl
iret
call
outsl
in
and
dec
mov
scas
in
adc
pop
xchg
or
inc
sbb
in
adc
pop
or
je
mov
fdivrl
mov
loop
rolb
lods
mov
cmp
or
dec
cmc
mov
int3
enter
pop
sti
cs
or
shlb
hlt
push
push
jp
mov
jg
cmp
add
cmpsl
pop
pop
xchg
outsl
fstpt
pop
loope
loop
shr
repnz
outsb
cmpl
fstpt
aaa
repnz
inc
mov
mov
push
gs
rclb
pop
sbb
cltd
loopne
mov
fsubrl
sahf
hlt
push
sbb
divb
sti
repz
cltd
and
xor
dec
dec
xchg
cld
push
scas
mov
int3
outsl
push
stos
fldl
pop
pop
jbe
adc
sub
call
lahf
loopne
jne
fsubrs
movsl
daa
or
pop
adc
push
or
leave
add
iret
mov
add
and
frstor
pop
sub
and
pop
inc
popa
mov
addr16
mov
jnp
inc
push
and
pop
adc
dec
out
jg
lock
lods
lret
add
aam
xor
pop
mov
mov
lahf
cld
das
repz
adc
pop
ret
cmp
loop
mov
lret
dec
mov
loope
inc
and
stos
aam
bound
lods
lahf
fistps
lahf
adc
adcb
data16
inc
dec
loope
das
mov
or
jecxz
in
mov
repnz
xor
out
mov
xchg
inc
push
rcll
gs
pop
daa
imul
scas
xor
movsl
loopne
xchg
std
neg
or
push
notb
lods
ret
imul
jbe
lcall
inc
test
inc
jmp
xchg
mov
andl
int3
inc
mov
jb
int3
lods
stc
loop
xor
fwait
sbb
mov
sbb
pop
fisubrs
out
push
dec
inc
or
cmp
mov
mov
loop
mov
jnp
mov
add
outsb
jnp
inc
mov
test
pop
push
outsb
sbb
cltd
cli
cltd
and
in
jg
popa
sti
push
fstpt
xchg
ret
xlat
mov
xor
xor
jae
mov
xchg
js
mov
out
push
push
lret
mov
push
add
add
js
shrl
adc
ret
add
push
and
ret
and
nop
mov
and
lock
pushf
sub
test
push
jne
sbbb
aaa
adc
inc
dec
push
xor
mov
in
sub
js
out
push
subl
xchg
adc
repz
into
movsb
xchg
rclb
xor
pop
xor
jmp
adc
push
sbb
adc
dec
jae
or
aad
and
or
sub
addr16
inc
lret
stos
mov
jl
push
cli
mov
jb
jp
iret
aaa
jge
xor
mov
mov
dec
jl
sbb
pop
in
mov
mov
mov
and
leave
mov
mull
shlb
lods
es
jno
add
pop
and
jnp
jae
dec
ja
and
xor
popa
fs
in
and
fs
das
add
cld
and
mov
cmp
flds
fnsave
into
or
push
jbe
out
ret
inc
sub
xchg
push
stc
jns
mov
mov
sub
daa
mov
pusha
pop
push
scas
int3
dec
lret
je
inc
mov
aad
inc
lods
rorl
out
jg
mov
push
inc
hlt
sti
stc
pop
cmpsl
cs
ret
push
and
cmc
outsb
lods
push
int
jle
jae
mov
sub
and
xchg
push
dec
push
mov
cmp
shlb
mov
jb
stc
sti
lods
ds
repnz
mov
insb
mov
push
inc
jle
fisubrs
and
lods
xor
push
pop
lock
lds
loope
inc
test
pop
cmp
test
dec
lock
pop
int3
sub
imul
jnp
pop
push
repnz
movsb
jno
cmpsb
mov
aam
sub
sbb
btc
mov
sbb
and
out
aaa
push
ret
push
test
push
dec
shr
imul
decl
mov
testb
cmpsb
fstpl
xor
data16
gs
hlt
pop
xor
cmc
or
outsb
fdivl
add
and
cltd
lret
jle
mov
mov
fdivl
mov
lock
aam
xor
leave
cmp
lret
imul
adc
add
in
fmulp
decb
lcall
repz
push
mov
test
sbb
jae
bound
mov
jp
mov
sub
cld
xor
mov
cmp
cli
sub
inc
sbb
loop
bound
and
mov
mov
stc
sti
outsb
aas
push
jno
repz
sbb
in
int
and
or
jbe
subb
jb
sti
xor
adc
add
pop
fnsave
js
cmp
or
loopne
ret
adc
sub
xlat
dec
cmpsb
out
or
jmp
xchg
cmpsl
mov
xor
cld
push
filds
enter
stos
fdivr
xor
jne
test
fidivrs
mov
add
dec
mov
iret
sub
pop
jmp
jb
or
lahf
push
sub
fcmovnbe
imul
fldcw
jle
jnp
pop
add
xorl
cmpsl
sub
mov
jmp
mov
insb
mov
fstps
adc
addr16
test
push
std
cmp
or
cmpsb
enter
sub
jne
aas
or
push
aad
in
into
sub
adc
mov
mov
push
cmp
push
jo
xchg
out
sub
sahf
pop
cs
sbbl
outsb
push
xor
push
aas
std
cmp
stos
into
add
xor
inc
insl
pushf
inc
pop
ds
outsb
loop
fwait
shrl
sbb
or
sbb
add
lea
jp
xchg
sbbb
jno
dec
cmp
cmpsb
xchg
negl
jp
jmp
cmp
outsl
clc
mov
outsb
sub
adc
lret
pop
sbb
fwait
xchg
scas
add
shl
aaa
repnz
rorl
sbb
sbb
ficoms
movsb
and
ja
xlat
dec
add
inc
mov
sbb
sub
lods
cwtl
dec
xor
mov
mov
jnp
pop
xchg
sahf
std
pop
inc
adcl
cli
xchg
inc
js
pop
pop
test
add
pushf
push
in
insb
pop
and
jo
test
hlt
or
xor
and
mov
pop
cmp
cmp
ljmp
mov
xchg
add
je
aam
ret
lcall
das
loop
push
jle
jno
jbe
jns
pop
cmpsl
lahf
mov
ret
jg
rol
lods
ss
jo
jnp
negb
jns
push
adc
or
arpl
pushf
shrl
loope
or
mov
or
fimull
sbb
xor
mov
jle
ficomps
cwtl
sub
lds
sub
mov
jle
push
sbb
mov
xor
out
jg
pushf
jnp
xchg
pop
dec
or
dec
nop
scas
mov
or
call
loope
mov
add
and
and
xchg
lods
aaa
adc
mov
and
sub
inc
pushl
pop
aas
mov
adc
pop
das
nop
fs
sbb
or
sbb
dec
ss
sub
fisttpl
jns
sbb
mov
fisttpl
inc
pop
ja
push
or
add
mov
pop
daa
jo
lcall
mov
push
gs
inc
mov
mov
lods
cmp
fnstsw
int
dec
sbb
hlt
test
mov
jne
jle
inc
scas
mov
rcrl
pop
or
movsb
popa
inc
and
test
aam
xchg
sub
inc
pop
in
cli
pop
cmp
sbb
pop
mov
mov
loop
in
xchg
xorb
inc
mov
or
mov
lret
sbbb
je
jmp
dec
ja
jbe
xchg
mov
dec
int3
push
jo
pop
hlt
int
sbb
xchg
inc
jb
push
sbb
mov
insl
ret
sbb
loop
sub
mov
lds
pop
mov
lret
cmp
into
loop
jge
xor
mov
fldcw
xlat
xchg
xchg
mull
cmp
loope,pt
inc
popa
into
inc
movb
add
cmp
and
sbb
pop
adc
mov
inc
inc
pop
daa
aam
xlat
cmp
lods
mov
adc
and
aas
dec
inc
mov
out
loopne
cmp
add
in
push
inc
jne
fistpl
dec
mov
aad
xlat
and
cld
and
jmp
movsl
lea
lods
lcall
rcrb
fdivl
xchg
int
inc
jb
call
sub
je
rcr
inc
xor
test
jp
and
xor
sub
mov
and
psraw
dec
hlt
les
outsb
push
push
call
lods
push
mov
cmp
lods
out
mov
pop
xchg
jge
scas
fwait
cmp
test
sbb
mov
mov
mov
ljmp
pop
jbe
aam
pop
inc
fsubr
aaa
cmp
into
scas
or
hlt
push
pop
xchg
pop
push
cmpsl
mov
cltd
inc
adc
dec
fcoms
cs
pop
push
or
dec
mov
xor
div
mov
sbb
push
push
jg
or
popf
cpuid
jnp
or
subl
mov
sub
jl
clc
out
inc
int3
xorb
repnz
or
push
or
test
out
data16
mov
jecxz
pop
sbb
xorl
js
sbb
jp
pop
mov
adc
jp
sahf
xorb
dec
or
movsb
scas
movsb
pop
mov
lods
imul
negl
jge
jg
popf
or
cmp
int3
in
xchg
shlb
mov
xorl
or
pushf
push
cli
movsb
sub
pop
arpl
adc
jp
sahf
add
jnp
push
mov
test
mov
cmp
sbb
xchg
push
testl
adc
lea
ret
jge
jge
insb
mov
sahf
test
jns
jbe
test
dec
ret
jnp
aaa
mov
xorb
repz
mov
fwait
mov
rcr
scas
out
sub
sahf
mov
sub
jns
push
mov
push
pop
sahf
jl
insb
test
daa
aam
adc
das
cmpb
repnz
push
push
ss
out
xor
push
mov
lcall
bound
add
lret
jnp
insl
rolb
iret
rol
cmpsl
iret
mov
fisttpll
adc
fstps
inc
adc
repnz
pop
inc
xor
mov
test
push
mov
and
add
push
jge
pop
inc
mov
mov
mov
lock
xchg
mov
cmp
lea
cld
ss
cmp
test
mov
push
imul
outsb
ret
xor
pop
pusha
jp
aaa
fdiv
rolb
in
out
cmpsl
cmp
in
adc
pop
pop
test
pop
sub
xchg
cmp
aas
or
lret
dec
cmp
add
xor
repz
fidivrl
xlat
negl
lcall
push
and
inc
jge
rorb
inc
shrl
repz
or
or
jae
fistps
mov
inc
fildl
xchg
shlb
jb
gs
ficompl
test
das
or
cwtl
xchg
mov
notb
inc
rorl
in
lahf
int
and
jecxz
std
lahf
pop
pushf
mov
add
add
arpl
imul
pop
sub
je
mov
inc
test
xchg
aaa
mov
aad
push
lods
mov
cmp
stos
sbb
lds
cmpsb
push
les
jae
push
add
gs
ret
push
and
mov
imul
pop
xlat
mov
test
sub
test
pop
push
out
in
adc
or
push
add
rcll
jge
repz
jecxz
stc
movsb
push
adc
lcall
push
andl
add
out
mov
sub
mov
pop
cld
inc
dec
xchg
sub
inc
dec
jl
cwtl
mov
xor
inc
into
cltd
call
shll
sbb
push
loop
fwait
push
clc
int3
mov
mov
negb
jge
rcrb
mov
jo
insb
scas
leave
xchg
jb
mov
or
iret
lods
mov
test
call
pop
aas
sub
xchg
xlat
mov
push
push
xchg
jnp
int
mov
shl
and
hlt
imul
jnp
push
mov
iret
add
sarb
mov
ds
xor
repz
mov
gs
test
pop
jge
negl
fnstsw
or
cmc
stos
mov
mov
inc
inc
aas
fimull
mov
mov
xor
or
loop
sbb
inc
mov
pop
lock
rcrl
sbb
outsl
addr16
jmp
cmp
xchg
mov
scas
inc
mov
jbe
add
mov
sub
cmpsl
jl
mov
jno
out
pop
test
jbe
and
jne
addr16
or
imul
ljmp
lret
popa
adc
dec
push
dec
push
xor
fwait
add
lcall
mov
cmp
sbb
xchg
xor
push
add
mov
sbb
arpl
pop
xchg
mov
mov
mov
into
fsubs
fistpll
push
mov
add
stos
jne
inc
aad
leave
mov
cmpsl
inc
test
sub
imul
iret
inc
loope
lret
inc
mov
jne
sub
cmc
or
cmp
je
xchg
fimuls
cmp
andl
jae
mov
jbe
test
pushf
outsb
sbb
or
ss
or
pop
and
fistl
insb
adc
mov
sbb
jge
jmp
orl
cmp
aas
or
add
push
add
xor
mov
sbb
pushf
jb
dec
pusha
push
mov
outsb
xchg
dec
or
inc
sub
test
mov
jge
and
ss
cmp
fimull
xchg
mov
xchg
fisubs
mov
mov
xchg
xor
dec
test
mov
pop
in
dec
stos
push
bswap
sub
fadds
sbbb
mov
dec
fld
xchg
adc
jae
ss
imul
ret
dec
pop
mov
inc
push
inc
xor
jg
sarl
cmpb
lea
or
call
push
fsubrs
into
dec
mov
inc
cwtl
jno
jle
adc
sub
imul
imul
cs
xor
mov
mulb
sar
movsl
cmp
daa
mov
int3
jno
fs
fsub
xchg
cld
sarl
mov
test
outsb
cmp
mov
pop
adc
psubb
loop
add
inc
push
mov
std
mov
jecxz
addr16
push
adc
cmp
adcb
adc
add
rcrl
jecxz
shll
add
sub
imul
and
inc
adc
aad
or
or
test
cld
dec
xchg
pop
shr
xor
mov
arpl
testl
and
pslld
mov
stos
insl
mov
ljmp
push
lea
pop
mov
outsl
imul
push
cmp
jle
xchg
mov
fisubrs
cmp
mov
and
add
insl
push
pop
xchg
scas
sahf
xchg
lods
dec
push
jnp
inc
mov
xor
stos
cld
cmpsb
fs
aad
nop
mov
inc
in
xor
iret
nop
jae
or
lret
sub
and
dec
mov
repz
and
insb
cmp
sbb
mov
cmp
out
xlat
shll
sbb
mov
idiv
xchg
push
or
or
popf
inc
sbb
or
and
sbb
imul
push
popf
imul
push
adc
mov
icebp
rcrl
xor
push
mov
jnp
movsl
pop
xlat
jae
sbb
xchg
xor
dec
mov
mov
je
cltd
jbe
sub
mov
mov
or
adc
dec
cmc
sbb
repz
jmp
mov
popf
pop
dec
repz
jbe
inc
ret
push
imul
xchg
ret
adc
mov
sbb
outsb
sub
sub
enter
add
push
data16
push
loop
test
jecxz
ljmp
lcall
int
imul
sub
xor
outsb
mov
xchg
inc
femms
jmp
shrb
icebp
jmp
mov
fistpl
icebp
cld
ljmp
inc
negb
jnp
lahf
dec
hlt
xchg
xchg
in
sub
add
sbb
stos
loopne
out
push
cltd
lret
jno
cmp
add
jb
ss
inc
lcall
daa
push
mov
adc
xchg
mov
loopne
ret
int3
sbb
scas
dec
stos
inc
lret
ja
sub
mov
adc
jae
call
arpl
insb
fs
sub
push
mov
cwtl
cmp
pop
cmc
in
adc
std
fnstsw
pop
adc
push
xchg
jl
push
div
jne
shrb
jecxz
in
imul
xor
jno
cmp
insb
fcmovbe
xchg
bound
cli
lods
stos
dec
ja
loop
scas
scas
mov
in
loope
mov
mov
xor
imul
jns
cld
lea
lea
mov
pop
cmpsl
lcall
dec
sbb
mov
jae
sbb
in
mov
aad
mov
jl
das
mov
push
cmp
mov
mov
hlt
mov
stc
pop
push
xor
cld
jo
mov
rolb
addr16
fbld
adcb
lods
popf
jl
cmp
outsb
fdivrs
icebp
jbe
pop
cmp
jae
sub
mov
xor
mov
repnz
imul
or
in
out
jns
mov
fwait
pop
sbb
mov
sub
jle
and
out
cmpsl
movsb
out
dec
scas
ret
and
mov
pop
mov
xlat
movsl
adc
mov
mov
xor
out
mov
jae
cli
loopne
pushf
fwait
clc
popf
js
or
aaa
dec
hlt
adc
jb
lret
sub
scas
sub
adc
test
xor
sbb
jmp
scas
fwait
outsl
jo
add
inc
scas
pop
shrl
mov
jle
xchg
cmpsl
xor
cli
mov
cltd
pop
shll
inc
push
data16
cmp
mov
je
mov
into
setge
movsl
or
fisubrs
jns
xchg
icebp
pop
pop
in
mov
in
adc
inc
outsl
hlt
cld
in
jae
lock
fcomps
sbb
scas
inc
test
mov
ret
inc
hlt
xchg
imul
xchg
mov
sub
jmp
aad
mov
sub
lock
jg
cmp
mov
push
inc
repnz
cmp
je
mov
sbbb
lahf
cmp
in
push
sub
mov
xor
jae
ljmp
insl
cmp
mov
push
push
sub
ffree
inc
in
sbb
ret
mov
insb
andl
mov
dec
cwtl
daa
jb
cmp
inc
mov
int
lret
nop
pop
cli
lods
and
out
pop
dec
mov
cmp
lods
mov
jg
subl
test
adc
inc
dec
in
adcb
lds
ljmp
sub
sbb
inc
fnsave
and
lea
xor
sub
jg
add
and
xchg
or
insb
xchg
into
push
mov
js
rclb
mov
add
data16
inc
in
lahf
in
in
rcr
fwait
push
sub
and
lods
and
stos
xchg
imul
leave
inc
add
xchg
fwait
xor
dec
cld
and
repnz
cmp
call
popa
out
std
ret
lods
pop
push
adc
lret
repz
roll
dec
xchg
int3
and
fistl
pop
adc
cmpsl
in
dec
shlb
cltd
loopne
sub
mov
or
call
cmp
arpl
sbb
cld
add
xor
and
xor
data16
pop
les
gs
ret
aaa
addr16
xchg
cmp
in
scas
xor
mov
push
xchg
adc
jbe
pop
roll
and
inc
mov
lahf
into
pop
add
jns
push
adc
nop
xor
adc
push
add
xchg
jne
mov
and
pop
lods
nop
sub
sub
and
mov
xor
dec
ret
std
jae
sbb
sub
ljmp
sub
xor
std
jp
outsl
and
dec
ss
jno
shll
ss
xor
aam
and
and
and
je
add
and
push
jp
mov
jnp
and
jo,pt
mov
mov
loope
inc
inc
pop
pop
sbb
dec
out
clc
pushf
lret
jp
sub
mov
jmp
pop
fstpt
cmp
pop
sarb
mov
filds
dec
fistpl
lods
decl
fwait
pop
jmp
lcall
lods
pop
ss
xchg
push
iret
lock
sbb
mov
sbb
inc
xor
mov
movsb
pop
adc
add
pop
rclb
incl
sbb
stos
and
fbstp
xor
lahf
xor
lret
hlt
out
fisubs
hlt
pop
mov
sub
in
cltd
mov
xlat
jb
mov
testl
sbb
loope
mov
push
lods
xlat
in
clc
add
push
call
decb
mov
push
adc
dec
sbb
jns
shrb
ss
mov
dec
fcmovnu
xor
jp
xchg
cli
sub
cs
aad
jmp
or
adc
cmp
leave
incl
jg
mov
lret
notl
in
call
xchg
leave
cmp
sub
nop
imul
add
insl
dec
testl
cmpl
mov
cmp
add
add
push
fwait
mov
mov
mov
call
ds
sub
xor
arpl
ljmp
add
lcall
xchg
ss
std
lahf
lea
cmp
cs
xchg
test
inc
inc
aam
push
das
xchg
out
cmp
mov
mov
inc
mov
mov
aad
rcrb
aad
lock
cld
and
pop
hlt
mov
addb
fldt
pusha
or
rcr
roll
or
jp
into
mov
add
jge
jg
add
inc
pop
and
iret
popa
ret
stos
xor
push
push
loope
and
movsb
faddl
pop
shll
xchg
or
out
pop
sarl
aaa
cmp
aas
imul
lret
adcl
pop
xor
jbe
or
sbb
fistps
sub
or
lods
loopne
xchg
mov
lods
aaa
mov
jne
je
cltd
pop
jmp
scas
adc
jg
scas
or
or
ja
mov
cmpsb
pusha
iret
dec
test
enter
pop
mov
scas
fisttpll
pop
push
cmp
std
fldcw
mov
imul
sub
sbb
lods
movsl
mov
stc
mov
or
mov
jb
loop
data16
nop
pop
mov
fdivp
mov
ljmp
sub
mov
add
mov
push
push
ljmp
mov
xor
popa
inc
divl
cmpsl
push
mov
shll
daa
fidivl
add
adc
fimuls
loop
xchg
cmp
add
push
rcrl
jns
sbbb
outsb
dec
jle
inc
addr16
xchg
jecxz
out
xchg
or
incb
in
fmulp
xchg
lea
in
sub
mov
jno
cmp
popa
shl
shl
or
mov
divl
adc
mov
inc
and
push
mov
cwtl
mov
bnd
call
rolb
add
push
test
pop
int3
mov
loop
sbb
jg
in
movl
fwait
adc
fisttpl
push
int3
xor
orl
rcll
aam
push
or
mov
xchg
adc
push
push
aam
mov
push
mov
xchg
mov
xor
mov
in
enter
jne
and
stos
push
lea
inc
test
aas
movsb
fildl
ret
in
dec
pusha
clc
std
push
inc
dec
fsubrl
enter
daa
cmpsb
in
icebp
mov
jp
jo
fnstcw
stc
or
loop
bswap
push
dec
xchg
sbb
les
xor
fistps
xor
adc
insl
and
jne
add
push
xchg
popf
cld
std
pop
outsl
or
arpl
or
test
jl
push
outsb
inc
push
sbb
jle
lahf
pop
mov
pop
cs
ljmp
cmp
jecxz
clc
add
les
mov
and
shlb
stos
xchg
cld
js
push
imul
xor
dec
mov
ds
pop
inc
call
sahf
pop
or
out
jns
ss
out
dec
xchg
dec
test
ja
imul
mov
in
nop
push
mov
push
inc
pop
out
ja
lcall
test
jp
fs
mov
mov
mov
pop
jl
or
das
sub
jg
mov
test
xor
xor
mov
test
fcomps
mov
xchg
push
out
inc
les
push
sub
fnstsw
cs
stos
sbbb
push
and
or
push
in
outsl
cmp
inc
xchg
dec
cld
test
in
dec
push
pop
inc
aaa
sbb
es
rol
fwait
push
xor
aam
fnstenv
cwtl
mov
cmp
inc
dec
test
inc
std
pop
cwtl
cmc
cld
mov
loopne
sarl
lods
cmpsb
fs
insl
mov
gs
scas
sub
dec
pusha
jp
inc
dec
imul
adc
testl
repnz
in
or
insb
push
xchg
pop
lock
xor
lds
mov
jbe
or
and
outsl
sub
mov
aas
data16
mov
jecxz
push
jl
mov
or
aam
ja
int
add
mov
push
pop
xchg
sbb
pop
arpl
pop
fisubrs
testb
imul
gs
popf
add
dec
inc
int
outsb
cmpsb
cld
movsb
or
clc
repz
xor
jne
xchg
imul
shlb
ja
pop
xor
dec
shr
leave
cmp
pop
insl
dec
jne
cwtl
and
into
repnz
lds
test
mov
push
gs
sbb
xor
sub
and
aaa
pop
pop
shl
enter
xor
cmp
mov
cs
fs
cmp
sbb
sar
shl
lahf
mov
loopne
leave
icebp
push
test
jg
push
push
add
xorl
mov
mov
int
fstpl
icebp
mov
inc
or
push
pushf
pop
aaa
fildll
das
xor
std
into
scas
sbb
sbb
mov
out
add
daa
ret
dec
sbb
sbb
gs
cld
clc
cli
cmp
pop
orl
adc
sbb
sarl
shr
loope
aaa
sbb
aaa
mov
mov
and
ja
xsha256
cmpsb
push
lds
add
mov
stos
xchg
out
push
in
out
cwtl
push
gs
into
xchg
scas
enter
in
sbb
cmp
hlt
dec
sbb
fistpl
mov
mov
mov
mov
aam
xchg
in
fwait
cmpsb
dec
xchg
outsl
int3
pushf
inc
inc
fisttpl
pop
or
ret
dec
push
les
inc
and
lods
mov
jl
das
cli
in
ret
lret
and
test
out
lcall
pusha
mov
test
cmp
xchg
pop
sub
mov
sub
xor
and
pop
sub
fs
enter
adcb
mov
mov
cmp
and
popa
sti
pop
push
mov
imul
mov
das
pop
addr16
cltd
js
pop
hlt
js
insl
incb
mov
aad
xchg
cltd
sub
addr16
xchg
mov
jp
addr16
mov
xchg
ja
cs
mov
testb
inc
pop
loop
sub
aaa
cwtl
hlt
pinsrw
aas
das
lret
xchg
outsl
lret
dec
mov
gs
sub
mov
and
ja
jecxz
cltd
mov
int3
dec
rolb
mov
ret
rorl
xchg
js
cmp
jl
jne
aaa
xchg
xor
mov
gs
js
cld
sahf
fimull
jbe
movsl
outsb
add
pop
push
pop
xor
mov
adcb
add
fdivrs
adc
mov
and
mov
inc
mov
into
fcmovbe
outsb
stos
js
sbb
cltd
daa
dec
scas
dec
cmp
cmp
add
and
xchg
lock
imul
sub
sbb
mov
loope
pushf
add
adc
stc
int
das
pop
jmp
adcl
sbb
and
pop
adcl
dec
shlb
fdivrl
test
mov
pushf
or
imul
pop
pop
adc
inc
mov
icebp
mov
lea
popa
stc
pop
repnz
arpl
sbb
outsl
lds
xor
ja
inc
or
pop
mov
dec
arpl
call
das
dec
inc
ljmp
mov
mov
fidivl
xor
pop
push
mov
mov
mov
test
push
pop
xchg
jo
push
xchg
push
xchg
mov
sarl
roll
inc
jmp
pop
cmp
xor
cmpsb
loopne
stc
xor
push
cmp
bound
in
stos
sub
mov
js
adc
or
cmovbe
dec
adc
or
cmc
mov
pop
sub
negl
mov
ret
scas
push
divl
xor
sbbb
dec
arpl
icebp
dec
push
aaa
ljmp
xchg
fimuls
es
dec
movsb
int3
repnz
pop
or
push
aad
test
bswap
mov
cwtl
popf
dec
lret
fldenv
popa
adc
inc
lahf
dec
inc
mov
js
sbb
push
call
ds
jns
jnp
hlt
enter
aad
sti
mov
outsl
outsl
or
xchg
adc
movl
fdivr
lcall
xchg
jb
jmp
das
xor
mov
adc
xchg
rolb
push
lret
out
pop
mov
cmp
pop
or
mov
pop
cmpsl
stos
insl
inc
jne
mov
pop
or
fcompl
push
xor
out
pusha
je
lods
ds
push
outsl
fsubl
mov
bound
mov
dec
sbb
and
imul
xor
add
aam
js
sbb
push
shlb
in
jno
ret
aas
jmp
iret
inc
lahf
nop
jg
ret
mov
jecxz
aad
popa
cmc
jno
test
std
xchg
xor
sub
add
lret
adc
push
pop
in
ds
mov
xchg
push
scas
popa
sbb
push
inc
aas
and
sub
mov
xchg
outsl
mov
push
hlt
cltd
dec
scas
movsb
pop
clc
in
push
push
pop
out
cmc
inc
cmp
push
and
popf
insb
pop
adc
lods
push
inc
ja
push
add
cld
fs
mov
cmpl
jne
in
cs
sbb
push
mov
cmp
pop
clc
xchg
adc
mov
sarl
xchg
repnz
xchg
cmp
out
sbbl
xor
stos
jnp
das
in
sub
test
imul
fldcw
mov
pop
fnstenv
mov
pop
and
das
adc
loope
sub
lret
subb
fisttps
mov
addr16
leave
into
fisubrs
das
xchg
fcmovne
adc
mov
jg
and
lret
inc
sbb
inc
enter
and
cmpsb
push
enter
mov
addr16
pop
enter
or
xchg
es
xlat
mov
xor
incb
fnstcw
mov
lcall
adc
jmp
pop
lret
movsb
cmpxchg
insl
rorb
inc
ds
mov
sub
or
daa
jb
pop
push
jmp
in
orb
cmp
loopne
into
and
lret
iret
jb
mov
add
xlat
add
xchg
sub
jne
and
pop
add
xchg
sti
sbb
repnz
stos
xchg
mov
movsb
jle
sbb
and
mov
push
test
sbb
mov
push
ret
int
mov
mov
push
mov
mov
xor
push
pushf
jmp
pop
mov
fisttpll
add
rolb
and
push
sbb
add
ret
aad
insl
mov
add
dec
fcomps
dec
loope
cmp
rdpmc
out
pop
cmpsb
fdivl
fwait
xchg
iret
subl
lahf
xor
pop
out
and
mov
jg
push
lret
dec
sub
movsb
fnop
jecxz
sbb
push
test
enter
mov
faddl
gs
cmpsl
sbb
jae
mov
and
cmpsb
in
hlt
mov
shlb
jo
ret
jl
add
sub
nop
arpl
movl
xor
out
into
loopne
in
daa
popf
sbb
ss
dec
or
rorb
cmp
pop
lret
sbb
leave
inc
mov
fldt
dec
push
divb
and
sbb
dec
jp
cmp
in
cwtl
xchg
ljmp
dec
and
mov
cmp
data16
push
loope
cmp
and
aam
mov
out
mov
stos
inc
xchg
shl
fldl
xchg
das
hlt
jae
subb
mov
stos
xor
mov
or
xor
test
punpckldq
aaa
call
outsl
insb
xchg
mov
mov
test
ljmp
mov
popf
xchg
dec
int3
adc
pusha
lock
mov
sub
mov
pop
mov
push
xchg
fisttpll
pop
inc
adc
imul
xchg
and
jge
sbb
cmp
inc
lods
cmp
mulb
push
das
mov
mov
gs
jecxz
dec
xchg
scas
sbb
pop
mov
dec
js
lods
mov
fldz
mov
inc
add
adc
xchg
jae
jp
xchg
fldt
dec
lods
adc
hlt
xchg
mov
push
fistpl
pusha
jge
stos
pop
bound
cmpsl
shrl
cmp
mov
pushf
jbe
mov
ja
pushf
jns
popf
mov
xor
out
mov
test
out
sub
test
test
cmp
inc
pop
inc
leave
cmpsb
jg
sbb
and
inc
dec
in
cmp
pushf
push
jae
push
sub
outsl
xchg
out
cmpl
cmc
decl
jb
dec
dec
je
add
scas
dec
push
inc
test
sub
or
out
movb
jno
mov
fstl
or
push
js
mov
mov
mov
jp
inc
into
and
or
addr16
sbb
push
imul
int3
pop
stc
fadds
in
mov
sets
dec
cmp
lods
es
mov
fisttpll
mov
leave
adc
mov
or
aaa
jnp
mov
xchg
pushf
fsubp
sub
popa
rcr
push
in
fnstsw
and
mov
ja
sbb
fsub
jecxz
pop
sbb
int3
pushf
rol
cmp
push
test
sbb
xchg
pop
or
icebp
outsl
aaa
xchg
xchg
and
mov
stc
xor
sub
ja
subb
add
sahf
fbld
inc
mov
cld
jecxz
push
iret
cli
or
movsb
fdivr
es
push
mov
sahf
and
loopne
inc
xor
insl
xor
add
mov
and
iret
ret
lock
jecxz
jle
loopne
outsl
adc
sarb
xor
loopne
scas
ret
cmp
jno
aad
std
push
mov
cmpsl
cmp
xchg
pop
or
fisubl
aaa
les
outsb
stc
mov
push
pop
cmpsb
or
sbb
iret
inc
pop
int3
shll
mov
cld
outsl
xchg
jmp
dec
mov
clc
or
mov
mov
sub
insb
dec
pop
cmp
and
dec
xchg
mov
orb
dec
mov
dec
test
scas
sub
dec
lcall
orb
cmp
jmp
shlb
daa
jmp
lea
rolb
xor
push
cmp
in
in
mov
xor
sbb
cmp
out
mov
lods
inc
and
push
int
mov
stc
mov
mov
lret
and
data16
jb
dec
sbb
sub
aam
mov
push
jp
mov
mov
pop
pop
adc
aam
inc
pusha
lock
insb
push
lahf
push
mov
inc
sub
sbb
mov
les
dec
outsl
inc
and
xchg
inc
leave
adc
xor
lcall
cmp
push
imul
les
test
jge
scas
mov
sbb
test
mov
ss
arpl
loop
test
das
mov
in
jno
out
mov
out
push
fwait
jl
inc
push
pop
lcall
std
ds
pop
cli
test
and
negl
sarb
pop
aas
stos
jb
ss
sbb
sub
or
sub
push
jnp
or
inc
daa
inc
mov
sub
aam
and
repnz
jno
arpl
cmp
in
pop
push
cmp
cmpl
fsubrs
xchg
pop
and
lods
push
mov
addl
pop
pop
push
push
clc
das
mov
aas
mov
xchg
in
adc
test
sarb
and
inc
add
cwtl
dec
add
gs
adc
loopne
sti
mov
cmc
xchg
mov
pusha
dec
clc
fwait
and
pop
xchg
add
mov
daa
mov
mov
push
jno
orb
popf
adc
fstl
mov
jne
das
mov
icebp
mov
xchg
mov
or
add
mov
pop
gs
shrb
fcmovnb
sbbb
mov
lahf
jg
fucompp
into
shlb
cwtl
or
and
ja
inc
mov
inc
xchg
pop
pop
xor
inc
jg
into
js
jbe
xlat
xchg
inc
mov
or
pop
inc
lea
sbbb
dec
xchg
mov
jne
fnstenv
fiaddl
out
pop
pushf
addb
fadds
out
lret
lret
mov
call
lods
aaa
sub
adc
dec
scas
add
mov
fisttpll
inc
fbstp
and
cs
jne
mov
and
push
js
out
mov
popf
loop
inc
sbb
adc
mov
andl
jg
sahf
sub
pop
inc
and
call
icebp
xor
push
add
fldl
dec
icebp
mov
lock
cltd
test
mov
mov
cmp
jl
notl
sbb
and
loop
xchg
negl
inc
call
fisubrs
dec
mov
test
outsl
insb
iret
cmp
dec
hlt
outsl
das
pop
scas
jge
and
sbb
and
mov
jnp
inc
and
cmp
dec
test
outsl
dec
int
add
pop
aas
push
mov
and
sub
sbb
pop
test
mov
push
cmp
mov
cli
ror
rcrb
cmp
movsb
dec
shrb
mov
cmp
lcall
stc
xchg
roll
lods
jne
lahf
push
sub
push
cmc
xchg
inc
test
aam
cmp
or
pop
sub
pop
mov
movsl
addr16
dec
stos
insl
jp
bnd
cmp
das
mov
jo
mov
xor
dec
pusha
addr16
dec
pop
aas
mov
cmp
push
mov
ret
xchg
pop
fmulp
cmpsl
jnp
push
push
dec
push
jecxz
sarl
push
outsb
mov
dec
mov
inc
leave
add
cli
inc
repz
scas
js
mov
ljmp
mov
dec
push
fsubs
mov
aaa
mov
jne
shrl
cli
repz
fldpi
cld
pop
iret
data16
adc
popa
daa
and
mov
adc
add
jge
aaa
cwtl
mov
arpl
subl
push
nop
sbb
mov
and
movsb
xor
jo
inc
push
xorl
inc
pop
int
dec
cmpsb
add
push
and
inc
inc
pop
in
push
mov
and
scas
xor
out
mov
out
out
dec
fsubs
popa
mov
pop
adc
push
int
adc
push
rcrb
cmp
pop
push
mov
jg
pop
cmova
out
sub
int3
add
pop
lahf
mov
cltd
fwait
dec
pop
out
outsb
jno
movsl
stos
hlt
test
dec
pop
in
stc
jb
add
scas
rolb
jge
cmp
pusha
fcomps
mov
sbb
jmp
jg
addb
inc
mov
adcb
insl
cmc
ja
stos
in
xchg
adc
lock
mov
fisttpl
leave
dec
loop
pop
jge
inc
dec
xor
js
shll
push
outsb
sbb
cmpsb
mov
sub
sbb
sbb
mov
aas
hlt
sbb
in
dec
push
cmp
jbe
stc
cmp
mov
cld
push
sbb
sbbb
sbb
sarl
jne
imul
and
fs
cmpsl
sbb
mov
xchg
add
bound
aad
push
cmp
int
cmp
dec
ja
hlt
xchg
xchg
fidivs
test
insb
in
sub
mov
movsb
mov
push
rolb
outsb
cmc
mov
aas
adc
inc
xchg
fucom
inc
dec
jae
aas
in
xchg
xor
cmc
or
pusha
add
mov
mov
scas
sub
dec
inc
jns
cmpsl
ljmp
hlt
and
push
dec
call
jle
inc
ret
mov
sahf
sti
mov
push
cmp
push
inc
xor
xor
jge
iret
xchg
in
faddp
js
lock
xchg
outsb
pop
insb
cmc
add
cmpsb
or
or
cmp
ljmp
arpl
pushf
xchg
stc
popa
sbb
mov
lret
popa
cmpsl
pop
test
push
cltd
jbe
sbb
sub
pop
lods
std
das
fnstcw
imul
pop
sbb
pop
flds
xchg
or
pop
cmp
stos
fildl
or
in
out
adc
daa
das
cltd
sub
jecxz
pop
cmp
mov
mov
sbb
and
leave
hlt
popl
push
nop
mov
fiadds
mov
sti
lods
push
leave
and
int
into
pop
and
sub
ljmpw
ds
sbb
xor
mov
mov
push
pushf
lea
or
aaa
or
sahf
out
push
inc
cmc
jno
jg
nop
xchg
in
xchg
mov
cmp
fs
pop
mov
mov
gs
xchg
rorl
cltd
and
fcomip
sub
cmp
add
xchg
sbb
lods
leave
sti
jns
sub
sar
shl
sar
cwtl
out
pop
imul
mov
sub
fcmovnu
xor
insl
nop
out
cmp
rol
jnp
sub
std
inc
sti
add
jbe
inc
push
dec
daa
push
jno
push
shll
jmp
jbe
aam
hlt
inc
nop
out
sbb
and
cli
cmp
and
dec
dec
sub
xor
loopne
rclb
jg
xor
pop
cmp
xor
add
lock
adc
clc
xchg
mov
outsl
test
cltd
sti
xchg
dec
aam
mov
jno
mov
ljmp
fucom
mov
lcall
cmpl
out
xchg
xchg
std
xchg
dec
stos
out
fdivrp
inc
xor
fiadds
dec
repnz
roll
pop
icebp
cmp
jne
test
pop
test
ss
dec
dec
jo
jae
cmp
xor
push
mov
add
xchg
popl
mov
stc
lods
negl
mov
inc
mov
mov
dec
outsb
mov
sub
fucomi
sub
dec
xor
stc
les
outsl
push
pop
mov
and
xchg
jnp
and
inc
xchg
out
sbb
lds
mull
cs
call
cltd
aam
in
std
push
pushf
leave
add
subb
cmp
sti
ljmp
das
jp
push
inc
mov
ljmp
jo
adc
idivl
loopne
or
push
push
xor
sbbl
aam
mov
add
int
lahf
or
jmp
xlat
mov
negl
push
adc
inc
or
and
ss
or
cmp
dec
scas
insl
mov
xchg
rcrl
arpl
xlat
add
xchg
adc
dec
xchg
loop
push
sbb
cmpb
lea
aam
inc
and
add
cwtl
lcall
test
adc
push
ret
orl
scas
fistl
sbb
jae
stos
inc
dec
arpl
adc
gs
loopne
mov
sbb
ds
push
jbe
push
popf
sub
xchg
pop
xchg
jl
cmp
add
sbb
std
push
jne
inc
lods
rclb
mov
stc
fildl
cltd
ss
push
push
dec
mov
sbb
inc
es
test
in
lods
mov
add
lret
xchg
leave
jle
push
lea
std
and
es
push
loope
lods
add
repnz
cmp
lret
test
mov
mov
jbe
and
test
adcl
cs
outsb
pop
data16
inc
sbb
and
lret
cmp
insl
sbb
mov
iret
add
out
daa
shrb
push
inc
or
push
aas
test
sub
stos
rcr
mov
or
mov
aad
out
sub
pop
sbb
fbld
pop
jp
shrl
rclb
daa
mov
cmpb
test
rcl
fwait
push
ret
ja
or
mov
add
push
or
cmpsb
je
lcall
test
jbe
mov
cmp
lahf
push
inc
mov
mov
in
int
std
call
stc
test
inc
mov
jbe
mov
xchg
adc
lret
push
jecxz
imul
jae
mov
inc
aam
pop
fdivl
cmp
sbb
leave
jp
jno
xor
cwtl
pop
and
sarb
mov
jle
and
xchg
xlat
jae
test
adc
xlat
imul
sub
cld
inc
repnz
loopne
dec
mov
lea
fwait
aaa
mov
and
push
int3
push
in
imul
ljmp
jno
xor
stc
inc
jmp
int3
call
sub
cltd
stos
and
icebp
fldenv
fmull
test
mov
push
int
orl
leave
lock
fsub
sub
mov
imul
add
inc
xchg
fistpl
and
or
cld
sti
xchg
push
cmp
mov
stc
mov
mov
ds
xor
fmull
jns
ret
and
vpacksswb
jb
jo
std
gs
lea
sahf
call
pop
lahf
out
mov
sbb
push
push
jmp
or
mov
sub
sbb
cmp
inc
lahf
je
nop
fstps
push
ja
mov
xchg
aaa
repnz
inc
lcall
dec
add
cmp
dec
scas
pop
push
fwait
xchg
leave
out
mov
adcl
loop
pop
js
push
sub
loope
sub
mov
xlat
jno
lcall
mov
ds
int
adc
push
mov
inc
adc
push
add
cli
pop
test
mov
hlt
inc
ja
test
mov
cmpsb
jp
sti
lods
push
cltd
je
filds
xlat
clc
adc
adc
pop
das
insb
insl
rorb
pop
test
or
add
out
scas
lea
add
push
mov
mov
xor
cmp
mov
push
push
dec
dec
xchg
cmpsl
cmpb
push
andl
add
loope
mov
sbb
sub
pop
fdiv
pop
jmp
scas
and
in
out
lcall
mov
inc
mov
dec
xor
sbb
scas
jbe
mov
mov
std
rcll
push
mov
adc
sti
fildll
sub
loopne
hlt
xorb
outsl
sub
pop
push
cmpsl
lock
push
push
xchg
sahf
aas
xchg
addr16
nop
push
adc
lahf
lcall
ficompl
call
xor
pop
mov
lret
stos
mov
ret
rcrb
out
shll
and
mov
cmp
cmpsl
insl
jno
pop
fwait
inc
mov
out
pop
and
cmp
xchg
adc
jp
inc
dec
push
pop
lahf
add
and
pop
imul
inc
mov
jae
int
jns
iret
fcomp
sub
sub
or
outsl
nop
sbb
pop
lods
cli
or
xchg
je
or
inc
mov
pop
or
push
mov
cmp
js
mov
ljmp
fisttps
mov
lcall
pushf
push
xor
loop
mov
imul
popa
loop
cmp
pop
or
inc
pop
cmpsl
ficoms
inc
push
fxsave
pop
rorb
cld
leave
xchg
mov
inc
jnp
cs
adc
inc
fldt
pop
dec
xor
iret
imul
and
push
loop
or
test
mov
dec
test
enter
add
jmp
mov
jp
icebp
outsb
aas
dec
jl
stos
mov
and
mov
or
push
adc
sbb
pusha
xchg
in
pop
mov
push
sbb
stos
xchg
rclb
and
ljmp
mov
cmpsl
in
paddsw
dec
add
out
imul
mov
fwait
xchg
iret
nop
adc
aaa
lahf
enter
inc
add
pop
ror
mov
sbbb
add
out
push
lret
sti
in
adc
jmp
outsb
out
subb
nop
mov
push
cmc
es
xchg
xchg
jo
sub
lods
cmp
imul
sub
sahf
out
dec
cs
adc
add
or
xchg
repnz
cmp
data16
xchg
ja
jnp
outsb
push
jae
fwait
xor
hlt
testl
pop
test
add
cld
dec
mov
jo
sub
mov
or
enter
mov
mov
out
xor
dec
pop
sbb
mov
push
inc
iret
ficompl
xor
fisttpll
out
jmp
push
mov
icebp
xchg
dec
inc
lea
lret
sub
pop
sub
mov
movsb
push
stos
into
or
ja
jbe
inc
popf
rorb
adc
rclb
pop
fwait
push
sbb
cs
jg
into
pop
xor
popa
outsb
jb
xor
or
xchg
mov
inc
mov
xchg
xor
in
cmp
es
pextrw
cwtl
inc
ret
cmp
add
mov
sbbb
sub
outsb
fwait
push
lods
imul
sbb
scas
xchg
sbb
mov
andb
lfs
sti
shlb
jmp
pushf
mov
mov
shlb
pop
lods
aad
daa
pop
fbstp
and
sub
imul
loop
sbb
bound
in
and
xor
push
loop
cmpb
call
sti
sbb
stos
mov
mov
xor
lahf
inc
sbb
push
xchg
adc
jle
stos
roll
inc
add
pop
xlat
in
sbb
sbb
inc
mov
sub
inc
lods
push
jno
adc
mov
add
sahf
arpl
idivl
cmp
cli
xor
scas
mov
mov
mov
pop
rolb
into
test
push
mov
xchg
fsubrs
pop
int3
loope
pushf
leave
cwtl
mov
scas
into
push
push
mov
iret
repz
push
leave
adc
movsl
mov
sbb
sbb
test
in
lods
das
push
adc
xor
adc
sub
divl
fwait
xchg
cld
lock
aaa
push
or
fstpt
adcb
rcrb
sub
jecxz
in
mov
adc
mov
in
loope
pop
mov
mov
scas
sub
and
data16
and
hlt
push
jge
ds
popf
adc
jmp
jmp
in
mov
mov
dec
sbb
arpl
cmp
ja
out
adc
stos
imul
add
push
aam
mov
lods
aad
jb
mov
xor
js
ret
loop
jg
push
iret
adc
cwtl
and
pop
adc
aaa
pop
int
stos
cmp
and
ds
les
jmp
lret
cmp
test
ja
push
fucomi
sti
or
idivb
out
and
dec
add
nop
repz
test
enter
stos
push
jmp
inc
in
push
fcmovbe
pop
jbe
inc
pushf
and
push
push
cs
mov
imul
and
xor
push
jnp
cmp
pop
cmp
jae
sbb
xchg
jns
out
cmp
in
daa
subb
in
stc
scas
orl
dec
mov
cli
je
add
stos
into
dec
mov
xor
sar
cmp
push
push
cmp
pop
adc
insb
scas
add
fiadds
loopne
adc
pop
and
inc
mov
mov
cli
mov
mov
movsb
popa
xor
jbe
xchg
xor
cli
call
int3
mov
dec
cld
shr
imul
push
ret
fs
mov
cmpsb
cwtl
push
ret
cmp
ficomps
lock
test
scas
cld
cmpsl
out
cmp
add
add
mov
sub
cli
outsl
notl
jno
sub
mov
sub
fsub
dec
cmp
lock
ret
and
sar
and
jne
movsb
or
orb
fnstenv
push
mov
mov
jne
scas
out
js
popa
fnstcw
test
sbb
push
adc
push
fcomi
aam
aaa
ret
mov
fiaddl
pop
jno
test
dec
add
pop
cmp
lea
mov
add
sub
push
test
adc
ror
xlat
mov
iret
mov
dec
push
sbb
aas
pop
ss
xor
sbb
cmp
jne
inc
cwtl
fcomi
cmp
pop
cmpsl
sbb
mov
xchg
xor
mov
jnp
mov
sub
sti
and
dec
push
sbb
push
imul
mov
test
inc
lock
xor
int3
je
xor
bswap
add
mov
push
sub
jl
insl
xor
jno
lret
xor
jle
or
in
outsl
mov
jmp
dec
cltd
pushf
dec
jno
xchg
sbb
inc
and
sbb
shrb
bound
subb
jne
cmp
stos
aas
pop
mov
out
cltd
clc
dec
imul
icebp
push
and
mov
or
jmp
rorb
sbb
aaa
jne
mov
mov
adc
xor
sub
into
jl
in
and
in
cmpsl
je
jle
mov
and
adcb
stos
mov
lea
repz
ss
call
inc
dec
jp
lret
nop
or
push
out
lret
outsb
fldenv
mov
loope
cmp
fcomps
inc
pop
out
sbb
xor
loopne
out
and
inc
nop
sti
pop
int
pop
push
pop
popf
mov
and
xchg
cmc
ja
mov
ja
jne
sbb
xchg
dec
dec
std
loop
inc
lods
mov
pop
cld
push
adc
rorl
push
imul
or
cltd
cmp
push
out
ret
scas
call
jmp
add
xorl
xchg
adc
sbb
xchg
call
mov
mov
mov
dec
icebp
fadd
fiaddl
pop
and
cmp
mov
out
cmp
insl
enter
ljmp
pop
xorb
ds
and
iret
xor
aad
or
sahf
xlat
mov
adc
push
and
and
popf
rcrb
xor
pop
mov
jo
mov
sahf
fs
pop
cmpb
mov
enter
jl
adc
pop
sbb
ja
jnp
jne
stos
clc
jno
std
push
push
jne
mov
loopne
mov
scas
in
sub
and
pop
cmpsl
dec
jo
mov
int3
stos
scas
icebp
rorl
test
inc
dec
cmpsb
adc
mov
rorb
ret
aaa
dec
or
adc
push
pop
mov
xor
lock
xchg
pusha
pop
sbb
mov
shl
fcomp
jmp
lods
test
adc
cmp
ljmp
out
ss
addb
in
test
movntps
hlt
or
xor
shlb
xor
dec
icebp
push
test
imul
ret
es
std
mov
and
daa
sub
je
xchg
pop
test
lea
pop
addr16
mov
shlb
pushf
jo
inc
xor
mov
in
test
or
divl
mov
jge
add
xor
enter
repz
mov
ret
aaa
fwait
sub
mov
and
jl
sub
outsl
call
test
cmp
into
mov
dec
sbb
jge
iret
cmp
in
pop
mov
pop
loop
xchg
ljmp
pop
ss
or
sbb
push
pop
stc
in
mov
push
xchg
or
lcall
popf
push
or
ret
das
dec
push
dec
lret
mov
inc
sbbb
fs
push
ds
out
out
mov
rol
xchg
jne
xchg
test
inc
popw
mov
sub
add
sbb
jo
les
sbb
ss
inc
inc
gs
pop
fistps
jno
xorl
gs
faddl
lock
or
sub
pop
jo
ljmp
mov
mov
insb
fwait
pop
bound
jae
pop
call
rol
and
mov
in
jbe
mov
add
loopne
mov
push
imul
into
adc
dec
push
outsb
mov
subb
inc
lock
mov
lea
mov
inc
add
jg
adc
dec
loope
jb
in
jge
sti
test
jb
and
xchg
dec
inc
in
repz
lds
rcrb
out
outsl
dec
jmp
adc
addr16
popa
insb
push
push
lcall
test
pop
repz
dec
shlb
imulb
xchg
insl
lea
push
sub
in
insb
cmp
call
xorl
cli
test
lock
icebp
pop
pop
fidivs
or
mov
add
popf
xchg
dec
cmpsb
mov
ja
sbb
clc
sub
sub
or
pop
push
test
aad
dec
sbbb
push
push
pop
sub
ja
pop
frstor
leave
hlt
insb
mov
cmc
outsl
stc
out
push
mov
inc
lret
sub
cmp
addr16
xlat
int
popa
add
fistpl
pop
add
dec
cmp
add
pop
pushf
adc
xor
in
cmp
pop
pop
and
andl
div
xchg
jl
cmp
movb
ficoml
les
add
repnz
dec
sbb
mov
and
lods
dec
call
clc
loopne
lock
outsb
xchg
jnp
cld
inc
mov
sub
push
or
data16
mov
aad
pop
jae
cmp
mov
pop
mov
test
dec
fimuls
jmp
jbe
cwtl
pop
out
repz
cmpsl
imul
lock
scas
sti
push
jnp
xchg
dec
add
jnp
pop
mov
das
xchg
repz
cmp
mov
andb
xlat
push
xlat
andl
lret
jbe
aam
loope
xchg
outsb
ficoml
sbb
ljmp
mov
adc
fdivrs
pop
fistpl
inc
jmp
inc
test
adc
cs
or
push
xor
fdivp
repz
dec
xor
loop
insb
push
pop
mov
jle
inc
jne
sub
cmpsb
das
pop
dec
sbb
lock
xlat
sub
mov
mov
test
push
sub
jno
xor
arpl
inc
repz
mov
pop
mov
in
jae
push
jmp
xchg
mov
nop
aaa
aam
cmp
xchg
out
cmpb
xchg
rolb
int3
inc
arpl
xor
repz
outsb
test
push
push
dec
into
idivl
or
sbb
mov
popa
inc
mov
loope
insb
add
sbb
movsl
pop
cltd
sbb
xor
push
in
enter
dec
dec
xchg
push
repnz
sub
iret
arpl
sub
sub
xchg
xor
ja
sbb
es
lcall
jp
add
mov
or
loop
cmc
and
call
insb
push
cmpb
inc
popf
dec
mov
sub
movsl
or
loopne
cmp
xchg
pop
pushf
pop
loope
sbbb
jo
popa
jno
ds
jg
jb
fdivs
xor
fiadds
clc
mov
fidivs
loope,pt
sub
neg
mov
adc
fildl
test
sub
data16
mov
filds
mov
jae
loopne
push
imul
jg
push
jne
out
pop
pop
inc
decb
pop
lods
add
pop
outsb
jno
cmp
add
jne
add
push
adc
xchg
int
outsl
cld
daa
push
pop
add
iret
push
sbb
jo
push
js
xor
sub
in
jl
mov
dec
aam
push
rcl
jbe
inc
pushf
jno
sarb
repnz
jb
sarl
les
jo
dec
pop
push
popa
xchg
idivl
add
or
int
icebp
push
pop
cwtl
jg
cs
call
addr16
fwait
or
test
insl
and
loopne
add
scas
xchg
ret
sbb
pop
mov
hlt
xchg
mov
xor
dec
mov
shrl
mov
mov
push
xchg
cmp
xchg
push
scas
lahf
jg
sub
int3
dec
sbb
nop
mov
jmp
and
int3
xchg
push
lods
adc
dec
loopne
jecxz
inc
mov
ret
dec
subl
imul
cltd
clc
push
cmpsb
pop
and
ret
mov
loopne
lret
cmpsl
dec
push
dec
inc
out
xchg
add
movsb
shrb
test
inc
push
or
jle
fcmovbe
pop
clc
inc
push
fidivrs
mov
add
or
js
mov
dec
dec
inc
in
xchg
loopne
jns
sbb
in
movsb
mov
xchg
out
and
adc
stos
rcrb
in
mov
fnstenv
pop
inc
or
aad
lcall
xor
dec
int
nop
mov
popa
sbb
stos
xor
out
outsl
pop
mov
adc
mov
xor
stc
jecxz
mov
dec
push
mov
fidivs
out
mov
sbb
pop
lcall
add
sbbl
lock
add
mov
xor
xor
leave
addb
mov
mov
dec
mov
rcpps
push
mov
sti
cmp
pusha
adc
outsl
pop
jle
addl
jecxz
mov
add
sub
add
jge
dec
out
jle
pop
push
xchg
xchg
sub
test
mov
test
rolb
mov
adc
cmp
mov
xchg
lock
repnz
inc
xchg
xlat
xchg
dec
nop
dec
fdivrl
jge
out
cmp
jg
cmp
cmp
lods
mov
lret
xor
mov
stos
ret
adc
ds
dec
punpcklbw
lret
mov
js
ja
jbe
fs
or
fdivp
jp
xor
mov
and
std
jg
push
mov
jno
sub
jae
ja
mov
xchg
mov
dec
dec
or
rcrb
pop
inc
imul
push
ficomps
inc
movsb
pop
leave
push
mov
nop
pop
mov
push
jmp
inc
fprem1
adc
cmpsb
mov
dec
sti
xchg
mov
popa
cli
jno
mov
enter
cmpsl
ror
mov
mov
std
push
mov
mov
dec
add
jge
lahf
loopne
mov
mov
mov
popf
pop
and
cld
push
sbb
cmp
mov
enter
sbbb
lea
adc
lcall
xchg
inc
mov
xchg
xor
popf
xor
adc
jne
out
mov
adc
add
icebp
pop
out
hlt
and
fucomi
sub
jge
inc
les
fiadds
or
aas
insb
es
pop
mov
popa
jo
cmp
mov
xchg
add
or
pop
mov
les
dec
jne
ror
cmpsb
sub
lret
loopw
or
push
js
and
xor
jo
add
idiv
imul
and
cmp
loope
sub
out
jo
hlt
mov
fidivrl
pop
arpl
in
push
jge
mov
sbb
cmp
or
stc
shrb
mov
cmp
ror
repnz
iret
test
xchg
int
or
mov
repz
or
push
mov
mov
cmp
sbb
mov
les
xchg
jle
and
xchg
filds
dec
testl
clc
push
mov
sub
xor
jae
int
aaa
xchg
add
fsubr
sbbl
stos
push
sti
or
in
andb
in
push
stos
popf
sub
repz
rcrl
popf
out
inc
out
pop
lret
sti
or
push
inc
dec
lret
rcrl
jbe
fbstp
lret
cmpsb
decb
xchg
mov
inc
aad
mov
mov
add
je
sub
stc
addb
jl
ja,pt
or
ffreep
loopne
mov
cltd
push
lahf
sahf
cmp
int
xchg
jne
out
mov
mov
pop
sub
popa
ret
sahf
and
mov
cs
or
mov
pop
punpckhbw
outsl
adcl
mov
bound
rcr
jle
enter
mov
xlat
fimuls
cli
lods
jle
scas
test
jmp
lds
fsubl
jnp
aad
pop
xchg
aad
imull
mov
inc
test
inc
pop
jns
mov
shr
daa
lds
mulb
xchg
mov
cli
scas
adc
and
push
stos
xor
push
dec
xchg
xor
into
cltd
pop
push
fwait
inc
mov
leave
push
and
gs
loope
fistpl
imul
movsb
getsec
mov
lea
sahf
adcb
insl
cwtl
scas
cmpsb
jno
push
cmp
rorb
pushf
fwait
aad
cwtl
dec
sub
jmp
ljmp
lret
mul
xor
dec
daa
dec
xor
inc
rcrb
pop
and
dec
test
inc
test
mov
loopne
sub
sbb
cmpsl
test
arpl
pop
jns
push
imul
jo
test
insl
add
and
push
and
adcl
imul
push
xor
aaa
cwtl
push
pusha
xorb
jne
push
mov
xlat
cmp
fldt
jmp
shrl
call
icebp
sbb
sub
test
dec
pop
and
outsb
lock
lods
fisubs
popf
mov
or
pushf
clc
bound
sbb
lods
fsts
jnp
sbb
int
and
fistps
test
inc
test
jg
mov
pushf
in
ljmp
lret
outsl
jo
pop
out
inc
int3
loope
jns
jns
adc
lods
mov
and
pop
push
fisttps
das
push
xchg
inc
ja
sarb
push
fnstsw
sti
mov
cmp
or
mov
ret
cs
iret
rcl
cli
adc
les
fwait
ds
sbbb
test
repnz
inc
add
or
pop
push
or
fdiv
leave
cmpb
out
cld
sub
lret
mov
mov
in
cmp
dec
inc
in
in
aad
cmpl
cmc
out
cmp
inc
fnstsw
movsb
fdivrs
or
stc
inc
lcall
jnp
dec
pusha
mov
sarl
imul
aas
jg
shrb
shll
pop
add
push
scas
jb
gs
jo
xor
cmpsl
repz
mov
fnsave
addr16
or
and
mov
clc
xchg
cmp
subb
mov
imul
repnz
push
pusha
jecxz
test
push
movsl
sbb
jge
insl
pop
jno
mov
aam
and
rep
cltd
nop
insb
into
icebp
cwtl
push
inc
add
mov
mov
pop
sbb
scas
stos
mov
jge
dec
lea
xchg
sbb
xchg
xchg
mov
stc
cmp
cmp
imul
dec
mov
test
pop
lahf
mov
ret
imul
test
mov
add
sbb
xchg
adc
mov
fistpll
or
xchg
cmc
mov
dec
btc
pop
mov
cmpsb
popf
call
das
cmc
or
popf
sbb
fsubrs
sbb
clc
fdivp
jge
cmp
fnstenv
xor
jbe
jecxz
xor
pop
repnz
or
cld
aad
dec
mov
leave
imull
cmpsl
xchg
push
add
and
lea
pop
sub
ja
cmp
dec
cmp
shrb
loope
fiaddl
jmp
push
fwait
mov
fldenv
or
cmp
sbb
xchg
pop
jle
jge
lds
jp
xchg
mov
stos
es
pop
cmp
fidivl
push
xchg
test
stc
mov
cmpl
push
std
dec
sub
pusha
lahf
test
jl
mov
outsl
xchg
jp
inc
xchg
daa
fistps
cmc
jo
xchg
push
ja
cmc
lock
fisubrl
iret
xchg
sti
lret
jmp
add
sub
inc
mov
push
cmp
mov
dec
aas
cld
aam
mov
sbb
sub
push
mov
cld
pop
into
xchg
test
imul
lret
lock
lret
xchg
in
cmp
dec
inc
lods
jo
test
mov
sub
jb
sbb
jge
cmp
xlat
or
inc
jmp
jne
imul
adc
insb
xchg
xchg
outsl
push
sarl
subl
repz
adc
movsb
inc
cmp
repnz
repz
rorb
scas
imul
jmp
sbb
fldenv
enter
lret
adc
outsb
inc
xchg
push
xchg
lock
rorb
mov
cwtl
lahf
jns
test
aad
lods
in
ljmp
push
iret
jno
aas
mov
outsb
fldenv
movsb
dec
mov
outsl
lock
aaa
js
pop
fidivl
adc
loope
sub
cmpsl
leave
mov
jb
cmc
lahf
test
repz
sbb
jmp
jge
xlat
addr16
xchg
out
jg
push
or
or
out
mov
sub
fs
sub
xchg
mov
xor
js
insl
addr16
call
imul
jns
roll
pop
xchg
mov
jno
rorl
cwtl
test
sbb
xchg
test
js
mov
out
ss
mov
adc
mov
dec
test
inc
pop
mov
and
je
mov
ret
inc
push
cmp
and
add
les
mov
sarl
mov
jecxz
adcl
jecxz
xor
pop
mov
sub
or
pop
push
dec
dec
fs
xor
pop
sbb
mov
push
sbb
subb
or
ret
loope
sub
repnz
and
push
jb
and
adc
mov
xor
xor
test
stos
sub
dec
bnd
jge
nop
cs
mov
cmp
imul
cmpsl
fistpll
xor
mov
scas
push
rcll
jle
subps
sbb
mov
lret
scas
lea
sbb
fwait
push
pop
mov
cltd
push
fadds
jae
jp
lret
adc
push
adc
aaa
test
jnp
add
in
lret
cmp
das
ret
or
push
ret
mov
cld
fdivr
xchg
cmpb
dec
cli
pushf
in
movsl
aas
cmp
test
push
pop
xchg
ss
sub
insb
sbb
stos
jmp
movl
push
pop
cmpsb
sbb
or
lahf
lcall
jnp
fmulp
push
pop
std
shrb
int3
jp
fucomi
mov
mov
cld
add
lods
sub
push
lahf
pop
jbe
push
ja
push
aas
mov
into
mov
fcmove
jl
cltd
cmp
cmp
imul
adc
test
xor
ljmp
add
fcoml
int3
xlat
and
scas
inc
test
mov
xchg
out
enter
cmc
push
cmpsl
xor
addr16
and
imul
aam
jmp
cs
stos
mov
subb
push
add
imul
addl
outsl
loop
or
loope
push
fs
xchg
stc
jg
push
jl
mov
xor
adc
scas
sbb
in
jle
aas
jp
push
lret
jne
xorl
xchg
pop
stos
insb
pop
sub
imul
in
fldcw
test
push
jo
shrb
dec
mov
xor
push
inc
nop
pop
data16
jle
dec
aaa
std
enter
cmp
cld
jge
subl
in
insb
cwtl
add
das
movsb
std
jp
dec
jb
add
imul
xor
inc
xchg
mov
fadd
imul
and
jg
mov
jo
mov
xor
inc
sub
out
ja
jo
cmpsb
pop
lock
in
shr
imul
imul
cli
push
cmpb
or
mov
int3
and
data16
data16
cmp
popf
repz
scas
fstl
cmp
movsb
pop
jnp
aas
inc
in
fdivl
mov
lcall
cli
fcmovb
or
or
jge,pn
jns
push
jo
cltd
inc
cs
cld
popf
inc
out
mov
cwtl
or
out
cmpsl
sti
test
sub
mov
imul
call
call
stos
iret
push
es
mov
test
xor
out
stos
sbb
jns
test
and
jecxz
jg
int
and
lea
outsl
mov
xor
lods
cmp
mov
mov
int3
jmp
mov
adc
sub
int3
xor
jecxz
push
or
pop
inc
jl
je
stc
sarb
in
ret
orl
lods
icebp
nop
cmpsb
popl
cltd
mov
inc
lcall
mov
stc
test
aas
ja
sbb
add
call
repz
pop
repz
pop
loope
add
xor
iret
and
xor
in
jne
push
fnstsw
cs
and
inc
jl
cmp
mov
fadd
xchg
jg
scas
sbb
sbb
test
pop
pop
mov
or
loope
jo
mov
xor
xor
mov
mov
mov
test
cld
imul
push
xchg
xor
scas
fstpl
dec
and
push
and
jmp
outsb
inc
mov
mov
call
pop
add
pop
pop
xchg
dec
jmp
mov
xor
jl
sarb
pop
insb
mov
insl
aad
xor
mov
aad
inc
inc
insl
or
loop
sti
loop
out
sbb
push
xchg
inc
jo
dec
xchg
dec
dec
iret
push
lods
jb
iret
push
adc
mov
imul
and
adc
jnp
loopne
imul
dec
push
arpl
jg
push
mov
cltd
pop
adc
cmp
out
cmp
mov
fcmovu
lds
fcomps
addr16
shll
add
lahf
inc
inc
loop
xchg
outsl
push
mov
sub
daa
mov
fxch
and
stos
andb
sbb
outsb
in
cwtl
arpl
sub
lds
hlt
out
rclb
adc
cltd
std
push
sub
and
ljmp
and
and
gs
loop
sub
sbb
je
js
lahf
jg
cli
aaa
lods
mov
or
sbb
std
mov
dec
jmp
xor
ljmp
call
or
mov
stos
cld
bound
adc
fs
mov
mov
jae
shlb
int
dec
inc
sub
fs
jge
stos
sub
pop
imul
std
jp
loop
inc
sbb
rep
lcall
ja,pn
stos
xchg
call
fisubrs
fsubl
insl
jg
adc
adc
jmp
js
aaa
stc
sub
inc
divb
stos
not
mov
loop
sti
shr
cmp
sub
push
sub
xor
enter
fsubr
aaa
cmpsb
sbb
into
outsb
imul
or
pop
push
pushl
or
dec
pop
push
cs
shr
pop
shl
adc
sub
lds
jle
sub
xlat
and
arpl
popa
push
int3
icebp
push
pop
lret
add
fdivp
mov
and
xchg
stos
std
dec
aam
loopne
cmp
stos
and
adc
add
xor
sbb
sub
xchg
push
dec
fdivrp
pop
mov
inc
cmp
ljmp
mov
add
dec
mov
repnz
mov
add
and
fldt
adc
int
sar
xor
push
mov
cmp
pop
sahf
pop
pop
sub
je
jmp
loope
pusha
scas
mov
xor
push
or
or
les
xchg
sahf
push
negb
cmp
add
sahf
loopne
mov
stos
mov
jb
ljmp
xchg
lcall
and
mov
pop
jnp
cmpsl
mov
cmpsb
das
pop
jns
aaa
dec
xor
dec
jp
sub
pop
xchg
sub
pop
clc
mov
or
pop
dec
pop
xor
scas
mov
pop
or
or
decb
mov
xchg
or
adc
mov
lahf
outsl
or
cmp
lods
pop
lahf
test
xchg
pop
fcomps
sbb
or
lds
hlt
mov
sbb
or
cwtl
stc
dec
cmp
mov
dec
push
lods
sub
fcoml
insb
fmull
push
lcall
or
ret
jg
call
sub
pop
mov
lahf
cmp
lock
pop
lret
adc
and
xchg
pop
dec
dec
int3
inc
jmp
jmp
movsb
cld
pop
pusha
lea
out
dec
dec
mov
dec
mov
mov
or
idivl
pop
repz
jge
loop
jecxz
clc
loope
in
add
mov
and
xor
jg
mov
rorb
add
lahf
sub
push
in
jmp
std
cmp
sbb
sub
movsb
shrd
push
xor
xor
and
xor
mov
mov
cmp
decl
dec
or
inc
dec
pop
mov
dec
sbb
sbb
ret
sub
jne
cmp
mov
mov
adc
inc
push
and
pop
lds
cwtl
push
imul
sbb
adc
xor
es
scas
addl
mov
mov
and
mov
xchg
or
out
int3
pop
rorl
push
test
fistps
into
and
dec
loope
in
sub
loop
or
stc
or
fists
or
rcrb
fldt
or
lea
aas
add
and
jecxz
dec
add
test
out
ljmp
aas
inc
lea
jb
sub
fistpl
imul
dec
adc
sahf
test
sub
pop
ja
or
xchg
call
mov
pushf
iret
das
aam
sbb
out
outsb
in
cmpsl
dec
dec
in
fdivrs
or
jnp
xor
mov
cs
scas
pop
dec
das
ficoms
sbb
or
dec
pop
jp
mov
xlat
dec
sbb
imul
jle
insl
push
in
js
in
fidivrs
sbb
add
ja
cltd
imul
cs
out
pop
fisttpll
cmp
bound
fnstenv
jge
sbb
icebp
aas
cmp
loopne
and
ret
push
icebp
stos
mov
cwtl
pushf
pop
js
fstpl
loope
sti
sbb
gs
gs
daa
and
aas
and
repz
std
fsubl
pop
push
dec
movsb
mov
or
mov
push
cmp
sbb
cs
aad
std
pop
cli
mov
xchg
xchg
pop
jp
stos
arpl
or
sbb
daa
jle
in
outsl
cmpsb
cmpsl
nop
xor
mov
push
pop
cmpsb
fmull
in
shlb
test
addl
in
aad
mov
scas
shl
cmp
or
cmp
arpl
sub
or
mov
inc
aaa
insb
popl
dec
push
insl
xchg
mov
jo
and
out
cmp
jns
imul
leave
out
jae
adc
mov
ds
in
jmp
push
imul
fstpt
repnz
pop
and
inc
stos
xor
or
xchg
or
mov
cmp
mov
xchg
push
sti
pop
roll
test
pop
xor
inc
das
pop
fildll
pop
insb
aas
outsb
push
sahf
inc
jp
test
pop
cmp
std
fwait
cmp
mov
lahf
outsb
cmp
icebp
jecxz
cld
sbb
aas
sbb
in
mov
cmp
fld
dec
mov
pop
jp
hlt
cli
jl
bound
popf
mov
lods
xor
outsb
fdivr
inc
daa
pop
insb
push
divl
arpl
mov
loop
jg
xor
jle
data16
aas
aad
sbb
or
fnstenv
jnp
cmp
pop
pop
mov
mov
push
imul
call
lret
repnz
cmpsl
filds
repz
fcompl
insb
sbb
sbb
je
dec
mov
jmp
loope
clc
popf
mov
cmpsb
movsb
cmp
pop
ljmp
arpl
pop
pop
xlat
fwait
cmp
lcall
iret
es
insb
enter
sub
push
mov
rcl
cmpsb
xorb
inc
push
in
aad
int3
sbb
out
push
xchg
dec
xor
mov
mov
xor
mulb
or
insb
and
cmc
aaa
test
decl
sbb
cltd
cld
push
clc
rclb
jb
rcll
push
mov
idiv
sti
ds
ss
gs
roll
pop
mov
cmc
addb
mov
dec
movsb
cmp
jae
sbb
leave
jne
or
adc
pushf
mov
xchg
fldl
xchg
out
icebp
mov
lods
mov
sbb
mov
pextrw
add
cmp
push
mov
mov
xor
stc
pop
hlt
sti
mov
movsb
repnz
xor
outsb
cli
jp
fwait
xchg
sub
rcll
mov
mov
cli
loop
movsb
sub
mov
and
jnp
andb
push
sti
xlat
xchg
sbb
fldt
andl
clc
pop
mov
popf
lds
or
lret
push
js
dec
cmovns
inc
cld
in
aad
lds
sbb
pop
ds
inc
mov
sbb
arpl
mov
shl
mov
xchg
cmp
and
inc
cwtl
sbb
jg
dec
jns
rol
gs
not
out
mov
movsb
icebp
int3
pop
mov
ds
cld
imul
popf
dec
pop
mov
pop
push
xchg
push
add
js
sub
adc
stc
jmp
int
mov
xor
aam
js
ret
aas
scas
out
ja
xchg
dec
out
and
movsb
das
adc
dec
outsl
aad
fcoml
mov
in
adc
rcr
mov
gs
sbbl
scas
rcll
inc
jg
and
add
imul
inc
jnp
jle
dec
fs
and
mov
inc
int
aam
sti
dec
daa
icebp
jle
rorl
push
dec
sti
movb
mov
and
cmp
mov
outsl
negl
and
imul
aaa
pusha
jo
popa
test
mov
orl
add
sbb
sub
mov
scas
adc
pop
pushf
dec
adc
xchg
jnp
push
outsb
sub
cmp
and
jg
fwait
jbe
aas
jbe
cmp
insb
sub
inc
outsl
scas
ljmp
mov
sub
movsl
jl
mov
jb
mov
inc
sahf
fs
and
push
gs
ret
inc
add
enter
mov
aaa
mov
and
imul
lahf
mov
mov
and
pop
push
jmp
cld
push
and
inc
inc
test
lcall
movsl
ja
push
or
mov
popf
rcll
sbb
lret
xor
fbstp
jmp
mov
arpl
adc
jo
aad
js
movsl
sbb
mov
cmp
xor
add
cmpsl
inc
or
sahf
push
mov
jmp
imul
adcl
push
mov
inc
sub
sbb
mov
flds
sbb
sub
xchg
jp
jg
jecxz
adc
std
push
mov
lret
mov
cmp
push
cmp
adc
insb
xor
xchg
dec
jbe
dec
pusha
mov
dec
push
aam
jecxz
pop
cmp
fdivl
test
dec
aad
cmp
push
dec
adc
outsb
mov
push
scas
push
adc
mov
bound
adc
xor
lret
push
or
push
mov
mov
jmp
in
dec
hlt
mov
sbb
js
mov
aad
inc
pop
mov
dec
and
jecxz
add
clc
in
in
fimull
js,pn
jae
cwtl
pop
int3
stos
bnd
lock
ret
sbb
pop
sbb
aaa
push
lret
lods
mov
stc
mov
xchg
sub
pop
jb
movsl
sbb
into
push
notb
dec
out
sub
adc
outsl
scas
cmpsb
dec
and
dec
insl
jg
mov
cmpsl
push
pushf
hlt
jg
sub
xchg
inc
cmp
insb
stos
push
xchg
clc
jns
or
inc
iret
pop
mov
cmc
ss
in
pop
mov
and
xor
test
mov
arpl
fistpl
mov
sbb
jae
inc
es
lods
call
sbb
lea
inc
ljmp
pop
ret
clc
or
mov
xchg
jmp
out
ds
cmpsb
sbbl
loope
loope
mov
cmp
scas
enter
ljmp
cld
add
mov
setge
cmp
in
dec
fsts
push
mov
add
addr16
arpl
mov
pop
pop
pushw
cmpsb
ljmp
pushf
das
sbb
push
or
jno
add
cmpsb
loopne
mov
adc
stos
int3
pusha
addr16
sub
repz
jo
dec
scas
push
xor
ja
xchg
inc
test
call
out
sysexit
sbb
inc
loope
xchg
push
pop
xor
mov
xchg
jae
xor
xchg
mov
sbbl
insl
imulb
je
sub
and
and
adc
clc
jle
pop
jo
js
mov
rcll
jecxz
mov
mov
call
popf
loop
fisubs
in
push
xor
mov
and
xor
jne
mov
mov
in
mov
xchg
pusha
cmp
or
xor
test
outsl
mov
jg
into
mov
les
aaa
inc
shll
xchg
and
cmp
out
mov
cld
mov
adc
dec
sbb
gs
dec
movsl
test
jl
add
fbld
arpl
int3
popa
lods
je
gs
cld
enter
and
mov
repnz
mov
int3
sbb
or
cmc
xchg
jno
push
push
pop
out
data16
std
shl
xor
cmp
mov
dec
pop
fcoms
test
iret
push
fstpl
mov
and
sub
push
dec
das
rorl
mov
ss
gs
add
push
sub
jns
int
imul
cld
cmp
dec
ucomisd
in
xchg
mov
mov
dec
in
dec
sub
push
out
pop
sub
pop
pop
sbb
loop
jb
ds
lcall
jns
xchg
outsl
jo
mov
cmp
xor
and
push
mov
jne
ret
dec
dec
push
sbb
es
out
outsl
mov
dec
sub
setl
mov
testb
push
mov
mov
test
push
xchg
lahf
stc
mov
stc
fstps
jno
sahf
cmp
push
dec
arpl
add
bound
sub
lods
call
cltd
in
cwtl
into
cld
xor
mov
mov
loopne
pop
fcomps
cmpsb
fs
dec
xor
test
xorl
jno
and
and
sbb
popa
push
ds
sbb
test
xchg
cmpl
or
fistps
sub
fcmovbe
cmpsb
or
pop
xchg
xor
js
pop
mov
and
call
test
shrb
xchg
imul
push
lods
in
inc
jge
loop
dec
mov
test
ljmp
adc
mov
cmp
addb
push
cwtl
pop
out
lret
pusha
lods
or
enter
scas
out
jp
mov
push
icebp
pop
mov
inc
or
push
out
and
loope
in
test
das
add
lea
ss
sbb
cmp
add
cli
ss
pop
push
cltd
js
jae
outsb
jge
mov
push
or
mov
sbb
gs
sbbl
mov
or
fcoms
jb
fstps
mov
mov
mov
xor
aaa
mov
out
sti
cwtl
imul
mov
cld
dec
push
nop
fidivrl
ja
sub
cmp
xor
es
mov
cmp
insl
adc
arpl
jle
and
mov
into
aam
bound
pop
pop
inc
add
mov
xchg
cmc
adc
mov
dec
jmp
pop
sbb
inc
xor
sub
loop
fnsave
mov
cmpsl
mov
mov
and
cmp
and
stos
xchg
pop
clc
int
lea
sub
nop
inc
pop
push
mov
pop
sub
add
pop
cmpb
lret
rcrb
mov
mov
pushf
lahf
test
cmpsl
xchg
divb
enter
fisubl
int3
sbb
into
add
daa
dec
outsl
mov
arpl
mov
or
ret
xor
call
out
inc
pop
xor
cs
into
and
fldcw
int3
icebp
mov
jge
sbb
and
or
cmc
cwtl
or
sbb
aad
inc
lret
in
mov
cs
lds
ds
or
lret
dec
sarl
xchg
lcall
pusha
push
ds
sbb
jge
loopne
xor
dec
push
int3
insl
out
aas
mov
call
mov
jo
sbb
or
arpl
lret
pop
inc
push
and
jb
mov
push
enter
popa
add
out
rclb
mov
fmul
xor
int3
sbb
jne
jno
jo
addb
cmp
pop
push
xor
or
int3
fstpl
dec
or
xor
xchg
xchg
pop
or
pop
or
push
and
mov
dec
inc
and
add
add
push
jo
mov
repz
xchg
ss
mov
std
rolb
gs
ss
loop
scas
sbb
in
mov
lret
int
and
js
push
pop
sarl
add
mov
movsb
shrb
pushf
and
xchg
mov
bound
lret
xor
imul
std
push
sub
xchg
pop
jne
cmp
cmp
jle
jp
jge
push
mov
xor
inc
sbb
adc
jp
mov
scas
std
mov
mov
lahf
push
sbb
out
pop
jnp
repz
nop
cli
or
or
xor
mov
ds
mov
mov
or
mov
sub
dec
sub
xor
lods
cld
xchg
pop
and
jmp
mov
push
pop
jecxz
mov
mov
cmc
icebp
pop
xor
sbb
dec
in
push
add
or
jbe
int
aam
xchg
mov
pop
movsl
mov
sub
into
adc
and
cld
sbb
add
mov
jnp
test
cmc
mov
jmp
in
in
in
pop
call
add
mov
cmpsb
fdivl
jle
add
in
xor
mov
stos
mov
lret
nop
bound
inc
loope
and
int
shll
push
sarb
adc
out
orl
bound
nop
xchg
lahf
fisttpll
xchg
aad
pop
leave
dec
push
sbb
hlt
jle
cmpb
add
pop
sbb
lcall
push
jbe
arpl
jge
xchg
mov
dec
jne
jnp
cmp
movsb
call
jle
ds
mov
xor
jno
ja
xchg
mov
push
in
xchg
daa
sbb
mov
jno
adc
or
push
push
into
mov
inc
adc
out
enter
stos
frstor
xchg
cmp
je
sub
shrl
mov
pop
imull
mov
shll
push
gs
bnd
push
pop
mov
mov
scas
sti
add
aaa
mov
fwait
aad
pop
aad
mov
jg
shlb
dec
add
sbb
inc
lea
outsb
aas
mov
adc
or
push
pop
push
cmp
push
movsl
adc
lahf
fimuls
pop
adc
rcr
loope
push
shlb
hlt
push
outsl
pop
lret
push
dec
xor
inc
inc
mov
dec
jge
xchg
and
inc
js
jno
push
push
push
hlt
pusha
sbb
dec
jmp
jmp
arpl
mov
push
mov
sub
mov
inc
lcall
ror
mov
jno
pop
nop
ror
lds
push
dec
out
fs
mov
sbb
xchg
andb
xchg
xor
mov
mov
outsb
mov
pop
les
xor
mov
sub
ds
mov
lods
mov
mov
out
mov
aaa
pop
jg
and
ret
push
push
jecxz
inc
sub
ss
insl
stc
and
les
aam
dec
jmp
mov
outsb
push
mul
push
ss
mov
mov
mov
xchg
xchg
mov
push
inc
ffree
adc
cmpsl
adcb
jae
out
dec
leave
cmp
push
ljmp
lods
arpl
jns
xchg
xor
sub
es
leave
jl
aad
sbb
mov
aas
jg
cs
jb
push
pop
outsb
test
out
ret
xor
mov
dec
cs
dec
addl
mov
sbb
divl
in
fmull
nop
clc
adc
push
pop
repz
push
xchg
daa
ljmp
je
popa
mov
dec
mov
lods
shl
jo
push
pusha
movaps
mov
push
mov
insb
popa
pop
es
mov
pop
pushf
dec
push
fmull
dec
pop
outsb
sub
int
mov
scas
cmp
jno
in
adc
fistpl
sbb
fistpll
sub
xchg
int3
sbb
std
ja
xor
idiv
push
test
fs
decl
cmp
ficompl
sub
or
add
sbb
into
inc
fwait
mov
pop
mov
xor
add
jo
addr16
subb
cmpsb
stos
jmp
jg
leave
cmpsl
test
test
fs
iret
xchg
lret
push
mov
or
inc
fidivrs
stc
jge
test
data16
cmp
movsb
pusha
cmp
mov
mov
js
js
pushf
or
push
mov
cli
cmp
cmp
add
popa
mov
and
fadds
test
jbe
xchg
inc
aaa
test
and
sbb
outsl
mov
add
xchg
les
mov
into
mov
cmc
add
fisubs
xchg
push
cmp
jle
pop
pop
test
rcrb
sub
xor
sbbl
xchg
sar
sbb
popa
fxch
fimuls
pop
in
jge
sub
mov
jmp
inc
je
and
jmp
adc
rcll
decl
fadds
xlat
jecxz
call
clc
mov
mov
sub
sbb
stc
rolb
xchg
push
jge
xchg
fs
pop
push
js
add
push
lcall
mov
in
mov
mov
fnstcw
or
enter
aaa
jnp
sbb
xlat
inc
outsb
xchg
ror
push
pop
xor
lods
jle
jl
jne
idivl
and
es
inc
pusha
inc
das
and
sub
mov
sti
sub
and
sub
jmp
test
and
and
ret
outsb
aad
dec
pop
cmp
jle
aas
outsl
insl
cwtl
int
filds
mov
cmpsl
mov
mov
sahf
lods
test
stc
sbb
in
add
addb
mov
sbb
mov
or
scas
insb
popf
mov
cmpsl
loop
inc
lock
dec
xchg
sbb
jecxz
jo
rorb
loopne
iret
add
test
fmuls
clc
push
or
sbbb
cmp
lret
push
arpl
lcall
adc
jg
push
inc
mov
daa
inc
enter
pop
jecxz
or
mov
jno
jge
inc
out
lock
mov
cmp
add
fistps
outsb
hlt
cld
push
jmp
pop
inc
sbbb
stos
clc
push
dec
je
mov
mov
cmp
inc
std
jns
out
cmp
mov
mov
lea
cmp
sub
hlt
fs
or
cmp
jecxz
cmp
mov
test
leave
mov
in
push
repnz
pushf
and
push
movsl
inc
ret
in
add
jbe
add
cld
push
lods
mov
mov
int
pushf
cmp
jge
popf
add
cs
and
mov
fwait
pusha
hlt
mov
push
cmpsl
pop
sbb
add
lahf
data16
fimull
xor
jnp
xchg
sbb
and
cli
test
or
inc
pop
add
int3
mov
std
addr16
mov
sarl
test
std
daa
int
pop
cmpsl
mov
adcb
daa
addl
mov
adc
cmp
dec
fwait
mov
mov
dec
testb
push
and
int
push
jo
or
lds
stos
stos
mov
movsl
cli
lock
or
stc
lret
xor
adc
or
mov
pop
push
std
mov
push
subl
insl
pusha
sub
or
hlt
mov
aas
or
test
lahf
jne
adc
xor
lods
and
fistl
mov
push
mov
inc
aad
mov
mov
fnstsw
cmp
dec
add
lahf
and
lea
adc
hlt
jecxz
je
addr16
sbb
sahf
shll
and
stc
aam
cmp
add
int
sbb
inc
into
movsb
add
cmc
sub
dec
ds
addr16
popf
inc
xchg
mov
mov
fwait
loope
aaa
pop
int3
xchg
andb
mov
test
push
popf
loop,pt
icebp
sub
cmp
adc
fisttps
xchg
rcrb
mov
pop
mov
jle
aaa
insb
and
insl
rclb
lahf
call
dec
mov
in
mov
xor
jnp
out
rcl
xchg
jbe,pn
xchg
inc
jge
adc
push
fiadds
outsb
add
xor
ficoms
test
pop
imul
xor
stc
jb
dec
or
mov
out
out
inc
movsl
out
jg
leave
cmp
jmp
lea
jecxz
idivb
pop
mov
sub
push
fstpl
js
jle
pop
jg
ja
addr16
dec
sub
lret
stos
aas
xchg
test
movsl
pusha
dec
xlat
jae
lcall
jno
cmp
bnd
inc
push
lock
mov
ret
inc
bound
out
cmc
fsubrl
push
addr16
stos
repz
adc
jl
stc
sbb
xor
pop
lret
je
gs
and
xor
mov
cld
shrl
inc
mov
push
pop
rcr
xchg
pushf
dec
sarl
cwtl
sbb
inc
mov
pop
cltd
inc
mov
mov
loop
jnp
lods
lods
jne
sub
sub
mov
cs
mov
jge
and
push
in
outsl
inc
xor
addr16
xchg
enter
xor
push
push
movsl
adc
shll
and
sbb
dec
insl
lahf
push
cmpsb
sub
sbb
rcrb
iret
sar
jmp
jl
xchg
aas
rcl
add
cmp
stc
dec
aad
outsb
scas
mov
stos
and
push
rcll
std
cmp
out
clc
frndint
lahf
sti
push
mov
adc
jecxz
scas
jle
and
mov
inc
imul
mov
enter
ss
das
mov
xchg
addr16
sbb
scas
orb
arpl
iret
jne
mov
push
or
jmp
xor
orb
jmp
mov
xchg
sbb
fidivrs
mov
push
out
insb
push
jb
test
push
dec
xchg
dec
sbb
lods
out
loop
mov
fwait
in
adc
mov
xchg
ja
sti
sti
int
mov
dec
mov
inc
out
lcall
fadd
shrl
push
data16
jbe
or
pop
loopne
testl
addl
jp
sub
pop
jbe
push
outsb
xlat
inc
scas
pop
add
ss
jmp
pop
push
jb,pt
xor
lods
xchg
dec
aas
outsl
add
jnp
push
leave
add
push
sub
mov
aas
xor
adc
rolb
fwait
je
add
dec
enter
push
arpl
xorl
add
out
callw
cmp
sbb
je
adc
test
fisubrs
mov
mov
cmc
lods
sub
xchg
sub
push
dec
pop
adc
push
adc
fcmovnbe
fstl
es
loope
loop
stc
std
cmp
sbb
push
and
adc
fwait
hlt
wbinvd
movsb
repz
and
popa
imul
rol
xor
arpl
jns
je
das
call
out
das
cmp
stc
movsb
aad
shlb
movsl
mov
pushf
std
add
out
and
jg
mov
cli
dec
sbb
das
adc
xor
out
sub
inc
insb
stos
cmp
mov
test
aaa
adc
scas
daa
scas
xchg
mov
adc
push
dec
test
loopne
popa
sbb
xlat
das
push
dec
or
mov
adc
not
fs
inc
push
lret
mov
add
push
jno
lret
adc
cltd
scas
jae
or
cmpsb
cmp
clc
push
call
and
int3
ss
and
lcall
push
lea
sub
and
daa
mov
cwtl
or
adcb
fisubl
movsl
xor
xchg
scas
xchg
mov
mov
stc
cmp
fistpll
cwtl
test
cmp
fldcw
xor
mov
movl
cmp
iret
mov
cmpsb
in
fdiv
fdivrs
test
ror
lahf
shlb
sbb
push
dec
adc
std
jecxz
jle
test
ficoms
cltd
jge
mov
in
addr16
call
cltd
cld
andl
jne
push
push
daa
mov
jl
fldl
imul
cli
je
inc
aaa
mov
sbb
dec
cmp
or
mov
in
js
or
outsl
xchg
out
cltd
in
movsb
add
nop
test
in
jbe
popf
pusha
jmp
add
pop
in
pop
cltd
into
and
pop
inc
lock
mov
xchg
or
test
fyl2xp1
scas
inc
dec
push
aas
push
push
pusha
iret
stos
sbb
in
popl
dec
std
in
aam
cmpsl
or
sbb
cli
push
aas
sub
nop
xchg
xor
lods
ss
hlt
je
adc
adc
push
pushf
or
inc
das
and
test
mov
mov
loop
dec
daa
popf
jge
pop
ud0
xor
fwait
paddsw
imul
fadd
cli
insl
lods
inc
pusha
in
scas
jg
mov
jmp
lret
add
mov
into
out
or
cmpsl
jne
loopnew
xor
in
iret
xlat
inc
popf
jmp
push
cmp
add
lret
out
push
ljmp
mov
push
xchg
lock
lods
jb
sub
lods
jne
sub
insl
stc
mov
ret
xchg
xchg
push
movsl
push
rol
dec
mov
movsl
scas
inc
xlat
rcrl
mov
mov
xor
pop
inc
rclb
subb
leave
nop
imul
mov
leave
rol
fistl
inc
mov
xchg
push
jle
adc
lret
lods
fisttpl
out
xchg
iret
mov
lcall
repnz
mov
outsl
sahf
cmp
xchg
xlat
xchg
test
cmpsb
push
lahf
testl
lcall
addl
rcl
cmp
cmp
icebp
inc
xor
divl
add
dec
mov
rorl
or
mov
enter
pop
mov
sbb
jae
call
addl
cmp
mov
lock
sahf
sub
jo
clc
pop
icebp
ds
in
and
cld
add
mov
xchg
or
std
subb
pop
insb
fs
pop
out
sbb
jns
or
sub
xorl
test
or
cmp
xor
sti
push
dec
mov
out
pop
push
outsb
pop
add
pusha
scas
into
ret
out
int3
sub
add
fcomp
lods
scas
outsb
push
pop
pop
add
loope
lcall
xlat
leave
xor
or
jno
loop
cwtl
in
cmpsb
jbe
pop
adc
inc
jns
inc
adc
mov
lds
pmulhw
pop
leave
xor
jp
sbb
xchg
scas
mov
dec
cmpsb
rcrl
ret
outsl
js
cld
mov
xchg
add
push
fistl
xchg
int
inc
in
xor
sbb
inc
mov
dec
sub
add
leave
xlat
in
mov
aas
data16
or
cwtl
mov
outsb
out
add
push
fimuls
mov
dec
jno
test
pusha
add
pop
jbe
mov
shl
adc
je
jns
sbb
xchg
sahf
stos
cs
cltd
test
mov
mov
aaa
mov
out
jle
mov
out
jbe
sub
or
fwait
mov
mov
mov
cmp
and
in
lahf
sub
ret
sbb
and
mov
xchg
pop
or
in
inc
lahf
lcall
scas
and
sub
std
cwtl
imul
sbb
mov
jecxz
popf
repnz
mov
imul
mov
repnz
stos
fistps
mov
aam
pop
pop
shll
sub
and
sbbl
inc
sar
es
adc
loop
pop
adc
icebp
cmp
inc
cwtl
jmp
sbb
inc
hlt
mov
pop
inc
mov
push
sbb
stc
loop
cmc
cli
push
bound
movsb
and
lahf
mov
sub
xor
mov
ljmp
xchg
push
clc
aad
ret
cltd
or
xchg
test
pop
sbb
jmp
mov
lret
comiss
and
pop
cmp
loop
wrmsr
lahf
adc
rol
cmpsl
icebp
jg
out
cmp
sbb
bound
inc
sub
outsl
jns
mov
imul
faddp
mov
push
or
insb
jmp
jne
out
cmp
loopne
in
lret
sarb
jecxz
cmp
scas
scas
pop
pop
test
jne
mov
fsub
lea
xchg
das
mov
push
lcall
push
decb
cmp
filds
xchg
in
and
inc
mov
ret
js
lods
mov
daa
das
fwait
and
test
xchg
movsb
out
xchg
sbb
jmp
xor
jmp
sub
fs
adcb
mov
enter
cld
add
add
and
cmp
xchg
pop
jnp
in
add
mov
and
popf
mov
xchg
push
loope
or
push
aam
inc
rcrb
ret
pop
out
xlat
int3
icebp
adc
mov
mov
fsubrs
hlt
mov
dec
daa
mov
cwtl
adc
out
test
gs
jge
and
inc
adc
push
int3
je
in
push
scas
dec
aam
jns
jecxz
mov
popa
jge
dec
xor
inc
je
xchg
cmc
pop
pop
rcrl
loop
or
push
push
mov
jno
or
jnp
jmp
popf
cmp
adc
test
mov
pop
xor
sub
lret
into
es
xchg
or
sbb
mov
dec
fstps
adc
xchg
sub
fsubrl
push
sbb
push
mov
mov
je
clc
push
in
in
mov
xor
in
aas
push
mov
movsb
push
push
adc
pop
sub
and
aas
push
filds
dec
lret
pop
dec
mov
jnp
repz
pusha
mov
mov
call
cmp
cmp
cmp
xor
sub
outsb
fisubrs
clc
sbb
clc
fcoml
nop
bound
leave
inc
inc
out
insb
cli
sbb
sbb
test
and
cmpsb
pop
lods
pushf
gs
inc
inc
xchg
mov
and
pop
pop
jns
xor
les
add
pop
sub
stos
or
test
in
sub
and
sbb
lds
sub
insl
mov
test
xor
jecxz
fists
lods
and
ret
dec
popa
int
sarl
call
jae
call
add
sbb
sbb
filds
repnz
sbb
je
call
mov
je
sub
sarl
rolb
mov
daa
push
cwtl
pop
shrl
sahf
cli
push
jne
ret
ret
out
mov
adc
dec
inc
loopne
and
lret
pop
cmc
aam
ficoml
jge
push
ljmp
lods
mov
mov
enter
aad
mov
popf
sahf
pushf
aaa
rcrl
ja
sbb
push
clc
sti
loopne
lret
fisubs
lret
push
mov
sarb
xorl
xchg
adc
inc
sub
and
push
jno
mov
xor
wbinvd
mov
fidivl
arpl
shlb
push
pop
mov
adc
icebp
adc
pop
decl
fistpl
fistpl
push
add
lods
inc
prefetchnta
or
sbb
int3
push
push
mov
xchg
pusha
xchg
cmp
scas
dec
dec
pop
fisubrl
mov
stos
mov
mov
jb
mov
and
imulb
test
cmovb
inc
int3
cmp
lret
icebp
cltd
daa
nop
shrl
aam
pushf
or
dec
mov
test
inc
pop
pop
inc
jnp
inc
jg
mov
out
push
jl
xchg
jne
sbb
icebp
sarl
orb
call
adc
mov
dec
push
jl
mov
in
rol
pop
xlat
loop
mov
xor
push
js
add
mov
add
push
pop
mov
jns
stos
ss
mov
insb
aad
cmpsl
shll
mov
mov
pop
sub
in
mov
jg
push
loope
xor
adc
loop
arpl
sbb
mov
add
inc
sbb
mov
and
add
arpl
aas
hlt
cmpsb
cmp
or
jmp
shlb
cld
into
icebp
testl
or
xlat
lahf
mov
xchg
push
mov
push
flds
jns
test
iret
cmpl
xchg
add
and
das
loop
loop,pn
les
pushf
ja
xor
xor
add
mov
mov
stos
ror
add
jp
or
ljmp
lock
mov
and
inc
cmp
lods
jne
fsubrl
imul
test
loope
leave
push
incb
cmpsl
std
or
andl
stos
sub
test
inc
cmp
pop
mov
fadd
pop
inc
sbbl
add
hlt
ds
fists
inc
popf
pop
pop
and
cmp
xchg
sbb
or
cmc
sbb
popl
push
cwtl
repz
pop
sti
das
inc
shrl
mov
pushf
mov
mov
inc
cltd
xchg
ret
xor
scas
lcall
test
cmc
fbld
addl
ljmp
mov
dec
in
pop
movaps
data16
test
inc
or
sbb
aam
filds
ffree
lods
clc
shr
cmp
ljmp
leave
sbb
std
pop
clc
mov
das
hlt
mov
sbb
in
cmp
jmp
and
scas
dec
adc
decb
int
add
clc
push
scas
insb
outsb
push
sub
hlt
cmp
cmp
mov
fs
int
setns
push
in
lcall
cld
sbb
xor
repz
js
pop
push
ficoml
stos
jg
sahf
adc
insb
sbb
sahf
test
mov
jno
pop
mov
mov
push
fistps
push
insl
cmp
pop
insl
cmc
or
sub
jle
xchg
pop
cmp
xor
and
mov
fcom
mov
popf
push
in
mov
insb
imul
cmp
mov
xchg
repnz
popf
pop
inc
rol
jbe
jecxz
xchg
mov
push
out
int
cmc
rcr
inc
cmp
or
adc
pop
test
aam
sahf
push
mov
add
subl
fnstenv
pushf
pop
jle
scas
rorl
fxch
loope
stos
sbb
nop
sbb
cwtl
jge
lcall
ds
inc
jmp
pop
cwtl
pop
xchg
mov
pusha
inc
inc
lods
out
fwait
jae
movsb
sub
jp
cwtl
mov
push
outsl
jmp
xchg
and
inc
mov
out
or
int
jmp
pop
inc
sub
inc
or
sahf
sbb
dec
or
pop
mov
xor
scas
out
lods
pop
jno
mov
stos
out
imul
push
lock
fsubp
cmc
cs
out
std
cmp
outsl
loopne
mov
test
test
lcall
aad
cmp
add
fstpt
data16
push
fisubs
cmc
or
sahf
in
mov
mov
js
xorl
or
dec
adc
bswap
clc
inc
pop
pop
mov
jb
xor
aas
cs
lahf
mov
or
inc
or
cmpsb
xchg
iret
not
ds
xchg
or
xchg
pop
jg
adc
sbb
ja,pn
mov
lods
jo
mov
rorl
push
pop
ret
xlat
jmp
jmp
cmpl
adc
ret
cmp
dec
push
clc
mov
xchg
loop
fildll
ds
dec
cmpb
loop
arpl
test
and
lods
nop
push
popf
pop
stos
pop
in
ja
cwtl
aaa
bound
fcmovb
mov
adc
xchg
cmp
mov
xorb
pop
jmp
out
xor
je
mov
push
sub
lods
lods
jmp
xor
mov
lods
inc
int3
cmpsl
push
xor
je
roll
inc
xlat
cmp
jnp
inc
movsl
cmp
sub
les
push
push
jne
cwtl
clc
dec
pop
push
mov
pextrw
cmpsl
mov
aad
inc
mov
test
inc
out
xchg
mov
xor
sti
outsl
lcall
xchg
mov
decb
mov
xchg
mov
inc
add
popa
mov
xor
leave
push
das
mov
add
sub
mov
push
mov
pop
sbb
in
mov
mov
ss
lods
imul
in
sub
icebp
cli
and
test
sub
mov
fwait
mov
sbb
cwtl
scas
jae
xchg
mov
push
dec
mov
and
push
pop
jge
fwait
jno
in
and
repnz
sub
in
sti
push
xor
jle
mov
mov
setbe
popf
fs
insb
jg
add
jo
bound
call
mov
xchg
cli
mov
outsb
inc
cmp
jmp
and
dec
lcall
fcompl
mov
xchg
sbb
jno
pop
vminss
leave
cwtl
in
into
popf
cmp
lret
lods
xchg
enter
and
stos
adc
and
sub
pop
jbe
gs
adc
cli
sti
call
push
dec
mov
dec
fsub
pushf
dec
mov
idivb
mov
clc
add
addl
das
add
adc
imul
sub
push
stc
and
jns
push
push
or
out
push
mov
fcomp
jecxz
cmpsb
sub
xchg
add
sub
jb,pt
iret
out
push
les
outsl
addr16
add
test
pop
cld
in
push
inc
pop
sbbb
mov
cmpsb
dec
sbb
xchg
or
nop
pop
outsl
mov
cmp
or
repz
add
dec
mov
mov
or
cmp
jae
xor
lea
mov
cmp
jle
mov
inc
shl
cmp
mov
out
in
sub
das
gs
add
or
movsb
loopne
shll
popa
push
fistl
and
lods
stos
inc
pop
pop
scas
inc
insb
dec
jae
leave
xor
pop
jo
pop
cmp
out
sub
lahf
ljmp
mov
jbe
adc
mov
xchg
xor
and
ljmp
data16
frstor
cmp
stc
pop
out
mov
inc
sbb
dec
sub
sub
addr16
es
ds
fisubl
maskmovq
mull
lods
data16
lahf
lds
cld
mov
filds
xchg
dec
ret
ret
and
les
pop
adc
mov
add
xlat
push
ja
leave
mov
ja
mov
addr16
lret
das
pop
mov
jbe
lret
push
mov
sbb
lahf
mov
jmp
and
mov
add
push
adc
push
sti
lock
xchg
orl
adcl
ds
outsb
push
popa
pusha
loopne
add
xchg
loopne
pop
and
jne
xor
or
sbb
testb
xchg
or
add
cld
pop
std
pop
pop
cli
mov
mov
or
enter
mov
mov
pusha
pop
jge
fnstcw
jp
fucomip
inc
dec
mov
jle
sub
in
test
or
adc
xchg
cli
sbb
ds
fwait
lahf
or
loop
sub
inc
xlat
mov
mov
scas
inc
sbb
xor
out
xlat
add
bound
das
mov
inc
sti
xchg
cmp
aas
shlb
ljmp
pop
push
dec
sub
outsl
sub
rorl
add
sub
jno
nop
pop
ljmp
xchg
pop
pop
test
mov
xor
adc
pop
and
or
insb
jmp
fidivrl
jns
mov
popf
scas
sbb
sbb
fistps
cmp
popf
out
jle
inc
mov
pop
sub
push
pop
jne
ret
add
push
push
xchg
je
inc
cld
mov
fdiv
push
movsl
cmp
mov
imul
push
inc
fldl
es
mov
je
dec
cld
jg
sub
inc
xor
push
mov
outsl
push
cmp
lcall
sub
loope
push
imul
loop,pn
push
les
pop
int
inc
and
lcall
ret
mov
mov
or
xor
xor
insb
sub
xchg
das
iret
rorl
add
sbb
stos
cs
mov
xor
std
jle
int
mov
push
add
jo
inc
cs
scas
and
xlat
stos
into
sub
push
dec
movb
push
rcll
leave
push
add
daa
cmp
xor
add
add
dec
add
inc
mov
mov
inc
ss
leave
bound
and
repnz
or
cmp
cmp
clc
pop
ficoml
icebp
mov
pop
arpl
xchg
mov
loope
fisttpll
jge
mov
cltd
dec
or
push
or
and
xchg
cmpl
adc
push
cwtl
cmp
ds
sub
xor
sub
xchg
push
bsr
dec
jbe
push
mov
jmp
push
mov
push
sub
or
mov
and
popf
xchg
test
add
lds
cs
xchg
shlb
inc
repz
jne
add
dec
add
fwait
arpl
sti
test
mov
rcrl
mov
mov
pop
fstpt
mov
das
mov
mov
jnp
push
inc
pop
mov
int3
in
repnz
jns
adc
lret
mov
repnz
das
popf
push
sub
pop
adc
inc
outsl
popa
test
bound
cli
mov
mov
leave
movsl
shll
cmp
mov
jp
das
cmc
fnstsw
fisubl
or
pushw
pop
lods
sbbl
or
mov
xor
dec
or
mov
roll
add
sbb
jo
addl
add
sub
inc
xchg
hlt
mov
push
ljmp
test
shrl
stos
inc
lahf
push
imul
nop
dec
push
rorl
icebp
pop
fidivrl
fldt
leave
jecxz
mov
mov
out
xor
sub
popa
jo
imul
repz
orl
pop
dec
mov
fwait
int3
pop
mov
mov
into
nop
add
and
and
insl
mov
lret
aam
andl
pop
sub
sbb
sub
mov
xor
add
into
js
mov
sbb
push
jmp
inc
push
pop
xchg
pop
lods
cwtl
jb
push
cmp
in
cltd
adc
dec
mov
mov
insl
test
stos
test
sti
push
bound
jb
gs
fisttpll
addr16
mov
data16
test
movsb
jecxz
mov
imul
in
imul
lods
cmp
fnstsw
or
xchg
and
mov
xchg
addr16
xchg
xorl
ret
fmuls
out
lcall
and
mov
jp
cwtl
mov
arpl
jg
push
sub
sub
pop
mov
jns
dec
xchg
in
into
mov
push
shl
jnp
dec
sbb
sti
int3
push
stos
or
js
movsb
popa
les
fsubrs
pop
push
sti
dec
nop
ljmp
out
cmpsb
ds
cmc
xor
in
fnstsw
inc
in
mov
lods
fimull
xchg
hlt
jmp
cld
xchg
es
mov
les
push
outsl
sub
adcl
stos
mov
sub
hlt
cld
mov
adc
or
icebp
and
scas
leave
pop
outsb
and
outsb
mov
shr
mov
popa
or
mov
pusha
mov
lock
test
fs
imul
call
or
mov
push
mov
sbb
and
add
outsl
cld
dec
aad
fisubrl
mov
xchg
and
jo
adc
mov
cmp
out
cmpsb
and
hlt
inc
sbb
ja
xchg
xchg
mov
je
mov
sbb
adc
fmuls
imul
sbb
xchg
mov
sbb
sub
fs
push
aam
gs
loope
xor
jl
cld
inc
xchg
mov
jl
inc
cmp
cmpsl
imul
mov
in
inc
popf
add
push
lock
ret
mov
sahf
imul
out
adc
mov
out
out
popf
mov
in
call
ljmp
pop
and
xadd
ret
lahf
frstor
lods
inc
or
cmpb
xorb
sbb
cmc
test
lock
pop
imul
call
scas
stc
mov
lods
das
mov
pop
ret
pop
inc
inc
mov
ja
jbe
cmpl
mov
mov
lcall
popf
stc
or
mov
cmp
notb
add
icebp
pop
mov
iret
sahf
or
out
daa
movl
sub
push
adc
jge
sbb
movsb
sbb
cmp
cmp
test
lock
add
in
fbstp
mov
inc
pop
aaa
mov
mov
daa
jns
ret
pop
out
stos
cmc
jp
idivb
mov
mov
and
xor
xchg
aas
pop
imul
cmp
add
into
std
mov
mov
nop
in
sbb
daa
addl
sub
mov
hlt
xchg
popa
lret
jl
pop
fisubrs
rorb
mov
stc
test
dec
mov
sub
es
cmc
jb
movsb
jne
lret
push
pop
lea
add
or
push
movsb
movsl
adc
mov
int
mov
xor
sbb
mov
in
imul
jbe,pn
popf
add
in
dec
xchg
jnp
and
mov
nop
stc
scas
mov
test
sahf
notl
pop
addb
insl
pusha
into
xchg
pushf
inc
add
rorb
jp
xchg
inc
iret
xchg
loope
lcall
add
cs
xchg
out
sbbb
fldenv
push
mov
push
cmp
shll
or
pop
in
pop
loopne
sbb
xchg
cmp
and
mov
dec
add
rolb
cmp
adc
jmp
jp
adc
dec
outsl
addb
out
mov
xor
pop
or
inc
int
mov
fisttps
cmp
push
je
arpl
fdivrs
pop
xchg
stos
out
xlat
sub
inc
mov
mov
pop
jmp
push
mov
pop
sbb
jge
mov
sbb
pushf
or
shrb
mov
dec
xor
or
sub
in
sbb
stos
mov
inc
popa
sbb
sub
xchg
popf
add
aas
push
daa
cltd
cmp
ds
imul
in
adc
cmp
jno
mov
fldt
and
dec
mov
test
loope
add
mov
ja
jge
xchg
adc
sbb
jge
xor
sti
cmp
pop
jg
pop
jne
lcall
decl
sahf
pushf
jge
call
call
sbbl
inc
fists
pushf
fildl
adc
jb
mov
mov
add
jl,pt
lret
rclb
aad
xchg
fimull
and
call
das
inc
das
shr
inc
push
in
fwait
cmpsl
xchg
negb
jae
in
xchg
and
stos
mov
cs
adc
ret
fwait
or
flds
fidivs
xchg
sub
mov
in
and
insl
sub
jle
xchg
out
sub
fnstsw
ret
out
popf
xor
popf
mov
jle
add
or
ljmp
xchg
int
cmp
dec
sub
decb
jae
std
hlt
cmpl
jge
in
jnp
div
mov
and
xchg
push
xor
cmp
sub
dec
mov
cmp
mov
xor
test
cmp
lahf
in
push
jo
gs
stos
scas
aas
hlt
pop
cs
fstps
xchg
or
pop
inc
push
sarb
push
andl
cmpsl
pop
out
pop
pop
adc
push
movsb
orl
and
shll
add
idivl
int
cmp
ror
test
mov
pushf
and
jae
movl
push
repz
data16
push
inc
test
sbbb
cmp
inc
xor
mov
mov
imul
ret
inc
pop
push
sbb
mov
hlt
jge
jae
adc
inc
pop
sarl
xlat
mov
mov
sub
sub
dec
shll
mov
push
clc
ficomps
mov
mov
clc
aad
cwtl
mov
jg
push
ret
lea
jne
cmpsb
mov
aas
mov
addr16
mov
ficompl
pushf
out
movsb
aam
js
adc
enter
push
push
xor
subl
jl
adc
test
jnp
cltd
pop
jo
dec
pop
idiv
fcomps
pop
scas
ljmp
daa
aam
out
sub
or
or
jecxz
dec
fiadds
pop
mov
or
dec
cmc
les
scas
mov
xchg
jne
pushl
sbb
movsb
and
out
mov
mov
add
in
std
jns
cmp
jb
push
xchg
movsb
adc
mov
push
iret
shll
lea
aas
pop
movsb
jge
and
fld
test
dec
or
mov
xor
inc
std
add
sub
negl
mov
cmc
mov
lods
or
mov
das
pop
dec
shrb
mov
dec
push
push
mov
xchg
add
pusha
fmull
push
add
sahf
dec
es
cmpsb
aaa
gs
sub
int
popa
std
mov
popl
ret
aad
sub
xor
in
xor
cmc
sub
adc
fucom
out
mov
dec
jo
lret
cmp
cmp
repz
mov
xchg
test
xchg
xchg
sbb
insb
iret
dec
dec
ret
sub
push
aaa
ja
and
add
jmp
lods
add
ret
adc
js
adc
or
into
arpl
cmp
push
sub
xor
xchg
fcoms
popf
stos
dec
insb
lea
popf
test
pop
movsb
outsl
lods
sti
int
sub
ret
lea
mov
fcoms
imul
adc
inc
fiaddl
xor
enter
fwait
dec
cld
fldenv
fildl
add
test
shl
ja
aas
dec
pop
jno
addr16
outsl
add
xchg
stc
push
in
aam
inc
cmp
dec
shll
cmc
mov
dec
cmp
cltd
imul
mov
fisttpl
jp
out
out
jnp
dec
loopne
aas
outsb
push
fmull
lods
enter
sti
aad
mov
pop
xchg
sub
xor
out
adc
bound
mov
inc
mov
imul
inc
add
mov
or
int3
int
int3
inc
adc
pop
wbinvd
jae
aaa
mov
inc
inc
cwtl
ss
ljmp
push
mov
out
jp
call
push
jge
dec
aas
xlat
ja
out
adc
fs
rcll
mulb
inc
and
xchg
aas
mov
sub
loope
sbb
xchg
xor
inc
mov
cwtl
cmp
sbb
lock
xchg
stc
cmp
inc
jno
lahf
int
test
cmp
pop
push
xor
fldl
nop
xchg
imul
adcl
mov
dec
das
cwtl
inc
sub
dec
mov
pop
das
sub
and
scas
rorl
pop
sub
mov
xor
sub
pop
stos
cmp
sub
add
mov
xchg
ljmp
in
ja
pushf
xor
ljmp
popa
scas
xor
imul
jg
mov
ja
dec
adc
je
shrb
add
bound
and
out
mov
sbb
es
mov
push
clc
lret
xor
add
push
rcr
sahf
push
xchg
add
jo
xor
lret
incb
cmp
pop
xchg
call
xchg
adc
fldcw
jle
testl
scas
call
inc
jbe
pop
inc
fwait
cmp
xchg
push
pmaxsw
fdivrs
cmp
cmpl
imul
push
pop
cltd
sarb
loope
ss
or
lea
xor
push
jl
fucomip
fstpt
sub
push
test
in
jg
jns
lds
cmp
stc
xor
fwait
inc
xchg
aam
inc
pop
rcrb
imul
stos
test
push
pop
xor
adc
dec
je
mov
testb
sub
lret
mov
push
xchg
cs
sbb
es
pushl
xchg
mov
ret
sbb
push
out
mov
mov
shrl
fisubl
jmp
mov
notl
xor
das
mov
inc
mov
popf
in
cmp
pop
imul
lret
jle
fsub
shrl
sub
push
faddp
mov
in
mov
aad
test
jb
push
or
test
or
adc
cmc
and
xchg
inc
xchg
jmp
hlt
mov
cmpsb
mov
in
push
inc
xchg
lret
mov
stc
fwait
mov
mov
aas
xor
add
femms
mov
mov
pop
or
mov
call
popa
jns
cmp
inc
or
std
add
push
leave
xchg
out
subb
or
nop
sbb
jge
mov
jbe
cli
mov
sbb
inc
cmp
mov
fadd
xor
mov
nop
add
mov
mov
jle
mov
shl
movsb
or
das
jnp
pop
scas
into
sbb
adc
imul
mov
imul
push
fcoms
inc
push
pop
push
popw
adc
stc
adc
mov
pop
dec
mov
fimuls
mov
into
xor
jg
enter
js
and
lret
jmp
shl
dec
test
js
arpl
inc
pop
adcb
or
jno
test
pop
mov
adc
imul
xchg
lcall
divl
ja
pop
out
adc
xorl
jge
mov
cmp
jmp
mov
andb
movsl
test
ss
jo
mov
cmp
fsubrl
push
mov
or
push
add
es
mov
xchg
or
cmp
mov
inc
out
cli
std
mov
mov
stc
in
je,pn
fidivrs
push
inc
adc
fdivrl
sub
std
pusha
fcmovne
sbb
stc
jne
gs
lcall
add
sbb
push
subb
repnz
rcr
mov
into
lahf
loopne
filds
inc
shrl
push
in
imull
inc
sahf
popa
xchg
jl
inc
daa
and
mov
mov
adc
sub
xor
cwtl
sub
mov
cmpsb
sahf
cmp
push
pop
or
or
xor
enter
sbb
mov
aam
aad
dec
aaa
nop
mov
sub
pop
mov
shlb
subb
das
data16
mov
scas
movsb
sub
jo
push
ret
cs
test
inc
in
mov
je
jnp
les
jp
mov
into
sbb
daa
push
push
jmp
repz
mov
fildl
push
adc
xor
sbb
adc
adcb
addr16
and
pop
ret
push
jnp
jbe
lods
leave
scas
lret
aaa
test
fs
lea
and
xchg
jo
sbb
enter
aas
dec
jne
or
inc
inc
stos
repnz
sub
insl
sarb
xor
daa
in
xor
pop
ds
pop
loop
mov
jl
pop
mov
add
in
pop
lods
fsts
hlt
jmp
aam
mov
cwtl
xor
icebp
mov
pop
hlt
std
mov
rol
shll
or
mov
lea
sub
sarb
mov
mov
pop
cmp
fists
mov
cltd
push
xchg
pop
push
aas
fisubrl
sub
aam
jbe
jl
je
rolb
jnp
pop
call
lret
xchg
inc
mov
lock
adc
inc
cltd
mov
loopne
and
adc
xchg
or
shrb
adc
mov
mov
mov
push
add
mov
mov
push
inc
rcll
sub
jmp
outsl
mov
and
cmpsb
xchg
inc
jae
ret
enter
fadds
pop
test
popa
test
sbb
xor
jmp
jbe
in
mov
or
mov
jns
or
jp
inc
enter
push
js
mov
rclb
addb
push
setbe
dec
xchg
clc
scas
push
int3
jns
jnp
or
add
in
fmull
sub
mov
jnp
es
push
sub
mov
xchg
fs
mov
leave
leave
adc
mov
xchg
je
fwait
or
sub
push
dec
movsb
loop
aam
pop
cs
gs
cmp
adc
mov
inc
xchg
cmpb
aam
inc
sbb
pop
xchg
arpl
je
or
mov
push
add
pushf
xchg
jmp
mov
xchg
push
bound
cs
fsts
push
or
jmp
cmp
jl
loop
jecxz
jle
cmp
outsl
push
sub
add
inc
shlb
sub
mov
xchg
xorb
ret
add
pop
xchg
xchg
mov
mov
mov
xlat
lret
lahf
push
lahf
dec
lcall
jl
or
test
add
or
fs
jge
mov
sbb
mov
jo
push
mov
inc
test
enter
lret
push
jnp
sbb
daa
jg
add
js
push
and
fcomi
es
fldl
sbb
mov
shrb
ss
mov
fdivrs
pop
out
repz
std
lcall
mov
pop
sarb
sbb
jmp
fwait
jle
xchg
outsl
gs
push
inc
bound
out
mov
xor
pusha
in
insb
lock
aam
xchg
fcmovu
or
mov
leave
xchg
inc
mov
mov
xchg
push
sub
dec
jl
cmp
ret
daa
das
bt
cltd
popf
nop
jge
jg
jb
es
pop
mov
jo
ss
jmp
pushf
push
fsubl
test
adc
aas
sub
xor
push
xchg
test
into
lods
mulb
popf
xor
js
ffreep
popf
enter
call
mov
icebp
lods
and
push
in
lcall
pop
sbb
leave
push
stos
dec
fstl
push
and
cmpsl
inc
pop
jae
and
gs
mov
sbb
push
mov
push
push
fsubrl
cld
dec
pop
ljmp
fimull
pop
adc
push
lods
je
push
js
nop
push
dec
test
gs
mov
mov
inc
pop
shr
lods
mov
notl
pop
fiaddl
or
xchg
arpl
lods
push
pop
or
loopne
repz
mov
cmpsb
out
sub
addr16
mov
sub
push
fcmovu
dec
cld
xchg
addr16
mov
stos
outsb
push
imul
pop
aad
and
lcall
cmp
pop
daa
or
addb
mov
fiaddl
lods
mov
cmp
dec
or
xlat
out
cmc
out
shll
or
push
inc
jno
jmp
sub
sbb
fsubl
arpl
mov
inc
jne
in
jno
xchg
cwtl
shlb
jg
movb
push
push
push
out
jle
sbb
xor
xchg
or
sbb
jge
stos
cs
mov
ffree
pop
lods
add
mov
bound
mov
push
adc
mov
test
dec
js
stos
pop
scas
pop
sahf
imul
and
insl
or
mov
mov
mov
ja
pop
jnp
dec
mov
outsl
or
fimull
out
mov
rcrl
or
cmp
ret
xor
xor
shrl
fwait
arpl
scas
mov
insl
push
ret
mov
add
inc
and
sbbl
adc
in
ss
push
cmp
mov
std
push
sub
jmp
out
pop
mov
jg
xchg
cmpl
and
pop
inc
pop
push
mov
xchg
pop
jbe
int
dec
add
sbb
inc
pop
in
outsl
lret
ljmp
fwait
sbb
mov
push
dec
aam
lahf
loopne
popf
cmp
test
push
mov
xor
add
das
shll
out
add
rcr
mov
or
adc
mov
pop
das
rcr
mov
jns
sbb
add
lods
mov
inc
popf
arpl
cmp
movsl
loop
fldenv
or
mov
rorb
lods
out
loope
addr16
lock
or
push
cmc
add
mov
add
fimuls
jg
jnp
cli
or
inc
and
push
adc
mov
mov
addr16
popf
fstps
daa
sub
push
xchg
scas
jg
ja
dec
xchg
fnstenv
pop
les
lea
dec
out
pop
fisttpll
pusha
fcmove
dec
or
out
inc
mov
popa
xor
arpl
out
jl
movsl
sub
jae
dec
ja
fst
xor
inc
cld
fidivrl
add
cwtl
nop
sarb
cmp
daa
fildll
xchg
mov
add
cwtl
fadd
adc
xchg
leave
lock
dec
inc
ss
test
repnz
xlat
push
and
mov
shll
mov
pusha
and
xorb
xchg
or
xor
test
jle
mov
mov
dec
dec
adc
mov
jp
and
nop
jge
std
mov
sbbl
jle
pop
adc
loop
inc
push
mov
stc
jbe
push
cmc
outsb
xchg
jmp
lea
das
int
and
rclb
dec
sbb
fists
cmp
inc
jp
repz
jne
dec
out
imul
push
daa
and
enter
js
imulb
popf
lcall
scas
inc
int3
push
or
mov
sub
mov
fstps
adc
add
push
fistps
xchg
rclb
in
cmp
cmp
or
shlb
add
shl
adc
pop
mov
sub
roll
sti
dec
ficoml
sahf
inc
pop
mov
dec
pop
inc
movd
leave
add
mov
xchg
mov
ss
stos
cli
add
xchg
dec
in
lds
mov
lret
push
fidivrl
movsl
push
jae
and
xor
mov
std
scas
pop
ret
fstl
xlat
lahf
push
sarl
scas
pop
mov
rorb
decb
adc
inc
lret
inc
mov
adc
sbb
arpl
mov
inc
and
jp
mov
jb
and
xbegin
cmp
test
jge
sub
fadds
push
fcomi
sbbl
mov
adc
sbb
mov
cmp
sub
repnz
mov
xor
into
cltd
ret
xchg
in
jae
dec
inc
jae
or
lahf
test
aaa
mov
aaa
xchg
ja
in
jmp
int3
jmp
stos
ficoml
push
arpl
mov
outsl
lret
sbb
pop
jne
ficompl
imul
sub
test
shll
jmp
lea
mov
or
ret
mov
xchg
xor
pop
loop
lahf
jb
jl
fidivrs
jno
roll
decb
ret
test
ss
imul
lret
adc
mov
xor
insb
pop
pop
repz
and
jbe
or
xchg
dec
sub
push
in
jnp
adc
daa
lret
lea
adc
sub
repz
test
or
dec
lea
test
mov
sub
or
xchg
cmc
test
cmp
xchg
imul
jb
outsl
cwtl
idivb
and
pushf
pop
xor
xchg
cmpl
mov
mov
add
les
scas
movsb
out
xchg
push
dec
push
andb
sbb
cmp
popf
outsl
rolb
lret
mov
fidivrl
stc
adc
mov
test
je
jp
sbb
mov
test
pop
add
cwtl
rcrb
testb
decl
mov
mull
adc
jb
ljmp
outsl
jl
and
mov
mov
sub
xchg
mov
mov
cmpl
mov
shlb
dec
add
ja
int3
xchg
sub
dec
negb
pop
ljmp
and
or
aad
adc
js
pop
xchg
dec
dec
fwait
jne
repz
pop
mov
xchg
mov
arpl
stos
imul
cld
movsl
loope
cmp
sub
ficomps
imul
mov
data16
movsl
mov
add
call
aas
popf
outsl
lahf
insb
fstpl
jnp
cmp
jge
cmp
fnstcw
les
and
scas
vcmpsd
iret
mov
lahf
sbb
jnp
pop
jl
aas
or
xor
enter
mov
xchg
pop
mov
dec
out
inc
or
aam
and
or
sbb
imul
jne
in
stc
rcll
es
mov
sti
push
xor
pusha
jnp
sub
or
push
rclb
rcr
sub
or
push
push
sbb
dec
dec
fistpll
xchg
pop
ss
cmpsl
add
out
mov
inc
sbb
push
cwtl
jno
mov
jnp
lds
decb
jnp
and
loope
adc
inc
std
push
pop
jne
dec
fisubrs
popa
add
cmpsl
outsb
mov
int
mov
pusha
mov
xchg
inc
jmp
clc
jp
into
and
push
mov
mov
and
inc
jbe
mov
jb
sub
aad
pushf
in
push
movb
lcall
mov
xor
jb
pop
icebp
cs
pop
mov
roll
xor
adc
lea
ja
inc
push
loop
push
adc
mul
out
shrl
push
and
test
popl
mov
in
xchg
addb
fwait
imul
or
outsl
cmpsb
inc
sbb
ret
cmc
push
mov
mov
xchg
ja
lods
fsub
push
movsb
ljmp
dec
add
addb
jb
int3
je
test
sub
test
cld
scas
and
sbb
or
inc
leave
shll
mov
cli
xchg
movsl
cmp
inc
lods
inc
or
xchg
stos
enter
cld
xchg
xor
mov
sbb
pop
mov
loope
in
xor
mov
adc
lods
out
xchg
inc
sbb
cmp
repnz
push
or
mov
mov
int
mov
fisubrl
enter
push
sbb
ds
das
push
sub
push
shrb
or
out
mov
and
mov
add
sarl
xor
ja
leave
lahf
icebp
mov
mov
ret
xchg
in
xchg
push
add
imul
or
inc
push
mov
sub
enter
xor
add
add
or
in
sub
mov
scas
mov
sbb
inc
stc
ficoms
pop
scas
inc
mov
daa
pop
movsl
repnz
leave
mov
mov
icebp
mov
aas
cwtl
pushf
jp
enter
lds
std
popa
sub
ljmp
push
ffree
iret
mov
ret
jp
cmc
pusha
cs
sub
lods
adc
ficomps
imul
aaa
cmc
scas
sub
mov
xlat
mov
xchg
push
lods
int
insl
xor
jo
adc
mov
in
sub
movb
mov
add
pop
mov
outsb
jno
xchg
pop
cld
mov
in
push
fdivr
pushf
xor
rcl
lcall
xor
or
jno
mov
ja
mov
jmp
jo
das
jge
ja
adc
das
aas
or
in
add
mov
insb
pop
xor
imul
inc
push
fstpl
sbb
and
daa
lea
and
incl
std
sahf
ja
pop
sqrtps
pop
and
addr16
ret
fdiv
ja
lds
js
pop
mov
mov
cmp
gs
push
pushf
loop
les
or
imul
clc
mov
mov
jns
xchg
loopne
add
mov
inc
mov
or
add
dec
andb
vpunpckldq
sar
dec
mov
out
adc
out
sbb
jb
jns
aaa
sub
jbe
xchg
pop
jg
mov
or
mov
imul
pop
cmovg
push
dec
cmp
popf
lcall
dec
xchg
scas
jbe
fildl
cmp
cmp
adcl
cli
movsl
adc
cmp
mov
dec
xlat
movsl
inc
jge
scas
dec
repz
fnstsw
pop
jne
in
int3
xchg
cmpsl
mov
push
bound
mov
or
mov
or
mull
fwait
add
cs
aas
aas
cwtl
test
push
out
ljmp
and
adc
cs
outsl
bound
enter
lea
aaa
repz
loope
push
pop
inc
in
cmp
adc
xchg
repz
fadds
mov
inc
and
int
rclb
orl
inc
jne
out
call
inc
lods
mov
inc
dec
lods
jae
out
mov
arpl
lahf
mov
mov
sbb
or
xor
sahf
gs
xor
popa
mov
adc
clc
mov
ss
dec
out
lahf
out
adc
in
std
into
aaa
outsl
xchg
std
xchg
adc
out
pushf
xchg
jo
push
loopne
xchg
mov
xor
je
sub
mov
push
rcl
mov
pop
mov
xchg
dec
mov
pop
jmp
dec
in
add
es
popa
fidivrl
xchg
mov
inc
mov
ss
jmp
ss
orb
or
pusha
xchg
ret
or
sbb
jmp
fidivrs
mov
lcall
pop
or
jnp
mov
test
orl
loop
fs
and
in
mov
and
xchg
stos
lock
push
sub
sbb
dec
and
mov
mov
jns
adc
ficoms
or
iret
mov
movsl
imul
mov
cld
jge
fnstcw
imul
xchg
testl
and
test
testb
add
mov
sub
cmpsl
cmp
push
jno
xchg
mov
cmpsb
leave
xlat
xor
inc
cmpsl
loope
fcmove
lods
popf
sbb
cli
pop
cmpsl
mov
mov
inc
and
xchg
test
nop
enter
cld
cmpsl
jnp
or
mov
sbb
ror
and
rol
js
test
adc
xorb
dec
cmp
jbe
or
test
inc
pusha
inc
pop
sub
fidivrl
cwtl
lods
and
sub
imul
mov
add
mov
ret
xlat
gs
cmp
mov
sbb
xlat
rorb
xor
add
jb
imul
pop
xchg
mov
mov
out
or
mov
in
sub
out
in
ret
mov
pop
adc
push
stos
push
cmpsb
clc
jae
sahf
insb
sbb
mov
mov
std
xchg
mov
addr16
daa
scas
adc
shlb
sub
scas
mov
push
fisubs
and
orl
in
mov
jae
das
sbb
popa
dec
lret
loop
mov
outsl
mov
jmp
xchg
adc
xchg
sbb
outsb
loop
subb
test
push
test
adc
hlt
add
push
jle
xchg
in
mov
inc
mov
call
mov
out
int3
add
test
mull
outsb
leave
clc
nop
pop
out
mov
xchg
ficompl
inc
adc
cmovp
cld
xor
add
pop
cmc
add
in
stos
lea
mov
sub
dec
xlat
out
sub
daa
xchg
rolb
dec
jg
cmc
pop
cwtl
imul
jge
sub
mov
sti
ds
mov
inc
imul
inc
or
mov
mov
cld
mov
xchg
inc
mov
push
test
jge
mov
xchg
js
outsb
cmpsl
addl
fdivl
pop
std
mov
push
jl
pop
push
push
inc
ret
cs
popa
inc
std
adc
loopne
enter
sti
jmp
cmpsl
mov
mov
adc
mov
sub
cmp
push
pop
inc
clc
dec
or
xchg
xor
fcoms
adc
jo
cltd
fwait
add
lds
push
mov
movsl
mov
or
add
cmpl
push
daa
in
inc
andl
mov
lret
sbb
fbld
push
les
cmpsb
pop
jecxz
jne
movl
js
mov
lret
lods
in
movsb
sbb
mov
jmp
sub
stos
sahf
xor
jp
xor
push
add
jge
outsl
and
inc
out
mov
mov
adc
jae
jnp
cltd
jae
es
scas
loope
lock
mov
ror
addr16
xchg
dec
add
xorb
push
dec
pop
shll
inc
xor
rcll
daa
and
in
test
and
jecxz
inc
mov
add
xchg
mov
adc
pop
insb
ljmp
in
out
xor
xchg
lea
xor
push
and
dec
cs
xlat
jns
ljmp
int3
add
pop
mov
stos
xchg
xchg
lock
pop
sti
xchg
leave
loope
mov
pop
stos
or
xchg
push
xchg
push
scas
adc
push
scas
mov
pop
mov
pop
pop
inc
mov
shlb
sbb
pusha
inc
inc
adc
stos
popa
jle
cwtl
add
sbb
in
xchg
mov
test
push
add
sbb
xor
fstpl
mov
adc
mov
xchg
clc
adcb
andb
mov
dec
test
jb
xor
adc
adc
dec
int
bound
in
mov
stc
in
push
jno
fwait
xchg
into
cmp
cmp
sahf
mov
jg
mov
and
mov
dec
inc
leavew
add
dec
xor
add
push
fwait
xchg
lret
inc
jge
push
lods
popf
push
pop
cmpb
hlt
das
stos
jns
add
cmpsb
cmp
into
xor
jp
cmp
inc
jl
ss
jnp
outsl
std
mov
into
pop
sub
push
rorl
test
cmpsb
jecxz
rclb
push
shll
fstpt
xchg
mov
mov
mov
sub
loop
aad
dec
insl
mov
xor
sub
ss
push
mov
mov
mov
lds
mov
orb
sbb
mov
jbe
in
js
push
icebp
adc
push
or
lds
adc
test
data16
add
pushf
jns
test
int3
idivb
sub
imul
cmp
and
inc
dec
xlat
inc
int3
inc
sbb
cltd
cli
fwait
push
out
pop
mov
add
pop
in
ret
cmpsl
inc
ds
fisttpll
fcoml
mov
mov
sqrtps
xchg
nop
out
into
lods
inc
loope
and
and
outsl
or
into
pop
add
orl
loop
mov
push
repnz
sbb
in
and
mov
in
icebp
aaa
pop
add
loope
xlat
aaa
push
adc
fimull
add
pusha
mov
das
mov
loope
xchg
loope
insb
mov
ljmp
jbe
and
ret
xchg
push
fmuls
push
int3
rorl
mov
in
lcall
inc
or
icebp
test
fs
ja
sub
loope
call
mov
cmp
shl
and
out
ret
stos
sti
or
xchg
mov
es
bound
je
mov
cs
loopne
inc
or
ret
test
out
mov
das
add
inc
jno
sub
aad
jne
xor
lods
mov
aam
movb
jle
dec
and
movl
pusha
fwait
mov
dec
pop
insl
int3
or
pop
aaa
lret
mov
xorb
dec
das
or
dec
mov
pop
in
cli
cmp
lods
mov
lods
lret
daa
and
loop
or
mov
jg
mov
push
pop
rcrb
imul
xchg
mov
or
leave
pop
mov
lea
shlb
rep
mov
mov
sub
arpl
stos
jae
xchg
out
sar
hlt
dec
mov
cmp
mov
daa
lret
lods
sub
arpl
fistl
fisubrl
mov
adc
rclb
movsb
xchg
pop
mov
sbb
popf
mov
xchg
fwait
daa
loope
xchg
xchg
cmp
dec
loopne
nop
in
lock
icebp
sarl
or
jbe
sbb
fimull
jb
cmp
aad
popf
adc
adc
fsubr
pop
mov
ret
sbb
test
adc
xor
stos
in
pop
inc
test
dec
fstpt
mov
int
mov
mov
push
mov
pop
mov
sbb
imul
sbb
xchg
cmp
enter
scas
lahf
lcall
jg
out
mov
sub
ljmp
out
mov
icebp
jbe
inc
lcall
addl
shr
xor
and
int
mov
out
aam
pop
jg
fnstsw
jno
sbb
nop
add
sub
clc
out
pop
movb
loopne
test
pop
aas
mov
jnp
xchg
jns
rorl
shlb
andl
repnz
sbb
fwait
out
insl
add
mov
bound
dec
dec
bound
mov
adc
cmc
ret
mov
ret
jb
or
jbe
push
jle
imul
je
dec
cld
add
mov
inc
fwait
push
and
push
std
addl
imul
test
push
mov
out
test
out
les
shlb
sbb
aad
int3
and
fimuls
dec
inc
xlat
sahf
cmpl
pop
ret
mov
repz
mov
mov
leave
sub
sbb
jg
cltd
lock
mov
in
gs
xchg
call
in
jg
cmp
pop
xor
mov
hlt
ja
inc
jge
js
mov
sbb
jmp
xlat
jmp
cmp
into
add
imul
leave
mov
sub
xchg
enter
loop
dec
pop
push
sub
repz
stc
or
repz
ficomps
cmp
fs
cmpl
je
aam
fdivrs
mov
mov
pusha
and
inc
xchg
pusha
stos
inc
insl
sbb
nop
cmp
pop
scas
daa
push
inc
push
xlat
pop
loop
aad
cmpsl
and
mov
out
dec
sbb
mov
int3
jo
inc
pop
int3
add
mov
adcb
or
aam
mov
test
jg
fsubrl
daa
xchg
out
lcall
inc
aaa
and
pcmpgtb
pop
mov
jle
pop
add
inc
sti
push
lods
mov
loop
loope
inc
inc
inc
mov
in
stc
shl
sarl
pop
push
push
and
add
xchg
cltd
xor
jb
daa
add
pusha
mov
sub
or
mov
movsl
mov
push
xchg
lds
sbb
jp
cmc
add
jo
pop
ds
fnstenv
loope
popl
sti
jp
or
fmull
imul
in
pop
mov
inc
leave
jo
add
adc
cmp
mov
leave
les
and
jp
xchg
test
xchg
push
subl
jg
in
cld
push
cmp
inc
inc
mov
bound
mov
into
inc
xchg
mov
and
out
cmp
shll
or
push
mov
mov
sti
aaa
addb
mov
mov
dec
dec
in
fucomip
mov
sbb
xor
mov
test
xchg
jp
dec
add
dec
adc
dec
push
jno
add
xchg
lods
cmpsl
pop
in
sar
sahf
mov
adc
fildll
movsl
push
pop
push
sub
mov
dec
scas
mov
mov
mov
or
sbb
jle
std
cltd
mov
stos
sub
ret
daa
push
xchg
mov
pop
or
mov
inc
fisttps
dec
ds
jbe
inc
jp
mov
popf
lahf
sub
shrb
test
pop
xchg
ljmp
ja
mov
mov
inc
jb
mov
jae
stos
pop
sti
inc
push
jmp
add
adc
hlt
outsb
lret
mov
add
mov
xchg
hlt
call
push
add
dec
inc
dec
and
sub
mov
test
cvttps2pi
push
fdivs
loop
or
mov
and
dec
pop
mov
les
test
imul
mov
sbb
in
xchg
lahf
lcall
adc
jmp
and
mov
insb
rorl
xor
sti
xor
jmp
je
daa
lret
daa
mov
sub
ret
and
ds
pushl
popa
mov
unpcklps
inc
lahf
mov
push
sarl
and
mov
sbb
push
sbb
daa
xor
xor
insl
nop
addr16
imul
jecxz
int
sbb
fstpt
lds
push
inc
inc
sbb
stos
or
xchg
cmc
rorl
loop
nop
rdmsr
cmpsb
jae
out
xchg
jbe
cwtl
sbb
dec
jl
or
jo
xchg
out
inc
add
stos
pop
xor
jecxz
cmp
and
dec
lods
pop
lcall
in
sub
andl
lock
sahf
imul
pop
test
repnz
xlat
and
cld
pop
imull
cmpsl
inc
aam
fidivs
mov
dec
mov
scas
es
mov
fdivs
jb
outsb
dec
jle
lcall
leave
clc
and
and
adc
test
cmp
std
sub
jae
scas
pop
fs
sub
lods
cmp
jns
lahf
sbb
aas
out
sub
xor
pop
mov
fwait
dec
mov
sub
sub
or
dec
pusha
outsl
adc
lret
push
imull
pop
ja
hlt
scas
add
lret
fsin
dec
sbb
jnp
cmp
cmp
jge
scas
xchg
stc
stos
cmc
flds
jle
lds
les
insl
adc
dec
mov
test
enter
mov
xlat
std
mov
lret
xchg
lcall
jge
or
insb
lock
mov
or
outsl
jmp
hlt
pop
in
cltd
add
insb
jmp
adc
mov
mov
cmp
mov
fstpl
aas
adc
lea
and
xlat
in
iret
inc
add
jecxz
adc
add
fnstenv
mov
movsl
jb
rcrb
maskmovq
mull
and
in
sbb
jg
ret
push
inc
in
sub
dec
pop
imul
mov
cmp
loopne
into
pop
sbb
jmp
inc
xchg
int
jge
jle
in
clc
xor
out
addl
pop
dec
xor
pusha
mov
cmp
aam
and
dec
test
out
nop
and
dec
adc
mov
jl
xchg
pop
jbe
shll
aas
jge
jmp
std
push
push
xor
mov
pop
add
ret
outsl
imul
xchg
and
insl
pop
movsb
push
scas
mov
or
push
shlb
sbb
inc
fcoml
xchg
xchg
adc
out
stos
lock
movsl
loopne
sbb
xchg
out
adc
lods
lods
shrb
aas
test
dec
sub
or
mov
lahf
mov
popf
xchg
scas
jle
push
lcall
nop
jne
insl
lock
out
ficomps
incb
test
push
inc
pop
or
mov
pop
fcoml
ljmp
push
push
xchg
in
inc
pushf
imul
dec
xlat
mov
mov
pop
xchg
push
cmpsl
sahf
jg
mov
cmpsl
loope
xor
xchg
add
inc
pushf
mov
dec
imul
cmp
dec
inc
dec
pop
call
mov
push
cld
popa
jg
lds
out
std
ja
inc
int
lcall
imul
cmp
or
mov
ljmp
cltd
cld
lock
aaa
arpl
ffree
mov
dec
stos
out
add
test
push
pop
push
in
or
push
xchg
pop
push
xor
sbb
mov
jmp
jno
bound
push
aam
jecxz
push
mov
lds
test
jl
xor
or
mov
fldl
movsl
jo
out
xlat
mov
sub
mov
cmp
and
adc
inc
and
sbb
cmp
pusha
dec
adc
jl
inc
pop
xchg
cs
and
mov
sub
popf
inc
mov
dec
push
scas
inc
mov
mov
aad
mov
push
jb
xor
jne
mov
mov
mov
pop
xchg
out
push
cltd
shrb
push
dec
jp
sub
push
adc
inc
stos
insb
lahf
hlt
push
movsl
and
push
test
lods
mov
jl
cmp
stos
int3
bound
adc
pop
lods
mov
sbb
ror
push
push
inc
mov
xchg
xor
sbb
pop
jmp
adc
sub
out
ja
or
stos
js
lods
cmp
adc
rcr
into
in
insb
add
out
loope
dec
xchg
push
lcall
daa
ljmp
pop
movsb
das
mov
adc
dec
movsl
in
aam
pop
into
xchg
sub
setbe
cltd
cld
push
test
pop
ds
mov
int3
int3
les
mov
pop
sbb
and
sbbl
ds
decl
xor
aam
in
imul
hlt
cmp
adc
clc
data16
xchg
pop
mov
push
icebp
flds
mov
ds
idivl
add
xchg
pop
jo
dec
lods
sbb
sbb
add
movsb
add
stos
jno
rol
int
add
pop
inc
xchg
jnp
leave
and
dec
cli
es
and
pop
cwtl
aad
int3
popf
mov
je
push
push
or
push
cltd
adc
jb
jnp
rcrl
shrb
aas
push
and
or
xor
lcall
repz
xor
lahf
mov
jle
test
adc
adc
jmp
icebp
insl
fldcw
repz
push
pop
aad
mov
xlat
andb
dec
fucomp
sbb
inc
push
stc
nop
inc
xchg
inc
cmp
push
cwtl
das
sub
adc
xor
sub
aaa
xchg
out
or
and
mov
cmpsb
xchg
add
loop
xchg
insb
into
out
and
testl
test
mov
sbb
jge
xchg
mov
add
xlat
mov
pop
xor
and
icebp
mov
inc
imul
inc
and
or
cmc
cwtl
bswap
or
jg
xor
inc
and
jo
adc
add
inc
push
xor
test
loop
fisttps
fldcw
pop
xchg
mov
lar
pop
adc
add
mov
fstps
daa
or
adc
fcomps
aad
icebp
das
inc
outsl
inc
fcmovnu
mov
lahf
mov
mov
sub
adc
loop
adc
pusha
jmp
sbb
jno
adc
insl
or
leave
fmull
mov
jmp
fisttps
or
sti
xchg
ds
cmp
or
popf
jne
icebp
pop
stos
pop
pop
insb
das
mov
mov
addr16
cmp
ret
fwait
mov
push
sub
push
pop
cmovno
or
xor
dec
dec
push
jge
dec
dec
or
clc
insl
inc
add
movsb
push
mov
xchg
xchg
sub
outsl
mov
mov
mov
ret
mov
in
out
rcrb
sbb
insl
xchg
in
sub
bound
rorb
dec
xchg
mov
or
adc
or
mov
sahf
nop
rorl
fcoml
lea
inc
mov
jno
jb
sbb
xor
mov
sub
dec
cli
dec
mov
dec
push
sub
sbb
jno
movl
mov
inc
and
rcr
add
fildl
pop
fists
mov
jg
shll
dec
out
mov
push
imul
lcall
inc
outsl
outsl
out
adc
mov
dec
add
inc
push
andb
jb
mov
jae
into
scas
pop
mov
jecxz
dec
sub
and
or
adc
fs
fdivl
cld
mov
jle
ds
stc
repz
adc
fdivrl
nop
pop
or
push
or
into
sbb
or
test
jns
fisubrs
cs
pushf
inc
scas
imul
cmpsl
sahf
or
inc
add
jle
cmp
imul
inc
outsl
adc
mov
jle
nop
fnsave
aas
sbb
sub
call
xchg
add
mov
mov
imul
adc
hlt
enter
or
mov
dec
outsl
or
pop
imul
hlt
mov
in
inc
cltd
aas
out
sub
xor
and
aad
filds
cltd
mov
jle
pusha
jno
fwait
pop
cwtl
inc
fwait
pop
cmp
jns
sub
repnz
mov
sbb
inc
cs
popf
mov
add
test
add
sub
cmp
ss
jnp
sbb
gs
stos
push
test
in
xchg
mov
adc
rorl
cmc
mov
cmp
in
data16
sbb
nop
fiaddl
jo
cmc
push
pop
out
push
push
out
and
in
xchg
dec
sub
xlat
fstpt
push
mov
js
out
push
loop
ret
mov
inc
clc
lahf
xchg
mov
ret
jmp
loopne
call
sbb
hlt
jge
push
add
jle
fistps
mov
inc
nop
mov
lock
jp
mov
ja
adc
jno
mov
lea
stos
jmp
push
inc
jbe
adc
sub
xor
les
mov
inc
shrb
xor
lods
mov
adc
ja
shl
pmaxsw
imul
adc
push
pop
je
or
and
or
adc
lds
aaa
xchg
lcall
lock
push
cmp
fwait
gs
push
idivb
insb
ret
mov
or
jne
sub
push
clc
not
sub
mov
mov
dec
or
cmpsl
sbb
or
add
push
adc
std
push
fisttps
or
inc
xor
stc
lods
je
mov
inc
fwait
ljmp
lods
cwtl
enter
cmp
xchg
paddusw
clc
fsubrs
in
cmp
and
adc
add
add
jge
pop
idiv
xor
jo
mov
ret
xor
sub
mov
shlb
inc
xor
xor
pop
cmpsl
repnz
add
add
sbb
or
clc
mov
jo
jge
xchg
aas
adc
mov
out
pop
jmp
push
daa
jmp
jo
cmp
mov
sahf
movsb
and
or
std
imul
lahf
pusha
std
xor
mov
xor
movsl
sbb
in
xchg
pop
aam
out
cmp
mov
ljmp
jne
into
sbb
stos
pop
ss
push
add
cmp
push
sbb
mov
data16
mov
fwait
sub
subl
jo
or
push
cli
push
out
ror
rorb
rol
bound
in
rcl
adcl
outsl
popa
stc
inc
mov
js
iret
shlb
or
inc
shrb
or
push
mov
jg
cltd
inc
rcrl
add
in
lds
pushf
mov
bnd
pop
into
sub
xlat
xchg
adc
les
lret
adc
cltd
lods
test
pop
das
test
xchg
dec
movsl
in
pop
movb
aaa
sbb
push
fistps
cmpsb
inc
jno
cs
pop
xor
lods
add
je
fiaddl
mov
jp
jp
dec
pusha
xchg
dec
cs
icebp
adc
cltd
mov
cld
pop
and
stos
imul
popa
outsb
in
ret
inc
mov
das
loop
sahf
out
sbb
lock
push
adcl
xor
jo
pop
test
push
jle
cld
ficompl
inc
mov
lods
inc
pop
mov
or
les
cmp
mov
and
or
pop
jne
mov
or
shr
push
in
or
inc
jmp
inc
jb
sub
push
and
or
inc
push
xchg
cmp
stos
addb
lods
inc
push
pop
mov
pop
scas
leave
fistps
iret
jmp
roll
arpl
and
xor
mov
test
cwtl
cmpsb
es
xor
scas
fistpll
inc
pop
xchg
adc
mov
out
ds
pop
or
adc
imul
negl
je
push
sbb
out
lds
xor
mov
aad
insl
icebp
shrb
dec
push
cmpsl
jmp
aas
ret
xlat
call
outsl
mov
inc
cwtl
movzbl
fdivr
inc
dec
aam
pop
lahf
divl
sub
in
pop
fwait
test
mov
ss
roll
xor
hlt
stc
mov
pop
jecxz
leave
dec
negl
sub
out
dec
sahf
loope
fs
add
cmpsl
std
int
xchg
xchg
cwtl
cmp
mov
dec
xchg
ja
clc
sub
lds
adc
mov
xchg
add
xchg
lods
jp
add
adc
je
aaa
repz
out
test
insl
out
sub
jl
sti
jns
push
push
mov
mov
mov
test
dec
jb
pop
sbb
int3
aas
ja,pn
sbb
sub
addl
fcoms
or
or
dec
mov
shll
xor
pop
sbb
stos
xchg
pushf
pop
jns
or
cmpsb
mov
xchg
jp
and
shll
test
lock
jmp
test
pop
rolb
gs
out
lahf
push
pop
pop
push
fsub
out
pop
test
and
daa
cwtl
adc
adc
push
popf
mov
cmpb
push
mov
cmp
sbb
out
mov
pop
loop
inc
jmp
mov
ljmp
jecxz
xor
lcall
lahf
test
or
sbb
es
push
adc
rolb
xchg
les
mov
cld
scas
dec
fildl
dec
cs
pop
xlat
les
cmp
push
xlat
cmp
out
pop
xor
add
sti
sarb
lret
jns
push
push
or
stos
addr16
or
or
imul
push
jp
incl
pop
ret
push
pop
cmp
dec
push
mov
dec
add
repz
subb
pop
lds
xchg
inc
lods
mov
and
mov
insl
mov
push
imul
dec
fistpll
sbb
shrb
out
pop
xchg
push
cmp
inc
xor
sahf
fisttpll
insl
adc
mov
je
cmp
xor
jmp
fildll
mov
ds
fsub
xchg
jge
jp
pop
inc
push
std
jne
fists
add
xchg
popl
jg
adc
xlat
sbb
sbb
cmc
orl
sarl
mov
movb
sbb
cmpsl
mov
int3
mov
adc
pusha
or
lcall
inc
mov
xchg
outsb
mov
cld
out
xor
push
sub
cmp
pushf
ds
inc
mov
inc
js
add
aam
mov
subb
repz
dec
iret
pop
push
cmp
ds
daa
test
mov
sbbl
imul
mov
xchg
mov
int3
lods
gs
insl
popa
and
ds
adc
sbb
mov
sbb
fisubl
lea
movsb
fdiv
popl
mov
add
jb
fwait
jae
xor
scas
loope
int
jae
cmp
dec
les
adc
faddp
jmp
xorl
shrb
xor
mov
mov
repz
mov
scas
xor
push
fidivs
adc
xor
and
sarl
popa
sbb
cmpsl
adc
push
cmp
or
insl
inc
in
imul
push
fcoms
pop
cmp
xchg
jno
fdivrp
pop
lcall
clc
lock
lock
fcomps
add
jecxz
cs
or
adc
shlb
shrb
shl
xchg
stc
mov
in
xchg
or
xor
push
stos
in
pusha
lock
sbb
fidivs
mov
xor
dec
adc
data16
fcoml
iret
rcr
pushf
adc
imul
loope
lods
lcall
test
jo
insb
movsb
mov
push
mov
loop
xchg
fmuls
xchg
adc
sbb
xchg
dec
lds
imul
mov
inc
ret
dec
enter
clc
jne
idiv
movsl
jbe
ror
nop
mov
adc
mov
ror
push
mov
xchg
imul
pop
aaa
and
shll
xor
jle
icebp
das
push
pop
out
jbe
jcxz
mov
mov
dec
enter
mov
xchg
bound
leave
je
pop
mov
cltd
stos
test
push
mov
into
lods
jp
and
imul
xor
imul
insl
fstpl
in
jne
sbb
ds
addr16
and
data16
mov
xor
xchg
jecxz
scas
xchg
jmp
imul
lahf
lret
out
mov
sub
outsb
and
hlt
push
enter
pop
mov
lods
outsl
test
cwtl
sub
pop
loop
in
push
aaa
in
arpl
notb
mov
xchg
mov
xchg
sub
icebp
jnp
iret
dec
rcrl
xchg
in
cli
sub
int3
aaa
mov
gs
in
sbb
into
add
cmpsl
xchg
xorb
or
movsb
outsb
inc
mov
inc
nop
std
xorl
adc
and
xor
imul
lcall
adc
sbb
cmc
int
out
fmull
sbb
andb
sbb
lods
dec
xor
jmp
push
add
das
mov
push
mov
add
sbb
jl
arpl
lcall
cmp
jo
popa
orl
mov
inc
enter
pop
jns
je
mov
adc
out
cmpsb
mov
cmp
aam
loop
jmp
das
dec
cmp
roll
imul
pop
fcmove
mov
jns
pop
push
adc
jne
int3
sub
out
jbe
adc
ret
xor
jb
xor
mov
jl
or
lret
call
repnz
inc
out
loop
mov
cmp
fcomps
pop
cltd
lods
arpl
mov
cmpsb
les
fwait
rcrl
inc
bound
scas
xor
je
push
mov
or
addr16
mov
push
cld
fs
int3
popf
aas
mov
cmp
dec
mov
rorb
lock
rcrb
xor
leave
push
push
rcrl
inc
jle
push
xchg
cmp
ficoms
pop
xor
pop
rcll
pop
sub
mov
into
jp
out
dec
jl
dec
mov
mov
fucomp
inc
jno
adc
nop
hlt
xchg
and
push
call
add
insl
lods
sbb
xchg
jge
or
sahf
jle
nop
add
push
orb
sbb
ss
or
mov
xchg
jl
or
lods
shll
mov
sub
out
add
iret
ds
aaa
out
cmp
xchg
sub
fnsave
out
inc
fimuls
add
aaa
out
push
pop
rol
xlat
fwait
les
jnp
mov
lcall
adc
pop
inc
sbb
mov
setp
lahf
push
movsb
dec
test
test
lds
dec
call
adcl
jl
hlt
pop
sbb
insl
pop
hlt
push
mov
pop
or
xchg
inc
xor
and
pop
sti
push
mov
jne
ret
jle
pop
mov
daa
leave
xor
cmp
gs
clc
lret
test
data16
fxch
xchg
std
sahf
mov
jge
fadd
hlt
repz
pop
daa
into
fstpt
jnp
clc
mov
jmp
cld
sbb
int
scas
pop
loopne
in
dec
and
or
lahf
lea
sbb
roll
loope
insb
pop
filds
dec
mov
push
xchg
mov
mov
adc
jl
mov
loop
adc
pushf
lods
cmp
and
mov
movsl
sbb
je
cmc
lods
mov
andb
sub
scas
pop
sub
xchg
jecxz
push
dec
les
out
mov
test
jne
jecxz
ds
push
sbb
icebp
cmp
mov
pop
ret
arpl
insl
sti
mov
imulb
push
push
scas
pop
flds
ret
lret
cmpsl
in
inc
lods
sbb
and
popf
in
xchg
add
push
pushf
enter
daa
mov
adc
pusha
cmpsb
xor
and
and
mov
add
ss
lods
mov
sub
and
xlat
adc
dec
push
and
push
lahf
inc
adc
sbb
jecxz
add
lret
cmp
push
mov
ss
int3
in
mov
loopne
mov
roll
mov
pop
push
or
sub
dec
aaa
cli
repnz
and
fxch
pop
shrb
xchg
mov
push
push
fdivp
and
jbe
push
sbb
mov
scas
xor
ljmpw
add
push
fildll
lods
mov
aas
or
test
mov
xchg
pop
bound
fnstcw
sub
sbb
fisubl
fs
loope
mov
adc
neg
jb
lock
pop
push
in
sbbl
add
xchg
cmovg
jno
jge
inc
test
ja
jo
push
int3
loopne
push
mov
pop
in
cmc
movsb
adc
cmp
lret
in
shlb
sarb
scas
popf
mov
cmp
idivl
sbb
lods
add
out
inc
jnp
xchg
test
mov
popa
idivl
sub
mov
mov
sbb
adc
xchg
insb
and
xchg
mov
jmp
mov
das
adc
outsb
xchg
adc
in
test
pop
pop
lods
xor
pop
pusha
js
xchg
mov
fwait
and
adc
lret
scas
and
nop
jnp
xchg
shr
stos
mov
rorb
push
outsl
daa
push
scas
or
push
sbb
imul
adc
mov
inc
fyl2x
dec
sub
into
sbb
fwait
ret
mov
js
add
in
or
pop
xchg
js
clc
insb
push
push
jl
push
into
lret
daa
fwait
icebp
repz
mov
mov
mov
cmc
sub
test
lret
cs
cmp
into
movsb
ljmp
lds
pop
loope
xchg
push
inc
mov
ret
jae
fnstenv
pop
and
insl
dec
xor
adc
mov
fsts
push
fistpll
or
movsl
mov
xchg
jmp
adc
andl
in
jb
das
mov
push
in
and
inc
or
sbb
inc
mov
add
in
mov
push
nop
sbb
xor
add
pushf
pop
sub
xlat
mov
ret
icebp
sahf
xchg
mov
into
ret
jecxz
dec
repnz
aas
loope
mov
push
das
insl
jle
pushf
test
pushf
push
leave
rorb
scas
jbe
lcall
lock
mulb
lea
pop
xor
bound
mov
sbb
pop
xor
in
les
adc
xor
nop
cmp
imul
pop
test
loope
lret
cmp
and
mull
sbb
pop
mov
insb
fdivrs
les
insb
int
fisubs
stos
push
sub
divb
insb
das
xor
out
and
movsl
call
sub
arpl
mov
or
push
sbb
std
mov
in
mov
in
add
cmc
xchg
daa
adc
mov
in
notl
jle
inc
adc
xor
jno
addl
lret
fdivr
mov
imul
cmpsb
push
subb
adc
push
stos
rcrl
idivb
adc
test
xchg
push
mov
and
mov
xor
push
subb
mov
jns
cmp
mov
imul
sbb
outsl
lds
jecxz
loopne
es
xor
insb
cmp
push
int3
into
lcall
ret
scas
or
sbb
daa
mov
xor
jl
mov
pop
aam
sub
in
negl
push
sbb
cli
mov
insb
mov
je
pop
inc
dec
clc
add
push
sahf
enter
loope
popf
adc
inc
add
hlt
sahf
mov
lods
or
inc
cwtl
xor
or
add
cmp
incb
mov
or
fsts
mov
or
mov
lret
cwtl
in
mov
xchg
and
or
fcmovnbe
popa
push
aas
pop
sbb
imul
xchg
cmp
xchg
ljmp
jle
in
or
fistpl
lea
mov
sbb
push
outsw
xlat
sbbb
cmp
or
push
orl
call
mov
call
shll
insb
lea
in
enter
bound
icebp
mov
jle
lcall
mov
sub
push
enter
movmskps
jle
xor
inc
inc
shlb
subb
jmp
jp
ret
popf
iret
and
mov
leave
in
inc
inc
jne
xchg
xor
mov
push
les
xor
dec
adc
add
inc
out
test
dec
dec
or
ljmp
cmp
mov
adc
mov
pop
push
aad
dec
daa
pop
sahf
pop
bound
mov
mov
aas
repz
sbbb
test
add
push
mov
push
jb
mov
sub
jno
xchg
adc
leave
dec
cmp
cs
pop
jge
cmp
mov
cmc
shll
cld
test
in
cmpsl
bound
in
jmp
cmp
pop
daa
or
jne
mov
and
sub
mov
cmp
sub
divl
xor
in
pop
or
mov
int
les
sbb
int
or
xor
lmsw
pushf
fcoml
mov
xchg
add
xchg
and
push
and
outsl
mov
fbstp
pop
stos
rclb
outsb
xchg
dec
push
jecxz
loop
lret
std
stos
mov
xlat
and
hlt
sbb
lock
enter
xor
ds
stos
ret
mov
and
fdivr
mov
pop
adc
adc
fs
imull
int
xchg
mov
push
inc
add
out
out
enter
scas
dec
mov
in
lods
in
push
push
jecxz
loopne
sbb
dec
fldenv
and
inc
inc
inc
jecxz
pop
xlat
xchg
mov
leave
jmp
fnsave
popa
daa
leave
jae
stos
sub
dec
inc
aam
stc
xor
jl
stos
inc
mov
int3
adc
adc
adc
add
jecxz
mov
cmpsb
mov
inc
sub
ss
add
mov
lahf
addl
dec
jno
dec
nop
stos
scas
jns
push
outsl
dec
jbe
jbe
test
cmp
push
adc
pusha
adc
movsl
xchg
add
negl
negl
mov
dec
pushf
jae
sub
fildll
or
arpl
jne
and
pop
adc
stos
push
jp
in
sub
jle
gs
jp
sbb
imul
pop
mov
and
insb
mov
sub
cmp
clc
outsb
call
fnsave
sbb
insb
mov
vpmulhuw
ret
cmp
xchg
jl
ljmp
mov
cmpb
insb
push
add
jo
pop
rorl
xchg
das
sub
int
in
dec
stos
and
andl
lods
mov
push
xorl
sbb
movhps
xchg
and
int
push
pop
sbb
fwait
mov
movsb
and
and
lds
mov
cmc
dec
sub
jnp
int
mov
js
xor
mov
cmp
lahf
dec
mov
jl
jge
rcr
inc
and
stos
cli
jecxz
dec
mov
mov
or
pop
pop
xor
jmp
push
push
fwait
pop
mov
lods
push
push
sub
inc
dec
test
ds
or
mov
loopne
adc
push
sub
mov
xchg
clc
out
sub
adc
and
sub
jecxz
cwtl
pop
fidivrs
xchg
pop
je
lods
enter
fsubs
add
das
mov
int
mov
lds
mov
call
mov
ficompl
cmpsl
jae
add
cwtl
xor
sub
xor
xchg
xchg
gs
xor
sbb
cltd
sub
jb
push
aad
xchg
and
xchg
jbe
lret
into
adc
xor
mov
dec
sub
sbb
adc
mov
xor
push
jb
insl
push
movl
xchg
insb
inc
mov
mov
or
mov
repnz
out
scas
fldl
call
movsb
sub
xchg
dec
in
icebp
mov
mov
xor
inc
sbb
sub
push
lds
les
jl
push
sbb
add
pop
sbb
lock
adc
add
push
cmp
lret
mov
sub
and
xlat
push
ret
cmc
mov
sbb
inc
mov
fisubs
xchg
shll
shll
icebp
xchg
in
push
and
mov
adc
cmpsl
lods
add
mov
lcall
xchg
sbb
lods
ds
add
sub
xorb
pusha
xchg
mov
dec
loope
and
inc
ljmp
dec
cwtl
inc
and
js
or
push
lds
ret
sbb
fnstsw
jne
inc
testb
ja
movsb
push
fidivrl
out
int
or
out
lods
sahf
and
pop
stc
or
push
pop
andl
bswap
lea
pop
das
iret
sub
enter
fs
mov
dec
and
sarl
mov
xor
jle
cltd
out
cltd
mov
add
cmp
xor
fdivl
arpl
push
dec
xor
adc
dec
decl
jle
sbb
mov
insb
inc
insb
inc
mov
adc
movups
jecxz
cmp
cli
lcall
lret
mov
push
push
lock
dec
test
aas
out
push
adc
inc
jnp
pop
loope
in
push
cld
inc
mov
xchg
fidivrl
sub
aam
ja
js
xchg
inc
js
inc
xchg
sub
hlt
xlat
pop
scas
in
jns
pop
sbb
fs
and
mov
in
mov
test
lds
scas
xchg
hlt
sbb
jae
jnp
mov
not
pop
ficompl
mov
jbe
fmull
repz
push
loop
push
cmp
stos
rcll
pop
insb
jo
hlt
pop
stos
testb
and
fs
dec
sub
mov
mov
rorb
aam
cs
in
jmp
sub
mov
xchg
pop
test
fs
lcallw
inc
addr16
xor
mov
ljmp
sbb
fstp
leave
les
roll
mov
shlb
lahf
xorl
push
add
dec
pushf
int
and
shrl
mov
test
test
mov
xor
test
mov
push
jnp
notl
loopne
fsubrl
fistps
cmp
mov
mov
dec
or
mov
out
sub
jno
cmpsl
push
jmp
sub
cmc
and
shlb
or
iret
add
add
into
push
xor
sub
daa
cmp
out
mov
jl
outsl
dec
dec
and
sub
setbe
stos
pop
clc
imul
and
lock
add
adc
mov
lea
sub
dec
xchg
jmp
cmc
add
dec
shl
jbe
or
ret
push
movsb
loopne
cmp
inc
xchg
lods
fcmovnb
das
and
push
pop
shlb
jne
mov
arpl
or
sbb
out
int3
in
js
xor
cs
sub
and
cmc
sbb
test
push
enter
into
stc
mov
les
out
arpl
shl
sub
aas
jnp
lret
add
mov
add
xchg
cmp
dec
fsubrl
ss
fstpl
push
scas
test
rclb
lods
jb
and
stos
or
add
lahf
lods
fmull
sub
inc
or
test
out
lock
pop
cmp
cmp
jl
aas
cmp
sub
cmc
test
enter
jle
mov
cmp
xor
push
cltd
jbe
push
xchg
dec
mov
mov
rcrl
mov
add
rorb
add
jge
setns
pop
leave
xchg
sbb
ret
xor
cltd
mov
cmp
push
outsb
sbb
into
xor
xchg
mov
je
xchg
mov
mov
cmp
pop
mov
mov
sbbb
nop
mov
mov
cmp
cltd
inc
inc
dec
add
aad
fcoms
clc
cmc
push
fs
mov
addr16
mov
push
xchg
loop
mov
mov
mov
cs
rolb
xchg
imul
insl
ljmp
inc
pop
inc
push
pop
div
call
dec
das
lcall
sbb
pop
mov
push
jecxz
gs
call
out
cld
shl
adc
in
cld
pusha
push
cmp
int3
jecxz
xlat
xchg
pop
xchg
icebp
pop
mov
cmpsl
shll
or
adcl
dec
je
adc
push
inc
jbe
xchg
fld1
adc
sub
daa
aaa
int
adc
test
xchg
aaa
adc
mov
sub
loopne
jge
stc
mov
insl
scas
or
cli
cmp
jo
enter
lods
adc
out
aam
ljmp
jnp
mov
jb
xchg
cmp
ret
dec
mov
pop
inc
lods
cmp
push
jo
push
sub
pusha
out
sbb
xchg
pop
pop
loop
ret
test
mov
fdivrl
add
adcl
ljmp
cwtl
xor
ds
jecxz
sub
push
shrb
adc
mov
push
fsubrp
popf
push
add
mov
jo
cmp
fisttpll
inc
cli
or
adc
mov
push
and
lods
lods
and
loopne
cmp
adc
mov
mov
ds
loop
shll
mov
mov
mov
test
xchg
adc
clc
inc
inc
push
loop
and
xchg
mov
xchg
jg
push
dec
outsb
or
mov
insl
sbb
xlat
push
push
cli
cmp
push
outsl
test
fwait
std
cmp
mov
mov
popf
lret
sarl
fld
push
stos
lods
iret
bound
jmp
mov
insl
lods
inc
push
mov
and
repz
in
mov
out
mov
jle
and
fists
enter
push
insl
testl
out
imul
nop
adc
xchg
dec
fists
int
sbbb
adc
sahf
push
les
jl
mov
mov
lret
jbe
fnsave
jo
fdivrs
mov
pusha
push
sbb
xchg
out
mov
mov
cmp
sarb
mov
push
add
pop
fucomip
imul
dec
pop
daa
lds
or
daa
cltd
movsl
mov
fcoml
nop
sub
mov
fdivr
mov
jo
xor
sbb
cld
mov
and
lret
inc
ja
imul
xor
push
pusha
cmp
jns
inc
roll
aas
mov
or
sbb
mov
enter
sysexit
sub
sbb
cmpsb
pop
mov
push
or
pop
sbb
mov
mov
mov
pop
or
lods
clc
daa
push
mov
and
ja
fidivrl
ret
mov
mov
or
jns
add
lock
pop
das
or
mov
push
fdivrl
jp
popf
and
outsb
and
xor
sub
mov
jmp
enter
mov
mov
outsl
push
inc
pop
add
loope
push
clc
stos
or
inc
and
jns
cmpsl
sub
scas
subps
adc
and
dec
out
mov
imul
mov
scas
inc
stos
cmp
aas
fsubrl
out
pop
and
or
cmp
sbb
pop
fidivrl
fstp
jg
sbb
jnp
repz
aam
pop
insl
dec
ficomps
inc
inc
cwtl
aas
ds
std
movsl
lret
xor
mov
nop
sbb
adc
add
jmp
push
movsb
aaa
movl
pop
and
test
add
jo
aaa
shrl
pop
add
mov
jl
in
adc
or
xlat
and
xor
dec
dec
or
push
push
sbb
imul
stc
push
jmp
adc
pushf
jno
lods
adc
sub
mov
ror
jl
aad
xor
nop
stc
push
loopne
shr
push
dec
sub
lds
cmp
xor
sub
push
iret
ja
clc
push
cmp
and
hlt
dec
jge
xchg
jns
lahf
seta
rclb
lcall
cmp
out
mov
or
in
xor
add
mov
adc
fs
pop
pop
xorl
xchg
add
call
jmp
sbb
pusha
fdivl
adc
xor
out
mov
imul
mov
out
pusha
mov
xor
or
hlt
xchg
adc
xchg
mov
and
jne
les
out
pop
mov
mov
ret
jbe
push
das
inc
jbe
mov
adc
pop
mov
sbb
ror
out
sahf
mov
rcrb
ss
std
push
cmp
movsl
cld
sbb
cmp
into
mov
es
aas
jmp
shrl
push
rorl
and
inc
fdivrs
pop
xor
add
bound
xlat
push
jmp
stos
subl
add
cwtl
dec
testb
lahf
pop
and
lods
cmp
pop
mov
roll
inc
rorb
aam
je
sub
stos
jp
out
lock
sbb
and
mov
jl
mov
out
and
cmpsb
enter
in
dec
push
xchg
jge
cmpsb
imul
xchg
in
adc
xchg
sbb
jg
repz
mov
arpl
gs
into
inc
mov
frstor
xchg
sbbb
cmc
cmc
sub
call
into
sub
rcll
out
fsubs
bound
dec
jmp
scas
push
jge
test
mov
sbb
fmul
lds
das
into
inc
adc
loop
sbb
mov
shll
push
das
xchg
sub
add
in
sbb
inc
sub
mov
je
inc
adc
popf
int3
push
cld
pop
aad
cld
or
adc
inc
pop
jle
insb
pop
lret
cwtl
pop
dec
out
push
jmp
xor
sbb
mov
inc
sbbl
xor
mov
jp
sub
sub
xor
xchg
std
mov
or
cmc
stc
mov
push
cmpsb
xchg
mov
lea
js
jno
cli
sbb
imul
xor
adc
pop
rclb
cs
jecxz
std
xor
jge
mov
jl
or
xor
shrl
data16
jmp
push
cli
xchg
inc
lret
add
orl
into
jne
popf
pop
push
aaa
mov
mov
pop
loop
push
push
push
xchg
mov
into
adc
sub
loopne
pop
push
sbb
sbb
aas
scas
ret
popf
in
push
and
add
dec
lret
cwtl
cmpsl
aaa
mov
sahf
xlat
call
mov
les
pop
sbb
sysret
jp
cmp
xor
loopne
sbb
out
push
ds
mull
adc
mov
mov
add
jle
stos
mov
xchg
std
shl
aam
movsl
clc
jae
aam
loopne
repnz
push
cmp
push
out
lods
test
and
fidivrs
js
xor
xor
outsb
rcl
div
mov
cld
orb
test
add
cmpb
jmp
mov
loopne
xchg
mov
mov
pusha
lea
mov
jmp
xchg
stc
loop
stos
into
int
sahf
mov
pop
push
dec
add
decl
mov
hlt
pop
or
add
sahf
fsubr
andb
nop
shlb
jmp
sub
jnp
lds
xor
call
ja
xor
les
outsl
inc
push
sub
and
pop
xchg
dec
into
push
arpl
xor
in
add
clc
mov
lahf
dec
ret
fisubrs
or
pop
or
xor
mov
fs
push
sbb
daa
call
xchg
add
loope
xor
jo
decb
sti
mov
scas
and
pop
and
movb
add
xchg
sub
and
and
mov
or
push
sar
adc
jbe
xchg
fwait
and
outsl
lock
mov
flds
jg
xorl
mull
adcl
or
imul
push
adc
call
cmp
or
pushf
push
cmp
icebp
mov
inc
icebp
loope
sbb
jle
mov
test
add
fwait
pop
add
inc
and
stos
or
test
jecxz
cli
inc
pop
add
into
test
push
jmp
out
add
iret
lods
xchg
fmulp
notl
mov
cmc
push
cmpb
cwtl
stc
cmp
cs
and
pushl
arpl
outsl
jmp
add
mov
in
fimuls
adc
push
sub
roll
outsl
inc
mov
inc
xchg
jmp
ds
cmp
xlat
dec
pusha
lock
fnstsw
icebp
xor
iret
cmpsl
xchg
int3
jl
cmp
mov
jno
outsl
das
mull
xor
xchg
mov
repz
push
pop
jecxz
sarl
sbb
push
lods
adc
or
xchg
sbb
jle
cmp
add
subl
mov
or
stos
pop
fistpll
xor
jae
inc
clc
aam
daa
push
jbe
in
testb
sahf
push
les
sahf
sbb
pop
test
aad
inc
cmp
cs
xchg
mov
mov
dec
addr16
das
push
adc
mov
out
in
and
fcomps
daa
add
int3
ret
hlt
adc
jle
jmp
xor
hlt
incl
cmpsl
cmp
mov
nopl
popa
lods
int
insb
insl
cmp
inc
inc
xchg
daa
push
add
scas
dec
scas
mov
sbb
outsb
jne
ljmp
out
hlt
clc
adc
ljmp
lds
xchg
sbb
dec
mov
sbb
shll
adc
sbb
and
cmc
loopne
ljmp
jg
fsubs
loop
cmp
lds
mov
fs
outsb
xchg
cmc
call
out
mov
push
int
imul
lods
call
mov
fucomp
and
push
mov
pop
movsb
insb
dec
jbe
jmp
or
aas
gs
icebp
jmp
in
fcmovbe
lods
pop
movsb
add
andps
es
stos
cmpb
mov
cmp
scas
dec
stos
sub
mov
enter
sbb
jecxz
mov
xchg
outsl
cmp
daa
add
push
push
fwait
ja
pop
mov
mov
mov
ja
std
test
mov
divb
ds
dec
push
mov
in
mov
rclb
xlat
dec
add
cli
push
or
sub
loope
add
into
fwait
xchg
pop
icebp
jmp
push
out
jnp
lds
jg
pop
ret
rcll
enter
repnz
push
push
dec
push
outsb
lea
aam
ja
lret
rcr
enter
mov
jns
mov
sbbl
loope
pop
mov
das
hlt
jno
cmp
jb
subb
js
int
push
mov
test
mov
dec
in
mov
fcmovne
dec
pop
mov
xchg
inc
mov
mov
or
roll
ret
sbb
in
scas
mov
popa
xchg
jge
fcoml
inc
jns
in
int
mov
shrl
or
push
in
push
dec
xor
mov
sbb
ljmp
or
and
sbb
fldt
rclb
dec
fiadds
imul
xchg
cs
pusha
push
pop
push
add
add
jae
mov
xchg
mov
lods
pop
and
mov
jns
fbld
inc
cmp
xlat
fcmovnbe
jle
lods
pop
dec
dec
push
pushf
mov
or
xor
gs
out
jnp
iret
cmp
or
adc
jecxz
xlat
lret
lcall
sub
cltd
roll
pusha
bound
popf
sub
lcall
mov
fldt
and
mov
sbb
fnstcw
insb
int
sub
mov
cs
ror
mov
push
into
rcll
bound
xor
hlt
jne
das
scas
icebp
mov
push
stc
loop
rcrb
imul
out
out
inc
lahf
mov
mov
pop
call
ret
stc
je
xchg
fiadds
pop
repnz
push
js
lods
sub
jle
push
adc
sbb
outsl
lods
add
pushf
and
shrl
mov
pop
mov
sbbb
cmpb
xchg
xchg
mov
sub
sub
mov
push
decb
insl
cld
divl
lret
pop
lods
mov
daa
push
lea
xchg
inc
jp
mov
enter
dec
adc
mov
shr
les
popa
hlt
xor
xchg
sub
jg
xlat
push
cmpsl
xor
maxps
fisttpll
int
dec
into
pop
inc
test
xor
loop
cmp
lcall
or
inc
mov
pusha
xchg
scas
jecxz
or
pop
ret
test
mov
mov
fbstp
out
dec
mov
ljmp
cmp
test
push
cld
and
sbb
pop
push
out
cwtl
add
push
into
adc
mov
and
cmp
push
mov
mov
sbb
or
add
iret
lock
add
sbb
scas
lock
adc
popf
rolb
test
pop
popa
inc
sbb
sbb
push
sarl
inc
push
mov
cmc
scas
iret
bound
jmp
repnz
pushf
mov
subb
aas
loopne
xchg
lea
movsl
das
sbb
icebp
push
das
outsl
jge
fildl
xor
sub
and
xlat
out
daa
push
outsl
je
xchg
xor
sti
sbb
mov
enter
in
xchg
sbb
or
arpl
mov
clc
das
pop
fs
test
xchg
mov
or
mov
les
and
dec
enter
jo
jns
ja
popa
sub
lahf
aad
lea
les
mov
stos
add
loope
movsb
aad
sbbl
jbe
gs
sub
test
ror
jbe,pt
inc
and
loopne
and
jb
ret
dec
mov
xor
mov
shlb
push
jo,pt
scas
inc
iret
setnp
mov
aad
mov
movsl
ret
test
cmc
lcall
mov
add
ljmp
pop
ja
push
cmpsb
insl
insb
fistpll
rcrl
pop
xor
dec
daa
inc
add
mov
mov
push
repz
jb
jecxz
aam
cs
movsl
cmpsb
sbb
cwtl
push
popa
dec
arpl
mov
repz
fldl
adc
out
call
es
sahf
mov
jmp
test
addr16
push
out
dec
dec
lock
xor
jo
push
inc
mov
dec
js
test
push
sub
lcall
ret
inc
lahf
xor
js
xor
inc
mov
sbb
dec
push
inc
cmp
xchg
xchg
xchg
dec
lea
enter
je
shlb
cmp
repnz
sbb
repnz
std
sahf
int3
push
rcr
sarl
pop
insl
add
pushf
scas
add
ljmp
push
loope
in
es
scas
aad
popa
and
inc
popf
shl
mov
and
inc
fisttpl
sbb
sbb
aam
add
in
dec
int3
dec
lds
pop
and
xchg
scas
lret
cmp
add
imul
mov
jae
lret
pop
cmp
jg
jb
iret
cmp
mov
push
cmc
push
sahf
jecxz
sub
cmp
inc
pop
nop
inc
mov
and
das
dec
jno
in
movsb
lock
rcll
jne
aas
cmp
dec
cld
cmc
loope
lods
xor
mov
movsb
test
xchg
xor
dec
mov
sub
iret
test
xchg
push
jecxz
mov
push
lret
dec
inc
adc
ds
pop
in
stc
mov
jl
sti
cmpsb
mov
add
lret
add
shll
jae
ret
xchg
and
jno
and
lcall
and
fmuls
fisttps
add
xchg
iret
xchg
test
mov
test
push
ss
mov
int
mov
movsb
pop
xchg
inc
jb
shrb
xchg
cwtl
je
pop
jae
mov
xchg
adc
stc
mov
gs
loopne
lods
or
mov
xor
add
pushf
pop
sbb
pop
fistl
stos
inc
pop
loop
lret
inc
adc
int3
sarb
pop
pusha
lods
adc
data16
and
sbb
loopne
out
das
ds
cli
mov
rcrl
push
lock
subps
or
imulb
nop
pop
adc
fcoml
sbb
imul
shlb
stos
jne
jp
fiaddl
pop
lea
dec
std
data16
cmp
dec
xor
fstpl
mov
out
outsl
pop
out
and
leave
lods
test
xor
sub
or
stc
int3
add
sub
fidivrs
fildll
sub
popf
pusha
aam
loopne
enter
cmp
test
adc
out
dec
loop
loop
add
and
ror
bound
gs
jo
pop
adc
cs
aas
fwait
and
bswap
rclb
mov
dec
daa
add
cmc
std
in
jbe
cvtps2pd
xchg
mov
jl
add
filds
sar
xor
shr
lahf
or
sub
push
pop
and
shrb
cmp
xor
jo
mov
pusha
daa
mov
adc
and
adc
dec
cmp
xorb
push
mov
inc
jecxz
inc
push
rcrl
mov
xchg
insb
push
push
cld
dec
lds
rolb
xor
gs
mov
cwtl
cmp
mov
adc
and
mov
dec
push
aas
xchg
out
dec
mov
lock
daa
jbe
cmpsb
push
les
popf
pop
xchg
jge,pt
sub
adc
out
inc
loop
lcall
inc
push
add
mov
pusha
pop
inc
out
lods
mov
sahf
sbb
iret
pop
mov
sub
clc
pop
cmp
add
jl
popf
pop
xchg
push
dec
jmp
dec
addr16
test
repnz
cmp
mov
scas
pop
and
mov
cmpsb
cmp
outsl
insb
js
mov
pop
lahf
clc
xchg
or
adc
lea
sbb
ror
mov
out
inc
xadd
rorb
cmp
sbb
insl
hlt
mov
icebp
jle
lods
push
into
xchg
pop
lahf
cmp
fildll
cmp
outsb
lds
cmp
arpl
jne
add
pusha
jg
jle
lret
lahf
cmp
cld
xor
cs
mov
cmpsl
subl
cwtl
mov
ss
push
mov
jg
dec
mov
loopne
mov
push
lcall
iret
sbb
movsb
test
xchg
call
lea
test
loope
and
dec
pushf
cmpsl
mov
stos
or
loopne
push
cs
lret
add
xchg
sub
cmpsb
scas
sahf
shl
loopne
jge
hlt
stos
movsl
mov
fstl
inc
cmpl
and
cmc
xor
inc
adc
pop
jne
iret
dec
stos
enter
push
dec
int3
outsl
out
cli
sbb
pop
out
repz
in
lock
lahf
pushf
xchg
push
out
cld
mov
push
shll
sbb
ror
mov
aas
add
and
les
stos
fs
pusha
lahf
or
into
mov
add
xchg
or
xchg
add
mov
pop
shlb
test
outsb
loop
or
mov
daa
sti
fiadds
cmpsb
sub
paddq
paddsw
xor
jne
pop
xor
faddp
hlt
fimull
sahf
cmp
sbb
sub
or
pop
fisttpl
ret
mov
mov
jg
mov
sub
sub
test
dec
jg
sbb
lock
add
repz
repz
rorl
je
jmp
out
pop
cmpsl
out
xchg
test
dec
sarl
cmpsb
xchg
xchg
outsl
pop
adc
mov
ficompl
outsl
lods
pop
aad
mov
jns
icebp
and
loope
push
jne
stc
bound
testl
add
jne
push
shlb
lods
incb
pop
fsubrs
nop
adc
imul
negl
fs
mov
xchg
scas
inc
insl
sbb
outsb
insl
add
adc
lock
xor
cmc
jb
xor
cmp
adc
xchg
mov
out
mov
bound
xor
mov
mov
push
stc
mov
out
xchg
push
popa
add
cltd
xchg
dec
outsl
dec
mov
mov
sub
jg
adc
push
movsl
dec
jge
push
mov
fisubs
push
cli
adc
and
jo
lock
enter
cmpsb
dec
push
jae
mov
out
icebp
pop
jge
xor
int3
xor
push
xor
insl
push
push
out
icebp
pop
xor
stos
fcmovnbe
movsl
fistpll
jnp
jge
fsincos
adc
pop
mov
mov
lahf
inc
jae
lea
sbb
sub
mov
add
dec
stos
mov
pushf
inc
mov
imul
mov
hlt
adc
cmp
gs
or
movsb
fnstsw
in
pop
xchg
inc
jg
xchg
and
call
sahf
rol
test
inc
inc
pop
out
sub
add
add
xchg
adc
imul
mov
into
int3
xor
xchg
orb
fbld
in
enter
inc
push
cs
lcall
les
lods
inc
jns
shlb
sbbb
test
pusha
adc
outsb
pop
lahf
xchg
push
lock
dec
stos
jg
mov
mov
sbb
jne
dec
jg
dec
xlat
int
inc
pop
mov
mov
ja
pop
out
fiaddl
inc
in
pop
mov
push
push
lea
push
xchg
cli
lods
lea
bound
xor
mov
push
inc
sub
fdivr
cmpsl
pop
aam
into
fcmovnb
subl
pop
out
cmp
mov
xor
mov
fmuls
xadd
mov
cmp
inc
xlat
mov
xchg
dec
fs
fwait
stos
pop
jb
jge
pop
out
int
fyl2xp1
call
adc
dec
mov
mov
push
scas
into
int3
push
sub
jp
test
xor
sahf
mov
idivl
bound
movsl
fcoml
fimull
pushf
ja
pop
test
mov
mov
int3
or
pop
ret
xchg
xchg
jle
push
daa
int3
ficoml
std
mov
lods
jns
push
out
stc
cmp
xchg
lahf
or
sub
mov
jecxz
push
sub
insb
lret
pop
ret
pop
jnp
aad
xchg
leave
popa
cmp
pop
nop
mov
xor
mul
lods
jmp
xlat
mov
hlt
push
cmp
loopne
push
stos
dec
mov
cmp
pop
shl
push
icebp
movsl
stos
orb
mov
or
call
or
cmp
xor
je
xchg
scas
sub
fcomps
popf
jmp
and
mov
sub
xchg
sub
aam
jb
pop
push
mov
rcrb
jmp
inc
in
outsl
imull
rorb
shr
sarl
jl
sahf
leave
and
into
cli
mov
pop
sbb
pop
mov
mov
cmp
cmpb
ret
pop
mov
lods
push
js
mov
add
cmp
shlb
aas
lods
inc
out
pop
mov
enter
out
out
testb
out
ret
test
pop
mov
pop
mov
shll
nop
shlb
insb
or
pop
fidivl
mull
mov
stos
inc
ja
pop
ja
iret
jmp
out
fnstenv
scas
pop
adc
add
jmp
stc
mov
xchg
mov
inc
jo
sub
lret
pop
and
lahf
mov
fmul
ds
pop
push
or
mov
xor
sbb
sub
mov
shll
add
out
lock
fidivl
pop
xchg
jo
cmc
shlb
in
mov
int3
insb
loope
mov
adc
mov
mov
inc
aad
roll
mov
out
aam
mov
mov
xor
xor
rol
push
dec
push
fsubl
shlb
negl
shr
mov
lods
jle
jbe
icebp
inc
cmp
pop
and
mov
aaa
push
mov
dec
in
inc
xchg
cmp
push
push
pop
mov
add
outsl
lds
arpl
mov
and
push
cld
jg
shlb
inc
rclb
inc
add
push
pop
into
loopne
and
mov
daa
mov
ffree
in
inc
lahf
js
cs
push
inc
outsl
pop
jl
mov
xchg
iret
outsb
xchg
fwait
aam
in
fimuls
mov
inc
popa
fpatan
add
jle
and
std
mov
and
xchg
push
cwtl
add
cmp
push
popa
aam
out
dec
mov
add
test
inc
out
mov
mov
into
bound
cs
or
gs
cmp
push
stc
inc
or
jbe
leave
in
xor
pop
in
inc
jl
stos
jne
stos
jbe
div
popf
sub
pop
sbb
xchg
cmp
xor
jnp
mov
rcr
push
push
jl
lds
add
stc
add
adcl
out
out
dec
stos
jns
mov
cld
in
add
movsb
rclb
mov
mov
and
jae
pop
lcall
movsl
out
mov
mov
jg
testl
xchg
and
sbb
popa
popf
mov
mov
movsb
mov
and
stos
shlb
jb
outsl
shl
mov
sbb
pop
jl
inc
popf
ljmp
and
pop
std
xchg
xor
xchg
fisubl
sub
add
enter
outsb
mov
mov
mov
ss
add
sub
sbb
push
mov
inc
xlat
cmpsl
sti
aad
clc
xchg
and
xchg
loop,pn
lock
fs
pop
clc
popf
and
dec
ds
outsl
lcall
and
sub
divl
ret
dec
sub
xchg
pop
sub
sbb
jbe
sub
lahf
dec
mov
insb
jecxz
movsl
mov
jns
cmp
dec
aam
lret
lods
insb
rcr
dec
inc
ror
mov
test
push
les
mov
imul
lcall
call
iret
adc
and
cmp
dec
call
movsl
mov
repnz
adc
sub
rol
iret
mov
cs
mov
xor
xchg
lcall
dec
ds
jne
mov
or
fs
jnp
xor
pop
mov
imul
scas
lds
shlb
lea
ja
sub
movsl
imul
or
in
cmpb
cs
test
hlt
cmpsb
mov
push
dec
cmpsl
enter
xchg
je
inc
rol
ss
pop
dec
xor
insl
adc
pop
pop
inc
pusha
and
in
call
xchg
push
shrb
fucom
jg
stos
mov
push
adc
xor
notb
mov
xchg
pop
outsb
sbb
mov
das
mov
arpl
jp
inc
movsl
incb
xchg
mov
inc
in
xchg
mov
dec
lea
push
fiaddl
mov
push
xchg
mov
jnp
adc
jl
mov
sub
cwtl
stos
pop
cmp
push
pop
xchg
stc
aas
test
repz
dec
cmp
fwait
insl
inc
sti
cltd
aas
inc
test
push
ja
jbe
and
mov
xchg
inc
adc
dec
sahf
lahf
fwait
cld
bound
stos
lods
or
aaa
mov
iret
mov
fdivp
mov
jo
addr16
mov
dec
leave
inc
push
pushf
stc
sti
addb
push
inc
cmp
inc
xchg
out
push
scas
mov
xchg
cli
push
mov
pop
hlt
xor
jnp
gs
stos
or
call
inc
repz
sbb
jg
jnp
mov
mov
xchg
mov
arpl
inc
push
xchg
clc
jnp
push
pop
mov
das
movb
jp
jne
shl
pop
ret
ret
jbe
adc
mov
push
jle
or
pop
sub
fwait
mov
bts
mov
inc
mov
test
xor
ja
mov
int
and
xchg
jo
int3
fsubs
push
xor
or
xorl
mov
loopne
aas
xor
sbb
fidivrl
fnstsw
in
cli
cmpsb
out
repz
xchg
and
arpl
loop
jns
jmp
or
mov
popf
scas
repnz
movsl
sbb
push
mov
andl
and
movsl
push
cmp
mov
xchg
mov
inc
cmp
xchg
test
pop
ljmp
mov
inc
push
push
mov
test
sbbb
pop
push
cld
faddl
pop
sub
es
jg
lock
and
popf
movsb
push
inc
mov
sbb
test
pop
mov
or
leave
or
dec
inc
jo
inc
jmp
dec
shl
pop
mov
pusha
jl
ljmp
cs
push
xchg
inc
pop
iret
popf
pop
jnp
imul
aas
mov
adc
and
fs
or
push
mov
adc
insl
ljmp
xchg
inc
jge
aam
je
pop
bound
neg
je
jne
push
add
test
push
lds
dec
dec
mov
sbb
xor
mov
mov
enter
movsb
bound
mov
xchg
jns
xor
mov
jo
inc
inc
call
xchg
xchg
jnp
dec
lcall
mov
filds
adc
mov
enter
cwtl
mov
into
shlb
sbb
sub
test
lods
adc
inc
out
jae
test
fisubrs
mov
dec
stos
mov
xchg
insl
and
inc
icebp
fcomps
out
call
out
scas
mov
sub
xchg
sbbb
mov
cmpsb
jg
inc
xchg
and
sub
stc
in
arpl
shl
mov
mov
adc
ja
add
mov
scas
push
xchg
ja
push
inc
dec
mov
lret
je
movsb
push
ret
cmp
push
xchg
push
lock
das
outsb
sti
stos
or
push
jl
int
ret
push
inc
arpl
xor
ja
es
xchg
push
loopne
div
je
sub
fcompl
mov
daa
iret
lds
gs
pushf
push
xor
call
jg
cmc
ss
pusha
stos
cs
fidivrl
mov
aam
jecxz
mov
lods
test
movl
aas
adc
xchg
loope
inc
mov
cmp
sub
or
cs
imul
xchg
push
mov
pop
movsb
push
clc
int3
shll
xor
lahf
mov
push
sbb
pop
into
test
jmp
push
sbb
pushf
into
push
addb
pop
test
and
push
mov
xlat
test
arpl
sahf
stos
mov
call
cs
out
mov
movsb
sbb
and
in
pop
lods
sub
jb
jno
push
sub
or
sbb
fcoms
lcall
ds
mov
insl
mov
and
shrb
sbb
rolb
cltd
bound
jb
xchg
in
jb
mov
je
call
in
incb
in
aam
clc
movsl
and
sub
mov
cmp
pop
and
pop
cmpsb
outsb
xchg
xchg
push
pop
out
sbb
mov
mov
lea
push
adc
dec
test
call
aad
mov
sbb
xor
inc
jne
or
test
lea
sahf
les
in
lock
jmp
jg
lcall
push
push
xchg
xchg
pop
jns
cltd
and
iret
mov
insb
sbb
add
daa
mov
mov
pop
mov
pop
push
repnz
scas
push
dec
and
cmp
mov
rorb
cmpsb
outsb
jo
outsb
rclb
fwait
out
inc
frstor
adc
gs
jl
scas
mov
push
inc
sub
mov
jl
sbb
pop
stc
mull
cmpsb
push
aaa
or
gs
cmc
aam
mov
jo
mov
mov
mov
stos
mov
cmp
out
inc
fcoms
dec
jmp
and
xchg
inc
fldt
ficomps
inc
cmpsl
mov
mov
data16
mov
mov
inc
hlt
and
fisubrl
out
cmp
pop
imul
xchg
push
xchg
jl
and
pop
jae
and
fsubl
or
mov
adc
jnp
and
imul
adc
clc
fwait
jno
jo
leave
aaa
inc
jecxz
inc
or
and
addr16
les
cmp
push
imul
add
repz
or
popa
lret
stc
test
ljmp
ja
lret
mov
stos
repnz
hlt
pop
outsb
inc
sub
adc
inc
pop
inc
jg
arpl
movsb
xchg
sub
xorb
sub
jae
lcall
jecxz
adc
pop
mov
mov
mov
push
lret
scas
mov
xor
sub
mov
lds
mov
mov
xchg
ja
pop
mov
sbb
adc
inc
or
push
loopne
or
sti
fsubs
mov
push
xchg
and
into
dec
mov
imul
mov
xchg
push
adc
pop
in
dec
int
btl
mov
dec
fnstcw
mov
or
or
imul
jl
add
inc
mov
inc
pushf
outsb
xchg
xchg
pop
ret
xchg
test
add
addr16
loop
mov
mov
cli
or
ret
sbb
pusha
mov
xor
in
pushf
push
xlat
hlt
add
dec
sarl
xchg
adc
popa
lock
xchg
sti
cmp
mov
or
push
adc
lock
mov
js
call
jg
xchg
pop
mov
add
test
adc
push
and
inc
aam
je
xor
lods
dec
enter
in
scas
xchg
push
push
adc
addl
mov
into
outsb
push
ret
imul
dec
add
inc
scas
push
mov
dec
and
sarl
popa
jae
jmp
push
gs
push
xor
jp
pushl
push
das
dec
mov
jp
sub
lahf
rclb
aaa
cmp
add
pushw
xor
or
and
jg
icebp
out
das
jp
xchg
cmpsb
sti
mov
das
mov
shl
ret
cmp
pop
bound
cmp
jbe
fadds
test
cmp
push
push
out
ret
ss
and
out
out
mov
adcb
roll
ss
iret
int3
adc
or
push
mov
adc
jbe
subl
mov
out
xor
rcr
mov
loope
pusha
xchg
loop
in
jecxz
negl
push
xor
mov
fsts
inc
xchg
dec
or
pop
out
test
ss
fimull
lods
mov
ja
inc
mov
push
out
push
and
arpl
xor
jecxz
out
scas
fistps
sarb
xchg
sub
in
add
mov
fadds
lods
leave
bound
xchg
loop
add
inc
lds
mov
cmp
movl
rclb
push
sub
mov
and
xchg
clc
jae
aaa
adc
fwait
pop
mov
ja
sub
push
jmp
aaa
sbb
cli
jnp
cmp
daa
or
push
cmpsl
int
mov
push
aaa
por
dec
shrb
loopne
add
inc
or
popf
shrl
add
dec
icebp
lret
push
xor
movsb
mov
js
insb
fcoms
sub
pushl
mov
adc
js
dec
call
adc
mov
xor
cld
jbe
fldl2t
fistpl
xor
loope
test
jp
hlt
std
imul
xchg
cmpsl
mov
add
and
cmc
ljmp
and
xchg
or
push
cmpsl
dec
leave
push
rcrl
clc
adc
lea
pop
loope
push
dec
outsb
dec
into
inc
incl
pop
imul
dec
jmp
mov
pushf
jb
or
bound
or
sahf
nop
rcl
pushf
push
adc
stos
cli
clc
les
dec
shlb
push
lods
jmp
sbb
ret
xchg
ja
data16
lds
into
add
and
jl
cli
mov
pop
iret
jo
cmp
mov
hlt
jbe
inc
pop
es
js
subl
fistpl
cmpsb
and
xor
sbbl
push
inc
cmp
jle
sbb
inc
aaa
add
fcmovnb
pusha
ljmp
in
sub
xorb
addr16
scas
dec
and
cmpsl
aam
lods
jle
add
stc
aaa
pop
add
test
mov
cmpsl
jno
fidivl
dec
sbb
adc
int
aas
shlb
mov
ljmp
mov
fldl
in
inc
fstps
daa
jl
dec
or
push
dec
mov
inc
stos
adc
push
mov
inc
imul
jno
dec
sbb
addb
nopl
sub
loop,pt
subb
cs
outsb
jns
jmp
sub
loope
jno
fistps
mov
notl
xchg
xor
mov
inc
stos
pop
cmp
sarl
mov
cmp
push
cmpsb
pop
outsl
insb
mov
mov
sbb
or
xor
loope
push
outsl
xlat
les
pop
inc
std
shrl
std
pop
mov
test
outsl
xlat
cmp
xchg
ret
add
jae
cli
imul
shrl
sarl
insb
fidivrs
sbb
test
sarb
call
popa
adc
faddl
dec
mov
pop
rcrb
xor
daa
idiv
repnz
and
sbb
pop
sarb
dec
and
pop
or
mov
lcall
cmp
inc
sub
xchg
int
mov
dec
xchg
mov
lahf
jb
xor
negb
jmp
lods
je
icebp
icebp
lock
adcb
xchg
xchg
not
addr16
scas
in
sbb
lds
outsb
or
add
rolb
jns
aaa
push
fisubs
jge
sbb
push
xor
dec
jmp
or
arpl
stos
je
pop
into
in
aaa
mov
lods
inc
out
jns
shll
push
je
xor
cld
lods
or
adc
icebp
daa
std
es
push
push
jge
arpl
in
push
sbb
imul
sub
popa
fs
push
mov
repnz
push
or
lods
mov
mov
sbb
rcll
into
mov
test
leave
les
not
mov
fstp
outsl
sahf
imul
fcoms
ds
lea
mov
sbb
dec
insl
mov
imul
dec
out
add
stos
iret
fdivrs
nop
pop
jmpw
rorb
daa
adc
xchg
pop
sbb
cmp
movsl
xor
or
pop
jbe
jb
jns
fxch
adc
mov
and
fcmovnbe
jb
mov
add
mov
pop
inc
and
add
jecxz
add
mov
fcoms
inc
sti
testb
cmpsl
sti
push
outsl
je
mov
pop
gs
fsubl
sbb
pop
cmp
pop
adc
lcall
sub
xor
push
cmp
outsb
and
cwtl
shrl
inc
push
inc
dec
inc
pop
and
add
in
mov
in
adcb
xchg
imul
shll
mov
and
int3
xor
xchg
imul
sbb
mov
push
lods
sahf
mov
mov
dec
push
push
xor
in
stos
mov
mov
sbb
gs
xor
sbb
or
fidivs
stc
push
jl
stos
popf
sbb
mov
fistps
fs
jmp
push
gs
popa
push
push
lea
sbb
shr
ret
jecxz
aas
add
jmp
push
inc
aas
mov
inc
and
aaa
jmp
inc
ljmp
je
cmc
inc
push
add
push
aam
jb
cmp
lahf
pop
cmp
cmpsl
dec
pop
fwait
push
insb
add
loop
popf
and
fsubrs
xor
xchg
dec
push
cwtl
push
rcr
adc
imul
add
cmp
aas
dec
pop
ret
ss
dec
xor
lret
imul
mov
adc
das
cmp
test
cmc
sti
out
jnp
cmp
sti
lds
pop
and
roll
or
xchg
out
mov
jge
jp
iret
jno
mov
loopne
mov
lea
aas
sbb
dec
adc
sbbb
lahf
mov
iret
aad
cltd
mov
aad
sub
mov
xchg
push
jl
rolb
sub
in
lcall
icebp
pop
shlb
and
mov
or
fwait
out
lret
mov
sub
mov
push
bound
mov
xor
sbb
rcll
in
mov
push
repz
xorb
lods
add
ret
test
push
jbe
orb
jge
jbe
bound
cltd
and
aas
jne
and
inc
rcr
ret
add
sub
xor
pop
jge
gs
stc
dec
sub
rorl
pop
jl
popa
pushf
or
jb
mov
mov
push
or
xor
shll
mov
lret
mov
cmp
rcll
mov
inc
pop
xchg
cwtl
mov
test
stos
ljmp
adc
push
mov
inc
push
push
pop
popa
es
and
pop
mov
add
and
pop
mov
shrl
add
icebp
out
cmp
clc
ds
sbb
add
lock
int
mov
sarl
mov
jno
and
fs
xchg
and
jp
pop
inc
push
outsl
dec
pop
dec
inc
fcmovne
outsb
adc
addl
push
shr
out
lret
push
sub
mov
cmpsl
mov
inc
insb
in
mov
cwtl
adc
dec
adc
xor
fldl
lret
mov
pop
scas
aam
jb
xchg
test
jecxz
lods
adc
jns
cld
add
out
stos
jp
jg
xor
aad
pop
mov
dec
push
inc
popa
inc
sbb
out
decl
or
call
jge
xor
inc
and
mov
scas
ljmp
cld
mov
and
or
mov
and
outsl
inc
mov
dec
lock
jge
dec
add
inc
add
pop
cld
call
pop
shll
adc
fs
cmpl
jo
scas
dec
mov
push
pop
add
inc
out
jns
mov
es
dec
add
or
mov
andb
sub
and
mov
xor
cmp
sahf
jmp
sub
jmp
sti
dec
lods
and
icebp
in
jge
rcll
push
pop
sbb
xorl
popf
xor
in
sbb
mov
jbe
mov
mov
subb
inc
cmpsb
adc
imul
cmovne
pop
xchg
and
enter
test
repz
loope
popa
imul
jp
adc
jno
enter
mov
sbb
lds
fs
fwait
add
loopne
fistpll
shll
sbb
mov
inc
sarl
add
xchg
mov
stos
movsl
dec
ret
repnz
mov
dec
icebp
loope
andl
xchg
xlat
adc
inc
jne
nop
iret
shll
ret
mov
ror
xchg
icebp
xorb
scas
and
clc
mov
sub
stos
pop
fwait
add
cmpsb
ds
push
xchg
outsl
sub
dec
mov
loope
xchg
or
mov
popf
stos
fsubrs
adc
jno
sbb
xchg
std
jnp
lods
imul
jbe
add
aad
xchg
dec
jo
sub
shr
dec
cmp
push
int
or
fcomps
fwait
jne,pt
dec
jmp
call
sbb
jl
push
adc
loope
repnz
push
ljmp
adc
addr16
icebp
inc
fbld
mov
mov
xor
mov
aad
push
scas
fwait
scas
cmp
stos
icebp
or
push
mov
dec
adc
or
inc
mov
pop
push
dec
mov
jge
sub
outsl
call
js
jnp
jo
inc
xchg
push
xchg
repz
pop
mov
scas
popf
data16
lret
and
and
rorb
xchg
and
mov
movsb
mov
pop
xchg
ja
push
imul
mov
xchg
mov
cmp
add
imul
mov
iret
xor
sub
rorb
in
push
loop
xchg
addr16
mov
sub
pop
add
rolb
xchg
xor
add
das
out
mov
mov
sbb
mov
mov
paddd
lahf
mov
xchg
insl
dec
dec
roll
inc
addr16
adc
mov
mov
sbb
pop
mov
jo
cld
outsb
outsl
sbb
mov
divl
stc
dec
pop
lods
loope
xchg
andl
stos
jb
int
jb
lods
or
mov
xor
jp
sbb
int
nop
jecxz
sub
std
aam
pop
and
mov
pushf
push
jno
dec
push
sarl
or
popf
xchg
loopne
push
add
dec
add
shl
mov
in
add
mov
aas
mov
pop
in
cld
mov
les
out
jge
out
dec
or
test
push
out
les
jno
lds
push
insl
ret
mov
cwtl
sbb
push
ffree
nop
xor
push
aas
imul
loop
popf
hlt
popa
mov
decb
stc
div
sub
and
add
fdivrs
sti
test
ret
xchg
das
mov
and
sbb
adc
push
loop
mov
shlb
addr16
and
mov
xchg
shrl
mov
stos
cmp
stos
popa
out
icebp
les
ret
push
icebp
iret
push
jae
mov
in
rcl
clc
ljmp
xchg
ffreep
cmc
sub
cmp
mov
mov
pop
cltd
sub
aad
xlat
stos
ret
adc
xchg
leave
push
jno
dec
add
or
lods
push
fdivl
mov
cs
pop
pop
mov
jo
dec
inc
xor
fistl
cltd
xchg
lcall
xchg
mov
fsts
mov
jle
das
jbe
enter
lahf
xlat
mov
push
repnz
and
sbb
push
test
jg
scas
dec
sbb
std
mov
adc
movsb
arpl
fmull
or
pop
jns
jae
in
cmpsb
add
add
imul
pop
mov
aaa
inc
aam
mov
adc
push
es
mov
or
bound
daa
adc
dec
das
sti
es
push
cmp
mov
lahf
mov
xchg
or
sbb
jg
test
adc
call
and
xor
mov
pop
cwtl
cmp
mov
adc
push
or
loope
push
xor
inc
addr16
loop
std
xor
pop
add
daa
sub
lea
jns
popa
repz
ja
test
adc
pop
adcb
lahf
cmp
scas
push
test
sub
xchg
aaa
push
xchg
xor
dec
mov
imul
mov
mov
nop
shll
cmpsb
lahf
inc
or
lock
subb
mov
jmp
push
shll
nop
push
push
jne
lea
add
dec
out
fimull
push
mov
js
inc
xchg
push
stos
fisttpl
jle
iret
out
lcall
cmpsb
cmpsl
cmp
cmpsb
bound
sarb
ss
mov
les
pop
imul
movb
ficomps
and
mov
adc
lret
cwtl
inc
jp
xchg
sbb
lcall
mov
cld
sti
push
lods
jns
inc
popa
int
inc
xlat
movsb
test
xchg
pop
mov
sub
into
push
out
sub
pop
jecxz
mov
push
subl
ret
mov
jno
stos
or
mov
cli
mov
or
pusha
sub
xchg
movsb
xchg
push
psrad
or
xor
mov
add
pop
into
daa
pop
ret
jnp
xlat
mov
rcrl
sbb
in
pushf
xor
je
fstp
decl
and
adcb
pop
mov
scas
sbb
addr16
sub
push
fsubp
sub
repz
cmpsb
sub
push
cmp
aaa
add
xor
pop
scas
out
leave
test
lret
lahf
fbld
popf
jmp
jb
mov
loope,pt
inc
dec
in
imul
shll
mov
mov
int
popa
dec
in
mov
sahf
cltd
clc
xor
pusha
xchg
mov
xor
pop
fisttpll
popf
cmp
ja
adc
fcomip
mov
add
mov
mov
or
mov
jmp
cmp
ret
adc
ds
mov
arpl
loopne
adc
out
fadd
adc
out
adc
sbb
rol
xorl
jae
push
xor
test
sub
inc
sbb
jl
cmp
or
cmp
sahf
add
pop
insl
add
and
aaa
lcall
mov
jae
punpckhwd
xor
mov
lcall
in
xchg
sbb
mov
jle
sbb
pop
into
fdivrs
rcrb
rcl
mov
stos
add
mov
lahf
idivb
jg
add
push
cmp
clc
inc
out
psubusw
gs
fimuls
inc
add
mov
xchg
push
or
shll
jle
inc
inc
and
sti
cmpsl
jg
fisttpll
pop
dec
lret
mov
pop
mov
jnp
mov
xchg
pop
out
mov
cmp
sbb
xchg
xor
je
pop
ds
jge
jge
ret
ss
cmp
push
dec
pop
mov
pop
push
rolb
inc
cli
xchg
in
adc
nop
fsubp
inc
adc
and
stos
and
nop
sbb
jno
scas
orl
xchg
ljmp
insl
cmp
out
test
test
pop
shlb
fldt
test
add
ret
ret
jbe
lret
push
adcb
mov
pop
imul
jo
mov
in
push
lahf
aam
loope
lahf
out
add
or
cmp
mov
cwtl
push
inc
icebp
push
faddl
test
pop
mov
mov
in
test
mov
xor
xchg
scas
roll
mov
xchg
fs
jge
and
mov
sahf
imul
mov
jbe
cwtl
add
add
fucomp
gs
insb
mov
mov
es
fistpll
das
and
jb
pop
add
fsubrl
shrl
movsl
mov
sahf
data16
jne
int
inc
add
mov
sahf
loope
out
and
rcrb
jmp
sub
xor
dec
or
in
jns
jae
cltd
adc
subb
or
fdivrl
mov
lds
adc
pop
sti
rolb
or
mov
mov
lds
push
and
insb
dec
xchg
xor
leave
sub
lcall
and
push
out
mov
cwtl
in
pop
iret
mov
mov
rolb
sbb
cmp
xor
cmpb
bound
adc
ja
or
sbb
jae
movsb
ljmp
push
ret
jo
ljmp
adc
fsts
out
jg
add
ja
fdivs
pop
pusha
push
out
inc
sub
mov
sbb
push
xlat
mov
dec
dec
mov
int
int3
stc
clc
xchg
dec
push
jns
loop
je
inc
subb
dec
jae
push
into
pop
out
jnp
push
gs
int3
pop
or
xchg
ja
inc
sub
pop
scas
arpl
push
fadds
pushf
and
or
call
icebp
in
xor
jns
sbb
ret
mov
add
cmp
lods
sbb
jle
pop
cmp
xchg
mov
sub
hlt
test
push
mov
insb
stc
cmp
dec
loope
or
mov
or
movsl
sub
ficomps
pop
cmp
xchg
repz
fnstsw
es
cmp
mov
add
nop
mov
fcompl
cltd
lea
add
adc
cmc
sbbl
jp
das
adc
loop
sub
lahf
arpl
iret
add
mov
dec
movsl
or
pusha
shrb
push
dec
xchg
push
pusha
cmp
adc
clc
fadds
mov
movsl
out
or
dec
xchg
test
mov
mov
test
push
jecxz
out
outsl
push
out
and
mov
jmp
and
xor
xchg
std
loop
shlb
jmp
and
adc
test
fbld
pop
popf
push
clc
xchg
icebp
repnz
dec
mov
cs
fnstenv
out
pop
xchg
lods
inc
cmp
pop
repz
nop
dec
cld
rclb
mov
bound
ss
scas
push
add
daa
test
cs
add
sub
notb
inc
or
push
test
pop
xor
adc
or
xchg
xchg
repz
dec
out
sub
and
leave
outsl
jge
repz
mov
out
inc
sbb
hlt
xchg
xor
ret
cmp
fiaddl
mov
stos
mov
inc
jo
jnp
div
jb
shrb
mov
outsb
mov
xchg
mov
dec
xchg
cmp
push
mov
je
pop
out
cmp
mov
ja
sub
xor
xchg
mov
je
or
or
sbb
or
xchg
enter
pop
xchg
sbb
imul
into
ja
mov
mov
out
out
out
add
cmp
pop
lds
cmpsl
divl
and
mov
lcall
add
mov
lods
sbb
add
jae
insb
icebp
lds
iret
nop
sub
pop
pop
lock
dec
and
es
call
or
mov
adc
repnz
gs
sub
mov
pusha
stc
jns
lods
lods
loop
xlat
insb
pop
lods
inc
xorl
xor
add
xor
fcomip
addr16
cmp
nop
sub
fistps
mov
fdivl
dec
out
jmp
dec
mov
mov
pop
xor
mov
sbb
in
push
hlt
icebp
xchg
mov
jbe
sahf
sub
fistpll
mov
sbb
aas
sbb
jg
mov
test
enter
push
mov
xchg
push
and
dec
sbb
cli
scas
das
pop
push
cmp
mov
add
and
mov
loop
popa
in
mov
mov
roll
enter
test
movsl
cmp
xchg
lcall
lcall
push
out
icebp
movsl
mov
xchg
mov
dec
out
stos
stos
and
cmp
lock
xor
out
mov
adc
ljmp
jbe
bswap
mov
lahf
addb
ret
lcall
push
imul
mov
jnp
adc
xor
inc
jge
mul
push
aad
sub
cli
adc
arpl
divb
cltd
sub
data16
addw
jne
mov
sub
mov
cmp
jmp
lret
scas
xlat
test
mov
lahf
in
xorl
push
loop
dec
js
mov
shl
mov
mov
jg
scas
jnp
cmp
fcompl
inc
setge
push
sub
out
push
lods
outsb
add
mov
inc
shlb
dec
ret
lret
mov
rorb
ret
pop
cltd
imul
fucomp
mov
and
test
gs
mov
xor
dec
ljmp
sbb
mov
and
rclb
fists
cmc
xchg
jg
jl
sub
lcall
xor
lret
fldcw
test
mov
inc
loopne
inc
xchg
rcrl
incb
rol
xchg
sbbb
bnd
repnz
aaa
xor
sub
mov
sti
test
adc
inc
sti
mov
add
cli
jb
mov
sbb
dec
clc
popa
test
add
cmp
pop
nop
ss
icebp
xor
aaa
pop
mov
dec
cmp
xor
mov
das
cmpsl
pop
sahf
inc
sbb
inc
add
push
xor
mov
push
inc
xchg
cmp
test
fwait
jno
call
add
adc
icebp
xchg
sub
loope
jne
inc
pop
inc
test
addr16
and
movsb
aaa
mov
push
fisubrl
sub
repnz
mov
sarl
outsb
adc
fsubl
mov
pop
pop
jge
imul
adc
in
sub
int
test
in
mov
stc
fnstenv
bnd
js
addb
mov
insb
dec
pop
xchg
xor
movsl
fcoms
xchg
adc
inc
xchg
push
popa
outsb
popf
sub
aaa
mov
lahf
cs
shll
pop
ror
jg
int
cmovg
mov
or
sub
mov
jo
outsb
ds
dec
inc
sub
push
xor
imul
std
in
inc
sbb
xchg
repnz
lahf
sbb
sbb
getsec
leave
mov
div
adc
mov
pop
jmp
repnz
lds
xchg
loopne
cmp
xchg
jmp
cmp
jbe
enter
sub
mov
shl
jbe
iret
push
inc
fldz
adc
orb
loopne
cwtl
repnz
loope
fists
cmpsl
xchg
dec
inc
cs
jmp
pop
insb
lds
in
push
mov
ja
stos
mov
mov
push
shlb
xchg
and
mov
in
or
pushl
pmaxsw
adc
aam
inc
jl
mov
mov
imul
jl
call
mov
and
or
nop
mov
xchg
dec
push
in
ja
popl
add
fsubrs
or
pop
push
xchg
in
sbb
sub
xchg
cs
gs
imul
sbb
push
aam
fistpll
sbb
shr
nop
mov
jbe
ds
mov
sbb
fdivrs
push
mov
leave
ja
and
sub
test
mov
sbb
lahf
push
mov
add
lock
fsub
aaa
cli
outsb
loope
jnp
sub
es
pop
int3
push
pop
clc
daa
adcb
out
or
and
fcompl
outsb
adc
pop
ljmp
sarl
cmp
mov
xchg
push
inc
call
pop
divb
cld
cld
cmp
inc
jle
jns
push
or
jg
and
xchg
jbe
dec
rorl
mov
out
ret
scas
xor
push
js
xlat
dec
mov
mov
lcall
mov
lcall
inc
mov
cs
pop
fisttpl
aad
aas
sbb
ret
std
xor
div
add
pop
int
xchg
mov
loop
and
jl
sbb
adc
pusha
sbb
cmp
cs
xor
call
je
jno
cld
pop
int3
dec
or
push
mov
movsb
mov
leave
inc
roll
jne
mov
jae
jg
jne
lahf
cmp
adc
xor
add
sbb
ja
inc
xchg
and
and
mov
jno
dec
popa
sbbb
shrb
loop
mov
stos
std
mov
pop
push
sbb
cmpsl
pop
add
mov
dec
mov
jne
daa
test
outsl
sti
test
pop
cltd
fbstp
xchg
and
mov
fisubrl
jns
mov
pcmpeqw
cli
mov
nop
sub
cmp
dec
adc
jg
adc
xor
mov
xor
mov
imul
pusha
mov
push
aad
push
push
popa
cmp
mov
mov
shl
push
inc
push
inc
sbb
mov
fistpll
push
movsl
test
jp
mov
xor
out
repnz
xchg
and
imul
je
jmp
ret
pusha
mov
add
and
push
test
jmp
ficoms
cmp
int3
popa
orb
jmp
and
insl
loopne
addl
leave
xchg
mov
mov
jnp
jge
test
cmp
mov
sub
inc
dec
cmc
xchg
sbb
inc
pop
mov
jne
push
add
ret
add
xchg
popf
aad
roll
mov
out
xor
sti
mov
or
push
shl
pop
xor
sub
inc
inc
mov
pop
mov
dec
addb
dec
stc
sub
and
dec
push
fisubrl
stos
push
insl
cmpsl
fsubrl
addr16
jb
loop
mov
insl
mov
cmp
jns
insb
jle
sub
addr16
push
lret
inc
inc
jne
ret
ljmp
xlat
jecxz
sbb
xchg
mov
jo
xor
mov
jmp
and
mov
in
inc
imul
mov
jnp
inc
jg
pop
sub
fisubrs
lret
pop
inc
jge
xor
and
xorl
pop
xor
loopne
jmp
and
rcr
scas
cmp
icebp
xchg
outsb
adc
lcall
stos
icebp
inc
out
add
push
mov
stc
daa
cmovp
inc
sbb
shll
jb
sub
jge
icebp
in
xchg
dec
cli
jbe
stos
inc
inc
rorl
xchg
jmp
push
stos
jmp
jae
sub
add
icebp
subb
pop
inc
lods
jbe
sbb
jbe
pusha
leave
lds
xchg
dec
sbb
pusha
icebp
jae
paddusw
mov
loopne
adc
test
mov
adc
mov
insl
mov
mov
xchg
xor
push
popa
jp
pop
push
mov
shrb
shll
adc
je
dec
cmp
pop
jge
xchg
and
add
scas
sbb
or
cmpsl
jmp
std
fstpl
jb
jle
cmovo
cmpsl
ljmp
es
jne
pop
je
lret
and
cwtl
pop
dec
jge
data16
in
push
bound
mov
aad
mov
and
inc
cmp
sub
loope
dec
or
push
int3
sbb
inc
add
xor
jno
xacquire
pop
nop
or
mov
xchg
adc
mov
dec
fldcw
sub
or
leave
or
adc
fsubs
shll
push
dec
jne
inc
addb
mov
mov
xor
pop
cld
jae
insb
inc
xor
mov
int
bound
subl
std
lret
cmpsl
in
sub
scas
test
adc
aam
inc
jmp
lret
shll
pop
cmp
mov
sbb
hlt
xor
lret
and
test
and
xlat
jg
pop
xchg
xor
loop
dec
int
push
ds
out
bound
orl
dec
sarb
add
rorl
into
pop
sub
shrl
sub
rcrl
xor
loopne
ja
ds
dec
dec
xchg
cmp
pop
test
sbb
ja
push
sub
mov
popa
aas
in
js
adc
or
pushl
sahf
jno
cltd
rcrb
cmp
sbb
dec
xchg
xor
fisubrl
shrl
xor
out
cltd
iret
idivb
and
mov
fists
out
mov
pop
inc
inc
lahf
in
sbb
sbb
pop
in
mov
push
imul
outsb
repnz
adc
jb
fmull
out
add
arpl
xlat
pop
pop
insb
daa
jbe
hlt
sbb
ret
pop
xlat
dec
xor
jbe
push
lods
xor
jb
fimull
jmp
jne
js
sub
push
xor
data16
mov
outsb
icebp
decb
fadds
sbb
sbb
gs
enter
mov
scas
mov
in
pop
add
cli
clc
or
lods
ja
pop
xchg
jnp
xchg
xorl
leave
jno
xchg
push
dec
std
sub
fcomps
das
ds
xchg
xlat
rorl
xchg
dec
mov
sar
nop
adc
mov
movsb
in
sbb
int3
xor
mov
stos
stc
nop
dec
sar
xor
dec
out
mov
sbb
and
add
aas
icebp
das
mov
aad
jo
mov
add
add
mov
stos
push
flds
jb
decb
and
mov
lret
scas
pop
fwait
xor
arpl
jg
loop
pop
js
bound
lock
mov
in
test
xchg
les
sub
or
mov
movsb
dec
insb
mov
sbb
add
mov
nop
cld
jl
out
sti
inc
test
pop
adc
cmpsl
test
cmpsl
dec
mov
sub
jge
push
call
stos
mov
push
loopne
lahf
inc
data16
cmp
and
stos
xchg
fisttpll
mov
xor
xchg
das
pusha
in
int
shlb
icebp
iret
pop
pop
push
call
sbb
jecxz
mov
and
es
into
add
fldt
or
and
movsb
dec
pop
xchg
sub
or
dec
adc
cmpb
pushf
pop
push
sub
gs
leave
incb
mov
std
mul
mov
pop
filds
js
sbb
into
push
inc
jnp
fnsave
das
movl
and
sbb
sbb
push
mov
sub
dec
sub
shl
fbld
iret
jg
jmp
popa
push
pushf
int3
dec
dec
sahf
jae
jns
into
aas
add
cmp
dec
sbb
mov
lea
xchg
add
popf
cmc
and
das
dec
cmp
lret
lcall
adc
mov
mov
scas
leave
lcall
icebp
mov
fwait
lcall
dec
cmp
fwait
orl
daa
out
stos
aaa
dec
out
xor
pushf
pop
and
std
xor
cmp
xor
enter
mov
mov
adc
mov
push
jo
mov
pop
movlps
mov
push
loopne
jl
mov
xchg
aaa
les
popf
adc
test
mov
aaa
mov
mov
mov
or
data16
mov
cmp
add
and
leave
shll
loop
sub
es
iret
cmovge
and
xor
mov
call
mov
imul
inc
cmp
stos
mov
in
add
ret
push
xchg
das
pop
rol
jp
xor
inc
and
out
xor
fyl2xp1
mov
inc
push
out
add
push
pop
and
call
in
shl
xor
xor
jg
cmpsb
inc
fstl
out
sub
fs
int
pop
or
into
inc
repz
ljmp
mov
add
xchg
call
sbb
cli
mov
sub
lock
rcrl
pop
cmpsb
sahf
cwtl
rcrb
xor
icebp
jecxz
lods
repnz
jecxz
push
mov
jnp
pop
jns
add
in
xor
push
loopne
enter
ljmp
push
popa
lahf
cmp
pop
fadds
mov
pusha
pusha
sbb
xchg
bound
sbb
push
adc
scas
add
or
dec
mov
mov
push
std
pop
daa
addb
pop
stos
pop
dec
shl
push
xor
stc
and
or
xchg
sbbb
in
outsl
dec
insb
xchg
fnsave
xchg
shrb
addr16
frstor
call
fs
jp
sbbb
push
mov
scas
xchg
mov
pop
out
gs
inc
mov
cmp
pop
fdivrs
xchg
lods
inc
das
pop
mov
fldl
loope
cmp
mov
and
icebp
sbb
xlat
outsl
push
push
imul
sti
into
add
mov
lods
jae
out
xor
dec
lret
push
es
mov
lcall
jecxz
test
sub
inc
in
mov
cltd
notl
repz
pop
js
pusha
adc
lret
out
mov
pop
and
add
out
jge
loope
jo
xchg
into
fwait
hlt
test
mov
mov
push
andb
jg
movlps
sbb
jns
pop
xchg
pop
movl
push
cmc
sub
push
into
pop
add
or
push
or
xor
pop
dec
adc
fwait
pop
pushf
adc
add
sub
loopne
sbb
test
loopne
pop
negl
add
pop
pop
arpl
xlat
jb
outsl
dec
imul
ud0
cmp
xlat
jae
fldcw
sar
xchg
cmpsb
sbb
aas
shl
push
push
push
sbb
dec
mov
lods
les
cmp
subl
mov
sub
push
nop
addb
push
jg
adc
mov
bound
mov
sbb
leave
shll
push
pop
push
mov
addr16
mov
push
ret
pop
pop
and
push
or
add
add
lret
cltd
je
lcall
and
rolb
add
sub
js
cmp
in
mov
mov
xchg
jae
and
test
dec
loopne
push
cmp
mov
push
xor
push
pop
inc
mov
cmp
mov
mov
jg
mov
adc
ret
mov
and
outsl
lods
and
idivb
sub
inc
aaa
push
mov
xlat
ret
ret
push
loopne
xchg
popf
outsl
jnp
sbb
xlat
adc
and
testb
arpl
and
push
popa
inc
fstl
out
mov
jmp
clc
hlt
mov
pop
xchg
cmpsl
push
fisttpl
mov
lods
fs
rolb
pushf
sbb
push
xchg
jecxz
popa
iret
mov
insl
cmp
sub
inc
les
inc
mov
mov
sbb
jbe
pop
jg
shlb
adc
rorl
sti
test
mov
jecxz
in
mov
sbb
or
loope
xchg
inc
arpl
push
popa
hlt
cld
bnd
shlb
jbe
inc
cmpl
insb
dec
pop
cmpsb
mov
fwait
mov
xchg
jmp
xlat
leave
mov
mov
jb
or
ja
subb
cmc
out
sahf
xchg
or
pop
pop
popa
dec
loope
sub
xor
dec
sub
incb
das
push
cmp
xchg
das
inc
dec
pop
cltd
dec
enter
cmp
and
mov
inc
scas
jns
mov
sbb
nop
fcomps
push
add
sahf
cmpsb
mov
out
lock
data16
or
push
and
mov
or
cmpl
mov
lcall
loope
std
xchg
nop
jo
adc
jbe
add
aad
jo
js
push
or
mov
jmp
addr16
jle
sbb
mov
xchg
jae
xchg
mov
jg
rcl
jg
sbb
or
test
push
pop
pop
int3
inc
mov
ret
jne
pop
cmp
adc
iret
outsl
or
pop
push
pusha
or
pop
xor
add
inc
push
pop
push
test
pop
cli
fnsave
xchg
test
jg
mov
add
mov
push
adc
and
or
das
pushf
add
sti
jle
dec
leave
inc
xchg
iret
xchg
outsl
test
jae
aad
movsb
stc
stc
mov
dec
cltd
xchg
mov
cmpsb
adc
cld
or
repnz
jb
fldenv
and
jb
push
gs
push
jae
clc
pop
lock
pushf
iret
sub
pop
mov
movsb
or
push
inc
pop
dec
mov
xor
xchg
xchg
cmpsb
and
and
int
loop
mov
ljmp
test
cmpsb
jbe
adc
sbb
fistpl
xor
cmpsb
mov
test
lods
test
jae
setle
ja
mov
sar
inc
pop
push
dec
dec
fldl
sub
leave
xchg
scas
adc
cs
scas
lret
fstp
jg
adc
stos
ficoml
bound
jbe
rolb
idivl
sbb
movsl
mov
jno
cmpsl
adc
sbb
jg
lret
pop
cld
fdiv
mov
cltd
add
xor
scas
adc
jg
into
call
sahf
loopne
sub
sub
sbb
xchg
jb
dec
bound
inc
cwtl
mov
fstpl
add
cld
pop
incb
add
pop
push
mov
inc
jp
movb
repz
or
push
cmp
mov
cs
inc
pop
repnz
leave
add
aaa
ja
inc
xchg
cli
sub
bound
and
imul
lods
mov
test
sar
addr16
xchg
out
jno
mov
outsl
in
out
pop
ss
pop
jae
cld
mov
mov
arpl
sar
pop
xor
fs
int
insb
mov
inc
loop
mov
nop
test
inc
loope
icebp
jns
int3
scas
and
repnz
shrl
cmpsl
fwait
sbb
adc
mul
enter
push
pop
outsl
mov
jbe
out
in
inc
sbb
inc
mov
inc
xor
rolb
or
jo
popa
lods
fadds
cmp
call
out
sbb
xchg
cmc
in
jne
aaa
cmp
pop
add
dec
lock
xor
pop
mov
mov
inc
adc
mov
stos
scas
push
mov
cld
aas
xchg
fisubrs
push
jo
mov
insl
test
xlat
push
loope
ret
rcrb
filds
addr16
movsl
mov
mov
test
loop
loope,pn
dec
xchg
mov
mov
push
xlat
cmpl
loop
leave
mov
cmpsb
je
jns
jns
outsb
decl
inc
not
pop
dec
shl
in
jb
scas
and
push
mov
adc
lods
dec
sub
outsb
and
lret
xchg
mov
lods
pusha
and
sbb
stos
mulb
test
adc
xchg
cld
and
cwtl
xchg
cmp
call
aad
das
iret
adc
add
shr
xchg
mov
dec
xchg
xor
cs
fdivrs
mov
lcall
dec
out
adc
jb
or
jg
testb
and
jmp
xorb
lret
fstp
loop
mov
repz
repnz
lods
inc
cld
test
push
aaa
dec
hlt
push
das
adc
nop
aas
jl
ret
aad
outsb
push
and
daa
ds
cmp
push
insb
dec
cmp
repz
jbe
push
movsb
or
jl
cli
popf
adc
ds
in
lahf
mov
stos
hlt
add
push
arpl
inc
push
enter
jmp
fmull
xchg
dec
data16
movsl
pop
jns
js
clc
pusha
add
fwait
rcrb
aad
andb
arpl
xchg
in
ljmp
out
sub
and
rcrl
aaa
cs
dec
leave
fldt
out
clc
push
xor
mov
dec
xchg
cmpsb
cmpsl
rclb
pop
sub
sarb
mov
adc
test
sbbb
jno
jo
inc
fadds
lret
sub
sub
pop
sbb
fbstp
je
inc
insb
add
or
cmp
dec
cmp
cmp
insl
out
push
sti
popf
and
adc
mov
dec
es
or
ret
sub
sbb
shl
js
lods
les
cmp
mov
jg
pop
pop
adc
dec
pop
pop
add
hlt
mov
aaa
mov
jge
sub
push
repz
idivb
fs
push
shll
loope
and
nop
and
scas
ror
arpl
push
xchg
lret
fisubs
loopne
mov
fisubs
nop
push
sti
push
inc
fistl
xchg
das
sub
xchg
adc
jno
jl
dec
dec
aad
inc
shlb
xchg
leave
xchg
adc
jp
or
lock
test
popf
jnp
sarl
or
add
jne
mov
in
daa
mov
mov
fistpll
insb
addr16
int3
rcrl
out
dec
jnp
out
mov
divl
xchg
jb
mov
mov
sbbl
inc
movsl
out
adc
mov
jnp
movsl
movsb
push
sub
cmp
jg
push
adc
mov
inc
test
je
adc
dec
stos
jae
jae
imul
lods
cmp
adc
rcr
sub
lahf
xor
pop
in
sti
ja
push
cwtl
cmpsb
outsb
call
xor
xor
jb
ja
cs
push
icebp
cwtl
int
jno
inc
sub
arpl
mov
push
pop
enter
inc
rolb
adc
push
jno
jecxz
ror
push
sub
in
xchg
jg
push
pusha
xor
shlb
mov
shlb
mov
adc
movsb
rorl
inc
adc
imul
lock
lock
mov
dec
iret
sbb
inc
adc
test
add
insb
fldl
cmp
xor
inc
mov
ret
lea
ja
xchg
cs
pop
xor
outsl
clc
pop
sbb
dec
mov
cmp
mov
jle
fincstp
mov
dec
lods
jg
xchg
xchg
sbb
pop
or
cmpsl
das
mov
cwtl
shlb
addr16
ror
xor
call
xchg
mov
xor
cltd
add
xlat
mov
add
dec
adc
ljmp
jno
and
pop
int
adc
inc
and
pop
cmpsl
in
pop
das
adc
and
fs
fdivrl
cli
add
outsb
sub
outsb
les
sub
xchg
dec
fcmovnu
es
out
test
sbb
sub
sub
fnstsw
fs
cmpsb
or
mov
sub
gs
icebp
mov
sbb
jne
lods
stc
imul
add
pusha
sbb
mov
pop
inc
cmp
pop
ficoms
out
das
mov
jne
fisttps
cmp
lock
pop
xlat
push
cwtl
dec
sub
jbe
adc
pop
stos
loop
fcoms
hlt
cmp
push
mov
jne
push
scas
xchg
imul
add
call
out
mov
cmpsb
push
dec
and
es
and
pusha
xorl
lods
xchg
ss
mov
imul
test
jecxz
ret
pop
ret
add
inc
inc
dec
push
adc
test
sbb
push
adc
movsl
in
pop
dec
test
out
jo
xchg
outsl
ret
and
sbb
sti
testb
fmull
mov
add
filds
pop
adc
sub
fwait
dec
movsl
lods
mov
xor
sti
push
and
sub
std
add
ds
pop
je
jo
insb
or
jae
call
mov
push
jmp
xchg
or
ret
test
aad
mov
push
pop
call
call
pop
call
sbb
cwtl
lret
test
cmp
int3
int3
sub
test
mov
lods
fisubrs
lret
cmp
xchg
push
pop
ror
push
scas
xchg
int3
dec
out
mov
xchg
rcrb
daa
insb
rorb
mov
jge
lock
pushf
mov
pop
or
popa
clc
mov
addr16
inc
mov
jne
mov
rorl
mov
push
push
jb
xchg
out
cwtl
dec
jg
mov
push
stos
mov
pop
dec
mov
sub
lahf
mov
movsb
push
push
jge
lock
push
push
jbe
pop
das
mov
cmc
mov
or
icebp
mov
mov
dec
testl
mov
jge
adc
push
inc
stc
sbb
fstpt
int
std
inc
sbb
leave
mov
dec
dec
sti
shrl
inc
adc
and
out
cmp
jo
nop
lock
and
xchg
xchg
add
shlb
nop
rcrl
pop
inc
dec
icebp
out
mov
sbb
push
aam
jmp
pmaxsw
je
sub
push
xchg
imul
lret
cmp
pop
mov
fcomps
xchg
loope
xchg
je
ret
and
push
mov
inc
jp
loopne
icebp
gs
mov
xchg
pop
lds
mov
cmp
sub
adc
xchg
sbb
shll
jae
ret
das
test
push
mov
sbb
outsl
cmpsl
mov
ss
dec
adc
into
gs
lock
jmp
cmpsb
repnz
push
push
xchg
pop
popa
scas
mov
test
mov
divb
jbe
lock
fwait
jnp
outsb
and
in
mov
jno
or
pop
mov
and
mov
stos
sahf
test
pop
popa
mov
sbb
xor
mov
or
xchg
mov
sbb
outsl
imul
stos
xor
cmc
add
or
arpl
jo
sbb
sbb
out
xchg
push
pop
sahf
inc
xor
or
mov
int
sub
add
lahf
imul
pop
test
int
xor
adc
loope
shrl
push
xchg
rorb
pop
add
jge
and
out
push
sbb
sub
mov
inc
lahf
inc
mov
push
mov
fidivl
repnz
adc
je
jp
in
cmc
iret
pop
push
dec
pushf
mov
sbbl
fisubs
into
or
jo
mov
push
aad
daa
xlat
xchg
lret
out
adc
sub
inc
and
ljmp
shrl
fnstenv
xor
sahf
xchg
dec
mov
pop
xchg
push
cli
add
sbb
jns
mov
ret
fwait
inc
fadds
shll
jne
jmp
sub
push
mov
pop
inc
xchg
inc
mov
jns
pop
aaa
sub
inc
or
mov
and
mov
push
jae
lahf
icebp
push
mov
mov
js
adc
rorl
std
or
xor
pop
mov
testl
movsb
mov
repnz
push
adc
pusha
adc
sbb
aaa
fadd
adc
push
xchg
adc
jbe
je
ljmp
and
add
scas
jle
cmp
ljmp
jae
aam
rolb
cmp
mov
test
mov
push
jnp
incb
mov
mov
aaa
fisubrl
aaa
rcll
stc
icebp
mov
add
cmp
out
out
pusha
out
stos
movsb
adc
cmp
mov
xchg
shrb
sbb
add
dec
jmp
mov
addr16
lds
mov
mov
pop
xor
dec
xor
das
xor
aas
jns
add
and
test
dec
adc
cltd
mov
adc
mov
cmc
pop
push
inc
idivl
sbb
cmp
adc
in
iret
in
mov
push
add
lds
sub
mov
jmp
adc
pop
push
add
add
ror
mov
fcom
test
negl
data16
push
cwtl
jnp
dec
xor
sbb
lods
insl
cmp
call
mov
jae
test
mov
iret
and
inc
push
jp
push
fmuls
popa
test
lret
ss
jns
mov
hlt
repz
xchg
inc
lds
pop
xchg
std
cmp
repnz
pop
dec
dec
pop
mov
icebp
rorb
gs
dec
negl
and
push
bound
pop
mov
aas
loopne
sub
fsubrl
adc
mov
je
pop
daa
mov
popa
sub
divl
test
lods
loop
rorb
mov
pop
imul
add
in
inc
imul
lds
or
adc
jb
push
pop
add
rorl
in
mov
jbe
jne,pt
push
sub
mov
xchg
sub
xchg
push
adc
inc
inc
rcrb
mov
inc
shrw
push
dec
add
adc
jb
orl
xchg
lock
mov
fstl
push
mov
add
pop
mov
add
aam
pop
out
pop
jns
cmp
xor
jno
xchg
mov
sbb
ss
jns
pop
xlat
hlt
jecxz
mov
push
mov
add
xorb
movsl
bnd
and
mov
sbb
mov
mov
xchg
mov
push
dec
cmp
mov
push
xlat
lahf
push
lret
sub
dec
adc
mov
add
jbe
fistl
mov
push
cmp
sbb
cmp
in
out
test
dec
jle
aad
add
cld
fs
pop
imul
jb
cmp
pop
mov
subl
pop
pop
inc
sbb
xor
sarl
inc
aas
xor
jecxz
imull
ja
mov
and
dec
cmp
or
and
aaa
repz
push
popa
aad
pop
lods
cmpsl
imul
xor
sub
fnsave
icebp
leave
jns
jo
ja
inc
in
xor
out
mov
push
insl
aam
xchg
cmc
inc
testl
lea
mov
jne
roll
lock
jnp
addr16
repnz
sbb
rorb
xchg
xchg
jmp
inc
lcall
das
xchg
cwtl
mov
mov
mov
mov
xchg
push
lcall
fs
cmp
mov
insl
arpl
in
es
inc
insl
cmp
lods
scas
fdiv
push
dec
mov
movsl
jae
shr
into
sub
inc
adc
outsl
divl
adc
sbb
inc
sub
push
shl
lahf
add
mov
int3
pop
ret
push
jno
je
xchg
lods
bound
ret
arpl
adc
inc
iret
mov
inc
mov
gs
pop
xchg
push
scas
pop
inc
push
mov
test
mov
adc
dec
adc
loopne
adc
imul
pop
jmp
js
ljmp
inc
and
and
aam
mov
pop
push
ret
lods
mov
nop
add
inc
mov
leave
lods
les
fnsave
sub
ret
lahf
loopne
scas
scas
lods
fsubs
mov
lods
push
lods
push
addl
xchg
loope
ret
mov
mov
push
inc
mov
pop
and
je
in
pop
aaa
push
rolb
inc
and
mov
mov
jne
mov
push
sbb
push
sub
and
jg
bound
pop
xor
and
cmpl
inc
test
push
rcr
push
aas
jno
fcmovnu
icebp
or
ljmp
ret
cmp
pop
std
rorb
out
lds
dec
ja
sbb
loop
push
mov
scas
sarb
mov
mov
cmpsl
pop
lods
sbb
and
and
nop
cmpsb
jnp
aad
push
notb
dec
fsubr
rolb
out
dec
inc
sub
push
xchg
inc
sbb
and
das
movsl
xor
fidivs
jecxz
shll
lahf
icebp
jno
mov
rclb
jle
ss
shl
adc
shrl
add
adc
inc
xchg
pop
andb
add
sbb
fidivs
pop
cs
dec
inc
sub
lcall
jge
mov
adc
sbb
sub
mov
mov
insb
mov
mov
push
add
xchg
cmp
mov
cmpsl
or
jg
adc
icebp
push
mov
mov
rcrb
int
in
stos
ja
pop
adcl
dec
outsb
xor
jns
mov
es
mov
icebp
push
mov
fnstsw
ret
mov
dec
popf
mov
and
addr16
xor
aaa
inc
insb
lds
jnp
push
xchg
fsubrs
aad
add
jecxz
dec
mov
nop
movsl
faddp
push
xchg
mov
ror
mov
add
sbb
dec
jns
jae
push
ret
xor
cmp
iret
push
popf
mov
dec
and
adc
xorb
mov
movsb
push
iret
out
xchg
out
outsb
mov
rclb
jg
pop
stos
jb
pop
mov
and
push
rorl
and
ljmp
fldcw
xchg
pop
sub
inc
negl
mov
add
pop
cmpsb
dec
pop
iret
imull
xorl
pop
inc
lcall
cmp
mov
setno
push
pop
sbbl
icebp
shlb
xchg
rcll
adc
xor
sbb
in
xchg
xchg
leave
decb
pop
sarb
ljmp
imul
mov
adc
pop
dec
sub
ja
add
sub
cli
in
push
jmp
jns
andb
add
mov
and
shlb
lea
sub
pmaxub
jbe
xchg
xchg
cwtl
enter
cld
subl
inc
lret
idivb
shl
mov
call
jb
push
dec
mov
pop
jno
into
mov
push
jge
mov
lret
lods
aas
dec
std
pcmpeqw
dec
and
shl
adc
inc
ds
mov
add
movsl
rcl
loopne
pusha
xchg
inc
enter
and
sbb
dec
mov
xorl
in
xor
cmovno
add
cmpsl
pop
stos
push
lcall
dec
inc
and
ss
mov
adc
repz
js
pop
push
movsl
pop
cmp
pop
sub
lcall
add
lods
popl
fistl
lock
mov
add
xchg
and
dec
dec
mov
test
in
cld
aaa
imul
mov
fisttps
cmc
sbb
movsl
iret
test
sub
push
lds
and
test
fstl
sub
dec
leave
fs
pushf
sub
push
frstor
loope
ret
mov
imul
idivb
xchg
jne
int3
xchg
push
mov
sbb
push
xlat
xchg
mov
mov
outsl
jl
push
ret
mov
fisttpl
leave
mov
in
mov
xchg
jo
xchg
jg
and
jo
and
xor
dec
clc
ds
out
adc
sub
dec
in
aaa
movsb
in
jge
and
pop
push
decl
sbb
pusha
stos
dec
xchg
sarl
mov
sahf
mov
sbb
out
and
pop
shl
sbb
inc
je
mov
dec
push
add
int3
lods
jp
or
mov
cmp
pop
cli
les
ja
pop
rcrl
gs
mov
pop
adc
push
lret
push
or
in
mov
xor
push
jno
inc
dec
inc
mov
dec
push
lods
adc
or
pop
fildl
ja
cmpsl
fimull
std
xor
cltd
xchg
mov
lcall
insb
orb
xor
jns
lret
idiv
push
out
loopne
inc
lret
mov
fstl
or
aam
cmp
rclb
inc
and
fisubrs
pop
mov
or
fbstp
sbb
or
insb
adc
nop
jnp
in
aas
fst
jl
or
jle
mov
test
mov
adc
mov
cmp
add
sub
test
cld
or
pop
inc
add
stos
inc
and
in
aad
ret
notl
nop
popf
mov
out
xlat
pop
scas
scas
mov
outsl
cmp
cmpsb
push
fidivrl
fadds
std
js
lock
fcmovnbe
test
stos
ficoms
xlat
mov
xchg
sub
adc
loopne
xor
or
call
pop
pop
cmp
fldl
push
out
shrl
fstp
loopne
scas
xor
xchg
dec
mov
cmp
dec
or
mov
jle
insb
mov
movsb
jb
lock
xchg
xchg
xchg
in
pextrw
or
mov
fidivs
ds
arpl
mov
ja
inc
mov
inc
mov
adc
jecxz
push
pop
inc
lcall
mov
pop
punpckldq
jbe
inc
ror
dec
cwtl
loope
into
mov
adc
cmpb
lds
adc
mov
lret
push
fsubrp
stos
out
cmp
loopne
filds
out
rcll
pop
sub
frstor
mov
mov
inc
sbb
mov
sbb
dec
jno
mov
ret
lock
or
jae
jmp
imul
cmp
das
popf
hlt
and
pop
or
pusha
lods
repz
push
mov
ja
sub
push
bound
xchg
fs
in
inc
adc
enter
mov
mov
adc
jle
xor
or
insb
adc
push
xor
adc
push
pushf
dec
shll
call
jl
and
movsb
push
shrb
stos
test
jne
sti
push
stc
dec
and
push
out
stc
frstor
cmc
mov
stos
add
cmp
shl
cmp
out
or
xor
idiv
shr
jns
mov
pushf
mov
push
outsl
sub
mov
not
sub
adc
ss
sub
aas
or
test
and
pop
mov
cmp
scas
cmp
fisubl
movsb
in
mov
jns
fistps
pop
fidivs
test
lret
out
int
and
lods
sub
mov
push
push
into
jno
out
mov
mov
add
mov
nop
icebp
pop
cli
xchg
mov
or
insl
test
cli
mov
pop
fcomip
jp
popf
frstor
jmp
popf
fsubs
or
fsts
test
arpl
addl
dec
cmc
mov
imul
xor
cmp
icebp
in
push
dec
cmp
ret
pushf
mov
dec
xor
xchg
sbb
gs
push
mov
movsl
cmp
insl
jo
push
dec
rolb
outsl
cmc
ljmp
adc
pop
fsubrl
mov
xor
test
fldl
lret
gs
ss
aaa
xchg
lea
jp
mov
fists
stos
mov
into
ret
out
sub
inc
mov
xor
arpl
insb
adc
xorb
filds
ja
sbb
xor
rcrb
mov
andl
jle
xor
mov
add
and
clc
jns
mov
fucomp
add
sub
faddp
fcmovnb
cmp
mov
andb
xchg
out
cltd
mov
mov
push
jmp
or
hlt
xchg
orb
sub
mov
push
out
lods
sti
lods
mov
jg
mov
mov
jmp
xor
cs
sub
std
pop
mov
in
sbb
gs
ljmp
cmp
add
xor
mov
movsl
push
imulb
insb
je
jg
loop
fbstp
rorl
out
adc
movsb
movsb
or
or
es
mov
xchg
and
shrl
in
les
push
mov
sbb
int3
pusha
ss
jns
push
int3
outsb
lock
xchg
test
xchg
mov
pop
out
hlt
aas
pop
sbb
jmp
shrb
sarl
inc
mov
arpl
mov
insb
icebp
adc
mov
in
loop
sbb
jge
and
testb
push
jg
out
xchg
insb
add
mov
mov
sub
fists
das
jp
xor
aaa
sbb
xchg
loope
add
scas
divl
mov
dec
jl
mov
dec
mov
mov
sbb
imul
pop
jmp
or
repnz
insb
fistps
mov
inc
jg
push
pop
inc
fldl
mov
push
into
popf
int3
cltd
lcall
add
cld
inc
int3
ljmp
cmpb
add
jne
pop
add
into
lods
mov
popa
push
fcoms
gs
mov
test
or
insl
inc
pop
fildll
push
xlat
bound
cmp
mov
ss
adc
sub
jb
pop
into
ret
sbb
xor
iret
nop
and
jbe
or
mull
imul
loope
lret
out
pop
adc
dec
jecxz
mov
ja
lahf
pop
fcoml
ss
mov
xchg
les
xor
subl
orl
popf
pop
mov
dec
gs
add
cmp
shl
js
bound
cmp
fs
aad
mov
xor
mov
sbb
dec
xor
push
fstl
mov
cmpsb
adc
test
adc
cmpb
mov
adc
rcrl
sarb
stc
or
adc
xchg
imul
lds
xlat
mov
inc
sub
dec
aas
inc
je
shlb
sbb
jo
lret
mov
arpl
adcb
addl
push
sub
mov
mov
or
mov
ror
flds
pusha
movsb
cmp
cli
ja
xchg
ss
or
lea
push
inc
jae
in
cwtl
je
arpl
inc
jg
stos
div
lret
mov
idivl
fdivs
and
clc
fimull
mov
cmp
dec
pusha
fidivs
daa
fucomip
or
inc
lret
ja
cmp
lock
jge
test
mov
out
cmp
orl
lret
pusha
sbb
es
cmp
mov
roll
mov
xchg
pop
xchg
ja
andb
stos
addr16
out
and
ja
mov
lahf
aad
setb
imul
jp
enter
push
jo
and
data16
mov
or
push
sub
dec
xchg
cmpsl
insl
or
ljmp
std
jbe
sbb
test
ret
mov
push
daa
cmp
add
add
subl
and
xchg
repz
mov
nop
addr16
ljmp
mov
imul
inc
fcoml
add
lock
pop
mov
jns
adc
mov
add
push
or
mov
clc
test
xchg
xchg
popa
cmpsl
jb
jno
mov
mov
mov
lods
sub
je
movsb
test
sub
mov
adc
iret
adc
outsl
lahf
mov
js
scas
mov
xchg
mov
jmp
out
ret
pop
aad
push
scas
cmp
pop
stc
aas
lds
mov
mov
sbb
adc
cmpb
inc
add
jo
lods
shl
lock
dec
jmp
imul
test
icebp
sub
inc
sbb
mov
push
das
ss
aam
dec
or
adcb
into
jae
lods
push
add
aam
add
mov
cwtl
dec
test
mov
add
push
fildl
mov
dec
add
mov
lods
sbb
sbb
add
sbb
cmp
jl
repnz
xor
test
repz
fcoml
arpl
pushf
arpl
mov
and
or
loope
mov
mov
cmp
loope
and
sub
stos
xchg
repz
ljmp
jmp
pop
test
push
fnstcw
mov
inc
int3
and
stos
loope
stc
stos
mov
cwtl
dec
lcall
addr16
dec
shll
push
movsb
add
aam
add
ja
inc
push
orb
stos
dec
icebp
cld
push
or
aam
cmpsb
adc
les
mov
jbe
jbe
ljmp
mov
and
push
das
and
mov
pop
sub
leave
subb
mov
ss
xor
mov
inc
sbb
inc
leave
repz
xchg
pop
movsb
call
jnp
popl
mov
mov
leave
popf
fldl
cld
xor
jae
mov
dec
xchg
ret
push
mov
popf
cmp
mov
sarb
in
lret
inc
pop
mov
mov
ror
lock
in
push
adcl
jle
int
lock
pop
sub
sub
iret
loope
sub
jp
cmp
div
mov
fsubrl
dec
dec
and
ret
jmp
fwait
orb
js
add
je
xchg
ljmp
clc
or
sub
mov
hlt
out
popf
scas
mov
xchg
dec
rcrb
lret
fcoms
cld
cmp
mov
orb
jne
addl
daa
mov
add
andl
jmp
jecxz
mov
or
test
out
icebp
js
shrb
inc
or
push
loop
mov
lock
in
pusha
in
jns
fnstcw
daa
add
or
sub
add
sarb
push
add
push
and
push
adc
lea
sahf
clc
inc
andl
jmp
xor
dec
ret
ror
push
fdivrl
xchg
popf
cmpsl
mov
mov
inc
mov
sbb
dec
inc
test
popf
lods
data16
xchg
mov
lahf
sub
shll
popf
adc
jnp
es
or
pop
rcl
and
enter
push
mov
rol
cs
inc
addr16
sbb
inc
ds
loop
xchg
std
add
adc
push
cmp
push
xor
lods
mov
lock
xor
popa
arpl
test
jmp
add
cltd
sub
and
rorb
pop
mov
cmp
sub
and
sbb
out
icebp
adc
out
jge
cmp
push
mov
aam
repnz
and
repz
iret
push
cmpsb
repnz
lock
pop
xchg
push
add
add
std
jecxz
and
cli
ficoml
push
add
push
andl
jne
out
rorb
inc
cltd
dec
xorl
je
inc
repnz
xor
cli
sbb
sti
daa
mov
and
jns
std
test
popl
and
enter
push
adc
jge
xor
inc
jp
aaa
cmp
imul
imul
sbb
insl
pop
rorl
cli
pop
jmp
cltd
dec
js
mov
mov
iret
mov
sub
jnp
and
add
jns
outsb
or
xor
inc
test
dec
fwait
mov
je
cmp
cmc
xchg
mov
dec
dec
and
xor
and
xor
pop
shl
aam
cmp
stos
and
arpl
js
sbb
sarb
xchg
cmp
jo
repnz
mov
or
or
pop
add
out
mov
adc
mov
sbb
cmp
sbb
xor
and
sub
outsl
cli
out
pop
add
mov
fstpl
daa
xorb
or
inc
xchg
lea
dec
out
mov
adc
mov
mov
les
mov
outsl
mov
pop
clc
push
inc
mov
lods
inc
pop
dec
out
ss
out
daa
testl
fwait
push
mov
or
insl
nop
or
aaa
add
das
lret
daa
pop
cli
jnp
cmpsb
imul
cmp
scas
and
jbe
sahf
sub
fcomps
jp
pop
stos
outsb
sbb
dec
sub
das
and
scas
jae
push
or
jecxz
sahf
pop
out
dec
cmp
xor
mov
dec
and
leave
popf
rcr
jnp
loopne
mov
sbb
mov
sbb
cwtl
into
dec
or
mov
inc
xlat
push
add
sub
adc
jg
dec
repnz
iret
fistl
xchg
dec
lret
jno
dec
jmp
ret
sub
addl
loopne
cmp
jb
fidivs
test
sub
inc
adc
or
jmp
lods
sbb
call
adc
pop
fmull
sarl
cltd
add
lret
clc
add
adc
aas
adc
cmpsl
add
jecxz
cmpb
jae
jbe
add
imul
cmp
pop
inc
jbe
std
ror
add
mov
mov
adc
nop
sbb
pop
cmpsl
mov
xchg
cmp
push
lds
stos
mov
lret
aas
sti
dec
xchg
dec
adc
jno
daa
mov
clc
xlat
sbb
xchg
jnp
divb
cmp
cmp
mov
popf
or
rclb
and
add
mov
aaa
pop
pop
fsts
stos
imull
jae
iret
std
or
inc
xor
cmp
cmpl
or
push
mov
movsl
dec
mov
xchg
mov
lods
sbb
decb
and
pop
add
sbb
sahf
icebp
mov
lea
pushf
adc
call
dec
add
jne
imul
sub
rcrb
xor
mov
jle
shl
stos
filds
mov
fimuls
loopne
adc
adc
fsubp
or
imul
les
mov
add
add
mov
xor
mov
push
arpl
clc
sbbb
dec
inc
outsl
cs
and
sub
xchg
arpl
sbb
lds
dec
test
sub
loop
and
lock
xor
mov
jnp
mov
ss
cltd
push
das
pop
or
cs
ss
jae
repz
jnp
cmp
arpl
push
imul
shlb
aad
jmp
mov
push
popf
jne
and
mov
mov
add
adc
adc
mov
pop
push
out
lahf
mov
subl
mov
cmp
cs
xchg
dec
push
subl
ja
adc
out
jp
out
cmpsb
add
mov
xchg
adcb
test
xchg
inc
adc
cmp
das
fldcw
ret
shrb
cmp
cld
fs
mov
scas
mov
add
jl
sub
mov
mov
xor
xor
pop
gs
inc
xchg
in
scas
gs
pop
pop
push
add
push
pop
xchg
add
ud1
pop
inc
ret
adc
mov
je
arpl
loop
in
add
pop
adc
shlb
aam
cmp
imul
fdivr
pushf
xchg
mov
mov
and
lcall
sbb
and
jae
push
mov
pop
mov
push
jo
lds
mov
fcmovnu
fistl
or
push
rep
mov
in
pop
test
cmpl
mov
fwait
cmpsl
mov
aas
add
cltd
pop
int3
jmp
cmp
imulb
daa
or
aaa
out
mov
cmpsb
sbb
mov
push
and
mov
je
nop
int
pop
xor
xchg
push
int3
mov
adc
xor
jnp
or
jne
aas
rorl
daa
xor
icebp
repz
push
add
or
call
int
cld
dec
jecxz
sub
dec
insl
rcrl
pop
xor
and
js
out
and
ja
cmp
jns
shll
pop
inc
int3
push
ret
ret
std
sub
imul
pushf
cmp
loop
adc
adc
pop
cld
push
jb
out
adc
fdivp
iret
push
and
clc
and
sub
decb
js
push
mov
lods
pop
jle
mov
mov
call
dec
xlat
and
xchg
shr
sarl
jno
mov
or
mov
cli
adc
cwtl
das
mov
dec
jae
fldcw
es
sbb
nop
push
ret
add
test
jg
lea
cltd
icebp
jae
and
lods
xor
adc
mov
repnz
stos
add
pushf
cmp
inc
clc
mov
mov
movzbl
mov
add
pop
jl
add
mov
decl
int
jae
shrl
pusha
mov
lods
jb
push
test
scas
jnp
ja
inc
add
cmp
das
sbb
loopne
mov
sbbb
sub
jno
mov
adc
insl
movsl
in
adc
pop
jns
lret
fcoms
aad
cltd
fcompl
std
xorb
push
clc
das
inc
dec
mov
sub
mov
lods
in
pop
imul
mov
je
add
adc
sbb
stos
pop
icebp
sbb
repnz
je
xchg
inc
cmp
jb
sar
fsubl
pusha
push
enter
jecxz
mov
popa
inc
pop
shll
inc
bound
in
mov
inc
les
pop
push
cmpb
das
lods
in
dec
xchg
push
ja
mov
mov
andl
mov
lock
jne
mov
inc
xor
add
lds
nop
cltd
jg
adc
adc
jmp
mov
push
repz
cmp
push
pop
inc
scas
xchg
cli
in
sbb
sbb
mov
stos
test
mov
syscall
arpl
in
out
mul
sbb
fwait
hlt
push
icebp
outsb
push
sub
out
and
sbb
jne
out
mov
push
pop
insl
xchg
and
popa
sub
mov
mov
pop
popf
jmp
pop
jecxz
push
stos
jl
rcrb
pop
jp
pop
lds
or
gs
inc
sbb
iret
jno
mov
aaa
ficoml
lds
rol
inc
cmp
scas
test
popf
mov
sub
pop
mov
pop
add
iret
into
add
sub
shr
jnp
jbe
or
push
adc
rcr
rolb
jg
sbb
xchg
dec
pushf
jo
out
mov
fsts
scas
add
addr16
int
add
daa
or
insb
jo
sub
out
inc
dec
xabort
push
fstpl
pop
clc
dec
push
push
stos
lcall
in
xchg
pushf
hlt
out
push
sbb
pop
inc
pop
lds
mov
cmc
mov
pop
add
mov
jns
jg
inc
loopne
and
cmpsl
data16
xchg
or
aad
in
das
call
lcall
ss
call
jae
les
mov
jmp
sbb
xchg
adc
inc
fsubrs
iret
jnp
cmpsb
dec
push
ss
clc
lods
aaa
xor
mov
shr
jge
test
xor
pop
das
aam
insb
mov
cld
add
mov
stc
add
fmul
rcrl
dec
mov
pop
pop
je
dec
std
mov
scas
icebp
cmpsl
aad
ret
sti
fnsave
xor
sbb
fwait
jmp
dec
pop
fs
sbb
shrl
add
mov
pop
inc
cwtl
jnp
cwtl
ret
xchg
pusha
popa
out
lcall
idivl
push
sub
push
mov
int
cmp
add
scas
sbb
aad
mov
adc
inc
xchg
aaa
insl
mov
jbe
xchg
sub
add
xchg
pop
das
pop
imul
incl
mov
ljmp
testl
xchg
push
mov
xchg
sbb
bound
push
fcmovnb
dec
inc
shl
or
lock
lods
inc
cmp
out
push
faddl
xor
pop
fcom
andl
add
into
insb
lock
aam
inc
imul
cmp
cmp
or
xchg
out
fnstsw
repnz
sub
fsubs
sub
sti
pop
jle
clc
and
xlat
pop
mov
daa
xor
movsb
and
call
das
das
arpl
jg
dec
stos
fmul
cmpsl
or
inc
dec
ret
data16
jo
sbb
jns
mov
jnp
jle
jne
sub
imul
test
or
or
jb
pusha
jo
mov
das
lds
pop
mov
pusha
sti
subl
mov
and
fldenv
addb
and
sub
xor
shr
inc
or
or
mov
sbb
pop
push
sbbb
repnz
ljmp
xor
jecxz
loop
fistpl
push
xchg
fisubs
fisubl
ror
ljmp
mov
sub
and
push
mov
xchg
insl
inc
push
aam
jno
pop
mov
subl
cmp
das
or
pop
dec
int3
adc
push
mov
mov
std
push
imul
lds
into
push
mov
xchg
dec
adc
adc
push
sub
mov
repz
sub
xchg
sbb
scas
cmpsb
cmpl
ret
std
loope
mov
push
cltd
push
mov
sti
repnz
dec
adc
decl
push
pop
test
xlat
popa
mov
int3
xor
imul
negb
lcall
lahf
add
sub
xchg
push
mov
mov
push
addl
inc
mov
mov
push
add
jnp
fdivrl
sub
xchg
xor
xlat
jp
scas
pop
xor
insl
jns
sub
stos
sbb
subl
or
mov
jmp
dec
lock
adc
add
sarl
pop
std
inc
sbb
sbb
pushf
mov
jg
adc
sub
cmp
xlat
inc
dec
in
scas
orb
ss
call
int
or
jg
inc
into
cmpsb
mov
fstl
popf
int3
pop
or
mov
mov
fnsave
das
sub
jo
or
cmpsl
and
icebp
mov
fsubr
add
cld
gs
mov
scas
pop
push
lea
es
out
imul
out
enter
dec
xor
mov
dec
and
jg
ret
es
aam
inc
add
mov
lahf
fimull
gs
mov
nop
add
jle
hlt
loop
aas
push
shr
sub
mov
jge
in
dec
ja
pop
and
sahf
and
cmp
enter
sub
je
push
inc
ret
in
or
pop
ret
lds
mov
fnsave
fists
out
or
repnz
push
mov
lcall
fisubl
xor
inc
dec
cmp
mov
cld
out
ljmp
cwtl
je
out
imul
loop
test
adc
pop
jnp
and
adc
gs
cmc
and
out
scas
test
and
out
outsl
add
fldenv
fs
xchg
push
add
cmp
jo
outsl
mov
push
ret
pushf
sbb
in
jnp
sub
mov
jb
cltd
pop
mov
loope
std
adc
mov
mov
mov
jmp
inc
mov
sub
xchg
sbb
or
add
out
jge
cld
aad
hlt
stc
pop
cmp
mov
daa
movsb
bnd
js
nop
dec
lods
fmul
sbbl
and
cmpsl
sbb
and
mov
popa
cmpsb
xor
sti
push
sub
lcall
call
mov
fldenv
push
push
ret
mov
lret
aad
inc
adc
loop,pn
fmull
jge
pop
xchg
shr
ja
aaa
and
into
pop
cmpl
mov
push
aaa
shll
mov
and
test
pop
loop
mov
daa
out
pop
ds
sahf
cmc
mov
jge
leave
shll
adc
imul
test
addr16
jb
aaa
add
ja
data16
jns
aas
push
leave
std
add
lret
push
mov
dec
cmp
mov
shrl
jp
or
and
inc
lahf
insl
or
sub
mov
sar
andb
movsl
cwtl
jns
inc
pop
dec
sub
and
repz
pusha
nop
inc
dec
mov
pop
cmp
pop
dec
scas
das
lahf
ror
mov
inc
out
add
adcb
mov
repz
in
push
inc
or
mov
addr16
jge
out
dec
nop
mulb
inc
mov
loope
in
cltd
or
inc
inc
fcmovu
jae
jbe
mov
inc
addr16
fs
shrb
jge,pn
mov
rorb
fdivr
jg
mov
xor
and
fsub
xor
push
push
lahf
in
in
jg
test
jmp
fistpll
pop
xchg
jo
ret
enter
fmuls
outsl
cmp
test
cld
and
cmp
and
rorb
or
cmc
stos
daa
pop
xchg
cmc
mov
addr16
sbb
inc
xor
pop
ds
push
mov
xchg
icebp
sub
push
dec
mov
mov
dec
inc
in
sub
das
sbb
mov
mov
orl
mov
pusha
test
mov
cli
pop
and
ja
xlat
ja
pop
cmp
adc
pop
test
ret
xor
mov
ret
hlt
or
or
lock
in
rorb
mov
out
scas
repnz
es
inc
or
xor
ja
movsl
and
adc
iret
pop
mov
jle
ja
push
rcr
xor
cmc
sbb
add
xor
iret
mov
cmc
sbb
xor
jg
mov
inc
mov
pop
push
dec
xchg
popf
push
xchg
ljmp
cli
xchg
lods
fstps
or
arpl
stc
sarb
stos
xchg
incb
stc
sub
pop
and
fprem
out
jecxz
cmpsl
loopne
loopne
stc
aad
jmp
ss
popa
mov
cmp
popf
stos
xlat
fistpll
cmp
and
ds
arpl
jge
retw
inc
fsubl
rcll
pop
push
dec
adc
mov
insl
mov
dec
jno
adc
les
push
add
push
or
data16
jb
in
je
lahf
out
repnz
sbb
jbe
popa
fisttpll
jle
rol
idiv
inc
cmpb
mov
and
mov
ljmp
subl
dec
mov
push
ret
fs
cmp
aaa
mov
xor
push
dec
or
cmpsl
and
test
sbb
lret
mov
pushf
mov
fmul
xor
push
andb
out
das
push
lods
repnz
adc
push
dec
pop
push
sbb
out
mov
fs
adc
add
sub
lret
and
add
aas
and
cmpsl
lods
and
push
jnp
outsl
adc
popf
mov
mov
jno
icebp
xor
dec
cld
andl
and
ja
out
std
xchg
or
and
ds
add
cmc
adc
push
and
les
adc
daa
insl
inc
adc
mov
clc
into
push
je
sahf
push
jne
leave
adc
out
movsl
inc
mov
jae
inc
hlt
push
mov
nop
stc
addb
shll
addr16
loope
sub
pop
mov
push
sub
scas
mov
mov
jnp
jno
neg
pop
movsb
cmp
cs
clc
and
cmpsb
into
in
or
movsl
xor
sub
scas
stos
out
inc
jp
mov
and
ss
inc
sub
outsb
add
mov
cmp
pop
pusha
fucomi
outsl
cmp
or
pop
adc
mov
scas
test
xor
push
fdivl
adcl
popf
adc
loop
add
mov
pop
mov
add
pop
mov
in
dec
arpl
clc
mov
mov
mov
imul
mov
loopne
mov
jbe
add
aas
loop
sbb
add
jns
std
je
ror
mov
jo
ljmp
xchg
popf
push
shlb
mov
add
sub
inc
rcl
loope
fisubrl
repnz
into
nop
and
out
mov
xchg
call
inc
push
sbb
lock
addb
cmpsl
faddl
aas
push
sub
rcll
enter
jecxz
jge
add
int
pop
jb
mov
mov
imul
push
add
popf
out
andb
les
xor
popf
pop
out
dec
lods
push
and
and
loop
xor
xchg
cmp
addr16
adc
icebp
sti
ds
mov
faddp
movsb
movsl
movsb
and
pop
push
cwtl
cmc
insb
mov
test
add
ja
imul
ret
push
out
movsb
and
fwait
pop
adc
aaa
lahf
jnp
fmull
xchg
andb
ja
out
xor
and
or
push
cmp
sub
and
test
enter
pop
rep
das
jns
xor
mov
xchg
sbb
pop
mov
dec
pop
push
leave
pop
js
mov
testb
sbb
and
mov
clc
scas
mov
ss
loop
mov
mov
fildl
inc
loope
adc
jge
adc
mov
sbb
out
push
xchg
jns
pop
mov
push
popf
mov
mov
sbb
je
sbb
lret
insb
lret
aad
adcl
mov
rorb
test
popa
adc
sbb
mov
push
pop
push
fadd
roll
lret
push
insb
dec
add
sahf
lahf
aaa
mov
sbb
shrb
adc
adc
jbe
adcl
adc
mull
test
sub
mov
nop
add
cli
add
inc
jge
pop
add
aaa
sub
dec
mov
lods
fistps
and
test
jge
shrl
push
xorb
mov
scas
mov
pop
jg
mov
imul
outsb
push
jo
imul
les
aas
movsb
js
mov
lcall
pop
mov
fisubl
addl
mov
jae
inc
mov
and
lahf
mov
inc
rolb
bndstx
jns
mov
int
fisubrl
xchg
stos
xchg
xor
cs
xor
pop
sahf
shrb
das
das
jne
add
sub
cmp
or
adc
jbe
xor
cmpsb
rorl
jmp
out
and
aam
push
pop
mov
adc
hlt
mov
test
and
test
rclb
inc
lods
xchg
xor
sbb
test
dec
push
cmpsl
repnz
lock
or
lock
adc
mov
adc
mov
mov
add
shrd
sub
mov
cmp
inc
outsl
adc
add
dec
push
fidivl
sub
dec
pop
and
xor
movsl
push
mov
stos
out
xchg
std
mov
das
adc
adc
data16
xor
adc
ret
je
mov
addr16
push
repnz
rcrb
cmp
xor
dec
push
ret
inc
pop
das
leave
inc
outsb
or
in
out
mov
inc
fisttps
cmpb
test
xlat
pop
add
push
pop
xor
in
xchg
add
pop
cmp
insb
in
dec
pop
lret
out
flds
call
arpl
adc
test
or
sub
pop
xor
mov
mov
cmpsb
push
push
fcmovnu
je
adc
cmpsl
iret
cltd
stos
out
nop
and
mov
pop
decl
xor
rcl
enter
pop
scas
jmp
inc
or
jp
jecxz
cli
push
inc
mov
imul
adc
push
shrl
push
in
pop
and
xchg
mov
stos
add
bound
ja
jbe
and
cltd
xor
push
cwtl
cmpsl
pop
sbb
push
mov
xchg
test
add
in
fwait
or
ja
in
stos
popa
mov
pop
mov
sub
int
jae
cs
out
lret
iret
iret
inc
int3
xlat
sbb
fsubrs
enter
add
cmp
dec
mov
dec
subl
repz
xchg
or
fidivrl
shl
adc
lods
inc
jno
xchg
jge
pop
ljmp
jmp
xor
pop
mov
lret
jno
imul
outsl
pop
in
push
xlat
sbb
pop
arpl
jg
jmp
lods
iret
jae
popf
cltd
clc
adc
inc
xchg
mov
cli
dec
pop
or
or
int
sub
push
adc
pop
out
sti
mov
inc
test
gs
lret
leave
shll
adc
jno
lret
xchg
mov
incb
mov
in
repz
cmpsb
mov
add
jecxz
std
cld
and
add
pushf
sarb
sub
bound
jl
ret
dec
add
stos
test
scas
out
shll
lock
lea
out
popa
mov
sub
mov
movsl
dec
sub
jns
xchg
fwait
mov
aad
pop
dec
sti
mov
ror
mov
repnz
xor
movl
in
cmp
ds
shll
push
not
pop
dec
lcall
cwtl
lcall
dec
dec
outsl
aaa
in
inc
inc
mov
das
insb
mov
dec
push
outsb
in
or
xor
addb
jbe
mov
mov
orb
mov
scas
leave
loope
cli
fwait
xor
mov
push
movb
ret
cltd
rorl
out
pop
stc
cld
daa
jle
mov
add
mov
lds
cmpsl
cmc
dec
imul
mov
sub
push
bound
cmp
and
inc
push
adc
or
imul
and
mov
sub
push
aas
mov
and
in
xor
sub
cld
shr
into
or
aaa
shll
cmpsb
and
pushf
cmc
inc
insl
shlb
and
mov
pushf
cltd
int3
pop
lea
leave
dec
stc
sub
outsb
gs
push
push
jbe
aam
jg
cmp
add
jo
mov
xchg
mov
jmp
inc
sub
or
hlt
repz
cmp
inc
imul
and
rcrb
fcoml
mov
sub
das
imul
lods
or
clc
jbe
jp
sbb
inc
mov
xchg
adc
in
movsl
sbb
or
xor
push
lret
cs
or
lods
push
shrb
xor
aaa
lea
loope
aaa
lret
pop
jbe
adc
inc
cmp
out
xchg
push
push
pop
jne
pop
jb
or
aaa
push
cltd
mov
aas
and
call
and
cmpb
xlat
cli
add
ret
or
pop
imul
movsb
and
fucomp
mov
jge
jns
sub
adc
lods
ljmp
pusha
jb
and
frstors
popa
cs
and
sbb
aaa
push
sub
add
pop
dec
popa
test
mov
sahf
push
jg
adc
loop
push
mov
jo
int3
push
int
mov
je
stos
mov
sbb
mov
mov
pop
mov
mov
push
mov
pushf
push
mov
test
adc
scas
xorb
mov
sbb
push
sti
mov
jmp
push
imul
cmp
mov
je
aaa
jns
jl
int3
dec
loopne
scas
aas
sti
daa
nop
ret
fstp
pop
push
lcall
xchg
sbb
adc
rcrl
pop
stos
ss
call
repz
dec
sbb
sub
mov
lds
pop
xor
and
nop
xchg
mov
and
push
mov
notb
and
es
lods
jbe
fidivrl
and
sbb
fldl
test
mov
in
cmpsl
outsb
loop
xchg
sbb
lret
popa
dec
inc
xor
fldt
mov
dec
adc
xchg
imul
dec
mov
out
lds
push
sbb
mov
mov
stos
mov
mov
lods
xchg
add
mov
mov
js
mov
jo
or
add
dec
in
pop
lock
cs
test
adc
sub
ds
jg
loopne
xchg
sbb
icebp
enter
pop
and
sbb
or
xchg
data16
enter
jo
lock
mov
pusha
dec
xchg
dec
xchg
cltd
mov
add
cmp
mov
mov
mov
int
inc
loope
and
movsl
xlat
arpl
push
inc
cwtl
adc
xchg
lahf
xor
loop
mov
xchg
sub
and
xchg
hlt
jnp
cmc
call
cld
popa
or
mov
bound
jl
stos
ret
outsb
adc
test
sub
repnz
pop
stos
push
and
dec
imul
inc
sub
sub
pop
xlat
test
adc
mov
addl
push
aaa
insl
pop
lea
inc
ret
scas
cs
fldcw
data16
in
cwtl
push
popl
aad
xor
lret
loop
call
push
lret
aam
add
int
sub
int3
out
fidivl
sarl
push
mov
repz
inc
mov
scas
into
adc
xor
push
jne
scas
stos
das
or
pop
std
jecxz
xchg
and
lds
cmp
into
push
and
sti
inc
jge
inc
imul
ljmp
ret
mov
sub
aas
fiaddl
stc
int3
les
push
or
jecxz
call
push
sub
loop
lock
sbb
ja
sbb
orb
push
hlt
and
shr
mov
jb
xor
shl
mov
sar
scas
sbb
leave
and
movsl
mov
ljmp
pop
dec
scas
and
ret
xor
inc
ret
fidivl
inc
stc
add
pop
aaa
cld
push
inc
and
and
repz
addr16
ficoml
inc
out
lahf
stos
pop
sbb
mov
dec
mov
inc
fbstp
adc
dec
sbb
daa
add
pop
and
mov
scas
pop
jns
lea
cmpsb
in
and
dec
xor
testl
daa
das
sub
inc
inc
outsb
out
mov
mov
psubd
divl
scas
mov
mov
sahf
adc
xor
imul
ds
int
std
adc
xchg
daa
add
add
pop
lret
fs
or
aad
sbb
mov
clc
sub
sub
insl
shlb
and
lret
ficoml
lret
cltd
push
shll
mov
sbb
andl
add
pop
int
nop
sub
xchg
imul
push
xor
mov
push
jge
inc
lods
ljmp
jns
jp,pt
sbb
out
xor
cltd
ljmp
mov
pop
and
scas
scas
dec
imul
popf
and
scas
mov
jg
incl
inc
mov
inc
adc
fstpl
push
fsubrp
gs
cmpsl
dec
cmp
insl
mov
inc
cltd
mov
lock
xorb
add
out
jl
add
and
mov
push
gs
sbb
dec
std
xchg
in
ss
dec
mov
xor
js
mov
stos
rcl
mov
pop
cmp
pusha
push
mov
imul
mov
dec
pop
and
add
out
scas
lcall
fisubl
in
stos
lret
repnz
fiaddl
mov
lods
out
call
dec
aas
sub
jecxz
lods
dec
into
cmp
xchg
mov
mov
into
out
in
lcall
sub
std
pop
nop
ret
rcr
push
dec
sub
stc
outsb
repz
mov
lcall
cld
jl
rcrb
rorb
and
mov
mov
sbb
add
xchg
dec
mov
xor
inc
xor
nop
sarb
lea
outsl
jnp
and
in
out
xchg
int3
in
int3
imul
loop
clc
loopne
mov
hlt
push
mov
xchg
lock
pop
clc
jns
fcomps
xchg
or
sub
pop
imul
scas
roll
push
mov
inc
lds
jns
bound
fsts
std
stos
cmp
fistpl
pop
mov
outsl
inc
or
xchg
cmp
pop
or
or
sarb
rclb
xor
hlt
pop
mull
push
push
test
cmp
data16
jne
inc
pushf
fsubrl
flds
shlb
imul
and
or
add
and
movsl
push
xchg
mov
icebp
and
repnz
push
push
and
lret
xor
jo
in
aam
scas
inc
sub
mov
and
data16
jecxz
jl
cld
das
mov
insb
jns
enter
push
xchg
lahf
lcall
cvtps2pd
inc
and
outsl
push
outsb
cmpsb
js
xor
add
mov
mov
cmpsb
arpl
pop
jae
out
sub
and
mov
adc
adc
cmpsb
mov
shll
push
les
xor
cld
pop
insl
and
dec
stos
scas
pop
leave
out
cmp
jg
sti
and
sub
mov
mov
mov
jo
aas
in
and
scas
mov
gs
test
arpl
mov
into
adc
mov
rorl
inc
fildll
lret
in
mov
cmp
fidivs
imulb
or
pop
pop
mov
push
adc
loope
std
addr16
dec
icebp
jae
mov
gs
mov
movsb
cmpsb
inc
pushf
adc
jae
js
push
adc
test
or
or
push
stc
fimuls
rorl
or
and
add
cmp
dec
ds
jg
cld
rcrb
pop
adc
loope
dec
inc
fistpll
push
pop
mov
stos
ss
jle
aas
das
arpl
pop
test
sbb
lea
xor
cmpsb
inc
mov
and
inc
pop
shl
xchg
push
rcrb
out
arpl
bound
sbb
fsubrl
subl
scas
jbe
cmp
test
xchg
mov
cmc
dec
mov
rcl
push
pop
mov
push
movb
lret
cmp
pop
push
inc
inc
dec
pop
mov
mov
dec
into
in
data16
leave
mov
repnz
lock
adc
lcall
fisttpl
lea
fimuls
pop
aas
mov
outsl
xchg
dec
cmp
sbb
push
vmovlps
or
iret
popf
lods
out
sub
leave
cmp
xor
lods
lods
mov
mov
jmp
sub
pop
clc
insb
sti
call
xchg
mov
gs
rcr
add
outsl
mov
outsl
push
adc
or
inc
test
pop
dec
dec
insb
pop
or
xchg
dec
or
shrl
pushf
jo
cwtl
or
inc
sub
lahf
clc
iret
push
inc
add
cmp
push
mov
repnz
pop
inc
jne
test
xchg
xchg
pushf
dec
pop
insb
hlt
mov
pop
push
add
pop
fcmovnb
mov
add
xchg
mov
inc
or
das
call
out
pop
xor
ja
out
les
mov
ret
lea
mov
ds
jecxz
ret
shrl
sahf
dec
aaa
leave
out
icebp
insl
les
into
mov
gs
ret
fcmovbe
xor
adc
rcrl
push
repnz
stos
test
mov
adc
iret
imul
mov
sbb
daa
sub
xchg
xor
addr16
xor
mov
mov
xor
ret
mov
adc
icebp
cs
jbe
nop
dec
push
fdiv
adc
push
lea
xchg
cs
fistl
int
call
pushf
rcrl
out
xchg
adc
lret
push
fs
ret
rol
and
sub
sbb
mov
cmpsb
cmc
test
ja
pop
dec
push
xchg
mov
adcl
add
adc
fldenv
push
mov
incb
loope
xchg
jno
das
sbb
inc
aad
repz
out
insb
xchg
cmc
in
in
cmp
sbb
jmp
out
testl
jl
fstpl
push
lea
sbb
pop
bnd
xor
pop
clc
sub
pop
xlat
inc
test
mov
cli
clc
push
cmc
pop
dec
daa
test
fs
pusha
sub
mov
imul
loope
push
dec
pop
sbb
pop
gs
sub
jno
nop
sbb
test
cmc
adc
ret
adc
mov
jbe
out
ficompl
mov
ror
lods
ret
adc
xchg
enter
mov
adc
cmp
mov
adc
roll
mov
js
leave
aaa
imull
mov
sbb
cwtl
inc
pop
pop
sub
pause
xor
in
sti
mov
push
cltd
iret
mov
lcall
inc
scas
pop
in
add
inc
outsl
adc
lcall
popa
mov
or
repnz
xchg
mov
divl
sbb
out
lret
cs
out
mov
mov
mov
inc
int3
into
mov
fs
adc
cmpsb
add
mov
jno
adcb
sub
lahf
lahf
in
or
xlat
mov
adc
jmp
out
xchg
cmc
lods
stos
popa
push
mov
pop
into
lahf
arpl
inc
sar
sahf
sahf
mov
loop
xchg
push
daa
gs
hlt
mov
pop
iret
xchg
mov
add
mov
movsl
xchg
cli
addr16
jnp
push
pusha
pop
mov
iret
jecxz
andb
push
ja
rcl
and
ret
rol
lods
punpcklwd
xchg
pop
fisttpll
stos
and
out
adc
stos
es
sbb
xchg
repnz
push
pop
loop
lret
or
stos
pop
pushf
fs
in
push
sub
pop
inc
pop
or
aaa
fdivr
sub
jle
mov
fdivrs
push
cmpsl
mov
mov
movb
pop
xor
jmp
sub
hlt
jg
adcb
call
mov
add
loopne,pt
jae
sub
jae
movsb
mov
mov
lahf
test
sub
imul
test
dec
inc
ret
push
daa
xor
hlt
test
mov
fsubrl
fsubr
and
outsb
fcmovnb
rcr
lods
push
push
or
fsubl
nop
int
xor
add
das
data16
adc
ret
cmp
mov
inc
shrl
dec
dec
repz
jno
lock
xor
cpuid
xchg
dec
sbb
enter
loop
hlt
sub
mov
xor
popa
jg
insb
cwtl
nop
or
das
xor
xchg
dec
pop
mov
inc
mov
pop
in
xor
nop
sub
mov
aad
scas
adc
mov
inc
mov
movsb
sub
les
adc
cmc
sarb
lea
pop
fbld
xchg
shrl
aad
push
scas
popf
scas
out
xchg
pop
fsubl
pop
lcall
and
pop
sbb
bound
sub
je
cmp
je
test
xchg
mov
dec
pop
ret
jae
dec
std
rcr
shll
mov
xor
shrd
stos
mov
jno
adc
cmp
bound
gs
into
fmull
adc
sub
xor
mov
rclb
sahf
add
rcll
std
jmp
add
movsb
adc
pop
or
pop
cmpsb
sbb
loopne
mov
sub
xchg
fiadds
das
inc
adc
stc
imul
loope
dec
sbb
iret
sub
and
add
outsl
shrb
cltd
push
fwait
rcll
sub
mov
cmpsb
insl
adc
xchg
fstl
lds
push
imul
call
cld
mov
mov
repz
aas
popa
or
scas
insb
jmp
and
jne
imull
jl
out
sbb
jl
leave
out
paddb
adc
fucomip
sti
es
rorl
or
test
xor
mov
in
test
cwtl
cmp
popf
xchg
jo
mov
inc
call
cmp
addr16
cmc
cmpsl
arpl
push
std
bound
dec
fwait
pop
icebp
rol
cld
mov
or
add
mov
rolb
cs
clc
mov
push
pop
push
cs
aaa
sar
add
mov
or
andb
subl
negb
jno
push
lret
mov
mov
mov
pop
adc
fsubp
push
mov
ja
in
cmpsl
and
mov
mov
dec
ss
and
inc
jne
andb
notl
add
dec
jbe
ja
inc
rcrl
mov
xor
sub
ja
sbb
outsb
or
cmpsl
scas
and
pop
mov
pop
cmp
xchg
repz
inc
sbb
mov
outsl
out
mov
jae
or
xchg
fimuls
push
fcoms
mov
adc
lock
push
shll
stos
or
inc
sbb
cwtd
adc
and
xor
hlt
push
iret
in
inc
lods
mov
xor
mov
add
mov
push
xchg
movsb
mov
je
loopne
dec
stos
mov
test
shrl
xchg
loopne
in
out
int3
and
outsl
pusha
xchg
add
xchg
add
sub
lock
mov
je
add
icebp
or
inc
pop
xchg
jne
dec
push
jo
pop
popa
push
sbb
push
scas
cmc
test
in
and
fcomps
add
daa
and
adc
test
lods
call
cmp
and
cvtps2pd
inc
iret
fnstsw
mov
ficoms
push
mov
jmp
popa
xor
pushf
mov
xor
das
aaa
or
inc
outsl
lea
inc
out
lods
mov
and
mov
mov
and
test
cmp
pop
pop
in
dec
jecxz
stos
or
lock
repz
movsl
or
repz
imulb
or
xor
xchg
xchg
sahf
int3
and
jmp
add
jns
cmp
fmull
nop
rclb
mov
fwait
int3
mov
xchg
sub
jmp
into
pushf
aad
mov
dec
xchg
mov
dec
and
mov
fs
dec
ret
sub
loope
shll
cld
push
aas
xor
push
popf
and
jno
pop
data16
fcoml
stc
dec
pop
outsl
adc
dec
clc
je
test
jmp
imul
pop
scas
jbe
jbe
mov
jo
mov
sub
mov
sarb
movb
pusha
inc
sub
mov
call
mov
push
sub
lret
int
mov
add
enter
pop
nop
std
push
pop
inc
sub
test
mov
lods
mov
ret
sbb
aam
popa
sbbb
xor
repz
sahf
sti
lret
aam
xchg
dec
mov
fwait
cmp
pop
xchg
pop
hlt
das
mov
dec
fs
xor
mov
rcll
jno
sti
icebp
inc
mov
mov
push
dec
dec
pop
sbb
repz
pop
or
push
out
mov
jp
leave
addl
mov
je
cwtl
sub
sahf
hlt
pusha
lret
adc
shl
insb
inc
sub
sahf
jne
addr16
xchg
cmp
or
cli
or
jb
xchg
ret
rolb
pop
nop
mov
add
leave
lahf
jl
lahf
sbb
int
fnstcw
jp
cmp
cmp
push
stos
arpl
imul
idivl
stos
dec
sub
sbb
dec
fnstenv
cmp
outsl
xchg
jg
fstl
jge
mov
jbe
gs
mov
pop
cli
adc
or
sbb
mov
push
movsl
sbb
sbb
push
pop
imul
aas
ds
cmp
out
hlt
mov
cmp
shlb
cmpsb
dec
jl
adc
std
push
sbb
lret
int
imul
cmp
shlb
gs
incl
insl
pop
out
into
fists
push
roll
outsl
pmullw
test
jmp
mov
adc
jmp
test
lock
mov
mov
pop
loop
repnz
xlat
ror
mov
push
in
idivb
push
push
adc
sub
call
push
mov
ss
test
jbe
repnz
adc
shll
or
rcl
or
adc
sub
icebp
mov
lods
and
push
mov
jns
xlat
icebp
js
push
mov
int3
nop
enter
in
imul
frstor
pop
cwtl
and
dec
aam
popa
jb
outsb
lock
mov
xchg
cmpsb
inc
sbb
pop
mov
ret
dec
mov
sbb
dec
push
popf
lahf
in
notl
jb
rclb
sub
and
jns
lock
aas
inc
arpl
aad
adc
in
jbe
push
xchg
inc
push
and
push
inc
cmpsl
mov
arpl
adc
adcb
jle
rorl
inc
bound
out
dec
gs
or
adc
call
into
push
jae
test
hlt
or
aaa
les
push
adc
js
mov
jmp
xor
popf
adc
lret
jl
sbb
cld
or
aaa
mov
add
icebp
rcl
mov
cmp
dec
lea
mov
out
jg
adc
or
inc
inc
into
mov
leave
pop
mov
dec
mov
and
mov
ljmp
mov
or
add
cld
shll
mov
xor
add
sbb
fidivrs
cwtl
push
push
cmp
in
mov
and
push
insl
push
mov
aas
aaa
out
xchg
iret
xor
jne
jge
adc
outsl
sub
mov
xor
adc
mov
fsubs
imul
aas
test
lds
jae
xor
push
call
pop
cltd
orl
aas
insb
mov
xlat
and
mov
in
jbe
dec
lods
mov
pop
pop
xchg
xchg
loope
adc
sub
add
dec
mov
xor
aas
and
sbb
adc
sbbl
rolb
stos
lret
das
cmpsb
sbb
bound
adcb
adcb
movsl
aad
outsl
dec
mov
xchg
repz
cmp
lods
lods
mov
xchg
je
and
shl
mov
icebp
mov
xchg
mov
xchg
mov
adc
mov
imull
lods
sbb
js
add
adc
subl
or
cmp
scas
rorb
jmp
xchg
icebp
dec
pushf
mov
cmp
ret
or
cli
lret
repz
movsl
int
inc
in
notl
imul
jge
hlt
testb
ja
sahf
push
ljmp
mov
es
andb
aam
xor
and
adc
mov
imul
lret
and
out
je
mov
mov
xor
repnz
jge
sahf
mov
pop
es
scas
jns
popf
jecxz
push
mov
fsts
pop
xor
mov
and
dec
or
xchg
xor
shll
xorb
lds
mov
mov
popf
sub
stc
daa
in
fs
std
jbe
pop
inc
dec
sbb
push
test
bound
out
loope
jne
xchg
push
shll
mov
movl
lahf
cmp
stos
mov
ret
pop
and
mov
aaa
adc
jg
sub
in
mov
sub
xchg
gs
sub
add
out
icebp
inc
mov
scas
mov
pusha
clc
retw
mov
outsb
add
dec
push
xchg
xor
add
sti
mov
dec
loopne
adc
lcall
xor
lahf
xchg
fcoms
adc
out
test
fnstsw
sarb
or
subb
mov
mov
bound
or
insl
fdivl
xor
ja
push
sub
into
cmp
sahf
enter
or
imull
lret
cs
ja
subl
imul
and
xorb
jb
gs
inc
fs
cmpsl
adc
shr
aad
inc
dec
fbld
fnsave
subb
xchg
out
jecxz
xchg
movsb
movsb
jb
lahf
mov
cmp
repz
sbb
test
mov
rorl
jno
mov
into
jnp
adc
xlat
lds
ror
cmpsl
sub
test
add
lock
enter
aas
push
add
orl
ds
fucom
mov
into
outsl
je
stos
aam
lret
orb
loop
in
rorl
xorb
fucomp
jnp
push
adc
fs
xor
push
es
fldcw
gs
sbb
ficoml
add
std
adc
sub
outsl
mov
jns
imul
and
and
fcomip
pushf
mov
jne
fidivs
adc
and
adc
add
cmp
enter
adc
scas
insl
add
sub
ja
mov
mov
outsl
or
mov
cmpsl
call
sub
inc
lock
mov
mov
loope
xor
scas
mov
cmpsl
icebp
lods
push
and
dec
mov
lcall
pusha
idivb
jne
inc
insb
pop
gs
out
jp
int3
scas
xlat
sub
pop
xchg
cmp
mov
mov
lahf
movsb
inc
and
adc
and
sub
inc
jbe
mov
mov
and
cmpsb
xchg
jmp
push
inc
xchg
xor
jmp
inc
mov
jno
dec
popf
push
jecxz
es
bound
and
lret
pop
add
dec
inc
inc
add
ror
and
inc
clc
add
push
andl
mov
xchg
push
jns,pt
xchg
jecxz
sbbl
mov
dec
pop
scas
outsl
adc
mov
add
fildll
insb
lods
pushf
sbb
add
sub
sbb
les
add
andl
add
push
es
xor
dec
mov
movsl
lcall
stos
sbb
pop
ss
jecxz
pop
addr16
sbb
mov
mov
scas
cld
arpl
jb
pop
lods
add
pop
call
dec
mov
lret
insl
or
inc
popf
insl
or
xor
lahf
les
or
pop
mov
int
or
mov
into
jle
xchg
push
mov
push
andl
repnz
sub
mov
or
xchg
push
xchg
inc
xchg
pop
push
xlat
mov
mov
inc
js
jne
push
or
inc
pop
push
imul
popa
xor
in
aad
clc
test
dec
icebp
pop
mov
outsl
pusha
sub
push
mov
adc
xchg
bound
cmp
jnp
xchg
mov
call
dec
and
mov
stos
adc
inc
imul
bound
sub
or
push
lods
mov
jmp
sbb
jge
jmp
dec
push
pop
imul
mov
sbb
mov
pop
add
icebp
scas
xchg
popf
dec
out
push
in
xor
pop
clc
or
fcomp
es
push
call
and
push
pop
push
or
icebp
fisubrs
lret
and
jge
sbb
pop
inc
into
ja
cmp
dec
movsl
gs
mov
xchg
shl
adc
mov
shlb
sbb
out
xchg
push
push
mov
jns
jns
dec
adc
cmc
xchg
orl
cmp
in
in
rcl
or
loopne
das
jge
jmp
loop
rclb
mov
adc
fsubs
out
inc
mov
aaa
and
jle
shll
stos
pop
adc
fldln2
and
fildll
shlb
push
hlt
push
sbb
fistpll
xlat
mov
dec
pushf
outsb
push
arpl
imul
cmp
add
dec
xchg
adc
test
mov
in
fldl
rcr
adc
fisubs
push
out
loopne
scas
or
sub
cmp
ss
push
cmp
sbb
xchg
fdivs
pop
sub
sub
mov
mov
data16
insl
call
mov
and
sbb
imul
add
not
fiaddl
jbe
testb
test
jmp
pushf
in
jecxz
and
sub
xor
fwait
jecxz
fnsave
outsb
mov
jbe
or
scas
adc
das
dec
or
xor
roll
nop
adc
cmp
xor
push
dec
xor
pop
adc
mov
push
bound
cmc
sub
sub
lods
jbe
mov
xor
mov
fs
insl
stos
scas
mov
fsubrl
aam
cmpsl
push
movsl
xor
aam
adc
das
daa
or
xchg
cli
cmpsl
sbb
popf
and
sbb
ds
sbb
sbb
add
shrb
dec
add
std
mov
mov
loope
ja
sbb
in
lock
adc
push
push
or
add
and
jae
test
or
je
jbe
cld
add
and
popf
sbb
cmp
mov
stos
shl
je
pop
popa
mov
adc
inc
and
idivl
jecxz
bnd
jb
push
inc
xchg
lea
pusha
inc
jns
sbb
xchg
stos
movsl
rcll
xor
xchg
mov
add
rcll
repnz
inc
xchg
or
and
pop
xchg
jg
xchg
lds
xchg
push
jo
fldl
pop
mov
jp
imul
fidivs
jo
into
xor
jp
pop
ja
sarb
pusha
rclb
lds
lahf
inc
xor
push
repnz
iret
xor
sbb
sub
mov
jg
sbb
or
pop
pop
jne
mov
in
stc
push
mov
inc
and
je
scas
packsswb
xor
aam
add
dec
jnp
filds
xor
mov
pop
pop
out
push
push
xor
jae
fldcw
test
mov
jmp
inc
and
mov
sub
std
out
cmp
sbb
dec
inc
fimuls
jae
dec
icebp
pop
sbb
jb
scas
pop
jo
fisubs
adc
mov
in
jno
jge
out
push
push
xchg
in
push
stc
cmp
add
xor
aad
mov
and
mov
fisubs
pop
mov
xor
inc
aam
sub
orl
mov
fstpl
sub
add
sahf
mov
je
in
jnp
and
sub
adc
xchg
cmpsb
jnp
hlt
xlat
dec
sbb
mov
ficomps
dec
add
out
pop
ret
iret
aaa
mov
and
jg
mov
inc
and
cmc
dec
inc
xor
out
push
fnstsw
mov
ljmp
mov
insl
xchg
jmp
scas
or
and
xchg
xlat
insb
cld
adc
add
pop
add
out
mov
frstor
stos
bound
dec
fdivrs
sbb
push
mov
fsts
lods
or
jl
fwait
dec
test
ss
leave
test
or
or
pop
or
xchg
dec
jno
pop
jmp
arpl
or
in
mov
loopne
insb
fwait
adc
js
mov
test
sub
sbb
mov
fdivrs
jg
addl
push
jb
imul
adc
dec
jl
mov
int
or
test
push
push
or
pop
mov
xchg
xchg
stos
cmp
sub
sbb
test
mov
lcall
sti
mov
mov
lock
push
lds
or
push
sbb
in
movsb
dec
cmp
cmpps
jge
lock
test
jg
xor
jbe
cmc
scas
pop
adc
mov
jle
mov
ja
out
test
cwtl
and
sbb
xchg
pushf
add
cmpsl
test
ljmp
aas
and
inc
push
popf
inc
xor
lcall
hlt
testl
int3
repz
cli
inc
cli
jae
xor
repnz
cmp
dec
aam
les
clc
sbb
aad
or
sub
es
cltd
movsb
jo
sub
and
pop
dec
sbb
and
das
inc
and
dec
pop
inc
imul
inc
ljmp
push
pop
mov
xor
lret
call
adc
sbb
xchg
iret
cmp
dec
xchg
dec
add
rcrb
div
add
or
mov
add
lea
outsl
dec
inc
mov
or
in
pop
clc
lahf
xor
and
sub
push
or
in
or
es
popl
push
scas
je
push
lods
lret
inc
cli
dec
icebp
out
xchg
fisttpll
aas
rclb
xchg
inc
xor
push
xor
test
icebp
add
fnstsw
or
inc
jbe
out
shll
sahf
lock
pop
cmc
ljmp
mov
mov
pusha
and
inc
xchg
mov
adc
push
pusha
mov
dec
popl
mov
insb
enter
imul
mov
clc
inc
or
mov
xchg
cmp
test
popf
int
rolb
in
out
fs
int3
sbb
dec
xor
jns
or
jecxz
pop
fadds
push
inc
clc
xchg
xor
cli
cmpsb
add
add
inc
div
mov
cmp
aam
and
cmpsb
call
popf
cmpsb
lret
mov
sarb
in
repz
inc
jle
sbb
pushf
negl
aam
test
rcrl
movlhps
jb
push
and
mov
test
mov
inc
lret
movsb
aaa
jmp
shrb
sbb
sti
mov
bound
inc
insb
negb
jg
mov
dec
inc
sub
lds
jg
sub
adc
roll
ds
in
pop
push
adc
int3
out
inc
movsb
adc
movsb
xor
lods
xchg
jl
or
lret
push
adcb
repnz
xor
addr16
sbb
adc
sahf
sahf
dec
jecxz
pop
fstl
cmp
jge
push
lds
outsl
clc
adc
movsb
lcall
pop
arpl
arpl
mulb
push
loopne
xchg
fnstsw
xor
lods
clc
iret
leave
push
popf
and
dec
xchg
inc
pusha
js
es
pushf
shl
ficomps
mov
mov
dec
out
testb
jnp,pt
sub
repnz
push
pop
popl
loope
dec
push
cmc
pop
xor
pusha
cmp
mov
mov
outsl
pop
rcll
lods
outsb
xor
loop
lods
test
pop
xchg
mov
loope
pop
inc
and
inc
fdivr
les
and
clc
rcr
dec
dec
jno
es
icebp
xchg
rol
int3
stc
rclb
mov
hlt
inc
jmp
xchg
dec
pop
push
or
sbb
test
aad
in
stos
insb
xor
dec
ja
and
push
iretw
push
push
mov
mov
mov
push
xchg
mov
sub
pop
mov
iret
test
jg
das
xor
mov
in
rcll
adc
in
pop
push
fbstp
std
push
inc
xor
add
dec
or
std
leave
stos
pop
pop
xchg
cwtl
push
mov
mov
lods
stos
and
pop
movsb
scas
daa
out
out
push
cmc
and
cltd
adc
out
idiv
and
mov
cmc
pop
and
xor
iret
cmp
push
sbb
outsb
daa
add
xor
aaa
shlb
mov
adc
aaa
les
add
xor
fsubrl
push
ss
xchg
or
std
mov
hlt
imul
jbe
repz
repz
cmc
outsb
pushf
cmc
or
gs
mov
push
pop
das
aad
pop
inc
leave
mov
adc
fs
add
ljmp
int3
push
adc
mov
sbb
aad
mov
test
xchg
pop
and
jns
std
lods
out
push
jle
push
lods
mov
mov
dec
or
dec
cwtl
fiadds
lods
nop
dec
lea
fcompl
pop
insb
add
push
and
nop
nop
je
push
andb
pop
or
xchg
adc
lret
add
push
sub
push
dec
ret
mov
lahf
mov
stos
cmp
add
xorl
jno
les
xchg
mov
movsl
pop
pop
shl
in
sahf
fimuls
aas
jo
hlt
sub
or
xlat
push
mov
xor
xchg
push
pushf
pusha
fldcw
arpl
cmp
rol
loop
dec
int
mov
sbb
fiaddl
dec
pop
add
fcoms
idivl
sub
mov
rcll
ss
rolb
push
mov
or
ror
fnstcw
xor
test
mov
mov
sbbb
pushf
sub
lahf
js
cmp
pop
jg
mov
inc
jmp
lcall
out
mov
sbb
mov
stc
idivb
mov
mov
dec
ds
ret
movsl
aas
jnp
testb
stc
nop
rclb
push
mov
inc
jge
ja
lds
addr16
or
mov
lock
mov
dec
xlat
jge
xchg
or
pop
mov
les
rcrb
inc
imul
mov
cmp
lock
movsl
pop
in
loopne
test
pop
sarb
jbe
lods
adc
dec
rcrb
pushf
xor
repz
fdiv
push
xchg
push
sub
andb
jb
mov
jbe
sub
stc
mov
pushw
sbb
bound
lock
dec
sbb
cmpsl
lds
jmp
call
mov
out
jg
fbld
icebp
shl
in
shlb
mov
add
in
jp
push
ja
and
shl
xorb
loopne
loopne
cmp
test
cmpsb
inc
mov
pop
xor
cltd
lahf
pop
fstl
pop
xor
xchg
notb
lock
add
ficomps
inc
push
add
push
dec
out
push
outsl
sti
mov
dec
int
add
mov
xor
inc
xor
dec
in
jle
and
jo
das
jo
fstpl
jb
fiaddl
jg
xchg
xchg
sub
mov
insl
inc
xchg
addr16
cwtl
cmp
icebp
andb
dec
jae
jg
mov
push
xchg
ds
scas
or
ret
shl
movsl
imul
ret
xchg
inc
gs
bound
pop
out
mov
scas
dec
rclb
lods
xor
pop
push
xor
xchg
stos
daa
divl
push
sbb
or
dec
and
insb
push
cmp
scas
pop
sbb
mov
mov
pop
fisttps
les
outsb
hlt
push
adc
inc
mov
dec
mov
and
add
insb
jl
ljmp
arpl
mov
aad
pop
in
sti
xchg
mov
pop
out
and
inc
jl
pushf
in
xor
aam
inc
cmpl
lock
fldl
lea
xor
test
mov
cmpsl
imul
add
dec
roll
sar
rclb
mov
jle
stc
inc
lret
cltd
cwtl
xlat
xor
inc
hlt
mov
cltd
cmc
add
sbb
xchg
or
xor
repz
fwait
pop
leave
test
xchg
flds
mov
gs
pop
pop
adc
lahf
test
mov
cmp
mov
cmpsb
adc
loope
xor
pop
dec
icebp
xchg
shlb
or
jecxz
pop
add
push
or
dec
scas
push
xlat
add
inc
movsl
decb
bound
decl
adc
les
fldt
cwtl
push
pusha
cmp
out
movsb
adc
fsts
push
test
cmp
fisubs
popa
or
pop
mov
or
cwtl
out
dec
adc
cli
cltd
sub
rorb
adc
mov
push
lcall
xor
jge
and
ss
aam
mov
mov
jl
adc
pop
inc
jecxz
mov
insl
and
jo
popf
mov
imul
or
sub
insl
cld
in
dec
mov
xchg
imul
mov
sub
or
cmp
mov
mov
jl
aas
pop
ret
push
inc
int
mov
push
rcrb
xchg
andb
cld
push
or
mov
inc
xor
insl
enter
xor
es
inc
fucom
iret
sub
push
sbb
inc
rcll
sub
rcrb
cmp
shll
pop
adc
xchg
xor
dec
sbb
sub
xchg
fistps
repz
bound
add
jl
xchg
mov
mov
dec
mov
push
xor
add
fstpt
mov
xor
roll
icebp
inc
inc
test
cmpsl
ret
pop
jecxz
lcall
test
adc
cmp
adc
jns
xchg
or
xchg
xlat
push
imul
xchg
subl
imulb
xorb
in
push
mov
inc
mov
insb
and
jle
cmovbe
test
ljmp
insl
xchg
sub
mov
mov
gs
jle
or
or
dec
test
and
xor
movsb
sbb
and
xchg
aad
dec
fcompl
add
sbb
adcb
icebp
and
xchg
sub
xchg
mov
adc
mov
insl
mov
inc
mov
xor
adc
bound
out
fs
xor
mov
add
cmp
pop
scas
out
xchg
add
in
mov
pushf
adc
scas
xchg
sbb
jg
pop
sbbb
scas
jb
add
je
test
out
xchg
mov
pop
rcrb
xorl
mov
add
jae
das
aam
fdivl
push
mov
loopne
fiadds
idivb
pop
sbb
mov
inc
xorb
stc
sbb
fwait
cmc
jmp
xchg
mov
xchg
cli
push
repnz
je
out
enter
das
sbb
mov
out
inc
adc
pop
arpl
into
and
pop
adc
incl
cmpb
jo
imul
sarl
fisttpl
in
stos
out
test
add
cmp
xchg
dec
fcomip
push
mov
repz
and
pop
xchg
dec
xchg
andl
jb
jne
clc
outsb
aam
inc
pop
popf
or
leave
cld
inc
aaa
scas
int
mov
push
nop
dec
pop
xchg
dec
pop
fwait
movsl
push
rcr
mov
loope
pop
int3
xchg
daa
mov
or
cmp
add
jne
add
xor
and
and
lret
inc
in
or
cmp
call
out
into
jp
jmp
jg
sub
and
push
icebp
fcomp
dec
cmp
outsb
cwtl
jno
je
inc
dec
jmp
and
push
cmp
sbb
and
xchg
ds
fidivrl
mov
xchg
enter
je
jmp
in
jmp
xchg
icebp
xchg
out
pusha
and
mov
subl
mov
cmc
ret
mov
jle
sbb
dec
fdivl
adc
fsubs
rcrl
call
mov
cltd
pop
les
pop
pop
cmp
pop
fidivrs
ss
add
ljmp
xor
sub
push
cs
push
std
inc
shlb
jo
and
jle
mov
dec
xchg
aaa
add
mov
sti
push
sub
adc
in
scas
idivl
mov
loopne
push
dec
push
mov
fbstp
and
lret
jp
sub
inc
pop
out
pushf
aad
imul
push
sub
cmc
insl
in
and
enter
add
mov
sbb
lret
ret
fists
movsb
push
call
je
lods
lods
fstpt
dec
sti
pop
sub
leave
ret
sub
or
push
cmp
and
mov
shr
rclb
fisubs
jbe
fidivl
pop
outsl
inc
mov
mul
es
sbb
jp
sub
mov
rcl
int
xchg
test
int3
jb
mov
andb
inc
hlt
lahf
outsl
scas
inc
fildl
les
pop
shll
ficoms
pop
sahf
jb
mov
mov
cmpsb
cmpsl
scas
push
stc
xor
or
jno
inc
xor
data16
push
mov
dec
and
cmp
push
scas
mov
test
xchg
rcl
mov
clc
loop
and
inc
fnstcw
and
lods
ljmp
aaa
pop
and
scas
cmp
cmpsb
or
cltd
jp
std
cmp
mov
hlt
ss
adc
pop
inc
sub
push
jg
lock
lret
stos
jge
pusha
mov
in
ss
fisubl
stc
push
arpl
cmpsb
push
cld
jo
push
or
and
mov
in
cs
ret
or
int3
push
mov
inc
xor
stc
mov
adc
xchg
stc
sub
sub
inc
movsl
inc
and
push
xor
out
xchg
sub
mov
imul
adc
les
rolb
les
stos
and
into
setnp
in
mov
and
dec
cmp
cltd
je
jg
xor
mov
sbbb
mov
dec
inc
inc
mov
inc
inc
pushf
inc
xchg
cmp
das
cltd
cmp
in
adc
jno
adc
adc
lahf
adc
lahf
movsb
push
arpl
nop
mov
addr16
add
dec
add
sbb
mov
jg
das
mov
pop
lret
adc
cwtl
add
mov
rorb
ret
dec
mov
sbb
jne
subb
outsb
xor
xchg
fldl
movsl
fbstp
iret
sub
out
dec
aam
and
arpl
movsl
jbe
je
leave
and
or
mov
mov
sarb
popf
outsb
add
mov
hlt
cli
scas
sub
out
push
addl
sar
stos
setb
shrl
cmp
decb
lock
and
ljmp
mov
and
jp
fcmovnb
dec
sbb
or
xor
aad
inc
dec
inc
psubq
push
jo
mov
inc
sbb
lahf
pushf
fisttpl
repz
je
mov
test
pop
test
sbb
push
pop
push
fwait
cmpsl
push
int
dec
adc
notb
dec
and
repz
pop
clc
out
inc
push
inc
lret
mov
or
or
hlt
sbb
shrb
data16
addl
iret
mov
add
pop
push
pop
dec
in
jnp
roll
sub
pop
das
and
pop
sub
orl
push
and
push
jle
sbb
incl
xor
in
jge
jnp
push
sbb
ret
push
push
cmp
shlb
icebp
lcall
in
dec
mov
add
cmpsb
add
mov
fwait
sbb
add
jecxz
setae
or
mov
mov
or
pop
sub
popa
dec
cmpsb
inc
ret
pusha
sub
and
loope
test
and
push
jmp
push
and
int
cmpb
insl
jecxz
cmp
popf
mov
fstp
ffree
push
je
addb
xchg
dec
dec
call
inc
das
dec
fldt
lods
mov
add
sbb
enter
daa
pop
push
add
popa
popf
inc
fwait
mov
fcoml
adc
jb
sbb
mov
xor
mov
repnz
icebp
loopne
cmp
dec
into
jne
xorb
inc
pop
mov
xchg
mov
loopne
add
nop
shlb
add
adc
pop
mov
bound
daa
jbe
movsb
dec
test
xor
insl
cld
mov
mov
xlat
repz
or
ljmp
sub
push
pushf
cwtl
mov
sbb
xchg
inc
and
sarb
xor
lds
xor
cld
or
xor
jmp
pop
jns
sbbl
inc
add
xchg
lcall
in
pop
ds
enter
icebp
xchg
cmp
xchg
sbb
fcomps
cmp
jmp
mov
sbb
jge
mov
jg
jp
fs
cltd
cmp
das
jge
out
cmp
sbb
sahf
sbb
jbe
jg
ljmp
push
jmp
and
ss
xor
orb
stos
ja
sahf
add
add
and
dec
add
sbb
jo
mov
push
sub
outsl
adc
push
pop
cmp
hlt
inc
xchg
shlb
adc
cwtl
repnz
fistps
sbb
cmp
in
push
rol
lcall
mov
insl
lods
dec
iret
inc
hlt
andnps
movsl
popf
aas
adc
mov
jge
jno
dec
dec
xor
push
and
dec
psubd
popa
jmp
cwtl
fwait
xlat
xor
sub
or
repz
enter
mov
fists
lods
cs
ljmp
mov
loop
addr16
ret
roll
inc
mov
xchg
pop
jge
sbb
outsl
sbb
jno
aaa
or
cmpsb
adc
inc
rcrb
stc
mov
or
cmp
cltd
sti
adcl
leave
popf
xchg
xchg
push
push
xchg
xchg
mov
add
push
psllq
aad
and
mov
lock
hlt
add
jno
jmp
mov
dec
inc
mov
pop
fsts
mov
sarl
and
cmpsb
shrl
int
sub
jecxz
or
sub
dec
cmp
mov
mov
xlat
push
sub
iret
mov
mov
pop
shl
rorb
mov
aaa
lock
or
aas
jl
xor
out
jp
push
cmpsb
rol
mov
stos
leave
clc
andb
das
xor
icebp
cmp
call
aas
jno
in
popf
jmp
rolb
aad
mov
das
cltd
scas
add
sub
pop
sub
pop
or
xor
lds
mov
mov
jp
push
dec
test
mov
add
test
push
lods
ret
inc
add
push
jnp
xchg
cmpsb
stos
adc
mov
shl
jmp
mov
insl
mov
fstl
or
push
das
in
call
and
inc
inc
ja
sub
fiadds
out
ja
jge
pusha
out
mov
popf
sbb
pusha
and
push
loop
aas
cmp
xor
or
popa
incl
daa
test
pop
add
mov
ret
cmc
loopne
pop
push
inc
xchg
imul
fiaddl
mov
inc
push
jmp
loope
push
mov
and
sti
mov
adc
dec
xchg
lds
sahf
and
mov
xor
or
mov
call
pusha
cmc
aad
lock
adc
out
rorb
adc
pop
out
push
frstor
ror
dec
std
fwait
lea
pop
and
pushf
dec
lret
scas
push
pop
jnp
faddl
pop
seto
outsb
inc
mov
je
ret
leave
in
and
sahf
mov
mov
jl
sbb
cmp
mov
movsb
jp
out
movsb
push
and
out
push
push
mov
mov
jb
ds
jl
ret
and
leave
sbb
mov
out
and
mov
repnz
and
arpl
bound
pop
push
movsb
jmp
lods
jp
mov
pop
mov
mov
push
cmp
rolb
inc
dec
mov
pop
or
mov
jo
jge
sub
sar
cmc
pop
xchg
pop
mov
sbb
inc
sbb
nop
dec
test
lret
xor
pop
jns
pop
push
mov
cwtl
daa
arpl
pop
xorl
sub
xor
push
pop
stos
sahf
push
andb
popf
pop
mov
mov
insl
fdivl
dec
push
xor
or
inc
jg
mov
shr
mov
jo
and
xor
pusha
pop
bound
or
cmp
jge
cld
mov
int
or
xchg
aam
pop
pop
jae
cltd
dec
sarb
sbb
and
mov
icebp
dec
mulb
lds
ret
push
xor
pusha
es
aas
cmpsl
or
movsb
test
cmpsl
lahf
mov
repz
add
xchg
xchg
dec
jmp
pop
stos
std
push
push
pop
jmp
inc
add
pop
fwait
test
add
push
fdivr
jne
jns
enter
aad
sub
jae
scas
mov
inc
push
aas
adc
sbb
mov
adc
inc
es
data16
cmc
sub
or
sar
push
pusha
mov
xor
icebp
xor
and
pop
dec
icebp
repnz
push
push
dec
cpuid
dec
shrl
and
pop
arpl
arpl
jns
pop
mov
out
push
mov
jne
jnp
mov
inc
inc
mov
jmp
jae
push
dec
roll
add
sub
mov
mov
or
xchg
mov
add
xor
inc
sub
enter
adc
mov
gs
add
and
in
jne
push
pop
out
gs
inc
add
in
dec
cld
push
ret
aad
pop
ret
xchg
and
cmp
pushf
dec
cs
mov
enter
mov
clc
push
loopne,pt
adc
push
cltd
popf
rclb
leave
scas
add
pop
pop
mov
data16
cmp
mov
lea
out
mov
jmp
fiadds
jno
push
push
xor
jmp
sahf
pop
in
and
mov
jl
loop
mov
scas
xchg
push
xor
pop
and
jb
out
xchg
add
roll
ret
mov
stc
push
test
xor
mov
out
out
dec
repnz
insb
inc
mov
jae
mov
cmp
in
xor
mov
pop
mov
cmp
outsb
rolb
xchg
jno
sahf
popl
jmp
int
sar
stc
popf
loop
push
sub
gs
popf
sahf
inc
mov
adc
xchg
lods
ret
inc
adc
stc
cmp
xchg
mov
outsl
pop
dec
xor
mov
and
xlat
fldenv
imulb
pop
int
das
ja
mov
test
inc
xchg
outsb
shlb
inc
cmp
loopne
dec
sub
rcrb
xor
ljmp
sbb
mov
xor
icebp
mov
dec
mov
popf
fucomip
cmp
int3
or
push
mov
inc
sbb
addr16
lea
jmp
out
inc
bound
or
shrb
loop
out
pop
mov
sub
push
sbbl
pop
icebp
addr16
outsb
js
mov
imul
dec
test
je
dec
xchg
mov
iret
cli
adc
xchg
aad
ficomps
jecxz
call
adc
outsb
mov
ret
mov
inc
test
bound
out
rcrb
enter
jmp
adc
push
fcoml
jb
add
and
daa
dec
adc
insl
lods
arpl
sub
lods
mov
sbb
fsubr
enter
sti
lcall
pop
setne
inc
xchg
jo
pop
sbb
cld
inc
loopew
out
pop
div
mov
and
inc
loop
sti
out
mov
arpl
out
cmp
mov
sub
mov
xchg
adc
bound
movsl
cmpsl
xchg
or
scas
jne
out
cmc
test
sub
lods
jbe
add
adc
fwait
bound
cmp
add
in
xchg
iret
nop
xchg
xchg
mov
inc
push
mov
push
daa
sbb
into
or
xchg
sub
xor
add
pop
or
sbb
cltd
or
cmp
loopne
or
mov
mov
mov
rcrl
out
pushf
adc
push
loope
xchg
add
movsb
cmpb
push
cmp
ljmp
and
imul
test
add
in
mov
scas
sub
mov
xor
cli
adc
sub
shl
in
dec
sbb
insl
dec
jae
and
in
mov
add
push
cmc
call
cmp
xchg
inc
and
rcrb
push
insb
imul
mov
push
mov
push
clc
mov
int3
cmp
jno
fsubs
mov
repnz
stos
dec
and
popf
data16
xchg
dec
jb
fildll
inc
lret
push
and
lods
xchg
mov
push
mov
pushf
sub
cli
mov
test
inc
call
mov
sahf
not
les
pop
insl
mov
mov
dec
jo
inc
into
aam
clc
es
fistpll
jbe
pop
icebp
push
push
inc
fwait
dec
pushf
mov
sub
or
xchg
or
sbb
std
fs
ret
xchg
adc
sahf
out
push
aam
mov
gs
popa
inc
xchg
mov
push
dec
dec
mov
cvttps2pi
or
xchg
mov
call
lea
xchg
and
and
xchg
pop
outsb
sbb
addl
and
inc
add
jb
pop
add
xchg
movsl
or
out
out
insl
xor
sub
in
mov
out
push
sub
fiaddl
test
outsl
and
jnp
xor
stos
pop
mov
cmpsl
jge
pop
jae
inc
ljmp
push
out
loop
test
mov
out
outsb
jp
rorl
ret
sub
dec
rcrl
ja
in
sbb
adc
push
out
push
repnz
lahf
and
xlat
in
rclb
aam
inc
cmp
sti
push
lcall
rep
cmp
adc
insl
nop
inc
sbb
aaa
xor
loop
mov
sahf
scas
divb
scas
fcompl
or
dec
push
dec
int3
or
je
dec
sbb
pmaxub
cmc
push
jp
iret
pushl
in
jb
xor
insb
test
arpl
rorl
scas
loopne
loopne
adc
repnz
mov
push
mov
mov
xor
aad
ljmp
dec
inc
push
sub
sbb
shrl
inc
mov
push
fimull
jae
leave
outsl
xchg
lods
inc
pop
push
aad
aas
push
ljmp
js
js
push
mov
scas
mov
jbe
out
imul
out
movsl
mov
outsb
fcmovb
push
inc
stc
push
sub
das
pop
mov
imul
shrb
cltd
push
add
mov
inc
stos
xchg
in
jno
rcrl
add
fidivs
jl
lcall
push
dec
push
roll
stc
mov
test
sbb
pop
sub
xchg
lock
das
jp
insb
push
add
cmp
popf
clc
add
adc
lds
data16
aas
mov
int
push
and
hlt
addr16
icebp
in
rorl
int
std
scas
cli
rcll
icebp
aad
in
jle
cmp
sub
fs
lods
sbb
xor
xor
in
std
popa
sbb
scas
getsec
out
sti
mov
pop
cs
loopne
movsl
test
fnstenv
pusha
inc
aas
lret
add
ljmp
nop
xchg
push
lret
js
fadds
inc
pop
xchg
adc
stos
xchg
push
clc
xor
out
dec
xor
lods
loopne
xchg
fs
sub
icebp
outsl
pop
jle
testb
mov
add
rclb
and
incl
jne
sti
loope
mov
dec
fwait
test
ss
add
push
push
and
add
ss
pushf
and
enter
ss
in
imul
adc
or
dec
inc
mov
jno
pop
loopne
pop
lret
inc
ror
xchg
adc
adc
and
or
pop
fdivp
iret
cmpsl
cwtl
mov
pop
lret
cmp
cltd
std
sbb
scas
cmp
roll
cmc
dec
stc
lret
push
mov
pop
adc
mov
sub
pushf
and
pop
push
aaa
sbb
and
fbld
clc
pop
sub
cld
xchg
ret
call
incl
cmp
enter
mov
mov
pop
add
in
outsb
aaa
daa
je
enter
and
inc
xchg
xchg
out
lahf
decl
sbb
pop
sbb
daa
dec
push
lea
pushf
mov
imul
push
pop
mov
out
pop
mov
fbstp
lcall
mov
push
pushf
xchg
sub
and
fmull
test
push
sarb
push
inc
int
cmp
scas
scas
xchg
test
mov
and
jmp
inc
sbb
xchg
out
adc
into
pop
addr16
mov
inc
cmp
cmc
xor
sub
sbb
push
jae
movsb
and
mov
xor
inc
cmp
stos
sbb
add
dec
cli
out
test
xlat
bound
mov
jmp
push
dec
fisttpll
icebp
stos
lahf
fwait
xor
out
jns
push
adc
cmp
mov
call
pop
or
and
popl
jo
push
jge
icebp
insl
xchg
cmp
ror
add
jb
aad
pop
add
and
adc
in
test
aas
rorb
lock
das
bound
inc
push
stos
fistps
cmp
add
mov
push
inc
mov
jns
call
sahf
xchg
cli
xor
and
dec
imul
cli
mov
aas
xlat
pop
dec
cmp
test
lea
xor
mov
dec
and
dec
jne
inc
cmpsb
xchg
stos
pusha
pusha
add
fdivl
dec
aaa
dec
ja
add
adc
loope
inc
add
cs
inc
je
cmp
push
cmc
roll
push
sub
mov
dec
dec
push
or
or
mov
adc
sti
mov
gs
arpl
loop
sbb
adc
clc
es
mov
add
push
lret
mov
les
iret
test
sub
adc
lcall
mov
mov
cmp
js
mov
pop
xor
mov
test
sub
das
fsts
fidivl
cli
ret
mov
lds
and
push
test
mov
clc
xchg
mov
adc
cmc
mov
in
pop
xchg
clc
cmpsl
mov
sahf
inc
sbb
cld
bound
mov
sub
popf
dec
test
sbb
mov
outsl
dec
outsl
mov
test
mov
mov
outsb
and
dec
mov
lods
xor
push
ja
lret
subb
cmc
mov
popf
test
mov
ss
in
add
ret
movsb
cmp
dec
mov
mov
lret
mov
int3
fstpt
bound
xor
mov
jne
jge
cmp
adc
pop
jae
fcoms
dec
cmc
jle
inc
sub
ds
jge
inc
and
xchg
xchg
sub
mov
shll
inc
sub
jb
imul
outsl
add
pop
and
cmp
popa
mov
jge
jne
hlt
adc
adc
push
out
repnz
mov
inc
sbb
ror
sarb
daa
mov
out
iret
fs
cmpsb
or
xchg
xchg
cmp
cld
or
mov
lods
sbb
lret
sbb
mov
mov
or
push
into
rcrb
jnp
enter
js
popa
cs
test
push
out
sbb
xchg
in
push
repnz
jo
sahf
adc
stos
sub
sti
xchg
js
inc
push
aam
fldt
cmp
leave
mov
ud2
stos
lahf
std
push
loope
loope
xor
fdivs
xor
daa
or
mov
xchg
add
xchg
int
xor
and
out
push
pusha
and
stc
mov
outsb
push
popf
sbb
xchg
and
dec
loop
or
jno
sub
and
orb
pop
sti
pop
repnz
loop
leave
xchg
rorb
cld
repz
rcrb
sbb
mov
xchg
adc
pop
cmpsl
lods
iret
loopne
pop
mov
rclb
int3
sbb
sub
sbb
push
aad
mov
js
lds
aam
xchg
push
popf
icebp
bound
lea
push
pop
mov
lock
lret
add
jae
repz
and
in
add
bound
pop
cld
xor
push
js
jmp
out
arpl
in
mov
repz
enter
cltd
jmp
cmp
mov
adc
dec
mov
add
push
outsb
loope
aam
jg
xchg
movsb
fisubs
imul
fnstenv
rclb
dec
push
jbe
add
jo
sbb
push
xchg
cmpsl
cmpsl
mov
jp
add
mov
imul
or
push
scas
rcrl
pop
bound
aas
sbb
and
in
bound
jle
je
fiadds
lcall
cld
rcrl
push
sub
mov
xchg
cmc
sbb
cld
imul
jb
fidivs
sbb
lods
je
push
xchg
mov
out
testb
push
arpl
incb
or
insl
lcall
test
mov
leave
jmp
frstor
fldz
rcl
leave
jg
dec
lods
adc
mov
adcl
or
leave
std
push
data16
inc
out
es
dec
and
sbb
sbb
dec
mov
nop
ja
cltd
or
sbb
and
rcrl
lret
xchg
sbb
test
cmp
clc
cwtl
pop
in
rcl
sub
cmp
add
ficoms
push
xchg
and
rorb
jmp
inc
cltd
clc
and
sarl
loopne
pop
loop
pop
notb
mov
gs
repz
add
jb
sub
inc
das
and
hlt
cltd
cmpsl
sahf
lret
outsb
xlat
movsb
sub
stos
fiadds
sub
jle
pop
sub
pop
xor
decb
xor
mov
dec
adcl
imul
adc
test
and
shll
xchg
adc
mov
xchg
adc
adc
add
mov
leave
fbstp
jnp
mov
fdiv
push
and
mov
lods
xor
mov
lret
push
mov
in
shrl
call
adc
into
sbb
hlt
rolb
mov
hlt
outsl
xchg
pop
popa
stos
scas
je
inc
mov
hlt
or
sbb
aas
xchg
cmp
xchg
or
xchg
int3
lcall
jbe
mov
scas
aaa
rcll
dec
stc
in
icebp
cs
lods
scas
loopne
cltd
popa
push
adc
pushf
movsl
mov
or
mov
cmp
das
jb
xchg
std
ljmp
lahf
scas
push
mov
inc
adc
inc
aas
pop
loop
rcll
xor
andb
jns
out
pop
xchg
lods
popa
mov
fadds
push
mov
ss
int
insl
push
sbb
loop
cmp
loope
and
or
int
or
add
push
les
inc
data16
add
imul
inc
push
xchg
pop
xchg
orb
jecxz
stc
test
mov
mov
push
and
jge
sub
sub
and
cld
scas
sahf
and
mov
xor
mov
repnz
std
mov
test
inc
jp
enter
cmpsl
addr16
rcrl
sbb
xlat
iret
leave
jecxz
loope
pop
xchg
or
inc
repz
outsl
cmp
scas
push
xchg
push
xchg
mov
setp
aas
ret
lods
cmp
push
int3
inc
push
imul
xchg
mov
mov
stos
xchg
ja
insb
sbb
sbb
mov
fstpt
movsb
sub
sub
mov
int3
rcl
int3
std
or
stos
lea
adc
inc
sbbl
pop
xor
lds
mov
inc
mov
push
pop
mov
insl
push
cmp
xchg
sbb
lock
lea
pop
pushf
pop
movsb
rcrl
dec
clc
dec
inc
pop
adc
sbb
sbb
lcall
cld
insb
xchg
xor
nop
mov
add
cmpsl
inc
or
sbb
mov
loopne
out
xchg
sub
jae
movsl
jo
shr
cmp
aas
ljmp
mov
xchg
data16
jo
xorps
cmp
movsb
jnp
xor
punpcklwd
in
pusha
jns
xchg
mov
mov
dec
jae
shll
sbb
mov
jmp
mov
inc
mov
pop
add
pop
sti
xlat
push
push
lods
pop
mov
push
ja
imul
pop
push
mov
sub
ljmp
int3
popa
or
movsl
inc
hlt
add
sub
cmp
xchg
mov
jmp
push
out
push
mov
and
insl
sti
adc
jmp
aad
and
pop
adcl
or
sbb
mov
mov
xchg
rcrb
daa
loop
ja
mov
xor
fistpll
lret
cmp
pop
xor
xchg
and
sub
xchg
xlat
or
mov
movups
div
cmc
add
sub
xor
popa
push
iret
addr16
sbb
lods
add
aaa
mov
dec
xchg
xchg
mov
jns
and
ret
inc
xchg
in
adc
xlat
xchg
or
fiaddl
int
or
dec
cmp
scas
push
outsl
out
jecxz
sahf
clc
inc
fidivl
mov
rol
xor
lahf
rclb
loopne
or
or
lock
xchg
scas
cmpsb
inc
inc
sub
inc
nop
add
je
adc
add
adc
shlb
lods
sub
into
xchg
sbb
outsl
pop
fsubrs
imul
ja
sar
mov
inc
out
pop
repz
arpl
insb
faddl
cs
xor
inc
mov
mov
mov
inc
repz
add
fisttpl
dec
pop
mov
mov
and
mov
mov
push
pop
inc
xchg
jmp
sbb
add
cmp
add
rcr
pop
adc
xchg
pop
and
fldt
inc
roll
adc
cmp
push
test
mov
loop
inc
mov
shlb
and
xlat
lret
xlat
xchg
xchg
mov
inc
ficoml
sub
rclb
fistpl
lret
dec
jo
xor
mov
inc
divl
fdivrp
fs
pop
orl
jg
ljmp
adc
push
jp
pop
add
pusha
mov
xchg
dec
mov
inc
imul
xor
mov
repz
out
rcr
fiadds
scas
xchg
xchg
jns
rcll
add
mov
mov
xchg
popa
sti
and
sbb
pushf
or
enter
mov
xchg
dec
mov
insb
mov
mov
pop
in
push
cmp
xor
and
xor
jp
mov
push
and
push
movsl
jae
aam
push
push
cmp
push
aad
lods
mov
push
js
ss
dec
add
jbe
cmc
insl
lock
fwait
cwtl
loopne
adc
shll
dec
jb
sbb
fs
jl
cs
jnp
mov
xchg
pop
add
cmp
xchg
xor
jne
xor
scas
into
sahf
lcall
fwait
or
aaa
xor
aaa
idivb
mov
imul
les
div
bound
push
xor
stc
or
jbe
xchg
mov
flds
out
cwtl
mov
fbld
push
pop
movsl
xor
cmp
push
xchg
jnp
outsb
pop
sub
push
lds
loopne
adc
jp
mov
sub
mov
sbb
adc
adc
pop
dec
data16
add
cmp
push
push
xor
mov
sbb
fldenv
mov
cmp
sti
sbb
add
scas
aaa
jmp
fisubs
loope
mov
repnz
dec
dec
pop
in
cmp
sbb
bound
mov
xor
test
cmc
int3
or
or
jnp
push
xchg
mov
cltd
rcr
mov
loopne
pop
push
std
jmp
xchg
call
or
sbb
out
ljmp
push
xor
ja
mov
cmc
push
push
cmp
mov
fdivl
test
dec
jae
outsb
in
sbb
sahf
mov
sub
xor
aas
mov
mov
pop
hlt
cmp
mov
and
fstpl
lcall
sarl
int
sub
negl
mov
sbb
leave
ret
cmc
push
push
and
ss
cmc
adc
pop
jnp
fisttps
pusha
add
stc
mov
test
dec
stos
scas
mov
mov
sbb
leave
mov
pop
mov
stc
mov
and
adc
push
pop
or
rclb
loopne
fs
pop
out
sbb
loope
dec
mov
fwait
pop
xchg
jno
push
or
dec
stos
cli
outsb
pushf
arpl
jbe
or
fwait
add
mov
dec
mov
mov
jp
in
cmpsb
fmul
sarl
jg
icebp
jmp
push
out
jg
jge
inc
mov
pop
dec
out
lods
xlat
inc
and
mov
mov
lods
cwtl
pusha
pop
andl
mov
outsl
int3
cltd
and
shll
pop
add
jo
clc
scas
ljmp
insl
push
fdivl
xor
daa
or
js
push
xchg
lret
in
pop
adc
lds
test
in
adc
jmp
and
rcll
addr16
daa
sub
xchg
xor
dec
int3
mov
sub
arpl
insb
mov
push
cmp
movsl
sbb
sub
lret
into
insl
jno
xor
mov
mov
test
test
aad
dec
push
jb
pop
nop
sahf
in
lods
xchg
test
xchg
das
cmp
mov
push
out
mov
lahf
dec
dec
fsubs
adc
dec
push
rolb
jmp
mov
fsubrs
and
outsl
rcrl
push
pop
sbb
popf
jne
xchg
jmp
les
jge
fstpt
adc
xchg
insb
xchg
jno
jle
cwtl
jne
das
or
xchg
and
add
jmp
fsubrl
cmp
outsl
inc
jne
inc
pop
jge
js
out
arpl
int3
xchg
inc
shlb
push
iret
dec
and
addr16
xchg
dec
xor
adc
popf
adc
push
pop
mov
ja
adc
adc
lock
negb
pop
mov
xor
repz
stos
mov
xor
jge
mov
rolb
std
ds
insl
xor
adc
notl
xor
xchg
adc
jno
push
test
rorb
orb
dec
mov
and
fisubrl
cmp
pop
adc
fsubrs
mov
cs
loop
push
cmpsl
push
sti
fwait
loop
aas
xor
adc
pushf
std
jle
push
mov
mov
mov
or
jg
sbb
adc
lock
sbb
mov
jmp
adc
push
outsb
insb
jnp
adc
mov
mov
lret
pusha
cmp
out
xchg
mov
xor
jl
cmp
insb
movsl
inc
push
faddl
bound
cld
cmpsb
jmp
out
dec
fbstp
dec
sahf
ja
scas
insl
pusha
ljmp
lret
ror
test
pop
adc
rclb
scas
cmp
xor
rcll
dec
test
addr16
or
jb
mov
add
mov
sbb
xchg
mov
cmc
sub
jle
aad
mov
mov
in
fsubrp
xor
pop
xchg
cmp
push
pop
les
loopne
pop
adc
mov
scas
or
jl
xchg
push
jne
mov
dec
loopne
loopne
push
scas
ds
ljmp
cmp
mov
cwtl
imul
sbb
jne
xor
or
into
test
shrl
das
pop
mov
inc
mov
dec
js
and
jae
add
gs
bound
insb
sti
iret
test
jecxz
dec
add
ss
repz
dec
lret
fs
popa
ja
mov
scas
or
outsb
inc
inc
pop
shld
bound
out
fnstsw
das
clc
in
shll
mov
lahf
inc
pop
dec
scas
rorl
das
jge
sahf
xor
pop
cs
cmpsl
lock
fsubs
cmp
push
into
mov
test
push
push
jle
sbb
sbb
aaa
test
imul
outsb
mov
ffree
add
mov
dec
jbe
xchg
sbbb
dec
stos
dec
adc
push
dec
mov
lret
pushf
fistpl
and
sub
loopne
lods
jmp
xor
pop
mov
sub
in
js
jl
inc
and
push
mov
add
mov
push
imul
insl
int
cmc
xor
cwtl
dec
sbb
inc
add
rorb
adc
mov
inc
and
mov
in
pushf
inc
lods
cld
in
cmp
iret
gs
lods
or
jne
fnstcw
adc
fs
add
cltd
cvtps2pi
fcmovb
cmp
pop
dec
outsb
xchg
inc
xchg
xor
subb
jns
hlt
lahf
mov
pop
cmp
adc
inc
imul
and
sub
mov
mov
fbld
fidivrs
xchg
mov
lds
cwtl
push
and
inc
addr16
negb
adc
push
nop
sub
int
hlt
sbb
test
jnp
jl
insb
or
scas
xchg
xor
scas
insb
mov
dec
jns
add
cld
add
popa
cwtl
and
sbb
outsb
bound
add
lahf
sub
inc
leave
cmp
cmp
iret
mov
and
jecxz
mov
mull
aad
dec
inc
nop
push
push
pushf
ffree
cmc
std
and
int3
iret
test
and
adc
mov
push
movsl
cmp
mov
xor
in
test
sub
xchg
inc
mov
iret
dec
mov
movsl
ror
jmp
data16
repz
jg
mov
scas
outsl
sub
adc
call
inc
and
mov
jg
test
out
mov
xchg
jns
jbe
scas
jne
shl
mov
mov
mov
pop
jno
pop
push
cmp
es
pop
mov
lds
scas
int
push
adcl
mulb
cmp
xor
push
es
cmp
cs
ret
pop
add
push
jge
out
mov
mov
out
pop
nop
cld
gs
push
mov
xor
scas
jno
notb
xor
imulb
addb
mov
fdivr
ljmp
int3
in
stc
dec
inc
pop
inc
fnstcw
js
mov
inc
std
jo
sbb
mov
out
mov
fnsave
cmpsl
arpl
cmc
aam
shll
lea
xor
cs
pusha
pop
fwait
les
cs
hlt
sbb
adc
insl
pop
imul
or
dec
xor
sti
xchg
test
push
int3
mov
inc
mov
pop
pop
nop
cmc
insb
push
jo
bound
pop
dec
enter
sub
push
or
dec
mov
xor
xor
fisttps
daa
sbb
int3
pop
fimull
clc
xchg
mov
add
dec
loope
lods
push
sti
adc
xor
lcall
out
imul
push
xchg
lret
mov
call
fists
data16
and
daa
repnz
rorl
ret
push
jno
cwtl
adc
jae
or
lods
xchg
cld
or
inc
push
adc
jp
cmpl
repz
inc
adc
sbb
ret
enter
jecxz
add
adc
mov
cmpsl
mov
push
shl
inc
pop
outsl
std
lds
sub
lcall
adc
shl
adc
dec
addr16
popf
out
jae
stos
test
adcl
xchg
push
dec
sbb
int3
jl
and
lods
dec
and
dec
and
icebp
stos
xor
fcompl
mov
inc
inc
popa
enter
sbb
sub
testl
and
test
xchg
mov
test
xchg
test
movsl
bound
sbb
movsl
fsubr
xchg
adc
adc
bound
mov
or
lret
fsubr
adc
mov
pop
inc
inc
mov
dec
je
popa
es
push
ret
pop
jl
pop
mov
pop
xchg
imul
das
fsubrs
cmp
add
inc
mov
xor
mov
fisubl
insb
adc
in
mov
mov
jle
into
lret
ds
cld
mov
mov
test
int3
xchg
out
xchg
ljmp
mov
mov
lods
push
mov
cs
stc
jmp
or
push
setge
scas
cltd
sbb
into
aaa
insb
test
sti
mov
xlat
aas
sbb
ret
fcmovnbe
sub
aaa
adc
outsl
xchg
push
repz
mov
mov
test
insb
and
hlt
lahf
orl
into
fdivrl
lahf
push
nop
xorb
xchg
arpl
mov
cmp
into
loopne
notl
out
add
lcall
inc
rcrb
fs
xchg
pop
out
out
xchg
rcrb
xchg
pop
push
jl
aam
jmp
cmove
adc
lret
data16
mov
cmc
jmp
out
inc
xchg
das
outsl
stc
rol
add
je
inc
sbb
jecxz
xor
push
adc
pop
inc
pop
xchg
sub
cmp
cltd
lcall
and
mov
push
into
jecxz
xor
cmp
in
ret
and
das
sti
jno
scas
repz
data16
or
mov
lds
xor
or
jecxz
dec
ja
mov
pop
insl
xchg
shll
cmp
fs
xlat
dec
cmp
mov
add
sbb
das
push
xchg
shrl
jl
mov
lea
lahf
push
movsb
mov
or
ja
sub
sub
addr16
shl
aam
repz
popa
mov
pushf
sub
cltd
mov
roll
stos
inc
mov
jno
jl
ja
cmc
xor
sahf
or
or
and
pop
mov
scas
loope
nop
pop
je
mov
cld
daa
xchg
test
pop
fcmovbe
sub
sbb
mov
cmp
dec
aam
lret
frstor
pushf
dec
inc
mov
push
stos
bound
movsb
jl
dec
fistpll
popa
fisttpl
fistl
fdivl
in
mov
aam
sbb
cwtl
loop
xor
scas
pop
sahf
daa
rolb
and
stos
mov
insl
pop
push
loopne
fdivs
push
andb
rep
xlat
sbb
ret
and
ror
xchg
add
mov
cmc
jae
sarl
sbb
daa
xchg
jae
jp
ucomiss
or
mov
and
fsubrl
mov
push
in
cmp
cmpsb
icebp
and
cmp
std
mov
sbb
je
mov
jbe
xchg
push
mov
and
mov
out
push
int
mov
cmp
push
jae
out
pop
dec
aas
rolb
pop
in
adc
adc
repnz
test
pop
mov
sbb
mov
inc
fbstp
insl
stos
pushf
mov
or
pop
mov
mov
stos
outsl
mov
add
lcall
je
or
xacquire
in
adc
mov
clts
cltd
test
mov
hlt
jno
out
das
aas
dec
fcom
mov
dec
outsl
adc
sub
and
add
icebp
aad
and
sub
shrb
push
inc
call
std
dec
pop
mov
iret
adc
sbbb
loopne
fwait
div
jne
test
mov
insb
les
xchg
sbb
pop
imul
jne
xchg
ljmp
test
xor
mov
dec
xchg
das
sbb
xor
aad
ret
adc
jae
in
cltd
divb
sbb
jae
jno
inc
jo
aad
or
repz
jle
jecxz
jg
pop
push
mov
push
fsubrl
mov
jecxz
jo
cmp
cmpsb
push
xchg
and
stc
mov
xchg
or
ljmp
inc
sahf
popl
arpl
cld
mov
cmp
loope
mov
add
aas
cmpsl
jnp
push
mov
xchg
loopne
mov
mov
in
and
gs
bound
fmull
jae
push
jg
sbb
cs
test
mov
xchg
out
sbb
popf
and
dec
in
daa
fdivrs
pop
ja
dec
inc
add
pop
in
jo
or
sbb
insl
aas
pop
fstpt
call
ja
lahf
adc
dec
mov
jmp
adc
sub
inc
fwait
dec
imul
push
hlt
subl
sub
stos
pushl
hlt
mov
stos
ljmp
gs
mov
movsb
ret
mov
pop
or
call
jnp
cltd
mov
mov
repz
addl
pop
or
inc
pop
mov
jmp
hlt
pop
sbb
fisubl
repz
push
push
mov
clc
push
add
xchg
cmp
push
mov
nopl
lods
sub
loop
xchg
popf
xchg
bound
fiaddl
std
lods
fimull
mov
cmp
mull
and
dec
pop
inc
jecxz
int
jp
enter
popa
cmp
jg
lds
negb
es
repz
inc
dec
fisubrs
sub
sbb
mov
push
inc
dec
daa
mov
sub
in
lock
xchg
jmp
lret
jae
decl
and
and
cmp
pop
add
xor
jo
aad
sahf
in
mov
pop
mov
in
loopne
faddl
mov
jne
mov
in
mov
xchg
les
cmp
fstpl
call
les
mov
xor
add
lret
pop
add
add
jnp
jo
dec
out
das
enter
mov
stos
cmp
sbb
add
jo
cli
adc
xchg
lcall
mov
cmp
xchg
push
mov
outsb
aas
or
inc
dec
enter
call
dec
inc
inc
lahf
scas
nop
or
add
insb
and
out
ja
add
out
sbb
jle
add
enter
push
sbb
push
popa
stc
mov
cli
xchg
fildl
repnz
insl
push
sub
test
xchg
out
test
repnz
cs
cwtl
mov
insb
in
inc
mov
xor
push
mov
inc
lcall
add
lret
xchg
xchg
sub
imul
into
adc
add
jge
pop
sub
xchg
data16
dec
insl
cmp
push
sub
mov
inc
jle
fs
aam
mov
cmp
fnstenv
fdivrl
daa
in
add
sub
aas
ret
and
imul
xchg
push
out
cmpsb
ds
and
mov
scas
std
xorl
inc
gs
adc
pop
push
leave
fisubs
rcrl
mov
fstpl
push
sub
push
imul
inc
mov
icebp
shlb
pop
mov
cli
xchg
enter
sahf
jl
rcrl
dec
nop
adc
adc
fnstsw
push
mov
stos
mov
push
push
mov
repz
xchg
out
gs
xor
orb
pusha
xchg
mov
pop
test
test
call
sub
lcall
dec
scas
xchg
faddl
inc
mov
xchg
push
rclb
enter
jae
push
aam
shrl
sbb
loopne
xchg
stc
mov
dec
pop
pop
pop
sbb
ret
push
faddl
and
les
shlb
pushf
fstpl
push
xchg
into
fs
sarl
jb
xchg
jge
push
enter
xlat
rorl
test
shl
inc
pop
cmp
jmp
dec
pusha
dec
dec
lret
push
mov
pop
lcall
testb
aas
and
inc
fisubl
fisubrs
es
sbb
mov
lcall
in
sahf
lcall
cwtl
jle
les
xor
movsl
pop
jle
movsl
hlt
flds
fsubrs
mov
sub
push
adc
push
pushf
push
gs
push
dec
das
dec
xchg
movsl
xadd
push
sti
dec
sahf
push
psubsw
insl
cmpsl
jg
stos
pop
shrb
xchg
js
push
and
das
imul
add
int3
xor
and
mov
push
cmp
je
out
and
jae
addr16
clc
push
fdivrl
loope
xchg
dec
ljmp
dec
fimuls
inc
fisttpl
leave
cmpsl
nop
pushf
scas
fsubl
sbb
adc
xor
sar
out
fiadds
je
push
paddw
sub
js
push
mov
clc
in
int3
pop
or
cmpsl
iret
into
dec
dec
and
imul
sbbb
cli
inc
lahf
jbe
push
xchg
xchg
rcl
int
mov
adc
add
mov
mov
ret
aas
mov
imul
jmp
push
mov
mov
adc
mov
aas
pop
lret
mov
mov
sub
incb
sbb
mov
icebp
inc
aad
sahf
push
cmp
push
mov
sub
inc
ret
and
stc
inc
call
sti
and
xor
hlt
inc
scas
lcall
loope
faddl
orl
in
sbb
inc
pop
mov
mov
scas
push
xchg
push
and
ss
mov
adc
inc
int
ret
mov
or
jns
ret
inc
or
call
push
jne
jle
test
inc
jmp
pop
movsl
repnz
std
pop
mov
cmp
mov
aaa
bound
fsubrl
inc
fucomi
or
shr
pop
cmp
icebp
xor
incb
lods
mov
faddl
push
lahf
rol
int
bound
xchg
sub
mov
add
rorl
std
fadds
mov
or
inc
xchg
clc
imul
adc
push
jae
movsb
sub
mov
xor
cmp
cmpb
jmp
sbb
ret
and
and
iret
repz
xlat
fnstenv
loope
sub
shlb
cs
aaa
sub
mov
repz
fwait
inc
add
cmp
fsubrl
sub
cmp
test
lcall
scas
sahf
stos
sub
aam
mov
sub
push
xchg
fistpl
mov
sub
dec
out
jge
jmp
mov
push
loop
xor
cltd
dec
jg
fsubrl
aam
push
cwtl
pop
or
ret
scas
insl
mov
cmp
mov
lea
xor
sbb
xchg
inc
int
pushf
dec
mov
inc
inc
ret
xor
dec
pop
jo
cmp
mov
icebp
loopne
xlat
in
test
cmp
div
inc
or
xchg
cmp
sub
push
aas
mov
lret
pop
jb
leave
jno
push
pop
shrb
push
pusha
jbe
push
loop
test
scas
mov
sub
imul
hlt
or
mov
inc
sub
pop
cld
sub
cmc
shlb
bound
xchg
sarb
push
nop
mov
inc
xor
scas
cmp
mov
popf
jecxz
pop
sbb
imul
mov
adc
pop
mov
pop
sbb
sbb
stos
fistpll
popa
movsl
es
out
xchg
lret
pop
lahf
cmp
jmp
xor
cmp
pop
push
in
jcxz
mov
dec
sbb
xor
sbb
outsb
cmpsl
ljmp
inc
insl
sub
adc
pop
or
cli
outsl
mov
imul
mov
negl
push
and
sahf
test
rcr
insb
jne
cmp
test
sahf
and
sbb
sub
or
jl
inc
sbb
push
mov
mov
mov
int
dec
repnz
cmp
pop
xor
subl
xor
inc
shr
cmp
inc
jge
add
cmpl
and
stos
adc
dec
cmp
hlt
mov
pop
sti
mov
sbb
mov
in
and
mov
dec
out
mov
dec
out
or
add
and
lds
mov
iret
aaa
inc
shl
jge
cmp
jnp
xor
pop
mov
nop
cltd
xchg
rorb
mov
fadd
insb
cmp
popf
outsl
lods
je
and
sahf
cmpsb
inc
and
xor
les
mov
or
pusha
shrl
add
int
cmp
dec
test
dec
dec
pop
lds
or
lock
add
pop
test
out
xor
push
lea
adc
adc
xchg
xchg
es
sbb
mov
pop
call
outsb
add
cltd
jle
arpl
sar
xchg
daa
push
sub
and
outsb
mov
push
inc
iret
pop
fcom
imul
frstor
push
jl
push
popf
sub
shr
fcmovbe
cs
cmp
nop
add
cwtl
bound
sub
mov
je
and
repnz
or
add
inc
sbb
adcb
leave
push
movsl
inc
push
roll
cmp
pop
push
gs
popf
mov
push
cs
addr16
insb
pcmpgtb
inc
pop
push
ror
scas
imul
adc
scas
lock
cmp
cmpsb
ds
push
loope
je
pop
xor
notl
data16
shl
pop
push
push
scas
lcall
es
push
mov
lods
hlt
lods
scas
ja
add
cmp
mov
fnstsw
rclb
imul
cltd
lahf
and
xor
ret
push
cs
dec
push
sub
sub
jecxz
in
pop
ficomps
outsl
mov
jge
xlat
stc
sbb
cmc
movd
mov
jb
test
es
sbb
and
xor
addb
pop
xor
shll
addr16
js
fildll
mov
decl
fmulp
out
aad
fs
lods
inc
push
xchg
inc
fdivr
jo
and
mov
sbb
push
mov
mov
jecxz,pn
out
pop
mov
jg
mov
fs
pop
jns
mov
push
adc
arpl
out
je
test
sub
jb
dec
dec
fnstsw
int3
xchg
and
loopne
outsl
icebp
test
dec
mov
lock
adcb
ret
pusha
sbb
or
test
mov
adcl
push
xchg
leave
dec
in
dec
pop
lret
dec
dec
mov
xor
sarb
mov
test
sbb
lea
es
paddw
in
leave
xor
lock
pop
out
loopne
jge
fsubs
les
fcoms
mov
xchg
pop
mov
dec
sbb
jl
je
adc
stc
or
jle
xchg
ficoms
mov
dec
ds
xor
pop
sub
inc
mov
sbb
test
lea
fstpt
out
dec
mov
lcall
popw
mov
inc
js
loop
push
insl
fwait
ss
mov
test
sbb
push
data16
in
and
orb
pop
shll
movaps
pop
dec
jo
mov
lret
idivb
int3
add
out
xor
loopne
fdiv
loopne
pop
incb
jmp
and
mov
pusha
sbb
sbb
cld
xchg
rcrb
ja
sbb
pop
repnz
or
xor
out
insl
push
add
cmc
scas
or
cmp
fsts
push
and
cs
test
je
push
aas
lea
mov
pop
xor
mov
push
rcrb
cmpb
test
mov
sbb
out
xchg
sub
es
lahf
mov
rcrl
rol
rorb
lret
adc
push
xchg
pop
js
lods
lret
and
jae
mov
dec
pop
dec
lods
ja
sub
les
andb
xchg
lret
icebp
jne
out
cmp
arpl
xor
mov
rcrl
push
loope
pop
in
pop
daa
pop
sahf
jno
push
xor
cltd
jb
push
pusha
cwtl
xchg
fsubrl
push
pop
mov
pop
mov
sub
ss
push
adc
or
ror
fs
push
mov
adc
ret
mov
mov
cld
inc
mov
pop
xchg
mov
repnz
or
jl
aaa
xchg
mov
hlt
push
xchg
inc
lahf
sbb
mov
sbb
xchg
cmpb
outsl
icebp
lods
lret
pop
cltd
stos
lahf
lahf
ja
xchg
mov
roll
or
mov
mov
int3
mov
mov
out
sti
rcll
mov
or
ljmp
xchg
into
lret
inc
out
cmp
fstl
jp
cwtl
or
aaa
sbb
cmp
jbe
stos
push
fistps
sub
add
std
shlb
adc
or
mov
pop
jmp
outsb
add
inc
mov
cmc
scas
sbb
aas
std
pop
inc
insl
lea
cmp
ja
sbbb
add
mov
insl
xor
or
mov
jne
test
xor
loop
mov
sub
cmp
xor
push
packssdw
mov
add
add
cmp
sbb
fidivrl
fildll
fsubrs
das
or
xor
dec
and
inc
xchg
cld
mov
idivl
lods
arpl
mov
add
ds
add
xchg
mov
push
loope
mov
sbb
push
imul
jne
test
xchg
or
xor
imul
mov
stos
cmp
sbb
push
aam
xchg
mov
ret
jo
cmp
fcompl
mov
into
adc
lock
cmp
aad
jmp
add
mov
mov
pop
xor
test
bound
xor
pop
lods
insb
xor
cmpsl
insb
inc
jb
lcall
in
xor
pop
push
jge
scas
test
rorb
push
jle
repz
mov
inc
pushf
cmpsb
adc
cs
repnz
push
pushf
sti
ret
scas
shll
push
mov
cli
sarl
dec
das
icebp
pop
xchg
ljmp
stc
or
fs
dec
xor
sahf
or
out
sbb
pusha
in
jb
or
or
aas
pop
cwtl
adc
cmc
mov
addr16
aas
mov
stos
pop
into
and
ss
push
push
mov
arpl
push
cmpsl
cs
jbe
push
cmp
ficoms
les
xchg
mov
cs
outsl
mov
push
mov
jo
sub
loop
cwtl
push
sub
add
into
out
lcall
xor
push
cltd
xor
mov
and
out
hlt
mov
dec
arpl
jo
in
pop
adc
xor
cmp
fdivrp
into
sub
adc
sub
pop
xor
cs
aam
js
mov
in
jns
mov
rclb
or
push
icebp
std
iret
xchg
xchg
ja
mov
divl
xchg
stos
and
mov
adc
mov
jns
imul
lret
in
imull
xchg
inc
shl
push
jb
dec
in
push
aam
in
cltd
xor
aaa
subb
cld
xlat
fisttps
por
adcb
pmaxub
push
jl
cltd
testl
jp
das
aad
fptan
inc
rcr
push
mov
jo
test
or
mov
sahf
inc
sub
add
jno
xorl
cmp
insl
call
mov
ret
sub
hlt
mov
pop
lret
testl
pop
xchg
xor
jecxz
scas
lods
scas
lret
mov
sbb
insb
xchg
jg
lds
loop
lock
or
shl
loope
test
imul
scas
sub
fildll
rolb
xorb
iret
insb
sub
ss
negl
imul
jmp
mov
sbb
mov
push
sbb
iret
aaa
cmc
dec
push
test
verr
scas
adc
jle
pusha
scas
lcall
lods
idivb
insb
shlb
imul
and
lods
cwtl
hlt
xor
pop
ret
sub
xor
popf
outsb
ret
and
dec
adc
mov
jecxz
loopne
xor
add
sti
cli
daa
in
mov
xchg
push
mov
sbb
push
popa
pop
test
jp
add
out
outsl
out
jecxz
add
pop
into
xlat
pop
les
xor
js
pop
sub
movl
sbb
lret
jle
pop
outsb
mov
push
xchg
loope
into
jle
out
jg
jp
or
je
pushf
xchg
in
jnp
lods
outsl
jne
inc
pop
cmc
int3
inc
inc
adc
pop
add
pusha
fxch
mov
mov
cmpl
adc
out
push
cmp
add
dec
loopne
popf
sub
test
loop
dec
enter
jp
aaa
shrl
ret
sbb
jo
or
fbstp
ja
jecxz
push
enter
xor
or
mov
dec
mov
aad
jnp
sub
in
xor
sbb
sbb
aad
xchg
daa
fcoms
push
dec
pushl
ss
repnz
jo
sahf
dec
sbb
sahf
mov
inc
lea
mov
add
andl
pop
mov
cmp
loop
mov
ja
mov
and
xor
inc
pop
gs
imul
loope
scas
dec
xor
sar
in
and
mov
cs
in
lods
jecxz
cltd
jb
mov
out
dec
push
push
subb
xchg
adc
xor
pop
js
and
adc
push
pop
cltd
repz
inc
mov
mov
dec
les
lret
cmpsl
jg
dec
add
int
mov
pushf
or
lret
jb
aas
xchg
xor
add
mov
mov
pop
outsb
in
mov
rorl
orl
loope
bound
push
mov
aam
push
sahf
xor
jno
mov
and
jae
jle
push
sub
xchg
jmp
push
retw
mov
mov
mov
sub
ret
cmc
xchg
cmp
sbb
sub
push
popa
aas
push
out
sar
push
push
cwtl
cwtl
dec
sbb
push
in
sub
pop
adc
mov
lods
dec
insl
in
ljmp
add
aad
jbe
push
inc
test
filds
pop
fwait
xchg
dec
sbb
iret
inc
push
sub
cmp
push
mov
stc
push
add
sub
icebp
xor
pop
hlt
sahf
sbb
push
push
mov
fdivrl
xrelease
xchg
paddq
jmp
fistps
std
mov
dec
jo
jb
fcos
jbe
outsb
sahf
call
dec
shl
sbb
rolb
push
fucomp
cmc
outsb
mov
int3
sbb
test
pop
std
ds
xchg
hlt
xchg
rcrb
pop
jnp
outsl
adc
jg
xchg
push
adc
outsl
xchg
test
mov
fsubrl
fildl
repnz
cld
dec
orb
repnz
jb
pop
xchg
loopne
mov
lock
and
rcll
int
sahf
dec
inc
call
addr16
jmp
mov
and
xchg
ds
cmp
adc
xchg
stc
test
add
in
bound
adc
aam
xchg
aad
or
shll
fisubrs
push
outsb
push
xchg
pop
push
fsubs
pop
adc
cld
jbe
clc
cltd
hlt
pop
mov
aas
gs
lods
push
int
cmp
jae
sbb
rcr
mov
stos
ror
mov
cli
dec
dec
outsl
or
add
jecxz
or
pop
arpl
push
adc
loopne
add
inc
jo
pop
jp
je
adc
into
xchg
xchg
movsl
xchg
and
pop
push
pop
jl
sbb
fldcw
add
xor
icebp
jb
notl
imul
pop
lods
lods
pop
popa
cld
pop
aas
rcll
adc
mov
ret
repz
hlt
adc
pushf
push
scas
push
sbb
xchg
movq
xor
aad
jecxz
aaa
jecxz
xor
jmp
loop
clc
xchg
loop
fld
jnp
lods
mov
mov
jno
xor
pop
xchg
imul
fldl2e
aam
mov
nop
iret
out
sbb
lds
push
pop
dec
xor
xchg
js
fnsave
out
push
outsl
adc
lods
loope
push
lahf
or
sub
xchg
jle
sub
in
xor
hlt
mov
xor
add
in
stc
sub
das
add
popf
int
mov
jge
daa
mov
sbb
mov
and
sbb
arpl
mov
loop
adc
sti
mov
xlat
sbb
ds
sbb
scas
mov
fnstsw
outsb
addr16
sahf
fstps
mov
out
test
aaa
xor
mov
fnstenv
es
jb
pop
out
fidivl
imul
insb
or
fadds
dec
das
mov
out
push
pop
fcoms
push
int3
jbe
inc
test
lahf
sbb
mov
jno
icebp
mov
pop
clc
movsl
add
call
outsl
dec
xor
push
inc
or
lret
jmp
mov
rcrb
sti
push
jecxz
std
push
movsb
dec
lahf
mov
das
into
add
subb
jp
std
inc
loopne
cli
lods
cwtl
or
mov
sbb
repz
xchg
movb
fwait
push
shr
sbb
inc
addr16
dec
insl
xor
fcoml
jmp
fisubl
dec
jnp
adc
push
iret
in
mov
lods
test
push
pop
sbb
or
fwait
cli
sahf
leave
ds
fdivr
ror
dec
in
loop
cmp
shrb
outsb
pop
stos
fxam
out
sub
jecxz
lds
sub
repz
popa
sub
jb
stos
sub
cltd
inc
mov
cmp
jno
bnd
test
mov
mov
push
sub
pop
and
loop
push
test
pushf
mov
push
dec
es
filds
aam
push
sub
popa
int3
mov
imul
sbb
jae
xor
mov
xchg
xor
je
jae
mov
xchg
add
mov
or
mov
push
jp
subb
enter
es
sar
adc
pop
pop
jns
pop
jbe
cltd
sbb
push
xchg
xor
adc
mov
in
and
mov
lods
inc
xchg
adc
leave
lret
xor
xchg
rclb
and
adc
xchg
push
and
daa
pop
mov
lahf
pop
dec
cmc
mov
or
and
shrl
out
hlt
das
sub
pop
adc
lock
xor
and
and
jae
iret
pop
jl
cmpsb
pop
mov
in
dec
xchg
push
xor
pop
cmp
dec
cmp
fldenv
stos
bound
jne
ss
sbb
jge
xchg
dec
jp
out
sbb
popa
movsl
hlt
movsb
lret
xchg
fsubrp
pushf
ret
sub
mov
js
adc
cwtl
mov
outsb
push
cmp
movsl
hlt
dec
xchg
and
pop
mov
mov
lds
xchg
test
or
rcrl
fwait
in
jecxz
inc
imul
add
fdivrl
out
xor
pop
pushf
std
inc
aas
pop
dec
iret
gs
or
jo
addl
cli
xchg
sub
mov
sti
xor
out
lcall
lds
stos
push
in
xor
in
das
xchg
cltd
sub
out
sbb
mov
cmp
mov
js
test
js
cwtl
ja
sbb
lods
into
clc
cmpsl
insb
jb
fnstsw
cld
mov
aam
mov
cmpsl
int
mov
and
movsl
lret
or
cs
and
or
dec
xchg
adc
or
adc
mov
xlat
xlat
pop
out
add
inc
jle
lcall
outsl
cwtl
adc
int3
push
lds
pop
xor
or
push
rcll
inc
inc
mov
and
fdivr
fildll
lcall
xchg
pop
fs
jg
cmp
jo
out
or
adc
insb
mov
dec
and
push
fcos
mov
push
lods
fwait
xchg
push
and
imul
push
mov
rcl
jns
sbb
mov
xor
cld
into
sbb
aaa
in
rorb
mov
faddp
sub
loope
dec
jo
insb
and
out
out
jno
popf
imul
stos
inc
cmpsl
adc
mov
popa
clc
xchg
pop
lahf
cli
sub
ljmp
xor
mov
inc
nop
jb
into
repz
xor
movsb
sahf
rcr
js
sbb
mov
cwtl
call
mov
aad
xchg
cmp
inc
nop
sbb
ret
stos
add
in
jecxz
clc
push
dec
xchg
lds
cmc
inc
addr16
push
arpl
icebp
repnz
shll
cmovns
mov
cmp
xor
adc
shrl
jle
inc
int
scas
repnz
mov
fdivr
cli
xor
je
je
jle
adc
shlb
jne
pop
push
ficoml
xor
push
stc
scas
cltd
es
mov
lods
cli
pop
inc
push
mov
call
rol
or
mov
inc
mov
clc
mov
add
ficoml
cmc
push
aad
lahf
arpl
jl
jns
xor
addr16
pop
mov
jae
add
call
pop
adc
pop
pop
or
or
lcall
sbb
pop
mov
imul
and
mov
lret
adc
popa
or
push
push
stos
sbb
sarb
fwait
push
add
nop
out
cmp
xlat
or
std
sbb
shr
push
mov
sub
fistpll
loope
sbb
loopne
sti
out
pop
mov
xchg
sti
inc
jae
not
mov
or
push
dec
xchg
xchg
xor
push
and
adc
test
mov
mov
iret
cli
mov
inc
mov
repz
ss
cs
cld
cmp
clc
or
xchg
jo
pushf
movsb
adc
in
ds
dec
or
scas
mov
ffreep
add
dec
add
jp
lods
mov
test
cwtl
dec
or
mov
adc
jbe
sti
xchg
call
dec
notb
test
push
sbb
pop
mov
lods
fmuls
dec
xchg
mov
inc
cmp
mov
push
sub
mov
cltd
js
dec
adc
cmpsb
xchg
mov
cld
push
xchg
mov
sahf
popa
or
add
xchg
nop
pop
adc
pop
xor
lods
mov
popa
xchg
clc
push
jns
sub
pushf
mov
ds
push
cwtl
ljmp
sbb
jnp
jne
in
fstp
xchg
inc
mov
xchg
xor
jge
pop
push
pop
xor
dec
push
lods
sub
sbb
lret
dec
xor
jb
add
decl
popa
shl
sbb
lret
testl
leave
xor
cmpsl
dec
out
movsb
stos
cwtl
push
adc
nop
jle
test
in
sahf
dec
push
notl
sbb
mov
inc
imul
inc
iret
jbe
ret
test
pusha
mov
xorl
popf
in
mov
arpl
pusha
dec
xlat
mov
xor
mov
mov
push
std
subl
lock
push
fisubl
cld
add
pop
arpl
dec
dec
fnstsw
call
push
push
hlt
sahf
add
mov
jmp
xor
outsb
inc
dec
pusha
notl
ret
aas
pop
flds
add
in
movsl
mov
loop
les
pop
lods
arpl
call
inc
adc
insb
je
pusha
mov
sti
pop
jge
pop
cltd
jns
leave
jecxz
pop
dec
jnp
inc
pushf
dec
mov
outsl
icebp
push
cmp
push
cmp
mov
mov
mov
add
out
add
mov
sti
dec
int3
sar
lods
test
in
shlb
xchg
sarl
jecxz
pop
fidivrl
xchg
or
imul
mov
mov
lahf
inc
mov
cmp
sbb
into
in
jg
das
jg
pop
lea
ret
sub
pop
cmpsl
dec
jmp
pop
push
sar
in
scas
and
ss
push
pop
int
push
dec
inc
outsl
mov
sbb
pop
enter
inc
cld
jno
loopne
movsb
pop
ljmp
ret
outsb
dec
push
ds
xchg
scas
lods
aas
out
test
cmpsb
xor
jecxz
push
and
rorb
push
iret
sub
loope
add
pusha
pop
jnp
xor
or
cld
mov
or
fistpl
cmpsl
mov
push
and
jne
ja
fstps
arpl
adc
adc
jbe
je
mov
dec
cld
insl
jb
xor
mov
fucom
pushf
loope
add
adc
shll
lcall
jmp
mov
lcall
imul
push
rcll
jmp
jg
cmpsl
imul
icebp
mov
stos
rcll
dec
dec
outsl
mov
pop
push
and
or
push
lds
cmp
jnp
popa
fistl
mov
call
mov
cmp
into
rcrl
add
cld
adc
adc
and
jno
mov
sti
fstps
dec
jle
jno
lea
insb
sub
push
enter
mov
inc
sti
sbb
shrb
xchg
fstp
int3
or
leavew
cli
je
sti
incl
mov
leave
lods
in
add
jb
add
dec
mov
ja
push
repz
push
fcmove
pop
clc
lret
and
lods
fildl
jno
icebp
std
je
rcrb
mov
jmp
pop
xor
mov
jb
enter
sub
push
cmp
mov
data16
push
fisubl
mov
loop
aam
jae
jl
push
and
jne
imul
addr16
jmp
cmpb
add
jb
sbb
mov
fs
les
mov
lods
fstpl
iret
jbe
inc
push
sub
cmc
repnz
push
dec
add
leave
dec
add
ret
mov
aam
mov
and
into
add
call
pop
xchg
movsb
mov
shr
cmp
cwtl
movsl
pop
lahf
pop
lahf
out
das
lahf
push
movsl
fdiv
add
push
xor
mov
lds
rorl
out
outsl
stos
movsl
addr16
adc
sub
xchg
and
mov
call
or
or
bound
popa
sub
sub
jns
mov
test
inc
pop
push
adc
test
mov
or
cmpsl
fwait
out
mov
xchg
pop
inc
call
xchg
xor
mov
addb
inc
inc
push
adc
bound
cld
mov
pusha
jae
stos
cmpsb
pop
add
notl
sub
adc
sub
sub
daa
pusha
rcrb
and
fcmovb
jmp
xor
mov
adc
lds
push
mov
ret
ds
pop
sahf
adc
enter
cld
adc
js
sbb
in
xor
sbb
or
cltd
pop
sbb
cmp
rcl
lods
inc
das
fistpl
ret
dec
jne
bound
popa
lock
pop
stos
cmpsb
daa
mov
push
in
mov
lock
cmp
cmp
sbb
inc
push
mov
int
aaa
outsb
xchg
ja
or
fs
and
int
adc
cmp
mov
cmc
inc
cmp
cli
insb
xchg
mov
mov
adc
pop
iret
lds
push
xchg
ret
push
sub
sbb
sub
cwtl
leave
adc
fldenv
xchg
add
roll
cmp
fcomps
lahf
xor
ficoms
stos
aaa
jno
cmp
aaa
xor
sbb
fildl
das
in
xchg
stos
fcmovnb
xor
cli
cmpsb
inc
ret
jb
add
inc
cmpsb
stos
lods
mov
je
xchg
pop
das
inc
and
xchg
sub
pusha
cmp
push
negl
mov
and
mov
mov
add
popa
ror
js
fucomi
push
and
out
roll
pop
in
icebp
mov
sahf
pop
lods
sbb
pop
rcl
arpl
int3
and
push
mov
dec
sub
lds
rcrb
inc
mov
hlt
les
jno
or
push
mov
and
imul
out
jg
loop
jne
mov
fucom
test
or
cmp
xchg
and
pop
repz
outsb
stos
imul
push
sub
add
idivb
jmp
scas
push
mov
arpl
sbb
mov
test
sub
pop
cli
or
mov
jno
popa
ret
std
lahf
adc
imull
sbb
push
in
dec
stos
sbb
or
bound
aas
and
or
test
sbb
pop
push
cmp
add
scas
cmp
fldl
pop
xchg
push
push
mov
mov
scas
test
add
xlat
lds
sub
rcrl
cli
pushf
xchg
fsubp
dec
mov
pop
cmpsl
sub
cltd
ud1
cmp
shr
jnp
out
cld
adc
push
inc
mov
lret
mov
mov
mov
inc
mov
fistl
cltd
sbbb
jns
cltd
sahf
aad
sbb
jne
push
dec
and
rcr
inc
out
cmp
xlat
dec
mov
jmp
fistpll
cmp
or
push
shl
les
mov
mov
adc
adc
popf
lret
dec
call
fisubl
inc
hlt
ret
jge
dec
push
jp
lahf
xlat
fstp
icebp
inc
push
jge
lahf
rol
outsb
dec
in
jmp
sti
addr16
push
and
push
xchg
movsl
mov
pop
cltd
call
out
cmpsb
insl
push
jae
add
mov
push
inc
or
inc
adc
adc
push
xlat
cmc
js
rclb
inc
call
cmc
fincstp
push
cli
lahf
cmp
flds
jmp
pop
in
cmpsb
jnp
out
test
adc
push
repz
or
outsb
or
cmpsb
cltd
mov
cmp
testb
nop
jb
jb
scas
xchg
pop
sbb
pop
pop
jle
test
lods
sbb
insl
imull
sti
adc
loopne
mov
push
jno
inc
adc
stos
imul
test
cmc
lcall
and
add
std
es
pop
pusha
int3
xchg
adc
cli
add
dec
scas
js
or
js
aas
cmpsb
rolb
loopne
sarl
or
push
jmp
in
leave
push
popf
jle
inc
sbb
decb
lea
out
push
addr16
jne
jg
ret
sub
dec
pop
setns
cwtl
js
jno
jmp
cwtl
aad
sub
dec
jno
push
push
pop
jmp
add
ficoml
dec
stos
pop
fcoms
mov
fldt
pop
xor
ss
stos
xor
repnz
push
mov
adc
dec
mov
out
std
stos
out
xor
popa
lcall
icebp
mov
loopne
xchg
sub
ret
test
fistpll
push
leave
pop
imul
pushl
xchg
or
int
mov
push
mov
cld
js
out
sbb
or
cmc
std
adc
and
mov
loope
aad
cmp
sub
jbe
sub
sub
add
inc
nop
outsl
outsb
inc
subb
pop
pop
adc
jae
pop
inc
cwtl
dec
nop
in
out
repnz
add
leave
pusha
sbb
test
in
xchg
or
add
adc
insb
mov
cmpsl
scas
mov
outsb
loop
outsl
mov
pushf
adc
fimull
xchg
in
push
int
fnsave
pop
pop
int
inc
sub
mov
fs
or
pop
and
outsl
or
cmp
xchg
dec
ds
push
cwtl
stc
xor
rcrl
fwait
hlt
adc
cs
cld
ljmp
imul
into
fisubl
pop
nop
das
arpl
inc
mov
lods
popf
dec
andl
call
cwtl
sbbl
cmc
add
push
movsl
mov
shlb
pop
fimuls
repz
push
xor
add
adc
push
mov
and
push
inc
xor
fdivrs
inc
lea
cmp
imul
push
mov
rcl
out
sbb
dec
pop
push
fdivl
push
or
das
pcmpeqd
ret
shr
xor
cmp
pop
or
test
pop
jle
sbb
inc
sbb
loope,pt
clc
xor
mov
mov
adc
lcall
shll
xchg
cmpsb
mov
sub
mov
pop
add
xorl
cwtl
mov
iret
dec
paddusw
mov
std
adc
lret
pop
xor
call
jge
ja
cmc
sbb
insb
loopne
and
and
sbb
arpl
pop
into
aaa
prefetch
lds
mov
inc
jecxz
cmp
inc
add
movsb
dec
sub
lcall
cmp
test
mov
dec
sti
mov
insb
mov
push
dec
mov
jle
loop
dec
addr16
adc
cmp
mov
pop
inc
dec
lret
in
imul
push
jne
aad
imulb
scas
ja
lret
add
test
mov
jo
dec
and
mov
xchg
mov
pop
aaa
push
mov
pop
sub
insl
push
push
add
test
mov
inc
bound
push
xchg
pop
push
sub
inc
cltd
xlat
mov
xchg
aas
sbbb
pop
dec
cmpsb
sbbb
cmp
cmp
int3
cmpsb
xchg
lods
cs
and
push
or
push
pop
cmpsb
add
cmp
jmp
mov
sbb
push
pop
mov
xchg
in
adc
fisttpll
test
and
idivl
mov
pop
jmp
add
std
ljmp
imul
sbb
aaa
rdmsr
imul
es
mov
add
test
enter
addr16
stc
cmp
and
dec
inc
sti
rolb
int
lock
sub
mov
popf
adc
mov
xor
cs
mov
sub
cmpsb
xchg
adc
loopne
std
inc
mov
dec
in
adc
sbb
bound
loop
repz
aad
inc
mov
enter
lock
ret
leave
xlat
stos
jno
fxch
divb
das
dec
shlb
sub
mov
sbb
inc
lret
out
mov
sub
cltd
and
mov
scas
mov
gs
mov
xor
inc
test
incl
adc
cs
cltd
inc
out
outsb
aam
shl
data16
outsb
lock
mov
add
into
push
call
stc
inc
ja
jmp
fcoms
js
jb
jnp
outsl
and
or
jp
push
pop
pusha
push
mov
fs
or
cli
test
xor
insb
repnz
test
ret
cld
icebp
shll
dec
add
in
cli
in
jecxz
pop
push
dec
or
add
cmp
insl
lods
push
lret
cwtl
mov
dec
in
sub
mov
xor
adc
mov
fisttpll
pusha
sub
popf
xorl
dec
mov
int
sahf
lret
xchg
cmp
mov
cmp
jb
aaa
add
and
push
mov
mov
mov
cmp
int
xchg
lret
pop
jmp
frstor
sub
lock
jne
push
int3
xor
int3
add
xor
xchg
pop
adc
mov
dec
int3
sti
sahf
mov
leave
movsb
cmp
pop
pop
enter
inc
sub
mov
jge
lods
ja
test
sar
add
dec
mov
dec
add
sbb
std
dec
and
lods
pop
lods
or
jecxz
subl
gs
js
in
xor
fildll
or
adc
adcb
sbb
repnz
adc
cmovns
cmp
stos
sbb
iret
push
mov
popf
cmp
cmp
das
mov
cli
hlt
cmp
cmpsb
push
jp
jae
sbb
into
cmp
xor
cmp
out
incl
fnsave
xchg
sbb
aam
aam
fsubrl
ja
xchg
in
dec
sarb
push
sub
sahf
push
lods
jo
les
fidivrs
mov
xchg
fildl
fwait
dec
inc
leave
sti
ja
fistpl
push
int
fdivrs
imul
arpl
adc
pslldq
imul
mov
out
jmp
das
rcll
jb
cmp
rol
pop
lea
daa
loope
sub
add
cmp
fistpll
xchg
cltd
sub
mov
loop
adc
jns
popf
mov
cld
dec
push
ret
pop
sbb
aad
push
adc
addr16
mov
pop
mov
or
cmc
dec
dec
xchg
mov
mov
mov
jg
mov
push
cmpsl
adc
lret
pop
aad
dec
mov
mov
add
mov
iret
repz
test
imul
repz
call
iret
mov
cmp
idivl
js
cmpsb
lret
mov
push
mov
test
push
insb
or
jge
stc
xor
mov
sbb
notb
aas
lret
cmp
inc
mov
aas
mov
pop
std
das
dec
push
lret
sti
nop
mov
cltd
inc
lods
scas
pop
add
pop
jp
xor
xchg
js
sahf
and
pop
mov
in
ss
dec
das
add
fsts
popf
push
or
mov
iret
in
das
ss
pop
cmp
lock
outsb
sub
cmp
jnp
pop
fstl
shll
adc
xor
inc
mov
adc
fmull
aas
flds
lret
cmp
movsl
aaa
push
jmp
mov
sbb
pop
jg
stc
test
mov
stc
xor
repnz
dec
or
clc
imul
in
inc
loop
shrb
cmc
mov
shr
je
dec
hlt
cmpsb
sti
fmul
enter
mov
dec
push
fdivs
sbb
aas
mov
xchg
add
iret
jg
xchg
jmp
mov
mov
je
inc
mov
fldl
inc
scas
out
pop
jge
mov
fwait
lods
xor
outsb
jne
out
es
ljmp
daa
frstor
xor
std
fdivl
cmp
inc
aas
test
sbb
push
int
scas
sub
dec
cmpsb
cmp
mov
jae
cmp
adc
dec
or
mul
in
add
out
in
push
test
jmp
outsb
faddl
movsb
dec
jg
adc
test
cwtl
xchg
popf
leave
or
test
test
jnp
scas
mov
loope
xchg
inc
jns
stos
imul
adc
incl
cltd
add
sbbb
sub
mov
and
nop
and
mov
mov
lret
lcall
and
fsubr
pop
push
daa
in
mov
dec
test
cmpsl
iret
cwtl
ljmp
movsb
mov
pusha
es
mov
add
lahf
movsb
push
lods
push
pop
cld
sbb
mov
jl
imul
movsl
sarb
pop
xchg
mov
inc
push
pushf
mov
xor
int3
pop
adc
test
insb
and
insb
icebp
mov
call
ret
call
dec
pushf
les
fbld
pushf
jbe
sub
das
pushf
xchg
mov
popa
pop
out
out
sub
xchg
jo
pop
movsb
xchg
fdivrs
sbb
ret
stc
mov
cltd
fsubrl
cmp
mov
sub
rcrl
or
int3
pop
ficoml
imul
cmp
test
jmp
int
and
sub
mov
bound
jmp
xchg
xchg
dec
mov
sbb
cmp
push
repz
lret
ret
pop
jnp
and
or
sub
mov
repz
push
jbe
xchg
mov
inc
push
in
add
sbb
pop
adc
pop
inc
ja
inc
ljmp
mov
or
xor
dec
pop
in
mov
or
addb
movsl
cmp
sbb
bound
xlat
jbe
mov
add
hlt
mov
rorb
movsl
dec
stos
jo
inc
data16
cli
stos
mov
mov
cmp
mov
or
fnsave
sbbb
push
scas
pop
pop
call
push
mov
add
lahf
test
xor
pop
gs
sub
add
lock
cmpsb
cmp
lret
cmpsl
lock
ret
add
aad
and
push
gs
adc
mov
flds
imul
sub
mov
or
ret
push
out
out
mov
dec
and
stc
pop
add
ljmp
cmp
rolb
push
cmpl
hlt
and
outsb
or
xor
push
cmp
sbb
inc
pushf
inc
fwait
sti
jbe
xchg
push
mov
dec
test
sub
mov
jg
pop
add
cltd
mov
dec
pop
adcl
shrb
movsl
addr16
es
mov
test
fisubrl
cmc
mov
add
icebp
adc
out
inc
sti
std
adc
lods
movsb
mov
jl
leave
push
jmp
shl
and
dec
cs
movsb
or
scas
movsl
out
and
mov
jne
xor
push
frstor
push
adc
icebp
cltd
mov
dec
int3
mov
sbbl
jge
iret
or
xchg
push
or
sahf
mov
or
and
mov
xchg
cmp
adc
es
xchg
pop
push
insb
adc
dec
lock
inc
sbb
jbe
outsb
pusha
ja
push
add
push
aad
leave
stos
sub
and
adc
ficoml
out
dec
ret
or
iret
jo
lret
out
out
push
nop
xor
mov
imul
in
notb
stc
cmpsl
cltd
ret
mov
mov
dec
lock
xor
fnstsw
push
lods
or
fstl
imul
jbe
adc
inc
xor
mov
jmp
and
sti
fs
loope
xorb
popa
lods
inc
ret
addl
jns
mov
rcrl
cmpl
popa
fadds
cld
pop
mov
dec
fldt
movsl
mov
mov
dec
fwait
mov
xor
and
push
push
rcll
pop
xchg
scas
mov
nop
fdivrl
loopne
stos
mov
hlt
sbb
xor
sub
repz
ret
push
push
mov
out
pop
das
call
pop
add
pop
dec
adc
lods
mov
mov
and
add
int
inc
add
sub
stos
and
cmp
sub
ss
int3
jbe
add
clc
shll
lods
gs
or
lods
sub
mov
cld
mov
add
pop
add
dec
insb
out
into
sarl
and
lods
dec
cmp
cmp
adc
es
test
inc
sub
int3
xchg
cmpsb
xor
cmc
jmp
insl
cwtl
in
testl
das
push
cmc
cmc
in
fwait
pushw
fiaddl
ret
repz
sub
aas
addr16
loopne
xor
or
and
scas
pop
gs
neg
in
aam
and
and
aaa
cmp
mov
and
or
mov
fbstp
sbb
int3
jns
push
std
push
sbb
ss
loopne
cmp
and
or
iret
mov
jecxz
cmp
xchg
repnz
xor
push
or
push
data16
push
push
dec
jb
cmp
cs
hlt
or
jne
aam
push
loop
test
das
xchg
mov
adc
adc
adc
lods
mov
movsl
ljmp
xchg
movsl
adc
pop
fldt
lret
enterw
and
jl
mov
icebp
int
adc
lods
pop
sub
sbb
or
push
xor
mov
out
xor
aaa
data16
or
pop
cltd
cmp
stos
sub
dec
loope
bound
mov
or
jmp
dec
hlt
popw
mov
mov
jmp
jle
push
clc
jmp
orb
push
sti
cli
sub
aaa
push
leave
scas
cmp
jecxz
or
or
lcall
cmp
jbe
fldl
mov
adc
mov
fdiv
xchg
and
popf
out
sub
inc
mov
cwtl
ud0
data16
sub
hlt
in
xchg
into
mov
pop
cltd
shrb
sbb
and
ds
jbe
or
push
adc
jno
mov
adc
pop
stos
je
dec
imull
loop
fwait
xor
add
push
shlb
aas
adc
outsb
divl
sbb
pop
dec
adc
dec
xchg
test
and
push
cmc
out
inc
out
subl
xlat
xor
repz
xchg
xor
sbb
sub
xor
dec
and
ja
test
fucomi
into
leave
fistpll
jecxz
cmc
pop
mov
xor
push
or
hlt
xorb
adc
test
sub
lock
xor
mov
bound
arpl
add
addl
mov
cltd
sbbl
in
lds
sbb
test
aaa
mov
mov
sti
rcll
fcmovnbe
or
mov
test
xchg
in
les
mov
xchg
dec
cli
out
add
xor
test
jl
push
mov
shll
xor
jo
stc
psrad
mov
popa
lock
fdivrl
xlat
xor
push
aas
roll
xchg
lock
scas
and
mov
cmp
in
and
mov
mov
outsl
jb
add
sti
push
sub
rcrl
es
fldenv
jb
dec
arpl
inc
push
movsl
mov
push
xchg
pop
xor
mov
pushf
pushf
test
jmp
lds
andb
shl
ds
and
pop
cwtl
lods
fimuls
movsl
mov
es
mov
and
hlt
fisttps
bnd
fmul
mov
cmpsl
sub
xor
mov
push
dec
adc
mov
adcb
sbb
xlat
mov
cli
stos
pop
icebp
adcl
xor
or
push
sub
fwait
mov
mov
pop
subl
pushf
xchg
dec
test
sahf
fistl
bound
jle
sbb
fisttps
xor
mov
xlat
ja
dec
push
mov
fimuls
incl
out
jg
lret
and
popa
outsb
xor
sub
addl
jo
adc
imul
cmp
or
out
push
iret
xchg
and
loope
push
adc
sahf
movsb
pushf
push
and
jo
mov
inc
fiadds
rcll
test
dec
das
inc
xor
jg
insb
inc
mov
sub
pmaxub
leave
adc
ret
shrl
fsubrl
test
sub
mov
jbe
and
push
cmp
icebp
or
incl
jecxz
push
sbb
bound
push
lret
mov
ret
sub
outsl
pushf
test
addl
cmp
rorl
dec
or
stos
jns
mov
ljmp
sub
mov
in
rolb
push
dec
push
mov
dec
jb
cld
cli
pop
daa
jl
adc
pop
cmp
push
ljmp
jecxz
dec
in
cmp
cs
enter
incl
push
mov
jmp
lods
xlat
mov
cmpsl
adc
js
cmp
imul
call
repz
mov
mov
popa
rcrb
loope
sbb
cmp
mov
push
jecxz
mov
sahf
mov
ret
mov
push
dec
inc
in
shlb
test
aas
je
inc
mov
xor
lock
in
jne
test
cmp
mov
enter
insb
es
insw
fnsave
out
daa
aad
ja
mov
out
sub
mov
jnp
push
add
pusha
mov
out
jmp
vcvtss2sd
mov
cs
cmp
adcb
xchg
ret
jmp
imul
lret
outsb
sti
fwait
int3
subb
sbb
ss
imul
clc
or
ss
shl
jb
cmp
xchg
icebp
jle
enter
lcall
insl
sub
mov
js
ss
testb
jle
popa
xor
cmp
nop
hlt
adc
es
pop
sti
or
cld
pop
pop
sti
pushf
in
in
sbb
cmp
mov
mov
and
xchg
pop
push
lods
orl
movsl
push
xchg
test
pop
cmp
rorl
sub
cwtl
xor
mov
sti
test
fildl
mov
imulb
into
fsubl
adc
fistl
das
es
daa
leave
adc
orb
xor
add
or
movsl
enter
push
out
insl
mov
stos
mov
addr16
push
push
push
adc
out
int3
lcall
push
sub
ja
daa
add
dec
cmp
adc
xchg
sbb
mov
aaa
js
add
mov
pop
and
shlb
stos
mov
jmp
jle
movsl
mov
pop
stos
pop
stos
fisttpll
out
xchg
and
mov
sti
ret
mov
ret
xor
repz
and
mov
push
int3
add
adc
ret
aam
outsb
loopne
shrl
cmp
pop
sub
je
mov
scas
daa
mov
jge
push
repnz
jge
outsb
sti
mov
dec
cmc
shl
push
popa
negl
xchg
inc
bound
leave
inc
aas
dec
and
sbb
je
jno
push
out
or
scas
mov
hlt
stc
xor
pop
sbb
gs
mov
xor
inc
cmpsl
pop
aam
mov
fcoml
pop
jmp
push
addr16
sub
sahf
int
mov
mov
outsl
int3
out
sbbl
orl
xchg
sub
mov
cmp
nop
cmpsb
push
xor
ja
mov
inc
xchg
and
xor
jns
popf
repnz
and
adc
xchg
cmp
mov
loope
pop
cmpsl
loopne
and
adc
pop
inc
movsl
dec
xchg
inc
fs
imul
lods
pop
push
lds
ficomps
xor
idivl
ds
push
fmull
lds
mov
js
in
pop
ret
and
jmp
gs
test
mov
and
out
add
fwait
fwait
xor
push
jns
mov
push
inc
rorl
xchg
insl
fildll
aaa
insb
in
or
ljmp
testl
in
inc
rcll
inc
mov
out
nop
sub
popa
xchg
out
pop
ficoms
cs
std
lds
mov
fsubrl
inc
push
cmp
inc
push
add
xchg
es
bound
or
loopne
mov
and
icebp
ret
add
test
and
cwtl
shlb
pop
pop
mov
adc
das
fisubs
fbstp
imull
dec
out
add
scas
push
sbb
jno
xchg
dec
lret
subl
jmp
ljmp
fucomi
push
xchg
mov
dec
das
fstpt
mov
loopne
lret
jecxz
clc
pop
imul
insb
lock
fcompl
sbb
jge
mov
add
fbld
push
mov
inc
cwtl
outsl
jno
xchg
sub
xchg
and
clc
adc
int3
and
and
hlt
into
lds
add
mov
push
pop
mov
aad
sbb
xchg
enter
fisttpl
imul
fists
add
rcrl
cmpsl
pop
iret
adc
xor
fildll
xchg
xchg
jp
add
lret
mov
fmull
or
jbe
aaa
ret
daa
cmpsl
inc
ds
adc
into
mov
dec
adc
mov
inc
add
cmc
inc
movsl
pop
call
dec
cmp
leave
hlt
lahf
xor
mov
jnp
pop
jns
jbe
lock
xor
shl
fsubrl
sahf
inc
jno
and
inc
lret
adc
add
jno
mov
sbb
push
xchg
xor
dec
push
add
shl
repnz
call
push
jns
mov
push
sbb
mov
xor
dec
or
mov
push
sbb
imul
cmp
mull
sub
pop
jno
xchg
test
pop
mov
and
js
shrl
loope
gs
outsb
add
cmpl
jb
cltd
adc
sub
jb
mov
xchg
cs
repz
add
fisttps
movsl
inc
dec
or
addr16
jae
bnd
cmp
adc
add
lea
pop
sti
push
pop
pop
stos
sub
icebp
clc
jl
inc
mov
push
jle
push
lods
jae
dec
or
inc
add
sahf
in
xor
and
in
lock
fiadds
mov
pop
adc
push
pop
dec
push
push
test
or
jmp
fsubr
mov
adc
jnp
adc
mov
sub
sti
and
xor
mov
cmp
loope
popa
adc
gs
imul
ret
jnp
pop
lahf
fs
mov
xchg
adc
ljmp
sbb
sub
movlps
inc
loope
mov
add
lds
xor
test
xchg
adc
loopne
mov
dec
or
inc
pop
enter
ja
sub
xor
movsl
addr16
cmp
cld
pop
scas
adc
fwait
test
sub
pop
push
xchg
clc
mov
mul
mov
xor
cmp
negb
inc
out
sub
jg
xchg
pop
loope
mov
clc
out
fmull
push
mov
cmp
sub
or
js
cmp
enter
insl
hlt
imul
mov
pop
hlt
sbb
rolb
repnz
repnz
mov
lock
xchg
push
dec
roll
arpl
loopne
mov
push
dec
push
xor
jge
inc
nop
sbb
adc
add
std
pop
xchg
sbb
sbb
cmp
sbb
push
fisubrs
fdivrs
jle
or
fwait
add
in
cmp
adc
arpl
add
movsw
mov
icebp
pop
inc
mov
pop
jae
mov
cmpsb
xor
mov
adc
xor
dec
loop
mov
test
xor
aam
leave
fwait
pop
xor
mov
push
lret
lods
dec
dec
or
jp
gs
and
and
sti
xchg
arpl
dec
adc
in
sbb
pop
pop
mov
mov
xchg
sti
mov
xlat
repnz
add
jns
jae
pop
shrl
cs
pop
sahf
jp
idivb
mov
mov
std
mov
push
sub
or
imull
orb
ffree
mov
pop
popf
sub
add
lods
xor
scas
inc
add
sbb
movsl
sbb
adc
jo
cmp
pop
mov
mov
jns
sbb
popf
jg
out
adc
push
lds
cmp
xor
fdivr
sahf
lretw
data16
xor
daa
xor
push
adc
leave
popf
aam
leave
aas
pop
mov
aaa
cwtl
pop
mov
stos
or
into
pop
out
jbe
les
ds
lret
add
jl
aad
inc
movsl
stc
adc
in
rorb
pop
push
sbb
ss
idivb
jp
xchg
and
inc
es
int3
xchg
int
or
and
mov
mov
inc
mov
inc
pop
mov
into
dec
inc
out
dec
jns
fbld
mov
mov
aas
mov
jp
inc
das
sub
jmp
mov
mov
dec
add
call
pop
or
cld
stos
in
incb
xchg
gs
mov
and
test
scas
push
push
mov
leave
popf
loop
push
push
pop
pop
sub
push
inc
repz
int3
mov
jecxz
adc
mov
sub
mov
enter
aam
push
into
fmull
or
sub
mul
imul
push
jne
jp
mov
pop
sub
insl
shrl
sub
push
adc
int3
xchg
lock
sub
iret
sbb
js
nop
ror
jmp
xor
or
into
vpshld
push
pusha
popa
push
lahf
jnp
mov
xchg
sbb
aad
outsl
or
jge
dec
inc
inc
mov
or
xchg
shrb
push
pop
hlt
jecxz
flds
loope
mov
push
adc
in
add
getsec
cmpsb
adc
sbb
fmulp
icebp
fisubl
or
sub
fidivrl
sbb
xor
cmp
call
aam
fadd
pop
pusha
adc
xchg
testl
pop
nop
cmp
lret
sbb
adc
into
mov
fildll
scas
cmp
ljmp
les
aad
mov
popf
js
insl
xchg
into
test
xor
push
xchg
rolb
mov
out
and
sub
sarl
xchg
inc
rclb
es
nop
push
cld
jp
loope
fld
aam
and
mov
jmp
jge,pt
repnz
or
cli
push
call
sbb
pop
jg
lock
xchg
rcrb
insb
mov
lods
movsb
mov
daa
pop
data16
aam
outsl
xchg
dec
sbb
mov
mov
in
stos
or
mov
je
repz
xchg
test
fs
cld
xor
dec
lea
pop
arpl
jge
jne
cwtl
sbb
jns
outsl
sti
arpl
push
push
loop
shrb
push
mov
roll
xor
scas
loop
pop
push
cmpb
fnstsw
pop
and
loop
psubusb
sbb
leave
lahf
adc
xor
lods
testl
dec
jb
mov
cltd
aaa
jns
and
xchg
push
sbb
cmp
int
xorb
pop
cli
or
jae
dec
jge
xchg
jge
pop
stos
pushf
xchg
ljmp
out
pop
or
or
inc
push
sub
or
dec
ja
xlat
dec
mov
add
leave
lea
in
mov
scas
mov
adc
jle
sbb
mov
and
lds
popf
outsb
stc
insl
outsl
jmp
int
scas
loope
into
addr16
xchg
loopne
jecxz
dec
mov
push
scas
jecxz
mov
dec
dec
hlt
repnz
xor
lahf
jg
jecxz
cmp
in
xchg
sub
faddl
testl
jle
push
push
push
jo
out
out
cli
cld
pusha
cmpsb
lret
jmp
mov
or
mov
fcmovne
iret
pop
push
ja
push
sbb
cmp
add
xor
cs
sub
jp
repnz
in
and
push
add
lods
int
mov
lock
ret
push
pop
jo
add
in
movsl
nop
jne
iret
xchg
sarb
lcall
jmp
dec
dec
xor
sahf
insb
cmc
push
adc
rcrb
xchg
jnp
sar
inc
outsb
adc
xchg
mov
or
das
cltd
aad
imul
pop
mov
inc
fistl
mov
pop
dec
pop
jnp
cmp
mov
and
test
out
fisttps
xchg
stos
jge
and
jbe
cmp
or
fwait
std
push
add
call
leave
inc
ljmp
in
cmp
xor
jns
push
rcll
xchg
sbb
shr
mov
xchg
push
repnz
adc
xor
cli
adc
ss
pop
jmp
fbld
inc
sbb
ljmp
dec
aas
push
xor
in
es
xchg
inc
popa
jne
mov
fisubs
lods
outsb
pushl
in
mov
xchg
out
lea
scas
es
movsl
push
js
sub
mov
scas
dec
mov
outsb
loopne
shl
lea
or
aas
cmc
xchg
cmpsb
inc
pop
xchg
push
adc
jp
mov
ljmp
xchg
hlt
loope
dec
xchg
dec
dec
inc
sbb
ljmp
and
and
loope
into
pop
lahf
cltd
and
sahf
or
mov
adcb
push
push
add
cmp
decl
out
or
andl
mov
jae
or
push
xchg
es
es
out
mov
mov
aad
pop
cld
jno
push
mov
mov
sub
adc
imul
mov
jmp
or
cmpsl
cli
xchg
iret
imulb
dec
ds
sub
gs
adc
cltd
in
sbb
leave
cld
js
push
mov
or
nop
loope
inc
jbe
outsl
stos
aas
push
pop
or
or
popf
cs
loop
repz
and
lret
out
push
pop
popf
jmp
clc
test
jge
jp
mov
dec
xchg
std
repz
pop
fidivrl
outsl
sbb
out
mov
add
sub
movsb
ret
mov
push
test
mov
test
jae
in
in
pop
cmp
in
addr16
mov
cmp
into
mov
rcl
cmp
test
jecxz
test
cli
jg
loope
cvttps2pi
pop
adc
pushf
pushf
ss
and
pushf
fimull
movsl
jp
sub
mov
cld
repnz
stos
sub
push
dec
mov
les
sahf
mov
cmpsl
push
movsl
adcb
mov
pop
das
lods
cmp
sbb
cmpsl
vpsrld
or
mov
inc
cmp
mov
movb
adc
or
mov
rol
xchg
ss
push
hlt
les
inc
cmpsb
mov
pop
int3
mov
sti
mov
aas
adc
sti
inc
add
ret
inc
jb
mov
cmp
mov
inc
push
arpl
popa
jns
and
cmp
fwait
inc
dec
or
ret
cs
xchg
xchg
dec
outsl
push
outsl
cmpsl
mov
out
arpl
cmp
in
in
mov
fnstcw
mov
pop
push
xchg
xchg
cmpsl
push
clc
mov
sar
sbb
negl
sub
stos
jns
lret
mov
out
sub
adc
gs
mov
imul
cltd
mov
cmp
jl
sbbl
add
add
leave
shll
cwtl
inc
repnz
or
icebp
sbb
das
cmp
and
ja
mov
cwtl
mov
fnstcw
or
and
dec
dec
pop
lock
add
dec
push
lock
ret
je
das
testb
ror
xlat
mov
cmp
adc
add
push
add
sbb
into
push
fwait
rolb
and
mov
sbb
push
aam
lahf
lret
jb
popf
sbb
and
test
scas
mov
fimuls
add
and
mov
xchg
xchg
fisubs
das
add
cmp
and
pop
cli
test
pop
push
loope
mov
in
inc
or
aas
dec
scas
fs
xor
lret
ret
fiadds
ljmp
jl
jns
mov
cmp
das
outsb
dec
jecxz
jg
or
mov
jge
ja
push
outsl
imul
push
mov
xor
out
bound
xchg
call
pushf
push
into
adc
adc
add
pop
inc
popf
popf
mov
gs
cmp
cmp
fnstsw
push
stos
mov
xchg
cmp
mov
ljmp
mov
int
push
call
pop
push
popf
in
sub
stc
pop
insb
add
xchg
cmp
xchg
mov
fwait
add
push
jg
mov
inc
scas
jg
sahf
xchg
out
sbb
aas
sub
jbe
sbb
aas
mov
mov
jb
mov
cs
and
dec
loop
cmp
int
jp
notl
fisubs
testl
dec
repnz
fcmovnb
imul
dec
xor
les
cs
pop
mov
push
or
dec
scas
add
lock
pop
fstl
jmp
mov
ffreep
and
iret
sahf
fdivrs
lock
loope
lods
out
and
rcl
sub
lcall
iret
lret
subl
enter
pop
mov
mov
ds
hlt
cld
adc
les
mov
push
stos
mov
jmp
insb
mov
pop
in
aad
jnp
adc
cld
shll
lret
in
dec
sahf
add
jg
add
loope
loope
mov
jg
dec
fdivl
adc
or
add
jecxz
mov
cltd
lods
out
jo
add
test
mov
push
leave
out
cmp
adc
ljmp
or
mov
xchg
cmpl
inc
mov
dec
repnz
outsl
jne
sub
ficoml
popf
rcr
and
pop
cs
clc
mov
mov
testl
xchg
mov
jge
jp
ss
rorl
dec
je
lret
sub
jecxz
cmp
push
lret
mov
dec
scas
mov
cmp
inc
fwait
dec
jo
mov
inc
xor
icebp
out
mov
rcrb
sbb
push
pop
sbb
push
sub
fsubl
dec
mov
aas
xor
imul
sub
aam
or
out
xchg
mov
stos
xchg
sbb
jbe
pop
mov
push
movsl
jae
add
je
pop
adc
icebp
jl
xchg
xor
in
fmul
cmpsb
pop
jl
pusha
sbb
sbb
sub
sarb
dec
cmpsb
insl
mov
xchg
int3
push
in
adc
sahf
cmp
bound
cli
xor
rol
xor
mov
loopne
push
test
sub
and
test
pop
adcl
jp
lea
int
mov
dec
mov
push
dec
mov
rol
pop
adc
push
and
leave
xchg
inc
cmp
push
cli
scas
ret
test
or
push
arpl
xchg
xchg
std
lcall
xchg
arpl
test
cmp
jge
clc
push
lock
mov
lods
push
adc
aas
dec
push
sub
xchg
outsl
fildll
jne
arpl
test
stos
mov
fisttps
nop
lret
orl
adcb
add
movsb
out
fwait
pop
dec
ja
xchg
lea
mov
sbb
arpl
call
stc
and
cmpsb
xor
ret
fsubs
or
push
test
es
and
sti
jo
aam
adc
mov
cmp
or
dec
mov
sbb
nop
jae
sbb
jno
lret
fcmovbe
sbb
rorl
sarl
push
leave
cmp
mov
enter
aad
xor
mov
aam
add
pop
lock
inc
adc
je
fst
xchg
repz
pop
sbb
lea
cmp
mov
push
jae
sub
arpl
pop
ja
dec
mov
jecxz
xchg
mov
jb
mov
jge
outsl
nop
cmp
jp
xor
dec
jecxz
push
jbe
shl
push
pop
jg
loopne
sub
cmpsl
mov
nop
fs
dec
insl
jo
sub
test
mov
push
daa
je
lea
imul
mov
sub
mov
aad
ret
xchg
xlat
movsb
js
not
adc
xchg
imul
lahf
orl
xor
mov
sbb
out
inc
ss
outsl
jb
dec
aas
sbb
mov
jmp
mov
stos
fucom
sub
rorl
or
js
mov
push
call
adcl
sahf
sub
xlat
xchg
fs
pop
adc
sub
xchg
aam
push
push
stos
inc
mov
mov
invd
stos
fsubr
pop
lds
in
out
xorb
or
out
notl
push
outsb
push
xchg
push
xchg
mov
mov
lcall
push
lods
push
leave
lods
test
es
sub
mov
mov
stc
push
pop
pop
xor
lahf
push
ja
int3
pop
sbb
sbb
cmp
daa
fdivrl
push
jae
les
sbb
in
mov
out
int3
in
mov
and
and
xchg
mov
sbb
sbb
out
jge
mov
sub
rorb
inc
fsubl
fstps
inc
movsb
jbe
mov
sub
mov
inc
xchg
test
push
pop
or
sti
ljmp
into
sub
aas
loope
xchg
insl
stos
subb
bound
or
xor
dec
fidivl
sub
lods
out
test
or
outsb
addb
iret
push
cmpsl
in
jecxz
pop
jle,pt
fs
push
movsb
into
push
lret
call
inc
je
fdivl
hlt
mov
repnz
jp
push
adc
mov
ljmp
xlat
cmp
leave
dec
push
cld
push
xchg
adc
cmp
aaa
and
mov
fdivrl
in
add
outsb
mov
add
push
xor
mov
mov
xchg
cmpsb
jge
ja
rcr
jno
loope
lret
xchg
test
lahf
push
int3
xor
jmp
aad
sub
dec
pop
xchg
addr16
sbb
sub
ja
pop
hlt
xchg
lds
test
shlb
sbb
xor
or
notb
xchg
test
je
insb
loope
std
fsubrl
mov
decl
inc
xor
add
sub
and
jne
stc
imul
in
fisubl
dec
xorb
test
pop
pop
and
xchg
mov
mov
sub
mov
or
cwtl
sub
mov
cmp
adc
data16
out
push
js
imulb
test
rorb
int
jle
data16
xchg
mov
sti
inc
int
mov
cmp
je
xchg
imul
sbb
mov
mov
sub
in
or
test
fs
test
or
test
mov
mov
pop
push
pop
bound
subl
cmp
inc
cmpsl
decb
pop
jmp
pop
or
lcall
movsb
iret
aam
into
sbb
mov
ljmp
mov
seto
loope
pusha
ljmp
mov
lahf
rcll
adc
inc
out
test
lret
insl
mov
pop
and
push
sbb
shrb
mov
push
mov
std
lahf
dec
cmp
sbbl
dec
dec
mov
mov
fmuls
cltd
fnstenv
mov
adc
jne
pop
sub
push
or
dec
xor
cmpsl
push
dec
jecxz
xor
cmp
ds
pop
xchg
jmp
pop
cmp
add
xchg
std
sbb
scas
dec
dec
test
enter
sbbl
or
pop
mov
dec
insb
std
in
call
testb
cmp
jmp
pushf
mov
add
lods
xchg
imul
ret
or
and
scas
push
sub
scas
mov
pop
sbb
mov
push
push
pop
sub
test
push
xor
mov
outsl
fs
jne
shll
js
out
cmp
sti
add
enter
idivl
iret
xchg
lea
test
and
pop
popa
es
sbb
adc
mov
mov
push
xor
pusha
sbb
cmp
aaa
das
push
popf
nop
jne
fimuls
int3
mov
and
mov
dec
jle
mov
lods
push
add
mov
inc
mov
push
jl
daa
scas
pop
es
clc
cmpsb
stc
inc
addl
and
cmp
insl
mov
lcall
jmp
pop
mov
cld
mov
scas
ret
sub
fnstsw
cmp
push
or
outsb
xchg
mov
jnp
fistpll
std
ficoms
lret
jae
cmp
pop
shr
movsb
ret
mov
mov
outsl
loop
ljmp
shrb
fsts
xchg
insb
insl
cltd
sbb
idivl
xchg
lret
and
xor
cwtl
leave
ret
jge
inc
jns
sti
dec
leave
inc
push
add
add
sbbb
inc
sbb
test
jge,pn
js
sub
mov
clc
cmc
in
sbb
xchg
push
cmp
pop
jmp
div
dec
rcl
cwtl
aaa
mov
bound
jnp
xor
adc
in
push
mov
out
stos
and
pop
push
int
fdivrl
mov
loopne
push
sub
loope
in
ja
mov
dec
shl
push
out
jns
sbb
inc
idivb
stos
mov
push
fimull
daa
xchg
xor
adc
movsb
mov
fistps
icebp
sub
mov
andl
and
outsl
and
mov
pop
sbb
in
sbb
sub
es
cld
inc
or
inc
js
stos
xor
mov
pop
imul
jecxz
jne
lahf
jne
push
ret
dec
pop
and
jp
adc
movsl
fiaddl
pop
mov
cli
cmp
lods
pop
pop
scas
imul
mov
sub
push
cmp
mov
add
push
pop
inc
add
cmp
cmp
leave
mov
adc
push
lods
mov
xchg
shrb
fidivrl
fisubrl
lret
dec
shrl
mov
sub
mov
mov
sub
and
js
mov
dec
orl
cli
add
cmpl
in
or
and
out
adc
insl
mov
cld
pop
shlb
push
test
andb
test
pop
fldt
cmp
dec
mov
rcrb
lret
clc
adc
mov
push
jb
mov
mov
push
ds
dec
mov
xor
xlat
divb
inc
mov
aam
jmp
lods
mov
fidivrs
dec
mov
outsb
jne
pop
sub
loop
dec
lahf
sub
xchg
sbb
js
xor
mov
cli
jb
enter
adc
out
push
arpl
and
xchg
insb
into
inc
dec
sub
jecxz
cmpsl
aaa
cmp
mov
dec
cmp
das
and
fdivs
rorl
call
data16
mov
mov
cmp
pop
loopne
flds
addr16
mov
sub
xor
sub
out
fsubl
adc
push
dec
add
jp
or
add
stc
lock
dec
mov
sbb
jmp
xchg
dec
ss
pop
mov
xchg
mov
pop
js
jno
xchg
imul
test
out
test
push
mov
mov
inc
sbb
rcll
fwait
xor
mov
cmp
jb
movsl
jb
movsl
shrb
adc
push
in
popa
je
insl
ret
negl
and
icebp
cmp
mov
aam
pop
es
popf
mov
stc
jl
jecxz
sbb
stos
jmp
add
and
aas
xlat
sbb
sub
xchg
sbb
mov
cmp
mov
sarb
icebp
iret
aad
decb
push
push
mov
les
add
push
aad
or
enter
or
xor
push
lahf
xor
cmp
das
lret
test
cmp
icebp
and
jecxz
stc
dec
mov
mov
xor
iret
test
mov
loop
cmp
mov
add
ds
cltd
ret
cmp
in
and
cmp
ficomps
mov
pop
cmpsl
or
sti
mov
lcall
jbe
sub
es
cs
cmp
dec
scas
add
mov
bound
test
leave
cmpsb
mov
mov
jle
maxps
dec
mov
pop
inc
shl
scas
lea
stos
leave
pusha
loopne
xchg
mov
sbb
ret
paddd
not
jle
cmp
dec
test
loopne
lahf
std
popf
fistps
popl
jno
insl
adc
sarl
notb
pop
test
xor
jno
cmpsb
mov
add
xor
lcall
sbb
mov
push
push
xor
ret
inc
jnp
sahf
test
jns
sbb
mov
lds
enter
mov
sbb
jge
into
shrb
adc
idiv
jno
jl
cmpsb
adc
mov
lods
jl
dec
pop
enter
lds
jge
fs
mov
dec
push
js
ret
mov
push
xchg
push
push
je
jmp
add
xchg
cltd
dec
or
sub
cltd
int
xchg
gs
sub
mov
adc
mov
push
xor
dec
jecxz
mov
mov
cmp
rcll
pushl
or
inc
dec
mov
out
movsl
rcll
leave
push
mov
cmpsl
cli
adc
imul
aam
sbb
shrl
test
mov
and
lret
clc
inc
jns
rolb
mov
call
jg
sub
andb
jg
leave
sbb
add
inc
sub
push
outsl
js
mov
sub
in
xchg
xchg
cld
xchg
cwtl
aaa
adc
int3
cli
scas
and
or
add
jle
push
add
dec
fwait
xchg
out
dec
jns
in
pandn
fsts
sbb
roll
mov
das
mov
ljmp
gs
imul
mov
leave
inc
fisubs
pcmpeqd
jbe
jmp
mov
push
inc
jbe
sub
xchg
dec
addr16
pop
xlat
je
add
pop
lock
xchg
ja
lock
push
push
cmpsl
ret
stos
jg
inc
sbb
sahf
or
xchg
int
cli
aas
cmp
xchg
xchg
xchg
scas
jmp
into
repz
inc
stc
fmull
mov
popf
pop
lret
mov
mov
xor
mov
jge
sbb
and
out
push
mov
rcr
enter
call
inc
mov
sbb
int
mov
cwtl
jge
lods
push
scas
cmpsl
neg
pop
rcr
lret
push
sbb
sbb
xor
sahf
sub
inc
jns
insb
sub
or
fsubr
js
push
rolb
mov
addr16
lcall
push
pop
jmp
test
cmpsl
adc
icebp
clc
push
in
fwait
or
adc
fnsave
icebp
loope
mov
or
or
adcb
aaa
in
hlt
add
sbb
das
outsl
enter
xchg
jmp
push
mov
nop
mov
xchg
sub
cwtl
fstps
mov
or
ljmp
mov
or
addl
mov
dec
xor
cmp
nop
mov
or
sub
divl
enter
push
jmp
xor
imul
pusha
test
js
mov
mov
daa
call
mov
add
cli
and
repz
jl
pushf
popa
cmp
bound
cmp
loop
les
xor
lahf
xchg
push
or
ret
je
mov
push
pop
mov
sahf
shl
aas
pop
xor
xor
lcall
pop
xchg
mov
add
jp
adc
jns
jo
loope
es
mov
lods
pop
scas
mov
pop
pop
xchg
and
push
clc
or
out
gs
int
mov
sub
fs
mov
or
mov
xchg
mov
mov
sub
jo
push
lea
cmc
or
pop
inc
jge
stos
fnstcw
out
cld
bound
jo
or
and
clc
in
dec
ret
pop
push
lock
das
sbb
add
add
cmc
sbb
and
inc
jge
pop
ds
fildll
shrl
lahf
mov
sahf
and
das
cltd
pop
enter
cltd
cmp
out
pop
iret
add
dec
mov
mov
push
xchg
jle
cld
call
sub
xchg
out
push
enter
inc
or
push
dec
mov
bound
rcrb
adc
out
pop
sbb
push
les
jmp
and
or
leave
aad
movsl
rol
adc
or
add
mov
mov
loope
xor
cwtl
sahf
jle
jne
rorb
out
scas
mov
mov
pop
pop
mov
outsb
pop
iret
mov
cmp
mov
test
imul
movsl
sub
aad
add
dec
jl
fsubrs
or
push
pop
sub
dec
lcall
in
jecxz
dec
jo
jb
lods
ljmp
repz
test
pusha
xchg
in
leave
jns
pop
cltd
imulb
addr16
jmp
lds
js
or
cmp
imul
jb
sbb
push
and
faddp
xor
jle
mov
fldl
rep
mov
inc
bound
sbbl
mov
pop
and
clc
xor
std
cmp
xor
sbb
test
cmp
xchg
enter
stos
add
test
or
std
adc
in
pop
push
dec
dec
ficoms
jae
cmp
stc
dec
rorl
call
jp
mov
mov
outsb
add
jg
push
lcall
mov
xor
adc
inc
cmpsl
lahf
pop
cwtl
or
fidivrl
div
and
mov
dec
sub
inc
jno
jle
fldt
inc
jbe
aas
pushf
das
dec
clc
mov
cmp
xchg
mov
pusha
jge
neg
sub
cmpsb
adc
js
inc
sub
push
arpl
cmp
inc
insl
dec
mov
cmp
pop
inc
mov
rclb
pop
mov
fcomps
scas
cmpsb
dec
gs
cmovge
mov
mov
sub
jg
pushf
aad
xor
jl
repnz
bound
std
jmp
add
mov
xor
mov
cmp
dec
mov
mov
mov
cmp
xlat
xor
add
xor
fmuls
out
ret
outsb
popl
jb
pop
pusha
jnp
ja
inc
pop
xor
pushf
mov
push
icebp
repz
and
test
nop
movsl
cmp
int3
enter
sbb
jecxz
pop
xor
fs
mov
sti
data16
pop
in
pop
jae
dec
xchg
shrb
fidivs
lahf
jmp
les
ret
fs
mov
cmp
sbb
cli
inc
or
hlt
popl
pop
push
sbb
test
cwtl
push
add
cmc
xor
test
cltd
jnp
loopne
xor
cmpsl
jne
cmc
jno
mov
xchg
or
call
imul
mov
aaa
ss
mov
mov
push
rorl
adc
mov
mov
ret
cmp
jle
mov
mov
or
cmp
adc
mov
inc
or
cmc
lahf
xabort
fiaddl
mov
lods
xlat
imul
inc
jge
in
add
adc
mov
ret
dec
xor
and
mov
js
stos
lahf
lcall
shl
mov
sub
aam
out
pusha
xor
dec
scas
or
pop
cmpl
dec
cmp
imul
sub
test
push
push
inc
ljmp
in
add
xor
lock
push
pop
push
mov
scas
ret
icebp
mov
mov
jns
jl
dec
push
push
xchg
clc
mov
dec
out
sahf
popa
aaa
lahf
dec
stos
sub
cltd
ret
stos
sbb
cmp
cmp
pop
sbb
mov
scas
jb
arpl
mov
xor
lods
pop
lods
mov
adcb
or
adc
or
dec
and
sbb
leave
pusha
inc
call
fsubp
mov
mov
rorb
sub
leave
stos
sbb
inc
sarl
cmp
leave
mov
sbb
xor
adc
aad
into
sti
clc
lret
or
stos
sbb
and
dec
loopne
mov
leave
outsb
aam
movsb
dec
adc
pushf
and
sbb
jbe
push
das
cmp
call
fdivs
or
lret
cmc
sub
pop
repz
call
push
lods
cwtl
or
jno
inc
ret
and
xor
push
gs
insl
andb
push
cmp
mov
and
cwtl
xchg
sub
fwait
pusha
dec
mov
inc
fisubl
sbb
or
test
shrb
sbb
sub
adc
mov
sbb
frstor
ljmp
dec
push
pop
aam
push
add
sbb
lods
xor
ljmp
insb
adc
push
sub
hlt
les
xor
bound
mov
sbb
pop
outsb
notb
xlat
or
ds
cmc
in
mov
fisttpll
dec
xchg
and
inc
outsb
sub
jp
jl
adc
jne
adc
inc
or
cmpsb
nop
test
or
test
xlat
adc
sbb
and
mov
ja
xchg
pop
out
aam
hlt
pop
lds
lahf
xchg
jmp
fcoml
loopne
add
sti
aas
sub
mov
out
scas
and
or
cmp
ss
repnz
mov
mov
outsb
flds
out
sbb
jno
subb
xor
loope
jg
pop
div
popa
adc
mov
xchg
lret
les
and
ss
add
addb
clc
iret
test
cmp
imul
push
mov
out
mov
or
test
jmp
adc
mov
add
cmp
xlat
outsl
adc
mov
cltd
stos
in
adc
xchg
cmp
or
inc
cmpsb
cmp
js
xchg
sub
pushw
inc
test
and
cmp
push
push
inc
and
jmp
cmpsl
pop
sbb
and
js
sub
pop
loope
pop
stos
sub
mov
sbb
mov
test
lds
icebp
inc
ret
sbb
mov
sbb
cltd
mov
jecxz
inc
lret
mov
jl
loopne
hlt
dec
or
in
repnz
sub
das
cs
ss
xorb
push
mov
jb
or
lret
jp
cmp
mov
test
mov
orb
fcoms
into
mov
cmp
push
push
les
jno
xor
out
inc
or
cmp
push
mov
add
outsl
and
mov
fsub
out
rcrb
scas
pop
and
enter
sub
adc
lcall
dec
lret
push
mov
shl
aas
add
cltd
sub
mov
cltd
mov
test
aas
stos
test
outsb
aas
iret
sub
pop
jg
sbbb
xchg
xor
or
mov
sarl
into
aas
fiadds
stos
add
or
push
aad
cs
rcrb
cld
dec
repnz
ljmp
sbb
leave
outsb
jno
and
dec
or
cli
cld
lret
sti
int
pusha
adc
mov
push
mov
loope
mov
in
inc
stos
xchg
insl
les
rol
or
mov
inc
daa
mov
movsl
push
mov
push
out
add
loope
ret
mov
test
adc
mov
mov
lret
ss
mov
sub
pop
pop
xor
mov
mov
mov
dec
ret
xor
mov
fcmovb
mov
push
out
xchg
sti
sti
mov
ss
mov
icebp
test
movsl
ja
jnp
adc
outsl
push
jbe
scas
sub
xlat
out
mov
fsts
fstps
aad
in
movsb
pop
rcl
sbb
and
jne
iret
ret
in
fmull
dec
sbbb
cmp
or
xchg
add
fwait
dec
lcall
push
lret
inc
cmp
lcall
mov
lcall
xchg
jecxz
int
or
or
sub
cvtps2pi
test
jmp
ret
push
mov
pop
mov
test
bound
pushf
lret
mov
lea
fcmovnbe
prefetchw
outsb
cmpsl
mov
in
mov
dec
sub
mov
inc
in
int3
fildl
pop
out
test
inc
jecxz
movsl
movsl
pop
pop
jo
or
lcall
push
adc
lods
push
sub
clc
push
or
call
sub
ds
pop
shll
xor
mov
cmp
cli
xchg
dec
mov
pop
sub
test
cmpb
sahf
cltd
pop
mov
shll
in
cmp
fwait
sub
mov
fidivl
scas
sub
bnd
xchg
das
xchg
fistps
jo
cltd
jp
xor
shll
xor
cwtl
mov
pop
or
dec
pop
into
mov
ss
cwtl
insb
sub
jmp
and
repnz
ret
adc
cmp
adc
xchg
lock
add
dec
or
imull
out
ljmp
cmp
outsb
loopne
xchg
je
hlt
xchg
fwait
xchg
stos
push
jae
leave
sbb
mov
jnp
cmp
cmpsl
jnp
xlat
sbb
cmc
test
in
fldt
int3
jl
mov
sub
mov
jo
xchg
das
jmp
into
and
dec
addl
sbb
imul
push
mov
lods
xchg
call
push
push
push
fidivrl
fidivl
dec
out
dec
sbb
rcrb
imul
add
subl
in
xchg
pushf
adc
scas
adc
push
mov
xor
push
test
jmp
mov
pop
jae
mov
inc
adc
xchg
out
data16
loope
or
push
and
repz
sbb
ds
lcall
push
mov
pop
rorl
movsb
mov
out
add
sub
into
xchg
dec
je
out
mov
adcl
leave
push
adc
aaa
cmp
shrl
notb
xchg
int3
jns
add
cmp
dec
or
pop
mov
xchg
jmp
scas
bound
rolb
or
into
dec
enter
sub
into
mov
lahf
add
sbb
mov
mov
push
aaa
stos
gs
aas
fwait
mov
pop
rolb
into
push
in
mov
sbb
int
dec
xlat
into
hlt
sarl
aaa
mov
sbb
xchg
xchg
hlt
loop
add
dec
push
mov
or
xchg
cltd
insl
push
aam
mov
pop
ret
dec
mov
movsl
dec
outsl
xchg
push
subl
pop
jg
fcoml
paddq
jbe
je
mov
push
mov
test
lahf
addr16
dec
rcr
and
pusha
and
test
icebp
xchg
sub
push
inc
flds
and
cmp
mov
insl
add
cmp
jge
mov
cmpsb
adc
addr16
jbe
inc
mov
xor
push
adc
sbb
movsl
dec
sbb
and
cs
jge
cmp
jp
push
cmp
rorb
ljmp
mov
push
int3
mov
es
mov
mov
fiadds
aaa
xor
xor
cli
or
push
hlt
hlt
mov
aam
pop
stos
in
mov
lods
popa
push
fsubr
sbb
cmp
in
cmp
int3
ds
xchg
outsl
lahf
xor
sbb
loop
add
cmpsb
lea
sbb
cmpsb
push
pop
adc
mov
or
fbld
cwtl
cltd
lea
adc
addr16
mov
mov
test
sti
fisttps
loopne
inc
bswap
idivl
inc
cmc
and
pop
rcl
cwtl
movsl
jl
add
sti
ss
mov
mov
xchg
addl
ficompl
imul
xor
fisttpl
shl
pop
cmp
mov
test
enter
pop
or
mov
jmp
lea
or
cmp
lea
mov
mov
pop
or
bound
faddl
dec
loop
sub
fcmovne
jno
lret
subb
jns
push
jg
lock
dec
pusha
mov
adc
push
jb
lahf
or
das
xor
mov
mov
push
lock
dec
cmp
enter
inc
and
hlt
inc
test
push
fldt
lock
out
lods
xchg
jbe
mov
out
cmp
sbb
inc
push
lods
punpcklbw
aad
add
mov
sysenter
sbb
icebp
xor
iret
in
in
call
sahf
jmp
sub
ret
stos
mov
daa
sbb
jmp
js
mov
and
cmp
jne
sbb
xlat
or
sahf
pop
test
mov
push
mov
jnp
sbb
pop
std
cwtl
inc
sti
sub
setae
mov
enter
sub
push
cmp
add
das
std
xor
sahf
pop
mov
lock
jno
dec
sahf
imul
mov
and
cmc
sbb
out
pop
ret
lahf
stos
insl
inc
mov
push
dec
sub
cmp
rcr
repz
push
ficoms
push
adcb
filds
inc
aas
jne
dec
or
mov
mov
cli
mov
iret
out
mov
add
sub
jmp
shrb
outsb
loop
mov
add
mov
js
mov
inc
inc
push
sarl
sbb
decb
rorb
nop
iret
pop
jmp
in
mov
call
mov
adc
pop
add
mov
fmul
pop
xchg
jns
jbe
dec
jmp
pop
xlat
dec
mov
push
movsl
into
lods
repnz
fildl
rcrl
stc
pop
xchg
fdivl
sbb
jmp
daa
pushf
mov
and
call
or
mov
in
mov
js
js
test
xchg
fstpt
insl
xchg
lea
jbe
pop
sbb
ret
das
xchg
enter
stos
cmpsl
mov
into
dec
push
pop
mov
shl
roll
test
jns
int3
test
mov
and
sti
mov
inc
fistl
or
fwait
pop
cld
xchg
or
mov
shll
gs
sub
cld
insb
loope
jp
pop
xor
flds
sbb
adc
dec
or
adc
push
push
lods
push
push
ret
lahf
and
es
jnp
insl
xchg
cmpl
mov
mov
aam
call
jne
xchg
repnz
mov
sub
mov
mov
mov
and
popa
mov
sbbl
add
ljmp
stc
xchg
mov
sub
cmc
cwtl
mov
sbb
xor
and
rorl
mov
ljmp
cli
aam
dec
jb
dec
and
test
ds
push
adc
daa
ss
fstcw
xchg
jbe
aam
psrlq
push
loopne
mov
out
jecxz
daa
adc
in
scas
into
cmpsl
cmc
divb
adc
pusha
xchg
mov
add
mov
adc
xchg
push
es
dec
cs
xor
mov
cmp
mov
in
leave
adc
fimuls
mov
mov
inc
fidivrl
jge
dec
or
sahf
cli
sub
mov
iret
sbb
sub
xchg
and
sub
rcrl
and
enter
push
adc
dec
cmp
test
inc
sar
add
or
lock
cwtl
jle
or
or
fs
cmp
insl
mov
fwait
inc
push
ja
test
andb
popf
cmp
or
pop
ret
push
xor
fists
pop
jecxz,pn
jp
jge
sahf
imul
pop
push
fildll
call
cmp
jo
xchg
mov
mov
mov
outsl
jg
xchg
mov
inc
push
ret
cmp
pop
jae
cwtl
mov
jmp
dec
xchg
cli
or
stc
mov
stos
jp
popf
mov
mov
inc
adc
jae
cmp
lret
inc
xchg
rcrl
pop
iret
icebp
push
test
test
fs
repz
or
movsb
mov
clc
cli
call
sbb
mov
xchg
js
aam
fst
xchg
scas
cmp
xlat
ss
inc
and
fs
dec
aam
xchg
decb
xor
jnp
xchg
sbb
push
sti
xchg
and
pop
leave
and
cmc
nop
mov
mov
xchg
iret
mov
mov
xchg
out
mov
das
push
cmp
push
add
aam
cmp
mov
mov
sbb
push
push
out
sahf
jle
stc
popw
pop
add
inc
arpl
stos
or
or
or
insl
jmp
insl
xchg
lret
mov
out
sub
sub
cmc
pusha
scas
xlat
cli
ja
and
clc
cltd
out
mov
sbb
jmp
jle
cmp
outsb
and
lcall
repz
in
or
jbe
dec
iret
iret
clc
or
decl
ficompl
adc
insb
cmp
add
mov
add
insb
pop
xchg
dec
push
movb
int3
sahf
test
push
xchg
mov
mov
clc
ja
nop
cli
add
cli
lahf
mov
dec
test
add
outsl
mov
adc
cmp
sar
dec
movsl
or
fneni(8087
and
push
aad
sbb
push
push
in
sbb
sub
js
xchg
sbb
add
bound
sbb
iret
mov
inc
testl
cmp
push
ficoml
inc
pop
into
or
insl
fisttpl
sarl
pop
fcmovbe
cmp
mov
or
ret
shll
pusha
add
pop
jns
enter
push
cmp
mov
lret
ss
repnz
jle
std
aaa
call
ret
inc
xchg
clc
adc
imul
pop
xor
jno
dec
jp
cli
mov
in
imul
pop
xlat
add
xchg
jne
fcmovb
sahf
sbb
push
ret
inc
test
scas
loope
fistl
add
or
out
add
sub
mov
stos
stc
xor
fidivs
test
mov
push
adc
pop
xchg
push
imul
ljmp
mov
dec
cli
jle
ds
adc
addr16
xor
sub
pushl
insb
mov
jne
insl
dec
into
sbb
inc
cmpsl
shrl
jle
sbb
fiaddl
mov
xchg
int3
or
xchg
inc
cmpsl
imul
push
movsl
jp
sti
test
fdivr
inc
loopne
jo
or
rolb
clc
add
rcl
adc
dec
pop
add
cld
xchg
lock
stos
xchg
fdivl
jmp
dec
loopne
fcmove
mov
sub
nop
imul
cmp
or
imul
mov
out
push
push
cmp
or
dec
mov
mov
or
repz
dec
cld
add
dec
xchg
stc
adc
sbb
loope
lods
psubsw
stos
in
adc
out
xchg
jmp
push
jge
cmp
notb
or
xchg
leave
rcrb
mov
pop
sub
fst
xchg
jno
jl
and
shlb
cmpsb
add
mov
lods
and
pop
and
aas
push
into
inc
lock
sbbl
pushl
pop
mov
and
jmp
repnz
stos
pop
mov
or
repnz
and
out
jmp
popa
lods
sub
cmpsb
dec
mov
mov
xor
out
cltd
push
stos
dec
fldt
push
push
in
xor
adc
ret
xchg
pop
daa
test
das
inc
pop
js
sub
aam
xchg
insb
cmp
mov
pop
movsl
xlat
xchg
jne
mov
mov
imul
pop
fstl
ss
mov
and
mov
cs
or
mov
and
push
xor
mov
mov
shr
pop
push
int3
mov
movl
mov
push
lock
cltd
xchg
insl
int
or
mov
dec
into
dec
or
inc
xchg
dec
pop
mov
jle
nop
test
jno
dec
mov
push
push
cmc
fmuls
leave
cwtl
das
loop
bound
mov
insl
sbb
leave
pop
ficoml
push
repnz
addl
fcomp
push
je
or
push
add
cmpsb
and
jp
xor
imul
mov
or
das
mov
outsb
fs
xor
mov
mov
xor
into
insb
and
sbb
jae
jae
mov
sub
test
and
mov
inc
ret
pop
call
jne
nop
cmp
mov
pop
subl
push
scas
jp
das
ja
leave
fnstcw
xor
jg
dec
lea
cmp
pushf
dec
das
addr16
fildll
sbb
inc
insl
sti
repnz
out
xchg
aaa
xchg
outsl
sti
mov
lret
push
int
les
aaa
ss
xlat
mov
push
pop
aad
std
and
sub
rclb
dec
inc
adc
add
imul
fnsave
xor
lret
data16
fisubrs
push
lods
sbb
xchg
cmp
jl
adc
ficomps
pop
or
push
pop
out
dec
fnstsw
movzwl
sub
pushf
popf
loopne
js
aas
pusha
cmp
mov
aad
and
call
orl
pop
mov
cltd
test
sbb
and
push
lock
clc
stos
hlt
loop
shll
mov
xchg
push
mov
dec
sub
mov
lret
repz
jo
cltd
mov
adcb
fldenv
and
cli
adc
nop
push
pop
loop
js
pop
and
test
xor
pop
mov
cmp
loopne
sub
stos
xor
in
pop
fsubrs
clc
xchg
repnz
popf
cmp
jle
ss
outsb
icebp
push
pop
out
int3
scas
dec
sti
push
inc
adc
mov
out
jne
lds
inc
add
cmp
or
out
dec
jne
mov
push
cltd
lret
jb
xchg
leave
pop
mov
mov
add
mov
jl
pusha
and
adc
or
mov
mov
sbb
xlat
imul
add
into
lods
fldenv
test
pop
les
xchg
add
shlb
fists
pop
sbb
testb
sbb
sub
shll
arpl
cmp
jle
lds
sbbb
pusha
stos
jae
sbb
call
in
scas
sarl
insb
loop
lret
scas
sti
or
sbb
shlb
xor
add
inc
push
dec
mov
fcomp
jae
sbb
mov
fidivrl
mov
into
into
pop
addr16
jb
dec
pushf
outsl
or
bound
dec
mov
stos
sbb
mov
rolb
add
xorl
cld
jle
lret
icebp
fistps
jmp
hlt
sbb
mov
lret
lcall
jg
pop
jno
mov
and
outsl
scas
test
test
sbb
repz
loop
sbb
xchg
addr16
cmc
ds
jp
push
sbb
ja
mov
push
dec
icebp
mov
fldt
int3
sub
or
lock
adc
inc
inc
ss
dec
rolb
push
and
inc
scas
das
mov
out
mov
sbb
add
test
ds
mov
lahf
sahf
xchg
pop
xor
cmpsb
popa
and
fsubrs
mov
adc
testl
pop
inc
pop
push
imul
mov
mov
cltd
push
iret
mov
or
pop
push
sarb
mov
js
fstpt
addr16
mov
jmp
jns
decb
pop
lds
sbb
std
push
sbb
jne
les
cmp
inc
pop
pop
fstps
xchg
and
lock
stc
jnp
aaa
jbe
int
push
imul
cmc
jmp
sub
cmp
je
scas
lds
into
cmpsl
pop
outsb
sbb
dec
mov
or
dec
daa
jo
daa
and
test
test
push
mov
ss
mov
mov
adc
sub
hlt
cltd
mov
add
jns
xor
pop
mov
push
push
popf
daa
xchg
test
and
cmp
inc
xorl
adc
js
push
sti
pop
cltd
add
rorl
popf
pop
in
or
inc
add
das
movsb
xor
mov
cmp
outsl
mov
mov
stc
mov
sbbl
cmp
mov
jmp
jg
fsubr
insb
stos
add
clc
fmul
sub
sub
out
xor
or
movsb
inc
roll
xor
sub
mov
lret
adc
mov
push
cs
cmpsl
push
dec
fwait
inc
adc
or
orb
movsl
cs
or
in
in
inc
nop
add
mov
gs
or
mov
loop
adc
lods
and
fiadds
jecxz
std
sbb
adc
pop
mov
mov
out
es
outsl
rol
call
cmp
add
adc
or
in
mov
jmp
xchg
mov
orl
adc
ds
add
xchg
pop
lods
das
push
rcrl
pusha
adc
pop
dec
in
cmpsl
mov
or
mov
cwtl
jo
xor
sar
dec
mov
dec
pop
fildl
cwtl
cmp
cmp
popf
outsl
jnp
lcall
jmp
and
and
xchg
sti
mov
fwait
inc
out
inc
pop
cmp
js
pop
adcb
nop
push
mov
mov
addb
mov
xchg
pop
iret
bound
mov
xchg
das
jl
mov
mov
and
mov
inc
cmp
xchg
lret
cmp
jb
xchg
mov
int3
sbb
dec
daa
ret
pop
outsb
jno
add
pop
xchg
or
sub
aam
je
pop
jno
push
cs
jecxz
out
mov
outsl
jns
adc
mov
das
push
clc
aas
cs
mov
iret
sbb
fldenv
sbb
aaa
cmpsb
out
push
into
mov
test
sub
mov
nop
jns
outsl
and
loope
push
ljmp
cmp
push
jge
xor
inc
pop
mov
insl
adc
xchg
cltd
cmpsb
std
nop
push
fstpl
rorl
fisubrs
ret
divb
in
cmp
sbb
movsl
pop
or
mov
mov
out
lcall
mov
mov
es
and
gs
leave
mov
aas
xchg
push
lock
and
cld
mov
test
loopne
xor
jne
add
jae
sub
push
addr16
addr16
sbb
dec
lods
cli
push
pop
adc
sbb
mov
insl
imul
jp
sbb
cmp
mov
xchg
cmp
int
inc
pushf
lods
out
mov
dec
mov
pop
aad
inc
xor
inc
cltd
lret
cmp
or
pmuludq
pop
enter
fcmove
movsb
or
subb
ljmp
xchg
fs
test
fucomi
mov
mull
faddp
loop
testl
lahf
stos
jmp
fwait
stc
adc
xchg
in
pop
scas
scas
and
pop
std
sbb
sbbb
and
sbbb
push
in
inc
push
jno
sbb
orl
insl
mov
bound
mov
inc
jne
pop
sbbb
sub
insl
test
sbb
mov
mov
in
call
pop
push
lods
dec
ja
dec
push
mov
cmc
push
jne
mov
aam
push
ljmp
inc
adc
pushf
mov
fwait
add
imul
push
push
cmp
cwtl
cmp
sub
push
idiv
xor
inc
repnz
mov
jl
imul
dec
sti
ficoml
dec
and
lods
xor
xchg
jmp
adc
ss
idiv
jmp
xchg
sti
push
fldcw
mov
test
cmpsb
movsl
xchg
clc
test
mov
into
insl
xchg
mov
jo
mov
imulb
sbb
mov
adc
inc
add
xchg
lret
jmp
add
test
xchg
mov
lea
into
mov
movsl
push
pop
pop
push
xchg
sti
mov
shlb
sbb
or
jmp
ss
jae
cmc
lahf
push
jne
lcall
in
mov
push
pop
cmp
std
cmp
xor
iret
mov
nop
mov
inc
mov
adc
aaa
cmp
mov
dec
scas
sub
arpl
lds
lahf
ss
popa
rolb
jmp
mov
aas
arpl
test
addb
pop
xor
loopne
movsb
mov
mov
dec
mov
mov
sbb
fdiv
je
aas
out
dec
sub
push
or
fcoms
cmpsb
test
push
xlat
jg
mov
mov
pop
add
sbb
mov
xor
push
inc
fdivrp
xchg
pop
inc
ljmp
mov
add
sbb
scas
rorl
fimull
xor
mov
int3
aas
dec
push
shll
icebp
xchg
and
pop
into
pop
outsl
call
divl
ljmp
jmp
mov
sbb
cltd
jmp
cmc
jbe
sbb
sub
sub
jmp
xorb
ret
inc
iret
fwait
div
hlt
mov
stc
in
sub
adc
call
add
inc
hlt
or
fdivrl
je
xor
xchg
lcall
das
jo
movsb
test
into
mov
fisubs
pop
pop
lcall
mov
in
mov
je
repnz
test
call
test
les
and
jne
ror
cmp
push
jp
pop
mov
fmulp
and
invd
sbb
sahf
aas
dec
daa
jb
xchg
xchg
ret
xor
lcall
lret
fisttps
dec
mov
sbb
pop
mov
js
aaa
jge
fcoms
bound
jg
add
lahf
es
mov
pop
aam
ss
sbb
iret
mulb
test
enter
xor
adc
outsb
or
stos
into
dec
sub
data16
out
cmp
mov
mov
sub
aad
into
das
pop
cltd
ja
and
fdivrs
add
mov
je
pop
out
jl
inc
cli
lahf
mov
cmp
xor
loopne
aam
pop
and
cmp
xchg
cmpsl
and
mov
dec
or
jmp
sbb
adc
fists
sbb
cmpsb
sub
cwtl
xchg
xchg
xchg
xor
add
mov
lahf
xor
idiv
pop
cmovnp
inc
insl
fidivs
nop
cmc
jno
inc
dec
add
arpl
into
cs
dec
jo
shll
and
dec
mov
ljmp
int3
jecxz
testl
lret
lock
in
adc
cltd
ret
mov
notb
imul
pop
fadd
cmp
clc
dec
or
div
and
ret
xchg
push
daa
pop
fcoml
in
test
xor
xchg
repnz
cltd
mov
data16
xchg
sbb
add
aad
bound
or
and
xlat
enter
das
fstl
fisubs
cmpsl
ficoms
mov
in
mov
sub
or
mov
iret
dec
push
xor
aaa
loop
popf
add
cltd
ljmp
popa
jbe
xor
xchg
das
test
cli
div
popa
das
adc
cltd
push
xlat
xor
lahf
cmpsl
rcrl
rcr
adc
mov
mov
aaa
push
leave
cltd
sub
push
int
mov
in
jno
jb
pop
jb
popa
cltd
clc
dec
adc
mov
fwait
cmp
mov
inc
inc
das
rcrb
out
fcmove
pop
xor
mov
int3
inc
or
clc
pop
daa
push
adc
dec
addr16
ss
jns
xor
cmpsb
ljmp
and
jb
or
cmpl
push
sar
je
jmp
and
lcall
sub
outsb
mov
add
bound
push
insl
xchg
push
andb
xor
jns
adc
xchg
push
int
push
add
decl
es
cmp
aad
mov
test
jmp
sti
cmc
xchg
sub
push
shr
insl
aad
push
mov
dec
iret
push
pop
clc
jg
dec
pushf
push
cmpsb
push
stc
rcrb
lea
repnz
arpl
fidivl
pop
mov
daa
cmc
sbb
mov
pop
mov
sarb
jmp
cmpsl
pop
cs
mov
loop
int3
and
push
or
mov
add
in
cli
lcall
mov
xor
cmp
sbb
jecxz
jecxz
dec
jne
jmp
xchg
jecxz
jns
out
sbb
in
mov
xchg
jg
lods
js
aam
scas
cwtl
das
shrd
cmp
sub
cmp
and
or
int
movsl
jne
shrl
int
filds
cmp
mov
cmpsb
dec
or
dec
sbb
jnp
lret
es
paddq
hlt
loop
jp
mov
fsub
sub
into
dec
test
dec
adc
sub
cmp
test
push
xchg
and
sarb
loopne
mov
cwtl
out
xchg
sbb
mov
sub
rcl
in
sarb
mov
dec
dec
inc
xchg
add
jne
out
imul
xchg
mov
mov
mov
mov
push
rcr
xchg
push
sbb
ds
jp
mov
adc
test
pop
sti
xlat
fwait
sbb
std
cmc
aam
push
adc
ljmp
xlat
sub
ds
mov
xchg
xchg
into
daa
les
adc
lcall
add
ret
inc
stos
push
pop
icebp
dec
jg
popf
js
int
lods
sub
sbb
je
cmp
leave
mov
mov
dec
mov
xorl
adc
adc
sbb
shrb
loop
imull
iret
push
aad
adc
mov
scas
neg
pop
push
outsb
cwtl
xchg
pop
push
mov
jl
hlt
mov
mov
pop
das
pop
subl
cmp
xchg
js
mov
fdivr
jg
mov
xchg
or
add
and
ret
fcom
or
pusha
adc
into
js
inc
mov
ss
lea
cmp
or
jnp
xchg
or
push
mov
scas
mov
loop
jb
mov
aam
shr
insb
jmp
dec
popa
sub
mov
rcll
cmp
arpl
clc
mov
jb
sbb
add
mov
mov
movsb
xchg
jo
xor
in
xor
das
icebp
int3
in
mov
dec
jl
cmp
sub
cmp
sub
bound
add
and
cmp
xchg
mov
xlat
aam
imul
cmp
cli
fscale
loop
sbb
sarb
out
mov
testb
fistps
xlat
jg
jne
fisttpl
clc
daa
adc
adc
jecxz
test
inc
fimuls
pop
sbb
jnp
imul
or
test
jnp
cbtw
js
sub
sub
loope
or
push
push
fcmovnu
add
jmp
xchg
stc
jge
aaa
loopne
pop
xorb
pop
mov
lahf
mov
leave
cmp
fwait
sub
fs
jmp
jge
sbb
or
pushf
mov
dec
dec
jecxz
addr16
jnp
inc
jp
or
or
add
xor
xor
decl
inc
dec
imul
in
je
sahf
out
aam
std
test
int3
loop
sub
xchg
dec
fdivl
inc
xchg
test
sbb
pop
or
inc
sub
insl
test
jmp
xor
xor
aaa
dec
fs
pop
jmp
in
cmpb
sarb
mov
jecxz
jnp
sbb
or
sbb
inc
stos
xchg
inc
movsl
mov
jg
out
push
outsl
inc
cmp
ss
add
dec
std
sub
in
imul
jge
or
mov
mov
xor
add
cmpsl
jne
or
mov
mov
push
cmp
gs
xchg
add
mov
cvtps2pi
pushf
push
sub
loope
stos
mov
imul
push
das
mov
in
sub
push
sti
arpl
cmp
js
call
sub
push
in
jb
inc
mov
sarb
push
aas
sbb
dec
cmp
repnz
orb
and
dec
jp
out
xchg
into
lock
xlat
dec
push
shrb
and
stos
es
data16
push
ds
out
pop
jg
sahf
inc
sub
lahf
push
popa
fstps
outsb
mov
xchg
pop
jnp
out
cld
clc
int3
das
cwtl
inc
cmp
inc
sarb
mov
in
xor
outsb
imul
js
imul
daa
paddusw
jb
jns
inc
pop
cli
lret
enter
loope
ljmp
daa
scas
mov
jg
and
pop
loop
in
add
jge
mov
je
add
jnp
repnz
mov
jmp
in
cmc
into
sbb
mov
out
xchg
mov
dec
cli
pop
sub
xor
imulb
int3
clc
mov
movsb
pop
jmp
pop
mov
sbb
leave
mov
repnz
mov
mov
outsb
sub
aas
xchg
fnstenv
mov
out
jge
xchg
jns
outsl
pop
sbb
imul
popf
cmp
das
into
loop
mov
inc
xchg
shrl
mov
aad
test
mov
cli
jg
mov
dec
cld
lods
mov
in
inc
pop
or
inc
dec
sbb
push
out
inc
std
jns
mov
dec
sti
jnp
or
leave
jno
and
push
pop
lret
lock
fcmove
jecxz
push
pop
xchg
mov
stos
mov
jle
rorb
xchg
mov
dec
insb
sar
sbb
int3
jecxz
stos
push
mov
xor
outsb
int3
sbb
mov
jns
subb
in
cltd
hlt
jg
mov
dec
pop
mov
sbb
sbb
lahf
ss
sbbl
cmp
sub
mov
js
je
jne
dec
shlb
adc
push
mov
or
std
pop
push
mov
xor
cmp
insl
xchg
rorl
fiaddl
xchg
pop
imull
lret
not
mov
popa
in
in
cmp
fsubr
mov
or
mov
test
ficoml
test
out
mov
mov
mov
imul
sub
xchg
sub
das
nop
inc
xchg
stos
lods
dec
dec
jmp
js
or
arpl
es
sub
xchg
repnz
ss
adc
push
cli
dec
leave
shrb
or
push
cmp
push
lea
inc
mov
pop
pop
int
dec
dec
ds
scas
adc
cs
inc
negb
pop
push
out
popl
test
adc
rcrb
adc
mov
ds
mov
jmp
in
xchg
adc
jg
adcl
call
ret
mov
and
xchg
xorps
ja
xchg
test
lcall
inc
dec
and
aaa
out
pop
mov
cmp
lds
pop
hlt
inc
push
mov
sbb
dec
dec
aam
xchg
test
dec
les
movsb
push
sub
xlat
std
xchg
addr16
ljmp
sbb
push
push
jg
mov
iret
ds
mov
inc
add
jns
xor
fmuls
dec
fnstcw
jb
jl
int3
rcrl
sarl
leave
add
xor
loopne
push
sub
pushf
sbb
dec
push
ss
or
dec
dec
fcoml
aas
pusha
test
inc
xchg
cwtl
sbbb
xchg
cmpb
jne
stos
and
lea
pushf
sbb
int3
sbb
sub
jg
jl,pt
cltd
orb
pop
mov
rcr
cld
cli
mov
or
mov
push
in
dec
mov
mov
aam
pop
and
mov
push
lret
pop
lods
fsub
nop
sub
cmp
jne
ret
mov
push
bnd
ljmp
and
pop
push
sub
in
fists
cmp
inc
nop
add
repnz
cmp
std
push
loop
lock
pop
scas
dec
lea
in
xor
aas
sahf
gs
add
pusha
and
mov
push
adc
push
push
push
push
xor
test
pop
repz
dec
pop
dec
mov
xchg
aaa
cmc
adc
clc
pop
cli
out
mov
int3
jg
push
dec
dec
nop
adc
stc
sbb
js
ljmp
mov
iret
jmp
idivl
outsb
stc
sbb
add
mov
sbb
mov
adc
push
pop
cwtl
sbb
faddl
lahf
jae
outsb
arpl
aaa
loope
or
and
cltd
enter
xchg
pop
cwtl
push
or
xchg
jnp
repnz
test
push
xchg
insl
lds
shrb
decl
fld
lock
popf
add
add
mov
mov
mov
shlb
jbe
aam
ljmp
call
push
cwtl
cld
std
cmpb
aad
in
inc
shl
mov
enter
iret
mov
dec
iret
mov
ljmp
aas
lret
and
adc
or
mov
or
icebp
loop
xlat
in
or
inc
adc
or
inc
mov
out
push
dec
mov
add
lret
dec
push
sub
inc
or
xchg
xchg
inc
insl
nop
jns
mov
icebp
jmp
or
popf
and
inc
loop
imul
cmp
out
lds
push
sub
jle
movsl
pusha
fwait
loop
xchg
idivb
jp
mov
mov
test
adc
dec
xor
out
dec
in
sub
outsb
jbe
dec
sub
aaa
hlt
mov
pop
jb
bound
popf
sub
inc
adc
sti
stc
loope
dec
jo
or
jmp
into
movsl
xchg
cmp
je
outsl
cs
mov
mov
mov
lahf
dec
push
cmp
cld
ja
xlat
pop
mov
lods
push
fsts
push
push
push
daa
test
mov
sub
dec
pop
push
mulb
js
imul
ret
aam
pop
lahf
popa
bound
clc
push
jne
cmc
loop
pop
sub
xchg
div
cmpsl
testl
cli
jo
movsl
xor
xor
mov
shrl
int3
pop
pushf
aam
cli
cmp
xchg
aad
dec
adc
mov
test
jo
fimull
jne
and
pushf
aas
out
xchg
dec
insl
xor
js
mov
push
imul
lcall
in
std
fstps
inc
enter
ja
out
lret
insl
mov
je
dec
popa
jmp
dec
stos
inc
add
pop
mov
push
add
sbb
frstor
shrb
add
lret
mov
adc
mov
jns
mov
sbb
sbb
out
mov
clc
adc
mov
pop
lcall
pop
not
cwtl
loope
or
and
xchg
jp
pop
scas
mov
divb
or
stos
aam
stos
lock
mov
mov
call
cmp
sub
test
pop
push
mov
mov
push
inc
out
leave
xchg
ret
subb
push
in
imul
adc
rcr
aam
testb
loop
ret
sbb
iret
repnz
and
outsb
and
ja
mov
loop
bound
aas
add
mov
lret
xchg
push
into
sbb
add
xchg
lret
lods
or
das
fisttpll
and
test
int
repnz
lahf
cwtl
fmuls
jae
rcll
dec
add
mov
stos
mov
and
mov
cmp
add
xchg
pop
aad
inc
imul
cs
addr16
mov
pop
iret
mov
cwtl
outsl
or
or
das
mov
inc
ja
xchg
mov
xlat
cwtl
jg
cmp
pop
and
sbb
xlat
ja
aam
out
jo
pop
lds
lcall
out
mov
pop
mov
mov
fimuls
xor
mov
cmp
sti
jne
xor
pop
xor
cmp
sbb
outsb
xchg
dec
lret
push
ds
lret
call
fs
popa
std
inc
aam
jbe
jno
jp
out
out
dec
negb
mov
in
pop
adc
push
sub
out
or
cwtl
xchg
into
inc
das
mov
sub
cmpsl
in
fists
iret
test
mov
andl
sbb
adcb
mov
and
sarl
xor
mov
mov
xchg
jge
mov
pop
add
pop
xlat
pop
inc
add
jl
cmp
cmpb
lods
sub
in
cmp
gs
push
or
cmc
xchg
pop
mov
or
adc
jmp
or
lds
lcall
adc
or
xor
shll
add
shrl
aam
dec
lcall
add
ja
xor
mov
imul
int3
cld
mov
es
sti
lea
ljmp
dec
xchg
decl
and
cmp
into
shr
or
hlt
fimull
loope
rorl
int3
mov
xchg
push
cmc
mov
call
fstl
lods
negb
mov
std
ja
mov
addl
mov
nop
lret
add
sbb
mov
mov
add
loop
lahf
daa
push
jae
daa
paddb
mov
and
loop
mov
loop
xchg
cld
jle
mov
pop
fiaddl
push
cmp
dec
outsb
push
mov
bt
in
xlat
dec
sub
repz
cli
jno
cmp
lcall
mov
cs
mov
sbb
add
push
jle
shlb
mov
and
jnp
jge
fs
pop
or
mov
iret
inc
fbld
pop
dec
inc
push
out
xor
or
scas
mov
inc
add
inc
cmp
insl
in
jecxz
jg
or
out
xor
jns
cmc
add
sbb
cld
sub
fistl
jge
jp
adc
add
dec
ret
jp
xor
sbb
pop
loopne
dec
mov
fists
mov
andl
jg
mov
faddl
push
mov
mov
pop
jns
sahf
jae
xchg
orb
jmp
add
ret
cld
iret
int3
jbe
clc
adc
jecxz
stos
jmp
inc
addb
push
leave
faddl
stos
shl
add
or
sbb
push
jge
leave
sti
ficompl
mov
dec
sbb
int
mov
xor
jle
sbbl
add
xor
out
mov
iret
mov
dec
int
stos
sbb
mov
stos
push
fldt
fwait
test
mov
and
ja
imull
ljmp
arpl
dec
int3
xor
jns
push
call
mov
mov
fbld
push
jge
add
mov
lcall
and
aad
pop
cmp
out
mov
fs
xchg
sbb
stos
aad
es
mov
pause
cmpl
xchg
push
pop
push
das
pop
mov
mov
xchg
dec
lcall
es
push
test
pop
fstpt
aas
inc
jmp
mov
jno
sbb
leave
cmc
stc
std
rcll
xor
mov
ljmp
jo
test
es
adc
leave
xor
push
ja
dec
daa
cmpl
inc
imul
jp
or
adc
fisttpl
push
stos
popf
imul
jbe
sub
push
mov
push
dec
mov
gs
call
and
or
and
xchg
repz
push
mov
cmc
pop
ss
ret
jbe
mov
mov
mov
arpl
xchg
dec
xlat
lcall
test
inc
adc
movsb
xlat
mov
test
bound
push
jns
int3
sbb
aas
mov
or
bts
mov
repnz
sarb
repnz
adc
pop
mov
push
mov
aaa
roll
outsb
call
mov
popl
std
sbb
inc
fscale
lock
xchg
insb
inc
lcall
jle
sbb
mov
sub
imul
cmp
mov
xchg
dec
into
nop
adc
xchg
lcall
mov
andb
testb
push
loope
ss
pop
fwait
cmc
scas
jp
cmp
das
ficompl
fisubrs
mov
popf
inc
arpl
push
dec
xchg
sbb
cltd
mov
pop
mov
dec
ret
scas
fcmovu
fldcw
add
xor
xchg
rcll
sub
sub
pop
and
clc
mov
sti
ja
ret
push
outsb
pop
rorl
mov
dec
inc
loope
inc
jle
out
sub
shrb
dec
xor
mov
mov
jmp
subl
bound
xlat
out
xchg
mov
mov
outsb
pop
mov
xlat
rorb
out
rclb
inc
lcall
pop
ror
xor
outsl
push
repnz
data16
dec
add
and
sbb
jo
jbe
iret
ret
mov
sbb
cltd
lret
repnz
sub
dec
push
cwtl
scas
xchg
fistpl
add
add
cmc
scas
jb
dec
or
or
jge
jp
pop
scas
test
fcmove
or
arpl
xchg
push
xchg
mov
int3
pushf
mov
push
push
scas
iret
push
lret
int
mov
dec
dec
xchg
xchg
push
scas
pop
in
imul
outsl
jnp
push
pop
les
stos
das
jns
fistpll
xor
jmp
imul
mov
fs
dec
sbb
iret
inc
push
jl
inc
inc
fcomps
lods
aaa
insb
cmp
jle
pop
xlat
or
add
dec
adc
cmc
scas
ficoml
lods
mov
or
adc
mov
jecxz
mov
dec
mov
adc
ds
out
adc
pop
mov
in
mov
in
push
and
pushf
movsl
xchg
lock
jg
mov
dec
aad
jbe
add
loopne
inc
sub
mov
cmp
and
lret
adc
out
pushf
test
aad
lcall
push
repz
xchg
arpl
jbe
dec
xor
cmp
loop
out
out
ret
test
mov
sbb
and
cmpsb
fbstp
inc
dec
or
fmuls
xchg
xor
or
cmpsb
or
mov
inc
fbstp
pop
clc
cmp
adc
fidivrs
fnstenv
mov
out
out
inc
dec
sub
ret
add
pushf
cld
lea
jg
scas
gs
test
inc
lods
sub
fisubrs
xchg
fstpl
cmp
mov
dec
jno
into
call
addr16
lret
inc
mov
or
lods
fisubrs
or
adc
lahf
xor
add
push
push
mov
sahf
mov
addr16
loope
loop
cs
xor
inc
cmp
fcompl
push
outsl
xor
fnstcw
sub
mov
popa
aam
jo
add
addr16
dec
imul
and
mov
jle
in
push
ds
inc
stos
cvtps2pd
enter
adc
std
fsubrl
xchg
test
dec
imul
xchg
xlat
fisttps
push
xor
int3
outsb
movsl
subb
or
adc
and
sub
movsb
test
xchg
out
popa
xchg
outsl
scas
pop
jnp
mov
mov
adc
xchg
sbb
pop
xchg
add
adc
mov
adc
lcall
out
popa
loop
xchg
xchg
imul
sub
scas
push
adc
and
cmp
or
mov
inc
bswap
inc
cltd
popf
add
je
shl
inc
imull
punpckhbw
sbb
cmp
push
mov
loopne
sbb
sbb
jge
jmp
call
mov
push
gs
in
xor
inc
cmp
push
mov
jmp
pop
pop
push
clc
mov
add
dec
adc
jmp
test
mov
xchg
data16
scas
aam
pop
movsl
sbb
jmp
push
cltd
imul
insb
xor
add
in
xchg
cmp
sub
fidivrs
dec
test
fs
jno
leave
aaa
dec
frstor
sbbl
mov
xchg
mov
shlb
ljmp
stos
test
pop
mov
ss
push
mov
lods
xchg
and
add
lcall
in
sub
stc
ljmp
jmp
sub
or
inc
sub
or
push
out
subb
popa
sub
ret
adc
jg
xchg
cmp
mov
les
nop
sub
push
push
xlat
or
add
sub
add
outsb
cmp
pushf
mov
inc
clc
pushf
pop
xor
test
in
stc
test
add
lret
mov
pop
in
mov
push
arpl
and
xchg
sti
loope
scas
jp
push
lea
inc
push
jns
ja
add
mov
cmp
jno
sub
lds
and
ss
adc
sub
sub
cmp
push
dec
lods
sub
lahf
or
sbb
mov
aaa
aad
out
lds
lds
in
xchg
jp
adc
adc
mov
in
movlps
cmpsb
xchg
lret
push
mov
xchg
jno
pop
xchg
xchg
fisubl
jle
mov
jge
push
addr16
push
outsb
jge
enter
lahf
adc
mov
rcrl
or
dec
adcl
rol
push
cwtl
pop
jp
xchg
outsl
cmc
xchg
push
jbe
enter
jge
sbbb
add
aas
cmp
xor
aaa
and
xchg
lods
adc
or
int
in
inc
sbb
sub
or
inc
sub
inc
aam
addr16
sbb
add
inc
add
mov
flds
pop
sbb
pop
imul
call
scas
mov
daa
mov
loop,pt
in
pop
mov
shrl
cmp
rorl
roll
movsl
dec
mov
xor
inc
int
mov
test
and
mov
test
mov
and
inc
inc
add
ja
cmp
mov
insl
cmpsl
or
jns
lods
popf
imul
fucomi
pop
or
insl
scas
xchg
test
imul
mov
and
push
dec
or
lahf
inc
mov
jns
jecxz
xchg
in
fstpt
aad
xchg
pop
jnp
and
add
push
or
in
mov
scas
leave
cmpsl
andl
push
jo
int3
cmp
xchg
sub
loopne
sti
insb
pop
and
sub
push
fdivr
xor
dec
xor
and
fbstp
js
inc
adc
sub
lret
push
lret
inc
cwtl
cmp
sub
jl
fcompl
push
aad
mov
pop
adc
and
adc
xchg
int3
pop
mov
cmp
xchg
andb
add
sub
adc
ror
mov
insb
mov
sbb
in
ljmp
or
mov
mov
xor
cli
push
xlat
rol
xchg
je
notl
adc
jo
cmp
test
sbb
loop
jmp
outsl
mov
sbbb
imul
xchg
xchg
inc
or
mov
jbe
in
ljmp
bound
fidivs
dec
cmp
leave
or
icebp
mov
jne
push
push
enter
pop
movb
bts
aas
das
mov
pop
inc
mov
lods
jg
pushf
clc
cmpl
popf
sub
inc
les
into
lock
mov
adc
jmp
in
push
inc
mov
mov
inc
dec
or
lcall
add
push
jns
push
in
lahf
jmp
ret
fadds
dec
inc
push
mov
add
cmp
mov
push
pushf
ljmp
aas
pop
lcall
or
or
xchg
shrb
cmp
stos
mov
adc
shll
mov
jb
test
call
cmp
test
cmp
and
push
sub
pop
sbb
ja
cmp
or
sub
xchg
mov
push
pop
pop
cld
in
and
mov
in
dec
movsl
int3
jmp
pop
mov
dec
adc
mov
insb
push
mov
jp
sbb
fwait
js
clc
inc
sahf
lods
addr16
aas
jmp
test
lea
mov
repnz
mov
inc
and
adc
mov
das
xor
scas
sarl
pop
lods
and
test
loope
mov
sbb
enter
cs
xchg
cmc
int
cs
popf
test
lock
jno
aad
adc
mov
push
pop
adc
push
aas
pop
rolb
or
cmp
jp
loop
mov
jge
or
nopl
ficoml
imul
and
out
insl
mov
mov
lret
std
mov
xchg
ds
scas
cmp
or
sbb
dec
adc
sbb
jae
fistps
pop
movsl
add
lods
insl
push
xchg
aas
xchg
mov
call
push
and
lret
shl
sub
push
xor
pop
pop
add
cmpsl
popf
ret
adc
js
add
sub
jp
push
jecxz
sbb
jnp
push
push
mov
jae
shll
dec
mov
js
loope
jge
and
mov
jns
jne
cli
or
ret
in
outsl
fst
push
push
adcb
rolb
jg
sub
pop
scas
iret
shll
adc
subb
pushl
lret
fwait
mov
popf
or
scas
icebp
xlat
mov
out
fldenv
cli
testl
fdivrp
js
lds
inc
xchg
and
sub
in
addr16
sub
fisttps
pop
aas
lret
inc
test
inc
dec
dec
cmp
daa
and
mov
hlt
push
fdivrs
or
sbb
cmp
adcl
mov
jg
fistpll
mov
lahf
mov
jl
out
addr16
insb
fisttpl
scas
subl
xor
sub
xchg
sbb
mov
mov
pop
mov
sbbl
mov
stos
push
cmc
idivb
scas
inc
pop
mov
sub
sbb
mov
clc
inc
pop
mov
xchg
lock
lret
mov
and
test
inc
ffree
andps
jp
mov
pop
xor
xchg
sbb
inc
lsl
ficomps
imul
scas
sbb
fdivrl
adc
repz
sub
sahf
je
jno
and
inc
dec
cltd
inc
fcmovnbe
pop
sbb
repz
test
mov
mov
notl
pop
inc
cs
mov
pushf
cmp
popf
rdtsc
addr16
je
lret
sub
pop
xchg
dec
dec
pop
pop
xor
aad
lcall
pushf
lock
int3
lods
fistpll
mov
inc
mov
scas
pop
and
inc
cli
pop
xchg
inc
push
xor
mov
movsb
mov
fadds
cmp
sahf
lcall
lock
or
loop
stos
sbb
mov
popf
fwait
dec
cmpb
jne
int
ficompl
sub
pop
cmp
faddl
addr16
or
cs
sub
clc
mov
inc
inc
shlb
mov
ljmp
outsl
lret
sar
xchg
xor
idivl
in
cmp
xlat
mov
out
stc
daa
sub
pop
push
xchg
clc
inc
mov
pusha
pushf
xchg
movsb
sub
andl
inc
xor
add
cwtl
xchg
sub
aad
es
scas
push
js
mov
xchg
pop
pop
lock
fsubrl
repz
pop
fiaddl
outsb
cmpl
loopne
mov
mov
dec
push
xchg
bound
pop
mov
xor
or
out
xorl
mov
dec
adc
inc
mov
ss
mov
out
ja
out
es
xor
or
fdiv
icebp
jbe
xchg
into
jecxz
mov
rol
push
or
cmc
or
les
enter
shl
ret
repz
adc
sub
lahf
pop
add
jno
mov
in
enter
lea
lahf
mov
orb
mov
lahf
test
or
out
dec
cwtl
cmpsl
mov
mov
popf
push
mov
jne
movsb
mov
jnp
adc
out
leave
stos
fldl
in
jge
xchg
dec
out
imul
imul
fidivl
sbb
lea
xchg
movsl
dec
mov
xchg
call
push
out
test
pop
cmp
std
push
aam
cmpxchg
cwtl
mov
sub
and
das
adc
in
xchg
filds
imulb
enter
cmp
call
pop
iret
and
call
shll
pop
fsubs
outsl
stc
call
or
pop
sbb
dec
pop
inc
xorl
pop
cmpl
pushf
pushf
mov
mov
mov
sub
cmc
mov
mov
add
les
mov
sub
sub
stos
lock
mov
shl
test
loopne
sbb
scas
mov
jmp
into
mov
scas
push
gs
sbb
fwait
ja
mov
daa
jmp
stos
sbb
dec
dec
in
mov
mov
jne
sbb
das
inc
bound
mov
sub
sbb
int3
inc
inc
cs
inc
push
movsl
xor
mov
push
test
ja
cmp
arpl
adc
repnz
insb
mov
sbb
dec
sahf
push
xchg
rcrb
or
loopne
idivb
lods
test
mul
dec
call
das
jae
mov
sub
and
ss
lahf
lods
pop
loope
mov
pop
ret
pushl
sar
inc
fld1
add
dec
scas
mov
cmp
stos
add
movsl
push
sahf
scas
fstps
mov
adc
das
out
push
xchg
jle
xor
and
testl
shll
lret
jmp
jp
cmc
dec
out
loope
add
pop
add
jne
in
sahf
inc
sub
dec
add
mov
inc
scas
mov
rcrl
shll
dec
fimull
imul
adc
addr16
push
out
loopne
inc
add
cmp
xchg
lret
lds
jle
mov
aad
int3
subb
stos
add
inc
mov
aas
and
enter
dec
or
aad
sub
popf
sbb
cmp
scas
or
sar
and
mov
js
lea
mov
loope
cmp
xlat
push
bound
test
cmp
jg
dec
jno
and
in
add
dec
lock
jne
and
clc
cmp
divb
in
mov
dec
pop
xchg
into
cli
in
inc
sub
push
jbe
fsubrl
xchg
sahf
mov
inc
daa
cld
in
outsl
mov
ss
out
mov
sub
mov
fildl
xor
addl
mov
in
dec
pusha
mov
cmp
or
ja
xchg
xchg
push
sub
jp
sub
loopne
pop
fwait
lock
std
jbe
push
mov
ss
adc
jb
jb
out
test
sbb
xchg
mov
cmp
lock
inc
std
inc
jge
lods
cwtl
or
sarl
negb
mov
or
in
adc
loopne
lock
mov
movsl
cmpb
cwtl
fiadds
les
xchg
movsl
imul
inc
mov
dec
mov
mov
inc
test
ficoms
call
jecxz
popf
out
sub
sbb
sbb
popa
dec
test
je
jo
fldt
push
cli
repnz
jle
out
cmp
lock
dec
in
cmp
in
in
push
mov
jb
call
xlat
xchg
rcr
mov
clc
and
xor
into
pop
sub
jb
pop
aas
sub
push
jp
push
mov
mov
push
repnz
pop
push
lahf
mov
inc
push
mov
popa
shr
mov
pop
ss
jge
add
mov
mov
jbe
dec
jns
out
adc
sbb
push
pop
fwait
std
icebp
and
sub
shr
jmp
fmull
xor
aas
in
sahf
loopne
sahf
test
xor
add
int3
and
mov
insl
movsl
xchg
mov
or
ds
shlb
ret
adc
jp
ljmp
xor
sahf
jl,pt
mov
mov
xor
js
push
and
dec
or
fadds
sarl
ret
sbb
adc
mov
sbb
daa
je
cmp
jg
pop
add
or
leave
sti
clc
fs
outsb
pop
push
call
arpl
cli
cwtl
cltd
imull
xor
or
dec
sti
rcrb
mov
ja
adc
pop
mov
jl
outsb
repnz
add
inc
xbegin
jae
xor
lcall
ss
jne
cwtl
in
repnz
scas
mov
imul
int3
les
sbb
lods
fcmovnb
adc
or
std
icebp
adc
iret
in
pusha
sub
push
add
mov
xchg
int
pop
icebp
sub
scas
shll
imul
fidivrs
call
movsl
outsl
test
pushf
cmc
xchg
xchg
mov
xlat
push
pusha
mov
mov
les
or
push
psrlq
in
xor
lods
cpuid
pushf
pusha
aad
sub
mov
push
punpckhdq
mov
sub
test
sti
mov
and
dec
aas
test
adc
jno
enter
pop
or
push
test
popf
insl
pushf
or
cltd
aam
lea
jns
mov
push
mov
pop
lods
sbb
sub
div
cmp
ss
sbb
pop
inc
pop
sbbb
xor
push
xlat
pop
push
stc
fnstcw
push
mov
inc
mov
mov
pop
imul
fnstcw
adc
xchg
leave
loope
pop
push
cmp
cmpl
mov
lcall
pop
add
push
je
lea
insb
push
pushf
fisttpl
bound
mov
pop
inc
cmp
movsb
mov
sbb
imul
pop
cmc
leave
push
arpl
out
lret
mov
sub
pop
jp
and
jp
mov
inc
dec
mov
adc
sbb
aas
aaa
jno,pn
mov
lahf
aas
add
xchg
lods
stc
xchg
dec
lret
sti
stos
in
adc
jb
leave
pop
mov
lcall
shlb
xchg
ljmp
cmp
cmp
imul
clc
jo
ret
scas
xor
xor
or
or
nop
mov
popa
sbb
iret
mov
rcll
and
mov
xor
mov
dec
andl
xor
push
movsl
xchg
cmpsb
mov
in
mov
jecxz
cld
mov
dec
push
sub
jle
fisttps
aas
xorb
jno
cmpsl
mov
loop
imul
rcr
sub
rclb
popa
mov
xor
out
sbb
mov
popa
aaa
data16
sub
push
mov
test
in
daa
sbb
loopne
cmpsb
insb
mov
lea
push
pop
sbb
sbb
xchg
add
xchg
add
inc
cwtl
ret
aad
xchg
into
rcrb
in
call
cmc
xchg
xchg
mov
push
std
out
jg
cmp
mov
jmp
mov
dec
in
das
xor
mov
out
fcmovnbe
add
push
sub
xchg
js
movsl
pop
pusha
stc
add
cmp
out
imul
xchg
subl
ss
mov
fidivl
xor
sub
adc
inc
fsubrs
imul
shlb
dec
std
push
hlt
ror
mov
les
mov
and
out
or
push
in
xor
and
xchg
push
add
jp
pop
inc
incl
inc
orl
in
mov
sub
xchg
dec
mov
insb
push
mov
dec
pop
sub
out
test
lcall
repnz
movsl
push
mov
inc
hlt
insb
dec
inc
xchg
cmc
int3
xchg
icebp
scas
dec
cs
sub
bound
ret
or
or
jecxz
cmpsl
mov
clc
fwait
cmpsl
mov
cltd
inc
push
push
das
dec
mov
dec
movsb
push
mov
sub
dec
mov
pop
es
stc
idivl
inc
or
inc
icebp
inc
scas
or
or
xlat
fimuls
sbb
mov
leave
lahf
xor
in
imul
or
xchg
loop
fcmovnu
xor
out
mov
loop
js
fs
popf
jp
dec
lods
cltd
sbbb
mov
inc
push
ds
subl
lods
and
popf
mov
leave
shl
fmuls
cmp
dec
mov
dec
sub
lahf
push
insb
ljmp
data16
sub
das
xor
aam
xchg
shrb
dec
in
sub
ret
std
adc
inc
xchg
rcl
testb
xor
inc
mov
mov
in
mov
and
movsl
xor
dec
aaa
dec
test
fpatan
and
popa
popa
cmp
ret
lea
xchg
jb
rcr
iret
push
add
mov
jns
test
sub
stc
je
ljmp
popa
loopne
jecxz
jl
lods
dec
jge
pop
jo
loopne
out
mov
or
je
xchg
xchg
fimuls
dec
jnp
xlat
adc
fwait
dec
pop
cmp
jb
enter
call
sub
aaa
fs
jle
dec
pushf
in
and
push
fiadds
cmp
daa
mov
xchg
out
dec
dec
popf
pop
cltd
inc
sub
jno
push
lods
sub
push
push
ret
inc
push
loopne
xor
jp
and
shll
fs
ljmp
add
xchg
fldcw
mov
jmp
pop
mov
mov
sbb
sbb
xorb
xchg
mov
xor
xchg
and
cld
popa
sub
scas
or
add
cwtl
push
mov
cmpsb
xchg
push
js
shlb
mov
ret
mov
pop
dec
daa
fdivrl
in
add
test
lret
aam
outsb
or
das
mov
inc
les
outsl
xor
inc
and
outsb
pusha
out
mov
aaa
add
sub
inc
jmp
loopne
jl
xor
or
out
lods
and
dec
stc
xlat
idivl
xchg
dec
and
imul
push
jnp
mov
pushf
rol
js
je
fdivs
mov
dec
add
pop
adc
mov
out
add
and
mov
mov
and
inc
std
fisttpll
or
xchg
push
mov
mov
jp
in
rcll
sbb
popf
mov
bswap
xor
pushl
in
jmp
add
mov
test
divl
test
pop
sub
das
mov
sti
daa
repnz
aad
ficoms
mov
stos
data16
lahf
sti
addr16
shl
jge
push
xor
mov
push
mov
push
push
sub
cmpb
negl
test
rcrl
xchg
adc
das
inc
nop
stc
xor
pop
shrb
lahf
inc
inc
repnz
mov
cli
shrl
out
movl
scas
call
jl
ljmp
stos
popf
imul
xor
outsl
sti
mov
fadds
jns
push
aaa
stos
xchg
push
popa
or
loope
hlt
fcomps
loopne,pt
fcmovnbe
pushw
push
adc
dec
mov
xor
inc
sahf
push
lods
insb
jecxz
mov
popa
xor
hlt
fnstsw
xor
das
fdivrs
and
insb
cmp
negb
and
mov
les
jb
mov
in
icebp
mov
fidivrs
inc
loop
sbb
push
hlt
dec
mov
mov
jbe
mov
test
adc
sub
sbb
sarb
cmp
leave
and
and
adc
clc
pop
inc
adc
jbe
jbe
xchg
decb
and
ret
adc
fists
fistpll
or
loope
nop
pop
out
les
pop
pushf
fistpll
pop
push
pop
in
push
and
push
push
xor
or
sarl
sbb
gs
cmpsl
mov
push
lods
mov
xchg
dec
ss
mov
fmull
pop
sub
lahf
sahf
sbb
push
out
dec
push
xor
mov
in
mov
pop
aam
sbbl
fcomps
enter
push
and
fcmovne
loope
adc
mov
test
fbld
or
push
mov
lahf
cwtl
or
pop
outsl
xor
sub
cmc
out
outsl
xchg
jns
pop
shll
mov
inc
pushf
lcall
inc
push
cmp
xchg
xor
push
jb
insb
nop
out
sub
dec
xchg
xchg
pop
iret
daa
shlb
mov
lds
add
lods
shll
adc
call
inc
addr16
inc
add
stos
sti
divl
sub
mov
inc
jo
mov
pop
cmp
lcall
xchg
bound
mov
gs
divb
jp
lcall
inc
xchg
adc
inc
rcll
lcall
and
and
lret
lock
ret
stos
sub
dec
lods
pop
inc
cli
call
out
jnp
popf
push
bound
repnz
outsl
dec
js
push
in
loope
dec
xor
fldcw
xchg
push
test
psraw
cmp
fisubs
mov
gs
rorb
imul
jae
in
ljmp
dec
imul
addr16
xchg
movsl
pop
and
aas
faddl
pop
sbb
dec
mov
dec
push
xchg
jg
or
into
jmp
iret
xchg
outsl
sub
sbb
mov
fdivs
sarl
mov
dec
out
xorb
mov
out
fcmovne
cmp
das
lahf
scas
iret
push
leave
mov
ret
pop
jno
aaa
call
add
xchg
adc
ret
push
sub
sbb
shl
outsl
inc
lret
scas
cltd
movsb
popa
cmp
rcrb
call
jp
add
arpl
or
shrb
mov
mov
out
rcrl
inc
repnz
pushf
stos
sbb
or
sbb
cmp
lods
inc
iret
push
dec
aad
xchg
jg
dec
mov
cld
je
dec
dec
iret
add
jg
addr16
and
sarl
cltd
lods
mov
mov
cs
into
cmp
inc
or
pop
push
cltd
cmp
ja
xchg
lea
mov
fucomi
test
sbb
mov
jno
inc
adc
cmc
inc
aad
add
mov
mov
mov
fdivr
inc
mov
sti
push
cmp
cmpsb
add
bound
fldcw
jge
jbe
pop
mov
popf
dec
mov
jg
push
or
push
pop
scas
movsl
fs
addr16
cmpsl
adc
ret
push
pop
insl
xor
dec
imul
xlat
mov
xchg
aam
dec
lock
dec
adc
sub
sti
mov
out
inc
hlt
hlt
or
jg
sarl
sub
jne
jle
mov
shrl
sbb
fimull
dec
imul
sarl
cmp
mov
adc
ret
sub
je
fdivrl
mov
push
cmp
jne
fcompl
test
adc
aas
push
test
pusha
clc
xor
inc
mov
std
cmp
xchg
jne
jno
scas
pop
adc
cmpsb
adc
mov
lods
in
lcall
mov
lock
lds
nop
addr16
int
test
cmp
test
adc
ss
xchg
mov
push
add
mov
pop
sub
push
xchg
arpl
out
jne
jp
mov
add
orb
or
unpcklps
push
xor
jp
cmp
adc
xchg
insl
inc
leave
inc
icebp
xchg
out
xchg
mov
repz
setnp
mov
mov
shlb
add
mov
jl
xchg
lret
fildll
mov
push
iret
fistl
ja
xchg
inc
jl
xlat
push
lahf
outsb
jmp
ficoms
push
mov
in
out
je
cld
push
cmp
pop
rcr
and
pushf
xor
cmp
mov
mov
and
sub
cwtl
sub
jnp
push
lret
pop
dec
ficoms
scas
lods
inc
fs
jl
lea
loop
test
sbb
test
mov
or
mov
gs
sub
bound
adc
sub
mov
stos
inc
jno
pop
fidivs
xor
into
xchg
jns
cld
jge
pop
lods
mov
ror
out
push
adc
sub
mov
xor
pop
arpl
push
push
jno
add
sti
sub
out
stc
mov
jbe
enter
mov
push
mov
push
mov
in
add
pop
cmc
sbbl
adc
pop
cmp
pop
sbb
gs
adc
cwtl
inc
call
push
xlat
rcrl
aas
out
pop
ja
pop
pop
out
inc
out
fmull
pop
and
jbe
xchg
out
add
push
xchg
inc
in
into
xchg
cmpsb
jle
lret
daa
loope
popa
outsl
mov
lcall
mov
into
mov
cmp
xor
pusha
call
in
leave
hlt
pop
lds
sti
das
pop
xor
movsl
mov
mov
mov
sbb
aad
es
add
mov
mov
enter
pop
sbb
shll
dec
in
rcll
dec
inc
js
in
aad
iret
stos
in
ljmp
and
cmp
movsl
cmpsb
sbb
xor
pop
lahf
jb
jb
pop
add
inc
test
jmp
popf
jns
mov
loop
shll
fistps
aas
movsl
cmpsb
push
cld
and
cs
ss
fdivr
gs
iret
adc
mov
lods
push
add
popf
xlat
or
jb
cmp
cmpsl
jno
ficoml
dec
aaa
xchg
jg
int
cmp
push
decl
pop
dec
mov
sti
add
dec
xor
mov
in
mov
push
mov
sti
xor
notb
out
push
stc
push
movsl
shrl
dec
dec
adc
and
lahf
sbb
ljmp
jmp
xor
test
add
inc
sbb
mov
adc
push
icebp
cli
xor
dec
mov
xor
sbb
bound
and
inc
push
sub
aas
es
sub
jne
ja
aaa
push
jecxz
std
push
mov
das
sbb
push
and
push
ret
sbb
hlt
dec
outsb
jae
enter
add
lds
jecxz
adc
sarl
mov
ficomps
fisttps
fstpl
push
mov
lahf
sub
outsl
lds
test
int3
jmp
xor
std
and
sub
addr16
loope
push
lds
inc
jno
dec
xchg
test
lahf
push
out
inc
pop
adc
mov
shll
pop
jl
popa
push
mov
cmp
push
add
rcl
push
addl
stc
or
jecxz
insl
sub
dec
jbe
ds
cs
and
aam
lds
cmp
dec
or
jae
push
sbb
cmp
add
and
sub
test
mov
add
or
lret
mov
xchg
xchg
imul
bound
ret
cwtl
xlat
cmc
call
fimuls
mov
icebp
push
out
sub
xor
pop
mov
jg
loope
pop
and
xchg
dec
ds
sub
mov
xchg
mov
adc
dec
jl
and
sub
fcoml
test
arpl
pop
test
loopne
cwtl
jns
mov
cmpsl
push
nop
or
leave
pop
xchg
dec
mov
pop
push
xchg
das
mov
pop
ja
xchg
mov
xor
jp
bound
cmpsb
fcompl
dec
pop
cmpsb
xchg
jmp
xchg
cmp
pusha
cs
mov
jo
inc
and
adc
xchg
sub
push
or
and
xchg
rcll
std
decb
leave
sub
fsubrs
repnz
hlt
dec
xchg
ja,pn
loopne
and
pop
pop
je
jmp
dec
jp
notb
cmp
or
inc
mov
repz
push
ds
mov
enter
inc
scas
fdivrl
xor
and
sub
incl
sub
or
enter
in
or
mov
loop
lds
adc
pop
sbb
xor
push
jb
adc
jecxz
bound
mov
popf
or
adc
in
mov
push
shrl
mov
pop
inc
fmulp
rcrb
int
jge
lds
fisubrs
hlt
adc
xchg
cmp
das
mov
movsb
jecxz
xor
xchg
shlb
lods
mov
cmp
and
sti
das
decl
dec
push
lods
jbe
movsb
push
nop
enter
int3
out
ja
movsb
adc
xor
inc
mov
pop
jle
and
mov
scas
inc
jg
xchg
cmpsl
roll
pop
bound
mov
jge
pusha
dec
inc
in
int3
mov
cmp
xor
lods
xchg
add
aad
je
add
aam
inc
xchg
je
and
test
lds
jae
es
es
rorl
sti
pop
out
fwait
insl
in
mov
cmp
das
ficoms
cmp
or
xlat
in
arpl
leave
pop
call
xor
gs
ror
lahf
int3
addr16
popa
and
and
pop
ret
dec
pop
add
sarb
lahf
ds
outsb
pop
add
aas
sub
jg
lds
insb
cmp
stos
dec
xor
inc
jno
sbb
adc
decl
xchg
ljmp
cmc
xchg
jg
xor
scas
mov
iret
sbb
stos
into
hlt
sbb
cld
aam
add
stc
mov
imul
sahf
xchg
leave
pop
dec
mov
ds
call
jp
adc
sti
sahf
popf
jp
mov
sbb
adc
pushf
push
push
in
jle
cwtl
pusha
push
stc
xchg
push
mov
sbbl
push
inc
mov
ljmp
pop
bnd
xchg
and
add
pushf
fdivrs
mov
cmpsb
sub
or
cmp
push
dec
mov
cmp
and
fbstp
out
and
push
adcb
and
dec
jle
dec
and
sbbb
cwtl
or
cmp
jns
dec
push
cmp
add
cmp
or
divb
js
xchg
pop
fmul
lret
sti
xchg
aaa
lods
sbb
les
sbb
cmpsb
andb
inc
lock
pushf
ljmp
into
into
pusha
sbb
xor
jp
jecxz
ja
sub
cmp
lahf
loope
ficomps
enter
nop
pop
sub
test
xchg
lea
pop
fisttpl
sub
xchg
xchg
xor
mov
cmp
loop
xorb
iret
cmp
sbb
sub
inc
mov
cmpsl
fstpt
lret
enter
cmp
and
loope
mov
push
xchg
inc
into
das
push
jno
pop
pop
jb
aaa
push
push
adc
hlt
mov
std
cld
sbb
cld
data16
je
push
ss
dec
sbb
scas
mov
cmc
fs
inc
pop
insb
xchg
add
scas
adc
lea
daa
leave
xorb
fldl
pop
mov
cmp
sub
cmp
das
stc
lds
mov
xor
adc
gs
movsl
icebp
cs
enter
inc
add
leave
sbb
cmpsb
cmp
dec
jle
xor
push
hlt
loop
mov
es
inc
mov
mov
js
inc
xlat
mov
dec
out
add
addr16
xchg
popa
and
cs
mov
pusha
jb
sub
cmp
lret
mov
or
mov
cli
daa
add
sti
xor
stos
pop
cltd
mov
and
pop
xor
fbld
pop
jmp
jle
aaa
pushf
push
push
jle
rclb
fldz
pop
movsb
adc
sbb
add
lds
aam
in
hlt
scas
cwtl
inc
in
jl
inc
out
mov
cli
fsqrt
push
scas
jno
mov
jnp
aaa
frstor
shll
or
scas
mov
mov
in
loope
fcomi
outsl
push
and
and
cli
add
enter
aad
faddl
pop
jp
iret
push
mov
mov
dec
lods
call
jge
iret
mov
dec
pop
subb
sahf
mov
int
jae
ds
and
es
cli
sbb
sub
fucomp
jcxz
and
xchg
in
pop
fs
aas
push
in
pop
lds
adc
mov
out
sbb
fiadds
cmp
fsub
or
or
sub
xor
roll
imul
xchg
sbb
add
push
xor
push
int3
inc
cwtl
sarl
or
fisttpl
mov
jg
int3
inc
lret
mov
mov
mov
into
inc
idivl
adc
mov
aam
dec
das
jb
in
ficomps
lret
call
sbb
jmp
pop
repnz
hlt
in
int
pushf
test
mov
push
pop
and
mov
pop
out
ljmp
jg
pop
les
hlt
xor
cs
mov
test
add
addr16
hlt
dec
rolb
pop
insb
mov
add
and
push
dec
mov
fldenv
mov
addr16
jne
rclb
punpckhbw
xor
addr16
push
bound
pop
scas
cmc
add
movb
loop
test
xchg
mov
gs
mov
in
rcl
adc
jno
mov
sbb
ficomps
ret
cwtl
cmp
jne
pop
imul
and
test
aam
jno
ds
cmpsl
fimuls
int3
inc
mov
es
add
mov
dec
mov
leave
sub
call
ja
outsb
ja
jg
adc
pop
dec
xor
jmp
lea
call
dec
xchg
push
fcoms
push
rclb
push
jbe
mov
cmp
sub
lret
jmp
leave
aaa
push
popf
into
xchg
mov
ja
xchg
fdivrl
xor
int3
pop
mov
rorb
imul
pop
scas
fnstenv
or
in
inc
out
push
lods
lcall
inc
rolb
lds
lret
mov
add
lahf
mov
pop
pop
xchg
push
bound
rcll
or
ja
push
test
sbb
cld
cmp
push
lret
and
cmp
mov
rcrb
sbb
dec
jns
jle
pop
add
dec
jno
inc
lcall
fldl
in
or
add
aas
outsl
sub
mov
and
sub
xor
push
inc
push
js
mov
aad
aas
clc
xchg
test
arpl
repnz
dec
sub
adc
lret
pop
movsb
sub
js
sub
mov
xchg
xchg
popf
mov
sahf
and
into
movsb
scas
and
pop
xorb
imul
push
rolb
dec
insl
sub
add
jl
sti
sahf
push
push
xor
je
test
imulb
fxtract
sub
test
cmpsb
jno
aam
add
pop
sbb
imul
pop
jg
int
int
pop
aas
mov
aas
test
cmp
xor
xchg
jle
mov
out
add
inc
imul
cmp
jbe
rorb
mov
xor
jle
mov
insl
xor
push
mov
inc
in
into
mov
cmp
inc
into
ja
jbe
into
int3
insb
pushf
push
jb
in
jbe
jl
and
sub
stos
nop
and
pop
fwait
lret
or
jbe
call
into
xchg
test
call
cli
cli
lods
xor
pop
stc
mov
dec
xchg
scas
dec
lods
dec
xchg
call
fistps
fcomp
pusha
les
lods
popa
jecxz
cs
add
cmp
mov
ret
push
cmp
sub
std
xchg
lret
loop
xor
push
ret
stos
popa
dec
insl
icebp
or
lea
loopne
pop
movsb
jge
in
fistpll
test
in
or
xchg
inc
repnz
mov
xlat
sbb
xchg
jns
mov
outsl
sub
iret
mov
popa
jno
pop
int
shl
mov
rorl
cmp
inc
lea
push
push
mov
push
fsts
xor
add
loope
dec
add
add
std
mov
sbb
add
insl
pushf
or
aam
jb
dec
call
add
dec
je
cwtl
jns
add
mov
mov
mov
inc
imull
push
xchg
sub
sbb
xchg
mov
mov
in
or
push
in
mov
jns
daa
sti
std
mov
cmp
dec
test
xchg
lds
xchg
sub
negl
js
inc
mov
pop
xchg
pop
inc
pop
imul
cmp
loop
lret
aad
outsl
cmp
aam
and
dec
mov
jle
mov
xorl
test
in
mov
js
add
dec
mov
fisttpl
mov
cmpsb
jp
inc
mov
cmpsl
int3
xlat
aam
fidivs
aaa
push
rorb
mov
xor
repz
sbb
cmp
pop
repnz
pop
pop
rol
insb
push
mov
inc
xchg
icebp
xchg
inc
stc
stc
sbb
cwtl
repnz
test
scas
in
popf
jo
mov
lods
mov
movsl
xchg
xchg
negb
pop
push
fstp
lods
repz
aad
mov
cmp
cmp
jg
cmp
scas
outsl
test
js
rcll
sahf
pop
inc
pop
sub
fwait
insl
shrl
or
mov
mulb
add
fwait
scas
aad
out
lcall
adc
inc
pop
das
jl
lret
nop
pop
out
sti
aas
repnz
ds
or
inc
inc
out
add
jmp
or
es
stos
std
in
or
sub
push
daa
mov
or
loop
cld
ret
pop
inc
scas
and
in
imul
fidivrs
pop
push
cmc
in
inc
int
shr
pop
and
inc
xlat
or
cmc
lret
fnstcw
test
aas
test
aas
jnp
stos
and
cmc
gs
das
fwait
jnp
sub
push
mov
fistps
push
add
sub
adc
sti
into
cmc
jmp
push
mov
or
aad
lock
movsb
gs
mov
int
sub
cwtl
jmp
xchg
dec
sub
xchg
lret
xchg
pop
int3
jnp
xchg
dec
js
and
stc
cltd
dec
das
insb
loope
and
or
mov
or
and
sarl
adc
cltd
ret
test
imul
mov
adc
xchg
adc
jg
sahf
mov
into
imul
int3
add
mov
push
leave
mov
movsb
push
dec
pop
fs
ja
scas
push
pop
inc
pop
daa
aaa
imul
in
jne
push
movsb
sahf
push
xor
xor
iret
push
sti
adc
loope
mov
jae
cmpsl
adc
or
xlat
aad
jmp
push
repz
fwait
or
int
imulb
adc
cmp
ss
nop
push
popf
adc
add
jnp
daa
insl
enter
pop
xchg
cld
test
mov
or
jb
dec
mov
int
lock
int3
xor
imul
lock
inc
scas
dec
xchg
and
mov
jg
cmp
inc
mov
cmp
mov
sub
inc
dec
sbb
test
jmp
les
pop
fsts
sub
fwait
mov
pcmpgtb
imul
cld
bound
adc
loope
cmpsl
lahf
cmpb
into
xchg
xchg
inc
jp
sti
xchg
sbb
cmp
fdiv
cmp
inc
fsubrp
xor
sub
ja
leave
imul
ja
push
xlat
std
je
fisubrs
loope
mov
sbb
add
fildl
addr16
aad
push
insb
loop
jg
pop
aam
pusha
jle
xchg
mov
lds
fmulp
aam
outsb
adc
arpl
or
cltd
jp
icebp
divl
icebp
lcall
xor
push
pop
or
pop
sbb
mov
cmp
scas
pop
fmuls
jp
cmc
mov
js
cli
inc
mov
jmp
sub
int
shll
cmp
scas
sbb
xor
jp
stos
pop
out
inc
mov
dec
and
testb
sub
adc
call
rclb
and
mov
sbb
cmp
outsl
sbb
or
dec
negb
es
pop
movsl
xchg
mov
movsb
jge
inc
sub
sbb
insl
adc
loop
insl
aam
loopne
fs
movsb
mov
cmp
pop
dec
data16
iret
movsl
in
gs
inc
mov
cltd
popa
ja
cmpsl
mov
repnz
jge
mov
cmp
int3
iret
mov
inc
out
mov
bound
ss
inc
popa
xor
inc
or
leave
push
mov
sub
popf
popf
rcrb
pop
sbb
shrl
orl
cmp
sti
addr16
cli
fnstenv
xchg
sbb
pop
cwtl
insb
cmp
shlb
add
or
jge
push
inc
push
xchg
movsb
out
adc
push
sub
pop
push
push
cmpsb
fsub
aaa
sbb
mov
xchg
sbb
ja
xlat
stos
cmp
push
test
cmp
mov
sub
push
std
lret
push
sbb
mov
xchg
jg
imul
jp
into
xor
xchg
cmc
xor
ret
pop
das
fdiv
outsl
ret
xchg
gs
xchg
cmp
notl
out
fidivrs
sub
sbbb
and
fisubrs
std
or
jmp
loope
inc
inc
sub
test
push
cmpsb
mov
loop
pusha
or
shl
xor
cwtl
inc
or
and
add
adc
dec
xchg
test
pop
in
insl
ror
ja
jnp
xor
xchg
outsb
into
sub
nop
jecxz
inc
jecxz
jecxz
mov
xor
dec
mov
xchg
mov
jb
test
xchg
iret
in
inc
cmpsl
push
cltd
test
popl
sub
outsl
cld
loopne
mov
or
jb
dec
xor
movsb
adc
fsts
mov
outsb
sub
mov
cld
addr16
push
inc
mov
lret
lock
popa
mov
int3
push
jbe
push
xchg
stos
scas
mov
movsb
dec
pop
pop
mov
daa
sub
sbb
les
and
or
imul
mov
rcll
stos
into
dec
rclb
jno
jo
sub
sub
push
push
pop
xchg
sahf
mov
imull
stc
or
mov
imul
fucom
imul
incb
or
inc
mov
fisttps
dec
cli
mov
push
popa
pushf
outsl
sub
sub
sub
sub
sbb
cwtl
mov
or
mov
sbb
sbb
pop
imul
jge
pop
stos
mov
adc
sarl
dec
das
or
jg
loope
or
ret
xor
faddl
inc
loope
mov
xchg
data16
insb
xor
je
xchg
scas
push
push
orb
or
sahf
sbb
popl
and
lea
fwait
es
out
pop
sub
jbe
pop
insb
movsb
mov
mov
mov
xchg
test
std
fsubl
cld
cltd
shll
add
in
pusha
bound
rorb
xchg
test
cmp
out
cmpsb
xchg
push
nop
cltd
subb
xor
jb
movsl
cld
lahf
mov
dec
sbb
test
sbb
hlt
fistpll
fildll
lods
cs
inc
outsb
cltd
ret
and
sub
xchg
dec
fsubrl
add
cmpsl
push
fyl2x
or
mov
mov
pop
rolb
xchg
cmp
sub
pop
and
loop
push
loop
sub
sub
das
adc
xor
test
inc
rorb
add
out
inc
orps
sbb
push
in
popf
pop
xchg
sbb
xchg
fadd
jno
imul
lea
sub
xchg
imul
mov
sub
in
cmp
cmp
xor
stos
ret
stos
fbld
mov
shll
mov
sarb
icebp
test
inc
add
stos
das
sub
dec
test
cmp
cmp
sti
stos
xchg
pushf
lods
ja
and
loopne
sub
mov
lret
and
inc
fistps
or
popa
insb
adc
lods
jl
sub
lock
outsb
gs
xchg
xor
gs
sti
fbld
push
ja
add
in
call
sbb
mov
fisubrs
mov
xchg
sub
ljmp
fisubrs
mov
pop
test
shrl
cmp
lods
jl
sbb
test
clc
fwait
popf
xchg
adc
pop
std
ss
push
fstps
data16
cmp
jno
cmp
sbb
lea
call
scas
lea
sub
leave
sbb
xor
or
push
mov
enter
pop
dec
xor
pop
sbb
mov
push
jge
jbe
sub
fs
pop
push
iret
test
add
xor
call
jl
in
sbb
cmc
faddp
stos
mov
in
fnstenv
jne
rol
or
jne
das
ret
push
lea
adcb
mov
inc
xchg
rorl
es
inc
jns
lods
push
sbb
inc
das
iret
sub
cmp
and
cmpb
loope
les
pop
push
psubb
lret
xchg
or
lods
cmp
daa
cmp
std
mov
pop
stos
xchg
dec
dec
stos
pushf
testb
popa
sbb
aam
add
insl
jo
loope
adc
imul
cs
ret
add
imul
xchg
and
or
mov
or
and
ljmp
int
shll
sbb
dec
fmul
test
inc
testb
push
rol
xor
push
lahf
scas
addr16
add
lahf
jo
inc
xchg
mov
xchg
cli
xchg
gs
in
lahf
pop
scas
cmpsb
ljmp
icebp
in
loop
dec
push
stc
dec
out
sbb
out
mul
iret
lea
sub
cmpsl
int3
push
mov
push
fldln2
dec
add
xchg
leave
ds
xchg
dec
xchg
jns,pn
mov
decb
mov
push
push
sub
jl
pop
rcrl
or
sti
test
mov
lods
pop
push
cmpsl
loope
push
jae
push
lds
inc
or
sarb
mov
addb
ljmp
ja
jl
mov
jb
pop
out
scas
inc
add
rorb
jmp
mov
jb
shl
adc
jbe
mov
enter
ret
adc
aas
sub
out
mov
repz
push
jo
push
jae
cmpsl
mov
dec
pop
scas
xchg
test
popf
je
sub
adc
cld
movsb
mov
dec
xchg
cltd
add
outsl
in
repnz
notl
les
dec
inc
xchg
push
call
lret
lret
scas
pop
pop
sub
leave
xchg
dec
pushf
cld
icebp
cmp
sub
repnz
pop
xchg
and
inc
ljmp
and
adcb
lahf
and
inc
ja
fisttpll
les
and
ljmp
add
or
jmp
sub
xchg
and
repz
sub
xor
pop
mov
test
and
lahf
adc
pop
test
mov
sub
cmpsl
movntq
out
adc
xor
addl
aaa
rcrb
push
sub
xor
icebp
fwait
sub
lahf
xor
sub
mov
lods
mov
fucomip
pop
shll
cmc
cld
daa
xchg
fnstsw
cltd
jg
int3
sbb
ss
mov
mov
dec
mov
push
mov
pop
subl
cmc
repz
movsl
cld
mov
xchg
jno
shrb
out
push
xor
aad
inc
sub
or
jo
push
jno
pop
inc
pop
scas
cmp
in
mov
aad
mov
mov
ret
sbb
ljmp
call
pusha
rcrb
andl
aaa
push
sbb
xchg
outsb
cmc
inc
cs
jmp
and
cmp
shr
pop
push
dec
int
inc
push
push
and
arpl
fidivl
xchg
mov
mov
out
pushf
rolb
pop
je
call
in
stos
cmp
test
fcmovnu
xchg
add
js
inc
inc
fadds
loop
dec
in
push
mov
and
pushf
ja
push
ficompl
dec
cli
aaa
arpl
xor
pop
sqrtps
cmpsb
ss
mov
push
jle
mov
cmc
repz
and
inc
movsb
movsb
jg,pt
cli
out
add
lock
mov
test
push
mov
jns
xchg
cmp
jge
push
xor
pop
mov
inc
inc
xchg
and
xchg
dec
je
mov
xor
mov
add
push
sbb
ja
cmc
imul
aad
sahf
push
mov
mov
sbb
cltd
mov
mov
int3
stc
lret
xchg
adc
andl
sub
lcall
cltd
adc
dec
ret
dec
dec
or
ss
fcomps
or
sub
inc
aad
adc
das
jnp
push
int
ret
pop
dec
jno
insl
lods
hlt
fidivrl
aam
sbb
pop
add
sub
bound
or
test
notl
mov
cmp
imul
mov
mov
std
test
movsl
cltd
pop
loop
push
add
push
xorl
scas
mov
mov
aad
mov
fisubrs
mov
lock
cmp
es
cmp
mov
stos
ds
lea
sbb
mov
sarl
push
and
das
jnp
push
push
mov
sub
push
aas
push
xor
lahf
cmp
push
in
cli
stos
mov
sbb
mov
adc
insb
xchg
scas
push
xchg
push
mov
xor
pusha
jl
arpl
push
mov
loopne
std
cmp
pop
dec
leave
push
mov
test
cltd
cmp
pop
int3
pop
nop
push
cmp
in
sub
push
mov
sbb
sub
pop
fidivrl
mov
push
rol
mov
fstl
dec
jo
sbb
push
cmp
jge
jge
mov
movsb
js
in
insl
jp
cltd
xchg
xchg
and
rol
xchg
or
lods
cmp
ret
shrb
mov
ja
cli
pop
xchg
mov
adc
inc
inc
cmpsb
lahf
call
cmp
fsubs
fbstp
or
and
mov
mov
lret
mov
xor
cltd
outsb
pop
loopew
bound
repnz
sub
mov
adc
leave
pop
xor
sub
rcll
add
mov
aam
aad
pop
add
cmp
add
out
mov
fs
jecxz
jge
aas
mov
test
js,pt
cmp
addr16
push
fildl
les
cmp
in
das
repz
bound
popf
mov
cmp
inc
stos
mov
dec
jg
in
dec
pop
mov
fnsave
mov
or
stos
pop
jecxz
imull
xor
bound
push
rcl
pop
lds
stos
das
call
pop
inc
xchg
sub
jb
test
out
lods
pop
mov
aam
sub
popf
enter
jmp
xchg
sbb
cmp
push
ja
jge
pushf
mov
out
xchg
lahf
fstl
pop
push
dec
push
idivb
es
ljmp
dec
repnz
int
mov
into
xchg
push
push
xchg
add
adc
into
xor
fstps
adc
push
xchg
out
rclb
push
or
mov
repnz
aaa
pushf
out
jecxz
repnz
mov
jns
fwait
idivl
cmp
mov
jl
mov
inc
sbb
jmp
jno
xor
and
dec
jns
inc
push
es
inc
adc
std
aaa
jle
insl
in
fcoml
mov
insl
dec
pop
test
sbb
iret
loopne
into
ljmp
cltd
jp
iret
jbe
xchg
inc
cmpsl
in
push
cltd
add
loope
mov
add
and
pop
xor
mov
dec
mov
movb
dec
dec
loopne
lret
mov
pop
inc
mov
in
fdivr
push
fwait
pop
cltd
pop
clc
dec
adc
sub
pop
stos
aaa
shll
xor
test
or
pop
or
mov
xchg
gs
cs
clc
rolb
inc
xorl
jmp
repnz
lcall
dec
mov
push
dec
lods
orl
jnp
sub
aad
and
dec
or
pop
mov
lret
jne
divl
xor
movsb
mov
enter
push
lock
cmovno
das
and
movhps
aaa
shll
cmp
jbe
or
arpl
call
cltd
rcr
pop
out
xchg
cmp
mov
add
test
add
and
pop
pop
test
pop
movl
jp
leave
sbbl
ja
outsl
cmp
aad
repnz
scas
cltd
mov
push
xor
xchg
aaa
stc
inc
pop
jmp
aad
loope
add
adc
sti
dec
call
xchg
cmpsb
and
jns
push
fwait
inc
dec
shl
fldt
push
cmpsl
inc
enter
loop
cwtl
mov
sub
rolb
add
pop
mov
mov
mov
or
leave
cmpb
adc
aam
jo
or
lea
mov
enter
xchg
sbb
sbb
xlat
test
dec
pop
stos
jnp
push
xchg
fbstp
aas
mov
arpl
dec
mov
lea
xchg
shll
pop
mov
loope
fsts
sub
xchg
ds
jae
dec
xor
xchg
sahf
inc
or
xlat
sub
aad
or
dec
lahf
pop
aam
test
add
inc
xchg
jp
les
sub
jo
cmp
cmp
jl
lret
jl
or
adc
jp
mov
xchg
add
and
push
dec
mov
and
pop
lods
mov
pop
and
cmp
mov
lock
dec
orb
or
pop
sub
subl
pop
sti
fwait
pop
enter
ss
and
jae
jbe
push
mov
jl
sub
movsl
out
int
ss
iret
orl
icebp
je
xchg
and
imul
and
xor
cmp
jne
out
xchg
aam
iret
addb
and
in
xor
out
xor
add
test
aam
adc
jb
sahf
pop
in
mov
and
outsl
push
cmp
mov
pop
adc
dec
xor
outsl
mov
xor
in
mov
repnz
cmp
test
pop
in
pop
mov
dec
sbb
lods
jne
mov
cmpsl
cmp
enter
mov
push
add
cmp
sbb
sub
add
pusha
mov
mov
jmp
xlat
lret
adc
rcrb
fmuls
mov
jge
and
and
jecxz
jge
xchg
inc
sti
push
shlb
insb
in
sub
push
sahf
add
stos
lods
sub
push
xor
cmpb
ja
jp
mov
xor
dec
mov
push
and
inc
and
mov
call
decb
jo
repz
scas
outsb
cmp
sbb
jl
sbb
lahf
js
adc
cmpsb
push
sbb
xchg
cwtl
fldcw
adc
in
aam
cmp
negb
test
sahf
cmp
sub
pop
ficompl
out
fcom
stc
add
xchg
adc
xor
mov
jge
mov
jnp
mov
sti
ds
cmp
cltd
lea
std
mov
outsb
lret
icebp
adcb
xchg
data16
imul
xorl
xchg
enter
jl
nop
cmp
notb
arpl
jnp
fildl
out
mov
push
rcr
pop
add
pop
pop
inc
cmp
js
mov
mov
jae
mov
xorl
mov
adc
sahf
out
fidivrs
xchg
adc
jl
lods
add
sarb
jle
lcall
out
movsb
inc
andl
mov
into
mov
add
stc
adc
lcall
js
out
cmp
arpl
pop
fistpl
xchg
mov
push
pop
out
lret
sbb
shr
pop
xchg
xchg
push
mov
mov
fadd
sbb
cmp
adc
push
mov
pusha
mov
jbe
dec
scas
xchg
mov
cs
hlt
pusha
ret
mov
push
jecxz
sbb
mov
or
insb
mov
mov
add
sbb
xchg
push
and
sub
mov
aas
notl
sarl
jb
in
lock
leave
lret
movsb
fcoml
ds
jg
or
jne
lods
jns
jae
sub
mov
int
sbb
in
sbb
xchg
cmp
ljmp
js
pop
mov
sub
cmpsl
sub
push
data16
dec
and
repz
dec
cmpsl
repnz
into
push
lea
cmp
dec
subps
mov
sub
and
popa
ljmp
sub
push
fmull
ja
add
scas
or
sahf
test
xchg
xor
push
mov
xor
push
sub
push
xor
push
sbb
rcrl
push
push
in
dec
and
fdivrs
inc
call
pusha
sub
dec
mov
add
pushf
add
decb
pop
ds
adc
pop
xchg
lods
fisttpl
scas
js
movsb
add
mov
jl
jno
faddp
stc
ds
sbb
icebp
out
xchg
popf
lret
aaa
adc
repnz
movsl
das
xor
sub
xor
xchg
mov
lods
mov
out
jnp
aas
je
lahf
shlb
mov
imul
jle
mov
inc
shlb
popa
mov
dec
sub
int3
fwait
adc
xor
pop
sbb
mov
mov
out
inc
push
jnp
dec
sbb
push
xor
pop
push
mov
movsb
jo
popa
and
shll
rol
xor
ja
cmp
add
jb
lret
or
sbb
pop
jnp
mov
jp
addr16
mov
pop
mov
xorl
push
add
xor
jne
push
stc
fdivs
push
mov
adc
daa
xchg
sbb
lcall
push
push
and
gs
xchg
adc
aam
lods
int3
in
jl
clc
inc
sub
xor
mov
shlb
cltd
cmp
or
add
ja
or
call
sub
sahf
stos
stos
sbb
pop
push
aas
mov
pop
out
les
pop
or
mov
pop
in
rcrb
movsl
pop
mov
fldl
inc
sub
dec
and
mov
clc
test
xor
ficompl
fistps
dec
int3
cmp
fwait
jmp
fisttpll
les
clc
lods
popa
outsl
fstpl
popa
pop
sbb
shlb
aad
imul
jb
lcall
mov
cmp
fistpll
out
pushf
add
pop
xor
je
jge
cmp
inc
inc
jg
ret
add
push
lahf
xchg
xlat
iret
cmp
and
add
in
jmp
sub
sahf
dec
into
sub
popa
pop
cwtl
mov
or
sub
cmp
loop
xor
xchg
mov
mov
leave
in
xchg
dec
rorl
scas
fildll
jns
sub
add
adc
notl
aam
pusha
test
push
mov
mov
jmp
call
lds
imul
in
incl
sbb
jbe
mov
add
and
je
mov
inc
adc
xor
pop
pop
cld
loope
and
scas
aas
jmp
rorb
shl
cwtl
stos
jne
scas
out
lock
cmc
enter
mov
test
sub
out
xor
jmp
cltd
xchg
adc
or
push
adc
cmp
fisubs
les
pop
jbe
les
add
mov
sti
dec
cmp
sub
roll
div
int
addr16
bound
xchg
lret
dec
adc
mov
xor
jbe
insb
fdivrl
fistl
lahf
inc
mov
sbb
pop
rorl
or
and
or
fcompl
je
cli
cmp
test
xorb
fsubl
pop
shlb
xor
scas
pop
mov
addr16
fistps
enter
pop
int3
int
out
cmp
ficoms
jp
daa
mov
mov
xchg
inc
xchg
pusha
mov
or
adc
adc
pop
mov
fildl
pusha
out
add
inc
repnz
cmp
inc
stos
cmp
sub
pusha
inc
pop
mov
sbbb
xchg
je
dec
sub
xchg
adc
or
iret
jge
xor
lods
test
fucomi
jno
cmp
loop
les
xchg
shrl
jnp
and
and
rcr
push
daa
add
popf
mov
mov
sbb
mov
or
imul
lods
insl
inc
sub
mov
movsl
shrl
xchg
mov
scas
and
push
mov
imul
and
cmp
icebp
jo
dec
add
jge
stc
sti
mov
or
mov
or
xchg
cmpsl
insl
jo
sub
ret
subb
les
or
pop
mov
jge
inc
add
mov
jp
lret
push
sub
cltd
test
sti
add
jno
imul
pop
adcb
add
orl
leave
loopne
das
pop
pop
and
add
mov
pushf
cmp
jbe
add
addr16
movsl
fwait
xchg
mov
sub
dec
pop
add
dec
mov
push
mov
add
mov
subb
popf
jae
mov
cmc
dec
bnd
dec
cmp
iret
lret
add
int3
test
pushf
insl
scas
testl
sub
ss
or
stos
pop
inc
into
jmp
inc
add
and
mov
mov
notb
popf
or
push
in
rorl
cmp
inc
mov
pop
pop
cmpsb
push
mov
mov
ss
sub
pop
enter
inc
dec
sbb
ds
loopne
dec
loop
xchg
sbb
lret
cmp
mov
stos
mov
add
xchg
movsl
stos
cld
neg
test
jno
ja
jbe
mov
aaa
xor
test
or
dec
jnp
mov
xor
inc
xlat
jp
fstps
sub
adc
iret
into
fcmovnu
test
sub
in
cmp
fadds
mov
into
pop
in
call
xor
mov
int3
push
pop
pop
ds
test
cmc
ss
rcll
xor
leave
scas
add
fimull
xor
push
push
sub
pop
shrb
fdivs
je
sub
in
sahf
push
inc
pop
scas
inc
fcmovbe
loop
mov
cmpsb
adc
sub
xor
jne
xorb
test
mov
sbb
enter
rorb
mov
or
roll
cli
add
lods
lret
out
popa
mov
xor
test
jl
push
stos
sub
fcmovu
jno
pushf
fidivrl
cmpsl
mov
icebp
adc
jg
fimull
scas
popf
scas
ficompl
xor
xlat
adc
fsubr
jae
stos
pop
mov
lods
sbb
sub
ret
cmp
mov
test
cmp
push
xchg
pop
iret
movntq
jae
lods
cld
fistpll
mov
insl
jle
inc
leave
and
mov
lods
inc
sahf
sbb
lock
adc
nop
jecxz
mov
inc
lcall
dec
jge
call
call
xchg
aas
adc
ljmp
xchg
inc
out
sub
cld
sbb
or
call
mov
in
adc
cltd
data16
mov
jb
lock
fnsave
outsb
mov
xor
pop
push
inc
cs
pop
pop
into
ret
fcompl
enter
jle
dec
dec
push
xor
hlt
xchg
push
add
loop
add
inc
aam
mov
leave
jne
and
xor
jnp
mov
or
add
fisubrl
sub
adc
dec
xchg
cmp
repz
pop
mov
push
lods
out
cs
mov
or
xlat
in
dec
lods
mov
test
dec
js
jmp
push
jno
inc
dec
fidivrl
push
aas
mov
fldl
push
clc
jge
enter
mull
mov
xchg
pop
daa
fnsave
sub
jge
test
mov
andl
sub
dec
xchg
fsubl
and
andl
adc
lods
fs
daa
and
iret
popa
adc
std
fucom
add
sbb
xor
sbb
cltd
cmp
push
jne
sti
pop
cs
cmpsl
js
xchg
in
loope
jle
sub
lcall
mov
je
add
loop
cmp
sahf
shrb
cwtl
lods
adc
adc
movl
mov
bound
push
fstpl
inc
pop
jmp
aam
jle
mov
or
addr16
scas
adc
or
dec
xlat
data16
pop
or
les
jae
fwait
mov
push
adc
cmp
lds
cwtl
out
push
xchg
mov
ret
pop
ret
fwait
pop
pop
or
push
sti
cld
fidivl
movsl
jle
push
sub
xchg
loope
lods
fmulp
xor
push
setb
jecxz
inc
sbb
ds
jnp
xchg
ret
and
enter
mov
fistpl
test
data16
mov
ja
psadbw
add
xchg
pop
int
sahf
lcall
clc
adc
xchg
jns
lret
sahf
sbb
iret
icebp
sub
shl
movsb
jle
out
enter
push
sbb
addb
xchg
enter
mov
and
pop
in
lret
lahf
stos
imul
pop
cmp
xchg
sbb
inc
lock
and
push
fisttpll
cmc
shlb
cmp
push
mov
dec
push
arpl
int3
or
pop
lahf
fdiv
ds
jb
fistl
ds
jbe
or
lahf
mov
repnz
in
idivb
cltd
mov
in
cmp
shll
jbe
xchg
sbb
jns
lahf
mov
aam
xor
sub
mov
leave
cmp
dec
js
sub
hlt
ret
pop
sub
xlat
enter
ret
aas
ss
fidivrs
cli
out
ss
cmp
sbb
and
fstpl
jne
inc
cmpsb
out
or
inc
mov
cmp
fsubl
push
cmpsl
cmp
testb
and
popf
sub
arpl
jnp
jno
push
sahf
shrl
mov
or
lahf
lds
adc
ljmp
int3
addb
cli
cmp
stos
and
xor
loope
fwait
popa
or
in
mov
cltd
or
or
imul
js
and
adc
sahf
sub
stos
int
movl
mov
jae
push
inc
dec
sub
xor
int3
xchg
xchg
notb
mov
jb
roll
shr
fs
mov
test
pop
imul
mov
popf
ds
addr16
inc
cmp
movsb
inc
add
dec
imull
xchg
fisubs
in
icebp
rolb
pop
mov
jl
mov
clc
pop
movsl
sbb
adc
orb
popf
mov
in
mov
std
lahf
scas
adc
in
pop
aas
jl
loop
ljmpw
and
push
or
shl
jge
cmp
cwtl
cli
bound
movsl
push
jno
dec
nop
cmpb
dec
insl
push
xor
test
add
inc
bswap
adc
mov
outsl
fsubp
xlat
int3
shl
mov
call
js
xchg
dec
push
cmp
pop
push
out
add
xor
or
adc
emms
cmp
call
xor
inc
sahf
daa
repz
out
push
cmp
fimuls
pop
and
adc
inc
pop
jg
mov
leave
jp
xchg
push
inc
outsl
pop
fwait
xchg
pop
push
rclb
pop
popf
mov
inc
scas
cs
lock
add
in
addl
pusha
ret
jnp
add
iret
in
scas
xchg
lret
fldenv
xor
aad
fisubrs
push
test
sub
scas
cmp
scas
xor
dec
cld
push
adc
ja
lods
mov
lcall
xor
rcrb
sbb
mov
mov
push
icebp
adcb
int
insb
add
add
lahf
and
xor
pop
roll
add
fstpl
cwtl
mov
repnz
hlt
jp
mov
pushf
jb
lcall
mov
or
arpl
add
dec
xchg
div
jg
daa
mov
out
iret
mov
cmp
cli
out
jg
int
jmp
rorl
adc
push
stos
add
mov
cs
lea
adc
ljmp
or
adc
cld
movsl
jnp
mov
mov
cmpsl
mov
adc
lret
jg
popf
addr16
push
mov
lds
dec
xor
and
pop
mov
push
cmp
popf
xor
arpl
pop
xchg
and
fimull
mov
ljmp
out
fadds
jne
and
fisttpll
repz
incl
imul
sti
sub
jecxz
mov
je
shl
cmpsl
out
clc
idivl
xchg
jecxz
dec
jnp
sbb
push
ret
stos
loop
xchg
into
aaa
nop
leave
fdivs
stos
jmp
into
sti
sub
pop
repz
jge
push
jns
sub
fcmovne
nop
cmp
cs
or
out
pxor
fists
jecxz
jmp
jl
jbe
pop
xchg
fcomi
out
clc
repnz
f2xm1
mov
stc
jb
add
dec
jae
sub
mov
mov
dec
dec
icebp
cmp
mov
sbb
add
lods
out
sub
mov
sub
pop
mov
mov
scas
mov
fnsave
dec
shrl
and
and
xor
cmp
addr16
dec
push
roll
cmp
mov
iret
mov
cmp
pop
outsl
sbb
jge
aam
inc
or
sbb
int
rorb
xor
test
dec
arpl
arpl
lods
out
pop
mov
mov
jo
insl
dec
mov
mov
sub
pop
inc
add
pop
add
pop
and
mov
mov
ret
jl
push
out
je
out
or
adc
cmp
sarl
push
es
es
aas
in
jecxz
pop
jae
std
mov
imul
lcall
sahf
scas
cmovnp
js
xchg
inc
push
pop
add
mov
pop
pop
loop
adc
icebp
cld
pop
mov
jl
cmpsl
xor
inc
repnz
cmp
data16
addr16
ficompl
frstor
mov
test
sbb
imul
cmp
mov
lock
jnp
fs
mov
in
jae
xor
es
bound
ficoms
scas
cwtl
lods
mov
rolb
mov
aas
aaa
stos
into
cmpsb
out
repz
insb
dec
push
js,pt
inc
add
outsb
xchg
rorl
out
aaa
cmpsb
lods
sahf
mov
das
sbb
cld
out
dec
rcrb
std
mov
pop
int3
jb
pusha
push
mov
bound
inc
js
pop
movsl
mov
jge
inc
cmp
ljmp
adc
cli
mov
mov
dec
xchg
and
adc
fs
in
sti
jmp
jbe
lock
cli
leave
cmp
es
xchg
inc
inc
pop
cmpsl
jp
inc
jl
push
in
fwait
incl
bnd
xor
jge
pop
mov
fidivrl
pop
cwtl
jae
add
mov
push
inc
lahf
addr16
in
mov
test
cmpsl
arpl
ja
and
sbb
jns
xchg
jno
pushl
mov
out
sbb
lock
movsl
call
dec
sbb
and
or
daa
imul
or
jb
xor
movsb
xor
add
bnd
popa
stc
ja
mov
lret
adc
lret
and
clc
or
cld
cltd
sbb
aam
lods
fistpl
mov
mov
clc
lahf
lods
dec
sub
jbe
xchg
fdivl
cmp
fisttpl
mov
sbb
dec
adc
mov
movsb
jl
lods
jbe
jbe
push
or
sahf
add
adc
sub
sub
xchg
mov
popf
pop
rorl
mov
adc
pop
dec
loop
jg
xor
add
pop
lea
dec
lcall
ret
or
and
sti
filds
pop
popa
adc
xorb
outsb
loop
popa
jmp
and
mov
rcrb
cld
xchg
sub
test
mov
gs
and
outsl
call
bnd
pop
dec
sbbb
fisubrs
dec
jecxz
pop
ret
xchg
lds
cwtl
or
pop
and
xor
sub
jecxz
dec
xchg
loopne
leave
pop
mov
xlat
ror
pop
dec
cmp
pop
mov
dec
fsubrl
jl
cmp
mov
das
dec
testb
inc
stos
pop
test
insl
aas
mov
enter
mov
rcr
mov
incl
lahf
inc
int
xchg
fisubs
inc
mov
jle
cs
fnsave
and
sbb
repz
pop
pop
clc
push
dec
movsl
fwait
push
mov
ret
xchg
mov
adc
push
pop
xlat
mov
outsl
dec
out
mov
push
icebp
xchg
ds
dec
fdivrl
sbb
push
rorl
fisubrl
into
jo
ljmp
jb
into
je
push
xor
pusha
and
pop
cs
and
jmp
adc
stos
sbb
mov
cmp
mov
mov
cwtl
das
and
mov
sbb
and
or
mov
loope
into
mov
jb
pop
repz
js
cmp
cmp
sbb
shlb
mov
mov
fs
addr16
dec
add
aaa
test
xchg
repz
in
or
or
imul
pop
popa
xchg
add
and
sbb
test
sbb
mov
das
push
xchg
adc
lock
xor
sbb
xor
dec
fsubrp
adc
mov
aam
push
jp
add
and
subl
and
ja
jp
gs
mov
lahf
scas
popf
lahf
mov
mov
cld
cld
stos
mov
push
sbb
arpl
in
pop
adc
xchg
cld
sbb
dec
movsl
or
jge
inc
sti
test
shlb
mov
lods
inc
mov
lock
jg
add
cmp
es
out
dec
mov
pop
or
dec
pop
inc
imul
mov
mov
adc
addr16
jle
dec
sub
sti
mov
inc
out
stc
stc
cmp
mov
pusha
xchg
mov
cltd
adc
mov
lret
dec
xchg
aas
pop
xor
mov
imul
push
xor
ds
and
and
scas
cltd
push
out
and
aas
cmpsl
aas
enter
mov
int3
sub
fidivrs
and
je
je
iret
icebp
or
sti
pusha
rorb
jbe
cmp
ss
stos
adc
xchg
and
mov
sub
mov
push
pop
ret
aam
jno
and
rolb
mov
pop
mov
test
push
sbb
loopne
xchg
pushf
and
mov
jb
fbld
movsl
pushl
xchg
dec
clc
shrb
scas
xchg
xlat
push
fxch
mov
jbe
aaa
and
add
hlt
aaa
sti
test
aaa
mov
outsl
mov
xchg
ds
test
inc
lret
fsubrl
push
jl
popa
jge
xchg
mov
dec
scas
rcll
out
mov
push
jo
adcl
push
or
je
gs
push
dec
int3
push
mov
sbb
mov
aaa
push
stos
pop
xchg
and
dec
fcompl
dec
inc
std
notb
cmpsb
insl
mov
clc
test
ret
and
mov
ja
scas
shll
fdivr
inc
dec
or
leave
xchg
pop
jecxz
je
je
ljmp
sbb
xchg
in
shrb
inc
ret
sbb
cmp
mov
push
sub
arpl
lret
xor
add
fdivrl
in
filds
fs
je
outsl
xlat
sbb
cmp
sahf
orl
inc
aaa
fimuls
fstps
insl
mov
jno
sbb
stos
xchg
sti
pop
pushw
cmp
mov
dec
or
mov
xor
stos
pop
scas
ret
xchg
call
mov
pop
out
pop
mov
aas
mov
xchg
out
iret
push
sbb
or
ds
pop
xor
and
xchg
fdivp
test
imul
dec
mov
adc
inc
lcall
stc
data16
call
inc
ret
mov
add
and
cltd
movsb
mov
mov
aaa
dec
pop
and
xchg
aaa
aad
addb
cld
sub
lods
ds
and
mov
pop
mov
add
cmp
fs
scas
sub
dec
iret
iret
jg
insb
shrb
add
test
sbb
iret
pop
icebp
mov
jb
hlt
out
mov
or
sbb
adcl
leave
mov
imul
dec
jle
cmp
outsb
out
test
outsl
mov
incb
test
imul
pop
pop
and
stc
aad
loope
jo
jle
jns
sub
cwtl
imul
stc
dec
adc
push
mov
fisubs
rclb
and
mov
sbb
xor
push
movsb
in
mov
inc
je
lods
cld
xchg
test
aaa
out
or
inc
jle
loopne
push
jo
aam
push
sbb
lods
jmp
push
inc
ret
jge
cmp
in
dec
inc
mov
mov
shrb
xchg
les
inc
mov
or
test
inc
fcmovbe
xchg
sbb
xchg
jmp
xor
dec
insl
dec
dec
cmp
imulb
sub
loop
lahf
inc
push
lahf
mov
sti
and
pop
cli
pusha
call
adc
or
nop
mov
push
leave
pop
sub
ret
mov
rcrl
jmp
adc
mov
xchg
mov
and
jno
mov
sbb
movsb
out
lock
enter
fstl
xchg
aas
push
cmpsl
add
inc
mov
mov
leave
shlb
hlt
push
mov
jo
and
pop
or
push
mov
js
sbb
adc
inc
repz
mov
mov
outsl
xor
dec
mov
es
mov
push
call
and
cs
push
mov
xor
pop
inc
je
sub
ret
or
mov
nop
push
mov
call
out
jge
xchg
sbb
pop
push
mov
gs
lds
sbb
or
inc
in
out
mov
dec
lret
dec
fwait
inc
dec
negb
popf
lods
es
in
out
mov
xchg
adc
movsb
jmp
jnp
test
cmp
mov
xchg
mov
mov
cmp
out
sub
enter
dec
or
push
aad
sar
mov
lods
adc
and
add
leave
les
mov
aas
out
pop
mov
outsl
into
lods
enter
mov
shr
mov
rolb
and
fst
lock
sbb
std
add
fistpl
xlat
sbb
mov
int3
insl
fcomps
pop
std
adc
das
pop
sub
fistps
fdivl
sub
outsl
pusha
jge
cmpl
sub
sarb
imul
mov
xor
xor
xor
cmp
inc
pop
jae
dec
sbb
arpl
pop
cltd
xor
xchg
movsb
adc
jb
ja
inc
mov
adc
cmpsb
jne
testl
jb
mov
sar
sbb
dec
popa
scas
and
push
mov
iret
das
push
pop
xchg
jb,pt
push
xor
jp
add
in
jp
mov
shrb
mov
shlb
jbe
movb
in
fcmove
fldenv
adc
int3
sbb
jg
lcall
add
pop
adc
out
int3
sbb
or
movsb
jecxz
stos
sahf
jp
sti
xchg
in
or
popf
aad
fcoml
sbb
js
mov
dec
je
sub
push
sbb
inc
fwait
add
lret
shll
push
repnz
push
insb
imul
inc
incl
xchg
sbb
scas
cmp
mov
ret
add
xor
decw
pop
sub
cltd
adc
pop
add
adc
jecxz
mov
pushf
iret
arpl
insb
dec
scas
testb
bound
jge
and
sti
xlat
fists
aaa
cmp
add
cli
rorb
add
xchg
das
sub
ja
popa
dec
cmpsl
incb
pop
or
sub
or
mov
or
jle
aas
in
sub
mov
dec
push
xor
sbb
icebp
call
leave
adc
pushf
mov
jno
scas
fsubl
jg
jp
jecxz
cli
pop
push
jne
addr16
ljmp
or
repz
dec
inc
gs
mov
aad
dec
insb
imul
and
push
out
mov
test
push
sbb
xchg
mov
les
pop
outsl
out
loope
sub
ds
and
push
cmpb
iret
dec
push
je
add
cmp
fstps
data16
mov
outsl
pop
mov
fs
pop
mov
pop
sarl
dec
sti
in
lcall
mov
adc
rcrl
push
lea
jmp
or
loop
scas
push
shrl
lret
pusha
std
lret
lods
cmc
xor
and
divb
adc
lret
jnp
ljmp
in
add
or
loopne
loop
movsb
frstor
clc
jle
and
xchg
and
and
add
je
dec
or
pop
in
push
jae
repnz
pop
notb
jp
adc
jge
and
push
xchg
inc
out
mov
outsb
pop
or
cmp
cld
les
das
int3
adc
das
inc
push
mov
xor
les
xchg
rcrl
sbb
daa
xchg
repz
push
mov
mov
jl
cmc
loop
adc
push
mov
aad
inc
fcmovb
pusha
ret
lret
rep
leave
in
xchg
loope
dec
or
dec
xchg
xor
pushf
sbb
xchg
int
dec
inc
fdivs
rolb
jle
pop
dec
xor
push
dec
andl
nop
or
scas
or
push
lds
sub
or
push
jge
push
dec
mov
jb
adc
outsb
je
cmc
push
sarl
xchg
mov
lea
mov
push
adc
dec
add
in
or
addr16
xor
or
pop
add
stos
adc
xchg
sbb
insb
out
outsb
negl
mov
mov
stc
or
iret
sub
pop
jns
adc
frstor
push
gs
xlat
bound
push
call
lcall
lahf
cmc
aad
aas
pusha
scas
xchg
push
pop
popf
ss
js
sbb
add
test
push
xchg
and
or
in
fmull
push
outsl
inc
popf
add
push
test
inc
bound
negb
js
data16
fmulp
cmp
arpl
in
loope
fists
sarl
pop
pop
fs
mov
daa
push
mov
pop
rcl
inc
loopne
iret
out
cmp
movsb
push
inc
or
xchg
jl
jo
in
inc
je
and
jbe
fucom
popa
daa
push
loopne
push
out
pop
dec
xchg
rcr
cli
pop
pop
mov
xor
inc
fwait
jne
pop
cmp
ss
sub
adc
fwait
xorl
lret
insb
fadds
sub
sbb
orb
gs
push
mov
lahf
punpcklbw
and
dec
jl
fcoms
outsb
pop
cltd
mov
int
hlt
fbld
and
subb
cld
test
pop
push
das
mov
cmp
jp
lock
subb
iret
or
iret
xchg
popf
push
xchg
lret
pop
push
stc
jecxz
xlat
call
xor
dec
fistl
arpl
lock
add
sub
dec
mov
push
fnsave
ljmp
inc
cmpsl
inc
mov
mov
xor
xor
decb
mov
pushf
fsts
jb
xlat
das
add
cld
out
je
test
mov
or
pop
adc
pop
inc
dec
lcall
hlt
mov
into
add
push
jbe
out
out
je
pop
in
das
jb
rcll
ljmp
outsb
cmp
push
popa
xchg
fsubrl
movsl
cmpsb
mov
or
add
ret
jb
sub
or
inc
dec
rorl
scas
ret
insl
out
xor
jo
loopne
push
call
push
stos
dec
rcrb
shrb
hlt
fdivl
and
xlat
andb
xchg
in
push
out
imul
mov
jo
insb
data16
mov
cmp
sbb
inc
sbb
push
int3
mov
dec
scas
call
mov
dec
cmp
mov
cld
cwtl
repz
mov
dec
in
icebp
push
das
negb
pusha
mov
adc
mov
dec
sarl
in
lcall
out
or
xor
mov
pop
xlat
mov
ficoml
and
push
into
xor
mov
cmpsl
pop
cmpsl
sbb
and
xor
and
and
js
bound
jns
nop
fldt
inc
lock
mov
pop
stos
je
stos
xchg
push
jp
mov
in
je
or
pop
mov
add
adc
movntq
out
dec
jne
xchg
xchg
shll
add
sub
push
sub
lds
fs
dec
lods
mov
int
pop
mov
mov
lock
arpl
int
xor
mov
out
hlt
repnz
or
cmp
mov
or
rolb
jle
push
pop
jb
je
sub
daa
or
rcrl
mov
mov
scas
xchg
in
sub
lret
pop
inc
fwait
aam
imul
pop
inc
push
adc
pop
push
lahf
sahf
testl
dec
pushl
inc
in
out
cld
inc
lret
scas
test
push
cmc
in
inc
xchg
cmp
test
jns
andl
int3
pop
sub
add
mov
push
mov
jle
fimuls
push
jecxz
scas
push
cmp
cmp
and
dec
lds
inc
sub
ja
outsb
popa
inc
nop
fdivp
jnp
or
mov
filds
gs
pushf
xchg
pop
xor
int3
je
loope
adcb
js
mov
or
addl
add
jo
ljmp
pop
pop
pop
rol
ja
mov
int3
cmp
rcll
lock
movsl
outsl
mov
daa
and
mov
das
sarl
xorl
push
subl
or
inc
sub
fstpl
push
repz
ljmp
pusha
xchg
and
aad
fwait
iret
jge
cmp
insb
push
dec
xchg
in
jbe
pusha
pop
add
mov
ja
repnz
mov
push
leave
andl
push
les
cmpsl
cmc
mov
sub
mov
jno
sbb
push
jecxz
adc
cmpsl
jbe
and
ljmp
std
iret
pop
sub
inc
ljmp
mov
xchg
popf
mov
xchg
fstpl
jecxz
cld
inc
push
in
insl
test
nop
cmc
cmp
cmpsl
push
sbb
in
into
hlt
mov
stos
pop
push
xor
xchg
sahf
outsl
mov
push
aad
and
mov
or
sbb
ret
into
add
sbb
aas
scas
aas
lods
jle
jb
mov
cs
add
jbe
mov
fbld
or
mov
cmp
dec
dec
mov
push
push
or
cld
aas
fstl
cmp
jae
jle
repnz
xchg
pop
dec
orl
adc
cli
pop
mov
jae
out
jmp
sarb
and
mov
inc
mov
lods
cld
outsl
dec
popf
loop
sbb
push
cmp
xchg
sbb
sbb
and
in
inc
xlat
sub
ljmp
inc
sub
repnz
adc
roll
and
addr16
shll
sbb
ljmp
lea
ds
outsl
dec
pop
dec
cmp
dec
add
sarb
mov
in
lcall
adc
out
mov
int
call
popf
push
stc
mov
or
xor
xchg
adc
pop
adc
hlt
fistpl
xorb
inc
mov
jl
in
popf
pusha
fnstenv
adc
lea
pop
dec
pop
cmp
fstpt
push
dec
sub
pop
cmp
dec
pop
pop
xor
call
mov
sub
add
fdivl
mov
repnz
stos
xor
nop
sbb
xchg
xor
hlt
xchg
in
dec
or
push
mov
leave
add
bound
pop
xchg
push
jo
mov
push
and
das
inc
push
cld
rcrl
cwtl
jge
fs
sbb
in
cmpl
cmpsb
popf
mov
or
sub
sti
bound
addr16
icebp
sbb
jo
imul
push
repnz
aaa
mov
movsb
sahf
sub
ljmp
in
lret
ficoms
out
xor
xor
mov
ja
inc
jo
xchg
push
outsb
jb
adc
dec
xchg
adc
mov
xchg
rcrb
mov
mov
cmp
loop
imul
out
mov
cmpsb
xchg
xchg
jecxz
jl
insb
sbb
xchg
sub
cmp
push
xchg
cwtl
fcoms
mul
sub
aad
clc
loopne
or
scas
cmp
ds
pop
ja
jg
adc
and
push
inc
or
xchg
jp
ds
int
add
out
out
inc
and
stos
cmp
pop
push
mov
icebp
or
loop
mov
lea
push
mov
call
aad
aad
fcoml
or
lods
fucomip
rcr
stos
test
push
mov
std
shll
in
leave
or
mov
xor
mov
out
jle
fistpll
mov
dec
jl
js
test
arpl
push
jbe
sub
insb
out
jl
sbb
in
dec
xor
cmc
jmp
dec
pop
push
jge
ficomps
jb
xchg
mov
scas
out
xchg
add
repz
xchg
sub
push
cld
shll
cmp
adc
dec
lock
xchg
out
xchg
adc
cmpl
loop
mov
lods
call
fsubrp
push
rcrl
cmpsl
xlat
test
mov
add
aad
sbb
popa
mov
jmp
pop
bound
push
lea
adc
mov
stos
inc
in
sub
mov
inc
ret
cli
lret
dec
sbb
adc
shrl
clc
stc
pop
pop
lea
out
and
fs
pusha
mov
es
inc
fisubl
sub
jns
call
dec
ret
pusha
int3
incl
in
or
push
cmpsl
inc
clc
dec
add
mov
pop
cmp
xchg
mov
adc
nop
add
add
and
fisubrs
testl
lods
xchg
lahf
cs
mov
add
fld
jae
lods
sbb
lea
gs
adc
in
fiadds
sub
dec
xchg
out
call
pop
push
sahf
ficoml
mov
addl
xchg
sbbb
pushf
stos
xchg
cmpsb
mov
ficoml
jge
xchg
dec
add
mov
stos
and
ficomps
icebp
dec
jo
add
arpl
rclb
nop
jp
pop
clc
push
sub
sbb
mov
xchg
mov
sti
imulb
push
scas
fcoml
cmpsl
fucomip
shlb
je
ret
lcall
mov
pop
jge
scas
push
dec
sub
mov
jmp
sti
lods
fistps
int3
lret
pop
lahf
mov
push
cmpsl
lds
imul
div
dec
mov
jge
mov
pop
ss
or
jl
mov
icebp
push
das
out
les
adc
out
enter
out
test
fstps
scas
shrb
adc
pop
sbb
sbb
mov
push
xchg
loop
and
in
lret
shll
movsl
and
jg
and
jns
repnz
in
clc
xor
and
dec
sub
xor
sub
jnp
movsl
hlt
pushf
mov
jmp
cmpsb
mov
loope
hlt
jo
push
cmc
es
loopne
adc
mov
pop
lds
mov
inc
in
dec
stos
data16
and
mov
mov
imul
pushl
cs
loopne
aam
loopne
andb
daa
jo
loopne
mov
insb
test
xor
into
xchg
jo
ds
pop
test
xchg
push
sub
mov
into
js
or
jmp
sub
test
jl
sbb
lret
out
mov
and
test
xor
ret
pop
test
add
ret
pop
insl
jle
adc
sub
or
outsl
vcvtpd2ps
inc
fldl
fsubr
xchg
pusha
xor
cld
and
scas
mov
ret
lds
lock
jmp
fists
push
cli
cmc
jecxz
push
aaa
out
inc
aad
leave
adc
stos
push
data16
sub
in
or
in
adc
shrb
push
stos
and
neg
iret
jno
and
sub
pop
mov
repz
je
add
jle
adc
out
pop
and
add
cltd
adc
hlt
mov
test
sbb
inc
sti
push
rcrl
mov
jmp
sarl
fisubrs
push
repz
aam
pop
lods
daa
fcompl
jl
cmp
in
pop
cs
xchg
push
pop
inc
adc
int
jne
out
sub
lock
xorl
adc
insb
xlat
enter
inc
out
pushf
fmuls
aas
cli
jmp
jp
pop
scas
popa
mov
aas
mov
sarb
cmp
stos
aas
icebp
xchg
xor
les
mov
push
sbb
mov
ds
mov
mov
xchg
arpl
mov
mov
shrb
or
sti
test
inc
fadd
stos
mov
shll
aad
stos
cmp
mov
imulb
lods
orb
lahf
and
hlt
out
jbe
sbb
xor
mov
jg
scas
popf
and
scas
subl
and
pop
addb
imulb
sub
and
mov
add
popa
lea
lea
xor
out
jmp
jo
pusha
mov
dec
clc
movsl
jo
scas
and
dec
hlt
shrb
aas
mov
cmpsb
mov
add
cmp
shl
into
inc
int3
shlb
pop
jae
jge
inc
arpl
pushf
aad
int
inc
out
lret
subb
push
movsb
ret
sahf
loopne
fsubl
call
fstpl
mov
enter
hlt
aas
je
mov
nop
adc
dec
cmp
and
add
and
pop
mov
out
add
jbe
in
xchg
fistpl
stc
sub
inc
push
cs
dec
iret
aas
mov
mov
gs
xchg
add
mov
fisubrl
xchg
xlat
das
cltd
inc
mov
mov
je
outsl
fsts
dec
hlt
pop
fcomi
movsl
repnz
sub
pop
xor
lds
cmc
mov
jo
jp
inc
fdivrs
xchg
sub
adc
shrb
in
pushf
ss
lret
mov
addr16
aaa
fimuls
push
pop
aam
cmp
stos
jg
pop
scas
jge
pushf
dec
inc
mov
xor
xor
dec
or
adc
jo
lret
sub
jmp
in
sub
ret
push
sub
sti
mov
rcl
test
mov
loopne
into
incb
pop
decb
inc
sti
hlt
dec
mov
arpl
outsl
mov
push
and
jno
pop
je
jle
ret
mov
nop
scas
call
and
orl
daa
jp
pop
imul
mov
mov
idiv
in
movsl
dec
sbb
daa
fdivr
sub
rcrb
pop
cs
push
hlt
ja
jge
fidivrs
shll
addr16
jecxz
pop
in
add
xchg
or
shlb
lods
fcoml
fisttpll
xchg
xchg
dec
push
shlb
dec
call
mov
outsl
mov
nop
mov
xchg
sub
fiaddl
fstl
dec
add
ret
push
pop
jmp
mov
out
icebp
repnz
mov
repnz
in
sarb
outsb
lahf
xor
mov
push
bndldx
mov
test
cmpsl
pushl
and
sbb
mov
mov
ret
cmovne
popf
push
mov
mov
mov
jg
arpl
lods
iret
icebp
pop
cs
pop
ficomps
lods
fxch
clc
stos
loope
cmp
and
mov
dec
xor
mov
sub
ret
bound
insb
out
pop
movsl
sbb
adc
pmaxsw
fs
cmp
xchg
add
push
dec
mov
hlt
int
and
fmull
idiv
mov
mov
push
adc
aad
bound
leave
iret
addb
mov
mov
test
jmp
cmovno
leave
sub
dec
fstp
mov
bound
lods
outsl
cmp
insb
push
xchg
shrb
repz
push
xchg
cmp
lds
insb
imul
add
es
fisubrs
loop
outsl
mov
push
push
add
inc
push
jge
popa
sbb
mov
and
and
xor
dec
mulb
movsb
and
mov
push
fidivrs
inc
mov
and
mov
mov
in
test
adc
into
pop
loopne
inc
xchg
jnp
adc
popf
test
adc
mov
push
sbb
pcmpgtb
stos
and
xor
daa
mov
rclb
ret
mov
aad
dec
out
lods
adc
mov
or
jg
cltd
push
xlat
sub
stos
je
jle
xchg
push
lea
push
cmpsb
cs
test
js
sbbb
test
out
inc
push
sbb
push
inc
movsb
into
or
jge
shl
leave
cltd
inc
jl
mov
xor
xor
fwait
and
inc
lret
adc
insb
dec
pop
sbb
js
jb
outsb
es
mov
dec
adc
xorl
push
aas
dec
and
sbb
dec
xchg
jmp
add
fwait
cmpsl
lods
cmp
lods
int3
dec
adc
mov
cmp
sar
cmp
dec
xor
dec
insb
js
cmpsb
mov
jnp
pop
shlb
aas
pop
aas
push
and
insb
add
andl
sbb
pop
repnz
cmp
das
xchg
cs
xor
add
pop
imul
xchg
mov
lea
mov
mov
dec
sar
nop
sub
stos
mov
rcl
popf
stc
xlat
aad
or
ss
jp
and
mov
pop
jne
pop
int3
lods
ljmp
jl
fucomp
lods
sbb
sti
sub
cmpl
sub
dec
mov
popa
sbb
sbbl
mov
add
jno
adc
lahf
lret
test
loop
or
jb
inc
stos
jb,pn
mov
pop
in
dec
add
cmpl
jb
mov
lahf
daa
jl
sub
lods
jo
cmpsb
and
std
cmp
cmp
add
or
xchg
mov
insb
mov
add
test
loopne
call
cli
mov
push
out
xchg
popa
push
xchg
mov
lea
mov
and
push
std
test
inc
adc
aad
push
fbstp
mov
mov
sub
add
sbb
xchg
xchg
push
xchg
pop
push
sub
xlat
mov
testb
push
dec
sub
cli
inc
cltd
dec
rcrb
pop
and
pop
adc
xor
and
out
lahf
sub
or
pushf
push
cmpsb
sub
sub
inc
mov
cmp
mov
orl
mov
in
adc
pop
mov
mov
outsl
sub
dec
repnz
test
inc
sbb
push
iret
pop
cmp
data16
int3
out
add
and
mov
jnp
sbb
loop
inc
cmp
data16
and
sbb
in
pop
jns
inc
add
mov
ret
cmp
dec
call
lods
dec
mov
and
in
lcall
sbb
or
jle
fsubr
fldcw
xchg
std
lahf
data16
insb
lahf
enter
push
lods
add
les
test
fsubrl
mov
lea
push
outsl
mov
fcomps
pop
ss
neg
or
insl
add
jns
xchg
out
stos
test
stc
sti
push
adcb
imul
cwtl
insb
lea
adc
test
scas
mov
dec
inc
scas
mov
xor
mov
xchg
adc
pop
mov
jnp
ss
mov
push
scas
in
jmp
mov
and
mov
xchg
and
sti
lcall
daa
imul
pop
cmp
hlt
bound
push
add
mov
mov
loopne
and
cwtl
xchg
insl
jge
cmp
stc
or
imul
ss
outsb
fidivrs
fists
fisttps
nop
cld
lods
add
dec
popa
orb
push
mov
jle
cmp
sbb
ds
rcr
decl
inc
addl
inc
xor
cmp
out
add
movsl
sbb
jge,pt
push
int3
or
testb
stos
xchg
mov
vmptrst
adc
mov
aas
sarb
pop
int3
das
push
and
int
insl
jg
stos
into
mov
imul
xchg
jae
cmp
dec
push
adc
push
inc
sbb
in
lock
jl
pushf
cmp
push
jl
xor
mov
aam
stc
movsl
das
push
adc
stos
int
adc
push
rcrl
mov
in
and
sbb
in
push
push
mov
jnp
mov
mov
cmc
cs
scas
jmp
fwait
add
xor
cli
movsl
fists
mov
loope
clc
je
mov
test
call
aaa
jo
inc
jo
jecxz
pop
push
xor
xchg
data16
mov
ret
int3
scas
mov
add
jle
fwait
push
cltd
lods
xchg
jns
mov
push
in
outsl
inc
gs
jae
pushf
popa
cmp
rclb
sahf
cs
xchg
jo
inc
and
lods
sahf
mov
test
xchg
push
test
pop
adc
aaa
mov
rclb
roll
mov
cmp
cld
inc
test
nop
mov
iret
jecxz
lret
cmp
jl
xor
and
andl
mov
mov
push
xchg
adc
aad
lods
add
nop
out
in
xor
jle
jl
lahf
lea
xchg
add
mov
outsl
push
jne
iret
cmp
call
out
push
cltd
sbb
mov
loope
es
fnsave
in
mov
mov
lds
jecxz
in
cmp
fcmovb
movl
adc
push
pop
push
ja
and
add
push
sbb
dec
std
lcall
and
push
or
cmp
xor
jns
leave
adc
lea
sbb
mov
push
scas
ret
jge
iret
jp
stos
in
or
std
jge
add
in
mov
pop
dec
xor
das
fisubrs
lahf
push
mov
aas
lret
out
idivl
add
enter
mov
movsb
aaa
ret
add
inc
out
aam
rcrl
lods
cmp
dec
inc
sbb
jae
and
xlat
adcb
das
call
lods
mov
out
xor
mov
xor
sbb
sti
jge
cmp
loope
nop
test
out
xchg
jmp
es
or
adc
hlt
mov
bound
fcoms
jl
xor
pushf
sub
pop
dec
xor
sbb
push
push
lahf
popf
push
nop
and
repz
daa
and
and
movb
add
scas
sbb
inc
test
in
imul
pop
fcoml
push
enter
fdivrl
mov
dec
xor
mov
aad
mov
sbb
lcall
xchg
aad
pushf
mov
sub
or
add
out
xchg
mov
jb
adc
out
jge
std
cmovl
nop
scas
test
pop
dec
insl
push
cmp
pushf
xorl
xchg
cmp
sahf
sbb
outsl
aas
je
xchg
adc
in
sbb
mov
test
pushf
inc
pop
stos
sahf
cmp
js
sub
pusha
cld
adc
fnstsw
rorb
mov
cs
add
je
inc
in
xchg
xor
in
cli
pop
sbbb
push
pop
push
mov
insb
scas
jmp
pmaddwd
xor
das
lcall
sub
jno
ret
in
inc
lds
out
pop
jecxz
inc
insb
incl
mov
rcrl
ficompl
cwtl
sub
fcoml
cmp
sub
jmp
or
push
ds
pusha
lcall
cmp
test
clc
push
and
testb
cmp
sahf
mov
sub
xchg
fs
movsl
fbstp
pop
push
inc
hlt
sbb
push
test
sbb
pushf
aaa
ret
jb
inc
inc
shlb
pop
rcl
mov
pusha
addr16
xchg
mov
and
psraw
cmpsb
fsub
mov
dec
push
jl
push
std
dec
push
mov
dec
mov
rcll
pop
xchg
loop
enter
insb
sti
mov
ror
scas
sbb
rorl
into
inc
lahf
dec
cmpsb
lahf
pop
mov
bound
sbb
cs
cmp
push
nop
pop
call
or
xor
mov
sub
pop
loope
cmp
cmp
je
mov
push
mov
mov
mov
or
cmp
mov
inc
xor
shll
sbb
insl
arpl
push
ret
mov
gs
es
and
inc
inc
loopne
das
add
ds
push
push
lahf
adc
push
adc
xchg
je
mov
xor
push
cmpsb
idivl
pusha
jne
cmpsl
jb
jae
repnz
sub
mov
stos
leave
arpl
xchg
mov
xor
popa
pop
dec
popa
xor
push
mov
out
add
jmp
inc
and
int3
adc
ret
sub
push
pop
ss
sahf
sti
mov
jbe
adc
bound
mov
call
dec
cmc
xchg
sbb
or
test
mov
mov
mov
pop
sub
jecxz
jo
fstl
addr16
or
sbb
loopne
cmp
jl
xor
stc
adc
daa
mov
mov
nop
inc
sub
test
push
push
mov
xadd
popf
ret
adc
mov
jo
pusha
fisttps
adc
mov
repnz
push
dec
lahf
fistpl
arpl
sub
in
loop
xor
inc
jb
adc
inc
xchg
iret
xchg
ds
inc
add
notl
mov
inc
sub
in
inc
mov
int3
std
cmp
out
stos
inc
lret
movsl
push
loop
pop
repz
cltd
push
cmpsb
loope
push
stos
lock
pop
movb
push
rolb
jge
fsub
adc
sti
dec
xor
enter
repz
adc
aam
mov
std
in
jp
jbe
fbld
push
or
pop
sti
jp
cld
cli
mov
mov
fstl
and
adc
imul
imul
sub
inc
xchg
mov
insb
add
or
jne
jg
dec
icebp
xor
add
rcll
stos
or
popf
or
ds
scas
mov
mov
cld
out
sar
ret
repnz
mov
pop
sbb
popf
inc
idivb
jge
outsb
lcall
cmpsl
fsubrl
push
icebp
lods
andb
xchg
cmpsb
push
jb
jb
mov
mov
cmpsb
loopne
scas
or
je
nop
inc
sti
or
dec
out
xchg
xlat
dec
mov
fisubl
pop
mov
sub
adc
call
jmp
repnz
adc
out
lahf
lea
repz
inc
jbe
mov
fisubs
lods
adc
aaa
mov
adc
fldt
in
cltd
sti
cld
stos
imul
mov
mov
mov
call
sub
arpl
dec
push
ret
jb
jnp
sarl
and
jno
gs
aaa
mov
insb
es
mov
cmp
cmp
rorl
mov
leave
js
inc
andb
xchg
sbbl
and
inc
lea
pushf
mov
mov
pop
fldenv
sbb
xchg
and
out
cwtl
push
icebp
imulb
mov
xchg
inc
mov
ret
lea
or
shll
leave
mov
daa
mov
mov
xor
sbb
jp
fildl
pop
xchg
lahf
mov
xchg
sub
and
pop
sbb
mov
jo
xor
pop
mov
xchg
adc
adc
negb
cs
frstor
cmc
cmp
dec
leave
or
in
fchs
insb
or
inc
mov
mov
fnstcw
cmpsb
pop
xchg
jmp
ljmp
adc
jecxz
sbb
nop
sub
in
lret
mov
mov
pop
gs
pop
adc
into
cmc
in
lret
inc
cmpsl
lods
insl
and
cld
test
sbb
mov
scas
lret
shrb
and
jge
stc
push
lds
xor
mov
jnp
and
into
fnstsw
fstl
add
bound
in
pop
adc
jns
add
in
or
mov
add
nop
pop
and
rclb
mov
nop
dec
lods
xchg
rolb
repz
jp
adc
mov
pop
xorl
js
inc
mov
mov
jae
jecxz
dec
lock
adc
test
push
scas
cs
mov
lock
loop
lock
fwait
add
das
int
push
cmp
mov
inc
les
sub
jo
hlt
out
lcall
xor
out
and
jo
push
lret
or
fnsave
loope
mov
aad
in
movsl
dec
mov
pop
push
in
adc
jecxz
add
jg
add
adc
jb
adc
mov
inc
push
cwtl
xor
adc
fwait
push
pop
and
int3
sbb
outsb
pop
popf
or
mov
ffreep
pushf
and
dec
imul
or
stos
imul
in
lods
push
popa
rcrb
pop
ficoml
pop
pop
push
enter
ror
pop
jp
jo
cmpsb
lods
int
xor
icebp
push
adc
mov
xchg
xlat
inc
shrb
daa
or
adc
or
jnp
mov
outsb
pusha
mov
insl
xchg
pushl
fwait
cli
scas
push
add
inc
xchg
jmp
packuswb
xor
pushf
and
loopne
inc
mov
xor
jno
and
aam
iret
mov
adcl
das
or
adc
adc
dec
jecxz
in
add
aas
popa
add
lods
movsl
loop
mov
sti
rolb
mov
xchg
in
enter
pop
aaa
imul
fs
cli
jp
ss
mov
mov
imul
push
test
sub
mov
inc
mov
push
lahf
adc
jge
rcl
pop
movsb
test
insl
adc
push
into
mov
in
cmpsl
inc
mov
test
xchg
out
mov
movsl
mov
pop
adc
ja
pop
and
dec
push
roll
mov
imul
xchg
popf
imul
in
pop
ds
add
repnz
mov
lds
adcb
cs
dec
in
ret
idivb
lret
bound
es
or
pop
inc
xor
les
mov
add
testl
mov
imul
subb
mov
in
testl
pop
icebp
pop
and
push
pop
ret
xchg
repz
cmp
mov
lods
push
out
dec
sbb
sub
inc
inc
call
push
dec
dec
fdivrp
scas
inc
cmpl
mov
dec
and
mov
mov
idivb
lods
sbb
jg
ljmp
icebp
and
mov
xchg
pushf
mov
xor
push
ficompl
adcb
loop
jmp
insl
shrb
fcoml
sbb
enter
lea
test
dec
xchg
outsb
push
into
das
xchg
aam
pop
testl
pusha
dec
fistpll
loopne
cltd
dec
ja
fsubl
fistps
mov
xchg
jmp
movsb
test
lret
inc
mov
add
add
test
jmp
stos
cli
iret
ds
cmp
adc
push
xchg
cmp
jle
cld
jp
push
ja
cltd
jge
dec
dec
mov
into
xchg
sahf
adc
xor
lahf
pushf
aad
gs
xor
mov
mov
jb
xor
mov
xor
pop
jg
insb
je
mov
fwait
jbe
fwait
xchg
dec
fs
xchg
sbb
cld
pop
xor
fldcw
and
fisttpll
push
bound
ret
dec
jp
jb
loopne
jns
add
cmp
sahf
pop
push
orl
lcall
dec
insb
cmpsb
fs
adc
jb
xchg
lods
in
dec
adcb
divb
stos
loop
xor
add
push
ret
mov
loop
fmull
loope
int3
add
lea
daa
mov
dec
out
cmp
or
mov
push
ds
or
and
insl
repnz
lods
mov
inc
sub
iretw
mov
in
sbb
pop
aaa
sub
cmp
movsl
cmp
cs
or
hlt
jp
add
repnz
adc
je
call
inc
jnp
insb
and
adc
pop
and
clc
mov
mov
sbb
or
iret
mov
jg
inc
sub
xor
mov
notb
subl
push
negb
push
dec
push
jmp
popa
add
scas
shll
sub
adc
hlt
inc
mov
mov
mov
sub
push
pop
cli
fsubl
mov
push
jp
push
sbb
jnp
inc
mov
dec
test
movsb
mov
pop
pop
subl
leave
inc
iret
fcoml
scas
pop
arpl
dec
gs
aad
adc
or
ret
add
mov
repnz
mov
pop
imul
jns
push
push
test
popa
inc
loopne
and
mov
push
lock
rcll
sbb
ret
je
scas
mov
sti
daa
fcoms
outsb
data16
dec
mov
jle
inc
adc
lret
pop
int3
mov
pop
push
and
dec
push
lock
xchg
int3
sub
jb
or
sub
xor
push
into
inc
push
mov
xchg
mov
mov
and
cmpsb
int3
lret
push
pop
mov
push
lcall
xor
mov
push
pop
cmp
or
aaa
add
mov
pop
pop
test
xor
cmp
daa
mov
push
mov
lahf
dec
inc
cwtl
mov
ds
aam
test
lahf
add
cmp
test
mov
pushf
cld
push
outsb
enter
add
mov
xor
lock
mov
cmp
mov
roll
jecxz
into
inc
addr16
movl
popf
adcl
lahf
movb
jg
cmp
sub
mov
iret
or
addr16
pop
pop
mov
out
inc
in
mov
call
outsb
int
mov
sub
jmp
jecxz
loop
mov
lds
add
jle
mov
cs
shrb
hlt
stos
int
push
jns
aas
xchg
rcrb
add
lcall
fdiv
mov
in
cwtl
mov
js
call
ret
cmp
sbb
mov
xor
jne
and
sub
jns
push
cld
mov
mov
push
cmp
loop
cmp
cmp
mov
or
and
mov
shr
std
sarl
jb
dec
push
mov
aam
aam
cmp
inc
repz
fildll
add
repz
cli
sbb
rcll
dec
insl
sahf
pop
cmp
fisttps
insb
mov
lds
sub
sti
dec
pop
mov
call
cmp
ds
popf
mov
push
sub
mov
xchg
add
xchg
push
cmp
cmpsb
mov
xchg
insl
lret
sbb
std
or
push
stos
outsl
aad
push
xor
mov
addl
loop
addr16
pop
aad
jno
fcompl
cmp
cmp
shll
pushf
fstp
lds
test
sbb
xchg
cmp
cld
int
dec
push
adc
scas
sbb
dec
mov
repnz
jg
pop
cmpsb
jmp
cmp
sub
fiadds
aam
les
mov
mov
or
popa
adc
int
jge
repz
sbb
xchg
add
xchg
call
das
vaddsubpd
inc
pop
out
push
mov
pop
mov
testb
mov
or
scas
cmc
dec
dec
and
lret
xor
mov
test
test
push
int3
pushw
xchg
push
out
mov
xchg
fnsave
das
xor
vpsubw
mov
push
out
hlt
shlb
pusha
and
jmp
addr16
push
lret
jle
js
fcomps
mov
rolb
mov
push
call
shll
cmp
cmp
xchg
add
clc
mov
xchg
out
mov
jae
ja
push
cmc
loope
in
loope
movsl
mov
daa
xor
fst
mov
dec
sub
push
adc
mov
cmp
xchg
xchg
and
ljmp
push
sub
loope
mov
mov
repz
push
add
inc
aas
push
pop
or
movsl
inc
loope
dec
adc
pop
popa
sub
andb
push
hlt
sub
dec
inc
pop
loope
repz
out
rorb
inc
jno
test
push
sub
inc
bound
lret
push
fstpl
imul
jge
add
test
loopne
iret
movsl
out
adc
int
mov
lock
add
xchg
cmp
mov
cli
call
push
jp
mov
fs
pop
pop
adc
lds
iret
or
mov
mov
mov
stc
les
jge
jbe
out
and
cwtl
jbe
cmp
aaa
pop
std
fbld
fimuls
popf
and
mov
jge
mov
push
lahf
pusha
cmc
inc
and
dec
stos
jbe
or
lret
fs
sbb
xor
cmc
hlt
adc
lret
in
sbb
cs
jecxz
sbb
sahf
inc
in
jecxz
shll
int
aaa
imul
dec
loopne
sub
cmp
inc
fidivrs
mov
jmp
bnd
and
or
loope
add
or
xorl
sbb
mov
dec
push
or
push
dec
sahf
and
xor
das
and
out
mov
sbb
lods
mov
cs
and
mov
mov
or
mov
rep
bound
addr16
jl
sbb
not
or
repnz
push
in
mov
std
shlb
dec
shll
or
sub
jecxz
adc
cltd
cltd
sbb
mov
jb
ljmp
xchg
test
pop
in
fdiv
mov
mov
lahf
movsl
add
call
jnp
cmp
sbb
stc
pop
jmp
cmpsl
aad
and
dec
stos
imul
and
enter
test
in
subb
loop
mov
leave
scas
sbb
cltd
outsl
bound
enter
sub
jno
sub
sub
adc
adc
das
cmp
jg
push
mull
imull
outsl
dec
sub
loopne
jnp
test
pop
sbb
add
inc
addr16
cmc
in
mov
out
repz
dec
cwtl
mov
adc
test
shr
xchg
call
fsubs
addl
xchg
mov
inc
fs
inc
sbb
cmp
mov
mov
xor
roll
shl
movsl
xor
inc
adcb
adc
inc
popf
rcl
imul
scas
mov
adc
lret
aaa
fwait
jp
frstor
lcall
jo
push
jmp
xlat
xor
push
dec
aas
add
jl
xor
shll
xor
sti
add
xor
push
jg
push
pop
mov
jnp
andb
test
lods
notb
arpl
scas
dec
out
inc
or
dec
mov
fsincos
xor
pusha
adc
outsb
lods
popa
push
mov
mov
ret
pop
es
mov
mov
mov
mov
mov
mov
mov
lahf
in
push
lcall
fidivl
mov
pop
sbb
sbb
jne
fdivrl
mov
mul
sub
bound
sub
mov
xchg
cmp
sti
repz
mov
xor
jecxz
jno
add
addl
lret
ss
push
rcl
cmp
sarl
sbb
gs
and
lret
add
ret
add
rolb
sub
test
sbb
cmpsl
add
addr16
ja
shlb
sub
adc
xchg
or
mov
fdivs
pop
mov
mov
fdivl
xchg
aad
push
nop
dec
xor
jge
test
clc
clc
ss
aaa
push
addr16
inc
xor
aam
sub
mov
call
xchg
sub
cmc
pop
loope
ret
out
pop
mov
add
test
ret
jb
push
pushf
jecxz
les
ret
aas
push
sti
dec
stc
and
add
aas
xchg
sub
fnstenv
inc
out
add
inc
dec
push
jecxz
jo
fdivrl
fwait
imul
pop
fists
sub
pop
push
jbe
popa
in
test
xor
jns
aas
pop
fisubrl
popa
gs
int3
jp
mov
xchg
out
addl
and
enter
jno
and
inc
das
adcl
mov
data16
xchg
pop
push
add
int3
fstps
add
sbb
fld
clc
inc
out
pop
or
add
sbb
sub
mulb
pop
jmp
dec
das
icebp
sbb
pusha
xchg
sbb
lcall
mov
gs
push
fistps
fisubs
fisttpll
repnz
inc
jge
stos
in
mov
push
ds
jb
int3
lahf
cltd
subb
cli
gs
sti
lcall
dec
push
cli
leave
scas
mov
ljmp
adc
pop
rcrb
and
cmp
jecxz
cmp
push
and
lods
negl
adc
daa
out
nop
loop
mov
push
lret
mov
adc
pop
mov
lea
int
cmp
dec
movsb
pusha
bound
lahf
fwait
push
lahf
adc
cmp
sbb
out
inc
jmp
mov
orb
cmp
lds
out
lds
sbb
mov
pop
sub
and
mulb
test
int3
xchg
lods
mov
or
pushf
sar
stos
clc
and
shlb
movsb
test
cmpb
ja
pop
out
xchg
out
xchg
stc
jmp
xchg
shl
xchg
cmp
mov
mov
imul
movsl
cmpsb
rcrl
out
cltd
stos
xor
or
nop
push
push
lods
popf
sbb
dec
inc
loopne
loop
cmp
and
lahf
adc
cmp
lock
lods
mov
pop
sbb
aas
adc
sti
nop
sub
ljmp
mov
push
les
add
fwait
sbb
jns
insl
xorl
lea
mov
or
test
xchg
jb
cmp
pop
push
sub
mov
adc
subb
pop
mov
jg
push
sti
adc
add
ja
push
out
inc
addl
mov
pop
dec
pop
xchg
pop
xchg
sbb
or
dec
dec
aam
fwait
subb
add
xor
xchg
outsl
call
jmp
repnz
inc
push
sub
xchg
sub
imul
adc
inc
push
sbb
std
dec
xchg
ret
fimuls
xchg
xor
inc
xchg
insl
xor
imul
test
mov
jb
ja
sbb
cmp
jae
mov
adc
fmulp
jbe
mov
out
sub
lods
test
hlt
xor
pop
out
sahf
sub
in
mov
fsubl
cmp
imul
xor
sti
cltd
das
inc
fwait
test
sbb
inc
in
add
cmpsl
xlat
xchg
fistpll
sub
andb
cwtl
ret
ds
aam
movsl
or
sti
push
fmull
shlb
rclb
stos
push
call
push
mov
push
pop
mov
ret
sahf
mov
xchg
ds
push
cmp
scas
leave
arpl
push
sbb
or
mov
fsubs
mov
divl
ja
xor
pop
data16
push
jne
fwait
push
sbb
dec
sbb
xlat
aaa
ds
or
push
inc
push
sub
test
xchg
mov
mov
xchg
ret
inc
test
lods
pop
rcll
enter
cmp
enter
xchg
insb
leave
iret
cmp
sti
adc
xorb
repnz
pop
cwtl
in
stos
jl
adc
test
mov
out
adc
data16
jg
push
pop
test
in
test
out
cmp
sbb
xchg
inc
jecxz
lret
shr
jl
xchg
jo
aas
in
lahf
inc
add
std
dec
imul
movsb
popa
ja
push
rcr
mov
push
shlb
dec
sub
in
add
stos
mov
push
pop
xchg
les
push
sbbb
fistps
sub
cwtl
fisubs
sbb
mulb
adc
inc
sbb
sarb
dec
nop
adc
shlb
inc
xor
mov
iret
mov
pop
and
sbb
and
adc
fcoml
cmp
test
imul
cmp
and
fmul
sub
xchg
sub
daa
outsl
pop
int
movsl
outsl
movsl
orb
lock
test
sub
bound
sbb
insl
icebp
and
or
push
fisttpll
xchg
test
and
push
mul
scas
in
cli
es
sbb
add
xchg
aaa
xor
int
loope
adc
cmp
push
or
aad
mov
add
add
xlat
xchg
pop
dec
lret
out
leave
cmpsb
cmp
pusha
in
pop
xchg
mov
sub
inc
push
fildl
insl
xchg
stos
adc
hlt
adcb
and
mov
add
sbb
or
sahf
pushf
testl
sub
pop
or
or
dec
jnp
mov
xchg
sti
rol
test
mov
inc
xor
sub
dec
loopne
dec
repz
xor
cmp
lea
daa
dec
imul
xchg
lret
jnp
jmp
cli
sub
dec
comiss
add
jbe
cmp
fs
jmp
aad
aam
cmp
arpl
pop
mov
cltd
jmp
addr16
jbe
fstp
ljmp
scas
push
stc
lret
sbb
dec
into
sbb
jmp
in
insl
inc
jmp
icebp
ljmp
add
aas
out
add
orl
mov
xchg
lods
sbb
jg
rclb
xor
inc
popa
pop
sbb
push
adc
adcl
inc
insb
mov
fsubrs
and
inc
pop
out
and
sbb
lea
jg
push
aam
sbb
and
pop
mov
les
icebp
outsl
add
sahf
jmp
into
mov
sarb
shll
sub
inc
sub
add
cmpsl
popl
xor
dec
popf
mov
pause
inc
mov
aad
add
out
das
dec
sbb
addr16
pop
lods
outsl
mov
repnz
arpl
inc
jne
jo
sbb
fnstenv
arpl
mov
cs
xor
or
data16
lret
imul
push
cltd
xchg
ret
pop
lret
fistl
jg
xchg
gs
int3
aas
lods
push
xchg
in
data16
inc
divl
jmp
cmpsb
sub
mov
xorb
jb
inc
leave
int3
jl
cmp
sub
in
inc
in
cs
push
cmpsb
sub
outsb
insb
insb
xlat
jb
test
sub
int
add
mov
dec
aas
jne
jb
push
and
xchg
mov
sub
ss
nop
daa
es
pop
sbb
mov
inc
inc
out
fidivs
adc
lahf
and
in
dec
jmp
call
outsb
ret
dec
in
cmpsl
fsubrs
dec
stos
cmpsl
bound
daa
xlat
jmp
mov
mov
pop
ret
sub
pop
xor
stos
and
enter
in
les
mov
push
inc
or
or
or
aam
and
repnz
call
pop
in
test
fwait
mov
adc
lret
lock
nop
inc
mov
sbb
adc
orb
movsb
test
repz
pop
mov
aaa
inc
xchg
mov
lcall
enter
lock
jp
js
repnz
int3
es
mov
jae
and
jecxz
add
push
mov
idivb
jmp
fisubrs
jge
mov
pop
das
repnz
mov
lahf
mov
mov
lahf
jo
pop
sub
pop
jae
dec
cmp
pop
into
stos
push
adc
inc
pop
test
pop
ficoml
jge
stos
rcll
sahf
mov
ljmp
out
push
push
popf
xchg
out
fisubl
ljmp
out
mov
ret
and
loop
pop
mov
xor
pop
pop
mov
fs
movsl
mov
nop
pop
shlb
xor
movsl
add
dec
add
mov
lcall
mov
movb
fbstp
pop
mov
inc
add
lret
or
or
adc
fprem1
or
rcrl
xchg
cld
push
mov
mov
int3
andb
pop
inc
fdivl
lea
xlat
sub
fistpl
pop
xor
fwait
jns
andl
inc
and
lds
stc
fwait
popf
add
rcr
decl
add
mov
push
test
xchg
add
insb
js
stc
xor
mov
mov
out
int3
sahf
dec
ss
jecxz
inc
fs
test
jp
fcmovnb
data16
lods
and
mov
push
dec
sar
or
or
and
shll
cmpsb
add
adc
and
fs
repz
cmp
mov
movsb
into
int
and
int
leave
sub
adc
jbe
scas
stc
and
aas
movsl
jno
das
jp
xchg
jmp
cli
je
dec
insb
rorl
sbb
das
aaa
inc
lock
mov
or
rclb
inc
pop
push
iret
inc
xor
orb
cmp
int
lret
add
je
or
mov
stc
mov
mov
mov
push
pop
add
fbld
in
outsb
imul
cs
pop
rorb
push
sub
xor
std
pop
outsb
lar
pop
lods
xchg
aaa
mov
push
scas
sbb
sub
into
fistl
mov
outsb
inc
test
xor
sbb
int
cmp
xchg
int3
xchg
mov
xchg
out
sub
sub
jns
push
push
mull
fcomps
push
loop
mov
inc
sub
rcll
and
xor
xor
sbb
push
cmc
inc
sub
shr
sbb
icebp
adc
in
fstl
fs
ja
dec
std
in
ret
in
nop
dec
push
push
mov
sub
outsb
push
push
cld
inc
pop
cmc
dec
pop
jnp
mov
call
imul
mov
pushf
lret
mov
xlat
aad
mov
loope
or
cld
mov
sbb
loopne
mov
divl
inc
rcr
dec
ljmp
scas
ret
shll
push
das
jmp
ficoml
mov
fldcw
sbb
mov
jo
aam
outsl
inc
mov
pusha
mov
mov
jecxz
or
adc
rorl
inc
push
outsl
shl
push
fwait
push
clc
add
fistl
and
inc
dec
or
mov
dec
jl
fwait
dec
mov
sbb
rol
xchg
nop
mov
inc
jnp
push
or
dec
outsl
and
mov
jns
lret
inc
add
sub
xchg
popf
inc
in
and
stos
int
push
sub
push
jle
push
sbb
mov
sbb
mov
lret
adc
xchg
out
pop
fwait
roll
es
push
jbe
jb
shlb
and
inc
cmpsb
pop
aam
mov
xchg
out
cmp
cltd
push
insb
in
popf
bound
lock
dec
cmp
or
and
mov
sti
sbb
jne
cmp
pop
mul
inc
fistpl
call
test
mulb
mov
mov
and
test
cmpsb
outsl
mov
dec
pop
cmp
or
adc
insl
and
push
out
mov
movb
push
daa
clc
sub
pminub
jge
xchg
movsl
lcall
xchg
enter
cld
inc
mov
push
pushf
xor
lods
xchg
data16
push
push
nop
pop
cwtl
fs
fadd
push
jb
cmpsb
fildll
das
cli
out
jb
xor
jbe
js
es
pop
movsb
fimull
pop
ret
rorb
xacquire
shll
jg
add
jae
pop
int3
fistps
popa
mov
loopne
add
gs
test
scas
dec
xor
test
mov
aad
stos
ja
mov
notl
jp
xchg
es
lea
lahf
cmc
das
into
push
out
adc
orl
lret
xchg
sub
and
addr16
inc
mov
xchg
div
mov
das
addl
insb
pushf
divps
mov
fcoml
mov
cltd
or
fs
insl
mov
jae
and
mov
mov
gs
test
mov
sub
cmp
mov
int
clc
and
push
push
outsb
dec
push
in
cmp
popf
aad
mov
sarb
popa
imul
pop
sub
mov
mov
jecxz
xorl
jg
ret
iret
fsubrs
mov
dec
ret
fisubrs
push
ret
xchg
fildll
adc
ss
and
fnsave
push
push
mov
out
popa
inc
movsl
call
mov
jl
stc
rcrl
stos
and
push
mov
iret
sbb
je
nop
fildl
and
scas
out
popa
pushf
dec
test
jle
int
mov
xchg
fstl
pushf
rcr
clc
cs
sub
lds
repz
xchg
sbb
in
mov
test
ret
add
je,pn
int
sbb
cs
sub
add
shll
cmpsb
in
shlb
push
into
cltd
jl
and
outsl
in
scas
sub
jp
or
ljmp
popa
pop
dec
adc
jecxz
mov
mov
jmp
movsl
lods
mov
pop
add
dec
and
pop
decb
ja
nop
sbb
es
add
jo
add
and
pop
insb
xchg
and
mov
push
js
xchg
inc
adc
fidivl
out
shll
dec
ds
and
mov
sbb
fwait
sbb
add
not
jne
in
stc
andl
clc
jo
mov
popf
sub
pop
cltd
adc
loope
xchg
jle
dec
das
dec
jne
movl
lods
push
and
jecxz
dec
add
bound
decl
mov
cmc
dec
sbb
pop
in
mov
add
jge
loop
inc
inc
xchg
sub
insb
add
pop
daa
xlat
out
lahf
push
outsb
loopne
mov
cld
data16
call
cmp
cs
sub
fld
enter
and
das
repnz
cs
dec
cmpsl
int3
movsb
jp
cmp
push
sub
xor
xchg
cmpsb
flds
pop
icebp
xor
pop
mov
xor
dec
clc
add
scas
mov
mov
xorl
mov
call
dec
scas
hlt
shl
aam
pop
sub
xchg
mov
inc
and
sbb
test
cld
outsb
adc
leave
jge
outsl
mov
test
jmp
add
icebp
and
fisttps
cmpsb
pop
adc
mov
xlat
xchg
ljmp
enter
lods
iret
lock
pop
pushf
xor
std
jbe
xor
push
rol
insb
das
mov
push
pop
pop
inc
scas
inc
mov
bound
xchg
mov
rol
jge
pop
jl
scas
aaa
in
jo
pop
lahf
push
mov
rcll
xor
std
andb
sti
lret
fisubrl
mov
push
push
and
mov
ljmp
fcomps
fsubs
lea
dec
test
pop
repz
fldcw
clc
sbb
pushf
loope
mov
insl
jl
ret
or
loop
add
lea
les
je
xchg
mov
call
ret
mov
dec
je
mov
jge
pop
test
mov
cmc
ja
inc
ret
sbb
aad
xchg
stos
inc
mov
ret
inc
inc
stc
inc
adc
and
sarb
mov
fsubrl
addl
xchg
pminsw
sub
rolb
in
push
inc
pop
and
mov
pop
mov
xchg
mov
cmp
loop
out
mov
add
or
jge
stos
incb
cs
loope
es
xor
push
and
ret
and
mov
dec
xchg
adc
lcall
rol
loope
add
xchg
test
mov
insl
sub
leave
imul
pop
xchg
dec
enter
xor
ret
sub
sbb
add
add
push
adc
dec
and
loop
inc
aam
inc
fcomip
mov
xchg
shll
jl
pop
ljmp
cmpsl
xchg
xchg
jno
pop
jb
pop
jl
mov
hlt
inc
xchg
mov
loopne
sub
mov
mov
aad
pop
pop
jae
loopne
adc
pop
imul
pushf
xchg
subb
jl
and
scas
popf
push
push
jbe
mov
fcmovb
jl
andl
xor
ror
insb
ficoml
inc
sub
and
add
pop
add
aam
jmp
test
ficoml
and
scas
inc
into
aaa
mov
das
ljmp
xchg
and
sub
pop
test
in
scas
pop
enter
dec
or
insb
xchg
pop
cmp
test
add
jmp
data16
cmpl
adcb
inc
push
movsl
mov
roll
mov
dec
jo,pt
add
mov
rcrb
mov
nop
in
cmc
rclb
cmp
inc
cmpsb
repz
fdivl
nop
inc
popf
cmp
mov
das
dec
in
adc
jl
outsb
lret
in
pushf
pop
pop
dec
pop
jle
adc
add
sub
mov
mov
fwait
or
mov
jb
xchg
push
cli
push
mov
xor
pushf
bound
or
dec
lea
mov
xor
push
fnstenvs
fs
sub
lock
adc
in
xor
dec
adc
lods
cmp
mov
inc
adc
sub
stos
cmp
in
lret
mov
mov
shll
sub
sahf
movl
push
and
fldl
mov
jecxz
hlt
mov
jb
sub
cmp
sbb
pop
jb
ds
push
inc
es
mov
jb
mov
lds
fcmove
and
push
mov
mov
mov
adc
xchg
mov
lea
sub
xchg
je
fimuls
sbb
imul
es
int3
lret
int
adc
push
fwait
pop
or
jge
ja
cltd
inc
es
stos
shlb
out
testl
push
cmpsb
roll
loop
test
rclb
in
dec
jmp
cmp
or
gs
std
jp
adc
pop
sub
cmp
cli
outsb
mov
fisubrl
pop
push
scas
dec
shlb
xchg
data16
inc
dec
cmp
add
xor
add
jb
shll
mov
and
and
scas
xor
int3
enter
adc
in
inc
cmp
ja
and
jae
ret
xchg
enter
orl
divb
cmp
mov
shrl
fidivrs
mov
fldt
or
push
je
xchg
or
xor
or
inc
sar
icebp
pop
fisubl
ret
jmp
or
clc
dec
inc
cmp
into
push
or
cli
test
icebp
xchg
cmp
divl
push
cmp
aaa
mov
fisubrs
inc
push
mov
cmp
pop
in
loop
cmc
adc
mov
lahf
nop
fisubs
fldcw
mov
mov
cmp
aad
aam
loope
adc
mov
xchg
addr16
pop
adc
loop
push
int
out
xor
pop
sbb
cld
mov
daa
cmpsb
popa
fidivrl
cltd
mov
jge
xor
or
lahf
sarb
or
xor
inc
xchg
adcl
sbb
jo
loop
dec
scas
sub
out
xchg
fdivl
pushf
and
int3
adc
icebp
fidivs
mov
imul
enter
insb
xor
xchg
fsubrl
popf
in
lcall
test
imul
sarl
stos
insl
cmp
outsl
rsqrtps
in
sbb
movsb
jmp
dec
jl
mov
mov
cmpl
inc
rcrb
sub
lret
and
cmp
sub
outsl
fwait
movsb
icebp
pop
pusha
pop
fnstcw
jle
or
cwtl
sub
repnz
rclb
jecxz
add
mov
sbb
sbb
xchg
xorb
fistl
and
sbb
sub
cli
pop
inc
adc
test
cwtl
fwait
sub
lea
insl
ds
rolb
jmp
xchg
dec
mov
inc
out
test
push
mov
in
xchg
add
movsl
sub
mov
mov
test
scas
inc
shll
sbb
pop
cmp
fs
xchg
mov
add
jmp
cld
pusha
or
mov
adc
in
loope
mov
lods
adc
js
divl
add
push
add
iret
ljmp
xchg
adc
pushf
ja
mov
xchg
icebp
add
les
in
mov
or
pop
sahf
cmp
inc
mov
mov
stos
inc
mov
dec
mov
pop
out
inc
and
notl
xor
data16
mov
aad
dec
sbb
pop
imul
nop
sarl
add
je
mov
mov
outsl
cmpsb
cmp
dec
aam
and
cmpb
add
fimuls
mov
xchg
lahf
roll
daa
jb
sub
les
loope
les
imul
sub
cmp
add
mov
xchg
mov
rolb
cli
and
xor
mov
data16
mov
repnz
pop
in
outsl
push
jle
and
push
cmpsl
add
mov
or
xchg
sbb
shrb
push
or
in
mov
xchg
lods
push
stos
xor
xchg
xchg
and
out
mov
mov
jp
inc
insb
fs
test
xor
dec
mov
fwait
and
rcrb
out
mov
mov
arpl
jne
mov
stc
jb
in
test
mov
subl
sbb
xchg
aam
loope
push
arpl
scas
inc
loop
push
stos
scas
mov
ds
and
mov
or
mov
push
push
mov
xlat
pop
inc
dec
xchg
aas
insl
stc
and
stos
in
mov
fldt
mov
aad
aad
add
mov
dec
popf
sbb
fistps
ror
sbb
and
xchg
mov
cmpsb
out
insl
adc
or
inc
mov
bnd
xchg
jnp
cmp
jecxz
out
and
xchg
jae
mov
sti
mov
adc
dec
mul
jne
xchg
ret
mov
into
insl
dec
sub
pop
push
test
jnp
adc
cmpsl
ret
xlat
mov
jmp
mov
jo
pop
push
sub
xor
popf
pop
sub
inc
je
push
lcall
jae
fcompl
sub
cwtl
gs
filds
aaa
xchg
inc
mov
push
bound
fwait
in
add
lods
or
push
inc
push
push
popl
fucom
stc
test
cmp
je
mov
bound
xor
adc
mov
jbe
lret
push
mov
mov
das
and
iret
test
push
or
push
aam
out
and
xor
sti
add
rolb
leave
and
and
jo
sti
je
inc
and
mov
sarl
outsb
dec
pop
adc
jnp
xor
push
jmp
xor
mov
mov
push
push
into
lcall
jg
and
sarl
stc
aam
push
xchg
mov
into
sub
mov
js
ja
xchg
mov
pop
sub
cmc
mov
sub
icebp
xor
aaa
xchg
testl
mov
xor
bnd
lds
sub
sbb
adc
mov
aad
pop
clc
push
jle
lahf
gs
dec
cmp
ds
jl
into
jne
aaa
xor
xchg
aaa
or
rcr
addr16
loop
mov
xor
repz
and
push
cltd
mov
adc
rcrl
inc
inc
in
fisubrl
push
xor
jbe
jbe
mov
enter
and
sub
shlb
jne
mov
cmpsl
mov
call
pop
pop
mov
sbbl
add
das
cmp
cmc
pop
xor
inc
jg,pn
or
add
pop
jno
icebp
mov
iret
inc
std
pop
je
addb
js
cli
jp
jmp
iret
dec
fs
sbb
stos
popf
mov
xchg
and
mov
repz
inc
shrl
cmpsl
mov
mov
and
iret
pop
jg
or
testl
fisttps
aaa
int3
orb
adc
jne
pop
ret
dec
fstpt
inc
adc
xor
sub
pop
leave
mov
jnp
ret
cmovns
pop
cld
rolb
fs
orl
jbe
dec
xchg
js
jp
and
mov
imul
pop
inc
sbb
stos
lcall
mov
movsb
es
sbb
mov
les
mov
sub
sbb
fsubs
bound
cmc
sbb
cld
mov
out
mov
ret
sbb
lock
dec
xor
add
mov
stc
mov
push
xchg
xchg
test
fwait
cmpl
in
pop
pusha
movsl
test
je
roll
in
jb
mov
cmpsb
ljmp
jle
cmp
add
movb
jl
mov
call
jns
mov
or
dec
repnz
dec
rolb
jnp
fcoml
add
insb
test
pop
dec
cmp
int3
test
sar
aaa
and
sbb
lea
xchg
push
mov
xchg
inc
push
sub
dec
fisttps
adc
cmp
iret
cmc
xchg
enter
xlat
test
in
push
out
fcomps
or
mov
jmp
bound
ja
seto
or
pop
inc
ja
xchg
movsl
ret
xchg
out
mov
mov
inc
xchg
data16
insb
inc
shlb
mov
aad
dec
into
sarl
fisubrs
and
insl
or
cltd
pop
cs
out
mov
inc
icebp
mov
insb
mov
mov
sti
sbb
aaa
mov
lock
rorl
in
pop
pop
lcall
push
scas
push
into
inc
rolb
enter
lock
adc
cmp
xchg
loop
into
push
icebp
jo
test
push
jb
cmpsb
pop
stos
je
lret
sub
xchg
mov
jb
mov
cmp
ret
and
pop
icebp
pop
add
lret
jne
mov
ret
fimull
addb
pushf
pop
sbb
arpl
scas
rorl
inc
repz
jnp
pushf
in
mov
into
aaa
mov
bound
std
sub
icebp
mov
inc
lret
lahf
ficompl
es
lock
fsubl
mov
mov
cmc
pop
sahf
rcrl
dec
sahf
loop
push
xchg
leave
into
in
loope
jb
or
scas
pop
je
ss
jg
ret
movsb
pop
inc
and
test
outsb
out
fstp
inc
mov
push
xchg
pop
xlat
fwait
ss
push
pop
repnz
mov
ja
mov
jge
aam
push
outsb
mov
scas
adc
or
imulb
jnp
mov
rcr
out
into
and
dec
xor
ljmp
cli
inc
cmp
imulb
lods
insl
mov
lret
xchg
clc
repnz
aam
out
mov
lahf
mov
and
adc
fsubs
sahf
mov
jno
cld
inc
std
cmp
inc
ja
je
sbb
lods
icebp
xor
cmc
je
js
sub
inc
and
cld
iret
mov
mov
or
sub
jo
icebp
loope
fsubrl
iret
xor
and
inc
add
lret
js
mov
ljmp
xchg
push
andl
sbb
mov
inc
fildl
mov
push
cmpsl
dec
pop
test
data16
inc
mov
repz
stos
mov
jnp
jle
jae
mov
std
sti
adc
lea
jl
dec
and
gs
sahf
pop
xlat
xchg
xor
fs
or
jp
je
mov
sub
mov
out
les
inc
shlb
inc
pop
in
movb
dec
inc
or
pushf
insb
mov
pop
ret
xor
add
leave
pop
mov
cli
andb
cltd
mov
or
lea
mov
push
inc
mov
dec
jp
das
inc
mov
push
mov
dec
jbe
mov
push
sub
mov
add
test
lret
fwait
jo
jno
xor
xchg
or
pushf
push
ljmp
scas
inc
push
mov
push
mov
daa
out
loopne
test
sub
push
popf
mov
inc
insl
es
add
or
sbb
hlt
cli
lahf
pusha
sub
shlb
cmp
mov
stc
xchg
inc
fmuls
sbb
lahf
out
push
ret
bound
xchg
idivl
adc
jbe
sub
shll
shl
jno
bound
ret
jno
inc
rclb
add
andb
addr16
jo
xchg
lret
fildll
mov
or
outsl
xor
mov
mov
out
addb
mov
mov
pusha
lds
test
pop
in
xchg
sbb
imul
fwait
jae
je
repz
imul
jg
add
std
insb
test
sarl
mov
rorb
mov
add
popf
outsl
mov
mov
jmp
pusha
pop
enter
or
pop
movb
dec
les
push
loopne
mov
out
lds
push
mov
mov
mov
pop
push
inc
sbb
push
and
push
push
xlat
out
test
pusha
mov
xchg
adc
in
mov
sub
or
mov
stos
push
sub
add
stos
jne
inc
lcall
test
xchg
sub
insb
loop
xchg
mov
xchg
mov
sub
ret
stc
push
lret
jmp
addl
push
cld
movsl
mov
rolb
mov
mov
enter
daa
shlb
mov
lods
push
cmpsb
push
cli
shrb
loop
rorl
jl
lds
sti
xchg
sahf
nop
into
inc
mov
lods
scas
pushf
pop
out
in
jecxz
push
mov
stos
xor
test
sbb
pop
sbb
outsb
add
xchg
sub
mov
xchg
sti
push
addl
cmc
imul
popf
lods
xchg
daa
sahf
in
lock
dec
jno
xchg
bound
out
mov
sbb
pop
xor
cmpsl
jle
cltd
adc
hlt
int3
add
pop
ja
out
mov
push
rorl
into
mov
in
pop
and
lret
push
pop
jmp
addb
es
mov
je
and
loope
sub
jnp
and
data16
mov
mov
cwtl
adc
arpl
inc
inc
aas
js
sbb
jge
pop
jmp
sti
xrelease
scas
scas
mov
mov
aaa
loopne
outsb
test
cmp
es
ret
inc
inc
mov
popa
push
cli
inc
jb
outsl
rep
sbb
jecxz
xchg
sbbl
lret
cmp
mov
xchg
xor
ret
mov
pop
xchg
stos
jo
adc
call
bound
dec
adc
test
outsb
test
or
jge
or
movsl
mov
jp
xor
subl
out
mov
push
mov
data16
movb
popa
xor
imul
mov
addl
test
pop
in
pop
out
add
sub
cmpsb
adc
xor
cmp
test
enter
pushf
xchg
push
in
out
mov
incl
dec
jo
mov
and
mov
frstpm(287
push
and
test
pop
or
mov
cmp
inc
mull
cltd
mov
popf
xchg
fs
cmpl
sbb
cmp
dec
dec
xchg
mov
repnz
mov
out
out
fld
sub
xor
shrl
decl
stos
stos
and
add
cmovne
sbb
fbld
int3
test
loop
jo
shl
fld
mov
sti
xchg
mov
jno
mov
rclb
xchg
notb
std
sub
insb
outsb
arpl
push
scas
jl
lods
dec
adc
pop
dec
push
movb
mov
cmc
xchg
rcll
sti
sbb
inc
jmp
add
stc
aaa
jl
sahf
jns
enter
shr
gs
push
pop
stos
mov
inc
nop
jbe
and
add
push
push
xlat
dec
add
aaa
sub
mov
add
pop
jl
mov
aad
je
into
clc
xchg
divb
mov
out
add
mov
xlat
inc
inc
in
xor
sbb
mov
jne
xor
cmpsb
daa
imul
inc
lods
jl
sti
sbb
lret
adc
jns
sub
xor
push
jmp
cwtl
dec
test
add
gs
and
adcb
out
test
push
cli
mov
arpl
int3
mov
sub
dec
xchg
sub
sub
cmp
adc
fists
xor
sub
loopne
mov
stc
aas
ja
cmp
mov
loopw
pop
adc
les
popa
sbb
testb
dec
lock
fldcw
lock
loopne
test
ret
jo
and
or
inc
insb
int3
out
out
cmpb
or
ret
sub
jg
ss
daa
in
frstor
lahf
xchg
xchg
pusha
das
aaa
lret
loopne
sub
jp
sub
adc
push
ljmp
ja
subb
call
mov
add
jne
cltd
add
cmpsb
std
fidivrl
jg
inc
jbe
shrl
fidivrs
xor
jge
test
inc
or
scas
push
and
and
inc
mov
out
aaa
les
mov
loopne
repz
add
lahf
cmp
jnp
push
add
loope
mov
and
sub
jne
push
aad
xchg
add
mov
scas
hlt
jmp
shrw
and
mulb
pop
jno
shl
xlat
shll
mov
mov
ja
int3
inc
mov
icebp
stc
xor
adcb
stos
test
adc
imul
sub
test
pop
loopne
jbe
shr
popa
dec
xchg
je
insl
push
aad
mov
cmp
scas
mov
movsb
and
sub
mov
pop
in
ja
pusha
pop
fdivrs
cmpsl
mov
nop
adc
outsl
xor
mov
cwtl
movsl
inc
mov
push
fs
dec
cmp
sbb
sahf
jnp
cmp
cmc
xorb
test
stos
shr
aam
inc
xchg
ror
fnstenv
out
inc
cli
xor
or
adc
test
pop
jp
xlat
adc
mov
xchg
push
cmp
sbb
out
movsl
sbb
jle
dec
pop
lret
loop
inc
push
fnstcw
inc
sbb
add
add
rorl
sarb
and
xlat
pop
jecxz
imul
jmp
xor
sbb
movsl
loopne
movsl
jecxz
xchg
adc
fisubrs
xchg
pop
lret
push
jl
sbb
jl
mov
push
ss
stos
insb
aas
cmp
mov
loope
mov
mov
inc
das
xchg
shr
jl
enter
out
fisttpll
imul
rorb
sub
mov
lcall
xor
jo
outsb
lds
shlb
fldl
out
push
jmp
mov
and
shll
mov
fildl
pop
movsb
roll
push
sti
cmp
sub
mov
dec
pop
push
push
aad
cmpsb
ret
or
clc
cmc
pop
xor
sbb
mov
insl
xchg
pop
push
sub
push
repz
std
arpl
push
and
pop
mov
mov
add
mov
xlat
mov
shrb
cwtl
aam
ds
xorb
jecxz
xlat
ret
inc
ljmp
hlt
jb
out
push
cs
cmc
es
jp
pop
inc
push
mov
js
ret
mov
les
in
lcall
mov
cmp
test
mov
and
jne
std
mov
nop
push
ljmp
push
jmp
jbe
inc
push
arpl
jb
call
adc
lds
sbbb
pushf
adc
out
xor
cmpl
and
daa
popa
mov
mov
pop
test
pusha
xchg
jg
jge
ret
mov
add
imul
lds
or
aam
in
xadd
lret
dec
inc
mov
scas
mov
and
dec
cmp
shll
xor
cmc
sbbb
testl
iret
pop
sbb
mov
pop
lods
and
dec
sbb
jle
cmp
and
push
insb
aas
mov
sub
xchg
add
push
dec
or
out
dec
popf
add
cmp
jecxz
xchg
lock
push
mov
imul
scas
mov
mov
popf
lret
decb
mov
and
outsl
loope
jecxz
sbb
cmpsb
ds
add
mov
pop
add
inc
insl
nop
sub
loope
loop
push
test
or
lahf
mov
jl
loopne
jg
and
mov
outsb
push
pusha
inc
sub
loope
test
xchg
add
dec
arpl
dec
or
push
mov
lret
xorl
lcall
push
mov
pop
leave
jp
xor
pusha
arpl
add
cmp
repnz
xchg
shrl
aaa
loop
ret
test
cmpsl
outsb
jle
jl
add
inc
push
adc
mov
lea
cmpsl
andb
mov
lock
adc
pop
cmp
fistpll
imul
daa
mov
aaa
loopne
mov
mov
insl
pop
and
mov
push
xchg
sahf
inc
jb
je
fwait
bound
mov
in
test
cld
adc
fists
rorb
in
repnz
sti
loopew
das
sbb
xchg
and
and
call
hlt
and
pop
pop
push
sbb
push
mov
stc
sub
pop
lock
inc
jo
sub
das
addb
fsubr
mov
xor
mov
lahf
test
xchg
mov
add
in
jg
test
call
or
and
sarl
mov
inc
mov
scas
mov
jle
mov
mov
cmp
inc
icebp
loope
push
add
mov
xchg
cmp
add
in
lds
mov
into
int
xchg
pop
xchg
out
or
aaa
mov
and
lods
push
adc
mov
rcrl
outsb
push
pop
sub
xor
insl
mov
lret
pop
jo
mov
out
sub
sub
inc
add
add
xchg
sbb
sub
or
jl
dec
iret
dec
or
push
pop
mov
inc
dec
adc
flds
rcll
sub
and
cwtl
xchg
cmp
jge
clc
push
sbb
loop
mov
jnp
pop
push
inc
xchg
pushf
dec
jb
iret
dec
jno
xorl
sub
and
mov
lahf
dec
jno
ret
stos
add
jecxz
dec
pop
jle
test
fildll
mov
xor
adc
xchg
fs
shll
mov
ja
xchg
test
ja
push
pop
out
mov
adc
xchg
shl
jns
jge
lods
cmp
mov
cmp
and
cmpsl
add
lret
cmp
icebp
dec
or
push
addl
mov
xchg
adcl
pop
and
shrb
inc
stc
nop
mov
fimuls
sti
arpl
cmp
xchg
test
aaa
adc
aas
and
aam
adc
cmp
jno
pop
mov
fistpll
lcall
pop
and
push
scas
scas
fs
sbb
aas
sbb
out
add
out
pop
mov
xchg
dec
sbb
inc
push
scas
ja
loop
insb
xlat
fdivl
addr16
mov
sbb
enter
ja
pushf
movsl
mov
mov
sbb
xchg
push
cmp
mov
ljmp
jge
sbb
stos
sbb
into
pop
pop
adc
add
pop
push
lcall
rorl
inc
adc
jmp
adc
dec
mov
pop
loopne
into
rorl
and
push
xor
pusha
pop
xor
adc
popf
push
and
sbb
add
mov
push
iret
cwtl
popa
imul
adc
adc
mov
push
filds
mov
rcl
js
mov
lods
cs
pop
std
aas
ljmp
fists
and
ja
sbb
inc
and
daa
jae
mov
pop
xor
xchg
mov
sahf
sarl
pusha
das
jae
mov
fiadds
cmp
outsl
js
pop
jmp
sub
aaa
dec
leave
sub
xorb
or
push
xchg
cmp
push
cmp
push
insb
fsub
push
cmp
mov
sub
sbb
js
in
roll
add
inc
cwtl
and
stos
jo
aaa
rcll
nop
add
rcll
daa
xor
jecxz
add
mov
shl
push
insb
pop
xor
mov
xchg
cmpsl
mov
and
add
xlat
ret
fwait
scas
adc
xchg
jmp
mov
jl
mov
cmpsl
add
flds
fwait
mov
jne
out
ds
mov
push
repnz
sbb
daa
and
sub
push
push
xor
xlat
jo
cmp
sub
mov
fdiv
lods
mov
cmc
sub
push
std
in
adc
inc
push
lret
lods
daa
dec
cmp
jle
pop
xchg
mov
repnz
sbb
pop
mov
push
inc
int
pop
pushf
cmp
push
fidivs
scas
ljmp
push
mov
jle
and
cmp
jnp
clc
cmp
sub
fimuls
test
addl
imul
cmp
mov
fdivrl
ljmp
dec
jo
filds
lds
jmp
ret
pop
adc
and
es
fimuls
leave
or
imul
leave
sub
mov
notb
cmp
fdivp
ljmp
rcll
dec
test
jmp
jle
mov
das
add
push
les
mov
imul
sub
pop
fdiv
push
jmp
mov
xchg
jp
jno
aad
push
pushf
call
mov
push
xchg
mov
mov
imul
push
pop
imul
gs
mov
adc
and
mov
dec
loopne
dec
sbb
jle
insb
into
enter
pop
push
xchg
mov
clc
daa
jb
in
aam
cmp
cmpsl
xor
pop
test
jmp
inc
mov
addr16
mov
into
aam
int3
adc
es
xchg
sbb
mov
jecxz
pop
and
ljmp
decl
lods
add
in
lods
jo
jg
mov
dec
lds
push
in
sahf
xor
aam
mov
rcl
scas
in
mov
push
push
ds
nop
unpckhps
jo
sbb
push
cs
sbb
sub
cmp
xchg
sbb
stc
cli
jp
xor
jle,pn
movsb
divl
cld
jo
mov
fstl
adcb
fsubl
enter
jb
push
dec
mov
mov
or
inc
mov
mov
in
pop
arpl
lock
out
sbb
xlat
xchg
dec
pushf
xchg
les
jle
enter
dec
scas
xchg
je
cmc
xor
jo
xor
cmpsb
loop
mov
mov
jbe
add
sbb
mov
fneni(8087
xchg
xchg
shl
sub
repz
lret
jp
mov
or
pop
mov
lods
cmp
xor
jg
add
pusha
cli
sub
cli
inc
ljmp
inc
jbe
inc
ja
fbstp
das
push
mov
cld
ljmp
mov
std
lret
iret
imul
arpl
les
cmpsb
pusha
jl
test
cltd
inc
jns
shl
push
movsb
pop
stos
mov
dec
pop
adc
pop
xchg
mov
imul
hlt
aas
add
xor
cld
xor
inc
pop
je
or
jl
cwtl
sbb
mov
loop
sbb
add
cmpsb
xchg
xchg
xchg
sahf
stc
adc
test
add
and
lret
xor
fwait
loopne
cld
out
and
aas
int
fisubrl
jns
jo
xchg
insl
into
jae
mov
pop
add
lret
ljmp
cmc
outsl
add
adc
in
push
js
ret
dec
mov
pusha
dec
adc
loop
add
xor
pusha
mov
dec
aas
push
ret
sub
in
sbb
mov
push
mov
imul
lea
insb
inc
sbb
mov
jecxz
xchg
shl
add
inc
jno
sbb
pop
dec
orl
ljmp
inc
inc
mov
push
cs
wrmsr
inc
mov
xor
ret
arpl
adc
repnz
iret
test
call
je
sbb
or
xchg
subl
out
or
mov
push
mov
stc
leave
adc
jmp
mulb
mov
fs
es
pushf
xchg
pop
bound
arpl
lahf
nop
shr
nop
dec
jae
aaa
insb
sahf
dec
cs
or
push
ret
mov
add
xchg
scas
push
xchg
dec
pop
mov
xor
lods
nop
pop
xorb
mov
js
subl
pop
mov
outsl
adc
pop
test
cmp
or
loope
mov
ljmp
in
xchg
lock
inc
push
hlt
mov
dec
mov
imul
jns
mov
fs
js
idivb
pop
into
push
iret
ficoml
pop
mov
pusha
pop
add
bnd
mov
mov
das
mov
ret
icebp
pop
sar
xchg
and
nop
repnz
pusha
sub
pop
les
xchg
test
in
and
inc
imul
mov
xor
mov
subb
lcall
andb
or
out
xor
inc
push
outsb
push
xor
lahf
fiadds
repz
xchg
js
dec
cmpsb
xchg
dec
lret
rcll
dec
lahf
out
jno
push
sbb
hlt
icebp
mov
mov
js
imul
daa
xor
sub
push
jae
lret
cli
in
or
les
pop
frstor
mov
mov
bound
cltd
and
sbb
xor
mov
or
xor
lcall
sub
mov
loopne
shr
and
push
ret
push
push
push
jae
out
or
repnz
ss
movb
mov
add
ret
cmpsl
lahf
out
repnz
scas
lcall
jbe,pt
fidivl
aam
movsb
push
cmp
cwtl
jbe
push
or
jae
or
fdiv
loop
mov
pop
fwait
sbbl
bound
push
int
xchg
loope
ja
jecxz
into
sub
sub
loop
enter
pusha
xchg
xor
ss
sbb
mov
add
lods
shl
rcl
int3
dec
xor
mov
pop
lahf
ds
addr16
shll
cld
mov
add
lahf
das
sbb
call
push
into
push
xrelease
inc
cmp
fsubrl
and
cmp
stc
jno
sarl
cvtps2pi
les
repz
add
scas
and
loop
mov
jp
lods
addr16
xchg
das
inc
sti
scas
in
pushf
pushf
push
lcall
push
stos
sbb
sub
sahf
dec
pop
ss
push
or
xlat
divb
pop
inc
rcrl
in
jle
mov
cmp
nop
pop
and
mov
xlat
push
sbbb
in
pop
or
mov
xor
add
dec
sahf
xchg
and
inc
cmp
push
sarb
jle
bound
inc
mov
mov
push
pop
int3
and
scas
leave
sub
and
ds
lods
xor
mov
aad
icebp
bswap
pushf
out
jae
fdivp
dec
pushf
cmp
lahf
in
aas
aam
inc
cmp
es
jb
xchg
jg
stc
push
ljmp
sbb
mov
orl
inc
mov
jo
leave
ret
or
sbb
daa
jb
push
push
xchg
push
dec
xor
popf
mov
aam
dec
popl
lods
jb
xchg
xchg
pop
sbb
mov
dec
inc
int3
prefetch
jns
push
iret
inc
sub
pop
jge
shlb
xor
cmpsl
or
jns
xor
aas
add
pop
push
addb
jmp
pop
in
cmp
repnz
xchg
mov
mov
or
xchg
dec
inc
nop
inc
fmuls
das
add
pop
fildll
adc
popf
cltd
sti
mov
pop
cmpsl
cli
and
scas
je
mov
dec
nop
sbb
das
pop
cmp
mov
xrelease
inc
mov
sub
push
pushf
jno
jmp
lahf
sarl
inc
xor
adc
movsb
xor
xor
repz
cmp
sub
fst
xchg
mov
add
fldenv
lods
push
jmp
cmp
xchg
dec
add
mov
xor
xchg
sbb
das
ficompl
daa
adc
xchg
pop
push
in
sub
lock
and
test
sub
cld
fs
pop
xor
add
out
add
xor
daa
add
push
and
push
pop
and
pop
mov
ret
std
xor
mov
sbb
add
pop
mov
in
add
call
xor
add
jb
ficompl
or
jp
dec
sbb
cltd
mov
mov
push
rorb
pop
xchg
sbb
mov
push
das
imul
adc
lock
pop
clc
pop
dec
xchg
sub
dec
push
jg
and
addr16
and
mulb
xchg
stos
mov
xchg
jl
mov
mov
push
or
add
fs
pop
jae
repnz
cmp
jo
cmp
cmp
pop
push
xor
and
cwtl
adc
cmp
jne
mov
mov
xor
jle
dec
in
jo
jns
pop
fistpll
cmp
mov
movsl
cltd
sti
sbb
sub
push
andl
shrl
mov
mov
int3
add
fisubs
pop
or
cld
mov
mov
sbb
dec
ljmp
cwtl
bound
nop
mov
cmc
ret
std
or
push
sbb
and
decb
and
or
fiadds
sub
loop
mov
popf
stc
lret
nop
add
mov
cwtl
pop
imul
inc
imul
in
jmp
icebp
subb
push
dec
push
pop
jecxz
mov
out
lret
fbld
lock
push
decb
iret
xchg
add
stos
inc
stos
cmp
pop
aad
cmc
imul
mov
push
mov
lret
pusha
mov
jl
and
sub
cli
mov
or
insl
or
fmuls
cmp
popa
ret
mov
std
xchg
inc
lock
adc
int3
test
lret
push
lcall
sbb
ret
xlat
inc
movsb
outsl
call
sbb
lret
xchg
and
lret
cs
cli
test
mov
mov
or
frstor
mov
inc
add
push
in
sbbl
jmp
sbb
add
dec
mov
pop
jp
push
push
fwait
pop
stos
dec
pop
mov
inc
jo
add
in
pop
mov
rcll
cmp
jge
dec
push
add
cmp
xchg
pop
aas
mov
lret
xor
xor
jno
or
rcrb
mov
push
mov
sub
or
jle
pop
adc
or
lock
outsl
orb
call
push
and
stos
mov
es
jbe
mov
out
orl
jno
sarl
inc
lcall
mov
stos
mov
add
das
mov
or
add
jne
jge
or
pop
dec
leave
jo
aaa
es
icebp
push
dec
sahf
lcall
ret
inc
lcall
sub
int3
pop
gs
rcll
sbb
push
aas
insl
das
aas
mov
add
push
repnz
jb
int
mov
mov
pop
lahf
xchg
adc
jg
jp
in
lret
jmp
or
inc
call
gs
in
add
cmp
mov
je
xchg
xchg
ja
rorl
les
in
and
hlt
dec
loop
sarl
mov
popa
fildll
pop
std
dec
inc
push
jo
andb
mov
popa
dec
call
or
sub
fnstsw
scas
aaa
dec
push
in
inc
sbb
jp
xchg
mov
divl
adc
das
pushf
cli
jmp
repz
test
sarl
aas
cli
jae
xor
add
cmp
pusha
xor
shl
lods
jge
mov
out
sbb
xchg
and
push
jge
mov
std
ret
push
adcb
aad
push
dec
mov
das
out
fisttpll
rol
stc
dec
cmp
mov
and
ljmp
movsl
mov
xor
sahf
icebp
imul
mov
xchg
pop
xor
inc
pop
add
inc
pop
and
ss
lods
lds
or
into
adc
lcall
mov
shll
dec
xchg
or
negb
inc
cmp
repz
push
or
jbe
repz
lcall
negl
das
xchg
iret
ret
sbb
cmpl
repnz
push
bound
and
jbe
fdivrl
push
and
mov
cwtl
xchg
mov
lea
ljmp
adc
test
cs
sahf
cmpl
mov
or
adc
pop
lds
int
jno
mov
or
enter
addb
outsl
mov
aas
in
push
or
inc
sbb
lock
dec
jns
outsl
outsb
dec
insl
dec
mov
stc
push
jge
and
mov
out
popa
cmc
or
mov
inc
imul
xor
into
stc
mov
fcoml
push
js
lds
xchg
mov
jb
cmp
inc
sbb
nop
xchg
xor
jnp
insl
adc
in
icebp
sbb
insl
mov
into
ja
inc
lock
test
jnp
clc
pop
lock
sbb
into
push
shll
imul
jl
mov
mov
cmp
add
mov
dec
mov
iret
aad
cltd
pop
and
dec
pusha
push
mov
roll
orl
cli
mov
cmp
popa
mov
cmp
and
loop
ss
sub
xlat
xor
fwait
cmp
inc
shll
adcl
shl
outsl
add
inc
xor
movsl
leave
mov
ret
mov
shll
jno
out
lods
sahf
aad
test
inc
jb
add
dec
mov
cmp
repnz
sbb
fstps
cli
sar
mov
inc
cmpsb
call
pop
shll
mov
movsl
jl
stos
jno
xchg
fistpll
sub
add
add
out
call
jno
push
pop
cs
mov
iret
inc
and
bound
add
imulb
in
loop
push
push
stos
dec
sub
fs
or
das
cmp
cmpsb
cwtl
aas
cmp
xchg
xchg
das
sub
push
idivb
mov
jl
insl
jns
sub
pushf
mov
icebp
push
mov
lods
xchg
gs
gs
or
mov
loopne
jo
inc
jl
lret
push
shll
mov
aas
jl
mov
adc
push
fwait
add
sbb
loopne
out
pop
cltd
fdivrp
ljmp
cmp
fists
adc
pushl
push
and
outsb
xor
push
xchg
fdivr
pop
test
and
xlat
pop
mov
cmp
mov
inc
lcall
xor
push
cmp
xchg
scas
in
mov
outsl
cmpsb
pop
lahf
push
push
push
cmpsl
mov
cmpsb
push
mov
lods
mov
lahf
scas
adc
xor
pop
pop
in
pop
sub
shl
mov
xor
into
dec
xor
mov
jmp
push
sbb
push
lods
or
cmp
xchg
test
cld
movsl
sahf
and
dec
jbe
lods
lds
sub
loope
mov
lahf
call
mov
pop
xchg
add
ja
sub
icebp
loopne
popa
jecxz
pop
pop
xor
ljmp
or
aad
jnp
or
cld
dec
mov
push
lock
or
pop
mov
push
repz
jno
xchg
inc
push
jo
pusha
sub
cmp
aaa
fistps
xor
mov
xchg
orb
push
out
mov
fidivrl
rclb
jne
inc
mov
fstpl
inc
sub
inc
mov
mov
push
xchg
jb
mov
add
test
dec
loope
xchg
insl
xchg
xchg
xor
xor
xor
in
jg
add
insb
data16
xor
add
xchg
lea
repnz
mov
sbb
lods
jmp
and
push
jae
call
sub
jbe
sahf
sbb
cwtl
jno
mov
pop
jb
rcrl
js
or
and
add
cmp
push
je
addr16
or
mov
loopne
push
mov
inc
mov
push
lret
ss
push
sbb
adc
pop
inc
adc
mov
jnp
or
stc
jns
mov
dec
or
test
std
dec
outsb
inc
outsl
xchg
fistpl
cld
cmp
mulb
adc
mov
repnz
mov
stos
sti
hlt
mov
adc
mov
inc
mov
push
jg
push
daa
and
mov
adc
ret
xchg
pop
fsubrl
mov
xchg
mov
sbb
pop
and
inc
adc
scas
push
rclb
jl
push
icebp
arpl
pop
mov
es
cmp
lahf
stc
and
rcll
movsl
xchg
gs
xor
test
sarb
xchg
frstor
and
xlat
rcrl
xor
inc
push
cmpsb
je
cmp
xchg
outsl
fsubl
mov
xor
add
out
sbb
sub
and
cld
iret
sub
cli
add
cs
mull
pop
fbld
add
pop
or
leave
adc
and
dec
dec
and
or
loop
cld
bound
imul
mov
sbb
xlat
fimuls
gs
dec
xchg
repnz
and
xor
add
fstl
in
inc
push
jp
xor
xor
ds
sub
lock
xorb
add
shrl
ret
sub
addr16
imul
jbe
xchg
or
fistl
cmp
mov
jae
fldt
mov
setne
mov
sub
sub
movb
andb
cs
frstor
inc
inc
cmp
xor
and
push
cltd
nop
cmpsl
scas
jmp
or
or
subl
lahf
dec
xchg
push
rsm
jle
or
inc
ja
mov
fwait
test
sarb
lcall
sbb
or
movsb
shr
cmp
lods
mov
add
inc
cwtl
aaa
push
mov
std
cli
outsb
pop
pop
mov
xchg
and
jae
mov
push
loopne
or
xchg
jne
fildll
xchg
dec
mov
add
andl
jo
pop
and
sub
jns
and
shlb
mov
hlt
test
jge
cmc
insl
je
testl
outsl
mov
daa
pop
mulb
mov
and
push
aas
and
mov
cwtl
xlat
pop
cmp
in
bswap
shlb
jecxz
pusha
dec
cmc
fstpl
das
mov
int3
fldenv
nop
lds
pop
negl
pop
icebp
cmp
jne
aad
jge
daa
mov
shrb
mov
pmaxub
rcrb
movsl
out
and
pop
pop
js
dec
lret
mov
cmp
mov
das
push
data16
roll
jmp
pop
mov
popf
inc
jbe
cmp
sbb
lea
jmp
push
inc
push
and
lahf
push
in
xchg
adc
outsb
icebp
out
mov
cmp
cmc
push
and
fildll
and
mov
in
lret
xchg
or
jne
push
and
lret
xchg
pop
stc
lds
fcmovb
cmp
xchg
mov
repnz
in
cs
pop
scas
bound
lods
inc
ja
inc
dec
in
and
ja
mov
stos
sbb
fldcw
repz
and
ds
xor
sub
push
push
pop
in
lcall
push
mov
jl
xor
xchg
xchg
out
aad
jnp
mov
push
xor
stc
sub
mov
sub
shlb
test
movsb
into
scas
lahf
movsb
loop
jne
push
jb
faddl
popa
inc
dec
add
in
adc
in
inc
xchg
in
ja
jae
sti
mov
lea
or
sub
out
cmp
ret
in
lock
icebp
adc
andl
add
es
mov
stos
es
sub
sub
aad
cmc
push
dec
int
sbb
loopne
add
pop
popa
arpl
pop
sbb
add
pop
mov
adc
and
xchg
enter
mov
adc
mov
lret
xchg
inc
rorb
pop
xchg
sbb
fwait
outsl
popf
mov
aad
xor
fistpl
sbb
mov
adc
mov
jecxz
divl
hlt
mov
mov
aad
add
mov
jmp
mov
das
push
add
ljmp
loopne
shll
mov
stos
in
addb
mov
mov
mov
mov
dec
rclb
and
xchg
or
xchg
xchg
call
sar
inc
pop
sbb
push
fbld
int
andb
repnz
jno
xchg
jne
int3
aam
insl
aaa
movl
add
and
push
in
push
in
mov
jae
pop
sub
lea
inc
mov
pop
popl
testb
add
cs
adc
pop
mov
fwait
xchg
test
sub
nop
mov
pop
push
mov
js
lea
ret
imul
dec
or
mov
mov
dec
adc
fwait
popa
adc
shl
sbb
movsb
test
in
and
sub
loop
mov
shl
xchg
popf
xchg
push
pop
dec
pop
pop
add
out
hlt
pop
insl
mov
adc
fisubrl
and
sub
sub
inc
add
mov
cltd
mov
add
out
jne
cmpsl
les
jge
cmp
fcmove
jno
pop
fwait
insl
lock
loopne
in
dec
ret
sti
pop
xchg
orl
mov
jo
popf
ljmp
push
leave
sub
and
pop
push
and
ficoms
xchg
aaa
cmp
leave
mov
lock
cmp
xchg
xor
je
in
xor
push
iret
outsb
roll
cmpsb
jge
mov
popa
cld
loope
adc
sbbl
xchg
test
push
flds
xor
adc
xchg
aaa
in
sbb
sub
loopne
in
mov
mov
inc
scas
jne
pop
dec
lock
add
stos
stos
xor
lods
into
mov
dec
test
cld
loop
movsb
sbb
out
mov
mov
add
mov
inc
pop
fistpl
clc
outsb
mov
lods
shll
adc
fmulp
fs
sysenter
popf
fwait
pushf
and
xchg
cmp
addr16
test
inc
inc
jo
xchg
xlat
xchg
fistl
aad
ja
xchg
mov
pop
sbb
std
std
and
lret
mov
jnp
xor
cs
jne
adc
bnd
jmp
sub
push
inc
cwtl
test
push
xchg
pop
lcall
mov
in
push
pop
add
test
gs
xorb
or
pop
stc
stc
push
or
in
inc
fdivrl
mov
fwait
xchg
xor
add
jne
add
jne
mov
or
dec
cmp
andb
subl
outsl
lods
pop
int3
jecxz
mov
outsl
ficomps
movsl
push
push
stc
fbld
pop
sub
sub
sbb
inc
hlt
test
pusha
pushf
sbb
pop
xchg
pop
dec
inc
enter
xor
push
std
sbb
push
in
push
in
or
leave
das
ja
ret
shrb
movsl
in
pop
jo
jne
pop
cli
mov
cmp
mov
test
mov
mov
pop
fst
pop
jl
icebp
pop
repz
and
aad
jecxz
xor
imul
dec
inc
aam
xor
pop
test
fst
mov
inc
out
test
sti
add
rorb
frstor
and
andl
mov
std
jmp
inc
popa
gs
jl
and
or
stos
pop
test
cmpb
mov
int3
cltd
ljmp
les
mov
adc
sahf
ljmp
int3
lea
jbe
fnsave
popa
shll
scas
jo
fidivs
dec
mov
mov
adc
jne
push
mov
into
mov
fidivrl
sarb
movsb
je
je
cs
push
out
push
scas
inc
leave
adc
inc
inc
fwait
xor
dec
popa
pushf
repnz
andb
xchg
mov
mov
xchg
mov
and
negl
xor
fsubrs
ds
mov
je
out
cmp
jo
or
gs
ret
cmpb
push
add
scas
clc
scas
adc
push
jle
scas
or
sub
or
pop
fwait
jle
loope
xchg
aas
loope
lcall
mov
push
and
cmp
mov
cmpsb
push
fbstp
cmpsb
leave
ds
ret
cmp
rcrb
jbe
loop
shlb
orb
jl
mov
push
sbb
enter
jp
cmp
add
andl
aas
enter
xchg
lods
mov
int
add
and
cmp
push
lret
addb
mov
orb
cmpsw
and
jae
int3
inc
mov
cmp
icebp
jo,pt
push
xchg
ret
mov
in
adc
sub
jns
clc
adc
and
test
js
popa
or
dec
js
js
arpl
cmpsb
inc
leave
add
inc
jg
fidivs
popa
inc
mov
mov
push
mov
push
movsl
dec
inc
testl
pop
adc
cmpsb
dec
movsl
cmp
sarb
scas
push
jb
add
inc
pop
add
into
mov
bound
sbb
jno
dec
mov
pusha
pop
fst
pop
mov
fimuls
or
xchg
lret
add
xchg
movsb
cmpsl
sub
xor
sub
scas
and
jg
aas
shll
icebp
add
adcb
jle
roll
inc
fcompl
mov
push
mov
adcl
sti
adc
gs
hlt
ret
mov
xchg
fistps
jecxz
fistpl
pusha
mov
and
adc
pushf
outsb
push
inc
push
xor
and
jno
pop
cmp
bound
int
mov
xchg
fidivs
adc
cmc
pop
add
shl
int
bound
leave
add
into
pop
xchg
mov
cli
decb
out
sub
test
out
push
movsl
inc
add
push
or
cld
cmp
lds
dec
pusha
popw
call
dec
cmpsb
insl
xchg
pop
xor
pushf
aam
pop
insl
lods
jo
sub
lods
xor
xor
ljmp
rorl
mov
add
nop
cld
xor
cmc
add
adc
inc
fidivs
xor
adc
out
movsb
push
mov
jne
stos
fwait
mov
aas
pop
pop
mov
xchg
cmove
out
cmp
sub
add
xchg
pusha
jo
xchg
pushf
inc
adc
rsqrtps
and
mov
lods
mov
add
int3
push
sbbl
jno
sahf
jbe
leave
incb
sub
shlb
fidivs
stc
mov
and
mov
xchg
mov
addr16
sbb
jbe
mov
fstpl
sub
jnp
sbb
or
cmc
or
cltd
push
addps
jae
sub
mov
push
dec
xor
adc
shll
je
fcom
out
stc
and
xchg
mov
stc
in
popa
enter
stos
push
cmp
jb
enter
ret
jbe
enter
and
mov
test
pushf
pop
in
adc
and
push
mov
fstps
inc
add
and
repz
or
aaa
dec
rcll
xchg
sti
mul
pop
push
mov
inc
mov
dec
scas
cmpl
push
mov
adc
jmp
or
or
pop
or
push
mov
arpl
das
roll
cmp
stos
dec
addb
movsb
adc
in
aaa
hlt
xor
stos
xchg
and
mov
xchg
add
add
adc
push
dec
push
aas
data16
push
shrb
sbb
inc
fdivs
leave
push
repnz
xor
mov
cmpsl
mov
cmp
pop
lds
rolb
jb
aas
aas
dec
jge
test
xor
adc
pusha
rcrl
or
xor
shrl
aad
loop
hlt
pop
neg
xchg
sar
icebp
cmp
xor
scas
xor
nop
inc
outsl
mov
call
cmp
cmp
inc
jmp
push
sub
pop
fisubl
sbb
push
mov
movsl
clc
pop
sbb
pop
and
and
dec
cmp
aas
int
gs
insl
rcrb
inc
in
adc
aas
jle
xor
lods
cmp
sahf
loop
ficoml
sbb
lahf
leave
addr16
jo
pushl
jo
mov
mov
outsb
or
sbb
push
jnp
xor
mov
add
insb
dec
mov
mov
fdivrp
hlt
mov
mov
sub
outsb
jbe
pop
ljmp
cmp
dec
imul
or
int
aas
jae
add
clc
test
incl
lds
jbe
sbb
sbb
icebp
xchg
sub
idiv
ja
into
test
sub
xchg
shlb
mov
mov
push
adc
loope
fs
ja
add
test
adc
cmovs
sti
daa
sub
adc
imul
lahf
inc
and
and
xor
outsb
das
data16
enter
fistps
hlt
inc
pop
fbld
jp
shrb
xor
cwtl
mov
or
mov
je
push
imul
xchg
cmp
add
cmpsb
xor
cmp
pusha
outsl
gs
movq
push
rorb
jl
push
iret
ficoml
xchg
insl
andb
xchg
and
xor
sbb
push
mov
sbb
inc
push
hlt
or
std
jb
pop
mov
outsb
mov
mov
mov
addr16
bound
cmpsl
mov
hlt
push
mov
mov
xchg
fisubl
mov
mov
movsb
fdiv
cmp
pop
jp
mov
xlat
and
ret
jno
mov
outsl
sub
sbb
mov
mov
lret
push
shlb
out
subb
jno
and
popa
stc
pop
push
inc
jns
scas
cld
fucom
adcb
add
pop
fbstp
mov
aad
dec
ljmp
fcom
nop
sahf
xchg
sub
jg
xchg
mov
fistps
sub
aam
loopne
lahf
sub
addr16
adc
mov
pushl
xor
push
icebp
enter
dec
mov
in
mov
jae
int
xor
and
stc
mov
out
arpl
ss
xor
jo
mov
and
sbb
xchg
std
je
adc
pop
jbe
mov
cmpsb
pop
shrb
mov
inc
iret
mov
pop
cmp
fistpl
mov
push
imul
mov
test
out
adc
sarb
mov
xorl
and
addl
sub
fists
fisttps
into
clc
xorb
xor
lock
ret
shr
jne
testl
and
jp
push
sub
ljmp
or
es
movl
push
xchg
loope
aad
xchg
dec
in
cmp
sub
mov
imul
push
adc
adcb
jp
add
scas
inc
dec
cmp
mov
movsl
lahf
mov
sub
out
ficoml
iret
mov
xchg
pop
iret
fcomps
jle
nop
jns
push
push
and
dec
mov
jl
cld
mov
loop
inc
les
insb
hlt
xor
imul
js
test
inc
dec
push
jnp
and
mov
xor
sub
nop
mov
inc
outsl
xchg
dec
into
lds
jmp
push
pop
mov
xchg
idiv
lock
or
subl
clc
inc
xor
dec
lcall
and
ret
fiaddl
adc
sub
adc
xor
mov
mov
jmp
rclb
add
test
mov
add
iret
or
scas
push
jg
or
pop
es
jg
loopne
push
sti
add
xor
popa
sbb
mov
xchg
ja
rcll
mov
dec
pushf
xchg
gs
insl
push
inc
add
pop
sub
aam
out
orl
leave
inc
cmp
cmp
iret
aaa
pop
mov
dec
cmpsl
cmp
shrb
lret
push
inc
popa
jne
jo
fstl
mov
scas
loop
mov
shrl
add
or
int
add
jbe
scas
lods
xor
jg
test
sub
sbb
pop
push
add
or
sbb
mov
or
mov
movsl
cmc
aaa
outsb
pop
sarb
stos
stc
or
inc
adc
fnstenv
mov
mov
dec
nop
not
lods
jns
xor
sub
repnz
sbb
loop
aaa
in
icebp
jp
dec
test
xor
xor
or
cmp
inc
xor
inc
pop
pop
stc
jno
loopne
out
outsb
rolb
outsb
ror
roll
repnz
lods
fsubrp
addr16
sbb
dec
push
mov
repnz
adc
xor
xchg
xor
cs
mov
scas
dec
das
mov
sbb
add
les
xchg
ds
push
push
or
adc
loop
jge
insl
enter
ret
arpl
cmp
aad
sub
icebp
dec
cmpsb
add
cmc
test
pop
jg
call
sar
jmp
es
mov
add
add
ss
das
data16
cltd
hlt
push
pop
bound
fs
cmp
jle
in
pop
psraw
sub
add
xchg
mov
sbb
jmp
mov
jno
fiaddl
movsl
adc
xor
ret
or
lock
sti
jge
pop
fsubs
test
sbb
or
add
mov
fisubs
pop
and
and
in
dec
push
inc
sbb
sbb
ja
aaa
dec
cli
repz
mov
mov
sarl
adc
fnsave
ds
add
out
fs
jg
adc
fcoms
fcomps
adc
add
pop
xlat
andl
adcl
mov
jno
xor
adc
or
and
sub
xchg
test
mov
ja
in
push
js
cmp
fwait
into
dec
imul
xor
inc
pop
mov
xor
sub
sti
psrlw
clc
filds
jo
push
bound
cmp
mov
lock
sbb
and
jb
jecxz
cwtl
xchg
cmp
push
leave
inc
adcl
enter
jnp
mov
in
push
pop
out
loopne
rorl
dec
loop
aad
push
lock
inc
adc
sbb
xchg
mov
lds
add
mov
mov
fdivs
and
sub
cmp
mov
ja
ret
sub
and
inc
dec
mov
jmp
xchg
cmp
rclb
cmc
adc
mov
mulb
xor
cmpsb
xor
pop
mov
cmp
rolb
test
in
pop
cmp
mov
ja
and
xor
gs
and
scas
xchg
addr16
adcb
add
push
stc
cli
inc
push
lock
ja
pop
repnz
xor
jl
dec
bound
pusha
and
test
fisttpl
loopne
call
pop
repz
inc
ficompl
fsts
jmp
cwtl
cmp
dec
or
mov
lret
ja
and
hlt
cmp
and
lds
popf
repz
and
out
jns
repz
stos
repz
out
sbb
leave
sbb
cld
arpl
shrb
lea
pusha
std
dec
insl
into
jge
add
pslld
outsb
mov
and
cmp
adc
std
mov
dec
mov
inc
fstl
pop
push
dec
std
in
cmp
and
xor
pop
je
scas
dec
out
adc
cwtl
gs
cmp
faddl
imul
pop
data16
fiaddl
mov
dec
les
mov
xchg
inc
sbb
xor
std
and
lock
mov
mov
cmp
mov
ja
inc
subb
movsl
rorl
and
add
ljmp
mov
data16
outsl
mov
mov
adc
mov
pop
outsb
push
in
cmpsb
les
mov
roll
sbb
push
fdivrl
fbstp
push
in
test
mov
sbb
incb
nop
push
ljmp
and
sti
push
mov
jl
jno
inc
or
sbb
sbb
jb
cli
xchg
std
pop
js
push
les
ficomps
out
out
lahf
adc
aas
dec
stc
mov
outsl
outsl
cmp
add
pop
scas
leave
jne
cs
mov
mov
imul
jno
mov
and
jp
xor
lock
jo
nop
ret
pop
adc
sahf
xchg
es
sub
lahf
dec
sub
imul
adc
mov
mov
pop
push
mov
jae
jge
sbb
loop
jp
and
inc
pop
mov
imul
sarb
sbb
and
repz
xor
fistpl
aaa
clc
mov
xchg
or
iret
add
test
rcr
push
ss
or
pushf
sbb
jle
mov
adc
mov
xor
xchg
cmpsl
cmp
mov
sub
dec
out
roll
pusha
lds
mov
enter
shl
or
test
jae
or
pop
jns
mov
rorb
iret
outsl
je
mov
das
popf
imul
shrl
in
pop
pop
inc
push
dec
adc
add
jmp
mov
loop
lret
mov
inc
ja
and
js
lret
sahf
adc
pop
in
sbb
js
cmp
movl
inc
loop
out
xchg
dec
mov
scas
xor
loope
aas
cmp
in
iret
pop
cmp
mov
enter
nop
movsb
dec
in
loope
lods
addr16
idivb
fidivrl
iret
inc
and
add
pop
rorl
adc
or
push
pop
nop
rol
pushf
dec
sub
sbb
adc
dec
nop
test
pop
lahf
leave
push
rcrb
cmp
xlat
sbb
je
sbb
faddp
outsb
adc
cmpsb
mov
ret
lds
std
adc
push
adc
mov
and
repz
jg
sbb
push
ds
sbb
add
xchg
dec
loope
mov
and
xor
call
imul
dec
mov
aaa
sbb
add
push
mov
push
push
bnd
sub
cld
loopne
jns
loope
xchg
xchg
add
pop
enter
roll
pop
mov
and
out
popf
jnp
xchg
sti
push
mov
mov
mov
insb
sub
xor
xchg
cs
pushf
mov
inc
xchg
jno
xchg
gs
sbb
inc
add
adc
scas
in
loopne
lds
lods
mov
jnp
aas
adc
sbb
or
fld
push
sub
mov
popa
jno
test
enter
test
push
rcrl
jbe
pop
pop
inc
xor
movsb
xor
mov
pop
orb
mov
rcll
ljmp
shrb
jb
push
jg
xchg
dec
aaa
jmp
cs
push
mov
push
dec
pop
and
or
cmp
fsubs
clc
mov
daa
add
out
push
outsl
in
imul
lock
mov
int
icebp
jmp
adc
std
push
pop
cwtl
arpl
mov
popa
sub
and
addr16
lods
add
mov
pop
adc
shll
dec
cld
mov
pop
loope
adc
aam
mov
pop
cli
js
lods
and
push
fdivr
fdivrp
ret
push
popa
and
jnp
sub
mov
and
andl
cs
push
cld
shlb
mov
rcll
sub
lret
das
add
stos
mov
pop
or
pop
fucomp
inc
insl
rep
fwait
lods
int
dec
mov
mov
push
add
mov
aad
xchg
cld
shrb
push
loop
mov
int3
mov
pushf
sub
test
xor
xor
aas
or
ret
outsb
adc
scas
fstpl
mov
jnp
outsb
push
mov
and
flds
mov
xchg
inc
xchg
int3
adc
out
out
imul
sub
jl
or
ret
jnp
adc
call
dec
aad
push
fmul
mov
xchg
mov
push
lds
das
pop
pusha
add
sti
jecxz
inc
and
shll
xchg
rcrl
adc
int
inc
sub
xchg
cmp
das
mov
cli
xor
sbb
sub
int3
xchg
fcoms
xor
fsubl
sub
std
xlat
rolb
pop
cs
int
hlt
inc
jae
data16
add
int
stos
call
ret
aas
cs
test
xchg
leave
or
mov
xor
mov
cmp
jns
clc
shlb
xor
cltd
add
rcrb
fbld
xorl
and
loope
inc
mov
pop
push
push
push
mov
and
jmp
dec
jae
jbe
sbb
cld
sbb
mov
add
jo
jg
pop
adc
cmp
adc
das
jae
jo
loopne
cmp
orb
hlt
out
mov
aaa
push
cwtl
push
jb
adc
cmp
mov
add
int
lahf
mov
pop
pop
push
pop
cwtl
cmp
jne
mov
imull
out
push
aaa
xlat
cs
leave
adc
dec
adc
dec
lds
adc
ds
ljmp
daa
testl
aaa
pop
sbb
daa
rclb
inc
lods
decb
fisttps
mov
addr16
sub
xor
mov
and
int
and
js
inc
sub
jmp
sbb
jo
dec
pushf
test
add
into
mov
loopne
sub
inc
push
rclb
scas
dec
out
js
inc
mov
sub
fdivr
enter
jmp
adc
pusha
push
or
add
cmp
aas
mov
orl
ror
xor
nop
jo
insb
push
pop
cwtl
mov
das
adc
fisubl
shlb
adc
mov
shlb
fcmovu
xor
stc
push
cltd
mov
icebp
scas
cmp
stos
sub
inc
or
push
movb
dec
es
mov
loopne
jl
xorb
mov
xchg
push
push
clc
and
mov
add
fisubrs
in
inc
xchg
pushf
mov
int
add
mov
xlat
loop
mov
xor
or
push
or
nop
mov
cmpsl
add
xchg
dec
push
mov
mov
add
insb
mov
xlat
cli
or
loop
imul
push
mov
cli
jb
scas
push
jp
cmpb
ret
pop
sarb
repz
sahf
pop
xchg
push
stc
ss
xchg
andb
push
adc
ret
loope
dec
stc
mov
sbb
xchg
movsl
lahf
dec
pop
sub
push
les
rcll
jnp
lds
and
sbb
hlt
add
xchg
hlt
lret
and
aam
fisubs
jne
shlb
sub
in
mov
insb
popf
sub
mov
push
inc
xlat
pop
out
fstpl
add
mov
sub
imull
out
and
mov
das
fwait
push
iret
mov
movsl
pop
nop
add
mov
push
es
push
clc
lahf
jnp
xor
xor
push
or
lahf
pop
add
outsl
mov
xor
sbb
adc
pop
lcall
daa
mov
add
int
ret
loope
mov
push
adc
cmp
testl
push
pop
xor
xor
mov
inc
lcall
ret
dec
cmc
or
xlat
mov
ror
mov
fsubl
scas
jecxz
dec
mov
movsb
xor
xor
dec
and
mov
or
inc
es
lods
adc
lret
aas
scas
loopne
jno
and
rclb
out
add
loope
outsl
lret
leave
push
ds
scas
test
mov
mov
dec
inc
cs
push
cmpsl
outsb
outsb
cwtl
daa
dec
fadd
mov
lds
ss
in
nop
in
or
add
out
fdivr
dec
into
and
dec
scas
je
cmp
xor
and
mov
loope
jl
xchg
jno
fldenv
jmp
jb
adc
les
lcall
ret
popf
mov
hlt
inc
mov
pop
shll
mov
xor
sbb
adc
mov
xchg
cmpsl
arpl
push
or
test
mov
mov
mov
leave
out
xchg
push
inc
in
pop
js
jl
mov
xor
mov
mov
fbld
lret
pop
jo
cmp
sbb
stos
fidivrs
inc
dec
mov
and
loop
fldt
repnz
mov
out
insb
or
popf
ja
mov
jp
jge
cmpsl
sahf
rcrb
jp
mov
mov
ja
aam
lcall
aas
test
push
and
add
xchg
stos
or
ret
cmpb
fistpll
popa
inc
mov
inc
enter
inc
iret
pmulhw
arpl
clc
icebp
sbb
mov
or
js
test
add
jne
mov
loopne
mov
into
cltd
xor
push
pushf
mov
cmpb
sahf
jmp
push
push
push
xchg
mov
into
rcll
and
pop
stc
mov
dec
outsb
push
bound
fcmovu
or
sub
rcl
enter
jg
ja
movsb
cltd
and
push
movl
pop
loop
mov
mov
xchg
test
sbb
loopne
cmp
sarb
arpl
loope
push
mov
loopne
push
push
xor
adc
inc
andb
in
dec
pop
lea
sub
xchg
sarb
jl
sub
mov
arpl
xor
inc
rorl
ss
call
xlat
xor
clc
or
decl
in
ret
or
cmp
dec
mov
jg
jl
std
sti
mov
pusha
adc
std
push
xlat
sub
adcb
dec
outsl
pop
pop
cmc
testl
dec
aas
andb
mov
shrb
mov
cs
pushf
addb
and
mov
sbb
and
mov
pop
xchg
add
xchg
sub
mov
xchg
cli
pushf
sub
je
ret
xchg
mov
xchg
das
or
lretw
pop
sbb
das
std
inc
and
mov
cmpsl
rcrl
mov
inc
pop
push
sbb
xor
jbe
xchg
cmp
loope
shlb
faddl
jg
push
outsl
je
jne
jecxz
add
inc
mov
jg
pusha
enter
xor
mov
jns
push
mov
xor
int3
ret
mov
enter
notl
popa
xor
cli
cmpsb
jmp
orl
fcmovnu
push
sub
push
cmp
push
xchg
stos
cmp
pop
push
aam
mov
test
loop
mov
xchg
pusha
in
push
xor
icebp
inc
push
or
or
mov
cmp
enter
out
rorb
pushf
inc
push
je
push
fbstp
rorb
fwait
loope
into
test
pop
cmp
lock
mov
ficoms
pushf
jmp
cwtl
push
sub
scas
lret
jae
adc
adc
lahf
xchg
out
or
push
jge
lock
push
xchg
mov
int
and
repnz
jp
in
std
nop
xor
inc
ja
jb
xchg
sub
dec
xchg
addr16
jne
add
out
add
clc
shll
iret
xchg
cmp
andps
rcrl
mov
scas
pop
lds
mov
jb
cld
add
lds
cmp
jbe
xor
push
mov
xor
call
inc
mov
mov
inc
and
jmp
aad
arpl
cmovb
jge
jmp
cli
push
sub
fildll
adc
fistpl
jo
adc
xchg
xchg
jg
add
xor
add
push
test
inc
add
pop
and
lods
inc
jecxz
mov
subb
jmp
push
pushf
push
pop
notrack
add
insb
mov
jecxz
sub
xor
jl
cmpsl
adc
push
jno
cld
jle
xchg
in
sbb
fisubs
adcb
adc
push
inc
mov
inc
jg
xchg
loope
jl
jle
nop
push
rclb
mull
push
call
or
mov
mov
xor
add
sbb
movsb
sub
int3
or
cmp
popf
shll
sbb
andl
ss
loopne
pop
and
push
into
sub
ficoms
addr16
mov
dec
das
les
mov
ficoml
bound
cmp
imul
mov
dec
scas
adc
xor
sub
mov
rcll
push
jb
add
mov
and
mov
mov
pop
xor
jg
mov
mov
loop
pusha
incb
and
repz
loopne
enter
push
test
scas
xlat
mov
outsb
sub
mov
outsl
loope
sub
inc
int3
mov
outsb
push
push
pop
subb
push
test
cmp
mov
cli
movsl
cltd
sub
stos
xchg
xlat
lods
test
xchg
and
push
or
ss
int3
adc
test
xchg
rorl
fists
loope
jp
movsb
std
frstor
cmp
cltd
push
int
orb
add
xor
imul
pslld
scas
xor
push
mov
push
inc
fcmovb
push
fcoml
dec
cmp
imul
scas
mov
mov
and
xor
lods
jmp
int3
jb
test
shll
add
scas
ret
push
lods
sbb
ja
arpl
mov
ret
or
incb
outsl
or
mov
or
push
rorb
or
adc
or
ficoms
or
sbb
aad
aas
popa
or
xchg
push
popf
insl
lahf
scas
sbb
or
add
les
cmp
xchg
ja
mov
cmp
test
adc
in
adcb
mov
ficompl
scas
or
shrl
lret
sub
dec
sti
adc
inc
sbb
lret
cs
sub
lock
and
sahf
subb
xor
ret
cmp
lret
daa
fstpl
sbb
rolb
sub
loopne
xor
pop
xor
ljmp
pushf
addl
dec
je
in
sub
bound
lahf
dec
sub
xchg
rcrl
inc
jo
insl
push
test
or
loop
aad
add
lret
fdivs
mov
mov
inc
je
push
xchg
cltd
dec
and
les
ret
out
fidivrs
pop
cmpsb
xchg
jbe
aas
jbe
adc
out
ret
and
or
add
push
dec
lea
push
mov
ret
inc
add
dec
pop
mov
jne
in
jecxz
cmp
mov
les
push
subb
mov
insb
lds
fdivrl
test
push
outsl
dec
mov
fsubrs
push
lcall
xor
into
pop
push
ret
iret
jge
and
dec
jle
aam
pop
push
mov
and
cmp
xchg
pop
subb
mov
rcr
jp
add
jns
jge
jb
test
mov
and
and
lods
jbe
outsl
jge
loopne
adc
les
fsubrl
into
popa
dec
xchg
lahf
cmp
inc
or
adc
test
mov
mov
popa
adcl
push
and
outsl
lock
stos
pop
pop
mov
sub
loopne
shrl
xorl
mov
in
jg
pusha
cmpsb
or
outsb
out
pop
sbb
inc
push
mov
es
addl
outsl
cmp
add
mov
mov
mov
push
icebp
call
mov
xchg
dec
in
jae
and
jne
cmp
loop
mov
jne
pushf
or
nop
pop
cli
mov
iret
mov
jg
sbb
inc
lock
xlat
and
pop
fldenv
push
mov
and
jp
lahf
mov
icebp
jae
das
fdivrl
jle
and
in
pop
adc
cmpsl
loop
sahf
dec
cmpsb
outsl
push
pop
adc
add
outsb
dec
aam
xchg
adc
jbe
adc
mov
and
sub
test
into
xor
imul
xchg
imul
mov
inc
xor
ljmp
arpl
mov
cmp
pop
xor
ss
push
mov
out
mov
mov
sbb
jmp
mov
imul
lods
lds
dec
or
jge
mov
out
lods
xchg
icebp
fiaddl
mov
loop
jbe
dec
adc
fsubrs
pop
or
push
jle
mov
jg
push
sbb
in
loop
mov
jb
int
mov
adc
loop
or
data16
ja
push
mov
cmp
inc
cmp
or
out
adc
sti
xchg
lret
push
push
lea
ljmp
es
mov
nop
xchg
mov
or
mov
sahf
mov
repnz
xchg
loop
sub
js
fwait
adc
hlt
dec
lahf
xchg
pop
andb
mov
adc
add
fstps
lea
dec
pop
loope
jl
fsub
cmp
add
inc
out
jae
aas
orb
data16
rorb
test
adc
sahf
addr16
insl
mov
xor
xor
jle
outsb
pop
test
pop
mov
xchg
xor
adc
or
jb
sub
mov
inc
and
rcrl
lock
gs
xlat
add
das
add
popa
and
adc
outsl
cmp
add
pop
loop
ds
push
fistl
adc
sub
adc
push
xchg
push
push
dec
mov
je
in
pushf
cwtl
xor
jle
xchg
movsb
lds
and
aad
push
xlat
nop
mov
mov
or
bound
lahf
pushf
fldz
pop
cli
push
mov
xchg
mov
inc
icebp
xchg
ret
or
mov
mov
sbb
jp
in
imul
stc
mov
inc
mov
out
rolb
xchg
addr16
lahf
mov
or
fsubl
mov
adc
jb
mov
add
and
cmp
jl
and
and
dec
lea
adc
stos
pop
pushf
inc
ret
int3
adc
ds
ss
fwait
cli
add
ja
unpcklps
inc
jo
aaa
pop
adc
jno
lods
jns
jo
cmp
lcall
mov
mov
setg
stos
das
les
or
pushl
idivb
push
and
mov
mov
shl
xchg
fs
push
setl
mov
mov
stos
push
mov
stos
ret
pop
inc
sbb
rcll
cwtl
sbb
pushf
jle
out
cwtl
push
shlb
or
imul
mov
or
add
push
xor
cld
jae
scas
add
cmpl
dec
cmp
in
and
les
pop
mov
xchg
jp
stc
fbld
cmpsb
inc
mov
and
pop
fnstsw
aaa
pusha
and
repz
pop
je
cmpsl
mulb
sub
or
add
adc
dec
sbb
orb
ret
pop
idiv
jp
fwait
mov
outsb
dec
mov
jp
mov
lea
stos
lods
cmp
test
pop
xchg
and
and
lret
add
popf
in
add
adc
aad
jnp
sahf
sub
fcomp
leave
test
push
adc
pop
xchg
outsb
sub
shrb
pop
nop
inc
xor
jbe
loop
out
sti
dec
cltd
xor
xor
sbb
sub
jle
daa
sarb
scas
add
clc
push
out
mov
jno
mov
pop
test
or
jp
jno
je
push
push
cli
push
mov
mov
jb
out
in
cmc
push
ja
pushf
daa
push
stc
decl
mov
mov
adc
mov
xor
fcoms
sbb
leave
in
pop
add
inc
jmp
mov
pop
push
or
dec
sub
fstps
push
mov
adc
arpl
fidivrl
mov
addr16
mov
gs
and
push
xchg
adc
mov
adc
sahf
movsb
lock
cmp
aaa
mov
into
pushf
xadd
sub
push
nop
ljmp
mov
jns
push
sbb
jne
rolb
cmp
fistps
inc
adc
pop
adc
mov
sbb
xchg
aas
sub
push
jmp
push
push
fs
popf
adc
insb
and
bound
sub
push
sbbb
xchg
movsb
xchg
pop
pop
insb
sbb
add
mov
cmp
adc
xchg
push
mov
insl
and
mov
out
cmp
popf
sbb
mov
jge
inc
or
cmp
mov
inc
imul
and
jb
nop
into
popa
call
pushf
ds
bound
dec
jno
pop
shll
rorl
jns
cmp
rcl
push
jge
pshufw
sbb
push
imul
cmpsl
fmull
push
xlat
mov
popf
nop
fabs
jae
aad
andb
adc
jb
or
dec
sbb
in
lahf
jnp
or
add
pushf
and
mov
inc
and
fldenv
jns
shr
mov
rclb
xchg
add
adc
sahf
add
mov
cmpb
cmp
mov
mov
xchg
andl
insb
sub
fwait
jne
xchg
jae
repnz
adc
aaa
sahf
mov
push
int
pushl
daa
fdivrs
pop
sbb
adc
inc
popf
jg
mov
push
out
mov
adc
int
lret
pop
sbb
push
jge
outsb
fnsave
in
push
shr
aam
lahf
mov
loop
in
adc
inc
add
pop
stos
mov
add
adc
xchg
out
jg
push
pop
lods
leave
xchg
arpl
mov
out
or
mov
js
or
inc
dec
xor
stc
push
filds
xor
addr16
loope
xchg
imul
andl
inc
stc
inc
sub
mov
xchg
repnz
fwait
int3
loop
mov
cmp
and
mov
addb
jle
lods
loopne
mov
mov
stos
mov
push
xchg
add
imul
sub
sbb
lock
adc
ret
enter
xchg
into
fldcw
xchg
aam
xchg
cmpsl
xor
inc
jb
sti
sbb
and
dec
nop
stos
adc
push
cltd
ror
std
mov
lods
push
cmpsl
inc
jge
aas
jbe
xchg
adc
or
ret
pop
sbb
mov
in
sub
inc
xor
sbb
dec
add
and
aas
xor
and
lods
nop
cmp
aad
cmc
mov
fnstsw
pop
rol
push
adc
aam
cltd
mov
sbb
rclb
or
mov
scas
ret
pop
push
add
xchg
ja
push
and
xor
daa
push
dec
xor
cmpsl
push
shrb
sub
add
jmp
inc
inc
test
xor
icebp
gs
ja
inc
mov
ja
add
das
pop
inc
pop
daa
and
aam
sub
popa
test
mov
std
mov
sbb
das
rorb
push
popf
iret
clc
inc
pop
jnp
xchg
loop
iret
pusha
lods
add
insb
xchg
pop
repz
inc
sbbb
aaa
or
fnstcw
mov
aas
or
in
pusha
lds
ljmp
adc
gs
inc
and
sti
jge
mov
out
jecxz
mov
sub
out
and
int
sbb
xlat
jne
leave
outsl
mov
jmp
imul
daa
cmpsl
push
fs
push
cld
dec
fucomip
mov
lcall
or
cmpsb
iret
test
sbb
mov
mov
cmp
or
xchg
push
push
call
test
out
mov
sbb
jg
mov
sub
out
pop
adc
fildl
dec
or
testb
adc
out
jg
int3
mov
push
pop
fmuls
sub
mov
pusha
insb
xchg
scas
sub
xor
icebp
xor
cltd
add
mov
dec
push
jmp
xor
pop
clc
lcall
sbb
inc
adc
jne
cmp
sarl
mov
mov
dec
out
adc
mov
mov
push
loopne
scas
ror
inc
arpl
and
or
jle
xchg
fucompp
mov
int
aas
stos
adc
inc
aas
jnp
test
enter
rorl
pop
push
lahf
mov
lret
cmp
xchg
sbb
pop
rolb
stc
dec
sub
cmp
xor
cli
pop
aaa
lret
addr16
jmp
imul
cmpsb
rolb
lahf
push
lds
lea
lret
sub
ljmp
and
test
bound
sbb
and
fwait
out
pop
push
mov
stc
push
test
insb
dec
cmp
aam
mov
or
xor
push
cmp
xchg
mov
dec
mov
imul
jns
add
fst
mov
loopne
fnstenv
cmp
adc
dec
stos
mov
test
push
sub
xchg
cwtl
pop
sbb
mov
scas
add
fs
fisttpl
inc
mov
andl
jle
xchg
cli
pop
cmpsl
bound
cltd
into
repnz
leave
bound
dec
cmp
fs
mov
inc
out
inc
arpl
lret
lret
push
adc
inc
pusha
push
jae
cli
mov
aaa
imull
pop
ja
rcrb
or
and
push
xchg
test
xor
in
loope
adc
aaa
shrb
push
pusha
in
jnp
sub
fsubrl
addr16
xchg
imul
fsts
movsb
mov
sub
or
insl
shll
daa
daa
repnz
jnp
add
mov
nop
in
je
inc
std
mov
iret
adc
jmp
loop
jo
lcall
sbb
pushf
xor
add
cld
push
or
cmc
mov
or
out
scas
dec
dec
adc
imul
lcall
fs
test
xchg
pop
pop
movsb
outsb
nop
pop
adc
jp
mov
xchg
add
scas
movsbl
les
stos
insl
dec
sub
xor
jle
mov
testw
jle
mov
xor
lcall
jp
test
ja
aad
xchg
stc
popl
mov
fimull
fisttps
mov
sbb
mov
lods
leave
push
movsl
adc
add
dec
push
test
movsl
and
mov
lcall
or
mov
lods
xchg
push
inc
add
inc
lahf
aas
adc
mov
mulb
mov
ljmp
and
movsl
pop
mov
mov
shl
xlat
pushf
xor
cli
lret
mov
or
pop
jle
or
sub
js
pushf
dec
xchg
push
jae
ja
push
stos
gs
pop
aam
ficomps
fsubp
jno
mov
jo
xor
xchg
adc
fisttpl
lods
loope
inc
sahf
in
clc
pop
aaa
shll
lcall
sbb
sbb
or
pop
gs
cmp
mov
pop
ss
push
pop
dec
inc
xor
cmc
lret
cmp
jg
pop
aam
rorl
clc
add
sbb
sub
dec
inc
clc
jno
das
push
adc
scas
hlt
mov
inc
test
push
out
cmp
pop
jne
fbstp
test
dec
adc
pop
out
mov
push
lods
sub
ror
adc
addb
repz
pop
ja
pop
rol
fldcw
addl
and
jp
movsb
xchg
push
sahf
lods
dec
int
jb
movsl
in
inc
inc
movsb
lahf
and
xchg
xlat
inc
push
lahf
inc
das
jge
out
insb
out
jo
adc
xchg
outsl
jbe
out
mov
scas
pusha
shll
pop
jne
out
push
jns
push
insl
stos
xor
mov
in
pushf
je
popw
lahf
sub
xchg
les
cmp
sar
add
lds
stos
push
cmp
test
pushf
push
pop
adc
out
lds
divb
mov
cmc
add
test
push
adc
dec
dec
and
xchg
push
adc
and
adc
dec
adc
push
shrb
sbb
jb
out
adc
mov
xor
in
stos
movsb
or
jmp
add
enter
jne
shlb
loop
cmp
lock
or
jno
shl
mov
out
push
rorb
cld
sbb
arpl
jg
lods
dec
cltd
enter
out
cltd
rorl
aad
ss
leave
movsb
add
adc
pop
or
jo
adc
jbe
ljmp
inc
lahf
jb
iret
sub
clc
fprem1
cwtl
rcrl
dec
dec
dec
lods
sahf
mov
and
ds
aam
cltd
xchg
test
not
in
mov
jp
dec
cmpsl
push
stc
sbb
jle
sbb
dec
inc
jns
pop
stos
xor
mov
iret
ljmp
cwtl
or
inc
cmc
xor
pop
inc
mov
sub
aad
pop
push
xor
arpl
sbb
pop
push
mov
cli
data16
mov
and
xchg
out
jb
cld
enter
int3
fwait
push
adc
lahf
and
in
push
mov
cmp
adc
test
add
lret
popf
jne
mov
pop
fldl
lret
push
jnp
mov
orb
xchg
adc
mov
idivl
xor
aam
daa
add
cltd
clc
into
in
lods
sub
js
push
mov
inc
out
xchg
adc
lret
add
lock
popl
pusha
mov
add
clc
loopne
ja
lcall
pusha
mov
icebp
cmp
jecxz
pop
fmull
add
pushf
scas
movsb
dec
sbb
push
inc
pusha
push
in
loopne
out
sub
xchg
mov
mov
inc
mov
add
mov
test
push
ret
cmpsl
fs
outsl
dec
imul
xlat
divb
fisttpll
jo
fnstsw
scas
add
cmpsl
test
js
out
cmpsb
sarb
js
aam
cld
ret
nop
jecxz
push
imulb
stc
int
and
dec
hlt
push
call
add
popf
jb
mov
pop
ret
ret
mov
movsb
mov
mov
fsubrs
pop
sbb
xchg
pushf
sub
test
clc
test
mov
pop
mov
inc
subl
lods
and
xchg
pop
jb
sbb
lea
dec
and
xchg
dec
aad
xchg
sub
test
and
cmp
xor
pop
ret
mov
scas
dec
inc
pop
or
mov
cmp
mov
fstp
adc
pop
push
out
inc
push
sbb
xor
cld
xor
mov
xor
fimuls
sub
out
ficomps
int
xchg
cmpsl
and
cld
push
sbb
xchg
insb
jp
cmp
mov
leave
mov
loopne
fsubrl
cmpb
jae
or
cmp
cmp
lcall
rcrl
ret
cld
mov
jb
stos
sub
cmp
jmp
shl
out
jmp
and
add
jmp
xchg
rol
mov
jle
xchg
je
hlt
add
fists
lahf
data16
sahf
and
mov
data16
addl
test
pop
push
aaa
out
pop
ret
lcall
cmp
adc
push
mov
sub
loope
add
push
pop
add
xchg
jo
mov
push
out
lods
pop
jbe
lret
mov
or
jnp
outsb
jge
test
in
leave
jle
in
aad
shll
into
test
out
lea
and
scas
xlat
es
cmp
mov
pop
clc
mov
mov
sahf
out
sahf
out
ret
xor
fsts
in
xor
arpl
cmc
data16
xchg
cmpsl
mov
cmpsb
shr
in
mov
gs
mov
in
jnp
pop
repnz
lret
sub
mov
jb
and
cmp
xor
outsl
imul
inc
andb
cmp
xlat
and
push
ja
xchg
data16
mov
mov
sbb
mov
mov
and
gs
xchg
pop
cmpsl
es
loop
je
jp
sub
cwtl
ss
aam
inc
lods
and
nop
xchg
popa
inc
push
pop
xor
xchg
movsl
rolb
fldl
xchg
fisubl
sbb
mov
scas
pop
dec
es
adc
lds
mov
gs
mov
das
fisttpl
fisubrs
aam
cltd
mov
jmp
mov
mov
jno
mov
ficomps
sarb
mov
cltd
cmpsl
outsl
mov
mov
scas
xor
in
fwait
adc
stc
ror
add
cmp
inc
add
jbe
push
out
lods
or
fs
in
fsubp
in
inc
out
push
les
hlt
adc
add
leave
cmp
inc
aad
jecxz
clc
ljmp
scas
add
pop
lods
cmpl
out
dec
push
jmp
cld
jecxz
mov
inc
mov
mov
sbb
xlat
mov
mov
in
cli
std
es
enter
leave
testb
pop
scas
incl
xlat
sarb
mov
std
mov
mov
outsl
mov
adc
loop
and
mov
jmp
sbb
cmpsb
cmp
pop
add
jns
in
xor
cmp
gs
dec
in
xor
lock
fcoml
pop
push
aaa
mov
call
cmpsb
xor
test
fcoms
testb
mov
mov
cmpsb
xchg
popf
jl
lea
xor
addr16
mov
in
into
adc
stos
inc
mov
xlat
pop
cmp
jns
mov
aam
sub
adcl
loop
and
idivb
lods
dec
pop
js
enter
ds
out
stc
dec
ja
aam
or
lret
insb
shlb
push
imul
mov
push
in
pop
sub
rol
or
movsl
cli
push
enter
out
add
or
sbb
lret
mov
rcll
pop
inc
ja
sbb
add
jno
and
shr
adc
sbb
push
aam
movsl
imul
fidivl
movsl
jp
inc
pop
xor
jge
leave
xor
outsl
adc
in
adc
add
dec
and
lds
int3
pop
lock
ja
mov
scas
push
sub
mov
lea
lret
lcall
mov
cmp
std
xchg
mov
adc
sbb
sub
rorb
xchg
aaa
outsl
lds
mov
jno
outsl
add
ja
adc
or
frstor
mov
int
cmc
fldcw
hlt
les
mov
popf
movl
and
jg
nop
outsl
mov
in
out
lods
mov
mov
mov
dec
xor
mov
xor
mov
jg
mov
xchg
lea
xchg
inc
popf
daa
aam
push
call
lret
orb
cld
lds
loop
int
decl
xchg
mov
mov
jge
cmpsb
je
aam
aaa
jle
ret
iret
xchg
insb
nop
fwait
sbb
mov
inc
psrlw
sub
fistps
mov
push
stos
push
add
pop
pop
cltd
adc
gs
adc
and
popa
scas
xchg
repnz
adc
pop
aam
mov
fdivr
xchg
push
jmp
addr16
and
push
dec
mov
push
pop
jle
adc
add
add
cmp
mov
mov
pop
stos
sbb
jmp
cmp
fnstsw
testl
cmp
movsb
test
inc
movsb
movsl
insb
mov
or
sahf
push
cmpsl
in
int3
fwait
adc
lcall
mov
jmp
mov
test
cmpsb
stos
adc
xchg
cmpsb
mov
inc
data16
clc
cmp
xchg
cmc
cld
xor
into
pop
loopne
mov
sbb
lds
mov
aaa
int3
adc
jp
sbb
inc
in
pop
and
mov
ret
adc
imul
jne
popf
mov
mov
aad
push
loopne
iret
into
xchg
popf
shlb
mov
mov
imul
test
adc
adc
xchg
cmp
pmaddwd
inc
or
testb
popf
jno
rclb
jmp
lahf
dec
dec
and
jo
push
aam
fnsave
test
jb
inc
sub
cmp
pushf
daa
roll
jns
dec
pushf
sub
add
fwait
push
sbb
lods
push
jmp
inc
mov
cs
add
iret
sub
in
mov
arpl
or
pop
inc
add
and
mov
shrl
adc
std
xchg
pop
ds
sub
cmp
mov
inc
rcrl
rol
shll
fcoml
shl
bound
inc
cmc
scas
jbe
ret
sub
jge
xchg
outsl
xor
int
push
xlat
repz
fcoms
or
inc
idiv
or
imul
out
call
adc
iret
jnp
repnz
jle
mov
cmp
aad
ds
mov
dec
cld
testb
outsb
mov
lea
or
xchg
mov
lds
mov
pop
and
jp
sahf
shrl
mov
cwtl
mov
add
out
int3
cmpsl
enter
outsb
mov
bound
jae
nop
jno
lds
and
dec
pop
pop
js
sub
jmp
scas
or
adc
or
add
aam
inc
addb
popf
sar
pop
jg
fstps
fwait
fs
push
or
jge
fbld
sub
sbb
inc
or
iret
popf
pushw
jg
out
dec
pop
je
ss
in
and
mov
xlat
frstor
in
aaa
out
es
sbb
fldl
loop
jmp
sub
repz
in
sbb
sbb
add
in
sub
ret
sbbb
mov
sbb
push
inc
and
add
loopne
add
repnz
mov
jle
inc
adcl
dec
shll
mov
out
xchg
pop
out
hlt
cmp
fmuls
jo
mov
dec
and
xchg
dec
shll
xor
mov
jnp
jb
push
fists
push
mov
scas
cmp
es
and
iret
aas
xlat
repz
into
aad
push
incl
inc
roll
out
repz
and
push
nop
mov
iret
mov
mov
mov
int
mov
mov
xchg
xlat
or
cmpsb
push
push
adc
pusha
xchg
push
push
add
aaa
push
popf
push
mov
push
add
cmp
cmpb
pop
out
aam
adc
add
fcomi
adc
inc
lods
arpl
call
aaa
fistpl
mov
gs
cmp
mull
mov
dec
paddq
add
adc
cmp
mov
jmp
xchg
inc
inc
inc
sbb
fmuls
and
dec
dec
inc
js
fs
sub
test
iret
add
std
popa
lahf
lods
dec
jb
daa
xor
or
add
xchg
xchg
mov
flds
xor
push
inc
jmp
add
outsb
test
rcrb
outsb
mov
adc
xchg
jo
movsl
rol
jl
sarb
xor
mov
jne
icebp
pop
sub
mov
stos
daa
loope
add
and
push
xchg
jae
add
ljmp
jl
cs
jge
sub
sub
jne
mov
pop
jge
incl
pop
icebp
adc
arpl
lea
sbb
inc
imul
xchg
pop
add
or
lahf
inc
rcr
jl
sub
or
add
adc
cmp
pop
sub
mov
mov
incb
mulb
nop
mov
leave
and
mov
mov
in
mov
xor
loopne
mov
mov
inc
xor
out
jno
negb
push
fwait
sub
or
xchg
mov
and
das
fisubs
jb
imul
dec
loop
sbb
rcrb
cmp
xchg
and
push
ffreep
repnz
sub
es
repz
xor
push
xchg
add
jnp
out
jns
mov
inc
sbb
lock
out
lock
lret
mov
inc
mov
stos
imul
in
das
add
dec
mov
jle
cwtl
xor
iret
mov
roll
mov
xchg
add
ret
add
push
pop
dec
xor
sbb
jo
insl
lods
cmp
adc
ljmp
mov
in
inc
mov
int3
jg
mov
data16
arpl
ljmp
mov
jae
mov
clc
out
fwait
lock
scas
stos
add
in
xor
nop
stc
mov
mov
pop
mov
mov
lea
sbb
nop
and
or
mov
adc
test
call
sarl
pop
and
pop
cmpsb
sub
out
out
dec
scas
xor
jo
sbb
pop
xor
add
jl
gs
pusha
cmpb
dec
icebp
dec
stos
add
hlt
fistpll
insb
mov
fcmove
popa
push
dec
out
jns
outsl
cmpsb
rcrl
adc
pop
mov
push
rcrb
loope
ja
ds
add
inc
cld
jne
aas
in
filds
pop
loopne
inc
mov
and
adc
setae
inc
xchg
lret
movsl
call
imul
mov
sti
and
es
aaa
mov
rorb
and
ret
loop
xor
xor
loopne
add
lods
mov
sahf
icebp
int3
ja
cmp
sti
outsl
push
add
dec
mov
decb
pop
add
sbb
pop
cld
ficompl
inc
pop
popa
ds
idivb
jl
rcrl
fsubr
fcmovnu
xlat
loopne
adc
push
mov
cmp
inc
xchg
nop
and
or
and
into
cwtl
xchg
mov
mov
push
dec
or
rorb
add
inc
popf
enter
mov
test
fdivrl
inc
out
adcb
or
mov
xchg
add
mov
xchg
arpl
mov
and
shlb
mov
ds
std
jmp
data16
cmp
pusha
test
bound
ret
dec
int
xchg
into
loope
fsubrs
fcmovbe
xchg
out
fldenv
pop
cmp
popf
int3
add
sbb
or
and
xchg
mov
jecxz
xchg
icebp
lahf
or
mov
adcb
lcall
das
and
xchg
sbb
mov
and
das
data16
je
sti
int3
mov
jle
jg
loop
mov
pusha
lods
neg
mov
or
push
aam
addr16
inc
cmp
out
pop
sti
lods
add
lcall
dec
iret
dec
aam
or
repz
fimull
fistpll
ret
fistl
inc
mov
int
cmpsl
in
insb
ljmp
mov
cmp
dec
pop
mov
test
pop
mov
and
aam
les
out
popa
sub
cmp
das
lret
lret
arpl
movsl
movsl
jne
cltd
daa
sbb
jecxz
xchg
mov
or
dec
aas
sub
jne
xlat
scas
outsl
in
dec
xor
std
insb
push
stos
or
sub
mov
popa
jbe
jecxz
ret
std
inc
adc
sub
movsl
inc
inc
xchg
cmpb
mov
cli
ss
jl
out
lods
xchg
inc
test
sub
and
lock
imul
add
iret
and
jmp
add
xchg
lret
mov
mov
jecxz
leave
lds
mov
das
sbb
adc
adc
cmp
jns
sub
scas
or
xor
and
arpl
xchg
cmpsl
ficoml
fs
xchg
leave
shl
or
js
xchg
pop
aad
push
call
insl
jg
fs
sahf
stos
js
mov
rcrl
dec
mov
popf
cmpl
and
mov
xchg
clc
xchg
mov
xor
popl
popa
push
xchg
movsl
and
daa
outsb
inc
jno
inc
add
mov
xor
outsl
sbb
std
cli
bound
cltd
imul
or
aaa
inc
incb
jbe
movsb
mov
and
ja
cmpsl
je
nopl
shll
and
mov
jns
test
movsl
inc
add
in
sub
fisubrl
imul
lds
xor
xor
mov
mov
pop
dec
shrl
out
je
out
adc
mul
push
push
inc
leave
popf
sbb
or
or
gs
cmp
fsubs
xchg
adc
pushf
lds
dec
testb
insb
mov
es
loope
roll
popf
xchg
and
jge
adc
cmpl
pop
sub
cmp
mov
cmp
imul
sub
add
int3
dec
lea
mov
adc
sbb
mov
js
dec
mov
loopne
int3
not
lret
movsb
mov
imul
or
mov
outsl
jp
pusha
inc
outsb
outsl
pop
movsl
std
jns
insb
pop
dec
cmp
adc
pop
mov
ss
movsb
xchg
js
int
aaa
imul
insb
dec
mov
loope
addb
cmpsl
insl
sbb
inc
out
adc
pushf
adc
jge
or
call
jnp
jb
mov
arpl
xchg
arpl
dec
pusha
nop
jle
xchg
repnz
roll
loope
xchg
pop
insb
adc
inc
aas
inc
xchg
mul
mov
sub
sbb
add
fisttpl
bound
add
pop
pusha
jmp
fsubs
cld
fdivrp
and
popf
out
or
ret
xchg
shlb
loope
adc
pop
out
jae
sbb
lods
cs
jnp
ds
inc
and
and
push
movsb
rorl
je
insl
and
clc
sub
shlb
ret
ja
dec
jle
mov
and
jg
pop
push
aaa
dec
adc
arpl
mov
lods
jnp
cmpsl
sub
push
orb
sbb
xchg
or
sbb
loopne
loope
pop
test
mov
xor
pop
addr16
or
and
lea
lock
cli
cltd
mov
insl
sbb
lods
push
and
int3
insl
push
mov
xor
lahf
icebp
inc
popf
repz
dec
mov
ret
adc
xor
ret
cmpw
cmp
insl
arpl
pushf
repnz
movsl
insb
clc
push
and
xor
jne
lock
sub
nop
jp
sahf
iret
xchg
addb
arpl
lea
xor
adc
sub
dec
cmpsb
pop
testl
inc
xchg
xchg
jecxz
cmp
shl
outsb
fwait
xor
test
stc
jo
gs
sub
imul
cmpsb
mov
xchg
pop
nop
leave
sbbb
lahf
cmp
pop
lcall
mov
lock
sbb
stos
inc
pop
mov
sbb
mov
into
push
out
mov
add
stc
outsl
add
sbb
rcrl
fiaddl
push
push
mov
popf
cmp
adc
jp
adc
mov
jl
dec
decb
inc
pop
xor
mov
es
and
mov
out
stos
dec
adc
push
add
addr16
rcll
pusha
push
inc
fstps
jne
xchg
lea
repnz
cmpsb
cmp
mov
cld
loop
and
daa
into
outsb
sbb
adc
sbb
dec
jnp
dec
sbb
pause
loop
mov
out
add
mov
sub
pop
mov
sahf
out
fiaddl
push
cmpsb
adc
rcll
pop
cmpb
cmp
pop
mov
in
mov
hlt
mov
pop
and
cmpsl
dec
in
pop
out
and
pop
jp
jae
cli
xorl
jl
sub
jge
movsl
stc
sbb
movsb
add
cltd
jle
int
outsl
sarb
dec
mov
clc
in
jp
push
out
xabort
sahf
xchg
jnp
loop
mov
fdivrl
clc
cmp
mov
mov
mov
mov
adc
mov
dec
adc
sub
pop
jnp
sbb
lea
push
jns
push
bound
imul
jnp
mov
test
sub
fwait
and
mov
or
sub
test
dec
out
sahf
sbb
push
testl
mov
pusha
adc
adc
ficomps
adc
sub
mov
xor
addb
add
out
or
nop
and
dec
add
loope
testb
das
jmp
mov
std
lods
test
addr16
out
jno
sbb
rclb
aaa
test
lahf
pop
inc
out
je
sub
add
sub
cmpsl
shlb
into
ja
inc
sub
popf
mov
add
adc
inc
int
cmc
jle
dec
repnz
iret
jl
inc
ret
xor
std
outsl
or
adc
aad
dec
jbe
cmc
pop
cmp
push
adc
fsubl
xorl
and
int
jne
pop
sub
pop
loope
cmp
jne
lods
or
cli
jl
dec
push
std
sahf
xchg
es
dec
ds
lea
or
jmp
mov
mov
outsl
pop
insl
sub
incb
cs
ss
jo
fwait
or
loope
add
fisubs
aam
sahf
dec
jnp
xchg
hlt
flds
into
and
push
idivb
scas
mov
dec
cmpsb
sahf
test
pop
sub
cmp
jp
call
inc
push
iret
call
cmp
pop
push
fs
add
test
inc
outsl
test
roll
scas
jae
scas
lret
xorl
and
outsb
add
movsb
stc
jg
jno
xchg
adc
add
scas
dec
sub
mov
mov
or
cmp
icebp
add
xor
lods
adc
and
pop
xchg
jmp
jl
mov
cld
ja
push
xchg
aas
lods
arpl
xchg
outsl
dec
fcomp
push
mov
jge
loope
inc
out
mov
mov
int3
mov
pusha
push
pop
pop
jmp
push
adc
push
and
test
jno
mov
loopne
aad
nop
mov
pop
addl
cmpsl
ret
test
xlat
aam
xchg
je
sbb
insl
sub
adc
aaa
and
sub
cmc
loopne
and
adc
cmp
ret
mov
inc
xchg
aam
inc
in
sub
fistps
lea
or
testb
pop
add
shlb
or
jle
scas
add
sbb
pop
xor
inc
daa
shll
in
lea
outsl
sub
pop
and
sarb
push
push
test
adc
ljmp
and
imul
dec
stos
call
hlt
es
test
outsb
and
call
mov
fsts
sub
jp
cwtl
dec
sbb
das
jmp
and
mov
int
mov
pop
imul
mov
sub
pop
push
adc
lods
dec
stos
in
adc
cmp
mov
je
mov
or
or
xlat
daa
out
das
xchg
in
das
mov
cld
ret
and
test
inc
stos
mov
cmp
xor
add
cwtl
jmp
and
dec
mov
lret
cmpsb
and
pop
xchg
je
push
inc
in
xor
mov
sub
and
mov
sbb
test
cwtl
inc
icebp
push
jb
jge
cmp
adc
imul
mov
push
mov
add
imul
dec
push
les
mov
ret
push
loop
stos
pop
nop
sub
loope
push
pop
push
push
jp
ja
mov
cwtl
cmp
outsl
and
repz
mov
rolb
and
cmp
loope
or
orl
jecxz
inc
mov
ret
sub
bound
or
inc
push
or
mov
aad
outsb
pop
mov
inc
and
imul
sub
clc
pop
mov
shlb
adc
add
add
daa
in
int3
or
and
mov
add
xchg
mov
xchg
int3
mov
aad
pusha
jno
mov
daa
not
cs
add
pop
stos
mov
dec
sti
cmp
sub
push
lahf
lret
add
mov
dec
inc
mov
push
stos
cltd
subl
aas
adc
cmc
scas
leave
jecxz
cs
jmp
cmp
dec
mov
ret
out
sbb
aam
jecxz
mov
scas
xor
imul
sbb
cmp
rcll
inc
imul
mov
je
scas
imul
mov
je
fs
incb
aam
push
in
jg
sbb
dec
or
fidivs
sti
loope
add
ret
loop
aad
push
push
mov
lret
mov
stos
addr16
push
mov
std
and
fs
pop
insb
jb
sub
das
cmc
dec
ja
scas
inc
or
aad
pop
das
shll
shlb
ret
inc
push
jo
push
xchg
mov
mov
test
imul
pop
jmp
mov
fs
sub
jecxz
or
mov
and
rorb
mov
aad
es
push
nop
mov
movsl
or
int
imul
loope
insl
outsl
enter
out
fwait
push
add
xor
jge
movsb
adc
mov
bound
insb
mov
lret
dec
fldl
stc
adc
inc
inc
int
xchg
pop
movsl
in
inc
cli
xor
jmp
push
fmul
lds
insl
lret
xor
dec
shrl
dec
pusha
std
adc
loope
clc
and
mov
or
push
or
push
or
ds
cwtl
push
xor
push
decb
popf
adc
sbb
cmc
cs
push
insb
mov
scas
out
ret
sub
lea
mov
inc
inc
popa
sbb
lahf
stos
std
mov
xor
dec
cmpsl
mov
fsubrl
mov
out
cmp
cld
push
jbe
jns
mov
push
sub
xcrypt-ofb
cmpsl
stos
lock
hlt
call
xor
fimuls
push
add
mov
cmpsl
jge
clc
inc
add
sbb
jmp
mov
jg
inc
fidivs
insl
pusha
cmp
cwtl
lds
leave
insb
dec
jmp
xchg
pop
js
pusha
imul
ja
je
shll
scas
adcl
aad
sbb
rolb
movsl
add
xchg
lahf
dec
in
leave
test
out
cmp
sbb
mov
mov
fcoml
scas
xchg
dec
dec
ja
cmp
clc
xor
lea
cli
adc
aas
mov
mov
adc
leave
insl
sbb
xor
and
repz
mov
dec
mov
loop
mov
aaa
xchg
xchg
jo
das
shl
xchg
into
out
data16
lret
adc
sarb
jl
dec
mov
insl
popf
pop
dec
es
jns
repnz
mov
rolb
cmp
je
cmp
cmpsl
jmp
dec
rcrl
mov
and
popf
sbb
mov
lret
cmpsb
push
sbb
push
icebp
arpl
xchg
subb
aad
popa
sbb
and
push
pop
cmp
push
mov
jnp
cmpsb
scas
or
mov
aam
nop
pop
pop
xor
cmp
pop
icebp
sbb
fs
jge
xchg
pop
shl
imul
adc
push
xchg
cs
xchg
cld
fnstcw
mov
cmpsl
and
push
adc
pop
je
fs
xchg
test
hlt
cmp
push
xchg
pusha
lods
push
int3
sar
cltd
mov
jecxz
lcall
in
movsb
sbb
mov
add
out
mov
cli
lods
mov
jae
nop
aas
arpl
sti
cli
mov
out
clc
cwtl
movsl
xchg
mov
xor
repnz
imul
call
scas
arpl
cwtl
roll
add
aaa
lcall
rcll
inc
into
dec
adc
cltd
jge
fs
adc
jae
jmp
je
mov
inc
xor
in
jo
push
inc
aas
pop
lahf
cltd
scas
out
cmp
in
sbb
xchg
out
mov
inc
ret
dec
movsb
xchg
or
or
ds
int3
rorb
les
sbb
mov
aam
decl
mov
jbe
add
adc
stc
lahf
adc
mov
lret
or
xadd
cmp
add
or
dec
leave
cs
insl
std
add
aas
lahf
push
test
sbb
push
test
loopne
jno
lret
add
fiaddl
dec
jns
in
mov
add
and
test
xor
les
outsb
ja
or
jle
icebp
mov
sarb
arpl
rcrb
cmpsb
jbe
gs
xchg
add
add
inc
and
jl
sub
add
inc
pop
rcrl
lock
repnz
adc
and
mov
or
ds
iret
jbe
outsl
aad
ret
das
ljmp
movsl
xor
out
sbb
shlb
pop
cmpsb
mov
or
mov
mov
jo
mov
fwait
in
inc
icebp
and
in
mov
xchg
lods
adc
js
movsb
out
mov
add
cld
nop
std
pushf
pop
mov
cmp
idiv
pop
jle
xor
xchg
fwait
popf
in
and
aad
nop
mov
into
mov
in
pusha
and
mov
inc
sahf
mov
sub
fucomp
and
add
and
imul
dec
cmp
adc
sbb
sarl
insl
fiadds
and
out
cmp
sti
pop
jmp
xchg
test
push
jmp
push
mov
jns
or
repz
mov
xchg
mov
aaa
jecxz
ja
dec
sub
or
int3
sub
arpl
sti
and
cli
addb
mov
bnd
loopne
aas
adc
mov
aaa
mov
into
aam
jae
push
jmp
enter
sbb
sbb
orl
cwtl
cmpb
jns
add
aam
fstpl
sahf
xchg
cld
aas
imull
jae
sub
data16
and
scas
mov
jl
inc
pop
fbstp
arpl
dec
outsl
shll
add
cmpsl
mov
xor
mov
mov
inc
adc
fidivl
popf
in
push
pop
jb
mov
outsb
in
push
xor
xor
xchg
fdivrs
inc
movsl
out
stos
mov
pop
push
mov
ret
ja
fidivrl
mov
or
lret
incb
mov
adc
sub
ds
adc
icebp
and
pop
stc
fldenv
jge
sbb
ret
mov
mov
adc
push
pop
dec
jge
repnz
pop
and
push
adc
sbb
hlt
push
leave
in
dec
rclb
add
jne
sbb
sbb
iret
mov
testb
mov
fnstcw
fildl
dec
nop
lock
pushl
aam
cmp
pop
out
pop
push
inc
mov
stos
xorb
das
jl
fsubl
bound
pop
movsb
mov
cli
cmp
lock
dec
imul
and
shlb
fldenv
cs
mov
sub
pop
mov
xchg
xlat
or
sahf
inc
push
push
xchg
nop
aam
addr16
enter
pop
push
and
push
ds
add
sbb
sub
aaa
aam
loope
adc
cmp
jmp
incb
and
aam
inc
out
adc
dec
mov
xchg
popf
int
pop
icebp
shrb
movsl
cmpsb
xchg
sub
in
jmp
pop
sahf
add
cltd
pop
jae
pop
xor
push
inc
push
or
sbb
decl
sbb
inc
push
scas
pusha
xchg
fcoml
and
push
jno
cs
sbb
xchg
push
inc
sahf
push
sub
sahf
sbb
stos
mov
flds
inc
lods
push
mov
bound
inc
xchg
jp
mov
pop
fsubrl
cmp
iret
es
jp
lea
mov
push
push
pushf
std
jg
xor
jmp
lods
and
loopne
xchg
mov
lahf
mov
mov
je
icebp
xor
adc
pop
jns
and
fpatan
movsb
data16
stos
lcall
sar
add
sub
cmpb
push
shl
outsb
dec
lret
sub
scas
das
imul
in
sub
enter
addb
inc
sub
popa
outsb
push
mov
adc
pop
out
pop
mov
mull
sub
subb
jmp
aam
aas
mov
xor
imul
and
into
lea
cs
sti
sbb
sub
sti
jnp
xchg
ror
shlb
or
pusha
and
add
sar
cmc
pop
scas
jae
popa
mov
cli
test
mov
in
fsubrl
add
fsubs
mov
daa
dec
push
aam
mov
xchg
andl
scas
ret
mov
push
repnz
jnp
lret
mov
aam
mov
cld
ret
sub
mov
mov
pop
shrb
jle
mov
or
fcoml
mov
sub
int3
xchg
xor
xor
fiaddl
xchg
dec
inc
push
jl
jg
aad
cld
mov
out
notl
int
mov
rorb
test
add
push
push
cld
jbe
lret
aas
pusha
pop
outsb
pop
xchg
xchg
mov
mov
loope
in
cmpsb
jge
inc
in
push
out
jecxz
sub
dec
std
push
filds
adc
add
stos
call
inc
ss
mov
mov
fsubl
sub
stos
popf
imul
jne
push
cli
out
pop
add
pop
pop
movsb
movsb
and
or
mov
into
xchg
clc
pusha
cltd
sub
fs
outsl
scas
bswap
ret
or
ljmp
and
and
xor
add
lcall
rcl
mov
mov
adcl
incb
cli
movsb
ss
and
cmpsb
pushl
mov
mov
outsl
and
popf
popf
out
adc
ds
inc
sub
shll
bound
insb
xor
popf
mov
xchg
mov
fldcw
inc
nop
icebp
test
dec
je
cmp
adc
lods
jno
clc
xchg
pusha
std
or
enter
mov
adc
aad
out
test
adc
insb
insb
repnz
mov
loope
push
push
or
loopne
lock
mov
leave
sbb
fnstenv
fmul
mov
outsl
pushf
mov
fldcw
imul
dec
mov
cmp
fs
sub
cmp
xor
lcall
inc
jno
pop
daa
or
sbb
gs
sub
and
in
and
sbbb
inc
dec
insb
and
clc
inc
and
jge
xchg
mov
repz
sbb
imul
add
pop
fistpl
clc
lds
or
adc
in
dec
pushf
or
dec
outsb
or
nop
mov
dec
out
sub
dec
shlb
mov
in
sbb
sub
inc
pop
fwait
mov
mov
into
cli
in
aad
xchg
mov
sarb
cmp
aaa
push
adc
cli
sub
lock
mov
add
out
scas
mov
das
sbb
mov
enter
scas
jecxz
iret
or
sti
mov
sbb
sbb
lea
inc
add
repz
xlat
jle
jecxz
sbb
mov
ret
into
mov
out
mov
paddsw
int
stc
xchg
sub
lret
pop
out
mov
pop
dec
ret
aaa
lds
orl
fnstenv
mov
cs
das
cs
int
pop
out
cmp
jge
jnp
pop
jo
inc
sub
jp
fdivrs
sar
add
das
push
shr
push
shr
in
xchg
mov
push
stc
ret
fidivrl
inc
mov
stos
and
cltd
movsl
outsl
mov
cwtl
faddl
mov
movsb
jg
and
insb
cmpl
add
cmpsb
or
add
fiadds
loope
bound
decl
lock
pavgb
jecxz
insl
ret
cmp
fidivs
mov
mov
ljmp
and
jbe
lcall
cmc
es
or
push
push
push
inc
les
xchg
fmul
jo
push
lahf
lock
loop
fisttpll
pop
add
push
lock
inc
push
test
mov
lret
push
jo
cli
shlb
dec
xlat
xchg
dec
sub
stos
xchg
pop
subl
xchg
xchg
dec
aas
sti
dec
cmpsb
jmp
xor
dec
xor
cmc
dec
sti
pop
add
ret
push
mov
jmp
sbb
pop
sub
fidivl
enter
mov
push
push
popa
jecxz
shll
aaa
mov
mov
sub
jecxz
lea
xchg
lahf
mov
jno
inc
das
int3
addb
cmpb
ss
push
out
mov
and
insb
jl
nop
mov
adc
idiv
sub
dec
push
xchg
loope
jge
pop
xchg
test
loopne
or
pop
push
ja
fs
xchg
add
repnz
xchg
mov
inc
sbb
xor
pop
js
mov
jl
mov
cli
stos
mov
movsl
xchg
jbe
or
adc
xchg
mov
ret
add
addr16
jl
aaa
push
mov
jae
sub
insl
xor
push
sti
mov
fbstp
dec
aaa
test
jp
loope
mov
adc
xor
pop
loope
pushl
jmp
sub
fadd
je
xor
jne
jl
aam
stos
sub
mov
jp
js
cli
lahf
xchg
add
jmp
pop
add
jns
adc
mov
mov
and
sbb
jbe
add
sub
popf
push
sbb
shlb
icebp
xor
dec
xchg
pop
iret
sti
inc
mov
xchg
jne
int
lds
loopne
stos
jb
xchg
xchg
mov
nop
fmul
mov
push
je
xchg
mov
adc
pop
jmp
xlat
pop
int3
into
cmp
xorl
mov
insb
xlat
movsb
ja
aas
loope
adc
mov
dec
imul
sahf
outsl
pusha
dec
pusha
pop
and
int
sub
add
adc
das
icebp
clc
push
fcompl
cmp
push
xchg
lret
je
in
mov
lret
or
xor
ret
call
and
sub
dec
pop
test
imul
dec
pushf
sub
movsb
in
fisubl
arpl
rorb
dec
stos
loope
mov
jge
js
xchg
faddl
leave
mov
sub
jp
dec
push
out
fsubrs
or
push
popa
aas
mov
loop
ret
ret
xor
xchg
int3
or
aad
lock
add
dec
sub
jb
push
mov
movsb
push
movsl
mov
movsl
fstps
mov
outsl
xor
ss
or
repnz
push
jbe
mov
clc
mov
xchg
clc
pop
pop
fcmovu
jo
mov
adc
into
out
mov
xchg
aam
fimull
xor
mov
push
fiadds
adcl
iret
fwait
loope
and
sahf
dec
jle
shll
fildl
jo
inc
xchg
in
mov
shll
out
jne
inc
dec
jle
lahf
in
mov
rcrb
incl
xor
int
gs
subl
rolb
or
sbb
and
cmp
stc
or
cltd
jns
dec
cmp
xchg
mov
sti
std
jmp
jmp
sbb
stos
outsb
pop
dec
xchg
adc
mov
ss
cmpsl
mov
jae
jecxz
addr16
das
add
shlb
inc
sub
inc
jmp
daa
aaa
ficoml
sarl
inc
fadds
shll
mov
in
ficomps
adc
push
mov
dec
mov
roll
mov
xor
ds
xor
add
and
ja
int3
jb
in
outsl
xchg
jo
and
ds
mov
cmp
push
mov
outsl
in
dec
mov
and
lahf
mov
enter
xchg
fisttpll
xor
cs
and
stos
xor
loope
xor
jmp
arpl
fisubrs
jb
adc
cli
pop
adc
es
jb
mov
lods
aaa
mov
lahf
mov
mov
push
sub
xchg
aad
adc
cmpsb
jge
in
sub
in
push
add
mov
cmp
enter
xchg
push
popfw
cs
mov
xlat
int
lods
addb
pop
cmp
sbb
and
pop
mov
test
cmp
push
incl
or
add
aad
and
leave
xchg
sbb
addb
jmp
mov
inc
jg
inc
xchg
test
sti
out
adc
mov
cmpsb
pop
mov
ds
in
pop
je
dec
inc
aaa
inc
lods
push
sbb
andl
pop
cmp
mov
or
lods
cmp
adc
jg
int
cmp
jnp
insl
dec
sub
addl
push
add
cmpsl
jmp
into
push
pop
sbb
rorb
outsl
push
mov
sahf
dec
mov
or
xlat
inc
adc
or
incl
outsb
shlb
push
shlb
inc
sub
das
emms
jnp
push
sub
js
idiv
sub
lret
pop
in
dec
cmpsl
lret
shrb
lods
push
shl
add
fs
push
pop
sbb
lea
xlat
into
clc
add
je
lahf
jbe
je
js
dec
push
clts
lahf
xlat
cmovg
cmpsl
sbb
jne
js
adc
loopne
dec
push
xchg
xchg
scas
in
in
mov
mov
out
leave
mov
fidivrl
push
bound
sbb
dec
jno
lock
mov
arpl
sbb
pop
mov
inc
mov
mov
ret
gs
pop
les
sarl
adc
or
in
cmc
outsl
mov
mov
out
rcll
xchg
jg
mov
mov
jno
scas
adc
andps
in
mull
push
jle
xor
inc
in
push
add
cmpsl
or
inc
push
jp
mov
xchg
dec
cmpsl
das
cmp
xlat
test
pop
int3
dec
and
lds
xchg
bnd
lods
xchg
lds
fldt
iret
gs
cmpl
xor
xchg
push
imul
in
imul
ror
sub
lret
aas
jg
and
hlt
js
hlt
cwtl
or
sub
rcll
das
push
mov
cld
or
and
jle
pop
push
and
add
cmpsb
push
cmp
cmp
pop
pop
push
inc
sub
ja
cli
adcb
mov
inc
jnp
das
mov
mov
mov
pop
xor
ss
xchg
push
mov
mull
inc
cmp
inc
and
nop
push
outsb
and
or
and
insl
and
dec
mov
movsl
das
jp
adc
fstpl
adc
push
inc
loope
repz
jl
inc
push
fnstenv
pop
inc
scas
je
mov
ret
mov
sub
ja
and
and
mov
ljmp
mov
popa
add
sbbb
loope
fcoms
shlb
bound
push
push
arpl
add
scas
and
icebp
movsb
add
loope
mov
outsl
xchg
mov
andl
rorb
and
movl
inc
cmpsl
pop
and
and
add
pop
rcrl
pop
add
outsl
ret
scas
dec
jno
push
call
mov
pop
testb
or
dec
xchg
sub
adc
inc
xchg
ficoml
mov
and
jmp
push
inc
cmpsl
repz
je
mov
pop
das
sbb
ficomps
sub
mov
popf
adc
in
loop
mov
test
in
fstpl
or
mov
sahf
hlt
xchg
int3
add
jne
push
pop
push
push
xchg
pop
jo
sti
cltd
sub
mov
arpl
pop
in
mov
jecxz
xor
cmp
sbb
neg
dec
or
mov
rorb
jnp
adc
inc
pop
adc
out
adc
xchg
popa
popa
add
inc
in
les
add
dec
xor
mov
daa
leave
adc
test
int
jge
xor
pop
rcrl
add
cltd
and
dec
lret
dec
mov
or
nop
sahf
xchg
xchg
mov
ret
and
sub
addr16
sarb
mov
add
popf
mov
lock
add
js
xor
dec
scas
push
into
mov
mov
fisubrs
outsl
adc
mov
mov
xchg
cs
mov
jb
cmp
dec
stc
dec
pop
xor
cld
dec
lcall
add
insl
scas
pop
js
inc
scas
stos
lds
or
scas
or
push
insl
out
iret
xchg
in
jns
test
lea
iret
push
int
aas
mov
pusha
dec
adc
mov
lahf
imul
cmp
dec
and
stos
out
cltd
mov
mov
mov
arpl
inc
jg
scas
xor
push
ficomps
shll
xchg
and
rcll
rcll
popf
stos
lea
rcrl
xchg
add
or
xchg
inc
inc
cmp
test
sub
jmp
movb
xchg
cmp
stos
pusha
push
sti
mov
and
jl
sub
pushf
orl
or
dec
jecxz
cltd
push
mov
subl
loop
add
cwtl
or
xlat
popf
xchg
push
fisttps
inc
inc
adc
fwait
stc
ljmp
mov
in
lret
mov
incb
nop
mov
test
cmp
fstpt
mov
ret
sub
jecxz
daa
ja
push
jg
or
loop
rcrb
push
mov
jb
mov
enter
loop
aaa
fwait
inc
mov
push
mov
mov
lock
push
pop
dec
mov
xor
jmp
pop
cwtl
sub
ficoml
mov
xchg
out
sbb
lea
sti
mov
and
pop
push
xchg
push
or
lret
sbb
mov
pop
pop
jns
stos
push
sub
test
adc
inc
idivl
jge
das
pop
in
push
mov
xchg
xor
in
dec
and
rolw
les
push
add
call
push
mov
xlat
lock
and
je
xchg
inc
xor
imul
or
in
out
push
cmp
nop
inc
xor
arpl
div
frstor
fwait
xchg
pop
jmp
push
xchg
out
cwtl
inc
and
mov
fs
adc
lcall
mov
loop
test
or
pop
clc
orb
add
cmp
repnz
scas
out
xlat
into
enter
pop
mull
fisubrs
lods
mov
std
pop
insb
call
push
mov
bound
ja
xchg
cmpsl
fcomps
arpl
cmp
cmc
cli
cs
jmp
mull
cli
stos
inc
in
sub
mov
jne
cmp
insl
fwait
mov
fidivs
sbb
popa
ret
pop
shlb
mov
and
jp
mov
dec
inc
xor
pop
repz
sub
xor
xchg
mov
imul
outsb
xor
cs
pop
xchg
push
fwait
loopne
jb
dec
jmp
push
dec
shr
negl
jle
int
or
cmpsb
pcmpeqw
mov
adc
or
add
frstor
xor
shll
inc
call
les
xchg
ja
jno
mov
adc
loopne
cmp
gs
jo
adc
cmp
or
inc
inc
loope
pop
addr16
popa
rcrl
xchg
and
jp
loop
xor
adc
fistps
cld
lret
addps
and
in
popa
cs
rorl
inc
int
push
idivb
inc
inc
sahf
cmp
mov
shrl
lds
inc
pop
ss
insb
scas
mov
add
or
cmp
mov
mov
inc
cld
les
sbb
movsl
sti
test
add
push
mov
dec
jne
lds
mov
adc
orl
mov
stos
int3
pop
sti
jnp
and
loopne
insl
imul
mov
mov
movhlps
cmc
jecxz
fidivrs
jno
stos
ret
lods
and
xlat
iret
dec
mov
cmpb
push
in
jne
push
xor
fs
xchg
ljmp
repnz
and
adc
in
sbb
pushf
stc
mov
or
icebp
push
sbb
jae
xchg
mov
lahf
movsb
and
in
repz
sahf
lahf
aad
ljmp
out
es
into
std
xchg
ficoms
and
out
aad
xchg
push
xchg
add
lock
scas
push
or
push
lds
mov
cmp
cmp
in
es
std
aam
xorb
or
cmp
dec
mov
cwtl
xor
in
mov
ret
fadd
jmp
les
or
inc
loopne
jne
decb
push
pop
add
inc
sbb
push
xchg
pusha
std
push
jle
stos
scas
inc
mov
bound
js
test
aad
mov
fadd
jp
cltd
mov
lret
push
imul
mov
bound
jne
flds
pop
adc
xor
mov
fsubrs
xlat
lcall
mov
mov
stc
test
push
mov
movsl
mov
sub
mov
mov
pop
pop
xchg
dec
cmp
jne
xor
lahf
leave
pop
xlat
lret
fcoml
pushf
mov
adc
mov
inc
pop
daa
add
addb
pusha
jbe
add
push
es
aas
insb
rcl
call
and
lea
pop
lahf
out
sahf
ja
inc
dec
mov
imul
mov
adc
jno
les
cmpsb
sbb
xchg
mov
sbb
sub
aam
mov
js
js
pop
js
sbb
dec
cmp
mov
mov
add
cmpsb
and
je
and
mov
mov
or
pop
popf
jo
mov
mov
sbb
xor
repz
dec
cwtl
xchg
cli
repnz
pop
push
jnp
mov
lds
scas
fsub
or
mov
dec
test
insl
rolb
fiaddl
xchg
pop
mov
jo
xchg
and
out
dec
xor
test
lea
xchg
sbb
aam
dec
pop
mov
inc
jno
inc
ds
adc
and
stos
adc
dec
xchg
popf
push
inc
xor
mov
pmaxub
andl
mov
aad
nop
inc
add
test
in
sub
mov
out
mov
cmp
test
mov
cli
sub
outsl
insb
scas
add
adc
addl
sbb
jbe
adc
fildl
push
sbb
lods
cwtl
push
insb
xchg
xor
push
fistps
out
xchg
ljmp
movsb
add
xor
sbb
enter
or
xchg
jl
adc
cli
in
sbb
divl
into
lock
nop
cmpsb
push
mov
push
bound
aam
add
mov
ja
rcl
add
or
sahf
shll
popa
mov
scas
sarl
lods
aas
cmp
andb
out
or
nop
shll
rclb
sub
out
scas
push
in
xlat
lds
test
push
ret
and
push
mov
repnz
push
add
add
sub
js
cli
mov
mov
add
push
mov
sarb
dec
fisttpl
idivl
mov
xor
pop
stos
xchg
cvttps2pi
inc
jnp
push
and
cwtl
les
sub
mov
pop
jno
pop
push
mov
jl
aaa
das
mov
stc
test
mov
ret
and
xchg
out
push
or
mov
out
data16
xor
dec
pop
popa
xchg
test
das
dec
mov
inc
sbb
fwait
pop
repnz
xor
jle
shlb
cmp
push
fistpll
dec
adc
jle,pt
xor
mov
push
cmpsb
in
fbstp
mov
scas
or
xor
arpl
pop
mov
test
xor
xor
inc
cld
pop
sarl
xchg
insl
lods
pushf
andb
add
sbb
mov
mov
push
and
inc
xchg
dec
pushf
and
pop
dec
and
mov
outsb
fwait
pop
imul
nop
fistps
pop
fmul
dec
inc
es
mov
add
jbe
inc
push
xor
test
bound
jg
sub
dec
jg
movl
jg
jns
or
hlt
lret
adcl
cmp
dec
push
aam
push
std
inc
cmp
fisubrl
ds
jno
jp
pop
xor
ficoms
les
cmp
sbb
addr16
je
sbb
add
sahf
rclb
test
push
mov
clc
int3
clc
jo
icebp
add
inc
call
rorl
push
sub
popa
test
cld
sti
jo
inc
jecxz
lods
inc
loopne
sbb
in
aaa
testl
decb
pushf
mov
imul
test
mov
dec
pusha
imulb
push
add
push
mov
jno
loopne
pushf
clc
jg
outsb
sbb
ljmp
push
cltd
mov
enter
cmc
movsl
jg
pop
nop
pusha
sbbb
or
xchg
push
outsl
clc
pop
push
addr16
xchg
adc
xchg
int3
pop
pop
pusha
push
push
sti
in
jno
aad
and
sbb
push
ja
stos
lret
in
sub
add
enter
or
mov
or
xchg
mov
sbb
mov
lret
or
adc
insb
js
xchg
dec
lret
dec
addr16
imul
inc
ss
insb
loopne
xchg
push
daa
outsl
xor
xchg
shr
xor
jp
cwtl
jl
or
inc
or
lods
cmp
mov
adc
shrb
jo
mov
jne
xor
in
jne
inc
loopne
mov
adc
repz
insl
js
cmp
xchg
adc
adc
xor
mov
xchg
mov
sub
jb
sbb
sbb
jne
popa
sbb
xchg
or
push
push
and
stc
xor
shr
mov
sub
or
pop
subl
test
lret
mov
mov
cs
pop
mov
push
mov
add
mov
sar
imul
outsl
jbe
repz
or
ja
push
lods
repz
push
daa
enter
ret
cld
repnz
out
insl
cmp
fildl
jb
shlb
jle
scas
or
out
ja
or
movsl
push
shll
sub
or
cmp
dec
fidivrs
leave
fdivs
xor
dec
gs
and
and
shl
nop
leave
std
lahf
call
cmp
inc
lds
shrb
cmp
mulb
in
outsb
mov
cmp
mov
sahf
or
or
xor
and
xchg
pop
arpl
cli
mov
push
insl
sbb
loope
pop
inc
jg
sbb
xor
scas
repnz
xor
jns
sbb
clc
dec
mov
iret
dec
mov
pop
jne
push
push
call
leave
sub
out
jne
ss
clc
ljmp
pop
dec
mov
sbb
cmp
mov
inc
mov
loop
cmp
xchg
je
jmp
sbb
inc
pop
lcall
inc
sarb
dec
pushf
adcb
xchg
cltd
aad
adc
nop
push
adc
ja
sar
and
xor
push
adc
test
mov
xor
xlat
mov
sbb
inc
pop
cwtl
jle
ficompl
jle
not
rolb
lds
loop
inc
loopne
scas
je
out
adc
stos
lcall
aaa
inc
scas
xchg
scas
pop
inc
pop
ret
and
and
in
jmp
cli
mov
stos
cmp
in
dec
mov
dec
mov
mov
xchg
das
call
movsb
fidivl
adc
cmp
fadds
je
xchg
or
fstpt
and
dec
mov
jle
jg
sbb
aam
inc
movsl
in
test
push
shll
punpckhwd
daa
cmpsb
inc
sarl
insb
jl
gs
or
jp
lock
orl
bound
aad
inc
adc
mov
ljmp
ss
cld
js
inc
inc
fstp
sub
jmp
pop
rolb
mov
push
aaa
and
mov
addr16
dec
sbb
mov
push
xchg
outsb
movb
push
mov
les
lcall
sbb
pusha
pusha
push
iret
cmp
add
jne
add
mov
mov
pop
ljmp
mov
sahf
mov
into
dec
enter
sbb
xor
dec
scas
icebp
je
dec
pop
fsubrs
and
jne
push
rcll
rorl
outsl
loop
insl
pushf
lret
pop
stos
call
jnp
iret
fdivl
mov
mov
xchg
xchg
fwait
pop
gs
ret
sbb
add
mov
mov
scas
lods
cmc
stc
push
into
and
push
pop
std
cmp
adc
add
sahf
test
iret
jge
out
push
dec
fs
sbb
add
dec
or
sbb
scas
movsl
or
filds
and
cmpsl
int
faddl
addb
push
sbb
lcall
mov
stos
xor
jecxz
popl
sbbb
sbb
fstpl
in
xor
and
arpl
movsb
sub
sub
sahf
mov
test
mov
popa
lods
push
int3
push
inc
push
pop
mov
sub
dec
lods
pop
icebp
in
bound
shlb
sbbl
sti
pop
jno
insl
pusha
stos
jecxz
insl
jno
pop
jb
in
push
and
das
pop
test
mov
pop
iret
popf
jne
mov
mov
mov
cltd
jno
ret
push
inc
shl
and
or
shl
popa
push
pop
int3
lods
inc
loop
and
push
setae
out
test
addl
jp
hlt
or
jp
testl
push
and
mov
punpckhdq
pop
daa
cli
cli
adc
out
js
lods
adc
addr16
repnz
mov
shr
in
out
pop
mov
nop
lahf
test
cmp
arpl
inc
pop
mov
mov
jne
push
inc
jecxz
lgs
mov
fcomps
ljmp
and
ljmp
lods
idivb
sbb
cmp
fildll
sbbl
shll
add
fs
mov
fs
push
xor
push
sub
fistpl
and
jb
rcl
xchg
arpl
rol
mov
fs
je
inc
jg
popa
pusha
sti
xchg
add
cmp
outsb
mov
pop
xchg
bnd
cmpb
lods
xchg
stos
xchg
test
xchg
stos
cmovns
sub
std
shll
aad
and
fdivl
loopne
fcmovu
xchg
xlat
xor
in
inc
and
int3
out
xchg
mov
jo
test
pop
ffree
lds
jns
js
loopne
daa
jno
lahf
jp
adc
pop
ret
rcl
cmpsl
sbb
in
xor
mov
leave
lea
shlb
mov
insl
loope
inc
orl
or
ljmp
cld
out
pop
push
sub
add
dec
rorb
fistl
mov
xor
sub
jo
pop
dec
rorl
loop
xor
mov
or
ss
inc
and
outsb
dec
test
jecxz
xchg
jns
cmpsb
push
push
imul
neg
sahf
jo
or
call
in
push
arpl
test
sbb
outsb
add
in
xchg
outsb
xchg
adc
dec
loopne
imul
adc
cmpsl
rcr
rcrl
std
rol
dec
jae
xchg
pop
pop
subb
add
sbb
mov
daa
icebp
mov
test
adc
dec
cpuid
leave
xor
mov
lods
out
cmp
inc
jb
repnz
push
sbb
jmp
insb
arpl
mov
lret
push
andb
in
sbb
mov
stos
cmp
sbb
fwait
jg
mov
das
dec
movsl
add
mov
data16
testl
sub
std
int3
movsl
cmp
int3
stc
and
jl
xor
xchg
nop
pop
mov
mov
outsb
rclb
outsl
inc
pop
rep
push
inc
lret
sarl
std
mov
cmc
sub
cmp
je
lret
loop
sbb
sub
push
push
in
pop
push
jae
cs
mov
mov
jg
adc
mov
jge
mov
adcl
add
jl
adc
push
xor
add
inc
xor
dec
cmp
or
pop
add
push
mov
pop
loopne
add
pushf
dec
cmpsl
mov
xor
icebp
jo
jne
dec
lcall
mov
push
arpl
push
lretw
sbb
outsl
mov
mov
outsb
scas
stos
je
bnd
sar
sub
sti
ss
dec
cmp
lahf
pop
sbb
aam
xor
fidivs
lods
popf
push
lods
jecxz
in
jecxz
cli
or
push
inc
in
adc
and
icebp
jo
std
jo
mov
and
scas
arpl
mov
pop
iret
cmp
incl
dec
mov
sarl
inc
mov
jl
rorb
dec
push
shlb
mov
dec
repz
in
shrl
xchg
sbb
mov
ret
popa
sbb
arpl
testb
imul
loop
pop
lret
push
testb
retw
inc
pop
iret
dec
adc
mov
insl
fists
in
lods
movsb
inc
aaa
fiadds
arpl
cmpsb
push
enter
inc
push
loop
xchg
lret
iret
xor
in
imul
loop
sbb
push
inc
clc
adc
fsts
mov
mov
mov
adc
loopne
xorb
cli
ja
out
and
inc
jge
xchg
arpl
mov
and
cmp
cld
ljmp
mov
movsl
jecxz
jae
das
xchg
mov
movl
popf
loop
addr16
arpl
mov
xchg
or
push
xlat
int
add
addr16
loopne
or
aas
xchg
loope
xor
lfs
cmp
push
fwait
mov
pop
add
mov
xchg
sbb
push
imul
xchg
aaa
bound
xchg
int3
aam
mov
mov
add
sti
push
sbb
cmc
lds
xchg
out
or
in
sub
jnp
mov
xchg
aaa
movsb
jae
imul
jo
movsl
jecxz
aam
fnsave
test
sbbl
or
in
jno
or
mov
inc
add
mull
xchg
sahf
adc
push
inc
rorl
add
xchg
jge
mov
push
ret
loop
dec
scas
mov
inc
pop
sub
sti
dec
insb
fisttpl
daa
cmp
movsl
xchg
out
dec
and
and
in
mov
push
jp
es
sbb
dec
in
xor
popf
clc
inc
mov
movsl
cs
jns
sub
inc
push
cmpb
mov
loop
sub
loop
adc
mov
adc
das
xor
iret
cmp
lods
mov
aas
add
gs
adc
andl
arpl
fs
iret
mov
push
pop
sub
sbb
repnz
movsl
lea
cmc
sub
repz
psrld
xchg
push
ja
mov
sub
fcompl
mov
or
lock
scas
xor
stos
daa
popf
inc
pop
ja
cmp
cmp
jmp
mov
mov
pop
ds
cmp
inc
xor
adc
icebp
lods
cmc
push
xor
cs
push
add
ret
dec
cmp
ljmp
addr16
adc
dec
outsl
and
or
aas
outsb
mov
sub
and
mov
cmc
mov
inc
sbb
jb
add
mov
stos
xchg
loopne
int
dec
mov
mov
hlt
and
cld
cmpsb
or
fsubs
push
or
daa
stos
mov
fsubl
negl
xchg
cmpsl
loop
test
xor
mov
sbbb
cmp
imul
jg
jbe
pop
daa
dec
pushf
add
cmp
outsl
jl
and
shll
jl
or
or
leave
adc
test
mov
lcall
sti
repz
and
cmp
cltd
xchg
jns
fucomi
scas
imul
pusha
not
or
jb
push
xchg
lea
cmp
stc
and
and
pop
adc
outsb
ja
dec
sahf
or
mov
sub
push
shll
movsl
loope
push
adc
lods
jl
loop
jecxz
imul
jge
jge
in
adc
notl
ret
lods
and
push
and
sub
mov
pop
divb
inc
or
sbb
lods
lcall
add
out
jp
or
mov
xor
push
mov
mov
ret
sub
mov
arpl
cmp
jge
jb
jg
test
jne
add
je
sti
repz
mov
movsl
mov
push
push
push
dec
mov
add
sub
or
xchg
sub
data16
push
dec
sahf
or
mov
in
cltd
les
shll
in
pop
out
in
rolb
and
sub
sub
adc
dec
xchg
aam
inc
mov
xlat
imul
cmp
cli
dec
jne
mov
sub
push
inc
add
sub
cld
xor
inc
mov
jns
mov
aaa
mov
jmp
xor
aad
test
hlt
iret
push
inc
pop
inc
scas
cld
test
dec
cmp
and
and
mov
decl
lods
incb
sub
stos
push
jbe
repnz
shll
jns
gs
and
adc
xchg
scas
out
cmp
pop
repnz
stos
loop
jg
mov
cmpsb
scas
xor
lods
out
pushf
add
add
sahf
fcomip
xchg
int
movsb
mov
mov
mov
cmp
int
out
cmc
sahf
mov
addr16
or
nop
test
lret
or
pop
cmp
xchg
mov
pushf
add
mov
dec
adcb
stos
cli
jb
sbb
sub
fcmovnu
test
mov
and
jmp
and
cmp
lea
movsb
adc
cmp
movsb
rclb
or
xor
arpl
ds
mov
or
lods
insl
xchg
movsl
jmp
pop
insb
adc
xor
pop
mov
imul
cli
neg
or
mov
repz
ror
and
pop
into
cmp
shll
jmp
loope
std
pop
in
adc
add
stos
outsb
or
fisttpll
out
jno
sbb
xchg
lcall
outsb
psubsb
test
rcrb
stc
pop
jl
scas
test
test
es
sbb
cld
scas
mov
push
mov
cmp
add
inc
fucomp
gs
mov
mov
sbb
loop
cld
pop
sub
jno
dec
mov
fcompl
lret
mov
add
loope
and
xor
loope
and
mov
idivl
lcall
mov
scas
mov
fidivs
fmull
ds
and
call
aam
inc
stos
xchg
shrb
cmp
add
mov
aaa
sti
or
in
dec
jns
or
sub
cmpsl
mov
in
ljmp
push
mov
sbb
dec
mov
dec
xor
repnz
inc
and
aam
sbb
sbb
xchg
sub
stc
mov
pop
dec
std
fwait
fwait
jecxz
jl
xorl
test
jns
mov
movsl
adc
insl
jo
push
sub
and
stc
and
cltd
adc
inc
xlat
push
jnp
sub
shll
pushf
inc
icebp
flds
push
mov
sub
int3
in
mov
mov
and
or
mov
mov
cmpsl
scas
push
jmp
inc
scas
add
pop
into
icebp
stos
and
mov
lcall
and
adc
and
imul
bound
jne
jb
das
repnz
test
das
xor
jb
or
out
push
sub
lods
dec
mov
insb
inc
jnp
popa
cmc
aaa
fwait
loop
out
xor
iret
cmc
in
inc
mov
xor
cmpsl
adc
aad
sbb
cs
xor
xor
mov
sbb
or
or
push
xchg
aad
mov
in
xchg
add
mov
mov
out
jecxz
insb
pop
in
test
test
adc
mov
je
push
fdivrs
push
fisubl
sub
mov
sub
inc
push
jae
inc
loope
call
push
sub
dec
repnz
pushf
jbe
cmp
sub
shlb
xchg
cwtl
lods
push
rol
fsubl
add
pop
jl
ss
das
orb
enter
inc
jb
sbb
pop
arpl
sbb
aad
sbb
adc
insb
mov
lods
orl
push
mov
jnp
mov
adc
in
out
jne
add
push
jne
daa
jne
cs
inc
in
push
xor
or
pusha
ret
push
pop
lods
adc
jo
adc
movsb
cmovb
push
push
jle
icebp
push
decl
or
sti
in
loope
jmp
and
dec
add
and
inc
add
int
mov
jmp
out
addr16
lods
xor
imul
jbe
or
add
scas
mov
push
mov
shrl
outsl
iret
adc
pop
push
stos
cmpsb
cmp
push
mov
icebp
mov
in
xor
xchg
loop
sub
imul
std
popf
dec
shll
cmp
mov
jl
popf
dec
push
sbb
cltd
repz
adc
cmp
adc
sti
fsubrs
mov
icebp
adc
mov
push
dec
dec
cmp
pusha
jle
jbe
popa
stc
push
push
mov
mov
sbb
popa
lock
or
mov
out
sbbl
lds
repz
out
pop
in
add
je
iret
xchg
sub
std
push
jge
sub
int
orb
jbe
popa
lret
popa
push
cmp
push
mov
popf
je
loope
stos
sbb
fdivrl
inc
fstl
fiadds
outsb
outsl
xchg
dec
sbb
ficoml
xlat
add
loope
mov
cwtl
or
mov
iret
in
leave
sbb
pop
pusha
pop
loop
jmp
mov
stos
jnp
lret
rcr
ss
jg
ljmp
add
int3
pop
cltd
in
ja
mov
inc
leave
fistl
aam
sub
push
xchg
lret
and
ss
outsl
int3
mov
fstps
xor
int
imul
fadds
pop
arpl
jge
inc
sbb
mov
daa
out
adc
mov
mov
test
iret
ret
iret
pop
ljmp
sbb
std
lea
mov
xor
xor
mov
mov
mov
adc
dec
add
insb
data16
mov
es
add
ljmp
jo
jo
test
cmp
cmp
in
stos
repz
mov
mov
pop
fs
sub
add
incl
pop
mov
mov
aas
sub
jle
addl
jae
lcall
inc
bound
das
xchg
xor
add
cli
sti
sub
xor
sbb
int3
in
pop
out
lds
push
pop
sbb
stos
pop
test
iret
and
inc
lods
icebp
dec
pushf
cltd
test
cmpsl
or
int
cmp
cmpsl
iret
add
mov
movsl
push
inc
cmpsb
dec
push
flds
jbe
outsb
lret
jg
xchg
cld
cmp
sbb
cmp
jge
pushf
int3
cmp
lcall
inc
add
push
mov
popf
dec
jnp
push
hlt
jecxz
fimull
mov
jg
decb
fldl
rcll
xor
or
sahf
mov
dec
ss
in
fsubs
hlt
mov
inc
in
test
push
cltd
mov
dec
lret
pop
sbb
mov
push
test
push
inc
mov
push
iret
sbb
lock
dec
lahf
mov
lods
roll
out
inc
std
dec
test
sub
rclb
outsl
xchg
lods
inc
adc
aas
or
loopne
jb
js
and
clc
pop
ret
cmp
hlt
xchg
stos
out
shr
insl
ficomps
insb
sub
xor
dec
out
push
dec
pop
xchg
mov
enter
or
cwtl
mov
inc
xchg
jecxz,pt
in
push
mov
cli
test
push
dec
mov
aam
push
test
jne
fndisi(8087
xchg
sub
or
cmp
xlat
push
sub
xchg
xor
push
mov
fnstcw
jns
push
lods
mov
in
cwtl
xchg
rcrl
xorb
fcmovne
lods
popl
inc
sarb
dec
dec
loop
mov
add
inc
rorl
out
in
jg
daa
jmp
sbbl
and
in
sbb
fsubl
mov
lahf
pushf
pop
out
ds
push
mov
fsubrs
pop
lods
outsl
test
push
jecxz
stos
pop
cltd
jbe
scas
cmpsb
mov
sti
mov
inc
stos
cmp
ret
fs
ljmp
mov
out
xchg
jge
test
or
adc
push
out
ret
push
das
jmp
dec
or
push
out
pop
mov
cmp
dec
scas
cli
pop
fldt
mov
jge
cmp
push
pop
cmpsl
inc
xchg
inc
mov
xchg
call
sbb
fnstenv
or
inc
push
shl
mov
jbe
es
shrb
xchg
mov
pop
cmpsb
mov
fisubl
test
pop
sub
cmp
inc
in
sbb
dec
cmpsl
jge
mov
popa
xor
sub
or
jnp
jns
inc
int
div
mov
out
jbe
inc
add
mov
fidivl
dec
pop
sub
mov
rcll
or
daa
jl
dec
cli
push
bound
jg
repz
cmp
rorb
cmp
or
or
mov
std
das
mov
mov
mov
mulb
jnp
mov
bound
out
push
xchg
into
cmp
arpl
mov
aad
ss
pushf
cmp
add
push
push
popa
adc
setg
adc
and
lock
add
hlt
imul
inc
inc
subl
push
dec
faddl
repz
or
push
xchg
pop
int
mov
test
mov
dec
dec
mov
lea
or
cmp
sub
aaa
pop
add
inc
mov
gs
mov
pop
test
add
push
in
jo
dec
xchg
cmc
into
push
sub
dec
ret
daa
sbbb
daa
mov
fadds
or
adc
lret
insl
shlb
or
rcrb
aaa
add
divb
dec
in
in
mov
out
inc
shl
jno
andb
push
jnp
xor
pop
imul
xor
cmp
jle
div
pop
insl
and
jnp
cwtl
sub
mov
pop
std
loopne
js
push
into
mov
cmp
pop
mov
xlat
test
pop
mov
es
into
or
mov
push
rorb
jno
aam
mov
sub
jns
ret
mov
pop
rolb
and
cmp
bound
sti
xorb
xor
inc
arpl
mov
jnp
xchg
jae
sbb
sub
sbb
in
sbb
cmp
call
inc
imul
inc
int3
sbb
or
adc
jne
push
xlat
push
xor
mov
push
pop
adc
testb
out
cld
or
enter
inc
hlt
sub
xchg
adc
repnz
bound
dec
xor
and
cmp
adc
pop
mov
push
ss
clc
loopne
add
pop
test
inc
in
pop
lds
scas
sub
xor
cwtl
mov
fidivs
xchg
jp
loope
stc
and
shlb
or
mov
cmp
imul
nop
inc
xlat
mov
scas
fstpl
dec
std
faddl
bound
jns
out
arpl
sbb
push
cs
cmp
push
in
in
imul
mulb
inc
shl
negl
or
fstps
and
push
cmp
int3
scas
ret
mov
xchg
stos
ds
xor
sbb
adc
push
sub
add
sbb
repnz
cli
jge
mov
das
inc
mov
mov
lds
pusha
divb
mov
fwait
jecxz
aad
fsubr
pop
push
popf
cwtl
xchg
xchg
pop
push
xchg
movb
in
and
mov
jmp
fcoms
scas
push
xchg
mov
cltd
fcoml
aad
jmp
ficoml
js
pop
int3
push
dec
dec
cltd
jmp
popf
pop
loop
mov
cmp
lods
pop
mov
jb
mov
pop
std
jmp
cmpsl
sti
data16
jmp
or
fldcw
aas
and
leave
dec
add
stos
xlat
and
inc
lds
popf
fwait
scas
lock
cmc
cwtl
mov
gs
add
mov
jg
xchg
pop
insb
xorl
or
jp
dec
mov
pop
or
loopne
sub
movsl
mov
dec
pop
jge
xchg
add
hlt
mov
adcl
insb
dec
adc
xor
mov
pop
jmp
jecxz
mov
jmp
add
dec
pop
inc
imul
mov
jae
push
xlat
cmpsl
cmp
pusha
mov
ss
hlt
mov
sub
cmpsb
cmp
cmp
paddb
loope
cltd
dec
adc
fsubrl
mov
jmp
mov
and
add
xor
mov
pop
repnz
cmp
int
movsb
jnp
jmp
divl
xchg
mov
jnp
lock
jmp
cmp
xor
out
pop
cmpsl
cwtl
mov
lea
addr16
lcall
nop
mov
aaa
out
jl
ret
cmp
xor
lods
mov
adc
js
adc
into
call
add
inc
insl
push
mov
pop
loop
and
dec
cmp
pop
mov
jle
pop
push
lods
jg
push
movsl
lret
out
fsts
inc
sbb
in
fwait
mov
lods
push
push
mov
push
outsb
int
cli
gs
cmp
xchg
jae
xor
mov
icebp
fs
leave
mov
xor
mov
mov
inc
std
mov
dec
push
jbe
in
sbb
jle
loop
add
iret
pop
lret
fnstenv
pop
cmpsb
imul
mov
lahf
js
jge
cmpsl
aam
push
xor
dec
fimuls
mov
movsb
out
jg
add
cltd
cmpl
xor
adc
popa
mov
add
push
mov
adc
inc
cs
pop
jno
xor
pop
add
lret
inc
pop
loope
push
out
je
cmpsb
sbb
ds
mov
hlt
cli
mov
push
or
xchg
jno
or
filds
sub
cli
popa
bound
dec
outsl
jecxz
cld
lcall
daa
mov
imul
dec
jp
js
lret
lods
jb
repnz
mov
lret
sbb
lret
loope
mov
lods
sbb
mov
dec
cmc
insb
mov
jge
cli
xlat
inc
jl
cmpsl
pop
insl
aaa
mov
add
sbb
push
cmp
xchg
cmp
push
xlat
int3
fs
push
inc
adc
mov
jbe,pn
mov
jne
xchg
jp
jae
pop
fnstenv
loope
lcall
pop
scas
fwait
mov
push
jle
loope
mov
dec
sub
mov
cmp
pop
idiv
shrl
cmp
mov
test
je
ljmp
adc
jne
and
cmp
rep
aam
jb
cmpl
loop
mov
cli
add
jae
mov
sub
stc
aaa
mov
sub
and
aas
ja
shl
or
push
sbb
lods
inc
dec
addr16
mov
int3
jge
or
xchg
mov
iret
mov
icebp
mov
rcrl
dec
add
leave
shlb
dec
jne
nop
xor
cmp
stc
dec
inc
subl
or
cmp
repnz
cwtl
test
loope
xchg
iret
push
popf
pop
scas
ja
xchg
movb
lret
imul
das
adc
inc
sub
mov
jl
mov
adc
jge
pop
test
adc
add
sub
jl
jmp
or
sbb
iret
cmp
push
mov
jb
fs
icebp
movsl
mov
int3
fdivs
movsl
pop
adc
outsl
sub
sti
add
dec
fildll
xchg
outsl
cmc
das
adc
push
push
add
movzwl
insl
repz
mov
cs
lcall
push
popa
lods
leave
lds
dec
jae
hlt
scas
or
ret
inc
ret
inc
int3
lds
clc
mov
xchg
xchg
cmp
movsl
cmc
pop
into
mov
out
pop
inc
sub
in
fsts
sbb
and
fdivl
push
ret
int
mov
push
and
rorl
data16
add
lcall
imulb
or
mov
jno
stos
pop
data16
cmp
sbb
fimuls
add
insl
ss
adc
gs
es
sbb
scas
mov
mov
inc
push
sar
push
ja
cmpsl
jle
pop
push
in
pop
lea
cmp
fld
jp
mov
xlat
or
cli
leave
xor
dec
jb
stc
sub
into
mov
and
sub
push
sbb
shll
daa
push
mov
test
add
gs
mov
mov
push
or
xor
inc
inc
dec
mov
or
scas
faddl
cltd
mov
dec
mov
bound
enter
mov
inc
scas
or
xchg
lret
pop
mov
mov
stos
loopne
adc
dec
ljmp
mov
bsf
jmp
dec
xor
mov
and
shlb
out
scas
lock
cmp
add
mov
outsl
push
mov
outsl
cld
add
mov
mov
lods
mov
ja
test
push
pop
add
xchg
mov
scas
fld
out
cmc
daa
xor
and
jo
out
das
sub
pop
xorb
lret
outsl
sub
pusha
dec
jl
add
scas
cmp
jl
jge
mov
outsl
loop
xchg
scas
cmp
leave
test
test
and
mov
imul
add
push
lret
sub
movsl
adc
lods
push
push
mov
push
pop
add
insl
aaa
xchg
aas
cmp
sbb
add
sub
ds
and
cmp
jb
add
cmpb
xor
pop
cld
pop
cmp
ror
loope
jge
sbb
jae
inc
aam
pop
mov
rcrl
push
inc
push
repnz
int
inc
cld
push
mov
mov
movsl
mov
jge
mov
inc
pusha
insb
stos
push
mov
cmp
and
add
shrb
sub
test
aad
fcmovb
das
icebp
psubq
sbb
sub
adc
lahf
dec
gs
mov
adc
enter
or
or
mov
mov
imul
jne
xchg
sahf
dec
cmpsb
or
fwait
cmpsl
push
je
sbb
dec
leave
dec
ds
lcall
pop
adc
jo
lods
js
jmp
add
popf
enter
mov
out
xchg
push
add
out
rcr
mov
stos
aad
iret
push
shlb
mov
pushf
std
ffree
dec
xchg
sbb
mov
jl,pn
cs
add
scas
xchg
xlat
jmp
xor
pusha
push
add
stos
aas
jno
rolb
stc
stos
and
aas
in
std
les
gs
xor
test
adc
addr16
rcll
lods
add
cmp
xlat
mov
imul
ja
std
jmp
je
and
push
adc
sub
mov
jo
out
mov
mov
xchg
sbb
movsl
adc
std
fcomps
cld
push
or
mov
mov
adc
in
mov
xor
dec
loopne
mov
pop
jp
loopne
pop
fmull
mov
jecxz
mov
xchg
mov
push
int3
inc
int
fsubrl
rcll
addr16
inc
and
pop
pop
std
lcall
jle
pop
mov
je
sub
les
sbb
adc
hlt
jb
loop
lret
out
lcall
fmul
mov
or
test
xor
push
push
lcall
xchg
ss
mov
sbb
aad
xchg
pushf
adc
and
ds
dec
push
pop
jecxz
enter
pop
lods
pop
adc
addr16
xchg
cmovne
insl
and
sbb
mov
mov
push
mov
ds
dec
in
sbb
hlt
jle
sbb
popf
sarl
mov
push
shl
pop
xchg
mov
aad
cmp
dec
repnz
and
mov
pop
out
aaa
jbe
xorb
adc
dec
xchg
mov
fistps
call
xchg
bound
repz
push
mov
or
cmp
jae
add
rcrb
dec
push
cmp
addr16
fucomip
rcl
test
and
daa
int
roll
out
and
rorl
xor
dec
adc
hlt
xchg
push
cltd
shlb
pushf
sti
push
out
cltd
mov
das
iret
xchg
xchg
push
pop
sahf
lods
dec
stos
test
fisttps
imul
in
jmp
add
sub
in
addr16
or
jl
cwtl
mov
lahf
pop
sbb
or
adc
lods
lods
xchg
loopne
inc
mov
adc
inc
ret
mov
insl
inc
pop
cltd
add
lods
or
imul
fcmovnu
push
sub
xchg
jb
fnstcw
popf
loopne
add
mov
push
push
mov
cmp
stos
ja
shlb
xchg
pop
cmp
inc
loopne
mov
jbe
and
adc
xor
test
inc
jns
insl
mov
rcll
imul
and
pop
sbb
lods
out
aaa
shrl
mov
push
sbb
mov
jae
mov
outsl
mov
cmpsl
xlat
lods
sub
jo
into
sbb
adc
shrl
fwait
push
repz
mov
xor
mov
push
movb
jnp
pushf
fst
sbb
jecxz
sbbl
test
les
fdivrp
aad
add
clc
nop
fwait
dec
or
adc
mov
jo
mov
pop
stc
sbbl
fcoms
adc
mov
and
jp
das
sbb
push
nop
sub
dec
dec
cmp
adc
shll
add
push
popa
jmp
jg
xchg
ljmp
push
test
sub
loopne
in
adc
mov
cmpsl
pop
ljmp
and
push
jns
xor
aaa
push
lret
dec
adc
int
call
es
aad
xchg
daa
push
and
int
lods
ret
push
mov
or
dec
mov
xchg
add
dec
in
aam
xchg
adc
jecxz
ficompl
negl
xchg
xchg
mov
pop
decl
hlt
mov
mov
js
jge
jmp
test
lea
ds
xor
sub
ret
xorl
add
adc
sti
and
aam
pop
jno
scas
inc
pushf
add
out
into
pop
push
jg
adc
sub
sbb
stc
cmp
ja
push
mov
push
popa
les
mov
loopne
ja
mov
call
cmc
dec
xchg
ja
std
scas
mov
cmp
lds
adc
push
and
jb
and
sbb
aaa
lahf
cmp
inc
cmp
outsl
xor
rcrb
int3
mov
mov
das
xchg
adc
or
pop
rcl
shrl
xor
pop
or
cmc
outsl
and
adc
shll
xchg
and
inc
sub
sti
imul
dec
add
call
shl
stc
ficomps
inc
mov
push
jnp
rolb
mov
cwtl
scas
fnsave
mov
push
incb
add
rorb
ja
mov
adc
stos
push
cmp
std
lds
or
rclb
test
enter
dec
imul
out
push
lds
jge
xor
pop
stc
dec
notl
inc
jmp
ds
jns
cs
xchg
inc
push
ret
out
aas
fsubr
into
in
es
sbb
sub
dec
pop
cmc
aaa
popf
xchg
jg
daa
jmp
xor
or
push
mov
lea
inc
mov
lcall
fsubs
imul
loope
adc
clc
stc
and
sbb
shll
testl
cmc
test
jb
xlat
aam
jbe
pop
mov
push
mov
repz
jbe
sub
xchg
add
adc
add
push
push
orb
sbb
rolb
ror
jo
mov
jo
dec
adc
ret
inc
in
repz
inc
lea
jmp
pusha
jge
cmpl
arpl
xlat
inc
mov
xchg
or
adc
xorb
rcr
xchg
jbe
push
int3
inc
mov
mov
pop
jo
aaa
dec
gs
sub
pop
out
orl
mov
imul
mov
sub
push
and
mov
mov
repnz
jbe
std
push
cmp
mov
repnz
fldl
and
je
sbb
out
inc
sbb
pop
mov
pusha
testl
scas
loop
jb
jp
jne
add
test
sti
mov
rorl
arpl
enter
pop
mov
jne
cmp
cld
adc
add
mov
push
mov
data16
pop
sbb
dec
daa
lcall
cli
and
mov
cltd
mov
imul
sahf
sbb
shl
cmp
cmpsb
ljmp
mov
jmp
int
and
and
jns
sbbb
adc
dec
fwait
push
sti
push
fwait
pop
fldt
xor
loopne
insb
dec
popa
jg
mov
xchg
adc
ja
cmpsl
and
jmp
lret
dec
maskmovq
idivl
cmpsb
mov
inc
dec
and
out
aas
mov
add
push
cmp
call
bound
test
dec
inc
call
mov
mov
insl
in
mov
test
rcl
lahf
inc
push
pop
aas
jg
out
in
lds
and
outsb
sahf
pop
pop
sbb
mov
sub
push
jmp
subl
jmp
roll
inc
cmc
jns
loopne
sub
sub
es
jg
dec
add
das
fidivrs
daa
enter
cmp
loope
mov
push
addr16
mov
mov
ret
mov
pop
ds
cmp
sbb
xchg
mov
pop
inc
cmpsb
out
ret
ja
xor
outsb
cmp
pusha
cs
mov
pop
sti
xchg
das
cmp
ss
in
dec
sub
aam
push
jo
push
cld
jns
push
popf
and
mov
mov
push
outsb
ret
cs
push
cmp
lcall
ss
xchg
pop
into
in
inc
mov
aas
loop
mov
mov
orb
inc
pop
and
lods
jbe
aam
adc
xchg
pop
mov
aaa
bnd
xchg
test
pop
mov
mov
cmp
jp
push
inc
add
mov
mov
cld
test
jae
out
xor
mov
mov
pushf
xchg
xchg
mov
xchg
push
dec
and
pop
sti
add
enter
xchg
nop
xor
lods
add
dec
or
out
inc
dec
out
popl
dec
inc
dec
mov
cmp
xchg
mov
jp
and
pop
dec
inc
xor
xchg
xchg
out
sti
std
aas
cmp
xchg
or
mov
xlat
imul
roll
mov
icebp
bound
mov
int3
andb
dec
fsubs
inc
lds
mov
sub
js
sub
ljmp
stc
das
cmp
mov
push
dec
repnz
rcrl
adc
fsts
pop
adc
pop
mov
std
out
mov
cmc
xchg
scas
push
inc
das
push
rcll
insb
inc
cmpsb
int3
mov
adc
jg
ret
and
loope
add
inc
mov
pop
movsb
lds
xchg
ret
sub
xchg
mov
push
scas
cmpsb
imul
xchg
cli
dec
mov
jae
in
xor
in
pop
cmp
lret
sub
sbb
pushf
xchg
adc
cmp
jae
sub
pushf
in
outsl
orl
mov
in
pushf
sti
out
mov
ds
int3
adc
scas
aas
arpl
adc
test
jmp
cs
cmpsl
mov
dec
adc
jg
jmp
leave
lds
hlt
bound
mov
mov
jnp
call
cmc
into
ds
fisubl
pop
xor
loop
int3
pop
ret
cltd
cmpl
fsub
pop
add
cltd
push
test
xor
xchg
daa
xor
inc
mov
mov
or
mov
int3
sbb
mov
ret
pop
fldcw
enter
mov
push
hlt
xchg
push
sahf
sbb
inc
aam
add
je
je
and
xchg
push
push
dec
add
mov
pop
fidivs
daa
popa
mov
adc
aam
hlt
pop
iret
cs
pop
sub
rorl
cmp
dec
rcrb
xchg
or
inc
scas
xchg
sbb
fnstsw
nop
les
nop
addr16
xchg
gs
inc
lret
add
lods
mov
pop
rcll
mov
ja
pop
dec
add
inc
or
lods
mov
sub
cmp
ds
add
out
and
lcall
cmpb
je
dec
outsl
subb
push
mov
sub
pop
mov
sahf
sbb
adc
cwtl
and
push
stos
adc
movsl
jmp
pop
loope
stos
adc
aaa
test
or
test
out
and
xor
lds
sub
or
jl
cmp
daa
fists
jne
jo
xor
jle
or
pop
jecxz
mov
ror
in
or
sbb
loopne
mov
xorb
mov
jg
jne
jne
addl
mov
xchg
dec
in
lds
xchg
iret
out
movsb
add
inc
mov
enter
add
icebp
mov
cmpsl
mov
mov
mov
fsubr
adc
pop
ja
out
push
in
daa
movsb
sbb
pop
pushf
inc
xchg
out
push
lahf
push
iret
pop
push
jp
sbb
daa
sub
inc
and
and
push
in
mov
lcall
loop
mov
mov
xchg
pop
jne
adc
inc
fld
adc
cmpsl
fsubl
mov
test
push
addr16
add
cli
mov
lret
adc
sbb
push
test
inc
xor
pop
mov
or
popf
mov
ret
addr16
cli
xor
sti
rorb
mov
pop
pop
test
jnp
or
shlb
cmovge
push
ret
xchg
inc
leave
xchg
gs
mov
cmc
sbb
pop
sahf
popa
arpl
mov
loop
test
or
fldenv
cmc
pop
stc
xchg
inc
repz
mov
jnp
je
xor
pop
xchg
or
insl
or
sahf
addl
cmp
xchg
push
shll
push
jmp
lahf
cwtl
icebp
cs
mov
mov
fmulp
inc
sbb
test
lret
xlat
sbb
sub
push
mov
movsb
jae
pop
into
inc
adc
adc
jp
and
jb
mov
dec
inc
mov
xor
test
repnz
xchg
and
out
push
fstps
lret
je
je
in
je
pushf
inc
lret
call
dec
xor
aad
mov
imul
sahf
loopne
movsb
pop
insb
pusha
lea
jg
adc
stos
cli
int3
mov
popa
lock
ljmp
imul
adc
lahf
cld
pop
call
lea
jge
push
mov
or
das
push
fbstp
or
mov
test
mov
fcompl
int
arpl
gs
mov
xor
lahf
insb
push
inc
xor
push
push
sar
sub
je
mov
int3
call
adc
pop
pop
leave
movsl
inc
pop
subl
mov
das
insl
jns
push
scas
in
lds
sahf
jbe
ja
sub
mov
adc
int
adc
xchg
and
aas
mov
cmc
popf
aaa
pop
aaa
into
jnp
in
ret
cmpb
sub
inc
mov
push
jle
fsts
scas
adc
mov
mov
jnp
imul
ja
add
cmp
in
addl
in
inc
mov
add
addr16
decb
pop
adc
sbb
pop
xlat
xacquire
in
pop
rolb
jo
pop
sti
scas
mov
pop
push
cmpb
addb
or
cmp
iret
lahf
add
mov
inc
add
mov
incl
test
or
inc
popa
push
into
inc
pop
dec
cmpsb
mov
aam
cmpsl
jns
mov
loope
adc
cmp
int
out
pop
mov
gs
adc
xchg
iret
xor
pop
xchg
fwait
cmpsb
aaa
scas
push
in
mov
lods
les
xlat
pop
scas
adc
outsl
popf
mov
or
cmc
les
cmp
mov
dec
push
jmp
int3
cmpl
jmp
imul
add
movsb
xor
adc
pop
dec
inc
inc
adcl
insl
hlt
sahf
das
or
cld
and
jecxz
fsub
jo
shlb
sbb
ss
push
fs
mov
pop
cwtl
mov
sbb
ss
and
mov
cwtl
add
loopne
dec
and
fsubs
mov
add
pop
je
outsb
test
pop
pop
jno
and
add
pusha
pop
pop
dec
std
add
sub
je
pop
lock
leave
in
fimuls
inc
ja
scas
add
popa
test
add
loop
imul
fs
ljmp
xor
jnp
sbb
mov
pushf
icebp
cmpb
int
cld
fldcw
and
push
push
test
push
cmp
mov
insl
fdivrp
and
mov
and
or
cmpsl
xor
and
xchg
adc
jp
test
scas
out
inc
jae
push
jl
repnz
scas
xchg
pop
or
add
pop
scas
cli
ljmp
and
scas
xchg
push
loop
push
adcl
shrb
dec
ja
push
mov
jg
push
lret
inc
lret
or
addr16
mov
divl
or
cmp
push
jge
xchg
iret
mov
popf
mov
sub
mov
call
adc
mov
in
or
inc
jb
fidivrl
xor
cmp
mov
mov
xor
and
pop
loop
popa
adc
mov
ret
dec
flds
in
lcall
xchg
pop
and
pop
fs
jnp
and
or
int
scas
imul
and
fcompl
lcall
jae
dec
adc
ja
je
or
xchg
mov
mov
mov
or
cmp
out
std
pop
cs
mov
inc
insb
and
jle
data16
push
idivb
loop
push
je
out
loope
cmp
pop
out
mov
sub
adc
mov
outsb
out
push
enter
sub
jg
mov
es
bound
popf
lcall
adc
cltd
sbb
imul
sahf
cld
mov
push
jno
jo
jns
std
dec
fwait
js
jnp
cmpsl
pushf
in
mov
subl
subb
daa
or
in
fisubs
mov
jge
test
shll
fists
out
jnp
in
int3
jno
xchg
lret
into
mov
mov
inc
mov
lcall
adc
adcl
dec
outsb
jge
fwait
push
push
mov
cmp
mov
mov
dec
hlt
push
aam
jne
aad
pushl
push
push
aam
test
xor
cmp
xchg
mov
add
lods
fwait
jno
and
fwait
xor
mov
call
adcl
cmc
popa
jnp
jp
push
fisubrs
push
cwtl
cmpsb
dec
out
dec
mov
pop
pop
sti
mov
fidivrs
hlt
mov
pop
repnz
sub
out
aam
imul
and
jge
fcmovnu
jno
jae
dec
lret
adc
push
rorl
ljmp
int3
xchg
pop
inc
push
or
adc
cmc
mov
out
cmpsb
and
sub
shlb
pop
xchg
imull
mov
stos
dec
ret
add
vpsubb
ficomps
in
push
idiv
mov
insl
aaa
fists
out
movsb
icebp
in
mov
push
dec
data16
aas
aaa
das
mov
cmp
insb
aad
and
dec
adc
pop
insl
mov
loope
mov
mov
sbb
jecxz
sbb
scas
bound
add
cmp
jle
sub
jmp
mov
sbb
cmp
adc
popa
mov
das
jbe
mov
mov
inc
jne
movsbl
jns
movups
sbb
ja
cmc
adc
xlat
xor
inc
sti
push
dec
push
insl
cmp
pop
xchg
adc
and
mov
out
addb
imul
mov
push
cmp
mov
mov
add
xchg
ret
or
mov
jae
scas
adc
daa
cmc
cs
aam
in
cli
pop
lahf
push
add
cmp
imul
pop
mov
lcall
sub
push
add
jmp
cmc
push
xchg
jmp
lds
mov
fsts
shll
aas
xchg
int
jne
mov
bound
ss
cld
and
lock
mov
clc
mov
in
shlb
roll
mov
hlt
pushf
jecxz
and
pop
xchg
add
notl
adc
fdivrl
xchg
test
add
and
call
pop
stc
or
mov
pop
adcl
pop
in
adc
pop
out
aaa
add
dec
into
out
in
xor
jl
in
sub
sbb
cli
std
jmp
inc
rclb
outsb
lods
sbb
push
mov
mov
ljmp
add
push
sub
and
js
xchg
fdivl
popa
test
mov
add
gs
enter
loope
dec
sub
loope
out
fucom
shll
mov
adc
or
popa
add
loop
push
inc
aas
sbb
mov
and
and
xchg
jbe
mull
or
and
dec
leave
addr16
xchg
cwtl
jmp
loop
mov
jecxz
pop
jnp
test
mov
int
fistpll
push
scas
je
or
mov
push
sahf
pushf
cmp
push
in
aaa
xchg
adc
lods
xlat
aas
jge
jmp
ficomps
sub
lcall
aad
stc
mov
mov
pop
aaa
pop
pop
jmp
out
inc
jmp
pop
jae
jl
xor
dec
pop
cli
sub
pushf
fildl
call
mov
fists
lcall
cwtl
dec
fdivrl
popf
adc
movb
inc
aaa
mov
and
movsl
jg
add
call
or
or
xchg
sti
and
push
iret
push
clc
jmp
int
inc
data16
fwait
insb
lcall
int
mov
ljmp
or
add
orb
ds
push
insl
cmpsl
mov
jge
dec
mov
dec
mov
cli
or
das
sbb
lret
cmp
jp
pop
xchg
push
push
mov
and
inc
xor
mov
lods
add
xor
loop
lret
ds
adc
mov
and
jl
rcll
mov
daa
pop
push
xchg
pop
push
cli
bound
arpl
cmp
jp
rorl
in
pop
sub
lret
cmp
shll
sub
cmp
inc
daa
mov
jle
jnp
add
cmp
xchg
movsb
sbb
in
xchg
lcall
and
mov
push
xchg
mov
add
aad
in
into
adc
adc
out
add
dec
push
repz
repz
stc
sbb
push
enter
cwtl
aaa
out
add
pop
and
aad
dec
jnp
pop
pop
repnz
mov
ds
rep
std
gs
iret
cmpsb
jecxz
sbbb
cli
das
fcmovu
xchg
out
movsl
push
rcr
imull
pop
lcall
aas
hlt
xchg
mov
dec
iret
push
rorb
mov
in
cltd
add
jno
and
repz
dec
adc
scas
out
xchg
inc
repnz
aam
mov
dec
ret
icebp
inc
jmp
jns
jo
in
dec
and
adc
pushf
push
xchg
push
mov
jnp
addr16
fsubrl
pop
mov
add
fwait
and
xlat
in
or
enter
inc
sbb
das
dec
imul
loopne
fs
pop
nop
pushf
out
int3
pusha
adc
xor
xchg
stos
mov
fnsave
inc
fsubp
test
out
mov
pop
mov
xor
jecxz
sti
mov
adc
rclb
and
jmp
aam
adc
fwait
daa
loopne
dec
xchg
inc
fs
repz
inc
aam
call
push
cmc
mov
mov
aad
cs
or
sbb
cltd
or
loope
sub
inc
sub
pop
cwtl
xchg
int3
push
in
mov
push
arpl
mov
jo
inc
and
xchg
in
lahf
jo
sahf
je
dec
push
xchg
stos
roll
cmp
cmc
jns
ds
add
fstl
shll
xchg
repnz
cmpsb
ret
push
int3
lahf
mov
push
xchg
in
sub
shrl
int
mov
scas
leave
cmc
icebp
movsl
sahf
daa
dec
dec
sbb
push
js
ret
test
pop
mov
lret
dec
dec
jl
mov
mov
cmpsb
repnz
movsb
fcompl
mov
mov
or
mov
clc
jno
push
lahf
xchg
repnz
call
xchg
sbb
decb
iret
cltd
push
jge
sbb
mov
or
pop
push
rorl
in
xchg
xor
add
out
lock
movsl
scas
add
imul
ja
jl
xchg
xchg
mov
mov
adc
imul
adc
cmp
mov
or
ss
outsl
and
jbe
add
lcall
fcmovu
fbstp
clc
std
mov
inc
pop
dec
pop
push
pop
adc
and
mov
imul
push
mov
iret
jecxz
lds
ror
or
fldl
jecxz
and
lea
insl
pushf
lret
into
int3
out
jl
sbb
push
popa
rcr
lock
cltd
jge
std
into
dec
xor
sbbb
lods
repz
pop
and
xor
jge
dec
xchg
loop
pop
mov
dec
outsl
mull
dec
and
data16
test
fdiv
and
push
jae
fisubrs
pop
aad
fisubl
inc
out
add
dec
cmp
xchg
outsl
shl
xor
sahf
test
jne
out
mov
mov
jp
mov
dec
mov
inc
mov
add
sub
sarb
gs
mov
jae
stos
adc
jmp
out
rcll
les
pusha
leave
sbbb
iret
outsb
sub
inc
divb
dec
ljmp
cmpsl
adc
fsub
jp
lret
and
int
pop
sbb
xor
punpckhwd
push
lods
mov
mov
clc
pop
mov
lds
ds
into
add
mov
mov
scas
subl
mov
sbb
scas
out
outsl
mov
test
sbb
sub
dec
scas
fldenv
dec
nop
mov
jecxz
insb
cmpl
xlat
and
scas
pop
add
cmp
push
and
aaa
out
popa
or
lcall
test
push
cwtl
repz
dec
dec
jl
scas
push
pop
fidivrl
rcr
sub
rorl
not
cltd
push
sub
out
sub
adc
cmp
jge
mov
inc
mov
fcomps
jae
pop
and
inc
inc
adc
lcall
jns
jecxz
push
add
fiadds
cmp
stos
xchg
jecxz
mov
cmp
imul
iret
push
outsl
scas
rcrl
sub
sbb
sub
mov
xor
mov
cmpsl
psrld
cwtl
clc
das
fwait
das
call
inc
out
setne
or
jge
and
aas
mov
inc
push
mov
mov
pop
sub
loope
push
sarb
insb
inc
arpl
sbb
fmulp
jge
push
mov
cmp
in
jmp
cld
and
lock
bound
fdiv
jae
loop
addl
lods
lods
mov
sbb
push
add
test
ret
pop
xchg
movsl
mov
test
jle
jns
push
or
xor
out
fstl
je
repz
gs
mov
push
jl
jae
dec
stc
cmp
push
jnp
out
sub
mov
push
out
dec
push
lods
cmpsl
test
and
sbb
pushf
xor
sbbl
movsl
out
es
mov
xchg
pminub
jno
loope
push
sub
lea
repz
ficoms
jmp
std
sti
test
xchg
dec
test
mov
int3
daa
roll
test
add
in
mov
js
std
ja
pop
jo
pop
or
aaa
adc
dec
push
bnd
cld
mov
popa
push
xchg
cmp
std
sub
sbb
mov
call
js
sahf
add
ret
ja
leave
cmp
adc
jae
stc
sbb
xchg
aaa
jno
cmp
movsb
xlat
loop
xchg
dec
int
std
mov
and
mov
pop
loop
xchg
pop
shrb
std
push
sub
and
jbe
int3
negb
add
mov
mov
or
mov
jo
out
mov
stos
dec
js
loop
jnp
lea
mov
mov
xor
andb
mov
repz
test
stc
aaa
aam
neg
or
rolb
jle
mov
icebp
rcrl
ljmp
or
push
xor
rcrl
test
lcall
stos
jmp
sti
and
cli
stc
imulb
xor
jns
xchg
xlat
adc
adc
jge
imul
xor
push
pop
push
mov
mov
inc
aam
sarl
hlt
test
push
inc
leave
loop
cltd
hlt
fistpll
sarl
sti
dec
out
mov
es
add
and
mov
jnp
jae
dec
and
gs
or
cmp
or
ret
sbb
mov
imul
sahf
sub
jge
lret
sub
mov
mov
punpcklbw
xchg
and
jo
mov
inc
xchg
jle
push
jbe
int
xchg
es
lods
xchg
sbb
sub
sahf
nop
fidivl
jl
dec
push
ss
push
sub
push
arpl
aad
lret
js
test
das
mov
jl
lods
mov
jae
sbb
inc
sbb
iret
movsb
adc
inc
call
mov
cmp
sbb
out
mov
or
aas
pop
iret
fstpl
xor
or
pop
sub
pusha
aaa
xor
mov
call
adc
inc
xchg
dec
adcl
jge
jl
out
mov
daa
cli
into
push
pop
cmp
mov
cmp
cli
in
mov
xchg
sub
push
lea
push
xchg
movsb
imul
mov
pop
jg
pop
ja
roll
into
cmp
pop
fnsave
adc
lahf
pop
scas
in
fldt
sbb
and
repz
int3
std
sbb
or
mov
inc
int
fmull
jmp
pop
in
outsb
jg
ds
mov
inc
stos
loopne
sub
mov
pop
or
mov
mull
mov
addr16
leave
bound
inc
and
cli
ret
inc
jns
out
cwtl
std
xchg
adc
out
and
lods
add
mov
mov
push
adc
inc
fnop
push
add
xor
std
jl
mov
pop
out
pop
stos
or
add
inc
xchg
lea
jle
pushf
mov
pushf
push
outsb
cld
scas
push
mov
loopne
pusha
or
jmp
pop
fsubrs
or
test
lods
adc
fidivrl
repnz
mov
lret
lds
rcll
fildl
cmp
or
mov
fistps
leave
in
jle
ja
mov
fcoml
test
int
test
cmp
mov
or
xor
les
dec
sub
xor
mov
movsb
out
dec
inc
roll
push
divl
stos
push
out
mov
mov
jnp
xchg
inc
xor
in
out
roll
ss
or
shrl
and
jp
mov
add
jbe
aam
jns
sbb
mov
loopne
add
out
pop
xchg
ret
cvtps2pi
lahf
aaa
int3
ja
sbb
popa
rorl
and
out
ret
sbb
cmp
push
test
pop
shl
mov
adc
test
or
fcompl
decl
sub
std
mov
xlat
push
mov
or
jbe
mov
jmp
sbb
and
or
mov
jo
arpl
add
gs
loope
je
cmp
or
add
lcall
jecxz
push
jl
xchg
cmpsb
lcall
mov
sahf
shlb
jbe
cmp
call
add
xchg
or
je
ds
aam
popa
ret
aaa
fcomip
add
cmp
or
or
popa
imul
cmp
sub
rol
ss
out
or
jns
ds
mov
outsb
popf
xchg
icebp
adc
cltd
cmp
sahf
popf
or
dec
cmp
cmp
ret
inc
arpl
aam
jmp
ja
jnp
bound
jb
mov
movsl
es
ja
lods
and
rorl
mov
aad
dec
and
popa
daa
push
outsl
adc
push
inc
in
xchg
clc
sar
stos
subl
xchg
movsl
and
ret
stos
fldenv
dec
jbe
and
xchg
aam
popf
fildl
mov
pop
test
add
data16
rcrl
push
popa
and
jge
inc
inc
pop
inc
pop
lahf
int3
movsb
negl
sahf
test
mov
lds
mov
icebp
fsubr
adc
push
cmpsb
fidivrs
dec
inc
adc
gs
xor
jecxz
inc
hlt
push
or
cmc
sub
mov
jae
fwait
enter
mov
xchg
fistps
in
pop
mov
add
push
cmp
pop
imul
adc
sbbl
int3
daa
mov
add
jbe
stos
cld
sub
rcr
out
test
sbb
jne
into
push
movups
lea
mov
sbb
add
cwtl
dec
pop
lret
lcall
pushf
aad
fxch
pushf
sbb
xchg
push
fs
fldenv
dec
or
cli
xchg
jle
imul
push
dec
repz
outsl
xlat
add
dec
mov
adc
sub
out
adc
rcll
das
imul
pop
out
sbb
lods
leave
lods
push
stos
push
jnp
dec
es
fstpl
jecxz
sub
push
leave
xchg
push
in
or
pop
adc
jl
fs
jns
or
mov
sub
aas
fsubp
mov
call
mov
sahf
mov
sbbb
nop
shll
xchg
xor
sbb
imul
test
jmp
add
push
jnp
fdivrl
xchg
dec
lds
popa
mov
or
inc
mov
xchg
or
mov
enter
stc
push
stc
ret
popf
cs
xchg
cmp
push
xchg
xchg
fadds
daa
aad
xchg
pushl
out
jg
mov
mov
jp
dec
lea
mov
sbb
orl
mov
lret
fsubrp
int
add
mov
addr16
mov
js
loope
test
stos
add
mov
jg
mov
btsl
jecxz
fildl
xor
fstpt
out
les
mov
or
popa
cmp
es
js
into
fstpl
inc
push
cmp
adc
add
pop
xor
mov
xor
cmp
mov
fstps
out
dec
ja
and
sub
adc
aaa
out
sub
rcrb
push
inc
incl
mov
jmp
jl
push
ja
mov
inc
aam
add
inc
add
sbb
and
bound
shlb
test
mov
push
or
mov
sub
ja
data16
jns
cmp
mov
fwait
in
mov
mov
pop
push
into
loopne
jle
ljmp
cmp
add
jmp
stos
mov
into
mov
aad
inc
or
lods
fs
out
gs
or
mov
xchg
xlat
push
daa
dec
and
xchg
or
das
mov
jg,pt
aas
or
popf
xor
js
bound
lahf
sub
loop
in
into
lea
inc
jno
and
in
jnp
xchg
sbb
mov
adc
mov
pop
js
add
filds
fbstp
lret
test
cld
andl
icebp
insb
sbb
xor
cs
mov
add
cmp
ret
jg
xchg
xchg
lea
mov
lods
hlt
adc
mov
fwait
xor
aas
fwait
adcb
lcall
sub
repz
cmp
sahf
xlat
pushf
push
sub
cmpsl
and
cwtl
mov
mov
jmp
insl
mov
jle
aad
cmpsl
lock
mov
sub
shll
rol
xor
mov
out
cld
cs
mov
adc
sub
scas
sbb
popf
imul
dec
mov
inc
stos
cmp
cmp
arpl
push
and
and
inc
loope
shll
xchg
stos
sahf
jecxz
loope
inc
jmp
xchg
loop
or
js
or
push
mov
xchg
and
fimull
into
sub
test
into
sbb
lret
fimuls
enter
xor
pop
pop
sbb
dec
inc
jo
pushf
stc
in
fs
mov
jo
sbb
sbb
cli
dec
cli
shrb
xchg
push
sar
lret
cmc
scas
imul
hlt
sub
xchg
and
adc
fdivrp
lret
adc
xor
xor
mov
outsb
xchg
dec
cmp
mov
stos
icebp
mov
fwait
cli
test
mov
and
jbe
push
cmp
push
or
xchg
push
jns
insl
add
cmp
pop
jmp
fmuls
push
jns
or
push
sahf
out
aas
mov
cs
inc
mov
out
subb
inc
outsb
hlt
cmp
daa
and
push
incl
or
loope
aaa
push
das
insl
sbb
dec
ret
push
repz
daa
icebp
mov
stos
pop
dec
mov
fstl
sbb
or
jne
xor
ret
cmp
jp
loop
mov
xchg
or
dec
pusha
int
push
xchg
add
add
dec
jge
fs
pop
xchg
push
in
cmp
imul
xchg
mov
cmpsl
inc
xchg
fisttpl
fnstcw
push
mov
pop
ds
or
clc
int
jp
sub
lea
repnz
pop
xchg
pop
mov
data16
lock
jg
mov
xor
pushf
add
push
push
pop
mov
lds
cmp
pop
in
mov
dec
mov
out
jge
jge
cwtl
not
int3
repnz
dec
hlt
daa
daa
mov
fsubrp
loop
pushf
stc
test
pop
fsub
js
pop
call
leave
daa
mov
pop
das
movsl
mov
pop
cmp
dec
push
lods
jno
cmp
lcall
cmp
xor
aaa
jle
add
fldenv
popf
cmp
adc
lcall
mov
cmp
pushf
or
out
mov
xchg
pop
scas
fisttpl
fwait
jbe
je
fidivrl
testl
jo
and
lods
add
insb
pop
aas
cmpsb
sbb
ds
and
jno
mov
adc
jmp
faddp
xchg
mov
mov
pop
jg
iret
push
mov
fadds
jmp
insb
rcrb
es
shlb
mov
mov
mov
mov
aaa
pop
ljmp
inc
test
daa
dec
int
mov
in
adc
adc
dec
pop
aad
cmp
mov
into
cmp
adc
xchg
xor
cmc
idivl
in
inc
cld
call
or
andb
jge
rcl
sbb
and
cmp
xor
pusha
dec
pop
xchg
push
lea
iret
adc
xchg
js
cltd
add
push
xor
jp
sbb
insb
pop
adc
mov
iret
push
or
loop
xchg
cmp
cs
mov
mov
popa
test
call
jg
or
dec
push
imul
ja
lea
in
push
push
mov
outsb
hlt
cmc
loop
cmpsl
scas
jg
adc
cs
icebp
jno
jge
loope
imull
and
lea
cli
pop
cwtl
adc
cmp
mov
in
pop
mov
and
inc
in
lahf
jecxz
and
mov
mov
arpl
test
add
xchg
xor
xchg
mov
ja
ja
mov
pushf
cmp
inc
or
dec
dec
imul
dec
pop
arpl
mov
je
out
pop
mov
ds
jbe
xchg
cli
fs
cmpsb
out
and
inc
inc
pop
cli
push
imul
ss
jae
lcall
cmpsb
fcomps
dec
dec
jp
ja
jmp
dec
out
aad
les
popa
mov
mov
leave
adc
jmp
pop
adc
jbe
fxch
rcr
fimuls
loope
mov
fs
in
in
stos
jecxz
xchg
les
rcrb
clc
dec
out
insb
add
rorl
movsl
pop
es
loopne
jo
testb
mov
push
rol
aam
mov
je
lahf
cwtl
loop
jg
mov
push
cmp
lock
sbb
ljmp
insb
lret
sti
mov
push
int3
imul
cld
js
dec
sub
dec
fidivl
xchg
xchg
ffreep
xchg
sbb
or
xorl
pop
loopne
mov
push
fdiv
or
inc
shrb
repz
pop
and
fcom
push
mov
pop
lret
inc
sbb
clc
push
dec
out
stos
mov
cmp
jno
cmp
jbe
into
push
mov
inc
clc
mov
or
or
dec
outsl
mov
push
call
dec
inc
xchg
aam
cmpsl
int3
les
push
int
dec
inc
push
fiaddl
mov
test
aaa
repz
ret
fistl
imul
data16
nop
hlt
sbb
nop
ds
repnz
in
insb
dec
lods
mov
sbb
scas
les
dec
or
cmp
mov
insl
fsubs
ds
dec
push
pcmpgtd
jno
push
cmp
sub
xorb
sti
js
std
sti
int
cmpsb
xchg
int
and
inc
or
out
push
call
cmp
inc
cmp
popf
insl
and
jp
jae
cli
outsl
xlat
mov
and
imul
ret
gs
shrb
dec
xor
sub
push
and
pop
adcl
in
jns
int3
add
out
jo
push
out
push
sar
aam
lret
movsb
push
sbb
lcall
int3
and
dec
inc
mov
pop
inc
out
mov
insb
mov
loop
mov
out
test
loopne
push
test
fmulp
push
loopne
push
pop
mov
ja
loop
adc
pop
test
mov
and
inc
push
and
ljmp
enter
roll
ss
std
into
push
pop
sbb
sahf
xchg
test
pop
sub
les
adc
mov
add
iret
jns
insl
leave
iret
test
push
push
or
jg
xchg
hlt
out
xchg
pop
xchg
push
cs
cmp
repnz
mov
mov
cmp
daa
out
pop
dec
or
ret
mov
fisttpll
scas
js
sbbb
andl
mov
sahf
push
cwtl
pop
inc
loopne
decb
pusha
inc
xor
scas
sbbb
push
xor
adc
rol
or
shlb
jb
adc
mov
mul
dec
stos
mov
push
popa
test
mov
and
sbb
dec
les
hlt
dec
stos
and
xchg
sub
dec
xchg
ret
jge
add
inc
mov
int
cmp
cmp
sub
cmp
lcall
sub
movsb
or
mov
mov
xlat
lret
bound
jo
cmpsl
pop
aas
movsb
jg
xor
test
adc
jge
pusha
stc
aad
inc
push
mov
inc
cmp
cmp
data16
jno
inc
xchg
inc
push
lret
or
test
pop
movsl
inc
stc
orb
or
cmpsl
leave
das
mov
data16
mov
push
repnz
xor
pop
xor
aad
jo
lods
cmp
inc
jecxz
add
iret
dec
lods
inc
movsl
inc
insl
xchg
xor
add
gs
push
sti
test
ret
push
xor
and
xor
and
dec
adc
cmp
pop
sbb
scas
sbb
imul
push
pop
mov
notb
mov
outsb
imull
mov
mov
fcompl
je
dec
pop
iret
and
packsswb
push
aam
outsl
push
mov
push
adc
in
push
dec
mov
dec
aas
lret
or
dec
inc
in
push
iret
stos
sbb
mov
xchg
jbe
xchg
dec
cmpsb
fst
cmpsl
orb
lds
cmp
cmp
out
pop
pop
cmp
lock
and
jl
add
jg
loop
cmp
imul
outsb
lcall
ja
mov
jne
loopne
mov
jo
lods
cmp
or
jb
cli
divb
dec
xchg
mov
faddl
push
test
inc
mov
lahf
out
pop
test
or
adc
push
xchg
or
jecxz
aaa
jle
repnz
ret
cmp
popf
das
push
das
jmp
sbb
and
in
dec
push
mov
ljmp
or
xchg
pop
adc
cmpsb
cs
sarb
pop
add
lods
cmpsl
pop
popa
ja
pop
cmpsb
loop
or
jb
pusha
fdivr
cltd
add
inc
hlt
aas
mov
cltd
adc
imul
andl
jbe
insl
dec
jae
mov
loope
rol
inc
and
xchg
mov
mov
aam
and
mov
int
pop
das
push
pop
gs
add
mov
setnp
pop
mov
dec
adc
stos
xchg
lret
das
leave
nop
movsb
mov
int3
cwtl
frstor
aam
push
decb
xchg
push
pop
jg
or
leave
pop
push
or
push
cmpsb
mov
cmp
xchg
popa
ds
scas
push
std
pop
cld
or
push
icebp
push
pop
inc
pop
stos
pop
imul
lea
push
pop
jo
inc
popa
xchg
fldt
inc
movsb
mov
dec
mov
repz
popa
scas
lret
push
testb
jno
mull
and
xchg
lahf
aam
xchg
addl
andb
shrl
out
push
jb
mov
jns
lret
stos
enter
cmp
insb
ds
fcmovnbe
and
repnz
inc
shll
icebp
fdivrl
xor
ficompl
add
pop
loop
das
mov
or
pop
jmp
mov
adcl
adc
cmp
sbb
dec
xchg
scas
repnz
ret
mov
inc
pusha
push
in
jno
mov
or
pop
in
cltd
jp
fstpt
subb
jnp
in
enter
rcll
and
sub
test
sbb
adc
cmpb
scas
sbb
jbe
sbbb
inc
fistl
sti
jmp
ret
test
adc
inc
addr16
lods
jle
test
lds
sbb
gs
adc
addb
cmp
adc
pop
loop
sbb
movsb
jno
mov
xchg
ljmp
xchg
imul
stos
jp
sete
cmp
cmpsb
pop
or
jmp
dec
shll
iret
lahf
pop
ss
test
notrack
push
fwait
iret
inc
stc
mov
jle
and
push
popa
dec
push
pop
pop
mov
sub
jp
jg
daa
ds
adc
cmp
or
gs
jne
dec
inc
ds
mov
je
out
cs
std
add
outsb
in
push
mov
jmp
sar
scas
bound
push
aam
stos
jmp
inc
cmc
inc
or
rcll
xor
cmpsb
xchg
rcrl
dec
xchg
and
cmp
jo
int3
adc
bt
pop
lods
hlt
cmc
adc
mov
fisubrs
push
out
mov
mov
mov
fisubrl
cld
in
pop
dec
mull
inc
xor
cmc
dec
add
pop
pop
xchg
popa
mov
sbb
and
mov
inc
jmp
test
outsl
and
aaa
pop
dec
movsb
or
and
dec
cmpsl
sbb
inc
lret
push
xchg
mov
pop
cli
add
sub
lds
les
xor
imul
out
rclb
aas
xchg
inc
mov
jae
inc
or
add
fimull
push
sahf
fcoms
mov
add
jge
std
and
add
pop
pushf
mov
repnz
mov
sub
lea
or
mov
push
inc
fwait
dec
loope
xor
mov
pop
sbb
in
mov
mov
mov
or
mov
xchg
push
xorl
inc
mov
mov
push
test
jle
pop
ficoms
dec
subl
mov
int
sub
mov
or
mov
sbb
push
lahf
sub
loop
fstpl
aad
jmp
lock
jg
incl
dec
mov
out
shlb
adc
jb
repnz
into
pop
data16
inc
fnsave
push
movsb
dec
cmp
pop
fwait
mov
and
adc
dec
jae
inc
mov
cmp
mov
mov
xchg
pop
or
sub
pop
cld
and
adc
mov
pop
xchg
js
aas
xor
shr
idiv
pop
ret
lcall
cmp
lea
les
push
sub
leave
mov
and
or
and
cs
lahf
fdivl
icebp
push
cmc
jecxz
std
fiadds
dec
outsb
dec
mov
mov
sti
lret
inc
mov
in
test
xchg
imul
arpl
ljmp
decb
imul
jmp
inc
jo
push
insb
mov
xchg
idiv
xor
jb
loop
pop
ja
fistpl
add
jno
test
jo
fcoml
adc
sub
mov
inc
jmp
add
jle
jecxz
mov
adc
cmp
push
imul
jmp
mov
jp
push
insb
and
mov
and
cmpl
subl
cmp
add
adc
xchg
sub
jl
and
mov
and
xlat
push
push
out
std
dec
xchg
push
addr16
rclb
test
data16
dec
sub
aad
adc
xchg
sub
and
movsl
scas
inc
sbb
push
xor
xor
add
test
mov
add
add
stc
mov
fwait
mov
mov
pop
add
test
shr
bound
cmpsb
nop
mov
and
ficomps
rolb
and
add
sti
test
sahf
inc
mov
int
popa
sti
add
inc
cmp
mov
xchg
jo
adc
sbb
mov
rolb
aas
pushf
push
inc
pop
pop
pop
dec
das
jmp
int3
push
stos
shlb
mov
pop
mov
lods
fsubs
jl
outsl
aad
cs
leave
mov
push
outsb
mov
out
dec
mov
push
sub
out
dec
jo
mov
mov
or
fiaddl
scas
cmp
add
bnd
loopne
jbe
jle
test
inc
iret
mov
aad
mov
add
out
mov
mov
dec
mov
add
movsb
pop
push
scas
and
xchg
or
inc
inc
xchg
inc
dec
jmp
outsb
xor
lock
mov
pop
lock
mov
ret
out
mov
aaa
test
pop
xchg
aad
cmp
pop
or
jnp
dec
sub
flds
jae
test
testl
xor
rcl
inc
cmp
popf
ret
enter
sbbl
mov
mov
cmp
push
cmpsl
jmp
inc
pop
mov
xchg
jmp
xor
sub
cltd
adc
xchg
je
push
adc
stos
ret
out
dec
call
icebp
ljmp
sbb
lock
not
fcoms
mov
out
xchg
in
mov
shlb
sub
mov
cld
fs
sbb
inc
in
gs
clc
addl
add
mov
adc
dec
aaa
mov
mov
in
sahf
imul
xor
sub
out
lcall
jge
sti
idivb
xchg
cmpsb
jge
mov
imulb
pop
rcr
iret
xchg
or
mov
cmc
xlat
neg
mov
mov
xor
adc
enter
mov
mov
pop
sub
loope
in
or
mov
sti
insl
xor
mov
sbb
dec
hlt
andl
sub
ss
xchg
enter
lret
push
test
cmpsl
jae
ss
jp
adc
fbld
scas
paddsw
mov
test
outsb
imul
mul
xchg
cmp
inc
out
mov
mov
sbb
fidivl
adc
inc
ds
shlb
jbe
ss
insb
fsubl
push
loope
xor
test
ret
sub
dec
pop
hlt
repz
mov
sbb
enter
cmpsl
inc
or
add
push
mov
inc
xlat
inc
pop
lea
xlat
mov
and
or
mov
leave
out
lods
push
stos
out
pop
mov
push
faddl
push
lock
inc
test
into
pop
ljmp
out
mov
popl
push
outsb
inc
jmp
lret
imul
inc
lods
xchg
jnp
sub
add
dec
pushf
stc
iret
inc
add
jo
insb
int
lcall
mov
cli
outsl
push
es
or
xor
push
mov
enter
loope
mov
push
insl
ret
mov
mov
sub
stc
pop
popl
mov
mov
push
call
stos
mov
xchg
scas
in
test
pushf
jbe
into
sbb
mov
xor
push
pushf
xchg
js
push
jmp
stc
mov
xchg
imul
inc
and
or
xlat
cmp
ret
cmp
sub
notl
pop
testb
fdivl
push
call
stos
notl
fstps
jge
mov
inc
sbbb
les
jb
xchg
in
stc
jo
xchg
clc
or
sub
and
aam
lret
lret
push
mov
cmp
repnz
test
mov
pop
mov
push
add
push
call
add
cmc
and
pop
stc
movsl
scas
in
fs
pop
sarl
mov
dec
add
pop
movsb
jbe
mov
sarb
sub
iret
add
dec
push
xchg
gs
call
xor
fidivrl
cmp
jp
push
insl
inc
leave
sub
add
xor
cli
jp
fcos
leave
cmc
mov
lods
adc
xchg
jne
cmp
sbb
sub
lret
push
cli
cmpsb
shrd
push
btc
cltd
mov
add
andb
or
dec
das
or
inc
test
or
adc
popa
fsin
lret
insb
xor
add
loope
mov
les
ljmp
mov
sbb
mov
mov
xchg
test
cltd
pop
movsl
jno
jge
notb
mov
add
xchg
pop
pushw
mov
mov
adc
cwtl
movsb
movsl
xchg
ljmp
push
dec
fucomi
bound
scas
dec
aad
push
fiaddl
icebp
xchg
xor
lcall
int
cli
int3
pop
lcall
fistpl
inc
pushf
or
add
dec
pushf
mov
or
adc
mov
fs
xor
mov
movsl
int
sbb
scas
push
repnz
btc
adc
push
in
cmp
and
fidivl
inc
fistps
sbb
stos
mov
or
fidivrs
xchg
je
mov
and
inc
stc
movsl
mov
adc
lret
mov
mov
fiadds
je
mov
in
or
arpl
push
shll
jle
sbb
push
jle
xchg
sub
xor
insl
sbb
std
into
les
int
les
mov
test
add
enter
fbstp
xchg
imul
inc
fdivrs
dec
cwtl
push
mulb
mov
aad
rcr
push
int
xchg
jno
addr16
add
test
sub
add
fsubrl
xchg
fstpt
popa
and
xchg
mov
jle
jb
sarb
cmp
dec
pop
add
loopne
mov
sbb
das
fdivr
inc
popl
scas
arpl
data16
xor
pop
or
std
or
fisttpl
jg
pop
imul
xchg
mov
add
push
jg
loope
push
or
cmp
jl
ret
mov
js
test
jnp
inc
jp
lcall
xchg
dec
xchg
mov
sbb
cli
icebp
in
add
mov
and
sbb
jns
mov
xlat
addr16
scas
add
dec
and
ds
add
fmul
test
xchg
popf
outsb
push
mov
add
leave
cltd
lahf
lahf
cltd
rcr
inc
leave
cmp
jno
pop
fstpt
jbe
mull
xchg
add
ret
fs
pop
js
repnz
cmpsl
ds
fidivl
and
mov
insb
adc
mov
dec
cmp
mov
mov
sub
movsl
cmp
or
cwtl
hlt
das
cmpsb
ja
cli
leave
rcrb
pop
cld
in
cmp
in
aad
cld
jge
fdecstp
sti
popa
insb
int
out
dec
fisttps
mov
sti
push
in
pop
mov
jmp
pop
jnp
shll
jnp
fsubr
stos
mov
hlt
jge
lods
jl
cmp
lods
fistpll
mov
and
ds
mov
call
sub
rcrb
and
add
mov
stos
add
jp
dec
mov
mov
xchg
sbb
mov
subl
call
pop
fstp
xchg
jae
aad
add
xlat
jmp
je
adc
push
lock
xchg
jne
nop
sub
in
sahf
mov
imul
cmpl
mov
push
adc
mov
jmp
mov
leave
call
enter
inc
test
mov
xchg
jae
jns
adc
nop
cwtl
adcb
or
movsb
inc
dec
cwtl
fimuls
jo
pushf
cmpsl
das
sub
pop
add
adc
adc
push
cli
fimull
ret
dec
and
in
fcoml
add
cmpl
push
pushf
in
push
push
lea
into
or
push
sub
add
ds
mov
cmpl
cmc
inc
xor
ret
mov
pop
scas
sbb
jne
sahf
lahf
add
fiaddl
rcl
mov
xchg
pop
sub
std
or
or
rcr
addr16
into
fwait
bound
test
popa
fs
mov
es
into
lret
out
xchg
ja
repnz
push
jl
call
mov
cmc
loope
or
inc
int
mov
ds
in
jmp
jbe
les
outsb
or
pop
push
push
add
sub
xchg
movsb
fwait
loope
jecxz
pop
jp
xchg
adc
in
xor
push
push
fisttps
mov
fstpt
mov
lods
pop
pop
or
inc
and
pop
cmc
in
subb
push
dec
jmp
and
jecxz
pop
test
out
outsb
outsb
add
xchg
scas
loope
push
mov
cmp
sbb
push
pop
scas
add
rcll
fstpl
sbb
jo
xor
in
cli
add
add
sbb
outsb
rorb
les
pusha
pop
pop
push
jae
das
lcall
scas
imul
adc
xlat
das
xor
loope
fcmovnu
imul
xchg
mov
mov
jle
pop
jmp
pushf
push
fstpt
xor
add
cmpsl
jns
mov
cltd
cwtl
cmp
je
or
les
sbb
insb
scas
xchg
pop
pop
sbb
fsts
in
mov
dec
insl
incl
nop
leave
sub
push
arpl
and
stc
pop
xor
nop
mov
loope
mov
pop
lock
pop
setno
sbb
jmp
cmovbe
lret
sbb
jmp
xchg
fistps
imul
cmp
pop
int
adc
sti
pop
roll
cmp
jecxz
frstor
cli
nop
mov
leave
bound
sbb
insl
pop
movsb
arpl
data16
mov
mov
and
or
or
enter
shrl
mov
das
stc
xchg
insb
push
mov
movsb
pop
mov
lock
je
adc
sbb
sub
lret
cs
ja
fwait
in
or
sahf
dec
mulb
adc
mov
jp
divl
mov
jp
sub
mov
fs
sub
jae
imul
popf
test
ret
sahf
adc
inc
aas
sarb
popa
addr16
xchg
out
sub
pop
mov
dec
jne
ror
adc
sahf
nop
jbe
and
or
cltd
xchg
sbb
arpl
mov
stos
dec
ret
add
jmp
out
xchg
push
push
icebp
sbb
push
adc
dec
and
cmp
lods
inc
sti
push
mov
test
movsl
mov
outsb
lock
insl
fldcw
pop
add
int3
fdivp
push
sbb
and
cmp
and
shl
mov
mov
add
dec
push
dec
pop
stos
loopne
or
mov
out
inc
jae
mov
mov
imul
or
test
inc
sub
inc
and
pop
xchg
sbb
sub
out
mov
fs
sarl
cld
push
or
fists
mov
dec
cwtl
and
sbb
mov
sub
out
mov
push
loopne
movsb
fcomps
fistpll
negl
or
lods
dec
pop
cld
in
fldenv
clc
xchg
cwtl
insl
push
js
fwait
or
push
xor
aam
mov
mov
sbb
das
mov
cmp
xor
call
out
mov
push
dec
inc
pop
gs
call
jno
out
mov
dec
xor
mov
int3
scas
iret
xchg
inc
mov
sub
cmp
in
and
inc
inc
iret
sarb
push
xor
scas
cld
bound
xchg
adc
scas
mov
in
je
jns
mov
pop
imul
popf
pushf
nop
popa
dec
inc
out
inc
mov
out
jle
mov
das
push
dec
xor
push
fcmovb
sti
add
push
xchg
repz
dec
mov
xchg
pop
js
out
shl
std
mov
js
rclb
ret
jo
xchg
push
test
mov
adc
mov
dec
jmp
xor
sub
aam
sub
sti
mov
sbb
pop
out
sbb
adc
loopne
clc
sahf
sbb
shll
out
daa
push
test
in
jp
fdiv
orl
jns
pop
ret
inc
jo
es
or
mov
push
push
orb
ret
pushf
ud0
in
fcomps
movsl
jg
cmp
ds
sbb
jl
fnstsw
cmp
mov
js
mov
cltd
pop
stos
add
std
adc
xor
lahf
mov
jo
push
add
mov
sub
aas
xor
and
and
xchg
loope
fwait
pop
loope
cmp
inc
push
cmc
outsb
leave
sar
sahf
jle
dec
das
jbe
xchg
add
in
add
pop
pop
pop
mov
dec
mov
adc
xor
loopne
fmull
xchg
jno
cmp
mov
jge
or
push
shll
ret
sub
mov
nop
lock
fnsave
sub
mov
sbb
jle
add
out
sbb
in
lahf
sub
sahf
cld
mov
jns
mov
pop
add
insl
repnz
outsb
insl
sub
mov
push
andb
dec
cmpsb
or
mov
roll
xchg
pop
jp
hlt
mov
mov
or
loop
cmc
leave
push
and
adc
sbb
xor
ss
loopne
pop
loop
add
adc
sub
aaa
sbb
arpl
mov
and
jb
lock
into
ljmp
pop
mov
add
xorb
sbb
xor
imul
sbb
jge
sbb
mov
lcall
int3
jmp
fstl
dec
pop
shrb
mov
or
xor
icebp
push
dec
popf
sub
daa
std
adc
idiv
inc
repnz
movups
dec
adc
xchg
push
ret
mov
into
lcall
cmpl
scas
call
fistpl
cmpsl
arpl
mov
inc
les
fbstp
mov
pop
xor
jg
cmp
jb
xchg
inc
pop
jecxz
jo
cmpsb
sbbl
mov
aas
clc
imul
add
push
mov
outsl
shrb
or
jecxz
dec
xchg
loop
inc
adc
cmp
fimuls
pop
insb
mov
jmp
outsl
rorl
jae
jmp
sub
shrl
or
fistpll
repz
inc
cmc
xchg
jle
jp
shlb
je
jns
or
push
inc
mov
sbb
jge
add
push
sub
jg
mov
jp
cmp
jnp
pop
loopne
call
popa
cmc
loopne
stos
jns
movb
mov
cmpsl
aam
nop
push
jns
sbb
cs
pop
or
inc
dec
push
jns
push
addr16
mov
in
fucomip
pop
repnz
out
mov
xchg
dec
mov
pusha
jmp
arpl
sub
out
scas
dec
pushf
mov
int3
jns
jmp
xchg
mov
mov
test
pop
cmp
add
insb
scas
repz
pop
cli
sbb
xchg
pop
xchg
add
or
lods
add
out
in
or
sub
or
fsubrp
ja
add
cmp
adc
adc
nop
js
out
cmp
or
mov
nopl
sub
push
cltd
popf
test
bound
ds
and
jne
jecxz
in
lods
adc
and
icebp
je
es
or
lock
cmp
es
mov
shrl
or
fbld
jmp
mov
dec
xor
lahf
adc
jle
and
pop
push
cs
xor
or
dec
scas
repz
xchg
enter
xor
inc
inc
cmpsb
xchg
pop
fmuls
scas
and
mov
sbb
cmp
mov
neg
push
and
push
iret
test
repnz
fcmovu
push
scas
out
test
scas
stos
cltd
adc
mov
outsb
xchg
mov
xor
cmp
pop
aas
mov
cmp
mov
into
mov
jecxz
push
push
in
and
loop
cmp
push
mov
loopne
mov
inc
ja
mov
and
cli
loope
out
aas
imul
push
dec
neg
mov
mov
sub
and
inc
jb
ja
cmp
imul
push
imul
inc
xor
push
ljmp
sbb
adc
sub
or
jl
lcall
data16
fcompp
jecxz
lret
mov
test
xchg
xchg
test
jne
lods
sub
insb
jnp
ja
outsl
mov
stos
fisubrs
push
push
sbb
mov
xchg
iret
and
dec
xchg
sub
loopne
arpl
nop
pushf
push
xchg
mov
out
dec
ljmp
sbb
adcb
dec
lods
testb
js
sti
push
sbb
mov
into
xchg
inc
xor
mov
nop
inc
jle
stos
out
sbb
leave
inc
mov
push
jmp
pop
addr16
orl
sub
or
ss
fs
push
inc
xchg
xchg
incl
xor
out
cwtl
pusha
test
fists
mov
testb
in
je
fiaddl
mov
pop
jle
enter
cmp
xor
mov
int
mov
imul
ficoml
les
icebp
xchg
fwait
out
cwtl
leave
scas
dec
lds
pop
push
push
xchg
shl
daa
inc
outsb
pop
stos
aas
dec
mov
and
dec
pop
in
mov
jno
fcoms
lcall
mov
mov
fidivs
adc
push
pop
jmp
mov
lret
cltd
inc
xchg
int
in
mov
cmp
imul
add
cmp
popf
sub
out
mov
pop
xchg
popa
jno
imul
fbstp
lcall
pop
push
out
xlat
dec
subb
cmp
jbe
hlt
pop
or
test
fisubrl
inc
das
aad
ljmp
into
adc
cs
dec
dec
imul
add
inc
sbb
sahf
and
mov
cmp
shlb
movsw
and
xchg
orb
lcall
cmp
add
mov
ficoml
lret
sbb
add
add
outsb
or
sarb
fnstsw
push
xchg
jg
ds
jb
stc
lahf
cmp
mov
mov
add
xchg
clc
mov
pop
xchg
dec
fwait
jne
es
imul
mov
dec
sub
mov
pop
lods
ja
cmp
push
lds
lret
jmp
mov
loop
pop
fnstcw
std
push
xchg
inc
lea
addl
dec
out
push
add
test
bound
sti
xchg
cwtl
pushf
xlat
cmp
jno
lds
dec
adc
cmc
jg
test
cli
and
lret
xor
xchg
fs
pop
add
pop
daa
pmulhw
rclb
gs
pop
cmp
pop
fcmovb
gs
xchg
or
cs
pop
lea
into
cmc
mov
dec
aam
nop
sbb
jmp
ficoml
arpl
push
ret
or
dec
jl
add
cmpsl
hlt
pushf
shl
imul
pushf
addr16
ficoml
xchg
adc
sarl
arpl
popl
mov
add
ja
cmp
jecxz
clc
jmp
test
dec
cmp
enter
sub
mov
dec
mov
cli
popa
ljmp
loope
js
cmp
sahf
mov
xchg
das
mov
cmp
stos
cli
cmp
popa
jo
movsl
fnstcw
dec
xlat
jno
sbb
sahf
jge
cs
sbb
and
and
or
mov
in
push
lret
pop
iret
call
fisubl
stc
ret
sbb
cmp
cmp
outsb
push
adc
out
pop
test
fwait
stc
das
scas
scas
or
mov
lcall
xchg
scas
cmp
imul
sub
into
jo
aad
sub
add
sub
scas
loop
lods
push
xchg
mov
repnz
push
popa
stc
stos
lcall
mov
roll
cs
mov
pop
stos
loop
adc
pop
mov
dec
sbb
lret
cmp
mov
sbb
loopne
rorl
subb
mov
push
lret
movsl
xchg
std
aad
push
add
dec
xorl
rol
clc
insl
push
jl
and
jae
dec
jnp
fmulp
inc
das
pushf
mov
push
sbb
hlt
inc
mov
rep
lret
inc
mov
cmp
jbe
sarl
or
mov
xorb
movsb
adc
fisubrl
je
dec
push
xchg
jecxz
add
push
xchg
int
mov
cli
repz
inc
sub
pop
lret
inc
in
jne
ret
movsb
mov
in
mov
mov
inc
fbld
xor
stos
andb
test
mov
aad
je
or
ret
xchg
je
dec
pop
push
jmp
and
test
ficoml
inc
xchg
test
pop
xchg
gs
dec
dec
xchg
dec
test
push
icebp
sbb
lea
orl
sub
xchg
sbb
push
adc
rcrb
or
sbb
and
mov
or
test
mov
adc
sbb
imul
pop
cs
push
insl
jp
mul
and
push
inc
lock
rcll
jno
es
scas
sti
pop
cs
outsb
cli
jmp
decl
das
xchg
jle
mov
sub
jmp
je
scas
jno
fs
lahf
movsl
jbe
jb
dec
pop
pop
sbb
fisttpll
cmpsl
xchg
aaa
js
into
mov
push
mov
aas
jmp
cs
icebp
mov
pop
xlat
out
stos
in
ret
test
jne
adc
sub
shlb
cmp
outsl
movsb
ja
fimull
pushf
push
pushf
mov
lret
cmp
movsl
sarb
jge
mov
pop
test
xor
push
mov
std
and
inc
add
sub
mov
call
mov
mov
adc
adc
dec
or
movsl
roll
xor
addr16
dec
and
lods
rcrl
fisttpll
xor
mov
sbb
ret
add
mov
scas
sub
push
jge
jne
outsb
int
jmp
mov
sbb
adc
adc
int3
repnz
mov
stc
rolb
inc
adc
sub
cmpsl
fwait
mov
lcall
js
mov
xchg
out
or
mov
outsb
mov
fxch
loopne
push
mulb
test
enter
std
sub
mov
cmp
dec
dec
inc
push
sbb
xor
ljmp
pop
gs
das
out
movsb
inc
or
sbb
shlb
dec
xchg
repz
in
fwait
jmp
aas
nop
lods
sti
loopne
ret
lea
gs
pop
jg
aaa
mov
imul
sub
fcmovu
das
push
pop
add
lret
movsl
jno
stos
sub
fadd
fisubl
inc
fs
sbb
ljmp
js
and
rcrb
push
js
fadds
mov
lods
aam
mov
sub
pop
lods
pop
push
or
jge
outsb
sub
xor
mov
mov
and
popa
fmulp
fimull
es
loopne
pop
jg
push
addr16
adc
inc
fsubrs
xor
push
mov
test
or
in
inc
hlt
ss
aaa
or
les
push
lods
jb
popa
sub
int
xor
ja
push
in
inc
sbb
ljmp
fsub
cmpsl
adc
mov
sbb
enter
fdivrs
push
mov
fdivrs
pop
scas
inc
daa
adc
mov
cmp
ss
sbb
lods
inc
adc
aas
inc
sub
sbb
icebp
out
sbb
shlb
or
mov
imul
inc
sti
mov
add
jg
jno
jg
xor
shll
add
xchg
sub
ljmp
pushf
lock
cmp
test
or
std
pop
dec
push
icebp
outsl
sarl
idivb
push
jne
lock
sbb
in
out
in
dec
mov
mov
lcall
jmp
repz
xchg
nop
stos
dec
mov
mov
sub
xlat
sbb
fdivp
adc
jne
push
xchg
pop
and
lahf
pop
mov
les
les
inc
fwait
loop
lea
jle
pop
xor
mov
cmp
bound
imul
add
adc
xchg
jnp
stc
into
lcall
xorl
rorb
cmp
imul
pop
imul
ret
mov
hlt
or
dec
popf
or
mov
ljmp
loope
mov
lret
lret
jp
jae
sti
mov
fisttps
dec
adc
aas
cltd
xor
cs
ja
jbe
fidivrs
add
mov
rcl
std
cmp
xchg
in
icebp
js
sub
repz
testb
dec
pop
mov
push
mov
mov
mov
cld
test
lds
mov
outsb
inc
sbb
pop
jbe
lahf
ja
scas
pop
jmp
add
leave
cwtl
incl
lds
mov
mov
imul
icebp
hlt
in
and
xchg
mov
enter
lods
cli
fisttpl
addl
in
jnp
adc
fnstcw
jnp
jl
mov
rorl
mov
addr16
leave
cmp
cmp
and
cmpsl
inc
loop
sbb
xor
push
pop
in
mov
es
sbb
fimuls
xchg
cli
fisubs
sahf
or
ss
out
pop
jp
scas
orb
mov
js
pop
in
outsl
jg
inc
cmpsb
arpl
stc
and
adc
nop
out
lahf
in
push
ret
sub
mov
roll
lret
ret
cmp
adc
dec
ss
and
inc
sub
out
roll
cli
jle
popa
shl
in
push
fdivrs
aam
push
mov
push
or
cmpsl
loop
and
xor
push
arpl
sbb
sub
jns
push
in
out
out
mov
out
jge
xchg
push
mov
stos
pusha
int
fcomip
ja,pn
fs
xchg
pop
cmc
inc
sbb
cli
rorl
or
stos
jg
inc
mov
repz
adc
xor
repnz
ret
je
pop
lret
cltd
dec
jno
scas
add
and
jne
in
data16
sbb
xchg
imul
push
dec
jg
push
popa
test
adc
mov
and
mov
sbb
mov
in
adc
mov
cmp
pop
mov
xchg
bound
sub
aaa
cmp
or
mov
in
sti
dec
cmpsl
subl
shr
sbb
fmuls
mov
movsl
add
xlat
cs
std
imul
ss
mov
gs
lret
jl
jge
cmp
aad
dec
or
adc
fsubl
jns
dec
dec
ret
push
loop
push
sub
jns
push
inc
push
sub
shll
enter
scas
jp
xlat
push
int
jl
neg
and
lods
test
lahf
adc
gs
and
loope
frstor
outsl
aas
div
pop
aad
adc
cltd
inc
push
push
mov
incl
xor
mov
lea
mov
and
leave
sub
dec
and
imul
mov
pop
push
lds
addl
cmpsl
subb
cmp
and
xor
and
lcall
in
lret
adc
ret
lea
xchg
or
out
jae
test
sbb
xor
in
in
fwait
push
sub
cmp
sub
sbb
mov
mov
pop
lods
sub
out
inc
test
xor
sti
pushf
sub
push
pop
mov
filds
mov
cmpl
lret
cmpsl
hlt
test
pop
repz
and
cmp
push
dec
pop
scas
lods
fldcw
sbb
and
cwtl
in
flds
das
call
in
sbb
push
fwait
outsb
ret
sub
out
dec
movsb
mov
psubb
out
mov
xchg
aas
mov
in
add
imul
adc
int
dec
inc
or
mov
sbb
fwait
jnp
ja
inc
jae
in
mov
and
fistpl
adc
orb
xor
push
xchg
mov
aaa
push
push
imul
pop
and
mov
aaa
in
ljmp
ret
js
sti
sbb
and
in
sub
dec
sbb
xchg
jle
adc
dec
test
adc
ja
sub
repnz
add
jae
das
and
popl
pop
ret
fstps
shrl
lret
cmc
add
push
xor
cmp
mov
int
sub
inc
pop
movsl
jmp
pop
movb
pop
pop
xlat
mov
pushf
mov
and
int
or
pushf
mov
fldenv
loopne
cmpsl
imul
loopne
les
cltd
mov
shlb
jb
pop
fcmovb
sub
add
jae
jmp
fdivrs
mov
jmp
test
jecxz
outsl
ficompl
aad
outsl
jo
push
cwtl
inc
inc
int3
mov
xchg
pop
xchg
cmpl
stc
xchg
and
iret
xor
inc
cmp
in
jge
pop
jbe
push
sub
mov
andb
ljmp
jne
cmp
xchg
mov
and
jbe
add
repnz
data16
dec
pop
test
ret
and
push
xchg
sub
add
inc
test
push
sti
jl
add
scas
adc
out
mov
int3
cli
xor
stc
jle
ret
add
sbb
mov
mov
test
pop
movq
popf
andnps
or
mov
out
sarb
rorl
popf
subb
shlb
mov
shrl
xchg
sar
xchg
mov
rcr
add
test
outsl
mov
pop
mov
cmp
mov
pop
jne
cltd
adc
out
hlt
movsb
movsb
fimuls
leave
scas
ljmp
inc
in
inc
mov
fbld
xchg
and
push
mov
fcompl
lods
inc
cmp
scas
push
sahf
adc
lods
mov
xchg
push
call
add
movsb
jecxz
idivb
xchg
fstl
imul
and
push
xchg
movl
add
lods
scas
mov
clc
test
iret
and
add
xchg
inc
mov
push
enter
jecxz
daa
adc
mov
sbbl
mov
das
xchg
imul
mov
jecxz
and
sub
lods
loopne
sub
popa
pop
stos
dec
dec
add
jnp
mov
pop
call
sahf
bound
idivb
test
adc
and
out
ficoml
sub
lret
add
pop
push
dec
mov
test
dec
lods
adc
pop
andl
fisubs
lcall
imul
cmp
push
jne
std
inc
test
enter
pop
jns
jmp
mov
lcall
add
add
jl
loopne
fsubrl
mov
inc
fcoms
jp
push
imul
jne
and
pop
outsl
insl
bound
dec
mov
jl
push
xchg
bound
add
sbb
pop
mov
mov
adc
jno
add
inc
scas
jno
sbb
push
es
jg
push
sub
pushl
dec
sbb
add
imulb
cmp
js
out
jge
ret
jbe
adc
adc
lods
inc
pop
mov
dec
daa
cmp
xchg
cmpsl
negb
call
mov
mov
leave
pop
repz
pop
xchg
imul
or
enter
cwtl
shlb
adc
xor
js
ja
fs
test
adcb
fcomip
int
into
enter
std
and
adc
push
lret
cmp
jnp
iret
test
cli
adc
lods
fnstcw
fcomp
popa
mov
test
sub
adc
stos
xchg
pop
js
pop
fwait
ja
test
sub
pop
aas
loopne
mov
sub
xchg
adc
mov
enter
gs
in
fs
lds
cmpb
jp
stos
and
cmp
call
pop
pop
sub
push
mov
rorb
sti
fsubr
mov
pop
inc
push
add
mov
sti
test
in
std
and
and
pushf
sahf
push
xor
les
enter
inc
inc
mov
xchg
mov
cmpsl
popl
nop
stos
test
mov
sub
adc
pop
xchg
icebp
imul
lret
and
es
ja
out
mov
ja
dec
js
fiaddl
push
xor
sub
add
out
cmpb
cmc
xchg
das
pusha
aas
fwait
aam
jge
cmp
xchg
or
mov
dec
das
aas
cmp
inc
dec
stc
pop
mov
push
ror
lahf
out
scas
jno
sbbb
loopne
ds
std
sbb
jns
jno
dec
add
cmp
fsubs
mov
loope
sarb
xlat
dec
xchg
cmpsb
fstl
dec
cld
loop
pop
stc
cmp
aam
cld
mov
sbbl
push
pop
ljmp
scas
popf
packuswb
sub
cmc
mov
roll
lret
pop
int
fdivr
sbb
frstor
cmp
push
std
adc
mov
insb
mov
imul
ljmp
pusha
stos
adc
push
xchg
cmp
push
out
mov
stos
test
sahf
sub
xchg
xlat
imulb
nop
movsb
cld
adcb
jno
outsl
enter
loop
and
ret
mov
adc
insl
mov
out
test
push
jnp
fadd
cmpsl
and
sub
pop
adc
xchg
cmp
jecxz
fbld
loopne
rcll
adc
addr16
dec
stos
and
ja
repnz
addb
push
xchg
pusha
sbb
aaa
lret
cmp
xchg
je
and
inc
sub
dec
testl
xchg
test
add
jle
push
fldcw
adc
pop
dec
mov
pop
mov
sarl
adc
jl
test
iret
jae
cmpsl
fidivrl
rcll
xchg
cmpb
aam
je
mov
adc
sbbb
mov
sbb
sub
fimull
mov
rolb
in
into
scas
stos
xchg
es
push
test
xchg
popf
and
sub
into
call
inc
sub
or
xchg
or
pop
push
xorb
in
and
mov
sbb
inc
xor
sub
stc
mov
loop
mov
icebp
call
pop
cmp
push
add
adc
sub
and
stc
xor
ret
or
addr16
inc
imul
adc
lahf
rolb
nop
or
lret
and
push
cmp
fstl
fwait
and
dec
pop
or
cmp
lcall
pop
sub
call
sbb
and
cmp
jne
shll
nop
shll
outsl
cmp
mov
sbb
mov
in
mov
aam
dec
ss
mov
lahf
pop
or
inc
sub
outsb
enter
cmpb
push
pop
outsb
stos
sub
popl
out
ja
dec
pushf
mov
pop
lds
mov
popa
and
xchg
scas
add
xchg
sub
insb
mov
xor
movsl
jb
aas
cltd
outsl
xchg
mov
xor
dec
loope
stos
inc
push
test
scas
pop
cld
fsubrl
icebp
neg
adc
jmp
mov
dec
enter
stc
dec
leave
add
stos
fwait
aad
mov
adc
jae
dec
mov
xlat
mov
mov
sbb
fldl
push
ret
xchg
in
in
jg
lock
mov
lret
gs
mov
ret
cmp
adc
dec
jge
inc
add
pusha
repz
iret
cli
enter
or
sti
cs
push
aad
fbld
mov
inc
inc
or
and
stc
ljmp
jecxz
test
xchg
mov
idiv
mov
int
cmp
jne
cld
mov
push
add
pop
in
insl
xor
insb
adc
mov
es
clc
cmpl
jmp
add
and
push
fisubrs
jmp
icebp
sbbl
fsubr
jnp
dec
mov
mov
mov
dec
xchg
fsubl
loope
xchg
or
fwait
int
iret
xchg
sarb
jo
and
or
mov
pop
jo
inc
cmp
loope,pn
into
or
cmp
sub
sbb
int3
icebp
pop
lock
psrlw
cmc
mov
mov
sbb
js
sbb
outsb
ret
outsl
enter
nop
sub
jg
dec
or
and
test
pop
icebp
sarb
mov
jb
mov
imul
push
sub
mov
stc
sbb
movsl
pop
test
call
call
rorl
int3
sub
test
ds
shlb
icebp
xor
fs
add
addr16
xchg
loope
lret
pop
shll
pop
inc
test
lahf
in
and
and
enter
cli
dec
xchg
add
rorl
shll
sbb
jnp
shll
push
test
xchg
aad
cmpsb
add
cmp
stos
std
daa
pushf
cltd
pop
pop
fsubrs
imull
xlat
inc
xchg
jecxz
inc
sarb
xlat
push
insb
lret
fnstcw
iret
mov
xchg
push
jb
jecxz
inc
adcb
out
inc
clc
test
les
in
adc
pop
pop
sbb
fmull
into
push
dec
mov
push
jle
jl,pn
cld
fcoms
cmp
loop
sub
cvtps2pi
out
inc
pop
add
mov
xor
je
add
movsb
repnz
sbb
addr16
cmp
in
mov
roll
sub
sub
jnp
cwtl
dec
cmp
adc
out
pop
ljmp
lods
cmp
and
bound
dec
in
arpl
pop
xchg
popf
jle
sarb
popf
iret
rorb
push
jns
iret
xchg
ret
add
jle
mov
mov
repz
out
mov
adc
cwtl
mov
add
xchg
fimuls
push
clc
out
outsl
add
xor
jae
jmp
adc
xchg
mov
movsb
xor
dec
ljmp
lret
insl
xchg
jns
mov
jbe
cmpl
cmp
in
fists
fiadds
out
das
xchg
stc
mov
or
mov
sbb
or
dec
jg
std
pop
cmp
inc
out
push
cwtl
pop
dec
fidivrs
aaa
mov
cmpsl
or
inc
jmp
push
lods
loope
pop
std
mov
pop
xchg
test
mov
dec
insb
xor
out
iret
pop
push
bound
mov
push
pop
jne
adc
mov
shl
shrb
stos
dec
xor
mov
orl
inc
aaa
fbstp
cmc
call
ja
gs
rep
mov
orl
pusha
in
push
js
and
bound
gs
sti
ss
int3
incb
pop
int3
xor
mov
mov
cmp
filds
pop
mov
sbb
push
xchg
cmc
pop
dec
fnstcw
sbb
pop
adc
push
ud0
pop
je
arpl
fcomi
pushf
mov
out
fistpll
aaa
inc
cmpsl
daa
push
pop
xor
cmp
mov
sbb
add
bnd
pop
pop
addr16
adc
das
scas
cmp
pop
pop
lods
nop
and
movsl
fs
mov
xchg
and
adc
or
je
mov
lahf
popa
jp
xor
xor
xor
or
add
daa
pop
in
jl
mov
xchg
loop
mov
nop
sbb
inc
jb
or
das
sahf
jns
mov
sub
pop
dec
sub
xor
loope
cli
pop
test
ljmp
test
or
mov
addr16
daa
ds
jns
push
jb
mov
xor
and
push
cmp
sti
das
lahf
cmpsb
jmp
xor
xchg
xor
xchg
test
xchg
jge
pop
mov
xchg
popf
sub
int3
xor
jae
test
mov
dec
adc
add
adc
mov
lea
subb
sub
ja
div
mov
mov
cmp
inc
nop
pop
lret
lods
test
push
mov
pop
in
ret
loop
xor
dec
and
adc
jp
icebp
push
xorps
aas
cltd
mov
jnp
adc
xor
mov
xor
cmp
clc
fcmovnbe
sbb
insb
dec
jbe
std
xchg
xor
add
adc
lock
int
mov
or
stos
data16
add
mov
xchg
jo
mov
jecxz
out
mov
adc
mov
les
insl
mov
cmpsb
mov
xchg
in
in
adc
xchg
loope
cmpsl
jmp
mov
mov
add
in
or
xchg
in
dec
loope
cmp
adc
mov
popf
subb
push
mov
int
insl
jb
outsb
and
cmpl
sub
cmp
mov
inc
jo
xchg
pusha
jo
iret
mov
fdivr
push
xchg
rolb
hlt
push
jl
mov
mov
loop
cwtl
js
push
xchg
sub
mov
shll
mov
pop
shl
pop
pop
mov
in
jns
xchg
lret
das
popf
gs
sbb
out
jl
cmp
in
mov
pushf
sbb
arpl
jns
adc
ss
test
lea
push
movsb
add
les
or
xchg
shr
cmp
je
sahf
or
jmp
mov
jp,pt
mov
sbb
mov
sbb
mov
lcall
loop
nop
sbb
das
lret
fcmove
mov
ds
cmp
push
loopne
mov
xchg
mov
add
cli
inc
clc
push
fwait
adc
jg
jmp
dec
lret
loop
push
arpl
mov
push
nop
cmp
movsl
pop
and
js
push
add
mov
xor
movsl
cltd
iret
cmpsl
in
sahf
fwait
jns
jecxz
ljmp
adc
enter
subb
ret
xchg
enter
adc
inc
cmp
stos
ret
das
into
fsubrl
jge
aas
xor
push
lcall
jae
sarl
cmp
add
sti
push
mov
mov
mov
or
mov
xor
xchg
mov
frstor
test
testb
movsb
imul
pop
repz
inc
loopne
dec
fidivrl
xchg
icebp
jge
jmp
addr16
xchg
fnstsw
lds
mov
adc
push
imul
les
icebp
sub
mov
int3
pop
ret
incl
sbb
push
sbb
mov
mov
cmpsl
iret
mov
pop
int3
cmpsl
dec
adc
subb
dec
loope
loopne
call
mov
call
mov
adc
jne
hlt
insb
adc
test
cmp
inc
dec
mov
into
jge
add
dec
movsl
stc
dec
test
dec
in
mov
insb
dec
mov
mov
xchg
imul
jge
bound
outsl
cmp
stc
outsl
cld
es
in
lar
mov
push
lcall
or
push
pusha
mov
push
cltd
call
fnstenv
repnz
data16
mov
cmp
aas
push
ljmp
fst
test
xlat
cmpsb
cmp
testl
leave
xchg
pop
pop
jno
xchg
outsl
and
mov
js
pusha
xor
daa
cmp
sub
add
lahf
jo
adc
sub
push
dec
mov
shr
cmp
xchg
aaa
ret
clc
fisubrl
xchg
inc
test
gs
insb
cmpsl
mov
xchg
ljmp
lcall
aas
aam
aam
xchg
in
xor
orl
sbb
into
mov
shll
add
rcrb
test
mov
lcall
jg
cmp
outsb
or
add
push
and
rorl
xchg
jmp
test
shll
jnp
imul
js
lods
inc
jbe
in
rcl
sbb
inc
and
ja
andl
shrd
cmp
or
xchg
mov
jns
dec
lret
lds
add
cmpsl
adc
fnstsw
je
push
pusha
cmp
out
xchg
cmpsb
incb
fsin
out
lods
mov
testb
adc
repz
mov
lea
es
gs
ret
sbbl
loopne
inc
shlb
mov
cwtl
stos
ret
or
xchg
mov
jecxz
int3
nop
jae
jo
jl
xchg
popf
or
mov
lcall
mov
push
rcrb
test
pop
sub
mov
or
pop
clc
inc
and
dec
stos
push
and
and
mov
cmp
outsl
inc
mov
mov
scas
outsl
sbbb
test
ss
pushf
insb
jecxz
mov
inc
pop
inc
in
scas
roll
inc
inc
adc
nop
test
cmpsl
mov
jo
shll
outsl
in
xchg
jge
ljmp
aaa
scas
inc
mov
and
imul
icebp
loop
stc
movsl
push
testb
add
mov
jmp
pop
ret
imul
mov
ja
or
xor
pop
sbb
out
imul
pop
xchg
lds
outsl
nop
jmp
push
neg
das
bound
fcmove
xchg
fistpll
testl
pop
movsl
es
ret
mov
jmp
jecxz
js
mov
adc
jmp
fbld
jns
call
ds
push
shll
or
and
pop
addl
mov
in
sub
xlat
pop
push
mov
push
test
or
push
lea
push
movsb
out
adc
cmp
jns
outsl
gs
mov
cmpsl
sub
xchg
add
iret
mov
mov
dec
insb
mov
mov
lods
fldenv
cltd
shl
subb
jo
test
fnstsw
xchg
dec
sbb
and
lods
mulb
pop
std
and
cwtl
dec
imul
push
sub
cld
out
insb
push
mov
xor
xorl
cltd
cld
sub
sub
mov
mov
dec
xor
push
cli
inc
inc
pop
test
mov
mov
push
es
mov
in
cmp
sahf
cltd
mov
out
mov
jl
sub
sbb
cmp
loop
and
dec
test
cmpsb
and
es
in
adc
popa
or
cmp
mov
in
stos
push
pop
push
jnp
pop
shl
pop
mov
test
mov
xchg
xrelease
fyl2x
inc
jle
xor
xchg
adc
movsb
movsb
jae
nop
pusha
lea
repz
inc
push
push
insb
ds
in
insl
push
cmpsl
sbb
cmpl
jbe
sub
mov
lret
or
xor
repz
mov
icebp
mov
push
and
dec
jg
mov
andl
aaa
sbb
imul
les
pop
mov
jns
pop
stos
jmp
fldenv
movsl
pop
sbb
scas
outsb
xor
or
push
lods
call
loope
mov
jnp
jle
inc
call
in
jnp
inc
and
cmp
sub
or
mov
xor
dec
dec
cli
xorb
lcall
cmp
popf
and
xchg
mov
loope
inc
lret
je
mov
or
gs
inc
sbb
repz
sbb
xchg
je
les
negb
cmc
outsb
bound
movsb
sbb
xchg
jg
std
adc
cmp
push
rorl
add
dec
rolb
test
pop
loope
test
sbb
mov
and
sub
sbb
inc
insb
and
jns
fdivp
sub
cmp
push
mov
inc
push
adc
dec
xchg
push
rorl
sar
mov
add
add
and
mov
and
or
addl
test
cltd
jb
ret
gs
pop
aaa
jp
pop
dec
sub
jnp
ja
test
pusha
mov
dec
mov
pop
addr16
ret
lea
sbb
cmp
xchg
or
jge
and
push
xchg
loop
push
sbb
sub
mov
push
mov
push
xlat
jg
jg
cmp
ds
jae
push
mov
leave
xor
inc
add
jns
xlat
insl
or
int
aad
icebp
pushf
out
jle
arpl
and
and
inc
test
testb
test
clc
mov
xor
cmpsl
add
rcrb
sbb
dec
add
cmp
push
jl
add
subl
mov
or
jl
push
icebp
cmp
add
dec
sub
rolb
subl
mov
and
sahf
pop
je
rolb
notl
mov
aad
jnp
push
mov
roll
mov
mov
ljmp
ficoml
pop
cs
xchg
cmp
test
mov
movsb
cmpsl
inc
adc
fldenv
not
cltd
jne
dec
mov
adc
cltd
icebp
movsl
or
movsl
adc
inc
mov
clc
stos
shrl
lock
bnd
popf
sbb
mov
adcl
stc
lock
shrb
hlt
insb
jns
fsub
xor
sbb
push
mov
ja
lods
inc
pusha
fwait
fcomps
jmp
and
loopne
mov
mov
enter
push
xor
dec
fbld
out
and
dec
cmp
and
insl
testb
or
sbb
fwait
inc
xchg
lods
inc
les
dec
arpl
lock
push
push
xor
xorl
inc
cmp
jp
mov
faddl
pop
jecxz
mov
andl
loop
xchg
push
outsb
cmp
nop
js
jbe
dec
subb
shrb
inc
mov
inc
pop
inc
xor
icebp
aad
jle
sbb
jmp
shr
out
mov
dec
mov
push
push
cs
push
dec
dec
sbb
adcb
dec
push
or
dec
test
mov
pop
iret
push
adc
stos
xchg
imul
imul
jle
mov
mov
cmp
stos
and
scas
mov
add
sahf
mov
sbb
inc
ds
out
outsl
popa
jp
aas
dec
or
pop
imul
xlat
and
lret
in
ficoml
xor
test
sbb
pop
add
cmp
mov
push
rep
shrl
sub
xchg
stos
stos
aam
cs
add
jno
imul
mov
outsb
sbb
sub
into
sub
adc
rolb
jnp
jl
inc
push
icebp
adc
fbstp
imul
mov
jne
xchg
cmpsb
push
xlat
sahf
or
jl
xchg
faddl
cltd
cmp
sbb
push
popl
xlat
sbb
sarb
dec
das
jno
jno
mov
das
ja
push
xchg
mov
adc
test
jmp
sti
pushf
pop
rorb
or
and
push
dec
push
fs
mov
inc
mov
repz
shlb
movsb
lahf
add
fsts
cmc
stc
pop
xlat
inc
sbb
mov
dec
jo
push
mov
push
pop
cli
in
mov
jecxz
inc
cmp
shl
int
ss
push
mov
pop
sub
hlt
jl
xchg
popa
jno
pop
lea
add
add
mov
mov
sahf
cmpsb
mov
ret
sub
shr
lahf
pop
bound
daa
test
jnp
idivb
aad
jae
leave
mov
popf
or
out
mov
jg
stos
jno
mov
into
pushl
xor
cmp
dec
dec
dec
and
mov
shrl
dec
push
ret
add
fimull
xchg
push
cmp
xor
xchg
shlb
gs
mov
out
loop
scas
jmp
push
out
mov
dec
pop
xor
outsb
add
sbb
push
cmp
inc
inc
cmp
xchg
subb
pusha
cli
fwait
js
mov
stos
addb
fcomps
mov
push
or
div
repz
mov
jmp
or
cli
jnp
test
mov
pop
popa
jle
push
adc
ljmp
add
popa
pop
lahf
scas
negl
dec
out
loope
and
popa
fcompl
jb
push
dec
xchg
sbb
mov
mov
xor
mov
sub
jecxz
je
xchg
adc
dec
mov
arpl
mov
jg
cmp
jnp
out
insl
lea
adcl
inc
clc
repz
ljmp
fists
loopne
xor
in
xchg
orl
subb
adc
lods
xchg
cmp
movsl
adc
sahf
movsb
mov
push
cmpsb
add
fisubs
imul
mov
fisttpll
mov
jnp
test
lds
mov
adc
mov
pop
rclb
pop
sub
shrb
sub
rcrl
es
pop
cld
gs
imul
mov
mov
mov
mov
aad
ret
rorb
jns
sbb
movzwl
sahf
out
fcoms
mov
xchg
fimuls
cltd
jg
cmpl
in
insb
xchg
lock
in
mov
dec
push
outsl
mov
cli
divb
xchg
out
mov
xor
lock
ljmp
cld
add
movsb
adc
sub
int
in
insl
pop
lods
fwait
and
xor
or
lret
and
sub
fwait
into
imul
subb
pop
push
bound
jmp
les
mov
jg
loope
in
xor
push
mov
xor
jmp
in
imul
or
push
add
mov
test
lcall
mov
andl
out
sti
int
cmpb
mov
pop
scas
xor
push
cmp
xchg
xor
mov
in
sub
xlat
and
out
sbb
mov
rcrl
fsubrs
in
xor
xchg
xchg
pusha
lret
ret
xchg
lret
inc
jmp
xor
movzwl
push
pop
sub
inc
mov
adc
fwait
and
cs
fmuls
loopne
ret
dec
jnp
jg
push
sbb
pop
adc
inc
loop
stc
inc
xor
rolb
cmp
sbbl
scas
lods
fwait
jge
data16
inc
cli
movsb
pusha
loope
shlb
test
dec
daa
inc
sbb
sahf
js
stos
lods
psllq
mov
or
outsl
lods
xchg
xlat
pop
scas
outsb
testb
add
cltd
in
jmp
mov
add
add
push
pusha
cmpsb
mov
jb
cmc
clc
xor
daa
xor
ja
fsts
cmp
test
fistpl
dec
sbb
or
mov
test
push
mov
xchg
or
xchg
mov
mov
xchg
or
lahf
cmc
fwait
js
mov
sbb
mov
fisttpll
stos
outsb
les
roll
aaa
sar
mov
or
popa
cld
lds
push
jle
rolb
mov
icebp
inc
xor
mov
fidivl
imul
mov
je
mov
fbstp
stos
mov
loop
xor
out
pop
inc
cs
mov
dec
dec
out
outsl
adc
ja
out
inc
das
pop
and
jmp
sub
fdivrl
jle
stos
mov
sub
mov
inc
ja
aam
scas
mov
insb
sub
pop
loopne
jg
mov
push
icebp
iret
dec
das
addr16
mov
and
mov
or
cmpsl
cltd
ret
inc
inc
faddl
jne
orb
insl
xchg
cmpsl
hlt
ds
push
es
std
dec
sti
loopne
divl
sub
cld
xchg
cwtl
adc
mov
xchg
stos
add
or
sti
leave
sbb
inc
lret
adc
sub
pop
xchg
mov
lret
push
insb
xor
sbb
cmpsb
mov
and
sub
cmpsl
pop
in
mov
dec
dec
sub
sarb
xor
or
pushf
popa
lcall
jno
push
xchg
cs
aad
adc
dec
rcrb
pop
ja
inc
outsb
cmp
shll
stos
lds
xor
xor
dec
xchg
hlt
loopne
xor
imul
and
lock
roll
dec
mov
lahf
sbb
sbb
sub
divl
test
jg
orl
sbb
inc
lods
push
sbb
cmc
push
das
push
rcrl
mov
mull
mov
fistpll
cmpsl
fcomip
cmpl
xor
lcall
jnp
cmp
mov
mov
aam
into
cs
mov
sub
xor
sub
jmp
ja
leave
add
cs
jo
mov
sub
pop
sub
adc
push
repnz
pop
lods
mov
adc
sbb
mov
lea
sbb
adc
mov
lea
popf
xor
pop
imul
jno
stos
scas
lds
dec
les
fsts
pushf
dec
repnz
nop
pop
inc
jge
push
push
sub
sbb
pop
cltd
push
mov
dec
fsubrs
fdivrs
cmp
cwtl
les
mov
mov
cmc
jmp
mov
loop
fidivs
cmp
fisttps
inc
dec
adcl
pusha
add
imull
jmp
lahf
bound
and
stos
jp
sbb
add
aam
mov
sbb
push
test
rcl
insl
cmpb
jmp
call
aaa
lcall
cmpsl
cld
cli
pop
or
xchg
or
lock
outsl
push
and
cltd
pop
lcall
sti
scas
test
mov
imul
jmp
inc
rcll
imul
adc
test
pop
mov
mov
out
icebp
adc
pop
shll
cld
fwait
int
inc
in
mov
push
mov
test
das
mov
mov
imul
or
xchg
ret
rorl
pop
pop
popa
jge
fstpl
popa
dec
leave
push
mov
mov
inc
jl
dec
pop
xlat
jge
fidivs
jecxz
enter
inc
jns
ja
test
scas
mov
incb
lahf
lock
dec
imul
sub
repnz
xor
loope
pop
mov
sub
mov
push
lods
add
arpl
sub
dec
bnd
mov
cld
imul
mov
imul
mov
push
pop
test
cmp
push
sub
fists
mov
in
xchg
push
adc
repz
popa
movsl
add
adc
test
dec
mov
push
mov
cwtl
cwtl
outsl
test
sub
call
popf
push
adc
or
xor
mov
mov
bound
lret
fdivrs
adc
mov
out
jbe
pusha
pusha
mov
clc
insl
mov
pusha
push
xor
int
jnp
ja
push
mov
cmp
aaa
cmp
jecxz
mov
lods
loop
aas
outsl
push
mov
outsb
dec
inc
push
rol
lret
adc
lods
adc
inc
pusha
jge
lret
lds
scas
in
fsubrs
push
and
push
xor
inc
insl
xchg
or
sbb
in
stos
decl
push
mov
icebp
mov
mov
movsb
mov
inc
ss
ss
push
rclb
jge
push
aaa
jno
lods
stos
pusha
sbb
sbb
fistpll
or
sti
jg
das
lock
fnstcw
mov
push
pop
pop
lret
mov
insl
popf
in
pop
jbe
adc
adcb
in
rcrb
in
add
sbb
fadds
dec
movsl
and
xchg
push
push
push
fdivr
push
inc
xor
pusha
push
aam
inc
subl
cmc
mov
push
ljmp
mov
filds
jne
dec
dec
sub
ss
xchg
cmp
repz
xlat
and
cmp
add
movb
inc
pop
mov
fisubrs
xchg
das
lock
cmp
int
cmpsb
shr
sti
rcr
jge
adc
sbbl
loop
imul
push
dec
shr
and
cltd
fs
mov
sbb
dec
mov
lods
fidivrs
shrl
ret
jnp
jg
xor
cwtl
dec
xor
cwtl
popf
pop
pop
les
lods
shl
add
jle
sbb
lods
fcomps
out
or
mov
repnz
xchg
or
cmp
and
loope
pop
add
adc
in
mov
repnz
in
test
jle
xchg
movsb
cwtl
push
test
fwait
xor
adc
xchg
aas
push
popf
xlat
lods
xchg
mov
loopne
ds
enter
in
mov
or
bound
fcmovb
xlat
test
add
pop
fstl
popa
jnp
mov
call
and
sub
mov
cmp
mov
pop
int
sub
adc
lods
sub
pop
mov
cmp
adc
les
inc
je
pop
pop
jbe
sbb
add
in
xor
push
mov
push
fnstsw
fidivs
mov
cmpsl
aam
mov
std
addl
cwtl
adc
mov
cli
sub
popf
fstps
mov
ss
lods
dec
jno
mov
jnp
dec
cld
xor
outsl
xor
sbb
mov
scas
leave
aas
out
pop
pop
ja
sbb
or
lcall
xor
cmpsl
jl
pop
mov
les
cmp
fs
sub
jo
cmpsl
mov
shrl
push
stos
pop
xor
jnp
fs
fistpl
pop
xchg
fst
std
enter
repnz
outsl
mov
iret
pop
iret
out
js
fsubrp
dec
das
sbb
pop
in
ljmp
stc
lods
or
dec
shll
push
std
mov
cltd
jmp
stos
pop
dec
cmp
gs
movsb
sub
jnp
dec
imul
sbbl
lock
jp
jno
loop
clc
stos
add
out
add
pop
pop
test
push
out
mov
jl
jnp
or
dec
imul
test
sbb
es
loop
jge
loop
and
loopne
imul
pop
mov
jecxz
push
insl
inc
xchg
push
lretw
mov
mov
pop
sub
mov
sub
dec
ljmp
pop
pop
cmpsl
jg
imul
gs
sbb
dec
xchg
je
push
mov
movsb
and
mov
or
adc
add
lahf
or
jnp
push
std
xor
sbbb
daa
sub
pop
ret
adc
fmuls
inc
mov
xchg
fcmovbe
or
lahf
jno
add
mov
ljmp
lods
sbb
adc
inc
push
lahf
and
mov
push
outsl
stos
mov
testb
dec
jne
loop
push
xor
cld
into
xchg
pop
inc
inc
cwtl
sub
xor
imul
adc
mov
jne
pushf
loopne
jg
cmpsb
cs
addr16
sbb
cmpsl
mov
push
inc
pusha
add
test
adc
stc
push
jb
sbb
test
and
imul
jg
xor
lret
sbb
sbb
call
lds
and
clc
xor
aam
and
push
mov
addr16
out
aam
mov
fcompl
mov
mov
sbb
push
or
shrb
and
call
jae
push
test
movsl
xchg
mov
shl
pop
rolb
mov
and
incl
jo
mov
jg
pop
sub
popl
loop
enter
cmpb
insb
out
cwtl
decl
or
sbb
mov
shll
les
sbb
leave
leave
mov
mov
cmp
cwtl
arpl
adc
imul
stos
fdivrs
rcl
fcoms
test
sub
xchg
jg
scas
pop
ret
lret
mov
mov
sub
jnp
out
inc
sub
test
mov
fistps
ficoms
cmp
ljmp
xchg
mov
mov
xchg
add
xor
dec
inc
icebp
cli
jp
je
cmp
das
lcall
sahf
fnsave
scas
cmp
sub
outsb
pop
rep
loop
or
cmc
setge
pushf
leave
sbb
jl
test
into
add
mov
mov
scas
int3
cmpl
cmp
mov
jp
addb
stos
mov
bound
bound
andl
into
mov
nop
or
inc
mov
out
mov
sti
jmp
sbb
mov
pusha
dec
dec
xchg
mov
in
and
pop
pop
or
adc
mov
rcr
push
jo
pop
cs
lods
inc
inc
loopne
icebp
aad
lods
int
addr16
push
push
mov
mov
ficoml
dec
lock
pop
gs
xchg
stc
loope
fwait
into
outsl
divb
and
push
arpl
lcall
rcll
aaa
outsl
mov
icebp
mov
ja
push
add
cmp
push
pop
test
cmova
adc
push
pushl
mov
loop
nop
inc
neg
out
pop
dec
stos
ds
int3
addb
loopne
push
mov
js
mov
mov
movsl
xchg
pop
jno
sbb
xchg
addr16
je
jnp
loop
sbb
scas
repz
mov
dec
fld
push
lcall
cmp
xchg
jg
pop
xchg
mov
xor
sahf
jg
cmpsb
and
movsb
add
dec
ja
push
cld
mov
stos
or
xor
push
scas
in
sti
gs
add
test
outsl
stos
add
call
je
js
adc
pop
sbb
insb
push
xchg
mov
xor
mov
mov
cmp
jmp
xchg
dec
jecxz
and
into
lahf
cmc
stos
lret
lods
ficomps
pop
sbb
pusha
adc
insl
push
jb
or
ljmp
out
dec
int
stc
mov
int3
jg
imul
je
roll
xor
stos
arpl
jge
data16
mov
jne
mov
stc
ret
shlb
xor
mov
push
scas
inc
cwtl
inc
sbb
ss
push
in
or
adc
push
imul
stos
rorl
xchg
repz
dec
mov
repnz
mov
popf
cli
xchg
cmp
mov
shll
sub
xor
sub
xlat
push
dec
aam
out
scas
mov
loopne
test
mov
or
loopne
jne
or
repz
lock
cmpb
inc
sahf
sbb
lcall
out
mov
xor
pop
push
mov
sub
and
sbb
adc
lods
testb
add
jmp
data16
into
inc
adc
or
popa
aad
test
pop
push
ljmp
fcoml
ds
sub
movl
ss
idivb
and
ret
sub
or
mov
lar
inc
adc
add
push
jle
add
icebp
mov
xorb
push
shrb
xchg
loope
or
loopne
shrb
dec
icebp
jne
mov
xlat
mov
add
iret
rorl
or
jge
lea
fsts
outsb
xchg
fwait
xor
repnz
dec
loop
jae
fisubrs
aad
dec
icebp
out
dec
aaa
or
xchg
negl
rorb
cmc
lods
lea
adc
rcr
iret
xchg
xor
leave
insb
out
push
and
ds
clc
aaa
stos
or
adc
test
lea
mov
pop
pop
jecxz
xor
jle
push
bound
mov
push
cltd
cmp
adc
loop
cs
sbb
ret
add
xor
or
sbb
or
bound
lods
jno
sbb
aas
es
out
jae
pop
pushl
ss
or
jo
lcall
push
in
and
lods
dec
movl
jg
inc
push
pop
inc
fs
mov
mov
ds
jno
aad
push
std
pop
fadd
mov
xchg
leave
mov
test
mov
iret
push
leave
insb
imul
fwait
cmp
jge
fisubrs
pop
cld
orl
cltd
or
loopne
pop
cld
out
pop
leave
lock
cmpsb
mov
cs
push
and
mov
call
repnz
cltd
lret
les
and
dec
jmp
out
aam
mov
inc
mov
jo
push
mov
int3
and
add
jecxz
scas
mov
outsl
mov
popa
mov
stos
push
popa
adc
sarb
call
je
ret
std
jle
testb
in
jecxz
sub
jbe
or
cmc
and
inc
mov
jns
les
lds
push
sub
in
ret
fiaddl
cmp
inc
call
jle
clc
push
aam
or
or
pop
movl
stos
test
adc
jmp
pop
adc
or
inc
lods
push
bnd
pop
pop
lret
push
js
push
fidivrs
out
pop
jp
je
mov
add
loopne
dec
int
adc
out
fwait
inc
fldenv
mov
pop
add
jl
int3
adc
nop
cmpsb
adc
imul
roll
sbb
lret
ss
or
fbld
xor
jle
xor
test
lods
jmp
test
inc
jp
mov
clc
jbe
mov
fldcw
daa
mov
cmp
mov
mov
lods
fldl
movsl
adc
jmp
dec
pop
jg
adc
adc
ds
sbb
cwtl
lcall
add
lret
cmp
ret
or
outsl
dec
xchg
cmp
add
jle
sbb
and
cmp
ss
shlb
add
or
pop
call
jbe
push
mov
call
pop
sbb
addb
in
insb
adcl
and
add
jne
ret
dec
pop
xchg
imul
or
mov
mov
sbb
push
add
lret
push
inc
sub
sti
jns
fcompl
mov
push
gs
xchg
sbb
sbb
xchg
sbb
ja
shl
movsl
lcall
addl
pop
mov
mov
mov
fldcw
add
mov
popa
mov
mov
xor
je
xchg
aas
push
inc
inc
adc
add
sbb
mov
movsl
mov
sub
shr
inc
cmpl
testb
stos
add
mov
pop
cmp
mov
pop
sbb
mov
xor
cwtl
sub
adc
pop
dec
testb
inc
or
std
mov
sti
ss
fdivr
add
mov
jbe
pop
adc
xchg
out
mov
push
movsl
les
aad
push
jle
push
scas
add
ss
push
mov
test
insl
sbb
fnstcw
xor
mov
imul
aam
aaa
aad
mov
std
sbb
sbb
xor
popf
mov
sbb
scas
out
mov
jp
setge
aaa
mov
xor
andb
dec
and
sub
orl
push
int3
int3
dec
out
mov
bound
mov
mov
sub
adc
ret
push
jb,pt
jecxz
add
nop
mov
stc
mov
and
nop
aad
ror
lret
or
call
sarl
lods
inc
fwait
popl
xchg
mov
jecxz
xor
js
sbb
fdivrp
lcall
sub
data16
scas
xor
mov
cs
xchg
cmc
lret
lret
lock
sti
or
adc
mov
pop
xchg
in
jbe
inc
int3
scas
mov
ljmp
imul
push
push
imul
xor
fstpt
push
xor
mov
cmp
test
aaa
pop
iret
jg
sbb
push
fmull
mov
add
mov
and
clc
scas
or
fcomp
and
movsl
vpperm
push
outsl
jb
dec
mov
out
pop
das
jg
leave
in
rcll
push
xchg
jecxz
int3
pop
and
ror
mov
call
add
leave
dec
push
or
pop
sbb
mov
lea
incl
int3
cld
pop
mov
lods
js
or
mov
aam
fbld
mov
mov
mov
out
idivb
cmc
inc
push
and
jle
movsb
outsb
outsl
add
sub
gs
add
adc
sti
jns
dec
adc
mov
lahf
mov
aaa
lret
stos
adc
sub
or
dec
repnz
mov
lods
sarb
pop
cmp
cmpsl
cltd
out
push
xchg
call
icebp
or
fidivl
sub
jnp
lahf
popa
add
lcall
outsb
mov
mov
hlt
pop
or
sbb
fcoms
xor
mov
insb
mov
push
jae
leave
mov
fidivl
repz
mov
cmpsl
add
lds
or
push
mov
sub
and
pop
cltd
sbb
int
jp
mov
dec
jbe
gs
cwtl
ret
push
push
adc
jmp
mov
sbb
imull
jle
mov
ljmp
in
pop
cwtl
mov
ds
lret
or
loopne
mov
mov
outsb
or
adc
add
leave
sub
push
lret
or
clc
xchg
leave
shr
pushf
notl
fistps
add
inc
sahf
scas
fimuls
gs
push
dec
fisttpll
lods
aad
test
sbb
push
std
lock
fisttps
sti
xor
sbb
repz
in
cmpsl
andb
incl
je
test
pmaxub
popf
cwtl
push
push
out
in
lahf
mov
mov
lret
lret
ljmp
sub
dec
addr16
dec
cbtw
into
or
sub
sarl
xchg
mov
or
push
insb
adc
xchg
testb
cmpsl
add
xchg
xchg
mov
mov
jmp
aad
orl
outsb
adc
sbb
mov
mov
add
mov
leave
mov
mov
dec
arpl
lds
test
mov
adc
pop
mov
jne
dec
add
mull
and
push
xchg
xchg
sbb
cli
or
aad
dec
and
and
inc
scas
loopne
push
leave
lods
cmp
stos
aas
imul
cld
cmp
dec
das
sbb
dec
xchg
mov
add
lds
add
sar
and
daa
addb
fwait
push
pop
push
je
jmp
add
or
lods
xor
mov
and
pop
cmc
insb
negl
rcr
inc
jp
pop
mov
shrl
std
cli
mov
stos
aam
shrl
das
insb
shl
jge
and
push
fistpll
sbb
shll
cmp
adc
fbstp
add
xlat
and
and
jp
addb
mov
fldcw
repz
lods
cmp
pop
jg
jecxz
xchg
insl
push
jns
mov
stos
pop
nop
test
sub
bound
js
out
sub
jne
data16
add
mov
mov
and
fmuls
push
lahf
lahf
inc
xchg
iret
dec
stc
aam
jg
xchg
sbb
adc
cmp
add
cmp
cwtl
fsubs
mov
mov
jns
fwait
push
fists
sub
sti
sbb
mov
loop
in
inc
mov
pop
mov
and
push
aas
sbb
mov
push
std
dec
sub
aaa
push
xchg
sub
add
es
aam
add
pop
test
xchg
mov
daa
jns
inc
and
out
inc
mov
call
testb
sbbb
and
mov
dec
loop
movsl
iret
xchg
lret
xchg
call
cmp
add
call
lea
outsb
xor
xchg
pop
dec
jle
pop
popf
sbb
adc
inc
fs
jnp
add
fsubr
loope
and
jb
in
xchg
fimuls
mov
mov
fistl
push
jb
das
inc
mov
sbb
push
ret
pop
add
jae
sti
ret
push
cmp
in
dec
leave
arpl
adc
mov
jmp
lock
and
cwtl
rolb
mov
xchg
lcall
xor
imul
int
adc
or
es
hlt
jmp
jmp
dec
rolb
add
lret
fsubl
and
jb
scas
shlb
pop
popf
sahf
leave
pop
xor
repz
mov
adc
pop
testb
jecxz
sahf
sub
movl
add
rorb
fnstenv
dec
loop
mov
les
xchg
popa
fistpll
std
cmpsb
inc
xchg
stos
jne
inc
mov
mov
xor
pushl
add
repz
xchg
mov
adc
pop
and
rolb
bound
cmc
cld
scas
out
pop
mov
mov
or
inc
fisttpl
filds
jmp
in
push
push
lahf
shrl
push
xchg
pop
ret
cmp
xchg
jge
push
mov
int3
sbb
dec
out
mov
lods
test
xchg
push
bnd
mov
jmp
sub
lcall
jno
push
aam
xchg
pop
cmp
sahf
arpl
jnp
xchg
in
aad
in
call
repz
xor
xorb
jb
outsb
sbb
fistps
add
negb
pop
das
ficompl
jo
sbb
fisttps
je
pop
cmp
cltd
gs
mov
cmpsl
fmulp
add
sbb
scas
adc
adc
stos
and
mov
fdivs
and
add
cld
push
addr16
shll
cmp
lea
sbbb
dec
lahf
sahf
popa
mov
popf
shlb
xor
sti
pop
addr16
hlt
loopne
nop
pusha
xchg
jb
dec
xor
in
and
jp
mov
subb
xchg
gs
mov
sbbl
fisttpl
movsb
lds
movsl
sub
iret
popf
gs
in
fcomps
sub
adc
and
fsubr
xor
cs
inc
in
and
xchg
or
repnz
mov
mov
stc
mov
mov
cld
sbb
mov
jbe
push
enter
enter
dec
das
sub
xchg
fstps
pop
pushf
push
mov
xchg
neg
seto
pop
mov
rorl
xchg
pop
pop
inc
push
imul
adc
pop
rolb
fwait
adc
loop
jp
sub
imul
sbb
mov
lret
xor
mov
jae
mov
jnp
push
mov
dec
sbb
das
xor
popa
add
les
mov
fwait
xor
rolb
xorb
mov
push
in
add
sbb
mov
sub
mov
sbb
or
jo
icebp
push
popa
and
popa
sbb
subb
pushf
sahf
xchg
mov
mov
cmp
add
jg
sti
lock
fsubs
shl
jl
sub
stc
fdivrs
add
daa
out
dec
sbb
mov
jecxz
jp
mov
sub
ret
cmp
test
ljmp
jecxz
push
mov
jne
xor
lahf
jns
cmpsl
adc
fimull
push
cli
cmpsb
mov
sbbl
popa
jne
rorl
out
in
shl
out
arpl
cmp
jo
push
push
mov
push
lds
jg
fcomi
sbb
loope
push
push
cmp
jo
aad
sub
gs
rcrb
jnp
cmp
repnz
mov
fwait
daa
ret
sub
insl
pusha
aad
loope
dec
call
cmp
std
and
pop
inc
adc
add
les
jmp
fs
pop
lea
add
popf
pop
cmp
fstl
fisttpl
cmpb
stos
lods
pop
push
cltd
hlt
jle
cld
cld
adc
into
shl
xchg
mov
push
movsb
dec
loope
cmpb
icebp
mov
in
jb
mov
xor
xor
mov
sbb
cmpsb
inc
or
pop
inc
sbb
sahf
mov
xchg
mov
adc
popf
cmp
arpl
jl
scas
sub
add
sahf
mov
mov
fnstsw
sub
sub
jg
popf
stc
xchg
adc
jb
jg
and
imul
xchg
and
mov
fcomps
das
stc
and
add
dec
ljmp
das
inc
jl
data16
insl
adc
jno
xor
into
push
movsl
pop
lret
cmp
pop
loope
addr16
fcmove
mov
fs
jmp
mov
dec
ret
ja
or
imul
insl
mov
dec
mov
add
sbb
dec
mov
xorb
dec
cmp
jnp
lahf
insl
dec
xlat
xchg
shlb
push
inc
sti
jg
mov
shlb
dec
add
pop
add
push
pop
int
pop
int3
ret
ret
in
jle
xor
mov
test
icebp
pop
negb
lods
dec
mov
pop
and
mov
pop
pop
adc
rolb
sub
mov
aaa
addr16
mov
jae
pop
ja
rorb
out
js
sti
push
jb
xchg
cmp
in
aaa
sar
cmp
lcall
pop
sbb
cs
mov
cli
push
outsb
addb
ljmp
out
int3
sbb
xchg
add
lahf
xchg
and
orl
ljmp
in
mov
sarl
call
je
push
insl
shrb
cmc
movb
stc
mov
jno
jbe
jmp
dec
sbb
lock
xor
push
jmp
pop
add
jnp
in
cmp
pop
add
sbb
or
and
push
jp
cmp
sub
addr16
imul
xor
into
lret
xor
cwtl
cmp
jp
jmp
stc
sbb
pop
pop
bound
mov
std
push
jmp
push
inc
mov
xor
insb
xchg
fmul
iret
rol
imul
insb
and
out
pop
stc
mov
fidivs
lret
sbb
into
ret
out
lds
jb
dec
jg
cmpsb
push
xchg
add
leave
rol
pop
adc
sbb
xchg
test
mov
ja
mov
fs
push
sub
dec
pop
mov
or
dec
push
and
xchg
scas
data16
lahf
ja
xor
jl
mov
mov
scas
sub
cmpsb
clc
fucomip
push
ljmp
dec
cmp
mov
inc
xchg
pop
shrb
addb
mov
or
pop
insl
xor
jg
leave
sbb
mov
pusha
xchg
fsubrs
push
lods
ds
rolb
subl
jae
mov
cmpb
in
call
xor
sub
andb
mov
insb
adc
cmc
shr
push
je
mov
and
stos
pop
pop
sbb
std
scas
shll
cmp
inc
aad
sbb
inc
add
in
and
mov
jb
stos
rclb
lds
aam
ret
popf
pop
dec
sbb
dec
mov
cmpsb
stc
jb
push
cwtl
mov
xor
mov
xlat
sub
in
mov
mov
out
int3
cmpsb
insw
clc
sti
rol
inc
sbb
cmpsl
mov
imul
mov
jecxz
sbb
jecxz
or
mov
cmp
into
insl
sbb
je
mov
in
arpl
adc
stos
repnz
push
cmp
rorl
ret
sbb
gs
mov
inc
lcall
push
cmpl
mov
loop
jmp
fs
push
mov
pop
sbb
sbb
pop
pop
push
lcall
popa
clc
imul
das
iret
and
mov
dec
adc
imul
je
adcl
sbb
aas
mov
xchg
movsl
mov
in
push
dec
lock
or
sub
sub
xor
aam
jno
push
int
push
lods
lea
sbb
add
and
mov
fldt
jl
into
jo
gs
ljmp
sbb
cmp
add
or
dec
and
xor
jmp
lods
inc
cmp
mov
outsl
jmp
repnz
dec
hlt
shll
call
jbe
int
and
loop
sarb
or
dec
jle
mov
cmp
add
cli
dec
jl
dec
and
jno
mov
in
test
cltd
sub
cmp
movsl
jl
je
adc
push
lahf
cmp
add
loop
lods
fwait
ret
push
pop
mov
scas
fdiv
dec
jmp
cmpsl
rcll
faddp
ss
mov
inc
int3
scas
jb
mov
in
in
arpl
push
nop
sub
cld
mov
fbstp
mov
clts
dec
cmpsb
push
cs
ljmp
pop
add
cmp
jno
ret
adc
adc
fstpl
pop
jo
mov
shr
in
add
insl
sbb
jecxz
movb
adc
cs
mov
cli
nop
je
adc
pop
or
xor
jle
ret
sahf
push
dec
scas
adc
inc
pop
cltd
arpl
dec
and
hlt
xchg
cmp
call
push
pop
push
popf
push
lahf
push
pop
imul
neg
mov
cmp
dec
adc
add
inc
imul
jo
fistps
sbb
fwait
popa
fldl
cwtl
sub
int
call
mov
cld
mov
pushf
mov
mov
adc
or
je
stos
fcomps
inc
jo
popw
sbb
stos
cmp
stc
testb
pop
loope
xor
add
out
in
sub
out
inc
mov
mov
or
iret
stos
insb
daa
xor
jmp
cmpl
jecxz
mov
jp
ljmp
ret
aam
aas
cmpsb
nop
dec
nop
jle
xor
sbb
mov
xchg
and
mov
lret
mov
imul
pop
or
lods
dec
shl
mov
mov
mov
sbb
fisubrs
sub
adc
test
imul
imul
outsl
popf
out
pop
dec
dec
lods
das
idivb
push
mov
out
stos
push
mov
push
cmp
and
lret
loopne
in
loopne
jp
mov
xchg
test
add
xchg
lahf
adc
popf
aad
push
cmpb
adc
outsb
mov
inc
cmc
jnp
scas
push
daa
mov
outsl
inc
pop
xchg
jb
add
push
test
push
xor
xchg
es
push
test
sarl
mov
call
inc
pop
imul
pop
jp
xlat
lds
xchg
int
ds
ds
aas
inc
sbb
int
pop
enter
dec
loopne
mov
xchg
cs
fsubs
sbbb
inc
push
mov
in
lds
push
ja
xlat
inc
dec
pop
add
loope
addr16
cmp
jmp
xchg
jl
aad
cmpsb
jne
popa
xchg
lcall
incl
or
cmc
aas
andl
aaa
outsl
pmaxub
pop
or
cmc
mov
adc
sub
and
push
jge
cmpsb
push
push
jns
inc
sub
inc
repz
rclb
jg
jo
aaa
and
pop
sbb
push
iret
stos
in
jle
or
and
popf
aam
pop
xor
push
jl
add
flds
cmp
test
pop
scas
gs
dec
jle
pop
rorl
clc
nop
fisubrl
in
xrelease
testb
nop
lods
cmp
inc
decb
mov
inc
xchg
cmpsl
jo
clc
mov
insb
mov
dec
aad
insb
call
sub
push
out
jmp
push
add
push
or
mov
gs
lock
ja
cmc
pop
inc
pop
in
xchg
and
cmp
inc
cmpsl
call
jg
mov
lods
out
ja
adc
in
in
mov
shl
adc
push
mov
mov
scas
jae
push
popf
sbb
xor
lahf
clc
mov
cmp
dec
push
out
mov
sub
mov
rorb
rorb
mov
and
lret
ffree
sub
cmp
cmp
sbb
mov
push
fdiv
dec
and
movsb
in
out
mov
ret
or
jo
pushl
and
int
mov
in
mov
decl
ret
and
xchg
mov
or
aam
test
fwait
xor
or
mov
push
inc
jno
add
sbb
test
dec
sub
push
push
popa
push
loop
inc
inc
dec
jbe
jp
xchg
and
mov
xchg
jb
mov
and
pop
mov
lahf
xchg
fsubl
stos
xchg
jp
movsl
cmp
jecxz
inc
loop
push
and
and
icebp
push
mov
or
inc
add
and
cwtl
loope
xor
cmp
and
xchg
dec
push
xchg
inc
stc
out
sahf
mov
pop
stos
adc
loopne
in
jmp
inc
shlb
xchg
add
pop
xchg
hlt
jo
mov
mov
sbb
pop
iret
jb
mov
add
imul
in
loopne
sbb
loop
or
je
adc
xchg
xor
jg
jp
fnstenv
add
pushl
xchg
or
pop
hlt
adc
and
test
fildl
ret
loopne
or
or
xchg
xchg
leave
inc
adc
dec
or
pop
mov
mov
jl
or
scas
fidivs
xchg
push
push
xchg
hlt
loope
lock
stos
push
adc
inc
lahf
in
imul
nop
out
rclb
fwait
xchg
and
ja
lcall
fsts
pop
daa
repz
ret
mov
pusha
sub
pop
cmp
testl
test
lret
jp
rorl
iret
test
push
sub
lock
jmp
push
int3
ja
push
dec
ffree
pop
lret
stos
or
sub
pop
aam
stos
arpl
push
ss
aas
cmp
pop
xchg
mov
jle
inc
mov
jmp
inc
pop
push
aad
xor
add
push
sbb
into
mov
mul
and
mov
mov
das
jne
lcall
loopne
nop
xlat
test
in
in
sbb
out
in
adc
sbb
sub
sti
cmp
fwait
sahf
nop
pushf
mov
and
loope
roll
mov
push
jno
or
in
stos
pop
mov
push
and
ss
xchg
js
mov
lds
rcrl
cmp
mov
dec
lret
xor
div
insl
xlat
push
mov
movsb
mov
jne
loopne
mov
int3
mov
jecxz
push
std
fnstenv
pop
sub
int
add
sbb
sub
cld
aas
js
inc
and
loopne
popf
inc
xchg
xor
mov
dec
gs
and
sub
mov
gs
mov
lret
jmp
mov
pop
sub
cli
sbb
sar
mov
std
xchg
cltd
daa
data16
cmp
cwtl
lds
sbb
imul
rolb
rcrl
fisttpl
xchg
pop
or
fimuls
addr16
mov
ljmp
pop
push
jno
mov
dec
cmp
mov
push
int
fwait
mov
xchg
jle
or
aaa
sbb
push
sub
setle
add
jmp
jno
mov
xlat
xor
rcll
loop
loope
or
call
stos
mov
aad
and
scas
sbb
push
jle
adc
das
rol
and
hlt
sbb
adc
out
mov
je
dec
mov
xchg
out
jbe
adc
cmp
cltd
clc
filds
xor
in
fsts
cmovae
sbbl
imul
fs
inc
push
cmpsl
mov
mov
dec
push
mov
xchg
push
insb
cs
std
fnstcw
sti
test
pop
sahf
loop
push
insb
jo
in
adcb
sub
movsl
stc
fs
pop
jmp
call
test
in
pop
or
dec
stc
imul
aas
icebp
pop
outsb
push
push
das
dec
xchg
sub
ja
mov
sbb
xchg
add
pop
repz
mov
cmpsl
testb
les
movsl
addr16
push
aaa
clc
xchg
popl
or
stos
std
data16
ja
push
fwait
inc
cmc
xchg
push
add
loope
cltd
divb
jnp
xor
adc
hlt
in
rolb
hlt
out
xchg
cltd
push
and
inc
cmp
dec
mov
or
fisubs
dec
or
movups
pop
inc
xchg
mov
cli
mov
dec
mov
movsb
pop
ss
adcl
or
sbb
cmp
mov
movsl
stos
or
pop
sub
inc
cmpsl
mov
sbb
decl
add
shlb
mov
dec
enter
cmp
add
add
sub
push
lods
cmpb
das
bound
dec
rorl
and
jmp
loope
lods
stc
push
mov
iret
mov
adc
js
xchg
je
inc
enter
push
pop
leave
popa
push
pop
or
jl
cmp
outsl
cmpsl
jbe
scas
imul
sbb
xor
and
ret
aam
sahf
mov
arpl
xor
inc
popf
pextrw
adc
sbb
outsb
popf
icebp
in
adc
add
push
jmp
mov
jae
sub
or
push
or
jge
sub
bound
xchg
cmp
sbb
jmp
popf
js
iret
and
sub
ret
in
and
jl
stc
jge
xor
stos
shrb
push
ljmp
or
sahf
cmc
out
push
xor
sbb
daa
sub
mov
adc
add
jl
inc
mov
xor
cmp
sarb
roll
scas
lret
sbb
push
test
fwait
add
sbb
jbe
out
jg
stos
mov
xor
fchs
jmp
cmp
enter
out
aad
movsb
fmull
add
out
stos
das
test
out
jns
mov
mov
movsl
xchg
enter
mov
and
scas
jp
les
jecxz
pop
xchg
lcall
movsb
aaa
sub
test
jg
data16
outsw
enter
jge
rorb
jle
jb
push
call
data16
test
cltd
out
pop
fnsave
mov
pop
loop
mov
stos
xchg
pop
add
das
mov
sarb
stos
loope
stc
sti
loope
adc
fbld
fs
and
pop
addr16
and
roll
mov
jnp
or
fstpl
and
jmp
fadds
shlb
ret
jae
jbe
cli
and
push
inc
add
cli
mov
or
add
leave
xorl
repnz
and
nop
push
call
mov
test
dec
dec
scas
test
xchg
cld
jp
add
xchg
xor
jge
cmp
add
icebp
scas
xchg
aas
xchg
popf
das
inc
xlat
adc
aam
out
bound
movsl
in
xchg
jnp
fisubl
daa
mov
aam
sbb
mov
stos
andl
mov
cmp
imul
inc
fwait
pop
fxch
push
test
sub
dec
mov
mov
sbb
outsb
das
cltd
insb
fadd
dec
cmp
pusha
jb
xlat
lahf
or
iret
and
pop
lahf
xchg
cmc
add
sub
jecxz
call
cmc
hlt
mov
xor
sbb
xchg
ja
xor
daa
mov
push
jl
ss
vpcmpeqd
fcmovnbe
jg
mov
cmpsl
icebp
addl
daa
push
mov
jns
loopne
cmc
lods
lahf
add
jns
inc
shll
mov
in
dec
repz
icebp
imul
pop
js
pop
lods
stos
mov
nop
rclb
shrl
cs
div
jmp
inc
inc
adc
jmp
test
leave
ret
fisttpll
mov
movsl
sbb
xor
mov
std
jno
arpl
pop
cmp
adc
add
inc
fnstsw
ja
sbb
nop
data16
movsb
mov
or
dec
das
int3
dec
stc
or
int
add
clc
adc
int
pop
sbb
adc
dec
movsl
push
xchg
pop
cmp
cmp
xchg
stos
jno
arpl
je
popa
mov
xchg
lea
test
ret
mov
lods
dec
js
dec
ja
repnz
jl
les
pop
arpl
sbb
push
lods
sbb
cltd
call
push
pop
fldenv
orl
xlat
add
das
dec
mov
mov
push
dec
push
scas
call
cmp
mov
das
cld
popf
jle
mov
add
inc
or
andb
jge
js
cmp
push
push
jno
push
fwait
inc
fstpl
into
sbb
lds
sbb
dec
push
out
dec
add
js
mov
sahf
fwait
movsb
testb
clc
sub
cmpsl
ffreep
fildl
xchg
cmp
bound
es
jge
in
jbe
aam
or
jo
cmp
inc
stos
rolb
inc
stos
xchg
xor
pop
jnp
lods
loop
mov
or
into
jle
or
cwtl
stc
mov
scas
rcrl
imul
lock
iret
inc
pop
or
add
hlt
into
fs
mov
xchg
fsubr
inc
je
ljmp
xchg
jbe
scas
or
mov
mov
mov
mov
mov
iret
push
lret
inc
int
xchg
test
aad
aas
mov
jbe
lods
jae,pt
int3
push
addr16
add
dec
orb
and
dec
loope
dec
sti
mov
clc
ss
cs
inc
scas
ds
dec
mov
ljmp
std
pop
sti
or
xor
and
lock
ss
push
xchg
pop
int3
xchg
cmp
outsl
and
jle
dec
push
add
mov
dec
adc
push
sub
dec
int3
jge
jp
jecxz
mov
cmc
lock
test
jg
ret
test
and
iret
jmp
repnz
stc
xchg
ds
aad
or
mov
pop
push
or
ljmp
mov
xchg
insl
lcall
rorb
mov
xor
stos
jle
sub
push
jnp
add
mov
addr16
mov
ds
push
call
sub
aad
or
enter
jl
cmpl
stos
push
mov
pop
inc
xor
outsl
movsl
mov
test
lock
in
add
dec
lcall
stos
mov
xchg
jno
inc
cmp
loop
inc
mov
popf
stc
pop
cmc
fcmovb
add
sub
ljmp
sbb
xchg
pop
dec
std
push
pusha
lock
xchg
or
dec
cmp
inc
add
or
xchg
cmp
push
inc
into
cmpb
cli
sti
push
popa
rcr
fidivrs
and
sub
cld
push
dec
jge
and
mov
mov
xchg
cli
fisttps
or
inc
test
sub
sub
stos
aam
sarl
cmp
dec
jmp
leave
or
xchg
dec
mov
cli
mov
fsts
mov
pop
mov
push
pop
push
stc
sbb
or
pusha
enter
ss
insb
enter
rcrl
loopne
add
mov
mov
fistpl
pop
icebp
sub
test
xchg
loop
mov
ljmp
repnz
mov
pop
pop
pop
xchg
adc
jnp
jb
jbe
add
in
out
std
daa
mov
mov
mov
xchg
and
sbb
xchg
jmp
jne
inc
aad
pop
loope
jnp
cld
fs
xor
push
pop
and
sub
sbb
jno
incl
orl
pop
dec
xor
in
adc
sub
insl
fnsave
sbb
ds
mov
sub
jne
je
pop
jmp
fs
lahf
aaa
movb
daa
jne
lahf
inc
and
push
dec
dec
mov
dec
out
cmp
mov
inc
pop
xchg
addb
out
cwtl
loop
dec
pusha
sbb
fisubl
rcr
sti
push
scas
fistpll
pop
xchg
outsb
xlat
mov
scas
mov
and
sub
aas
dec
into
mov
sub
mov
push
lret
jle
mov
mov
mov
cs
jecxz
lods
adc
rcrb
jl
popf
inc
in
adc
clc
cmpsb
dec
lods
test
out
out
sbbb
mov
mov
hlt
mov
sub
shrb
cmp
jmp
push
imul
out
rclb
inc
aad
iret
jbe
cmpsl
xchg
pop
jns
xchg
movsb
out
jmp
popf
mov
or
xor
outsb
mov
xchg
pushf
rcll
pop
push
adc
push
dec
loope
jp
cmpsl
inc
lcall
mov
addr16
test
pop
jmp
inc
and
xor
jb
mov
and
mov
cwtl
or
loopne
fnstsw
ss
loope
bound
xchg
mov
xchg
hlt
js
out
xchg
mov
mov
divb
iret
pop
mov
push
call
push
inc
daa
stc
mull
ss
pop
xchg
subl
pop
push
lret
outsl
fs
loopne
pop
nop
push
scas
clc
mov
aam
lcall
jb
or
data16
push
xchg
inc
cmp
daa
inc
movsl
fucomi
push
xchg
sub
jl
lds
mov
jno
ds
push
arpl
adc
and
stos
dec
cmc
jb
pop
cmp
xchg
test
sub
je
sub
fs
adc
mov
imul
mov
jbe
inc
xchg
pop
lcall
fwait
jle
mov
add
jmp
mov
mov
imul
mov
mov
rclb
sarl
jno
mov
xchg
fcomp
loopne
dec
jbe
xchg
xor
cmpsb
adc
jae
test
mov
pop
lods
aad
adc
clc
xchg
mov
imul
rcll
add
fsubs
push
std
lods
cmp
add
jecxz
jg
xor
js
movsb
lea
adc
scas
xor
and
add
aam
cmp
daa
out
rcll
test
push
jecxz
repnz
xor
push
or
cmpsl
mov
mov
in
jecxz
xor
mov
fucomi
cmc
mov
loope
int
add
inc
cmp
insl
ss
aas
testl
adc
jge
dec
call
ret
and
jecxz
loopne
sbb
jae
sbb
inc
dec
out
cltd
insb
lret
jns
ds
mov
in
fs
mov
ds
jne
jle
jno
js
or
pop
xchg
sbb
push
mov
icebp
jae
add
ror
icebp
cs
icebp
lret
inc
add
inc
pop
sbb
fistps
pop
xlat
push
mov
push
xchg
mov
add
xchg
inc
test
push
out
loope
orl
cmp
fwait
mov
cmp
pushf
loop
shld
jl
mov
movsb
sbb
fistpl
mov
jnp
flds
pushf
mov
inc
dec
int3
push
jp
sub
sbb
enter
jnp
and
out
loopne
int
adc
cmpb
dec
jl
imul
lahf
imul
dec
mov
mov
and
sbb
push
gs
pop
sub
stc
imul
iret
aaa
cltd
jp
insb
mov
sahf
mov
jne
xchg
dec
fs
dec
mov
imul
sbb
pop
int3
sbb
adc
add
push
pop
lock
mov
xorb
sub
sub
sub
sbb
or
pop
scas
dec
arpl
out
xchg
lea
mov
loopne
adc
enter
mov
lods
popf
pop
in
pop
mov
ss
add
imul
movsl
xacquire
lret
xchg
fidivrl
aas
cmp
leave
arpl
or
pop
mov
jl
xor
loop
adc
mov
rcl
mov
mov
sarb
sub
pop
cmp
shrl
aam
mov
adc
mov
rorl
push
adc
insb
js
imull
fwait
out
std
xchg
cltd
out
in
and
cmp
pusha
out
shl
daa
cltd
call
and
cmp
mov
into
sti
cltd
fldcw
aad
or
adc
pop
loop
xchg
inc
in
lods
adc
jo
push
js
xor
ss
mov
mov
and
js
add
iret
mov
js
jno
sbb
and
mov
sub
inc
xor
in
imul
sbb
lahf
xor
xor
ja
movsl
flds
cltd
ficomps
cmpsl
popf
xchg
adc
pop
addr16
testl
es
add
mov
mov
aad
punpckldq
aam
push
and
sbb
cwtl
lea
andb
xchg
jmp
lret
std
dec
adc
cmp
pop
adc
ret
mov
dec
clc
dec
mull
subl
lea
call
sbb
mov
fdivrl
and
sbb
lahf
sub
stos
jl
push
lahf
sub
ja
test
push
insb
in
mov
cmp
loop
mov
mov
jbe
gs
cmp
pop
iret
and
pusha
repz
scas
test
cmp
adc
xchg
jp
test
out
pop
je
sub
movsb
notb
inc
cld
cwtl
inc
jno
or
jmp
xchg
push
lcall
jecxz
cmpsl
testl
inc
xchg
mov
inc
cmp
push
mov
inc
js
push
nop
std
mov
and
cwtl
and
bound
jae
jbe
enter
dec
mov
out
pop
push
outsl
mov
call
ss
inc
inc
jmp
xchg
fisttpl
loop
sbb
sbb
pop
dec
add
push
jbe
mov
pusha
int
inc
push
pusha
cli
mov
mov
jno
mov
addr16
or
outsl
and
shll
push
and
inc
in
inc
add
jge
mov
outsb
add
xlat
mov
cli
lahf
movsb
pushf
into
les
sbb
xchg
and
pop
pop
cmp
cmp
push
int3
jg
add
rolb
mov
jnp
and
lods
xor
es
fwait
cld
cmp
xor
imul
in
adcl
subb
dec
sbb
mov
xor
mov
movsb
add
or
cld
pop
and
jg
adc
pop
sbb
aaa
cmpsl
xor
shrb
dec
mov
in
loopne
das
and
jns
lahf
adc
sub
sbb
in
push
cmp
rcrb
mov
xor
mov
aas
icebp
pop
in
aas
xchg
dec
push
aaa
fdivrs
inc
outsb
jmp
mov
cwtl
in
pop
cld
and
cmc
bound
mov
cltd
incb
mov
xchg
push
dec
mov
dec
xor
std
int
lahf
out
or
fnstcw
jle
mov
leave
outsb
out
stos
and
repnz
cmp
outsb
mov
cld
push
adc
iret
and
call
sahf
cmp
push
mov
sbb
or
xor
leave
fisttpl
jo
push
mov
jmp
fwait
rolb
shll
addr16
pusha
add
stc
cmp
xchg
dec
cs
hlt
and
jp
ret
cwtl
inc
xchg
mov
xor
pop
pop
fisubl
out
dec
or
and
jecxz
add
test
xchg
sub
jp
fiaddl
push
movsb
dec
pop
xchg
jge
loopne
push
sti
ror
jge
pop
movsl
pop
jge
cmp
mov
pop
xor
inc
mov
push
aam
mov
andl
and
sub
jnp
aas
iret
les
add
ret
je
test
inc
inc
movsb
fs
xor
mov
pop
outsl
das
mov
sbb
xchg
loopne
dec
mov
dec
dec
adc
sbb
xrelease
xlat
lea
mov
pop
rorb
jb
mov
mov
dec
fcomp
jge
cmpsb
sarb
out
cld
dec
stc
dec
inc
repnz
stos
jo,pn
cmp
xor
xorl
or
mov
fisttpl
scas
mov
push
repz
pop
jmp
sti
insl
mov
fwait
shll
aas
fsubrs
sub
add
sub
sbb
std
sahf
mov
outsb
insb
jge
add
lret
fcompp
pop
sub
xchg
mov
push
lods
shrd
flds
cmpsl
pop
and
mov
stc
aas
inc
filds
rol
jl
out
lret
pop
push
aas
mov
or
lock
lods
mov
mov
pop
add
cltd
jge
loopne
jb
cmp
cmp
in
loope
int
or
imul
fwait
push
add
aam
xor
mov
jp
mov
stos
sbb
pusha
daa
push
in
int
push
lods
test
into
rcrl
sahf
mov
adcb
inc
int3
mov
cs
iret
adc
mov
push
inc
popf
and
inc
test
aam
xor
outsl
shll
icebp
sbb
and
push
mov
add
int3
flds
lret
jle
push
cmp
pop
xchg
rcrb
int3
xchg
push
dec
dec
push
scas
adc
cwtl
clc
ret
dec
lret
inc
jge
push
lods
jmp
push
addb
je
into
fcmovu
pushf
or
int
mov
add
jp
into
popa
push
inc
mov
add
mov
mov
xor
mov
dec
xchg
jg
dec
int
lret
rorl
in
mov
xchg
push
lret
aaa
adc
stc
and
hlt
jp
dec
lods
cmp
sbb
inc
jp
rcl
popa
mov
fildll
jp
sub
dec
sbb
pop
add
cmp
pop
adc
das
scas
dec
mov
iret
int3
orb
xchg
jns
xchg
or
cmp
out
clc
add
jae
lock
cli
out
les
xor
add
dec
stos
cmpsl
dec
adc
das
push
xor
add
add
loop
jo
lock
sbb
xchg
inc
xlat
add
sbb
pop
icebp
dec
or
loopne
add
dec
test
xchg
ret
scas
je
movsl
repz
loop
loopne
dec
xor
int3
pushf
and
and
cmp
xchg
pop
aas
xchg
clc
inc
pop
pusha
inc
and
vpunpcklqdq
dec
enter
loop
add
mov
lret
xchg
andb
mov
xlat
cwtl
pop
fincstp
xchg
fidivrs
adc
pop
lcall
xor
data16
lock
add
das
test
lcall
popa
pop
arpl
or
mov
sbb
fs
fdivrl
lret
shll
push
in
sbb
dec
mov
cli
cltd
sub
xchg
jl
or
popf
movsl
mov
sbb
and
inc
mov
lock
mov
call
add
inc
jno
fwait
into
enter
push
jnp
mov
jnp
movsb
pop
or
ljmp
ret
out
cwtl
xor
and
cmp
cltd
push
or
insl
mov
mov
icebp
shrb
sbb
inc
bound
mov
lods
or
je
into
add
xor
fcmovbe
gs
fcoml
pop
leave
ret
mov
insl
jmp
repnz
aad
mov
mov
sub
jmp
push
push
add
gs
cmp
jmp
push
fbld
pop
sti
rcrb
push
idivb
lds
icebp
lods
leave
loop
inc
popa
add
idivl
std
jnp
rcrb
inc
xchg
mov
std
pop
lcall
jge
cmp
dec
daa
inc
cmpl
imul
out
adcb
xor
cld
aaa
test
popa
scas
pop
lods
push
stc
adc
inc
jecxz
stos
lods
push
orb
xchg
jns
xchg
xchg
lds
loope
rolb
int
sub
mov
push
sbb
pop
imul
pusha
test
lods
nop
les
xchg
fwait
mov
or
in
cwtl
xor
lods
inc
xorb
subb
cmpl
movsb
jb
ret
ffreep
dec
popa
xor
cmp
and
cmovp
inc
outsl
pop
pop
bound
pop
push
in
out
scas
idivb
pop
adc
xorb
mov
or
lret
sahf
mov
push
dec
pushf
push
cwtl
dec
dec
or
repnz
xor
adc
and
pop
call
xchg
mov
pushf
push
mov
bound
push
movb
cmpsb
call
rcl
hlt
stos
mov
sbb
loop
lock
mov
mov
xchg
cld
ret
jge
add
mov
imulb
call
add
mov
jns
rorl
xor
mov
cmpsb
testl
popf
leave
std
idivl
pop
and
adc
js
orb
shlb
xor
stos
ret
add
ljmp
dec
mov
fs
jp
fldt
xor
mov
mov
xchg
das
dec
gs
out
pop
fwait
cmpsb
mov
in
jle
mov
aas
sti
jg
mov
xor
in
mov
jns
cwtl
cltd
mov
movsl
xchg
pop
ja
xchg
imulb
pop
sub
pop
jl
pop
cmp
jg
sbb
inc
push
fcomps
adc
js
xchg
int
rclb
jle
pop
test
mov
xorl
pop
test
stos
jle
mov
mov
jne
sbb
mov
push
xadd
imul
stos
mov
scas
neg
nop
clc
lods
ja
js
cwtl
mov
in
addr16
mov
js
popa
or
popl
xchg
mov
mov
ficomps
adc
pop
mov
xchg
pop
in
fistpll
icebp
in
adc
lahf
jnp
jge
or
or
pop
inc
mov
andl
push
pushf
imul
dec
rorb
sbb
mov
faddl
jge
sub
es
cmp
mov
dec
sbbb
or
dec
cmc
mov
push
repz
sbb
scas
lods
or
mov
or
jo
mov
cmpsb
leave
xor
dec
pop
je
mov
push
bound
test
or
inc
mov
xor
or
xchg
int
add
and
cmp
jmp
dec
push
and
arpl
ret
or
fists
push
mov
or
rcrb
cmp
mov
xor
sub
imul
roll
dec
stos
or
cli
sbb
fdivl
xlat
test
int3
test
push
push
inc
push
outsb
mov
adc
orb
testl
jecxz
jmp
pusha
sub
in
mov
mov
leave
or
sub
sub
and
push
pop
mov
xchg
mov
ds
popa
mov
sbb
and
push
jg
dec
inc
test
mov
mov
push
addb
outsl
ljmp
test
sub
arpl
cmp
xorl
adc
push
sub
orl
mov
add
mov
aam
lahf
mov
inc
aam
iret
jecxz
imull
mov
xor
jbe
mov
jnp
mov
int3
arpl
repnz
inc
mov
lods
cmp
cmp
or
or
into
sbb
mov
sbb
pop
sbb
xorb
in
sub
movsl
lret
scas
mov
lods
ds
adc
sbb
jmp
js
je
out
call
pop
or
lret
push
mov
push
add
pop
imul
jns
aaa
or
clc
mov
ja
pop
add
or
add
in
vlddqu
imul
adc
inc
fimuls
nop
pop
popf
pop
add
xchg
push
jmp
bound
inc
cs
loopne
pop
sbb
xchg
push
inc
dec
mov
mov
pushf
shlb
in
in
add
fs
ficoms
mov
jb
les
adc
xor
test
pop
fnstsw
xorb
inc
cmp
je
adc
iret
lds
jb
or
data16
aas
adc
ret
xchg
xchg
fsubr
pop
out
insb
loop
push
scas
push
jne
rclb
je
in
push
sub
dec
pop
sbb
xchg
add
xchg
lods
cmc
sub
popa
ret
push
daa
cmpsl
jmp
bnd
sbb
les
pop
xchg
test
and
xchg
cmpsl
xlat
pop
rorb
and
lret
popa
inc
movsb
lret
inc
ret
lahf
and
xor
mov
adc
push
push
insb
fs
mov
js
xchg
jge
xchg
stos
and
cmp
outsl
adc
popa
lea
insl
xchg
outsl
cld
out
mov
xchg
xlat
xchg
adc
daa
jl
cmp
push
lahf
mov
mov
pop
adc
inc
mov
divl
into
in
mov
icebp
jno
cmp
adc
outsb
jb
cmpsl
div
push
loop
sbb
ss
cmp
adc
pop
sub
cmp
movsl
jge
mov
aad
add
jge
lcall
int
xchg
fsubrs
pop
fisttpl
data16
imul
psubsb
dec
xchg
out
xchg
sbb
jb
jl
pop
mov
rcrl
lods
push
rorb
sahf
loopne
mov
mov
and
aam
dec
lcall
dec
in
ds
aaa
test
push
jne
or
pop
sbb
inc
pop
push
dec
mov
jg,pt
pop
mov
inc
std
cmc
mov
stc
cmovno
xchg
jae
dec
mov
ds
mov
adc
clc
or
setno
mov
stc
pusha
aam
test
jb
in
dec
dec
outsl
sbb
mov
xor
sbb
dec
sub
dec
fsubs
pop
xchg
dec
sbb
in
bound
sarb
jae,pn
out
ja
rol
or
push
push
mov
and
mov
xchg
ja
push
out
push
fdivl
dec
add
cld
sbb
add
subb
cmp
add
std
inc
mov
bound
cmpsl
xchg
das
mov
jmp
int3
rcrl
inc
xchg
cmp
test
sub
push
pushl
add
adc
aad
lock
gs
adc
xor
lgs
fbstp
mov
les
pop
mov
out
or
stos
sbb
add
sub
pop
rcrb
movsl
mov
mov
jle
in
and
push
popa
mov
scas
inc
xchg
into
cmpsl
dec
arpl
xchg
xchg
cltd
mov
xor
pop
ja
push
imul
jns
rolb
sub
lea
pop
adc
mov
sbb
fsubrs
aaa
dec
gs
jne
or
push
aas
sti
test
insl
dec
xchg
xchg
xchg
js
add
stos
and
push
ljmp
lods
fiadds
repnz
mov
mov
adc
add
push
inc
popa
mov
fidivs
dec
pop
bound
out
das
push
inc
inc
mov
iret
sub
mov
cmp
lods
aad
dec
fidivs
sbb
mov
mov
cmp
push
fnstcw
xchg
mov
adc
mov
push
rorb
jnp
mov
mov
push
cli
test
mov
jecxz
enter
cltd
push
adc
out
stos
ret
adc
push
mov
test
into
xor
cltd
je
pop
mov
cmc
mov
imul
outsb
cltd
ret
pusha
stos
pushf
push
xchg
int3
cmp
pop
mulb
fcomip
ljmpw
mov
leave
mov
pop
or
sub
sahf
in
pop
push
xlat
inc
cmp
int
les
rcl
pop
enter
mov
lretw
cmp
sub
mov
add
sub
mov
stc
and
push
cmp
or
dec
xor
adc
test
daa
cmp
dec
cld
inc
inc
dec
lock
out
xchg
dec
sahf
flds
jmp
dec
add
pusha
nop
mov
popf
arpl
add
or
inc
cmp
clc
mov
lods
aad
fmull
inc
push
aaa
popl
xor
iret
rcll
and
js
scas
sbb
xchg
push
inc
and
je
xor
mov
rcrb
jp
add
pop
pop
xchg
add
and
pop
clc
cmp
mov
and
adc
inc
pop
mov
outsb
push
ret
cmc
in
gs
cwtl
sbb
aas
sbb
push
sar
cmp
jne
ljmp
into
xlat
nop
push
pop
jmp
ficomps
jl
test
cs
or
into
add
mov
inc
mov
stos
inc
ss
cli
jecxz
mov
pop
xor
movsb
add
mov
add
sub
mov
add
mov
jbe
xchg
fcompl
hlt
adc
jmp
ljmp
xchg
ror
bound
inc
push
jge
jmp
inc
cmp
mov
mov
and
call
out
shr
and
iret
xor
stos
or
cmp
cmc
fcompl
mov
into
lds
imul
in
pop
in
movzbl
popa
adc
adc
xchg
dec
jb
in
gs
xor
sub
cli
cmpsl
inc
sbb
mov
and
popa
out
ret
mov
mov
shll
sbb
mov
mov
lods
inc
gs
add
imul
fldl
add
add
cmc
popf
or
xor
cmp
mov
jg
btrl
pop
sbb
rcll
ja
sub
mov
test
leave
or
aas
push
jmp
repnz
add
lahf
add
xchg
int
mov
in
add
cmc
add
cs
test
ret
push
imul
inc
push
push
jmp
daa
scas
dec
inc
and
sahf
roll
jo
gs
add
sbb
xlat
pop
sti
jge
insl
add
xchg
fs
xor
add
mov
jne
cld
das
adc
xor
aam
int
pop
or
or
and
cmp
shl
fidivrs
test
sti
iret
xchg
cli
push
movsl
xor
sub
cld
mov
outsb
push
loopne
fwait
add
cmp
xchg
and
dec
and
icebp
mov
stc
sbb
inc
idiv
push
iret
rolb
das
dec
lahf
xchg
imul
pop
cmc
sbb
xchg
cmp
jmp
adc
mov
lea
test
cltd
out
xchg
sbb
adc
add
lods
mov
outsl
adc
jle
mov
push
mov
cmp
adc
jb
jmp
xchg
pop
call
dec
adc
inc
js
pop
xchg
sbb
mov
addr16
into
pop
mov
sbb
data16
iret
popa
testl
movsl
cs
inc
jp
xor
jg
mov
leave
je
test
xchg
mov
mov
xor
jmp
adc
in
jo
mov
add
pop
mov
mov
mov
cld
incb
pop
xchg
test
or
or
loopne
in
xchg
scas
push
hlt
add
out
aad
and
sub
or
ja
push
repnz
pminsw
in
jge
sbb
add
shlb
arpl
xor
fistps
fcomps
jae
std
add
or
push
shld
jge
sub
daa
pop
mov
addb
cwtl
pop
loope
jbe
push
push
enter
rcr
js
fidivrl
dec
jmp
ja
push
addr16
push
stos
lods
pop
jno
cmp
call
adc
xlat
jo
stos
mov
or
outsb
aaa
jp
mov
filds
pop
cmovnp
dec
daa
gs
sar
rolb
sub
lea
and
test
jbe
lods
aaa
clc
push
cmpsl
add
sbb
ljmp
int
fidivrl
dec
movl
divl
xchg
jecxz
insb
push
inc
xor
adc
fwait
lahf
cmp
mov
push
aad
mov
pop
xorl
mov
inc
and
sar
loope
or
sahf
iret
inc
sub
dec
sbb
std
xor
arpl
pop
add
pop
ror
int3
or
sbb
push
test
xchg
ljmp
jnp
rorl
imul
xchg
fisttpl
addr16
out
insl
dec
mov
out
xchg
lahf
push
add
pop
cmpsl
sbb
sbbl
fmull
sti
mov
icebp
push
pop
ror
cli
xchg
gs
add
inc
push
mov
sbb
insl
mov
push
inc
das
outsl
repz
loope
xchg
dec
insb
add
ja
cmp
pop
push
xor
bound
dec
adc
lock
loop
add
jl
cmp
clc
or
rcrb
fsts
mov
add
rcrl
jne
xchg
push
int
push
addr16
mov
pop
data16
pop
pop
negb
cs
pop
andb
out
add
push
aaa
xchg
jbe
imul
in
xchg
ds
out
cmp
dec
pop
cmp
mov
inc
cwtl
mov
xchg
mov
mov
out
lods
pusha
stos
into
jl
rcrl
cmpsl
inc
mov
mov
push
jnp
repnz
and
out
add
dec
mov
fwait
addr16
push
lods
lahf
mov
mov
fstpt
jnp
popf
lea
push
idivl
arpl
sbb
dec
push
jns
dec
lods
popf
jle
aaa
arpl
insl
pop
xchg
mov
xchg
ret
inc
outsb
xchg
adc
pop
and
xchg
jle,pt
push
sub
inc
js
leave
push
mov
xor
adc
adc
dec
mov
mov
jecxz
scas
xor
dec
and
cwtl
in
in
pushf
rcr
scas
sahf
sbbb
mov
push
sbb
rclb
sbb
mov
xor
dec
mov
jp
mov
ret
sti
insl
sub
sub
out
test
into
loopne
fsubs
jns
and
sub
adc
push
add
sbb
mov
pop
int3
pop
adc
sahf
ret
insb
or
push
adcb
cltd
sub
out
in
dec
js
sub
lcall
xchg
dec
cmp
sub
inc
sti
fs
popa
stos
jae
rcrb
shll
jns
inc
and
sub
xorb
xor
stos
xchg
fucom
cmpsb
addr16
les
or
mov
sahf
lret
dec
call
je
and
stos
aad
and
in
ds
in
ja
insb
cmp
mov
xchg
mov
push
int
mov
dec
fcomip
mov
push
icebp
pop
mov
xchg
stos
and
aas
jge
int3
mov
lock
and
loopne
cmp
and
pop
mov
add
cmpsb
sti
lret
jge
and
and
jl
fnstcw
jmp
add
xor
into
test
mov
hlt
push
add
xchg
jns
xchg
cltd
jb
cwtl
mov
cwtl
push
aas
push
push
xchg
cmc
sub
in
iret
js
test
and
ds
pusha
xchg
fsts
inc
cmc
cwtl
fstp
pop
or
push
or
imul
pop
fcmovnbe
mov
rol
lret
push
jg
mov
adc
dec
xor
fwait
sbb
in
and
dec
lods
fnsave
std
jno
mov
mov
repnz
xor
mov
pop
negl
mov
fs
fstpt
push
jno
cmp
sub
sbb
xchg
icebp
movsl
cmpsb
add
fisttps
xor
movq
les
popa
bound
ja
mov
pop
cli
adc
jle
mov
cmp
sub
and
notb
out
pop
dec
pop
add
popa
iret
dec
xor
fs
movsl
stos
stc
jp
loope
cmp
jg
std
xchg
cmp
dec
outsb
and
mov
inc
into
jge
imul
pop
testl
data16
inc
jge
decb
pop
pushf
xor
ret
xor
dec
adc
mov
ljmp
cs
xchg
sti
or
popf
mov
mov
sbb
adc
pop
add
mov
xor
addr16
jb
sub
push
sbb
push
cmc
push
inc
or
cmp
insl
mov
jmp
pop
das
sbb
and
adcb
mov
gs
xchg
bound
inc
std
cmpb
mov
dec
cmpsl
add
mov
mov
xor
dec
xor
xor
out
sub
jl
mov
rcrb
gs
mov
add
cmpsl
fsub
rcl
push
mov
pusha
pop
pop
cmc
mov
mov
mov
dec
mov
mov
or
add
push
outsb
or
push
pop
sub
jp
jbe
mov
icebp
ret
mov
frstor
pop
or
test
mov
dec
mov
orl
das
sar
xchg
push
xor
sub
shrb
ja
incl
xchg
fldenv
mov
mov
icebp
push
add
pop
rcll
lahf
or
sub
test
addr16
shlb
jecxz
sbb
mov
inc
insb
xchg
or
mov
lahf
insb
lahf
pop
inc
mov
iret
mov
sahf
cwtl
in
shll
add
arpl
sub
jp
jmp
ret
pop
mov
pop
jmp
test
xchg
xor
pop
gs
sub
adc
mov
jmp
cmp
dec
daa
or
pop
gs
xorl
stos
repnz
push
int3
adc
inc
push
push
pxor
jae
sub
pop
pop
lods
add
sub
ds
lds
fistl
xchg
adc
mov
lcall
jmp
inc
hlt
in
imul
push
jbe
mov
fscale
and
aam
inc
xchg
jge
gs
std
xchg
fwait
sbb
jne
pusha
adc
mov
sbb
pop
adc
out
lods
mov
mov
xchg
mov
inc
mov
mov
push
into
enter
xor
and
adc
sbb
cmp
add
xchg
pop
scas
insb
mov
push
sbb
scas
sbbb
out
cs
xor
lds
cmp
call
xchg
shl
xchg
jle
fcomps
and
mov
sub
xchg
inc
xor
call
inc
push
ds
inc
mov
xchg
sahf
sub
or
dec
mov
add
dec
push
jae
jbe
popa
jne
sbb
cltd
out
ficompl
adc
or
xorb
out
and
and
inc
xlat
mov
push
pusha
stos
mov
test
sbb
mov
jo
lret
loope
stc
adc
cmc
mov
scas
inc
fwait
add
sbb
or
push
dec
add
push
push
lea
gs
scas
andl
rcrl
lods
pop
mov
fsubrp
in
std
dec
push
popf
cmc
aad
lahf
cmp
callw
lret
cmp
xchg
pop
jno
xor
pop
or
jnp
loope
popl
mov
xchg
and
add
inc
push
jge
mov
mov
push
sbb
call
cwtl
push
or
ja
fstpt
inc
add
mov
mov
and
jns
xchg
cltd
es
outsl
xchg
pop
andb
cmpsb
push
jmp
xor
repnz
and
push
pop
pop
cmpsb
push
pop
mov
jecxz
lds
add
and
adc
jnp
adc
mov
push
into
inc
xchg
in
push
mov
mov
ffree
imul
ret
sbb
and
out
xchg
sbb
adcb
mov
bound
jae
clc
add
jge
vrsqrtps
xchg
cli
shrl
pop
jb
push
xor
inc
sbb
loop
gs
hlt
inc
das
push
or
mov
imul
test
test
iret
in
push
ds
cmp
hlt
movsl
bound
inc
test
cmc
stos
sub
rolb
arpl
sbb
ficoms
mov
dec
fisubrl
sbb
sti
pop
inc
fistpll
lret
pop
add
repz
aad
outsl
xlat
sbb
das
cmp
mov
aaa
ss
or
xlat
cld
pop
cmp
cmp
lahf
jg
stos
in
psubb
sub
data16
dec
pushf
sub
adc
xor
insl
xor
cmpsb
xchg
cmp
jnp
out
shrb
jp
loop
push
sbb
dec
xor
js
mov
enter
ret
inc
inc
add
lret
popa
stos
add
jmp
cld
add
mov
lods
cmp
cwtl
lret
gs
sub
aad
ret
mov
lods
dec
and
dec
jp
fs
jb
adc
adc
adc
bound
inc
test
push
pushf
mov
xchg
dec
fsubrl
mov
insl
sub
out
out
fdivp
pop
cmp
jmp
inc
out
bound
popf
add
rcll
roll
sbb
push
pop
mov
jae
mov
mov
repnz
scas
arpl
ret
mov
test
push
ja
stos
inc
lds
pop
test
sbb
scas
jnp
sub
push
xorl
movsb
cwtl
test
mov
std
sub
cld
cmpsl
sbb
add
sar
enter
jecxz
sar
mov
dec
dec
jg
mov
movsb
and
xor
push
add
jp
leave
cmp
inc
adc
and
ss
mov
dec
enter
shlb
xchg
negw
and
leave
push
cmp
sarl
lods
mov
and
in
sti
cmpsb
mov
jne
out
das
pop
clc
sub
in
addb
pop
pop
inc
mov
sbb
insl
fimull
sub
gs
mov
leave
jecxz
js
js
jno
push
frstor
mov
push
inc
dec
arpl
adc
xor
loope
jle
lds
stc
sub
xlat
mov
dec
mov
sub
movsb
fs
cli
xchg
inc
add
rcr
fs
jmp
hlt
mov
sub
mov
stc
nop
and
cmp
and
push
add
scas
sahf
loope
loope,pn
scas
popf
das
enter
outsb
jmp
xchg
inc
int
add
rolb
mov
fdivrl
not
jns
mov
ret
test
div
lods
arpl
xchg
subl
insl
pop
sub
cmp
push
test
stc
pop
mov
xchg
cmp
jge
adc
daa
test
adc
int3
or
or
lret
sbb
and
lcall
jl
mov
jno
jno
or
stos
add
add
or
inc
or
fistps
jmp
sub
cli
cltd
test
in
insb
jmp
xchg
repz
gs
pextrw
push
push
pop
data16
mov
or
stos
pop
add
out
or
fstpl
jno
fistpll
adc
xor
vpor
lcall
cld
push
or
pop
lcall
icebp
and
jmp
sahf
mov
cli
xor
iret
es
or
mov
movsb
adc
popl
jno
inc
xor
dec
xlat
push
add
add
stc
insl
xchg
outsb
push
and
push
out
outsb
xor
fstpt
fwait
jp
cltd
mov
test
xchg
jne
lret
sub
dec
fiaddl
pop
cltd
popa
leave
adc
scas
xchg
xchg
stos
dec
pop
insb
and
leave
insl
add
daa
inc
adc
rcrb
outsl
mov
jne
int
andl
ret
fstp
push
sub
adc
pushl
cli
add
out
adc
adc
loope
sahf
cmp
and
xor
and
aas
and
inc
rol
mov
orl
mov
popf
inc
add
pop
inc
jge
leave
ret
outsb
mov
pop
adc
out
add
ss
inc
por
mov
xchg
pop
jmp
mov
pop
clc
add
cmp
sbb
das
sbb
jle
daa
jbe
cmp
sbb
es
jae
enter
flds
adc
mov
push
sbb
nop
lock
cli
pop
stos
imul
pop
es
test
xchg
inc
cltd
mov
push
dec
fcmovu
xchg
ss
data16
or
outsl
inc
outsl
daa
mov
fdivrs
mov
sub
push
mov
or
mov
cld
xchg
lret
out
jb
dec
es
mov
or
push
mov
addr16
pop
mov
xchg
fs
xor
les
jge
mov
dec
call
jne
mov
mov
pop
stos
dec
ret
ja
push
adc
sbb
in
std
fnstsw
pop
xchg
es
jae
pop
sbb
in
aam
pop
loope
rolb
rcl
xor
insb
sub
add
jp
sub
aaa
in
enter
add
mov
out
leave
loope
fcoms
addr16
xor
fwait
dec
jno
mov
mov
push
loope
js
gs
mov
outsb
int3
push
ljmp
mov
fstpt
into
xchg
push
mov
nop
loop
push
add
jmp
leave
adc
loope
fwait
inc
xor
cltd
lock
repz
mov
hlt
sub
leave
cmpsb
js
daa
fadd
sbb
fsubr
jno
je
mov
fldt
sub
lret
loope
xor
sti
shlb
jecxz
fisubs
inc
add
inc
bound
loope
sbb
cmp
mov
gs
cs
or
xor
mov
push
loopne
sub
fldl
push
sbb
mov
push
shll
pop
or
jbe
xor
pop
xchg
cmpsb
loop
push
adc
test
push
jmp
inc
ds
mov
pop
cmpsl
dec
fistpll
jno
push
jp
ljmp
dec
cmpsl
lock
loop
xor
jno
jae
xchg
in
fwait
xchg
mov
in
data16
and
in
mov
lcall
inc
in
and
in
clc
sti
sub
iret
nop
fs
in
cmp
add
jg
into
sub
popa
in
fistl
mov
jb
int
and
in
pop
mov
pop
ret
mov
movsb
adc
pop
add
repz
ljmp
insl
jno
popa
push
out
push
rorl
fwait
dec
add
jnp
cmp
ljmp
je
adc
js
cld
cltd
pop
mov
nop
pop
pop
mov
pop
mov
push
adc
call
mov
out
jecxz
mov
sbb
mov
inc
sbb
mov
outsl
jne
ret
ret
cli
sti
cmpsb
xor
xchg
out
push
leave
in
mov
or
jo
in
mov
mov
nop
adc
push
pop
iret
test
cli
push
aas
adc
enter
add
or
mov
shlb
je
and
fwait
sbb
shll
pop
pop
pop
aam
sub
and
imul
lds
cmc
cmpsl
or
je
shll
movsb
inc
ret
mov
clc
jns
aas
xor
inc
aam
adc
push
dec
xor
movsl
rcl
push
aaa
imul
sub
pop
xchg
push
loop
mov
idivb
mov
faddl
lds
daa
cwtl
sti
push
std
mov
mov
or
inc
fisubl
xchg
jmp
cmc
push
lock
mov
jecxz
xor
mov
xchg
dec
xchg
insb
ret
xor
repz
jp
pop
or
scas
mov
mov
xchg
orb
hlt
push
push
mov
sti
aas
adc
imul
sbb
test
sub
jb
mov
mov
mov
fwait
sub
inc
sub
mov
or
stc
arpl
stc
or
sti
jne
mov
add
out
xlat
or
mov
lock
mov
push
sub
imul
pushf
lods
dec
mov
imul
or
bnd
pop
dec
fs
mov
insb
sbb
push
movsb
add
cmp
popf
sbb
inc
push
xor
gs
or
movsl
dec
or
fstpl
dec
cwtl
mov
rol
dec
jno
mov
sub
call
cmp
cmc
mov
xor
and
out
mov
mov
cmpsb
shl
and
push
cmpl
out
loope
push
jbe
and
das
mov
bound
lahf
add
cmpsl
enter
xchg
xor
mov
clc
jl
je
lret
dec
in
data16
out
rol
lret
rcr
sbb
sub
testl
xchg
flds
xor
and
mov
pusha
mov
das
xor
fsts
pop
pop
xchg
add
mov
add
jne
jp
pop
lcall
cmp
inc
jge
and
aaa
xor
xor
dec
dec
mov
lahf
loopne
cmp
dec
in
dec
mov
repz
inc
pop
cli
xor
jns
lret
je
test
xor
lahf
sarl
add
mov
shll
stos
pusha
stos
stc
add
pushf
sti
adc
pop
addr16
add
xchg
aas
aaa
or
cmpb
sub
in
js
out
push
sar
fidivl
xor
dec
stc
in
mov
or
icebp
push
hlt
or
push
add
sbb
mov
shll
inc
push
push
ffree
push
mov
fnsave
xchg
arpl
int
call
adc
push
jae
das
jecxz
add
imul
outsb
aas
pop
enter
cmp
shrb
jmp
mov
dec
ljmp
cld
test
inc
mov
les
mov
les
cli
imul
and
ja
cmpsl
test
gs
mov
dec
inc
or
insb
mov
call
inc
lods
cld
jmp
push
cld
lds
negl
cmpsl
lods
cmp
sti
lahf
mov
jl
xchg
push
pop
in
loope
mov
popa
inc
push
inc
fldl
in
call
xchg
pop
push
outsb
push
cmp
or
subb
in
and
cmp
pushf
fs
stc
fldt
push
inc
in
pushf
adc
sti
mov
cmc
mov
xchg
xchg
pop
xchg
dec
pop
gs
in
sub
mov
mov
jo
or
cmp
inc
and
cs
outsl
shll
int
int
adc
jns
sbbb
pop
and
push
stc
cmp
fwait
add
fistpll
xor
in
cld
push
sub
or
add
sbbl
in
adc
or
cmp
pop
cmp
subl
sbb
mov
in
mov
mov
dec
jns
xchg
in
fsubr
mov
cmpb
fstpl
xlat
lret
push
loope
xchg
call
jmp
sahf
dec
and
sub
xchg
aad
inc
aad
and
imul
popa
test
cld
xchg
aad
mov
pop
jno
mov
dec
inc
xchg
push
mov
pop
xor
mov
pop
imul
loopne
in
mov
ret
dec
scas
imul
insl
das
push
nop
aaa
aam
les
icebp
in
js
xchg
in
push
inc
iret
dec
fistps
mov
out
push
int3
in
push
cmpsl
lret
lods
std
mov
cmpb
shlb
arpl
insb
jns
mov
ja
roll
add
sub
and
xchg
pop
dec
mov
in
sub
and
out
mov
xor
or
pop
sbb
hlt
fidivs
adc
sbb
pop
xchg
or
adc
mov
sbbl
dec
pop
pop
jbe
sbb
mov
inc
movsb
sbb
mov
xchg
cmc
loopne
xchg
adc
mov
jns
jp
cmp
push
adc
shl
xor
repz
js
cmp
out
or
setb
orb
rcl
out
in
jno
sbb
xchg
dec
jecxz
mov
mov
pop
stos
enter
adc
fisubs
subl
pop
and
das
ja
add
test
or
sub
push
shrl
inc
clc
shlb
subl
xchg
lret
daa
repnz
pop
jp
and
stc
sub
adc
mov
pop
xchg
ret
ds
mov
clc
in
dec
outsb
out
mov
inc
sub
jp
in
pushf
inc
sbb
notb
andl
outsb
ss
shll
pop
jnp
fucom
cmpsl
fisubs
pop
mov
sub
add
test
and
mov
xor
lods
fs
loopne
inc
xor
sub
mov
xor
fnsave
pop
pop
mov
or
in
mov
dec
add
jnp
pop
pop
std
push
add
dec
mov
xchg
xchg
leave
xchg
stos
out
out
push
movlps
jmp
movsl
loope
dec
jns
ss
adc
push
and
cld
popf
adc
ja
cmpsl
dec
popf
push
mov
or
sbb
dec
add
xor
loope
pop
aad
xchg
movsb
jns
sbb
dec
aad
std
rcrl
lea
mov
int3
ss
sbb
push
sbbl
fistps
sub
fucomip
mov
popa
xlat
ret
loop
arpl
ljmp
adc
fs
mov
test
push
pushf
adc
nop
sbb
push
and
sbb
adc
jmp
xor
xor
pop
cmp
jae
in
xchg
gs
xor
mov
lea
bound
mov
pop
cmpsl
push
inc
push
and
scas
mov
sub
cltd
jge
inc
fistps
inc
ds
inc
and
jecxz
or
sbb
loop
out
push
and
sbb
fldenv
hlt
pusha
pusha
aaa
mov
cwtl
xchg
daa
add
cmp
dec
push
xchg
shll
repz
dec
out
and
inc
mov
xchg
sbb
andb
int3
loope
imul
in
sbb
fistps
sti
push
mov
mov
rorb
inc
mov
fdivrs
addl
rclb
lcall
mov
pop
call
into
cli
mov
xor
cmp
imul
mov
sub
cmp
cli
in
pop
les
enter
ficoms
gs
loopne
repz
sti
adc
mov
mov
lds
sarl
xchg
mov
push
subb
clc
sub
int3
psrlw
fiadds
mov
push
not
imulb
daa
or
in
popf
in
pop
pop
push
and
loopne
fstpt
ja
out
sbb
xor
jmp
ret
nop
aad
sbb
icebp
and
inc
or
int3
lahf
aad
dec
cmp
rolb
faddl
decl
xor
test
es
js
mov
das
push
int
inc
lock
sti
inc
adc
inc
testb
in
sub
mov
mov
push
in
das
mov
mov
dec
cmp
or
pslld
dec
int3
xor
mov
mov
sbb
ret
mov
mov
jnp
pusha
jnp
call
mov
pop
outsb
xor
adc
and
xchg
fistpl
cmp
leave
mov
mov
mov
inc
sub
in
mov
mov
lods
fstps
aaa
pusha
mov
sub
mov
cmpb
movsl
adc
inc
pusha
fcmove
inc
jb
cld
iret
jmp
pusha
daa
dec
pop
lret
jno
mov
add
sub
ja
into
xor
outsl
je
mov
je
fwait
pop
mov
xchg
outsl
push
icebp
sahf
jge
mov
fidivs
aaa
mov
xor
jae
xchg
mov
dec
mov
js
addr16
dec
imul
movsb
les
icebp
xchg
push
push
sahf
test
mov
push
mov
push
sbb
rorl
adc
adc
mov
in
ds
lea
mov
lcall
ds
lret
mov
rcr
mov
ss
xchg
lcall
mov
sub
lock
mov
rorl
push
out
push
xchg
lock
mov
cmp
sub
vucomiss
cs
pop
arpl
jnp
inc
inc
sbb
xchg
jo
cmp
int
icebp
repnz
out
jp
in
imul
mov
xor
fst
mov
loop
push
jne
sti
sbb
adc
xchg
sete
sub
xor
or
and
int
mov
sbb
js
shlb
push
fldcw
dec
xchg
int3
cwtl
pusha
pop
and
mov
and
fprem1
mov
add
sbb
and
int3
sub
cltd
mov
sbb
dec
sub
lcall
xlat
sbb
js
cld
lret
decl
test
adc
push
dec
clc
mov
mov
testb
xor
sub
push
int3
push
movsl
adc
insl
xorb
jmp
in
adc
out
lahf
loope
je
icebp
fmuls
pop
jb
outsl
je
outsl
shll
repz
xor
adc
and
call
dec
scas
mov
subb
popa
mov
sbb
aaa
cwtl
jmp
and
lret
andl
add
lcall
subl
fldenv
mov
pop
adc
stc
loop
stos
xchg
xchg
and
and
sub
jmp
add
insb
jne
jge
push
ss
xor
pop
imul
leave
xchg
add
mov
xor
cmp
jp
push
cmp
push
fisttpll
push
sbb
test
xchg
pusha
adc
sahf
aaa
push
push
cmp
js
pop
xchg
out
repnz
dec
inc
dec
shlb
rcll
sbb
repz
nop
les
insl
inc
loopne
jne
fwait
xor
fisubs
insl
sbb
popf
cwtl
ljmp
mov
mov
inc
push
sbb
push
mov
dec
sub
testb
in
mov
out
movsb
mov
notl
stc
dec
mov
mov
add
jecxz
stc
pop
iret
lret
and
aaa
das
mov
push
cmc
leave
xlat
scas
out
lock
in
inc
cmpb
add
sbb
pop
xchg
dec
into
scas
jnp
loope
jge
or
dec
mov
push
hlt
add
jno
ja
test
add
jno
lret
adc
xlat
jp
call
xor
xchg
pop
push
jnp
shlb
sub
or
movsb
inc
test
add
aad
in
stos
jp
test
xlat
jle
stos
insb
jne
into
int3
mov
shrl
cmp
imul
jge
and
xchg
adcb
mov
jnp
xchg
addl
mov
or
ffree
ficompl
push
jb
jecxz
cmp
push
cld
mov
int
out
dec
jp
loopne
jmp
jb
icebp
fisttps
mov
clc
stos
adc
mov
or
lds
mov
mov
negl
dec
push
push
fmull
call
shrl
popa
pop
push
push
mov
nop
mov
xor
or
adc
xchg
fdivl
cmp
cli
push
addr16
pop
mov
and
jp
in
jae
std
das
pop
inc
push
pop
mov
xor
push
xchg
je
or
icebp
xchg
cmp
sbb
shlb
mov
cld
mov
pop
test
je
mov
mov
xchg
int
and
ds
or
mov
mov
pop
and
rcr
mov
sarb
popf
push
push
mov
mov
nop
test
cmc
das
fsub
sahf
repz
jnp
scas
test
mov
sbbb
sbb
jl
sub
sub
push
lods
sub
xor
lret
lock
mov
outsb
adc
add
and
icebp
out
mov
push
add
fidivl
and
jge
mov
or
loopne
lds
ds
sub
mov
out
adc
mov
pusha
inc
dec
mov
dec
sti
imul
jae
rorl
sbb
out
push
push
dec
dec
cmp
jno
xor
out
pushf
into
mov
push
subl
xchg
and
jle
mov
aam
sbb
in
rcrb
sub
inc
lea
xchg
mov
fadds
push
repnz
int
fnsave
jb
fcmovnbe
xchg
mov
loope
and
out
pop
or
xlat
bnd
mov
std
xchg
cmpsb
in
sbbl
pop
cmp
mov
ja
andb
enter
inc
out
inc
inc
in
mov
sbb
jmp
mov
adcl
mov
pop
popf
mov
xor
adc
adc
test
in
xchg
cmp
daa
cs
insb
ljmp
leave
push
imul
adc
xlat
mov
outsb
mov
jnp
jg
stc
sahf
mov
mov
add
das
dec
inc
leave
add
push
lods
lret
ret
nop
jno
cld
js
or
jp
ret
push
cli
mov
push
push
sbb
jle
imul
ss
xor
sub
divl
in
int3
or
cltd
jg
mov
pop
loop
jmp
daa
adc
xchg
cwtl
stos
jecxz
inc
insl
sub
aam
and
xchg
packssdw
push
pop
and
jecxz
int
mov
mov
shll
adc
and
sub
push
adc
arpl
in
adc
xchg
cmp
lcall
test
add
pushf
psllw
cmp
push
and
aam
push
gs
xlat
aad
loop
lods
imul
pop
sub
aam
movsb
stc
adc
sbb
loope
lret
mov
inc
shrl
cli
pop
jl
push
ret
mov
stc
notb
js
stos
ss
xor
les
sarl
inc
icebp
xchg
daa
inc
and
sahf
sbb
inc
lods
xor
js
or
sub
adc
pop
sbb
call
xor
xor
sahf
mov
lods
mov
and
mov
inc
sbb
sbb
or
gs
xchg
fwait
pop
jnp
test
cmpsl
test
repnz
call
xchg
adcb
aam
fcoms
cmp
push
fsubrl
mov
sub
fldenv
or
mov
pop
jno
dec
std
fistpl
rcrb
lahf
pushl
add
sbb
ljmp
mull
or
lods
fsubr
arpl
daa
shll
in
dec
cltd
fsubrp
mull
rol
int3
or
dec
clc
add
xor
ficomps
sti
inc
adc
push
mov
and
and
mov
out
js
xor
inc
test
mov
sbb
les
hlt
into
stos
gs
lock
pop
mov
xchg
sti
jno
xchg
popf
or
inc
sbb
jns
dec
pop
mov
out
mov
adc
jg
sub
cwtl
and
xchg
dec
adc
jno
adc
mov
mov
push
mov
fbstp
cld
inc
jp
mov
pop
mov
xchg
cwtl
repnz
out
cmp
mov
inc
stc
pusha
jo
mov
fmull
sbb
je
xor
repnz
and
mov
rcrl
sbb
lock
lods
xlat
aaa
lock
scas
scas
jge
sub
pop
xor
or
mov
ja
inc
push
aaa
pop
in
dec
mov
leave
and
loopne
and
repnz
lock
xor
jne
mov
inc
icebp
jo
mov
inc
sahf
mov
fimull
xchg
xchg
hlt
adc
cltd
add
lea
pop
jo
xor
sti
xchg
loope,pt
xchg
mov
mov
ret
pop
scas
jp,pt
add
inc
cmc
pushf
push
into
orl
rcll
jno
jo
pushf
ret
out
push
and
push
rorb
ss
nop
mov
xchg
mov
mov
lret
cmp
ret
dec
pop
push
setno
test
sub
stc
movsb
jne
xor
loop
scas
es
adc
rcrb
mov
idivl
mov
jae
fdivs
or
pop
mov
push
pop
insl
cld
jecxz
les
aad
out
push
outsl
mov
mov
push
stos
jmp
arpl
sbbb
inc
or
lret
add
mov
icebp
das
push
sbb
pop
retw
pop
mov
lcall
and
jecxz
push
leave
ljmp
cmp
inc
fildll
or
push
mov
mov
mov
xor
cmp
cmpl
insb
mov
push
popf
ds
xchg
inc
mov
mov
dec
pop
dec
lahf
mov
sub
scas
cltd
xor
loopne
and
sub
aaa
aaa
pop
xor
xchg
or
ja
xor
cs
repnz
inc
push
mov
jns
mov
mov
sti
bound
sbb
sbb
adc
mov
dec
testb
pop
iret
lcall
insl
and
insb
pop
xor
mov
xchg
imul
int
cwtl
scas
pop
dec
je
jne
pop
fnsave
mov
or
xchg
push
jo
pop
add
add
jne
enter
stos
cwtl
jo
mov
sbb
leave
fisubrs
movsl
in
xor
mov
adc
imul
aad
adc
addb
das
imul
push
mov
jne
mov
mov
pop
inc
or
insl
mov
out
les
push
and
pop
or
push
loope
addl
jb
push
pop
jmp
and
fdivrs
adc
jp
jne
rcr
jo
or
ret
popf
loop
mov
ds
cwtl
push
fnstenv
mov
out
clc
and
icebp
sub
add
sub
inc
sub
jb
in
stc
mov
pop
inc
test
push
or
inc
out
lock
lds
xchg
fldenv
jne
lret
arpl
add
xor
sbb
stc
xchg
inc
dec
push
test
and
pop
inc
mov
sub
jno
rolb
jbe
dec
cmpsb
into
loopne
ds
shlb
insl
xor
fxch
mov
cs
jmp
inc
in
mov
mov
fs
xchg
popa
mov
scas
xchg
loopne
jl
xchg
sub
push
mov
dec
jl
shll
scas
push
push
loope
aam
imul
add
pop
jmp
stos
rorb
addr16
test
jmp
mov
or
lock
mov
movsw
popa
adc
pop
or
mov
iret
or
sar
rol
cmpsb
cltd
fnstsw
sbb
jmp
into
cmpsl
add
cld
out
scas
hlt
lock
mov
mov
rcrb
mov
or
into
enter
jge
add
imul
out
pop
pop
push
movsb
scas
popf
iret
ficoml
fidivl
enter
cld
mov
subl
out
mov
or
xor
lea
mov
pop
not
sub
and
xchg
loope
adc
cli
jae,pt
popa
lcall
lods
sub
sahf
stos
xor
xchg
mov
adc
adc
fnstcw
or
add
cwtl
mov
fsts
test
out
mov
stos
mov
jle
mov
loope
aam
or
mov
stos
icebp
loop
push
lods
std
push
xchg
inc
rcrb
and
pop
aaa
dec
inc
jae
push
lea
pop
sbb
push
sbb
bound
mov
jmp
or
or
jg
xchg
loop
lret
js
das
subb
das
jmp
stos
pusha
push
test
mov
xchg
ja
push
jnp
fstpt
loopne
movsl
push
sbb
mov
xchg
push
mov
addr16
xlat
sar
push
pop
add
pop
test
dec
cmpsb
lret
xchg
fstl
add
or
fistpl
xchg
mov
inc
addl
sti
shr
jl
jno
jl
sub
cmp
jns
push
inc
mov
fcomip
jle
push
stos
imul
dec
loopne
cli
push
fsubrs
sub
xor
imul
addl
mov
and
cmp
lock
fbstp
push
mov
push
inc
dec
push
mov
pop
scas
mov
pusha
ja
rorb
int
sahf
mov
test
jle
pop
clc
ficomps
jg
insl
and
lss
cmpsb
lds
mov
punpckhwd
mov
cmp
push
shl
inc
test
pop
mov
pop
push
xchg
mov
push
pop
mov
jns
adc
scas
imul
iret
scas
jnp
dec
repz
lcall
sub
cmp
fwait
mov
mov
jns
mov
in
and
arpl
test
dec
jnp
lcall
mov
test
xor
test
dec
mov
gs
mov
shll
fisubs
cld
mov
adc
push
loope
mov
sbb
rorl
jo
ds
shll
bound
lret
mov
xorb
xchg
ds
xchg
bound
or
ja
or
cmc
scas
jnp
and
leave
in
push
jb
bswap
lcall
in
push
in
cli
jecxz
jno
pop
pusha
cmpsl
or
gs
leave
mov
adc
add
or
bound
ficompl
jb
mov
add
xchg
jb
ljmp
into
js
inc
pop
pusha
mov
insb
or
mov
inc
fistl
inc
pop
test
lds
aam
mov
ret
movsb
or
pop
jo
lods
sub
sbb
dec
sbb
xor
scas
icebp
cmp
cmc
iret
fsubs
cmp
ljmp
fisubrs
pop
and
fisubs
ret
nop
sbb
mov
movsl
xor
jl
aaa
call
test
in
dec
paddd
insl
orl
pushf
rcr
gs
and
mulps
or
sub
jo
imul
xor
loope
hlt
inc
sub
adc
fisubrl
mov
bound
enter
orl
push
cld
inc
in
push
shr
jb
test
les
lods
push
call
ret
mov
pop
sub
cmp
ja
pop
popf
inc
xlat
add
cmp
mov
pop
sub
pop
xor
jmp
xor
aad
xchg
xor
sbb
xlat
repnz
xor
in
mov
push
stos
fldl
and
dec
lods
push
loopne
aas
inc
add
cmp
fisubl
dec
inc
mov
loop
mov
add
adc
movsl
mov
ficomps
mov
xlat
mov
cs
rorb
icebp
mull
xor
ret
shll
mov
adc
cmp
in
ret
inc
testb
std
fisubrl
rcll
push
mov
test
test
or
adc
in
and
nop
movsb
xor
iret
rcrb
aas
aas
into
cmp
test
rdtsc
notl
inc
insb
xor
fs
push
mov
sti
divl
pop
mov
sbb
in
adc
lea
divb
push
int3
xlat
push
icebp
push
popf
sahf
loope
orl
mov
mov
dec
sbb
sub
mov
cmpsb
xchg
xor
mov
xor
in
popf
cmc
das
cmp
jle
pop
sbb
scas
inc
hlt
pop
mov
xchg
jl
lods
mov
sbb
mov
xchg
xlat
in
rolb
sbb
xor
lcall
or
cli
dec
mov
inc
imul
pop
push
test
jbe
mov
int
jbe
movsb
adc
shll
sub
jg
push
xor
pop
add
ss
js
lahf
data16
aaa
lods
aam
dec
mov
fistl
mov
scas
mov
test
addr16
std
outsb
add
mov
pop
std
adc
xchg
add
bound
testl
lret
add
shl
subl
stc
xor
add
and
cmp
mov
ud0
cltd
xor
jecxz
ficoml
or
or
xchg
sbb
cmp
cmp
pusha
rcrl
lods
pop
mov
mov
mov
into
xchg
in
sub
xor
xchg
imul
lahf
inc
in
push
add
dec
sbb
jnp
fcmovbe
aaa
cmp
aam
ljmp
and
addb
test
mov
sbb
fisubrl
adc
xchg
shlb
lods
fbstp
repz
out
pop
lcall
jbe
or
aam
data16
sti
ja
sub
cwtl
jne
or
push
cmp
push
mov
push
rclb
imul
les
cmp
push
sub
lock
or
inc
sbb
mov
push
pop
nop
aaa
cmp
inc
mov
sub
test
pop
mov
pop
mov
or
jg
push
push
mov
loope
ret
stc
sbb
lret
adcb
cmp
cmp
aam
loopne
or
xor
mov
inc
adc
loop
adc
jne
shrb
xor
aad
pop
jg
push
xchg
mov
fs
add
cmp
sahf
js
jno
add
fnsave
sbb
addb
scas
std
dec
cltd
in
jge
pop
imul
aad
xor
int3
pop
cltd
jo
fcmovne
dec
cs
xor
popf
mov
dec
je
dec
rcl
adcl
dec
lahf
pop
in
inc
inc
dec
jae
ss
lret
insl
xor
mov
sbb
sti
fmul
cmp
js
or
pop
loop
inc
cmp
push
xor
rcl
mov
mov
jp
test
mov
push
imul
filds
adc
movl
xor
insb
mov
push
mov
pop
enter
sbbb
call
lds
push
clc
add
pop
ja
add
push
sub
jg
subl
sahf
inc
and
xchg
notb
mov
or
inc
xor
rcll
aad
and
enter
clc
dec
rolb
pop
cs
out
cltd
negl
push
mov
push
in
push
shll
jge
jo
mov
adc
fists
mov
insb
or
sub
xchg
test
xchg
sub
in
push
out
jle
push
mov
incb
sahf
fstl
imul
mov
sbb
lods
fs
lcall
push
push
dec
inc
push
pop
ret
mov
ss
in
pop
jns
sbb
jnp
pop
mov
jns
hlt
push
ret
xchg
lea
sub
xor
pop
outsb
movsl
fwait
stos
sbb
dec
pusha
rorb
push
cltd
ret
pop
insl
push
xlat
stc
mov
cmp
or
pop
jno
rol
pop
dec
mov
jae
mov
lahf
loope
sbb
test
movsb
aad
sub
xor
ret
sarl
cmp
lcall
push
inc
lcall
and
inc
adc
adc
cmp
movsl
dec
xchg
mov
add
fucomi
add
xchg
pop
repz
pop
inc
mov
sarb
and
or
push
cmc
jo
dec
outsl
pop
mov
xchg
pop
je
out
xchg
jbe,pn
dec
test
lods
repnz
and
mov
sub
cmp
adc
sbb
adc
scas
sbb
mov
pusha
mov
or
sub
loope
inc
and
dec
repz
cmp
push
adc
in
loop
orl
sub
insl
mov
add
sub
mov
fimuls
pop
xchg
add
lods
or
into
sbb
in
cwtl
push
cmc
push
pop
add
repnz
add
cmp
jns
insl
mov
aaa
add
je
jne
leave
popf
jne
jb
adc
dec
push
shl
pop
cmp
imul
arpl
cs
je
mov
les
cs
xor
les
insl
pop
xchg
lock
cmp
pop
andb
or
fnstcw
in
xchg
hlt
mov
sbb
mov
dec
mov
inc
lds
push
dec
sbb
loop
cmp
stos
sub
movsbl
cmp
ds
pop
mov
fsubrs
dec
int3
mov
out
or
mov
sahf
stos
fdivrl
xchg
pop
mov
sbb
fisubrs
adc
mov
dec
jmp
dec
jae
sbb
mov
test
xor
scas
and
mov
push
jo
jmp
sahf
hlt
mov
mov
mov
lods
enter
orl
out
pop
xchg
cmp
fwait
sbb
addb
jmp
push
jne
gs
cld
jbe
mov
test
add
push
mov
cs
sub
inc
loope
xlat
mov
push
bswap
imul
addb
movsl
mov
imul
sahf
push
movb
mov
mov
movsl
xchg
or
adc
add
sub
out
shlb
inc
xchg
pop
mov
cltd
inc
mov
pop
nop
push
int
cmc
imul
jge
pop
insb
fwait
adc
pop
clc
sub
stos
push
mov
add
jo
scas
mov
js
adc
test
push
add
gs
mov
xchg
ret
jns
sub
pop
jmp
or
push
inc
loopne
xlat
jo
mov
aad
sub
ds
iret
aam
scas
orb
mov
call
std
jb
mov
jmp
insb
test
arpl
daa
push
sub
xor
and
adc
or
stos
push
addr16
and
add
jmp
pop
ret
xchg
shll
ljmp
mov
icebp
push
mov
mov
cmp
sbb
das
jbe
dec
hlt
sbbb
cmpsb
pop
inc
shll
jl
adc
je
xchg
pop
push
xchg
mov
into
test
pop
xor
stos
and
dec
ficompl
xor
hlt
dec
idiv
imul
inc
dec
mov
push
cld
mov
mov
mov
add
in
repz
or
jle
push
cmp
stc
fbstp
mov
push
sub
mov
popa
aaa
mov
xor
ljmp
mov
sbb
or
vpslld
mov
enter
fisttps
shrb
js
test
shll
test
test
orl
out
add
fstpt
call
stos
movsb
aaa
ljmp
cmpsb
out
loop
clc
ror
xchg
xor
insl
xchg
cli
incl
pop
cmp
icebp
or
jmp
data16
sti
dec
insb
rcll
mov
jbe
pop
imul
orl
insl
bound
push
or
stc
ja
scas
pop
dec
ss
mov
push
enter
loope
xchg
aas
in
sbb
jo
in
cli
mov
push
rclb
or
xchg
rorb
icebp
jg
cmc
outsb
xor
std
icebp
cwtl
ja
nop
shll
mov
mov
call
pop
adc
lcall
and
jo
js
lahf
insb
std
sub
je
inc
loopne
jecxz
pop
push
mov
adcb
sub
jbe
xchg
cmp
jae
mov
mov
icebp
adc
mov
das
iret
cmp
fcom
and
or
fs
inc
dec
insb
push
hlt
push
add
stos
cmp
cli
test
xchg
pop
xchg
packuswb
sub
adc
push
movsb
mov
inc
inc
inc
xor
ja
mov
xchg
cmpsl
ret
or
iret
mov
sub
jo,pn
je
jae
scas
call
push
mov
mov
dec
jp
xor
in
fildll
ficompl
pop
adc
imul
fsubr
dec
xor
pop
sub
je
stos
ds
push
or
push
push
outsb
push
in
jmp
and
jae
mov
aaa
lahf
lods
int
test
stos
lret
sbb
fcmovb
dec
cltd
push
xchg
daa
add
adc
lds
pusha
adc
and
es
mov
adc
dec
outsl
xchg
in
stc
fnstenv
femms
add
lret
inc
ret
pusha
cwtl
in
xchg
testb
cmc
jecxz
imul
sbb
fbstp
push
stos
mov
pop
cmp
jno
xchg
in
mov
repz
and
orb
xchg
sbb
pop
pop
cli
mov
mov
fdiv
fs
or
xchg
ret
ret
inc
mov
and
mov
xchg
or
daa
js
shlb
int3
test
push
add
sarl
das
xor
mov
jmp
pop
cmp
push
mov
pop
pop
rcr
or
int
pop
rol
leave
cmpsb
das
daa
ficompl
cli
add
xchg
sahf
adc
xor
push
fwait
decl
xlat
inc
ss
xor
int3
pop
pop
dec
mov
jo
dec
cmc
cmc
xchg
fprem1
cmp
movbe
cmc
iret
push
das
adc
push
sti
in
dec
cli
push
insl
scas
push
repz
iret
fmull
push
jnp
mov
pop
loop
test
sub
sub
int
test
cmp
ret
dec
mov
enter
loopne
adc
mov
mov
xchg
ss
rorb
mov
gs
sbb
scas
mul
mov
call
insb
in
lods
ss
fsubs
xchg
push
xchg
mov
ss
cs
inc
dec
inc
xor
je
xor
cmc
xchg
push
outsl
pop
repnz
ss
sub
pop
push
jae
shl
push
mov
inc
add
stos
jo
sti
shl
and
rcrb
test
lret
jmp
int
mov
les
pop
jb
pop
into
inc
jno
sbb
inc
mov
sbb
xchg
dec
pop
xchg
loope
mov
rcrl
mov
cmp
adc
and
cmp
mov
lds
jmp
stc
std
ds
imul
sbb
and
mov
push
mov
inc
lock
add
dec
vmwrite
mov
sbb
jbe
cmp
in
cmp
stos
and
jns
push
pop
shr
iret
push
test
in
mov
shll
add
sbb
pop
jmp
push
scas
mov
mov
aad
aad
mov
aas
cmp
xchg
insb
movsl
and
fadds
or
sahf
aaa
sbb
xor
stc
xchg
mov
pop
adc
push
repnz
xchg
je
pop
push
jno
insb
movsl
inc
jle
out
cltd
dec
leave
push
jmp
add
jno
rcll
and
push
jb
adc
out
or
adc
out
inc
push
data16
and
adc
jecxz
test
lds
outsl
lock
sub
add
jnp
roll
jno
enter
test
or
lcall
jmp
sbb
cmp
xchg
addr16
xchg
sub
data16
int3
lea
inc
push
add
sbbb
in
jb
lret
data16
sbb
pop
es
sbb
sbb
scas
das
andb
out
xor
scas
jbe
fbstp
xor
rcrb
test
shlb
lds
mov
mov
add
fists
jp
xchg
xor
mov
push
mov
lret
or
repnz
mov
cmp
fwait
rcrb
pop
or
test
bound
cmpsl
incb
jnp
and
and
mov
lods
pop
inc
adc
mov
inc
push
out
cmp
outsb
pop
cli
scas
sub
and
daa
mov
push
xorl
add
mov
out
or
jmp
fnsave
sahf
dec
sbb
cmp
mov
inc
mov
das
negl
jne
hlt
add
add
loope
xchg
insl
stc
cmp
sbb
call
add
enter
call
jge
mov
cmp
push
pop
and
fnstenv
and
jno
adcl
inc
daa
adcl
stc
or
fcmovu
jb
test
hlt
or
out
je
mov
sbbb
push
fwait
aaa
xor
and
sub
mov
clc
cmpsb
lret
mov
jo
jle
push
orl
xor
mov
popa
and
fldenv
fcoms
sbb
lock
inc
insl
sti
sub
aam
sbb
cmp
push
jecxz
add
insb
roll
sub
ds
sub
dec
ret
loope
fwait
aam
cmp
in
stc
stos
jo
test
cmp
imulb
mov
lds
adc
xor
cmp
test
and
sub
xchg
jp
cld
inc
add
ds
loop
fsubl
mov
clc
push
xor
xor
pop
test
mov
mov
std
out
das
idiv
repnz
in
stos
mov
popa
pop
fists
mov
push
inc
cltd
xor
jae
dec
ss
inc
jo
notl
cmp
insl
xchg
test
repnz
aad
dec
xchg
inc
push
sti
push
in
enter
sub
scas
aaa
sub
ret
shrb
shll
and
sahf
jne
stc
lret
mov
xchg
popf
mov
mov
popf
add
aas
imul
inc
insb
shl
add
nop
testl
in
repz
das
jle
lods
aas
shlb
add
mov
incb
lock
pop
arpl
in
test
testl
cmp
mov
aaa
cs
mov
in
mov
jmp
sub
lret
subb
sbb
or
in
andb
sti
repz
shlb
inc
cmp
data16
pusha
push
icebp
cmp
cmpsl
add
xchg
cli
stos
inc
repz
jno
aaa
mov
or
xor
adc
pop
mov
out
mov
jl
imul
clc
sbb
xchg
jno
aaa
jbe
sbb
mov
dec
lods
repnz
xor
out
sub
xor
push
addl
jno
mov
divb
pop
stos
sbbb
cmp
dec
or
cmc
cli
adc
jo
or
rorl
cs
mov
in
dec
and
xor
adc
xchg
sahf
popa
mov
mov
xor
subl
mov
or
cmp
or
pop
andb
decb
addr16
movsl
push
ret
ds
push
dec
sub
pop
mov
fcomps
jae
push
imul
cs
mov
dec
lea
roll
pop
jnp
scas
sub
repz
inc
stos
fisubrl
cmpsl
nop
popa
js
out
ret
repz
shlb
lods
lahf
sti
push
fwait
aas
inc
lods
enter
sub
iret
adcl
jecxz
mov
mov
xor
xor
ret
jecxz
jge
inc
sub
pushf
outsl
xchg
gs
push
mov
loope
aad
aas
aaa
mov
cmp
mov
das
test
repnz
int3
jbe
cld
push
sbb
sahf
jbe
fwait
sbb
jmp
sub
test
fdivl
mov
test
and
mov
pop
cmp
adc
dec
pop
std
aaa
cmpsb
fcmovnbe
mov
out
or
lds
cmp
arpl
pop
sbb
cwtl
cld
adc
test
nop
ds
sahf
xor
pop
jno
arpl
dec
pop
aas
xor
andl
andb
adc
inc
and
mov
push
lahf
push
sbb
mov
jle
daa
popa
mov
sbb
push
mov
adc
adc
in
sub
mov
mov
pop
inc
and
subb
int
mov
push
mov
jmp
push
cmp
add
lret
imul
movsb
insb
es
fistl
cmp
mov
lahf
pusha
filds
and
jl
mov
movsl
adc
ret
test
or
sbb
shll
mov
jae
xchg
scas
jne
int
cmp
adc
pop
mov
aam
les
pop
test
pop
lock
xor
inc
sbbb
ds
jp
imul
dec
ljmp
pop
cmp
je
imul
xchg
mov
push
test
xor
mov
bnd
mov
push
aam
push
push
leave
fcos
xor
outsb
mov
xchg
into
addr16
das
into
out
mov
stos
add
imul
mov
popa
or
xchg
sbb
xchg
pusha
mov
jmp
mov
out
sbb
ljmp
ret
sbb
or
push
or
dec
jno
mov
dec
ret
stc
adc
sbb
popa
sbb
jg
cmp
dec
loope
rolb
and
xor
xchg
xchg
adc
shl
les
gs
pop
pusha
iret
incl
stc
stos
fldl
lret
or
adc
inc
mov
arpl
lds
lods
mov
sub
fldcw
sub
lods
lret
mov
push
jg
mov
inc
cltd
pop
icebp
adc
rcrb
pop
insl
jecxz
iret
or
mov
cli
fcoml
adc
mov
dec
mov
sahf
leave
xchg
scas
xor
push
les
xor
mov
sahf
insb
jnp
adc
add
and
jo
orb
cs
xchg
iret
iret
mov
shll
das
adc
or
ret
clc
in
xchg
xchg
pop
mov
mov
out
cmpb
iret
sub
xor
lcall
hlt
out
lcall
imul
mov
fcom
mull
out
lods
lahf
movsl
fs
enter
xlat
repz
test
xchg
and
jecxz
movsl
inc
cmpsl
lock
addr16
cmc
aam
lea
pop
inc
dec
sbb
or
or
or
mov
outsl
lods
dec
jne
jl
inc
cmc
add
inc
inc
loope
push
mov
add
xor
jno
adc
jl
js
rcrl
orb
insl
cs
cmpsb
push
aaa
cmp
xchg
pop
pop
repnz
adc
push
sub
add
cmp
pop
mov
add
xchg
lcall
shrl
sbb
loop
inc
inc
mov
out
stos
fcmovbe
je
sbb
ss
fucomp
jae
or
inc
aam
mov
ja
adc
arpl
lods
cmp
call
add
xor
aaa
fistps
call
cld
mov
pop
lods
repnz
inc
movsb
iret
jae
jne
dec
cmpsb
xchg
mov
mov
xor
mov
in
sub
pop
pop
inc
xchg
or
outsl
push
push
dec
aam
push
jbe
xchg
cwtl
mov
pop
arpl
and
in
push
push
xchg
jno
mov
mov
cs
mov
add
push
dec
shlb
xor
in
jmp
out
movsl
addr16
scas
push
test
fbld
push
mov
or
mov
sub
je
outsb
nop
jb
lcall
add
push
cmp
jo
mov
pop
xchg
cmp
test
xor
mov
jmp
es
dec
movzwl
ret
inc
and
fbstp
mov
push
insl
xor
and
aam
jo
cld
movb
cmp
shlb
aas
adc
xor
lds
cmc
mov
jl
ret
xchg
sarl
stos
or
aad
test
push
jmp
sahf
mov
aad
mov
enter
adc
imul
loop
mov
aam
pop
bndstx
push
push
iret
std
inc
jns
jp
das
xchg
mov
sub
shlb
mov
mov
jle
and
les
insb
and
cltd
shrl
lret
jnp
dec
sbbl
sbb
in
sub
inc
and
cmp
pop
fs
mov
fldt
inc
movsb
test
lods
dec
dec
clc
cmp
xchg
mov
ja
aaa
push
lcall
comiss
loopne
cwtl
out
add
xor
xor
cmp
push
out
cmp
or
cmp
rclb
jp
fdivrl
aas
pop
imul
dec
nop
sbb
add
cltd
data16
movsb
or
mov
dec
xchg
repz
lods
adc
mov
or
scas
xchg
orl
iret
sahf
sub
cmp
pop
sar
sti
and
push
ja
adc
shlb
xlat
mov
cltd
loop
enter
cmp
mov
xor
dec
loopne
cmpsl
xchg
adc
or
or
pop
mov
xchg
in
enter
ja
arpl
test
repz
fistpl
lea
pop
xchg
jae
jo
jecxz
fmulp
mov
push
xor
pop
lods
mov
flds
xchg
jnp
jle
ja
xor
or
sbb
sti
push
jno
xlat
xchg
xchg
pop
lahf
popa
loope
stos
out
fwait
pusha
xor
jp
sbb
xor
mov
insl
pushf
aaa
not
clc
cmpb
in
sub
imul
scas
lods
cmpsb
adc
inc
inc
xor
out
mov
mov
in
imul
dec
cmp
push
lock
push
pop
dec
adc
dec
daa
movsb
leave
int3
scas
loope
cmp
ret
dec
sahf
mov
dec
mov
sarl
xchg
pop
lahf
aam
hlt
push
int3
fmuls
and
jp
xchg
cmpsb
pop
pop
into
pop
pusha
and
jge
rolb
and
dec
sbb
dec
jl
out
lahf
pop
repnz
jbe
mov
pop
pop
sbb
dec
repz
and
imul
fsubrs
dec
fs
pop
stc
add
outsb
or
mov
pusha
push
mov
test
sahf
out
pop
outsl
ja
dec
rcl
xchg
cld
mov
fimull
xor
mov
sbb
cmp
jb
xchg
push
fisttpl
je
leave
mov
mov
mov
dec
cld
out
loopne
pop
mov
rorl
popa
push
xor
sub
test
mov
scas
outsl
mov
stos
int3
shlb
cmp
jno
ja
pop
jge
pop
jge
push
les
cli
lods
and
fbstp
sbb
outsb
mov
jno
jae
xchg
adc
scas
dec
xchg
or
sub
out
or
inc
cmp
push
pop
add
rcl
pxor
fsubrs
xchg
ds
xchg
ds
inc
mov
inc
aaa
mov
pop
jl
cli
daa
mov
sbb
xchg
jae
lds
dec
pop
scas
sahf
fs
aaa
aam
into
cmpsb
xor
inc
jge
mov
xor
pop
hlt
fwait
jle
mov
lret
sub
xlat
pop
mov
sub
push
cli
dec
or
fsub
jp
loop
add
mov
adc
pop
xchg
mov
pop
push
or
mov
sbb
shrb
cmp
mov
mov
mov
call
pusha
xlat
lahf
sti
push
int3
mov
adc
imul
jae
pop
dec
adc
popl
adc
pop
and
add
test
repnz
mov
or
xchg
mov
cmp
inc
jl
or
xchg
dec
pop
inc
add
pop
ja
rcll
out
sbb
outsl
add
adc
dec
push
add
push
push
jo
mov
push
jle
test
xor
lret
shrl
pop
out
mov
inc
mov
js
cs
add
out
dec
mov
add
dec
das
mov
mov
aad
add
dec
outsl
push
sub
sbb
cmp
ja
cmp
mov
std
xchg
dec
into
in
bound
iret
dec
push
mov
fisttpll
sbb
mov
fs
clc
into
lds
xor
lods
mov
inc
jle
and
into
gs
fcoml
xor
add
jmp
js
test
cmpsb
cmc
cld
mov
dec
imul
jae
adc
cmp
test
push
cmp
addr16
test
imul
sub
cmpsl
loopne
dec
add
mov
in
test
cmp
shrb
outsb
mov
xchg
out
mov
inc
add
lret
leave
dec
int3
icebp
push
sahf
lcall
lret
push
push
clc
and
mov
pusha
push
subl
jl
jle
mov
adc
cmp
jnp
and
imul
rcrl
dec
jmp
pop
inc
cmp
subl
mov
lods
push
mov
dec
sbb
fisttps
bound
in
mov
dec
xchg
mov
lock
pop
int
call
pop
xor
lahf
andb
jmp
sbb
xchg
pop
fisubrs
push
shll
nop
mov
int3
mov
out
xor
jne
or
ss
mov
orl
or
rolb
pop
gs
inc
add
pop
or
repz
jo
test
adc
adc
insl
inc
sti
lcall
cld
jnp
ret
adc
ds
pop
cmp
in
jae
cmp
arpl
xorl
stos
test
inc
cwtl
jp
push
inc
sahf
pop
push
cmp
pop
sbb
das
arpl
inc
ds
jae
icebp
dec
cmpw
xor
dec
push
adc
cmpb
jns
lahf
loop
cmp
xchg
fildll
adc
mov
dec
fldenv
addr16
sbb
roll
mov
les
pop
movsl
pop
outsl
pop
scas
xchg
das
push
xchg
dec
in
test
jge
mov
aad
fmuls
cmp
repz
adc
cwtl
push
xchg
dec
incl
or
fbstp
fwait
shll
std
xor
xchg
adc
icebp
cmovno
sarb
jl
dec
inc
jmp
rolb
mov
pop
fwait
scas
push
sub
test
jno
insl
ds
sbbl
cld
cmc
sub
and
cmp
subb
cmp
addb
out
pop
ljmp
mov
cmpsb
jae
or
pop
dec
cs
mov
mov
lahf
jns
leave
ljmp
pop
fldt
inc
lock
adc
std
stc
inc
mov
cwtl
and
mov
rcrl
xor
xor
jl
test
out
pop
mov
push
int
jbe
adcl
leave
ljmp
mov
and
pushl
pop
cld
fwait
mov
test
xchg
sbb
loope
xchg
and
scas
subl
cs
stos
aaa
or
pop
lods
test
fcoml
xchg
aad
xchg
mov
lret
pushf
lock
cltd
mov
jne
inc
es
nop
notb
sub
mov
adcl
mov
xchg
pop
inc
xor
pop
inc
popa
mov
andl
mov
xor
jmp
aad
shlb
or
cmpsl
jge
mov
xlat
mov
sub
lahf
lahf
mov
shll
mov
pop
das
xor
or
dec
popl
aam
mov
mov
stos
test
outsb
mov
sbb
xor
xchg
xor
ljmp
sbb
pop
adc
push
jo
inc
mov
lahf
sub
mov
add
cwtl
movsl
repnz
or
inc
xchg
push
into
inc
push
sub
jbe
jp
addl
and
fsts
inc
pusha
add
adc
mov
xchg
cwtl
lock
es
xchg
mov
xchg
dec
fstps
test
dec
ja
cwtl
rolb
lahf
call
les
outsl
stos
fwait
xor
shlb
enter
lret
scas
push
dec
mov
mov
std
ror
xorl
cmp
cmpsl
jge
outsb
shll
pop
iret
xchg
mov
dec
jecxz
inc
and
and
inc
popa
xchg
mov
lahf
inc
or
enter
and
dec
inc
repnz
mov
aam
adc
lcall
cmpsb
andb
sub
cmpl
cmp
test
or
mov
jl
jnp
popf
aas
jg
pop
cmp
int
int3
add
loop
mov
mov
orl
jp
inc
inc
into
shl
insb
nop
cmp
jle
push
add
sbb
push
cld
mov
imul
add
add
cmp
xor
dec
xor
add
dec
xchg
insb
mov
movsb
mov
pop
jge
mov
sub
mov
or
and
xorl
sbb
sub
xchg
sbb
outsb
mov
bound
adc
xchg
repz
sarb
jbe
mov
dec
push
ljmp
adc
insl
aad
leave
pop
sub
xorl
sub
lahf
popa
aaa
std
mov
sbb
nop
and
dec
mov
daa
pop
push
imul
into
ljmp
mov
sbb
fdivrp
inc
pop
ljmp
xchg
popa
pop
shrl
in
and
push
aam
xchg
dec
in
adcb
pushf
aad
pushf
in
push
lret
mov
mov
repz
sahf
dec
push
inc
and
mov
jb
mov
or
movsb
popl
in
lods
mov
loop
inc
fldt
or
sub
hlt
dec
jg
arpl
cmpsb
pop
mov
dec
insb
shrb
sti
mov
dec
sub
xor
jb
repz
adc
add
cmp
cmp
mov
push
add
xlat
imul
call
mov
popa
das
xor
les
pushf
add
je
cmp
sub
adc
sub
fs
ljmp
das
cmp
sub
in
cwtl
outsb
and
xchg
jecxz
dec
std
jg
or
int3
pop
push
push
xlat
int
rorb
jns
mov
push
frstor
add
pop
aaa
push
push
xchg
mov
dec
pop
adc
in
mov
movsb
mov
pop
or
xor
je
add
iret
out
mov
push
into
jns
inc
stos
lods
out
push
mov
jo
and
enter
xor
dec
push
lds
stc
pop
xchg
cmp
cs
mov
cmc
push
xor
arpl
rcrl
shll
stc
std
out
inc
aam
es
int3
pop
mov
or
pop
fwait
dec
cmpl
xor
loope
sbb
jge
lods
sbbl
lods
sarl
sub
es
aam
xchg
and
jmp
push
fmuls
jmp
dec
lock
fistps
jnp,pn
ljmp
sub
dec
fwait
xor
stos
push
lea
mov
cmc
popa
and
in
and
mov
stos
xchg
arpl
insl
stos
sub
pop
in
ret
frstor
dec
call
push
jno
mov
xchg
dec
cmc
popa
xchg
push
push
mov
sbb
scas
xchg
push
lock
mov
lods
mov
sub
je
sbb
dec
xchg
and
in
lock
dec
sbb
sub
and
ss
xchg
lcall
jp
shr
push
negl
ds
cmpsb
xor
pop
addr16
popa
inc
roll
ss
scas
fldt
mov
sbb
shrb
jge
cmp
in
lahf
jmp
stc
cld
sbb
bound
iret
jae
loop
sbb
adc
mov
movsl
insl
mov
dec
mov
std
in
mov
push
sub
lock
and
int3
cmp
pop
data16
scas
ljmp
inc
mov
push
mov
and
repz
in
jge
mov
adc
fstl
out
and
add
jmp
dec
scas
sub
fadds
das
or
fs
jne
adc
cmp
int3
xchg
jne
and
clc
mov
mov
pop
es
sub
mov
repz
mov
sub
insb
xchg
cmc
jbe
and
push
adc
fiaddl
je
icebp
lods
andl
int3
cld
repz
sarb
push
fcompl
mov
sub
cwtl
ljmp
pop
aas
movsl
jg
mov
mov
pop
stos
xchg
testl
or
fs
mov
xchg
jnp
jo
sbb
fnstsw
lds
ss
pop
cmc
mov
sub
mov
mov
aad
lock
jne
sbb
add
xchg
jle
sub
cmp
outsl
push
push
pop
stos
push
inc
push
pop
and
movsl
clc
lods
push
push
cld
lods
adc
dec
add
out
sbb
enter
movsl
test
jle
mov
stos
pop
cmp
in
iret
or
cmc
inc
pop
stos
movsl
into
movsl
jnp
mov
clc
adc
adc
lcall
inc
fs
mov
add
pop
int
icebp
popf
jge
sbb
or
test
pop
xor
xor
std
jbe
test
arpl
insb
push
call
add
sbbb
sub
mov
mov
pop
inc
bound
jno
adc
adc
pop
sub
pop
aaa
push
xor
pop
cmp
loopne
inc
les
mov
cltd
insl
jae
inc
xor
dec
in
lock
jge
jb
inc
xchg
cwtl
testb
and
inc
jns
or
xchg
rcll
mov
fistl
jl
sub
sbb
cltd
mov
fdivrs
mov
inc
das
mov
lods
jl
or
jns
xor
dec
testl
jne
mov
push
lret
les
dec
cmp
and
cmp
mov
ret
insb
jl
push
jne
mov
cmp
jg
addb
nop
das
dec
jmp
lock
and
cmp
or
shll
or
mov
mov
or
lock
stos
mov
adc
stc
dec
sbb
out
leave
push
jl
sub
sbb
mov
sub
xlat
repz
mov
mov
pop
xchg
test
mov
test
cmp
push
cmp
leave
cmp
mov
mov
mov
lods
jb
iret
mov
mov
adc
sbb
push
jnp
jno
push
sub
cs
add
std
cmp
cmpsl
jb
addr16
cmp
notl
insl
out
jno
xor
and
add
scas
push
jnp
mov
xchg
loopne
sarb
xor
or
test
inc
test
or
add
mov
xor
ljmp
ds
clc
aaa
inc
mov
mov
pop
pusha
arpl
mov
mov
mov
dec
jo
call
out
xor
xor
or
int
sti
or
adc
mov
cld
push
dec
dec
jmp
xchg
cltd
dec
mov
mov
adc
push
rcll
mov
dec
out
cmpsb
scas
cs
outsb
sbb
test
add
jg
fcmovne
push
xor
xchg
popa
imul
and
jmp
aaa
xchg
mov
and
bound
out
pusha
hlt
nop
pop
je
addr16
mov
aas
adc
fwait
icebp
inc
cmp
rcl
mov
stos
jecxz
adc
add
mov
nop
inc
lret
cs
sbb
stos
xor
and
adc
in
pop
jmp
out
dec
pop
and
std
imul
push
les
push
cmpl
xchg
fadd
lahf
call
xor
cmp
mov
cmc
sub
push
and
or
pop
bound
push
or
inc
mov
shrl
outsb
pop
push
and
imul
movsb
mov
fimuls
cmp
and
ss
push
sub
call
push
rolb
es
shl
inc
dec
out
pop
sbb
mov
out
jae
and
cs
pop
movl
xchg
xchg
cmp
push
pop
cmp
cmp
lahf
sbb
adc
pop
push
mov
cwtl
outsb
es
pushf
inc
sub
arpl
jne
jns
xor
das
mov
ficomps
in
sahf
pop
xchg
aad
stc
sub
xchg
outsb
xchg
mov
mov
lret
ret
lds
mov
jmp
sbb
adc
inc
ss
lock
scas
xor
mov
or
push
testl
mov
sub
push
int3
pop
sahf
das
mov
adc
adc
fs
loope
leave
pop
pop
sbb
sbb
clc
mov
int3
jmp
fstpt
test
call
mov
cmc
adc
inc
out
pusha
xor
xor
test
jae
vphadduwd
push
mov
sbb
psubq
sbb
scas
pop
push
sbb
std
adc
jns
out
inc
push
sbb
hlt
lods
or
mov
mov
and
mov
jmp
test
hlt
leave
call
lret
fsubp
mov
adc
sub
das
fists
shlb
addb
adc
xchg
outsb
dec
push
adc
mull
mov
cmp
insl
and
mov
enter
inc
movsb
add
and
out
pop
push
rcrb
xchg
stc
fs
out
into
rorl
cmp
fs
jecxz
cmpsl
insl
push
in
pop
ds
cs
sbb
popf
into
inc
adc
mov
fadds
pop
dec
outsl
arpl
test
rcll
mov
pop
repz
sbb
lret
outsl
dec
test
inc
stc
notb
add
cmpsl
xor
xchg
sub
lret
loop
test
ret
fcom
sbb
jecxz
sub
test
outsl
push
or
sbb
fsubl
rorb
shlb
mov
ret
loope
out
add
cld
jb
testb
ljmp
test
lahf
inc
adc
sbb
out
pop
jno
inc
jle
loop
sub
push
sbb
add
push
mov
xchg
jnp
pop
cli
dec
sahf
pop
fmul
cmpsb
rclb
fs
sti
sub
pop
jae
testl
fnsave
fists
pop
mov
repnz
out
add
pop
xor
cmp
sub
nop
cmpl
cmc
lret
mov
pop
pop
enter
mov
test
ret
fildl
in
cs
std
fwait
mov
data16
sub
inc
mov
cli
std
fsubrs
and
pushf
test
push
sbb
daa
cmp
shl
or
cmp
test
jecxz
jo
pop
xlat
mov
add
pop
mov
pop
mov
sbb
cmp
or
je
in
scas
aas
jne
xor
jecxz
dec
dec
inc
repnz
in
int
addr16
sub
sub
mov
fldcw
dec
push
cmpsl
push
and
push
orl
fwait
jae
mov
outsl
inc
adc
pop
and
scas
push
test
fcoml
inc
into
adc
mov
in
sbb
or
iret
and
fstpt
scas
orb
repnz
push
imul
dec
mov
aad
fsubrp
mov
mov
mov
sahf
sbbl
data16
fildl
popf
cmp
mov
mov
pushf
test
lds
dec
and
stos
repz
mov
xchg
pop
out
cli
aad
mov
cmc
mov
xor
dec
sub
jnp
xchg
je
call
push
mov
adc
mov
and
fisttps
dec
subl
jmp
fdivl
add
adcl
sbb
cs
push
and
adc
fcompl
scas
ja
xor
add
xchg
hlt
sub
and
pusha
outsl
mov
scas
pop
fcompl
call
xorl
pop
pushf
xor
ljmp
lahf
mov
leave
into
jmp
add
jbe
and
aas
push
dec
fildl
cmp
das
jp
pop
pop
pop
or
inc
repnz
aam
aad
into
aam
mov
pop
adc
or
jb
push
or
or
jno
sti
push
sub
dec
mov
dec
mov
sub
pusha
mov
daa
test
mov
sub
ret
xor
out
int
xchg
out
ret
push
pusha
jae
sub
or
in
call
jns
xor
pop
add
ret
lcall
dec
mov
test
daa
push
xchg
js
int3
jno
cmp
orl
insl
inc
xor
and
fildll
sbb
jecxz
mov
int3
in
add
push
hlt
pop
fcmovnbe
sti
xchg
std
fsubl
sub
pop
iret
je
imul
je
mov
mov
jo
mov
mov
bound
in
lcall
push
stos
xchg
jle
repz
mov
dec
stos
sti
xor
icebp
scas
xorb
adc
mov
fwait
mov
mov
sbb
shrl
jle
cmpsl
dec
dec
shll
jne
push
mov
mov
dec
lds
add
fcmovb
mov
aas
or
fs
dec
sub
in
andl
push
sbb
and
cs
scas
rclb
ss
and
cmpsl
push
mov
repnz
push
cld
outsb
movsl
pop
mov
xchg
inc
out
mov
cmc
pushf
sub
popf
pop
scas
insl
ds
cltd
adc
inc
inc
push
loop
xchg
mov
imul
mov
das
clc
mov
pop
inc
pop
fldl
dec
sub
inc
ljmp
pop
xor
xor
scas
push
xchg
push
pushf
out
aam
mov
or
mov
pop
leave
sbb
push
mov
push
leave
call
push
mov
gs
std
mov
push
popf
lahf
rcrb
fsts
mov
jmp
shrb
adc
mov
cmpsb
xchg
shrl
mov
lcall
mov
xor
pop
test
mov
xor
sbb
mov
pop
imul
loopne
add
scas
cmpsb
stc
xchg
outsl
pinsrw
adc
jge
loop
mov
cwtl
movsb
push
test
arpl
out
js
stc
mov
xor
aad
pop
mov
pop
loope
shl
adc
aaa
xor
pop
xor
mov
mov
or
pop
xchg
add
adc
add
in
stos
outsl
adc
fsub
sub
or
sarb
xor
cmp
divl
fisubs
and
je
sbb
and
es
outsl
push
push
xor
jge
mov
in
imul
or
pop
xchg
rcll
sbb
dec
mov
and
fildll
xchg
cmpsl
pop
test
jae
out
loop
pop
or
xor
mov
jb
sbb
mov
addb
and
mov
mov
fwait
jp
mov
push
dec
ficoms
mov
into
out
inc
int3
sbb
dec
add
xchg
mov
ss
stc
repnz
pop
push
inc
sub
enter
leave
dec
jno
fwait
repnz
cwtl
cmp
outsb
adc
aam
scas
xchg
adc
mov
or
les
out
push
cmp
push
push
dec
int3
push
jg
cltd
mov
shlb
adc
mov
jg
jmp
addr16
les
xchg
pop
fdivr
mov
and
test
pop
push
mov
jne
inc
mov
pop
push
lahf
xchg
subl
hlt
add
icebp
pop
push
ret
jb
push
dec
or
add
mov
lret
dec
mov
lea
aam
aas
shll
sub
push
mov
pusha
add
loope
lea
leave
sahf
dec
mov
out
push
push
pop
add
ljmp
out
in
cmp
daa
sbb
pop
dec
lods
inc
jns
lcall
dec
dec
loope
bound
std
xchg
lock
sahf
sub
scas
fwait
cwtl
int3
jno
mov
iret
add
loopne
cltd
hlt
cmp
adcl
loopne
adc
xchg
loope
cld
inc
inc
mov
pop
cmp
pop
cmp
pushl
shll
push
test
pop
test
sti
push
inc
cwtl
sbb
je
sub
cmp
xchg
inc
addr16
jns
popf
mov
std
stos
xor
pop
push
mov
shrb
std
out
mov
dec
push
dec
xchg
lods
mov
pop
fsub
movsl
pushf
pop
repnz
mov
and
xor
int3
call
test
outsl
pushf
adc
jo
mov
mov
test
shll
jns
xchg
mov
pop
mov
and
inc
jp
lret
in
outsb
lds
vpshab
mov
fs
push
std
test
inc
data16
xchg
push
dec
idivl
cli
in
sub
das
xchg
pop
mov
pop
pop
aas
inc
flds
subl
inc
pushf
in
ret
jns
lahf
cmp
or
inc
popa
add
inc
cmp
sub
jmp
sti
jno
js
xchg
push
add
sbb
dec
out
out
repz
insb
add
xor
fwait
jnp
ficoml
aam
xchg
adc
push
shrb
cld
and
ja
lods
rcl
add
and
and
clc
pop
mov
xchg
pop
jle
push
ror
pop
dec
or
loope
or
inc
xlat
jg
and
test
sbb
rcrb
std
adc
and
mov
pusha
maxps
jb
iret
cltd
or
in
mov
sarl
pushf
aaa
mov
push
inc
mov
outsb
mov
jmp
push
adc
sbb
fsubrl
fidivl
lods
aad
pop
movsb
sub
cli
ja
jmp
cmp
cmp
sahf
inc
push
pop
cld
leave
test
in
or
in
movsl
jbe
or
inc
sub
int
into
popf
pop
out
and
or
jge
or
inc
mov
dec
rcrl
xchg
call
in
aas
mov
pop
xor
fsubl
enter
mov
xchg
mov
sbb
dec
ja
rolb
mov
shll
fiaddl
dec
shlb
stos
std
enter
jo
bound
loop
lret
cmpsb
mov
push
cmp
mov
jns
xchg
loop
pop
rorl
gs
or
or
das
or
mov
nop
mov
aas
push
dec
fstl
stc
pop
packsswb
fistl
cmp
cmp
into
aaa
adc
mov
loopne
push
jg
mov
icebp
idiv
and
adc
loope
mov
leave
pushf
divb
in
loope
xchg
nop
nop
jge
mov
lret
and
shrb
aaa
push
pop
roll
lods
xor
and
adc
jns
nop
pushf
and
mov
dec
nop
push
jecxz
cwtl
insb
and
daa
outsb
shlb
dec
imul
sub
loop
sbb
nop
pop
jnp
jns
push
cmp
xor
icebp
mov
movsb
inc
dec
cmp
fists
jno
loop
jg
cli
test
xorb
jbe
add
mov
in
jle
mov
add
int3
push
jmp
aam
xor
scas
or
fisttps
pop
jno
pop
fdivrl
jns
xlat
rolb
mov
xchg
mov
fdivrs
lea
in
clc
int3
loop
sub
jl
fdivs
dec
lods
addl
push
cwtl
rcrb
popa
xlat
adc
jns
movsb
lods
and
xor
sbb
arpl
push
repnz
mov
cmovbe
mov
sbbl
bound
out
inc
filds
pop
inc
les
adc
ds
je
lock
inc
cmpsb
and
dec
and
push
inc
addr16
xchg
fistpl
imul
mov
jo
inc
sarl
jno
mov
xchg
ja
mov
out
mov
lahf
repnz
hlt
aaa
and
mov
sbb
sbb
das
imul
test
pushf
mov
xchg
fistps
jmp
test
add
mov
dec
nop
inc
movsl
xchg
repnz
mov
or
cmp
ret
std
aad
mov
jno
loopne
mov
adc
data16
jae
sbbb
jg
pop
adc
call
lods
jp
sub
mov
cs
addr16
and
fistps
loope
mov
fimuls
sub
pop
ja
sub
inc
cmpsl
push
shlb
adc
mov
js
push
subb
je
jno
sbb
outsl
cwtl
int3
push
mov
imull
pop
imul
dec
push
test
pop
cmp
xchg
insl
dec
sarl
jmp
jno
popf
stos
lds
mov
mov
sbb
sbb
pop
popf
xchg
cld
daa
inc
xchg
shll
jne
cmpsl
and
fwait
icebp
mov
call
mov
mov
mov
jmp
mov
jge
out
loop
push
aam
sarl
mov
lret
adc
mov
cmp
int
test
stos
fistl
fldenv
dec
imul
jecxz
cmp
test
fsubr
pop
sub
popl
popf
pop
imul
movsb
mov
add
jp
mov
adc
sbb
jae
test
lods
addr16
mov
sbb
inc
and
adc
mov
pop
aam
in
bound
aad
fwait
aam
inc
and
data16
notb
add
xchg
movsb
inc
add
sub
out
xchg
movsb
mov
mov
mov
xchg
aaa
test
les
inc
add
mov
js
out
mov
in
dec
js
pop
xchg
out
or
cltd
mov
xchg
jns
xchg
push
add
sub
outsb
pop
lahf
xchg
not
or
sarb
push
movsl
call
das
rcrl
pop
popf
mov
test
jmp
sbb
xor
mov
jle
mov
sub
push
fistl
cltd
jbe
and
test
rorb
je
ss
mov
pop
inc
inc
cmp
adc
loope
inc
arpl
lods
call
jl
adc
pop
mov
sbb
subb
mov
xchg
xchg
sub
jae
into
rorb
fbstp
mov
aad
shlb
adc
xor
mov
mov
push
in
fcoml
ja
adc
out
decl
mov
int
jl
cmp
mov
xchg
and
roll
push
loopne
pop
divl
inc
leave
sbb
movsb
and
xchg
std
and
ljmp
pop
ret
push
lahf
jmp
mov
jge
out
nop
mov
add
ror
pop
cmpsb
dec
add
std
insl
and
inc
mov
jecxz
push
jnp
cli
loop
sub
cmp
rep
sbb
xor
lret
push
dec
call
add
xchg
adc
xchg
mov
out
push
into
mov
mov
inc
fwait
dec
pop
jo
ja
and
xor
mov
push
cmpsb
add
jb
xchg
fnstcw
or
idivb
enter
jp
cmp
in
clc
mov
mov
ljmp
in
mov
sub
xor
sahf
outsl
adc
push
add
enter
iret
iret
out
mov
imul
jo
popl
jg
lret
lahf
in
and
mov
popf
popa
or
rcl
sbb
cmp
mov
cmp
in
push
fwait
sbb
jae
xchg
std
and
adc
add
mov
lahf
pop
push
add
push
sub
inc
popa
ja
cmp
add
sbbl
enter
xor
inc
inc
jp
fs
jno
repnz
scas
lret
inc
imul
movsl
push
mov
fildl
pop
jo
and
jle
adc
jl
nop
movsl
or
into
or
push
mov
push
out
not
lahf
push
call
ja
push
sub
mov
adc
and
aam
push
fdivrp
ret
fcoml
or
pusha
les
movsl
daa
dec
icebp
xor
call
push
lret
mov
add
cld
and
test
lods
addr16
xor
jle
adc
orb
mov
repz
jno
stc
xchg
std
adc
popa
popf
das
mov
dec
push
leave
icebp
mov
aaa
mov
mov
mov
jmp
sub
mov
jae
xor
mov
jl
xchg
dec
pop
mov
scas
xchg
add
test
subl
xchg
mov
lret
scas
xor
mov
adc
hlt
insb
mov
sarl
repnz
xchg
push
int
mov
and
stc
out
in
dec
xchg
into
pop
pop
enter
jnp
dec
out
test
xchg
in
popf
mov
shll
out
jg
dec
mov
pop
insb
cli
es
jnp
out
lahf
or
dec
ret
int3
dec
push
aam
cld
and
sahf
enter
inc
je
push
or
mov
mov
sbb
xlat
mov
inc
fbstp
imul
and
imul
xchg
pop
icebp
and
lea
push
dec
flds
inc
sub
sub
xchg
out
cmpsl
test
adc
loopne
shr
push
push
mov
adc
test
cmp
lret
cld
popa
fprem1
mov
inc
andl
mov
or
adc
in
adc
mov
scas
jle
stos
cmp
shr
jae
sub
mov
mov
imul
cmp
lret
scas
push
and
jae
and
and
int3
lock
xchg
daa
and
gs
aad
ret
cmp
adc
and
lods
mov
mov
outsb
add
stc
nop
pop
cli
push
jmp
jb
add
jae
pushf
mov
adc
jb
loop
sbb
adc
rcll
inc
xor
iret
and
clc
lods
push
out
test
sarl
push
xchg
mov
jge
mov
lahf
stos
test
dec
inc
lods
ret
outsl
lret
popf
push
mov
pop
test
dec
rorb
mov
dec
mov
sbbb
aaa
loop
mov
sub
shr
sbb
jl
add
cli
out
aas
cs
or
adc
xor
and
mov
pop
jb
daa
outsl
mov
gs
jmp
or
out
lret
dec
call
mov
dec
out
movsl
mov
inc
cli
xchg
pop
ror
loop
jmp
in
sbb
movsb
pusha
test
sub
inc
je
push
sti
mov
adc
mov
data16
sbb
loop
fnstcw
lds
dec
ds
bound
sbb
in
sub
fdivrl
fisubl
lock
adc
movsl
sub
or
pop
jmp
insl
nop
outsb
ret
inc
push
outsl
ret
mov
scas
push
js
sahf
frstor
sbb
les
rcrl
sub
and
xchg
mov
and
loopne
add
mov
and
in
lahf
dec
sub
mov
pushf
call
lods
mov
xchg
insb
stos
jbe
addr16
in
pop
add
sbb
cmpsl
mov
jle
aas
testl
in
mov
in
mov
int
test
fdivs
test
cltd
icebp
mov
xor
sub
sbb
mov
pop
xchg
lds
fldl
mov
or
inc
bound
inc
daa
rclb
sbb
push
pop
test
es
jle
mov
imul
push
add
loope
test
cmp
enter
mov
cmp
cmpsl
outsb
cmpsl
push
fdivl
into
flds
pop
andb
dec
push
adc
push
mov
sti
movsl
sbb
xor
pop
mov
jl
mov
loope
movsb
push
lods
dec
sti
add
insl
fnstcw
xchg
in
adc
add
mov
xchg
cmpsl
adc
or
fs
in
and
mov
sbb
mov
adcl
enter
mov
add
mov
sub
adc
sti
ss
loopw
xchg
mov
jg
idivb
mov
dec
adc
clc
cmpsl
pop
enter
add
lea
pop
icebp
aas
fcmovnbe
out
in
add
push
push
jns
shlb
in
mov
jecxz
cmp
or
in
aas
cld
xchg
cmp
push
xchg
jae
jne
scas
push
rcrb
stc
mov
xchg
and
int
adc
cmp
sub
std
add
pop
inc
aaa
filds
cmp
cwtl
push
cmp
add
xchg
movsl
lds
cwtl
xor
xor
stos
js
push
into
adc
shrb
sub
icebp
lcall
dec
clc
ljmp
push
stos
popf
xchg
cmp
int
test
mov
mov
icebp
xchg
aas
cmp
decl
popa
pop
jnp
daa
sbb
cmc
rol
lock
xchg
cmpsl
pop
fsubrs
std
test
pop
nop
shrb
movsb
into
jmp
lret
mov
test
lea
sub
negl
xchg
in
xchg
insl
in
rolb
xor
jge
mov
lret
mov
add
or
fidivrs
adc
rcl
jno
adc
and
sbb
cwtl
jg
or
sbb
dec
flds
xor
lret
lcall
pop
mov
xchg
mov
repz
or
ds
add
dec
shrb
sahf
ja
mov
xchg
mov
lods
sub
test
cmp
std
movsl
call
std
lahf
and
adc
cmc
aam
pop
std
jne
rol
mov
ret
xor
or
daa
aaa
aaa
bnd
shlb
loop
jge
and
lahf
data16
ficoml
pusha
adc
inc
inc
push
loopne
mov
add
jo
roll
and
imul
xor
ret
into
push
shl
xchg
sub
add
and
xchg
movsl
daa
loop
mov
mov
pop
pop
mov
int3
push
fdivl
lods
in
xchg
mov
movsb
sahf
mov
mov
ljmp
add
cmp
std
xlat
mov
cmp
xchg
mov
add
sbb
scas
jae
ret
test
or
cmp
addr16
icebp
ds
stos
sub
lods
repz
test
loope
jmp
js
std
cwtl
mov
js
push
dec
mov
xchg
dec
aaa
inc
test
je
mov
scas
sub
das
roll
jge
cli
rolb
es
icebp
fstpl
jno
cli
mov
push
outsl
jp
jecxz
fucom
cmp
ret
cs
mov
lea
addr16
cwtl
fldl
mov
bound
push
sub
and
dec
jmp
sbb
imul
push
jne
lcall
orb
outsl
mov
jo
push
out
pop
ret
mov
dec
or
pop
pop
add
pop
push
loope
mov
test
jecxz
push
mov
mov
loop
adc
cmp
mov
push
inc
mov
daa
call
xor
sub
pop
aas
inc
dec
and
mov
pop
insl
xchg
pop
adc
inc
cmp
inc
cmc
sub
and
repnz
push
mov
sub
outsb
es
jge
in
mov
in
jl
ret
icebp
cmp
sub
outsl
outsl
insb
xor
stos
pop
loopne
and
xor
pop
gs
int
cmpsl
nop
loope
cmpsl
jmp
mov
sbb
test
es
mov
mov
and
or
mov
xchg
inc
fprem1
push
sub
mov
sub
jp
lahf
aad
call
scas
pusha
insw
pop
out
sbb
js
scas
jno
sbb
jl
pushw
cmp
inc
popa
call
lock
fiadds
leave
clc
add
push
push
mov
shll
adc
arpl
mov
cld
sub
lea
pop
mov
aas
addr16
dec
sbb
push
pop
into
cmp
jg
ror
cltd
fsub
lret
stos
cltd
adc
push
in
xchg
test
mov
fstps
pop
clc
mov
les
pop
mov
loop
or
xor
sbb
cwtl
or
inc
ret
mov
in
leave
cmp
dec
xor
pusha
pop
or
inc
cmp
xlat
pushf
jae
loopne
xor
ficoml
mulps
or
pusha
sahf
fsubrp
in
push
mov
dec
jae
mov
push
repnz
push
nop
fisubs
out
pop
loop
adc
lea
mov
scas
fldl
lds
mov
ljmp
push
add
shrl
and
loop
pop
jne
pop
sbb
ds
fwait
jnp
push
ds
repnz
push
scas
sub
clc
lods
scas
and
in
and
sub
sbb
mov
in
pop
test
or
iret
push
test
test
adc
popf
je
stos
pop
pop
pop
movsl
pop
idiv
cmp
faddl
cmp
es
mov
push
movsl
xor
mov
jo
add
stos
sbb
pop
xor
push
xchg
fucomip
dec
sbb
gs
and
mov
aam
insb
dec
and
jge
mov
pop
lds
mov
mov
aaa
push
xlat
push
push
push
inc
ficompl
loope
mov
lret
push
dec
cmpsl
adc
test
fldl
aaa
xchg
clc
push
xor
sub
loopne
test
test
dec
cmp
fmul
je
ret
in
add
jnp
mov
ror
enter
sbb
xor
lock
add
inc
pop
and
jbe
ds
scas
iret
bound
or
gs
pop
sbb
mov
jl
cmp
sbb
push
jo
and
lret
dec
scas
pop
adc
rcll
mov
dec
jecxz
mull
jmp
scas
and
outsl
sub
sbb
ds
lret
pop
in
jno
sub
adc
sarl
pop
mov
pop
pop
cmp
push
pop
push
mov
clc
lahf
xchg
lods
test
bnd
fidivs
nop
je
sub
mov
pop
push
xchg
mov
and
dec
cmc
scas
adc
fiadds
fcom
sbb
lea
and
dec
add
push
aad
std
lock
or
mov
subb
pop
insb
xor
pusha
add
lods
rorb
and
or
test
sbb
aas
adc
mov
jecxz
dec
stos
in
push
pmulhuw
movsl
jae
inc
dec
test
mov
bound
es
fldenv
mov
push
sub
shl
shll
xlat
stos
push
outsl
mov
lea
insl
and
inc
dec
dec
xchg
add
xchg
sbb
out
lahf
sbb
sub
inc
fildll
inc
push
js
pushf
xor
xor
jg
mov
mov
push
mov
xlat
cmp
push
js
lock
cmc
adc
scas
cmp
divb
pop
clc
cltd
dec
dec
push
pop
repz
mov
in
inc
clc
and
mov
fdivl
test
out
xor
mov
push
xor
xchg
ret
fadds
mov
xlat
mov
imul
or
xchg
xor
dec
xchg
lcall
jmp
in
mov
mov
pop
out
cmc
mov
sahf
push
out
stc
rcrb
ss
iret
or
push
or
sub
das
mov
mov
aaa
cmp
flds
cmc
jnp
mov
stc
jmp
xor
cmp
rorb
push
inc
in
xchg
int
mov
es
fisttpll
in
xor
icebp
daa
xor
push
mov
mov
pushf
iret
cmp
aad
cli
dec
ret
lret
sbb
in
in
pop
fcompl
pop
sub
cmc
xchg
dec
mov
fstps
jbe
mov
aad
data16
dec
testb
pop
test
add
inc
or
sbb
ret
pusha
push
mov
mov
cmpsl
mov
dec
loope
push
jl
dec
ror
mov
push
xlat
loopne
fcmovne
push
jne
xchg
push
hlt
adc
dec
sahf
aam
and
sub
lock
stc
movsb
dec
xchg
test
hlt
daa
mov
add
dec
test
ret
xchg
psubq
jg
and
mov
pop
mov
sbb
ja
push
in
notl
adc
xchg
repnz
mov
mov
stc
stos
stc
adc
add
lock
int
repnz
mov
scas
cs
arpl
mov
mov
mov
lcall
mov
call
insb
mov
mov
add
jae
jg
sbb
adc
ss
sbb
inc
jecxz
repz
es
enter
fucomp
fucomi
addr16
shlb
imul
out
xchg
roll
and
or
sbb
cmpsl
ds
mov
dec
push
pop
fistpll
ss
sti
mov
fidivrs
sarb
clc
dec
pop
mov
sbb
arpl
mull
adc
ret
inc
jecxz
sbb
pop
push
cmp
popa
sbb
fstps
pop
rorb
fists
mov
out
sbb
or
sub
sbb
in
pop
push
rclb
xchg
xchg
enter
add
ds
dec
fbld
pushf
rol
add
jle
mov
enter
mov
ret
out
divl
add
rorb
out
add
ret
inc
push
shlb
jmp
add
inc
lret
sbb
and
and
mov
cld
add
pop
cmc
imul
andl
push
sar
push
jns
aam
mov
add
xor
lods
adc
notl
push
lret
adc
push
sahf
aas
add
jg
and
adc
jae
jbe
xchg
pop
or
and
fcomps
sbb
inc
mov
icebp
push
sahf
mov
test
xchg
test
pop
pop
aaa
aam
adc
shrb
mov
in
dec
sarl
cwtl
mov
movsb
dec
les
mov
nop
lods
or
in
jne
jns
cli
mov
mov
mov
dec
jge
repnz
sub
cmp
xchg
pop
mov
sub
andl
leave
mov
cld
daa
fisubs
mov
inc
mov
je
hlt
inc
inc
cld
lahf
pop
pcmpgtd
sbb
and
xchg
mov
inc
and
int3
int
mov
and
xchg
dec
mov
lods
je
or
inc
add
xchg
pop
leave
dec
mov
scas
out
fwait
mov
jae
push
fdivs
jno
orl
aaa
mov
mov
gs
ja
mov
pop
xchg
divl
stos
or
shlb
in
fistpll
push
lea
mov
xchg
jnp
xchg
push
push
mov
mov
les
aad
rorl
pop
and
push
sbb
sbb
sbbl
jmp
xchg
pop
and
notb
adc
mov
ficompl
int3
mov
adc
mov
xchg
inc
xor
insl
std
sub
push
in
xchg
sarl
ljmp
fmul
fs
lcall
leave
or
cs
fwait
dec
and
and
call
int3
lods
cltd
xchg
stos
mov
xchg
stc
js
rolb
sbb
dec
lahf
adcb
popf
lcall
jmp
fildl
cltd
push
add
mov
out
adc
mov
jno
mov
insl
lea
ret
xorb
shrl
lods
add
mov
push
add
rcll
mov
mov
xchg
cmpsl
insl
mov
mov
bound
ret
imul
push
and
cmc
or
pop
je
mov
mov
inc
ljmp
mov
and
cmp
jmp
insb
jns
xchg
jno
mov
ja
filds
xor
cmp
rcrl
jecxz
popf
cli
jne
rcll
pop
mov
inc
rorb
ja
or
ss
xor
pusha
nop
sub
jecxz
push
fcmovnu
hlt
xchg
cli
outsb
lock
out
jns
mov
insb
pop
dec
divl
fwait
adc
mov
adc
mov
cltd
cltd
shrl
mov
push
mov
mov
pop
inc
je
pop
xchg
mov
mov
out
xchg
cmp
adc
jae
push
mov
js
rcll
shrb
dec
inc
pusha
stos
mov
lock
iret
out
rolb
ret
inc
and
and
mov
mov
mov
mov
movsl
jno
push
lahf
cmc
inc
shl
jle
ljmp
dec
xor
push
es
aas
roll
not
push
aam
out
inc
jmp
ljmp
mov
or
jecxz
iret
repz
mov
jbe
imull
xchg
lock
cmpb
or
mov
test
aas
stos
push
xorl
loop
popf
mov
mov
test
push
push
inc
and
test
roll
in
inc
push
movsl
pop
push
xor
sub
sub
int3
or
xor
adc
mov
jg
bswap
fsubl
outsl
xorb
out
clc
xor
dec
popa
and
fldl
cmp
dec
push
enter
or
jnp
rclb
and
mov
add
sub
inc
scas
pop
mov
fcom
dec
cld
fldl
aam
or
push
push
shll
aaa
jp
mov
mov
cli
xor
or
mov
xchg
inc
movsl
loope
dec
fisubrl
int
pusha
stos
scas
aam
fdivr
xchg
dec
int3
mov
in
or
sarb
push
xchg
lds
add
cmp
mov
adc
es
and
xor
jns
daa
push
lahf
fisttpll
mov
es
cltd
mov
in
shlb
scas
mov
in
mov
call
lea
and
jno
add
out
mov
test
inc
sbb
add
adcl
stc
inc
lock
cwtl
arpl
repnz
shrl
cmpsl
stc
out
cltd
out
jo
lods
push
jmp
int
out
mov
lea
xor
xor
push
xor
xor
les
jecxz
xor
ret
repnz
and
pop
cmp
shrb
and
jecxz
aaa
mov
loopne
lods
adc
adc
inc
scas
imul
xchg
lcall
xlat
sahf
cmp
push
adc
jl
inc
divb
push
add
push
cmc
andb
jb
inc
and
lds
pushf
sbb
orl
cmp
andl
jle
imul
enter
jge
addr16
pop
mov
out
fmull
xchg
dec
movl
mov
push
adc
aam
sbb
push
imul
sbb
sub
push
xor
jae
in
xchg
rcrb
add
push
mov
sub
aas
pop
les
mov
jg
shll
loopne
ret
popa
in
ljmp
call
jecxz
and
mov
in
popa
cmp
add
pop
mov
cmp
fistpll
mov
sbb
pushf
jb
xchg
fcmovbe
inc
jne
adc
mov
sbb
pushf
inc
sbb
xor
or
mov
js
into
dec
pop
mov
mov
sbb
pop
inc
mov
mov
mov
cmpsb
mov
stos
mov
insl
xor
sbb
jle
decl
shlb
pop
jl
sub
mov
inc
xor
push
push
cmp
popf
dec
js
push
add
sbb
cmpsl
and
pop
xchg
in
inc
cmp
les
xor
pop
scas
inc
cmpsb
fwait
xor
sub
pushl
dec
mov
adc
movsl
fimuls
dec
loope
setae
cltd
insb
adc
or
icebp
lds
movsb
jge
fidivs
or
cmc
and
jb
mov
add
pop
sbb
adc
xor
cmp
pop
pop
iret
mov
pop
pop
or
js
sbb
xchg
pop
xchg
iret
jge
adc
sahf
push
xlat
mov
push
sub
or
dec
dec
add
ja
lret
movhps
in
sbb
or
jno
add
mov
dec
shrb
lods
sub
jg
das
scas
add
ja
outsl
fwait
dec
insl
mov
cmpsb
out
lea
mov
fucomi
xor
jecxz
jp
add
sbb
xchg
pop
sbb
inc
push
out
xor
test
mov
hlt
push
movsl
out
scas
sub
dec
xor
sbbl
sbb
jns
pop
sbb
movzwl
or
int3
or
push
sub
xchg
outsb
int
jle
adc
push
push
adc
ficomps
loop
add
push
gs
stos
daa
data16
cwtl
pop
mov
xor
test
mov
stc
ja
aad
aas
fildll
jmp
js
aas
lcall
inc
into
int3
jno
mov
xor
jge
xchg
dec
inc
xor
push
lret
cs
out
insl
add
das
pop
subb
subl
xor
or
fildll
mov
lahf
dec
stos
mov
xchg
popf
mov
dec
imul
mov
jle
sub
mov
test
lods
jmp
mov
in
inc
fucomp
addr16
test
bound
dec
mov
xor
fucomi
jge
pop
pop
jo
and
hlt
fwait
lods
out
inc
cmp
adc
popf
mov
mov
and
xchg
je
jge
mov
mov
or
xchg
adc
out
repnz
loopne
add
or
jle
clc
or
lods
ss
xchg
mov
push
mov
shl
dec
div
cmpsb
or
mov
call
mov
add
fs
and
out
into
add
jb
pop
mov
and
add
icebp
mov
mov
sub
mov
popf
push
jno
inc
mov
sub
pop
push
mov
inc
insb
bound
stc
push
scas
mov
mov
sbb
push
sbb
out
xorl
je
pop
lock
dec
movsl
lods
sub
jno
test
mov
jg
xor
mov
clc
push
leave
cli
pop
sbb
pop
inc
mov
mov
pop
add
sarb
iret
rolb
test
jae
inc
lret
mov
mov
mull
movsb
mov
or
xorb
lods
xor
das
clc
jmp
fimuls
lock
cmp
pop
call
out
iret
mov
dec
popa
sub
leave
mov
es
icebp
in
repnz
call
iret
je
pop
lahf
mov
ljmp
cwtl
loop
sbb
mov
je
push
push
subl
mov
inc
cmp
fbstp
popa
loope
das
popa
mov
xchg
adc
fnstsw
cld
in
outsl
jb
int
repnz
inc
and
sub
jecxz
imul
fstl
call
cld
popf
mov
hlt
repnz
subl
or
add
and
cmp
repz
ss
mov
xchg
mov
popa
adc
cld
out
push
fmuls
pop
mov
pop
out
jns
test
popa
jne
mov
fsubs
shll
ret
int
addr16
mov
adc
addr16
je
fdiv
inc
fwait
sbb
stc
pop
fistpll
sahf
or
adc
sbb
jne
jne
mov
gs
adc
cmp
push
mov
xor
ror
xchg
dec
iret
sub
xor
pop
dec
aas
inc
sbb
hlt
mov
add
lahf
lret
sbb
and
subb
in
out
dec
psraw
mov
or
mov
sbb
in
jge
in
pop
jg
push
pushf
xchg
mov
jge
adc
sub
icebp
xchg
jecxz
push
or
inc
cmp
clc
or
inc
lds
inc
jne
dec
jns
fdivl
push
icebp
iret
adc
or
out
mov
sbbl
xchg
pop
jnp
sub
push
dec
sub
lock
push
pop
xchg
js
sbb
xor
or
iret
stc
nop
dec
cs
test
lret
mov
mov
xchg
imul
outsl
dec
mov
sub
repz
pop
loopne
cli
xor
xor
out
push
mov
cmp
insb
aad
add
mov
inc
arpl
out
mov
adc
or
mov
push
fdiv
dec
lds
push
aaa
dec
and
test
xorb
sahf
gs
and
testl
scas
into
mov
inc
jle
popf
push
sarl
out
lods
in
push
loop
mov
xchg
push
sbb
inc
popf
test
hlt
mov
sub
dec
xchg
jb
mov
loope
mov
jne
xor
imul
or
mov
dec
movsl
int
in
loopne
faddl
mov
in
cwtl
cmp
movsl
sbb
loope
pop
mov
gs
inc
mov
fidivl
popf
repnz
push
imul
hlt
pop
rolb
xor
hlt
test
adc
jb
mov
sub
or
popa
call
inc
stos
stos
adcb
jb
xor
gs
adc
adc
lock
and
in
jmp
hlt
push
aam
adc
fwait
prefetch
nop
push
mov
loop,pt
cmc
mov
mov
out
inc
mov
xor
add
pop
cmpsb
or
fcompl
pop
daa
and
sti
je
jecxz
jle
pop
push
enter
call
loop
sarb
dec
das
std
arpl
fcmovbe
jmp
fistps
cmp
inc
loop
xchg
imull
addr16
mov
subb
push
icebp
inc
hlt
pushf
enter
or
mov
ds
mov
nop
loopne
test
lahf
scas
outsl
adc
sbb
fwait
jae
stos
lods
mov
mov
stos
enter
add
loope
loope
xor
enter
lods
pop
lret
loope
push
push
add
mov
cmpb
push
aad
jno
stc
mov
push
outsb
je
push
mov
hlt
movsl
data16
add
js
repz
stos
cmp
jne
loopne
push
mov
xchg
xchg
imul
nop
pusha
inc
rolb
adc
sti
lock
add
scas
xchg
sub
pop
test
xor
inc
scas
icebp
sbb
inc
or
pushf
sbb
lret
mov
insb
mov
mov
or
or
cmpsb
insb
repz
popa
nop
xchg
ds
inc
sti
xchg
mov
out
jecxz
inc
add
sbb
ret
and
and
xor
cmp
repz
iret
sbb
jmp
jl
adc
mov
repnz
shl
adc
pop
repz
pop
push
xor
mov
enter
fnstenv
mov
fcoml
jnp
lahf
xchg
xchg
repnz
or
adcl
popa
jp
in
and
cmp
inc
pusha
mov
push
hlt
pop
add
popa
xorb
movsl
sti
ret
ret
push
mov
enter
daa
test
jl
pop
stc
jb
fcoml
add
insb
sub
jmp
jno
sbb
dec
sub
sub
pop
test
cwtl
sub
xchg
add
les
xchg
sbb
add
punpckhdq
push
and
push
jo
push
cmp
dec
call
lret
sbb
sub
xorps
mov
mov
rorb
mov
xchg
jbe
xor
mov
test
les
rcrl
fst
mov
push
in
xor
es
jg
cmp
push
ds
icebp
cmp
fwait
xchg
sub
and
lock
call
sbb
mov
push
mov
and
xor
xchg
mov
or
icebp
test
mov
loopne
cld
cmp
test
fldl
fnstsw
push
ret
gs
out
mov
xor
les
sub
in
stos
cmp
cmp
jo
dec
adcl
xor
pop
jmp
int
loope
sbb
xor
icebp
mov
cmp
cmp
out
fdivs
mov
add
subb
leave
and
ret
das
and
sbb
jo
xchg
cmc
lret
cli
mov
cld
das
sahf
call
rorb
push
xchg
push
xor
sahf
sahf
lahf
xchg
leave
rcll
or
adc
bt
adc
jle
rclb
push
pop
cmp
subps
push
push
cmp
or
jae
pusha
fstl
jbe
push
or
imul
mov
shr
jae
mov
jo
push
popa
pop
flds
les
mov
aaa
adc
adcl
jb
ss
inc
sbb
mov
out
cmp
sbb
pop
ja
mov
add
cwtl
les
cmc
mov
sti
mov
jno
add
leave
arpl
aaa
cmp
mov
xchg
subb
int3
call
pop
iret
cmpb
xlat
ficoml
int
das
pop
sub
ds
sbb
push
add
fiaddl
out
and
xor
mov
mov
push
stc
fdivs
repnz
outsb
repz
jmp
call
cmp
cmp
lods
icebp
or
lret
push
mov
push
rorb
sbb
imul
sub
and
xor
inc
testb
dec
xchg
mov
pop
outsb
bound
bound
cmp
mov
pop
dec
mov
outsl
pop
and
adc
pop
jp
adc
nop
insb
xor
push
out
dec
dec
mov
sbb
cltd
and
mov
adc
in
inc
adc
popf
jmp
scas
icebp
aam
push
dec
pusha
sub
arpl
xchg
xor
sub
mov
outsb
sahf
mov
mov
add
mov
aaa
jo
fcomp
xchg
mov
xchg
inc
das
sbb
outsl
fs
and
cmc
aad
dec
fsubrp
jp
mov
adc
ljmp
xchg
test
add
pop
sti
int
outsb
inc
daa
out
mov
cli
adc
cmp
movsl
and
pop
cli
mov
repz
out
push
lock
jnp
mov
adc
xor
pop
jb
push
enter
xor
mov
mov
gs
mov
clc
aam
pop
cwtl
out
call
sbb
addr16
ror
mov
pop
cs
or
and
sub
and
or
aam
jbe
xchg
scas
into
and
sub
mov
mov
pop
xor
jne
or
fistpll
loop
fs
clc
cltd
dec
test
lock
iret
mov
ret
ficompl
lahf
jo
xchg
shll
insb
xor
jge
loop
mov
aaa
sbb
in
ljmp
cmp
xchg
or
mov
shrb
mov
jmp
inc
push
inc
rorl
mov
cmpsl
outsl
daa
icebp
fwait
cwtl
and
push
out
pop
iret
aad
sbbb
inc
jmp
push
mov
jecxz
push
popa
subl
or
ds
std
lret
jo
and
aad
inc
lock
cmp
cmp
xor
or
jg
addr16
pop
rcll
jp
test
or
data16
mov
xchg
movsb
dec
dec
cmp
cld
icebp
cmp
mov
mov
push
movsb
push
stc
sub
fsts
sahf
dec
cld
pop
cmpsl
loop
es
out
xchg
mov
inc
ds
dec
sub
fisubrs
into
cld
adc
jno
into
jge
cmpl
clc
das
pop
mov
fadds
rol
jno
lahf
push
roll
mov
add
mov
dec
jne
mov
jb
xchg
xor
xor
cltd
out
fstpl
add
aas
gs
repnz
xchg
mov
push
mov
mov
out
in
ds
pusha
add
pop
adcl
cmpb
xchg
and
pop
xchg
sbb
fs
aas
add
fmuls
push
pusha
jmp
in
mov
dec
ljmp
js
stos
inc
lods
dec
mov
mov
out
jno
mov
mov
sub
xor
xchg
lret
or
jl
fisubs
inc
pop
cmp
rorb
popf
mov
dec
mov
cltd
pop
mov
cmp
ljmp
sub
xor
mov
cmp
out
adc
pusha
daa
call
sub
mov
dec
dec
fidivrl
fsin
es
adc
mov
in
mov
mov
pop
arpl
sub
xchg
pop
push
and
outsl
pop
pop
push
mov
cmp
dec
decb
fldt
sbb
loopne
jo
xor
cmpsl
sahf
sbb
lret
adc
mov
faddl
and
je
ds
imul
enter
ds
aam
insb
mov
dec
jmp
lods
adc
sbb
loope
mov
pop
scas
pop
mov
lahf
mov
and
xor
fstpl
lods
push
push
mov
sbb
push
pop
div
rorb
testl
ret
cmp
xor
pop
popa
jecxz
mov
cmp
aam
push
push
in
scas
inc
xchg
rclb
and
clc
inc
mov
shrb
scas
cmp
xor
push
call
sbb
pop
hlt
jmp
lods
ret
inc
loopne
push
sub
pop
shrd
addl
mov
pop
and
dec
ret
addl
mov
xorl
mov
cmp
daa
dec
imul
mov
xchg
cmp
outsl
xor
hlt
dec
pop
pusha
mov
adcl
push
inc
cmpsl
push
cmp
pop
pop
and
imul
or
pop
inc
adc
cmc
cli
sub
sub
clc
sbb
and
orl
mov
repz
jbe
jno
xor
xchg
in
movsl
push
cmp
icebp
jns
and
cmp
jno
pop
test
lret
push
jo
int3
or
mov
jmp
loop
out
jmp
xor
adc
xor
sub
into
into
out
orb
add
cmp
xor
inc
call
fprem1
jne
mov
vsqrtps
insb
mov
inc
or
je
mov
test
pop
fnstsw
and
repz
xchg
out
std
cwtl
lret
lret
lods
sbb
cmp
add
and
push
adc
shlb
out
arpl
jmp
int3
xchg
mov
sahf
pop
sbb
or
in
fists
cmp
jl
jecxz
outsl
dec
in
add
in
add
cmp
adc
pop
jo
mov
mov
push
inc
out
mov
aad
add
push
sub
cmp
movb
xchg
aad
pop
int
xchg
jl
jns
daa
ljmp
push
jb
loopne
cld
arpl
arpl
ds
mov
sub
lahf
inc
or
adc
mov
push
sti
xor
aas
mov
add
bound
jle
lret
dec
out
pop
lahf
jbe
push
adc
cmp
rcr
ret
scas
repz
divl
jo
popl
cs
lret
cs
push
es
sbb
push
add
ror
stos
adc
pusha
add
dec
sbb
xor
inc
icebp
sbb
sahf
mov
mov
add
lods
jo
bound
mov
mov
out
cmp
popa
outsl
fiadds
lods
jne
push
add
fdivrs
movl
pusha
adc
inc
pop
sub
inc
in
cltd
dec
cltd
and
push
push
jae
jns
xchg
add
nop
inc
push
in
adc
shr
mov
push
outsl
cmp
insb
mov
rcr
cmp
jp
xor
mov
arpl
mov
adc
in
scas
mov
aam
adc
dec
jge
inc
lods
bound
subb
js
fdivrs
insl
push
fs
push
pop
sbb
ficoms
ds
jne
mov
shlb
lret
cmp
aam
lds
orl
cmpsb
lods
inc
int3
cmp
add
and
mov
subb
bound
lcall
jecxz
jle
sub
test
jge
pop
lods
xor
mov
xor
dec
lds
shll
adc
cmp
rolb
std
fadd
call
sub
sarb
insl
mov
test
lret
sbb
aam
and
inc
add
mov
jg
pshufw
jo
adc
lahf
std
push
xchg
nop
sub
mov
sub
lea
add
inc
mov
jg
cld
mov
add
xor
pushl
xor
outsb
loop
inc
sarl
fldenv
sqrtps
and
js
adc
jge
xlat
popa
lret
cli
pop
and
add
push
arpl
push
cld
movsl
push
movsl
lret
and
sbb
xor
lods
pop
mov
shll
mov
mov
movsl
das
pop
adcl
imul
mull
adc
js
cmp
add
into
sub
xchg
in
fistpl
sub
mov
sarb
jno
fstps
int
loopne
push
enter
js
mov
adc
out
out
adc
xorl
rorb
xorl
rcll
fisubrl
add
stos
mov
ret
pop
push
ret
sub
dec
pop
cmp
addl
xchg
shrb
movsb
andl
inc
and
out
or
mov
jnp
or
dec
adc
and
jbe
fiaddl
ds
cmp
fsubrp
sbb
pop
sbb
leave
mov
add
or
test
aaa
cwtl
xor
les
repz
das
out
and
lods
mov
sub
pop
into
adc
jno
xor
outsb
dec
loop
or
repz
addr16
outsb
imul
insb
sub
and
mull
jo
adc
lock
stc
xchg
inc
push
push
ljmp
movsl
adcl
sbb
rorl
inc
jl
ret
dec
imul
into
pop
pop
adc
xor
adc
xor
fldl
mov
jge
test
mov
cmp
mov
fdivr
pop
ss
pop
or
adc
daa
seto
jle
xorl
cmp
xor
test
rolb
sub
mov
mov
aam
xlat
lea
jle
pop
arpl
ja
xchg
inc
in
sbb
popf
jnp
shlb
jae
mov
lahf
movl
test
sub
mov
and
jno
cs
in
rolb
add
in
hlt
bound
mov
data16
pop
mov
pop
iret
out
mov
xchg
pop
pusha
xchg
aam
xchg
or
repnz
addb
fisubrs
and
sub
adc
stos
pushl
ret
mov
es
xor
popf
test
lret
pop
sahf
outsl
pushl
lods
daa
scas
inc
mov
pop
jecxz
mov
sbb
mov
fmulp
clc
or
add
leave
aad
sbb
dec
push
pop
out
mov
lcall
or
fs
cld
pop
mov
or
push
sub
and
or
std
mov
and
add
cmc
movsb
aad
pop
inc
in
push
pop
adc
outsl
push
dec
ljmp
xor
mov
push
fisttpl
jg
push
nop
fneni(8087
lods
or
mov
jl
insl
push
test
fsubrp
mov
bnd
movsl
xor
fnstenv
sub
and
xor
dec
fimull
xchg
movsb
lret
xchg
hlt
dec
sub
adc
idiv
xchg
stc
adc
dec
stc
stos
ds
pusha
inc
inc
repz
dec
jnp
mov
cmpsb
pop
fbld
lods
dec
dec
cli
mov
mov
sti
lcall
and
mov
repz
mov
lea
rorl
and
mov
insb
pushl
int
xchg
cmc
fcom
dec
loopne
push
shl
xchg
stos
or
push
mov
in
push
mov
push
dec
push
jns
jmp
cmp
stos
rol
xchg
xor
fcoms
outsl
ds
je
popa
dec
xor
jge
adcl
mov
lds
stos
nop
inc
ret
lret
jo
shl
adc
or
pop
rorl
mov
aaa
pop
loop
rep
add
mov
inc
scas
jbe
das
xchg
loope
test
inc
push
or
cld
jmp
and
mov
cwtl
testl
inc
arpl
sarb
jp
stos
inc
inc
jp
aas
outsl
push
ja
cmp
inc
add
push
rcl
in
orl
jl
js
imul
sbb
dec
fdivl
ret
push
push
test
dec
pop
in
mov
sub
push
mov
ja
fstps
dec
scas
out
mov
sahf
mov
xor
repz
cmp
in
and
into
pop
push
xorb
es
xor
shl
xchg
fs
push
xchg
adc
leave
add
mov
arpl
xchg
push
dec
loop
lods
popf
pop
sbb
ss
sar
es
inc
js
ret
sbb
clc
adc
call
xchg
sarl
inc
arpl
sbb
or
mov
push
adc
loopne
insb
mov
data16
mov
ret
or
shll
mov
add
nop
mov
hlt
sbb
mov
inc
pop
imul
std
cmc
mov
mov
xor
lds
sub
out
subb
lahf
movsl
lcall
sub
stc
pop
loopne
push
je
popa
addr16
dec
aad
je
jmp
in
mov
inc
shl
xor
add
mov
mov
sub
fists
fbstp
push
pushf
mov
mov
addb
push
cmc
xchg
fwait
pop
aaa
or
lret
cmpsb
and
jb
jp
mov
mov
rcll
pop
andl
cmpsb
imul
leave
push
cmp
xchg
pop
push
inc
shll
mov
mov
ss
sbb
jmp
or
lea
sbb
icebp
insl
lds
mov
xchg
movsb
push
pop
mov
mov
shr
pop
fdiv
adc
sbb
xor
das
test
fidivrl
pop
jle
mov
sahf
les
in
aad
setae
loopne
adc
jne
test
xor
xchg
push
inc
ja
mov
mov
mov
cs
or
dec
push
into
push
js
fisubrs
adc
ss
mov
fistps
aas
mov
push
lods
div
fstps
movsb
sub
add
mov
jg
adc
lea
push
jp
sbb
xchg
movsb
adc
orl
into
cmp
lret
jns
xchg
push
push
sub
push
pushf
xchg
das
insl
mov
jnp
fwait
push
ret
rol
add
nop
pop
andl
adc
imul
jno
push
push
jae
ficoml
xchg
sbb
lds
out
shll
push
sbb
add
add
or
mov
mov
fildl
dec
scas
jecxz
fcmovb
mov
mov
pop
xchg
cmp
jle
inc
mov
lret
ds
xor
leave
sbb
mov
add
repnz
cmp
nop
pop
rclb
nop
inc
or
ret
cmp
stc
sub
jae
in
aad
neg
mov
adc
xchg
pop
daa
xlat
cmp
daa
push
je
sahf
out
fsubr
lock
hlt
scas
inc
push
xchg
bound
and
out
dec
orb
fld
and
psrld
add
sar
adc
push
int3
loope
inc
push
xchg
int
or
jno
iret
jno
cmc
jle
inc
xor
mov
mov
lods
inc
or
add
add
enter
push
out
lcall
or
fisttpl
insb
jnp
ret
mov
scas
cmp
xor
cld
scas
jmp
dec
xor
lods
fwait
xchg
jne
xor
jns
filds
adc
out
or
sub
xchg
mov
div
xor
lcall
loope
stos
mov
outsb
sbb
aaa
out
jno
sub
jo
ret
dec
imul
jae
adc
lret
nop
sbb
fwait
mov
xchg
shlb
adc
icebp
sub
aas
lret
lock
lods
shrl
mov
out
mov
add
xchg
scas
xlat
vcvtsd2si
cmp
push
cltd
bound
cmp
addr16
xor
loopne
rcrb
jecxz
int3
inc
lret
pop
dec
xlat
scas
dec
mov
sbb
mov
dec
sbb
push
lock
sub
outsb
pop
adc
ds
addr16
pop
sub
cmp
dec
add
xchg
faddp
and
xchg
test
or
les
and
or
lret
aaa
xchg
scas
clc
jp
les
adc
xor
je
push
addr16
xchg
pusha
fucom
dec
sbb
clc
aad
sub
mov
or
dec
stos
in
lods
fbstp
jno
test
lods
dec
inc
ljmp
pop
mov
movsb
cmp
test
push
xor
or
pop
mov
aam
push
js
sbb
or
pop
cmp
rolb
sub
or
sbb
lret
jno
mov
scas
and
add
rorb
ds
xchg
add
mov
stos
fcomi
xchg
fwait
add
jno
aam
mov
lret
nop
lahf
xchg
mul
sbb
jo
or
ljmp
xchg
sub
xchg
lcall
push
xor
cmp
and
dec
in
mov
ljmp
movsb
cmp
jb
add
push
jge
imul
lea
lret
negl
leave
fiaddl
pop
lret
add
test
popa
inc
mov
movsb
adc
mov
lret
mov
xchg
dec
mov
add
xor
aas
jp
jmp
xchg
and
mov
xchg
mov
mov
sub
push
push
xor
xchg
ljmp
push
je
scas
stc
inc
xchg
xor
pop
push
aaa
in
push
fldcw
dec
hlt
cmpl
sub
aaa
scas
mov
dec
sub
xchg
lock
call
mov
adc
sub
insl
hlt
add
pop
jne
ficomps
sbb
mov
in
pop
mov
mov
xor
xchg
sbb
sbb
pop
cwtl
ljmp
enter
arpl
sbb
outsl
pop
mov
and
faddp
rcr
rcrb
outsl
out
ret
mov
iret
cltd
xchg
into
stc
jo
jne
stc
ret
add
pop
nop
push
mov
shll
notl
sub
jbe
adc
and
rolb
in
push
popf
insl
or
push
iret
jle
addl
leave
jp
orb
mov
inc
stc
data16
xchg
out
fdiv
adc
jo,pt
int
rorb
test
and
lahf
mov
mov
adc
add
in
jle
jecxz
pop
push
repnz
push
jl
adc
dec
and
mov
fimull
xor
jne
fisttps
and
lock
lcall
adc
iret
pusha
bound
incb
sbb
loopne
cmc
inc
imul
shl
mov
jb
xor
add
aaa
cwtl
mov
or
sub
cmp
aaa
cmc
adc
mov
mov
jge
or
mov
xor
push
jns
inc
loope
push
je
sub
hlt
inc
mov
lahf
insl
aad
or
out
push
dec
jns
cltd
cmpl
imull
sbb
test
imul
rcrl
rcr
mov
mov
xchg
lock
int3
shll
test
mov
cmc
scas
or
gs
mov
mov
ja
add
cmpsl
pop
add
pop
mov
jmp
or
in
push
and
jo
std
add
jle
sbb
ret
jle
mov
cmc
and
pop
fstpt
xchg
fdivrl
xchg
add
sub
push
push
push
mov
fisubl
push
cmp
dec
inc
jne
mov
xchg
cli
sub
mov
ret
loop
push
push
pop
std
sub
ss
jg
iret
mov
maxps
mov
aas
dec
sub
mov
pop
cmc
and
xlat
pop
jmp
mov
mov
push
mov
dec
test
adc
dec
mov
enter
test
xchg
fdivrl
jp
pop
insl
push
inc
xor
loop
add
and
popl
sub
ficompl
fisubs
cmp
push
nop
rorb
das
popa
out
sahf
or
popa
jp
lahf
jne
adc
lcall
scas
sarb
mov
add
or
scas
cmpsl
popf
pop
cli
push
jne
xor
pushf
add
sbb
xor
xchg
mov
mov
adc
sbb
out
jbe
push
shl
lock
sub
mov
rcrl
ss
mov
out
dec
aam
ja
sub
test
sbb
test
stos
or
imul
je
push
cmp
pop
nop
mov
int
ret
stos
notl
loop
or
jbe
mov
cltd
sub
shrl
leave
in
inc
mov
clc
fildl
xorb
fs
pop
sub
sbbl
lea
jge
xchg
loopne
imul
xor
mov
fldl
test
gs
sub
inc
pop
popa
stc
xchg
inc
jp
mov
mov
xchg
sub
adc
mov
sbbl
or
pop
jbe
and
ja
sub
push
jecxz
out
pxor
int
inc
jns
ret
sbb
movsl
jge
sub
popf
js
mov
push
dec
mov
pusha
sub
js
outsb
or
mov
sbb
lcall
cli
call
loop
xorb
mov
cmp
rol
push
sub
push
push
xchg
call
mov
fidivrl
fadd
call
xor
movsl
pop
outsb
and
push
mov
bound
sbb
stos
sub
jne
ret
in
adc
fsubrs
stc
xchg
iret
mov
or
sub
inc
rolb
inc
push
cmpsl
mov
pop
sbbb
cld
mov
in
repz
mov
or
lcall
or
pop
push
data16
fcoml
jecxz
xor
jle
dec
shrl
pop
xor
or
test
nop
in
dec
add
inc
int
lahf
adc
subb
mov
mov
xor
mov
xor
or
mov
xchg
hlt
xor
and
dec
and
jg
int3
push
cmp
leave
aas
xor
and
push
mov
or
or
push
dec
pop
ljmp
insl
sub
add
retw
iret
sbb
push
rolb
cmpsl
and
fsubs
nop
mov
into
vmovdqu
pop
mov
dec
lods
fcomi
add
dec
mov
imul
dec
std
sbb
xchg
arpl
dec
adc
lcall
xor
push
xor
stos
xchg
inc
mov
mov
mov
cltd
fisubrs
ss
das
push
jno
mov
cmp
test
scas
pusha
xchg
push
push
sub
mov
js
rorb
loope
mov
into
pop
mov
mov
cmp
push
orl
jnp
popa
lods
outsb
add
shll
imul
mov
loopne
mov
push
push
pop
mov
icebp
sub
lret
aad
lahf
test
ja
in
outsl
and
and
adc
stc
pop
jge
push
cwtl
cmpsl
xor
dec
insl
add
stc
push
jl
icebp
cmp
frstor
sub
clc
test
ret
mov
scas
cmpsb
adc
push
inc
add
shrl
jmp
dec
mov
ret
adc
mov
mulb
push
in
adc
fwait
or
push
ljmp
mov
cmp
mov
lcall
mov
push
js
dec
lds
cmp
pop
test
jmp
adc
inc
in
dec
lock
inc
pop
lea
lods
lods
push
xor
stos
in
or
lods
jle
repnz
jb
inc
cmp
pusha
pop
push
cmp
jnp
jne
dec
aam
gs
dec
add
mov
pusha
push
lods
nop
mov
adc
add
mov
addr16
and
or
repz
cld
push
bound
out
and
mov
cmp
sub
jmp
adc
jo
sbb
cmp
mov
jns
inc
aas
xchg
cmp
ljmp
mov
sar
bound
pop
cwtl
mov
jp
jae
xchg
and
addb
mov
cmp
popf
mov
pop
xor
cmp
mov
subb
ret
push
imulb
das
sub
lret
sbb
cmp
mov
inc
lret
sti
pop
insb
push
das
es
shrl
push
xor
ret
jp
adc
in
nop
jl
nop
adc
mov
fisttps
adc
insb
pop
outsb
inc
js
cmpsl
out
ss
pop
mov
lods
xchg
jl
aas
lret
xchg
ljmp
stos
push
xchg
cmpsb
addr16
mov
mov
adc
imul
or
int
fdivs
movsb
fildl
pop
xor
pop
pushf
and
aas
push
rorb
mov
pop
lods
mov
jle
jl
lcall
pusha
push
les
les
ljmp
sub
popf
mov
sbb
adc
test
push
mov
sbb
cmp
and
pop
shl
lahf
cmp
dec
or
fdivr
sub
stc
insw
mov
movsb
nop
sub
add
popw
cs
test
popa
push
idivl
ljmp
cmp
das
gs
xchg
inc
inc
test
mov
out
pop
inc
inc
add
inc
mov
inc
jne
mov
insl
xchg
push
xchg
mov
iret
dec
pop
out
loop
rcr
rcrb
and
fiadds
dec
and
push
or
les
mov
mull
neg
loopne
adc
lock
mov
cmp
sub
icebp
cld
das
lds
jno
cmp
xlat
jmp
sti
add
push
call
rorl
or
rclb
jo
andb
cmpxchg
fcomps
fsubs
fcomip
jbe
jge
movsl
ret
jle
mov
jae
scas
or
testl
jmp
scas
pop
enter
lds
jns
cs
adc
cmp
icebp
pushl
pushf
mov
and
mov
pop
test
jae
ljmp
mov
and
sub
xchg
cmc
add
les
cmp
mov
pop
and
outsl
movsl
nop
mov
dec
mov
dec
mov
ja
and
xor
int3
fbld
arpl
ss
and
lea
sbb
adc
hlt
loope
popf
mov
leave
adc
mov
adc
cmp
pop
lods
mov
pop
pop
inc
lea
test
addl
inc
mov
add
adc
lods
adc
dec
movsb
mov
out
leave
test
xchg
dec
lret
jo
stc
add
cmp
shrb
push
je
and
xchg
add
sbbb
fdivp
into
push
or
popa
sahf
in
outsl
scas
push
ret
jne
jb
call
lret
in
push
andl
pop
xchg
je
out
addr16
cltd
addr16
or
mov
jno
addr16
sub
sub
mov
daa
add
dec
or
cld
inc
pop
loop
push
fnstsw
sub
scas
pop
lods
test
frstor
cmpl
xorl
dec
mov
pop
repnz
push
cmp
sbb
inc
sub
cmp
xor
notl
push
mov
mov
pusha
xchg
xor
fwait
xor
adcb
fisttpl
shll
cmp
adcl
arpl
push
mov
mov
and
jo
pop
sbb
test
jg
lea
loope
mov
addb
mov
sbb
daa
pop
shll
inc
dec
loope
imul
sti
lcall
test
mov
xor
scas
stc
dec
mov
pop
xlat
js
frstor
xchg
add
xchg
pop
out
loope
push
xchg
in
ficomps
xor
aad
mov
add
mov
mov
imul
dec
std
bound
pop
test
imul
inc
scas
inc
push
add
cmpsb
js
fiadds
lea
sbb
andl
jp
dec
push
pop
adc
and
addb
adc
lahf
push
mov
cmp
pop
xchg
xor
xchg
adc
addr16
gs
or
dec
pop
aas
sub
loope
arpl
push
in
sbb
jp
test
sti
dec
scas
rcll
dec
add
jle
push
mov
cmp
fwait
inc
jle
adc
inc
scas
sub
sbb
and
xor
fwait
pop
aas
mov
xor
mull
gs
xchg
add
adc
in
mov
fs
popf
dec
rcl
sbb
add
or
sub
jecxz
cwtl
insl
mov
mov
inc
cmp
adc
cld
mov
adc
dec
adc
push
xor
pop
pop
imul
push
xor
or
sbb
xchg
int3
cli
insb
sahf
jb
mov
scas
dec
and
insb
test
nop
add
lret
and
rol
lahf
cmp
shll
movb
rcrl
out
orl
push
jb
mov
push
xchg
add
adc
fs
scas
mov
cld
or
jae
inc
and
adc
cld
iret
xor
into
fdivp
and
outsb
movsb
mov
arpl
mov
pop
test
dec
cmp
test
sbb
add
add
push
mov
xchg
inc
pop
aaa
dec
inc
loopne
mov
or
notb
sti
sbb
call
mov
or
test
and
dec
push
xor
fsubrp
pop
cltd
mov
mov
mov
push
andb
and
test
movl
mov
out
aaa
sbb
ja
je
call
sahf
andb
out
mov
ss
inc
mov
in
adc
and
add
mov
pop
push
loope
push
push
cli
cmpsl
mov
jb
jge
mov
xor
or
fs
and
adc
inc
loope
jnp
rorl
inc
inc
push
aas
and
test
cltd
es
sbb
mov
sbb
fldenv
and
mov
daa
js
xchg
insl
xchg
push
mov
pop
imulb
inc
sub
sahf
mov
lret
xchg
jg
push
stos
jne
mov
lea
push
addr16
mov
push
in
sub
sbb
mov
ja
mov
out
adc
push
sbb
push
loopne
loop
mov
movsl
pop
xorb
xor
bound
stos
push
lahf
jp
fsubrs
stc
adc
pop
jnp
adc
add
mov
xchg
mov
out
imul
mov
in
clc
sahf
pop
pushf
xor
xchg
cmp
pushf
push
mov
imul
cmp
xchg
inc
mov
rolb
xor
jbe
adc
fidivrl
and
rclb
addb
adc
xchg
add
jl
into
jnp
addr16
wrmsr
jne
and
fisubrs
jae
pop
ds
sbb
cmp
in
aas
aad
verr
in
in
xchg
and
aas
cmpsl
addr16
jb
dec
and
lcall
fs
pushf
arpl
mov
out
xchg
mov
mov
test
adc
jns
in
sub
shrb
adc
test
jb
xchg
sti
mov
inc
imul
loop
mov
mov
imul
cld
dec
pop
xor
cli
jns
insl
fiaddl
pop
popa
pop
push
pop
outsl
pushf
push
cltd
bound
adc
push
push
fnsave
jb
loopne
lret
add
jnp
stos
xchg
inc
cmp
xor
movsb
push
scas
or
loope
sahf
imull
gs
xchg
push
cmpsl
lahf
sbb
cmc
out
ss
mov
xorl
les
outsb
jg
cmp
lds
js
test
mov
pushf
cmp
inc
insb
push
pop
mov
pop
cli
lods
jbe
in
incl
cli
aas
push
insl
subb
cltd
ret
mov
addb
push
sub
xlat
cmp
add
fisttpll
push
mov
sbb
cltd
mov
nop
jae
fmulp
fidivl
addl
call
std
stos
fisubrs
push
pop
mov
sub
jp
shll
dec
mov
fstl
hlt
add
in
mov
aas
lods
cmp
pop
dec
bound
cmp
dec
cli
xor
into
leave
add
cltd
mov
mov
cmp
clc
aas
loopne
into
loop
inc
inc
insb
cmpsl
aas
xchg
mov
out
xorl
fcmovne
sbb
pop
mov
dec
insl
movsl
xor
adc
ret
add
loop
sbb
leave
add
and
fs
push
sub
pop
push
or
inc
subb
sbb
fnsave
lea
push
inc
imul
sub
mov
and
and
movups
cmp
mov
clc
scas
jle
pop
das
sub
cmpsb
mov
cmp
movsb
inc
aam
add
imul
inc
mov
push
mov
mov
movsl
sbb
adc
das
cs
add
xlat
adc
mov
push
aam
ljmp
mov
push
inc
jl
and
sub
push
addl
fsub
test
test
mov
loope
cmp
jne
loopne
mov
xchg
jge
stos
aaa
je
leave
fwait
nop
jmp
data16
out
insb
dec
fidivrl
sti
pusha
push
and
dec
ss
insb
clc
es
stc
into
outsb
dec
dec
and
aam
mov
lods
and
in
mov
in
loope
push
xor
add
xchg
mov
int3
insb
mov
pop
jne
js
jmp
cmp
cmp
cmp
addr16
add
cmc
addr16
add
and
jle
xchg
sbb
adcl
adc
scas
les
into
andl
or
cmpsb
mov
pop
jle
cmpsl
mov
mov
pop
arpl
mov
aas
aad
mov
sti
pop
fnstcw
imul
sbb
das
pop
and
pop
shrl
push
and
mov
mov
xchg
outsb
xchg
cmp
pop
push
out
imul
mov
loopne
icebp
jb
dec
les
and
sti
fidivrs
dec
cmp
adc
xor
js
pop
cmp
xchg
cli
addr16
bndldx
int
addr16
lcall
js
add
xor
in
pop
push
in
and
in
push
and
into
out
mov
std
loopne
leave
in
movsb
fwait
sahf
enter
jecxz
repnz
mov
xor
lret
mov
stc
in
mov
inc
aaa
add
outsb
std
and
in
je
lock
xor
add
adc
cmp
mov
lods
adc
xor
xchg
aam
aas
arpl
in
dec
mov
adc
pop
or
mov
mov
in
in
pop
ret
mov
out
iret
cmp
mov
push
in
add
fs
scas
or
pop
inc
popl
xchg
or
inc
sti
push
xchg
cmc
sub
dec
sbb
push
sbb
ljmp
scas
mov
adc
xor
push
add
out
and
pop
mov
add
sub
and
lret
sbb
test
mov
fwait
lret
push
cmp
lock
cmp
pop
xchg
adc
pop
xorl
popf
cld
push
and
in
lret
xor
pop
pop
inc
mov
inc
or
ret
outsb
pop
mov
fcoms
orl
out
mov
or
sbb
sbb
enter
sub
mov
fcoml
je
mov
adc
jnp
scas
mov
ja
insb
insb
inc
and
pop
mov
int3
jg
aam
or
loope
popl
inc
mov
jbe
pop
cmp
cmc
scas
inc
lret
inc
inc
add
jle
mov
bound
or
jne
imul
pop
fs
inc
dec
push
popf
sub
insb
xor
fnstcw
cmpsb
mov
test
and
ss
cmp
pop
dec
mov
je
sarb
rol
inc
mov
in
in
xlat
loopne
shrl
cs
mov
jg
push
jmp
faddl
mov
push
insl
add
cmc
ljmp
sbb
add
dec
mov
loope
es
cs
push
out
mov
push
rol
loopne
pop
in
ds
inc
push
dec
pop
cmpsl
nop
sub
xchg
adc
rcrb
addb
in
mov
ja
pop
mov
mov
pushw
push
iret
rcrl
dec
fdivrs
outsl
dec
mov
xchg
aas
and
repnz
xchg
cmp
shrl
and
push
jbe
push
cwtl
int3
pop
inc
mov
push
test
cmpsb
loope
das
cmp
repz
inc
cltd
punpcklbw
mov
repz
xor
jae
cmp
nop
xor
out
fstl
in
xchg
lret
inc
jge
jle
sbb
cmp
adc
sti
jge
or
push
inc
cltd
shrl
bound
mov
das
mov
jbe
mov
sub
cmp
mov
jb
xorl
cld
divb
cmpsb
xchg
repnz
pop
jnp
stc
or
fisubs
dec
ret
mov
inc
mov
testl
loopne
inc
cmp
imul
bound
xchg
push
call
dec
and
mov
sub
cmp
push
dec
sbb
mov
mov
or
dec
pop
aaa
push
lods
inc
je
rorl
push
cmpsl
sbb
pop
mov
pop
inc
pusha
out
outsl
test
ja
das
js
daa
adc
xor
inc
iret
sbb
rolb
pusha
adc
bound
testl
fisttpl
jns
sbb
xchg
fisttps
lea
fimull
call
repz
out
hlt
ret
int
cltd
shlw
test
addr16
mov
out
fsubrl
mov
inc
sbb
push
mov
mov
xorb
push
pusha
enter
xor
mov
mov
xchg
insl
daa
out
mov
xor
cs
addr16
cmpl
outsl
cmp
xchg
cmpsl
jb
xlat
popf
repnz
rolb
fidivl
pop
mov
push
out
aad
out
inc
cmc
or
sbb
popl
push
xor
or
inc
mov
xchg
xchg
jmp
sbb
dec
outsl
popa
subb
int
and
push
add
andl
ficomps
or
mov
arpl
mov
xor
aad
pop
xor
aaa
dec
dec
cmp
ds
adc
cmpsb
sbb
mov
xchg
and
pop
pop
or
cwtl
sub
stc
mov
cmpsl
push
in
xchg
jne
sbb
push
and
inc
xor
loope
sbb
cmpsb
mov
fisttpl
or
add
pop
dec
sub
mov
push
mov
lds
sahf
inc
xor
pushf
or
idivb
sbb
lahf
sub
dec
or
add
mov
mov
jnp
push
dec
dec
mov
out
xor
repz
push
add
int
pusha
pop
or
mov
frstor
or
shl
ret
ret
das
rol
test
loope
mov
and
in
xchg
mov
and
ljmp
jno
inc
jae
fs
sbb
stc
mov
pop
cmp
sbb
nop
cmp
je
xor
sbb
loope
sbb
xchg
jb
test
mov
cli
out
dec
inc
std
push
or
push
rol
mov
mull
xor
mov
icebp
jl
mov
or
adc
pmulhw
xchg
lcall
loop
xor
jnp
mov
shl
mov
in
insb
add
sbb
out
or
pop
fidivrs
xchg
and
mov
cmp
incl
jle
add
ret
mov
push
imul
cmpsl
cmp
fbstp
mov
xchg
pop
pusha
es
je
icebp
sahf
jns
clc
sahf
cmpsl
fldcw
mov
sbb
outsb
gs
xchg
fmuls
test
popa
fadds
adc
or
xchg
xchg
cltd
bound
rolb
fcmovne
fisttpll
loop
scas
xor
add
mov
sti
mov
mov
jb
sbb
lds
dec
xchg
ljmp
cmp
aad
inc
cmp
mov
mov
ds
adc
fidivs
dec
test
mov
das
mov
xchg
aas
pop
cmp
sbb
rcrl
mov
and
les
aaa
push
sbb
sti
dec
pushf
sbb
pop
rcrl
fwait
xchg
mov
ret
call
adc
lret
push
dec
pop
lea
ss
mov
jecxz
call
xchg
mov
fldt
ja
ret
jne
dec
sub
cmp
pop
cmp
imul
xor
setnp
adc
inc
shrb
lds
sbbb
fnsave
sbb
pushf
loop
push
pop
cmp
cmpsl
ret
fldt
roll
inc
icebp
cmp
xchg
in
test
ret
std
mov
shlb
mov
ja
xchg
imul
int
adc
add
hlt
shll
sbb
inc
xor
push
lods
sti
push
rclb
lds
ret
push
jmp
rcrb
fucomip
loope
in
pop
add
dec
add
pop
jne
cmp
adc
not
scas
adc
aaa
out
jno
arpl
out
dec
sbb
cmc
lahf
xchg
mov
call
icebp
repnz
or
pusha
pop
push
test
dec
testl
mov
cld
xchg
jge
push
and
sub
loop
lea
push
daa
in
aaa
loop
push
orl
fnstsw
and
fsts
insl
fnstsw
fbld
pushf
inc
orl
jae
pop
dec
out
sahf
jecxz
aam
out
outsl
dec
pop
push
ds
scas
jne
adc
lds
sti
jmp
shl
scas
or
dec
xor
dec
and
pop
and
roll
aad
scas
jecxz
xchg
add
cmp
das
pop
data16
shr
into
mov
push
and
and
pop
sbbl
xchg
add
inc
push
mov
je
add
or
adc
repz
pop
cli
pop
pushf
int
jmp
jp
add
js
push
mov
cld
outsl
std
std
outsb
push
in
inc
inc
mov
adc
out
lret
loop
adc
pop
push
mov
cmpb
mov
and
es
mov
mov
clc
mov
sar
shll
jnp
lret
insl
je
clc
inc
adc
add
test
scas
decl
sbb
dec
js
es
adcl
jbe
outsl
dec
jnp
add
mov
xchg
shrl
fbstp
xchg
out
push
fidivrs
sbbl
inc
jp
jl
cmp
out
mov
push
test
sbb
cmpb
sbb
arpl
pop
pop
mov
leave
inc
mov
fchs
inc
xchg
ds
pop
ljmp
pop
ljmp
insb
push
sbb
jp
xlat
imul
jnp
sarb
sar
popf
shrb
inc
les
pop
and
pop
repnz
stos
addb
dec
adc
mov
or
aam
repz
pop
adc
or
jns
rcrb
ds
lcall
and
mov
cmp
sub
outsl
roll
mov
fisttpl
loope
pop
out
sub
pushl
add
adcb
dec
std
scas
clc
push
pop
inc
pmaxsw
ljmp
shll
out
push
nop
mov
rorl
fcmove
subb
pop
rdpmc
sbb
xchg
roll
mov
sub
int3
scas
fbstp
out
push
shll
sub
pusha
pushf
outsl
movsl
mov
cmp
mov
loop
les
add
mov
jbe
sbb
jbe
pop
dec
mov
pop
test
fsub
mov
fldl
fwait
mov
xchg
mov
sub
in
mov
js
mov
push
xchg
push
cmp
pop
sbb
fwait
iret
pop
mov
into
out
and
test
jnp
adc
leave
loopne
andl
add
fucomp
les
xlat
aad
lods
fmull
test
adc
lahf
std
dec
push
dec
mov
jo
stos
test
cmp
inc
int
iret
lock
fildl
pop
mov
or
daa
in
ds
and
push
jg
add
out
add
jb
inc
jno
pushf
js
mov
sub
mov
and
lret
add
mov
aam
mov
inc
inc
xchg
lcall
lds
test
xchg
idivl
pop
push
xchg
or
stos
pusha
dec
fs
nop
push
fdivp
pop
daa
outsb
aam
sbb
or
addb
cmp
dec
ret
inc
cmp
les
fcomip
cmp
ja
jecxz
jp
aaa
out
pushf
sub
add
or
mov
lahf
in
ja
out
repz
pop
pop
xlat
dec
mov
pop
inc
xchg
out
jnp
fninit
pop
fxch
lds
mov
lahf
xchg
enter
dec
add
out
jmp
xor
cltd
xor
iret
inc
leave
mov
cli
gs
push
jne
dec
push
and
mov
dec
ret
xchg
inc
xchg
add
adc
cli
cmpsb
repnz
loopne
std
pop
sub
mov
mov
xor
cltd
mov
pop
ja
inc
pop
test
fmuls
xor
add
fildl
jno
lock
jno
bound
scas
dec
outsb
mov
gs
pop
jg
insl
xor
xor
adc
ret
mov
clc
rclb
fildl
adc
mov
insb
je
std
push
add
sbb
cwtl
popf
mov
add
loope
mov
or
cmpl
add
add
mov
rcr
mov
aas
mov
scas
jle
sbb
inc
adc
dec
dec
fwait
lret
jne
pop
mov
xchg
gs
cmp
movsl
or
dec
in
lret
pop
ret
mov
nop
and
and
shll
push
aaa
aaa
dec
inc
cmc
mov
test
sbb
xor
fs
xor
loope
jmp
stc
dec
xchg
mov
adc
dec
and
pop
xchg
push
aad
push
xor
fidivs
enter
and
mov
scas
inc
loopne
inc
pop
aam
cmp
push
cmp
fwait
sub
insl
jne
and
xor
pushf
loope
mov
bound
insb
dec
aas
mov
insb
dec
mov
dec
fwait
dec
dec
pop
mov
add
test
in
jae
or
cmp
pop
dec
mov
jnp
push
mulb
push
daa
jae
iret
xchg
push
push
sub
xor
push
fwait
jle
xchg
push
in
rcrb
jl
xor
sbb
and
inc
stc
xchg
ljmp
mov
jg
jge
mov
test
lods
xorb
lahf
test
cmpsl
je
inc
stos
leave
insl
mov
out
rcpps
xor
xlat
xchg
inc
lock
into
or
das
lods
in
sbb
mov
subl
mov
fdivr
lods
xchg
out
lods
and
sbb
out
gs
andb
stos
scas
xchg
ljmp
out
jmp
lcall
iret
mov
cltd
cli
incb
inc
mov
push
push
sub
iret
mov
pop
xlat
pop
cs
incb
leave
outsl
cs
inc
mov
push
add
mov
inc
xchg
cli
dec
mov
xchg
fucomp
and
les
rcrl
lods
mov
lret
add
out
sbb
xchg
jecxz
push
std
mov
push
and
or
pusha
push
pop
jne
fstpt
and
xor
mov
or
leave
clc
and
fiadds
ljmp
jne
ret
push
enter
out
pusha
ja
jmp
rcrb
cwtl
roll
test
shrl
in
popf
push
pop
mov
test
enter
std
mov
js
inc
shll
hlt
out
pop
aad
in
in
xchg
xchg
pusha
cltd
repz
lods
xor
iret
dec
mov
std
pop
arpl
jp
imul
inc
jo
mov
jo
in
xor
ds
push
add
dec
punpcklbw
and
adc
dec
mov
int3
pushf
sub
mov
or
icebp
and
lods
fcoms
add
xchg
dec
mov
push
je
enter
xor
dec
adc
cli
pop
stc
pop
call
shlb
icebp
movsb
jp
imul
repz
cli
mov
dec
insb
shlb
test
out
push
mov
jmp
fdivl
jo
and
pop
push
fdivs
stc
jae
sbb
mov
dec
and
add
adc
stos
adc
mov
repz
ja
fisubs
mov
mov
pop
jbe
mov
push
sbb
lods
icebp
gs
dec
lret
or
fistl
add
xor
xchg
push
xor
mov
mov
in
cmp
sbb
fistpll
leave
nop
ja
sub
jae
popa
les
outsl
cli
in
loop
xor
cmp
cli
adc
fs
not
jg
mov
out
xchg
add
mul
inc
dec
fildll
inc
scas
bound
sbb
pop
pop
mov
aad
lcall
push
push
in
mov
enter
adc
int3
test
inc
xchg
fistl
mov
and
dec
pop
sbb
ss
push
jmp
jbe
popf
cmp
in
mov
jbe
sbb
orb
lock
in
lods
jmp
cmpsl
bound
inc
jmp
lods
imul
divl
push
cmp
push
push
adc
inc
sahf
jmp
cmp
insb
jle,pt
addr16
or
loop
pop
mov
test
cltd
in
nop
mov
inc
or
pop
cld
xchg
nop
jmp
jno
sbb
inc
xor
xchg
test
lret
hlt
inc
repz
cmp
in
jecxz
sub
fs
xchg
and
jae
mov
and
mov
xchg
loope
inc
fcmovne
nop
jns
das
movsb
les
cmpsl
filds
jg
jmp
cmp
movb
rcrl
jno
push
dec
xor
or
fcompl
in
or
imul
xor
outsb
bound
out
stos
pop
lret
ret
add
fbld
loop
jb
inc
cmp
cs
cld
loopne
stos
or
imul
aad
push
cmpl
push
fsubrs
scas
addr16
stos
ret
xor
mov
jg
je
aaa
mov
arpl
jno
inc
adc
call
mov
mov
dec
mov
push
xadd
inc
adc
cli
jle
adc
mov
mov
add
add
pop
fcompl
push
out
sub
mov
popa
pop
subl
stos
jno
jb
imul
popa
sub
sub
or
and
xchg
inc
sbb
mov
push
rorb
frstpm(287
or
and
xor
sbb
mov
push
dec
notl
icebp
fisubs
mov
out
pop
cmpsl
mov
adc
cmp
rcrl
daa
adc
and
addr16
cmpsb
mov
mov
and
xor
std
mov
stc
lds
xchg
cmp
movsl
inc
jge
inc
jno
hlt
jp
test
inc
jne
mov
je
andl
jl
movsl
cmp
in
jmp
xchg
push
mov
call
rcl
aaa
std
dec
adc
push
jl
ljmp
cmc
dec
jmp
jecxz
daa
and
push
mov
mov
popa
movsl
mov
hlt
push
xorb
or
pslld
dec
aam
dec
daa
daa
inc
nop
dec
stos
mov
adc
mov
jl
xor
pop
add
ja
dec
rcrb
xor
jbe
pop
loopne
loop
push
pop
and
or
pop
add
aam
outsb
fwait
aas
in
mov
push
lret
aaa
lea
aam
shl
lahf
jecxz
repz
test
pushf
sub
or
push
movsl
out
mov
inc
fnsave
lds
sbb
mov
ljmp
mov
cs
das
in
push
out
add
sbb
xor
mov
ficomps
inc
lahf
mov
aas
rclb
fnstenv
jo
nop
pop
pop
bound
mov
popa
mov
es
dec
lret
insl
add
cmc
add
mov
nop
hlt
dec
rclb
mov
lock
repnz
push
mov
inc
sbb
sub
mov
push
pop
mov
imulb
jns
in
arpl
xor
jnp
pop
push
in
aaa
inc
adc
sub
addr16
lods
xor
gs
adc
stc
dec
push
mov
push
lods
push
ret
data16
jle
icebp
mov
les
lcall
ja
add
push
fdivs
pop
add
sbb
jne
pop
push
cmpsl
xchg
xor
decb
fiaddl
jne
xor
adc
cld
pop
adc
or
add
sub
pop
mov
popf
jo
lock
test
xor
push
inc
sub
push
aam
bound
test
aas
push
mov
xchg
push
push
or
lcall
ds
add
testl
mov
xor
mov
out
mov
mov
dec
mov
loopne
fwait
pop
xor
loopne
fwait
xchg
mov
nop
adcl
mov
mov
rorb
frstpm(287
dec
mov
mov
pop
xchg
mov
fimull
in
mov
add
sbb
inc
and
pop
pushl
adc
adc
mov
stc
adc
stc
push
jge
lds
das
pop
pop
shrb
cmp
dec
sbb
ss
jle
ret
push
cmp
test
nop
or
fwait
insb
and
popa
cmp
out
cmpsb
insb
out
icebp
push
cmc
mov
inc
das
fildll
lahf
fs
sbb
aaa
fwait
arpl
ret
inc
inc
cmp
in
mov
and
lret
and
sub
iret
ds
icebp
xor
push
ret
pop
iret
push
cld
xchg
shrl
mov
sarl
jl
pop
or
cmp
fwait
stos
movaps
pop
movsb
and
scas
mov
mov
add
daa
xchg
fsubrs
xor
cwtl
cmpl
movsl
jg
and
push
mov
mov
or
add
jle
pop
out
and
shrb
test
hlt
push
ss
das
pop
xor
mov
ja
fiadds
mov
js
push
arpl
lock
mov
daa
pop
add
mov
sub
aam
add
cltd
cltd
push
add
adc
fs
adc
sbb
adc
pop
addr16
and
jecxz
xchg
and
data16
mov
sub
dec
cld
out
shr
int
inc
scas
cmpsl
and
sbb
xchg
or
jecxz
pop
inc
scas
cmp
leave
lcall
inc
aaa
and
or
cmp
cmpsb
fsubrl
pop
adcb
push
lods
and
lods
fucomip
ret
scas
xchg
orl
push
ds
ror
dec
mov
das
pusha
or
arpl
or
std
jnp
out
push
mov
into
and
push
test
inc
insb
mov
mov
lock
xchg
rclb
jnp
adc
mov
outsl
add
out
sub
insl
add
inc
adc
fdivrl
fimull
xchg
enter
roll
inc
xor
dec
std
rorl
jns
jle
icebp
xchg
movsl
mov
and
lcall
cmp
inc
or
xorl
push
pop
les
cmp
push
sub
inc
or
cmp
outsb
sub
sahf
sub
mov
int
add
add
std
mov
rolb
es
stos
aad
out
mov
inc
out
js
sub
aaa
xchg
in
shr
ja
inc
xchg
inc
push
shll
pop
xor
sub
lock
cmp
arpl
jbe
push
jle
xor
ja
das
mov
mov
add
push
rcrl
jl
pop
add
dec
jp
jnp
mov
xchg
jge
ret
sub
cwtl
mov
repnz
cli
enter
mov
push
shrb
loop
aaa
fcom
xor
pop
push
sub
lahf
lods
imul
inc
push
dec
popf
adc
push
inc
std
cmp
push
mov
dec
clc
insl
pop
xor
hlt
movsb
jmp
cmpb
jne
xor
cmp
das
mov
fcoml
int
cli
mov
xor
dec
lcall
xor
add
adc
pop
cmp
das
fcompl
fbstp
pop
mov
dec
icebp
sub
adc
jecxz
mov
out
xor
mov
add
pop
jae
cmc
dec
push
shrb
jb
pop
pop
pushf
ja
ds
mov
jecxz
mov
shlb
in
mov
ret
mov
cmp
xorl
fwait
inc
jnp
adc
mov
cmpsb
mov
xlat
loop
mov
nop
or
daa
sub
mov
mov
cltd
xchg
jecxz
adc
pop
fwait
gs
mov
adc
pop
sub
lahf
out
dec
lods
dec
xor
and
cmp
adc
jo
das
jae
lock
arpl
rcrl
mov
push
push
and
ficoml
push
and
jns
lret
inc
dec
outsb
icebp
xchg
stos
pop
mov
ss
ds
jle
sbb
sbb
cmp
xor
pop
movb
add
rcrl
cs
movsb
ds
xchg
loop
mov
cmp
ret
ss
bound
pop
pop
sub
sbb
xlat
rdpmc
jb
push
push
mov
mov
inc
repnz
and
cmp
cmp
loope
xor
lea
xchg
stos
movsb
sahf
jecxz
jp
jecxz
mov
jns
jae
pop
pop
xchg
repz
aam
xor
cmp
out
loope
jmp
mov
push
mov
mov
je
gs
lcall
out
and
fbstp
adc
and
lods
mov
data16
fwait
fwait
outsl
push
adc
or
ror
repz
std
sbb
fnstsw
adc
popa
and
es
add
mov
xor
mov
cs
lea
cmp
dec
cmp
cltd
jp
dec
test
cmpsl
out
mov
fs
or
jns
lret
inc
pop
xor
iret
sti
cmp
mov
aas
push
fwait
mov
xchg
shll
sub
rcrb
testl
jl
sti
ret
or
fucomp
and
pop
aad
out
fdivrl
cmp
and
xchg
cmpsl
gs
dec
mov
push
sbb
sbb
lret
mov
stos
popa
and
add
add
aas
aaa
pop
push
lock
mov
mov
stc
mov
jmp
fldcw
mov
loope
add
repnz
mov
repz
insl
cwtl
lret
std
shll
ss
in
sbb
rep
ljmp
dec
sub
mov
add
mov
jo
push
push
add
cli
arpl
jno
or
sbb
xchg
sub
std
pop
inc
mov
rorl
cmpsb
sahf
inc
dec
inc
aaa
rcrb
inc
out
jecxz
test
rcrl
jecxz
stc
cmpsb
imul
pop
cmpsb
lock
mov
mov
mov
mov
aad
lds
ret
push
push
add
xlat
push
mov
out
inc
dec
push
jp
fstpt
inc
shl
mov
cmpl
into
popa
add
in
push
mov
arpl
pop
jnp
push
sbb
jmp
add
or
loop
sub
lahf
loop
mov
push
shl
cmp
cmp
das
xchg
mov
add
inc
les
push
iret
insb
lds
or
push
mov
jb
xor
push
imul
xchg
test
movsl
clc
mov
addb
icebp
inc
std
mov
mov
rorb
addl
cmp
mov
sbb
or
xor
mov
lock
add
xlat
mov
xor
xchg
imull
jmp
pusha
mov
mov
ljmp
xchg
and
and
hlt
adc
pop
ja
in
cmp
adc
loop
xrelease
and
leave
ret
add
aam
ljmp
mov
sahf
test
loopne
mov
clc
popa
or
aaa
lock
orl
pop
shlb
insb
dec
xchg
rorl
inc
add
xchg
fucomp
pop
sub
dec
mov
inc
or
aad
lret
lds
mov
mov
cmpsl
xor
or
push
inc
lea
mov
cli
outsb
imull
aas
fists
cs
imull
sub
mov
sbb
dec
dec
add
xchg
outsb
in
push
mov
test
add
ja
into
shrl
jl
dec
sub
xor
xchg
push
insl
cmp
xor
pop
lret
repnz
pop
mov
test
push
rolb
jg
jp
add
and
cmc
in
loope
enter
jne
inc
iret
mov
scas
js
xchg
fwait
fs
push
imul
insl
in
push
addr16
out
xchg
popf
popf
mov
repnz
sahf
test
xchg
xlat
sub
inc
cld
inc
stos
pusha
int
roll
push
pop
int3
mov
inc
mov
mov
xchg
andb
shlb
pop
inc
stos
stos
sbb
fisubs
pop
fists
mov
mov
xor
push
int3
xor
xor
sub
or
sbb
inc
adc
adc
push
xchg
mov
cli
or
enter
push
xor
lret
xchg
in
jno
mov
ss
hlt
dec
and
inc
in
add
rolb
xchg
cmpsb
ljmp
mov
mov
push
jns
dec
aam
shlb
and
lret
jl
into
testb
cld
push
jmp
movl
pop
test
mov
jp
test
cld
cmp
inc
in
dec
cltd
mov
fst
xchg
subl
je
inc
call
and
int
leave
aad
pop
pop
repz
hlt
jb
mov
pushf
xchg
pop
movsl
adc
out
push
push
aad
and
mov
fstps
iret
lds
std
mov
lcall
addb
mull
mov
dec
or
sbb
std
pusha
int3
mov
loopne
lods
imul
stos
pop
jmp
xor
and
pop
pop
daa
mov
inc
in
jge
xchg
scas
jmp
xor
inc
mov
ja
sbb
sbbl
xor
sbb
pop
jo
adc
xchg
dec
dec
dec
dec
cli
sar
cld
sahf
or
imul
outsb
movsl
test
decl
inc
or
loope
xchg
cmpsb
push
jmp
ja
jle
aas
divl
jnp
jb
jns
mov
sbb
jg
jnp
incb
xchg
mov
mov
je
in
out
adc
imul
xor
lahf
or
inc
stc
cmp
neg
nop
aam
push
sahf
push
ljmp
jae
xor
call
les
aad
mov
xchg
add
pmulhw
jle
xchg
inc
lods
ljmp
stos
add
addl
push
jnp
pop
int3
mov
sbb
shl
lcall
mov
test
mov
cmc
sti
jl
pusha
pop
push
movsb
jle
out
push
std
jno
in
out
insl
mov
clc
inc
push
psrlq
add
mov
xchg
adc
stos
idivb
insb
push
daa
imul
movsl
mov
mov
repz
jns
mov
sahf
push
mov
inc
cld
mov
sbb
pop
mov
push
mov
js
cwtl
mov
test
insb
outsl
cmp
fcoms
notb
push
in
push
mov
subb
adc
push
cwtl
inc
mov
inc
rolb
inc
and
inc
push
inc
outsb
cmp
pop
mov
cmc
cltd
addb
out
mov
xor
sbb
mov
mov
or
inc
sbb
loope
in
int3
adc
hlt
es
pminsw
mov
pop
mov
ja
stos
jge
test
adcl
xchg
fimuls
push
pop
aas
mov
xchg
shrb
mov
adc
ret
test
jne
jmp
mov
loope
popa
or
lret
mov
cmp
fwait
add
popa
sbb
sbb
xchg
mov
add
call
adc
fs
cli
ror
loopne
xchg
mov
std
xor
aaa
mov
stc
in
mov
push
jge
xchg
pop
cmp
jns
test
push
xor
xchg
mov
jp
adc
clc
jo
mov
gs
jbe
adc
adc
outsl
adc
leave
cltd
ret
mov
fbstp
shrl
jo
ja
pop
mov
movsl
inc
or
xchg
ret
jns
xchg
cs
cmc
add
sub
mov
daa
add
jp
mov
pop
in
or
scas
inc
sbb
sar
cmp
addr16
test
pop
xor
adc
mov
mov
mov
call
sbb
leave
add
mov
icebp
and
jge
nop
pop
cmp
push
out
stos
in
inc
ret
fisttpl
xor
adc
and
pop
cmp
or
mov
scas
insl
jecxz
lods
dec
loopne
jl
sub
gs
fsubl
jle
lea
imul
xor
sbbb
cmp
sbb
jo
and
lret
std
bnd
ror
cmp
mov
decl
or
fdivr
movsl
lret
mov
sbb
mov
mov
push
lods
xor
jge
dec
fldcw
std
dec
mov
insb
add
loope
lods
lock
xchg
clc
dec
inc
ret
sub
shrl
ljmp
nop
repz
cs
mov
pop
cmp
add
dec
mov
jg
xor
cmc
add
into
and
test
je
mov
subl
jbe
mov
xor
call
daa
and
push
and
mov
sbb
negb
pusha
ljmp
fmull
mov
int
hlt
adc
mov
and
repz
mov
notb
andb
push
lods
int
sbb
xor
aaa
cli
lods
push
mov
dec
pop
nop
push
add
out
ja
jnp
push
popf
outsl
jbe
outsb
imul
pop
dec
iret
sahf
xorb
jo
mov
mov
js
jno
punpcklbw
push
ss
leave
mov
sub
out
lahf
into
hlt
fs
pop
jb
dec
int
das
or
int3
je
mov
loopne
xor
mov
nop
jno
vpsubsb
lret
inc
or
test
icebp
fwait
jns
adc
loope
mov
cmpsl
sbb
and
lret
popa
jle
fwait
addl
aad
push
out
inc
fmuls
test
or
aad
and
loope
sub
pop
cmc
jbe
ret
repz
jb
inc
or
cmc
and
push
sbb
loope
ror
add
adc
and
ret
fwait
sbb
jne
fadd
add
or
cli
out
mov
mov
out
cwtl
push
pop
stc
ret
pop
iret
push
outsb
xchg
rorl
enter
mov
cs
icebp
sbb
daa
mov
adc
ret
push
add
push
je
push
xor
arpl
int
ss
lcall
out
cmpsb
cli
imul
gs
push
dec
or
jmp
xor
push
jb
in
xor
outsl
xchg
movsl
lock
repz
inc
loop
push
mov
ljmp
mov
push
dec
jle
les
inc
lret
add
adc
mov
adc
dec
push
ljmp
xchg
or
lret
sbb
popl
loopne
dec
cmpsb
push
or
or
cmp
add
ret
movsb
add
xchg
push
mov
push
es
fnstenv
xorb
sub
sbb
test
subb
rorl
cmp
cs
jmp
mov
ret
jb
scas
into
add
stos
sub
cmp
in
sbbb
push
add
mov
out
fsub
stos
enter
push
or
xor
pushf
fcmovnb
cwtl
lahf
pop
lock
fstpl
insb
cmp
lret
mov
sub
xchg
adcl
mov
dec
jbe
aas
xchg
neg
push
cli
stos
sub
cmp
xor
push
cmpsb
int
pop
mov
loope
incb
sbb
arpl
fisttps
pop
sbb
add
sbb
subb
icebp
shrb
xchg
std
push
jno
outsl
sbb
pop
addr16
lods
in
pop
inc
mov
in
stos
inc
aaa
scas
pop
pushf
inc
les
push
dec
test
pop
movsb
mov
and
mov
filds
pushf
xchg
lock
mov
scas
or
test
adc
into
loope
cmp
cmpsb
push
lret
inc
mov
jg
aad
inc
fstpt
mov
nop
aaa
jecxz
std
popf
int3
fbld
and
ds
imul
fldt
add
iret
mov
ficomps
imul
and
andl
inc
jae
mov
cmp
add
adc
sub
jmp
or
xor
add
popa
pop
add
popa
and
mov
je
imul
scas
stos
std
mull
sahf
cmp
pop
lock
jae
jb
lcall
sbb
adc
imul
test
scas
enter
add
mov
adc
lds
lods
xchg
xor
lods
mov
clc
fbstp
sbb
sbb
mov
jae
xchg
dec
mov
push
xor
int
daa
ret
addr16
loope
push
out
les
adc
rcr
xor
sbbb
jne
leave
insb
jb
lods
enter
pop
outsb
push
push
inc
repz
sbb
dec
std
je
xchg
xchg
lds
repz
push
es
loopne
xor
or
add
cmp
dec
lods
adc
add
fcmovb
iret
aad
mov
add
add
dec
in
mov
push
push
xchg
sarb
mov
cwtl
push
scas
pavgb
nop
fs
ficomps
in
lds
sub
sbb
lock
cmp
or
jle
je
push
sahf
lret
enter
das
clc
and
in
outsb
lds
mov
cmp
mov
fstpl
adc
aas
das
dec
neg
cmp
pop
xor
and
mov
jge
into
and
jle
inc
addl
fidivrl
imul
stos
jp
cwtl
jmp
ljmp
mov
mov
movb
or
ret
enter
mov
je
scas
popf
mov
lea
xchg
adc
mov
daa
popa
inc
inc
mov
xor
gs
add
push
pusha
jne
imul
loop
cmp
xlat
gs
loopne
mul
sub
subb
cmpsb
push
add
out
das
cmpsl
loopne
jns
imul
scas
js
mov
inc
rcrb
xlat
jp
addr16
stos
int3
inc
fnstenv
jbe
mov
jb
insb
inc
stc
mov
nop
movsb
mov
adc
shll
out
sbb
push
mov
stc
xor
xor
lds
push
stos
xor
add
push
inc
cs
xchg
inc
dec
and
inc
es
sbb
lea
adc
mov
repnz
pop
mov
fwait
cmp
int
enter
inc
push
cltd
std
out
lods
ret
jbe
in
outsb
or
xchg
popl
jp
pop
into
aas
and
mov
sbbb
lahf
jge
cltd
shll
fidivrl
ss
jb,pn
jno
bnd
sbb
adc
in
das
jle
add
and
xchg
adc
sbb
pop
test
fdivrp
add
pop
pop
pop
lock
pop
in
subb
jns
data16
into
out
imulb
push
lcall
sbb
dec
or
pop
pusha
std
mov
std
pop
jns
cmp
nop
notb
in
xor
cmp
pop
sbb
mov
sti
push
pusha
into
sbb
shlb
fs
and
flds
push
cmp
mov
xlat
in
cmpsb
inc
loopne
dec
hlt
arpl
loope
pushf
cli
and
das
adc
jne
add
sbb
iret
jnp
imul
decb
xor
insl
adc
icebp
push
dec
or
push
push
xchg
lahf
fildll
mov
pop
into
xor
inc
mov
movsb
cmpsl
xchg
adc
insb
movlps
fsubrs
out
popa
faddl
sbb
xchg
aad
mov
inc
lahf
and
imul
lock
cmpsl
fsubs
js
xchg
jno
cs
sbb
cmp
xchg
loope
dec
jo
xor
int3
aad
decb
inc
add
stos
cmp
idivb
jb
mov
aad
mov
sbb
ret
xor
sbbl
add
fucomp
inc
aas
push
xchg
xchg
xchg
jnp
ret
or
ss
push
jns
rclb
arpl
or
dec
fs
rcrl
mov
int
adc
sbb
std
pop
cli
enter
mov
fwait
testl
mov
push
jbe
outsl
iret
sbb
aad
dec
addr16
adcb
inc
dec
icebp
ret
pop
cmc
xchg
push
mov
jg
xchg
dec
inc
push
jnp
pop
push
dec
inc
cmp
popf
fidivs
lods
sbb
sub
cmp
orl
sub
push
jno
jno
arpl
push
aas
or
cld
jl
push
push
pushf
mov
xchg
mov
cmp
or
jno
jmp
scas
loopne
scas
ja
xor
dec
push
xchg
mov
xlat
mov
js
pop
or
cmp
mov
lds
sti
imul
stos
in
push
push
xchg
jno
cs
add
pop
mov
or
arpl
sbb
mov
push
sub
jno
popf
iret
dec
lcall
xor
jg
jge
out
xchg
aaa
test
cmpl
and
outsb
lcall
mov
cwtl
daa
pop
dec
imul
adc
sub
mov
push
lds
pop
jbe
hlt
icebp
add
shlb
adc
rol
imul
mov
xor
lods
roll
in
mov
lds
push
test
jp
ficomps
cmp
imul
or
push
jno
bound
jp
cwtl
lea
cmpsb
out
aas
shll
push
hlt
pop
or
mov
or
out
lods
dec
cmc
sbb
loop
sub
and
inc
sbbl
cmc
outsb
jnp
dec
jne
pop
les
adc
imul
sub
sldt
sub
jbe
add
test
jns
inc
or
jo
icebp
sbb
xor
xor
and
xchg
push
adc
loopne
test
test
push
mov
aaa
lods
ss
adc
adc
cmc
dec
adc
cltd
pop
fwait
enter
fstpt
pop
adc
shll
jnp
sbb
inc
loope
loope
mov
sarl
mov
cmpsl
cmpsl
mov
cmp
std
pop
adc
pop
lahf
dec
hlt
cmp
inc
rcrl
outsl
lahf
shrl
pop
in
push
inc
xchg
addr16
jo
stos
mov
xchg
push
dec
ret
push
adc
test
pop
ficoml
add
aad
adc
fs
fsubr
push
jnp
sub
lahf
rol
push
rolb
popf
cmpsl
mov
sub
rorb
loop
jbe
xor
mov
push
jnp
or
cwtl
mov
jnp
xorb
jbe
mov
roll
pop
orl
je
ljmp
movntq
loope
inc
outsl
mov
aas
pop
xchg
xor
stos
xlat
jo
xchg
jo
les
mov
pop
shl
imul
or
lea
repnz
cmc
subl
sub
lahf
sub
fmul
in
or
mov
push
mov
and
inc
ja
cltd
stos
dec
dec
inc
add
ds
push
les
and
mov
out
cmp
mov
cmp
fucomp
mov
push
mov
popa
mov
pop
mov
rol
out
mov
inc
stc
lods
dec
mov
outsb
or
fucom
sub
scas
jb
pop
imul
gs
stos
popw
in
mov
leave
mov
jns
fwait
jbe
add
jp
xchg
adc
fcomip
mov
sub
cmp
cltd
push
inc
mov
dec
call
dec
cmp
in
push
sahf
inc
pop
mov
test
test
or
insb
mov
popa
aas
fisubrl
adc
cmp
push
push
or
popa
xchg
xor
push
dec
add
insl
leave
push
aaa
inc
out
jbe
popa
or
adc
mov
and
cmp
mov
xchg
imull
pop
push
jbe
mov
bound
insb
int3
pop
push
dec
loop
packssdw
sar
mov
shlb
inc
lods
sub
mov
mov
jb
mov
out
mov
xchg
mov
add
jne
sub
mov
pop
push
xchg
mov
sbb
add
jl
mov
xchg
out
jecxz
outsb
mov
lret
outsb
stos
jb
outsb
push
dec
push
hlt
mov
nop
aaa
mov
lds
adc
xor
push
push
sbb
cmpb
jns
adc
dec
adc
sbb
xchg
daa
or
cmp
sti
pop
mov
je
push
dec
dec
sarb
push
pop
jmp
push
jle
dec
gs
mov
daa
mov
loopne
xchg
sahf
cmp
xchg
jmp
push
add
adc
cmp
pop
das
lods
cmc
mov
xor
cli
daa
mov
lret
mov
or
lcall
mov
jp
mov
sbb
scas
xchg
push
loop
movsb
mov
cmp
sub
jmp
mov
mov
in
jns
sbb
xorl
paddusw
fistl
pop
push
popf
and
adc
pop
arpl
frstor
mov
loop
imul
cmp
or
sbb
cmp
sub
sub
popa
mov
mov
adc
repz
cltd
or
scas
adc
dec
xchg
sbb
adc
push
jg
push
rclb
adc
and
pop
push
xchg
shrb
arpl
sbb
movsb
repnz
outsl
in
inc
inc
or
out
inc
jle
arpl
sub
inc
mov
fst
movsb
pop
mov
dec
dec
mov
out
negl
adcb
cwtl
cltd
inc
loop
or
mov
loopne
push
test
xor
out
add
and
in
add
add
je
push
dec
xor
pop
jo
add
dec
loopne
xor
stos
test
fs
xlat
outsl
pop
adc
adc
add
lahf
xor
pop
push
and
sub
pop
adc
faddl
es
icebp
cltd
movsl
mov
stc
dec
daa
cwtl
scas
pop
bound
pop
cli
movsb
sahf
jo
outsl
into
daa
nop
or
adc
je
add
in
out
cmp
mov
or
sti
cwtl
or
xchg
scas
inc
bound
jecxz
push
push
push
jg
sbb
jle
outsb
data16
addr16
notl
hlt
pop
cltd
jne
test
inc
mov
popf
outsb
enter
jo
adc
lds
inc
scas
mov
sbb
scas
mov
jmp
mov
les
mov
push
or
pop
scas
xor
dec
push
dec
mov
ret
flds
push
adc
loope
and
jecxz
sbb
into
loopne
xchg
mov
lods
cmp
or
xlat
icebp
lods
jns
jg
push
dec
fldcw
fisubs
aaa
adc
shrl
loope
mov
es
ret
out
movsbl
std
push
cwtl
rcl
dec
fisubl
or
out
sarb
push
pusha
and
js
lea
xor
data16
popf
sub
nop
icebp
mov
cmp
mov
inc
push
sbb
xor
scas
arpl
sti
or
push
xor
and
jae
popa
pushf
pop
sub
pop
dec
mov
xabort
pusha
xor
cmc
cmp
add
hlt
mov
inc
mov
push
jmp
pop
adc
subl
mov
pop
inc
jle
cs
lods
push
les
jbe
push
add
scas
roll
mov
je
das
flds
imul
sbb
iret
shl
into
mov
ret
jmp
and
fs
add
jg
movsl
sub
or
insb
dec
ret
jae
int
fs
push
or
lahf
inc
push
mov
addr16
sbb
xor
iret
js
dec
int3
push
cmp
cs
jnp
sarl
mov
mov
insl
lret
xchg
mov
sbb
xor
cmp
mov
jmp
mov
pop
and
xor
jge
cld
mov
das
test
sub
stc
push
out
fdivl
scas
in
pop
repnz
das
lret
scas
cmp
mov
fcmovnbe
cmpsl
not
lods
lret
into
les
xor
xchg
mov
dec
int
ret
add
movsl
mov
mov
stc
rolb
sbb
imul
push
insb
push
jae
push
mov
sar
mov
or
ret
lahf
inc
push
jg
and
and
xor
sub
jns
and
push
ret
and
adc
pop
xor
xor
sbb
jl
sbb
add
lret
bound
mov
pop
adc
jge
or
mov
rorl
fistps
and
outsl
icebp
fistl
or
nop
hlt
jmp
pusha
rcrl
mov
mov
enter
aas
mov
or
in
fisttpll
aam
stos
cmp
xchg
js
imul
xchg
cmp
shlb
cmp
ja
pop
xor
lcall
adc
xchg
out
or
and
sti
adc
dec
add
icebp
in
sub
cmp
les
lods
mov
and
imul
cmp
sub
xchg
add
sbb
xor
inc
or
inc
jo
add
xor
jl
xor
xchg
inc
adc
arpl
inc
push
mov
cmp
in
out
hlt
jae
stos
outsl
out
bound
imul
pop
push
repz
outsl
lcall
jecxz
sti
jmp
cmpsb
callw
in
out
add
jg
cwtl
mov
das
push
mov
iret
inc
mov
cmpsl
stos
lock
pop
push
pop
cmpsb
in
out
ficomps
cmpsb
xor
xchg
daa
mov
mov
mov
pop
and
jg
ss
aad
out
arpl
loope
inc
jmp
ljmp
ss
pushf
cmp
gs
add
repnz
cli
xchg
jl
sub
int
stc
push
call
std
mov
inc
cmc
into
push
inc
inc
push
iret
inc
imul
dec
mov
fcompl
test
cmpsl
sbb
sbb
xor
add
ljmp
jmp
cmp
dec
mov
jle
add
ret
aaa
xor
popa
rorb
dec
inc
lret
shlb
sbb
icebp
mov
or
out
cmp
shrb
push
xor
sub
nop
daa
push
xchg
pop
mov
enter
pushf
cwtl
xor
inc
push
sarl
shlb
push
mov
add
push
cltd
rcll
pop
cli
in
fcomps
push
mov
mov
or
es
lds
pop
inc
into
sub
adc
add
lahf
dec
add
aaa
jne
push
aaa
fcoms
popa
or
in
call
push
lret
stos
adc
fld
cs
mov
adcb
hlt
mov
mov
dec
mov
adc
fistps
cltd
in
loope
mov
test
mov
push
mov
adc
xchg
rcrb
sbb
ja
rcl
outsb
call
enter
push
ja
mov
mov
mov
xor
xlat
cltd
dec
scas
je
fdivrs
add
xor
icebp
xor
adc
lahf
inc
inc
insl
cmp
xchg
mov
les
hlt
in
int
sbb
or
pop
pop
andb
scas
out
mov
test
mov
adc
shr
js
inc
data16
lahf
mov
pop
and
out
and
pop
push
sti
icebp
push
lret
jne
dec
sub
cmp
shll
mov
les
cmp
lds
inc
jecxz
jnp
mov
mov
lcall
dec
jns
adc
clc
lahf
int
xchg
and
dec
sbb
movsl
inc
nop
mov
cmp
das
lret
jbe
dec
nop
jl
lods
and
inc
xor
mov
sub
in
fcmovb
jmp
mov
push
repnz
in
lods
and
push
inc
mov
mov
das
and
jbe
inc
lods
gs
cmp
push
bound
dec
and
and
xchg
or
cmp
mov
jns
mov
in
movsl
xor
push
mov
jne
jo
push
sub
outsb
pop
mov
insl
mov
lds
es
jg
fidivrl
cmpsl
and
popa
repz
inc
or
push
mov
xchg
xchg
sub
mov
push
push
mov
aad
pop
sahf
adc
test
test
push
scas
and
into
negl
enter
std
jmp
pop
imul
push
std
push
jecxz
mov
cmc
out
inc
and
testl
test
adc
cmp
push
in
mov
jbe
mov
mov
or
aaa
rorl
xchg
mov
xchg
pop
mov
sbb
push
cmp
ficomps
ss
sub
xor
push
add
leave
addr16
cmp
lods
xchg
cmpsl
jle
lock
push
pop
js
rorl
ret
out
iret
fists
std
lock
testb
pusha
add
sbb
inc
xor
stos
add
mov
xchg
les
shlb
mov
xchg
jle
ja
pop
or
jle
in
cmp
jg
and
cmp
jge
add
pop
mov
lret
lods
roll
add
inc
frstor
pop
stos
cmp
jg
shr
push
cmp
xlat
imulb
stos
std
adc
add
ja
jb
imul
dec
dec
lret
cmp
mov
loopne
or
push
mov
iret
pop
push
hlt
ret
stos
add
rcr
sbb
enter
xchg
icebp
mov
shlb
sbb
jl
push
sub
cmpsl
dec
or
scas
pusha
sub
ds
lcall
scas
sub
jmp
cli
ljmp
push
pushf
jmp
lret
pop
inc
dec
cs
loope
inc
or
mov
insb
iret
cmc
sub
sbb
lods
ja
loopne
fsubl
adc
clc
cld
addl
sub
sbb
and
push
jecxz
fisubrl
xor
fisubrs
add
mov
dec
out
dec
into
cmpb
pop
mov
aaa
test
pop
and
into
insb
and
int
dec
pusha
or
push
sbb
rcrl
clc
or
mov
jns
repnz
fadds
shll
mov
xor
xor
imul
dec
push
xlat
popa
in
movsb
movsb
jl
outsb
bound
rol
sbb
dec
in
and
mov
mov
cmp
inc
filds
mov
push
xor
std
mov
mov
add
sbb
imul
aad
adc
xor
sub
dec
jns
jnp
xchg
mov
ja
jmp
lea
inc
rcr
or
loopne
outsl
dec
subl
xor
sbb
mov
jno
xchg
sub
lret
xchg
ja
cltd
cmp
sbb
aas
sub
jne
out
mov
pop
sub
push
xchg
adc
test
das
xchg
lods
loope
cmp
pop
aad
popl
pop
aam
add
hlt
pusha
ja
xchg
shll
data16
int3
inc
fimuls
ret
mov
fidivs
push
call
leave
test
fistpl
call
pop
sub
dec
mov
mov
dec
inc
scas
mov
in
adc
aad
loop
cmp
cmp
test
cld
and
cwtl
lods
pop
jp
stc
dec
sbb
fdivrl
cld
ja
sbb
int
add
cs
jne
ret
je
loop,pn
mov
imul
push
rorl
fisttpll
lods
mov
mov
cli
inc
sbb
mov
pop
cli
fsts
shl
bswap
cmp
int3
inc
in
fldenv
xchg
xchg
popf
pushf
inc
xchg
jbe
mov
arpl
arpl
lods
push
aas
push
mov
fistpll
les
adc
fisubs
jmp
mov
rcr
sti
jl
adc
xchg
out
stos
add
dec
imul
sub
xor
movsl
out
in
push
popa
add
inc
push
cmc
mov
cmp
mov
jo
push
sub
jo
movsb
or
stos
mov
mov
mov
and
pop
push
lds
faddl
push
orb
cmpsb
pusha
jno
cmp
dec
ficoms
xor
xchg
mov
js
cmp
je
jnp
push
inc
jmp
rorb
mov
xor
jle
jmp
add
push
das
leave
cmp
xchg
out
add
adc
pushf
sub
jbe
mov
notl
imul
adc
xchg
mull
inc
cmp
iret
sahf
lahf
notl
adc
ret
dec
fstps
insl
pop
xchg
jge
jmp
xor
insb
pushf
fucom
cmp
adcl
xor
sub
repz
mov
or
dec
mov
leave
movsb
int3
pop
dec
add
scas
jecxz
ss
push
jge
lahf
addr16
and
jg
outsb
jmp
xor
push
push
jg
out
push
and
addb
xchg
or
lret
xor
dec
js
sub
lahf
jbe
stos
xchg
stos
fnsave
inc
xor
jle
mov
xchg
lea
scas
mov
cmp
aam
scas
mov
push
loop
cmp
lods
rcrl
jb
mov
or
addr16
jbe
add
cmp
gs
popf
lds
xchg
pop
add
xchg
mov
adc
mov
loope
mov
mov
dec
std
lods
mov
ss
repnz
fists
out
movsb
xchg
stos
popf
ret
into
sub
mov
xchg
push
sbb
xor
jecxz
mov
jecxz
pop
push
cmp
sbb
mov
cmp
push
jno
push
in
or
mov
cli
xlat
and
lods
test
lret
es
mov
pusha
cmpsb
out
nop
xlat
test
lds
loopne
sbb
mov
xchg
mov
push
push
cmp
test
icebp
xor
sbbb
sub
loope
inc
dec
popa
addr16
or
test
pop
inc
cmpsb
xchg
xchg
fsub
das
dec
lds
jns
fidivrs
adc
mov
scas
or
adc
jno
sbb
push
shll
fstps
or
mov
jp
sbb
mov
push
xchg
loope
dec
insl
dec
movsl
mov
jno
data16
push
add
roll
sbb
inc
aad
outsl
pop
cmpsb
pop
mov
outsb
sbb
or
punpckldq
outsl
shll
sub
dec
sbb
adc
jae
fsubrp
test
cli
mov
jns
mov
push
xchg
lds
sub
jo
xchg
lea
jae
fstl
pop
inc
xchg
cltd
sub
jle
lock
lahf
mov
and
sbb
add
mov
mov
mov
mov
jl
and
inc
scas
daa
xchg
dec
pop
mov
cmpl
in
aas
jb
popf
jno
cmp
xor
xor
inc
jg
inc
clc
push
and
xor
movsl
push
outsb
inc
insl
insb
loopne
scas
stc
dec
inc
fistps
or
nop
mov
or
mov
push
out
movsb
inc
inc
mov
cmp
loop
or
gs
flds
dec
pop
ja
or
ret
loop
inc
xchg
push
xlat
clc
aas
add
sub
pop
pop
push
and
mov
dec
js
lods
cmpsb
out
add
popf
adc
jle
jbe
movsb
nop
lock
out
addr16
mov
ret
dec
jmp
inc
mov
rol
pop
lret
psubsw
xor
sub
or
filds
or
mov
inc
or
mov
in
add
daa
test
ret
stc
leave
push
or
push
fcoml
xor
push
xchg
add
popf
sub
stc
jl
fnstenv
aad
and
add
imul
adc
fdivs
adc
addl
jno
xor
xor
movsb
push
or
ret
sbb
pop
adc
nop
outsb
add
bound
fucomip
ja
stos
mov
dec
ret
cmpsl
jmp
inc
pop
popa
mov
mov
mov
add
pop
sar
bound
scas
cld
aam
pop
pop
push
lds
push
popf
xchg
aam
add
jl
cmp
insl
adc
add
adc
in
sbb
insb
in
mov
pop
add
xchg
mov
imul
mov
xor
pop
cmp
mov
insb
add
sti
scas
stos
int
cmp
push
adc
fisubrl
mov
mov
inc
dec
cmpsl
rcll
insl
jp
cmp
adc
mov
xlat
jnp
scas
hlt
xor
and
xchg
xor
in
scas
mov
xchg
cmp
gs
and
outsl
push
jg
pop
and
push
rcr
mov
faddl
repz
stc
mov
stos
outsl
test
adc
or
popa
hlt
pshufw
ficoml
inc
jno
mov
jo
stos
cmc
out
loop
cmp
rclb
mov
addr16
mov
xor
jge
pushf
out
das
cmp
xlat
cmc
mov
in
out
fwait
arpl
sub
es
adc
int3
out
jo
mov
gs
sbb
stos
jno
cs
mull
fiadds
xor
repnz
test
cld
xor
push
and
adc
push
ret
jns
std
fmull
sbb
pop
or
inc
sbb
jl
outsb
cltd
lods
and
cli
and
adc
inc
je
add
js
cmp
mov
mov
jg
jb
jecxz
mov
lret
sbb
movsb
ds
inc
xor
je
pop
lea
dec
lea
mov
sarb
pop
into
dec
mov
popf
out
dec
xor
scas
mov
pop
sub
lock
shlb
cmc
dec
and
lret
lret
cmpsl
sub
mov
xor
xor
lahf
adc
sub
aas
adc
in
cmp
push
popf
cwtl
aaa
loopne
add
cmp
dec
inc
xchg
cs
xor
add
or
ljmp
pop
fsubrs
mov
inc
and
mov
repz
iret
ret
je
aas
cmpsl
in
inc
push
xorb
xor
cmp
aaa
xor
dec
and
divl
aam
insb
and
popf
inc
push
shl
or
fstps
pop
dec
adc
outsb
jecxz
pop
cmp
push
cld
jl
sbb
in
dec
dec
imul
test
mov
or
mov
push
das
andl
jecxz
pusha
loope
pop
loope
lods
push
mov
mov
jbe
lret
outsb
push
inc
iret
push
adc
push
inc
pushf
add
add
jae
mov
sub
sbb
xor
xchg
and
hlt
mov
scas
jbe
scas
ret
das
push
loopne
dec
js
xor
insl
xchg
xchg
jmp
mov
std
scas
sbb
jle
nop
int3
ret
leave
into
sub
sbb
or
das
adc
and
test
popl
mov
insb
bnd
sbb
repnz
mov
adc
cmp
mov
xchg
sub
out
rorl
adc
insl
xchg
pop
or
in
je
mov
adc
jae
adc
fdivrl
cld
xor
mov
mov
mov
jmp
in
xchg
push
sub
inc
mov
andb
add
cmc
ss
loope
and
loope
pop
jo
jbe
cmp
push
lods
mov
cmpsl
jmp
roll
dec
and
xor
mov
dec
cmp
mov
cmp
mov
outsb
inc
add
pop
mov
out
in
lahf
mov
dec
adc
arpl
filds
std
sub
iret
pusha
mov
xchg
dec
xor
mov
mov
inc
mov
rclw
and
sub
out
ss
or
inc
pop
sti
cli
cmpsb
scas
adc
icebp
cld
lahf
mov
imul
clc
das
xor
sahf
lock
mov
mov
mov
dec
jle
mov
dec
jge
cmc
lret
data16
sahf
and
cmp
xchg
mov
xchg
lcall
out
add
xor
lahf
pushf
mov
std
adc
xchg
rorb
or
mov
adc
in
not
leave
lahf
ds
jbe
inc
sar
or
xchg
jae
repnz
mov
dec
or
aam
add
mov
sub
xor
ljmp
inc
out
cmp
lcall
push
xchg
mov
fcomi
mov
sbb
cmp
fdivl
or
pop
pop
jge
push
pop
shll
out
sbb
adc
sbb
fwait
jo
ret
jmp
push
mov
push
stos
js
add
ret
sbb
jb
out
fnstsw
and
dec
inc
mov
mov
lahf
jnp
test
adc
inc
mov
push
ljmp
in
jnp
call
lock
or
push
sub
aas
jb
cs
stos
sbb
dec
dec
rol
adc
cmpsl
out
dec
adc
mov
test
arpl
insl
movsl
adc
enter
xchg
int3
xor
test
outsl
jmp
out
faddl
out
out
pop
pushf
aas
jbe
xor
mov
pop
mov
ds
jg
xchg
jmp
es
mov
in
out
fwait
xchg
enter
imul
sub
in
sub
mov
xchg
lods
rorl
sub
add
and
daa
jnp
adc
dec
cmp
cld
notl
inc
push
mov
sub
pop
xor
fldl
scas
adc
pop
sbb
jl
in
call
adc
in
call
mov
jle
lods
or
ftst
inc
ret
loopne
ds
imul
enter
mov
in
jne
fucomi
in
aaa
fsub
inc
push
notb
mov
test
mov
jg
scas
lcall
mov
outsb
bound
cmp
shll
push
imul
bound
mov
hlt
xchg
ss
push
sarb
inc
popf
daa
clc
inc
adc
out
imul
jge
lods
repnz
das
mov
xchg
xchg
lahf
fwait
mov
aas
aad
add
jg
sahf
jne
aaa
or
aam
jp
push
push
cld
pop
xor
aam
and
xor
and
pop
lahf
testl
ret
js
gs
stc
xchg
call
dec
jne
stos
js
mov
cmp
inc
pop
and
push
sub
repnz
fstpl
nop
out
mov
in
out
xchg
pop
add
enter
push
cmp
cmp
and
mov
jo
dec
push
add
int
rcl
inc
cmc
ljmp
or
sbb
test
imul
notb
xorb
dec
lock
and
sub
divl
jg
push
jae
imulb
bound
sbb
jp
mov
cmp
call
stos
nop
aaa
inc
mov
sub
test
out
sbb
das
pop
or
pop
shl
out
seta
push
scas
ret
icebp
call
addr16
cmp
test
push
cld
icebp
mov
popf
adc
pop
jnp
lock
push
jbe
mov
imul
xchg
std
popf
mov
sbb
add
out
sahf
sarl
mov
add
mov
fdiv
push
mov
in
inc
xor
mov
sbb
jmp
ja
ss
or
pushf
enter
sbb
xchg
repnz
xchg
outsl
sub
jge
lods
mov
mov
xlat
pop
clc
xchg
inc
mov
out
mov
mov
pop
jmp
push
jb
and
push
and
pop
push
adc
out
pop
mov
fmuls
popf
cmp
sbb
sbb
push
int3
pushf
push
pushf
mov
subb
stos
je
add
std
dec
iret
cmp
ljmp
pushf
cmp
inc
test
cld
ss
mov
cmp
gs
push
mov
iret
test
mov
xor
pop
or
lock
push
add
jbe
push
es
cli
add
sbbl
aad
jbe
sbb
and
xor
or
repnz
shll
adc
popf
insl
daa
mov
ljmp
add
mov
mov
testb
mov
cmpsb
xor
pop
in
fsubrs
sub
popa
divl
jge
aad
pop
call
aad
out
stc
fimull
imul
sub
mov
mov
cld
int3
fbstp
rcrl
sub
jge
adc
out
push
jg
fdiv
punpcklwd
add
jl
xor
xor
jp
sub
test
xchg
or
scas
shlb
jge
dec
mov
lret
xchg
cmp
jno
adc
mov
dec
or
add
push
lret
out
add
ret
ficompl
test
sbbl
pop
ja
aas
jp
xchg
cmp
lds
adc
xchg
rcll
or
and
add
push
xor
push
jae
jbe
hlt
adc
inc
sub
mov
cs
pop
fidivs
test
inc
int3
insb
cmpsb
or
add
sub
test
jl
loop
in
iret
stc
pusha
jle
movsb
jae
nop
lahf
shlb
sbb
lods
aad
test
arpl
lea
cmp
mov
cmp
outsb
add
jo
mov
hlt
cwtl
mov
out
test
fcomps
and
cli
js
adc
sbb
loop
test
add
cs
adc
dec
xor
ljmp
scas
jbe
ljmp
sti
jno
and
pop
xchg
out
in
adcb
lcall
xor
mov
mov
add
xchg
rcll
fnstcw
cmp
enter
dec
cmpsl
cltd
cmp
clc
mov
vpcmpeqd
mov
jp
push
and
mov
mov
xchg
cld
sub
mov
pop
or
flds
sub
jecxz
jmp
add
fiadds
mov
jae
incl
in
adc
js
cmc
lock
stos
test
xorl
dec
aaa
cmp
int3
lock
adc
and
or
call
lods
push
cmp
std
andb
std
or
mov
cld
sbb
mov
out
rcrl
testb
out
cmpsl
or
cs
out
ret
popa
add
pop
inc
pop
out
adc
arpl
adc
adc
popa
xchg
jecxz
xor
mov
inc
lods
pop
sub
cld
insl
sub
xlat
and
fistpll
or
test
loop
stc
hlt
fildll
push
aaa
test
xchg
jno
mov
fwait
mov
movsl
pop
es
imul
push
repz
pop
mov
jae
inc
ret
mov
mov
incb
fcomps
sub
std
sbb
mov
mov
mov
imul
pop
jle
orb
and
add
cmp
mov
or
mov
mov
das
shrl
dec
insb
sbb
shlb
lock
loope
int
cmp
sub
add
mov
mov
out
std
push
test
das
ret
in
fidivs
pop
mov
mov
iret
xchg
lret
mov
sub
int
add
mov
aam
ret
mov
idivb
push
ret
lds
outsb
lahf
je
lahf
lret
mov
ja
mov
scas
daa
mov
mov
jo
xor
and
roll
fistpll
xchg
ret
addr16
loop
push
loope
inc
out
or
mov
jae
push
in
or
orl
mov
adcb
push
into
pop
xchg
int
or
and
lods
cmp
mov
hlt
lock
push
add
sbb
and
rcr
adc
loope
and
xor
scas
sahf
sbb
dec
daa
inc
enter
call
jge
sti
stos
cmp
call
nop
ret
insl
pushf
pop
xor
test
cs
inc
shr
xchg
sbb
js
icebp
shlb
add
mov
mov
jae
jo
daa
insb
aaa
outsl
push
and
inc
shrb
cmp
lcall
inc
mov
xor
ficomps
test
inc
gs
in
sti
movsb
push
pop
stc
aad
outsb
mov
lods
inc
sbb
lds
outsl
paddb
inc
pop
push
xor
pusha
inc
iret
or
cmp
push
jg
shll
and
insb
mov
xchg
enter
jno
jl
mov
jle
mov
mov
add
popa
mov
mov
fs
mov
add
je
adc
add
dec
mov
shl
insl
stos
inc
jge
xchg
cmp
or
jbe
mov
fldenv
das
sahf
sub
jle
rcrb
mov
and
mov
push
lret
sbb
movsl
xor
dec
inc
mov
xor
lea
sbb
les
jno
sahf
out
out
jbe
stc
jmp
out
div
inc
xchg
dec
inc
shl
pop
add
xor
xlat
cmpsb
mov
scas
sahf
xor
xlat
jle
ret
lcall
jae
cli
lcall
fsubp
pop
and
mov
mov
out
jne
push
dec
loop
lret
mull
xor
adc
push
adc
inc
iret
call
fldt
or
mov
test
rcrb
out
add
jo
jnp
lock
push
and
aad
adc
repz
pop
inc
pop
in
adc
daa
fchs
mov
or
daa
or
divl
sub
adc
mov
jmp
cld
je
cli
int
into
xchg
ret
loope
adc
lahf
int3
or
imul
fdivl
adc
push
out
in
push
ds
add
inc
cld
pop
test
dec
arpl
std
es
xor
stos
cmp
or
fnsave
inc
adcb
leave
roll
inc
mov
sub
mov
bnd
inc
icebp
rclb
jbe
mov
stos
mov
fbld
pop
mov
xchg
jge
adc
into
aam
and
mov
insl
sub
insb
pushf
inc
cld
push
int3
inc
dec
add
filds
movsl
addr16
repnz
cmp
push
mov
lods
or
aaa
sub
lea
push
lea
jnp
pop
mov
mov
lcall
dec
jne
adc
fdivrs
dec
mov
xchg
pop
jns
jae
mov
leave
lret
daa
loope
rcrb
stos
in
jae
jmp
ss
fmulp
rorl
div
aaa
pop
pop
add
mov
sub
lock
mov
sahf
bound
das
ficoml
jo
mov
cwtl
out
ja
push
xor
fisttpll
dec
inc
lds
mov
mov
sbb
lcall
out
mov
inc
mov
leave
sub
popf
gs
push
icebp
adc
cmp
push
in
jo
jp
sub
fistl
jg
push
subl
sub
out
dec
jl
into
jns
cld
repz
lods
sbb
mov
jnp
jge
add
cmpsl
iret
dec
jnp
xchg
out
and
mov
and
rclb
mov
ss
js
sub
xorl
and
lds
sub
int
adc
shll
pop
cmp
rolb
cltd
cmp
and
enter
push
into
out
loope
hlt
pop
ss
fdivp
mov
mov
insl
insl
jg
enter
mov
add
sub
mov
fsubr
inc
scas
inc
jl
jge
ret
jne
push
arpl
adc
repnz
pop
adc
int3
insb
pop
dec
adc
adc
dec
dec
add
aaa
insb
xor
shll
jmp
pop
fldl
ret
stos
in
aaa
ja
imul
xorb
jl
decl
int
lahf
xor
es
and
fwait
shlb
or
inc
jbe
cld
lret
xchg
or
cmpsb
pop
ss
mov
mov
mov
jg
dec
fisubs
int
push
xchg
jae
ret
scas
mov
jl
pop
inc
push
mov
popf
adc
xor
mov
ljmp
int3
rcll
pop
out
sahf
sahf
pop
sub
push
xor
xchg
imul
fstl
int3
and
negl
or
mov
pushf
jae
mov
or
lea
mov
fildl
enter
cmp
addb
mov
mov
jns
mov
scas
xorb
cmpsb
daa
cmpsl
xchg
ds
sbb
imul
push
jbe
hlt
scas
fisttps
fildl
cltd
stc
xchg
pop
lods
pushf
dec
iret
lock
int3
outsl
sub
cltd
jo
sahf
rclb
mov
lea
gs
xor
push
call
fbstp
dec
xor
mov
add
pop
inc
call
addl
jne
dec
jo
cmovne
adc
jo
jmp
xor
cld
mov
sub
cwtl
aaa
stos
or
movsb
int3
fdivr
mov
mov
adc
jl
add
or
je
xor
loopne
mov
mov
int3
xor
mov
pop
ja
cltd
mov
cli
test
push
shll
pushf
into
and
fstp
xchg
sbb
pop
ljmp
mov
roll
pop
cmp
pushf
mov
shlb
in
cltd
mov
pop
pop
dec
dec
xchg
test
mov
mov
cwtl
sub
loop,pt
dec
bound
push
insl
bsf
aas
pop
add
aas
or
pushf
sbbl
mov
dec
jl
dec
mov
push
cltd
pop
pop
outsb
loope
sub
int
xchg
or
out
std
push
jno
jmp
cmp
adc
push
cli
jne
pop
mov
or
loopne
inc
lods
popa
mov
xor
in
adc
into
sti
movsl
lods
xor
iret
pop
lret
sub
paddb
cmp
in
rcll
daa
mov
adc
mov
jmp
inc
xor
lret
xor
aad
fcom
jecxz
sbb
mov
push
out
jbe
mov
imul
es
lock
leave
xchg
mov
call
cltd
lret
jb
add
lock
sub
loop
lock
lret
ret
mov
pop
adc
mov
imul
inc
stos
lock
sahf
je
aaa
mov
loop
push
insl
mov
mov
mov
iret
push
insb
cld
arpl
xchg
std
add
push
push
and
ja
imul
test
scas
push
popa
arpl
clc
arpl
jbe
call
jae
mov
movsb
pop
dec
lea
mov
ja
push
repz
mov
arpl
xor
jl
stc
addr16
pop
jp
mov
data16
fidivrs
testl
aaa
jg
xchg
push
push
sub
add
jo
mov
jg
and
mov
into
xchg
adc
roll
xlat
xor
fs
icebp
mov
sub
lcall
sbb
mov
push
mov
pop
push
shll
pop
jne
hlt
push
popf
das
push
xchg
in
add
lods
insb
xchg
xor
dec
aas
mov
mov
loope
dec
xlat
dec
mov
mull
rcrl
imul
insl
cmc
sbb
daa
inc
dec
mov
repz
jg
pop
loop
mov
in
dec
inc
es
int
bound
sbb
xchg
nop
in
cld
pop
dec
ud0
add
rcl
xchg
sub
and
leave
in
fimull
adc
mov
addr16
lods
add
sub
xchg
inc
sbb
popf
sarb
xchg
xorb
lcall
test
repnz
ret
sub
push
rclb
movsb
decb
test
sbbb
fidivs
xor
repnz
iret
dec
sti
cmc
xor
in
subl
js
das
mov
mov
iret
rcrb
jl
xchg
aas
popl
cmp
in
aaa
mov
lcall
out
xchg
cmp
push
fsubrl
push
push
jb
mov
daa
pop
sbb
repz
xor
xor
xorl
imul
bound
push
in
xor
or
cwtl
loope
mov
outsl
xchg
pop
cs
enter
cmp
mov
mov
insl
or
rcrl
add
arpl
fnsave
les
jecxz
lcall
shrb
sahf
add
jns
test
xchg
clc
push
call
ret
movsl
jo
cmpsl
mov
jb
ror
into
aam
pop
push
pop
subl
mov
in
jae
adc
daa
mov
mov
rol
xchg
dec
stc
push
xchg
imulb
sub
and
mov
pushf
inc
mov
cli
jae
lret
std
inc
arpl
add
inc
or
fisttpll
mov
ret
xor
mov
jg
outsl
or
sbb
movsb
adc
mov
xchg
ficoms
aas
outsb
mov
pop
sub
testb
pop
out
mov
dec
lods
outsb
mov
cmpsl
cltd
push
es
push
ljmp
dec
mov
ds
push
sbb
xlat
mov
mov
lods
mov
mov
pop
pop
push
lods
sbb
int3
repz
inc
xchg
sahf
or
mov
lea
cmpsb
loopne
xor
mov
sbb
fisubs
lret
mov
aas
cltd
ds
xor
push
jb
dec
or
shll
or
rorb
cli
call
mov
inc
push
adc
jo
outsb
push
mov
decb
enter
pop
inc
jns
lea
push
push
pop
mov
or
loop
fnstsw
ret
pop
out
lret
mov
xlat
ret
adc
xor
xor
movsb
adc
sub
push
pusha
outsb
outsl
push
sub
add
in
add
cmc
in
and
test
movsl
pop
inc
mov
testb
inc
outsb
or
inc
icebp
ret
es
xor
arpl
adc
inc
xchg
jge
lds
das
push
mov
cmpsl
pop
or
sbb
fwait
mov
pop
mov
loope
mov
addl
pop
rorl
jmp
dec
mov
roll
push
fcomi
test
dec
push
xchg
cmc
push
cmp
push
jge
add
cmpsl
pop
fnstcw
fnsave
std
test
mov
mov
icebp
cs
mov
adc
sbb
dec
push
xchg
xor
test
scas
neg
mov
or
sbb
inc
sbb
into
stos
xor
jp
and
cli
fdiv
pushf
popa
xchg
in
icebp
bound
mov
xor
sub
and
jg
in
pop
dec
das
sbb
xor
sbb
xchg
push
dec
out
pop
into
push
add
in
xor
sub
dec
sbb
cmp
ds
add
push
push
xor
or
and
and
xor
xor
imul
in
adc
jl
adc
fistps
sbb
push
add
mov
push
mov
xchg
or
aad
inc
jb
sub
rorb
cmp
cmp
call
add
adc
sbb
nop
pop
pop
mov
testb
mov
arpl
test
stc
jecxz
mov
enter
or
aaa
add
insl
jne
push
mov
in
jno
aam
insb
out
fldcw
jmp
add
xchg
xchg
pop
push
xor
jns
mov
inc
fnstsw
jns
sbb
popf
push
insl
or
testl
mov
or
and
loope
inc
out
mov
fcomp
inc
mov
dec
add
xchg
mov
mov
loopne
mov
mov
aam
ja
cs
sarb
sub
movsb
aas
push
lods
cwtl
cmp
mov
movsl
les
jmp
rorl
icebp
mov
and
imul
sub
push
cwtl
add
mov
xchg
mov
mov
lock
pop
and
mov
call
lret
fcomps
jno
cmp
movb
xor
std
iret
adc
xchg
test
out
hlt
cwtl
mov
rolb
aad
xor
je
push
in
add
xor
cmp
pop
mov
jmp
add
lods
out
or
int3
mov
adc
ss
lret
push
add
pop
insb
jbe
jb
adc
push
loop
or
mov
jb
mov
insl
jo
imul
mov
xor
enter
pop
and
cmc
adc
jecxz
push
cmpsl
jg
out
push
addb
fs
test
mov
xchg
sbb
addr16
push
pop
fwait
ret
cmp
and
push
xor
pop
xlat
rorb
sub
fdivrl
cmp
xchg
insl
into
aas
inc
mov
leave
adc
adc
jb
idivl
push
xchg
lock
pushf
mov
inc
cmp
xchg
mov
xor
mov
mov
push
sub
mov
adc
into
out
test
icebp
push
dec
pop
mov
movsl
pop
add
fs
sarb
arpl
in
cwtl
popa
ss
cmp
dec
cmpl
outsb
test
xchg
adc
mov
mov
stos
cmp
adc
add
jo
fdivrs
push
jg
xlat
movsl
adc
sti
orl
ret
in
push
ds
pop
xchg
xchg
mov
gs
idivl
stc
out
push
mov
cmc
add
pop
loopne
push
in
mov
mov
and
mov
rcl
adc
lret
out
jp
push
cmp
push
arpl
lcall
mov
aad
jmp
loop
rcll
xor
mov
les
mov
sarl
icebp
cmp
ja
mov
jp
cs
inc
and
sub
pop
rcll
add
add
adc
cmp
mov
adcl
and
sahf
adc
adc
push
xor
mov
inc
add
repnz
dec
push
popf
push
add
sub
aas
pop
out
xchg
adc
sub
or
jge
cmpleps
hlt
push
fbld
dec
cs
dec
into
add
out
std
jg
adc
sbb
sbb
std
lock
and
mov
sub
adc
xor
in
ret
push
ret
popf
pop
push
mov
add
pop
mov
jb
adc
xorl
aas
arpl
jl
outsl
and
cld
push
jge
add
dec
iret
pop
je
in
stc
mov
into
xchg
shlb
jne
push
loopne
jl
aam
mov
xor
shll
xchg
push
out
faddl
push
mov
mov
pop
cmp
lock
jge
fs
andl
pop
ss
aad
ja
loopne
push
in
out
iret
pop
sbb
sub
adc
jle
sub
repnz
and
int3
cmp
loop
add
or
push
scas
jmp
cmp
jae
enter
add
xor
pop
mov
xchg
inc
cmc
jno
cmp
cwtl
dec
cmp
push
mov
rclb
cmp
mov
shrl
scas
hlt
dec
in
pop
stos
dec
lods
xchg
dec
loopne
fistps
sub
out
lds
cltd
inc
or
xor
mov
jecxz
fldenv
inc
mov
btrl
dec
adc
xor
pop
jno
imul
jp
mov
aam
mov
jno
cs
fsubrp
jbe
pop
sub
jmp
pop
sub
mov
test
push
fwait
push
push
pop
jb
xor
cld
cmp
push
inc
sub
out
mov
mov
int3
xor
ficomps
pop
loop
arpl
push
push
scas
adc
sahf
flds
setl
and
rorl
shrl
push
or
hlt
sub
pusha
inc
xchg
cli
out
ja
dec
cmc
mov
in
mov
jmp
bound
mov
push
xchg
sbbl
js
add
mov
std
push
jecxz
mov
in
pop
lods
pushf
aad
imul
mov
bts
mov
xchg
inc
pop
cmpsl
push
outsb
ret
inc
jns
aas
imul
or
pop
mov
stos
xlat
inc
stos
jbe
ds
sub
rorw
ja
pushf
loop
push
xchg
aaa
adc
add
fists
xchg
sahf
sub
dec
sub
sbb
pop
xor
stc
sub
das
add
scas
int3
mov
out
adc
pop
orb
xor
push
pop
lods
xor
mov
int
push
lahf
xlat
mov
cmpsb
nop
aaa
shlb
loop
jae
call
pop
stos
cld
pushf
mov
adc
sti
leave
mov
jecxz
cmp
inc
jno
fstpl
dec
enter
mov
nop
xchg
aaa
cwtl
jno
mov
in
adc
lods
cmp
jb
adc
ss
popf
fwait
and
test
pop
ds
fstps
and
pop
aas
sbb
cli
and
enter
lock
out
jnp
sub
xchg
in
or
cmc
shlb
jmp
int3
insb
lcall
sub
gs
cmc
jnp
cmp
push
outsl
sbb
push
mov
jl
das
adc
test
stc
push
push
lahf
sbb
es
mov
lcall
mov
and
in
popf
loope
div
rorb
inc
repnz
loop
cmp
mov
sti
repnz
dec
adc
sub
in
xchg
std
jnp
mov
and
adc
adc
jg
outsl
mov
jle
sub
push
pushf
and
loop
roll
push
in
das
mov
decl
dec
push
fdivrl
jp
mov
cmc
out
add
pop
addr16
adc
jp
int
enter
out
and
mov
cmc
ljmp
push
incb
out
and
push
orb
pop
sbb
dec
push
pop
fdivs
paddsb
iret
xor
jmp
mov
leave
xor
xchg
mov
lock
fcmovnu
jo
push
bound
scas
jnp
lea
inc
push
sub
jecxz
insl
cmp
ss
mov
clc
cmp
ja
adc
mov
gs
loope
insb
faddl
jne
inc
mov
loop
xor
es
dec
fisubrs
adc
pop
repnz
mov
and
and
push
mov
sub
outsl
loopne
add
fdiv
sbb
pop
and
out
xchg
mov
add
rcrb
pop
xorb
jl
lods
and
adc
fdivs
pop
ss
mov
jg
int3
xchg
hlt
and
mov
out
dec
inc
pop
rcll
movsb
sbb
pop
inc
shl
test
xchg
insl
test
sub
sbb
push
jg
inc
addr16
push
lret
xchg
adc
adc
fmuls
stc
pop
lods
lods
cmp
mov
lea
mov
nop
jno
lret
pop
lcall
out
loope
xor
enter
stos
aam
dec
mov
lods
add
sub
pop
inc
push
outsb
jmp
adcl
lcall
stos
cmp
fdivrs
fildl
js
push
icebp
das
lods
push
add
xor
jbe
push
push
xor
or
popa
jb
dec
in
cmp
ss
movsb
bound
push
push
push
jg
cmc
loopne
adc
sbb
add
lods
and
test
jl
mov
inc
inc
mov
outsb
data16
xor
mov
xchg
mov
mov
aaa
lock
dec
cwtl
xor
add
lods
scas
sub
pop
sub
aam
cmp
imul
aaa
scas
add
addl
dec
jae
jp
cmp
shll
xchg
orl
cmp
mov
and
aas
outsl
cmpsl
imul
mov
loop
sub
pop
leave
lret
es
lret
iret
sbb
and
testb
cwtl
testb
mov
jg
mov
mov
jecxz
out
xchg
imul
adc
push
in
subl
mov
repnz
pop
femms
es
bnd
movsb
mov
push
cwtl
and
fcoms
mov
iret
icebp
pop
out
ret
inc
sub
inc
sub
sbb
mov
insb
push
mov
mov
pop
xchg
sub
addl
dec
pop
in
dec
rorl
dec
repnz
cli
bound
dec
mov
jnp
mov
xchg
add
in
adc
sbb
loopne
mov
mov
adc
nop
dec
hlt
movsl
inc
adc
dec
sbb
int
jp
xor
cli
sub
and
dec
mov
or
cwtl
dec
dec
mov
mov
aad
ret
into
icebp
push
mov
sub
movsl
int3
call
ds
adc
cmpsl
xchg
sbb
outsl
or
bound
loope
mov
shrb
add
stos
arpl
push
subb
scas
daa
sub
insl
ljmp
ficoml
outsb
ss
loop
ret
mov
jae
dec
bnd
sub
sub
adc
push
and
in
cmp
dec
sti
lahf
push
or
out
lret
mov
outsb
mov
call
pop
std
mov
sbbw
cs
add
rol
push
shrl
stos
xor
jnp
jle
mov
and
jecxz
push
push
shrb
pop
iret
hlt
ja
roll
out
push
mov
cld
mov
roll
jmp
mov
out
call
insl
cmp
mov
mov
es
xor
add
stos
cltd
adc
jl
ljmp
dec
adc
inc
mov
movsb
popf
sbb
jmp
outsl
adc
inc
std
add
ss
and
sbb
data16
inc
push
test
inc
arpl
add
leave
mov
stos
insl
xlat
sub
jo
sbb
test
xor
nop
les
insl
stos
out
mov
xchg
movsl
sub
jns
add
mov
xor
jmp
dec
xor
subl
rclb
int3
leave
mov
clc
lea
mov
pop
in
adc
arpl
dec
mov
mov
push
sbb
mov
stc
xlat
in
lods
fidivs
out
in
iret
dec
test
xchg
insl
test
mov
insb
inc
and
data16
dec
mov
subb
mov
and
sub
movsb
test
push
or
fildll
push
cmpl
sbb
push
or
mov
mov
jno
lods
outsl
cwtl
push
mov
icebp
outsb
loope
or
mov
jb
imul
js
insl
cld
add
dec
rorl
fcomp
fcoml
in
jmp
cs
push
cmc
out
mov
sbb
lock
sub
xchg
popa
movsb
pop
std
jb
or
and
in
inc
push
imul
flds
dec
pop
add
lods
sbb
xlat
push
sbb
bound
out
xlat
insl
sbb
popf
pop
movsb
xchg
dec
pop
fsubrs
cmp
jg
insl
xchg
sbb
notb
fucomp
xchg
push
das
pop
xor
orb
int
sub
rorl
iret
jns
xorb
mov
xchg
je
aas
loope
inc
pusha
sbb
jno
outsl
pop
lret
adc
sbbb
push
inc
loop
lock
stc
ljmp
mov
sbb
test
gs
jb
hlt
mov
mov
inc
pop
xchg
adc
dec
je
jne
lock
xchg
out
in
adc
pop
call
push
pop
test
dec
rcrl
inc
fiadds
xchg
movsb
ror
cwtl
or
sbb
push
insb
sahf
push
adc
fsubrl
mov
cmp
in
sub
not
fisubrs
adc
aaa
mov
or
cmpsl
jb
fs
js
jb
subl
std
int3
pop
dec
pop
arpl
fs
in
sahf
adc
xchg
in
jl
dec
clc
jmp
aas
fwait
nop
stos
shrl
cmp
jmp
or
inc
loope
cltd
sub
inc
sbb
lcall
adc
pop
adc
paddusw
cmpsl
fnsave
sbb
xor
cmc
xor
and
out
inc
sarl
or
fiaddl
pop
xor
les
lods
outsl
mov
xor
dec
out
xchg
aaa
mov
inc
pop
inc
in
cmc
jo
adc
mov
pop
mov
xchg
sbb
xchg
lret
pop
push
fildl
insb
jae
loopne
push
mov
mov
pop
bound
push
jecxz
cs
cmp
inc
clc
fdivrp
xor
mov
ss
lea
lcall
movsl
iret
mov
bound
cmp
sbb
mov
rorb
xor
das
xchg
xchg
insb
sti
jno
push
mov
in
adc
inc
mov
sub
adc
xor
loop
mov
sbb
sbb
adc
ret
pusha
sub
jecxz
xchg
je
sbb
cmpl
jno
out
daa
adc
and
and
mov
mov
popf
loopne
or
out
int
push
pop
movl
cli
xchg
jmp
add
insb
daa
mov
fs
jmp
cmp
stos
lods
frstor
xchg
addb
lret
inc
fisttps
mov
lcall
mov
in
icebp
xchg
cmp
mov
xor
pop
mov
xchg
ljmp
and
pop
jge
mov
inc
nop
daa
int
push
xor
mov
clc
les
fadd
cwtl
movsl
dec
lret
cmp
pushf
inc
cmc
pushf
cmp
jmp
das
lock
dec
lea
sub
add
sti
pop
xchg
iret
mov
jb
popa
mov
inc
cmp
xor
dec
aas
jp
imul
aad
mov
and
jae
cmp
in
xchg
ja
in
add
jns
pop
or
nop
lahf
vunpckhps
testb
shll
movzbl
mov
push
in
xchg
adc
lds
shlb
xor
gs
out
push
idivl
push
push
imul
and
lret
dec
testb
mull
in
add
mov
cmp
repnz
inc
movsl
jge
dec
mov
dec
and
sti
scas
mov
outsl
int
sbb
mov
jbe
out
scas
xchg
push
arpl
cmpl
sbb
pop
jo
mov
push
sahf
mov
jp
hlt
je
ds
fidivs
and
std
stos
cmp
icebp
inc
addb
daa
or
dec
shll
push
cmp
jp
stos
cmp
loope
mov
inc
test
mov
lret
adc
dec
je
and
or
clc
xchg
jbe
insl
jge
inc
pop
and
int
loopne
aad
test
jecxz
sbb
inc
push
popa
dec
jg
inc
xchg
out
repnz
and
pop
cld
sub
cmpsl
push
mov
inc
ret
loopne
test
pop
sub
mov
aas
in
ds
or
scas
fdivl
cmpb
loope
ret
ljmp
fcmovnu
adc
sti
inc
ds
inc
xor
mov
loop
loope
push
pop
xchg
adc
aam
inc
push
in
test
cmp
outsb
push
push
jp
insl
popa
jne
mov
sub
push
bound
push
sbb
lods
scas
decb
loop
mov
mov
mov
adc
and
int
xor
inc
shll
sbb
fsubrs
test
aad
dec
flds
pop
jae
pusha
and
or
push
aas
xchg
dec
aad
xor
roll
pop
lret
test
cmc
push
bound
jge
std
imul
lahf
mov
fdivl
xchg
mov
movsb
inc
push
push
mov
and
mov
repz
int
push
jmp
js
lea
mov
mov
int3
clc
jle
hlt
shr
aad
pop
outsb
shrl
and
sbb
movsl
test
mov
rcrb
sbb
mov
popa
ret
mov
ret
jmp
jb
sub
lahf
subl
in
xor
pop
jnp
or
sub
call
lods
jbe
loop
cltd
and
fidivrs
push
adc
sub
mov
movsb
les
mov
pusha
mov
das
adc
lcall
subb
cmc
inc
das
mov
mov
adc
lret
test
mov
clc
mov
cmp
int
dec
jp
das
adc
inc
adcb
ret
and
in
push
aad
das
mov
add
push
adc
fwait
in
int
add
inc
nop
aas
test
and
inc
xchg
mov
add
aad
hlt
push
test
in
sbb
rcr
shl
or
mov
pop
xchg
jb
push
pop
xchg
addb
cmpsl
fnsave
xlat
xor
mov
pop
loopne
mov
push
xor
jne
mov
cmp
std
dec
xor
mov
add
loope
hlt
mov
adc
and
dec
call
adc
pop
decb
lods
outsl
ja
mov
cli
jne
pop
push
push
lahf
addb
mov
shlb
scas
repnz
bound
je
hlt
leave
jnp
sbb
fiadds
cmpsb
fs
ja
loopne
push
xor
ss
mov
sub
fdivp
and
lret
mov
sahf
xlat
inc
lods
dec
push
mov
cld
dec
pop
sbb
mov
sbb
pop
and
adc
dec
mov
call
in
add
sub
stos
or
fsubs
mov
push
adc
sub
xor
jo
xchg
xchg
imul
xlat
dec
xchg
inc
push
add
adc
inc
add
stc
cmp
pop
mov
movsl
test
push
jo
icebp
fbstp
mov
and
psrlq
push
sub
test
mov
and
cmpsb
xchg
adc
lea
pop
mov
push
lods
in
ret
imulb
setbe
pop
les
mov
flds
mov
shrl
test
mov
or
ljmp
movsl
iret
pop
mov
fcoms
fisubs
repz
rclb
pop
push
xchg
xchg
dec
fdivl
push
xlat
aas
cwtl
xchg
mov
xchg
jno
fists
or
pop
jns
roll
jge
in
jecxz
xchg
mov
mov
xor
and
lds
fimull
jnp
sbb
push
cmp
aas
jle
ret
pushl
lret
push
ljmp
popf
and
les
lock
in
jle
scas
xor
out
int3
push
xor
xchg
test
jns
icebp
mov
xor
jecxz
out
jo
mov
xor
test
fs
mov
jg
ja
pcmpeqb
out
pcmpeqb
clc
add
xor
insl
push
sub
mov
mov
fs
push
inc
dec
or
push
in
xchg
je
sahf
aad
push
cmp
frstor
call
sbb
dec
sbb
push
ds
shrb
sub
lret
jo
lds
daa
in
into
pop
push
ljmp
xchg
push
and
inc
jne
inc
push
fnstenv
ss
push
adc
sbb
filds
addl
out
adc
xchg
jp
arpl
lods
adc
js
fisubl
inc
jmp
mov
adc
fldl
popa
pop
mov
insb
lret
popa
imul
push
push
lret
cmpb
mov
loop
pop
movsb
dec
sub
repz
pop
aad
call
pop
int
xor
shrb
push
add
ret
push
or
icebp
dec
int3
xchg
mov
sar
pop
sti
mov
out
fwait
cmp
adc
jge
addr16
pop
mov
mov
mov
gs
mov
mov
inc
xor
xchg
movsb
or
jmp
lods
clc
lods
or
adc
inc
add
push
imul
aad
jb
lods
addr16
sub
cmp
mov
aas
xor
and
pop
push
addb
sub
mov
inc
xor
mov
xchg
mov
pop
sub
nop
mov
xchg
push
jae
cmp
sub
stos
stc
inc
sub
test
mov
jbe
or
pop
jnp
pop
test
sub
addb
test
xchg
cwtl
loope
push
rcrl
addr16
mov
push
out
push
test
ja
popa
fstpt
icebp
sbb
in
negl
lds
and
clc
test
nop
and
loope
icebp
pop
mov
je
sbb
jge
clc
mov
mov
sub
loopne
and
sub
jle
push
pop
sarb
loop
push
jns
lds
mov
push
lock
cld
jbe
push
jl
lock
cmpsl
fucom
imul
cmpsb
jo
pop
adc
inc
rcr
inc
jg
lds
mov
cmp
push
cli
mov
mov
gs
push
vmwrite
inc
lahf
bound
cmpsb
aam
jnp
ss
call
jnp
cmp
mov
andb
and
xor
inc
sub
mov
mov
jle
sahf
idivl
sbb
insb
scas
ds
das
and
fldenv
scas
push
cmp
out
loopne
push
sub
mov
leave
movsb
into
stos
insl
pop
insl
xor
adc
push
and
fs
insl
in
inc
adc
outsl
jns
pop
add
inc
lods
and
jmp
xor
lea
cmp
sbb
test
sbb
jle
xorl
aam
les
add
and
or
insl
fwait
lret
test
or
inc
shl
mov
leave
lea
leave
mov
frstor
inc
mov
add
scas
mov
add
nop
xor
mov
es
mov
movsb
out
pop
lret
mov
pop
stos
in
xor
pop
cwtl
sbb
mov
cmp
pop
fnstenv
inc
push
arpl
pop
negb
dec
sti
js
dec
inc
fstl
jle
cmp
xor
ret
push
stos
cli
sub
mov
std
cmp
push
add
mov
cld
ljmp
test
lcall
mov
sub
inc
xor
lret
rclb
push
scas
xchg
andl
sbb
dec
jns
add
shrb
fistpll
inc
rcrl
in
inc
dec
lea
repnz
jmp
cmp
inc
jmp
fdivl
pop
adc
das
jae
faddp
jg
xchg
shrb
jns
adcl
xchg
push
xor
gs
sarb
mov
cmpsb
adcb
sbb
into
xor
jbe
xchg
mov
pushf
test
in
push
adc
mov
lds
sub
sbb
pop
add
mov
push
and
jg
pusha
mov
and
jmp
imul
push
arpl
and
enter
xchg
dec
xor
cltd
mov
pop
lods
into
cmp
xor
ss
mov
cwtl
mov
add
mov
inc
push
orl
mov
fcompl
lret
aas
xchg
cmp
push
jmp
add
das
repz
mov
aam
pop
adc
mov
test
inc
mov
je
mov
push
stos
outsl
incl
mov
push
aam
mov
dec
sti
push
xchg
loopne
push
jno
repz
or
inc
inc
bound
lds
enter
push
lods
fdivl
cwtl
roll
mov
insl
pop
add
clc
jnp
add
adc
jl
mov
and
insb
stos
fisubl
add
movsl
daa
ljmp
scas
add
enter
cltd
cmp
adc
in
jmp
mov
aad
dec
mov
in
dec
cmp
jecxz
orl
mov
mov
scas
inc
and
addr16
jbe
lahf
push
inc
pop
xchg
movsl
mov
hlt
rolb
loopne
rclb
mov
and
sub
stos
cmp
iret
xchg
int3
sarl
loop
adc
push
dec
push
and
stos
add
stos
movsb
mov
movsl
adc
mov
mov
movsl
repnz
dec
lahf
std
push
mov
pop
mov
mov
mov
stos
mov
mov
push
rol
or
repz
sub
jns
push
mov
pop
mov
sahf
add
jge
mov
inc
and
push
jecxz
pushf
adc
mov
imul
ja
lret
inc
xchg
cmc
cmp
jle
or
cmovl
loop
cmp
pop
shl
push
lret
jecxz
pop
repz
bound
and
xor
dec
pop
ja
mov
mov
fsts
adc
insl
repnz
pop
scas
loope
dec
insb
mov
inc
mov
outsl
les
lods
stos
jg
cs
imul
add
sub
pushf
loopne
pusha
mov
or
jge
inc
scas
dec
lock
aad
inc
rorb
jne
call
push
or
add
into
jecxz
out
push
xorb
shl
cmp
mov
xor
fiaddl
mov
arpl
fnstcw
fucom
mov
addr16
jg
push
cmp
or
sahf
ljmp
push
push
and
jbe
ret
pushf
add
inc
daa
imull
xor
sbb
inc
imul
mov
fwait
rcll
aam
sub
outsb
jnp
and
cmp
sbb
out
and
imul
jns
repz
ret
out
inc
sub
int
pusha
lock
sti
jae
xchg
shrb
mov
cmc
enter
call
fwait
les
mov
or
fldt
lcall
icebp
cs
jne
mov
popa
push
cmp
jae
test
dec
mov
pop
into
add
add
rclb
push
sub
inc
xchg
or
push
xor
xchg
insl
stos
pop
subl
add
lods
jne
mov
leave
in
mov
add
shrb
gs
pop
hlt
pop
xor
push
jb
xlat
mov
mov
add
sbb
mov
scas
out
popf
adc
lea
xor
push
and
outsl
sbb
adc
dec
ds
out
movsl
stos
cld
rorl
icebp
clc
push
ficomps
adc
shrb
rclb
jp
lods
dec
dec
fbld
cs
faddp
and
insl
inc
sub
sub
imul
mov
dec
je
push
das
aas
adc
push
mov
das
push
mov
out
xchg
add
pushf
je
scas
jbe
mov
addr16
lahf
test
scas
insl
es
notl
add
add
ja
aas
outsb
push
mov
push
rcrl
jecxz
xchg
mov
xchg
push
pop
pop
int
fildll
jmp
pop
lret
sub
std
ds
xchg
pop
adc
mov
jecxz
testl
mov
inc
add
xor
push
adc
inc
les
lret
mov
mov
je
idivb
sbb
push
mov
mov
xor
incb
jecxz
pop
push
or
fwait
shlb
dec
xor
xor
xchg
clc
ss
mov
mov
subl
or
gs
sbb
sbb
pop
sbb
push
js
jb
add
adc
es
fdivrs
lds
lret
adc
lret
and
sahf
stc
adcb
sbb
jb
ds
imulb
and
add
push
sub
jbe
mov
dec
cmp
pop
fwait
repz
repnz
xchg
daa
cmp
int
inc
cli
jnp
jl
nop
jmp
stos
data16
add
arpl
push
xlat
aaa
sbb
movsb
inc
pop
cmp
or
mov
rorl
xor
sub
xor
outsl
mov
arpl
fwait
pop
or
or
inc
and
bnd
inc
inc
mov
lea
or
movsb
in
stos
and
fisttpll
into
mov
inc
and
aas
jle
outsb
dec
jle
and
stc
lds
cmp
negl
sub
sarl
pop
sbb
xchg
push
loop
sbb
aas
and
arpl
sbb
and
ret
aad
das
dec
xchg
pop
daa
xchg
leave
sbb
cld
mov
dec
movsb
or
fs
je
and
rorb
imulb
je
pop
adc
mov
or
andb
mov
xor
cmp
and
pop
sahf
nop
and
push
and
or
testl
shr
add
adc
lds
and
jp
xor
repnz
mov
cwtl
cmpsb
in
sub
mov
ss
sbb
cwtl
mov
popf
jo
pusha
xor
inc
fcoml
inc
jge
and
out
and
rorb
mov
out
xor
pop
movsl
mov
sub
sub
mov
jne
sub
loope
push
mov
fs
jo
push
popf
push
loopne
imul
dec
jnp
test
push
sub
aam
mov
dec
imul
mov
mov
adc
std
ffreep
sbb
cmpsl
cmc
insb
mov
movsb
sub
inc
and
shll
data16
and
jno
inc
out
imul
enter
sub
in
jl
or
ds
push
mov
test
das
std
or
rorb
mov
mull
mov
mov
nop
ja
pop
inc
testl
push
cli
je
pop
lcall
mov
repnz
andb
sbb
push
loope
lcall
mov
xchg
sbb
sub
push
xchg
sub
fisttpll
out
push
xchg
bound
aas
dec
daa
jle
sbb
pop
push
fs
iret
sbb
xor
cmpsl
pop
xorb
or
and
mov
aaa
sarb
dec
lds
jge
xchg
adc
push
and
cwtl
pushl
rorl
inc
mov
dec
shlb
shrb
pop
lock
xor
test
gs
clc
dec
lock
dec
arpl
ja
roll
popa
inc
adc
pop
outsl
daa
sbb
mov
cwtl
fwait
lock
iret
clc
pop
jge
movsl
iret
lahf
inc
ret
fwait
ljmp
mov
aas
xorb
arpl
sbb
jb
insb
push
inc
cmc
lahf
dec
ljmp
in
inc
and
stos
sarb
je
mov
sub
sub
mov
inc
jns
add
lock
add
mov
fisubrl
inc
mov
pop
jl
fmull
jl
repnz
add
mov
popf
fcompl
cmp
cmp
or
in
lea
in
inc
xor
iret
adc
insl
dec
add
lcall
sub
add
ret
xchg
mov
das
mov
pop
adc
push
pop
push
outsl
leave
sub
dec
xor
mov
js
inc
push
ljmp
sbb
mov
sub
out
ss
inc
sub
push
mov
mov
fs
imul
push
ret
push
mov
xchg
daa
pop
movsb
out
xchg
push
jnp
adc
outsl
shrl
dec
lret
je
or
dec
inc
mov
mov
sub
repnz
rclb
hlt
or
mov
push
or
pop
insb
mov
test
cmpsl
push
push
enter
into
adc
adc
and
inc
push
jae
flds
lret
jmp
add
int
out
push
outsl
das
imul
inc
jl
push
mov
jbe
lahf
imull
add
pop
ljmp
loopne
sti
test
push
stos
mov
mov
daa
adc
add
mov
xorl
mov
mov
push
xor
cs
jae
les
test
jo
outsl
shrb
sbb
mov
jg
xor
call
sub
sub
pop
cmpsb
lock
and
pop
in
dec
pop
movsl
mov
push
int3
shl
pop
cmp
stc
xlat
stos
inc
lods
scas
add
push
sub
lock
stc
and
jnp
dec
out
xchg
mov
lods
adc
jno
jb
sar
aas
dec
repz
sahf
dec
js
jns
rorb
cli
inc
adc
lods
add
cmp
inc
or
hlt
cld
xor
xor
sbb
aam
push
push
pop
sbb
inc
in
or
dec
dec
adc
inc
xor
hlt
in
fldenv
pop
xor
imul
add
cmovbe
and
cmp
idivl
clc
je
popa
repnz
sub
out
out
fcmovnb
lds
clc
jge
aas
mov
adc
punpckldq
scas
loopne
add
out
int
stos
jge
hlt
insl
scas
lahf
inc
and
sub
in
dec
clc
adc
fadd
bnd
jp
dec
sbb
dec
cld
cmp
in
xchg
sub
adc
je
push
push
lcall
lret
jl
xchg
pushf
and
jmp
sub
dec
xchg
insb
jmp
in
jmp
fcompl
xor
lods
fistps
sub
and
mov
dec
ret
outsl
aas
mov
hlt
jno
cmpsl
xchg
lods
insl
scas
and
xor
das
int
cld
addr16
insl
test
mov
lock
or
outsl
xchg
sahf
js
xchg
leave
aas
in
adc
scas
cwtl
adc
aas
orl
scas
or
adc
mov
cmovle
fwait
cwtl
aam
shr
fcmovbe
push
or
pop
loope
xor
mov
sub
int
nop
insb
hlt
add
push
dec
fcoms
out
jp
cmp
into
adc
sub
jmp
ret
iret
clc
xchg
jle
aad
jg
popf
inc
test
and
insl
or
lret
inc
scas
test
push
jno
push
and
add
cld
in
stos
sbb
mov
dec
addr16
xchg
mov
stos
orb
and
lods
push
pop
adc
stos
stos
repz
mov
shrl
aas
inc
jmp
inc
ja
adc
xchg
shlb
test
mov
ss
ja
mov
dec
js
repnz
hlt
ja
rclb
popf
rclb
pop
push
sbb
loope
jb
fcompl
lock
push
icebp
mov
pop
insb
in
into
inc
add
xchg
into
movsl
rclb
shll
push
notl
xor
fdivp
inc
sub
es
notb
xchg
lea
jne
pusha
mov
lods
jae
mov
hlt
pop
or
hlt
shrl
mov
push
dec
sbb
je
cmp
fildl
inc
es
dec
adc
loopne
jne
mov
cmpsb
cld
fbstp
js
fildl
dec
mov
adc
inc
out
mov
pop
xor
aam
insb
sbb
jecxz
out
inc
fsub
cmp
in
icebp
inc
or
lret
and
jle
cltd
adcl
push
cmp
aam
movsl
add
add
xchg
xor
insb
sub
jns
xor
int
lea
out
les
inc
ret
stc
xlat
push
movsl
cmp
push
roll
xchg
ljmp
int
mov
fidivrs
pop
sub
inc
cmp
ljmp
cmp
mov
mov
push
inc
pop
jg
bound
test
mov
shrl
or
aaa
push
bound
dec
enter
stos
push
in
test
cltd
adc
ljmp
pusha
lea
es
add
mov
add
sbb
xchg
xchg
lahf
dec
add
shll
rorb
pop
aas
mov
and
dec
adc
lahf
pop
xchg
inc
push
jl
jg
fildll
sti
sbb
fisttpll
sub
push
push
xor
lret
in
jp
jae
mov
sub
pop
test
mov
xor
stos
or
shr
and
rcr
mov
test
lock
stos
out
lret
ret
addr16
jb
pop
mov
jg
inc
stos
ljmp
xchg
dec
stos
fadds
in
mov
cmp
mov
sub
mov
fimuls
push
clc
jmp
jp
adcb
sbb
inc
xchg
inc
mov
sahf
push
test
fwait
mov
fdivrl
fisubrs
insb
rorl
mov
xor
mov
aad
sub
cmc
aaa
add
aam
in
cs
rclb
pushf
or
aam
jo
dec
add
xor
push
and
fisttps
xchg
call
in
mov
int
movsb
sub
cmpsl
cmp
pop
repz
mov
dec
iret
xchg
mul
ret
loop
dec
scas
icebp
pop
add
lock
inc
bound
ret
js
pop
push
in
push
pop
xchg
adc
xchg
xchg
pop
add
mov
fldl
add
jb
mov
inc
dec
ror
cltd
test
fistpll
cli
aad
sub
jl
test
lds
jns
and
or
mov
jnp
loop
xorb
xorb
ret
cmp
mov
int
push
adc
push
cwtl
mov
add
sbb
addb
jb
sbb
mov
mov
and
iret
outsb
leave
aam
mov
pop
leave
icebp
pop
test
pop
dec
faddl
and
addr16
dec
mov
mov
ljmp
unpcklps
sbb
xchg
movsb
add
cmp
mov
cmp
clc
mov
add
mov
cmpsl
xchg
mov
jmp
dec
lods
cli
lahf
adc
push
sbb
inc
or
add
mov
cmp
sbb
sub
sub
add
mov
fildll
push
test
lods
adc
xchg
ljmp
popa
fadds
scas
lcall
mov
nop/reserved
jbe
jl
inc
lea
and
add
mov
and
stos
sahf
mov
pop
enter
xchg
add
popa
stos
testb
mov
lcall
inc
inc
pushf
adc
dec
jne
pop
test
jne
sbb
cwtl
mov
add
lret
adc
lret
mov
rcl
std
out
inc
sbb
fwait
out
cmp
std
pushf
popf
icebp
call
mov
lahf
aad
adc
fistps
pop
fcomps
add
ficoml
jp
insb
dec
cmc
popa
call
mov
jge
xchg
out
das
imul
sbb
insl
mov
sbb
mov
pop
mov
sbb
ret
popa
nop
jnp
jmp
aam
mov
insb
div
pop
ficompl
lahf
fistl
or
dec
dec
rorb
mov
mov
out
outsl
repnz
sub
mov
movb
pusha
movl
jo
mov
mov
in
cmp
mov
pusha
mov
jbe
xchg
sbb
pushf
lret
test
pop
cli
lahf
and
mov
cmpsl
mov
aas
push
fwait
hlt
adc
pop
fdivrl
push
daa
outsl
add
fstl
dec
ds
movsb
push
mov
daa
jns
lock
add
mov
mov
dec
add
pop
sbb
dec
mov
decl
inc
jo
std
cld
pop
in
inc
sbb
cmc
mov
mov
push
pop
sbb
pop
xchg
add
rcrl
and
sbb
pop
xor
test
popaw
pop
add
in
repnz
mov
icebp
sbb
adc
sahf
ret
jns
ror
outsb
cmp
shrb
xchg
or
adc
lds
fwait
xor
fisttpll
inc
std
push
xor
dec
roll
fstpt
aad
icebp
fdivr
cmpsb
out
push
mov
std
add
filds
fsts
pop
mov
pop
ja
imul
pop
test
or
dec
adcl
iret
notb
gs
jge
sbb
das
stos
mov
xchg
out
xor
cmp
push
or
arpl
cmp
mov
jecxz
mov
dec
iret
pop
or
cmpsb
adc
hlt
js
mov
sbb
adc
js
push
rol
nop
stos
sub
xchg
or
jns
xor
and
and
mov
mov
and
push
cmp
jbe
lret
inc
cmc
sbb
fcoms
xchg
std
mov
jbe
loopne
add
sbb
fsubr
adc
cwtl
xchg
push
fimull
jp
lods
outsb
addr16
enter
xorl
lods
cmp
xor
rcll
shll
inc
mov
mov
pop
movsl
sbb
pop
pushf
xchg
aam
ja
inc
push
les
test
insb
cltd
push
push
sub
mov
insb
rclb
inc
in
mov
lret
dec
movsb
addl
xor
lods
lahf
inc
mov
sbb
fcomps
shrb
in
das
sahf
mov
es
nop
jae
xchg
sub
into
aaa
lea
subl
jb
push
leave
cs
pop
paddw
inc
jno
adc
rol
sub
or
push
sub
push
dec
pop
filds
jnp
adc
jg
andl
inc
fidivl
inc
mov
int3
movl
or
inc
sub
xor
push
dec
or
test
xchg
cld
jo
lret
jmp
mov
or
inc
or
push
out
bound
test
jge
sub
sahf
sbb
test
xor
xchg
push
mov
mov
xchg
imul
mov
movsl
adc
mov
es
aaa
mov
push
lret
je
cltd
adc
leave
in
jne
rolb
mov
push
adc
out
ljmp
mov
inc
dec
cmp
adc
jl
or
xchg
push
sbb
das
aaa
mov
dec
and
xchg
xor
sti
frstor
mov
js
jge
cmpsl
sub
iret
jb
je
loopne
fnstcw
jl
cld
mov
add
jl
add
mov
and
mov
pop
outsb
jns
push
into
aaa
dec
mov
pop
jecxz
sub
mov
add
pop
jmp
cmp
mov
xchg
mov
xchg
mov
mov
dec
hlt
sub
int3
mov
push
mov
sbb
in
xor
mov
fidivrl
cmp
in
js
pushf
dec
cwtl
negb
mov
push
dec
mov
movsb
sub
sbb
mov
aas
pop
jle
cwtl
sti
mov
or
dec
xchg
add
push
pop
andl
jnp
and
or
mov
dec
cmp
outsb
roll
and
out
test
in
or
push
inc
inc
loope
in
in
movsb
cmp
adc
push
mov
cwtl
pushf
add
pop
pop
sbb
push
mov
dec
mov
push
mov
mov
dec
rorl
cmp
mov
js
pop
xchg
pop
xchg
cmpsl
cmc
sub
pop
jb
mov
xchg
xchg
test
ror
or
xchg
push
push
adc
jmp
cmp
cli
inc
inc
rcl
lret
jmp
imul
xchg
stos
sub
into
frstor
pop
pushf
imul
imul
xor
inc
mov
pop
sbb
ret
mov
in
and
stc
scas
inc
mov
rcr
roll
push
add
adc
sub
pusha
pop
int3
imul
aam
leave
incb
push
or
cmc
push
hlt
inc
lods
push
rcl
mov
inc
js
add
xchg
mov
sub
mov
cmpsb
jb
lock
adc
jb
popa
sub
and
in
push
cwtl
xchg
dec
fstl
mov
mov
or
shlb
mov
or
fiadds
aas
lret
lods
adc
js
inc
aam
or
ds
inc
cmp
sub
jne
fdivr
jne
xor
jne
and
es
call
lea
sbb
inc
xchg
dec
cmp
mov
stos
mov
cwtl
push
cmpsl
mov
sahf
jge
in
jmp
adc
cltd
mov
xchg
test
out
inc
data16
pop
clc
pop
movsl
xor
lahf
scas
in
sub
les
xchg
imul
fisubs
lea
lods
out
xor
xchg
pop
daa
inc
push
in
dec
push
lcall
fimuls
out
mov
gs
shlb
lds
cmp
testl
orb
aaa
fnstcw
mov
xor
dec
fdivrl
adc
scas
push
enter
test
mov
int3
lcall
hlt
iret
jp
mov
sub
imul
xor
imul
loop
pop
add
repnz
sbb
imul
fisttps
int
push
sbb
cld
cmp
pushf
and
pop
ret
je
das
sahf
dec
xchg
xorb
and
xchg
sbbb
in
mov
inc
mov
or
arpl
pop
mov
mov
and
leave
jl
cmp
sub
gs
push
or
sbb
add
mov
adc
lods
sbb
sub
jb
lret
pop
insb
out
mov
imul
aam
jle
out
sbb
mov
inc
mov
xchg
mov
fstpl
or
sbb
divl
inc
xor
jb
mov
xchg
sbb
test
cwtl
cmpb
pop
inc
vmovdqa
mov
pop
pop
xor
cmp
sub
jns
push
add
push
icebp
jne
lock
sahf
xchg
stc
xor
add
push
aam
fisttps
jmp
push
ret
pop
cmpsl
inc
call
push
std
movsl
jecxz
js
hlt
or
pop
rcrl
mov
push
scas
cmpsl
in
lock
jp
sub
ss
pop
pop
pushf
orl
aam
push
sarl
mov
fcoms
js
cmp
cmp
mov
nop
push
jg
mov
dec
mov
lods
test
jnp
sbb
xor
out
cmp
clc
in
addr16
inc
repz
adc
xor
popf
iret
stos
dec
pop
int
sub
mov
fwait
mov
cmc
pop
add
cli
xchg
dec
jbe
imul
mov
movsb
scas
stos
fidivrs
jle
pop
fucomp
push
lods
jno
cmp
or
outsb
mov
loopne
and
lds
fsubs
pushf
lahf
cltd
add
mov
cs
xor
push
bound
pop
mov
xchg
pusha
adc
cli
cmpsb
sbb
movsb
pop
push
lahf
xor
aas
xchg
imul
movsl
jns
jp
pop
mov
xor
xchg
cmc
loop
mov
roll
sub
xorl
xchg
push
sub
idivl
push
dec
mov
sbb
mov
rorb
inc
pop
cmp
sbb
aam
jo
xor
sub
test
push
mov
mov
lods
das
shll
jp
scas
cmc
mov
test
neg
lret
xlat
scas
pop
jno
and
cwtl
insb
mov
inc
jg
push
jg
cmp
rorl
ret
pop
repnz
stc
faddp
fsubrs
dec
add
inc
aad
movsb
in
xorl
test
sbbl
lret
pop
std
out
cmp
pop
imul
in
add
loopne
push
icebp
jecxz
pop
jae
popf
inc
es
sub
out
mov
repnz
insl
xor
std
add
cltd
pop
push
mov
mov
jae
push
out
cmp
das
cmp
xchg
sub
loopne
sub
call
cmpsl
insb
aas
xchg
mov
dec
dec
jne
xor
sbb
xchg
lret
and
xor
into
pop
push
dec
int3
jp
mov
add
lock
pushf
rcrb
cmc
inc
sub
push
icebp
adc
rcll
sub
lods
in
mov
cmpsb
jp
adc
je
iret
rdtsc
add
lret
loope
rcrl
and
sub
xor
adc
inc
xor
gs
out
and
loop
bnd
and
xchg
pop
test
sub
sub
das
sub
je
enter
push
mov
lea
stos
cmp
adc
sub
scas
adc
push
mov
xchg
or
sbb
xchg
and
xchg
addl
sbb
jmp
scas
jb
dec
mov
adc
cs
movb
test
push
adc
pop
movntq
out
shlb
or
push
sub
test
enter
mov
lcall
add
repnz
sbb
push
push
mov
sarl
jg
fsubrl
fs
mulb
scas
out
jp
stos
cmp
adc
mov
or
frstor
clc
mov
int
mov
cltd
ss
xchg
mov
movsl
inc
push
adcl
cli
jg
es
pop
arpl
jae
mov
hlt
inc
sub
stc
pop
call
test
and
mov
jmp
push
mov
sub
aaa
das
mov
lds
ret
out
outsb
addr16
sub
dec
jecxz
cmp
adc
cmp
push
pop
jno
movsl
sbb
and
pop
data16
xchg
stos
push
lea
xor
aam
inc
xor
sub
test
ficoms
aas
mov
mov
jb
inc
ret
and
cmp
push
sbb
ds
popa
dec
mov
sbb
popa
sub
push
pop
jmp
nop
inc
dec
pop
test
adc
inc
adc
popa
mov
stos
jge
pop
aas
inc
addr16
movsb
push
subps
sbb
or
and
dec
test
pushf
pop
inc
pusha
fdivr
ljmp
aas
shrb
sti
test
dec
subl
out
push
inc
sbb
mov
mov
jmp
xchg
mov
cmpsl
xchg
push
arpl
cmp
ret
add
lahf
pop
gs
notb
pop
out
outsl
lock
lds
pop
xor
bound
cli
and
cmpsl
cmp
push
fwait
ret
push
fisubrl
in
js
inc
cld
insb
push
jnp
adc
mov
nop
mov
cltd
cmp
mov
or
push
rcrl
fwait
mov
icebp
fld
outsb
repnz
test
daa
flds
push
outsb
out
inc
nop
dec
cmpsb
mov
mov
test
mov
imul
inc
mov
test
mov
pop
jns
scas
enter
jge
xor
jp
cmpsb
mov
test
push
mov
ss
dec
fisubrl
outsb
fstl
pop
pop
std
push
xchg
lret
push
std
jbe
scas
xchg
xchg
cld
sub
repz
add
adc
inc
cmp
push
lahf
xorl
or
dec
loop
iret
adc
and
push
inc
ds
stos
lret
sahf
outsl
fisttps
stos
xchg
mov
ret
cli
pushf
andb
sbbb
inc
add
out
repz
popa
jo
jp
mov
shrl
test
loopne
inc
push
icebp
add
enter
ja
push
mov
adc
fnstsw
pop
push
push
sub
xor
out
and
orb
jnp
mov
ds
mulb
insl
inc
pop
ss
icebp
push
cmp
xchg
xchg
in
out
mov
or
out
or
popf
scas
mov
mov
scas
nop
cmp
movsb
xchg
and
lea
xchg
aas
push
lret
mov
lahf
push
xchg
mov
pop
mov
int3
mov
mov
ja
adc
sbb
push
adcb
mov
and
xorb
scas
inc
cmp
push
xchg
lods
popf
or
repz
push
pusha
adc
lea
adc
insl
xchg
mov
mov
arpl
jo
ret
fsts
push
cmc
inc
in
hlt
aam
inc
sahf
loope
push
jb
push
movsb
dec
push
or
leave
sbb
sbb
adc
mov
adc
jecxz
fwait
mov
mov
ret
mov
out
mov
or
mov
ja
in
pop
lds
ds
lcall
cmc
push
xor
les
lds
repnz
and
imull
push
push
push
clc
sub
or
push
and
std
mov
mov
fidivl
scas
ret
loope
adc
jg
leave
pusha
pop
sub
in
movaps
cmp
mov
cmc
xchg
cs
add
push
push
mov
je
mov
sbb
jmp
and
jne
pop
or
mul
xor
cmpsb
rorb
push
sbb
jae
jb
in
sub
mov
mov
iret
jo
xor
mov
and
cmpsb
mov
scas
push
pop
pop
inc
mov
sbb
xor
and
xchg
sarb
movsb
test
insb
out
sbb
enter
xchg
cmc
sub
and
aas
xor
add
xchg
mov
sub
mov
loopne,pn
jecxz
add
repz
inc
add
jg
add
adc
push
cwtl
in
imul
std
inc
into
pusha
add
aam
pop
xorb
add
sbb
outsb
outsl
cmpb
adc
std
sub
cwtl
mov
enter
sarl
les
sbb
jnp
add
lret
inc
xchg
cltd
popf
stc
sbb
inc
sbb
push
cmp
fdivs
and
in
mov
fwait
or
cmp
inc
xchg
push
icebp
sahf
mov
ret
sub
stc
inc
inc
push
outsl
jns
imul
loopne
and
jae
mov
inc
lret
cs
adcb
or
popf
sbb
or
mov
jmp
jns
pushf
push
xchg
jl
inc
sbb
mov
fnsave
xchg
add
cltd
xchg
inc
int3
popf
mov
dec
test
arpl
push
outsb
cmp
inc
sbb
mov
stos
xorl
sub
fisttpll
roll
lret
mov
mov
jle
out
mov
sbb
pmullw
mov
or
sub
addb
cld
cmp
mov
jo
jno
imul
push
int3
cltd
fnstenv
scas
xchg
call
mov
mov
je
aaa
ror
mov
xor
fnsave
pop
in
scas
add
jae
testb
push
add
and
adc
jg
aaa
cmp
lret
sti
in
ljmp
testl
cmp
lret
fdivrl
leave
std
cmp
int3
sti
cmp
sub
daa
outsl
inc
cltd
inc
lea
rep
es
xorl
orb
mov
call
lods
mov
daa
cmp
enter
adc
mov
stc
push
rcrl
gs
aam
mov
mov
adc
insl
adc
cmp
xchg
int
mov
lret
movsb
inc
inc
pushf
jmp
lock
cmc
lods
aas
cmpsl
push
loop
sub
stc
cwtl
mov
mov
sahf
fidivrl
mov
dec
js
jno
push
repz
add
add
add
push
sub
les
outsb
in
int
sar
pop
pop
xchg
jle
icebp
in
aas
pop
cmp
push
push
loope
push
push
add
inc
ret
icebp
pop
shlb
scas
lret
jp
movsb
int
js
pop
inc
jmp
inc
mov
dec
jecxz
stos
cwtl
mov
int3
jno
push
xor
into
xchg
in
pushf
pop
scas
cmc
cmpsb
adc
xchg
mov
cmp
sbbl
jmp
pop
cmp
js
cmc
adc
mov
mov
jae
out
adc
lock
push
dec
add
movsb
add
iret
add
mov
push
or
daa
in
pushf
les
ss
test
cmp
pcmpgtb
xchg
jae
cmp
cs
icebp
aaa
mov
push
aas
outsb
fldcw
mov
cmp
in
cli
mov
in
int
imul
mov
int
in
cmp
mov
fildll
lock
or
aaa
movsl
and
cmp
cmp
jmp
xchg
push
add
jo
add
inc
imul
adc
add
sar
inc
push
mov
xorb
stos
add
arpl
and
xrelease
push
and
mull
ss
pop
dec
pop
nop
ja
int3
push
outsl
daa
mov
push
movsb
std
scas
sbb
ja
insl
out
mov
jl
stos
inc
or
fisubrl
jbe
jecxz
xchg
ljmp
inc
test
pop
dec
lods
add
fwait
push
clc
push
add
sub
mov
jmp
add
loopne
mov
pop
orb
scas
cmp
icebp
clc
out
jns
les
jae
jae
jp
push
xor
add
lret
movsl
movsb
cmpsl
sub
cmp
test
and
ss
cli
push
or
movl
dec
sub
sahf
inc
jmp
cld
cmpsb
clc
inc
inc
hlt
jbe
cmp
outsl
jb,pn
aaa
fadd
cwtl
mov
test
movsb
mov
add
xor
repz
and
jge
add
lods
sahf
test
dec
sarb
clc
or
and
std
lahf
fs
cld
or
mov
adc
cmpsl
insl
mov
ret
push
or
xchg
bound
lea
jne
mov
xor
arpl
xchg
cwtl
xchg
ss
mov
pop
sub
mov
iret
sub
aaa
jae
jae
cmc
popf
ja
cmp
pushf
jo
out
cmpsb
jnp
inc
xor
mov
gs
xor
subb
xor
jb
lret
ret
push
add
jmp
adc
xchg
popf
jp
push
sub
iret
pop
jbe
notb
cwtl
fcoml
roll
lock
sbb
add
sub
daa
nop
popf
add
cli
mov
mov
xchg
jmp
aaa
mov
xchg
push
and
mov
movsl
int3
xor
les
into
adc
sub
jnp
and
out
pop
jl
add
cmp
jae
and
dec
lahf
jae
call
xor
mov
jle
enter
push
xchg
sub
mov
into
xchg
jnp
outsl
rcrb
sbb
outsb
xchg
aaa
andl
lahf
push
ljmp
mov
dec
mov
push
nop
int3
mov
ljmp
sahf
popa
es
cmp
ljmp
or
in
push
sbb
mov
dec
movsl
cmpsl
jo
adc
xchg
test
cmp
mov
cmpsl
rcll
lcall
mov
ss
test
lcall
mov
lods
shlb
pop
fbld
xchg
push
fsubs
adc
dec
fldt
mov
jbe
sbb
and
roll
ret
mov
cld
orl
pop
movsl
or
sbb
mov
lea
insb
push
push
cmp
stc
lret
shlb
add
fisubl
subps
pop
sbb
rcll
lret
xor
add
stos
aaa
or
pop
fst
cld
adc
adc
dec
fldenv
sub
and
mov
rolb
xchg
test
pop
loopne
push
cli
push
imul
in
rol
cmp
inc
fnstcw
testb
scas
add
lods
out
fsubrs
pop
sarl
not
dec
idivl
jne
ja
popf
insl
insl
jp
ds
mov
mov
int3
int3
scas
dec
fldt
sbb
movb
and
mov
xchg
cmp
out
rcr
dec
inc
das
xchg
dec
mov
test
scas
mov
into
xchg
lds
popa
lods
cmp
sbb
adc
pop
gs
aas
and
adc
inc
scas
mov
lcall
push
jle
mov
mov
mov
sbbb
in
test
mov
push
jae
mov
lods
mov
mov
xchg
or
inc
cmpsl
ljmp
pop
mov
inc
shll
into
dec
mov
lret
arpl
xor
mov
popf
mov
and
dec
jle
sub
jp
mov
into
test
mov
popa
ret
mov
add
or
inc
or
add
xor
sub
bound
sub
mov
lret
add
inc
popw
adc
cli
jns
mov
fldcw
fcmovnbe
cmp
mov
fdivl
mov
xchg
xchg
pop
ja
lahf
inc
push
int3
out
xor
inc
bound
jecxz
mov
or
push
cmp
pop
fnstenv
cltd
pop
fwait
fwait
das
jbe
jb
loopne
lret
cmp
fiadds
dec
ja
inc
xor
inc
mov
repnz
mov
loope
dec
sbb
int3
shrl
or
lods
arpl
inc
sbb
jp
pop
mov
cmc
lea
js
sahf
cltd
cmc
icebp
push
xchg
mov
fwait
xchg
or
xor
lods
pop
pop
xor
in
sahf
push
mov
jl
push
adc
xor
mov
inc
dec
insb
clc
inc
sub
jg
xor
movsb
data16
jbe
sub
sarb
sbb
and
dec
int
shl
and
rclb
mov
nop
dec
push
push
xchg
loop
cmpsl
outsl
in
mov
fcoml
sub
test
negl
lds
repnz
fcoms
insl
in
test
enter
push
jp
mov
add
jne
enter
fldt
sub
add
daa
insl
xchg
clc
adc
movl
pop
ds
sub
push
mov
mov
fildll
mov
es
aad
or
addb
jmp
jns
or
add
xor
dec
cli
incb
shll
std
fidivrl
popa
sub
xlat
bound
aam
pop
cmp
and
xor
fistps
or
jb
push
ljmp
icebp
or
test
mov
dec
cmpb
and
push
test
popf
push
ficompl
inc
or
enter
aad
data16
jl
xor
mov
jl
movsl
repnz
scas
sbb
mov
lock
jmp
enter
int
xor
push
es
push
sti
jge
add
xchg
fmull
popa
fstl
xor
pusha
in
dec
fbld
add
out
push
test
jb
and
dec
ret
lods
in
or
xchg
hlt
movsl
iret
dec
inc
sbbw
xchg
out
enter
in
sbb
xlat
pop
mov
cmp
dec
orl
cmp
push
movl
or
je
pop
data16
test
es
lcall
sub
add
int
outsb
cmp
into
int3
int
jg
sbb
mov
xchg
xchg
adc
test
sbb
hlt
push
ss
dec
out
repz
mov
stos
les
mov
lcall
jbe
jno
lahf
lret
not
sub
xchg
sbb
scas
sub
sub
and
mov
pushf
inc
add
imul
stos
loopne
or
xchg
sbb
imull
push
mov
push
pop
lock
mov
cmp
insl
dec
xchg
int
xor
dec
pop
cld
lock
sarb
add
xlat
jl
pop
iret
shrb
leave
mov
add
hlt
cmpsl
sbb
addr16
fidivrs
sbb
cmp
shll
adc
mov
lahf
cmpsb
fildll
scas
mov
mov
adc
xor
mov
cs
mov
ds
fdivs
ret
fbstp
mov
xchg
adc
mov
mov
inc
mov
lock
ja
ss
xor
cmp
movsb
test
jg
lds
rclb
cmp
adc
je
aam
repnz
dec
push
popf
mov
and
push
movsl
dec
in
pop
rorb
insb
insl
and
out
sbb
call
mov
negb
sub
or
jp
out
xor
xchg
bound
sub
jns
insw
adc
xchg
les
out
mov
jg
dec
cmc
jl
outsb
inc
cltd
mov
xchg
orb
movsl
pop
push
mov
jmp
mov
stos
pop
lods
ljmp
add
push
pop
aaa
or
fstpt
pushl
add
jl
iret
push
shr
out
in
jg
inc
mov
pop
jmp
lods
loopne
mov
outsl
push
enter
cmpl
xchg
pushl
jnp
imul
loop
sbb
adc
loope
add
or
adc
mov
fwait
pop
divl
cs
shlb
and
cmp
add
out
iret
inc
ljmp
cs
scas
adc
and
inc
cmp
pop
outsl
cmpb
cmp
sub
fdivr
jge
repnz
ficoml
mov
ret
xchg
mov
push
addr16
cmp
mov
sub
mov
mov
les
mov
in
stos
test
inc
push
adc
clc
outsl
dec
xchg
dec
mov
adc
popa
js
jns
or
dec
lret
push
sub
outsb
dec
imul
push
or
dec
pop
mov
and
imul
sub
js
xchg
lea
ss
mov
push
test
lcall
adc
jae
ja
xchg
or
cs
loop
gs
sbb
jno,pn
popf
loopne
sub
into
and
push
loopne
jae
daa
lahf
fdivrl
imulb
pop
test
or
add
sbb
xor
imul
cli
mov
stos
and
push
pop
mulb
dec
pushf
lahf
mov
stc
rcrb
mov
sbb
movsb
test
or
cmp
or
arpl
sbb
int
sub
jp
pop
and
int3
in
sti
cmpsl
xor
jl
ret
mov
sbb
or
negb
jae
jge
cmp
les
sbb
enter
lods
adc
pop
sti
mov
jge
xchg
out
jne
lds
data16
rcrb
fldcw
dec
mov
lea
adc
jb
mov
mov
xchg
mov
jmp
dec
stos
popf
imul
push
push
push
faddl
std
cmp
xor
inc
sbb
cmp
movsl
mov
pop
jecxz
ss
jp
and
fmul
loope
mov
jns
sub
jno
fs
push
pop
aam
jns
je
push
jmp
mov
insb
int3
fstpt
js
push
in
les
scas
pop
mov
jnp
aam
sub
fcompl
and
movsb
or
lret
aaa
lock
xor
int
lods
out
aas
daa
adc
ljmp
jmp
push
adc
adc
loop
addr16
and
mov
cmpsl
jle
popf
fs
sub
sub
dec
mov
cmp
cmp
push
bound
lds
lahf
mov
xchg
or
and
sbb
sbb
or
mov
cmp
push
inc
mov
adc
fisttpl
and
addb
add
outsb
fimull
xchg
ljmp
pop
repnz
jge
inc
in
bound
add
mov
imul
js
or
movsl
mov
dec
mov
adc
negl
xchg
mov
mov
std
cli
xchg
or
sub
mov
fisttpl
jp
adc
push
mov
pop
fildll
sbb
mov
into
cmp
jns
add
rolb
push
cmovg
outsl
jp
insl
mov
rcl
mov
adc
adc
fistpl
loope
sub
test
mov
sbb
stc
fisttpl
mov
cmpsb
fistpll
mov
jge
repnz
mov
mov
nop
out
scas
jno
testl
mov
cmpsb
arpl
sar
cmp
pop
mov
je
adc
mov
cltd
push
rcrb
ss
leave
shl
nop
aaa
xor
je
add
mov
xchg
lds
sub
and
sbb
mov
lock
sub
xchg
lds
cmp
adc
test
add
enter
stos
adc
adc
xor
and
repnz
or
ljmp
enter
pop
or
jl
xor
cmp
pop
js
dec
jne
xchg
sbb
jge
pop
sub
jnp
lret
stc
aad
adc
mov
push
es
movsb
movsb
imul
es
xor
inc
push
xchg
cmp
notl
sbb
call
xor
xor
pop
mov
pushw
xchg
and
mov
cltd
mov
lret
mov
sbb
inc
movsb
mov
insb
jmp
jnp
add
loopne
or
adc
push
outsl
testb
xchg
lahf
push
add
mov
xchg
xchg
xlat
aad
push
mov
add
aaa
mov
in
pushf
and
or
jnp
mov
test
aam
dec
lahf
cmc
aaa
xlat
decb
pop
mov
and
icebp
mov
mul
pop
and
inc
lret
pop
sbb
mov
jmp
xorl
adc
test
inc
fistpl
mov
outsl
stos
xchg
cltd
fdivl
outsb
pop
dec
div
push
dec
insl
popa
js,pt
repz
insb
cltd
jns
inc
pop
cmp
mov
mov
cmp
sbb
cmp
pop
sbb
xchg
rcl
sbb
pop
cli
cmpsb
sahf
mov
insb
xchg
sub
xchg
in
jp
mov
and
fiadds
jmp
dec
sub
mov
dec
movsl
sub
mov
or
lods
std
retw
or
sbb
add
and
mov
std
mov
dec
pop
mov
clc
sub
jbe
outsb
ds
arpl
clc
add
push
into
out
adc
xor
xchg
psubsw
cwtl
in
fstpl
mov
pop
out
push
int
aam
mov
cwtl
sub
xor
shlb
cmp
outsl
inc
and
aaa
and
call
cmp
adc
test
rcrl
cmp
inc
and
fimull
mov
ljmp
leave
shl
or
pop
mov
cs
movsb
inc
push
shlb
in
movsb
mov
and
mov
loop
sbb
or
add
aad
push
pop
mov
jl
cmpsb
iret
dec
stc
add
jle
and
fldenv
or
xchg
jo
and
mov
movsb
ret
dec
mov
dec
loop
or
mov
add
outsb
mov
nop
ds
lret
insb
stos
lahf
pop
or
xor
into
lds
jnp
push
push
jns
dec
aas
sarb
dec
roll
sbb
cwtl
mov
dec
push
aaa
cmp
aaa
or
lock
mov
aad
mov
and
fwait
cmc
cmpsb
xor
test
xchg
es
in
sysexit
cmp
cltd
jno
fmulp
movsl
addr16
nop
sbb
lcall
xchg
mov
ss
push
in
mov
jl
mov
dec
adc
sub
jo
lods
lcall
xchg
dec
and
stos
sbb
xchg
daa
sbb
mov
fs
testb
or
shll
frstor
stos
xchg
cli
mov
pop
mov
mov
out
lds
push
mov
inc
in
mov
mov
xor
mov
push
jno
movsl
add
insb
rolb
test
pop
insb
pop
nop
jmp
bound
mov
imul
xchg
xchg
push
fsub
mov
xchg
pop
mov
or
mov
cmp
inc
test
sub
jecxz
arpl
pop
sub
int
or
cmp
bound
cmp
xor
sub
testl
ss
addr16
lret
rorb
xor
cmp
loopne
das
movsl
bound
out
pop
loopne
clc
push
std
and
sbb
std
jmp
mov
pushf
xchg
js
mov
clc
stos
adcl
cmc
testb
test
dec
mov
mov
push
aaa
daa
pop
or
aas
sub
aaa
int3
add
pusha
push
cs
mov
roll
add
push
loopne
mov
xchg
bound
aam
dec
pop
pop
jne
mov
test
imul
outsb
scas
sub
inc
sub
xchg
test
shr
aaa
jmp
push
and
jecxz
push
jo
mov
pop
sbb
mov
cwtl
xorl
sahf
dec
mov
or
mov
pop
or
pop
jp
mov
enter
and
rclb
sub
into
mov
add
stos
je
test
mov
inc
popf
mov
sti
and
add
or
cmp
jecxz
sub
push
and
leave
jno
ss
push
cmc
mov
movsl
fs
jp
or
mov
xorl
test
inc
cltd
pop
leave
mov
pop
sahf
aaa
dec
mov
fsubrs
call
rcrb
arpl
scas
mov
or
inc
adc
mov
jb
int
lods
lea
imul
popa
pop
cmc
cmp
push
je
sbbl
call
jo
xor
loop
lret
addr16
or
mov
sahf
flds
xor
loopne
daa
lea
mov
jo
mov
push
je
lea
js
rcrl
lcall
nop
cmp
test
ficomps
pushf
xchg
in
in
lock
dec
movsl
ljmp
mov
mov
jle
out
pop
subl
xor
sub
cli
push
pop
jb
add
push
in
aam
cld
pop
inc
es
xor
clc
sbb
sbb
add
dec
add
les
pop
aaa
xchg
pop
xlat
pop
cmp
jno
xchg
cmpsb
imul
jnp
shr
out
dec
icebp
lcall
aaa
jle
pushf
movsl
shll
or
lds
popf
cmp
stos
out
pop
popl
sbb
shll
out
inc
cmpl
cli
cmp
jb
mov
jnp
jp
push
std
test
faddl
stc
cmp
push
and
mov
movsl
inc
xor
mov
cmpl
inc
add
xchg
and
xchg
in
push
cmp
mov
push
sbb
pop
ret
mov
out
rep
adc
push
mov
sbb
into
clc
pushf
sub
cmc
mov
jge
pop
jmp
jbe
xchg
int3
fdivs
and
frstor
xchg
cmc
push
mov
xor
popf
mov
shll
lds
cmp
dec
test
sti
lods
test
mov
fld
lahf
cmp
xor
mov
gs
call
jb
push
mov
adc
in
rcrl
ds
inc
enter
fs
sub
jmp
xor
aas
pusha
pop
pop
inc
icebp
mov
iret
jle
in
push
mov
cmpb
cld
jo
mov
jle
cltd
pop
sbb
ds
fistl
icebp
sub
and
and
mov
mov
push
icebp
ss
cltd
add
imul
cwtl
xlat
xchg
or
ja
das
inc
mov
push
pop
cmp
push
adc
cmpsl
lret
pop
ret
pop
jmp
sarl
nop
adc
push
in
mov
xchg
jae
test
cmp
stc
popf
inc
mov
or
pop
rcl
sub
notb
scas
xor
pop
mov
out
push
add
mov
sub
mov
into
sbb
int3
stos
rclb
movsl
add
dec
push
fsubrp
cmp
movl
out
out
cmp
leave
sbb
jmp
cmp
out
inc
ret
cmpsb
movsb
push
sbb
mov
mov
jns
mov
mov
cs
test
mov
cmp
mov
sub
adc
mov
es
and
pop
fildl
dec
loop
push
cmp
fimuls
stc
pusha
and
roll
dec
leave
add
or
or
mov
pop
pusha
cmpsl
xor
nop
sub
ljmp
dec
sub
cltd
dec
inc
insb
or
int
xchg
add
ret
mov
mov
fcomip
jo
xorl
sarb
jge
pop
jmp
jg
sub
or
push
inc
and
xor
cmpsb
sub
outsb
inc
cli
xchg
pop
and
sbb
lods
out
pop
xchg
dec
subl
cs
arpl
cmc
arpl
pop
mov
or
inc
dec
jne
dec
jae
out
inc
dec
push
insb
pop
dec
pop
mov
movsl
cmp
outsb
repnz
testb
arpl
fisubl
dec
bound
add
repz
xchg
mov
aas
aad
jbe
icebp
pop
in
sub
sbb
push
sub
mov
movsb
add
sbb
xchg
xchg
inc
rcr
shrl
repnz
dec
xchg
fiadds
lds
sahf
inc
xor
fs
fldenv
fwait
cmp
stos
fwait
mov
shl
xchg
fs
call
cmpb
mov
scas
loop
ss
mov
cli
jl
popf
push
xlat
cmp
fists
sub
aad
mov
in
aas
iret
inc
outsl
xor
xor
push
cmc
sub
add
js
test
dec
enter
xchg
lds
mov
adc
xchg
xor
xlat
mov
out
or
xchg
pop
sub
fchs
push
mov
or
xchg
add
cli
sbb
cmp
scas
outsl
roll
mov
imul
cld
fisttpl
call
mov
jno
adcl
stos
adcb
push
or
aad
jno
add
les
dec
movsb
mov
cmp
and
or
pop
cmp
dec
push
pop
jbe
jg
aaa
cltd
lcall
or
lock
js
jae,pn
pop
inc
mov
rcrl
inc
push
add
and
jnp
jne
stos
mov
xchg
arpl
and
in
insb
jge
sbb
cmove
ret
stos
test
imul
mov
out
faddl
add
repnz
add
das
lods
stos
ljmp
xlat
xor
cmp
and
or
inc
push
test
fistl
adc
inc
stos
push
mov
pushf
jmp
mov
push
sbb
xor
mov
js
insl
ja
or
ficoms
sbb
or
vmovlpd
fwait
dec
gs
ja
jns
js
shl
out
or
pop
loopne
cmpsl
jp
sub
movsb
or
incb
daa
jmp
dec
pushf
and
gs
mov
mov
inc
jo
das
sub
fs
jmp
push
mov
clc
loop
lods
mov
cmp
jl
pop
dec
sbb
aas
or
pop
xchg
aam
subb
pop
cmpsb
mov
sub
dec
out
jo
adc
jno
andl
pop
push
cmc
lret
jle
scas
subl
cmc
jbe
mov
movsl
iret
add
test
popa
movsb
jnp
inc
xor
xchg
xchg
jo
cmp
test
test
jno
xchg
es
mov
push
outsb
pop
mov
push
push
push
aas
hlt
mov
push
and
push
inc
and
pop
mov
or
shlb
pop
pop
mov
stc
cmp
dec
xor
inc
mov
les
pop
les
xor
xlat
mov
jecxz
jg
enter
out
popa
stos
dec
mov
mov
movsb
adcb
out
sti
subl
xor
out
cmp
insl
shlb
xchg
cltd
int
lds
mov
lret
imul
ret
cld
fucomi
xor
dec
test
mov
xchg
mov
xor
cmp
js
xchg
sbb
cmpsb
pop
ss
cltd
icebp
inc
out
xchg
push
mov
sahf
andb
sub
outsl
xchg
sub
jg
xchg
lods
adc
loopne
rolb
int3
imul
outsl
lret
fisubrl
cli
data16
ds
mov
jae
shll
and
sub
insl
sub
out
ret
dec
mov
ljmp
jns
add
jl
dec
pusha
scas
inc
in
xor
leave
mov
dec
adc
mov
push
sub
add
cltd
jae
sub
mov
addr16
jnp
sub
lods
in
int3
pop
scas
xchg
xor
xor
push
jbe
leave
rcr
push
xor
jle
adc
ljmp
dec
repz
pop
xor
mov
out
mov
adc
push
shl
adc
lods
es
or
mov
out
or
shrb
mov
inc
cmp
sahf
mov
jl
add
cmpsl
scas
ss
jmp
gs
pop
xchg
pop
cltd
dec
orl
scas
int
mov
add
add
dec
mov
icebp
movsb
adc
lds
lea
xchg
cmpsb
mov
cs
minps
jo
xchg
mov
push
test
aad
mov
jnp
or
push
push
pushf
xchg
lret
xor
or
xor
icebp
mov
hlt
enter
xor
mov
xchg
scas
fmuls
or
xchg
popa
imul
out
lea
pop
sub
popf
subl
and
xchg
pop
cmp
xlat
fistpl
outsl
ljmp
dec
test
bound
xchg
jmp
lret
aaa
push
push
outsb
sbb
mov
rcrb
xor
mov
or
scas
sub
add
add
xor
cmp
test
mov
xor
sbb
loop
dec
xlat
sub
lea
jbe
in
stc
mov
aas
data16
adc
mov
aas
push
subps
xor
int3
cmp
loope
cmpsb
enter
arpl
pop
sub
int3
sub
lods
cwtl
repz
xchg
cmp
cmc
xchg
js
hlt
pop
outsl
or
sbbl
and
repnz
stc
sbb
cmpsb
shlb
sahf
pop
cmpsl
psubsb
and
push
jbe
lret
stos
in
test
outsb
add
test
ja
cmp
pop
xor
stos
lods
or
mov
inc
jns
fiaddl
mov
mov
mov
ror
and
mov
cmp
and
push
jns
arpl
mov
int3
and
xchg
cld
in
lds
push
mov
call
jle
pop
out
scas
and
mov
int3
movl
pop
or
stos
add
jbe
out
sub
shl
dec
es
push
mov
loop
push
xor
inc
pop
mov
daa
adc
xchg
dec
fildl
lea
aaa
movsl
mov
dec
aad
call
int
and
test
and
mov
inc
sti
and
push
mov
out
fimuls
cmp
fsubl
sahf
mov
sbb
arpl
mov
int
sub
jne
sbb
in
insb
es
in
cmpsb
test
pop
data16
imul
mul
push
jge
test
rolb
mov
add
xchg
push
jbe
dec
dec
sub
xorl
sbb
mov
and
fmull
test
in
out
mov
loope
mov
loop
pop
out
sbb
or
dec
imull
je
ss
mov
lock
outsb
and
out
pop
popf
out
stc
mov
repz
push
lret
ret
icebp
out
enter
fistpl
dec
rorl
mov
sub
out
mov
pop
mov
mov
dec
cmp
mov
das
cmp
loope
outsl
and
sbb
mov
add
sub
ret
mov
fs
add
jbe
dec
addr16
mov
pop
inc
arpl
fidivl
xchg
pop
adc
cs
jbe
shll
cwtl
sub
jb
pop
mov
mov
pop
sarl
mov
std
stos
adcl
shl
cli
ja
adc
in
int3
mov
inc
loop
jnp
test
movsl
push
rep
xor
mov
cmp
lcall
inc
lea
dec
sbb
mov
sbb
mov
mov
push
out
cmpb
daa
inc
xchg
mov
icebp
cmc
and
sbb
fwait
xchg
push
jg
or
jns
mov
fsubrl
jns
out
or
in
push
push
inc
mov
inc
xchg
gs
sbb
sub
shlb
xchg
inc
rorl
jne
and
push
jo
outsb
ljmp
jne
test
dec
inc
jns,pn
jecxz
std
mov
pop
xor
cmp
aas
lods
decb
and
scas
mov
push
iret
fwait
mov
mov
std
inc
push
push
movb
sbb
push
xchg
je
jb
push
mov
cs
push
adc
jns
and
and
xchg
or
lahf
fucomip
lods
cld
cmc
pop
das
or
fisubs
cmp
out
adc
pushf
arpl
fisubl
inc
mov
dec
cmc
sub
fldcw
xor
aad
test
mov
addr16
sbb
ss
push
push
mov
jno
outsl
jecxz
dec
sbb
fs
push
mov
push
xor
loopne
cmpsl
xor
ror
test
jae
mov
dec
add
mov
sbb
jle
xchg
loope
mov
gs
cmp
int
repz
dec
xchg
scas
sahf
sub
enter
xor
lcall
jne
mov
or
xchg
sahf
mov
pushf
mov
loopne
popf
push
stc
int
xchg
les
dec
mov
mov
decb
notb
push
popf
sbb
or
fxch
mov
push
jl
int
push
inc
ror
ficoml
in
imul
push
pop
jb
in
loopne
lcall
and
xchg
mov
mov
mov
cmp
dec
sbb
and
jno
imul
mov
adc
shl
pop
xchg
cmc
xor
arpl
xchg
cmp
rolb
call
mov
sti
ret
mov
shrl
xor
dec
mov
cwtl
out
cs
mov
adcl
out
mov
mov
into
daa
in
push
mov
push
pop
mov
data16
arpl
in
mov
clc
aaa
lea
test
hlt
fnsave
test
xor
dec
fdivrs
xor
pop
and
loope
iret
ss
sti
jp
jno
sbbl
mov
std
dec
and
adc
cltd
scas
outsl
inc
roll
das
es
pop
jecxz
xor
adc
cwtl
call
fstpl
xor
jb
in
pop
sub
inc
mov
pop
add
add
sub
xchg
mov
enter
mov
xchg
loop
bound
inc
push
sub
sub
sbb
aas
push
insb
stc
xchg
outsb
mov
lahf
push
int
jmp
cmp
fs
adc
leave
mov
jmp
outsl
aad
xor
pop
mov
std
xchg
mov
jae
les
mov
sbb
insb
sti
cs
xchg
dec
rorb
sbbb
and
mov
movsb
pop
lods
orb
test
pop
repz
in
jnp
lds
stc
in
xchg
add
pushl
dec
add
lods
test
imul
cld
lods
popf
mov
enter
sub
or
lahf
faddl
adc
cli
test
mov
dec
add
sbb
sbb
lods
outsl
stos
mov
jge
xchg
mov
xchg
inc
mov
mov
stos
fcmovnu
jae
sub
shll
mov
repnz
out
push
and
insb
out
stc
sub
jmp
fs
inc
mov
movsb
dec
adc
repnz
outsb
fidivs
xlat
cli
andb
pop
pop
dec
js
add
roll
mov
cli
cmp
pop
cmpsl
fdivr
enter
xchg
iret
sub
or
sbb
jbe
outsl
pusha
pop
shr
int3
fistps
hlt
sbb
sbb
cmp
test
sahf
adc
push
push
sub
adc
mov
out
fildll
or
addl
push
push
movsl
sbb
and
jg
mov
xorl
push
sbb
lahf
xor
push
push
mov
inc
test
mov
int
sahf
bound
xchg
in
or
aam
push
inc
lret
inc
jle
int
scas
xor
dec
mull
sbb
jnp
adc
lret
sbb
lret
pop
or
add
sbb
lea
push
xchg
inc
inc
outsb
pop
aaa
lock
lret
sub
push
inc
mov
sbb
adc
ret
xchg
mov
mov
sub
fldl
fmuls
pop
inc
cmp
lret
add
xor
push
mov
add
push
push
cmc
sub
mov
mov
adc
lret
pop
sub
lods
mov
imul
cmpsl
push
es
lds
sub
sub
pop
sbb
xor
mov
insb
out
orl
push
xchg
aad
nop
jle
push
ret
imulb
mov
mov
add
adc
add
xor
mov
sbb
jnp
lods
cmc
inc
test
or
or
pop
pusha
imul
in
or
inc
fcmovbe
pop
adc
push
test
int
nop
or
fadds
aas
clc
mov
bound
inc
rcll
mov
iret
sbb
ja
test
repnz
test
nop
xor
lods
cmc
sbb
aaa
jb
lret
rcl
ss
jb
jecxz
cmp
or
push
icebp
cli
sbb
inc
cmp
shlb
mov
mov
or
aam
sahf
fiaddl
pop
ss
call
pop
add
loope
push
popa
xlat
jge
testb
dec
loope
notb
mov
push
xor
pop
sub
daa
mov
mov
scas
push
or
mov
cli
rcr
rcrb
imul
cmp
fwait
mov
jecxz
imull
xchg
inc
and
insl
sub
inc
sub
int3
cmc
into
fidivs
dec
pop
fistpll
icebp
jbe
lock
ss
cs
mov
fisubrs
mov
jbe
sbb
repz
in
sub
sti
xchg
notl
dec
xorb
jns
fldcw
mov
xor
and
jne
mov
pop
in
sbb
ja
movsl
shll
divl
test
fcmovnbe
popf
dec
arpl
xchg
in
aad
jge
cmp
mov
rclb
inc
pop
sarl
xor
outsb
jns
jno
cmpps
leave
cmp
cwtl
sub
mov
imul
mov
jb
in
std
dec
lds
in
mov
loop
movsl
xchg
or
adc
pusha
enter
fmul
cmpsl
cmpsl
repnz
dec
sub
add
dec
cmp
cltd
xor
xor
icebp
xrelease
mov
push
lods
cld
inc
sub
out
ljmp
push
insl
outsl
cmc
mov
fcoml
sbb
popa
xchg
aad
les
ror
and
xchg
mov
sbb
inc
or
andb
mov
fdivrs
cs
mov
dec
cmp
repz
out
sub
xchg
les
das
and
int
cmp
or
ret
or
or
jg
push
loopne
mov
or
or
out
hlt
call
nop
inc
mov
insb
rcrb
jge
ret
in
jne
and
xor
repnz
insb
jne
daa
outsl
pop
mov
nop
xchg
cmp
loopne
clc
sub
inc
cld
fnsave
lds
xor
mov
push
add
mov
test
ja
or
push
cmc
scas
jl
mov
scas
lock
aam
inc
loope
loope
flds
fxch
pop
lock
repnz
filds
inc
xor
mov
cmp
cmp
hlt
aas
addl
sub
pusha
ret
mov
and
out
mov
cmp
aad
sahf
lret
cmp
sub
xlat
lahf
mov
jb
cmp
mov
or
js
sbb
mov
loop
or
dec
pop
mov
mov
mov
les
mov
inc
in
enter
or
xor
enter
add
mov
test
sahf
sti
repnz
sbb
xor
icebp
cmp
clc
lock
lea
mov
std
imul
rcrl
dec
jmp
sti
and
jns
push
push
andl
enter
adc
shll
jne
fimull
cmp
mov
and
add
cmp
rcr
jne
jbe
shlb
sub
sub
cmp
and
movsl
pop
add
mov
lcall
cwtl
mov
mov
pop
xchg
daa
adc
clc
imul
jg
dec
xor
xchg
mov
bound
pop
cmp
cltd
push
orl
pop
add
daa
outsl
inc
cmpsb
dec
add
js
aam
push
dec
add
cs
cmp
inc
ja
fimull
lret
mov
inc
add
xor
in
fcompl
xchg
pop
movsl
negb
pop
inc
fwait
scas
or
popa
pop
mov
or
addr16
sbb
mov
sbb
cli
lahf
pushl
mov
ja
lahf
fsub
or
adc
and
imul
jmp
out
or
test
out
lods
add
es
adc
and
mov
lret
sub
xchg
sti
outsl
stos
mov
and
pop
iret
in
in
int3
shll
dec
cmpsb
xchg
xchg
dec
ljmp
adc
push
inc
cmp
jns
gs
add
jmp
dec
iret
iret
cmp
mov
push
sub
out
adc
aad
push
jge
stos
fists
adc
ret
sbb
mov
daa
xchg
leave
sub
push
pop
gs
cmp
js
ds
mov
sub
into
jecxz
cmp
inc
jno
cmpsb
mov
hlt
and
fdivrl
iret
adc
imul
and
clc
and
mov
mov
and
sub
cmp
idivw
jmp
inc
cmp
or
outsl
int3
add
lock
orl
mov
jmp
mov
std
mov
add
xchg
stos
psubusw
or
in
aaa
adc
push
cmp
pop
jo
sti
jbe
sbb
sub
sbb
sub
clc
movsb
inc
pop
outsl
test
add
fs
lcall
lcall
xor
inc
hlt
and
add
pshufw
pushw
shlb
xchg
pop
jle
addr16
add
ss
xchg
ds
cmpsl
jae
scas
test
mov
and
jb
inc
aas
or
and
orb
mov
jle
aad
stc
inc
cmp
inc
nop
sub
sbb
jno
lds
lcall
jle
lret
mov
es
hlt
inc
outsl
imulb
xor
xchg
lds
setno
das
add
test
xor
data16
out
push
bound
push
push
ds
inc
cmp
pop
mov
outsl
popa
or
incb
clc
inc
push
and
pop
in
mov
mov
test
in
rol
dec
aaa
jecxz
or
xlat
loop
mov
mov
ljmp
mov
loope
pushf
or
in
fwait
pop
roll
xor
or
das
adc
lcall
sbb
adc
clc
mov
dec
in
jmp
aas
mov
stos
pop
mulb
stos
xor
daa
mov
and
push
pop
jg
add
adc
leave
into
sub
ljmp
mov
ljmp
pop
lret
pop
stos
jp
mov
lahf
mov
insb
push
sbb
inc
cmp
xor
add
add
in
decb
outsb
das
sbb
ljmp
lods
loop
das
mov
or
pop
sub
pop
dec
adc
ljmp
pop
xor
repz
pop
cmc
adc
jmp
fs
repnz
xor
mov
stos
xchg
dec
pop
xchg
mov
test
loope
inc
enter
insl
insl
les
inc
cmp
mov
out
jb
testl
sbb
push
aam
add
stc
fnsave
jnp
push
xchg
cwtl
mov
dec
out
imul
cwtl
mov
loop
push
outsb
sbbl
outsl
rcrl
sbb
imul
scas
loop
dec
gs
aaa
bound
inc
cld
mov
push
jne
adc
jmp
xchg
ret
out
bound
fists
andb
or
cwtl
pop
adc
loopne
aam
int
jl
mov
sbbb
outsb
pop
test
es
sarb
mov
ja
loopne
movsb
js
mov
aam
test
fcmovnb
mov
cs
jle
mov
mov
cs
ret
xchg
add
add
cmpsb
int3
lods
push
add
cmp
popf
and
lret
inc
adc
stc
ret
mov
cmp
pop
cli
fs
sub
and
mov
out
mov
into
mov
lea
rol
xchg
imul
push
xacquire
int
int3
xchg
dec
insb
jl
jno
dec
xchg
cmpsl
call
js
or
push
test
jb
inc
jb
push
sbb
jl
adc
movsl
sub
aaa
loope
or
stos
addr16
pop
pop
daa
shr
and
lods
lds
xchg
ret
and
dec
in
je
popa
mov
and
sbb
shlb
in
pop
cwtl
pop
fisttpl
jnp
repnz
cmc
push
add
mov
lcall
jae
sub
test
mov
out
and
jl
mov
pop
getsec
push
add
ret
scas
add
inc
xchg
in
xchg
ret
pop
fidivrs
test
ds
jnp
out
push
lds
inc
js
and
adc
test
int3
push
lods
sbb
pop
dec
mov
xchg
lret
dec
and
jecxz
or
mov
pop
add
pop
imul
dec
push
pop
shll
out
data16
mov
cmc
icebp
jb
inc
mov
inc
dec
jecxz
cmp
dec
sbb
mov
cli
mov
add
xchg
lcall
mov
rclb
xchg
aad
add
dec
dec
dec
int
add
jmp
jnp
inc
sbb
cmp
mov
sbb
pop
inc
or
xchg
aad
mov
or
cmp
imul
fisttps
xor
fnsave
mov
and
sbb
mov
dec
cmpsl
lea
lock
and
mov
daa
mov
and
xor
stc
cmp
lock
movsb
push
xor
sarl
imul
sahf
cmp
sbb
movsb
jp
into
xchg
sub
imul
dec
icebp
js
pop
lahf
mov
mov
cmp
jmp
clc
nop
fcomps
mov
addr16
cmp
test
mov
cld
jmp
pop
push
xchg
lret
mov
imul
push
mov
ret
lods
stc
mov
xchg
adc
xchg
xchg
js
lea
in
inc
mov
adc
test
jns
sub
push
fs
cltd
loope
loopne
icebp
jno
sub
js
aad
mov
ds
jg
mov
in
pop
mov
das
fildl
stos
mov
pushf
add
add
mov
pop
sbb
lea
xlat
mov
mov
out
movswl
lret
inc
rcll
mov
xchg
divl
or
push
stos
xor
aaa
add
popf
divb
std
or
clc
cmc
into
push
or
xchg
add
xor
stc
rolb
xor
outsl
adc
mov
cmp
int
test
inc
cmp
fwait
or
or
outsb
dec
pop
or
loope
fsubl
aaa
cmp
mull
jmp
out
cmp
jns
mov
imul
pop
clc
cmp
hlt
push
pusha
sub
mov
mov
fidivl
cmp
inc
push
jns
and
ror
popa
ja
adc
pop
cmp
sahf
movsl
sbb
lret
sub
mov
xor
push
push
bound
popa
addl
mov
or
lock
or
rcrl
addb
mov
shl
pop
sbb
ficompl
je
inc
lock
xchg
sahf
shl
test
clc
out
adc
mov
cli
sub
outsl
inc
out
js
mov
into
mov
or
cmc
dec
or
and
jmp
or
pop
jne
shr
insl
daa
mov
dec
mov
xor
lahf
push
addl
xchg
cwtl
in
xlat
arpl
fildl
inc
xor
cltd
cltd
mov
add
test
push
cmpsl
jp
mov
subb
scas
das
shlb
pop
repz
ret
add
mov
fnsetpm(287
movsl
add
push
adc
popa
loope
out
rorl
repnz
pusha
xchg
push
arpl
lds
lret
dec
pushf
push
adc
into
mov
lcall
mov
mov
push
pop
and
ss
ret
mov
int3
mov
hlt
add
pop
mov
fidivl
sub
mov
lods
pop
mov
inc
mov
mov
jo
arpl
rcr
cmp
lcall
icebp
data16
scas
fwait
insb
js
out
xlat
popf
xchg
arpl
mov
js
je
addb
xchg
icebp
add
ficoml
mov
fs
inc
or
add
ret
roll
cmp
imul
mov
mov
sub
testb
push
xor
cwtl
inc
jnp
jp
sub
enter
jns
and
dec
leave
cmp
pop
cmc
test
mov
out
clc
jmp
and
adc
lods
adc
adc
nop
stos
add
pop
das
or
xchg
or
sub
call
sub
xor
dec
imul
dec
icebp
and
add
inc
cli
xor
inc
in
fs
jo
jmp
fwait
or
lock
ds
mov
dec
testl
jo
mov
pop
out
in
xor
jmp
std
cmp
bound
cmp
js
fs
xor
lret
loope
pop
dec
mov
out
cmp
push
mov
lock
lods
rclb
mov
sbb
call
loop
lds
sub
arpl
loop
xchg
pop
jno
pusha
rol
mov
xor
in
cmp
mov
and
imul
or
xor
xor
es
pushf
pop
xchg
mov
sub
or
pusha
cld
or
adc
mov
adc
dec
sub
cmp
add
xlat
mov
sbb
fistpl
ret
pop
cltd
dec
cwtl
in
dec
enter
pushf
arpl
mov
enter
sbb
pop
jmp
inc
ja
popf
mov
mov
push
incb
sub
cmpsl
stos
scas
push
xchg
lods
and
xchg
scas
test
push
xor
jb
cmpsb
add
jbe
push
scas
xchg
das
mov
pop
jae
sahf
inc
dec
mov
scas
adc
inc
in
out
shl
je
push
dec
imul
es
out
add
mov
imul
out
jecxz
cwtl
ret
pushf
mov
xlat
and
push
cmpl
int3
rcll
xchg
inc
sub
call
or
outsl
xchg
xor
or
sub
sbb
sbb
sahf
lea
adc
push
dec
sbb
pop
sub
or
adc
mov
dec
out
cmp
clc
test
nop
pushl
test
inc
les
mov
das
mov
pop
push
push
inc
cli
inc
aad
shlb
jbe
das
mov
jb
repz
push
or
mov
in
mov
adc
xor
fbstp
inc
add
rol
mov
push
mov
pop
lcall
sub
loop
pop
xchg
jge
push
dec
shl
int
adc
mov
ucomiss
in
sbb
sub
xchg
xor
fwait
decl
es
rorl
sub
mov
xor
xchg
das
scas
jns
pop
cld
mov
xchg
sub
mov
outsb
scas
int3
int3
and
das
mov
mov
fcoms
iret
jmp
jno
adc
out
clc
mov
test
jp
and
es
mov
pop
insl
fwait
adc
lcall
and
sti
push
mov
test
dec
stc
ret
leave
outsb
inc
sti
jg
mov
xchg
movsb
lea
sahf
xchg
push
xchg
lret
outsb
xchg
out
push
out
mov
xchg
sbb
dec
in
fidivl
fcoml
out
mov
test
shlb
and
add
cmp
jmp
imul
lret
fnsave
push
mov
addr16
repnz
pop
push
leave
cmpsl
stc
jecxz
cmc
scas
xor
ja
jl
jne
mov
dec
cmp
jnp
fimuls
jmp
ds
push
repz
pusha
fisttpll
sbb
xor
out
js
lock
jno
push
out
jmp
pop
mov
in
sub
sub
enter
test
sbb
or
addr16
scas
lods
push
arpl
test
xchg
sti
push
push
jns
jns
ja
aas
mov
or
dec
daa
insb
mov
lods
into
or
stc
je
int
push
dec
mov
lods
sub
int3
mov
jmp
in
mov
xchg
imul
out
lcall
sti
and
in
xchg
in
nop
push
sti
movsl
mov
and
xor
imul
inc
push
cld
sbb
cwtl
sti
fsubrl
inc
testb
inc
pop
fistps
mov
push
arpl
mov
cltd
xchg
cwtl
jle
pop
jp
dec
imul
imul
adc
and
mov
xchg
shll
insb
xchg
adc
sarb
xchg
cmp
xor
or
xchg
into
shrb
mov
insb
lahf
sub
add
in
push
xchg
mov
arpl
jecxz
mov
lret
stos
out
lea
loopne
ffree
sarl
daa
mov
das
push
xor
pushf
mov
fisubs
dec
in
mov
xor
and
popa
das
imul
je
mov
mov
ljmp
and
mov
inc
mov
xor
jp
jnp
cmp
push
leave
mov
jg
mov
adc
pop
or
cmpsb
add
pushl
fwait
cmp
push
mov
dec
push
std
inc
mov
sbb
inc
andb
jb
mov
lods
xor
sub
sbb
push
cs
xor
imul
or
lahf
aas
jns
cmpsl
or
push
xchg
mov
sbb
dec
or
dec
sub
stos
inc
lods
fmull
ss
fwait
hlt
daa
inc
shll
push
pop
ja
xchg
repnz
cmpsl
push
mov
popa
popf
test
lahf
adc
rcll
data16
jmp
andl
mov
jo
cwtl
movsb
and
cmp
lods
jg
xchg
add
sub
js
xor
push
das
pushf
xor
dec
add
push
push
cmpsb
insl
add
mov
aad
popl
push
icebp
out
dec
cwtl
cmc
repz
and
movl
mov
xor
jne
xchg
ficompl
cmpsb
pop
mov
repz
lods
pushf
jo
jl
ljmp
shlb
int
fdivl
lret
out
sub
pop
jne
xor
outsl
into
fildll
xchg
dec
bnd
pop
ja
dec
and
push
into
pop
dec
lret
andl
mov
outsb
out
out
into
xorl
xchg
dec
pop
lods
jb
dec
jle
pop
loopne
mov
out
or
cltd
ret
sarb
pop
bt
outsb
call
or
and
aam
mov
pop
outsb
scas
dec
scas
fwait
cli
adc
mov
push
stc
xchg
cmpsb
in
mov
jmp
imul
imul
jle
loope
push
xchg
or
adc
mov
cld
xchg
push
jg
test
xor
enter
rcr
jnp
sub
in
andb
jbe
imul
std
das
rcr
es
push
mov
jne
repnz
pusha
mov
leave
out
fwait
jns
scas
popa
sbb
cli
nop
or
fucomip
push
test
cmp
int3
mov
xchg
inc
int3
enter
add
xor
fbstp
loopne,pt
sub
cmpsl
cmpsl
repz
pop
push
std
gs
cmpsl
out
outsb
mov
and
mov
and
mov
daa
cltd
mov
inc
test
xor
adc
shrb
mov
insl
or
outsl
mov
adc
and
sub
imul
aad
push
test
dec
cmp
or
xchg
xchg
aaa
xchg
pop
mov
cmpsl
test
ljmp
aaa
loopne
ret
and
xchg
rcll
insl
test
xor
jne
and
ret
push
movsl
mov
mov
out
jnp
movsb
sbbb
dec
test
fcoml
mov
dec
cld
and
dec
enter
stos
daa
ja
sub
out
and
xchg
cmp
lds
add
push
jns
xor
xchg
xchg
push
push
cltd
push
pop
sbb
std
push
ds
mov
mov
mov
push
jne
ret
bound
arpl
fidivs
sahf
fucomp
mov
inc
jns
sub
jnp
loope
adc
sbb
mov
cmpsb
mov
add
imul
stc
or
pop
jne
and
movsl
and
or
test
clc
or
fdivl
pop
jecxz
repnz
pop
xor
cmc
rorb
fld
jae
sbb
and
push
pop
mov
jp
or
rcrb
in
pop
loopne
ret
push
ja
shl
lcall
pushf
in
push
scas
inc
mov
inc
xchg
dec
add
jns
sbb
jge
in
mov
jecxz
je
adc
xchg
repnz
push
out
cltd
inc
leave
xchg
aaa
pop
lock
mov
adc
mov
push
fidivs
fiaddl
in
cs
enter
pop
jg
and
dec
dec
cli
cwtl
loope
es
pop
and
mul
sahf
xchg
xor
shrb
daa
popa
out
shrl
add
dec
adc
fwait
pop
and
mov
mov
dec
loopne
shr
mov
and
sub
dec
faddl
mov
jle
push
es
sbb
cmp
push
cwtl
inc
jl
cmp
inc
sahf
cmpps
das
in
mov
fisubl
in
sbb
sbb
pop
addr16
sub
jne
add
fiaddl
scas
cmp
stc
stos
call
xorb
rolw
insl
aas
es
pop
loop
jb
adc
std
add
mov
test
jne
ret
stos
xchg
lds
lahf
mov
aaa
popa
fldt
icebp
fidivrl
jmp
inc
jno
lret
cwtl
out
dec
gs
jecxz
incb
lret
in
push
jne
orb
int
cmp
adc
mov
pop
hlt
out
rcll
imul
cltd
sbb
sub
pop
rcrb
mov
outsb
jecxz
subb
xchg
lods
int3
movsl
adc
stc
enter
loope
jg
arpl
and
cmpsl
fnsave
dec
icebp
je
and
js
arpl
cwtl
push
movsl
out
inc
xor
mov
mov
pop
or
mov
addr16
jg
js
cmp
loope
pop
es
pop
inc
xchg
std
mov
or
aaa
mov
mov
xchg
sbb
filds
push
sarl
push
stc
sbb
inc
xor
pop
out
out
dec
pop
cmp
mov
lret
sub
pop
fdivrs
pop
xchg
add
adc
mov
ficomps
imul
stc
cmpsb
pop
dec
out
fwait
test
inc
or
dec
xchg
mov
in
addr16
xor
cld
or
and
adc
mov
pop
sub
cs
popa
mov
cmc
es
sub
repz
out
cmp
xchg
dec
dec
lcall
jo
push
shlb
mov
and
cli
or
mov
pop
lods
xor
push
adc
adc
cmp
lret
imul
mov
xor
in
dec
adc
in
fnstenv
mov
dec
push
shlb
sub
lahf
out
mov
ljmp
sub
mov
das
xchg
xchg
sahf
cmp
dec
outsb
in
movsl
and
pop
push
mov
pop
fidivrs
pop
imul
jo
mov
lret
cltd
push
fs
mov
xor
idivl
jecxz
push
sti
mov
repz
lret
pop
and
pop
popf
pop
xchg
loop
mov
bound
jmp
jg
leave
fldenv
push
das
jae
jb
jno
outsl
sbb
movaps
iret
icebp
push
mov
xchg
xor
xchg
fnstcw
test
sarl
mov
fwait
js
sub
lret
adc
dec
add
ss
mov
xor
repnz
rol
or
sub
mov
sahf
lcall
enter
sub
jge
and
ljmp
imul
cmp
xor
lahf
jle
dec
mov
sub
jnp
xchg
dec
out
mov
je
jle
mov
push
push
fs
add
ficoms
dec
sub
out
jecxz
rcrl
mov
mulb
mov
movsb
addr16
cltd
mov
stos
pop
incl
push
loop
sub
sarb
std
movsb
fidivs
push
loope
inc
cltd
repnz
mov
call
sub
push
out
pop
nop
xchg
stos
mov
cmp
inc
aad
pop
aas
cmpsl
scas
mov
mov
jnp
or
sbb
dec
and
xchg
mov
push
test
movsb
mov
or
pop
xor
movsb
ret
lods
cmc
sbb
gs
inc
insb
gs
mov
in
pop
mov
out
out
fisubs
or
lcall
jp
sub
repnz
out
clc
imul
js
divps
stos
inc
jecxz
push
notl
mov
inc
pushl
ljmp
outsb
mov
hlt
lods
shlb
sbbb
ret
loop
sbb
adc
sti
and
inc
pop
lret
sub
sub
inc
xchg
filds
outsb
getsec
je
popa
pop
sub
inc
push
or
pop
mov
call
arpl
rcr
out
mov
test
xorl
gs
jmp
sbb
jns
sub
jg
or
bound
lahf
or
dec
jmp
fistps
sahf
jp
mov
xchg
fisttpl
inc
adc
mov
add
mov
test
mov
and
pusha
fsubrs
xchg
add
sub
dec
out
push
mov
aam
sbb
pop
lock
aas
mov
cmp
dec
mov
je
scas
adc
fisubs
jp
and
scas
aam
push
cli
sub
ds
mov
mov
push
ja
lret
xchg
sub
arpl
fs
repnz
cmpsl
fisubs
out
adc
repz
mov
adc
mov
xchg
leave
dec
leave
pop
pushl
loop
rcrl
inc
push
pop
in
ret
out
mov
inc
add
push
cs
or
lock
outsb
mov
int
push
lods
push
lods
movsb
cmp
jg
ja
xor
lea
sahf
mov
or
mov
lret
xor
mov
das
sar
push
hlt
aas
adc
push
and
rcll
mov
inc
fdivrs
adc
push
inc
fcmovu
lret
dec
aaa
lods
dec
mov
xchg
int3
pop
xor
cmp
js
outsl
ds
adc
inc
pop
and
add
popa
pop
xchg
add
cmp
out
xlat
mov
sti
cmp
insl
mov
scas
mov
call
jno
or
mov
jge
test
xchg
jo
sub
cltd
mov
dec
fdivrs
pop
inc
sub
lock
sub
outsb
add
xchg
push
fsubrs
push
test
sub
enter
popa
inc
xchg
pop
cmp
cmp
mov
sbb
aam
repnz
repnz
sub
push
imul
cld
inc
stos
mov
shl
add
stc
cld
das
add
jne
xor
and
stos
xchg
gs
or
dec
les
xchg
mov
sbb
in
aaa
mov
mov
jmp
cmp
cmpsl
jge
mov
jnp
repnz
mov
rcl
cvttps2pi
div
loopne
es
repnz
push
xor
cld
mov
mov
nop
in
mov
bswap
out
hlt
in
nop
addr16
fwait
xchg
pushf
imul
sti
fdivl
les
outsl
pop
jne
aaa
test
hlt
popa
popf
adc
outsb
dec
hlt
insl
fnstenv
adc
shr
scas
int3
fstpt
push
xchg
sub
add
xchg
sbb
xor
repnz
rcr
push
sbb
test
mov
pop
addr16
add
sub
pop
dec
aaa
push
and
fstpl
mov
lret
int3
and
pop
outsb
mov
lods
cmpsl
orb
cmp
pop
pusha
in
lock
nop
fiadds
cmpsl
test
popf
pop
in
or
pop
loop
and
adc
lret
mov
xchg
pop
pop
pop
cmp
sub
jecxz
jmp
sub
jbe
mov
jmp
cmp
jge
out
hlt
jns
mov
das
jp
push
test
add
outsl
out
call
andl
mov
sub
or
lock
fcoms
aad
mov
add
out
inc
lds
in
rsqrtps
fstp
add
or
mov
imul
xchg
leave
rcll
sbb
pop
lcall
pop
dec
push
shr
xor
gs
pop
mov
push
insb
push
in
aas
cmpsb
lods
mov
pop
push
cmpsl
scas
add
sub
int
icebp
xchg
mov
outsl
lds
xchg
xorb
and
adc
dec
dec
shlb
cwtl
and
inc
jmp
xor
call
xor
jnp
dec
call
adc
adc
or
push
dec
clc
or
push
inc
or
inc
mov
ret
xchg
cltd
xor
add
jae
lods
push
push
xchg
loope
leave
pop
lock
xor
call
aaa
push
repnz
sbb
inc
mov
cmc
ret
les
pop
orb
jecxz
adc
loop
jle
pop
or
or
movsl
enter
sub
cmpsb
das
movsl
mov
inc
loopne
sbb
call
out
sub
imul
pop
jecxz
jge
sarl
andl
stc
push
xchg
push
cwtl
fiadds
lods
int
jge
and
inc
int3
imull
inc
data16
je
jo
xor
frstor
rorb
dec
js
pop
sub
xchg
push
pop
jo
cmp
fists
arpl
push
scas
xchg
mov
stc
in
or
test
push
jle
subb
mov
mov
sbb
movsl
lret
sub
push
enter
or
inc
gs
push
and
sub
addr16
addb
jo
call
stc
leave
cld
mov
and
inc
addr16
je
or
inc
daa
dec
sbb
js
jo
iret
pop
stc
jmp
mov
push
data16
pop
mov
lret
jo
cwtl
fisttps
sbb
sub
jp
lret
cmp
adcl
mov
mov
imul
xchg
es
mov
fidivl
out
mov
sti
inc
jns
xchg
notl
jns
xor
adc
shll
outsl
mov
push
mov
push
orl
xor
sbb
inc
dec
xchg
std
ss
xchg
sbb
inc
out
fsubr
pop
aas
lret
mov
not
js
dec
in
push
nop
sbb
lcall
in
sub
lea
jg
mov
cli
pushl
fnstsw
pop
test
lds
mov
add
cmp
adc
pslld
out
js
xor
sbb
adc
mov
cmp
mov
lea
scas
lret
ret
xor
pop
push
mov
or
xchg
jno
push
jmp
mov
jbe
push
cmp
sahf
and
loope
jge
je
mov
fcmovnu
data16
bound
test
push
cmpsb
loope
sub
cmc
call
in
push
dec
or
dec
fsub
or
rcrl
aas
in
fxch
sbb
jecxz
test
test
scas
in
push
lods
add
sbb
mov
leave
stos
add
mov
scas
insl
orb
sbb
pop
das
int3
incl
push
dec
arpl
fidivs
daa
xor
xchg
sbb
int
and
lods
mull
mov
dec
cmp
testb
pop
cmpsl
std
push
xchg
jo
and
or
jl
ja
in
in
loope
in
inc
jns
imul
insl
xchg
push
in
out
mov
and
popa
repz
jae
xor
out
imul
mov
cmpsl
je
test
out
shll
out
push
arpl
rcl
sti
mov
in
mov
icebp
pop
mov
sbb
shlb
ja
int3
cmp
ljmp
hlt
movsb
sub
out
push
push
push
cmpsb
fiadds
cmovns
ror
push
or
ja
fwait
enter
divb
or
lret
shll
inc
lods
mov
int3
mov
movsb
mov
cmp
inc
cmpsb
pop
sub
in
sub
aaa
shll
adc
mov
adc
js
in
fldl
push
push
push
mov
pop
and
cmp
mov
inc
sar
push
repz
aas
cmp
mov
shl
push
loope
sbb
fisubl
in
adcb
adc
lds
sbb
aad
xor
mov
dec
rcr
dec
pusha
cmp
jecxz
inc
loop
ret
sub
icebp
popl
jecxz
inc
add
hlt
cmp
pop
push
xor
into
mov
fwait
in
mov
dec
subl
adc
sub
or
adc
mov
call
movsl
insb
addr16
cmp
fcomip
stos
add
jne
ljmp
fsts
imul
movsb
movsb
mov
xor
push
push
xchg
lcall
jno
or
mov
and
cmp
mov
data16
aas
pop
push
mov
into
cmp
pop
and
push
imul
jmp
shlb
lahf
mov
jl
ljmp
mov
dec
rorb
roll
das
mov
call
add
adcl
shlb
jp
add
fdivs
pop
popl
fsubl
shl
adc
ficoms
notl
cmp
outsb
xor
jle
stos
in
insb
push
mov
cmpsl
pop
xchg
or
notb
pop
std
push
jns
mov
adc
or
in
ret
mov
or
mov
xchg
enter
shrl
mov
xchg
mov
data16
cmp
in
mov
repz
pop
lock
or
push
jmp
das
sbb
cmp
aam
and
sbb
jne
rorb
rdtsc
jne
xchg
cmpb
mov
js
das
xchg
xchg
sbb
mov
or
jg
push
xor
mov
mov
test
fldt
dec
mov
gs
in
mov
ret
cmp
in
fs
xor
lock
in
loopne
lret
stos
pop
popf
fisubrs
jno
mov
xor
lahf
fcomps
leave
adc
sbb
aaa
and
sub
adcl
xor
fucom
and
adcl
or
sahf
lock
sub
mov
sbb
dec
scas
push
fnstsw
adc
sbb
xor
cmp
add
repnz
sti
inc
mov
lcall
cmp
repnz
xor
mov
cwtl
pop
out
jb
xor
adc
or
iret
cmp
cmp
pop
test
cmpsb
mov
sub
or
imul
enter
repz
xchg
add
faddl
dec
sbb
adc
stos
std
pop
out
xchg
push
lahf
iret
fbld
popf
scas
stos
dec
mov
sub
fnstsw
jmp
dec
push
pop
scas
int3
pop
mov
add
sbb
mov
lods
mov
loop
scas
pop
sub
xlat
push
test
lret
shrb
ja
adc
imul
ficompl
lahf
jmp
leave
lret
aad
lods
xchg
push
call
mov
or
sub
pop
inc
movsl
sbb
adc
sahf
sarl
rorb
xchg
push
jne
leave
cmp
mov
test
daa
lahf
imul
mov
mov
adc
rorl
or
or
cmp
cwtl
cld
rclb
out
mov
daa
mov
pop
shll
lret
ror
cmp
push
jne
cltd
inc
mov
addb
pop
xor
pop
dec
popf
add
inc
and
xchg
jo
negb
push
insb
movsl
stos
mov
popf
test
cmp
test
mov
call
in
out
dec
dec
pop
outsl
test
pop
cmpsl
jecxz
inc
pop
mov
mov
cmpsl
mov
das
flds
loopne
xor
insb
mov
lret
add
push
xor
xor
ror
mov
repnz
test
sub
icebp
or
adc
jmp
pop
lea
mov
lcall
sub
das
pusha
aas
lock
jns
int
std
sbb
das
xchg
sbb
sub
xor
insl
jle
pop
outsl
xor
imul
or
mov
pop
mov
jp
push
xchg
jb
push
push
js
out
inc
stos
mov
fs
in
imul
jmp
add
repz
das
jae
add
or
out
dec
out
cwtl
mov
cmp
shll
out
stos
dec
dec
fbstp
aam
bound
cmp
dec
cmp
cli
jo
ss
cmpl
cmp
test
cwtl
mov
ss
mov
orb
outsb
insl
inc
mov
xchg
test
or
test
out
cltd
sub
hlt
inc
mov
insl
mov
xchg
mov
shrb
add
shlb
xorb
aaa
xchg
shl
inc
aaa
xchg
push
pop
adc
xchg
leave
fsts
test
popa
xor
adc
icebp
test
sub
xor
sti
mulw
jge
int
fdivs
push
flds
mov
fadds
push
arpl
bound
lcall
xlat
mov
jle
push
insl
mov
lret
push
mulb
sbb
loope
mov
dec
in
cli
mov
mov
add
add
xor
insb
orb
mov
adc
push
lcall
or
jns
iret
adc
in
inc
sub
sbbl
insb
and
xchg
enter
xchg
jmp
data16
iret
dec
xchg
cltd
mull
shll
sbb
movsl
cli
stc
mov
xor
scas
dec
dec
push
stos
subl
sub
cmpsb
push
out
inc
dec
lock
ss
cmp
scas
mov
outsb
divl
or
fsubl
mov
sbb
push
mov
loop
mov
into
jnp
and
sbb
mov
push
pop
testb
insl
push
lea
cmpsb
sbb
cld
push
sub
iret
and
mov
ret
push
or
les
push
fidivrs
mov
jl
shl
dec
mov
cmp
push
push
pop
stos
add
or
mov
imul
mov
fwait
outsb
dec
or
aaa
sub
in
xchg
imul
int3
dec
into
mov
lods
push
xlat
adc
add
adc
mov
inc
test
adc
std
das
dec
int
cwtl
scas
push
jmp
shr
fwait
cmp
lods
sub
repz
int
cli
sbb
jnp
push
ja
rcrb
xlat
dec
popa
and
pop
sbb
fldenv
scas
push
movsl
mov
mov
insb
adc
jle
xchg
xor
lgs
jmp
lea
je
inc
xor
dec
dec
mov
dec
insb
fistl
out
out
popa
les
jmp
imul
test
jp
dec
aas
lea
pop
stos
push
jnp
add
xchg
dec
inc
sub
or
jmp
lods
scas
outsb
roll
ja
sub
sub
idivb
jns
and
in
ret
repnz
aas
mov
clc
cmp
cli
mov
pop
push
push
cmpsl
into
pop
cmp
loopne
hlt
mov
adc
clc
mov
jmp
cmpsl
jg
out
push
pop
clc
xchg
dec
mov
jl
push
or
sub
cmpsb
sbb
mov
sub
popa
ucomiss
aam
dec
push
icebp
add
push
pop
sub
xchg
shll
push
test
stos
into
push
mov
test
sbb
pop
adc
add
cmp
repz
mov
jbe
dec
xor
mov
cmp
pop
cmc
in
popa
and
enter
add
mov
mov
daa
aaa
int3
ret
pop
addr16
pusha
negb
arpl
addr16
or
in
or
dec
iret
daa
adc
es
clc
lods
xor
jg
ja
sarl
sub
mov
push
add
jl
inc
add
fs
stos
ret
push
lea
mov
pusha
jge
push
repnz
and
push
testl
push
rcrl
cmpsl
adc
out
pop
mov
xlat
adc
push
mov
js
ret
dec
push
xor
mov
ret
push
sbb
mov
mov
sbb
dec
js
clts
add
hlt
mov
nop
pop
call
pop
xchg
fdiv
cltd
push
xchg
adc
dec
xor
stc
jecxz
popa
inc
dec
or
call
cmp
and
jbe
lods
jp
dec
out
stc
inc
fidivs
or
pop
jge
push
fistpl
loope
mov
popa
cmp
cwtl
gs
adc
inc
push
xchg
xchg
cwtl
jg
push
mov
test
shl
push
das
jmp
nop
outsb
xor
lds
pusha
mov
fld
aas
jg
mov
cmc
sbb
bt
cli
xchg
leave
cld
dec
ret
push
fbstp
cs
pusha
inc
pop
push
es
out
xor
jp
fs
inc
mov
out
movsb
fs
mov
int3
stos
cmpsb
test
jg
xor
mov
iret
mov
nop
inc
adc
mov
mov
repnz
in
mov
fdivrs
xorb
mov
stos
and
pop
into
sbb
lock
push
pop
sub
push
jge
xchg
jnp
negl
hlt
push
inc
loop
jg
movsl
pop
or
mov
and
inc
fwait
mov
xchg
fcomi
xchg
xor
aad
loope
scas
rep
xor
sub
pop
ja
jno
add
xor
cmpsb
ret
or
push
push
mov
negb
ret
std
cmpb
pop
ja
mov
and
hlt
or
ret
cli
and
xchg
push
push
mov
pop
sub
sub
addb
inc
adc
sti
out
fwait
sub
sti
and
jbe
cltd
push
outsb
aas
fadd
inc
stc
and
add
out
jecxz
test
aas
add
ja
jo
lret
jno
data16
out
xchg
mov
je
sbb
dec
cli
push
sub
nop
cmp
and
lahf
mov
inc
mov
xchg
sbb
sbb
mov
pop
push
cmpsb
mull
mov
cmp
outsl
sbb
pop
jae
in
mov
insb
adc
xor
jl
stc
mov
je
pop
dec
add
adc
aam
pop
adc
push
sbb
sarl
aaa
lods
imul
repnz
adc
pop
add
mov
xchg
out
push
inc
daa
jns
movsl
test
cmc
xchg
pop
in
pop
in
fwait
ss
or
lock
push
int
fsincos
call
hlt
imul
data16
mov
rol
fistps
outsb
cmpsb
push
push
jns
xchg
aas
sahf
xor
addl
adc
mov
push
test
popa
fwait
sub
int3
jecxz
mov
push
lea
sbb
icebp
cmp
data16
add
popa
les
jns
jne
pop
lcall
xchg
mov
test
clc
sti
dec
xor
sub
in
inc
int3
jns,pn
clc
mov
jbe
int3
test
or
cmc
inc
aam
push
in
jmp
dec
stc
cli
out
out
push
loopne
ss
inc
test
es
sub
dec
and
mov
mov
sub
cmp
scas
sub
js
push
sub
push
dec
ja
push
inc
mov
rorb
or
mov
inc
xchg
mov
enter
sub
test
or
mov
leave
xor
xor
inc
icebp
out
mov
adc
mov
or
dec
mov
mov
push
xchg
jmp
fldl
in
lods
in
test
dec
jno
add
sub
mov
ds
or
out
hlt
aas
or
fwait
mov
loop
inc
xor
mov
xor
mov
pop
jo
jne
test
mov
movsb
repz
insb
iret
movsb
test
push
adc
out
mov
mov
mov
ljmp
xchg
std
jmp
mov
outsl
dec
jno
pop
shrl
lock
mov
test
out
inc
mov
push
push
mov
mov
orl
and
pop
lret
and
mov
cmp
push
mov
xchg
sarb
enter
cli
xor
pop
jp,pt
mov
push
pop
enter
dec
les
sub
dec
mov
out
mov
cmp
shlb
cmc
leave
and
call
push
divb
cmp
insb
int3
and
pop
dec
inc
insl
push
pop
cmp
jle
dec
sub
pop
in
sahf
dec
mov
mov
mov
sub
jp
or
ss
mov
sarl
add
add
test
decl
setno
cmp
pop
inc
sbb
jge
cmp
jmp
sbb
or
pop
scas
cmpsl
push
push
fistpll
adc
sbb
xor
and
push
filds
xchg
or
jle
jmp
jl
mov
repnz
pop
mov
xchg
loopne
cmpb
sbb
sub
dec
and
stc
outsl
xor
and
mov
negl
ret
pop
dec
fnstcw
rcll
dec
inc
aam
lds
lahf
and
xor
fdivs
inc
or
pop
int
pop
stos
pop
xchg
xchg
lahf
cltd
mov
repz
pusha
xor
ror
shll
jno
pop
stos
inc
mov
mov
xchg
jne
sbb
pusha
add
jbe
shrl
pop
divb
repnz
push
clc
sbb
xchg
test
hlt
or
xor
xchg
push
mov
mov
jmp
bound
mov
imul
insb
cmp
mov
pop
dec
pop
adc
or
jmp
in
sbb
mov
sub
and
leave
shlb
pop
dec
sub
cmc
push
je
fucomp
pop
js
nop
cld
inc
pop
stc
mov
ds
cmp
insl
and
pop
cmp
xchg
repz
xchg
clc
mov
pusha
ror
sbb
push
sub
pop
mov
test
inc
adc
jp
jb
mov
pop
adc
into
xchg
push
fwait
push
fsubrs
add
and
popa
mov
sub
hlt
sbb
mov
and
stos
pushl
divb
repnz
fwait
dec
jmp
dec
ret
push
ja
push
sbb
call
adc
sar
mov
fnstsw
push
cmp
jb
daa
or
cmp
jle
mov
add
leave
test
cmp
mov
jge
pop
ja
adc
mov
dec
icebp
sbb
inc
hlt
ja
repnz
mov
and
roll
aaa
mov
jl
sbb
adc
mov
cwtl
cltd
out
adc
je
dec
lock
push
cmp
inc
or
out
sbb
aaa
cmp
mov
dec
mov
rclb
xchg
fsubrs
cmp
mov
dec
inc
jns
cltd
lods
push
stos
push
fbld
fmulp
in
adc
das
mov
sbb
cli
cmpsb
add
mov
push
mov
xchg
xchg
cmp
pop
adc
xchg
pop
inc
test
mov
ret
mov
aad
addb
fiaddl
push
test
mov
sub
sbb
sbb
scas
dec
jecxz
sub
jg
outsb
dec
mov
rolb
push
mov
pop
xchg
add
and
test
adc
add
xor
pop
lods
pop
inc
adc
leave
push
movl
js
int3
pop
cwtl
cmp
sub
or
stos
fnstsw
sbb
mov
movsb
or
jge
in
mov
lock
xchg
mov
mov
js
xchg
into
and
pop
jb
and
roll
stc
cltd
inc
mov
xor
in
fsubs
int
mov
rcrl
std
addb
in
sub
pop
sahf
pop
cmc
enter
sbb
gs
cmp
pop
iret
shlb
add
cmp
inc
xchg
and
pop
sub
xchg
inc
xchg
sarb
loop
xchg
shrl
das
mov
cmp
mov
out
pop
or
cmp
jbe
jns
scas
sbb
cmp
pop
sbb
dec
dec
sub
outsb
notl
push
sub
clc
mov
sbb
add
mov
cwtl
cmp
in
iret
adc
inc
daa
outsl
push
inc
lods
sbb
fmuls
loop
insl
enter
mov
dec
js
adc
push
cli
jmp
cmp
xchg
enter
das
inc
lahf
mov
frstor
dec
xor
xor
sub
jb
sahf
xor
push
or
pop
or
inc
cwtl
sub
pop
popf
fs
mov
sarb
sub
sbb
pop
add
jae
lret
cmpsl
and
imul
xchg
js
lods
add
sar
out
jg
pop
mov
hlt
addr16
cmc
mov
int
pop
ret
loope
pusha
or
xchg
out
push
mov
sub
fstl
push
mov
adc
dec
add
ret
push
or
into
xchg
add
in
fcomip
inc
push
inc
push
shrb
cmp
mov
xchg
or
stc
imul
fwait
xchg
sti
mov
jg
mov
push
clc
cltd
fistps
fnop
mov
fwait
aaa
cwtl
pop
test
add
cmp
mov
and
aas
sahf
inc
pop
scas
repz
fdivs
mov
subl
call
mov
or
decl
hlt
mov
push
xchg
popf
in
out
and
dec
sbb
fs
pusha
inc
imul
mov
mov
sbb
dec
pop
xchg
push
and
pushf
cmp
ret
int3
sti
add
xor
je
inc
xchg
test
call
mov
in
inc
push
test
div
imul
imul
dec
jne
movsb
push
dec
mov
orl
adc
mov
xchg
sub
aad
lret
sub
mov
pop
imul
add
and
xor
push
adc
cs
inc
inc
cmp
cmp
das
xchg
popa
jge
ficompl
popa
jo
ss
test
daa
test
hlt
pop
mov
ljmp
fbstp
xchg
lret
fmuls
sub
add
popf
pop
ss
push
push
cmc
sbb
xor
ds
or
fisttpl
sub
jns
ds
faddl
dec
jg
movsb
cmp
push
imul
les
xchg
dec
mov
cmpsl
or
pop
adc
fisubl
jo
lret
dec
mov
xor
jb
cmpl
add
call
push
cli
pop
inc
fildl
cld
insb
jae
movsb
sbb
jecxz
xchg
test
mov
in
mov
cs
cmp
push
mov
fneni(8087
xchg
std
pop
adc
sub
or
xor
cmp
movaps
rclb
iret
push
jns,pn
mov
pushf
data16
pushl
jmp
insl
add
jbe
cmp
in
mov
mov
ucomiss
adc
mov
scas
or
sub
rcll
je
mov
or
mov
out
sbb
or
pushf
pop
ss
imul
jp
push
push
pop
mov
jns
loope
dec
mov
add
add
test
test
jno
stos
xchg
or
fidivl
in
bound
mov
outsl
dec
out
dec
xor
push
out
jmp
repnz
adc
cwtl
xor
scas
push
stos
enter
xchg
push
and
cwtl
frstor
jl
jge
lret
dec
xchg
xor
sub
mov
add
sbb
or
dec
cld
out
dec
das
sub
out
int3
push
push
jge
and
ret
mov
xchg
out
psllq
push
mov
or
dec
imul
inc
dec
mov
add
push
mul
sbb
dec
adc
leave
add
mov
dec
stos
push
cld
xor
cld
std
outsl
in
mov
jmp
insl
data16
notb
arpl
lahf
dec
imul
addl
pusha
inc
sahf
jl
ljmp
stc
cmp
add
movsl
cmp
sub
mov
mov
cmc
xchg
push
or
cmp
repnz
imul
ss
stos
sbb
xchg
lret
or
push
inc
sub
pop
ljmp
mov
mov
fnstenv
push
mov
ja
add
imul
mov
movsb
out
popf
mov
jno
adcl
stc
pop
sbb
and
fs
push
xchg
jle
lcall
push
sbb
lahf
and
scas
jmp
xchg
ljmp
add
adc
sar
bound
sub
push
xchg
call
or
xor
jg
jl
inc
scas
cmpsb
jb
cmpsb
imul
add
jnp
fldt
add
jle
fcomps
jmp
rol
sbb
add
sti
jge
lcall
xchg
mov
sbb
cltd
fdivs
int3
sbb
dec
out
xor
xor
mov
shrb
pop
pop
dec
sub
in
repz
inc
hlt
push
jl
xchg
sbb
add
loope
stos
mov
dec
jns
popa
test
bound
fisttpl
loope
mov
loopne
mov
push
xor
enter
pop
dec
jae
xchg
push
push
adc
out
push
fldl2e
jmp
test
dec
das
lahf
imul
jb
jo,pt
jbe
sub
adcl
shlb
mov
xor
cltd
xor
dec
loop
adc
xrelease
aaa
dec
testb
sub
cwtl
pusha
mov
gs
test
in
leave
int
cmc
add
stos
in
mov
das
mov
cmp
mov
scas
mov
cmp
scas
inc
adc
shr
mov
adc
sahf
scas
and
ljmp
mov
sub
push
xchg
lds
int
out
fmul
jmp
xor
xor
in
bt
push
jnp
test
adc
lret
lret
icebp
and
sti
adc
jle
fs
jns
dec
push
mov
sbb
out
loop
stos
frstor
fbstp
pop
pop
mov
jg
icebp
adc
iret
xchg
inc
jo
mov
adc
xor
sub
or
push
mov
or
cmpsb
nop
testl
sarb
cmp
push
pop
add
out
int
out
test
mov
enter
push
in
push
adc
lahf
nop
dec
push
xchg
sbb
ds
fcomps
rclb
fmull
fdivs
ds
sti
pop
int
ds
enter
xor
cmp
dec
mov
add
out
mov
test
sti
cmp
sar
inc
int3
mov
call
pusha
jmp
xchg
shlb
outsl
dec
stos
cmpl
shlb
mov
push
adc
inc
mov
cmp
arpl
ja
xor
iret
add
jp
mov
ficomps
jmp
loopne
xlat
ret
sub
lcall
sub
insl
ljmp
inc
es
rorb
push
cmp
rorl
str
stc
jnp
xchg
in
mov
jne
dec
cli
jne
notb
xchg
ret
sar
int3
sub
pop
dec
ss
cmc
cmpsl
pop
cld
mov
out
out
xchg
jle
sub
sub
or
mov
fcomp
add
repz
jmp
imul
sub
jge
cmp
cmp
or
mov
mov
inc
push
lea
lods
addl
and
or
fnsave
and
arpl
xlat
fdivl
or
outsl
hlt
lahf
addl
aad
jge
xchg
mov
mov
jmp
testl
out
mov
sahf
incl
pop
imul
fbld
cmpsb
sti
mov
les
test
out
cli
outsl
pop
mov
mov
lock
stc
mov
imul
sarl
mov
shrb
repnz
cmc
push
popa
mov
mov
jbe
push
push
sbb
cmc
test
movsb
aaa
or
repnz
xchg
in
xchg
jae
fnsave
fisttps
repnz
pushf
or
mov
mov
xor
adc
in
cltd
add
sbb
mov
sub
mov
lds
je
inc
leave
and
and
inc
pop
aas
loopne
or
imul
into
cmpsl
lcall
xor
in
mov
popf
iret
adc
or
sub
cmp
cmp
vmulsd
add
pop
sbb
mov
gs
dec
ja
pop
inc
lea
pushf
ror
and
cwtl
dec
mov
or
int
repnz
mov
lcall
dec
pop
pusha
mov
outsb
add
jle
push
insl
scas
test
mov
imul
push
mov
pop
mov
jmp
cmp
mov
je
imul
cmp
and
nop
movsb
xchg
stc
cltd
lcall
mov
lods
add
mov
cmp
mov
mov
sti
pop
dec
stos
sbb
cmc
icebp
jns
enter
aaa
mov
stos
jmp
xor
fidivrl
dec
push
or
push
ficomps
and
divl
inc
mov
fstps
push
icebp
or
addr16
sarb
cmp
mov
into
lea
fdivrl
mov
lea
jmp
pop
sbb
iret
sub
cli
xchg
out
repnz
nop
outsl
pusha
in
outsb
mov
mov
lret
imul
jecxz
jo
pop
mov
ljmp
adc
and
cmp
push
xchg
mov
xchg
pop
aas
cmpsl
mov
cmc
inc
inc
cmc
push
in
sub
cmpsl
iret
adc
daa
mov
jo
sbb
and
xor
or
fists
ret
push
pop
mov
sarb
jo
mov
mov
or
xor
shl
andb
mov
xor
repz
xchg
cmp
js
je
lahf
jnp
in
lea
cmp
mov
stos
jno
push
pop
mov
int
mov
or
and
dec
and
addr16
int
mov
imul
add
negb
sti
or
mov
and
repnz
mov
clc
cmp
jmp
rol
test
cwtl
lcall
hlt
mov
jne
jl
scas
stc
adc
mov
lods
dec
movsb
jl
scas
jg
adc
lcall
cmp
hlt
inc
sub
mov
popf
adc
jg
adc
or
or
shrl
xchg
mov
sub
aad
jnp
lods
jmp
sbb
test
in
pop
push
adc
jmp
or
repz
shll
divl
pop
pop
loopne
ret
mov
push
pop
inc
out
jg
and
lret
dec
push
ret
nop
jne
ret
dec
inc
sub
ret
enter
xchg
cmp
les
insl
ret
repnz
iret
aaa
sbb
dec
cs
mov
sbb
test
xor
fstp
dec
in
lcall
mov
jo
jne
jns
sbbb
out
adc
push
popf
scas
repnz
fldenv
xchg
repnz
inc
scas
decb
aas
sbb
pop
or
ljmp
push
sbb
loop
xchg
adc
sub
cmc
mov
jmp
jmp
push
mov
inc
imul
push
outsb
lret
addr16
dec
lds
xorl
sahf
sub
mov
pop
push
enter
push
loop
das
ret
or
xchg
fs
movsl
xchg
insb
xchg
xor
dec
addb
xchg
mov
ffreep
sarl
in
sub
mov
fldl
aad
repnz
iret
mov
xchg
xchg
aad
push
js
in
loopne
stc
fdivs
in
jae
imul
popf
and
mov
mov
cltd
out
in
mov
jp
sbb
sbb
movsb
dec
loope
in
xlat
addr16
mov
xlat
lock
rcll
pop
push
push
stc
into
imul
jmp
lret
aad
xor
mov
inc
mov
dec
mov
pop
dec
mov
jl
mov
dec
nop
ret
fcmovb
jmp
andl
xchg
and
jmp
out
loopne
sbb
inc
aam
push
clc
test
out
ret
adc
or
add
cs
sub
xchg
mov
movsl
mov
mov
or
sbb
pop
inc
fbstp
push
cmpsb
decb
mov
xchg
cmp
pop
and
lds
dec
repz
clc
push
push
sti
push
mov
fwait
loope
fstpl
sub
das
mov
pop
xlat
mov
scas
int3
inc
push
scas
stos
mov
mov
sub
addr16
push
mov
xor
dec
rorb
imul
mov
and
jle
xor
aad
pop
mov
push
int3
xchg
addr16
sbb
loop
aaa
mov
xchg
sub
cmp
jl
sub
and
cmp
popf
cltd
aas
xor
mul
cld
mov
popa
pop
pop
or
jl
push
pop
ret
in
ljmp
in
daa
pop
mov
cmp
jp
imul
xchg
xchg
arpl
adc
inc
das
cmp
inc
fwait
mov
jge
fsts
pop
adc
or
arpl
dec
insb
xor
icebp
add
ds
mov
std
xchg
cmpsb
and
jae
inc
mov
loope
ret
stos
sbb
js
sahf
sub
jmp
pop
pop
fcmovne
mov
xchg
mov
pop
inc
add
push
fstl
mov
xor
mov
mov
sub
add
sub
or
xor
in
xor
mov
gs
rcrb
add
jge
mov
aaa
xor
cmp
pop
adcb
sarl
pop
cmp
outsl
jnp
fidivl
mov
out
xor
cmc
pop
icebp
xchg
or
jo
adc
fcoms
mov
faddl
loop
jbe
xor
lret
inc
jne
push
stos
movsl
call
bound
gs
popf
or
cmc
call
mov
cmpsl
aad
js
cld
incl
fcomp
pop
aaa
je
push
out
cmpsb
in
jecxz
mov
fninit
jp
xchg
jnp
xlat
lods
sbb
shll
fsubs
mov
mov
pushf
pop
gs
leave
cmp
jo
mov
roll
xorb
orb
sub
mov
fiaddl
or
adcl
jo
fisubl
mov
icebp
sahf
xor
inc
cmpb
fisubl
cltd
xlat
cmpsl
add
nop
adc
mov
and
lret
adc
jmp
xchg
add
int
push
or
xchg
push
jbe
aas
pop
outsb
mov
mov
loope
mov
sbb
xlat
cvttps2pi
cltd
jmp
int
js
pop
mov
iret
ret
push
pop
cmpsl
rcrb
mov
inc
mov
cmp
movsb
loope
mov
sub
int3
add
pop
inc
cmovns
jbe
and
subl
mov
popf
adc
sbb
mov
xchg
lds
push
pop
xlat
or
pop
cmp
pop
pop
adcb
outsb
xor
push
or
jle
mov
pop
enter
pop
sbb
orb
lock
scas
cltd
ret
lret
pop
add
adc
cmp
je
popa
adc
xor
xchg
out
sub
jne
push
mov
jp
sahf
xchg
jmp
imul
sbb
xor
pop
mov
test
mov
mov
fs
mov
jmp
in
sbb
dec
fwait
dec
dec
repnz
cli
int
cli
fcomip
inc
lahf
pop
in
and
mov
xchg
mov
repnz
add
popa
sbb
aad
dec
imul
inc
into
xchg
add
lcall
pop
rcrb
ret
popa
xchg
sub
aas
ret
pop
fistpl
cmpsl
popa
dec
fadds
xchg
dec
icebp
cmp
gs
sahf
mov
jge
adcl
inc
mov
sub
fcmovnu
inc
ss
and
lds
test
loop
cmp
popf
push
je
pop
lds
or
sbb
push
cwtl
imul
in
pop
rorb
fbstp
jno
cmp
cmp
fldt
into
mov
sbb
sbb
subb
outsl
data16
xor
add
in
sbb
fdiv
xchg
xor
jne
mov
or
aam
xchg
dec
inc
pop
push
int3
push
mov
jno
ret
dec
icebp
xor
out
and
mov
inc
mov
xor
and
addl
movsl
cltd
pop
sub
push
std
pushf
xor
test
mov
mov
call
mov
outsb
xchg
push
mov
xchg
ja
dec
inc
imul
jecxz
sub
inc
xor
mov
test
popa
xchg
xor
ljmp
clc
mov
xor
insb
fsts
pop
hlt
push
loope
fists
ror
push
stos
jge
fistpll
xor
pop
fs
mov
mov
roll
inc
xchg
call
call
pop
pop
dec
ss
mov
std
jge
sub
aaa
es
or
scas
or
imul
ja
rcrl
mov
test
repz
mov
push
xchg
dec
lret
das
xlat
inc
mov
pop
movsb
push
in
ret
mov
mov
je
mov
aas
mov
jl
adcl
mov
cmp
inc
mov
rorl
pop
out
iret
push
shll
sahf
jle
pop
dec
mov
add
add
dec
mov
mov
mov
sub
pop
lods
mov
pop
stos
ja
mov
lret
jge
mov
bound
sub
filds
sub
jl
dec
xorl
repz
leave
push
mov
jnp
add
push
or
repz
jne
stos
std
or
or
dec
adc
mov
cmpsl
imul
or
and
lret
jbe
xchg
or
push
xchg
adc
shlb
xor
adc
popa
jo
leave
sub
popf
das
xlat
and
loope
push
jge
cmp
in
cld
popa
lret
add
arpl
pop
and
aad
inc
add
cmc
je
lcall
movsl
dec
inc
test
mov
loop
cs
jnp
les
adc
sbb
sub
inc
xor
xor
lods
push
std
and
fisubl
dec
mov
ret
or
jge
shl
out
imul
mov
mov
stos
or
and
adc
pxor
call
xor
inc
bound
out
mov
cli
dec
jmp
xor
mov
in
or
rcrl
aaa
jmp
pop
stos
out
stc
iret
das
xchg
prefetch
lretw
scas
cmp
jns
mov
cmp
inc
inc
inc
pop
lahf
mov
sub
or
shll
fs
movsl
cmp
repnz
test
mov
mov
mov
aam
mov
inc
aam
es
int
adc
stos
vpmulhw
xor
mov
mov
icebp
cmp
mov
mov
ror
mov
mov
scas
lea
inc
push
hlt
cmc
sti
data16
and
ja
xchg
hlt
scas
sub
mov
sarl
scas
add
ficoml
or
in
fs
mov
lahf
dec
inc
fwait
jo
aaa
mov
pop
mov
stos
dec
dec
dec
loopne
dec
sbb
inc
ja
test
sub
sbb
scas
inc
push
scas
sarb
loop
and
sbb
mov
inc
sti
lcall
push
je
in
shr
adc
mov
lock
adc
adc
icebp
mov
addl
sub
push
xorl
jae
mov
dec
xchg
cmp
cmp
aaa
sub
inc
scas
rcr
mov
fistpll
aad
mov
arpl
xor
and
or
xor
push
inc
jns
cmp
daa
or
dec
xor
call
push
and
mov
cmp
sbb
pop
mov
test
inc
repz
aas
jge
fbstp
xchg
aam
movsb
jmp
cltd
push
and
das
mov
mov
mov
jge
iret
test
pop
pop
xchg
outsl
aaa
mov
pop
fidivrl
lcall
cmpsl
loope
lods
fidivs
pushf
sbb
leave
out
imul
jp
adcl
xor
les
jno
pushf
mov
sbb
ja
mov
mov
xchg
pop
data16
inc
lds
sub
push
jp
mov
and
mov
fistpll
cld
push
dec
int3
dec
ret
fiaddl
push
ja
aaa
or
cs
cmp
push
push
push
ja
jb
nop
decl
inc
jge
jl
insl
push
add
mov
dec
das
fscale
sub
jp
lea
mov
dec
jne
jb
mov
scas
jne
mov
pop
cmp
mov
fisubrl
fidivs
push
enter
mov
pop
add
jnp
out
mov
pop
ret
sbbb
cmp
inc
jno
fcmovnu
test
jnp
pop
cld
pop
xor
pop
test
cmc
pop
lods
xchg
mov
pop
jno
outsl
jae
sbb
jg
xor
lds
lahf
mov
lret
push
aas
and
clc
movsb
test
xchg
cmp
mov
iret
adcb
cmc
jae
mov
push
jb
ret
or
and
pop
sub
fcoml
out
or
sahf
xchg
leave
inc
or
add
or
mov
cmp
ljmp
mov
aaa
iret
jns
jbe
test
dec
popa
shl
xchg
or
jp
fstpt
leave
test
and
in
cmp
push
xor
test
enter
mov
and
add
inc
xchg
data16
inc
leave
ret
mull
popa
sti
js
mov
stos
loopne
pop
lahf
call
add
mov
inc
pusha
out
sub
mov
xchg
mov
jecxz
adc
pop
leave
movsb
adc
xchg
cmpsb
sub
jne
aas
movq
clc
mov
dec
cmp
push
in
lret
int
push
jg
out
mov
sbb
clc
inc
out
jae
sbb
fwait
aaa
out
imul
stos
sub
inc
aas
lahf
mov
fs
scas
add
mov
fwait
sbb
ds
inc
mov
inc
outsl
lcall
fcmovnb
movsb
fldl
ret
ljmp
sub
stc
mov
and
gs
test
adc
repz
roll
addl
push
xchg
sti
daa
jg
or
jmp
pusha
xchg
lds
jle
sub
add
jo
jp
push
xor
je
sub
pop
xchg
add
xchg
xchg
jbe
push
mov
adc
push
push
adcb
xchg
xor
enter
sbb
in
cmp
pop
int
cmp
popa
pop
dec
cmp
sbb
ret
add
rcrb
lds
aaa
shlb
test
push
or
adc
dec
mov
or
loop
inc
stc
cmp
jne
out
pop
inc
outsl
dec
cmp
xchg
inc
mov
call
xchg
dec
fadds
inc
cs
xor
dec
movsl
repnz
out
cmp
sbb
or
call
cmp
sahf
push
jle
push
sar
js
mov
sub
stos
std
andb
mov
sbb
ljmp
xor
mov
rcl
or
xor
and
js
ficompl
xor
sbb
jae
jmp
sub
mov
sbb
adcl
int3
pop
or
pusha
mov
pop
sub
pusha
pop
scas
outsl
adc
jg
sti
and
ss
jecxz
push
cmp
mov
loop
cltd
push
cmp
notb
adc
test
add
insb
cwtl
dec
jb
mov
dec
mov
aad
mov
cmpsb
pop
mov
jecxz
push
dec
or
cli
xor
or
mov
lret
push
push
andl
add
cmp
imul
outsl
and
xor
sub
fwait
pmaxub
jge
lods
sbb
jmp
addr16
pop
and
mull
fiadds
call
push
xchg
cli
dec
insl
sub
fbld
stos
mov
dec
lahf
and
sub
jp
dec
cli
daa
add
push
fs
push
sbb
subl
sbb
ret
mov
mov
sub
mov
mov
cld
sahf
and
xor
xchg
nop
xor
fwait
jl
jg
daa
aas
out
sbb
into
out
jl
mov
jl
daa
push
adc
int3
sbb
sbb
nop
cmp
xchg
sub
test
fsts
mov
mov
and
cmc
roll
add
mov
cltd
std
sub
or
mov
rorl
addr16
or
pop
int3
cltd
adc
imul
jge
les
iret
mov
xorb
dec
in
xor
and
in
fidivrl
bswap
pop
pop
cmpsb
bsr
push
test
xor
sbb
addl
adc
mov
loope
xchg
lret
insb
push
les
mov
stos
dec
push
mov
ret
xchg
ss
inc
lahf
hlt
push
or
lods
arpl
test
push
or
daa
shll
enter
jnp
jp
sub
cwtl
cmpsl
hlt
adc
sub
test
leave
jp
xor
push
jno
aam
mov
push
sub
jns
cmpsl
stos
lret
sbb
lods
clc
mov
inc
add
arpl
or
push
cmpsb
dec
inc
test
data16
fcompl
jecxz
or
inc
aad
dec
repnz
repnz
daa
push
jecxz
mov
ret
cld
ljmp
scas
ror
leave
sbb
fcoms
or
fs
jnp
orl
scas
add
push
andl
mov
shrl
sti
pop
lods
mov
mov
mov
add
mov
cld
fldt
scas
adc
adc
push
xchg
jbe
loop
es
das
data16
lcall
inc
pop
adc
popf
daa
push
mov
xchg
fidivl
cltd
sbb
push
addr16
xor
fisubrl
jno
jbe
push
sub
pop
push
push
imul
leave
and
jno
push
and
nop
fmuls
das
push
popf
clc
stos
nop
cmp
leave
push
cmp
clc
push
xor
aaa
pop
iret
iret
inc
xchg
xlat
mov
popa
dec
xchg
inc
inc
sub
inc
mul
cs
aaa
sbbb
sub
lds
push
cmc
inc
xchg
sub
fs
sbb
sub
bound
addr16
lret
pop
movsl
inc
call
es
adc
fdivr
mov
roll
sub
inc
pop
stc
xor
mov
stc
mov
test
imul
pop
jecxz
daa
incl
orl
mov
mov
sub
push
dec
insl
xor
aaa
cmp
aas
jle
arpl
icebp
cmp
dec
cltd
mov
or
scas
test
stos
pop
pusha
lret
xchg
sbb
pop
das
pop
inc
aas
gs
xorb
cmp
cmp
pop
sub
int3
or
mov
pop
imul
fcoms
mov
xlat
outsb
aad
ret
rclb
test
pop
pop
push
and
test
call
and
jbe
sub
jno
dec
jecxz
jns
js
into
enter
mov
cmpsb
imul
movsl
hlt
xchg
inc
mov
xchg
xor
rcll
movsb
aad
rcrb
cmc
test
adc
mov
mov
mov
fisttps
repz
add
push
xchg
das
mov
popa
cmpsl
ror
test
cli
test
mov
xor
fnstcw
gs
setp
ja
mov
pop
mov
divb
dec
dec
int
push
lea
stc
adc
fdivs
cmp
pop
insb
orb
in
scas
mov
mov
test
out
test
sub
mov
push
cmp
fsubrp
nop
mov
in
dec
divb
adc
jb
adc
ficompl
sar
xchg
call
lods
in
fwait
jbe
bound
lret
xor
cmp
pop
adc
sbb
jne
stos
cmp
fmul
test
mov
outsb
fistl
xchg
mov
insb
mov
repz
pop
rclb
ja
in
cwtl
add
inc
cmp
fwait
adc
adc
aaa
push
shll
and
lods
lock
jo
out
mov
adc
lods
das
ret
push
mov
and
xchg
push
sub
and
gs
mov
lods
cld
push
mov
loop
sub
fsubr
ds
inc
rolb
or
adc
ja
pop
xchg
sbb
lea
mov
adc
imul
jecxz
jl
loop
mov
mov
outsb
fiadds
jnp
push
shl
pop
les
dec
adc
sub
jg
dec
out
inc
adc
mul
cltd
pop
xor
xlat
popf
out
sub
outsl
icebp
insb
mov
xor
sub
es
cld
mov
xchg
mov
mov
xchg
jl
cwtl
cli
pop
popa
int
jecxz
ljmp
push
xchg
es
aam
bnd
push
in
ss
sbb
gs
cwtl
pusha
lcall
mov
mov
int
clc
les
movsl
cmpl
cmp
mov
xor
leave
arpl
scas
in
mov
mov
jge
xchg
pop
icebp
popa
sar
js
dec
enter
push
pop
and
lahf
lret
adc
fildll
fnstsw
mov
inc
adc
dec
pop
addr16
pop
jl
test
pop
out
or
xchg
pop
and
pusha
mov
inc
fisttps
imul
xchg
daa
jg
fstpl
fiaddl
nop
push
inc
cs
mov
scas
adc
jno
cltd
fcoms
sti
leave
lcall
nop
loope
inc
push
and
cltd
cltd
cmpsb
and
test
pop
jecxz
inc
push
lcall
loop
cltd
mov
aad
sti
scas
shll
aas
add
cmp
dec
push
and
xchg
mov
xor
cmp
in
push
adc
or
xchg
clc
jbe
jb
ficoms
push
iret
mov
inc
sahf
jo
aad
shlb
inc
repz
leave
adc
xor
jbe
sbb
push
scas
cmp
cmpsb
xor
jnp
sub
xchg
fnsave
daa
lea
cmp
add
rcr
fnstcw
jl
fstl
sbb
sbb
xchg
test
data16
adc
mov
lcall
jmp
add
and
in
jmp
stos
js
inc
cld
stc
cmpb
lret
in
mov
push
ljmp
mov
mov
in
fmul
jl
mov
int3
push
jle
pop
ds
pop
jge
fucomp
sub
popa
call
sub
loop
call
frstor
js
in
xchg
and
inc
lods
jb
imul
scas
or
insl
adc
dec
arpl
hlt
mov
ljmp
je
pop
addr16
out
push
mov
sub
xchg
or
insb
ret
std
fwait
stos
ja
inc
outsb
lods
push
insb
or
and
mov
cmp
mov
cmp
cmp
loope
add
mov
jmp
xorb
int3
or
sti
sbb
lods
and
dec
xchg
cmp
ds
subb
sbb
and
mov
pop
ds
pop
xchg
test
mov
jecxz
adcb
ss
ss
fxch
xchg
mov
lea
scas
int3
test
inc
xchg
cmp
les
pop
inc
leave
jmp
inc
sbb
out
lock
mov
rclb
cmpl
cmp
aaa
pop
jbe
xchg
hlt
subl
ja
add
xchg
inc
iret
mov
mov
jmp
stc
std
clc
jne
test
loop
mov
add
ljmp
pop
cmc
lret
xor
and
pop
cwtl
aas
and
out
jb
pop
sbb
fcompl
jle
test
lret
jge
es
enter
pop
fisubrl
aam
push
mov
insl
sub
popf
leave
add
lds
mov
cld
mov
dec
or
push
xor
lea
lods
push
or
rolb
ss
es
insl
cmp
cmp
adc
or
cmc
mov
or
repz
push
negl
and
lcall
ds
out
dec
mov
pop
shrb
ljmp
push
sub
loopne
rcll
lcall
pop
pop
pop
xchg
movsb
or
rorb
cmpsb
add
stos
cs
data16
mov
or
jo
cltd
push
xor
inc
xchg
mov
lcall
inc
cld
fimull
xchg
sub
or
xor
and
stos
test
and
cli
lock
xabort
push
mov
push
inc
ret
sub
and
dec
mov
inc
inc
lods
jo
mov
adc
inc
rcr
push
lods
xchg
jecxz
inc
mov
cmc
cmp
hlt
xor
out
dec
mov
decl
add
push
push
lods
cs
mov
in
push
out
mov
push
cmp
hlt
lret
xchg
mov
sub
push
lods
aaa
mov
cltd
dec
mov
sbb
xchg
test
inc
lcall
lret
pop
push
pop
add
sahf
popf
aam
ja
imul
jns
add
jp
sbb
shl
frstor
adc
cmc
test
fwait
dec
mov
cmp
out
mov
test
sbb
sbb
adcl
pop
pop
pop
out
xor
dec
call
lock
popa
mov
adc
les
push
xor
mov
repz
or
andl
stos
pop
aaa
pop
mov
mov
xchg
cmp
addr16
sbb
lret
mov
sbb
test
decb
mov
and
pusha
mov
out
cmpsb
add
inc
repz
out
lods
sub
xchg
stos
negl
xchg
push
lods
push
nop
fs
and
or
int3
std
adc
cmp
stos
sbb
adc
enter
scas
cmp
mov
out
cmp
movsl
jo
shll
icebp
out
mov
and
fwait
mov
mov
cmp
add
push
fcmovb
js
mov
mov
push
jne
jne
pop
lahf
jmp
ss
addr16
cltd
cmpsl
jns
adc
jnp
idivb
fwait
mov
sub
add
test
pop
cmpb
cmpsb
xchg
arpl
jle
sti
test
in
jae
lret
sarl
rcr
xchg
pop
jmp
jb
or
stos
xor
jo
mov
ljmp
mov
clc
scas
cmp
movsb
enter
xor
push
cmp
jp
aas
push
cld
loopne
cmp
scas
int3
popf
hlt
sub
repz
fistl
or
je
pop
adc
pop
aam
aad
int
faddl
mov
jnp
into
dec
lods
sti
test
sti
sbb
lcall
cmpl
aas
xchg
stos
rcrl
cmp
loopne
mov
push
add
inc
ret
shll
inc
dec
sub
mov
addr16
cmp
mov
outsl
cmp
call
sub
sub
push
js
mov
add
shl
nop
fadd
pop
in
pop
test
rclb
adc
adc
sub
xor
push
rorb
add
mov
shl
sub
mov
out
mov
jecxz
adc
inc
sub
ja
dec
into
inc
addr16
mov
iret
add
movsl
pop
mov
je
cmp
dec
inc
push
inc
adc
clc
push
xlat
and
hlt
fstpt
sbb
or
cmp
bound
imul
bound
jns
adc
push
ds
aaa
push
lods
mov
jp
lea
popf
jl
loop
pushl
mov
js
outsl
add
cmp
xlat
les
test
xor
fistpll
mov
fwait
or
imul
js
push
adc
fwait
mov
jg
enter
and
sbb
sti
vpshufd
jae
push
sbb
ja
mov
outsb
imul
sub
rorl
mov
add
xchg
adc
add
fstpt
xor
aad
sub
aas
xchg
xchg
fisubl
hlt
jle
into
xchg
jbe
push
shl
leave
mov
repz
decl
pop
jnp
push
loope
std
xor
clc
lods
roll
jge
idivb
inc
mov
insb
lcallw
js
shlb
or
outsl
sbb
mov
repz
cs
and
lds
sbb
fistpll
push
dec
ret
cwtl
repnz
out
mov
and
pop
aas
jg
sbb
negb
call
dec
pop
push
ja
mov
pushf
cmc
adc
or
cltd
mov
nop
jo
imul
ror
cmpb
mov
inc
lods
or
or
cmpsl
iret
cld
push
leave
cli
sar
fildll
push
mov
test
mov
sbb
xor
push
pop
xor
mov
or
movsb
adc
pop
add
adc
jp
test
jne
aas
mov
gs
pop
les
dec
jae
push
mov
mov
or
sbb
iret
call
insl
test
out
mov
mov
sbb
mov
stos
mov
push
push
cmc
lea
xor
add
fnstenv
inc
add
xlat
cmp
in
negl
push
sub
ffree
xor
fsubr
cli
push
adc
pop
filds
adc
insl
push
aam
adc
sub
lret
dec
dec
sarb
outsb
mov
sbb
mov
jle
test
mov
test
push
fidivrl
lods
or
lcall
fdivrs
in
adc
es
sti
push
push
pop
adc
mov
xchg
add
mov
jne
xchg
pop
mov
adc
test
scas
mov
stos
js
gs
in
ds
testl
fldenv
jmp
dec
cs
pop
test
cmp
mov
mov
adc
sbb
push
insl
push
shll
and
pop
ljmp
mov
clc
push
fstps
xchg
call
sbb
sub
psllq
clc
loopne
or
rorb
jp
test
and
or
jecxz
movsb
or
std
sahf
nop
rorl
cwtl
pop
pop
stos
fxch
ret
int
inc
pusha
repnz
js
sbb
fnstsw
or
ret
pop
mov
shrb
into
pop
cmp
cld
popf
cld
fiaddl
shrd
cld
insb
pop
xor
xchg
push
pop
scas
cmp
daa
pop
xor
ljmp
cltd
insb
cmp
mov
mov
dec
xor
shlb
pop
push
and
sbb
jb
or
lods
or
loopne
sbb
and
iret
jb
mov
mov
imul
icebp
and
sbb
dec
out
addr16
dec
mov
cmp
insb
mov
cwtl
rorl
push
das
xor
cwtl
push
lods
popa
lahf
or
jb
lock
sbb
adc
and
test
out
repz
orl
pop
ret
int3
loop
sarl
out
add
pop
push
lods
les
out
outsb
jns
mull
into
cld
dec
mov
xor
cmp
sarb
pop
imulb
adcb
push
in
jne
test
bound
or
fcomps
loope
out
les
mov
push
and
jbe
pop
jge
jge
shr
cmp
icebp
xchg
lret
cmp
aas
out
insb
and
out
cmp
xor
lahf
cmp
mov
jge
lret
pop
mov
lds
int
mov
enter
mov
mov
jb
loope
movsl
mov
xlat
add
sti
fs
fidivs
lret
cmp
push
out
push
mov
stc
or
iret
push
jbe
cmp
int
xchg
fidivs
jo
push
mov
fistpl
jmp
push
cmpsb
and
fwait
push
xchg
sahf
dec
push
scas
push
loop
mov
fistps
enter
sbb
subb
mov
int3
addb
bound
or
jo
xchg
pop
nop
and
pop
out
dec
movsb
mov
push
sub
dec
int
cmpsb
xor
xor
adc
push
pop
dec
notb
ss
cld
lock
cmp
jecxz
sbb
mov
lock
loop
xor
rcr
jp
fstp
pushf
sbb
daa
xchg
inc
dec
lahf
sbbb
sar
mov
mov
into
fs
out
ret
adc
and
dec
jp
inc
sbb
je
and
jle
popf
pop
mov
stc
xor
fnstcw
ds
sbb
inc
pusha
loopne
pop
fst
push
cli
inc
scas
and
cmp
sbb
bound
jo
inc
test
jg
xchg
push
dec
leave
or
andb
jns
sbb
or
lahf
ret
les
ficoms
cli
mov
pop
xchg
ror
cmp
pop
in
xchg
int3
or
mov
xchg
xchg
cmp
cs
addl
andl
outsb
fcmovnbe
mov
js
stos
cld
nop
dec
adc
lret
sub
jmp
jns
das
and
dec
dec
lahf
fcmovnb
pop
or
add
leave
daa
int
out
test
daa
dec
cld
ret
cmp
jno
cmp
lret
packssdw
mov
adc
cwtl
clc
test
rcr
cmc
inc
mov
dec
movsl
fcoms
cmp
cmp
add
and
jbe
jb
add
sbb
mov
jl
jecxz
mov
jnp
or
or
or
jbe
iret
push
mov
mov
mul
ret
or
sub
seta
push
adcl
pop
stos
outsb
mov
mov
shlb
pop
es
push
ljmp
aam
ds
mov
es
insl
lret
push
push
cmp
sbb
mov
cmp
insb
mov
leave
clc
int3
das
int3
mov
loopne
inc
jnp
xchg
jp
ds
mov
adc
outsb
push
dec
addl
rcll
mov
push
gs
jbe
clc
movsb
lock
test
jne
xchg
jbe
mov
bound
inc
push
lea
xchg
das
and
das
gs
inc
lock
cmp
dec
into
in
mov
mov
mulps
ljmp
inc
inc
movsl
fiaddl
in
stc
inc
sub
xchg
imul
cmp
ss
je
dec
out
jae
sahf
movsl
xchg
out
packsswb
in
jle
ljmp
fiaddl
lea
sub
cmc
inc
mov
stos
enter
push
inc
lods
js
outsb
enter
mov
jbe
push
aam
stc
push
dec
enter
scas
sti
idivl
lea
in
push
pusha
ret
pop
popl
jbe
lock
xor
loopne
cld
xor
lock
push
or
scas
xorb
je
out
jmp
mov
push
int3
ds
or
jo
or
jle
sbb
pop
pushf
ret
icebp
arpl
ds
mov
mov
xchg
add
cld
jbe
popa
aas
mov
xchg
in
cwtl
movsb
sarb
dec
and
mov
inc
mov
pusha
gs
adc
jmp
out
sub
inc
fs
xchg
cltd
cs
dec
inc
loope
mov
std
cs
clc
adc
or
mov
rcrb
mov
js
xor
out
fmuls
fildl
sahf
pop
cltd
sub
andl
mov
xlat
int
outsl
icebp
loop
mov
fwait
xchg
sbb
push
and
adc
outsl
and
lock
bound
cmpsl
fxch
movb
jb
and
mov
aad
and
iret
inc
mov
xor
stos
fstpt
or
mov
add
dec
call
cmp
fisubrl
xchg
lock
xchg
mov
xor
adc
pop
jnp
clc
test
mov
push
mov
or
leave
stos
in
lea
mov
vphsubwd
lret
cmp
out
sub
xor
pushl
jb
inc
stos
dec
pushf
pop
sbb
lea
imul
lret
push
xor
shll
fstl
xchg
lret
push
fucomp
adc
cld
jo
pop
and
imul
and
je
pop
imul
popf
sbbl
movsb
cmp
std
xchg
sbb
and
add
pop
sub
xor
dec
out
cmp
push
daa
mov
int3
jmp
and
push
rorl
mov
mov
leave
cmp
stos
fmull
notb
addr16
scas
or
enter
lock
inc
xchg
cmc
pop
test
pushf
daa
ljmp
rorb
push
loop
cmpsb
aam
into
test
call
and
mov
dec
aam
ss
inc
loope
dec
and
scas
push
decb
outsb
pop
icebp
sub
pop
xlat
and
sbb
loop
or
or
jbe
xor
add
jno
sar
lret
or
ljmp
jge
popa
jge,pt
data16
sub
jbe
sub
fimuls
mov
mov
sub
sbb
mov
cmp
mov
add
push
pop
xor
mov
jmp
cltd
and
adc
mov
jo
sti
add
add
testb
xor
sub
int3
daa
jecxz
sub
jb
inc
mov
into
xor
pop
cmp
and
dec
jno
mov
dec
push
sbb
rclb
jecxz
mov
aad
cwtl
xchg
jns
mov
cmpsb
scas
push
pop
sbb
or
sbb
add
nop
out
push
mov
adc
je
push
dec
lods
fsubs
jmp
xorb
jb
mov
pop
fimuls
sbb
xorb
xor
and
movsb
movsb
xor
adc
sub
movsl
dec
testb
xchg
or
adc
mov
std
aad
fmull
mov
xchg
pusha
push
lea
mov
repnz
jb
aad
jecxz
popa
push
dec
xor
cmpsb
and
mov
jae
out
loopne
cs
mov
outsb
out
pop
xlat
xor
cmp
ds
jmp
pop
fnstsw
jns
cmp
pushf
mov
and
push
icebp
cmpsb
roll
add
outsb
cmp
xor
jp
xlat
int3
jle
push
cmp
mov
pop
and
push
pushf
cmp
aad
mov
out
out
mov
sahf
push
nop
add
xchg
fists
cmp
je
add
rcr
addr16
adc
call
test
jge
test
sub
jmp
cmc
add
test
or
scas
popa
cmpsl
xor
je
xorl
cld
xor
orl
inc
mov
out
mov
rorb
mov
loope
mov
arpl
ja
mov
mov
insb
or
ss
jp
adc
imul
fsubrp
xlat
sbb
sub
lods
and
repnz
cmp
fldl
fcompl
cmp
sub
jle
pushf
xchg
hlt
repz
xchg
cmpsb
fstpl
sbb
jge
loope
adc
xchg
pop
iret
mov
jl
push
push
js
out
dec
rolb
mov
insb
xchg
cmc
mov
pushf
adc
xchg
das
jbe
inc
add
scas
mov
add
xorb
xor
mov
push
jo
outsb
cmpsl
xor
popf
daa
mov
movsl
shll
xchg
insb
xchg
xchg
fldcw
cld
rorl
fstpt
hlt
ds
push
sbb
arpl
imul
pop
cld
inc
adc
pop
negb
cmp
mov
mov
adc
data16
repnz
xor
mov
test
push
addr16
imull
jb
iret
push
ss
imul
data16
push
cmpsb
cmp
and
xchg
es
aam
rclb
lret
pop
loop
fdiv
repnz
test
xchg
popa
push
rclb
inc
mov
add
mov
xor
addr16
and
xchg
mov
push
mov
jge
or
ja
hlt
sbb
dec
lods
jge
dec
cmc
ja
xor
daa
decb
jmp
lea
repnz
push
sbb
inc
nop
jp
cli
push
sbb
mov
sub
loop
jmp
dec
mov
ret
sub
push
add
xchg
jmp
in
sub
loopne
and
inc
ds
adc
push
push
pushf
shll
test
out
inc
mov
and
inc
sahf
mov
mov
cmpsl
mov
inc
mov
scas
sub
loopne
das
out
inc
xor
nop
ljmp
xor
mov
xchg
add
pop
xlat
cli
xor
das
inc
push
insl
cmpsl
je
lcall
fsubrp
sbb
aam
xchg
lea
mov
mov
repnz
pop
dec
and
or
mov
cs
push
push
in
jg
cmc
push
add
xor
dec
fdivrl
adc
sbb
lea
jmp
and
push
jno
sub
flds
incb
mov
mov
divb
fs
out
dec
cmp
clc
fildl
std
cmp
and
push
cmc
cmpsb
stos
daa
fsubr
rcrl
mov
and
add
push
jno
adc
rolb
fs
or
jnp
add
lods
jge
dec
dec
pop
sub
outsb
std
stos
and
jmp
xor
jg
leave
and
push
mov
movsl
lahf
gs
rcl
and
pop
pop
and
mov
jne
fadds
sub
inc
lock
mov
cld
mov
and
push
add
pop
sub
call
outsl
push
mov
and
leave
push
or
sbb
and
hlt
mov
cmp
mov
fstpl
clc
bound
adc
fsubrs
cmpl
out
sub
mov
jle
iret
popa
cld
inc
std
mov
into
pop
add
push
call
vmovss
inc
sub
add
das
push
imul
or
pop
adc
adc
fisubrl
xor
cmp
mov
bound
mov
cmpsb
loop
or
sub
mov
int3
mov
dec
xor
das
popl
test
jg
mov
cmc
enter
xor
xchg
pop
and
mov
cmp
fsubr
sub
sahf
xchg
mov
xor
lret
test
sbb
pop
push
mov
jnp
out
ficoms
out
daa
dec
or
aam
flds
xchg
xor
inc
fldl
insl
mov
fildll
xchg
ret
push
push
lods
dec
dec
mov
jmp
mov
sbb
pop
jnp
cmc
and
roll
dec
mov
stos
cmp
call
inc
jno
pop
inc
js
cwtl
rcll
xchg
loopne
mov
jge
jns
sub
or
stos
lret
popf
mov
and
cld
cli
insb
push
sbb
xchg
mov
adc
in
imulb
mov
bt
sahf
cltd
pop
adc
inc
cli
push
movsb
sbb
pop
mov
push
mov
out
aam
push
mov
flds
dec
sahf
sub
aas
adc
mov
xchg
add
inc
cmp
inc
cmp
xchg
movsb
pop
mov
fimull
movsb
iret
hlt
movsl
or
or
adc
out
out
test
sbb
mov
mov
std
mov
jmp
fs
mov
inc
ds
in
cli
xchg
das
std
lcall
cwtl
enter
mov
out
movsl
lods
jge
jg
sub
test
in
mov
mov
rorb
cld
pop
fldenv
fiaddl
dec
jnp
push
mov
cld
popf
pop
inc
adc
inc
popf
push
adc
daa
xchg
dec
mov
xor
sbb
das
dec
push
mov
int
test
enter
mov
outsl
sti
lahf
jne
ja
sbb
and
stc
cmp
and
xchg
push
sbb
ret
add
or
pop
int
cwtl
inc
ljmp
in
add
js
test
xchg
and
stos
cmp
pop
aas
test
jmp
fwait
xor
into
cld
ss
adc
js
jbe
aas
cmp
stos
aaa
xchg
aad
mov
repnz
stos
jo
addr16
inc
or
mov
addr16
sbb
mov
into
mov
xor
nop
push
jbe
or
sub
stc
add
sub
in
jb
or
mov
mov
adc
aaa
adc
mov
jecxz
fwait
cmp
mov
xor
icebp
test
rcl
xor
sbb
xor
divl
test
sub
push
cmpsl
pop
cmp
xchg
sub
cmp
sbb
in
xor
push
push
cld
mov
inc
daa
add
bound
mov
icebp
stos
ficomps
pop
das
sub
fsub
dec
push
lods
into
pop
clc
popa
ret
mov
or
mov
scas
adc
dec
cmp
or
cwtl
decw
adc
ret
and
test
into
fcmovbe
fisubrl
push
lods
addl
fadds
xchg
jmp
mov
dec
das
hlt
push
nop
mov
mov
popf
outsl
mov
mov
sub
insb
jo
inc
xchg
adc
adc
adc
adc
mov
xchg
iret
sbb
lods
push
inc
fwait
mov
sbb
mov
out
or
push
mov
arpl
pop
push
jge
popf
push
pop
push
and
ret
ljmp
data16
or
add
dec
push
pop
inc
aas
sahf
loope
dec
mov
jbe
imulb
pop
aam
add
jne
sbb
and
cli
ret
pop
xor
jle
lret
ret
add
sbb
fsts
xchg
pop
in
mov
mov
and
rcrb
shl
cmpl
xchg
adc
hlt
fcomi
sbb
aad
fidivl
inc
dec
divb
lahf
jmp
mov
mov
add
push
aaa
cmp
out
inc
xchg
sub
pop
loop
mov
mov
mov
mov
lods
sub
cmp
sti
xchg
lods
cld
aaa
lret
inc
lcall
push
sbb
out
fidivrl
jns
xor
ss
imull
jno
incl
and
xchg
scas
fdivl
mov
hlt
int3
jno
xor
imul
iret
adc
mov
das
or
int
loopne
addr16
fbld
mov
xor
sahf
gs
mov
lcall
xor
mov
xchg
mov
cmp
clc
adc
insb
movb
flds
lods
outsb
jmp
inc
sub
and
incb
xchg
mov
hlt
leave
or
jae
xchg
xlat
jnp
push
push
js
pop
testl
dec
cmp
out
cwtl
cld
add
pop
mov
mov
xlat
lcall
adc
mov
lods
xor
xor
add
xor
jbe
xchg
push
test
repnz
or
jge
test
loop
and
test
outsl
xchg
mov
cmpsl
mov
lret
nop
adc
movsl
sbb
por
jmp
jl
popa
sbb
add
popa
adc
jb
mov
out
jbe
sbb
mov
pop
mov
pushf
mov
mov
int
or
jo
push
add
rcll
xchg
sarb
mov
out
add
hlt
mov
mov
das
cmp
cmp
rcrl
dec
xchg
pop
mov
pop
aam
lea
movsb
or
adc
cmpsb
rolb
inc
jmp
sbb
rorl
add
lods
divb
iret
lods
mov
adc
add
mov
mov
pop
push
lods
xchg
push
into
fsts
rorl
sub
sub
sbb
call
xor
inc
add
mov
iret
cmp
out
in
push
pop
and
mov
dec
mov
addr16
ret
add
es
xor
xor
test
icebp
movsl
jl
std
in
insb
fadd
aam
lahf
stos
xchg
sbb
in
mov
dec
and
outsb
movsl
ret
cmc
dec
gs
and
push
mov
mov
mov
test
xchg
add
inc
mov
in
or
dec
call
add
add
xchg
nop
stc
add
sub
testl
mov
mov
cmpsb
notl
std
push
mov
aas
adc
mov
insb
stc
js
push
inc
add
inc
insl
xlat
rolb
add
adc
lock
add
outsl
cmpsl
out
and
pop
sbbl
not
push
fcomps
adc
imul
mov
loop
stos
push
mov
test
cmp
adc
xchg
test
into
call
icebp
xor
mov
xor
add
icebp
mov
xor
out
inc
test
inc
dec
lods
mov
das
dec
scas
fnsetpm(287
sub
stc
test
or
cli
or
jo
into
or
mov
inc
test
sbb
jmp
pop
rclb
push
mov
xchg
cs
cli
xchg
sub
xchg
inc
shlb
xchg
popl
mov
mov
shl
sub
in
mov
aam
pop
mov
and
daa
mov
add
scas
out
fdivl
mov
je
and
test
or
sub
sub
int
insb
aad
sub
jmp
inc
adc
lea
jg
movsl
push
push
aam
shlb
pop
insl
pop
js
mov
jo
cmpsl
lea
and
adc
cmp
sti
push
jae
xchg
xchg
xlat
mov
sub
xchg
cmp
xor
sbb
mov
mov
inc
lods
int
sbb
push
arpl
sub
idiv
ss
ret
cmp
and
lds
aam
sub
in
fs
lods
les
and
push
xor
push
cmp
sub
mov
or
lock
call
fdecstp
fldt
cmp
cmpsb
ss
push
mov
and
dec
pop
push
pop
scas
scas
dec
pop
aaa
movsl
add
cmpsl
out
mov
cwtl
gs
idivb
dec
cmp
nop
add
cmp
adc
jmp
das
mov
packuswb
mov
cwtl
mov
psraw
aad
mov
mul
fwait
shrl
xchg
sub
rcrl
call
pop
mov
push
push
jns
sarb
mov
ret
push
ret
jae
xchg
pop
adc
dec
mov
sub
jmp
aas
loope
xchg
call
dec
jl
pop
sbb
sub
jae
shl
push
andb
jns
and
jns
mov
popf
cld
stos
rorl
adc
or
jmp
outsb
push
gs
das
jo
mov
pop
jns
into
loopne
daa
out
jns
test
dec
into
pop
lcall
ljmp
ljmp
dec
movsb
mov
and
in
sub
arpl
sbb
movl
pusha
int3
xor
and
mov
mov
iret
inc
add
xor
dec
push
xchg
jo
xor
mov
bound
xor
jns
lahf
mov
fst
push
sub
movsl
icebp
into
mov
hlt
movsb
or
fcmovnb
repz
dec
xchg
clc
dec
mov
enter
cmc
fisubl
mov
cmpsb
or
or
push
ror
popl
or
xchg
mov
cltd
enter
cmp
add
fnstenv
popf
mov
inc
xchg
cmp
push
in
adc
sbb
jl
sub
xor
pop
lret
arpl
pop
cmp
jecxz
push
mov
fildl
loop
test
out
add
divl
fs
inc
mov
adc
push
mov
pop
push
subb
aad
stc
xor
or
mov
xchg
shrb
pop
mov
pop
xchg
filds
js
repz
out
mov
sti
imul
scas
cmp
sub
in
mov
dec
es
pop
out
xchg
lds
xchg
jae
int3
jo
fnsave
andl
add
dec
cmp
dec
data16
mov
flds
cmp
mov
mov
add
pushl
hlt
imul
movsb
cli
aaa
fldl
and
add
push
imul
fcomi
push
xor
adc
mov
mov
loop
pop
pushf
leave
subb
or
adc
and
pop
outsl
lahf
in
dec
fstpt
pop
xorb
mov
lods
pop
jae
pop
into
mov
sahf
pop
xchg
xchg
lock
push
outsl
xorl
fimuls
fldt
xchg
push
inc
bnd
shll
fildl
addr16
dec
ljmp
or
int3
ficoml
pop
sub
xor
popf
and
sub
and
add
add
ret
andl
mov
jnp
cwtl
cmpsl
sub
push
xchg
das
add
shll
pusha
fwait
pandn
sub
push
rorb
lahf
iret
adc
jnp
inc
rcr
pop
pop
scas
pop
out
call
in
mov
loopne
sub
jns
cmpsb
or
adc
pop
or
sar
jecxz
jbe
or
ja
ja
mov
pop
cmpsl
dec
outsb
adc
iret
adc
loope
aam
inc
fildll
and
cmp
dec
adc
cbtw
aas
jbe
imul
test
lock
es
xor
in
xor
divl
or
mov
xchg
push
mov
shlb
inc
xor
cmp
push
lahf
add
mov
mov
es
cmpl
rorl
xchg
inc
cmp
or
or
iret
add
js
xchg
inc
fists
cli
jle
in
lahf
into
out
fsubs
loop
aam
int3
cmp
loopne
sub
pop
arpl
outsl
pop
pushf
arpl
repnz
mov
add
sub
xor
mov
push
xchg
pusha
add
imul
mov
jno
jecxz
fsubs
loop
sbb
stos
xchg
mov
cmp
mov
or
push
mov
cs
fldl
xchg
jg
pushf
sbb
das
and
jo
repz
mov
sub
jne
mov
icebp
stc
mov
xor
xchg
ja
sti
int3
int
xor
mov
in
ret
inc
lcall
mov
jne
fidivl
test
jbe
movsl
rclb
repz
xor
pop
jmp
or
sub
dec
cmc
sbb
fcoml
or
or
sbb
aaa
mov
mov
sub
mul
sub
arpl
mov
sarb
inc
lods
mov
imul
pop
and
xchg
daa
sbb
xchg
xchg
lods
popa
fs
add
pop
cmp
cli
adc
shlb
sub
adc
insb
ffreep
leave
jns
adc
pop
addr16
push
fisttpll
mov
rorb
and
hlt
sbbb
jae
js
or
cltd
aam
movsb
roll
inc
xor
repz
cmpsb
orl
mov
int
pop
and
call
stc
cmp
jb
add
leave
add
in
and
pusha
pusha
mov
mov
cmp
sti
cmp
imul
idivl
lcall
mov
push
jae
xlat
mov
popf
sbb
pop
cld
rorl
xor
gs
lods
int
and
daa
cli
or
dec
xchg
mov
pop
sahf
dec
jbe
nop
sbb
je
stc
pop
stos
cmp
lds
dec
push
dec
mov
cmpsb
pop
addl
fiaddl
call
and
cmpl
popf
idivb
or
push
popf
mov
inc
or
jbe
outsb
or
rcll
jecxz
sub
push
xchg
repnz
push
pop
sub
imul
stos
aam
xor
andb
int
xor
data16
cli
push
fidivs
loopne
aam
jmp
adc
lcall
daa
xchg
sbb
mov
or
lcall
adc
adc
or
sysret
inc
adc
pop
lret
insl
out
mov
pop
aas
mov
adc
sub
adc
icebp
mov
jmp
add
pop
jecxz
add
imul
std
mov
out
insl
jg
xchg
pop
lea
mov
mov
xor
dec
push
pop
cmpsb
lret
mov
sub
sbb
in
in
inc
test
sbb
call
das
jae
sbb
inc
xchg
mov
dec
push
adc
jns
push
xor
pushf
sbb
jge
lods
pop
rolb
adc
adc
cld
cmp
popf
push
xor
jb
jge
in
sub
lods
outsb
mov
aaa
lea
push
push
xor
call
cmp
lods
outsl
push
xor
adc
mov
cmp
outsl
xor
loope
xor
sub
add
and
jge
jmp
push
add
xchg
iret
ds
pop
adc
stc
loope
in
mov
test
mov
jne
lock
mov
ds
adc
fabs
pop
fldlg2
outsl
sub
out
aas
push
rorl
pop
hlt
xor
mov
jmp
stos
icebp
sub
add
lahf
dec
adcb
or
push
je
push
and
and
adc
imul
xor
xchg
and
add
cmpsb
lret
or
sar
subl
lds
cld
lods
fdivrl
mov
loope
out
adc
mov
shlb
call
lock
jo
xor
mov
sti
pop
dec
leave
jo
ljmp
icebp
or
jmp
scas
repz
cld
xchg
inc
push
dec
jno
pop
jl
int
test
cmpsb
out
and
andl
inc
movsb
and
and
inc
xor
dec
push
push
fucomp
mov
aad
std
inc
push
gs
xor
jns
mov
mov
sbb
scas
and
sar
lds
insb
mov
adc
mov
clc
sub
jmp
xor
scas
lcall
mov
loope
mov
xchg
jmp
and
push
insl
sub
cld
outsl
and
mov
xor
push
mov
fxrstor
jecxz
jb
push
cmp
mov
inc
inc
loopne
mov
mov
mov
inc
cwtl
setnp
shlb
cs
addb
xchg
mov
mov
loop
push
test
push
cmpsl
and
pop
push
out
lcall
mov
inc
fs
cli
insb
mov
xchg
dec
add
cmp
in
lods
aaa
dec
hlt
jbe
and
mov
pop
cltd
pusha
inc
inc
mov
test
je
out
loop
js
sti
in
cmp
adc
xor
fwait
mov
scas
lods
push
or
fcmovu
sahf
mov
rcrl
inc
in
sbb
movsl
and
or
outsl
lds
shlb
fisttpll
cmpsb
outsb
mov
lcall
decb
add
lret
cmc
mov
or
jae
repnz
nop
cmp
mov
lcall
inc
fnstsw
lods
cmpsb
cmpl
lods
pop
xlat
mov
fs
mov
addb
in
sbb
shrb
negb
ret
inc
push
in
push
and
cmp
out
cli
mov
cwtl
scas
or
loop
inc
xchg
repnz
pushf
mov
mov
int3
sub
jbe
xchg
mov
jge
call
cli
cmp
gs
mov
xor
and
mov
cmpsl
xchg
das
dec
rcrb
hlt
lock
mov
mov
xorb
rcr
mov
inc
jg
push
xchg
stos
cwtl
cmp
or
leave
pop
jne
call
xchg
loop
xor
ljmp
stc
sub
ret
cmc
leave
cmp
lock
sub
pop
xchg
pop
jge
add
dec
adc
cmpsb
pop
xor
arpl
jno
popa
push
or
and
bound
xor
sbb
orl
cmp
jmp
jge
add
xchg
cli
test
mov
add
jge
mov
pop
leave
aas
xor
data16
test
jle
adc
mov
addl
mov
push
repz
and
adc
xor
dec
push
lds
jb
lods
lea
add
add
pop
mov
cmp
dec
daa
sbb
mov
jl
xlat
push
insl
mov
push
call
stc
jg
loopne
repz
sbbb
inc
fnstsw
addr16
jns
in
lret
fwait
int
dec
cmp
das
jno
pop
and
aam
sarl
mov
mov
pop
into
mov
out
and
js
and
mov
into
add
mov
xor
es
pop
inc
icebp
mov
sub
mov
lahf
and
push
sub
mov
popf
mov
mov
outsb
cli
scas
xchg
and
add
bound
adc
in
jecxz
pop
jecxz
push
jge
sub
scas
or
jo
test
adc
in
aad
jge
out
push
leave
jno
xchg
jo
lret
cmc
mov
pop
xchg
loope
lret
call
arpl
cmp
out
ja
add
mov
mov
test
leave
xchg
jle
loopne
cmpsb
pop
xchg
cld
lock
pop
push
mov
mov
jne
sub
and
outsb
dec
dec
mov
addr16
aaa
inc
sbb
or
leave
mov
lret
adc
repz
jl
out
sub
sbb
in
push
add
cmp
ret
pop
test
lret
mov
adc
jmp
push
or
in
pushf
sub
xchg
mov
mov
dec
mov
nop
test
push
insl
cld
fnstsw
mov
ja
and
outsl
push
push
push
mov
fs
scas
test
jne
imul
jl
add
mov
lcall
lock
jb
aam
xchg
jmp
insl
mov
mov
pop
cmpsl
adc
enter
lahf
mov
loope
repnz
and
inc
pop
jae
jle
scas
cli
xor
xor
or
mov
mov
jle
mov
sbb
ficomps
mov
dec
les
outsb
dec
pop
inc
fsubs
push
popf
sti
pop
push
cmpsb
into
inc
call
cmp
cld
pop
xchg
xchg
movsb
mov
sub
aas
xchg
pop
scas
xor
sub
scas
es
jno
mov
mov
push
mov
push
inc
pushl
xlat
das
ret
pop
int
sub
or
push
fildl
mov
clc
mov
xor
pusha
sub
loope
fisttps
fsubp
xor
je
repnz
insl
in
cmp
push
xchg
repz
mov
pop
hlt
test
sub
xor
shrb
push
cmp
iret
dec
and
mov
and
stos
mov
and
jmp
jecxz
test
lret
push
btr
jne
in
sbbl
stos
cmp
cmp
fdiv
enter
and
cltd
cmp
or
call
and
adc
cld
inc
sbbb
mov
inc
sub
sbb
aaa
scas
lods
test
pop
xor
inc
jl
daa
jmp
mov
repnz
adc
js
lret
push
mov
mov
jecxz
ss
mov
sub
rcr
add
xchg
or
call
ja
js
ret
and
notb
xchg
test
lods
in
jecxz
mov
push
lock
cmp
mov
sub
pop
out
push
mov
out
jg
dec
dec
ja
imul
jb
lods
lods
push
test
shlb
sbb
popf
fwait
in
xor
add
cmp
daa
icebp
mov
pop
sahf
pushl
popf
stc
es
and
rcll
ss
icebp
inc
mov
and
mov
jecxz
pushf
sahf
adc
sarb
xorl
sub
dec
xor
cld
enter
in
in
cli
xlat
mov
sub
push
inc
jns
dec
out
fists
jp
mov
mov
mov
xor
pusha
xorb
mov
insb
jmp
xor
mov
and
and
fs
mov
adc
repnz
popf
mov
mov
mov
adc
and
repnz
jns
mov
push
stos
scas
add
adc
pop
outsb
or
ret
jae
pop
and
fadds
dec
push
jbe
mov
xchg
xor
xchg
dec
lods
lea
and
fldcw
bound
sbb
push
scas
add
rolb
aad
fstl
xor
jns
mov
xchg
cmp
in
lret
and
pop
mov
into
pop
lods
or
lock
les
and
and
push
icebp
out
dec
sub
adc
pop
in
dec
stc
pop
cli
inc
and
cltd
mov
push
jno
xchg
push
fisubl
sub
addr16
out
pop
nop
adc
add
test
ljmp
test
or
xchg
push
pop
rcrb
movsb
xchg
scas
dec
mov
mov
cmp
lock
fsubrl
test
mov
pop
daa
mov
pop
fists
cmp
outsl
sub
xor
ja
pop
stos
push
mov
sarb
pop
ja
popf
and
sti
popf
and
jo
pop
and
or
dec
loope
mov
xor
js
aam
mov
mov
jmp
mov
pop
fldt
jmp
jl
mov
cmc
fdiv
jge
shrl
jmp
mov
mov
fsubl
sbb
xchg
mov
roll
cmpsl
push
mov
js
inc
ljmp
jp
fldcw
pop
lcall
sub
pop
ja
call
mov
aas
ljmp
jne
xor
stos
nop
fildl
push
shlb
xor
pop
pop
mov
sbb
dec
lock
xor
jmp
dec
add
mov
std
and
in
stos
jge
add
add
jne
lods
hlt
js
aaa
mov
das
xchg
jmp
and
pop
mov
ja
cmp
adc
out
sahf
or
cmc
mov
push
add
mov
or
addl
fwait
add
outsb
pop
cmpl
fcmovbe
and
jno
clc
cmpl
mov
inc
inc
fildl
insb
xchg
pop
sub
cmp
lcall
pop
sbbb
cmpl
test
xchg
sahf
imul
mov
icebp
scas
cltd
aam
and
out
xor
mov
cld
dec
push
outsb
popf
imul
stc
mov
and
repz
mov
jne
leave
inc
subl
and
cmp
push
jg
mov
sub
xchg
cmp
jae
testl
mov
pop
push
cmp
xchg
insl
insb
stc
sbb
int
pushf
subb
scas
mov
jle
in
test
sar
push
loop
je
lcall
rol
shll
mov
rorb
xchg
cwtl
loopne
mov
adc
icebp
sbb
xchg
sar
arpl
adc
int3
inc
push
cmp
pop
jmp
or
push
inc
outsl
mov
jmp
loopne
leave
adc
push
fwait
in
js
mov
mov
xor
lcall
out
or
pop
xchg
cmpsl
jmp
testl
mov
fistl
out
lret
and
or
shrb
cmpsl
inc
lahf
insb
xorl
cmp
mov
out
orl
enter
jo
dec
cmp
in
ljmp
lds
pusha
lods
popf
dec
aad
fcomp
mov
pop
push
int
insl
popl
xor
sahf
xor
xchg
jge
jns
nop
dec
divb
das
je
imul
mov
fwait
sub
js
inc
mov
cltd
scas
sbb
mov
loop
lahf
adc
repz
testl
jae
dec
sub
lock
ret
stos
cmpsb
addr16
int3
inc
lock
add
cmp
sub
cmp
std
stc
jmp
lcall
loope
pop
cwtl
push
cmp
jmp
lea
fs
xor
push
or
or
adc
jmp
ss
fwait
test
out
test
gs
mov
inc
int
jp
js
cmpl
enter
es
mov
cmp
loop
dec
mov
jmp
aaa
imul
or
and
xchg
mov
inc
adc
popa
ret
lock
mov
int3
sub
cmpsl
push
popa
push
out
mov
jbe
cmp
sbb
enter
adc
outsb
scas
int3
push
jne
movsl
pavgw
adc
shl
xchg
icebp
adc
clc
mov
in
fists
and
shlb
jl
lea
cmp
in
add
cmpsb
dec
and
imul
mov
pop
pop
push
sbb
outsb
popf
mov
movsb
jmp
lea
pop
mov
push
xor
jge
mov
mov
aaa
je
mov
push
push
adc
mov
xchg
cwtl
mov
mov
xor
xchg
sub
push
xchg
sub
test
dec
pusha
nop
dec
mov
sub
mov
test
xor
push
xor
ja
mov
test
xor
pop
into
push
adcl
or
mov
fcmovbe
sbb
test
fcmove
pusha
pop
addr16
iret
mov
pop
das
stos
repz
in
jecxz
mov
xor
mov
into
and
xor
mov
push
cli
imul
roll
push
mov
pop
mov
and
xor
mov
cmpsl
dec
sbb
in
jns
pop
jecxz
dec
pushf
pop
or
cmp
movsl
mov
jns
dec
dec
or
mov
sbb
cmc
outsb
sti
int3
hlt
aad
fcomps
movsb
xor
pop
es
imul
sti
daa
xadd
xor
nop
sub
mov
out
xor
and
pusha
sbb
pushf
icebp
xchg
mov
and
mov
or
in
xchg
nop
pop
add
out
adc
xor
sbb
clc
dec
dec
lods
adc
sbb
pop
sub
fnstcw
ret
inc
xor
mulb
sti
xor
lahf
adc
ficompl
inc
pushf
lea
xchg
xchg
into
das
outsl
in
sti
adc
enter
xchg
sub
rol
movsb
andl
mul
mov
jmp
rclb
and
adc
shll
jg
adc
pop
adc
jecxz
dec
dec
shlb
jmp
shlb
stos
cmc
stos
arpl
lock
xor
dec
mov
in
sbb
repz
add
pusha
mov
and
sbb
stc
addr16
lahf
clc
inc
push
mov
pop
adc
cmp
fisttpl
add
jge
pop
mov
push
repnz
adc
mov
xchg
cmp
cli
int3
imul
mov
sub
test
test
movsl
inc
mov
jb
cmp
dec
inc
fnstenv
jo
and
je
cwtl
xorl
roll
push
in
ds
hlt
test
imul
mov
mov
push
int
jno
mov
ret
in
es
movl
xor
mov
and
inc
pop
sub
mov
cmpsl
sub
mov
aam
jmp
lret
gs
fnstsw
xchg
lods
add
mov
mov
adc
or
popf
jge
and
js
mov
mov
repnz
mov
lcall
xor
fldcw
push
sbb
in
jo
jge
adc
repz
mov
cwtl
sub
adc
push
sub
cmp
push
mov
popa
pop
ljmp
or
aas
push
inc
jne
lret
mov
mov
mov
inc
mov
push
xchg
xor
cmpsl
push
cli
movsb
das
jecxz
in
mov
xor
push
push
cmp
movsb
jno
mov
mov
mov
loop
pop
dec
test
addr16
loopne
add
push
pushf
or
popa
lret
pop
in
out
fsts
pop
hlt
dec
repz
mov
cmpsb
repnz
jne
test
inc
mov
in
in
mov
icebp
lahf
sbb
shll
mov
es
sub
push
mov
cmp
mov
lock
das
out
jl
sbb
mov
sbb
das
cltd
mov
neg
push
cli
leave
or
dec
out
daa
dec
mov
pop
daa
push
lock
cli
cmpsb
mov
ror
pop
lret
pop
repz
jle
cmc
js
scas
or
sub
adc
je
stos
xor
mov
arpl
iret
test
outsl
push
jl
lahf
and
pop
jl
ret
out
scas
xor
nop
push
gs
jl
xchg
jp
icebp
push
pop
shll
test
incl
orl
dec
dec
ss
sub
push
divl
jae
notl
fs
pushf
sbb
mov
clc
mov
push
xchg
mov
shrb
out
add
pusha
dec
pushf
mov
mov
mov
cmp
sar
xchg
arpl
and
sahf
les
xor
add
pushf
mov
xchg
test
dec
sarl
data16
icebp
adc
fisubs
divl
fsubl
mov
repnz
out
insb
xor
sbb
push
push
xchg
sti
scas
sarl
mov
pop
in
out
pop
jns
cmp
clc
ja
mov
mov
insb
pop
in
iret
sub
iret
mul
cli
push
popf
and
sbb
popf
les
mov
mov
push
mov
sub
aaa
gs
aad
xor
push
repz
leave
das
iret
add
jnp
lock
xor
je
nop
ss
fsts
xchg
insl
sbb
ret
sub
adc
mov
cli
and
pop
pop
arpl
loopne
jo
dec
cli
mov
int3
mov
gs
sbb
scas
push
sbb
rcrb
imul
xchg
fisubs
fisubl
add
sar
xor
push
mov
hlt
daa
dec
roll
stc
nop
mov
shlb
cmpsb
push
aas
mov
nop
mov
aam
inc
sub
mov
ror
das
jns
std
in
aam
test
pushf
stc
pop
movsl
call
xor
rclb
inc
pop
std
add
pushfw
sub
adc
jb
and
sbb
jae
nop
int
mov
adc
and
ds
mov
fbstp
and
popa
out
mov
dec
scas
push
enter
jae
das
scas
es
iret
jl
pushf
lods
mov
add
cwtl
pop
fists
test
ret
stos
mov
mov
fidivl
sbb
mov
mov
push
sbb
push
arpl
sub
pop
test
lahf
in
cli
pop
lea
adc
shll
adc
xlat
out
ja
mov
or
fwait
lret
repnz
icebp
aas
adc
jle
rcrb
sbb
movsl
das
jmp
movsb
mov
out
jnp
je
and
mov
sbb
sti
or
dec
test
testb
stos
jecxz
enter
cmpsb
xor
adc
stos
out
inc
sbb
push
outsb
sbb
popf
jno
xor
lret
mov
xor
inc
orb
fisttpll
inc
sti
int3
insb
les
mov
sbb
lret
popa
scas
fdivs
pop
shrb
stos
xchg
fadd
stos
adc
shl
push
sti
dec
push
out
es
out
subb
imul
and
dec
add
sub
iret
push
mov
int3
repnz
cs
imull
mov
or
das
pop
mov
loop
bound
cld
add
jno
jle
cmp
out
popa
insl
xor
push
jp
movsl
sub
sub
daa
mov
push
cmp
xchg
jp
and
outsl
addl
or
aad
cs
mov
sahf
xor
enter
rcrb
pop
iret
jo
sub
sahf
sti
add
jecxz
fcoml
jl
add
sbb
pop
mov
sub
push
loop
mov
push
push
jo
loope
xor
ficomps
cli
movsb
insl
sub
in
test
mul
ljmp
jb
inc
push
cmove
inc
and
mov
or
rcll
movsb
fisubs
test
icebp
lret
xor
insb
pop
xchg
out
dec
pop
cwtl
hlt
test
insb
dec
out
cmpsb
dec
jl
jns,pt
xor
inc
int
int
lods
sahf
lods
out
mov
xchg
push
jns
repnz
jo
cmp
pop
mov
daa
mov
into
ret
pop
call
and
shlb
dec
mov
loop
xor
mov
ds
outsl
ljmp
xor
push
fcompl
cmp
mov
daa
jb
xor
aam
fucom
gs
enter
fwait
test
decl
sub
push
repz
inc
sbb
sbb
fsubs
adc
jl
jle
out
push
xchg
mov
shrl
sbb
dec
inc
mov
adc
test
je
lods
fdivr
pop
iret
pop
fstpt
cmp
iret
daa
cvtdq2ps
sbb
mov
mov
push
fwait
push
int
gs
andb
jae
sub
aad
mov
movsl
mov
mov
add
outsb
lock
call
dec
cmp
mov
jl
fucom
jae
push
sbb
xchg
sbb
xor
jb
or
ret
jl
or
bound
add
dec
test
xchg
sar
inc
repz
aas
mov
cwtl
lds
jbe
les
adc
lods
stos
add
sbb
mov
iret
jmp
mov
andl
loope
dec
test
pop
push
push
ficoml
push
lock
lods
icebp
mov
pop
mov
jge
cmpsb
xor
lea
sti
sub
jb
mov
orb
fcoml
insl
es
addr16
repz
sub
out
jp
add
mov
push
stc
push
ja
mov
push
sub
mov
and
push
les
xchg
lcall
mov
adc
rol
test
or
std
jp
fnstcw
or
mov
cmp
xchg
pop
out
scas
inc
dec
inc
or
ss
xchg
dec
repnz
ljmp
mov
and
insl
sbb
jl
nop
or
imul
loopne
jae
out
cmpsb
imul
inc
insl
hlt
pop
xchg
movups
add
aas
add
push
inc
insb
enter
push
sbb
fcomps
sahf
xchg
loopne
push
jl
jg
or
xchg
and
mov
cmp
in
xor
push
outsb
xlat
xor
sbb
scas
jge
sub
mov
mov
stos
lahf
fcompl
mov
jg
lock
xchg
xchg
test
rolb
mov
lea
sub
adc
js
outsb
fisttpll
push
leave
adc
jnp
int3
scas
out
cltd
je
leave
rolb
sbb
fidivs
fcmovnb
shlb
mov
ds
xor
stc
nop
push
loop
inc
and
adc
addb
stos
mov
shlb
mov
out
lea
sbb
ret
lods
cmp
shll
cmc
push
xor
push
stos
and
mov
xor
stos
fcoms
pop
sbb
int
fld
pop
fildl
jno
jno
add
pop
iret
xor
add
insl
popa
stos
inc
mov
ret
popf
call
stos
xchg
mov
idiv
ljmp
mov
mov
les
pusha
fildl
inc
mov
pop
add
or
cmp
pop
mov
lock
ss
mov
dec
int
int
cli
andb
mul
and
dec
cs
sub
push
out
stos
fmul
ss
jbe
test
lcall
loop
dec
mov
out
xchg
jno
fsubrl
adc
mov
jo
jns
push
out
sbb
icebp
mov
jne
push
popf
mov
adc
pop
lods
movsl
jmp
cmc
cmpsl
loopne
dec
push
scas
xor
xor
sbb
loope
push
sub
cmp
pushf
xchg
dec
cmp
inc
mov
cltd
mov
mov
or
pop
xchg
std
clc
mov
insb
and
pop
fs
aas
pushf
mov
jecxz
lods
inc
xor
loope
repnz
push
cmpsb
jnp
dec
mov
and
shll
cmpl
cmp
xchg
test
stos
xor
dec
arpl
mov
inc
push
cli
xchg
test
adcl
pop
out
cmp
frstor
test
xor
lret
xchg
jno
outsb
mov
sub
xchg
dec
xchg
or
enter
aam
xor
mov
call
stc
pop
fcoml
sub
outsb
ficoms
sbb
das
sar
cmp
ja
push
cwtl
repz
stos
rclb
test
and
je
mov
cwtl
iret
rclb
push
cmpsb
add
pushl
popa
mov
aam
cmpsl
sahf
and
mov
or
repz
xchg
in
inc
test
into
out
or
lods
leave
pop
popf
sti
stos
sti
jge
jp
aaa
jge
push
clc
shrb
add
scas
pop
jne
xchg
adc
push
adc
test
sub
cmp
lret
sbb
cs
push
fidivrs
inc
std
xchg
sub
fistps
push
sbb
les
cmp
add
sti
shll
daa
in
jno
push
adc
dec
cwtl
fstps
leave
pushf
jle
mov
pop
jg
int3
outsb
pop
mov
fs
adc
jno
int3
in
mov
mov
dec
test
cmp
std
es
cli
iret
jo
inc
inc
es
mov
and
dec
scas
ja
mov
cmp
dec
frstor
enter
or
dec
pop
and
jbe
dec
repz
sub
pop
lahf
mov
or
lods
ror
or
xchg
add
push
into
jno
push
jmp
pusha
mov
repnz
int3
inc
mov
xor
scas
imul
mov
loope
int3
xchg
mov
out
cmp
js
dec
popf
test
or
es
pop
adc
das
and
mulb
loopne
xchg
lret
mov
cld
add
test
inc
xor
test
xchg
xchg
hlt
fsubr
push
lcall
mov
in
lock
jae
nop
repnz
ljmp
sbb
mov
and
inc
cmc
mov
or
push
xor
lods
ds
mov
jns
popf
xor
clc
jo
leave
mov
test
sbb
push
aaa
je
jnp
mov
pop
decb
pusha
push
mov
sub
test
shll
xor
sub
test
cld
lret
out
or
call
dec
arpl
pusha
jb
fidivrl
dec
out
repnz
cmp
aad
popf
push
push
outsl
scas
push
lds
jbe
jo
dec
dec
test
xorb
test
in
fiaddl
adc
arpl
frstor
je
clc
adc
xchg
inc
fdivl
and
adc
movsb
xchg
inc
mov
fmul
imul
int3
pop
test
xchg
jg
mov
push
insb
jne
and
out
sub
or
jo
loop
push
mov
inc
aas
pop
ljmp
mov
cld
test
int
fisttps
or
pop
dec
sub
fmuls
lret
shr
jne
mov
rclb
cmp
lahf
pop
mov
out
xor
aad
lahf
fs
push
add
lret
mov
or
popf
mov
jp
xchg
mov
mov
sub
loope
out
cs
aas
les
cwtl
pop
sub
scas
mov
mov
mov
clc
push
mov
rorb
andl
mov
rclb
mov
fldl
mov
cmc
sbb
aad
and
inc
jmp
adcb
add
cmp
jmp
lds
mov
fsubs
add
aam
call
or
enter
inc
pop
dec
icebp
xlat
das
inc
sti
and
test
sbb
icebp
mov
hlt
mov
sbb
imul
pop
dec
loopne
cld
push
into
adc
call
je
cmp
mov
daa
and
pusha
add
xchg
xor
inc
fnsave
test
xor
push
adc
xchg
adc
mov
daa
sbbb
loope
jl
inc
in
xor
lea
clc
aas
mov
mov
cmp
ds
sub
lret
mov
popa
cmp
cli
sbb
mov
loop
bt
test
jg
cmp
dec
jne
ss
stc
lods
enter
sub
outsb
stos
lret
aam
mov
or
xchg
fsubs
idiv
faddp
and
push
mov
jge
xchg
insl
pop
into
mov
clc
cltd
mov
iret
jo
mov
aas
dec
or
loopne
aad
dec
shlb
jle
test
xchg
cmc
mov
clc
xchg
imulb
loop
mov
push
xor
stc
popf
push
sub
cwtl
shl
ja
int
mov
jns
mul
rcr
scas
adc
test
mov
pop
inc
pusha
mov
mov
insb
sbb
cmp
xchg
cmp
sub
mov
and
dec
out
insb
fildl
lods
pop
dec
sub
lds
inc
jae
stos
inc
mov
movsl
cmp
dec
mov
icebp
jne
mov
sbb
push
push
or
jg
test
mov
dec
xorl
nop
inc
hlt
mov
mov
iret
mov
mov
push
xlat
pop
jp
inc
cwtl
jno
insb
outsl
enter
loop
stos
xorl
aas
unpckhps
out
sbb
jmp
notb
ds
mov
xchg
popf
in
pop
aam
push
sub
push
divb
mov
dec
sbb
mov
or
pop
mov
jp
aaa
mov
xchg
jbe
cmpsl
out
negb
mov
daa
fcomps
fisttps
gs
jnp
mov
sub
mov
pusha
adc
test
push
mov
mov
jg
xchg
push
sbb
add
pop
sar
dec
mov
daa
ds
mov
call
inc
pop
or
or
or
daa
cmpl
adc
shlb
les
mov
lret
or
mov
mov
cs
daa
add
lcall
pop
inc
ret
je
jae
jae
jl
mov
int3
inc
ret
mov
imul
fwait
and
sahf
icebp
mov
iret
loop
jno
dec
lods
push
add
mov
test
loope
xor
ret
testl
add
and
pop
sub
rcr
adc
bt
push
inc
mov
xor
push
adc
cmp
pop
push
xchg
aaa
pop
das
and
add
adc
shll
sbb
aad
inc
scas
push
xor
shlb
lahf
ret
and
test
pop
and
jb
or
mov
push
xchg
pop
xchg
xchg
cmp
xchg
pop
dec
add
insl
in
mov
imul
pop
cmc
in
into
mov
aaa
xchg
fdivrp
cs
mov
rolb
aas
cltd
xchg
xlat
xor
xchg
mov
mov
rcll
and
popa
add
sub
adc
les
das
fwait
mov
lcall
sbb
fnstenv
sub
frstor
aad
std
jbe
ds
movaps
fcmovnb
or
jp
test
in
xchg
adc
inc
dec
fistps
pop
mov
push
leave
rcll
rcrl
mov
adc
sub
jae
inc
push
pop
mov
mov
cmp
lar
arpl
sbb
xor
js
or
lock
gs
or
jle
nop
add
leave
mov
cmp
fsubrp
jb
inc
cmp
mov
add
dec
lds
inc
fimull
gs
sub
mov
dec
and
cmp
out
or
push
in
neg
das
mov
out
push
data16
daa
mov
iret
mov
icebp
test
sbb
jecxz
mov
int
in
sub
push
lods
rclb
add
testl
mov
jle
jno
lods
out
fdiv
mov
stos
xor
sti
in
inc
jle
ret
add
out
jns
jae
rcr
stos
cmp
adc
add
test
mov
out
xor
inc
outsb
and
xchg
call
rcl
push
nopl
aad
sub
mov
imul
pop
imul
push
outsl
dec
dec
int
out
jno
mov
jnp
push
fstl
out
in
mov
jmp
mov
cwtl
inc
cld
dec
movsb
jp
or
dec
out
ljmp
lahf
icebp
clc
lret
mov
xchg
jp
pusha
int3
popa
sbb
jmp
out
stos
pushf
xor
and
xor
push
ljmp
add
push
xor
add
xchg
xchg
clc
pop
ds
inc
cmp
ffreep
jg
cltd
insl
cmp
enter
in
filds
jmp
cmp
test
loope
repnz
push
popf
test
cld
mov
leave
jne
pop
and
in
mov
rcrl
mov
jno
dec
insl
arpl
icebp
lret
pop
or
mov
lds
stc
lcall
mov
sub
dec
mov
inc
ret
fdiv
mov
lahf
in
and
mov
push
mov
mov
mov
fdivrl
dec
jle
mov
ret
jns
ljmp
add
inc
dec
inc
insb
jge
jno
aam
cmp
daa
xchg
gs
out
out
inc
add
adcb
and
outsl
fsubl
mov
lock
popf
push
mov
push
in
test
rcrb
cmp
lahf
test
pop
inc
push
push
dec
fs
cmp
sbb
test
jb
dec
in
stos
cmp
popa
movsb
mov
inc
jns,pn
js
mov
cli
inc
or
or
out
sbb
and
ljmp
mov
xchg
test
imul
sub
ret
mov
and
push
pusha
loopne
mov
aaa
enter
mov
iret
test
cli
insb
nop
mov
jb
mov
pop
lcall
rolb
jg
pop
xor
mov
fs
mov
jl
stos
bnd
sub
idivb
leave
dec
jo
sbb
adc
stos
mov
jp
test
dec
mov
in
outsb
les
xchg
add
out
push
dec
mov
lds
mov
mov
jl
stos
sti
lds
lahf
aas
push
push
add
iret
dec
and
sarl
add
and
mov
test
jp
xor
stos
scas
jp
popf
push
out
mov
lret
add
mov
leave
out
jno
icebp
xchg
push
xchg
inc
cmp
int
or
in
jle
outsb
aas
dec
sbb
enter
das
fcmove
lods
das
in
xchg
imul
movsb
mov
push
jg
ret
xchg
and
clc
incb
lcall
ja
or
and
movsb
adc
push
arpl
arpl
adc
inc
jg
bound
xchg
xor
aaa
sub
insl
stos
lock
loope
adc
inc
mov
push
cmc
repnz
add
daa
lret
ret
jle
fidivl
out
hlt
jle
adc
insl
add
and
aaa
loopne
rcrl
pop
addr16
mov
inc
sbb
xchg
cs
adc
mov
xor
icebp
adc
push
jae
push
push
xor
adc
ret
scas
and
mov
dec
stos
dec
sub
repnz
dec
xor
int3
mov
pop
ret
add
pusha
aam
mov
mov
jecxz
cmpsl
mov
xchg
mov
and
add
pusha
inc
pop
cs
mov
jecxz
negb
aas
push
imull
xchg
loopne
mov
incb
fisttpll
mov
jae
cmc
std
das
pushf
imul
mov
ret
cmp
mov
inc
and
adc
mov
rclb
pop
ljmp
lret
cmp
out
or
dec
jae
aam
push
mov
fdivrs
mov
or
push
test
inc
inc
cltd
lahf
jp
xchg
xor
popf
xchg
repz
jns
je
or
mov
and
pop
sbb
mov
push
shlb
out
mov
pop
jle
pop
xor
pop
push
movsl
loop
lret
out
xchg
outsb
adc
sub
dec
fldenv
pop
out
es
mov
mov
out
ret
daa
hlt
lret
jb
dec
bound
cmp
out
inc
jmp
rcrb
xchg
mov
fstl
jecxz
mov
movsl
mov
ljmp
jmp
push
sbb
orl
sub
jno
es
xchg
leave
cmp
dec
add
sub
mov
cwtl
dec
aad
add
mov
add
mov
mov
out
sub
shll
lahf
cmp
lock
sbb
dec
mov
sbb
mov
sysenter
xor
xchg
rclb
xor
or
adc
jmp
jle
xchg
push
fistl
lock
pop
repnz
clc
jmp
jg
test
cltd
std
mov
jbe
jo
dec
dec
ss
sub
or
push
call
lds
jmp
xor
mov
mov
and
andb
call
out
lret
daa
mov
mov
push
and
mov
dec
mov
enter
push
sbb
push
orb
add
aad
xorl
adcl
gs
push
push
mov
sub
je
dec
and
cmp
jge
sbb
cmp
das
cmp
xor
sahf
iret
sahf
pop
in
xchg
xchg
insl
pop
pushf
add
popa
mov
fs
jbe
add
add
clc
idivl
jl
push
cltd
mov
mov
pop
or
ss
sub
not
sub
or
sti
or
jne
mov
or
icebp
in
and
cltd
mov
out
or
in
inc
ss
inc
or
mov
cmp
and
aam
push
sbb
jno
aam
mov
inc
fsub
push
pusha
xor
les
decl
cli
push
cld
cld
sbb
into
jl
and
aaa
movsb
ret
cmp
adc
mov
cld
and
push
cmpsl
stc
pop
fistl
jb
cmpsb
jecxz
inc
data16
sub
and
xor
icebp
call
sbb
mov
pop
leave
inc
and
lock
pop
cmp
gs
fdiv
js
in
bound
inc
xchg
or
out
xor
dec
mov
mov
icebp
push
sarb
push
jle
mov
cmp
fdivrs
rcrb
lods
test
loopne
insb
mov
and
gs
mov
dec
and
movsb
xor
orl
loopne
add
pop
leave
rcl
cmpsl
mov
jbe
movsl
sub
rorb
sbb
and
pop
mov
repnz
xor
loop
dec
pop
repz
mov
jne
in
dec
cmpsb
popa
mov
jmp
repnz
fists
test
punpckhwd
pop
mov
push
stos
rcr
xlat
mov
push
push
popl
pop
and
lcall
sbb
cmp
fidivrl
loop
jge
test
rorl
jmp
movsl
popa
and
mov
mov
jno
pop
push
jle
xchg
sti
jne
add
mov
inc
sbb
sar
cmp
call
xchg
rcrl
dec
jg
mov
xor
push
fdivp
std
inc
sbb
gs
mov
push
lahf
push
int
test
outsb
jge
mov
ds
push
enter
inc
sub
push
push
pusha
lea
cmp
shrl
mov
les
sub
icebp
leave
pop
jns
mov
mov
fisttpl
enter
outsb
jnp
push
cmp
test
sbb
adc
lahf
push
push
xor
das
lret
mov
subl
sarb
gs
aad
movsl
sahf
push
pop
mov
xor
movsl
sub
cmpsb
sbb
ret
inc
cmp
add
lret
subb
gs
add
mov
mov
out
cmp
push
mov
dec
jg
out
fcoms
lea
decb
and
jbe
or
jl
hlt
data16
out
mov
into
push
stc
fsubs
or
int
ss
and
pop
mov
mov
or
lret
sbb
mov
cwtl
xchg
cmc
adcl
jle
ret
mov
jmp
ds
fucomi
ret
sbb
cli
push
fmull
inc
iret
and
push
xor
add
jbe
sbb
pop
daa
dec
movl
jg
cmp
das
lcall
mov
sbb
outsl
in
and
sbb
into
push
and
and
in
sub
adc
loop
dec
addr16
call
sub
subb
pop
out
add
pop
enter
add
push
fldenv
ja
cmp
aam
imul
push
and
out
mov
test
mov
xchg
jp
sbb
and
insb
xchg
pusha
xchg
aad
and
mov
aas
es
sbb
int
mov
jmp
lods
out
pop
insl
dec
scas
ret
xchg
add
mov
xchg
fs
ret
xchg
imul
pop
out
pop
pop
fcoml
shl
push
cld
inc
xchg
sbb
lret
dec
mov
and
pop
sbb
inc
pop
ret
dec
test
dec
cmp
dec
into
mov
iret
adc
add
into
inc
stos
pop
nop
roll
sti
in
or
clc
adc
ljmp
xchg
mov
out
or
jl
aam
xor
test
loopne
and
xor
push
xchg
push
lret
jo
fadd
push
je
xchg
mov
aaa
insb
mov
sbb
daa
leave
adc
cli
out
test
or
jns
cmp
mov
mov
fistpl
test
ret
inc
push
subb
jno
loope
pop
cmp
xlat
xchg
ss
xchg
xchg
jmp
sub
mov
test
pop
repz
xchg
test
shrb
in
fmuls
push
jo
scas
push
sub
or
sub
stos
sub
sbb
push
jne
popf
int
xor
xor
fs
and
orl
sbb
lahf
push
or
cmpsl
test
aam
add
jbe
mov
pusha
adc
jp
fistps
inc
lods
xor
hlt
and
pop
int
xchg
inc
jne
mov
dec
mov
cltd
mov
call
stos
addr16
movsb
loop
xchg
mov
mov
sub
pop
movsb
dec
mov
out
push
mov
nop
dec
scas
repnz
sub
pushl
push
xor
mov
cmp
cmp
jle
pop
das
gs
data16
inc
hlt
ja
andb
shrb
sub
out
xchg
mov
popa
pop
sbb
jecxz
jnp
adc
arpl
adcl
pop
in
sub
pop
loop
out
ret
pop
std
sub
xor
and
push
ljmp
push
clc
and
fcompp
sbb
xchg
sti
pop
out
adc
les
push
enter
mov
add
shlb
pushf
test
cmp
add
fistpl
push
add
inc
cld
inc
cmp
inc
fs
stos
cld
pop
rcrb
add
mov
jne
movsb
icebp
maskmovq
imull
push
and
leave
scas
sbb
int
pop
arpl
dec
mov
add
arpl
add
loopne
dec
mov
aad
insl
shll
das
mov
dec
push
add
xchg
xor
pushf
dec
mov
test
bound
jne
mov
shll
int3
into
sbb
lahf
add
outsb
cltd
fs
gs
inc
arpl
xor
inc
jl
cmpsb
dec
xlat
shl
test
sbb
cmp
sbb
cltd
je
clc
daa
adcb
sub
push
loope
scas
add
mov
pop
jmp
scas
icebp
inc
fs
adc
adc
ja
fldcw
mov
movsb
pop
int
in
out
cltd
int3
dec
or
bound
addr16
rclb
inc
jecxz
dec
imul
rorb
loope
sarl
push
sub
scas
loopne
out
adcl
mov
arpl
jecxz
cmp
xchg
inc
pop
mov
lods
push
cmpsl
out
sarl
or
pop
dec
inc
sbb
cmpsl
imul
xchg
cld
mov
scas
push
mov
js
rcr
test
cmpsb
sbb
adc
push
std
je
lock
call
sbb
test
rcl
and
mov
fsts
pop
icebp
test
insl
sbb
sub
fisubrs
ss
sarl
lcall
sbb
and
arpl
movsb
popa
cmp
dec
test
xor
inc
int
sbb
inc
and
push
fildll
mov
cmpsb
xchg
repnz
mov
repnz
sbb
cld
popf
and
popa
ret
enter
dec
jb
rorb
mov
sub
xor
mov
fnstenv
stc
nop
mov
shl
pushf
cld
scas
fsubrl
xor
mov
mov
xor
rclb
or
pop
push
pop
cs
push
fistpll
loopne
dec
mov
aam
stc
aaa
dec
adc
jge
fs
int3
cmpsl
leave
stos
lahf
int
pop
test
es
pop
popa
lea
shrl
mov
ja
mov
lods
cmpsb
push
mov
lock
sub
rcll
xchg
pop
das
mov
idiv
mov
cmpsl
mov
sub
les
adc
xor
stos
and
xor
jge
test
sub
call
shll
lret
pop
rol
repz
dec
sub
push
and
pop
cli
mov
pop
pop
div
fidivrl
or
jle
cmpsb
or
or
out
mov
inc
pushl
out
sub
mov
pop
arpl
and
jl
push
stos
xchg
in
rcrb
icebp
test
movsl
xlat
aam
arpl
je
cltd
std
and
insl
sbb
jbe
pop
jg
mov
notb
enter
add
lods
mov
push
popa
lods
xchg
mov
adc
pop
or
pop
jecxz
sub
mov
mov
xor
xor
outsl
subl
adc
repnz
aaa
lods
and
inc
sub
cmp
jle
mov
mov
mov
aas
jg
inc
leave
push
je
jmp
mov
mov
shlb
iret
mov
jae
sub
nop
les
add
pop
popf
push
sbb
cmc
mov
add
lcall
mov
or
mov
cmc
inc
jge
inc
sarb
sarl
clc
dec
jb
movsb
mov
cmp
out
out
addr16
iret
es
gs
push
cmp
ljmp
mov
sub
addr16
andl
add
dec
cmp
adc
pop
sub
dec
xor
xchg
fwait
inc
dec
push
test
arpl
sub
in
sub
stos
mov
leave
pusha
and
or
subl
inc
or
aad
imul
dec
pop
inc
push
in
mov
ss
mov
mov
xor
inc
sub
mov
outsb
subb
enter
mov
add
repnz
dec
idivb
xor
in
pop
pop
cld
jns
xchg
lods
inc
test
add
adc
pushf
scas
cmpl
jmp
cmp
xor
jno
ret
nop
lock
jae
push
add
aaa
xchg
adc
pop
ljmp
mov
mov
add
shrb
nop
das
dec
lods
push
insl
add
into
lret
add
add
jno
sub
cmpb
enter
fnstsw
fwait
jnp
jns
sbb
mov
add
lahf
jno
cmp
fdivrp
jno
shrb
cmp
cli
push
add
dec
dec
jno
dec
ljmp
mov
mov
sbb
hlt
mov
pop
mov
js
das
hlt
ja
pop
dec
mov
mov
adc
xchg
lods
mov
ret
or
dec
clc
fs
aas
outsl
call
inc
fistpll
mov
aaa
dec
cmp
mov
adc
xchg
cmp
call
dec
push
xor
jns
pop
or
xchg
iret
bound
mov
sub
gs
dec
mov
sub
aad
hlt
cli
std
xor
mov
push
lods
loope
icebp
jae
inc
fstpt
sarl
adc
dec
sbb
inc
inc
fisubl
out
dec
xchg
movsb
outsb
mov
inc
push
js
mov
sub
push
adc
pop
movsl
adc
xor
sahf
cmpsl
jo
cltd
mov
in
cmp
lahf
add
sahf
sub
flds
add
dec
aaa
push
sub
cltd
mov
loopne
push
stos
pop
jbe
mov
shlb
clc
jno
in
mov
add
daa
sarb
cmp
mov
xchg
lods
nop
mov
push
int3
addr16
push
mov
lret
aas
rclb
icebp
xchg
mov
ds
add
inc
sub
cltd
jp
movsl
movsl
xor
xchg
prefetch
adc
mov
lock
inc
mov
sub
dec
aam
mov
daa
fsubs
inc
outsl
xor
push
insb
cmp
jo
cmp
sbb
or
add
js
mov
jb
lcall
popa
sbb
scas
enter
test
cmp
imul
dec
fldl
cmp
xchg
in
in
jl
inc
frstor
cmp
test
sahf
sti
mov
sbb
add
movsl
lret
sub
mov
icebp
lcall
fs
shl
jno
movsl
scas
jle
mov
jp
loope
sbb
aas
int
cs
mov
sbb
lea
gs
pop
pop
xor
jecxz
std
xlat
jns
lods
fdivrs
dec
cltd
fnstsw
jo
jbe
push
pushf
in
in
push
fbstp
popf
sub
push
adc
fdivrl
mov
out
mov
cmp
or
lahf
insb
jmp
xlat
and
mov
push
xor
in
pushf
mov
push
leave
addr16
lret
movsb
or
or
enter
movsl
roll
ret
sbb
sbbb
aaa
dec
cli
xor
push
mov
pusha
lcall
sub
lods
out
std
dec
mov
testl
subl
mov
repz
push
or
add
push
xchg
xor
addr16
and
dec
xchg
pop
pop
enter
push
push
out
outsl
mov
pusha
loope
pop
cmc
mov
cmp
loope
sub
pop
xchg
inc
dec
mov
lret
and
ss
shl
mov
fs
fiadds
push
or
loopne
ljmp
aas
xor
movsl
cwtl
jno
jmp
push
out
mov
mov
jo
repz
pop
mov
fsubs
xor
leave
js
xchg
mov
and
scas
movsb
lods
push
data16
mov
adc
inc
fildll
fdivrl
es
dec
sub
sub
idivl
sbb
sub
fildl
jle
sbb
xlat
int
test
jbe
adc
xchg
inc
cs
xchg
repnz
cltd
adc
lret
fstl
add
test
mov
shll
and
xchg
popl
pop
sbb
xor
adc
rcl
pop
xor
fmul
xlat
out
rorb
mov
adc
xchg
aad
icebp
mov
out
iret
pushf
adc
std
mov
push
jo
xchg
aaa
out
cmpsl
xchg
mov
rcrl
out
data16
pop
jno
mov
call
xor
pop
push
mov
testl
sbb
das
test
in
mov
insb
pop
enter
test
and
adc
cmp
jle
and
mov
scas
ljmp
pop
ja
jge
jo
mov
jg
inc
loop
out
dec
mov
or
test
gs
int3
cmp
inc
repz
test
push
mov
dec
fdivp
mov
out
dec
sbb
dec
jbe
pushf
sbb
push
adc
xor
rcll
test
sbbb
frndint
aad
fwait
xor
sub
inc
mov
frstor
movsb
xor
jbe
cli
movsb
mov
andb
mov
xlat
adc
stos
cmp
or
lods
push
mov
sub
fidivrs
lods
inc
stos
push
popf
outsl
xor
data16
adcb
pop
minps
dec
sub
xor
xchg
xchg
ja
pop
dec
popa
nop
xchg
jb
jo
sub
adc
lock
sbb
mull
jo
rorl
pop
xchg
pop
mov
mov
add
imul
int3
repnz
mov
dec
out
or
push
adcb
mov
in
jno
cmpsb
adc
xor
cmpsl
inc
lret
and
das
mov
xchg
push
adcb
cld
or
pop
and
dec
push
xchg
nop
and
sbb
dec
incl
dec
mov
sbb
sub
scas
js
fwait
shlb
pop
in
inc
or
incb
sbb
jae
fs
sub
rcr
jb
out
pusha
mov
xchg
and
sbb
scas
test
sahf
or
in
iret
movsb
xchg
lods
mov
sub
in
sarl
mov
in
pushf
pop
jmp
jb
gs
mov
inc
sub
mov
movsl
mov
daa
imul
aas
inc
data16
inc
jo
inc
call
add
rcrl
iret
es
adc
jo
int3
hlt
notl
xor
lock
pusha
mov
dec
mov
pusha
push
mov
imul
cmp
es
cmp
or
and
imul
ljmp
cmp
adcb
and
in
mov
cli
adc
les
mov
dec
lock
dec
out
or
xorb
inc
mov
xchg
lea
lock
inc
adc
pop
jp
or
cmp
inc
pop
inc
fistpll
mov
daa
les
testl
addr16
stos
leave
xor
jbe
mov
bound
test
out
adc
fldt
pushf
add
mov
xchg
imul
adc
movsb
xchg
mov
in
xor
scas
push
dec
and
loopne
aaa
dec
int
lea
sbb
or
shlb
fs
cmpsl
testl
jo
mov
jbe
std
mov
mov
outsb
adc
std
xchg
rorl
and
ret
cmpsb
push
add
lahf
lods
xchg
les
xchg
mov
mov
cld
add
iret
or
xor
lods
stc
ja
leave
and
jns
scas
pop
xor
lcall
repnz
dec
jnp
and
xchg
mov
jmp
lds
pop
pop
out
loopne
ss
imul
mov
mov
mov
ljmp
xchg
jg
loopne
and
add
jnp
adc
jl
inc
and
jl
sbb
inc
cmp
jecxz
sub
mov
imul
push
push
fsubrl
fadds
add
jbe
sbb
add
jmp
in
mov
add
fsubs
imul
sub
out
decb
cli
cmp
pusha
add
outsl
rolb
add
insb
pop
out
push
or
and
cmp
jne
ret
aam
movb
xor
dec
loopne
adc
gs
loop
mov
ss
cmp
mov
ja
pop
xchg
jne
xlat
xor
je
pop
adc
das
cwtl
imull
negl
push
mov
jl
jp
out
push
stos
inc
jl,pt
fs
ret
addr16
mov
mov
loopne
add
fptan
les
pop
imul
fiaddl
test
cmp
push
jo
int3
mov
cmc
cmpsl
push
rcr
mov
mov
loopne
or
sbb
pop
ja
movsb
sarl
fdivrs
daa
sbb
dec
xchg
shlb
pusha
or
shrl
std
cmp
mov
inc
repnz
lcall
cmp
popf
xchg
cmp
jo
iret
cmp
aad
adc
shlb
xchg
jl
inc
lret
ss
xor
sub
mov
adc
lods
mov
shrb
pop
mov
cmp
test
movsb
imul
incl
pop
stos
mov
rorb
mov
in
shrl
rorl
sbb
mov
lods
out
add
je
movsb
add
adc
pop
xchg
dec
aad
stos
aas
aas
push
out
cwtl
clc
xchg
in
popl
jmp
mov
pop
xchg
xchg
cld
push
cmc
adc
cmp
stc
es
push
iret
test
cmpsb
movsl
sub
add
pop
and
push
es
aam
cmp
out
adc
dec
int3
add
inc
rcl
test
pop
cmp
jp
bound
xor
xor
mov
push
mov
lods
adc
sub
leave
cs
jb
sbbb
inc
dec
mov
pop
and
popf
or
xor
adc
dec
cwtl
inc
stos
sbb
lcall
repnz
mov
dec
notl
sbb
inc
mov
cwtl
lds
enter
cmovnp
fwait
test
pop
jmp
outsl
aad
or
mov
lods
rcrb
sbb
jl,pn
fwait
mov
stos
test
sbb
xchg
outsb
or
ret
add
lods
inc
sub
or
out
mov
sbb
push
insl
mov
xor
add
sbb
inc
stos
mov
add
in
lcall
lahf
or
xlat
mov
enter
data16
ljmp
sub
push
data16
aaa
mov
aam
loop
ds
sbb
insl
cmp
ret
mov
icebp
or
and
pop
xor
icebp
sub
addr16
out
dec
scas
fdivs
inc
push
clc
shr
das
pop
out
cmc
xor
xor
je
lods
cmp
mov
push
mov
arpl
and
inc
out
pop
inc
loop
add
mov
repnz
mov
loopne
and
das
inc
or
mov
inc
fldcw
mov
xor
pushf
mov
aas
xor
xchg
xlat
cmpsb
mov
sti
push
mov
mov
in
push
lods
lret
icebp
test
aaa
pushf
movsl
push
xor
fnclex
sub
add
xchg
mov
add
adc
lods
int3
int
sub
or
adcb
das
jle
pop
stos
lods
add
mov
mov
sub
pop
idiv
push
pop
xchg
pop
daa
and
aam
mov
dec
daa
and
jl
inc
je
arpl
fisubrs
shll
cmp
fwait
inc
sub
push
xchg
sub
sbb
testl
loop
sbb
inc
cld
cli
ret
cltd
in
daa
xchg
cwtl
and
popf
scas
rorb
mul
sbb
nop
adc
in
loop
mov
sub
push
pop
cmpsb
xor
jl
ja
sub
pop
inc
arpl
lahf
mov
jno
repz
mov
sub
jl
imul
inc
and
mov
inc
inc
subb
push
mov
and
sbb
loopne
xlat
popa
insl
mov
lock
push
aam
and
icebp
inc
out
mov
mov
pop
les
lods
mov
xlat
adc
lock
jg
imul
sub
xchg
add
std
mov
hlt
stc
xor
enter
and
and
movsl
aad
mov
sbbl
push
cmp
xchg
cmpb
fistpll
or
orb
add
shrb
in
xchg
push
test
and
out
gs
sub
adc
ret
data16
inc
sahf
push
iret
mov
mov
mov
fcom
das
xor
xchg
jb
fs
adc
sbb
dec
mov
outsb
std
xor
mov
test
ljmp
clc
fisubs
testb
shrb
or
cmp
test
rolb
les
and
lock
adc
add
jle
call
push
mov
jne
pop
add
mov
fisubs
jno
popf
movsl
pop
int
dec
add
xorl
mov
push
cmp
ds
mov
fsubrl
inc
push
sub
and
xchg
sub
pop
sbb
push
scas
andb
hlt
in
in
push
or
imul
cmpsb
pushf
push
sub
fucom
bnd
es
rolb
mov
lods
jecxz
ljmp
or
xor
xor
xor
aad
pop
inc
movsb
es
xor
fsubr
repnz
mov
cltd
add
adc
push
stc
pop
xor
add
adc
lock
out
sbb
ror
and
rolb
xchg
xor
loopne
mov
jl
push
fcmove
xchg
pop
lock
lods
jp
lret
mov
mov
mov
sub
js
std
add
inc
xchg
out
cmpsl
xor
mov
call
lds
mov
insl
jnp
push
adc
cmc
aaa
pop
mov
les
scas
outsl
pusha
int3
scas
out
lea
mov
xchg
test
mov
pop
xchg
clc
data16
mov
sub
push
mov
sub
add
lahf
xor
xor
or
cli
inc
pushf
xorl
aas
xchg
dec
and
and
or
mov
adc
lods
lods
bnd
inc
mov
fdivr
cmp
cmp
fmuls
jg
push
stos
or
lret
cld
loopne
and
mov
inc
cmp
insl
xlat
mov
fcmovnu
lahf
ror
out
xor
aam
andb
cmc
and
in
xorl
xchg
mov
xchg
mov
cwtl
mov
mov
jecxz
sbbb
shll
fldcw
dec
into
mov
lods
pop
sub
cld
ja
int
ss
out
pop
pop
sbb
jmp
xor
inc
inc
imul
lret
dec
mov
adc
dec
jmp
icebp
popf
xchg
arpl
scas
lcall
ret
sub
stos
dec
out
stos
inc
cwtl
scas
sar
and
jo
ret
sub
mov
push
jmp
or
popf
mov
add
xchg
out
xor
imul
fs
cmp
stc
adc
inc
out
imul
lds
enter
adc
stc
pop
das
sbb
dec
push
and
cwtl
das
outsl
cwtl
imul
or
out
jl
xchg
inc
cmp
mov
inc
push
and
jge
fisubl
inc
inc
cmp
pop
xor
fldenv
mov
mov
roll
outsl
stos
add
test
jns
xor
cmpsb
adc
jb
mov
push
inc
push
mov
xchg
pop
mov
or
rolb
add
int
mov
fadds
popa
mov
push
ss
jnp
ud2
mov
pop
mov
gs
sub
sub
mov
addr16
addb
clc
pop
clc
lods
ss
xor
mov
js
aaa
xchg
outsl
les
fcmovb
in
sbb
inc
sbb
mov
addb
imul
insb
inc
mov
sbb
xchg
ror
les
sub
push
add
movsb
pop
mov
xlat
insl
std
ret
mov
hlt
cmp
cld
adc
mov
xchg
mov
ja
sub
sbb
add
rclb
mov
sbb
rorb
xchg
sbbb
mov
xor
in
cs
xorb
and
test
daa
out
cmpsb
fstl
and
rolb
mov
frstor
inc
cltd
jg
in
cmp
cwtl
inc
xor
jg
fcmove
lcall
pushl
pop
mov
fmuls
mov
imul
or
sbb
jl
push
inc
push
pop
cmpsb
jmp
jne
xchg
add
dec
call
sbb
dec
and
imul
hlt
popf
loop
scas
movsb
xor
mov
jge
mov
adc
pop
push
popf
mov
xchg
call
fildl
ss
add
xor
out
cmc
pop
jge
and
and
mov
and
fmuls
cmp
loopne
mov
addl
nop
outsb
or
jge
pushf
mov
mov
push
mov
pushf
jb
add
fidivl
jle
bound
popa
dec
mov
pop
dec
sub
sub
jg
ficoms
lods
xor
sub
mov
mov
mov
sbb
insl
adc
inc
add
sub
sub
dec
push
fistpll
sbb
out
mov
shrb
push
xlat
test
sub
pop
or
repnz
mov
dec
into
loopne
hlt
fistpll
or
sbbb
es
mov
or
lods
out
ljmp
or
pop
inc
rorl
hlt
jl
pop
out
xor
pushf
mov
testb
xor
popf
ja
mov
sbb
test
rcll
lea
inc
in
loope
push
mov
pop
dec
push
push
push
sbb
and
data16
mov
mov
and
pop
in
and
sub
in
dec
mov
inc
jle
inc
mov
std
mov
adc
pop
mov
js
mov
mov
inc
cmp
inc
in
adc
xchg
xchg
ret
adc
insb
mov
rorl
inc
jae
mov
orl
jne
ret
aas
pusha
mov
sti
or
jne
jno,pt
fisubl
sub
xchg
ret
out
mov
cld
xor
das
pop
aas
cs
xor
xchg
xchg
enter
jge
lds
cltd
and
inc
adc
dec
sub
enter
mov
je
sbb
into
adc
xor
das
jne
daa
cmp
cmp
repz
cmp
pusha
scas
mov
insl
cmp
test
mov
dec
dec
fcos
ror
cmp
test
sahf
cmp
test
adc
xor
mov
das
mov
ja
loope
clc
out
jecxz
push
and
jp
add
pusha
sbb
pop
sbb
loop
sbb
pop
fwait
mov
mov
push
loopne
inc
ja
xchg
enter
lret
cmp
push
clc
imul
pop
dec
dec
xchg
mov
test
mov
inc
push
jp
xor
es
negb
das
mov
jmp
mov
aad
test
cmpsl
les
pop
or
lcall
ret
insb
mov
aad
cmp
push
iret
dec
adcb
out
xor
mov
pushf
push
xor
and
xchg
or
dec
lahf
les
adc
cmp
and
inc
inc
xor
enter
pop
inc
scas
loop
mov
jo
out
testb
stos
inc
xchg
push
pushf
fsubrs
cltd
cmp
add
and
hlt
mov
dec
mov
xor
idiv
xchg
jb
pop
cs
ja
subl
fwait
sti
loopne
mov
and
inc
pop
shl
cmp
push
pop
bound
xor
push
lods
roll
popa
fisttpll
mov
mov
not
inc
sahf
dec
jp
sbb
icebp
sbb
ret
or
std
mov
or
xor
add
jp
jl
dec
shll
das
in
pop
push
xchg
dec
mov
aaa
nop
push
cmp
ss
xchg
cmp
or
insl
setge
push
iret
jo
or
add
push
je
imul
insl
cmc
or
nop
mov
mov
shrd
jns
adc
repnz
mov
nop
aam
test
cwtl
xchg
call
or
in
out
or
movsb
jnp
cmp
xor
pop
cltd
cli
lods
cmp
lods
cmc
test
out
adcb
add
xchg
mov
jge
mov
inc
idivb
add
iret
pusha
and
inc
fildl
out
call
loopne
pop
ret
inc
js
outsl
push
xchg
ss
mov
and
stc
add
pop
fisttpl
add
bound
daa
cmova
fwait
lds
cld
mov
into
mov
and
mov
pushf
or
xor
mov
fwait
iret
or
popf
xor
add
adc
lcall
out
lea
lock
push
xor
outsb
xchg
clc
jne
insb
sub
xchg
jecxz
movsl
push
outsl
into
ds
dec
mov
push
dec
into
stc
dec
ret
inc
add
push
sub
data16
add
push
and
or
fstp
popf
pop
jbe
sbb
arpl
lds
sbb
mov
dec
lods
int3
jecxz
and
into
dec
dec
in
mov
inc
push
sub
push
mov
jo
lahf
mov
lods
cmp
and
add
dec
dec
dec
mov
sub
xor
push
push
scas
out
insl
and
aaa
das
rcr
shrb
sub
iret
lahf
repz
sbb
rcrb
inc
aas
fisubl
inc
lahf
lock
popf
and
lods
push
adc
adc
xlat
inc
sbb
mov
inc
xchg
xchg
sbb
dec
test
sbbl
cmp
push
mov
les
fbstp
pop
pop
leave
mov
in
mov
or
fcoml
jne
jae
movsl
lcall
mov
gs
push
movsl
stc
rorl
xchg
sti
in
test
mov
je
jge
pop
inc
sbb
stos
stos
out
gs
outsb
sbb
mov
adc
lods
xor
pop
mov
and
push
call
and
fmul
xorl
movsb
roll
bound
test
pushl
jb
xchg
fnstsw
ljmp
in
jmp
jbe
movsb
inc
adc
in
sbb
shl
pop
mov
cmc
xchg
repnz
test
xor
sub
lods
lea
ficoml
pop
add
mov
movsl
gs
out
sub
leave
fsubrs
and
xor
les
pop
inc
mov
cmpsl
push
xchg
inc
hlt
cmp
ja
inc
xor
in
aad
shlb
dec
pusha
ja
popf
hlt
mov
lcall
mov
pop
pop
fmuls
sub
pop
repnz
js
ja
std
ss
mov
insl
iret
mov
mov
out
lahf
shll
and
scas
jae
outsl
mov
stc
pop
das
mov
mov
icebp
inc
shr
jno
lds
sub
outsl
fcoml
adc
mov
pop
sbb
shl
mov
mov
ja
pop
mov
jbe
jns
cmpsl
add
mov
cmpsl
loop
fs
mov
adc
add
push
cmp
cld
leave
cmp
cs
cld
arpl
fmuls
clc
out
fdivs
and
cmp
push
scas
cmpsb
clc
inc
negl
jg
jecxz
in
cvtdq2ps
test
lods
lea
pushf
jne
pop
movsb
aam
mov
loope
addr16
jl
pop
mov
fildl
js
and
cmp
mov
test
aam
jno
mov
and
lods
xorb
out
fisubrs
call
sarl
rorl
mov
mov
mov
xchg
lods
xor
mov
push
dec
mov
and
jp
cmpsl
xor
rcrl
jo
add
das
sarb
loop
lods
lock
inc
rcr
xor
xchg
gs
test
in
rcll
xchg
mov
ss
sub
lcall
sub
insl
hlt
in
mov
and
lds
les
mov
lds
sub
sub
movsb
cmp
jae
stc
sub
pop
out
mov
shlb
jnp
sbb
and
mov
mov
lods
cmp
mov
test
cmc
sbb
imul
int3
daa
stos
scas
dec
push
mov
pop
addr16
fwait
sub
push
aas
or
int3
xchg
inc
mov
adc
lock
bound
jo
push
repz
notl
out
inc
push
pop
mov
xor
cmp
xchg
jle
inc
mov
outsb
adc
mov
push
int3
dec
arpl
pop
sbb
cmp
mov
mov
clc
mov
push
sbb
cmp
std
popa
repz
dec
and
jecxz
xchg
and
movaps
imul
xchg
push
popf
lods
sbbl
and
pop
movsb
stc
or
lret
xor
in
outsb
push
lea
movsb
mov
push
inc
inc
fldt
fadd
std
into
stos
push
xchg
jg
push
adc
xorb
add
jae
mov
rcr
xlat
out
cli
inc
add
lcall
lea
push
sbb
idiv
mov
jle
js
cmp
add
std
inc
and
pop
jae
movsb
jle
mov
inc
cmp
mov
rorb
push
test
push
cmpsl
fcoml
mov
inc
outsb
jecxz
mov
dec
int3
outsl
outsl
jl
int3
stos
and
inc
push
jp
stos
mov
cmp
hlt
mov
loope
cwtl
movsb
ret
popf
inc
aaa
lods
sub
andb
rcrb
pop
imul
loope
push
or
and
mov
fbld
popf
inc
out
aaa
sbb
push
lcall
mov
lahf
hlt
xchg
cmpsl
and
xor
mov
jb
cmp
in
mov
cmc
in
mov
mov
xchg
xchg
enter
pushf
in
mov
xchg
or
into
adc
jae
jp
stos
jne
nop
imul
pushf
mov
mov
nop
sub
daa
or
icebp
fs
push
pusha
insl
je
das
xorb
sub
inc
pop
cwtl
dec
int
add
push
iret
imul
pop
sub
nop
enter
pop
ret
out
adc
loop
pop
inc
inc
jmp
sub
xchg
ljmp
test
jae
divl
les
mov
outsl
lahf
repnz
fcoml
fimuls
jle
insb
mov
loop
ja
mov
dec
mov
popf
hlt
fwait
sbb
imul
adc
jnp
jle
push
push
stos
pop
les
jo
sub
mov
arpl
lods
mov
sbb
ret
loopne
xchg
and
add
lods
in
fld
cld
mov
xchg
cmp
push
pop
daa
pop
popa
xor
jo
loop
jnp
mov
dec
addb
scas
sub
sbb
pop
rorb
stos
popa
sub
js
pop
iret
xor
xchg
jmp
pop
rcrl
xor
sub
psubq
nop
pushf
lock
ret
dec
xchg
sbb
dec
inc
das
mov
cwtl
cltd
xor
xchg
cmpsl
or
leave
mov
ljmp
add
call
cmp
inc
hlt
test
and
jmp
xor
push
jo
add
mov
mov
movsl
lea
mov
mov
and
cmpb
fimuls
cmp
negb
or
jo
inc
pop
mov
rorb
testl
sti
lret
jae
dec
sbb
add
pop
pop
ja
adc
adc
jmp
dec
lret
xchg
xor
adcb
mov
mov
sub
iret
out
dec
push
jge
into
add
bound
add
ret
outsl
nop
or
jno
xchg
jo
lahf
nop
mov
add
cmpsl
call
ret
xor
jbe
icebp
dec
lds
pop
pushf
movsl
dec
fisttpll
mov
mov
cmp
lock
xchg
aas
inc
leave
jecxz
fnsave
jmp
leave
xchg
mov
pusha
cmp
or
ret
xor
mov
mov
pop
push
stos
popf
and
push
int3
xor
push
je
inc
or
push
sbb
sub
mov
dec
push
arpl
cmp
jo
rorl
dec
ret
sub
or
sti
inc
cmpsl
cmc
arpl
cmp
pop
cwtl
and
pop
add
xchg
sarl
add
out
push
xor
mov
push
sub
mov
ja
imul
mov
jg
repz
xor
pop
jnp
ljmp
jmp
outsl
mov
pop
push
int
sbbb
xchg
push
popa
es
incl
push
scas
lcall
push
repnz
mov
jo
sti
push
in
in
dec
cmc
pusha
mov
sub
in
aaa
aaa
xor
mov
adc
jmp
add
cs
inc
cmp
or
pop
mov
mov
int
pop
and
mov
jno
das
mov
or
es
xchg
add
fadd
xor
mov
aas
leave
adc
gs
leave
test
int
push
sub
add
mov
cwtl
xor
lcall
cltd
cmp
cmp
xchg
sbb
pop
ljmp
mov
aaa
mov
fsubl
and
ss
push
fsubs
test
fs
inc
movsl
scas
shl
adc
xchg
mov
adc
arpl
cmp
push
lea
add
les
xchg
inc
cmpsb
fwait
adc
outsb
push
ds
stos
push
jle
jle
pop
lahf
dec
pop
jmp
or
push
testb
mov
in
hlt
bswap
add
xor
pop
sub
jno
add
insb
mov
add
sub
ret
mov
sub
push
cmp
outsb
xor
xchg
int
in
dec
or
lea
mov
fsubrs
cmpsl
and
incl
cmpsl
movzbl
icebp
cwtl
iret
dec
dec
mov
mull
jg
ss
call
push
add
or
jmp
dec
add
rol
jne
call
xor
xchg
cs
lods
add
les
cmp
std
outsb
aam
pop
add
or
fdivrs
in
sbb
insl
daa
lds
pop
lea
sbb
jecxz
xlat
and
sbb
cmc
cli
adc
in
inc
adc
cmp
jge
pop
dec
sbb
sub
arpl
nop
xor
js
insb
pop
pop
push
test
dec
test
int3
insb
jbe
out
scas
mov
outsl
fs
push
push
js
lcall
cs
and
push
mov
fildl
pop
xchg
imul
xchg
daa
stos
mov
outsl
xchg
cli
mov
xor
lods
or
and
sub
jp
test
popa
xchg
fldl
xor
and
lock
fsts
lret
push
lock
dec
sbb
test
push
cs
add
push
fidivs
push
enter
pop
inc
add
sbb
push
xor
mov
adc
fistl
adc
aad
inc
jbe
push
outsb
mov
cmp
mov
mov
dec
push
bound
aaa
mov
loopne
fcomps
stos
cmp
ljmp
loopne
cmpsl
mov
inc
dec
std
mov
push
sarb
xorl
ror
xchg
ret
fwait
sbb
sti
pushl
xchg
mov
mov
push
jo
pop
popf
movsl
imul
icebp
mov
dec
mov
test
arpl
mov
aaa
jo
rol
mov
jb
outsb
mov
xlat
loop
int3
pop
in
gs
push
clc
or
add
mov
or
stc
rcll
scas
cld
sub
stos
add
sarb
cmp
mov
mov
push
movsb
jp
aas
mov
sbb
in
sub
cmp
jmp
outsb
rclb
and
scas
mov
in
popa
mov
jbe
imulb
repnz
push
scas
mov
and
scas
inc
popa
sahf
cmc
add
rcrl
fwait
pusha
xchg
pop
pop
inc
inc
add
clc
mov
sahf
push
jl
pusha
ds
scas
sub
push
loop
dec
pop
inc
mov
mov
push
jb
cld
aad
xchg
into
xorl
fidivs
hlt
and
cmp
or
in
xchg
mov
cmpsb
add
cwtl
xlat
sbb
jmp
lret
jb
mov
in
pushl
and
out
jg
loope
shll
stc
pop
mov
dec
dec
fistps
gs
sub
mov
push
imul
imul
xchg
xchg
mov
clc
sbb
lds
xchg
xchg
ret
mov
push
int
imul
cmpl
push
jge
mov
test
das
call
push
cmp
fstpt
mov
lahf
adc
mov
push
scas
push
les
jns
mov
pushf
pusha
out
pop
adcl
pop
int3
shr
aam
jecxz
insl
mov
cmpl
pop
out
sbb
ret
test
sbbb
xor
and
test
jecxz
pop
dec
bound
adc
lods
outsb
nop
sbb
xor
popa
add
add
rcll
add
mov
inc
popa
and
into
aaa
mov
mov
mov
cmp
int
decl
add
jp
imul
subl
xor
or
inc
fcomps
movsb
push
addr16
or
mov
or
sbb
fs
xchg
shlb
fnsave
and
dec
fidivrl
test
popf
pop
lods
bound
xlat
ret
cmp
out
mov
cmp
fisttpl
sub
xor
shrb
mov
push
jnp
mov
jae
jo
pop
and
popf
dec
sar
mov
push
mov
iret
jecxz
fiadds
add
sbb
movsb
pop
clc
xlat
mov
mov
inc
mov
or
xchg
jns
repnz
pop
jp
movsl
sub
out
int
add
ja
jge
pmulhw
mov
int3
xchg
ds
cmc
add
pop
jmp
decb
push
fisubs
pop
std
mov
mov
xchg
aam
fwait
insl
lret
mov
jnp
sahf
sahf
pop
push
mov
in
lods
jns
and
in
sbb
test
movsb
shrl
icebp
xor
pop
lahf
jb
out
ret
cmp
aad
sub
pop
out
sbb
nop
adc
push
aam
aas
jmp
cmpsl
das
movsb
rolb
and
pop
scas
xor
ficoms
insb
xchg
mov
mov
and
push
mov
or
lods
jp
mov
jno
adc
add
jno
jmp
adc
mov
push
xchg
inc
mov
sub
ret
add
adc
out
xchg
jecxz
jg
xorl
into
insl
jae
fistpll
rolb
xor
sbb
cli
stc
les
pop
in
mov
xchg
pop
imul
add
out
insl
ljmp
jo
push
int
fdivs
cmpsl
mov
movsl
cmp
in
push
sti
cmc
cmp
popf
mov
test
adc
dec
shll
fldt
test
sbbl
mov
insb
push
js
addl
inc
mov
test
sbb
fsub
addr16
iret
xor
or
jle
jp
cmc
sbb
sub
fwait
adc
ljmp
pop
mov
push
jne
and
mov
mov
out
or
jnp
mov
mov
cmpsl
pop
mov
xchg
pop
or
lcall
mov
mov
cltd
xor
addr16
imul
inc
je
cmp
xor
jo
xchg
pop
stc
xchg
and
dec
insb
add
add
scas
test
xchg
insl
and
lea
mov
into
scas
and
add
neg
mov
pusha
and
jns
and
imul
mov
loopne
jno
roll
sub
add
addr16
scas
pop
jbe
mov
xchg
cmc
inc
pusha
decb
push
aam
test
cmp
push
popa
dec
arpl
dec
pop
xor
popf
sub
cmp
clc
adc
fs
je
mov
sti
ret
sbb
xor
push
out
add
in
call
add
icebp
rorl
add
xor
jmp
addb
push
stos
add
stos
in
dec
in
or
xor
xchg
xlat
and
xchg
or
lea
and
cld
adc
sub
push
fstpl
lret
mov
mov
add
ljmp
lods
adc
or
jp
mov
pop
movsl
pop
cs
dec
adc
imul
or
mov
mov
outsb
aad
jb
shll
lds
push
aas
or
jmp
push
jp
xor
dec
ljmp
cmp
je
fimuls
mov
loope
push
cmp
mov
aaa
shl
cmpsl
ja
dec
cmpsl
sbb
mov
aaa
or
xor
cmp
mov
int
cli
sub
push
mov
adc
dec
mov
cld
cmp
mov
loop
aam
push
sarb
imul
sub
roll
enter
ficoms
mov
pop
ficomps
ds
inc
lret
push
in
pushf
sbb
loope
push
aas
mov
rcrb
mov
sub
inc
mov
xlat
dec
idiv
or
mov
pop
stos
mov
xchg
fwait
jecxz
xchg
pop
mov
popa
icebp
push
das
sub
fisubl
clc
xchg
dec
rclb
add
imul
mov
idivb
mov
loopne
jecxz
xor
insb
fs
pop
test
out
xor
stos
mov
add
out
xorb
xlat
outsl
int
insl
rol
fadds
dec
mov
cmpsl
dec
jae
push
cmp
out
and
gs
jae
push
ret
das
jge
add
and
jnp
push
loopne
rclb
push
xchg
stos
and
fimull
pop
sarl
movsl
or
push
int3
dec
pxor
xchg
stos
test
mov
push
jne
nop
mov
add
inc
xchg
jecxz
hlt
xlat
ds
inc
mov
and
es
test
daa
push
cld
sbb
jnp
pop
sub
adc
push
push
loop
push
popf
daa
insb
lods
cld
pushf
push
jae
mov
jbe
inc
jge
pop
leave
xchg
jae
mov
mov
pop
jge
push
ja
and
aaa
push
cmp
into
lds
cs
sbb
xor
int
movsl
push
dec
enter
lods
lahf
in
insb
test
push
test
movb
popa
adc
adc
stos
mov
push
or
push
mov
push
sbb
push
and
arpl
mov
adc
sbb
lea
jne
adc
mov
lret
sub
fdivrs
inc
and
fs
jo
adcb
insl
sbb
xchg
xor
je
or
sbb
lahf
popa
imulb
in
fdivl
in
hlt
push
js
sahf
stos
andl
test
cmp
pop
mov
les
movsb
inc
rcr
fimull
js
or
sub
adc
add
test
mov
fsts
adc
xor
pop
mov
addl
sarl
mov
and
xor
mov
sahf
dec
pop
xor
bound
inc
and
bound
sbb
mov
mov
xchg
roll
sub
add
decb
in
lret
rolb
test
gs
cmpsl
iret
int3
add
dec
cmpsb
inc
dec
cmp
fsubs
mov
mov
push
cmpsb
mov
sbb
lcall
jne
jb
add
sbb
aas
test
mov
popa
push
pop
aad
or
adc
mov
xchg
jle
call
or
fisubrs
pop
gs
xchg
cmp
or
sti
stc
mov
cmc
jp
ficomps
cmp
mov
xor
notb
lock
adc
xlat
adc
adc
gs
rorb
loopne
rcrb
pop
dec
sti
sbb
repz
pcmpgtw
mov
push
inc
lcall
movl
loope
pop
mov
push
js
push
mov
pushf
popa
and
lea
mov
xor
stc
jecxz
cld
add
icebp
push
pop
test
push
stc
loopne
mov
mov
sub
xor
in
add
aaa
test
fdivl
cmp
mov
iret
sub
sti
mov
mov
ss
mov
mov
fwait
mov
idiv
mov
add
mov
dec
push
inc
test
inc
sahf
test
dec
mov
cmpsl
push
adc
ret
loopne
xor
lods
fidivl
andb
outsb
into
xor
xchg
mov
lret
cmp
sahf
lods
lret
scas
outsl
dec
jecxz
adc
xor
pop
in
int
xlat
call
jecxz
dec
imul
clc
out
jp
lret
addr16
adc
cmp
adc
cs
xchg
shlb
adc
lock
out
xor
xor
sbb
aas
mov
mov
lcall
mov
int3
xor
in
and
and
scas
pop
jge
inc
xor
repz
dec
das
sub
ss
or
cmp
push
xor
pop
xchg
jg
xor
dec
out
in
xor
jge
push
cmc
orb
pop
jp
adc
jp
out
push
repz
sbb
pushf
je,pt
nop
loop
cld
add
mov
jae
and
pop
pop
inc
cmp
push
fsubs
stc
pop
push
into
jo
movsl
iret
sbb
orl
pop
in
and
sbb
std
dec
push
sarl
aam
out
mov
or
add
mov
push
inc
push
sub
cs
cmp
mov
imul
loopne
sub
test
xchg
pop
fimuls
test
push
mov
popf
mov
mov
lcall
gs
fwait
subb
pop
sbbl
mov
inc
push
mov
in
lcall
adc
fiadds
dec
add
std
jno
mov
inc
jae
push
cmpsl
mov
inc
stc
mov
mov
jg
xchg
outsb
test
adc
shlb
inc
popa
fsubs
loopne
inc
pop
pop
std
cs
xchg
cmpb
xor
test
jbe
push
inc
fdivl
cmp
xchg
packuswb
mov
lods
je
mov
aad
sub
pop
xchg
adc
xorl
call
push
daa
mov
pushl
push
xor
sub
mov
lcall
stos
fcomps
pop
repnz
xor
jge
pop
pusha
icebp
xor
cld
cmp
repz
aad
jmp
inc
mov
cmp
xor
test
add
jg
cmpsb
jl
jle
rorl
mov
inc
inc
popa
mov
outsl
jl
and
or
push
cmpsb
les
insl
out
iret
imul
xchg
aam
adc
shll
shr
xchg
add
jmp
mov
sub
shrl
push
xor
ret
xchg
and
xlat
ffree
jge
stos
stos
sbb
arpl
add
lds
xor
shlb
cmp
xchg
shr
test
cwtl
dec
arpl
pop
sub
loopne
cli
adc
and
lods
push
lods
ret
mov
in
jp
mov
mov
jne
shl
adc
or
test
pushf
and
adc
ss
sbb
inc
push
jns
pop
pop
mov
and
in
lods
add
shlb
dec
mov
out
jmp
rcrl
repz
xor
neg
push
pop
jae
das
lahf
leave
add
inc
push
mov
pop
arpl
orb
mov
xchg
clc
sbb
xchg
mov
mov
adc
mov
loop
or
sub
push
sbb
and
mov
sbb
pop
imulb
jnp
pop
and
in
jecxz
lods
cmc
test
addr16
fmull
adc
adc
xchg
mov
sbb
in
pop
inc
pop
test
push
mov
cmp
fdivp
dec
stos
rcrb
cmp
jo
imul
test
dec
adc
and
cvtps2pi
loopne
jmp
daa
aad
adc
add
ret
cmp
dec
adc
aad
adc
inc
movsl
add
cmc
fsubp
inc
scas
xor
push
jg
mov
sbb
or
inc
addb
mov
jae
inc
scas
aaa
mov
fisttps
push
enter
mov
lcall
and
jge
sbb
xor
xchg
add
adc
shlb
popf
adc
jno
jle
es
cli
adc
icebp
cmpb
and
xchg
push
scas
sub
xchg
stos
inc
adc
lret
in
xor
imul
call
testl
loopne
dec
pushf
call
add
mov
push
xchg
inc
cmp
pop
cmp
out
dec
mov
sbb
jmp
sub
or
and
sub
rcrb
lock
mov
loopne
inc
fmul
mull
xor
das
ret
es
dec
mov
pop
dec
repz
in
int
popf
mov
jae
insb
sub
jnp
sub
push
xorb
pop
mov
adc
sub
jb
fildll
and
icebp
repnz
ljmp
ds
xor
push
je
sti
scas
pop
mov
jge
clc
push
dec
inc
xchg
dec
testb
jns
shl
stc
xchg
loop
repnz
icebp
sub
adc
fnstsw
mov
stos
jns
pop
add
fldenv
std
mov
push
jo
mov
fiadds
add
jmp
mov
cmc
fnstsw
out
jmp
push
test
bound
adc
jns
jnp
fists
sbb
xor
std
lret
push
xchg
and
cmp
lcall
pop
mov
xacquire
test
jns
mov
idivl
std
fistpl
ja
mov
std
pop
adc
jecxz
jb
sahf
scas
roll
aad
insl
movsl
imul
repz
xor
add
add
or
ss
test
into
mov
jnp
leave
testb
jp
lcall
pop
push
inc
push
sub
pop
dec
jecxz
fcomps
mov
clc
push
test
mov
out
fs
out
sbb
jp
mov
pop
stos
push
xor
jl
xorb
sub
cmpsl
or
gs
sbb
add
std
and
mov
mov
imul
push
jecxz
js
mov
mov
movsb
lods
repnz
sahf
pusha
sub
push
jmp
or
mov
lret
rcll
cmp
jno
xor
mov
jmp
mov
rcr
or
nop
mov
in
mov
subb
and
aaa
or
imul
fstl
iret
push
inc
loope
clc
rol
insl
mov
dec
lea
push
incl
in
add
enter
stc
bound
aam
cmp
aas
pop
mov
sub
push
sub
push
mov
and
add
aaa
lea
mov
push
pushf
push
sub
int
adc
insb
jns
mov
mov
pop
inc
out
push
dec
repz
aaa
sti
data16
sahf
cmp
jle
mov
mov
jbe
sub
dec
dec
jl
xchg
jp
xchg
push
call
ret
lcall
jns
xor
scas
popf
mov
mov
or
sub
clc
gs
into
sar
dec
pop
or
xchg
ret
enter
addb
je
lods
add
xchg
cmp
ja
sbb
push
mov
inc
gs
cmp
mov
inc
lea
pop
jb
sarb
scas
rep
cvtpi2ps
inc
daa
out
test
or
adc
adc
and
idivl
xchg
test
inc
mov
jmp
in
xor
sub
mov
aam
js
int3
pop
sbb
or
xchg
cmc
inc
xchg
mov
pop
jae
push
xchg
js
sub
xchg
or
aas
inc
mov
aam
add
lods
or
push
hlt
xchg
and
lds
inc
repz
dec
stos
xchg
pushf
sti
sarl
or
ds
test
sbbb
jecxz
testl
push
add
inc
cmovno
pushf
jne
ficoml
push
or
add
adc
stc
mov
xor
imul
lds
lock
inc
aad
pop
test
jo
cmp
jg
inc
out
jmp
mov
aad
xchg
and
std
push
cmpsb
dec
sub
out
pusha
mov
add
pop
mov
xor
pop
fadds
and
shll
jecxz
mov
outsl
mov
clc
cmpb
pop
push
fdivrl
insb
jge
test
shll
out
ret
push
jae
cltd
push
add
hlt
in
add
xchg
ret
dec
push
pop
lcall
and
cld
push
js
hlt
in
sahf
jecxz
leave
jmp
fidivl
bound
mov
pop
inc
jle
sbb
jg
jmp
or
mov
dec
push
cmp
mov
push
push
xor
pushf
push
jno
push
sbb
dec
adc
add
in
lcall
inc
into
ljmp
push
inc
cmp
lods
mov
roll
sbbl
dec
dec
cmp
sbb
mov
sbb
xchg
imul
insl
sbb
aaa
les
gs
mov
inc
inc
cltd
xor
aam
arpl
sbb
lods
push
movsl
pop
icebp
orb
xlat
jno
enter
fs
test
xlat
das
push
mov
push
frndint
mov
lock
popf
fists
mov
lahf
lcall
shr
push
sub
scas
mov
fiadds
int
sbb
pop
cmova
pusha
adc
movsl
add
dec
lret
mov
cmp
mov
pop
xor
mov
or
jo
shrb
vcmppd
pushf
ss
add
sub
enter
clc
mov
rcrb
xchg
or
mov
scas
pop
call
xchg
aam
mov
insl
mov
je
andl
sbb
idivl
cltd
jge
inc
xor
std
lock
nop
lret
dec
sbb
in
inc
loopne
xor
jbe
decb
popa
sbb
outsl
hlt
xor
scas
mov
mov
data16
cmpsb
mov
ljmp
sbb
add
mov
dec
jle
popa
bound
rol
mov
test
cmp
in
push
and
mov
pop
xchg
xchg
mov
pusha
loop
ljmp
shrl
test
inc
jecxz
mov
leave
les
fdivr
cmp
inc
adc
pop
mov
inc
sub
mov
shlb
or
icebp
push
imul
call
ds
push
jmp
cltd
or
loopne
mov
jge
sub
ret
rclb
pop
scas
mov
cmp
xchg
inc
into
inc
lods
and
fistpl
aam
xor
addr16
sub
lods
ljmp
dec
mov
pop
inc
addr16
jno
fwait
or
movsb
fmuls
mov
xchg
mov
mov
cld
pop
xor
outsb
ljmp
in
lret
cmp
xchg
xchg
jle
and
xor
xlat
adc
push
inc
cmp
add
lock
pop
nop
jne
sbb
movsb
xchg
dec
push
push
scas
std
mov
lea
add
ljmp
fdivrs
lea
loope
inc
adc
mov
and
push
push
test
or
add
dec
add
xor
cmp
popa
shrl
mov
sub
mov
pop
movsl
cmpsl
imul
sub
repnz
enter
jo
jg
mov
into
sub
lret
adc
jne
mov
mov
nop
mov
fcomps
xor
adc
push
cs
xlat
sbb
xchg
lret
or
push
pop
mov
cmp
hlt
mov
sub
jge
hlt
add
fwait
subl
xchg
loop
or
loop
addr16
movsb
dec
mov
add
add
cmpsl
pop
cmpsl
inc
ja,pt
insl
andl
or
inc
popf
dec
sahf
jle
jle
jns
cs
scas
sarb
and
inc
sti
pop
or
cli
popf
or
jl,pn
cli
xchg
mov
scas
push
in
mov
jnp
push
xor
adc
cmp
test
frstor
mov
stc
test
xchg
cmp
mov
xor
push
loop
pop
lea
andl
xor
repz
sarb
lea
jno
or
lcall
rcrl
fcomps
jg
and
mov
pop
rol
xchg
add
pop
sub
mov
sbb
out
jbe
jnp
jo
cmp
xlat
leave
bound
dec
lods
punpcklbw
sub
in
dec
adc
lcall
mov
les
iret
pop
jnp
jp
and
test
add
shll
test
add
addr16
sbbl
mov
jo
cld
adcl
shl
xchg
dec
or
lcall
ljmp
xchg
jno
cli
jae
adc
xorl
xor
adc
ret
push
jmp
into
pop
add
mov
std
ja
je
movsl
lock
xchg
popf
cwtl
inc
add
das
jae
mov
out
adc
inc
in
cli
xor
mov
testb
and
mov
ficoml
sub
cmpb
aam
mov
adc
lahf
ret
repz
lds
out
xor
xor
or
pushf
fistl
scas
add
in
adc
jge
sbb
xchg
adc
jl
out
xchg
pusha
push
sbb
cs
outsb
insl
sub
push
shrl
int
std
lret
xorl
push
sub
mov
mov
sub
inc
inc
adc
dec
outsb
xchg
or
insb
loop
fisubl
aas
fisubrl
cltd
aaa
xor
pop
dec
jl
cmpsl
ja
or
sti
adc
sub
sub
cmp
or
pop
iret
xchg
stos
roll
lea
test
fstpl
push
sbb
in
ljmp
cltd
xor
jmp
xor
rolb
mov
pop
sub
jge
xor
xlat
loop
sub
notl
shlb
or
xor
add
mov
aam
mov
imul
in
jg
jg
xchg
push
sub
inc
cmp
mov
fs
lds
popf
rclb
and
add
enter
and
rclb
sti
mov
jecxz
mov
rclb
jbe
cmp
push
mov
sub
jl
push
adc
mov
das
add
adc
sbb
test
lret
shlb
mov
pop
xchg
rcrl
cmpl
movsl
and
push
xchg
ret
xchg
cmp
pop
js
add
daa
mov
lcall
call
js
push
mov
repz
mov
xchg
or
push
push
fsubl
ljmp
jae
popa
inc
dec
in
ret
data16
cwtl
pop
mov
orb
jno
adc
outsl
shlb
das
push
lods
aas
xchg
into
jmp
push
mov
adc
pop
xchg
sub
scas
mov
mov
mov
or
sub
ss
xchg
jg
lds
sub
add
push
fisubrl
loopne
add
push
int3
fstps
clc
stos
in
int
daa
cld
clc
add
movsb
sbb
pop
fs
mov
frstor
push
sub
rsqrtps
scas
aas
cmp
ds
rcrl
rcl
out
mov
shrl
push
mov
or
mov
int3
sbb
andl
cmp
int3
dec
adc
cmpb
pop
push
cmp
sti
push
mov
sti
inc
lock
enter
call
adc
push
cmp
push
xchg
adc
js
mov
shlb
sbb
xor
pop
dec
ja
add
hlt
inc
cld
iret
push
xchg
insb
inc
jmp
and
adc
dec
dec
dec
lea
sub
xchg
cwtl
mov
lock
cmpl
and
xchg
imull
dec
les
and
add
rol
xor
cmp
sbb
inc
push
mov
rorb
mov
bound
or
cld
ds
scas
out
dec
sti
cmp
imul
insb
insb
push
mov
dec
adc
xlat
lods
pop
jns
mov
fstl
lock
jb
fisttpll
xor
xor
aaa
adc
loop
pusha
xor
aam
int
push
adc
out
les
dec
mov
pusha
sbb
dec
cltd
adcl
rolb
push
sti
stc
cmp
mov
push
data16
lcall
ret
movsl
push
pop
lcall
jge
dec
sub
cmpsl
add
int
rcrl
nop
dec
mov
xor
mov
das
or
dec
xor
mov
push
mov
jmp
mov
rcrl
xchg
push
mov
lret
mov
loop
lds
sbb
addr16
jne
sbb
push
fildll
es
cmp
loopne
mov
push
adc
sub
das
test
call
mov
cld
in
push
es
incl
add
jmp
dec
sbb
std
cmp
mov
out
in
cmp
lea
pop
adc
pusha
es
xchg
mov
add
or
imul
enter
jb
inc
sbb
leave
sbb
lds
or
add
out
in
xor
data16
jnp
adc
imul
cli
push
cwtl
insl
leave
or
cmp
shr
insb
xchg
mov
jle
mov
sub
jno
les
scas
xor
push
mov
movsb
nop
test
iret
fists
les
xor
lahf
ror
add
push
push
mov
stc
dec
jmp
popf
arpl
cmc
and
mov
adc
icebp
es
dec
inc
in
push
xchg
cmc
add
inc
dec
xor
mov
je
mov
mov
cld
jmp
lcall
cmp
xchg
dec
inc
mov
and
rolb
inc
jne
cwtl
dec
xchg
mov
sahf
adc
xor
xor
xlat
push
adcb
leave
mov
xchg
bound
dec
flds
loope
fs
repz
xor
xchg
add
dec
pop
push
cmp
test
push
test
int3
dec
xchg
gs
mov
mov
inc
mov
mov
adc
adc
inc
jmp
xlat
std
adc
bound
pop
add
sub
and
out
add
aas
push
popf
fidivl
mov
jmp
data16
leave
daa
ja
xchg
push
and
cmpsl
popa
lods
push
mov
les
iret
or
mov
fbstp
stos
ret
xor
lahf
fbstp
mov
adc
jg
cwtl
rep
fucomip
testb
jge
sub
jecxz
repz
cld
jae
lret
roll
dec
xor
data16
pushf
ja
jno
lea
jno
scas
fistpl
xchg
scas
push
mov
xlat
push
jnp
pop
pop
cmpsl
mov
cs
sbb
repz
mov
dec
popa
mov
iret
sub
xchg
enter
pushf
orl
test
mov
dec
add
ljmp
aam
cli
icebp
mov
shrb
scas
cmp
pusha
push
inc
pop
and
sbb
xor
and
cmp
andl
mov
mov
sub
adc
testb
ficoml
pop
pushf
push
sub
out
pop
jno
jae
shlb
xor
add
inc
dec
lods
jno
in
mov
push
outsb
bound
sub
imul
or
add
outsl
dec
xchg
cmp
imul
adc
ds
jge
lods
jo
push
jbe
neg
sbb
lcall
and
leave
fdivrp
xor
sbb
xor
jl
repz
inc
iret
aaa
mov
jmp
int3
pop
mov
inc
mov
filds
mov
push
cmc
int
push
xchg
add
xchg
fistl
or
inc
jl
push
sbb
outsl
test
mov
test
icebp
test
mov
fiaddl
lret
xchg
lea
scas
pop
cmp
adcl
pusha
pop
sub
jae
adc
mov
fistpl
popf
out
data16
push
inc
mov
add
stos
or
xorl
arpl
jge
pop
pop
pop
xchg
rcll
adc
mov
xchg
xchg
push
sbb
into
fldenv
cmpsb
addb
out
sahf
jle
pop
inc
sub
mov
int3
or
fistl
ror
faddl
add
mov
mov
fadd
xor
aam
xchg
hlt
loop
lds
sbb
adcb
adc
std
sbb
xor
imul
lods
clc
nop
jg
adc
lods
mov
xchg
cmp
shlb
pop
push
xor
loope
add
xchg
pop
push
rcrb
inc
push
xor
inc
pop
pop
xor
cs
push
aaa
cmc
jmp
cmp
repz
push
stos
loopne
mov
inc
push
gs
arpl
repnz
out
gs
lahf
les
pop
stos
mov
and
ljmp
mov
enter
and
jl
adc
jg
xor
mov
les
adc
adc
push
out
iret
ja
xchg
fwait
imul
ss
je
ds
xor
dec
and
mov
sbb
and
xchg
cmpsl
or
cltd
jg
xor
sub
cmc
int3
pop
jl
cmp
fiadds
mov
mov
pop
or
mov
pop
out
les
or
dec
dec
xor
mov
jns
push
xor
movsb
es
jbe
push
and
cmp
mov
stos
jp
aas
jmp
icebp
addr16
cmp
out
scas
in
pop
and
test
in
add
clc
jns
ret
sbb
mov
in
inc
fcoml
cmp
lds
push
push
mov
mov
scas
rorl
sbb
xchg
xchg
cmp
pop
sub
in
xlat
mov
jge
nop
aaa
lcall
xor
inc
mov
lock
imul
mov
pop
bound
insl
popa
jbe
lret
into
sbb
test
xchg
or
mov
std
sub
ret
mov
xchg
mov
mov
movsb
in
cmp
mov
rolb
pop
lcall
arpl
nop
cmp
outsl
in
xor
pop
cmp
mov
bound
sahf
push
dec
lcall
push
sub
std
mov
inc
ret
mov
out
pop
xchg
out
xor
movsl
xchg
xchg
ja
ret
sbb
aam
ret
addr16
mov
pop
mov
test
adc
test
pop
jns
cmp
push
mull
fisttps
or
outsl
insl
lods
inc
jecxz
fcomi
outsl
dec
adcb
sub
pop
add
sub
add
cwtl
cmpsl
aaa
fs
push
add
cwtl
es
mov
and
das
xchg
pop
jnp
mov
aas
dec
adc
or
add
pop
int
mov
in
xchg
cwtl
loope
js
bound
fsubrp
bnd
fcomp
ret
scas
arpl
cld
pop
pop
sbb
or
and
out
adc
pushf
rclb
sub
or
lea
add
inc
or
sub
sbb
fadds
nop
shrw
popa
faddl
fimull
add
sub
insb
mov
mov
neg
movsl
stc
cs
mov
popa
xchg
dec
lea
xchg
pusha
cmp
insb
pop
dec
adc
add
test
pop
inc
inc
mov
out
das
add
sbb
pop
testb
mov
clc
xor
lds
and
in
cwtl
push
stos
dec
in
addr16
pop
fndisi(8087
push
out
sbb
call
addr16
sbb
sub
je
cmp
add
js
leave
das
aam
mov
dec
aam
mov
jmp
and
pop
pop
rorl
mov
int3
pop
imul
adc
jne
aad
outsl
in
shlb
fsts
ss
ljmp
add
jbe
aam
push
pop
and
inc
ljmp
push
adc
or
popa
ds
popa
mov
insl
dec
push
pop
lret
pop
mov
fsub
dec
add
pop
iret
dec
je
sarl
mov
sub
fs
xchg
add
test
andb
ljmp
jg
hlt
xchg
popf
push
adc
pop
icebp
sbbb
xchg
dec
in
jmp
flds
sub
lock
or
inc
adc
inc
sarb
mov
cmp
movsl
cmpsb
fcmovb
xor
repz
push
dec
jmp
cmpsl
ret
mov
pop
mov
imul
stos
gs
fs
and
leave
je
xchg
xorps
rcr
xlat
xbegin
inc
negl
mov
scas
stc
add
repnz
jecxz
sub
rclb
xlat
imul
xchg
movsl
fbld
pop
and
xchg
push
inc
sti
ljmp
dec
mov
mov
cwtl
mov
or
inc
and
out
sub
out
jg
adc
rorb
jg
mov
cwtl
or
xchg
test
and
stos
add
cmpsl
or
inc
adc
ss
jb
test
fdivrl
out
ds
push
ljmp
push
jmp
clc
mov
or
cli
mov
xor
cli
jmp
and
enter
or
ret
xchg
nop
sub
mov
rcrb
enter
les
frstor
stc
insl
push
dec
mov
mov
pop
xor
aad
leave
cmp
mov
mov
int3
sbb
aas
mov
cs
pop
push
sbb
out
js
movsl
cmp
in
rcr
test
in
stc
dec
xor
aaa
dec
mov
xchg
out
nop
dec
or
fincstp
icebp
sub
xchg
add
cmp
or
pusha
adc
sahf
mov
sub
xchg
daa
ret
int3
and
repz
in
cmpb
arpl
mov
aaa
es
xchg
das
adc
or
loope
lcall
adc
cmc
cmp
hlt
jno
pop
jbe
inc
push
push
icebp
nop
sub
mov
mov
dec
ja,pn
or
sub
xor
cmpsl
mov
pop
aam
mov
sub
in
push
mov
nop
std
es
xor
daa
sahf
push
das
call
cmp
fwait
imull
sbb
popa
jg
popf
dec
sub
enter
daa
xchg
cld
adc
loop
cltd
xor
and
cmpsl
push
test
sbb
or
mov
test
aas
or
in
cmp
sahf
pop
call
clc
jge
enter
jb
adc
fcompl
xchg
je
arpl
aas
stos
repnz
xchg
xchg
movsl
inc
xchg
adc
sbb
push
test
lods
adc
movsl
pop
js
popf
push
cld
je
xchg
mov
fwait
scas
lods
cmc
and
or
rcrb
cmp
or
lock
lds
or
mov
jno
xchg
out
jne
add
loopne
sub
nop
sbb
or
push
or
lret
je
insl
stc
stos
lahf
inc
cmp
cmpsb
daa
xor
std
stc
inc
popa
push
pop
scas
jno
sbb
cli
test
in
movsl
fcomps
call
lods
xlat
or
out
inc
sbb
jecxz
jg
fbstp
jecxz
sub
cmp
xchg
cmpsl
out
clc
mov
xchg
ret
cmpsl
inc
stc
xlat
rolb
pusha
sub
xchg
jb
push
xlat
jl
cs
ret
lods
mov
shrl
std
mov
inc
pushf
arpl
test
shl
movsb
aaa
fdivrs
and
sub
loopne
rcrl
leave
mov
add
test
pop
scas
clc
pop
inc
cs
cmp
fadd
sbb
pusha
nop
leave
jge
mov
ja
mov
arpl
repz
ficoml
inc
pushf
push
sub
neg
push
mov
lock
mov
mov
andl
dec
xor
icebp
pop
leave
stos
mov
ret
inc
sbb
dec
sub
out
rclb
xlat
xchg
add
dec
push
pop
test
enter
insb
call
xchg
and
xchg
adc
jbe
cwtl
add
cmc
pop
mov
add
shr
mov
sbb
test
add
jle
ja
pushf
jecxz
cmpsb
jb
mov
push
je
push
fs
adc
push
shlb
mov
out
mov
das
add
xchg
cmp
xor
mov
push
repnz
faddp
pushf
mov
jns
mov
aad
push
xor
adc
sub
mov
xchg
loope
stos
popf
xor
mov
call
pop
test
and
jae
cmp
pop
iret
aad
sub
lret
movsb
mov
jnp
push
cmp
cltd
add
mov
leave
cli
std
inc
std
in
stc
lods
mov
jne
push
sub
mov
daa
jns
jbe
push
cltd
out
lds
fsubr
add
add
mov
rclb
into
jmp
sub
fdivs
jmp
fwait
lcall
and
xchg
pop
xor
xor
imull
sarl
jecxz
sarb
or
inc
jl
adc
hlt
in
std
sub
sub
mov
inc
jmp
mov
jbe
ds
ficompl
rcll
dec
add
iret
pop
ljmp
mov
xor
sbb
xchg
and
rcrb
movl
mov
mov
cmp
out
xchg
mov
jae
mov
adc
jno
daa
mov
cltd
cli
inc
in
or
cmp
lahf
xchg
sub
mov
scas
imul
dec
cmp
insl
bt
adc
jns
pop
or
or
and
xor
xorl
test
rcll
pop
push
push
xchg
out
push
ret
out
or
xchg
lret
adc
rolb
scas
adc
insb
mov
jle,pn
or
ffree
push
pop
stc
jecxz
dec
mov
push
gs
das
stos
cwtl
repz
push
inc
mov
mov
sarl
cmp
lahf
sbb
test
and
xchg
pop
push
fbld
push
mov
ss
ret
sbb
xor
std
mov
notl
adc
pop
pop
lret
dec
pop
sub
adc
pop
mov
xor
enter
and
orl
adc
add
add
mov
ds
sub
dec
adc
sub
fcos
ret
lods
fistpll
insl
incl
jb
inc
repnz
scas
das
popa
xchg
ret
inc
pop
fwait
pusha
sbbl
outsl
mov
mov
lcall
xchg
push
mov
out
jo
pop
add
xor
adc
popf
fidivl
sti
cwtl
imul
leave
mov
inc
xchg
test
cmpsb
adc
scas
push
jns
lods
sub
xlat
shlb
sub
rcll
pop
loopne
inc
jge
xor
sub
mov
loop
jmp
movsl
arpl
cmpsl
push
cmp
mov
sti
xor
push
mov
scas
pop
xchg
leave
mov
aas
and
jmp
inc
mov
pop
mov
adc
cmp
cs
andl
out
and
mov
ret
pop
lods
rcr
ljmp
xor
in
push
lret
jg
call
loop
mov
pushf
xchg
xor
ret
cld
pop
push
mov
sub
stos
inc
roll
fsubs
icebp
movsb
test
xchg
xchg
sbb
cmpl
lea
or
std
add
mov
adcl
and
repz
pop
subb
leave
aas
inc
xor
xor
push
shlb
ret
cltd
jnp
cmpsl
adcl
mov
mov
test
push
sar
sti
add
xchg
aas
dec
adc
or
ret
repz
adc
or
xchg
lahf
xor
xor
mov
lahf
jo
mov
popa
mov
scas
stc
pop
mov
imul
xchg
jl
or
lret
add
ficoml
xchg
lcall
mov
jbe
adc
cmc
dec
xor
mov
mov
push
out
pop
bound
mov
aas
dec
jb
push
lret
out
ss
push
push
jb
push
out
fwait
mov
outsb
in
dec
mov
cli
adc
ds
shrl
dec
mov
daa
aaa
mov
outsb
lea
jle
popa
ds
xor
sahf
xchg
in
movzwl
ret
imul
insb
out
add
xchg
setp
jmp
xchg
adc
cltd
ficoml
dec
ds
push
sub
cvtdq2ps
adc
out
xor
and
inc
mov
repnz
out
ss
jnp
and
testl
xor
scas
jne
mov
rcr
cmpsl
je
xchg
ficoml
cmpsl
mull
xor
mov
nop
jmp
cmp
in
jmp
cmpsl
nop
shlb
xor
stc
ss
icebp
add
and
xchg
mov
stc
xchg
adc
jp
sub
out
pop
xchg
xor
xchg
adc
mov
lahf
outsb
test
roll
xor
add
fwait
lods
mov
nop
ret
les
int3
lahf
mov
or
out
mov
mov
daa
addb
adc
dec
xor
bound
lea
jmp
mov
jae
lea
xor
sbb
inc
xor
push
inc
int3
push
cwtl
mov
mull
addl
cmp
cld
or
push
push
aad
xchg
test
pop
or
push
aam
cmp
test
xchg
out
xor
xchg
fsubrs
rorl
shrl
ret
jno
push
fnsave
hlt
xchg
adc
sub
aad
fbstp
nop
mov
mov
sub
add
data16
pop
flds
mov
xchg
addl
repz
push
ja
sbb
add
nop
jns
xor
rcpps
call
ret
pop
xor
jbe
inc
push
inc
pop
data16
push
lds
leave
int3
mulb
xchg
sahf
push
stos
xchg
cli
shlb
push
nop
dec
push
mov
cmpsb
fistl
and
ss
sub
stc
pusha
bound
jns
aaa
outsb
adc
or
cmp
sar
add
fcmovnbe
fldpi
lods
cmpsb
js
cmp
pop
xchg
popf
mov
adc
cmpsb
dec
push
in
cli
pop
cmp
icebp
ret
jo
jb
and
arpl
sbb
xor
cs
cltd
bound
xor
sub
bound
js
pop
push
dec
std
jmp
push
gs
or
adc
mov
sbb
decb
ljmp
mov
sahf
les
pop
sbb
scas
fsubrs
mov
out
in
jo
arpl
or
jle
pop
mov
sbb
sbb
pop
pop
jbe
inc
cmp
push
mov
sbb
sbb
iret
in
cmpsb
mov
lods
jl
push
lods
add
mov
out
fdivs
hlt
mov
cmp
or
or
cs
jno
push
repnz
rclb
imul
xchg
sub
xor
jnp
cmpsb
and
adc
cld
ds
pop
cmp
lcall
shlb
int3
ret
jno
mov
dec
jge
adc
cltd
imul
mov
jno
jnp
or
pusha
bound
leave
inc
iret
jl
cmpsb
es
inc
testl
jne
push
xchg
push
addb
jb,pn
pop
push
dec
sub
les
int
push
push
pop
nop
pop
mov
and
out
ss
and
lahf
add
add
ja
adc
ds
arpl
jo
sti
inc
adc
pop
testb
pop
imul
enter
jno
cli
mull
jecxz
popa
aad
push
inc
xchg
rcrb
dec
rcrl
fmul
mov
or
push
inc
movsl
xchg
pusha
xor
inc
adc
sub
scas
and
pop
xchg
jo
dec
and
in
int3
mov
adc
sahf
pusha
push
xchg
pop
bound
lods
loope
pop
dec
je
icebp
mov
cmpsb
fimuls
push
repz
sbb
sahf
xchg
sub
sub
xor
sub
add
ret
fdivr
mov
jbe
dec
xlat
repz
xchg
cmp
ret
fcomp
cmc
xor
xchg
es
or
push
popf
xor
push
sbb
mov
imul
repnz
js
mov
jp
in
mov
ficoms
push
sbb
push
daa
ret
icebp
push
push
cmp
insb
nop
add
push
mov
cmc
jb
mov
in
jne
mov
mov
jg
cmp
leave
pop
cmp
mov
data16
cmp
push
shrb
into
inc
add
pop
push
bound
int
or
mov
in
jp,pn
nop
dec
or
push
and
xchg
pop
cmc
jno
decl
movsb
sub
dec
push
inc
xlat
inc
lods
ljmp
cmc
jb
add
shlb
and
cmp
inc
dec
insl
ljmp
jne
mov
mov
arpl
clc
push
mov
repz
and
adc
mov
enter
leave
fs
sti
mov
sbb
xchg
loop
lds
into
inc
inc
xchg
adc
sbb
cmpb
mov
iret
lods
sub
push
jns
xor
lods
shll
inc
mov
jnp
das
into
outsl
lods
dec
cltd
xchg
mov
push
jnp
stc
movsb
lahf
ret
add
mov
and
lret
xor
mov
xor
lock
jge
outsb
mov
shrb
jae
mov
push
aaa
add
cli
jle
jecxz
lcall
leave
repz
fwait
pop
ds
loope
xchg
fnstcw
shrl
add
outsl
mov
fildll
inc
cmpsl
jg
pop
popf
xor
adc
mov
fwait
mov
push
xchg
jmp
dec
push
imul
mov
mov
mov
jae
mov
jb
push
stos
mov
insl
das
and
inc
mov
xor
mov
and
clc
or
lcall
jg
mov
lea
adc
jae
cs
mull
and
inc
mov
pop
pop
test
xchg
jle
pop
sbb
sahf
bt
scas
lcall
cmp
push
ljmp
insl
lahf
aaa
sub
rol
lock
test
movsl
mov
rorl
dec
lods
pop
arpl
sbb
cli
dec
movsb
inc
xor
lea
stos
and
cmp
mov
add
cmp
mov
jl
jae
and
fisttpl
push
mov
pop
push
lods
cmc
lods
xchg
cmpl
inc
adc
xor
xor
lods
xchg
push
fisubrs
xor
sub
insl
sti
xorb
adc
jecxz
xchg
cmpsb
xlat
enter
cmc
ljmp
mov
jmp
std
mov
jecxz
mov
push
dec
xchg
pusha
lods
push
jbe
add
sbb
dec
movsb
test
mov
test
cmp
adc
mov
cmp
aaa
pop
repz
push
lds
das
pop
imul
and
subb
daa
inc
aad
inc
insl
jmp
push
outsl
nop
inc
addr16
daa
push
push
or
and
mov
test
push
je
addr16
xchg
rcrb
mov
dec
mov
push
pushf
push
mov
insb
dec
rclb
mov
jg
mov
cmp
pop
xchg
inc
and
mov
pusha
dec
inc
inc
cmpb
cmpsl
pop
inc
cmp
inc
inc
jp
and
sub
add
cmpps
push
jge
xor
sub
push
je
xchg
stos
inc
mov
addr16
out
ljmp
xor
xor
and
mov
fs
in
sbb
inc
adc
and
je
ficoml
mov
mov
sub
pop
shr
xor
jb
inc
dec
pop
outsb
or
sbb
sbb
movsb
xor
stos
movsb
loope
aad
cmc
fcmovnb
dec
xor
pop
inc
jle
scas
call
sahf
cs
xor
adc
sti
cvtdq2ps
jns
lods
gs
add
int
jmp
xchg
xchg
adc
fwait
fwait
adc
fidivrs
jns
cmpsl
lahf
and
cmp
jge
push
pop
xor
ds
mov
inc
sub
pop
aaa
mov
inc
mov
cmc
cmpsl
cmp
ljmp
push
xchg
cld
sbb
add
dec
adc
ret
pushf
jg
test
xor
popf
xchg
add
test
pop
fs
shll
push
sub
leave
jb
lods
mov
cmovb
xchg
decb
xchg
xchg
fldcw
pop
inc
or
sbb
lea
imul
mov
dec
movsb
push
pop
andl
imul
sub
dec
inc
insl
xor
cs
jge
cmp
push
jnp
pop
imul
jmp
mov
adc
push
dec
inc
dec
cltd
popa
test
mov
ja
aas
icebp
mov
movsl
scas
lret
pop
aaa
jbe
xchg
aam
inc
nop
mov
in
push
jle
mov
stos
mov
mov
mov
es
shlb
adc
xchg
pushf
es
stc
daa
and
out
pop
and
pop
sub
test
cmp
mov
loopne
fdiv
jecxz
adc
test
loope
scas
rol
cld
gs
loopne
mov
out
sub
push
or
inc
cmp
mov
sbb
xchg
repz
in
sar
pop
fdivl
popf
and
outsb
xor
rcrl
dec
pop
and
inc
test
aaa
jl
std
pop
adc
jnp
loopne
subb
imul
sub
ds
gs
sub
in
and
shll
mov
xor
icebp
pop
add
push
pop
test
lds
test
and
lods
repnz
rorl
cmova
fdiv
lahf
out
idivb
mov
adc
inc
jnp
sbb
inc
push
pop
movsl
xchg
je
test
add
insl
aas
push
inc
and
icebp
mov
cmc
je
add
icebp
xor
lock
ret
mov
mov
and
mov
mov
loop
into
mov
pushf
xor
mov
insl
mov
cmp
rclb
jno
or
test
lods
and
xchg
inc
gs
scas
loop
mov
xor
out
js
adc
mov
push
mov
pop
sbb
or
xor
out
inc
xor
inc
pop
mov
jg
lods
mov
call
push
push
sbb
test
pop
or
mov
xor
ret
clc
jl
jg
lds
cs
add
fnstenv
fcmovnb
push
lahf
js
mov
xchg
dec
loop
in
mov
xchg
addr16
xchg
test
int3
outsb
push
mov
stc
loopne
jg
subb
mov
test
push
sbb
aad
mull
xor
subb
push
push
cmpsb
pop
das
das
sbb
fwait
cmp
jb
cmp
leave
stc
scas
push
add
push
out
lods
icebp
mov
xchg
push
push
outsb
mov
divl
lock
out
dec
lock
cmpsl
xchg
inc
push
mov
adcb
rol
jle
movsb
inc
jle
sbb
mov
mov
sarl
inc
or
sti
sbb
daa
push
and
mov
cmp
xchg
clc
mov
rorl
cmp
sub
add
dec
adc
and
and
adc
dec
push
xchg
cmpsl
stc
in
mov
cmp
dec
push
mov
out
xchg
test
loop
lret
mov
ss
mov
lea
mov
pop
dec
add
in
movsl
in
sbb
jmp
rcll
std
int3
and
lock
pop
push
aas
testl
mov
iret
xor
sub
shlb
sub
xchg
in
xchg
and
mov
xor
xchg
pop
cltd
dec
and
xchg
inc
out
inc
add
call
add
in
lods
icebp
and
ret
repz
ja
push
mov
iret
mov
ds
and
xor
and
lret
divb
xchg
rolb
mov
outsl
lods
shl
dec
stos
daa
xchg
lcall
cmp
popa
mov
sti
cmp
not
mov
movsb
roll
push
xchg
data16
push
stos
jmp
test
xor
pushf
inc
cmp
adc
lret
xor
sub
shrb
ret
fwait
adcb
jle
xor
data16
xchg
pop
popl
idiv
lods
xchg
pop
sbb
ret
das
jo
jns
out
fisttpl
sbb
outsl
or
sbb
pop
pusha
and
lahf
cmc
mov
shrl
sti
ret
mov
std
shll
jg
aas
pop
sbb
jge
fwait
jbe
fildl
ds
ret
sub
and
jbe
pmuludq
sbb
sub
pop
test
lock
pop
dec
xchg
dec
aaa
sahf
cmp
and
mov
push
jae
inc
pop
sub
mull
movsl
call
pushf
inc
push
ficoms
loope
inc
adc
push
cmp
push
fcoml
scas
sarl
mov
cmp
cmp
inc
iret
add
test
fisubs
ljmp
test
sbb
mov
fs
sub
add
mov
fnstsw
fs
ret
roll
adc
or
mov
das
hlt
rorb
ja
mov
inc
mov
jo
jle
jge
pop
pop
shl
insb
mov
sbb
pop
decl
rcll
inc
sbb
test
lret
mov
xchg
repnz
adc
or
fdivrl
xor
jmp
pop
ret
shrl
mov
ds
push
aad
adc
mov
ds
jb
mov
call
and
xchg
sahf
xor
lret
xor
xchg
cmp
pop
adc
mov
xchg
xchg
popf
fistps
xor
insb
mov
push
clc
pop
jge
xchg
popa
mov
xchg
cmp
xlat
sbb
ret
mov
testl
sbb
and
push
adc
rolb
shrb
aas
or
hlt
cmpsb
sysret
cmp
jl
push
mov
cli
fidivs
mov
insl
movsb
lods
outsl
lahf
ret
sub
jecxz
or
lods
shl
sbb
mov
mov
mov
fsubrl
ret
inc
sbb
push
push
xor
repz
and
xchg
mov
jbe
iret
loope
cmp
bound
push
jno
movsl
push
ljmp
test
shlb
xchg
imul
pop
in
lock
cli
arpl
adc
shll
inc
mov
andb
push
cwtl
add
jle
or
outsb
rol
stc
pop
jge
pop
scas
inc
push
test
lret
cmpsl
dec
pusha
rcr
jl
dec
aas
mov
mov
lods
sarl
or
and
mov
arpl
movsl
jl
fiaddl
aam
xchg
scas
inc
into
in
loopne
in
cmp
sarb
and
cmpsb
mov
cwtl
push
bnd
mov
jae
mov
repnz
mov
jo
cmpsb
ss
mov
jno
repnz
jae
adc
mov
xchg
aam
xor
pop
jo
pop
sarl
aad
adc
jo
jg
jle
xor
out
inc
mov
and
pop
leave
add
hlt
push
clc
xchg
and
pop
fptan
push
push
jecxz
mov
pop
pop
jae
mov
ret
les
std
and
jge
push
iret
jl
pop
sub
loop
add
dec
movl
sarl
loope
fmuls
fsubp
iret
orl
sbb
and
cmp
ljmp
inc
sbb
int
jnp
gs
outsl
mov
jae
sub
mov
ud1
xchg
dec
or
jg
in
push
nop
testb
xor
xchg
jb
lret
xor
jno
jnp
in
imul
test
ret
jecxz
scas
aas
jne
ret
lods
out
sar
dec
xchg
popa
pop
xchg
push
dec
or
es
popa
insb
aas
dec
fsubrl
or
cltd
push
cmp
inc
pop
aam
ret
inc
dec
xor
xchg
test
hlt
aas
push
aas
adc
mov
and
addr16
insl
cld
lods
pop
mov
cwtl
gs
cltd
je
orb
scas
test
or
repnz
aas
sbb
mov
scas
ljmp
or
fsubr
icebp
mov
mov
sbb
loopne
push
clc
or
mov
sub
out
or
sarb
loop
xor
nop
adc
push
cltd
jo
lcall
mov
mov
aas
scas
xor
dec
data16
aaa
add
ret
inc
iret
cs
push
xor
bound
rol
adc
mov
inc
jnp
ret
pop
fistpl
xor
repz
mov
lret
or
repz
jecxz
sub
inc
jge
scas
jno
jne
mov
clc
push
test
jbe
mov
loope
push
cwtl
sahf
in
push
inc
fdivl
cmp
aas
ds
push
call
lea
leave
fdivs
in
lahf
icebp
jns
jbe
cmp
dec
stc
cmpsl
fs
iret
xor
dec
js
aad
push
xchg
aad
mov
sahf
jae
mov
loopne
or
inc
cwtl
ss
cs
xchg
cmpsl
test
add
mov
cs
cmp
mov
mov
imul
jecxz
adc
add
clc
cmp
popf
aam
ss
daa
ljmp
xor
xlat
test
xchg
mov
cmpsl
adc
push
loop
mov
int3
and
fwait
sbb
test
lcall
inc
xor
dec
in
push
bnd
xor
popa
loopne
nop
stos
push
lcall
scas
les
mov
adc
shl
mov
push
int3
stc
mov
xchg
pushf
pop
jl
sub
mov
jno
movsl
outsl
dec
or
jg
cmp
in
xchg
xor
mov
inc
xchg
jns
imul
in
std
push
ja
out
repnz
and
out
inc
xor
and
jne
addb
cmpb
pop
push
sub
pushf
xor
test
jbe
jne
test
shlb
mov
rol
into
and
int
mov
jg
inc
aam
not
dec
loopne
movsb
movsb
push
sbb
jnp
xchg
sar
mov
jbe
and
mov
lret
ljmp
xor
mov
pusha
xor
aam
mov
and
xor
scas
dec
mov
cmp
inc
shrl
lock
sbb
mov
or
rorb
std
les
sub
push
jno
int
inc
cltd
or
xchg
fbld
lahf
mov
and
int3
outsl
add
mov
ret
ja
push
adc
dec
loope
out
arpl
pop
loope
movsl
xchg
nop
add
test
mov
std
aas
adc
jl
adc
add
jmp
fwait
inc
int3
cwtl
outsl
fisubrl
in
jne
mov
push
cmpsl
fmuls
lcall
jnp
mov
shl
and
mov
jle
gs
jge
mulb
and
nop
lods
push
pop
sub
cmp
pop
inc
sub
cmp
in
push
cmp
int
dec
sti
push
ret
pop
sbb
xor
xor
pop
iret
fidivl
call
repnz
add
dec
jb
mov
push
mov
stos
outsb
in
call
movsl
pop
mov
in
lea
add
cmp
adc
inc
pop
int
sbb
aas
out
popf
dec
and
mov
loope
push
rcl
call
inc
inc
iret
pushf
xchg
loopne
int3
and
sbb
dec
mov
outsl
lods
es
icebp
mov
mov
cmp
aas
aas
pusha
push
in
cmpsb
daa
mov
lcall
add
cmpsb
fcoms
lret
rorb
nop
inc
mov
out
cmp
sti
pop
mov
movsl
push
insl
mov
cs
jg
push
add
xchg
test
jecxz
pop
jg
rcll
into
push
iret
lcall
les
pop
das
gs
mov
movsb
pop
xchg
ljmp
and
popf
sub
push
jp
dec
jo
cmp
es
ss
push
and
fldt
cld
jne
pop
clc
fsubrp
cmpb
jbe
jl
les
pop
and
adcb
mov
scas
in
or
flds
arpl
movsb
cmpsl
daa
les
aam
imul
outsb
jae
mov
jo
dec
pop
inc
xchg
sub
add
lods
jge
loopne
mov
ret
pop
faddl
cmp
sbb
test
std
jno
inc
je
mov
jns
cmpsl
pop
fsts
loope
and
adc
cmp
leave
loop
jnp
xchg
xchg
and
push
ret
xchg
ss
cmpsb
mov
sbb
dec
and
or
int3
mov
sub
dec
outsb
bound
int3
notb
sub
das
push
lods
loopne
jmp
out
and
sbb
shll
xchg
inc
sbb
aam
or
es
mov
leave
sbb
inc
dec
xchg
push
jecxz
std
sbb
push
xor
dec
and
jecxz
fmull
xchg
sub
sti
rcr
in
iret
dec
and
push
and
dec
outsb
in
icebp
rclb
hlt
cmc
mov
adc
repnz
imul
pop
sar
test
out
pop
test
mov
xchg
in
pop
cmpsb
imul
xchg
pop
es
cli
into
stos
loopne
data16
cmp
popa
vsubsd
mov
lods
add
enter
dec
ret
push
sub
mov
and
lods
insl
adc
pop
or
jle
iret
jmp
mov
push
fcoms
or
jecxz
iret
mov
lret
push
insb
outsl
adc
jne
das
leave
in
loopne
sbb
jecxz
mov
ret
icebp
aaa
push
ljmp
adc
xor
mov
xchg
mov
cltd
mov
pop
sti
ds
sbb
or
add
sbb
std
shrl
pop
icebp
xchg
or
pop
mov
sbb
or
cmc
nop
ret
fwait
out
adc
loopne
hlt
out
dec
adc
out
loop
test
lods
repnz
pop
aam
addr16
jle
and
sub
shlb
add
mov
mov
dec
cld
shl
enter
lret
test
dec
push
loope
orl
aam
out
bound
scas
mov
ss
icebp
xor
mov
iret
adc
cmpl
xchg
add
add
js
loope
lock
ljmp
or
call
pop
stos
pop
jge
mov
ret
lret
cmc
jmp
das
es
push
lahf
jb
test
mov
cs
in
dec
xchg
jns
lods
cli
loope
inc
daa
test
mov
mov
rcll
sub
mov
icebp
xchg
fistpll
call
push
aaa
push
dec
cmpsb
sub
push
lock
adc
lahf
shrl
xchg
cmp
fsubrs
cmp
inc
xor
jne
scas
nop
and
mov
mov
fs
or
mov
mov
push
xor
push
outsb
shr
cmp
add
dec
outsb
iret
fimuls
std
mov
adc
out
xchg
push
repz
es
push
ja
sarl
pop
stos
mov
or
movsl
jl
je
lret
and
jbe
shrl
aas
dec
jb
cmpsb
sbb
fistps
and
aaa
jns
xchg
mov
nop
add
push
add
mov
in
sub
add
shrl
jno
mov
repz
cmp
ss
shl
mov
in
xchg
mov
jnp
test
stc
mov
call
out
nop
push
jl
pop
popa
das
mov
xchg
loope
push
mov
loope
sub
jge
fists
mov
cmp
xchg
clc
jmp
mov
xlat
mov
xchg
ljmp
lret
addr16
jo
cmpl
push
cwtl
adc
iret
test
mov
cmc
lret
aam
aam
hlt
inc
dec
inc
in
fisubrs
push
mov
add
sbb
scas
xchg
adc
adc
rcll
lods
jb
xchg
mov
inc
movsb
addr16
mov
jecxz
mov
loop
stc
aam
cltd
add
add
lcall
push
jae
sahf
ds
sub
notb
push
mov
pusha
mov
jmp
test
pop
cmpsl
std
cmp
lods
bswap
inc
inc
fisttpll
jae
and
stos
xlat
nop
icebp
inc
cwtl
stc
mov
jns
in
pop
ljmp
pop
test
add
imul
sahf
cwtl
int3
xor
mov
mov
inc
cwtl
popa
stc
outsl
pop
fwait
sti
mov
dec
fnstsw
mov
in
jb
xor
shl
lret
cwtl
insl
lahf
loope
mov
add
inc
scas
inc
cmp
cmp
std
inc
sub
clc
data16
xor
in
cmp
out
cs
pop
jle
shr
xchg
xor
mov
mov
pop
ret
xchg
nop
adc
pop
sub
aas
test
and
je
dec
rorb
mov
sarb
in
in
xor
xor
jge
rcrl
dec
in
and
popf
mov
insl
and
or
xchg
xchg
loopne
jle
push
cltd
movsb
fistpl
cld
call
fs
pop
out
xchg
insl
xor
test
or
mov
xchg
test
aad
test
bound
mov
test
out
mov
inc
pop
dec
outsb
cltd
xchg
test
xchg
int3
push
jg
inc
mov
enter
xchg
je
out
pop
sbb
js
std
loop
enter
loop
sbbb
add
cld
mov
mov
inc
sbb
xlat
cmc
les
insl
cltd
sti
dec
mov
push
test
inc
aaa
roll
fxam
pop
pop
sahf
mov
aas
mov
bsf
add
inc
pop
movsb
gs
adc
ret
mov
cmpsb
pop
cs
sbb
rcr
fstl
rorl
push
pop
bound
push
jno
mov
cli
sub
push
cld
loope
lcall
ljmp
jecxz
jne
ret
pop
mov
in
dec
mov
frstor
xchg
mov
jp
push
daa
add
shll
push
lods
adc
mov
cs
mov
fsubl
pop
mov
mov
mov
xor
gs
push
icebp
cmp
scas
mov
push
rolb
clc
into
dec
or
ficoms
stos
loope
xor
aas
jbe
das
xor
mov
fldcw
mov
xor
adc
pushf
in
jmp
in
sub
xchg
test
inc
fbld
and
jmp
and
out
mov
lcall
adc
mov
mov
sbb
in
or
mov
hlt
mov
enter
inc
out
ss
jnp
mov
stos
push
loope
ss
outsb
dec
push
leave
push
fs
adc
loop
cmpsb
adc
adc
hlt
mov
icebp
dec
stc
gs
out
mov
xchg
add
ljmp
imul
jecxz
mov
mov
mov
xchg
in
test
fsts
mov
fstpt
adc
mov
sub
dec
inc
or
mov
inc
es
mov
mov
mov
decb
js
dec
xchg
sbb
xchg
sahf
xchg
ret
test
repnz
out
cmc
shll
out
cmp
lret
jmp
push
fsubr
jge
dec
lods
mov
sbb
cltd
mov
ds
nop
sub
sbb
dec
jg
aas
mov
mov
mov
insb
scas
xor
out
push
and
jle
lahf
fstl
sub
movsb
sarb
and
xor
aam
dec
lahf
jmp
out
fstpl
mov
cmc
in
jp
adc
fdivrs
rorl
and
ficomps
jnp
std
push
and
out
pop
out
fbld
mov
out
push
xchg
lahf
dec
nop
stc
mov
mov
add
pop
insl
lret
adc
and
subl
lcall
mov
aas
adc
stos
pusha
sbb
add
jne
shlb
jbe
leave
mov
mov
outsb
pop
ja
adc
sahf
and
pop
push
fistps
je
sbb
adc
je
insl
stc
dec
cmp
lock
adc
dec
shll
ficompl
lret
pop
jg
push
add
test
xchg
jns
jb
jmp
jno
pop
jecxz
push
mov
mov
inc
or
jns
cmc
mov
imul
lea
and
scas
std
out
sbbl
jbe
cmpsl
dec
sub
cmp
ficoml
les
sbb
mov
jno
lret
repz
mov
jno
mov
adc
and
sbb
loop
sbb
dec
repnz
mov
aam
cs
inc
aam
sbb
int3
cmpl
cmp
jmp
int3
repz
cmp
push
insb
push
pop
in
je
inc
xadd
cmpsl
and
out
lods
push
add
frstor
jecxz
loopne
adc
enterw
jge
pop
adc
sbb
mov
mov
daa
adc
les
inc
mov
mov
andb
int3
jg
sahf
mov
mov
xchg
pop
adc
dec
rcrl
sub
aas
rorl
lock
pop
sub
push
adc
call
mov
popa
xchg
ds
inc
push
lea
imul
xchg
rolb
jl
cwtl
lock
fs
movsl
cmpl
mov
cmpsb
outsb
pop
js
sbbl
adc
shrl
dec
xchg
mov
iret
push
cs
ret
mov
mov
sub
mov
add
pop
dec
inc
xchg
inc
mov
sbb
jns
sarl
decb
mov
add
xor
pop
leave
movsl
and
scas
out
inc
push
pop
fistps
pop
rol
jle
iret
push
jmp
push
dec
dec
lret
and
add
xlat
stos
repz
cwtl
xchg
fistpll
cwtl
push
testl
xor
xor
lret
inc
jmp
push
inc
rorb
orl
ljmp
pop
jns
rorb
push
shr
loop
nop
imul
push
pop
inc
push
sbb
cmpsl
and
adc
xor
es
in
mull
lcall
mov
and
out
dec
sbb
fld
push
add
xchg
sub
inc
cwtl
cs
cmp
mov
lock
sbb
int
popf
fdiv
hlt
add
mov
mov
adc
aaa
mov
adc
pop
nop
mov
mov
xchg
push
stos
xchg
inc
ja
das
cs
stos
push
jmp
arpl
inc
pop
out
cld
jecxz
cltd
lods
andb
pusha
xor
xchg
fwait
cmp
add
cmc
inc
mov
mov
pop
out
out
out
shrl
xchg
mov
mov
cmp
sub
orl
push
pop
xor
rcll
xor
inc
fsubrs
mov
or
push
inc
mov
loope
ss
incb
jno
xor
in
sub
mov
daa
mov
push
xchg
mov
subl
sub
mov
jae
shrl
adc
and
dec
cli
pop
jg
push
add
pop
leave
inc
lods
adc
mov
pop
mov
dec
xchg
push
ljmp
cmp
dec
rcrb
add
xchg
mov
cmp
and
adc
add
and
in
mov
mov
rorl
mov
mov
mov
mov
and
popa
call
ret
int
mov
xchg
shrb
stc
shll
adc
loope
movsl
pop
leave
imul
add
mov
mov
dec
in
cmc
dec
icebp
mov
icebp
loopne
cmp
mov
stos
jnp
aaa
mov
mov
sti
lcall
lea
cmp
and
add
inc
ja
hlt
int
pop
pop
stos
femms
pop
xchg
push
test
pop
mov
daa
xchg
add
icebp
iret
mov
rclb
cmpsl
xor
dec
push
mov
pop
pop
aad
js
push
outsl
mov
jg
xlat
or
popl
adc
jne
leave
push
loopne
mov
mov
adc
mov
cmp
xchg
icebp
out
ds
sbb
cmpsb
fdivl
lods
dec
movsl
adc
lcall
jno
xchg
popa
pop
and
stc
repnz
pusha
insl
or
nop
xor
addl
mov
xchg
cmp
in
dec
xor
bound
and
ljmp
pop
push
adc
xor
xor
inc
cmp
jg
shrb
mov
cmc
mov
sbbl
adc
inc
loope
xchg
mov
cmc
mov
mov
pop
pop
addr16
in
xor
ret
iret
jle
addr16
mov
add
pop
jns
sbb
push
in
mov
std
sbb
xchg
xchg
pop
sti
aaa
outsb
mov
sti
sub
in
mov
testl
or
popf
pop
sbb
pop
test
sub
sbb
jle
dec
inc
fimull
fadds
sub
divb
fsubrp
push
sbbl
aad
jge
sarb
adc
dec
jb
inc
xor
pop
rcl
cld
repz
mov
insl
sbb
arpl
rcrl
leave
fstpt
outsl
pop
or
pop
lret
mov
dec
jbe
jmp
push
and
mov
shlb
mov
push
mov
stos
push
sub
xchg
push
inc
pushf
mov
xor
sbb
mov
mov
into
pop
xchg
sub
lods
loope
xchg
jge
push
push
sbb
pop
in
inc
mov
dec
fnstenv
adc
add
push
jae
cmp
incb
scas
test
bnd
xchg
out
sbb
inc
mov
xor
or
dec
mov
or
sbb
out
icebp
ljmp
sbb
imul
add
scas
iret
popa
std
popf
mov
cmp
jns
jo
inc
cmp
and
sbb
scas
inc
std
inc
jl
xchg
cltd
mov
outsb
xor
sbb
loop
nop
insl
adc
repnz
xor
dec
mov
push
imul
insb
inc
push
lods
lods
xchg
jl
mov
int3
jns
add
dec
and
mov
mov
test
loop
and
and
and
pop
xorb
sbb
bound
fmul
inc
mov
push
mov
mov
cmpsl
lods
addr16
mov
stc
int
or
mov
pop
xchg
lahf
jnp
fadds
jg
aas
dec
sub
xor
xchg
test
adc
mov
dec
jae
add
fstps
imul
dec
add
imul
dec
jno
push
xor
or
stc
push
pop
lods
outsl
add
das
adc
jno
mov
inc
mov
jmp
decb
adc
mov
xor
or
fs
adc
in
nop
hlt
jo
repnz
adc
cmp
xor
dec
xor
sub
outsb
nop
add
fcompl
cmpsl
pop
test
xor
andb
cltd
dec
cmp
in
es
adc
inc
hlt
push
sti
xchg
in
test
mov
ja
push
mov
mov
out
inc
jns
and
je
jg
cmpl
fildl
scas
sub
and
mov
adc
enter
adc
clc
inc
xchg
sub
jbe
popa
pop
xchg
fildl
call
stc
xchg
pop
sub
add
jecxz
mov
jbe
or
iret
mov
bnd
orb
arpl
and
and
ja
insb
or
pop
push
fdivl
adcb
aam
pop
pop
or
mov
cs
mov
ja
enter
jecxz
loope
pop
mov
cmp
mov
rolb
ret
cmpsl
and
mov
jl
out
fmuls
sahf
inc
mov
dec
push
cmc
sti
shll
sbb
ss
or
test
adcl
rcr
sbbb
das
scas
ret
add
cs
sbb
cmp
aam
rorb
out
test
sub
ficoms
jmp
cmpsb
or
mov
fsubr
pop
enter
fstpt
pop
mov
cmp
jbe
incb
cmpsl
push
stos
xor
xor
in
push
mov
adc
xchg
cmpsb
jo
aaa
scas
bound
mov
mov
xor
call
test
add
jb
sbb
lahf
dec
pop
nop
mov
pop
stc
adc
subb
xchg
pop
xchg
insl
movb
jg
insb
ja
out
xchg
aam
add
cmpsb
sbb
fsts
add
xchg
and
inc
loop
cmpsl
mov
sub
and
push
pop
push
popa
call
loopne
lds
mov
cmpsl
xlat
je
cltd
jl
pop
aaa
xchg
mov
or
and
push
lea
sub
jne
pop
jb
push
pop
add
scas
outsb
roll
ror
mov
ret
mov
stos
popa
jg
pop
lods
outsl
sbb
and
lahf
js
lock
adcb
ss
or
rclb
popa
adc
out
cmc
sbb
or
rcr
in
sbb
rcll
jae
clc
dec
andb
sub
in
pop
jg
leave
mov
xor
icebp
ret
cmp
adc
std
dec
add
outsl
adc
and
sbb
out
pusha
jg
fcom
jge
scas
dec
adc
shrb
enter
xchg
xor
cltd
xor
mov
and
test
sub
nop
xchg
out
insb
fistl
hlt
insl
faddl
xchg
jns
scas
shr
addr16
jae
mov
xor
xchg
ja
mov
icebp
mov
repz
leave
fstpt
insb
int
push
icebp
rorb
lret
jne
dec
cmp
lret
insb
mov
jl
mov
or
sahf
adc
pusha
lfs
ja
daa
mov
aad
out
adc
in
sbb
ret
aas
loop
jne
push
mulb
scas
lods
and
outsl
jmp
jno
sbbb
mov
dec
lods
adc
bswap
and
imul
out
xchg
pop
data16
add
push
jae
and
push
mov
mov
mov
fwait
pop
cmp
jae
add
xlat
cmc
nop
jbe
out
out
pop
cmp
loope
jne
cmp
cmp
aaa
cmp
test
and
es
jmp
push
pop
push
add
push
inc
pop
or
outsl
add
jmp
cmpsb
std
mov
dec
sub
mov
jecxz
dec
push
mov
mov
xchg
fwait
add
xor
xchg
adcb
xchg
int3
mov
sbb
test
sbb
test
dec
stos
bound
pop
cmc
aad
in
and
out
loopne
jb
pop
jmp
out
ljmp
fcoml
push
push
cmpb
add
jne
ret
push
pop
push
test
ss
cmp
jecxz
in
xor
movsb
lfs
add
mov
pop
loop
inc
adc
xlat
imul
xlat
aam
or
ret
adc
popf
or
push
incb
mov
loop
dec
scas
out
popf
gs
clc
pop
enter
jo
push
repz
fsubrs
pusha
popf
lea
cld
outsl
pop
mov
sbb
adc
sahf
mov
or
xor
das
xor
jno
mov
movsl
addr16
iret
add
fs
and
cmp
xor
mov
add
outsb
push
das
mov
adc
js
sub
dec
add
outsl
loopne
data16
lock
mov
clc
frstor
push
loop
mov
adc
in
cwtl
inc
iret
dec
mov
jg
call
mov
push
push
in
mov
sbb
mov
out
arpl
sbb
add
inc
sti
das
mov
and
mov
push
mov
ss
mov
xor
cld
mov
xchg
or
test
ss
cmp
jmp
cs
pop
dec
or
mov
imul
or
mov
adc
sub
xchg
cwtl
xor
loop
push
sbbl
test
cmp
push
sbbb
lock
or
sti
lcall
gs
nop
icebp
loopne
add
out
in
sbb
inc
insl
or
les
iret
addr16
dec
jmp
shlb
jecxz
aaa
je
push
mov
mov
scas
mov
lcall
fld
add
mov
and
popf
mov
jge
xchg
out
or
jmp
loope
add
jnp
mov
test
jns
cmp
loope
pop
push
cmp
and
ret
imul
inc
repz
sub
adc
outsb
sub
orps
mov
cwtl
aaa
ja
pushf
andb
loopne
pop
insl
lock
sar
or
cmp
push
push
andb
movzbl
or
rcrl
cmpsb
xor
dec
sti
test
pop
lock
out
add
jecxz
test
dec
sub
jmp
pop
dec
movsl
fs
dec
dec
mov
ds
fs
xchg
ret
stc
mov
mov
scas
scas
nop
out
es
mov
inc
cmp
xchg
arpl
addr16
xchg
test
clc
adc
dec
sahf
call
xchg
mov
inc
outsb
pop
lds
stos
int3
popf
xor
lret
nop
mov
cs
push
pop
mov
addr16
movsb
xchg
aaa
mov
sub
xor
xchg
and
leave
les
mov
inc
loopne
dec
ds
sub
push
movb
dec
movsb
dec
cltd
rcrb
add
or
clc
roll
mov
push
std
and
adc
inc
or
add
xor
pop
adc
lahf
lea
add
dec
sub
jns
push
sub
fnstenv
imul
mov
sbb
cmpsl
lcall
out
dec
push
inc
mov
xor
mov
push
data16
xchg
jg
and
dec
popa
adc
cmp
or
xlat
inc
dec
push
pop
adc
fs
adc
sbb
pusha
insb
mov
push
xchg
out
jp
mull
bnd
adc
or
xlat
gs
adc
xchg
jne
test
mov
pop
xlat
and
push
pop
shlb
insl
shl
cmpsl
movsl
and
push
sub
imulb
add
mov
and
pop
add
and
xchg
inc
es
cmp
cmp
dec
fcmovne
lock
rcll
xchg
mov
jge
mov
outsb
in
inc
test
or
out
sar
sub
out
add
lods
pusha
cli
fwait
mov
pop
aad
xor
sbb
cmp
cld
testl
cmp
pop
rclb
sub
mov
mov
jno
popf
ljmp
aaa
xchg
aam
add
out
aaa
mov
inc
mov
mov
add
test
xchg
ret
inc
and
testb
aad
mov
cmpsl
fnstcw
into
outsl
cmp
jbe
add
dec
xchg
dec
push
pusha
dec
outsl
stc
notl
or
push
mov
add
rcl
je
ficomps
xlat
mov
loopne
sub
dec
cmp
lcall
std
icebp
leave
shl
and
rcrb
sub
shrl
mov
shll
xor
push
and
lahf
mov
jns
and
push
jno,pn
cmp
push
mov
jns
cmp
arpl
mov
and
or
fnstenv
repnz
fiaddl
fisubs
bound
lcall
mov
xchg
aas
fnsave
mov
mov
bound
lds
mov
sbb
mov
push
push
sub
push
mov
and
shrb
loop
xchg
push
shrl
xacquire
cli
mov
cli
mov
xchg
xchg
dec
dec
mov
mov
out
loope
pop
or
or
repnz
mov
pop
adc
sbb
jmp
stc
adc
out
test
add
sbb
lret
mov
mov
les
xchg
xchg
jl
sbb
and
movsl
adc
sub
ret
dec
xchg
push
es
dec
cli
mov
adc
rol
hlt
mov
mov
pushf
stos
cmp
daa
pop
test
idivb
or
inc
iret
ret
insb
es
jne
inc
jp
and
dec
or
add
sub
int
aas
push
es
mov
inc
and
inc
cld
cli
pop
adc
xor
sbb
test
mov
sbb
test
daa
lret
adc
pop
add
addr16
out
icebp
fs
fistps
xchg
sahf
lods
dec
xor
loop
mull
xor
dec
push
insl
fnstenv
pop
clc
xchg
fsubrs
pop
js
sbb
mov
out
divb
adc
out
mov
shl
rolb
ljmp
call
mov
test
fnstcw
fistps
push
cmpsb
out
jp
add
sub
push
movsl
dec
xor
dec
stc
rclb
inc
test
cmp
aaa
and
sbb
sub
test
js
or
or
xchg
in
fs
cmpsl
dec
add
xchg
sub
or
and
push
adcl
bound
fs
mov
arpl
dec
or
pop
ja
scas
cmp
xor
add
rol
inc
mov
aam
xchg
adc
lods
popa
test
lods
ret
adc
jmp
mov
pop
jecxz
or
jae
vmovaps
jbe
dec
jle
icebp
fcomps
jecxz
mov
cmp
int
fisubs
andb
fwait
dec
shl
dec
adc
mov
test
lea
mov
std
inc
sub
inc
mov
and
mov
incl
cmp
cltd
sbb
lret
cmpsb
dec
rolb
pusha
andl
int
cwtl
mov
jae
dec
mov
movsl
aad
sub
out
mov
jl
mov
lods
or
mov
inc
jne
xor
aam
fmuls
dec
and
stos
push
sub
dec
notl
pushf
push
ja
iret
nop
xchg
insl
add
jmp
or
outsb
ljmp
cmp
repnz
xor
cmpl
jecxz
repnz
movsl
ficompl
jecxz
in
imul
mov
popf
jge
lcall
cmp
push
cmp
mov
inc
push
loope
stos
cmc
pop
fucom
mov
jp
mov
in
mov
ret
in
daa
add
add
dec
in
and
pop
push
jnp
sub
cmpsl
sbb
pop
notb
mov
int
lock
dec
and
adcb
call
jmp
add
pop
into
lods
mov
mov
ret
mov
mov
gs
adc
cmpsb
shll
loop
repnz
dec
dec
stc
sub
enter
loope
xor
cmpb
fnsave
ja
pop
add
stc
add
fstpt
mov
xor
xor
sub
cltd
push
int3
mov
pop
mov
sti
lea
cmc
adc
xor
repnz
hlt
xlat
lcall
push
push
inc
gs
testb
imul
out
xchg
adc
xchg
js
inc
ja
and
movsl
add
adc
rcll
pop
movsl
inc
push
or
lock
shl
es
ror
lret
sbb
movsl
rcll
jp
scas
ds
and
or
jge
sub
lahf
es
insb
jno
cmp
out
scas
inc
bound
pop
cld
cld
ret
and
js
mov
ret
push
cltd
popa
sti
outsb
jmp
outsb
js
xchg
rcrl
lret
ret
dec
testl
repnz
pop
inc
call
xchg
cmp
pop
xor
mov
xor
lods
push
scas
test
cmp
jno
pushl
fs
pop
sub
sbb
sarb
aas
cmp
or
sbb
xor
setp
stos
cld
orl
pop
shl
subl
in
lea
dec
xorb
sub
jle
gs
sbb
test
lods
xorb
pop
jb
jno
sbbb
jnp
xchg
pop
jecxz
scas
cmp
cmp
inc
mov
out
mov
or
stos
xchg
mov
mov
push
jle
movsl
sahf
jbe
ret
xchg
test
add
push
hlt
mov
repz
inc
sub
clc
push
push
repz
sub
fcomp
jne
stos
mov
stos
cmp
sub
mov
xor
cmc
les
mov
dec
sbbb
aaa
cmc
adc
sarb
icebp
pop
shlb
rolb
stos
es
in
push
cmpsb
sahf
push
lods
movsl
pop
sarb
mov
dec
or
lock
sahf
aam
lea
pop
or
mov
adc
inc
dec
dec
ficompl
push
sarl
int
sbb
mov
pushf
stos
in
xchg
in
inc
or
icebp
or
in
jle
dec
mov
and
insb
cwtl
and
out
dec
repnz
mov
add
iret
mov
repz
cmp
cmc
or
sub
mov
adc
leave
jns
mov
xor
aad
dec
jbe
cmc
mov
cmc
clc
mov
pop
xor
add
or
push
in
inc
les
dec
pop
push
xchg
fsubs
mov
xchg
test
xor
push
adc
std
arpl
adcl
pop
mov
inc
xchg
aas
retw
jl
cli
push
xor
out
mov
arpl
mov
mov
xor
xchg
jb
popf
mov
pushf
push
xorb
pop
loop
sbb
test
fistpll
sub
pop
shrl
daa
idivb
aad
fs
xor
pop
add
mov
jno
and
loope
push
push
push
xchg
lcall
push
lds
mov
repz
addr16
lock
ljmp
clc
stc
or
test
rorl
mov
cs
movsl
insl
sbb
test
xchg
lds
repz
lret
lock
push
mov
paddusb
aad
dec
push
ret
repz
iret
movsb
mov
imul
push
mov
lock
mov
movsb
fmull
mov
out
addr16
inc
sti
lods
adc
repz
fwait
hlt
mov
sbb
outsb
in
movnti
imul
in
stos
cmp
stc
add
imul
aas
mov
lret
jns
pop
orl
loopne
jno
iret
xor
push
dec
leave
popf
repnz
std
push
out
test
inc
fmuls
scas
sbb
jp
loopne
ficoms
push
or
jne
push
xor
push
sub
cltd
mov
mov
rorb
mov
jge
das
mov
test
aad
test
addr16
rcll
xchg
add
sub
lahf
repnz
out
xor
adc
mov
ret
pop
fists
lods
jns
sbb
xor
sarb
xor
cwtl
cmp
loopne
das
enter
push
lcall
mov
mov
jl
adcl
sahf
scas
lods
ficoml
ds
cmp
xlat
push
mov
leave
data16
pushf
mov
call
jae
std
stos
sbb
scas
aas
arpl
fnstcw
rcrl
add
sub
lock
mov
jne
mov
iret
stc
sbbl
cmp
mov
cmpsl
mov
jg
sahf
sahf
mov
jae
sbb
arpl
cvtpi2ps
xchg
mov
cmpsb
fsubrs
in
fisubs
ds
xor
adcb
loopne
gs
out
sub
notb
cmp
std
cmp
mov
add
movsl
test
js
rol
adc
pushf
mov
arpl
movsb
xchg
cmp
push
sbb
mov
insl
aaa
lods
stos
fisubrs
ljmp
fadds
sahf
adc
mulb
sub
adc
repnz
stc
adc
aam
cli
push
push
xchg
std
mov
rorl
xor
in
xchg
popl
cwtl
sbb
mov
jns
aad
rclb
fstl
pop
sbb
sbb
out
xchg
iret
mov
idivb
cmp
ret
mov
xchg
push
fs
xchg
sbbb
stos
mov
adc
inc
mov
into
push
sub
fisttps
or
mov
mov
je
ret
movsb
fstps
in
jp
iret
movsb
adcb
test
or
repnz
push
xchg
fldcw
inc
inc
sbb
pushw
jle
jnp
lret
rcll
enter
jbe
push
xor
pop
fildl
pop
xor
jo
es
jb
rep
insb
decb
mov
stos
cmp
aam
sbb
dec
mov
das
dec
pop
xchg
ffree
inc
mov
outsl
icebp
pop
dec
push
cmp
ficompl
int
decl
std
and
aaa
or
stos
rorb
adc
pop
and
movsb
sahf
test
dec
push
jg
add
inc
xchg
mov
loopne
adc
jbe
jl
pop
or
enter
pop
sub
test
xor
jbe
cmp
out
inc
mov
mov
mov
andl
xchg
sbb
mov
mov
xchg
push
xor
jecxz
imulb
int
jle
pushf
sti
test
hlt
jno
mov
jg
test
xsha1
cmpsb
dec
pop
sbb
dec
xor
out
adc
into
jecxz
cmpsb
jbe
jmp
dec
popa
or
in
bound
scas
xchg
inc
aaa
push
push
ret
roll
mov
arpl
pushf
addb
push
mov
inc
in
pop
jl,pt
inc
test
pop
sbb
cmp
test
dec
or
dec
pop
pop
lret
imull
ror
jne
push
or
dec
test
or
xchg
lock
jecxz
mov
push
sub
lds
xor
cmc
lea
clc
cmp
mov
iret
sbb
cli
inc
lods
repnz
sub
out
xor
add
pop
lock
fbld
out
cltd
test
inc
in
enter
xchg
fnsetpm(287
inc
and
ss
adc
roll
pop
cmp
in
add
shrb
aad
rorb
xlat
or
pop
mov
shr
sarb
lret
clc
jg
js
fildll
mov
inc
sub
add
mov
mov
rcll
mov
cmp
lret
ljmp
das
mov
or
mov
pusha
stc
mov
pop
push
cmp
outsl
pop
xchg
lds
lods
imul
sub
jp
mov
xchg
adc
sbb
scas
and
mov
adc
mov
std
cmpsb
mov
nop
mov
cmp
stc
mov
jae
xor
pushl
pop
aaa
add
and
pop
enter
repz
out
mov
scas
sahf
inc
inc
pop
mov
dec
jmp
mov
popf
pop
mov
mov
subl
inc
sarb
add
pop
jb
inc
jge
call
outsl
inc
stos
sub
jg
cmpsl
sub
mov
mov
outsb
push
cwtl
push
dec
xor
xchg
adc
outsb
mov
mov
lret
dec
jbe
push
jle
insl
mov
cmp
mov
in
add
test
subb
out
cs
mov
loop
adc
out
in
xor
cli
lahf
mov
sub
test
mov
dec
xorps
fnsave
mov
xor
out
and
lcall
insl
sub
pop
ret
sahf
xchg
fcompl
hlt
out
inc
cmovge
pop
and
push
loope
je
notl
cmpsb
push
loopne
dec
gs
mov
loopne
inc
pop
scas
pop
sub
mov
call
pop
xor
push
cld
sub
mov
lret
lds
out
mov
sub
xor
cs
or
fistpll
jmp
push
pop
ds
ror
fisubl
and
hlt
aas
jge
cmp
pop
mov
jle
cmp
sbb
jp
stos
shlb
loop
lods
xor
loop
js
cmp
push
outsl
mov
pop
orl
lods
imul
pop
lret
lea
aas
sub
out
xchg
inc
in
and
mov
jbe
cmp
inc
dec
adc
push
pop
pushf
insl
pop
mov
pop
push
adc
xor
adc
mov
rcrl
dec
ja
adc
and
lods
int3
sbb
pop
pushw
mov
sbb
pop
stos
jle
sbb
and
hlt
nop
shrb
fcmovnb
leave
ljmp
aad
or
sbb
mov
mov
mov
adc
xchg
iret
cli
lods
xchg
sahf
divb
add
pop
adc
sarl
loope
je
mov
movsl
xchg
test
imul
lahf
lods
data16
data16
rorl
jge
pop
pop
xchg
pop
xor
pushl
xor
test
mov
pop
loope
cmpsb
cltd
ret
adc
inc
out
pop
adcl
push
sar
sub
inc
lods
or
mulb
xor
arpl
lds
imul
rcrl
lods
shrb
out
pop
or
inc
scas
lea
daa
push
fs
bound
xchg
mov
mov
pop
dec
pop
mov
or
pop
dec
add
cwtl
out
pop
or
rol
daa
cltd
xlat
dec
outsb
xor
call
movsb
or
or
ret
in
js
mov
ret
sub
mov
insb
lods
cmp
mov
fsubrs
mull
inc
jge
jbe
mov
outsb
int3
sbb
jg
dec
mov
push
inc
jle
sub
or
pop
imul
cmpsb
mov
sbb
pushl
arpl
dec
xchg
movsl
sbb
ja
sbb
and
cmc
movd
loope
iret
sbb
fwait
add
lret
adc
loopne
sbb
pop
and
aad
dec
out
inc
stos
sub
dec
into
nop
mov
stos
and
jg
mov
jbe
lret
scas
jmp
into
popa
jnp
push
mov
or
push
scas
out
jno
and
sahf
xchg
lock
lods
orb
xor
mov
pop
out
mov
adcb
pop
pop
test
ja
xchg
jns
jg
out
jbe
mov
cmpsl
inc
rcll
pop
add
pop
sbb
adc
sub
xchg
ret
inc
out
xchg
sbb
or
fists
add
pop
rcl
mov
or
call
imul
xchg
lock
std
push
push
movsl
cltd
cli
aas
sub
fwait
stc
mov
push
jg
daa
mov
pop
cwtl
fldcw
test
dec
ja
jmp
push
lods
leave
stos
in
ljmp
rolb
mov
jl
stos
les
imul
and
xchg
mov
ffreep
inc
sbb
sub
insb
int
xchg
dec
add
movsb
push
inc
mov
mov
icebp
inc
ret
xchg
stos
xchg
ds
pop
sbb
jns
incb
int
inc
inc
add
inc
push
mov
lret
xor
das
mov
loopne
enter
sub
lret
jbe
push
push
sbb
and
roll
xor
pop
adcb
jecxz
andb
out
adc
pusha
dec
pop
sub
pop
pusha
jg
lods
sbb
dec
pop
popf
and
aas
fcoms
cmpsl
xchg
inc
push
sarb
and
pop
aad
mov
lahf
sub
notb
cmp
push
or
imul
xchg
incb
mov
mov
les
inc
push
xor
jg
jnp
rcr
adc
fimuls
scas
cwtl
dec
mov
mov
push
test
jne
lock
mov
mov
sub
adc
or
in
jae
mov
and
or
cmpsb
mov
mov
xchg
pushf
add
mov
add
mov
pop
sbb
sub
jno
xor
dec
outsl
mov
out
adc
cltd
dec
aam
scas
push
pop
sbb
push
jmp
fiaddl
stc
mov
and
pop
out
jno
je
loope
jns
fsub
cmp
inc
mov
out
pop
mov
xorb
cmpsb
mov
dec
and
jno
stos
mov
scas
adc
ret
out
add
addl
test
in
cli
pop
xor
adc
lea
sbb
in
cs
aam
mov
call
and
jbe
or
jnp
popa
dec
xchg
mov
and
outsl
cmp
scas
test
sub
add
or
andb
mov
dec
popa
push
dec
adc
out
sub
andl
and
pop
mov
addb
push
push
jno
sub
imul
sti
mov
nop
pop
and
add
xchg
sbb
int3
add
lret
sbb
icebp
push
xor
lea
dec
lcall
aad
call
pop
xchg
fnsave
ja
pop
jmp
push
ss
movsb
outsl
push
aad
cmp
lods
fdivl
lcall
push
mov
orb
mov
cmpsb
daa
testb
out
add
fcomp
clc
clc
cmpl
cld
pop
inc
push
adc
rcll
into
std
push
xor
or
pop
jle
stos
pusha
pxor
mov
cs
jae
push
mov
sub
mov
lods
pop
mov
ja
inc
xorb
inc
into
gs
in
xchg
xchg
das
aas
pop
mov
icebp
mov
mov
int3
push
lods
and
push
test
int3
and
inc
aaa
dec
stc
insb
lahf
jle
repz
jle
div
adc
lea
lods
scas
cmp
add
dec
push
out
mov
push
add
xchg
inc
test
mov
dec
stc
mov
sub
fsts
lods
mov
adc
loop
rclb
or
dec
stos
mov
loopne
mov
idivl
sti
nop
inc
xchg
push
icebp
movsb
jbe
movsb
mov
loope
cmp
and
push
cmp
mov
lret
into
jl
sub
cmpsl
inc
jecxz
push
dec
pop
insl
into
ljmp
jp
cmp
sub
mov
cmc
les
popf
icebp
je
int
imul
mov
pop
inc
insl
and
gs
movsb
dec
mov
fnstcw
sahf
out
dec
push
fldenv
jecxz
les
jnp
icebp
sbb
divb
jae
icebp
inc
bound
aaa
mov
bound
stc
inc
fucomp
push
into
mov
nop
mov
lods
popf
ljmp
int3
pop
xor
insb
mov
and
loope
cmp
scas
ljmp
jno
or
push
dec
or
jmp
mov
cmpsl
dec
shll
dec
in
or
push
ret
sbb
xchg
jbe
xlat
add
inc
jmp
rclb
loope
and
stc
adc
dec
mov
and
mov
fdivrl
sbb
loope
add
mul
mov
into
push
xchg
rorl
adcl
lods
xor
sbb
inc
mov
loopne
inc
fiadds
loop
adc
xchg
sar
and
jg
fistpl
and
idivb
aas
push
jp
js
out
mov
or
int
pop
jb
ja
mov
cltd
inc
mov
cmpsl
fists
jb
add
xchg
mov
mov
xlat
sub
add
push
pop
and
ficomps
in
xor
rorb
ds
xchg
lcall
xchg
sarl
in
mov
scas
jl
sbb
lds
mov
push
loop
addb
daa
les
mov
std
cmp
fwait
imul
lret
and
pop
pop
mov
jmp
pop
cmp
mov
mov
scas
inc
push
jecxz
jbe
push
dec
mov
imul
outsb
mov
cmp
aaa
push
bound
jle
iret
test
inc
xchg
mov
popf
add
jbe
cmp
xchg
mov
or
daa
dec
mov
dec
popf
loopne
lock
popf
sbb
iret
xchg
push
fcomps
cmp
cmp
push
enter
hlt
test
cmp
sub
in
ret
call
inc
dec
hlt
adc
dec
sbb
xchg
lret
pop
cmp
jle
mov
icebp
nop
out
sub
movsl
mov
jne
push
pop
icebp
and
xchg
adc
lds
aam
dec
inc
aas
mov
xchg
jp,pn
mov
mov
xor
mov
xchg
or
mov
sbb
loop
rcll
xor
lahf
pushf
and
sub
js
fwait
dec
pop
mov
push
sbb
jle
pop
stos
scas
xchg
lcall
sti
jmp
sub
js
aam
dec
out
inc
ljmp
push
arpl
pop
mov
xchg
xor
add
pop
data16
mov
push
testb
rcrb
adcb
push
adc
adc
fsubl
lcall
cltd
stc
mov
aam
or
cmp
mov
jle
push
fxch
mov
xchg
cmc
fcmovbe
adc
sub
stos
subl
adc
mov
push
push
add
xchg
clc
lcall
int
hlt
cli
push
test
mov
cmpsl
ja
nop
and
lret
push
sub
xlat
xchg
bnd
call
mov
ret
bound
xchg
cmc
ds
xchg
add
mov
inc
sub
dec
shll
ljmp
scas
xchg
cs
cmp
push
sub
xchg
sub
leave
in
xchg
vpsadbw
repz
sub
add
push
repz
out
push
fldcw
jb
cmp
lcall
cmp
outsl
and
jle
lods
out
out
add
mov
add
add
pop
cmpsl
iret
adc
cmp
or
mov
lods
hlt
int
push
cmpsb
jmp
jl
mov
xchg
push
les
ljmp
test
mov
cmp
inc
into
nop
and
pop
bound
jmp
sub
jmp
cmp
or
repnz
icebp
or
dec
sub
xor
sbb
cmp
mov
iret
inc
xor
mov
add
sub
lcall
inc
stos
stos
dec
sub
cmp
orl
mov
or
aaa
jns
jle
dec
mov
outsb
xor
xor
mov
repnz
imul
lret
test
fnsave
insl
lods
adc
out
sbb
mov
sub
ds
inc
in
test
add
sbb
push
dec
mov
rorl
push
imul
mov
fcompl
xchg
jne
fiaddl
daa
shll
mov
inc
cmp
scas
cmp
aam
and
into
subl
repz
mov
xor
dec
xchg
imul
and
pop
fdivrl
dec
fcoms
mov
sbb
dec
mov
xchg
imul
and
ja
out
pop
mov
mov
mov
mov
repnz
push
xor
dec
add
out
pusha
test
test
lea
jl
leave
push
and
scas
int3
mov
aas
mov
decb
xor
ljmp
jne
cmpb
repz
fimuls
xchg
push
cli
and
mov
test
iret
repz
shl
push
inc
pop
jge
add
out
js
xor
cmp
add
into
push
icebp
inc
call
rorb
mov
loop
ss
out
inc
mov
inc
mov
loope
mov
sbb
aad
and
pop
pop
lret
add
sahf
mov
jle
inc
ja
out
mov
icebp
inc
add
jbe
test
in
fdivl
xchg
jb
leave
cltd
fwait
xor
jmp
insb
scas
mov
stc
data16
or
lds
sti
xor
xchg
sarl
out
pop
fldl
mov
stos
outsb
push
repz
dec
cli
mul
popf
sub
xchg
pop
pop
mov
in
movsb
inc
ljmp
in
lret
aaa
push
fs
add
pushf
xchg
or
cli
inc
sbb
adc
pop
aad
repz
lods
cs
jle
nop
lds
ja
shl
or
mov
jmp
jg
jno
pop
imul
push
addr16
xor
outsb
repnz
imul
mov
mov
add
iret
aas
push
pop
fbld
xchg
dec
clc
xchg
sub
test
ds
in
sahf
pop
cmpsl
mov
into
xorb
popfw
les
pop
inc
cmp
adc
sbb
mov
mov
and
push
out
imul
aas
xlat
xchg
or
aam
je
rcl
adc
or
insb
mov
gs
adc
incb
aas
sbb
icebp
in
imul
imul
imul
sbb
rcrl
rol
pop
shll
sahf
icebp
xchg
xor
mov
jae
mov
cmp
pop
in
iret
imul
lahf
in
or
dec
add
inc
mov
icebp
mov
add
aad
xor
cmpb
cmp
shlb
call
sub
xchg
or
adc
sub
cmpsl
lock
stos
sbb
outsb
test
add
out
iret
push
invd
mov
jns
sar
idiv
into
outsb
add
into
mov
out
jmp
dec
add
inc
pop
das
nop
mov
add
pop
out
outsb
xlat
loopne
cmp
inc
ljmp
mov
arpl
or
cmp
ficoms
stos
jle
adc
sub
ja
aad
andb
nop
mov
push
or
int
push
iret
or
fs
cmp
mov
sbb
adc
testb
push
testb
push
scas
icebp
sbb
jmp
mov
rcll
js
mov
mov
mov
bswap
push
in
xchg
mov
nop
pop
or
push
ljmp
or
or
pop
ficomps
rcrl
in
xchg
test
divb
sub
mov
add
push
inc
sbb
es
cmp
lea
and
inc
insl
jl
cmp
sbb
cmpsb
mov
push
lds
adc
inc
add
iret
cltd
xchg
lods
inc
pop
or
or
push
enter
or
sbb
jnp
jecxz
xor
jb
jae
out
je
jae
adc
in
add
xchg
mov
outsl
test
imul
pop
sbb
add
inc
jbe
aam
inc
cmp
js
fcoml
or
scas
fildll
push
xor
and
add
cmp
lahf
sti
mov
xor
xor
fbld
ja
push
loopne
repnz
mov
and
insl
test
rol
cwtl
into
in
dec
popf
xlat
mov
add
pop
sarl
sub
pop
test
adc
sbbl
lret
jnp
xor
xor
add
xor
cmp
sub
push
inc
jbe
movsb
dec
inc
cmp
icebp
adc
pop
mov
ds
lret
mov
sbb
leave
pminsw
outsb
lahf
imul
xor
cli
outsl
xchg
or
push
loop
aad
icebp
push
mov
insl
aas
sbb
pop
dec
loopne
cmpl
fs
movsl
xchg
or
push
insb
repz
push
jp
aas
and
mov
in
scas
insb
mov
pop
test
repz
mov
mov
pop
popf
out
jo
mov
test
jno
xor
inc
pop
jecxz
sub
addr16
mov
push
mov
mov
jle
mov
jge
rcrl
lds
mov
jp
popl
adc
or
sahf
or
shr
push
mov
data16
cwtl
mov
movsl
dec
xchg
inc
subl
sub
es
dec
shrl
js
addb
sbb
in
jle,pn
lods
sbb
imul
sbb
jge
mov
jns
cmp
jno
popa
inc
outsb
shrl
in
pop
rolb
inc
mov
testb
jnp
inc
cmp
jns
out
cmp
push
shrl
divl
jo
testl
int
and
mov
test
mov
xchg
jecxz
mov
pop
pop
mov
or
rcrl
cmp
out
sbb
xchg
rcll
mov
fildl
nop
in
pop
inc
cmp
movl
xlat
fwait
mov
xchg
dec
cs
in
mov
shlb
sbb
test
jb
outsl
push
lods
add
loopne
sbb
aaa
out
mov
stc
mov
cmpsl
idivl
adc
std
lods
jae
adc
dec
outsb
std
jecxz
loope
push
es
jmp
test
addr16
xor
lret
out
test
sbb
shlb
icebp
or
aas
sub
int3
mov
repz
fisubl
cmc
mov
les
icebp
ret
mov
push
pop
push
jge
xchg
mov
xlat
das
cmpsl
adc
pop
push
sbb
stc
orl
jecxz
xchg
jmp
push
int3
sub
faddl
shr
fstps
int
ljmp
pop
test
loope
jno
push
cli
data16
movsl
lret
cmp
inc
or
repz
fxtract
xor
aam
jmp
xchg
jmp
xchg
imul
scas
mov
dec
push
add
mov
hlt
jecxz
mov
xor
out
add
call
sahf
scas
push
scas
idiv
and
sub
push
outsl
rcrb
ficompl
push
jb
jae
lock
shrl
cmp
std
adc
inc
sbb
sbb
in
mov
jmp
inc
mov
jne
popf
jecxz
lret
jle
xor
shr
adc
sub
adc
inc
xchg
fwait
mov
clc
mov
stos
in
ret
mov
adc
xchg
jno
sahf
cltd
pusha
add
sub
fbld
sbb
adc
jns
cmc
adc
pop
push
decl
xchg
adc
lock
popf
dec
es
sarl
repnz
icebp
mov
jle
int
in
push
sub
lahf
push
mov
pop
dec
push
sbb
mov
cmpsb
cld
sti
lcall
pop
in
mov
add
mov
pop
pop
outsl
xchg
roll
jnp
dec
fldenv
fwait
adc
cmpsb
mov
in
mov
fucomip
cmp
aaa
dec
cmp
adc
pop
insl
mov
adc
cmp
in
call
mov
push
popf
or
std
stos
loop
jnp
sbb
xchg
sub
push
pop
xor
and
mov
mov
outsb
inc
add
es
sub
ret
ja
sub
dec
cmpb
mov
movsb
jmp
mov
out
int
inc
and
pop
mov
popf
icebp
pop
cwtl
mov
cmp
lcall
cmp
cs
fdivrl
mov
xchg
jl
jne
cmp
and
xor
cwtl
sub
mov
mov
xchg
mov
jno
jnp
lret
pop
jbe
or
cld
push
and
push
outsl
pop
add
ret
and
cli
lcall
add
loope
mov
out
arpl
mov
sub
jne
das
push
jle
xorl
lds
mov
sbb
inc
cmpb
stos
mov
addr16
arpl
shlb
je
push
dec
std
stos
xchg
dec
lcall
cmp
dec
pop
cmp
and
sbb
and
adc
out
pop
mov
dec
mov
and
add
shll
add
aad
cmp
jnp
pop
js
leave
int3
loop
enter
sub
fidivl
inc
dec
sahf
jge
imul
pop
hlt
scas
pop
idivl
push
into
cmpl
xlat
fcmovnu
icebp
in
pop
lcall
rcrb
xor
pop
test
sub
ucomiss
int3
pop
ljmp
test
and
or
int3
pop
jnp
aas
lods
aas
mul
cwtl
andl
mov
aas
in
lret
scas
mov
dec
and
jmp
in
test
fadds
xorb
xor
xchg
mov
loop
sub
xchg
jp
sti
mov
pop
push
aam
mov
in
int
jb
pop
adc
addl
xchg
jge
add
xchg
out
or
jmp
inc
incb
int
popf
popf
aam
mov
loope
dec
aam
popa
scas
dec
ds
add
push
je
test
mov
out
add
pop
ret
je
cmp
cmpb
pop
loop
addr16
push
out
pop
addr16
adc
sbb
xlat
clc
adc
sub
inc
mov
nop
int3
sbb
pop
sarl
gs
adc
hlt
add
sarl
jnp
dec
cmp
mov
adc
rcl
pop
push
jns
mov
mov
ret
addl
mov
and
out
nop
mov
das
js
add
scas
xchg
je
lcall
or
insl
mov
cwtl
insl
lcall
sarl
ds
scas
popa
out
sub
in
xor
out
std
xlat
pop
dec
loope
test
pusha
pop
add
inc
dec
sahf
hlt
loop
mov
dec
or
or
ds
out
in
loopne
mov
pop
sti
jmp
in
or
and
repz
push
sti
scas
pop
cmp
jge
jmp
xchg
aaa
push
imul
loope
jns
notb
cmpsb
daa
andb
cmc
mov
aam
in
pop
das
add
ljmp
push
lcall
int3
dec
stc
ret
stos
cs
mov
dec
sbb
andb
pop
jb
mov
xorb
adc
jmp
adc
xchg
mov
pop
js
in
inc
jbe
and
mov
push
je
mov
mov
rcl
lods
or
or
divb
cwtl
mov
and
pop
loop
ljmp
call
dec
jo,pt
setl
sbb
xlat
mov
inc
lods
jbe
inc
arpl
xor
jnp
jne
pop
jae
hlt
lret
rolb
push
iret
dec
aam
repnz
ds
jp
push
cmp
sub
ss
push
loopne
sbb
add
push
jno
paddb
pop
mov
movsl
repnz
popa
imul
mov
ja
dec
or
mov
mov
mov
mov
addb
dec
cmpsb
pop
test
cld
sub
std
xor
testb
adc
fcomps
bound
addr16
fimull
lret
clc
shll
sbb
mov
or
leave
lds
ficoml
fdivrs
outsl
ficompl
add
idiv
psllq
ds
mov
out
lahf
adc
dec
or
out
arpl
in
jns
fisubrs
inc
cmp
in
or
mov
out
stos
and
mov
fildl
jge
dec
mov
shll
mov
cmp
sub
inc
jl
sbb
and
inc
sbb
cltd
ret
pop
lcall
pop
shr
cwtl
mov
dec
jae
adc
test
mov
adc
cld
mov
ds
jecxz
mov
and
add
js
aaa
sbb
mov
dec
arpl
sub
or
inc
scas
sbb
cli
inc
lods
movsb
sub
fcoml
ds
push
pop
lea
ja
lea
dec
movsb
in
jmp
faddl
jle
not
adc
push
cwtl
scas
lods
stos
aas
add
cli
inc
je
jl
and
clc
sbb
cs
mov
mov
les
out
or
test
mov
sub
jns
dec
sbb
arpl
xorl
mov
push
xchg
repz
test
jle
fnstsw
ds
mov
xlat
scas
mov
sub
cmp
pop
add
repnz
andl
jl
lods
push
js
cs
fidivrl
mov
add
jo
inc
nop
sub
bound
add
adc
push
push
sub
std
xor
les
icebp
cs
xchg
inc
xor
xor
sub
ret
movsl
lods
enter
cli
xor
out
fisubs
out
adc
pcmpeqb
jne
cmp
frstor
test
dec
test
lock
dec
popa
icebp
add
sbb
xchg
aas
in
in
jecxz
xor
popf
lahf
hlt
mov
sti
neg
scas
mov
or
add
rolb
mov
out
cs
mov
xchg
adc
mov
jg
cmp
inc
sbb
add
or
bnd
pop
xchg
xor
and
fs
bound
int3
dec
push
test
scas
adc
sbb
pop
xchg
orl
dec
loopne
sbb
sub
mov
fildl
push
movntq
icebp
push
mov
cli
xchg
and
push
mov
sbb
mov
mov
mov
cmpsl
imul
fcoms
movsl
push
inc
mov
ljmp
repz
pop
jno
or
push
aaa
add
xchg
lods
mov
sbbb
jbe
xchg
lret
jl
adc
cmp
movsb
dec
clc
xchg
cld
in
mov
pop
ja
jmp
xchg
xor
pop
push
and
rcr
cmpsb
jns
arpl
xchg
clc
cs
test
mov
inc
xor
in
stos
repnz
loop
into
mov
fldcw
dec
nop
repnz
or
js
loop
test
fcompp
stos
loope
and
inc
jnp
lea
data16
outsl
pop
sub
aad
dec
negl
cmpsb
mov
jne
sbb
cmpsl
into
jecxz
and
push
inc
loop
mov
les
mov
es
and
pop
scas
and
jp
shlb
inc
imul
movq
mov
cmpsb
aas
insb
lret
cmp
sub
and
jbe
outsl
in
and
stos
dec
xor
test
loope
aam
in
insb
and
aaa
or
ljmp
loope
xchg
and
loop
test
inc
pusha
movsl
les
push
jbe
inc
jns
pop
and
int3
sbb
test
mov
insb
out
add
cli
mov
ret
out
inc
cmpsb
das
jne
lods
or
cmpsb
ds
aad
mov
adc
stos
loopne
dec
jmp
jmp
repz
cltd
loop
ret
or
sbb
and
notb
cmp
iret
ja
fldt
mov
cmc
cmp
cmp
push
sbb
jnp
pushf
fsub
je
imul
jb
pushf
pop
mov
sbb
pop
rcll
rcll
push
push
jp
sbb
shrl
adc
add
adc
mov
cmpb
fwait
movsl
ss
fsubr
add
pop
push
push
repz
cmp
icebp
mov
lods
stos
and
cmp
scas
in
dec
inc
leave
in
inc
push
add
rorb
outsb
dec
je
mov
xchg
cwtl
xor
mov
push
mov
mov
or
cmp
or
jle
inc
inc
int
jmp
pushaw
jge
cltd
outsb
rorl
xor
fidivs
decb
scas
inc
pop
jne
sub
addb
jmp
lea
frstor
cmpsb
andb
out
jns
sub
es
int
inc
cmp
sbb
mov
add
adc
push
movd
xchg
lods
sbb
cmpsb
jp
pop
mov
adc
dec
mov
shll
fiaddl
in
cltd
push
leave
mov
arpl
shrl
call
add
push
cmpsl
loope
cs
xor
sbb
shlb
pop
std
dec
test
sahf
jge
mov
lret
cmp
mov
sbb
daa
jo
into
add
sub
ljmp
inc
jle
movsl
mov
push
push
xchg
ds
pop
jb
repz
dec
fnstcw
dec
ljmp
aam
or
cmp
xchg
mov
in
sbb
jmp
pop
jmp
mov
shl
mov
sbb
das
call
sahf
push
cmp
call
inc
mov
inc
movsb
ljmp
cmp
dec
cmp
pop
add
push
inc
and
mov
mov
cmp
jg
scas
dec
xor
stc
sbb
test
in
stos
push
mov
cmp
push
sub
lgs
lcall
add
outsl
ror
pop
jo
test
iret
lcall
fimull
and
xor
fmulp
push
hlt
and
push
out
addl
lock
jmp
inc
test
pop
push
fidivs
lods
popaw
mov
jmp
sub
iret
pop
jmp
lret
jg
dec
mov
xor
jp
ficoml
and
test
sbb
fisubs
adc
sahf
mov
xor
sub
push
inc
fstps
test
and
shlb
push
mov
je
mov
test
sub
jb
scas
and
mov
jnp
push
loope
mov
push
adc
mov
les
cltd
mov
push
mov
stos
mov
mov
inc
repnz
xchg
cmpb
rcrb
sti
divb
dec
cmpsb
xchg
xchg
fisttpl
adc
sbb
enter
push
lods
sbb
sahf
cmp
cmpsl
subl
lods
push
xchg
outsl
or
fsts
mov
scas
inc
pop
pop
add
stc
into
push
lock
cwtl
shll
mov
ja
xchg
push
mov
out
cmc
or
xchg
nop
inc
test
arpl
push
bound
aad
into
test
aad
repnz
or
flds
je
jl
mov
test
ret
sbbl
imul
fbld
mov
mov
cli
icebp
jo
mov
bndldx
pop
push
subl
jle
aas
fistpl
and
shr
loop
je
xchg
mov
sub
sahf
inc
out
dec
mov
sahf
andl
jecxz
add
cmp
das
push
out
add
jp
sbb
push
dec
mov
sub
sbb
fcomps
arpl
pop
cwtl
and
popl
cmp
dec
pop
lock
dec
pop
dec
in
fstl
mov
and
scas
in
push
add
mov
movsl
and
mov
push
sub
lret
sbb
cmp
cmp
inc
loope
and
shr
sub
mull
repnz
rorb
lcall
inc
sub
rcl
add
lret
loop
lds
cld
mov
jns
dec
mov
inc
cwtl
std
lods
jmp
dec
iret
sbb
movsl
dec
lahf
pop
jp
lock
les
aaa
ljmp
scas
cmc
xor
sahf
lret
xor
jnp
push
movsb
pop
fmull
jb
add
outsb
mov
inc
dec
in
shl
arpl
mov
pop
fnstenv
arpl
mov
dec
mov
ret
icebp
inc
int3
cmp
mov
jl
cmp
not
ret
pop
dec
shl
xchg
shr
dec
jmp
cltd
push
adc
std
ret
xchg
addb
das
push
mov
xchg
sahf
inc
mov
rcrl
jno
mov
loop
outsb
jg,pn
fisttpll
imul
cmp
fstl
mov
into
inc
ss
fcmovu
fs
cmp
mov
es
inc
aas
sub
xor
test
inc
pop
add
lahf
bound
and
sbb
jae
cmp
mov
lret
cli
lret
cmpsl
inc
adc
fcompl
add
movsl
inc
xchg
out
call
mov
shrb
in
jne
push
rorb
jne
ret
ret
pop
pop
int3
repnz
loop
js
in
ljmp
cmpl
xchg
push
shll
ja
sbb
cmp
aaa
daa
pop
pop
loopne
mov
and
inc
pop
push
add
and
inc
sub
pop
dec
push
cmpsl
adc
mov
int3
add
push
mov
rorb
pop
mov
inc
sahf
aad
jbe
and
and
in
aas
les
cmp
insb
int3
scas
adc
cli
lret
push
out
addr16
sub
in
out
pop
cmp
js
inc
sbbl
push
pop
nop
inc
mov
dec
sahf
mov
jbe
rcr
scas
jno
jl
jp
sub
scas
mov
xor
fs
insb
lods
or
or
repz
in
fiadds
repnz
sbb
adc
push
xorb
testb
cmpsl
fcoml
stos
or
mov
inc
xchg
inc
xchg
xor
pushf
imul
mov
mov
sahf
add
xor
mov
dec
cmpsb
bound
mov
out
pop
push
or
mov
xchg
enter
int
adc
scas
push
mov
hlt
or
xchg
inc
loop
out
scas
dec
or
movsb
mov
jns
mov
or
xchg
stc
repnz
dec
add
movsb
push
mov
mov
xor
cmp
mov
pop
fs
enter
mov
cmp
imul
inc
pop
mov
mov
loope
jno
cmp
or
xchg
adc
xor
dec
mov
dec
cs
dec
fwait
addr16
ficoms
jae
dec
paddb
sbb
cmc
lods
pop
mov
movd
jae
loop
mov
xor
push
pop
lea
lahf
push
sub
leave
leave
popf
ljmp
lock
ljmp
dec
fsubrs
push
add
mov
and
sub
ficoml
push
cmc
mov
pop
jmp
les
cwtl
test
jg
adc
loop
cmp
cld
in
add
rorb
add
pushf
sbb
clc
push
xchg
jnp
inc
iret
popf
add
and
outsl
fisubl
orl
ret
sbb
icebp
inc
fisubrs
push
and
sar
orl
iret
cmp
les
popf
sbb
and
sahf
mov
out
cmc
imull
push
sbb
sbb
daa
mov
push
cwtl
aaa
xchg
outsb
stos
fidivs
add
inc
push
insl
stos
and
add
xchg
push
dec
xchg
mov
xor
jecxz
add
push
cmp
and
adc
adc
add
cmpb
fiaddl
mov
mov
mov
xchg
inc
fucomip
imul
adc
ljmp
jl
punpcklbw
add
fldt
jo
aaa
jl
dec
mov
xchg
jb
xor
scas
les
dec
xor
cltd
imul
cwtl
nop
pop
add
pop
xor
xor
fidivrs
add
insb
mov
jmp
aam
and
push
sbb
xor
pushl
inc
dec
out
push
lods
cmpsl
es
jno
xor
into
sbb
push
jnp
cld
pop
and
popf
push
lret
loop
mov
or
pop
fstl
cvtps2pd
mov
inc
push
xchg
fmul
imul
dec
lahf
sbb
mov
ss
cld
push
push
outsb
lds
push
lods
xchg
or
lahf
pop
andb
icebp
mov
sub
lods
pusha
mov
fidivl
adc
ljmp
das
rcrb
mov
inc
aam
fsts
mov
aad
outsl
pop
insl
push
das
out
subb
pop
mov
movsl
sbb
mov
icebp
adc
sub
sbb
stc
roll
inc
push
mov
xchg
gs
out
dec
push
push
xor
sahf
jp
test
xchg
into
and
popf
divl
rcrw
add
adc
hlt
xchg
sub
jp
adc
push
cli
leave
add
pusha
les
out
in
out
fcoms
push
xor
pop
test
aaa
xor
scas
add
mov
xchg
mov
into
or
push
xchg
xor
xor
jl
sbb
adcl
dec
cli
jge
sub
icebp
push
lcall
jl
enter
add
jnp
jle
nop
dec
imul
movsl
rcl
xchg
sbb
lds
jns
push
sub
dec
jecxz
xor
xchg
lods
je
xor
jp
pop
pop
fidivrl
xchg
int3
push
cmpsb
enter
mov
cmp
stos
mov
int
xchg
loop
adc
adcb
mov
mov
push
lds
popa
ficoms
pop
enter
sub
xchg
sub
fwait
bound
add
mov
jl
mov
sbb
hlt
out
and
xchg
mov
pop
push
xchg
mov
jle
cmc
xchg
repnz
scas
imul
mov
ss
pop
orb
cmpsl
popa
mov
jg
rorb
jecxz
into
movsl
shl
clc
adc
arpl
sub
les
push
push
and
xchg
mov
jp
subb
xorl
sahf
gs
add
push
fwait
dec
sub
es
pop
rcrl
mov
jge
call
pop
cld
and
addr16
es
or
lea
mov
sbb
pop
in
xor
sbb
push
push
movsl
mov
out
mov
insl
idivl
inc
pop
shl
xor
mov
sti
lock
fistpl
sbb
sub
ret
or
dec
or
pushf
fcompl
shrl
mov
mov
push
mov
push
xor
or
fnsave
push
pop
pop
mov
mov
inc
mov
xor
aad
or
and
loope
push
and
push
popa
popf
mov
cmp
fistpll
fs
push
arpl
or
ds
out
push
xchg
dec
inc
addb
or
pop
jnp
push
jo
fadds
mov
movsb
jl
mov
and
inc
comiss
int3
xor
test
or
js
int3
xchg
dec
and
pop
movsl
jo
adc
jbe
add
pop
test
leave
out
add
out
cli
xor
sbb
pop
insl
or
stc
xor
add
pop
sbb
mov
push
pop
xchg
jb
mov
adc
mov
xchg
call
jmp
inc
je
fs
add
xor
or
pop
xchg
ret
mov
sti
jge
cmp
enter
les
dec
jno
adc
adc
ror
mov
inc
fcmovnbe
loope
pop
subb
aas
hlt
out
mov
fs
pop
scas
je
and
mov
call
in
or
jmp
pop
sbb
mul
loope
loope
cmc
incb
fisubrl
mov
lods
andl
add
stc
scas
lea
or
js
gs
lods
iret
dec
mulb
pop
mov
hlt
xor
sub
clc
jns
adc
sarb
lods
dec
popa
lock
setb
hlt
repz
pop
inc
sbb
movsb
and
lret
cli
sbbl
mov
hlt
jbe
xchg
cli
mov
pop
leave
cmc
jnp
outsb
or
cmpl
jnp
xchg
lds
jecxz
inc
sub
dec
gs
repz
loope
xor
add
cs
gs
loopne
int3
imul
loopne
ret
lods
ljmp
scas
jns
xchg
int3
add
xor
and
pushf
cmp
outsl
ja
in
xor
sub
sbb
and
fdivl
or
and
cmp
jne
push
in
xlat
or
jb
ja
mov
mov
push
fs
loop
sbb
mov
mov
nop
aas
popa
jnp
negb
push
xor
test
dec
pop
add
rcr
into
fidivrl
outsb
push
clc
daa
jmp
push
dec
es
nop
sbb
mov
cmp
xchg
lock
add
push
jmp
xchg
pop
mov
push
push
mov
sub
rolb
xor
in
enter
mov
loopne
aas
rclb
fstpt
sbb
mov
cmp
js
andl
push
inc
mov
lcall
and
scas
je
mov
sbb
xchg
mov
andw
dec
adc
jle
or
mov
cmp
adc
lods
test
push
in
pop
lret
divb
xor
pop
lcall
in
lcall
cmc
and
or
mov
jp
ljmp
jle
adc
roll
or
jmp
cmp
sbb
testb
and
adc
movsb
mov
imul
and
pop
aas
pop
out
mov
fldcw
mov
jmp
dec
mov
xchg
xor
repnz
dec
jno
adc
jae
cmp
pushl
jp
pop
sbb
dec
rcrl
aad
mov
cmpsl
and
aam
cli
sbb
push
mov
jno,pn
stos
dec
adc
pop
js
add
shrb
inc
movsl
xchg
das
inc
popl
cmp
mov
mov
aaa
scas
push
xor
cmp
dec
popa
fnstcw
inc
cmp
pushf
int
jp
inc
dec
cmpsb
in
mov
mov
xlat
cld
or
jns
popf
stc
int3
popa
subb
and
enter
inc
mov
dec
pop
ficoms
shrb
fcoms
mov
cmp
adc
out
scas
mov
test
jmp
ja
pop
jmp
dec
or
mov
ficompl
pcmpeqw
es
nop
jne
add
dec
xchg
jle
adc
and
adc
adc
mov
sub
fmull
and
mov
mov
das
in
roll
mov
insl
inc
pop
mov
and
jbe
cli
xchg
outsb
mov
lcall
or
loope
sbb
movsb
into
add
inc
aas
xchg
add
repz
mov
xor
mov
fldl
scas
mov
adc
adc
std
mov
xlat
arpl
inc
xor
sub
dec
mov
lods
ds
and
pop
dec
lods
mov
aam
and
mov
cwtl
xor
add
sub
popf
cmp
push
sarl
mov
jle
push
inc
sbb
mov
incb
and
xchg
out
mov
mov
pop
cmp
cwtl
lcall
sub
jmp
out
sbb
sbb
fidivl
mov
lcall
inc
mov
add
push
jg
mov
and
scas
test
stc
add
lahf
scas
cmpsb
mov
jle
test
dec
popa
dec
leave
aad
outsl
scas
dec
cmp
fisttps
mov
mov
push
inc
jo
sbb
xor
cmpsb
or
and
mov
jecxz
rcll
mov
sub
sbb
repnz
in
inc
outsl
sbb
lea
es
mov
rorl
adc
arpl
jb
push
xchg
sub
and
push
add
push
add
imul
xchg
roll
hlt
or
jecxz
cmp
mov
iret
lds
lods
mov
sub
test
adc
xchg
inc
rcrl
lcall
mov
push
mov
into
and
pop
xchg
daa
sub
je
sbb
out
cltd
fimull
icebp
fnsave
mov
pop
push
int
and
outsl
push
dec
mov
lods
jnp
pop
leave
pop
push
mov
mov
ja
push
xchg
mov
loope
into
lret
mov
xlat
je
insl
shrb
test
dec
mov
andl
dec
sub
push
popf
aas
sub
outsl
add
mov
in
mov
xor
aad
mov
fistl
rcr
pusha
aam
mov
cs
aaa
insl
mov
insl
add
out
lock
inc
dec
cld
pushf
pop
cmpsl
mov
and
cmpsl
dec
sarl
ret
jmp
sbb
inc
out
push
jbe
mov
dec
cmp
sbb
adc
dec
int3
ss
inc
imul
icebp
pop
fadds
mov
xlat
test
scas
lods
fldl
dec
insl
ds
and
pop
test
jecxz
lret
ret
add
cmpsl
add
icebp
xchg
rclb
dec
pop
enter
es
shlb
dec
pop
adc
or
or
push
push
aas
push
inc
mov
sub
jle
jmp
dec
pop
ret
xor
lock
imul
adc
add
scas
lock
ds
adc
idivl
popa
je
add
divb
ffree
cltd
test
inc
xor
push
scas
xor
sarl
in
pop
data16
dec
data16
jb
or
or
in
out
adc
mov
pop
pop
movsb
lods
push
sub
fildll
inc
inc
scas
in
add
push
lahf
shl
sbb
cs
mov
cmp
inc
push
not
push
scas
andl
call
pop
cwtl
sbb
mov
cmp
test
and
pop
mov
mov
aas
dec
adc
ja
jle
lock
faddl
sub
sbb
push
cs
aad
into
cld
mov
pop
jne
aas
add
dec
jb
sti
adc
sbbb
test
movsb
stos
xor
jg
in
mov
mov
cmp
outsb
mov
pop
arpl
add
jno
mulb
add
jnp
adc
sti
insb
mov
xchg
mov
sub
pushf
es
sub
xchg
lods
jge
les
xchg
mov
ja
and
daa
pop
inc
pop
cs
pop
sub
lret
lods
sub
and
pop
ljmp
xchg
pop
ja
add
cmp
repz
dec
and
out
mov
popa
inc
movsl
cs
outsb
leave
mov
push
int3
outsl
bound
out
es
orl
jl
pop
test
adc
mov
addl
cmp
push
mov
cmp
fidivrl
out
xchg
jl
lcall
mov
bound
insl
fstpt
push
lock
push
adc
dec
movsb
and
inc
xorl
lods
orb
scas
cmp
cwtl
inc
or
hlt
mov
rorb
ret
mov
test
jp
xor
out
jg
lcall
adc
dec
insb
xchg
cmp
ret
add
leave
lcall
xchg
add
scas
push
jmp
cmc
mov
cmc
adc
cli
add
adc
ja
cs
arpl
push
add
in
inc
push
out
push
mov
dec
xor
roll
xchg
stos
std
lea
pop
mov
and
sbb
in
and
sti
dec
movsl
jne
jmp
cs
movl
cmpsb
xchg
sbb
das
xor
imul
adc
lcall
xchg
mov
shr
andl
push
and
cmp
mov
inc
pop
daa
xchg
std
cmpsb
pop
jle
push
and
inc
or
xor
mov
sbb
mov
xor
or
lock
in
xchg
mov
aad
cmp
test
into
push
leave
xchg
mov
sub
test
test
cmp
hlt
adc
out
mov
movsl
mov
push
incb
push
ljmp
cs
cltd
mov
jb
and
push
mov
lcall
mov
jmp
sub
das
cli
pop
insb
insl
mov
xlat
jno
jmp
mov
out
insb
push
mov
xor
or
pop
dec
lcall
inc
cmp
outsl
scas
push
cmp
push
mov
dec
and
add
out
dec
or
inc
insb
ficoms
or
roll
and
lea
scas
cltd
arpl
xor
or
sub
movsb
leave
aas
sbb
mov
gs
stos
pop
adc
ss
lods
and
dec
mov
loop
add
pushf
loopne
lock
gs
ja
add
xchg
inc
insl
lahf
ljmp
iret
mov
add
add
jmp
dec
imul
lds
ret
addl
ficoml
dec
mov
jb
and
loope
mov
and
scas
testb
dec
in
lea
dec
test
loopne
or
push
loopne
andb
adc
pop
mov
and
mov
jbe
mov
div
xchg
daa
mov
lods
mov
cmp
or
pop
js
aam
lock
push
fwait
call
std
out
sbb
xchg
xchg
adc
and
xchg
adc
sbb
popa
lret
jl
push
arpl
xlat
xchg
mov
cmpsb
adc
sbb
push
or
shlb
icebp
xchg
add
in
scas
dec
mov
and
add
js
fs
mov
sub
dec
sbb
mulb
jle
int
inc
adc
test
mov
hlt
sub
xorb
xor
fnstsw
aas
and
mov
and
and
xorb
sbb
push
in
subb
sti
mov
stc
dec
jne
jle
imul
in
xchg
movsb
jne
pop
clc
pop
and
mov
push
cld
inc
xchg
mov
add
push
loopne
popa
xchg
cs
and
flds
fwait
cs
xchg
sub
sbb
out
adc
inc
adc
inc
ds
iret
in
pop
repnz
mov
push
mov
lods
fnstcw
es
cmpsb
bound
pop
fcompl
cmc
add
imul
iret
mov
imull
decb
mov
aas
loopne
mov
imul
or
dec
outsl
mov
repz
aaa
sub
scas
lahf
mov
divb
ds
jl
xor
and
bound
div
repnz
outsb
adc
imul
dec
inc
shlb
add
inc
mov
call
pop
pcmpeqb
jg
sahf
ret
or
cmp
outsl
inc
jb
stos
mov
lcall
bound
push
stos
dec
ficomps
repz
out
mov
data16
cmp
sub
into
push
inc
xor
jnp
js
push
popa
sub
repnz
sti
out
inc
pushf
dec
xor
fisttpll
or
adc
adc
data16
mov
jno
lret
jnp
push
popf
aaa
gs
mov
xor
rolb
add
jns
out
mov
incb
jbe
xchg
fisubl
adc
cs
movl
cld
push
cmp
mov
addb
pushl
arpl
add
jg
jno
xchg
daa
push
jae
xchg
mov
sub
mov
rol
push
adc
lret
int
pop
fs
sub
add
lds
push
testl
outsb
into
dec
push
mov
aaa
pop
adc
inc
ds
pop
outsb
xor
and
cmc
loop
pop
lcall
pop
dec
pop
adc
movsl
ljmp
sub
inc
add
js
fs
ljmp
xor
pop
fcmovu
insb
sbb
xchg
push
mov
stc
fsubl
xchg
sub
wbinvd
xor
adc
out
cmp
rcll
icebp
sub
ss
ja
gs
add
mov
xor
pusha
movsl
sbb
nopl
scas
std
stos
push
gs
sub
push
ret
xor
inc
fstps
fadd
repnz
repz
push
sub
into
cli
dec
push
push
scas
aam
cli
fsts
or
adc
jle
sbb
imul
stos
aaa
mov
mov
cs
test
dec
pop
sub
and
adc
jb
lds
popf
fcmovb
or
iret
push
jg
cmp
jp
cmpsb
movsl
pop
dec
test
loopne
and
imul
dec
jmp
dec
je
push
gs
jo
mov
push
and
mov
icebp
fidivrs
aas
hlt
jae
fs
and
dec
mov
loopne
pushf
insb
ret
lea
push
enter
jae
xor
sti
xor
movsl
cmp
xor
testl
mov
xchg
insl
fdivs
lock
fstp
pop
into
rol
add
sub
arpl
inc
xchg
add
popf
movsl
je
rcrl
lds
shrl
push
shr
call
add
inc
lret
cmp
mov
imul
mov
fbld
jl
inc
sbb
fisttpll
rclb
mov
icebp
adc
aas
es
xor
xor
sub
xor
icebp
cmp
adc
or
xchg
adcl
rol
enter
adc
fiadds
gs
stos
shlb
clc
test
adc
cmp
mov
sbb
and
push
das
ror
inc
cmpsb
dec
sbb
dec
mov
jecxz
out
push
cmp
sahf
inc
roll
loope
rorb
jb
mov
or
xchg
sbb
lds
sbb
and
jecxz
std
add
lret
in
ret
rcr
mov
scas
pop
in
inc
jg
adcl
popa
pop
insl
mov
and
test
shlb
mov
push
adcb
fs
cs
xchg
out
repnz
shlb
sbb
lock
cs
xor
or
repnz
imul
aam
ss
jecxz
negl
repnz
loopne
lea
faddl
jb
enter
data16
mov
jb
in
cmc
adc
fst
mov
mov
cmp
sub
mov
ljmp
xchg
mov
push
cld
cmp
xor
fwait
pusha
cli
arpl
adc
mov
rcr
inc
pop
pop
mov
lahf
daa
dec
push
sbb
je
pop
rorl
adcl
mov
inc
jge
or
xchg
lcall
pop
add
fnsave
push
ljmp
sbb
loop
sahf
es
mov
push
and
fdivs
inc
push
imul
lds
hlt
xor
cmp
ds
and
daa
cmp
push
sub
or
xchg
aad
call
sahf
scas
sbb
test
push
stos
fcmovnu
pop
push
push
push
xlat
fcompp
mov
fcompl
out
inc
stc
outsl
ret
imul
cmp
inc
cltd
mov
jl
in
sahf
imul
add
add
fnstsw
cmp
lods
imul
aad
rol
out
or
insl
add
mov
push
mov
and
jae
sub
js
inc
lahf
add
sub
inc
add
ljmp
shr
cmp
loopne
pop
inc
in
out
gs
mov
int3
negb
adc
out
repz
jb
xchg
jge
fstpl
rcr
aad
push
xchg
mov
nop
fistps
insb
xchg
ret
into
repnz
mov
subb
pushf
mov
stos
xor
push
pop
lret
ret
pop
jl
das
xor
out
xchg
test
jae
push
std
ret
add
push
cmp
repz
jl
dec
xchg
aad
sbb
and
scas
fs
ljmp
roll
jns
push
lcall
ret
and
mov
arpl
jnp
mov
test
xchg
and
into
sub
jae
or
pop
scas
add
mov
push
adc
or
jbe
sub
ljmp
push
jp
jp
arpl
fmull
xor
pop
xor
xchg
in
mov
sahf
mov
or
sahf
inc
movsb
xor
dec
push
notb
cmp
mov
jg
add
call
jbe
sahf
or
add
inc
push
mov
add
inc
cmp
xor
or
sub
sarb
pop
fistpl
test
aas
push
inc
inc
cmp
jge
out
mov
push
pop
mov
fwait
iret
cltd
xchg
fcompl
mov
dec
sub
ror
mov
mov
lret
fwait
sub
shll
fildl
fcmovnbe
outsb
aaa
lea
mov
adc
ja
repnz
inc
rcrl
aas
arpl
lds
cs
in
mov
dec
faddl
push
in
xor
leave
push
aas
popa
push
idivl
sarl
push
loop
add
mov
sbb
scas
xor
pop
gs
int3
movsl
jg
cmpsl
bound
aam
loope
dec
icebp
lahf
xchg
jle
pop
mov
adc
push
scas
xchg
cmc
stos
xchg
fwait
pop
int
xchg
cmpsb
jmp
push
stc
outsb
push
data16
xchg
and
fucom
mov
or
cmpsb
shr
mov
repnz
and
dec
xor
and
addr16
outsl
lock
xor
sbb
out
rolb
jecxz
jle
sbb
dec
insb
loopne
sahf
xchg
xor
faddl
in
test
mov
aad
andb
add
notl
sub
ret
add
std
xor
lock
loopne
dec
inc
ss
enter
jge
test
ret
sbb
lcall
movsl
aas
ss
pop
in
bound
push
in
leave
mov
cltd
and
cmpsl
pop
cltd
inc
push
pop
jne,pt
ret
icebp
aaa
sbbl
std
add
mov
jmp
pop
mov
push
leave
sbb
mov
roll
jb
cld
dec
arpl
sahf
out
pop
mov
cs
inc
icebp
adc
cmp
test
mov
ljmp
daa
sbb
arpl
xchg
lods
outsl
xlat
xchg
add
jbe
ds
sub
adc
ds
jmp
out
jb
in
xor
sbb
pusha
pop
call
stc
je
bnd
jge
lods
jecxz
movsl
and
mov
repz
stc
or
leave
jb
lret
dec
fidivs
shlb
fs
add
xchg
popa
adc
mov
mov
mov
or
mov
leave
push
addl
cltd
push
pop
lods
dec
sbb
clc
or
rorb
stc
rclb
loopne
sub
sbb
mov
pop
jge
xor
push
sub
test
pop
sbb
cwtl
push
insl
xchg
call
pop
lock
jo
in
clc
jnp
sar
loope
mov
adc
pop
insl
or
sbbl
loopne
pop
rclb
les
incl
repz
xchg
hlt
neg
imul
and
mov
lock
arpl
imul
xchg
fisttpl
ljmp
test
es
out
enter
gs
loop
push
fs
jle
ret
stos
push
iret
dec
in
popa
or
mov
xor
mov
lahf
into
lcall
sbb
push
aam
cmc
lret
or
cld
sub
mov
addr16
lods
sbb
pusha
imul
sbb
jnp
add
je
and
outsb
mov
lcall
in
mov
mov
sub
push
cmp
push
loope
cmp
mov
lcall
cmc
sti
mov
out
sub
in
push
cld
fcomps
ss
mov
pop
in
jmp
nop
jg
mov
push
fbld
mov
mov
ss
pop
and
mov
jbe
lahf
push
pop
mov
hlt
push
push
icebp
std
popf
loop
pop
push
jo
pop
inc
pop
dec
test
or
mov
pushf
lods
fmuls
xchg
dec
xor
cwtl
stc
add
in
lock
push
in
pop
and
popf
cmp
adc
decb
push
inc
adc
out
ret
xor
test
mov
sub
sti
cmp
mov
xor
push
xchg
jbe
cmc
push
ljmp
push
outsb
jno
lods
popf
mov
add
dec
les
pop
and
dec
push
fildll
shlb
outsl
nop
iret
mov
xor
dec
cld
or
xchg
jo
push
push
jmp
jp
cmp
test
sub
fisubrs
lcall
xchg
roll
std
adc
es
mov
fadds
or
inc
sbb
push
add
and
mov
outsb
dec
es
je
sbb
aas
and
mov
gs
fwait
aas
cmp
inc
pop
jmp
hlt
movd
mov
test
inc
and
inc
into
push
scas
jns
cmp
bound
dec
push
cwtl
repnz
mov
xchg
cmp
sbb
pop
dec
mov
leave
jae
test
fadds
std
dec
dec
mov
fidivrl
cmpl
fld
sub
inc
das
mov
cmp
sub
psubsb
push
xchg
fadds
xor
adc
outsl
in
outsb
jae
lahf
dec
pop
insb
mov
push
sub
std
repz
add
sahf
adc
lret
loop
fsubrs
repnz
sbb
pop
ret
pop
add
and
addb
pop
in
ret
cmpsb
popf
push
pop
stos
jge
stos
push
sub
or
ljmp
test
push
out
call
inc
in
pop
sbb
sbb
xor
imul
inc
sbb
ljmp
sbb
popa
out
cmpsl
sahf
pop
enter
int
into
add
add
jbe
in
and
sbb
lock
jb
subl
subb
out
xor
lret
imul
mov
mov
sarl
pop
pop
ljmp
dec
jl
mov
ja
rcrb
bound
mov
push
mov
mov
fistps
scas
roll
and
int3
popa
jne
mov
jno
stc
outsl
adc
adc
mov
xor
jmp
fmull
inc
inc
mov
imulb
push
lods
and
mov
push
push
fmuls
xchg
ss
lcall
sub
push
andl
stc
stc
icebp
add
fcomp
xor
jmp
out
sbb
pop
sbb
fstpt
ror
icebp
add
jp
or
push
sbb
lea
and
dec
lea
adc
adc
fisttpll
mov
push
jo
and
jle
lcall
enter
pop
cmp
cmp
or
subb
sarl
lds
rclb
insl
add
movsl
inc
dec
or
jae
inc
decb
aad
xor
push
inc
sbb
insl
cmp
cmp
int
dec
aaa
cmpl
xor
fisubl
push
lret
dec
cmpsb
push
jle
cmp
das
xor
ficompl
cwtl
sub
xor
or
pusha
sub
dec
push
mov
add
and
shl
cmpsl
test
inc
xor
ret
mov
inc
and
mov
or
adc
call
or
sub
xor
mov
cmp
dec
mov
fldenv
push
sub
stc
pop
xor
pop
repz
jg
and
test
pop
pushf
int
dec
dec
inc
rcll
fwait
inc
pop
xor
jmp
hlt
movsb
rol
je
ljmp
pop
jp
pop
sbbl
mov
dec
push
fwait
add
xchg
loope
icebp
pop
mulps
loopne
leave
loope
sub
mov
notl
jle
sbb
adc
jo
dec
cld
adc
clc
aam
mov
pop
dec
cmpl
jbe
scas
test
lret
ss
outsl
addl
loop
das
pop
jle
stos
sbb
scas
or
fsubs
dec
gs
xchg
adc
xchg
and
pop
adc
popa
mov
scas
decb
lods
push
pop
or
pop
test
je
dec
mov
jb
xchg
jle
sbb
std
fwait
rcl
nop
pop
shl
ds
outsb
xor
mov
cmc
dec
and
testb
lock
xor
jne
push
mov
bound
pop
pop
xor
popa
clc
pop
xor
xchg
inc
stc
daa
mov
mov
mov
or
pop
push
sub
sbb
jmp
lods
pushf
jge
ljmp
xor
xor
pop
hlt
xor
or
lods
mov
daa
ja
or
xchg
scas
lds
addr16
icebp
pop
dec
mov
push
int3
outsb
add
dec
add
push
jmp
cmp
lret
push
jnp
sub
outsl
and
mov
jo
adc
add
popa
lret
mov
pop
out
dec
xor
push
mov
push
inc
lcall
aaa
sbb
jmp
lret
imul
aaa
rolb
in
imul
mov
jo
scas
test
jae
in
mov
or
jns
add
and
or
push
mov
xchg
loop
inc
adc
sub
cs
mov
das
mov
mov
shll
movsl
arpl
push
je
xchg
dec
xor
cltd
sbb
fidivrs
xchg
loop
outsl
pop
jp
xor
mov
pop
adc
inc
xor
lods
xor
js
cltd
dec
and
mov
testl
add
mov
xchg
add
mov
push
xor
jl
jmp
jle
adc
pop
aas
xchg
stos
add
mov
push
in
inc
pop
nop
shr
xor
call
jg
pop
rcll
lea
in
xor
jle
mov
push
jmp
mov
cmp
mov
add
decb
outsb
fldcw
and
mov
inc
mov
inc
ja
and
add
in
mov
push
mov
outsb
imul
mov
lea
ret
roll
aas
fadds
mov
test
popa
dec
cmpsl
mov
aam
or
out
xchg
sub
and
loope
mov
repnz
popa
cmpl
mov
in
notl
gs
mov
pop
add
out
jmp
stc
pop
jg
stc
sub
jnp
stc
xor
push
xchg
or
push
xor
movsb
mov
ss
subb
push
mov
mov
icebp
jne
pop
icebp
je
push
out
or
aad
mov
xchg
hlt
loop
int3
dec
in
inc
mov
insb
test
xor
addl
insb
int3
icebp
into
sub
xor
inc
cmp
add
push
sbb
dec
xorl
fbld
ja
add
mov
pop
cmc
cmpsl
jne
push
xor
push
mov
stos
sbb
scas
xor
jmp
adc
shrl
test
inc
jne
lahf
pop
pop
jl
int3
cmp
inc
hlt
ret
jo
sbb
jecxz
imul
dec
lods
sbb
scas
ds
pop
stc
sbb
pushf
adc
cmp
fidivrs
mov
sub
dec
pop
ss
mov
lock
call
xor
add
inc
pushf
out
jno
and
and
adc
mov
add
push
lods
push
aas
adcl
add
jns
in
pop
inc
jbe
inc
and
rclb
inc
idivb
dec
int3
sbb
adc
dec
jns
call
nop
lahf
sub
test
add
ror
pop
cmpsl
loope
gs
xchg
pop
testb
in
lret
cwtl
jecxz
cmp
pop
test
filds
das
test
pop
sub
adc
xor
test
pushf
repnz
mov
add
xchg
sub
gs
out
scas
sbb
xlat
loope
jns
ss
dec
and
jne
jl
outsb
push
pop
popf
fnstenv
scas
mov
add
cmc
pop
sbb
jg
mov
mov
add
ss
xor
pop
or
mov
shlb
inc
jno
loop
push
jns
jo
inc
dec
movsb
hlt
jmp
out
mov
int3
cmc
xchg
pextrw
xor
fstl
clc
sbb
pop
addr16
pop
mov
push
xor
lock
and
popf
and
sub
out
sahf
cmp
xchg
mov
icebp
lea
pop
lods
xrelease
mov
addr16
jne
dec
rcrl
inc
outsb
sub
sub
in
ror
jle
push
sub
xor
or
dec
push
push
in
iret
in
xor
fs
adc
out
out
fldenv
dec
sbb
mov
xlat
cld
mov
imul
mov
jmp
mov
push
test
ficomps
popf
rcrl
xor
bound
sub
xor
repz
fwait
xchg
movsl
sarl
fs
add
fsts
leave
sbbb
push
jo
jne
stos
cmp
out
adc
cli
outsb
xchg
stc
cmp
xchg
leave
push
push
cmp
mov
ror
sarl
mov
es
mov
das
push
stos
cltd
nop
push
inc
mov
inc
xor
or
divb
stos
fcompl
pop
fs
mov
icebp
mov
scas
scas
sbb
mov
sahf
cld
jb
mov
pop
in
mov
adc
push
mov
dec
sbbb
pop
and
movsb
in
outsb
jg
add
adc
mov
jne
pop
cmp
add
cmp
sbb
adc
test
lret
rorl
or
xchg
pop
mov
inc
mov
xchg
cli
les
adcb
sub
cmp
mov
stc
in
lock
insb
mov
adc
cmpsb
insl
push
sub
mov
arpl
cmp
lds
xchg
sti
push
add
ss
and
or
cmp
cmpl
dec
iret
cmc
adc
test
dec
shrl
stos
ret
inc
pusha
adc
fnstenv
rcrl
inc
int3
out
push
or
daa
and
mov
test
mov
and
insb
stc
js
jae
mov
inc
push
adc
ja
pushf
pop
icebp
add
sbb
out
push
push
xchg
add
mov
fwait
cld
dec
sub
mov
mov
jb
push
es
loope
dec
jns
cltd
adc
dec
data16
rcrb
mov
cli
sti
cmpsb
push
repnz
adc
and
je
push
mov
adc
adc
insl
sub
int3
mov
pop
xlat
sub
orl
push
mov
rcll
idiv
jns
out
xlat
dec
inc
adc
add
mov
and
jbe
push
inc
mov
cmp
cmpsl
sbb
pop
fisttpl
inc
mov
popa
lret
loopne
pop
jae
hlt
out
stc
mov
fdivrs
mov
or
dec
dec
jae
int
sub
ljmp
pop
pop
add
xchg
jnp
mov
out
or
mov
rcl
pop
test
or
push
hlt
rclb
insl
mov
mov
shll
es
call
inc
in
pusha
loopne
rclb
in
hlt
into
push
xchg
mov
or
inc
test
aad
xor
inc
in
out
popf
mov
dec
mov
cmpsl
data16
pop
push
mov
int
das
pusha
mov
dec
mov
pusha
push
nop
or
jl
add
fbstp
jp
rorb
pop
fcoml
xor
xor
leave
mul
nop
pop
cmpsb
add
cmc
xlat
push
adc
xchg
insl
ret
lcall
inc
or
rorl
repnz
xchg
fsubs
xor
push
int3
ror
iret
mov
dec
inc
fucom
cld
or
mov
je
mov
jo
loop
xor
out
pop
cwtl
int3
mov
xchg
mov
leave
dec
idivl
fcoms
inc
mov
icebp
push
loope
push
loope
pop
fsubs
fs
push
divb
or
mov
mov
stc
rolb
pop
push
xor
popa
mulb
push
call
xchg
pop
mov
divb
test
outsl
pop
iret
jno
mov
outsl
cmp
lea
pop
pop
xor
dec
fistpll
xor
daa
mov
sti
test
hlt
pushl
in
mov
mov
inc
gs
rorl
inc
pop
sub
in
mov
and
sbb
and
fcompl
mov
or
cmp
xor
push
cld
jg
cmp
or
push
dec
es
inc
popf
xor
aas
imul
cs
es
lret
test
cwtl
test
sahf
sub
push
pop
xor
sub
stos
fldl
mov
or
pop
push
insb
mov
mov
iret
dec
iret
sbb
mov
mov
mov
sbb
pop
out
gs
aam
xchg
cmpsl
fistpl
mov
push
shrb
pop
lds
lcall
xor
or
comiss
enter
iret
mov
add
inc
fcoms
fs
mov
inc
fstps
mov
dec
or
inc
out
cmp
fnstcw
pop
ja
cmc
arpl
mov
test
pop
sbb
xor
xchg
push
mov
mov
rcrl
push
stos
fistps
pop
and
xchg
ljmp
mov
js
loopne
add
mov
or
or
mov
fwait
mov
fisttpll
add
scas
add
dec
roll
cmpsl
mov
insl
mov
js
insl
jae
sub
lret
and
std
sarl
push
inc
cld
sbb
test
cltd
fstpt
adc
xor
imul
cmp
xor
addr16
int3
sub
inc
ret
or
adc
ja
loop
stos
test
or
mov
lahf
sub
add
cmp
sti
icebp
int
jl
in
add
and
jne
dec
lds
add
dec
fcmove
ja
hlt
rcll
outsl
loop
dec
lcall
pop
inc
mov
imul
xchg
imul
mov
push
call
sub
xchg
enter
and
sub
aad
and
cmp
lods
xor
dec
mov
and
and
fiaddl
sbb
inc
call
adc
dec
in
jp
xchg
in
add
lea
ja
je
pop
imul
rorl
popf
fsubr
nop
lods
call
popf
inc
or
popa
mov
cwtl
out
invd
loope
xor
pop
xlat
sub
or
add
pop
ss
aam
rorl
jne
movsb
xchg
mov
fucomi
sub
cmp
stc
add
pop
add
mov
es
negb
fsts
icebp
lret
shlb
inc
pop
mov
test
xchg
and
cltd
stos
int
mov
loop
mov
clc
adc
add
mov
sub
push
ss
jecxz
inc
push
or
js
xor
lret
insl
push
out
adc
stos
mov
test
push
std
add
adc
and
mov
pop
pusha
pop
inc
xor
cmpsl
in
push
lahf
je
loope
xor
or
outsl
shll
and
out
pusha
mov
mov
ss
mov
loop
stos
cwtl
and
fs
adc
in
push
and
je
fwait
into
sar
and
shll
dec
out
adc
incl
enter
push
xchg
sub
stc
cmpsb
and
scas
ja
jne
clc
je
xor
mov
ljmp
in
cwtl
cmp
xor
scas
push
jbe
dec
mov
test
mov
lock
add
fs
sub
pusha
mov
mov
adcl
rcr
subb
pop
div
xchg
mov
adc
outsb
shlb
push
ds
pop
fs
loopne
int3
dec
inc
ja
sub
jmp
inc
xchg
xlat
popf
add
movsl
fisubrl
cmp
movsb
fisttps
shlb
add
adc
push
mov
push
push
and
test
lret
and
repnz
cmp
xchg
xchg
mov
aaa
ss
jge
into
sbb
push
ss
inc
in
pusha
inc
iret
ret
push
das
mov
enter
aad
dec
ja
dec
loope
mov
xchg
mov
xor
outsl
pop
in
outsl
xchg
cs
mov
inc
sbb
inc
clc
insb
insl
push
nop
lods
lock
scas
out
cmpsl
xorl
loopne
js,pt
adc
push
push
scas
xchg
xchg
add
mov
xor
xor
filds
cld
dec
or
cltd
sarl
mov
int
dec
mov
push
js
in
shll
cmp
sub
aam
out
push
push
adc
out
aam
push
push
aam
adc
jg
mov
adc
jae
mov
pop
jb
dec
rclb
adc
outsl
test
rclb
fwait
xchg
xor
or
sbb
and
out
gs
cld
add
dec
dec
jns
addr16
lds
mov
adc
sbb
or
insb
stos
dec
pop
pop
ret
pop
inc
push
insl
bound
mov
ret
negl
cmpsl
jo
pusha
mov
cmp
mov
repnz
cmp
cwtl
mov
aam
lret
enter
mov
mov
mov
jne
xorl
sub
inc
dec
cld
enter
fistps
test
popf
fidivrl
lret
pop
int
dec
repnz
inc
fdivrs
out
in
cwtl
mov
stos
lret
push
sbb
arpl
mov
repz
mov
mov
sbb
jo
sub
mov
js
rolb
push
or
sahf
sbb
sbb
sub
pusha
out
lods
int
js
dec
test
test
sbb
dec
sub
js
outsl
setbe
mov
pusha
adc
and
or
push
and
adc
mov
xchg
pop
imul
in
out
jmp
xchg
sbb
adc
jnp
aaa
test
stos
test
mov
icebp
lcall
jge
cmc
jo
adc
dec
ja
fcmovnbe
je
je
pop
cli
or
inc
out
js
out
in
jb
mov
sub
mov
jo
insb
and
imul
fbstp
ja
cmp
and
cld
or
and
cmp
xchg
jg
enter
xchg
test
rorl
in
iret
jecxz,pn
mov
or
inc
pop
pushf
int3
mov
add
mov
and
and
leave
rclb
cmp
jle
shrb
in
mov
ficoml
pop
xchg
push
inc
and
dec
or
mov
adc
aas
inc
xor
push
push
call
outsb
xchg
sub
push
sub
insb
aaa
leave
ja
imul
dec
mov
nop
sbb
mov
cmpsb
mov
pop
mov
and
stos
lcall
in
jbe
nop
mov
adc
rcrl
aad
mov
stc
push
stc
lods
les
jecxz
push
or
das
pushf
roll
popf
and
cmp
mov
movb
mov
xor
mov
jne
popa
addr16
sub
inc
into
mov
jmp
addl
push
jmp
sbb
lds
xchg
stos
mov
pop
mov
sub
js
sub
and
pushf
andb
or
dec
ret
mov
sbbb
ds
movsl
aas
sub
fwait
add
fidivrs
and
jae
cld
int3
mov
cmpsl
insb
mov
pop
xchg
sub
ficoms
sub
aas
cmp
mov
stos
outsl
push
or
dec
jb
push
or
sbbl
sbb
and
jge
jb
xchg
cwtl
call
aas
add
add
cmpsb
rolb
sbb
mov
lcall
jmp
jno
stc
pop
add
mov
jp
iret
aam
fsubrs
stos
mov
cmp
test
xor
dec
mov
cltd
mov
nop
movntq
out
aaa
sub
mov
jnp
mov
cmc
lock
testl
cltd
data16
in
pop
shl
sbb
and
and
sub
scas
push
js
cld
rcr
xor
and
add
movsl
out
pop
outsl
hlt
rol
das
dec
and
sbb
mov
rclb
call
cs
out
mov
addr16
aad
int
movsb
data16
jmp
dec
ret
sub
shr
subb
sbb
aas
stc
lods
insb
dec
inc
mov
rcll
or
add
adc
push
xchg
popf
push
leave
addr16
mov
test
xchg
in
push
inc
mov
dec
dec
mov
or
sti
push
fdivrs
xchg
cmc
dec
cwtl
cmp
or
shll
fs
mov
out
repnz
sbb
sbb
dec
adc
add
mov
ret
in
push
adc
xlat
jns
imul
inc
insl
inc
jbe
les
lret
and
stos
or
neg
mov
mov
xchg
popf
bound
aam
loopne
sub
int3
fsubs
out
mov
enter
cmc
cld
loopne
xor
mov
mov
out
scas
cmpl
bound
loope
mov
push
push
data16
int
and
lock
push
std
mov
push
xchg
cltd
sbb
std
lahf
cmpsl
xor
and
es
mov
dec
movsb
mov
aad
loopne
stos
push
sbb
rorb
mov
test
std
sbb
sub
lods
dec
jmp
aam
arpl
inc
outsl
test
in
into
loop
insl
movsl
bound
aaa
adc
movsl
test
icebp
outsb
pop
sar
aam
hlt
jg
jg
xchg
pop
cs
repz
push
repz
stc
sub
subl
rcrl
jae
cmpsb
pop
cmp
xlat
push
mov
mov
fs
cwtl
movb
dec
mov
jecxz
cli
sub
addr16
cwtl
daa
cmpl
fwait
xchg
lcall
les
mov
or
lahf
ljmp
jno,pt
jno
jns
stc
xchg
ss
sbbl
stc
mov
movsb
sbb
push
inc
cmp
adc
popf
shrl
gs
xor
mov
inc
sub
in
xchg
pusha
mov
shlb
scas
xchg
fistpl
lret
sti
ss
push
inc
inc
pop
lods
xchg
pop
push
call
test
mov
iret
repz
lods
xlat
push
loop
je
jmp
aad
mov
xor
dec
into
xchg
in
outsb
or
dec
ficompl
sbb
es
pop
ja
incl
inc
inc
hlt
sbb
inc
fs
cld
pop
cmp
arpl
ret
ret
mov
mov
push
mov
jnp
popf
out
lret
jg
mov
out
ret
iret
or
iret
jns
xorb
push
sbb
dec
sbbb
push
lret
dec
stos
in
xor
out
adc
lods
test
fs
fucomi
jg
mov
push
lahf
rcrl
add
push
int3
ljmp
leave
lcall
and
cmc
imul
out
dec
loopne
push
daa
sub
mov
cwtl
out
push
sbb
sbb
cmpsl
mov
pop
fcmovnb
xchg
mov
jle
xchg
sarb
xchg
xchg
cmpsl
sub
dec
xchg
and
inc
rcr
jge
mov
dec
dec
aad
je
and
mov
out
cmpsl
inc
rcll
cs
cltd
push
sbb
leave
push
ret
push
lods
jbe
push
adc
pushf
ja
jne
sbb
js
rolb
shll
sbb
xchg
jge
pop
mov
cmp
mov
xchg
bound
daa
xchg
std
fwait
push
xchg
fcoml
leave
jle
loop
ss
fmull
push
sbb
sub
xlat
xchg
lahf
orb
shll
pop
loope
lret
mov
jecxz
jp
xor
adc
mov
roll
or
daa
ss
sbb
lcall
mov
add
xchg
xchg
inc
mov
xchg
jl
xor
cli
or
mov
xchg
lods
xor
shrb
push
xchg
inc
and
aaa
cmpb
adc
orb
inc
cwtl
out
jecxz
nop
int
dec
fisttps
xor
bound
dec
mov
pusha
jno
je
jecxz
pusha
jp
je
pop
cmpl
jg
xchg
mov
stc
stc
test
or
add
dec
mov
fldcw
inc
adc
push
mov
cmp
dec
imul
test
mov
xchg
addr16
lahf
scas
into
cs
add
push
mov
mov
cltd
pop
add
pop
out
lds
das
sub
stos
fsubl
mov
inc
push
insl
lods
aaa
xor
push
cmpsb
popf
pop
std
stc
or
add
pop
fnstenv
jle
inc
fsincos
frstor
out
cmp
mov
sbb
xchg
inc
push
and
mov
push
mov
stc
push
into
xor
mov
lock
imul
push
pop
into
in
mov
scas
movl
cmpsl
sbb
imul
sbb
outsl
lds
mov
mov
or
pop
fmull
inc
pusha
pop
popf
loopne
xchg
idivl
lcall
sti
mov
push
ds
lds
mov
imul
fildl
fistl
jbe
mov
pop
mov
lods
popa
rclb
lock
sar
push
cwtl
jecxz
pop
push
dec
or
push
fldenv
and
xchg
mov
add
jecxz
pop
xor
sub
xchg
in
mov
ss
mov
lock
and
cwtl
jg
mov
sub
icebp
stc
loopne
mov
or
outsw
push
mov
scas
inc
in
ss
push
or
mov
xor
pop
push
add
stos
push
push
xor
push
mov
je
lods
lahf
out
add
and
and
loop
stos
and
test
add
and
ja
filds
insl
test
mov
jo
aaa
ljmp
jge
fstl
out
lods
cltd
pop
dec
in
xchg
push
pop
xchg
repnz
sbb
lea
js
cmp
cli
sahf
jmp
fs
or
adc
hlt
insb
pop
and
push
loopne
jle
sbbl
cli
mov
mov
jno
into
jle
pushf
loop
clc
popa
ret
lds
ret
inc
and
test
das
idivl
lods
mov
jecxz
jnp
ja
mov
xor
add
fadd
ds
lcall
and
pop
movsl
les
iret
xchg
add
mov
outsl
add
in
xchg
pop
out
test
xchg
inc
cmpsb
push
insb
in
fdivs
pop
xor
xor
mov
push
cwtl
sub
pop
orb
push
out
dec
mov
xchg
negl
les
movsb
and
inc
mov
movsl
cmp
add
mov
aaa
xor
pop
jle
idivb
sbb
ret
add
icebp
push
jbe
or
xchg
mov
dec
mov
das
scas
cmp
das
sahf
push
movsb
hlt
jbe
mov
dec
mov
scas
and
subl
dec
mov
push
inc
clc
push
in
or
dec
sub
add
cmp
inc
stc
in
popf
mov
sarb
div
aaa
pop
pop
loopne
jbe
fisttpl
pop
adc
adc
pop
test
loope
mov
mov
or
loop
mov
imull
sahf
stos
add
test
ret
daa
cmp
es
jb
mov
out
cmp
push
pop
pop
fs
push
stos
jge
stc
inc
mov
mov
bound
movsl
jmp
stos
jge
adc
fstpl
daa
mov
sbb
sbb
mov
les
scas
push
xor
aam
std
mov
insl
ds
xor
or
and
sub
iret
stc
daa
stos
popa
rcll
pop
mov
cli
cmp
ds
sub
jns
fisttpl
adc
les
sbb
lds
stos
push
add
negl
clc
das
mov
ret
mov
sub
mov
call
lret
add
shlb
rorl
aaa
mov
loopne
test
shll
daa
pop
lret
clc
push
scas
dec
dec
mov
leave
mov
fidivrs
dec
mov
push
dec
xchg
out
js
pusha
mov
loopne
jge
pushf
dec
mov
mov
in
mov
xchg
dec
xor
fwait
mov
xchg
mov
fsts
sub
movsl
lods
or
std
rolb
mov
inc
cmpsb
lods
inc
xchg
data16
popf
sub
xor
lcall
inc
int3
mov
and
ret
pushl
ljmp
jmp
imul
je
mov
pop
ds
mov
pop
inc
imul
sti
outsl
loopne
lods
mov
fbld
pop
test
das
mov
cmp
mov
push
bswap
or
loopne
cmpsb
push
push
cmp
ja
mov
movsb
sbb
cmp
sahf
aad
add
pop
jo
pop
push
xor
sbb
outsb
push
push
adc
xor
xlat
addr16
jecxz
push
test
mov
jae
dec
push
shr
sar
jnp
mov
sahf
orl
sahf
or
mov
add
or
jge
add
insl
jnp
xchg
cli
leave
arpl
jl
sahf
gs
sub
pop
mov
dec
push
sbb
mov
push
cwtl
dec
into
adc
out
std
fisttps
es
sbb
push
or
pop
or
mov
inc
gs
ret
aas
mov
test
jae
out
push
shr
and
inc
lahf
repz
pop
dec
ljmp
jmp
pushf
repz
mov
mov
mov
and
dec
jecxz
pop
mov
dec
inc
adc
inc
add
test
inc
das
rcrl
pop
and
mov
imul
out
xor
push
pop
in
cmp
adc
inc
es
sub
arpl
pop
mov
bound
inc
xor
test
cs
test
pop
in
inc
imul
ret
ljmp
push
test
je
mov
test
cmp
das
xchg
mov
mov
dec
daa
fsubp
je
mov
addl
mov
pop
push
test
loopne
rcr
cmpsb
das
add
inc
xor
pop
add
xor
movsl
inc
lods
ret
popf
in
clc
pop
dec
dec
mov
xorl
popa
or
or
dec
shlb
out
call
ljmp
int3
in
cmp
notl
es
shll
mov
nop
pop
std
mov
inc
mov
or
leave
mov
pop
bound
push
adc
lahf
je
lods
inc
mov
inc
movsb
pop
lea
out
and
popa
inc
nop
mov
out
adc
or
cmpsb
xor
push
sub
mov
jae
mov
leave
pop
stos
call
aaa
insl
mov
and
lahf
aaa
jb
hlt
push
fadd
and
jns
mov
fwait
nop
sbb
jecxz
testb
pusha
insb
pop
fistpll
inc
sbb
dec
lods
push
ret
stos
mov
fs
ret
mov
daa
in
xor
push
sub
cmp
push
iret
push
cmp
add
lods
daa
inc
adc
sub
dec
sbb
testl
lea
jbe
sbb
fwait
and
lret
push
lea
mov
in
aas
xchg
mov
test
pop
xchg
xchg
test
mov
and
inc
sahf
mov
mov
jp
and
add
sub
mov
jp
add
jl
push
or
pop
and
fwait
sbb
adc
sti
fistpl
mov
mov
xor
or
loope,pn
daa
test
aad
cmc
jle
mov
cmp
dec
test
inc
std
shr
stos
mov
adc
inc
int3
jg
lods
add
jb
lock
mov
jo
jp
cmpl
adc
outsl
insl
mov
or
cmpb
sub
fstl
lret
daa
lods
cmc
mov
fmul
loope
push
sub
out
test
fldl
adc
imul
mov
or
test
daa
mov
mov
sbbl
fstps
aad
inc
jno
pushf
mov
fimuls
adc
ret
addr16
lods
xchg
scas
jnp
push
jmp
or
sub
imul
in
test
push
rol
sbb
rcl
and
into
xchg
dec
jecxz
push
dec
scas
sbb
xlat
xorl
pop
add
sbb
and
jno
test
or
mov
sbbb
fbld
sbb
mov
mov
and
pop
adc
fcoms
subl
int
mov
in
jne
mov
cmpsb
cltd
dec
mov
sbb
cmpsb
ficoms
cmc
test
sbb
shlb
in
mov
xchg
or
xchg
insb
shrb
add
arpl
mov
pop
out
cmpb
into
ss
dec
add
out
mov
iret
ljmp
push
or
std
cltd
xor
ret
mov
jne
and
mov
rcr
jb
rolb
clc
sub
xor
mov
repz
and
mov
mov
es
fsubrs
adc
pop
mov
push
popf
std
aas
jbe
into
std
js
or
into
imul
hlt
nop
es
sarb
mov
jmp
pop
test
addl
jg
and
lds
sti
inc
xchg
xor
nop
inc
mov
jge
mov
mov
ret
popf
shr
sbb
add
and
je
popf
fnstenv
out
mov
mov
push
stos
insl
xchg
mov
lods
aas
scas
jnp
xchg
inc
lods
into
dec
jecxz
loope
mov
push
cwtd
mov
out
push
jge
sbb
lods
clc
mov
adc
push
repnz
int
lods
in
mov
inc
lds
cmp
mov
idivb
movb
push
mov
push
push
cwtl
cmp
ret
jo
rep
rep
test
mov
call
and
mov
sti
in
pop
inc
dec
jecxz
dec
add
dec
jo
or
dec
out
lret
lods
mov
add
ja
add
call
aam
out
sbb
pop
push
sbbb
jp
push
pop
push
in
cmp
jns
or
pop
iret
lds
dec
scas
dec
mov
lret
mov
mov
lret
mov
les
cmp
push
in
xchg
xchg
xor
push
fsubrl
in
stc
sbb
mov
loopne
ss
repnz
movsb
inc
int3
and
xchg
call
pop
jno
outsl
jmp
inc
pop
xchg
lret
decb
je
popa
testl
pop
ret
or
cmp
mov
and
pop
lods
xchg
lock
xchg
mov
mov
popl
or
nop
sbb
int3
fldl
mov
aas
cmpsb
in
or
hlt
pop
push
inc
imul
pushf
cltd
mov
adc
cltd
push
insb
adc
rcrl
mov
hlt
sbbb
fisubrl
jnp
pop
fdivs
nop
push
xlat
cli
in
outsb
test
pop
push
sbb
and
adc
pop
xchg
dec
and
mov
xchg
lahf
jb
xchg
call
outsb
jecxz
push
pop
sub
ljmp
data16
hlt
mov
cs
pusha
mov
mov
dec
lods
jb
mov
fsubrs
sub
fidivl
sbb
pop
pop
inc
jle
mov
and
test
and
push
adc
lcall
testb
jle
shlb
sahf
push
loop
cltd
mov
enter
sbb
ss
ljmp
dec
je
or
repz
jge
je
jbe
pusha
pop
ss
mov
repnz
adc
mov
sub
mov
mov
cwtl
sub
lahf
out
pop
aam
pop
xor
push
pop
xchg
loopne
jae
pushf
push
mov
and
ljmp
hlt
call
scas
add
jecxz
xlat
push
shrb
and
xor
daa
xor
mov
adc
xlat
popa
mov
inc
test
addb
jg
pop
cmp
push
jnp
das
stc
lods
mov
cmp
add
and
adc
clc
popf
cmovb
mov
mov
or
push
imul
jle
ret
fimull
cmc
sub
negl
inc
mov
push
std
ljmp
inc
movsb
mov
test
ss
xchg
xor
out
fistpll
out
jl
dec
pop
ss
movsb
dec
mov
jecxz
jno
stos
or
add
ljmp
shl
jmp
lcall
jmp
das
pop
and
nop
adcb
cmc
aad
mov
jl
rol
xlat
fcmovnu
or
test
imul
xchg
pop
ret
push
jmp
out
mov
mov
mov
inc
push
add
xchg
cmpsl
mov
mov
loopne
push
ds
int3
mov
jp
std
pop
or
aas
push
adc
adc
sti
inc
fisubrs
and
jl
cltd
cmp
jecxz
std
fyl2x
rcrl
repz
jmp
adc
sub
rorl
mov
mov
out
mov
dec
jmp
movl
mov
mov
mov
mov
ds
xchg
decb
ljmp
inc
ja
lock
add
data16
fmull
aas
je
pop
dec
jnp
adc
adc
ret
movntq
push
or
cmp
vandps
push
cmp
mov
mov
pop
add
cmp
inc
pop
xchg
shrl
cmp
jmp
lock
dec
dec
in
inc
dec
sub
push
pop
sbb
inc
pushf
popa
fdiv
enter
mov
pop
add
aas
jnp
insl
pop
mov
subl
shll
std
dec
inc
sub
adc
std
push
dec
test
dec
inc
cmp
loopne
jmp
add
fcomps
out
add
or
mov
dec
nop
sti
xchg
and
pop
adc
js
fdiv
popa
xlat
lock
mov
pop
push
stos
pop
push
imul
xor
dec
push
aaa
addr16
jp
jne
xchg
mov
cmp
dec
fsub
iret
mov
aas
mov
mov
sbb
jbe
push
fdivrl
lock
sub
adc
lods
push
das
pop
fidivl
ja
nop
jle
dec
mov
xchg
fisubs
aas
test
cmp
clc
dec
xchg
or
mov
ret
scas
pop
out
add
sbb
dec
sbb
jecxz
pop
lea
adc
mov
push
jb
ret
push
gs
stc
mov
push
sbb
fcomp
dec
jmp
outsb
lods
dec
mov
repnz
sub
mov
xchg
sbb
adc
mov
xchg
ljmp
lea
mov
loopne
pop
int3
pop
popa
faddl
mov
or
pop
roll
clc
lods
add
jl
jp
ljmp
pop
frstor
das
movsl
addr16
pop
ja
cmc
pushf
arpl
das
std
cli
push
pop
into
inc
stc
popf
jle
dec
into
pop
pop
imul
add
outsl
aad
jo
fnstcw
ret
xchg
insl
jno
aad
inc
andps
insb
mov
jb
sub
inc
lds
popf
loopne
mov
cs
ljmp
push
scas
sti
mov
adcb
rcrl
pop
in
clc
cltd
cmc
mov
clc
pop
sahf
mov
lods
sub
xchg
cli
aam
mov
sub
cmpsl
in
and
sub
cmp
cmpb
pop
mov
and
idivl
cmp
sahf
lock
repnz
clc
imul
jecxz
lods
add
dec
dec
xchg
es
sub
push
pop
inc
jo
cmpsl
xchg
dec
xchg
aaa
fwait
in
outsb
xor
addr16
inc
adc
push
mov
cmp
inc
jae
ja
aad
or
adc
jae
mov
jecxz
push
lods
mov
in
ret
jae
xchg
fstpt
mov
jnp
rorb
pusha
cmc
or
imul
and
add
ss
xchg
mov
add
jne
das
scas
outsb
jecxz
inc
push
ret
sub
loop
rclb
mov
mov
or
push
inc
cmp
xchg
aas
in
pop
aaa
pop
mov
lret
mov
dec
pop
call
mov
in
jo
gs
sbb
dec
ss
fbstp
fmull
mov
daa
xor
adcl
mov
popf
or
cmp
ret
shlb
adc
push
and
mov
mov
movsb
test
out
push
les
jb
mov
adc
or
mov
mov
inc
outsl
push
pop
pop
pop
jae
mov
lcall
or
xchg
or
cmp
shll
fsubr
mov
daa
ss
push
int
cli
push
cmp
int3
stc
sub
mov
jle
dec
lret
or
js
aaa
ret
sahf
jmp
jno
sbb
cwtl
ret
cmp
loop
arpl
hlt
in
xchg
repz
or
imul
stos
inc
push
imul
lds
jl
adc
inc
pop
aaa
test
int3
nop
fisttpll
add
pop
fs
cmpsb
das
xchg
dec
cmpb
mov
xchg
and
inc
or
lret
mov
je
fwait
adc
sub
pop
mov
gs
popa
out
popf
out
cmp
xchg
or
mov
xor
aad
in
out
dec
mov
vpmaddwd
cli
insl
in
add
fdivrl
or
push
scas
jle
bound
das
add
and
or
clts
inc
test
repnz
sbb
add
add
lret
pop
iret
cmp
pop
cwtl
aad
imul
ss
sub
cltd
jo
ficoml
push
hlt
pop
or
jl
lret
cmp
dec
or
inc
iret
jo
ds
fwait
test
cwtl
scas
fsubrs
out
fcoml
dec
adc
adc
inc
jl
jle
xchg
maxps
mov
cli
or
dec
test
sbb
xchg
jp
pop
add
sbb
js
sub
jae
andb
jbe
push
adc
insb
and
sub
adc
xor
lods
pop
filds
or
push
jo
jne
iret
adcl
lret
arpl
int
lret
stc
mov
mov
xchg
jmp
data16
mov
pop
inc
jg
test
sub
lcall
cmp
jb
sbb
xor
int3
cmp
cmp
adc
mov
movsb
imul
sub
xor
insb
ret
bound
and
xchg
mov
xchg
jbe
mov
insb
lds
sub
cmp
mulb
jle
push
jae
push
out
xor
push
test
pop
pop
inc
add
or
call
push
sbb
jl
or
mov
inc
cli
icebp
out
adc
push
ljmp
lods
dec
push
cld
cwtl
push
push
and
inc
jne
push
pop
roll
jno
jbe
int
push
mov
dec
push
mov
add
int3
cmc
mov
jno
dec
mov
cmp
sub
das
or
inc
shlb
jns
fists
push
add
or
xor
sub
jmp
lret
push
rclb
sub
push
out
pop
fnstcw
sub
popf
and
lea
jo
movb
sarb
sahf
mov
mov
inc
sbb
sahf
cmc
and
and
popa
pop
in
mov
and
sbb
xor
inc
aaa
mov
dec
mov
rcrl
xchg
inc
repz
inc
js
shl
lods
jge
loope
mov
sub
cltd
sti
mov
pop
cld
xchg
or
sarl
int3
loope
cmc
cmp
pop
push
bound
dec
push
std
jmp
mov
movsl
sbb
add
mov
or
sbb
push
push
std
test
and
pop
lcall
or
dec
loop
add
lods
inc
mov
jo
jp
jnp
imul
jg
out
cs
pop
sub
add
iret
ret
inc
call
call
sti
mov
xchg
stos
dec
repz
cmp
mov
in
xchg
pop
fisubrs
jno
jle
fsubrs
pop
je
dec
bswap
es
dec
mov
out
jg
sbb
and
mulb
in
push
cld
pushf
in
jbe
inc
fiadds
cmp
pop
pop
sahf
add
xchg
xchg
push
mov
outsl
test
jge
cmp
dec
enter
pop
sub
push
lret
mov
fwait
lds
lds
xchg
cs
cltd
call
pop
and
fldcw
and
scas
ljmp
pop
mov
adc
inc
push
arpl
cwtl
insb
dec
xor
mov
sti
adc
xor
repz
dec
stc
in
insb
frstor
testl
mov
mov
add
cmp
jmp
adc
insl
fmuls
pop
sti
sub
int3
adc
jecxz
pop
aaa
cmp
jae
inc
loopne
jmp
test
xor
push
sub
sbb
aam
cmp
xor
ret
outsb
or
dec
mov
or
and
and
or
add
mov
aas
lahf
mov
jae
shr
fidivl
push
mov
cmp
fcompl
lods
add
sahf
xchg
add
into
mov
push
mov
push
je
and
push
into
and
lahf
push
xchg
insl
mov
aas
fsub
fdivp
fnstsw
jns
shlb
add
pop
and
mov
pop
loope
xchg
mov
jmp
mov
test
sbbb
mov
pop
test
test
push
and
popl
push
mov
cmp
mov
sbb
adc
fmuls
cmp
mov
xchg
les
adc
fcoml
roll
sub
adc
sub
inc
lea
jecxz
enter
sbb
push
jmp
sbb
test
sbb
jne
inc
aam
test
ja
imul
stos
inc
mov
sbb
cmp
mov
js
loopne
pop
adc
and
fsts
rolb
lods
add
sahf
and
out
add
ja
jns
dec
insb
lea
cli
pop
es
push
and
testb
jecxz
pop
aaa
adc
je
dec
arpl
or
std
rorb
mov
decb
fldpi
adc
xlat
inc
movsl
std
ja
idivb
sbb
push
ja
jle
std
xor
sub
add
or
aad
test
sub
adc
ret
pushaw
dec
push
adc
ficompl
movsl
xchg
push
add
outsb
andl
xchg
or
mov
add
outsl
into
mov
push
in
scas
test
xchg
rcll
cmp
mov
stc
ja
insl
inc
movsb
ret
push
mov
push
fnstcw
int3
loop
sahf
mov
sar
mov
out
add
sbb
aas
adc
dec
add
int3
iret
leave
pop
iret
sub
inc
push
pop
test
xor
in
mov
xor
fs
dec
lds
daa
int3
xchg
pop
jl
pop
inc
add
aad
es
mov
jmp
cmp
jmp
inc
das
pushl
shr
and
mov
inc
idivl
loopne
pushf
jb
dec
push
sub
pop
out
jnp
push
out
mov
pushf
ds
sbb
mov
ja
push
aas
ffree
lods
mov
nop
outsl
sbb
inc
sbb
fbstp
movsb
in
push
mov
int
cmc
cmp
test
repz
hlt
mov
aad
loope
adc
fistpll
mov
cld
and
lahf
adc
addr16
push
inc
mov
scas
lods
sbb
inc
xor
bound
cltd
aam
lods
mov
inc
test
in
mov
pop
adc
mov
mov
loope
in
add
push
mov
add
dec
add
lods
bound
ror
inc
cld
mull
and
xchg
mov
div
lret
or
test
aam
sbb
jg
or
xchg
aas
in
mov
insb
iret
jae
cmp
test
popa
sarl
push
xor
cmp
xchg
add
hlt
insb
aas
pop
cmp
or
pop
stos
outsb
fsubrl
xlat
out
loopne
lods
sub
js
sub
std
push
fistpl
cmp
jmp
aam
daa
mov
jno
loop
popl
adc
sbb
rcll
add
insl
jnp
scas
push
sti
imul
cmp
push
xchg
sub
mov
pop
xor
ret
gs
xchg
mov
jle
insl
sbb
in
sbb
ss
fcmovnu
push
dec
and
rcr
sbb
push
cmpsb
pop
add
mov
xor
and
mov
js
xchg
addl
xlat
mov
jo
imul
out
icebp
push
inc
fsubs
jle
leave
xchg
or
or
xor
xor
outsl
fsubs
pop
mov
cs
fimuls
mov
out
dec
je
in
dec
cmp
xlat
inc
jp
stos
inc
test
enter
daa
xor
ljmp
popa
test
jp
dec
enter
xlat
lea
stc
xor
mov
scas
xor
repnz
test
leave
xor
pop
fisubs
jns,pn
pushf
mov
shrl
popa
xor
mov
mov
jae
jmp
inc
jnp
ret
repnz
imul
gs
mov
popa
mov
idiv
pusha
or
movsb
jo
dec
aaa
jecxz
and
ss
pop
pop
imul
pushl
add
cmp
cmc
imul
sarb
add
jge
push
pop
mov
fadd
loop
jecxz
xchg
jae
out
add
pop
pop
out
scas
xor
and
xchg
push
movsl
subl
mov
scas
test
mov
in
lea
dec
repnz
cmp
cltd
jne
push
out
mov
xchg
lods
xlat
xchg
test
les
lods
fsubrl
loope
rorb
mov
lea
lea
out
mov
push
adc
push
dec
dec
mov
pop
mov
cs
lret
outsl
out
movsl
call
rcrl
sbb
clc
lahf
or
cli
fstl
jno
inc
sbb
add
call
rcll
test
xor
dec
xlat
lcall
add
ja
push
inc
jno
ja
xlat
jbe
cs
cmp
and
pop
and
sub
int
pop
aaa
and
fidivrl
cwtl
jne
stos
sbb
addr16
ljmp
push
cmp
sub
sbb
rorl
jb
js
inc
dec
cmpsb
cmp
ja
cmp
xchg
and
aas
subb
sub
or
sbb
leave
fdivl
aaa
xchg
sub
scas
addr16
cmp
scas
dec
mov
xor
push
sub
or
stos
mov
cli
into
icebp
cmp
sbb
cmp
or
adc
pushf
pop
pop
ror
sbb
test
ffreep
iret
jbe
test
cmpsl
or
pop
and
cmc
movl
and
rolb
adc
sbb
inc
in
stc
ljmp
cmp
pop
sbb
mov
jmp
notl
mov
mov
cs
mov
push
dec
add
dec
and
mov
jmp
sub
lahf
cmp
push
dec
add
clc
jo
mov
out
imul
scas
push
mov
mov
jo
xchg
pop
cmpb
stos
sub
sub
das
push
mov
cld
pop
pop
shll
cmp
xlat
sbb
subl
fstpt
insl
test
mov
sbb
pop
scas
push
add
test
clc
ficomps
fwait
repnz
lret
adc
in
enter
jae
gs
scas
fnstenv
lock
or
sbb
in
dec
cmc
cmp
shll
imul
dec
xchg
ss
xor
cs
sub
int3
test
cltd
sti
or
icebp
add
or
or
lret
mov
adc
fidivs
sbb
insl
insb
test
inc
fwait
inc
inc
mov
cmp
pop
sub
sub
jmp
mov
lahf
sub
push
iret
jmp
xor
test
add
push
dec
xlat
in
pop
fsubl
lock
add
gs
and
cmp
fcomps
cli
jbe
into
movsl
test
xchg
push
pusha
les
jo
rolb
push
mov
and
test
dec
adc
lods
nop
sbbl
xor
ret
outsl
clc
lret
add
pop
sahf
cld
mov
movsb
cmp
dec
fsubrs
test
mov
int
and
cld
add
sbb
xorb
and
xor
nop
push
jbe
enter
and
push
rcll
mov
popa
and
jl
pushl
adc
int
or
and
subb
mov
push
dec
mov
push
loope
and
cmp
mov
aas
sbb
outsb
lods
mov
fdivrl
pop
addb
popf
add
pop
ret
iret
aaa
in
jo
xchg
cli
and
xor
adc
dec
add
fsubrp
xchg
dec
fldenv
add
jno
lret
sub
jnp
lret
nop
jae
xchg
out
testb
cmp
adc
clc
addb
push
or
jp
lcall
mov
jnp,pn
movsb
out
xchg
ss
mov
inc
mov
pop
cmp
xor
mov
fildll
mov
xor
add
sbb
out
pop
and
cmp
jne
in
aam
mov
pop
xchg
shrl
jno
out
stos
xchg
fidivrl
ret
inc
dec
push
iret
push
out
xchg
iret
inc
push
ss
rcrl
repz
push
push
fbld
mov
jbe
jns
gs
lret
cmp
inc
xor
fimuls
mov
inc
decb
stos
xchg
loope
cli
stos
lods
test
les
adc
adc
cmp
sub
mov
xchg
std
pop
test
repz
push
mov
xor
add
cltd
sti
fsubrl
inc
push
arpl
pop
lods
cmc
mov
cs
out
pop
lods
orl
cmp
ss
mov
cs
sbb
add
inc
orb
hlt
cli
inc
pop
std
mov
and
mov
fists
scas
movsl
sub
mov
cmc
and
ret
fwait
out
pop
and
dec
add
ret
mov
mov
jmp
gs
jo
mov
shll
jno
dec
jo
fidivl
cli
push
popf
es
adc
pop
fistl
xorb
pusha
dec
add
inc
push
dec
sbb
rclb
cmpsb
outsl
sub
xchg
into
incb
out
test
inc
adc
and
cmc
cli
xor
sub
inc
mov
add
adc
imul
xchg
push
out
and
inc
shll
push
xor
rcrl
mov
repnz
jne
cs
or
iret
cltd
aad
out
imul
lahf
add
sub
inc
into
adc
mov
mov
mov
std
iret
xor
sti
mov
jne
pop
dec
inc
icebp
cmp
push
fdivrs
mov
arpl
add
lods
add
push
jecxz
mov
cmp
jg
mov
jae
jecxz
dec
rcr
mov
cmp
push
mov
dec
pop
outsb
mov
mov
in
mov
jo
clc
movsl
cmpb
iret
gs
cltd
cli
ror
pop
repz
lret
test
movsb
lods
adc
add
pop
mul
jle
dec
adc
pop
pop
loope
int3
push
inc
sbb
inc
inc
or
jmp
fisubs
xchg
lahf
and
or
sub
test
sbb
mov
repnz
movsb
sbb
in
loope
push
xor
push
lds
pop
pop
loopne
jae
loope
iret
inc
addr16
sti
add
mov
insb
fstpl
sti
and
lahf
in
jge
rolb
ud1
in
dec
and
aam
sbb
imul
out
jmp
xor
test
test
rcrb
test
idiv
add
shld
stc
loopne
insl
out
test
xchg
rcrl
adc
or
fnstenv
or
jo
iret
push
shrl
sbb
cmp
push
sub
scas
sub
stos
and
testl
jbe
enter
cmp
jbe
in
scas
mov
xchg
pusha
xor
insl
mov
push
mov
xor
rol
ljmp
mov
mov
add
cli
adc
rolb
inc
aaa
xor
popf
cmp
pop
jo
pop
cmc
mov
ficomps
mov
orl
aas
in
jg
xor
js
and
cmp
in
pushf
xchg
movsl
dec
inc
sbb
mov
dec
cmpl
iret
sbb
gs
ds
mov
inc
sub
cmpsb
and
jmp
imul
shll
mov
dec
out
aam
sbb
sub
cltd
insl
cmp
repz
sub
push
pop
je
dec
lret
mov
enter
mov
xor
sbb
jbe
pop
push
out
into
add
mov
push
jg
mov
cmp
pusha
and
xchg
cmp
loop
or
out
cld
pop
mov
leave
scas
fnstcw
pop
scas
std
xor
adc
mov
je
enter
push
and
jle
dec
fidivrs
ficompl
gs
lahf
mov
out
sbb
js
in
es
outsl
xor
push
sbb
push
repnz
subb
outsb
pop
fldt
inc
sbb
cld
dec
mov
std
or
inc
xor
rclb
daa
fs
lock
jecxz
pushf
add
xchg
mov
bound
aas
cmc
aam
pop
out
div
dec
jne
popa
add
loop
add
sbb
jno
xchg
sbb
int
sub
iret
adc
xchg
and
popf
loope
mov
and
out
inc
shrb
add
iret
mov
pop
imul
mov
enter
dec
lds
pop
ret
mov
adc
out
inc
jp
addr16
insb
push
and
into
loop
mov
adc
mov
mov
xchg
inc
jns
fs
sub
shll
rcrb
out
mov
and
movups
or
mov
dec
cld
int
cmp
adc
or
in
outsl
cmp
and
loop
ja
lock
icebp
or
dec
int3
mov
mov
push
pop
sbb
cmp
push
pop
pop
mov
rclb
mov
xchg
out
pop
mov
lret
shl
pusha
shll
add
aas
mov
xor
out
pop
cltd
jmp
stos
cli
out
mov
and
mov
gs
dec
arpl
xor
outsl
xor
mov
adc
lods
arpl
sbb
dec
stos
outsl
push
add
xlat
jno
or
outsb
dec
clc
in
lcall
cmp
dec
data16
or
adc
mov
out
push
adc
jno
enter
ficompl
in
es
dec
fwait
mov
push
and
push
adc
in
jecxz
movsl
iret
and
sarb
inc
popa
inc
sbb
xor
inc
mov
sub
dec
call
loope
jo
int
push
adcl
inc
add
push
sbb
cli
clc
mov
and
repz
scas
pop
mov
aaa
mov
movsl
aad
ret
add
inc
push
std
ja
aad
mov
imul
xor
and
lahf
adc
dec
adc
add
dec
data16
jmp
mov
jp
aad
mov
fwait
jnp
aam
es
js
shrb
add
mov
repnz
inc
dec
clc
mov
call
icebp
cwtl
push
pop
andb
mov
mov
add
dec
jns
shrb
mov
test
es
popf
jg
pop
ljmp
push
jnp
sub
iret
inc
fucomip
shrl
jae
inc
mov
jne
lods
in
fmull
xchg
dec
dec
mov
pusha
setne
sub
in
mov
insl
or
dec
ja
jno
add
js
push
popa
dec
push
jle
or
add
and
aaa
mov
ja
adc
xor
jb
mov
push
cmp
xchg
jno
adc
scas
push
and
cmp
hlt
loopne
sub
push
xchg
and
daa
mov
push
int3
dec
fisubrl
icebp
scas
inc
scas
dec
gs
jge
inc
std
dec
mov
mov
mov
dec
inc
push
shrl
adc
and
pop
mov
cmp
xchg
adc
lcall
loopne
add
cmpsl
ror
jge
test
xchg
les
js
cmpsl
aad
dec
mov
pop
outsl
stos
push
ja
mov
dec
xchg
xchg
cltd
sahf
xor
push
sub
or
icebp
mov
fiadds
xor
fdivrs
hlt
sbb
adc
pop
mov
outsb
lret
sbb
pop
roll
test
xchg
cmp
dec
mov
cmp
xchg
js
xchg
daa
cmpsb
repnz
lds
push
sub
pop
mov
outsl
repz
rorl
int
repnz
test
mov
out
and
jp
adc
sub
lahf
and
inc
mov
pop
in
sbb
mov
enter
cld
shll
dec
mov
inc
or
sbb
out
setg
add
push
ret
cmp
adc
xor
and
repz
bound
cs
mov
lods
dec
dec
or
out
test
pop
jle
mov
pop
pushw
mov
mov
xorb
dec
add
mov
outsb
leave
xlat
mov
inc
jge
scas
cmp
cltd
mov
pop
sahf
xor
int
shlb
xchg
sbb
sub
jmp
dec
inc
adc
out
rorl
test
dec
imul
fs
popl
movsl
jnp
js
push
xchg
dec
inc
jecxz
add
dec
popf
movsl
dec
adc
jae
or
inc
cmp
inc
inc
call
mov
mov
add
dec
sub
movsb
bound
in
lods
sbb
pop
cmp
mov
outsl
adc
lds
sbb
adc
adc
or
aam
lods
adc
sbb
adc
jle
mov
lcall
fdivl
push
aad
mov
xchg
adc
or
in
mov
xlat
inc
call
jecxz
in
jne
sub
add
movsb
adc
mov
mov
cli
add
jp
out
pop
or
call
mov
into
imul
xchg
push
out
push
add
sub
push
inc
pop
mov
mov
xlat
mov
lret
and
lds
xor
data16
mov
ret
sub
aas
xor
repnz
insl
lds
jmp
xchg
sbbb
iret
out
mov
outsb
inc
xor
inc
divl
and
leave
inc
mov
inc
jae
adc
ret
mov
sti
mov
pop
cmp
pop
pushf
inc
sbb
and
fs
je
adc
test
cmp
aam
inc
mov
push
push
inc
iret
or
inc
cmp
sbb
pop
in
jb
and
insb
sbb
test
icebp
adc
cmp
imul
insl
fs
mov
mov
or
fcomps
mov
int
adc
dec
gs
dec
fbld
ss
out
ss
loope
outsb
mov
jmp
lods
addl
out
dec
in
ret
mov
jl
and
cmp
call
das
jae
or
adc
pop
fisttps
clc
les
test
push
mov
xor
imul
dec
stos
ret
sub
push
dec
push
fistl
push
mov
imul
or
test
scas
sbb
cli
rclb
dec
cmp
lret
test
inc
fwait
je
fstpl
ljmp
jmp
rclb
movsb
jg
lret
aad
dec
loop
mov
mov
pop
incl
in
jno
mov
daa
cmp
ds
int
add
lahf
pop
push
mov
xor
pop
xor
sbb
jge
jge
stc
jbe
popf
jp
je
scas
les
std
fiaddl
aad
gs
dec
loop
fcmovnb
inc
adc
inc
mov
scas
lea
bound
adc
add
in
jo
mov
dec
das
rcrl
out
int
xlat
loopne
jnp
mov
in
std
cmp
pop
aas
cmp
jge
or
xchg
or
loope
sub
loop
dec
addb
mov
dec
dec
js
sbb
loope
test
sbb
or
xor
sahf
xchg
xchg
or
cmp
xchg
mov
dec
out
and
adc
and
dec
sbb
pop
movsl
test
int3
jnp
add
loope
jbe
dec
mov
sub
cltd
rcll
rcr
outsl
cmp
inc
cmp
out
mov
xchg
test
in
inc
es
jbe
ret
inc
sbb
pusha
addb
mov
je
sub
add
std
push
loop
lods
mov
cmpsl
enter
inc
lret
mov
scas
lock
mov
sub
je
scas
movsl
jmp
jge
ret
fisubrl
ja
pop
push
add
cmp
sub
sub
fcmove
adc
das
iret
call
push
and
mov
and
into
pop
xchg
ja
fisttpl
sbb
xor
sbb
mov
arpl
mov
add
insb
je
inc
jb
movsl
and
popa
add
das
dec
mov
xchg
in
loop
xchg
lcall
pushf
mov
bound
xor
mov
scas
adc
mov
dec
lods
cmp
out
sub
push
cmpsl
sub
adc
jg
loopne
out
cmp
scas
add
sbb
mov
stc
pop
pusha
shll
sub
push
sbb
sbb
dec
mov
ret
cmp
sbb
lea
fidivs
scas
dec
out
mov
cli
loopne
test
sub
stos
inc
dec
xchg
icebp
push
imul
fistpll
cmp
jp
fmul
lds
and
xchg
pushf
xor
scas
sbb
das
fbld
fbstp
pushf
add
bound
rorb
mov
fidivs
cmpb
push
das
mov
cmp
dec
outsl
pop
cmp
mov
stc
jb
mov
fsts
or
jnp
movsl
ljmp
push
xchg
cld
mov
rclb
imul
dec
xor
out
cmp
fmull
lret
xor
or
rolb
movsb
sub
fcomp
mov
and
sub
dec
es
pop
lods
aaa
xchg
imul
mov
repnz
jecxz
fidivrs
dec
test
ss
sbb
mov
sti
mov
xchg
lea
dec
ds
addr16
push
mov
repnz
pop
xor
add
fs
out
sub
push
pop
xor
sub
dec
rcrb
inc
jae
sub
fwait
lock
mov
daa
cwtl
push
std
imul
les
es
mov
xor
pusha
push
adc
jnp
rclb
enter
sahf
mov
mov
mov
ds
push
pop
pop
rorl
mov
xchg
addr16
popa
lods
es
mov
in
xchg
aaa
inc
leave
jbe
lcall
add
xchg
clc
adc
xor
push
cld
mov
aaa
cmpsb
sub
int
lret
out
mov
jb
ret
sbb
jge
pusha
push
xchg
lahf
subl
stc
dec
mov
clc
bound
leave
hlt
adc
or
jl
fwait
decl
aam
loope
arpl
xchg
pop
idivl
or
inc
lock
or
mov
mov
lea
stos
jbe
jb
shll
in
into
and
push
pop
sti
aas
lret
pop
jmp
cmpsl
dec
lock
ret
adc
jb
push
xchg
jae
imul
in
push
jns
xchg
fists
loope
aaa
fsubrl
nop
cmp
fnstcw
cmp
mov
in
stc
mov
mov
clc
xlat
popa
sbb
in
fistpll
movb
xor
adc
sbb
hlt
cli
jo
cmp
sarl
imul
out
dec
aas
jae
shl
imul
sti
sub
insb
mov
mov
sbb
inc
lcall
int
push
outsl
insl
jmp
dec
pop
xor
jp
fmull
xchg
or
insl
mov
cld
mov
xchg
addb
dec
insl
or
aad
idiv
clc
sub
push
scas
shl
stos
and
rclb
mov
aam
adc
sbb
xchg
and
loop
outsl
jae
data16
fcmovne
and
cmp
add
add
int
adc
imul
das
lods
jbe
dec
lcall
xchg
fidivl
das
enter
fnsave
cmpsl
sub
inc
cld
mov
daa
mov
dec
andb
scas
adc
jge
mov
les
push
sbb
push
inc
jl
outsl
cmp
negl
mov
xlat
sbb
cmc
xchg
scas
push
mov
add
push
mov
into
icebp
ss
mov
cmp
lahf
push
lods
xchg
sbb
or
shll
mov
push
hlt
sar
aaa
jno
ja
cld
sub
dec
mov
ret
sub
cmpsb
lcall
jmp
cmova
mov
push
add
hlt
pop
aas
xchg
cmp
ljmp
aas
or
push
es
nop
and
push
and
lods
mov
jle
leave
pop
and
cs
popf
xchg
lret
push
out
movsb
xchg
push
in
push
stc
dec
xchg
fidivl
dec
add
xchg
adc
xor
or
gs
mov
je
iret
lea
pop
out
sub
xor
mov
mov
adc
lds
xor
cmp
test
adc
lods
mov
add
out
sti
adc
lods
mov
mov
mov
adc
out
lahf
dec
inc
jae
clc
dec
jecxz
xchg
jle
and
insb
outsl
mov
lret
mov
lds
and
jmp
mov
lret
sbb
push
lret
mov
icebp
xor
add
jl
repz
sub
cmpsl
jbe
test
mov
sbb
shll
xchg
test
mov
inc
fistpl
xchg
mov
fdivrp
push
mov
jmp
dec
mov
cli
xchg
lcall
push
adc
enter
jecxz
test
add
dec
dec
add
pop
add
add
jns
out
xchg
test
adc
insl
push
mov
cld
mov
loop
sub
xor
mov
loop
pop
ja
inc
cmp
dec
mov
sbb
std
cmp
push
scas
sub
aas
in
cmp
sub
mov
and
icebp
lea
sti
test
not
test
mov
mov
push
push
push
lds
mov
mov
mov
add
inc
mov
dec
jp
mov
in
sti
pop
cmc
jmp
inc
jp
xchg
and
mov
insl
mov
push
fistpl
mov
push
fs
and
sub
jp
out
mov
int3
jo
mov
xor
addr16
loop
jb
lea
dec
sbb
orl
add
int3
lock
mov
adcl
lret
jb
pop
dec
add
sub
jl
dec
call
aad
cltd
stos
icebp
fwait
add
xchg
add
mov
cmpsb
int3
mov
cs
std
nop
fucomp
inc
add
add
shl
push
push
es
push
out
bnd
jnp
and
add
pop
xchg
shll
push
xor
push
mov
xchg
cmpsb
sahf
add
and
test
cmp
leave
mov
mov
loopne
into
mov
add
es
rorb
fmul
repnz
xchg
sub
xchg
int3
inc
movsl
iret
sbb
lods
loope
dec
insb
jge
test
daa
adc
mov
iret
cmp
in
jle
enter
jg
mov
add
jne
mov
fmulp
or
in
loopne
and
decb
sbbb
sub
xchg
mov
xchg
pop
xchg
sar
dec
hlt
dec
cmpsl
mov
pop
mov
movsl
pop
js
xor
divb
dec
dec
pusha
popl
stos
inc
test
and
jbe
nop
test
add
dec
adc
or
enter
je
mov
roll
test
and
out
xor
push
sahf
fldcw
lods
lea
push
loop
in
leave
xchg
xor
lds
rorb
enter
test
insb
push
cmpsl
xor
xor
fmull
rcrl
jge
cmc
test
ret
les
inc
mov
xchg
dec
sub
or
pop
pusha
jae
mov
pop
jne
lea
dec
pop
pushf
xorl
in
lods
mov
mov
lock
and
pop
test
dec
pop
push
popf
mov
sub
pop
jns
push
rcll
lock
xor
mov
dec
gs
loop
sbb
mov
roll
sub
jbe
in
scas
cmp
divb
and
push
out
lcall
xchg
dec
lock
push
xor
cmpsb
pop
or
lea
les
or
mov
push
mov
push
fwait
movsb
cld
push
cs
ss
jg
mov
push
mov
jmp
inc
jp
movsb
decb
leave
loope
repnz
push
xor
rcl
pop
and
xchg
shll
repnz
lock
inc
jae
pop
insb
dec
push
loop
add
es
jbe
in
mov
jmp
outsb
in
les
mov
fldcw
mov
pop
push
and
imul
cmp
ja
clc
gs
out
aas
lods
or
push
aas
cmp
daa
lds
jno
push
push
sar
mov
sub
add
or
imul
jp,pt
lret
add
lret
push
out
pop
pop
dec
push
jae
jno
mov
jmp
subl
test
outsl
mov
ds
out
shlb
add
cmpsb
lret
subb
fnstcw
loope
movsl
push
xchg
insl
int3
in
mov
pop
maxps
inc
mov
cli
repz
and
addb
clc
xchg
cwtl
and
mov
outsb
mov
std
hlt
inc
add
adc
lods
int
fisubl
add
or
fisttps
lcall
stos
mov
push
adc
rol
out
mov
and
aam
js
sbb
hlt
adc
lds
sub
xor
mov
pop
movsl
scas
pop
mov
xchg
mov
fisubl
sbb
rcrb
es
dec
sbbb
add
cmc
pop
sbb
push
adc
lahf
xchg
push
add
push
syscall
push
mov
faddl
fdivrs
setp
sbb
mov
call
aaa
insl
out
jno
mov
loope
lock
ljmp
adcb
sahf
bound
hlt
inc
and
and
mov
add
dec
ret
or
push
loopne
shl
fwait
jp
or
dec
mov
aaa
jb
dec
pop
ljmp
stos
jle
push
push
xchg
adc
ljmp
mov
test
faddp
cmp
lds
push
out
xor
xchg
inc
mov
xchg
jle
and
xlat
addl
push
loope
lcall
idivl
iret
test
jmp
fisttps
xorb
mov
xchg
mov
cmp
cmc
mov
sarl
filds
call
je
or
rcrb
sbb
testl
sub
fisttps
stos
push
sbb
lds
leave
sarl
sbb
fs
push
adc
loop
ja
sub
div
or
xor
cmp
in
ds
insb
lea
xorl
jmp
push
outsb
pop
xor
jecxz
in
test
out
scas
sti
lods
xchg
jle
lods
outsb
call
push
loop
add
sbb
xor
mov
push
sub
scas
dec
mov
daa
insl
jno
fdivrl
mov
test
jp
fimuls
test
cmp
lds
iret
dec
adc
fwait
xchg
into
push
ljmp
ret
aaa
cwtl
xchg
inc
pushf
je
mov
inc
add
adc
push
rcl
mov
lret
jno
test
pop
adcb
test
push
out
enter
mov
cmpsl
dec
dec
lret
push
out
or
add
adc
pop
jle
jne
jp
pusha
xlat
or
out
lcall
fs
sub
mov
xchg
fisubs
mov
jg
fisttpll
int
jecxz
push
aas
adc
xlat
pop
push
mov
add
xor
sbb
rcll
nop
loop
adc
adc
fstp
and
xor
add
xor
lock
add
inc
inc
mov
outsl
dec
fisttps
push
and
mov
fwait
stc
mov
int3
aad
mov
jns
mov
movsb
cmp
mov
xchg
jo
repnz
dec
dec
push
mov
pop
mov
nop
jo
jl
lret
jbe
cli
jno
cmpb
bnd
ret
mov
inc
inc
das
int
int
loopne
jb
nop
sub
shll
outsl
adc
test
imul
and
shl
xor
push
pop
cmp
add
cmp
pop
imul
add
test
loop
out
cmp
add
fisubl
mov
insb
pop
out
add
out
cmpsb
in
sub
hlt
sbb
movsl
and
push
add
into
mov
scas
push
xor
pop
sbb
mov
add
idivb
int3
aas
hlt
bound
test
test
cs
sti
stos
nop
mov
xor
bound
mov
bound
adc
xchg
xchg
mov
movsb
lret
shlb
dec
int3
out
addr16
inc
mov
sub
cmp
lcall
fcompl
and
sub
je
and
insl
sti
enter
cwtl
out
ja
jmp
adc
pop
orl
add
add
push
add
jb
gs
movsb
inc
cmp
sahf
push
fmull
shll
pop
adc
imul
into
outsl
or
adc
push
sub
jno
push
adc
pop
jle
seto
mov
push
cs
shll
xchg
out
inc
out
adc
mov
or
xchg
pop
jmp
dec
or
ss
out
cmp
jmp
sbb
mov
mov
fwait
sbb
sbb
pop
mov
jo
das
add
adc
stos
jmp
mov
leave
inc
je
ds
mov
jp
and
adc
mov
fsubrs
add
jo
stos
hlt
and
push
lahf
cmp
add
cmp
push
adc
mov
cmp
push
mov
jg
cmc
jb
xchg
leave
imul
retw
add
push
cli
leave
pop
inc
jle,pn
pop
sub
cmpsl
mov
incb
xlat
sub
rcr
test
push
mov
cltd
mov
test
dec
in
cmpl
int
popf
or
cs
test
lahf
popf
pop
jnp
cwtl
cltd
call
subl
cmp
sbb
sarb
test
jge
iret
sub
cld
lds
jp
push
mov
xchg
sub
or
fidivrs
leave
mov
nop
test
in
repz
xchg
pop
pop
loope
loope
jecxz
add
imul
fst
bnd
pop
lahf
movsl
cwtl
cs
xchg
stc
jmp
push
push
sub
lds
popa
out
jb
or
xlat
mov
and
mov
or
sbb
cmp
dec
call
cwtl
add
ja
dec
sbb
or
and
test
or
xchg
arpl
pop
inc
inc
pop
data16
dec
iret
inc
push
mov
dec
and
xor
adc
ss
xchg
or
mov
ret
scas
fsubr
adc
in
inc
popa
imull
cmp
mov
scas
push
sub
nop
ficoms
sbb
push
xchg
outsl
jae
rorb
out
imul
movsb
cmp
jbe
hlt
mov
aad
mov
outsb
fwait
inc
adc
mov
insl
pop
shl
loopne
mov
test
cmp
dec
mov
jno
cwtl
mov
sbb
cltd
in
out
xchg
repnz
jp
nop
sbb
cmc
pop
or
push
mov
dec
imul
sub
pop
xor
es
dec
hlt
insl
sub
fcmove
stos
mov
ret
les
gs
ret
out
enter
rorb
loop
lds
arpl
cmp
jg
scas
jo
inc
imul
mov
cwtl
dec
pop
into
mov
add
inc
mov
xor
lods
cmp
bound
jb
lods
add
inc
inc
into
jo
lret
adc
pop
mov
lret
enter
testl
fcompl
sbb
shrb
out
xchg
xor
loop
sbb
jae
imulb
fwait
aad
loope
lret
loop
mov
add
adcb
das
shll
inc
mov
shlb
inc
mov
test
push
jno
mov
sub
lds
push
rorb
push
jl
insl
dec
mov
mov
mov
dec
push
add
sbb
loopne
sbb
gs
xchg
and
mov
movsl
addr16
jne
dec
jg
outsl
xchg
scas
dec
jg
fdivs
xchg
sbb
ljmp
fwait
mov
loope
mov
into
clc
mov
std
iret
fdivrs
mov
mov
push
or
xor
mov
clc
adc
mov
mov
mov
push
insb
mov
cmp
mov
jns
stc
jae
jl
int3
or
icebp
ficoml
pop
xchg
fwait
or
mov
xor
lcall
dec
pop
and
xor
jbe
lahf
addl
pop
into
sub
mov
or
fcomps
mov
insb
mov
mov
mov
stc
xor
gs
sbb
or
sub
in
mov
pop
scas
les
dec
int3
jg
inc
dec
fdivrl
xor
xor
mov
and
dec
pushf
push
add
sar
lds
les
rclb
into
or
push
adc
adc
mov
mov
or
inc
out
cmc
cmpb
sbb
movsl
js
arpl
xlat
jne
sub
cltd
mov
pop
sbb
mov
lahf
inc
jp
add
or
fidivrl
fsubrs
fldenv
iret
push
or
int3
clc
test
ret
incb
aas
adc
cmp
ljmp
lods
test
inc
je
or
sti
add
pop
adc
sbb
sbb
repz
notb
jbe
inc
hlt
cmp
icebp
adc
in
push
xor
daa
xchg
out
cli
and
inc
and
jnp
loope
and
add
adc
xchg
and
adc
dec
stc
add
inc
mov
jo
push
pop
scas
std
repz
lods
mov
cmc
inc
ja
sub
dec
in
and
mov
xchg
call
out
stc
orb
es
push
jnp
arpl
in
jle
mov
cmp
inc
inc
push
stc
out
push
add
jne
adc
lods
je
es
push
mov
call
sbb
lcall
lods
dec
and
mov
rcrb
adc
push
push
sub
sub
mov
nop
daa
inc
adc
outsl
testl
or
add
int
sub
push
mov
mov
scas
sbb
popf
cmp
cmp
mov
nop
lret
xchg
gs
daa
lock
jbe
gs
dec
mov
and
lret
aam
adc
bound
js
mov
fimull
sti
mov
lahf
push
cmp
sub
jne
pop
dec
pop
xchg
and
pop
mov
lret
pop
add
or
xchg
fwait
outsb
insb
mov
push
xlat
std
mov
test
adc
mov
cmpsb
fsubs
adc
cmp
popa
mov
ljmp
loopne
loopne
push
add
das
jb
adc
push
push
adc
into
add
jo
sti
test
fldt
dec
daa
lret
es
insl
xor
fwait
mov
into
pusha
jne
loopne
push
xchg
bound
cmc
in
fs
repz
into
jge
testb
incl
sub
fistpll
mov
cmp
cmp
inc
gs
add
nop
jns
jmp
movsb
dec
addr16
xchg
or
sbb
mov
mov
insb
mov
inc
xor
push
sbb
pop
shl
clc
shrb
cmpsb
loope
push
fbld
aas
lock
cltd
add
aam
and
inc
adc
gs
loopne
jb
pop
in
mov
mov
fldt
rorb
pop
sbb
rclb
stos
jae
xchg
jmp
or
out
in
test
pmaddwd
sbb
pop
inc
inc
int3
out
sbb
outsl
fyl2xp1
mov
cmp
ljmp
mov
sub
and
jecxz
scas
enter
je
fidivrl
sub
xor
aad
cli
in
scas
jmp
lock
jge
add
lret
pop
inc
inc
sbb
movsb
loope
pop
xchg
mov
sub
dec
test
fldcw
sub
imul
hlt
lods
fwait
xchg
push
pop
adc
cltd
sub
cli
stos
mov
sub
or
and
dec
jg
xchg
call
ds
orb
xchg
addb
bound
popa
adc
imul
dec
pop
xor
jae
cmp
ret
mov
fidivl
push
mov
mov
jp
mov
sbb
sub
stos
pop
mov
sub
pop
jbe
xor
cmpsl
fstl
push
subb
pusha
adc
sbb
ret
xchg
cmc
shl
mov
xchg
cmp
es
and
fbstp
pop
pop
add
jne
sub
cmpsb
push
mov
mov
inc
push
mov
push
popa
test
add
add
fwait
mov
scas
adc
pop
dec
mulb
xor
xor
and
insb
incl
je
jle
push
loope
mov
lcall
lock
lock
mov
shlb
ds
bound
fmull
js
je
push
xchg
pusha
or
loop
insl
sbb
xlat
repnz
cmp
pusha
lock
jae
sti
movsb
xchg
cwtl
out
roll
repz
lds
jno
out
xchg
std
and
imul
jo
and
fucomp
jecxz
out
pop
fs
lods
xchg
in
push
lret
jo
xchg
mov
push
aam
test
or
mov
insb
je
gs
out
sahf
mov
je
xor
pop
mov
dec
rorl
loopne
pop
call
lock
dec
add
ljmp
jp
xorl
clc
mov
cmp
push
and
jecxz
sub
dec
ret
mov
jo
pop
inc
ret
adc
jle
mov
xchg
fnsave
mov
decb
mov
mov
hlt
ds
add
cld
icebp
ficomps
dec
sub
dec
sbb
lock
cli
addr16
je
sub
add
jp
cmp
mov
xor
clc
lret
lahf
lahf
mov
jbe
mov
stos
data16
les
cwtl
and
xor
inc
in
aas
jne
xchg
xlat
sub
imul
mov
xchg
shlb
jle
and
sub
adc
mov
push
popf
lret
imul
lods
adc
inc
xchg
adc
repnz
mov
inc
push
cli
cmp
cmp
cltd
inc
enter
cmp
push
xchg
adc
mov
pop
add
jnp
mov
and
addr16
xor
repz
ret
es
xlat
cmp
ret
mov
push
mov
sbb
cmpsl
in
test
xchg
mov
push
jl
out
dec
cltd
or
xchg
pop
mov
push
xchg
and
mov
mov
sbb
mov
js
xor
imul
cmp
in
cltd
pop
pusha
xor
xchg
lret
push
pusha
sarl
pop
push
int3
out
addr16
xchg
push
xchg
dec
sarb
arpl
test
xor
iret
stos
inc
js
stos
pop
mov
dec
cltd
sahf
jecxz
xor
or
addr16
test
dec
push
inc
rcrl
insl
test
add
aas
mov
and
mov
stos
mov
inc
rol
lods
ja
xchg
pop
and
inc
xchg
add
adc
dec
sbb
fmull
add
lods
fs
cmpsl
or
mov
and
pop
add
icebp
jb
or
push
cwtl
cmpsb
in
xchg
in
sbb
je
outsl
push
das
inc
cmp
insb
add
lock
xchg
ss
les
inc
mov
mov
inc
add
xor
cmp
pop
scas
mov
popf
mov
xor
and
inc
in
stc
ret
test
mov
sahf
repnz
fbld
dec
shrb
sbb
jne
mov
xor
xchg
mov
fsub
jmp
dec
aam
int3
push
push
gs
aas
cmp
in
es
pop
mov
or
pop
in
xchg
ds
or
popa
in
lahf
ja
push
dec
inc
scas
sub
std
mov
in
jb
add
mov
mov
and
enter
cwtl
negl
sbb
or
fwait
push
xor
fs
xor
cmp
imulb
popf
jg
mov
hlt
add
push
jle
push
iret
fadd
push
imul
inc
xchg
enter
mov
pop
adc
cmp
data16
push
clc
jp
mov
jnp
fbstp
mov
das
mov
jns
dec
pop
cmpb
mov
add
lods
sbb
ds
xor
cld
sbb
add
push
mov
mov
mov
sbb
pop
push
sti
movsl
jns
adc
push
mov
cmp
mov
or
jl
xor
and
in
sub
jnp
nop
jmp
cmp
inc
mov
and
test
and
xchg
inc
test
fisttps
cmp
and
add
and
stos
pop
jo
pop
xlat
sbb
inc
xchg
pop
lret
dec
cld
push
stc
les
fiadds
sahf
jge
addr16
cmc
pop
faddl
faddl
dec
xchg
xchg
loop
out
stos
popa
xchg
stos
or
mov
push
or
mov
sbb
rcll
add
sbb
or
adcl
movsb
xchg
pusha
fadd
loop
push
insb
inc
adc
xor
add
sarl
cmc
je
push
mov
daa
push
mov
repnz
ret
jl
fimull
mov
adc
jno
jge
dec
cmpsl
out
push
outsl
and
frstor
inc
add
lods
sbb
test
je
sub
cmp
addr16
push
mov
fwait
dec
jge
mov
imul
addr16
hlt
pop
lods
add
adc
icebp
dec
loop
sub
cmpsl
dec
popf
push
popa
xchg
add
xor
in
fmull
or
mov
jg
jle
mov
rcrb
jecxz
jmp
imul
fadds
xchg
mov
fsubs
sub
movd
sub
pop
test
lea
sbb
jns
mov
push
jo
aas
lret
xchg
adc
repz
or
mov
lret
sbb
xchg
popf
in
pop
xchg
jmp
insl
into
mov
xor
and
mov
jmp
jo
jnp
loop
enter
test
stos
push
call
mov
cmc
js
nop
xchg
lahf
punpckhbw
scas
sahf
and
cmpsb
xor
inc
loop
pushf
and
mov
cmp
stos
xchg
pop
imul
imul
aam
int3
mov
inc
cmp
enter
xchg
mov
ja
aad
and
dec
gs
adc
xlat
jge
xor
cmp
dec
mov
inc
out
pop
or
cmpsb
shll
jle
mov
cmp
xchg
stc
and
and
pop
push
mov
sbb
push
push
mov
aas
std
lret
xor
stos
rolb
jge
mov
sub
aam
mov
pop
nop
sbb
adc
movsb
inc
xchg
test
mov
inc
jnp
ficompl
js
sbb
or
jecxz
sti
sub
rcrl
iret
sbb
jge
adc
add
dec
popa
stos
push
mov
pushf
sub
sarb
push
insl
roll
jle
mov
jge
cltd
push
add
add
cmp
mov
and
sbb
jmp
lret
outsb
imul
fisubl
xchg
mov
mov
cmpsl
test
movsb
rolb
mov
or
aas
xor
mov
sbb
mov
push
mov
mov
mov
sbb
sub
jnp
dec
je
mov
mov
add
pop
int
or
pop
js
jmp
loop
push
cld
push
mov
or
xor
cs
int3
cmp
std
sub
adc
in
mov
test
cmp
stos
stos
xlat
or
insl
sti
add
rcr
popf
mov
mull
repnz
icebp
aad
push
sub
data16
sub
sbbb
psubsw
in
in
in
fnstsw
in
adc
lret
inc
pop
dec
or
adc
push
ret
loop
imul
adc
push
push
negb
cmp
inc
test
out
cmp
pop
fwait
loop
dec
or
scas
cmp
jno
sbb
lret
lds
or
into
pop
sbb
shll
clc
adc
es
int
mov
sub
push
xchg
cs
pop
pusha
test
iret
pop
pop
int
aas
insb
ret
mov
pop
ss
stos
pushf
repnz
cmp
dec
jecxz
pop
iret
cmp
test
ficomps
sbb
add
push
sar
je
dec
push
adc
push
lock
inc
fists
inc
push
lea
mov
cltd
pop
imul
movsl
fs
in
icebp
in
les
sub
push
test
add
ret
dec
jb
mov
adc
add
and
shlb
mov
jb
aaa
fdivr
inc
jg
sub
popl
cs
or
test
xlat
cwtl
pop
mov
sahf
cmpb
or
add
addl
test
inc
ret
xor
lahf
or
mov
stos
ffreep
jecxz
adc
and
insb
movsb
test
jo
out
inc
mov
lcall
xor
mov
cmp
jns
push
fsubl
std
mov
push
popf
xor
test
hlt
pop
sbb
jns
loop
ror
jbe
shr
lds
hlt
mov
sarb
loope
mov
xlat
push
jecxz
fildl
nop
fsubrl
repz
mov
sbb
pushf
add
mov
cld
iret
and
jmp
sbb
sbb
aas
ja
mov
repz
jp
xlat
out
leave
enter
xor
dec
or
jle
jl
in
movsl
jbe
iret
shlb
fwait
inc
ss
leave
push
dec
mov
xchg
je
push
lea
shrl
fmuls
xchg
rorb
or
push
sbb
hlt
inc
stc
xor
xorb
addr16
mov
jno
push
vmaxpd
mov
mov
lock
jno
mov
or
stos
cwtl
test
cmp
sti
out
sti
push
mov
cmp
pop
sub
test
fwait
iret
mov
dec
sbb
xchg
out
fcmovnb
push
jbe
lods
repnz
out
and
cmp
das
fstp
aas
inc
jns
mov
clc
adc
ja
out
add
dec
inc
add
pop
add
add
pop
inc
pop
mov
cmp
mov
jo
mov
repnz
inc
mov
js
pushf
xor
pop
ds
and
lahf
cmp
sahf
jns
lds
aam
fcoms
sbb
add
xchg
test
xchg
fdivl
jno
pop
mov
test
push
out
lahf
push
out
scas
addr16
dec
mov
xlat
lahf
ds
aad
push
dec
inc
dec
ja
pop
icebp
push
popa
xorb
pop
js
dec
test
adc
rcll
and
xchg
mov
popa
cltd
loop
cwtl
add
sbb
popf
jae
jecxz
xchg
insb
sbb
push
call
pop
sub
outsl
movsl
in
lds
mov
and
sbb
je
movsl
scas
int
sbb
repnz
addr16
cmp
sbb
icebp
mov
and
hlt
xchg
dec
js
jae
daa
lock
adc
call
cwtl
in
loopne
std
aas
cmp
in
test
pushf
mov
pop
xchg
cltd
cmp
decb
pop
repz
mov
sbb
jne
dec
mov
mov
fcmovnbe
in
dec
lea
cmpsb
icebp
stc
decb
adcl
out
mov
mov
inc
ja
je
ss
imul
ret
sbbb
sarb
pop
test
sub
inc
loop
mov
stos
mov
add
hlt
cld
in
mov
ret
and
sub
mov
jne
rcrl
mov
mov
xor
jo
push
pop
add
rolb
cmpsl
cltd
mov
inc
push
sub
cwtl
jmp
popf
andl
xor
and
push
jmp
into
push
fisttps
mov
dec
sub
cmpsl
jne
lcall
mov
mov
stos
int
hlt
push
cld
enter
pop
xlat
ret
mov
cmp
mov
jmp
cmp
xor
jle
cli
shlb
pop
mov
add
outsb
lea
lock
fldcw
int3
lret
inc
jnp
sbb
pop
jne
push
jecxz
and
je
mov
stc
setnp
lcall
xor
xchg
cmp
jno
mov
mov
mov
ljmp
test
test
or
mov
and
xor
or
notb
data16
add
jns
sbb
mov
push
call
push
in
call
mov
inc
or
aad
pop
sub
loop
cmc
mov
jb
movsb
shrl
push
jge
dec
and
or
out
xchg
xchg
cmpsb
clc
insb
push
and
cmp
js
mov
cwtl
fwait
sbb
mov
push
xchg
jecxz
and
aam
jg
add
ljmp
loopne
ljmp
cmpsb
test
sbb
orb
jmp
sahf
sub
clc
mov
inc
xor
add
push
sub
dec
cwtl
adcl
push
addr16
jns
jae
lock
dec
pop
sub
test
not
movsl
mov
pop
stos
movb
mov
and
stos
fmuls
xchg
lcall
sbb
scas
or
push
or
incl
adc
xchg
fists
pop
repz
pop
out
cmpl
sub
mov
aad
dec
adc
test
sub
sbb
mov
in
jl
pusha
lea
inc
mov
imul
ret
les
fldl
test
cmp
fs
out
js
ss
mov
aas
in
sahf
sub
mov
push
mov
fists
push
ret
je
adc
sti
test
sbb
adc
leave
mov
loop
push
out
aam
ja
jae
scas
das
mov
sti
jb
push
test
xor
cmpsl
dec
ljmp
inc
icebp
mov
lret
shll
pop
clc
repnz
lods
fimuls
or
adc
xor
popa
xchg
push
ja
cmp
push
dec
adc
pop
daa
xchg
jl,pn
test
les
xor
mov
std
and
fidivl
xchg
cmpsb
mov
sbb
outsl
mov
out
or
pop
xchg
hlt
fst
cmp
dec
sub
dec
movl
pop
dec
test
or
jle
push
dec
fmuls
fcomp
push
dec
out
stos
aam
cmp
pushf
mov
hlt
dec
loop
jle
jge
test
cmp
nop
dec
mov
lcall
or
cmc
add
push
adc
repnz
and
add
push
shr
orw
insb
cmp
xchg
clc
sbb
aaa
cmc
adc
out
inc
push
icebp
xchg
lahf
xchg
jnp
sti
les
pop
sbb
xchg
clc
in
mov
jl
dec
sub
je
add
jp
or
mov
imul
jbe
push
movb
xchg
mov
mov
cmc
rcll
mov
in
xor
fwait
cmp
and
mov
loopne
pushf
scas
push
out
out
inc
add
push
sub
pop
xor
fldenv
jb
mov
aad
clc
adc
adc
sbb
mov
mov
sbb
jmp
cmp
sub
sarl
popa
int
je
cmc
call
in
lret
std
jnp
sub
inc
mov
pushf
cmp
in
or
in
mov
sbb
mov
cmp
mov
sub
das
ds
dec
jbe
lcall
add
ja
fcomps
rorb
add
sub
dec
enter
mov
cltd
bound
ficomps
pushf
std
mov
aad
cmp
mov
cmp
add
pop
icebp
push
cli
scas
int3
aas
lcall
inc
or
adcl
aas
adc
dec
divl
std
pop
cmp
mov
jae
icebp
push
outsl
les
jb
push
into
jmp
sub
sti
mov
mov
lock
mov
xchg
clc
subb
loopne
push
inc
xor
cmp
add
aad
mov
scas
pop
cli
pop
test
mov
scas
jge
ret
aas
mov
inc
mov
add
stc
or
js
cli
cmp
hlt
inc
sarl
aas
jae,pn
fisttpll
mov
sarb
out
addl
jb
movsl
and
mov
cmpsl
jns
jo
add
in
add
jecxz
jg
mov
ss
cmp
hlt
lret
jb
aam
int3
mov
popa
lret
mov
jno
xlat
fucomp
loop
sbb
mov
test
push
icebp
insl
in
ret
cwtl
ss
push
mov
into
mov
jae
sub
push
int
outsb
dec
or
out
cmc
sbb
bound
pop
cwtl
pop
mov
xchg
inc
inc
mov
sub
lods
add
pusha
jnp
lret
call
movsl
mov
jb
movsb
iret
aad
cmp
popf
lods
in
ret
movsl
dec
loopne
mov
into
pop
sti
sbb
cmp
fwait
in
ljmp
ja
pop
shl
push
fisubrs
out
pusha
fidivrl
and
inc
out
ljmp
les
je
loope
dec
sub
mov
and
adc
xlat
or
jns
jecxz
add
pop
add
inc
jle
xchg
xor
jns
and
into
in
sbb
fucom
add
mov
mull
pop
add
pop
daa
pop
fdivl
imul
push
scas
enter
xor
mov
jbe
lahf
fnstenv
mov
adc
add
sbb
movsl
aad
xor
xor
jns
mov
aas
outsb
jo
test
aam
out
imul
pop
stos
mov
push
push
sub
mov
mov
popf
dec
jmp
mov
js
popf
aad
test
inc
mov
aam
imul
scas
aad
mov
cs
ss
push
push
cwtd
clc
inc
ficoml
mov
sarb
mov
pop
mov
test
push
sbb
lods
cltd
xchg
add
in
ffreep
jb
lret
repz
and
int3
lods
sub
and
shll
cwtl
imul
mov
jne
iret
rcr
dec
mov
cmp
push
sbb
movsb
jecxz
xchg
cmc
cmc
sbb
pop
repnz
mov
push
icebp
xor
imul
xchg
jbe
sub
fdivs
stos
cmc
mov
mov
inc
mov
rolb
or
and
cmp
ljmp
data16
mov
mov
outsl
test
push
or
jne
mov
aad
dec
cltd
jns
cmp
add
xchg
and
divb
lods
jns
add
cmpsb
cmp
sbb
das
in
xchg
fs
sbbl
je
sbb
push
les
sbb
pop
insb
addl
and
xchg
add
inc
je
insl
mov
push
loope
xorl
rolb
mov
cmpps
ret
push
ret
jae
sub
fcmovb
add
arpl
mov
mov
cmc
and
jae
xchg
aam
pop
adc
jecxz
in
sub
insl
sub
pop
addr16
adc
cmpsb
adc
jae
cmp
int3
test
cmp
adc
mov
jg
jb
pop
cmp
inc
jmp
and
jne
fistpl
add
jno
lea
push
cmp
xor
xchg
ret
mov
and
or
adc
xchg
int
popa
test
mov
dec
imul
jns
jmp
push
add
les
out
sarb
js
inc
cmp
or
inc
mov
mov
push
pop
sbb
pop
pop
push
push
push
sbb
or
and
xor
call
sbb
cmp
insl
sbb
inc
push
push
jle
lds
xor
stos
sti
jns
sub
jge
xor
mov
mov
sub
cwtl
mov
stos
sub
sub
ret
out
and
fwait
xchg
ret
std
lea
push
pop
push
das
or
dec
fnsetpm(287
mov
cmc
jp
lcall
int
dec
xor
test
xor
testb
sub
jp
cmp
test
testl
fnsave
mov
test
pusha
ljmp
pop
neg
imul
std
xchg
cli
cmp
shrb
sti
and
or
mov
xor
mov
push
test
xor
jno
ja
adc
jecxz
sarb
push
aas
out
push
inc
shlb
sub
cmp
pop
cmp
pop
imul
push
or
mov
in
inc
lret
aas
adc
adc
dec
mov
or
outsl
test
testb
xor
out
in
sub
mov
movsb
dec
cs
js
cmp
ror
repnz
rol
xchg
insb
xor
pop
insb
movsl
arpl
arpl
pop
jecxz
jp
aas
sahf
xchg
inc
cmovo
call
test
mov
test
imul
lcall
cmpsb
clc
add
scas
cltd
addr16
cmp
push
nop
fadds
leave
xchg
and
mov
fwait
fsubl
sbb
jno
stos
adc
mov
adc
xchg
pop
test
mov
enter
fistl
test
cmp
inc
clc
pavgw
sub
xor
lret
push
js
daa
sti
jecxz
sbb
not
mov
and
scas
dec
ja
inc
adc
pop
jmp
mov
nop
rcrb
mov
sbb
or
addr16
js
stos
pop
add
cwtl
or
int
lods
aas
fldenv
xor
pop
pop
aaa
lret
shll
inc
mov
roll
repnz
sbb
test
mov
adc
add
add
clc
xchg
sti
xchg
push
call
jae
and
add
in
lock
inc
add
vsubps
insb
and
push
bnd
mov
shll
xchg
xor
test
sub
in
jecxz
dec
xchg
mov
adc
out
idivl
enter
aas
rcr
sbb
lret
cs
lret
stos
loopne
inc
enter
jnp
and
aam
or
jae
rcrb
jns
ds
out
cmp
cli
jle
stc
inc
jb
fmuls
cmp
rorl
test
and
inc
pop
enter
pop
nop
xchg
stc
push
test
or
sub
sarl
mov
dec
aas
mov
outsb
xlat
pop
imul
or
mov
fisttps
cld
scas
push
xchg
push
pop
mov
inc
std
jo
rolb
insl
fsubl
mov
fprem1
and
pop
jnp
clc
stc
or
mov
inc
jno
sbb
mul
cmp
jmp
mov
aaa
push
cmp
pop
mov
mov
xchg
jae
mov
sti
mov
jl
clc
movsb
inc
daa
std
bnd
lcall
mov
sbb
mov
add
push
ret
aad
mov
mov
add
jp
jne
das
out
addl
inc
inc
adc
push
mov
adc
cmpsb
cmc
je
mov
bound
xchg
lret
sbb
mov
mov
inc
and
mov
dec
stos
push
cmp
lret
sbb
xchg
arpl
aas
sub
sub
pop
cmp
mov
jo
sbb
cmp
pop
jns
pop
cmp
fimuls
ja
popf
dec
mov
push
daa
dec
pop
cwtl
addr16
push
mov
js
inc
jns
inc
lret
imul
fcoms
pop
push
sbb
add
xchg
repnz
jne
pop
in
pusha
call
mov
fimull
aam
inc
fs
xchg
nop
or
push
xor
push
rclb
outsl
shll
jne
popf
xchg
and
dec
jg
jp
into
pop
icebp
test
lcall
faddl
mov
rclb
add
ljmp
fs
xor
lock
dec
sbb
xor
out
inc
stos
pusha
mov
pop
enter
rcrb
ss
push
sub
gs
adc
cmc
add
aad
lcall
fcmovne
subb
dec
jmp
mov
outsl
loop
sar
inc
cmp
or
add
xor
addr16
int
sub
les
adc
in
shll
and
adc
out
dec
xor
jbe
fdivs
and
jecxz
mov
push
xlat
jb
xor
out
cltd
in
jb
sub
xor
xlat
sbb
hlt
xor
inc
adc
and
mov
mov
fwait
pop
stos
jle
dec
je
repz
test
push
push
sub
shrl
inc
cmc
xor
aam
hlt
jb
push
xchg
push
inc
loop
sti
adcl
jg
gs
cmp
cmp
cmp
cmp
adc
lds
int
mov
sub
outsb
cli
fmuls
clc
sbb
jne
pop
mov
sub
mov
pop
pop
shl
mov
popa
test
dec
add
hlt
sbb
fwait
push
jmp
adc
inc
cmpb
add
pop
add
ret
es
pop
movsb
cmp
xor
inc
dec
mov
fwait
jnp
xor
in
jns
cmp
push
xchg
mov
jno
and
mov
movsb
scas
mov
pusha
rcrl
mov
push
mov
outsl
sub
and
inc
push
pop
adc
mov
popf
pop
adc
adc
enter
call
out
mov
fnsave
scas
mov
jae
lock
mov
sar
shll
jo
mov
pushf
bnd
lods
data16
push
outsb
cmc
ficomps
mov
sahf
arpl
push
adc
orl
gs
outsb
js
fsubr
sub
mov
mov
rcrb
nop
in
stos
sbb
add
cmp
stc
or
sub
adc
mov
rcrl
mov
ljmp
orl
clc
xchg
jne
push
adc
xor
xchg
cmp
sub
ljmp
outsb
out
add
fcmove
pusha
scas
movsl
inc
dec
dec
loope
and
pop
push
mov
lock
lea
bound
jle
and
imul
dec
mov
mov
insl
cwtl
push
loope
test
or
xorl
clc
decl
idivl
mov
xchg
push
sub
sbb
pop
nop
sub
sbb
xor
pop
ljmp
cmc
cmp
pop
dec
scas
add
cmp
test
or
ret
testb
into
scas
cltd
mov
cmp
enter
repnz
cmp
mov
mov
rcl
xlat
mov
mov
xor
mov
xor
add
xchg
insl
sub
fdivrs
jno
out
jne
clc
in
in
mov
pop
mov
add
mov
pop
mov
out
jmp
nop
aam
iret
fwait
and
xchg
sbb
data16
out
dec
mov
sub
nopl
out
in
int
sub
nop
jbe
push
iret
and
fucomip
inc
sbb
mov
sub
cmp
test
divb
jne
sti
pop
dec
in
cmpsb
outsl
jb
cmp
out
and
xchg
lods
inc
in
push
iret
mov
ljmp
lds
lahf
jne
daa
push
jnp
daa
dec
mov
sbb
or
aam
sub
addr16
add
add
leave
or
xchg
cmp
js
aad
iret
lea
cmc
scas
sub
jmp
dec
imull
mov
int
cmpl
and
mov
ss
pop
pop
rolb
dec
and
in
sbb
stos
movsl
sub
adc
movsb
inc
lods
pop
jle
push
sar
xchg
mov
mov
mov
mov
pop
mov
adc
pop
push
xorb
or
cmpsb
dec
lahf
lea
and
imul
mov
ret
adc
cmp
fucomi
int
cmp
outsb
xlat
aaa
es
sahf
and
call
cwtl
jp
daa
rolb
movb
test
adc
in
mov
cld
or
or
jmp
and
es
addr16
push
cmp
data16
sub
mov
jmp
lock
inc
adc
mov
addr16
push
mov
sub
cmp
cltd
dec
sbb
popf
aaa
xchg
gs
push
mov
sahf
jbe
jmp
andb
movsb
inc
cmp
in
arpl
jg
mov
or
into
aam
insb
aaa
sub
and
arpl
add
mov
shll
int
mov
test
adc
cmp
inc
fs
xchg
movsl
mov
inc
xor
pop
mov
xchg
inc
lea
xchg
fcmovne
hlt
test
xchg
xor
inc
test
mov
mov
ljmp
sub
int
and
or
or
inc
shll
push
nop
and
sbb
fisubs
call
add
hlt
or
push
mov
cltd
mov
push
rcrl
xor
jecxz
negl
loop
jecxz
das
jmp
jb
popf
lds
cmpsb
adc
push
jne
rcll
lea
lret
clc
pop
jno
cmp
push
add
rol
fnstsw
and
inc
adc
loop
lock
mov
sbb
sbb
lret
aaa
lds
repz
orl
mov
adc
out
add
push
dec
sti
mov
jb
scas
faddp
ja
cmpsl
stos
cmpsb
add
notb
xor
push
aas
sub
pushf
pop
pop
or
pop
push
mov
push
mov
jae
testb
add
cmpsb
and
xchg
pop
sarb
xor
xlat
mov
cmp
nop
add
mov
mov
roll
movsb
lahf
push
cli
fs
xor
adc
shl
dec
mov
mov
fwait
scas
jb
daa
repz
sub
pop
inc
push
cmp
or
rcrb
out
shlb
into
xor
mov
jbe
push
fsubs
dec
push
mov
jne
dec
outsl
fdivrs
lret
cmp
cmp
nop
movsl
std
sub
mov
rorb
jo
cld
mov
or
mov
adc
mov
lock
add
jl
jmp
mov
add
push
std
and
call
ja
mov
mov
push
cmc
sar
or
sahf
test
call
ss
outsl
mov
lods
mov
xor
cltd
leave
xor
hlt
aas
or
dec
and
lods
aas
shll
pop
and
mov
or
adc
cwtl
imul
xchg
lret
in
popf
les
addr16
leave
clc
xchg
inc
sub
or
and
dec
push
js
jg
pop
in
jb
int
mov
movaps
lods
or
jnp
pop
fcoms
popa
cmpsl
insl
sbb
lcall
andb
leave
xor
and
inc
dec
rolb
nop
or
loopne
enter
out
pop
adc
test
shl
mov
mov
clc
or
cmp
jbe
nop
dec
and
aas
xchg
ljmp
stos
or
fsub
sbb
sub
outsl
inc
outsl
in
repz
cld
rclb
iret
and
test
decl
push
inc
pop
gs
pop
test
leave
in
call
out
aam
aam
inc
push
adc
loop
hlt
xchg
and
add
sub
int
imul
int
jmp
inc
xor
addr16
pop
outsl
std
repz
iret
test
push
loop
push
outsl
sub
cmp
pop
arpl
push
sbb
push
and
scas
movhps
popf
aas
pop
push
mov
adc
mov
leave
pop
das
inc
out
negl
pop
aad
cli
pop
js
push
bound
sbb
imul
inc
icebp
mov
ds
mov
or
aad
sub
rolb
mov
in
sbb
pop
mov
ficoms
or
jbe
shrb
loop
rorb
sub
inc
fs
fdecstp
shl
cltd
in
test
loop
mov
push
xor
push
repnz
adc
push
mov
outsl
lret
aaa
call
dec
leave
clc
addl
in
pop
js
sub
insl
push
dec
and
out
sti
repz
cltd
into
jg
cmpsl
mov
ret
inc
bnd
xchg
aam
mov
mov
lcall
jnp
rcr
add
mov
mov
xchg
in
xchg
pop
lcall
divl
in
inc
jp
js
jno
test
stos
mov
add
pop
std
imul
mov
sti
mov
dec
test
fdivr
mov
mov
mov
cmp
nop
stc
popf
fsubs
sub
inc
repnz
sbb
test
mov
add
out
in
mov
or
into
pop
sbb
xor
adc
aas
cld
jmp
adc
mov
pop
rcrb
ret
jmp
xchg
ret
push
aad
lds
add
mov
aaa
pushw
pop
dec
and
mov
test
jnp
cmp
icebp
add
shll
jnp
lods
push
das
movsl
jge
arpl
add
daa
icebp
mov
out
das
lock
daa
sahf
mov
add
loope
aas
jno
fldcw
test
insl
dec
sub
addr16
lods
neg
pop
dec
bound
outsb
xchg
bound
or
in
mov
xchg
jg
xor
and
stos
jp
and
dec
xchg
xchg
xlat
mov
movsb
mov
cmp
iret
pusha
add
insl
jno
adc
es
outsb
ret
out
rcll
sub
pop
cmp
adc
pop
test
lret
cmp
xor
hlt
icebp
fistl
jl
divb
and
pusha
xor
jmp
xor
add
fimull
mov
daa
push
lock
mov
clc
in
cs
std
sti
repz
jge
mov
xchg
ss
or
popa
inc
rolb
sub
outsb
xor
flds
fldl
dec
adc
push
loop
jmp
out
lahf
aad
movsb
incb
lock
dec
sbb
icebp
movsb
int3
mov
pop
cld
iret
push
popa
push
add
negl
je
inc
fwait
add
and
fsts
cmp
pop
test
aam
sub
or
aad
mov
dec
lahf
jo
mov
cwtl
aas
enter
or
dec
inc
aam
jp
test
cmp
push
dec
or
jnp
cs
mov
stos
dec
pushf
in
and
mov
call
xor
pushf
and
out
inc
mov
xor
ja
rcrb
xor
fcomip
mov
inc
xor
imul
in
mov
jmp
mov
mov
js
ss
imul
scas
cli
or
mov
rcr
rclb
not
arpl
setp
lret
push
jmp
cmpsl
or
in
test
mov
jns
popa
imul
fstps
addr16
out
inc
and
imul
jno
pop
ljmp
pop
out
xor
or
loop
enter
scas
sahf
les
and
mov
out
je,pn
and
push
iret
sbb
inc
jae
mov
or
and
jg
fcompl
dec
testb
mov
aas
xor
mov
in
das
add
sbb
mov
rcl
out
adc
jp
rcll
out
js
push
push
cmp
outsb
sub
cmp
daa
cld
cwtl
loope
lods
out
lea
gs
lea
stc
xchg
cmpsl
into
and
movsb
rcll
fdiv
sub
dec
lret
xchg
ret
mov
repnz
pop
jp
mov
xlat
pop
xchg
inc
cmp
xchg
clc
sub
mov
cmp
dec
inc
inc
add
jne
dec
arpl
ror
inc
cmp
je
jge
sub
mov
mov
fistpl
cld
addr16
cltd
mov
jecxz
jbe
out
cltd
call
and
cli
pusha
xchg
jp
or
sub
inc
xchg
inc
adcl
jmp
stos
sarb
jmp
sbb
xor
push
xlat
jb
movsb
popa
xlat
sbb
sbb
xchg
fimull
cmp
popf
outsl
add
sbb
adc
jl
mov
in
mov
scas
xor
pop
in
clc
xchg
sbb
push
imul
pop
or
add
push
fistl
in
cwtl
add
mov
pusha
shll
enter
les
bound
xchg
add
or
aam
pop
jmp
sbb
mov
push
in
and
cmp
inc
pslld
les
pop
xor
xor
arpl
add
addl
xor
repz
inc
arpl
mov
inc
sarl
movsb
mov
into
or
or
xor
pop
ret
ljmp
xchg
ror
push
into
pushf
push
pop
incl
das
jp
sub
pusha
rcll
rcrb
xlat
into
popf
cmpsb
cmp
stc
lcall
in
fs
repnz
xchg
cmpsl
std
add
xchg
fcoml
xor
test
inc
mov
roll
fwait
nop
mov
lods
idivb
dec
jl
clc
mov
clc
dec
je
fs
push
cmpb
ljmp
dec
ret
push
xchg
sahf
into
sbb
loop
mov
add
loop
sahf
sbb
arpl
push
xor
sub
repz
fdivl
cs
rcl
enter
xor
dec
lret
das
inc
int
pop
negl
inc
jg
cmp
and
jp
sti
pop
bound
aam
jp
xchg
sbb
int
mov
inc
enter
test
jg
icebp
out
add
pop
xlat
enter
push
lock
cltd
pop
mov
xor
inc
cli
add
or
mov
out
xchg
iret
xchg
mov
adc
and
and
orl
mov
pop
idivb
popf
add
cmpb
rcll
fnstcw
loop
dec
or
lret
ss
mov
nop
mov
ret
in
mov
adc
sbb
pop
mov
jae
lock
push
inc
pop
int3
cli
push
out
cmp
or
outsb
and
std
insb
sub
xchg
aas
mov
lods
in
jae
cli
lcall
inc
clc
and
adc
repnz
mov
pushf
mov
scas
sub
push
jle
lret
orb
push
stc
sub
xor
xor
sbb
xor
dec
jns
xchg
lock
xchg
and
push
push
insb
sbb
pop
xchg
cld
adc
adc
adc
iret
and
inc
mov
ljmp
push
jmp
sbb
lds
repz
or
pop
aas
jnp
test
cmp
stos
test
add
outsb
fcmovne
cmpsb
jno
inc
cld
inc
and
or
jbe
mov
movsb
aaa
test
pop
jecxz
inc
cmp
xchg
pushl
adc
jmp
mov
popw
icebp
xchg
xor
push
xchg
out
jg
adc
fisubl
inc
out
jg
or
push
add
mov
jnp
hlt
imul
cmpsb
aas
mov
dec
cmp
sbb
dec
jns
push
fwait
mov
fildl
or
xor
xchg
dec
stc
in
fcmovnbe
pop
cmp
inc
push
adc
shll
xor
outsb
inc
mov
jno
ljmp
mov
mov
push
xchg
das
pop
popa
jno
sub
jae
hlt
insl
in
pop
xchg
inc
orl
cmp
fildll
ja
les
loopne
rcr
es
aaa
jne
jp
arpl
mov
aaa
iret
enter
dec
mov
xchg
les
lret
mov
pushf
lret
dec
xchg
adcl
xor
movsl
lret
sbb
rcr
sub
je
mov
push
movsl
int
cmp
sbb
outsl
lret
dec
add
xchg
push
xor
mov
add
loopne
fadds
pop
leave
mul
pop
mov
pop
aaa
sub
xchg
arpl
imul
bound
fxch
imul
xchg
or
dec
mov
nop
xor
sub
sbb
mov
mov
push
jns
pop
lods
inc
pusha
jmp
inc
outsl
pop
xchg
scas
mov
imul
packsswb
or
pop
les
mov
push
sbb
mov
dec
pushf
mov
enter
push
mov
fcmovne
xor
jg
out
jns
mov
jge
movd
enter
push
ja
adc
jmp
inc
fcmovnu
or
push
mov
mov
mov
xor
dec
sbbb
jae
add
and
jb
aaa
lods
sub
aas
repnz
dec
mov
mov
std
ds
in
js
xchg
cmp
nop
mov
sub
sbb
imul
add
mov
mov
nop
mov
outsl
nop
mov
mov
pop
cmpsb
out
cs
imul
sub
pop
fstpt
in
xor
fstl
mov
fisubrs
es
cli
sub
xchg
mov
clc
scas
mov
lcall
mov
repnz
push
dec
daa
ucomiss
bswap
in
push
out
jno
out
inc
stos
xchg
lods
jle
jb
jg
int
sbb
xchg
add
xor
jmp
xchg
xor
cmp
xchg
cmpsl
push
adc
xchg
addl
add
pop
test
pushf
repz
mov
mov
in
rclb
pop
scas
std
out
popf
dec
daa
push
jmp
repz
and
lods
cwtl
pop
sbb
sub
enter
mov
inc
push
imul
imul
idivb
imul
gs
repz
lods
shrl
stc
push
in
adc
pop
jmp
or
ret
stos
rolb
mov
dec
imul
pop
mov
adcb
pop
scas
int3
pop
inc
jle
pop
cmp
mov
xor
leave
repnz
cwtl
or
jbe
out
mov
push
movsb
lahf
push
cmp
jmp
cmpsb
xor
sbb
daa
or
iret
insl
sbb
push
out
jmp
xchg
sbbl
out
stos
mov
and
lret
fsubs
and
sbb
cmpl
test
shll
add
xchg
mov
cmp
std
adc
mov
fcoms
jns
jo
sbb
mov
jmp
sbb
push
ret
push
jmp
xor
add
xor
jle
out
mov
push
push
stos
xor
and
test
inc
inc
or
hlt
push
xchg
inc
sahf
stc
add
fcomps
scas
cwtl
and
inc
ljmp
mov
enter
push
jnp
or
xor
bound
in
imul
sub
sub
jnp
lods
ret
pop
pusha
sub
insl
stos
mov
in
into
gs
test
fsubrl
insl
mov
call
pop
adc
clc
test
jno
lea
stc
dec
mov
loopne
lods
mov
dec
xchg
dec
enter
push
cmp
mov
cmp
sbb
aad
in
outsl
outsl
mov
btr
push
and
adc
pop
out
dec
dec
rclb
movsb
ficompl
lret
xchg
xor
out
mov
lock
mov
lcall
lret
mov
pop
jns
fcomi
test
mov
iret
insl
filds
push
roll
loope
inc
inc
scas
push
xor
iret
nop
cmpsl
mov
xor
cmp
fildl
pop
cmp
cltd
insl
or
sub
lods
xor
fists
vpmuludq
repnz
and
dec
push
das
clc
xor
imul
and
xlat
mov
inc
ret
outsl
sub
dec
mov
pop
aas
rep
add
cltd
xchg
stos
jmp
cmp
negl
arpl
add
insl
inc
cmc
es
rclb
stos
cmp
dec
jae
or
dec
inc
dec
insb
cwtl
or
push
loop
pop
sbb
test
lahf
aam
addr16
cmovne
pop
out
dec
mov
mov
pop
leave
loopne
mov
jg
push
pop
stos
add
jg
push
jmp
pusha
sub
lcall
jno
xchg
dec
fcoms
lret
outsb
and
jp
inc
loope
shrb
inc
xor
mov
push
jecxz
iret
or
int3
rolb
leave
loopne
jle
js
xchg
incb
push
movsl
dec
inc
jno
xlat
mov
inc
and
mov
stos
in
dec
jb
jle,pt
sbbb
test
xor
pop
movsb
insl
ds
sbb
xor
mov
sub
jl
mov
lods
sbb
aaa
push
and
stos
rorl
xchg
int
sti
pop
mov
push
xchg
xchg
ds
bound
jp
int3
in
or
sub
int
mov
outsb
rcrb
cmp
xlat
stc
dec
aas
add
addr16
in
inc
push
or
addl
popf
push
dec
push
sub
insb
das
jnp
xlat
dec
mov
out
push
dec
jnp
add
push
lcall
mov
outsl
inc
sbb
cmp
push
es
lcall
xor
ret
lods
scas
ja
pop
xchg
lcall
ds
aad
dec
or
ljmp
sbb
jmp
dec
outsl
mov
imul
mov
xlat
xor
mov
xor
test
scas
push
test
add
jo
loope
pop
sbb
xor
test
add
adc
inc
cmp
or
inc
push
scas
aas
sbb
inc
xchg
test
ja
xchg
aam
fistpll
push
or
mov
sub
ljmp
in
ds
jae
emms
in
arpl
pushf
add
fimull
mov
add
aas
xchg
fiadds
in
mov
mov
or
cmp
mov
mov
stos
popa
push
jns
or
mov
das
ss
cwtl
mov
loope
push
xlat
fnstsw
xor
fistps
outsl
jp
xlat
ja
aaa
dec
out
inc
fistpl
or
leave
ja
mov
repz
mov
stc
push
cmpsl
cld
mov
lock
push
xor
mov
adc
jle
sub
call
out
movsb
inc
and
repz
popf
stos
inc
push
cld
sbb
and
ja
jp
cmp
out
aaa
int
and
sbb
inc
loope
mov
in
xor
jbe
add
and
pop
aas
jmp
and
xchg
iret
jb
adc
mov
pop
test
jo
cmp
pop
and
mov
add
out
inc
sbb
jns
idivb
movsb
ds
jnp
dec
test
icebp
mov
mov
xchg
xor
pushf
enter
test
sub
loopne
fcoms
lock
out
loop
push
mov
push
mov
cmp
jns
out
or
outsl
sahf
ja
mov
sbb
ret
inc
add
in
cwtl
xchg
aas
push
mov
std
mulb
cmp
xor
cltd
lods
aam
jp
pop
sub
sahf
mov
pop
pop
push
sbb
dec
sarb
push
cmp
movsb
push
bound
push
cmp
mov
pop
stos
adc
lds
and
nop
push
inc
mov
jge
sbb
jmp
cmp
jp
lret
rolb
add
mov
mov
mov
dec
sub
xchg
sbb
push
mov
insb
lds
lock
pushf
cli
xor
out
mov
lds
dec
xor
and
pop
dec
and
mov
push
push
test
fwait
gs
addb
mov
ret
jp
insl
repnz
shrl
mov
lods
lret
out
jmp
popa
xor
mov
pop
sub
into
pop
cltd
push
inc
sbbl
sub
arpl
and
mov
pop
aaa
lret
jbe
repnz
movsl
dec
stc
outsb
push
loope
sahf
adc
push
pop
adc
nop
dec
inc
lods
outsb
jns
jns
pop
mov
fmulp
add
push
ds
jmp
lock
lahf
pop
and
or
jns
bound
scas
add
push
xor
xchg
sbb
movsl
add
sub
xor
xor
and
cmp
dec
test
mov
dec
sti
or
shlb
rcrb
test
push
mov
sub
popf
sbb
in
xchg
ret
add
xchg
inc
xor
lret
cmp
orl
and
push
negb
pop
adc
icebp
test
arpl
push
subl
pop
mov
insl
adc
sub
mov
ljmp
mov
imul
cmp
cmp
add
stos
mov
les
dec
iret
mov
sbb
es
adc
pop
fdivrs
daa
das
fcomps
addr16
mov
cmp
and
push
mov
in
js,pt
daa
mov
push
and
pop
inc
aam
cmp
imul
push
cmp
mov
in
xor
stc
fwait
stos
mov
sbb
sti
and
jg
jns
ja
rcrl
rcrl
ja
and
dec
jno
jnp
pop
and
repnz
xlat
mov
xor
inc
and
aas
mov
lods
decb
stc
sub
popf
mov
dec
and
enter
fwait
hlt
into
stos
pushf
and
iret
add
xor
inc
inc
mov
fsubl
pop
jns
and
and
sbb
lahf
fidivrs
sub
shlb
dec
aas
call
insl
mov
inc
mov
call
push
int
push
sub
dec
inc
int
pop
mov
fdivrs
inc
mov
push
mov
repnz
aas
ficoms
pop
sub
sbb
sbb
add
push
jne
out
repz
lret
fists
dec
adc
sub
loope
scas
sbb
enter
shrb
mov
jecxz
daa
add
fucomp
cmp
sub
xchg
jne
imul
sbb
push
ljmp
sub
mov
mov
pop
adc
jb
fwait
and
and
mov
js
pop
xchg
xor
jno
mov
dec
das
dec
push
cmp
fwait
push
adc
mov
fcmovnb
dec
mov
inc
mov
sbb
ret
adc
insl
ja
mov
divb
test
ds
push
xorl
imul
pop
out
pop
test
in
in
lret
sti
pusha
scas
cmpb
cmp
add
cltd
xchg
sbb
pop
mov
movsb
insb
int3
stos
in
mov
add
js
jnp
push
push
fnstcw
jnp
jg
mov
aaa
jnp
mov
rolb
pop
xor
push
mov
lcall
or
data16
fisubrl
addr16
mov
fsubrp
loopne
pushf
fsubl
flds
dec
sub
xor
stos
cmc
stc
dec
push
mov
push
sbb
push
push
or
lock
stos
sbbb
dec
mov
imul
adc
sbb
mov
jnp
ja
jb
loope
mov
xor
mov
inc
in
cld
mov
imul
popl
addb
std
add
sbb
inc
sub
add
mov
mov
push
mov
aad
aam
jnp
xchg
nop
mov
mov
fcompl
ja
je
add
inc
fists
sub
sub
inc
icebp
mov
movsb
inc
fstpt
cs
arpl
rorl
mov
rol
inc
xchg
add
iret
call
mov
mov
push
dec
xor
xchg
out
xchg
out
mov
jmp
jge
je
sub
or
fistpl
dec
xor
in
sub
xchg
icebp
repz
inc
jne
loope
aaa
outsl
sub
stc
push
addb
inc
jo
inc
or
push
fiaddl
xchg
into
addr16
aam
jecxz
xorl
push
fidivrl
xchg
mov
hlt
arpl
mov
jmp
pushf
int3
xor
std
lahf
pop
inc
outsb
stc
ficoms
jle
or
lods
sbb
push
or
out
inc
lock
dec
add
pop
jno
cmp
leave
fcomps
inc
adc
fcomip
mov
cmp
add
int
pushf
jo
ja
in
xor
mull
ret
je
fwait
and
pop
jge
lcall
add
add
pop
sbb
push
inc
int3
jno
movsl
dec
je
repnz
jp
xchg
xchg
jnp
cli
imul
cmp
xor
fmul
addr16
aad
adcb
mov
mov
pop
out
movsb
sbb
inc
scas
sbb
pop
add
dec
ss
ficompl
mul
sub
add
lods
jmp
shrb
adc
dec
sub
push
in
lods
popf
lcall
pop
mulb
cltd
in
inc
push
push
sbb
or
jnp
dec
out
mov
rcl
lods
into
push
ss
xor
int
cmpsb
sub
jno
dec
cli
movb
xchg
sti
test
pop
adc
insb
dec
out
popf
mov
aas
push
cmpl
in
cmp
loopne
inc
mov
lds
mov
out
cli
push
pushf
repnz
inc
push
jp
jp
pushf
lret
push
in
jb
push
leave
pop
add
push
and
mov
or
xlat
push
daa
popf
jmp
mov
sub
fwait
jmp
mov
fsts
in
xor
clc
add
popf
mov
cltd
cltd
xor
movsl
loope
pop
ljmp
pop
push
fidivs
lcall
sub
sbb
add
movsl
inc
pop
add
jb
mov
sub
mov
push
fsts
outsb
adc
pop
mov
add
dec
cmpsl
pushf
stos
sbb
iret
pop
mov
and
mov
stc
adc
xchg
lret
xor
addr16
enter
scas
sub
in
jbe
out
cmpsb
sub
std
leave
inc
iret
inc
mov
cwtl
stos
mov
loopne
pop
scas
notl
inc
aad
lock
pop
dec
aad
xchg
adc
popa
push
push
inc
bound
xor
popw
xchg
xchg
dec
les
adc
push
fwait
mov
in
outsb
push
push
inc
adc
jne,pt
sbb
cld
aas
xchg
es
xor
dec
nop
push
cli
dec
and
pusha
leave
mov
dec
scas
jmp
jns
xchg
lods
imul
push
and
jg
add
mov
movsb
in
mov
cmp
pop
mov
mov
pop
and
pop
aam
push
pop
mov
ds
movsl
xor
fists
icebp
fxch
scas
cmp
jno
std
test
movsl
jp
test
arpl
icebp
pop
test
rcrl
add
adc
pop
xchg
jmp
lds
inc
arpl
je
enter
push
pushf
aam
or
sbb
mov
jnp
add
inc
daa
sbb
or
or
or
sbb
dec
cld
push
and
add
sbb
xchg
in
outsb
shrb
adc
push
sti
outsl
mov
mov
jne
testl
into
je
pop
loopne
push
jne
and
fdivl
das
cmp
inc
nop
sbb
fidivrl
dec
and
mov
mov
andl
lock
cltd
mov
xchg
mov
aaa
std
xchg
jmp
test
add
shrl
jne
insb
sbb
sbb
popa
pop
inc
push
mov
or
les
sub
xlat
js
cmp
ror
xor
add
mov
inc
sub
xor
jae
or
jno
std
shlb
movsl
fdivl
fs
xchg
loopne
lock
enter
sub
andb
mov
imul
sbb
pop
push
cmp
pushf
xor
dec
xor
cmpsl
jne
imul
or
push
adc
loopne
jne
jno
fsubl
outsl
lret
inc
push
ja
mov
mov
mov
mov
loop
outsl
inc
lcall
jnp
mov
ja
and
mov
fst
movsl
inc
mov
loop
jnp
outsb
scas
add
sub
into
outsl
mov
pop
jmp
inc
cltd
lods
xorb
out
aam
outsb
mov
ss
sbb
xlat
pop
test
mov
sbb
fisubrs
insb
jns
stos
inc
adc
sbb
jns
mov
fbstp
or
cli
popa
cmp
lret
stos
arpl
dec
pop
insb
insl
xchg
insb
daa
mov
sahf
jp
jns
dec
negl
sbb
rorb
adc
out
fsub
jmp
dec
pop
xor
push
xor
sahf
loopne
sbb
out
inc
pusha
cmp
sarb
mov
mov
sub
push
dec
jb
fdivrl
nop
rorb
ret
jb
mov
push
mov
mov
xor
andl
mov
es
mov
adc
out
cld
fwait
sti
pop
dec
mov
adc
and
and
mov
testl
mov
sub
in
lahf
sub
pushf
pop
dec
jp
insl
push
mov
loope
or
sub
sbb
inc
mov
adc
add
adc
stc
jae
pusha
pop
into
jb
subl
mov
call
jle
ljmp
popa
sbb
mov
or
push
adcb
xchg
and
adc
jl
pop
test
popf
sub
cmc
sahf
pop
jne
adc
je
cmp
jle
jg
test
cmp
sbb
dec
sub
test
cmc
jg
arpl
pop
jbe
scas
and
orl
jns
xchg
pop
lods
mov
cld
xor
aad
cmp
out
jbe
cmpsl
cli
mov
loopne
and
sub
sub
pop
aaa
outsl
adc
aas
ret
leave
sbb
mov
lcall
scas
add
idiv
movsl
xor
inc
lahf
or
push
mov
mov
mov
popf
repnz
add
int3
pop
ja
sbb
xchg
cmp
aad
test
sbb
xlat
movsl
pusha
cmp
jge
and
test
int
mov
xlat
push
dec
xabort
mov
out
xorl
mov
ret
cli
push
xor
xor
test
jg
dec
popa
arpl
dec
or
xchg
cmpsb
cs
arpl
inc
ja
sub
mov
push
lret
lret
jns
sti
mov
fisttps
iret
push
not
mov
sub
adc
push
mov
aam
inc
or
xchg
aam
mov
lahf
pop
jge
push
adc
dec
push
dec
stos
mov
loopne
add
cmp
in
lea
movsb
pop
addl
pop
repz
nop
mov
jl
lret
lods
dec
jp
nop
clc
jmp
pop
repnz
pop
into
lods
add
lret
sti
add
mov
inc
pop
push
repnz
clc
mov
out
adc
popf
adc
sbbb
and
cmc
repz
int3
add
mov
js
xchg
je
mov
jnp
inc
fs
imul
dec
mov
cwtl
dec
mov
arpl
jge
jmp
ljmp
out
pop
add
xchg
fisubrl
insb
js
leave
in
pop
pusha
pop
clc
jle
jp
stos
push
dec
jne
jne
dec
lret
xor
pop
bound
sbb
out
insl
add
pop
mov
in
mov
jae
mov
or
push
xchg
scas
aam
mov
xorl
jmp
rorb
call
jge
test
sbb
mov
sbb
xchg
and
lods
xchg
psubusb
mov
out
test
int
scas
aas
mov
std
cmc
jbe
out
mov
lea
imull
mov
jle
lret
in
mov
lods
adc
inc
movsl
arpl
in
dec
int
push
xor
push
sbb
out
insb
sub
jl
iret
scas
fdivrl
xor
cmp
scas
test
dec
pop
and
lea
neg
daa
cmp
mov
jne
mov
xchg
cs
stos
push
xlat
fucomip
xor
mov
ret
push
mov
or
xchg
mov
imul
js
xor
add
lcall
inc
mov
cs
out
mov
xor
add
fimull
dec
mov
daa
adc
rcrl
lds
mov
mov
or
adc
jl
pushf
cmpl
jle
rclb
xchg
jno
shll
push
lds
test
jle
das
push
dec
out
repnz
mov
jno
mov
push
cli
mov
xchg
testl
xchg
cli
jae
cli
inc
rclb
cld
mov
cmp
ss
fwait
push
mov
stos
cmp
push
fwait
xor
aam
inc
or
loopne
mov
test
pmaxub
push
and
cmp
in
fisubrl
fidivrl
and
mov
pop
pop
push
jbe
scas
adc
popf
push
sbb
pop
add
fsubr
xor
aam
mov
sarb
mov
and
mov
inc
dec
dec
mov
or
dec
and
mov
in
pushf
fidivrl
test
jge
hlt
in
dec
scas
mov
xchg
adc
lds
mov
and
pop
leave
jns
mov
push
out
or
lahf
out
mov
cmp
mov
sub
rcrb
aaa
icebp
xor
xchg
mov
adc
pop
mov
out
sbb
inc
mov
dec
or
lods
shlb
leave
jne
or
jge
lds
cmp
jg
dec
fwait
rclb
cli
cs
xlat
fdivrs
std
test
mov
ljmp
leave
fwait
xchg
fnstsw
mov
fwait
mov
test
adc
lods
adc
rcl
push
jg
loopne
push
fcomip
les
sbb
or
imul
sbb
ret
les
scas
pop
faddl
jnp
mov
push
nop
mov
jmp
mov
andl
sbb
and
jp
inc
std
add
repnz
sbb
jmp
xchg
repnz
fdivs
jmp
dec
icebp
popa
loop
sub
sbb
cmp
lcall
push
je
test
testb
lea
or
mov
cmp
push
loope
xor
call
je
mov
cmc
sub
cmp
push
daa
es
xchg
arpl
lods
jb
fdivr
cld
loop
and
sti
insb
xor
test
xchg
cwtl
lea
cmpsl
pop
ficomps
mull
std
nop
inc
push
out
cwtl
jns
xor
adc
jae
imul
sbb
imul
cmpsb
lock
cltd
int
cmpxchg
test
inc
pop
mov
mov
imul
mov
sbb
cli
rcrb
push
pop
mov
mov
lahf
mov
popa
sub
sub
inc
jmp
jne
into
hlt
push
jle
flds
test
jns
add
push
sub
je
push
add
dec
add
dec
add
dec
and
lea
push
int
insl
push
mov
lahf
scas
frstor
repz
cmp
movb
pop
inc
pop
repnz
mov
ds
stos
ljmp
adc
cmpsb
jmp
jp
and
xchg
into
leave
loopne
adc
loop
sbb
mov
mov
test
lods
aas
xchg
fs
loopne
sub
cld
adc
push
cmp
sbbb
jnp
and
addr16
dec
lcall
or
ret
cs
adc
iret
sub
push
add
fwait
pop
dec
popf
and
imul
ja
outsb
mov
jg
test
sub
dec
inc
scas
test
pop
sub
adcl
add
lea
aas
xchg
lret
cli
mov
outsl
rclb
jmp
cld
add
aam
xchg
push
fsubrs
sahf
in
mov
mov
out
test
data16
xor
mov
add
test
mov
pop
lock
ror
imul
addb
ja
sub
sti
lock
stc
add
leave
cmp
xor
cmp
push
icebp
sbb
mov
ja
jecxz
xor
cmc
inc
push
mov
mov
sbb
ffreep
imul
inc
into
xchg
cmp
push
pop
jp
int3
icebp
mulb
adc
test
sub
fsubrs
mov
je
jp
test
cltd
push
mov
adc
popf
pop
push
sub
sub
jne
or
jno
cwtl
jns
mov
sti
scas
iret
add
data16
mov
sub
in
push
mov
mov
xchg
fidivrl
pop
enter
lea
xor
das
or
loopne
and
pavgw
cmc
imul
icebp
dec
inc
mov
cmpl
dec
inc
xchg
test
push
mov
ss
outsb
xchg
adc
cmp
idivb
xorl
idivb
pop
mov
rorb
je,pn
sub
mov
mov
in
clc
cltd
xchg
sbb
or
adc
and
jl
cwtl
sarl
mov
les
add
and
xchg
mov
js
aad
ror
out
mov
xchg
cmp
jnp
movsl
dec
scas
lods
dec
dec
jnp
out
idivl
stc
push
pop
mov
cld
call
sbb
test
and
cmp
in
mov
cmpsl
lret
sbb
add
fidivrs
push
mov
cs
cmp
dec
xchg
sbb
push
pop
and
inc
and
fsub
xor
ds
addr16
fldenv
enter
aas
ret
push
sub
mov
add
das
or
mov
testb
xor
outsb
mov
jg
push
and
jbe
gs
rorb
adc
lds
push
dec
fisubl
dec
int
pop
push
xchg
xchg
mov
fstl
enter
jle
jne
aam
mov
xchg
call
lock
loope
stos
dec
jge
je
mov
call
enter
rcrb
fdivrl
in
jae
pusha
rorl
adc
push
addr16
push
mov
imul
sbb
xorl
icebp
jle,pn
out
cmp
inc
add
pop
xlat
ss
aaa
fsincos
push
popl
cmc
mov
cs
sub
jecxz
mov
pushl
test
mov
jg
adc
jmp
sub
cmp
cmp
fistps
mov
pop
jecxz
pop
dec
ret
popa
cli
mov
pop
cmpsb
sbb
cmp
fcmovbe
fiadds
inc
hlt
mov
loope
into
mov
lret
pop
push
mov
add
rcrl
orl
sub
sti
imul
jp
push
xchg
ret
test
fadds
stc
jne
jmp
adc
pop
pop
fcomps
mov
pop
push
scas
push
and
pop
mov
rcrb
test
js
xchg
pop
addr16
cmp
jno
cmp
sub
mov
jae
shr
mov
mov
xchg
pushl
inc
inc
lret
movsb
inc
xor
mov
inc
in
jge
mov
mov
outsb
adc
mov
mov
mov
shl
aad
adc
cmp
stos
xor
push
and
test
stos
outsl
mov
add
lret
scas
lea
dec
popf
xchg
cmc
stos
push
call
jo
pop
push
imul
xchg
stos
push
mov
je
xorb
jo
jb
enter
jmp
sub
inc
mov
lcall
bound
add
mov
cld
add
lret
clc
pop
sub
xor
mov
lea
mov
pushf
and
mov
pop
jge
xor
frstor
pop
mov
push
fwait
loopne
nop
aas
imul
xchg
cld
sti
inc
inc
mulb
sub
jp
inc
dec
into
or
cli
incb
lret
dec
fsub
not
xchg
insl
adc
xchg
imul
test
jp
lods
mov
jmp
shl
dec
pop
lahf
out
jno
jp
pop
jbe
in
out
adc
or
fldcw
bnd
jae
dec
mov
xor
cs
lods
xchg
adc
adc
adc
lret
loope
fucomip
mov
sahf
pop
enter
out
fdivrl
mov
addr16
testl
das
out
aas
cmp
test
scas
inc
ret
xchg
jns
dec
push
mov
add
sub
push
mov
xchg
cltd
add
dec
jge
jp
sahf
sbb
or
mov
outsl
cmp
lahf
lods
rorb
pop
cmp
or
or
xor
scas
cmp
jns
inc
adc
ds
shll
and
aaa
jns
sti
mov
aas
bound
icebp
ficompl
mov
mov
outsb
dec
add
pop
test
imul
jp
adc
and
add
or
add
sbb
out
mov
push
scas
lock
aaa
cmp
cmpsl
rcll
enter
pop
xchg
mov
into
jns
push
xchg
and
inc
jecxz
fsubp
push
int
mov
stos
dec
adc
or
xor
cmp
cmpsb
add
xchg
ficompl
in
adc
dec
jo
jne
push
xor
int3
xchg
sub
les
xor
mov
daa
fnstenv
hlt
popl
scas
lds
cld
ret
mov
sbb
xchg
scas
out
inc
mov
out
ror
sub
lds
cmp
mov
cwtl
mov
push
fcoml
or
add
sub
les
imul
sahf
ds
in
push
stos
rcrb
pop
sub
test
mov
sti
sub
cmp
xchg
das
mov
add
test
cmpsb
stos
pop
cmp
or
jmp
lea
addr16
cmpsl
std
mov
pop
jge
xor
loope
sub
mov
mov
mov
mov
incl
jg
mov
sub
adc
add
in
inc
sbb
in
les
mov
stos
cmp
push
push
push
dec
pop
daa
cmp
pop
cltd
les
xchg
cmp
sbb
pop
cmp
cwtl
out
leave
sub
jnp
retw
loopne
es
lcall
hlt
adc
hlt
mov
xchg
adc
jmp
js
loop
in
and
push
stc
pop
loop
mov
nop
sbb
sub
xor
xchg
sub
cmpsl
add
pusha
xchg
jecxz
pop
fcoms
add
xlat
mov
sub
xor
inc
pop
xchg
out
jmp
cmpsb
cld
clc
xchg
cwtl
xchg
sbb
stos
mov
or
aas
data16
bound
mov
xor
aad
pop
mov
or
mov
jne
fimuls
sbb
ret
xchg
dec
xchg
jle
jbe
jle
push
cmp
idivl
dec
fs
inc
push
push
pop
jo
xchg
pop
push
enter
and
xchg
les
dec
and
in
hlt
fnstenv
popa
cmp
not
ja
leave
aas
ss
dec
fmulp
dec
scas
mov
sbb
mov
repnz
fcmovnbe
xchg
in
sbb
fs
call
addl
lock
js
lods
mov
aaa
cli
std
gs
pop
shl
inc
bound
sbb
fiadds
and
mov
pop
cmp
pop
xchg
icebp
movsb
xchg
inc
add
lret
test
jo
mov
dec
push
popf
int3
inc
xchg
pop
mov
cld
sub
sbb
xorl
shll
jae
jl
loopne
es
aam
ficompl
out
jo
mov
hlt
enter
cmp
in
addb
xor
sub
cmp
fistl
loop
sbb
jle
inc
aaa
cld
stos
or
cwtl
lahf
cmp
aad
cli
cmp
clc
hlt
push
mov
test
adc
icebp
lds
inc
jno
mov
rcrl
or
push
sub
push
scas
movsl
lea
imul
cwtl
push
sbb
movsb
repz
lods
scas
jp
ss
inc
cld
mov
dec
inc
add
ret
test
incb
aas
fsubs
out
clc
or
dec
cmpsl
cmpsb
add
jl
jo
leave
fwait
fs
add
popf
addr16
adc
xchg
adc
adc
pop
cmpsb
push
dec
cwtl
pop
pop
lahf
add
pop
cmc
pop
and
data16
jno,pt
cmp
jecxz
push
push
add
insl
cmp
mov
cli
add
mov
xor
stc
imul
or
fnstenv
mov
mov
push
js
in
push
pop
lock
das
mov
mov
dec
gs
or
divb
and
mov
mov
push
je
jmp
add
fadd
xchg
xchg
mov
lea
push
dec
or
sub
cmp
add
mov
push
stos
adc
call
enter
inc
insl
jnp
push
leave
pop
mov
mov
add
dec
leave
mov
mov
mov
cld
inc
cwtl
in
cmp
inc
hlt
mov
loopne
mov
in
xor
and
stc
je
sub
inc
adc
mov
dec
jae
pop
pop
or
int
iret
jp
sbb
xchg
sbb
rcll
mov
lahf
divb
push
insl
ret
rorl
sbb
pop
sti
xchg
add
and
xchg
add
sbb
pop
pop
gs
xchg
es
xchg
jb
xor
pop
dec
mov
arpl
and
push
xor
or
inc
shll
pop
or
pop
fsts
loop
cmc
lods
push
sub
dec
jae
inc
sbbl
scas
rcrb
inc
pop
mov
scas
aam
arpl
popl
lea
addr16
pop
mov
in
ljmp
pop
negb
outsb
dec
scas
outsb
push
fnsave
ss
call
cmp
jl
jae
jns
aaa
rcr
mov
rcl
xor
fnstsw
and
fs
shl
sub
ja
fsubrs
mov
push
or
cmpsb
jb
scas
popa
mov
movsb
or
insl
aam
nop
dec
js
gs
scas
ss
jo
jne
or
push
cmp
fmuls
jno
adc
in
ljmp
call
fwait
jbe
adc
dec
push
mov
xchg
das
pop
cmc
push
insb
outsl
in
call
cmp
in
fcoms
dec
cmpsb
lahf
jge
pusha
aas
jecxz
pop
push
popf
out
ds
mov
out
call
push
jmp
movsb
xchg
push
sbb
sbbl
or
in
pop
ss
outsl
pop
rcrl
pushf
repnz
aam
push
nop
adc
sub
lahf
test
das
or
add
sbb
sub
in
pop
add
sbb
dec
adc
jns
sub
or
aam
dec
movsb
cmp
fwait
fwait
insb
movsb
movsb
fstpl
mov
sub
fcomip
mov
push
or
popa
inc
mov
bound
incl
fstl
or
xchg
mov
in
jg
cmpsl
insl
cli
mov
outsb
mov
xorb
or
inc
dec
inc
mov
ret
stos
hlt
cmp
enter
mov
and
cwtl
je
mov
adc
movsb
mov
push
out
pop
xor
outsb
pop
or
add
pop
test
aaa
cmpsb
ljmp
in
das
sbb
jno
dec
add
movsl
mov
inc
dec
addr16
and
jg
cmpsb
dec
jl
add
adc
sub
imul
push
data16
adc
or
dec
jb
xchg
fiaddl
cltd
cltd
sub
subl
loop
mov
out
cmp
add
adc
test
addr16
sub
sub
or
or
pop
pop
add
sti
push
repz
test
pushf
jbe
lcall
std
outsl
xchg
jp
mov
mov
mov
pop
ss
sub
cmp
or
jg
in
and
mov
imul
clc
mov
jb
out
prefetchw
jno
aas
scas
popf
insl
in
les
mov
xor
orl
xor
ret
nop
xlat
pop
mov
lret
sbb
add
pushf
out
les
scas
jb
inc
ret
mov
mov
dec
jmp
dec
movsb
mov
xchg
dec
fnstsw
push
scas
fs
or
inc
lret
mov
push
push
cmc
add
or
pop
and
push
push
add
nop
mov
jns
in
inc
je
out
mov
pop
in
test
mov
mov
test
jecxz
lods
xor
pushf
inc
rcll
lcall
imul
mov
ss
ja
lds
ljmp
dec
ret
push
mov
inc
mov
mov
loopne
pop
xchg
mov
lret
pop
fs
push
cmp
xor
inc
dec
aad
dec
jle
fnsetpm(287
adc
inc
add
out
and
cmp
out
rolb
lods
dec
inc
cmpsb
and
fdivr
xchg
xchg
push
adc
cmp
add
scas
cmp
mov
xchg
addl
or
lret
popa
mov
dec
push
ror
cmp
jnp
std
jmp
and
imul
repnz
ss
cmp
insb
mov
pop
xor
leave
xchg
and
mov
lods
xchg
jnp
out
add
out
sti
pop
mov
push
xor
sub
dec
clc
add
lds
imul
into
data16
mov
outsl
push
out
mov
inc
insb
inc
outsb
cmp
dec
pop
fsubrl
gs
je
cmp
sbb
clc
lahf
repz
daa
test
dec
lock
xor
cmp
and
mov
cmp
scas
inc
pop
mov
adc
jp
adc
stos
and
xchg
loope
pushf
popf
cmpb
ds
pop
loope
lcall
jnp
insb
das
sbb
rcrb
lock
aas
lods
push
adc
mov
out
xchg
lods
add
out
jno
test
pop
and
dec
xchg
je
jno
cmp
pop
rclb
das
sbb
imul
mov
adc
sub
lods
fwait
sbb
push
mov
std
arpl
mov
cmp
or
aam
cmpl
jb
cwtl
adc
fs
and
outsl
aad
sbb
inc
pop
dec
test
and
cmp
aas
mov
bound
ja
jp
push
cmp
shrb
or
cwtl
iret
stos
xchg
andl
out
mov
mov
shl
mov
mov
sbb
adc
stc
pushf
les
or
aas
ja
mov
mov
xchg
lret
inc
xchg
movsb
cmp
and
ss
add
mov
das
adc
orb
push
mov
dec
js
mov
fsts
mov
mov
adc
mov
add
flds
and
leave
je
cmp
insl
adc
adc
mov
and
mov
cld
sar
arpl
call
incl
scas
sbb
jg
mov
cmp
sbb
mov
push
sti
call
iret
jns
cmp
daa
mov
inc
add
jno
pop
roll
bound
sar
xchg
repz
xchg
mov
xchg
jecxz
and
hlt
mov
adc
or
jbe
inc
dec
dec
or
add
jae
mov
popa
rolb
stos
push
mov
mov
xorl
movsb
cmpsb
test
icebp
testb
out
xor
push
lret
or
mov
int
adc
dec
leave
subb
fisttpl
bound
or
enter
adc
test
mov
push
xchg
lea
mov
cmp
xchg
mov
add
sbb
push
hlt
xchg
inc
xchg
push
or
and
shll
dec
inc
jae
cli
hlt
nop
fisubrs
loop
xchg
leave
or
mov
adc
inc
dec
test
aam
scas
jo
test
lcall
shlb
mov
push
fwait
pop
jae
popf
mov
lock
flds
inc
inc
fidivrl
das
xchg
push
add
mov
jmp
or
lods
imul
push
push
and
fyl2xp1
ds
leave
mov
adc
out
movsb
cmp
test
insb
cmp
push
jmp
adc
adc
xor
ss
dec
cmp
push
xchg
in
fildl
push
test
jge
cmpsb
sahf
not
push
push
mov
enter
dec
inc
por
outsb
jb
mov
in
jge
cmp
ljmp
sub
cmp
sbb
repz
mov
push
push
cli
sbb
xor
pusha
aaa
fisubs
sub
mov
xchg
lret
jno
test
outsb
xor
in
jp
int3
ret
jg
out
cmpb
test
nop
mov
jg
xchg
ss
inc
sub
rcll
add
cmpsl
xchg
sub
cmp
xor
sub
inc
lods
test
push
jmp
xlat
mov
mov
cmpsb
or
or
add
xor
les
mov
lret
dec
add
cli
add
cmp
es
shrl
int
sbb
pop
pushf
insb
hlt
pop
mov
sub
clc
add
jo
in
repnz
outsb
jb
jno
cmp
mov
jns
mov
addr16
aaa
mov
sub
or
les
and
fwait
test
daa
popf
adc
jnp
add
xchg
mov
add
lds
iret
lods
xchg
sub
jae
cmp
aam
in
mov
cwtl
and
jae
sub
or
jne
dec
rolb
dec
mov
sub
sarb
push
aaa
int
aas
adcb
ret
xchg
cmpsl
rorb
mov
aas
and
rcrl
sub
movsb
mov
jnp
ds
cmp
push
repnz
ficompl
ds
icebp
jge
mov
adc
stos
fisubs
lcall
mov
cltd
mov
cld
cli
movsl
cli
push
addr16
rclb
dec
mov
mov
xor
jns
ret
mov
push
stc
pop
xchg
scas
shl
xor
or
fadds
int3
xchg
jbe
sbb
push
dec
sub
inc
jge
inc
inc
mov
dec
mov
mov
cmpsb
jnp
in
jl
push
cli
adc
in
fcompl
pop
pop
idiv
cs
jge
adc
pop
or
in
mov
xor
dec
mov
out
adc
loope
scas
jb
shl
push
mov
arpl
mov
dec
cmp
in
loop
and
pop
pop
stos
dec
outsb
mov
sub
imul
pop
mov
and
je
cltd
ret
rorl
arpl
push
mov
imul
dec
inc
inc
ss
sbb
ror
xor
int
pushf
repnz
jno
shl
inc
test
hlt
in
in
mov
cmp
mov
add
sub
fwait
lahf
xchg
or
mov
enter
xchg
jae
sbb
sahf
ja
sbb
push
pop
and
inc
and
jecxz
addb
push
push
add
leave
inc
insb
or
adc
or
enter
sarl
les
nop
sub
lods
es
cmc
inc
add
cmp
mov
gs
adc
jns
in
stc
inc
push
mov
jecxz
rorb
loope
push
scas
pop
mov
iret
fcmovnu
repz
push
push
jne
xchg
adc
xor
pop
xchg
xchg
push
repnz
jo
jns
jp
dec
ja
out
imul
addr16
cmp
rclb
xor
movsl
mov
aad
test
mov
das
es
push
push
pop
add
mov
rep
mov
shrl
sub
mov
loopne
cmp
stc
adc
xchg
mov
or
addl
jns
push
repnz
mov
daa
jg
mov
mov
div
jo
jns
out
lods
mov
push
cmp
shlb
scas
je
aad
into
mov
test
scas
ret
sti
xchg
mov
js
punpckhdq
out
adc
cmpsb
xchg
adc
insl
iret
dec
mov
add
inc
jl
stos
shlb
icebp
cmp
les
mov
mov
jno
insl
pop
mov
add
sbb
mov
add
cmp
mov
inc
add
repnz
mov
test
pop
jge
aaa
jmpw
cmp
roll
fwait
cs
lock
mov
movsb
dec
out
pop
cs
jl
sbb
xor
jle
sar
or
cmp
pop
les
in
popa
mov
jecxz
mov
adc
dec
icebp
sbb
mov
add
jge
dec
hlt
shll
and
mov
adc
and
gs
int
adc
test
hlt
xlat
jmp
inc
sbb
cmp
dec
jae
ffreep
shlb
jecxz
jp
sbb
leave
test
mov
mov
adc
pushf
incl
cmpsb
mov
or
push
test
out
jno
push
adc
fdivl
ljmp
je
adc
or
xor
ja
xlat
cmp
xor
rcrl
sub
fcmovnu
mov
mov
mov
jecxz
mov
or
std
xchg
jl
jp
xor
shr
mov
cmc
xchg
mov
sub
mov
rolb
jle
mov
xor
loope
or
cmp
negb
sub
rcrl
repnz
dec
sbb
sbb
shlb
or
insb
in
fildl
loope
jbe
xor
fidivs
sbb
ss
inc
mov
in
cmp
and
insb
aaa
cltd
push
xor
int
sbb
and
add
in
ljmp
bound
inc
lret
pusha
add
inc
rcr
movsl
push
xchg
in
iret
pop
loop
ret
sti
lods
push
cld
ja
data16
cld
jl
jne
into
mov
sbb
scas
outsl
mov
adc
push
mov
jecxz
into
ror
idivl
inc
aas
xchg
and
jno
xorl
push
mov
cmpsl
mov
repz
dec
or
imul
fdiv
repnz
push
dec
and
hlt
jl
cmc
leave
fstps
das
shll
scas
xor
adc
xor
xchg
scas
shr
stos
addr16
pop
ret
jge
xor
pop
or
jne
es
test
xchg
push
push
mov
push
cld
adc
es
pop
rolb
sti
sub
and
lret
fdiv
xor
dec
and
test
push
mov
repz
fwait
push
dec
imul
or
rcll
jns
movsb
push
sub
sbb
sbb
imul
fptan
popa
push
sti
mov
mov
cs
ja
rorb
dec
sti
sbb
loopne
cmp
fs
movsl
test
movsb
mov
cmp
ja
clc
xchg
out
sbbb
cwtl
out
push
or
and
cltd
orb
scas
aas
repz
fwait
cmpsl
fidivs
jp
enter
cmp
aad
xorl
jp
out
lock
or
out
xchg
jmp
add
dec
xor
cmp
outsl
sub
and
les
lret
in
mov
ljmp
sub
lret
icebp
pop
stos
les
fnsave
cmp
faddl
and
movsb
cmp
pusha
mov
data16
cs
dec
mov
repnz
push
fmuls
push
nop
aas
test
or
add
out
lods
stc
lock
shl
lock
mov
mov
mov
rcll
mov
fidivrs
mov
dec
dec
jbe
mov
xor
inc
jo
sub
jecxz
aas
push
hlt
scas
push
inc
sti
xchg
sub
adc
daa
mov
hlt
ds
xor
sbb
push
mov
pop
flds
loopne
xchg
sub
push
xchg
inc
inc
movsl
into
inc
push
nop
mov
mov
push
fstpl
gs
loopne
xchg
out
in
push
shl
mov
clc
xchg
ja
cltd
dec
lds
sbb
ss
push
scas
mov
ds
jnp
hlt
or
stos
sti
xor
fsubrs
fsub
adcb
fidivl
jns
inc
lret
out
lret
jl
outsl
mov
xchg
pop
add
push
add
idivb
push
sahf
fbstp
movsl
pop
cmp
ret
mov
mov
xchg
sub
sbb
mov
mov
mov
jl
and
or
pusha
cmp
xchg
es
cmp
stc
cmc
sbb
lds
xchg
aad
mov
mov
sbb
in
repnz
jge
test
rcrb
es
or
sub
jno
xchg
gs
movsb
shlb
les
xchg
std
sub
icebp
outsb
mov
jg
data16
dec
aas
in
shrl
adc
pusha
pop
mov
ficoms
push
clc
cmp
push
adc
fwait
int3
jae
sbb
mov
mov
hlt
cld
test
addr16
jp
cmc
mov
out
fsub
push
mov
sbb
repz
icebp
inc
movsb
jnp
cmpsb
roll
pushf
sub
xor
shl
rclb
scas
push
lock
add
cmp
mov
mov
addr16
movsb
fnsave
dec
in
and
or
sbb
sbb
cltd
adc
aam
leave
popf
jmp
add
or
insb
add
jo
into
out
ja
xor
mov
fdivl
out
and
data16
ja
loop
lret
adc
mov
rcr
dec
mov
dec
fldenv
cs
ljmp
je
roll
orb
bound
int
dec
add
fiaddl
mov
int3
mov
jmp
mov
sti
xchg
mov
lea
movsb
xor
pop
mov
cmc
fisubl
mov
add
xlat
sbb
rclb
rcr
out
dec
in
cmpsl
loope
aaa
shr
ja
js
shll
mov
shl
fld
add
add
sub
sbb
jmp
dec
and
mov
cwtl
jp
sub
xchg
cmp
lahf
test
aad
or
jle
mov
repnz
or
hlt
loop
add
pop
inc
in
std
pop
outsl
adc
dec
cmp
or
pop
or
movl
adc
and
xchg
push
xchg
scas
jmp
sahf
je
jae
call
in
xchg
and
shl
out
or
sub
pushf
sbb
dec
icebp
ret
add
dec
mov
or
cli
add
lea
ret
pop
xor
stos
es
sub
in
data16
and
mov
nop
mov
ret
stos
cmp
pop
ljmp
shlb
jnp
int3
add
push
clc
pop
adc
sub
xchg
inc
mov
stos
pop
push
xchg
fcoms
dec
stc
jo
int3
test
in
ds
mov
mov
jecxz
cmp
or
out
ljmp
hlt
sbb
lea
dec
mov
int3
mov
sbb
jmp
movsb
or
sbbl
sbb
shrl
test
inc
add
icebp
popa
adc
adc
mov
push
test
fldt
add
mov
mov
mov
xchg
cmp
mov
jp
loopne
mov
sub
adc
mov
adc
int3
daa
mov
sbb
inc
inc
ret
sbb
add
iret
fstps
pop
and
mov
inc
arpl
sbb
mov
dec
popa
add
dec
pop
sub
push
or
scas
xor
adc
sbb
sbb
mov
sub
ljmp
gs
int3
push
push
inc
push
xchg
dec
fsubs
test
outsl
and
fstpl
mov
std
movsb
aam
aas
hlt
loopne
jbe
adc
pop
cmp
out
pushf
pop
sbb
cmp
xor
cltd
lahf
sbb
xchg
ss
cltd
sbb
sbb
scas
push
insl
stos
add
mov
sti
lds
lods
mov
or
mov
mov
in
cli
jns
mov
mov
push
jne
sub
sti
mov
sbb
es
lret
mov
sub
jle
mov
add
fs
cmp
int3
outsb
push
movsl
loopne
cmc
lahf
movsl
popf
dec
popf
or
pop
addr16
shrb
scas
sub
roll
ret
inc
push
jmp
dec
jmp
sbb
lret
pushf
fs
mov
dec
fidivl
dec
jmp
ret
jl
pop
in
pop
dec
cmpsb
mov
cwtl
sub
xchg
negl
lret
test
pop
scas
pop
mov
insb
pop
test
sub
outsl
xchg
mov
loop
faddl
lret
xchg
push
lock
or
jne
xchg
push
in
imul
int3
lods
and
dec
and
das
or
cmpsl
fnstcw
in
lods
cmpsb
loopne
xor
xchg
xor
out
pop
pop
sub
std
jo
rcrl
add
push
fmull
mov
pop
cmpsb
int3
cmp
xorb
or
jg
icebp
movsl
inc
mov
sub
mov
fdivrs
and
pop
sbb
mov
scas
mov
daa
jb
xchg
aaa
jae
jecxz
xor
jbe
pop
fst
mov
push
pop
mov
adc
es
lods
sbb
push
xchg
roll
pop
inc
pop
loop
lods
mov
outsb
fldenv
adc
movsl
int3
jae
push
xchg
cmpsl
loope
scas
stos
movsl
mov
cmp
test
out
rdtsc
pop
xor
cltd
push
mov
xor
adc
xchg
cs
xor
mov
cmc
aaa
inc
fbld
xchg
pop
mov
orl
cmpsb
hlt
call
xchg
icebp
mov
pushf
inc
cmc
aam
jnp
xchg
test
mov
and
add
pusha
sub
cltd
leave
adc
dec
out
out
sti
xor
lods
xor
push
rcrl
add
imul
out
pop
lahf
out
mov
subb
adcl
nop
push
adc
inc
cli
xchg
outsb
add
loopne
dec
xor
mov
add
test
clc
iret
fwait
int
or
fldt
sbb
inc
jns
sub
iret
and
aam
gs
sub
push
dec
mov
ds
ja
loop
mov
mov
mov
cmp
fsts
push
dec
jnp
cmp
fcmovnu
mov
test
scas
cmp
mov
and
push
testb
lret
leave
mov
arpl
inc
dec
xchg
jbe
nop
negb
cltd
je
sub
push
addb
aam
dec
cmpsl
repnz
nop
out
xor
adc
pop
adcb
jge
stos
les
mov
xor
bound
idivl
xor
mov
dec
inc
dec
enter
jae
out
inc
add
and
jno
or
push
mov
or
inc
add
or
push
pop
cmpsb
xor
in
sub
add
in
jg
stos
pop
stos
push
mov
inc
scas
fwait
aaa
nop
popa
bound
sub
rorl
leave
sub
cwtl
mov
cmp
sti
loope
stc
xor
xchg
xchg
out
adc
jg
sub
popf
mov
sbb
in
clc
in
aaa
mov
imul
cs
push
das
inc
mov
mov
push
fdivs
outsb
roll
jge
mov
andl
cmp
test
inc
test
dec
nop
dec
pop
add
lret
mov
sub
push
lret
cmpsl
inc
pop
push
test
js
fnstsw
xchg
pushw
or
mov
arpl
push
add
loopne
adc
dec
ficoml
jmp
mov
les
mov
popa
xchg
mov
cmp
mov
test
jnp
cmp
pop
jmp
mov
mov
xchg
int
jae
sbb
fnstcw
aad
dec
pushl
jnp
dec
sbb
sub
pop
mov
cmc
nop
mov
mov
add
pop
stos
aaa
xchg
jae
adc
cmpsb
inc
jno
data16
and
sbb
test
add
mov
jmp
es
call
jbe
fldcw
sub
adc
push
pop
mov
fwait
push
xchg
lock
icebp
dec
push
ljmp
cwtl
shlb
test
dec
test
outsb
jge
mov
adc
decb
mov
pop
pop
jo
inc
xor
loope
xor
pop
test
xchg
test
or
lock
jae
mov
jne
aad
mov
sarb
jbe
fcmovne
mov
push
xor
push
sub
jnp
into
out
test
cmp
or
and
pop
repz
xchg
and
xor
jg
negl
aad
in
push
inc
imul
sub
in
ljmp
loopne
ss
cmp
jecxz
in
sbb
cmp
xor
cmp
inc
xor
inc
scas
mov
pusha
xchg
ja
inc
push
pop
faddl
sti
fisttpll
xor
xor
gs
callw
xor
lret
shlb
or
cmc
leave
xor
and
popf
dec
push
cwtl
mov
clc
daa
imul
xor
and
decl
dec
aaa
mov
or
jno
xor
xchg
loope
or
dec
sub
sub
in
fldcw
mov
xor
loop
mov
std
push
or
push
cmp
pop
push
stos
loope
push
and
pushl
mov
add
clc
je
insb
mov
inc
push
pop
jmp
notb
les
nop
mov
mov
push
dec
pop
clc
pop
xchg
ja
push
fnstcw
andl
jo
xchg
leave
je
frstor
xor
mov
push
daa
rorl
in
push
push
divl
cmc
test
scas
repnz
dec
mov
jp
lret
jg
cld
gs
or
jbe
jle
jge
cmp
fnstsw
mov
movsb
mov
adc
data16
dec
lods
icebp
fdiv
rolb
cmp
dec
pusha
xchg
pop
lods
adc
lock
outsl
out
les
fadd
xchg
pop
xchg
mov
int3
lret
push
stos
adc
out
push
cli
jg
movsb
hlt
fcomps
int
notl
lock
outsb
or
mov
and
xchg
movsl
jnp
pop
mov
sbb
lahf
test
adc
xchg
icebp
aaa
xchg
mov
int
lock
bnd
sub
rorl
add
test
push
fnsave
dec
pop
repz
xor
sarl
scas
aad
popa
subb
movsl
call
mov
idiv
add
xchg
stc
sarl
sub
xor
xor
dec
inc
add
cmp
pop
shll
enter
int3
loope
or
stos
mov
gs
adc
negb
std
xlat
lods
leave
leave
mov
mov
jnp
cli
fdiv
push
push
cli
and
lods
adc
fdivl
arpl
sarl
sub
xor
pop
sub
fisubrs
dec
outsl
dec
pop
sahf
test
push
inc
sub
ret
xchg
imul
jb
jge
lods
cmp
mov
scas
sub
push
add
mov
pop
push
pop
inc
lds
popf
jbe
push
jb
sub
dec
mov
xor
cmpsl
push
push
sub
push
movsl
stos
mov
in
fadds
inc
mov
aam
test
push
adc
in
ds
cbtw
sub
out
and
sti
jne
rcrl
and
loopne
test
pop
das
jle
xor
pop
insb
xor
rorb
mov
mov
jno
pop
scas
pop
cmpsl
or
and
push
mov
dec
or
dec
lods
stos
mov
lret
mov
jo
jecxz
rolb
daa
fmuls
pop
arpl
sbb
inc
imul
sbb
jge
dec
mov
stos
xchg
hlt
pop
mov
mov
mov
fsubrp
pop
mov
jp
mov
or
sub
xchg
mov
lea
mov
cwtl
push
popa
icebp
push
add
gs
mov
popl
in
mov
mov
mov
subl
or
inc
push
test
inc
mov
sub
and
pop
or
popa
push
js
roll
call
pop
movsl
xor
ss
mov
les
scas
lcall
mov
mov
shlb
aas
jbe
push
push
jge
test
dec
ret
sub
leave
in
cmpl
add
lret
adc
xor
cltd
xor
sbbb
xor
xor
jno
sbb
ja
xchg
mov
scas
enter
stos
imul
and
xchg
les
pavgb
cmp
pop
push
cmc
jge
jge
fisubs
cltd
mov
add
inc
jecxz
dec
and
mov
inc
pushf
xchg
imul
mov
pop
pop
jmp
jbe
popf
lret
leave
or
xchg
cmpsl
ja
jae
je
mov
stos
xor
addb
sbb
pop
bound
icebp
sbb
ss
xchg
loop
inc
xchg
inc
int3
data16
or
lods
fimull
push
inc
popa
jb
cli
jno
mov
or
and
mov
and
jno
fdivl
mov
xor
push
xor
xchg
daa
fdivs
and
jbe
mov
test
scas
mov
push
push
or
or
dec
cld
test
adc
stos
mov
out
xchg
sbb
call
and
dec
add
loop
mov
sub
and
scas
xchg
xor
nop
pop
mov
xchg
cmp
popf
in
xchg
rolb
jle
inc
push
mov
mov
aad
mov
std
testl
inc
test
cmp
out
dec
pop
add
lds
mov
test
es
sub
imul
fcoms
outsl
lods
lret
cld
divb
lret
dec
jl
inc
xchg
adc
xor
test
xchg
pop
pop
mov
lahf
aad
fldcw
sahf
mov
jno
orb
js
aam
cltd
sub
pop
push
and
mov
sub
movsb
pop
fisttpl
push
adc
leave
sub
inc
mov
inc
jnp
sbb
shll
mov
mov
sub
adc
pop
clc
mov
cmpl
jp
std
jmp
mov
mov
mov
fldl
cmc
test
push
xor
sub
sub
cmpl
test
in
addr16
pop
or
xlat
test
or
xor
out
div
sbb
or
push
dec
mov
push
pop
xlat
inc
jl
jno
mov
sub
mov
xchg
inc
decb
fnstenv
push
lahf
cmpl
cwtl
pop
sub
adc
mov
pusha
sti
push
mov
lods
mov
fsubrl
jb
lcall
insl
pop
cmpsl
jo
mov
ljmp
into
int3
je
xchg
daa
xchg
or
sbb
inc
xchg
xor
fldl
push
xor
push
xchg
xchg
popf
mov
imul
hlt
ret
lods
fisubrs
push
mov
sbb
cmp
loope
icebp
xchg
sub
xor
jle
lret
loopne
les
or
adc
js
scas
test
shl
inc
dec
adc
popf
cmp
adc
add
jns
or
aad
cmc
mov
jns
clc
or
in
fwait
mov
in
sahf
cmpsl
pop
pop
into
insb
jae
arpl
inc
bound
sub
notb
xor
add
mov
and
mov
loopne
inc
pop
lock
push
push
mov
outsl
adc
scas
add
mov
es
xorl
cltd
in
or
mov
sub
xlat
xchg
ror
dec
lock
sbb
jno
enter
sub
inc
lcall
lcall
andb
nop
je
clc
js
stos
popa
test
pop
shufps
pop
push
sub
add
movsl
out
inc
inc
in
lock
out
push
push
push
mov
lods
add
adc
in
xlat
push
xor
std
stos
push
lock
jne
rorb
addr16
js
enter
iret
cmp
xor
icebp
dec
and
dec
scas
push
movlps
shlb
or
repnz
daa
fs
fldenv
adc
int
mov
lods
add
ja
add
mulb
in
fwait
dec
aas
sub
in
mov
adc
ss
push
mov
jp
mov
cmp
mov
jae
jp
jmp
in
rcll
push
inc
nop
cli
cmc
test
jmp
inc
xor
test
repnz
dec
rcl
fwait
or
fisubs
sbb
and
call
and
or
hlt
mov
flds
fidivrs
in
push
or
adc
jno
pop
sbb
mov
xorb
mov
add
notb
nop
iret
lret
lds
sti
dec
jo
mov
mov
jmp
int
push
pop
pop
stc
xchg
cmp
outsb
test
bound
jne
fisttpll
loopne
les
dec
mov
jnp
pushf
sbb
inc
pop
jl
push
in
pop
clc
mov
xchg
fbstp
and
jg
xchg
add
in
inc
test
dec
push
ficompl
test
cmp
xchg
adc
inc
test
int
jo
fnstcw
sbb
pusha
sbb
or
sub
adc
dec
or
inc
mov
add
int3
les
sbb
xchg
fisubrs
inc
sarl
mov
insl
add
mov
in
xor
ret
mov
iret
test
sti
push
outsl
iret
add
cmp
and
push
jecxz
xchg
cld
adc
push
and
sbb
jp
or
movsl
imul
loop
sbb
xchg
mov
imul
push
test
mov
xchg
nop
dec
adc
jecxz
cmp
jb
add
adc
aas
sbb
movsb
push
out
dec
adc
mov
into
or
sub
xchg
xor
out
push
pop
or
cmp
cmpb
jmp
stc
inc
popa
xchg
testl
cmp
inc
mov
dec
mov
loope
cmp
test
xchg
adc
inc
aas
sahf
aad
add
sti
lret
iret
jp
repnz
lea
outsb
mov
fists
push
sbb
cld
adc
loope
arpl
inc
mov
mov
addr16
mov
push
dec
or
scas
ret
inc
mov
les
xor
arpl
adc
mov
in
clc
pusha
gs
inc
test
inc
or
sarb
xchg
data16
ret
push
push
add
jmp
aas
cmp
cmpsb
or
jns
gs
cld
test
orl
xchg
into
into
fimuls
aaa
test
pop
mov
in
stos
mov
lea
ficoml
pop
and
jnp
inc
add
cmp
jbe
adc
lret
loope
lock
cmpsl
and
adcl
cmp
cs
add
push
adc
mov
dec
xchg
flds
mov
mov
jmp
xchg
pop
shrl
mov
add
int
jge
mov
inc
insl
jne
cmp
fdivrs
inc
filds
addr16
pop
pop
out
jo
mov
sbb
nop
fnstenv
andb
es
mov
js
fiaddl
or
xlat
and
cli
sbb
loope
push
dec
pushf
add
xchg
sbb
mov
inc
data16
mov
es
loop
ljmp
xchg
sbb
sub
leave
push
cltd
dec
sbb
push
or
dec
clc
push
bound
addr16
int
lret
mov
xchg
test
adc
xor
fwait
sbb
dec
adc
testb
inc
in
mov
or
test
push
ret
sbb
daa
add
mov
lret
push
xchg
push
movsb
divb
adc
aaa
into
jb
int
xchg
loop
das
mov
mov
loope
adc
addr16
ss
rcrw
clc
sbb
movsl
xor
insb
out
mov
jbe
lods
xchg
ret
xchg
xor
movsl
popf
jnp
push
ficoml
dec
cmp
jb
adc
and
mov
out
add
mov
dec
fwait
xchg
mov
lock
outsb
test
outsb
xchg
xchg
jge
pushw
push
pushf
cmpsl
xorl
iret
cmpsb
scas
push
ja
cmp
out
xchg
add
fsts
mov
xchg
outsb
push
push
repz
fisubl
dec
subl
mov
jne
jmp
adc
jns
shlb
cmp
es
push
adc
clc
sarb
enter
stc
jae
push
xchg
cmpsl
xchg
mov
test
mov
pop
call
pop
pop
orl
fstpt
outsl
cs
sub
lds
sarb
loop
loop
loope
xchg
dec
and
jne
stos
out
flds
mov
test
mov
lock
adc
inc
jns
pusha
div
push
orb
ljmp
lahf
inc
xchg
call
lea
repz
inc
cmp
imul
mov
outsl
add
mov
aad
fs
adc
mov
jp
dec
jge
adc
or
cmp
push
cld
sahf
fbstp
xchg
xchg
sub
shrl
pop
cld
mov
mov
mov
shll
popa
dec
or
mov
lods
imul
dec
mov
push
inc
or
fdivrs
jp
lds
pushl
xchg
adc
ja
sbb
insl
divl
mov
repnz
and
addb
xor
loopne
mov
daa
fistpl
loopne
mov
daa
mov
je
jo
aam
out
xchg
shrb
into
fwait
push
sbb
pop
pop
dec
jns
mov
nop
dec
pop
sarb
pushf
inc
lds
mov
jae
cmpsb
sub
xchg
and
loope
cmp
daa
jae
sbb
and
mov
jnp
cmp
flds
jg
imul
or
dec
or
rcr
pop
loope
scas
push
outsb
iret
int
ret
popf
sti
push
sbb
ret
dec
leave
ja
push
fstpt
add
ds
daa
repz
pop
lahf
dec
imul
in
mov
xor
jge
xor
dec
lock
fiaddl
clc
sti
sarb
cmp
cltd
inc
inc
jo
mov
and
add
mov
mov
paddsb
cmp
dec
je
fidivrl
stc
aam
lahf
leave
jns
ss
sti
push
movsb
out
jmp
lea
ret
jo
rol
mov
sbb
mov
or
inc
mov
outsb
mov
jnp
test
xchg
jg
addr16
scas
cmp
sbb
loopne
mov
xchg
loope
lea
mov
mov
mov
cmp
dec
add
mov
xchg
inc
pop
sbb
outsl
imul
adc
push
xchg
add
push
enter
int
pop
xor
test
sbb
nop
loope
outsb
cwtl
pop
cwtl
ja
bound
xchg
mov
inc
pop
cmp
inc
xor
neg
out
or
mov
adc
es
sbb
stos
pushf
xchg
jnp
pop
shrl
jne
stc
mov
and
int
ds
inc
mov
mov
lea
inc
sbb
push
jb
std
insl
xchg
pop
add
sbb
push
outsl
adc
aam
push
or
xchg
into
or
pop
sbbb
jbe
push
mov
push
insl
out
pop
aas
dec
xor
scas
mov
inc
cmpsl
mov
sarb
lcall
xchg
sbb
dec
sbbb
outsl
cmp
or
sub
push
in
push
int3
xchg
int3
in
dec
lds
decl
loopne
repz
jmp
in
imul
test
dec
ja
pushf
push
gs
cltd
pop
mov
mov
clc
sbb
dec
cmp
jg
clc
mov
mov
mov
cmp
pop
ss
and
stc
inc
outsb
mov
mov
sbb
inc
jne
lock
hlt
dec
pop
inc
ss
aas
dec
frstpm(287
cmpb
sub
icebp
loop
stos
cli
mov
add
push
mov
movsb
cld
or
lahf
mov
push
mov
mov
popa
clc
and
lock
adc
movsl
push
mov
orb
adc
pop
cmpsb
pop
popl
roll
sbb
dec
cmp
and
rorl
imul
push
lods
xor
or
jbe
lock
aam
inc
pop
imul
movsb
xchg
sarb
cmp
cltd
sbb
ret
inc
in
int
xchg
sahf
sbb
pop
dec
adc
push
out
lods
loope
jge
mov
pop
int
mov
sub
or
shlb
xchg
imul
xor
call
inc
ss
xchg
ret
pop
xorb
lahf
dec
aam
cmp
aad
and
test
inc
or
imul
xchg
bound
mov
inc
jo
arpl
incl
push
addr16
push
mov
pop
xor
into
sbb
cmp
ja
mov
sbb
icebp
fisttps
xchg
push
and
repz
mov
xchg
popf
cmpsb
sbb
push
mov
add
mov
and
add
xor
cmp
mov
push
test
sbb
pop
adc
rorl
loopne
pop
jb
add
fwait
daa
sub
mov
adc
lods
adc
sub
mov
lret
addl
xchg
mov
ss
aam
jp
ret
adc
out
mov
sub
mov
int3
dec
outsl
iret
addl
iret
jnp
daa
cmp
rcrl
or
mov
mov
in
lods
daa
js
sub
ljmp
lcall
stc
jle
dec
shll
and
inc
xor
iret
icebp
jno
mov
xchg
in
xchg
adc
sahf
pop
push
insb
mov
aam
sar
sub
insl
or
icebp
in
xor
pop
mov
pop
sub
inc
imul
dec
xchg
movsl
add
pusha
std
or
xchg
adc
sub
mov
push
das
inc
ret
xor
jl
mov
insl
add
mov
pop
fiaddl
lock
mov
push
outsl
enter
mov
call
sub
push
stc
inc
mov
loopne
inc
add
mov
push
bound
jae
leave
mov
sbb
inc
sub
in
lahf
jge
fcmovne
leave
cld
into
jl
pop
sbb
fidivrs
ret
pop
cs
scas
pop
dec
dec
scas
imul
ss
jge
orl
sbb
cmp
repz
pop
add
ds
jg
push
mov
jle
push
in
arpl
pop
cli
dec
lret
dec
mov
sahf
sahf
xchg
adc
rcrl
mov
inc
aam
popf
and
xchg
fimull
inc
fmulp
stc
cmp
xor
lahf
pop
jecxz
mov
mov
das
adc
push
mov
inc
or
imul
int3
neg
aam
movsl
push
adc
inc
outsb
je
in
jb
call
clc
popa
add
dec
enter
repnz
loopne
or
call
mov
fists
sub
insb
or
sub
mov
mov
add
jmp
repnz
inc
adc
adc
dec
cmp
inc
test
inc
xchg
push
dec
xor
imul
sbb
pop
mov
shl
insb
lock
pop
imul
cltd
xchg
movsl
pop
pop
lcall
lea
cmp
fcoml
mov
mov
adc
imul
leave
lods
xlat
xchg
aad
mov
xlat
mov
push
jb
or
rolb
or
jb
popf
fiadds
push
mov
sbb
dec
movsl
je
xor
mov
and
loopne
int
movsl
jne
aad
and
dec
cmpsb
xor
addl
int
loop
dec
cmc
add
lds
mov
rcl
scas
mov
repz
mov
dec
jp
mov
push
fnsave
xchg
lcall
test
rolb
sub
loope
outsb
and
sbb
fsubl
mov
arpl
pop
mov
std
fwait
or
movb
lods
fidivs
loop
mov
sbb
sti
ret
divl
jmp
jae
in
sub
fucom
psrlw
addl
cmp
mov
add
jmp
cmp
fcmovb
push
jge
jne
push
mov
movsl
pop
push
dec
into
push
stos
iret
sub
push
shlb
xlat
aas
mov
adc
sti
mov
iret
lea
filds
pop
divl
inc
cmpsb
cmpsl
dec
fcoms
js
xor
es
push
xchg
push
call
mov
lcall
and
jbe
out
mov
cmpb
fwait
jb
aad
addr16
out
int
test
pause
scas
or
js
and
loop
push
leave
push
insb
fisubrs
ljmp
adc
lods
xchg
aad
add
loopne
in
xorb
scas
shll
popf
jg
xor
je
xor
xor
add
cmp
mov
adc
mov
ficomps
mov
scas
mov
mov
sbb
loopne
cwtl
loope
jp
popf
mov
fsubr
gs
sub
lahf
push
imul
outsl
scas
sbb
xlat
add
loope
fsubrl
pusha
inc
push
je
negl
and
std
push
pop
test
sahf
bound
arpl
pop
xlat
imul
sub
push
xor
mov
fsubrs
xor
push
cmp
bnd
inc
imul
mov
push
les
aas
in
cld
jg
in
mov
jmp
int3
dec
sbb
outsb
mov
dec
sbb
pop
and
sbb
mov
lret
testb
xchg
ja
subl
js
test
mov
mov
sbb
lret
sbb
jg
mov
or
ret
or
xor
push
out
lods
out
dec
xchg
clc
outsb
insl
call
test
lods
inc
hlt
insb
aaa
xor
or
xchg
and
and
xchg
push
sti
pop
and
xchg
out
in
push
sub
shl
mov
mov
add
and
cmp
lock
mov
mov
adc
daa
push
fs
mov
sbb
inc
lods
gs
or
cwtl
cli
lods
bound
mov
add
scas
sbb
adc
add
imul
ds
fisubrs
in
scas
jae
xchg
and
lock
cld
sahf
add
test
cmp
das
ficompl
inc
mov
cmp
iret
test
xchg
leave
jmp
sbb
stos
cs
pop
and
loop
ds
cli
adc
out
cmp
dec
inc
sbb
fcomp
adc
rorl
lret
jl
lods
mov
and
jl
pop
iret
dec
xor
xchg
fidivl
push
lds
dec
shr
popa
add
sub
sahf
push
sbb
and
lret
push
clc
stc
out
lods
mov
loop
rolb
arpl
jbe
xor
lock
daa
enter
and
outsl
cld
and
stos
mov
in
cmpsb
jnp
xor
loopne
addr16
xchg
test
andl
push
jge
mov
inc
push
push
lahf
add
scas
xchg
sahf
jmp
jns
jp
push
cmp
icebp
repz
jl
fs
mov
jns
movsb
int
mov
jno
loop
loopne
sub
sub
testl
into
inc
pop
arpl
push
mov
push
fbstp
push
pushf
jmp
mov
cmpsb
out
and
inc
mov
shrb
cmpb
sub
lcall
mov
out
lcall
push
jbe
scas
pop
js
hlt
pop
rcrb
mov
repz
clc
scas
xor
push
push
add
mov
nop
test
inc
push
jl
sbb
out
loop
sbb
mov
pop
adc
orl
sub
int
mov
dec
js
jbe
jp,pn
and
xor
out
adc
sbb
iret
mov
or
insb
ret
in
es
enter
jnp
adc
add
adc
push
repz
or
enter
mov
sbbb
movsb
fs
in
push
mov
fcmovne
cmpsb
in
imulb
stos
test
jno
cld
lcall
shlb
popl
mov
call
cmp
xchg
cmp
xchg
les
xchg
mov
mov
xor
sub
mov
mov
sbb
cld
push
inc
iret
std
cmp
in
cwtl
loope
in
sub
fldcw
mov
push
inc
lahf
outsl
mov
je
pop
xchg
pop
jns
fistl
mov
pop
add
xor
or
int
mov
jp
mov
aad
jge
mov
jmp
repz
and
or
mov
inc
cmpsl
pop
sbb
es
mov
sub
fst
sahf
pop
not
jecxz
shr
inc
fidivs
lcall
lock
adc
std
mov
cmc
test
inc
push
out
mov
sbb
mov
rcr
mov
adc
sbb
inc
shll
hlt
pop
pop
adc
pop
push
inc
pop
sub
jle
int3
std
jg
es
sbb
outsl
cmp
shlb
xchg
dec
mov
sub
xor
lea
dec
enter
xchg
scas
movsb
test
mov
push
imul
movsb
xor
lahf
xchg
cmp
cmp
xchg
sar
std
stos
push
push
mov
hlt
cmp
push
push
mov
lahf
insb
dec
in
jb
fldenv
push
cltd
shl
inc
loopne
or
pop
fs
pop
push
out
mov
mov
jle
lock
push
cmp
push
lock
sbb
mov
popa
cmp
jbe
sbbb
sub
sbb
pop
xchg
cmpsb
mov
aam
dec
cltd
adc
lds
fmull
jle
fdivl
mov
movups
xchg
mov
jbe
dec
popa
in
cltd
dec
push
pop
fsts
clc
mov
mulb
push
ficoms
je
test
mov
les
dec
out
mov
jno
jmp
stos
rorb
or
pop
pop
std
fwait
xchg
cmc
arpl
adc
xchg
and
fildl
or
add
pop
mov
in
jbe
loope
jecxz
mov
lock
mov
or
pop
pop
insb
int3
das
sahf
xchg
cmp
and
push
bound
sahf
adc
dec
pop
push
cmc
xor
cmpsl
inc
jge
push
xchg
pop
ror
scas
jo
pop
cmpsb
cmpsl
jnp
push
cmpsl
dec
mov
cltd
or
insl
addr16
pinsrw
pop
popf
and
push
popf
sub
xchg
pop
roll
cwtl
pusha
outsb
in
clc
mov
or
hlt
add
aas
xchg
je
cmp
stos
xchg
push
xchg
jg
mov
cs
hlt
sahf
in
aas
pop
jecxz
lcall
scas
mov
insl
int
roll
cmp
sbb
roll
jmp
jne
rcrb
push
push
in
or
movswl
jge
dec
rcl
adc
push
or
jne
cmc
lods
dec
dec
scas
sbb
insb
js
dec
cli
xor
ss
cmc
loop
push
jecxz
test
mov
xchg
clc
inc
cwtl
das
pop
rorb
pop
jbe
pop
loopne
js
test
sub
negl
hlt
loop
mov
mov
cmp
scas
mov
in
cmpsb
adc
pop
andb
xor
push
das
xor
icebp
push
bound
sti
bound
sub
push
cmpsb
repz
cmp
push
mov
clc
lods
push
inc
insb
mov
je
bound
fwait
pusha
mov
test
out
mov
fisubrl
or
jp
mov
add
shll
int
add
daa
pop
mov
rcrl
push
mov
add
pop
dec
ja
stos
jmp
scas
inc
movsl
popf
jnp
loopne
in
pop
sarb
das
push
movsl
mov
mov
push
inc
fmulp
adc
push
icebp
and
mov
xor
fildl
aam
imul
js
daa
pop
out
stos
ss
lock
mov
xchg
push
mov
jbe
adc
pop
andl
test
outsl
cmp
imul
cmp
adc
sub
int
adc
pop
mov
mov
inc
pop
arpl
addl
cmp
mov
push
aas
mov
icebp
test
aam
mov
pop
outsl
inc
lret
cmp
inc
test
jo
stc
out
in
inc
jmp
mov
add
aad
fcmove
addr16
stos
xchg
sub
jmp
lods
test
and
pop
sti
dec
movsl
jl
xchg
or
das
in
inc
pop
xor
into
dec
mov
mov
int3
adc
in
push
ret
push
jmp
adc
and
mov
mov
fdivs
sub
pop
test
and
jae
or
out
inc
cs
inc
pcmpeqw
or
das
jbe
shlb
out
mov
pop
cltd
cltd
mov
push
test
and
xchg
icebp
clc
add
xchg
mov
sbb
bound
lcall
jo
shrb
sbb
xor
mov
cmp
sub
ret
mov
sub
jno
sbb
cmp
imul
mov
cs
nop
cli
xchg
dec
mov
lods
mov
inc
add
movsl
inc
jbe
rcrb
ds
adcb
loope
pop
mov
and
add
ja
test
and
push
mov
mov
stos
xchg
push
cld
cmp
dec
movsb
push
push
movsb
sbbl
dec
incb
add
out
in
pusha
mov
lcall
mov
daa
mov
push
and
add
push
mov
mov
mov
into
sti
xchg
cmp
inc
scas
mov
inc
sbb
push
xchg
xor
roll
jnp
loope
add
jg
js
insb
cmp
aas
out
jg
sbb
decl
fistps
xchg
sub
or
add
cld
mov
adc
lcall
adc
rorb
ss
ss
cmp
lea
push
sub
sub
pop
adc
cld
addl
scas
fsubl
or
cmp
test
pushf
pop
mov
adc
cmp
aaa
sub
pop
add
imul
in
push
dec
and
sarl
rcll
mov
jae
push
ljmp
ret
js
dec
inc
xlat
pusha
into
ret
jecxz
inc
iret
inc
jmp
and
addr16
adcb
jmp
sbb
fmul
push
into
pop
xchg
cmpl
cmp
sbb
mov
push
vpxor
mov
dec
into
data16
cmp
mov
inc
mov
pop
inc
sub
sbb
arpl
add
sub
sbb
jne
push
lret
int3
mov
mov
sub
rclb
es
out
test
cs
mov
stc
notb
repnz
lcall
fdivl
iret
and
inc
pop
faddl
outsb
adc
sbb
cmp
mov
mov
mov
cmp
in
jno
xor
test
xchg
sbb
adc
jne
mov
mov
fstpl
std
mov
out
mov
add
test
pop
mov
aas
andl
jne
or
lods
pusha
enter
sbb
dec
call
adc
mov
mov
mov
sbb
push
jno
sub
test
ja
xor
inc
or
mov
mov
push
stos
mov
mov
out
lock
les
bound
divl
aam
pushl
pusha
ljmp
sub
add
aad
cmp
int
jb
mov
sub
lret
jmp
lods
jo
dec
ret
ret
sbb
cmp
xchg
out
push
jg
sbb
out
jle
pop
jno,pn
imul
inc
xchg
xor
cmp
mov
dec
or
aad
jnp
mov
aaa
adc
lcall
insl
cmc
pop
mov
xchg
dec
inc
shl
icebp
into
test
lahf
push
insl
testb
adc
shlb
scas
push
and
sbb
insb
or
inc
mov
sub
inc
or
inc
mov
loop
jmp
pushf
dec
jge
or
lcall
sub
add
jmp
cmp
dec
dec
test
dec
int3
fwait
adc
xchg
and
mov
sub
idivb
int3
mov
pop
pop
sub
pop
cmpsb
add
sub
rol
and
std
iret
outsl
mov
sbb
and
dec
add
or
adc
add
cmpsl
push
mov
js
lret
jp
imul
lods
push
pusha
bound
das
imulb
push
test
push
imul
imul
daa
test
xor
jecxz
push
cld
std
jl
insl
sbb
jo
arpl
inc
int3
pop
rcrl
loopne
xchg
cmp
mov
das
in
idivb
out
xor
lret
mov
pop
jg
mov
jo
mov
add
cmpsl
mov
decl
out
loope
push
xchg
push
mov
jbe
lahf
int3
mov
lock
sbbl
jae
or
iret
popf
rclb
fwait
nop
push
mov
les
sti
fdivrs
ljmp
add
std
lds
outsl
xchg
cmp
repnz
shlb
and
push
add
sbb
insb
int
mov
mov
xchg
pop
ja
or
mov
push
imul
in
fcomip
sub
adc
sub
xchg
shll
enter
lds
ret
loopne
jbe
dec
sub
call
scas
daa
xor
dec
mov
sbb
fists
mov
test
dec
jno
lret
dec
outsl
fwait
movsb
sbb
pop
lock
shll
test
mov
inc
out
fmull
and
sbb
ret
xor
pop
test
jb
leave
decb
push
pop
test
jmp
fidivl
cltd
call
lahf
icebp
hlt
xchg
add
aam
pop
les
push
mov
ret
call
repnz
hlt
pop
imul
xorb
iret
and
fldt
dec
jecxz
cmp
fisubrs
mov
xchg
rol
mov
sub
enter
dec
data16
inc
mov
lods
jb
inc
push
rcr
popa
shlb
mov
call
dec
add
xor
repnz
sub
gs
jbe
mov
pushf
pop
push
outsl
push
pop
xor
push
fwait
test
sbb
push
inc
pushl
fucomp
rcrl
leave
adc
enter
enter
push
repz
sbb
xchg
jmp
adc
shlb
push
ror
xchg
jns
jp
stc
sbb
push
adc
test
mov
jle
dec
pop
lea
movsl
xchg
test
sti
fdivp
cli
test
xor
add
fcomip
pop
pop
xor
mov
stos
push
into
popf
xor
mov
mov
pop
imul
popf
inc
xchg
in
push
mov
outsb
das
out
adc
ss
pushf
lods
xor
or
bound
mov
mov
pop
scas
add
bound
xchg
mov
mov
cmp
xor
inc
cmpsb
jb
jnp
sbb
mov
imul
xor
nop
js
out
leave
inc
js
inc
mov
jns
dec
int
mov
or
push
push
adc
fwait
in
mov
lcall
jp
dec
jecxz
pop
sub
in
in
insb
push
jmp
mov
mov
pop
mov
or
in
aad
sbb
jmp
rcrb
mov
shl
test
movsb
test
and
jae
loopne
add
aaa
push
mov
fwait
push
add
sarl
inc
pop
push
adc
adc
in
movsl
hlt
int
cmp
push
ljmp
push
pop
pop
loope
into
cmpsb
outsb
inc
sub
push
sub
sbb
or
shrl
dec
stos
push
jne
cs
loopne
dec
add
adc
loope
inc
aas
ja
xorl
jo
push
push
xlat
dec
sahf
jmp
jg
shlb
xorl
dec
mov
mov
add
mov
les
pushf
mov
loope
adc
jecxz
test
add
nop
push
jb
inc
add
popf
jge
push
adc
repnz
sbb
iret
mov
jae
or
adc
movsl
jl
mov
rcrb
mov
push
or
jecxz
call
mov
fisubrs
outsl
lea
cmp
pop
loope
and
push
das
xchg
sti
sub
fistl
negl
lods
ljmp
addr16
shlb
mov
add
mov
push
pushf
out
cmp
jb
fidivrs
addr16
inc
xchg
repz
int3
scas
xchg
lahf
mov
xor
xor
pop
sbb
loop
enter
in
xchg
and
sysexit
imul
cs
mov
xchg
outsw
push
jo
pop
dec
dec
stc
gs
pop
imul
cli
pop
mov
xchg
or
jmp
std
cmc
push
pop
out
or
sbb
cmp
rolb
in
or
sub
cmp
lcall
push
add
pop
push
sbb
xor
lds
outsb
pop
xor
jns
out
and
out
lea
adc
inc
out
cmp
mov
push
div
lods
test
xchg
cmp
adc
ljmp
jmp
ret
xor
dec
aad
xchg
push
cltd
lods
into
sarl
sbb
out
push
jo
xchg
mov
mov
sbb
lret
inc
pusha
pop
rep
mov
lsl
add
jae
push
dec
jl
aaa
scas
mov
dec
or
lods
jae
cld
movsl
loope
jns
scas
cmp
stc
sbb
imul
test
sbb
mov
adcl
sarl
inc
pop
mov
mov
cli
xor
in
add
out
push
loopne
std
icebp
sub
out
and
mov
arpl
mov
sub
dec
js
shl
mov
mov
mov
mov
mov
adc
inc
pop
es
int3
pusha
mov
scas
rorl
pop
sub
or
pop
or
sub
loop
insl
xchg
cltd
cmp
lea
enter
dec
jb
adc
add
int
outsb
and
xor
adc
pushf
cwtl
shlb
mov
mov
nop
sbb
jbe
mov
pop
mov
jo
cmp
inc
sbb
cs
insl
adc
mov
mov
add
test
cmp
mov
dec
push
inc
add
repnz
lret
subb
js
imul
xchg
mov
add
mov
rcrl
mov
punpckhdq
add
js
xor
add
push
cmp
ds
or
or
lcall
sub
fwait
push
loopne
ss
inc
mov
lret
cli
sahf
jns
into
xchg
sbb
arpl
pop
movsl
cmp
pushl
xchg
in
pop
and
mov
xchg
cmpsl
dec
std
cmp
sub
sub
dec
mov
jns
and
or
mov
cltd
jno
xlat
jb
jge
dec
pop
pop
and
push
cmp
into
push
pop
xchg
enter
pop
inc
je
mov
add
jnp
repz
addr16
fistps
cmp
sahf
pop
iret
fdiv
mov
jae
test
sub
andb
pop
xor
leave
cmp
push
cltd
leave
aaa
cmp
ljmp
aam
ds
xchg
pop
xor
xchg
and
call
js
mov
bound
or
and
addr16
or
mov
popa
punpcklbw
fistpl
jns
xchg
mov
xchg
push
mov
bound
xor
or
xchg
jge
adc
push
sysret
cmp
out
ljmp
mov
add
push
ja
and
mov
pusha
xchg
sub
scas
in
jbe
push
fidivrs
stos
dec
clc
pop
mov
aaa
or
adc
pusha
out
xor
pop
sbb
loopne
rcrl
int
jo
sub
or
xor
xor
lea
fsts
data16
add
lock
data16
test
pop
nop
into
enter
pop
ds
xchg
mov
sbb
nop
push
ljmp
xchg
ja
out
push
test
cmc
cmp
or
dec
cs
inc
pop
xlat
test
mov
mov
movsb
das
es
out
lods
lods
aad
mov
popa
sbb
mov
lsl
pop
ret
push
add
stos
xor
cmp
push
jecxz
lret
or
mov
fnstenv
insb
mov
fisttpl
jle
sti
xor
xchg
daa
mov
mov
call
lods
mov
add
scas
pop
hlt
add
repz
sub
sub
movsb
adc
lret
sub
aaa
and
pop
in
cwtl
push
sahf
fnstcw
sarl
loop
mov
xor
xor
cmpsb
cmp
sti
push
sub
inc
xor
mov
sarb
adc
jecxz
mov
inc
xchg
pop
dec
pop
pop
adc
ljmp
mov
cmp
mov
fmuls
test
iret
cmpsb
mov
lcall
fwait
sub
pop
add
push
sbb
cmp
out
xor
add
xchg
xor
mov
lcall
pop
sbb
outsb
push
or
ss
lods
lock
jle
jg
and
arpl
push
jne
dec
mov
jecxz
pop
xor
sti
in
or
imul
sbb
and
in
sub
fsubs
inc
jns
mov
sub
in
mov
dec
xor
cli
xchg
shrl
jno
mov
mov
cmp
shrb
push
sub
pop
jmp
rorl
xchg
pop
jg
mov
push
out
dec
hlt
and
scas
aaa
fmuls
mov
sbb
pop
and
cs
dec
sbb
lods
movsl
dec
inc
jmp
sbb
pop
lahf
mov
mov
sbb
nop
lcall
sub
dec
subb
jbe
mov
scas
adc
pop
cltd
jb
lods
sti
push
pop
fisubrl
pop
in
mov
dec
push
stc
fcoms
sbb
mov
les
adc
or
mov
ret
sti
ljmp
scas
mov
xchg
std
mov
in
jmp
xchg
mov
jno
xlat
mov
ljmp
jl
popf
das
testb
cld
sbb
leave
and
mov
into
xchg
jb
in
dec
aaa
aad
mov
mov
xchg
push
mov
push
imul
mov
and
inc
dec
pop
inc
xor
push
xor
mov
dec
repnz
test
call
ret
movsb
xor
add
cmp
and
test
ja
xchg
ds
insb
es
jo
xchg
sbb
outsb
mov
rclb
xchg
push
jmp
addr16
mov
push
imul
jecxz
pop
inc
mov
pusha
fisubrs
cli
hlt
xor
pop
insl
das
imull
outsb
shlb
jns
daa
ss
sar
pop
adc
adc
jae
daa
add
mov
xchg
cmp
adc
into
shl
mov
mov
push
pop
imul
imulb
dec
sbb
push
and
roll
sarb
dec
icebp
dec
sahf
push
jne
sbb
mov
or
movb
or
sub
jne
sub
cs
cltd
push
insl
ret
and
iret
pop
xchg
jg
aaa
dec
cli
mov
jg
add
and
movsl
mov
rcll
out
jb
gs
das
or
popf
adc
cmp
add
push
and
mov
mov
pop
jmp
rcl
push
fldcw
jnp
add
mov
xor
clc
jo
je
mov
mov
cli
or
cmpsb
clc
xchg
cmp
iret
sub
mov
es
sar
mov
mov
pop
mov
jae
add
lret
mov
dec
stc
das
dec
fincstp
insl
imul
cltd
mov
sti
pop
cmp
push
sub
push
stos
pop
cmp
in
test
jp
aas
cmc
movsl
sbb
in
mov
mov
shlb
test
sub
cmp
in
outsb
xchg
or
pop
lods
repnz
dec
inc
jl
outsb
scas
pop
mov
jge
loope
push
pop
cltd
imulb
cmp
shrb
mov
sbb
hlt
fsubl
out
rep
stc
lea
test
adcb
stos
and
push
xchg
lcall
out
fs
cmp
cmp
sub
mov
mov
sarb
sub
add
xchg
jmp
fldl
imul
or
sub
xlat
inc
addr16
fisttpll
movsb
jl
cmp
mov
lods
mov
adc
clc
push
push
iret
push
sahf
hlt
rolb
sub
loopne
repz
lods
dec
mov
ret
mov
or
mov
mov
adc
cmpsl
lds
data16
cltd
and
imul
xor
adc
aaa
mov
jae
call
adc
pop
sbb
mov
mov
push
sub
xchg
cs
jo
les
xor
cltd
and
jge
xor
inc
fiadds
hlt
mov
das
mov
lods
dec
aaa
mov
out
mov
sbb
lods
insb
pop
loope
cmp
mov
and
mov
pop
jo
stos
mov
test
inc
push
lret
mov
mov
mov
test
push
sub
push
jmp
repz
cld
or
mov
in
mov
hlt
shll
hlt
imul
addl
mov
js
jo
cwtl
fldenv
and
xchg
xor
stc
mov
movsb
popa
ja
out
lock
addr16
cmpsb
roll
pop
push
cmp
stos
popf
jo
andb
xchg
gs
dec
mov
nop
jns
push
popa
popa
inc
fstpl
mov
mov
mov
cmpsb
sbb
out
add
fninit
jne
popa
in
sub
lock
push
mov
adc
xchg
ret
dec
out
push
dec
push
and
aaa
fistpll
add
or
leave
outsl
lret
subl
out
in
mov
out
iret
adc
adc
xlat
or
shlb
std
and
push
popa
push
mov
mov
subl
das
std
nop
mov
int
xchg
jb
cmpsl
pop
mov
and
adc
lahf
int3
add
inc
mov
gs
xlat
xchg
popa
inc
mov
cmp
push
mov
jns
jno
mov
test
push
in
rorl
aas
loope
ds
fsubs
stos
repz
xchg
add
lea
inc
sarl
jnp
push
lods
inc
xchg
inc
addr16
dec
inc
stos
xor
subl
dec
jmp
cmp
add
jg
psubusb
mov
or
ds
pop
mov
inc
push
das
pushf
mov
jb
jp
fidivrl
add
rorb
jl
cmp
mov
push
sub
sbb
je
fcompl
enter
fdivr
rol
cmp
add
or
mov
lods
jp
out
or
repz
rcr
or
xchg
push
cmp
roll
push
dec
decb
lea
stos
aad
pusha
mov
nop
leave
pop
jl
aas
mov
inc
inc
cli
sub
add
cmp
jge
jno
loope
mov
sti
sub
fidivl
push
push
out
pop
cli
stos
and
xor
add
out
inc
xchg
jecxz
fnstcw
cmp
push
shrl
mov
jae
cltd
inc
rclb
rcll
pop
fcoml
push
dec
test
outsb
inc
out
aam
cmp
pop
mov
clc
leave
xor
das
mov
sub
xor
xlat
sbb
fcomip
cmp
in
adcb
jnp
pop
fsts
or
push
dec
shl
jne
int3
add
mov
dec
or
jo
push
sbb
imul
dec
insb
sub
xchg
mov
push
xor
pop
jnp
std
sti
push
loopne
xor
and
je
mov
xchg
push
sbb
popa
les
fdivrs
lds
adc
out
ficomps
push
cmp
or
aaa
jnp
lret
fidivs
orb
ja
addl
fiadds
les
roll
rclb
fsubl
push
pop
lret
lock
jne
maskmovq
notl
lea
xlat
les
xchg
jmp
xchg
movsb
jmp
cmc
xorl
and
lods
cmp
pushf
divl
push
in
pusha
movsb
jns
insb
push
cmp
adc
insb
push
out
ljmp
sbb
popf
mov
in
dec
fldcw
rorb
push
popf
int
push
scas
ret
fdivrs
push
imul
adc
ffreep
dec
movsb
ja
outsb
lock
out
xor
je
pop
in
shll
pushf
faddl
jnp
xor
pop
xchg
jb
mov
hlt
enter
sub
mov
imul
jne,pn
rcrl
xchg
popf
jne
orb
ja
outsl
ret
push
pop
jge
ret
fbstp
lock
stc
shl
xchg
mov
or
imul
fisttpl
xor
and
sti
notb
enter
testl
adc
xor
cmp
push
sbb
pop
sub
lods
pop
in
outsl
aas
mov
gs
divl
or
push
mov
repz
in
cmp
mov
rcll
mov
rcr
dec
cmp
incb
add
jae
xor
xchg
xorb
mov
addl
push
mov
lock
test
hlt
ret
jle
mov
jg
mov
dec
add
cmp
loop
xor
jbe
loope
xchg
je
ljmp
add
mov
fldenv
or
in
js
mov
inc
mov
cmpsl
pop
inc
adc
push
mov
push
shll
mov
inc
pop
sahf
mov
cmc
inc
imul
dec
clc
mov
jno
xchg
pop
pop
call
sbb
pop
lods
xchg
mov
mov
mov
fldl
inc
or
sbb
int
imul
push
shlb
cmp
sub
push
fdivs
adc
sbb
xor
shl
add
sub
into
push
cmp
inc
ficoms
pop
inc
cmp
neg
shlb
xor
dec
popa
pop
popl
dec
dec
xchg
pop
jecxz
cld
sub
lahf
adc
ret
mov
daa
add
dec
cmp
movsl
cmp
arpl
and
push
test
ret
jmp
xchg
gs
mov
int
lcall
js
add
sti
add
adc
sub
inc
sbb
add
cli
fildl
mov
mov
in
push
sbbl
in
sub
lahf
lret
leave
sahf
mov
aaa
xchg
mov
adc
inc
leave
stos
repz
add
mov
adc
mov
aaa
into
adc
inc
loop
ljmp
nop
mov
mull
pop
ss
lcall
lods
or
cmp
arpl
ret
loopne
xor
ljmp
pop
test
mov
cs
push
mov
adc
fdivrp
push
mov
mov
shrl
int3
sbb
inc
test
jg
rorb
xlat
scas
or
rol
incl
subb
add
shlb
add
shll
out
cli
movsl
imul
inc
leave
pop
xchg
xor
lret
xchg
test
xchg
mov
cltd
pop
sti
fmuls
mov
les
aas
mov
ds
push
aad
icebp
ljmp
jb
mov
xchg
sub
pop
jl
ja
les
js
dec
fsubrs
roll
mov
inc
adc
xchg
or
rolb
cmp
in
js
cli
clc
scas
test
ret
addr16
fists
cmpsl
pushaw
popa
jge
inc
xor
scas
inc
mov
fucom
and
bswap
in
inc
sub
mov
cmpsb
mov
and
mov
leave
dec
or
xchg
jne
fldenv
dec
or
out
popa
cmpsl
out
movsl
mov
lds
aaa
dec
cltd
fs
mov
sbb
xchg
repz
out
psubusb
rcrb
popf
cmpsb
ret
cmpl
std
dec
and
pushf
push
push
jl
sqrtps
fisttps
jns
fiadds
add
add
jmp
inc
mov
mov
xlat
jle
mov
add
sbb
or
xorb
js
mov
lret
mov
popf
and
mov
fadd
in
xchg
push
pop
add
mov
fidivs
ss
divb
cmp
cli
scas
inc
push
pop
jnp
orl
cmpsl
sbb
mov
xchg
stos
adc
lods
mulb
add
cmp
mov
movsb
scas
cmp
jbe
jo
cli
call
sub
push
clc
repnz
cwtl
cld
lret
push
test
xorb
bound
xor
repz
lock
fmuls
cmp
test
aam
fnstsw
mov
fsubrl
shl
and
sbb
fbstp
in
push
cli
add
and
xchg
and
lret
and
mov
inc
xor
xor
xor
pushf
sti
orb
mov
pop
loope
cld
jl
xor
jb
pushf
hlt
push
pop
pop
jg
adc
sarl
movsl
addr16
cmpsl
sahf
vpminsw
pop
sbb
cmp
movsb
adc
test
dec
outsb
jbe
enter
leave
stos
or
or
test
lret
popa
out
dec
daa
fcmovnbe
test
xor
and
mov
inc
movsl
pushf
nop
ficompl
cwtl
addb
testl
lods
jp
outsb
ret
mov
mov
fildl
mov
test
in
es
xor
jbe
adc
add
xchg
xchg
icebp
lret
pushf
inc
mov
mov
aas
dec
push
adc
bound
in
or
movsl
inc
xchg
fs
or
mov
out
mov
jb
in
inc
imul
xchg
lods
jo
xor
sub
scas
mov
dec
out
cs
dec
xchg
fiadds
pushf
pop
xchg
dec
pusha
mov
testb
push
enter
insb
rorb
adc
sbb
test
repz
repz
xor
rolb
sahf
movsl
filds
mov
out
or
es
mov
mov
push
sub
repnz
pusha
stos
jb
fbld
repnz
imul
cmpsl
mov
cmpsb
sbb
inc
loope
stos
add
mov
rcrb
sti
pushf
imul
push
inc
in
push
das
mov
test
in
push
fs
add
xchg
adc
push
dec
imul
inc
repnz
fnstsw
sbb
pop
dec
loope
jecxz
xchg
les
push
sarl
cmp
lods
push
fsubl
or
fwait
mov
xchg
cmpsl
pop
and
fsubl
test
aaa
inc
icebp
mov
bound
jge
adc
pop
dec
xor
mov
push
sbb
test
xchg
in
mov
sahf
xor
adc
jle
fiadds
rorl
in
pop
xor
loop
jl
jle
stos
jnp
cld
pop
xor
ss
sbb
sub
add
bound
adc
arpl
aaa
fdivl
hlt
adc
in
add
mov
mov
leave
cwtl
enter
or
out
scas
cmp
mov
div
cld
mov
pop
subl
xor
xor
mov
lret
cmp
popa
jle
shl
out
in
in
pop
ljmp
push
xchg
mov
dec
enter
cmp
out
push
int
shrb
mov
addb
idivb
and
jmp
adc
lahf
and
jle
scas
aam
cmp
call
cmc
xchg
jbe
jge
mov
gs
push
aas
or
inc
mov
loope
pusha
mov
leave
inc
mov
dec
mov
or
std
xchg
mov
cmp
push
or
adc
enter
cli
rcrb
push
sub
cmp
xchg
popa
pop
dec
adcl
xchg
lcall
addr16
push
inc
mov
cltd
xchg
sbb
xchg
mov
jg
sub
jns
fsts
dec
sahf
cmpsb
mov
mov
adc
adc
lahf
fidivrs
adc
xchg
into
jbe
pop
add
dec
and
adc
call
mov
aad
hlt
xor
or
inc
xchg
aas
xlat
shlb
cmp
loope
pop
int3
lods
mov
cltd
xchg
stos
das
fsubr
pop
in
adc
scas
insl
sub
sub
punpckldq
mov
aad
xchg
inc
movsb
jle
or
dec
or
xchg
cli
cli
mov
movsb
mov
ljmp
jmp
mov
bound
push
mov
cld
add
jb
xchg
aaa
dec
cs
sarb
in
sub
jne
ret
cmp
stos
jbe
loope
push
fisubs
mov
shlb
jbe
sub
push
aam
pop
pusha
in
jge
outsb
ret
jge
jae
adc
add
and
xlat
jae
jp
sbb
push
jo
sar
pushf
sub
push
cmp
das
xor
mov
out
jecxz
cs
arpl
jp
pop
outsb
pop
fiadds
fwait
push
mov
cltd
jge
int3
lahf
adc
dec
out
jmp
and
jmp
jbe
sub
or
adc
fbld
pop
inc
mov
push
add
pop
pop
cmp
test
sti
push
fwait
loopne
xchg
fnsave
lock
jb
out
loop
jge
scas
fs
cmpsl
cmp
addr16
or
or
pop
lcall
adc
dec
push
subl
dec
push
inc
pop
aas
and
loop
mov
or
repz
xchg
inc
movsb
jl
test
mov
lods
mov
incl
mov
cs
xor
mov
jge
sub
popa
and
into
in
cmp
pop
cmp
lods
subl
add
daa
fdivrl
pop
xchg
push
jg
xor
pop
jb
and
cmp
pop
or
jecxz
leave
sub
add
cli
test
in
dec
or
adc
mov
jecxz
std
push
sti
cltd
xchg
fdivs
push
cwtl
loop
test
repz
push
into
mov
jno
outsb
mov
aaa
sti
xchg
sub
adc
mov
mov
jns
loope
jle
mov
cmp
push
mov
mov
add
mov
adc
dec
add
hlt
fcmovb
jmp
bound
inc
lret
jecxz
mov
push
xchg
xchg
inc
insl
pop
add
mov
xor
test
add
sbb
pop
out
aas
mov
jmp
sub
lret
stos
push
add
cmp
add
das
fsubrs
push
decb
movsl
dec
add
add
adc
mov
cmp
jge
xchg
jl
inc
fisttpl
shr
sbbl
pmulhw
iret
xor
in
xchg
orb
fildl
outsb
ljmp
cwtl
adc
loopne
repz
and
out
in
icebp
dec
lea
fisttpl
xor
mov
push
mov
cmp
mov
dec
testb
pop
xor
shlb
movsb
mov
mov
stc
add
mov
push
add
adc
shr
jmp
mov
mov
jge
mov
jg
sbb
scas
pusha
or
ja
cs
sbb
dec
sahf
lcall
push
mov
mov
xchg
and
in
je
xchg
jmp
pop
insl
pusha
lods
cmpsl
rorl
je
pop
rorb
ffreep
das
orb
cmp
subb
cmp
dec
inc
lret
insb
add
push
stos
pop
push
sub
and
dec
pop
call
lods
into
mov
and
cli
and
lea
mov
jle
add
test
or
shlb
mov
push
rcl
and
adc
iret
dec
test
stos
sbb
mov
fucomp
repz
ss
rcll
loope
mov
pop
push
dec
pop
loop
and
lock
mov
or
or
pop
repnz
adc
mov
out
cld
shlb
jno
sub
push
pop
ja
popf
aam
fldcw
mov
repnz
adc
enter
and
xchg
sub
and
sbb
pop
jp
mov
xor
cld
gs
mov
mov
jle
rcrb
adc
dec
popf
out
dec
sahf
cli
clc
fisubrl
in
les
sbb
jmp
cmp
in
adc
jmp
jge
out
hlt
jae
mov
push
pop
fisubrl
loopne
adc
sbb
rolb
xlat
ljmp
push
dec
ljmp
dec
icebp
iret
aad
incl
out
mov
dec
pushf
out
dec
xchg
and
outsl
lods
fisttpl
in
sahf
xchg
xchg
out
std
mov
jmp
pop
jbe
sahf
or
pop
xchg
mov
or
lahf
xchg
loope
mov
mov
lcall
mov
in
lahf
mov
lods
cli
ret
mov
adc
jecxz
bnd
lods
mov
and
inc
sub
dec
repnz
mov
mov
and
js
mov
enter
test
mov
add
and
arpl
pop
xor
mov
popa
mov
lods
out
add
xchg
mov
sub
adc
xor
mov
xchg
daa
xor
fidivrs
jno
inc
push
std
out
negb
jne
test
sti
mov
stos
or
sub
aaa
fwait
mov
push
mov
cltd
push
dec
xor
scas
aas
in
cs
push
outsl
add
jo
stos
pop
dec
jge
cmpsl
sbb
lahf
cmp
cmp
xchg
or
filds
pop
fnsave
sbb
popa
mov
xor
sti
decb
in
mov
jb
adc
test
xor
xchg
fmuls
pop
add
push
jno
ficoml
scas
mov
lret
test
out
add
les
lcall
pop
in
aaa
dec
shlb
pop
mov
push
pop
jg
dec
mov
dec
out
movsl
dec
mov
sbb
mov
and
dec
pop
shrb
jle
pop
xor
lahf
ds
mov
mov
dec
mov
xor
fdivrs
lock
pop
fldt
sub
mov
push
mov
loopne
in
pop
jns
cld
in
or
add
ljmp
pusha
jge
mov
cld
std
dec
add
sbb
mov
stos
xchg
in
pop
inc
pusha
cmp
inc
push
and
inc
fnstenv
adc
testl
sbb
add
gs
xor
push
cld
loopne
xor
lds
lds
cmp
push
mov
outsb
fldcw
hlt
divb
or
push
addr16
ffreep
inc
add
sub
xchg
xchg
mov
cld
incb
outsb
out
jg
cmp
sahf
ret
rcrb
into
mov
pop
loop
scas
sub
or
lret
andb
sbb
out
sarl
mov
sub
push
sahf
loop
shrb
loope
pop
push
mov
out
es
ja
jo
outsb
add
lods
xor
pop
push
inc
popa
adc
mov
xor
fldenv
jne
decl
pop
sub
call
sbb
les
mov
mov
test
or
scas
mov
or
or
push
or
mov
fdivrs
addr16
dec
xchg
jle
dec
jl
mov
push
or
rcrb
insl
mov
fs
add
popf
es
mov
sahf
in
fdivrl
mov
push
jbe
aaa
cmp
out
dec
push
test
dec
sub
subb
mov
mov
mov
sti
lahf
scas
jmp
xlat
sub
dec
lret
outsb
xorb
lret
mov
out
mov
push
stos
iret
push
sbb
fs
mov
fimull
in
jne
hlt
iret
add
sub
fwait
iret
lock
mov
pop
rcl
imul
or
fcmovnb
test
cmp
and
jp
data16
jmp
pop
insb
imul
mov
shrl
ds
mov
cmp
mov
add
gs
sbb
xor
mov
mov
pop
cmp
pop
iret
pop
inc
and
cmp
push
loope
faddl
aas
cmp
mov
mov
jecxz
xchg
sar
mov
cld
cmpsl
out
das
lds
roll
test
pusha
dec
into
inc
push
dec
lock
sub
dec
pop
mov
fimuls
ss
add
mov
call
ja
loopne
das
xchg
in
imul
sahf
or
mov
push
dec
xchg
repnz
fwait
mov
les
out
iret
jnp
in
testb
or
arpl
lods
pusha
psubsb
int3
push
push
or
ror
dec
and
arpl
movsb
shll
push
les
xchg
loop
xor
inc
xchg
jecxz
ficomps
stc
sarl
sbb
add
mov
les
push
mov
sbb
loopne
add
das
movsl
test
jno
sbb
outsb
popf
push
iret
enter
push
lds
cltd
xchg
jo
insb
xchg
aas
dec
loopne
lcall
pop
sub
aas
jg
xor
push
cwtl
xchg
call
pop
push
lahf
xchg
fnstenv
cmp
and
mov
and
imul
fnstenv
and
sub
inc
loopne
xorl
adc
mov
les
mov
mov
sub
aaa
je
lods
pop
jmp
and
es
dec
in
cmp
fwait
fldt
adc
fmull
cld
mov
out
insb
movsl
xor
mov
cmp
es
jo
shlb
cmpsl
loopne
inc
and
stos
pushf
andl
jo
cwtl
cli
jmp
xlat
push
dec
inc
out
xchg
mov
loope
dec
jbe
mov
mov
test
call
mov
cmpb
pop
ficoms
fs
xor
lock
xchg
sbb
pop
and
mov
shll
push
jecxz
in
flds
cmp
xchg
mov
jno
dec
mov
and
add
lret
movsb
push
fdivp
or
pop
mov
out
fcmovnbe
pop
push
dec
popa
cmpsb
push
mov
js
dec
xchg
mov
nop
mov
jne
ss
mov
lcall
pop
imul
shll
stos
mov
nop
push
subl
adcb
xchg
mov
xchg
mov
test
mov
or
inc
sbb
sti
push
xchg
pop
inc
lds
roll
and
push
rolb
nop
sub
lods
jg
jge
pop
mov
or
sbb
jecxz
jl
xchg
cs
test
lahf
cmpsl
aas
call
data16
out
loopne
sbb
mov
clc
push
mov
mov
push
aas
movups
sub
jne,pt
dec
jbe
dec
pop
adc
jns
popf
sub
and
sahf
into
inc
push
stc
jnp
data16
addr16
pop
je
adc
xchg
inc
mov
mov
movb
enter
repz
popa
repnz
xchg
pusha
fstl
sbb
adc
and
popf
inc
subb
sub
lea
dec
mov
in
repz
call
in
or
in
ds
xchg
std
xchg
adc
stos
and
pop
mov
gs
fwait
mull
sbb
xor
xchg
xlat
stc
ret
sbb
jno
xchg
lds
cmpsb
bound
out
andb
aad
xor
arpl
rcrl
jne
daa
flds
xchg
jne
flds
pop
out
stos
pop
mov
sbb
es
xor
jmp
in
mov
jo
cmpsb
xchg
lret
sbb
mov
fwait
jmp
lcall
mov
mull
inc
sahf
aaa
aas
jno
arpl
test
enter
mov
xor
pop
sub
pop
std
out
cmpsb
cwtl
ja
inc
loope
shl
cmp
sbb
test
loopne
adc
jg
jne
mov
push
push
jl
pop
cli
sti
lret
das
das
inc
data16
out
adc
dec
mov
fdivr
hlt
in
daa
in
mov
mov
cmpsb
in
sbb
push
ret
out
jmp
adc
adc
std
insl
push
out
sub
rcr
adc
pop
aas
stc
adc
ljmp
sbb
push
adc
cmc
xor
int
clc
lahf
adc
xlat
cmpsb
cmc
jmp
imul
xor
fstpt
and
mov
int3
loopne
stos
jb
shlb
sbb
cli
cwtl
push
aam
imul
push
xor
into
add
loopne
mov
cmp
stos
xor
xchg
mov
ljmp
cmc
cmp
or
jo
push
adc
sbb
sbb
xlat
or
movsb
inc
outsl
das
lret
data16
adc
mov
add
mov
popa
mov
mov
pop
mov
bound
and
ret
push
push
lret
jns
push
les
ja
sub
std
sub
dec
jb
jl
iret
pushf
and
aaa
cmp
xchg
repz
call
cltd
pop
jne
movsl
mov
out
dec
das
and
into
mov
push
xlat
push
cltd
scas
not
imull
mov
jb
sbb
aas
adc
push
cmp
and
mov
outsl
ss
pop
mov
pop
jl
push
scas
cmpsl
adc
setae
mov
repz
adc
aam
and
outsb
adc
and
aas
pop
out
insb
movl
mov
loope
sbb
jo
mov
mov
adc
pop
cmp
mov
add
mov
jecxz
in
fcmove
cs
xor
pusha
cld
aas
lcall
jns
cltd
fmul
push
arpl
pop
enter
std
lcall
decl
repz
icebp
outsb
repnz
inc
lods
jg
sbb
lcall
cmp
fdiv
aam
push
pop
add
insb
inc
ficompl
and
sarb
testb
rclb
or
in
test
sub
nop
xchg
or
pop
cli
or
add
sub
xor
sub
icebp
sub
sbb
xor
push
adc
push
add
cmp
pop
pop
outsl
sub
sub
xchg
add
fs
ficompl
jbe
pop
cmp
sbb
inc
cld
sbb
insl
int3
ja
push
addr16
inc
sub
roll
mov
push
out
ss
cli
pushf
nop
inc
jle
cmp
out
hlt
cmc
xor
push
mov
or
clc
inc
sub
add
mov
jg
lods
dec
loope
push
mov
sbb
xor
sbb
aad
push
dec
popf
divl
test
cmp
dec
pop
inc
lea
push
add
frstor
xchg
into
daa
jecxz
rol
call
repz
pop
nop
dec
in
or
dec
stos
mov
adc
and
test
mov
sbb
scas
sbb
lcall
and
icebp
fsubrs
loope
test
rorb
mov
pushf
push
fldenv
pop
xor
ds
dec
xchg
or
insb
push
sbb
insl
jnp
test
mov
loopne
aas
out
imul
push
das
cmpsl
pop
lea
cmp
shll
mov
pushf
jmp
and
inc
lea
dec
sbb
xor
std
out
outsl
mov
dec
jns
jge
shrb
ljmp
mov
xchg
in
roll
adc
inc
testb
ret
shrb
mov
pop
cmpsb
popa
xor
in
sbb
dec
mov
inc
dec
xchg
shrb
sub
cli
fxch
shl
xor
mov
popf
adc
or
mov
ficomps
jg
jmp
lods
inc
or
shl
jo
jp
dec
ja
dec
jle
xchg
add
bound
scas
stc
cmp
out
shll
or
loope
xchg
or
data16
push
mov
mov
cmp
icebp
mov
add
push
shlb
cmp
cs
dec
cmp
sub
shrl
scas
shr
sub
xor
lods
andb
xchg
jp
stos
pop
mov
xchg
jl
lret
mov
fistps
inc
cmp
push
rcll
add
or
andb
mov
in
add
jle
sahf
in
pop
and
popf
aad
sbb
fcmovne
rclb
call
mov
lea
sub
orl
sti
dec
fcompl
xchg
lret
cmovno
faddl
outsb
bound
out
sbb
jp
loopne
lret
add
cmp
mov
ljmp
adc
jl
ds
das
outsb
add
add
arpl
dec
and
mov
push
mov
ljmp
or
cmp
cmpsl
aam
or
xchg
push
lods
es
stos
leave
stos
push
aaa
xchg
test
pop
dec
adc
ljmp
addl
cmpsl
xchg
inc
cmp
push
shlb
stos
mov
shl
xor
stos
scas
icebp
outsb
imull
imul
adc
data16
mov
xor
xchg
rolb
cli
nop
les
push
out
push
daa
mov
fistps
outsb
xchg
and
cmp
lret
pop
mov
daa
dec
cmp
shll
mov
dec
in
mov
jns
sub
mov
push
inc
out
repnz
jnp
mov
adc
push
lea
xchg
test
xor
out
sbb
jecxz
cwtl
add
fnstenv
adc
leave
pop
jns
into
out
ljmp
aad
repz
lock
adc
cmp
jb
outsb
cmp
stos
pop
xchg
in
es
jg
out
jg
inc
nop
and
push
scas
pop
popf
cmp
push
mov
push
push
movsl
mov
loopne
icebp
xor
insl
ret
pop
pop
aad
sub
repz
pushf
cmpsl
dec
jnp
stos
cmpsl
or
clc
pusha
lds
pop
insb
aad
adc
clc
stc
jb
sti
adc
js
or
mov
xchg
pusha
cmpsb
push
mov
mov
and
inc
inc
mov
add
sahf
imul
in
adc
data16
push
lret
mov
dec
inc
movsl
pop
outsw
shrl
dec
ret
cmp
andl
rcrl
mov
xor
movsl
fcompl
adc
xor
inc
push
adc
jb
aam
sahf
sahf
ljmp
xchg
cmp
je
loop
cmpsb
mov
cmp
xchg
rorb
jnp
mov
or
jp
test
into
aas
sbb
jle
pop
in
shll
or
nop
mov
insl
ds
and
xchg
cmp
ret
adc
pop
jl
inc
cwtl
idiv
call
arpl
rcrl
and
cmp
push
mov
adc
push
sub
jae
sub
inc
sbb
xor
pop
mov
adc
xchg
push
pop
mov
fbstp
into
mov
sbb
scas
pop
repnz
jnp
sar
out
jno
xlat
sbb
imul
gs
or
add
imul
enter
jg
sub
hlt
xor
int3
ret
sahf
mov
xor
mov
sti
push
mov
adc
out
cltd
lret
mov
fcomi
test
xchg
out
out
sub
mov
pop
inc
pop
pop
lret
cmc
mulb
adc
ds
mov
dec
pusha
loopne
sub
in
lahf
stc
addr16
dec
mov
pop
jmp
rcl
dec
lods
pop
into
repnz
xor
mov
js
and
stc
xchg
xor
sbbl
xchg
out
lret
loope
sbb
cmp
xchg
ret
ss
ss
fldenv
cmp
pop
mov
jmp
mov
jmp
cltd
mov
int3
daa
sub
sbb
fsubp
jmp
cmp
test
mov
mov
dec
dec
mov
lahf
fs
sub
xor
repnz
insb
or
loope,pt
imul
pop
jns
imul
and
mov
dec
int
insb
xor
adc
mov
in
nop
in
adc
cmp
lea
adc
push
or
and
jns
xchg
sarb
mov
xchg
mov
repz
shl
jp
mov
push
jg
into
sub
pop
test
inc
insb
push
pop
test
mov
inc
daa
cwtl
imul
mov
sarl
orl
xor
cmp
jecxz
pusha
inc
lahf
cwtl
sub
push
lret
in
das
add
sub
and
inc
pushf
push
add
cmp
adcl
cld
add
mov
nop
cmpsl
js
icebp
rcr
jae
in
stos
inc
fbld
in
packuswb
push
outsl
andl
push
mov
sbb
pop
push
cmpsl
and
stc
pop
lods
dec
mov
cltd
int3
add
inc
test
icebp
andb
mov
iret
fldcw
inc
mov
fs
add
jmp
inc
sub
mov
aam
scas
add
and
cmp
mov
sub
adc
and
jnp
outsb
dec
mov
ja
cmp
mov
and
scas
pushf
sbbb
adcl
jae
popa
inc
mov
psrld
out
inc
lcall
test
push
clc
mov
mov
int3
inc
clc
push
adc
xchg
cmp
rcrl
or
outsl
loopne
out
dec
xchg
fwait
shll
mov
fistpl
pop
enter
and
outsl
xor
stos
out
insb
fisttps
pop
cwtl
xor
inc
adc
adcb
add
sahf
mov
shrb
stc
andl
data16
xchg
push
jp
popa
lods
sbb
xchg
cmc
pop
scas
sub
cmp
mov
mov
faddl
mov
cmp
bnd
pop
cltd
push
sbbl
outsl
divl
adc
cld
and
push
stos
in
mov
push
mov
cmp
mov
xchg
jmp
or
pop
in
xchg
insl
lcall
sub
mov
sti
movsl
inc
xchg
out
pop
int3
dec
lods
pop
or
pop
daa
jge
std
mov
add
adc
xchg
adc
addr16
das
and
jge
or
add
mov
mov
mov
pop
mov
repz
cmp
xor
insb
les
xor
jbe
pop
movb
xchg
das
ljmp
mov
or
cmp
push
inc
pop
and
ss
xchg
lret
xor
pop
fisttpl
dec
mov
repz
test
movsb
push
loope
push
pushf
out
pushf
mov
cmpsb
ja
scas
bswap
stc
lcall
mov
jae
arpl
lret
icebp
pop
pop
int
dec
loop
dec
xor
or
add
popf
adc
rol
lcall
stc
add
xor
lods
in
scas
push
or
mov
divl
push
addr16
pop
jmp
cmp
pop
jnp
ds
dec
cld
dec
lods
or
loopne
xchg
mov
add
xchg
lods
jne
xchg
lods
das
movsb
int
xchg
js
xor
leave
lods
sub
and
in
push
in
stos
lds
push
loop
sbb
mov
lret
lock
ficomps
cmp
inc
out
addr16
mov
je
push
adc
mov
xchg
jecxz
fidivs
divl
cwtl
neg
xor
mov
mov
xchg
pop
inc
pop
rol
mov
dec
inc
cmp
inc
cs
adc
sbb
bound
sarb
sahf
sub
pop
and
lds
fnstenv
sub
mov
aam
shrl
xlat
roll
and
pop
ljmp
ljmp
mov
insb
mov
scas
cld
sub
rclb
sar
mov
push
mov
fistps
fisubs
or
stos
insl
sbb
stos
adc
in
jo
addb
aaa
jb
neg
leave
mov
rorb
and
or
lcall
inc
inc
dec
cltd
clc
leave
icebp
scas
int3
sub
ja
xor
daa
decl
loop
xchg
lds
xlat
jp
jmp
rolb
scas
int3
and
pop
sbb
sbb
pop
mov
adc
sti
lods
xchg
adc
mov
popf
mov
cmp
cwtl
in
xchg
add
cmp
push
cmp
and
xchg
in
push
rclb
adcb
push
insl
cmpb
cmp
xchg
mov
xchg
adc
and
cmp
jge
jne
mov
pop
lret
out
sub
in
in
rcrl
outsl
add
xchg
jbe
jle
pop
push
cwtl
mov
aas
push
cli
adc
js
adc
mov
in
fcomi
in
cld
push
jnp
adc
jle
pop
pop
mov
cmpsl
daa
mov
mov
idivb
xchg
dec
paddw
les
lcall
push
jmp
or
out
fisttpll
jmp
js
push
jmp
loop
xchg
xor
mov
mov
pop
inc
lds
daa
popf
sub
inc
or
stos
std
mov
push
aas
outsb
pop
sub
mov
lock
mov
push
aaa
subb
lds
and
movsl
test
jnp
pusha
mov
test
out
std
insb
mov
add
sub
pusha
in
adc
xchg
out
or
cmpb
inc
jecxz
xchg
sarl
out
jge
lea
pop
cmp
scas
loopne
outsl
mov
sub
scas
outsl
or
movsb
popl
in
dec
push
pop
test
outsb
mov
je
test
rcrl
popf
adc
add
xchg
repz
pushf
xor
in
ret
testb
push
jb
decl
cmp
std
arpl
fdivs
xchg
ror
push
jb
imul
sbbb
mov
out
test
cwtl
cmpsl
sbbl
jmp
sbb
or
movsl
mov
cltd
in
sbb
int
iret
jo
mov
sbb
or
loop
push
ficomps
xchg
int3
ds
iret
ds
in
shll
sub
xchg
cmc
jmp
in
push
stos
xchg
mov
fstl
mov
xor
mov
mov
xlat
xor
xchg
add
shl
lea
shl
pushf
and
out
xchg
cmp
stos
pop
pop
call
pop
or
sbb
out
pop
out
adc
push
pop
dec
icebp
rcll
xchg
lret
add
aad
lret
out
cli
cmpsb
adc
dec
lret
fildll
mov
and
cmpsb
lret
jg
xchg
jb
int
lret
je
jbe
shll
xchg
xor
ljmp
js
push
sub
sbb
add
sbb
cmp
aad
or
pop
lret
dec
es
int3
xchg
mov
mov
sbb
inc
push
or
or
xor
std
in
fnsave
sub
lods
pop
sbb
mov
xor
mov
and
push
repz
ss
ja
xchg
fldenv
cli
adcb
cmp
push
xor
mov
pusha
test
lods
mov
popf
or
pop
stc
jl
sub
loop
xor
push
and
push
movsb
pop
jno
imul
inc
sbb
jg
jle
lahf
mov
mov
or
sysenter
inc
xlat
fists
subl
es
insb
adc
push
adc
lcall
push
xor
lods
inc
pop
push
add
fistps
jl
xchg
sub
push
jecxz
pop
dec
mov
loop
dec
xchg
mov
fwait
ds
mov
push
lcall
sbb
mov
mov
inc
xchg
loope
dec
je
and
test
bts
mov
popa
lahf
in
push
andb
sbb
shlb
repnz
dec
lods
stc
inc
or
cmp
inc
sbb
cwtl
push
sbb
out
lea
jmp
mov
sbb
cltd
arpl
inc
insl
add
mov
popa
in
scas
test
in
lods
fildll
ret
jne
adc
mov
pop
stos
push
movsb
int
aaa
jge
and
adc
hlt
push
mov
jl
sti
cmpsl
das
cmp
adc
sub
pop
fstpl
dec
mov
and
scas
sbb
mov
pop
arpl
cld
add
add
add
inc
imull
push
cltd
xchg
mov
inc
xchg
or
dec
imul
mov
lods
scas
dec
and
mov
or
inc
popa
bound
out
pop
xor
push
jne
sahf
clc
mov
in
cmp
in
sbb
jne
fsts
ficomps
out
push
xchg
xchg
bound
inc
imul
add
push
lret
js
jmp
out
sub
cmpsb
inc
sarl
call
in
xlat
sbb
repnz
loope
cmp
lcall
jl
in
jge
pop
push
lret
mov
add
int
outsl
fs
repz
pop
call
mov
rolb
daa
lods
and
call
fimuls
test
das
jo
adc
cmp
lds
pop
inc
cmp
stos
test
in
jmp
gs
in
divb
pop
jb
jo
movsb
cmp
xor
or
into
mov
inc
sti
inc
jecxz
nop
mov
sub
jb
mov
clc
ret
jmp
xchg
jae
pop
ficomps
xchg
pop
push
pop
fadd
lahf
pop
or
jl
clc
cmpsb
and
or
popa
cmp
mov
jmp
outsb
arpl
outsl
ret
in
nop
push
adc
xchg
and
loop
loop
test
dec
fimuls
pop
addr16
push
inc
sbb
and
lcall
int
scas
jl
nop
ficompl
jp
push
lcall
incb
mov
inc
push
xor
cmp
inc
fcompl
xlat
test
test
fmul
aas
cmp
xchg
cmp
dec
dec
mov
aad
mov
outsl
mov
inc
sbb
rolb
mov
lahf
add
pop
pop
push
fld
dec
mov
aaa
aaa
loop
or
shrl
out
pop
or
cmp
and
sti
fsts
repnz
out
mov
fstpt
repz
cs
inc
icebp
xchg
adc
sbb
fisubrs
mov
imul
fstpl
stos
jl
shl
lahf
mov
insb
sbb
gs
fistpl
push
sti
adc
in
jbe
push
repz
pop
mov
inc
das
mov
cmpsl
aam
dec
es
inc
dec
cmp
movsb
cmp
pop
pop
ret
dec
add
nop
push
and
pop
push
stos
ja
rcll
jns
into
sahf
fwait
xchg
jl
shll
lret
add
stc
gs
pushf
mov
jmp
or
hlt
inc
cli
aaa
xor
xor
adc
in
lock
dec
cmc
jl
xchg
jo
and
pop
or
scas
mov
movsb
pop
xor
out
pop
xchg
adc
mov
xor
adc
mov
pop
xchg
mov
movl
lods
lods
bound
pop
jae
lods
dec
pusha
inc
in
cs
pop
rolb
out
lods
mov
jo
push
pop
adc
dec
fisttpl
negb
stos
lds
insb
xchg
xlat
sbb
pop
mov
inc
xor
xchg
xchg
imul
push
or
repz
xor
adc
fstpt
sbb
lcall
or
push
rol
das
mov
dec
fwait
dec
pop
dec
mov
mov
imul
shld
repnz
adcl
add
stc
fldenv
push
jp
out
cltd
inc
inc
test
into
pop
aas
xchg
stos
sbb
fisubrl
stos
cmp
or
in
mul
cmp
push
out
loope
andb
iret
xchg
ja
movl
das
das
lret
jge
and
push
in
das
adc
sub
lahf
fsubr
lods
sub
adc
xor
xlat
fists
lods
and
jp
cmp
testl
loopne
xchg
insb
insl
and
jbe
or
cltd
scas
push
out
xor
aad
mov
xor
sbbl
xchg
pop
or
and
or
push
push
xor
xor
sub
xchg
mov
loope
sub
cld
insb
ja
lahf
xor
data16
ljmp
xchg
imul
jno
enter
inc
xorb
rcll
sub
and
rep
jnp
dec
adc
scas
jecxz
pop
imul
mov
inc
js
pop
push
cmpsb
or
push
xor
fisubrl
popf
mov
mov
dec
sti
or
insl
push
push
lods
sar
enter
stos
outsb
aaa
ss
dec
xlat
cli
into
xchg
iret
xor
inc
mov
sahf
fwait
test
subl
cmp
aaa
pop
mulb
jp
jb
lret
test
movsl
and
cmp
xchg
imul
popf
fcompl
sti
shl
out
repz
sar
nop
jecxz
sbbl
mov
add
mov
mov
std
daa
ljmp
mov
iret
cmpsb
adc
movsl
loopne
xor
jns
pop
repz
jmp
xchg
neg
pop
xlat
dec
pop
lahf
jno
jg
xchg
mov
sbbl
sbbl
mov
bound
addr16
sub
or
or
lds
call
pavgw
int3
ja
pusha
cmp
mov
enter
out
inc
in
inc
jge
mov
stos
push
cmp
test
xchg
into
push
loope
int3
push
xor
enter
pop
out
mov
and
lcall
jl
sub
lods
pop
push
xor
adc
sub
inc
xchg
and
insb
mov
inc
pop
inc
fadds
push
daa
xor
scas
xchg
in
negl
fsubs
dec
fcoml
lcall
mov
jmp
movsl
cwtl
sbb
call
leave
push
andb
ds
inc
or
aam
dec
bound
scas
and
iret
cmp
mov
jecxz
cmp
jb
dec
mov
lret
push
pop
fisubrs
aam
mov
adc
sbb
cmp
mov
rclb
cwtl
inc
popf
or
sub
mov
xchg
mov
push
loop
iret
cltd
faddp
or
cltd
xor
popf
call
mov
xchg
pop
and
test
mov
stos
cmp
sub
cmp
sbb
jecxz
or
push
jle
shlb
add
clc
jl
test
or
push
xor
sbb
sbb
adc
je
cmp
fidivrs
insl
sbb
adc
movsl
lods
cltd
xchg
jnp
pop
inc
fistl
fimull
mov
mov
or
push
repnz
sbb
mov
insb
aad
ret
add
out
add
test
std
dec
cmp
add
aaa
gs
jmp
pop
mov
bound
adc
ja
adcl
dec
repz
xadd
into
jge
adc
sbb
repz
jl
push
in
mov
cmp
and
adc
mov
push
xchg
sarb
stc
fisttpll
gs
nop
repnz
test
pop
ja
sub
inc
jle
jl
mov
pop
sahf
mov
test
lcall
push
inc
or
in
adc
adc
test
es
ds
push
dec
loope
adc
repz
ret
roll
lea
and
int3
inc
jo
jge
push
sbb
xor
neg
dec
adc
jge
adc
fmuls
mov
sbb
push
push
push
jmp
xor
and
and
sbb
jecxz
loope
jo
jmp
out
pop
mov
dec
das
adc
pushf
sbb
fdivl
adc
push
outsb
jg
ret
dec
inc
and
cmpsb
xchg
mov
cmc
popa
je
or
inc
call
add
push
pop
fisubrl
dec
arpl
cli
push
cmp
lock
notl
fistl
sbb
push
movsb
popf
sbb
lret
fisttpll
and
mov
decb
fists
adc
fistl
cmp
mov
inc
xchg
rcrb
enter
add
dec
and
adc
mov
cltd
inc
jo
xlat
or
sbb
sbb
push
ds
iret
mov
mov
jmp
test
icebp
fs
and
xchg
jp
imul
mov
sbb
shl
push
adc
mov
inc
adc
cmp
lahf
sub
jo
js
fsubrl
sbb
pusha
push
push
movsb
mov
pop
or
imul
daa
hlt
popa
fnstcw
sbb
out
mov
lds
fidivl
xor
pop
fcompl
out
vmovups
mov
push
push
jecxz
add
push
and
imul
shll
pop
sti
xor
and
data16
pusha
push
fmull
jae
sbb
ret
stos
jge
and
jo
jno
or
insb
pop
iret
mov
cmp
test
adc
test
rorl
mov
xchg
mov
hlt
inc
in
lret
sub
push
add
mov
mov
cmp
sub
pop
shlb
popa
mov
lock
xor
movsl
add
int
loop
mov
mov
xchg
jge
addr16
movsl
jns
ljmp
fadds
or
dec
jnp
iret
pusha
push
imul
add
out
add
cmp
push
test
add
xor
inc
pop
movsb
stos
sbb
push
push
popf
mov
jo
into
mov
inc
test
xorl
dec
mov
jecxz
xchg
push
jbe
sub
pop
out
dec
nop
ficompl
inc
lret
mov
fidivs
pop
cmc
sti
xor
mov
outsb
sbb
adc
dec
cmp
dec
stos
push
in
dec
in
dec
je
cmp
cmpsb
idivl
ljmp
dec
pushf
imulb
xor
sar
loop
mov
adc
and
movsl
insb
sub
fcoms
adc
lahf
test
ss
cmp
je
in
fnstenv
or
sub
cmp
xchg
stos
jo
xchg
stos
xchg
rdtsc
cwtl
mov
add
mov
jno
leave
sbb
adc
jno
or
jmp
xchg
fwait
xchg
jno
aam
pop
push
push
sbb
xchg
ljmp
lods
xlat
cs
addr16
frstor
pop
inc
jg
mov
xor
rclb
xor
sub
add
jmp
cltd
or
jnp
adc
lret
push
scas
in
dec
popf
ret
out
inc
xchg
dec
cmpsl
loope
test
sbbb
ds
dec
xchg
out
mov
jns
or
test
hlt
jae
dec
xchg
in
add
movsl
adc
mov
adc
leave
jno
add
dec
cli
bound
cmp
call
mov
cmp
xor
scas
in
mov
add
and
pop
aad
mov
add
stos
mov
pop
fst
sti
addr16
movsl
mov
push
and
xchg
dec
popf
push
and
nop
mov
in
negl
pop
testb
pop
jg
xchg
jle
adc
dec
lds
test
mov
hlt
pop
test
jne
xchg
pop
jns
xor
negl
shll
jns
dec
dec
call
dec
and
insb
pop
push
jo
add
fisubl
mov
bound
and
jge
add
jae
push
aas
aaa
sarb
jno
sbb
jbe
popa
fcomps
mov
xor
xchg
data16
iret
test
jmp
movsl
xor
mov
and
push
adc
je
jle
pop
jnp
jnp
lds
scas
in
xlat
pop
iret
push
jnp
pop
push
mov
or
rorl
xchg
sub
jmp
sbb
pop
addr16
cmpsl
ret
test
psrad
icebp
add
iret
jg
or
jg
jmp
fstpl
mov
dec
dec
mov
cmp
gs
adc
mov
out
mov
nop
mov
sbb
lea
mov
loopne
negb
xor
xchg
add
mov
movsb
mov
jb
mov
adc
dec
push
je
xlat
nop
test
jae
push
dec
and
mov
out
pop
int
xor
in
xchg
adc
adcb
jecxz
mov
movsl
jp
lahf
test
cwtl
test
mov
sbb
pop
mov
jmp
pop
mov
mov
push
xchg
insb
mov
pop
sahf
shrb
mov
lea
jno
or
cmp
outsl
jno
add
push
cmp
std
aad
pop
repz
mov
xor
push
cmp
testl
and
xchg
rcll
ret
cltd
mov
push
pop
mov
add
cmp
mov
testl
inc
inc
xor
jns
repnz
int3
mov
movb
pop
xchg
dec
mov
daa
cltd
sub
push
ficoml
jecxz
jo
les
fmull
pusha
lds
or
fsubr
into
out
and
cmp
and
and
adc
rcrb
and
jno
movsb
icebp
dec
xor
jle
or
mov
call
mov
lods
mov
adc
and
push
outsb
cmpl
and
in
mov
js
push
dec
sahf
mov
xor
push
repz
adc
dec
out
jge
out
push
out
cmp
das
xchg
pop
mov
mov
and
cmpb
push
lcall
lcall
mov
push
adc
jmp
dec
push
push
cmp
clc
mov
daa
cmpl
jl
mov
sbb
out
movsl
lcall
sti
sub
jne
push
imul
pop
ds
and
mov
mov
xchg
xchg
vpmacsswd
and
daa
sub
adc
lcall
jae
pop
pop
and
cmp
aas
pop
js
mov
sub
mov
ja
jno
inc
sub
xchg
xor
lea
out
pop
fwait
push
jo
fildl
dec
pop
outsl
repnz
jbe
cltd
nop
and
sbb
pop
sbb
in
xlat
sbb
lcall
jg
lret
jl
or
sbb
pop
mov
fincstp
mov
test
xor
mov
insl
sbb
and
aaa
and
lret
mov
idivl
adc
pop
dec
fistl
push
jo
or
mov
push
daa
mov
or
popa
ficomps
aaa
xor
clc
pop
mov
push
cs
push
inc
sub
sahf
xor
jnp
sbb
ror
jmp
das
cmpl
xor
dec
bound
aas
jnp
ja
xchg
fs
std
mov
and
xchg
or
pop
enter
cld
and
push
inc
mov
fsubr
dec
mov
imulb
jmp
xor
sbb
mov
jle
ja
lods
sbb
xlat
sub
dec
into
icebp
lret
jne
out
xchg
repnz
test
inc
mov
popa
or
xlat
inc
aad
sub
push
jg
aad
pop
pop
sub
mov
fdivrs
mov
mov
push
xchg
pop
xor
sub
add
sub
shr
dec
shll
cmc
enter
shll
xor
pop
test
fsubs
adc
xchg
aaa
push
ret
fisubrl
arpl
xchg
inc
mov
decb
out
mul
fidivrs
xor
add
lods
out
lods
push
hlt
add
test
pop
ficoms
add
in
push
lods
out
mov
test
jle
sti
sub
fcmovu
jmp
mov
lods
adc
sbb
push
out
xchg
arpl
loopne
cmp
or
or
cmp
cld
movsb
xchg
add
and
les
pop
outsb
scas
mov
mov
aas
stc
and
mov
push
stc
xchg
in
sbb
fsts
push
mov
cmpsl
bound
dec
fcompl
inc
sahf
push
push
xor
sarl
mov
xor
xorb
ror
test
test
jnp
movsb
mov
addr16
jmp
out
and
xchg
pop
dec
adc
outsl
add
sahf
out
xchg
int3
mov
mov
in
cli
jnp,pt
fiaddl
jo
fs
sar
mov
xchg
dec
xchg
imul
lods
xchg
loop
push
mov
addb
addb
or
scas
addb
orb
ffree
out
out
sbb
mov
in
ss
mov
test
cwtl
cmp
push
gs
fisttpll
daa
inc
loope
sbbb
pop
and
xor
and
std
and
and
jo
pop
or
sub
adc
cmp
mov
pop
aas
ficoml
add
dec
cmp
pushf
stos
push
std
add
add
fnsave
xchg
and
mov
popf
push
in
mov
repz
aam
out
push
xchg
adc
aam
iret
sub
pop
pop
mov
cmp
inc
leave
rorb
mov
insb
rcll
lods
enter
fwait
popa
add
jnp
sub
mov
xor
cmp
dec
int
or
mov
mov
cmp
iret
out
shlb
shlb
cmpsb
mov
lock
push
add
cmp
enter
ror
lcall
dec
pusha
pop
add
jg
mov
xor
aam
sbb
mov
popf
jl
aas
mov
sub
cmp
dec
aad
or
xchg
add
loop
gs
insl
mul
pop
clc
bound
mov
mov
or
ss
jae
or
ss
aas
push
cmp
jle
or
inc
sbb
adc
aad
lret
mov
sub
filds
in
jmp
out
or
in
inc
dec
sahf
adc
mov
sub
in
je
lret
cmp
icebp
dec
fstl
push
mov
add
bound
or
dec
mov
gs
sbb
dec
or
in
cltd
pusha
std
lret
cmp
ljmp
sahf
mov
in
andb
repz
mov
imul
sti
push
mov
fldl2e
or
aad
xorb
xor
adc
jb
aad
ret
mov
and
insb
lret
xor
test
fisttps
xchg
inc
in
sub
fxch
loop
mov
loopne
outsl
rcrb
test
pop
push
divl
scas
test
test
mov
in
xchg
insb
mov
xchg
lods
dec
jge
mov
adcl
dec
insb
sub
push
int
push
outsb
movsb
stos
mov
sbb
xor
divl
and
adc
and
int3
out
push
mov
sub
mov
jmp
int3
jle
out
mov
mov
sub
in
jl
adc
icebp
cmp
adc
inc
pop
push
push
jno
imul
repnz
inc
test
xchg
loop
xor
mov
bound
xor
and
scas
in
stc
push
imul
fidivrl
testl
loop
xchg
mov
aaa
jno
jno
or
jmp
dec
xchg
and
dec
and
in
hlt
xchg
lcall
loope
ret
jb
xor
aas
or
or
and
loop
xchg
lret
mov
lock
mov
fimull
test
dec
call
jle
mov
or
sarb
out
shlb
lock
js
addr16
leave
lods
scas
cld
add
shr
negl
mov
in
inc
mov
xchg
mov
sbb
sti
incl
insb
test
sub
in
mov
insl
hlt
sub
mov
rorl
jo
stc
xchg
or
push
lds
push
movsb
push
ret
sub
ret
movsb
cmp
pop
lea
mov
push
jnp
es
lret
xchg
cmp
cmp
mov
mov
dec
loopne,pn
jge
sbb
mov
jge
mov
les
call
inc
mov
test
mov
fcmovb
or
push
cwtl
imul
fistl
lcall
pop
popf
loopne
ljmp
pop
loop
mov
cmp
adc
decl
in
daa
lods
mov
test
stos
in
addr16
repz
out
and
daa
and
in
sbb
jns
inc
sbb
inc
pop
push
lods
sbb
mov
mov
jmp
add
dec
frstor
jns
hlt
and
cmc
cmp
sti
push
xchg
push
push
add
add
sbb
lods
inc
addr16
push
clc
std
dec
sbb
pop
xor
sub
nop
jno
push
mov
mov
pop
icebp
and
test
ljmp
jno
sbbl
xchg
pop
mov
rcrb
mull
jno
mov
cmpsl
retw
std
pop
inc
mov
fnstcw
das
mov
clc
or
pop
fmul
es
and
ret
jecxz
push
stos
int
or
dec
mov
icebp
lcall
nop
push
outsb
negl
fldt
rcr
dec
push
loope
fst
xchg
pop
cld
inc
pop
ret
dec
in
add
fsts
sahf
jmp
aam
sti
mov
pop
xor
xor
hlt
jmp
push
mov
inc
pop
sbb
movsb
cmp
and
pop
sub
lcall
sub
mov
in
sbb
or
and
test
push
sub
add
jg
stos
xchg
cli
or
sbb
jb
fsubs
add
dec
fcom
mov
push
fmull
inc
rcrl
ret
mov
adc
jp
repnz
xchg
pop
xor
ss
jge
pop
cmpsl
cld
sahf
hlt
test
rolb
push
jg
pop
sub
sub
adc
push
push
pop
movsb
test
stos
cmc
and
push
outsb
and
mov
les
cwtl
iret
arpl
shl
push
movsb
push
jne
inc
ss
pop
mov
test
xchg
pop
subb
lea
lret
rorb
xchg
mov
lret
sar
out
xchg
adc
push
mov
mov
mov
loopne
inc
ss
fimull
lret
lods
es
clc
into
nop
mov
push
imul
and
mov
mov
adc
ljmp
movsl
pop
mov
adc
pop
inc
rorl
es
mov
hlt
cmpsb
cld
xchg
push
fstps
pop
int
cli
push
lret
pop
gs
cmpb
in
adc
mov
add
adc
xchg
pushf
clc
xor
push
aad
cmpb
inc
addl
mov
or
xchg
ds
cmc
mov
jno
mov
fs
sub
cmp
jne
and
and
push
shrl
pop
arpl
push
and
lock
sti
lock
inc
mov
test
jl
sbb
fcomi
push
and
lods
add
fwait
rcrl
das
xor
sub
out
orl
insl
orl
pop
wrmsr
or
push
cli
clc
insb
pop
push
lcall
in
push
mov
pop
push
testb
or
scas
xchg
into
sti
jae
rcrb
xor
int3
push
movsb
inc
add
lahf
cltd
stos
add
icebp
test
or
nop
mov
popf
jecxz
push
mov
adc
in
scas
pop
dec
sbb
clc
dec
push
int
push
inc
lds
es
cmp
test
sub
add
cmpsl
sub
ret
cltd
pop
loopne
add
cmp
ret
imul
cld
xlat
int3
sub
adc
jb
mov
int
sbb
fnstsw
out
lcall
cmpl
out
push
das
lcall
je
xchg
loope
gs
sub
pop
sti
popa
mov
cmp
adc
jb
ds
outsb
iret
cmp
into
out
fadds
std
or
push
and
pusha
push
stos
pop
adc
pop
push
ds
dec
xchg
sub
sub
ret
dec
pop
cmpsb
popf
lods
pop
jl
fildl
sbb
adc
dec
movl
inc
jae
movsl
cld
add
pop
orl
lock
adcb
jo
sub
arpl
in
push
sbb
loopne
pop
subl
cmpsb
push
mov
jne
mov
dec
rorb
push
add
ss
inc
addr16
loopne
mov
cmp
adc
mov
cmp
ret
insb
push
pushf
pop
cld
xor
je
mov
movsb
jo
jno
xor
jle
xchg
sarl
daa
fiaddl
add
out
decb
adc
cmp
rep
into
sub
ret
xchg
or
inc
rclb
mov
cwtl
sub
aam
adc
or
dec
adc
outsl
cmp
out
pop
aaa
or
xchg
sub
push
push
ljmp
xor
loop
stos
stos
mov
cmpsb
fs
jge
repz
push
push
xorl
or
jge
mov
inc
push
jecxz
movsb
add
in
jp
scas
lds
ljmp
sub
pop
pop
jp
int3
pop
cmpb
icebp
xchg
pop
adc
rcl
int3
shrb
scas
or
mov
sub
ljmp
push
cs
xor
repnz
push
ss
jns
sbb
pop
pop
xchg
imul
mov
sub
repz
pop
mov
out
ljmp
adc
cmp
test
sub
xchg
fwait
jbe
int3
ficompl
mov
mov
xlat
inc
ror
dec
sbbl
push
or
inc
jg
jle
xor
ficomps
pop
repnz
loop
outsb
or
in
loopne
cld
push
push
mov
stc
push
push
mov
add
add
lret
mov
jecxz
sub
cmpb
mov
adc
cmp
nop
iret
xchg
in
jo
mov
int3
out
repnz
mov
jae
fidivrs
leave
jb
pop
outsb
pusha
xchg
pop
ficomps
xor
mov
inc
xlat
ja
mov
jns
out
fnstenv
lea
sbb
sarl
test
inc
movsl
cmc
outsl
or
mov
xlat
cmp
mov
rolb
mov
jb
out
lods
insb
jns
mov
das
mull
mov
mov
hlt
xabort
sti
das
xor
lahf
cmp
sbb
adc
push
out
lcall
adc
jb
push
push
outsl
pop
xchg
mov
js
lcall
adc
pop
call
loop
rclb
sub
dec
ds
push
mov
jg
repz
push
mov
add
popf
push
lahf
jb
dec
cwtl
or
xor
inc
loope
fistpll
sbb
negb
fmuls
xor
sbb
pop
sbb
hlt
lahf
shl
addl
paddd
ss
mov
mov
jecxz
mov
lret
out
adc
mov
pop
arpl
cmp
shlb
dec
out
mov
cltd
dec
adc
inc
mov
cmpsb
les
and
sbb
xchg
aam
cmpsb
dec
add
sbb
pop
sub
daa
js
adc
pop
pop
mov
pushf
xchg
add
pop
cmp
das
out
out
lret
std
addr16
xor
or
jmp
test
push
andl
aad
in
xchg
inc
jmp
mov
sub
jnp
inc
je
dec
push
dec
push
gs
sbb
andb
in
and
scas
xchg
mov
lret
adc
sub
subb
mov
mov
aam
inc
push
dec
xor
add
call
lcall
add
addr16
or
jg
cli
jmp
cmp
jmp
lods
mov
jge
mov
and
pop
pop
mov
mov
test
frstor
or
pop
mov
jp
jnp
mov
loopne
das
mov
pushf
jmp
xchg
sub
pop
add
jecxz
adc
adc
jecxz
push
pand
cmc
xlat
mov
popf
add
push
das
dec
out
push
pop
out
outsb
mov
call
cmpsb
popa
stc
sbb
jo
pop
jne
jl
jb
pop
fidivs
mov
or
or
cmp
cwtl
insw
sbb
mov
and
jne
data16
jle
jl
xchg
fdivrs
inc
mov
outsb
out
mov
push
adc
xlat
pop
mov
jae
loope
mov
je
jnp
repz
aad
push
xorl
sub
add
fmull
cmp
push
sub
xlat
mov
ret
sub
rorb
xchg
lods
mov
cwtl
movsl
jle
pop
neg
ds
xchg
xchg
sub
pop
sub
out
mov
jl
fucomip
pop
add
movsl
mov
mov
cs
push
ja
aad
fidivrs
cmp
out
jp
stc
xchg
sbb
xor
ja
into
pop
jmp
imul
cmp
adc
nop
int
sar
inc
clc
push
repnz
pushf
mov
xchg
jne
mov
outsl
mov
push
imul
inc
mov
pop
or
xchg
adc
pusha
lea
sub
xchg
inc
cmpl
fisubs
push
dec
mov
sbb
cmp
push
pop
xor
cmp
movl
in
cmpsl
push
dec
xlat
lods
cli
jo
sub
rol
dec
out
pop
mov
stos
mov
mov
stos
xchg
xor
cmpsl
adc
and
mov
mov
xor
sti
xor
ljmp
repnz
ja
xchg
rclb
xlat
lret
testb
aad
cmp
roll
push
pusha
icebp
fcoml
mov
popa
or
clc
mov
stos
rolb
dec
jmp
cmp
cmp
lea
es
mov
push
mov
movsl
pop
clc
fistpll
mov
sbb
in
out
dec
add
mov
rcrl
cmp
popf
ret
sbb
cltd
push
and
mov
dec
ret
cmp
adc
inc
sub
cltd
repz
mov
sub
mov
dec
mov
xchg
xchg
pop
mov
add
mov
pop
or
adc
decb
push
enter
pop
rcl
mov
add
clc
mov
xor
pop
mov
add
stos
push
mov
jmp
cmp
arpl
enter
mov
gs
sbb
push
js
rcr
pop
cmp
pop
mov
pop
test
fisubrs
mov
push
sub
mov
popf
test
sti
cmp
mov
xchg
cltd
dec
push
lea
mov
andl
adc
cli
iret
sarl
push
fisubrs
mov
aaa
xorps
scas
adcl
or
in
loopne
add
pop
ucomiss
ret
ret
outsb
rolb
xchg
adc
test
test
insb
ljmp
push
or
xor
shrl
xor
shll
int
xchg
sbb
add
stos
shll
adcb
ds
jbe
adc
or
mov
es
or
jge
mov
cmp
jne
fs
divb
adc
popa
outsl
repnz
jns
pop
jmp
push
gs
adc
leave
test
shrl
pop
test
sub
into
lret
jbe
sbb
cs
daa
fcoms
or
sbb
push
out
loopne
inc
sbb
jecxz
cmp
loop
das
aaa
es
cs
xor
sahf
or
jg
jns
mov
xchg
mov
push
and
xchg
ja
add
fdivrl
lock
lret
mov
mov
lea
ret
imul
stc
jle
notb
je
lret
fidivs
repz
push
sarl
xchg
daa
dec
mov
mov
dec
or
movsl
push
sub
jnp
mov
pop
or
push
mov
leave
ljmp
mov
rorl
scas
inc
cmc
sbb
rcll
push
inc
jmp
or
les
lret
push
adc
loopne
cmpsb
movsl
ds
lock
adc
and
mov
pop
gs
jo
pop
sub
in
jmp
push
fisubs
adc
ficompl
or
sbb
push
jo
mov
jno
jb
mov
adc
mov
dec
in
in
adc
pop
mov
or
pop
sti
daa
dec
rcll
push
fdivs
in
mul
inc
xchg
xor
add
in
push
es
idiv
js
add
dec
popf
clc
shlb
nop
jecxz
fwait
xchg
in
sub
push
mov
xor
pop
popa
sbb
imul
push
add
arpl
hlt
lahf
and
mov
sub
inc
push
rclb
sub
aaa
shlb
xor
xor
mov
repz
jne
pop
add
dec
cmp
daa
test
mov
mov
movsb
xchg
mov
cmpb
mov
loopne
aad
into
push
lods
sub
into
push
jecxz
mov
cmp
int3
mov
loope
push
aas
jecxz
sbb
push
sub
pop
pop
xchg
ss
jecxz
push
call
andb
xor
xchg
in
jno
xchg
fcompl
cmpsb
test
inc
fdivp
out
push
or
add
fistps
scas
or
add
sahf
xor
adc
fdivrl
leave
les
fldenv
add
add
mov
in
aam
bnd
push
or
stc
xor
cld
aam
xor
loopne
or
mov
push
jno
nop
test
mov
in
xchg
sbb
mov
das
lret
sbb
outsb
adc
push
call
mov
cmpsb
sub
mov
dec
dec
lret
in
test
aad
pop
mov
ds
dec
out
jae
mov
push
inc
lcall
mov
outsl
dec
push
fwait
mov
ljmp
push
adc
in
fsubp
mov
xor
jno
push
pop
mov
lea
sbb
out
popa
arpl
cmp
in
xlat
push
test
pushf
jne
mov
leave
cmp
test
inc
dec
cmp
adc
and
test
loope
jmp
enter
inc
xlat
std
inc
repnz
xchg
and
sub
hlt
dec
inc
loop
mov
rcll
dec
pop
xchg
jp
pusha
sub
pop
cmp
cmpl
fsubrp
jl
mov
push
rcrb
dec
dec
sbb
dec
das
jmp
sub
lret
push
xorl
and
stc
addr16
out
movsl
xor
aam
cmp
jbe
cmp
lods
je
lret
jns
je
mov
jae
ds
or
inc
addr16
sub
sub
sbb
stos
mov
lret
fcmovnu
jge
prefetcht2
loop
xchg
pop
push
mov
jp
test
je
negb
push
dec
pinsrw
sub
sbb
inc
mov
mov
xor
rolb
daa
in
in
cmpl
dec
sahf
sbb
xchg
cmpsl
jbe
jg
mov
add
pop
icebp
test
jne
xor
mov
pmuludq
pop
jb
dec
jp
dec
xor
xchg
inc
mov
sahf
adc
nop
dec
lods
data16
pop
jp
loope
mov
fwait
lods
out
push
fcomip
in
cltd
push
notb
pop
fnstcw
sbb
clc
mov
pop
lods
dec
rolb
cmc
adc
daa
aad
dec
rol
scas
dec
imul
leave
mov
jno
cmp
mov
jecxz
add
push
push
dec
add
sub
call
leave
ss
filds
and
loope
rol
fwait
jbe
mov
in
rolb
icebp
shll
icebp
mov
push
inc
fimuls
scas
ret
ss
rcrb
xchg
faddl
pop
jbe
mov
mov
xchg
frstor
lret
adc
jno
push
inc
daa
aaa
pop
xor
divb
mov
and
ret
mov
push
mov
mov
add
dec
pop
xchg
sub
adc
jo
out
xor
inc
pop
in
mov
xor
loope
cwtl
dec
dec
sbb
dec
jo
adc
std
int3
mov
arpl
cmp
call
pushf
lods
or
shrb
pop
mov
flds
inc
jne
push
push
cmp
cli
mov
jle
sbb
adc
and
and
arpl
std
shl
stos
mov
daa
call
xor
dec
cmpsl
adc
pop
mov
fisubl
shll
and
dec
pop
add
dec
mov
lea
jecxz
dec
insb
lea
mov
cmc
adc
lcall
sbb
xor
in
or
out
mov
lods
faddl
xchg
sub
mov
int
mov
mov
pop
push
xor
push
inc
int
mov
pop
xchg
mov
mov
int3
in
mov
pop
push
and
orb
push
in
push
popf
and
jae
fs
enter
push
lret
ljmp
fcomps
push
sub
push
mov
lret
pop
cmp
mov
xchg
aas
xor
adc
fisubrs
sti
nop
adc
push
pusha
xchg
fidivs
movsl
add
jmp
mov
pop
cmp
inc
sbb
data16
add
mov
sub
mov
scas
xchg
cltd
mov
insb
dec
lret
push
nop
adc
inc
sbb
cmpsb
sub
mov
inc
and
in
inc
or
add
idivb
pop
pop
popf
jl
outsb
mov
mov
dec
mov
or
std
pop
push
inc
inc
fs
xor
cwtl
aam
std
out
iret
cmp
pop
xor
jae
xchg
mov
pop
dec
je
ja
movsb
add
in
hlt
sbb
decb
inc
test
popf
dec
out
mov
cmp
mov
vprotq
sub
adc
nop
push
jne
cmp
rolb
mov
je
loopne
xchg
cwtl
xchg
les
pop
cmc
xchg
mov
push
jb
sub
xchg
sbb
rolb
xor
loope
xor
sbb
ds
fdivl
add
dec
mov
int3
ds
iret
dec
dec
out
es
mov
daa
sub
adc
and
lcall
icebp
rcl
mov
test
inc
xor
push
dec
xchg
xor
xor
jl
fstl
jge
icebp
lea
les
sbb
jbe
mov
jp
in
je
xchg
popf
enter
pushf
mov
mul
xor
xor
out
in
and
push
pop
loope
cmp
sub
int3
icebp
cmc
mov
xchg
mov
cmp
adc
mov
mov
mov
icebp
clc
lret
and
xchg
cltd
jnp
ret
sub
jne
xor
lods
lock
fstps
cltd
mov
or
mov
mov
jmp
jg
pusha
fdivrs
mov
inc
jne
dec
push
push
movsl
pop
and
add
stos
adc
es
or
cmpsl
loope
xchg
out
sbb
movsl
movsl
add
adc
test
clc
pop
dec
dec
jmp
xchg
jg
adc
icebp
or
ljmp
inc
int
arpl
inc
es
adc
dec
push
int
push
aas
out
aam
or
add
push
add
or
xor
rcr
rcr
in
sbbl
stc
popl
insb
subl
xchg
xchg
sub
sbb
cmpsb
pop
cmpsb
jmp
mov
sbb
push
jecxz
xchg
dec
jae
sub
mov
mov
insl
and
pushf
or
fisubrl
addb
fwait
mov
stos
in
pop
je
jbe
ds
mov
ud2
notb
pop
or
sbbl
addr16
add
mov
leave
iret
or
xchg
in
mov
inc
jp
mov
movsl
subl
mov
pop
add
mov
and
inc
mov
scas
ret
dec
clc
jnp
cmp
adc
ficoml
cwtl
inc
mov
mov
fbld
int
sahf
mov
movsl
test
je
mov
dec
jecxz
cmp
mov
cli
inc
inc
pop
into
imul
insl
aas
loope
xlat
xorl
sbb
rolb
adc
fsub
fs
or
or
mov
fwait
aam
push
hlt
add
push
sbb
jnp
mov
and
imul
cmpsb
fwait
mov
sub
adc
mov
mov
push
cmp
aad
add
int3
dec
and
adc
out
rcl
int
xor
es
icebp
imul
add
xor
ljmp
ja
rcll
jl
push
and
cld
stos
inc
fsubl
fisubs
push
mov
scas
loope
jns
pop
lahf
mov
lock
and
fildll
cmc
and
fcmovbe
mov
inc
mov
insl
jns
jge
dec
test
mov
or
dec
pop
stos
pop
insl
mov
cld
sbb
movl
add
sbb
dec
mov
popf
inc
adc
in
insb
xchg
mov
out
inc
sbb
fildll
dec
out
jmp
lret
push
inc
call
dec
and
leave
popl
test
mov
mov
test
inc
push
fsubl
add
out
das
into
sub
xchg
jb
sbb
add
lea
rclb
push
dec
sbb
adc
daa
scas
mov
insb
inc
push
push
jmp
push
adc
adc
bound
inc
add
add
and
shlb
into
aaa
clc
mov
aaa
ljmp
jge
inc
movsl
lea
sub
cmp
fdivp
push
jb
xor
adcl
stos
scas
cwtl
nop
push
cli
jecxz
xchg
lcall
repz
push
mov
cmc
jmp
and
pop
mov
pusha
ss
push
rclb
leave
adc
sbb
popa
add
scas
mov
scas
pop
leave
hlt
inc
sti
pop
jo
mov
pop
mov
roll
cltd
imul
pop
scas
mov
rclb
or
insb
pop
loope
ljmp
sbb
arpl
inc
sbb
or
dec
data16
lret
loopne
xchg
jnp
les
cmc
jns
rorb
jb
hlt
pushf
add
mov
movsb
test
imul
mov
push
jne
xchg
xchg
scas
pusha
mov
inc
and
push
adc
sub
sub
lock
scas
dec
cmp
popa
xor
test
pop
fnstenv
sbb
or
negb
insl
sub
sti
arpl
popa
daa
cmp
xor
adc
test
add
rorl
ja
fisttpl
fadd
insb
mov
ljmp
frstor
es
cmpsl
rcll
mov
jle
std
cld
ja
icebp
mov
jg
inc
sbb
lock
out
add
mov
cmc
and
mov
movsb
dec
lods
rolb
dec
adc
xor
xchg
add
jbe
mov
xor
call
pop
push
nop
push
pop
ss
add
inc
inc
adc
lret
xor
outsl
and
sub
repz
push
test
gs
xchg
xchg
fcom
mov
lds
push
jnp
out
fsubs
cli
inc
jns
jmp
sub
fwait
cmp
fldl
pop
mov
and
inc
lock
pop
adc
jge
into
mov
and
xor
pop
push
add
mov
fmuls
js
lea
loopne
push
lds
add
fcmovnb
pop
dec
push
sbb
arpl
push
mov
mov
insl
mov
inc
cmp
fwait
in
mov
sub
jle
movsl
push
icebp
test
push
test
pop
sbb
add
hlt
cmp
xor
push
jl
and
and
cwtl
in
popf
repz
test
lock
add
addr16
mov
clc
js
outsb
and
sub
or
jno
mov
popf
lock
cltd
jb
xchg
sub
cld
loop
sbb
xor
add
ss
mov
pop
dec
rcll
shl
adc
cmp
sub
nop
icebp
in
adc
jmp
rclb
jmp
pop
incl
lods
ja
les
mov
lcall
dec
or
mov
out
add
addl
push
jno
lock
mov
movb
jns
shll
inc
cs
mov
fwait
jb
xor
lods
or
adc
call
xor
cmp
sbb
rorl
insl
ds
into
js
and
popa
repnz
pop
hlt
jns
bound
or
rclb
mov
and
mov
pushl
inc
test
inc
push
adc
mov
das
xor
loope
adc
out
clc
lods
dec
cli
cld
mov
push
xor
mov
add
add
xor
mov
mov
sarl
jo
das
xor
pop
lret
adc
xor
jge
mov
inc
shrb
jno
scas
mov
add
sar
inc
hlt
aaa
aad
jae
sub
pop
mov
and
add
mov
push
cwtl
aad
outsl
test
push
ljmp
rclb
loop
inc
cmp
gs
loope
jnp
cmp
fsts
pop
cmpsb
rclb
pop
or
sbbl
xchg
mov
lret
gs
sbb
sub
icebp
xchg
mov
lock
cs
inc
ljmp
lds
lahf
sbb
cltd
xchg
cmp
xor
inc
or
nop
mov
out
sbbb
push
in
scas
popf
cmp
outsb
xlat
aam
mov
xchg
fcmove
es
lock
or
sbb
xchg
daa
arpl
xor
pushl
les
mov
insb
in
out
xchg
aaa
enter
nop
xsavec
xchg
xchg
imul
cmp
jle
mov
mov
sbb
jecxz
xchg
gs
cli
dec
add
outsb
adc
ljmp
jg
cmp
lret
stos
mov
test
outsl
pusha
fs
into
jnp
ja
mov
dec
lock
in
es
call
sarb
cwtl
pop
mov
cmp
sub
cmp
jnp
cmp
sbb
ret
inc
nop
inc
sti
jecxz
sahf
cs
inc
mov
fildl
ljmp
mov
jge
pop
fimull
jns
lock
xor
fs
xor
mov
ret
push
sbb
loope
je
sbb
push
xchg
jns
fstpt
xchg
mov
dec
outsb
pushf
lret
inc
dec
xchg
jg
push
add
jne
es
dec
xor
adc
xor
jecxz
adc
rcll
pop
push
adc
test
mov
push
jno
mov
inc
arpl
pop
dec
ss
pop
jg
out
movsl
mov
pop
aaa
xchg
jecxz
or
cmpsb
shr
push
ja
nop
decb
mov
dec
leave
push
push
mov
test
xchg
jp
push
push
jo
dec
call
or
pop
data16
loopne
inc
xchg
bnd
rolb
push
inc
fstl
lods
out
fistpll
in
and
repz
sbb
aas
dec
push
xchg
ljmp
cmp
and
jb
dec
or
xor
cld
out
daa
dec
push
inc
insb
jae
push
cmp
call
scas
mov
jecxz
rclb
les
icebp
ret
decl
ret
mov
cltd
leave
cmpsl
pop
imul
adc
sbb
clc
aam
es
ljmp
inc
test
rcrb
cmpsl
or
jmp
cwtl
in
mov
jle
add
in
fwait
inc
sti
pop
loopne
xchg
pop
mov
adc
sbb
fs
ljmp
dec
xchg
mov
and
rolb
cmc
sbb
gs
xor
pop
mov
insb
sub
out
dec
inc
sti
mov
cltd
test
dec
xlat
pop
lods
or
dec
mov
call
fdivrs
xchg
pop
inc
ss
push
push
into
push
rcll
push
pop
into
pop
sbb
push
fld
out
loopne
inc
cs
lods
ds
fst
cwtl
lret
aaa
cltd
imul
mov
cmp
mov
mov
or
inc
mov
mov
pop
pop
mov
push
adcl
movl
dec
xor
mov
xor
inc
jl,pt
jmp
mov
and
ja
or
xchg
cld
adc
fdivs
scas
xchg
int
cmp
mov
rclb
cmp
pusha
jle
mov
sub
cmp
mov
pop
fisubl
enter
repz
mov
adc
adc
adc
push
test
sub
add
xorl
orl
rcl
stc
and
mov
stc
adc
and
xor
or
sub
mov
cld
in
fists
push
or
imul
push
mov
or
adc
stos
imul
jge
add
mov
pop
movsb
xor
or
adc
ds
notl
pop
rcll
jnp,pt
aam
arpl
push
sbb
mov
pop
and
add
inc
popf
inc
cltd
imul
js
inc
rolb
test
pop
or
and
ficoms
fwait
jge
bnd
arpl
stos
xor
lods
cmp
mov
push
inc
xchg
xor
push
sahf
xlat
dec
das
jge
xchg
daa
jmp
mov
or
and
mov
rolb
nop
mov
mov
repnz
jb
inc
leave
movsb
clc
mov
faddl
push
movsb
test
and
cmpsb
cwtl
es
and
ror
push
push
xor
adc
cmp
das
popf
cli
cs
inc
enter
aas
and
and
push
test
shrb
lret
push
mov
bound
or
xor
dec
inc
mov
add
iret
cmp
sub
sub
insl
cmp
lods
pop
decb
and
fdivl
ret
es
fdiv
test
pop
insl
seta
test
cmp
push
jle
popf
mov
cs
jmp
mov
stc
ss
sti
and
lcall
clc
fstpl
mov
dec
jae
inc
push
lret
xchg
dec
mov
jns
stos
xchg
fildll
pushf
xor
or
mov
cmc
rorb
inc
cmp
inc
loop
jp
sbb
lret
mov
cmp
mov
xor
aas
inc
dec
aad
push
cmc
and
mov
pop
mov
nop
cmp
pop
fstpl
movsl
xor
shl
xor
ja
jns
out
gs
ljmp
faddl
aad
push
or
shl
xchg
int
lret
jns
add
cmpsb
cmc
push
cwtl
fcoml
imul
cmc
imul
setns
mov
mov
add
dec
lcall
roll
jbe
sbb
repnz
sbb
lahf
dec
jbe
in
mov
scas
mov
pop
repz
addb
mov
lcall
ja
test
in
dec
addl
jecxz
enter
lret
jmp
add
sub
pop
das
hlt
iret
dec
push
inc
adcl
mov
cmp
push
ret
pop
mov
popf
das
cmp
xor
cli
push
int3
into
cli
dec
in
add
out
sub
dec
pushf
or
stc
in
or
clc
push
lods
dec
and
and
mov
pop
jne
and
add
adc
mov
loop
and
notb
add
cmovne
imul
sar
xor
enter
xchg
and
aam
cld
cltd
into
jno
aam
pop
jns
lods
icebp
outsl
pop
cmp
in
push
test
iret
jmp
data16
in
pop
push
mov
dec
shrb
pushf
aam
ss
icebp
mov
pop
sbb
add
sbb
addl
mov
jnp
pop
xor
lods
mov
sub
mov
jnp
inc
cmpsl
pop
mov
insb
or
imul
movsl
aas
out
mov
cmpsb
pop
lds
test
imul
ret
es
push
jl
sbbb
adc
push
xchg
push
pop
push
stos
push
add
jb
enter
pusha
pushf
cmp
xchg
mov
stc
lret
sbb
cmp
mov
and
int
jbe
addr16
lahf
dec
cmp
fisubl
in
into
mov
add
mov
fcmovnu
push
aam
add
mov
dec
adc
cmpsl
nop
mov
mov
fcoml
adc
sub
push
cmp
dec
stc
inc
or
repnz
jb
push
in
dec
aas
and
jb
mov
and
incl
dec
cltd
adc
mov
lods
mov
or
mov
fsubl
cmp
inc
push
inc
dec
sub
adcb
dec
pop
mov
fstpt
int
mov
outsb
xchg
jge
in
mov
sbb
mov
pusha
arpl
dec
scas
xchg
in
pushf
popf
xor
scas
arpl
inc
inc
adc
push
xchg
repnz
inc
pop
sub
sub
fs
pop
test
gs
rcrb
sahf
dec
ljmp
lret
mov
aas
xor
inc
int3
and
icebp
in
mov
mov
out
stc
in
jo
sbbb
mov
stos
cmpsl
pop
mov
jge
pop
into
rclb
dec
andb
imul
out
cmpsb
add
pop
xchg
cltd
mov
sub
xchg
test
or
dec
mov
popa
sub
das
addr16
push
aad
xor
mov
mov
jno
cwtl
sub
xchg
jb
ja
sbb
sbb
dec
xor
xor
push
push
dec
fwait
push
sbbl
pusha
cmp
xchg
mov
leave
outsl
dec
in
cwtl
popf
aam
pop
insl
mov
daa
imul
mov
mov
out
out
jo
aam
ss
movsl
inc
push
sbb
das
mov
cmp
mov
adc
or
xlat
testb
pop
and
and
push
mov
jb
out
cmpxchg
mov
push
xor
filds
mov
jge
push
or
js
bound
jo
jns
xchg
call
in
int3
jne
test
sahf
or
aad
clc
jo
aas
cmp
or
call
sub
dec
je
sbb
cmp
insl
je
dec
pushf
dec
mov
pop
ficomps
adc
xor
cwtl
cmp
xor
nop
repnz
fstps
mov
mov
ljmp
mov
or
push
movsl
addr16
rcl
jae
mov
aas
mov
push
jmp
mov
into
sub
cmp
sbb
mov
sbb
fists
les
notb
mov
mov
sbb
fdiv
sub
stos
mov
ja
aad
adc
cld
imul
mov
in
push
stc
push
lea
ja
sbbb
mov
mov
test
pop
stos
mov
int3
ja
push
scas
stos
addr16
cmp
dec
pop
xchg
mov
jno
test
repnz
mov
ss
inc
aas
loopne
jo
inc
jns
xchg
cmp
addr16
cmp
idivb
xorb
xor
lcall
xlat
call
ljmp
dec
xor
mov
xor
cmp
push
pusha
jno
xchg
je
repnz
and
das
jg
loopne
out
ljmp
scas
ljmp
mov
push
mov
loope
push
ljmp
or
or
lods
xor
pop
adc
jecxz
mov
xchg
clc
sbb
push
aas
jae
out
outsl
aaa
fidivs
push
mov
pop
aad
loope
bnd
je
shrl
mov
add
loopne
pop
cli
pop
xchg
shl
imul
loop
adc
inc
mov
lods
and
jecxz
push
loop
xchg
and
jno
cmp
mov
int3
nop
jae
jl
and
mov
outsl
or
jns
incl
jbe
into
cmp
jmp
scas
xchg
das
ljmp
test
mov
dec
shlb
frstor
icebp
mov
mov
std
push
pop
jns
xor
mov
or
ret
push
pop
movsl
aas
outsb
cli
mov
fdivrl
pusha
dec
aam
int3
push
or
adc
fisubrl
xchg
std
sbb
pop
jmp
notb
ljmp
mov
les
ja
jmp
mov
popf
fs
aam
aam
push
inc
xor
pop
sahf
jp
sub
mov
mov
mov
add
push
out
add
jnp
std
push
cmc
out
or
fs
push
dec
add
ljmp
or
xchg
popf
aam
ret
push
scas
cli
fnstenv
pop
enter
popf
jae
aad
gs
push
pusha
stos
mov
es
adcl
arpl
scas
nop
pop
mov
pop
jl
cmpl
dec
iret
sub
mov
std
pushf
pushl
cmp
jbe
repnz
stos
ljmp
jmp
insb
xor
outsl
sbb
mov
mov
lret
jb
mov
insb
mov
mov
cmp
or
movsl
scas
cmp
mov
test
inc
mov
bound
ljmp
fimuls
pop
cmp
pop
js
movsl
cmp
xor
and
in
in
testb
ljmp
inc
hlt
pop
cmpsl
test
stos
popf
add
aam
fbld
aas
pop
sub
mov
popf
sub
sti
fs
iret
jl
push
mov
cmp
inc
ret
push
scas
mov
imul
inc
xchg
mov
mov
jmp
push
dec
sbb
sub
cmpsb
mov
hlt
or
jle
repnz
jle
movsb
xchg
or
jge
cmpsb
test
data16
fdivl
adc
in
sbb
lock
mov
out
into
pop
adc
sub
mov
sub
and
pop
or
mov
into
cmc
mov
je
scas
pop
pop
dec
and
into
add
xchg
sub
stc
cwtl
sarb
cmpsl
and
decl
or
pushf
mov
lcall
xor
fnclex
inc
out
nop
test
mov
dec
rolb
pusha
out
sub
outsl
or
xchg
jo
pushf
std
test
mov
push
push
fmull
out
cltd
sahf
mov
mov
in
sub
leave
cltd
ds
jl
outsb
and
icebp
xchg
push
jnp
fucomp
mov
jg
fsubl
pop
dec
add
stos
cli
xchg
fcoml
lock
push
insl
scas
sbb
test
xchg
xor
pop
cmc
out
dec
and
loop
inc
arpl
hlt
sahf
loopne
stos
mov
mov
sbb
jae
adc
outsb
mov
sub
cs
mov
adc
lahf
pop
lds
out
lods
xor
fdivl
repz
clc
shr
sbb
mov
fnstsw
fildl
ss
or
lret
add
mov
mov
mov
jae
stos
sbb
cs
les
pushw
push
push
push
mov
sbb
adc
or
xor
cmp
and
cmpsb
dec
les
push
ret
push
jae
dec
push
nop
ret
rorl
pop
mov
sub
orb
jge
aam
pop
pushl
rcr
mov
jbe
dec
sti
cmpsb
mov
cmp
sbb
ror
idivb
mov
loopne
inc
ja
icebp
mov
call
and
std
add
das
lcall
lods
add
mov
and
fstps
movsl
add
adc
out
mov
inc
dec
inc
ret
xor
mov
subl
pop
bound
int
cmp
lret
mov
and
loop
loopne
out
jl
mov
xchg
iret
pop
xchg
or
aaa
push
or
jb
arpl
ja
push
pop
mov
push
pop
in
lea
nop
cmpl
cmpl
arpl
or
mov
pop
ds
pop
sub
ret
arpl
fists
jg
push
std
flds
les
mov
mov
lahf
push
dec
push
sbb
xor
jae
push
int3
lock
loope
mov
pop
loopne
jne
add
shrl
sub
loop
lahf
pop
fwait
sub
enter
popa
hlt
jge
cld
mov
daa
test
in
rcrl
mov
cmpsb
cmovle
sbb
int3
and
or
orb
jmp
jns
mov
arpl
daa
aad
push
leave
mov
push
push
xor
adc
xchg
imul
jecxz
xor
jbe
xchg
cmpl
sub
cmp
mov
enter
test
sbb
iret
jo
fisttps
int
test
out
je
test
iret
push
inc
jbe
gs
and
jbe
cmc
rcrl
ficoml
xchg
push
sti
shrl
stos
sarl
scas
jno
andl
jo
fiadds
dec
cmp
dec
xchg
push
inc
movsl
test
jmp
popa
mov
jno
mov
fldt
in
dec
jae
pop
mov
xchg
movsl
pop
mov
scas
jns
int
sub
xchg
and
outsb
inc
inc
dec
imull
sbb
outsl
pop
fisubrl
pushl
cmpsb
mulb
fidivl
rcrl
mov
push
jmp
mov
adc
jbe
fdivl
mov
cwtl
stc
mov
lahf
cwtl
xlat
add
test
ljmp
jecxz
dec
mov
rcr
loop
adc
ret
add
sahf
pop
test
lret
push
adc
inc
popf
into
scas
dec
out
xor
ja
stos
sahf
ljmp
dec
movsb
inc
popf
aam
imul
aad
fs
ss
lods
adc
mov
jbe
js
loop
add
pop
out
mov
sbb
ja
cmp
add
mov
sti
jmp
xchg
and
pop
xchg
push
dec
mov
daa
or
sahf
fldl
adc
in
and
push
stos
daa
jl
daa
and
sar
pmaddwd
fcompl
fildl
ja
mov
mov
mov
test
push
sahf
fdiv
shl
nop
jle
add
push
stc
lea
add
push
lret
adc
ljmp
aad
mov
sub
push
mov
pop
rclb
cli
push
das
fcmovne
fdivrl
rcl
dec
jbe
pop
sti
dec
inc
in
bound
mov
cwtl
lret
insl
sti
in
in
cwtl
dec
xchg
stos
pop
test
jge
mov
aaa
das
mov
das
cs
fwait
dec
out
repz
push
inc
hlt
test
fstpl
repz
pop
in
or
pop
movsl
imul
add
mov
inc
mov
bound
out
bound
mov
jo
mov
test
jae
mov
sbb
pop
mov
xchg
imul
fnstsw
adc
pop
sbb
les
pop
out
out
sbb
push
adc
mov
cmc
or
and
mov
adc
jmp
fsubs
in
ds
into
js
push
or
jle
mov
in
push
in
cmpsb
in
pop
mov
jl
fistpl
dec
scas
xchg
mov
mov
and
xchg
or
push
mov
mov
hlt
fsubl
mov
popa
push
mov
adc
dec
push
or
sub
cmp
and
stc
andb
add
pop
mov
mov
cmp
xor
sarl
stc
adc
push
fcoml
pop
inc
jne
hlt
sub
test
jnp
lods
mov
sub
arpl
push
pusha
adc
fists
int3
xor
or
adc
test
push
hlt
js
enter
dec
jg
xor
out
sbb
push
jmp
imul
mov
xchg
xor
mov
ret
sbb
push
fs
fcoms
inc
lahf
pop
add
jo
fildll
cmpsb
lock
mov
mov
mov
cli
stc
test
inc
ficoms
sub
xchg
ljmp
sahf
icebp
mov
push
jbe
xchg
sbb
dec
sbb
pusha
test
cmpsb
pop
data16
xor
push
mov
lock
cwtl
cmp
mov
lcall
fsub
inc
push
and
pop
push
xchg
iret
aam
mov
dec
lret
jmp
mov
dec
xor
lret
into
in
mov
cmp
hlt
push
jmp
add
cmp
cltd
inc
jl
push
push
xlat
ljmp
ret
sahf
lret
pop
push
mov
stos
dec
inc
dec
mov
imul
xchg
adc
enter
pop
shll
shlb
dec
data16
ret
xchg
jge
sub
sbb
aad
xchg
push
in
and
in
aaa
mov
nop
xchg
pop
jl
pop
xchg
repz
scas
mov
sbb
pop
inc
jo
or
fcmovbe
iret
jnp
push
sti
outsl
dec
push
sbb
fmuls
loopne
cltd
mov
mov
xor
ljmp
dec
jnp
cli
imul
or
lea
adc
adc
xchg
imul
or
xchg
aas
cmp
call
mov
lock
mov
mov
lock
hlt
jb
sub
scas
adc
adc
int3
sub
fwait
outsb
push
shrl
push
mov
xchg
push
jns
loopne
aaa
push
in
ret
xor
push
adc
nop
xchg
xchg
stos
or
and
lock
sbb
xchg
aam
stos
inc
cmc
pop
jl
mov
in
or
jmp
fwait
xchg
sub
cli
sub
and
jo
icebp
jnp
fs
xor
ret
push
into
fisttps
mov
or
mov
push
int
sub
out
jle
sbb
push
cmp
repnz
inc
push
push
aam
inc
scas
or
inc
scas
jno
sbbb
dec
push
mov
popf
data16
repz
popf
xlat
mov
into
bound
mov
mov
xchg
inc
mov
aam
fbld
mov
popa
pushf
cltd
mov
clc
cwtl
mov
jg
or
jl
cld
xchg
mov
mov
mov
inc
adc
ret
jg
xchg
pusha
or
out
adc
dec
sub
outsb
ljmp
mov
std
rorb
inc
into
or
shll
insl
mov
xor
xlat
cltd
loope
mov
mov
mov
jnp
adcb
add
imul
sbb
or
xor
sar
and
adc
ret
xor
outsl
outsl
mov
dec
push
data16
pop
mov
sub
outsb
add
xchg
testl
pop
pop
imul
lods
sub
daa
into
push
jl
lcall
mov
mov
clc
pushl
inc
xor
int
fcoml
inc
mov
sub
dec
xchg
test
das
lahf
pop
pop
and
shll
sub
loopne
jbe
roll
mulb
push
in
push
bound
xor
je
push
cmp
in
data16
stos
sti
imul
sahf
or
jae
mov
icebp
lock
inc
aaa
shlb
in
insl
idivl
lret
andl
andl
aam
adc
jge
arpl
jbe
nop
cmp
jbe
scas
lea
mov
xchg
lahf
hlt
add
cld
rorl
push
xchg
or
inc
roll
fsubr
and
cwtl
cwtl
movsb
mov
add
call
xor
xor
pusha
push
jnp
leave
lret
iret
xor
adc
cmp
jecxz
dec
mov
xor
cmp
test
sub
cmp
xchg
push
fdivr
add
loopne
push
call
jecxz
test
mov
and
jno
sahf
out
add
push
sub
xchg
mov
mov
cs
push
notb
xchg
sbb
roll
or
or
jnp
lret
dec
test
push
idivb
cmc
icebp
lcall
adc
xchg
insb
cs
push
sbb
arpl
mov
mov
icebp
and
inc
movsl
aam
aaa
imul
loopne
push
adc
adc
pop
sbb
stos
adc
xchg
lods
adc
cli
fimull
mov
xchg
fwait
push
in
or
aad
jno
dec
aaa
jp
pop
sbb
insb
inc
pop
push
pop
dec
dec
mov
mov
push
mov
in
fwait
jge
movsl
loope
inc
aaa
sahf
jmp
cmp
jb
and
test
sub
add
fimull
mov
pop
jmp
mov
push
jnp
xor
jmp
enter
movsl
push
sarb
icebp
jle
sti
mov
jge
arpl
les
rcl
or
push
mov
test
xor
mov
xor
aaa
out
fsubrl
ljmp
push
cmp
pop
pop
subb
pop
std
xor
push
popf
xor
ja
into
inc
add
push
scas
mov
fdivrs
imul
pop
shr
dec
jmp
adc
sahf
push
adc
push
loope
out
pusha
jl
inc
xchg
enter
xor
mov
inc
add
pop
std
ror
cwtl
sub
cmc
mov
xchg
stos
enter
mov
out
sub
fsubl
aas
fistpl
les
ja
out
push
and
dec
int3
mov
repz
mov
lahf
ret
das
cmc
mov
cmp
add
adc
fs
jecxz
adc
inc
add
in
cmp
arpl
movsb
and
jns
mov
mov
repnz
repz
lods
sbb
mov
jns
movsb
adc
mov
or
jns
ret
sbb
hlt
loope
jnp
shrl
or
pop
test
shrl
adc
faddp
fmulp
and
mov
xchg
mov
hlt
seto
outsl
shl
std
insl
outsb
imul
movsb
ljmp
xchg
mov
push
jnp
out
inc
shrl
adc
loopne
add
rorl
orb
stos
in
aam
inc
cmc
leave
movsl
in
mov
test
mov
pop
daa
aaa
add
gs
sub
xor
js
and
jnp
sbb
add
cmpb
outsl
aad
jo
jnp
call
mov
fcmovu
pop
mov
loope
test
mov
iret
push
cwtl
repnz
mov
dec
cmp
jnp
jnp
and
sub
add
das
xchg
push
clc
adc
scas
hlt
and
inc
jns
sbb
sbb
adc
fildl
dec
adc
push
pushf
cmp
jge
push
pop
mov
inc
js
jae
sub
dec
daa
lods
and
or
lods
pop
xor
add
loopne
or
or
cmpsb
addr16
movsb
sub
xor
es
adc
push
pop
sub
inc
mov
mov
loop
push
add
out
pop
push
push
filds
jle
push
cs
nop
xor
leave
sbb
or
jg
ret
jnp
lods
icebp
push
pop
fstpl
int3
mov
pop
fxtract
test
or
sahf
into
xchg
test
sub
xchg
scas
sbb
inc
outsl
jl
jl
add
adc
pop
xchg
arpl
push
popa
sbb
or
fdivrp
xchg
pop
inc
pop
mov
aas
loop
movsl
shlb
ret
push
or
in
popa
push
mov
lods
repnz
dec
shrb
jo
fstpt
xor
mov
xchg
mov
ss
sahf
outsl
fisttpll
inc
fwait
mov
lds
bnd
sbb
cwtl
outsl
loopne
mov
jg
addb
push
lods
xor
aam
push
sub
sbb
daa
cmp
cmp
xchg
dec
push
mov
inc
adc
hlt
push
rcll
mov
int
ja
dec
fsts
xchg
pop
mov
sub
xor
jo
out
fldcw
in
push
pop
icebp
or
leave
test
sbb
xchg
sub
jb
ret
ss
mov
icebp
out
push
icebp
test
stos
sbb
pop
xchg
push
xchg
cmpsb
call
dec
cwtl
mov
out
pop
fcomip
push
cmp
dec
arpl
cli
add
imul
pop
test
add
sti
out
dec
test
inc
or
out
addb
neg
stc
popa
push
popf
nop
pop
in
js
inc
mov
jo
call
jg
xor
inc
inc
fstps
sub
dec
ds
test
and
lcall
cmpsl
add
xor
cmp
repnz
jbe
popa
sub
out
mov
jmp
inc
enter
imul
sub
mov
sbb
push
sub
icebp
rcrb
in
mov
dec
push
cli
insl
cmp
inc
or
jbe
mov
in
loop
repnz
rcl
sub
push
je
insl
aad
bound
ficomps
mov
jnp
orb
imul
in
test
sbb
lret
aas
cmp
aam
lahf
mov
inc
sub
pusha
ss
pop
test
aaa
shrl
outsb
aaa
xor
sub
jmp
fistpll
sbb
xchg
jno
mov
pop
dec
and
and
mov
push
cltd
data16
movsl
rorl
xor
aad
lock
fstp
popf
test
in
stos
push
mov
icebp
stos
int3
adc
das
pushf
adc
add
add
pop
and
inc
scas
and
dec
out
xor
jo
mov
into
dec
into
mov
test
or
cld
push
cmpsl
xor
jns,pt
xor
adc
jmp
aaa
in
call
les
insl
push
jg
dec
imul
xor
stos
cmp
lods
and
into
shll
sbb
enter
call
cmp
mov
call
dec
fmull
fadds
cmpsl
mov
filds
jb
jl
cmc
and
pop
pop
daa
shll
mov
scas
ficomps
lds
iret
rol
test
andl
jae
test
int3
lret
ja
mov
mov
lds
pop
push
adc
lds
aad
je
insl
sbb
and
xor
push
dec
stos
jecxz
and
xchg
cmp
xchg
outsb
fnstcw
popa
pop
lcall
adc
and
xor
mov
faddl
ss
in
stos
hlt
mov
cs
xchg
push
adcb
in
std
sbb
lret
or
movsb
push
inc
xchg
lret
sbb
movsb
mov
dec
out
push
sbb
add
lahf
mov
mov
push
xor
xchg
or
dec
sub
fs
or
in
mov
cmpb
aad
subb
test
rorb
test
mov
flds
clc
inc
mov
in
fidivl
loop
stos
rolb
pushf
push
mov
inc
lods
dec
inc
rolb
push
cmp
nop
pushf
and
mov
and
into
mov
inc
or
inc
aas
sbb
push
std
loope
hlt
ss
out
lahf
pop
nop
das
add
out
stos
pop
jo
push
push
xlat
cmp
mov
dec
leave
dec
fcomp
and
pop
fsubrs
pop
or
loop
dec
cmp
pop
insl
out
icebp
lret
jge
xchg
clc
cwtl
push
shl
stc
xchg
mov
enter
lods
imul
cmp
push
outsl
cmp
adc
cmp
and
xchg
adc
subb
mov
add
scas
jne
and
pop
mov
mov
cli
sbb
pop
dec
daa
mov
fsubrs
jnp
popa
mulb
and
or
stos
adc
pop
push
ds
fcoms
add
mov
push
sbb
leave
lahf
in
push
pop
or
dec
xorl
lcall
mov
ror
in
xor
aam
aas
cli
fisttps
icebp
movsb
dec
add
adc
jge
sub
dec
and
lahf
mov
mov
inc
jo
popa
xchg
sub
dec
ja
sbb
bound
xchg
in
xor
mov
mov
stos
xchg
ficompl
loopne
jb
add
inc
in
and
mov
out
fbld
jbe
lret
mov
push
xor
and
test
fcoms
cmc
ja
movsl
pop
pop
push
outsb
xchg
out
fstpl
test
push
or
mov
mov
mov
jmp
and
fildl
outsl
inc
dec
mov
sbb
push
aas
mov
cmc
xor
in
das
jb
pop
mulb
pushl
mov
adc
push
aas
cmp
push
jge
add
orb
and
das
and
sub
or
pop
cmp
out
mov
and
rcll
inc
lods
add
inc
outsb
pusha
fidivrs
mov
out
shlb
adc
sarb
sub
and
and
jae
repz
sbb
pop
sub
xchg
test
mov
or
sub
addl
mov
lods
lock
ret
push
mov
sub
loopne
jno
subl
in
out
movsb
xor
inc
je
sbb
inc
xor
sti
sahf
shr
sub
cmp
adc
mov
pop
sub
xchg
notb
movw
pop
and
call
pushf
addr16
in
push
fadds
ja
clc
sbb
addl
cs
dec
mov
cwtl
in
sub
lock
xchg
fadds
pminub
in
xchg
cmp
aad
adc
in
cmp
jno
mov
loop
mov
sbb
arpl
mov
loop
mov
aad
mov
sbb
mov
into
das
inc
cmp
es
sahf
mov
int
jb
out
repz
cld
test
or
cmpsl
lock
addr16
lret
dec
adc
push
pop
sbb
cmp
lds
and
lods
icebp
lock
int
popf
out
jecxz
jl
stos
cltd
aam
loope
iret
mov
out
outsb
mov
outsb
or
cmp
jecxz
xlat
xor
pop
adc
xor
les
flds
int
cmp
and
or
lcall
pusha
jl
push
push
jl
xchg
dec
repnz
loop
xor
int
stos
and
add
pop
mov
xor
sbb
dec
pop
sbb
movsl
push
push
cs
hlt
or
jmp
popa
repz
adc
dec
inc
std
sub
std
outsl
adc
pop
and
sub
pop
xchg
dec
int
pusha
dec
xor
aam
push
insl
add
jne
push
xchg
daa
and
adc
lahf
adcl
insb
push
loop
sbb
pusha
cmp
clc
xor
mov
gs
xchg
cmp
clc
mov
stos
xchg
pusha
push
sahf
dec
jnp
jns
jecxz
fbld
jb
push
mov
fisubs
fdivrl
movsl
xchg
push
iret
pop
cwtl
jmp
jge
adc
inc
cmpsl
decb
sarb
pop
fistps
scas
push
rcrl
aad
push
jg
mov
fwait
mov
push
sbb
ja
loop
pusha
jb
sbb
test
lret
or
movsl
cli
xor
mov
arpl
mov
iret
add
jmp
sub
call
lock
xchg
ljmp
cmp
mov
mov
icebp
repnz
xor
shll
mov
sbb
std
shll
icebp
sbb
pusha
jle
and
gs
mov
pop
jl
fdivl
popf
mov
cmpsb
leave
stos
sarb
xchg
fistl
xor
pop
lret
shll
rolb
js
and
and
or
ffree
xchg
sbb
adc
daa
dec
mov
jno
data16
xchg
push
dec
fwait
ss
mov
pop
dec
fdivrs
cmp
mov
or
das
test
mov
push
hlt
movsl
push
scas
push
ja
test
rcl
lcall
inc
aad
push
xchg
ret
mov
js
or
sbb
fcomp
sub
dec
test
dec
push
cmpsl
adc
js
cmp
xchg
adc
aaa
popa
jmp
scas
repz
movsb
rcll
out
ror
lea
nop
inc
and
mov
mov
test
dec
pop
adc
sub
xchg
dec
add
adc
outsl
arpl
js
fwait
in
xchg
jbe
das
lahf
xlat
push
and
negb
daa
into
inc
dec
jae
repz
popa
mov
enter
push
das
and
inc
jno
shll
fiaddl
pop
push
sub
dec
in
adc
lret
pop
addr16
sub
es
pcmpeqd
xor
scas
mov
push
addr16
lods
xlat
dec
mov
jno
lods
fs
scas
push
mov
insb
xchg
test
sbb
iret
popa
adc
popa
test
inc
ror
pop
xchg
jb
xor
dec
call
xorb
add
adc
xchg
stos
mov
cmp
es
loop
mov
std
jb
add
jp
iret
imul
pop
mov
fnstcw
test
push
mov
dec
push
fcoml
jae
dec
cmpsb
dec
and
ljmp
and
movsb
aaa
mov
dec
repnz
xor
or
adc
out
pop
or
popa
sbb
xor
xor
pop
rorl
push
ljmp
mov
push
mov
dec
orl
shrl
xor
mov
fmul
fwait
in
mov
pop
shlb
into
mov
les
out
das
inc
mov
xor
and
push
and
jmp
mov
dec
mov
inc
data16
arpl
lcall
je
cmpsl
pushf
pop
cmpsl
jge
jae
scas
adc
leave
ljmp
rorb
cmp
xlat
outsb
cmp
pop
ret
pop
sub
leave
lahf
xor
cmp
rorl
sarb
scas
ljmp
xchg
adc
cli
clc
mov
xor
iret
dec
xrelease
cwtl
pop
cmpsl
push
xchg
cmp
daa
repz
xor
pop
dec
test
test
cmp
push
adc
es
xor
inc
imul
push
out
sub
outsb
mov
popf
jp
jecxz
pop
into
jns
sbb
sbb
inc
jb
pop
cmp
mov
popa
xor
xchg
adc
pop
jp
jg
cwtl
push
adc
jbe
std
ret
bnd
test
dec
add
fsub
sti
xchg
shl
inc
dec
jne
and
mov
xchg
inc
aad
sbb
mov
or
cmp
out
cmc
pop
inc
or
decb
mov
roll
lret
mov
pop
cld
in
mov
popa
sub
adc
or
shrb
out
js
fs
notl
stc
lsl
fsubrs
lahf
jmp
mov
dec
pushf
sub
and
inc
lods
test
sti
jle
jg
cvtpi2ps
mov
stc
mov
mov
xchg
scas
mov
push
pushf
cli
addb
cmpsl
add
add
rorl
cmp
into
stos
loopne
mov
or
inc
add
les
cmp
jge
loope
xor
xor
iret
pushf
movsbl
push
pop
bound
mov
jo
add
cmp
test
mov
mov
lahf
int
xchg
subb
sub
sbb
mov
rclb
dec
clc
and
and
outsl
mov
jae
dec
pop
pop
xchg
push
add
pop
and
or
inc
bndldx
aad
out
mov
mov
push
add
mov
mov
push
jle
lret
je
orl
jecxz
xor
push
pop
add
and
mov
xor
in
push
jae
out
pop
cmpsb
pop
inc
fwait
xchg
cld
cltd
rcrb
xor
pop
in
lods
aaa
out
enter
mov
out
jbe
iret
push
sbb
fildll
dec
leave
adc
aas
add
incl
sbb
sbb
xlat
lcall
sub
mov
stc
mov
adc
fdivrs
imul
xchg
mov
hlt
lea
push
pop
fldenv
outsl
je
into
push
scas
enter
sti
rorb
jp
notl
sbb
xor
std
movups
hlt
push
je
lock
ljmp
jmp
inc
leave
mov
lea
sub
inc
stos
add
push
mov
mov
adc
dec
xchg
jbe
into
arpl
ss
sub
dec
out
push
xor
add
push
ret
pusha
pop
mov
das
clc
sbb
inc
pop
mov
aaa
or
imul
mov
mov
loop
outsb
pop
cmp
negb
xchg
jae
mov
and
out
sbb
and
ret
inc
or
sbb
stos
push
cld
mov
jne
adc
pusha
xor
aas
xor
mov
loopne
add
sub
popa
cmp
das
js
xchg
mov
fnstsw
push
jne
sbb
cld
ja
sbb
inc
in
jae
test
xchg
popa
pusha
xchg
in
mov
aaa
and
push
notb
nop
bound
add
cmp
mov
push
mov
movsb
scas
xchg
push
xlat
and
iret
or
xchg
xchg
or
jbe
jle
mov
xchg
insb
jo
je
setb
call
fwait
sub
xchg
xchg
testl
jp
mov
cmp
dec
cli
pop
loop
es
ja
nop
sahf
mov
mov
jno
stos
sbb
fidivl
lret
enter
xor
push
dec
mov
inc
cs
adc
call
pop
sub
push
mov
mov
pop
jmp
out
fwait
mov
loop
push
push
call
pop
scas
xchg
and
scas
ret
out
xchg
push
push
dec
pop
dec
cli
jae
movzbl
cmpsl
rcl
or
addr16
cmpsl
or
fwait
adc
sbb
addr16
mov
lcall
repnz
test
fs
sarl
cltd
int3
xchg
dec
jle
pop
mov
pop
adc
mov
push
aas
outsl
aad
scas
dec
das
imul
sub
repnz
lahf
pop
je
push
icebp
sub
push
push
scas
fmull
stos
scas
stc
in
mov
sbb
xchg
sbb
stc
mov
mov
iret
xchg
mov
and
in
mov
push
and
loop
and
sbb
ss
stc
push
ret
cmc
jo
sbb
fwait
mov
xchg
loop
jae
add
pop
mov
dec
ss
hlt
leave
test
test
cmp
fwait
lds
sub
cmpsl
adc
ss
pop
add
ljmp
cld
cmc
scas
shlb
testl
mov
mov
jb
data16
xor
mov
push
push
dec
cmpsb
and
cmp
push
xchg
cmp
ja
jmp
lret
sub
sarb
jno
aam
aas
and
add
subl
mov
dec
jl
out
jo
andb
push
les
jg
data16
dec
xchg
cli
or
das
sar
cli
ss
lock
inc
mov
and
lea
lea
lds
shll
adc
add
popf
ss
xor
int3
mov
inc
cld
sbb
or
or
inc
adc
inc
add
fmull
cmp
add
lock
lods
jge
imul
imul
sahf
cwtl
jne
mov
mov
lcall
sub
add
lcall
clc
pushl
xor
sbb
fistpl
ret
lea
rcll
shll
cmpsb
or
mov
dec
or
mov
mov
inc
sub
cmp
shl
xor
fimull
dec
mov
jnp
push
dec
repz
jg
push
jle
or
addr16
aas
mov
push
cs
lret
pop
fdivl
lock
in
mov
jns
mov
pop
mov
and
fs
add
cmpsl
pop
dec
pop
cld
aas
imul
adcb
push
shl
lcall
repnz
add
mull
pop
cmpsl
xchg
sti
pop
dec
in
mov
pop
in
push
idivb
rclb
jns
repnz
inc
sub
ja
lock
mov
mov
dec
xor
or
std
cld
rolb
nop
jecxz
and
ret
xorb
data16
jno
sbb
inc
adc
ds
mov
cmpb
push
push
pop
mov
rorl
inc
ljmp
es
mov
xor
pop
push
enter
shlb
aas
sub
mov
or
jo
sarl
sbb
ret
test
sub
stos
subl
pop
pusha
jb
pushf
jg
xchg
pop
inc
jecxz
gs
cli
jns
mov
push
outsb
inc
fdivs
pop
jp
pop
cmp
mov
fsubp
mov
gs
mov
and
call
pop
sbb
int3
jne
add
inc
stos
fildl
roll
mov
sti
pop
adc
dec
int
adc
call
repnz
insb
js
das
xchg
and
imul
repnz
negl
pop
mov
ds
dec
cmp
pop
loop
mov
lcall
andl
jmp
sbb
push
push
sub
fs
es
iret
fisttpll
and
lock
cwtl
inc
jg
aad
in
pop
sbbl
fs
shll
dec
and
dec
mov
jne
and
inc
stc
fisubs
in
popf
adc
fadd
sub
pop
push
xor
pop
pop
mov
stos
divb
jne
push
mov
jmp
lahf
inc
pop
notl
dec
fiaddl
ja
fnsave
pushf
jl
popf
fidivl
jns
sub
filds
mov
imull
or
into
shll
dec
push
cmpsl
xchg
sbb
aaa
fwait
lret
scas
mov
dec
lods
stos
in
call
out
sbb
out
jle
aas
or
push
mov
xor
add
xchg
outsb
or
int
add
cmp
addr16
rcll
xor
mov
jge
call
testl
mov
pop
push
fwait
or
xor
mov
mov
jle
cltd
in
hlt
ljmp
inc
fcoms
mov
rclb
lcall
mov
sub
lods
push
xor
sub
inc
js
lods
je
add
or
scas
xor
imulb
pop
negb
fcmove
sbb
jb
ja
cli
jbe
ds
jl
adc
dec
add
push
es
and
repz
je
repnz
daa
pop
bound
push
and
adc
shll
fists
jmp
scas
cmp
lods
jecxz
cmp
movsb
fidivs
dec
sub
loopne
sub
sub
mov
sahf
out
cmp
xor
and
push
mov
xchg
sbbb
shlb
out
loop
xor
lret
push
mov
dec
inc
mov
add
shrb
inc
test
add
clc
inc
iret
mov
push
jb
clc
int3
add
dec
xor
movl
repz
pop
cmp
mov
adc
clc
xlat
test
sbb
in
sbb
sub
inc
jns
aaa
jge
imul
cmp
push
lods
adc
fsubs
inc
sbb
loope
pop
mov
mov
cmc
push
arpl
cmp
pop
scas
xchg
andb
mov
bound
push
sahf
cmpsb
xchg
lret
lret
out
and
imul
jno
bound
hlt
cmp
jp
sahf
mov
outsl
inc
dec
pop
sbb
fwait
add
outsb
push
ljmp
subb
subb
imul
in
add
xor
add
andb
sbb
arpl
dec
inc
sbb
sbb
out
repnz
ret
inc
cmp
inc
mov
xchg
imul
jle
pop
inc
adc
aas
push
mov
negb
std
out
mov
ss
ret
fwait
jge
repz
ss
push
inc
lahf
dec
addr16
nop
ja
mov
sub
rclb
mov
inc
js
test
adc
bound
mov
lock
mov
jbe
out
ss
push
dec
jl
adc
data16
or
icebp
lcall
mov
movsb
bt
xor
add
rolb
ss
jbe
and
insb
cmpsl
pop
stc
xor
inc
xchg
fistl
or
and
or
dec
lea
and
repz
test
fsubs
rolb
ficoms
push
ljmp
and
mov
jo
outsl
call
sub
xchg
int3
imul
int3
push
xchg
or
decb
adc
dec
decb
and
cmc
fnstsw
mov
jle
adc
mov
leave
xchg
aaa
rcl
ds
arpl
popa
mov
pop
pop
faddl
jb
inc
out
or
mov
dec
xchg
fucomi
pop
fstpl
cmp
loope
dec
sub
mov
mov
jge
out
shll
xlat
movsb
loop
test
ja
fsubl
lahf
lcall
adc
push
push
jnp
je
push
outsl
mov
cmp
popf
push
cli
scas
xchg
inc
push
dec
sbb
stos
aam
scas
lods
push
addr16
inc
inc
sti
sti
dec
jmp
lahf
mov
notl
cmp
iret
test
mov
inc
fadd
inc
inc
fstl
repz
xor
pop
xchg
mov
loop
inc
outsl
negb
and
popa
leave
mov
ljmp
push
scas
push
cltd
jo
jg
cli
enter
dec
inc
mov
inc
cmp
repz
cmp
lahf
ret
mov
mov
imul
es
push
push
mov
mov
movsl
cmpsl
sbb
ljmp
pop
loop
sub
movsl
cmp
popf
movsl
fdivl
lahf
jae
sub
inc
sbb
or
fcoms
daa
insb
iret
fildll
xchg
pop
es
in
cmc
mov
out
sub
mov
hlt
in
iret
cmp
cmp
scas
scas
jmp
bound
out
mov
jg
ljmp
inc
sarb
and
mov
pushf
adc
adc
movsl
inc
insb
xor
sahf
sub
inc
or
jbe
cwtl
jl
inc
js
cmp
adc
pop
loope
push
mov
inc
fistpl
outsb
jmp
add
cmc
mov
mov
fiaddl
jns
mov
dec
inc
cltd
xchg
std
xchg
push
jne
push
xor
cmp
cmp
test
jmp
pop
movsl
mov
adc
inc
mov
mov
lods
mov
dec
icebp
lahf
mov
loop
mov
push
pop
add
dec
mov
sub
cmc
inc
xorl
les
inc
jb
sahf
lea
iret
mov
cli
test
sti
mov
dec
outsb
mov
mov
iret
mov
int3
push
fistl
dec
mov
mov
cmpsb
decl
dec
setle
lods
sbb
sbb
jae
in
mov
and
cld
shlb
adc
jne
xor
dec
pop
jmp
lcall
jp
scas
xor
mov
ret
push
push
push
lret
ljmp
adc
mov
dec
pop
sbb
pusha
sbb
xorl
add
push
cmp
adc
out
jmp
lcall
hlt
inc
or
loop
sub
xchg
repnz
mov
jp
cwtl
sub
jle
mov
insb
in
pusha
mov
cmpsb
mov
mov
mov
daa
mov
das
loope
jae
ret
aaa
mov
rolb
outsb
pop
inc
mov
in
leave
mov
push
lods
lret
popfw
cmc
hlt
les
pop
fdiv
hlt
ror
mov
cs
push
mov
idivb
jno
ret
addr16
in
xchg
outsb
fs
inc
or
jmp
dec
cmc
jb
sub
pop
sbb
adc
ja
loop
in
mov
sbb
js
inc
inc
sub
shrl
sub
shl
movb
xchg
pop
mov
jae
mov
mov
cmpsb
push
call
stc
jo
jne
stos
or
das
imul
add
xlat
sbb
enter
xor
cmp
jp
jmp
or
in
push
cmp
pushl
cwtl
mov
mov
add
rcl
jge
mov
adc
sbb
sbb
cmp
adc
into
je
aas
rorb
or
pusha
push
adc
loop
mov
ss
test
jmp
dec
call
outsb
call
xor
dec
mov
inc
or
loope
fdivr
xor
sub
pop
dec
xchg
cmpxchg
scas
mov
cli
and
xor
sub
mov
cs
inc
mov
ret
xchg
lock
addr16
aam
push
pop
rclb
int
and
xor
add
ret
frstor
adc
aam
and
fldenv
sub
int
mov
push
scas
mov
test
imul
push
rorl
pop
sbb
lret
pop
jmp
or
std
fnsave
enter
xchg
cmc
xchg
bts
jnp
jp
adc
add
leave
inc
add
inc
and
mov
arpl
push
ret
pop
fldenv
push
div
jp
jae
lods
adc
jp,pn
xchg
add
outsl
pop
mov
push
shlb
fcmovnb
aas
adc
js
jne
dec
insb
dec
icebp
mov
xor
lock
mov
mov
adc
pop
test
mov
faddl
inc
ja
xor
lock
mov
fstpt
pusha
adc
xor
adc
jl
jmp
push
mov
lret
lock
jbe
lret
sti
sarb
or
lea
cmp
adc
jae
jne
shrb
jbe
adc
movsl
lret
loop,pn
mov
push
mov
sub
push
mov
xor
mov
cmpsb
jp
push
adc
jg
jns
dec
push
outsb
loopne
rorl
ret
dec
fdiv
and
rcl
xor
in
mov
mov
inc
decl
mov
sahf
push
loopne
arpl
or
jbe
sbb
lea
adc
sti
cmp
add
pop
leave
mov
jmp
mov
push
jbe
cmpl
mov
movsb
ret
daa
negl
jns
cmp
fst
sub
cld
mov
jbe
jg
outsb
pop
sbb
push
scas
xor
mov
xchg
add
xor
outsl
repnz
xchg
aam
cmpsb
jecxz
pop
jmp
xchg
rcl
push
push
pminsw
or
mov
jnp
mov
add
push
out
pop
lea
test
jecxz
fldl
pop
mov
mov
test
and
pop
or
imul
mov
fldt
dec
adc
pop
add
push
and
mov
cmovbe
lock
add
aam
and
mov
xchg
sub
pop
inc
inc
ret
in
pushf
push
int
adc
jp
cmp
imul
cmp
adc
mov
push
mov
repz
icebp
pop
cmpsb
mov
fwait
adc
push
pop
cmc
je
shlb
mov
scas
cmpsb
psubusw
cmpsl
push
orl
jnp
push
sbb
repz
enter
cltd
loopne
jg
iret
cmp
mov
or
inc
pop
adc
xchg
les
je
xchg
stos
bound
mov
cmp
das
push
mov
jae
loope
das
clc
and
push
sbb
mov
outsb
xchg
das
cmpsb
in
add
scas
sub
push
fs
rcll
mov
or
fwait
sbb
cli
adc
out
pop
inc
mov
out
nop
je
insb
sbb
xchg
jmp
das
xchg
adc
xchg
scas
adc
mov
push
lea
outsl
and
pop
dec
imul
xor
sbb
out
push
pop
cmp
popa
inc
test
jge
out
xor
push
jae
lds
bound
in
and
push
into
add
add
into
mov
in
icebp
data16
stos
lret
pop
inc
inc
insb
testb
pop
mov
adc
and
push
test
adc
push
rcrl
es
adc
xor
lahf
scas
push
cmpsb
xorl
mov
cld
pop
mov
ret
jmp
mov
sbb
hlt
dec
ljmp
jg
pop
or
scas
mov
subb
aad
es
jb
gs
loope
push
jg
loop
roll
mov
icebp
jg
ret
and
subl
push
pop
xor
cltd
pop
daa
loopne
jge
mov
adc
fsubrp
and
jecxz
pop
jecxz
inc
mov
adcl
mov
rcll
jge
outsb
iret
and
adc
mov
inc
adc
leave
aam
or
jg
sbb
movsl
cmc
cli
mov
pop
in
push
push
fwait
testl
push
xchg
sahf
in
bts
int
push
cmc
fwait
outsl
mov
scas
dec
imul
and
rorl
sti
out
xchg
dec
push
gs
test
inc
and
push
adc
stos
pop
sub
cmp
push
ja
sub
jae
xchg
aaa
mov
push
add
cmp
xlat
jg
add
loope
or
inc
cli
push
aad
popf
adc
ja
mov
push
lock
mov
loopne
add
push
cld
ja
jl
pop
imul
and
fimuls
mov
ret
jmp
mov
pop
and
cmp
mov
lcall
shll
and
mov
mov
ss
shrl
add
stc
xchg
and
outsb
aad
xchg
jo
sbb
out
in
shll
cmp
repnz
push
push
xlat
scas
int3
or
mov
mov
mov
lds
jl
loopne
dec
loope
pop
cmp
mov
stos
mov
push
sbb
inc
fwait
outsl
mulb
int3
sti
nop
aad
pop
push
jno
and
call
mov
in
adc
inc
aam
int
jne
push
test
popa
cli
sbb
cmc
cli
lahf
dec
roll
dec
fcomi
xchg
xchg
nop
jle
push
aas
pop
sbb
and
add
xchg
icebp
adcb
aaa
xchg
mov
jl
cmpsb
shr
sub
pop
inc
pop
add
pop
push
in
das
rcrb
cli
jae
subb
lret
inc
push
rclb
fcmovnu
shrb
jg
sub
mov
inc
cmp
xchg
idivl
pop
ret
ds
ret
cld
jl
gs
fidivs
adc
pop
jp
cld
lods
andl
mov
lret
xchg
xor
int
sub
popa
and
or
cli
es
lods
mov
dec
cmp
loopne
js
jmp
scas
cmp
rcrb
and
jmp
and
xlat
icebp
mov
jnp
mov
test
mov
xchg
cmp
repnz
and
sbb
jns
cmpsb
in
fwait
add
pop
inc
push
pop
rcll
in
clc
pop
sbb
add
or
movsl
mov
imul
repnz
outsl
addl
hlt
cmp
cmp
add
xchg
jmp
cmp
in
stos
gs
xchg
fidivrs
roll
push
xchg
cld
or
inc
mov
pop
cld
inc
popf
dec
data16
mov
pusha
test
or
lods
xchg
and
pop
sbb
shlb
mov
mov
int
pushf
xor
loopne
sub
lcall
xchg
jg
xchg
add
add
jg
push
mov
mov
push
shll
xor
in
add
bound
into
ficoml
adc
outsb
sub
and
ret
push
repz
jo
fidivrs
xor
fwait
push
mov
leave
or
out
out
mov
xchg
aaa
ret
adc
repz
loopne
xchg
pop
sarl
jae
and
or
int
stos
add
dec
hlt
std
sbbl
adcb
cmp
andl
mov
pop
int
lea
aaa
sbb
ds
iret
add
pop
fs
mov
mov
loop
lock
cs
push
and
ja
cmp
push
int3
adc
call
mov
movsl
leave
shlb
and
cli
outsb
out
sahf
shl
jge
loop
mov
addr16
cmpsl
ljmp
jne
or
ljmp
das
and
dec
dec
dec
adc
stos
push
jbe
inc
cs
push
pop
test
sub
out
es
pop
pop
andl
test
xor
push
pop
mov
jp
addr16
mov
mov
outsl
mov
mov
neg
sti
xor
fnstenv
fisubrl
pop
push
into
mov
mov
imulb
adc
test
inc
outsb
js,pt
cld
dec
lret
pop
inc
arpl
je
sarl
mov
scas
mulps
push
cmp
movsb
pop
rcrb
cs
add
push
out
xchg
in
jnp
jo
repnz
aas
mov
insl
ret
add
and
adc
idivl
xlat
icebp
test
out
xchg
lcall
jne
cmc
adc
pop
xchg
aam
xchg
hlt
test
jb
add
jne
sahf
xor
push
inc
push
lock
push
mov
fisubl
das
xor
xchg
pop
loopne
lret
adc
shll
in
out
xor
stc
loop
fsts
dec
sarl
call
loope
xchg
pop
jnp
and
imul
add
push
mov
pop
mov
dec
mov
jb
add
xlat
bound
daa
sub
rorl
cltd
cld
movd
in
inc
lahf
jle
xchg
outsl
mov
out
popa
or
fbstp
cmp
sarl
or
pop
sbb
jg
outsl
xor
sbb
sub
test
and
ljmp
ret
sbb
loope
xchg
push
fsubp
sbb
push
pop
inc
lea
lcall
sbb
sub
pop
icebp
icebp
icebp
jbe
testl
rorb
clc
sbbb
test
leave
mov
pop
mov
jns
dec
rorb
mov
or
inc
push
loopne
xchg
les
fwait
gs
insl
xchg
push
popa
xor
mov
xchg
fs
insl
or
sbb
mov
xor
adc
push
pop
sub
mov
and
fs
nop
ds
sub
adc
out
mov
xchg
sbbl
dec
pop
or
mov
cli
ss
pop
jns
repz
or
test
mov
lods
push
aas
sbb
xor
sti
add
leave
fwait
lret
inc
test
and
in
pusha
sub
loop
pop
pop
inc
ret
addr16
inc
add
add
fimull
in
push
jmp
out
dec
movsl
insl
pop
add
pop
in
sbb
ror
mov
push
cmp
jno
shrl
mov
dec
mov
enter
and
ret
scas
mov
stos
hlt
das
dec
lret
pusha
outsl
cli
xchg
lahf
xor
ficompl
or
int3
jno
addr16
cmpsb
enter
ret
pushf
jno
add
leave
adc
insl
clc
decl
clc
add
and
sub
in
inc
inc
mov
xor
cltd
addr16
sbb
and
pop
and
push
add
fwait
mov
adc
stos
mov
bound
inc
cmp
cmp
cmp
push
outsl
ss
jmp
push
sbb
cmp
add
or
sar
xchg
pop
lods
jl
lgs
push
pusha
hlt
sar
xor
popfw
mov
xchg
pushf
xchg
repz
lret
inc
out
ljmp
mov
and
nop
jmp
mov
mov
pop
fisubs
sub
and
andb
xchg
test
and
cmp
lret
sbb
scas
cld
mov
or
aam
iret
mov
jae
sub
mov
fisttpll
push
test
outsb
mov
pop
fsubr
repz
lock
sbb
out
gs
pop
xchg
sub
fwait
mov
call
filds
pop
inc
lcall
dec
jo
test
mov
cld
bswap
jae
fisubrs
mov
into
sahf
scas
arpl
mov
adc
adc
fiadds
jae
test
adc
outsl
or
je
orl
xchg
imul
sbb
add
and
loopne
or
ljmp
fcoml
arpl
mov
enterw
xlat
rorb
mov
mov
cwtl
into
lret
cmp
jbe
adc
or
push
xchg
sbb
xor
inc
and
xor
push
mov
movsb
mov
scas
insb
sbb
add
fisttpll
mov
icebp
xor
adc
mov
incb
stc
push
jle
sbb
popf
xor
mov
lods
in
out
jo
icebp
clc
pop
imul
mov
pop
fwait
test
mov
js
xchg
cwtd
xchg
lret
andb
rcrb
jb
clc
inc
clc
shl
scas
xchg
out
jmp
test
dec
shll
add
dec
scas
push
clc
cmp
sub
mov
fimull
outsb
adcl
das
cld
in
inc
cld
cmpsl
adc
jb
mov
test
or
stos
rcl
repnz
dec
out
inc
sub
ret
mov
push
imul
push
mov
mov
icebp
xlat
shr
or
or
xor
or
pop
lds
pop
out
mov
psrad
fprem
je
cmpsl
gs
dec
es
lods
pop
lock
stc
xor
mov
sbb
sub
in
rcr
push
sbb
cli
jge
dec
mov
sti
xchg
leave
test
push
push
push
negb
pop
mov
mov
mov
loopne
and
jb
add
std
repz
push
xlat
dec
adc
int3
and
mov
es
adc
out
jno
clc
aaa
dec
lods
inc
test
popl
inc
test
fidivrs
stc
roll
movsb
pushf
jp
pushf
push
int
jo
or
fstpt
pop
fs
mov
cmpsl
shlb
and
scas
cmovae
loope
jnp
jne
ret
push
pinsrw
adc
push
pusha
bt
out
ficoml
mov
lds
in
jg
mov
inc
mov
ret
mull
fxch
iret
sbb
je
xchg
sti
out
aad
inc
repz
dec
sub
dec
js,pt
mov
sbb
fs
dec
lret
inc
lods
xchg
pop
and
aaa
movsl
push
adc
lods
in
and
mov
xor
cmpb
inc
or
adc
movl
pop
lods
mov
mov
popa
faddl
jmp
je
ja
jl
in
and
mov
xor
sarl
push
inc
test
jl
push
in
into
sub
clc
icebp
mov
xor
bound
sbb
push
outsl
js
sbb
andl
pop
jg
xchg
ret
xor
jg
scas
int
mov
ret
sarb
lock
scas
shrl
mov
test
sub
and
sub
fdivs
hlt
add
daa
aam
jmp
mov
cmp
cmpsl
pop
and
pop
gs
xor
rolb
adc
test
and
lcall
popf
into
ss
int
add
jae
leave
cmp
clc
ds
cmp
xchg
fldcw
pop
add
pop
dec
rorb
ds
xor
xor
xor
pop
shll
int
cs
xchg
sub
xchg
pop
dec
and
jae
xchg
pop
mov
andl
dec
sbb
sbb
and
sbb
flds
stc
mov
idivl
mov
jl
in
mov
mov
movsb
fwait
dec
or
sub
jo
inc
adc
xor
js
cmp
aas
jp
stos
lods
xchg
test
mov
xchg
dec
lret
push
insb
push
mov
ficompl
mov
mov
sbb
imul
andl
ss
movsl
and
notb
push
fistpll
in
add
and
jo
jge
stc
sub
inc
aam
enter
fs
xor
inc
rcrb
fucomp
mov
iret
jae
mov
xor
in
das
iret
fisubl
cmpsb
push
mov
in
sbb
enter
cwtl
xorb
pop
adc
mov
and
mov
sti
sahf
pop
cmp
jg
stos
fstpt
inc
sti
div
rcll
xor
adc
imulb
mov
loope
push
ficompl
inc
ljmp
movb
fwait
jle
popa
les
cli
inc
in
das
rcrb
mov
jo
stos
aam
lret
stc
sbb
jnp
adcl
loope
out
jecxz
xor
jbe
push
int3
aaa
jle
adc
xor
repnz
repnz
adc
out
clc
mov
push
sahf
lcall
xchg
rorb
icebp
jo
mov
cmpsb
and
movsb
repz
test
loopne
ss
mov
fstpt
mov
push
jnp
cmc
push
enter
adc
adc
push
cmpsl
jbe
xor
es
push
push
notb
mov
dec
jne
mov
lods
fisttpll
addr16
xor
push
mov
aam
cs
mov
dec
pop
stos
enter
or
inc
aas
cmp
rorb
pop
pusha
sbb
test
lds
lods
je
xor
push
mov
xor
jle
sub
add
js
cs
or
inc
add
popl
mov
xchg
cltd
gs
js
int
adc
mov
push
imul
pop
inc
pushl
sub
test
xor
int3
mov
lcall
push
cmpsb
jbe
mov
xchg
fs
fcmove
test
and
maxps
sub
cmc
or
cli
push
andl
adc
fiadds
jnp
into
mov
jp
out
pop
mov
sub
aas
imul
fstpt
insb
aaa
shlb
ss
jecxz
sti
ret
lds
lahf
add
scas
mull
sub
jb
hlt
leave
lret
fwait
ret
add
pop
sub
and
fidivl
clc
roll
mov
aad
xor
int3
inc
dec
mov
mov
mov
loopne
js
enter
adc
imul
cmp
pop
dec
insl
inc
pop
jne
ja
ret
ror
outsl
mov
adc
xor
xchg
adc
outsb
loope
inc
sub
sbb
jns
aam
dec
add
pusha
aaa
xchg
inc
mov
xchg
mov
ss
ss
test
pop
fmull
or
int3
adc
dec
data16
loope
data16
cmp
mov
inc
nop
adc
into
fidivs
stc
sub
xor
jns
pop
stos
fldenv
mov
pushf
inc
push
into
fnstsw
das
adc
pusha
stc
jmp
rolb
mov
pop
sahf
jp
xchg
das
hlt
bnd
into
lcall
adc
imul
push
lcall
aam
inc
sub
cltd
cmp
imul
dec
mov
sarl
in
popa
lods
shrb
jp
inc
out
sti
jp
test
iret
mov
jp
add
or
cmc
ds
movsb
fstps
sarb
outsl
cmp
pop
push
das
popf
fistpll
pushf
iret
mulb
push
sbb
sub
or
repz
mov
rep
sahf
push
add
into
into
push
repnz
pop
out
adc
mov
call
cmp
call
mov
inc
cltd
mov
mov
and
add
push
or
and
call
jbe
iret
adc
js
pusha
pop
xor
xchg
pop
push
enter
dec
mov
les
shll
adc
shlb
dec
insl
outsb
hlt
push
adc
mov
dec
add
jo
lret
pop
push
inc
int
addl
sbbb
adc
jns
push
ficoms
ficoms
test
cmp
cmp
lods
fmul
imul
jecxz
mov
xor
popa
sub
sahf
out
push
into
push
inc
xor
ja
push
lcall
rcrb
lock
cmpsl
loope
cs
cltd
ja
jno
jae
imul
into
mov
mov
and
testb
std
fcomps
faddl
sub
xchg
push
add
nop
sbb
das
inc
out
test
sbb
leave
sarb
arpl
xchg
dec
movsb
iret
jb
cmp
divb
stos
pop
cli
sub
cmp
inc
xorb
js
addb
scas
xchg
std
cmpsl
mov
aas
mov
push
jecxz
out
and
dec
xor
sub
cli
ss
es
shlb
mov
ds
movsl
mov
sbb
andb
dec
and
jge
cmp
push
ffreep
inc
mov
iret
jp
ss
insl
hlt
inc
mov
xchg
xchg
insl
pusha
shl
pop
jmp
adc
mov
xchg
jo
ret
dec
push
insb
and
xchg
aaa
popa
mov
js
xor
cs
sarb
jp
add
cmpb
jne
ss
xchg
aas
cmpsb
jne
push
in
dec
add
adcl
iret
inc
pop
outsb
sbbl
push
jecxz
and
shll
loop
mov
sub
loop
sbb
test
sahf
rol
cmp
pop
xchg
scas
in
and
cmp
sbb
repz
jg
xchg
jle
mov
outsb
shll
dec
or
nop
xchg
or
jge
andb
xlat
in
inc
add
lret
shrd
mov
andnps
icebp
inc
xor
mov
jecxz
dec
in
popf
rclb
mov
ret
mov
mov
loopne
xor
andl
std
je
sbb
repz
or
or
push
push
or
sbb
sarl
lods
xchg
test
je
xor
cmpsl
jecxz
sbb
cmpsb
add
out
and
jo
test
dec
ds
pop
cwtl
adc
jnp
std
hlt
add
gs
test
shlb
imul
mov
inc
aaa
mov
jns
lock
repnz
jbe
addb
popa
jns
aas
leave
daa
or
sub
inc
popf
stc
addr16
sbb
imul
adc
mov
mov
nop
push
mov
sbb
xchg
mov
and
cwtl
sbb
sbb
jmp
jns
mov
mov
adc
xlat
xor
pop
orl
xor
lods
cli
pusha
lahf
jae
je
xchg
and
arpl
lret
xor
bound
sahf
push
mov
mov
divb
mov
sahf
sbb
enter
xchg
xchg
jle
push
in
scas
mov
subb
in
push
dec
lcall
in
call
mov
sbb
mov
xchg
sub
ret
lcall
sahf
or
adc
pop
and
push
stos
push
out
out
ljmp
aas
adc
bound
test
mov
or
cmp
data16
fisubrs
pop
pushf
fxch
sub
shrb
pop
sbb
cmp
adc
add
adc
dec
adc
sbb
sub
aas
hlt
jmp
mov
mov
add
adc
adcb
adc
inc
and
cmp
add
nop
adcl
adc
loop,pt
add
jo
loop
pop
aad
test
insb
jnp
hlt
push
out
push
jb
adc
aas
fcom
inc
cmp
test
lret
test
sbb
mov
mov
lods
ud0
or
clc
pop
mov
xchg
test
xor
movsb
jb
fsubl
cmp
in
cmp
sub
push
fildll
add
test
mov
jl
out
rol
movl
xchg
sub
dec
scas
mov
xor
movsl
pop
outsb
icebp
aaa
lret
scas
fimull
cs
movsb
aaa
push
bound
mov
mov
ud1
das
bound
inc
jmp
enter
push
xchg
call
mov
sub
cmp
or
and
inc
adc
dec
inc
in
lahf
int3
test
test
insl
mov
aad
mov
adc
mov
fidivrs
mov
fs
pop
es
xor
and
inc
cwtl
fstpt
fldl
call
cmp
test
mov
lret
shll
jl
out
popf
mov
sbb
push
and
mulb
les
or
hlt
rcr
pop
jecxz
adc
cwtl
ljmp
in
sub
je
cltd
push
jge
mov
sbb
mov
stc
xor
push
push
fs
in
enter
mov
adc
mov
adc
enter
popf
lods
jl
lods
mov
xchg
and
movsl
shlb
mov
sub
iret
inc
sti
icebp
add
outsl
mov
adc
lcall
bound
pop
mov
leave
imul
pop
fistpl
push
jns
shlb
hlt
mov
enter
inc
push
jg
mov
popa
shlb
xor
jo
inc
fs
mov
push
popl
les
test
cmp
xchg
mov
jne
xor
sbb
int
push
mov
pop
int3
xor
and
adc
scas
push
sarb
jmp
aam
sub
sub
call
out
pop
shl
cmpsl
les
dec
les
dec
sub
pop
cmp
push
sbb
hlt
pop
pop
cmc
mov
pop
add
popa
xchg
and
ljmp
xor
repz
stc
or
push
xor
sub
xchg
fimuls
xor
cmp
sarb
dec
push
lahf
lret
shl
mov
repz
mov
cmp
sub
movsb
mov
movsb
push
int
cmp
adc
out
mov
icebp
movb
push
cltd
cwtl
dec
notl
jp
mov
add
rcrl
adc
mov
push
inc
rcr
or
jnp
cwtl
lahf
mov
int
out
inc
bound
push
jmp
lock
adc
xchg
ret
pop
mov
or
jle
fiaddl
jae
cmp
sarl
stos
in
out
lock
test
in
mov
push
popf
daa
cld
bound
and
pop
hlt
popf
lock
xor
add
push
cmp
cmp
cwtl
ds
add
inc
push
popf
ss
addl
nop
push
adc
inc
fbstp
adc
add
push
push
inc
loop,pn
xchg
inc
nop
ret
arpl
adc
fimuls
inc
mov
addr16
cmp
xor
out
xchg
push
and
cmp
mov
stos
or
int3
mov
inc
pop
sbb
nop
shl
dec
push
xor
jl
sbb
stos
scas
leave
fldcw
fmull
cld
int
and
adc
push
cli
iret
fildl
cmp
pushf
rorb
mov
inc
pop
pop
mov
adc
insb
push
jge
fdivs
movl
and
lods
jb
shll
pushf
aas
xchg
sbb
inc
fisttps
sbb
pop
lds
sub
in
pop
mov
inc
push
push
xchg
movsl
ljmp
cmp
mov
add
dec
scas
repz
fisubs
ljmp
mov
fldt
adc
lea
xchg
inc
xchg
lret
inc
cmp
or
iret
adc
push
mov
shrb
out
lahf
xor
push
adc
mov
jns
movsb
jge
andb
sbb
icebp
mov
xchg
sar
imul
dec
mov
and
in
jge
bound
mov
lds
add
imul
pop
int
insb
sub
jns
mov
push
lds
lahf
pop
and
push
outsb
fstpt
dec
sbb
push
jge
jbe
xchg
or
or
adc
andb
cli
call
stos
pop
stc
pop
cmc
scas
andl
jge
xor
jo
adc
jns
sbb
lea
bound
adc
xchg
inc
stos
mov
xchg
pop
out
loopne
or
jb
mov
repz
ljmp
loope
lret
cmpsb
or
enter
into
sub
cwtl
inc
cmp
test
into
sub
lcall
outsl
aaa
iret
mov
rclb
or
in
cmp
jl
mov
pop
dec
in
pushl
inc
leave
je
in
cmpsl
rcrb
add
mov
fdivrp
arpl
pop
int
sub
mov
jp
orl
les
into
pop
jae
fistpl
sub
mov
or
mov
arpl
subl
mov
xor
cmp
xchg
jbe
lods
adcl
mov
xchg
mov
mov
and
clc
pop
mov
iret
add
scas
scas
pop
mov
push
in
fwait
lret
adc
or
adc
int3
sub
loopne
dec
cwtl
rcrb
mov
pop
es
cmp
arpl
lret
or
stos
jb
jge
pop
loope
lods
xchg
js
fistpl
jg
sbb
mov
pop
add
je
jecxz
sti
std
icebp
loopne
sbb
push
enter
les
xchg
cmpsb
push
push
insb
cmpsl
fidivs
rcrl
xor
insb
add
fs
dec
xchg
lcall
in
sbb
mov
aad
mov
rolb
xor
dec
lods
imul
add
xchg
jnp
addb
add
add
sbb
stc
stos
xchg
aaa
add
xor
repz
xchg
imul
cmp
push
inc
test
mov
movsb
nop
iret
push
add
jg
or
cmp
pushw
dec
rolb
and
and
sub
dec
fwait
subb
out
js
cwtl
stos
cltd
addr16
loope
mov
iret
imul
cmp
es
pop
adc
addl
jb
push
dec
cmpsb
sub
jne
pushf
xor
mov
mov
rcrb
xor
lods
jne
adcl
xchg
xchg
push
fists
sarb
movsb
mov
ret
stc
sbb
sbb
cmp
inc
shlb
ljmp
lcallw
dec
mov
loop
cmp
sysenter
xchg
add
test
push
add
fbstp
lods
lds
and
lods
aas
icebp
jb
aaa
imul
icebp
pop
inc
popf
test
dec
out
mov
out
mov
xchg
jle
mov
and
mov
psllw
leave
mov
iret
pop
lret
and
adc
or
mov
mov
data16
daa
mov
ljmp
test
inc
push
repnz
repnz
js
stos
xchg
ss
insb
mov
aam
adc
mov
xorb
rorb
mov
mov
jmp
lods
inc
xchg
sbb
incb
sub
insb
push
fisubl
int
daa
repnz
sbb
xlat
je
andb
cwtl
loopne
in
rolb
mov
xchg
pop
dec
jge
mov
adc
pop
enter
insb
bnd
fnstenv
movsb
dec
pop
mov
rclb
pop
or
jmp
inc
mov
cmpl
pop
push
xor
cld
ds
pop
addr16
call
subl
lret
lods
xor
inc
pop
pop
add
psubsb
les
mov
sub
mov
cli
lcall
xchg
mov
push
or
js
sarl
enter
mov
aad
imul
push
and
sbb
das
mov
jp
push
push
sbb
std
fcmovnbe
das
cmpsl
adc
xchg
mov
pop
cmp
in
sbb
sbbb
push
ss
and
mov
cmpsl
fucom
sti
mov
xor
inc
push
cltd
clc
cld
add
mov
or
fs
add
jns
xchg
lods
mov
mov
loopne
into
xchg
nop
mov
push
out
imul
sub
pop
add
pushf
dec
lret
cld
mov
je
xorl
sbb
pop
mov
rolb
out
pop
sbb
loopne
sbb
pop
and
nop
iret
jmp
rcll
aas
and
adc
jo
imul
fisubrl
pop
jp
push
cli
pop
xor
bound
pusha
sbb
movsl
mov
pop
fidivl
ret
je
add
pop
test
xor
xchg
or
pop
lods
scas
mulb
pusha
lcall
sub
xor
inc
repz
frstor
jmp
cmp
xor
jno
jno
mov
outsl
loop
pop
popa
ja
ror
xor
sbb
and
mov
outsl
mov
ret
flds
imul
pop
les
jmp
adc
data16
inc
add
xchg
dec
xchg
pop
in
jmp
pushf
xor
ds
mov
adc
jbe
insb
pusha
mov
shr
push
test
jmp
mov
add
lods
aad
or
test
sbb
xchg
clc
sbb
xor
int3
fdivs
fcmovnbe
cwtl
pop
mov
sbbl
xchg
ja
out
xchg
imul
inc
pop
das
addr16
std
mov
jle
jno
jns
scas
mov
or
mov
mov
test
fldenvs
pop
push
cmp
sub
mov
outsb
jns
sahf
pop
int
scas
clc
arpl
push
test
ss
or
stos
mov
scas
imul
or
ds
sbb
repnz
addl
push
or
aam
dec
int3
pop
sub
fistl
adc
mov
mov
or
sbbl
adc
cmp
aad
sbb
or
pusha
loopne
fidivl
and
aaa
xor
into
mov
daa
fdivl
cmpsl
out
daa
cld
push
pop
leave
mov
pop
xor
mov
outsl
leave
pop
push
leave
pop
je
adc
lods
lock
adc
jo
cli
inc
xchg
cmpsl
jne
pop
dec
icebp
jbe
loopne
mov
jp
and
loope
push
imul
roll
lcall
shr
rorb
add
xlat
ljmp
dec
mov
sbb
sub
cwtl
inc
pop
ficompl
mov
xor
xor
xchg
cmp
sahf
dec
adc
mov
adc
test
jle
shll
imul
sub
dec
inc
mov
aad
pop
push
adc
out
jmp
loopne
lea
repnz
aas
js
imul
cmp
sarl
popf
das
pushf
cmp
js
arpl
cmp
push
fcmovb
or
outsb
popf
and
xchg
ret
into
scas
cmpb
jecxz
push
mov
and
adc
jmp
mov
push
jnp
movsb
dec
adc
jg
jnp
into
add
out
sub
xchg
sub
mov
sbb
std
dec
out
xor
push
andb
int3
pop
insb
lods
filds
loope
in
out
jbe
mov
jo
aas
or
adc
push
pushf
dec
rolb
loope
mov
inc
stc
and
out
repnz
movsb
ret
xchg
jb
xor
mov
lods
mov
fnstcw
inc
push
cmp
in
rcr
icebp
movsl
jmp
outsb
dec
mov
stc
aam
shll
es
cmc
jecxz
fcomip
push
xchg
sub
adc
xchg
mov
shll
enter
mov
adc
sbb
mov
lock
icebp
dec
lret
clc
add
add
ret
inc
pop
daa
repnz
insb
pop
cltd
lret
pop
push
push
add
cmp
stos
loope
xchg
jb
test
icebp
adc
jno
sbb
or
pop
push
sub
lods
aas
cmp
dec
bound
cmp
push
xchg
aad
cmp
mov
ret
jle
xchg
xchg
inc
mov
xor
out
cmp
and
aas
pop
test
loop
pop
test
adc
jle
mov
fmull
push
jl
ror
outsl
nop
subl
xchg
scas
push
pavgw
xor
cmpsl
add
lods
mov
dec
insb
fdivrl
or
push
xchg
inc
arpl
push
cmp
push
imul
aas
outsl
stos
jb
pop
cmp
xor
in
mov
leave
and
pop
dec
leave
add
clc
js
inc
lahf
mov
leave
xlat
andl
lea
push
xor
fdivrl
inc
sarb
xchg
inc
sub
sbb
sbb
int
jmp
xor
cmp
fcompp
and
repz
xchg
rol
popa
mov
sub
add
out
mov
in
and
out
sbb
scas
fcoml
mov
popa
mov
inc
add
dec
pushf
cmp
cmp
pop
into
aaa
lods
xor
lahf
dec
cmp
sub
jae
daa
cwtl
push
insb
lods
add
cmpsl
shrl
stos
pop
lahf
mov
out
xor
or
in
test
test
popa
test
in
lods
mov
mov
xor
sub
aaa
aas
out
data16
add
pop
addb
mov
rcrl
adc
out
cmp
testl
xchg
fisubs
rcll
mov
leave
add
imul
sbb
push
jle
jg
popf
aaa
aam
push
shll
ja
jg
adcb
adc
in
lock
add
lea
movsl
in
adc
add
and
pop
in
mov
popf
mov
ss
jb
or
cmpsl
aas
notl
cmp
fdivs
cmc
fistpll
xor
sbb
or
xor
shr
xchg
nop
sub
adc
iret
scas
mov
jo
and
xor
into
mov
sgdtl
and
loope
add
mov
outsl
jb
out
je
or
mov
xchg
in
xor
mov
push
out
scas
rorl
dec
xchg
cmp
jl
scas
fstpt
xchg
mov
loope
shll
shr
les
iret
mov
lds
lods
sub
test
bound
adc
scas
sbb
jge
out
cwtl
or
push
je
xlat
xor
push
pop
hlt
xchg
push
bound
daa
das
aaa
loop
add
adc
inc
push
fwait
mov
pop
mov
scas
loopne
sub
push
pop
and
mov
setge
dec
mov
imull
dec
mov
pop
sahf
pop
sbb
adc
cmp
xchg
pop
orl
cs
aas
xor
jae
filds
cmpsb
ficompl
mov
or
lret
cli
das
fyl2xp1
fildl
fists
inc
shlb
sbb
push
jo
pop
mov
xchg
cmpsl
aad
push
mov
dec
pop
mov
push
sahf
in
fbstp
lea
stos
pop
adc
push
pop
and
xchg
xchg
xorb
stos
inc
stos
mov
lods
icebp
inc
aam
jecxz
addr16
and
fisubl
xor
punpckhdq
sub
dec
lret
jge
xchg
cmpsb
lds
aaa
mov
xchg
cmp
jb
mov
dec
dec
out
jg
pop
imul
mov
clc
cmp
xchg
outsb
push
push
outsb
aaa
std
pop
mov
fimuls
jb
fdivs
cmove
mov
adc
sub
adc
movsb
jle
lds
insb
in
stc
lret
lods
pop
aaa
xor
and
int
mov
aaa
adc
xchg
outsb
dec
mov
imul
inc
aas
xchg
and
sbb
aas
pop
hlt
mov
scas
ja
out
mov
das
stos
leave
mov
es
out
jbe
adc
mov
sbb
add
mov
and
push
in
jns
push
pop
push
xchg
sub
outsb
ficoml
movsl
das
push
decl
inc
in
cs
pop
or
in
es
mov
pop
das
mov
and
stos
push
fdivrl
cmc
sub
gs
cmp
js
sbb
scas
inc
es
xchg
inc
or
cmp
pop
push
popa
xchg
and
jecxz
fistl
insb
push
in
in
xchg
out
into
orb
jmp
inc
cli
sbb
ljmp
stos
sbb
inc
rcrl
ds
into
jb
or
loope
dec
xchg
cmp
inc
xchg
adc
push
repz
xchg
and
cmp
adc
rol
insl
fisubrl
ss
xchg
push
pop
lods
scas
lret
dec
mov
pushf
lahf
iret
push
or
pop
rcll
imul
insb
adc
and
out
adc
and
outsl
in
ficoms
adc
mov
sub
test
lcall
repnz
fsubrl
into
pusha
push
mov
dec
cmp
outsb
mov
aam
push
sub
rcl
iret
adc
mov
xor
dec
loop
pop
dec
ss
outsl
push
inc
xchg
xchg
sbbl
sbb
sbb
pop
mov
mov
scas
pop
lock
jns
push
push
jecxz
in
add
mov
movsl
sbb
fcoml
icebp
imul
mov
or
fidivs
sbb
or
addr16
push
xor
push
jp
push
dec
in
insb
daa
sbb
cltd
jle
xchg
popa
loope
xor
orb
add
sbb
loope
sbb
jg
jbe
gs
in
mov
sbb
jo
cli
incb
sub
pop
add
lret
push
fisttps
xchg
mov
cmp
xor
aas
mov
inc
jbe
pop
aad
cmpsl
frstor
imul
cld
sbb
outsb
mov
push
inc
inc
mov
push
sbb
lods
inc
cli
dec
push
icebp
lea
imul
mov
mov
sbb
sahf
cmc
pop
pop
or
ret
in
sbb
or
lcall
mov
scas
int
in
hlt
sub
xor
ret
jle
dec
add
lahf
mov
push
fcmovb
sti
outsl
xsaves
mov
jecxz
jle
inc
pop
xchg
push
xchg
out
lea
mov
adc
enter
bound
and
das
cmc
push
bound
arpl
pop
rclb
es
int3
mov
popa
sarl
pop
jle
cli
fsubr
jns
gs
or
sbb
mov
jecxz
jns
xorb
into
add
rclb
mov
in
mov
dec
xor
jne
push
and
daa
fwait
fwait
xchg
jb
push
xchg
aas
nop
xchg
push
push
mov
push
in
xchg
inc
mov
cli
inc
inc
int3
outsl
add
sub
xchg
bsr
push
adc
xchg
pushf
test
push
pop
push
std
scas
inc
sub
pop
jge
in
xchg
rcl
dec
repz
in
repnz
xor
mov
xor
push
ret
fstp
pusha
shrl
pop
mov
xlat
div
aam
cltd
fstps
sahf
std
inc
fnstenv
stc
out
sub
stc
add
adc
sbb
push
sti
icebp
lock
loopne
mov
add
pop
cs
cld
push
sub
jnp
cmp
and
test
or
mov
pop
mov
jp
mov
dec
cltd
push
xchg
arpl
out
sbbl
xchg
inc
lret
push
pop
sbb
push
and
stos
or
popf
pop
fidivl
xchg
mov
test
test
inc
xor
pusha
das
inc
pop
inc
pop
repz
xor
and
push
push
ret
enter
cmp
aaa
mov
mov
xlat
mov
adc
lret
stos
and
mov
pushf
push
push
mov
cld
aaa
test
in
adc
lcall
mov
adc
push
and
movsb
push
insb
xor
xchg
sub
ret
out
and
and
jl
xchg
add
xor
fisubs
inc
out
dec
ds
sbb
xchg
dec
mov
xchg
mov
pop
pop
sti
and
jmp
outsl
les
dec
das
xor
xor
mov
jecxz
sub
add
out
xchg
mov
nop
in
dec
rcrb
dec
fsub
inc
cmp
jmp
outsl
iret
or
push
inc
cmc
push
pop
mov
push
shlb
outsb
xor
xchg
je
fsts
xchg
sbb
int
addr16
add
arpl
sarl
icebp
xor
xchg
mov
jbe
inc
add
leave
cmp
es
loope
jge
rcr
mov
mov
xchg
scas
jle
les
xlat
push
push
mov
mov
push
mov
rol
lret
mov
data16
aam
in
notl
jno
je
or
push
cli
sbb
push
stos
aas
jbe
lea
sub
jl
mov
arpl
fisttps
cmpsb
gs
into
inc
and
adc
gs
fyl2xp1
push
or
aas
lret
mov
mov
pop
and
test
outsl
xchg
ljmp
pop
add
dec
lret
lds
arpl
nop
mov
sub
sub
xchg
cmp
jg
inc
inc
mov
pop
insb
addl
sub
mov
lds
das
push
sub
loop
cmp
or
shlb
mov
xor
lcall
jbe
mov
mov
push
nop
mov
out
movl
mov
and
test
xor
and
xor
fcmovbe
xchg
dec
stc
mov
mov
mov
out
scas
mov
aas
fs
push
movsl
cmp
popa
adc
out
inc
das
loop
mov
es
pop
mov
stos
mov
jp
xor
xchg
adc
arpl
push
lahf
aad
loope
into
add
sbb
or
in
inc
lahf
addl
and
pop
jnp
sbb
xchg
adc
mov
test
aas
popf
xor
push
and
rol
adc
sbb
insl
leave
rcll
xchg
inc
shll
out
dec
scas
cmp
mov
dec
push
xchg
pushf
xchg
push
push
cwtl
xor
push
int3
pushf
push
sti
add
lods
push
out
mov
mov
jne
in
sarl
jnp
mov
mov
dec
sbb
sub
mov
es
sahf
lds
movsl
xlat
insb
je
dec
jns
add
adc
mov
xchg
sbb
xchg
test
popf
dec
movsl
jns
sbb
out
xor
sbb
into
xchg
cmp
pop
fbstp
imul
ret
pushf
push
push
into
int3
push
inc
jle
jno
pusha
cmp
or
cmp
fs
jno
cld
shlb
loopne
sbb
cmpsl
ret
movnti
mov
xor
adc
stos
adc
pusha
push
int
sbb
cmp
jg
cmpsl
jbe
inc
xor
mov
ror
aad
out
adc
loop
push
and
out
cmpl
jnp
jo
cli
scas
inc
cmp
adc
mov
mov
xor
dec
outsl
push
sahf
mov
cmpsl
inc
lahf
ret
mov
pop
ljmp
nop
or
out
dec
ja
push
in
inc
and
jmp
test
push
fcmove
fstpl
out
push
xchg
subl
or
cmpsb
adcl
lea
in
pop
ret
inc
push
mov
ret
ss
xchg
popa
push
fbstp
nop
sub
push
cs
cmp
decb
jbe
fwait
arpl
ret
sub
mov
stc
mov
sbb
jae
xchg
pushf
lea
xor
les
jmp
movsl
sbb
inc
repnz
push
ja
mov
mov
cld
int
outsb
pop
pusha
push
jns
call
mov
cmp
xchg
sub
stos
sub
mov
xor
rcrb
mov
popf
xor
sbb
sbb
mov
pop
mov
sahf
mov
repz
das
mov
fmull
mov
scas
mov
das
cli
xor
data16
mov
adc
xor
aas
loopne
inc
leave
cli
push
or
adc
pop
push
cld
adc
and
bswap
jmp
mov
mov
pop
and
aas
mov
lret
repz
xorl
es
cltd
stos
fs
cmc
popa
or
fcoml
lcall
dec
scas
test
add
and
movsb
or
pop
scas
sub
in
mov
inc
and
pusha
ds
pop
fisubrs
inc
mov
andb
sub
in
xor
leave
loopne
push
add
lret
push
sub
adc
aaa
fists
mov
loope
adc
repnz
punpcklwd
or
mov
dec
inc
or
fldln2
pop
jmp
push
ljmp
mov
dec
inc
scas
dec
les
inc
sub
scas
stos
add
into
arpl
mov
add
mov
cmc
movb
mov
cld
mov
pusha
outsb
stos
jg
mov
or
sub
mov
xchg
rcr
and
out
std
adc
sbb
pusha
dec
pop
outsb
test
mov
std
mov
call
and
pop
shlb
jg
push
nop
fdivl
pop
out
mov
pop
fidivrs
or
ss
inc
inc
fisttpll
fadds
js
xchg
loop
pop
ret
add
int3
icebp
out
mov
movsl
int3
jnp
sbb
jle
out
int
or
sbb
ljmp
and
push
and
es
into
and
jbe
mov
mov
add
ss
pushf
shll
lods
jne
rol
mov
adc
lock
inc
adc
lret
inc
mov
pop
cmp
jmp
xchg
popf
mov
or
xor
add
adc
inc
pop
mov
test
jae
pop
fs
adc
pop
inc
ds
xor
sub
mov
dec
sarl
loope
mov
xor
andb
bnd
les
rolb
mov
dec
cvtps2pd
and
mov
mov
repnz
sahf
dec
inc
outsl
add
repz
mov
dec
data16
sbb
in
stos
inc
int3
iret
push
hlt
addr16
add
cmp
loopne
pop
arpl
dec
push
cmpsb
stc
or
outsl
call
sbb
cmp
mov
xor
mov
add
cwtl
sbb
insb
sbb
fdivs
xor
ja
jg
add
add
call
je
jne
cli
mov
test
sub
jbe
add
jnp
dec
mov
jge
test
jp
sahf
mov
sub
mov
sti
int
in
push
sub
jecxz
xchg
ljmp
sbb
adc
sub
sbb
sub
iret
and
inc
push
loopne
mov
xor
cmpb
bswap
int3
and
dec
call
xchg
cmp
and
add
add
jp
movsl
enter
sahf
dec
jg
mov
aad
mov
cli
dec
arpl
pop
xor
popf
push
push
movsl
pop
es
jo
test
mov
inc
out
ljmp
jle
test
mov
dec
mov
lods
mov
fldenv
fs
cmp
sti
pminub
cli
push
mov
inc
cltd
mov
pop
mov
out
or
xor
andb
pushf
or
idiv
idivb
or
les
add
aad
xor
xchg
xor
ja
int
dec
shl
inc
inc
mov
inc
mov
ds
outsl
hlt
inc
sbb
ds
stc
loope
addr16
mov
adc
cli
or
daa
or
cltd
xor
pop
fimull
jns
push
push
xor
push
xchg
xchg
mov
popa
push
sub
pop
iret
inc
pop
movsl
es
stos
mov
push
sub
jne
xor
stc
mov
adc
out
movl
outsl
gs
out
fsubl
sub
fildl
loope
cmp
bound
adcl
mov
lret
cmpsb
jnp
and
sahf
pop
stos
je
mov
jmp
in
scas
jno
das
scas
inc
cwtl
loop
pop
xchg
arpl
inc
add
sahf
imulb
xor
xor
aad
movswl
mov
out
jp
dec
pop
test
insl
lahf
lret
sub
pop
mov
mov
jne
dec
mov
inc
cmp
fwait
sbb
add
xchg
ss
subl
adcl
in
je
roll
arpl
xchg
js
cmp
mov
iret
adc
pushf
cmp
cltd
clc
loopne
ret
mov
push
mov
add
aas
jb
and
dec
jno
enter
fsubrs
popa
sub
aas
or
adc
dec
mov
xor
test
jae
jb
int
in
inc
inc
aad
dec
rcrb
mov
out
mov
mov
orb
xchg
sahf
bound
adc
in
sbb
pop
movsl
push
adc
mul
movsb
test
leave
mov
loopne
ficompl
inc
sub
popf
add
outsl
mov
mov
xchg
dec
ret
adc
mov
outsl
stos
xlat
or
or
jno
fsubrl
pop
pop
dec
out
in
or
iret
in
jnp
pop
ds
fistpll
daa
xchg
adc
nop
stc
out
pushf
pop
inc
insl
cmp
sbb
es
lret
pop
mov
das
test
rcrb
icebp
xor
adc
sub
loopne
inc
mov
lds
push
inc
push
pop
push
pop
sub
mov
cmp
dec
movsb
shlb
push
push
push
pop
push
inc
sti
push
inc
mov
adc
xchg
mov
mov
or
into
jmp
rcrb
sub
xor
push
mov
mov
imul
fisubrl
add
fiadds
divb
cmovns
jne
xor
and
adc
imul
je
and
fldenv
inc
pop
cmp
lret
rep
mov
sub
insl
push
lret
in
mov
je
mov
imul
rolb
push
mov
aad
mov
add
mov
mov
mov
sub
dec
or
xor
xchg
pop
in
cmp
sub
out
out
test
jne
in
mov
data16
out
and
notl
loopne
aas
pop
push
movd
jge
mov
or
or
iret
mov
adc
cmp
loopne
xor
test
jl
pusha
add
xchg
sub
xor
decl
movb
xor
vmovsd
dec
roll
dec
or
movsb
jnp
fcmovnb
lods
push
cltd
int3
icebp
xchg
mov
mov
lcall
jo
dec
inc
aas
icebp
or
arpl
aaa
push
dec
rolb
dec
and
lcall
inc
in
insb
lods
in
xor
add
inc
mov
enter
xchg
pop
pop
out
dec
movsb
adc
sub
js
pop
repnz
es
ds
jae
es
pop
sar
and
imul
shll
inc
daa
shlb
and
jbe
xchg
fwait
jbe
push
shlb
ja
daa
xor
mov
and
adc
nop
and
lock
adc
mov
push
mov
mov
adc
sub
pop
imul
lret
cmp
adc
mov
jne
loopne
fwait
mov
mov
lret
es
jl
cmp
stos
mov
clc
push
leave
push
pop
pop
pop
xor
lods
or
es
stos
scas
jge
cmc
dec
and
lods
pop
add
jno
xchg
enter
and
sarl
cli
subl
jmp
inc
xor
mov
mov
sbb
pop
jns
mov
fisubrs
mov
mov
repnz
lea
inc
cmpsb
cld
inc
jnp
mov
lods
jmp
aas
shr
dec
push
inc
push
xchg
bound
xor
push
dec
sbb
std
mov
mov
sub
lret
and
sub
mov
or
jle
sbb
sub
push
pusha
jnp
mov
pop
stos
mov
push
mov
xchg
hlt
ret
nop
cmp
sub
or
and
aaa
jl
dec
in
loope
fiadds
das
loope
loopne
lock
jno
push
push
fiadds
mov
inc
push
mov
xor
push
mov
ret
outsl
lret
jns
gs
mov
repnz
pop
mov
pusha
in
jecxz
adc
bound
mov
ficomps
popf
mov
sub
add
sub
push
mov
data16
mov
jp
imul
jns,pt
sarl
sub
fldcw
sub
jl
in
add
and
xchg
sub
add
add
mov
cltd
loopne
cmc
mov
dec
iret
and
push
loop
push
test
loope
cmpsb
outsb
push
jb
lods
mov
add
cmc
jl
add
rcrl
push
mov
add
cmc
or
cmp
cmpsl
test
fsubrs
lret
xor
inc
mov
jnp
cmp
adc
idiv
leave
and
add
mov
pop
std
push
pop
mov
jno
dec
repz
add
dec
mov
das
ja
loopne
roll
fmuls
dec
push
cmpsl
lret
sarl
fmull
jae
jnp
iret
mov
cmp
lcall
sbb
fstpl
iret
sub
adc
pop
pop
iret
mov
jmp
stc
mov
aaa
movsl
pushf
and
cs
push
stc
jo
rolb
sbb
rcl
push
mov
fucomi
subb
inc
insl
or
sbb
icebp
icebp
cmp
data16
xor
aad
pusha
jecxz
stos
push
into
fstpl
jle
jo
and
fists
sub
sbb
cmpsl
push
fmuls
push
dec
faddl
mov
aas
xorb
pop
jb
inc
pop
hlt
mov
push
mov
mov
lock
cmp
cwtl
nop
or
push
scas
in
das
mov
mov
pusha
mov
pop
movsb
adc
jnp
and
mov
mov
xchg
jo
mov
out
enter
insb
jg
push
mov
jecxz
in
dec
mov
call
add
std
enter
rcrb
ja
and
mov
xor
fwait
int3
sub
lret
lea
mov
and
push
xchg
scas
cmp
fwait
mov
stos
cmp
sub
push
xor
push
mov
pop
pop
pop
xor
jns
insl
inc
xacquire
aam
and
sub
cmc
cld
push
or
in
dec
aas
pop
dec
mov
lret
lea
ds
jecxz
xorb
pusha
dec
push
inc
stos
inc
inc
das
mov
imul
out
ret
jo
scas
int3
test
jp
adc
sbb
inc
jb
adc
xchg
pop
daa
xchg
lods
loop
mov
test
push
test
mov
gs
orb
sbb
mov
mov
out
cltd
rcl
xor
cmp
mov
pop
inc
sub
stc
pcmpgtw
cmp
fwait
addr16
sbb
in
cmpsb
mov
pop
lcall
mov
les
cld
pop
add
fsubl
cmp
ret
ret
push
sbb
pop
test
mov
or
nop
icebp
je
stc
mov
pop
int
dec
cmp
movsl
jp
ret
or
das
xor
push
test
mov
lret
push
lea
pusha
dec
rorb
cmp
mov
xchg
mov
push
inc
sub
mov
out
sbb
mov
add
mov
push
add
cmp
pop
cs
fs
dec
pop
xlat
dec
cmpb
mov
cmpb
inc
jmp
or
mov
inc
out
outsl
dec
lock
add
out
ss
mov
add
clc
push
lcall
jecxz
sbb
cmp
pop
cmp
add
sub
in
cmpsb
xchg
jmp
dec
jle
leave
push
mov
sub
bound
aad
lock
int
add
jl
push
push
mov
cmp
adc
adc
pusha
xchg
xor
pop
nop
aad
sbb
das
aad
sti
gs
dec
test
mov
mov
xchg
ds
cmc
js
das
shrb
aaa
pop
cltd
cld
dec
lcall
jge
mov
jle
xor
js
dec
sub
std
xlat
outsl
insl
jge
push
icebp
push
xchg
dec
fimull
or
xchg
sub
xor
xor
fistpll
pop
xchg
push
dec
mov
in
stos
or
add
sub
fs
lods
js
mov
push
push
int3
sub
sbb
jb
jnp
mov
push
sahf
jg
arpl
pop
mov
mov
shlb
lret
mov
rcrb
popa
bound
jo
adc
xchg
adc
pop
cmp
push
inc
xchg
cwtl
cmpsl
inc
vmread
mov
test
iret
test
hlt
adc
pop
jne
inc
sbb
or
int
rolb
push
lea
or
push
fstpt
lock
andl
pop
nop
fldt
jns
jecxz
pusha
repnz
hlt
push
stc
push
sub
push
sub
fists
sti
imul
clc
pusha
adcl
mov
add
pop
pusha
mov
jmp
jne
clc
inc
add
mov
ret
add
jmp
pop
dec
inc
sub
and
jg
jb
cmp
popf
xor
add
mov
flds
xchg
push
sub
aad
push
add
ss
mov
test
lahf
jo
icebp
scas
imul
pusha
gs
sbb
sub
sub
inc
test
fcmovb
push
mov
orb
pop
jmp
jge
xor
in
push
lock
pop
xor
sbb
or
lds
test
popa
loopne
addr16
test
insl
lock
rcr
insl
jl
mov
push
mov
fldl
jne
pop
pop
cmc
rorl
ret
adc
xorl
adc
xchg
mov
add
int3
push
shll
in
mov
and
or
jl
shrb
lock
outsl
imul
push
jge
int3
nop
fistpll
arpl
inc
icebp
lcall
arpl
loop
ret
xchg
pushf
jmp
cld
pop
add
fildll
jmp
adc
clc
mov
mov
xchg
inc
inc
or
loope
fwait
movsl
popf
rorb
lods
lds
and
pop
jl
ss
addl
push
jecxz
cmp
test
dec
arpl
repnz
out
sub
cmp
testb
push
aaa
rorb
add
es
mov
xchg
sub
lods
repnz
cwtl
lods
rclb
inc
pop
sbb
mov
push
out
lods
push
js
dec
ror
pop
bound
add
imul
pop
in
mov
adcl
push
inc
sub
or
out
rcrl
pop
and
xor
or
push
fdivrl
das
mov
arpl
js
push
movsb
sahf
pop
in
scas
mov
insl
aas
aad
mov
out
fistpll
jl
jge
sub
cmp
orl
ret
ror
setle
daa
mov
push
out
js
sub
arpl
push
dec
stos
xor
test
xor
test
and
xor
outsb
aas
cmp
aad
mov
cmc
cld
out
mov
inc
mov
cmp
sub
out
mov
pop
fmull
lods
arpl
jg
jno
test
and
mov
hlt
gs
dec
sub
and
lods
mov
bnd
sbbb
xor
push
out
and
jns
gs
mov
or
add
xchg
hlt
mov
adcl
jge
inc
mov
fldenv
mov
lcall
mov
shr
mov
clc
das
stos
sub
jl
out
add
aam
out
xor
jmp
test
lret
push
inc
sbb
inc
mov
int3
mov
jp
fadds
fildl
inc
cld
rcrb
out
cmc
clc
mov
xchg
jnp
pop
jae
lds
dec
or
ja
xlat
mov
dec
aam
pop
add
cmp
inc
push
jecxz
addr16
add
insb
sbb
xorb
data16
adc
xchg
nop
pop
popa
and
xchg
push
rcl
jle
adc
cli
cli
lret
jno
out
xchg
and
cmc
movsb
int
xor
mov
xor
imul
jge
jp
sbb
inc
jbe
addr16
mov
in
or
xchg
push
sahf
rclb
or
pop
stos
aas
sub
jge
inc
fdivrp
repz
insl
sbb
lret
dec
mov
cwtl
fmul
popa
mov
out
sti
mov
add
cmp
mov
or
mov
mov
xchg
xchg
notb
or
stc
jmp
std
mov
orb
scas
and
mov
inc
in
sbb
pushf
push
neg
lret
popf
gs
fidivrs
mov
inc
hlt
int
aaa
fists
or
addr16
dec
aad
sub
mov
insb
xor
sarb
jl
cltd
mov
out
mov
pop
sahf
lret
mov
not
mov
push
and
or
mov
lea
aam
or
icebp
cmc
fs
outsl
mov
pop
sti
insl
ret
dec
rorb
cmp
ret
push
arpl
pop
jmp
in
jb
cld
adc
pop
push
pop
lds
fimuls
hlt
int3
add
mov
nop
fdiv
shr
sbb
push
in
aad
inc
jae
aam
sarl
jg
or
fcomip
dec
jae
push
jge
rolb
sub
lea
add
call
testb
test
and
xor
add
filds
xlat
xor
xchg
jne
roll
mov
sub
inc
lods
dec
cmpsb
sbb
mov
cmp
pop
ret
aas
xor
pushf
sub
pop
mov
dec
in
dec
sbb
movsb
test
push
mov
cmp
mov
lret
ljmp
fcmovu
mulb
rcr
loope
arpl
sbb
fidivrl
out
pop
and
inc
pop
adc
sbb
mov
movsl
orb
mov
add
cmc
cmp
ret
push
cmpsl
inc
sbb
ja
adc
das
sub
ja
mov
das
jo
das
and
imul
mov
int3
and
in
lock
orb
popa
cmp
loope
nop
mov
subb
sbb
sub
xchg
jecxz
aas
insl
fs
jae
bound
cmpb
into
cld
int
sbb
data16
mov
es
and
lock
nop
adc
std
sub
shrl
lock
mov
loope
mov
sub
xorl
sbb
sub
mov
mov
add
js
fisubs
dec
add
cli
into
test
orb
mov
xor
inc
push
popf
repz
stos
mov
mov
and
gs
idivl
cmc
sub
mov
cwtl
pop
lods
dec
pop
dec
dec
lea
fildl
in
pusha
push
dec
lcall
aaa
aam
sub
repnz
jae,pt
mov
inc
sti
fiadds
dec
xchg
lcall
cmp
mov
push
cmpsb
ljmp
dec
in
xchg
or
sbb
inc
fcmovnbe
fdivrs
push
mov
push
frstor
adc
loop
addr16
mov
pushf
sub
cmp
jne
pop
sbb
xchg
pop
out
xchg
push
adc
jge
aaa
hlt
sbb
lods
pop
adc
pop
mov
mov
xchg
inc
repnz
xor
divl
hlt
jno
push
push
gs
sub
dec
adc
mov
popf
outsb
jnp
mov
inc
in
ss
jnp
shrl
push
jmp
orl
ret
aad
test
dec
push
mov
xchg
fidivrs
test
mov
mov
insb
sbb
inc
cmp
or
ljmp
sbb
mov
andb
adc
and
and
jmp
ljmp
arpl
mov
test
jmp
adc
adc
mov
mov
sbb
dec
loope
insb
popf
das
test
into
enter
jmp
ja
popa
loope
and
std
xor
fwait
cltd
jne
xchg
or
inc
push
lret
dec
push
bswap
cmpsb
push
repz
mov
push
sub
scas
mov
nop
test
test
daa
jno
sub
xchg
cltd
inc
mov
push
cs
cmp
movsb
in
xor
imul
ss
add
in
push
lahf
in
in
xor
movsb
ficoml
or
cmp
xlat
or
in
dec
mov
das
les
ljmp
rcl
add
sub
add
shrb
pop
mov
dec
clc
popa
rcll
jmp
cmp
xchg
sbb
xchg
xchg
jne
mov
lods
sub
aas
and
inc
dec
sbb
add
cmp
cmp
lcall
setge
repz
sbb
insl
and
int
call
dec
mov
loopne
xchg
sbb
cmp
outsl
das
push
sub
jmp
push
and
xor
cmpsb
mov
fs
push
lods
subl
ret
pminub
cltd
add
mov
in
test
inc
xchg
pop
or
sbb
add
nop
add
xor
cmp
sbbb
push
into
mov
shll
inc
jl
cmp
jle
repnz
mov
mov
pop
xchg
mov
popl
test
add
mov
mov
and
fnstenv
jl
sbb
in
push
aam
outsl
adc
push
mov
rcrb
mov
es
test
sbb
cmpb
and
iret
mov
mov
mov
ljmp
sbb
mov
push
in
pop
ret
insl
or
cmpsl
insb
mov
imull
mov
pop
mov
xor
xor
mov
sbb
stos
cmp
and
ja
jmp
mov
jae
sub
jge
outsl
cli
test
les
dec
fstpl
sbb
aaa
outsb
clc
lea
lods
sbb
xor
pop
movsb
cmp
xchg
cmp
pusha
mov
mov
iret
xchg
dec
rclb
mov
push
lea
and
test
sub
adc
lret
js
inc
in
cmp
xchg
aas
lahf
pop
mov
out
jecxz,pt
mov
jp
mov
dec
xor
sub
inc
les
inc
dec
adc
mov
mov
inc
or
push
cmc
push
lea
mov
lock
nop
fmul
sbb
add
cmc
lds
mov
rol
mov
adc
xchg
cmp
jno
mov
add
repz
mov
xchg
add
mov
inc
lods
fbld
ret
movsl
jne
fs
pop
lock
lods
aaa
adc
lcall
pop
mov
pop
sti
in
jne
cmp
cmp
cmp
xchg
push
xor
adc
mov
jecxz
js
dec
push
in
idivb
icebp
mov
jge
jnp
cltd
jo
mov
in
ret
xchg
adcl
ss
aaa
rol
daa
xchg
lret
lock
outsl
pop
test
xchg
sub
sbb
sbbb
mov
dec
jb
xchg
fidivs
or
inc
jo
xchg
outsl
mov
pop
or
mov
fucom
in
mov
into
out
std
arpl
rorl
push
cmp
pop
mov
pop
sub
imul
jl
js
loopne
fisubrs
gs
cs
or
pop
and
mov
inc
lahf
sti
insb
sti
inc
jl
in
mov
addb
ret
push
jb
inc
lcall
cltd
fidivrl
out
test
sub
push
fiadds
add
shrl
rcrb
cmp
mov
sub
adc
aaa
pop
nop
loop
stos
lods
ljmp
fidivrs
daa
mov
test
ss
jb
cmp
sti
aas
loope
into
mov
fdivrs
fimull
inc
ljmp
mov
fsts
scas
jle
les
lock
mov
hlt
aad
mov
push
dec
orl
daa
mov
xorb
rol
pop
std
mov
inc
sbb
dec
pop
and
push
mov
lcall
cli
ljmp
js
sub
in
aad
and
cmp
push
jle
pop
fmuls
ret
ds
lds
pop
cmp
adc
jo
dec
stos
mov
dec
jns
jl
adc
sub
pushf
and
les
mov
js
fwait
pop
les
test
add
arpl
jmp
out
mov
sub
enter
cmp
iret
fdiv
in
inc
aam
ss
aam
lahf
pop
fldenv
rorb
fsubl
mov
jmp
jne
and
cmp
jnp
dec
in
xor
dec
add
or
lahf
loope
jp
movsl
mov
loop
adc
roll
jl
out
sub
jmp
xchg
insl
push
insb
inc
pop
mov
pop
mov
sub
inc
aam
add
test
xor
xchg
inc
in
icebp
sub
clc
ret
pop
and
xor
push
jns
push
dec
pop
idivb
mov
test
jg
ficomps
outsl
inc
aam
movsb
das
insl
sub
out
lahf
pop
cmpl
shr
scas
fsubrs
jnp
shrl
cmp
ficompl
lcall
sbb
scas
mov
lcall
push
negl
std
jecxz
or
in
mov
fsubl
xlat
sub
mov
add
loopne
sbb
dec
call
or
nop
scas
mov
pop
dec
aaa
test
or
lcall
ret
out
push
xchg
lret
xchg
ret
lret
push
mov
xorl
xlat
stos
adc
pop
fld
or
call
jg,pn
shl
fxch
mov
loop
aaa
push
pop
dec
shl
movsl
cmp
testb
or
daa
adc
sbb
cli
mov
pop
sbb
in
es
adc
shl
js
pop
repz
roll
scas
int3
lahf
outsl
cmpsl
push
mov
pop
push
xchg
in
inc
pop
dec
push
insb
push
xlat
jge
sub
ret
adc
idivb
leave
mov
fistl
pop
sub
pushf
dec
ljmp
push
jp
cmp
test
jns
mov
push
dec
dec
and
out
sbb
fcoml
jae
inc
pop
pop
mov
leave
push
lahf
mov
sub
imul
stos
mov
sbb
out
pop
rep
mov
xchg
jns
adc
fstpl
insl
cmp
divl
mov
inc
xor
aad
mov
sub
std
imul
stc
push
xchg
mov
cmp
ljmp
push
mov
mov
shl
fadds
sbb
inc
iret
jle
mov
inc
pop
shlb
mov
ljmp
cmp
outsb
mov
cs
pusha
mov
in
loopne
popf
mov
lods
xchg
lahf
add
ja
cld
fdivs
js
rolb
inc
ficomps
ss
xor
inc
jo
adc
jo
pop
push
xchg
mov
outsb
cmc
pop
cmpsb
sbb
push
push
dec
or
mov
adc
jge
push
fmuls
loopne
dec
sahf
mov
ret
jae
xchg
test
xor
or
test
cwtl
pop
out
fbld
mov
gs
push
or
popa
cmc
pop
mov
pop
fidivs
push
insl
jns
add
dec
or
aam
gs
arpl
aas
sub
loopne
pop
add
int3
movsl
pop
leave
fcmovnu
mov
push
mov
aam
jnp
jl
mov
mov
data16
or
mov
addr16
shrb
data16
push
xchg
sub
mov
rorl
stos
sbbl
xrelease
cli
movsb
mov
xchg
cli
sub
cltd
sbb
gs
jae
in
ja
mov
nop
inc
loopne
jbe
xchg
dec
daa
das
xlat
fnsave
in
add
push
outsl
loopne
mov
xchg
mov
and
push
pop
into
and
pop
int3
insb
and
xorl
scas
mov
add
adc
or
xor
mov
outsl
mov
fisubrl
fistpl
fwait
pop
aas
int3
mov
aam
test
inc
popf
int3
popa
movsl
int3
int
pop
and
popf
cli
or
mov
lcall
lahf
mov
mov
in
dec
mov
or
pop
xchg
rcrl
test
movsl
aaa
cmp
push
test
scas
mov
inc
jno
jg
xor
pop
test
data16
cltd
jnp
test
push
sbb
add
mov
pusha
xchg
mov
fstpl
mov
xchg
aaa
mov
or
lods
negb
dec
les
bound
pop
imul
iret
push
add
dec
cwtl
inc
or
div
adc
and
cmp
sahf
xor
jl
and
cmc
popf
repnz
xchg
mov
repnz
repz
push
mov
cmp
in
in
daa
fidivs
pop
pop
mov
insl
jno
xor
or
sti
fldenv
loop
ja
out
xlat
mov
adc
ja
mov
cltd
ds
out
sbb
test
push
test
in
out
jge
in
je
adc
repnz
pop
xlat
lds
or
mov
sbb
fisttpl
cmc
scas
mov
daa
jmp
sbb
test
adc
push
call
sub
les
popf
push
pop
xor
clc
jmp
ret
sub
and
and
lret
dec
dec
pop
jb
in
xor
push
or
in
les
mov
test
jb
adc
std
push
mov
lods
xchg
xchg
pop
imul
adc
out
lds
repnz
and
adc
dec
into
adc
sti
mov
push
mov
push
adc
inc
push
sub
jle
jo
or
mov
or
js
jg
scas
and
sub
fisubs
pop
je
leave
sub
mov
push
sub
mov
ret
out
ds
lcall
movb
or
lods
fcmovne
or
lret
repnz
pop
add
jb
fdivrl
push
into
adc
ds
pop
dec
popf
sbb
inc
sbb
stos
je
mov
mov
jge
jge
jbe
lret
inc
add
imul
or
js
ret
scas
lahf
clc
aam
sar
fbld
add
mov
repnz
int
mov
sub
lret
inc
sarl
aam
add
xor
add
push
cmpsb
repnz
into
sbb
leave
shlb
sub
xor
or
popf
lods
fsubl
jmp
or
es
and
push
cmp
js
ficompl
jp
jl
loope
gs
es
push
outsb
out
mov
pop
fldt
cld
or
movb
xchg
mov
lcall
insb
mov
clc
inc
mov
jo
push
clc
push
pop
mov
xorl
in
inc
jnp
mov
or
imul
fidivrl
mov
imul
push
add
lret
imul
hlt
fwait
inc
pop
cmp
dec
adc
in
int3
pop
in
push
enter
adc
jbe
sub
mov
fimuls
dec
f2xm1
lea
fistps
not
push
adc
and
adc
and
xlat
mov
xor
mov
bndstx
insb
popf
dec
pop
cmp
cltd
mulb
adc
aad
je
ficoms
pop
inc
in
sub
loope
adc
sbb
pop
outsl
pop
lret
sahf
cmp
xchg
jecxz
lds
jnp
mov
pop
rorb
cltd
in
cld
and
push
mov
jmp
psubw
shrb
in
xchg
and
test
pop
hlt
cmp
dec
push
insl
push
test
mov
and
orb
notl
mov
out
and
sbb
pop
jmp
cmp
pop
mov
bound
fildl
sbb
sbb
jle
adc
sbb
dec
rorl
in
jmp
rolb
jp
sarb
cmp
push
mov
sarl
and
hlt
mov
push
sbbb
dec
inc
add
adc
inc
mov
xor
psllq
mov
enter
mov
repnz
mov
jg
or
cltd
es
sub
add
adc
shlb
jb
lea
adc
sub
pop
and
jns
cld
xchg
lds
jecxz
cwtl
and
lahf
adc
jno
jns
cmpsb
jne
pop
js
fldl
cmpsl
jb
loope
and
lods
iret
sbb
and
movsw
pop
ja
fdivrs
jp
fsubrs
inc
fwait
xlat
je
movsl
je
test
pop
add
pop
or
imul
inc
mov
push
das
mov
jae
add
add
jne
pushf
in
outsb
sub
adc
mov
xor
mov
imul
cmc
shrb
movb
test
dec
ss
mov
insb
cmp
daa
xchg
add
inc
lods
flds
jno
repnz
adc
das
lahf
loop
loope
mov
test
ret
out
stos
jp
sub
fldt
std
test
push
call
call
nop
aas
fsts
push
cmc
adc
pop
cld
pop
bound
cmc
out
push
dec
add
mov
inc
xor
in
and
aaa
mov
sub
xor
push
test
int3
cmp
pop
dec
insl
or
jae
jae
aad
inc
mov
jbe
gs
out
adc
cli
fnstsw
sbb
movsl
cmp
fidivrl
mov
das
dec
clc
lock
in
and
xchg
xchg
test
mull
and
jno
andl
pop
lods
add
cmp
cltd
je
push
push
movl
movsb
aam
push
and
jbe
push
mov
scas
jne
pop
cmpsb
dec
push
mov
lahf
dec
xchg
ret
insb
in
fisttpl
sbb
and
lods
popa
xchg
xchg
js
xor
adc
add
and
pop
std
adc
ljmp
jno
mulb
push
push
push
xor
cmp
mov
aad
popf
and
fldcw
cwtl
or
and
cmpsl
xchg
xchg
ja
aas
mov
sbb
cmpsb
das
fidivl
push
ds
in
das
in
push
add
insb
imul
scas
xchg
xor
mov
fldcw
mov
mov
stos
enter
or
xchg
push
leave
inc
push
int
dec
push
repnz
push
cmp
int3
aad
loop
and
xchg
jmp
sub
mov
scas
adc
mov
pop
jg
sti
scas
fbstp
clc
mov
loope
jmp
adc
jmp
popa
push
sbb
divb
dec
fwait
add
sbb
mov
loopne
inc
mov
subb
js
ss
xor
cmp
fadds
loopne
jno
iret
fsts
add
hlt
jnp
flds
aaa
cmp
jnp
cmpl
mov
mov
mov
sub
dec
lods
cmp
lock
sbb
scas
xchg
mov
ror
cld
adc
repz
ljmp
pop
jno
add
jmp
push
xchg
push
test
adc
and
rcr
cwtl
inc
out
imul
divb
push
aaa
jnp
ds
and
push
fsubr
mov
mov
repnz
pop
push
or
cli
shr
sbb
int3
sub
jo
inc
xchg
outsl
xchg
add
orl
es
jnp
or
dec
out
and
pop
dec
push
mov
pop
out
arpl
cld
adc
call
test
loope
sub
inc
mov
daa
pop
inc
fcoml
ja
arpl
jns
loop
xchg
pop
mov
jg
cmp
sub
push
and
pop
mov
addl
shlb
imul
rcrl
je
mov
loope
push
pushl
sahf
xor
inc
xchg
pop
mov
imul
pop
arpl
cmp
call
stc
test
jle
adc
out
jmp
lods
jb
push
cwtl
jmp
xchg
out
iret
mov
push
or
ds
cmp
scas
fldl
std
xchg
pop
sbb
xor
adc
je
sbb
adc
adc
push
pop
jnp
mov
push
push
cmp
sbb
dec
lods
out
xor
lcall
push
sub
mov
aam
sahf
cmp
dec
cmp
push
outsl
pop
push
push
mov
sti
inc
dec
bound
das
cltd
sub
sbb
data16
scas
pop
jne
nop
sbb
cmpsl
cmp
std
xchg
xchg
adcb
imul
dec
cmc
sub
jae
push
add
fisttpll
or
xchg
xor
call
and
and
xor
insb
lcall
pop
bound
das
sub
adc
or
push
inc
pop
jge
lods
push
push
jno
pop
push
sbb
sbb
fxch
cmp
ret
push
movsb
add
in
add
mov
mov
adc
push
mov
xchg
pop
test
sbb
in
lret
sbb
adc
jle
and
adc
shl
es
xlat
mov
psubw
out
pop
mov
outsb
cmp
sub
jmp
cltd
sub
mov
sbb
or
jl
cs
rol
loop
jl
inc
xor
pop
aaa
fildll
pop
and
pushf
push
sub
sub
out
enter
stc
pop
jae
scas
xor
mov
das
fbstp
scas
adc
xchg
inc
dec
mov
cmp
adcl
pop
mov
jne
sbb
repnz
loop
mov
outsb
stos
mov
inc
sbb
adc
inc
and
jp
or
loope
movsl
dec
shlb
inc
fnstsw
shl
jge
scas
inc
leave
cmpsl
xchg
mov
pop
cmpsl
xchg
jg
mov
dec
out
pushf
imul
sbbb
pop
mov
mov
insb
push
scas
jmp
scas
jg
rclb
fimuls
mov
cld
add
xchg
fsubrl
mov
lds
dec
jae
cwtl
push
sti
movsl
mov
mov
mov
mov
icebp
mov
out
adc
lods
xor
pushf
xor
out
sbb
add
mov
movsl
sbb
aaa
mov
adc
xor
rorb
pop
mov
ret
testb
data16
fstl
test
pop
iret
fs
pushf
ret
js
fs
push
bound
push
fdivs
fwait
ret
xchg
xchg
or
dec
inc
bsr
cmp
scas
lods
mov
push
in
jo
repnz
xchg
jno
xchg
cld
imul
mov
stc
inc
push
or
das
dec
xchg
arpl
test
inc
bound
push
ja
and
mov
aaa
xlat
rcrl
idivb
imul
imul
sti
mov
lret
fstpl
in
push
in
mov
adc
mov
xchg
mov
mov
fidivl
insb
xor
jmp
fldcw
test
mov
lret
add
xchg
pushf
mov
push
iret
rcrl
cwtl
mov
mov
push
cld
out
push
lds
ret
xchg
jbe
subb
mov
xor
sbb
hlt
xor
dec
insl
ds
jp
sahf
das
test
cmp
sbb
push
int
fistpl
icebp
pop
push
inc
fwait
gs
jmp
xor
jp
mov
add
stc
inc
xchg
xor
xchg
icebp
push
pop
cmp
mov
push
insl
sets
mov
sti
in
pop
daa
pop
sub
lret
movsb
test
je
dec
cmc
mov
inc
dec
dec
or
fistl
orb
in
cld
mov
mov
fadds
jne
or
lret
xchg
mov
lcall
mov
into
cmp
cmpl
in
dec
jp
out
enter
bound
fcomps
sbb
ret
adc
mov
jo
mov
cmp
sar
es
aam
mov
xchg
imul
push
jne
fucomi
sub
int3
sysenter
xor
mov
push
stos
xor
sbbl
adc
movsb
cmp
lea
repnz
xchg
push
addr16
mov
add
jecxz
out
mull
adc
jecxz
xor
pop
shlb
clc
les
sbb
sahf
mov
mov
xchg
jno
ret
mov
cli
push
cwtl
scas
adc
dec
out
sub
xor
xor
xor
xchg
fdivl
dec
pop
stos
sbb
rcrb
daa
cld
and
pop
outsb
jbe
into
pusha
mov
push
outsb
iret
mov
ret
fisubrs
fsubl
aam
sub
addr16
add
out
fidivs
rorb
insl
sbb
inc
and
adc
cld
in
pop
movsb
cs
push
mov
add
add
mov
and
or
cwtl
lods
fiadds
gs
stos
rclb
dec
cld
icebp
decb
pusha
sti
mov
cltd
pop
sbb
je
mov
jo
andl
mov
sbb
int
or
enter
sbb
cwtl
jbe
movsb
stos
test
mov
sbb
sbbl
scas
lods
pusha
jb
fwait
xchg
lds
imul
mov
mov
xchg
scas
jbe
add
in
loope
lock
stos
add
mov
cs
push
sub
push
stc
scas
inc
std
aad
cli
rol
or
adc
out
jg
cmp
stc
inc
hlt
adcb
addr16
insl
mov
jns
popf
int3
pop
fisttps
cmp
iret
pop
add
sub
mov
scas
loopne
pop
cmp
mov
or
aad
jae
fildl
or
and
pop
lahf
pop
cmp
xchg
idiv
popf
shr
jle
adc
fidivrl
xchg
pop
cmp
or
js
sbb
aaa
adc
push
pop
xchg
pop
sti
out
mov
sbb
mov
xchg
inc
pop
enter
pop
and
mov
shll
test
outsl
aad
xor
scas
sub
sahf
push
jno
xchg
in
in
aam
jg
adc
hlt
je
xor
dec
insb
jl
adc
clc
aad
xchg
jnp
ja
mov
push
inc
test
enter
pop
imul
jp
mov
mov
add
pop
into
sub
enter
dec
or
xor
pop
fwait
pusha
xor
test
call
gs
ret
cli
int3
and
cwtl
or
dec
test
scas
sbb
fwait
jns
mov
imul
cmc
into
popf
adcb
sub
xor
jnp
push
jmp
clc
int
and
inc
pop
xor
mov
mov
dec
cmp
cld
test
fdivrp
adc
mov
and
idiv
ret
lret
jge
mov
into
in
and
mov
jnp
fidivs
jae
push
cmp
adc
bound
pop
lret
std
in
dec
pop
pop
jns
and
sbb
adc
inc
xor
sti
aaa
inc
jmp
lahf
jl
mov
cld
dec
sbb
call
jb
loopne
dec
pop
es
sbb
xchg
xchg
push
mov
mov
pop
fiaddl
js
bound
cmp
out
int3
bound
pop
dec
add
popa
fcoml
stos
out
rolb
dec
rclb
les
xor
imul
das
mov
testb
repnz
ljmp
mov
cmp
scas
fdivs
add
into
xor
addr16
adc
pop
inc
les
pop
out
pop
cmp
adc
fists
pop
pop
sti
xchg
sbb
adc
push
arpl
insb
jle
xor
push
insl
test
sbb
aam
nop
xor
mov
cli
and
insl
in
pusha
push
std
and
std
cli
mov
adc
ret
mov
jl
pushf
sti
out
fcoml
stos
xchg
scas
xor
ljmp
cli
mov
jg
adc
jno
jmp
inc
test
pusha
jno
cmp
test
ds
ja
sbb
stc
pop
ds
stos
jge
mov
iret
adc
xchg
jns
push
xor
lcall
sti
cwtl
lds
lret
mov
cmp
fistpll
mov
or
cmp
enter
dec
cli
ds
adc
addb
xchg
push
xor
jle
mov
mov
mov
out
lods
pop
xchg
mov
push
jp
cltd
imul
mov
cmp
cs
add
xchg
jge
mov
push
or
pop
add
cmp
mov
aam
cmp
xlat
iret
js
lock
out
out
pop
xor
addr16
stos
test
arpl
xor
jo
lea
movsb
push
aam
sarl
lods
outsl
jnp
out
in
scas
fsubl
aad
jp
dec
mov
aaa
mov
rcrl
xchg
xor
jle
push
or
shrb
pop
mov
scas
nop
cmp
pop
push
stos
push
lods
jp
imul
rcll
out
mov
sarl
cmpsl
mov
jecxz
jns
loope
push
inc
sub
or
insl
mov
roll
inc
in
arpl
push
je
xchg
xchg
inc
dec
push
les
adc
jb
lahf
mov
vmulps
mov
mov
int3
lret
lods
in
jg
daa
jbe
add
int
jmp
stos
cmp
pop
int
push
lods
das
lcall
push
icebp
push
pop
mov
cmp
leave
dec
repnz
ficomps
xchg
call
fnstsw
data16
sti
lret
pusha
xchg
push
mov
and
inc
scas
and
test
jecxz
mov
fcmovbe
dec
inc
icebp
jmp
mov
loope
ljmp
cmp
arpl
dec
jmp
in
jo
xor
inc
cmp
push
out
lret
out
add
xchg
mov
inc
mov
xlat
mov
sbb
mov
adc
mov
fistpl
mov
xor
clc
ds
test
or
or
ljmp
adc
push
lock
ja
jns
mov
aad
fildl
aas
addr16
xor
dec
and
dec
add
and
out
xchg
and
dec
adc
lds
and
mov
jns
sbb
lods
jne
sub
pop
push
mov
repz
in
xor
rorl
nop
imulb
shll
jge
mov
push
test
lds
je
pop
iret
xchg
testl
aad
xor
ret
iret
mov
into
or
mov
ret
jmp
xor
repnz
fldt
fdivl
stos
xchg
xor
jnp
jl
in
fldcw
dec
das
dec
jo
lods
bound
xor
xchg
mov
jns
xlat
push
fsubr
je
inc
mov
lock
dec
xor
cltd
pop
shl
outsl
enter
js
push
popw
loopne
das
lcall
xchg
push
cli
in
dec
sub
imul
filds
mov
popf
mov
rcrl
bound
les
test
in
aas
lds
hlt
adc
movsb
popa
jo
dec
popf
pop
pop
stos
ljmp
sbb
mov
ficompl
repnz
js
cmp
jnp
imul
adc
insb
mov
pop
fwait
mov
or
inc
outsb
lods
rcrl
dec
test
mov
and
test
push
mov
pop
jg
xchg
imul
adc
cmpsb
cmc
fmull
iret
arpl
jne
jp
decb
xlat
push
dec
bound
cmp
cmp
out
adc
hlt
mov
or
in
lds
cmp
jb
jb
cltd
add
sub
shr
fdivl
sub
sbb
ja
repz
popa
pop
lds
ds
dec
movsl
push
xchg
and
adc
mov
and
xchg
sbb
out
inc
cmc
rcrl
dec
pop
les
test
jb
inc
pop
int3
sbb
cmp
loop
lret
sbbb
cmp
test
push
pop
test
xchg
out
out
mov
inc
jg
mov
mov
mov
out
shl
fcomip
stos
jmp
sti
and
aad
xchg
or
dec
pushf
iret
outsb
mov
aaa
sub
pusha
dec
mov
mov
std
in
mov
sub
movl
shrl
bound
daa
ffree
iret
scas
fisttpll
popa
mov
shrb
pop
popa
push
pop
dec
jge
cld
jno
pop
and
inc
pop
mov
jmp
adc
add
in
mov
enter
icebp
add
ja
jnp
jae
addl
mov
xchg
arpl
popf
loop
push
xor
and
in
sbb
pop
mov
lods
inc
fdiv
push
dec
aad
jno
fsts
nop
addl
insb
xchg
push
test
pop
push
sbb
fnstsw
stc
int3
jno
imul
sub
inc
push
mov
movsl
rolb
in
or
inc
sbb
test
pop
mov
dec
lcall
or
call
adc
sbb
sbb
sbb
clc
fsubs
sub
sbb
add
xchg
xor
sub
pop
bound
hlt
push
cmpsl
push
nop
pop
push
insl
pop
jecxz
pop
rcrl
inc
in
xchg
fs
cmp
jge
scas
ja
stos
out
cli
mov
xlat
xchg
sub
push
cmp
or
sbb
shl
sbbl
mov
jne
mov
sub
vpsrlq
mov
add
cmp
jns
add
rolb
test
popa
push
sub
inc
add
mov
mov
mov
push
dec
stc
xchg
fwait
aaa
aaa
inc
loop
rorb
push
cmpsl
out
pop
mov
adc
push
pop
pop
aaa
xchg
jbe
int
icebp
sti
in
sub
jp
cmp
inc
ds
sub
iret
xlat
or
sub
popf
or
ss
mov
xchg
or
push
clc
xchg
dec
jnp
sub
sub
lds
mov
mov
arpl
mov
and
adcb
sbb
loopne
pop
test
mov
ss
fwait
in
pop
in
rorl
loop
dec
sahf
jne
les
aas
add
mov
sti
inc
push
cwtl
sti
mov
out
fistl
cmp
ret
in
ljmp
testl
push
mov
mov
daa
xor
add
cmc
ja
mov
jne
and
mov
loope
je
shll
les
aam
in
mov
cs
fisttpl
jnp
xor
xchg
add
das
mov
jo
imul
cwtl
aaa
cmp
fs
ss
loop
push
dec
mov
inc
lahf
xor
mov
stc
xor
in
cmpsb
loop
push
mov
pop
arpl
xchg
xchg
or
add
out
ret
or
fdiv
ljmp
insl
repnz
cmp
sti
adc
sbb
cmp
inc
imul
cmp
add
iret
loopne
sbbl
jo
shll
out
dec
or
xor
xchg
pop
push
icebp
and
dec
imul
sti
ret
xchg
jle
out
jecxz
pop
jne
imul
mov
sbb
xchg
cmp
xchg
jmp
pop
stc
mov
or
adc
xor
enter
mov
inc
mov
pop
mov
notb
adc
mov
mov
ss
outsb
adc
sahf
cs
mov
sahf
roll
stos
sbb
xchg
fbstp
mov
imul
pop
ret
inc
in
cmp
jg
adc
orb
pop
mov
push
pop
clc
jmp
arpl
int3
mov
xchg
sbb
data16
xor
js
outsl
push
add
sub
stc
xchg
xchg
popf
sub
xchg
fwait
sub
fidivs
cmpsl
push
jmp
dec
xchg
inc
scas
cmp
out
or
test
sbb
add
jle
or
pop
aas
cwtl
movsl
arpl
push
roll
inc
xchg
out
data16
or
popf
or
jecxz
or
stos
jg
pushf
aad
clc
or
or
lock
ret
mov
pusha
push
in
xchg
mov
xchg
push
loop
sub
push
add
test
lea
sub
lahf
nop
push
out
inc
stos
xchg
mov
and
inc
mov
std
nop
push
addl
sbb
fldcw
mov
cmpsb
aad
and
jge
sub
stos
data16
out
or
pop
sub
ljmp
or
movsb
cmp
pushf
fsubl
xchg
mov
cmc
loope
mov
cmpsb
leave
mov
jl
or
xor
mov
into
lods
insl
mov
out
mov
out
mov
xchg
push
jmp
push
stos
test
fwait
popa
dec
cmp
jne
adc
incb
rcr
sub
push
jg
inc
shll
push
cli
dec
mov
mov
push
pop
popf
adcl
enter
sub
and
push
or
test
sub
add
mov
dec
mov
iret
idivb
loopne
pop
sbb
jno
outsl
fwait
adcb
imul
mov
push
fistps
sbb
push
pop
add
aaa
xchg
jo
jae
mov
or
push
cmp
lret
hlt
movsb
mov
icebp
adc
in
daa
mov
mov
sub
in
lods
aas
adc
aad
jno
sbb
mov
clc
ja
inc
ret
cld
cmp
in
lds
or
sub
inc
cmp
in
dec
aas
dec
in
pop
dec
arpl
cmpsb
add
add
movsl
mov
cli
push
cld
int
cmp
add
cli
mov
nop
in
jno
in
mov
clc
dec
mov
outsl
scas
mov
out
xor
inc
cmpsl
mov
test
mov
inc
inc
sti
or
fsub
cs
xchg
sbb
cmp
mov
push
rcrl
popf
pusha
int3
lahf
jp
in
pop
jnp
dec
dec
mov
stos
loopne
sub
bound
push
cmp
jmp
sbb
jnp
cmp
push
insl
in
dec
cmpsb
mov
outsl
mov
sbb
repnz
xor
jb
mov
sub
pop
mov
cwtl
in
xor
out
pop
cmp
inc
mov
mov
insb
jg
or
adc
push
in
in
out
push
push
fiaddl
test
loop
sub
fstps
mov
test
pop
xchg
inc
psllq
pop
mov
jmp
iret
out
mov
push
repnz
and
aad
jnp
push
stos
pop
xor
sub
mov
out
dec
jecxz
lock
inc
imul
mov
popa
push
pop
adc
cltd
xor
loopne
and
and
sbb
js
add
into
imul
and
sbbl
add
pop
push
fsub
jmp
std
cmp
inc
xchg
mov
in
pop
not
jge
jmp
test
lret
insb
jns
or
lods
fstps
pushf
or
sub
gs
jae
fisubrs
sbb
loope
mov
adc
les
int3
es
xlat
test
dec
bt
mov
push
cmp
push
adc
cld
sbb
xor
add
sub
stos
gs
in
std
lret
test
xor
jo
jp
fcoms
ja
sub
mov
dec
in
cltd
aas
dec
mov
out
inc
inc
loopne
add
pushf
clc
adc
paddq
pusha
inc
popa
mov
cmc
iret
mov
inc
movsl
or
aaa
adc
repz
ljmp
mov
std
push
jl
or
insl
add
xor
mov
enter
pop
push
sub
loope
out
sbb
je
dec
test
dec
jmp
in
bound
cmp
les
sub
fimuls
jge
ss
xchg
xor
iret
push
mov
imul
mov
mov
call
pop
jae
test
lods
movsl
scas
xlat
test
imul
in
fcomip
xchg
mov
add
xchg
imul
cmp
leave
cmp
gs
fimuls
jb
xchg
sbb
bnd
and
inc
in
cli
mov
dec
leave
fstl
ftst
pushf
adc
inc
popf
adc
jns
out
pop
stc
mov
ljmp
cmp
mov
clc
stos
std
bound
outsl
adc
sbb
lods
mov
inc
je
dec
pop
pop
sti
stc
dec
xchg
inc
adc
lret
lahf
popf
fs
mov
in
sbb
pop
pushf
add
gs
fcomp
mull
mov
test
jecxz
ds
jae
xchg
inc
imul
es
and
pop
xchg
jae
jbe
test
sbb
cmp
enter
mov
cmp
rorb
inc
and
adc
push
sbb
mov
lcall
mov
sub
inc
push
push
mov
into
lret
sub
rolb
pop
es
std
jns
aad
data16
mov
test
mov
sti
aaa
addl
mov
dec
jae
xchg
ret
scas
pop
pop
insl
out
fdivs
cmc
ret
cmp
and
dec
clc
stc
jle
jo
xor
fistpl
jne
adc
cmp
inc
insl
cltd
cs
data16
in
aad
sub
ljmp
sbb
stc
push
sub
sbb
jae
call
jno
outsl
punpckhwd
xor
cld
mov
repnz
movsl
jne
pushf
sub
loopne
fisubs
sahf
mov
push
enter
movsb
mov
cmp
shl
inc
idivl
pop
and
cmc
and
sub
adc
hlt
shlb
pusha
mov
xchg
cwtl
popf
pop
leave
push
add
dec
fadds
or
loop
xor
mov
jnp
pop
ret
mov
cs
push
sbb
add
shll
out
lods
jbe
xchg
pusha
lods
sbb
gs
test
jo
cmpsl
ret
cmp
push
cli
and
cmp
aaa
outsl
or
or
jg
and
inc
xchg
rcrl
call
xchg
cmpsl
idivb
jb
cwtl
repz
sub
insl
xor
sbb
mov
addr16
dec
inc
push
inc
cmpsl
loope
xlat
mov
mov
cmpsl
fdivs
pop
imul
leave
add
js
dec
out
jb
lods
cmp
cld
movsl
lods
xor
subl
in
fimull
xacquire
sub
daa
jne
dec
addr16
or
mov
cmp
clc
dec
test
xorl
in
inc
leave
rcr
cmp
popf
scas
test
add
sbb
push
ljmp
adc
insb
pop
sbb
out
pop
xor
mov
hlt
cltd
setne
loop
or
je
xchg
or
gs
mov
add
leave
js
xor
push
je
mov
dec
out
pop
fistl
inc
and
aam
sbb
aaa
jo
sahf
pop
jae
fisubl
inc
xchg
push
fwait
test
call
and
andl
lods
add
pop
cmp
jno
jl
aaa
aaa
cmp
lea
and
jmp
sbb
enter
jo
dec
pop
push
mov
pop
inc
scas
push
incb
imul
adc
aad
jbe
mov
jno
cmp
push
lret
fcom
pop
es
and
mov
jge
jge
pop
sbb
fistpll
daa
or
cmpsb
lds
add
aaa
js
inc
lret
adc
pop
aaa
shl
push
dec
ret
loope
push
dec
shlb
fisubs
mov
lock
dec
fs
sub
int
mov
data16
movsb
inc
sbb
inc
pop
ss
and
mov
xchg
adc
xchg
xor
lret
sbb
push
xor
push
and
mov
lods
sub
out
dec
add
lret
push
mov
dec
cmp
sbb
pop
ret
adc
mov
ss
jg
hlt
push
fistl
push
fstps
shll
loope
aas
jbe
lods
cmove
push
stc
sbb
lret
adc
xchg
jnp
aam
cltd
push
jae
mov
lods
clc
pop
or
inc
out
iret
jecxz
pop
sbb
inc
push
adc
addr16
jge
or
mov
mov
jns
push
add
imul
mov
cmpsb
hlt
outsl
inc
int3
xchg
arpl
jg
fbstp
lock
mov
imul
jmp
fdiv
lds
mov
jl
or
cmp
mov
in
loopne
in
mov
or
ja
pop
icebp
testl
push
mov
mov
bound
ja
adcl
pop
int
sti
mov
dec
mov
cmp
stc
mov
loopne
sub
movsl
add
je
cmp
dec
cmpsl
push
aas
or
xchg
push
loope
imul
loopne
cmpsl
and
fs
sub
imul
push
add
jg
js
add
xchg
rcrb
jecxz
mov
sbb
mov
xchg
xchg
dec
jb
loopne
push
sub
jg
mov
in
out
pop
xor
xor
push
out
xor
jmp
cmp
dec
data16
imul
adc
std
push
pop
push
mov
add
mov
cmpb
mov
mov
jbe
cmc
mov
jp
and
adc
push
jmp
add
cltd
bound
in
fnsave
pop
cmp
mov
fldl2t
lea
shrl
out
mov
jecxz
ljmp
xor
popf
scas
fldl
sbbl
pop
outsl
ds
icebp
mov
jb
stc
xor
sub
fnsave
aaa
jb
mov
repnz
frstor
lods
mov
xchg
cmp
shll
loop
je
sti
or
orb
jecxz
es
out
jp
jmp
cmp
imul
test
hlt
and
std
enter
fdivp
jnp
pop
add
lods
insl
mov
js
das
sar
js
mov
and
sub
leave
inc
shrb
fwait
aam
ret
test
xchg
push
push
loope
cmc
in
pop
scas
dec
xchg
sbb
test
inc
mov
mov
or
jl
cmp
xor
mov
cmc
cltd
mov
sub
js
cmc
loop
ret
push
insb
pop
pop
movsb
add
aas
cwtl
cwtl
and
in
or
test
mov
push
fistps
pop
lea
shlb
jo
jg
mov
add
sbbl
mov
mov
sbb
fistpll
loope
push
lret
lcall
loop
in
repnz
add
adc
xchg
stos
ret
jns
das
pop
mov
jl
mov
test
jle
or
jmp
ror
sahf
inc
das
pop
sahf
jg
mov
adc
dec
sbb
push
mov
sbb
jno
pushf
int
inc
int
stos
imul
test
xchg
fisubrs
mov
sahf
sarb
popf
shlb
aam
cmp
xor
sub
mov
lahf
mov
adcl
pop
test
xchg
or
lds
add
push
dec
pop
idiv
loope
pop
in
xor
pop
std
test
ljmp
fsubs
jp
pop
filds
aas
imul
mov
xchg
jb
inc
adc
or
push
jbe
xchg
and
mov
and
popf
jl
xcrypt-cfb
cmpsl
out
push
shrl
stos
dec
mov
inc
negb
mov
icebp
aas
fdivs
mov
loop
fnstsw
push
ret
das
lret
mov
repz
je
push
xchg
push
mov
dec
cs
sub
push
cld
and
das
mov
ret
lahf
inc
lods
es
push
pop
adc
jbe
mov
sbb
sbb
mov
pop
dec
js
cmp
sub
sahf
cli
add
sahf
clc
bnd
inc
out
sub
pop
stos
sbb
push
rcr
cmp
jne
js
lret
jo
inc
imul
add
xlat
ret
icebp
mov
movsl
xadd
fsubp
jp
sub
mov
out
mul
cmp
shl
negb
mov
call
xchg
sarb
pop
xor
or
mov
add
mulb
sbb
imul
xor
adc
movsb
mov
xor
xchg
clc
xchg
adc
test
adc
add
sbb
insl
inc
jne
xchg
push
dec
out
xor
inc
aam
arpl
xchg
inc
xchg
subl
mov
pushf
sarb
sahf
adc
jge
pop
roll
cli
dec
test
jmp
xchg
push
jns
pop
test
fisubs
sbb
sbb
push
jmp
mov
pushf
push
pop
cs
pop
cmp
addr16
ret
mov
imul
rcr
loope
mov
andb
inc
adc
mov
mov
cmp
jge
pushf
xchg
loope
mov
push
movsl
push
mov
cmpsl
icebp
fwait
jmp
sub
sbb
mov
mov
pop
fs
sub
leave
pusha
jg
out
xchg
les
pusha
repnz
jmp
lcall
mov
xlat
push
mov
inc
lret
ret
mov
pusha
xchg
inc
mov
xor
inc
or
incl
ljmp
inc
shrl
enter
or
rol
and
xor
mov
adc
mov
pop
fbld
enter
pop
aam
dec
push
xor
pusha
movsb
jae
jno
ljmp
push
mov
test
in
jp
ficomps
pusha
mov
inc
cmp
lcall
inc
cmpb
mov
cmp
aad
cmp
std
mov
in
stos
jge
and
mov
inc
inc
inc
xchg
dec
xchg
fsubrp
ret
data16
push
mov
xchg
cwtl
jg
pop
hlt
outsl
lds
icebp
jecxz
leave
das
sub
add
sbb
jmp
je
xor
aam
test
dec
cmpsl
repz
out
pop
mov
sub
call
repnz
mov
mov
outsl
mov
dec
cld
push
scas
xor
adc
mov
aas
into
xchg
loopne
aaa
jecxz
push
sbb
scas
adc
out
xor
leave
fildl
lret
adc
nop
div
xor
cmpl
lods
lds
mov
mov
pop
inc
imul
in
ret
mov
mov
movsb
and
pop
xchg
xchg
aaa
mov
cmp
sarb
stos
lods
or
pop
mov
repnz
jne
lods
mov
xchg
es
xchg
cmpsb
or
mov
xchg
pop
sbb
mov
push
mov
mov
jmp
xor
les
fimuls
lret
sbb
out
mov
adc
pop
sbbl
xchg
lcall
rclb
or
lods
mov
aad
cs
cmp
jae
mov
stc
push
cwtl
inc
and
inc
rorb
mov
pop
lods
pop
mov
in
sqrtps
jno
sar
inc
jo
inc
push
loop
pop
test
outsb
xchg
nop
outsb
xor
dec
rolb
fs
das
mov
aas
icebp
lcall
repnz
jmp
push
inc
push
repz
out
inc
mov
lahf
pop
cmp
mov
dec
adc
mov
mov
stc
or
ja
xchg
xchg
adc
adc
inc
in
dec
cli
xlat
shrl
pushf
scas
shr
cs
out
clc
xor
ds
adc
pop
pop
sbb
xor
ret
ror
inc
mov
fisubrs
lods
mov
test
ds
cmpsl
pusha
xchg
out
shlb
sti
ss
aam
movsb
push
pop
or
cld
and
ret
pop
cs
stos
outsl
leave
int3
iret
adc
test
or
mov
test
or
lahf
out
push
pop
mov
sub
cmpsl
mov
and
sbb
sbb
cwtl
push
js
mov
jno
and
cli
push
cld
notb
dec
xor
enter
and
out
enter
mov
jge
mov
mov
jno
roll
mov
and
or
mov
push
jo
ss
or
leave
pushf
dec
mov
mov
jnp
andl
add
movsl
cmp
shrl
add
insl
inc
jl
mov
mov
dec
jle
jle
nop
into
jns
lret
mov
cmp
add
pop
movsl
mov
lds
mov
cmc
shll
nop
cltd
adc
test
in
cltd
push
leave
loope
negb
nop
sbb
mov
xor
aad
and
scas
pop
mov
add
push
ds
jmp
xchg
jle
xchg
fcmovu
fwait
mov
rolb
pop
pop
aas
sbb
scas
out
pusha
lret
daa
repz
ret
lcall
xor
mov
ret
ret
cmp
je
mov
xchg
lret
xor
pop
cmp
lods
mov
pop
sub
pop
xor
inc
mov
jp
das
mov
xor
xchg
mov
sub
sarl
sti
xorb
push
sub
daa
dec
mov
mov
inc
inc
es
out
jno
fwait
inc
shlb
jae
lahf
cmp
pop
das
pop
lret
jmp
gs
jmp
mov
into
ret
add
insl
in
sub
dec
jl
sub
arpl
out
sbb
mov
push
add
cmp
inc
xchg
jne
xor
xchg
mov
adc
fisttpll
addr16
xor
jae
xor
push
mov
push
addr16
iret
rclb
lea
sahf
cmp
push
das
xchg
es
xchg
ds
inc
inc
cmc
dec
jge
jle
jp
int
and
lea
push
test
pop
jno
mov
cmp
push
fwait
sub
dec
xchg
push
jle
mov
push
and
mov
jno
stc
xlat
add
dec
pushf
push
into
xor
jg
jno
dec
popa
aas
fisttpll
pop
call
or
insl
or
jle
push
in
sub
fisubs
imul
mov
outsb
add
inc
inc
mov
js
dec
out
sbb
repz
sub
popf
filds
sbb
pop
jmp
dec
push
gs
sub
cs
xchg
test
gs
inc
and
sbb
lret
idivl
sti
and
cmp
js
and
sbb
lret
or
and
rcrb
mov
rclb
fidivs
jg
loopne
mov
mov
jecxz
out
out
xor
cwtl
imul
jo
or
aam
lret
inc
mov
adc
arpl
jns
insb
push
push
movsl
scas
add
dec
fisttpl
xchg
lock
push
xchg
pushl
in
loop
mov
pusha
jae
xchg
js
sbbb
andl
outsl
mov
in
xor
std
js
loopne
jb
and
or
pop
and
add
sub
movb
and
push
test
insb
adc
repz
lods
mov
stos
inc
xchg
lret
sbbl
test
ret
and
cmp
and
std
xchg
mov
add
and
mov
inc
test
iret
in
push
mov
jle
adc
mov
cmpsb
push
xrelease
shl
inc
push
dec
out
xor
pop
or
or
andl
mov
inc
lret
jns
repnz
stc
push
lahf
iret
and
outsl
pop
testl
out
and
pop
or
lock
insb
xor
mov
nop
sbb
insl
cmp
mov
or
popf
loopne
sbb
sbb
xchg
je
lret
andl
xor
push
add
mov
imulb
xchg
pop
popf
inc
jae
xchg
sbb
mov
rcl
popa
rcr
icebp
iret
push
cmp
sbb
cli
cld
push
add
lods
cwtl
aam
jle
aad
lods
lock
hlt
aam
jo
cmc
mov
int3
addr16
xchg
add
sahf
cmpsl
ficomps
dec
scas
aad
dec
ret
fcomps
mov
cmp
xchg
addb
sti
and
lods
xlat
adc
dec
jg
je
aam
add
mov
fnstsw
adc
mov
test
xor
cmp
insl
jo
loope
fistpll
jl
inc
or
mov
das
dec
inc
fcomps
xor
and
shll
nop
xor
into
inc
and
mov
arpl
mov
pop
rcl
lret
leave
xchg
add
outsb
callw
xor
in
arpl
or
stc
cmp
mov
dec
and
sar
stos
in
sti
repnz
xchg
je
jmp
push
sahf
in
push
jnp
imul
mov
notb
in
dec
sub
cltd
or
sbb
stos
imul
outsb
cmp
pop
jmp
add
filds
dec
xor
shrl
ret
lcall
fisubrl
insb
lahf
loopne
inc
dec
loope
int
loopne
pop
push
and
push
in
fwait
stos
je
push
dec
stos
pushf
push
scas
mov
push
jle
xchg
ja
xchg
int3
or
jno
xchg
orb
push
cwtl
xor
jle
test
mov
pop
adc
push
insl
mov
sub
pop
fiaddl
inc
lret
cmp
cmpsl
cmp
mov
stos
mov
and
nop
dec
imul
xlat
pushf
mov
mov
iret
fisttps
mov
inc
aam
in
scas
int3
stos
jle
push
test
stos
xor
pop
sbb
daa
sbb
imul
mov
je
daa
scas
lcall
into
scas
cltd
dec
xor
cmp
push
xchg
loop
stos
shll
aad
push
test
mov
jae
mov
mov
fxtract
out
clc
and
xorl
pop
inc
mov
xchg
cmpsb
setbe
push
jo
cwtl
dec
movsb
scas
or
inc
lods
sbb
out
jo
adc
shl
and
sub
xorb
fstp
popf
int
mov
ficoml
adc
mov
test
add
push
ficomps
mov
xchg
rcrl
clc
mov
es
xchg
lods
inc
fiaddl
stos
cmp
push
rcrl
aad
mov
stos
ja
andl
fs
add
push
adc
bound
cmp
xor
addl
scas
cwtl
jb
mov
adc
sub
lret
loop
leave
pop
pushf
pop
dec
sbb
inc
scas
jo
sahf
je
mov
popf
add
stc
cld
dec
sub
pop
sbb
and
dec
dec
imul
stc
pop
shl
and
ljmp
hlt
cmpsl
sbb
sbb
xchg
and
cltd
mov
shr
adcb
mov
insl
push
dec
les
sub
sub
push
inc
mov
scas
fadd
cld
roll
repnz
jno
pop
arpl
bound
jecxz
push
cmpsb
mov
push
stos
popf
cmp
jo
mov
sub
icebp
or
aas
pop
xchg
out
addr16
xchg
push
pandn
lret
jns
mov
mov
sbb
mov
test
mov
sub
xchg
jl
xchg
mov
std
xchg
cli
mov
test
fsub
xchg
push
adc
mov
loop
mov
neg
pop
je
jg
add
fisubrs
adc
gs
pop
es
push
pop
enter
test
adc
in
ja
scas
push
sbb
pop
rolb
loopne
jle
sub
movsl
bound
or
lea
inc
lret
sub
and
shlb
fwait
call
push
inc
hlt
mov
mov
mov
popa
sbb
jns
mov
loopne
dec
jmp
es
lods
dec
xor
std
ds
xor
hlt
sub
pop
adc
add
cltd
jno
fdivrs
push
sahf
mov
jbe
out
and
xchg
fcoms
aam
sub
pop
movsb
xchg
pop
jae
xlat
jl
rcl
fistps
orl
push
pusha
sub
xor
inc
enter
mov
and
shlb
in
push
mov
dec
add
or
mov
mov
in
adc
stc
lods
push
inc
dec
es
pop
and
sarb
repnz
cmp
repnz
in
mov
mov
pop
pushf
mov
mov
adc
jp
xor
and
pop
cs
outsl
cmp
bound
inc
jne
enter
cmc
jo
push
adc
or
xchg
inc
xor
push
rcr
outsb
push
or
or
ret
outsl
jecxz
inc
fnstcw
pop
es
pop
jns
push
in
pop
cld
or
fisubs
imul
pop
mov
sbb
imul
jp
xor
insl
dec
subl
sbb
push
fistpl
cmp
and
ljmp
push
inc
icebp
in
outsb
jge
sbb
xor
mov
sub
xchg
in
sub
mov
mov
add
sahf
xchg
pmuludq
push
push
dec
out
xor
jp
cmp
repnz
movsl
fimuls
mov
rol
sbb
mov
das
cmpsl
std
push
fdivs
adc
pop
loop
jo
sbb
mov
sbb
mov
lock
data16
enter
jl
mov
inc
filds
jbe
dec
xor
int
das
adc
cmc
or
in
sbb
sub
adc
mov
mov
adc
xor
ret
adc
aaa
dec
or
inc
cmc
je
test
test
xlat
mov
scas
ljmp
repz
sbb
bound
add
jo
and
scas
push
outsl
imul
cmp
jg
adc
or
mov
xor
pushf
and
sbbl
lods
jp
daa
imul
jns
sahf
arpl
jb
inc
add
mov
lcall
push
mov
mov
mov
push
hlt
or
hlt
inc
jbe
ret
sbb
and
sbb
and
dec
push
imul
aad
std
mov
out
in
mov
cmp
xor
out
ret
inc
or
or
cmp
xchg
mov
mov
push
shl
insl
push
jb
repz
cmpsb
loope
jae
dec
adc
jl
cmp
fwait
cmpsl
mov
mov
or
jb
orl
and
jo
xchg
jno
adc
jns
fcmovu
std
popa
and
or
inc
out
test
add
sbb
sbb
addb
shlb
ss
test
rcl
ds
imul
je
cli
or
fwait
cwtl
bound
sub
roll
xchg
aas
jb
pop
and
cmp
push
movsb
jp
mov
ss
inc
xlat
mov
pop
add
dec
lods
mov
mov
or
push
cmp
std
xor
push
mov
sub
stos
aaa
arpl
jb
push
pop
or
sbb
sub
stos
cli
int3
mov
mov
jle
jmp
cld
insl
mov
lds
shll
lds
mov
cmc
xchg
in
fistpl
scas
in
stos
inc
test
outsl
jp
gs
add
loopne
andl
call
cltd
sub
xor
add
add
ficoml
mov
sub
push
inc
add
cmc
ds
inc
xchg
jae
push
sbbb
push
dec
xlat
or
cmpl
jae
sub
fxtract
ficoml
adc
rep
and
inc
int3
outsb
mov
inc
add
jne
stos
popa
adc
mov
into
push
in
je
out
test
mov
inc
jo
decb
push
push
es
xorb
push
cs
push
out
nop
mov
ss
sbb
imul
sbb
lds
hlt
ret
sbb
xor
mov
xchg
jmp
xor
loope
mov
fnstenv
and
imul
sub
enter
popa
xchg
bound
xor
pop
loop
test
lea
sarl
fmull
cmpsb
mull
loopne
int3
mov
or
jmp
jb
pop
mov
gs
inc
mov
mov
or
or
add
out
leave
shll
out
jle
enter
imul
dec
in
addr16
jle
push
outsl
mov
and
in
bound
xchg
mov
bound
sti
jmp
cwtl
jle
ss
and
repnz
icebp
dec
add
xchg
push
enter
mov
pop
cli
xchg
adc
sbb
nop
lock
pop
out
xchg
imul
jp
push
jp
xchg
in
repnz
and
lock
sahf
and
inc
mov
shrb
mov
adc
dec
jp
add
jne
inc
aam
sbb
xor
add
cmp
imul
aas
int
mov
sbb
add
add
outsb
inc
popf
out
pop
mov
and
divl
call
ret
mov
xorl
fcompl
js
pop
push
adc
jle
ja
mov
xchg
ret
repnz
jge
xlat
mov
lods
mov
and
lcallw
sbb
loope
lahf
addr16
mov
loopne
aas
pop
and
ljmp
xchg
sub
test
movsl
sarb
mov
xor
loope
jge
rcr
push
rorl
pop
push
sub
mov
inc
test
dec
jecxz
inc
xlat
and
mov
outsl
fcmove
fistl
cmp
jae
cmp
adc
xchg
orb
add
dec
aaa
push
fimull
notb
js
repnz
outsb
lods
fwait
or
fsubs
pop
cmp
aas
jecxz
lds
iret
pop
and
rorl
lea
push
rorl
in
fstl
andb
cmpb
hlt
ss
cli
pushf
xor
adc
ret
xchg
lock
arpl
ret
jnp
movsl
and
xchg
pop
sbbb
in
xor
xchg
aaa
xor
pop
iret
scas
ja
mov
cmp
cmp
aad
das
mov
in
inc
out
mov
rcll
sbb
pusha
ljmp
or
mov
mov
test
fdivl
das
inc
fcmovu
outsl
push
mov
jge
js
call
xor
add
pop
movsl
sbb
fs
lds
sub
idiv
fcomps
cmc
popa
sahf
mov
xchg
loopne
adc
fucom
dec
and
dec
dec
out
dec
stc
adc
insb
inc
push
xor
adc
inc
inc
xor
imul
movsb
push
push
loop
jnp
xchg
lods
pop
inc
pop
pushf
lea
and
sub
sub
out
fs
aaa
sahf
mov
cmp
push
lods
popf
push
xor
fdiv
sbb
jns
xor
inc
mov
sbb
mov
xchg
xlat
sahf
fisubl
add
dec
stos
mov
iret
jp,pt
sub
pop
pop
in
mov
add
mov
fs
sbb
mov
add
insl
dec
ret
mov
mov
sahf
out
or
add
loopne
or
lret
out
or
loopne
xchg
es
xchg
jle
dec
xor
fldl
in
pop
mov
lcall
sbb
mov
cmp
inc
scas
push
pop
mov
push
aaa
cld
lea
pop
loopne
push
mov
push
push
std
ss
int
fadd
mov
sar
cmp
mov
ret
fimull
mov
pop
lahf
adc
sahf
cmp
pop
mov
adc
jns
nop
dec
les
mov
pop
js
rcll
mov
jecxz
push
push
mov
pop
push
mov
jo
aam
lahf
lods
cmp
bound
jecxz
popa
dec
xor
jno
enter
add
cmp
add
or
imul
cmc
cld
push
in
cmpsb
andb
cmpsl
sub
inc
push
das
data16
jecxz
adc
enter
pop
add
call
adc
mov
cmpsl
or
push
mov
inc
push
scas
out
movsl
testl
xor
push
pop
ret
sub
or
sbb
fwait
loop
xor
xor
stos
sub
lds
add
push
pop
xor
loope
test
jl
bound
mov
nop
inc
ret
js
leave
inc
stc
les
jecxz
fstps
leave
out
repz
mov
lock
lods
lret
cmpsl
xor
outsb
les
jae
mov
loop
fists
mov
gs
out
cmpsb
ret
aad
fnsave
xchg
mov
stos
push
mov
fs
mov
dec
inc
clc
dec
dec
jo
subl
mov
andl
sti
stos
imul
and
adc
pop
mov
das
xchg
sub
or
sbb
repnz
mov
lcall
lret
or
mov
scas
test
pop
loope
enter
or
test
mov
push
mov
push
mov
xchg
js
xor
jecxz
xchg
js
ds
std
adc
jmp
nop
mov
mov
clc
cmp
fstpl
lea
shr
push
stos
mov
sbb
push
int3
aad
daa
out
adc
movlps
xchg
jbe
in
dec
and
mov
dec
subl
adc
sub
adc
inc
out
in
mull
hlt
or
cwtl
jg
in
movsl
xor
outsb
and
mov
push
or
lret
mov
push
scas
adc
mov
jl
sub
push
sub
sub
sahf
lret
bound
pushf
inc
das
sahf
mov
sbb
sub
push
out
adc
stc
aad
sub
jns
movsb
ljmp
stc
add
cmp
mov
loop
fistps
fwait
inc
adc
js
sub
mov
mov
fisubl
push
fisubrl
push
jg
jb
dec
cmp
sti
add
cmpsb
xor
ret
sub
scas
push
mov
notl
mov
icebp
add
sub
mov
push
fidivl
push
inc
cmp
push
cli
outsb
out
adc
std
in
outsb
xchg
ret
push
jae
out
sub
xor
mov
or
fsubp
dec
sub
inc
or
inc
dec
pop
sbb
out
iret
mull
std
shll
sbb
cmp
cmpsb
jns
jbe
in
mov
dec
jno
xor
imul
cmc
or
mov
mov
mov
cmp
and
jle
in
aas
jl
xchg
leave
test
xor
or
iret
push
dec
int
push
xor
lock
lahf
jmp
jle
mov
xor
fdivl
pop
fistps
mov
arpl
push
mov
enter
out
mov
cmp
jns
arpl
or
daa
daa
lea
pop
cltd
dec
je
lcall
cmpsl
inc
enter
nop
xlat
mov
dec
mov
ret
out
sarb
dec
mov
xchg
mov
lods
in
mov
dec
in
mov
jno
sub
push
jecxz
dec
push
push
pop
faddl
lods
adc
mov
clc
int
ret
sub
inc
dec
or
push
inc
pop
aad
jns
nop
pushf
mov
lahf
hlt
xchg
ror
sbb
mov
loopne
mov
and
xor
dec
push
dec
outsb
int3
xor
lret
cld
je
rcl
faddp
jecxz
and
in
pop
popa
xchg
dec
js
lret
je
ja
adc
in
adc
mov
mov
in
fimuls
cmpsl
jge
pminub
add
je
jo
cld
dec
add
mov
and
test
scas
inc
push
sub
fcomp
sub
adc
or
cli
adc
mov
sbb
stos
scas
popf
jecxz
mov
mov
cmpsb
rolb
sti
mov
xor
stos
or
mov
adc
call
in
insl
inc
shll
ljmp
jle
aaa
daa
sbb
lods
sub
fisubs
inc
add
cmp
mov
jne
jge
and
jmp
inc
and
imul
clc
sbb
shrl
xor
and
daa
sbb
gs
test
or
lahf
cmpsb
lds
pop
fidivrl
xchg
daa
add
js
mov
out
jp,pn
mov
mov
lock
push
cltd
stc
mov
jg
das
daa
pop
arpl
add
in
sbb
push
or
cmp
cmp
fstps
aas
cmc
mov
jmp
ret
es
cmp
sub
xlat
icebp
movsl
pushf
dec
dec
cld
xchg
mov
addr16
test
push
mulb
dec
sti
push
iret
test
push
sarb
outsl
adc
inc
fs
das
pop
push
xchg
mov
cmpsb
test
lods
add
scas
pop
xchg
lcall
adc
lcall
inc
adc
das
push
mov
lret
icebp
jg
xchg
or
imul
outsb
call
test
sub
mov
jbe
mov
lea
stc
mov
xor
pop
ljmp
das
data16
pop
push
mov
and
imul
rorb
xchg
push
inc
movsl
repz
stos
sbb
inc
sbb
out
and
divb
insl
sub
push
gs
loope
or
jno
jmp
jbe
insl
inc
pop
and
fcomps
inc
in
leave
push
sub
push
sbb
or
adc
xchg
inc
push
lcall
push
xchg
sub
aas
jge
pushf
fbstp
xor
in
pop
loop
jne
enter
adc
and
xchg
adc
adc
aas
xchg
mov
push
jle
adc
fnstenv
pop
fwait
ret
cltd
jecxz
int3
fisubl
sub
adc
in
push
push
mov
mov
fstl
sti
lcall
roll
filds
aas
mov
int3
mov
pop
inc
fcompl
shrb
adc
sub
es
pop
in
adc
imul
andl
pop
stos
xor
sub
mov
in
or
pusha
add
es
pusha
mov
into
nop
xchg
dec
fs
add
ss
fmull
aas
mov
pop
fdivrl
aam
sti
dec
xchg
and
aam
push
mov
mov
lret
adc
test
push
negl
xor
mov
jg
int
outsb
dec
iret
or
cmp
test
cwtl
mov
fnsave
sahf
or
mov
jo
leave
test
mov
mov
cmp
xchg
cmp
xor
fimuls
dec
mov
sub
stos
jge
repz
and
push
mov
stos
mov
add
push
and
pop
adc
add
jae
mov
pop
mov
sbb
mov
sbb
xor
or
cmp
enter
push
loope
cmp
mov
xor
push
cmpb
mov
rep
mov
cmpsb
mov
imul
push
clc
dec
hlt
mov
push
lahf
repz
and
mov
push
int
mov
pop
or
cmc
mov
cs
xor
nop
ljmp
addb
filds
xchg
mov
jmp
cmp
xchg
mov
lock
pop
fildl
mov
les
or
arpl
scas
sbb
int
cmp
jnp
das
mov
test
sub
fwait
or
ljmp
out
mov
ret
into
fimull
mov
fsubs
sbb
sbb
pop
sbb
sub
xchg
nop
mov
inc
sub
dec
sub
xchg
push
or
lahf
mov
xchg
subb
add
xchg
cmp
adc
test
xchg
jle
fbld
xlat
lods
xor
stos
mov
das
and
jl
lds
adc
adc
iret
dec
or
cmc
mov
pop
push
mov
cltd
push
and
add
fidivrl
xchg
push
jno
nop
adc
test
outsl
sbb
fistps
inc
push
rcrl
push
sbb
pop
cltd
fwait
daa
or
mov
mov
insl
ss
xchg
mov
pop
xchg
or
icebp
fwait
out
popf
rorb
ds
sbb
movsl
rclb
mov
push
test
ja
dec
popf
in
cltd
pop
test
cwtl
and
rcrb
clc
dec
test
cmp
dec
pop
shlb
popa
add
and
out
mov
push
push
lcall
out
dec
lea
mov
mov
ss
lahf
add
icebp
mov
adc
fiadds
xor
addr16
add
addr16
cmp
fsts
dec
cmpl
pop
les
dec
outsl
in
rorb
clc
sub
ret
loope
sbb
sbbb
ret
sub
loop
add
pop
pop
sub
push
sar
xchg
ja
aam
test
stos
movsl
dec
iret
mov
sbb
cwtl
lock
test
and
repnz
mov
pop
faddl
mov
cmpl
in
out
xor
pushl
xor
add
cmpsb
mov
sub
push
jno
sub
jno
sub
pop
aam
iretw
xor
mov
xlat
int
in
in
adc
mov
mov
dec
and
add
xor
movsl
mov
push
xor
imull
shl
and
stos
shlb
jae
mov
lret
sub
popf
add
mov
inc
and
andb
pop
sbb
lock
lret
orl
outsb
xchg
mov
push
sub
imul
jl
dec
or
jmp
stc
sarb
dec
repnz
movsl
cmp
mov
xchg
rcrl
int
adc
adc
jg
decb
xlat
int3
sbb
dec
push
xchg
fisttpl
xor
push
push
arpl
pusha
push
ds
or
adc
mov
dec
push
lods
mov
and
mov
ss
dec
in
mov
daa
enter
into
add
cmp
test
fwait
gs
jecxz
mov
adc
sbb
call
je
cmpsl
sti
pop
add
out
out
push
pop
into
sti
jge
push
inc
or
jp
xor
jnp
jnp
leave
std
hlt
cmc
jmp
cmp
cmp
mov
scas
or
aas
inc
pusha
cmp
mov
loopne
dec
imul
iret
cmp
jge
push
inc
pop
dec
ret
out
push
xor
pop
push
cmpsb
das
push
in
mov
movl
and
mov
dec
movsb
lahf
sbb
rorb
cltd
les
push
dec
dec
dec
mov
loopne
sbb
ret
jle
pop
out
loop
xchg
hlt
jle
adc
adc
repnz
add
fiaddl
jnp
push
mov
lcall
or
mov
lcall
repz
scas
adc
js
cmp
in
aad
mov
cli
add
push
dec
mov
inc
mov
pop
inc
mov
andl
in
ds
adc
loope
mov
add
cmp
aam
cmp
mov
cwtl
xor
push
mov
dec
pop
jnp
cmp
adc
mov
fistps
imul
push
mov
into
ret
clc
dec
lret
stos
lock
xchg
xchg
lret
call
mov
and
ret
jne
lods
or
jl
xchg
jmp
mov
pop
pop
dec
or
pop
fs
sbb
pushf
adc
mov
push
mov
cwtl
fnstcw
jg
imul
mov
jns
ja
xor
sbb
jmp
mov
iret
jecxz
sarb
stc
int
cmp
jo
adc
scas
ss
out
sbb
loop
and
mov
arpl
dec
mov
and
sub
push
aaa
scas
sbb
out
cmpsb
ja
in
mov
fidivl
int
pop
inc
arpl
dec
imul
jo
sbb
dec
sub
inc
xchg
and
testb
lcall
adc
cwtl
inc
dec
dec
sbb
jmp
lret
les
cmp
cmp
fiadds
xchg
xchg
mov
std
cmpsl
loopne
out
lods
inc
sub
cmp
push
mov
faddl
xchg
je
ficomps
js
ret
clc
fsubrs
gs
cli
orl
adc
aad
jbe
push
push
ss
stos
cmp
jbe
push
inc
and
addb
adc
xor
add
push
sub
test
lds
ret
sub
sbb
or
sub
xor
sti
jecxz
jno
sbb
gs
push
icebp
jns
das
pushf
mov
sub
imul
arpl
inc
mov
inc
data16
sbb
mov
jp
sti
aam
pushf
pop
lods
inc
xchg
push
jmp
xchg
xor
mov
fbld
repz
mov
mov
xor
pop
pop
inc
mov
scas
mov
and
stos
xchg
cmp
ds
mov
sub
call
and
lock
lahf
out
dec
mov
push
mov
jo
outsb
push
or
xor
xchg
jle
mov
leave
and
iret
mov
shrb
jg
fnstsw
mov
and
std
cltd
push
or
rorl
add
in
int
mov
push
push
sub
mov
pop
xlat
inc
js
xor
xchg
dec
sahf
jae
inc
mov
push
push
inc
icebp
lds
sub
lret
and
mov
pop
aam
stos
cmpsb
les
pop
les
call
adc
inc
jne
push
adc
cmpsb
cwtl
adc
movsl
add
adcl
stos
cmc
jae
movsl
clc
test
push
lret
sbb
pop
and
test
mov
push
ds
cwtl
push
ficompl
xchg
scas
cmpsl
pop
dec
cld
stos
sub
jb
repz
lods
mov
cmp
fsubrs
push
outsl
mov
mov
aas
call
ficoml
mov
inc
in
adc
bound
mov
mov
or
and
jecxz
and
push
cmp
fdivrs
add
mov
mov
fisubrs
push
faddp
bound
mov
stos
adc
mov
cmovns
fstps
push
ret
sub
mov
and
cmp
pusha
add
aas
sbb
iret
sub
in
repz
dec
push
outsb
or
inc
mov
push
int3
adc
add
mov
sbb
pop
add
fucomip
dec
lahf
sbb
cmp
mov
mov
cmp
fdivr
addr16
cmpsl
mov
shll
sbb
sbb
push
fmuls
sarb
mov
ret
jno
out
imul
pop
jbe
and
imul
push
popa
dec
dec
nop
movsb
inc
ljmp
decb
or
mov
in
inc
cmp
cmc
xchg
popf
fwait
dec
cwtl
dec
bnd
push
jo
adc
inc
cmp
xchg
nop
icebp
xchg
bound
mov
jle
mov
push
cltd
and
sub
cmp
lods
adc
pop
das
dec
stos
out
and
insl
lcall
pop
cmp
sbb
loopne
out
hlt
out
mov
orb
movl
jle
pop
adc
jmp
sbb
xor
cmp
push
sub
and
das
fstpl
mov
add
add
mov
mov
push
aaa
mov
pop
pop
test
adc
mov
xchg
xlat
sub
cwtl
repz
sahf
imul
sbb
fs
sbb
xchg
xchg
mov
cld
cmpsb
cmp
andb
pop
dec
push
push
sub
lcall
xchg
xchg
push
pop
jg
cli
shl
jl
jne
movb
mov
outsl
xchg
cmp
ja
xchg
imul
data16
mov
or
adc
sbb
adc
inc
js
aaa
cmp
dec
inc
std
test
iret
and
pop
jecxz
push
sub
pop
gs
repz
xchg
push
push
adc
outsb
adc
push
into
inc
daa
pop
sti
jnp
sub
fistl
mov
aad
in
shll
jb
iret
adc
cli
cmp
test
and
add
rorl
loop
test
shrl
repnz
repz
push
pop
mov
pop
mov
imul
push
cld
mov
or
jnp
push
test
and
addb
mov
adc
sub
aaa
xchg
cmp
xor
gs
mov
sub
mov
pop
sub
fidivrl
jnp
mov
leave
pop
stos
jl
orl
push
icebp
mov
divl
dec
jne
push
ret
in
mov
pop
test
aaa
cmp
mov
in
shr
aaa
dec
inc
cmp
push
lret
xchg
mov
adc
mov
mov
and
jmp
sub
pop
xchg
mov
or
push
arpl
lea
mov
push
pop
fstpt
jmp
push
and
push
dec
jge
aad
fstpt
clc
jecxz
pushf
loop
cwtl
bnd
xchg
lcall
mov
and
addl
lods
xor
push
test
inc
mov
xchg
pop
stos
aaa
pop
push
fidivl
mov
stos
mov
pop
adc
lret
mov
icebp
flds
into
cmp
outsl
fsts
mov
hlt
insb
test
xchg
xlat
mov
sub
pop
test
test
add
jo
jge
xchg
cltd
push
sub
inc
hlt
add
sub
push
movsb
insb
mov
push
into
rclb
pop
cmp
push
std
insl
sahf
dec
pop
xchg
enter
cmpsl
add
mov
fidivl
clc
lods
jb
or
jg
sbb
push
pop
pop
in
out
aas
pop
aaa
inc
pop
mov
mov
dec
jecxz
fisttps
adc
push
or
popa
repz
nop
dec
xorl
inc
adc
pop
push
ret
add
lahf
test
jle
gs
push
dec
mov
jnp
jp
fisubl
imul
out
or
in
fistl
stos
lods
in
inc
cmpsl
dec
mov
mov
push
push
or
mov
jecxz
outsl
mov
xchg
imul
lods
ja
outsl
imul
mov
popf
and
fisubrl
xchg
test
adc
popf
mov
or
mov
shlb
xchg
xor
cmc
adc
fdivs
adc
jbe
mov
lret
test
or
in
mov
cltd
mov
inc
sub
mov
dec
aas
mov
xor
push
roll
sub
push
arpl
sbbl
and
cmc
loope
out
mov
fstl
inc
dec
or
dec
mov
adc
mov
push
adc
jne
movsb
test
or
aam
mov
and
nop
gs
pop
test
rorl
mov
xchg
sarl
jg
push
movsl
inc
outsb
push
lods
or
hlt
inc
fnstsw
inc
mov
dec
das
sbb
cmp
fildll
jle
data16
push
addb
jo
ds
pop
ss
fsubrs
daa
sahf
cmpsl
movsb
pop
pusha
test
dec
xor
push
aas
in
les
add
mov
mov
loopne
inc
sub
adcl
stos
aaa
xor
xor
cmpsb
push
mov
pop
iret
sti
daa
dec
nop
fcmovbe
dec
bound
mov
jmp
fdivrs
sbbb
repz
add
jno
movsl
and
fidivrl
jb
ret
stos
jbe
and
dec
and
pop
xor
fimull
clc
jl
xor
sbb
sbb
cmp
mov
jge
jno
xchg
push
rorb
add
movsl
mov
dec
nop
je
adc
mov
rcrb
push
mov
jb
sbb
or
jnp
mov
push
rcll
cli
leave
fldl
out
std
mov
in
orb
hlt
leave
inc
fistps
scas
sarb
add
lret
or
orb
sub
xor
jnp
add
push
or
nop
and
mov
loope
hlt
fsubrs
movsl
sahf
stos
test
and
xlat
cmp
pop
jno
mov
shlb
mov
aas
adc
outsb
lahf
add
mov
sub
lods
lods
add
pop
or
push
xchg
cmp
sub
jno
push
dec
scas
andb
int
and
dec
dec
jae
xchg
nop
pop
pop
fwait
fsubs
cmpsb
lock
ds
roll
inc
mov
push
xor
and
push
xchg
pop
std
fucom
test
adc
lods
and
adcl
inc
xor
pop
add
scas
orl
jo
inc
push
scas
mov
into
mov
add
adc
inc
lss
inc
jge
int
mov
jb
adc
int
out
test
adc
inc
mov
sub
gs
imul
pop
cmp
cs
pusha
pop
ljmp
mov
mov
fisubrl
bound
aam
cmc
pushf
xchg
add
call
dec
mov
bound
call
mov
lret
add
or
jle
movsl
xchg
pop
call
ret
mov
out
fstpt
insb
mov
fsubr
stos
sarb
das
mov
mov
add
aad
cli
imul
jae
jmp
or
jbe
cmpsb
fldenv
lcall
js
pop
aaa
xchg
mov
or
sbb
cld
or
inc
mov
ficoml
cmp
stos
js
jle
mov
test
fnstcw
int
add
daa
adc
shll
cmpsb
ss
jg
jge
mov
mov
loopne
xor
iret
add
jecxz
test
nop
inc
mov
add
lods
pop
xor
lahf
test
dec
mov
or
jmp
cmc
cli
jp
popa
into
push
or
sahf
inc
dec
jns
jp
mov
dec
imul
test
or
mov
xchg
lea
dec
mov
lock
and
and
mov
repz
mov
lods
or
out
jge
push
cwtl
xor
mov
mov
fmuls
lret
mov
lret
js
loopne
xor
push
push
stos
xchg
push
add
mov
fidivrl
mov
mov
xor
adc
push
and
negl
inc
xor
add
adc
outsl
in
mov
dec
test
lcall
xchg
int3
inc
adc
push
iret
dec
jns
roll
pop
jbe
push
jmp
jg
mov
mov
sahf
add
jbe
shrl
ljmp
or
lcall
sub
dec
addr16
mov
int3
pop
mov
push
lret
mov
loop
movsl
and
cwtl
jl
icebp
mov
cmpl
fs
dec
push
mov
xchg
jnp
adc
add
enter
sub
loope
dec
inc
mov
imul
mov
notb
cmpsb
ss
dec
stos
jbe
and
fcmovbe
cmp
dec
xor
inc
sbb
adc
cmc
scas
add
cltd
fildl
pop
insl
push
cld
xor
imul
decl
xlat
adc
fcom
mov
mov
mov
jl
mov
push
rcr
jne
das
and
jg
repz
inc
dec
cmpsb
flds
cmc
push
and
insl
jo
mov
ss
cmpsl
leave
jecxz
pop
bound
movsl
dec
push
xchg
push
gs
repnz
xor
hlt
andb
scas
ret
cwtl
std
out
ret
push
jmp
call
insb
xchg
fstpt
and
lock
xchg
adc
mov
jp
bound
push
inc
dec
insb
xor
test
mov
aad
cmpsb
roll
popa
and
push
mov
sbb
dec
lods
pop
cmpsb
pop
push
lahf
cmp
xchg
outsl
outsb
out
cs
cmpsb
mov
imul
aas
arpl
adc
jb
shrb
jbe
mov
aaa
sub
jno
hlt
dec
cli
lods
mov
or
mov
lret
sbb
stc
mov
push
ret
push
or
imul
js
test
rol
push
mov
mov
addr16
outsb
inc
popa
dec
out
mov
stos
push
mov
mov
mov
push
sbb
imul
jp
pop
sbb
movsl
iret
mov
outsb
into
dec
insl
enter
lea
jae
inc
fstps
inc
dec
shrl
or
inc
add
mov
subl
outsb
xchg
pop
int
add
dec
inc
pop
inc
mov
js
jle
cli
sar
mov
iret
int3
sub
adc
outsl
das
jns
cmp
cmpsb
jae
stos
sbb
mov
sub
adc
fnstsw
push
in
rorb
rcrl
rclb
orb
clc
mov
sub
push
das
and
daa
pop
jle
xchg
je
lcall
hlt
and
daa
adc
jo
insb
sub
sarl
lods
jne
jle
and
or
and
xchg
dec
xchg
xor
xchg
nop
stos
aas
jno
push
jecxz
dec
and
and
adc
rcr
inc
dec
loop
fidivrl
jo
fisttps
aam
lods
jae
pop
movb
sub
cmpb
xchg
aad
fwait
cwtl
mov
xor
mov
push
mov
sbb
sub
jne
xchg
imul
idivb
push
mov
push
enter
fucom
cmp
fsubrs
in
nop
in
inc
xor
jg
rorb
push
rorb
mov
mov
stos
push
push
mov
daa
mov
sub
popa
ss
loopne
or
mov
and
xor
addb
outsl
sahf
inc
movsb
mov
fisttps
pop
fmull
inc
push
xchg
sbb
cwtl
rorl
push
data16
lea
lock
jp
pop
lods
sbb
dec
loop
cmp
adc
mov
xor
jnp
pop
push
jg
xor
fnstenv
or
dec
adc
out
cmc
nop
mov
rcll
cltd
sub
cmp
aam
shlb
lods
mov
testl
cmp
push
enter
jbe
jl
jnp
call
adc
xor
jle
gs
stc
repnz
loopne
push
xchg
icebp
adc
xchg
fldenv
into
jmp
pop
cmpsl
add
mov
mov
add
sbb
scas
dec
pop
add
mov
jecxz
repz
pop
repnz
fcomp
cmpsl
jecxz
mov
jecxz
dec
incb
sub
cmp
jp
push
enter
test
fstps
jge
and
sahf
jne
pop
pop
jge
push
sbb
mov
pushf
repz
test
push
dec
je
cmpsl
sub
mov
cwtl
mov
test
icebp
xor
ret
jo
stc
stos
xor
aas
decl
mov
mov
inc
outsl
xor
lret
pushf
and
lock
sbb
sbb
cmp
push
insb
daa
adc
fsubl
xchg
jmp
inc
jbe
into
leave
imul
sbb
movsb
xchg
jmp
stos
sub
repz
outsb
cmp
lock
jb
es
lret
cld
mov
incb
shrl
mov
call
adc
test
dec
std
icebp
daa
dec
xchg
push
mov
stc
enter
stos
jns
gs
lea
pusha
out
cli
pop
or
fcomps
outsb
push
add
test
pop
ds
xchg
out
dec
in
ss
ficoml
mov
adc
sbb
fsubs
pop
test
stc
cmp
daa
xor
or
dec
fidivs
pushf
jl
adc
xor
push
scas
pop
aaa
cli
jae
add
sub
fbld
xlat
sub
mov
ffreep
pop
mov
out
mov
xchg
pushf
inc
pop
xchg
cmp
fidivrs
js
mov
loop
js
mov
adc
lds
cwtl
jno
mov
xchg
mov
xchg
xchg
call
jnp
adc
bound
aas
outsb
sub
cmp
out
sub
ljmp
push
inc
mull
leave
loop
mov
mov
cs
xchg
pop
jmp
add
notl
arpl
jle
cld
jmp
mov
sub
hlt
xor
aas
push
orb
and
inc
inc
mov
shl
movsl
or
mov
aad
jecxz
imul
loopne
test
mov
daa
pushf
pop
pop
imul
xchg
xchg
mov
int
imul
bound
jno
test
in
mov
int3
outsb
add
out
and
xor
and
push
lock
imul
lret
ret
sbb
testb
or
mov
xchg
je
lock
xor
fists
lret
mov
mov
sahf
dec
in
scas
pop
mov
and
sub
jb
test
call
ret
fwait
and
adc
add
andb
pop
lds
out
pop
mov
cli
xchg
mov
negb
addr16
movsl
sbb
push
sub
andl
push
lcall
mov
dec
jae
jne
mov
mov
clc
subl
stos
pushw
popf
inc
test
pop
inc
sub
dec
mov
xchg
test
pop
addr16
lods
mov
scas
insl
sbb
add
lret
fwait
or
cmpsb
lcall
fistpl
iret
addr16
negb
lds
fwait
mov
fsubs
or
sbb
mov
xor
test
xorb
cmc
xor
mov
jp
lds
sbb
push
stos
test
xchg
inc
dec
les
ds
push
mov
and
pop
cmp
lods
cmp
pop
mov
clc
movsl
inc
cmpl
adc
xchg
inc
mov
ret
fidivl
or
lahf
pusha
or
sahf
jle
sbbl
lret
pop
out
cmp
sahf
xchg
ds
test
nop
push
pop
sub
imul
or
push
and
mov
pop
adc
ds
mov
repz
pushf
mov
scas
and
aas
and
leave
inc
xor
arpl
aas
cmpsb
test
mov
push
push
gs
mov
cmpsb
ss
sub
jecxz
push
lea
cmp
xor
out
negl
push
loope
es
and
test
xchg
mov
cmc
cmpsl
cmp
cli
mov
adc
jg
insb
xchg
daa
add
fldenv
movsl
jbe
test
xchg
aad
mov
arpl
pusha
cmp
add
mov
pop
jb
xchg
outsb
aas
test
sub
vmovd
test
mov
cmp
test
sub
xchg
jecxz
test
ja
adcl
pop
inc
push
pusha
popa
ret
cwtl
pop
scas
fmull
xchg
mov
cmp
xchg
leave
sbb
cltd
dec
xchg
mov
jo
lret
pop
xor
mov
out
pop
fsubp
cmp
stos
lods
rolb
jecxz
leave
sbb
fsts
insl
rcll
iret
mov
jmp
inc
dec
mov
push
sbb
xchg
inc
dec
mov
lods
xchg
mov
adc
sarl
dec
inc
fidivrs
lods
and
nop
in
ret
xorb
mov
or
push
mov
jmp
loope
push
testl
and
xchg
add
jne
mov
dec
dec
sub
fwait
cmp
mov
out
mov
mov
in
adc
jnp
jle
fildll
imul
cwtl
xor
loop
out
andl
or
jmp
and
cmpsl
mov
loopne
inc
lret
push
mov
push
fwait
jnp
std
test
js
jb
stos
jae
or
addr16
iret
addr16
ret
popf
outsb
jns
push
dec
nop
jb
sub
imul
mov
cmpsb
negb
fistpl
xor
pop
mov
lret
lcall
jg
lock
in
xchg
mov
cmc
mov
addr16
mov
inc
out
rorb
or
aad
loope
dec
lret
insb
inc
aas
mov
movsb
repz
clc
mov
les
cmp
enter
cli
sub
pop
xor
cmp
mov
shrl
out
push
cmc
into
call
add
add
add
rcl
cs
pop
rcpps
iret
pop
sub
cwtl
cmp
mov
outsb
imul
daa
mov
arpl
int3
mov
outsl
jns
aaa
dec
xchg
shll
filds
lret
mov
sbb
mov
mov
pop
mov
int
dec
cmp
mov
cmpsl
outsb
cmp
rolb
fisubs
imul
test
dec
out
daa
push
shr
lret
ss
imul
lea
add
adc
and
jl
dec
lcall
fwait
add
lock
mov
push
adc
out
push
sub
dec
xor
aas
adc
fcompl
cmp
and
out
loop
and
cmp
xchg
pop
sbb
sbb
rorl
jmp
in
daa
jecxz
cs
mov
cmp
mov
sub
mov
shll
mov
ja
mov
ret
out
cs
jo
cmp
out
and
in
test
mov
pop
push
dec
mov
clc
mov
das
pop
movsb
cmp
inc
xor
push
lock
fdivp
or
sbb
mov
sbbb
mov
mov
cs
fsubrl
push
inc
mov
fcmovbe
nop
adc
or
scas
jbe
fisubs
and
or
lock
cmp
xorb
es
mov
add
mulb
inc
std
push
int3
sub
inc
jns
iret
es
icebp
loopne
xchg
mov
jp
and
fildl
fildl
adc
call
push
subl
movsl
mov
repz
fldcw
xchg
sub
aad
push
jg
sub
jg
out
pop
pop
sbb
push
insb
enter
pushf
repnz
lods
jmp
notl
daa
mov
je
xchg
or
pop
loope
mov
sbb
adc
aaa
aas
lods
push
pop
iret
shll
aas
clc
imul
mov
loop
jne
sub
xlat
imul
adc
xor
jmp
mov
sub
mov
mov
pop
push
cmp
and
clc
insl
imul
add
mov
xchg
jb
dec
pop
movsb
dec
addr16
arpl
out
sahf
mov
mov
pop
subb
cmp
sbb
cmp
xor
mov
xor
inc
or
sub
mov
mov
jbe
mulb
shlb
push
sub
rcll
sub
cmpb
and
in
jl
cmp
test
insl
jns
jae
fcom
aam
js
in
push
cmp
sbb
inc
ss
pop
pop
add
in
sub
rorl
push
insb
inc
jge
sbb
cmpsl
arpl
jae
sub
imul
repnz
loop
call
push
orl
and
and
aad
lea
fwait
dec
or
fwait
loope
push
sub
lahf
incl
mov
cmp
lea
and
lds
stc
cltd
or
outsb
pop
int3
or
std
mov
stos
into
mov
push
daa
in
and
xchg
test
int
loope
mov
and
push
lds
cltd
fld
mov
push
pop
cmp
aas
fldenv
pop
test
xchg
pop
ds
mov
adc
out
sub
sub
cltd
int
lock
test
test
ds
push
mov
icebp
sub
mov
adc
push
je
subl
sub
stos
jae
out
mov
fsubrl
add
or
lods
sub
lcall
imul
in
push
mov
negb
mov
std
cmp
in
pusha
or
leave
mov
add
clc
fucomi
push
rorb
or
repnz
sub
push
lcall
fcompl
mov
imul
lods
inc
cld
popf
mov
cli
fsts
cltd
push
inc
in
mov
and
inc
xor
xor
push
sbbl
mov
daa
imul
jo
adc
add
and
aad
out
push
cmpsb
add
js
cld
push
cmc
xchg
sbb
shll
push
push
mov
xchg
vmovdqa
sub
mov
pop
mov
xchg
mov
dec
sub
or
shr
jne
and
movsl
push
in
cmp
repz
cmp
out
lret
mov
mov
lods
add
leave
sbb
xchg
cltd
cltd
xor
jmp
cmpsl
mov
aad
xchg
shl
mov
mov
pusha
outsb
lret
int
call
aaa
push
inc
aas
mov
aam
jmp
outsb
icebp
popf
scas
dec
sahf
lret
jae
cmpsl
sbb
cltd
popl
popa
adc
mov
mov
std
lret
xchg
or
cmpsb
test
fcoml
orl
lods
adc
cmp
add
mov
test
movzwl
repz
shrl
mov
out
popl
mov
xchg
iret
xchg
push
inc
add
sub
jg
dec
inc
movsl
icebp
fmuls
jns
std
push
lahf
and
jecxz
xor
ret
popf
pusha
int3
inc
stos
lret
pop
pop
and
pusha
lret
adc
jne
or
rorb
add
icebp
cmpsl
sahf
ffreep
push
dec
enter
in
repz
test
dec
mov
pop
test
or
les
mov
in
jbe
clc
scas
mov
sub
mov
arpl
ret
xor
leave
push
adc
loope
nop
cmp
jg
jae
aad
xchg
jno
les
xor
mov
mov
xor
out
mov
mov
or
ljmp
and
inc
mov
lcall
fcmovnbe
push
jbe
pop
aaa
out
mov
push
mov
dec
sbb
jb
lock
jns
push
movsl
pop
aam
cmp
hlt
shll
ja
jg
pop
lret
cmp
and
aam
notb
jl
dec
jne
test
cmp
out
insb
and
add
mov
pop
and
xchg
icebp
or
in
fucomi
cmp
mov
xorl
addr16
jl
imulb
lret
fldt
leave
cmp
stc
dec
cmp
rcll
insb
inc
ficomps
add
scas
jl
lcall
loop
and
pop
jmp
and
jbe
pop
aaa
xchg
shlb
fucomip
fcomps
out
inc
sub
lcall
dec
push
pop
je
out
fsub
mov
and
movups
arpl
sbb
scas
repnz
negb
or
xchg
and
mov
fadd
jl
loope
ret
or
push
xchg
mov
mov
ret
enter
inc
fstpl
xorb
repnz
mov
cmp
movlps
pushf
arpl
push
sbb
push
movsb
mov
movsb
aam
xchg
xor
stc
jl
sbb
sub
in
mov
mov
leave
out
or
jo
inc
push
sub
in
test
adc
xchg
mov
push
sub
dec
test
pop
rcll
adc
pop
pop
into
push
outsl
int
xchg
ficomps
lcall
jg
dec
imul
xor
ret
push
fidivrl
cmp
dec
stos
test
das
push
cmpsl
xor
jns
xor
fimull
jle
mov
lods
cmp
movsl
xchg
roll
or
test
popa
and
add
repz
addr16
add
sub
outsb
mov
sbb
push
lock
pop
scas
das
and
aad
ja
xchg
movsl
sbb
mov
cwtl
daa
int3
xchg
xor
cltd
sub
lret
push
cmc
arpl
call
add
call
adc
popf
pop
rcll
mov
popa
xchg
push
lret
cmp
dec
iret
adcb
cmc
out
add
shll
or
aas
cli
cmpsb
arpl
clc
int
push
push
push
shl
inc
jge
and
int
sub
rcr
fidivl
lock
fisttps
xor
test
repz
pop
sub
addr16
mov
push
mov
rolb
and
inc
cld
push
sti
or
xchg
xchg
xor
xlat
push
push
sbb
pop
movsl
pop
rolb
jno
mov
ret
daa
lock
adc
test
insb
adc
xor
and
push
outsl
jns
xchg
cmp
out
faddp
scas
mov
mov
mov
das
es
mov
imul
addb
inc
jne
jmp
xchg
mov
jmp
lds
hlt
ret
push
xchg
mov
inc
mov
cmpsb
ret
xchg
loop
ja
xor
sbb
aam
lock
scas
arpl
ja
nop
and
dec
push
push
mov
push
jno
aam
and
cmpb
int
add
mov
ret
sub
sub
cmc
jne
les
scas
xchg
add
adc
mov
sbb
push
addr16
xlat
xchg
cmpl
notl
pusha
aam
cli
sub
cld
movsl
cld
mov
add
int3
pop
pop
add
fwait
push
aaa
mov
and
popf
loope
jp
in
pop
inc
iret
adc
pop
jg
push
cmp
lahf
mov
lret
inc
sub
push
xchg
sub
pop
or
adc
rcrl
xor
in
pop
std
add
in
mov
mov
das
ret
leave
inc
mov
pop
repz
testb
mov
hlt
jmp
cwtl
jecxz
lret
adc
mov
sub
lcall
inc
call
les
fstp
lret
sub
and
xchg
punpckhwd
sub
inc
std
addr16
mov
mov
cmp
adc
cltd
outsb
jmp
test
enter
mov
dec
fcomps
in
lret
das
hlt
or
pop
pop
fs
jle
fiaddl
into
adc
cs
mov
orb
or
out
adc
iret
and
adc
fstl
clc
roll
sarl
testb
and
js
lret
imul
mov
loopne
dec
push
push
mov
aad
fcmovu
call
stos
inc
sub
add
and
sub
dec
sti
in
cwtl
xor
xchg
bound
shlb
jbe,pn
or
sarl
sbb
or
cld
cmp
jne
mov
ds
and
in
pushf
es
jbe
sbb
jb
mov
testb
sbb
add
cmp
and
sub
cs
mov
addr16
in
mov
out
cmp
cmpb
mov
loop
jge
cmpsb
cmp
fists
scas
xor
xchg
scas
mov
mov
mov
daa
push
ljmp
lret
and
int
xchg
dec
mov
mov
mov
pusha
mov
call
and
sahf
dec
mov
mov
jb
xorl
gs
outsl
pop
pop
rol
jnp
jmp
mov
rol
dec
imul
xor
push
mov
cld
stc
mov
int
in
mov
fs
imul
dec
test
add
mov
fisttpl
shll
sbb
sti
cmc
push
ljmp
mov
xor
or
or
fistpll
rorl
push
fdivrl
add
jl
shrl
mov
pop
mulb
gs
icebp
mov
faddl
int
jnp
idivb
fildll
addr16
iret
movsb
sub
insl
pop
adc
mov
or
xor
lea
xchg
push
lret
pop
xchg
jno
in
lods
add
fsubs
inc
dec
inc
fsubl
adc
aas
sub
push
outsl
sbb
fcmovbe
push
cmp
or
and
inc
mov
orb
xchg
fwait
push
and
cmp
and
daa
in
das
adc
jae
subb
aad
jno
push
shrl
clc
fcom
aas
mov
fs
imul
lcall
sbb
test
cmpsl
mov
fstl
addl
rcr
loope
mov
push
or
lds
into
inc
ljmp
adc
add
jno
sbb
ret
out
sub
xchg
movsl
inc
pusha
lea
lret
sti
adc
mov
jo
cs
xor
push
out
aam
stc
jno
add
mov
add
push
repz
insb
cs
or
popa
inc
cmpsl
mov
sub
adc
inc
aas
fimuls
sub
lea
pop
adc
cmp
stc
mov
fists
push
aad
ror
mov
jmp
dec
xchg
pop
sub
sub
out
mov
out
lret
in
inc
mov
test
jae
mov
test
jbe
or
sti
repz
shl
cld
cmp
leave
jo
orb
insb
xor
andb
sub
or
jae
push
es
roll
fwait
dec
lock
push
and
or
cmp
sub
mov
lds
mov
inc
mov
stos
cwtl
addl
push
mov
cwtl
aaa
cmpsl
icebp
mov
mov
cmpsl
les
lcall
mov
sbb
push
add
mov
cwtl
test
mov
mov
mov
imul
mov
xor
cld
scas
movsb
dec
test
push
pushf
sahf
ss
sbb
dec
sbb
mov
pop
cli
je
pop
jge
xor
jle
fisttpll
jmp
mov
fdivrs
adc
stos
dec
repz
push
push
sbb
les
inc
fimuls
fsubrl
cltd
aas
stos
aaa
rol
scas
pop
lcall
mov
xlat
rcrl
lock
sbb
aas
or
sbb
and
outsl
xchg
lods
movsl
lret
stos
xor
out
lock
pop
rcr
loop
inc
mov
or
and
inc
dec
lods
jne
push
das
sub
sub
call
pop
xchg
js
cld
out
mov
orl
sahf
rcrb
test
sub
sub
pushf
cmc
mov
cli
mull
xor
out
pop
shlb
jbe
sbb
std
adc
pop
xchg
push
ss
dec
push
mov
stos
pop
mov
mov
sbb
into
add
adc
mov
sbbb
roll
leave
xor
lock
sbb
fs
jo
sub
call
sbb
pop
jle
inc
xorb
in
pop
mov
xchg
mov
fs
movaps
popf
xchg
in
jmp
push
ja
mov
js
jae
scas
xlat
inc
jbe
and
fsubs
int
xchg
std
dec
add
inc
repz
pop
aad
popf
cmp
movsb
xor
mov
cld
mov
adc
sbb
in
push
sub
and
mov
ret
out
xchg
in
dec
enter
mov
sbb
insl
mov
std
sbb
pushf
xor
dec
popf
jb
inc
mov
ds
mov
push
aam
adc
out
add
fsubrs
and
xchg
adc
mov
sbb
pushf
movsl
enter
addr16
push
lahf
dec
fsubr
insb
push
sub
jge
decl
movnti
sub
pop
inc
sub
jo
push
pop
xor
mov
pop
movsb
icebp
cs
fildl
mov
xor
adc
xor
and
mov
je
push
mov
and
repz
shll
movsl
pushf
cmc
push
cmp
mov
pop
rcl
mov
dec
add
insl
xor
push
xchg
mov
jp
mov
fs
mov
dec
mov
jle
int3
mov
popf
rcr
push
xchg
out
je
daa
cld
cmp
xchg
add
data16
jecxz
addr16
aam
out
insb
and
sti
insl
test
aam
and
call
stos
hlt
and
inc
and
lock
arpl
xchg
out
aaa
je
dec
sub
je
mov
rorb
dec
mov
fmull
int
or
aas
arpl
xchg
leave
push
mov
jno
adc
mov
iret
aaa
lea
inc
mov
inc
cwtl
out
lods
mov
and
fdivs
adc
fcoms
lea
loopne
int3
sbb
xchg
int
mov
dec
or
mov
xchg
pop
and
std
pop
inc
jle
sti
xor
mov
mov
imul
rorl
mov
mull
fstpt
and
hlt
jae
cmc
jmp
loop
ret
jg
and
or
imul
inc
popa
scas
dec
push
ret
cld
sbb
pop
inc
out
inc
cmc
lahf
jge
repnz
adcl
in
in
cltd
loopne
dec
out
sbb
cmp
xor
dec
and
jae
inc
into
int3
aaa
adc
push
inc
ja
push
lret
and
outsb
sub
jmp
mov
jo
lock
xlat
mov
call
scas
jmp
jns
shl
testl
xchg
push
stos
flds
inc
enter
stc
fadds
push
mov
call
xchg
pop
leave
jp
mov
test
mov
inc
cmp
cmp
faddp
mov
mov
mov
ss
dec
lods
mov
xchg
sahf
xchg
fnsave
jle
adc
sub
xor
sub
iret
clc
push
pop
lock
push
adc
loopne
adc
sub
sub
push
push
jb
addl
fwait
mov
addl
and
pop
push
call
cwtl
mov
xchg
xchg
xlat
loopne
repnz
outsb
outsl
cmp
fistpll
sti
mov
cmp
sbb
dec
fisubl
idivl
xchg
mov
jmp
add
xchg
or
sahf
mov
xchg
fnstenv
add
fs
rcrb
out
mov
mov
cmp
cli
jmp
les
imul
outsl
lods
les
xchg
mov
test
jg
pop
adc
jbe
adc
dec
ret
xchg
adc
jne
xor
ja
jle
jp
cmpsl
clc
push
dec
jl
loope
ds
std
mov
popf
data16
adc
faddl
push
add
cmp
mov
inc
or
aaa
call
xchg
mov
mov
nop
cmpsb
mov
test
popf
popa
pop
aaa
push
xchg
loop
in
cmp
test
sbb
movsl
sti
sub
inc
icebp
mov
fists
and
cmp
loopne
xchg
cmpsb
inc
xchg
cmpsl
aad
add
sub
lcall
mov
mov
aad
aas
pusha
dec
jns
fists
add
xchg
pop
insb
xor
xchg
mov
pop
loop
leave
push
iret
xchg
cmp
mov
test
pop
cmp
movsb
jmp
outsl
ficomps
jne
pop
popf
cmp
and
fbld
mov
push
std
movsb
enter
adc
fcmovu
inc
mov
inc
push
sub
leave
sarl
iret
sbb
cmpb
push
mov
fsubs
sbbb
inc
fnstsw
push
imul
roll
enter
xchg
adc
and
cmpb
jae
mov
je
fdivrl
add
push
pop
inc
stos
fcomps
cmc
xor
push
mov
pop
ljmp
ret
xchg
daa
mov
add
pop
mov
out
sbb
pop
mov
jnp
xchg
pop
push
and
pop
add
nop
push
mov
leave
mov
jne
rcr
insb
xor
xchg
repnz
mov
push
xlat
lahf
pop
wrmsr
xchg
xchg
enter
jmp
jecxz
ds
or
mov
xchg
inc
mov
push
jecxz
mov
shrb
aas
int
call
pop
data16
loopne
ret
sahf
repz
xchg
aad
pop
in
sahf
sbb
and
outsl
ja
sbb
mov
ds
add
hlt
push
test
rorb
push
ret
std
cmpsb
popf
inc
add
push
scas
push
mov
xor
fwait
sti
inc
pop
cmp
pop
sbb
cs
mov
scas
test
callw
aas
in
ret
and
adc
ljmp
pop
jge
out
das
enter
xchg
loope
cmp
loope
jmp
stos
test
dec
xchg
or
int
shrb
mov
pop
cmp
push
jns
cmpsb
mov
push
adc
ja
mov
or
sub
pop
test
outsb
scas
mov
mov
fcmove
outsb
repz
leave
dec
test
push
int3
les
cltd
shl
cmp
xchg
popf
or
jge
movsb
lods
mov
mov
mov
cmp
mov
out
out
add
add
pop
lss
ja
scas
ficoml
xchg
loopne
movsb
pop
pop
sbb
call
icebp
cmpsl
out
call
and
neg
in
xor
outsb
les
mov
and
pop
jl
sbb
mov
lret
xor
pop
adc
cmp
pusha
dec
std
cs
fisttpll
pop
or
mov
loope
cwtl
popf
loopne
inc
movsb
add
pop
stos
and
scas
xor
mov
arpl
lcall
xchg
aaa
in
dec
lcall
pop
inc
mov
push
xchg
jl
cltd
jne
in
cmp
pop
pop
cmp
cs
mov
dec
call
sub
insl
out
push
fmull
mov
lock
loop
jb
lock
cmpsl
fistps
cmp
je
bnd
into
xchg
push
aad
pop
outsl
aas
cmpsl
icebp
mov
pop
ror
lahf
aaa
scas
push
das
out
jnp
pop
imul
loopne
add
xchg
pop
xor
cmp
cmp
stc
dec
pop
adc
or
cmc
dec
pop
and
push
add
rol
or
dec
dec
push
mov
pop
push
jns
les
hlt
lcall
jb
adc
jmp
mov
sub
pushf
iret
lret
sub
das
mov
mov
jmp
cmc
int3
cmp
add
push
mov
nop
sar
in
lods
xlat
add
adc
push
add
hlt
mov
jecxz
sub
cli
jmp
pop
out
push
push
jg
inc
xor
push
test
and
push
jge
lods
out
fndisi(8087
sbb
cmp
mov
lahf
aad
and
jbe
mov
repz
int3
add
xor
add
fidivrs
xor
push
mov
rcrb
testl
mov
fistpl
push
xchg
lock
sbb
sti
cwtl
ljmp
jge
sub
sub
addr16
lds
movsb
pop
jle
mov
or
pop
and
jmp
cmpsb
mov
mov
cli
jne
rol
jbe
lcall
test
out
dec
and
mov
pop
dec
sub
cltd
fstps
mov
add
insb
bound
pop
out
pop
push
mov
mov
sub
add
mov
test
mov
icebp
loope
scas
insb
push
icebp
or
jge
sbb
outsl
aaa
jge
fs
ret
lock
pop
dec
aas
push
cmovs
je
test
mov
int
test
repz
or
movsl
subl
xchg
inc
pusha
les
mov
mov
xchg
adc
cltd
lods
push
mov
movsb
xor
push
popa
sbb
mov
push
mov
sub
je
mov
jbe
addl
ud1
mov
jecxz
inc
mov
push
sbb
or
lahf
dec
cwtl
in
mov
pop
cmpsl
jns
cltd
mov
pop
leave
pop
mov
lea
es
ret
mov
daa
lock
repnz
push
mov
rcrl
dec
out
fdivrl
roll
mov
xchg
loopne
sub
and
test
insb
jl
mov
enter
hlt
iret
jl
pusha
adc
mov
js
aas
adc
cmc
sbb
test
neg
dec
mov
orl
and
cmc
pusha
pushf
mov
ja
dec
lods
add
adcl
xchg
int
xchg
dec
jne
or
gs
push
inc
or
pop
sar
pop
lea
cwtl
sti
add
mov
jl
ja
in
fadd
sub
outsl
push
pop
daa
and
xlat
pop
aad
aas
mov
and
repnz
cmp
pop
repnz
inc
fs
mov
cmp
fadd
mov
and
mov
dec
psubusb
jne
mov
mov
clc
jecxz
and
pop
int3
ljmp
aaa
adc
jnp
movsb
mov
das
jmp
pop
jne
adc
scas
je
pop
int
push
pushf
xor
pop
testl
sub
xor
cmpsl
mov
and
jl,pt
sbb
sar
xor
out
cmp
imul
inc
es
jnp
xor
pop
into
mov
aaa
xchg
int
and
scas
js
jge
push
inc
mov
adc
testb
pop
jg
fidivrs
call
sub
jbe
subl
pop
iret
aam
xchg
aas
rolb
dec
jg
repnz
imul
out
notb
dec
cmp
and
sub
into
sbbl
xor
mov
push
jmp
sub
adc
jbe,pn
shlb
cmp
scas
pop
int3
xchg
or
dec
test
jmp
push
jne
dec
imul
imul
xlat
movd
lahf
add
dec
xchg
mov
pop
lahf
pop
inc
jnp
add
pushf
es
loop
or
iret
mov
and
pushl
xor
ret
inc
dec
int
mov
test
das
scas
inc
mov
lea
xor
in
cltd
and
in
sub
or
sub
sbb
xchg
cld
mov
in
xchg
ss
xchg
mov
mov
into
popf
movsl
pop
nop
loop
jb
push
mov
dec
jbe
imul
xchg
shlb
ss
sbb
and
pop
xchg
stos
es
mov
xchg
push
loope
push
int
xchg
arpl
or
std
test
inc
dec
mov
mov
sahf
sub
int
in
sbb
inc
out
gs
fdivr
jbe
cmp
out
add
and
incb
mov
or
push
or
mov
adc
mov
popf
sbb
pop
stos
inc
out
call
jg
push
lret
inc
sti
sub
dec
aas
cmp
xchg
dec
adc
cmp
push
dec
mov
mov
push
xchg
xor
xchg
out
pop
dec
add
popa
sbb
xchg
xchg
das
cwtl
call
mov
inc
cli
cmp
sub
push
mov
loope
inc
out
push
dec
inc
jmp
std
mov
xor
and
and
add
xor
fcom
sub
mov
push
push
imul
aas
rclb
jmp
fnstsw
subl
int3
pop
xchg
lds
mov
or
repz
ljmp
mov
push
sti
rcll
pop
fsin
int3
mov
das
insl
mov
repz
loope
push
int3
or
dec
imul
pushf
xchg
sub
pop
inc
out
pop
daa
jbe
or
pusha
popa
sahf
xchg
jno
mov
jl
xor
jl
movsb
outsl
nop
cltd
testl
jae
add
or
sarb
mov
mov
push
mov
aad
nop
popf
imul
cltd
inc
mov
mov
icebp
push
ficoml
xor
adc
add
add
xor
test
push
das
sbb
pop
fs
aam
out
mov
cmpb
test
inc
xchg
lahf
cmpsl
mov
xchg
add
ljmp
xchg
and
adc
xchg
xor
cmp
scas
cmp
pop
fwait
ds
mov
insl
push
xchg
mov
stos
in
nop
inc
mov
jl
iret
mov
mov
xchg
pop
aam
sub
enter
jne
ds
sub
in
adc
lock
and
sbb
cmc
adc
addb
jecxz
pop
xchg
mov
test
push
adc
mov
pop
jl
xchg
or
sub
lods
std
test
aam
addps
ds
mov
pop
add
loopne
add
inc
cltd
or
cmpsl
loope
adc
xbegin
xchg
mov
mov
sub
inc
adc
sub
mov
jne
or
rcrl
loop
out
inc
and
fucompp
mov
jae
push
jge
je
adc
stos
test
add
mov
and
pop
nop
test
and
push
mov
xchg
and
dec
fisttps
jns
rolb
add
dec
sbb
ds
arpl
dec
push
lds
orb
adc
push
push
movl
lods
daa
jnp
addr16
aad
rolb
ljmp
xchg
xor
mov
ret
add
push
sti
push
push
jp
stos
mov
insl
pusha
or
call
movsb
test
lahf
dec
pop
xchg
sub
xchg
mov
jno
add
inc
ja
test
aas
xchg
jne
in
rol
push
cwtl
xor
push
sti
xchg
lock
sbb
rol
lahf
jb
jge
xor
sbb
ffreep
sub
pop
das
push
push
jp
cli
addr16
push
push
lods
ss
addr16
xchg
mov
imul
inc
jecxz
xchg
xchg
xor
cmpsb
aad
or
pushf
sbb
mov
push
pop
pop
pop
aad
loopne
cs
out
pop
pop
inc
popf
push
in
into
push
outsl
sbb
adcb
daa
inc
mul
push
jne
pop
pop
ficoms
push
cmp
push
andl
mov
mov
dec
add
js
addr16
jmp
in
push
xchg
repnz
jae
dec
je
test
leave
mov
scas
jns
imul
mov
xchg
scas
popa
test
addr16
pop
lock
lret
inc
mov
xchg
xor
in
scas
and
ret
bound
lret
movsl
nop
testb
jmp
out
mov
cmp
sti
mov
or
xor
std
fadd
out
dec
xchg
les
dec
loopne
lds
je
xor
aam
movsb
push
aam
cmpsb
dec
test
lock
outsb
cltd
ret
cmpsl
add
xchg
lods
iret
pop
movsl
inc
xor
push
int3
pop
mov
lcall
frstor
add
movsl
mov
das
repz
fisttpl
push
in
mov
fdivp
pop
xchg
fcompl
sub
mov
lock
testl
mov
loope
add
stc
rclb
push
jb
popa
roll
cltd
ljmp
xchg
into
scas
scas
movsl
leave
loop
lock
rcr
mov
mov
nop
repnz
sub
and
sub
dec
dec
cmpsb
enter
out
das
sub
loopne
je
push
add
and
test
icebp
xchg
out
lds
or
adc
ljmp
push
or
mov
fistpl
mov
aas
push
out
fdivr
les
imul
xchg
orb
scas
add
xchg
aas
lods
ficoml
dec
arpl
xchg
aam
cli
lods
pop
mov
fldenv
cmpsb
mov
nop
das
gs
fsubs
adc
sbb
add
arpl
push
mov
pop
push
xchg
cmp
xchg
nop
outsb
fidivrs
pop
or
add
dec
es
loopne
mov
adc
imul
repnz
rcrl
jge
cmp
sub
lret
push
outsb
or
sub
mov
jbe
xchg
sub
cmp
aaa
and
mov
and
in
jbe
mov
pop
cmpsb
sub
enter
imul
mov
jmp
push
push
repnz
cld
inc
call
icebp
jnp
or
or
push
sbb
push
ficoms
add
rcrb
fwait
or
sub
push
push
outsl
js
nop
mov
mov
jmp
out
aad
andl
push
sbb
xchg
push
mov
fadd
iret
shlb
or
adc
cld
stos
outsb
dec
inc
scas
out
mov
xchg
fisubrs
pop
jl
ljmp
divl
and
push
insb
into
cmp
addl
ljmp
push
push
dec
xchg
fucomp
cmp
dec
push
adc
out
sbb
adc
mov
lahf
jns
dec
mov
mov
shll
push
mov
out
xor
js,pt
dec
lahf
out
scas
inc
out
imull
les
out
loopne
jae
or
popa
fwait
popa
jb
or
mov
std
pop
in
mov
rcl
sbb
push
movsb
jle
pop
scas
in
and
inc
pushf
jmp
lds
lret
movsb
inc
test
mov
jbe
sbb
mov
lds
or
push
mov
aam
movsl
dec
aaa
loop
movb
sti
dec
push
pusha
lock
add
add
loopne
dec
pop
cmpsl
icebp
or
fst
popa
jb
repz
mov
mov
aam
cli
sub
pop
lods
ss
lret
and
aam
and
mov
ret
movsb
and
jp
cmp
xchg
xor
cwtl
in
lcall
int
cs
jns
push
or
pop
mov
sub
out
popa
add
lcall
push
cwtl
mov
arpl
cld
lods
rcll
jge
aaa
mov
sbb
sbb
test
mov
pop
xchg
xchg
xorl
jle
in
mov
outsl
xchg
sti
mov
and
sbb
lahf
jmp
movl
pop
xchg
xchg
ss
mov
lock
mov
mov
pushfw
jnp
orl
sbb
fidivrs
cmc
pusha
mov
movsb
and
jmp
sub
push
int3
mov
add
pop
pop
std
fsub
sub
cmpsl
scas
call
cli
jae
filds
shrl
mov
inc
dec
xchg
sub
lcall
jb
std
sbb
test
push
loop
hlt
mov
mov
cmp
lea
add
std
add
cwtl
ds
cmp
int
jb
std
sub
jmp
in
lock
pop
pop
mov
test
out
push
stos
pop
repz
je
movsl
fistpll
rolb
dec
add
test
xchg
lahf
and
fwait
loopne
xchg
xlat
push
daa
inc
cmc
fmul
out
nop
hlt
pop
or
out
adc
xchg
push
jb
xor
mov
push
std
add
sbb
orl
aad
or
sub
outsb
mov
xor
nop
jg
xchg
inc
xor
loopne
mov
nop
fisubrl
in
in
scas
test
adc
icebp
in
sbb
call
into
loop
dec
loopne
sub
pop
adc
push
dec
mov
ret
mov
call
inc
fs
sub
pop
rcrl
sbb
ja
pop
sub
adc
mov
aaa
and
inc
mov
mov
fs
adc
inc
push
mov
or
cli
pop
mov
leave
jle
cmp
rclb
sub
adc
loope
or
das
jmp
arpl
rcrl
xchg
shl
adc
sub
outsb
pop
pop
lcall
mov
xchg
xchg
cmp
or
out
push
or
and
or
test
enter
enter
mov
xor
cmpsl
push
movsl
xchg
mov
sahf
daa
test
or
rcll
jno
fs
pop
xchg
cmp
pop
pop
ljmp
cltd
ja
loop
subb
fldl
jbe
hlt
mov
insb
in
and
cli
repz
xchg
push
aad
jnp
repz
scas
mov
pop
or
loopne
out
addr16
adc
cld
jnp
loope
jp
jb,pt
jmp
inc
mov
mov
data16
idivl
and
shrl
test
mov
testl
jns
and
or
stc
jne
push
xchg
mov
in
mov
nop
movsb
pop
push
stc
cmp
mov
sbb
jle
pop
jmp
addr16
and
insl
pusha
mov
jle
sahf
fstpt
inc
lret
in
lock
mov
sub
jbe
push
cmp
sbb
cmpsl
je
push
and
xlat
fisubrs
mov
push
sbb
ljmp
xor
fildl
push
or
mov
sbb
and
pusha
movsb
cli
ret
and
mov
xor
and
mov
mov
pop
mov
stos
push
push
cmp
cmp
adc
push
bound
jb
add
xchg
sahf
or
dec
xor
into
pop
mov
pusha
or
jo
add
ja
out
fcomi
mov
jnp
cmp
mov
int3
sarl
and
mov
aaa
ficompl
xchg
push
sub
jge
inc
push
adcl
mov
das
sbb
sub
mov
adc
sbb
addb
out
sahf
push
or
inc
lock
fsubrs
mov
mov
mov
pop
adc
mov
fisubs
lcall
cmp
loopne
cmpsl
fcmovu
xlat
loopne
movaps
jp
into
push
mov
fisubrl
lods
mov
stos
cli
mov
xchg
pop
mov
sbb
mov
ret
int
and
sbb
aaa
outsl
aas
pop
mov
pop
add
and
test
jae
mov
popl
or
repz
dec
hlt
lods
mov
fdivs
test
out
mov
daa
dec
pop
jle
ljmp
aas
cld
sahf
push
insl
mov
push
pop
add
dec
lock
push
sbb
shll
push
and
xchg
sub
sbb
fwait
jecxz
addr16
jno
in
push
and
and
cmp
movsl
and
jecxz
or
and
pop
lcall
xchg
mov
inc
addl
push
pusha
hlt
outsl
in
lds
xchg
jecxz
enter
je
mov
in
xlat
push
inc
inc
movsb
aaa
jae
pop
ja
add
jg
add
out
mov
jb
das
pop
xor
pushf
add
jne
out
mov
pop
call
leave
lahf
jno
data16
testb
int
jno,pn
shlb
in
les
ffreep
nop
data16
cmp
into
repnz
fiadds
push
mov
xorl
adc
add
push
xchg
sarb
imul
bound
lcall
das
fisttpl
bound
xlat
pop
dec
pushf
cmpsb
inc
adc
pop
idivl
dec
addl
and
dec
xchg
ret
frstor
je
xchg
mov
mov
addb
pop
mov
jo
mov
mov
stos
rolb
ja
rcll
sub
xor
sub
rol
lods
jp
lds
pop
cmc
push
in
scas
inc
cmp
pop
xchg
nop
and
jl
pop
xchg
mov
cltd
cmpl
imul
jbe
sub
fstpt
and
add
leave
xchg
outsb
cmp
and
mov
imul
add
int3
or
mov
jne
cmc
push
mov
ret
pop
mov
out
in
sbb
sub
movsb
lcall
sbb
sbb
sbb
lods
dec
mov
cmpsb
adc
jl
addr16
rolb
dec
inc
inc
jae
cmp
adcb
test
lods
mov
into
jecxz
bound
push
xor
sbb
jbe
outsb
jg
dec
test
sahf
cmpsl
xor
and
rcl
pop
mov
adc
push
xor
xchg
xor
das
in
pop
xor
pop
ja
enter
popa
push
add
pop
in
add
popf
mov
pop
add
std
dec
pop
ljmp
cld
jns
sbb
mov
imul
in
ss
mov
push
mov
sub
mov
lods
sbb
sbb
mov
rorb
and
inc
xchg
mov
and
clc
mov
xor
icebp
push
scas
jg
mov
or
and
xor
ret
pusha
sbb
daa
adc
ja
xor
xchg
stos
testb
lahf
in
pop
mov
idivb
jo
fistl
or
lock
jmp
jae
xor
sahf
pop
int3
loopne
divb
mov
ja
add
loop
jae
inc
into
cmc
mov
push
mov
xor
leave
pop
inc
pop
sarl
jg
jae
nop
sub
add
fsubl
jae
push
jmp
push
cmc
mov
push
cmp
es
adc
mov
jl
lcall
xor
or
repnz
bound
rorl
movb
and
pop
loop
ret
mov
add
inc
lock
lret
inc
mov
adc
or
call
jmp
aad
cmp
add
sub
jmp
loope
adc
sub
add
pop
popf
dec
sbb
popf
and
imul
out
xlat
orb
dec
test
out
repz
cmp
loope
pop
pop
xor
add
xchg
sub
xor
in
dec
nop
repnz
lret
xor
fs
outsb
pop
sub
call
cmp
pop
mov
dec
adc
pop
imul
outsb
cmp
sub
xchg
push
push
cld
sbb
jl
lock
scas
test
or
cmp
sub
inc
dec
fcmovb
push
jl
es
add
ds
mov
cmp
cltd
add
and
js
int3
dec
notl
inc
adc
mov
mov
ljmp
rcrl
xchg
jp
int3
inc
or
in
fisttpll
adc
fistpll
jp
cwtl
aaa
loopne
mov
sarb
sub
scas
sti
insb
xchg
jne
push
xchg
or
add
out
pop
jnp
test
jne
xorb
cmp
or
and
lret
lahf
pop
addr16
aaa
shrl
add
cmp
test
mov
fstpt
mov
rorl
lret
lods
mov
xlat
cli
add
div
jp
aad
test
fisubl
mov
jo
imul
xchg
int
add
and
pop
cmp
dec
mov
and
cmc
aad
mov
movsl
gs
mov
ja
enter
jmp
adc
dec
xor
repz
aam
jno
scas
add
rcr
int3
hlt
sbb
mov
repz
xlat
leave
divl
mov
iret
movsb
out
stos
lods
dec
les
xorl
in
aas
xor
mov
cmp
push
adc
or
movsb
mov
sub
sarl
ret
cmpsl
jno
mov
sbb
sbb
cltd
pop
ret
xor
cmp
hlt
add
pop
jns
pop
mov
sub
idivb
cmp
xchg
jmp
movsl
in
mov
fidivs
xchg
and
mov
and
xor
out
xorl
mov
mov
inc
outsb
xor
nop
mov
movsl
add
cmp
cs
inc
inc
or
loopne
lods
bound
sbb
mov
out
imul
or
or
sub
push
sbb
scas
cmpl
int3
stc
push
mov
loopne
stos
jge
aas
mov
je
xchg
test
adc
xor
sbb
aas
es
dec
mov
mov
adc
adc
pop
pop
int3
push
sbb
enter
ja
fnstenv
test
or
iret
jbe
lea
hlt
pop
adc
fwait
pop
das
jmp
jl
adc
adc
fucom
lods
pushl
dec
push
in
aaa
mov
int
cmp
mov
mov
jp
test
imul
sahf
and
xor
xor
sub
fcompl
popa
mov
xchg
mov
pop
das
pop
xor
mov
sub
cmp
loope
pop
subb
sti
in
sbb
xchg
out
fldcw
jae
subl
jecxz
ret
test
mov
icebp
outsl
xchg
in
mov
mov
sbb
add
add
dec
flds
aaa
mov
dec
inc
shl
imul
push
xor
jbe
test
cmp
call
gs
test
iret
jno
jg
dec
xlat
xor
sub
cmp
inc
fisubs
inc
rcrl
or
dec
movsb
and
inc
or
lcall
lcall
fists
sub
xchg
adc
leave
or
inc
das
xor
test
push
push
out
jo
iret
xchg
inc
hlt
int3
stc
push
inc
pop
xor
inc
mov
and
mov
mov
dec
pop
mov
cmp
mov
mov
pushf
or
ljmp
xchg
arpl
push
lock
xor
loope
test
in
sbb
inc
pop
scas
aas
sti
sbb
scas
push
and
jns
es
inc
jno
mov
sub
cmc
jo
pop
sbb
xchg
fwait
ja
jmp
mov
pop
inc
mov
int3
outsl
int3
jns
and
out
stos
cmp
aaa
addr16
roll
dec
out
movsb
arpl
cmp
addr16
mov
adc
push
xchg
mov
or
inc
loop
aad
nop
es
jae
xchg
jecxz
cli
scas
push
mov
pusha
popa
hlt
movsl
in
push
xor
hlt
enter
mov
int
inc
shr
add
jne
mov
dec
inc
dec
push
fsts
sub
inc
insb
popf
or
push
clc
xor
int
decl
sbb
sahf
in
movsl
mov
rcrb
inc
push
inc
adc
fcomip
adc
in
inc
add
mov
addr16
out
into
sbb
or
add
mov
inc
push
cmp
push
in
jbe
xchg
sub
push
out
inc
sbb
adc
mov
pop
in
lcall
dec
repnz
pop
or
imulb
xchg
jecxz
jo
jae
mov
lock
incb
jno
popf
xchg
xlat
in
insb
shlb
inc
ss
std
shl
lock
push
push
sbb
xchg
fs
lds
xor
jns
sbb
negb
pop
mov
outsl
inc
add
dec
enter
imul
inc
fwait
daa
ret
add
push
fcompl
mov
insl
cmpsl
stos
nop
call
jg
not
jo
cmpsl
push
mov
divl
rcl
ss
sbb
xor
icebp
jo
lea
sub
push
aaa
testb
mov
in
adc
push
bound
ret
jbe
test
xor
add
pop
push
loopne
xchg
mov
in
icebp
jo
cmp
fistpll
inc
clc
mov
pop
and
xchg
out
dec
push
ja
push
adc
mov
mov
dec
shll
pop
pop
adc
dec
pop
insl
int
or
xor
lea
test
xor
xor
mov
in
jb
inc
sbb
xor
dec
dec
inc
xchg
insb
into
loopne
fsubr
push
sub
sahf
add
test
mov
xchg
push
lods
ret
aas
cli
imul
in
inc
scas
inc
clc
orb
std
std
cmp
cmp
outsl
arpl
rcrb
mov
shll
mov
sub
loop
pop
xcrypt-cbc
cmpsl
push
out
sbb
fldpi
push
lods
lock
dec
or
lods
inc
iret
xor
mov
int3
orl
xchg
jle
xor
push
in
insl
imul
adc
sub
cld
les
xor
push
jmp
and
and
aaa
outsl
mov
fistpll
add
adc
mov
dec
push
push
aas
pop
pop
mov
sub
mov
into
subl
fdivl
fdivs
mov
xor
pop
and
sub
mov
sub
mov
cmpsl
pop
mov
push
stos
pop
icebp
mov
call
jge
jb
lret
push
roll
inc
fiadds
fmuls
rclb
dec
repz
rorl
inc
loope
pop
arpl
out
push
mov
sub
adc
fstl
add
jb
addr16
or
inc
mov
sbb
fdivrl
outsl
sub
fnstsw
push
sahf
or
aas
lret
pop
test
cmp
pop
pusha
and
rorb
cmp
jb
cmc
popa
cwtl
dec
xor
sub
fwait
les
fldenv
push
popl
fs
mov
lret
jl
inc
cmp
subl
cmp
push
push
pop
or
fldt
fdivrp
sbb
push
das
sarb
push
repz
adc
pop
adc
xchg
dec
push
xchg
pop
mov
jne
jbe
pop
shl
ds
into
inc
push
xchg
dec
int
mov
push
inc
pop
mov
mov
cltd
inc
cmp
ds
mov
ljmp
stos
int3
mov
imul
popa
dec
mov
ret
jae
leave
dec
aad
loop
nop
inc
ss
cltd
sti
lret
loopne
adc
and
push
mov
icebp
mov
jne
and
inc
in
or
sbb
out
leave
dec
movsl
mov
jmp
icebp
jg
xchg
movsb
sub
cmpsb
jl
push
stos
mov
addr16
iret
js
das
dec
sbb
aas
dec
jo
icebp
add
fisttpl
lds
xor
lods
mov
bnd
stc
dec
mov
inc
push
test
fadds
xor
sub
addr16
ss
fsubp
jae
aad
imul
xchg
mov
or
adc
in
pop
lock
outsb
mov
jne
mov
push
pop
mov
sahf
sub
cmc
add
sub
sar
xchg
jnp
outsl
adcb
adc
mov
xlat
push
mov
dec
sub
call
add
sbb
aas
inc
movsb
insb
incl
pop
push
pop
push
mov
insb
dec
shrl
bound
jns
pop
and
push
popa
mov
stc
jno
xchg
mov
mov
addl
and
cltd
in
lret
pop
dec
and
cmc
push
mov
inc
in
daa
mov
fnstenv
cmp
xlat
adc
outsb
lcall
cwtl
subb
test
add
in
jg
mov
jecxz
insl
mov
xchg
fistl
out
rcrl
and
repz
pop
xchg
fcompl
subl
dec
cmpb
pushf
xor
add
int3
mov
mov
xchg
fwait
icebp
xor
ljmp
mov
mov
xchg
sub
icebp
rorl
test
push
int3
pushl
repnz
pop
aas
iret
stos
stc
push
or
or
icebp
sub
popf
dec
pop
adc
adcb
repnz
loopne
dec
and
hlt
fidivs
pop
stos
sbb
sbb
dec
fistpll
daa
jmp
inc
repz
jl
pop
loope
cmpl
jbe
adc
ficoml
int3
repnz
orb
and
sbb
out
push
mov
insb
push
test
and
jle
out
test
ja
insb
and
clc
cs
or
push
cmc
jbe
in
sub
mov
mov
nop
out
sub
popa
js
sub
jo
push
sti
cmpsl
aaa
test
movsb
loop
loope
and
jnp
pop
sub
push
push
adc
push
and
lret
and
icebp
xchg
sub
sbb
cmpsl
xor
cmp
mov
movsb
push
push
rolb
push
cmp
adc
addr16
mov
stc
and
xor
jp
push
icebp
int3
fildl
sbb
hlt
sbb
and
mov
add
xor
cmpsl
xor
dec
mov
push
or
mov
sub
test
adc
insl
add
scas
outsl
outsb
and
lds
in
cmpb
or
repnz
push
mov
mov
jl
jb
jmp
cltd
mul
and
dec
mov
orl
das
fstpt
aaa
or
xchg
cmpsb
fcmovnb
aaa
cmp
mov
int3
popf
mov
ds
adc
mov
adc
mov
or
jbe
loop
pushf
mov
ret
sbb
nop
aam
xor
push
dec
outsl
stc
sbb
aad
pop
sub
push
ljmp
clc
mov
dec
sub
movsl
mov
repnz
push
aad
ret
sub
fdivrs
dec
inc
mov
inc
idivb
xor
adc
push
mov
or
and
mov
nop
mov
push
xor
cmp
add
add
call
lods
out
scas
fcomp
jmp
mov
sub
push
lea
test
jmp
das
sar
mov
cmc
mov
jbe
sub
jnp
add
xchg
jbe
pop
arpl
xor
xchg
and
outsb
push
mov
cld
cmp
pop
sbb
adc
addr16
addr16
or
mov
push
push
xchg
mov
adc
insl
popf
sub
andl
pop
scas
push
lods
cmp
imul
sbb
mov
mul
or
outsl
xor
data16
mov
testb
mov
adc
push
push
inc
imul
lret
xchg
cli
adc
cs
sub
or
call
stos
lods
dec
add
sbb
mov
movsb
clc
lret
imul
sbb
rcrl
dec
push
xchg
leave
cmp
inc
jb
mov
pop
lret
xor
nop
push
inc
mov
xchg
sti
pop
jo
or
jne
and
imul
add
push
scas
mov
fisttpl
push
fcomps
sub
pop
movb
mov
sub
mov
cmp
inc
lcall
mov
aad
scas
dec
inc
add
in
int3
pop
xchg
or
daa
lret
dec
dec
lret
shlb
je
xchg
pop
xor
adc
test
sub
push
xchg
push
cmpsl
psrlq
sbb
sub
sbb
cmp
fcompl
dec
sbb
pop
adc
mov
sbb
xchg
xlat
aas
int
jns
jno
sbb
lock
adc
cmc
jae
dec
cmp
jg
mov
sub
adc
jns
lcall
or
inc
push
push
xchg
jmp
je
test
ljmp
add
inc
jge
das
push
insb
jne,pt
leave
add
push
aaa
lcall
outsb
xchg
jae
sti
aad
or
repz
lock
push
or
int3
push
xor
cld
pop
maxps
jae
imul
sub
je
sub
mov
pop
insl
rolb
mov
in
push
sub
scas
xchg
jbe
pop
jge
add
clc
pop
xor
bound
mov
jne
gs
inc
jl
xor
leave
in
cld
insb
inc
sub
jno
stc
stos
jo
push
in
js
clc
lahf
scas
sub
xchg
mov
sbb
mov
mov
mov
inc
in
ljmp
test
imul
jg
xor
test
dec
jmp
into
dec
jbe
mov
xor
cmp
dec
jbe
in
fcompl
scas
xchg
inc
cmpsl
or
mov
push
adc
dec
sbb
lods
in
lcall
insl
cltd
lcall
out
pop
mov
lcall
test
inc
mov
adc
fcmovnbe
sub
cwtl
rcll
jmp
xlat
push
call
ljmp
push
ss
inc
repnz
push
insb
hlt
and
jmp
inc
aas
pop
pop
jle
xlat
hlt
add
mov
arpl
and
jb
cli
jmp
ficoms
movsb
lret
dec
addb
addr16
aas
jne
adc
je
mov
mov
loopne
mov
adc
add
aas
out
adc
pushf
pop
incl
and
in
sub
loop
pop
jb
xor
jb
icebp
inc
imul
fimuls
lds
mov
ljmp
mov
mov
mov
jge
jge
stc
jecxz
js
mov
dec
and
sbb
sub
or
scas
cli
xor
inc
lods
mov
scas
mov
pop
mov
fidivs
test
add
fisubrl
jp
in
push
xor
pushf
lret
stos
js
out
ret
movsl
adc
fcmovbe
fxch
sbb
push
dec
dec
in
popa
add
push
mov
testb
mov
adc
roll
xor
in
mov
pop
add
arpl
cmp
das
add
adc
dec
dec
or
push
clc
jg
sub
jne
cltd
imul
push
icebp
rorl
cmp
pop
fcoms
fisubl
mov
in
imul
pop
mov
add
push
ds
ja
xlat
pop
add
fcompl
xor
xchg
add
xchg
ja
adc
or
adc
or
mov
in
sub
lret
adc
dec
repz
lahf
iret
jo
push
fs
xchg
icebp
pop
imul
dec
pusha
idiv
push
cltd
mov
dec
and
icebp
jecxz
xor
sbb
ljmp
gs
push
sub
rclb
in
sub
in
sbb
mov
das
mov
sbb
push
inc
cld
icebp
dec
sbb
in
sbb
jns
lret
cmc
cwtl
xor
pop
pop
lret
mov
inc
mov
sub
lods
loop
daa
mov
fiadds
int3
aas
cmpsb
shl
xor
push
jbe
xchg
insb
xchg
out
xchg
cmpl
mov
push
jno
xchg
adc
fs
lock
or
jbe
inc
aas
or
mov
push
in
jmp
cmp
xchg
adc
out
lea
repz
out
lahf
test
int
adc
jo
hlt
or
sbb
sub
mov
push
dec
in
leave
aam
jo
push
dec
pop
dec
mov
mov
lea
fsubrs
jno
mov
push
mov
pop
mov
sbb
imul
dec
mov
mov
outsl
mov
ss
dec
out
rorb
push
hlt
lcall
adc
dec
push
xor
xor
mov
sbbl
in
cmpsb
xor
insl
jge
mov
adc
in
inc
dec
sbb
mov
fisubrl
in
mov
mov
clc
stc
test
mov
test
push
xchg
stos
paddsw
jbe
pop
fwait
or
cmpb
sbb
cwtl
repnz
push
imul
fwait
lahf
add
and
mov
div
cltd
movsl
sbb
les
inc
lahf
cmp
pop
or
out
test
not
outsb
sbb
sub
rcrl
push
inc
popa
hlt
testl
xchg
repz
and
imul
popa
in
mov
cmpl
popa
sbb
lcall
mov
adc
jl
scas
sub
repz
pop
pop
movsl
mov
out
ja
movq
or
stos
cwtl
repz
movsb
xchg
in
insb
test
cs
lahf
stc
stc
jecxz
pusha
cmp
into
ret
enter
jns
fucom
sub
scas
xor
lock
cmp
jge
dec
adcb
addr16
loope
stc
mov
aad
ss
sub
mov
fwait
out
mov
sbb
dec
push
pop
stc
imul
adc
and
ds
push
into
or
leave
stc
loopne
popf
loopne
aad
popf
popf
jns
add
lcall
inc
shlb
fisttpl
les
cmp
mov
push
fs
dec
jne
sbb
adc
imul
sbbb
in
adc
mov
lea
stc
push
or
pop
stos
mov
cmpsl
es
cmpsb
dec
inc
cmp
xchg
inc
jae
fstl
sub
xchg
xchg
ss
xor
push
cmp
out
aad
mov
ss
mov
movl
test
rcr
rolb
stos
jl
and
sub
push
mov
aaa
mov
mov
ret
mulb
xchg
or
cld
push
cmpb
cmpsb
xchg
sub
cs
shrl
cli
inc
sar
scas
ficomps
sbb
mov
stos
or
scas
mov
sub
testl
lods
mov
pushf
mov
inc
or
sbb
and
lret
movl
and
sbb
cmp
into
fcmovnbe
rclb
push
pop
dec
sbb
clc
aas
mov
lods
mov
add
or
out
cmc
adcl
and
xor
nop
popf
pop
dec
jns
lcall
cmpsl
in
cmpsb
or
adc
adc
out
sbb
std
testb
int3
sarl
rcl
or
and
cmp
mov
les
ds
and
push
loopne
into
cmp
sub
pop
xor
dec
sahf
mov
push
jl
sub
xchg
mov
lcall
int3
adc
mulb
xor
aad
rcl
stos
sub
xchg
movsb
ljmp
inc
loop
shrb
adc
cmp
cmp
sub
iret
scas
or
mov
icebp
push
lcall
test
cmp
push
enter
shrl
push
outsb
int
add
leave
sbb
int
stos
push
dec
jmp
stos
lret
scas
das
shrl
cmpsb
in
loop
rolb
rolb
cli
scas
xchg
lret
and
dec
sub
fwait
stos
insb
fcmove
inc
push
int
and
mov
adc
es
cmc
rorb
scas
fistps
mov
mov
mov
mov
mov
sub
stos
into
jp
push
push
in
mov
add
or
push
ret
cmpsl
xchg
arpl
cmp
jge
stos
scas
sbbl
lcall
fwait
adc
das
xor
filds
sub
into
daa
dec
leave
int
push
fisubrs
inc
mov
daa
pop
push
insl
cs
and
lret
cs
mov
roll
mov
cmp
sbb
adc
call
fidivl
jb,pt
rorl
dec
mov
mov
into
sbbb
es
fstpt
hlt
das
stos
push
fimull
ficoml
aam
push
add
sub
mov
push
jle
in
push
stc
or
push
out
movsb
stos
roll
and
xor
adc
out
sbb
sub
dec
movsb
mov
cmp
lods
sahf
es
aas
shlb
cli
int3
repnz
fldenv
push
loopne
dec
push
mov
js
inc
push
xchg
and
push
in
data16
pop
fnstsw
les
add
xlat
lcall
jle
out
sbb
repz
movsb
dec
mov
sub
mull
ljmp
sbb
aaa
loop
push
sub
mov
lret
shrb
scas
mov
in
cmpsb
dec
sub
push
ret
xchg
jb
pop
fnstcw
mov
loopne
or
cmp
add
xlat
les
jb
repnz
stos
cmpsl
out
scas
stos
cmp
jge
and
cmpsb
sbb
add
repnz
stos
mov
ror
out
and
and
fwait
stos
jbe
aaa
inc
mov
xor
adc
sub
daa
stos
xchg
pop
mov
fcomps
mov
out
xor
adc
pushf
mov
repnz
push
mov
or
push
iret
stos
and
mov
mov
and
jnp
mov
xchg
add
adc
sub
lock
test
mov
mov
jae
xlat
aas
stos
inc
out
or
dec
pop
cmc
mov
push
mov
adc
repnz
frstor
add
jge
scas
cmp
dec
pop
es
push
mov
push
pop
xchg
dec
jb
pop
mov
lods
insb
dec
add
cs
xchg
cmpsl
push
es
fwait
xchg
mov
stos
mov
fcmovnb
fcmovnu
adc
pop
cmpsb
dec
shrl
push
pop
cmp
push
mov
jl
jle
ret
fstps
stos
xchg
in
jge
test
push
insl
cli
mov
outsb
xchg
repz
sub
cltd
fldt
cmp
cmp
dec
movsb
movsl
cmpsb
rcrb
push
fidivrl
sub
inc
xor
ds
mov
push
sbb
jmp
movsb
into
xchg
fadds
lea
cs
cli
out
push
es
loopne
pop
aad
lcall
sbb
cmp
lods
xor
dec
loop
mov
push
test
ljmp
lcall
cmpsb
addr16
fwait
lea
sub
mov
mov
dec
out
lea
cmpsb
cmpsl
out
jb
or
inc
fs
jae
dec
mov
cmp
sbb
or
fwait
cltd
cltd
jno
pushf
push
adc
sub
repnz
das
fidivl
pusha
sbb
pop
sarb
xor
sub
pop
xor
stos
js
push
inc
xor
pusha
fs
sub
adc
les
jns
and
mov
push
rcr
sbb
inc
xchg
lret
cwtl
int
pop
mov
repnz
fisubrl
lock
aad
mov
les
stc
int
xchg
and
iret
loopne
scas
lcall
sub
and
fstl
add
lahf
dec
aam
mov
inc
mov
daa
clc
int
inc
cmp
cwtl
push
sbb
jno
pop
cmp
lret
shll
push
pop
std
scas
jb
scas
ds
cmp
loope
iret
sub
shrl
bound
fimuls
pop
pop
mov
repz
dec
inc
xlat
pop
mov
call
fisubrs
pop
setnp
add
mov
push
pop
jle
or
push
adc
stos
movb
and
push
sub
sbb
sbb
js
mov
scas
cmp
es
rclb
sub
fdivp
test
mov
or
and
xchg
push
or
xchg
scas
fsubs
das
lret
xchg
stos
cwtl
negb
inc
sub
and
push
adc
test
pop
or
jmp
sub
mov
mov
hlt
and
cmp
mov
adc
sbb
loop
jne
cmp
and
fcmovnbe
cmpsb
xchg
dec
add
pop
jb
xchg
stos
mov
inc
mov
push
sahf
aaa
lods
add
sbb
aaa
mov
test
sbb
stos
test
stos
mov
xlat
xchg
pop
mov
jmp
popa
cmp
or
mov
imul
lret
adc
and
pop
push
sub
jmp
stos
jmp
stos
into
mov
addr16
cmp
rorl
sarb
pop
repnz
mov
lcall
sahf
sbb
movb
xchg
mov
push
movsb
xchg
mov
rclb
xor
scas
les
cmc
inc
jmp
lea
jl
and
cmp
push
sbbb
mov
bound
push
dec
fildl
mov
jno
test
inc
lahf
cmp
fstl
cs
lods
sbb
mov
or
and
lock
adc
aas
movsl
push
arpl
outsb
ds
xchg
cltd
sub
sbb
xor
cmp
sub
repz
pop
xchg
mov
fcmovb
stc
lods
push
pop
scas
fcmovnbe
sub
out
adc
cmpsb
xor
mov
and
or
fstps
xchg
xchg
cmp
inc
jge
movsl
and
adc
fisubrl
lret
and
cmp
fndisi(8087
es
jecxz
adcl
sahf
repnz
mov
addr16
or
pop
mov
cmpb
lods
cwtl
xchg
aad
mov
or
pop
and
lcall
movsb
adc
ljmp
adcl
mov
sub
cmp
mov
and
sub
jb
test
scas
rolb
je
push
subb
or
nop
mov
jb
jnp
int
xchg
cmpsb
stos
push
cmp
inc
stc
movsb
stos
fiadds
push
jle
or
loope
sub
outsl
fistl
shll
lods
das
lods
stos
adc
out
and
mov
int3
cmpsb
cmpsb
xchg
add
rolb
mov
popf
adc
ljmp
les
ss
sub
insb
cs
push
pop
adc
adc
mov
or
push
mov
push
dec
test
repnz
lahf
movsb
mov
scas
push
sbb
or
and
jns
callw
cmp
sub
push
mov
and
jns
push
adc
sbb
xchg
mov
inc
xor
sbb
les
add
push
fmul
bound
pop
int3
aas
in
inc
int
into
aam
push
cs
sbb
cmpsl
xor
inc
cmp
in
lret
mov
adc
outsb
or
cwtl
push
xchg
mov
sub
aam
mov
cs
aaa
sub
jbe
mov
mov
je
stos
adc
lret
ficoml
add
and
push
stos
mov
push
jle
adc
aad
or
loope
cmpsb
jno
cmp
mov
gs
adc
or
outsb
or
cmp
pusha
fwait
das
mov
dec
das
sub
mov
and
jge
repnz
mov
sub
into
into
movsl
fistps
loop
ljmp
je
fistpl
int
jb
out
outsb
sub
fcomi
add
pop
cs
int3
xchg
es
lret
pop
int
rcl
lock
push
sub
in
outsb
imul
and
sti
pop
inc
lcall
loop
inc
enter
jae
add
cs
xchg
mov
xchg
add
jmp
add
int
iret
push
inc
mov
jns
lret
push
mov
hlt
dec
sub
lahf
sahf
mov
and
daa
lock
sti
fsubrs
mov
inc
xor
sbb
mov
in
bound
sbb
ljmp
iret
mov
shlb
lret
add
sub
add
mov
lods
mov
pusha
jge
inc
inc
test
sub
xor
rcrb
pushf
sbb
into
dec
mov
sbb
fcmovnb
es
sub
adc
dec
mov
mov
push
call
mov
andb
and
nop
rcr
iret
in
cs
fcompl
cmp
das
dec
or
push
pusha
push
mov
push
sarb
faddp
push
jmp
out
pop
or
out
cwtl
adc
inc
mov
fsubrs
mov
sub
mov
ljmp
addr16
call
inc
xor
push
popf
xchg
mov
jp
lods
rorl
sbbb
mov
push
scas
std
inc
stos
adc
enter
fnstcw
loopne
push
ficomps
cwtl
bound
xchg
loopne
dec
xchg
out
inc
mov
negl
jb
mov
dec
rorb
mov
loop
in
mov
xor
xchg
je
scas
xchg
test
xchg
lods
repz
scas
aad
xchg
loop
push
sub
mov
sbb
xchg
pop
sbb
inc
xchg
push
rclb
dec
je
scas
out
mov
lcall
lods
adc
cmp
movsl
das
cmpsl
std
addr16
sbb
into
and
ljmp
sub
jo
mov
inc
inc
cltd
adc
fldt
call
mov
push
jmp
mov
mov
jne
xchg
and
sbb
xchg
and
cmpl
cmpsb
outsb
jp
loop
xor
push
decl
stos
sub
leave
pop
jp
sub
jb
popf
xlat
pusha
daa
mov
pop
mov
cmc
xchg
cmp
mov
fimuls
jnp
stos
cmp
cs
and
sub
mov
sbb
shlb
xor
dec
mov
scas
xor
push
cmpsb
aad
test
rclb
movsl
push
pop
dec
cltd
xor
insl
inc
push
mov
or
dec
inc
xchg
push
data16
rorl
pop
roll
push
iret
or
jae
sub
dec
into
push
dec
mov
mov
push
mov
xchg
push
das
cmp
sbbb
out
xchg
mov
adc
mov
aas
xchg
cli
mov
or
fimull
jmp
mov
xor
or
lock
dec
jno
add
es
insl
cmp
insl
and
adc
cmpsb
xchg
jb
int3
aaa
ds
inc
pop
sub
test
dec
pusha
cmp
ss
gs
fbld
test
push
popf
nop
aaa
sub
dec
not
add
in
mov
inc
mov
out
pusha
xchg
mov
jle
lret
divb
fimuls
cmpsb
pop
popf
inc
test
push
roll
adc
sub
cs
xor
and
fcmovnbe
pop
inc
inc
push
mov
mov
insb
insl
jae
push
sub
mov
dec
mov
cmpb
stos
push
sub
push
mov
and
lcall
les
jle
nop
pop
mov
in
movsb
or
mov
sub
adc
les
or
sbb
push
sub
xor
cmpsl
dec
imull
pop
shlb
push
jo
insb
push
test
mov
or
or
fcomip
pop
mov
mov
lea
fisubrs
sbb
inc
fwait
js
sub
fisubs
jp
es
loop
inc
xchg
mov
jbe
mulb
jl
adc
mov
negb
inc
inc
cs
pop
xor
xchg
xchg
sub
cmpsb
push
bound
jb
push
ljmp
cld
mov
mov
sbb
xor
dec
pop
repnz
sub
push
dec
daa
into
mov
mov
push
dec
clc
xorb
pop
xor
gs
cltd
push
insb
cmp
cmp
mov
call
mov
pop
call
sub
shrl
mov
cmp
test
pop
xchg
aam
cmp
idivl
aam
icebp
dec
sub
sub
mov
out
pop
aas
in
adcl
fimuls
add
and
pushl
mov
lcall
cmp
jb
test
sbb
mov
or
mov
popf
inc
xchg
cli
dec
mov
jmp
push
leave
cltd
loopne
rcll
push
jg
adc
or
mov
and
xchg
jbe
cld
outsl
cmp
fsubs
rcl
sub
pop
adc
shrb
mov
dec
stc
fwait
out
cmp
or
dec
jnp
aaa
lods
push
jge
fwait
push
xor
pusha
and
pop
jo
push
push
mov
xchg
stos
shrl
cwtl
int
rcll
dec
and
pop
pop
out
test
push
cmp
cmp
addr16
out
dec
test
aam
stos
inc
int3
arpl
cmp
ja
xchg
sub
pop
jmp
xchg
pop
push
xchg
aaa
insl
add
sarl
dec
pop
fs
repz
jno
enter
divl
pop
cmc
pop
mov
cmp
cmpsl
imul
pop
fwait
xchg
fdivrl
add
pop
or
aaa
pop
stos
out
xchg
jns
movsl
pop
xor
inc
lcall
ret
data16
pop
sbb
subl
ds
jnp
jno
mov
outsb
fistps
xchg
pop
ret
lods
out
in
dec
je
xchg
jge
cmp
dec
mov
dec
push
scas
mov
inc
pop
push
call
gs
adc
jle
mov
rcrl
push
xlat
stc
mov
or
into
inc
xchg
xlat
ficoml
fcmovu
jmp
aad
push
ret
or
lcall
stos
pop
loop
xor
shrl
in
push
jmp
test
out
mov
ret
shlb
cmovge
cltd
mov
push
lahf
jns
cmpsb
mov
add
push
lods
sub
xchg
dec
arpl
jle
inc
mov
pusha
or
loope
cltd
popa
stos
push
mov
lods
add
xor
jne
mov
jnp
into
test
call
into
cwtl
push
bound
cmp
inc
mov
lahf
clc
jae
sbb
and
push
insb
xchg
mov
loop
pop
xor
in
pusha
jno
mov
cwtl
loope
lret
cmp
sbb
push
lea
jg
sub
cmp
sub
jp
fadds
or
xchg
jle
mov
jecxz
sub
xor
enter
insb
sub
sub
push
xchg
or
sub
pusha
cmp
out
and
jecxz
mov
add
sti
call
test
aaa
cwtl
xchg
xor
fbld
jb
sub
or
xor
std
fscale
ja
aas
push
inc
aas
lea
inc
mov
jo
adc
outsb
popa
add
arpl
repnz
pop
sbb
mov
lahf
and
mov
cmp
xchg
movsl
push
mov
jns
cmpsb
aad
cltd
adc
aas
xchg
addr16
stos
aaa
cmp
pop
push
push
and
sbb
mov
pop
cmp
ljmp
cmpsb
stos
push
sub
inc
inc
xchg
add
push
je
add
sub
mov
stos
xchg
push
stos
mov
mov
aas
rorb
outsl
iret
repnz
push
dec
or
andl
inc
das
cmp
jle
fisubl
dec
test
add
stos
pop
scas
lahf
bound
lcall
movsb
adc
add
shrl
jle
int3
or
in
movsl
dec
xor
aas
push
outsl
add
test
bound
cltd
ds
dec
movsl
loope,pn
ret
stos
mov
mov
fisttpll
adc
mov
cmp
jb
cs
sub
mov
icebp
bound
shll
das
inc
leave
fistpl
stos
xchg
call
mov
stos
pop
cmpsl
scas
mov
aaa
dec
mov
add
push
mov
test
cmp
cmp
push
arpl
stos
push
push
movb
and
aas
push
push
cmc
push
inc
inc
and
mov
fdivs
xchg
out
stos
lret
push
mov
repnz
lds
cmp
sub
inc
cwtl
dec
bnd
push
dec
or
sbb
jbe
sahf
xchg
lcall
lcall
les
xchg
mov
fidivl
adc
xor
sub
int
sar
dec
xchg
and
adc
lods
cmpsl
cs
sbb
pop
es
sub
mov
fdivr
mov
or
xchg
dec
out
push
pop
fmuls
and
push
popl
data16
cmpsl
stos
data16
push
notb
add
add
fmuls
ja
pop
dec
sbb
add
push
gs
xchg
push
add
mov
add
mov
mov
lock
stos
jne
loop
inc
dec
cltd
push
movsb
ficompl
and
fdivl
js
add
lret
jle
in
test
cltd
add
mov
cwtl
jp
cmp
iret
and
lock
aaa
dec
pusha
dec
xor
out
dec
gs
iret
insl
and
sbb
insl
mov
mov
jno
int3
xchg
or
fsubl
mov
jecxz
cli
roll
add
xchg
sarb
aam
imull
pop
loop
mov
push
insb
scas
inc
bound
clc
adc
xchg
adc
loope
lahf
jp
lcall
cmpsb
into
xor
push
js
data16
iret
cmp
inc
jecxz,pt
adc
andl
sub
mov
outsb
fidivrl
xor
mov
pop
sbb
xchg
sti
adc
mov
nop
and
cmp
arpl
inc
xchg
sbb
mov
and
push
xchg
iret
fisubs
mov
iret
push
outsl
dec
int3
je
imul
adcl
jl
outsb
out
je
xchg
mov
fdivrp
test
dec
mov
sub
imul
push
stos
aam
test
stos
and
movsb
push
xchg
add
in
shr
jge
xor
sbb
xlat
pop
pop
xor
jb
jbe
ret
jl
xor
pop
sub
fsin
aam
leave
mov
into
fdivrl
fsubs
add
mov
out
cmovg
pushf
cwtl
cmp
xchg
or
dec
mov
cmpsb
pop
jne
test
sub
mov
dec
popf
js
sbb
les
fucom
jbe
mov
in
push
mov
data16
faddl
out
es
xor
popa
sub
mov
fs
daa
pop
or
popf
push
push
stos
push
mov
push
jo
aas
mov
cld
lock
std
jmp
addr16
xchg
pushf
and
adc
or
cmp
fwait
mov
jl
in
inc
out
dec
jecxz
mov
lods
loope
in
sbb
hlt
xchg
mov
push
sbbb
repz
lahf
int3
notl
stos
lcall
or
repnz
mov
pop
cmp
rclb
subl
xchg
pop
jno
cmp
lds
and
xor
fs
or
inc
addb
nop
out
dec
add
push
ret
insl
push
sbb
and
cmp
arpl
mov
das
outsl
stc
push
test
mov
repz
int
cli
rcrb
nop
fsubr
cld
fcoml
pop
lods
icebp
cwtl
call
add
rcrl
mov
jge
xor
cld
sbb
cmp
dec
jae
loop
fwait
pop
sub
jnp
adc
shlb
sbb
sbb
iret
cmp
es
add
repnz
jl
or
sahf
push
or
fwait
dec
ljmp
test
add
test
inc
inc
mov
lea
into
push
js
daa
stos
mov
hlt
xchg
iret
add
mov
scas
ja
and
push
xchg
dec
inc
out
xchg
dec
add
into
adc
ljmp
into
loop
xchg
lock
stos
xchg
out
pusha
push
mov
mov
push
int3
lea
lahf
mov
pop
jmp
gs
lods
xchg
xchg
push
jb
xchg
aas
mov
hlt
fadd
push
dec
iret
inc
mov
mov
into
xor
rclb
in
mov
stos
sub
das
pop
andb
stc
or
mov
xor
push
in
fildl
cmpsl
pusha
inc
cmpsl
xor
in
cwtl
pop
es
fiadds
mov
inc
adc
lods
out
jno
les
mov
dec
sub
loope
pop
xor
push
ret
adc
jg
and
push
pushf
daa
into
sbb
inc
push
repnz
and
in
push
lret
insw
dec
fmull
push
xchg
nop
fmuls
push
pop
mov
jmp
scas
push
es
cltd
cmpsl
adc
movsb
xor
cmp
dec
loope
sbb
rorl
jmp
fists
adc
adc
sbb
ficomps
ds
test
jmp
sub
mov
push
pusha
cltd
pop
pushf
dec
or
mov
cmp
push
sub
lahf
scas
xchg
add
es
mov
mov
add
scas
stc
push
ret
xor
cltd
data16
xor
mov
push
xchg
jmp
push
xchg
or
jecxz
stos
sub
fcmovb
loope
mov
outsb
jmp
sub
cmp
lods
rol
ja
mov
cmp
cmpsl
cmp
cmp
inc
pop
add
dec
inc
movsb
push
je
or
test
mov
push
xchg
add
repnz
insb
mov
or
call
stos
arpl
adc
adc
rol
stos
xchg
cmp
lcall
and
dec
idivl
lahf
xor
and
sbb
sub
in
lods
loop
add
push
enter
lds
stos
sarl
or
add
lahf
icebp
or
pop
mov
mov
push
addr16
hlt
cmp
test
or
xor
sub
pop
mov
push
pushf
and
mov
add
xchg
add
aam
mov
inc
insl
test
ret
pop
sbb
sub
shlb
mov
add
push
mov
cmpsb
or
xor
loopne
ja
ja
or
lret
lods
cmp
addr16
mov
inc
jmp
shlb
adc
test
jmp
cmp
outsb
hlt
mov
xorb
push
mov
push
cmc
repz
add
lods
cmp
leave
les
mov
mulb
adc
arpl
inc
push
lods
mov
cmp
xchg
loope
jle
mov
int3
dec
jo
daa
push
mov
inc
cmp
xchg
scas
xor
mov
mov
cmp
cmp
mov
sbb
inc
and
sub
test
sbb
sub
push
cmpsb
ds
aas
sub
dec
jmp
xlat
pop
mov
dec
xor
fs
test
xchg
mov
les
stos
cmpsb
inc
repnz
test
add
inc
sbb
xlat
lods
cmp
shl
and
xchg
pop
adc
add
outsb
push
int3
sub
sti
call
mov
cmpb
js
or
mov
repnz
push
adc
push
xor
movsb
pop
ret
xchg
test
push
out
idivl
scas
xacquire
push
or
ret
cltd
or
sub
mov
cs
in
sbb
or
mov
jnp
shl
les
push
lret
lock
aad
cs
cmp
sub
xchg
scas
data16
xor
inc
fisubrs
xchg
cs
outsl
jbe
mov
imulb
mov
outsl
jbe
sub
iret
add
xor
cmp
dec
insb
inc
push
aas
test
lret
sti
daa
mov
xlat
xchg
loopne
add
sti
push
push
push
and
out
pop
cmp
lods
mov
cmp
cmp
das
xor
scas
push
ds
pop
sbb
cmp
dec
incb
lods
in
and
ja
and
addl
sub
dec
outsb
mov
mulb
mov
dec
and
stc
movsl
pop
jg
lcall
out
mov
ds
loopne
xor
enter
les
xchg
aas
in
cmp
in
dec
test
push
cmc
int
in
pop
dec
xlat
sub
pusha
popa
mov
mov
leave
cmp
fs
cs
loope
mov
leave
pop
es
es
or
sub
movsl
outsb
pop
ficomps
sbb
sbb
inc
lret
test
jle
inc
cmc
lods
or
cmp
xor
hlt
scas
xchg
or
out
push
test
stos
sbb
movsb
scas
enter
xlat
les
lcall
push
lock
fs
xor
inc
adc
in
sbb
cld
add
aas
es
sub
mov
jo
push
xlat
orb
and
sbb
addr16
fisubl
mov
data16
or
and
or
pop
stos
push
push
inc
pop
jb
xchg
imul
insl
push
arpl
negl
push
popf
in
xchg
pop
jp
dec
pushf
into
cmp
xor
cwtl
int
pop
outsl
int
cs
xor
dec
aaa
fimull
rcl
rcrb
sbb
std
popa
mov
inc
stc
push
push
fimull
xlat
push
lcall
dec
stos
lods
jmp
cmp
dec
add
add
movsl
cmpl
je
jae
iret
sti
mov
add
mov
sub
jp
lret
ljmp
rol
push
rcrb
pop
loop
dec
jp
int3
or
outsb
jg
push
push
fnstenv
add
cmp
dec
mov
das
mov
mov
and
push
fisttpll
mov
xchg
dec
mov
cmpsb
movsb
roll
lret
test
xchg
sbb
stos
mov
inc
stos
sub
mov
xlat
popa
xor
jns
add
jb
pusha
sub
jae
sbb
imul
xor
xor
mov
bound
and
mov
outsb
jb
adc
xor
out
inc
lds
inc
lret
inc
jae
dec
sub
test
arpl
sbb
in
mov
in
dec
pop
add
nop
and
and
xchg
fxtract
jmp
leave
push
add
pop
add
cmp
cmp
shl
movsl
lods
add
faddl
cmc
and
dec
dec
jb
icebp
dec
xchg
add
cmc
inc
pushf
int
popf
pop
ja
aas
sbb
fcmove
pop
xor
push
iret
ss
sub
in
notl
inc
insl
lds
jg
sti
stos
cmp
fs
sub
jae
cmp
xchg
mov
mov
xchg
test
inc
sbb
xchg
push
shrl
jne
pop
mov
inc
test
sub
push
sub
mov
scas
inc
gs
lea
gs
arpl
imul
adc
sbb
jne
andb
test
pop
cmc
sub
rcrb
push
cld
rcll
push
dec
mov
loop
mov
xor
pusha
jecxz
dec
repz
xchg
movsb
hlt
aaa
sub
int3
mov
fdivs
out
cmp
jbe
or
pop
sbbb
or
mov
inc
dec
pusha
mov
stos
stos
rolb
xchg
pop
sbb
mov
pop
test
and
cmp
mov
cmp
je
cwtl
je
sbb
sub
dec
or
push
inc
sub
jnp
enter
popf
cmp
retw
pop
aas
mov
push
sub
out
jecxz
cli
inc
push
mov
pop
insl
jmp
std
outsl
lock
or
or
mov
lds
mov
lods
mov
leave
ss
out
rorb
inc
jb
dec
btr
push
aam
shll
fidivrl
adc
das
cs
lds
and
lds
pop
out
adc
and
ds
leave
or
dec
test
stos
inc
xchg
repnz
xchg
shll
call
out
scas
mov
enter
ret
and
push
div
and
jle
xor
mov
mov
test
cmp
cmp
les
push
leave
lods
adc
aad
outsb
push
sub
mov
jmp
adc
cmp
repnz
cmc
sbbl
frstor
pusha
loopne
xor
cmp
adc
mov
das
lcall
dec
rclb
push
rorl
daa
leave
movsb
xchg
dec
cmp
push
sub
sti
hlt
pop
jmp
ds
outsl
add
rcrl
cltd
pop
and
adc
sub
in
aas
jo
push
or
pushf
push
in
lret
pop
xor
cmp
inc
leave
sbb
jg
mov
pusha
testl
cmpsl
sbb
aam
loope
and
test
in
mov
movsl
add
stos
push
mov
or
xlat
cmp
fcompl
cmc
pop
mov
sti
xchg
fs
sbbb
jp
pop
ljmp
or
popa
fldl
inc
sbb
sti
popa
aad
lods
inc
dec
lods
mov
push
jne
mov
adc
fnstsw
push
dec
pop
cmp
int3
or
addr16
sbb
bound
stos
call
test
add
and
imul
xchg
xchg
cmp
sub
xchg
in
aas
mov
test
sahf
negl
cli
cmp
repz
divl
mov
sub
mov
stc
jo
dec
mov
mov
sbb
hlt
js
mov
test
sti
out
insb
mov
xor
test
movsl
inc
cli
mov
sub
jae
xchg
fldl
add
add
daa
pop
out
popf
push
ss
lods
push
ret
into
mov
imul
xchg
popa
pop
sub
sub
push
mov
pop
ret
or
inc
enter
or
fidivrl
stos
shrl
test
sbb
shrl
pop
adc
hlt
les
cmpsl
pop
inc
pop
iret
jp
cmpsl
inc
adc
scas
aam
xor
repnz
and
sub
xchg
mov
xorl
add
data16
ret
mov
mov
cld
mov
sti
lahf
lods
lods
xchg
insl
add
jl
adc
daa
add
push
xchg
gs
xor
or
js
pop
das
sbb
lods
loop
movl
mov
and
out
xor
xchg
mov
xchg
cmpsb
jmp
and
xchg
jbe
cmp
xor
mov
imul
jno
xor
in
pop
push
cmp
and
cmpsb
and
mov
push
cmp
lock
jp
movsb
cmpsb
outsl
or
rcrb
or
mov
repnz
mov
cmp
scas
andb
fdivrs
sub
and
popf
push
outsb
add
mov
lcall
dec
sub
or
add
mov
cmp
push
cmp
stc
andl
jns
movsb
push
bound
or
data16
mov
inc
xchg
pop
ss
and
ret
ss
es
adc
mov
xchg
lahf
adc
lods
repnz
jne
inc
pmuludq
out
mov
fadds
and
adc
lds
stos
add
mov
cltd
popf
add
adc
scas
or
jns
icebp
cmp
ljmp
cmp
xchg
lea
clc
scas
mov
pop
pop
xor
fidivs
and
jnp
test
ficoml
push
add
test
insb
mov
mov
stos
xchg
mov
test
push
cmc
repz
adc
xor
dec
sub
cs
or
cmp
add
es
or
jb
es
lcall
add
into
movsb
add
mov
stc
sbb
cmc
sti
sub
outsl
mov
pop
es
adc
or
xor
push
fwait
adc
lcall
or
lock
movsl
sub
cmp
jle
pop
or
daa
lods
sbb
ds
dec
movsl
adc
movsb
sub
sbb
scas
dec
pop
adcl
arpl
out
pop
out
sti
mov
xchg
in
gs
jle
enter
test
xor
and
push
sub
jae
stos
sbb
mov
inc
call
enter
xchg
inc
cmc
sbb
adc
scas
adcl
add
add
sahf
dec
xor
or
pop
jp
jae
bound
rclb
pop
or
ret
outsb
lahf
jns
push
adc
inc
mov
enter
add
cwtl
into
jne
pop
add
xor
xor
scas
stc
push
cmp
or
dec
jns
sbb
sbb
popa
lods
stos
adc
mov
fstp
xor
and
mov
mov
mov
hlt
xchg
xchg
out
das
es
jne
mov
repz
ljmp
mov
or
push
sub
xor
aad
movsl
jno
ja
adc
gs
and
dec
subl
mov
jae
mov
and
test
mov
add
dec
mov
pop
mov
arpl
stos
jl
xor
js
ret
fucom
push
pop
xor
sub
cltd
call
xor
cmp
lock
div
aam
mov
sub
insl
mov
and
adc
repz
addb
cwtl
mov
insb
pop
pop
js
mov
sbb
cmp
movsb
or
cli
popf
inc
test
adc
cltd
xchg
ljmp
popf
push
mov
inc
add
adc
mov
stos
lods
xlat
ret
xchg
shll
popf
out
xchg
insl
cmpsb
or
std
push
cmp
into
stos
scas
scas
ljmp
cmp
dec
lea
fsubrl
cs
cmpsl
mov
scas
sti
or
mov
lea
mov
jb
fildll
stos
xchg
push
movsl
dec
mov
cmp
push
ds
add
outsb
mov
push
or
xchg
cmpsb
scas
incl
cmp
cmpsb
popa
mov
iret
adc
mov
push
vmovntps
das
dec
lods
sbb
stos
rorb
and
push
jle
and
fmull
mov
scas
aas
pusha
lret
or
rcrb
lods
repnz
aas
pop
mov
ljmp
push
sbb
add
and
mov
sbb
ret
cs
adc
xchg
imul
sub
mov
dec
mov
daa
inc
daa
sbb
bound
aas
adc
cs
popf
lods
stos
rorl
movsl
cmp
cmp
adc
lods
push
sub
jb
lahf
cmp
inc
jno
sub
cs
dec
push
pop
es
xchg
mov
xorb
mov
popa
cmp
add
jbe
sub
imul
cmpsb
loopne
mov
push
or
movsb
jle
xchg
add
test
mov
stos
xchg
mov
dec
ret
lea
aas
push
cmc
push
add
jmp
adc
sub
ds
cmp
xchg
les
mov
sub
push
xchg
mov
loopne,pt
mov
fisubl
jbe
mov
xchg
inc
xorb
mov
push
sub
scas
push
daa
cmp
inc
cmpsl
adc
xchg
movsl
xor
enter
pop
inc
sub
lods
into
andl
mov
push
mov
sub
cs
pop
cmp
adc
and
mov
inc
xchg
les
add
scas
cs
sbb
outsl
mov
fwait
push
or
mov
adc
jp
rolb
cmpsl
and
pop
enter
mov
jmp
ds
stos
fildll
ljmp
js
xor
inc
test
mov
fs
mov
gs
fdivrs
jp
mov
repnz
dec
jnp
dec
dec
xor
repz
mov
ret
jp
add
lcall
cmp
pop
lea
adc
stos
imul
pop
fcmovne
add
push
es
and
xchg
push
ljmp
or
repnz
and
movsl
bound
mov
xor
rsm
xchg
and
mov
dec
xor
mov
xor
push
movb
lods
ds
bound
sbb
std
push
cli
out
cmpsb
xor
mov
and
sbb
jae
lods
data16
jmp
mov
daa
push
dec
add
mov
and
jle
je
push
fsubs
stos
ljmp
and
and
outsb
cli
xchg
and
int
mov
cmp
sub
mov
adc
mov
xchg
push
jns
into
in
mov
push
jno
xchg
int3
orb
adc
adc
lods
stos
mov
jno
lcall
push
adc
movsl
xchg
push
daa
cmp
add
movsl
sub
and
into
andl
sub
add
loop
aaa
sub
mov
adc
aas
cs
xor
sub
data16
divb
dec
or
xchg
push
jle
jb
pop
movsb
mov
mov
mov
push
fisubl
movsb
cmpsb
jge
add
jnp
lods
push
out
lea
stos
fidivrl
pop
scas
xchg
imul
and
xor
xchg
aaa
sbb
and
sbb
mov
inc
bound
and
and
or
out
daa
pop
ret
arpl
mov
lret
andb
cmp
fidivrl
cmp
into
mov
pop
cmp
add
inc
into
data16
and
mov
js
scas
mov
xor
es
mov
xchg
clc
popa
ret
mov
daa
dec
push
jg
push
jl
inc
leave
imul
adc
or
stos
cmc
mov
add
es
adc
inc
mov
ds
imul
cmp
push
lcall
rolb
test
iret
scas
xor
negl
lds
add
or
cmpsb
cmp
push
lcall
mov
or
add
jnp
push
mov
mov
add
lods
fs
adc
push
outsb
popf
push
lcall
xor
test
mov
cmp
push
mov
mov
ds
jp
push
popa
pop
into
dec
jno
push
inc
lret
xchg
dec
mov
data16
adc
lods
push
cmp
stos
mov
mov
lcall
lods
adc
pop
ds
push
stos
js
int
cmp
and
dec
loopne
pop
cmc
push
bound
and
sbb
adc
add
xor
sbb
sbb
and
sbb
dec
mov
xor
and
mov
das
into
fiaddl
es
adc
jbe
icebp
xor
mov
pop
stos
adc
cmpsl
push
dec
mov
cmpsl
scas
lahf
mov
pop
aaa
pop
cmpsb
mov
shlb
bound
sbb
ficompl
ljmp
test
or
les
jo
push
sbb
and
inc
inc
into
out
aaa
jae
stos
mov
push
sbb
xchg
mov
or
test
bound
out
test
mov
adc
xchg
jnp
mov
pop
enter
xchg
mov
lock
add
cli
sbb
push
inc
in
push
jne
mov
pop
mov
les
dec
scas
push
insb
cmp
jg
dec
andl
mov
insb
ret
pop
inc
cs
cmpsb
mov
es
push
and
sub
test
jb
sub
roll
xor
dec
mov
pop
addb
mov
or
xchg
pop
push
and
adc
stos
test
cmpsb
scas
cmp
fisubrl
pop
lods
push
mov
stos
mov
dec
lea
xchg
push
shlb
mov
or
jp
loop
loopne
pop
mull
push
cwtl
pop
mov
insl
sarl
lret
es
lods
pusha
adc
fmuls
cwtl
xor
cmc
add
cmp
inc
cmc
pop
int
xchg
or
outsb
sbb
xorb
jmp
dec
pop
xor
push
sub
push
push
lcall
cmp
or
movsb
xor
pop
int3
jmp
mov
xchg
cmp
push
mov
shlb
push
inc
sbb
jno,pn
sub
push
inc
les
into
dec
and
inc
je
rcl
jmp
outsl
jmp
push
xchg
outsl
sbb
adc
loopne
inc
ret
inc
fisubrs
sub
jmp
dec
leave
push
push
pop
addl
imul
xor
inc
xchg
jo
or
imul
xchg
lcall
test
add
in
jge
mov
hlt
dec
ja
loopne
lods
out
pop
or
andl
lea
inc
jmp
loopne
insb
push
cmp
bnd
scas
mov
shlb
cmp
cmpb
push
fiaddl
add
sbb
xchg
cmp
mov
mov
ret
lahf
mov
xorb
mov
sbb
arpl
jbe
lret
inc
mov
mov
xchg
jge,pn
dec
stc
sub
mov
cld
adc
push
xchg
pop
or
pushf
sub
fwait
or
cmp
jb
dec
shrb
sbb
mov
push
mull
in
fs
aam
jo
inc
insl
leave
ja
or
cmpsl
jmp
outsl
sbb
scas
and
fisubrl
popf
hlt
dec
mov
fsubr
icebp
xchg
add
clc
mov
into
test
stos
pop
inc
movsl
xchg
sub
and
push
adcb
push
ret
dec
cs
push
test
xchg
push
pop
imul
lods
fnstcw
int3
test
mov
xchg
or
or
shlb
rcr
js
gs
or
sbb
adc
scas
or
movsl
xor
cmp
aas
repnz
xlat
fs
adc
shlb
decb
mov
repnz
cltd
fwait
push
sbb
rcrl
stos
or
imul
push
xchg
xor
ljmp
ss
icebp
js
fsubl
insl
fwait
adc
jns
cli
mov
pusha
cli
xor
ror
loop
or
sub
mov
mov
cmpsb
cmc
cmpsb
cmp
push
mov
rorl
mov
inc
cmp
push
jbe
mov
add
inc
stc
push
jge
insl
push
inc
mov
or
jmp
add
inc
cmpsl
sbb
mov
jne
in
ja
dec
xor
mov
adc
xchg
stos
inc
xchg
cwtl
adc
ret
cld
insb
mov
xor
sti
int
mov
push
push
icebp
movsb
sbb
xchg
push
xor
fisttpl
test
cmpsb
jle
push
cmp
leave
push
insb
fxch
or
dec
testb
xor
pushf
inc
in
lods
sub
lods
mov
inc
inc
and
movsl
dec
stos
push
rolb
sbb
inc
nop
aaa
nop
clc
imul
mov
sub
inc
idivb
or
mov
clc
fs
stos
mov
push
insl
in
es
mov
pop
push
xchg
pop
shr
or
xchg
pushf
dec
mov
adc
out
sarl
stc
adc
xlat
scas
cltd
popf
loop
mov
jae
stos
cld
negb
pop
adc
cltd
mov
mov
mov
lods
les
xlat
mov
int3
or
pop
or
insl
addr16
repnz
clc
xchg
sub
cmp
mov
push
push
movsl
into
cmp
push
jp
xchg
movsl
sbbb
mov
push
sub
aas
and
lret
sbb
cmp
xchg
test
std
lds
cmp
mov
push
ljmp
mov
scas
mov
int
pop
push
xorl
push
fxch
mov
shll
scas
sbb
inc
push
fnstcw
jb
xor
sahf
addr16
mov
roll
outsb
das
movsb
sub
sub
cwtl
cltd
out
mov
adc
in
pop
sub
sahf
mov
fiaddl
xor
addb
xlat
pop
sarl
adc
decb
sub
xchg
mov
dec
clc
jae
stos
js
sbb
jae
and
arpl
es
xchg
xor
lahf
xchg
out
and
jno
loope
sbb
sti
mov
mov
out
leave
cs
xlat
pop
adc
mov
movsb
xor
cmp
dec
cld
scas
adc
fsubs
inc
sub
andl
xchg
push
je
adc
pop
jp
dec
imul
enter
adc
test
lret
out
sbb
lret
mov
sbb
adc
and
cmp
stos
jb
pop
fsts
lods
add
addl
cmp
sub
jp
sub
push
mov
xorb
add
xchg
sub
jne
push
push
mov
sbb
add
out
mov
sub
xchg
pop
mov
repnz
repz
push
cmpsb
sbb
ljmp
add
fisttpl
mov
ficoms
push
mov
dec
jbe
cmpb
and
pop
stos
adc
xchg
add
jg
jmp
inc
mov
scas
pop
jb
pop
mov
mov
lea
cmp
jnp
pop
xchg
cmpsb
adc
cmpsl
jmp
pop
adc
push
or
fwait
es
incb
and
pop
ja
into
fldl
and
jns
inc
loop
add
push
repnz
cmp
jge
movsb
push
bound
jp
out
push
pop
xlat
jge
push
sahf
xor
xor
adcl
out
das
add
xchg
int
pop
mov
dec
jge
push
hlt
cmp
push
jno
cmpsb
rol
adc
mov
and
cmpsl
sahf
jg
mov
sub
cmp
lret
sub
sub
sti
xor
and
xchg
cmp
and
mov
mov
mov
mov
adc
movsb
aam
jb
sahf
aad
push
mov
pop
stos
mov
push
sub
into
popf
push
test
mov
imul
mov
stos
cs
jnp
mov
les
pop
adc
shl
xchg
out
gs
dec
push
xchg
push
or
popa
sbb
jo
cmp
imul
dec
inc
aaa
movsb
pop
add
aaa
sti
inc
pusha
lds
stc
pop
gs
sub
nop
pop
scas
loope
or
aad
jecxz
mov
jb
loopne
or
adc
xlat
mov
das
xor
adc
nop
in
inc
cwtl
test
mov
jmp
loopne
test
mov
scas
dec
test
pop
cmpsb
xor
popf
stos
sti
cmpl
ss
mov
adc
into
clc
xchg
sub
dec
xor
and
adc
mov
out
popa
pop
out
icebp
xor
mov
fidivs
fiaddl
call
pop
sahf
dec
imul
out
leave
jnp
ss
mov
lods
and
push
leave
stos
pop
xchg
out
sahf
sbb
xchg
roll
nop
fimull
sub
icebp
cmp
out
bnd
gs
sub
and
xchg
sub
test
and
fidivrs
xor
rol
jo
es
popa
sarb
mov
mov
hlt
mov
mov
mov
adc
cmpsl
mov
cs
dec
cli
or
push
outsb
pop
mov
cmpsb
mov
pop
repnz
mov
pusha
fadds
xchg
fistl
add
mov
addr16
iret
pushf
push
inc
sub
outsl
xchg
in
scas
mov
in
and
inc
lahf
pop
or
sbb
aas
pop
xchg
add
mov
aas
jp
and
jbe
jns
inc
rcl
hlt
movsl
sub
scas
mov
dec
xor
arpl
ret
lds
mov
pusha
movsl
arpl
cwtl
outsl
out
out
xlat
lods
negl
push
add
sub
pop
call
jo
xchg
xchg
je
inc
inc
in
sbb
jns
xlat
clc
inc
clc
or
inc
add
cmpsl
jle
sbb
add
std
daa
scas
push
pop
lds
mov
bound
push
mov
add
stc
ljmp
test
cmp
lret
mov
xchg
popl
popf
cmp
xchg
push
xchg
dec
bound
aaa
insb
dec
in
cmp
add
and
dec
xlat
popa
dec
sub
loop
lock
sub
xlat
das
cli
rcrl
or
gs
mov
pop
outsb
aas
xchg
mov
xchg
jge
stos
insl
ja
mov
flds
leave
adc
push
fisubrl
int
lds
ret
es
xchg
fdivrl
sti
jb
pop
add
fistps
pushf
sbb
mov
pop
jmp
push
lcall
ss
movsl
xchg
adc
fisubl
movsl
adc
mov
inc
pop
out
jb
nop
dec
fs
lret
scas
mov
test
adc
arpl
int
dec
das
pop
pop
dec
xchg
adc
push
imul
into
repnz
aas
out
pop
cmp
movnti
test
sub
mov
mov
adc
sahf
push
addl
jo
gs
psubsb
addr16
inc
cld
push
push
or
shll
xor
divb
sbb
push
mov
call
std
mov
ljmp
stos
stos
mov
movsl
and
or
add
xor
pushf
mov
xor
sbb
cmpsb
ds
jb
pop
out
iret
jbe
and
adc
sbb
add
mov
ljmp
mov
add
mov
icebp
or
fdiv
andl
mov
and
push
aam
mov
cs
cmpsb
push
in
pop
adc
or
adc
or
in
jnp
out
sbb
inc
xchg
adc
popa
ds
cmpsl
data16
leave
pop
adc
mov
sti
dec
ret
insb
in
push
push
sub
sub
lahf
fistl
out
sub
cmp
sub
repnz
es
repnz
fucomip
push
push
add
sub
das
and
xor
or
pop
pop
inc
xchg
push
adc
sub
jo
jmp
push
enter
sub
inc
iret
push
jne
jmp
movsl
gs
in
push
sub
test
inc
mov
gs
and
mov
sub
call
and
movsl
pop
fcomps
inc
adc
push
roll
lock
cmp
ss
mov
mov
rclb
into
mov
and
in
and
flds
sub
pop
into
adc
and
jmp
movsl
loop
adc
push
dec
andb
add
or
adc
cmpsl
jg
xchg
pusha
repz
push
mov
sbb
jae
in
add
jecxz
aam
inc
adc
fnstsw
insl
out
mov
mov
scas
cmp
aad
mov
mov
jb
dec
insb
outsb
push
rolb
push
bnd
mov
sahf
mov
lret
mov
cmp
sbb
pop
cmp
fucomi
jecxz
jno
test
arpl
sub
test
scas
sub
fs
jl
inc
lds
cltd
fimull
push
ret
mov
push
add
push
cli
in
lds
mov
mov
xchg
stos
rclb
sub
pop
cmpsl
or
inc
int
jo
scas
jge
inc
sub
movsb
xchg
push
fidivrs
in
inc
loopne
mov
popa
lds
scas
loopne
pop
sbb
outsb
inc
xchg
xchg
fidivrl
shrl
or
andb
lock
add
jl
jle
cmp
mov
mov
jmp
mov
inc
push
je
dec
dec
call
xchg
pop
int
cld
push
test
fwait
sbb
aaa
sahf
fildll
mov
push
sbb
push
imul
pop
lods
push
sbb
aaa
mov
sub
push
movsb
and
push
jmp
mov
adc
lret
lds
add
and
jmp
push
loopne
xchg
mov
fwait
jnp
inc
adc
imul
ret
pop
decb
xlat
stc
and
mov
ljmp
sbb
cmp
jbe
pushl
jle
adc
enter
lds
inc
dec
pop
and
inc
cltd
mov
cmc
adcl
das
sub
push
addl
fldenvs
jns
idivl
sub
outsb
sbb
sbb
pop
stos
dec
jnp
cmpsb
mov
pop
pop
aaa
int
xchg
fbld
dec
lahf
push
cmp
push
mov
mov
loope
cmpsb
stos
mov
push
or
cmp
push
and
cmp
dec
mov
bound
in
cmc
movsl
xchg
cmp
shlb
adc
and
adc
xchg
test
ret
cmc
neg
push
sbb
call
sub
test
mov
ja
push
xor
popf
mov
xchg
loope
sbbl
inc
cmpsb
jnp
stos
movb
cli
shlb
cli
fidivl
xor
jbe
sbb
dec
sahf
xchg
sbb
push
adc
cmc
addr16
cmp
mov
sahf
fisubrl
dec
inc
xlat
fcomps
sub
out
int
add
and
int3
popf
push
int3
lds
daa
sub
push
mov
cmp
cs
lea
idivl
mov
jle
mov
add
sub
out
sbb
xchg
outsb
cmpsl
sub
xchg
xchg
pop
mov
daa
sbb
subl
stos
dec
out
xchg
xor
popa
dec
pandn
pusha
push
pop
mov
in
nop
mov
cltd
cmpsl
push
inc
mov
mov
lock
cmpsb
scas
mov
push
lret
add
jno
jb
andl
subl
mov
xchg
mov
push
lods
xor
push
ds
and
push
fcmovb
into
jge
cmp
xor
ret
and
xor
push
mov
hlt
lea
mov
push
adc
aam
mov
or
push
pop
add
notb
popa
test
stos
xchg
js
ja
dec
les
adc
fdivrp
and
lods
jne
aam
pop
inc
out
test
xchg
out
push
js
loopne
pop
push
and
push
dec
shr
mov
mov
jle
jne
mov
shll
lret
jae
ret
or
sub
mov
shlb
ficompl
rol
or
dec
dec
loope
stos
dec
sub
lods
and
ret
int3
push
out
mov
mov
stos
or
fiaddl
cmp
and
xchg
aad
loop
xchg
int3
dec
sub
insl
fstpt
push
fidivrs
aad
jg
arpl
mov
stos
lods
inc
neg
repnz
inc
iret
ds
stos
pop
inc
push
in
aad
mov
rolb
pop
jecxz
out
negb
mov
mov
adc
mov
outsl
testb
stc
pop
jne
in
into
gs
mov
loope
es
int3
adc
lret
cmp
loope,pt
mov
dec
cmp
cmp
sbb
scas
es
ffree
xchg
and
cmp
js
movsb
stos
aas
lret
int
add
ficoml
repz
jae
in
push
or
push
lock
jmp
inc
loop
and
jne
dec
int3
shr
ret
mov
jno
bound
push
inc
mov
aam
sub
push
cmpsb
dec
int
out
in
mov
mov
ret
lods
ss
mov
nop
loopne
insl
pusha
push
pop
or
fmull
xor
mov
rcl
sub
adc
push
popf
es
lcall
and
xchg
ret
sarl
ljmp
into
pop
les
ljmp
movsl
loop
cmpsl
or
mov
in
cs
nop
loop
pop
aam
scas
addb
mov
and
mov
add
push
lods
icebp
add
add
iret
js
jno
popa
inc
aas
testb
ds
stc
imul
adc
pop
out
xchg
mov
ss
mov
sbb
adc
inc
stos
xor
aam
cmp
push
out
dec
sub
jl
int3
push
and
imul
mov
mov
cwtl
sbb
or
and
and
lds
mov
ret
mov
push
out
and
push
leave
int
sysret
movsb
push
jmp
push
adc
jmp
add
jne
fsubrl
aas
loopne
lcall
ds
movsb
xchg
out
fcomp
sti
dec
mov
stos
xor
mov
int
or
add
xchg
movsb
out
cwtl
std
shlb
cmpsl
jne
cmp
mov
xor
ss
mov
lret
mov
lcall
pop
mov
lahf
outsw
pop
add
mov
add
pop
icebp
les
mov
repz
stos
movsb
and
ficoml
pushf
cmpsb
call
mov
es
adc
fstps
sub
sub
stos
xchg
mov
and
in
lods
adc
in
sub
cmpsb
cmp
cmpsl
les
cmp
pop
repnz
repnz
sub
fsubl
movsb
jge
cmp
outsl
loopne
es
xchg
sahf
daa
push
cmp
fldl
sub
cmp
movb
sub
mov
lock
add
xlat
mov
ss
and
mov
ljmp
push
test
fsubs
or
push
jae
ret
and
in
movsb
sub
stos
int
jns
daa
mov
jmp
lds
inc
add
cmp
orb
and
mov
pop
add
repnz
adc
aaa
cmp
mov
les
fimull
add
jp
movsl
jmp
xor
cltd
hlt
mov
jae
popa
dec
adc
push
xorl
std
xor
outsl
lods
es
mov
lock
repz
inc
mov
out
inc
cmp
ljmp
jns
out
xchg
xor
mov
dec
fstps
sbb
push
adc
lods
add
or
fsubl
sti
incb
stos
xor
scas
scas
gs
les
xchg
cld
movsb
adc
push
ret
cmp
xor
fwait
sub
and
out
mov
daa
inc
jne
mov
push
out
das
adc
mov
cs
ret
movsb
es
add
push
sbb
sar
jb
arpl
icebp
in
add
cmp
inc
fidivrs
jl
inc
mov
rolb
push
call
scas
jecxz
jne
movsb
lcall
out
sbb
mov
inc
insl
nop
in
inc
mov
inc
stc
sub
rolb
push
jne
subb
add
and
cmc
scas
push
pop
loope
adc
negb
sub
add
movsl
cmp
ret
es
jmp
rcl
aaa
lods
push
fisubs
jp,pt
mov
into
xorb
xchg
mov
mov
adc
xor
mov
scas
and
and
popf
and
es
cwtl
cmpsl
adc
lcall
jmp
mov
es
hlt
es
mov
cmp
clc
negl
scas
in
sub
lock
cs
push
adc
fnstenv
and
or
push
mov
mov
sbb
xchg
xlat
in
and
fwait
sub
sub
stos
lcall
add
add
out
ret
stos
int
mov
pop
inc
lea
sar
cld
add
mov
or
sahf
xor
sbb
int3
stos
and
and
sahf
andb
mov
les
sub
fistps
mov
mov
loope
scas
cmp
repnz
shrb
mov
aaa
insl
fisubl
sti
insl
int3
dec
ss
mov
repz
and
xchg
cmp
orl
inc
add
stos
jle
pushf
push
add
adc
mov
rolb
pop
or
lret
adc
mov
pop
mov
xchg
mov
sbb
mov
movsl
ret
adc
in
stos
lea
les
cmp
clts
es
push
mov
push
rcrl
movsb
jge,pt
cmp
dec
stc
mov
xchg
clc
pushf
es
xchg
xchg
das
mov
xchg
pop
cs
into
pusha
cmpsb
repnz
push
je
ret
out
jecxz
xor
repz
push
add
mov
xor
sbb
mov
mov
subb
push
inc
and
addr16
push
jae
loop
adc
mov
mov
inc
push
push
add
pop
and
inc
mov
cltd
adc
xlat
sub
imul
xchg
sbb
mov
cmpsl
sub
pop
push
les
add
stos
in
mov
scas
fidivs
lcall
aas
adc
push
mov
sbb
xchg
fcmovne
lret
filds
stc
stos
lods
mov
loop
loop
push
mov
scas
iret
lea
and
push
add
ret
mov
leave
push
test
pop
arpl
push
inc
imul
xor
mov
gs
stos
sbb
push
ljmp
and
testb
cli
or
loop
fisubrl
sub
pop
push
or
mov
jae
ret
xchg
and
idivb
pushf
and
mov
push
pop
cltd
adc
out
sub
xchg
mov
ret
xchg
mov
push
jmp
int3
repnz
push
stos
mov
dec
sbb
push
popa
clts
stos
movsb
add
cmp
mov
add
sti
sahf
mov
stos
adc
fwait
lcall
adc
dec
mov
outsb
fdivl
pop
test
mov
out
lret
sbb
lret
mov
jge
mov
movsb
pop
xor
jmp
mov
pushf
mov
jl
or
xor
ret
push
dec
push
mov
push
mov
rcl
andl
sub
mov
dec
popa
mov
sub
daa
xchg
mov
sub
addr16
xchg
rcrl
scas
sub
cmpsb
jo
mov
push
or
and
jle
cmpsb
push
or
aad
stos
rcll
and
mov
adc
dec
or
xchg
or
je,pn
cmp
and
rolb
sub
jb
mov
mov
adc
movsb
push
dec
xchg
jle
inc
stos
mov
bound
loope
mov
and
sbb
inc
mov
adc
stos
mov
jno
push
cmp
sub
push
pop
into
jno
scas
ljmp
aas
loop
jle
push
xorb
adc
and
stos
mov
test
sub
es
mov
mov
jb
pushf
das
mov
push
mov
stos
xchg
jge
push
push
adc
cmpsb
jge
sbb
movsl
cmp
stos
rorl
cmp
dec
jle
cmpsb
dec
inc
add
cmp
jbe
cmp
lcall
fsubrp
jnp
fidivrl
mov
outsb
repnz
int
mov
mov
xchg
sahf
and
or
push
cmp
adc
push
push
ret
int3
inc
jge
sbb
jmp
push
push
jae
into
dec
sub
push
shld
movsl
jno
add
dec
loop
mov
mov
mov
and
lcall
test
inc
jle
xchg
enter
xlat
push
cmpb
and
jne
ret
jbe
push
das
sub
popa
int
xchg
movsl
cmpsl
push
pusha
dec
adc
mov
add
dec
les
adc
mov
push
mov
jg
dec
cmp
fildl
xchg
movsl
stos
push
add
add
cwtl
ret
pop
jle
aas
cs
push
push
push
dec
inc
scas
pop
shlb
popa
fmuls
sarl
leave
add
cltd
or
push
lods
fistpl
sbb
cmp
xchg
jae
into
sub
add
xor
and
lret
fildl
fnstcw
adc
scas
outsb
mov
sub
mov
iret
es
add
shrb
addb
sarl
ds
ja
push
xchg
and
cmp
mov
sbbb
mov
push
push
mov
stos
stos
push
mov
lcall
ret
int3
push
dec
int
xchg
fs
mov
adc
and
add
mov
adc
and
movsl
je
es
pop
ljmp
inc
ljmp
add
mov
push
enter
pop
pusha
jmp
lods
ret
mov
mov
add
addr16
stos
outsb
scas
lods
push
lret
add
or
adc
or
pop
sub
scas
icebp
bound
pop
fidivrl
cmpsb
ja
rcl
ret
mov
lcall
mov
xchg
cmp
stos
xor
daa
inc
push
mov
int3
cmp
adc
loop
das
inc
sub
sti
cmp
scas
jne
movsb
mov
add
jp
xchg
cwtl
aas
loop
push
ja
dec
bound
push
jnp
jle
popa
lcall
sbb
mov
jb
bound
jb
sahf
fwait
mov
imul
mov
jp
mov
pusha
push
aaa
mov
sub
add
dec
pop
test
into
inc
sbb
aas
push
testl
cs
jne
stos
push
mov
inc
cmp
js
es
fs
push
mov
arpl
sub
daa
dec
jns
mov
xchg
popa
and
jo
cmp
push
and
das
scas
mov
cli
jg
pop
sbb
jl
cld
xchg
repnz
push
into
cltd
dec
cld
add
inc
sti
mov
push
test
mov
pop
push
jno
lock
ja
xchg
dec
sbb
xchg
sbb
sub
bnd
das
mov
bound
lea
mov
inc
ror
dec
test
xor
xchg
inc
lds
adc
adc
mov
stos
mov
cmp
es
inc
push
adc
mov
xor
gs
sub
and
and
sub
loope
lret
loop
jge
push
dec
mov
adc
aas
rcrl
jbe
push
popf
aam
adc
pop
push
xor
jne
push
add
jno
mov
adc
scas
cmp
fimull
gs
jle
inc
lcall
scas
or
jo
cmpsb
adc
pop
cmpsl
cmpsb
addr16
adc
add
add
pop
mov
pop
and
lret
ljmp
and
inc
pop
dec
and
scas
inc
roll
xor
subl
stos
test
outsb
add
adc
scas
rcrb
dec
mov
mov
lret
into
push
dec
lds
push
cmp
add
sub
mov
xchg
pop
insb
mov
stos
rorl
jne
test
dec
ret
test
das
xchg
mov
stc
jb
out
andl
xor
pushf
lea
push
jns
cli
pop
mov
jbe
jl
jge
jl
xorl
or
push
lea
jb
pop
int
orl
dec
leave
pop
popa
sub
dec
mov
orl
or
inc
and
push
insb
inc
mov
mov
jno
jle
imul
jl
cmpsl
stos
and
rol
inc
pop
mov
push
inc
lds
and
and
xchg
outsl
mov
or
adc
push
sbb
sbb
inc
rol
lods
mov
lret
push
pop
cmpsb
fisubrl
inc
popa
mov
arpl
push
push
jbe
mov
add
lret
adc
ja
stos
cwtl
cwtl
add
dec
adc
es
push
adcl
cltd
nop
sub
push
pushf
ljmp
sub
xor
adc
pop
add
push
dec
mov
outsb
dec
out
scas
cmp
mov
or
xchg
xchg
push
add
scas
dec
ret
mov
scas
dec
in
inc
push
push
stos
pop
dec
mov
add
dec
cmpsb
mov
sub
xchg
mov
stos
sbb
mov
cmp
popf
shlb
cmp
sub
mov
dec
cmp
test
pop
and
out
mov
add
sub
stc
jl
mov
pop
aas
xchg
xor
pop
mov
mov
rcrl
push
xlat
lock
add
outsb
push
test
and
inc
mov
add
inc
and
xchg
jecxz
ret
mov
push
sub
xor
movsb
cwtl
lcall
dec
adc
pushf
lds
mov
push
sub
xchg
sub
bound
sub
bound
scas
movsb
push
int
or
cs
dec
aas
sub
inc
add
stc
pop
scas
cmp
fs
push
xchg
movsl
ret
mov
ds
push
pushf
dec
inc
pop
and
xchg
inc
and
jbe
xchg
add
mov
fimull
sub
push
xchg
pusha
mov
jle
dec
add
inc
cmpsl
into
icebp
fs
sbb
push
mov
push
orl
outsb
addl
cs
push
xchg
and
and
cli
dec
and
mov
push
je
and
sbb
and
add
js
movsb
xchg
push
cmp
data16
mov
push
mov
mov
scas
roll
testb
repnz
inc
xchg
mov
dec
stos
xor
push
int
mov
daa
sub
mulb
xor
scas
cmp
adc
push
and
xchg
es
mov
adc
iret
xchg
fwait
push
mov
jb
jbe
mov
cmpsb
jge
dec
fnsave
inc
inc
push
pop
or
bound
lds
jne
aas
push
push
mov
dec
pop
and
lds
enter
insl
xor
lret
fisubrs
pop
xor
cltd
shl
daa
ret
mov
dec
inc
add
call
pop
stos
int3
adc
js
out
cmp
decl
mov
cmpsb
push
push
cmp
repnz
mov
sbb
into
jg
movsl
push
push
int3
push
loope
and
xchg
andl
lret
movsb
add
fs
repz
imulb
dec
pop
addr16
mov
sub
or
fwait
sahf
in
in
int
dec
mov
push
push
add
cmp
popa
and
inc
sti
xchg
sub
push
lods
cs
push
ret
cmp
test
es
adcl
cltd
data16
pop
mov
ds
sub
inc
es
rcrl
xchg
mov
jge
test
push
mov
fdivs
cli
sbb
and
or
lret
xor
jnp
jge
scas
stos
inc
add
test
inc
inc
fmul
cmpsl
or
ret
xor
test
insl
cld
push
pop
push
repnz
adc
jns
sbb
push
and
cmp
mov
incb
cmp
pop
pop
and
rcrb
shl
cmp
add
xchg
int
cmpl
mov
test
jbe
mov
in
add
lds
es
jo
xor
xchg
daa
cmc
sbb
hlt
mov
and
loope
sar
bound
lods
and
inc
push
mov
cltd
rcl
mov
xor
lds
insl
sub
xchg
js
jmp
jmp
movsb
xchg
push
adc
xchg
cs
les
test
add
sbb
and
cmp
in
jbe
mov
outsl
lcall
xor
popf
fsubl
push
pop
filds
int3
xchg
cmpl
inc
icebp
mov
mov
int
lods
inc
and
jecxz
test
mov
adc
jge
fcompl
cli
inc
xor
pop
add
push
sahf
icebp
mov
and
sarb
scas
repnz
jg
push
andl
pop
jp
hlt
push
and
jae
aad
inc
lret
mov
jnp
addr16
and
in
mov
sbb
pusha
cmp
pop
lds
scas
mov
pop
mov
dec
in
clc
rcrl
adc
and
sbb
adc
or
dec
aaa
pusha
test
jns
mov
cmpsl
lds
in
jl
push
fnstenv
xchg
mov
ds
mov
sub
push
sbb
sarl
push
out
cmp
jo
add
xor
mov
xchg
out
pop
pop
sbb
arpl
insl
or
sbb
testl
aad
lret
movsb
fnstcw
adc
scas
jnp
iret
arpl
cli
push
dec
je
inc
pop
das
lods
adc
fcomps
inc
mov
imul
xor
lahf
inc
clc
mov
sub
shlb
les
mov
repnz
add
push
stos
dec
sbb
pop
movsl
jne
sarb
adc
rorl
std
lcall
lahf
addb
push
std
xor
sub
ss
push
sbb
cmc
nop
xchg
sbb
out
adcl
sbb
orl
lock
xlat
pop
mov
scas
mov
das
adc
aad
popf
inc
dec
sbb
stos
dec
push
pop
mov
xchg
rcrl
cmpsb
jb
jbe
mov
or
mov
cmp
aad
mov
or
insb
sub
ret
mov
lahf
cwtl
or
jmp
popa
inc
inc
test
leave
xchg
push
lock
add
das
dec
cmc
imul
adc
in
mov
sub
xorb
arpl
and
push
jae
repz
mov
mov
inc
inc
cmpsl
notl
add
out
xchg
fisttps
add
push
mov
ret
jae
mov
cmp
inc
mov
lods
cmp
sub
lahf
mov
push
jbe
mov
xor
and
imul
imul
or
movsl
sub
popa
mulb
stos
sub
xchg
cmp
ret
add
xchg
aad
ja
jl
cmpsb
pop
scas
mov
fidivrs
movl
repnz
cwtl
test
jns
cmp
pop
add
int
subb
cmp
in
and
sti
iret
add
inc
es
sub
fisubs
xchg
mov
mov
sbb
ljmp
xor
test
jo
cs
mov
shrb
icebp
iret
pop
fldcw
aad
fbld
roll
xor
lods
imul
mov
add
push
adc
and
addl
test
aad
cmp
ss
adc
lcall
add
inc
div
sbb
jg
fwait
mov
clc
push
sub
mov
sub
pop
xlat
jp
mov
inc
xchg
push
outsb
push
inc
cmp
loopne
scas
inc
mov
pop
or
adc
adcl
rcll
cmp
mov
sbb
cmpsb
movsl
xchg
mov
out
mov
push
adc
xchg
mov
ss
adc
mov
xchg
dec
nop
mov
and
movsl
insb
shr
ljmp
dec
push
arpl
ljmp
das
add
lret
adc
pop
lea
stc
jecxz
mov
sahf
imul
mov
test
xlat
xlat
inc
mov
pop
je
cli
or
fsts
shrb
sbb
push
xchg
adc
pop
lahf
mov
push
mov
push
cmpsl
jns
inc
push
jnp
fimull
iret
fs
testl
ja
fstpt
sti
push
bnd
mov
cli
pusha
fiadds
sub
testl
jae
mov
and
and
pop
pop
xchg
inc
xor
in
jl
repz
mov
sub
stc
and
icebp
cmc
inc
jb
push
xchg
imul
negb
sub
mov
and
dec
lcall
pusha
inc
push
in
insb
adc
pop
pop
mov
rol
nop
out
shlb
lods
and
bnd
and
push
repnz
sahf
out
and
add
arpl
xor
movsl
mov
mov
arpl
sbb
popa
inc
mov
mov
out
sub
es
adc
int3
repnz
mov
push
sub
fidivrl
in
mov
movsb
ret
movsl
dec
hlt
divl
push
mov
mov
and
add
adc
js
pop
into
test
addr16
scas
fcompl
dec
ds
push
xor
scas
or
cli
dec
ds
push
fs
sbb
std
push
ljmp
testl
movb
xchg
fiadds
xchg
mov
movsl
jb
sti
cmp
stos
adc
adc
ret
mov
add
xchg
mov
mov
mov
jmp
addr16
out
mov
lds
mov
fldt
jp
mov
dec
and
mov
sbb
mov
arpl
mov
cs
idiv
movntq
out
mov
cmp
js
test
into
push
mov
mov
test
int
pop
andl
xchg
sub
mov
jle
test
inc
das
cmp
lret
push
aad
addb
popa
cmp
pop
cmpsl
repnz
hlt
adc
mov
repz
or
les
mov
out
dec
repz
add
pop
in
pop
lahf
inc
mov
push
movl
sbb
pop
pop
xchg
imul
inc
or
xchg
inc
cmp
mov
cs
out
and
leave
pop
andb
ss
dec
fcoml
dec
cmpsb
test
das
ds
daa
sub
lds
sub
out
movsl
add
loopne
or
shll
into
pushf
dec
outsb
adc
xlat
cmp
shll
outsl
leave
inc
inc
rcrb
adc
mov
aaa
mov
aaa
sub
xor
cmc
and
pop
sub
sahf
int
scas
addr16
xor
lock
and
arpl
pop
test
mov
sub
les
stos
cmp
mov
cmp
ds
sbb
push
cmpsl
into
cmc
cmp
push
test
sbbb
data16
das
nop
ss
and
xchg
push
in
push
xchg
cli
cmp
jecxz
or
or
xchg
sbb
cmp
mov
ss
aad
inc
enter
or
cmp
and
mov
adc
in
cs
scas
sub
xor
mov
jmp
or
sahf
das
movsb
xchg
xchg
out
jb
and
stos
ss
int3
dec
mov
and
mov
mov
add
in
cmpsb
ss
in
jne
in
inc
jb
or
repnz
lret
icebp
inc
xchg
mov
hlt
mulb
cmp
push
sub
jb
xor
outsb
fwait
sarb
inc
out
mov
push
xchg
mov
scas
out
pop
cli
les
mov
in
into
cmpsb
dec
cli
and
sbb
adcl
bnd
sti
subl
and
or
test
mov
stos
subl
mov
inc
cmpsb
mov
and
cmpsb
stc
mov
sub
add
push
inc
mov
daa
xchg
pop
jp
test
std
xor
sbb
and
mull
das
mull
adc
mov
cs
ret
bound
jns
mov
icebp
in
imul
push
mov
ret
ds
ljmp
test
shll
mull
fcomip
popa
cli
fcmovnbe
cld
lret
push
jne
push
mov
or
and
ret
mov
sbb
mov
in
test
cmp
jne
mov
stc
adc
push
inc
adc
adc
lret
and
mov
stos
mov
es
rcrb
lods
push
xchg
lret
pop
bnd
mov
push
test
movsb
push
cmp
orb
pushf
adc
mov
mov
jl
mov
outsb
das
push
mov
in
push
icebp
inc
push
subb
jnp
insb
jb
aas
inc
lds
jno
daa
ljmp
movsl
loop
mov
push
cmpsb
fcmovb
adc
pop
add
add
mov
mov
loop
mov
xchg
sbb
pop
jb
movsb
mov
mov
es
das
sbb
push
push
sub
lcall
imul
lock
jbe
mov
mov
cmp
stos
pop
sbb
cwtl
cmp
popf
mov
mov
cmp
xchg
dec
xor
xor
stos
xchg
mov
and
add
adc
lods
adc
out
lahf
std
ds
test
int3
ret
mov
inc
ret
cltd
in
ret
push
pop
out
and
out
mov
cli
das
fcmovne
lea
cs
cwtl
inc
mov
nop
inc
int
push
mov
mov
stos
lods
and
jle
sub
lds
fisubrs
or
ds
adc
cmc
scas
sbb
jg
mov
loope
jle
sbb
inc
lods
pop
scas
cmp
xor
out
ret
int
push
push
fadds
add
sub
mov
shll
int3
jecxz
or
fadd
jb
cmpsl
mov
sub
ffree
dec
and
add
and
cmpsl
movl
aam
mov
cwtl
fcomps
imul
cmpsl
lret
fdivl
iret
jnp
or
ret
inc
stos
enter
imul
ret
push
lods
push
adcl
aad
outsb
cmp
iret
sub
in
cmp
mov
scas
rorb
push
push
sbb
mov
ds
or
js
mov
push
pop
fwait
inc
pop
inc
test
sub
stc
pop
lret
mov
jb
xlat
dec
mov
pop
mov
gs
inc
jp
les
pop
icebp
arpl
sub
pop
and
cmp
iret
ljmp
add
dec
arpl
or
add
jmp
rolb
ret
rolb
mov
shr
les
mov
lret
into
mov
sarb
mov
mov
push
xchg
sbb
jp
movl
and
push
pop
leave
out
ret
mov
mov
in
adc
or
sahf
stos
sbb
ja
cmovle
call
faddl
cld
pop
and
scas
push
sahf
in
ret
adc
and
xor
stos
ret
scas
scas
in
and
imul
daa
push
dec
ret
mov
lcall
mov
into
xorl
mov
cwtl
shll
add
int
rclb
scas
xor
test
adc
xchg
xlat
in
outsl
lret
push
das
jp
rol
insl
mov
sub
and
fldl
inc
dec
out
sub
sbb
test
pop
aad
adc
ret
jp
subb
cmpsb
mov
es
lret
and
mov
push
mov
pop
cmp
xchg
sub
sbb
push
loope
es
mov
les
sbb
scas
scas
jmp
ficoml
mov
push
xor
les
in
mov
jmp
aas
push
add
into
fnstenv
daa
imul
pop
or
sub
ljmp
push
roll
add
ljmp
mov
out
xchg
jae
enter
sti
test
mov
fmul
iret
pop
sub
mov
mov
int
sub
xorl
lret
and
in
ss
push
jne
or
sub
mov
cs
add
jge
add
ret
bound
sbb
pop
repz
xor
add
ret
mov
fidivl
xchg
and
push
mov
push
push
mov
adc
add
push
jmp
lea
cmpb
sbb
mov
insl
mov
dec
sub
mov
mov
mov
outsb
mov
inc
rorl
stos
jbe
add
shlb
push
add
push
adc
fidivrl
sub
sub
push
adc
push
test
daa
repnz
popa
sarl
fcompl
and
nop
aas
ret
pop
mov
add
lods
xchg
mov
mov
or
rcr
xchg
or
push
mov
push
in
cmp
jns
loop
repnz
lods
fisubrl
stos
out
and
mov
mov
stos
cmp
das
push
dec
pop
test
insb
cmp
pop
pop
and
jmp
xorb
jae
ljmp
inc
xor
mov
es
int3
int
sub
dec
mov
mov
cmpsb
les
scas
stos
adc
mov
jb
and
add
movsl
out
xchg
pop
jne
mov
js
push
loope
cmpsb
xor
or
mov
cli
test
sub
mov
cwtl
and
fwait
inc
push
fbstp
popa
add
jb
rol
arpl
loop
dec
int3
ret
cmpsl
idivb
pop
ret
jl
bound
addl
push
sti
testb
call
aas
push
ret
sbb
int3
ss
pop
and
subb
and
ret
stos
outsl
popa
mov
ret
sub
unpcklps
push
dec
jb
mov
lea
jb
cmp
mov
add
add
shll
popa
mov
repz
iret
std
les
push
inc
and
fnstcw
into
mov
jns
push
xor
xchg
push
pushf
data16
es
mov
and
xor
cmpsl
jecxz
inc
dec
and
in
mov
ds
xchg
mov
ds
int3
pop
mov
adc
pop
ljmp
addr16
xchg
lock
es
cmp
stos
adc
pop
in
cmc
ret
out
add
loop
cmp
mov
jl
cmpb
mov
mov
lret
push
js
rorb
and
es
int3
loop
pusha
and
lret
push
sbb
cmpsl
push
sub
idivb
xor
outsb
sbb
mov
cs
sub
xor
mov
stc
lcall
orb
dec
sbb
mov
xor
les
in
das
lret
addl
jg
cmpsb
push
insl
es
ret
and
jbe
les
add
cmp
loope
mov
cmpsb
movsl
inc
lods
je
sbb
adc
repnz
add
popf
xchg
mov
jbe
inc
add
sti
and
cwtl
jae
xchg
push
add
mov
loop
stos
adc
mov
clc
lds
dec
push
push
cs
test
loope
mov
cmp
add
push
out
inc
mov
sahf
mov
int
dec
inc
mov
outsb
leave
lret
cwtl
add
shrb
cmpsl
es
les
out
inc
fwait
add
cmpsl
scas
repnz
sarb
cmc
and
and
adc
jg
into
scas
jmp
xchg
idivl
xor
and
ret
and
clc
in
scas
jo
sbbl
mov
mov
xor
test
das
adc
mov
movsl
fs
push
aaa
movsl
sbb
into
jb
hlt
sub
push
jecxz
loope
lods
sub
xchg
scas
and
scas
call
cmpsb
inc
cmp
scas
sahf
xlat
cwtl
cmp
adcl
dec
outsb
movsl
lret
cwtl
ret
push
jbe
sbb
aam
cmpsb
inc
add
push
push
or
stos
lea
pop
out
cmp
pop
mov
int3
sub
sub
ss
sub
or
push
xchg
shll
push
test
add
ds
xchg
bound
push
or
sbb
pop
lock
adc
adc
push
push
mov
out
sub
pop
loopne
subb
add
movsb
push
sub
cmp
daa
ja
test
sub
jge
jbe
or
push
mov
test
js
rcrb
std
adc
add
shlb
xor
cmp
ds
out
test
or
inc
pop
push
inc
bound
subb
std
adc
cs
mov
adc
testl
sub
sub
test
lret
arpl
or
pop
mov
sbb
adc
cld
adc
loope
out
add
mov
sub
add
xchg
int3
int3
mov
int
je
pop
sub
fcompl
xor
sub
xor
add
add
add
xor
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
