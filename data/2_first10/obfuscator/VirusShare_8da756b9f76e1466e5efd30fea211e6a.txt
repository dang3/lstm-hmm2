jb
inc
insl
cli
inc
cmp
xchg
imul
movaps
xor
leave
sysenter
shrl
aas
dec
pop
lahf
scas
mov
inc
cltd
in
outsb
jp
aas
mov
mov
jne
mov
mov
adcl
sbb
test
mov
mov
ficompl
fisubrl
and
dec
lcall
pop
jmp
lods
sbb
repz
add
sti
icebp
cmp
jnp
xchg
mov
xorl
mov
rol
cmpsl
sbb
orl
xchg
sbb
jno
icebp
pusha
loopne
scas
lds
jge
iret
xchg
dec
pop
or
jbe
xor
stos
jg
leave
mov
pop
pushf
mov
mov
jmp
addr16
adc
rcr
xchg
repnz
cmp
mov
mov
aad
sub
sbb
mov
pop
cwtl
push
jno
inc
shl
outsb
imul
fs
es
stos
test
into
dec
sbb
cs
mov
push
out
and
inc
movl
popa
pop
enter
jmp
jmp
cmp
cld
xor
adc
dec
cs
bound
int
scas
fsubrs
xchg
push
sahf
leave
cmpb
dec
dec
orb
ds
and
xor
xchg
dec
sub
mov
in
jg
je
in
sub
in
fstpl
dec
push
and
test
mov
stc
lea
aaa
out
xor
sub
decb
pop
gs
std
xor
xor
ret
cwtl
repz
pusha
cli
dec
outsb
mov
dec
fisttpl
fsubrs
mov
scas
arpl
adc
mov
or
aas
or
jg
xor
mul
jle
cmp
sbb
add
inc
mov
in
cmp
sbb
int3
mov
pop
pop
xchg
mov
jo
fucomp
add
inc
pop
or
push
jno
in
push
in
movsb
push
jno
fwait
lcall
pop
cmp
or
sbb
adc
lret
scas
fst
push
xor
jno
xchg
scas
repz
inc
pop
mov
in
fcoms
aas
ljmp
cltd
jp
std
scas
out
jnp
adcl
push
ljmp
sahf
cmp
ljmp
jle
sub
lods
adc
test
dec
xlat
mov
fs
jle
pop
xor
mov
mov
rolb
lods
xchg
and
push
fcomps
pushf
test
cs
xor
ljmp
arpl
mov
adc
sbb
jno
and
rcrl
sub
stos
xchg
sbb
iret
mov
lcall
push
and
cltd
ljmp
jmp
popf
lret
lods
and
int3
cmp
pop
sarl
outsl
out
iret
xor
dec
jns
popf
sub
insb
sbbb
mov
and
cmpsl
pop
ret
xchg
aas
shll
test
filds
cmc
lods
pop
pop
imul
dec
adc
jmp
roll
xor
test
mov
sub
mov
lods
mov
add
sub
xor
jae
test
mov
out
into
xorb
in
lea
xor
sub
pop
adc
push
aad
ret
test
aad
inc
icebp
and
sub
push
sub
add
adc
adc
into
push
xchg
lcall
jecxz
imulb
mov
pop
push
stos
pop
in
test
sbb
pop
aam
loop
pop
sbb
xchg
push
mov
loope
les
add
hlt
cmp
mov
std
daa
ffreep
push
push
in
rclb
loop
mov
mov
adc
xlat
mull
mov
pushf
jmp
jecxz
mov
mov
inc
dec
pop
push
xorl
cmc
repnz
outsl
and
imulb
inc
pushf
inc
cli
xchg
push
std
imul
popa
sub
sti
popf
outsl
aad
pop
cmp
stc
test
mov
out
mov
adc
lods
dec
aam
add
dec
mov
jmp
adcl
push
inc
mov
andb
gs
mov
jno
es
test
mov
aad
lock
lret
adc
cmp
push
inc
mov
and
dec
es
sub
outsl
adc
inc
dec
adcl
fisttps
mov
popf
or
xlat
mov
cmp
cs
push
xchg
scas
gs
cld
push
push
testb
js
mov
jns
in
or
js
fisubrs
xchg
test
jmp
cmp
dec
icebp
push
mov
inc
mov
pop
xor
cmp
cmp
pop
negb
inc
cmp
out
xor
lds
inc
jne
stc
push
inc
and
push
xchg
lret
rcll
xchg
push
js
icebp
into
xchg
xchg
aam
sbb
scas
and
ficomps
and
rcl
pop
test
je
test
sub
repz
add
stc
loopne
int
sbb
imul
popf
lods
loop
cs
xor
sti
movsb
fimuls
les
inc
mov
cwtl
pop
mov
stc
data16
rorb
mov
fldt
dec
faddl
fadds
xchg
shlb
into
lea
call
xchg
add
adc
scas
adc
popa
jb
data16
jb
les
dec
jnp
ss
lds
divb
in
add
lods
inc
sub
shlb
jle
lods
inc
call
int3
imul
or
sbb
fs
mov
repz
and
mov
mov
push
out
addr16
clc
mov
add
in
ds
pop
ret
or
xchg
adc
jbe
mov
mov
sub
shl
daa
push
mov
mov
sarl
cmpsb
jp
int3
fimuls
icebp
out
test
lret
movsb
shrl
insb
push
mov
jge
inc
mov
jg
sbb
sbb
into
sbb
mull
inc
cs
dec
add
xchg
pop
add
imul
cwtl
xor
push
popf
lret
bound
int3
pop
mov
out
rcl
and
into
add
ret
insb
stos
nop
shr
jp
jno
xchg
jb
mov
fxam
rol
in
cmpsb
push
dec
in
loop
add
in
mov
out
rcrl
adc
sub
fdiv
aas
push
sub
lahf
enter
bound
aas
pop
popf
stos
inc
mov
fs
fdivrl
int3
sbb
sub
into
inc
fidivrl
add
sub
test
inc
test
pop
sahf
dec
and
jmp
push
push
sub
cmp
or
xor
add
scas
add
test
cmp
jge
icebp
xor
test
negl
adc
sub
sub
test
mov
js
stos
adc
sub
jne
mov
mov
inc
xchg
push
pop
mov
inc
popf
push
pop
sarb
pushf
mov
sbb
add
cmpsl
jb
mov
or
cmpsb
mov
call
pop
add
cmp
lret
and
mov
adc
lods
dec
fadd
xchg
xchg
or
mov
mov
loopne
scas
icebp
mov
andb
fcompl
into
lods
add
in
push
mov
sti
dec
lahf
pushf
loop
dec
jp
lret
dec
mov
xor
popf
push
mov
cmp
arpl
push
sub
mov
ficomps
pop
mov
ja
or
jo
test
es
in
or
mov
dec
out
test
pop
fisubrs
movl
mov
adc
shr
mov
inc
pop
mov
aaa
aad
out
out
adc
sub
xor
push
and
sub
andb
xor
add
addr16
out
out
and
add
or
push
inc
cmc
inc
adc
or
inc
addb
js
pop
loopne
leave
sub
pop
dec
jo
xchg
mull
ret
cmc
lcall
jge
push
and
and
lcall
aaa
arpl
pop
testb
dec
pop
and
cli
enter
pop
add
aas
cmp
xor
jb
inc
pop
sub
push
and
in
decl
cmc
mov
dec
cmp
aad
mov
and
rcrb
mov
clc
jp
jl
repnz
sub
adc
inc
aam
dec
and
sarl
pop
lods
xor
jae
adc
xchg
ljmp
push
inc
mov
lds
lcall
jp
lahf
mov
or
imul
cmp
sub
cmp
fstpt
jmp
lock
and
inc
pop
orb
stos
int3
mov
and
es
jle
xor
mov
xchg
ficoms
sbb
mov
xchg
nop
cmp
stc
add
inc
mov
dec
mov
pop
sbb
pop
shrl
shll
xor
xchg
ret
les
sub
loope
cld
xchg
daa
aaa
mov
and
ret
fnstcw
rcll
mov
dec
fwait
test
mov
addr16
mov
or
cmp
test
lcall
or
cmp
shl
out
inc
idiv
repnz
call
ret
fisubrs
push
inc
test
in
sub
std
adc
or
push
ror
xchg
pop
xor
sbbb
aaa
jecxz
add
or
fisubl
mov
jno
sar
push
aam
rcll
adc
dec
lods
mov
test
mov
pop
sbb
jmp
bound
lods
jae
je
stos
lret
dec
pop
add
stos
popa
adc
sub
xor
ljmp
sbb
mov
mov
mov
pop
xlat
mov
sub
je
cmpsb
cltd
xlat
in
jg
mov
adc
adc
stos
aas
push
mov
push
adc
cmp
icebp
mov
fsubs
inc
daa
push
popa
subl
jl
push
aaa
adc
mov
push
js
push
adc
in
sub
add
insb
repnz
fwait
in
ja
lret
pusha
leave
pop
idiv
imul
mov
push
pop
pushf
mov
xchg
lret
pmaxub
xor
inc
jns
mull
cmp
out
cmp
mov
ror
aam
xchg
cmp
xchg
fnstsw
and
lretw
cld
inc
adc
pop
imul
notb
xor
push
dec
cmp
push
pushf
sti
loope
mov
sub
scas
jo
push
pop
cmp
aad
test
daa
mov
sub
xor
mov
mov
cmc
mov
lea
inc
outsb
jne
push
aam
cmp
lods
das
mov
dec
addr16
dec
pop
push
insb
mov
xchg
test
fwait
cmp
test
add
sbb
mov
sub
cwtl
xor
xchg
nop
ja
push
and
sub
into
out
dec
les
outsb
cmp
add
mov
decl
mov
xlat
cmp
pop
dec
pop
jae
out
repz
push
lods
test
mov
jno
fstpt
mov
xorl
lret
mov
das
xor
repz
fs
shlb
mov
mov
int3
stos
lcall
xor
jp
aas
into
add
test
out
pop
sbb
fbld
pop
sarb
aad
sub
rolb
xor
test
mov
cmpsl
xlat
addr16
pusha
fsubrs
adc
lcall
push
or
lds
fidivrl
sub
xchg
cmpb
xchg
cmc
adc
popa
clc
add
jnp
xor
insb
and
jecxz
mov
and
gs
dec
inc
pmullw
les
ljmp
insb
dec
out
inc
rcrl
jecxz
in
xchg
lret
fcmovnb
mov
mov
inc
out
and
and
fwait
jmp
cmpl
iret
pop
pusha
jae
ljmp
pop
jne
sbb
in
push
and
shll
cmpsb
xor
hlt
cld
adc
icebp
xchg
lea
mov
aaa
scas
les
push
jae
xchg
sbb
js
cwtl
popa
imul
mov
cld
in
imul
into
stos
in
push
fnsave
lods
dec
pop
setp
ficoms
jb
or
and
loope
xchg
in
int
insb
add
test
sub
dec
faddl
rorb
push
into
or
orb
in
push
ss
imul
cmpb
pop
and
mov
cmc
xchg
es
mov
clc
lods
inc
mov
inc
xor
mov
lods
push
addb
test
testl
mov
test
ret
push
les
mov
fdivl
mov
fsubs
outsl
pop
dec
mov
clc
shll
adc
mov
std
stos
add
cwtl
cmpl
cmp
cld
ficoml
inc
adc
mov
push
jge
ds
mov
les
cmp
push
xchg
lock
push
sbb
sbb
inc
dec
or
shlb
outsl
ds
pusha
sbb
push
in
mov
repz
in
das
xchg
shll
in
xor
cwtl
and
dec
das
insb
push
cmp
in
xchg
xor
into
movsb
mov
ljmp
orps
push
test
dec
sbb
mov
pop
mov
cld
ljmp
insl
mov
enter
mov
push
pop
jge
and
scas
outsb
mov
into
dec
rcr
jnp
popf
jp
cmp
pop
popf
and
push
mov
push
xchg
in
out
jmp
cmp
inc
pop
ss
jb
push
repz
bound
out
mov
lods
rcrl
xchg
push
pop
xchg
es
push
inc
dec
cmp
or
aas
cmp
mov
dec
sahf
cmp
push
jecxz
xlat
rolb
push
out
test
mov
xor
jae
xor
popa
mov
mov
mov
push
lods
scas
aam
dec
and
jle
push
lods
and
addl
iret
jo
push
ret
and
sbb
cmp
ret
push
and
pop
cmpsl
aaa
aam
out
dec
xchg
fwait
addr16
mov
aaa
push
mov
mov
enter
xchg
sti
daa
sbb
cli
ret
int3
pop
pop
dec
push
jns
fidivl
xlat
fs
xor
dec
cmpsb
outsb
repnz
adc
cld
add
in
insb
lcall
enter
mov
mov
stos
cmp
add
and
sbb
jecxz
roll
mov
aaa
cs
jle
ret
jb
mov
inc
sahf
decl
movsb
add
push
inc
dec
adc
ret
and
mov
sub
mov
mov
dec
sub
jl
jl
stos
push
fdivrp
jp
dec
popf
mov
aam
lret
or
loopne
in
rdmsr
cld
negb
in
scas
add
ds
sbb
icebp
add
out
push
in
sbb
rclb
pop
inc
popa
lret
js
or
stos
test
leave
push
jmp
aaa
inc
addr16
inc
and
and
sbb
cmpsb
mov
test
ds
pop
push
clc
int3
jl
sbb
push
lret
push
push
jne
outsb
and
add
jle
test
fistl
sbb
xchg
adcl
mov
cmp
dec
aad
cltd
jno
xchg
and
repnz
jo
sbb
and
inc
in
ret
aas
gs
mov
and
leave
ds
gs
xchg
pusha
adc
pop
cli
loopne
sbb
sub
mov
stos
inc
and
adc
sbb
sub
sbb
ds
sbb
pop
les
fs
inc
es
adc
test
push
xor
sub
pusha
js
sub
push
xchg
arpl
lcall
cli
or
pop
xchg
push
push
mov
jecxz
aas
and
mov
in
mov
xor
or
loopne
outsl
int
mov
leave
into
mov
jne
in
or
test
sub
cltd
arpl
lcall
ljmp
mov
int
sub
xchg
jno
cmpsb
adc
jmp
into
das
addr16
pop
mov
loope
out
inc
mov
int3
xchg
ficomps
xor
test
xchg
pop
das
mov
cmc
push
cltd
ss
ds
push
mov
and
pop
ret
cmp
mov
testl
mov
mov
fcompl
aas
addr16
add
adc
leave
pop
daa
pushf
sub
jbe
pushl
xchg
xor
and
push
enter
xchg
fisttps
js
jmp
push
or
gs
pop
addr16
negl
inc
dec
lods
mov
push
push
mov
jb
add
pop
mov
into
pop
sahf
outsb
lahf
jmp
dec
out
jb
cmp
ljmp
xlat
pop
xor
xchg
add
lods
es
lret
divb
add
adc
insl
mov
inc
push
pushf
sbb
push
repnz
insl
stos
mov
pushf
pusha
dec
dec
lret
jae
adc
adc
fidivs
or
jg
scas
clc
addl
mov
xchg
inc
in
loopne,pt
mov
inc
out
test
jp
add
jmp
xchg
xor
cmp
jae
stos
lahf
or
into
push
mov
or
in
sub
imul
jne
in
inc
add
push
nop
mov
dec
mov
push
xchg
sbb
push
sub
mov
cmpsb
mov
addr16
pushf
push
into
adc
mov
xchg
push
jb
movsl
test
sbb
mov
rorl
mov
popa
repnz
pop
jmp
add
lret
into
xchg
aaa
bound
pop
sbb
loop
dec
repz
sub
jle
xor
out
xchg
mov
adc
leave
xchg
xchg
xor
lret
fnstenv
rclb
lcall
jl
shrb
nop
adc
adc
lods
imul
mov
lods
in
dec
cs
mull
cmp
int3
fs
mov
push
rcl
add
add
lock
pop
sbb
jae
outsb
leave
xchg
cmp
jg
aas
xchg
push
int
cmp
mov
push
cmp
out
mov
xlat
dec
dec
int
cld
inc
jge
cmp
adc
ds
insb
arpl
mov
and
pop
call
mov
or
lahf
cli
orl
mov
jbe
lods
sbb
sbb
movsl
and
inc
dec
push
push
xchg
in
sbb
jp
mov
pop
fdivrp
push
in
jmp
lahf
cmp
dec
mov
mov
in
xchg
and
xchg
adc
loop
jno
sbb
mov
or
cli
xchg
std
sahf
pop
xlat
and
cmpsl
out
pop
push
int3
lcall
jge
xor
leave
xor
dec
sub
ret
inc
dec
jl
jb
sbb
or
push
xchg
aad
lds
sub
xchg
xor
xor
ret
ss
add
jae
mov
and
aas
popa
jge
sbb
add
pusha
outsl
in
xor
inc
mov
mov
cmp
mov
sub
mov
xchg
fisttps
lea
sbb
adc
shr
jns
test
scas
and
sub
sub
cmc
push
imul
xor
cwtl
mov
jge
jne
or
movb
dec
add
sub
fcmovnbe
sysenter
enter
inc
and
cmpl
imul
mov
push
in
lret
add
xor
jns
mov
mov
shl
mov
aam
ret
aad
xor
aad
mov
mov
mov
xchg
decl
out
mov
and
mov
sbb
nop
dec
inc
inc
xchg
lds
adc
pusha
loope
xor
mov
insl
call
xor
pop
inc
push
push
popl
stos
adc
int3
aam
ret
push
sti
into
mov
insl
ret
dec
inc
and
inc
and
enter
push
jae
mov
push
sub
xchg
mov
das
in
xchg
aam
mov
cmc
jb
call
mov
stc
jg
imul
add
dec
cmp
in
push
mov
loop
xor
sub
cmp
call
test
iret
and
test
pusha
repz
pop
mov
lods
daa
lret
mov
std
pop
repnz
into
mov
sub
dec
sub
dec
subb
fnsave
data16
les
lahf
xchg
int
xor
xchg
ficompl
and
leave
pusha
in
jecxz
decl
popf
outsl
orb
lret
daa
sbb
incl
clc
push
cmpsb
nop
js
loop
and
mov
sub
mov
jno
movsb
push
cmp
pop
addr16
push
jns
xor
add
adc
push
adc
dec
jp
imul
test
jl
xchg
cwtl
mov
adcl
ss
adc
mov
loop
pop
lods
or
dec
push
pop
and
jae
mov
cmp
lahf
es
pop
dec
mov
lret
mov
push
sub
lea
push
imul
rcrl
lods
mov
add
sub
nop
outsb
push
dec
repz
aam
adc
push
out
or
xlat
dec
sub
jle
push
fs
fbstp
and
or
sbb
push
xor
inc
pop
cwtl
xchg
mov
movsb
mov
popa
inc
aad
movsl
dec
or
js
push
dec
xchg
cmp
push
mov
mov
sahf
xor
outsl
add
push
lods
dec
sbb
repz
jne
das
pop
xor
sbb
xchg
sub
cmp
xor
ds
repz
xchg
and
add
ret
fwait
addr16
ret
jo
cmp
adc
sti
mov
and
iret
pop
cmp
jb
mov
push
dec
fldz
mov
dec
es
xchg
cmpsb
xor
test
xor
xorb
push
pop
dec
mov
shlb
cltd
call
cmc
lret
gs
clc
stos
jae
inc
ljmp
stc
cmp
outsl
jnp
sbbl
mov
imul
xor
inc
mov
cmp
mov
push
jno
std
pop
push
push
dec
imul
test
mov
xchg
inc
rcrl
movsb
push
mov
push
xchg
xor
mov
sbb
pushf
movsb
cld
pop
in
aaa
xchg
ret
pop
insl
out
inc
sbb
xchg
jae
ficoml
and
sbb
int
insl
mov
xor
dec
push
ret
stos
push
insb
xchg
lock
repnz
push
fdiv
mov
and
enter
pop
jmp
mov
clc
or
mov
push
adc
repnz
push
pushf
int3
xlat
cmp
adc
sbb
xchg
adc
dec
xchg
inc
pop
mov
pusha
mov
in
sub
fdivs
pop
xorb
sbb
xchg
sub
fcoms
mov
andb
aas
dec
fwait
in
adc
add
and
ss
cs
icebp
xor
xor
jmp
sub
xor
stos
dec
ss
ja
jb
and
mov
push
out
fdivr
jb
push
hlt
mov
mov
fsubs
jne
mov
fdivr
cmp
mov
repnz
test
pop
fstpt
rcl
or
sahf
jl
imul
hlt
fucom
pushf
pop
aam
push
roll
and
cwtl
xchg
pop
dec
xor
stos
mov
stc
xlat
cld
out
mov
xchg
mov
daa
push
in
popf
cmp
lds
sub
push
int3
icebp
in
xchg
repz
in
adc
mov
jg
sbb
xchg
inc
rep
sub
xchg
ret
adc
mov
cmp
mov
cli
mov
inc
flds
ss
lods
push
out
mov
mov
enter
test
decl
stc
inc
lahf
mov
pop
push
nop
pop
lods
and
xchg
mov
xor
mov
ss
mov
mov
jns
insb
or
or
int3
xchg
les
nop
dec
rcrb
scas
jecxz
das
cmc
out
pop
insl
test
std
xchg
sbb
fiadds
data16
test
fidivrl
add
push
cmpsb
jle
and
aas
test
dec
shlb
outsl
cltd
in
adc
mov
test
popa
in
aas
clc
xor
mov
mov
and
adc
add
mov
lds
repz
outsl
pushf
inc
xchg
sub
lods
push
jecxz
insl
jns
out
fcoms
cwtl
add
sti
xchg
push
push
cmp
fwait
cs
out
cmc
mov
pusha
inc
xchg
lret
in
cmp
sub
in
lret
mov
mov
cmp
inc
sub
leave
pop
iret
add
jmp
test
scas
pusha
fsubrl
and
call
stc
and
lea
imul
lods
iret
dec
bound
or
or
subb
shr
lret
cmp
addr16
mov
mov
xchg
mov
adc
sbb
mov
mov
lret
das
xor
test
pop
dec
shrb
out
or
push
cltd
shll
pop
mov
sbb
xchg
sbb
push
pop
or
loopne
lods
mov
loope
jl
adc
push
dec
movl
sti
mov
xchg
lret
testl
pop
int
jb
ljmp
mov
frstor
addr16
outsb
stos
push
add
shlb
jns
xchg
stos
sbbl
jns
out
pop
add
xchg
xor
add
lods
mov
fidivs
popa
clc
fiadds
mov
rcrl
fsubrs
stos
test
cmpsb
push
cmp
sahf
pop
inc
xchg
rorb
push
ret
or
mov
test
mov
mov
add
xchg
sbb
or
decb
dec
mov
add
add
mov
rcrl
jecxz
cmp
mov
fldt
stc
scas
out
inc
add
leave
roll
inc
lahf
jmp
push
push
mov
mov
xchg
test
jns
xor
cmpsb
adc
stc
movsb
aas
cmp
xchg
in
shrl
mov
dec
inc
es
jb
pop
cmp
outsb
out
incb
mov
imul
and
push
sub
mov
push
sub
mov
adc
cmp
adc
and
cmpsl
dec
dec
gs
sbb
int3
das
test
pop
add
femms
roll
push
pop
add
enter
mov
push
jb
cmpsl
cmpsb
mov
sbbl
mov
jle
out
mov
test
pop
sbb
ja
call
data16
mov
dec
int
out
push
mov
push
lret
hlt
orl
out
jb
dec
xchg
push
adc
insb
test
mov
popf
mov
dec
bound
es
dec
in
cmp
andb
int
inc
pop
cmp
push
out
sub
adc
jnp
sub
cmc
in
aaa
sarb
push
push
bnd
sbb
iret
sub
mov
cmp
adc
pop
mov
fmuls
push
dec
int
adc
sbb
rcrl
mov
push
js
leave
inc
xor
in
xchg
stc
or
in
outsl
mov
loope
popa
nop
cli
pop
push
mov
adc
stos
inc
mov
mov
in
xchg
adc
cmp
pop
stc
bound
loopne
pop
mov
xchg
rol
inc
sbb
adc
out
imul
push
push
cltd
xchg
sub
or
add
pusha
inc
dec
jnp
fldl
push
mov
push
fmul
outsb
mov
sub
imul
icebp
pop
adc
cmp
mov
mov
xchg
fwait
cmp
and
mov
imul
rorl
loop
xor
cmc
mov
call
lods
sbb
cmc
mov
leave
ja
adcb
adc
and
sbb
sub
adc
in
and
pop
sbb
xchg
jo
pop
fwait
popf
addr16
xchg
cmp
mov
sarl
mov
ljmp
xchg
mov
pop
psubsw
mov
ds
mov
mov
inc
daa
mov
iret
xchg
pop
cld
mov
pusha
daa
ret
mov
rcll
mov
sar
xlat
mov
mov
rcl
movsl
into
stos
leave
lods
mov
mov
inc
xchg
outsl
xchg
gs
mov
jae
jae
cli
xchg
cmp
adc
cmc
pop
adc
popa
and
or
cmp
lods
clc
push
addb
lcall
jmp
jp
cmp
xchg
adc
ret
das
sub
ret
fcompp
xor
xorl
or
sub
ffree
outsl
orb
cmp
pop
mov
pop
inc
adc
ljmp
ret
in
sbb
aaa
inc
or
leave
inc
orb
jb
ret
jmp
sub
mov
fmuls
cmpsb
inc
mov
and
jmp
sahf
lods
je
shlb
data16
insb
inc
mov
loopne
xchg
mov
nop
pop
lret
xor
push
outsb
cltd
jns
jbe
call
mov
mov
sub
inc
mov
push
fldenv
insb
imul
fdivs
dec
outsb
aad
cmpsb
bound
mov
push
jg
in
insl
push
xor
mov
cmc
shll
mov
xor
pop
or
ret
mov
int
repz
mov
cwtl
push
mov
fcmove
das
ljmp
xlat
into
je
lahf
imul
cltd
mov
push
or
mov
es
mov
cmc
mov
fsts
mov
sub
and
mov
jp
and
push
mov
js
stos
adc
mov
pmaxsw
jno
sarb
mov
dec
inc
jle
xor
or
mov
out
nop
xor
imul
sahf
scas
push
dec
out
les
aad
xor
ret
loop
call
xchg
mov
or
dec
jge
push
sub
adc
sarl
add
popl
aam
mov
sub
inc
int
pop
inc
dec
call
sbb
push
leave
ss
pop
push
dec
sti
lahf
jle
xor
push
xor
cmpsb
push
mov
into
push
cmp
stos
scas
leave
fs
pop
xchg
hlt
mov
push
mov
push
xchg
cmp
push
jae
cmp
fildl
pop
daa
repnz
imulb
jl
inc
cmpsb
push
add
adc
test
mov
mov
cmp
dec
mov
dec
xchg
sar
xchg
loope
sbb
adc
pop
das
outsl
sbb
mov
xor
sub
aam
mov
je
mov
scas
sti
rorl
std
xchg
sub
rol
dec
mov
push
mov
cmc
mov
cs
aad
and
shll
mov
daa
loope
and
mov
mov
fdivp
add
ficomps
adc
roll
sahf
insl
xchg
mov
adc
andl
stos
cld
dec
mov
pop
ljmp
jns
pushf
ret
out
cmpsl
fsubs
mov
mov
sbb
popf
ljmp
outsl
xor
in
pop
pop
or
pop
call
xchg
testb
mov
insb
push
sbb
sbb
fdiv
lds
lret
cmp
mov
push
lret
inc
add
add
cmpsl
dec
xchg
inc
pop
jno
xor
dec
inc
hlt
pop
push
out
ja,pt
rolb
mov
sub
or
out
or
push
push
jb
movl
orl
jno
dec
mov
lcall
mov
int
aad
mov
in
cmp
mov
rorl
test
sbb
or
sbb
adc
loopne
xchg
rcl
pop
mov
mov
iret
shr
out
leave
stos
fcoml
jb
shr
pushf
mov
ljmp
pop
lods
and
fiadds
in
and
cmp
icebp
and
int3
bound
loop
test
lahf
mul
outsl
and
xchg
jo
pop
mov
inc
and
mov
insl
push
loope
mov
scas
mov
popf
xlat
inc
mov
mov
movsl
xchg
sbb
arpl
lock
shr
pop
and
sbb
adc
adcb
ja
fiadds
popf
enter
add
sarb
insl
mov
jo
scas
mov
outsb
xor
sub
mov
lret
inc
or
fnstenv
mov
pop
fiaddl
rolb
push
cmp
sbbb
mov
scas
outsl
jecxz
les
fistps
rcll
das
stc
dec
pop
iret
int3
dec
insl
pop
push
out
rcl
or
jne
mov
test
cs
adc
adc
lods
int
push
outsl
jmp
in
int3
mov
cli
rorb
mov
add
leave
push
mov
daa
cmp
xchg
frstor
mul
js
and
daa
push
or
cmp
push
lret
insb
movsl
lahf
out
sbb
dec
aam
into
test
and
pop
sbb
fwait
cld
push
jp
or
call
pop
notb
dec
ljmp
inc
imull
push
popa
push
clc
lods
outsl
jne
aad
push
sbb
xchg
outsb
adc
pushl
shlb
inc
xchg
popa
orb
or
xchg
push
movsl
lret
jne
shlb
iret
rcrl
lods
test
mov
imul
stc
or
inc
pop
jle
pop
jge
loop
xchg
mov
div
push
es
lret
out
xchg
lock
sbb
cmp
fists
imul
nop
cltd
subb
fucomi
fdivl
into
movsb
mov
and
pop
pop
mov
jae
leave
aaa
jl
cmpsl
jne
js
test
dec
enter
scas
sub
fwait
inc
sahf
pusha
mov
xchg
push
icebp
push
repnz
adc
xlat
and
xlat
mov
jge
ss
fcompl
test
add
out
mov
je
sbb
cmp
aas
shll
sub
cs
pop
xchg
movl
dec
pop
jecxz
addr16
andl
fsubr
jo
in
mov
clc
dec
push
push
cmp
push
mulb
hlt
mov
mov
test
mov
dec
outsl
jmp
les
cmc
stc
loop
inc
mov
pop
sahf
sbb
in
mov
cmp
pop
push
xchg
mov
mov
call
mov
stos
jnp
and
in
jb
pop
in
shrb
dec
lret
dec
pop
xor
xchg
push
jns
sub
les
jne
sub
xor
adc
cmp
mov
stc
mov
xor
jge
in
mov
or
mov
stos
je
push
cmp
pop
cmp
and
mov
rorb
test
xchg
adc
mov
push
das
jb
mov
push
or
rcll
scas
mov
icebp
outsl
mov
andb
cmp
xchg
hlt
rorl
test
xchg
int3
lcall
addr16
mov
ljmp
pop
stos
aas
stc
je
pop
mov
out
lds
orl
push
lds
andl
pushf
out
imul
xor
aad
nop
pusha
or
inc
out
sete
mov
add
dec
and
rcll
push
inc
inc
xor
push
inc
out
mov
int3
inc
data16
xor
sub
jmp
pop
clc
fbstp
and
push
data16
out
pop
aaa
push
xchg
pop
gs
fbld
xchg
shll
add
push
push
xlat
inc
lret
fstpt
test
outsb
mov
and
das
xchg
jo
fldl
popf
xor
daa
push
jo
jmp
das
mov
sub
mov
movsb
inc
scas
imul
imulb
mov
pop
cmp
out
and
jnp
mov
call
cmp
fs
add
lcall
in
cmp
mov
clc
dec
out
jnp
jp
cs
repz
push
or
cmp
adc
lods
inc
jecxz
dec
out
jns
mov
test
jae
icebp
and
enter
repz
cltd
int
ficoml
pop
imul
xor
sub
dec
lods
dec
aaa
add
negb
out
arpl
push
mov
orl
rorl
cmp
jae
sbb
aas
repz
popf
rorl
lret
clc
outsl
lea
pop
ja
out
lds
fs
push
outsb
xchg
orw
xchg
push
pop
push
and
repz
xor
push
call
lods
or
sub
xchg
pop
xchg
jo
aad
push
mov
jnp
fwait
cmc
jl
inc
clc
jl
dec
mov
ja
cmpsl
mov
cmp
push
add
in
outsb
dec
pop
ret
jle
xorl
bound
imul
mov
in
xor
out
int
mov
inc
jb
arpl
adc
push
add
repz
mov
lret
fstps
xor
cltd
loope
inc
mov
dec
ljmp
rolb
iret
int3
mov
inc
mov
pop
je
push
iret
ja
lds
pop
lods
xor
xchg
adc
fnstenv
push
inc
or
inc
aaa
mov
jl
gs
pop
roll
fnstenv
adc
movsl
jmp
inc
testl
test
lret
into
push
sbb
sahf
cmp
add
iret
inc
pop
out
lret
sti
xchg
pop
sbb
mulb
sub
test
sbb
sbb
movsb
and
jb
sbb
xor
mov
ret
pop
xor
jp
add
cmpsb
and
pop
cwtl
sbb
or
mov
pop
or
xor
push
inc
inc
jnp
stos
addr16
test
gs
add
mov
xorb
and
inc
dec
inc
jo
ss
and
and
dec
cltd
pusha
pop
outsb
fdivs
push
iret
pushf
push
ret
in
push
mov
mov
popf
lods
or
xor
sub
test
mov
jns
adc
mov
xchg
imul
or
mov
dec
sbb
iret
mov
test
cmpsb
mov
out
xor
sti
insb
push
mov
and
jne
xchg
sub
xchg
repz
popf
nop
xlat
test
sti
lea
sbb
xchg
mov
sbb
test
movsb
rclb
adc
mov
xchg
dec
adc
shl
jmp
dec
jg
lds
mov
push
add
mov
and
or
push
shl
jl
push
enter
int3
push
mov
mov
outsl
out
stc
dec
inc
jnp
lds
cld
dec
loop
dec
cmpl
mov
loopne
dec
jecxz
repz
inc
cmp
fcoms
and
in
or
pop
std
sub
jmp
aaa
xchg
pushf
and
int
mov
lds
lods
not
mov
sbb
sbb
mov
lds
test
cmpsl
data16
clc
push
fldenv
push
and
enter
fbstp
mov
ss
test
dec
xor
and
test
xchg
pop
shrl
jl
dec
cwtl
adc
dec
adc
mov
pop
mov
cwtl
bound
sub
inc
lret
xlat
lds
insl
add
loop
cmp
adc
dec
xor
dec
and
call
push
jae
add
mov
sbb
push
or
push
xor
shll
out
xchg
add
pop
leave
lcall
add
jns
repnz
not
and
xlat
sarl
mov
xor
and
xchg
mov
setb
xor
pop
jno
sub
lahf
or
inc
cmp
pop
or
pop
mov
pop
or
mov
insl
out
rorl
cmp
or
aad
xor
pop
cli
mov
clc
cmc
lcall
or
jae
jnp
loopne
les
jmp
adc
push
push
add
cmpb
or
ret
insl
push
insb
push
inc
fadd
sbb
movzbl
mov
pop
xchg
aaa
xchg
add
int
and
in
sub
or
sub
in
lret
int3
mov
mov
frstor
out
adc
test
pop
cltd
xchg
jl
pop
shrb
bound
jo
scas
push
push
sbb
ret
xor
repz
stos
hlt
mov
and
stos
lahf
daa
mov
jb
std
sub
sub
mov
dec
leave
or
xchg
loope
xor
icebp
aas
jmp
shll
push
or
and
xchg
cwtl
push
dec
xor
insb
fdivrl
push
movsl
imul
or
test
js
sub
ljmp
aaa
aad
fiaddl
cmp
push
out
in
xor
aam
add
push
xchg
xchg
out
nop
mov
xchg
lods
add
mov
or
jbe
sbb
test
jecxz
sub
ficoms
outsl
mov
ret
mov
pop
fstp
add
fbld
jbe
dec
leave
es
cmpsl
imull
pushf
or
daa
sti
rep
pop
push
test
int
sub
mov
mov
xor
rclb
push
clc
fcmovne
mov
cmpsb
and
jecxz
ret
loopne
clc
std
mov
in
dec
jb
cmpsl
jae
into
mov
or
or
and
mov
or
loope
aad
lock
call
out
hlt
push
sbb
adc
push
add
sti
xor
int3
scas
arpl
sub
jno
mov
xchg
adc
ja
mov
lods
push
sbb
mov
lcall
ss
int
push
inc
bound
pop
fisubrl
sbb
adc
push
lahf
xor
xlat
and
xor
sub
sti
or
fwait
aaa
divl
pop
xor
lods
mov
imul
xchg
aam
daa
ret
cmp
xchg
mov
mov
mov
xchg
ja
repz
arpl
sbb
lods
xchg
cmp
push
pop
hlt
test
testb
int
int3
aam
adc
push
add
mov
in
lret
lods
fs
adc
out
in
lcall
xchg
ds
js
cmpsb
negb
adc
dec
jno
push
dec
fstpt
inc
mov
ss
dec
inc
or
testb
cmp
ds
cli
pushf
int
dec
arpl
sub
jns
rcrl
dec
xlat
stos
mov
jp
mov
and
lahf
push
sub
leave
or
int
hlt
sub
push
mov
pop
mov
or
div
pop
add
fwait
stc
outsb
xchg
mov
stos
in
js
xor
fsubr
inc
pop
push
jne
and
sti
jno
jo
repnz
adc
lods
inc
mov
add
push
mov
and
xor
sub
and
jne
adc
clc
xor
sbb
rcll
jg
scas
pop
inc
sti
ret
add
mov
rcr
loop
inc
jge
fstpl
xchg
fisttps
xlat
fmuls
les
xor
repz
les
adc
arpl
xchg
pop
dec
dec
out
cli
xor
add
xor
sbb
sub
pushl
mov
mov
lea
data16
push
je
dec
rorb
push
aad
bnd
mov
out
out
mov
pushf
add
test
and
bound
add
out
ljmp
inc
push
lcall
cmc
sub
xor
ret
add
fisttps
xor
movsb
sub
ljmp
xor
rcr
mov
hlt
arpl
insl
cmp
popa
dec
jp
in
cltd
mov
cld
push
sbb
pop
das
test
mov
mov
in
mov
test
mov
shrb
aas
loop
pop
and
jnp
xchg
mov
and
xchg
rolb
pop
rorl
push
jo
mov
mulb
fsubr
cmp
in
pop
ret
mov
rclb
out
loop
or
pusha
pop
lret
roll
aaa
inc
mov
scas
mov
pop
dec
pop
cs
adc
push
xchg
inc
sahf
rorl
inc
aaa
popf
test
mov
lret
pop
lods
jle
sub
arpl
push
jnp
subl
and
adc
int3
cwtl
jg
decb
fstpt
pop
rcll
inc
loope
repnz
ret
push
sti
cs
jno
jbe
xchg
lcall
jnp
xchg
push
js
or
dec
pop
dec
mov
ljmp
fs
mov
adc
sub
into
dec
jno
shll
test
pop
gs
push
pop
sbb
scas
mov
aad
xchg
stc
xchg
movsb
outsl
push
loop
mov
fcompl
xor
and
je
or
cmpsb
shrb
scas
aam
stc
pop
ficoml
out
mov
push
ret
ds
aad
dec
imul
xchg
movsb
push
shl
es
aad
xlat
je
fsub
fisttpll
xchg
insb
mov
adc
push
push
std
adcl
in
adc
adc
fs
push
movsl
and
push
lret
sti
fnstcw
ror
ficompl
push
stc
popa
xor
je
jmp
rclb
addr16
sbb
dec
rclb
movsb
aam
jecxz
lcall
jnp
mov
pop
popa
out
xchg
idiv
pushf
and
xlat
leave
dec
push
movsb
push
stos
mov
dec
jmp
orb
xor
cmpsb
in
mov
daa
or
push
dec
daa
rcl
stc
add
fisubl
je
outsl
lds
dec
in
xor
in
push
outsl
xchg
and
ljmp
mov
cli
not
add
xchg
sbb
fdivl
mov
aad
adc
stos
add
out
mov
pushf
aas
mov
fiaddl
mov
loop
jns
fadds
push
movsb
add
add
add
pop
cmpsb
xchg
jnp
xor
repnz
and
shrb
cmc
sti
jmp
sbb
jnp
push
loop
stos
cmpsl
movsb
pop
inc
push
sub
jecxz
xchg
rolb
movsl
mov
jp
sub
sub
jmp
ret
xchg
sbb
or
call
push
shr
cli
push
push
shrb
pusha
jo
insb
nop
xor
popa
cmpsb
adc
fistl
mov
xchg
xor
inc
dec
jmp
cltd
daa
mov
jmp
push
pusha
fistpll
mov
adc
ret
adc
push
arpl
xchg
mov
test
ret
out
cmp
enter
fisubrl
mov
sub
jno
dec
insb
fwait
mov
lcall
dec
popf
pop
data16
int3
mov
popa
jb
and
xor
mov
mov
mov
jne
mov
dec
adc
mov
mov
adc
jle
lds
insb
mov
aaa
mov
dec
pop
and
xor
mov
aad
add
xchg
jne
sbb
fldt
mov
andb
or
loope
push
xchg
mov
mov
cmp
mov
xchg
cmpsl
dec
es
dec
mov
movsb
jnp
mov
cmp
jge
arpl
or
sub
je
push
in
in
and
orb
testl
imul
pop
arpl
push
sbb
mov
in
mov
sbb
jne
aaa
lods
and
pop
add
inc
sahf
outsl
push
cmpsl
ret
cld
xor
imul
mov
sbb
cmc
jne
nop
push
xor
jecxz
dec
mov
int
out
mov
xor
pop
jno
mov
dec
sarb
nop
or
dec
lods
mov
and
xor
pop
lds
aam
arpl
hlt
daa
rolb
test
jmp
ljmp
mov
cmpsb
lcall
sbb
sbb
rolb
add
cmp
pop
in
dec
insl
stos
pushf
push
sbb
or
xchg
cmp
cs
jmp
pop
push
arpl
call
je
cltd
xor
dec
mov
sub
and
imul
add
stos
repz
in
jg
jle
xchg
add
pop
mov
dec
fcoms
mov
jmp
dec
lock
push
push
fldcw
out
fcompl
pushf
inc
inc
adc
push
dec
mov
out
daa
test
cwtl
sub
dec
call
fistpll
loope
fisubs
jmp
cmpsl
fwait
xchg
pop
pop
das
pushl
or
das
mov
aad
mov
lahf
xchg
out
jl
out
nop
mov
mov
fsubrl
rcl
fistpl
test
mov
and
dec
int
mov
cmp
ss
cmp
jg
pop
jb
mov
cmc
out
pushw
adc
lds
sub
scas
int3
or
inc
aam
push
bnd
adc
jl
xor
cmp
aaa
inc
inc
sbb
imul
sti
push
lahf
clc
pop
dec
xor
sbb
andl
mov
rorl
fucomi
les
hlt
mov
push
lret
push
and
je
xor
fldenv
stos
in
push
dec
mov
jo
test
pop
dec
inc
cli
test
shrb
hlt
loopne
mov
mov
xorl
jl
sub
enter
cmp
mov
adc
push
mov
jle
xchg
push
add
mov
pop
xchg
dec
mov
and
pop
loopne
push
xchg
add
mov
dec
sub
jmp
xchg
mov
int3
cltd
in
clc
mov
jo
pop
adc
mov
cmp
cmc
leave
out
push
pop
popa
push
inc
adc
jbe
fcomip
addr16
jl
and
adc
push
pop
mov
in
outsl
shl
in
stos
push
addr16
lods
data16
test
sub
mov
cwtl
jl
roll
xor
ljmp
inc
std
mov
sub
out
shl
and
scas
lods
inc
imul
pop
jbe
in
adc
loop
ficomps
and
sbb
addr16
sub
sub
xor
mov
cs
fcomps
inc
stos
dec
and
xor
xor
pop
fcmovbe
neg
jle
inc
add
hlt
movsl
ss
test
and
cmpsl
ja
cmp
inc
mov
cmp
pop
or
ret
inc
in
repnz
lods
les
push
mov
xor
call
rcrl
daa
or
push
xchg
jle
adc
lcall
imul
adc
roll
call
cwtl
daa
add
pop
arpl
lcall
repz
mov
subb
mov
mov
out
ljmp
repz
fwait
cmpsb
cmc
jecxz
in
in
ds
stos
pop
int3
pop
adc
popa
addr16
or
insb
push
dec
mov
shlb
xchg
cmp
xchg
jo
imul
and
push
mov
data16
lea
adc
and
mov
pop
stos
cltd
jo
es
mov
pop
adc
cld
sub
repz
test
divl
dec
repnz
or
mov
sub
push
icebp
pop
mov
jo
push
les
push
dec
aam
jne
sbb
jb
mov
xchg
ficoms
pop
push
mov
and
cld
lds
lcall
fisttpl
out
loope
mov
and
sbb
push
std
mov
jns
movsb
shrb
xor
pop
cld
iret
lea
stos
ds
push
jle
cmp
insb
int
sub
mov
and
icebp
add
inc
push
sbb
push
js
mov
loop
les
scas
out
sub
xor
or
mov
pop
cmp
and
xlat
push
or
sbb
cmc
test
cmp
sbb
pop
sub
adc
and
lret
cmp
popf
mov
insl
xchg
fstl
out
add
sub
sahf
and
mov
mov
sub
xchg
pop
adc
lds
sub
mov
mov
pop
imul
or
cs
test
cmc
xor
xor
lock
and
cmp
dec
push
fwait
stos
loopne
insb
jmp
mov
lcall
lods
inc
pop
mov
pusha
push
dec
negb
xor
scas
lock
sbb
insb
xlat
pop
mov
cs
out
cmp
leave
jns
ret
out
bound
xor
and
shrl
aad
or
mov
xchg
daa
xchg
push
fsubrs
cli
out
sub
dec
add
jl
jp
pop
push
inc
fsubrp
lret
mov
add
mov
jne
sarl
or
or
ret
std
and
popf
mov
push
xor
rcrb
jmp
mov
or
roll
jae
and
je
es
fdivp
lods
jl
lods
pop
ds
cmpsl
in
imul
adcb
push
mov
xor
idivb
inc
nop
xchg
fdivr
and
out
xor
scas
mov
lods
shrb
push
mov
in
es
ja
mov
test
nop
or
pop
mov
jmp
fisubs
or
jns
jb
jmp
jge
das
jl
sub
jl
dec
push
push
mov
or
adc
xchg
pop
imul
mov
lock
ljmp
push
repz
cmpsb
movsb
dec
xchg
iret
insb
push
out
sahf
imul
icebp
out
out
sub
xor
push
pop
movsb
sub
test
nop
or
xchg
cmp
cmpsl
sub
pushw
push
idivb
mov
std
add
cli
or
jne
aam
rcr
and
mov
sbb
popf
push
sahf
inc
sbb
sti
pushf
data16
cld
js
add
sub
subb
lods
insb
mov
sarl
les
push
leave
sti
popf
sub
cmp
mov
mov
xchg
sub
repz
pop
addl
or
ljmp
inc
addr16
ljmp
movsb
cld
fistps
jg
xor
loope
push
inc
sarl
dec
enter
and
jb
jae
dec
xor
jl
add
xor
aam
cmpsl
data16
or
inc
mov
sub
imul
push
inc
xor
xor
xchg
mov
bound
xor
jne
test
dec
sub
cltd
stc
sahf
pop
push
jae
and
insb
push
les
rorb
lods
jecxz
adc
lcall
push
xchg
rcr
testl
xchg
je
test
not
jno
test
shrb
fwait
push
sarb
shlb
int3
addl
addr16
adc
xchg
inc
sub
lahf
jnp
fs
sti
push
repnz
xchg
lods
pusha
or
popa
ljmp
or
pop
out
stos
sbb
cmpsl
sbbb
outsl
xor
xchg
out
xchg
call
add
push
jnp
add
repnz
sbb
cld
rdtsc
add
push
dec
mov
int3
inc
lcall
dec
sbb
movsb
adc
pop
pop
cld
add
pop
shll
in
arpl
push
pop
sbb
pop
clc
js
inc
adc
mov
lahf
or
xor
hlt
or
adc
outsb
xchg
in
aaa
shlb
or
or
add
xchg
loop
push
mov
outsl
fs
or
push
in
fwait
enter
imul
repz
adc
test
fwait
shlb
xchg
dec
cmp
jg
pop
shrl
popf
aaa
push
mov
pop
adc
xchg
stos
arpl
and
ret
clc
xchg
mov
sbb
adc
insl
jae
adc
jbe
pop
cld
xchg
flds
popf
sub
inc
and
inc
dec
xchg
cmp
push
mov
add
xor
or
ja
jecxz
jecxz
push
iret
outsb
add
push
aaa
in
xchg
and
or
fadd
pop
xchg
mov
cltd
xchg
popf
repnz
lcall
adc
das
enter
testb
fs
mov
dec
stos
mov
rorl
shll
inc
outsb
push
enter
sbb
xor
stc
sbb
aaa
mov
aam
ds
push
loope
mov
mov
dec
adc
lcall
xlat
fwait
lods
jecxz
adc
test
cltd
mov
jo
and
mov
loopne
mov
pop
xor
cld
lret
fnstcw
das
scas
cwtl
repnz
mov
and
jne
dec
add
repz
js
popf
pop
ljmp
inc
lret
mov
ds
cmp
mov
sub
and
cmc
mov
mov
mov
lock
aam
jl
push
sbb
xchg
dec
adc
pop
pop
dec
test
xchg
ds
mov
stc
mov
and
cmp
ds
es
jbe
stos
mov
pop
mull
arpl
inc
mov
decb
sahf
mov
dec
adc
mov
add
lods
sbb
pop
int3
lea
pop
mov
dec
push
aas
mov
jo
test
repz
sub
push
mov
mov
leave
xchg
add
xlat
roll
out
mov
jge
icebp
pusha
mov
mov
adc
adc
in
scas
push
pop
xor
sbb
push
inc
dec
adc
jmp
loop
adc
sub
mov
icebp
stos
sbb
pop
js
cmc
xchg
scas
shll
lea
inc
adc
sub
pop
push
jns
pop
mov
gs
dec
push
mov
mov
fcmovbe
ss
cmpl
sub
lcall
inc
mov
push
arpl
xlat
iret
out
loope
jnp
pop
je
mov
pop
lcall
test
std
ret
mov
loopne
dec
dec
lcall
jo
xchg
clc
out
jne
jb
ja
push
stos
mov
cmp
das
mov
call
les
cmp
add
dec
stc
les
xchg
pop
nop
dec
jns
sbb
bound
loopne
inc
lock
test
add
cmp
or
xor
xchg
mov
cmp
mov
ret
fldl
outsl
mov
add
xchg
sbb
pop
out
cmc
fyl2x
lahf
xchg
mov
inc
push
pop
mov
xchg
add
ficoml
ja
outsl
push
aaa
add
dec
gs
jo
inc
hlt
jmp
popf
cwtl
cmp
hlt
leave
loopw
jne
scas
movsl
and
out
mov
ret
jae
xchg
rcll
mov
notl
inc
and
xor
ljmp
les
mov
fstps
lock
inc
mov
push
mov
enter
les
in
add
sbb
jno
push
jo
movsl
sbb
fsts
jecxz
aad
in
dec
pushf
inc
xor
je
and
inc
adc
jne
rorl
cmp
pop
loop
test
mov
mov
push
and
add
push
lcall
pop
ljmp
jnp
enter
mov
mov
mov
fdivrl
imul
adc
nop
xchg
pop
push
jl
mov
mov
mov
pop
xor
add
jb
pusha
dec
and
test
xchg
mov
lret
inc
lods
xor
movsb
movsl
jle
push
sbb
fdivrl
inc
cmpsl
aam
pushf
cli
or
sbb
incl
aam
enter
jbe
inc
leave
add
inc
inc
mov
iret
inc
pop
sarl
jne
jle
pop
daa
fnstenv
pop
jl
xchg
jne
add
out
aaa
mov
dec
gs
cmp
pop
or
pop
inc
repz
clc
add
mov
ljmp
mov
push
testb
flds
cmp
jl
ret
jmp
xchg
sub
mov
jp
pop
push
push
js
xlat
mov
add
insl
mov
les
pop
xchg
scas
xor
pop
lret
xor
bswap
sbb
jecxz
fnstcw
mov
mov
sbb
push
dec
sahf
pop
xchg
inc
fmull
pop
xorb
lret
test
arpl
cmp
push
and
and
xchg
ss
or
fdivrl
jnp
jp
xor
dec
loop
inc
lods
cmp
cmpsb
sbb
js
jmp
inc
cmp
or
or
cmpsb
push
out
imul
mov
negl
addb
inc
pop
ss
in
sti
into
movsl
lahf
jmp
fisttps
mov
xor
int3
cli
push
fnstcw
mov
out
push
loope
xor
std
mov
and
mov
hlt
sbb
xchg
cmpsb
out
filds
fsubrs
int3
sub
xchg
scas
unpcklps
sbb
outsl
popl
xchg
xchg
push
test
enter
mov
out
cmpsl
cmc
shlb
aaa
and
jne
sbb
mov
sub
icebp
stos
in
and
push
inc
rorl
lcall
sub
xchg
xchg
and
out
push
sbb
rcr
or
xlat
push
jo
out
mov
pop
mov
and
inc
ljmp
push
dec
jo
mov
sbb
cwtl
dec
mov
lods
arpl
adc
int3
out
lcall
xchg
pop
fists
fildll
pusha
push
or
jg
pushw
dec
inc
cld
mov
xlat
out
movsl
rcr
lea
mov
cld
add
lahf
cltd
jns
jne
inc
scas
and
outsb
xchg
lock
in
ret
in
hlt
push
xor
repz
add
fmuls
fisubrs
cmp
adc
dec
inc
js
add
mov
mov
cld
and
jno
loopne
dec
push
mov
inc
out
add
incb
push
hlt
pop
cwtl
lret
stos
mov
mov
addl
inc
push
inc
loopne
inc
mov
insb
xor
cmp
add
inc
jnp
jae
std
scas
hlt
mov
xchg
or
dec
push
decl
outsb
repz
cmpsl
cmp
add
push
lods
sahf
or
test
lock
roll
add
jae
inc
mov
stc
jecxz
repz
jg
in
sbb
add
mov
adc
ds
test
aam
stos
mov
sub
lock
ja
xlat
pop
cltd
mov
outsb
xor
push
sub
cmp
mov
xorb
ret
push
clc
fstpt
cld
stc
out
pop
jle
pop
sti
xor
and
insb
cmp
cmpb
mov
cltd
jae
add
or
imul
or
fidivs
stos
adc
arpl
push
scas
pop
adc
ret
pop
lea
repz
lahf
pop
je
sub
jge
pop
dec
std
loop
das
push
or
shll
faddl
xor
lods
push
mov
cmp
and
xchg
push
or
xor
daa
aaa
jg
sbb
clc
fs
ljmp
sub
jno
push
push
shrb
lcall
jmp
sub
mov
pusha
divb
insb
add
mov
inc
imul
fs
mov
test
testb
jecxz
xchg
push
cld
data16
enter
fimuls
pop
stos
xchg
sbb
movsb
repz
pop
fdivrl
push
inc
mov
xor
or
jle
fst
pop
shrl
lods
and
sub
insw
rorl
push
int
cmp
cmp
stos
xchg
lds
jle
pop
adc
xorl
pop
pop
mov
mov
in
or
mov
or
ret
xor
push
daa
faddl
and
push
imul
xchg
sahf
sbb
scas
sbb
fidivrs
mov
sub
dec
sbb
arpl
jb
xchg
inc
add
aam
dec
inc
mov
sub
xchg
mov
jecxz
mov
mov
in
fwait
pop
xor
adc
test
ret
xchg
js
dec
xchg
repz
push
sub
lret
icebp
arpl
shrb
sti
adc
je
test
sbb
sub
inc
jns
or
test
dec
out
push
cmpsb
lret
ret
xor
mov
in
push
js
adc
inc
pop
je
mov
dec
cmpsl
mov
cwtl
pop
mov
outsb
test
or
mov
and
mov
or
mov
xlat
xor
xchg
cmp
jmp
dec
fmull
rcrl
or
xor
xchg
stc
fsubl
sahf
mov
movsl
aas
xchg
push
mov
negb
jecxz
push
push
or
outsl
lcall
shll
mov
cmpsb
in
push
test
push
cli
cmpl
scas
sbb
sub
fcmovu
sbb
mov
or
fwait
int3
adcl
xchg
clc
jb
xchg
ja
mov
js
enter
and
test
fldl
out
or
add
xorl
ret
loope
push
fisubs
lods
or
fmull
aas
repnz
aaa
lahf
pop
mov
mov
sti
push
dec
ret
adc
jp
lock
jo
rorb
hlt
jns
push
sarl
xchg
jb
ljmp
rol
cmp
popa
sbb
stos
mov
cmp
je
sbb
sbb
cwtl
rcll
je
in
jo
dec
aas
jle
cmp
push
and
sbb
stos
cmp
inc
adc
mov
xchg
xor
dec
cmp
sub
cld
or
insb
xor
jp
push
daa
pop
push
arpl
mov
xor
test
repz
lds
jmp
and
cmp
imul
or
xchg
sbb
popf
mov
cmova
xor
dec
mov
mov
push
mov
push
stos
addb
dec
jns
jbe
pop
dec
cld
inc
fucomp
add
outsl
mov
shlb
adc
xchg
push
int
add
inc
dec
lock
mov
loope
xchg
movsb
xchg
and
outsb
lds
aas
insl
out
je
push
aas
xchg
fisttpl
ss
in
rcr
sbb
push
mov
mov
int
mov
inc
jne
orl
lods
stos
push
movsb
repz
xchg
outsl
into
push
cmp
dec
dec
dec
inc
fdivl
mov
or
mov
lods
adc
pop
jmp
enter
push
mov
mov
shrb
iret
aam
cmpsb
aad
test
incb
xlat
icebp
sbb
sbb
sahf
int
sbbl
arpl
sbb
scas
enter
std
cld
cmp
pop
xor
mov
rcr
faddl
lret
mov
dec
push
add
sub
clc
inc
ret
es
and
mov
jns
addr16
test
xchg
fbld
mov
testl
rorw
pop
push
and
insb
pusha
aas
ljmp
movsl
ficoml
stc
insl
pushf
or
fs
test
leave
cmpl
pop
fcmovb
rcr
cltd
push
sti
or
std
jb
cld
and
loopne
lret
inc
es
xchg
lods
push
pusha
fisubs
popa
inc
cmp
push
pusha
pop
mov
cwtl
in
les
mov
loope
sub
clc
mov
mov
xchg
int3
sbb
mov
xchg
aam
rcr
sub
add
xorb
lret
mov
outsb
adc
xchg
inc
pop
add
pop
out
imul
sub
xchg
cs
ret
cmp
mov
mov
mov
sub
push
and
mov
dec
jbe
push
es
stos
jle
outsl
insb
and
and
mov
aad
adc
and
sarl
mov
xlat
ja
lcall
scas
pop
daa
cmc
popf
xlat
pop
inc
inc
fldl
xchg
pop
test
nop
dec
xchg
test
sbb
mov
lret
js
dec
inc
xchg
ljmp
dec
inc
idivl
lds
ljmp
rcrb
jne
lret
je
and
data16
and
lds
scas
test
push
imul
pop
pop
jb
decb
clc
lret
test
jbe
mov
xchg
rcll
push
and
xchg
leave
cmp
frstor
lods
mov
jl
ret
and
xchg
adc
clc
mov
dec
loop
jmp
sarb
sub
mov
push
mov
dec
sbb
andl
mov
test
test
pop
inc
mov
xlat
dec
pop
sub
jp
aam
xor
ret
jb
negb
pop
sti
insb
popa
pop
mov
pushfw
jge
pushf
cmpsb
test
xlat
sub
xlat
fimull
sub
shr
xlat
movsl
sub
fimuls
mov
cltd
pop
ret
xchg
xchg
int
outsl
push
jmp
cmc
test
arpl
push
or
fadd
mov
or
sbb
or
pop
mov
dec
pop
inc
pop
aas
lods
and
cmpsl
xor
push
sarb
lahf
dec
mov
in
push
lea
push
pop
inc
pop
jmp
cmpb
push
mov
test
loope
in
jns
jne
int3
mov
xchg
cmpsb
jne
sub
pop
rorl
and
outsb
and
out
enter
jle
cltd
jmp
mov
out
es
popf
mov
add
shrl
add
add
data16
sub
mov
pop
jl
fwait
and
insb
out
mov
jbe
sahf
ja
loopne
pop
inc
cltd
loope
pop
cmpsb
cli
mov
jb
mov
lret
pop
xor
or
mov
push
push
jl
dec
jno
js
stos
addb
lret
mov
push
pusha
pop
subb
aad
cmp
push
cmp
mov
popf
fstl
cs
sbb
std
lret
push
mov
inc
push
dec
nop
dec
sub
jno
lds
inc
ficoms
ja
add
aam
shrb
mov
rcr
roll
psubb
repnz
arpl
test
pop
jb
or
js
fdivrs
or
dec
pop
mov
dec
roll
mov
sahf
loope
popl
insb
enter
fstpl
adc
adc
mov
adc
jl
hlt
dec
lret
addr16
mov
popf
cmp
mov
xadd
inc
fsubr
xor
sub
shll
out
dec
mov
int3
jmp
or
ds
in
mov
xor
mov
sahf
imul
dec
shr
mov
dec
mov
mov
pushf
dec
inc
test
jge
insl
dec
inc
xor
rolb
sbb
jns
mov
add
iret
inc
orb
mov
mov
imul
loope
out
and
outsl
adc
not
xchg
ret
insb
push
stos
rorl
stc
aad
adc
cmp
sbb
icebp
into
mov
add
adc
out
inc
dec
inc
out
fsts
xlat
ljmp
and
mov
iret
loop
js
xor
ljmp
rorb
aas
flds
jo
push
loope
nop
das
sub
lock
stos
test
imul
int
sbb
sar
je
les
push
xchg
jecxz
int
test
and
dec
xor
mov
and
pop
inc
mov
popf
pusha
fwait
sbbb
or
ror
leave
and
sub
js
jp
sbb
push
dec
lods
jecxz,pn
lahf
push
mov
jo
div
push
dec
jno
std
pop
fwait
fwait
negl
mov
add
pop
cli
rorl
shr
es
mov
push
sub
cmpsl
lcall
ss
dec
mov
stos
mov
mov
daa
imul
inc
movsb
aad
scas
enter
jge
mov
jns
push
pop
stos
repnz
dec
test
or
vunpckhpd
sub
inc
fisubrs
xchg
inc
je
mov
or
daa
dec
fistpl
sbb
xchg
dec
popa
mov
cmp
dec
jmp
mov
xor
pop
mov
mov
dec
dec
ret
dec
adc
xchg
xor
mov
dec
in
insb
repnz
and
jbe
xchg
cmp
notb
insl
cmp
test
sub
add
stc
test
jo
shll
mov
out
push
inc
mov
mov
pop
out
jne
pop
sub
or
adcb
inc
sbb
add
adc
mov
xchg
dec
sbb
or
lods
xchg
sbb
mov
pop
jg
in
and
mov
push
aam
ret
mov
mov
pop
pop
add
movsb
outsl
lds
lods
outsb
jle
shl
jmp
sbb
das
ss
mov
cli
je
mov
lods
std
mov
and
mov
push
jl
out
test
and
add
orl
sar
push
xchg
xor
mov
xchg
adc
aad
mov
test
sub
jecxz
icebp
lods
xor
ret
shrl
xor
daa
xchg
inc
out
addr16
adc
xor
or
mov
loopne
pop
pushf
inc
sbb
fsubrl
stc
mov
pushf
fcomip
fs
pop
jle
movsb
xor
addb
and
dec
inc
or
test
jne
lods
clc
in
rclb
adcb
pop
sub
test
sub
sbb
cmpsb
sub
in
sahf
scas
cwtl
mov
or
fwait
repnz
pop
adc
sahf
adc
push
cmp
dec
cmp
fs
dec
xor
je
testb
cmp
pushf
fdivrl
movsl
lret
push
aaa
pop
dec
fbld
sahf
mov
xor
call
mov
jae
iret
xchg
pop
out
shll
hlt
lret
cmpsb
pop
mov
pop
xor
jb
mov
push
in
hlt
xlat
rcrb
repz
lock
sub
pusha
dec
adc
xchg
push
xchg
cmp
dec
lock
mov
inc
andl
push
pop
mov
lret
fstp
xchg
lds
add
mov
int
in
push
cmp
fiadds
mov
je
push
popa
adc
dec
ret
xchg
push
dec
or
mov
sbb
fldt
dec
outsb
mov
mov
fdivs
pop
pop
fstpl
enter
into
or
popa
mov
lcall
jge
pop
dec
pop
call
mov
sbb
cmp
int3
inc
push
dec
push
mov
mov
mov
and
jmp
push
ds
jl
lock
pop
xchg
mov
pushf
ds
xchg
popa
sub
pop
mov
inc
add
pop
loopne
repz
mov
into
jge
ret
dec
scas
int3
bound
mov
mov
fcmovbe
inc
pop
pop
or
fcoml
lds
in
js
pushl
out
out
ret
xchg
xchg
push
test
hlt
mov
mov
adc
movsl
popa
insl
inc
sbb
mov
and
inc
les
sbbl
cmp
pusha
popa
lcall
fimuls
clc
jne
sbb
loope
cmp
test
or
lcall
jle
cmp
add
test
in
addl
or
icebp
push
movups
sub
js
test
mov
jecxz
push
push
jb
or
movsb
jno
xchg
mov
fsubrs
dec
icebp
loop
out
pop
lods
jl
jno
sub
xchg
dec
jmp
stos
and
fsqrt
ret
popa
nop
int3
scas
das
or
lods
add
jecxz
push
addb
add
xchg
lea
push
rcrl
sahf
xchg
int3
iret
pop
decl
repnz
xchg
push
in
repz
ljmp
ds
inc
mov
fs
imul
iret
in
xchg
inc
mov
push
call
pop
movsl
inc
jecxz
add
sbb
cmpsl
mov
aam
jns
mov
inc
inc
jno
movsb
pshufw
lock
dec
pop
xlat
lock
jle
xor
mov
dec
sub
xor
cmp
mov
bound
or
pop
lret
in
mov
sub
mov
push
outsl
mov
mov
test
cmp
xlat
mov
pushf
ret
ja
in
sbb
out
lods
call
arpl
push
pop
pop
inc
dec
cmp
add
and
or
lock
add
in
shlb
pop
dec
aas
movsl
outsb
jmp
xor
cmc
in
mov
adc
in
pop
pop
mov
icebp
mov
dec
or
addr16
ret
daa
push
rorl
arpl
outsl
sti
push
repnz
fiaddl
mov
js
mov
mov
cmpsb
shr
push
push
addr16
jge
jns
mov
mov
adc
aaa
loopne
call
loope
adc
push
fstps
cmp
fmul
add
icebp
aam
or
mov
xchg
mov
sub
and
push
insb
jl
or
test
push
mov
nop
mov
not
int3
jb
incl
inc
xor
rcrb
out
add
stc
shrl
push
pop
add
stos
rcrl
mov
psllw
inc
mov
cwtl
addr16
cmp
and
movsb
movsl
lock
sbb
loop
inc
xchg
inc
call
sbb
mov
daa
ja
mov
and
idiv
movsl
cmp
or
movsb
movsl
adc
test
inc
and
fisttpl
pop
or
lds
ds
sbb
shll
cmpsb
outsl
inc
cwtl
dec
imul
adc
jbe
ltr
jmp
xor
mov
mov
mov
and
inc
push
dec
pop
xchg
mov
cmp
inc
pop
inc
in
lods
jg
adc
pop
testb
cmpl
sub
repnz
sti
push
adc
lret
jns
push
sub
mov
push
int
in
call
xor
inc
repnz
loope
sbb
jb
fcomps
jne
in
jmp
jge
inc
mov
xchg
mov
or
dec
fldcw
daa
outsb
aad
pushf
mov
iret
in
adc
jmp
xchg
mov
sbb
add
xchg
cmp
add
dec
rcl
jne
mov
outsb
push
mov
leave
pop
outsl
jmp
lcall
add
add
sbb
fwait
inc
dec
jb
push
jmp
xchg
lods
fldcw
iret
das
in
repz
outsl
test
lods
in
adc
push
pop
out
rolb
or
dec
insb
xor
pop
inc
jb
movsl
imul
repnz
cli
xorb
push
std
sub
or
xchg
push
pop
dec
aas
repnz
syscall
fistl
sbb
sbb
push
push
insl
mov
mov
test
cmp
dec
cli
ficoms
loop
mov
inc
outsl
fcmove
jno
and
mov
add
aam
or
mov
dec
lcall
movsb
int3
xchg
je
mulb
push
or
decb
fisttpll
xlat
add
push
out
movsb
push
jg
fidivs
and
inc
cs
addr16
xchg
mov
test
mov
call
xchg
mov
sub
iret
xchg
cs
mov
pop
pop
mov
mov
sbb
insb
in
mov
mov
repnz
fidivs
movsb
or
mov
inc
or
in
jp
jo
dec
je
cwtl
adcb
push
mov
push
sbb
mov
mov
aad
stos
or
iret
fstpl
pop
jle
cmp
nop
push
dec
and
fmulp
mov
mov
jge
pusha
out
pop
aad
xchg
adc
inc
sub
mov
ror
cmpsb
sbb
int
and
call
sub
dec
sbb
testl
jnp
test
ret
add
scas
int
out
sub
push
and
xchg
and
cmp
cmp
aad
xchg
mov
push
cltd
or
ja
sbb
or
in
cs
jl
rcrl
sbb
std
jb
adc
inc
add
movsb
int
in
scas
out
mov
add
sbb
cld
sahf
and
js
cli
imul
gs
sbb
adc
sub
xlat
das
out
pop
scas
mov
dec
xchg
leave
cmp
adc
cmpsb
repnz
cmp
scas
mov
std
pop
push
iret
pop
fsts
mov
roll
push
cmp
dec
dec
movsb
pop
in
xchg
div
call
push
orb
jmp
call
push
sbb
ja
sarb
lock
stos
inc
or
popa
ret
sub
jo
shlb
pop
pop
add
jo
lods
icebp
push
inc
adc
pushf
es
mov
mov
mov
jg
js
mov
bound
imul
add
idivl
inc
jp
jb
into
push
mov
imul
mov
xor
cmc
push
cmp
push
lds
pop
daa
test
jb
cltd
xchg
pop
inc
lcall
setnp
mov
sub
test
ret
inc
je
inc
push
dec
addr16
stos
sbb
arpl
imul
jmp
call
ja
call
mov
cli
push
inc
inc
inc
int3
out
popa
sbb
xchg
xchg
mov
aam
mov
arpl
push
imul
sub
xor
sub
push
jmp
cltd
or
lahf
cli
loop
test
cld
sub
pop
mov
xchg
inc
mov
add
js
inc
or
pop
jecxz
inc
push
orl
ds
xor
pop
ss
mov
gs
inc
add
shr
cmc
es
loopne
xor
jg
xchg
nop
or
xor
aas
divb
clc
hlt
dec
and
xchg
ds
add
sar
out
out
mov
mov
bnd
add
icebp
push
add
add
or
ljmp
fwait
push
jbe
negb
out
test
push
add
pop
sti
es
push
jo
xor
iret
adc
mov
rcrl
cli
pushf
mov
fists
sub
jns
push
or
out
leave
push
out
out
lods
fsts
mov
jb
inc
fistpl
loopne
cmp
dec
aam
lret
insb
imul
cwtl
or
pop
rorb
enter
mov
or
adc
xchg
cli
pusha
lds
stos
xchg
mov
ficoml
std
pop
sbb
pop
aam
js
cmp
lea
push
xchg
add
fstps
std
insb
mov
mov
pop
xchg
jecxz
je
inc
and
adc
popf
or
or
mov
mov
push
pop
sbb
jl
cmp
mov
insl
std
imul
test
mov
dec
pop
inc
arpl
dec
pop
in
add
cmp
lods
iret
int
jns
mov
dec
ffreep
sub
out
push
sub
lcall
pop
idivb
insl
xor
cmpsb
fimuls
stc
push
bnd
int
outsl
cmp
test
jne
cmp
repz
fsubrl
or
pop
adc
pop
jbe
ja
add
mov
xchg
jg
mov
sti
aad
sub
rcr
add
popf
mov
clc
fdivr
ret
xchg
imul
dec
test
mov
popa
scas
js
not
jbe
cld
xor
and
xchg
pop
xor
and
push
jecxz
lahf
pop
pop
aas
push
push
fwait
addr16
mov
push
jns
outsb
outsb
pop
ds
xor
pop
lea
mov
add
jbe,pt
jnp
sbb
mov
sub
cmp
mov
roll
lods
or
cmp
imul
testb
cmp
adc
xor
mov
ret
leave
push
adc
std
xor
enter
stos
mov
test
pusha
nop
xor
call
cmp
fwait
push
sub
shlb
and
sahf
xchg
pop
movsb
push
loope
xchg
jno
mov
mov
sbb
nop
xor
xlat
jge
mov
loopne
mov
dec
adc
fdivrs
call
out
rcll
cld
pop
mov
jb
call
sbb
jg
aaa
push
dec
das
sub
and
or
and
outsb
enter
pushf
std
push
inc
push
pop
or
in
out
pushf
outsl
or
sub
mov
mov
jae
jecxz
pushf
push
lret
inc
sti
repz
mov
lcall
movsb
inc
repnz
add
outsb
sbb
testb
test
out
mov
popf
std
jecxz
jp
push
stc
roll
or
cmp
dec
jmp
mov
pause
sub
mov
sarb
jg
ror
add
out
scas
in
lock
pop
push
adc
xor
mov
jns
mov
lods
mov
mov
test
jb
insl
jl
add
icebp
mov
xchg
push
mov
pop
stos
push
push
imul
jne
sub
cmp
test
sub
xchg
add
push
xlat
or
cs
ja
std
fucomp
es
sub
sahf
pop
mov
adc
fldt
push
or
addr16
fiaddl
sub
sahf
jns
sbb
sub
test
inc
xchg
xchg
mov
inc
lods
lahf
push
andb
jbe
sbb
and
test
pushf
pop
int
test
mov
ds
mov
pop
pop
neg
mov
inc
push
and
popf
push
push
push
dec
andb
dec
jb
xor
stc
sub
xlat
pop
mov
call
inc
scas
ljmp
jnp
mov
ffree
adc
mov
inc
adc
lods
clc
cmp
icebp
add
pop
popa
enter
cltd
ja
icebp
clc
in
dec
and
ss
bound
mov
mov
add
jb
lock
mov
lret
adc
lret
xlat
dec
mov
pop
lock
cltd
mov
mov
movsb
add
cmc
pop
daa
fisubl
or
rcll
out
in
mov
cltd
cmpsl
loopne
jmp
aas
fldenv
sub
sbb
xchg
xchg
xor
and
pushf
mov
jmp
out
xchg
push
sarb
add
movsl
mov
cmp
negb
sub
sub
inc
add
mov
pushf
sbb
mov
mov
fwait
pop
out
add
mov
aam
jmp
or
xor
notb
fwait
sbb
cld
out
lds
add
popf
sub
mov
in
inc
add
push
popa
aad
in
xchg
inc
cli
enter
fwait
mov
xchg
adcb
jns
mov
inc
cli
adc
in
lea
cmp
sti
xchg
sub
xchg
inc
clc
into
pop
add
sbb
sti
push
lea
dec
scas
pop
cwtl
in
push
and
insl
push
sub
clc
push
cs
sub
outsl
push
sbb
sub
add
mov
add
scas
xchg
mov
push
xor
ficoms
movsl
add
xlat
mov
inc
jno
push
inc
and
adc
sbb
mov
adc
cmpsb
imul
call
xchg
lret
fwait
jb
mov
add
push
fimull
mov
dec
repnz
cmp
push
xor
mov
daa
imul
out
mov
jcxz
pop
jp
sub
xlat
jb
push
adc
insl
into
addr16
out
jmp
sti
add
int
adc
fcoml
and
sub
stos
leave
adc
int3
cld
mov
rcrb
or
clc
les
mov
adc
and
pop
push
repnz
iret
sbb
sub
jmp
adc
adc
mov
push
dec
insl
cmp
add
dec
cmpsb
pop
xchg
dec
and
mov
idivb
cmp
sub
mov
aas
cmc
inc
adc
hlt
add
mov
fidivrl
sbbl
lea
mov
popl
or
jo
sbb
adc
mov
ds
out
push
into
sub
out
into
pushf
and
scas
ds
ljmp
repnz
pop
sbb
xorl
mov
call
pop
iret
push
jg
insb
out
inc
frstor
popf
loop
mov
inc
mov
stos
pop
add
pop
xchg
rolb
addr16
outsl
jmp
sbb
jb
outsl
cmpsl
cli
dec
jg
push
bound
fdivrp
std
sahf
iret
adc
add
punpckhbw
lods
popa
sbb
roll
adc
xor
push
cld
jne
aas
mov
jnp
or
out
xor
popa
mov
mov
xor
xchg
or
mov
imul
mov
xor
out
fbstp
bnd
and
sbb
jecxz
sub
out
sub
rclb
ret
cwtl
imul
lret
push
movsb
cmc
sbb
arpl
lock
jbe
inc
or
out
mov
mov
loopne
mov
sbb
sbb
jle
in
jno
jl
in
fwait
mov
xor
xchg
out
enter
int
xchg
lods
cmp
js
cmpl
shrb
jl
jl
jecxz
mov
scas
lahf
mov
inc
sbb
push
sarl
pop
arpl
cmovg
cmpsl
lock
lret
push
popa
xlat
lea
cld
xchg
ret
out
lock
and
mov
movsl
cmp
add
sbb
lock
sahf
sub
arpl
add
sub
mov
add
std
pop
inc
jecxz
jns
insb
or
fildl
js
jbe
push
inc
fbld
pop
xor
xlat
pop
dec
inc
mov
mov
dec
mov
out
scas
outsb
aam
shlb
mov
sub
mov
es
test
xor
mov
and
ret
mov
jmp
push
inc
dec
pop
sbb
sti
sbb
icebp
xchg
jle
std
and
movsb
add
push
lds
inc
add
jl
pop
rclb
leave
mov
mov
mov
hlt
pop
mov
jno
popa
mov
and
rclb
and
sahf
jp
dec
clc
sti
popa
notl
sbb
push
sub
int3
xor
nop
int
hlt
push
out
cmpl
jmp
jge
andl
inc
lea
dec
mov
mov
mov
adc
inc
lock
sub
cmc
inc
jne
fsin
add
jge
cmc
nop
dec
push
sbb
stos
jle
test
aaa
or
hlt
xor
jns
flds
lahf
jno
pop
sarb
sbb
enter
cmp
lahf
shll
fcompl
mov
das
pop
and
cmpsl
adc
mov
sbb
push
and
sub
pushf
xchg
jle
loopne
xlat
add
or
inc
js
mov
and
enter
stc
jp
fldenvs
in
lret
or
fcmove
xor
imul
push
mov
negl
jmp
xor
fidivrl
je
icebp
jge
jae
movsb
cmp
lahf
lock
sub
sbb
scas
sbb
fisubrl
sbb
ret
pop
sub
xchg
jmp
outsb
sub
sbb
enter
lret
lods
cmc
ds
js
loopne
jmp
dec
gs
pop
pop
test
push
das
das
jmp
insb
cmpsb
lods
sub
pop
shr
and
ja
call
xchg
mov
in
pushf
das
mov
sbb
adc
mov
shll
clc
popa
rorl
mov
inc
mov
fcomp
inc
repnz
lea
dec
movsb
testb
xor
bnd
test
imul
mov
sub
popa
inc
add
cmp
cmp
sub
mov
stos
nopl
shlb
jno
sub
ss
ret
jl
into
div
loope
fnstsw
mov
inc
xor
pusha
lods
xchg
stos
add
popf
push
rcll
pusha
jns
pop
cmpsb
pop
xchg
dec
nop
lahf
cmp
aam
sahf
sub
jmp
in
sbb
cmp
cmp
scas
xor
lahf
mov
mov
pushf
and
mov
in
xchg
and
mov
mul
pop
bound
or
lods
rcll
jle
gs
pusha
cmp
cmp
sub
out
xor
push
adc
add
stos
call
std
dec
lds
mov
fbstp
or
enter
mov
mov
jl
sbb
out
les
ret
fsubrl
sbb
aad
dec
aaa
mov
loopne
add
adc
pop
scas
cwtl
mov
lds
pop
out
push
lods
jne
js
xor
loope
sub
pop
sbb
iret
mov
add
adc
lret
in
in
push
adc
lret
sbb
jo
out
aas
aaa
outsb
sub
dec
push
jmp
push
subb
mov
pop
push
in
mov
test
cmp
pop
and
inc
stos
cltd
add
lret
pop
xlat
xchg
inc
in
popa
jae
mov
movsl
mov
js
mov
aaa
cmp
in
push
push
test
xor
cmp
rorl
jnp
push
aaa
lcall
adc
pop
out
das
loop
rcrb
mov
adc
cli
cmp
mov
sbb
sub
enter
cmp
je
sub
mov
or
and
popf
out
dec
shr
pop
outsl
movsl
mov
adc
fisubrs
and
leave
fisttpll
test
popl
fcmovbe
inc
or
mov
sub
or
std
shl
fcomip
add
loopne
mov
lods
ljmp
mov
and
nop
insl
in
mov
xchg
jle
and
and
test
cmp
sti
insl
insl
nop
test
cmpsl
lods
rcrb
int
jg
mov
das
test
adc
pop
add
cmp
and
leave
das
cmpsb
leave
jle
inc
cltd
std
inc
pop
cld
mov
orb
pop
and
mov
sahf
test
cwtl
int3
xlat
outsl
jge
dec
xchg
int3
je
cltd
xchg
in
aaa
in
stc
push
movsb
mov
xor
mov
mov
stos
add
mov
insb
divb
add
cmc
push
and
mov
pop
movsl
inc
adc
orl
sub
jmp
in
fidivs
hlt
cmp
rclb
mov
sbb
xchg
loopne
iret
inc
xchg
jl
jne
pop
shl
inc
xor
rcll
mov
lock
in
push
jmp
jg
pop
dec
lret
sahf
je
adc
sti
insb
dec
test
lcall
adc
xchg
arpl
mov
xchg
adc
cmpb
sub
add
es
xor
test
ret
aaa
or
xlat
push
jae
push
push
xchg
stc
pop
pop
ss
mov
pop
inc
lock
movsl
and
inc
hlt
cmc
addr16
xor
mov
fbld
push
mov
jb
out
insb
pop
xchg
pop
repz
mov
xor
incl
imul
lcall
aas
mov
jb
mov
ja
adc
inc
cmp
mov
inc
mov
adc
jbe
outsl
and
fwait
stc
in
xor
call
or
gs
es
lds
and
test
or
jae
push
mov
ja
and
pop
xor
leave
ja
sbb
jbe
pop
pop
push
cmp
out
stc
scas
dec
ret
shll
fsubs
insb
mov
int
inc
adc
xchg
jne
push
lahf
sbb
aaa
gs
lock
mov
push
movsl
jb
add
test
mov
pop
lcall
pop
adc
cmp
mov
cmpsw
pop
andl
lock
pop
cmp
jmp
jle
push
xor
imul
inc
inc
adc
dec
mov
or
fs
sub
pop
jo
jnp
out
adc
in
xor
add
push
movsl
enter
enter
xchg
out
jbe
loopne
mov
cmp
gs
inc
sti
add
sbb
dec
pop
mov
enter
test
int
js
cli
std
xchg
push
adc
pop
les
push
sub
stos
in
xchg
aas
scas
dec
mov
dec
jo
push
cli
cmc
push
sub
subl
out
jmp
repz
add
xchg
mov
iret
lock
pop
out
mov
leave
mov
sbb
add
cld
add
and
in
adc
adc
stc
inc
dec
rclb
sbbl
arpl
and
cwtl
adc
or
js
adc
cmp
and
call
adc
or
scas
add
mov
lock
mov
test
cmp
popa
ds
clc
pushf
push
push
jmp
jg
les
cmp
jle
xchg
mov
fs
fcoms
mov
mov
dec
sarb
testb
cmpsb
pop
out
inc
ret
push
lock
inc
mov
mov
ss
xchg
sbb
dec
inc
add
sbb
adc
mov
inc
mov
ds
gs
or
js
xor
ja
adc
push
cmpsb
dec
rol
and
cmc
lcall
outsl
fistps
mov
addr16
cmc
add
sbb
push
out
xchg
rolb
lods
and
cmp
jnp
idiv
adc
add
jg
fwait
in
jl
mov
jecxz
js
add
test
mov
xchg
mov
addr16
bound
xchg
leave
pop
mov
loopne
or
in
jb
cmpsl
cli
cmc
int
fsubl
pop
mov
pushf
icebp
inc
enter
in
scas
aas
inc
jl
ja
inc
add
push
push
fstpl
in
cmp
lods
mov
test
stos
mov
push
inc
subl
cmp
popf
scas
shr
aam
mov
test
cmp
data16
lcall
ficoml
je
pop
sub
ret
xor
pop
call
mov
popa
or
aas
decb
lock
es
jl
xchg
scas
and
inc
inc
or
outsb
xor
cmp
add
push
inc
cmp
push
mov
mov
sub
or
sub
stc
add
sub
sub
in
clc
lods
pop
dec
dec
jne
sub
inc
adc
lcall
cwtl
fistpll
mov
jg
iret
orl
sub
addr16
bound
aas
fwait
incl
fxch
jo
push
hlt
imul
and
dec
ds
loopne
and
cltd
ljmp
pop
mov
cwtl
push
fidivrl
pop
push
scas
inc
popa
sbb
pop
mov
jb
add
dec
or
int
pop
cmp
stos
lret
fisubrl
push
xor
leave
xchg
lods
xor
sbb
cmp
inc
pop
fwait
sbb
scas
add
xor
movsl
loope
mov
jle
inc
fimull
mov
dec
mov
push
push
fwait
jp
aas
mov
cld
mov
push
lods
out
dec
fs
cmp
mov
lods
fbld
int3
adc
scas
lods
pop
adc
jge
mov
inc
add
sub
or
enter
dec
imul
push
cmp
scas
adc
ret
ficoms
pop
add
aaa
loope
mov
enter
inc
test
sub
std
inc
xchg
call
dec
adc
and
pushf
pop
call
push
movsb
cmp
loope
and
inc
mov
adc
mov
add
into
push
push
clc
aam
daa
xchg
xor
ficompl
sbb
lock
loopne
or
lcall
mov
std
mov
cmp
pop
push
xor
mov
mov
test
je
shlb
not
lret
scas
outsl
jmp
inc
int3
xor
gs
mov
lock
dec
cmpsb
mov
sti
adc
push
add
aaa
add
dec
pop
fnstsw
push
jno
xchg
mov
pushf
dec
and
pop
mov
push
rolb
xchg
fnstenv
cmp
pop
lahf
xchg
lock
and
jge
out
mov
xchg
xchg
daa
sbb
mov
jecxz
sub
adc
inc
out
jecxz
xchg
and
mov
jp
enter
mov
dec
sbb
inc
mov
xchg
lds
popf
and
int
es
inc
out
rcl
in
lcall
test
adc
and
add
sub
or
insb
cmp
movsl
ljmp
mov
imul
pop
mov
cmp
mov
out
in
test
sbb
out
mov
push
dec
pop
dec
pop
repnz
push
out
aam
adc
inc
xchg
add
add
repnz
outsl
sub
cmp
cmp
adc
adcl
or
lret
enter
mov
adc
and
xchg
sbb
cmpsl
andl
inc
aam
aas
pop
repnz
ds
mov
sbb
sti
mov
push
lods
pop
adc
add
push
mov
mov
mov
push
fdivl
mov
or
fnstsw
push
jl
cs
xchg
mov
dec
pop
sub
push
adc
push
xor
ja
fs
push
fsubrs
jae
stos
cmp
xchg
and
std
icebp
inc
push
stos
jne
arpl
into
jo
adc
or
jg
mov
mov
xor
mov
daa
mov
or
sub
lcall
or
or
addl
adc
cmc
inc
in
push
jb
jl
mov
and
aas
es
adc
cmp
out
std
mov
dec
xchg
pop
je
xor
cltd
lcall
add
rolb
mov
xorb
into
shl
mulb
es
lock
sbbl
jno
loop
jo
ret
cmp
popa
jp
xchg
lock
nop
aad
ficompl
pop
push
inc
fldt
add
fisubrs
rclb
xlat
pop
pusha
lret
xor
sbb
and
addb
les
dec
adc
shl
ret
jns
pop
hlt
and
out
cmpsb
imul
push
bound
lods
lahf
stos
cmp
in
lods
in
daa
or
aad
repnz
inc
jno
add
sub
movsb
bswap
push
pop
lret
das
cmc
stos
fistpl
lods
in
jnp
dec
xorb
ficomps
push
arpl
xchg
xchg
sti
cmp
in
dec
mov
or
movsl
data16
sub
mov
mov
aaa
and
and
jmp
mov
lds
and
lods
pop
je
outsb
insl
mov
jne
test
loopne
lcall
mov
and
rcr
xchg
lret
ljmp
cmp
scas
xor
or
lahf
mov
pop
mov
leave
push
in
es
test
insl
outsb
sub
adc
sub
mov
daa
push
cltd
std
push
pusha
enter
mov
push
jbe
push
jne
cmpsb
adc
jge
sbb
mov
gs
in
out
das
mov
pop
xor
push
cltd
shlb
out
inc
inc
out
std
js
xchg
sbb
mov
jno
es
cwtl
fisttpll
sub
add
ficomps
xchg
dec
or
popa
add
inc
cmp
out
add
add
push
or
nop
mov
dec
aad
fsubl
xlat
aam
cmpsl
xor
insl
or
int
into
mov
ficoml
into
adc
mov
sub
mov
dec
lea
sub
shlb
or
ret
gs
push
xor
outsl
fwait
push
arpl
ret
push
orl
and
add
out
push
sbb
mul
push
pushf
sahf
shlb
ret
add
mov
add
out
cmpsb
test
dec
mov
pop
jmp
fcmovnbe
xor
push
fs
imul
pop
sub
cmp
decb
stc
jb
ds
cmpsb
push
pop
add
xorb
les
cmpsl
lods
test
imul
outsb
xchg
jmp
xor
imul
out
adc
pop
push
je
dec
outsb
add
mov
mov
stos
jne
movsl
xor
fcomps
sub
pop
xor
ret
push
or
test
jg
sbb
ljmp
cmpsl
in
in
adc
cmp
mov
out
inc
test
push
call
loopne
jb
ljmp
int3
push
and
mov
sbb
mov
add
jmp
imul
sub
add
cmc
and
inc
aaa
xor
jle
inc
ja
or
test
push
xor
std
mov
xchg
pop
fs
dec
sbb
sar
adc
jl
lret
mov
fistps
out
adc
push
jp
stos
and
incl
outsl
pushl
in
js
vhaddps
push
scas
adc
add
in
mov
in
jge
das
popa
xchg
dec
and
imul
sub
in
outsl
dec
dec
xchg
cmc
movsb
xchg
push
adc
xlat
ffreep
jmp
jle
ret
out
int
dec
mov
xchg
mov
lret
dec
in
jge
add
adc
pushf
repnz
loopne
mov
enter
dec
jae
int3
insb
add
xchg
dec
jl
in
sub
push
push
stc
push
or
cmpsl
jno
xchg
out
mov
xchg
jnp
dec
loopne
sub
sub
nop
loopne
push
sbb
xor
or
mov
xchg
xlat
pop
jbe
mov
mov
mov
out
mov
sbb
daa
mov
insb
push
mov
inc
sahf
dec
fdivrl
dec
lods
decb
dec
in
pop
lea
adc
callw
out
ds
ds
aaa
lock
pop
mov
push
mov
int
lcall
std
push
out
lea
pushf
scas
pop
adc
xchg
cmp
xchg
cmp
xor
in
sbb
mov
into
fisubrs
and
cmp
mov
jae
push
pop
int3
paddw
movb
lret
xor
loopne
push
jl
ret
push
pop
inc
jp
pusha
testl
cmpsb
stc
lods
sub
mov
in
ret
mov
dec
inc
addb
pop
xor
sub
out
daa
sub
daa
jmp
mov
push
cs
mov
cmpsb
inc
pop
popa
ror
push
mov
cmp
sub
dec
sub
imul
ret
int3
and
cmp
xlat
aas
dec
fcompl
ffree
ret
inc
fstpl
or
xlat
sub
push
je
hlt
lcall
ljmp
mov
movsl
fwait
ds
aaa
add
and
xchg
sarl
xchg
es
out
jl
data16
xchg
test
and
adc
fs
xchg
out
push
roll
popf
adc
cmp
cmp
mov
mov
inc
cwtl
cmp
mov
cmc
jecxz
jo
loopne
sahf
sub
xor
push
or
cmp
xchg
roll
mov
mov
mov
stos
add
fs
mov
addr16
push
lock
test
les
lcall
addr16
mov
dec
sub
push
jno
neg
sbb
rolb
mov
xchg
fcmove
adc
adc
mov
mov
test
jo
cmpsl
call
pop
imul
cmp
pop
dec
in
stc
pusha
test
mov
cmpsb
dec
inc
push
outsb
cmp
movsb
jp
add
or
stos
or
or
add
js
jns
ret
scas
mov
sub
scas
data16
mov
xlat
mov
adc
mov
mov
inc
pop
cs
lock
and
cmpsl
cltd
mov
loope
outsb
push
inc
divb
xor
imul
mov
cli
dec
mov
and
arpl
pop
es
xchg
mov
push
in
adc
pop
repnz
jmp
inc
pop
shl
cld
mov
xor
fsub
sbbb
jbe
xchg
cmp
pop
nop
leave
and
roll
add
or
fdivl
test
cwtl
out
std
mov
xor
stc
fstps
loop
mov
dec
add
mov
cmp
inc
and
add
push
push
out
imul
aas
adc
fidivrl
xchg
cmc
adc
dec
enter
push
mov
sub
pop
inc
and
mov
es
adc
or
rcrb
mov
addl
fistpl
mov
shr
push
mov
push
jae
mov
cli
pop
sub
or
fisubrs
icebp
and
mov
mov
repnz
leave
ja
xor
mov
ja
add
or
add
pop
xchg
js
nop
in
cmc
mov
push
ss
ja
dec
xchg
mov
in
xchg
mov
pushw
pop
daa
or
mov
pop
and
jne
outsl
add
and
sahf
clc
jg
add
in
pop
fs
js
scas
leave
mov
mov
sbb
ret
xchg
xchg
mov
gs
pusha
jmp
in
pop
mov
sbb
arpl
mulb
xchg
loop
into
push
xor
bound
insl
sahf
into
fwait
xlat
nop
add
pusha
pop
pop
enter
adc
mov
cmp
push
in
mov
jecxz
out
xorb
cld
mov
jle
mov
and
push
mov
add
adc
mov
into
inc
jl
subb
dec
add
lret
xor
cli
inc
in
ret
mov
addr16
xchg
sub
push
inc
aam
jb
cltd
movsl
mov
pop
push
test
insl
pop
popf
ret
nop
mov
xor
xchg
sub
ss
lret
add
rcrb
bound
jl
leave
scas
je
sbb
lds
insb
inc
and
adc
mov
les
stc
pop
stc
jl
add
pusha
lret
sub
xchg
xor
insb
inc
iret
inc
and
idiv
aam
add
shrb
out
out
xor
mov
aaa
or
fwait
push
or
cltd
cmc
mov
int
ss
lock
adc
or
mulb
jg
inc
or
or
negl
dec
sbb
mov
mov
cmp
push
cs
lret
pop
pop
dec
enter
push
and
sub
cmp
push
in
dec
loop
shll
pop
sub
inc
pop
mov
test
movsb
inc
scas
mov
cmp
push
jae
xchg
push
mov
inc
data16
sbb
mov
sbb
mov
jp
lds
xor
push
insl
clc
test
cmp
outsb
jae
test
xchg
fsubp
mov
fldt
jecxz
xor
int
mov
adc
cmp
push
and
mov
dec
dec
data16
sub
into
bound
xor
lcall
xchg
adc
xchg
cmpsl
in
dec
pop
insb
subb
add
sahf
jg
inc
stos
push
or
add
loope
ja
inc
mov
out
fucomi
ja
aaa
adc
push
sti
and
cltd
jae
mov
or
loope
pop
pop
sbb
pushf
jge
inc
scas
sysenter
sti
cmc
xor
inc
insl
enter
shl
inc
cmp
jae
pop
xchg
bndstx
cmpsb
addl
xor
sbb
jae
loope
xor
xor
aam
add
jb
and
pop
push
dec
mov
jb
mov
aas
mov
sbb
hlt
rorb
push
jg
sbb
pop
cli
mov
leave
pusha
mov
in
adc
dec
adc
rolb
lahf
sbb
decb
clc
mov
in
test
test
jb
fldenv
dec
movsb
loopne
and
dec
cs
iret
mov
fcomip
addr16
add
push
mov
std
xor
add
sbb
std
xor
adc
imul
scas
sbb
aas
push
cmp
lcall
push
pop
rcll
xchg
addl
xchg
movsb
sub
push
mov
and
add
and
out
xchg
inc
dec
or
cmc
sbb
mov
cli
pop
dec
popf
jno
aam
outsl
cltd
gs
lret
sub
fmull
aad
pusha
ret
sbbb
mov
jne
xlat
gs
stos
add
out
fcomps
ret
jnp
loop
and
push
rcll
in
xor
cmp
mov
lock
call
xchg
mov
pminub
mov
sbb
insl
sub
mov
lods
push
les
or
es
and
test
in
movsb
dec
dec
cltd
push
push
and
jno
pushf
pop
adc
adc
arpl
lock
xchg
faddl
push
fnsave
sti
repnz
cmpsb
add
out
subb
dec
jae
push
pop
and
push
push
adc
scas
lods
int3
dec
sbbl
mov
add
jb
test
icebp
jbe
in
push
pop
dec
xor
xor
and
test
imulb
lret
inc
adc
add
xchg
sub
dec
sbb
jae
push
sbb
mov
repnz
das
mov
push
outsb
mov
and
ds
sbb
out
inc
stc
sub
jne
dec
xor
repz
ret
std
jb
dec
add
in
jl
pop
or
adc
daa
pop
cld
fwait
or
mov
lods
jmp
jle
or
int3
nop
push
out
js
pusha
icebp
pop
shl
push
lret
push
mov
xchg
jge
mov
or
sub
fmul
test
and
out
cld
xchg
mov
leave
add
mov
add
mulb
fisubl
pusha
push
pop
xor
cwtl
mov
or
or
sub
fbstp
fdivrl
sbb
notl
push
rcll
cmc
in
inc
pusha
sub
pop
sub
loopne
data16
cmp
movsl
push
adc
bound
outsb
jo
pop
cmp
stos
inc
scas
pop
xor
iret
mov
arpl
or
arpl
aad
xor
shl
sbb
lods
inc
mov
xchg
lods
movsl
int
int
or
xchg
fdivrl
vpsubb
ret
mov
sbb
push
rcrb
pop
cmpsb
mov
outsl
sbb
xorl
test
mov
enter
mov
sub
loope
sarl
ss
mov
add
ficoms
std
cmp
lret
sti
lock
mov
cmpsb
sbb
mov
xchg
cmpsl
xor
cmp
pop
dec
aam
nop
or
insl
adc
loop
out
fistpl
cmpl
add
mov
out
sub
jo
and
xchg
xlat
mov
push
mov
pushf
jb
lret
jecxz
dec
sbb
or
mov
cmpsl
loopne
push
mov
add
sbb
or
push
add
xlat
outsl
shlb
jbe
hlt
aas
dec
js
je
sub
arpl
and
inc
jnp
fmull
ret
sbb
push
mov
adc
imul
inc
cmpsl
jne
pop
sbb
mov
fmull
jle
or
sub
sub
add
add
and
push
mov
stos
mov
cld
test
jno
rcrl
pop
push
adc
pop
test
add
and
xchg
pop
pop
arpl
outsl
shlb
jge
ret
adc
push
jmp
cmc
mov
out
popf
add
push
das
test
push
sti
nop
pop
fistps
idivl
mov
mov
xchg
in
icebp
testl
scas
gs
mov
js
sbb
leave
and
add
xor
mov
mov
pusha
movsb
adc
leave
clc
pop
jne
imul
jp
xor
lock
outsb
lods
fimuls
mov
cmp
and
in
ffree
push
ss
or
inc
scas
or
dec
shlb
dec
outsb
int
mov
out
out
cwtl
add
call
popf
fdivr
cltd
jg
call
out
cmp
xchg
push
mov
adc
bound
rcrl
mov
shrb
or
subb
or
sbb
out
xor
das
test
call
stos
dec
jb
inc
outsb
xchg
test
dec
out
mov
pop
cmp
mov
cmpsb
mov
addr16
rcrb
test
ja
aad
mov
sbb
or
outsl
add
xchg
pop
adc
je
out
icebp
mov
insb
xchg
sub
jns
shrl
xchg
lea
mov
imul
jae
es
dec
mov
sbb
mov
lods
and
cmpsb
xor
arpl
jge
mov
cmp
fistps
int3
and
jl
pop
or
mov
and
or
sub
or
fisttpl
xorl
dec
lock
sar
fdivs
ss
outsw
lds
ficoms
add
stos
movsl
xchg
inc
fsubs
lea
ss
cld
adc
xchg
xor
mov
and
and
sbb
fwait
mov
cld
sbb
call
insb
sti
sar
adc
movsl
and
xor
stos
mov
mov
fs
mov
xor
scas
adcl
push
jno
repz
add
in
incl
xchg
xor
pop
ror
imul
adc
jae
test
sbbb
enter
xlat
js
dec
xchg
subl
es
jmp
into
movsl
xchg
mov
aam
inc
xchg
inc
sub
popa
ds
lret
cmp
mov
sub
adcl
lahf
fs
inc
jmp
pop
mov
adc
mov
jp
aam
clc
imul
cmp
aad
push
xlat
mov
imul
fcoml
cmc
jmp
cmpsb
sbb
lret
dec
mov
dec
mov
add
imul
arpl
or
mov
mov
iret
adcl
mov
jae
or
pusha
cmp
imul
pop
movsl
movsb
mov
or
mov
loopne
dec
xor
pop
pop
scas
scas
movsl
mov
popf
mov
push
ret
adc
pop
inc
xchg
lcall
inc
mov
mov
dec
jmp
scas
cmpsl
and
xor
in
ret
popf
push
mov
pop
pop
jae
xor
je
push
adc
or
pop
cwtl
push
jno
sbb
leave
jmp
xchg
fbstp
cld
call
mov
add
pop
test
adc
mov
aaa
mov
mov
mov
mov
dec
out
push
sahf
rol
and
idivb
sub
xlat
push
sbb
adc
jo
push
sbb
or
inc
jae
andb
and
divb
pusha
dec
enter
movsb
dec
outsb
inc
jmp
pop
push
sbb
out
dec
xor
sub
sub
outsl
xchg
dec
les
fistps
lock
xor
xchg
xor
imul
fdivrs
push
outsb
mov
dec
jecxz
les
cmp
inc
outsl
mov
loopne
mov
lahf
dec
scas
push
xchg
outsb
repz
aas
call
mov
jecxz
lret
sbb
fisttpl
or
and
loopne
xchg
in
or
adc
cmc
cmp
stc
fsts
out
cmpsl
movsl
push
dec
fnsave
arpl
mov
pop
test
inc
mov
popa
xchg
shrb
movsb
and
mov
add
jnp
mov
jp
fs
iret
adc
shll
mov
and
xlat
mov
test
xor
cmp
repnz
mov
xor
hlt
fwait
lods
imul
cli
scas
cwtl
jae
sub
jno
dec
or
add
jnp
das
push
dec
mov
xor
outsl
jp
cmpsb
pop
addr16
sbb
fsub
add
push
cmc
mov
insl
scas
push
add
sbb
out
jg
rorb
scas
mov
mov
jecxz
mov
iret
push
psubusw
rol
lods
divb
pop
mov
inc
push
js
mov
pop
into
xchg
inc
or
inc
stos
aaa
xlat
sub
mov
add
sbb
or
int3
mov
stos
fsubl
mov
add
subb
sub
mov
and
sar
adc
mov
ja
add
xchg
add
bndcu
inc
lea
cmp
xchg
xor
popf
xlat
add
insb
icebp
pop
or
test
fisttpl
jecxz
movl
leave
sub
push
inc
es
dec
subl
in
pusha
push
or
ror
in
pop
add
rcl
arpl
int3
adc
test
jecxz
xchg
pop
adc
cmc
pop
pop
push
inc
out
lret
stos
cs
push
es
lock
xor
mov
cwtl
push
jl
fsubrs
sbb
or
pushf
mov
rol
xchg
fisubs
adc
or
in
popf
jp
pop
cld
inc
pusha
mov
jle
hlt
adc
sub
push
js
out
imul
xchg
aad
and
jns
mov
mov
adc
nop
mov
mov
xor
xchg
xlat
inc
sub
andb
xlat
push
pop
dec
ret
xchg
jae
or
inc
adc
xor
loop
pop
and
add
cs
mov
fwait
xchg
gs
pop
notb
jle
pop
sbb
adc
pop
sahf
aaa
sub
rclb
push
mov
popa
mov
lock
ret
jecxz
int
divl
fbld
sbb
mov
mov
cltd
repnz
xor
jle
rclb
mov
jl
dec
xchg
cli
cmp
daa
daa
cld
cmp
subb
or
pop
fwait
cmp
fdivs
xchg
pop
js
mull
fldl
adc
in
into
dec
mov
xor
xchg
sub
mov
lods
inc
pop
sbb
xchg
cmpsl
fstps
clc
xchg
and
mov
cltd
dec
lret
movsb
push
bound
pop
loope
xchg
stos
push
inc
stos
adc
jae
xorb
mov
push
sbb
xlat
sbb
add
orb
addb
jge
shl
sbb
mov
mov
clc
mov
lahf
loopne
xor
add
sbb
inc
test
push
sub
and
pop
dec
mov
add
sub
push
popf
xor
sub
dec
pop
jne
sbb
jb
push
clc
inc
jl
popf
mov
outsb
bound
repz
in
xchg
cmpsb
and
xor
or
aam
mov
outsb
in
ret
ljmp
mov
adc
xlat
call
mov
mov
pop
lcall
add
outsb
adc
sar
sub
dec
xchg
repz
stc
mov
xor
jne
imul
mov
ficoml
lahf
jne
fstps
aam
sbb
pop
outsb
movl
xor
aaa
cmpsl
imulb
push
imul
xor
repz
daa
lds
xchg
and
mov
imul
insb
fadds
mov
xor
in
mov
sbb
ss
scas
mov
jae
push
rorb
mov
pop
mov
ljmp
test
lret
cwtl
stos
movl
movsl
daa
jg
mov
es
out
out
jo
sahf
push
inc
mov
jnp
fnstsw
dec
dec
inc
js
jg
mov
pop
adc
test
inc
ljmp
xchg
lcall
mov
sbb
cmp
mov
cmpsb
pop
jns
pop
pusha
nop
ss
sub
push
adc
jbe
pop
mov
mov
mov
rolb
out
sti
jge
jne
int3
stos
push
shrb
push
jle
dec
mov
loop
mov
mov
xor
push
movsl
xor
inc
fsts
and
std
sbb
ss
inc
lds
pop
ja
xor
ret
dec
iret
aas
loopnew
push
mov
popa
cmp
shl
cmpsb
ds
sbb
in
pop
dec
inc
mov
cmpsl
insb
jp
push
cwtl
lods
dec
out
xchg
insb
std
mov
sub
pushl
int3
cmp
push
data16
fistps
jmp
stos
push
mov
or
push
mov
inc
outsl
pop
cmpsl
adc
aad
adc
inc
pop
mov
cmp
jecxz
sub
cmp
ss
cmc
fimull
insl
cwtl
lahf
clc
ffree
ret
test
fsts
push
sub
movb
inc
adc
xor
pop
push
je
fsts
cmp
mov
jmp
xor
fmul
pushf
cmc
pop
cmp
daa
mov
aaa
mov
aas
or
inc
mov
lret
pop
fcmovnu
fldl
pop
cld
push
cmpsb
stos
subb
cmp
mov
cld
fldcw
clc
mov
cmp
add
push
lret
loope
cmc
aam
cmp
xchg
or
dec
mov
push
aam
cmp
push
jns
push
fstpl
clc
mov
mov
pop
shll
stc
ret
mov
repz
iret
sub
les
pop
or
xchg
and
insb
xchg
dec
dec
insl
inc
movsl
or
inc
inc
xchg
xlat
push
pop
or
inc
outsl
stos
adc
cmpsl
fsubrl
push
int3
and
xchg
xchg
mulb
xor
rol
sub
test
jbe
inc
clc
out
adc
jno
std
sbb
sub
pusha
sti
ror
sarl
popf
cs
ja
dec
out
ret
dec
sub
fistpl
fsub
pushf
std
xchg
and
lret
pop
es
leave
or
scas
jmp
xorb
rclb
fildl
in
cld
pushf
push
movsl
repnz
and
scas
dec
add
pop
mov
jae
pop
jno
push
data16
cmp
or
ret
mov
in
add
adc
sarb
push
pop
and
xor
jl
leave
outsl
hlt
cmpsl
fnstcw
lds
add
mov
cltd
test
and
mov
sbb
jmp
push
ja
push
cli
pop
pop
pop
ja
movsl
xchg
sbbl
cmp
bound
mov
pop
roll
jnp
lods
add
repnz
rcrb
stos
sti
in
pop
pop
mov
push
and
or
out
push
imul
sbb
bound
cmp
cmp
add
leave
jnp
mov
mov
pop
popf
scas
mov
mov
or
fisubl
push
fdivr
popf
fsubp
fdivrl
add
andb
xchg
enter
jecxz
and
adc
mov
inc
pop
cmp
and
jl
pop
push
lret
mov
in
xchg
fdivrs
test
daa
dec
iret
sbb
sbb
sbb
les
and
sbb
cmp
pushf
sbb
mov
mov
adc
sub
push
outsl
ds
inc
addb
call
sub
lods
int
xchg
das
jbe
ljmp
cwtl
mov
mov
ja
push
mov
ja
sbb
insb
jb
dec
imul
push
ja
or
adc
aam
xor
sbb
or
jmp
clc
js
add
push
xor
jo
ret
in
pusha
fs
mov
shlb
xor
lods
inc
adc
mov
fnstsw
pop
pop
fisubl
test
enter
and
cmpsl
dec
push
lds
insb
scas
push
cmp
loop
sbb
int3
push
jbe
jb
das
jecxz
push
daa
fsubr
idivl
dec
push
or
outsb
call
cmp
lods
push
xchg
jnp
dec
dec
addb
or
inc
cmpsl
idivb
andl
outsb
rorb
mov
jo
jne
out
ret
xor
lds
fwait
xor
cmpsb
xchg
fs
aam
cmc
cwtl
and
cwtl
cmpsb
inc
push
sbb
outsl
fmull
popa
pusha
or
pop
int
ret
sbb
mov
pushf
dec
pop
filds
inc
xchg
lret
jns
xor
adc
test
js
pusha
jo
stc
sbb
xlat
and
les
add
and
test
ja
xorl
mov
fisubl
inc
iret
jecxz
cmpsb
dec
or
fadds
repnz
or
or
popf
mov
mov
rcr
scas
sbbb
sbb
dec
xor
int3
repnz
out
xchg
xchg
push
push
repnz
dec
aaa
xchg
cmp
jnp
xlat
xor
int3
sbb
xchg
dec
sub
push
sti
jns
pop
mov
xchg
ret
cld
xor
aas
stos
movsb
loopne
mov
lret
sbb
xor
rcll
cmp
stos
nop
or
stos
push
clc
movsl
mov
fmul
xor
popa
cmp
lcall
pop
mov
cmp
or
ds
xchg
or
jne
adc
jge
xchg
and
in
aad
pop
int3
lea
cmp
aad
movsb
push
adc
mov
mov
rclb
sub
dec
cmpb
inc
inc
push
or
fsubrs
iret
adc
mov
sub
jbe
jecxz
fsubs
mov
incb
sbb
shrb
sysenter
dec
mov
loop
jb
jmp
push
fcompl
jnp
inc
and
outsl
jle
das
sbbb
mov
mov
xorl
mov
pop
hlt
or
or
loopne
icebp
adc
mov
ror
stos
lea
push
add
in
testl
xor
pop
jmp
dec
xchg
pop
or
sbb
lret
push
std
outsl
push
push
jge
test
std
mov
lea
movsb
add
in
stc
or
mov
inc
or
out
in
stos
dec
inc
mov
mov
arpl
stos
pop
fsubr
inc
aas
push
clc
xor
in
notl
in
push
roll
inc
aad
icebp
daa
dec
xor
in
int
mov
lods
sub
shlb
hlt
cmpsb
xor
cmp
bound
rorb
mov
call
jb
mov
mov
xchg
add
in
ret
jb
out
or
dec
dec
arpl
adc
mov
or
push
popf
lahf
in
cmp
dec
add
push
jnp
mov
inc
or
int3
fcomps
push
dec
imul
sti
rclb
lret
jne
dec
test
cmp
mov
divb
lock
pop
notl
cli
lahf
mov
lcall
jle
jb
clc
lahf
mov
mov
fstpt
xlat
or
adc
lret
mov
jno
ror
popl
jb
dec
frndint
orl
dec
inc
rorb
cmp
mov
adc
lret
fbstp
push
xor
es
dec
and
mov
cld
aam
mov
xchg
insl
in
out
dec
imull
push
cmpsb
loopne
sbb
lret
ret
aaa
das
jg
mov
xchg
jno
sahf
icebp
add
jbe
cmp
push
imul
out
xor
popf
pusha
xor
inc
dec
sub
outsl
and
mov
adc
fucomp
fwait
in
scas
hlt
pop
jle
mov
cld
inc
cmp
pushf
repnz
repnz
pop
or
loop
adc
and
fstps
cmp
dec
test
lahf
sahf
les
sbb
jb
popf
dec
aaa
sahf
mov
std
dec
int
mov
test
arpl
and
mov
cmp
out
mov
loope
popa
cmp
xor
pop
daa
mov
imul
xor
shrl
sub
sti
cmp
sub
sbb
jbe
fidivrs
out
push
pop
fsubrl
adc
pop
aas
xchg
bound
cli
sub
dec
popf
cltd
dec
xchg
pop
test
mov
xchg
in
xor
xchg
jae
ja
cli
mov
ja
jl
fdivs
jo
mov
data16
nop
int
movsl
cmpsl
fcomi
push
push
fistpll
push
or
sub
jne
and
inc
add
rcrl
inc
sub
jecxz
push
fs
jns
add
call
push
sahf
aaa
xchg
mov
push
or
test
adc
sub
testb
xor
xchg
fsubs
shr
mov
js
pop
or
in
inc
in
imul
xchg
ja
xchg
jp
mov
stos
into
movsb
adc
ret
dec
movb
jb
and
hlt
repnz
lods
cmp
pop
sub
cwtl
iret
addr16
mov
orb
inc
in
ret
push
pop
aas
or
mov
and
xchg
lret
cmpsl
gs
cli
notl
pusha
out
nop
loopne
inc
gs
lods
lret
jge
sbb
insb
inc
xor
push
addr16
mov
mov
pop
divl
jb
jg
mov
adc
or
cmp
inc
out
push
push
mov
sarb
and
add
cld
pop
inc
cwtl
test
cld
push
movsl
lods
adc
dec
fdivl
repnz
mov
mov
sbbl
adc
push
outsl
mov
mov
or
xchg
inc
stos
imul
add
cs
cli
cld
call
push
xchg
jb
mov
out
jge
dec
ja
mov
pop
push
ljmp
push
dec
inc
xchg
add
pop
adc
push
inc
aad
xor
ljmp
inc
leave
decl
mov
mov
sbb
lcall
fdivl
xchg
popfw
fs
jnp
jne
xchg
lods
push
lret
adc
jmp
dec
pop
ja
scas
jmp
ret
loope
pop
outsl
xchg
arpl
iret
faddl
or
arpl
lds
jb
lcall
inc
jno
adc
pushf
cwtl
lods
call
adc
cld
divl
lret
jge
out
inc
add
mov
pop
push
jb
fbld
lret
sahf
mov
adcl
mov
test
inc
push
adc
aas
aaa
push
adc
xor
sub
jge
pop
push
push
mov
jns
xor
arpl
out
xchg
into
test
lods
push
push
popf
push
push
pop
and
jns
push
sahf
xor
mov
pop
sarb
popa
mov
mov
adc
in
cwtl
add
dec
rclb
mov
ret
outsl
or
insl
cltd
mov
shrb
cmp
jnp
repnz
pop
adc
test
push
xchg
push
pop
sub
xchg
das
ds
cld
sub
push
push
inc
out
cmp
pusha
inc
xor
adc
out
out
mov
mov
dec
jmp
inc
lds
gs
jl
jmp
mov
mov
push
scas
add
out
mov
mov
add
push
shrb
outsl
ret
or
testl
out
aam
cld
adc
xor
mov
push
lods
fdivs
and
add
fwait
mov
orb
mov
push
sub
pushf
or
in
sbb
divl
xchg
and
pop
enter
adcb
pop
insl
fiadds
movsb
addl
jl
or
shlb
int3
sarb
cltd
xor
dec
xor
add
adc
lcall
mov
movsl
and
cmp
dec
repz
mov
cmp
add
fisubs
or
dec
jae
aam
inc
mov
cmp
shrb
arpl
insb
dec
fisubrl
in
cmp
jmp
pop
jecxz
push
inc
lock
outsl
or
sbb
push
jno
mov
out
outsb
mov
jae
jmp
adcb
clc
in
cmpsb
cmp
movsb
out
jg
insl
and
js
or
xor
push
or
leave
andb
cwtl
lret
add
or
push
popa
bound
addr16
test
cmp
pop
movsb
cmp
jbe
insb
adc
ja
and
cmp
ret
mov
xlat
mov
fucom
inc
dec
sub
xchg
jb
add
repz
push
cmc
cmc
push
or
inc
adc
lea
xchg
ret
aam
and
xor
add
mov
andl
push
add
shll
inc
sbb
jbe
mov
mov
mov
daa
loope
mov
cmp
push
mov
div
or
xchg
or
jge
mov
inc
pop
dec
xor
nop
xor
mov
dec
xlat
jmp
xchg
push
and
fwait
mov
push
bound
lock
jg
shlb
or
std
outsl
cs
jns
sub
xchg
cmp
pop
xchg
push
jno
push
sbb
xchg
or
jle
dec
fsubl
iret
cmp
mov
add
pop
pop
in
add
cs
lds
add
leave
and
shl
cmp
pop
fisubl
push
push
sub
or
jmp
arpl
outsl
add
cli
and
sub
and
sahf
dec
jmp
subl
adc
mov
cmc
push
fldt
mov
mov
cmpsb
sti
shrb
lods
imul
dec
repnz
and
cld
add
add
lea
mov
test
cmpsl
movsl
roll
inc
adc
adc
xchg
xor
sbb
lds
pusha
pop
outsl
movsl
loope
mov
outsb
nop
aas
pusha
sar
lret
lods
lea
divb
aam
icebp
call
mov
push
call
inc
mov
pop
pop
aam
insb
xchg
adc
nop
loopne
dec
mov
test
es
mov
decb
cmpsl
jb
enter
lds
dec
push
or
xchg
push
sub
icebp
stos
sbb
cmpsb
jo
and
fdivrl
jg
dec
fidivl
lahf
add
jle
jecxz
std
mov
add
pop
cld
and
inc
adc
gs
push
pop
cltd
dec
test
loopne
out
inc
ret
xchg
popf
or
xor
in
clc
andb
fsubrs
rcrb
and
call
jnp
popa
sbbl
add
out
push
inc
loopne
out
cmpl
jmp
pop
inc
mov
rcll
mov
nop
mov
ret
imul
sub
movb
inc
lret
stc
cmpsl
cltd
jbe
cmpsb
lea
sbb
push
ja
pop
and
xchg
dec
jmp
jno
inc
cmp
adc
aad
cmp
ljmp
mov
jne
out
cmc
push
mov
push
outsb
xor
inc
mov
aad
push
mov
cmp
mov
and
or
pop
and
mov
inc
mov
xlat
and
cli
push
jbe
adc
aas
inc
mov
aad
stc
rolb
adc
mov
xchg
cltd
xchg
push
dec
sbb
jno
jnp
data16
in
dec
call
push
mov
std
loop
pop
xchg
mov
cwtl
pop
sbb
dec
lahf
cmpsb
ss
movsl
pop
push
mov
cmp
jae
mov
lret
cmp
mov
insb
aam
add
mov
mov
stos
into
sbb
mov
mov
adc
push
outsl
mov
pop
jecxz
call
sbb
mov
inc
xor
stos
jae,pn
cmp
mov
rcrl
jae
xchg
xchg
aaa
xchg
jmp
test
push
sbbb
repnz
sub
xchg
cwtl
inc
ret
imul
push
out
les
or
dec
lds
imul
enter
pop
xor
or
push
sbb
fdivrs
xor
in
cli
aas
rorb
push
jne
jmp
adc
insl
cmc
je
mov
dec
stc
push
lahf
dec
icebp
in
addr16
cmp
pop
js
icebp
inc
in
fcomi
es
movsl
hlt
call
pop
fwait
xor
xchg
ss
pusha
in
xor
imul
daa
push
xchg
xor
ret
jne
loopnew
inc
fs
dec
cmp
lock
jl
js
outsl
jp
aad
fcompl
pop
popl
pop
insb
adcl
lcall
push
addr16
pop
fldl
ja
insl
and
push
out
sbb
pop
cmc
dec
and
rol
imul
push
sarl
cmpsb
fistl
out
inc
adc
out
sbb
sbb
jno
sub
mov
pop
stos
or
std
inc
mov
roll
cmp
mov
and
push
jmp
bound
dec
test
call
jne
push
jecxz
pusha
loopne
imul
mov
mov
test
jg
into
sti
movb
enter
mov
jecxz
lods
rcll
stos
cmpsl
and
mov
pusha
ljmp
pop
pop
stos
push
clc
lahf
into
sub
adc
jmp
rol
aaa
addb
loop
lock
mov
in
cmp
out
cltd
and
loopne
ss
pop
dec
xchg
mov
jo
shlb
rcrb
jne
xchg
bound
shr
iret
imul
in
sub
xlat
int
ja
push
stos
mov
movb
lock
xor
jmp
xor
in
jp
subl
movsl
inc
dec
in
mov
lahf
jae
xor
fsubrp
stos
lods
ljmp
mov
out
sbb
movsb
imul
iret
divb
mov
testl
add
out
pop
cld
std
jg
xchg
mov
sbbl
sbb
sub
sub
cmp
shll
pusha
rcr
shlb
mov
loope
xchg
or
loop
leave
jge
orl
out
jl
insl
jnp
adc
test
xor
add
cmpsl
insb
psrad
jge
testl
xchg
bound
faddl
shlb
test
lahf
xchg
or
clc
cmp
jne
rorb
jmp
jb
cmp
mov
dec
sbb
mov
xor
jecxz
mov
out
cs
fisttps
test
loop
mov
pop
mov
jbe
loop
leave
vpmacssdd
iret
mov
loop
fildll
xchg
sbb
lds
push
aas
xchg
jo
and
push
ds
daa
jnp
push
scas
movsb
fmuls
pop
fnstsw
mov
ljmp
insb
fwait
lahf
les
fidivrl
and
jb
jg
pop
xor
cmpsl
dec
add
sbb
call
scas
add
in
adc
pop
mov
jecxz
pop
jle
daa
or
mov
inc
ret
jmp
cmpsl
sub
insl
sub
inc
insb
sti
push
in
jmp
les
bound
fucomip
dec
les
call
jnp
mov
fs
or
movsl
fisttpl
and
or
dec
add
mov
out
sbb
iret
aad
rcrb
and
hlt
outsl
je
jp
fbld
stos
test
or
sbb
popf
dec
xchg
jne
pop
loop
repnz
ja
icebp
or
cmpsb
leave
data16
shll
fsubrl
mov
add
es
adc
fstl
cmp
sub
arpl
ljmp
xchg
jo
xlat
inc
push
ljmp
out
jmp
ret
xchg
loop
mov
aad
jmp
mov
fsubp
notb
xchg
rcrl
out
mov
bnd
xchg
cmpsb
adc
and
jno
inc
inc
push
inc
xchg
call
mov
adc
mov
rcrl
pop
cli
lret
adc
cmpsl
mov
imulb
inc
xchg
out
andb
cwtl
lahf
enter
std
push
sbb
out
mov
or
in
pop
insl
cltd
push
cld
mov
inc
push
jg
inc
pop
sub
or
mov
lcall
sub
cwtl
and
adcl
cmpsb
scas
sbb
ret
arpl
dec
divb
inc
pop
call
mull
dec
test
out
jmp
inc
adc
lcall
scas
mov
lods
rcl
les
das
lock
fnstcw
testl
test
xchg
data16
inc
int
in
sti
movsb
stos
outsl
mov
adc
jnp
popa
ret
or
test
xchg
or
cltd
movsl
jne
iret
mov
xlat
or
cmp
and
sbb
cmp
outsl
sub
or
scas
mov
cmpb
stos
aam
push
inc
dec
inc
xor
or
sbb
sbb
or
dec
fisubrs
data16
mov
fsubr
in
inc
dec
jg
imul
mull
andb
mov
stos
mov
aad
and
fdivl
xchg
cli
and
dec
shlb
push
xchg
and
inc
or
push
mov
jo
sahf
and
adc
ret
repz
xchg
jle
xchg
pusha
dec
icebp
stos
pop
mov
test
icebp
xchg
filds
cli
rolb
inc
jmp
nop
aam
jnp
jmp
nop
fiadds
adc
call
mov
sub
xor
cmp
adc
dec
sar
xor
add
cmpsb
lcall
fisttpll
out
inc
mov
inc
sbb
or
flds
lret
movsb
dec
fs
xor
addr16
rclb
pop
pop
adc
jo
cwtl
cmp
pushf
or
or
aas
xor
dec
xchg
sahf
or
jno
sti
sbb
rolb
jae
ja
push
cmp
in
sub
mov
jne
ret
cmp
push
add
roll
mov
pop
xchg
pop
and
test
xor
dec
scas
or
sbb
shll
xor
not
pusha
mov
cmp
imul
pop
mov
outsl
lods
das
es
fstpt
arpl
stc
outsl
push
aas
mov
insl
jge
adc
test
mov
sti
mov
jne
in
popa
mov
loope
test
mov
fildll
aaa
cmp
sub
loopne
stc
leave
pop
sbb
mov
lds
adc
or
ja
ds
adcl
test
pop
imul
pop
out
sub
mov
in
jae
das
jne
add
push
out
mov
repz
pop
add
inc
int3
jecxz
dec
mov
inc
adcb
add
pusha
int
jae
jae
mov
mov
mov
xor
dec
jo
mov
popl
ja
pop
add
mov
xchg
xor
rorl
in
xchg
bound
and
dec
pusha
mov
outsl
daa
push
dec
cld
iret
mov
mov
scas
jae
in
ret
mov
jne
adc
movsb
mov
out
rcrl
xor
aas
sub
jp
ror
cmp
xchg
add
je
fiadds
dec
sbb
sub
jb
fmuls
cmp
imul
add
mov
push
lock
les
mov
mov
into
mov
mov
mov
sahf
jmp
push
xor
add
mov
loope
xchg
bound
mov
jne
mov
stc
push
mov
testl
hlt
gs
inc
cmp
test
pushf
ret
scas
dec
mov
leave
imul
dec
xchg
mov
fstpl
sarl
inc
dec
repnz
lods
or
xorl
divb
mov
lds
jnp
and
mov
adc
mov
mov
scas
and
pop
sbb
out
and
or
push
loopne
dec
add
jno
dec
nop
aas
or
scas
lods
cmp
or
or
add
cmp
xor
pop
jno
outsl
or
icebp
bound
and
inc
push
ljmp
sgdtl
in
adc
cmp
int
push
rcrl
pop
in
lcall
and
je
or
jge
scas
or
or
ja
push
scas
inc
leave
or
mov
inc
mov
and
push
mov
mov
mov
shrb
aas
xchg
pop
inc
loop
mov
shlb
mov
and
movsb
inc
call
push
mov
dec
fiaddl
sbb
fs
pop
xor
add
pop
jmp
aad
and
je
scas
rol
or
xchg
cmpsb
inc
ds
loope
leave
push
test
lods
ret
sbb
cltd
mov
aam
inc
jle
mov
gs
jb
cwtl
add
inc
jecxz
push
push
jecxz
scas
adc
jne
dec
pop
adc
pusha
repnz
and
inc
enter
ja
stos
sub
cmp
sub
cmp
daa
out
pusha
push
in
stc
push
call
lahf
subb
jno
inc
test
jecxz
fcomi
lcall
mov
mov
movsb
sub
pushf
dec
xchg
push
out
fistpl
out
movsl
adc
icebp
hlt
cmp
jbe
sbb
clc
and
ds
pop
js
nop
mov
push
or
das
ja
pop
jno
test
cmp
ret
mov
fimull
fwait
pop
mov
or
in
mov
dec
in
orl
lods
or
aam
xchg
mov
xchg
call
out
test
lcall
cmc
loop
sti
sbb
inc
cwtl
and
inc
mov
mov
mov
mov
gs
push
mov
fimuls
fbstp
lret
scas
jecxz
xchg
push
ss
in
shr
dec
inc
push
pop
lret
subl
shll
xlat
xchg
icebp
sbb
mov
adc
adc
fs
mov
mov
pop
stos
sbb
mov
shlb
ret
pop
lret
xchg
jge
lods
cmpsl
jmp
scas
adc
sub
or
mov
inc
ljmp
and
jmp
xor
jge
pop
or
xchg
cld
mov
sbb
jb
repz
mov
cmpsl
sub
and
iret
push
mov
loopne
dec
std
xlat
cmpsb
ds
std
ficoms
jno
add
and
addr16
ret
mov
shll
rcll
sbb
and
inc
das
lods
inc
jmp
fistpl
packsswb
dec
pop
sbb
sub
sbb
mov
ss
xor
inc
add
mov
push
cs
lods
add
stos
into
clc
cmp
pushf
adc
leave
stos
jnp
add
icebp
mov
inc
push
popl
in
loop
mov
push
les
gs
pop
syscall
aas
mov
cmp
fucomi
hlt
out
ror
or
and
ret
push
adc
xchg
jns
pop
out
sbbb
push
mov
mov
push
sub
movsl
ret
add
andl
inc
movsl
fisubrl
cmc
popa
jp
imul
int3
ret
ds
jb
in
stos
out
sub
dec
je
nopl
jns
stos
test
pop
jne
jbe
mov
shrb
pop
mov
lahf
mov
or
and
pop
dec
mov
xor
and
decb
xchg
xor
mov
fstpl
and
sti
fistpl
shl
loopne
xchg
shlb
insl
pop
adc
sbb
subb
adc
cmp
dec
scas
sub
jns
dec
or
push
out
pushl
lock
aas
test
sahf
aad
xor
sti
ds
or
dec
mov
rolb
aas
xor
xor
aaa
or
inc
adc
test
push
cmp
pop
fdivrs
sbb
push
repz
insb
pop
dec
dec
por
xchg
mov
ret
sahf
lahf
fnstenv
push
ljmp
lret
cmp
mov
test
pushf
sbb
stos
jb
dec
int3
dec
pop
xor
dec
jl
adc
xchg
xchg
mov
sahf
mov
add
mov
jge
jg
loope
cmc
je
jo
jbe
mov
rolb
push
jmp
sbb
xchg
cmpl
mov
gs
mov
pop
or
mov
shrl
shl
mov
mov
cmp
push
popa
add
stos
cmp
pushf
je
movsb
dec
jmp
cmp
mov
xor
dec
xchg
mov
push
xor
xor
push
movsl
test
outsl
cmp
mov
push
sbb
stos
icebp
mov
rcll
fdivl
mov
sbb
dec
pop
xchg
test
add
fwait
and
push
mov
push
daa
orb
mov
xchg
cmpsb
mov
cmpsl
icebp
or
incb
push
arpl
and
cs
cmc
pop
push
clc
mov
add
mov
movsl
ds
sbb
pop
sbb
mov
rcrl
mov
xchg
xor
sbb
jp
ja
mov
push
and
mov
ljmp
jns
test
dec
test
pop
or
cmpsl
xor
jmp
lret
jmp
xor
loopne
test
fstpl
pop
mov
and
lds
lcall
cld
movsb
cmpsb
sub
mov
test
pop
fildl
jae
lcall
jne
leave
int3
mov
mov
and
xchg
jno
push
jae
cmpsl
fsubl
and
in
and
lods
push
mov
push
jb
sbb
dec
adc
dec
sbb
in
shrb
cmp
test
and
add
fs
cmp
sbb
xchg
cmp
cmpsb
sbb
mov
dec
dec
and
paddq
arpl
dec
loopne
stos
add
out
xor
je
xor
mov
je
sbb
inc
cmp
dec
rcll
incl
pop
outsl
xchg
int3
jg
sbb
mov
push
mov
push
xor
inc
jp
ss
ja
sbb
orb
dec
mov
add
psubq
cmpsl
gs
jae
xchg
xchg
imul
in
decl
fwait
adc
arpl
out
xchg
adc
or
dec
es
jnp
sbb
sbb
lcall
sbb
out
cmp
cwtl
div
and
int
cmp
insb
xrelease
and
shrb
in
sbb
pop
out
mov
mov
fcoml
push
sub
nop
popa
test
pop
xlat
cmpsl
and
cmp
dec
xchg
aam
jae
out
js
scas
push
sahf
mov
jmp
push
cmp
push
add
rol
and
cmp
cwtl
add
jne
add
out
dec
mov
dec
cmp
enter
jo
lahf
into
or
enter
jne
mov
rep
lret
sahf
push
sarb
xchg
xchg
in
add
imul
out
sub
jno
les
mov
fsts
xor
lahf
loopne
in
mov
dec
jecxz
jae
or
xchg
aas
stc
pop
mov
jp
push
and
in
sbb
cmp
imul
mov
mov
jb
shlb
xchg
pop
jnp
repz
out
subl
stos
popf
in
dec
cmp
or
inc
pop
negl
jecxz
fs
int
sbb
lods
sub
daa
fbld
imul
push
xchg
out
je
test
mov
adc
xchg
mov
xlat
adc
test
mov
clc
push
out
stos
lds
mov
xchg
lcall
into
cwtl
adc
pop
pop
les
pop
ljmp
ret
and
mov
fistpl
lret
push
xor
lock
cld
sbb
roll
jns
adc
scas
addr16
stos
cmp
add
shll
push
mov
mov
sti
ljmp
xor
loopne
jns
jmp
jle
sub
inc
dec
mov
insb
test
test
mov
add
sbb
or
xchg
add
pop
dec
and
es
mov
sbb
outsb
neg
add
inc
add
mov
sub
mov
cs
stos
mov
add
loop
mov
or
inc
stos
adc
xor
mov
insl
jo
add
or
cmp
push
in
in
in
push
push
stos
popa
push
add
pop
fstpt
testb
sbb
xor
cmc
adc
cli
push
jo
fmuls
mov
filds
mov
sbbl
popf
dec
repnz
inc
sbb
inc
es
test
mov
dec
sub
adc
fcoml
enter
mov
jno
cmc
push
xor
lock
push
push
pusha
sub
ret
adc
cld
dec
jle
inc
mov
test
jge
fdivrs
add
popf
inc
mov
or
mov
enter
pop
dec
popa
ds
mov
inc
sahf
in
xchg
insl
xor
adc
leave
js
daa
xchg
scas
mov
jle
lahf
mov
inc
jge
dec
popf
mov
test
test
andb
pop
call
lds
adc
jae
sub
inc
outsb
out
enter
cmpsl
and
xchg
xor
ja
stos
dec
loope
cld
jne
or
iret
lods
push
aam
sbb
cld
mov
xor
test
popf
cmp
jg
pop
in
js
fmulp
enter
iret
aaa
lahf
imul
imulb
in
adc
ja
jbe
sub
dec
pop
int3
pushf
or
sahf
sub
sbb
scas
mov
mov
lret
fistpl
stc
lret
cmpsl
insl
pop
push
arpl
sub
push
mov
out
push
xchg
jns
mov
pop
add
or
xchg
stc
pop
lret
xchg
xchg
xor
sbb
and
and
add
mov
and
jno
fisttpll
xlat
mov
or
cs
pop
cli
jge
aad
mov
mov
mov
mov
popa
mov
nop
cld
pop
imul
jae
stos
lds
or
stos
push
ret
push
or
std
jmp
xor
cmpsb
fidivl
or
jp
out
lret
xchg
mov
cmp
xchg
out
mov
push
nop
mov
mov
fidivl
xor
insb
xchg
cmc
and
xor
rolb
jmp
inc
cmpsb
push
fsubrs
in
scas
mov
test
sbb
popf
inc
in
cmp
jmp
shl
push
cmp
test
jle
push
outsl
out
adc
mov
sbb
cli
jo
in
ret
push
enter
and
cmpb
dec
cld
push
jo
pop
push
rcrl
jg
mov
add
sub
mov
jecxz
and
in
lds
out
in
push
sbb
xchg
inc
test
push
jmp
adc
popa
mul
cs
sub
mov
jae
push
cmpsb
cli
and
cmpb
je
hlt
mov
mov
xor
inc
leave
fldl
sarl
mov
or
ret
aas
cmp
aas
mov
adc
fnstsw
inc
lret
testl
cli
out
out
notl
jnp
repz
ljmp
pop
sbbl
adc
sbb
mov
imul
mov
outsl
lock
push
stos
fldln2
fwait
cmpsb
inc
scas
aaa
movsl
ds
out
push
inc
mov
adc
xor
sub
sub
sahf
out
jle
xorl
pandn
sti
jbe
test
push
push
sub
mov
mov
jno
jbe
add
jmp
add
sub
mov
fadds
pop
addr16
push
icebp
out
aas
lret
cmp
lods
mov
jnp
mov
mov
call
out
in
mov
xor
push
sub
imul
sub
cwtl
and
fdivrs
daa
push
mov
xor
je
fst
fcmovnb
mov
mov
xchg
sti
jo
sbb
pop
mov
in
test
enter
cmp
mov
pop
in
fmuls
mov
mov
xchg
cli
add
addr16
call
mov
jae
cltd
sbb
jmp
jg
jecxz
push
shll
shll
inc
sub
mov
sub
push
adc
cli
jmp
and
adc
and
into
bound
cmpsl
rolb
aam
sub
sbb
imul
or
inc
mov
test
lret
mov
data16
pushf
pushf
lret
ja
lcall
xchg
pop
sbb
pop
pop
mov
popf
and
lods
rol
rcrb
fsubp
mov
jne
push
loop
push
xor
xchg
into
arpl
aam
flds
pop
mov
push
jge
inc
cmpsl
mov
xlat
xor
xor
clc
gs
std
fwait
mov
xor
or
xchg
xor
roll
out
insl
loope
sar
clc
fnstenv
insl
mov
in
mov
push
adc
jp
cmp
popa
test
int3
fisttps
push
ret
iret
sub
mov
cmpsb
imul
cmp
movsl
xchg
aad
rcr
arpl
xchg
cmp
sbb
clc
add
outsb
dec
lahf
sbb
fidivrl
outsb
xor
cmp
adc
enter
xor
inc
scas
into
pop
and
movsb
jle
inc
repnz
sbb
popf
jmp
xchg
xchg
cli
clc
das
mov
loopne
ss
call
ss
cmpsb
rep
scas
lods
cmpsb
aaa
lea
xor
or
adc
add
cmp
cli
cwtl
dec
lret
loopne
cld
outsb
push
mov
push
out
out
sbb
xor
sub
cmp
push
mov
add
enter
mov
mov
fwait
push
and
pusha
sub
out
jg
jb
mov
and
mov
js
and
dec
ljmp
jecxz
adcb
lahf
int3
pop
or
sti
mov
iret
jb
loopne
cli
shr
jmp
loopne
mov
in
pop
inc
cmc
and
aam
add
jle
movl
outsl
mov
lret
jecxz
scas
insb
mov
mov
ja
hlt
jge
test
lcall
add
jecxz
mov
mov
sbb
sahf
dec
movsl
fs
or
jl
mov
cld
movsl
mov
xchg
lods
mov
xchg
ss
and
dec
outsb
in
push
adc
inc
adc
lret
sbb
iret
pop
bound
jne
and
shlb
arpl
lds
xor
data16
mov
bound
fmuls
loope
jp
cmc
mov
add
jne
sbbl
or
sbb
test
lods
inc
nop
fnstenv
cmp
fidivl
add
cmp
inc
imul
mov
lods
xor
adc
jb
or
fdivs
outsl
fs
dec
sbb
or
xchg
or
mull
pop
out
sbb
push
bswap
cwtl
aam
sbb
or
cmp
test
cmp
mov
adc
adcb
and
mov
jle
adc
mov
xor
out
clc
push
fs
mov
add
inc
loop
lcall
cwtl
loopne
sub
mov
xchg
incl
inc
popf
js
or
scas
arpl
lcall
loop
fldcw
inc
stc
in
addr16
pushf
sbb
scas
rclb
cld
cmp
pop
sbb
je
mov
filds
ret
jb
lcall
xorb
out
push
loop
out
das
inc
pop
mov
ret
fxch
flds
fsts
sbb
call
xor
cmpsl
scas
xchg
dec
jae
das
and
cmp
cmp
inc
fimuls
prefetch
or
int3
pop
dec
adc
lods
ljmp
pusha
jo
cmp
mov
mov
push
push
aas
jmp
jg
stos
inc
dec
cmpsb
enter
jle
xchg
mov
inc
js
mov
pop
dec
stos
jo
cmpsb
bound
pop
pop
repnz
outsb
cmpsl
clc
out
or
sahf
adcb
outsb
daa
lock
jns
cmpsl
or
push
jno
pushf
mov
mov
sub
cltd
sub
aam
bound
dec
push
pop
push
push
jnp
fucomp
imul
std
xchg
in
cmp
aad
fbstp
cmpsb
movsb
jecxz
mov
mov
mov
push
dec
or
lret
and
jmp
fbld
pop
out
mov
sti
ja
push
and
inc
hlt
popa
sub
or
loope
fldl
repnz
sub
push
lret
add
fmull
xchg
aaa
js
push
data16
mov
push
out
mov
mov
jp
cmp
sbb
push
cmp
xorb
mov
add
imul
sub
xchg
inc
ficompl
cmp
and
es
rclb
jle
and
inc
pop
pop
inc
cmpsb
pop
cli
or
icebp
popa
fistl
mov
test
add
aas
cmp
xchg
jb
bound
adc
adcl
xchg
xor
pop
subb
push
cmp
icebp
cmp
jg
pop
mov
xchg
sbb
sub
sar
mov
pop
in
pop
imul
gs
hlt
dec
pusha
movsl
mov
stos
dec
ljmp
lds
cmpb
adcb
sbb
sbb
lcall
jno
jmp
jecxz
loope
inc
push
aas
sub
adc
pop
mov
mov
mov
push
and
test
mov
or
mov
sbb
sub
pop
sbb
mov
mov
push
ja
fistps
mov
fxam
ja
aaa
sub
movsb
call
enter
sub
pop
es
mov
adcl
push
not
outsl
jle
int3
pop
lods
sub
sti
stc
sbb
cwtl
js
mov
push
cmpsb
cs
pop
mov
inc
xchg
lret
mov
wrmsr
iret
lahf
adc
mov
and
add
sbb
aas
jg
push
cmp
and
or
shlb
lret
xlat
decl
pop
jge
rclb
sbb
sti
jns
js
std
stos
rdpmc
repnz
push
jle
out
pop
fcompl
lods
fnstenv
insb
leave
out
inc
lahf
xor
out
xchg
aaa
xchg
pusha
mov
push
cli
add
dec
fnsave
cltd
insl
insl
mov
cwtl
and
sti
es
jmp
mov
add
pop
fsubl
xor
add
xor
rolb
push
int3
shlb
and
push
jg
rcrl
les
daa
inc
movsl
cli
into
push
lds
mov
mov
scas
sti
dec
add
insl
lcall
cmp
sub
mov
sbb
fistps
cmpsl
aas
lret
loop
dec
push
lods
movsb
jb
movsb
mov
inc
test
sahf
imul
push
inc
inc
xor
push
xchg
lcall
lahf
xchg
pop
pushf
fmul
popf
xor
addr16
mov
xor
and
ficoml
shrd
jb
lret
test
inc
xor
push
mov
push
sub
pop
pop
out
sbb
outsl
cli
pop
push
jns
push
push
leave
iret
idivb
sbb
pfsubr
push
cmpsl
insl
mov
sub
adc
sti
fwait
iret
mov
dec
inc
mov
cmp
push
jg
adcl
mov
ja
scas
pop
pop
repz
sahf
push
xchg
sub
hlt
jmp
push
in
add
sub
test
shl
lods
adc
push
std
out
cld
icebp
ds
sub
inc
push
sbb
xchg
fdivrl
push
or
loopne
sub
lret
and
add
xor
push
fsubl
test
lods
popa
ficoms
iret
mov
sbb
dec
mov
out
test
pop
pop
stos
hlt
mov
mov
sbb
into
pop
pop
and
adcl
add
hlt
jno
imul
fs
fstps
mov
jne
imul
shll
fs
lahf
pop
xchg
pusha
clc
filds
or
ljmp
sub
aam
adc
cmp
iret
push
adc
mov
sahf
push
cltd
pop
gs
sbb
paddb
fs
jnp
sbb
ds
notl
stos
add
push
push
ss
and
cmc
mov
into
pop
jp
push
cmpsl
inc
mov
jl
pop
ss
jb
push
loop
hlt
aad
lret
popf
hlt
jno
or
movsb
and
xchg
stc
in
cmc
push
jno
inc
cmp
pop
pushw
outsb
adcl
scas
push
lcall
xchg
dec
lods
lahf
inc
mov
je
xchg
dec
dec
adc
mov
test
test
insb
fwait
int
fs
xor
push
push
jmp
imul
inc
mov
push
ljmp
adc
xchg
xlat
xor
inc
and
push
in
loop
inc
ret
mov
popa
add
mov
jge
xor
cwtl
and
fnsave
or
mov
pusha
test
incb
xor
mov
scas
cmpsl
sub
retw
mov
repz
add
les
flds
in
xor
imul
ds
iret
and
pop
cli
mov
dec
clc
fstpl
adc
sahf
cmp
mov
movhps
mov
out
xchg
rcrb
adc
mov
outsl
jle
mov
and
js
in
adc
out
lods
add
dec
jp
clc
call
mov
popf
sub
add
shlb
lea
pop
dec
int3
sbb
daa
jg
pop
add
lea
sub
ds
in
mov
shlb
or
aaa
xor
dec
lret
movsb
pop
adc
jne
mov
push
jns
jmp
out
xor
arpl
call
mov
jp
lods
jecxz
mov
mov
xorb
push
adc
dec
add
roll
adc
cld
mov
push
inc
sub
xlat
xchg
repz
pop
in
dec
jmp
mov
mov
dec
sahf
mov
scas
push
cli
scas
jnp
insl
dec
cmp
sub
fisttps
pop
les
xchg
push
xchg
faddl
cld
xchg
je
daa
mov
in
push
sub
xor
push
rcrb
mov
jl
aam
mov
dec
lahf
cmpsb
fistps
pop
jne
jl
or
out
and
push
test
sahf
movsb
loope
fimull
sbb
dec
test
mov
and
add
push
adcb
jg
les
fisubrs
mov
sub
enter
cs
leave
sbb
and
or
or
fbld
pop
xlat
ss
and
sahf
testb
sbbb
pusha
mov
idiv
enter
rcrb
mov
dec
fwait
int
mov
mov
js
imul
aam
pop
mov
pop
ss
testl
ja
jb
cmp
xchg
mov
jp
insl
xchg
loop
in
adc
sahf
imul
insl
push
repz
in
mov
aaa
lret
mov
jl
lock
and
ficomps
sbb
add
movsb
pop
mov
test
jnp
cmp
leave
add
and
mov
sbb
inc
dec
popf
push
repnz
cmp
mov
movsb
call
and
xlat
test
inc
shlb
pushf
stc
cmp
fs
call
mov
ljmp
and
rcll
or
es
and
jmp
xor
insl
popl
xlat
jle
fsubr
outsb
rclb
inc
dec
push
pop
ret
mov
clc
sub
in
jecxz
fisttps
mov
fsubs
loopne
or
or
xor
and
mov
imul
or
out
jecxz
rcll
or
mov
pop
mov
test
or
in
pop
fstl
aam
jno
adc
inc
push
pop
aas
mov
js
mov
out
jnp
cmpsl
xor
lcall
mov
arpl
sbb
stos
lea
jae
jg
inc
mov
scas
rcl
cmp
popf
fnstsw
mov
push
lahf
add
aaa
rcll
mov
in
cmp
enter
test
pop
mov
daa
je
xchg
mov
jmp
shr
xchg
sbb
icebp
addb
cltd
cmpsl
jo
into
jo
subb
sbb
bound
xor
push
leave
inc
outsb
ficompl
jno
pusha
mov
out
xchg
lret
xchg
add
inc
sti
push
leave
push
fcmovne
mov
and
dec
and
les
and
sbb
into
int3
mov
movsl
lcall
sbb
mov
iret
enter
dec
mov
push
lock
dec
repz
fadds
inc
mov
dec
mov
cmp
sahf
sbb
adc
or
data16
fs
push
pusha
cmp
adc
ret
jno
lods
sahf
dec
jecxz
orb
or
je
in
mov
jae
mov
es
add
mov
mov
sbb
and
int3
or
and
dec
mov
and
iret
stc
push
xchg
mov
mov
or
cld
and
ror
pop
aad
dec
add
xchg
int
cltd
xor
stc
inc
int3
in
loop
push
dec
jl
cli
in
add
xchg
cmp
jp
in
sub
push
movsl
push
lret
das
in
sbb
addr16
jecxz
add
sbb
je
lock
cmpsb
cmp
lcall
fmul
jg
add
fists
mov
jbe
rorl
lret
addr16
sub
rcll
movsb
inc
mov
cmpsb
ljmp
stos
adc
or
jo
ficomps
aam
arpl
clc
push
mov
fwait
jp
repnz
xchg
or
addb
sbb
call
call
lock
cltd
popf
adc
sbb
or
fists
mov
dec
xor
call
sub
xor
data16
jg
imul
mov
add
xlat
or
pusha
xchg
or
inc
int
xchg
inc
je
adc
je
orl
nop
add
add
xchg
orb
fwait
push
fcomip
ret
in
lods
cmp
pop
mov
mov
inc
test
sub
cmpsl
push
shll
cmpsl
adc
push
and
clc
inc
divb
fcmovne
dec
aas
push
xchg
shrl
inc
push
sub
and
out
lret
mov
jbe
push
leave
add
out
and
and
popw
icebp
ss
mov
in
sti
or
sbb
lret
push
adc
bound
and
stos
mov
push
and
dec
in
xor
push
fldcw
xchg
fsub
sbb
xchg
mov
scas
mov
fildll
lret
test
jge
mov
cltd
test
push
data16
or
dec
jno
out
xchg
jp,pt
aam
mov
mov
and
adc
popa
mov
dec
jecxz
js
aam
xchg
jmp
xchg
inc
adc
out
int3
mov
adc
mov
ret
es
imul
or
mov
add
inc
lret
xor
add
pop
cld
or
fnstsw
bound
mov
pop
jle
lods
mov
or
repz
pop
add
mov
test
testl
mov
loope
jmp
insb
leave
sub
pop
fimull
jle
mull
or
popf
lea
or
pop
test
jge
pop
inc
inc
out
or
mov
lret
popl
cld
orb
arpl
jmp
popa
cs
pusha
cwtl
and
pop
add
jno
insb
and
mov
cwtl
push
mov
jb
aam
xor
call
fcmovb
adc
pop
test
addr16
aad
sbb
imul
push
lret
test
pop
cmp
sti
fwait
adc
cmp
xchg
adc
adcb
pop
std
mov
cmc
mov
aas
in
xchg
cltd
repz
mov
adc
cli
cmp
sbb
sbb
jp
pushf
bound
stos
and
jg
test
lahf
in
push
pop
xor
mov
enter
lret
jae
cld
push
leave
sbb
stos
sub
faddl
jne
add
lods
jno
adc
lods
cmp
push
adc
je
mov
int3
xor
dec
mov
fadd
popa
push
arpl
into
inc
stos
cmp
sti
dec
pushf
daa
push
adc
xchg
pop
mov
out
int3
jp
inc
mov
xchg
in
adc
std
jl
sbb
push
imul
fsubl
xchg
aaa
in
push
mov
add
test
ss
mov
or
loop
or
outsl
mulb
mov
mov
lock
in
add
rorl
push
in
lahf
mov
ss
pop
pop
jmp
leave
inc
cld
dec
dec
mov
jo
pop
shrl
lock
outsl
jg
xor
notb
xchg
mov
cwtl
imul
add
arpl
insl
jne
fistpll
pop
push
adc
jae
cmovp
xchg
mov
pop
testb
adc
rcl
and
push
subl
pop
shr
fdivl
imulb
icebp
sbb
out
adc
mov
add
outsb
out
in
shll
adc
mov
popa
mov
in
ss
stc
pop
dec
test
add
jae
mov
sbb
mov
dec
xchg
jg
mov
xchg
xchg
insl
fcoms
xor
jae
xchg
mov
loope
pop
leave
imul
addr16
hlt
xchg
mov
lds
cmpsb
hlt
subl
inc
fucomp
jns
xor
jle
fistpl
scas
cmpsb
cmp
mov
xchg
or
clc
push
sub
cmp
aam
gs
push
aam
mov
xchg
stc
adc
stos
gs
mov
insl
lea
in
xor
mov
scas
icebp
inc
mov
cmp
test
into
shrl
pcmpeqb
sub
fstl
cmp
lods
jae
jecxz
add
sub
lock
push
sub
leave
in
int3
add
jnp
sbb
shrb
imul
jg
out
jbe
bound
or
mov
jb
popf
or
lock
cmp
dec
out
mov
fsubp
sbb
adc
sub
test
cmp
adc
sub
mov
jg
mov
addl
ret
jnp
lds
mov
inc
frstor
mov
ja
daa
add
fnsave
jl
arpl
ret
test
push
imul
fs
mov
pop
and
mov
mov
pusha
pushf
and
cltd
sti
cmpsl
inc
inc
addr16
leave
xchg
cld
xor
and
imul
out
cld
js
push
stos
stos
mov
insb
cmp
jge
in
mov
pop
or
shrl
sub
ret
or
lret
sbb
push
push
mov
mov
insb
jnp
iret
mov
fdivl
mov
sti
mov
cmp
popa
push
mov
shll
pop
out
jmp
repz
push
les
push
inc
int
adc
mov
xchg
lcall
stos
ja
in
inc
mov
iret
sbb
jnp
les
push
dec
mov
pop
outsb
mov
sahf
dec
pop
mov
jecxz
rcrl
or
push
popa
outsl
pop
ja
call
sub
sub
aam
inc
cmp
cmp
push
test
jmp
push
mov
jno
sti
loop
fcmovbe
mov
je
pushf
and
dec
stos
jmp
cmp
cmpsl
sti
add
pop
mov
stos
and
or
pop
jp
enter
and
xchg
or
aad
sub
inc
pop
dec
ss
mov
or
lahf
xor
jns
mov
cmp
lods
xchg
fmulp
das
pop
sub
push
sahf
mov
scas
std
psubusw
mov
in
ret
xchg
sub
xor
xlat
daa
jbe
sahf
add
out
or
test
cli
aaa
in
divb
xchg
xchg
pop
int3
stos
mov
jo
data16
cmp
sarl
jnp
dec
ds
push
pop
mov
repnz
sarl
adc
mov
dec
bsr
arpl
int3
test
adc
xchg
fildll
jne
sbb
sub
ljmp
pop
lret
lahf
cmpsl
negb
outsb
je
aad
xchg
je
sbb
cltd
mov
push
fldenv
cmp
popf
mov
aaa
loope
cmp
lahf
pop
ss
in
lahf
lds
jno
jno
xchg
inc
push
fmuls
out
mov
cli
adc
xchg
test
test
push
mov
shll
out
mov
or
xor
cmc
push
fwait
add
mov
jecxz
mov
mov
and
push
jl
add
cmp
das
jge
js
xchg
mov
add
dec
sub
cmp
loop
xor
scas
mov
imul
in
or
stos
nop
lods
lret
mov
fisubrl
daa
mov
iret
inc
icebp
andl
lds
cltd
or
cmp
mov
int3
push
addr16
jne
push
fisttpll
cli
xor
leave
in
xor
scas
ret
mov
mulb
xor
scas
push
jmp
mov
sbb
or
sub
dec
or
mov
add
xchg
pusha
cmp
push
sub
out
add
mov
push
lods
mov
xchg
dec
test
and
jl
inc
ja
divl
sahf
jp
sbb
adc
gs
mov
mov
daa
rorl
jp
pop
push
sbb
decl
fidivrs
incb
xchg
shrb
sub
mov
jne
sub
xor
int
insl
add
gs
pop
lds
push
or
into
mov
fnstcw
orl
fucomi
dec
sahf
mov
and
and
pushf
jae
push
fabs
repz
test
dec
mov
or
jnp
cld
adc
out
or
and
cmp
ret
push
and
xchg
add
lret
xor
and
in
gs
adc
dec
inc
jae
jge
sub
loop
cmpl
leave
sub
subb
cs
in
je
jp
faddl
mov
pop
addr16
ljmp
and
out
lea
inc
xchg
and
test
mov
iret
cmp
jle
adc
pop
popf
add
data16
fidivrl
adc
insl
mov
repnz
cmp
xor
dec
movl
inc
xchg
leave
es
sbb
sub
push
jae
add
hlt
sahf
sbb
aam
arpl
mov
and
jp
jmp
js
out
fnsave
cmp
adc
push
pop
mov
test
out
aad
add
jecxz
jl
mov
clc
sub
stos
cmc
or
enter
pop
or
js
xchg
cmp
jecxz
pop
or
icebp
stos
sti
mov
and
int3
add
mov
jle
jb
lea
add
mov
pop
mov
adc
jecxz
lret
dec
mov
adc
dec
fdivrs
mov
insb
pop
xorl
mov
lcall
lods
sub
aad
push
cmp
jp
dec
lahf
sbb
hlt
insl
sbb
ja
out
mov
xchg
jb
test
jmp
andl
push
mov
or
pop
add
dec
xchg
and
fadd
fdivrs
xchg
outsl
or
inc
outsb
int
cmc
sub
mov
push
pop
sbb
pop
popa
push
sbb
inc
cmpsb
and
or
jle
int3
dec
xor
cmpl
or
into
dec
inc
outsb
scas
call
decb
enter
lret
dec
jo
cmc
pop
push
xor
bound
push
pop
out
scas
std
jb
xchg
pop
test
mov
dec
push
adc
jecxz,pt
push
xlat
out
add
pop
push
pop
xchg
insb
sbb
push
push
push
push
jbe
lods
nop
test
movsl
push
dec
shl
ficompl
mov
fcomps
or
sub
pop
pop
ret
icebp
mov
subb
xchg
sbb
xchg
push
cmp
fnstenv
mov
ds
adc
lahf
divl
in
mov
push
mov
mov
mov
mov
into
rorl
jg
xchg
out
popf
nop
hlt
pushf
test
subb
pop
movsb
jp
out
or
jle
jb
push
dec
inc
jmp
ljmp
jns
stos
push
sub
mov
mov
inc
repz
mov
aaa
cltd
in
add
mov
orb
in
nop
mov
data16
aas
sbb
sub
or
or
pushf
jle
mov
ljmp
jp
cmc
rcrb
push
sbb
push
mov
mov
ja
add
mov
test
shrl
and
enter
push
dec
or
sub
jecxz
ljmp
int
xchg
push
dec
jle
int3
daa
aam
inc
jecxz
cld
clc
pop
cmp
xchg
enter
dec
xchg
insb
ret
arpl
add
or
or
mov
mov
sub
pop
xchg
lahf
cmp
adc
fcmovbe
and
cli
and
call
cld
in
xor
mov
push
sbb
aaa
shrb
negl
scas
aam
push
stos
cmpsb
adc
jecxz
xchg
mov
jae
pop
lods
sub
lahf
xchg
xchg
bound
cmc
test
adc
js
and
jge
sbb
scas
sbb
sbb
adc
fldl
movb
jp
lods
js
dec
jne
cld
cmp
loope
pop
adcb
divb
in
shll
mov
push
jb
mov
lods
clc
imul
push
sbb
xor
lret
pop
cli
mov
mov
xchg
xchg
stos
into
mov
pop
add
icebp
mov
push
cmp
and
pop
jecxz
jg
mov
decl
movsb
mov
icebp
mov
roll
add
mov
sqrtps
stc
daa
ret
dec
aad
std
cld
mov
push
mov
push
rcr
lret
sbb
mov
adcb
out
pusha
imul
and
mov
dec
in
push
pop
jle
out
push
xchg
pop
adc
pop
outsl
pop
aas
dec
icebp
out
je
mov
lods
psubusw
push
pop
and
push
dec
dec
mov
inc
inc
or
cmp
leave
pop
lds
jge
leave
dec
pop
scas
lods
out
adc
addr16
roll
pop
pop
xor
or
push
xchg
adc
xor
bound
push
pop
mov
cmp
imul
std
stc
and
fldz
divb
and
mov
aad
inc
cmp
lret
mov
add
cmp
outsb
xor
or
popa
rorl
xchg
sbb
lock
fnstcw
movsb
mov
push
fbld
mov
cmp
xchg
adc
pusha
xor
dec
cmp
or
int
add
mov
es
xchg
xchg
cwtl
pop
add
adc
call
pop
insl
xchg
mov
xchg
ret
inc
pop
pushf
dec
inc
bound
fildl
rcr
imull
lcall
or
je
push
push
scas
xor
mulb
lods
and
xor
fsubs
adc
push
popf
gs
das
push
push
inc
mov
ret
push
lods
pop
push
ljmp
jle
mov
jecxz
mov
test
and
inc
xor
out
sub
mov
mov
mov
lods
lret
cmc
mov
lcall
movsl
jp
jae
mov
mov
test
xchg
add
cmp
jg
addl
into
sahf
xchg
sahf
jo
in
push
push
cli
adc
fld
mov
xchg
sbb
sbb
loop
or
aaa
lea
es
cmc
jmp
pop
cmpsl
shll
sarl
shll
mov
adc
sbb
xchg
pop
bound
cmp
cmp
pop
shll
cmpsb
fs
cmp
leave
adc
push
pop
fucom
cmp
jg
mov
arpl
xchg
xchg
adc
xor
pcmpgtw
add
inc
jno
push
adc
into
rcrl
adc
and
push
pop
push
add
mov
pop
pop
cmpsb
dec
sub
fistpl
cmp
dec
loop
lock
push
mov
lahf
outsb
push
dec
adc
out
pop
adc
and
xor
js
fstl
outsb
mov
and
mov
es
mov
inc
inc
jmp
outsl
pop
dec
ss
incl
adc
xchg
stc
mov
mov
add
and
jbe
subb
in
cmp
in
xchg
loop
cs
bound
inc
imul
lods
and
in
mov
fwait
or
jbe
or
add
arpl
aad
gs
rolb
lock
jecxz
jb
mov
dec
mov
jle
jne
test
xor
enter
mov
jecxz
pop
push
inc
repnz
pop
movsb
sub
mov
pop
push
xchg
pop
orl
sbb
dec
in
sbb
sbb
out
mov
jno
cmpsl
mov
outsl
inc
sub
aad
pop
xchg
xorl
jno
sub
hlt
jns
test
xchg
inc
or
bswap
ror
sub
pop
jmp
adc
ror
out
test
stos
in
mov
mov
aad
mov
add
out
ss
sub
push
mov
adc
lods
loope
es
adc
testl
ss
test
mov
mov
pop
or
jmp
pop
lahf
outsl
cld
mov
std
adc
icebp
xor
cmp
add
jge
ja
dec
iret
into
push
sbb
push
mov
mov
push
lods
das
aaa
cli
xlat
inc
pushf
pop
hlt
pushf
int3
outsb
das
ret
lret
mov
hlt
clc
mov
fmuls
xchg
xchg
js
fldt
and
cmp
pop
xor
mov
jo
jmp
imul
das
out
xor
mov
addb
shrb
sub
imul
dec
xchg
mov
push
sahf
out
in
hlt
shll
imul
iret
sub
daa
out
in
loope
rcrl
fs
inc
mov
fadds
sub
inc
call
jl
and
testb
jne
gs
sarl
mov
cmp
rolb
push
xchg
mov
adcl
mov
ljmp
idivl
jmp
idiv
addr16
addl
sbb
cmp
jge
in
cmpsl
ficoms
enter
adc
xchg
and
mov
popa
push
insl
mov
mov
mov
addb
and
sub
mov
or
mov
nop
sbb
jge
push
push
dec
movsl
lcall
cmpsb
mov
mov
xchg
cmp
insl
hlt
push
ret
mov
ss
jle
mov
insb
mov
cmp
jle
repnz
in
movsb
in
repz
jl
dec
add
nop
pushl
pop
mov
pop
sub
ss
mov
adc
sbb
cmp
add
push
cwtl
sahf
outsb
push
scas
jbe
jne
and
push
mov
fwait
mov
jno
cmp
adc
sbb
in
jno
ljmp
sbb
and
ja
pop
dec
adc
outsl
jne
xor
ret
and
dec
push
nop
daa
mov
dec
xchg
popf
cmc
movsl
pop
cmp
sub
insl
xor
das
in
scas
cmp
or
leave
sub
mov
aas
xchg
ds
hlt
lods
inc
int
jnp
jne
pop
inc
push
fsubs
and
jb
rcl
mov
pop
ja
std
inc
ds
daa
mov
clc
push
notl
movsl
xchg
shrb
xchg
push
pusha
int3
xor
std
fists
mov
rcrb
mov
xchg
aad
jno
jl
into
mov
inc
mov
test
rcl
addr16
jo
inc
sbb
sub
jmp
test
or
adc
cmp
outsl
lret
stc
add
mov
mov
syscall
imul
mov
pop
push
ds
sbbb
jb
test
lahf
ljmp
jnp
sbb
sub
subl
int3
xchg
hlt
shl
mov
adc
inc
hlt
mov
adc
pop
cmp
jmp
jne
stos
fld
je
imulb
aaa
push
ss
adc
sbb
sbb
xchg
insb
cmpsb
ja
add
mov
iret
mov
xchg
popa
inc
xor
dec
adc
je
cltd
push
and
push
sbb
sub
mov
pop
mov
pop
dec
pop
or
mov
outsl
lcall
out
add
jno
push
pusha
lret
sub
mov
xor
xchg
pop
bound
sub
adc
fdivrl
addr16
adc
pop
fsts
mov
dec
mov
loop
test
es
or
in
je
jl
inc
and
jge
mov
testl
ret
adc
test
xchg
mov
adcl
jo
fwait
pop
adc
stos
push
sbb
fmull
daa
imul
adc
fwait
mov
xchg
test
jmp
xor
int
pushf
pop
rcrb
jg
sahf
adc
sub
xchg
in
sbb
idivb
mov
loopne
mov
push
out
mov
icebp
sub
not
mov
mov
pop
pop
push
loope
ja
adc
jns
add
ljmp
push
shll
ja
pop
adc
test
fnsave
aas
xchg
pop
loop
fistpl
mov
cmp
inc
mov
loop
cmpb
sbbl
in
push
in
jle
out
sbb
mov
xor
cltd
jns
lret
das
xchg
dec
sub
out
nop
jecxz
pop
sbb
and
fadds
cmp
push
inc
scas
negb
fistps
fldenv
movsl
test
inc
mov
int
dec
add
std
dec
sahf
popa
insb
dec
or
fisubrl
pop
xchg
xchg
or
int
and
insl
jmp
push
sbb
std
mov
xchg
fimull
stos
and
dec
pop
mov
fisubrl
xchg
adc
push
jecxz
subb
xor
xor
shll
pop
ljmp
rorl
outsl
iret
and
sub
inc
jnp
je
and
jp
jae
ret
arpl
mov
sbb
xor
orl
js
adc
int
jnp
cmp
inc
fsubl
fs
ret
ljmp
inc
or
mov
inc
inc
prefetch
pop
cli
adc
jp
call
cmp
adc
add
rol
sbb
stos
xchg
xor
andl
pushf
mov
fwait
loop
fcoml
pop
fwait
mov
int3
mov
sti
or
jecxz
xorl
insl
jle
mov
add
andb
shlb
dec
mov
and
sahf
pop
add
mov
add
pop
test
push
icebp
mov
repnz
insb
repz
dec
outsb
mov
adc
mov
push
or
into
lret
daa
add
ds
inc
mov
iret
fs
mov
add
movsb
xchg
test
int3
mov
adc
addr16
add
shrl
and
cmp
xor
pop
pop
push
mov
sub
js
nop
loop
pop
stos
rorb
imul
out
les
or
xchg
sbb
rcll
iret
push
psraw
xor
dec
insl
jecxz
cltd
add
sub
cli
in
dec
mov
sub
mov
dec
das
sbb
dec
sub
fildl
iret
movzbl
loop
fst
outsl
sub
pop
xor
cmc
negb
repz
xor
adc
and
mov
xadd
test
data16
push
out
sbb
scas
fadd
mov
mov
iret
cmc
inc
cmpsb
mov
loopne
mov
pop
shll
xchg
cmp
xchg
push
jnp
fisubrl
out
push
and
leave
dec
push
lahf
push
xchg
cmp
andl
xchg
pushf
inc
sbb
outsb
or
mov
adc
dec
test
sbb
enter
outsb
mov
addr16
inc
inc
cwtl
sti
dec
cs
fdivrs
rcrb
cmp
mov
mov
adc
dec
fisubrs
test
jns
ret
jbe
mov
icebp
pop
inc
add
and
pushf
aas
ret
adc
out
mov
repnz
xlat
add
xchg
mov
pusha
pop
out
movsb
mov
dec
and
and
repz
inc
fildl
imul
movl
jl
subl
aam
sbb
or
repnz
int3
stos
sbb
fsubrp
and
or
shrb
mov
adc
dec
dec
jae
add
and
pop
xor
push
mov
pushf
cmp
jo
mov
jmp
sub
jle
mov
and
lea
das
or
mov
adc
push
add
and
push
dec
or
mov
jo
mov
adc
jo
mov
adc
insl
xor
rol
lret
sti
int
scas
data16
cmp
cwtl
adc
jg
test
xchg
pop
les
test
push
rcrb
clc
cmpsl
out
dec
push
gs
fldz
cmpsl
xor
das
and
jecxz
sbb
sbb
sbb
pop
push
outsl
or
xor
pop
dec
xchg
or
fxch
ss
jmp
mov
cmpl
adc
jg
insb
mov
cwtl
sbb
xchg
adc
repnz
cs
sbb
push
aam
popf
movsb
ficompl
xchg
ja
movsb
push
adcb
sbb
ret
aaa
fs
fistpll
mov
or
mov
pop
adc
movsb
cld
lret
sbb
movsb
fwait
mov
mov
in
jmp
jo
mov
inc
test
shll
cmc
mov
xchg
lcall
inc
test
jg
nop
xchg
dec
xlat
cmp
movsb
std
int
lea
lea
repnz
xchg
dec
inc
pop
or
jne
in
mov
push
popf
jl
orb
test
iret
jp
dec
xor
xchg
inc
or
enter
mov
and
outsl
imul
xchg
aaa
loopne
ds
cmp
xchg
and
shrl
jg
bound
dec
pop
cld
hlt
arpl
jns
jecxz
mov
addb
aam
jns
iret
xor
push
ficoml
xor
pop
inc
mov
xorb
mov
mov
js
inc
shrl
inc
mov
xorb
shll
mov
mov
pushf
dec
push
push
call
nop
ds
sub
imul
insb
adc
push
adc
mov
pop
inc
outsb
adc
add
xlat
jbe
pusha
xchg
mov
mov
push
loop
bnd
pop
ss
mov
popf
imul
mov
add
shr
fs
cli
fsubs
lods
push
retw
mov
pop
jg
ret
pop
popa
out
or
arpl
lock
sub
mov
imul
inc
pop
push
adc
stos
xor
xchg
lahf
stc
scas
stos
jecxz
fdivl
push
mulb
aam
cld
cmp
outsl
std
jno
lss
lret
jne
cmp
or
xchg
xchg
xchg
xor
sub
lea
xor
imul
pop
push
add
cmp
out
dec
inc
sbb
or
or
scas
outsb
mov
sub
sub
mov
mov
das
mov
cmpsb
ficoml
jo
xor
pusha
push
fistpl
cld
jno
lret
pop
imul
ret
dec
je
push
xchg
mov
sbb
and
adc
push
cld
sbb
push
je
out
xlat
jp
lea
push
and
imul
arpl
fnstenv
push
xchg
loop
sbb
enter
lock
jb
out
fidivl
insb
iret
adc
push
inc
loop
es
idivb
push
int
dec
sbb
ds
pop
xchg
xor
dec
or
dec
pop
inc
jae
insl
sbb
push
jge
xor
pushf
jge
fxch
fnstenv
inc
add
orl
mov
pop
hlt
jnp
xchg
ret
sbb
addl
mov
push
jo
bnd
jae
push
add
movsl
xchg
pusha
jge
mov
xlat
cmc
lret
fs
out
cmp
dec
mov
mov
test
in
jle
xor
in
dec
jbe
les
imull
mov
or
mov
jge
in
ljmp
imul
nop
fld
mov
fistpl
pop
sahf
mov
bound
cs
enter
notrack
bound
hlt
sbb
add
jne
orb
ds
movsl
int3
dec
pop
popa
mov
xchg
in
addr16
inc
aas
negl
mov
stos
stos
jp
inc
lahf
rcll
rorb
mov
pop
xor
stos
mov
imulb
mov
mov
daa
push
push
and
call
in
sti
and
pop
cwtl
lods
mov
adc
push
sub
inc
lods
in
push
xchg
jg
aam
scas
fwait
jno
inc
gs
inc
jno
mov
rorl
pop
test
jg
pop
jne
inc
jge
mov
xor
sub
add
out
adc
scas
in
mov
cmpsl
popf
adc
xchg
add
imul
fdivrl
outsb
or
mov
add
jnp
or
add
cs
jmp
test
dec
jae
xchg
mov
loope
or
jno
test
stc
fs
sub
cltd
jmp
sbb
iret
ds
les
xor
sti
inc
pop
ljmp
push
lcall
and
add
in
test
or
aaa
sub
cld
pop
mov
repz
mov
inc
lret
push
mov
sub
fistpll
test
scas
imul
enter
push
and
mov
adc
shr
mov
xchg
cwtl
loope
xor
fidivrs
in
pusha
nop
sti
mov
lea
in
scas
mov
in
inc
pushf
sub
xchg
mov
cs
cmp
insb
mov
out
cmp
inc
rcrl
int
loope,pt
xchg
cmpsb
repz
out
push
inc
test
push
in
and
mov
mov
inc
push
inc
jno
dec
add
jmp
lock
aas
sub
andl
pop
dec
adc
jge
std
fidivl
push
jo
push
jle
fidivrs
fnstenv
xlat
cmpsl
xchg
push
pop
adc
sti
add
rcrb
mov
lods
xchg
loopne
mov
addr16
arpl
shl
pop
dec
and
les
inc
jns
cmpl
out
add
xor
dec
jl
xor
jns
xlat
cs
mov
mov
push
mov
cld
cmp
imul
sub
add
jg
pop
mov
repnz
mov
and
shl
leave
adc
imul
loopne
pushf
sahf
xor
hlt
jge
dec
sbb
push
inc
aas
push
xorb
lods
insb
dec
pop
lret
aas
mov
mov
xchg
dec
ja
clc
scas
pop
sbb
test
adcl
sarl
adc
mov
push
stc
out
adc
popl
mov
icebp
mov
xorb
mov
test
lcall
aam
cwtl
push
adc
inc
ret
inc
enter
icebp
mov
ja
inc
mov
or
cmp
lock
sub
bound
adc
adc
into
jecxz
push
das
inc
xchg
jbe
cltd
pop
xlat
sbb
out
movsb
mov
sbb
mov
dec
lahf
imul
dec
mov
push
mov
pop
xchg
jmp
insl
ret
divb
into
cmc
rol
xchg
sarb
mov
push
sbb
leave
subb
or
or
popf
jp
in
stos
call
cs
xchg
cltd
stos
cs
into
je
xchg
mov
into
jg
ss
mov
out
fwait
pop
push
mov
lods
xchg
aad
add
outsl
xor
fcmovnb
sarl
or
lods
sarl
sbb
xor
sahf
mov
jecxz
inc
pusha
cmp
iret
xor
dec
fstpt
jb
mov
fisubs
jno
push
jge
sbb
and
sbb
add
scas
adc
xchg
xor
adc
insl
adcl
xchg
add
jbe
in
xchg
mov
lock
mov
adc
sub
jecxz
repnz
bound
push
dec
rorb
inc
xchg
mov
adc
fdivrl
imul
aad
sbb
add
pop
dec
pop
xchg
and
lock
fists
popf
or
add
popf
push
sub
xor
add
push
ret
sbb
decb
cld
fmuls
mov
das
dec
dec
push
pusha
int
out
insl
add
xor
sub
call
pop
cld
push
cmp
in
fdivrl
dec
ret
xor
adc
data16
or
js
adc
sbb
movsb
pop
xor
jae
adc
xor
fisubrs
inc
add
lcall
mov
stc
inc
leave
lds
push
and
add
push
xor
or
dec
jae
cmpsl
shll
mov
ljmp
or
mov
and
ja
les
ret
jae
xorl
repnz
lods
adc
mov
dec
movsl
bound
pop
rorb
pop
push
add
ja
popa
xor
mov
stc
fldcw
sub
jecxz
std
popa
mov
test
sahf
loop
cli
adc
jae
xchg
fsts
jo
add
bnd
inc
dec
mov
fwait
dec
fiadds
mov
adc
xchg
lahf
fmuls
inc
xchg
test
mov
mov
sbb
and
js
loope
outsl
jp
rcr
cmpsb
fs
jns
mov
loopne
lods
in
adc
pop
rcrb
fistl
add
xchg
lcall
loope
jecxz
sbb
loop
cwtl
cwtl
jp
jle
xchg
jns
pop
dec
pushfw
test
outsb
negb
aaa
mov
cmc
adc
movsl
into
mov
cltd
pop
ja
lock
and
jb
jle
dec
mov
mov
add
stos
inc
out
addb
jge
in
lcall
sbb
stos
xor
aaa
je
imul
int3
add
scas
js
outsl
leave
movsl
mov
or
in
testb
jno
lds
pop
mov
loopne
lods
mov
inc
xchg
js
or
add
jae
mov
scas
inc
aaa
clc
sub
ffreep
fs
pop
mov
into
aaa
add
dec
imul
lret
repnz
xchg
dec
jno
outsl
fwait
cld
stos
jmp
mov
inc
shrl
gs
in
cld
lock
pop
pop
add
lea
jp
or
push
fwait
jp
pop
cmp
dec
mov
outsb
divl
push
cmp
popf
cmp
adc
mov
add
ja
clc
nop
scas
xor
aam
add
mov
dec
cmpsb
and
push
lods
out
lods
mov
mov
stos
mov
daa
sub
mov
lods
cmpsl
test
inc
ret
aam
mov
xchg
mov
cltd
bswap
hlt
cmpsb
sub
mov
cmpsb
sbb
stos
ljmp
push
mov
inc
les
orb
mov
scas
imul
mov
ret
aaa
push
xchg
xchg
jecxz
mov
push
push
in
jb
push
scas
sbb
jmp
cmp
scas
insb
fisttpl
mull
ljmp
addb
cld
nop
lods
pop
cli
cmp
imul
lods
imull
mov
insl
xor
inc
loopne
and
fsts
shrl
cmp
push
pop
sbb
mov
xchg
aad
scas
and
bound
xor
imul
inc
and
push
call
adc
inc
jg
fwait
mov
arpl
and
lret
icebp
xlat
rorl
arpl
out
push
negl
shll
inc
lret
adc
xchg
and
mov
sub
stos
in
cmpb
pusha
jae
vpshlq
add
scas
in
decb
adc
cmp
sti
or
das
push
dec
xor
xchg
in
add
push
fildl
popf
adc
enter
xlat
adc
std
push
sub
ds
mov
dec
test
das
aad
and
jnp
mov
aaa
cmpsl
mov
dec
push
sub
adc
jmp
ficomps
shlb
mov
movsl
sahf
faddl
jo
or
jge
mov
aaa
adc
push
pop
in
loop
add
sub
xchg
push
std
stc
pop
cmpsl
out
call
je
jecxz
loop
imul
mov
icebp
add
shlb
into
cli
test
aam
xor
jmp
xor
or
adc
sarb
hlt
std
cltd
mov
cmc
hlt
imul
inc
in
or
out
mov
adc
xchg
es
test
cld
push
adc
pop
xlat
int3
sahf
inc
mov
add
in
lods
push
sub
adc
inc
lret
ret
cwtl
mov
xor
or
add
push
shrb
je
mov
jns
mov
fs
sub
in
test
pop
leave
sbb
stc
push
pop
jnp
sub
sub
addr16
gs
loope
and
shlb
pop
lods
gs
xorl
fcoms
xor
bound
mov
mov
jne
add
lret
movsl
mov
test
inc
jb
dec
or
fildl
and
cmp
sub
xchg
or
sbb
ficoml
outsb
inc
repnz
hlt
adcl
pop
imul
cvtps2pi
xor
ljmp
cld
repz
mov
sbb
int3
out
jle
inc
sub
shl
dec
cmp
nop
or
stos
iret
js
lret
cmpsl
out
bound
mov
cmpsb
inc
lret
jp
mov
or
push
jnp
aam
and
call
sbb
mov
mov
lcall
pop
adc
test
jp
fs
es
add
or
xor
out
sub
and
mov
test
xchg
jge
jno
lea
into
jb
rclb
mov
fadds
sub
push
cmpb
roll
cmpsb
into
and
xchg
adcb
bound
fcoms
mov
jno
pop
mov
dec
pop
stos
in
rcrb
fisubrl
movsl
out
orb
cmp
ja
and
pop
test
inc
add
rcl
fcmove
clc
jmp
xchg
add
jle
cmpsb
lret
dec
lods
adc
cmp
push
or
or
mov
mov
dec
add
adc
negb
sub
and
lea
sub
decb
ret
lret
xchg
cmp
fisttpll
movsl
rcrb
notb
sub
jecxz
cmp
iret
pop
xchg
out
mov
or
es
dec
test
or
or
dec
mov
movsb
push
ficoms
hlt
roll
sbb
orps
pop
int
sti
dec
ja
stos
popa
xchg
scas
xor
pop
aas
fnstenv
add
adc
jmp
rcll
jno
adc
mov
bound
test
cmp
push
jg
shll
popa
lret
adc
repz
popl
jl
mov
fldenv
fcmovu
lret
cli
pop
jb
jecxz
inc
icebp
fwait
adc
lcall
and
mov
mov
int3
sar
push
pop
sub
xchg
icebp
lds
divl
aas
arpl
movsb
int
loop
adc
jo
mov
or
mov
or
xor
or
call
stos
inc
pop
inc
xorb
adc
mov
inc
insl
and
in
lea
mov
cmp
xchg
sbb
mov
adc
es
push
and
enter
xor
jecxz
shr
fsubrs
jo
jg
es
out
mov
xlat
fsubrl
fnstenv
sub
nop
jmp
dec
mov
inc
sub
insl
js
mov
ljmp
je
jnp
jg
push
pop
clc
idiv
out
jne
or
repnz
inc
shl
xor
sbb
inc
outsl
add
and
xchg
in
sbb
outsb
test
lcall
sub
jecxz
jns
xchg
stc
pop
mov
mov
mov
lahf
sbb
jnp
jge
ss
addb
les
inc
ud2
jg
mov
inc
aad
repnz
call
stc
xor
sysexit
push
popa
pop
fwait
movsl
out
pop
movsb
fcmovbe
mov
jne
push
test
mov
inc
push
mov
adc
jno
imulb
add
fcmovnb
bound
mov
les
and
dec
int3
scas
popa
and
adc
dec
mov
xchg
stos
and
cmc
daa
arpl
fbstp
ds
or
lahf
inc
aas
lock
push
popf
std
xorb
or
inc
mov
dec
and
mov
arpl
add
imul
adc
movsl
sbb
repnz
imul
mov
mov
cmp
icebp
mov
retw
push
insl
shll
insl
int3
call
and
push
and
out
push
data16
mov
mov
push
add
jnp
aad
or
adc
ds
dec
sbb
sqrtps
loop
xor
test
and
lahf
pop
lea
add
cmp
cmp
xchg
test
scas
pop
xchg
movsb
cld
mov
mov
and
jne
add
test
in
mov
out
mov
jp
mov
shlb
mov
in
inc
pop
in
lret
in
test
addr16
pop
mov
mov
and
pop
dec
add
sahf
iret
jmp
xchg
outsl
and
aas
gs
std
fwait
cld
add
inc
adc
xchg
testb
xor
jge
dec
pushf
enter
or
in
mov
ja
arpl
repz
xchg
inc
pop
mov
mov
add
test
fidivs
lds
in
lret
cmp
xlat
shll
inc
adc
loopne
sahf
aaa
movsb
inc
xchg
xchg
xor
std
push
jno
mov
sbb
sbb
mov
ds
mov
inc
add
xlat
adc
imul
dec
sbbb
movsb
and
xor
mov
sbbb
or
popf
mov
pop
dec
cli
imul
fisttpl
dec
lea
loope
insl
cmp
sub
shrl
add
insb
inc
xor
movl
mov
pop
pop
push
int
mov
pop
shlb
jmp
cld
jns
push
push
das
icebp
inc
scas
repz
aad
mov
out
into
jno
sbb
sub
or
in
and
lds
cmp
popa
xchg
cmp
inc
and
dec
push
mov
int3
xchg
jne
dec
ds
and
xchg
sti
orl
mov
pop
inc
fdivrl
inc
mov
xchg
dec
inc
push
fidivrl
or
out
es
dec
push
mov
pop
and
lahf
stos
mov
jecxz
sbb
xor
adc
lret
ja
shl
jne
decl
icebp
jg
fs
and
cwtl
scas
xchg
dec
insl
adcb
dec
push
mov
cmp
adc
mov
ficoml
test
in
scas
cmc
mov
jg
orb
cli
sub
pop
mov
sbb
aam
dec
jmp
test
lods
pop
sub
jne
in
or
popa
mov
rcr
shl
out
pushf
popa
insb
xchg
dec
and
lahf
cmp
cmp
clc
inc
mov
add
inc
mov
sub
lea
movzbl
mov
dec
dec
inc
add
inc
xor
add
lea
mov
movzbl
add
inc
sub
add
and
lea
mov
dec
inc
dec
dec
mov
inc
xor
lea
inc
dec
cmp
jb
add
xor
dec
or
mov
lea
mov
mov
inc
inc
inc
inc
dec
sub
lea
sub
mov
inc
dec
cmp
jb
inc
mov
xor
lea
xor
imul
dec
xor
dec
dec
pop
dec
xor
test
jbe
lea
movzbl
sub
inc
inc
inc
xor
lea
mov
add
inc
inc
add
sub
lea
mov
add
inc
dec
add
inc
add
lea
and
dec
sub
mov
inc
inc
movzbl
xor
lea
add
mov
add
and
sub
add
mov
inc
sub
mov
lea
movzwl
mov
add
add
mov
sub
dec
xor
lea
mov
inc
dec
jne
sub
mov
dec
inc
or
lea
mov
dec
dec
dec
dec
xor
mov
lea
imul
dec
inc
dec
inc
xor
lea
mov
mov
sub
test
jbe
inc
inc
inc
add
lea
movsbl
inc
dec
inc
inc
or
lea
mov
inc
inc
inc
dec
sub
and
lea
movzbl
dec
and
dec
inc
mov
inc
xor
movzbl
lea
imul
add
add
jmp
inc
add
lea
inc
inc
pop
ret
push
dec
dec
add
lea
movswl
dec
inc
inc
sub
add
push
and
lea
imul
inc
push
dec
inc
push
dec
and
push
lea
mov
push
add
dec
inc
add
xor
lea
mov
dec
inc
dec
add
and
lea
imul
add
call
call
dec
inc
inc
or
lea
movzbl
sub
dec
add
dec
and
lea
mov
add
dec
add
inc
and
lea
mov
dec
inc
inc
inc
sub
lea
mov
cmp
je
inc
dec
inc
dec
or
lea
mov
dec
dec
add
dec
or
lea
imul
add
dec
add
inc
and
lea
mov
dec
dec
sub
sub
sub
lea
mov
inc
add
dec
inc
xor
lea
mov
dec
inc
inc
add
or
lea
movzbl
inc
inc
dec
inc
or
lea
imul
dec
inc
inc
add
and
lea
ret
mov
sub
pop
dec
ret
push
dec
mov
inc
add
push
lea
imul
add
inc
inc
push
inc
push
inc
push
and
lea
mov
jmp
sub
and
inc
sub
mov
xor
lea
movzbl
movzbl
dec
mov
dec
dec
mov
dec
or
movzbl
lea
mov
add
dec
inc
and
dec
dec
movzbl
or
lea
xor
mov
dec
inc
sub
inc
dec
and
lea
mov
dec
dec
inc
inc
dec
jne
and
mov
lea
mov
pop
sub
add
pop
inc
dec
pop
and
lea
mov
dec
inc
inc
sub
or
lea
mov
inc
add
ret
push
dec
dec
dec
or
lea
movsbl
dec
dec
push
push
push
push
inc
sub
or
push
lea
mov
inc
add
inc
dec
xor
lea
mov
mov
dec
push
dec
inc
xor
add
and
push
lea
mov
push
inc
dec
pushl
inc
call
add
add
or
lea
movzbl
dec
sub
inc
inc
pop
ret
dec
dec
call
dec
add
or
push
lea
imul
xor
add
mov
inc
mov
inc
inc
mov
add
lea
test
je
imul
sub
inc
add
sub
and
lea
movswl
sub
mov
inc
inc
mov
sub
add
lea
mov
repnz
dec
inc
add
inc
jmp
dec
or
lea
movzbl
inc
dec
inc
add
xor
lea
pop
pop
ret
push
mov
sub
sub
dec
inc
add
lea
mov
inc
dec
dec
dec
and
lea
mov
dec
add
dec
inc
or
lea
mov
dec
inc
inc
add
add
lea
pop
ret
sub
imul
mov
sub
sub
mov
inc
sub
mov
and
lea
mov
mov
inc
xor
inc
inc
mov
dec
sub
inc
lea
imul
sub
add
add
inc
cmp
jb
add
push
lea
mov
push
dec
inc
push
add
inc
mov
or
lea
xor
imul
add
xor
dec
inc
xor
sub
sub
push
lea
xor
add
jmp
test
inc
add
adc
add
add
cltd
addb
add
pop
cmovno
fildll
add
adc
add
add
addb
data16
mov
insb
add
push
mov
movswl
pop
add
add
push
inc
dec
mov
or
lea
mov
sub
dec
sub
add
and
lea
imul
add
call
dec
inc
dec
sub
lea
mov
dec
dec
inc
sub
add
lea
imul
sub
inc
inc
sub
xor
lea
imul
inc
dec
dec
add
call
sub
lea
mov
inc
call
dec
sub
inc
xor
call
lea
push
movswl
inc
add
add
add
call
or
lea
mov
inc
dec
dec
call
inc
pop
and
lea
movsbl
add
inc
pop
dec
inc
pop
dec
xor
lea
mov
pop
dec
add
inc
inc
xor
lea
movzbl
inc
pop
add
inc
pop
inc
xor
mov
lea
mov
call
inc
dec
sub
add
ret
or
lea
push
mov
inc
push
inc
inc
push
dec
and
push
lea
imul
push
add
add
mov
dec
inc
push
or
ret
push
lea
push
mov
inc
push
dec
dec
push
inc
sub
push
lea
imul
push
dec
dec
inc
call
dec
add
lea
movswl
dec
dec
inc
sub
and
lea
dec
sub
inc
jmp
incb
nop
rorl
test
mov
dec
xlat
add
or
insb
cmpsl
negb
leave
addl
jbe
dec
dec
and
mov
xchg
inc
adc
pop
jno
iret
adc
das
jb
stc
stos
jmp
add
enter
inc
fisubrs
or
notb
lods
mov
stos
andb
jbe
cmpsb
roll
jg
call
sub
jecxz
aad
repnz
pop
in
sub
mov
imul
not
mov
xchg
into
sti
or
mov
int
out
xlat
xor
out
sbb
pop
push
out
cwtl
push
lcall
dec
sbb
sbb
ret
out
pop
arpl
and
test
cmp
int
arpl
or
fisubrl
inc
pop
and
fwait
inc
sub
mov
jnp
jo
movsl
dec
lods
mov
fwait
push
push
jmp
mov
add
js
pop
sti
ja
mov
test
pop
mov
hlt
out
data16
push
shr
xlat
xchg
iret
adcb
jbe
cs
cli
aas
stc
ret
xchg
and
imul
jno
add
nop
xor
dec
cmpsl
pop
sbb
in
sbb
int3
xchg
cs
mov
int
rcll
push
stos
mov
lahf
cmp
rorb
pusha
xor
repnz
popa
mov
sbb
out
add
int3
dec
stos
mov
testl
add
lods
dec
cwtl
inc
bound
or
xor
enter
adc
jnp
xor
mov
movsb
out
pop
push
dec
xchg
jne
stos
in
xchg
pop
and
insl
and
add
addb
add
add
sub
rcll
idivl
push
test
popa
mov
sub
and
pop
and
sbb
aam
and
bnd
cld
inc
jae
push
mov
pop
lods
cmp
push
movl
lea
outsl
mov
adc
push
jp
add
and
xchg
sub
stc
or
fdivs
inc
ret
pop
cmp
dec
or
add
sbb
out
sahf
ficoms
mov
dec
pop
push
xchg
push
push
cld
lret
call
aaa
subl
out
in
jne
or
cmp
cmpsb
cli
xor
dec
out
adc
push
mov
ret
inc
jl
sub
imul
clc
pop
pop
aas
je
fs
mov
mov
inc
scas
pop
rcrl
ja
pop
or
cmp
xchg
icebp
aam
inc
in
mov
dec
jecxz
divl
ljmp
or
div
push
popa
pop
xor
jg
inc
out
xor
push
popa
cli
jbe
int
loopne
lcall
pushf
mov
add
pop
ljmp
mov
sti
jns
popa
sub
neg
cmc
cmp
cmp
test
jb
repnz
add
add
mov
out
popf
mov
cmp
mov
xchg
push
jl
xchg
sarb
cmp
cmc
das
and
pop
jns
repz
xchg
pop
stc
stos
push
out
cltd
dec
arpl
repnz
arpl
in
jno
fsubrl
bound
or
test
sub
out
sbb
and
mov
outsl
lods
std
xor
loopne
sub
loope
in
out
mov
popa
jp
mov
cld
adc
inc
or
notl
inc
dec
int
mov
xor
push
mov
insb
ret
clc
pop
sbbb
cli
or
cmp
leave
lods
sarl
cmpsb
jecxz
mov
sub
adc
add
adc
imul
cmpb
xor
dec
les
cmp
mov
stc
xlat
inc
das
mov
pop
int
enter
out
and
lods
lret
aam
pop
inc
adc
sbb
bound
je
lahf
nop
add
fstpl
jp
cs
push
rorl
push
dec
sbb
scas
or
rcl
in
mov
and
pop
sub
mov
int3
outsl
dec
pop
cmp
dec
mov
mov
dec
or
jmp
rorl
jle
testl
es
mov
mov
outsl
aas
add
scas
push
jns
xor
andb
or
hlt
jmp
sbb
adc
pop
and
cmp
jbe
imul
mov
sub
shrb
adc
cltd
add
stc
push
cwtl
cltd
pop
mov
lret
xchg
pop
adc
out
xor
insl
and
xchg
loope
fcmove
test
clc
sbb
add
add
push
sub
xor
mov
dec
adc
xchg
push
or
cli
sub
int3
or
in
ds
in
insl
cmpsl
ja
cmp
les
flds
inc
mov
mov
mov
pop
xchg
cmp
addr16
add
out
push
shlb
inc
cwtl
pop
cmp
bound
test
fidivs
insl
mov
fnstenv
scas
push
filds
xchg
or
xor
jg
mov
stos
in
jae
jo
xor
call
in
mov
sub
dec
mov
xor
xchg
jbe
add
insl
cmp
orl
inc
xor
xlat
cwtl
cmp
inc
push
pop
xchg
lds
loopne
lret
into
mov
sti
test
fcmovb
xor
and
jge
jbe
popf
pusha
clc
sub
jno
jmp
jo
imull
jg
movsl
mov
les
push
mov
fidivl
lds
loopne
push
cmp
mov
mov
cmpsb
or
xor
test
xchg
lds
sub
outsb
pop
testl
cmp
cmpsl
loop
pop
fdivr
cmp
hlt
ret
lods
shl
push
idivb
xchg
lret
inc
xchg
jg
sbb
mul
sbb
lret
mov
mov
movsb
xor
movsb
xchg
or
push
arpl
dec
fsubs
enter
out
lea
mov
and
add
ret
out
mov
sti
jmp
out
loop
or
cmp
cmp
pushf
ret
arpl
aam
repnz
xchg
cmp
or
shll
icebp
orb
fcmovne
jge
jbe
mov
dec
cmpsl
lods
stos
ljmp
enter
rorb
lret
mov
jle
int3
int
fnstsw
dec
jns
jle
sub
push
or
sub
fmulp
call
or
lods
inc
mov
sub
addr16
xchg
leave
fistpl
inc
movsl
add
rolb
push
xchg
and
les
popf
fsubp
mov
jl
or
fsts
adcl
add
fldenv
nop
call
icebp
icebp
pop
push
aaa
inc
cmp
and
and
mov
mov
in
xchg
scas
jge
rcr
pop
repz
stc
jmp
and
xchg
fstpt
adc
loop
sbb
dec
push
sub
aas
jne
test
cmp
arpl
xchg
scas
sub
mov
and
addr16
les
jmp
pop
mov
pop
mov
ds
loopne
sbb
or
pop
cmp
jp
xor
fcom
fwait
jbe
in
aas
jmp
test
cli
cmovae
mov
push
dec
pop
pop
hlt
bound
mov
cmc
popl
jg
mov
sahf
or
xchg
fldt
rcrb
movl
mov
lret
aam
jge
push
jb
in
dec
out
or
pusha
lds
mov
ret
scas
or
mov
mov
mov
dec
xchg
jae
sub
jecxz
mov
xor
dec
xor
ds
imul
inc
fsub
mov
lods
cltd
mov
pop
and
lds
pop
xor
add
outsl
xchg
inc
es
mov
mov
fistpl
push
inc
xchg
sub
jb
dec
xor
std
dec
pop
mov
lods
into
imul
dec
cmp
std
sub
xor
cmpsl
and
xor
mov
outsl
and
xor
mov
shr
int
add
je
mov
stos
loope
pop
xchg
loopne
ljmp
or
jae
mov
mov
sbb
adc
mov
imul
dec
les
mov
mov
cmp
mov
cli
les
mov
scas
xchg
popf
cmp
out
insb
cmpsb
test
pop
add
test
popa
das
ds
mov
das
pop
in
pop
mov
aaa
lahf
dec
jne
adc
fistpll
daa
jmp
sub
pop
nop
inc
cmp
and
dec
mov
shlb
mov
sbb
jb
push
sub
repnz
scas
cltd
clc
inc
es
shrl
mov
jno
inc
jnp,pn
jns
ljmp
int
leave
lret
xchg
adc
sbb
outsb
js
in
lods
mov
mov
lahf
jno
fstps
or
cmp
adc
xchg
lret
in
cmp
xor
in
cwtl
movsl
push
adc
mov
xchg
xchg
pop
mov
sysret
mov
jmp
xor
fld
push
xchg
fidivrl
xor
jo
mov
mov
xchg
mov
adc
mov
jmp
xor
leave
and
in
insb
sub
orl
xchg
or
push
je
inc
and
mov
movsb
arpl
cmp
mov
in
adc
data16
adc
ja
lret
fldenv
daa
add
out
lcall
inc
sbb
ficompl
mov
ret
sti
sbb
add
xchg
cmp
jmp
enter
mov
add
test
sbb
enter
jnp
movb
mov
mov
cs
out
or
lods
push
das
mov
cmp
imul
push
xchg
dec
adcl
bound
andl
push
pushf
addl
sbb
cmp
je
mov
xchg
jmp
dec
fisubl
into
dec
xchg
dec
xor
repz
or
inc
popa
and
pop
rclb
cld
xor
inc
dec
add
and
ret
jmp
imul
push
cmc
ljmp
cmpb
ljmp
dec
fwait
inc
pop
xor
enter
stos
iret
in
mov
pop
test
lret
cmpsl
in
dec
inc
and
cmp
push
cmp
mov
adc
mov
xchg
pop
lock
jecxz
lock
dec
testl
mov
enter
movsb
sub
int
xchg
sbb
cli
mov
movsb
lahf
les
xchg
test
cmp
mov
scas
lcall
test
push
xchg
test
shl
arpl
mov
add
scas
pop
mov
mov
cmp
les
jne
es
mov
int3
mov
clc
or
out
inc
xchg
ljmp
push
push
imul
repz
movsb
xor
shlb
inc
fsubrl
fidivs
arpl
sub
mov
and
into
mov
scas
mov
sub
adc
add
jns
test
jp
xchg
fs
daa
push
push
aam
idivb
cs
lret
shl
or
mov
jp
or
cltd
es
mov
dec
xor
jmp
inc
or
pusha
cmp
lods
out
mov
adc
push
jns
xchg
fs
mov
push
fcmovbe
mov
xchg
mov
hlt
test
dec
sub
jno
jne
or
popf
mov
int
idivl
inc
popf
xchg
mov
rolb
out
mov
inc
sbb
push
pop
dec
xchg
fisubl
dec
aam
sub
stos
cmc
push
xorb
movsb
or
sbb
mov
push
cmp
mov
sub
mov
mov
xchg
sbb
mov
pop
mov
pusha
out
jge
outsl
je
idivb
fdivrl
pop
xchg
fs
cmp
aad
fucom
jne
cmp
fisttps
out
popa
pop
and
and
add
fwait
dec
cwtl
push
xlat
jo
jns
xor
imul
dec
push
mov
xchg
sbbb
lds
push
adc
adc
jmp
and
and
cmpsl
inc
popa
fidivrl
bswap
push
jmp
cwtl
xor
imull
pushf
sbb
aam
iret
mov
sub
jp
pop
adcb
popw
mov
xchg
sbb
mov
in
add
add
push
jmp
pop
bound
jb
scas
pop
imul
jns
mov
aad
pop
es
inc
dec
sbb
push
push
xchg
scas
sub
dec
das
pop
lcall
cwtl
or
cli
pop
pop
xchg
sbb
sarl
inc
loope
aas
les
shlb
ret
loop
in
lods
je
sbb
sbb
xchg
mov
in
cltd
out
sbb
jp
cmp
mov
movsl
ret
pop
mov
cmp
cmp
mov
int
inc
mov
sti
jnp
sbb
inc
ljmp
inc
sti
and
je
lea
inc
inc
xlat
mov
orl
inc
pop
dec
pop
jno
dec
test
int
ds
sub
loop
subb
or
rcrb
fnstsw
rcl
cwtl
cmc
jno
xchg
out
dec
imul
mov
daa
dec
dec
mov
mov
fisubrs
popf
test
pop
jb
push
xor
into
sbbl
push
clc
xchg
shll
pop
push
movsb
cli
and
insl
dec
imul
pushf
push
scas
inc
sbb
lea
push
out
sbb
add
bound
mov
jnp
mov
test
shrl
ret
aam
add
xorb
in
in
sbb
add
xchg
lcall
arpl
fldt
clc
lods
les
mov
sbb
mov
notl
les
sbb
mov
mov
xor
sub
push
dec
cmp
daa
popa
or
sti
jne
loope
insl
push
jl
popl
data16
mov
and
xor
inc
mov
cld
cmpsb
mov
data16
jle
mov
mov
xchg
jnp
or
cld
xor
fmuls
popa
ds
or
iret
push
xchg
xor
lods
mov
xchg
pop
jecxz
rcrl
pop
adc
pop
cmp
out
push
dec
sbb
mov
xor
test
sub
rcr
or
outsl
test
pushf
cmp
fidivl
in
repnz
ja
inc
push
jle
fadds
addr16
pop
pop
test
lahf
adc
xor
mov
push
fsubrs
idivl
pop
mov
loope
out
cmp
xlat
and
scas
leave
mov
cmpsb
push
scas
pop
les
pop
jmp
je
ret
sub
sbb
aaa
aam
push
ljmp
mov
mov
jne
mov
pop
cmp
mov
jg
jg
and
mov
jmp
xchg
or
stos
test
push
push
inc
aad
add
or
jle
sbb
ljmp
scas
stc
inc
or
mov
push
mov
and
and
hlt
aaa
xchg
xchg
fwait
pop
dec
adc
jle
push
loopne
and
and
inc
mov
loop
xor
xchg
and
and
jno
je
dec
xor
icebp
sub
js
cmpsb
jp
mov
cld
mov
dec
in
or
sub
gs
adc
jmp
pop
lock
or
cmp
sbb
pushf
ja
pop
cmp
mov
es
lods
stc
inc
sub
mov
arpl
stc
iret
pop
mov
icebp
loope
into
into
mov
gs
and
cltd
mov
and
or
insl
add
ror
ss
fcmove
aad
xlat
dec
push
out
insb
sub
in
cmp
push
sbb
and
adcl
add
rcrl
loopne
loopne
imul
add
mov
jecxz
cmp
pop
pop
loope
lock
or
mov
test
xor
insb
adc
fsubr
cmpsb
pop
xchg
outsl
movsb
rolb
pop
das
sbb
addb
jnp
dec
dec
sub
xchg
mov
into
add
mov
pushf
lea
adc
jecxz
jp
jae
das
mov
mov
inc
aam
mov
xchg
test
outsl
aam
fldcw
push
or
push
sahf
pop
int
xlat
cld
mov
sbb
fldenv
shrb
inc
mulb
sti
rcl
sbb
mov
mov
adc
rcrb
jmp
ja
ret
movsb
subb
icebp
ror
xchg
xchg
pushf
fistpl
int
outsb
cwtl
or
aaa
scas
xor
ds
maskmovq
testl
mov
cmp
gs
outsb
mov
xlat
in
movsl
xchg
popl
and
cmp
jp
gs
inc
arpl
shr
daa
jmp
pop
xor
sbb
fwait
push
nop
xchg
fsub
adc
add
mov
add
data16
fnsave
pop
popf
icebp
mov
mov
int
inc
sbb
mov
int3
call
mov
cltd
mov
mov
and
lea
mov
xchg
and
cmp
push
xor
pop
flds
inc
testl
push
jmp
add
into
inc
and
cli
jns
and
in
hlt
mov
cltd
aas
adc
add
inc
dec
dec
pop
bnd
dec
pushf
je
insb
out
push
shll
add
and
pop
lret
ja
dec
leave
push
cli
scas
stc
loope
cmp
je
rcl
call
lcall
mov
sub
mov
mov
mov
andl
push
test
or
mov
stc
popf
mov
xchg
dec
push
mulb
jo
mov
enter
sti
fldenv
and
cwtl
pop
push
push
inc
mov
rcrl
jnp
int3
mov
or
mov
imul
fiaddl
add
movlhps
lahf
inc
nop
pop
cwtl
shl
pusha
mov
inc
flds
lret
or
dec
mov
inc
push
fmull
ss
daa
push
mov
push
push
sub
sarb
sbbb
lahf
or
pop
xor
orl
test
loop
fs
insl
decb
add
push
in
and
lods
or
mov
aad
cmp
pop
mov
sub
test
sbb
fisttpll
lret
push
dec
bound
xchg
std
je
shlb
inc
jmp
and
mov
cmc
std
mov
adc
ficomps
hlt
hlt
sbb
push
inc
in
enter
inc
ja
ficomps
pop
mov
mov
dec
jb
std
out
pop
dec
sbb
loope
xor
stos
mov
dec
int3
cmp
inc
scas
adc
lea
insb
mov
adc
pop
mov
mulb
movsl
push
pop
jne
int3
xchg
xlat
pop
mov
xor
pop
repnz
loopne
lea
inc
leave
sbb
cli
iret
jbe
rolb
cmpsl
sbb
call
fidivs
test
repnz
sub
mov
add
int
pop
repz
add
clc
stos
sub
call
fwait
ljmp
inc
pop
xchg
hlt
scas
aam
mov
pop
sti
sub
fwait
cmpsl
adc
dec
shll
gs
xchg
lahf
hlt
xchg
sub
cmp
fdivp
outsl
push
add
icebp
mov
cmpsl
out
jl
cs
lret
push
adc
addr16
push
lods
pop
dec
scas
mov
inc
fwait
push
xchg
lods
js
pop
push
add
push
xchg
or
mov
or
aad
mov
cli
push
mov
pop
xor
sbb
repnz
jns
add
xor
rclb
cmc
rclb
outsl
mov
mov
negb
sti
lds
sbb
lea
imul
cmpsb
iret
fdivr
lret
xchg
ja
adc
or
adc
cs
or
jb
lods
dec
imul
loopne
sti
insl
jg
push
call
push
fbstp
cwtl
pop
nop
out
faddp
cmp
lcall
mov
inc
sahf
sbb
mov
sbb
push
aad
sbb
decl
add
cwtl
adc
inc
add
dec
dec
add
adc
ljmp
es
pop
adc
jae
sbb
sbb
dec
ret
int
push
rolb
out
fisubs
push
push
push
jg
pop
je
xor
in
jbe
dec
xlat
push
pop
xchg
sar
pop
jae,pt
mov
adc
stos
leave
rcll
scas
cmc
push
and
cwtl
push
lahf
mov
mov
inc
lock
sti
sub
or
xchg
sub
mov
or
mov
mov
xor
popa
hlt
andb
sahf
movsl
sbb
unpckhps
xor
jb
push
stos
jno
add
sub
xor
ret
pop
and
call
add
aam
mov
add
mov
data16
xchg
push
das
adc
sub
in
imul
cmpl
js
jge
or
fwait
adc
inc
jmp
or
jle
sub
or
cld
into
jnp
icebp
push
mov
xchg
mov
pop
sub
movsb
inc
mov
xchg
or
fimull
add
es
std
lock
cltd
and
and
jp
sbb
inc
sbbl
repnz
dec
loopne
xor
mov
jo
push
or
outsl
mov
lahf
je
pop
push
enter
mov
or
test
add
hlt
cltd
icebp
pop
nop
and
fistl
ljmp
cmpsl
inc
cltd
dec
and
fcomi
ljmp
xor
loop
mov
xor
xlat
js
push
xchg
icebp
jae
stos
fcoml
loope
sub
ret
out
push
or
jne
push
fldcw
push
xor
jne
js
jg
xchg
lret
in
sub
fstsw
push
ficoml
push
cmp
xor
push
popf
adc
jbe
mov
xchg
push
or
aas
add
jg
mov
cmp
mov
jnp
and
or
fs
cmp
and
lcall
ret
push
out
dec
stos
sarb
sbb
push
fidivrs
xlat
cmp
sbb
dec
inc
cld
stos
inc
pusha
mov
fwait
sub
out
dec
cmp
in
mov
sbb
fmull
add
mov
mov
pop
pop
xchg
aas
paddq
aas
pop
in
cmc
rcll
jl
sub
addl
les
jge
aad
push
movsb
jp
test
subb
out
push
mov
dec
mov
or
stc
pop
int3
lds
mov
mov
mov
pop
push
xchg
push
scas
je
insl
imul
movsb
test
xor
jecxz
arpl
sahf
jmp
test
in
inc
adcl
mov
xchg
lret
je
mov
sbb
sti
fwait
push
mov
fisttpl
in
lret
les
sub
bound
mov
cmpsb
shr
out
popa
call
lret
rorb
mov
dec
mov
add
mov
scas
call
mov
das
add
lock
repnz
push
sbb
popf
ds
addr16
lcall
and
dec
out
fisubrl
add
or
pop
inc
push
daa
subb
and
rorl
cs
push
pop
lret
and
negb
push
sub
hlt
and
push
aam
mov
adc
push
or
or
ficoms
or
sbb
inc
cmp
mov
shr
loopne
jg
shrl
dec
jo
hlt
inc
ret
inc
sub
cli
mov
syscall
or
outsb
push
inc
cmc
scas
xchg
jb
lods
test
pop
sbb
and
loop
lcall
pop
push
xchg
pop
push
jne
popa
jl
jmp
adc
and
sub
xor
xor
pushf
xor
movsb
cmp
inc
pop
cmp
mov
ss
xor
ret
orb
cmc
leave
xchg
in
push
pop
add
cmp
mov
test
cmp
push
adc
add
mov
in
and
jmp
lahf
adc
outsb
jae
jmp
sub
jge
movsl
pop
jl
jnp
pop
fs
xchg
dec
imul
les
fsubs
aad
xorb
inc
jne
lret
add
rcrl
inc
mov
xchg
pop
gs
arpl
out
outsb
mov
xchg
cmpsb
outsl
push
add
scas
sub
outsl
lea
cmovg
add
mov
jo
cmp
or
fidivs
add
add
xlat
xchg
inc
cld
pop
sub
movmskps
jb
push
out
inc
jmp
mov
arpl
push
in
add
mov
inc
pop
subl
testb
fcoml
sbb
sbb
fistps
dec
xor
popf
je
fistpl
enter
cmpsb
mov
pop
and
fsubrl
push
cmp
test
jnp
xor
adc
push
push
mov
xor
cmp
mov
rcrb
rorl
cwtl
lods
addr16
dec
mov
mov
cmp
or
xor
fdivrs
cs
mov
add
jmp
pop
mov
dec
je
cmpsl
jo
cmp
lock
push
push
sbb
insb
jae
add
sub
lcall
dec
jne
add
icebp
adc
xor
mov
push
popf
sub
sbb
mov
les
add
cmp
and
push
in
movsl
loop
push
xor
push
dec
pop
lcall
das
es
dec
adc
std
cmp
div
pop
cwtl
sub
leave
scas
push
popa
or
push
inc
inc
and
mov
repz
mov
xchg
jmp
mov
push
adc
stos
mov
or
popa
mov
stos
add
or
stos
jp
out
inc
adc
sbb
ror
clc
inc
outsl
cmc
cmp
pushf
adcl
add
lea
cmc
fadds
pusha
repz
and
xor
pop
sbb
in
out
rol
call
cmp
ds
add
push
push
push
jmp
call
lods
adc
jge
mov
mov
sldt
pop
insb
stos
ds
adc
loopne
into
adc
cmpsl
sub
lcall
aaa
sbb
sbb
inc
push
icebp
push
and
stos
sub
add
icebp
lock
mov
push
or
mov
int3
add
enter
mov
aam
inc
push
clc
or
mov
push
subl
lret
xor
lods
inc
inc
aaa
cmp
mov
imul
fstpl
int3
sbb
aam
fcmovnbe
out
loop
mov
push
lret
je
das
cmp
adc
negb
in
rorl
push
pusha
flds
addr16
mov
fidivl
sahf
ja
stc
xor
adc
in
data16
adc
sub
ret
pusha
ds
mov
xor
push
push
pmulhuw
push
ss
jbe
xchg
fists
cli
mov
sub
sub
sub
xor
int
mov
loopne
inc
fisubrs
mov
pop
lea
xor
fsubs
stos
ss
jno
stc
fisubs
test
in
pop
pop
adc
out
dec
mov
xchg
inc
call
jl
push
movsb
daa
pop
and
adc
stc
lret
outsl
xchg
arpl
pushl
push
push
jl
mov
pop
sbb
jecxz
sti
lret
sub
or
mov
dec
rol
iret
push
add
mov
or
pop
mov
leave
cs
sub
aam
add
push
lods
fnstsw
pop
dec
jbe
shll
sbb
mov
repz
sbb
bound
mov
dec
das
enter
mov
add
add
push
pop
mov
mov
aad
out
sub
xchg
dec
fidivl
pop
popf
sbb
arpl
push
int3
pop
enter
mov
jecxz
lcall
stc
sub
out
add
sbb
adc
and
xchg
push
pop
hlt
pop
bound
in
rcrl
aam
or
xor
test
call
adc
sbb
xor
das
inc
roll
negl
jecxz
mov
shll
lahf
fcomip
xchg
int
imul
loopne
xchg
add
icebp
aas
add
lods
fnstsw
stc
or
add
or
xor
pop
mov
jecxz
jmp
mov
xor
repnz
push
arpl
jb
lahf
fisttps
imul
dec
xor
push
ljmp
sub
les
divb
je
pop
add
icebp
sub
mov
lret
sub
sti
data16
pushf
scas
scas
jmp
jle
jb
dec
cltd
outsb
lcall
lods
jg
or
jne
add
ret
int
int3
mov
mov
inc
shl
test
ret
xchg
and
setp
pmulhuw
nop
fbld
push
in
sub
jge
sub
hlt
mov
pop
movsl
push
push
mov
ficoml
test
mov
cwtl
test
sub
sub
inc
test
cmp
cmp
adc
pushf
inc
imul
sbb
xchg
aas
cmp
mov
test
mov
sbb
sub
sub
clc
mov
xchg
cmpsb
imul
ds
fdivrl
stc
imul
aaa
roll
pop
cmp
cmc
ds
stc
mov
ficomps
popf
mov
pop
lods
mov
pcmpgtw
test
pop
jecxz
mov
xchg
out
and
xrelease
movsl
lret
lret
dec
pop
imulb
pop
pop
xchg
scas
in
movsl
mov
ret
mov
iret
jp
mov
push
adc
ret
add
sub
repz
cmp
push
push
jmp
mov
jns
mov
mov
ljmp
push
loopne
xchg
pop
and
mov
xchg
lock
add
outsl
rcrb
xor
ror
iret
js
cwtl
adc
xchg
lahf
out
mov
lahf
sub
inc
rcrl
mov
mov
push
xchg
lock
ror
adc
or
insl
mov
out
enter
std
ror
mov
repz
and
mov
mov
fmul
loopne
outsb
fsub
mov
int3
mov
pop
jl
shr
addr16
test
movsl
sub
xor
sbb
mov
jmp
lahf
xor
sahf
imul
xchg
mov
movsl
xchg
pop
test
outsb
sbb
push
push
adc
or
mov
xchg
inc
loopne
fldln2
out
jae
idivb
add
mov
xor
xchg
mov
adc
movsb
mov
cmp
adc
cmp
sub
push
jl
js
mov
sub
ficoms
jo
fnsave
xchg
stc
clc
xor
fwait
popa
mov
subb
loope
fdivr
mov
sbb
mov
loop
sti
loope
subb
xchg
roll
sub
sbb
clc
sub
aas
add
push
pop
and
cld
stos
and
adc
pop
rclb
mov
xlat
xchg
sbb
out
cmp
mov
out
push
sbb
out
outsb
movb
icebp
push
mov
jle
mov
lahf
mov
inc
add
rcrl
scas
jb
ja
adc
sahf
mov
repz
add
push
shrb
gs
filds
jae
push
add
and
sub
pop
sub
sarl
xor
ret
fcompl
xchg
rorb
lret
stos
fistps
jb,pn
pop
imul
sbb
mov
ds
or
pushl
shll
mov
sub
ret
leave
inc
or
inc
aas
mov
pop
lahf
shll
adc
jo
mov
adc
fists
xor
mov
outsl
cs
xchg
adc
sbb
pop
cmp
int3
popf
cltd
aas
adc
fistpl
mov
fwait
loope
mov
int3
mov
stos
stos
js
fisttps
mov
cmp
dec
aad
xchg
outsb
das
jbe
sbb
push
xchg
pop
sub
xchg
xor
lock
aam
les
lret
mov
enter
cs
cld
addr16
test
or
imul
dec
pop
add
addr16
movb
es
insb
adc
in
adc
mov
jne
popa
lahf
mov
mov
push
mov
push
shrb
xchg
das
pop
in
mov
pop
and
mov
add
lock
rcll
mov
fs
enter
add
mov
mov
pusha
out
aaa
sbb
mov
fisttpll
loopne
jo
xchg
sti
push
mov
daa
or
loopne
add
mov
mov
ret
test
aaa
lcall
iret
outsl
or
mov
mov
push
push
aaa
inc
movups
in
adc
pop
ret
test
arpl
jl
xor
out
inc
test
ljmp
data16
pop
int3
sbb
add
sub
lahf
jae
sbb
xorl
add
lret
xor
inc
orl
add
fimuls
inc
sub
mov
push
rcl
adc
out
daa
push
dec
push
gs
cwtl
mov
lock
mov
outsl
jae
mov
xchg
xchg
xchg
fcoms
stos
insl
out
pop
inc
ret
sub
xchg
pop
cltd
pop
ret
dec
lret
push
jb
mov
pop
mov
jp
pop
lods
sbb
cmc
xchg
shrb
pop
jg
ficoml
int3
adc
sbb
jl
scas
sbb
pop
jle
fsubl
push
sti
int
imul
jle
adc
pusha
sub
adc
mov
or
push
inc
jo
or
lea
ret
fiadds
pop
lret
scas
divl
into
lea
adc
xorl
sbb
pop
fildl
dec
dec
jne
push
int
mov
cmp
mov
leave
push
stc
loope
scas
popf
dec
or
mov
lea
scas
and
in
icebp
mov
adc
fmulp
int3
inc
push
xchg
lcall
jae,pn
xlat
mov
mov
andl
iret
insl
xor
add
cwtl
cmp
out
cmp
pop
pop
sbb
xchg
subl
fstpt
out
jl
or
test
add
dec
sbb
ja
cld
insl
add
jmp
push
push
imul
daa
test
jge
push
fildll
pop
roll
lahf
enter
aas
pop
adc
dec
fcmovnu
aad
popa
ja
in
xchg
pop
iret
sbb
das
into
push
push
gs
lock
ds
call
pushf
mov
test
sbb
mov
mov
ja
push
xchg
cmpsb
add
push
loop
bound
cmp
in
ljmp
inc
adc
push
hlt
adc
fcmovnbe
or
loopne
loop
or
sub
lods
bound
adc
nop
dec
cwtl
nop
xor
ret
dec
aam
and
cs
scas
adc
repnz
mov
jae
imulb
sub
xchg
mov
add
cmpsb
add
fnstenv
aaa
cmp
cmp
es
mov
or
cs
jno
mov
inc
sbb
pushf
out
adc
jae
rorl
and
sub
and
dec
pop
fsts
mov
or
inc
cmp
pushf
int
mov
push
std
add
mov
inc
sbb
inc
dec
add
ljmp
sub
fistl
inc
cmpsl
lock
jae
ss
jp
icebp
push
dec
mov
jmp
jg
add
add
push
or
mov
jmp
and
test
test
xorl
mov
and
fildll
pop
sub
in
dec
mov
ljmp
enter
ret
add
adc
jle
inc
xor
leave
sbb
shll
add
out
pop
xor
in
movb
push
addr16
popf
les
rolb
gs
jns
xor
sub
mov
popa
aas
xchg
cmpsb
jne
test
cs
adc
mov
iret
loopne
ss
gs
pop
call
int
addr16
popf
test
repnz
dec
xor
idivb
lea
jbe
filds
stc
shlb
pop
les
mov
pop
and
imul
jge
jns
arpl
scas
int
pop
or
mov
std
adc
lea
cmpsb
adc
in
ret
push
sbb
xor
sub
clc
imul
add
scas
and
imul
mov
sbb
int
push
js
lret
lods
jp
push
cmp
add
jmp
test
sbb
daa
and
mov
mov
mov
push
outsb
sbb
stos
jno
mov
sbb
mov
test
out
incl
add
or
sbb
push
incl
orb
fsubrl
mov
cltd
jo
std
pop
mov
sbb
inc
fidivrs
iret
inc
lods
push
aad
sahf
mov
cmp
xchg
mov
jo
hlt
inc
ljmp
imul
sub
dec
lret
push
mov
in
shrl
jp
sahf
ss
testl
mov
adc
cltd
mov
mov
mov
jmp
add
gs
or
mov
sub
popa
adc
mov
dec
push
sti
pop
pop
shlb
ret
or
and
push
push
fstpt
sbb
imul
loope
clc
pop
pushf
orb
je
in
outsl
add
addl
mov
mov
out
out
push
mov
cld
clc
mov
mov
rcll
push
pop
imul
stc
jns
and
xchg
push
mov
loope
pop
and
orl
fmull
adc
loop
negl
jle
roll
int3
pop
outsl
gs
lret
aad
sub
and
dec
jae
lods
jno
lods
add
out
loopne
or
mulb
xor
jl
fsubrl
and
add
cs
fstpt
adc
lret
xchg
sub
std
or
adc
outsl
test
jo
push
xor
sbb
mov
loopne
cmp
frstor
dec
loopne
xlat
pop
xchg
push
pop
ss
loope
ljmp
ljmp
xchg
push
pop
jb
cs
dec
pop
std
cs
xlat
roll
xchg
inc
push
in
add
fwait
dec
out
in
xchg
pop
jno
pop
lods
xchg
jbe
xchg
das
mulb
fwait
js
adc
sub
mov
icebp
fidivrl
dec
inc
imul
pop
inc
push
bswap
or
je
pop
notb
add
cmpsb
fists
and
sbb
mov
mov
push
pop
push
sub
rolb
dec
inc
mov
outsb
mov
jns
jbe
pop
push
lods
push
into
bound
ret
loope
cli
and
into
push
arpl
push
int3
call
jnp
push
jecxz
mov
or
test
xor
stc
stc
dec
cmpb
sbb
in
xor
lret
xlat
push
push
movb
pop
movsl
push
mul
cmpsb
jp
jb
ja
adc
out
jbe
jmp
in
pushf
adc
arpl
dec
adc
rorb
cmc
inc
mov
push
or
mov
add
sbb
insb
test
insl
jo
push
sbb
push
xor
mov
push
push
push
mov
gs
les
nop
js
roll
dec
jecxz
mov
bnd
mov
jg
mov
push
pop
cwtl
jnp
pop
ficoms
movsl
fistpl
outsb
stos
fdivrl
lcall
jb
pop
push
nop
jno
xchg
out
shll
cs
pushf
lahf
and
cmp
mov
aaa
mov
call
add
pop
push
mov
pop
xlat
pusha
mov
js
cmp
inc
idivl
clc
jae
sub
adc
stos
inc
sahf
jb
jns
movsb
push
je
loope
adc
mul
repz
push
int3
mov
mov
icebp
outsb
into
xchg
inc
jns
aam
xchg
push
xor
and
push
scas
mov
cmpsb
jge
jo
add
pop
sub
dec
ret
push
repz
movsl
aad
jge
pop
test
add
dec
cs
xchg
int3
iret
shrb
out
adc
neg
outsl
cs
or
imul
outsl
out
je
sbb
rcl
fidivs
cmpsl
adc
movsb
add
popf
mov
xor
scas
xchg
pop
inc
xlat
add
ss
pop
ret
mov
popf
leave
xchg
jecxz
and
push
outsl
dec
cmpsb
aas
pop
rcrb
movsb
test
xchg
pop
sbb
ret
rcl
sbb
cmp
fwait
lea
stos
in
inc
stos
or
xlat
xor
pusha
xor
hlt
xchg
and
mov
add
mov
cmp
jnp
mov
lods
add
push
or
mov
rcll
mov
dec
jge
xor
jo
fidivrl
mov
aaa
sbb
inc
in
xchg
nop
push
jmp
pop
cmpsb
inc
push
sub
push
loop
dec
cmc
cmpl
cmpl
ficoms
adc
aaa
loop
cltd
add
int
mov
mov
int
push
add
and
cltd
shll
out
mov
ss
fwait
std
inc
xchg
rolb
mov
pop
sbb
stos
mov
jns
mov
push
xor
fidivs
loopne
test
scas
lds
push
dec
leave
jno
sbb
pop
or
cmp
dec
addr16
sbb
dec
push
sbb
dec
add
dec
mov
dec
push
je
int3
or
adc
adc
scas
or
sub
leave
daa
lret
je
into
push
arpl
add
call
xchg
inc
cmc
inc
ret
loop
mov
push
cltd
or
xchg
inc
shlb
ret
jl
jb
push
mov
mov
pop
cld
jne
lret
or
imul
lea
sahf
lods
int
xchg
ret
xchg
sbb
in
mov
enter
dec
das
push
ret
sbb
aam
jge
jecxz
and
push
push
inc
shr
cli
mov
ss
shl
mov
add
push
sub
dec
iret
mov
lods
and
pop
jno
stos
mov
pop
sub
cmpsl
lcall
xchg
loope
std
pop
or
push
test
fs
jo
jb
jnp
cltd
ret
imul
xchg
jg
nop
scas
in
sub
pop
push
stos
xor
movnti
add
xchg
es
mov
fnstcw
jg,pn
inc
xchg
mov
repz
das
je
dec
inc
mov
push
cli
or
xchg
pop
ret
jno
subb
lods
push
and
mov
fnsave
mov
out
jne
lock
xchg
mov
push
les
push
and
ja
outsb
sbb
shrb
mov
in
incb
or
mov
cmp
mov
push
imul
stc
and
jl
into
xorl
or
aaa
bound
test
ret
icebp
pop
fdivrl
sarl
mov
inc
sub
push
xchg
data16
jns
lret
lock
iret
sbb
popf
aas
nopl
pusha
in
incl
in
pop
out
imul
sbb
repnz
icebp
inc
xor
sub
and
aad
lcall
or
sti
sbb
sbb
sbb
je
mov
sub
mov
and
std
mov
push
mov
adc
dec
mov
mov
dec
subl
and
xchg
popa
cs
lods
mov
xchg
incl
loop
mov
inc
jne
xor
es
xor
pop
ret
out
fxch
cmc
xchg
lds
pop
cmp
jge
mov
jno
repz
cmpb
cmp
outsl
dec
lods
xchg
out
pop
jbe
insl
jge
mov
sbb
hlt
fisubrl
xchg
cmp
call
adc
sub
inc
adcl
dec
in
mov
add
pop
adc
cmpl
out
inc
clc
fmull
jb
push
adc
sarb
stc
icebp
test
or
daa
jecxz
inc
clc
out
add
xchg
dec
sarl
subl
xchg
mov
scas
push
dec
adc
faddp
inc
jo
int3
cmp
das
mov
incl
mov
repnz
inc
push
jle
ret
jbe
jp
xorl
stos
cmp
test
nop
mov
xor
mov
out
pop
push
lds
inc
inc
jne
pop
pop
or
aas
mov
mov
xchg
movb
sbbb
jecxz
pop
dec
lock
inc
test
xor
push
push
adc
stc
mov
cmc
leave
out
add
cmp
and
dec
push
sti
adc
sbb
xchg
int3
nop
jo
shld
pop
gs
pop
adc
jae
iret
nop
ss
roll
sbb
stos
ja
dec
clc
mov
mov
xchg
scas
mov
sub
fs
loop
add
adc
jge
jg
sarb
fnstenv
lds
imul
das
push
jb
js
cmp
sub
jl
cmp
imul
loop
ret
xchg
outsb
in
sarb
gs
fwait
adc
movsl
dec
out
data16
jle
out
cmp
mov
bound
cmp
jo
xchg
shlb
mov
repnz
cmc
popa
enter
popa
xchg
mov
aas
xor
ljmp
pop
stos
push
out
pushf
jno
mov
and
cltd
in
pusha
cltd
incb
xchg
dec
pop
and
xchg
std
test
mov
sub
mov
jbe
pop
mov
aam
pop
sti
out
pushf
fisttpll
cld
imul
jbe
addr16
push
lds
int
cmc
sub
mov
out
push
test
loop
or
sbb
cwtl
sub
ret
pop
xchg
push
adc
xor
stc
push
or
aad
push
ficomps
add
sahf
xor
sbb
push
push
mov
ljmp
shll
mov
test
popf
add
out
fiadds
add
or
repz
xchg
fnstcw
dec
cmc
aam
shrl
pop
aam
clc
cs
scas
icebp
scas
dec
or
and
jecxz
stos
sbb
insl
loope
mov
arpl
nop
mov
push
lret
dec
test
sbb
sbb
push
adc
push
repnz
mov
mov
adc
cmp
fbld
lret
cli
xchg
mov
lods
cmpsl
leave
add
mov
test
addr16
fstpt
add
mov
cmp
or
jp
mov
inc
jne
jmp
repnz
and
mov
xor
pop
mov
in
cmp
pop
add
mov
sbb
lret
out
sbb
mov
loop
daa
scas
fsts
gs
repz
cmp
outsb
push
jbe
mov
popf
xchg
xchg
pop
xlat
out
pop
ja
cmp
outsl
pop
adc
in
xor
leave
push
shl
add
dec
sbbb
aam
cmp
ret
cmc
xor
and
test
hlt
xlat
jge
ret
loopne
mov
addb
lds
lret
out
jmp
or
aad
cmp
pop
jns
mov
dec
fcoml
lcall
jne
xchg
enter
test
dec
xchg
pop
or
pop
jo
push
jns
jns
icebp
mov
dec
dec
mov
subb
pmulhw
movsl
aam
incl
inc
cltd
cmp
dec
mov
dec
fcomp
fnstenv
jl
push
inc
fcompl
xlat
repz
inc
daa
popf
test
cmc
adc
scas
outsl
sbb
jge
les
les
and
sub
lret
mov
pop
mov
pushf
dec
aam
pop
adcb
push
push
out
sub
mov
shll
out
mov
ret
adc
pop
dec
icebp
nop
rorl
lods
jg
aad
inc
icebp
mov
outsb
bound
or
push
jnp
mov
mov
lret
sbb
push
mov
lods
or
sbb
idiv
stc
hlt
inc
test
push
add
in
std
jne
lret
mov
mov
and
add
and
mov
pop
ret
cmp
or
dec
jmp
pop
imul
in
aad
popl
fsubrl
data16
xor
mov
rcrl
outsl
or
xchg
jnp
adc
imulb
jecxz
pop
or
xchg
mov
je
in
out
or
sub
jne
sub
add
mov
pusha
add
push
push
fidivrs
inc
sbb
leave
out
add
imul
pop
mov
cmp
mov
inc
pop
cltd
adc
test
jle
xchg
xor
int
ficoml
sti
cmpsl
pop
mov
add
xlat
xchg
push
push
adc
xor
mov
lret
adc
adc
mov
xchg
mov
push
je
cmp
mov
mov
push
arpl
int
ret
adc
mov
dec
pop
es
in
popa
push
mov
pop
adc
jmp
xchg
xchg
cmp
dec
sbb
fwait
pop
mov
fimull
scas
dec
mov
push
jle
jne
dec
movl
lds
fsts
pushf
and
inc
test
ret
and
movsb
sub
aaa
dec
dec
arpl
adc
hlt
cmp
xor
push
repz
dec
lcall
inc
sub
mov
jne
add
testb
inc
jmp
and
rorb
or
cmpsb
lret
fcomi
sub
mov
pop
inc
xor
sub
adc
pop
shll
int3
sub
repz
mov
jle
xor
inc
js
or
cmpsb
cmp
lods
mov
aas
fidivrs
xor
xchg
loope
test
rorb
das
pmulhw
sbb
mov
int3
cmc
leave
cs
push
or
negb
add
rorb
mov
dec
jnp
insl
cltd
mov
adcl
mov
aam
and
aam
test
ja
cmp
inc
jae
cmp
hlt
out
push
roll
cli
repz
and
xor
notb
dec
cmp
sub
dec
mov
mov
pop
jb
ret
icebp
in
and
jb
sbb
addb
mov
mov
movsl
sub
cmc
je
cmp
jmp
lahf
cmpsb
xorl
push
adc
mulb
into
ror
mov
or
adc
pop
js
inc
enter
shrl
movsl
outsl
add
dec
fadd
fsubs
stc
jg
int3
mov
push
aaa
mov
out
jmp
pushf
xchg
adc
cmp
mov
sbb
cmp
rep
add
push
mov
pop
push
ljmp
adc
jbe
addb
ljmp
bound
push
in
xor
dec
inc
hlt
mov
inc
mov
lds
pusha
jae
data16
push
cwtl
adc
stos
cmpsl
jne
or
rcrb
jp
or
ret
ret
insl
inc
insb
aad
xchg
popf
jl
out
lret
stos
out
push
xorb
or
notb
mov
and
in
push
aaa
insl
lea
mov
test
out
cmc
jo
gs
aad
jp
mov
sbb
mov
in
imul
in
dec
inc
cmp
aam
cmp
std
mov
pop
mov
bound
jne
sarb
sbb
popf
in
popf
stos
pushf
rcrl
loope
or
jno
sub
and
xor
loope
in
adc
xor
aad
mov
jbe
jle
jle
leave
test
mov
imul
test
cmp
mov
mov
or
adc
shll
cmp
gs
ljmp
cmp
popf
mov
mov
ljmp
testl
iret
mov
adc
dec
and
dec
pop
flds
out
cmp
fimuls
sub
push
xchg
sub
adc
jns
jnp
ja
cld
cmpsl
mov
xchg
les
pop
ss
notb
jnp
addl
mov
dec
xchg
jnp
add
insl
push
jl
bound
push
daa
cmp
and
xlat
jmp
jae
outsb
stc
dec
fnstenv
mov
xchg
ret
xor
lcall
cmp
mov
imul
imul
add
shlb
dec
inc
inc
jp
xlat
jns
pop
notb
decl
sub
aas
call
cltd
arpl
imul
jno
xor
negl
fsubl
jnp
arpl
jno,pt
sbb
ret
mov
sub
pop
lret
fstpl
adc
test
sbb
adc
pushf
fimull
mov
dec
lret
cmc
dec
pushf
inc
cli
shll
sub
insl
jecxz
push
mov
push
jo
fists
push
shlb
xchg
mov
jae
rcrl
pop
test
push
fs
jno
pop
outsb
jle
mov
push
add
inc
mov
push
xchg
stos
mov
fstp
cmc
mov
mov
cld
icebp
cld
lds
cmp
add
or
lahf
and
add
mov
pop
mov
pop
xor
scas
and
insb
xchg
pop
jle
nop
xchg
aaa
xor
xorb
jg
lret
push
push
movsl
filds
xor
imul
inc
xlat
out
inc
jle
adc
pop
popa
test
out
out
cmc
jg
and
insl
pop
mov
mov
mov
sub
cmc
xor
xlat
rcrb
mov
inc
sbbl
or
ret
mov
adc
push
xchg
xchg
mov
dec
xor
int
inc
sbb
call
xchg
ret
pop
mov
mov
test
adc
call
and
add
mov
jae
aad
xchg
into
xchg
in
ja
and
lds
add
pop
inc
test
es
push
mov
jg
dec
push
mov
cs
jo
movsb
inc
aaa
in
cli
nop/reserved
cmp
addb
mov
lcall
in
push
and
or
jne
sahf
sub
mov
int3
inc
xorl
in
push
xchg
aaa
or
sbb
int3
cmp
lcall
dec
push
aaa
cld
insl
aad
fidivl
cltd
loop
test
sbb
enter
xchg
xchg
cmp
cmpsl
es
fistpll
inc
ret
cmpb
inc
dec
and
and
inc
test
push
in
mov
in
mov
push
ret
xor
ja
push
inc
cmp
xchg
ret
iret
pushf
jbe
jne
outsb
xor
rcl
mov
adc
shrb
arpl
cmpsb
mov
xchg
or
movsl
add
xor
push
into
push
insb
sar
pop
adc
push
and
pop
shll
xchg
out
push
stos
fisubl
stc
roll
icebp
cmp
in
rorl
inc
mov
lods
or
mov
cltd
push
adc
and
jne
ret
inc
into
mov
pop
add
dec
call
popa
lahf
xor
jmp
jns
addb
movsl
lea
xlat
movsl
mov
cmc
cmpsb
add
and
stc
sub
mov
aaa
jb
pop
in
dec
arpl
pushf
mov
sbb
push
lds
into
leave
cmpsl
and
inc
ror
inc
ja
into
dec
orb
push
arpl
fsubl
xchg
xchg
hlt
pop
push
loopne
dec
popf
pop
xor
add
lock
xor
fwait
push
mov
je
pop
insl
fistps
pop
push
xchg
jge
push
mov
mov
adc
imull
leave
push
cld
sti
mov
add
std
mov
sub
dec
push
leave
fisttpll
das
pop
scas
in
rorl
sub
mov
subb
in
push
mov
xor
fistl
call
jmp
lret
add
lds
fcoms
jo
xor
mov
test
or
push
stc
call
xchg
leave
jge
sbb
arpl
sbb
xchg
pop
insl
mov
jmp
xchg
add
les
inc
mov
and
or
push
mov
mov
addl
test
fimuls
sub
in
movsb
push
add
or
imul
lods
mov
add
outsb
add
push
xchg
mov
dec
jecxz
scas
jne
cmp
aad
stc
les
dec
mov
adc
xchg
js
notb
sbb
add
inc
lret
cmp
stc
int3
orl
lahf
mov
mov
aaa
cltd
mov
rolb
mov
in
mov
jmp
mov
mov
mov
popf
loopne
xchg
imul
int3
je
aaa
cltd
faddl
add
leave
pop
pop
jns
adc
pop
cmp
jno
aaa
pop
add
icebp
add
cld
sub
mov
jns
std
mov
adc
ss
fwait
dec
insl
stos
pusha
cmpl
stos
xchg
dec
push
sbb
ja
test
sbb
xor
cld
sbb
sarb
sahf
rolb
popf
in
inc
dec
mov
inc
mov
lret
addl
xor
mov
cwtl
and
lea
hlt
xchg
cmp
in
cmpsl
int3
dec
insl
inc
jg
in
bound
xchg
mov
mov
aaa
xchg
popa
push
fldenv
iret
jg
leave
mov
jge
jb
ljmp
mov
loopne
xchg
cmpsl
adc
lahf
sbb
fmul
sbb
lret
mov
cmpsb
aam
scas
popa
daa
inc
xchg
clc
std
push
dec
add
inc
adc
jmp
xchg
scas
inc
jbe
mov
test
out
aam
pop
xor
xchg
in
push
push
mov
aas
in
jle
lahf
cmc
pushf
aad
mov
pop
mov
xor
dec
or
inc
cmpb
stos
add
into
mov
movsl
aas
sti
or
push
inc
test
out
clc
xlat
leave
mov
xor
add
xchg
xchg
int
cli
popa
enter
lret
dec
inc
inc
std
les
jbe
test
dec
or
cmpsb
sub
loopne
pusha
or
xchg
jne
loop
or
jmp
cmp
xor
mov
xor
jge
push
xchg
ja
jno
out
pop
mov
cmp
out
add
sub
orb
cmp
add
push
jle
xchg
pop
dec
fnstsw
in
inc
xchg
insb
cmc
xchg
in
daa
push
insl
xor
mov
sub
js
push
test
xchg
mov
push
out
stos
xor
inc
test
jl
pushf
scas
dec
testb
mov
imul
insb
mov
add
push
and
push
andb
jp
movsb
lcall
inc
cmp
repz
mov
dec
push
inc
jg
lods
loope
pop
nop
imul
loop
stos
shrb
nop
mov
mov
daa
call
pop
xor
sbbb
in
out
fsubl
add
xchg
jo
rclb
call
ja
pop
mov
mov
test
mov
enter
mov
bound
hlt
mov
lods
int
out
inc
loop
pop
push
mov
xchg
dec
inc
xchg
push
and
pop
test
das
adc
jmp
cltd
cmpsl
sarb
in
dec
jnp
cmc
mov
adc
inc
stos
les
and
or
mov
outsb
mov
pop
sbb
gs
out
pop
test
sub
inc
data16
push
out
mov
je
pop
bound
mov
mov
mov
mov
sbb
ds
jecxz
or
outsb
or
or
imul
je
xchg
jle
cmc
or
nop
pop
fmul
js
inc
inc
push
rcrl
popa
loop
ss
andb
sub
dec
stc
shll
push
lcall
cli
add
sbb
mov
or
ja
fwait
sub
into
bound
in
push
mov
mov
aas
add
or
sbb
jno
dec
in
mov
decb
jb
stc
mov
add
lret
popa
jmp
les
mov
and
or
sbb
jmp
xchg
adc
mov
sub
enter
cmp
pop
fdivs
ljmp
mov
loopne
cmp
inc
stos
adc
loope
sub
outsl
mov
insb
inc
cmpsl
or
stos
push
btr
sub
mov
pusha
dec
pop
inc
shlb
mov
ror
mov
subb
add
jb
cmp
push
or
sbb
jge
push
imull
push
dec
and
imul
or
cmp
adcb
jo
sbb
cmc
jp
lds
nop
sbb
sbb
inc
repnz
rorl
push
loop
pop
dec
mov
xor
dec
adc
popf
repnz
int3
pusha
mov
sbb
movsl
icebp
les
leave
cmpb
jl
jmp
jl
xor
sbb
mov
je
aam
adc
sub
jno
shl
insb
or
jge
pushf
push
popf
sbb
jo
mov
jno
xchg
adc
lahf
loop
ljmp
les
je
push
rclb
mov
rol
mov
subl
jge
andb
pop
mov
lret
xchg
lods
lods
rol
xor
imul
shlb
out
jae
in
cmp
std
inc
sub
fimuls
stos
int3
mov
in
inc
push
aaa
stos
cmp
sbb
cwtl
movsb
or
sub
adc
cmc
cmpsl
cltd
sbb
sub
std
jae
into
or
push
out
ret
dec
adc
adc
xchg
test
pop
cli
aad
xchg
nop
adc
mov
mov
xor
add
adc
fsubl
inc
pop
pop
mov
icebp
push
shlb
add
sbb
jl
mov
jge
lods
imul
outsl
sbb
lcall
aad
add
repz
pushf
pusha
jmp
pop
add
or
jno
das
ss
adc
out
or
sub
call
shlb
in
arpl
stos
push
pop
das
arpl
sbb
dec
push
ljmp
mov
push
inc
repz
pop
ret
sub
or
xchg
enter
dec
int
adc
add
cli
mov
jbe
leave
cmp
stos
sbb
test
mov
push
ficoms
int
adc
jl
test
or
insl
mov
push
popa
mov
dec
out
aaa
xchg
cmpsl
xor
pop
push
repnz
stc
mov
add
jge
cmc
mov
cmp
xor
sti
lret
cli
rolb
xchg
lds
fadds
mov
cli
mov
cli
cmp
aam
out
icebp
jl
xchg
jl
in
xchg
dec
outsl
adcl
aam
jne
popa
jecxz,pt
int3
mov
jp
pop
stc
mov
loopne
pop
xchg
clc
dec
movsb
jmp
add
dec
popf
cmpsb
movsb
pop
inc
and
inc
and
loope
mov
inc
lea
dec
lcall
xchg
iret
hlt
outsb
cmp
insl
mov
sahf
jg
mov
sbb
adc
ret
cwtl
mov
push
clc
icebp
mov
mov
in
divb
jne
lock
sarl
jmp
mov
xlat
xchg
sbb
decb
cmp
js
and
push
or
xchg
xchg
ret
and
fdiv
mov
notl
pop
ss
inc
mov
sti
in
mov
aas
adc
xor
dec
daa
jmp
insb
or
inc
mov
pop
pop
push
inc
and
mov
aas
insl
pop
sub
jp
cwtl
mov
in
adc
adc
cmc
lcall
or
push
out
cltd
sbb
fwait
cmc
cli
jecxz
fwait
push
or
push
xlat
negb
decl
neg
pop
neg
dec
mov
aas
dec
andb
cld
outsb
add
ja
data16
jae
cmp
push
or
push
mov
dec
jmp
int3
fadds
ficoms
divb
sub
or
dec
cld
mov
push
add
ja
clc
idivl
movsb
mov
push
sbb
sbb
cmp
xor
lahf
je
aaa
sub
adcl
iret
push
js
fcomp
ret
cmp
lahf
cli
adc
fiadds
imul
sahf
fildll
mov
ds
gs
pop
mov
fwait
push
mov
or
mov
ss
andl
cmp
mov
push
clc
jno
into
pop
inc
inc
sub
mov
push
dec
inc
mov
sbb
mov
cmp
enter
outsb
ds
pop
lods
jecxz
inc
stos
insl
push
xor
add
loopne
mov
clc
dec
ss
push
xchg
sub
push
xchg
sub
outsb
shl
mov
ljmp
and
and
push
fisubrs
pop
insb
jge
add
push
push
xchg
in
mov
or
adc
mov
and
aaa
orl
in
and
push
lds
movsl
rcrb
imulb
lcall
orb
inc
nop
nop
lret
out
jno
in
xchg
pusha
in
std
dec
pop
inc
sti
daa
cmp
cld
push
xor
jmp
lret
ds
test
jno
jp
scas
jle
loope
cmc
mov
ljmp
test
sbb
mov
dec
cmp
fistps
int
xlat
in
cmp
testl
fcoml
and
sahf
adc
push
movntps
ljmp
inc
jmp
mov
in
jp
push
int3
jge
jo
lods
das
adc
sahf
cwtl
cmc
test
cmc
sub
pop
out
inc
mov
cld
pop
mov
insl
cwtl
cltd
bound
imull
mov
fwait
mov
or
repz
add
lods
call
sbb
mov
xchg
mov
testl
cmp
xchg
mov
xchg
inc
adcb
mov
push
dec
clc
or
sub
and
sub
dec
mov
insb
cmp
push
sub
mov
pop
mov
sub
fnstsw
cli
pop
fisubl
mov
lret
mov
pop
pop
cmpsb
lods
dec
test
imulb
cmp
xor
sti
cmc
xchg
das
cmp
adc
pop
push
imul
jge
sub
jle
push
sub
push
call
xor
lahf
jbe
add
sbb
xchg
mov
push
xor
xor
enter
sbb
insb
shr
shll
jns
jns
fwait
adc
mov
addr16
ret
and
mov
loope
ljmp
pop
les
lahf
mov
push
enter
ss
xchg
inc
sbb
or
fdivl
pop
xchg
add
inc
repnz
leave
inc
outsl
lods
push
std
movsl
add
je
int3
xchg
roll
mov
loop
incl
mov
movsl
xor
inc
fildl
fistpll
cmp
cmpsb
inc
add
mov
jo
rcrb
pop
pushf
pop
ljmp
inc
mov
aaa
mov
adc
shlb
adc
test
add
dec
lcall
inc
dec
dec
cmpsl
sbb
notb
push
sub
movsl
inc
push
jno
mov
fcmovnb
mov
mov
jne
lret
test
loopne
bound
adc
and
in
ds
jmp
xor
sub
mov
or
pusha
add
repnz
push
adc
inc
aas
je
icebp
aaa
je
mov
daa
flds
pop
mov
sahf
adc
pop
xor
fistps
insb
adcb
jecxz
scas
mov
mov
push
jnp
movsl
sub
xchg
sbb
fcmovu
pop
mov
mov
repz
mov
rcl
in
pop
xchg
lret
mov
out
mov
push
in
scas
pushf
arpl
cmp
mov
outsl
lret
cmpsl
inc
jecxz
fildl
mov
cltd
inc
add
pop
mov
jae
push
loope
xchg
test
mov
adcl
das
push
test
add
mov
push
cwtl
mov
dec
scas
scas
repz
cltd
repnz
imul
mov
rolb
sbb
mov
adc
inc
push
lds
aaa
adc
mov
outsb
mov
std
and
sbb
in
sub
shrb
inc
pop
cmp
jle
aas
jb
push
mov
inc
push
and
aaa
mov
push
push
sbb
dec
call
mov
mov
jmp
out
lods
jnp
jbe
sarb
xor
out
rclb
xchg
inc
test
mov
jmp
das
jno
repnz
imul
cmp
cmp
aas
sahf
lcall
aas
sbb
jp
lahf
aaa
repnz
push
inc
cli
mov
fldl
mov
movsl
sub
xchg
pop
fcmovnb
test
les
lcall
cmp
fimuls
add
mov
test
imul
push
mov
in
aad
push
pop
out
xchg
xor
ret
pop
lret
outsl
cmp
mov
cs
shlb
outsb
dec
mov
or
push
aam
out
or
das
inc
outsb
jg
cmp
mov
pop
fdivr
mov
js
push
mov
sti
or
in
shrl
test
jo
lcall
adc
and
inc
push
lock
sub
fisubrl
xchg
mov
insb
pop
mulb
imul
icebp
stos
cmpsl
adc
sbb
mov
out
cmc
sub
mov
popw
sbb
dec
fldt
iret
xor
mov
sbb
stos
add
dec
cltd
sbb
inc
aas
enter
mov
popa
cmp
mov
aaa
fldl
popa
ja
mov
repnz
push
cmp
or
mov
lcall
scas
out
ja
push
jb
pop
pop
and
mov
or
clc
cwtl
inc
inc
mov
adc
dec
xor
ja
scas
test
lods
inc
sti
cmc
fistpl
add
in
push
sub
sub
lcall
loop
out
mov
jp
cs
je
popf
shll
pop
pop
mov
pop
and
or
test
xchg
movsb
rcrb
cwtl
push
fiadds
mov
add
lock
filds
cmp
adc
clc
and
mov
adc
mov
incb
dec
inc
fs
jg
push
mov
int3
js
xchg
fistpl
push
faddl
xchg
push
add
pop
mov
mov
lods
jmp
scas
xchg
scas
out
loop
stc
adc
lcall
inc
mov
pop
dec
int3
rep
inc
mov
inc
movsl
gs
xor
push
out
out
xchg
mov
pop
jecxz
xlat
adc
pop
dec
or
mov
mov
sbbl
jmp
ljmp
and
xlat
out
jl
push
and
inc
and
outsb
mov
xchg
mov
add
pop
lods
dec
cmpl
mov
lret
push
sub
fistl
dec
jmp
leave
xchg
xlat
jno
jns
leave
inc
inc
icebp
add
test
inc
adc
sub
lcall
gs
sahf
jl
jb
add
inc
push
mov
cltd
arpl
xchg
mov
lea
and
leave
lock
add
mov
inc
fwait
sti
sbb
jb
pusha
imul
xorb
ret
sub
cmp
mov
movsb
int
push
mov
bound
pop
daa
fisubrl
addb
sub
jecxz
dec
pop
cmp
movsb
mov
faddl
popf
out
mov
cmp
popa
minps
jno
cmpsl
mov
push
lods
sahf
bound
mov
ss
add
or
push
hlt
jg
push
xchg
rclb
add
sub
cmp
in
mov
jb
ja
mov
or
ret
fsubs
adc
or
jo
cmp
test
push
cmp
icebp
adc
mov
outsb
outsl
sarl
xchg
pushf
pop
mov
fmul
mov
stos
jmp
ror
add
xchg
test
stc
pop
pop
repz
push
jp
mov
xchg
pop
mov
and
in
loope
add
test
add
adc
push
out
jno
or
div
popa
sti
mov
mov
or
lock
jns
leave
or
aaa
iret
aam
xor
int
xor
xchg
aaa
out
scas
adc
repz
lahf
jns
push
dec
mov
add
push
scas
push
cmp
out
push
cmc
sarb
cmp
mov
mov
enter
gs
mov
insb
jo
enter
sbb
repz
jae
sbb
pop
js
or
adc
xchg
adc
mov
adc
add
inc
sbb
inc
jge
mov
cld
je
enter
cld
outsb
into
mov
lret
icebp
dec
loop
mov
jge
or
int3
popl
lret
sbb
ret
rorb
push
add
xchg
mov
pop
push
push
hlt
test
test
lods
loop
cmp
lea
mov
push
jo
adc
pop
call
int3
clc
xor
mov
xor
jo
mov
fwait
loop
or
andb
lret
mov
push
js
int
mov
insb
lods
icebp
cmp
mov
pop
push
outsb
ds
das
inc
sbbb
inc
shll
jle
jecxz
add
sahf
aad
inc
lock
push
inc
scas
stos
dec
loop
out
in
popa
cmp
xchg
mov
mov
mov
pop
leave
aaa
movsl
out
add
cmpsl
inc
jns
add
loopne
cmc
js
int
push
mov
push
std
je
addr16
movsbl
inc
repz
pop
xchg
int3
dec
xor
push
xchg
push
or
cmc
inc
cmp
add
cli
lock
mov
xor
add
repnz
cld
sbb
icebp
repz
jnp
push
test
imul
imul
xchg
adc
jbe
push
jno
mov
pop
cltd
push
pop
xchg
mov
outsb
mov
popa
hlt
xlat
fs
cld
orb
jno
push
add
jo
dec
mov
dec
cmp
inc
push
adc
fisubrs
not
adc
popf
sub
mov
lret
int
push
fnsave
sub
pusha
dec
mov
fimull
sbb
repz
mov
ljmp
lea
mov
jmp
out
vmovdqu
daa
ret
cltd
and
xor
hlt
xor
imul
test
test
scas
cltd
xchg
sub
addl
dec
inc
enter
insb
jb
cwtl
iret
push
repnz
notl
mov
add
rcrb
jno
push
mov
sbb
lods
push
push
dec
push
sub
jae
lret
je
scas
jl
mov
jle
add
les
adc
mov
stos
push
inc
pop
mov
and
xor
test
jmp
cmpsb
dec
ja
in
mov
push
addr16
jge
cld
out
xchg
aad
test
mov
ret
xor
cld
xor
adc
mov
imul
push
out
pop
ljmp
test
fsubrl
lcall
add
push
or
pop
ja
sbb
sbb
aaa
fisttpll
fisttpll
ffree
or
movsb
dec
loope
fdivs
outsb
lds
das
cmp
out
dec
or
xor
pop
ficoms
mov
xor
push
dec
push
ljmp
or
aas
ret
pop
add
or
mov
mov
inc
push
jmp
movsl
push
daa
mov
sub
loopne
aas
imul
loope
test
bnd
jg
stc
push
ljmp
inc
sbb
enter
xor
cmpsb
imul
adcl
jno
fisttps
imul
or
jbe
lods
push
push
lds
fwait
int3
and
add
dec
and
inc
dec
std
fsubrs
repz
pusha
jl
iret
mov
out
imul
repnz
fdivs
aad
mov
or
lods
adc
cmp
mov
out
inc
daa
daa
stos
pop
popa
in
je
jmp
stc
or
sbb
push
jo
daa
and
ds
xor
lret
jge
sub
sub
test
dec
shlb
hlt
enter
sbb
push
sbb
push
pop
jge
mov
jp
mov
mov
insl
jle
xor
stc
lahf
int
xlat
push
xchg
push
sub
jmp
arpl
mov
adc
out
in
enter
in
push
xchg
aas
push
mov
lahf
les
mov
jmp
and
test
xchg
test
xchg
add
mov
dec
add
icebp
xor
sbb
cmpsb
add
out
test
mov
pop
or
ljmp
or
mov
pop
dec
stos
xchg
xor
pop
repnz
adc
mov
push
cmp
es
pop
out
push
mov
mov
or
or
jg
push
cmp
cli
jecxz
pop
mov
gs
sbb
sahf
pop
cmp
pop
rorl
or
mov
xchg
adc
and
pop
mov
bound
push
add
outsl
mov
sti
push
and
push
cmp
rcl
push
push
ret
addr16
pusha
inc
push
or
push
adc
mov
rcrl
clc
roll
jo
cmp
inc
jp
mov
jne
das
xchg
out
inc
add
test
scas
dec
nop
adc
cmp
sub
stc
out
imull
fstpl
push
into
add
cmp
es
xor
outsb
xor
and
inc
cli
mov
mov
mov
dec
imul
scas
push
gs
leave
nop
out
mov
cmp
sub
sbb
movsb
xchg
adc
cmp
fwait
push
shl
add
sub
or
and
icebp
cmp
push
inc
not
push
sub
xor
int3
rcrl
lods
insb
jae
mov
xchg
movsb
out
shll
xor
sbb
or
sbb
mov
insb
stc
add
xorl
bound
jb
jp
adc
mov
out
sbb
xchg
cmp
dec
mov
push
mov
movsb
test
imul
lock
out
sbb
filds
repnz
and
rorl
cwtl
test
jnp
pop
jmp
inc
pop
sub
pop
mov
push
leave
adc
scas
xchg
fwait
sti
sub
das
jo,pn
sbb
sub
lds
and
pushf
sub
rolb
mov
fs
pop
push
push
ss
in
sub
fsubl
mov
pop
shl
jecxz
and
jle
adc
test
loop
and
xchg
and
les
inc
scas
xor
out
shl
shr
or
lret
or
push
popf
pop
pcmpgtd
pop
cmp
cmp
orl
jecxz
movsb
fistl
dec
rcrb
adc
jno
adc
pop
xchg
cld
add
push
dec
in
adc
or
arpl
aad
ftst
add
inc
test
push
pop
shlb
jle
popa
repz
js
ret
andl
push
xor
mov
shll
xchg
mov
or
fwait
test
pushf
rcll
sbb
hlt
add
push
add
call
imul
popf
add
cmp
out
add
cs
lea
mov
adc
dec
mov
cmp
mov
iret
pushf
nop
inc
cmpsb
repz
popa
push
stos
push
mov
loopne
enter
sti
scas
insl
fwait
dec
dec
or
xchg
mov
and
dec
or
mov
push
lods
mov
sti
lods
loope
sbb
push
loope
push
jo
int
fwait
mov
cltd
lahf
mov
xor
ret
dec
es
mov
popa
lret
mov
rol
loopne
xchg
cmc
sub
icebp
scas
imul
neg
add
sarb
adc
add
and
test
add
push
mov
and
in
and
jbe
cld
adc
push
sbb
repz
aad
sti
outsb
and
lret
leave
lret
fisttps
xor
mov
jno
sti
inc
xlat
in
mov
nop
insl
fs
mov
popf
jb
mov
mov
test
dec
push
inc
or
push
jecxz
mov
outsb
jo
jb
jne
push
dec
jl
pop
add
and
or
cmpsb
jnp
xor
iret
insb
divl
pop
lret
popf
movsb
mov
jg
xchg
mov
push
jp
adc
mov
movsl
mov
imul
rolb
hlt
sahf
out
sbbl
aas
lea
into
and
push
sub
cmp
leave
ss
add
cs
lock
addr16
cltd
ss
jno
in
cli
or
int3
lea
rclb
inc
loope
pop
jns
pusha
or
mov
std
daa
sbb
push
push
fstpt
mov
cmpb
out
push
and
cli
add
jp
popf
mov
cmp
pop
cltd
xor
jl
hlt
insl
divl
xlat
dec
test
inc
aaa
loope
icebp
lahf
xor
or
xor
sbb
xchg
lcall
xchg
daa
aad
aas
cwtl
mov
inc
movsl
sti
mov
jbe
fisttps
call
cltd
repz
mov
cmp
add
rorl
out
mov
std
loop
add
xchg
xchg
pop
dec
cmc
xor
xor
xchg
scas
call
das
insl
fmul
or
xchg
imul
push
stos
jl
into
xchg
pop
lods
fisubrl
or
push
arpl
outsb
aam
nop
jge
pop
push
into
outsl
push
dec
sar
sbb
push
test
add
mov
mov
fcoml
jno
cli
sbb
jb
add
negl
test
xchg
sbb
mov
mov
cmpsl
int3
inc
decb
scas
dec
inc
sbb
data16
daa
sti
push
testl
fwait
pop
mov
int
dec
mov
xchg
lret
jbe
sub
lcall
movsl
dec
sarl
pop
or
into
xchg
sarb
and
test
mov
push
aad
fwait
movsb
sbb
push
lods
pop
jg
lds
xchg
jo
xorb
xor
inc
stos
js
sub
cmpsl
mov
popf
sbbl
xor
jl
in
adc
je
and
scas
cs
and
addb
mov
mov
iret
mov
sub
scas
rclb
out
jne
nop
sti
in
movsb
push
popf
lret
inc
insb
dec
enter
push
pop
or
sub
push
mov
or
cmpb
std
pop
pop
mov
adc
add
inc
xchg
fisttpll
jmp
jno
add
mov
push
inc
push
mov
xlat
rorl
insb
je
mov
mov
repz
popf
xor
inc
scas
adc
xor
mov
dec
mov
lods
cmp
fcomps
sub
xchg
push
inc
movsl
pushf
shl
mov
out
cli
mov
push
dec
push
inc
add
mov
jp
xor
int3
notb
add
pop
dec
or
inc
dec
dec
mov
lods
cwtl
mov
sub
out
mov
dec
idiv
insb
insb
cmc
mov
push
sub
inc
mov
pop
jecxz
sub
outsl
ljmp
mov
mov
push
lock
leave
push
dec
mov
sbb
mov
dec
inc
insl
out
xchg
xchg
gs
push
fs
sub
out
idivl
fcmovbe
lea
mov
jp
add
jbe
mov
fwait
in
stos
xchg
cmpsl
sub
pop
jmp
fnsave
outsl
add
inc
nop
xchg
pushf
push
mov
xlat
pop
push
je
adc
test
add
pop
enter
add
inc
add
test
shll
subb
outsb
faddl
mov
push
push
lahf
and
movl
xchg
fildll
push
into
inc
mov
div
inc
scas
mov
mov
ret
adc
mov
add
jae
jge
nop
popf
pop
xchg
lret
mov
test
sbbb
sbb
sub
mov
mov
or
les
aam
xchg
lds
das
or
icebp
cmc
pop
mov
test
dec
aad
mov
mov
out
loop
mov
sbb
movsb
rclb
pusha
pop
xchg
imul
sbbl
insb
je
pop
adcb
jne
dec
repnz
nop
int
decl
int
inc
arpl
sbb
jge
insl
pop
std
aam
adc
test
in
xchg
or
outsl
push
jo
cmp
lock
mov
fdivrl
aam
inc
jecxz
aaa
dec
shlb
js
adc
dec
sbb
xchg
dec
pop
out
sbb
add
clc
aaa
cli
or
jnp
mov
adc
in
cmp
popf
sub
push
xor
sub
test
cmp
add
lds
fdivl
cmp
clc
fdecstp
int3
push
stc
jae
push
int
xchg
popf
ds
loop
loop
jl
in
ss
and
mov
pop
in
jecxz
stos
jo
or
cmp
sbb
sarb
ds
je
xorb
cmp
mov
sbb
mov
ret
out
clc
pop
or
call
pop
loopne
mov
fsubs
push
push
dec
rorl
movsb
int3
fucomp
sbb
pop
je
mov
or
push
pop
fs
add
pop
or
jmp
loope
lods
popf
leave
add
add
scas
cld
xor
lods
mov
sbb
cmpb
pop
cltd
repnz
out
inc
test
sti
call
xor
push
adc
fdivrl
xchg
sahf
fsub
jae
sbb
js
rclb
mov
sub
fld
inc
push
addb
mov
sub
fld
xchg
out
jle
or
repnz
xor
push
xor
sbb
push
std
mov
xor
or
js
jmp
cmp
push
in
sbb
aaa
icebp
xlat
repz
frstor
mov
mov
mov
imul
scas
out
cmpsl
xor
mov
hlt
in
insb
fistpll
nop
sub
xchg
jb
push
andb
jmpw
dec
lea
push
test
lods
fdivrl
ret
mov
sbb
cmpsb
imul
jns
ljmp
into
pusha
and
pop
test
popf
jp
push
push
test
int
adcb
shlb
leave
mov
dec
pop
rclb
and
xorl
mov
lret
mov
nop
into
pop
or
test
das
dec
das
push
push
pop
movsb
ret
jno
pusha
add
gs
divb
jmp
jl
fmul
mov
pushf
sub
lcall
jo
pop
lret
les
sbb
jl
fdivrs
push
mul
mov
mov
fsubl
repnz
repz
repnz
mov
push
out
mov
pusha
mov
in
repz
push
and
add
ljmp
in
ss
cwtl
push
call
mov
insl
sbb
ja
sti
loopne
add
fsub
pop
pop
mov
xchg
mov
fnstsw
fmulp
cmpsb
or
mov
jl
inc
mov
inc
pushf
xor
push
scas
pop
jns
cmpsb
or
push
hlt
sbb
push
fnstcw
and
jl
cmpsl
test
daa
lret
cs
pop
icebp
push
add
push
loop
fsubs
lcall
lahf
dec
clc
insl
cld
dec
out
and
pop
das
pop
and
ss
sub
fidivrs
mov
mov
int
int3
je
nop
adc
les
lods
fsubr
mov
cmp
cmp
sub
mov
xchg
push
hlt
loope
jns
mov
shlb
jp
push
adc
inc
jp
add
push
cmp
dec
xor
nop
and
and
cmp
pop
sahf
xchg
lods
notl
xchg
cltd
std
jmp
inc
mov
inc
and
jmp
mov
pop
gs
rclb
pop
cld
stos
shrb
repnz
pop
sarb
out
inc
insl
jnp
int3
xor
mov
lret
lods
dec
mov
movsl
ljmp
cmc
lods
mov
clc
inc
pop
int3
aam
jg
mov
andl
mov
dec
lret
sbb
ds
add
inc
xchg
arpl
clc
movb
push
xchg
mov
sub
push
imul
insl
add
sti
sbb
std
stos
mov
lods
lcall
fimull
clc
inc
lahf
sub
mov
aaa
mov
fs
cs
imul
sub
arpl
out
add
jl
xchg
stc
sti
mov
rcll
sub
outsb
add
aad
inc
scas
inc
mov
sbb
nop
das
pop
int
mov
cld
mov
stc
mov
rcrb
shlb
je
mov
stc
adc
inc
dec
add
stos
imul
push
push
ljmp
adcb
add
push
cmp
ljmp
je
outsb
and
adc
fwait
inc
out
stc
adc
incl
imul
inc
sub
push
or
pop
fwait
push
sbb
pop
jge
imul
mov
sub
jbe
xchg
pop
icebp
stos
notb
in
mov
out
orl
repz
or
inc
lretw
fcmove
jl
xor
fstpt
jle
icebp
addr16
dec
fst
jns
pop
mov
lret
int
cmc
sbb
pop
stos
jmp
push
pusha
fsincos
je
jl
aad
cli
lea
inc
or
popa
daa
cmp
mov
imul
sub
shrb
daa
test
and
sahf
pusha
roll
push
leave
cltd
or
sub
shll
ljmp
lcall
out
and
outsb
sub
fwait
xor
mov
std
xchg
outsb
out
mov
fstl
nop
xor
mov
repz
hlt
bound
enter
mov
mov
sbbb
shr
insb
and
pop
cmp
data16
push
push
xor
test
std
mov
xchg
orl
cltd
or
mov
arpl
subb
std
cmc
or
mov
js
std
dec
push
sub
jnp
or
pop
inc
es
push
iret
xor
fstps
xor
jmp
hlt
je
rorb
in
das
loop
imul
pop
paddw
fcoms
add
lea
mov
push
mov
repnz
addl
lds
or
inc
insl
xor
push
dec
adc
pop
mov
mov
lods
lret
data16
lds
push
mov
test
lret
cmp
mov
pop
sahf
sbb
popa
and
lret
fdivl
loope
adc
jecxz
dec
enter
gs
nop
cmc
inc
mov
cmpsb
mov
stos
in
mov
or
push
xor
mov
cmp
mov
adc
xchg
ret
cwtl
xor
xchg
adc
add
sub
fildll
pop
mov
jbe
daa
outsl
fs
lods
std
sbb
dec
push
fucomp
shlb
or
sub
mov
test
jo
arpl
enter
and
popf
sbb
cmp
jne
jae
rcll
roll
out
cmp
ret
int
mov
dec
jge,pt
dec
sub
pop
dec
adc
and
mov
enter
daa
dec
jp
adc
mov
dec
std
sti
cmp
bound
pop
ror
mov
imul
rorb
decb
iret
aad
dec
xchg
xchg
pop
push
rcll
push
add
dec
mov
xorl
dec
mov
