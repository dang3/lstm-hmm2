add
add
or
add
sbb
add
pop
test
aaa
add
add
add
add
mov
add
xchg
add
andb
addb
add
pop
test
aaa
add
add
add
add
add
add
push
add
add
add
add
or
add
add
add
add
add
add
js
add
rcl
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
jg
fwait
out
cltd
lods
and
lods
cmp
or
gs
xchg
out
and
in
and
add
rorl
clc
xor
dec
pushf
sub
imul
pop
inc
mov
jge
jnp
dec
iret
cmp
hlt
dec
lret
loopne
and
call
movsl
idivl
popf
comiss
xchg
sbb
mov
mov
adc
dec
and
jb
loope
jmp
or
insl
pop
gs
fwait
sti
filds
lods
push
jns
pushf
iret
mov
js
and
orb
mov
cmp
mov
ficomps
cld
cs
stc
inc
and
je
neg
addr16
mov
ds
gs
jl
gs
add
clc
lods
shrl
rorb
lds
test
sbbl
cmp
cmc
or
out
lock
or
fs
push
sahf
cli
adc
aad
xchg
les
inc
push
lea
push
adc
jae
out
jl
jo
inc
add
or
arpl
mov
push
push
jb
jp
in
jge
xlat
pop
stc
and
xchg
dec
gs
aaa
xor
les
adc
mov
or
sub
add
in
add
dec
rolb
or
sti
jle
cmp
out
and
out
push
inc
jae
movsl
test
cmp
pushf
hlt
inc
dec
sbb
pop
push
push
test
push
push
imul
nop
es
mov
lods
mov
loope
lret
inc
sub
popf
shr
mov
ds
js
mov
stos
call
jg
mov
enter
push
sbb
ljmp
jns
jae
and
sbb
pop
pop
sub
inc
add
popa
dec
xor
mov
pop
cli
push
popa
out
arpl
imul
jecxz
ret
pop
pop
ss
jle
xchg
sbb
pop
lock
outsb
jnp
lock
dec
mov
sub
das
out
jbe
mov
aaa
and
lcall
mov
cmp
std
pop
sarl
pop
inc
add
pop
xchg
push
sti
imul
test
repnz
das
int3
mov
notb
fnstsw
adc
push
xchg
mov
in
call
aas
xor
movsl
xor
mov
cmp
push
rorb
ds
dec
or
inc
dec
push
add
hlt
movsb
ret
push
pop
rolb
and
cmpsb
lods
ret
lock
add
mov
and
jbe
orb
and
test
add
ss
frstor
mov
mov
fadds
rcrb
mov
xorb
aad
testb
es
cltd
jno
mov
bound
int
cmp
xchg
cli
push
cli
and
dec
xor
je
mov
and
aas
or
add
scas
jbe
mov
cld
arpl
fsubl
fcomp
ds
outsl
data16
sahf
mov
sbb
aad
lods
dec
mov
repnz
cmp
clc
mov
mov
lock
roll
push
add
xchg
ret
test
xor
leave
iret
jge
pop
xchg
add
ds
or
mov
dec
fdivrl
ljmp
sub
sbb
jne
inc
jbe
test
repz
mov
sahf
inc
rcll
bound
mov
xchg
add
push
out
out
inc
arpl
mov
fwait
pop
jbe
pop
jns
push
nop
fsts
pop
fbld
jmp
subl
js
and
lcall
das
fidivrl
scas
add
add
xchg
adc
push
push
test
jge
test
mov
or
in
sahf
fcoml
inc
pop
lods
hlt
jl
insl
pop
notb
mov
mov
outsl
pop
pop
mov
push
pop
lock
int3
loopne
xor
cmpsb
cmp
shlb
icebp
test
jo
xchg
and
pop
sar
fsub
hlt
loopne
into
pop
xchg
jb
movsl
lods
scas
sbb
xchg
lret
jo
cmpb
cmpsb
adc
push
sub
gs
int3
stos
jp
dec
imul
lock
addr16
stc
cld
pusha
xor
inc
pop
dec
lret
cmp
arpl
orb
js
mov
jmp
bound
jo
out
push
sub
sub
jge
test
push
xchg
ss
pushf
mov
and
shrl
std
and
out
adc
decb
xchg
add
loope
ret
lods
mov
icebp
adc
sub
xor
int
cmpl
xor
mov
ficomps
mov
and
aaa
pop
cmpsb
adc
adcl
subl
imul
push
pop
sbb
fists
dec
dec
lock
test
scas
xchg
jnp
jg
aaa
xchg
jg
das
jae
sbb
daa
dec
inc
push
ffree
fcoml
push
push
cld
les
push
cli
push
nop
in
in
cmp
sub
repnz
insb
add
cltd
jg
mov
inc
fildll
js
push
xchg
int3
ret
mov
popa
push
sbb
sarb
outsl
rol
mov
mov
xor
add
mov
stos
mov
jecxz
loope
mov
es
stos
popf
lods
jae
gs
cli
fwait
dec
sub
pop
jp
or
lods
cmpb
add
in
mov
add
inc
pop
cmp
push
ficomps
into
jle
lods
dec
mov
fcmovnu
or
adc
bound
jg
dec
sbb
cmp
ret
shrb
fnstcw
call
popa
mov
rcr
cmpsb
add
daa
inc
jp
or
mov
mov
jnp
pop
les
push
idivl
lock
jmp
nop
call
out
shll
pushf
aam
push
xchg
out
jge
int
divb
pushf
iret
cli
fwait
xchg
test
sub
fistpl
in
dec
or
mov
pop
cmp
iret
fucom
jns
xor
cs
cld
add
shll
mov
push
and
popf
inc
inc
or
or
mov
dec
sahf
add
mov
gs
out
inc
sub
mov
scas
inc
cmp
das
pop
mov
pop
dec
das
cltd
jbe
divb
loope
lods
jnp
stos
sahf
and
test
mull
add
out
pop
insl
divl
addr16
imul
int
insb
sahf
mov
dec
inc
or
iret
mov
pop
pop
stos
popl
add
cmpsb
ja
movsl
addl
fistpl
xor
jl
imul
xchg
scas
daa
cmp
dec
decb
mov
sahf
fimull
jp
dec
pop
inc
arpl
rorl
loopne
sub
mov
mov
shll
mov
dec
ljmp
jns
inc
out
lret
enter
inc
xchg
jl
insl
ror
lret
adc
mov
or
stos
jo
addr16
cmc
jae
xorb
pop
jb
popf
fisubrs
cwtl
or
subb
add
pop
jno
in
insl
xchg
cmp
out
jo
or
mov
xor
in
push
cld
into
xchg
in
mov
into
clc
int
xchg
inc
xchg
rcrl
fwait
insl
and
mov
inc
and
jb
loope
mov
add
pop
sub
mov
pop
pop
scas
movsl
leave
jne
fistpl
lods
pop
pop
in
lock
negb
mov
mov
jae
sahf
adc
arpl
mov
inc
shlb
int3
ja
in
stos
out
adc
test
add
sbb
push
enter
sbb
sub
adc
and
int
or
sbb
xchg
mov
jp
push
loop
and
test
mov
xchg
xchg
movsb
loope
jae
xor
inc
pusha
dec
push
cmp
hlt
decl
and
sub
test
mov
jnp
xor
aam
adc
mov
lcallw
inc
test
sbb
mov
jns
cwtl
mov
mov
add
jp
push
xchg
imul
fdivr
jae
dec
jge
imul
fs
stc
inc
mov
stc
jg
jecxz
sbb
cli
add
in
lods
rclb
sub
loopne
int
jmp
jae
pop
mov
push
jne
adc
imul
pop
lock
bound
cli
adc
rclb
cmpsb
dec
add
sahf
adc
cs
push
fiaddl
sub
testl
jnp
cmp
mov
imul
xor
loopne
add
mov
and
lret
shl
cmp
inc
mov
pop
pop
sub
out
leave
js
pushf
fbstp
inc
or
std
inc
sub
data16
lcall
mov
mov
sub
bound
jns
adc
or
or
push
aad
add
jb
xor
fs
jl
cmovno
xchg
fwait
orl
xacquire
push
jg
mov
mov
mov
xchg
push
jg
icebp
cltd
push
xor
into
and
jge
fadds
push
inc
repz
pop
jmp
lahf
je
outsb
cwtl
push
rcl
cmpsb
mov
int
jae
das
fnstsw
pop
mov
or
sbb
mov
xor
lcall
iret
call
fs
xchg
and
push
movsl
mov
cli
mov
add
daa
popa
inc
mov
test
movsb
xor
js
push
pop
push
push
xchg
pop
jns
adc
add
loop
adc
mov
das
sar
inc
mov
aaa
andl
jno
jp
inc
pop
pop
fstp
mov
mov
repz
mov
adc
stc
in
movsl
sbb
pop
push
push
mov
dec
out
lret
lods
jo
and
add
iret
sbb
cmp
mov
popa
fisubs
bswap
mov
sub
xchg
pop
js
cmp
adc
or
lret
test
sar
cmp
jge
sbb
inc
push
rolb
jle
inc
pop
inc
push
pusha
dec
and
sub
push
fs
mov
ds
jns
cli
outsl
push
and
cmp
test
cmpsl
lret
jl
and
push
cmp
and
push
loop
shrl
or
call
jae
mov
icebp
aad
insb
dec
dec
cld
inc
ljmp
inc
cs
cld
out
lea
mov
dec
dec
inc
aam
jmp
aam
push
xlat
inc
and
jno
mov
adc
jbe
stos
jle
mov
imul
inc
scas
dec
mov
fcmovnu
xchg
inc
cmp
mov
push
xchg
and
pop
push
mov
fbstp
jnp
loopne
rclb
in
push
sbb
push
xor
lret
pop
test
aaa
aaa
cwtl
cmp
movl
pop
mov
hlt
cld
enter
jp
stos
scas
cs
cmpsl
data16
push
cld
rorb
je
sub
push
scas
out
push
cmp
cmp
xchg
jbe
rcll
fsqrt
iret
in
push
fimull
sub
lods
dec
inc
cmp
cmpsl
sub
in
cmp
icebp
fstsw
mov
or
jl
negl
mov
fs
lock
or
cs
outsb
add
jmp
adc
rorl
xor
mov
lock
mov
data16
sbb
rol
ss
sbb
std
mov
push
add
mov
mov
stc
cmp
push
sbb
mov
mov
mov
dec
fs
inc
cmp
icebp
fsub
ficoms
sub
test
cmpsl
push
push
cmp
shlb
cmp
ss
add
cmpsb
mov
nop
rcr
not
push
push
loope
push
push
outsb
xor
out
ret
mov
stc
pop
aas
mov
or
cmp
dec
insl
shlb
or
sbb
or
mov
adc
and
dec
inc
mov
push
pop
stc
jae
notb
lock
aam
lds
sub
test
icebp
xchg
js
xor
dec
mov
pop
pop
imul
push
hlt
enter
or
iret
pop
aam
pop
xchg
fdivrs
add
sti
sub
push
fisubrs
adc
jp
push
adc
aam
push
roll
adc
pushf
movl
test
mov
popf
out
push
jle
mov
jg
pushf
clc
pop
imul
sub
rcrl
popf
xchg
shr
leave
es
jo
fildll
adc
sbb
enter
pop
jl
je
sbb
icebp
inc
fwait
mov
mov
and
inc
cli
mov
inc
cmp
out
dec
sbbl
add
push
imul
pop
orl
inc
test
sahf
test
mov
out
mov
call
jp
mov
femms
lods
jno
enter
mov
jecxz
and
dec
ljmp
xchg
mov
inc
test
and
xchg
jl
xchg
dec
pop
imul
pop
xchg
pop
mov
sub
into
sbb
cmp
add
and
loopne
outsb
cmpsb
and
sub
or
out
dec
pop
cld
roll
out
lret
xor
mov
stc
push
test
mov
xchg
lret
cmp
adc
mov
ja
mov
ficoml
xchg
push
xor
inc
test
mov
test
jecxz
call
dec
mov
xchg
cs
vpaddw
adc
or
xchg
inc
xchg
insb
sbb
mov
push
inc
cli
mov
cmc
aaa
cmp
xchg
adc
lcall
jp,pn
out
scas
imul
adc
push
sarl
sbb
cmp
ret
mov
mov
pop
sub
loopne
dec
sbbb
xor
xchg
dec
pop
imul
jo
mov
sub
outsb
add
dec
fistl
mov
call
cmc
arpl
jl
lahf
loope
dec
mov
cmp
in
add
pop
test
and
es
dec
push
inc
and
inc
push
sbb
mov
das
scas
sbb
hlt
sub
xor
push
inc
sub
jnp
mov
pop
js
mov
push
aam
cltd
jmp
xlat
mov
sti
ja
lahf
push
cmp
inc
dec
aas
jb
jge
movsb
cmpsl
lret
pop
sub
xor
dec
subb
mov
xor
js
xlat
pop
cmp
inc
ret
stos
shll
adc
in
and
fidivs
mov
pop
inc
mov
jle
mov
add
mov
sub
bound
repnz
pop
xor
shll
stos
cmpsl
mov
or
jl
daa
adc
add
out
es
cmp
inc
pop
xchg
lods
insl
xor
or
leave
in
mov
add
loopne
sti
push
adcb
fisttpl
sbb
and
test
in
and
jno
int3
jo
push
js
xor
xor
outsl
sbb
pop
into
ss
jl
je
scas
mov
out
adc
gs
lods
xor
cmc
lods
push
ret
pop
mov
push
mov
push
scas
stos
outsb
popa
or
inc
and
int
pop
add
pop
leave
sub
xlat
cmp
mov
bound
das
inc
xlat
mov
cmpsb
sub
out
aas
nop
inc
xlat
out
mov
dec
xor
scas
sub
mov
push
jno
pop
rolb
sub
testl
popa
jbe
cmp
mov
outsl
aam
inc
push
pop
cmc
pop
inc
xchg
divl
mov
rcrb
insl
and
cmp
rol
out
in
insb
insl
lds
call
mov
cmpsb
lods
inc
mov
clc
fistpl
loop
lock
mov
xlat
in
xor
pmovmskb
jb
fxch
add
jbe
outsb
add
pop
sti
add
inc
lret
in
call
xlat
and
inc
stc
iret
into
mov
lsl
aam
js
or
or
push
and
hlt
add
movsb
xor
jge
dec
mov
inc
std
cs
adc
cmpsl
jns
out
imul
nop
add
xchg
loopne
lods
or
cld
subb
adc
mov
test
scas
sbb
xor
in
push
sub
repnz
cmp
jp
jnp
jno
fcoms
dec
cmp
imul
jecxz
jecxz
mov
out
xchg
mov
pop
jp
je
jmp
and
scas
mov
push
inc
popf
mov
jns
mov
adc
xchg
out
dec
clc
push
jecxz
pop
xlat
rclb
sbb
pop
jno
jnp
mov
stos
xchg
shrb
popa
fcomip
bsr
mov
lea
stos
in
fdiv
iret
pop
pop
and
call
shr
or
sub
lahf
fidivl
and
addr16
pop
xchg
ret
cmp
push
xchg
pop
and
daa
stos
in
mov
out
and
mov
sbb
cmp
les
das
cltd
cwtl
fbstp
aas
cltd
icebp
dec
dec
popa
fwait
popa
ret
jp
fwait
div
enter
sub
popa
lds
subl
ret
adc
dec
xor
sub
push
loope
imul
and
mov
xchg
jno
movsb
xchg
push
cltd
jp
stc
and
xor
in
sub
iret
repnz
mov
loopne
test
pusha
ss
out
dec
pop
or
sysret
ljmp
pop
jb
in
das
mov
jno
sub
xlat
xor
push
cmp
sub
dec
lea
daa
jae
mov
fistl
sbb
lds
loope
pop
jns
mov
in
scas
mov
sarl
mov
shrl
icebp
xchg
out
mov
and
dec
fistl
cmp
jno,pt
int3
fstl
mov
mov
lods
push
jmp
jne
lahf
std
inc
dec
sub
mov
lret
cwtl
popf
adc
and
out
fsubrl
add
and
lods
fnsave
ja
pop
fcmove
and
in
cli
pop
pusha
mov
push
negl
fs
nop
icebp
insb
xorb
mov
mov
lea
xchg
sbb
jae
add
push
mov
test
repz
mov
dec
mov
and
sti
clc
cld
fs
or
xchg
test
out
sbb
dec
jnp
shll
inc
imul
mov
data16
inc
xor
jecxz
dec
or
mov
cmpsl
cltd
mov
mov
adc
mov
popa
and
icebp
sub
ret
sti
mov
mov
push
cmp
push
xor
scas
adc
nop
sub
lods
mov
sbb
push
mov
outsb
push
ret
xchg
cli
mov
cmpsb
movsb
lock
push
xchg
nop
and
insl
scas
stos
imul
nop
jno
or
and
sti
aas
cmpl
cmp
jae
push
mov
into
and
cmp
sub
inc
jo
mov
adc
mov
mov
ljmp
xchg
cwtl
lcall
adc
icebp
loopne
ret
sarb
mov
pop
bound
add
push
call
cs
sarl
pop
jl
lahf
fisttps
and
out
push
insb
inc
fisubs
xchg
xchg
into
sarb
bound
mov
ds
sbb
inc
push
and
and
xchg
push
lcall
push
add
jmp
stos
mov
in
dec
leave
and
aaa
pop
ret
enter
and
jle
lods
sub
sarb
aas
mov
mov
in
leave
mov
cmp
scas
sbb
sbb
mov
in
test
cmpsb
insl
adc
in
pusha
inc
xchg
and
enter
int
test
popa
cmp
aad
xor
mov
rorl
into
cmp
mov
jne
jns
rcr
cli
pop
pop
push
movb
dec
cmp
adc
jb
daa
test
aad
xor
sbb
push
add
js
dec
pop
jns
mov
ret
mov
lods
imul
jg
cmp
pop
or
sti
add
xlat
sub
sub
icebp
push
and
addb
xor
jmp
mov
rorl
pop
cmp
xor
call
ret
jl
ljmp
inc
pop
and
push
mov
or
add
arpl
fs
jns
rorl
lahf
testl
jmp
repnz
xorl
jl
push
mov
gs
pop
fidivl
hlt
push
mov
lret
mov
pop
or
cmp
or
data16
cmp
push
mov
xorl
add
and
mov
xchg
int
lea
cs
cli
ret
sahf
test
rorb
inc
push
fwait
adc
push
xchg
xchg
xor
or
arpl
jbe
adc
jmp
mov
dec
fbstp
xchg
aas
push
add
movsl
dec
es
inc
inc
hlt
scas
test
pusha
or
mov
cmpsl
testl
add
daa
inc
xchg
scas
cmp
rol
std
iret
jmp
cmpps
sub
or
adc
jecxz
push
jno
pop
stos
sub
xor
jecxz
pusha
dec
jbe
imul
push
loopne
in
mov
add
ljmp
xchg
lahf
jmp
xchg
jg
aaa
lods
rcr
lock
and
aas
test
jmp
andb
inc
cmp
add
adc
xchg
jnp
inc
adc
aaa
hlt
idiv
outsl
push
repz
mov
and
fucomip
add
popf
cmp
fcoml
sti
dec
out
test
pop
jo
pop
fistl
lret
push
in
xchg
stos
dec
xchg
sahf
push
pusha
hlt
lods
jge
push
stos
fildl
loopne
cmp
sti
xchg
pop
stc
adc
loop
jne
xchg
and
and
das
sbb
mov
bound
or
hlt
xchg
mov
sahf
fcomps
loope
jp
sub
fimull
hlt
xor
push
mov
addr16
adc
cld
cli
pop
ljmp
adc
mov
mov
pusha
test
or
aam
insl
or
mov
cltd
loopne
sub
loopne
mov
push
hlt
cltd
inc
pop
cmpl
ror
loop
hlt
enter
xlat
mov
fdivrs
push
lea
xor
mov
mov
rorb
inc
and
adc
aaa
xor
jnp
add
in
ds
shll
mov
hlt
dec
and
and
pop
dec
scas
push
outsl
jl
js
fmull
shlb
push
xchg
aas
idiv
movsb
je
cmpsl
mov
mov
pop
mov
mov
cs
push
in
or
cli
push
ljmp
mov
push
jge
jp
pop
xchg
jle
cmpxchg
sbb
add
js
bnd
dec
notb
and
pop
loop
inc
jle
inc
cltd
ds
mov
repz
sarb
daa
pop
push
mov
cwtl
ja
pop
or
pop
adc
jo
xchg
das
hlt
nop
sub
dec
int
or
adc
lret
dec
or
in
mov
add
imul
mov
sub
pop
std
clc
les
sub
dec
je
push
movsl
cltd
or
push
or
mov
loope
and
mov
cmp
pop
data16
dec
mov
lcall
mov
pop
cmp
rcrl
mov
mov
push
push
imul
pusha
add
les
pop
sbb
jb
shlb
cmp
pop
movsb
imul
and
je
cmp
cmp
xchg
inc
arpl
push
fcmovb
lret
fidivs
repz
scas
nop
jns
mov
xchg
pop
testl
adcl
sahf
add
and
icebp
jno
jecxz
xor
rolb
push
insb
mov
ret
sbb
ds
adc
jle
sub
pop
ss
lcall
or
lods
sub
mov
pop
mul
xchg
mov
jo
or
xchg
inc
sub
fs
fcmovnb
mov
cmp
adc
stc
cmp
mov
es
in
xchg
xor
fstpl
sahf
aad
and
xor
data16
sbb
xor
pop
push
inc
movsl
addr16
pop
pop
jl
and
sub
mov
arpl
push
dec
pop
push
sub
mov
shrd
xor
test
sbb
mov
icebp
loope
loope
cmpsb
push
into
pop
stos
lds
and
push
out
ja
lret
dec
dec
push
aad
xlat
int3
pop
orl
push
aas
cmp
xchg
test
sbb
pop
inc
imul
fsubl
sbb
std
scas
adc
xor
adc
test
inc
push
push
call
stc
and
jmp
pop
loopne
or
cmpsl
adc
orb
mov
dec
scas
add
sbb
push
es
nop
dec
push
loope
push
lock
and
push
mov
mov
iret
push
sti
cmpsl
xchg
int3
sub
scas
pop
in
mov
sbb
inc
mov
sahf
popa
dec
sub
add
cltd
fwait
test
scas
mov
and
testl
dec
or
imul
or
lahf
mov
stos
loop
or
lret
mov
out
sub
bound
jmp
cmpsl
add
sub
xorb
sbb
adc
and
adc
or
xlat
xor
push
push
pop
andb
addb
add
sar
fsubs
mov
add
dec
adc
stc
test
lahf
sbb
fdiv
cmp
and
add
insl
mov
repnz
sub
in
loop
int
jne
mov
jge
adc
rcrl
add
leave
dec
call
dec
add
cmp
jae
les
popa
into
cmp
sbb
jl
sub
out
cmp
ffree
adc
add
pop
enter
or
call
cmp
mov
jae
lea
cltd
pop
mov
xchg
ret
inc
fwait
xchg
xchg
fcomip
pop
xchg
xor
out
movsl
stos
mov
test
repz
pop
jle
lret
sbb
mov
sar
daa
or
dec
push
xchg
inc
stos
aas
xchg
repz
bound
mov
fsts
xchg
out
and
mov
push
sti
outsb
sbb
adc
adc
pop
adc
out
clc
in
ret
cmp
cld
loopne
xlat
int3
pop
inc
jns
hlt
push
or
sub
jo
lods
pop
lods
aam
pusha
cltd
mov
in
pop
pushf
loop
lock
pop
xchg
mov
mov
xchg
cmp
mov
stos
ds
mov
add
mov
pusha
psraw
push
mov
shl
mov
xchg
xor
xor
cli
test
inc
sbb
sbb
add
cwtl
cmovs
movsb
push
push
mov
ret
pop
push
addr16
imul
pop
mov
arpl
mov
shrl
sub
xor
loope
jo
mov
shl
leave
pop
jb
mov
pop
cmpsb
push
adc
movsb
fstps
mov
cwtl
or
stos
imul
xor
mov
mov
cmp
dec
push
fiaddl
jp
movsl
sbb
push
inc
or
test
dec
ss
xor
jno
sbb
push
mov
sub
ret
mov
andl
sub
pushf
push
insl
insb
mov
dec
inc
aas
sbb
in
mov
mov
pushf
push
and
jge
ret
int3
push
push
add
nop
pop
sub
and
xchg
lods
stos
arpl
mov
cli
and
mov
mov
mov
pop
mov
inc
stos
xchg
addr16
mov
xor
aaa
and
or
aas
stc
push
les
mov
fcoml
mov
out
mov
push
dec
or
ss
pusha
sbbl
lods
jnp
cmp
adc
and
dec
inc
mov
push
mov
lods
push
adc
mov
jp
out
ret
loop
inc
mov
jne
out
mulb
divl
or
mov
mov
bound
je
mov
in
test
rcrb
out
inc
inc
inc
jb
mov
pop
mov
popf
jecxz
xlat
xchg
leave
dec
in
adc
int3
or
xchg
xchg
jle
xchg
test
mov
and
cmpsb
loop
ret
sbb
iret
mov
jg
in
es
fsub
loop
mov
xor
cmp
cmp
push
push
xlat
xchg
or
sbb
sub
xchg
nop
cmc
dec
fistpl
inc
xor
movsb
faddl
fisubl
sub
cmpsl
aas
rcrl
xchg
insl
xor
cmp
sub
ret
shrb
aad
cmpsb
stos
jnp
arpl
adc
pop
fsts
sbb
mov
loope
xor
cmp
push
addr16
xchg
popa
pushf
pop
loope
popf
adc
xor
shrb
pop
insl
ja
add
fisttpll
xchg
and
in
mov
daa
cltd
pop
mov
mov
cmp
repnz
je
outsb
mov
xchg
cmp
pop
out
test
inc
xchg
mov
push
cmp
int3
inc
cld
or
sahf
aad
mov
mov
mov
sub
adc
pop
call
std
sub
mov
jge
xchg
ja
repz
outsb
ret
inc
pop
lds
les
sub
sbb
rcr
xchg
push
and
xlat
test
or
mov
loope
outsb
mov
mov
jp
cmpsl
jp
int
add
dec
jmp
test
inc
ret
jbe
xchg
imul
push
mov
jno
int3
stc
mov
xor
jae
imul
xchg
aad
push
fstpt
test
popa
rcl
push
dec
hlt
sub
roll
cmpsl
and
loop
out
mov
jge
stos
pop
das
inc
pop
out
ljmp
out
mov
int
mov
mov
sbb
mov
stos
pop
and
pop
adc
jmp
pop
cmpsb
aaa
cwtl
andl
jmp
test
fsubrl
and
pop
iret
mov
imul
out
push
aas
into
sbb
cmpsb
ficoml
fidivrs
aas
push
imul
pushf
outsl
icebp
adc
jmp
insl
rcll
xor
jl
test
int
outsl
outsb
dec
lea
add
mov
mov
inc
mov
xchg
mov
mov
add
pop
jge
cmp
sbb
sub
popa
hlt
test
xor
push
push
out
divl
or
out
sbb
mov
jo
xor
lret
out
and
jecxz
js
dec
in
leave
push
dec
call
dec
lret
cld
dec
push
bnd
movsl
pop
in
out
jge
das
or
xchg
xchg
xchg
pop
sub
out
jl
fldt
daa
cltd
mov
dec
fistps
cmpsl
xchg
xor
inc
adc
ss
xor
ret
add
testl
and
inc
pop
test
loope
aam
and
jno
mov
mull
jg
adc
por
inc
xor
xchg
push
mov
xor
add
shlb
cmc
fsubr
pop
jnp
xchg
xchg
out
enter
add
xchg
add
mov
int3
and
xchg
adc
mov
gs
push
pop
out
sub
aas
shrl
or
gs
out
imul
add
mov
and
jge
xchg
pop
in
mov
sar
or
push
out
in
fisubrl
xchg
mov
arpl
add
mov
fidivrl
dec
fnstenv
inc
test
orl
xchg
pusha
pop
push
mov
mov
mov
fistps
dec
fidivl
push
je
fs
inc
inc
or
push
mov
stos
in
je
pop
lret
mov
push
jg
push
jmp
jle
inc
mov
testb
jle
pop
xor
adc
dec
pop
pop
push
test
xchg
jecxz
loop
imul
lock
inc
div
jp
cmc
mov
rcl
addl
fdivs
mov
pop
lea
ret
mov
mov
add
ret
push
popa
cmp
add
inc
push
sub
mov
mov
test
and
xchg
idivb
cmpsb
mov
mov
inc
jg
and
stos
adc
mov
pop
push
inc
daa
mov
or
hlt
sub
inc
mov
lahf
fstpl
mov
xor
ret
jnp
sbb
popf
int
and
mov
lods
lret
in
mov
repnz
cmp
pop
cmc
loop
push
fidivrs
int
jbe
jns
sbbb
cmp
mov
inc
add
mov
negb
rclb
mov
rcrl
dec
in
jae
test
jae
inc
fucomip
push
fsubrl
movsl
add
mov
mov
loop
das
cltd
push
mov
or
cmpsb
cltd
jle
pop
movsl
jns
pop
ja,pn
xor
mov
loopne
mov
leave
xor
xor
je
push
or
lea
fcoml
inc
and
mov
inc
mov
fprem
les
jbe
out
mov
orb
pushf
sahf
lahf
loope
rcrb
out
je
inc
lret
idivl
sub
pop
mov
sub
fidivl
nop
adc
add
or
lahf
jo
or
popf
scas
mov
mov
jl
dec
dec
lahf
sub
ljmp
inc
or
lcall
neg
dec
inc
in
jge
or
sbb
xlat
mov
daa
dec
decb
mov
and
cmp
jmp
push
xor
mov
push
xor
pop
int
popf
mov
movsb
mov
sub
mul
mov
pop
js
mov
push
mov
pushf
xor
aad
loope
or
pop
pushf
loop
test
sub
pop
lea
dec
push
xlat
xchg
test
sbb
ja
jge
xchg
lcall
mov
pop
jmp
sbb
hlt
push
push
roll
adc
out
mov
pushf
adcl
out
test
faddl
mov
inc
jmp
in
cwtl
push
mov
mov
dec
loopne
test
mov
repz
jg
les
sti
mov
dec
inc
dec
mov
xchg
pop
test
clc
lock
push
ss
es
pop
lret
subb
decb
fisubl
orb
imul
pushf
sti
movsb
inc
xchg
divb
and
mov
cmp
xchg
lock
nop
or
loop
mov
jb
ret
daa
clc
out
xor
mov
inc
hlt
fidivs
xor
inc
inc
into
mov
push
mov
pop
imul
sbb
sbb
int
inc
call
mov
cmp
sbb
inc
fsubrp
or
inc
mov
add
stc
add
mov
daa
cmp
test
dec
mov
dec
cmc
cmp
push
dec
fs
dec
je
daa
js
lods
loope
pop
jo
adc
cli
dec
mov
enter
aaa
aad
inc
lds
enter
std
pop
int3
pop
push
and
mull
or
cmpsb
push
dec
and
cmpsl
cwtl
js
repz
sti
and
cmp
dec
pushf
xor
and
sub
jl
int3
popa
inc
push
mov
imul
icebp
mov
xor
and
daa
stos
mov
fildl
mov
rorl
ds
add
scas
mov
fildl
push
sub
xor
mov
ss
mov
dec
and
or
mov
cwtl
shll
imul
jno
and
and
sub
push
jg
cmp
mov
rorl
in
cmpsb
imul
dec
mov
out
mov
mov
inc
pop
lock
xor
mov
add
inc
sub
add
out
mov
fs
jb
adc
ret
ja
xchg
adc
loop
arpl
div
add
lods
adc
ret
rorb
call
mov
mov
xlat
daa
inc
push
add
xlat
xorb
dec
sbb
add
ret
add
mov
mov
cmpl
or
add
xchg
cmpsb
jge
imul
adc
shrl
inc
stos
cmp
cmpsb
cmp
and
xlat
or
dec
inc
popf
add
ss
mov
mov
jmp
fiaddl
inc
scas
jo
aas
test
jle
int
repnz
and
icebp
xchg
mov
in
push
jle
arpl
call
xor
push
xchg
mov
push
andl
bound
push
mov
xor
ss
jns
sub
push
sub
xchg
dec
jl
add
xor
adc
add
push
push
xlat
push
arpl
cmp
hlt
sbb
into
fwait
gs
adc
and
sbb
xlat
popf
xchg
out
leave
jp
dec
push
gs
sub
xlat
or
incl
cmp
inc
lods
push
jmp
jns
into
leave
jmp
jns
popf
lret
ret
cmp
cmp
lret
xorb
add
pop
cmp
sbb
lret
jle
xchg
xchg
adc
inc
les
mov
movsb
jp
pop
in
inc
arpl
inc
movsl
pusha
pop
jg
lods
imul
jae
clc
out
jns
out
jg
ss
and
je
or
mov
xor
loop
fnstcw
pop
out
fidivrs
mov
ret
leave
dec
out
inc
cli
aad
in
sbb
cmpsb
pop
xor
lret
cmp
pop
mov
cmc
neg
xchg
std
cmc
sub
aaa
push
and
icebp
ss
sub
insb
or
fwait
in
movsl
or
cld
dec
and
aas
xchg
xchg
lret
push
loop
movsb
pop
int
loope
adc
and
cmpsb
out
inc
cs
or
shlb
pop
out
cmp
rcrb
push
lds
out
push
sbb
add
and
clc
fwait
aad
mov
hlt
les
mov
lock
jne
fcompl
push
cmpb
das
jns
nop
xchg
adc
mov
adc
bound
enter
sub
pop
push
movsl
jnp
mov
fstpl
cmp
mov
ljmp
imulb
jp
into
push
adc
mov
testl
roll
mov
pop
cli
inc
shrb
or
dec
cwtl
out
insl
push
insb
insl
lock
jne
pop
sub
rorl
inc
mov
cltd
imul
mov
cmp
push
mov
push
xor
cmpsl
mov
or
and
je
push
pop
cltd
sahf
fidivrs
adc
cmp
dec
push
inc
leave
cmp
sub
mov
dec
and
aaa
cmp
mov
xchg
adc
xchg
pop
imul
loop
push
mov
pop
jmp
mov
and
lret
push
xchg
aas
inc
shll
pop
mov
cmpb
dec
inc
fimull
je
mov
or
jnp
dec
mov
mov
mov
cmc
subl
pop
sbb
scas
cs
test
push
fstl
int
clc
jge
dec
outsl
mull
mov
push
pop
or
xchg
mov
insb
jmp
icebp
ljmp
lahf
adc
fs
jge
je
fidivs
loopne
add
xchg
mov
loopne
clc
out
jmp
imul
xchg
and
sbb
je
iret
add
mov
jle
add
mov
je
inc
sub
pusha
call
imul
add
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
inc
add
mov
add
add
add
add
add
add
add
