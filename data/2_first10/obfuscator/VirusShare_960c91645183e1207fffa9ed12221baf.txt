push
movb
sub
add
xor
add
inc
movb
dec
movb
movb
je
add
xchg
add
xchg
movb
add
add
mov
add
ret
add
movb
fadd
add
in
movb
clc
movb
outsb
out
gs
fneni(8087
into
es
pop
xchg
mov
cmpsl
inc
fwait
push
cmpsl
xor
mov
mov
cmp
add
es
std
inc
mov
or
fstl
popf
frstor
insl
jnp
pop
sub
dec
jnp
mov
imul
je
mov
lcall
jae
inc
dec
stos
sub
add
in
ficompl
mov
mov
dec
lock
ret
movsl
jnp
orb
scas
jg
in
mov
andb
js
xchg
fistps
ss
inc
ret
jge
call
adc
in
sub
adc
mov
sub
push
fistps
pop
inc
in
inc
jge
fs
psrlq
mov
aam
mov
into
push
xchg
cmp
in
mov
cmp
sbb
push
daa
xchg
or
sbb
dec
into
scas
sbb
cmc
mov
cmp
mov
into
jb
mov
lret
popf
arpl
imul
jge
movsl
adc
jbe
inc
lret
jb
sub
lods
orl
ja
rclb
sub
lock
mov
mov
xchg
jb
inc
xor
pop
inc
or
cmp
sbbb
sahf
inc
testl
fcoms
pusha
adc
sub
dec
push
stc
in
or
inc
in
xchg
mov
out
cmp
movaps
or
icebp
sbb
mov
add
cmpsb
xor
mov
inc
adc
adc
or
lahf
cmp
inc
and
lock
jnp
push
repz
push
ficompl
or
push
pushf
or
pop
and
aad
orl
push
mov
mov
subl
adc
cmpb
loopne
insl
mov
mov
insb
imul
outsb
xchg
sub
sahf
ret
cmp
insb
iret
call
rorb
std
jbe
in
cmpsl
stos
mov
dec
aas
rorl
xchg
movsl
mov
inc
pop
pop
push
or
mov
imul
xor
lret
mov
mov
cs
nop
not
arpl
movsb
loope
push
cmc
inc
aaa
pop
mov
je
jno
stos
mov
mov
out
mov
imul
arpl
pop
test
xchg
dec
stc
incb
cmpsl
enter
pop
pushl
sahf
xor
xchg
inc
into
fisttpl
and
xchg
repz
cli
add
mov
mov
notb
add
or
sub
lods
in
xor
icebp
imul
cltd
sarb
inc
mov
xor
je
sbb
scas
or
in
mov
into
cli
jne
fs
add
add
fldl
jbe
xchg
dec
lea
mov
push
pop
ljmp
aad
lock
je
outsl
in
adc
jnp
mov
loopne
ret
inc
in
push
repz
sbb
pop
jecxz
cmp
das
cmp
out
cs
shr
jle
popf
add
lock
inc
std
sti
jae
cli
add
adc
xchg
insb
hlt
add
push
imul
in
jecxz
insl
adc
out
sbb
mov
rorl
sbb
test
jae
xchg
push
xlat
adc
and
fistpll
ficomps
add
jmp
pushf
xchg
or
cmp
jl
insb
cmc
adc
fbld
pop
push
ds
mov
out
repnz
stc
jp
mov
adc
adc
dec
dec
pop
iret
sahf
cmpsb
rorl
ss
clc
por
sbb
push
lahf
repnz
scas
push
mov
push
push
mov
pop
mov
mov
data16
xor
xor
pop
js
movl
pop
test
in
mov
mov
pop
sbb
fisttpll
in
cmp
jb
cmc
out
lock
je
dec
sbb
daa
js
sub
or
movsb
and
add
fstps
popf
test
mov
rcrb
cwtl
xor
cmp
dec
xchg
mov
rcl
cmp
push
bound
jb
pop
shll
repz
movsl
xchg
out
sbb
fnsave
push
pop
mov
mul
test
adc
outsb
int3
mov
insb
pop
jl
lret
outsb
test
shl
sbb
push
out
notb
mov
insb
mov
in
inc
sbb
lcall
fdivrl
lea
mov
push
xchg
shrb
cmp
inc
jne
and
test
xchg
sbb
subb
clc
jns
sbb
jle
fiaddl
inc
stos
adc
clc
shl
xchg
jmp
mov
jg
andb
js
jle
pop
sbb
notl
pusha
cmp
fwait
pop
xchg
clc
or
or
adc
inc
mov
adc
lahf
nop
bound
cmp
fimull
mov
add
addr16
dec
jmp
or
mov
adc
jno
sbb
xchg
sub
dec
in
in
iret
pop
mov
mov
xlat
cmpsl
icebp
xorb
mov
popl
das
push
or
mov
and
test
cmpl
aaa
pop
dec
dec
sub
jnp
fimuls
sub
in
lods
push
and
mov
mov
lods
lahf
pop
lea
stc
pop
xchg
jp
mov
inc
fdivrl
mov
sbb
addr16
in
inc
pop
inc
fnstcw
push
in
scas
es
mov
scas
push
in
imul
xchg
daa
sahf
clc
testb
aam
lea
stc
inc
cwtl
imul
popa
loop
lds
aaa
insl
and
mov
push
in
int3
icebp
dec
or
or
fisubrl
xchg
xlat
dec
jecxz
jp
cwtl
cmp
int3
jmp
pop
lcall
ja
or
inc
sub
pop
imul
hlt
push
test
dec
int
push
in
sub
add
jp
push
inc
mov
fwait
mov
mov
rolb
mov
inc
movsl
jbe
das
add
fstpt
push
icebp
and
jnp
sub
sub
mov
xchg
adc
clc
ret
aam
jmp
addr16
ficoml
repnz
mov
jle
jg
and
test
dec
jno
lods
movsl
xor
pop
out
dec
mov
out
sahf
xchg
in
mov
mov
pop
out
or
cmc
or
lret
jge
orb
shl
mov
cwtl
adc
mov
inc
push
push
rorl
add
fxch
xor
mov
mov
xor
cmpsb
mov
fildl
ret
or
out
push
lcall
dec
dec
mov
shrl
std
imulb
int
negb
xor
push
pop
jnp
fstl
arpl
pop
in
inc
xor
mov
push
inc
xchg
jle
fadd
mov
out
popa
add
add
mov
mov
pop
in
shlb
imul
push
xlat
jp
jnp
and
push
add
inc
cmp
mov
jno
stc
xchg
in
mov
xor
add
call
test
and
mov
push
mov
and
sbb
in
xor
lret
jae
fdivl
and
inc
js
sbb
fs
sbb
sti
sub
in
imul
insl
mov
sbb
inc
gs
jno
roll
lahf
repnz
sbb
and
push
lret
insb
out
mov
mov
xchg
pop
push
push
pop
in
mov
and
adc
rorl
jge
arpl
scas
dec
xor
movsl
popa
repz
lret
das
hlt
les
adc
fwait
std
mov
dec
adc
iret
dec
fnsave
roll
mov
mov
or
outsl
mov
scas
adc
inc
fs
ret
dec
cltd
mov
dec
sbb
pop
in
inc
cwtl
nop
lds
mov
aam
sbb
pop
jmp
dec
push
lret
mov
dec
xchg
inc
leave
xchg
ja
call
pop
cwtl
std
or
push
rcl
scas
dec
fnstcw
add
inc
cmp
loop
lods
push
mov
and
jb
cwtl
mov
pop
leave
push
outsb
bound
out
stos
pusha
inc
push
sarl
or
shrb
inc
cltd
sub
pop
jle
or
or
lcall
cmp
insb
fs
adc
imul
mov
test
mov
es
mov
shl
arpl
pop
sbb
jl
sbb
push
push
or
dec
sbb
aad
aad
adc
repnz
outsb
mov
add
mov
xchg
and
in
and
pop
jle
push
mov
mov
sub
sub
jle
push
xor
aas
or
cmc
ret
and
inc
inc
pop
mov
insl
bound
sahf
mov
mov
mov
xor
push
stc
xchg
inc
movsb
shr
jns
push
jae
cmp
adc
jp
cltd
test
mov
cmpsl
jbe
jecxz
mov
cmpsb
dec
aaa
and
or
dec
dec
dec
mov
adc
jl
cmp
add
in
inc
cmp
jecxz
aas
mov
fimull
call
lods
pop
cltd
lcall
popf
les
xchg
jbe
daa
pop
add
or
lea
xor
mov
xor
stc
push
inc
xchg
jl
fistpll
inc
mov
stos
ret
addr16
mov
test
pop
lret
scas
movsb
scas
dec
cmp
adc
stos
mov
push
pop
push
xor
xor
into
cmpsl
xor
jnp
shrb
push
and
jmp
fbld
push
jns
dec
dec
outsb
push
sbb
or
pop
or
testl
xlat
push
lcall
addr16
pusha
mov
xor
popf
sbb
cmpsl
mov
xchg
jnp
sub
pop
dec
fmulp
repz
mov
mov
cld
ss
lahf
ret
push
shll
outsl
mov
add
xchg
push
sub
jb
rorb
sarl
imul
repnz
lret
jl
sbbb
xchg
ss
rcr
inc
out
sub
rcl
cmp
loopne
jp,pt
arpl
shrl
cmp
loop,pn
inc
test
inc
push
loop
mov
xchg
pop
xchg
xchg
outsl
xchg
shrl
mov
adc
sbb
cs
mov
mov
add
cld
adc
sbb
xor
inc
enter
xor
lahf
gs
shll
jbe
dec
mov
aaa
xor
xor
add
lret
repnz
inc
inc
jns
imul
in
xor
xchg
dec
xor
mov
dec
rclb
push
faddl
iret
loopne
pop
inc
inc
xor
subb
test
pop
sar
adc
cmp
xor
jb
jg
mov
add
jecxz
cli
sbb
loope
inc
cmp
cmp
mov
ret
lret
xor
rep
mov
call
pop
ja
icebp
cmp
arpl
jne
sbb
setbe
jbe
ja
bnd
add
or
cmpb
out
out
cmp
sbb
out
shl
adcl
in
mov
sub
dec
mov
dec
ja
sar
into
lcall
loope
daa
popf
shl
shrl
sub
add
jp
pop
aam
and
arpl
enter
imul
sahf
scas
stos
jnp
xchg
xor
in
jp
movsb
cmp
das
dec
out
lods
xor
or
mov
sbb
lcall
mov
or
loop,pt
pop
or
fidivl
ret
mov
test
mov
or
shrl
jnp
jmp
xchg
sbb
out
ret
push
scas
pop
inc
mov
sbb
cmpsb
outsb
stos
sbb
mov
push
pop
movsl
add
ficomps
add
movsb
and
inc
cmp
pop
loopne
popl
ffree
jmp
mov
mov
adc
cli
jmp
xor
mov
stc
cmpsl
shlb
pop
insb
icebp
xchg
and
cld
fwait
out
bound
push
adc
test
and
enter
or
jbe
xor
push
or
shll
leave
push
lock
mov
test
insb
lock
int
mov
aas
imul
inc
cmp
ret
cmc
push
subb
rolb
xchg
dec
stos
or
and
xchg
ret
pop
fsubrs
xchg
popf
mov
dec
mov
inc
pop
je
loope
sar
sbb
xchg
test
mov
outsl
xchg
les
jbe
ret
cwtl
jle
and
and
lret
dec
mov
jl
pop
xchg
mov
je
inc
mov
cmpsl
jne
pop
add
mov
add
iret
outsb
pop
adc
into
adc
inc
stc
mov
sahf
stc
inc
adc
jbe
jbe
loop
sub
sub
les
mov
fisubrs
add
fs
mov
mov
aaa
adc
xor
fwait
movd
das
dec
arpl
mov
popa
hlt
faddl
adc
scas
xchg
addl
or
cmp
jb
add
adc
push
cmp
popf
loopne
xchg
sbb
bnd
clc
and
cmp
mov
ss
mov
or
adc
mov
pop
addr16
add
fsubs
stos
pop
mov
dec
in
lret
dec
shlb
cmp
xchg
mov
push
std
jecxz
or
lea
addr16
outsb
mov
imul
inc
test
jae
mov
push
push
imul
push
dec
and
in
hlt
cmove
mov
dec
jl
mov
cmp
sbb
mov
fisubrs
mov
sbb
mulb
imul
jmp
les
pop
repz
ss
iret
fadds
mov
lds
mov
adc
push
xchg
sbb
xor
scas
aad
and
mov
push
scas
pop
sub
incb
lret
movsl
mov
add
iret
lret
ss
push
pop
loop
fcomi
mov
enter
adc
lcall
xchg
dec
adc
iret
shr
xchg
dec
es
enter
or
sub
and
fnstsw
ljmp
sub
mov
sub
add
enter
dec
je
push
inc
pop
push
into
lret
shll
inc
cwtl
adc
sbb
push
jbe
mov
xchg
mov
push
xor
xchg
shlb
lcall
int
pop
push
fs
lods
out
dec
xchg
nop
mov
jno
pusha
mov
rcrl
push
lret
test
stc
jp
xchg
out
cli
sahf
xor
mov
ss
push
pop
pop
icebp
lcall
adc
fcomps
int
pop
push
repz
loope
lods
notb
inc
add
xchg
js
inc
mov
ja
jmp
ljmp
dec
push
lret
xor
cltd
ret
idivl
sub
clc
cmp
pop
je
pushf
pop
flds
bound
pushf
push
sub
jno
xorb
cs
clc
and
cmp
idivb
inc
and
dec
jge
pop
push
mov
enter
enter
cwtl
sti
mov
aad
les
shrb
insl
and
push
loopne
loopne
mov
inc
or
mov
xchg
pushf
mov
adc
sarb
dec
inc
sbb
and
xchg
enter
imul
sbbb
lea
notb
daa
lcall
bound
into
repnz
cli
jae
in
nop
xchg
rcrl
imul
icebp
loope
pop
dec
fdivs
xor
pop
and
mov
repnz
pop
adc
adc
sahf
popf
lahf
fxch
inc
inc
xchg
and
dec
xchg
or
outsb
add
and
mov
push
cmp
xor
mov
mov
push
dec
lahf
mov
or
cmp
faddl
pop
clc
adc
icebp
outsb
mov
int3
fldz
xchg
test
int
dec
pop
xchg
inc
cltd
psubw
repz
and
inc
sub
dec
jl
test
inc
inc
xchg
xchg
inc
addr16
fdivrl
sub
pop
scas
sbb
cmp
loopne
js
pop
pop
jb
pop
or
lds
pop
outsl
cmpsl
xor
insb
xchg
pop
ja
incb
insl
in
mov
mov
push
outsb
clc
arpl
rcll
push
andb
fistl
mov
jmp
pushf
cwtl
jbe
in
sarb
mov
pop
and
jmp
or
leave
adc
in
iret
bound
loopne
popf
mov
outsl
shrb
test
pop
ret
sbb
sbbl
je
sbb
jo
adc
gs
clc
sbb
fistpll
insb
sub
mov
mov
or
in
pop
xchg
and
mov
mov
adc
data16
mov
sub
cwtl
cmpb
xor
mov
dec
lcall
mov
sbb
sbb
bound
repnz
das
cmp
jecxz
out
pop
jae
jnp
adc
jno
jmp
cli
or
fsts
mov
xor
dec
arpl
xor
ret
jae
shrl
dec
mov
add
in
aaa
imul
insb
sti
std
xlat
pop
push
push
sti
test
mov
pusha
jge
sbb
icebp
mov
sbb
cmp
cmpb
es
xchg
pop
mov
xlat
outsl
cmp
mov
fisttps
rcr
adc
dec
adc
or
mov
sbb
mov
sbb
mov
mov
adc
add
adc
cmp
mov
fnsave
ret
pop
or
sahf
pop
jmp
das
jae
arpl
cmp
fsubs
addr16
xchg
mov
stos
or
jbe
push
arpl
cmp
mov
addb
div
xchg
adc
inc
out
shlb
hlt
push
pop
cmpl
cmp
test
and
jb
scas
adc
ljmp
xchg
arpl
cld
jno
dec
movsl
ret
je
inc
pushf
repz
add
and
call
dec
rolb
sub
cmp
pop
outsb
popa
in
push
mov
cmp
stos
fbld
xchg
gs
mov
cmpsl
sbb
stos
aam
push
jbe
and
cmp
rolb
xchg
xor
inc
xor
dec
test
imul
loope
mov
out
and
call
fdivl
inc
mov
data16
fsubrs
mov
sbb
inc
mov
mov
js
repz
lret
outsb
scas
inc
mov
jmp
popf
adc
mov
or
daa
mov
jmp
lret
mov
add
and
add
cmp
mov
or
mov
pop
push
repnz
cld
push
out
bound
call
xchg
fs
gs
ss
dec
add
dec
xchg
push
icebp
loopne
ret
leave
lods
cwtl
addr16
into
sbb
cmpb
mov
fmull
adc
cmp
xchg
outsb
or
das
dec
aaa
pop
push
sbb
xor
call
push
mov
cmc
add
cmp
pop
dec
jne
add
jle
xor
pop
xchg
xchg
mov
push
outsl
inc
je
inc
roll
jns
stos
jno
adcl
lds
hlt
cmpl
add
jge
insb
mov
dec
sti
mov
mov
in
inc
push
hlt
lcall
dec
jle
imul
pop
iret
and
push
dec
mov
sti
sub
mov
orb
out
cmpsb
xchg
mov
cs
cmpsb
inc
insb
xchg
xchg
mov
outsl
pop
insb
stos
pop
push
push
jmp
jae
xchg
mov
leave
push
pop
ret
bound
test
mull
push
bnd
fmul
loope
mov
jne
push
aas
insb
add
xchg
mov
stos
add
dec
mov
pop
mov
cmp
push
mov
push
roll
cmp
daa
cmp
lea
jae
cmpsl
fwait
jg
and
inc
dec
dec
test
lcall
aad
lods
cmpsl
mov
or
jns
sbb
in
xor
xchg
popf
lcall
and
and
xorl
je
ret
sub
mov
adc
mov
loopne
fxch
cmp
mov
popl
cmp
in
push
add
push
add
sar
dec
add
test
cs
xor
cmp
xor
xor
into
lret
push
stos
mov
fwait
dec
inc
xor
jp
call
stos
jae
popf
xchg
insl
adc
and
fcoml
into
xchg
or
push
jno
scas
mov
push
pop
and
shrl
add
jmp
enter
sbb
adc
repnz
sbb
push
test
mov
popf
rdseed
sahf
je
mov
das
ja
and
shrb
fsubl
imul
sub
fs
icebp
movsl
and
sbb
std
out
push
int
inc
jle
mov
inc
sub
dec
push
fwait
divl
dec
js
aam
jbe
rcrb
les
mov
ljmp
scas
lds
push
jl
fists
jge
imulb
and
aaa
inc
cmpsb
inc
cli
jo
lea
xchg
enter
cmp
repnz
adc
loopne
push
or
mov
mov
mov
push
cmpsl
pop
ret
sarb
movsl
leave
cmp
fs
jmp
ret
adc
ds
mov
jb
cmp
mov
mov
mov
popa
sbb
mov
fisubs
movsb
call
mov
adc
test
or
xorb
imul
sub
loopne
dec
lea
mov
test
mov
icebp
ret
iret
mov
arpl
mov
imul
mov
sbb
lds
pop
or
pop
cltd
cwtl
xchg
lock
lock
mov
sub
or
pop
push
mov
adc
rclb
xor
movsl
inc
pop
mov
or
inc
popa
fistpll
int
in
call
loop
push
in
mov
js
orb
loope
cmp
xchg
arpl
lds
popf
ss
mov
scas
int3
xor
movsl
stos
sbb
pop
mov
pushf
shrl
adc
clc
outsb
or
insb
adc
ret
gs
adc
mov
adcl
mov
dec
adc
add
lahf
cmp
mov
jmp
incl
and
movsb
adc
imul
sbb
jge
inc
push
push
push
stos
fsubl
mov
sbb
dec
add
xor
pushf
lcall
sub
sahf
xor
stc
jbe
xor
push
aad
inc
mov
dec
jl
sub
mov
out
mov
and
mov
sub
sub
or
xchg
xor
lods
test
xchg
xchg
add
sbb
pop
jnp
pop
jle
adc
ss
stc
cwtl
push
in
jo
cmp
cmp
lret
cmp
push
mov
mov
add
fwait
lret
xchg
inc
pop
and
dec
and
arpl
pushf
cmp
pop
jne
pusha
shrb
mov
lret
lret
or
popa
iret
movsl
fmul
push
out
pushl
loope
lea
jns
inc
fcompl
adc
push
js
jmp
cmp
sbbb
popa
cmp
and
add
mov
mov
out
mov
xchg
shrl
mov
mov
lcall
jmp
jns
xor
mov
xchg
fcomp
jae
push
sbb
push
xchg
test
ljmp
xor
jg
andl
int
test
jnp
je
jae
fs
push
movsl
xchg
sub
std
loopne
inc
push
jge
notb
xchg
dec
sbb
xchg
push
add
fs
repnz
js
adc
aam
lods
and
jne
inc
lret
sbb
xchg
loope
insl
dec
int
negl
iret
fstpl
dec
das
add
xchg
sbb
test
inc
xor
jb
std
ror
lods
cld
jg
xor
jge
pop
bound
sub
lock
mov
imul
mov
or
cwtl
ds
in
inc
stc
pop
std
adc
pop
sub
js
push
xlat
in
leave
mov
sub
nop
inc
pop
mov
xchg
sbb
shlb
xor
pop
jae
jl
or
ljmp
in
in
lds
pop
or
aaa
add
divb
cltd
mov
mov
cmpsl
cmp
scas
mov
in
mov
or
push
xor
or
sub
sbb
lods
or
loop
mov
daa
out
fisttpll
cmc
loopne
or
or
or
push
pop
mov
int3
lock
mov
mov
mov
les
mov
cmc
add
je
jnp
insb
sub
adc
dec
mov
or
mov
dec
out
gs
cmp
sbb
out
fisubrl
jnp
mov
or
mov
inc
add
push
jo
xchg
or
repz
clc
xchg
push
add
xor
inc
test
sarb
shrb
xor
mov
pop
mov
xchg
mov
mov
mov
int3
jle
mov
push
fwait
adc
jmp
mov
popf
scas
sub
popa
and
mov
push
jb
and
xchg
hlt
iret
pop
popf
fdivl
add
ret
pushf
in
pop
imul
mov
mov
leave
mov
cmp
jl
fstpl
bound
mov
stos
gs
pop
test
cmc
mov
cmp
adc
push
cld
fisttpll
mov
nop
lods
cwtl
adc
ljmp
mov
pop
enter
enter
mov
sub
xor
bnd
shrb
fistps
cmp
mov
sbb
mov
stc
data16
scas
ret
cmp
icebp
mov
rorl
pusha
pushf
pop
mov
test
dec
aad
lods
pop
adc
scas
test
or
pop
cmp
mov
jo
fcomp
pop
jle
jne
jae
lock
daa
pop
mov
test
mov
xchg
xor
push
andl
jg
fwait
repnz
push
mov
sbb
lret
cwtl
insw
adc
icebp
add
movsb
mov
add
in
jmp
mov
add
jno
xchg
xor
sahf
dec
cmp
pop
pushf
cmp
outsb
mov
repz
enter
pop
loope
push
test
xchg
and
sbb
mov
mov
stos
cmpsb
jns
pop
sti
jl
mov
or
daa
adc
mov
mov
decl
arpl
inc
rcrl
insb
outsl
or
popa
popa
aas
imul
ret
mov
in
mov
fisttpll
inc
pop
sub
sarl
pop
aas
iret
pop
ljmp
mov
pop
lods
mov
or
dec
movsb
add
fs
or
clc
mov
jecxz
arpl
push
subl
bound
sarb
cmpb
nop
lcall
loope
inc
shll
std
xor
push
add
dec
idivl
insl
and
addb
inc
lds
fstps
test
ss
and
adc
cld
jae
lcall
addr16
mov
sbb
shr
mov
push
jecxz
sub
call
mov
mov
enter
lret
xchg
mov
xchg
push
mov
in
sbb
push
cli
stos
cmp
insb
mov
mov
xchg
dec
sahf
loop
mov
mov
and
push
jb
fsts
ret
push
push
popa
cmp
cmp
jb
lods
rcr
push
lea
subb
add
int3
sub
push
adcl
pop
adc
aam
imul
pop
fnsave
mov
sub
frstor
rorb
pop
sti
out
add
push
and
stos
xchg
stc
xor
mov
in
notb
add
enter
mov
mov
jbe
icebp
sbb
mov
mov
mov
add
add
cli
cld
scas
js
xor
shlb
dec
inc
popa
pusha
or
imul
das
pop
add
sbb
xor
mov
and
fcmovnb
mov
sub
pushf
out
rcll
adc
adc
jns
fucom
lahf
lret
out
inc
cmp
je
xor
pop
orps
push
aaa
cltd
adc
mov
pop
je
and
xchg
fisubrl
sahf
xchg
add
addr16
les
dec
pop
push
pop
mov
fcmove
outsl
mov
pop
les
loope
mov
cmp
mov
in
mov
cmpsb
ret
xor
lret
mov
and
stos
jl
xor
cli
les
leave
jne
in
insl
lea
es
mov
insb
mov
mov
sti
cwtl
sbb
int
jecxz
arpl
shl
lahf
or
adc
fstl
test
movsl
test
or
or
aaa
inc
adc
mov
cmp
rcrb
loopne
std
loop
js
add
mov
clc
or
fnstenv
stos
push
cmp
imul
ljmp
shl
sub
push
setne
sub
das
adc
hlt
dec
dec
add
pop
icebp
inc
sahf
mov
das
gs
dec
and
sub
adc
and
in
mov
roll
inc
fs
pop
mov
mov
xor
xchg
jge
sbb
js
mov
mov
jb
fdivrp
mov
movb
test
lds
mov
outsb
lahf
xor
pop
jl
fwait
addr16
lret
repz
or
fistps
sbb
push
outsb
adc
mov
cltd
ja
jno
or
mov
negl
icebp
aam
inc
aas
push
cmc
inc
jne
loope
pop
inc
push
dec
push
andb
sub
loop
xchg
jge
sbb
ret
dec
sbb
xchg
mov
jns
in
xor
adc
mov
lcall
icebp
xlat
sbb
test
xor
push
push
out
test
inc
mov
or
push
fldpi
lret
mov
inc
scas
adc
les
lcall
cltd
jno
into
add
xlat
mov
adc
scas
cltd
jp
adc
jnp
push
jne
inc
pxor
shlb
clc
or
dec
push
in
push
mov
daa
clc
int3
cwtl
sbb
xchg
aas
repz
cmpl
xchg
jnp
icebp
xchg
shrb
pop
add
sub
push
cwtl
sub
mov
mov
outsl
pop
popa
fisubrs
je
in
cmp
mov
rorb
adc
jae
jbe
and
xchg
addl
ret
jg
adc
and
iret
sbb
xor
pop
in
mov
mov
das
dec
fstpl
lahf
cmp
xchg
lcall
cld
adc
insb
ret
sbb
push
enter
cmp
add
cli
xchg
loopne
xorl
and
mov
out
mov
iret
push
sbb
lock
lea
lods
popa
in
ret
in
insl
and
push
clc
je
inc
and
int
add
mov
shl
pop
rclb
cmpsb
cmp
push
sarl
adc
xchg
xchg
fidivrl
and
jbe
mov
and
mov
insb
lcall
movsb
jmp
movl
dec
push
jae
sub
pushf
push
fst
movsb
mov
pop
mov
push
jbe
dec
pop
mov
ljmp
jne
call
jb
xorb
adc
outsl
push
les
xlat
mov
rcrl
in
xchg
mov
lock
pusha
mov
loop
sub
xchg
sub
cmpl
cmpsb
cltd
push
sub
lock
nop
pushf
fmuls
mov
jg
int
lods
fbld
int
dec
push
mov
cmc
mov
add
sbb
dec
cmpb
pop
mov
mov
out
int3
hlt
mov
les
cwtl
outsb
or
sub
jno
into
bound
or
lea
movsl
mov
push
mov
xchg
mov
add
ret
into
dec
mov
test
cmp
negl
mov
bound
and
dec
push
mov
jge
xchg
cmc
and
ret
push
adc
xor
and
jl
scas
aam
pushf
sub
inc
repz
dec
mov
cmc
cmp
nop
xor
sub
xchg
neg
add
fcomps
in
inc
daa
mov
dec
les
popf
stc
push
mov
mov
sub
popa
rcr
ds
test
cmp
shlb
xchg
in
xchg
pop
rorb
dec
sub
in
out
out
xchg
call
popa
test
pushf
xor
sub
adc
fdivs
lods
sarb
inc
jmp
pop
mov
sbb
cmp
dec
ffree
mov
push
mov
fucom
add
add
rcrl
shrb
sbb
mov
arpl
sub
pop
fimull
popf
xor
jb
mov
mov
filds
stc
iret
pushf
xchg
fadd
cmp
or
bound
jns
pop
popa
xchg
mov
mov
jae
xor
jmp
test
icebp
push
adc
scas
in
add
inc
imul
int
enter
and
mov
sarl
in
and
sahf
jbe
mov
or
mov
xor
xchg
adc
in
or
mov
sti
dec
cld
cmpsl
xor
mov
iret
or
fstps
popl
inc
push
or
ds
xlat
mov
call
lods
ljmp
test
lcall
mov
enter
sbb
push
adc
jg
jbe
jge
ret
popa
and
mov
clc
jae
xor
jno
loopne
cmpsl
push
shl
sbb
mov
and
mov
nop
sub
lret
cmc
movsb
pop
and
int3
lods
je
push
mov
loope
pop
sbb
xorb
adc
sahf
adc
ljmp
jns
out
fidivrl
mov
mov
dec
bound
mov
cmp
push
push
add
fstp
mov
or
pushf
lods
xor
mov
xchg
test
jle
lret
mov
aas
pop
xor
jns
mov
stos
sahf
push
mov
test
mov
sub
lock
popf
stos
cmp
sti
into
dec
mov
sub
jl
xlat
push
jns
add
out
shr
jo
sti
insb
mov
pop
mov
jp
jmp
adc
mov
sub
icebp
push
mov
shl
ds
dec
sbb
sbb
push
jl
test
pop
add
imul
movsb
cs
std
cltd
fisubrs
mov
inc
push
xchg
into
adc
into
pop
std
ret
push
jecxz
jno
les
cmp
in
pop
add
mov
out
repz
int3
mov
push
lcall
jne
mov
cmpsb
pop
imul
jne
subl
bound
and
pop
xchg
xchg
shll
outsb
icebp
mov
out
outsl
int3
in
daa
jmp
or
pop
pop
add
cwtl
pop
mov
push
icebp
ja
adc
mov
jp
rolb
popa
xor
sbb
jbe
jmp
and
lods
lret
mov
mov
icebp
push
mov
adc
flds
pop
xorb
mov
orl
push
inc
imul
sbb
pop
ds
pusha
pop
and
pop
dec
adc
sub
fdivl
mov
or
ret
and
loopne
or
and
loopne
test
rorb
xor
lods
push
test
push
jbe
ret
shlb
mov
outsl
dec
xchg
push
in
jl
jecxz
loopne
xchg
es
jnp
fldl2e
push
or
xchg
mov
mov
jmp
test
inc
pop
fnsave
jae
jp
inc
fwait
daa
inc
shll
inc
pusha
pop
xchg
cmpsb
add
mov
mov
pusha
shlb
gs
divl
scas
in
insb
dec
add
push
xor
gs
inc
mov
outsb
mov
push
sub
ficoml
cmp
out
movsb
icebp
cld
jbe
adc
int
cmp
cmpsb
or
cmpsb
dec
inc
fldlg2
adc
jns
push
add
fwait
push
les
pop
sub
cmp
mov
loopne
and
push
pop
push
jns
adc
xchg
cmp
lods
dec
mov
dec
pop
mov
sahf
stc
shrl
jbe
sub
add
sub
jnp
pushf
sub
mov
jb
leave
aaa
lds
inc
imul
mov
mov
sub
pop
das
jge
sbb
sbb
enter
push
in
test
sub
mov
arpl
mov
cwtl
in
push
or
arpl
mov
or
dec
lcall
es
ds
pop
add
call
int3
sarb
scas
cwtl
cwtl
std
adc
xor
inc
xor
mov
mov
daa
jle
loope
push
and
mov
rolb
arpl
lret
mov
fs
xorb
sar
and
dec
das
add
jns
cmpsb
jl
negb
iret
pop
lods
xor
fistps
adc
movsb
ljmp
fisttpll
jne
repnz
je
das
push
out
std
sbb
jbe
inc
jmp
call
shl
jmp
push
sub
lods
sahf
fistps
out
std
repz
in
iret
in
cmp
dec
inc
lods
fsts
int
ja
je
into
xchg
ret
and
xor
jne
andb
mov
xor
ja
fcoml
cmp
gs
adc
std
fiadds
or
cwtl
adcb
int3
shll
adc
orb
mov
repnz
inc
cmp
test
dec
or
cli
ror
das
cs
adc
xchg
mov
clc
jns
inc
xchg
mov
inc
mov
pop
dec
fwait
pop
lock
rcrl
andl
sub
fadd
outsb
or
dec
aas
ljmp
ljmp
rorl
and
push
inc
rcr
test
pop
cmp
pop
push
cmp
xor
jno
jp
fcoms
jmp
lcall
and
int
sbb
popa
add
cmp
dec
mov
lods
pop
stos
es
mov
or
les
push
xchg
out
loopne
mov
ja
xor
cmp
lcall
jp
xchg
lds
xlat
xor
mov
pushf
push
fidivrs
sub
imul
mov
mov
adc
and
dec
test
cltd
sub
out
dec
add
hlt
jb
sub
jl
dec
hlt
xor
push
cmpsl
lret
fisubrs
mov
shrl
jae
loope
push
test
xor
mov
and
xor
pop
jl
fmulp
mov
mov
cmp
and
mov
pop
and
mov
ljmp
dec
insb
frstor
mov
call
push
add
sahf
pop
inc
leave
outsb
ss
cwtl
mov
fs
out
or
pop
pop
sbb
xor
adc
shll
fcmovu
jecxz
mov
mov
shl
add
notb
sbb
mov
dec
cmp
mov
lret
jne
jae
out
mov
out
lds
mov
add
imul
pop
stos
in
daa
mov
sub
into
out
test
fcoms
xor
lahf
imulb
cmp
dec
jge
jb
pop
push
sar
push
sbb
jns
cwtl
daa
jge
jno
cltd
and
push
mov
pusha
daa
popf
ljmp
xor
dec
movsb
mov
inc
mov
cmp
imul
mov
fbld
test
pusha
mov
movsl
popa
test
mov
in
mov
arpl
aas
mov
pop
jp
out
popfw
push
enter
cmp
or
lcall
sbbl
cs
iret
sub
fdivrs
xchg
adc
adc
fidivl
inc
mov
pushf
push
dec
pop
addl
fisttpl
sbb
sbb
mov
lahf
sbb
in
dec
mov
dec
repz
fisubrl
sarl
mov
cmp
loop
stos
jmp
dec
in
incb
mov
ret
xchg
insb
jbe
inc
dec
clc
dec
out
fwait
cwtl
or
or
and
pop
sbb
jecxz
fs
ljmp
xchg
lcall
adc
sub
xor
and
cltd
cwtl
fldenv
dec
stos
mov
mov
mov
mov
cmp
inc
movsl
ja
shrl
jb
sub
shr
test
jp
arpl
mov
pop
scas
and
out
or
hlt
roll
adc
inc
dec
addr16
call
push
test
cltd
out
int
mov
mov
adc
jo
stc
pop
sbb
mov
dec
fsubl
js
cmp
sub
and
fwait
lds
cwtl
jg
cmp
pop
mov
sarb
loopne
cli
pop
and
mov
fnstcw
add
cmc
aas
push
mov
ret
jns
cmp
pop
or
repnz
fldt
lods
ret
or
and
fwait
jnp
push
rcll
lcall
mov
mov
inc
ss
ja
lret
lods
aam
fdivr
lods
stos
icebp
aaa
scas
push
pop
or
or
push
pushf
mov
shlb
xchg
inc
movsl
es
mov
cmpsb
mov
lock
or
mov
xor
add
or
mov
mov
push
inc
sub
in
stos
mov
mov
jg
sti
push
call
aam
pop
lods
adc
mov
mov
imul
aam
or
lds
lret
and
or
sbb
jle
sub
or
outsb
test
dec
xor
mul
and
test
out
adc
add
push
sub
les
and
nop
and
andl
dec
stc
sub
inc
pop
and
addl
test
sahf
outsb
xor
inc
push
inc
mov
jle
jecxz
ret
fcoml
dec
adc
mov
jnp
pop
test
imul
stc
xchg
pop
scas
mov
scas
sbb
lock
and
or
dec
adc
add
xchg
addr16
loop
mov
shlb
lock
nop
iret
and
adcb
xor
popa
popf
pop
adc
cmp
dec
pop
cmp
aad
xchg
jg
sbb
pop
out
jp
in
jl
push
bound
lea
inc
repnz
inc
inc
movsb
mov
add
sbb
sbb
mov
jp
dec
or
ljmp
loopne
outsl
cmp
test
xchg
jne
mov
nop
xchg
aas
xor
bound
jb
cld
iret
sub
das
inc
sub
call
icebp
sub
cmp
out
into
and
add
ds
fnclex
in
dec
frstor
mov
ljmp
lds
sub
leave
in
inc
iret
xchg
ja
fstps
test
push
and
pop
and
dec
repz
mov
insl
ja
dec
aam
xchg
das
std
cmp
mov
aad
ljmp
lret
jecxz
dec
sahf
stc
xchg
jecxz
cmp
rolb
inc
adc
mov
sbb
and
in
xor
inc
iret
pusha
test
inc
int
xlat
js
loop
shll
mov
sbb
adc
jns
and
lods
in
stc
inc
cmp
pop
cmc
stc
inc
mov
or
mov
fisttpl
sbb
out
pop
outsl
lret
mov
nop
push
sub
popa
stos
data16
jns
out
sbb
daa
pop
push
lods
out
je
xlat
in
mov
ljmp
mov
fdivr
in
xchg
pop
mov
push
stos
mov
push
test
fsubp
xchg
roll
pop
lods
xor
ss
enter
aad
lods
inc
lea
and
mov
xor
pop
add
nop
inc
jp
dec
inc
stos
addb
cmpl
and
dec
lds
lcall
lret
cmpsl
pop
call
xorb
sbb
and
addr16
pop
jo
rclb
jle
jg
pop
sub
xor
mov
outsb
cwtl
jo
imul
loope
es
ror
sahf
ficompl
xchg
ds
lahf
mov
add
out
push
adc
xchg
lahf
mov
les
cld
insb
inc
leave
push
js
push
stos
cmp
jno
push
outsl
repnz
jmp
and
fldt
xor
dec
or
repnz
pop
xchg
shrb
push
mov
sub
jbe
mov
cwtl
arpl
pop
push
mov
divl
lcall
enter
push
test
cmpb
pop
mov
inc
ljmp
mov
call
mov
shll
push
xlat
sahf
xor
dec
cmpsb
xor
cwtl
inc
xchg
sub
mov
ja
xor
xchg
mov
push
push
sarl
jg
cmp
mov
xlat
imul
xor
push
cmpsl
and
mov
xchg
xchg
mov
ret
jecxz
adc
scas
into
not
movsb
add
add
mov
add
pushf
ficompl
outsl
pushf
inc
adc
cli
fistpl
jmp
out
rcrl
or
mov
mov
mov
rorb
add
inc
lock
sti
xchg
mov
xor
xchg
add
xor
cmp
cwtl
mov
repnz
push
cmpsl
es
dec
lea
andl
lods
pop
mov
fwait
rorb
cmpsb
jo
fildll
cwtl
add
imul
das
and
push
xchg
popf
cmpsl
push
and
mov
pop
adc
or
or
cld
dec
fiadds
popa
lock
aaa
pop
imul
sbb
add
xchg
cmp
lret
sti
and
push
inc
lahf
cwtl
mov
jbe
sahf
test
aam
leave
outsl
cmp
jmp
scas
lock
push
mov
das
dec
and
inc
ja
jp
sbb
ljmp
aas
jne
fisttps
mov
dec
sub
mov
mov
loope
pop
xchg
and
cmp
jo
loopne
xchg
fidivrs
shlb
scas
mov
adc
lret
rclb
sti
into
add
aam
movsl
test
jp
lcall
seto
mov
mov
pop
inc
jns
cmp
xchg
movsl
addr16
mov
ljmp
ds
pop
in
add
inc
mov
sbb
je
xchg
stos
fildll
push
mov
out
sarl
mov
shll
sub
jl
mov
pop
cltd
push
daa
sbb
cmp
fidivs
fdiv
mov
fistl
enter
xchg
cwtl
push
xchg
insb
mov
pop
rorb
stos
inc
sti
aam
pop
dec
jno
cwtl
jne
xchg
cli
fistpl
jl
dec
pop
dec
lods
test
mov
mov
lods
mov
fucomp
sbb
in
jb
outsl
push
dec
mov
jecxz
cmpsb
cmc
scas
insb
sti
xchg
pop
int
rclb
mov
jnp
jmp
idivb
jbe
shrl
adc
cmp
fidivs
je
jg
imul
mov
aas
xor
adc
popf
sbb
cmp
lods
movsb
xor
jne
data16
dec
adc
js
and
mov
ret
mov
sbb
cmp
jle
outsl
leave
jb
sbb
in
jbe
adc
stos
ja
test
or
fwait
xchg
aaa
cmp
call
push
loopne
popa
loopne
in
add
aam
cmp
sbb
insb
or
imul
ljmp
push
cmp
cs
adc
mov
ja
or
and
push
mov
gs
sub
jle
repnz
inc
add
add
in
xor
aaa
lods
leave
dec
adc
fcmovu
es
mov
jb
or
jne
jnp
pushf
test
popf
mov
repz
jp
sbb
push
mov
pop
in
mov
sub
push
cmp
inc
xor
mov
or
cmp
jae
int
push
pop
pop
push
fsubrl
lcall
std
ljmp
mov
cmc
xchg
roll
add
mov
and
addr16
gs
cmp
mov
ljmp
push
sub
scas
popa
daa
jno
movsb
jo
adc
lds
pop
inc
jbe
fisttpll
xchg
inc
aas
ror
cmpl
jmp
pop
dec
sbb
shll
aaa
mov
jl
sub
sarl
fcmovbe
stos
xor
mov
push
insl
push
xchg
outsb
mov
hlt
pop
imul
out
jmp
je
fisubs
inc
push
ret
xchg
sub
iret
subl
out
fabs
addr16
push
fisttpl
push
and
jnp
mov
add
rclb
loope
movsl
int
movsl
dec
pop
ja
pop
xchg
pop
test
cmp
jmp
stos
enter
jg
stos
cli
mov
pushf
insb
daa
fs
mov
aad
pop
pusha
inc
add
in
push
imul
daa
sbb
aas
push
fs
sbb
test
adc
xlat
arpl
mov
lods
cmp
xor
imul
xor
out
mov
repnz
pusha
xor
sub
mov
aas
js
push
ljmp
ret
cmp
hlt
sbb
mov
dec
pop
cmc
jg
loope
imul
sbb
loop
xchg
jecxz
stc
sti
and
or
mov
jecxz
imul
jno
cs
imul
insb
mov
xchg
cmp
test
sub
xor
outsl
xchg
cld
std
xor
pop
jne
adc
pop
fucomi
add
mov
lret
sub
mov
jnp
sbb
cwtl
stos
mov
xor
rorb
icebp
fwait
ds
js
outsl
jge
cld
pushf
push
in
xchg
mov
xchg
mov
jns
jle
mov
inc
sbb
mov
sub
xor
divb
or
pop
fisubl
mov
jb
mov
ds
cmp
ja
cli
jnp
and
les
mov
xor
test
push
ds
loope
adc
fisubrs
cmc
inc
pop
pop
aam
cbtw
sub
cmpsb
mov
loope
clc
mov
mov
pushf
mov
jmp
ffreep
push
mov
movsl
mov
into
insb
cvtdq2ps
cli
pop
push
in
mov
mov
dec
pop
and
ds
xor
pop
ss
push
leave
adc
outsb
sarb
fcomp
mov
adcb
cmpl
xor
or
mov
xor
popf
ljmp
push
roll
jl
stc
pushf
or
insb
jns
jecxz
setl
jle
pop
ret
repnz
adc
hlt
rclb
mov
mov
jne
jae
inc
enter
push
ret
mov
xlat
xor
adc
mov
cltd
pop
xchg
add
mov
enter
push
popf
and
jp
cmp
adc
mov
sbb
push
add
or
test
mov
dec
pop
aad
rclb
fs
lock
loopne
sub
popf
add
outsl
outsb
mov
mov
xor
inc
fwait
xchg
dec
stos
aam
ljmp
or
idivl
test
mov
fwait
test
test
in
popf
rorl
jb
sar
jo
dec
jnp
repnz
mov
enter
mov
mov
fists
stc
adc
leave
mov
mov
jo
mov
push
xchg
sub
push
and
in
nop
xchg
iret
adc
lret
or
pop
in
jp
dec
mov
fstl
xor
popa
mov
test
mov
fsubrs
mov
dec
lods
pop
stos
add
cld
call
outsl
sub
loopne
fsubl
into
mov
dec
xor
push
and
js
pop
lret
pop
and
out
xchg
adcb
ds
cmpsb
xchg
xchg
adc
mov
sub
jae
movsb
add
inc
repnz
xchg
loope
loope
shrl
xor
rcrb
jae
lds
add
lret
push
fnstsw
lods
cltd
lock
cmpsl
fwait
sahf
icebp
and
push
jb
leave
push
loop
outsl
sbb
dec
ret
xchg
out
mov
imul
hlt
mov
push
jecxz
adc
addl
adc
mov
rcll
js
lods
and
jp
fnsave
imull
push
vmovntpd
mov
in
cmp
arpl
in
mov
les
aas
out
push
ss
or
sbb
inc
and
repnz
xorl
rcll
push
dec
pop
sub
int
sbb
lock
loope
mov
inc
fnstenv
fcoms
imul
mov
cltd
in
jne
sti
cmc
adc
push
insb
imul
push
in
scas
aas
sbb
ret
mov
push
push
insl
or
movsb
stos
xor
je
jecxz
cld
in
mov
and
or
mov
dec
jecxz
mov
jp
push
hlt
xor
xor
les
jbe
inc
je
incl
mov
sub
jno
in
mov
lods
gs
out
dec
jecxz
fwait
lods
mov
xchg
stos
mov
je
add
xchg
mov
or
int3
inc
jmp
push
leave
and
cmc
sub
fimuls
xor
fdivl
and
inc
jo
testl
ljmp
pop
jmp
scas
push
test
iret
or
into
jno
notb
jae
out
cmp
ljmp
adc
aad
adc
movsb
call
cmp
mov
jo
mov
daa
dec
inc
mov
cwtl
nop
inc
in
mov
add
mov
add
insl
or
jne
dec
jge
std
mov
add
sub
iret
jns
inc
jecxz
repnz
xor
xchg
mov
xchg
mov
not
dec
mov
push
mov
pushf
and
mov
fsubp
lret
loop
push
cld
inc
push
xorb
ret
lds
test
enter
add
dec
ja
inc
shrb
mov
pop
or
push
pop
push
aam
addl
add
sub
int3
out
inc
push
in
mov
imul
ds
das
stc
inc
or
icebp
rcll
mov
test
insl
push
xlat
mov
insb
imul
cwtl
mov
or
sahf
imul
xchg
hlt
cmp
mov
aas
test
cwtl
mov
out
push
lock
and
adc
je
sbb
mov
ss
inc
mov
test
dec
mov
cli
out
loope
cmpsl
not
fmuls
mov
popa
cmp
push
aas
sbb
jmp
mov
fs
mov
out
and
js
shlb
ret
sbb
fldl2e
xchg
clc
stc
aas
sbb
mov
pop
jle
and
xchg
push
repnz
addl
xchg
in
test
test
dec
push
lock
jp
arpl
push
in
pop
icebp
popa
fstps
test
jle
push
fadds
mov
cwtl
cmpsl
mov
dec
push
dec
dec
ret
insl
in
adc
and
mov
xchg
and
inc
stos
jg
sbb
pop
or
popa
std
jns
push
cmp
cmpsb
sbb
add
mov
test
scas
jae
nop
leave
sub
mov
movsb
push
rcrb
lock
shrb
hlt
inc
insl
pushf
dec
lcall
mov
pop
ret
stc
sub
jne
mov
ret
sbb
sub
or
hlt
cmp
or
scas
mov
lods
jecxz
lods
dec
sti
filds
pop
pushl
enterw
cmp
lds
inc
jmp
dec
mov
lahf
sbb
mov
push
pushf
and
sub
leave
es
and
xchg
outsl
mov
push
repnz
mov
xor
or
loop
sbb
fisttps
test
mov
dec
shll
outsb
subb
or
dec
mov
pop
inc
dec
jmp
neg
inc
ret
mov
cmpsl
sub
hlt
or
mov
imul
xchg
gs
xor
aas
xorl
add
push
xchg
scas
jae
movsl
jnp
cmc
jmp
pop
jp
cmp
out
xor
push
sbb
sbb
neg
call
mov
or
popa
mov
push
dec
std
mov
in
in
xor
mov
mov
dec
mov
ja
add
fsubl
sub
rcrl
in
mov
jg
mov
xchg
mov
cmp
mov
push
mov
aaa
dec
outsl
and
ret
mov
negl
mov
stc
push
out
sub
addr16
mov
and
cmp
push
jge
cmp
xlat
xchg
xor
cmpsl
imul
in
repz
jl
test
sbb
xchg
sub
mov
call
loop
jns
xchg
popf
xlat
daa
pop
pop
jecxz
mov
xchg
mov
jo
xchg
jne
cmp
ret
ficoml
outsl
in
mov
sub
cmpsl
out
jbe
js
push
dec
inc
and
pop
ret
gs
dec
out
int
sub
mov
pop
xchg
push
in
mov
mov
jbe
loop
inc
xorl
dec
sbb
orl
call
jne
inc
dec
dec
insb
ret
xchg
jbe
cmp
fwait
outsl
jo
add
adc
aam
or
inc
out
lods
xchg
pop
fldcw
jmp
leave
xchg
repz
fs
mov
sub
xor
cmc
mov
mov
pop
and
test
std
data16
inc
leave
insb
dec
push
ja
pusha
cmc
fidivl
pop
fidivrs
je
xorl
test
sub
subl
leave
ja
icebp
lock
add
in
jne
xor
inc
jg
dec
fwait
into
mov
dec
mov
sub
add
shll
sarb
enter
adc
jl
mov
lea
adc
push
xlat
subl
out
dec
loope
xchg
scas
lcall
inc
inc
and
or
xchg
jne
nop
push
imul
mov
pop
pushf
inc
mov
xchg
mov
std
and
aad
idivl
push
lods
pop
lcall
xor
into
xchg
rcll
pop
pop
imul
lock
cmp
stc
or
lods
push
gs
test
mov
dec
mov
xchg
push
dec
jae
imul
add
and
aas
mov
loop
mov
mov
pop
out
sub
cmc
js
mov
xor
lock
and
adc
test
pop
mov
nop
movsb
test
push
xor
mov
fs
outsl
cmp
add
fstpt
push
lock
sub
or
xchg
inc
jge
lret
repz
push
ljmp
jg
ds
lods
icebp
data16
inc
pop
mov
bswap
push
cmp
mov
sahf
nop
pop
ds
lds
jne
jbe
jne
and
popa
aas
xchg
cmc
loopne
rcr
fnstcw
movsl
pusha
int3
lcall
in
scas
cli
icebp
lret
jecxz
sbb
pusha
dec
inc
stos
loope
mov
aam
jnp
xor
imul
loop
cmp
lock
sub
lcall
mov
pop
and
outsl
mov
sbb
pop
sbb
pop
inc
xor
imul
imul
rorb
in
mov
cmc
enter
jnp
and
mov
jns
add
add
fstl
les
xchg
movsl
and
push
jae
mov
cmp
js
rorl
mov
lcall
out
lret
subl
adcl
push
sub
sarb
mov
mov
dec
push
pop
jle
fisttpll
les
or
mov
ja
ds
cli
pop
add
add
sbb
pushf
xchg
jmp
inc
int
xlat
push
inc
insl
jns
mov
pusha
add
aad
iret
leave
xchg
push
sbb
imul
insl
jg
lret
ds
lea
in
xorb
jns
push
in
add
cmp
sub
inc
ja
push
cli
fbstp
in
jo
enter
outsb
movsl
xor
frndint
inc
xchg
and
lds
lock
jns
jmp
inc
push
fidivrl
mov
clc
in
imul
das
sub
cmp
daa
stc
and
out
cld
mov
xchg
out
sbb
loope
mov
jo
stc
sbb
lock
jb
mov
and
dec
pop
add
add
aad
lea
clc
lcall
jb
in
es
shl
mov
push
pop
fcom
add
mov
shlb
outsb
out
nop
fisttpl
dec
lock
sub
insb
inc
mov
dec
jl
fidivs
mov
js
inc
dec
shll
jmp
mov
cmpsl
cld
pusha
lock
mov
lret
sbb
test
rolb
dec
loope
lock
mov
xchg
mov
mov
xor
mov
mulb
rcl
mov
and
xchg
sarl
dec
add
loopne
rclb
dec
pop
mov
cld
stc
jecxz
cmp
jnp
jle
inc
push
lods
inc
adc
mov
dec
or
sbbl
cmpsb
out
arpl
nop
movsb
and
xor
mov
out
js
xchg
push
negl
xchg
xchg
ret
loope
xchg
je
cld
jne
push
jbe
pop
or
dec
and
sub
adcl
std
scas
adc
sbb
mov
sahf
cmc
daa
aaa
or
imul
cmpsl
push
inc
repz
scas
fcoms
add
pusha
mov
shlb
xlat
ja
fdivrl
mov
shll
pop
sub
jl
and
xchg
stos
aaa
ja
pop
mov
sar
and
jmp
and
jne
ljmp
pop
sti
cmpsl
dec
mov
dec
outsl
xchg
sub
imul
cmp
out
mov
jge
das
sbb
cwtl
dec
jae
test
cmpsl
mov
jecxz
mov
pop
bound
dec
jg
push
lret
mov
mov
add
mov
pop
mov
add
cmp
xlat
cli
and
xor
rolb
lret
cmp
mov
xor
icebp
xchg
jo
pop
xchg
adc
mov
mov
jmp
addl
cmpsl
sti
mov
bound
sub
inc
mov
out
xor
cld
sbb
mov
test
push
cwtl
out
push
aam
ret
pop
mov
sarb
mov
ret
xchg
mov
std
xor
jge
lods
jle
insl
outsl
mov
jo
int
jecxz
inc
jmp
fs
shl
addr16
divl
stos
sbb
insb
out
test
in
jle
std
ret
gs
jl
xchg
stos
idiv
xchg
push
out
outsl
cmpsl
aaa
add
jo
push
movsb
imul
jb
mov
jnp
mov
jecxz
inc
xor
mov
or
add
inc
xchg
push
nop
mov
mov
xchg
inc
fcmovnu
adc
sbb
pop
mov
lds
add
dec
pop
or
enter
xor
jns
or
mov
mov
stos
or
mov
dec
dec
int3
in
sbb
out
mov
or
push
xor
push
into
aam
pusha
jb
addl
or
out
mov
or
sbb
dec
test
mov
xchg
into
int3
outsl
int
outsl
or
bound
rcrb
je
insl
xchg
mov
jnp
sarb
fs
and
test
push
mov
xor
bound
sti
mov
add
filds
push
in
jbe
lods
pop
jle
outsl
push
in
inc
jecxz
leave
push
rorb
xchg
xor
out
mov
cld
fwait
jo
mov
sahf
sbb
fidivl
or
mov
inc
sub
stc
push
mull
mov
push
outsl
aad
test
mov
inc
pop
mov
mov
int3
fcomp
insl
xor
dec
sub
dec
int3
bound
xor
test
and
insb
neg
mov
jnp
and
or
ret
xchg
inc
adc
and
es
xchg
cmp
lods
leave
testb
iret
xchg
push
adc
xchg
xchg
lods
cmovg
es
and
outsl
idivb
add
cs
dec
xchg
xchg
xchg
aaa
add
neg
lret
cmpsb
inc
pop
stos
jmp
popa
fsubrs
out
int
outsl
inc
sub
sbb
or
jmp
popf
and
jne
cwtl
test
push
xchg
orl
cmp
inc
ret
adc
ds
nop
mov
inc
shrl
ss
or
add
add
mov
test
js
es
outsb
hlt
cmp
or
push
add
pop
pop
cmc
push
lcall
and
and
rorl
xor
cmp
add
loope
je
dec
lea
mov
add
push
bound
or
mov
scas
je
bound
add
test
pop
jae
fisttpll
cld
data16
adc
lock
leave
scas
mov
sbb
push
fwait
shlb
sub
dec
shl
push
fs
scas
or
jmp
mov
add
sub
lods
jno
sahf
push
mov
xorb
sbb
lcall
in
fs
adc
imul
cmpsl
sub
xlat
ret
bndldx
mov
add
mov
xchg
aad
mov
dec
aad
xchg
inc
int3
sub
je
jg
cmp
mov
cwtl
mov
sahf
fnstenv
ds
xor
fwait
pop
cmp
inc
jg
mov
xor
push
or
xchg
pusha
sbb
add
test
cmpsl
imul
lea
pop
xchg
mov
hlt
or
ljmp
js
pop
daa
idivb
mov
xor
lods
push
xor
pusha
aaa
cmpsl
ja
mov
push
cltd
popa
mov
sbb
dec
push
and
dec
adc
aaa
js,pt
inc
sub
rcll
jb
pushf
pop
add
sbb
xor
ds
sti
mov
adcl
adc
xor
fs
push
hlt
ljmp
mov
add
mulb
mov
sub
fld
in
mov
push
lods
out
loope
pop
lret
pop
jle
clc
das
sysenter
xchg
sti
inc
pop
imul
lds
cmp
add
push
pusha
js
mov
add
adc
fisttpl
mov
jo
mov
dec
incl
in
stos
mov
push
adc
enter
push
arpl
cmp
cli
lret
in
jecxz
hlt
dec
lods
hlt
aad
imul
imul
xchg
fstl
imul
pop
sbb
mov
inc
or
flds
push
ljmp
stc
cmpsl
inc
sub
jo
push
in
mov
movsb
push
sar
jb
push
std
xchg
lahf
daa
jle
hlt
and
in
push
mov
hlt
addr16
mov
ja
lret
dec
jo
jle
mov
sub
shlb
push
rorb
push
sarl
mov
mov
xchg
repnz
fidivrl
pop
and
jge
pop
pop
sub
inc
loopne
fistpl
jp
out
mov
sbb
push
scas
jge
or
data16
push
mov
std
adc
adc
pop
xor
mov
imul
cmp
movsb
dec
sub
sbb
jmp
mov
xor
inc
sbb
pop
mov
cmc
lahf
adc
clc
add
cmpsl
ja
xor
outsl
into
inc
jne
mov
cltd
pop
lods
pop
je
sbb
push
mov
js
sub
lcall
gs
movsb
aad
pushf
cwtl
sub
dec
push
jl
loopne
mov
add
sbb
cmpsl
fisubrs
mov
stos
fmull
push
lret
mov
add
mov
cli
xor
repz
ret
test
or
stos
push
scas
pop
mov
mov
test
lods
sbb
je
cli
xorb
or
fistpll
icebp
mov
fs
adc
insl
mov
mov
mov
leave
mov
cmp
les
cmp
rclb
mov
stc
shlb
add
nop
mov
add
jns
mov
jmp
das
pushf
xchg
inc
mov
xchg
out
mov
mov
xor
ret
dec
pop
push
xadd
sbb
rcr
outsl
mov
inc
pop
push
sbb
sbb
insl
leave
mov
cld
jge
jbe
dec
cmpsl
add
nop
mov
sbb
out
lods
jno
sar
sbb
mov
or
xor
ds
test
popa
outsl
lock
pop
fwait
mov
or
fsub
dec
das
adc
dec
out
cmp
sbb
mov
rol
jae
mov
mov
int3
pop
xchg
jns
xlat
scas
lock
xor
jne
pop
orb
mov
lret
das
cmovge
mov
stc
jge
or
cli
ss
dec
lock
sub
addr16
sbb
jne
test
jne
pop
pushf
shl
add
arpl
roll
es
mov
loop
leave
pop
cmpsb
cs
hlt
scas
add
push
pop
test
pop
sub
fistpl
movsb
or
dec
pushf
push
inc
adc
cmp
and
push
test
jl
push
test
out
lods
xor
and
fists
rclb
shl
icebp
inc
xchg
xor
in
cmc
ss
xchg
cmp
test
das
mov
xor
loop
adc
xchg
jo
push
pop
jl
xor
jbe
pop
cmp
mov
sub
clc
cs
inc
xor
cmp
stos
stos
int
and
testl
pop
jo
jo
xchg
and
jecxz
shl
xchg
lahf
call
int
xor
popl
xchg
push
or
mov
mov
aam
data16
cld
aad
out
xchg
fcom
mov
in
adc
fcoms
pusha
pop
fbld
popf
pop
or
pop
xchg
test
mov
mov
push
lods
fs
and
adc
cwtl
jecxz
outsl
mov
lcall
popf
ds
icebp
mov
sbb
sbb
xor
xchg
stc
rcrb
inc
push
leave
xchg
in
push
bound
inc
cmp
push
push
dec
or
fsincos
xchg
jns
arpl
xchg
mov
push
inc
push
mov
or
insb
push
mov
jmp
xor
dec
push
lods
mov
and
sar
and
mov
pop
gs
lock
cmp
pop
dec
outsb
dec
rol
loope
mov
jmp
lcall
imul
add
lret
push
test
add
int
aas
loopne
rep
sub
or
leave
inc
sub
pop
data16
cmp
jb
sbb
mov
or
pop
push
loope
int
xchg
push
leave
push
imul
fisubrs
or
fdivl
fmul
and
jae
mov
and
mov
shr
mov
pop
fistpll
aaa
lods
cmpb
mov
je
mov
and
cld
mov
xchg
jns
cmp
pusha
sub
pop
lods
insb
mov
dec
sub
xor
mov
xor
jns
push
ret
or
mov
stc
mov
jb
mov
data16
test
aad
fsubl
stc
xchg
test
fmuls
in
add
inc
movsb
sub
shrl
mov
loopne
mov
push
imul
adcl
mov
idivl
gs
mov
dec
xor
sub
jl
push
adc
add
ret
mov
fsubrl
addr16
stos
inc
cmpsl
mov
mov
fs
jecxz
cmp
dec
fldcw
out
adc
call
push
pop
ret
cwtl
pop
repnz
mov
or
test
mov
lds
clc
fdivrl
lods
push
aaa
add
and
addr16
ret
and
pop
shl
push
xchg
leave
adc
add
xchg
test
add
loopne
push
sub
push
jo
dec
loop
cmp
fistpl
inc
loope
push
stos
leave
out
dec
mov
adc
sbb
cmp
jne
mov
hlt
sbb
sarl
cmpsb
into
xchg
nop
pop
aas
fbld
in
int
pusha
jno
push
xchg
sbb
stos
add
mov
push
sahf
aas
jmp
shll
cmp
es
pop
push
mov
cmpsl
out
and
sbb
jmp
loopne
fcom
push
jle
mov
push
dec
or
pusha
std
in
rol
pop
int
inc
and
add
lods
sub
mov
stc
adc
jnp
xor
cmpsb
push
addr16
addb
inc
pushf
fcomps
adc
aas
stos
and
cs
cltd
mov
loop
jmp
add
cltd
fndisi(8087
test
movsb
xlat
fstpt
inc
jne
sub
es
dec
stc
je
dec
sub
arpl
mov
dec
sbbl
sub
in
inc
sub
fiaddl
mov
xor
jl
insb
mov
nop
enter
nop
cmc
int3
repz
lcall
sti
add
js
test
adc
pushf
fwait
sub
pusha
xchg
or
jge
mov
div
mov
jecxz
xchg
sub
adc
sub
lods
insl
cmp
sbb
sbb
lret
push
lds
lahf
aaa
roll
cwtl
dec
test
and
inc
mov
aam
addb
flds
lahf
es
movsl
push
mov
sbb
cmpsb
stc
pop
test
jge
lcall
mov
negl
xor
sub
sbb
scas
in
dec
jecxz
movsb
imul
mov
mov
mov
add
mov
imull
jo
shlb
out
add
jo
push
rcrl
pusha
mov
lcall
inc
daa
mov
jle
and
call
lcall
int
xacquire
sbb
push
and
cmp
mov
dec
sahf
push
jns
clc
in
test
jl
hlt
stos
or
sub
out
jne
fsub
cltd
jno
dec
jno
gs
sti
pop
imul
jae
ljmp
dec
mov
and
mov
subl
out
dec
sbb
dec
popa
mov
sarl
inc
xchg
callw
dec
dec
pusha
jmp
xchg
movsb
les
xchg
repnz
fsubl
cmp
add
dec
jecxz
incb
cmc
ret
mov
or
fadds
jle
mov
or
pop
push
mov
fisubs
or
aaa
and
daa
adc
add
lock
push
or
in
or
mov
lods
stos
lds
cmc
cmp
inc
sub
fsub
fistps
add
pop
or
jecxz
scas
lods
dec
les
jne
adc
fnsave
and
and
cs
mov
stos
xor
shlb
or
dec
sub
add
jnp
lea
adc
ret
xor
xchg
xchg
lret
jne
lcall
mov
test
ljmp
push
ja
cld
dec
and
popf
pop
mov
loopne
sbb
rcrl
xor
mov
or
sbb
inc
sarb
mov
daa
cmpsl
orb
test
hlt
mov
lret
mov
jmp
int
and
sub
ficoml
test
mov
movsb
loopne
jmp
xchg
scas
inc
pop
loop
xor
arpl
xor
cwtl
dec
inc
or
inc
sub
leave
pushf
sti
out
sbb
mov
sarl
push
pop
sub
fst
add
cmpsb
aam
xchg
loop
cmpsl
es
mov
sbb
std
jnp
xchg
mov
cmc
je
je
xchg
add
cs
testb
xchg
mov
pop
inc
push
rep
jnp
test
enter
fisttpl
int
add
pop
xor
addr16
cmp
stos
in
dec
mov
push
sbb
xchg
push
mov
and
std
xchg
xchg
jp
jae
out
decb
jae
sarb
dec
adc
push
push
pop
ljmp
ljmp
add
xchg
mov
frstor
mov
andb
repz
arpl
loopne
xchg
pop
cmovl
push
test
pop
js
cmpsb
xchg
cmp
xchg
in
out
dec
fimuls
jb,pt
jmpw
in
jg
ret
xor
inc
frstor
jnp
xchg
gs
pusha
arpl
push
push
sbbl
or
sbb
rol
cmc
fdivrs
xchg
sub
jae
lret
cmpsb
call
xchg
popf
seta
outsb
dec
lods
stos
shll
int
inc
ss
aad
cltd
mov
push
push
inc
dec
rorb
xchg
push
and
test
ljmp
inc
sbb
das
jecxz
into
cmp
ds
dec
stos
fsts
push
into
mov
pop
mov
mov
out
fcoms
adc
sub
mov
or
inc
notl
xor
pop
xor
push
cmp
shll
jle,pt
sub
mov
sub
sbb
cmp
jmp
push
adc
adc
sbb
lock
mov
pop
mov
xchg
add
sbb
mov
xor
cmp
cld
sahf
out
add
sti
cmp
mulb
mov
sbb
lods
mov
mov
in
nop
filds
aas
mov
xor
aam
add
cmpsb
fimull
leave
push
std
fldt
lods
fbld
gs
lds
sbb
loope
clc
repnz
fistpl
popaw
xchg
mov
dec
jns
ljmp
addl
int3
out
orb
and
ror
enter
sub
sbbl
dec
dec
lcall
inc
adc
lods
rolb
pusha
icebp
mov
mov
insb
pop
test
mov
push
cld
lea
lahf
repz
lret
cmp
cmpsb
add
aam
out
inc
insl
lahf
ljmp
dec
push
inc
add
in
icebp
cwtl
push
inc
test
hlt
sbb
fld
adc
push
push
push
adc
shll
inc
pop
cmc
xchg
popf
or
mov
clc
xchg
or
in
nop
int
mov
lret
xlat
pop
sbb
mov
pop
lea
inc
stos
sub
adc
divb
mov
mov
or
and
xchg
bound
mov
and
mov
roll
dec
into
mov
push
sbb
jg
hlt
aaa
jl
pop
xchg
or
sbbl
scas
xchg
cld
push
imul
stos
jne
sbb
mov
out
mov
adc
and
sahf
mov
inc
in
xor
lds
mov
add
jbe
jb
pop
popa
testb
sub
mov
enter
fnstcw
inc
icebp
push
mov
sahf
std
adcb
lret
int
jp
adc
or
in
iret
pop
xchg
shll
or
adc
dec
push
cli
mov
cmp
sahf
dec
popa
addr16
mov
jg
lcall
and
in
jae
lods
sub
sub
mov
sahf
and
insl
popf
rcll
cmp
mov
lods
jno
mov
scas
mov
push
addr16
inc
sbb
loopne
fsts
les
push
fildll
and
adc
inc
lahf
rolb
orb
mov
xor
push
dec
test
cwtl
sbb
mov
cmc
out
pop
pusha
push
out
xchg
dec
stc
xchg
sahf
mov
sarb
nop
out
push
adc
pop
lret
add
in
rcl
int
addl
in
loope
dec
cld
loop
inc
adc
je
nop
popl
xor
jecxz
in
push
repz
repz
mov
fisttpl
jp
xchg
jge
push
inc
xor
scas
cmp
fsts
stc
add
push
outsb
mov
lcall
nop
addl
cmp
subl
aad
sbb
or
roll
cwtl
insl
pop
aaa
ja
rcr
arpl
out
jmp
scas
mov
roll
ret
adc
popl
cltd
inc
test
arpl
out
and
fidivs
cli
add
jg
push
xchg
clc
push
dec
inc
push
bound
mov
and
out
adc
or
ds
in
testb
push
xor
aas
shlb
loope
xchg
dec
dec
xor
scas
jmp
les
pop
icebp
imul
cmpsl
jg
outsb
jecxz
scas
sub
std
mov
das
outsl
movb
mov
or
inc
outsb
and
out
push
test
dec
inc
imul
inc
inc
test
mov
andnps
xchg
sub
leave
xor
imul
adc
pushf
stc
push
rolb
scas
jge
push
dec
dec
movsb
test
out
aas
std
lea
in
xor
pop
jo
out
dec
adc
and
into
stc
pushl
adc
fiaddl
cmp
jns
mov
divb
in
and
mov
add
xchg
inc
notl
pop
aad
sub
sbbl
pop
jl
cli
ljmp
cmp
and
xorb
dec
notb
xor
cwtl
mov
cmpsl
jo
gs
mov
mov
pop
fisttpl
cmp
movsb
cmpsb
arpl
movb
into
ja
ret
mov
pop
int
add
xchg
pop
int
or
and
mov
pop
jbe
or
mov
les
xchg
sub
cwtl
add
adc
sub
sahf
pop
xchg
mov
mov
push
dec
mov
and
idivl
cli
jnp
mov
and
xchg
int
ja
sbb
inc
lock
mov
mov
out
aas
cmp
adcl
dec
js
movsb
cmp
ss
in
add
mov
mov
sub
arpl
pop
sarl
adc
push
into
stc
bound
ret
lods
push
jbe
repnz
dec
nop
mov
je
dec
dec
aam
adc
cmpb
xchg
in
in
jno
fs
sti
jg
ss
mov
push
fldenv
adc
mov
or
inc
cmp
jb
mov
lahf
or
in
jge
jnp
jns
decb
or
push
and
mov
xchg
xor
scas
cli
jnp
adc
jno
jne
xor
xchg
test
insb
imul
ja
inc
adcl
shlb
popa
nop
cmp
dec
aam
pop
rclb
or
outsl
shrl
loopne
jge
adc
push
mov
sub
dec
in
std
stos
stc
in
cmp
ss
push
fnsave
push
jp
cmpsb
pop
adc
sbb
test
in
jns
or
ror
ja
and
and
loopne
inc
sbb
mov
adcl
int3
cmp
jecxz
hlt
and
fxch
pop
gs
andb
clc
jb,pn
fsincos
aaa
xchg
push
movsl
insb
repnz
cwtl
inc
xor
inc
sbb
sarl
inc
mov
dec
push
aaa
and
cltd
adc
pop
out
enter
sbb
aas
push
mov
mov
push
mov
and
sbb
scas
sbb
push
or
pop
test
jle
insb
sbb
xchg
outsl
and
roll
or
xchg
push
push
mov
loop
lcall
outsb
fidivl
pop
fldcw
imul
popa
or
test
push
int
fidivrs
mov
push
mov
pop
int3
loop
cmpb
push
out
dec
pop
push
or
shrb
in
jge
rcrb
sub
mov
sbb
adc
mov
loopne
nop
jge
push
push
in
rorb
xchg
mov
insl
out
negl
pop
jne
xor
pop
xor
jmp
dec
lods
xchg
int
iret
jo
add
mov
or
in
daa
sub
lea
mov
adc
push
push
and
lcall
dec
inc
pop
stos
adc
dec
mov
in
andl
or
out
popa
cmp
int3
cltd
and
int3
add
les
xchg
mov
sbb
icebp
out
xor
cmp
rorl
out
push
adc
cmp
in
ds
hlt
mov
xchg
xchg
mov
xchg
inc
push
push
mov
jp
push
sbb
pop
mov
ja
cmc
and
pop
mov
and
ss
lods
loop
inc
adc
popf
inc
sub
stc
cmp
fcoml
lret
dec
dec
gs
fdiv
les
lret
jmp
cli
fnstcw
add
aam
loopne
pop
jns
std
stc
inc
mov
cmpb
stos
nop
lods
scas
cmp
pop
lods
out
pop
mov
cmp
fistpll
imul
int3
out
dec
lcall
and
pop
adc
fidivrl
testb
movsl
jae
pop
sti
out
push
mov
mov
imul
dec
dec
mov
pop
inc
lods
cli
dec
ljmp
mov
std
rcrb
and
add
cld
nop
insb
loopne
mov
mov
loope
and
into
aaa
pop
cmp
lcall
outsb
jmp
cwtl
push
arpl
dec
or
cmp
aas
pop
jp
dec
adc
fmull
lock
rol
jle
lahf
cmp
sbb
fs
into
cmp
pop
mov
movsb
jg
add
repz
adc
push
int3
cmp
in
xor
aas
nop
cmp
call
jp
mov
nop
in
stc
xor
clc
lret
daa
loope
clc
dec
xchg
arpl
pop
jecxz
mov
inc
or
testl
push
and
xchg
fwait
add
mov
xor
dec
js
push
mov
and
pop
cmpsl
hlt
pop
aas
jns
dec
pop
iret
les
push
movsb
psrld
insl
addl
push
loop
dec
out
std
in
mov
imul
sub
mov
jg
stos
arpl
ret
add
aam
cmp
sbb
outsl
movsl
sub
push
cld
shl
push
out
insb
movsb
sub
mov
stc
pop
cmp
push
mov
out
push
mov
insl
cmp
scas
cmovs
int
adc
mov
icebp
push
sub
or
clc
jmp
mov
add
cmp
xor
cwtl
pusha
stos
mov
rclb
mov
mov
jo
push
loopne
jmp
aaa
push
dec
orl
cmp
ja
inc
cmp
mov
idivl
addr16
mov
pop
data16
mov
mov
ret
sub
cs
or
fidivs
stc
sahf
mov
jle
mov
jl
divb
jecxz
and
cmp
adc
leave
mov
dec
and
mov
sbb
fcoms
xchg
aam
arpl
mov
popa
or
push
adc
adc
cmp
popa
sub
pushf
sti
inc
and
inc
inc
les
push
xor
add
sti
add
cs
out
inc
loope
clc
test
in
jecxz
lcall
or
out
cmpsb
mov
loop
in
mov
add
push
and
mov
mov
ds
adc
shll
sbb
jno
add
xchg
sub
mov
dec
int3
lret
push
mov
push
lahf
jmp
pop
roll
mov
lods
or
cmp
es
inc
daa
cltd
in
sub
sub
xchg
mov
cli
jno
cwtl
clc
mov
ja
ficomps
sbb
test
xchg
adc
addr16
xchg
pop
jnp
mov
cmp
enter
or
sbb
jb
aam
loopne
movsb
push
add
lret
cli
mov
sub
stos
imul
sbb
mov
xchg
test
hlt
push
loop
ljmp
mov
jl
pmaddwd
xchg
loope
and
xor
loope
sbb
cltd
jge
in
inc
addr16
das
repz
stos
shl
push
cmp
mov
mov
pop
or
int3
mov
shl
and
imul
mov
or
jmp
jg
lret
jl
out
inc
mov
sub
repnz
sub
pop
mov
mov
inc
in
jmp
mov
cmp
sub
fdivr
movsb
xchg
mov
push
xchg
addr16
xor
iret
sub
dec
jg
pop
sub
or
mov
int3
jecxz
aad
repnz
jae
pop
inc
fldl
xchg
out
imull
sbb
bound
push
in
pop
addr16
sarl
leave
mov
dec
and
add
mov
ljmp
das
ret
jle
xor
cmp
ds
call
in
mov
lret
into
lret
ljmpw
cmc
outsl
and
stos
es
cmpsb
jecxz
test
daa
push
fcmovnu
stos
loop
sbb
xchg
push
movsl
shrl
pusha
in
jg
mov
imul
pop
inc
pusha
xchg
popf
lret
or
sbb
out
xchg
jecxz
in
xchg
dec
nop
pop
jmp
jne
or
sbb
mov
xchg
roll
loop
adc
mov
aad
sub
inc
jecxz
jp
or
out
pop
mov
dec
cld
mov
stos
push
insb
xor
sub
xchg
popw
mov
cltd
jmp
iret
imul
push
or
es
ja
cmp
outsl
push
shll
test
pusha
imul
push
mov
pop
mov
sub
scas
jo
push
and
inc
jge
add
dec
or
daa
enter
aaa
movsl
mov
pop
out
lcall
jl
mov
movsl
fmul
ja
fisubrl
inc
xor
subb
add
jmp
scas
addl
or
push
fwait
sbb
xor
es
add
sbb
lcall
rolb
insb
cwtl
cmp
loopne
test
jb
mov
mov
fcmovnu
and
sub
stos
cmp
xchg
adc
and
iret
sahf
int3
lods
mov
add
push
int
inc
call
pop
jmp
adc
aam
push
xchg
test
in
jno
push
pop
sahf
clc
ret
jo
push
jle
out
mov
movsb
mov
mov
imul
rcll
jo
test
scas
shr
adc
mov
addr16
loope
xchg
pop
enter
cmp
adc
mov
xor
gs
sbb
je
fisttps
mov
dec
cmp
js
outsl
pop
adc
or
push
outsl
insb
adc
add
pop
sbbb
or
mov
push
jns
dec
mov
popa
jnp
mov
inc
out
add
mov
jae
cmp
xor
dec
arpl
push
jle
fnstenv
dec
ja
sbb
mov
push
sub
xor
adc
lahf
sar
xchg
outsl
incl
inc
inc
jmp
aam
mov
in
xor
ret
psllw
sub
out
cmp
cld
push
mov
mov
mov
mov
pop
adc
jno
jecxz
mov
sub
dec
movsl
sub
inc
jne
clc
pop
mov
pop
xchg
lret
cmpsl
jecxz
repz
xchg
mov
rcr
mul
inc
xchg
fdivs
sub
mov
sub
jae
enter
cmpl
mov
cmp
outsb
cmpsl
pop
bnd
push
insl
call
lea
out
flds
jns
add
add
js
pop
arpl
or
mov
jg
or
test
bound
mov
test
sub
insl
dec
add
mov
fstpl
xchg
ds
cmp
cs
xor
insl
jle
ss
inc
mov
roll
mov
nop
cmp
pop
popa
adc
xor
test
jl
loopne
ret
addl
push
jb
movsb
in
popa
lret
jbe
shr
rcll
dec
mov
xor
and
sub
jmp
insl
pop
jecxz
adcb
filds
lcall
push
orl
mov
mov
sub
and
out
cli
adc
inc
nop
add
push
fsubr
fs
stos
sbbb
mov
inc
aas
mov
mov
adc
or
jno
loope
aad
or
dec
vpaddsb
aad
push
pop
push
and
loopne
gs
mov
add
jb
fldl
xchg
rclb
cmp
dec
push
add
push
push
lock
je
fwait
test
cwtl
sub
add
mov
movsl
xchg
add
enter
jae
out
mov
mov
and
and
pop
or
pop
enter
adc
mov
ret
pop
pop
jnp
and
stos
jno
sti
sbb
outsl
jo
sti
or
mov
lods
jle
sbbb
leave
mov
or
push
push
xchg
fbstp
dec
or
jg
and
pcmpeqd
and
add
test
dec
mov
fimull
gs
in
sub
out
popf
xor
flds
sbb
add
cmpsb
add
push
xor
fadds
xor
les
lock
cmp
inc
cld
mov
sub
mov
or
subl
repz
outsl
cmp
imul
popa
sbb
and
add
inc
in
cld
adc
pop
movsl
dec
pop
das
arpl
pop
inc
push
mov
fwait
mov
aas
mov
lret
jno
and
cmp
cs
push
fwait
ret
aaa
inc
addr16
pop
popa
inc
aas
sub
xor
lds
fimull
push
mov
decl
xor
loope
and
push
pop
sub
jnp
xchg
add
fs
lea
filds
sub
stc
xor
adc
fcomps
nop
lret
pop
adc
jge
sbb
lret
jge
add
xlat
daa
mov
jl
das
mov
cmp
adc
jg
out
pop
shl
jns
sarb
mov
or
xchg
stos
jnp
stos
mov
shrb
xchg
add
cmp
pop
dec
bound
cmp
aas
in
subb
xchg
mov
jne
inc
sti
push
push
movsl
lea
sub
xchg
sahf
mov
mov
push
andl
mov
jae
rol
pop
xor
scas
sub
int3
icebp
mov
sahf
dec
pop
inc
es
jmp
mov
xchg
mov
aad
loope
mov
add
adc
stc
mov
into
fcmovnb
mov
test
xor
jp
sub
cld
pop
fs
pop
js
stos
sbb
mov
push
outsl
sub
mov
enter
xor
inc
std
aas
fs
lcall
jle
loopne
dec
cmp
inc
jle
int3
push
dec
or
or
rcl
and
sub
lret
pop
inc
sbb
add
pop
idivb
es
inc
sbb
aas
inc
sub
shl
insb
lea
push
int3
or
mov
cltd
or
jns
mov
call
mov
fwait
loop
popw
sbb
adc
cmp
int
xor
fsubs
pop
push
mov
fs
pop
or
in
cmp
dec
dec
aam
xchg
mov
pop
and
inc
pop
popa
mov
cmp
aad
outsl
pop
repnz
ds
sub
lods
sub
sub
imul
and
xor
xchg
in
xor
sub
sub
call
insl
aam
sub
pop
das
mov
outsl
adcb
mov
mov
adc
cli
outsl
mov
loope
andl
push
xchg
xchg
dec
add
xor
fstl
aad
xor
std
das
mov
iret
insl
adc
fs
pop
in
sbb
adc
popf
jns
loopne
push
jb
out
stc
jb
fistpl
xlat
movsl
sbb
jl
lahf
mov
sbb
aam
mov
int3
loope
push
addr16
mov
loope
mov
xlat
push
sbb
iret
inc
xchg
adc
xor
inc
xor
sub
mov
inc
outsb
mov
inc
xchg
xchg
mov
fwait
pop
iret
or
mov
xor
jecxz
adc
cmpsb
adc
jbe
je
xchg
sti
push
and
xor
jmp
mov
nop
adc
test
sub
xor
mov
data16
pop
fcmovne
js
roll
sbb
testb
hlt
xchg
push
sbb
cmp
and
pop
pop
cmp
jmp
roll
push
mov
ja
xchg
push
movl
dec
test
mov
dec
leave
std
push
pop
and
loopne
fwait
in
jle
inc
pop
lahf
les
jno
pop
stos
imul
popf
inc
aas
inc
lahf
mov
sbb
lcall
and
aam
dec
pop
movsl
sbb
fmull
lds
fs
jno
fwait
adc
or
push
daa
fstps
jno
add
aad
into
iret
aad
mov
push
xchg
mov
dec
je
sbb
dec
inc
lods
cmpb
lds
int3
sbb
cmpsb
xchg
test
ss
lock
jns
call
sbb
push
cltd
mov
dec
in
jmp
xor
sbb
dec
fsubl
imul
sets
jge
lea
cld
xchg
movsb
mov
cs
pop
les
ror
sahf
dec
pop
dec
mov
stos
lahf
andb
es
addb
ds
fwait
in
imul
test
fsubp
pop
int3
mov
lret
push
xchg
cli
jecxz
add
push
cmp
mov
leave
mov
into
popf
test
xchg
xchg
and
addb
sbb
adc
pusha
ret
mov
mov
dec
out
out
aad
fwait
pusha
lock
inc
je
je
sbb
notb
scas
xor
sar
movsb
out
push
out
dec
dec
pop
push
mov
mov
ret
or
inc
rolb
cmp
sub
sbb
cli
push
loope
or
test
dec
bound
mov
je
xor
xor
call
mov
cmp
cld
push
add
lret
mov
jle
sub
push
dec
add
inc
ds
shll
push
test
sahf
adc
mov
add
int
repz
sbbl
shrb
jecxz
pop
sbb
arpl
dec
or
inc
push
mov
dec
mov
xor
rolb
push
sbb
sti
cs
xchg
scas
pop
lds
mov
pop
das
inc
push
cmpl
sbbb
xor
mov
scas
out
lret
xor
inc
in
xchg
aam
cmp
adc
sbb
add
xchg
pop
pop
mov
sti
pop
jns
lret
out
repnz
dec
roll
ds
icebp
movsb
jno
mov
jecxz
in
ja
pop
aaa
test
popa
sub
incb
clc
mov
test
sub
bound
aas
push
pop
xchg
jne
imul
jns
ret
cmc
and
pop
outsb
and
nop
stos
les
cmp
repz
sarb
xchg
loope
xchg
cmpsl
je
pop
cmc
inc
ss
sub
rcl
dec
inc
jg
lods
in
inc
and
mov
mov
int
xchg
mov
cmp
imul
rorb
aad
test
mov
leave
xchg
or
sub
push
adc
sbb
mov
pop
pop
xor
cmp
aaa
adc
dec
cmp
mov
jbe
add
cli
pop
xchg
inc
mov
test
pop
and
pop
loope
cltd
test
xchg
adc
pop
scas
insb
outsb
fdivrl
jecxz
out
jbe
orl
mov
jle
pop
ja
sbb
add
and
jge
push
cmpb
dec
dec
xor
mov
cli
push
sub
dec
mov
pop
jno
stc
aam
dec
jmp
cmc
bound
sbb
xor
sbb
jns
cmp
adc
or
xchg
and
mov
in
mov
test
push
or
pop
add
push
xchg
xlat
mov
rol
mov
inc
test
mov
and
jo
int
pop
and
add
movsl
ret
push
jmp
frstpm(287
cmpsl
push
shl
xchg
jns
push
lcall
cmp
inc
inc
arpl
push
lock
pusha
insl
fbstp
fwait
inc
add
push
test
fisubl
test
test
sub
ljmp
adc
test
aam
out
jb
push
jnp
mov
pop
add
outsl
adc
sub
lea
std
imul
insl
sahf
push
loopne
add
xor
notb
fdiv
pop
je
out
mov
mov
out
ljmp
and
mov
outsl
inc
stos
and
shlb
cmp
or
loope
xor
cli
mov
addr16
hlt
gs
hlt
or
pop
scas
mov
and
sti
dec
popa
dec
pushl
fisttpl
lds
ss
popf
aad
push
add
pop
adc
cld
cmpsb
out
cmp
lock
xchg
lahf
inc
outsb
fisubl
scas
adc
loope
mov
fdivr
adc
cwtl
mov
aas
jo
dec
iret
adc
in
repnz
shlb
ret
push
aas
js
inc
add
ljmp
es
lods
jmp
cmp
pop
adc
push
sbb
xchg
or
mov
and
xchg
daa
xor
cltd
mov
mov
ja
inc
movsl
ficompl
and
pop
pop
lock
insl
arpl
test
mov
pop
and
jnp
stos
rclb
pushf
mov
xchg
mov
mov
std
mov
push
cmc
decl
xchg
jbe
dec
fistl
aas
out
hlt
sbb
nop
test
pop
push
push
ss
cld
and
pop
pop
mov
sub
das
lcall
ja
daa
mov
sahf
adc
and
rcll
mov
mov
sub
sub
mov
push
not
pop
fdivl
outsb
jmp
mov
in
mov
shll
sub
mov
stc
or
push
negl
sub
enter
inc
cmc
jle
push
loop
mov
test
lret
sbbl
sbb
xor
int3
push
cmp
aas
fsubl
pop
rcrl
mov
mov
xchg
loopne
outsb
shr
sti
mov
pop
icebp
mov
ret
sbb
xor
je
add
test
jnp
jg
xchg
fsubrs
jo
mov
stos
stos
jl
ret
mov
cld
sarl
int
imul
dec
test
in
shlb
sub
imul
xor
push
xor
mov
gs
lahf
mov
fisttps
mov
cld
inc
xor
pop
mov
inc
out
int3
gs
lcall
dec
pop
lock
lret
out
es
sbb
sbb
ror
mov
or
test
or
retw
stos
sarb
xor
mov
or
popf
test
or
or
pop
cmc
jmp
dec
jb
xor
sti
pop
int3
pop
and
cltd
xor
xchg
mov
out
adc
or
lock
mov
mov
aad
jg
cmp
lahf
sbb
out
adc
lds
pop
xchg
ljmp
mov
mov
fsubrs
jmp
jno
push
sahf
out
call
xlat
clc
pop
outsl
adc
sub
or
jae
aam
push
rcll
mov
mov
scas
jmp
jg
push
inc
inc
insb
adc
ja
pop
subb
pop
mov
sbb
jne
xchg
push
or
aad
test
xlat
ret
icebp
pop
test
or
or
sbb
in
and
push
push
pop
popf
es
mov
inc
movsl
std
jge
leave
popf
enter
in
leave
pop
mov
cmc
jno
ret
icebp
mov
sbb
jg
movsl
scas
push
cli
insb
dec
jecxz
inc
push
out
pop
mov
pop
dec
xchg
mov
xchg
or
or
cmp
fwait
jae
push
push
call
inc
mov
xchg
nop
movb
adc
and
imul
sub
fidivrs
popl
cmp
mov
sbb
mov
test
int
or
sahf
hlt
pop
les
in
mov
pusha
data16
mov
inc
jmp
lcall
imul
fisttpll
dec
sbb
insl
mov
popf
fistpll
cmp
push
mov
adc
sub
fmull
jle
push
out
sbb
test
gs
push
or
test
dec
ret
loope
mov
and
scas
aaa
aas
mov
fbld
jb
jns
popa
leave
xchg
mov
test
cwtl
adc
pop
test
pop
in
pop
mov
mov
shll
xchg
int3
push
ljmp
inc
pop
sub
daa
out
mov
mov
sbb
cmp
mov
xlat
jl
adc
adc
fsubrl
cltd
stc
push
dec
std
push
iret
test
adc
jns
pusha
ret
and
dec
pop
insl
push
lea
add
jecxz
fs
hlt
imul
loope
outsb
push
fcompl
stos
pusha
add
cli
pop
inc
je
pop
fistpll
roll
sub
mov
pop
and
idivb
push
add
inc
xlat
int3
xor
pop
addl
inc
cli
jmp
mov
jns
aam
dec
sbb
pop
daa
adcl
cmp
pop
sub
psrlw
inc
jg
and
jl
jo
dec
jge
jl
inc
mov
and
or
push
mov
std
push
cmpb
sahf
repnz
push
pop
pusha
push
bound
sub
cld
rcl
lret
pusha
or
and
lretw
jge
mov
rorl
xchg
clc
lock
sbb
adc
push
scas
cmp
movsb
lret
cmp
ljmp
and
enter
xor
js
adc
jno
fnstsw
fmull
dec
mov
inc
in
inc
push
les
pop
test
cmp
push
sub
adcl
cs
nop
pop
xlat
jb
ret
test
in
into
xor
ficoml
cld
lds
std
js
cmpsb
inc
jle
and
push
push
outsl
cmpsb
add
push
fdivs
dec
dec
mov
xchg
stos
jp
push
xor
out
int3
cltd
mov
pop
mov
aaa
iret
mov
les
push
movl
rolb
inc
sub
jo
add
dec
insb
push
pop
ds
mov
mov
and
ds
loopne
mov
loope
dec
notl
push
xchg
pusha
daa
popf
popa
and
ss
pop
mov
cli
dec
push
mov
cli
pusha
addl
sbb
adc
cmp
lret
and
push
adc
jmp
outsl
push
push
ret
xchg
out
jmp
cmpsb
arpl
jno
cwtl
arpl
mov
ljmp
idivl
ficoms
and
std
lods
mulb
es
ret
adc
inc
push
imul
cmp
cwtl
push
push
jle
dec
sbb
sbb
pop
nop
cmpsl
inc
sub
cmp
xchg
push
cs
js
ffreep
mov
sbb
push
insl
sbb
icebp
stos
jl
rclb
aas
add
pop
inc
cld
inc
sarb
out
push
mov
arpl
sbb
out
shlb
aam
add
aad
or
jno
cmpsb
subb
sti
and
loopne
mov
mov
clc
mov
inc
push
sbb
lcall
mov
adc
fs
adc
or
or
sti
pop
mov
repz
sbb
xchg
mov
jb
sub
sub
jle
call
lret
xor
adc
or
jle
lea
push
mov
pusha
jo
xor
dec
out
jno
stos
fstps
mov
nop
cmp
sbb
stos
ljmp
adc
or
test
jge
arpl
or
pushf
adc
mov
pop
xchg
imul
sahf
fcoml
rcr
in
ds
xchg
ret
push
fbstp
adc
cmpsb
ret
or
jp
mov
add
data16
icebp
sub
mov
adc
or
repz
clc
test
dec
out
mov
dec
test
sarb
pushf
aaa
sub
stc
insl
es
call
push
inc
xlat
push
mov
pop
push
jmp
pushf
nop
js
add
push
enter
scas
pop
outsl
lret
je
adc
jnp
dec
inc
push
adc
lea
sub
callw
ror
mov
mov
xchg
sub
or
adc
arpl
jns
mov
jo
ret
mov
iret
xchg
rolb
in
adc
sub
test
daa
cmp
cmc
xchg
and
or
inc
icebp
cltd
push
and
aad
or
jl
shll
xor
and
ljmp
std
or
xchg
and
dec
add
and
mov
xor
arpl
test
or
lahf
xchg
mov
push
fs
sbb
mov
std
mov
or
fmull
subb
inc
roll
pop
les
cmp
loope
adc
andl
sub
pop
xor
scas
divl
jl
jle
inc
jae
xchg
rcl
aam
test
stc
int
pop
pop
mov
dec
add
js
adc
rcr
lds
xchg
jbe
sbb
mov
imul
mov
repz
add
inc
lret
imul
and
lret
mov
into
insl
out
fcmovnbe
push
xchg
mov
in
jp
insb
adc
adc
pop
add
inc
pop
loop
icebp
lds
aad
mov
or
sub
mov
dec
lret
test
adc
push
or
xor
rcl
adc
and
daa
sar
mov
cmp
jmp
mov
dec
add
sbb
mov
xlat
sarb
and
dec
mov
mov
inc
xchg
in
arpl
ds
insl
cld
mov
cmp
jg
and
and
into
add
jecxz
pop
movsl
jmp
gs
xchg
nop
movsl
sub
jmp
dec
pop
mov
test
jnp
jns
outsl
lods
lock
mov
add
fs
push
jae
or
or
push
cmp
data16
out
jecxz
pop
jae
inc
sub
mov
inc
fdivrs
push
pushf
iret
mov
xor
imul
pop
in
xor
ljmp
insb
leave
sbb
ret
jecxz
dec
jmp
xchg
sbb
fs
and
mov
sti
pop
rclb
cmova
cmp
sub
out
mov
dec
jmp
xor
shrb
lahf
xchg
push
dec
jo
jbe
cli
sub
xchg
xchg
lea
int3
out
lock
xchg
or
rcll
jg
clc
mov
push
mov
clc
fcmovbe
pusha
add
lahf
pop
bound
dec
add
mov
xchg
ss
mov
outsl
jo
xchg
mov
and
sub
rol
std
push
cltd
sbb
sub
shrl
sub
sub
out
jb
mov
jae
pop
xchg
jmp
mov
or
mov
mov
int3
sub
test
sub
sub
test
sti
add
mov
jo
fsubr
push
sub
pop
pop
cmp
push
and
mov
loope
inc
mov
cwtl
jle
mov
aad
xchg
gs
lods
cmpsl
mov
ret
je
sbb
jp
lahf
push
leave
pop
testb
jae
adc
cmpsb
adc
arpl
xor
popf
call
cmpsb
mov
adc
pushf
pop
cmpsl
jnp
push
fildll
jno
mov
sar
fstpl
mov
and
lods
cmc
rclb
mov
inc
insb
stc
mov
mov
mov
and
xor
in
pop
testb
and
movsl
sahf
test
cmovno
aad
xchg
dec
cmpsb
mov
lock
add
dec
outsb
loope
jnp
mov
pop
and
popf
aaa
rorl
sbbb
aaa
inc
jp
fdivs
mov
xchg
or
mov
push
sub
jbe
mov
nop
ror
pop
xor
ds
lods
inc
orb
test
lahf
sbb
pop
shll
pop
jbe
push
ja
ds
cmp
shll
cmp
or
or
pop
push
les
jmp
in
xor
fidivrl
pop
js
adc
cmp
fdivrs
cltd
add
cmp
pop
aad
stos
ljmp
lods
ficoml
or
xchg
insb
adc
sbb
and
and
lds
frstor
daa
jmp
cld
test
mov
xchg
stc
scas
mov
push
add
and
pop
test
mov
mov
stc
in
outsl
or
xor
and
sti
lods
mov
adc
mov
mov
add
push
repnz
push
push
jnp
and
cmp
pop
jne
lahf
cld
xor
inc
icebp
aam
sbb
mov
pop
lock
pop
xchg
xchg
add
adc
cmc
andb
xor
xorb
push
aad
bound
ss
lock
jg
or
xchg
mov
lret
movsb
adc
repnz
cld
xchg
dec
cltd
aaa
jns
aas
cmp
mov
fucomp
sti
and
push
je
fwait
stos
gs
arpl
push
sub
dec
nop
notb
stc
nop
loop
mov
xor
jae
xchg
jp
push
icebp
add
out
mov
andl
mov
pop
inc
popa
scas
cmpsl
add
jge
test
or
xchg
jp
add
das
ds
scas
rcll
stc
push
xor
sub
adc
add
int3
sahf
mov
adc
jecxz
call
stos
fdivs
sub
lea
fwait
rorb
aas
add
and
adc
pop
jb
lret
pop
enter
adc
cltd
jnp
in
hlt
pushf
cmp
cld
dec
mov
sbb
sub
js
out
inc
sbb
and
sub
in
xlat
cmp
addr16
push
call
arpl
dec
roll
loop
xor
lcall
xchg
data16
mov
outsb
fimuls
in
push
cs
int
pop
push
mov
loop
inc
mov
xchg
jg
jb
xchg
fmul
xor
sbb
dec
push
dec
and
insl
arpl
lahf
aad
dec
jecxz
cmpsl
cmpb
lret
ret
stc
xor
les
mov
bnd
imull
mov
jmp
push
arpl
mov
mov
adc
push
scas
fstl
jl
ljmp
test
arpl
nop
ja
aas
fisttpl
sub
into
ljmp
xor
mov
and
pop
std
jge
inc
inc
js
jp
adc
sar
and
cmp
dec
xlat
subb
out
out
jmp
push
fdivs
add
lods
stc
cwtl
jecxz
pop
mov
jmp
fidivrs
add
lcall
add
xlat
ret
pop
fstpt
cs
loopw
int
rcrl
xor
repz
sub
mov
repnz
ds
mov
mov
stc
repz
push
fbstp
add
pop
push
mov
xor
mov
fdivrl
in
cwtl
les
lret
inc
dec
in
sub
jge
push
fistpl
mov
mov
pop
xchg
dec
iret
fidivrl
adc
cmp
inc
fnstsw
scas
mov
test
pop
dec
cs
mov
xlat
ds
lods
adcl
mov
iret
pop
mov
push
das
loopne
lahf
pop
fbld
add
aaa
stos
xchg
sbb
mov
or
nop
pop
add
sbb
in
divb
out
aam
cmp
cmpsl
mov
jo
lds
test
repnz
icebp
sbb
push
fs
es
mov
mul
in
jno
xchg
vcvttps2dq
movsb
test
bnd
jnp
mov
inc
adc
mov
adc
mov
lds
std
out
iret
mov
nop
dec
cmp
hlt
pushf
dec
mov
pop
add
jb
hlt
jb
jo
xchg
cltd
divl
mov
dec
or
lahf
and
and
das
dec
push
adc
mov
stos
pop
inc
jbe
xorb
pop
xchg
add
cli
push
sbb
arpl
mov
aad
shr
int
push
and
data16
pop
push
jns
lods
fs
mov
rorb
push
rcr
xor
stc
adc
push
sub
ss
cld
incb
add
sbb
sbb
loop
mov
ja
out
fsubs
adc
cmpsb
cltd
jns
jae
inc
and
sub
jo
repnz
loopne
pop
push
sbb
rcl
mov
add
pop
test
add
pop
mov
pop
pop
and
jmp
dec
rcl
mov
clc
sub
pop
cli
int
fisubs
int
imul
fwait
xchg
mov
icebp
pop
cmp
cs
inc
daa
or
sbb
stos
mov
mov
insb
sub
xchg
loopne
push
outsl
inc
pop
movb
shr
xchg
shlb
sbbl
out
xchg
jno
subb
adcb
clc
xchg
js
in
xchg
hlt
jle
inc
dec
mov
dec
mov
lea
xor
push
imul
sti
jp
orb
pop
cmpl
ja
mov
shll
inc
ss
mov
dec
subb
push
or
or
xchg
sbb
fnsave
in
mov
lea
lods
sub
inc
sbb
and
rcr
sub
sub
add
xlat
jp
mov
insb
aas
out
fwait
stos
mov
in
lcall
aaa
mov
bound
cwtl
loope
daa
pop
or
cmpl
lea
sbb
mov
sbb
push
cmpsb
lods
lods
mov
add
mov
clc
and
push
jne
adc
sbb
rolb
addr16
jle
xor
lods
shlb
mov
xor
stos
mov
xor
iret
cmp
std
jge
pop
jno
jecxz
cmp
loopne
addr16
shlb
dec
xchg
lea
jge
in
push
out
pop
aam
adc
jmp
xchg
inc
int3
cmp
mov
arpl
cmpsb
notl
cmp
out
and
push
jbe
or
jl
in
xchg
out
fstp
lret
add
loope
push
addr16
fwait
xor
dec
push
nop
lcall
mov
mov
and
jno
enter
xlat
aam
fimull
in
sub
push
sub
lods
cmp
std
or
mov
ret
or
out
mov
fdivrs
addr16
mov
lock
loopne
mov
addl
lds
pushf
int
popa
mov
or
stc
xlat
sarl
jo
outsl
push
scas
inc
aaa
push
add
cmp
movsl
sub
rcrb
test
movlps
cltd
jb
cld
fsts
and
lahf
xchg
add
aas
leave
or
clc
xor
jae
dec
insl
push
mov
adc
xchg
mov
inc
aas
or
mov
sub
pop
dec
aad
fisttps
xchg
adc
test
andl
pop
dec
xchg
lods
loope
mov
mov
push
add
mov
push
mov
xchg
out
fs
and
cld
scas
xor
xchg
xchg
js
jp
lahf
test
mov
dec
mov
lret
out
mov
cmp
inc
ficoms
fsub
mov
popf
dec
movsl
and
add
ja
lea
adc
lcall
cmpsb
and
sbb
mov
xor
pop
xchg
push
xor
mov
cmc
xchg
ret
dec
jo
fwait
adc
jns
push
cli
insl
xchg
xchg
outsb
ljmp
cmp
adc
fstpt
outsl
xor
add
push
jo
dec
stos
imul
movsl
and
and
insl
icebp
loopne
gs
mov
cmp
dec
popf
cltd
pop
mov
mov
repz
subb
and
xchg
cmp
sbb
loope
inc
sub
sub
cmp
add
cmp
in
lock
adc
movsb
enter
test
cmp
ja
mov
lret
jae
bound
adc
add
jp
jbe
shrl
xchg
aaa
xchg
out
adc
mov
pop
adcb
data16
outsb
push
das
mov
test
adc
adc
jg
jb
sub
add
xlat
je
mov
pop
shrl
pop
cmp
fisttpll
ds
test
into
sbb
sub
dec
xor
addr16
cmp
jo
int3
xchg
sbb
lods
inc
pop
ficomps
fmul
dec
sbb
shll
jle
out
xchg
scas
add
data16
ljmp
arpl
jo
mov
pop
pop
test
xor
aad
jmp
xchg
or
or
jnp
jl
ret
imul
sbb
outsl
test
loopne
jne
sbb
dec
fcoml
inc
iret
push
and
aad
cmp
sub
sbb
scas
insb
mov
and
icebp
insb
pop
pusha
popf
adc
add
enterw
punpcklbw
repnz
dec
imul
cmp
dec
inc
pop
or
stos
pop
fsubrs
pop
shll
ss
mov
mov
enter
cmp
dec
inc
fxch
das
addr16
pop
sbb
push
jle
mov
adc
fisubrl
sbb
lods
push
xor
jnp
hlt
add
aam
sub
das
sbb
xor
jmp
add
daa
push
inc
add
pop
dec
mov
or
sti
add
jae
fildll
push
rcl
pop
adc
mov
sub
addr16
pop
or
dec
mov
cmp
imul
inc
mov
mov
jb
sbb
jae
in
out
lods
stos
mov
sar
sub
cmp
xchg
icebp
mov
mov
gs
adc
jno
test
and
mov
leave
insb
aam
jl
mov
adc
sbb
fiaddl
xor
daa
jne
push
test
xor
out
lcall
mov
cmp
mov
pop
pop
jne
lock
push
mov
int3
fistps
cmpsb
push
xor
jp
pop
push
jbe
lods
push
cmp
inc
mov
add
jle
xlat
fdivs
jmp
cmp
sarl
mov
xchg
xor
inc
testb
imul
jmp
ljmp
lock
ljmp
loop
lret
cltd
mov
mov
or
pushf
repnz
or
dec
xor
repz
shlb
ret
dec
lret
test
icebp
shll
cmpsl
mov
outsb
xor
loope
mov
xor
xor
imul
mov
imul
movsl
bound
jecxz
shll
test
pop
stos
mov
hlt
loopne
aaa
or
xor
and
push
mov
lret
push
imul
hlt
inc
mov
xor
xchg
scas
cltd
jb
ret
popf
dec
xchg
push
js
in
fcmove
sub
mov
push
mov
xchg
add
sahf
testb
mov
dec
and
insb
lods
cmp
mov
imul
xlat
inc
mov
ss
and
add
add
popf
jp
nop
cmpl
loop
push
addl
xor
adc
jb
mov
adc
push
lds
in
push
or
call
jmp
adcl
aas
dec
loop
pop
sbb
mov
cwtl
fistl
and
cld
rclb
dec
js
jl
arpl
icebp
sbb
inc
inc
xlat
in
popf
out
mov
cli
fnstenv
fwait
sti
gs
sti
fcoml
xchg
call
popa
cmp
mov
mov
cmp
lods
cmc
cmp
xlat
pop
mov
rorb
dec
call
dec
adc
in
xchg
aaa
gs
add
addl
rcll
pushf
and
jge
xor
xchg
lock
push
cmp
ds
jmp
or
adc
mov
sbb
xchg
out
cmpsb
push
push
aad
inc
pushf
call
loop
push
mov
popa
xor
je
sbb
and
jle
push
stos
outsb
rorl
aad
je
in
mov
andl
iret
xor
lds
xor
movsl
sub
test
stos
pop
or
jge
push
mov
faddl
adcb
xchg
mov
das
sbb
pushf
mov
dec
mov
pop
mov
adc
xor
lahf
es
cmpb
test
jno
fwait
call
aaa
cwtl
lods
xchg
mov
ja
or
repnz
xchg
mov
subl
and
xchg
insl
aam
jge
je
rorb
push
ss
and
mov
divl
pop
icebp
loopne
pop
das
out
dec
sub
mov
mov
mov
or
and
xor
add
shlb
dec
mov
arpl
mov
ficoml
push
mov
push
sub
xor
dec
loope
pop
pop
sbb
jbe
pushf
cmpsl
and
sub
rolb
pop
cltd
cmp
inc
mov
or
sub
cmp
cmpsl
xchg
inc
movsb
or
das
mov
pop
in
push
fistps
push
xlat
nop
scas
test
push
jb
fsubrs
lods
in
jle
sarl
into
outsb
fcompl
daa
jg
xor
cmp
loope
sbb
mov
add
mov
and
out
pop
test
xchg
cmp
push
and
dec
or
cmpsb
jno
jnp
mov
jne
dec
fisttps
andb
mov
cltd
rolb
fdiv
add
sti
push
call
mov
adc
out
jns
movb
fstpl
pop
adc
stos
out
call
cmp
pop
fldenv
addr16
insl
adc
xchg
mov
xchg
lods
jb
daa
sti
and
ja
and
sub
sub
popa
aam
dec
ljmp
push
and
mov
adcl
sarb
push
pusha
lds
lds
pop
cltd
lcall
flds
sbb
lock
cmp
popa
mov
sbb
mov
lods
mov
test
sub
aas
pushf
es
pop
lea
push
adc
shl
cs
nop
fwait
push
fisttpl
jb
sbb
mov
sbb
jecxz
hlt
enter
ss
push
pop
xorb
cld
mov
lock
int
cmc
cmp
out
sbb
addl
sub
push
jge
mov
hlt
stc
jo
push
std
sbb
repz
andl
mov
nop
sub
scas
sub
or
dec
imull
imul
xor
movsb
pop
add
aam
dec
add
sub
sbb
inc
cmp
iret
sbb
lahf
es
jmp
repz
int
movsl
test
jb
lcall
data16
push
int
outsb
cli
outsb
xorb
sub
sarl
sbb
mov
adc
lret
mov
in
push
push
pop
cwtl
fldl
cmpsl
cmpsb
cmpsb
pop
push
pushl
pop
out
in
push
sbb
jbe
shrl
imul
fstl
push
mov
int3
pusha
adc
push
jge
mov
icebp
jo
loopne
out
inc
xchg
jmp
pop
fldenv
mov
push
xor
scas
call
loope
sub
lods
xor
jmp
adc
adc
mov
jb
and
aam
sti
pop
adc
dec
rep
jbe
and
xor
and
inc
sub
cld
lods
jns
xchg
mov
out
jbe
mov
incl
fcomip
mov
les
ja
dec
or
les
pop
fldt
ret
int
arpl
loop
pop
mov
xchg
aam
out
push
aas
fsts
xorb
inc
out
push
subb
dec
in
mov
aas
push
mov
jg
or
lcall
mov
mov
repz
cmc
sbb
mov
aad
test
jg
cmp
cmp
js
dec
std
mov
cmp
rcrl
in
jmp
ljmp
sarb
mov
jns
ljmp
jmp
out
call
lods
inc
leave
enter
sub
or
xchg
sub
jae
shrb
or
cmpsl
aaa
inc
lea
mov
icebp
aad
push
dec
jge
mov
stos
imul
and
addr16
inc
jge
sbb
mov
dec
loop
sub
sbb
xchg
adc
adc
and
jg
fsubrs
das
mov
sbb
mov
xchg
push
or
clc
mov
dec
sub
dec
mov
xor
and
int3
xor
pop
mov
pushf
xor
pop
dec
push
push
loope,pn
mov
mov
inc
int
inc
fwait
xchg
push
cli
sbb
int3
clc
cmp
sub
cs
in
xchg
xchg
xlat
sbbb
into
icebp
and
and
in
xchg
inc
in
cmpsb
sub
sahf
sub
out
mov
push
sbb
lret
push
mov
pushf
pop
cltd
popa
sbb
stos
hlt
xor
inc
lret
inc
mov
xchg
data16
push
fst
push
add
jecxz
push
cli
ret
ret
jecxz
add
add
enter
inc
popf
movsl
aam
mov
pop
rcrb
xor
shrb
xor
add
and
push
inc
add
notb
sub
jnp
jae
pop
and
data16
fmulp
mov
repz
cmp
jmp
les
dec
ret
and
push
int3
push
and
push
add
add
js
xlat
jo
in
enter
push
cmpsb
dec
mov
and
cmp
fdivrs
fcomi
cmp
and
rcrb
push
push
or
leave
or
push
lds
push
out
or
xlat
sahf
or
fsubrl
aaa
sbb
into
adc
scas
fsubr
cmc
cli
out
pusha
pop
idivb
mov
push
or
xor
mov
pop
rcrb
xlat
and
pop
dec
pop
sub
jbe
jl
lret
ror
mov
push
scas
insb
add
cmp
test
push
std
jl
enter
push
sbb
cmc
ljmp
cltd
inc
adc
add
cmc
jecxz
int
add
xchg
add
iret
into
mov
clc
aam
pop
sub
add
cmpl
mov
dec
cmpl
jp
or
mov
js
push
fld
pop
mov
imull
jmp
add
xor
and
mov
repnz
pusha
xchg
idivl
ljmp
cmp
stos
out
fcomip
ss
xchg
movsl
mov
fisubrs
icebp
cmpsb
fiaddl
mov
jmp
inc
inc
out
cwtl
mov
pushf
jb
jmp
push
mov
mov
mov
adc
inc
dec
jp
int
das
jmp
inc
pop
das
popf
nop
or
sbb
lret
outsl
push
outsb
insb
mov
loope
ficoms
pop
push
adc
add
xchg
mov
jno
cli
add
push
pop
std
sub
mov
pop
mov
lock
mov
dec
scas
repz
mov
sarb
nop
into
xor
subb
lcall
mov
pop
push
push
pop
dec
gs
push
mov
mov
ficoms
imull
std
push
push
sti
out
sub
pop
lret
fidivrl
daa
add
test
xchg
lock
push
sub
mov
push
or
or
xchg
or
inc
push
xor
push
xlat
mov
mov
and
lods
jb
mov
jno
push
cld
xor
mov
sub
push
or
lret
ret
cmp
in
loop
push
or
ficompl
cmp
adc
and
addr16
imul
test
or
mov
mov
fldln2
xchg
xlat
pusha
insl
cmp
ds
pop
addr16
out
xlat
popa
jmp
mov
in
out
dec
add
inc
push
decl
imul
loope
mov
mov
pcmpeqd
insl
dec
repz
imul
sub
nop
iretw
add
out
add
lds
push
fucomi
xor
ds
cmp
or
ljmp
inc
adcb
mov
lret
test
dec
dec
repnz
mov
test
or
rcrb
mov
xchg
dec
xlat
sarl
jmp
pop
xchg
in
pop
nop
lods
dec
data16
add
push
adc
xor
aam
add
dec
rcl
lcall
xchg
fdiv
test
jo
ret
sar
insl
or
sbb
ja
xchg
test
inc
add
pusha
mov
mov
roll
imul
dec
les
or
xchg
inc
movsb
mov
mov
in
jnp
sbb
or
xchg
je
jae
aad
adc
arpl
cmc
xor
adc
test
cmp
fsubp
sub
xchg
jo
xor
mov
dec
movsl
addb
push
push
jno
jno
inc
push
hlt
mov
pop
mov
sbb
push
xor
adc
in
adcl
cmp
or
push
daa
and
mov
movsl
mov
sbb
je
push
stos
fwait
jae
ja
and
jo
cs
repz
inc
fists
aad
faddp
cmpb
pop
and
sub
out
mov
inc
cs
dec
movsb
in
mov
loope
sti
imul
int
sub
pop
hlt
jecxz
dec
popa
popf
lock
inc
lahf
addl
pushaw
and
lods
rcrl
shlb
add
lods
js
sbb
ret
mov
in
xor
lea
lods
leave
test
scas
ljmp
adc
jge
jecxz
dec
add
popf
sub
push
inc
inc
xchg
lea
outsb
mov
mov
dec
sub
xchg
ljmp
mov
mov
mov
clc
jb
jp
fcoms
test
inc
ftst
or
stos
mov
sarb
or
mov
push
and
inc
xchg
lahf
sbb
dec
ss
sub
adc
add
or
into
cmp
adc
enter
ja
aad
cmp
out
bound
dec
add
ret
fcompl
lods
movhps
lods
ret
pop
shrl
inc
sbb
sub
mov
aam
sub
xchg
sbb
lret
jns
mov
push
cmp
jge
jp
fisttps
out
inc
movsb
sbbb
loop
mov
or
fildl
inc
mov
mov
aad
mov
sub
dec
inc
sbb
mov
xor
push
dec
and
pop
xor
sub
jle
pop
dec
int
add
mov
ljmp
ljmp
mov
xchg
imulb
jg
add
sbb
cli
jbe
jp
ficoml
std
movsb
lahf
adc
ret
inc
mov
pop
cmp
mov
inc
stos
in
lock
int3
jl
lcall
rorl
scas
pushf
mov
inc
repz
fcomp
mov
adcb
mov
rolb
adc
mov
mov
js
sbb
cmpsb
shl
loope
lahf
ficoms
scas
mov
jg
cmp
sbb
mov
lock
fnstenv
stos
cmpsl
cmpsl
push
mov
sub
call
flds
or
lods
enter
mov
xor
sub
jg,pn
pop
dec
ljmp
mov
aam
mov
mov
mov
pop
popf
shrb
out
inc
insl
nop
loop
push
mov
rcrl
xor
stos
lods
fisttps
movsl
adc
clc
add
dec
sbbb
jge
popa
enter
xor
pusha
jbe
adc
jns
fsubrl
xchg
mov
and
mov
data16
dec
js
add
jmp
add
movl
int3
clc
mov
pop
jae
xor
pusha
or
int
mov
adc
inc
cmc
or
pop
mov
adc
in
mov
ret
test
dec
js
out
imul
pushf
insb
fdivs
pop
fwait
jge
stc
and
pop
fwait
jp
adc
dec
das
data16
mov
pusha
fs
xorl
sub
stos
int
cmp
int3
and
cmp
mov
sub
int3
mov
popf
ret
cmp
outsb
sahf
cmpsb
lret
xchg
mov
je
inc
dec
lods
pop
pop
sbbl
sbb
sahf
imulb
cmc
or
sub
lods
aad
repz
popa
aad
outsl
les
cs
or
xor
xor
inc
jecxz
mov
adc
mov
sub
and
pop
addl
vpsubusw
inc
sbb
cmpl
pop
push
cmpsb
or
cmp
and
adc
sbb
cmc
in
dec
inc
xor
cmpsl
mov
and
dec
sti
cmp
insl
mulb
cs
push
gs
or
fisttpl
daa
inc
and
scas
imul
in
xor
pop
dec
sti
loopne
jno
xchg
jmp
mov
push
loope
lea
cli
andl
xchg
adc
xlat
jb
jbe
mov
dec
dec
aam
pop
mov
idivl
dec
mov
out
inc
rclb
fsubrp
xchg
subl
pop
icebp
add
out
mov
fwait
test
adc
ds
cmp
pop
jg
aad
iret
mov
popl
mov
ss
push
mov
inc
jl
inc
outsl
cmp
enter
call
pop
jmp
inc
sbb
insb
xchg
inc
out
jno
and
into
jmp
rcrl
int3
sbb
cmp
jb
mov
adc
or
in
cmpl
int3
jg
imull
sub
inc
test
jo
cmpsl
lods
nop
mov
or
sbb
jecxz
hlt
movsl
dec
dec
test
mov
cmp
ss
ljmp
xchg
push
mov
pop
jle
fnsave
arpl
mov
mov
rorl
stos
fwait
movsb
call
and
testl
mov
mov
mov
loop
lret
xchg
pop
mov
cltd
xchg
les
sub
rep
push
stc
mov
mov
add
rcrl
pusha
push
leave
addr16
out
insb
ret
jne
mov
lods
enter
stos
push
mov
int3
repnz
inc
int
aam
mov
ds
jns
std
js
pop
iret
mov
sahf
cmpsb
arpl
into
adc
out
jbe
push
sbb
rclb
jg
imul
xor
pop
mov
dec
sbb
push
push
jmp
call
jnp
gs
pushf
push
stc
mov
or
sub
jne
mov
and
pop
push
lret
nop
loope
sti
cmp
inc
mov
push
fisttps
std
sub
mov
sbb
mov
push
cmp
rorb
sub
cmpl
xchg
std
es
ret
cmpsb
xor
in
inc
repnz
imul
add
xchg
loopne
mov
in
jge
push
jecxz
cmc
jge
in
xchg
sbb
push
cmp
mov
test
xlat
fidivs
or
aas
incl
pop
mov
das
push
std
xor
sbb
xchg
sar
mov
nop
jnp
loop
popa
xchg
aas
mov
add
imul
sarl
jno
inc
and
cmp
jmp
repz
out
scas
loopne
pusha
mov
cmp
sti
into
push
adc
add
lods
ds
cmp
inc
in
sbb
sbb
lret
mov
cli
es
outsb
fxam
enter
fnstsw
mov
ror
and
imul
cmpsb
xchg
jnp
or
push
addb
push
dec
ror
insb
sbb
std
dec
scas
dec
test
je
add
jbe
scas
mov
jo
xor
pushf
fcomip
ficomps
ja
sbb
mov
pusha
inc
jge
ja
xor
jmp
incb
test
in
add
jno
ss
cli
ds
andb
pop
jnp
rorl
test
and
shlb
mov
pop
int3
inc
fiadds
push
sahf
sub
out
jnp
loope
in
pop
pop
and
cli
or
push
pop
pop
into
mov
clc
push
cmp
jb
cmpsb
push
iret
adc
sub
cs
shr
xchg
or
mov
out
adc
int3
jmp
pusha
jnp
dec
sbb
scas
inc
cltd
mov
xchg
inc
add
cli
inc
mov
xor
and
lret
je
xchg
add
faddl
xchg
cmp
sub
or
fcomps
ja
cmpsl
xlat
daa
popa
jns
popa
and
xor
inc
dec
addr16
movsb
into
mov
xchg
sbbb
lret
inc
sub
sbb
test
push
sub
imul
push
loop
sti
mov
pop
int
imul
enter
into
das
cmpsl
xor
mov
arpl
ja
aaa
dec
pop
in
int3
mov
inc
inc
adc
mov
ret
jnp
orb
fwait
push
pop
push
test
ret
dec
mov
in
stos
fmull
fdivr
mov
pop
adc
clc
mov
insw
sarl
sub
xor
mov
lret
pop
xor
movsl
out
or
outsb
jle
leave
sub
int
loop
xchg
push
mov
sbb
xor
xlat
aad
fs
jecxz
mov
popf
sub
test
pop
test
xchg
adc
mov
fldl
jmp
imul
xor
adc
cmp
gs
vorps
pop
pop
push
pop
pop
inc
int
mov
dec
int3
adc
cmp
mov
xor
adc
lret
dec
lods
adc
fisubrs
xchg
mov
aaa
dec
pop
add
out
push
sbbb
or
pop
int
cli
lahf
jo
outsl
int3
inc
jmp
mov
xor
xchg
xchg
test
addb
mov
cmpsb
pop
xor
xchg
lret
mov
dec
push
fsubp
mov
mov
enter
fsubp
data16
push
mov
stc
dec
outsl
sbb
cwtl
sbb
mov
rcll
cmpsl
ja
sahf
sbb
dec
out
mov
lods
sbb
in
stos
int
sbb
data16
stc
fucomip
repnz
pusha
popa
iret
lret
xor
sbb
mov
divb
aaa
mov
mov
push
mov
pop
mov
lock
sub
and
dec
in
test
icebp
movl
and
and
xchg
lret
pop
fnstcw
outsb
divl
iret
shlb
mov
and
push
test
cltd
nop
push
pop
or
mov
pop
mov
cld
sarl
cmp
sbb
sbb
mov
or
xchg
sub
pop
xor
add
pop
pop
int
mov
adc
dec
sbb
xor
ljmp
clc
dec
xchg
xor
adc
xchg
lods
pop
sahf
in
enter
in
push
and
and
cmpsb
inc
loope
xchg
xor
push
mov
orl
cmpsb
shrb
fsubr
and
ja
stos
test
xchg
mov
mov
mov
lret
out
push
jmp
rclb
lret
jecxz
bound
mov
push
and
and
xchg
insl
cli
push
xchg
enter
mov
jo
fisttps
jnp
push
sbbb
cmp
mov
jge
and
andl
mov
fs
push
jecxz
les
pop
pushf
sets
out
cmc
lret
mov
loopne
or
aas
or
push
aad
xor
adc
mov
dec
inc
dec
mov
arpl
in
xchg
pop
fisubs
jg
xchg
sbb
jns
mov
cltd
or
ja
test
xchg
push
lcall
sub
lea
mov
pushf
xchg
cmp
in
repnz
mov
pop
and
inc
pop
daa
loope
test
sti
and
or
inc
sub
sbb
imul
add
push
ret
rorb
sbb
cmp
sbb
xchg
dec
scas
out
inc
mov
mov
test
or
or
dec
jae
enter
and
stc
pop
inc
imul
int
inc
arpl
cmp
xchg
lds
jp
push
mov
sub
mov
in
push
and
cmp
std
dec
lahf
pop
leave
lret
xor
add
addr16
mov
loopne
xchg
rcrb
xchg
and
adc
shrb
je
push
mul
std
cmp
sbb
fdivrs
jmp
jp
sub
inc
aad
pop
pushf
or
les
call
call
push
cld
mov
jmp
mov
or
jg
lock
cmc
push
and
cli
fs
xchg
dec
leave
dec
subl
cmpsb
fmull
in
adc
mov
push
sti
or
dec
sub
movsb
xor
stc
and
push
or
mov
xchg
int
mov
mov
in
shll
add
je
int
mov
jnp
psubusw
add
push
push
xor
loopne
scas
nop
mov
fs
neg
mov
ja
sub
dec
cmpsl
push
sahf
add
dec
jns
out
ds
stc
cmp
fldl
inc
or
cwtl
jp
push
sub
mov
out
mov
dec
adc
mov
leave
aas
stos
adc
pop
pop
inc
sarb
cmp
mov
mov
aas
pop
mov
dec
in
mov
pop
fidivl
out
data16
pop
popw
int
mov
aam
aas
movsl
shr
mov
in
pushf
in
imul
push
data16
in
in
pop
orb
inc
ljmp
jge
jl
adc
xor
and
es
ret
mov
sbb
xchg
cmp
pop
int
push
xchg
aad
mov
and
mov
cwtl
fdivr
fs
dec
ret
div
call
fdivr
shll
xchg
sti
xor
mov
subl
aas
shll
push
repnz
fmul
imul
jae
cmp
arpl
jecxz
movsb
sarb
js
incb
pop
adc
out
sub
jne
fucomp
enter
or
jmp
sbb
pop
mov
repnz
in
fcom
jbe
ljmp
jno
in
clc
jbe
mov
repz
mov
add
out
jno
or
ds
push
cmpb
loope
lock
shrl
pop
leave
insb
sarl
mov
ret
popa
xchg
xor
xchg
push
push
insl
sbb
mov
mov
clc
xlat
stc
sub
jecxz
bound
notl
fisttps
dec
xchg
jecxz
inc
mov
push
add
pop
push
repz
mov
pusha
mov
mov
movsl
lret
jg
mov
push
andb
inc
shl
jne
pop
arpl
sub
mov
or
arpl
inc
xchg
mov
shl
movsl
pop
sbb
push
popf
mov
adc
adc
addb
out
fdivrl
push
cmp
je
mov
and
pop
push
les
push
aam
inc
xor
sub
repz
dec
ret
xchg
mov
and
outsb
pop
dec
mov
out
jbe
cmp
pusha
add
add
into
and
sbb
data16
stc
adc
daa
in
pop
push
sbb
insl
push
jle
mov
mov
add
pop
pop
and
or
pop
push
dec
fisubl
mov
mov
pop
lret
or
inc
push
mull
cmovp
lods
pusha
pop
out
or
jnp
and
cmp
push
jb
mov
and
sbb
jle
cltd
out
mov
inc
lret
loopne
xor
repnz
sub
mov
pop
add
inc
fidivl
fs
sub
inc
icebp
add
and
outsl
daa
mov
xor
mov
mov
icebp
sub
in
push
pop
push
push
add
and
inc
mov
sub
sti
data16
outsb
arpl
orb
add
inc
cmpl
je
ljmp
jmp
out
xchg
xor
pop
sub
dec
cmp
sahf
cmp
dec
sti
sub
xor
adcb
cmpb
lahf
lds
movb
insl
pop
addr16
or
mov
pop
nop
sub
mov
add
test
cwtl
daa
fs
scas
adc
inc
imul
test
push
jbe
dec
movsb
insb
push
cmp
add
add
dec
xlat
xchg
sbb
jno
sub
mov
dec
test
push
pop
rcll
and
aam
add
xor
lock
fildll
aam
inc
and
cld
shrl
adc
xor
scas
bound
mov
imul
das
xchg
fcmovnb
mov
imul
clc
cmp
xor
xor
jno
ds
ss
xchg
pop
cltd
push
dec
ljmp
dec
rclb
sub
cltd
mov
and
outsb
pop
rcl
aas
or
cwtl
dec
int3
ja
pop
mov
pop
add
rcl
sub
in
and
movsl
das
out
mov
fs
push
cmpsl
aaa
outsl
inc
adc
ljmp
ret
lods
dec
std
idivb
jb
cmp
inc
xchg
mov
inc
mov
xor
je
inc
push
imul
inc
stc
dec
mov
jmp
jnp
out
cs
adc
aad
xchg
popa
in
add
scas
gs
sub
daa
into
xorl
jne
push
xchg
and
pop
cmp
loopne
push
mov
loope
push
cld
stos
xchg
pop
cmp
daa
and
or
jo,pn
sbbl
pop
jnp
loope
pop
cmp
mov
adc
imul
out
add
mov
rorl
stc
std
sahf
sub
jmp
mov
dec
cmpsb
xor
sti
mov
int3
negb
xchg
stos
rorb
mov
ljmp
pop
or
mov
in
jae
test
decb
data16
mov
xchg
xchg
mov
cmp
dec
pop
jbe
insl
inc
jle
and
or
scas
adc
repnz
cmp
pop
bound
push
cmp
dec
mov
or
xchg
mov
xor
xchg
test
fcoms
ljmp
adc
cs
push
push
ret
es
in
cmp
and
lcall
in
xor
or
fs
or
inc
cmp
jne
push
push
cmp
jmp
add
cmp
jne
mov
or
mov
call
mov
mov
sub
sub
sub
mov
add
mov
add
mov
add
add
mov
add
mov
cmp
jne
cmp
jb
mov
mov
add
add
mov
add
push
movl
cmp
je
mov
add
mov
cmp
je
add
mov
sub
sub
sub
add
cmp
je
lea
add
pop
pop
cmp
jne
mov
mov
lea
imul
mov
cmp
jne
inc
mov
add
sub
sub
mov
sub
mov
cmp
jne
add
push
movl
pop
mov
cmp
je
sub
mov
sub
or
mov
add
mov
sub
sub
mov
mov
cmp
jne
sub
mov
sub
mov
add
mov
mov
mov
mov
rol
cmp
je
sub
add
add
sub
mov
sub
jmp
add
ret
sub
ror
add
sub
mov
mov
add
cmp
je
cmp
jmp
add
mov
call
sub
mov
mov
mov
jmp
add
mov
cmp
jne
dec
sub
mov
mov
push
pop
sub
add
mov
sub
mov
cmp
jne
imul
cmp
jmp
mov
imul
mov
cmp
je
call
sub
mov
sub
imul
cmp
jmp
sub
add
jne
sub
sub
call
sub
dec
sub
add
add
mov
cmp
jne
mov
push
pop
add
mov
sub
push
movl
mov
push
mov
cmp
je
add
mov
mov
push
add
cmp
jne
mov
sub
sub
sub
mov
mov
sub
mov
add
shr
xor
mov
cmp
je
or
mov
add
cmp
jne
cmp
jne
add
shr
push
sub
sub
shl
mov
mov
sub
cmp
jne
mov
mov
or
cmp
jne
push
pop
inc
add
ror
mov
sub
sub
mov
mov
mov
sub
add
mov
pop
mov
mov
sub
mov
add
mov
cmp
jne
pop
add
test
jne
mov
push
sub
test
jmp
mov
push
mov
mov
cmp
jne
add
ret
sub
mov
add
mov
push
movl
pop
sub
mov
mov
add
mov
add
cmp
je
sub
mov
cmp
jmp
sub
mov
call
add
sub
xor
mov
add
add
mov
mov
mov
mov
pop
mov
mov
sub
mov
add
mov
cmp
jne
cmp
jne
add
pop
mov
push
cmp
je
mov
sub
sub
add
sub
mov
add
xor
sub
mov
jne
xor
add
sub
add
add
rol
mov
mov
mov
sub
test
je
pop
sub
or
mov
push
cmp
ja
add
mov
add
ret
mov
pop
int3
add
lds
add
adc
add
lds
add
movl
add
movb
sub
add
xor
add
inc
movb
dec
movb
movb
je
add
xchg
add
xchg
movb
add
add
mov
add
ret
add
movb
fadd
add
in
movb
clc
movb
add
add
les
inc
imul
outsl
dec
outsl
arpl
inc
imul
push
add
je
jbe
outsb
je
add
outsl
arpl
inc
jb
add
jne
inc
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
je
inc
outsl
outsb
jae
insb
gs
add
imul
outsb
je
outsl
insb
add
fs
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
dec
add
arpl
inc
imul
jb
outsb
add
loope
pop
jbe
outsb
jo
imul
add
js
gs
pop
push
gs
add
lds
pop
jae
jb
imul
data16
imul
push
push
inc
push
push
cs
insb
