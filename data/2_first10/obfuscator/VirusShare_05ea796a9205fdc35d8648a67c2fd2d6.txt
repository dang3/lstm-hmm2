mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
pushf
jno
mov
and
movsl
mov
jbe
mov
cwtl
pop
sub
sub
add
pop
xor
mov
test
sub
or
cmc
sub
mov
mov
cmp
cli
and
mov
jle
test
ss
sahf
add
mov
add
push
push
orps
mov
sub
dec
sub
or
je
insb
out
pusha
dec
mov
adc
icebp
push
add
lods
mov
into
jp
icebp
js
xchg
cmp
aam
loop
mov
arpl
mov
ror
push
in
add
sub
cli
sub
inc
in
repz
std
xchg
xlat
inc
fadds
test
mov
push
pop
leave
jno
inc
jo
dec
leave
sbb
std
mov
leave
cmp
adc
jno
mov
out
rol
mov
jecxz
jae
je
popf
mov
pop
mov
ljmp
call
call
leave
jmp
in
mov
in
mov
lods
push
ljmp
ljmp
in
mov
call
mov
call
addr16
pop
jmp
and
lods
popa
lock
in
cwtl
xchg
repz
adc
gs
add
jo
cld
cli
xor
mov
imul
loope
and
fisttpll
pusha
cmpl
pop
lock
xor
sub
mov
add
icebp
xchg
jp
sahf
add
xchg
and
aam
stc
or
repnz
and
icebp
fs
lock
aad
adc
dec
shlb
clc
bound
pop
pop
xchg
xor
cld
lods
lret
movsl
icebp
mov
pop
mov
mov
mov
or
or
in
adc
inc
mov
sti
aam
sub
popf
mov
sub
in
xchg
sub
sub
sbb
and
xor
mov
mov
pop
aaa
cltd
nop
mov
inc
push
pop
push
mov
imul
mov
sub
test
mov
mov
mull
add
dec
mov
gs
sub
cmc
pop
pusha
mov
push
ret
es
scas
and
cmp
mov
mov
and
movsl
fdivrp
dec
add
bound
pop
jo
sub
add
outsb
cmp
icebp
sub
mov
jecxz
pop
mov
loope
fmul
xor
test
imul
or
cld
mov
lea
add
xchg
pop
data16
aad
mov
lcall
mov
mov
mov
pusha
or
xchg
movsl
sub
mov
xorb
cli
mov
mov
inc
cwtl
inc
push
or
hlt
sub
jno
cmp
sbb
cmp
push
sbb
pop
pusha
outsb
into
add
push
shll
sub
hlt
lea
sub
mov
clc
inc
dec
mov
push
icebp
ret
sarl
xor
icebp
jbe
jno
iret
push
add
aam
mov
cmp
mov
nop
leave
sbbl
lock
mov
sbb
sub
pop
icebp
sbb
cli
sar
pop
sub
popf
jg
pop
loop
cmp
xor
sub
pop
add
loope
div
repz
das
loopne
enter
icebp
add
cmpb
mov
adc
stc
js
sysexit
test
add
xchg
insl
in
div
xchg
pop
jl
mov
cwtl
inc
xor
xchg
push
sub
mov
divb
mov
mov
loopne
insb
je
cli
dec
xor
repz
stos
and
adc
pushf
popa
hlt
mov
lahf
bound
jo
lret
shl
lock
pop
out
cwtl
andl
gs
push
bnd
sub
dec
push
aam
and
sub
and
arpl
int3
testb
xchg
icebp
testb
add
and
insl
out
push
aad
test
lea
cmp
inc
lods
lahf
mov
or
jecxz
lcall
push
cwtl
sub
pop
inc
andl
xchg
dec
push
pop
or
shr
and
lods
loop
sbb
loop
data16
daa
xor
idivl
imul
mov
call
ret
mov
mov
add
push
je
inc
jno
and
in
pop
out
icebp
pop
mov
stos
lret
hlt
jno
in
scas
or
outsb
lock
dec
push
jns,pn
pushf
movsl
xor
and
mov
lret
test
bound
cmp
jmp
xor
icebp
pusha
int3
and
pop
lods
out
out
lcall
shr
cmpsl
jno
inc
icebp
in
inc
pop
shlb
sub
ss
rcrl
addl
iret
jl
xor
xor
mov
in
jnp
or
mov
or
mov
test
and
cltd
loopne
mov
mov
and
jle
mov
pop
movsl
div
cmpsw
mov
insb
lds
orl
popf
icebp
negb
out
std
push
sbb
cmp
scas
test
mov
daa
mov
pushf
adc
xchg
jne
bound
jp
aam
cmp
sub
mov
lea
jbe
mov
stc
out
add
add
push
icebp
dec
loopne
xchg
xchg
sub
dec
repz
pop
out
ret
mov
lock
push
je
sub
leave
je
je
inc
sarl
je
stc
outsl
in
gs
je
loope
xchg
adc
je
pop
mov
je
xor
cmp
icebp
filds
jne
call
rcll
sub
sbb
leave
or
or
cmp
je
and
je
and
je
int3
test
call
dec
jge
call
jp
jo
jmp
call
pause
cmp
xchg
inc
out
sub
push
cmp
popf
xor
out
sub
out
jns
cmp
fcomip
out
aad
out
lret
mov
out
rorl
sub
mov
out
lahf
xchg
inc
push
out
test
mov
jns
lods
pop
mov
rcll
les
mov
cmpsl
adc
adc
inc
lds
movsb
jecxz
nop
xchg
addr16
add
icebp
xor
sub
imul
cmpsb
enter
lock
popa
jno
push
lods
ret
sub
scas
addr16
mov
sahf
inc
fs
jne
mov
mov
pop
imul
adc
sti
mov
cld
cmp
shll
sbb
jo
pushf
movsl
clc
cmpsl
hlt
fcompl
shl
loopne
cmc
std
add
mov
iret
dec
xchg
bound
ss
push
js
dec
push
sarl
and
mov
popa
leave
pop
and
hlt
insl
lcall
enter
xchg
in
clc
cwtl
xchg
lods
cmpsl
sbb
mov
in
test
push
das
and
and
fstps
mov
lods
lea
popa
rol
loope
lfs
pushf
fs
divl
jecxz
icebp
aam
push
notl
test
testl
mov
popa
mov
sbbb
fldcw
add
movsl
adc
push
xchg
mov
mov
mov
adc
fs
movsl
icebp
sub
push
lods
je
pop
push
daa
movsl
xchg
loop
or
imul
test
in
lret
cmpsl
icebp
jo
in
pop
and
cmp
xchg
icebp
mov
mov
stc
popa
adc
lock
ss
repz
shlb
aas
into
xchg
mov
sbbl
test
and
data16
out
andl
lods
mov
lret
sub
xchg
sahf
lods
cmc
mov
inc
fs
or
cmpsb
and
out
mov
dec
decb
cmpsl
dec
sub
int
ret
xrelease
pop
sub
jecxz
adc
sub
daa
fs
mov
or
rolb
xchg
and
fbld
ja
mov
shll
rcll
sub
dec
xor
sahf
int3
jp
mov
sub
mov
lea
sub
andl
jmp
js
in
sbb
cmpsl
je
movsb
cmpsl
xor
repnz
repz
sahf
sarl
test
mov
imul
pop
xor
div
test
push
and
ret
aaa
aad
xor
pop
cmp
push
sbb
push
push
test
sub
mov
jns
pop
add
sbb
jae
push
mov
mov
jns
adc
outsb
fidivl
sahf
aam
dec
cwtl
or
mov
ss
cwtl
push
inc
pop
mov
lahf
pop
lock
inc
popf
shl
dec
mov
and
lods
lahf
js
cmc
or
imul
bound
jne
pop
dec
push
dec
repz
mov
hlt
and
cmp
repz
and
movsl
repnz
outsl
pop
sub
imul
lret
inc
out
lock
mov
mov
gs
jmp
int3
sahf
icebp
call
into
xor
in
ja
repz
xchg
cmpsb
incb
xchg
jo
and
mov
xor
pop
ss
mov
jo
sbb
mov
mov
shl
ror
repz
push
dec
sbb
mov
dec
dec
imul
dec
mov
lock
mov
jno
adc
lea
and
push
mov
mov
xor
aas
in
jno
dec
sbb
push
fistps
mov
dec
aaa
sbb
dec
mov
in
leave
sahf
mov
fsts
insl
daa
mov
out
test
and
and
shl
xor
jno
add
icebp
sub
xchg
movsb
xchg
std
hlt
ss
mov
es
jle
jl
mov
mov
jl
mov
lret
jge
aas
fstpl
adc
xchg
popa
popa
jecxz
aaa
xchg
cli
push
fstpl
mov
adcb
lock
in
cmc
repz
push
test
movsl
mov
mov
bound
clc
and
inc
loope
xor
leave
mov
repz
xlat
jmp
xchg
stos
cli
push
insl
adc
lods
push
cmp
popf
pop
idiv
push
idivl
cmp
repz
imul
jno
lahf
out
repz
xchg
popa
testl
cmp
sbb
xor
je
sub
pop
pop
dec
inc
inc
movsl
and
testl
negl
movd
jns
cmp
mov
pop
mov
rcl
sarl
movsl
xor
inc
out
repz
hlt
fdivrl
in
push
iret
shlb
popa
adc
hlt
or
mov
and
mov
push
dec
sbbl
push
lds
rcl
in
call
dec
xchg
inc
cmp
cmp
jnp
jno
cmp
cmp
je
push
pop
cmc
adc
je
je
inc
aas
jno
daa
jno
je
sub
or
sbb
je
je
sub
fisttpll
int3
pop
ljmp
mov
incl
jp
inc
xor
aam
push
cmp
cltd
stos
sahf
bound
pop
sub
jo
in
mov
xchg
int3
xchg
mov
adc
cmp
shlb
aas
out
lock
sub
inc
mov
sbb
mov
push
dec
jmp
cmpsb
and
inc
sbb
push
test
cmp
pop
jnp
adc
cltd
std
das
shll
sub
addr16
jb
data16
dec
fdiv
push
and
xor
iret
rclb
stc
push
nop
stc
or
sbb
ja
cmp
and
addr16
jmp
aas
jns
add
mov
jns
das
hlt
loope
cwtl
add
out
shlb
push
or
or
sbb
cltd
mov
mov
push
aad
jns
in
lea
bound
or
add
in
lret
imul
mov
sub
pushf
dec
mov
cwtl
pop
xor
cmovbe
clc
sti
mov
xor
stc
push
push
clc
call
pushf
xlat
sub
repnz
jecxz
xor
xor
addr16
push
jmp
imul
cs
jno
imul
adc
das
cmp
in
mov
jecxz
into
cmp
negb
xchg
jno
shll
sahf
sub
inc
mov
mov
inc
popf
cmpsl
fsts
mov
jle
sarl
jae
stc
loope
into
leave
ficomps
mov
fld
aas
stc
fsts
popf
ljmp
aam
iret
xchg
lds
aam
mov
push
movsb
aam
in
popf
sbb
loope
mov
mov
mov
bound
aad
mov
enter
mov
test
mov
mulb
andb
mov
imul
notl
mov
stos
imul
dec
cmpsb
call
mov
nop
int
pop
rcll
pop
test
addr16
jno
jns
int3
arpl
insl
mov
fsts
mov
test
movsl
mov
jb
xchg
and
pop
aam
test
pop
insb
cmp
push
aaa
lods
dec
mov
lods
bound
cmp
and
or
sub
push
pop
pop
sub
pop
mov
add
add
mov
fdivl
cmp
jb
and
shlb
cmp
mov
add
fdivl
stos
adc
mov
cmp
xor
jl
sbb
or
cli
ss
xchg
loope
ss
ret
ss
cmp
ss
sub
cmp
dec
aaa
xchg
xchg
pop
aaa
push
jl
mov
push
mov
shlb
out
cli
xor
xchg
loope
xor
ss
xchg
xor
xor
xorb
xor
int3
xor
jp
jb
fs
xor
xor
sbb
xchg
xor
xor
xor
xor
xchg
loope
xor
xor
xor
xor
push
movsb
xor
pusha
xor
xchg
loope
xor
xor
xor
xor
sbb
pop
or
add
or
and
cs
loope
cmp
aaa
out
aaa
fidivs
aam
xchg
pop
push
int3
aaa
ret
aaa
adc
cmp
push
and
xor
push
jo
repz
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
outsl
arpl
jae
xor
js
add
add
jb
insl
jo
inc
sub
imul
gs
push
add
gs
outsl
outsl
insb
push
outsb
popa
jo
push
fstpt
push
add
je
jns
cmpb
inc
arpl
jns
dec
aad
mov
inc
fs
add
add
popa
fs
imul
add
mov
or
int3
sbb
adcb
or
cli
es
pop
hlt
or
push
jb
negl
insl
ret
jno
popa
inc
jb
sub
fwait
add
gs
dec
outsl
outsb
or
xchg
add
imul
lods
jne
ret
add
les
push
je
popa
insb
inc
insb
call
lods
andb
jne
sbb
add
outsb
push
mov
push
insb
jo
repz
sbb
outsl
ja
add
xchg
in
jmp
push
mov
xor
xlat
iret
out
clc
fadds
inc
jne
arpl
outsb
xchg
xor
imul
insl
popa
push
pop
shll
gs
sub
int
aaa
pushf
sbb
dec
xor
inc
je
jnp
pop
jne
mov
inc
jge
mov
insl
mov
inc
rolb
inc
jbe
jo
jo
fwait
inc
dec
add
addr16
mov
sbb
pusha
dec
mov
pop
jb
xchg
xlat
stc
push
test
sub
push
outsb
addr16
dec
bound
enter
xor
into
jae
inc
push
dec
inc
dec
and
push
out
mov
push
push
add
dec
dec
jecxz
add
notl
shlb
inc
outsl
ja
sbb
add
cmp
aam
inc
popa
scas
push
push
insl
push
outsl
or
cmp
jae
outsb
xor
add
jecxz
xor
fs
inc
popa
rol
fisubl
add
rolb
jne
xchg
setb
xchg
popl
rolb
dec
add
inc
cmp
ror
xchg
push
push
xchg
and
add
lods
shl
inc
add
outsl
xlat
jb
inc
ljmp
pop
pop
movb
lret
imul
or
inc
dec
fimull
add
cwtl
mov
adc
add
gs
pop
gs
repnz
mov
aam
pop
push
push
iret
jmp
outsl
cmc
rolb
leave
out
movsl
loope
imul
lcall
fisttpl
inc
inc
push
inc
push
dec
pop
add
sub
frstor
push
dec
lds
pop
push
addb
mov
push
dec
add
push
mov
inc
mov
xchg
sbb
add
jo
dec
add
aas
aas
xor
inc
pop
or
sbb
pop
jo
push
in
je
xchg
daa
addr16
jge
jo
ss
in
lret
dec
push
push
inc
push
or
add
and
or
add
clc
xor
push
push
cmpsb
mov
loopne
jne
loop
push
lods
mov
add
sbb
roll
rol
inc
pop
add
iret
add
int3
int3
int
add
adc
int3
or
in
icebp
add
add
mov
and
pusha
cmp
push
or
xor
xor
lret
cmpsl
add
cmp
lds
push
loope
je
loop
rorb
push
pop
loopne
repnz
mov
jle
inc
test
inc
mov
test
cmpsl
mov
cli
mov
movsl
mov
out
test
push
fsts
inc
mov
mov
shll
stos
mov
sbb
movsl
out
mov
jnp
lods
loopne
mov
ficompl
lea
sub
cmpsb
sarb
or
rol
filds
push
ret
ret
xor
sbb
xor
loop
mov
xor
popf
push
in
jmp
mov
mov
and
into
int
out
inc
mov
sub
loopne
or
xchg
andb
lret
sbb
movsb
movb
mov
sub
hlt
cmc
sub
dec
gs
push
add
jbe
bound
out
sub
ret
inc
sub
loopne
add
outsb
sub
mov
divl
pushf
sbb
inc
add
push
and
push
jmp
flds
cmpsl
dec
imul
icebp
cltd
mov
pop
enter
dec
mov
repz
mov
jno
jae
idivl
scas
and
and
andb
stos
sub
les
shlb
fists
sarl
add
stos
cltd
out
data16
scas
dec
in
sub
mov
das
mov
lock
jmp
add
mov
pop
lods
andb
and
inc
pop
pop
lods
andb
loopne
iret
out
sub
adc
pop
cwtl
or
xor
xlat
test
scas
jp
repz
into
test
cmp
fsubrs
or
aam
jnp
sbb
std
cld
stc
sub
xor
jmp
in
or
pop
xor
jmp
jmp
jecxz
sub
in
xchg
add
jecxz
dec
push
lret
adc
add
mov
lret
xor
shll
ljmp
cmpsb
mov
adc
sub
out
icebp
int3
pop
jecxz
jmp
and
and
loope
call
fcmovne
ror
out
ret
dec
andb
mov
sub
popf
xchg
lods
int
lock
lret
popa
in
mov
and
mov
je
pop
ret
mov
arpl
mov
sbb
mov
and
lods
lea
pop
and
sub
jecxz
sbb
pop
add
out
lcall
mov
loop
test
mov
test
pop
jecxz
sbb
cmpsl
js
mov
mov
andb
mov
push
xchg
add
mov
xchg
lret
imul
jno
leave
test
fsubrl
jg
and
aad
fsubrs
es
xchg
fs
mov
mov
xchg
bound
cs
pop
xchg
idivl
push
jns
stos
pop
stos
mov
cmp
jae
test
iret
repz
movsb
mov
jae
cwtl
movsl
pop
cmpsb
loopne
mov
xchg
sbb
cmpb
icebp
add
push
in
add
pop
and
movsb
iret
notl
lods
out
rcr
sar
andb
idiv
int
enter
xchg
lcall
rcl
cli
mov
mov
cmp
ja
or
stos
jge
push
jae
in
push
js
ror
mov
rcl
in
sub
xor
out
push
aad
mov
push
or
out
int3
push
js
rcl
int
test
mov
in
out
inc
cmc
mov
xchg
ret
mov
cmpsl
std
add
mov
int3
icebp
lcall
subb
mov
jmp
jecxz
jne
out
and
test
jmp
notl
icebp
cld
xchg
jae
lds
inc
mov
int
leave
ror
into
mov
add
jno
out
mov
mov
add
pop
xchg
add
add
mov
xlat
xchg
jno
jnp
inc
xchg
push
xchg
cmp
or
xchg
jnp
jge
inc
xchg
dec
xchg
pop
xchg
mov
sti
add
add
mov
xchg
aad
es
sub
sbb
std
mov
mov
jo
mov
aam
jne
gs
mov
imul
cmp
pop
rcl
enter
leave
repnz
rol
mov
fcomps
pushf
ret
mov
rorb
sub
pusha
leave
aad
rcrl
ret
xchg
into
int3
cwtl
pop
xchg
add
nop
shrb
add
fwait
std
in
ret
iret
aad
add
enter
add
sar
ror
mov
xchg
jmp
das
sti
cwtl
std
out
out
cwtl
sti
test
mov
stos
mov
test
out
mov
stos
mov
xchg
xchg
lds
into
shll
arpl
nop
incb
jo
pop
xchg
push
add
icebp
ror
rol
int3
and
in
hlt
repz
adc
iret
mov
loopne
js
lods
repnz
int
in
xchg
mov
aad
xor
enter
mov
std
std
aam
int
mov
mov
rorb
sarb
ljmp
das
in
call
fsubs
mov
rorl
and
iret
adc
rcrl
or
stc
icebp
in
out
repz
in
push
sub
xlat
enter
or
ror
rcl
cmc
rol
pop
clc
sbb
out
aad
aam
inc
xor
fdiv
fcom
int3
fidivl
pop
int3
xchg
lea
out
repnz
lock
in
aam
icebp
xlat
ss
sti
mov
not
cmc
ror
in
sarl
push
jl
repnz
xlat
shr
rol
mov
pop
mov
ljmp
insb
cmp
xlat
shrb
fstpl
iret
mov
pop
cmpsl
and
or
jo
inc
loopne
loopne
out
add
icebp
cmc
repz
enter
loop
mov
dec
lea
xor
aam
loopne
loopne
icebp
iret
popf
loope
jle
jle
insl
out
mov
sbb
in
into
add
aad
ror
add
xlat
repnz
ret
fidivs
pop
sbb
adcl
or
hlt
rol
shl
call
out
aad
pop
and
aam
out
pop
dec
cli
add
loopne
les
and
push
fsubs
or
test
notb
fcoms
fcmovnb
rcr
jae
cmp
enter
negb
xchg
rcrb
fmul
icebp
repnz
ret
pop
es
sbb
shlb
mov
mov
cmpsb
pop
outsb
jnp
test
mov
pop
add
xor
popa
insb
or
test
aad
or
xor
fidivrl
cltd
popa
sbb
mov
mov
aam
cmpsl
jbe
or
in
out
out
in
mov
fsub
loop
popf
movb
pop
cwtl
xor
cmc
fsubs
js
cmpsl
les
fisttps
push
in
repnz
jb
std
std
std
cmp
repnz
in
cmc
mov
mov
inc
std
mov
ljmp
stos
outsl
add
pushf
jbe
jne
sbb
dec
addr16
mov
xchg
mov
mov
aam
aad
nop
loop
jne
lcall
push
push
or
mov
enter
add
pop
insb
mov
loop
repz
icebp
call
fildl
int
cmpsb
hlt
call
pop
out
sbb
popf
ret
pop
pop
scas
enter
es
push
inc
out
roll
xchg
inc
push
scas
or
aam
int
pop
dec
jno
xchg
sub
add
mov
repnz
clc
loopne
in
call
dec
fildll
int3
add
out
cmc
loopne
loopne
in
jo
mov
inc
out
outsb
sbb
xchg
movsl
mov
xchg
add
in
xchg
xchg
mov
inc
add
add
mov
out
nop
mov
jecxz
nop
xchg
xchg
nop
cltd
fcoml
in
adc
pusha
mov
loopne
lea
cmp
lret
std
lsl
jecxz
into
in
mov
call
adc
or
cmpsl
cmp
out
out
mul
mov
add
sahf
push
outsb
inc
pop
mov
notl
push
pop
repz
pop
subl
rorl
inc
ret
fs
rclb
divl
test
addr16
pop
bound
xlat
ret
mov
ljmp
dec
mov
shrb
xor
enter
dec
repnz
mov
sub
in
sbb
rorl
out
cmp
stos
lea
mov
jecxz
mov
push
mov
rol
sub
repnz
sti
xchg
cmp
fcomps
xor
xchg
mov
sub
test
mov
sarb
xor
lret
mov
outsb
mull
iret
mov
sahf
mov
mov
fs
lret
rcll
xchg
ljmp
pop
mov
out
call
sub
rcr
mov
pop
shrb
std
mov
dec
or
outsb
std
xchg
iret
test
xchg
rcl
mov
fwait
div
pop
into
sti
stc
leave
outsb
push
movsl
jbe
mov
repnz
lret
cwtl
out
push
enter
loopne
push
je
push
loop
in
rcrb
adc
ret
insl
mov
pxor
fstpl
insl
out
jae
sub
mov
sbb
mov
popf
int3
jbe
aad
roll
daa
sbb
rol
adc
ss
mov
add
add
nop
inc
imul
add
adc
push
std
addr16
pop
or
add
roll
jb
les
mov
xor
ret
push
sar
or
mov
push
and
sbb
enter
jbe
in
daa
mov
fcomip
jae
stos
adc
out
mov
mov
dec
dec
mul
dec
loopne
cmp
fmulp
int3
cmc
sub
adc
pop
inc
pushf
mov
jb
jp
add
adc
sbb
or
ret
mov
or
push
push
push
movsl
enter
rcl
xorl
les
sbb
ret
fisubrl
repz
popa
sbb
sbb
push
mov
push
jb
out
shrl
inc
push
je
add
jb
gs
arpl
jno
cmp
mov
sbb
jno
icebp
gs
xchg
mov
out
out
in
jne
adc
adc
aas
pusha
add
outsl
popa
imul
mov
and
inc
mov
sti
incl
add
or
call
pusha
mov
mov
popa
mov
adc
dec
pushl
mov
popl
add
jmp
sub
inc
mov
cmpsb
push
ret
nop
nop
test
je
add
jmp
sub
lret
dec
inc
and
ljmp
shr
in
imul
add
add
stc
test
add
push
push
push
or
fwait
mov
inc
dec
popa
mov
mov
addb
add
adc
sarl
popa
push
ret
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
nop
add
test
add
jno
add
addb
addb
add
add
add
cwtl
add
add
add
add
add
add
add
addb
add
add
add
fadds
add
test
add
pushf
add
add
add
add
add
add
add
add
or
add
add
addb
incl
add
add
jno
push
add
es
cmpsl
ss
add
pop
adc
aaa
sub
fildl
add
pop
dec
add
dec
cmp
jecxz
push
add
ja
add
sbb
add
pop
inc
add
inc
add
pop
add
popf
pop
pop
add
and
add
outsl
push
add
and
add
fs
add
outsb
dec
add
jbe
add
insb
inc
add
dec
add
sbbb
mov
mov
dec
add
jo
call
jne
fmull
test
jmp
cltd
add
mov
add
mov
add
mov
sub
add
add
fisttps
add
push
sub
call
add
ret
xor
add
inc
push
add
dec
push
add
push
sub
cmp
add
cmp
add
dec
adc
ret
add
inc
add
sarb
add
fisttps
add
inc
or
fmull
add
xor
add
arpl
add
sub
out
add
loope
add
stos
arpl
add
pop
add
sub
add
push
adc
add
push
add
outsb
add
clc
add
mov
add
lcall
add
jb
add
add
ret
push
add
imulb
add
pop
add
out
add
ret
je
add
push
add
jle
add
mov
add
addl
decl
add
xchg
call
add
call
pop
or
lcall
add
add
notb
add
andl
leave
cltd
dec
add
stos
add
icebp
sahf
add
leave
xchg
add
mov
add
cwtl
add
ljmp
add
les
add
cmpsl
sub
jmp
add
rcrb
add
and
jae
add
aam
or
xchg
jge
add
xlat
pop
add
adc
lahf
cwtl
add
ja
inc
add
data16
rcrb
add
or
push
jle
add
xor
sub
das
add
addb
sub
mov
add
add
push
add
dec
mov
mov
add
or
add
add
add
push
xor
add
add
add
add
add
add
jns
add
jno
add
outsl
add
add
add
arpl
add
rorb
mov
add
pop
add
add
add
test
add
lret
inc
add
mov
add
cltd
push
add
add
pop
sub
adc
add
imul
push
add
pop
add
mov
add
xchg
add
out
scas
add
movsb
add
movsb
insb
add
mov
add
lret
addl
ret
add
nop
add
jbe
add
icebp
popf
add
cld
movsl
add
jno
add
lret
xchg
add
xchg
data16
xchg
adc
inc
add
outsl
dec
add
addl
xorb
addr16
add
xchg
add
add
stos
mov
test
xor
add
push
add
xchg
lea
or
add
mov
add
fwait
mov
sbb
scas
add
cmc
add
pushf
roll
int3
incb
add
out
add
mov
aam
add
fildl
or
mov
incl
sbb
in
add
leave
repz
sar
add
add
std
add
push
add
jge
add
mov
add
cld
add
repz
popa
sti
add
arpl
add
push
jmp
add
push
mov
add
cmp
add
mov
add
daa
mov
add
jo
add
imul
add
add
incb
add
popa
pop
dec
dec
dec
dec
cmp
add
add
pop
dec
sbb
sbb
incb
add
add
cmp
xor
ss
incb
add
inc
cmp
sbb
pop
sbb
xor
xor
sbb
popa
pop
xor
adc
outsl
mov
adc
ss
add
ja
adc
outsl
lcall
adc
incb
add
xor
aaa
inc
inc
inc
pop
movsb
movsb
mov
aaa
xor
jb
dec
adc
add
aaa
inc
inc
dec
dec
push
xchg
mov
inc
aas
cmp
jg
dec
sbb
ja
aas
inc
dec
push
push
push
outsb
popf
popf
lahf
lahf
xchg
push
dec
inc
inc
pop
mov
dec
add
add
add
add
ja
inc
dec
push
push
pop
pop
imul
push
orb
bound
add
add
add
ja
dec
push
pop
pop
pop
adcb
mov
mov
add
add
add
add
dec
pop
pop
fwait
mov
mov
mov
push
sbbb
cmpb
add
add
push
mov
loopne
out
outsl
jbe
imul
lcall
add
add
mov
fabs
out
fstp
lea
popf
popf
mov
pop
add
and
push
or
out
jecxz
shll
jge
imul
and
sub
sbb
or
aad
loopne
call
jl
je
pushf
popf
popf
mov
add
and
sub
sbb
out
fucom
lea
nop
popf
mov
add
and
sub
and
or
out
fstp
mov
jns
test
popf
mov
add
cmp
sub
and
or
call
cmpsl
mov
jae
add
add
and
daa
sub
sbb
push
rcr
mov
rol
aad
mov
mov
pop
imul
add
add
and
sub
es
or
mov
lds
gs
add
add
add
add
sub
and
jmp
lret
int
mov
mov
pushf
fs
add
repz
add
idiv
cld
ret
enter
rol
int3
fwait
test
add
add
add
add
repnz
jmp
sti
ror
int3
mov
mov
add
add
in
ljmp
lret
int
mov
rclb
add
in
out
ljmp
int
mov
xchg
add
in
out
jmp
cld
ret
enter
mov
add
repnz
ljmp
ret
int3
add
add
mov
in
in
ljmp
in
jmp
add
incl
clc
add
jmp
add
inc
add
incl
add
incl
add
incb
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
addb
jo
add
aas
rolb
jg
add
inc
add
jmp
add
jmp
add
jmp
add
push
add
push
ud0
clc
pop
incl
add
add
add
and
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
fadds
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
dec
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
push
add
add
je
add
add
jne
je
outsl
add
jo
add
je
add
add
insb
add
add
je
add
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
and
xor
sub
and
xor
xor
aaa
add
add
add
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jne
popa
add
arpl
insb
add
add
js
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
sub
and
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
ja
jne
popa
add
arpl
insb
add
add
js
add
add
push
add
add
jb
imul
je
add
jne
imul
add
xor
add
add
and
xor
sub
and
xor
xor
aaa
add
add
add
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
and
xor
sub
and
xor
xor
aaa
add
add
add
push
add
add
jo
add
imul
inc
add
imul
add
xor
add
add
and
xor
sub
and
xor
xor
aaa
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
pushf
sahf
add
lods
sahf
add
rcrb
add
add
add
add
add
add
decl
add
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
and
add
mov
mov
div
leave
dec
jmp
mov
mov
xchg
lret
movsb
icebp
mov
add
adc
add
or
add
pop
add
je
and
jl
sub
lods
xor
test
je
loopne
sbb
xor
lea
movsb
mov
call
cmp
jae
push
or
xor
inc
xor
mov
lea
mov
mov
call
sub
lea
add
mov
call
pop
sub
jae
and
call
mov
call
jne
pop
cmpsb
sub
inc
mov
sub
add
fcos
cmp
sub
add
movsb
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
inc
ret
add
flds
in
call
leave
call
out
jb
ret
sub
sbb
ret
add
lcall
pop
cmp
js
push
sahf
jo
add
and
add
xor
pop
ret
fistps
pop
push
movl
add
xchg
jle
push
mov
jbe
pop
sahf
addr16
inc
cmp
out
and
aaa
lahf
leave
imul
mov
or
sub
in
jmp
ds
pop
cmp
or
fwait
adc
push
xorl
add
in
pop
adc
push
andb
cld
add
cld
or
add
mov
mov
mov
add
lea
add
pop
nop
cmpl
je
mov
test
je
mov
add
cli
add
or
add
mov
popa
or
call
cmp
enter
sbb
loope
lock
push
sub
shll
call
or
jne
aaa
xor
add
bound
pop
jb
pop
dec
or
push
sub
and
jnp
xchg
push
sbb
pop
jne
add
test
loope
sub
lea
pop
arpl
push
incl
bound
sbb
fsubp
pop
push
fstpl
sbb
test
push
mov
pushf
arpl
push
sbb
stc
add
inc
or
dec
inc
mov
sbb
addl
test
add
sub
xor
push
mov
ret
js
sub
out
adc
pop
pop
pop
pop
ret
push
mov
add
imul
jmp
adc
test
add
push
call
sarb
add
jle
add
cs
rolb
je
push
mov
add
jne
aad
loopne
and
add
in
jno
add
jne
leave
fldl
xchg
add
or
or
mov
and
add
mov
jmp
cmpsb
cltd
stos
iret
or
into
call
mov
les
cmpb
incb
jmp
mov
movzwl
inc
test
cmpsb
sahf
xor
pop
push
fistpll
dec
cld
add
add
pop
adc
cmp
jge
mov
inc
movzbl
add
sub
mov
je
incb
add
jne
cmp
jne
shr
rol
xchg
mov
add
fcoml
add
mov
pop
pop
inc
adc
dec
mov
je
sbb
mov
sbb
shrb
jmp
push
and
in
add
pop
add
jbe
push
push
call
add
push
sbb
push
in
jns
dec
push
jne
out
mov
aaa
fiadds
sbb
sub
jge
cmpsb
shll
dec
or
sar
rep
loope
loopne
and
mov
stos
push
jnp
cli
and
shrl
dec
call
subl
ret
jne
hlt
aas
aam
nop
pop
cmpsb
leave
cmpsb
fistpl
add
inc
lock
push
push
cmp
xor
pop
mov
mov
sbb
enter
adc
iret
add
call
mov
dec
hlt
push
push
xchg
lods
inc
or
dec
mov
mov
push
call
in
call
mov
inc
je
aam
pop
adc
sub
dec
popl
call
sub
pop
cli
cmp
sub
stc
jmp
mov
add
cmp
or
loopne
sub
xor
pop
enter
or
inc
cmpsb
leave
inc
gs
mov
mov
mov
sbb
je
add
sub
inc
dec
insb
call
sahf
leave
lcall
and
push
push
push
call
inc
dec
push
cmpsb
imul
adc
lds
jbe
scas
jno
bound
je
jae
pushf
or
mov
pop
testb
xchg
std
test
lahf
call
xchg
movsl
dec
cwtl
xchg
cmp
ss
push
pop
jae
dec
jne
insb
out
aam
adc
sbb
cmpb
sub
push
adc
shlb
mov
test
repnz
cmp
push
xor
imulb
push
mov
lea
push
inc
or
les
push
repnz
pop
cwtl
test
inc
xchg
add
ljmp
test
pop
xlat
and
icebp
xor
jb
mov
push
mov
or
dec
dec
add
fstps
aad
ror
sbb
je
aaa
inc
inc
cmp
adc
jl
sbb
add
jmp
insl
cmc
rolb
add
and
or
faddl
add
orb
ja
jecxz
lret
xor
mov
mov
cmpsb
push
addr16
inc
jo
insb
imul
and
jb
jb
add
mov
jne
je
add
or
push
and
gs
ret
sub
and
je
bound
inc
mov
pop
mov
dec
pop
add
hlt
fs
mov
popa
insb
fs
sbb
add
sbb
jne
jno
add
xor
add
jae
popa
addr16
outsl
js
add
pop
and
sti
je
xchg
jns
ret
xchg
loope
pop
inc
out
in
in
imul
ljmp
imul
inc
xlat
add
fs
add
outsb
and
outsl
insb
jge
jl
jle
filds
jne
dec
and
rcr
iret
popa
test
jb
daa
jno
pop
dec
push
sbb
add
and
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
adc
add
faddl
add
les
add
pop
sahf
add
add
adc
push
sahf
add
push
sahf
add
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
or
add
add
add
pusha
mov
mov
cld
lods
xor
test
je
xor
lea
movsb
mov
call
jae
cmp
jae
push
push
push
xor
inc
xor
mov
lea
mov
mov
call
jae
lea
add
mov
call
jae
pop
pop
pop
sub
jae
mov
call
jmp
mov
call
adc
dec
jne
inc
call
mov
cmp
sbb
cmp
sbb
push
mov
sub
rep
pop
inc
inc
jmp
add
jne
xchg
lods
xchg
add
inc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
add
add
add
adc
add
adc
adc
add
add
add
push
sahf
add
and
add
add
add
add
add
add
pop
add
add
adc
add
sahf
add
add
add
ljmp
add
add
add
add
incl
pusha
add
aaa
pop
add
add
add
add
add
add
add
mov
add
incl
inc
add
aaa
cmp
add
and
add
add
add
add
add
add
incl
xor
add
xor
add
or
add
add
add
add
add
add
incl
adc
add
adc
add
pop
add
adc
add
add
add
in
add
add
add
or
add
mov
add
incl
adc
add
adc
add
pop
add
add
add
or
add
or
fwait
add
call
add
push
push
push
push
call
pop
sub
lea
mov
add
sub
cld
mov
mov
mov
add
lea
lods
stos
lods
stos
lods
stos
lods
stos
nop
cmpl
je
mov
test
je
mov
add
mov
add
rep
mov
lea
add
add
add
lea
push
call
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
mov
push
call
lea
test
jne
push
call
push
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
add
push
push
call
test
je
mov
mov
test
jne
lea
jmp
test
je
push
and
push
lea
push
lea
push
call
jmp
mov
add
inc
inc
push
push
lea
push
lea
push
call
lea
push
lea
push
push
push
call
push
call
mov
mov
cmpl
jne
mov
mov
mov
add
movb
add
sub
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
push
push
pushl
call
mov
add
pop
pop
pop
pop
ret
push
mov
add
push
push
push
call
pop
sub
mov
mov
add
push
call
mov
mov
mov
add
add
xor
add
je
push
mov
add
push
pushl
call
stos
pop
add
jmp
add
add
jne
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
mov
lods
test
je
add
mov
jmp
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
test
jne
test
je
push
push
mov
xor
mov
movzwl
mov
add
cmp
jge
mov
inc
movzbl
add
sub
mov
je
dec
mov
jne
mov
cmp
jne
shr
rol
xchg
sub
mov
add
add
add
inc
jmp
pop
pop
xor
add
je
cmp
je
call
pop
sub
lea
jmp
jmp
push
mov
mov
add
sub
pushw
push
push
call
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
mov
mov
movzwl
test
je
push
mov
mov
mov
add
mov
sar
rep
add
and
rep
mov
mov
add
xor
push
mov
sar
rep
add
and
rep
pop
mov
mov
add
mov
mov
sar
rep
add
and
rep
pop
add
dec
jne
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
xor
xor
add
je
mov
mov
add
jmp
pop
pop
pop
leave
ret
mov
movzwl
mov
push
push
push
movzwl
test
je
push
mov
mov
mov
mov
sub
mov
add
mov
sar
rep
add
and
rep
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
mov
mov
dec
mov
push
push
pushl
call
lea
push
pushl
pushl
call
mov
inc
je
xor
add
je
dec
mov
pushl
pushl
popl
popl
jmp
pop
push
mov
add
cmp
jne
add
jmp
mov
mov
sar
rep
add
and
rep
mov
add
shr
shl
sub
mov
xor
push
mov
sar
rep
add
and
rep
pop
pop
pop
pop
pop
add
dec
jne
xor
pop
pop
pop
leave
ret
pop
pop
pop
pop
xor
inc
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
mov
xor
cmp
jne
cmp
je
add
je
add
mov
add
mov
test
je
add
push
push
push
push
call
inc
jne
dec
pop
pop
pop
leave
ret
add
jmp
insl
jae
bound
add
in
add
push
push
push
call
pop
sub
mov
mov
xor
mov
xor
inc
inc
mov
pushl
call
mov
mov
test
jne
dec
jne
xor
dec
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
jne
mov
test
jne
mov
movl
mov
test
je
push
mov
test
je
and
push
jmp
mov
add
xor
mov
push
inc
inc
push
pushl
call
pop
test
je
mov
mov
add
add
jmp
xor
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
mov
mov
mov
sub
mov
xor
lods
test
je
cmp
je
inc
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
pop
pop
leave
ret
push
mov
add
push
push
push
call
pop
sub
mov
add
xor
mov
lea
add
mov
shr
shl
push
lea
push
push
push
push
call
mov
test
je
sub
mov
pop
lea
push
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
push
call
pop
sub
pushl
pushl
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
jo
insb
imul
and
jb
jb
inc
jo
insb
imul
and
jb
jne
je
add
and
outsl
arpl
jne
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
and
add
add
outsb
sbb
add
jne
gs
xor
dec
gs
popa
addr16
outsl
js
add
jo
imul
sbb
add
stc
sbb
add
inc
sbb
add
add
add
imul
gs
xor
add
imul
jae
inc
insb
outsl
jae
dec
popa
outsb
fs
add
outsb
push
jb
arpl
jae
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jb
jne
insb
push
jb
je
arpl
sbb
add
test
sbb
add
daa
sbb
adc
add
push
sbb
adc
