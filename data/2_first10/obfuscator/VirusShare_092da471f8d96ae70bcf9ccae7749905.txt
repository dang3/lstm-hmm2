das
call
in
add
imul
add
add
sub
cmp
mov
or
push
add
mov
mov
sub
cmp
add
mov
mov
imul
adc
sti
mov
cld
sbb
sub
sub
add
mov
or
sarb
rolb
leave
push
or
into
add
aas
neg
fcmove
push
sbb
push
testb
mov
int
or
lret
add
rolb
icebp
sub
lret
mov
or
rclb
mov
cmp
add
mov
mov
add
movb
xor
mov
out
mov
pop
push
mov
sub
push
add
lahf
xor
xchg
call
mov
mov
insl
aam
cmp
cmp
pop
or
outsl
mov
mov
adc
sub
test
ljmp
pop
jnp
xabort
mov
movzbl
mov
jbe
mov
sub
mov
adc
leave
fistpl
fwait
ret
mov
lods
mov
daa
sbb
sarl
push
pop
test
je
xor
in
lea
cmp
dec
add
imul
jnp
jbe
pop
jnp
hlt
lods
pop
mov
fildll
test
jo
imul
pop
imul
inc
push
jmp
ret
outsb
test
sbb
cld
cmp
sbb
jbe
enter
cmp
pop
lret
aaa
testl
cli
adc
adc
or
fisubl
ret
mov
dec
sarb
aaa
inc
sahf
pop
add
test
int
push
out
add
lods
adc
imull
imul
or
push
orl
mov
test
mov
adc
movsb
js
adc
mov
adcl
imul
into
cmp
gs
sbb
fcmovnu
mov
push
cmpsb
adc
add
test
or
mov
pop
stc
adc
sbb
cli
push
jmp
sbb
or
adc
fcmovnbe
pop
jnp
mov
mov
pop
adc
xor
or
or
fcmovnbe
push
loope
adc
mov
xor
xor
ss
mov
sbb
sbb
shr
sbb
add
dec
insl
mov
mov
daa
adc
imul
mov
push
out
ret
push
gs
movsb
sbb
out
sbb
sbb
outsb
push
sbb
pop
shr
ret
lret
and
or
repnz
cmp
fbstp
popa
rcrb
jbe
rcrb
pop
or
add
and
cmp
mov
shll
cs
lods
mov
mov
and
sbb
sub
pop
xor
popf
jnp
mov
das
add
push
add
rolb
add
fistpl
jb
or
imul
divb
add
lcall
notb
xlat
jo
jecxz
in
jae
out
add
mov
mov
fistl
test
pop
mov
pop
rclb
imul
adc
mov
in
adc
out
sbb
sbb
mov
push
and
mov
insl
xchg
mov
dec
shll
test
and
iret
clc
mov
stos
jnp
sbb
or
decb
fwait
jo
call
sti
test
push
fcmovnu
inc
dec
or
ret
jb
adc
cld
jecxz
jmp
negb
inc
insl
testl
jmp
fmuls
mov
sbb
add
mov
jecxz
mov
leave
ret
clc
call
mov
sub
mov
lret
pop
push
push
or
mov
pop
push
ficompl
gs
jae
jp
scas
lods
add
and
pop
je
xor
cmp
adc
mov
adc
or
mov
pop
cmp
fisttpll
mov
jno
sbb
cmp
int
sub
adc
mov
mov
jmp
cli
or
sbb
and
test
push
and
in
notl
imul
sbb
rorl
loope
xor
lret
shlb
inc
test
in
outsb
out
or
movl
xor
int
sbb
punpcklwd
clc
mov
jmp
pop
icebp
decb
mov
or
lahf
sbb
push
imul
sbb
adc
push
add
push
mov
stc
or
and
lret
lock
clc
xchg
imul
stos
add
push
rcr
stos
push
inc
sbb
clc
pop
mov
fsts
addb
mov
sbb
mov
repnz
dec
loopne
pusha
fcomps
outsl
pop
cs
adc
sti
popa
mov
sti
xor
sarb
jne
lods
popa
loopne
adc
je
les
jnp
mov
cmc
dec
arpl
loop
dec
pop
mov
mov
or
mov
add
mov
jecxz
pop
cmp
rol
sbbl
add
push
out
shrl
aas
or
clc
add
fcomps
mov
add
mov
push
aad
xchg
ljmp
inc
mov
sbb
mov
addl
clc
stos
add
xor
mulps
sbb
push
arpl
sub
test
adc
incb
ret
push
stos
stos
orl
negb
pop
imul
xor
cli
pop
mov
scas
or
push
scas
shl
movsl
ret
pop
push
mov
cli
pusha
mov
rcl
mov
into
pushf
add
rclb
xor
push
and
add
ret
loop
sbb
cmovp
and
mov
roll
cmp
push
andl
jo
leave
roll
fsubs
lock
adc
push
data16
rolb
jae
roll
inc
stos
pop
insl
pop
mov
loopne
xor
push
data16
pop
mov
adc
jo
shr
adc
pop
bound
sub
ret
adc
sub
lret
rorl
mov
adc
add
cltd
mov
testb
adc
or
pop
pop
pop
scas
leave
inc
lock
jp
jne
push
std
pop
xor
fistl
xor
or
insb
lods
insl
ret
mov
adc
push
daa
cmp
add
sti
cltd
adc
pop
test
hlt
and
inc
test
cmp
sbb
pop
mov
mov
ds
cmp
pushf
unpcklps
cmp
pop
lahf
pop
mov
push
icebp
pop
pop
xor
mov
adc
mov
emms
ret
shll
popf
lcall
mov
in
xlat
int3
push
hlt
jl
xchg
sbb
jns
insb
xchg
or
pop
adc
or
out
lods
sub
in
lcall
pop
dec
mov
sub
pop
popf
leave
push
roll
push
cmc
incl
or
jbe
inc
addr16
or
insb
xor
mov
pop
insb
test
outsb
mov
jge
enter
jge
test
pop
xor
clc
lcall
cmp
icebp
mov
add
lret
fcmovnbe
fiaddl
enter
repnz
inc
hlt
nop
enter
cmp
dec
adc
pusha
mov
stos
enter
lock
mov
nop
pop
adc
sbb
inc
inc
lock
push
pop
out
mov
push
xchg
push
inc
dec
add
cmp
adc
pop
xchg
iret
or
mov
insl
or
fbld
mov
aam
sub
sbb
call
lock
mov
das
lock
cmpsb
rolb
stc
sbb
fimull
cmp
jp
test
mov
shl
cmp
pop
stc
push
bound
sub
mov
rcl
xor
pop
mov
popa
mov
int
adc
adc
push
push
xor
xor
or
std
enter
adc
mov
mov
in
cmp
andl
cmp
jo
lahf
jbe
shrl
in
ret
inc
loopne
sarl
or
rclb
sub
into
loopne
shlb
adc
jl
cmp
sbb
pusha
ficoml
lret
sbb
add
roll
sbb
add
add
mov
adc
out
or
shl
cmpsb
sbb
or
pop
inc
xchg
or
mov
out
push
fldt
push
xchg
xchg
sbb
popa
add
rorb
stc
inc
lods
or
and
ds
pop
insl
sub
push
out
cs
scas
pop
es
enter
cmp
and
nop
ret
xor
push
ret
add
aam
cmp
and
les
or
add
fimull
jno
mov
fistpl
push
push
sub
enter
push
fildl
addb
leave
mov
cs
mov
push
outsb
int
and
leave
shll
mov
sbb
push
pop
js
push
stc
jb
mov
popa
push
pushf
pop
imul
mov
xor
mov
ret
add
and
shl
jne
jno
ljmp
setl
or
pop
roll
lret
aam
test
sbb
gs
or
rol
ds
xor
inc
stc
sbb
out
mov
push
pop
add
rorb
mov
jo
mov
add
mov
push
sub
mulb
inc
or
mov
jp
ror
add
lock
push
add
call
js
pusha
jo
jo
shlb
fwait
shrl
notl
cmp
popf
mov
push
xor
inc
and
push
xor
mov
imul
mov
hlt
cs
pop
jecxz
mov
ja
sub
or
jb
mov
scas
sub
push
fsubrl
sahf
cli
sbb
in
mov
push
push
cmp
xchg
inc
pop
sbb
push
jne
cwtl
push
mov
arpl
rolb
adc
lods
lods
pusha
ljmp
inc
lahf
mov
test
daa
inc
or
push
es
cmp
int
test
aam
xor
ljmp
jecxz
ds
cmp
push
pop
sbb
mov
fsubp
lock
mov
push
ljmp
sub
rcr
xchg
ret
push
pop
dec
ret
bound
es
pop
stos
shll
jg
ss
add
or
cli
lods
push
sbb
sub
push
fdivs
arpl
push
add
jo
xor
mov
js
add
scas
rolb
ret
test
call
imul
pop
xor
jo
inc
repnz
lret
arpl
je
icebp
aas
shll
js
push
adc
jl
jge
enter
mov
sub
sbb
xchg
repz
pop
jge
push
mov
xchg
xchg
lret
icebp
stos
add
pop
sbb
sub
in
adc
pusha
test
fimull
dec
fwait
add
cmpxchg
cmpsl
data16
xchg
cmp
xor
dec
pop
cltd
adc
or
xor
add
mov
das
repz
cmp
push
sahf
in
and
out
mov
shlb
cltd
mov
push
pop
mov
sub
enter
mov
roll
pop
mov
xor
jmp
and
cmpsb
inc
mov
push
icebp
rolb
aam
sbb
mov
mov
mov
or
cmp
xlat
adc
cmp
or
push
lret
subb
mov
and
jbe
mov
pop
dec
int3
int3
inc
mov
mov
or
imul
mov
or
cli
xchg
sahf
cmpsl
incl
push
push
push
push
jns
les
mov
test
mov
xchg
addl
movsl
xor
and
leave
xchg
in
pop
int
shlb
popf
or
sbb
fmuls
clc
out
bt
aad
push
push
mov
or
xor
fsubl
push
test
cmpsl
mov
outsl
mov
aas
lret
and
mov
dec
rcll
insl
mov
push
cmp
jle
jmp
push
push
mov
sub
lret
mov
xlat
adc
sbb
or
push
or
add
sbb
mov
push
scas
rcrb
mov
out
adc
push
clc
and
pop
repz
sbb
xor
imul
cmp
add
cmp
push
andb
add
xor
xchg
dec
inc
cmpsb
add
xchg
popa
cmp
rcll
mov
daa
rclb
enter
bound
and
push
sbb
and
ret
mov
jl
cld
push
push
arpl
or
outsl
imul
and
out
jle
aad
dec
mov
fstpl
lds
ret
inc
jne
sbb
xor
cmp
and
icebp
movsl
cld
cli
pop
lcall
adc
jmp
out
cmp
insl
jmp
add
daa
sub
idivb
je
mov
daa
loopne
adc
addr16
mov
sub
sbb
push
push
pop
pop
lock
or
cmp
push
jmp
test
push
repnz
aaa
push
sbb
or
or
add
xor
add
dec
cmp
out
call
ljmp
ja
loopne
orl
push
push
test
pusha
adc
pop
pop
incb
pusha
mov
lods
test
je
xchg
push
jge
enter
enter
xor
sub
aam
lods
add
cmp
daa
adc
nop
xor
lcall
loopne
adc
fwait
and
or
outsb
xor
adc
loop
mov
or
pop
adc
ficoml
sbb
lcall
sub
adc
mov
je
inc
shll
push
test
sbb
xchg
adc
push
movsb
repnz
or
scas
mov
out
inc
mov
inc
sbb
cmp
adc
jb
cltd
mov
inc
call
gs
insb
loopne
mov
and
ret
mov
add
mov
push
or
add
out
adc
mov
dec
add
inc
push
mov
push
fcmovnbe
pop
or
adc
add
rolb
mov
testb
rcrl
sbb
lock
shlb
add
ficompl
sbb
inc
insb
mov
rolb
inc
mull
xchg
loopne
jno
aas
das
cmp
xor
sbb
push
aas
push
mov
dec
sbb
inc
add
xor
inc
inc
loop
pop
mov
inc
sub
or
and
and
js
pop
jp
or
add
pop
dec
add
and
sub
push
shll
testb
sub
fidivrs
stos
push
sbb
dec
out
pusha
mov
cmp
xlat
roll
scas
sbb
subb
cmp
jnp
int
sub
jmp
push
popa
mov
jbe
sub
sbb
imul
push
and
js
sub
adc
aam
or
andl
mov
sbb
mov
push
aaa
bound
daa
sti
imul
mov
addl
xchg
inc
push
insl
xchg
sbb
or
in
daa
lea
mov
bound
dec
in
or
lcall
leave
xorb
pop
mov
mov
mov
cmc
sti
jecxz
inc
scas
fildl
cltd
ret
mov
jae
test
cmp
outsl
ljmp
pop
mov
mov
sub
push
aas
ljmp
mov
ret
or
mov
pop
add
mov
insb
pusha
or
add
mov
in
shl
les
mov
or
bound
jmp
push
fidivrs
xor
pop
ja
lret
sbb
das
pop
movsl
addb
jno
and
cli
test
test
scas
lcall
push
sub
mov
push
or
mov
sarb
int
pop
xchg
sub
shl
fs
and
rcll
push
pop
mov
subb
push
push
xchg
lcall
add
cs
add
out
mov
jb
clc
movb
mov
lock
rclb
dec
cmpl
adc
sbb
inc
push
in
test
xor
lcall
or
push
add
adc
insb
sbb
push
loope
out
mov
xor
int
jge
pop
loop
adcb
enter
mov
ljmp
add
jne
and
lret
lret
mov
push
pop
je
test
mov
mov
sbb
cmova
push
andb
test
ror
jle
test
ja
or
inc
mov
test
push
scas
insb
mov
psrlw
mov
sbb
or
cmp
mov
mov
sbb
pop
outsb
cmp
das
mov
or
adc
push
inc
xchg
inc
sbb
push
push
and
js
and
adc
in
les
dec
in
lods
pop
test
inc
data16
inc
andb
xchg
js
lds
jmp
lret
lret
sbb
gs
test
ret
scas
ds
adc
xor
and
xor
or
mov
icebp
divl
test
lcall
push
outsl
mov
orl
mov
mov
mov
adc
xchg
or
push
jnp
leave
ret
or
adc
lcall
cmp
jo
push
fs
xchg
fwait
test
pop
mov
mov
dec
aam
mov
les
add
or
pop
loopne
cmp
pop
rcr
addl
sub
inc
repnz
add
outsl
dec
popf
adc
addr16
jmp
movsb
scas
jb
addr16
insb
or
or
je
mov
cwtl
sub
movsb
add
std
ror
xor
call
xlat
xor
mov
mov
push
jge
cmp
adc
mov
mov
push
icebp
mov
sbb
cld
adc
test
xlat
or
stc
adc
cld
test
xchg
mov
roll
and
pop
pushf
pop
and
fisttpll
mov
hlt
sub
mov
mov
add
cmp
les
pushf
shlb
sub
out
push
leave
cmp
add
inc
sub
pop
pop
and
or
pusha
fisubrl
adc
rcrl
pushf
mov
cli
pop
popa
std
sysexit
fs
xor
push
push
push
stos
mulb
sub
subb
into
test
mov
aam
int3
or
xor
push
fisttpll
into
in
xor
inc
jecxz
arpl
cmp
xor
das
clc
insb
mov
adc
mov
sub
movsl
sbb
sub
iret
add
sarl
mov
push
and
inc
lods
testb
mov
loope
dec
icebp
push
push
push
mov
inc
cwtl
hlt
ret
test
pop
add
sbb
cltd
mov
cs
test
xchg
or
mov
ret
add
roll
mov
addb
xor
pop
xor
aad
cmp
gs
in
cmpsl
sbb
pop
shll
ror
xor
sbb
stos
or
loope
jg
pushf
pop
adc
xchg
or
rcl
addb
xor
mov
mov
adc
repz
in
xor
out
fsubl
jbe
mov
lret
jno
add
rolb
jb
fmuls
inc
sbb
or
push
out
sub
shrl
popf
jae
mov
xchg
sbb
out
jmp
cmp
or
mov
mov
mov
adc
push
sti
lods
mov
fdivl
incb
add
pop
loopne
jb
cs
pop
mov
popf
mov
sbb
pusha
iret
jo
add
into
sbb
clc
es
sbb
sub
test
jo
xor
lret
push
xor
adc
pushf
movsl
push
cmp
mov
adc
inc
mov
and
mov
push
mov
mov
pop
sub
mov
or
sub
pop
stos
push
push
rcl
ret
pop
mov
jmp
inc
imul
mov
in
orl
dec
jmp
dec
clc
push
nop
mov
stos
cld
fistpl
lea
sbb
lods
push
ret
mov
push
test
adc
push
mov
push
push
mov
inc
fsubrs
icebp
call
add
sbb
andb
xor
inc
add
and
addr16
data16
repnz
les
adc
icebp
aas
icebp
mov
pushf
cmc
insb
mov
and
or
mov
in
xor
pop
xchg
or
adc
add
sbb
into
xchg
shl
xchg
or
or
jbe
insl
cli
or
add
inc
rolb
repnz
add
pushf
xchg
shrl
and
xchg
call
xchg
mov
and
push
dec
lcall
cmp
dec
xor
js
xor
int3
add
adc
roll
movsb
mov
lods
ret
mov
push
or
loope
jno
xchg
jo
mov
dec
fs
in
test
movsb
dec
enter
or
push
sbb
sahf
xor
sbb
rcrl
shl
shll
shlb
push
adc
pusha
xorb
or
in
mov
xor
xor
scas
hlt
jmp
push
xor
push
push
xor
test
pop
icebp
push
push
mov
xor
push
adc
push
ds
ljmp
cmp
fisttpl
push
outsl
sbb
pop
ret
loop
add
loopne
data16
movsl
push
adcb
cld
gs
and
adc
sub
or
push
jmp
sbb
sbb
iret
lods
jno
add
mov
idivb
inc
dec
daa
mov
sub
lret
push
rcrb
call
or
cli
push
cmp
mov
pop
xor
xchg
popa
jg
dec
adc
add
imul
sahf
push
add
call
jle
fs
adc
repz
dec
shrb
xlat
lcall
xchg
jnp
stos
push
xor
fnsave
sbb
sbb
xor
lods
loope
or
rcrb
mov
mov
inc
or
sbb
push
sub
and
mov
mov
insb
ret
aad
lahf
into
sbb
push
inc
jecxz
psraw
fisubrs
lret
mov
test
pop
cmpsl
test
notb
cmpl
pop
and
sub
adc
push
dec
mov
ret
enter
jecxz
xor
mov
in
and
push
push
loop
inc
push
mov
push
in
push
add
aam
les
insb
xor
push
test
push
ja
mov
jne
push
lret
loopne
cmp
lret
outsl
je
xor
lret
xsha1
cmpsb
mov
push
aaa
xor
pusha
test
decb
dec
and
add
sahf
inc
rol
inc
shr
push
sub
adc
filds
dec
push
mov
xchg
test
mov
loope
in
lea
mov
mov
pop
in
sub
push
sub
lcall
pop
sub
add
in
adc
mov
add
xor
mov
into
push
add
xchg
jae
pop
scas
xchg
subl
pop
pop
stos
mov
imul
adc
mov
leave
push
lods
add
mov
ljmp
int3
nop
in
sarb
and
push
das
pop
pusha
enter
xor
inc
push
sbb
movsb
inc
jne
cmp
shll
sub
or
xchg
sbb
ror
dec
pop
jl
push
pop
aad
aam
lcall
push
rcr
icebp
sub
dec
stc
mov
sbb
pop
sub
mov
adc
jbe
add
call
sahf
xor
xchg
and
push
aam
inc
inc
sbb
movb
adc
or
movsb
cmp
es
insb
mov
pop
loopne
jo
push
xor
push
mov
and
pop
cmp
repz
cli
add
adc
and
xor
pop
push
cli
inc
xchg
jo
lcall
sub
mov
rcrl
and
push
imul
or
push
jp
test
cli
in
in
lret
arpl
outsl
fisubrs
ja
jb
inc
sbb
scas
pop
rclb
inc
mov
sub
out
sbb
sbb
inc
test
fs
ret
andl
test
fmul
xor
and
add
pop
inc
popa
sbb
inc
repnz
adc
xor
mov
ret
icebp
push
cwtl
adcl
enter
cwtl
aad
xchg
dec
add
roll
adc
popf
lahf
nop
push
sbb
sbb
sbb
fwait
or
mov
ret
push
and
or
call
mov
stos
jo
shrl
inc
imul
daa
jbe
ljmp
jne
ret
aam
in
add
mov
xchg
test
aaa
out
mov
roll
push
add
xchg
mov
subb
add
adc
inc
xor
xchg
dec
ljmp
add
push
mov
mov
add
faddl
rcll
rorb
mov
jl
jge
lods
add
nop
into
shrb
repnz
and
or
into
rcr
sbb
push
adc
add
fwait
test
push
or
testb
mov
cmp
out
hlt
and
pop
push
sbb
daa
xor
inc
ret
inc
pop
jge
movb
inc
sbb
out
pop
xlat
inc
pop
mov
repnz
das
aam
aas
add
jmp
dec
jne
das
mov
push
mov
stos
xchg
mov
mov
dec
test
adc
sar
inc
gs
sub
and
iret
inc
jno
pop
nop
in
stos
push
test
add
xchg
mov
cwtl
sahf
jne
enter
jecxz
and
jo
dec
ja
dec
rorl
ret
arpl
imul
cmp
orb
adc
push
lea
push
outsl
in
rolb
xlat
aad
xchg
pop
call
dec
cmp
xchg
out
pop
dec
xchg
push
shl
adc
pop
mov
mov
enter
lock
movsl
enter
sbb
xchg
test
dec
sub
ljmp
rorl
push
and
xchg
inc
mov
mov
or
push
das
cmp
inc
scas
clc
not
inc
sbb
shll
mov
push
add
out
dec
faddl
sub
xor
jb
push
push
dec
sub
insl
xchg
into
jge
mov
clc
dec
xor
dec
cmp
push
lods
clc
gs
adc
aad
mov
jo
pop
cmp
pop
cmp
xchg
sar
loop
inc
loope
inc
adc
mov
loope
mov
or
push
ss
test
or
pop
shl
loope
lcall
xchg
addl
mov
sub
int
ja
xorb
sbb
mov
pop
inc
mov
loope
add
mov
add
mov
lock
adc
clc
enter
add
ss
call
lret
ds
sub
enter
aad
sub
and
mov
adc
dec
lods
jo
add
add
adc
movsb
push
call
dec
dec
xchg
bound
xor
pop
xchg
push
add
cltd
sub
je
mov
cmp
sbb
nop
mov
pop
pop
or
sbb
jbe
cli
sbb
cli
test
push
pop
es
add
gs
int3
shlb
rcrb
addps
pop
pop
push
shll
sub
or
pop
call
mov
imul
add
mov
add
mov
addb
mov
insl
inc
repnz
mov
and
or
push
pop
clc
jno
cmc
sar
or
push
daa
inc
fwait
ret
ljmp
pop
lret
and
cmpsl
call
add
pushf
ss
ret
shlb
shlb
decb
or
pop
or
xor
lret
pop
jge
sub
ret
sbb
sub
or
and
sbb
pop
sub
add
fimull
jl
inc
cmp
sub
pop
rcl
adc
inc
sbb
and
shll
dec
sbb
rorb
rcll
add
dec
test
push
inc
cmpsl
push
cmovg
mov
cmp
mov
loopne
daa
cmp
dec
sahf
leave
icebp
shl
ljmp
popf
add
call
jecxz
or
xchg
or
stos
shl
lea
mov
push
xchg
xchg
jns
or
addl
call
nop
hlt
xor
jnp
or
pop
push
mov
xor
jbe
scas
sub
rorb
sbb
loopne
push
push
pop
rol
mov
mov
cmc
stos
dec
adc
push
inc
jmp
faddl
push
sbb
aam
icebp
mov
adc
in
inc
inc
lret
scas
sub
arpl
and
repnz
xchg
dec
push
in
sbbl
cmp
popa
gs
stc
mov
adc
adc
or
aad
imul
inc
or
call
add
pusha
pushl
adc
push
addr16
or
xlat
push
mov
or
in
icebp
add
fstps
pop
and
jae
ja
fadds
sahf
fiaddl
cmp
xchg
rcr
stos
xor
pushf
mov
add
lods
bound
pop
insb
outsb
jnp
or
adc
mov
shlb
cmc
call
xadd
mov
leave
fstpt
movsl
push
leave
into
add
sbb
push
dec
js
cmp
add
inc
mov
pop
cmpsb
inc
xor
lock
bound
loope
sbb
loopne
sbb
xchg
dec
aad
daa
lret
ljmp
push
jl
mov
insl
and
out
sbb
mov
xchg
xchg
sbb
pop
into
rorb
adc
add
sub
xor
test
xor
loop
cltd
test
xlat
lar
sbb
stos
add
rcrb
dec
inc
add
pop
ja
adc
clc
and
fwait
sarb
imulb
cmp
inc
lods
movsl
into
sbb
push
jnp
mov
arpl
push
jno
inc
jmp
cmpsl
cmpsb
jbe
data16
xchg
in
jne
mov
sub
or
sbb
and
clc
sub
sbbl
test
je
add
stc
sbb
sub
sub
shlb
inc
iret
out
nop
dec
add
mov
push
xor
mov
adc
mov
inc
clc
add
dec
xchg
ret
fs
in
cld
jge
inc
cltd
stos
int3
enter
mov
lods
outsb
lds
cmpl
add
bnd
mov
push
jno
add
sbb
rorl
cltd
dec
cwtl
dec
mov
nop
push
and
mov
aas
stc
pop
shrl
je
inc
or
pop
test
pop
mov
mov
lahf
add
test
orl
ror
orl
roll
xor
mov
sbb
ret
mov
in
pop
dec
add
out
or
sbb
sti
call
inc
dec
enter
cmp
add
pop
adcb
mov
mov
adc
mov
xchg
pop
sbb
test
xchg
jmp
pop
cli
add
outsl
sarb
sbb
add
cmp
pop
pop
hlt
xchg
push
lock
call
das
mov
inc
popa
jae
push
push
xlat
jbe
rorl
notb
cmp
adc
pop
lds
adc
xor
daa
add
mov
scas
mov
push
jo
notb
xchg
bsf
push
add
roll
rol
dec
and
ficoms
mov
and
mov
mov
sub
adc
test
ss
add
scas
mov
add
outsb
int
mov
arpl
mov
cs
sbb
repnz
inc
pop
cmp
ja
jecxz
xor
jne
xor
loope
cmp
mov
test
push
jne
or
xor
popa
rolb
testl
xchg
rclb
mov
dec
cmpsb
int3
in
sbb
mov
cmp
sbb
push
jbe
out
jne
xchg
call
adc
adc
sahf
add
sub
pop
fldt
aas
mov
push
or
mulb
mov
sub
sbb
xchg
test
inc
in
call
sbb
push
inc
data16
push
cmpsl
cs
add
pop
and
in
lock
shrl
scas
sbb
nop
jns
adc
inc
sarb
inc
cmp
aad
pop
inc
cmp
inc
enter
ljmp
mov
jo
push
ljmp
les
cmc
dec
mov
and
sbb
jp
push
sub
leave
cmpsl
lods
sub
or
lods
sbb
push
push
and
inc
lcall
imul
sbb
clc
sub
icebp
subl
jno
mov
inc
or
add
xchg
aam
das
test
mov
les
enter
pop
jo
addl
test
daa
leave
aam
push
sbb
xor
push
push
mov
pusha
push
push
jl
ljmp
shlb
pop
xor
jl
jae
and
xor
iret
inc
xchg
enter
or
sbb
jl
mov
enter
subb
xor
push
fsubrs
insl
pop
in
push
add
sub
loop
cmp
jmp
mov
pop
cs
adc
lret
xchg
dec
icebp
out
push
stos
mov
imul
adcl
mov
faddl
add
inc
adc
lea
mov
add
dec
nop
jecxz
stos
outsb
adc
rorl
xor
or
push
sbb
pop
push
or
pop
inc
ljmp
movb
dec
adc
inc
leave
push
das
xor
rorb
add
rol
xchg
jp
inc
cs
mov
add
sub
add
ret
repnz
icebp
movsl
cmp
or
pop
sub
daa
cli
fcoms
ljmp
pop
or
add
cmp
add
rolb
outsl
bound
push
repz
xor
push
subl
leave
adc
xchg
pop
add
into
cmp
cli
mov
jg
decb
inc
inc
mov
cmp
and
test
ret
sub
or
daa
inc
sbb
or
pop
xchg
push
dec
into
mov
or
jl
pop
dec
xchg
mov
arpl
push
mov
inc
popf
loope
ljmp
inc
jae
dec
aam
into
test
idivb
iret
add
adc
push
fdivrl
lods
xor
push
jmp
inc
lock
push
test
add
js
leave
scas
xchg
fcom
loope
sarl
mov
pop
inc
xor
test
or
inc
inc
das
roll
adc
add
push
or
mov
adc
xchg
sarl
mov
adc
test
iret
xor
push
xchg
and
pusha
fisttpl
mov
imul
sbb
xor
add
or
inc
loope
mov
sbb
pop
jae
ds
mov
sbb
push
pop
mov
dec
push
cmpsl
mov
xchg
mov
push
or
mov
cmp
mov
rorl
sub
repnz
pusha
pop
sbb
xchg
sub
add
inc
push
ret
xor
mov
loopne
jns
sbb
cmp
adc
add
ret
or
ret
cmp
inc
xor
in
mov
and
dec
jl
add
or
mov
dec
loopne
push
dec
cmp
push
jp
popf
add
adc
xchg
sbb
lds
and
lret
fwait
pop
mov
pop
leave
lock
mov
mov
ret
sbb
daa
xchg
sti
cmp
xchg
ror
aad
and
rorl
and
ds
push
int3
jnp,pn
or
jl
ljmp
jo
testb
mov
xchg
repnz
test
sti
jno
lea
inc
cmpl
mov
cmp
cmp
lock
adc
sahf
sbb
mov
ret
adc
mov
or
pop
sbb
adc
mov
out
lods
stos
mov
call
sbb
add
scas
cwtl
pop
cmp
lods
inc
dec
lret
sub
shll
in
adc
je
mov
mov
cmpsb
mov
leave
aam
push
sbb
push
mov
jns
imul
sub
in
fs
loopne
jle
shrl
scas
pop
mov
int
mov
xchg
imul
nop
sbb
ret
adc
ret
bound
sbb
or
inc
or
pop
sub
add
call
push
add
movb
mov
xchg
xchg
pop
stos
xchg
rolb
and
and
pop
push
mov
sbb
sbb
repnz
adc
popf
dec
mov
xor
shlb
out
adc
inc
push
jne
jp
pusha
out
int
mov
push
inc
push
test
inc
sub
adc
mov
push
fs
add
adc
sbb
or
sub
dec
sub
sbb
call
fs
call
jb
cmpsb
push
popa
add
push
push
and
xchg
or
mov
pusha
xchg
or
xchg
testb
cli
test
or
mov
mov
jnp
or
movb
or
xor
loop
or
icebp
xor
adcb
cmc
lahf
add
push
or
popf
idiv
dec
shrl
xor
push
movsl
jo
inc
aam
xchg
cmc
xchg
push
adc
sbb
adc
or
pop
xchg
add
imulb
add
push
rcrb
xor
jne
dec
jne
xchg
fcoms
push
adc
push
jp
sbb
shll
push
nop
jle
pop
mov
out
sub
xchg
data16
add
pop
out
es
loope
loopne
pop
mov
fildll
add
push
xchg
add
dec
push
sbb
stos
push
in
rol
pop
push
xchg
add
out
mov
pop
xchg
push
push
mov
sbb
adc
xor
xlat
rcl
push
adc
cmpsb
int3
mov
add
jnp
lcall
loope
shrl
dec
arpl
mov
push
inc
mov
sbb
loopne
cmp
adc
lods
or
mov
adc
test
xor
lods
ficoml
and
adc
sbb
sub
jle
add
test
xlat
cmp
aad
das
bound
icebp
pop
add
or
stc
and
pushf
or
mov
pop
push
xlat
dec
and
mov
mov
xchg
fnsave
pop
insl
pop
inc
sbb
leave
inc
and
mov
pusha
mov
rcrb
loopne
xor
mov
fimuls
imul
cmp
pop
lods
inc
fwait
push
adc
enter
cmpsb
ljmp
bound
daa
adc
mov
mov
inc
push
ja
scas
leave
push
aam
enter
pusha
sub
sar
mov
inc
jb
push
addl
cmp
xchg
or
push
aad
adc
dec
push
sbb
cmpsb
push
xchg
loopne
cmp
or
mov
xor
scas
les
jl
mov
add
and
or
mov
lock
sbb
sub
lcall
adc
or
jecxz
add
repnz
rcr
inc
sahf
pushf
or
orb
mov
xor
xchg
in
and
mov
or
adc
movsl
cwtl
push
jbe
scas
stos
and
xchg
cmp
mov
scas
into
addr16
jns
dec
lds
cltd
sub
dec
cwtl
ret
inc
addl
xor
rcll
loopne
repz
sbb
dec
loope
jge
popa
lock
xchg
pop
loop
xorb
cmc
mov
mov
js,pn
push
mov
mov
enter
lret
lret
inc
in
mull
dec
push
cmp
rorl
pop
xchg
or
cmova
ss
push
and
pop
or
jne
pop
inc
jge
cmp
xor
or
mov
movsl
sbb
ds
cs
add
fadds
jl
pop
mov
mov
orb
dec
push
inc
xor
mov
mov
inc
addr16
or
enter
xchg
mov
and
pushf
xchg
sbb
dec
fiaddl
es
sub
xchg
pop
ficomps
jae
mov
rorb
rcrb
lods
and
and
push
sub
sub
clc
test
fadds
adc
push
adc
fstps
aam
stos
cmp
shrl
push
in
scas
mov
push
scas
inc
int3
repz
mov
pop
mov
xchg
adc
push
shlb
push
and
pop
cmp
icebp
jne
push
push
push
ret
ljmp
clc
cmp
loopne
push
shlb
leave
test
out
mov
add
sub
cmpsb
fsubrs
mov
lret
xchg
jmp
sub
or
test
or
repnz
fs
add
aad
sbb
enter
sbbb
mov
aam
dec
jo
push
loopne
movsl
rcrb
jnp
pop
mov
jmp
mov
mov
rcrl
jne
dec
movsl
and
add
cmp
or
xchg
cmpsl
and
inc
cmp
cmc
add
sub
sbb
add
sub
inc
lods
aad
mov
mov
and
data16
scas
jp
adc
push
fwait
push
mov
roll
sub
xorl
jp
push
dec
push
insb
mov
fmuls
push
lods
js
lds
lds
push
jmp
cmp
test
enter
data16
push
inc
push
add
xor
pop
dec
sbb
ret
scas
or
mov
in
add
xchg
inc
mov
jecxz
pop
jb
adc
pop
inc
popa
jo
cs
inc
or
jmp
add
popa
int3
cltd
xchg
mov
push
shl
ss
sub
icebp
mov
push
push
inc
neg
xchg
in
xor
dec
pop
daa
push
mov
xchg
push
stc
shlb
push
xor
xor
or
xor
fisubs
jae
push
into
xor
rcrl
or
sarb
hlt
xchg
insl
mov
enter
or
test
test
or
sub
lods
leave
rorb
xor
and
jae
adc
dec
sbb
faddl
adc
loopne
xchg
fiaddl
sub
sub
add
push
mov
add
dec
and
pop
and
and
mov
int
pop
xchg
flds
mov
inc
scas
cwtl
daa
call
sub
sbb
push
cs
adc
pusha
sub
add
mov
sbb
add
push
push
and
sub
aam
jb
sahf
lods
adc
cmp
cmp
push
cmp
int3
add
or
dec
sub
sub
lret
add
push
cmp
add
cmp
rol
add
in
shll
xchg
xorl
outsl
nop/reserved
push
movsl
jo
and
addb
inc
mov
push
rcll
xor
lret
lcall
ret
push
or
mov
mov
push
push
popa
stos
inc
int
jo
add
jne
xchg
pop
insl
lret
or
adc
adc
sbb
imul
mov
je
mov
lahf
push
call
mov
adc
aam
mov
test
mov
es
add
sub
lar
in
and
jp
dec
lds
xchg
jge
cs
push
test
hlt
roll
mov
cltd
add
sbb
push
or
loopne
jbe
and
call
dec
cmp
push
xchg
andl
dec
xchg
dec
aam
mov
cli
sbb
repnz
or
sub
bound
call
es
inc
int
ljmp
mov
inc
push
stos
ss
mov
out
inc
bound
or
rolb
jo
xlat
loop
push
scas
sti
pop
aaa
jmp
lods
add
adc
sbb
or
push
xor
cmp
mov
pop
push
push
gs
lret
stos
sbb
xchg
jge
lcall
or
daa
and
cli
push
scas
mov
mov
shl
inc
sbb
and
mov
push
push
add
xchg
cmp
das
push
add
jnp
loope
push
cmp
push
out
cmc
xor
pop
jbe
lcall
popf
sbb
rorb
sub
cltd
push
adc
sbb
movsl
mov
inc
mov
subb
dec
int3
add
inc
adc
dec
cmc
xlat
js
stos
loopne
pop
insb
icebp
add
test
call
and
cmp
je
mov
add
xor
shll
dec
mov
push
sbb
adc
incl
push
sub
ljmp
add
cmp
fcoms
cmp
cwtl
push
add
idivb
loopne
je
arpl
out
icebp
inc
cwtl
es
push
or
push
pusha
mov
enter
jo
sub
dec
xlat
dec
cmpsb
ret
or
add
in
xchg
pop
push
jnp
scas
pop
xchg
pushf
mov
test
push
push
inc
addb
subps
xor
imulb
adc
mov
and
sbb
fxam
push
test
cmp
popa
call
pop
dec
push
ljmp
movd
mov
push
and
rcrl
add
sbb
xchg
push
push
lock
out
mov
cmpsb
test
push
jmp
xlat
inc
int3
ret
push
int
add
sbb
adc
dec
push
fists
adc
sub
adc
data16
add
jmp
add
js
or
xor
inc
sbb
loopne
mov
je
adc
ljmp
mov
fcoml
test
or
mov
ljmp
pushf
das
fiaddl
test
push
inc
jp
imul
arpl
xor
and
or
sbb
or
sbb
bound
add
push
je
inc
mov
add
into
icebp
inc
adc
ljmp
inc
inc
sub
cmp
xchg
hlt
daa
lret
mov
pop
lods
les
sahf
xor
stos
mov
rcrl
movsb
dec
or
sbb
jnp
mov
psubsb
mov
lock
lea
mov
mov
push
into
adc
push
or
sarb
test
pop
lds
cltd
and
or
pop
sbb
xchg
or
adc
and
fstpt
or
and
cmc
sbb
push
jbe
sub
cltd
push
xchg
lods
lahf
or
sbb
pop
popf
shrb
cmp
lock
push
orl
imul
mov
rolb
shl
ret
xchg
xchg
aas
mov
mov
push
push
pop
mov
icebp
lret
clc
jb
xor
and
sbb
adc
or
and
fcompl
jge
rol
sbb
adc
mov
add
xchg
sbb
xchg
stos
dec
das
lds
jbe
xor
ja
ss
orl
insl
jl
enter
pop
lods
es
dec
pusha
add
push
adc
bound
inc
dec
inc
ret
add
cmpsb
sbb
pop
jb
int3
adc
push
add
adc
rcrb
xor
adc
ljmp
insb
push
ljmp
imul
insb
sub
pusha
add
outsb
dec
pop
mov
mov
mov
das
jae
addr16
shl
cmp
jecxz
cmp
inc
add
jp
inc
push
dec
inc
nop
pop
jmp
xor
dec
mov
lret
push
and
inc
xlat
add
pop
lods
lock
push
xchg
cmp
mov
shr
test
cmp
jns
push
sub
push
in
ljmp
sub
scas
xchg
cmpsb
inc
sahf
sub
lahf
jo
xor
add
rcll
sub
int
inc
lret
rep
or
popa
xor
notl
mov
xor
icebp
sub
shl
sub
cmp
rorl
gs
cmpsb
push
sti
fcomip
scas
pop
mov
nop/reserved
out
stc
insb
or
inc
cs
cmpsb
ja
enter
jmp
mov
movsl
jb
jl
and
and
push
add
xchg
mov
sbb
ret
xchg
xor
mov
push
add
loop
popf
pop
sti
push
sbb
jno
scas
mov
mov
stos
je
jnp
and
cmp
mov
cltd
push
sbb
in
add
inc
push
pop
aaa
add
sub
mov
mov
adc
pop
pushf
add
xchg
add
push
xor
adc
pushf
test
pusha
sbb
leave
out
adc
adc
cmpsb
mov
arpl
push
add
out
pop
lods
add
imulb
ret
stos
sbb
jmp
mov
imul
fidivs
cmp
xchg
push
pop
xor
aaa
or
in
bound
add
movups
ret
push
stos
call
add
inc
call
sbb
add
dec
int
or
sarb
push
mov
outsl
mov
dec
inc
mov
add
lret
into
push
or
mov
push
add
jge
cwtl
inc
sbb
cmpl
push
and
pop
mov
pop
jmp
inc
adc
mov
sarb
xchg
add
xchg
cli
shrb
xchg
mov
js
ds
xchg
xor
inc
in
fs
leave
pusha
sbbl
adc
shl
dec
push
mov
addl
jle
enter
sbbb
fimuls
mov
or
shrb
xor
inc
adcb
cmpsb
mov
add
setp
or
push
or
mov
sbb
xor
test
rolb
test
mov
xor
sbb
mov
cwtl
lret
scas
cmp
push
xor
mov
popf
cmp
rolb
hlt
orb
pop
or
aad
shlb
mov
add
aam
in
push
inc
xchg
adcl
loope
bound
xor
das
jb
push
fst
or
xor
adc
mov
orl
jecxz
adc
scas
sbb
add
or
push
mov
mov
in
add
inc
das
inc
adc
mov
jbe
ret
jno
lret
shlb
mov
push
xor
dec
aam
cmp
cmp
adcb
test
imul
xchg
shl
push
repz
mov
xor
push
loopne
andl
into
aad
rclb
cmp
jb
adc
orb
js
add
lods
in
sub
pop
lds
daa
mov
sbb
enter
push
movsb
inc
imul
bound
add
xchg
fidivrs
sub
mov
je
aad
cmpsb
pusha
push
add
and
add
das
and
cltd
push
mov
lods
lock
xchg
ret
xor
divl
xchg
mov
std
add
jne
push
insb
and
iret
nop
sub
xchg
dec
xchg
stos
jo
inc
inc
mov
sub
cli
in
popa
clc
mov
sahf
or
dec
push
insl
and
aam
mov
bound
pop
test
fiadds
add
insl
mov
adc
arpl
push
xchg
ljmp
push
sub
lret
cmpsl
lcall
movb
push
mov
lock
jb
pop
daa
adc
cmp
sbb
jmp
call
rclb
shrb
mov
adc
push
repz
push
push
inc
mov
rcrl
pop
icebp
push
roll
jp
jo
mov
popf
inc
mov
or
pop
mov
push
xor
sub
mov
rcrl
sbb
stc
jg
sahf
out
stos
mov
push
mov
inc
mov
in
push
test
add
sbb
jecxz
xor
negb
xlat
push
call
scas
pop
adc
or
hlt
and
push
cmp
dec
xchg
and
cwtl
clc
mov
psllw
inc
xchg
jnp
call
pusha
sti
fnstenv
js
adc
jo
and
ja
push
push
fstps
push
in
sub
or
push
cmp
add
movb
inc
sbb
or
testb
push
jp
cld
ljmp
outsb
testb
dec
push
sub
lods
ror
xor
out
cltd
push
xor
les
and
bound
jp
sbb
imul
cs
mov
push
dec
jno
push
loope
lds
cmp
dec
sbb
sub
shrb
jp
rol
rorl
jae
or
fcompl
sarl
push
xchg
push
in
ds
cmp
add
test
mov
shlb
mov
inc
xchg
sub
mov
mov
push
and
dec
pop
push
or
je
fmul
inc
add
adc
fmuls
inc
pop
adc
test
add
shrb
xor
mov
rcrl
sbb
incb
push
cs
dec
leave
pusha
ljmp
inc
dec
xlat
push
adc
addb
lods
mov
xor
ss
into
repz
mov
mov
push
dec
and
xchg
pop
pop
adc
xor
mov
push
push
and
icebp
mov
jno
notb
or
add
enter
lcall
cmpsb
enter
push
rorl
nop
das
inc
xor
rcr
adc
push
imul
pop
xor
psrld
cmp
scas
or
mov
sti
sarl
testb
lret
and
jp
add
lods
sbb
movsb
aas
loope
sbb
fsub
or
push
add
mov
rol
test
add
xor
sbb
push
and
sub
insb
push
imull
push
pop
inc
sysexit
loope
pop
ss
cld
aad
or
sbb
or
lods
or
lds
popa
mov
mov
sbb
dec
sub
cld
cmp
xchg
imul
popa
and
mov
pop
inc
ret
test
pusha
mov
or
push
pop
popf
sub
loopne
cmp
sbb
test
in
pop
add
or
shlb
cmp
int
push
sub
negb
adc
aad
pop
lahf
sbb
or
cld
mov
nop
pop
bound
ret
add
inc
leave
test
mov
jg
sbb
inc
push
xor
mov
xor
andb
out
icebp
mov
add
negb
shlb
incl
and
int
pop
dec
or
inc
test
sub
inc
adc
shlb
or
xor
xchg
daa
cltd
mov
inc
sbbl
test
out
in
movsb
ret
dec
insl
scas
stos
adc
pop
sarb
inc
add
cmp
enter
adc
and
call
xchg
addr16
xchg
shrl
or
pop
fldt
dec
jle
out
lcall
sbb
in
mov
or
ror
xchg
mov
pop
push
push
jp
adc
mov
xchg
xor
adc
cmp
addr16
ret
lock
in
enter
add
xchg
fcmovb
popf
dec
jmp
add
test
scas
inc
cmpsl
ljmp
cmovno
rcr
ret
lods
push
rcrb
roll
add
addl
adc
jp
adc
arpl
mov
lds
dec
adc
sbb
sub
notb
aaa
xchg
es
mov
xchg
std
js
mov
xchg
adc
mov
push
mov
jo
insl
data16
shll
cwtl
adc
and
pop
aas
add
mov
jmp
add
and
lcall
ljmp
pop
lds
cs
aam
stos
ss
leave
test
push
add
popf
or
mov
inc
shll
into
outsb
lods
pop
icebp
add
pop
cmp
roll
push
js
pop
sub
jg
xor
fs
cld
in
pop
loope
test
stos
pop
push
mov
mov
cmp
pop
xchg
lods
cmp
cltd
sub
pushf
cld
subl
insb
adc
movl
aas
and
xor
fisttps
mov
pop
xor
pop
mov
ja
ret
ljmp
inc
daa
fcmovbe
subl
sub
jmp
iret
mov
and
pop
dec
adc
mov
dec
pusha
std
cmp
mov
push
inc
pop
or
jbe
mov
rorl
pop
mov
adc
adc
sub
divb
xor
hlt
test
adc
xor
loope
rorb
inc
push
inc
xchg
mov
mov
loope
rorl
xor
cmpsb
sahf
lock
mov
xchg
mov
sbb
pop
xchg
sbb
adc
cwtl
dec
sbb
or
push
cwtl
sub
mov
and
fisttpl
jb
sub
clc
cli
add
fisubrl
push
cmp
test
nop
or
push
out
jne
les
add
enter
sub
fstl
lahf
add
or
andb
inc
popa
mov
xorl
inc
dec
lds
add
add
or
adc
popa
push
sti
lcall
dec
and
ljmp
push
cltd
xorb
sbb
add
lds
jb
adc
add
mov
into
mov
and
stos
jo
xchg
rcl
enter
and
pop
mov
addr16
sbb
jle
ret
mov
inc
roll
xor
aad
inc
into
or
loop
push
clc
mov
fcoms
sar
fisubrl
fcmove
or
sub
add
in
jge
stos
ror
mov
lcall
mov
jae
push
subl
jle
sbb
push
stos
inc
xor
fmuls
add
mov
popf
test
frstor
xor
cmpb
cltd
pop
cmp
jb
jecxz
mov
cmpsb
cmpsb
push
mov
xor
push
push
loope
mov
cmpsb
enter
mov
outsl
sbb
pop
loopne
xor
rorb
adc
call
negb
mov
insb
xchg
push
jne
adc
push
jb
push
add
jmp
out
push
sub
popa
mov
shll
sti
test
and
adc
les
push
mov
inc
mov
sbb
inc
pop
out
repnz
push
loope
push
addb
cmc
cltd
jne
xchg
cwtl
dec
add
fadds
adc
aad
or
shlb
pop
push
add
adc
aaa
push
scas
test
sbb
aad
loope
xchg
sti
ret
ss
or
and
push
mov
mov
pop
sbb
jl
adc
iret
rcll
sub
inc
mov
add
dec
loope
loop
loope
or
icebp
mov
xor
cltd
jo
push
jne
fdivrs
in
leave
pop
rolb
sahf
scas
shrb
sahf
xor
cli
add
scas
xchg
add
xchg
inc
adc
mov
loop
int
icebp
outsb
jp
push
sbb
add
xchg
stos
sahf
ljmp
xchg
js
add
mov
cmp
sub
and
push
iret
push
dec
sbb
pushf
sbb
sarb
mov
clc
pop
add
and
lds
add
and
mov
adc
xchg
sbb
mov
loope
mov
mov
add
dec
push
mov
adc
test
push
iret
sbb
jp
pop
add
add
push
xor
sub
popf
rcl
js
sbbb
popf
sbb
push
loopne
outsb
cwtl
subb
mov
pop
outsl
cmpsb
add
scas
dec
mov
add
cmp
mov
inc
add
mov
mov
xor
addl
xor
shlb
xchg
rolb
or
inc
xor
lods
sahf
lods
and
stos
pop
mov
or
es
cmpsl
push
rcr
push
inc
pop
mov
sub
jg
lods
mov
sbb
jl
push
leave
or
mov
popa
mov
or
add
icebp
insl
lds
nop
jne
or
xor
loope
cltd
adcb
push
adc
test
xchg
rolb
xchg
and
pop
mul
adc
inc
pusha
popf
ja
adc
call
push
push
pusha
clc
call
cld
cmp
or
mov
lock
xchg
or
sbb
shlb
inc
mov
out
cmp
rcll
dec
insb
add
mov
push
test
add
jmp
aam
mov
adc
add
xchg
popa
adc
jmp
or
ret
fcmovbe
cmp
loope
pop
push
sub
outsl
imul
xacquire
push
in
aam
arpl
pop
scas
test
and
stos
mov
daa
cmp
ret
inc
jp
loop
pop
test
adc
sub
push
adc
inc
scas
ret
mov
or
xor
cwtl
test
in
add
xor
push
test
rcrl
push
lcall
sub
add
mov
and
or
insl
mov
iret
ret
shlb
add
jnp
mov
jo
std
mov
pop
xor
call
fdiv
scas
je
xor
add
addr16
shl
add
xor
xchg
popa
imul
js
movsl
rclb
inc
sub
add
push
mov
sub
sbbb
dec
add
mov
inc
stos
push
out
dec
xor
sub
jne
pop
inc
sbb
shll
int
data16
push
sub
orl
pop
repnz
push
or
lret
adc
jno
or
mov
leave
cmp
adc
mov
mov
add
dec
and
cwtl
lock
or
adc
sbb
sub
ret
adc
mov
movsb
in
adc
or
adc
push
scas
or
rorl
mov
loop
roll
popa
imul
cmc
xchg
jle
push
mov
dec
push
or
aad
push
sub
je
cmp
push
add
fs
cltd
rorl
xor
inc
inc
pop
ficompl
sbb
insb
dec
lock
rorb
pusha
adc
sbb
mov
inc
rclb
clc
leave
jp
pop
subl
jns
repnz
mov
mov
push
or
xchg
fs
lock
ss
fwait
adc
jne
jp
and
push
sbb
test
jo
push
ss
xor
and
adc
inc
outsl
test
jne
out
sbb
add
mov
sahf
ret
test
sbb
sub
mov
push
adcb
sbb
sub
pop
into
fs
mov
push
pusha
inc
add
shr
stc
gs
push
mov
sbb
pop
movsl
push
rorb
jge
push
sbb
inc
pop
xchg
rcll
push
add
add
shll
dec
ret
mov
loope
fmul
jns
icebp
xor
jbe
mov
jns
js
fwait
adc
sahf
push
mov
xchg
mov
fisttpl
call
inc
or
cmp
push
or
mov
xchg
stos
sub
test
lret
sbb
and
adc
add
mov
add
adc
pop
outsb
inc
loopne
jge
dec
js
xor
cmp
lret
add
mov
lea
add
and
sub
cmp
loopne
repnz
sbb
cmp
mov
icebp
sub
add
xor
jbe
pop
push
pop
push
popa
adc
or
call
sahf
mov
push
xor
push
or
pop
mov
decl
frstor
push
or
in
adc
adcl
roll
cmp
sbb
pop
addr16
pop
or
nop
jmp
dec
nopl
mov
jnp
push
lgs
push
jmp
push
loope
and
jo
adc
mov
aad
shrl
pop
pop
test
push
sbb
adc
mov
cmp
inc
leave
nop
push
mov
sub
mov
ljmp
pop
icebp
addb
stc
adc
adc
lods
aad
insl
xor
inc
mov
lock
mov
rol
mov
sbb
rcrl
sbb
jno
ret
test
add
or
push
sub
add
test
pop
fsubrs
lock
xchg
push
outsl
inc
xchg
or
jge
lock
adc
push
stos
inc
dec
sub
stos
xchg
movl
insb
push
popf
jno
adc
fxrstor
icebp
push
sbb
xchg
push
lret
sbb
lret
adc
dec
xchg
push
xor
cmpsb
xchg
movaps
xor
xor
test
inc
movsb
stc
mov
sbb
inc
adc
inc
les
inc
xorl
bound
push
and
jp
mov
push
cmp
push
hlt
and
in
ljmp
jp
or
inc
mov
or
insb
ret
fiaddl
jle
inc
dec
int3
cli
pop
mov
pop
mov
mov
pop
cmp
sub
not
loopne
push
std
cmc
inc
icebp
push
push
mov
lahf
fs
pop
and
jl
sbb
loopne
cltd
mov
into
push
popf
mov
frstor
jle
rolb
stc
das
andl
add
jmp
adc
sbb
add
lds
arpl
add
sbb
aaa
cli
or
ret
lods
stos
jno
loope
add
inc
or
ret
clc
jno
dec
shrl
ret
jge
cmp
or
cmp
test
push
adc
push
cmp
adc
jne
or
popa
sub
sbb
or
aad
lcall
fsub
cwtl
adc
scas
add
je
repnz
inc
ret
xor
enter
and
or
ret
lds
push
cmp
push
ret
mov
ja
cmp
mov
aaa
jne
cltd
jb
call
and
push
sub
or
shll
add
dec
cmc
and
pop
sub
xlat
leave
cwtl
rcrw
mov
out
cmp
popa
mov
sub
mov
scas
test
mov
aad
in
or
pop
arpl
or
insb
push
cmp
and
adc
and
pushf
mov
or
gs
adc
test
inc
lret
cmc
push
add
add
pop
sub
xchg
push
or
mov
ret
scas
call
pop
sub
or
sbb
jge
push
pop
cmp
pop
cld
sar
inc
and
sub
inc
shlb
sbb
mov
iret
pop
repz
push
cmp
or
push
pushf
mov
jae
inc
addr16
inc
jns
push
inc
or
fldt
hlt
xor
push
push
add
rcrb
jmp
repz
es
loope
push
mov
int
stc
xchg
or
and
dec
mov
icebp
aas
in
and
or
dec
push
pop
shlb
add
stos
inc
cmp
icebp
xor
cmc
mov
enter
adc
sbb
cs
loope
lods
je
test
fwait
dec
jmp
or
jge
mov
pop
insb
rcrb
mov
jle
bound
mov
imul
or
sbb
leave
fmull
mov
cld
daa
dec
repz
into
mov
repz
jno
xor
dec
ret
or
pop
aad
rcr
adc
or
and
mov
or
adc
adc
rorb
test
push
xlat
loopne
cmp
iret
call
inc
sbb
pop
jne
cmp
test
xor
mov
and
mov
in
sub
imul
sub
rolb
je
loopne
add
shlb
inc
pop
lods
test
inc
push
mov
add
cmp
sub
pop
pop
call
test
push
dec
push
add
aad
cwtl
or
cmp
mov
ret
push
dec
mov
leave
out
pusha
add
fwait
jge
testl
adc
les
lds
mov
enter
push
push
mov
push
daa
cmp
pop
sbb
dec
stc
or
loop
adc
sbb
mov
pushf
call
mov
xlat
adc
sub
sbb
enter
adc
push
je
mov
sub
inc
jo
shlb
inc
cmp
rolb
jb
mov
push
aad
add
add
mov
movsb
adc
add
outsl
call
cmp
adcl
leave
lahf
push
sub
mov
inc
fcom
fiadds
pushf
mov
sub
pop
mov
test
dec
xchg
push
pop
leave
icebp
stos
addb
sbb
rol
push
hlt
cmp
pop
adc
push
inc
aam
mov
mov
mov
sub
push
mov
test
jge
sahf
add
outsl
cmpsb
arpl
ret
adc
push
pop
subb
cltd
scas
js
or
fsts
pop
mov
inc
or
pop
rcrl
inc
ret
cmpsb
icebp
aad
adc
or
sub
xchg
icebp
push
push
jae
dec
xor
jp
or
adc
pop
sbb
aaa
cwtl
sub
inc
int
jmp
inc
cmp
mov
movsb
jbe
cltd
out
adc
mov
mov
push
daa
enter
test
xor
mov
or
mov
jecxz
add
ret
dec
popf
add
pop
sbb
adc
cmp
sub
test
and
ljmp
out
adc
rclb
mov
adc
inc
icebp
cli
es
lahf
imul
jns
add
or
cli
xor
enter
add
adc
push
lds
xchg
sub
bound
xchg
sbb
sbb
int3
xorl
push
test
add
incb
xor
mov
mov
or
jne
jo
rolb
sub
adc
pop
sbb
xchg
push
or
aam
icebp
daa
mov
add
adc
rclb
sbb
jle
in
pop
or
mov
adc
cltd
dec
cs
bound
inc
sbb
lcall
stos
pop
inc
xor
sub
xchg
ljmp
inc
je
ret
rolb
mov
pop
xor
add
add
mov
dec
scas
jo
insl
adc
lcall
outsb
inc
pop
pop
lcall
add
xlat
enter
je
mov
add
mov
pop
popa
icebp
xor
jg
loop
sub
mov
jb
jmp
push
and
cmp
sbb
andl
rcll
loope
sbb
jb
add
push
add
adc
insl
jo
pushf
lret
js
and
mov
cltd
inc
sub
sub
pop
mov
xchg
or
sub
sarl
push
mov
mov
adc
sar
or
stc
adc
sub
ret
push
mov
ret
inc
pop
jge
xchg
mov
scas
xchg
add
or
test
fs
out
mov
xchg
push
cld
jmp
addb
xor
icebp
push
mov
movsb
cmp
add
push
cmp
sbb
rcl
insb
cmpsl
adc
in
fidivs
jmp
sti
notb
adc
rol
adc
jp
or
subb
add
aam
ljmp
or
je
and
mov
push
leave
adc
push
adc
cmp
sbb
ljmp
lret
inc
xchg
inc
xor
inc
je
push
ror
in
orl
ja
add
push
mov
aad
xor
nop
pop
pop
rclb
add
int3
cld
sub
insb
inc
adc
push
mov
cltd
push
push
xchg
push
ret
and
xchg
or
adc
sub
clc
out
push
cmpl
into
push
clc
lcall
add
jae
push
xchg
movsl
enter
or
jmp
mov
adc
lret
xor
incb
out
mov
mov
leave
lret
add
and
adc
xchg
test
inc
loop
pop
ljmp
testb
icebp
imulb
pop
mov
inc
cli
std
mov
push
push
or
xchg
mov
lcall
test
mov
mov
mov
xchg
inc
mov
pop
es
xchg
inc
sarb
sub
scas
scas
daa
ljmp
cli
push
pop
test
mov
inc
sbb
add
push
dec
sub
fcoms
sub
add
std
or
pusha
test
or
add
ret
jo
movsb
xchg
mov
add
jnp
pop
mov
lahf
mov
aad
push
lret
xor
ljmp
push
pop
xor
add
push
cmpsl
loopne
lds
inc
mov
sbb
insb
lsl
xor
lret
xor
mov
xor
inc
into
xor
or
subb
push
mov
add
ja
sbb
mov
sbb
sbb
cltd
mov
pop
mov
push
inc
pop
and
cmpsl
les
stos
push
mov
mov
bound
outsb
adc
jne
mov
lret
mov
ljmp
dec
outsl
cli
mov
out
pop
popa
mov
ljmp
dec
sub
cmp
mov
push
ljmp
sub
imul
pusha
lcall
stos
add
pop
xor
sub
icebp
pop
sub
or
adc
addl
ds
mov
scas
sub
cmp
smsw
iret
jp
push
sarl
gs
push
pop
sbbb
lods
icebp
sub
or
adc
and
adc
subb
add
jns
push
sbb
stc
stos
inc
xor
push
pusha
lds
or
sarb
xor
add
es
test
inc
fdivs
push
jb
pop
mov
call
mov
in
adc
push
test
pop
pop
cmp
scas
add
mov
rolb
rolb
adc
jns
and
orl
dec
push
pop
mov
xor
mov
cs
add
jns
arpl
addb
rorl
sub
or
inc
jge
jnp
lods
sub
jno
push
out
and
sahf
mov
rcrb
inc
sub
push
sbb
jns
push
mov
inc
lds
mov
mov
inc
fs
push
push
cmpsl
call
mov
pop
add
mov
push
sbb
mov
dec
insb
into
sub
sbb
sti
movsl
jle
sub
add
loope
cmpsb
add
sar
inc
mov
loopne
add
subb
testl
cmp
in
xlat
fmull
cmp
cmp
adc
adc
xor
mov
xchg
gs
addb
sbb
sbb
mov
push
jle
inc
adc
and
mov
int3
push
xor
xchg
sbb
adc
add
popf
ja
sub
xchg
das
into
push
pop
lock
jnp
adc
cmp
cmp
adc
mov
jp
or
adcb
cli
pop
sbbl
pushf
cmp
add
flds
adc
and
cmp
dec
or
sbb
out
shlb
test
push
mov
mov
or
and
clc
sub
sbb
pop
inc
subb
sbb
or
inc
pop
pop
add
add
test
dec
ror
adc
pop
jo
rcrl
xchg
push
cmp
pop
loop
loop
aam
or
sbb
loopne
xlat
je
cmpsl
inc
xlat
adcb
add
call
rcll
loopne
and
ficoms
mov
ds
sub
imul
mov
push
mov
mov
out
aam
aad
and
mov
xchg
adc
insb
xchg
mov
js
mov
jb
leave
adc
fisubrs
push
jo
jecxz
in
xchg
cmpsb
ljmp
aad
sub
adc
jp
adc
test
std
ret
ss
pop
test
sub
negb
xchg
mov
das
mov
fildl
and
add
mov
test
fiaddl
sbb
sbb
push
xorl
cmpsb
inc
and
andb
sbb
mov
jb
test
lcall
test
sbb
call
pop
push
aad
je
pcmpgtb
loopne
sbb
sub
shll
cli
xchg
inc
pushf
adcb
adc
or
mov
push
sub
or
xorps
jl
add
add
or
push
sub
sub
mov
push
inc
or
ljmp
rcrl
jmp
and
imul
dec
inc
sbb
cmp
adc
out
pusha
test
adc
sub
addl
push
cmp
out
clc
shll
lock
ljmp
and
push
mov
push
inc
leave
inc
sub
add
mov
fst
xor
push
adc
sarb
push
mov
cld
sbb
xor
pop
sbb
sbb
add
push
xchg
pop
xorb
sbb
inc
mov
fidivl
rclb
sub
jle
sub
inc
lret
loope
pop
push
int
xchg
in
xor
outsb
jno
sbbb
stc
adc
pop
loope
xor
xlat
cmp
sub
rcll
add
and
add
and
sbb
sbb
add
cs
or
adc
dec
cltd
pop
jno
inc
and
rcrb
mov
and
cmp
loopne
sub
push
fcmovnu
push
mov
mov
add
xor
jge
jmp
xor
lds
int
movsl
js
add
mov
mov
xor
lret
add
mov
xor
jb
sbbb
mov
loop
mov
js
push
xor
mov
fs
cmp
nop
mov
jno
jge
add
cld
das
shlb
mov
mov
mov
inc
es
in
push
icebp
stc
or
call
inc
mov
rcll
lcall
addr16
shlb
stos
sub
inc
xor
or
insb
test
push
push
mov
jo
into
rcll
and
stos
int
pop
dec
rclb
cmp
outsl
push
inc
sub
mov
inc
inc
mov
mov
mov
test
xchg
test
push
shl
push
cs
sbb
inc
stos
mov
pop
lret
rcl
mov
fcmovb
adc
push
loopne
rclb
and
mov
inc
int
mov
push
movsl
add
pushf
mov
loopne
mov
icebp
fstpt
push
push
test
pusha
loop
pop
pop
ret
adc
bound
mov
cmp
adc
loop
xchg
lock
push
and
jl
xchg
jmp
xchg
repnz
inc
pop
push
pusha
and
ret
mov
filds
sbbb
sub
xchg
add
subb
inc
mov
fcomps
pushf
pop
rclb
mov
cwtl
push
sbb
pop
aam
xlat
pop
lret
inc
push
shrb
push
adc
sti
call
test
adc
dec
xor
push
test
mov
gs
pop
lcall
push
leave
sti
adc
setbe
test
cmpsl
movsb
shrb
mov
cld
sub
add
xchg
adc
cmpl
xchg
sbb
add
jb
mov
xchg
xor
dec
mov
ss
bound
call
jo
mov
ds
push
push
add
das
mov
sbb
iret
adc
sub
push
sub
ds
bound
add
or
fdivl
jo
pop
in
adc
mov
push
hlt
and
sub
cmp
idivb
rcrb
mov
int
stos
jecxz
cmp
push
shlb
and
add
adc
add
adc
inc
adc
les
je
ljmp
xor
gs
imul
inc
cmc
push
mov
mov
dec
pop
int
lods
cmp
dec
add
bound
outsb
test
jle
pop
sub
imul
daa
xchg
out
or
sub
test
mov
test
xor
push
sbb
sbb
sbbl
pop
sbb
xorb
stos
test
add
push
mov
or
bnd
push
pushf
leave
xchg
sbb
call
pop
jg
or
cmp
insb
adc
mov
cmp
sub
cmp
push
movsb
pop
rcrb
sbb
mov
popf
cmp
les
aam
ret
jne
push
mov
mov
inc
push
dec
addr16
scas
sbb
lret
adc
mov
and
cmp
inc
clc
movntq
out
aad
inc
lods
test
dec
pusha
mov
or
movsb
sbb
or
repz
cmpsb
ss
add
dec
xor
mov
and
and
ret
mov
lahf
push
scas
xor
icebp
mov
mov
sbb
mov
addr16
cli
rcrl
iret
shl
loope
cmp
rorb
clc
lock
cli
or
inc
pop
mov
pop
pop
push
mov
push
loopne
adc
fisttps
lcall
popa
push
sub
movb
mov
dec
in
push
cwtl
mov
add
push
mov
rclb
xchg
cmp
or
xchg
test
cmpsb
adc
lods
rcll
mov
jp
add
add
test
test
add
bound
dec
xchg
inc
or
movsb
and
xchg
jno
cs
inc
sbb
add
add
xor
pop
in
xlat
test
rcll
rcrl
ret
inc
movsl
rcrb
push
mov
jge
pop
inc
andl
push
in
sbbb
or
xchg
out
adc
push
call
lds
xor
or
das
and
out
pop
rclb
addr16
inc
pop
push
xlat
sarb
add
lods
movsb
inc
add
xchg
sbb
add
sbb
push
push
mov
pop
test
dec
mov
das
ljmp
mov
loopne
inc
andl
ret
nop
fisttps
add
daa
ret
rcll
add
imul
arpl
mov
or
xchg
mov
jo
mov
adc
jle
and
add
adc
aam
sub
bound
ljmp
cmp
js
adc
and
adc
adc
xor
adc
pusha
call
pushl
rorl
shrb
xchg
lea
add
movb
pop
push
lret
scas
and
add
pop
add
clc
sub
adc
mov
push
sbb
test
cmp
rorb
push
dec
add
test
xorl
mov
out
test
push
push
mov
add
popf
lds
out
test
into
cmp
mov
xchg
outsb
imul
insl
ret
dec
shlb
lock
inc
dec
fcomi
fidivrl
pop
xchg
orl
dec
clc
inc
add
mov
push
xchg
dec
shrb
ds
jmp
inc
rolb
jne
mov
leave
push
out
xor
xor
pop
adc
jmp
outsl
mov
cmp
mov
add
insl
nop
adcl
adc
mov
adcb
daa
ret
cmc
or
jb
inc
mov
inc
sub
ss
push
jno
ficoms
sbb
inc
dec
or
pop
add
icebp
add
or
rclb
fldenv
ljmp
pop
pop
adc
pushw
stos
fisttps
imul
dec
test
mov
shr
xor
cmp
xorl
add
push
jae
xor
call
std
mov
orl
test
add
sub
lds
mov
adc
rolb
stos
inc
lds
mov
mov
sub
adc
jmp
cmp
xchg
mov
test
push
movsb
cld
ret
adc
mov
pop
xchg
cmp
or
or
stc
loope
and
dec
rolb
or
inc
enter
fcomp
push
inc
sbb
sub
adc
sub
xchg
aam
adc
jno
and
mov
icebp
add
sbb
adc
add
cmpsb
aas
popa
or
or
cmp
inc
stos
add
aaa
sbb
popf
push
push
mov
jb
inc
sbb
lahf
inc
add
push
push
scas
rolb
fs
push
add
push
cs
adc
push
ret
xor
sahf
jne
inc
add
adc
lcall
adc
stos
or
stc
and
inc
inc
loope
inc
xor
fisubl
push
int3
lret
add
or
sbb
icebp
psrad
adc
mov
cmp
nop
sbb
loopne
shr
cs
movsb
out
leave
mov
aad
int3
mov
push
or
push
cmc
and
adc
lret
rol
sahf
add
or
inc
icebp
rcrl
add
loop
jl
into
subl
adc
adc
inc
sbb
sub
mov
mov
lcall
or
adc
test
mov
add
cmp
rcll
cmp
pop
mov
mov
in
rclb
bound
add
mov
or
adcb
mov
push
lret
or
or
xchg
inc
and
inc
popa
subl
jmp
inc
bound
add
inc
roll
enter
loopne
xor
es
pop
sbbl
mov
pop
xchg
pusha
jge
push
mov
xchg
adc
and
loop
insb
fimuls
inc
add
add
int3
adc
inc
leave
or
push
outsl
jle
shlb
add
push
adc
xchg
int
dec
pop
adc
cltd
ljmp
cmpsl
aas
jo
out
adc
mov
andb
rclb
and
push
cmp
xchg
aam
int
pop
fstps
out
sub
adc
mov
add
ret
jecxz
popa
push
or
push
add
adc
loope
pop
clc
push
mov
pusha
xchg
cmp
xchg
rcl
sbb
sbb
mov
or
sbb
je
cli
test
inc
dec
leave
adc
or
sti
rcll
push
mov
jne
js
xchg
addl
inc
mov
pop
sub
jae
xchg
mov
cwtl
and
pop
lahf
xor
daa
push
stos
adc
arpl
push
enter
sub
cmp
icebp
cmp
mov
mov
xchg
cmp
sub
mov
mov
test
add
out
pop
xor
xor
scas
pop
ljmp
or
fucomi
mov
pop
jne
mov
xchg
cmp
sbbb
pop
call
sub
ljmp
call
cmp
sub
ljmp
adc
mov
nop
pop
lahf
mov
enter
mov
pop
or
sbb
mov
addr16
sbb
mov
lahf
pop
xchg
sbbb
cmpsb
es
xor
cmc
dec
ret
pop
std
fdivs
adc
jmp
add
ja
mov
push
adc
push
cmp
push
adc
outsb
nop
jmp
aas
xchg
lds
ret
or
sbb
stos
lock
or
cmpsl
into
push
movsl
enter
jo
adc
dec
add
push
vpshlq
push
shrb
rclb
sbb
add
sub
dec
shll
popl
fisubl
cld
enter
or
fcmove
dec
or
sbb
xor
sahf
stos
movsl
repz
mov
jae
les
andl
addb
ficomps
cmp
addb
jae
and
add
sahf
cwtl
test
push
pop
sub
push
rol
gs
push
and
mov
sbb
cmpsb
sbb
scas
xor
pop
pop
xor
outsb
sahf
cmp
push
inc
inc
push
mov
sbb
aaa
leave
loopne
addb
jmp
push
scas
inc
popa
or
test
cli
jg
sub
add
cmpsl
fiadds
insl
lods
mov
loopne
and
ljmp
enter
push
push
adc
and
pushf
dec
std
cmp
or
sbb
push
popf
popf
push
mov
xor
xlat
or
push
je
lock
sarl
dec
div
int
imul
xor
jnp
js
rolb
inc
push
sbb
ljmp
mov
inc
mov
xchg
mov
mov
mov
into
adc
xchg
pop
cli
push
in
shl
stos
sbb
aad
sub
call
mov
inc
adc
inc
rcl
popa
into
mov
xlat
pcmpeqd
stos
adc
mov
push
and
push
sbb
pop
cmpsb
push
sub
jbe
adcb
mov
sub
les
test
arpl
cmpb
push
jbe
adc
iret
test
add
pop
mov
sbb
add
stos
adc
pop
pop
mov
hlt
xor
push
test
inc
push
dec
fsts
cmc
cmpb
je
push
sbb
jb
push
mov
inc
inc
push
dec
lock
mov
sbb
xchg
mov
add
pushf
cmpb
push
cs
or
mov
inc
mov
dec
push
or
hlt
mov
sub
roll
inc
fwait
rolb
scas
movb
inc
or
adc
adc
scas
aaa
push
cld
cmp
push
push
xchg
cmp
mov
in
adc
pop
xchg
mov
pop
dec
ret
push
mov
dec
dec
push
hlt
or
sub
inc
jmp
sub
mov
leave
dec
mov
dec
setbe
popf
mov
adc
ret
jecxz
pop
inc
sub
pop
inc
push
push
dec
fwait
stos
dec
jmp
push
or
lock
rol
jne
lahf
mov
scas
mov
pop
sbb
movsl
stc
adc
lcall
shll
add
sarb
push
movaps
lret
cmp
mov
and
in
mov
test
out
jne
jo
bound
add
and
imul
sbb
stos
sbbl
call
xor
push
inc
sub
and
stc
push
mov
or
fadds
adc
fisubs
jge
or
outsl
inc
and
notl
int
out
incb
sub
mov
das
or
popa
push
pop
cli
and
jp
inc
xchg
cmp
popa
push
sbb
repnz
data16
cmc
inc
add
imul
adc
push
sub
xchg
test
insl
rolb
adc
sbb
or
lock
in
mov
or
enter
sub
lds
sbb
adc
daa
pop
jl
inc
xchg
js
sub
js
push
test
loope
outsl
rclb
addb
dec
jb
or
pop
pop
cwtl
sysret
leave
push
test
arpl
mov
mov
sbbl
jl
inc
lds
bound
mov
push
mov
jmp
add
mov
stos
scas
pusha
push
pop
push
inc
sbb
xchg
test
xchg
xchg
adc
or
or
addb
mov
pop
xor
add
adc
jae
out
fstpl
jp
and
jb
pop
movsl
es
push
test
sbb
mull
add
add
mov
add
push
xchg
sbb
xchg
fs
or
add
mov
into
adc
sbbb
ficoml
push
xchg
add
stos
mov
in
sub
subb
cli
in
pop
add
push
cli
inc
shrb
inc
add
add
dec
or
orl
jae
dec
push
mov
mov
inc
or
cmc
and
mov
daa
or
mov
out
jno
adc
aad
jg
push
hlt
loopne
add
sbb
mov
mov
sub
lock
pop
add
nop
push
dec
cmp
sub
jge
stos
and
dec
pop
shrl
rolb
or
pop
mov
mov
bswap
test
mov
add
outsb
add
mov
adc
dec
pop
add
sub
adc
and
dec
xchg
xchg
rclb
jbe
rol
inc
aam
cli
pop
rolb
mov
add
or
adc
push
in
aas
push
pop
mov
or
shl
notb
and
jnp
sbb
push
dec
rolb
leave
pop
push
sbb
jle
rclb
or
lea
or
into
lret
test
aam
nop
or
xor
mov
push
dec
add
push
fimuls
lret
adc
sub
loop
sbb
mov
ljmp
xor
xor
into
xchg
sti
ror
add
add
pop
dec
add
push
xchg
pop
push
addb
je
push
jo
add
mov
xor
mov
aaa
ret
ljmp
out
shl
jl
out
sbb
inc
and
mov
lods
loope
or
rolb
test
push
ret
test
lcall
scas
stos
adc
mov
push
aam
js
into
adc
jo
push
push
xor
ficoml
inc
les
cmp
jno
inc
lds
popl
xchg
xor
push
fisubrl
push
or
out
jg
add
test
push
jbe
aam
sbb
mov
sub
dec
push
adc
jge
xchg
lea
fisubrl
clc
out
cmp
push
repz
int3
out
adc
lock
cmpsb
adc
dec
or
pusha
mov
xchg
and
inc
sub
test
mov
mov
sub
sbb
and
adc
int
cmp
dec
aad
xchg
adc
mov
sbb
add
sbb
xchg
addr16
test
mov
xchg
push
mov
in
mov
pop
icebp
or
inc
roll
aad
adc
add
idivb
sbb
add
push
int3
push
push
cmp
insb
jno
bound
rol
mov
xor
outsb
or
sbb
loopne
pop
inc
pop
and
mov
push
fwait
enter
mov
into
adc
inc
or
stos
test
mov
add
ror
push
loop
adc
idivl
loopne
pop
add
push
cmp
mov
and
pop
adc
mov
adc
scas
mov
push
push
outsl
xlat
add
std
inc
xchg
push
imul
mov
pop
imul
jp
jge
dec
cli
add
inc
lock
aad
mov
cmp
sub
loope
sbb
xor
mov
mov
push
adc
fsubrl
xchg
cmpsb
adcl
je
clc
add
xchg
jns
sbb
sbb
and
mov
fwait
adc
mov
sbb
or
or
or
inc
push
cmp
bound
into
cld
mov
sub
or
sbb
push
push
js
cmpsb
sub
test
sub
testl
mov
or
xchg
or
push
adc
in
dec
pushf
neg
lret
or
ljmp
mov
pop
mov
dec
enter
shlb
and
pusha
ljmp
cli
rorl
rol
sbb
sbb
rcll
test
inc
pop
jns
sbb
mov
pop
test
dec
add
add
mov
mov
hlt
inc
inc
pop
icebp
sub
push
aam
lods
pop
inc
pusha
push
mov
sbb
or
mov
sbb
pop
xchg
call
test
rclb
adc
push
xchg
adc
xor
je
push
test
add
jmp
lds
aas
pop
adc
das
sahf
jae
test
out
or
sbb
or
decb
sbb
jne
inc
pop
pop
jne
sub
add
cmp
cmp
cmpsl
pusha
inc
dec
cmp
int
rcll
sub
mov
dec
and
lea
adc
add
stos
ret
shl
dec
add
repnz
push
shrl
mov
jnp
fstps
rorb
mov
fimuls
mov
or
sub
cmpb
cmp
pushf
xchg
and
pop
rolb
leave
ret
into
xchg
lock
out
pop
xchg
push
xchg
into
add
shlb
mov
adc
push
cld
add
lds
arpl
or
adc
cmpsb
or
or
fwait
adc
dec
scas
adc
jecxz
and
in
add
cmpsl
xor
mov
pop
push
mov
jp
into
push
rclb
loope
mov
mov
adc
dec
and
inc
loop
es
cmp
push
cmpsb
cmpsl
sub
arpl
shl
mov
inc
mov
adc
test
add
add
sub
inc
jge
leave
shrb
cld
or
loopne
lds
adc
push
sahf
or
add
adc
in
andb
inc
dec
xchg
mov
enter
dec
xchg
xchg
subl
or
loopne
pushf
xor
leave
add
pop
pop
rol
and
mov
adc
scas
pop
aam
and
lods
mov
xchg
add
ret
xchg
subl
mov
jo
add
xchg
loopne
cmp
das
mov
mov
jb
jne
mov
imul
adc
shlb
insl
sbb
pop
push
rcrl
sub
pusha
or
and
popf
mov
inc
or
inc
sbb
push
fiadds
sbb
pushf
jmp
ds
push
outsb
xchg
stos
syscall
ljmp
cmp
repz
insl
arpl
subl
cmc
pop
and
add
add
pop
dec
ss
adc
mov
imul
or
ds
inc
rcll
xchg
mov
add
pop
stc
push
test
jne
lock
inc
sbb
call
sbb
push
and
pop
popf
jmp
push
subb
pop
add
loop,pt
jmp
add
and
adc
mov
pop
ret
add
jb
add
call
jns
andl
in
test
and
mov
imul
and
mov
xlat
dec
rcl
mov
and
cmc
rcrb
les
mov
jmp
mov
repnz
xchg
sbbb
out
add
out
xchg
adc
sub
ret
scas
call
mov
mov
pop
push
rolb
sub
in
sub
sub
mov
push
add
mov
and
pop
loopne
sahf
or
clc
andb
push
push
les
sbb
adc
mov
xchg
jge
mov
icebp
lret
inc
pop
andb
push
adc
push
sbb
mov
add
pop
xor
inc
mov
mulb
lds
push
xchg
mov
nop
xchg
movsb
clc
jle
push
add
mov
lea
call
lods
inc
addb
ret
xchg
cli
add
lods
shlb
adc
mov
pop
and
xor
or
adc
lods
call
adcl
mov
sub
shll
fiadds
mov
scas
xor
xor
xor
inc
mov
ljmp
andl
insl
inc
aaa
rcrl
and
push
push
xchg
imul
and
push
or
and
lea
dec
add
add
mov
rcrl
jge
pushf
pop
enter
mov
cmp
bound
hlt
xchg
sbb
adc
push
jp
cli
inc
filds
pop
and
dec
roll
jnp
inc
sbb
jo
lea
enter
add
mov
add
out
cmp
pop
faddl
rcrb
push
adc
inc
cmp
ljmp
push
aam
cli
push
push
and
enter
in
pop
xor
sub
clc
or
pop
or
ficoml
jne
cmp
in
aam
push
sub
dec
xor
push
adc
push
adc
aad
shll
cmp
xor
pop
test
adc
adc
dec
push
mov
mov
cmc
push
cmc
xchg
sbb
mov
adc
sub
xor
mov
cmp
xor
cmc
subb
mov
nop
mov
pop
push
add
and
or
mov
xor
push
pop
add
jl
pop
add
in
leave
xor
jmp
aam
mov
test
pop
xor
adc
popa
mov
and
ror
cmpsl
mov
sarl
sub
xor
mov
sub
loopne
or
lds
add
mov
sub
pop
roll
sbb
sbb
dec
testb
xor
sbb
push
cmpl
scas
or
rorb
gs
mov
rolb
je
adc
icebp
test
stos
adc
pop
stos
les
mov
addb
xchg
loopne
sub
stos
push
mov
icebp
add
lret
jecxz
sbb
rcr
lret
jb
sbb
insl
cltd
inc
shlb
or
ret
push
add
cwtl
jbe
cmp
add
imul
dec
jle
dec
pusha
mov
sbb
femms
and
mov
mov
inc
xor
mov
or
jg
aad
push
mov
lcall
out
jecxz
inc
pop
or
add
stos
or
push
cmp
jle
or
in
loope
add
inc
cmp
push
lock
iret
mov
add
add
jno
outsb
xor
addl
into
lds
decb
cmpb
xchg
jbe
push
xchg
mov
test
pop
ds
in
sbb
inc
xor
bound
or
mov
call
pop
sbb
aad
mov
push
add
add
xchg
cltd
mov
and
mov
or
mov
or
test
sbb
add
dec
or
xor
lods
addl
and
popf
jns
or
add
in
and
in
add
xchg
pop
ljmp
insb
shll
fisubl
pop
add
push
shrl
testl
stos
cmp
push
enter
movsb
pushf
or
and
popa
and
sarl
aad
add
rolb
pop
out
cmp
testb
rclb
xchg
push
and
and
into
in
jge
xor
fbstp
aad
or
pop
mov
ds
shlb
add
adc
pop
psraw
cmp
test
push
xor
adc
repnz
sub
rorl
loopne
sub
into
mov
add
cmpl
inc
or
shrl
push
push
xchg
daa
push
push
mov
push
movsb
or
sub
jmp
insl
rorl
dec
xchg
movsb
das
shlb
pop
adc
rclb
popa
cwtl
cld
and
inc
mov
fmull
cmp
loope
cmp
adcl
add
jp
in
jmp
ds
add
jae
add
pop
mov
leave
pop
add
mov
xor
insb
ret
pop
xchg
sahf
pop
adc
pop
push
adc
pop
inc
add
pop
cwtl
test
mov
pop
inc
pop
out
or
out
loope
aam
adc
arpl
adc
xor
push
mov
cmpsb
add
pop
pop
dec
xor
jecxz
or
sub
fmull
add
xor
push
sbb
jmp
adcb
jno
add
imul
outsb
jl
inc
test
and
jbe
mov
enter
adc
into
inc
mov
ret
mov
mov
je
add
insl
nop
repnz
inc
or
cmp
aad
pop
xchg
xchg
enter
xchg
addl
dec
mov
xor
ret
sbbl
mov
nop
mov
xor
push
add
inc
sbb
push
adc
pop
adc
lret
adcb
mov
data16
xchg
adcl
mov
pop
in
or
lahf
mov
inc
pop
mov
mov
push
leave
adc
fsubrl
push
adc
js
test
cmc
or
scas
sbb
inc
inc
pop
and
rorl
inc
sbb
xlat
add
call
xchg
notb
adc
call
adc
mov
addl
inc
sbb
inc
dec
mov
add
mov
jp
jnp
push
mov
mov
leave
pop
imul
adc
pop
mov
jge
inc
mov
incl
loopne
xor
jb
fcoms
roll
in
cmp
or
jno
adc
lcall
out
pop
mov
leave
xor
shrb
push
nop
cld
push
shl
inc
xchg
movsl
ret
inc
add
aad
mov
andb
loopne
repz
or
loop
or
rcrb
or
adc
push
xor
push
call
ljmp
mov
jno
adc
and
subb
dec
rolb
ss
mov
mov
push
mov
xchg
mov
sbb
adc
in
fildl
add
icebp
push
into
shlb
mov
divl
loopne
sar
mulb
aad
or
push
or
sbb
sbb
and
leave
movsl
adc
ret
leave
sahf
or
jl
dec
icebp
mov
je
js
push
xor
mov
cltd
adc
xchg
loopne
jns
mov
repnz
sbb
in
add
xchg
and
push
test
hlt
mov
in
push
cwtl
movsl
mov
dec
lahf
xor
jbe
sbb
shl
pusha
push
rcll
mov
and
jne
sbb
nop
mov
or
or
add
ret
add
sbb
cmp
lahf
push
inc
adc
adc
pusha
out
lock
sahf
sub
jecxz
adc
cwtl
inc
sbb
or
adc
sahf
stos
pusha
cmp
push
dec
mov
push
mov
adc
push
movsb
inc
shll
mov
pusha
push
aam
aad
cmp
sbb
into
inc
je
add
ret
arpl
inc
std
mov
mov
adc
ds
jp
cmp
add
jae
mov
stos
push
add
out
inc
push
or
lods
push
cltd
vandnps
xor
push
dec
int3
and
xchg
mov
jnp
sbb
pop
sub
cmpl
loope
dec
mov
xor
ret
adc
sbb
enter
imul
pop
xchg
jmp
lcall
xor
jmp
cmp
adc
lcall
mov
add
aam
or
push
sbb
andb
dec
mov
sbb
inc
adc
pushaw
xchg
push
mov
shlb
xor
adc
icebp
cmpb
pop
cmp
aaa
ljmp
xor
add
xchg
jg
jmp
mov
adc
jb
xchg
and
adc
aad
adc
adc
adc
push
pop
rorb
pop
or
sbb
stc
sub
push
lock
jne
mov
dec
outsb
stc
rolb
and
sbb
gs
push
jo
mov
sbb
inc
orl
stos
mov
into
test
push
les
leave
cwtl
push
arpl
adc
lds
pop
leave
repnz
jns
xchg
movsl
mov
insb
rorl
adc
mov
test
push
test
sub
jmp
dec
mov
inc
or
in
ds
sub
in
or
jnp
ret
xor
jb
xor
inc
inc
dec
inc
or
scas
mov
test
fwait
xchg
push
shl
mov
xchg
out
mov
subl
mov
xchg
pop
add
and
shr
into
jne
push
les
push
pop
in
xor
mov
push
les
enter
inc
and
add
push
les
push
push
out
jge
sbb
sub
loop
adc
mov
push
push
xchg
xchg
mov
adc
add
dec
ljmp
pop
mov
cmp
rcpps
icebp
stos
pop
mov
jae
dec
xor
adc
dec
mov
cld
sbb
sbb
lock
mov
cmp
test
fcmovne
shll
and
gs
mov
popf
mov
loope
adc
ret
jo
fldt
shlb
imul
mov
push
and
ret
dec
test
sub
add
push
ljmp
dec
inc
rolb
rclb
ret
ret
push
push
xor
xchg
or
sub
inc
push
pop
add
popf
mov
sub
lcall
movsl
sarb
adc
mov
cmp
cmc
rcrl
adc
cmp
call
inc
sub
sub
inc
cmp
pop
mov
mov
test
add
jb
pop
test
sbb
fs
clc
clc
call
subl
es
gs
ret
dec
call
addr16
cli
or
pushf
sub
gs
jne
mov
push
add
sub
ret
sbb
gs
and
sbb
xor
jo
sub
sbb
pop
pop
push
clc
aam
inc
stc
push
jb
cmp
adcl
leave
adc
bound
push
nop
and
nop
lret
xchg
leave
push
cmc
inc
inc
dec
and
add
ret
andb
and
orb
jmp
mov
push
or
add
sub
inc
mov
jl
pop
add
or
pusha
mov
icebp
stos
daa
call
sbb
lods
xor
push
bound
add
mov
lock
adc
sbb
inc
or
cwtl
push
push
mov
xor
pop
rclb
add
in
adc
cmpsb
push
cltd
cmp
stc
shll
adc
test
imul
and
add
fcoms
xchg
test
and
xor
cmp
in
je
add
jg
sbb
dec
and
and
mov
mov
push
pusha
lret
stc
jg
nop
addl
pusha
cmc
movsb
rcrb
jmp
scas
sbb
jb
or
sub
xor
inc
adc
mov
dec
pushf
adc
subb
adc
enter
ds
rclb
shll
sub
aam
jae
clc
lds
dec
out
inc
dec
inc
repz
imul
and
cmpsb
or
add
sbb
mov
jl
cmpsl
mov
xchg
xorb
cmc
push
adc
or
pop
cmp
xor
icebp
adc
inc
scas
test
or
into
adc
pusha
push
cs
out
xor
adc
js
mov
jbe
jmp
jp
dec
push
cs
sarb
test
inc
ret
adc
or
mov
pop
call
popf
pop
mov
and
cmp
rol
hlt
cmp
push
hlt
or
pop
add
cmpl
pop
mov
aad
sub
cld
icebp
inc
pusha
jb
xor
xlat
jmp
inc
add
inc
pop
adcb
jecxz
or
cs
adc
add
fwait
call
out
or
or
inc
xchg
mov
add
fxsave
push
inc
xorl
mov
inc
aam
dec
xchg
jae
mov
and
test
sbb
push
test
push
push
sub
sbb
mov
sub
dec
test
inc
pushf
lcall
cltd
loopne
mov
push
pop
scas
cli
scas
xor
jae
inc
inc
or
xchg
js
loop
outsl
push
mov
cmp
jl
cld
dec
add
in
push
clc
lods
stos
mov
jg
mov
add
pop
gs
or
test
jb
andb
jo
flds
mov
inc
or
inc
mov
push
add
jns
cmc
add
ljmp
rol
dec
push
mov
push
ljmp
add
ret
mov
mov
pop
add
sbb
mov
xor
shrl
add
sub
sbb
dec
pusha
test
xchg
lret
and
add
xchg
sbb
jle
stos
lds
sub
lcall
push
sub
jae
inc
pop
adc
lds
call
add
imul
ja
test
cmp
fcoml
in
cmp
arpl
aam
les
add
dec
mov
or
jb
or
cmp
ja
or
jp
hlt
jp
mov
add
lret
test
leave
ret
mov
iret
ret
or
push
lret
icebp
or
jb
rcr
bound
push
nop
test
push
scas
xchg
sub
fiadds
stc
movsl
cli
add
push
aad
lret
sahf
sbb
add
rolb
hlt
push
inc
pop
test
mov
sub
adc
mov
and
mov
cmc
cmc
push
rolb
mov
into
sbb
sub
cmp
mov
ret
pusha
mov
inc
pop
add
mov
rolb
lahf
mov
and
notb
adc
add
adc
xchg
xor
push
rolb
aas
ret
ret
rcll
pop
leave
or
shrl
daa
in
sbb
ficoms
dec
mov
push
addr16
sub
xchg
data16
and
bound
adc
xchg
dec
push
cmp
mov
shll
dec
fwait
dec
mov
rolb
mov
rcrl
ret
test
lcall
mov
es
sbb
bound
mov
mov
mov
adc
bswap
jp
rclb
je
inc
push
xchg
test
push
loopne
shrb
add
and
lret
fs
add
sbb
ret
out
push
outsb
push
pop
adc
xor
addb
sbbl
adc
and
cs
ficoml
sub
sub
mov
add
pop
inc
xor
add
sbb
pop
or
and
lret
add
repnz
in
fadd
xchg
mov
jp
push
cltd
mov
and
test
popf
mov
add
pop
add
jecxz
inc
adc
es
jo
add
in
and
pop
imul
sub
lret
pop
push
mov
jne
pop
lds
xchg
jl
mov
in
or
pop
bound
xor
mov
jno
sbb
xor
loope
push
lods
aam
ja
or
loope
and
push
data16
shll
xor
hlt
push
repnz
add
add
jns
rcll
mov
push
xchg
inc
push
jb
mov
out
test
or
dec
stos
lods
add
push
or
cmp
mov
push
pop
push
mov
adc
subl
scas
ret
pop
or
push
cmp
adc
push
dec
dec
push
cs
pusha
cmp
xchg
gs
cltd
out
xchg
ja
fnstcw
add
lea
mov
cmpsb
rcrb
push
pop
adc
sbb
or
adc
jno
sbb
mov
and
fisubl
mov
inc
sbb
or
add
add
in
mov
pop
pop
das
xchg
mov
orl
add
push
xchg
mov
addl
rorl
icebp
out
or
into
sarb
in
ja
into
lock
sbb
mov
jne
mov
lds
mov
rclb
xor
jmp
jo
pop
enter
pop
cmp
mov
inc
addl
mov
daa
sbb
fs
mov
pusha
ljmp
int
in
xor
cmpb
icebp
add
js
and
jg
push
push
push
sub
ret
movsb
xchg
cmp
cmp
leave
icebp
add
or
xor
push
aam
push
movsl
cmc
lock
dec
push
test
test
lock
push
test
stos
les
push
mov
mov
xor
xchg
lret
cs
rorl
adc
mov
mov
mov
mov
call
adc
push
pusha
and
push
jp
subl
xlat
lret
orl
xchg
mov
adc
sbb
out
sbb
xchg
jge
loope
sbb
sbb
roll
sbb
push
jge
sub
sbb
orl
mov
sub
rclb
adc
je
jne
sarl
scas
lea
push
aad
das
ljmp
cmp
and
lret
sbb
adc
test
pop
or
dec
cmpsb
jae
lret
sbbb
and
jae
push
popf
adcb
jne
rcl
xchg
sbb
mov
rclb
pusha
push
xor
push
push
jno
mov
shrl
add
sti
jns
icebp
sbbl
pop
push
les
stos
jne
xor
push
scas
add
add
xchg
push
addr16
push
mov
filds
int3
add
adc
lret
adc
cmp
movsl
jb
lret
jl
popf
jb
out
mov
sub
sbb
sbb
inc
pushf
cmpb
stc
mov
xor
jne
mov
imul
push
inc
inc
sbb
test
rclb
icebp
loopne
test
es
push
shlb
mov
fwait
push
sub
and
pop
test
ud2
in
xchg
mov
mov
mov
cmpsb
and
mov
cltd
mov
stos
dec
add
cmp
sbb
ljmp
adc
je
into
mov
lret
and
jo
inc
aas
test
or
loopne
inc
rorl
ss
test
add
cmp
xchg
insl
popf
adc
stos
push
js
or
in
and
inc
popa
cmp
or
ss
push
and
loope
aad
xor
xor
dec
stos
dec
dec
adc
or
add
push
sbb
pushf
inc
int
sbb
sahf
xor
cli
outsl
pop
jb
call
mov
ret
sub
pushf
add
xor
jb
push
adc
inc
sbb
sub
mov
movsb
dec
add
fisubrs
push
lock
push
pop
push
adc
subb
loopne
ret
ss
add
mov
push
out
aad
in
add
and
mov
sub
loopne
jecxz
mov
out
aaa
pop
js
sahf
loopne
dec
cmpl
orb
push
adc
jb
jbe
xor
cmp
loop
das
insb
pop
xor
add
and
and
mov
mov
ja
adc
push
dec
sub
inc
sbb
inc
dec
cld
add
mov
sbb
mov
adc
es
aad
mov
dec
cmp
mov
orb
push
jl
push
push
out
mov
ret
dec
shlb
stos
and
sbb
dec
jbe
jae
adc
inc
scas
mov
inc
dec
or
mov
outsb
lds
inc
cmp
inc
xchg
mov
mov
inc
fs
scas
mov
dec
inc
mov
mov
push
sub
jno
xorl
test
aam
and
pop
dec
xchg
mov
imul
jg
or
push
xchg
inc
pop
lret
sub
stos
pop
dec
push
xchg
and
nop
mov
into
cltd
jg
mov
fnstcw
jmp
pshufw
push
push
enter
sahf
xor
sbb
sahf
jmp
adc
popa
hlt
out
push
clc
outsl
add
push
adc
mov
je
test
adc
loope
addb
pop
add
dec
roll
add
bound
scas
add
sub
rolb
or
enter
or
inc
xor
push
xchg
or
ljmp
inc
in
mov
ret
je
je
push
pop
push
add
dec
adcl
mov
in
push
xchg
or
ljmp
mov
sbb
addr16
and
stos
out
mov
push
scas
add
cmp
mov
adcl
push
add
adc
or
inc
mov
add
lcall
lods
mov
ret
subl
pop
sub
push
dec
les
mov
inc
cmp
ds
mov
hlt
sti
das
lock
push
les
enter
dec
and
dec
enter
cli
pushf
or
mov
cmp
push
and
outsb
js
nop
loop
lds
dec
inc
sub
push
sbb
call
repz
pusha
adc
subl
insl
push
pushf
loope
push
add
cmp
sub
inc
jmp
adc
loopne
rol
adc
gs
mov
push
dec
outsl
lret
inc
je
fdecstp
cmp
push
and
stos
lahf
xchg
and
jmp
mov
jmp
sub
pop
inc
add
daa
jge
add
je
mov
add
add
popf
mov
inc
mov
repnz
dec
xchg
xchg
ficomps
mov
jmp
mov
push
dec
add
add
sysret
aam
adc
stos
mov
add
insb
nop
or
enter
inc
je
sbb
mov
adc
data16
stc
call
inc
call
and
les
mov
cwtl
fstps
test
scas
mov
dec
push
adc
add
xchg
mov
sub
push
outsb
push
push
rolb
fcompl
lds
jmp
inc
jp
shlb
push
or
mov
daa
inc
add
xchg
test
or
and
lret
or
inc
add
je
jp
test
xchg
cwtl
imul
ror
les
pmulhw
popf
add
add
sub
das
or
cmp
mov
rolb
inc
xchg
aaa
int3
xchg
or
dec
mov
mov
mov
pop
push
xor
fistpll
rorl
mov
pop
lret
mov
jmp
add
jle
arpl
xchg
stos
test
mov
pushf
stos
fisubrs
jne
imul
dec
sub
push
int
sbb
push
mov
inc
cmpsb
add
and
je
hlt
test
roll
push
add
arpl
adc
add
push
mov
pop
scas
sub
sub
push
roll
cmp
push
mov
adc
xchg
adc
ret
jp
sbb
mov
test
loop
mov
dec
pop
jae
adc
dec
popa
add
addr16
js
sbb
xor
inc
int
push
imul
pop
adc
ret
mov
and
addb
inc
push
jo
lcall
test
inc
test
or
rorl
push
inc
xchg
into
push
add
sbbl
shrl
ret
adc
pop
adc
jo
push
imull
mov
push
pop
ret
sub
pop
cli
fs
mov
and
pop
sbb
and
icebp
jno
add
mov
cwtl
cmpsl
cmp
adc
jmp
mov
adc
sbb
mov
outsb
and
sbb
and
mov
mov
cmpsl
fadds
js
vphadddq
inc
loop
enter
bound
mov
adc
sub
icebp
cmpsl
mov
insl
or
mov
nop
out
mov
xor
adc
xchg
adc
sbb
or
mov
fs
push
sub
push
push
adcl
mov
fcoms
and
arpl
andl
lret
mov
sbb
or
rcll
adc
or
pop
mov
cmp
test
adc
lds
insl
les
pushf
out
and
mov
xchg
jae
dec
sub
push
and
jo
int
cmp
lcall
jno
sbb
push
ds
sbb
mov
adc
mov
inc
mov
sub
movl
add
pop
cld
stc
repz
cmp
mov
shr
jecxz
cltd
int3
iret
lahf
aas
jg
jae
xchg
xchg
orb
pop
andl
mov
sub
mov
aas
jg
and
dec
shrl
lods
fdivr
repz
mov
aas
sub
loope
loope
xchg
aas
jg
cld
lds
popa
leave
fcmove
fldcw
ljmp
sbb
std
mov
jg
cld
stc
int3
pop
jne
dec
out
outsl
sub
fadd
cmpsl
cmp
iret
lahf
aas
repz
xchg
inc
rorl
data16
dec
add
cld
stc
repz
leave
adc
fstpl
mov
int3
lods
lods
out
out
pop
negb
std
aam
stc
repz
in
dec
adc
mov
out
pop
lahf
aas
jg
and
dec
lea
xchg
int
test
stc
repz
fstps
dec
loope
push
mov
enter
out
jg
cld
aam
leave
mov
shrl
repz
lahf
scas
arpl
dec
adc
mov
jg
cld
stc
sbb
inc
or
mov
push
je
xor
jmp
lahf
aas
push
push
lds
movsb
inc
jmp
cmp
cld
stc
repz
mov
push
repz
ds
mov
cmp
jg
jmp
inc
push
lods
loopne
cld
stc
repz
xorl
daa
sub
sbb
sub
adc
repnz
daa
out
mov
repz
mov
push
mov
mov
lahf
fdivrl
jg
cld
add
insb
sub
xor
iret
lahf
movsb
popf
cld
shl
in
mov
push
pop
dec
inc
jg
cld
stc
sub
adc
nop
mov
lock
lahf
aas
rcrb
pop
cs
scas
pusha
and
cld
stc
repz
mov
ret
adc
jg
mulb
leave
aad
negl
push
mov
out
test
jne
adc
xchg
icebp
xchg
mov
fisttpll
inc
dec
shrd
sahf
hlt
mov
repz
iret
out
mov
sti
or
inc
aas
jg
cld
dec
xchg
popa
dec
xor
std
cmc
out
or
pop
dec
xlat
je
cld
stc
rep
fs
jns
push
movsb
pop
lock
int
out
sbb
iret
lahf
aas
jg
sub
aad
push
push
and
scas
cld
stc
repz
fistps
push
cmp
jne
rcl
lahf
pushf
lahf
aas
jg
adc
es
in
fdiv
jmp
mov
repz
inc
xchg
or
add
sbb
cld
add
cmpsl
shll
lea
repz
lahf
dec
out
mov
adc
and
jg
cld
stc
jnp
jmp
jecxz
inc
inc
adc
repz
aas
jbe
daa
sub
test
lock
popa
imul
pop
and
repz
jp
inc
push
xor
jne
testl
rorb
notb
popa
push
repz
lahf
aam
mov
mov
push
push
xchg
sub
leave
or
mov
insl
jns
iret
lahf
aas
fisttpl
jmp
popf
pop
popa
lcall
add
stc
xchg
inc
pop
push
mov
xchg
lahf
aas
jg
and
bound
inc
iret
push
mov
out
jae
loope
xchg
mov
cmp
adc
cmp
lahf
aas
decl
iret
pop
sub
xchg
sub
repz
mov
fisttpll
scas
lahf
aas
jg
mov
sbb
or
cmpsb
mov
jb
sti
pop
pop
loopne
inc
jne
hlt
inc
xchg
sub
jg
cld
cmp
in
outsl
adc
xchg
inc
jo
addr16
out
lahf
xlat
pop
scas
ret
mov
mov
inc
pop
jg
cld
stc
out
pop
lods
add
jnp
ret
dec
cs
sti
inc
xlat
out
lahf
aas
fmull
scas
pop
jb
ja
test
mov
cld
stc
repz
pop
adc
test
aaa
shlb
jg,pt
and
cmpsl
dec
maskmovq
idivl
stos
or
subb
adc
mov
xchg
mov
inc
xchg
mov
lock
iret
test
xor
pop
jg
cld
stc
ljmp
lods
mov
push
lcall
lahf
aas
ja
sti
in
xor
xor
cld
stc
repz
stos
jp
sar
std
movsl
jbe
cmp
xchg
lahf
aas
jg
das
or
mov
mov
lea
sbb
jg
cld
stos
adc
idiv
dec
jns
loop
push
iret
lahf
aas
push
xlat
and
shl
pop
mov
cld
stc
repz
movsb
insl
push
in
or
pushf
shrb
lahf
aas
jg
push
setbe
mov
je
push
inc
outsb
cli
cld
stc
repz
enter
pop
fcoml
inc
dec
push
loop
xor
aas
jg
jne
jge
std
cmp
cmpsb
in
cmp
jb
inc
stc
repz
fs
aad
pop
push
and
push
std
push
mov
jg
cld
jnp
pop
dec
gs
ja
cmp
inc
aam
add
shll
or
mov
stc
sub
sarb
xchg
xor
cwtl
pop
adc
iret
lahf
aas
mov
mov
ljmp
stc
rep
add
test
pop
sbb
or
iret
lahf
aas
jg
mov
cmp
inc
movsl
cli
xor
xor
adc
stc
repz
pop
or
mov
adc
mov
cs
jno
or
lds
jle
stos
mov
rcrb
js
mov
fs
outsl
loope
xor
out
push
and
std
mov
rcr
add
jle
jg
enter
stc
outsb
sar
stc
repz
fs
sub
dec
sub
inc
out
aas
sahf
stos
mov
outsb
jl
pushf
or
cld
stc
repz
incl
push
or
xchg
lahf
aas
jg
inc
ja
dec
xor
clc
inc
inc
les
cld
jecxz
lret
mov
xor
ja
iret
lahf
aas
lock
push
loop
mov
repz
mov
mov
adc
pop
pop
sub
aas
jg
jle
push
std
sub
icebp
push
sub
stc
repz
lahf
test
roll
fs
jg
shl
pop
aas
aad
rcr
pop
leave
popf
pop
out
lahf
aas
mov
or
sub
mov
repz
outsl
hlt
out
xor
cwtl
lods
jns
in
std
push
mov
adc
sbb
bound
pop
jecxz
dec
cld
stc
repz
mov
dec
aaa
in
push
lahf
aas
jg
inc
mov
daa
xchg
nop
call
jp
xor
repz
xchg
js
cmp
xor
popa
ret
sub
add
cld
mov
pusha
pushf
lret
subl
out
lahf
stc
mov
pop
xor
movsb
stos
xor
enter
stc
cmp
in
mov
sbb
scas
add
cli
sub
iret
lahf
aas
mov
dec
mov
bound
dec
xor
sbbl
aam
test
jne
pop
jle
daa
neg
daa
lahf
aas
jg
jo
sbb
repnz
cld
stc
repz
inc
dec
scas
jg
inc
sbb
sbb
inc
and
jg
push
scas
mov
pop
orb
xchg
out
out
lea
repz
mov
mov
adc
push
jge
aaa
pushf
iret
lahf
jg
lock
out
adc
mov
push
out
push
xor
sub
xor
iret
aas
jne
jmp
push
mov
data16
insl
mov
dec
aad
repz
call
fwait
hlt
dec
dec
or
or
jg
cld
cs
pop
fs
or
aas
aas
adc
out
lahf
fsubp
cltd
pop
adc
fsubrs
jg
cld
stc
fcmovnbe
mov
cmpl
lods
inc
repz
sbb
iret
lahf
aas
pop
and
mov
jmp
cld
stc
repz
pop
mov
mov
rclb
xchg
iret
lahf
aas
jg
js
sbb
mov
pop
and
cmp
repz
sbb
mov
xchg
aad
adc
aas
adc
lahf
inc
xchg
adc
adcl
icebp
leave
pop
movsb
leave
cli
out
lcall
out
lahf
aas
adc
mov
add
pop
test
jecxz
pop
cld
lock
mov
add
insl
and
jg
mov
aaa
dec
jge
push
movzwl
or
in
hlt
ja
scas
push
out
jg
cld
push
inc
xor
inc
mov
add
test
lahf
cmp
push
sub
popa
cmp
cld
stc
cmp
xorl
shlb
jge
fwait
push
repz
aas
xchg
adc
dec
pop
stc
push
xchg
jg
cld
stc
adc
std
ret
sbb
xor
jnp
add
xchg
out
lahf
aas
out
je
mov
jno
aas
insl
cld
stc
repz
inc
cmp
cs
jmp
lahf
aas
jg
in
jge
lcall
jge
cld
stc
repz
cld
mov
mov
imul
cmpsl
dec
jle
xchg
jb
pop
mov
inc
inc
cld
stc
repz
cltd
push
es
xchg
daa
mov
lahf
aas
jg
push
push
movsb
dec
stc
dec
mov
push
mov
stc
repz
xlat
cmp
lcall
lahf
aas
jg
adc
pop
jns,pt
inc
xor
leave
notb
mov
repz
jb
outsb
lcall
test
frndint
stc
repz
in
xacquire
or
sub
jg
cld
sub
adc
cmp
fdivl
xorb
iret
lahf
shlb
movsl
in
jp
stos
cld
loope
mov
fcmovnu
clc
adc
lahf
aas
jg
dec
mov
jmp
or
repz
hlt
lahf
xchg
stc
call
test
add
pushl
mov
in
test
repz
aas
pushf
xchg
ja
mov
loop
jg
cld
stc
pop
xor
xor
push
rcrl
stos
pop
out
test
aas
dec
mov
sbb
mov
cld
stc
repz
pop
or
mov
push
je
loopne
negl
push
cmpsb
add
pop
mov
iret
es
jle
fists
scas
adcl
jg
inc
xchg
sbb
stos
push
cmpsl
scas
stc
repz
rcl
push
shrb
ja
dec
jbe
jae
aas
jg
cld
bound
adc
inc
imul
scas
jmp
shll
inc
cmpsw
jg
and
out
lahf
aas
mov
sbb
test
xchg
ret
lret
fildl
dec
cld
stc
rep
dec
mov
jo
vmwrite
aas
jg
fcoms
xchg
shlb
repnz
sbb
loopne
leave
stc
repz
inc
rorl
inc
sub
pop
jmp
aas
jg
cld
jmp
or
repz
pop
inc
rorl
out
lahf
rcrb
mov
push
pop
jg
cld
stc
pop
gs
enter
push
sti
lds
adc
adc
mov
fbld
cld
stc
repz
in
push
test
gs
scas
pop
test
sahf
aas
jg
and
clc
lock
mov
es
xor
pusha
pop
out
pop
fwait
aaa
outsl
fimuls
pop
stos
pop
movsb
jg
jo
jmp
jns
out
fistps
icebp
lret
push
mov
outsl
fidivrs
outsb
mov
out
fadds
and
xchg
jl
mov
jns
xor
fbstp
jecxz
sub
aaa
jle
jge
mov
je
in
jge
rep
je
mov
xchg
adc
and
push
in
iret
lahf
push
add
cmp
push
cld
stc
repz
inc
mov
cmc
addr16
jp
mov
repnz
jg
cld
cmp
xchg
push
mov
repz
lahf
add
jnp
jb
outsl
ss
lahf
jg
in
stc
cmpsb
btr
sahf
jbe
stc
repz
jp
clc
cli
inc
scas
adc
adc
mov
xor
mov
mov
lahf
inc
mov
jae
mov
loope
jge
cld
stc
sahf
pop
pop
hlt
das
jecxz
call
pop
subb
push
andb
xor
decl
repnz
repz
cmpsl
inc
adc
lds
dec
ja
push
or
inc
sbb
test
adc
push
xchg
outsb
sbb
push
xchg
out
mov
enter
xor
fstpl
shl
add
inc
out
lahf
jg
fstps
pop
xchg
roll
add
stc
repz
dec
and
mov
xchg
loope
mov
ret
and
jg
lods
clc
ret
jns
out
and
mov
out
loop
loopne
inc
cld
inc
fs
cmpsl
iret
lahf
jg
call
or
sub
mov
jbe
mov
stc
repz
lds
sub
add
dec
jle
iret
mov
jb
incb
inc
xor
shll
or
stc
repz
cmpsb
xchg
pop
jmp
imul
xor
or
pop
xlat
popa
mov
mov
iret
lahf
aas
xor
dec
aam
dec
insl
lods
xchg
cld
stc
repz
imul
dec
lret
jg
inc
addr16
add
lahf
aas
jg
ja
dec
cli
shll
xchg
xabort
cld
stc
repz
mov
jg
xor
testb
jns
aas
jg
out
jb
cmpsb
jb
rclb
and
mov
jg
packssdw
in
xlat
jbe
mov
aas
jg
cld
test
addl
dec
dec
mov
dec
int3
jb
repz
lahf
cwtl
cmp
test
mov
ss
mov
pop
dec
jg
cld
stc
jmp
ljmp
test
in
sahf
cltd
mov
mov
fildl
pop
fwait
ja
popa
dec
mov
gs
dec
jns
out
mov
dec
in
sahf
cmp
aaa
outsl
fidivrs
adc
rclb
pop
push
xor
repz
fwait
xlat
fnstenv
or
push
outsl
fidivrs
jb
int3
or
mulb
fwait
aaa
or
imul
mov
inc
stc
sbb
fidivrs
dec
mov
outsl
popa
fisttps
fwait
aaa
outsl
xor
sbb
adc
mov
push
insb
insb
shrb
out
das
xchg
scas
in
jg
and
outsl
ficomps
xor
fiadds
clc
inc
xchg
mov
cmp
ja
inc
cmpl
or
cmp
int3
das
sub
shll
shlb
outsl
bound
cmp
fdivr
test
xchg
int
mov
mov
imul
iret
lahf
add
jmp
loop
shl
adc
cmpsl
aas
pop
stc
stc
scas
xorl
push
rcl
stos
pop
subb
cs
lahf
cld
xor
cmpl
cld
stc
sti
adc
cmp
sub
inc
sbb
roll
popa
mov
push
and
stc
test
add
sahf
aas
sbb
jp
lret
repz
lahf
mov
mov
add
enter
push
and
pop
mov
repnz
mov
xchg
mov
mov
inc
cmpb
xchg
push
pop
mov
rclb
fwait
aaa
outsl
ficoms
cmp
cmp
inc
fs
lds
adc
and
scas
outsb
aas
jg
sbb
not
mov
cs
mov
lahf
addr16
adc
popf
mov
outsl
out
mov
mov
jp
mov
je
adc
dec
xor
aas
cs
jg
inc
shrl
loopne
dec
dec
dec
mov
cmp
je
iret
lahf
aas
nop
push
test
lds
mov
in
jecxz
cmpsl
mov
mov
xchg
lahf
test
xchg
pop
lods
enter
cmp
mov
xchg
xchg
aas
jg
lea
xchg
daa
insb
and
out
repz
lahf
stos
fdivs
push
sahf
nop
sahf
jge
xchg
mov
mov
cld
stc
popa
shlb
outsl
add
insl
push
and
enter
arpl
xor
sbb
xchg
adc
les
daa
push
cmc
push
repz
lahf
es
daa
xchg
push
int
sbb
cld
stc
or
pusha
ret
adc
or
pushf
out
lahf
aas
jnp
loope
loopne
and
ljmp
repz
mov
sbb
in
insb
ficomps
mov
inc
iret
lahf
aas
jg
aad
movsl
sahf
icebp
add
push
cld
stc
repz
sahf
mov
fwait
push
and
fwait
lahf
aas
jg
aad
ss
daa
gs
gs
lcall
out
xchg
xchg
xor
mov
xchg
jno
or
sahf
cld
das
jb
lods
movsl
pop
scas
mov
aaa
outsl
fisubs
int3
std
jnp
hlt
fwait
cmp
inc
xor
lock
inc
xor
xchg
sub
lahf
aas
jg
test
xchg
mov
push
cld
stc
repz
dec
mov
fwait
xchg
adc
mov
pop
lahf
cld
pop
popa
lods
mov
pop
lcall
dec
cmp
cld
cld
stc
repz
cli
pop
pop
pop
lahf
mov
jg
mov
sub
or
aam
repz
sub
pop
push
cmp
mov
mov
sub
ljmp
repz
shll
xchg
popf
out
dec
addr16
repz
daa
out
mov
shll
jg
aas
jg
pop
repnz
aad
cmp
jp
enter
scas
xchg
stos
pop
mov
int
loop
enter
mov
mov
jns
xchg
inc
scas
adc
outsl
int3
jne
pop
sub
sub
int
aaa
outsl
sti
fimull
mov
mov
icebp
enter
xor
cld
loope
ja
mov
jns
pop
stos
or
lret
out
lahf
aas
dec
pop
inc
imul
cld
stc
repz
vlddqu
ja
sub
insb
cld
cmp
jg
stc
repz
mov
aaa
test
xchg
fbstp
or
incb
dec
insb
bound
inc
outsl
fidivrs
xlat
shl
test
in
int
aaa
pop
in
sub
jmp
scas
loopne
mov
in
pop
test
in
mov
push
icebp
int
aaa
outsl
lods
pushf
cld
test
inc
jne
es
pop
lock
mov
pop
pop
sahf
insb
fidivrs
adc
mov
sti
mov
fwait
aaa
out
adcb
ret
rcll
int
and
mov
xchg
adc
or
icebp
testb
repz
fwait
stos
push
push
mov
add
mov
cli
hlt
mov
or
aaa
inc
mov
aaa
pop
aas
mov
jno
mov
and
mov
in
out
xlat
aad
jo
xor
cmp
fwait
aaa
outsl
jg
cmp
sbb
lcall
cmp
fucom
testl
out
mov
mov
mov
push
out
push
shl
cld
add
stos
pinsrw
inc
js
jg
shll
ret
add
pushf
lahf
aas
jg
push
out
mov
in
add
popf
repnz
stc
repz
pop
jae
jae
aas
pushf
push
repz
mov
jg
cld
mov
filds
mov
cmp
out
lahf
add
call
mov
dec
je
stc
fdivrl
jle
cmc
xor
iret
lahf
jg
xchg
sub
jge
fistpll
cld
stc
repz
js
add
cmp
dec
repnz
aas
jg
dec
jb
leave
mov
test
cld
stc
repz
out
mov
mov
jecxz
jnp
or
aas
adc
outsl
mov
mov
jecxz
daa
scas
test
sbb
inc
insb
jg
cld
stc
int
int
mov
loopne
sub
ret
mov
iret
lahf
aas
in
lret
icebp
lret
mov
stc
repz
and
cld
jg
adc
or
in
iret
lahf
aas
jg
fwait
pop
testb
push
jb
mov
in
pop
outsl
adc
pusha
mov
stc
repz
lods
adc
add
in
mov
cld
adc
test
dec
sbb
cmpsb
cmpsl
or
or
shlb
cld
or
mov
loope
test
movsl
outsl
inc
cli
adc
fistpl
ds
fwait
aaa
outsl
jmp
pop
sub
lods
dec
dec
sbb
jns
out
sbb
in
push
ja
clc
dec
lret
cltd
push
jo
fwait
aaa
outsl
ficomps
mov
sahf
jl
mov
rcll
repz
cltd
les
test
mov
outsl
fidivrs
fistl
mov
jbe
or
jg
cld
mov
mov
inc
mov
lahf
aas
icebp
mov
lret
fldenv
pop
jno
repnz
or
pop
fidivs
fisubs
shll
push
mov
lahf
popa
adc
dec
dec
cmp
ss
cld
stc
repz
sub
ljmp
lret
jbe
and
lahf
aas
jg
sbb
inc
xchg
fwait
jns
es
sbb
add
shlb
aaa
outsl
fidivrs
push
int3
call
mov
and
dec
mov
adc
lea
adc
shlb
mov
push
mov
mov
aaa
out
or
sbb
pop
loop
sbb
out
mov
cs
pop
in
fistps
mov
ja
aaa
outsl
fidivrs
cld
jl
mov
xor
out
fwait
adc
xor
outsl
movq
mov
xchg
cltd
cmpsl
cmc
addr16
push
jp
xor
out
fwait
aaa
xchg
xchg
movsb
stos
testl
dec
push
cmc
push
push
push
aad
mov
out
repz
inc
outsb
inc
ret
inc
lods
xchg
jle
xor
cld
stc
sti
push
sbb
sub
cmp
sbb
out
lahf
aas
fsubs
sbb
aas
add
jl
repz
jp
pop
bound
daa
or
repz
lahf
xchg
ja
mov
mov
push
in
lahf
jg
cld
stc
es
fwait
movsl
dec
cmp
inc
and
out
lahf
aas
loope
cli
pop
cli
repnz
stc
repz
dec
popa
pop
sub
mov
pslld
iret
lahf
aas
jg
into
lcall
pop
sbb
ja
test
sub
cld
stc
xlat
fucom
xchg
pop
mov
cmp
loop
xchg
iret
lahf
aas
jg
xor
sbb
jne
mov
cld
stc
repz
pop
pop
fistpl
inc
stos
test
or
lahf
aas
jg
mov
cli
ss
negl
mov
jl
out
pop
or
add
xchg
cmp
pop
mov
scas
fsubl
dec
mov
enter
dec
in
sahf
cmp
iret
fwait
lahf
aas
jg
sbb
rclb
pop
push
xor
xlat
stc
repz
fnstenv
or
push
push
mov
add
pop
or
mov
sbb
or
imul
xor
inc
stc
sbb
imul
outsl
ficoms
popa
fisttps
xor
sbb
inc
ss
movl
repz
fwait
insb
shrb
out
das
xchg
scas
in
jg
and
xor
mov
fiadds
clc
inc
adc
sbb
inc
out
fwait
aaa
cmpl
or
cmp
das
sub
mov
or
add
fsubl
into
outsl
fiadds
cmp
std
test
sbb
aaa
fisubs
loop
rcl
imul
fidivrs
shl
adc
cmpsl
scas
xorl
push
sarl
cli
add
stos
xchg
subb
ucomiss
mov
repnz
outsl
sti
pop
sti
adc
fs
aaa
outsl
inc
sbb
pop
mov
mov
outsl
push
and
jno
add
sahf
sbb
fwait
aaa
outsl
fidivrs
lret
mov
mov
add
enter
repz
repz
and
add
mov
jo
mov
mov
inc
cmpb
xchg
push
pop
mov
rclb
push
repz
fwait
cmp
cmp
inc
fwait
ljmp
sarl
loop
scas
outsb
or
inc
movsl
aaa
not
mov
repz
out
cs
addr16
adc
push
stc
repz
ds
jbe
pop
mov
jp
inc
mov
cld
mov
stos
dec
mov
test
mov
outsl
mov
mov
mov
repz
fwait
cmp
je
nop
push
test
outsl
fidivrs
mov
cmpsl
sbb
dec
cmp
cmpsl
test
nop
xor
insb
pop
dec
out
aas
jg
cld
stos
fdivs
push
sahf
nop
sahf
jge
xchg
mov
mov
out
lahf
shlb
outsl
add
insl
push
and
cld
stc
jge
arpl
xor
sbb
xchg
adc
iret
lahf
aas
test
add
cmc
push
es
daa
cld
stc
repz
push
int
sbb
stos
lret
xor
xchg
lahf
aas
jg
ret
adc
or
pushf
jnp
repz
loopne
mov
jl
js
mov
adc
pop
in
insb
fisubrs
xrelease
sbb
aad
movsl
sahf
icebp
add
push
jnp
cmpsl
iret
sahf
mov
fwait
push
aas
jg
cld
and
fwait
aad
ss
daa
gs
gs
pop
sub
lahf
lcall
xchg
mov
xor
cmp
or
fisubrs
sbb
arpl
out
fwait
insl
int3
std
jnp
hlt
fwait
cmp
mov
cmp
inc
xor
xchg
sub
test
fcmovu
movsb
xchg
mov
aas
jg
cld
dec
mov
fwait
xchg
adc
mov
repz
sahf
popa
lods
mov
xchg
pop
sbb
xor
test
fwait
aaa
outsl
and
mov
xchg
push
or
repz
or
aam
ficompl
cmp
pop
pushf
mov
sub
dec
jl
cmp
sub
xor
lcall
mov
daa
out
mov
shll
iret
lahf
aas
sarl
fnstcw
aad
cmp
js
rolb
scas
xchg
imull
adc
fsts
dec
enter
mov
mov
out
fwait
xor
inc
scas
adc
outsl
int3
jne
outsl
fidivrs
pop
mov
fimull
mov
jmp
int
aaa
mov
nop
push
shlb
xchg
push
imul
inc
sub
fcoms
stos
or
outsl
fidivrs
push
dec
pop
inc
imul
out
fwait
aaa
and
lret
lock
lock
lods
stos
adc
jb
pop
ja
sub
out
pop
flds
inc
mov
das
mov
aaa
test
cld
stc
repz
xchg
fbstp
or
sub
dec
iret
lahf
aas
jg
bound
inc
mov
push
xlat
shl
test
add
pop
in
sub
jmp
adcb
scas
loopne
stos
imul
dec
mov
dec
in
mov
push
icebp
lods
pushf
repz
cmp
cld
test
inc
es
xchg
outsl
fidivrs
mov
in
pop
sahf
sbb
adc
int
aaa
fisttps
sti
mov
xchg
ss
jns
out
jge
rcll
xchg
shll
mov
adcb
mov
aas
mov
stos
inc
fwait
aaa
outsl
fidivs
cltd
daa
inc
in
stos
push
push
inc
icebp
enter
fstps
push
xchg
cmpsl
out
cmp
sar
adc
fs
lret
cld
stc
repz
in
arpl
push
mov
and
iret
lahf
aas
jg
out
xlat
aad
jo
xor
cld
stc
repz
jg
cmp
sbb
lcall
insb
push
mov
arpl
testl
stc
repz
inc
adc
mov
mov
push
out
push
les
or
pusha
inc
js
aaa
outsl
fiadds
ret
add
pushf
push
out
mov
jns
out
in
add
popf
repnz
pop
jae
outsl
fdivrp
mov
repz
mov
mov
push
or
test
mov
jno
fidivrs
fwait
sbb
fdivrl
jle
mov
cmc
fldcw
sub
jge
fistpll
es
movl
xchg
xor
inc
fwait
aaa
outsl
fimuls
lahf
mov
lret
leave
mov
int
lret
stos
xchg
out
mov
mov
outsl
fidivrs
or
adc
outsl
mov
out
fwait
sub
add
sbb
inc
insb
int
int
mov
loopne
sub
out
fwait
aaa
ret
mov
xchg
lret
icebp
lret
mov
mov
xchg
adc
or
fwait
aaa
outsl
insl
in
mov
pop
testb
push
jb
clc
enter
ds
outsl
mov
adc
mov
iret
aas
das
lods
adc
add
in
mov
adc
cld
dec
sbb
cmpsb
cmpsl
or
mov
test
mov
cld
or
mov
jg
test
movsl
outsl
inc
cli
adc
fistpl
ds
repz
jmp
pop
sub
lods
dec
dec
sbb
inc
jle
cld
sbb
in
push
ja
clc
dec
lret
cltd
jo
repz
pop
or
scas
xchg
mov
pop
mov
out
into
in
aam
out
fwait
in
ss
shl
push
jb
lret
fdivrl
jne
enter
mov
mov
lahf
dec
pop
add
fwait
aaa
outsl
faddp
sub
jge
push
mov
ja
cmpb
int
in
test
fiaddl
jl
push
jbe
and
mov
outsl
add
ja
xchg
in
sbb
adcl
repz
jno
bound
mov
scas
outsl
fidivrs
leave
sbb
push
mov
out
lods
dec
inc
addr16
fwait
aaa
out
inc
xlat
mov
dec
cmp
repz
sbb
mov
in
stc
repz
addr16
and
adc
jns
aas
jg
cld
dec
cli
arpl
cwtl
sub
cmp
enter
lahf
cmpsl
roll
inc
push
cmpl
jg
cld
stc
mov
in
or
lock
in
inc
mov
add
fisttps
scas
dec
jle
leave
loope
xor
lahf
test
or
lods
pop
pop
lds
shl
addr16
adc
iret
lahf
aas
mov
xchg
jne
dec
sub
push
jge
pop
jl
rep
addr16
iret
lds
mov
fidivrs
jae
movsl
cmp
dec
cmc
jo
out
fwait
aaa
mov
xchg
push
adcb
mov
aas
jg
in
ds
push
sahf
xchg
test
pop
repz
lahf
pop
sahf
loope
int
iret
mov
jg
cld
stc
rclb
popa
lods
mov
out
xchg
jno
fwait
out
lahf
aas
sti
arpl
lcall
stc
repz
aad
push
nop
shlb
lahf
aas
jg
jl
mov
stc
sti
xor
loop
stc
repz
mov
push
sti
and
pop
lahf
aas
jg
and
xchg
in
loopne
mull
repnz
call
xor
push
addr16
inc
out
je
pusha
int3
jb
das
sbb
repz
mov
hlt
mov
das
outsl
fidivrs
insl
pop
test
jp
mov
shll
std
jg
xchg
test
xor
fwait
cwtl
and
fidivrs
aam
pusha
lret
add
outsl
std
jno
int
aaa
outsl
test
pop
aam
xchg
xchg
out
dec
dec
and
inc
shrl
ja
mov
fwait
aaa
outsl
fidivrs
aam
jg
or
decl
shll
pushf
pop
aaa
test
aas
cmp
out
xor
cmp
jo
sbb
out
fwait
aaa
push
fmul
jg
jg
add
mov
push
push
add
aaa
outsl
cmpb
xchg
enter
popf
enter
aad
out
mov
push
ss
popa
jns
out
popf
ss
mov
xor
outsl
fidivrs
in
xlat
in
push
adc
fwait
ja
inc
lret
ja
and
cld
and
out
jo
scas
dec
or
call
arpl
adcl
jp
out
inc
subl
clc
leave
test
repz
aas
jmp
inc
ljmp
aaa
outsl
fmulp
mov
sub
pop
pop
fistpl
out
cmp
dec
fisttpl
fnstenv
in
cmp
imul
or
lds
push
fwait
aaa
outsl
outsb
nop
jnp
xlat
sub
outsb
jae
and
movsb
mov
sbb
sub
sbb
add
push
ret
movl
sub
jge
mov
stos
pop
jmp
adc
call
mov
imul
push
jns
out
mov
hlt
jmp
pop
cmpsl
fnstenv
outsl
fidivrs
dec
cmc
push
imul
repz
fwait
arpl
nop
cmp
pop
adc
push
jp
inc
fidivrs
jae
jo
push
mov
lea
stc
stc
pop
aas
jno
mov
mov
dec
dec
cmp
outsl
fidivrs
mov
ss
jb
int
aaa
loop
int
loope
cli
je
pop
cmp
mov
mov
jb
hlt
mov
sub
jg
dec
int
aaa
outsl
lahf
dec
mov
cmp
sub
jl
jne
and
inc
push
mov
jle
out
mov
aam
lcall
popf
cld
stc
repz
scas
push
test
mov
repnz
fcmovne
lahf
aas
jg
add
test
jnp
lret
js
mov
sub
xchg
cmpps
aad
call
lock
adc
es
cmp
shl
mov
xchg
jns
lods
sub
aaa
outsl
fidivrs
jb
jae
pop
push
hlt
repz
mov
sub
sbb
push
jns
out
dec
mov
or
xchg
cmp
xorb
fidivrs
mov
add
daa
mov
repz
fwait
lahf
out
out
jp
jmp
and
fidivrs
push
call
hlt
mov
xchg
les
sbb
cwtl
and
push
cld
stc
subb
jo
dec
hlt
xchg
xchg
decb
andl
ljmp
pop
mov
push
xchg
and
sar
cld
mov
mov
mov
jne
iret
lahf
aas
jg
or
nop
adc
and
cld
stc
repz
inc
pop
sbb
inc
faddp
sarl
lret
push
lahf
aas
jg
out
mov
lods
imul
iret
mov
jp
inc
mov
mov
mov
cmpsl
data16
cwtl
movsl
mov
int
aaa
inc
data16
loop
mov
testb
repz
test
pop
lret
iret
add
ffreep
in
loopne
insl
bswap
and
movl
push
and
jg
add
cmp
push
negb
mov
and
out
or
sub
aaa
inc
inc
fidivs
adc
or
xchg
cmp
icebp
enter
out
adc
or
ret
jae
aas
jg
iret
cld
cwtl
movsb
out
jecxz
push
adcb
push
cmpsl
stc
repz
and
push
shlb
or
addl
xchg
xchg
test
mov
fmulp
jae
repz
lahf
jg
sub
mov
adc
cld
stc
and
lret
jb
xchg
xor
jmp
lahf
aas
cmp
dec
out
repz
xor
jg
pushf
jns
outsb
test
mov
mov
jp
sub
data16
xchg
pop
roll
xor
dec
push
es
mov
cmpsl
divl
aad
mov
mov
aas
outsl
fidivrs
scas
dec
or
and
out
fwait
aaa
faddl
dec
ret
xor
iret
in
sbb
mov
adcb
das
add
stos
insb
push
iret
mov
mov
jno
jns
out
in
push
insl
lcall
xor
adc
call
leave
jge
or
cld
test
xchg
sub
xor
pop
cmp
faddl
xchg
jae
imul
cld
stc
repz
sub
dec
hlt
lock
in
movsl
sbb
lahf
aas
jg
shrl
test
cli
ja
sbb
loope
adc
add
shll
outsl
ficoms
lock
xor
adc
cltd
pusha
in
push
jb
insl
lahf
aas
jg
push
insb
repnz
sbb
adc
repnz
and
cmp
mov
mov
fwait
mov
loopne
jmp
repz
bound
mov
loope
stos
xchg
xchg
aaa
outsl
jecxz
or
sub
icebp
rolb
dec
fildll
fbstp
inc
inc
fidivrs
cmc
and
jg
cld
stc
fsubr
negb
pop
out
xchg
mov
mov
lahf
aas
add
jne
mov
jae
fwait
xchg
data16
stc
repz
xchg
or
addb
push
mov
fsubr
aad
lahf
aas
jg
lods
outsb
int3
inc
xlat
dec
cmp
stc
repz
jle
cmpsl
imul
or
xor
xchg
pop
sbb
sub
pop
hlt
push
scas
adc
repz
lds
or
sub
shl
fildll
jg
cld
pop
cmpsb
out
mov
cli
movsb
mov
inc
js
aaa
les
sahf
bound
aas
cmp
rclb
mov
push
loop
xchg
pop
jo
cmpl
xlat
mov
popl
mov
push
loope
outsl
ficoms
fmull
mov
push
or
repz
fwait
xor
jecxz
stc
push
dec
dec
push
rcll
mov
popa
xor
add
aaa
outsl
fisubrs
or
scas
xor
int3
sbb
lods
jns
out
aas
cmc
and
xor
dec
mov
insl
insb
fidivrs
fldl
or
pop
mov
loopne
cmp
mov
mov
enter
pop
mov
ss
jno
cltd
in
jb
je
jbe
inc
pop
lahf
jmp
cmp
jne
aas
pusha
outsl
gs
call
dec
and
sbb
jg
xlat
in
and
push
xchg
lods
xchg
gs
cli
dec
lds
xor
cmp
jge
adc
iret
lahf
aas
ret
inc
ja
imul
roll
xor
push
mov
pop
out
ficoms
mov
or
inc
ss
inc
or
je
in
mov
pushf
ret
aaa
outsl
fiadds
std
inc
out
push
pushf
jg
repz
fwait
lcall
loopne
jne
mov
jns
xor
scas
rcl
pop
lock
inc
in
mov
aaa
mov
daa
pop
dec
push
mov
mov
cld
xorl
pop
xlat
jne
xor
std
push
mov
pop
jae
lods
js
or
jg
cld
xchg
pop
cmp
or
out
dec
dec
repz
lahf
mov
jae
pop
jg
outsl
arpl
cmp
sub
sbb
jbe
sahf
dec
mov
and
aas
mov
fdivl
push
mov
xchg
test
ds
cld
stc
repz
insb
jno
pop
fwait
xchg
std
push
int
ret
test
xchg
lahf
aas
jg
push
movsl
sbb
int
lds
pop
aaa
out
mov
xchg
daa
xchg
fidivl
fwait
arpl
inc
mov
repnz
xor
out
out
sahf
rcrb
fdivrl
or
jge
add
repnz
stc
inc
jg
outsl
sti
stos
mov
mulb
sbb
cld
stc
xlat
xlat
out
push
jmp
jb
sub
aas
jg
dec
or
add
shl
pop
jo
and
cld
stc
repz
test
jecxz
dec
stc
push
push
cmp
icebp
xor
jo
or
cmp
stc
repz
mov
mov
je
imul
aas
jg
cld
pand
and
jbe
and
ss
in
iret
lahf
sbb
lods
es
add
sti
cs
mov
jle
test
daa
xor
insb
loope
inc
xchg
xchg
push
enter
xor
scas
out
loop
inc
loop
sub
fidivrs
sbb
inc
jns
out
pop
int
aaa
outsl
cmp
inc
ds
loope
jmp
cld
stc
notl
movsl
daa
lret
adc
repnz
pop
push
or
loope
push
jb
dec
repz
testl
fidivrs
xchg
cmp
insb
scas
adc
pushf
add
loopne
fwait
aaa
lret
sub
jb
daa
dec
adc
sbb
repz
adcb
dec
push
imul
ficoms
inc
mov
ret
inc
jmp
jge
loopne
fwait
bt
movsb
dec
inc
mov
mov
scas
mov
int3
jle
jp
inc
into
sbb
fwait
aaa
outsl
das
fdivs
stos
repnz
push
mov
mov
sub
outsl
sbb
into
pop
jno
mov
inc
outsb
fdivrp
push
or
or
xor
int
imull
pop
pop
lret
fcompl
jg
arpl
out
xchg
iretw
lahf
aas
jg
xor
ja
sbb
sub
cld
stc
repz
xor
pop
lds
int3
sahf
and
push
repz
repnz
daa
pushf
cmp
mov
push
add
enter
iret
out
ret
jns
je
in
loopne
pop
mov
insl
fstpl
aaa
outsl
ficomps
jle
mov
stos
into
jns
out
xlat
xor
and
mov
push
pop
fnstcw
pop
out
xor
fwait
aaa
outsl
fimuls
mov
aam
adc
out
and
stc
mov
stc
jge
aaa
outsl
fidivrs
gs
arpl
cltd
adc
int
aaa
insl
jmp
aaa
inc
dec
stc
popf
add
fnstcw
xchg
repnz
sbb
jb
outsl
mov
in
es
das
lea
out
fwait
popa
std
pop
jns
and
jnp
pop
adc
lds
mov
xchg
mov
or
xlat
pop
lahf
scas
ja
add
sbb
xor
xorb
inc
mov
popa
mov
repz
adc
test
or
jl
cmp
mov
shrl
fdivrl
cmp
arpl
mov
mov
push
push
jno
sbb
dec
out
fwait
xorb
push
mov
jns
xchg
sbb
jb
adc
mov
stc
imul
sbb
nop
pop
lods
and
mov
cld
sbbl
in
fmull
mov
dec
cmpsb
fsubs
jg
push
sbb
mov
xchg
fidivrs
mov
mov
loopne
fidivrs
nop
mov
mov
pop
hlt
cmp
dec
pop
xlat
mov
jns
out
testl
mov
ret
fidivrs
sbb
lock
mov
ljmp
mov
pop
xor
popf
dec
js
aas
outsl
fidivrs
jle
jp
out
mov
push
out
fwait
aaa
popa
divb
add
outsb
adc
fidivrs
repnz
adc
shlb
dec
or
fwait
aaa
outsl
mov
pop
xchg
fimuls
movsl
aaa
mov
repz
mov
idiv
xor
cmp
lahf
aas
pop
in
jns
inc
loope
test
cld
stc
repz
jae
inc
mov
mov
or
and
jle
jecxz
mov
sbb
repz
jecxz
dec
sub
jnp
aad
into
aas
jg
cld
insl
stos
out
add
stc
hlt
xchg
out
lahf
aaa
xchg
pop
adc
daa
popf
outsl
fidivrs
ljmp
push
cmp
int
aaa
mov
pop
push
jns
std
push
jp
mov
out
shl
int3
mov
adc
mov
andb
or
out
mov
cmp
jmp
and
cmp
aas
shl
fs
int
fwait
aaa
outsl
sbb
fsub
gs
loope
mov
jns
out
imul
cmpsb
adc
push
mov
inc
mov
lahf
pushf
lods
fnstsw
insw
imul
repz
add
fldl
jle
lahf
aaa
outsl
fidivrs
test
mov
pop
subl
int
inc
cwtl
push
dec
and
pop
stc
cmp
in
inc
imul
add
sbb
icebp
mov
jge
add
inc
inc
push
mov
rol
cmp
mov
pop
aaa
test
xor
jns
iret
mov
out
push
sar
test
ficoms
xchg
cmpsl
hlt
push
jne
bound
shl
int
aaa
ljmp
int3
and
cmp
movsb
cwtl
repz
daa
loopne
bnd
aas
adc
dec
iret
pop
fmulp
fwait
aaa
outsl
mov
jbe
push
xor
test
and
mov
fwait
aaa
outsl
fidivs
movsl
cmpsb
xchg
in
mov
out
adc
mov
loop
push
inc
jl
inc
aaa
outsl
fidivrs
rorb
jns
test
or
out
fwait
push
into
mov
mov
jae
lds
js
mov
sbb
cli
leave
xchg
xlat
inc
push
iret
lahf
aas
fs
xchg
mov
or
fwait
bound
mov
out
mov
enter
hlt
iret
in
sbb
jns
out
stc
and
cmp
insb
jb
shrl
or
inc
outsb
fimuls
mov
fwait
mov
xor
lret
mov
jns
out
loopne
andl
mov
fsubp
hlt
jbe
int3
in
divb
sarb
loop
pop
jno
int
mov
jbe
lock
outsl
fidivrs
addr16
sbbb
jae
out
inc
ss
int
pop
sbb
cld
stc
repz
sbb
pop
pop
stc
sbb
sub
or
lahf
aas
jg
jo
dec
mov
mov
decb
int3
push
sbb
cmc
push
xchg
xor
aad
mov
mov
int3
push
push
cmpsl
xor
adc
aas
pushl
or
dec
in
mov
and
mov
movsbl
add
cld
ljmp
jb
pop
ret
fwait
aaa
repz
fcompl
add
and
aam
sub
xor
fidivrs
xchg
sub
int3
leave
out
adc
ljmp
scas
fnstenv
repz
mov
shlb
xchg
add
pusha
loope
cli
mov
int
aaa
sub
xor
loopne
enter
fidivrs
add
andl
imul
int
aaa
outsl
jp
xlat
sub
mov
mov
pusha
jle
bound
xor
ret
inc
movsl
inc
pop
frndint
lcall
mov
xor
aaa
lock
xlat
mov
stc
jne
mov
xchg
ljmp
pop
add
orl
outsl
sub
and
jmp
sub
daa
mov
jecxz
in
dec
sbb
les
in
xor
jl
fwait
aaa
outsl
fdivp
sbb
inc
xchg
push
jne
loopne
repz
jmp
mov
f2xm1
jnp
out
aad
insb
fidivrs
pop
pop
scas
enter
mov
xor
push
andb
mov
inc
aaa
addb
inc
sub
outsl
or
push
popa
pop
mov
mov
cld
stc
stos
jecxz
nop
lahf
ja
xchg
enter
adc
lods
and
pop
movl
push
xor
test
out
mov
jns
out
push
mov
and
lock
fidivrs
xchg
pop
xchg
push
inc
ret
inc
movsb
push
repz
fwait
mov
ret
js
outsl
lods
xor
jns
cmp
cld
hlt
dec
aad
iret
push
movsb
cmp
and
popf
in
cmpsb
xchg
add
push
les
outsb
xor
lahf
aas
jg
outsl
roll
test
jge
lods
sub
enter
loop
fisubrl
fwait
ja
mov
nop
cmp
adc
ss
ret
iret
mov
mov
push
inc
mov
xchg
gs
repz
ja
jp
insl
jle
and
pop
xor
bound
xor
pop
or
daa
adc
aam
les
mov
pop
out
lods
pop
in
jecxz
aaa
outsl
fimuls
jmp
cmp
js
xor
cmp
out
or
js
dec
fldt
mov
mov
outsl
fidivrs
sbb
out
dec
and
ds
xchg
int
mov
cmpsl
add
sub
xchg
fidivrs
sarb
cmp
aad
inc
outsl
lahf
ret
push
adc
inc
mov
dec
mov
cld
cmp
adc
notl
push
sub
enter
or
xchg
xor
rep
jbe
push
insl
test
cwtl
jp
aaa
outsl
fiadds
mov
or
xchg
pop
ficoms
or
out
out
ja
jae
mov
mov
dec
pop
in
aaa
outsl
fidivrs
cmc
movsl
inc
jg
orb
repz
fwait
dec
cmp
xchg
dec
or
push
insl
lcall
mov
gs
jb
out
aaa
outsl
fidivrs
dec
adc
outsb
stos
xchg
xchg
cmc
enter
sbb
bound
movsl
mov
neg
movsb
fwait
push
pop
sub
and
or
cltd
fcompl
aaa
out
mov
cltd
popa
mov
xor
and
out
mov
aas
pop
mov
les
lods
scas
aaa
outsl
fidivrs
add
shll
xchg
and
fwait
push
mov
rorb
pop
rorl
js
inc
mov
repz
sub
insl
scas
inc
cli
lcall
aas
jg
mov
sbb
adc
pop
js
es
jns
xor
lds
mov
lcall
push
push
arpl
movsl
push
leave
out
fwait
aaa
jnp
jb
hlt
fildl
nop
fidivrs
and
xchg
adc
dec
lods
push
xchg
inc
int
aaa
outsl
bound
frstor
mov
flds
jl
jns
out
into
nop
inc
outsl
inc
pop
loopne
lcall
push
pop
flds
mov
mov
aaa
ds
aas
repz
fwait
jne
arpl
mov
push
or
mov
out
pop
scas
repz
mov
sahf
lret
test
fwait
aaa
pop
mov
aas
test
fists
sbb
mov
mov
popa
xchg
mov
dec
jl
mov
fldt
dec
stos
xorl
lds
dec
mov
pop
sbb
mov
test
or
mov
jnp
mov
mov
iret
lahf
jg
jp
dec
xlat
lcall
push
mov
stc
repz
mov
je
sbb
jg
addr16
lahf
aas
jg
xor
fisubl
loopne
push
shrl
dec
arpl
stc
repz
adc
int3
int3
mov
testb
or
adc
sub
pop
pop
aaa
lds
xlat
xchg
and
testb
stc
pop
push
mov
cld
loope
fwait
jl
inc
outsb
xchg
and
cld
mov
movsl
pop
in
sahf
sbb
xchg
repz
lahf
pusha
inc
mov
jne
push
sub
jbe
idivl
cld
stc
push
adc
mov
fs
imul
aas
cmp
inc
sub
pop
dec
jp
test
pop
cld
stc
repz
popl
std
mov
pop
repnz
adc
jg
dec
mov
sbb
mov
inc
in
enter
bswap
sbb
mov
jp
cmp
xchg
popa
stos
sbb
out
lahf
push
out
jmpw
sbbl
add
stc
imul
inc
jle
mov
cwtl
pop
cli
add
scas
js
test
jg
add
sub
fildl
adc
leave
iret
das
loope
jnp
je
mov
jns
sti
mov
icebp
in
ficomps
pop
jmp
ss
cmp
and
cmp
pushf
xchg
pop
jl
pop
xor
fwait
aaa
outsl
fimuls
xor
xor
stos
js
out
lods
jmp
stc
jle
xchg
rcrb
inc
repnz
fsubrs
ret
mov
or
stc
repz
push
popf
leave
push
andb
mov
decb
movsb
add
mov
sahf
pop
loope,pn
repz
jecxz
out
dec
js
cwtl
fildll
ss
mov
adc
ljmp
mov
fmulp
dec
push
ret
lret
je
int
fs
lods
ret
adc
aas
jg
xlat
pop
and
sub
movsb
es
aas
sub
loop
js
scas
cwtl
movsl
jle
cli
sar
repz
xchg
pop
popf
test
es
iret
aam
and
cld
or
inc
ret
js
xchg
mov
pop
sbb
adc
and
outsl
sbb
ret
bound
shrl
mov
les
pushf
fidivrs
out
aaa
outsl
fdivrp
and
jmp
imul
jns
out
mov
or
pop
mov
push
and
mov
decb
clc
jns
cs
out
mov
shrl
fidivrs
mov
sbb
cld
add
adc
int
aaa
outsl
es
mov
mov
movsb
iret
shll
mov
jns
out
ja
out
mov
mov
data16
outsl
ficoms
fistpll
lods
jae
scas
jb
repz
fwait
outsb
loopne
pushl
jb
shll
call
mov
imul
ficoms
adc
cmc
push
jmp
inc
xchg
lret
xchg
inc
xor
pop
xchg
xchg
cld
sub
mov
aas
popf
mov
pop
out
test
call
ss
out
pusha
out
imul
pop
mov
mov
sub
xlat
xor
push
fnstcw
adc
and
push
out
cmpb
aaa
rcrl
ret
int
aaa
mov
adc
inc
sub
xchg
sbb
pop
fidivrs
sti
or
lea
std
dec
dec
xchg
pop
stos
int
aaa
outsl
add
das
dec
dec
xor
mov
xchg
xchg
inc
cmp
and
jnp
roll
stos
pop
loopne
lret
loop
repz
fwait
aaa
add
dec
notb
and
fimull
jle
mov
cmp
adc
xchg
inc
mov
ds
jg
cld
stc
repnz
repz
jg
inc
test
ljmp
fcoml
inc
mov
jae
test
or
outsl
inc
jmp
repz
push
mov
xor
lahf
jp
out
sbb
stos
test
pop
fistpll
cli
pop
repnz
fs
lods
inc
pop
dec
mov
cmp
idiv
aam
lret
mov
out
and
mov
jge
pop
pop
test
xor
xchg
roll
in
aaa
out
out
repz
sbb
cmpsb
out
xchg
xor
and
test
mov
fsubrs
fwait
jae
pop
sub
rcll
xlat
pop
xchg
mov
movsb
xchg
adc
push
cltd
jg
push
and
fwait
aaa
clc
mov
fstpt
out
fwait
ja
push
out
sarb
lret
aaa
sub
fidivrs
test
stos
arpl
lret
xorl
adc
int
cmp
mov
mov
push
adc
pop
lahf
lods
add
jp
fwait
aaa
outsl
fidivrs
lret
js
aam
addr16
jns
out
insb
pop
insl
jno
fidivrl
dec
fwait
mov
outsl
fidivrs
cltd
clc
repnz
cld
stos
or
push
rcrb
iret
cltd
out
lahf
aas
aam
iret
cmp
lds
cld
stc
repz
cmc
or
jg
std
jl
pop
jns
adc
aas
jg
int
adc
cmp
in
dec
mov
jne
xor
repz
jo
fisttps
xchg
jns
push
shl
ds
scas
and
push
nop
jg
cld
stc
cmc
cmpsl
pop
and
lods
dec
rcll
dec
push
jns
mov
sbb
lods
xlat
jbe
jle
mov
or
push
mov
jp
push
out
fwait
aaa
lret
neg
aas
jge
xor
jns
clc
sbb
sub
xchg
lods
dec
mov
outsl
aaa
test
and
ja
push
jns
out
cwtl
pop
adc
push
xchg
jno
and
imul
fwait
aaa
outsl
fisubs
pop
jns
xor
incl
daa
das
jns
out
xor
subl
add
repnz
adc
inc
fwait
int3
mov
aad
mov
pop
xlat
lods
ljmp
aas
cwtl
push
push
insl
addr16
shl
test
mov
enter
insb
movl
mov
subl
roll
push
and
int
aaa
adcb
lds
shrb
test
out
andl
lds
aaa
outsl
and
xchg
push
cmc
mov
jns
out
sub
lods
test
arpl
outsl
faddp
jle
gs
jbe
cs
sub
lahf
dec
je
out
test
sub
xchg
enter
lahf
dec
in
mov
scas
cmpsl
pcmpgtd
mov
cld
stc
jge
lods
push
ficoms
adc
xor
std
in
add
mov
out
insb
ficoms
es
inc
das
fs
or
jg
addr16
ret
or
inc
mov
repz
hlt
mov
xorb
and
setp
aaa
add
xlat
xlat
lret
setg
pop
push
call
test
dec
mov
pop
mov
mov
lds
sbb
repz
lahf
enter
xlat
out
loope
and
push
inc
dec
jg,pt
pop
leave
es
imul
scas
out
aaa
fbld
push
jg
cmp
cmpsl
pop
ds
orb
jae
xor
out
lahf
aas
test
jmp
jecxz
jecxz
mov
adc
repz
xor
out
lahf
push
shl
lods
mov
pop
fnstcw
std
lock
int
aaa
inc
dec
gs
push
jns
in
mov
out
cmpb
dec
inc
sbb
aaa
outsl
fmulp
lcall
add
repz
rcrb
jo
iret
jl
aaa
and
mov
es
idivl
cli
xor
sbb
daa
stc
repz
das
das
gs
lahf
aas
jg
mov
lock
adc
ss
stc
repz
rolb
fcoms
insb
cltd
sbb
js
aas
jg
popf
and
dec
lret
sbb
pop
es
jg
rorb
addr16
test
pop
pop
jg
cld
mov
fdivp
aas
lea
xor
lahf
aas
push
negb
lret
aaa
inc
mov
cld
stc
repz
es
sar
xor
sub
lock
mov
scas
xor
jns
out
mov
rorl
xchg
sbb
fs
outsl
fidivrs
fst
out
in
jg
dec
add
cwtl
pop
enter
test
xrelease
call
jg
add
jns
scas
daa
faddl
fcomps
ficompl
int
lcall
movsb
ret
dec
cld
jecxz
lret
mov
adc
ds
ss
test
jle
nop
xchg
jmp
cmp
repz
push
popf
insl
push
insb
mov
lds
sub
mov
or
sub
repz
dec
pinsrw
sub
arpl
jg
inc
cmp
xor
loopne
pop
ja
cli
cmp
mov
ds
dec
dec
mov
xchg
inc
mov
lahf
aas
inc
mov
data16
out
pop
push
mov
xor
mov
insb
outsb
sub
ds
jg
in
sbb
sbb
fcomps
outsl
ficoms
lock
in
sub
out
fwait
aaa
int3
cmpsb
mov
jmp
jp
repz
xchg
xchg
mov
mov
cvtps2pi
xlat
pop
mov
popa
jae
clc
cld
stc
repz
insl
popa
in
test
lock
iret
lahf
aas
jg
pop
xor
fldenv
cld
stc
repz
push
xchg
and
adc
inc
mov
jg
bound
mov
les
lods
stc
repz
xor
mov
mov
aas
jg
cld
add
mov
outsb
inc
fprem
adc
jecxz
push
adc
pop
sahf
shrb
cmpsl
mov
xchg
ss
xlat
pop
fdivl
enter
jns
lcall
ds
xchg
xchg
mov
and
mov
jg
iret
lahf
mov
push
jbe
es
jg
testl
or
stc
stos
hlt
or
adc
aaa
pop
xchg
jbe
sbbl
cmp
clc
out
cli
leave
dec
int
aaa
outsl
add
inc
inc
pop
or
loope
out
xchg
add
sbb
lds
movsb
and
fwait
ja
jl
inc
loop
xchg
leave
adc
jns
out
ljmp
shlb
movsb
lahf
in
shl
out
mov
push
push
cmp
push
and
push
mov
int
push
rolb
mov
out
sbb
ss
xchg
lds
aad
hlt
outsl
fidivrs
js
aaa
jno
movl
or
int
aaa
testb
je
inc
jg
jge
cli
pop
adc
fs
lds
aas
imul
fdivrs
sub
sti
repz
adc
or
xor
jnp
mov
mov
in
pop
jp
dec
add
imul
repz
mov
pop
jns
mov
loopne
outsl
testb
sub
pop
xchg
ja
repz
push
xchg
pop
ret
add
and
mov
loope
push
lea
andb
jns
cs
iret
jne
out
addr16
cmc
aaa
outsl
fidivrs
sub
fxch
jns
test
loope
les
push
int
xchg
test
cmc
dec
loope
fnstsw
je
fidivrs
mov
cmp
adc
negl
int3
sahf
mov
mov
pop
ss
xchg
mov
xchg
aaa
outsl
or
loop
stc
stos
jg
mov
repz
fwait
in
loop
and
cmp
cld
movsb
jns
repnz
sti
imull
mov
fsubl
sub
repz
mov
stc
jp
pop
pop
sub
sub
dec
xchg
adc
inc
cld
stc
repz
inc
and
add
js
sub
inc
loopne
outsb
fdivrp
mov
testb
fidivrl
stos
aaa
outsl
test
fists
mov
adc
in
int
sub
jl
cmp
sbb
add
js
mov
scas
push
inc
fwait
aaa
outsl
faddp
gs
aad
cmpsb
mov
push
mov
out
lds
and
ret
addr16
aaa
outsl
and
test
dec
mov
xor
call
mov
cltd
inc
sbb
add
pop
inc
outsb
fidivrs
aad
aas
push
or
fwait
aaa
push
cld
xor
rorl
jns
out
jl
adc
popa
and
mov
push
icebp
add
pop
clc
push
cmpsl
or
cmp
cld
sbb
cmp
sbb
out
fwait
aaa
iret
push
addr16
aas
mov
sbb
loop
mov
push
fisubrl
inc
outsl
pop
jnp
push
inc
or
in
mov
popf
jo
inc
mov
sbb
cwtl
or
and
ret
sub
pop
add
int
or
out
inc
incb
addr16
add
lret
test
lea
stc
stc
addr16
test
rsm
sub
mov
adc
ljmp
aaa
push
aad
popf
mov
call
fidivrs
adc
jg
add
cmp
int
aaa
outsl
lods
scas
fucomp
icebp
arpl
adc
jns
out
loopne
mov
push
inc
dec
xor
push
fwait
mov
fisubs
jmp
shlb
insb
cmp
lret
in
daa
int
ja
pop
fwait
mov
dec
out
aas
jg
cld
aad
cmp
in
sub
dec
idivb
iret
lahf
pop
mov
cmpsl
adc
jle
cld
stc
enter
sub
lcall
insl
inc
test
scas
pop
jecxz
pop
shlb
push
sti
cld
jp
outsb
test
cld
fsts
pop
mov
scas
inc
test
push
mov
aas
jg
cld
jle
rclb
inc
ret
push
jecxz
pop
mov
lahf
cmp
jno
add
mov
add
push
sub
arpl
inc
es
jns
push
xchg
or
cwtl
cmpb
mov
sbb
leave
testl
pop
pop
add
out
shll
loop
add
jb
adc
push
fcomp
sub
jecxz
xchg
fidivrs
cmp
out
adc
push
inc
fwait
add
bound
inc
jns
mov
aaa
mov
outsl
mov
lock
inc
mov
fdivrp
cli
cmp
jp
dec
jno
ret
rcll
iret
mov
les
negb
fldl
and
outsl
fiadds
pop
in
adc
mov
repz
imul
mov
sub
jp
add
outsl
fidivrs
dec
out
xchg
aaa
cli
sbb
xchg
out
fwait
push
addb
xchg
push
and
test
mov
pop
ja
shll
jg
cs
sbb
int
aaa
loopne
repnz
addr16
jp
bound
stc
or
push
cs
nop
push
js
sahf
add
int
aaa
outsl
iret
pop
lea
arpl
inc
loop
sar
mov
and
lods
xor
sahf
das
and
inc
outsl
fidivrs
xchg
dec
call
jns
aad
push
ja
inc
ret
pop
mov
fwait
aaa
outsl
ficoms
mull
sub
mov
int
pop
and
add
bt
das
sti
out
lahf
aas
mov
std
data16
push
lret
daa
mov
repz
pusha
shlb
pop
push
sbb
xchg
rclb
dec
iret
lahf
aas
jg
loop
icebp
movsb
ret
xor
mov
cld
stc
repz
jle
xchg
adc
dec
addr16
imul
aas
jg
ret
ja
and
push
jns
out
stc
repz
scas
pop
pop
push
in
movsl
dec
sub
and
aad
cmpb
cld
jae
hlt
push
gs
add
icebp
xchg
mov
repz
lahf
das
popf
adc
sahf
movsl
shrl
cld
stc
inc
sub
mov
sub
iret
lahf
aas
out
mull
jecxz
dec
popf
fsub
addr16
and
repz
sti
pop
fnstsw
mov
orb
aaa
push
xor
scas
pop
jge
rep
scas
cmp
pop
jb
dec
out
ja
ds
xor
sub
pop
inc
lahf
cld
stc
repz
stos
pop
aam
gs
push
and
jns
xchg
ja
xchg
cmp
int3
push
dec
mov
pushf
mov
shll
dec
das
mov
sub
imul
jg
cld
adc
sub
mov
push
jnp
out
lahf
mov
sub
push
add
xor
dec
pop
fidivrs
jp
and
ficoml
adc
or
hlt
out
lahf
aas
mov
subl
cld
stc
repz
xchg
and
mov
aaa
sub
xor
mov
aas
jg
roll
and
outsl
cld
stc
repz
push
sbb
shr
jns
cmp
jo
jbe
lahf
aas
jg
xor
sbb
sbb
push
xchg
xchg
or
adc
pop
int3
js
dec
loope
bound
inc
jle
cld
das
lods
insb
shlb
dec
sub
push
rolb
cmp
mov
iret
outsl
fiadds
and
daa
mov
fdivrl
cmp
aaa
out
iret
or
adc
xor
out
mov
iret
lea
or
notl
fldl
pop
pop
hlt
fdivs
jno
int
jnp
js
jno
xorl
mov
cmpsl
fsubp
sub
movsl
lret
jmp
outsl
fidivrs
lock
mov
pop
fdivrl
fwait
aaa
lret
or
inc
pop
cmpsb
lahf
xor
fstpl
or
mov
adc
fwait
aaa
out
stos
rol
lea
inc
dec
cmp
ljmp
sti
pop
fldcw
or
shlb
pop
leave
aam
daa
cmp
xor
xchg
adc
scas
or
pop
iret
in
ss
cmp
mov
jge
xchg
add
xor
lahf
jg
adc
test
movsb
into
insb
into
cmc
stc
stc
repz
inc
xchg
es
aam
out
sbb
mov
les
ja
popf
sysenter
adc
push
and
decb
sub
stc
dec
fiadds
jnp
outsl
ficoms
lds
movb
and
fwait
ljmp
movsb
xlat
out
inc
adcl
out
xor
int3
jb
adc
push
and
xchg
aaa
outsl
fisubs
dec
pop
mov
push
arpl
stos
push
jo
mov
cld
stc
loopne
fstpl
and
mov
jns
outsl
push
pusha
pop
std
arpl
add
sbb
int
fisubl
adc
fwait
pop
push
ljmp
call
jae
fwait
iret
xlat
aaa
outsl
fidivrs
insb
inc
rcll
out
cmp
fwait
movsb
mov
jg
xchg
jg
sbb
xor
push
rolb
int
orb
stos
stos
imul
daa
addr16
cmp
movsb
jge
cmc
mov
aam
jae
pushf
cld
stc
ret
dec
lahf
ss
pop
mov
or
mov
inc
mov
das
xchg
test
aas
aas
jmp
lds
lea
cmp
jp
add
push
outsl
ja
sbb
out
adc
add
lcall
mov
xchg
adc
mov
mov
mov
pop
adc
fwait
leave
jo
sub
or
rorb
std
movb
loope
adc
pop
inc
shll
pop
cmp
out
das
imul
inc
rolb
adc
jmp
sahf
pop
sahf
out
fwait
ja
stc
ret
add
sub
mov
repz
cmpsb
pop
pop
idivb
clc
addr16
insb
pop
rcl
mov
inc
or
das
scas
repz
test
rep
cmpsb
push
notl
fidivrs
push
out
pop
cmp
cwtl
inc
arpl
int
aaa
adcb
sbb
jo
test
loope
inc
loopne
pop
daa
imul
xor
inc
cs
repnz
insb
fiadds
pop
push
sub
xor
and
out
push
pushf
mov
cmp
and
jae
icebp
jo
cld
stc
repz
lss
sub
ja
or
mov
mov
repz
push
mov
pop
dec
leave
subl
aas
jg
std
xchg
xchg
or
out
and
out
dec
pop
jns
out
dec
add
in
sub
push
sarb
aaa
outsl
fidivrs
push
test
sbb
outsl
stos
dec
test
lods
add
icebp
cmp
fs
sbb
pop
mov
mov
fidivrs
jg
cli
pop
cli
cld
imul
rol
lahf
jg
sub
jmp
mov
dec
in
cs
fdivs
ss
push
mov
std
dec
test
mov
int3
fwait
aaa
outsl
ficomps
repz
ljmp
sub
add
repz
jecxz
cs
in
outsl
xchg
inc
cmpsl
in
and
mov
lret
mov
es
sbb
xor
test
jns
cmc
enter
dec
in
jge
sbb
inc
outsl
fimuls
stos
mov
dec
lods
loop
cmpsl
test
pop
rcl
pop
pop
jbe
adc
fidivrs
adc
jb
jnp
pusha
fmul
jmp
loop
fwait
aaa
imul
ja
and
mov
xchg
cmp
in
inc
lahf
sbb
adc
imul
push
push
cli
xor
int
aaa
cmpsb
cmp
dec
lock
jg
adc
sti
sub
scas
or
aaa
outsl
add
rolb
mov
xchg
fists
jns
out
sbb
jl
test
fwait
aaa
outsl
fisubs
ret
jp
pop
movsb
mov
pop
or
out
ljmp
in
jl
mov
adc
xor
arpl
xor
int
xor
mov
scas
lahf
aas
jg
incl
into
iret
pop
adc
mov
pop
stc
repz
pop
mov
sarl
dec
lret
cld
add
outsl
mov
orl
mov
mov
ljmp
push
repz
mov
cld
stc
mov
ret
aad
push
xor
imul
or
aas
mov
in
cmc
lods
pop
ljmp
movsl
push
lods
les
repz
testl
jno
enter
ficomps
sub
pop
rorb
fwait
aaa
adc
aam
push
pop
xchg
mov
orb
jb
orl
outsl
fidivs
loop
mov
out
add
repz
jo
or
loop
cwtl
pop
pop
fstl
fidivrs
and
fistps
sahf
imul
ljmp
sub
jmp
mov
add
mov
lcall
adc
mov
or
mov
dec
in
sub
bound
sub
repz
dec
mov
xor
jns
sub
jb
dec
mov
stc
ret
inc
ss
es
lods
out
xchg
nop
leave
aas
jg
cld
cs
pop
jno
cmp
add
mov
out
lahf
pop
or
inc
stc
mov
xchg
cmp
in
and
fwait
xchg
rorb
out
mov
and
sub
cmp
jg
cld
mov
bound
push
push
scas
sti
adc
lret
iret
lahf
ljmp
in
lock
cld
stc
stos
pop
cmpl
jp
mov
in
lahf
aas
shlb
push
xrelease
push
lds
xor
pop
outsb
sbb
add
push
mov
das
mov
cs
jecxz
stos
out
jne
sub
sub
aaa
outsl
fisubrs
xor
imul
sbb
sarb
out
ss
lock
roll
add
fidivrs
daa
add
push
out
fwait
push
xchg
mov
dec
imul
call
jns
pusha
test
pop
fidivrl
int
aaa
aaa
je
add
or
je
mov
aaa
xchg
pop
in
xchg
cmp
sti
ret
int
aaa
outsl
mov
std
sub
aas
call
mov
mov
or
or
dec
fwait
aaa
outsl
fisubs
mov
pushf
insb
sbb
pop
shll
fs
pop
xchg
in
sbb
jb
sub
push
xchg
js
mov
dec
out
aas
jg
cld
inc
push
push
fwait
adc
jmp
mov
out
lahf
dec
les
icebp
pop
shll
pop
jg
cld
stc
or
jp
imul
lahf
aas
pop
sahf
aas
xchg
negl
stc
repz
pop
rep
pop
rcrb
enter
lret
cld
pop
js
clc
stc
call
push
cbtw
ss
adc
es
dec
addr16
movsl
inc
sti
xor
jg
stc
cmpsb
pop
fsts
addr16
sub
iret
lahf
add
inc
out
aaa
negl
pusha
and
stc
inc
pop
icebp
andl
out
xchg
sub
jle,pn
pop
mov
xor
sbb
mov
fwait
addr16
aaa
outsl
fdivrp
js
mov
dec
in
dec
cs
int
or
outsb
or
mov
push
jns
aad
int
aaa
outsl
inc
cwtl
bound
pop
mov
jns
out
cmc
mov
xchg
cmp
jb
mov
ficoms
lcall
ds
mov
sahf
mov
shl
movsl
mov
aas
cli
in
jo
lahf
aas
jg
movsl
push
pop
mov
pop
aaa
jno
loopne
jae
repnz
xchg
pop
jg
sbb
xor
lods
push
js
js
xacquire
sbb
dec
mov
les
pop
mov
cld
inc
cmpsb
cmpb
jg
shll
out
loopne
pop
ds
repz
lahf
scas
outsb
cmp
jle
xchg
push
push
mov
jg
cld
push
adc
popa
int
jle
lods
xor
shl
out
lahf
dec
inc
movsl
es
notl
mov
push
gs
aas
jg
lds
das
insl
add
cmpl
fwait
stos
repz
lahf
testb
fidivrl
stos
or
stc
jno
mov
test
in
pop
cld
ds
aas
or
les
xor
movb
inc
inc
mov
and
icebp
xor
fnstsw
cli
cmp
jg
test
fsubp
arpl
dec
jge
outsl
cmp
cwtl
mov
out
enter
outsl
lock
pop
movsb
das
jb
scas
sbb
iret
pop
xchg
or
pop
lcall
add
cld
stc
and
insl
dec
out
and
ret
push
insl
xchg
and
loopne
fwait
jns
out
aaa
sti
sbb
shlb
icebp
sahf
int3
cs
dec
decb
fidivrs
sbb
enter
aaa
out
mov
rorl
xchg
jns
out
in
lcall
or
outsl
fidivrs
and
cltd
xchg
lret
mov
fwait
mov
fists
or
aaa
push
rorl
cmpsb
add
lahf
pop
or
pop
arpl
cld
cld
stc
test
fsubrl
pop
lods
adc
push
xchg
outsl
stos
pop
stos
scas
and
xchg
int
aaa
fwait
cmpsw
push
cmc
jae
inc
inc
dec
notrack
aad
pop
das
jge
mov
movsb
push
cld
stc
roll
xchg
movsl
mov
mov
mov
aas
jg
and
sub
cmc
dec
and
inc
das
sbb
push
jecxz
mov
aaa
outsl
stos
mov
mov
enter
sub
sub
xchg
add
shlb
cmp
aaa
outsl
fidivrs
mov
test
jnp
out
jle
int
mov
addr16
mov
repz
sbb
sbb
xor
sti
pop
fsubl
aaa
outsl
fmulp
dec
insb
cmp
mov
xlat
push
pop
mov
cltd
jns
out
cmp
or
lods
push
add
fidivrs
lds
push
jp
sub
in
int
pop
mov
jg
push
decb
mov
call
jp
leave
ja
jne
aam
jae
out
adc
pop
or
into
out
sub
aaa
xchg
xchg
aad
xchg
mov
mov
mov
ljmp
sahf
subl
outsl
fidivrs
sahf
scas
cli
inc
clc
cld
inc
in
xchg
call
push
into
pop
add
das
jbe
iret
lahf
aas
jg
xlat
xchg
mov
fxch
push
imul
stc
sti
leave
out
stc
mov
bound
cmpsb
or
in
push
pop
out
mov
xor
xchg
xor
fstpl
mov
adc
lcall
cmp
iret
mov
out
dec
mov
daa
cmp
lock
adc
lahf
int
out
repz
lahf
add
and
cmp
inc
push
daa
jg
cld
stc
and
ljmp
inc
mov
sub
out
lahf
aas
and
in
int3
pusha
jecxz
lret
stc
repz
fistpl
sbb
fs
test
or
xchg
daa
mul
pop
xchg
xor
cmp
out
leave
mov
shll
mov
xchg
mov
inc
sub
divb
pop
aad
aaa
xchg
fmull
mov
repz
fs
push
or
pop
jg
xlat
je
aaa
outsl
fisubrs
int
xchg
dec
aas
ja
mov
jb
out
test
aas
sbb
xchg
test
sub
mov
ds
push
fisubs
add
es
stc
xor
sub
mov
repz
dec
pusha
jns
repz
cmp
fnstcw
out
lret
dec
loopne
int
aaa
xchg
sbb
or
scas
out
fidivrs
jg
gs
out
test
xor
int
aaa
outsl
rcrl
movsb
jmp
mov
sbb
xchg
pop
fwait
out
or
repnz
dec
cmpsb
inc
bound
imul
test
and
jne
aaa
repz
lahf
rorb
stos
jno
jno
pop
fsubr
leave
lcall
add
or
clc
dec
jecxz
sbb
ror
fwait
aaa
outsl
ss
push
fnsave
mov
push
pop
call
sarb
bound
aaa
outsl
fiadds
xor
stc
sbb
xchg
std
popf
jns
out
outsl
popa
xchg
lods
mov
jecxz
rorl
outsl
fidivrs
jge
xchg
inc
lods
lcall
int
or
shrl
jb
jns
push
clc
dec
nop
mov
orb
xor
int
aaa
outsl
bound
movsb
pop
test
out
fnstcw
in
loopne
in
outsb
loope
mov
out
imul
outsb
rcrb
push
mov
mov
jle
repz
jecxz
fsubrl
int
inc
cld
fwait
movsl
imul
outsl
fidivrs
pop
dec
aaa
cmc
add
lock
mov
fwait
push
int
fisttpl
insb
aas
outsl
fidivrs
adc
call
mov
int
aaa
xchg
sub
cmp
fs
push
inc
push
mov
mov
rcrl
or
int
aaa
outsl
ss
imul
cld
stc
test
sbb
jb
mov
sub
in
cmp
lret
outsl
cltd
fdivr
stc
repz
daa
lods
sub
test
push
lahf
aas
jg
mov
and
mov
repz
aad
mov
out
mov
out
jno
or
mov
push
stc
aas
jbe
push
in
dec
addl
pop
fsubrl
cmp
aaa
outsl
fidivrs
cmp
add
and
loopne
fwait
lods
push
jno
jge
loopne
fwait
aaa
out
pop
jb
insl
cmp
test
sub
mov
push
rcll
sarb
pusha
fwait
aaa
outsl
faddp
lret
push
out
loopne
imul
movsl
dec
repz
out
jbe
mov
mov
aas
jg
xor
fucom
add
mov
or
repz
mov
inc
addb
jmp
xor
ljmp
mov
ds
push
fildll
hlt
cmpsb
int
aaa
out
jg
cli
lcall
mov
scas
cmp
das
insl
sahf
in
or
insl
fidivrs
sub
shl
dec
repz
insb
ljmp
int
enter
cld
stc
js
jmp
shlb
jns
sub
aas
mov
lcall
push
pop
add
out
and
cmpsl
cltd
mulb
lahf
aas
jg
cmpsb
repnz
mov
addr16
iret
cmpsb
dec
mov
nop
xchg
rcrb
dec
int3
aas
jg
cld
outsl
ret
mov
add
dec
push
mov
out
lahf
cmp
bound
xchg
pop
popf
jp
cld
jnp
jmp
or
sub
dec
pop
notrack
ja
out
dec
sbb
cmp
cmpsl
das
pop
cs
lahf
mov
sahf
pushf
pop
lods
sub
out
inc
movsl
xchg
xlat
sti
fwait
aaa
outsl
fiadds
push
std
movb
dec
outsb
mov
cltd
mov
mov
sbb
test
aaa
outsl
fidivrs
out
test
in
pushl
mov
xchg
int
or
or
pop
pop
mov
jg
cld
stc
push
push
push
add
lret
jns
cmp
add
iret
lahf
aas
mov
xor
push
sub
push
imul
rcll
push
xchg
or
fiadds
inc
jl
add
mov
repnz
lahf
dec
out
sbb
enter
sbb
in
push
and
pop
mov
pushw
jne
inc
mov
adc
out
sbb
adc
das
jle
xchg
dec
cld
stc
repz
std
pop
je
repz
lock
jle
sahf
push
cld
stc
repz
add
jnp
mov
loop
push
ret
aas
jg
daa
int3
cld
pop
pop
xchg
das
and
out
mov
enter
imul
jmp
jae
fwait
aaa
outsl
ficomps
or
mov
in
sub
jge
jns
out
pop
cmc
je
fcomps
aam
or
pusha
xor
loope
mov
lahf
stos
sbb
cli
dec
shrb
out
lods
jp
stos
out
out
jg
mov
mov
add
repnz
jl
jle
out
mov
sub
cltd
lret
out
imul
dec
push
xchg
repz
jne
ror
aad
and
pop
test
aas
jg
ret
or
sub
xchg
push
stc
repz
lahf
test
jo
rolb
dec
out
or
lods
addb
out
out
xchg
lcall
and
xchg
das
jb
lret
sti
mov
repz
fisubrl
ja
sub
das
sub
fidivrs
mov
and
les
push
mov
sbb
pop
push
add
ja
lahf
inc
les
mov
and
repnz
movsb
imul
clc
fwait
aaa
outsl
sub
lds
lahf
and
shll
cmp
ja
test
lcall
xchg
aas
inc
ret
out
add
in
in
and
dec
jns
out
lods
outsl
xchg
pushf
jno
pop
hlt
xor
or
outsl
fidivrs
jle
adc
or
lock
int
mov
adc
int
ja
outsl
dec
leave
and
fwait
sub
imul
in
das
out
outsl
scas
cmpsb
out
fnstcw
xchg
aaa
outsl
fidivrs
lret
cmc
sti
pop
sti
mov
lret
lahf
xchg
lds
scas
out
movsl
fwait
cmp
mov
mov
repnz
xlat
jns
jns
shll
adc
xlat
js
aad
repz
loop
mov
adc
arpl
outsl
fidivrs
and
jnp
jp
out
loope
cmp
mov
jge
repz
frstor
loopne
aas
push
dec
and
mov
add
jg
jo
mov
flds
inc
das
add
clc
in
addr16
sbb
inc
loopne
lahf
xor
and
out
daa
lea
push
push
pop
repnz
in
xchg
ja
lods
mov
or
fwait
ja
push
push
outsl
cwtl
cmp
dec
test
cld
pop
stos
jle
lahf
mov
mov
aas
jg
xor
adc
roll
sbb
pusha
in
lret
sbb
lcall
pop
pop
mov
repz
out
movsl
idiv
mov
adc
sahf
aas
jg
push
jge
cmp
gs
inc
add
iret
pop
pop
mov
push
jmp
cld
stc
repz
xchg
mov
or
push
outsb
fsub
aam
aas
jg
div
adc
in
imul
out
fwait
aaa
mov
pop
mov
leave
dec
movsb
add
repnz
pop
push
xchg
sub
outsl
ficoms
jns
shll
hlt
dec
mov
mov
cwtl
clc
xor
std
test
sbb
repz
test
stc
mov
fiadds
int3
lods
or
mov
fcomip
cld
scas
mov
and
jns
adc
repnz
ja
adc
mov
iret
pop
cmp
cvtdq2ps
inc
jle
cld
mull
cmpsl
es
add
mov
push
or
pop
mov
lahf
aas
xor
xlat
je
push
hlt
dec
dec
aas
cld
stc
repz
aas
push
outsb
test
aaa
movsb
lcall
iret
lahf
aas
jg
jo
iret
fwait
mov
aaa
xchg
jb
jnp
cld
stc
repz
addl
int3
daa
pop
xchg
push
push
repz
loop
adc
stc
pop
jg
or
sbb
fbld
aaa
outsl
push
jmp
sbb
loope
pop
aad
stc
repz
push
and
popf
cmp
rclb
mov
jl
ret
and
push
out
mov
fcompl
cmp
aas
jg
dec
dec
adc
inc
mov
xchg
mov
repz
jne
adc
sbb
or
or
aaa
outsl
fisubrs
jge
std
xor
mov
dec
rclb
outsb
inc
loopne
sub
jb
adc
and
mov
dec
mov
icebp
add
fstp
mov
out
fcompl
in
mov
sti
fwait
sbb
jg
cld
stc
outsl
inc
sub
sysret
cli
mov
jnp
pop
adc
aas
stos
push
sbb
cmpsl
inc
adc
jg
icebp
out
sbb
jl
jnp
xchg
push
std
repz
lahf
cmp
add
test
ret
sahf
fsubl
out
or
cld
stc
jle
mov
lock
in
lea
outsl
xor
aas
xor
fdiv
aad
sbb
mov
cld
stc
repz
inc
push
push
mov
icebp
fiadds
bound
lahf
jg
imul
lahf
push
adc
ljmp
sahf
adc
sbb
dec
and
mov
test
and
and
push
ds
int
aaa
add
divl
hlt
jb
mov
adc
sub
jmp
push
push
adc
iret
neg
dec
lds
inc
pop
in
scas
ss
adc
fwait
jmp
pop
fldenv
cmc
push
xchg
mov
push
mov
pop
hlt
push
int3
or
out
jg
daa
cltd
xor
inc
in
adc
mov
movsb
mov
pop
pop
push
add
mov
jo
sub
add
add
stc
stc
or
fs
pop
sbb
cld
inc
out
jp
int3
push
mov
jmp
fwait
ja
mov
das
fisttps
lock
bound
cld
or
or
push
and
aas
jmp
sbb
fmuls
lahf
lea
repz
jns
sbb
xchg
mov
repnz
inc
insb
pop
shl
loopne
jmp
inc
lcall
shlb
iret
movsl
cld
stc
repz
push
lea
jmp
push
mov
decb
jp
sbb
iret
dec
orb
or
dec
jo
enter
inc
sbb
pop
mov
or
nop
add
mov
fisttpll
orl
out
cmp
inc
ret
push
je
enter
or
xorl
jle
xchg
jne
cltd
push
cld
stc
enter
rcll
dec
mov
int3
mov
add
jbe
lods
mov
jbe
movsl
lret
pop
adc
sbb
int
mov
or
js
fidivrs
or
ret
loop
add
sti
int
aaa
outsl
inc
cmc
dec
lret
push
push
pop
popf
pop
cmp
orb
out
cmp
fstpt
divl
dec
jo
xchg
je
aaa
outsl
fimuls
ja
cmc
dec
add
jb
cmpsb
js
out
aam
aad
daa
sbb
mov
jle
outsl
sub
xor
scas
test
xchg
jbe
xchg
ds
jns
cmpsb
jp
dec
inc
sbb
sub
aaa
outsl
fidivrs
or
or
adc
in
fbld
cmc
sbb
jl
fistps
pop
out
jmp
mov
outsb
outsl
mov
xor
mov
iret
xchg
sub
mov
das
mov
inc
aam
sbb
mov
jl
adc
lock
int
scas
dec
test
sahf
fmuls
sbb
dec
fidivrs
xor
push
in
iret
stos
sub
xchg
add
movsb
fidivrs
sar
loope
data16
int
aaa
outsl
divb
mov
mov
xchg
ret
xchg
es
iret
lahf
jg
sbb
out
push
pop
data16
sbb
repz
mov
je
sahf
movsl
lods
pop
fiadds
stos
lahf
jl
xor
xchg
imul
push
pop
fidivrs
dec
aad
mov
iret
lahf
aas
popf
cli
out
scas
in
aad
arpl
fwait
jns
repnz
sbb
fwait
mov
mov
xchg
lds
xlat
xchg
bnd
cld
jecxz
lret
push
jne
mov
mov
sahf
aas
jg
imul
mov
jnp
fidivrs
and
dec
repnz
jb
mov
and
cwtl
fbstp
adc
aaa
xchg
nop
mov
inc
sbb
sahf
ret
inc
loop
add
out
mov
or
nop
outsl
ficoms
jg
bound
and
int
aaa
loopne
inc
mov
lret
fidivrs
adc
xor
lock
mov
fwait
aaa
outsl
lea
mov
outsl
sarl
addr16
dec
repz
cmc
jne
movsb
push
cmc
pop
or
sbb
outsl
fidivrs
cmp
inc
xor
je
pop
xchg
int
lahf
aaa
leave
notl
cmp
xchg
gs
pop
stc
jns
mull
pop
fst
stc
inc
inc
sub
shlb
sqrtps
mov
cli
fsubp
pop
mov
enter
stc
stc
repz
push
out
xor
lods
clc
sarl
movsl
icebp
push
iret
lahf
aas
pop
jmp
insl
inc
adc
adc
test
repnz
mov
sub
hlt
xchg
int
pop
push
insl
shll
sub
mov
pop
push
les
popf
or
es
test
sbb
outsl
ficoms
loop
ja
out
mov
fwait
shll
sbb
push
jg
xor
inc
aas
cmp
stc
repz
xlat
jbe
inc
in
pushl
iret
mov
fnstenv
addl
lcall
outsl
cs
jl
xchg
aaa
rorb
xor
mov
stc
repz
and
imul
repnz
loop
fwait
ja
sbb
xchg
jne
jp
inc
mov
cs
jbe
aaa
outsl
fiadds
rorl
in
js
repz
mov
jg
pop
aaa
sbb
ds
out
cmp
mov
cmpsl
int3
aas
xchg
cld
jge
rep
xchg
fwait
mov
push
nop
pop
push
shl
ss
mov
sbb
fstl
icebp
sbb
add
push
xor
xor
in
pop
aas
push
shr
icebp
sbb
pop
add
pusha
mov
int
aaa
outsl
jecxz
jg
fidivs
nop
xor
stc
icebp
sbb
sbb
out
pop
stc
js
mov
int
iret
aas
push
or
bound
dec
lea
stc
repz
fldenv
fcomip
push
push
aas
pop
mov
mov
ja
cwtl
jmp
xlat
adc
ret
sbb
dec
mov
jns
out
jg
jbe
jbe
out
outsb
and
mov
push
pop
fnstcw
sbb
inc
jp
enter
out
outsl
dec
jle
push
jle
jae
aas
jg
cld
jge
jge
jo
insl
pop
jbe
andb
repz
lahf
xor
add
fcompp
lea
jg
cld
stc
or
jecxz
addb
sti
add
out
fwait
ja
test
loop
jb
jb
loopne
mov
pop
loopne
loopne
jo
push
cld
int3
mov
das
into
xor
repz
test
inc
call
clc
sbb
cld
stc
hlt
push
mov
adc
jl
test
iret
lahf
aas
aas
jge
xchg
lods
add
ss
stc
repz
xor
and
fdivs
sbb
aas
jg
xchg
popf
lahf
bound
sbb
xor
xchg
dec
adc
xchg
insb
pop
xchg
pop
sahf
aas
jg
xchg
loop
jge
push
pop
jecxz
xor
scas
stc
adc
mov
popf
sbb
sub
and
mov
add
add
loop
jmp
ret
int
aaa
out
ja
imul
subb
iret
mov
jbe
hlt
add
imul
adc
aas
outsl
ficomps
add
or
out
fwait
bound
mov
jp
les
mov
int3
mov
les
sub
mov
orb
ret
and
pop
in
out
fwait
aaa
xchg
push
xchg
mov
mov
mov
repz
mov
orb
mov
jle
sub
mov
fwait
aaa
push
inc
xor
inc
inc
mov
xchg
int
into
and
push
push
mov
outsl
fidivrs
outsb
lods
xchg
push
call
movsl
and
out
fwait
aaa
int
xor
jo
andl
dec
repz
jecxz
inc
gs
fwait
andb
pop
inc
popa
mov
loop
jns
out
dec
aam
jl
popf
scas
mov
or
xchg
push
pop
lahf
jg
in
xchg
fsubrs
mov
push
mov
xchg
jmp
add
cltd
mov
cmp
and
cld
iret
cmp
jae
cmp
xlat
adc
adc
outsb
or
or
stos
inc
pop
push
push
subb
lea
or
pop
dec
sarl
mov
mov
inc
inc
cmp
dec
shrb
pop
adc
and
adc
add
push
stos
sbb
push
fwait
sub
or
adc
or
or
ret
pop
sbbb
stos
pop
cmp
aam
push
cs
lock
movl
adc
mov
insb
mov
inc
jp
push
xor
pop
push
sub
es
or
adc
jge
and
mov
push
jae
sub
xor
test
sarl
sbb
bnd
test
mov
pop
adc
xor
clc
pusha
sbb
adc
sbb
out
push
mov
sarb
push
pop
jae
and
dec
roll
sub
into
push
into
inc
inc
add
cmp
jp
sub
push
sbb
rclb
scas
rcrb
or
enter
cmp
adc
das
js
mov
mov
lahf
js
shll
add
bound
insl
push
adc
gs
sbb
sbb
sbb
pop
in
and
sub
enter
xchg
push
shlb
shr
jp
xor
jb
out
mov
rol
adc
cmp
sbb
and
subb
inc
aam
sbb
sub
popf
adc
sbb
or
int
jge
push
insb
sbb
mov
pop
adc
or
push
inc
pop
mov
adc
add
rcl
cwtl
add
mov
icebp
adc
popa
cmp
xchg
mov
add
adcb
and
adc
inc
cmp
sbb
test
jmp
or
or
subl
les
inc
scas
sub
inc
xchg
add
push
daa
orb
add
mov
add
pop
jp
add
mov
xor
push
cmp
sbbb
add
or
imul
xchg
and
sbb
scas
icebp
dec
jo
or
rcrl
adc
stos
mov
and
rcrb
jae
adc
cwtl
jbe
mov
test
or
jo
adc
mov
lock
or
or
xor
out
mov
inc
adc
clc
adc
cmp
in
or
adc
jne
push
xor
inc
inc
shlb
das
mov
push
dec
unpcklps
into
sbb
mov
jle
adc
icebp
sbb
outsl
adc
jo
inc
hlt
inc
add
cmp
mov
or
adc
pop
inc
mov
movsl
sbb
into
ret
or
xor
scas
cmpb
sbb
cwtl
xchg
inc
js
dec
arpl
sbb
add
ret
adc
sub
push
add
test
aad
mov
cmp
inc
daa
rcl
pop
sub
jnp
add
mov
and
shl
repnz
mov
xor
adc
int
mov
jp
adc
mov
mov
xchg
popa
call
inc
mov
jge
inc
push
pop
shrl
sbb
pop
out
mov
mov
inc
adc
lods
dec
sbb
mov
dec
lret
push
jne
adc
cmpsb
mov
xor
pop
inc
mov
add
enter
es
mov
add
orl
ret
xchg
inc
jne
and
jmp
rclb
xor
sbb
inc
lret
outsb
adc
pop
push
dec
sub
stos
or
inc
pop
scas
and
clc
xor
test
outsb
mov
fwait
adcl
and
mov
mov
int
int3
push
jge
add
add
or
rorb
nop
adc
push
mov
data16
add
mov
and
or
loop
mov
add
sbb
add
subl
jecxz
test
loope
cld
bound
rol
mov
cli
aam
mov
add
scas
add
jp
push
push
adc
gs
push
xor
jb
jge
lret
add
clts
pop
jmp
daa
mov
setne
push
dec
ds
sbb
rorl
sbb
mov
push
ss
and
imul
or
xlat
push
andb
cmp
push
xor
les
ret
clc
sbb
hlt
add
jne
add
and
subb
das
lret
inc
adc
inc
lock
stc
faddl
push
sbb
push
pusha
sub
loopne
sub
lret
push
pop
int
push
rolb
mov
mov
jp
incl
stos
mov
mov
inc
add
fimull
leave
cmpl
lret
in
mov
add
xchg
or
push
mov
ss
add
push
scas
or
inc
int
add
or
and
call
pusha
fstpt
icebp
fists
data16
ret
push
push
mov
mov
rcrb
pop
jno
mov
mov
adc
cmp
lcall
adc
dec
ret
mov
cmp
ret
scas
div
popa
or
nop
leave
aad
outsb
add
push
inc
rdpmc
sti
ror
mov
add
or
pop
stos
add
or
cmc
jne
inc
enter
enter
ud2
or
add
cmp
rcrl
pop
add
jo
clc
clc
or
test
test
bnd
sbb
aad
jo
lea
or
loop
sub
das
pushf
mov
negb
sub
add
push
lods
lods
in
popf
sbb
rcrl
mov
dec
add
or
mov
shl
jno
mov
or
mov
and
cmp
adc
jae
xorb
adc
pusha
mov
inc
sub
adc
jp
into
or
cmp
add
icebp
fisubl
enter
push
sub
push
cs
nop
and
fs
rclb
add
jle
shl
xchg
and
sbb
xorb
ss
aam
sub
pop
mov
xor
push
dec
mov
xor
jle
test
or
subb
mov
xchg
fadd
loopne
push
push
or
fs
push
or
cmp
addb
mov
jb
rcrb
shr
inc
bound
sbb
clc
or
lods
adc
adc
xchg
adc
fdivrs
ljmp
in
sbb
cmpsb
mov
pop
add
in
icebp
cmp
inc
fdivs
or
xor
xchg
lret
lret
or
scas
call
add
lods
sarl
inc
add
push
inc
pop
xchg
add
test
add
inc
rcll
and
inc
loop
test
jne
popa
and
pop
sbbb
or
sub
daa
fs
mov
mov
sub
xchg
or
or
push
mov
orb
add
cmp
adc
dec
or
out
test
push
add
pop
push
xor
into
push
cmc
ret
sbb
rorb
sbb
mov
sub
or
add
ljmp
cmp
mov
push
ret
mov
fldt
stos
sub
mov
push
cmpsb
outsb
add
sbb
sub
xor
xchg
mov
pop
mov
xor
jge
cli
mov
call
mov
add
push
movsb
or
mov
xor
scas
pop
fcmovbe
adc
inc
push
mov
sbb
mov
cmp
imul
mov
test
in
insb
imul
cmp
roll
push
orl
ret
sbb
sub
mov
ss
call
test
adc
and
or
sbb
clc
mov
mov
add
jo
adcl
add
xor
js
or
adc
repnz
adc
xchg
push
sub
and
adc
mov
les
sub
add
js
enter
hlt
sbb
jbe
mov
inc
stos
fcomps
js
mov
jnp
cltd
sti
jp
or
add
leave
mov
enter
dec
adc
add
jge
jbe
enter
negl
clc
sbbb
stos
mov
mov
xchg
adc
arpl
loopne
loopne
push
jp
push
xchg
adcl
sub
adc
add
test
sub
inc
aam
shlb
and
mov
cli
push
es
test
subb
adc
and
sub
rcrl
mov
pop
rorb
sbb
and
rcl
adc
push
aaa
sub
add
push
lock
inc
or
mov
leave
rol
xor
roll
mov
mov
leave
cmp
mov
push
and
or
mov
fistl
xchg
mov
mov
mov
push
sbb
sub
shrb
out
xor
loopne
orl
and
mov
mov
pop
sub
roll
insl
push
cmovg
xor
xor
ror
push
push
push
cmp
pop
fdivrs
cmp
sub
xlat
cmpsb
pop
cwtl
sarb
inc
dec
sbb
les
shlb
xor
add
adc
repnz
or
jns
fs
push
ret
inc
add
and
arpl
sahf
adc
push
push
push
sub
push
lods
leave
or
adc
add
and
adc
push
add
push
push
les
sub
mov
stos
dec
add
push
jns
je
loope
movsb
add
leave
push
push
loopne
call
js
les
addr16
inc
and
lret
lcall
ret
jne
mov
adc
push
pcmpeqb
xchg
loope
pop
icebp
add
pop
popa
xor
leave
and
xor
call
adc
dec
inc
push
push
xchg
dec
pusha
push
sbb
push
mov
fidivrl
push
cmc
or
jne
push
enter
and
mov
pop
dec
dec
stos
test
faddp
leave
mov
test
xlat
or
sarb
sub
cmpsb
dec
and
mov
roll
mov
pop
inc
andb
add
inc
xor
and
pop
adc
mov
sbb
push
roll
mov
in
in
pop
add
popf
add
and
pop
imul
orb
scas
int3
and
adc
mov
push
and
mov
mov
cltd
cmp
pop
inc
popf
push
mov
mov
push
sar
aam
movsl
es
cmpsl
sbb
shrb
cmp
adc
push
push
adc
pop
ljmp
loope
fmull
xor
push
fdivrs
mov
push
push
add
bound
jno
xor
or
sub
mov
shrb
and
cmp
out
cmp
notl
test
jl
xor
lcall
xor
imul
mov
or
flds
and
outsb
test
out
or
stos
lock
pop
dec
jo
imul
test
lods
fidivrs
movsb
adc
rorb
cmp
dec
fnstenv
ror
les
call
lock
mov
and
cmp
loop
sub
jo
mov
sub
enter
or
push
sbb
sub
add
sub
rorb
xor
push
sbb
cmpsb
sbb
adc
push
repz
add
jae
mov
or
mov
enter
xor
lea
mov
and
adc
repnz
adc
push
mov
add
mov
cmp
in
orb
leave
push
xchg
xchg
lock
push
or
mov
sbb
pusha
pop
test
stc
adc
js
jle
ljmp
mov
or
push
movsb
sub
cli
mov
mov
rcrl
and
inc
enter
mov
xchg
sbb
mov
jne
subb
sub
add
cmp
stos
pop
out
push
dec
xor
cmp
mov
arpl
je
adc
out
pop
hlt
cmp
mov
out
xor
mov
xor
icebp
sub
push
shr
loopne
lret
push
in
adc
mov
push
in
es
out
mov
push
or
adc
inc
in
adc
mov
cmp
cltd
pop
scas
insl
lods
andl
mov
xchg
test
shr
push
enter
add
adc
add
push
sbbb
fcom
inc
cs
inc
add
jmp
inc
sbb
in
cmpsl
jecxz
popa
adc
sub
mov
out
adc
inc
rcll
leave
pop
inc
into
add
dec
dec
sub
add
pop
mov
mov
repz
mov
enter
xor
push
push
aam
rcrl
mov
lcall
push
jae
out
xor
add
xchg
dec
sbb
push
pop
push
cmp
add
cmpsb
pop
sbb
jle
jmp
imul
push
mov
push
inc
mov
mov
or
and
shl
pop
dec
rol
test
sbbb
aam
sub
test
push
loope
mov
jb
push
xor
cmp
aas
fidivrs
gs
not
movl
mov
rclb
push
adc
sub
mov
clc
enter
push
lcall
xchg
mov
js
nop
shll
add
add
pop
mov
sarb
popa
fimuls
sbb
push
adc
ss
sbb
push
pop
push
push
je
mov
shlb
add
adc
sbb
add
fistpl
pop
shll
rolb
popf
rorb
pop
in
ret
out
stc
inc
pop
push
loope
addb
xchg
sbb
xchg
cs
sbb
add
or
push
or
mov
adc
daa
fmull
sub
pop
movb
push
dec
cmc
or
data16
test
mov
pop
mov
les
sbb
jle
adc
mov
pusha
test
pop
add
add
sbb
push
xlat
pop
repnz
mov
leave
int3
test
idivb
mov
fwait
and
gs
movsl
dec
jb
sbb
loope
iret
loope
xchg
inc
add
test
sub
and
sub
fldl
enter
mov
and
cmpb
sub
jecxz
mov
xor
mov
out
subl
shlb
xchg
push
ja
xlat
or
pop
jbe
adc
adc
jmp
push
xchg
cmp
scas
mov
lcall
add
in
or
xchg
or
adc
and
lcall
mov
adc
xlat
mov
adc
shrl
das
or
mov
sub
cmp
xorb
mov
and
and
cmp
je
inc
push
xor
inc
or
lret
in
rclb
pop
nop
andb
cld
lahf
fbld
mov
sarl
or
into
clc
adc
add
les
subb
mov
dec
nop
out
loopne
push
jne
push
mov
mov
jge
sub
test
subl
mov
mov
pop
arpl
push
adc
sbb
inc
add
add
test
bnd
push
cmp
adc
test
push
pop
testb
pop
lock
push
clc
lret
shrl
push
jae
je
shrl
xor
movsb
iret
and
sub
loopne
mov
cwtl
or
pusha
or
mov
test
lock
aaa
lods
adc
and
enter
add
arpl
mov
dec
xchg
add
push
outsl
sbb
addb
mov
sbb
in
insb
pushf
sub
jl
and
adc
mov
lret
in
mov
sbb
pop
cmpsb
and
sub
or
addl
mov
inc
xor
mov
sbb
aad
cmpsl
add
push
sbb
pop
dec
or
rcrb
repnz
test
jne
fiaddl
adc
movb
pop
lea
mov
stos
cmp
push
inc
or
les
jbe
lea
cmp
push
lds
xor
pop
fxsave
push
mov
inc
and
setle
xorl
out
rcrl
add
and
inc
pop
inc
add
enter
or
push
xor
adcl
adc
test
inc
push
lods
scas
cmpsb
add
test
stc
mov
js
adc
xchg
xor
in
nop
xorb
and
testb
jge
dec
push
add
pop
jle
stc
or
scas
and
add
push
sub
xchg
pop
cmp
fisttpll
adc
add
xlat
and
or
clc
adc
sub
rclb
push
inc
pusha
loop
lods
cmc
xor
subb
outsb
lret
std
xchg
add
cli
push
addb
adc
dec
push
add
mul
enter
inc
stos
lds
add
lods
das
push
mov
andb
insb
pop
push
sbb
push
add
cmp
leave
mov
xchg
add
mov
jb
add
out
push
push
cmp
push
stos
cli
add
adc
sbb
xor
adc
add
fwait
lds
les
stc
or
aas
lea
cmp
jae
sbb
aaa
movsl
mov
adcb
dec
adc
add
cmp
pop
gs
aam
enter
dec
or
pop
daa
lret
xchg
test
inc
dec
pop
add
ss
fidivs
mov
faddl
sub
data16
call
int
mov
cltd
adc
ret
and
jge
mov
add
int
push
mov
or
pop
es
imul
sub
scas
iret
adc
test
inc
enter
push
push
pop
pop
insb
pop
inc
lock
out
add
arpl
inc
sbb
xchg
sarl
mov
les
ret
xchg
cs
add
roll
xchg
or
ret
adc
push
into
cmp
rol
jbe
cmp
in
sbb
pop
jnp
cmp
jae
scas
sbb
pop
xchg
sbb
mov
adc
test
adc
fs
sub
add
xorb
push
pop
pusha
add
inc
int
cld
je
das
test
sbb
popf
lods
xor
mov
jnp
inc
or
std
sub
test
cmc
or
out
adc
leave
mov
pusha
add
add
jb
or
xchg
test
jl
mov
jg
mov
add
mov
out
sarl
push
xor
xchg
ror
inc
div
test
ljmp
inc
push
sub
push
xchg
inc
and
ret
inc
inc
scas
popf
cmpb
mov
adc
xorps
loope
push
sbb
out
mov
push
test
xchg
or
pop
push
sub
mov
fwait
inc
sub
add
jge
add
mov
addb
sub
orb
push
in
fnstsw
rcl
shll
lret
mov
dec
call
sbb
sbb
shl
inc
or
jp
xchg
rcrb
jnp
add
and
sub
push
shl
push
xor
les
inc
add
jnp
stos
mov
imul
jo
dec
leave
pop
pop
push
cmp
sahf
sub
add
push
xchg
xchg
int3
addr16
pop
pusha
sub
in
push
lea
or
or
push
inc
jp
push
push
cld
ret
movb
lock
dec
cmp
shl
fldl
sbb
and
mov
cmpsb
dec
into
pop
xchg
add
out
int
cmp
add
test
test
add
rorb
sahf
push
cli
sbb
nop
imul
jae
popf
cmc
push
movsb
or
popa
test
sbb
loopne
lods
movups
add
mov
xchg
cltd
repz
lods
xchg
leave
push
mov
bound
jb
ja
popf
xor
loopne
pop
les
daa
enter
push
push
and
xor
sub
mov
add
jnp
pop
cmp
rcl
leave
or
adc
and
mov
mov
mov
jmp
push
stc
ret
inc
lret
enter
aad
pushf
add
setp
cmp
and
jnp
pusha
push
add
xchg
sub
pushf
inc
rol
add
adc
pop
mov
ret
cmp
adc
sarb
repnz
ret
pop
push
imulb
mov
jae
mov
add
push
mov
sub
icebp
pop
add
or
jecxz
andl
testb
sbb
or
lret
adc
loop
mov
mov
sub
inc
outsb
mov
add
mov
sbb
add
lock
hlt
xchg
push
lds
loope
cli
hlt
ret
push
loopne
push
mov
add
or
add
pop
mov
pop
add
push
xlat
xor
mov
sub
arpl
lcall
adc
xchg
shll
mov
sahf
add
inc
adc
imul
lods
jb
adc
lods
add
or
jl
sbb
or
sbbl
cwtl
push
dec
imul
push
outsl
push
mov
sbbb
add
push
sub
lret
xchg
jo
popf
mov
jg
xor
test
mov
pop
push
je
clc
push
mov
lock
push
cld
cmp
inc
dec
test
add
add
or
xchg
inc
lods
or
or
test
add
or
ret
mov
mov
xchg
mov
jnp
adc
nop
lret
fadds
addl
or
jno
in
or
pusha
mov
insl
push
roll
mov
xchg
cmp
jbe
cmc
xor
or
imul
xor
adc
sbb
xchg
incb
or
lret
sbb
sbb
adc
aas
adc
cld
add
jb
mov
mov
dec
lds
pop
xor
and
mov
mov
xor
push
and
mov
sbb
push
sub
sti
iret
dec
call
inc
add
inc
xor
adc
lock
dec
scas
jne
sbb
pop
push
push
push
scas
and
leave
mov
adc
lds
cwtl
add
xchg
adc
cmp
fdivrl
mov
adc
ss
or
shl
sub
add
stc
imul
nop
stos
pop
pop
push
add
test
cmp
bound
addb
or
or
push
scas
scas
clc
adc
repnz
sbb
sub
roll
out
push
sub
push
mov
sub
hlt
push
das
dec
insb
into
push
pop
adc
orb
addr16
sahf
mov
add
sahf
sbb
add
sahf
sub
add
lock
lcall
andb
leave
leave
inc
add
scas
bound
mov
mov
lret
or
or
adc
dec
stos
outsb
mov
pop
shr
enter
mov
add
push
popa
inc
popa
or
scas
inc
push
push
call
out
push
mov
cmp
test
push
and
pushw
mov
dec
dec
rclb
imul
xor
pop
in
sub
add
mov
or
or
lds
push
in
loopne
inc
inc
stos
pop
shll
mov
scas
add
sub
dec
xlat
pop
int3
sub
test
mov
stos
lock
in
jg
dec
leave
mov
ret
and
jp
jnp
adc
dec
lret
loope
nop
cli
sti
mov
stos
lock
sbb
fcompl
add
cmp
mov
adcl
push
cmpsl
scas
leave
nop
add
adc
add
jp
inc
push
scas
adc
jecxz
cwtl
pop
add
mov
dec
rol
add
rcll
add
lcall
inc
lds
sbb
sbb
mov
movsl
adc
push
add
xchg
mov
xchg
pop
aad
xchg
sub
loop
lcall
icebp
icebp
sbb
leave
adc
adc
mov
or
xchg
loop
dec
add
jo
xlat
sub
add
jp
rolb
insb
push
filds
push
pop
inc
mov
enter
loopne
xchg
mov
and
adc
push
andl
adc
rcrl
xor
roll
rclb
mov
sbb
mov
je
cmp
mov
in
cmp
pusha
mov
ss
push
sub
inc
mov
push
push
xchg
or
test
inc
inc
cmp
aad
ret
sbb
int3
add
loopne
push
rolb
cmp
shrl
add
rclb
cmp
add
inc
lock
clc
xor
lret
arpl
sbb
icebp
ja
inc
mov
cmp
add
sub
cmp
cmpsl
adc
sbb
mov
es
test
xchg
dec
rcl
ja
mov
shl
inc
cmpsb
jo
or
sub
add
mov
push
in
in
add
mov
xor
adc
push
sbb
or
add
pop
or
push
lods
scas
push
scas
lods
leave
jecxz
xor
push
loop
inc
jo
push
add
icebp
pop
pop
cmp
rclb
lret
xchg
dec
dec
das
add
cmc
xorb
aam
dec
pop
mov
inc
mov
xor
add
sbb
push
push
sub
subl
je
ret
mov
add
pop
inc
adc
pop
js
mov
test
clc
int3
fisubrs
pop
mov
jo
add
bound
mov
aad
and
bound
or
or
jns
gs
push
xchg
out
add
adc
xlat
xor
add
leave
pop
xor
test
pop
xchg
adc
cmp
pop
out
jae
dec
jge
mov
or
add
jb
pop
lret
adc
xchg
icebp
mov
jae
orb
push
push
popf
mov
sarb
or
ret
lds
sbb
rclb
or
test
jl
cli
mov
testb
add
mov
inc
aas
inc
rol
in
mov
lret
mov
push
xchg
push
or
cs
xchg
jnp
add
iret
imull
adc
xchg
addb
aad
adc
negl
test
add
lods
sahf
dec
sti
test
dec
leave
rcrl
push
loope
xor
add
shrl
and
ror
fwait
and
fs
xor
cmp
mov
addb
jmp
fisubrs
push
popf
lds
popa
sbb
mov
or
shrb
decb
cmpl
add
sbb
sbb
xor
fcomps
inc
adc
push
sbb
mov
push
xorb
mov
sbb
mov
pop
das
mov
or
rol
dec
in
mull
jecxz
mov
adc
xchg
mov
nop
dec
mov
shr
push
adc
push
add
sbb
or
inc
xor
mov
xchg
adc
pop
lock
sti
xchg
fwait
jb
inc
mov
adc
or
out
lret
cli
add
mov
inc
mov
sub
inc
test
imul
jo
add
fcmove
pusha
jb
sbb
test
cmp
sub
cwtl
in
and
push
mov
and
ljmp
jp
je
dec
fadd
es
rolb
js
jecxz
arpl
push
or
ljmp
add
mov
mov
xor
enter
push
je
sbb
pop
push
leave
push
subl
mov
testb
and
sbb
mov
sbb
popf
sub
pop
add
jge
aad
mov
adc
push
adc
sbb
jmp
add
jo
jae
push
push
rcrb
jno
into
inc
mov
adc
xchg
insb
jmp
daa
ret
or
std
repnz
and
sahf
je
sub
sbb
lea
jne
or
push
add
cmpsb
test
mov
and
adc
or
jo
ss
or
ret
popa
mov
push
dec
push
jmp
mov
sbb
dec
fimuls
push
test
pop
aam
mov
roll
mov
fists
mov
and
popa
add
push
push
xor
imulb
jo
or
dec
roll
into
inc
xor
push
lods
loop
pop
cltd
movsl
adc
and
mov
out
into
clc
mov
xchg
sbb
cltd
ljmp
mov
nop
adc
enter
fcmovnbe
mov
imul
inc
adc
test
loopne
adc
cmp
aaa
orb
sub
inc
rclb
rcrb
xor
jne
adc
sub
push
push
stos
pop
jbe
push
sbb
mov
add
adc
leave
jecxz
test
loope
cmp
lret
roll
and
aas
cmp
add
or
aaa
daa
es
pop
mov
rcrb
adc
outsl
pop
shlb
shll
aam
sbb
or
sub
jb
sub
inc
pop
ret
in
jge
dec
inc
xor
jae
ret
or
and
xor
adc
cmp
rcrb
jg
or
or
mov
add
rcrb
mov
lret
mov
sar
loop
dec
adc
or
mov
add
sahf
rclb
std
bound
push
adc
pop
and
cmpsb
xchg
loope
in
gs
dec
inc
movsb
pushf
rcl
lea
add
add
lret
mov
sbb
pusha
lret
insl
stos
out
push
and
xor
and
add
pushw
cli
subb
push
pop
pop
or
push
add
mov
lret
push
push
adc
clc
out
push
cmp
sbb
imulb
adc
and
sbb
or
rcrl
xlat
js
inc
and
cmp
push
sub
mov
and
mov
fstps
add
subb
xchg
mov
shl
div
adc
sbb
mov
jo
add
or
jne
pop
pop
movsl
movb
sbb
cmp
xchg
pop
xor
or
movsb
dec
or
jne
push
mov
push
xor
loopne
into
push
mov
push
icebp
sbb
aam
jge
or
or
add
dec
repnz
jge
cmp
jne
or
aad
mov
loopne
lret
and
adc
sub
lret
cmp
xor
push
jecxz
jbe
add
jb
adc
dec
daa
inc
cmp
ljmp
sbb
adcb
loop
not
clc
mov
sub
test
test
adc
inc
xchg
mov
sbbl
xchg
sbb
xchg
mov
or
lock
push
jp
cmp
loope
mov
bound
pop
xor
ss
pop
adcl
jge
mov
push
dec
pushf
loope
imul
lret
add
rcl
inc
mov
push
and
or
push
and
pop
int
lds
inc
roll
rolb
add
add
sub
test
push
addr16
and
adc
inc
ret
stos
push
jb
push
loop
cmp
cmpsl
dec
and
fs
dec
inc
jge
sub
or
in
mov
mov
out
mov
or
push
add
cmc
push
movhps
push
xchg
sti
popa
inc
adc
adc
dec
repnz
inc
add
outsb
cmc
add
dec
orb
adcb
rclb
sub
cmpsl
aas
ss
es
js
inc
lea
cmpsb
mov
pop
addb
ret
push
cmpsb
or
pop
xor
lret
into
inc
dec
cmp
roll
sar
push
fcoms
mov
or
adc
inc
shll
mov
xchg
clc
add
pop
sub
test
popf
xchg
mov
dec
ret
rcrb
out
sbb
or
mov
cmp
leave
cmp
xor
pop
jo
pop
add
sbb
aad
lods
call
add
rorb
push
lock
adc
mov
inc
pusha
pusha
or
mov
add
or
cmp
iret
sbb
test
js
aam
fstps
sub
cmp
repnz
cmp
movsl
in
rolb
je
push
orl
fisubrs
jg
cs
ret
in
jbe
mov
mov
mov
push
shll
dec
je
pop
cmpsb
mov
xor
lahf
cli
ret
bound
mov
jmp
mov
jmp
and
add
pop
push
mov
add
les
dec
mov
icebp
pusha
sbb
xchg
je
push
mov
orb
scas
sub
outsb
jns
daa
sbb
adc
xchg
pusha
cmp
jbe
push
inc
scas
call
mov
mov
cmp
pop
mov
xor
or
add
jne
or
cmp
adc
adc
pop
mov
mov
mov
cmovl
inc
sbb
popa
push
adc
iret
mov
pusha
push
sub
aad
loop
cmp
dec
lock
jp
call
leave
icebp
sbb
and
iret
jne
and
inc
loope
pop
orl
mov
mov
push
xchg
loop
movsb
out
ss
mov
push
aam
and
and
sar
rcll
push
mov
scas
push
cmp
add
movsb
lcall
push
cwtl
cmpb
jo
add
xchg
lock
push
cmp
push
adc
mov
ljmp
sub
test
addr16
ficompl
sbb
mov
les
xchg
xor
and
jno
jnp
rcrb
add
push
sub
dec
or
mov
fbld
push
lea
inc
or
loopne
pop
and
xchg
adc
cmp
lret
popf
mov
repnz
sbb
push
out
add
loopne
jecxz
fadds
icebp
xchg
sub
inc
into
test
jo
sbb
nop
rorb
add
fisttpll
push
xchg
or
push
cmp
sbb
out
cli
enter
adc
xchg
stc
sbb
inc
add
iret
lock
je
ret
xor
dec
call
test
add
sbb
sbb
xor
cmp
xchg
icebp
add
mov
pop
adc
rorb
loop
xchg
shrl
push
and
pop
gs
push
mov
sbb
fmull
mov
sub
push
orl
add
cmpsb
and
xchg
sbb
cmp
adc
or
add
adcb
mov
addr16
rcll
push
into
and
adc
out
inc
mov
sbb
scas
movlps
sub
aam
dec
lret
popf
mov
and
imul
roll
or
pop
inc
rcll
or
repnz
ret
pop
mov
lds
dec
sbb
insb
cmp
push
gs
jg
inc
xor
minps
jp
into
xor
sub
or
call
ds
stos
xor
sbb
jp
cmp
iret
insb
lahf
setbe
js
loopne
rcll
sub
adc
push
mov
jae
adc
inc
push
push
nop
dec
sub
push
aas
rcrb
lods
add
inc
xor
add
insb
add
inc
je
adc
mov
fsubrl
add
inc
imul
popa
pop
test
cld
or
adc
lahf
inc
test
push
mov
loope
loope
pop
push
lcall
test
roll
cmp
push
adc
enter
shlb
rolb
lock
sbb
loop
dec
add
enter
sbb
test
rcll
pop
out
inc
and
lret
aad
sub
pop
fstp
and
loope
inc
xchg
mov
add
push
cmp
roll
mov
inc
adc
mov
ljmp
unpcklps
mov
lds
popf
sub
in
ret
mov
rorb
push
add
push
dec
dec
insb
add
push
sub
cmp
arpl
add
adc
rcl
pop
jecxz
xchg
scas
adc
xor
aam
xchg
in
imul
push
ror
adc
inc
xchg
xor
test
xchg
hlt
nop
mov
call
rclb
mov
stos
xor
inc
int
and
inc
in
dec
outsb
shll
aam
cli
adc
mov
or
jb
movsl
push
ret
xchg
jmp
add
inc
cmpsb
rcll
frstor
push
xchg
ljmp
mov
enter
aad
imul
jp
in
jg
mov
icebp
rorl
mov
mov
add
lret
mov
mov
push
adc
push
leave
and
test
xor
xchg
mov
xor
add
orb
inc
jg
mov
pop
in
pushl
cltd
sbb
sub
fs
insl
test
lret
and
andb
mov
inc
dec
fimull
mov
inc
cmp
add
adc
pop
int
negl
mov
xchg
add
cmp
xor
roll
and
push
pop
loope
dec
les
add
inc
aam
mov
sbb
xchg
negb
mov
lret
pop
sbb
adc
jae
cmp
sub
lahf
mov
jl
lds
fs
or
leave
outsl
pusha
subb
jmp
inc
stos
or
insl
into
push
adc
addr16
jmp
mov
sub
imul
mov
jb
pop
or
dec
push
dec
mov
sbb
lahf
adc
add
add
ds
xlat
stos
sahf
pop
leave
and
and
xchg
xor
mov
inc
pop
xchg
or
js
push
inc
adc
pop
pop
shll
icebp
lock
and
mov
push
mov
iret
repnz
pop
ret
mov
or
xchg
pop
shll
mov
sbb
inc
inc
lcall
and
sub
or
dec
inc
jb
imul
and
xor
aad
cmpsb
mov
pop
jb
xor
adc
mov
and
sti
jge
sub
hlt
lret
sub
dec
das
sub
lock
push
sbb
sbb
dec
lock
dec
push
jne
aam
sub
cld
shlb
push
inc
jae
mov
enter
push
cld
or
push
inc
mov
jb
sub
mov
jnp
inc
or
and
icebp
icebp
shrl
test
out
or
addl
add
cmp
fs
les
rcl
or
jmp
adc
inc
add
and
scas
inc
add
cwtl
nop
add
ds
pop
imul
adc
inc
add
sahf
or
cmp
jb
shlb
fwait
jae
fcompl
shrl
cmc
dec
shrl
lods
xchg
add
add
xchg
sahf
mov
sbb
pusha
or
fcoms
push
sub
mov
jp
inc
loopne
mov
adcb
mov
sub
pop
imul
dec
adc
test
in
lea
rclb
test
xor
hlt
aam
pop
js
push
add
stc
imul
decl
and
enter
pop
fs
out
or
push
and
mov
in
push
test
inc
rclb
insl
sub
or
sbb
enter
or
sbb
add
xor
mov
rolb
push
rcll
add
sub
bound
push
mov
leave
push
xlat
xchg
cmp
add
push
adc
push
pop
adc
push
sub
jo
nop
mov
push
cmp
adc
rcr
int
inc
pop
push
add
and
push
xor
pop
lret
add
mov
out
nop
imul
out
stc
test
out
or
icebp
jecxz
inc
lock
mov
cmpsl
int3
leave
inc
leave
loopne
lock
in
ret
rcrl
adc
inc
pusha
loopne
inc
and
sti
inc
mov
jge
or
add
pop
mov
sbbb
push
out
aad
fidivrl
and
push
add
inc
aam
leave
or
inc
add
andb
sti
aam
push
adc
adc
addr16
testb
orb
inc
push
mov
ret
jno
gs
push
sbb
int
leave
outsb
xchg
mov
cmp
ret
call
or
dec
stos
sub
add
in
int
movsb
add
bound
imul
stos
inc
xchg
xchg
sub
outsb
mov
inc
mov
xor
jo
or
pop
or
test
or
cmp
and
mov
inc
out
dec
push
pop
inc
movhps
movsl
fcoml
mov
dec
sbb
or
rorl
shrb
sub
xchg
es
mov
xchg
sub
.byte
das
call
in
add
imul
add
add
sub
cmp
mov
or
push
add
mov
mov
sub
cmp
add
mov
mov
imul
adc
sti
mov
cld
sbb
sub
sub
add
mov
or
sarb
rolb
leave
push
or
into
add
aas
neg
fcmove
push
sbb
push
testb
mov
int
or
lret
add
rolb
icebp
sub
lret
mov
or
rclb
mov
cmp
add
mov
mov
add
movb
xor
mov
out
mov
pop
push
mov
sub
push
add
lahf
xor
xchg
call
mov
mov
insl
aam
cmp
cmp
pop
or
outsl
mov
mov
adc
sub
test
ljmp
pop
jnp
xabort
mov
movzbl
mov
jbe
mov
sub
mov
adc
leave
fistpl
fwait
ret
mov
lods
mov
daa
sbb
sarl
push
pop
test
je
xor
in
lea
cmp
dec
add
imul
jnp
jbe
pop
jnp
hlt
lods
pop
mov
fildll
test
jo
imul
pop
imul
inc
push
jmp
ret
outsb
test
sbb
cld
cmp
sbb
jbe
enter
cmp
pop
lret
aaa
testl
cli
adc
adc
or
fisubl
ret
mov
dec
sarb
aaa
inc
sahf
pop
add
test
int
push
out
add
lods
adc
imull
imul
or
push
orl
mov
test
mov
adc
movsb
js
adc
mov
adcl
imul
into
cmp
gs
sbb
fcmovnu
mov
push
cmpsb
adc
add
test
or
mov
pop
stc
adc
sbb
cli
push
jmp
sbb
or
adc
fcmovnbe
pop
jnp
mov
mov
pop
adc
xor
or
or
fcmovnbe
push
loope
adc
mov
xor
xor
ss
mov
sbb
sbb
shr
sbb
add
dec
insl
mov
mov
daa
adc
imul
mov
push
out
ret
push
gs
movsb
sbb
out
sbb
sbb
outsb
push
sbb
pop
shr
ret
lret
and
or
repnz
cmp
fbstp
popa
rcrb
jbe
rcrb
pop
or
add
and
cmp
mov
shll
cs
lods
mov
mov
and
sbb
sub
pop
xor
popf
jnp
mov
das
add
push
add
rolb
add
fistpl
jb
or
imul
divb
add
lcall
notb
xlat
jo
jecxz
in
jae
out
add
mov
mov
fistl
test
pop
mov
pop
rclb
imul
adc
mov
in
adc
out
sbb
sbb
mov
push
and
mov
insl
xchg
mov
dec
shll
test
and
iret
clc
mov
stos
jnp
sbb
or
decb
fwait
jo
call
sti
test
push
fcmovnu
inc
dec
or
ret
jb
adc
cld
jecxz
jmp
negb
inc
insl
testl
jmp
fmuls
mov
sbb
add
mov
jecxz
mov
leave
ret
clc
call
mov
sub
mov
lret
pop
push
push
or
mov
pop
push
ficompl
gs
jae
jp
scas
lods
add
and
pop
je
xor
cmp
adc
mov
adc
or
mov
pop
cmp
fisttpll
mov
jno
sbb
cmp
int
sub
adc
mov
mov
jmp
cli
or
sbb
and
test
push
and
in
notl
imul
sbb
rorl
loope
xor
lret
shlb
inc
test
in
outsb
out
or
movl
xor
int
sbb
punpcklwd
clc
mov
jmp
pop
icebp
decb
mov
or
lahf
sbb
push
imul
sbb
adc
push
add
push
mov
stc
or
and
lret
lock
clc
xchg
imul
stos
add
push
rcr
stos
push
inc
sbb
clc
pop
mov
fsts
addb
mov
sbb
mov
repnz
dec
loopne
pusha
fcomps
outsl
pop
cs
adc
sti
popa
mov
sti
xor
sarb
jne
lods
popa
loopne
adc
je
les
jnp
mov
cmc
dec
arpl
loop
dec
pop
mov
mov
or
mov
add
mov
jecxz
pop
cmp
rol
sbbl
add
push
out
shrl
aas
or
clc
add
fcomps
mov
add
mov
push
aad
xchg
ljmp
inc
mov
sbb
mov
addl
clc
stos
add
xor
mulps
sbb
push
arpl
sub
test
adc
incb
ret
push
stos
stos
orl
negb
pop
imul
xor
cli
pop
mov
scas
or
push
scas
shl
movsl
ret
pop
push
mov
cli
pusha
mov
rcl
mov
into
pushf
add
rclb
xor
push
and
add
ret
loop
sbb
cmovp
and
mov
roll
cmp
push
andl
jo
leave
roll
fsubs
lock
adc
push
data16
rolb
jae
roll
inc
stos
pop
insl
pop
mov
loopne
xor
push
data16
pop
mov
adc
jo
shr
adc
pop
bound
sub
ret
adc
sub
lret
rorl
mov
adc
add
cltd
mov
testb
adc
or
pop
pop
pop
scas
leave
inc
lock
jp
jne
push
std
pop
xor
fistl
xor
or
insb
lods
insl
ret
mov
adc
push
daa
cmp
add
sti
cltd
adc
pop
test
hlt
and
inc
test
cmp
sbb
pop
mov
mov
ds
cmp
pushf
unpcklps
cmp
pop
lahf
pop
mov
push
icebp
pop
pop
xor
mov
adc
mov
emms
ret
shll
popf
lcall
mov
in
xlat
int3
push
hlt
jl
xchg
sbb
jns
insb
xchg
or
pop
adc
or
out
lods
sub
in
lcall
pop
dec
mov
sub
pop
popf
leave
push
roll
push
cmc
incl
or
jbe
inc
addr16
or
insb
xor
mov
pop
insb
test
outsb
mov
jge
enter
jge
test
pop
xor
clc
lcall
cmp
icebp
mov
add
lret
fcmovnbe
fiaddl
enter
repnz
inc
hlt
nop
enter
cmp
dec
adc
pusha
mov
stos
enter
lock
mov
nop
pop
adc
sbb
inc
inc
lock
push
pop
out
mov
push
xchg
push
inc
dec
add
cmp
adc
pop
xchg
iret
or
mov
insl
or
fbld
mov
aam
sub
sbb
call
lock
mov
das
lock
cmpsb
rolb
stc
sbb
fimull
cmp
jp
test
mov
shl
cmp
pop
stc
push
bound
sub
mov
rcl
xor
pop
mov
popa
mov
int
adc
adc
push
push
xor
xor
or
std
enter
adc
mov
mov
in
cmp
andl
cmp
jo
lahf
jbe
shrl
in
ret
inc
loopne
sarl
or
rclb
sub
into
loopne
shlb
adc
jl
cmp
sbb
pusha
ficoml
lret
sbb
add
roll
sbb
add
add
mov
adc
out
or
shl
cmpsb
sbb
or
pop
inc
xchg
or
mov
out
push
fldt
push
xchg
xchg
sbb
popa
add
rorb
stc
inc
lods
or
and
ds
pop
insl
sub
push
out
cs
scas
pop
es
enter
cmp
and
nop
ret
xor
push
ret
add
aam
cmp
and
les
or
add
fimull
jno
mov
fistpl
push
push
sub
enter
push
fildl
addb
leave
mov
cs
mov
push
outsb
int
and
leave
shll
mov
sbb
push
pop
js
push
stc
jb
mov
popa
push
pushf
pop
imul
mov
xor
mov
ret
add
and
shl
jne
jno
ljmp
setl
or
pop
roll
lret
aam
test
sbb
gs
or
rol
ds
xor
inc
stc
sbb
out
mov
push
pop
add
rorb
mov
jo
mov
add
mov
push
sub
mulb
inc
or
mov
jp
ror
add
lock
push
add
call
js
pusha
jo
jo
shlb
fwait
shrl
notl
cmp
popf
mov
push
xor
inc
and
push
xor
mov
imul
mov
hlt
cs
pop
jecxz
mov
ja
sub
or
jb
mov
scas
sub
push
fsubrl
sahf
cli
sbb
in
mov
push
push
cmp
xchg
inc
pop
sbb
push
jne
cwtl
push
mov
arpl
rolb
adc
lods
lods
pusha
ljmp
inc
lahf
mov
test
daa
inc
or
push
es
cmp
int
test
aam
xor
ljmp
jecxz
ds
cmp
push
pop
sbb
mov
fsubp
lock
mov
push
ljmp
sub
rcr
xchg
ret
push
pop
dec
ret
bound
es
pop
stos
shll
jg
ss
add
or
cli
lods
push
sbb
sub
push
fdivs
arpl
push
add
jo
xor
mov
js
add
scas
rolb
ret
test
call
imul
pop
xor
jo
inc
repnz
lret
arpl
je
icebp
aas
shll
js
push
adc
jl
jge
enter
mov
sub
sbb
xchg
repz
pop
jge
push
mov
xchg
xchg
lret
icebp
stos
add
pop
sbb
sub
in
adc
pusha
test
fimull
dec
fwait
add
cmpxchg
cmpsl
data16
xchg
cmp
xor
dec
pop
cltd
adc
or
xor
add
mov
das
repz
cmp
push
sahf
in
and
out
mov
shlb
cltd
mov
push
pop
mov
sub
enter
mov
roll
pop
mov
xor
jmp
and
cmpsb
inc
mov
push
icebp
rolb
aam
sbb
mov
mov
mov
or
cmp
xlat
adc
cmp
or
push
lret
subb
mov
and
jbe
mov
pop
dec
int3
int3
inc
mov
mov
or
imul
mov
or
cli
xchg
sahf
cmpsl
incl
push
push
push
push
jns
les
mov
test
mov
xchg
addl
movsl
xor
and
leave
xchg
in
pop
int
shlb
popf
or
sbb
fmuls
clc
out
bt
aad
push
push
mov
or
xor
fsubl
push
test
cmpsl
mov
outsl
mov
aas
lret
and
mov
dec
rcll
insl
mov
push
cmp
jle
jmp
push
push
mov
sub
lret
mov
xlat
adc
sbb
or
push
or
add
sbb
mov
push
scas
rcrb
mov
out
adc
push
clc
and
pop
repz
sbb
xor
imul
cmp
add
cmp
push
andb
add
xor
xchg
dec
inc
cmpsb
add
xchg
popa
cmp
rcll
mov
daa
rclb
enter
bound
and
push
sbb
and
ret
mov
jl
cld
push
push
arpl
or
outsl
imul
and
out
jle
aad
dec
mov
fstpl
lds
ret
inc
jne
sbb
xor
cmp
and
icebp
movsl
cld
cli
pop
lcall
adc
jmp
out
cmp
insl
jmp
add
daa
sub
idivb
je
mov
daa
loopne
adc
addr16
mov
sub
sbb
push
push
pop
pop
lock
or
cmp
push
jmp
test
push
repnz
aaa
push
sbb
or
or
add
xor
add
dec
cmp
out
call
ljmp
ja
loopne
orl
push
push
test
pusha
adc
pop
pop
incb
pusha
mov
lods
test
je
xchg
push
jge
enter
enter
xor
sub
aam
lods
add
cmp
daa
adc
nop
xor
lcall
loopne
adc
fwait
and
or
outsb
xor
adc
loop
mov
or
pop
adc
ficoml
sbb
lcall
sub
adc
mov
je
inc
shll
push
test
sbb
xchg
adc
push
movsb
repnz
or
scas
mov
out
inc
mov
inc
sbb
cmp
adc
jb
cltd
mov
inc
call
gs
insb
loopne
mov
and
ret
mov
add
mov
push
or
add
out
adc
mov
dec
add
inc
push
mov
push
fcmovnbe
pop
or
adc
add
rolb
mov
testb
rcrl
sbb
lock
shlb
add
ficompl
sbb
inc
insb
mov
rolb
inc
mull
xchg
loopne
jno
aas
das
cmp
xor
sbb
push
aas
push
mov
dec
sbb
inc
add
xor
inc
inc
loop
pop
mov
inc
sub
or
and
and
js
pop
jp
or
add
pop
dec
add
and
sub
push
shll
testb
sub
fidivrs
stos
push
sbb
dec
out
pusha
mov
cmp
xlat
roll
scas
sbb
subb
cmp
jnp
int
sub
jmp
push
popa
mov
jbe
sub
sbb
imul
push
and
js
sub
adc
aam
or
andl
mov
sbb
mov
push
aaa
bound
daa
sti
imul
mov
addl
xchg
inc
push
insl
xchg
sbb
or
in
daa
lea
mov
bound
dec
in
or
lcall
leave
xorb
pop
mov
mov
mov
cmc
sti
jecxz
inc
scas
fildl
cltd
ret
mov
jae
test
cmp
outsl
ljmp
pop
mov
mov
sub
push
aas
ljmp
mov
ret
or
mov
pop
add
mov
insb
pusha
or
add
mov
in
shl
les
mov
or
bound
jmp
push
fidivrs
xor
pop
ja
lret
sbb
das
pop
movsl
addb
jno
and
cli
test
test
scas
lcall
push
sub
mov
push
or
mov
sarb
int
pop
xchg
sub
shl
fs
and
rcll
push
pop
mov
subb
push
push
xchg
lcall
add
cs
add
out
mov
jb
clc
movb
mov
lock
rclb
dec
cmpl
adc
sbb
inc
push
in
test
xor
lcall
or
push
add
adc
insb
sbb
push
loope
out
mov
xor
int
jge
pop
loop
adcb
enter
mov
ljmp
add
jne
and
lret
lret
mov
push
pop
je
test
mov
mov
sbb
cmova
push
andb
test
ror
jle
test
ja
or
inc
mov
test
push
scas
insb
mov
psrlw
mov
sbb
or
cmp
mov
mov
sbb
pop
outsb
cmp
das
mov
or
adc
push
inc
xchg
inc
sbb
push
push
and
js
and
adc
in
les
dec
in
lods
pop
test
inc
data16
inc
andb
xchg
js
lds
jmp
lret
lret
sbb
gs
test
ret
scas
ds
adc
xor
and
xor
or
mov
icebp
divl
test
lcall
push
outsl
mov
orl
mov
mov
mov
adc
xchg
or
push
jnp
leave
ret
or
adc
lcall
cmp
jo
push
fs
xchg
fwait
test
pop
mov
mov
dec
aam
mov
les
add
or
pop
loopne
cmp
pop
rcr
addl
sub
inc
repnz
add
outsl
dec
popf
adc
addr16
jmp
movsb
scas
jb
addr16
insb
or
or
je
mov
cwtl
sub
movsb
add
std
ror
xor
call
xlat
xor
mov
mov
push
jge
cmp
adc
mov
mov
push
icebp
mov
sbb
cld
adc
test
xlat
or
stc
adc
cld
test
xchg
mov
roll
and
pop
pushf
pop
and
fisttpll
mov
hlt
sub
mov
mov
add
cmp
les
pushf
shlb
sub
out
push
leave
cmp
add
inc
sub
pop
pop
and
or
pusha
fisubrl
adc
rcrl
pushf
mov
cli
pop
popa
std
sysexit
fs
xor
push
push
push
stos
mulb
sub
subb
into
test
mov
aam
int3
or
xor
push
fisttpll
into
in
xor
inc
jecxz
arpl
cmp
xor
das
clc
insb
mov
adc
mov
sub
movsl
sbb
sub
iret
add
sarl
mov
push
and
inc
lods
testb
mov
loope
dec
icebp
push
push
push
mov
inc
cwtl
hlt
ret
test
pop
add
sbb
cltd
mov
cs
test
xchg
or
mov
ret
add
roll
mov
addb
xor
pop
xor
aad
cmp
gs
in
cmpsl
sbb
pop
shll
ror
xor
sbb
stos
or
loope
jg
pushf
pop
adc
xchg
or
rcl
addb
xor
mov
mov
adc
repz
in
xor
out
fsubl
jbe
mov
lret
jno
add
rolb
jb
fmuls
inc
sbb
or
push
out
sub
shrl
popf
jae
mov
xchg
sbb
out
jmp
cmp
or
mov
mov
mov
adc
push
sti
lods
mov
fdivl
incb
add
pop
loopne
jb
cs
pop
mov
popf
mov
sbb
pusha
iret
jo
add
into
sbb
clc
es
sbb
sub
test
jo
xor
lret
push
xor
adc
pushf
movsl
push
cmp
mov
adc
inc
mov
and
mov
push
mov
mov
pop
sub
mov
or
sub
pop
stos
push
push
rcl
ret
pop
mov
jmp
inc
imul
mov
in
orl
dec
jmp
dec
clc
push
nop
mov
stos
cld
fistpl
lea
sbb
lods
push
ret
mov
push
test
adc
push
mov
push
push
mov
inc
fsubrs
icebp
call
add
sbb
andb
xor
inc
add
and
addr16
data16
repnz
les
adc
icebp
aas
icebp
mov
pushf
cmc
insb
mov
and
or
mov
in
xor
pop
xchg
or
adc
add
sbb
into
xchg
shl
xchg
or
or
jbe
insl
cli
or
add
inc
rolb
repnz
add
pushf
xchg
shrl
and
xchg
call
xchg
mov
and
push
dec
lcall
cmp
dec
xor
js
xor
int3
add
adc
roll
movsb
mov
lods
ret
mov
push
or
loope
jno
xchg
jo
mov
dec
fs
in
test
movsb
dec
enter
or
push
sbb
sahf
xor
sbb
rcrl
shl
shll
shlb
push
adc
pusha
xorb
or
in
mov
xor
xor
scas
hlt
jmp
push
xor
push
push
xor
test
pop
icebp
push
push
mov
xor
push
adc
push
ds
ljmp
cmp
fisttpl
push
outsl
sbb
pop
ret
loop
add
loopne
data16
movsl
push
adcb
cld
gs
and
adc
sub
or
push
jmp
sbb
sbb
iret
lods
jno
add
mov
idivb
inc
dec
daa
mov
sub
lret
push
rcrb
call
or
cli
push
cmp
mov
pop
xor
xchg
popa
jg
dec
adc
add
imul
sahf
push
add
call
jle
fs
adc
repz
dec
shrb
xlat
lcall
xchg
jnp
stos
push
xor
fnsave
sbb
sbb
xor
lods
loope
or
rcrb
mov
mov
inc
or
sbb
push
sub
and
mov
mov
insb
ret
aad
lahf
into
sbb
push
inc
jecxz
psraw
fisubrs
lret
mov
test
pop
cmpsl
test
notb
cmpl
pop
and
sub
adc
push
dec
mov
ret
enter
jecxz
xor
mov
in
and
push
push
loop
inc
push
mov
push
in
push
add
aam
les
insb
xor
push
test
push
ja
mov
jne
push
lret
loopne
cmp
lret
outsl
je
xor
lret
xsha1
cmpsb
mov
push
aaa
xor
pusha
test
decb
dec
and
add
sahf
inc
rol
inc
shr
push
sub
adc
filds
dec
push
mov
xchg
test
mov
loope
in
lea
mov
mov
pop
in
sub
push
sub
lcall
pop
sub
add
in
adc
mov
add
xor
mov
into
push
add
xchg
jae
pop
scas
xchg
subl
pop
pop
stos
mov
imul
adc
mov
leave
push
lods
add
mov
ljmp
int3
nop
in
sarb
and
push
das
pop
pusha
enter
xor
inc
push
sbb
movsb
inc
jne
cmp
shll
sub
or
xchg
sbb
ror
dec
pop
jl
push
pop
aad
aam
lcall
push
rcr
icebp
sub
dec
stc
mov
sbb
pop
sub
mov
adc
jbe
add
call
sahf
xor
xchg
and
push
aam
inc
inc
sbb
movb
adc
or
movsb
cmp
es
insb
mov
pop
loopne
jo
push
xor
push
mov
and
pop
cmp
repz
cli
add
adc
and
xor
pop
push
cli
inc
xchg
jo
lcall
sub
mov
rcrl
and
push
imul
or
push
jp
test
cli
in
in
lret
arpl
outsl
fisubrs
ja
jb
inc
sbb
scas
pop
rclb
inc
mov
sub
out
sbb
sbb
inc
test
fs
ret
andl
test
fmul
xor
and
add
pop
inc
popa
sbb
inc
repnz
adc
xor
mov
ret
icebp
push
cwtl
adcl
enter
cwtl
aad
xchg
dec
add
roll
adc
popf
lahf
nop
push
sbb
sbb
sbb
fwait
or
mov
ret
push
and
or
call
mov
stos
jo
shrl
inc
imul
daa
jbe
ljmp
jne
ret
aam
in
add
mov
xchg
test
aaa
out
mov
roll
push
add
xchg
mov
subb
add
adc
inc
xor
xchg
dec
ljmp
add
push
mov
mov
add
faddl
rcll
rorb
mov
jl
jge
lods
add
nop
into
shrb
repnz
and
or
into
rcr
sbb
push
adc
add
fwait
test
push
or
testb
mov
cmp
out
hlt
and
pop
push
sbb
daa
xor
inc
ret
inc
pop
jge
movb
inc
sbb
out
pop
xlat
inc
pop
mov
repnz
das
aam
aas
add
jmp
dec
jne
das
mov
push
mov
stos
xchg
mov
mov
dec
test
adc
sar
inc
gs
sub
and
iret
inc
jno
pop
nop
in
stos
push
test
add
xchg
mov
cwtl
sahf
jne
enter
jecxz
and
jo
dec
ja
dec
rorl
ret
arpl
imul
cmp
orb
adc
push
lea
push
outsl
in
rolb
xlat
aad
xchg
pop
call
dec
cmp
xchg
out
pop
dec
xchg
push
shl
adc
pop
mov
mov
enter
lock
movsl
enter
sbb
xchg
test
dec
sub
ljmp
rorl
push
and
xchg
inc
mov
mov
or
push
das
cmp
inc
scas
clc
not
inc
sbb
shll
mov
push
add
out
dec
faddl
sub
xor
jb
push
push
dec
sub
insl
xchg
into
jge
mov
clc
dec
xor
dec
cmp
push
lods
clc
gs
adc
aad
mov
jo
pop
cmp
pop
cmp
xchg
sar
loop
inc
loope
inc
adc
mov
loope
mov
or
push
ss
test
or
pop
shl
loope
lcall
xchg
addl
mov
sub
int
ja
xorb
sbb
mov
pop
inc
mov
loope
add
mov
add
mov
lock
adc
clc
enter
add
ss
call
lret
ds
sub
enter
aad
sub
and
mov
adc
dec
lods
jo
add
add
adc
movsb
push
call
dec
dec
xchg
bound
xor
pop
xchg
push
add
cltd
sub
je
mov
cmp
sbb
nop
mov
pop
pop
or
sbb
jbe
cli
sbb
cli
test
push
pop
es
add
gs
int3
shlb
rcrb
addps
pop
pop
push
shll
sub
or
pop
call
mov
imul
add
mov
add
mov
addb
mov
insl
inc
repnz
mov
and
or
push
pop
clc
jno
cmc
sar
or
push
daa
inc
fwait
ret
ljmp
pop
lret
and
cmpsl
call
add
pushf
ss
ret
shlb
shlb
decb
or
pop
or
xor
lret
pop
jge
sub
ret
sbb
sub
or
and
sbb
pop
sub
add
fimull
jl
inc
cmp
sub
pop
rcl
adc
inc
sbb
and
shll
dec
sbb
rorb
rcll
add
dec
test
push
inc
cmpsl
push
cmovg
mov
cmp
mov
loopne
daa
cmp
dec
sahf
leave
icebp
shl
ljmp
popf
add
call
jecxz
or
xchg
or
stos
shl
lea
mov
push
xchg
xchg
jns
or
addl
call
nop
hlt
xor
jnp
or
pop
push
mov
xor
jbe
scas
sub
rorb
sbb
loopne
push
push
pop
rol
mov
mov
cmc
stos
dec
adc
push
inc
jmp
faddl
push
sbb
aam
icebp
mov
adc
in
inc
inc
lret
scas
sub
arpl
and
repnz
xchg
dec
push
in
sbbl
cmp
popa
gs
stc
mov
adc
adc
or
aad
imul
inc
or
call
add
pusha
pushl
adc
push
addr16
or
xlat
push
mov
or
in
icebp
add
fstps
pop
and
jae
ja
fadds
sahf
fiaddl
cmp
xchg
rcr
stos
xor
pushf
mov
add
lods
bound
pop
insb
outsb
jnp
or
adc
mov
shlb
cmc
call
xadd
mov
leave
fstpt
movsl
push
leave
into
add
sbb
push
dec
js
cmp
add
inc
mov
pop
cmpsb
inc
xor
lock
bound
loope
sbb
loopne
sbb
xchg
dec
aad
daa
lret
ljmp
push
jl
mov
insl
and
out
sbb
mov
xchg
xchg
sbb
pop
into
rorb
adc
add
sub
xor
test
xor
loop
cltd
test
xlat
lar
sbb
stos
add
rcrb
dec
inc
add
pop
ja
adc
clc
and
fwait
sarb
imulb
cmp
inc
lods
movsl
into
sbb
push
jnp
mov
arpl
push
jno
inc
jmp
cmpsl
cmpsb
jbe
data16
xchg
in
jne
mov
sub
or
sbb
and
clc
sub
sbbl
test
je
add
stc
sbb
sub
sub
shlb
inc
iret
out
nop
dec
add
mov
push
xor
mov
adc
mov
inc
clc
add
dec
xchg
ret
fs
in
cld
jge
inc
cltd
stos
int3
enter
mov
lods
outsb
lds
cmpl
add
bnd
mov
push
jno
add
sbb
rorl
cltd
dec
cwtl
dec
mov
nop
push
and
mov
aas
stc
pop
shrl
je
inc
or
pop
test
pop
mov
mov
lahf
add
test
orl
ror
orl
roll
xor
mov
sbb
ret
mov
in
pop
dec
add
out
or
sbb
sti
call
inc
dec
enter
cmp
add
pop
adcb
mov
mov
adc
mov
xchg
pop
sbb
test
xchg
jmp
pop
cli
add
outsl
sarb
sbb
add
cmp
pop
pop
hlt
xchg
push
lock
call
das
mov
inc
popa
jae
push
push
xlat
jbe
rorl
notb
cmp
adc
pop
lds
adc
xor
daa
add
mov
scas
mov
push
jo
notb
xchg
bsf
push
add
roll
rol
dec
and
ficoms
mov
and
mov
mov
sub
adc
test
ss
add
scas
mov
add
outsb
int
mov
arpl
mov
cs
sbb
repnz
inc
pop
cmp
ja
jecxz
xor
jne
xor
loope
cmp
mov
test
push
jne
or
xor
popa
rolb
testl
xchg
rclb
mov
dec
cmpsb
int3
in
sbb
mov
cmp
sbb
push
jbe
out
jne
xchg
call
adc
adc
sahf
add
sub
pop
fldt
aas
mov
push
or
mulb
mov
sub
sbb
xchg
test
inc
in
call
sbb
push
inc
data16
push
cmpsl
cs
add
pop
and
in
lock
shrl
scas
sbb
nop
jns
adc
inc
sarb
inc
cmp
aad
pop
inc
cmp
inc
enter
ljmp
mov
jo
push
ljmp
les
cmc
dec
mov
and
sbb
jp
push
sub
leave
cmpsl
lods
sub
or
lods
sbb
push
push
and
inc
lcall
imul
sbb
clc
sub
icebp
subl
jno
mov
inc
or
add
xchg
aam
das
test
mov
les
enter
pop
jo
addl
test
daa
leave
aam
push
sbb
xor
push
push
mov
pusha
push
push
jl
ljmp
shlb
pop
xor
jl
jae
and
xor
iret
inc
xchg
enter
or
sbb
jl
mov
enter
subb
xor
push
fsubrs
insl
pop
in
push
add
sub
loop
cmp
jmp
mov
pop
cs
adc
lret
xchg
dec
icebp
out
push
stos
mov
imul
adcl
mov
faddl
add
inc
adc
lea
mov
add
dec
nop
jecxz
stos
outsb
adc
rorl
xor
or
push
sbb
pop
push
or
pop
inc
ljmp
movb
dec
adc
inc
leave
push
das
xor
rorb
add
rol
xchg
jp
inc
cs
mov
add
sub
add
ret
repnz
icebp
movsl
cmp
or
pop
sub
daa
cli
fcoms
ljmp
pop
or
add
cmp
add
rolb
outsl
bound
push
repz
xor
push
subl
leave
adc
xchg
pop
add
into
cmp
cli
mov
jg
decb
inc
inc
mov
cmp
and
test
ret
sub
or
daa
inc
sbb
or
pop
xchg
push
dec
into
mov
or
jl
pop
dec
xchg
mov
arpl
push
mov
inc
popf
loope
ljmp
inc
jae
dec
aam
into
test
idivb
iret
add
adc
push
fdivrl
lods
xor
push
jmp
inc
lock
push
test
add
js
leave
scas
xchg
fcom
loope
sarl
mov
pop
inc
xor
test
or
inc
inc
das
roll
adc
add
push
or
mov
adc
xchg
sarl
mov
adc
test
iret
xor
push
xchg
and
pusha
fisttpl
mov
imul
sbb
xor
add
or
inc
loope
mov
sbb
pop
jae
ds
mov
sbb
push
pop
mov
dec
push
cmpsl
mov
xchg
mov
push
or
mov
cmp
mov
rorl
sub
repnz
pusha
pop
sbb
xchg
sub
add
inc
push
ret
xor
mov
loopne
jns
sbb
cmp
adc
add
ret
or
ret
cmp
inc
xor
in
mov
and
dec
jl
add
or
mov
dec
loopne
push
dec
cmp
push
jp
popf
add
adc
xchg
sbb
lds
and
lret
fwait
pop
mov
pop
leave
lock
mov
mov
ret
sbb
daa
xchg
sti
cmp
xchg
ror
aad
and
rorl
and
ds
push
int3
jnp,pn
or
jl
ljmp
jo
testb
mov
xchg
repnz
test
sti
jno
lea
inc
cmpl
mov
cmp
cmp
lock
adc
sahf
sbb
mov
ret
adc
mov
or
pop
sbb
adc
mov
out
lods
stos
mov
call
sbb
add
scas
cwtl
pop
cmp
lods
inc
dec
lret
sub
shll
in
adc
je
mov
mov
cmpsb
mov
leave
aam
push
sbb
push
mov
jns
imul
sub
in
fs
loopne
jle
shrl
scas
pop
mov
int
mov
xchg
imul
nop
sbb
ret
adc
ret
bound
sbb
or
inc
or
pop
sub
add
call
push
add
movb
mov
xchg
xchg
pop
stos
xchg
rolb
and
and
pop
push
mov
sbb
sbb
repnz
adc
popf
dec
mov
xor
shlb
out
adc
inc
push
jne
jp
pusha
out
int
mov
push
inc
push
test
inc
sub
adc
mov
push
fs
add
adc
sbb
or
sub
dec
sub
sbb
call
fs
call
jb
cmpsb
push
popa
add
push
push
and
xchg
or
mov
pusha
xchg
or
xchg
testb
cli
test
or
mov
mov
jnp
or
movb
or
xor
loop
or
icebp
xor
adcb
cmc
lahf
add
push
or
popf
idiv
dec
shrl
xor
push
movsl
jo
inc
aam
xchg
cmc
xchg
push
adc
sbb
adc
or
pop
xchg
add
imulb
add
push
rcrb
xor
jne
dec
jne
xchg
fcoms
push
adc
push
jp
sbb
shll
push
nop
jle
pop
mov
out
sub
xchg
data16
add
pop
out
es
loope
loopne
pop
mov
fildll
add
push
xchg
add
dec
push
sbb
stos
push
in
rol
pop
push
xchg
add
out
mov
pop
xchg
push
push
mov
sbb
adc
xor
xlat
rcl
push
adc
cmpsb
int3
mov
add
jnp
lcall
loope
shrl
dec
arpl
mov
push
inc
mov
sbb
loopne
cmp
adc
lods
or
mov
adc
test
xor
lods
ficoml
and
adc
sbb
sub
jle
add
test
xlat
cmp
aad
das
bound
icebp
pop
add
or
stc
and
pushf
or
mov
pop
push
xlat
dec
and
mov
mov
xchg
fnsave
pop
insl
pop
inc
sbb
leave
inc
and
mov
pusha
mov
rcrb
loopne
xor
mov
fimuls
imul
cmp
pop
lods
inc
fwait
push
adc
enter
cmpsb
ljmp
bound
daa
adc
mov
mov
inc
push
ja
scas
leave
push
aam
enter
pusha
sub
sar
mov
inc
jb
push
addl
cmp
xchg
or
push
aad
adc
dec
push
sbb
cmpsb
push
xchg
loopne
cmp
or
mov
xor
scas
les
jl
mov
add
and
or
mov
lock
sbb
sub
lcall
adc
or
jecxz
add
repnz
rcr
inc
sahf
pushf
or
orb
mov
xor
xchg
in
and
mov
or
adc
movsl
cwtl
push
jbe
scas
stos
and
xchg
cmp
mov
scas
into
addr16
jns
dec
lds
cltd
sub
dec
cwtl
ret
inc
addl
xor
rcll
loopne
repz
sbb
dec
loope
jge
popa
lock
xchg
pop
loop
xorb
cmc
mov
mov
js,pn
push
mov
mov
enter
lret
lret
inc
in
mull
dec
push
cmp
rorl
pop
xchg
or
cmova
ss
push
and
pop
or
jne
pop
inc
jge
cmp
xor
or
mov
movsl
sbb
ds
cs
add
fadds
jl
pop
mov
mov
orb
dec
push
inc
xor
mov
mov
inc
addr16
or
enter
xchg
mov
and
pushf
xchg
sbb
dec
fiaddl
es
sub
xchg
pop
ficomps
jae
mov
rorb
rcrb
lods
and
and
push
sub
sub
clc
test
fadds
adc
push
adc
fstps
aam
stos
cmp
shrl
push
in
scas
mov
push
scas
inc
int3
repz
mov
pop
mov
xchg
adc
push
shlb
push
and
pop
cmp
icebp
jne
push
push
push
ret
ljmp
clc
cmp
loopne
push
shlb
leave
test
out
mov
add
sub
cmpsb
fsubrs
mov
lret
xchg
jmp
sub
or
test
or
repnz
fs
add
aad
sbb
enter
sbbb
mov
aam
dec
jo
push
loopne
movsl
rcrb
jnp
pop
mov
jmp
mov
mov
rcrl
jne
dec
movsl
and
add
cmp
or
xchg
cmpsl
and
inc
cmp
cmc
add
sub
sbb
add
sub
inc
lods
aad
mov
mov
and
data16
scas
jp
adc
push
fwait
push
mov
roll
sub
xorl
jp
push
dec
push
insb
mov
fmuls
push
lods
js
lds
lds
push
jmp
cmp
test
enter
data16
push
inc
push
add
xor
pop
dec
sbb
ret
scas
or
mov
in
add
xchg
inc
mov
jecxz
pop
jb
adc
pop
inc
popa
jo
cs
inc
or
jmp
add
popa
int3
cltd
xchg
mov
push
shl
ss
sub
icebp
mov
push
push
inc
neg
xchg
in
xor
dec
pop
daa
push
mov
xchg
push
stc
shlb
push
xor
xor
or
xor
fisubs
jae
push
into
xor
rcrl
or
sarb
hlt
xchg
insl
mov
enter
or
test
test
or
sub
lods
leave
rorb
xor
and
jae
adc
dec
sbb
faddl
adc
loopne
xchg
fiaddl
sub
sub
add
push
mov
add
dec
and
pop
and
and
mov
int
pop
xchg
flds
mov
inc
scas
cwtl
daa
call
sub
sbb
push
cs
adc
pusha
sub
add
mov
sbb
add
push
push
and
sub
aam
jb
sahf
lods
adc
cmp
cmp
push
cmp
int3
add
or
dec
sub
sub
lret
add
push
cmp
add
cmp
rol
add
in
shll
xchg
xorl
outsl
nop/reserved
push
movsl
jo
and
addb
inc
mov
push
rcll
xor
lret
lcall
ret
push
or
mov
mov
push
push
popa
stos
inc
int
jo
add
jne
xchg
pop
insl
lret
or
adc
adc
sbb
imul
mov
je
mov
lahf
push
call
mov
adc
aam
mov
test
mov
es
add
sub
lar
in
and
jp
dec
lds
xchg
jge
cs
push
test
hlt
roll
mov
cltd
add
sbb
push
or
loopne
jbe
and
call
dec
cmp
push
xchg
andl
dec
xchg
dec
aam
mov
cli
sbb
repnz
or
sub
bound
call
es
inc
int
ljmp
mov
inc
push
stos
ss
mov
out
inc
bound
or
rolb
jo
xlat
loop
push
scas
sti
pop
aaa
jmp
lods
add
adc
sbb
or
push
xor
cmp
mov
pop
push
push
gs
lret
stos
sbb
xchg
jge
lcall
or
daa
and
cli
push
scas
mov
mov
shl
inc
sbb
and
mov
push
push
add
xchg
cmp
das
push
add
jnp
loope
push
cmp
push
out
cmc
xor
pop
jbe
lcall
popf
sbb
rorb
sub
cltd
push
adc
sbb
movsl
mov
inc
mov
subb
dec
int3
add
inc
adc
dec
cmc
xlat
js
stos
loopne
pop
insb
icebp
add
test
call
and
cmp
je
mov
add
xor
shll
dec
mov
push
sbb
adc
incl
push
sub
ljmp
add
cmp
fcoms
cmp
cwtl
push
add
idivb
loopne
je
arpl
out
icebp
inc
cwtl
es
push
or
push
pusha
mov
enter
jo
sub
dec
xlat
dec
cmpsb
ret
or
add
in
xchg
pop
push
jnp
scas
pop
xchg
pushf
mov
test
push
push
inc
addb
subps
xor
imulb
adc
mov
and
sbb
fxam
push
test
cmp
popa
call
pop
dec
push
ljmp
movd
mov
push
and
rcrl
add
sbb
xchg
push
push
lock
out
mov
cmpsb
test
push
jmp
xlat
inc
int3
ret
push
int
add
sbb
adc
dec
push
fists
adc
sub
adc
data16
add
jmp
add
js
or
xor
inc
sbb
loopne
mov
je
adc
ljmp
mov
fcoml
test
or
mov
ljmp
pushf
das
fiaddl
test
push
inc
jp
imul
arpl
xor
and
or
sbb
or
sbb
bound
add
push
je
inc
mov
add
into
icebp
inc
adc
ljmp
inc
inc
sub
cmp
xchg
hlt
daa
lret
mov
pop
lods
les
sahf
xor
stos
mov
rcrl
movsb
dec
or
sbb
jnp
mov
psubsb
mov
lock
lea
mov
mov
push
into
adc
push
or
sarb
test
pop
lds
cltd
and
or
pop
sbb
xchg
or
adc
and
fstpt
or
and
cmc
sbb
push
jbe
sub
cltd
push
xchg
lods
lahf
or
sbb
pop
popf
shrb
cmp
lock
push
orl
imul
mov
rolb
shl
ret
xchg
xchg
aas
mov
mov
push
push
pop
mov
icebp
lret
clc
jb
xor
and
sbb
adc
or
and
fcompl
jge
rol
sbb
adc
mov
add
xchg
sbb
xchg
stos
dec
das
lds
jbe
xor
ja
ss
orl
insl
jl
enter
pop
lods
es
dec
pusha
add
push
adc
bound
inc
dec
inc
ret
add
cmpsb
sbb
pop
jb
int3
adc
push
add
adc
rcrb
xor
adc
ljmp
insb
push
ljmp
imul
insb
sub
pusha
add
outsb
dec
pop
mov
mov
mov
das
jae
addr16
shl
cmp
jecxz
cmp
inc
add
jp
inc
push
dec
inc
nop
pop
jmp
xor
dec
mov
lret
push
and
inc
xlat
add
pop
lods
lock
push
xchg
cmp
mov
shr
test
cmp
jns
push
sub
push
in
ljmp
sub
scas
xchg
cmpsb
inc
sahf
sub
lahf
jo
xor
add
rcll
sub
int
inc
lret
rep
or
popa
xor
notl
mov
xor
icebp
sub
shl
sub
cmp
rorl
gs
cmpsb
push
sti
fcomip
scas
pop
mov
nop/reserved
out
stc
insb
or
inc
cs
cmpsb
ja
enter
jmp
mov
movsl
jb
jl
and
and
push
add
xchg
mov
sbb
ret
xchg
xor
mov
push
add
loop
popf
pop
sti
push
sbb
jno
scas
mov
mov
stos
je
jnp
and
cmp
mov
cltd
push
sbb
in
add
inc
push
pop
aaa
add
sub
mov
mov
adc
pop
pushf
add
xchg
add
push
xor
adc
pushf
test
pusha
sbb
leave
out
adc
adc
cmpsb
mov
arpl
push
add
out
pop
lods
add
imulb
ret
stos
sbb
jmp
mov
imul
fidivs
cmp
xchg
push
pop
xor
aaa
or
in
bound
add
movups
ret
push
stos
call
add
inc
call
sbb
add
dec
int
or
sarb
push
mov
outsl
mov
dec
inc
mov
add
lret
into
push
or
mov
push
add
jge
cwtl
inc
sbb
cmpl
push
and
pop
mov
pop
jmp
inc
adc
mov
sarb
xchg
add
xchg
cli
shrb
xchg
mov
js
ds
xchg
xor
inc
in
fs
leave
pusha
sbbl
adc
shl
dec
push
mov
addl
jle
enter
sbbb
fimuls
mov
or
shrb
xor
inc
adcb
cmpsb
mov
add
setp
or
push
or
mov
sbb
xor
test
rolb
test
mov
xor
sbb
mov
cwtl
lret
scas
cmp
push
xor
mov
popf
cmp
rolb
hlt
orb
pop
or
aad
shlb
mov
add
aam
in
push
inc
xchg
adcl
loope
bound
xor
das
jb
push
fst
or
xor
adc
mov
orl
jecxz
adc
scas
sbb
add
or
push
mov
mov
in
add
inc
das
inc
adc
mov
jbe
ret
jno
lret
shlb
mov
push
xor
dec
aam
cmp
cmp
adcb
test
imul
xchg
shl
push
repz
mov
xor
push
loopne
andl
into
aad
rclb
cmp
jb
adc
orb
js
add
lods
in
sub
pop
lds
daa
mov
sbb
enter
push
movsb
inc
imul
bound
add
xchg
fidivrs
sub
mov
je
aad
cmpsb
pusha
push
add
and
add
das
and
cltd
push
mov
lods
lock
xchg
ret
xor
divl
xchg
mov
std
add
jne
push
insb
and
iret
nop
sub
xchg
dec
xchg
stos
jo
inc
inc
mov
sub
cli
in
popa
clc
mov
sahf
or
dec
push
insl
and
aam
mov
bound
pop
test
fiadds
add
insl
mov
adc
arpl
push
xchg
ljmp
push
sub
lret
cmpsl
lcall
movb
push
mov
lock
jb
pop
daa
adc
cmp
sbb
jmp
call
rclb
shrb
mov
adc
push
repz
push
push
inc
mov
rcrl
pop
icebp
push
roll
jp
jo
mov
popf
inc
mov
or
pop
mov
push
xor
sub
mov
rcrl
sbb
stc
jg
sahf
out
stos
mov
push
mov
inc
mov
in
push
test
add
sbb
jecxz
xor
negb
xlat
push
call
scas
pop
adc
or
hlt
and
push
cmp
dec
xchg
and
cwtl
clc
mov
psllw
inc
xchg
jnp
call
pusha
sti
fnstenv
js
adc
jo
and
ja
push
push
fstps
push
in
sub
or
push
cmp
add
movb
inc
sbb
or
testb
push
jp
cld
ljmp
outsb
testb
dec
push
sub
lods
ror
xor
out
cltd
push
xor
les
and
bound
jp
sbb
imul
cs
mov
push
dec
jno
push
loope
lds
cmp
dec
sbb
sub
shrb
jp
rol
rorl
jae
or
fcompl
sarl
push
xchg
push
in
ds
cmp
add
test
mov
shlb
mov
inc
xchg
sub
mov
mov
push
and
dec
pop
push
or
je
fmul
inc
add
adc
fmuls
inc
pop
adc
test
add
shrb
xor
mov
rcrl
sbb
incb
push
cs
dec
leave
pusha
ljmp
inc
dec
xlat
push
adc
addb
lods
mov
xor
ss
into
repz
mov
mov
push
dec
and
xchg
pop
pop
adc
xor
mov
push
push
and
icebp
mov
jno
notb
or
add
enter
lcall
cmpsb
enter
push
rorl
nop
das
inc
xor
rcr
adc
push
imul
pop
xor
psrld
cmp
scas
or
mov
sti
sarl
testb
lret
and
jp
add
lods
sbb
movsb
aas
loope
sbb
fsub
or
push
add
mov
rol
test
add
xor
sbb
push
and
sub
insb
push
imull
push
pop
inc
sysexit
loope
pop
ss
cld
aad
or
sbb
or
lods
or
lds
popa
mov
mov
sbb
dec
sub
cld
cmp
xchg
imul
popa
and
mov
pop
inc
ret
test
pusha
mov
or
push
pop
popf
sub
loopne
cmp
sbb
test
in
pop
add
or
shlb
cmp
int
push
sub
negb
adc
aad
pop
lahf
sbb
or
cld
mov
nop
pop
bound
ret
add
inc
leave
test
mov
jg
sbb
inc
push
xor
mov
xor
andb
out
icebp
mov
add
negb
shlb
incl
and
int
pop
dec
or
inc
test
sub
inc
adc
shlb
or
xor
xchg
daa
cltd
mov
inc
sbbl
test
out
in
movsb
ret
dec
insl
scas
stos
adc
pop
sarb
inc
add
cmp
enter
adc
and
call
xchg
addr16
xchg
shrl
or
pop
fldt
dec
jle
out
lcall
sbb
in
mov
or
ror
xchg
mov
pop
push
push
jp
adc
mov
xchg
xor
adc
cmp
addr16
ret
lock
in
enter
add
xchg
fcmovb
popf
dec
jmp
add
test
scas
inc
cmpsl
ljmp
cmovno
rcr
ret
lods
push
rcrb
roll
add
addl
adc
jp
adc
arpl
mov
lds
dec
adc
sbb
sub
notb
aaa
xchg
es
mov
xchg
std
js
mov
xchg
adc
mov
push
mov
jo
insl
data16
shll
cwtl
adc
and
pop
aas
add
mov
jmp
add
and
lcall
ljmp
pop
lds
cs
aam
stos
ss
leave
test
push
add
popf
or
mov
inc
shll
into
outsb
lods
pop
icebp
add
pop
cmp
roll
push
js
pop
sub
jg
xor
fs
cld
in
pop
loope
test
stos
pop
push
mov
mov
cmp
pop
xchg
lods
cmp
cltd
sub
pushf
cld
subl
insb
adc
movl
aas
and
xor
fisttps
mov
pop
xor
pop
mov
ja
ret
ljmp
inc
daa
fcmovbe
subl
sub
jmp
iret
mov
and
pop
dec
adc
mov
dec
pusha
std
cmp
mov
push
inc
pop
or
jbe
mov
rorl
pop
mov
adc
adc
sub
divb
xor
hlt
test
adc
xor
loope
rorb
inc
push
inc
xchg
mov
mov
loope
rorl
xor
cmpsb
sahf
lock
mov
xchg
mov
sbb
pop
xchg
sbb
adc
cwtl
dec
sbb
or
push
cwtl
sub
mov
and
fisttpl
jb
sub
clc
cli
add
fisubrl
push
cmp
test
nop
or
push
out
jne
les
add
enter
sub
fstl
lahf
add
or
andb
inc
popa
mov
xorl
inc
dec
lds
add
add
or
adc
popa
push
sti
lcall
dec
and
ljmp
push
cltd
xorb
sbb
add
lds
jb
adc
add
mov
into
mov
and
stos
jo
xchg
rcl
enter
and
pop
mov
addr16
sbb
jle
ret
mov
inc
roll
xor
aad
inc
into
or
loop
push
clc
mov
fcoms
sar
fisubrl
fcmove
or
sub
add
in
jge
stos
ror
mov
lcall
mov
jae
push
subl
jle
sbb
push
stos
inc
xor
fmuls
add
mov
popf
test
frstor
xor
cmpb
cltd
pop
cmp
jb
jecxz
mov
cmpsb
cmpsb
push
mov
xor
push
push
loope
mov
cmpsb
enter
mov
outsl
sbb
pop
loopne
xor
rorb
adc
call
negb
mov
insb
xchg
push
jne
adc
push
jb
push
add
jmp
out
push
sub
popa
mov
shll
sti
test
and
adc
les
push
mov
inc
mov
sbb
inc
pop
out
repnz
push
loope
push
addb
cmc
cltd
jne
xchg
cwtl
dec
add
fadds
adc
aad
or
shlb
pop
push
add
adc
aaa
push
scas
test
sbb
aad
loope
xchg
sti
ret
ss
or
and
push
mov
mov
pop
sbb
jl
adc
iret
rcll
sub
inc
mov
add
dec
loope
loop
loope
or
icebp
mov
xor
cltd
jo
push
jne
fdivrs
in
leave
pop
rolb
sahf
scas
shrb
sahf
xor
cli
add
scas
xchg
add
xchg
inc
adc
mov
loop
int
icebp
outsb
jp
push
sbb
add
xchg
stos
sahf
ljmp
xchg
js
add
mov
cmp
sub
and
push
iret
push
dec
sbb
pushf
sbb
sarb
mov
clc
pop
add
and
lds
add
and
mov
adc
xchg
sbb
mov
loope
mov
mov
add
dec
push
mov
adc
test
push
iret
sbb
jp
pop
add
add
push
xor
sub
popf
rcl
js
sbbb
popf
sbb
push
loopne
outsb
cwtl
subb
mov
pop
outsl
cmpsb
add
scas
dec
mov
add
cmp
mov
inc
add
mov
mov
xor
addl
xor
shlb
xchg
rolb
or
inc
xor
lods
sahf
lods
and
stos
pop
mov
or
es
cmpsl
push
rcr
push
inc
pop
mov
sub
jg
lods
mov
sbb
jl
push
leave
or
mov
popa
mov
or
add
icebp
insl
lds
nop
jne
or
xor
loope
cltd
adcb
push
adc
test
xchg
rolb
xchg
and
pop
mul
adc
inc
pusha
popf
ja
adc
call
push
push
pusha
clc
call
cld
cmp
or
mov
lock
xchg
or
sbb
shlb
inc
mov
out
cmp
rcll
dec
insb
add
mov
push
test
add
jmp
aam
mov
adc
add
xchg
popa
adc
jmp
or
ret
fcmovbe
cmp
loope
pop
push
sub
outsl
imul
xacquire
push
in
aam
arpl
pop
scas
test
and
stos
mov
daa
cmp
ret
inc
jp
loop
pop
test
adc
sub
push
adc
inc
scas
ret
mov
or
xor
cwtl
test
in
add
xor
push
test
rcrl
push
lcall
sub
add
mov
and
or
insl
mov
iret
ret
shlb
add
jnp
mov
jo
std
mov
pop
xor
call
fdiv
scas
je
xor
add
addr16
shl
add
xor
xchg
popa
imul
js
movsl
rclb
inc
sub
add
push
mov
sub
sbbb
dec
add
mov
inc
stos
push
out
dec
xor
sub
jne
pop
inc
sbb
shll
int
data16
push
sub
orl
pop
repnz
push
or
lret
adc
jno
or
mov
leave
cmp
adc
mov
mov
add
dec
and
cwtl
lock
or
adc
sbb
sub
ret
adc
mov
movsb
in
adc
or
adc
push
scas
or
rorl
mov
loop
roll
popa
imul
cmc
xchg
jle
push
mov
dec
push
or
aad
push
sub
je
cmp
push
add
fs
cltd
rorl
xor
inc
inc
pop
ficompl
sbb
insb
dec
lock
rorb
pusha
adc
sbb
mov
inc
rclb
clc
leave
jp
pop
subl
jns
repnz
mov
mov
push
or
xchg
fs
lock
ss
fwait
adc
jne
jp
and
push
sbb
test
jo
push
ss
xor
and
adc
inc
outsl
test
jne
out
sbb
add
mov
sahf
ret
test
sbb
sub
mov
push
adcb
sbb
sub
pop
into
fs
mov
push
pusha
inc
add
shr
stc
gs
push
mov
sbb
pop
movsl
push
rorb
jge
push
sbb
inc
pop
xchg
rcll
push
add
add
shll
dec
ret
mov
loope
fmul
jns
icebp
xor
jbe
mov
jns
js
fwait
adc
sahf
push
mov
xchg
mov
fisttpl
call
inc
or
cmp
push
or
mov
xchg
stos
sub
test
lret
sbb
and
adc
add
mov
add
adc
pop
outsb
inc
loopne
jge
dec
js
xor
cmp
lret
add
mov
lea
add
and
sub
cmp
loopne
repnz
sbb
cmp
mov
icebp
sub
add
xor
jbe
pop
push
pop
push
popa
adc
or
call
sahf
mov
push
xor
push
or
pop
mov
decl
frstor
push
or
in
adc
adcl
roll
cmp
sbb
pop
addr16
pop
or
nop
jmp
dec
nopl
mov
jnp
push
lgs
push
jmp
push
loope
and
jo
adc
mov
aad
shrl
pop
pop
test
push
sbb
adc
mov
cmp
inc
leave
nop
push
mov
sub
mov
ljmp
pop
icebp
addb
stc
adc
adc
lods
aad
insl
xor
inc
mov
lock
mov
rol
mov
sbb
rcrl
sbb
jno
ret
test
add
or
push
sub
add
test
pop
fsubrs
lock
xchg
push
outsl
inc
xchg
or
jge
lock
adc
push
stos
inc
dec
sub
stos
xchg
movl
insb
push
popf
jno
adc
fxrstor
icebp
push
sbb
xchg
push
lret
sbb
lret
adc
dec
xchg
push
xor
cmpsb
xchg
movaps
xor
xor
test
inc
movsb
stc
mov
sbb
inc
adc
inc
les
inc
xorl
bound
push
and
jp
mov
push
cmp
push
hlt
and
in
ljmp
jp
or
inc
mov
or
insb
ret
fiaddl
jle
inc
dec
int3
cli
pop
mov
pop
mov
mov
pop
cmp
sub
not
loopne
push
std
cmc
inc
icebp
push
push
mov
lahf
fs
pop
and
jl
sbb
loopne
cltd
mov
into
push
popf
mov
frstor
jle
rolb
stc
das
andl
add
jmp
adc
sbb
add
lds
arpl
add
sbb
aaa
cli
or
ret
lods
stos
jno
loope
add
inc
or
ret
clc
jno
dec
shrl
ret
jge
cmp
or
cmp
test
push
adc
push
cmp
adc
jne
or
popa
sub
sbb
or
aad
lcall
fsub
cwtl
adc
scas
add
je
repnz
inc
ret
xor
enter
and
or
ret
lds
push
cmp
push
ret
mov
ja
cmp
mov
aaa
jne
cltd
jb
call
and
push
sub
or
shll
add
dec
cmc
and
pop
sub
xlat
leave
cwtl
rcrw
mov
out
cmp
popa
mov
sub
mov
scas
test
mov
aad
in
or
pop
arpl
or
insb
push
cmp
and
adc
and
pushf
mov
or
gs
adc
test
inc
lret
cmc
push
add
add
pop
sub
xchg
push
or
mov
ret
scas
call
pop
sub
or
sbb
jge
push
pop
cmp
pop
cld
sar
inc
and
sub
inc
shlb
sbb
mov
iret
pop
repz
push
cmp
or
push
pushf
mov
jae
inc
addr16
inc
jns
push
inc
or
fldt
hlt
xor
push
push
add
rcrb
jmp
repz
es
loope
push
mov
int
stc
xchg
or
and
dec
mov
icebp
aas
in
and
or
dec
push
pop
shlb
add
stos
inc
cmp
icebp
xor
cmc
mov
enter
adc
sbb
cs
loope
lods
je
test
fwait
dec
jmp
or
jge
mov
pop
insb
rcrb
mov
jle
bound
mov
imul
or
sbb
leave
fmull
mov
cld
daa
dec
repz
into
mov
repz
jno
xor
dec
ret
or
pop
aad
rcr
adc
or
and
mov
or
adc
adc
rorb
test
push
xlat
loopne
cmp
iret
call
inc
sbb
pop
jne
cmp
test
xor
mov
and
mov
in
sub
imul
sub
rolb
je
loopne
add
shlb
inc
pop
lods
test
inc
push
mov
add
cmp
sub
pop
pop
call
test
push
dec
push
add
aad
cwtl
or
cmp
mov
ret
push
dec
mov
leave
out
pusha
add
fwait
jge
testl
adc
les
lds
mov
enter
push
push
mov
push
daa
cmp
pop
sbb
dec
stc
or
loop
adc
sbb
mov
pushf
call
mov
xlat
adc
sub
sbb
enter
adc
push
je
mov
sub
inc
jo
shlb
inc
cmp
rolb
jb
mov
push
aad
add
add
mov
movsb
adc
add
outsl
call
cmp
adcl
leave
lahf
push
sub
mov
inc
fcom
fiadds
pushf
mov
sub
pop
mov
test
dec
xchg
push
pop
leave
icebp
stos
addb
sbb
rol
push
hlt
cmp
pop
adc
push
inc
aam
mov
mov
mov
sub
push
mov
test
jge
sahf
add
outsl
cmpsb
arpl
ret
adc
push
pop
subb
cltd
scas
js
or
fsts
pop
mov
inc
or
pop
rcrl
inc
ret
cmpsb
icebp
aad
adc
or
sub
xchg
icebp
push
push
jae
dec
xor
jp
or
adc
pop
sbb
aaa
cwtl
sub
inc
int
jmp
inc
cmp
mov
movsb
jbe
cltd
out
adc
mov
mov
push
daa
enter
test
xor
mov
or
mov
jecxz
add
ret
dec
popf
add
pop
sbb
adc
cmp
sub
test
and
ljmp
out
adc
rclb
mov
adc
inc
icebp
cli
es
lahf
imul
jns
add
or
cli
xor
enter
add
adc
push
lds
xchg
sub
bound
xchg
sbb
sbb
int3
xorl
push
test
add
incb
xor
mov
mov
or
jne
jo
rolb
sub
adc
pop
sbb
xchg
push
or
aam
icebp
daa
mov
add
adc
rclb
sbb
jle
in
pop
or
mov
adc
cltd
dec
cs
bound
inc
sbb
lcall
stos
pop
inc
xor
sub
xchg
ljmp
inc
je
ret
rolb
mov
pop
xor
add
add
mov
dec
scas
jo
insl
adc
lcall
outsb
inc
pop
pop
lcall
add
xlat
enter
je
mov
add
mov
pop
popa
icebp
xor
jg
loop
sub
mov
jb
jmp
push
and
cmp
sbb
andl
rcll
loope
sbb
jb
add
push
add
adc
insl
jo
pushf
lret
js
and
mov
cltd
inc
sub
sub
pop
mov
xchg
or
sub
sarl
push
mov
mov
adc
sar
or
stc
adc
sub
ret
push
mov
ret
inc
pop
jge
xchg
mov
scas
xchg
add
or
test
fs
out
mov
xchg
push
cld
jmp
addb
xor
icebp
push
mov
movsb
cmp
add
push
cmp
sbb
rcl
insb
cmpsl
adc
in
fidivs
jmp
sti
notb
adc
rol
adc
jp
or
subb
add
aam
ljmp
or
je
and
mov
push
leave
adc
push
adc
cmp
sbb
ljmp
lret
inc
xchg
inc
xor
inc
je
push
ror
in
orl
ja
add
push
mov
aad
xor
nop
pop
pop
rclb
add
int3
cld
sub
insb
inc
adc
push
mov
cltd
push
push
xchg
push
ret
and
xchg
or
adc
sub
clc
out
push
cmpl
into
push
clc
lcall
add
jae
push
xchg
movsl
enter
or
jmp
mov
adc
lret
xor
incb
out
mov
mov
leave
lret
add
and
adc
xchg
test
inc
loop
pop
ljmp
testb
icebp
imulb
pop
mov
inc
cli
std
mov
push
push
or
xchg
mov
lcall
test
mov
mov
mov
xchg
inc
mov
pop
es
xchg
inc
sarb
sub
scas
scas
daa
ljmp
cli
push
pop
test
mov
inc
sbb
add
push
dec
sub
fcoms
sub
add
std
or
pusha
test
or
add
ret
jo
movsb
xchg
mov
add
jnp
pop
mov
lahf
mov
aad
push
lret
xor
ljmp
push
pop
xor
add
push
cmpsl
loopne
lds
inc
mov
sbb
insb
lsl
xor
lret
xor
mov
xor
inc
into
xor
or
subb
push
mov
add
ja
sbb
mov
sbb
sbb
cltd
mov
pop
mov
push
inc
pop
and
cmpsl
les
stos
push
mov
mov
bound
outsb
adc
jne
mov
lret
mov
ljmp
dec
outsl
cli
mov
out
pop
popa
mov
ljmp
dec
sub
cmp
mov
push
ljmp
sub
imul
pusha
lcall
stos
add
pop
xor
sub
icebp
pop
sub
or
adc
addl
ds
mov
scas
sub
cmp
smsw
iret
jp
push
sarl
gs
push
pop
sbbb
lods
icebp
sub
or
adc
and
adc
subb
add
jns
push
sbb
stc
stos
inc
xor
push
pusha
lds
or
sarb
xor
add
es
test
inc
fdivs
push
jb
pop
mov
call
mov
in
adc
push
test
pop
pop
cmp
scas
add
mov
rolb
rolb
adc
jns
and
orl
dec
push
pop
mov
xor
mov
cs
add
jns
arpl
addb
rorl
sub
or
inc
jge
jnp
lods
sub
jno
push
out
and
sahf
mov
rcrb
inc
sub
push
sbb
jns
push
mov
inc
lds
mov
mov
inc
fs
push
push
cmpsl
call
mov
pop
add
mov
push
sbb
mov
dec
insb
into
sub
sbb
sti
movsl
jle
sub
add
loope
cmpsb
add
sar
inc
mov
loopne
add
subb
testl
cmp
in
xlat
fmull
cmp
cmp
adc
adc
xor
mov
xchg
gs
addb
sbb
sbb
mov
push
jle
inc
adc
and
mov
int3
push
xor
xchg
sbb
adc
add
popf
ja
sub
xchg
das
into
push
pop
lock
jnp
adc
cmp
cmp
adc
mov
jp
or
adcb
cli
pop
sbbl
pushf
cmp
add
flds
adc
and
cmp
dec
or
sbb
out
shlb
test
push
mov
mov
or
and
clc
sub
sbb
pop
inc
subb
sbb
or
inc
pop
pop
add
add
test
dec
ror
adc
pop
jo
rcrl
xchg
push
cmp
pop
loop
loop
aam
or
sbb
loopne
xlat
je
cmpsl
inc
xlat
adcb
add
call
rcll
loopne
and
ficoms
mov
ds
sub
imul
mov
push
mov
mov
out
aam
aad
and
mov
xchg
adc
insb
xchg
mov
js
mov
jb
leave
adc
fisubrs
push
jo
jecxz
in
xchg
cmpsb
ljmp
aad
sub
adc
jp
adc
test
std
ret
ss
pop
test
sub
negb
xchg
mov
das
mov
fildl
and
add
mov
test
fiaddl
sbb
sbb
push
xorl
cmpsb
inc
and
andb
sbb
mov
jb
test
lcall
test
sbb
call
pop
push
aad
je
pcmpgtb
loopne
sbb
sub
shll
cli
xchg
inc
pushf
adcb
adc
or
mov
push
sub
or
xorps
jl
add
add
or
push
sub
sub
mov
push
inc
or
ljmp
rcrl
jmp
and
imul
dec
inc
sbb
cmp
adc
out
pusha
test
adc
sub
addl
push
cmp
out
clc
shll
lock
ljmp
and
push
mov
push
inc
leave
inc
sub
add
mov
fst
xor
push
adc
sarb
push
mov
cld
sbb
xor
pop
sbb
sbb
add
push
xchg
pop
xorb
sbb
inc
mov
fidivl
rclb
sub
jle
sub
inc
lret
loope
pop
push
int
xchg
in
xor
outsb
jno
sbbb
stc
adc
pop
loope
xor
xlat
cmp
sub
rcll
add
and
add
and
sbb
sbb
add
cs
or
adc
dec
cltd
pop
jno
inc
and
rcrb
mov
and
cmp
loopne
sub
push
fcmovnu
push
mov
mov
add
xor
jge
jmp
xor
lds
int
movsl
js
add
mov
mov
xor
lret
add
mov
xor
jb
sbbb
mov
loop
mov
js
push
xor
mov
fs
cmp
nop
mov
jno
jge
add
cld
das
shlb
mov
mov
mov
inc
es
in
push
icebp
stc
or
call
inc
mov
rcll
lcall
addr16
shlb
stos
sub
inc
xor
or
insb
test
push
push
mov
jo
into
rcll
and
stos
int
pop
dec
rclb
cmp
outsl
push
inc
sub
mov
inc
inc
mov
mov
mov
test
xchg
test
push
shl
push
cs
sbb
inc
stos
mov
pop
lret
rcl
mov
fcmovb
adc
push
loopne
rclb
and
mov
inc
int
mov
push
movsl
add
pushf
mov
loopne
mov
icebp
fstpt
push
push
test
pusha
loop
pop
pop
ret
adc
bound
mov
cmp
adc
loop
xchg
lock
push
and
jl
xchg
jmp
xchg
repnz
inc
pop
push
pusha
and
ret
mov
filds
sbbb
sub
xchg
add
subb
inc
mov
fcomps
pushf
pop
rclb
mov
cwtl
push
sbb
pop
aam
xlat
pop
lret
inc
push
shrb
push
adc
sti
call
test
adc
dec
xor
push
test
mov
gs
pop
lcall
push
leave
sti
adc
setbe
test
cmpsl
movsb
shrb
mov
cld
sub
add
xchg
adc
cmpl
xchg
sbb
add
jb
mov
xchg
xor
dec
mov
ss
bound
call
jo
mov
ds
push
push
add
das
mov
sbb
iret
adc
sub
push
sub
ds
bound
add
or
fdivl
jo
pop
in
adc
mov
push
hlt
and
sub
cmp
idivb
rcrb
mov
int
stos
jecxz
cmp
push
shlb
and
add
adc
add
adc
inc
adc
les
je
ljmp
xor
gs
imul
inc
cmc
push
mov
mov
dec
pop
int
lods
cmp
dec
add
bound
outsb
test
jle
pop
sub
imul
daa
xchg
out
or
sub
test
mov
test
xor
push
sbb
sbb
sbbl
pop
sbb
xorb
stos
test
add
push
mov
or
bnd
push
pushf
leave
xchg
sbb
call
pop
jg
or
cmp
insb
adc
mov
cmp
sub
cmp
push
movsb
pop
rcrb
sbb
mov
popf
cmp
les
aam
ret
jne
push
mov
mov
inc
push
dec
addr16
scas
sbb
lret
adc
mov
and
cmp
inc
clc
movntq
out
aad
inc
lods
test
dec
pusha
mov
or
movsb
sbb
or
repz
cmpsb
ss
add
dec
xor
mov
and
and
ret
mov
lahf
push
scas
xor
icebp
mov
mov
sbb
mov
addr16
cli
rcrl
iret
shl
loope
cmp
rorb
clc
lock
cli
or
inc
pop
mov
pop
pop
push
mov
push
loopne
adc
fisttps
lcall
popa
push
sub
movb
mov
dec
in
push
cwtl
mov
add
push
mov
rclb
xchg
cmp
or
xchg
test
cmpsb
adc
lods
rcll
mov
jp
add
add
test
test
add
bound
dec
xchg
inc
or
movsb
and
xchg
jno
cs
inc
sbb
add
add
xor
pop
in
xlat
test
rcll
rcrl
ret
inc
movsl
rcrb
push
mov
jge
pop
inc
andl
push
in
sbbb
or
xchg
out
adc
push
call
lds
xor
or
das
and
out
pop
rclb
addr16
inc
pop
push
xlat
sarb
add
lods
movsb
inc
add
xchg
sbb
add
sbb
push
push
mov
pop
test
dec
mov
das
ljmp
mov
loopne
inc
andl
ret
nop
fisttps
add
daa
ret
rcll
add
imul
arpl
mov
or
xchg
mov
jo
mov
adc
jle
and
add
adc
aam
sub
bound
ljmp
cmp
js
adc
and
adc
adc
xor
adc
pusha
call
pushl
rorl
shrb
xchg
lea
add
movb
pop
push
lret
scas
and
add
pop
add
clc
sub
adc
mov
push
sbb
test
cmp
rorb
push
dec
add
test
xorl
mov
out
test
push
push
mov
add
popf
lds
out
test
into
cmp
mov
xchg
outsb
imul
insl
ret
dec
shlb
lock
inc
dec
fcomi
fidivrl
pop
xchg
orl
dec
clc
inc
add
mov
push
xchg
dec
shrb
ds
jmp
inc
rolb
jne
mov
leave
push
out
xor
xor
pop
adc
jmp
outsl
mov
cmp
mov
add
insl
nop
adcl
adc
mov
adcb
daa
ret
cmc
or
jb
inc
mov
inc
sub
ss
push
jno
ficoms
sbb
inc
dec
or
pop
add
icebp
add
or
rclb
fldenv
ljmp
pop
pop
adc
pushw
stos
fisttps
imul
dec
test
mov
shr
xor
cmp
xorl
add
push
jae
xor
call
std
mov
orl
test
add
sub
lds
mov
adc
rolb
stos
inc
lds
mov
mov
sub
adc
jmp
cmp
xchg
mov
test
push
movsb
cld
ret
adc
mov
pop
xchg
cmp
or
or
stc
loope
and
dec
rolb
or
inc
enter
fcomp
push
inc
sbb
sub
adc
sub
xchg
aam
adc
jno
and
mov
icebp
add
sbb
adc
add
cmpsb
aas
popa
or
or
cmp
inc
stos
add
aaa
sbb
popf
push
push
mov
jb
inc
sbb
lahf
inc
add
push
push
scas
rolb
fs
push
add
push
cs
adc
push
ret
xor
sahf
jne
inc
add
adc
lcall
adc
stos
or
stc
and
inc
inc
loope
inc
xor
fisubl
push
int3
lret
add
or
sbb
icebp
psrad
adc
mov
cmp
nop
sbb
loopne
shr
cs
movsb
out
leave
mov
aad
int3
mov
push
or
push
cmc
and
adc
lret
rol
sahf
add
or
inc
icebp
rcrl
add
loop
jl
into
subl
adc
adc
inc
sbb
sub
mov
mov
lcall
or
adc
test
mov
add
cmp
rcll
cmp
pop
mov
mov
in
rclb
bound
add
mov
or
adcb
mov
push
lret
or
or
xchg
inc
and
inc
popa
subl
jmp
inc
bound
add
inc
roll
enter
loopne
xor
es
pop
sbbl
mov
pop
xchg
pusha
jge
push
mov
xchg
adc
and
loop
insb
fimuls
inc
add
add
int3
adc
inc
leave
or
push
outsl
jle
shlb
add
push
adc
xchg
int
dec
pop
adc
cltd
ljmp
cmpsl
aas
jo
out
adc
mov
andb
rclb
and
push
cmp
xchg
aam
int
pop
fstps
out
sub
adc
mov
add
ret
jecxz
popa
push
or
push
add
adc
loope
pop
clc
push
mov
pusha
xchg
cmp
xchg
rcl
sbb
sbb
mov
or
sbb
je
cli
test
inc
dec
leave
adc
or
sti
rcll
push
mov
jne
js
xchg
addl
inc
mov
pop
sub
jae
xchg
mov
cwtl
and
pop
lahf
xor
daa
push
stos
adc
arpl
push
enter
sub
cmp
icebp
cmp
mov
mov
xchg
cmp
sub
mov
mov
test
add
out
pop
xor
xor
scas
pop
ljmp
or
fucomi
mov
pop
jne
mov
xchg
cmp
sbbb
pop
call
sub
ljmp
call
cmp
sub
ljmp
adc
mov
nop
pop
lahf
mov
enter
mov
pop
or
sbb
mov
addr16
sbb
mov
lahf
pop
xchg
sbbb
cmpsb
es
xor
cmc
dec
ret
pop
std
fdivs
adc
jmp
add
ja
mov
push
adc
push
cmp
push
adc
outsb
nop
jmp
aas
xchg
lds
ret
or
sbb
stos
lock
or
cmpsl
into
push
movsl
enter
jo
adc
dec
add
push
vpshlq
push
shrb
rclb
sbb
add
sub
dec
shll
popl
fisubl
cld
enter
or
fcmove
dec
or
sbb
xor
sahf
stos
movsl
repz
mov
jae
les
andl
addb
ficomps
cmp
addb
jae
and
add
sahf
cwtl
test
push
pop
sub
push
rol
gs
push
and
mov
sbb
cmpsb
sbb
scas
xor
pop
pop
xor
outsb
sahf
cmp
push
inc
inc
push
mov
sbb
aaa
leave
loopne
addb
jmp
push
scas
inc
popa
or
test
cli
jg
sub
add
cmpsl
fiadds
insl
lods
mov
loopne
and
ljmp
enter
push
push
adc
and
pushf
dec
std
cmp
or
sbb
push
popf
popf
push
mov
xor
xlat
or
push
je
lock
sarl
dec
div
int
imul
xor
jnp
js
rolb
inc
push
sbb
ljmp
mov
inc
mov
xchg
mov
mov
mov
into
adc
xchg
pop
cli
push
in
shl
stos
sbb
aad
sub
call
mov
inc
adc
inc
rcl
popa
into
mov
xlat
pcmpeqd
stos
adc
mov
push
and
push
sbb
pop
cmpsb
push
sub
jbe
adcb
mov
sub
les
test
arpl
cmpb
push
jbe
adc
iret
test
add
pop
mov
sbb
add
stos
adc
pop
pop
mov
hlt
xor
push
test
inc
push
dec
fsts
cmc
cmpb
je
push
sbb
jb
push
mov
inc
inc
push
dec
lock
mov
sbb
xchg
mov
add
pushf
cmpb
push
cs
or
mov
inc
mov
dec
push
or
hlt
mov
sub
roll
inc
fwait
rolb
scas
movb
inc
or
adc
adc
scas
aaa
push
cld
cmp
push
push
xchg
cmp
mov
in
adc
pop
xchg
mov
pop
dec
ret
push
mov
dec
dec
push
hlt
or
sub
inc
jmp
sub
mov
leave
dec
mov
dec
setbe
popf
mov
adc
ret
jecxz
pop
inc
sub
pop
inc
push
push
dec
fwait
stos
dec
jmp
push
or
lock
rol
jne
lahf
mov
scas
mov
pop
sbb
movsl
stc
adc
lcall
shll
add
sarb
push
movaps
lret
cmp
mov
and
in
mov
test
out
jne
jo
bound
add
and
imul
sbb
stos
sbbl
call
xor
push
inc
sub
and
stc
push
mov
or
fadds
adc
fisubs
jge
or
outsl
inc
and
notl
int
out
incb
sub
mov
das
or
popa
push
pop
cli
and
jp
inc
xchg
cmp
popa
push
sbb
repnz
data16
cmc
inc
add
imul
adc
push
sub
xchg
test
insl
rolb
adc
sbb
or
lock
in
mov
or
enter
sub
lds
sbb
adc
daa
pop
jl
inc
xchg
js
sub
js
push
test
loope
outsl
rclb
addb
dec
jb
or
pop
pop
cwtl
sysret
leave
push
test
arpl
mov
mov
sbbl
jl
inc
lds
bound
mov
push
mov
jmp
add
mov
stos
scas
pusha
push
pop
push
inc
sbb
xchg
test
xchg
xchg
adc
or
or
addb
mov
pop
xor
add
adc
jae
out
fstpl
jp
and
jb
pop
movsl
es
push
test
sbb
mull
add
add
mov
add
push
xchg
sbb
xchg
fs
or
add
mov
into
adc
sbbb
ficoml
push
xchg
add
stos
mov
in
sub
subb
cli
in
pop
add
push
cli
inc
shrb
inc
add
add
dec
or
orl
jae
dec
push
mov
mov
inc
or
cmc
and
mov
daa
or
mov
out
jno
adc
aad
jg
push
hlt
loopne
add
sbb
mov
mov
sub
lock
pop
add
nop
push
dec
cmp
sub
jge
stos
and
dec
pop
shrl
rolb
or
pop
mov
mov
bswap
test
mov
add
outsb
add
mov
adc
dec
pop
add
sub
adc
and
dec
xchg
xchg
rclb
jbe
rol
inc
aam
cli
pop
rolb
mov
add
or
adc
push
in
aas
push
pop
mov
or
shl
notb
and
jnp
sbb
push
dec
rolb
leave
pop
push
sbb
jle
rclb
or
lea
or
into
lret
test
aam
nop
or
xor
mov
push
dec
add
push
fimuls
lret
adc
sub
loop
sbb
mov
ljmp
xor
xor
into
xchg
sti
ror
add
add
pop
dec
add
push
xchg
pop
push
addb
je
push
jo
add
mov
xor
mov
aaa
ret
ljmp
out
shl
jl
out
sbb
inc
and
mov
lods
loope
or
rolb
test
push
ret
test
lcall
scas
stos
adc
mov
push
aam
js
into
adc
jo
push
push
xor
ficoml
inc
les
cmp
jno
inc
lds
popl
xchg
xor
push
fisubrl
push
or
out
jg
add
test
push
jbe
aam
sbb
mov
sub
dec
push
adc
jge
xchg
lea
fisubrl
clc
out
cmp
push
repz
int3
out
adc
lock
cmpsb
adc
dec
or
pusha
mov
xchg
and
inc
sub
test
mov
mov
sub
sbb
and
adc
int
cmp
dec
aad
xchg
adc
mov
sbb
add
sbb
xchg
addr16
test
mov
xchg
push
mov
in
mov
pop
icebp
or
inc
roll
aad
adc
add
idivb
sbb
add
push
int3
push
push
cmp
insb
jno
bound
rol
mov
xor
outsb
or
sbb
loopne
pop
inc
pop
and
mov
push
fwait
enter
mov
into
adc
inc
or
stos
test
mov
add
ror
push
loop
adc
idivl
loopne
pop
add
push
cmp
mov
and
pop
adc
mov
adc
scas
mov
push
push
outsl
xlat
add
std
inc
xchg
push
imul
mov
pop
imul
jp
jge
dec
cli
add
inc
lock
aad
mov
cmp
sub
loope
sbb
xor
mov
mov
push
adc
fsubrl
xchg
cmpsb
adcl
je
clc
add
xchg
jns
sbb
sbb
and
mov
fwait
adc
mov
sbb
or
or
or
inc
push
cmp
bound
into
cld
mov
sub
or
sbb
push
push
js
cmpsb
sub
test
sub
testl
mov
or
xchg
or
push
adc
in
dec
pushf
neg
lret
or
ljmp
mov
pop
mov
dec
enter
shlb
and
pusha
ljmp
cli
rorl
rol
sbb
sbb
rcll
test
inc
pop
jns
sbb
mov
pop
test
dec
add
add
mov
mov
hlt
inc
inc
pop
icebp
sub
push
aam
lods
pop
inc
pusha
push
mov
sbb
or
mov
sbb
pop
xchg
call
test
rclb
adc
push
xchg
adc
xor
je
push
test
add
jmp
lds
aas
pop
adc
das
sahf
jae
test
out
or
sbb
or
decb
sbb
jne
inc
pop
pop
jne
sub
add
cmp
cmp
cmpsl
pusha
inc
dec
cmp
int
rcll
sub
mov
dec
and
lea
adc
add
stos
ret
shl
dec
add
repnz
push
shrl
mov
jnp
fstps
rorb
mov
fimuls
mov
or
sub
cmpb
cmp
pushf
xchg
and
pop
rolb
leave
ret
into
xchg
lock
out
pop
xchg
push
xchg
into
add
shlb
mov
adc
push
cld
add
lds
arpl
or
adc
cmpsb
or
or
fwait
adc
dec
scas
adc
jecxz
and
in
add
cmpsl
xor
mov
pop
push
mov
jp
into
push
rclb
loope
mov
mov
adc
dec
and
inc
loop
es
cmp
push
cmpsb
cmpsl
sub
arpl
shl
mov
inc
mov
adc
test
add
add
sub
inc
jge
leave
shrb
cld
or
loopne
lds
adc
push
sahf
or
add
adc
in
andb
inc
dec
xchg
mov
enter
dec
xchg
xchg
subl
or
loopne
pushf
xor
leave
add
pop
pop
rol
and
mov
adc
scas
pop
aam
and
lods
mov
xchg
add
ret
xchg
subl
mov
jo
add
xchg
loopne
cmp
das
mov
mov
jb
jne
mov
imul
adc
shlb
insl
sbb
pop
push
rcrl
sub
pusha
or
and
popf
mov
inc
or
inc
sbb
push
fiadds
sbb
pushf
jmp
ds
push
outsb
xchg
stos
syscall
ljmp
cmp
repz
insl
arpl
subl
cmc
pop
and
add
add
pop
dec
ss
adc
mov
imul
or
ds
inc
rcll
xchg
mov
add
pop
stc
push
test
jne
lock
inc
sbb
call
sbb
push
and
pop
popf
jmp
push
subb
pop
add
loop,pt
jmp
add
and
adc
mov
pop
ret
add
jb
add
call
jns
andl
in
test
and
mov
imul
and
mov
xlat
dec
rcl
mov
and
cmc
rcrb
les
mov
jmp
mov
repnz
xchg
sbbb
out
add
out
xchg
adc
sub
ret
scas
call
mov
mov
pop
push
rolb
sub
in
sub
sub
mov
push
add
mov
and
pop
loopne
sahf
or
clc
andb
push
push
les
sbb
adc
mov
xchg
jge
mov
icebp
lret
inc
pop
andb
push
adc
push
sbb
mov
add
pop
xor
inc
mov
mulb
lds
push
xchg
mov
nop
xchg
movsb
clc
jle
push
add
mov
lea
call
lods
inc
addb
ret
xchg
cli
add
lods
shlb
adc
mov
pop
and
xor
or
adc
lods
call
adcl
mov
sub
shll
fiadds
mov
scas
xor
xor
xor
inc
mov
ljmp
andl
insl
inc
aaa
rcrl
and
push
push
xchg
imul
and
push
or
and
lea
dec
add
add
mov
rcrl
jge
pushf
pop
enter
mov
cmp
bound
hlt
xchg
sbb
adc
push
jp
cli
inc
filds
pop
and
dec
roll
jnp
inc
sbb
jo
lea
enter
add
mov
add
out
cmp
pop
faddl
rcrb
push
adc
inc
cmp
ljmp
push
aam
cli
push
push
and
enter
in
pop
xor
sub
clc
or
pop
or
ficoml
jne
cmp
in
aam
push
sub
dec
xor
push
adc
push
adc
aad
shll
cmp
xor
pop
test
adc
adc
dec
push
mov
mov
cmc
push
cmc
xchg
sbb
mov
adc
sub
xor
mov
cmp
xor
cmc
subb
mov
nop
mov
pop
push
add
and
or
mov
xor
push
pop
add
jl
pop
add
in
leave
xor
jmp
aam
mov
test
pop
xor
adc
popa
mov
and
ror
cmpsl
mov
sarl
sub
xor
mov
sub
loopne
or
lds
add
mov
sub
pop
roll
sbb
sbb
dec
testb
xor
sbb
push
cmpl
scas
or
rorb
gs
mov
rolb
je
adc
icebp
test
stos
adc
pop
stos
les
mov
addb
xchg
loopne
sub
stos
push
mov
icebp
add
lret
jecxz
sbb
rcr
lret
jb
sbb
insl
cltd
inc
shlb
or
ret
push
add
cwtl
jbe
cmp
add
imul
dec
jle
dec
pusha
mov
sbb
femms
and
mov
mov
inc
xor
mov
or
jg
aad
push
mov
lcall
out
jecxz
inc
pop
or
add
stos
or
push
cmp
jle
or
in
loope
add
inc
cmp
push
lock
iret
mov
add
add
jno
outsb
xor
addl
into
lds
decb
cmpb
xchg
jbe
push
xchg
mov
test
pop
ds
in
sbb
inc
xor
bound
or
mov
call
pop
sbb
aad
mov
push
add
add
xchg
cltd
mov
and
mov
or
mov
or
test
sbb
add
dec
or
xor
lods
addl
and
popf
jns
or
add
in
and
in
add
xchg
pop
ljmp
insb
shll
fisubl
pop
add
push
shrl
testl
stos
cmp
push
enter
movsb
pushf
or
and
popa
and
sarl
aad
add
rolb
pop
out
cmp
testb
rclb
xchg
push
and
and
into
in
jge
xor
fbstp
aad
or
pop
mov
ds
shlb
add
adc
pop
psraw
cmp
test
push
xor
adc
repnz
sub
rorl
loopne
sub
into
mov
add
cmpl
inc
or
shrl
push
push
xchg
daa
push
push
mov
push
movsb
or
sub
jmp
insl
rorl
dec
xchg
movsb
das
shlb
pop
adc
rclb
popa
cwtl
cld
and
inc
mov
fmull
cmp
loope
cmp
adcl
add
jp
in
jmp
ds
add
jae
add
pop
mov
leave
pop
add
mov
xor
insb
ret
pop
xchg
sahf
pop
adc
pop
push
adc
pop
inc
add
pop
cwtl
test
mov
pop
inc
pop
out
or
out
loope
aam
adc
arpl
adc
xor
push
mov
cmpsb
add
pop
pop
dec
xor
jecxz
or
sub
fmull
add
xor
push
sbb
jmp
adcb
jno
add
imul
outsb
jl
inc
test
and
jbe
mov
enter
adc
into
inc
mov
ret
mov
mov
je
add
insl
nop
repnz
inc
or
cmp
aad
pop
xchg
xchg
enter
xchg
addl
dec
mov
xor
ret
sbbl
mov
nop
mov
xor
push
add
inc
sbb
push
adc
pop
adc
lret
adcb
mov
data16
xchg
adcl
mov
pop
in
or
lahf
mov
inc
pop
mov
mov
push
leave
adc
fsubrl
push
adc
js
test
cmc
or
scas
sbb
inc
inc
pop
and
rorl
inc
sbb
xlat
add
call
xchg
notb
adc
call
adc
mov
addl
inc
sbb
inc
dec
mov
add
mov
jp
jnp
push
mov
mov
leave
pop
imul
adc
pop
mov
jge
inc
mov
incl
loopne
xor
jb
fcoms
roll
in
cmp
or
jno
adc
lcall
out
pop
mov
leave
xor
shrb
push
nop
cld
push
shl
inc
xchg
movsl
ret
inc
add
aad
mov
andb
loopne
repz
or
loop
or
rcrb
or
adc
push
xor
push
call
ljmp
mov
jno
adc
and
subb
dec
rolb
ss
mov
mov
push
mov
xchg
mov
sbb
adc
in
fildl
add
icebp
push
into
shlb
mov
divl
loopne
sar
mulb
aad
or
push
or
sbb
sbb
and
leave
movsl
adc
ret
leave
sahf
or
jl
dec
icebp
mov
je
js
push
xor
mov
cltd
adc
xchg
loopne
jns
mov
repnz
sbb
in
add
xchg
and
push
test
hlt
mov
in
push
cwtl
movsl
mov
dec
lahf
xor
jbe
sbb
shl
pusha
push
rcll
mov
and
jne
sbb
nop
mov
or
or
add
ret
add
sbb
cmp
lahf
push
inc
adc
adc
pusha
out
lock
sahf
sub
jecxz
adc
cwtl
inc
sbb
or
adc
sahf
stos
pusha
cmp
push
dec
mov
push
mov
adc
push
movsb
inc
shll
mov
pusha
push
aam
aad
cmp
sbb
into
inc
je
add
ret
arpl
inc
std
mov
mov
adc
ds
jp
cmp
add
jae
mov
stos
push
add
out
inc
push
or
lods
push
cltd
vandnps
xor
push
dec
int3
and
xchg
mov
jnp
sbb
pop
sub
cmpl
loope
dec
mov
xor
ret
adc
sbb
enter
imul
pop
xchg
jmp
lcall
xor
jmp
cmp
adc
lcall
mov
add
aam
or
push
sbb
andb
dec
mov
sbb
inc
adc
pushaw
xchg
push
mov
shlb
xor
adc
icebp
cmpb
pop
cmp
aaa
ljmp
xor
add
xchg
jg
jmp
mov
adc
jb
xchg
and
adc
aad
adc
adc
adc
push
pop
rorb
pop
or
sbb
stc
sub
push
lock
jne
mov
dec
outsb
stc
rolb
and
sbb
gs
push
jo
mov
sbb
inc
orl
stos
mov
into
test
push
les
leave
cwtl
push
arpl
adc
lds
pop
leave
repnz
jns
xchg
movsl
mov
insb
rorl
adc
mov
test
push
test
sub
jmp
dec
mov
inc
or
in
ds
sub
in
or
jnp
ret
xor
jb
xor
inc
inc
dec
inc
or
scas
mov
test
fwait
xchg
push
shl
mov
xchg
out
mov
subl
mov
xchg
pop
add
and
shr
into
jne
push
les
push
pop
in
xor
mov
push
les
enter
inc
and
add
push
les
push
push
out
jge
sbb
sub
loop
adc
mov
push
push
xchg
xchg
mov
adc
add
dec
ljmp
pop
mov
cmp
rcpps
icebp
stos
pop
mov
jae
dec
xor
adc
dec
mov
cld
sbb
sbb
lock
mov
cmp
test
fcmovne
shll
and
gs
mov
popf
mov
loope
adc
ret
jo
fldt
shlb
imul
mov
push
and
ret
dec
test
sub
add
push
ljmp
dec
inc
rolb
rclb
ret
ret
push
push
xor
xchg
or
sub
inc
push
pop
add
popf
mov
sub
lcall
movsl
sarb
adc
mov
cmp
cmc
rcrl
adc
cmp
call
inc
sub
sub
inc
cmp
pop
mov
mov
test
add
jb
pop
test
sbb
fs
clc
clc
call
subl
es
gs
ret
dec
call
addr16
cli
or
pushf
sub
gs
jne
mov
push
add
sub
ret
sbb
gs
and
sbb
xor
jo
sub
sbb
pop
pop
push
clc
aam
inc
stc
push
jb
cmp
adcl
leave
adc
bound
push
nop
and
nop
lret
xchg
leave
push
cmc
inc
inc
dec
and
add
ret
andb
and
orb
jmp
mov
push
or
add
sub
inc
mov
jl
pop
add
or
pusha
mov
icebp
stos
daa
call
sbb
lods
xor
push
bound
add
mov
lock
adc
sbb
inc
or
cwtl
push
push
mov
xor
pop
rclb
add
in
adc
cmpsb
push
cltd
cmp
stc
shll
adc
test
imul
and
add
fcoms
xchg
test
and
xor
cmp
in
je
add
jg
sbb
dec
and
and
mov
mov
push
pusha
lret
stc
jg
nop
addl
pusha
cmc
movsb
rcrb
jmp
scas
sbb
jb
or
sub
xor
inc
adc
mov
dec
pushf
adc
subb
adc
enter
ds
rclb
shll
sub
aam
jae
clc
lds
dec
out
inc
dec
inc
repz
imul
and
cmpsb
or
add
sbb
mov
jl
cmpsl
mov
xchg
xorb
cmc
push
adc
or
pop
cmp
xor
icebp
adc
inc
scas
test
or
into
adc
pusha
push
cs
out
xor
adc
js
mov
jbe
jmp
jp
dec
push
cs
sarb
test
inc
ret
adc
or
mov
pop
call
popf
pop
mov
and
cmp
rol
hlt
cmp
push
hlt
or
pop
add
cmpl
pop
mov
aad
sub
cld
icebp
inc
pusha
jb
xor
xlat
jmp
inc
add
inc
pop
adcb
jecxz
or
cs
adc
add
fwait
call
out
or
or
inc
xchg
mov
add
fxsave
push
inc
xorl
mov
inc
aam
dec
xchg
jae
mov
and
test
sbb
push
test
push
push
sub
sbb
mov
sub
dec
test
inc
pushf
lcall
cltd
loopne
mov
push
pop
scas
cli
scas
xor
jae
inc
inc
or
xchg
js
loop
outsl
push
mov
cmp
jl
cld
dec
add
in
push
clc
lods
stos
mov
jg
mov
add
pop
gs
or
test
jb
andb
jo
flds
mov
inc
or
inc
mov
push
add
jns
cmc
add
ljmp
rol
dec
push
mov
push
ljmp
add
ret
mov
mov
pop
add
sbb
mov
xor
shrl
add
sub
sbb
dec
pusha
test
xchg
lret
and
add
xchg
sbb
jle
stos
lds
sub
lcall
push
sub
jae
inc
pop
adc
lds
call
add
imul
ja
test
cmp
fcoml
in
cmp
arpl
aam
les
add
dec
mov
or
jb
or
cmp
ja
or
jp
hlt
jp
mov
add
lret
test
leave
ret
mov
iret
ret
or
push
lret
icebp
or
jb
rcr
bound
push
nop
test
push
scas
xchg
sub
fiadds
stc
movsl
cli
add
push
aad
lret
sahf
sbb
add
rolb
hlt
push
inc
pop
test
mov
sub
adc
mov
and
mov
cmc
cmc
push
rolb
mov
into
sbb
sub
cmp
mov
ret
pusha
mov
inc
pop
add
mov
rolb
lahf
mov
and
notb
adc
add
adc
xchg
xor
push
rolb
aas
ret
ret
rcll
pop
leave
or
shrl
daa
in
sbb
ficoms
dec
mov
push
addr16
sub
xchg
data16
and
bound
adc
xchg
dec
push
cmp
mov
shll
dec
fwait
dec
mov
rolb
mov
rcrl
ret
test
lcall
mov
es
sbb
bound
mov
mov
mov
adc
bswap
jp
rclb
je
inc
push
xchg
test
push
loopne
shrb
add
and
lret
fs
add
sbb
ret
out
push
outsb
push
pop
adc
xor
addb
sbbl
adc
and
cs
ficoml
sub
sub
mov
add
pop
inc
xor
add
sbb
pop
or
and
lret
add
repnz
in
fadd
xchg
mov
jp
push
cltd
mov
and
test
popf
mov
add
pop
add
jecxz
inc
adc
es
jo
add
in
and
pop
imul
sub
lret
pop
push
mov
jne
pop
lds
xchg
jl
mov
in
or
pop
bound
xor
mov
jno
sbb
xor
loope
push
lods
aam
ja
or
loope
and
push
data16
shll
xor
hlt
push
repnz
add
add
jns
rcll
mov
push
xchg
inc
push
jb
mov
out
test
or
dec
stos
lods
add
push
or
cmp
mov
push
pop
push
mov
adc
subl
scas
ret
pop
or
push
cmp
adc
push
dec
dec
push
cs
pusha
cmp
xchg
gs
cltd
out
xchg
ja
fnstcw
add
lea
mov
cmpsb
rcrb
push
pop
adc
sbb
or
adc
jno
sbb
mov
and
fisubl
mov
inc
sbb
or
add
add
in
mov
pop
pop
das
xchg
mov
orl
add
push
xchg
mov
addl
rorl
icebp
out
or
into
sarb
in
ja
into
lock
sbb
mov
jne
mov
lds
mov
rclb
xor
jmp
jo
pop
enter
pop
cmp
mov
inc
addl
mov
daa
sbb
fs
mov
pusha
ljmp
int
in
xor
cmpb
icebp
add
js
and
jg
push
push
push
sub
ret
movsb
xchg
cmp
cmp
leave
icebp
add
or
xor
push
aam
push
movsl
cmc
lock
dec
push
test
test
lock
push
test
stos
les
push
mov
mov
xor
xchg
lret
cs
rorl
adc
mov
mov
mov
mov
call
adc
push
pusha
and
push
jp
subl
xlat
lret
orl
xchg
mov
adc
sbb
out
sbb
xchg
jge
loope
sbb
sbb
roll
sbb
push
jge
sub
sbb
orl
mov
sub
rclb
adc
je
jne
sarl
scas
lea
push
aad
das
ljmp
cmp
and
lret
sbb
adc
test
pop
or
dec
cmpsb
jae
lret
sbbb
and
jae
push
popf
adcb
jne
rcl
xchg
sbb
mov
rclb
pusha
push
xor
push
push
jno
mov
shrl
add
sti
jns
icebp
sbbl
pop
push
les
stos
jne
xor
push
scas
add
add
xchg
push
addr16
push
mov
filds
int3
add
adc
lret
adc
cmp
movsl
jb
lret
jl
popf
jb
out
mov
sub
sbb
sbb
inc
pushf
cmpb
stc
mov
xor
jne
mov
imul
push
inc
inc
sbb
test
rclb
icebp
loopne
test
es
push
shlb
mov
fwait
push
sub
and
pop
test
ud2
in
xchg
mov
mov
mov
cmpsb
and
mov
cltd
mov
stos
dec
add
cmp
sbb
ljmp
adc
je
into
mov
lret
and
jo
inc
aas
test
or
loopne
inc
rorl
ss
test
add
cmp
xchg
insl
popf
adc
stos
push
js
or
in
and
inc
popa
cmp
or
ss
push
and
loope
aad
xor
xor
dec
stos
dec
dec
adc
or
add
push
sbb
pushf
inc
int
sbb
sahf
xor
cli
outsl
pop
jb
call
mov
ret
sub
pushf
add
xor
jb
push
adc
inc
sbb
sub
mov
movsb
dec
add
fisubrs
push
lock
push
pop
push
adc
subb
loopne
ret
ss
add
mov
push
out
aad
in
add
and
mov
sub
loopne
jecxz
mov
out
aaa
pop
js
sahf
loopne
dec
cmpl
orb
push
adc
jb
jbe
xor
cmp
loop
das
insb
pop
xor
add
and
and
mov
mov
ja
adc
push
dec
sub
inc
sbb
inc
dec
cld
add
mov
sbb
mov
adc
es
aad
mov
dec
cmp
mov
orb
push
jl
push
push
out
mov
ret
dec
shlb
stos
and
sbb
dec
jbe
jae
adc
inc
scas
mov
inc
dec
or
mov
outsb
lds
inc
cmp
inc
xchg
mov
mov
inc
fs
scas
mov
dec
inc
mov
mov
push
sub
jno
xorl
test
aam
and
pop
dec
xchg
mov
imul
jg
or
push
xchg
inc
pop
lret
sub
stos
pop
dec
push
xchg
and
nop
mov
into
cltd
jg
mov
fnstcw
jmp
pshufw
push
push
enter
sahf
xor
sbb
sahf
jmp
adc
popa
hlt
out
push
clc
outsl
add
push
adc
mov
je
test
adc
loope
addb
pop
add
dec
roll
add
bound
scas
add
sub
rolb
or
enter
or
inc
xor
push
xchg
or
ljmp
inc
in
mov
ret
je
je
push
pop
push
add
dec
adcl
mov
in
push
xchg
or
ljmp
mov
sbb
addr16
and
stos
out
mov
push
scas
add
cmp
mov
adcl
push
add
adc
or
inc
mov
add
lcall
lods
mov
ret
subl
pop
sub
push
dec
les
mov
inc
cmp
ds
mov
hlt
sti
das
lock
push
les
enter
dec
and
dec
enter
cli
pushf
or
mov
cmp
push
and
outsb
js
nop
loop
lds
dec
inc
sub
push
sbb
call
repz
pusha
adc
subl
insl
push
pushf
loope
push
add
cmp
sub
inc
jmp
adc
loopne
rol
adc
gs
mov
push
dec
outsl
lret
inc
je
fdecstp
cmp
push
and
stos
lahf
xchg
and
jmp
mov
jmp
sub
pop
inc
add
daa
jge
add
je
mov
add
add
popf
mov
inc
mov
repnz
dec
xchg
xchg
ficomps
mov
jmp
mov
push
dec
add
add
sysret
aam
adc
stos
mov
add
insb
nop
or
enter
inc
je
sbb
mov
adc
data16
stc
call
inc
call
and
les
mov
cwtl
fstps
test
scas
mov
dec
push
adc
add
xchg
mov
sub
push
outsb
push
push
rolb
fcompl
lds
jmp
inc
jp
shlb
push
or
mov
daa
inc
add
xchg
test
or
and
lret
or
inc
add
je
jp
test
xchg
cwtl
imul
ror
les
pmulhw
popf
add
add
sub
das
or
cmp
mov
rolb
inc
xchg
aaa
int3
xchg
or
dec
mov
mov
mov
pop
push
xor
fistpll
rorl
mov
pop
lret
mov
jmp
add
jle
arpl
xchg
stos
test
mov
pushf
stos
fisubrs
jne
imul
dec
sub
push
int
sbb
push
mov
inc
cmpsb
add
and
je
hlt
test
roll
push
add
arpl
adc
add
push
mov
pop
scas
sub
sub
push
roll
cmp
push
mov
adc
xchg
adc
ret
jp
sbb
mov
test
loop
mov
dec
pop
jae
adc
dec
popa
add
addr16
js
sbb
xor
inc
int
push
imul
pop
adc
ret
mov
and
addb
inc
push
jo
lcall
test
inc
test
or
rorl
push
inc
xchg
into
push
add
sbbl
shrl
ret
adc
pop
adc
jo
push
imull
mov
push
pop
ret
sub
pop
cli
fs
mov
and
pop
sbb
and
icebp
jno
add
mov
cwtl
cmpsl
cmp
adc
jmp
mov
adc
sbb
mov
outsb
and
sbb
and
mov
mov
cmpsl
fadds
js
vphadddq
inc
loop
enter
bound
mov
adc
sub
icebp
cmpsl
mov
insl
or
mov
nop
out
mov
xor
adc
xchg
adc
sbb
or
mov
fs
push
sub
push
push
adcl
mov
fcoms
and
arpl
andl
lret
mov
sbb
or
rcll
adc
or
pop
mov
cmp
test
adc
lds
insl
les
pushf
out
and
mov
xchg
jae
dec
sub
push
and
jo
int
cmp
lcall
jno
sbb
push
ds
sbb
mov
adc
mov
inc
mov
sub
movl
add
pop
cld
stc
repz
cmp
mov
shr
jecxz
cltd
int3
iret
lahf
aas
jg
jae
xchg
xchg
orb
pop
andl
mov
sub
mov
aas
jg
and
dec
shrl
lods
fdivr
repz
mov
aas
sub
loope
loope
xchg
aas
jg
cld
lds
popa
leave
fcmove
fldcw
ljmp
sbb
std
mov
jg
cld
stc
int3
pop
jne
dec
out
outsl
sub
fadd
cmpsl
cmp
iret
lahf
aas
repz
xchg
inc
rorl
data16
dec
add
cld
stc
repz
leave
adc
fstpl
mov
int3
lods
lods
out
out
pop
negb
std
aam
stc
repz
in
dec
adc
mov
out
pop
lahf
aas
jg
and
dec
lea
xchg
int
test
stc
repz
fstps
dec
loope
push
mov
enter
out
jg
cld
aam
leave
mov
shrl
repz
lahf
scas
arpl
dec
adc
mov
jg
cld
stc
sbb
inc
or
mov
push
je
xor
jmp
lahf
aas
push
push
lds
movsb
inc
jmp
cmp
cld
stc
repz
mov
push
repz
ds
mov
cmp
jg
jmp
inc
push
lods
loopne
cld
stc
repz
xorl
daa
sub
sbb
sub
adc
repnz
daa
out
mov
repz
mov
push
mov
mov
lahf
fdivrl
jg
cld
add
insb
sub
xor
iret
lahf
movsb
popf
cld
shl
in
mov
push
pop
dec
inc
jg
cld
stc
sub
adc
nop
mov
lock
lahf
aas
rcrb
pop
cs
scas
pusha
and
cld
stc
repz
mov
ret
adc
jg
mulb
leave
aad
negl
push
mov
out
test
jne
adc
xchg
icebp
xchg
mov
fisttpll
inc
dec
shrd
sahf
hlt
mov
repz
iret
out
mov
sti
or
inc
aas
jg
cld
dec
xchg
popa
dec
xor
std
cmc
out
or
pop
dec
xlat
je
cld
stc
rep
fs
jns
push
movsb
pop
lock
int
out
sbb
iret
lahf
aas
jg
sub
aad
push
push
and
scas
cld
stc
repz
fistps
push
cmp
jne
rcl
lahf
pushf
lahf
aas
jg
adc
es
in
fdiv
jmp
mov
repz
inc
xchg
or
add
sbb
cld
add
cmpsl
shll
lea
repz
lahf
dec
out
mov
adc
and
jg
cld
stc
jnp
jmp
jecxz
inc
inc
adc
repz
aas
jbe
daa
sub
test
lock
popa
imul
pop
and
repz
jp
inc
push
xor
jne
testl
rorb
notb
popa
push
repz
lahf
aam
mov
mov
push
push
xchg
sub
leave
or
mov
insl
jns
iret
lahf
aas
fisttpl
jmp
popf
pop
popa
lcall
add
stc
xchg
inc
pop
push
mov
xchg
lahf
aas
jg
and
bound
inc
iret
push
mov
out
jae
loope
xchg
mov
cmp
adc
cmp
lahf
aas
decl
iret
pop
sub
xchg
sub
repz
mov
fisttpll
scas
lahf
aas
jg
mov
sbb
or
cmpsb
mov
jb
sti
pop
pop
loopne
inc
jne
hlt
inc
xchg
sub
jg
cld
cmp
in
outsl
adc
xchg
inc
jo
addr16
out
lahf
xlat
pop
scas
ret
mov
mov
inc
pop
jg
cld
stc
out
pop
lods
add
jnp
ret
dec
cs
sti
inc
xlat
out
lahf
aas
fmull
scas
pop
jb
ja
test
mov
cld
stc
repz
pop
adc
test
aaa
shlb
jg,pt
and
cmpsl
dec
maskmovq
idivl
stos
or
subb
adc
mov
xchg
mov
inc
xchg
mov
lock
iret
test
xor
pop
jg
cld
stc
ljmp
lods
mov
push
lcall
lahf
aas
ja
sti
in
xor
xor
cld
stc
repz
stos
jp
sar
std
movsl
jbe
cmp
xchg
lahf
aas
jg
das
or
mov
mov
lea
sbb
jg
cld
stos
adc
idiv
dec
jns
loop
push
iret
lahf
aas
push
xlat
and
shl
pop
mov
cld
stc
repz
movsb
insl
push
in
or
pushf
shrb
lahf
aas
jg
push
setbe
mov
je
push
inc
outsb
cli
cld
stc
repz
enter
pop
fcoml
inc
dec
push
loop
xor
aas
jg
jne
jge
std
cmp
cmpsb
in
cmp
jb
inc
stc
repz
fs
aad
pop
push
and
push
std
push
mov
jg
cld
jnp
pop
dec
gs
ja
cmp
inc
aam
add
shll
or
mov
stc
sub
sarb
xchg
xor
cwtl
pop
adc
iret
lahf
aas
mov
mov
ljmp
stc
rep
add
test
pop
sbb
or
iret
lahf
aas
jg
mov
cmp
inc
movsl
cli
xor
xor
adc
stc
repz
pop
or
mov
adc
mov
cs
jno
or
lds
jle
stos
mov
rcrb
js
mov
fs
outsl
loope
xor
out
push
and
std
mov
rcr
add
jle
jg
enter
stc
outsb
sar
stc
repz
fs
sub
dec
sub
inc
out
aas
sahf
stos
mov
outsb
jl
pushf
or
cld
stc
repz
incl
push
or
xchg
lahf
aas
jg
inc
ja
dec
xor
clc
inc
inc
les
cld
jecxz
lret
mov
xor
ja
iret
lahf
aas
lock
push
loop
mov
repz
mov
mov
adc
pop
pop
sub
aas
jg
jle
push
std
sub
icebp
push
sub
stc
repz
lahf
test
roll
fs
jg
shl
pop
aas
aad
rcr
pop
leave
popf
pop
out
lahf
aas
mov
or
sub
mov
repz
outsl
hlt
out
xor
cwtl
lods
jns
in
std
push
mov
adc
sbb
bound
pop
jecxz
dec
cld
stc
repz
mov
dec
aaa
in
push
lahf
aas
jg
inc
mov
daa
xchg
nop
call
jp
xor
repz
xchg
js
cmp
xor
popa
ret
sub
add
cld
mov
pusha
pushf
lret
subl
out
lahf
stc
mov
pop
xor
movsb
stos
xor
enter
stc
cmp
in
mov
sbb
scas
add
cli
sub
iret
lahf
aas
mov
dec
mov
bound
dec
xor
sbbl
aam
test
jne
pop
jle
daa
neg
daa
lahf
aas
jg
jo
sbb
repnz
cld
stc
repz
inc
dec
scas
jg
inc
sbb
sbb
inc
and
jg
push
scas
mov
pop
orb
xchg
out
out
lea
repz
mov
mov
adc
push
jge
aaa
pushf
iret
lahf
jg
lock
out
adc
mov
push
out
push
xor
sub
xor
iret
aas
jne
jmp
push
mov
data16
insl
mov
dec
aad
repz
call
fwait
hlt
dec
dec
or
or
jg
cld
cs
pop
fs
or
aas
aas
adc
out
lahf
fsubp
cltd
pop
adc
fsubrs
jg
cld
stc
fcmovnbe
mov
cmpl
lods
inc
repz
sbb
iret
lahf
aas
pop
and
mov
jmp
cld
stc
repz
pop
mov
mov
rclb
xchg
iret
lahf
aas
jg
js
sbb
mov
pop
and
cmp
repz
sbb
mov
xchg
aad
adc
aas
adc
lahf
inc
xchg
adc
adcl
icebp
leave
pop
movsb
leave
cli
out
lcall
out
lahf
aas
adc
mov
add
pop
test
jecxz
pop
cld
lock
mov
add
insl
and
jg
mov
aaa
dec
jge
push
movzwl
or
in
hlt
ja
scas
push
out
jg
cld
push
inc
xor
inc
mov
add
test
lahf
cmp
push
sub
popa
cmp
cld
stc
cmp
xorl
shlb
jge
fwait
push
repz
aas
xchg
adc
dec
pop
stc
push
xchg
jg
cld
stc
adc
std
ret
sbb
xor
jnp
add
xchg
out
lahf
aas
out
je
mov
jno
aas
insl
cld
stc
repz
inc
cmp
cs
jmp
lahf
aas
jg
in
jge
lcall
jge
cld
stc
repz
cld
mov
mov
imul
cmpsl
dec
jle
xchg
jb
pop
mov
inc
inc
cld
stc
repz
cltd
push
es
xchg
daa
mov
lahf
aas
jg
push
push
movsb
dec
stc
dec
mov
push
mov
stc
repz
xlat
cmp
lcall
lahf
aas
jg
adc
pop
jns,pt
inc
xor
leave
notb
mov
repz
jb
outsb
lcall
test
frndint
stc
repz
in
xacquire
or
sub
jg
cld
sub
adc
cmp
fdivl
xorb
iret
lahf
shlb
movsl
in
jp
stos
cld
loope
mov
fcmovnu
clc
adc
lahf
aas
jg
dec
mov
jmp
or
repz
hlt
lahf
xchg
stc
call
test
add
pushl
mov
in
test
repz
aas
pushf
xchg
ja
mov
loop
jg
cld
stc
pop
xor
xor
push
rcrl
stos
pop
out
test
aas
dec
mov
sbb
mov
cld
stc
repz
pop
or
mov
push
je
loopne
negl
push
cmpsb
add
pop
mov
iret
es
jle
fists
scas
adcl
jg
inc
xchg
sbb
stos
push
cmpsl
scas
stc
repz
rcl
push
shrb
ja
dec
jbe
jae
aas
jg
cld
bound
adc
inc
imul
scas
jmp
shll
inc
cmpsw
jg
and
out
lahf
aas
mov
sbb
test
xchg
ret
lret
fildl
dec
cld
stc
rep
dec
mov
jo
vmwrite
aas
jg
fcoms
xchg
shlb
repnz
sbb
loopne
leave
stc
repz
inc
rorl
inc
sub
pop
jmp
aas
jg
cld
jmp
or
repz
pop
inc
rorl
out
lahf
rcrb
mov
push
pop
jg
cld
stc
pop
gs
enter
push
sti
lds
adc
adc
mov
fbld
cld
stc
repz
in
push
test
gs
scas
pop
test
sahf
aas
jg
and
clc
lock
mov
es
xor
pusha
pop
out
pop
fwait
aaa
outsl
fimuls
pop
stos
pop
movsb
jg
jo
jmp
jns
out
fistps
icebp
lret
push
mov
outsl
fidivrs
outsb
mov
out
fadds
and
xchg
jl
mov
jns
xor
fbstp
jecxz
sub
aaa
jle
jge
mov
je
in
jge
rep
je
mov
xchg
adc
and
push
in
iret
lahf
push
add
cmp
push
cld
stc
repz
inc
mov
cmc
addr16
jp
mov
repnz
jg
cld
cmp
xchg
push
mov
repz
lahf
add
jnp
jb
outsl
ss
lahf
jg
in
stc
cmpsb
btr
sahf
jbe
stc
repz
jp
clc
cli
inc
scas
adc
adc
mov
xor
mov
mov
lahf
inc
mov
jae
mov
loope
jge
cld
stc
sahf
pop
pop
hlt
das
jecxz
call
pop
subb
push
andb
xor
decl
repnz
repz
cmpsl
inc
adc
lds
dec
ja
push
or
inc
sbb
test
adc
push
xchg
outsb
sbb
push
xchg
out
mov
enter
xor
fstpl
shl
add
inc
out
lahf
jg
fstps
pop
xchg
roll
add
stc
repz
dec
and
mov
xchg
loope
mov
ret
and
jg
lods
clc
ret
jns
out
and
mov
out
loop
loopne
inc
cld
inc
fs
cmpsl
iret
lahf
jg
call
or
sub
mov
jbe
mov
stc
repz
lds
sub
add
dec
jle
iret
mov
jb
incb
inc
xor
shll
or
stc
repz
cmpsb
xchg
pop
jmp
imul
xor
or
pop
xlat
popa
mov
mov
iret
lahf
aas
xor
dec
aam
dec
insl
lods
xchg
cld
stc
repz
imul
dec
lret
jg
inc
addr16
add
lahf
aas
jg
ja
dec
cli
shll
xchg
xabort
cld
stc
repz
mov
jg
xor
testb
jns
aas
jg
out
jb
cmpsb
jb
rclb
and
mov
jg
packssdw
in
xlat
jbe
mov
aas
jg
cld
test
addl
dec
dec
mov
dec
int3
jb
repz
lahf
cwtl
cmp
test
mov
ss
mov
pop
dec
jg
cld
stc
jmp
ljmp
test
in
sahf
cltd
mov
mov
fildl
pop
fwait
ja
popa
dec
mov
gs
dec
jns
out
mov
dec
in
sahf
cmp
aaa
outsl
fidivrs
adc
rclb
pop
push
xor
repz
fwait
xlat
fnstenv
or
push
outsl
fidivrs
jb
int3
or
mulb
fwait
aaa
or
imul
mov
inc
stc
sbb
fidivrs
dec
mov
outsl
popa
fisttps
fwait
aaa
outsl
xor
sbb
adc
mov
push
insb
insb
shrb
out
das
xchg
scas
in
jg
and
outsl
ficomps
xor
fiadds
clc
inc
xchg
mov
cmp
ja
inc
cmpl
or
cmp
int3
das
sub
shll
shlb
outsl
bound
cmp
fdivr
test
xchg
int
mov
mov
imul
iret
lahf
add
jmp
loop
shl
adc
cmpsl
aas
pop
stc
stc
scas
xorl
push
rcl
stos
pop
subb
cs
lahf
cld
xor
cmpl
cld
stc
sti
adc
cmp
sub
inc
sbb
roll
popa
mov
push
and
stc
test
add
sahf
aas
sbb
jp
lret
repz
lahf
mov
mov
add
enter
push
and
pop
mov
repnz
mov
xchg
mov
mov
inc
cmpb
xchg
push
pop
mov
rclb
fwait
aaa
outsl
ficoms
cmp
cmp
inc
fs
lds
adc
and
scas
outsb
aas
jg
sbb
not
mov
cs
mov
lahf
addr16
adc
popf
mov
outsl
out
mov
mov
jp
mov
je
adc
dec
xor
aas
cs
jg
inc
shrl
loopne
dec
dec
dec
mov
cmp
je
iret
lahf
aas
nop
push
test
lds
mov
in
jecxz
cmpsl
mov
mov
xchg
lahf
test
xchg
pop
lods
enter
cmp
mov
xchg
xchg
aas
jg
lea
xchg
daa
insb
and
out
repz
lahf
stos
fdivs
push
sahf
nop
sahf
jge
xchg
mov
mov
cld
stc
popa
shlb
outsl
add
insl
push
and
enter
arpl
xor
sbb
xchg
adc
les
daa
push
cmc
push
repz
lahf
es
daa
xchg
push
int
sbb
cld
stc
or
pusha
ret
adc
or
pushf
out
lahf
aas
jnp
loope
loopne
and
ljmp
repz
mov
sbb
in
insb
ficomps
mov
inc
iret
lahf
aas
jg
aad
movsl
sahf
icebp
add
push
cld
stc
repz
sahf
mov
fwait
push
and
fwait
lahf
aas
jg
aad
ss
daa
gs
gs
lcall
out
xchg
xchg
xor
mov
xchg
jno
or
sahf
cld
das
jb
lods
movsl
pop
scas
mov
aaa
outsl
fisubs
int3
std
jnp
hlt
fwait
cmp
inc
xor
lock
inc
xor
xchg
sub
lahf
aas
jg
test
xchg
mov
push
cld
stc
repz
dec
mov
fwait
xchg
adc
mov
pop
lahf
cld
pop
popa
lods
mov
pop
lcall
dec
cmp
cld
cld
stc
repz
cli
pop
pop
pop
lahf
mov
jg
mov
sub
or
aam
repz
sub
pop
push
cmp
mov
mov
sub
ljmp
repz
shll
xchg
popf
out
dec
addr16
repz
daa
out
mov
shll
jg
aas
jg
pop
repnz
aad
cmp
jp
enter
scas
xchg
stos
pop
mov
int
loop
enter
mov
mov
jns
xchg
inc
scas
adc
outsl
int3
jne
pop
sub
sub
int
aaa
outsl
sti
fimull
mov
mov
icebp
enter
xor
cld
loope
ja
mov
jns
pop
stos
or
lret
out
lahf
aas
dec
pop
inc
imul
cld
stc
repz
vlddqu
ja
sub
insb
cld
cmp
jg
stc
repz
mov
aaa
test
xchg
fbstp
or
incb
dec
insb
bound
inc
outsl
fidivrs
xlat
shl
test
in
int
aaa
pop
in
sub
jmp
scas
loopne
mov
in
pop
test
in
mov
push
icebp
int
aaa
outsl
lods
pushf
cld
test
inc
jne
es
pop
lock
mov
pop
pop
sahf
insb
fidivrs
adc
mov
sti
mov
fwait
aaa
out
adcb
ret
rcll
int
and
mov
xchg
adc
or
icebp
testb
repz
fwait
stos
push
push
mov
add
mov
cli
hlt
mov
or
aaa
inc
mov
aaa
pop
aas
mov
jno
mov
and
mov
in
out
xlat
aad
jo
xor
cmp
fwait
aaa
outsl
jg
cmp
sbb
lcall
cmp
fucom
testl
out
mov
mov
mov
push
out
push
shl
cld
add
stos
pinsrw
inc
js
jg
shll
ret
add
pushf
lahf
aas
jg
push
out
mov
in
add
popf
repnz
stc
repz
pop
jae
jae
aas
pushf
push
repz
mov
jg
cld
mov
filds
mov
cmp
out
lahf
add
call
mov
dec
je
stc
fdivrl
jle
cmc
xor
iret
lahf
jg
xchg
sub
jge
fistpll
cld
stc
repz
js
add
cmp
dec
repnz
aas
jg
dec
jb
leave
mov
test
cld
stc
repz
out
mov
mov
jecxz
jnp
or
aas
adc
outsl
mov
mov
jecxz
daa
scas
test
sbb
inc
insb
jg
cld
stc
int
int
mov
loopne
sub
ret
mov
iret
lahf
aas
in
lret
icebp
lret
mov
stc
repz
and
cld
jg
adc
or
in
iret
lahf
aas
jg
fwait
pop
testb
push
jb
mov
in
pop
outsl
adc
pusha
mov
stc
repz
lods
adc
add
in
mov
cld
adc
test
dec
sbb
cmpsb
cmpsl
or
or
shlb
cld
or
mov
loope
test
movsl
outsl
inc
cli
adc
fistpl
ds
fwait
aaa
outsl
jmp
pop
sub
lods
dec
dec
sbb
jns
out
sbb
in
push
ja
clc
dec
lret
cltd
push
jo
fwait
aaa
outsl
ficomps
mov
sahf
jl
mov
rcll
repz
cltd
les
test
mov
outsl
fidivrs
fistl
mov
jbe
or
jg
cld
mov
mov
inc
mov
lahf
aas
icebp
mov
lret
fldenv
pop
jno
repnz
or
pop
fidivs
fisubs
shll
push
mov
lahf
popa
adc
dec
dec
cmp
ss
cld
stc
repz
sub
ljmp
lret
jbe
and
lahf
aas
jg
sbb
inc
xchg
fwait
jns
es
sbb
add
shlb
aaa
outsl
fidivrs
push
int3
call
mov
and
dec
mov
adc
lea
adc
shlb
mov
push
mov
mov
aaa
out
or
sbb
pop
loop
sbb
out
mov
cs
pop
in
fistps
mov
ja
aaa
outsl
fidivrs
cld
jl
mov
xor
out
fwait
adc
xor
outsl
movq
mov
xchg
cltd
cmpsl
cmc
addr16
push
jp
xor
out
fwait
aaa
xchg
xchg
movsb
stos
testl
dec
push
cmc
push
push
push
aad
mov
out
repz
inc
outsb
inc
ret
inc
lods
xchg
jle
xor
cld
stc
sti
push
sbb
sub
cmp
sbb
out
lahf
aas
fsubs
sbb
aas
add
jl
repz
jp
pop
bound
daa
or
repz
lahf
xchg
ja
mov
mov
push
in
lahf
jg
cld
stc
es
fwait
movsl
dec
cmp
inc
and
out
lahf
aas
loope
cli
pop
cli
repnz
stc
repz
dec
popa
pop
sub
mov
pslld
iret
lahf
aas
jg
into
lcall
pop
sbb
ja
test
sub
cld
stc
xlat
fucom
xchg
pop
mov
cmp
loop
xchg
iret
lahf
aas
jg
xor
sbb
jne
mov
cld
stc
repz
pop
pop
fistpl
inc
stos
test
or
lahf
aas
jg
mov
cli
ss
negl
mov
jl
out
pop
or
add
xchg
cmp
pop
mov
scas
fsubl
dec
mov
enter
dec
in
sahf
cmp
iret
fwait
lahf
aas
jg
sbb
rclb
pop
push
xor
xlat
stc
repz
fnstenv
or
push
push
mov
add
pop
or
mov
sbb
or
imul
xor
inc
stc
sbb
imul
outsl
ficoms
popa
fisttps
xor
sbb
inc
ss
movl
repz
fwait
insb
shrb
out
das
xchg
scas
in
jg
and
xor
mov
fiadds
clc
inc
adc
sbb
inc
out
fwait
aaa
cmpl
or
cmp
das
sub
mov
or
add
fsubl
into
outsl
fiadds
cmp
std
test
sbb
aaa
fisubs
loop
rcl
imul
fidivrs
shl
adc
cmpsl
scas
xorl
push
sarl
cli
add
stos
xchg
subb
ucomiss
mov
repnz
outsl
sti
pop
sti
adc
fs
aaa
outsl
inc
sbb
pop
mov
mov
outsl
push
and
jno
add
sahf
sbb
fwait
aaa
outsl
fidivrs
lret
mov
mov
add
enter
repz
repz
and
add
mov
jo
mov
mov
inc
cmpb
xchg
push
pop
mov
rclb
push
repz
fwait
cmp
cmp
inc
fwait
ljmp
sarl
loop
scas
outsb
or
inc
movsl
aaa
not
mov
repz
out
cs
addr16
adc
push
stc
repz
ds
jbe
pop
mov
jp
inc
mov
cld
mov
stos
dec
mov
test
mov
outsl
mov
mov
mov
repz
fwait
cmp
je
nop
push
test
outsl
fidivrs
mov
cmpsl
sbb
dec
cmp
cmpsl
test
nop
xor
insb
pop
dec
out
aas
jg
cld
stos
fdivs
push
sahf
nop
sahf
jge
xchg
mov
mov
out
lahf
shlb
outsl
add
insl
push
and
cld
stc
jge
arpl
xor
sbb
xchg
adc
iret
lahf
aas
test
add
cmc
push
es
daa
cld
stc
repz
push
int
sbb
stos
lret
xor
xchg
lahf
aas
jg
ret
adc
or
pushf
jnp
repz
loopne
mov
jl
js
mov
adc
pop
in
insb
fisubrs
xrelease
sbb
aad
movsl
sahf
icebp
add
push
jnp
cmpsl
iret
sahf
mov
fwait
push
aas
jg
cld
and
fwait
aad
ss
daa
gs
gs
pop
sub
lahf
lcall
xchg
mov
xor
cmp
or
fisubrs
sbb
arpl
out
fwait
insl
int3
std
jnp
hlt
fwait
cmp
mov
cmp
inc
xor
xchg
sub
test
fcmovu
movsb
xchg
mov
aas
jg
cld
dec
mov
fwait
xchg
adc
mov
repz
sahf
popa
lods
mov
xchg
pop
sbb
xor
test
fwait
aaa
outsl
and
mov
xchg
push
or
repz
or
aam
ficompl
cmp
pop
pushf
mov
sub
dec
jl
cmp
sub
xor
lcall
mov
daa
out
mov
shll
iret
lahf
aas
sarl
fnstcw
aad
cmp
js
rolb
scas
xchg
imull
adc
fsts
dec
enter
mov
mov
out
fwait
xor
inc
scas
adc
outsl
int3
jne
outsl
fidivrs
pop
mov
fimull
mov
jmp
int
aaa
mov
nop
push
shlb
xchg
push
imul
inc
sub
fcoms
stos
or
outsl
fidivrs
push
dec
pop
inc
imul
out
fwait
aaa
and
lret
lock
lock
lods
stos
adc
jb
pop
ja
sub
out
pop
flds
inc
mov
das
mov
aaa
test
cld
stc
repz
xchg
fbstp
or
sub
dec
iret
lahf
aas
jg
bound
inc
mov
push
xlat
shl
test
add
pop
in
sub
jmp
adcb
scas
loopne
stos
imul
dec
mov
dec
in
mov
push
icebp
lods
pushf
repz
cmp
cld
test
inc
es
xchg
outsl
fidivrs
mov
in
pop
sahf
sbb
adc
int
aaa
fisttps
sti
mov
xchg
ss
jns
out
jge
rcll
xchg
shll
mov
adcb
mov
aas
mov
stos
inc
fwait
aaa
outsl
fidivs
cltd
daa
inc
in
stos
push
push
inc
icebp
enter
fstps
push
xchg
cmpsl
out
cmp
sar
adc
fs
lret
cld
stc
repz
in
arpl
push
mov
and
iret
lahf
aas
jg
out
xlat
aad
jo
xor
cld
stc
repz
jg
cmp
sbb
lcall
insb
push
mov
arpl
testl
stc
repz
inc
adc
mov
mov
push
out
push
les
or
pusha
inc
js
aaa
outsl
fiadds
ret
add
pushf
push
out
mov
jns
out
in
add
popf
repnz
pop
jae
outsl
fdivrp
mov
repz
mov
mov
push
or
test
mov
jno
fidivrs
fwait
sbb
fdivrl
jle
mov
cmc
fldcw
sub
jge
fistpll
es
movl
xchg
xor
inc
fwait
aaa
outsl
fimuls
lahf
mov
lret
leave
mov
int
lret
stos
xchg
out
mov
mov
outsl
fidivrs
or
adc
outsl
mov
out
fwait
sub
add
sbb
inc
insb
int
int
mov
loopne
sub
out
fwait
aaa
ret
mov
xchg
lret
icebp
lret
mov
mov
xchg
adc
or
fwait
aaa
outsl
insl
in
mov
pop
testb
push
jb
clc
enter
ds
outsl
mov
adc
mov
iret
aas
das
lods
adc
add
in
mov
adc
cld
dec
sbb
cmpsb
cmpsl
or
mov
test
mov
cld
or
mov
jg
test
movsl
outsl
inc
cli
adc
fistpl
ds
repz
jmp
pop
sub
lods
dec
dec
sbb
inc
jle
cld
sbb
in
push
ja
clc
dec
lret
cltd
jo
repz
pop
or
scas
xchg
mov
pop
mov
out
into
in
aam
out
fwait
in
ss
shl
push
jb
lret
fdivrl
jne
enter
mov
mov
lahf
dec
pop
add
fwait
aaa
outsl
faddp
sub
jge
push
mov
ja
cmpb
int
in
test
fiaddl
jl
push
jbe
and
mov
outsl
add
ja
xchg
in
sbb
adcl
repz
jno
bound
mov
scas
outsl
fidivrs
leave
sbb
push
mov
out
lods
dec
inc
addr16
fwait
aaa
out
inc
xlat
mov
dec
cmp
repz
sbb
mov
in
stc
repz
addr16
and
adc
jns
aas
jg
cld
dec
cli
arpl
cwtl
sub
cmp
enter
lahf
cmpsl
roll
inc
push
cmpl
jg
cld
stc
mov
in
or
lock
in
inc
mov
add
fisttps
scas
dec
jle
leave
loope
xor
lahf
test
or
lods
pop
pop
lds
shl
addr16
adc
iret
lahf
aas
mov
xchg
jne
dec
sub
push
jge
pop
jl
rep
addr16
iret
lds
mov
fidivrs
jae
movsl
cmp
dec
cmc
jo
out
fwait
aaa
mov
xchg
push
adcb
mov
aas
jg
in
ds
push
sahf
xchg
test
pop
repz
lahf
pop
sahf
loope
int
iret
mov
jg
cld
stc
rclb
popa
lods
mov
out
xchg
jno
fwait
out
lahf
aas
sti
arpl
lcall
stc
repz
aad
push
nop
shlb
lahf
aas
jg
jl
mov
stc
sti
xor
loop
stc
repz
mov
push
sti
and
pop
lahf
aas
jg
and
xchg
in
loopne
mull
repnz
call
xor
push
addr16
inc
out
je
pusha
int3
jb
das
sbb
repz
mov
hlt
mov
das
outsl
fidivrs
insl
pop
test
jp
mov
shll
std
jg
xchg
test
xor
fwait
cwtl
and
fidivrs
aam
pusha
lret
add
outsl
std
jno
int
aaa
outsl
test
pop
aam
xchg
xchg
out
dec
dec
and
inc
shrl
ja
mov
fwait
aaa
outsl
fidivrs
aam
jg
or
decl
shll
pushf
pop
aaa
test
aas
cmp
out
xor
cmp
jo
sbb
out
fwait
aaa
push
fmul
jg
jg
add
mov
push
push
add
aaa
outsl
cmpb
xchg
enter
popf
enter
aad
out
mov
push
ss
popa
jns
out
popf
ss
mov
xor
outsl
fidivrs
in
xlat
in
push
adc
fwait
ja
inc
lret
ja
and
cld
and
out
jo
scas
dec
or
call
arpl
adcl
jp
out
inc
subl
clc
leave
test
repz
aas
jmp
inc
ljmp
aaa
outsl
fmulp
mov
sub
pop
pop
fistpl
out
cmp
dec
fisttpl
fnstenv
in
cmp
imul
or
lds
push
fwait
aaa
outsl
outsb
nop
jnp
xlat
sub
outsb
jae
and
movsb
mov
sbb
sub
sbb
add
push
ret
movl
sub
jge
mov
stos
pop
jmp
adc
call
mov
imul
push
jns
out
mov
hlt
jmp
pop
cmpsl
fnstenv
outsl
fidivrs
dec
cmc
push
imul
repz
fwait
arpl
nop
cmp
pop
adc
push
jp
inc
fidivrs
jae
jo
push
mov
lea
stc
stc
pop
aas
jno
mov
mov
dec
dec
cmp
outsl
fidivrs
mov
ss
jb
int
aaa
loop
int
loope
cli
je
pop
cmp
mov
mov
jb
hlt
mov
sub
jg
dec
int
aaa
outsl
lahf
dec
mov
cmp
sub
jl
jne
and
inc
push
mov
jle
out
mov
aam
lcall
popf
cld
stc
repz
scas
push
test
mov
repnz
fcmovne
lahf
aas
jg
add
test
jnp
lret
js
mov
sub
xchg
cmpps
aad
call
lock
adc
es
cmp
shl
mov
xchg
jns
lods
sub
aaa
outsl
fidivrs
jb
jae
pop
push
hlt
repz
mov
sub
sbb
push
jns
out
dec
mov
or
xchg
cmp
xorb
fidivrs
mov
add
daa
mov
repz
fwait
lahf
out
out
jp
jmp
and
fidivrs
push
call
hlt
mov
xchg
les
sbb
cwtl
and
push
cld
stc
subb
jo
dec
hlt
xchg
xchg
decb
andl
ljmp
pop
mov
push
xchg
and
sar
cld
mov
mov
mov
jne
iret
lahf
aas
jg
or
nop
adc
and
cld
stc
repz
inc
pop
sbb
inc
faddp
sarl
lret
push
lahf
aas
jg
out
mov
lods
imul
iret
mov
jp
inc
mov
mov
mov
cmpsl
data16
cwtl
movsl
mov
int
aaa
inc
data16
loop
mov
testb
repz
test
pop
lret
iret
add
ffreep
in
loopne
insl
bswap
and
movl
push
and
jg
add
cmp
push
negb
mov
and
out
or
sub
aaa
inc
inc
fidivs
adc
or
xchg
cmp
icebp
enter
out
adc
or
ret
jae
aas
jg
iret
cld
cwtl
movsb
out
jecxz
push
adcb
push
cmpsl
stc
repz
and
push
shlb
or
addl
xchg
xchg
test
mov
fmulp
jae
repz
lahf
jg
sub
mov
adc
cld
stc
and
lret
jb
xchg
xor
jmp
lahf
aas
cmp
dec
out
repz
xor
jg
pushf
jns
outsb
test
mov
mov
jp
sub
data16
xchg
pop
roll
xor
dec
push
es
mov
cmpsl
divl
aad
mov
mov
aas
outsl
fidivrs
scas
dec
or
and
out
fwait
aaa
faddl
dec
ret
xor
iret
in
sbb
mov
adcb
das
add
stos
insb
push
iret
mov
mov
jno
jns
out
in
push
insl
lcall
xor
adc
call
leave
jge
or
cld
test
xchg
sub
xor
pop
cmp
faddl
xchg
jae
imul
cld
stc
repz
sub
dec
hlt
lock
in
movsl
sbb
lahf
aas
jg
shrl
test
cli
ja
sbb
loope
adc
add
shll
outsl
ficoms
lock
xor
adc
cltd
pusha
in
push
jb
insl
lahf
aas
jg
push
insb
repnz
sbb
adc
repnz
and
cmp
mov
mov
fwait
mov
loopne
jmp
repz
bound
mov
loope
stos
xchg
xchg
aaa
outsl
jecxz
or
sub
icebp
rolb
dec
fildll
fbstp
inc
inc
fidivrs
cmc
and
jg
cld
stc
fsubr
negb
pop
out
xchg
mov
mov
lahf
aas
add
jne
mov
jae
fwait
xchg
data16
stc
repz
xchg
or
addb
push
mov
fsubr
aad
lahf
aas
jg
lods
outsb
int3
inc
xlat
dec
cmp
stc
repz
jle
cmpsl
imul
or
xor
xchg
pop
sbb
sub
pop
hlt
push
scas
adc
repz
lds
or
sub
shl
fildll
jg
cld
pop
cmpsb
out
mov
cli
movsb
mov
inc
js
aaa
les
sahf
bound
aas
cmp
rclb
mov
push
loop
xchg
pop
jo
cmpl
xlat
mov
popl
mov
push
loope
outsl
ficoms
fmull
mov
push
or
repz
fwait
xor
jecxz
stc
push
dec
dec
push
rcll
mov
popa
xor
add
aaa
outsl
fisubrs
or
scas
xor
int3
sbb
lods
jns
out
aas
cmc
and
xor
dec
mov
insl
insb
fidivrs
fldl
or
pop
mov
loopne
cmp
mov
mov
enter
pop
mov
ss
jno
cltd
in
jb
je
jbe
inc
pop
lahf
jmp
cmp
jne
aas
pusha
outsl
gs
call
dec
and
sbb
jg
xlat
in
and
push
xchg
lods
xchg
gs
cli
dec
lds
xor
cmp
jge
adc
iret
lahf
aas
ret
inc
ja
imul
roll
xor
push
mov
pop
out
ficoms
mov
or
inc
ss
inc
or
je
in
mov
pushf
ret
aaa
outsl
fiadds
std
inc
out
push
pushf
jg
repz
fwait
lcall
loopne
jne
mov
jns
xor
scas
rcl
pop
lock
inc
in
mov
aaa
mov
daa
pop
dec
push
mov
mov
cld
xorl
pop
xlat
jne
xor
std
push
mov
pop
jae
lods
js
or
jg
cld
xchg
pop
cmp
or
out
dec
dec
repz
lahf
mov
jae
pop
jg
outsl
arpl
cmp
sub
sbb
jbe
sahf
dec
mov
and
aas
mov
fdivl
push
mov
xchg
test
ds
cld
stc
repz
insb
jno
pop
fwait
xchg
std
push
int
ret
test
xchg
lahf
aas
jg
push
movsl
sbb
int
lds
pop
aaa
out
mov
xchg
daa
xchg
fidivl
fwait
arpl
inc
mov
repnz
xor
out
out
sahf
rcrb
fdivrl
or
jge
add
repnz
stc
inc
jg
outsl
sti
stos
mov
mulb
sbb
cld
stc
xlat
xlat
out
push
jmp
jb
sub
aas
jg
dec
or
add
shl
pop
jo
and
cld
stc
repz
test
jecxz
dec
stc
push
push
cmp
icebp
xor
jo
or
cmp
stc
repz
mov
mov
je
imul
aas
jg
cld
pand
and
jbe
and
ss
in
iret
lahf
sbb
lods
es
add
sti
cs
mov
jle
test
daa
xor
insb
loope
inc
xchg
xchg
push
enter
xor
scas
out
loop
inc
loop
sub
fidivrs
sbb
inc
jns
out
pop
int
aaa
outsl
cmp
inc
ds
loope
jmp
cld
stc
notl
movsl
daa
lret
adc
repnz
pop
push
or
loope
push
jb
dec
repz
testl
fidivrs
xchg
cmp
insb
scas
adc
pushf
add
loopne
fwait
aaa
lret
sub
jb
daa
dec
adc
sbb
repz
adcb
dec
push
imul
ficoms
inc
mov
ret
inc
jmp
jge
loopne
fwait
bt
movsb
dec
inc
mov
mov
scas
mov
int3
jle
jp
inc
into
sbb
fwait
aaa
outsl
das
fdivs
stos
repnz
push
mov
mov
sub
outsl
sbb
into
pop
jno
mov
inc
outsb
fdivrp
push
or
or
xor
int
imull
pop
pop
lret
fcompl
jg
arpl
out
xchg
iretw
lahf
aas
jg
xor
ja
sbb
sub
cld
stc
repz
xor
pop
lds
int3
sahf
and
push
repz
repnz
daa
pushf
cmp
mov
push
add
enter
iret
out
ret
jns
je
in
loopne
pop
mov
insl
fstpl
aaa
outsl
ficomps
jle
mov
stos
into
jns
out
xlat
xor
and
mov
push
pop
fnstcw
pop
out
xor
fwait
aaa
outsl
fimuls
mov
aam
adc
out
and
stc
mov
stc
jge
aaa
outsl
fidivrs
gs
arpl
cltd
adc
int
aaa
insl
jmp
aaa
inc
dec
stc
popf
add
fnstcw
xchg
repnz
sbb
jb
outsl
mov
in
es
das
lea
out
fwait
popa
std
pop
jns
and
jnp
pop
adc
lds
mov
xchg
mov
or
xlat
pop
lahf
scas
ja
add
sbb
xor
xorb
inc
mov
popa
mov
repz
adc
test
or
jl
cmp
mov
shrl
fdivrl
cmp
arpl
mov
mov
push
push
jno
sbb
dec
out
fwait
xorb
push
mov
jns
xchg
sbb
jb
adc
mov
stc
imul
sbb
nop
pop
lods
and
mov
cld
sbbl
in
fmull
mov
dec
cmpsb
fsubs
jg
push
sbb
mov
xchg
fidivrs
mov
mov
loopne
fidivrs
nop
mov
mov
pop
hlt
cmp
dec
pop
xlat
mov
jns
out
testl
mov
ret
fidivrs
sbb
lock
mov
ljmp
mov
pop
xor
popf
dec
js
aas
outsl
fidivrs
jle
jp
out
mov
push
out
fwait
aaa
popa
divb
add
outsb
adc
fidivrs
repnz
adc
shlb
dec
or
fwait
aaa
outsl
mov
pop
xchg
fimuls
movsl
aaa
mov
repz
mov
idiv
xor
cmp
lahf
aas
pop
in
jns
inc
loope
test
cld
stc
repz
jae
inc
mov
mov
or
and
jle
jecxz
mov
sbb
repz
jecxz
dec
sub
jnp
aad
into
aas
jg
cld
insl
stos
out
add
stc
hlt
xchg
out
lahf
aaa
xchg
pop
adc
daa
popf
outsl
fidivrs
ljmp
push
cmp
int
aaa
mov
pop
push
jns
std
push
jp
mov
out
shl
int3
mov
adc
mov
andb
or
out
mov
cmp
jmp
and
cmp
aas
shl
fs
int
fwait
aaa
outsl
sbb
fsub
gs
loope
mov
jns
out
imul
cmpsb
adc
push
mov
inc
mov
lahf
pushf
lods
fnstsw
insw
imul
repz
add
fldl
jle
lahf
aaa
outsl
fidivrs
test
mov
pop
subl
int
inc
cwtl
push
dec
and
pop
stc
cmp
in
inc
imul
add
sbb
icebp
mov
jge
add
inc
inc
push
mov
rol
cmp
mov
pop
aaa
test
xor
jns
iret
mov
out
push
sar
test
ficoms
xchg
cmpsl
hlt
push
jne
bound
shl
int
aaa
ljmp
int3
and
cmp
movsb
cwtl
repz
daa
loopne
bnd
aas
adc
dec
iret
pop
fmulp
fwait
aaa
outsl
mov
jbe
push
xor
test
and
mov
fwait
aaa
outsl
fidivs
movsl
cmpsb
xchg
in
mov
out
adc
mov
loop
push
inc
jl
inc
aaa
outsl
fidivrs
rorb
jns
test
or
out
fwait
push
into
mov
mov
jae
lds
js
mov
sbb
cli
leave
xchg
xlat
inc
push
iret
lahf
aas
fs
xchg
mov
or
fwait
bound
mov
out
mov
enter
hlt
iret
in
sbb
jns
out
stc
and
cmp
insb
jb
shrl
or
inc
outsb
fimuls
mov
fwait
mov
xor
lret
mov
jns
out
loopne
andl
mov
fsubp
hlt
jbe
int3
in
divb
sarb
loop
pop
jno
int
mov
jbe
lock
outsl
fidivrs
addr16
sbbb
jae
out
inc
ss
int
pop
sbb
cld
stc
repz
sbb
pop
pop
stc
sbb
sub
or
lahf
aas
jg
jo
dec
mov
mov
decb
int3
push
sbb
cmc
push
xchg
xor
aad
mov
mov
int3
push
push
cmpsl
xor
adc
aas
pushl
or
dec
in
mov
and
mov
movsbl
add
cld
ljmp
jb
pop
ret
fwait
aaa
repz
fcompl
add
and
aam
sub
xor
fidivrs
xchg
sub
int3
leave
out
adc
ljmp
scas
fnstenv
repz
mov
shlb
xchg
add
pusha
loope
cli
mov
int
aaa
sub
xor
loopne
enter
fidivrs
add
andl
imul
int
aaa
outsl
jp
xlat
sub
mov
mov
pusha
jle
bound
xor
ret
inc
movsl
inc
pop
frndint
lcall
mov
xor
aaa
lock
xlat
mov
stc
jne
mov
xchg
ljmp
pop
add
orl
outsl
sub
and
jmp
sub
daa
mov
jecxz
in
dec
sbb
les
in
xor
jl
fwait
aaa
outsl
fdivp
sbb
inc
xchg
push
jne
loopne
repz
jmp
mov
f2xm1
jnp
out
aad
insb
fidivrs
pop
pop
scas
enter
mov
xor
push
andb
mov
inc
aaa
addb
inc
sub
outsl
or
push
popa
pop
mov
mov
cld
stc
stos
jecxz
nop
lahf
ja
xchg
enter
adc
lods
and
pop
movl
push
xor
test
out
mov
jns
out
push
mov
and
lock
fidivrs
xchg
pop
xchg
push
inc
ret
inc
movsb
push
repz
fwait
mov
ret
js
outsl
lods
xor
jns
cmp
cld
hlt
dec
aad
iret
push
movsb
cmp
and
popf
in
cmpsb
xchg
add
push
les
outsb
xor
lahf
aas
jg
outsl
roll
test
jge
lods
sub
enter
loop
fisubrl
fwait
ja
mov
nop
cmp
adc
ss
ret
iret
mov
mov
push
inc
mov
xchg
gs
repz
ja
jp
insl
jle
and
pop
xor
bound
xor
pop
or
daa
adc
aam
les
mov
pop
out
lods
pop
in
jecxz
aaa
outsl
fimuls
jmp
cmp
js
xor
cmp
out
or
js
dec
fldt
mov
mov
outsl
fidivrs
sbb
out
dec
and
ds
xchg
int
mov
cmpsl
add
sub
xchg
fidivrs
sarb
cmp
aad
inc
outsl
lahf
ret
push
adc
inc
mov
dec
mov
cld
cmp
adc
notl
push
sub
enter
or
xchg
xor
rep
jbe
push
insl
test
cwtl
jp
aaa
outsl
fiadds
mov
or
xchg
pop
ficoms
or
out
out
ja
jae
mov
mov
dec
pop
in
aaa
outsl
fidivrs
cmc
movsl
inc
jg
orb
repz
fwait
dec
cmp
xchg
dec
or
push
insl
lcall
mov
gs
jb
out
aaa
outsl
fidivrs
dec
adc
outsb
stos
xchg
xchg
cmc
enter
sbb
bound
movsl
mov
neg
movsb
fwait
push
pop
sub
and
or
cltd
fcompl
aaa
out
mov
cltd
popa
mov
xor
and
out
mov
aas
pop
mov
les
lods
scas
aaa
outsl
fidivrs
add
shll
xchg
and
fwait
push
mov
rorb
pop
rorl
js
inc
mov
repz
sub
insl
scas
inc
cli
lcall
aas
jg
mov
sbb
adc
pop
js
es
jns
xor
lds
mov
lcall
push
push
arpl
movsl
push
leave
out
fwait
aaa
jnp
jb
hlt
fildl
nop
fidivrs
and
xchg
adc
dec
lods
push
xchg
inc
int
aaa
outsl
bound
frstor
mov
flds
jl
jns
out
into
nop
inc
outsl
inc
pop
loopne
lcall
push
pop
flds
mov
mov
aaa
ds
aas
repz
fwait
jne
arpl
mov
push
or
mov
out
pop
scas
repz
mov
sahf
lret
test
fwait
aaa
pop
mov
aas
test
fists
sbb
mov
mov
popa
xchg
mov
dec
jl
mov
fldt
dec
stos
xorl
lds
dec
mov
pop
sbb
mov
test
or
mov
jnp
mov
mov
iret
lahf
jg
jp
dec
xlat
lcall
push
mov
stc
repz
mov
je
sbb
jg
addr16
lahf
aas
jg
xor
fisubl
loopne
push
shrl
dec
arpl
stc
repz
adc
int3
int3
mov
testb
or
adc
sub
pop
pop
aaa
lds
xlat
xchg
and
testb
stc
pop
push
mov
cld
loope
fwait
jl
inc
outsb
xchg
and
cld
mov
movsl
pop
in
sahf
sbb
xchg
repz
lahf
pusha
inc
mov
jne
push
sub
jbe
idivl
cld
stc
push
adc
mov
fs
imul
aas
cmp
inc
sub
pop
dec
jp
test
pop
cld
stc
repz
popl
std
mov
pop
repnz
adc
jg
dec
mov
sbb
mov
inc
in
enter
bswap
sbb
mov
jp
cmp
xchg
popa
stos
sbb
out
lahf
push
out
jmpw
sbbl
add
stc
imul
inc
jle
mov
cwtl
pop
cli
add
scas
js
test
jg
add
sub
fildl
adc
leave
iret
das
loope
jnp
je
mov
jns
sti
mov
icebp
in
ficomps
pop
jmp
ss
cmp
and
cmp
pushf
xchg
pop
jl
pop
xor
fwait
aaa
outsl
fimuls
xor
xor
stos
js
out
lods
jmp
stc
jle
xchg
rcrb
inc
repnz
fsubrs
ret
mov
or
stc
repz
push
popf
leave
push
andb
mov
decb
movsb
add
mov
sahf
pop
loope,pn
repz
jecxz
out
dec
js
cwtl
fildll
ss
mov
adc
ljmp
mov
fmulp
dec
push
ret
lret
je
int
fs
lods
ret
adc
aas
jg
xlat
pop
and
sub
movsb
es
aas
sub
loop
js
scas
cwtl
movsl
jle
cli
sar
repz
xchg
pop
popf
test
es
iret
aam
and
cld
or
inc
ret
js
xchg
mov
pop
sbb
adc
and
outsl
sbb
ret
bound
shrl
mov
les
pushf
fidivrs
out
aaa
outsl
fdivrp
and
jmp
imul
jns
out
mov
or
pop
mov
push
and
mov
decb
clc
jns
cs
out
mov
shrl
fidivrs
mov
sbb
cld
add
adc
int
aaa
outsl
es
mov
mov
movsb
iret
shll
mov
jns
out
ja
out
mov
mov
data16
outsl
ficoms
fistpll
lods
jae
scas
jb
repz
fwait
outsb
loopne
pushl
jb
shll
call
mov
imul
ficoms
adc
cmc
push
jmp
inc
xchg
lret
xchg
inc
xor
pop
xchg
xchg
cld
sub
mov
aas
popf
mov
pop
out
test
call
ss
out
pusha
out
imul
pop
mov
mov
sub
xlat
xor
push
fnstcw
adc
and
push
out
cmpb
aaa
rcrl
ret
int
aaa
mov
adc
inc
sub
xchg
sbb
pop
fidivrs
sti
or
lea
std
dec
dec
xchg
pop
stos
int
aaa
outsl
add
das
dec
dec
xor
mov
xchg
xchg
inc
cmp
and
jnp
roll
stos
pop
loopne
lret
loop
repz
fwait
aaa
add
dec
notb
and
fimull
jle
mov
cmp
adc
xchg
inc
mov
ds
jg
cld
stc
repnz
repz
jg
inc
test
ljmp
fcoml
inc
mov
jae
test
or
outsl
inc
jmp
repz
push
mov
xor
lahf
jp
out
sbb
stos
test
pop
fistpll
cli
pop
repnz
fs
lods
inc
pop
dec
mov
cmp
idiv
aam
lret
mov
out
and
mov
jge
pop
pop
test
xor
xchg
roll
in
aaa
out
out
repz
sbb
cmpsb
out
xchg
xor
and
test
mov
fsubrs
fwait
jae
pop
sub
rcll
xlat
pop
xchg
mov
movsb
xchg
adc
push
cltd
jg
push
and
fwait
aaa
clc
mov
fstpt
out
fwait
ja
push
out
sarb
lret
aaa
sub
fidivrs
test
stos
arpl
lret
xorl
adc
int
cmp
mov
mov
push
adc
pop
lahf
lods
add
jp
fwait
aaa
outsl
fidivrs
lret
js
aam
addr16
jns
out
insb
pop
insl
jno
fidivrl
dec
fwait
mov
outsl
fidivrs
cltd
clc
repnz
cld
stos
or
push
rcrb
iret
cltd
out
lahf
aas
aam
iret
cmp
lds
cld
stc
repz
cmc
or
jg
std
jl
pop
jns
adc
aas
jg
int
adc
cmp
in
dec
mov
jne
xor
repz
jo
fisttps
xchg
jns
push
shl
ds
scas
and
push
nop
jg
cld
stc
cmc
cmpsl
pop
and
lods
dec
rcll
dec
push
jns
mov
sbb
lods
xlat
jbe
jle
mov
or
push
mov
jp
push
out
fwait
aaa
lret
neg
aas
jge
xor
jns
clc
sbb
sub
xchg
lods
dec
mov
outsl
aaa
test
and
ja
push
jns
out
cwtl
pop
adc
push
xchg
jno
and
imul
fwait
aaa
outsl
fisubs
pop
jns
xor
incl
daa
das
jns
out
xor
subl
add
repnz
adc
inc
fwait
int3
mov
aad
mov
pop
xlat
lods
ljmp
aas
cwtl
push
push
insl
addr16
shl
test
mov
enter
insb
movl
mov
subl
roll
push
and
int
aaa
adcb
lds
shrb
test
out
andl
lds
aaa
outsl
and
xchg
push
cmc
mov
jns
out
sub
lods
test
arpl
outsl
faddp
jle
gs
jbe
cs
sub
lahf
dec
je
out
test
sub
xchg
enter
lahf
dec
in
mov
scas
cmpsl
pcmpgtd
mov
cld
stc
jge
lods
push
ficoms
adc
xor
std
in
add
mov
out
insb
ficoms
es
inc
das
fs
or
jg
addr16
ret
or
inc
mov
repz
hlt
mov
xorb
and
setp
aaa
add
xlat
xlat
lret
setg
pop
push
call
test
dec
mov
pop
mov
mov
lds
sbb
repz
lahf
enter
xlat
out
loope
and
push
inc
dec
jg,pt
pop
leave
es
imul
scas
out
aaa
fbld
push
jg
cmp
cmpsl
pop
ds
orb
jae
xor
out
lahf
aas
test
jmp
jecxz
jecxz
mov
adc
repz
xor
out
lahf
push
shl
lods
mov
pop
fnstcw
std
lock
int
aaa
inc
dec
gs
push
jns
in
mov
out
cmpb
dec
inc
sbb
aaa
outsl
fmulp
lcall
add
repz
rcrb
jo
iret
jl
aaa
and
mov
es
idivl
cli
xor
sbb
daa
stc
repz
das
das
gs
lahf
aas
jg
mov
lock
adc
ss
stc
repz
rolb
fcoms
insb
cltd
sbb
js
aas
jg
popf
and
dec
lret
sbb
pop
es
jg
rorb
addr16
test
pop
pop
jg
cld
mov
fdivp
aas
lea
xor
lahf
aas
push
negb
lret
aaa
inc
mov
cld
stc
repz
es
sar
xor
sub
lock
mov
scas
xor
jns
out
mov
rorl
xchg
sbb
fs
outsl
fidivrs
fst
out
in
jg
dec
add
cwtl
pop
enter
test
xrelease
call
jg
add
jns
scas
daa
faddl
fcomps
ficompl
int
lcall
movsb
ret
dec
cld
jecxz
lret
mov
adc
ds
ss
test
jle
nop
xchg
jmp
cmp
repz
push
popf
insl
push
insb
mov
lds
sub
mov
or
sub
repz
dec
pinsrw
sub
arpl
jg
inc
cmp
xor
loopne
pop
ja
cli
cmp
mov
ds
dec
dec
mov
xchg
inc
mov
lahf
aas
inc
mov
data16
out
pop
push
mov
xor
mov
insb
outsb
sub
ds
jg
in
sbb
sbb
fcomps
outsl
ficoms
lock
in
sub
out
fwait
aaa
int3
cmpsb
mov
jmp
jp
repz
xchg
xchg
mov
mov
cvtps2pi
xlat
pop
mov
popa
jae
clc
cld
stc
repz
insl
popa
in
test
lock
iret
lahf
aas
jg
pop
xor
fldenv
cld
stc
repz
push
xchg
and
adc
inc
mov
jg
bound
mov
les
lods
stc
repz
xor
mov
mov
aas
jg
cld
add
mov
outsb
inc
fprem
adc
jecxz
push
adc
pop
sahf
shrb
cmpsl
mov
xchg
ss
xlat
pop
fdivl
enter
jns
lcall
ds
xchg
xchg
mov
and
mov
jg
iret
lahf
mov
push
jbe
es
jg
testl
or
stc
stos
hlt
or
adc
aaa
pop
xchg
jbe
sbbl
cmp
clc
out
cli
leave
dec
int
aaa
outsl
add
inc
inc
pop
or
loope
out
xchg
add
sbb
lds
movsb
and
fwait
ja
jl
inc
loop
xchg
leave
adc
jns
out
ljmp
shlb
movsb
lahf
in
shl
out
mov
push
push
cmp
push
and
push
mov
int
push
rolb
mov
out
sbb
ss
xchg
lds
aad
hlt
outsl
fidivrs
js
aaa
jno
movl
or
int
aaa
testb
je
inc
jg
jge
cli
pop
adc
fs
lds
aas
imul
fdivrs
sub
sti
repz
adc
or
xor
jnp
mov
mov
in
pop
jp
dec
add
imul
repz
mov
pop
jns
mov
loopne
outsl
testb
sub
pop
xchg
ja
repz
push
xchg
pop
ret
add
and
mov
loope
push
lea
andb
jns
cs
iret
jne
out
addr16
cmc
aaa
outsl
fidivrs
sub
fxch
jns
test
loope
les
push
int
xchg
test
cmc
dec
loope
fnstsw
je
fidivrs
mov
cmp
adc
negl
int3
sahf
mov
mov
pop
ss
xchg
mov
xchg
aaa
outsl
or
loop
stc
stos
jg
mov
repz
fwait
in
loop
and
cmp
cld
movsb
jns
repnz
sti
imull
mov
fsubl
sub
repz
mov
stc
jp
pop
pop
sub
sub
dec
xchg
adc
inc
cld
stc
repz
inc
and
add
js
sub
inc
loopne
outsb
fdivrp
mov
testb
fidivrl
stos
aaa
outsl
test
fists
mov
adc
in
int
sub
jl
cmp
sbb
add
js
mov
scas
push
inc
fwait
aaa
outsl
faddp
gs
aad
cmpsb
mov
push
mov
out
lds
and
ret
addr16
aaa
outsl
and
test
dec
mov
xor
call
mov
cltd
inc
sbb
add
pop
inc
outsb
fidivrs
aad
aas
push
or
fwait
aaa
push
cld
xor
rorl
jns
out
jl
adc
popa
and
mov
push
icebp
add
pop
clc
push
cmpsl
or
cmp
cld
sbb
cmp
sbb
out
fwait
aaa
iret
push
addr16
aas
mov
sbb
loop
mov
push
fisubrl
inc
outsl
pop
jnp
push
inc
or
in
mov
popf
jo
inc
mov
sbb
cwtl
or
and
ret
sub
pop
add
int
or
out
inc
incb
addr16
add
lret
test
lea
stc
stc
addr16
test
rsm
sub
mov
adc
ljmp
aaa
push
aad
popf
mov
call
fidivrs
adc
jg
add
cmp
int
aaa
outsl
lods
scas
fucomp
icebp
arpl
adc
jns
out
loopne
mov
push
inc
dec
xor
push
fwait
mov
fisubs
jmp
shlb
insb
cmp
lret
in
daa
int
ja
pop
fwait
mov
dec
out
aas
jg
cld
aad
cmp
in
sub
dec
idivb
iret
lahf
pop
mov
cmpsl
adc
jle
cld
stc
enter
sub
lcall
insl
inc
test
scas
pop
jecxz
pop
shlb
push
sti
cld
jp
outsb
test
cld
fsts
pop
mov
scas
inc
test
push
mov
aas
jg
cld
jle
rclb
inc
ret
push
jecxz
pop
mov
lahf
cmp
jno
add
mov
add
push
sub
arpl
inc
es
jns
push
xchg
or
cwtl
cmpb
mov
sbb
leave
testl
pop
pop
add
out
shll
loop
add
jb
adc
push
fcomp
sub
jecxz
xchg
fidivrs
cmp
out
adc
push
inc
fwait
add
bound
inc
jns
mov
aaa
mov
outsl
mov
lock
inc
mov
fdivrp
cli
cmp
jp
dec
jno
ret
rcll
iret
mov
les
negb
fldl
and
outsl
fiadds
pop
in
adc
mov
repz
imul
mov
sub
jp
add
outsl
fidivrs
dec
out
xchg
aaa
cli
sbb
xchg
out
fwait
push
addb
xchg
push
and
test
mov
pop
ja
shll
jg
cs
sbb
int
aaa
loopne
repnz
addr16
jp
bound
stc
or
push
cs
nop
push
js
sahf
add
int
aaa
outsl
iret
pop
lea
arpl
inc
loop
sar
mov
and
lods
xor
sahf
das
and
inc
outsl
fidivrs
xchg
dec
call
jns
aad
push
ja
inc
ret
pop
mov
fwait
aaa
outsl
ficoms
mull
sub
mov
int
pop
and
add
bt
das
sti
out
lahf
aas
mov
std
data16
push
lret
daa
mov
repz
pusha
shlb
pop
push
sbb
xchg
rclb
dec
iret
lahf
aas
jg
loop
icebp
movsb
ret
xor
mov
cld
stc
repz
jle
xchg
adc
dec
addr16
imul
aas
jg
ret
ja
and
push
jns
out
stc
repz
scas
pop
pop
push
in
movsl
dec
sub
and
aad
cmpb
cld
jae
hlt
push
gs
add
icebp
xchg
mov
repz
lahf
das
popf
adc
sahf
movsl
shrl
cld
stc
inc
sub
mov
sub
iret
lahf
aas
out
mull
jecxz
dec
popf
fsub
addr16
and
repz
sti
pop
fnstsw
mov
orb
aaa
push
xor
scas
pop
jge
rep
scas
cmp
pop
jb
dec
out
ja
ds
xor
sub
pop
inc
lahf
cld
stc
repz
stos
pop
aam
gs
push
and
jns
xchg
ja
xchg
cmp
int3
push
dec
mov
pushf
mov
shll
dec
das
mov
sub
imul
jg
cld
adc
sub
mov
push
jnp
out
lahf
mov
sub
push
add
xor
dec
pop
fidivrs
jp
and
ficoml
adc
or
hlt
out
lahf
aas
mov
subl
cld
stc
repz
xchg
and
mov
aaa
sub
xor
mov
aas
jg
roll
and
outsl
cld
stc
repz
push
sbb
shr
jns
cmp
jo
jbe
lahf
aas
jg
xor
sbb
sbb
push
xchg
xchg
or
adc
pop
int3
js
dec
loope
bound
inc
jle
cld
das
lods
insb
shlb
dec
sub
push
rolb
cmp
mov
iret
outsl
fiadds
and
daa
mov
fdivrl
cmp
aaa
out
iret
or
adc
xor
out
mov
iret
lea
or
notl
fldl
pop
pop
hlt
fdivs
jno
int
jnp
js
jno
xorl
mov
cmpsl
fsubp
sub
movsl
lret
jmp
outsl
fidivrs
lock
mov
pop
fdivrl
fwait
aaa
lret
or
inc
pop
cmpsb
lahf
xor
fstpl
or
mov
adc
fwait
aaa
out
stos
rol
lea
inc
dec
cmp
ljmp
sti
pop
fldcw
or
shlb
pop
leave
aam
daa
cmp
xor
xchg
adc
scas
or
pop
iret
in
ss
cmp
mov
jge
xchg
add
xor
lahf
jg
adc
test
movsb
into
insb
into
cmc
stc
stc
repz
inc
xchg
es
aam
out
sbb
mov
les
ja
popf
sysenter
adc
push
and
decb
sub
stc
dec
fiadds
jnp
outsl
ficoms
lds
movb
and
fwait
ljmp
movsb
xlat
out
inc
adcl
out
xor
int3
jb
adc
push
and
xchg
aaa
outsl
fisubs
dec
pop
mov
push
arpl
stos
push
jo
mov
cld
stc
loopne
fstpl
and
mov
jns
outsl
push
pusha
pop
std
arpl
add
sbb
int
fisubl
adc
fwait
pop
push
ljmp
call
jae
fwait
iret
xlat
aaa
outsl
fidivrs
insb
inc
rcll
out
cmp
fwait
movsb
mov
jg
xchg
jg
sbb
xor
push
rolb
int
orb
stos
stos
imul
daa
addr16
cmp
movsb
jge
cmc
mov
aam
jae
pushf
cld
stc
ret
dec
lahf
ss
pop
mov
or
mov
inc
mov
das
xchg
test
aas
aas
jmp
lds
lea
cmp
jp
add
push
outsl
ja
sbb
out
adc
add
lcall
mov
xchg
adc
mov
mov
mov
pop
adc
fwait
leave
jo
sub
or
rorb
std
movb
loope
adc
pop
inc
shll
pop
cmp
out
das
imul
inc
rolb
adc
jmp
sahf
pop
sahf
out
fwait
ja
stc
ret
add
sub
mov
repz
cmpsb
pop
pop
idivb
clc
addr16
insb
pop
rcl
mov
inc
or
das
scas
repz
test
rep
cmpsb
push
notl
fidivrs
push
out
pop
cmp
cwtl
inc
arpl
int
aaa
adcb
sbb
jo
test
loope
inc
loopne
pop
daa
imul
xor
inc
cs
repnz
insb
fiadds
pop
push
sub
xor
and
out
push
pushf
mov
cmp
and
jae
icebp
jo
cld
stc
repz
lss
sub
ja
or
mov
mov
repz
push
mov
pop
dec
leave
subl
aas
jg
std
xchg
xchg
or
out
and
out
dec
pop
jns
out
dec
add
in
sub
push
sarb
aaa
outsl
fidivrs
push
test
sbb
outsl
stos
dec
test
lods
add
icebp
cmp
fs
sbb
pop
mov
mov
fidivrs
jg
cli
pop
cli
cld
imul
rol
lahf
jg
sub
jmp
mov
dec
in
cs
fdivs
ss
push
mov
std
dec
test
mov
int3
fwait
aaa
outsl
ficomps
repz
ljmp
sub
add
repz
jecxz
cs
in
outsl
xchg
inc
cmpsl
in
and
mov
lret
mov
es
sbb
xor
test
jns
cmc
enter
dec
in
jge
sbb
inc
outsl
fimuls
stos
mov
dec
lods
loop
cmpsl
test
pop
rcl
pop
pop
jbe
adc
fidivrs
adc
jb
jnp
pusha
fmul
jmp
loop
fwait
aaa
imul
ja
and
mov
xchg
cmp
in
inc
lahf
sbb
adc
imul
push
push
cli
xor
int
aaa
cmpsb
cmp
dec
lock
jg
adc
sti
sub
scas
or
aaa
outsl
add
rolb
mov
xchg
fists
jns
out
sbb
jl
test
fwait
aaa
outsl
fisubs
ret
jp
pop
movsb
mov
pop
or
out
ljmp
in
jl
mov
adc
xor
arpl
xor
int
xor
mov
scas
lahf
aas
jg
incl
into
iret
pop
adc
mov
pop
stc
repz
pop
mov
sarl
dec
lret
cld
add
outsl
mov
orl
mov
mov
ljmp
push
repz
mov
cld
stc
mov
ret
aad
push
xor
imul
or
aas
mov
in
cmc
lods
pop
ljmp
movsl
push
lods
les
repz
testl
jno
enter
ficomps
sub
pop
rorb
fwait
aaa
adc
aam
push
pop
xchg
mov
orb
jb
orl
outsl
fidivs
loop
mov
out
add
repz
jo
or
loop
cwtl
pop
pop
fstl
fidivrs
and
fistps
sahf
imul
ljmp
sub
jmp
mov
add
mov
lcall
adc
mov
or
mov
dec
in
sub
bound
sub
repz
dec
mov
xor
jns
sub
jb
dec
mov
stc
ret
inc
ss
es
lods
out
xchg
nop
leave
aas
jg
cld
cs
pop
jno
cmp
add
mov
out
lahf
pop
or
inc
stc
mov
xchg
cmp
in
and
fwait
xchg
rorb
out
mov
and
sub
cmp
jg
cld
mov
bound
push
push
scas
sti
adc
lret
iret
lahf
ljmp
in
lock
cld
stc
stos
pop
cmpl
jp
mov
in
lahf
aas
shlb
push
xrelease
push
lds
xor
pop
outsb
sbb
add
push
mov
das
mov
cs
jecxz
stos
out
jne
sub
sub
aaa
outsl
fisubrs
xor
imul
sbb
sarb
out
ss
lock
roll
add
fidivrs
daa
add
push
out
fwait
push
xchg
mov
dec
imul
call
jns
pusha
test
pop
fidivrl
int
aaa
aaa
je
add
or
je
mov
aaa
xchg
pop
in
xchg
cmp
sti
ret
int
aaa
outsl
mov
std
sub
aas
call
mov
mov
or
or
dec
fwait
aaa
outsl
fisubs
mov
pushf
insb
sbb
pop
shll
fs
pop
xchg
in
sbb
jb
sub
push
xchg
js
mov
dec
out
aas
jg
cld
inc
push
push
fwait
adc
jmp
mov
out
lahf
dec
les
icebp
pop
shll
pop
jg
cld
stc
or
jp
imul
lahf
aas
pop
sahf
aas
xchg
negl
stc
repz
pop
rep
pop
rcrb
enter
lret
cld
pop
js
clc
stc
call
push
cbtw
ss
adc
es
dec
addr16
movsl
inc
sti
xor
jg
stc
cmpsb
pop
fsts
addr16
sub
iret
lahf
add
inc
out
aaa
negl
pusha
and
stc
inc
pop
icebp
andl
out
xchg
sub
jle,pn
pop
mov
xor
sbb
mov
fwait
addr16
aaa
outsl
fdivrp
js
mov
dec
in
dec
cs
int
or
outsb
or
mov
push
jns
aad
int
aaa
outsl
inc
cwtl
bound
pop
mov
jns
out
cmc
mov
xchg
cmp
jb
mov
ficoms
lcall
ds
mov
sahf
mov
shl
movsl
mov
aas
cli
in
jo
lahf
aas
jg
movsl
push
pop
mov
pop
aaa
jno
loopne
jae
repnz
xchg
pop
jg
sbb
xor
lods
push
js
js
xacquire
sbb
dec
mov
les
pop
mov
cld
inc
cmpsb
cmpb
jg
shll
out
loopne
pop
ds
repz
lahf
scas
outsb
cmp
jle
xchg
push
push
mov
jg
cld
push
adc
popa
int
jle
lods
xor
shl
out
lahf
dec
inc
movsl
es
notl
mov
push
gs
aas
jg
lds
das
insl
add
cmpl
fwait
stos
repz
lahf
testb
fidivrl
stos
or
stc
jno
mov
test
in
pop
cld
ds
aas
or
les
xor
movb
inc
inc
mov
and
icebp
xor
fnstsw
cli
cmp
jg
test
fsubp
arpl
dec
jge
outsl
cmp
cwtl
mov
out
enter
outsl
lock
pop
movsb
das
jb
scas
sbb
iret
pop
xchg
or
pop
lcall
add
cld
stc
and
insl
dec
out
and
ret
push
insl
xchg
and
loopne
fwait
jns
out
aaa
sti
sbb
shlb
icebp
sahf
int3
cs
dec
decb
fidivrs
sbb
enter
aaa
out
mov
rorl
xchg
jns
out
in
lcall
or
outsl
fidivrs
and
cltd
xchg
lret
mov
fwait
mov
fists
or
aaa
push
rorl
cmpsb
add
lahf
pop
or
pop
arpl
cld
cld
stc
test
fsubrl
pop
lods
adc
push
xchg
outsl
stos
pop
stos
scas
and
xchg
int
aaa
fwait
cmpsw
push
cmc
jae
inc
inc
dec
notrack
aad
pop
das
jge
mov
movsb
push
cld
stc
roll
xchg
movsl
mov
mov
mov
aas
jg
and
sub
cmc
dec
and
inc
das
sbb
push
jecxz
mov
aaa
outsl
stos
mov
mov
enter
sub
sub
xchg
add
shlb
cmp
aaa
outsl
fidivrs
mov
test
jnp
out
jle
int
mov
addr16
mov
repz
sbb
sbb
xor
sti
pop
fsubl
aaa
outsl
fmulp
dec
insb
cmp
mov
xlat
push
pop
mov
cltd
jns
out
cmp
or
lods
push
add
fidivrs
lds
push
jp
sub
in
int
pop
mov
jg
push
decb
mov
call
jp
leave
ja
jne
aam
jae
out
adc
pop
or
into
out
sub
aaa
xchg
xchg
aad
xchg
mov
mov
mov
ljmp
sahf
subl
outsl
fidivrs
sahf
scas
cli
inc
clc
cld
inc
in
xchg
call
push
into
pop
add
das
jbe
iret
lahf
aas
jg
xlat
xchg
mov
fxch
push
imul
stc
sti
leave
out
stc
mov
bound
cmpsb
or
in
push
pop
out
mov
xor
xchg
xor
fstpl
mov
adc
lcall
cmp
iret
mov
out
dec
mov
daa
cmp
lock
adc
lahf
int
out
repz
lahf
add
and
cmp
inc
push
daa
jg
cld
stc
and
ljmp
inc
mov
sub
out
lahf
aas
and
in
int3
pusha
jecxz
lret
stc
repz
fistpl
sbb
fs
test
or
xchg
daa
mul
pop
xchg
xor
cmp
out
leave
mov
shll
mov
xchg
mov
inc
sub
divb
pop
aad
aaa
xchg
fmull
mov
repz
fs
push
or
pop
jg
xlat
je
aaa
outsl
fisubrs
int
xchg
dec
aas
ja
mov
jb
out
test
aas
sbb
xchg
test
sub
mov
ds
push
fisubs
add
es
stc
xor
sub
mov
repz
dec
pusha
jns
repz
cmp
fnstcw
out
lret
dec
loopne
int
aaa
xchg
sbb
or
scas
out
fidivrs
jg
gs
out
test
xor
int
aaa
outsl
rcrl
movsb
jmp
mov
sbb
xchg
pop
fwait
out
or
repnz
dec
cmpsb
inc
bound
imul
test
and
jne
aaa
repz
lahf
rorb
stos
jno
jno
pop
fsubr
leave
lcall
add
or
clc
dec
jecxz
sbb
ror
fwait
aaa
outsl
ss
push
fnsave
mov
push
pop
call
sarb
bound
aaa
outsl
fiadds
xor
stc
sbb
xchg
std
popf
jns
out
outsl
popa
xchg
lods
mov
jecxz
rorl
outsl
fidivrs
jge
xchg
inc
lods
lcall
int
or
shrl
jb
jns
push
clc
dec
nop
mov
orb
xor
int
aaa
outsl
bound
movsb
pop
test
out
fnstcw
in
loopne
in
outsb
loope
mov
out
imul
outsb
rcrb
push
mov
mov
jle
repz
jecxz
fsubrl
int
inc
cld
fwait
movsl
imul
outsl
fidivrs
pop
dec
aaa
cmc
add
lock
mov
fwait
push
int
fisttpl
insb
aas
outsl
fidivrs
adc
call
mov
int
aaa
xchg
sub
cmp
fs
push
inc
push
mov
mov
rcrl
or
int
aaa
outsl
ss
imul
cld
stc
test
sbb
jb
mov
sub
in
cmp
lret
outsl
cltd
fdivr
stc
repz
daa
lods
sub
test
push
lahf
aas
jg
mov
and
mov
repz
aad
mov
out
mov
out
jno
or
mov
push
stc
aas
jbe
push
in
dec
addl
pop
fsubrl
cmp
aaa
outsl
fidivrs
cmp
add
and
loopne
fwait
lods
push
jno
jge
loopne
fwait
aaa
out
pop
jb
insl
cmp
test
sub
mov
push
rcll
sarb
pusha
fwait
aaa
outsl
faddp
lret
push
out
loopne
imul
movsl
dec
repz
out
jbe
mov
mov
aas
jg
xor
fucom
add
mov
or
repz
mov
inc
addb
jmp
xor
ljmp
mov
ds
push
fildll
hlt
cmpsb
int
aaa
out
jg
cli
lcall
mov
scas
cmp
das
insl
sahf
in
or
insl
fidivrs
sub
shl
dec
repz
insb
ljmp
int
enter
cld
stc
js
jmp
shlb
jns
sub
aas
mov
lcall
push
pop
add
out
and
cmpsl
cltd
mulb
lahf
aas
jg
cmpsb
repnz
mov
addr16
iret
cmpsb
dec
mov
nop
xchg
rcrb
dec
int3
aas
jg
cld
outsl
ret
mov
add
dec
push
mov
out
lahf
cmp
bound
xchg
pop
popf
jp
cld
jnp
jmp
or
sub
dec
pop
notrack
ja
out
dec
sbb
cmp
cmpsl
das
pop
cs
lahf
mov
sahf
pushf
pop
lods
sub
out
inc
movsl
xchg
xlat
sti
fwait
aaa
outsl
fiadds
push
std
movb
dec
outsb
mov
cltd
mov
mov
sbb
test
aaa
outsl
fidivrs
out
test
in
pushl
mov
xchg
int
or
or
pop
pop
mov
jg
cld
stc
push
push
push
add
lret
jns
cmp
add
iret
lahf
aas
mov
xor
push
sub
push
imul
rcll
push
xchg
or
fiadds
inc
jl
add
mov
repnz
lahf
dec
out
sbb
enter
sbb
in
push
and
pop
mov
pushw
jne
inc
mov
adc
out
sbb
adc
das
jle
xchg
dec
cld
stc
repz
std
pop
je
repz
lock
jle
sahf
push
cld
stc
repz
add
jnp
mov
loop
push
ret
aas
jg
daa
int3
cld
pop
pop
xchg
das
and
out
mov
enter
imul
jmp
jae
fwait
aaa
outsl
ficomps
or
mov
in
sub
jge
jns
out
pop
cmc
je
fcomps
aam
or
pusha
xor
loope
mov
lahf
stos
sbb
cli
dec
shrb
out
lods
jp
stos
out
out
jg
mov
mov
add
repnz
jl
jle
out
mov
sub
cltd
lret
out
imul
dec
push
xchg
repz
jne
ror
aad
and
pop
test
aas
jg
ret
or
sub
xchg
push
stc
repz
lahf
test
jo
rolb
dec
out
or
lods
addb
out
out
xchg
lcall
and
xchg
das
jb
lret
sti
mov
repz
fisubrl
ja
sub
das
sub
fidivrs
mov
and
les
push
mov
sbb
pop
push
add
ja
lahf
inc
les
mov
and
repnz
movsb
imul
clc
fwait
aaa
outsl
sub
lds
lahf
and
shll
cmp
ja
test
lcall
xchg
aas
inc
ret
out
add
in
in
and
dec
jns
out
lods
outsl
xchg
pushf
jno
pop
hlt
xor
or
outsl
fidivrs
jle
adc
or
lock
int
mov
adc
int
ja
outsl
dec
leave
and
fwait
sub
imul
in
das
out
outsl
scas
cmpsb
out
fnstcw
xchg
aaa
outsl
fidivrs
lret
cmc
sti
pop
sti
mov
lret
lahf
xchg
lds
scas
out
movsl
fwait
cmp
mov
mov
repnz
xlat
jns
jns
shll
adc
xlat
js
aad
repz
loop
mov
adc
arpl
outsl
fidivrs
and
jnp
jp
out
loope
cmp
mov
jge
repz
frstor
loopne
aas
push
dec
and
mov
add
jg
jo
mov
flds
inc
das
add
clc
in
addr16
sbb
inc
loopne
lahf
xor
and
out
daa
lea
push
push
pop
repnz
in
xchg
ja
lods
mov
or
fwait
ja
push
push
outsl
cwtl
cmp
dec
test
cld
pop
stos
jle
lahf
mov
mov
aas
jg
xor
adc
roll
sbb
pusha
in
lret
sbb
lcall
pop
pop
mov
repz
out
movsl
idiv
mov
adc
sahf
aas
jg
push
jge
cmp
gs
inc
add
iret
pop
pop
mov
push
jmp
cld
stc
repz
xchg
mov
or
push
outsb
fsub
aam
aas
jg
div
adc
in
imul
out
fwait
aaa
mov
pop
mov
leave
dec
movsb
add
repnz
pop
push
xchg
sub
outsl
ficoms
jns
shll
hlt
dec
mov
mov
cwtl
clc
xor
std
test
sbb
repz
test
stc
mov
fiadds
int3
lods
or
mov
fcomip
cld
scas
mov
and
jns
adc
repnz
ja
adc
mov
iret
pop
cmp
cvtdq2ps
inc
jle
cld
mull
cmpsl
es
add
mov
push
or
pop
mov
lahf
aas
xor
xlat
je
push
hlt
dec
dec
aas
cld
stc
repz
aas
push
outsb
test
aaa
movsb
lcall
iret
lahf
aas
jg
jo
iret
fwait
mov
aaa
xchg
jb
jnp
cld
stc
repz
addl
int3
daa
pop
xchg
push
push
repz
loop
adc
stc
pop
jg
or
sbb
fbld
aaa
outsl
push
jmp
sbb
loope
pop
aad
stc
repz
push
and
popf
cmp
rclb
mov
jl
ret
and
push
out
mov
fcompl
cmp
aas
jg
dec
dec
adc
inc
mov
xchg
mov
repz
jne
adc
sbb
or
or
aaa
outsl
fisubrs
jge
std
xor
mov
dec
rclb
outsb
inc
loopne
sub
jb
adc
and
mov
dec
mov
icebp
add
fstp
mov
out
fcompl
in
mov
sti
fwait
sbb
jg
cld
stc
outsl
inc
sub
sysret
cli
mov
jnp
pop
adc
aas
stos
push
sbb
cmpsl
inc
adc
jg
icebp
out
sbb
jl
jnp
xchg
push
std
repz
lahf
cmp
add
test
ret
sahf
fsubl
out
or
cld
stc
jle
mov
lock
in
lea
outsl
xor
aas
xor
fdiv
aad
sbb
mov
cld
stc
repz
inc
push
push
mov
icebp
fiadds
bound
lahf
jg
imul
lahf
push
adc
ljmp
sahf
adc
sbb
dec
and
mov
test
and
and
push
ds
int
aaa
add
divl
hlt
jb
mov
adc
sub
jmp
push
push
adc
iret
neg
dec
lds
inc
pop
in
scas
ss
adc
fwait
jmp
pop
fldenv
cmc
push
xchg
mov
push
mov
pop
hlt
push
int3
or
out
jg
daa
cltd
xor
inc
in
adc
mov
movsb
mov
pop
pop
push
add
mov
jo
sub
add
add
stc
stc
or
fs
pop
sbb
cld
inc
out
jp
int3
push
mov
jmp
fwait
ja
mov
das
fisttps
lock
bound
cld
or
or
push
and
aas
jmp
sbb
fmuls
lahf
lea
repz
jns
sbb
xchg
mov
repnz
inc
insb
pop
shl
loopne
jmp
inc
lcall
shlb
iret
movsl
cld
stc
repz
push
lea
jmp
push
mov
decb
jp
sbb
iret
dec
orb
or
dec
jo
enter
inc
sbb
pop
mov
or
nop
add
mov
fisttpll
orl
out
cmp
inc
ret
push
je
enter
or
xorl
jle
xchg
jne
cltd
push
cld
stc
enter
rcll
dec
mov
int3
mov
add
jbe
lods
mov
jbe
movsl
lret
pop
adc
sbb
int
mov
or
js
fidivrs
or
ret
loop
add
sti
int
aaa
outsl
inc
cmc
dec
lret
push
push
pop
popf
pop
cmp
orb
out
cmp
fstpt
divl
dec
jo
xchg
je
aaa
outsl
fimuls
ja
cmc
dec
add
jb
cmpsb
js
out
aam
aad
daa
sbb
mov
jle
outsl
sub
xor
scas
test
xchg
jbe
xchg
ds
jns
cmpsb
jp
dec
inc
sbb
sub
aaa
outsl
fidivrs
or
or
adc
in
fbld
cmc
sbb
jl
fistps
pop
out
jmp
mov
outsb
outsl
mov
xor
mov
iret
xchg
sub
mov
das
mov
inc
aam
sbb
mov
jl
adc
lock
int
scas
dec
test
sahf
fmuls
sbb
dec
fidivrs
xor
push
in
iret
stos
sub
xchg
add
movsb
fidivrs
sar
loope
data16
int
aaa
outsl
divb
mov
mov
xchg
ret
xchg
es
iret
lahf
jg
sbb
out
push
pop
data16
sbb
repz
mov
je
sahf
movsl
lods
pop
fiadds
stos
lahf
jl
xor
xchg
imul
push
pop
fidivrs
dec
aad
mov
iret
lahf
aas
popf
cli
out
scas
in
aad
arpl
fwait
jns
repnz
sbb
fwait
mov
mov
xchg
lds
xlat
xchg
bnd
cld
jecxz
lret
push
jne
mov
mov
sahf
aas
jg
imul
mov
jnp
fidivrs
and
dec
repnz
jb
mov
and
cwtl
fbstp
adc
aaa
xchg
nop
mov
inc
sbb
sahf
ret
inc
loop
add
out
mov
or
nop
outsl
ficoms
jg
bound
and
int
aaa
loopne
inc
mov
lret
fidivrs
adc
xor
lock
mov
fwait
aaa
outsl
lea
mov
outsl
sarl
addr16
dec
repz
cmc
jne
movsb
push
cmc
pop
or
sbb
outsl
fidivrs
cmp
inc
xor
je
pop
xchg
int
lahf
aaa
leave
notl
cmp
xchg
gs
pop
stc
jns
mull
pop
fst
stc
inc
inc
sub
shlb
sqrtps
mov
cli
fsubp
pop
mov
enter
stc
stc
repz
push
out
xor
lods
clc
sarl
movsl
icebp
push
iret
lahf
aas
pop
jmp
insl
inc
adc
adc
test
repnz
mov
sub
hlt
xchg
int
pop
push
insl
shll
sub
mov
pop
push
les
popf
or
es
test
sbb
outsl
ficoms
loop
ja
out
mov
fwait
shll
sbb
push
jg
xor
inc
aas
cmp
stc
repz
xlat
jbe
inc
in
pushl
iret
mov
fnstenv
addl
lcall
outsl
cs
jl
xchg
aaa
rorb
xor
mov
stc
repz
and
imul
repnz
loop
fwait
ja
sbb
xchg
jne
jp
inc
mov
cs
jbe
aaa
outsl
fiadds
rorl
in
js
repz
mov
jg
pop
aaa
sbb
ds
out
cmp
mov
cmpsl
int3
aas
xchg
cld
jge
rep
xchg
fwait
mov
push
nop
pop
push
shl
ss
mov
sbb
fstl
icebp
sbb
add
push
xor
xor
in
pop
aas
push
shr
icebp
sbb
pop
add
pusha
mov
int
aaa
outsl
jecxz
jg
fidivs
nop
xor
stc
icebp
sbb
sbb
out
pop
stc
js
mov
int
iret
aas
push
or
bound
dec
lea
stc
repz
fldenv
fcomip
push
push
aas
pop
mov
mov
ja
cwtl
jmp
xlat
adc
ret
sbb
dec
mov
jns
out
jg
jbe
jbe
out
outsb
and
mov
push
pop
fnstcw
sbb
inc
jp
enter
out
outsl
dec
jle
push
jle
jae
aas
jg
cld
jge
jge
jo
insl
pop
jbe
andb
repz
lahf
xor
add
fcompp
lea
jg
cld
stc
or
jecxz
addb
sti
add
out
fwait
ja
test
loop
jb
jb
loopne
mov
pop
loopne
loopne
jo
push
cld
int3
mov
das
into
xor
repz
test
inc
call
clc
sbb
cld
stc
hlt
push
mov
adc
jl
test
iret
lahf
aas
aas
jge
xchg
lods
add
ss
stc
repz
xor
and
fdivs
sbb
aas
jg
xchg
popf
lahf
bound
sbb
xor
xchg
dec
adc
xchg
insb
pop
xchg
pop
sahf
aas
jg
xchg
loop
jge
push
pop
jecxz
xor
scas
stc
adc
mov
popf
sbb
sub
and
mov
add
add
loop
jmp
ret
int
aaa
out
ja
imul
subb
iret
mov
jbe
hlt
add
imul
adc
aas
outsl
ficomps
add
or
out
fwait
bound
mov
jp
les
mov
int3
mov
les
sub
mov
orb
ret
and
pop
in
out
fwait
aaa
xchg
push
xchg
mov
mov
mov
repz
mov
orb
mov
jle
sub
mov
fwait
aaa
push
inc
xor
inc
inc
mov
xchg
int
into
and
push
push
mov
outsl
fidivrs
outsb
lods
xchg
push
call
movsl
and
out
fwait
aaa
int
xor
jo
andl
dec
repz
jecxz
inc
gs
fwait
andb
pop
inc
popa
mov
loop
jns
out
dec
aam
jl
popf
scas
mov
or
xchg
push
pop
lahf
jg
in
xchg
fsubrs
mov
push
mov
xchg
jmp
add
cltd
mov
cmp
and
cld
iret
cmp
jae
cmp
xlat
adc
adc
outsb
or
or
stos
inc
pop
push
push
subb
lea
or
pop
dec
sarl
mov
mov
inc
inc
cmp
dec
shrb
pop
adc
and
adc
add
push
stos
sbb
push
fwait
sub
or
adc
or
or
ret
pop
sbbb
stos
pop
cmp
aam
push
cs
lock
movl
adc
mov
insb
mov
inc
jp
push
xor
pop
push
sub
es
or
adc
jge
and
mov
push
jae
sub
xor
test
sarl
sbb
bnd
test
mov
pop
adc
xor
clc
pusha
sbb
adc
sbb
out
push
mov
sarb
push
pop
jae
and
dec
roll
sub
into
push
into
inc
inc
add
cmp
jp
sub
push
sbb
rclb
scas
rcrb
or
enter
cmp
adc
das
js
mov
mov
lahf
js
shll
add
bound
insl
push
adc
gs
sbb
sbb
sbb
pop
in
and
sub
enter
xchg
push
shlb
shr
jp
xor
jb
out
mov
rol
adc
cmp
sbb
and
subb
inc
aam
sbb
sub
popf
adc
sbb
or
int
jge
push
insb
sbb
mov
pop
adc
or
push
inc
pop
mov
adc
add
rcl
cwtl
add
mov
icebp
adc
popa
cmp
xchg
mov
add
adcb
and
adc
inc
cmp
sbb
test
jmp
or
or
subl
les
inc
scas
sub
inc
xchg
add
push
daa
orb
add
mov
add
pop
jp
add
mov
xor
push
cmp
sbbb
add
or
imul
xchg
and
sbb
scas
icebp
dec
jo
or
rcrl
adc
stos
mov
and
rcrb
jae
adc
cwtl
jbe
mov
test
or
jo
adc
mov
lock
or
or
xor
out
mov
inc
adc
clc
adc
cmp
in
or
adc
jne
push
xor
inc
inc
shlb
das
mov
push
dec
unpcklps
into
sbb
mov
jle
adc
icebp
sbb
outsl
adc
jo
inc
hlt
inc
add
cmp
mov
or
adc
pop
inc
mov
movsl
sbb
into
ret
or
xor
scas
cmpb
sbb
cwtl
xchg
inc
js
dec
arpl
sbb
add
ret
adc
sub
push
add
test
aad
mov
cmp
inc
daa
rcl
pop
sub
jnp
add
mov
and
shl
repnz
mov
xor
adc
int
mov
jp
adc
mov
mov
xchg
popa
call
inc
mov
jge
inc
push
pop
shrl
sbb
pop
out
mov
mov
inc
adc
lods
dec
sbb
mov
dec
lret
push
jne
adc
cmpsb
mov
xor
pop
inc
mov
add
enter
es
mov
add
orl
ret
xchg
inc
jne
and
jmp
rclb
xor
sbb
inc
lret
outsb
adc
pop
push
dec
sub
stos
or
inc
pop
scas
and
clc
xor
test
outsb
mov
fwait
adcl
and
mov
mov
int
int3
push
jge
add
add
or
rorb
nop
adc
push
mov
data16
add
mov
and
or
loop
mov
add
sbb
add
subl
jecxz
test
loope
cld
bound
rol
mov
cli
aam
mov
add
scas
add
jp
push
push
adc
gs
push
xor
jb
jge
lret
add
clts
pop
jmp
daa
mov
setne
push
dec
ds
sbb
rorl
sbb
mov
push
ss
and
imul
or
xlat
push
andb
cmp
push
xor
les
ret
clc
sbb
hlt
add
jne
add
and
subb
das
lret
inc
adc
inc
lock
stc
faddl
push
sbb
push
pusha
sub
loopne
sub
lret
push
pop
int
push
rolb
mov
mov
jp
incl
stos
mov
mov
inc
add
fimull
leave
cmpl
lret
in
mov
add
xchg
or
push
mov
ss
add
push
scas
or
inc
int
add
or
and
call
pusha
fstpt
icebp
fists
data16
ret
push
push
mov
mov
rcrb
pop
jno
mov
mov
adc
cmp
lcall
adc
dec
ret
mov
cmp
ret
scas
div
popa
or
nop
leave
aad
outsb
add
push
inc
rdpmc
sti
ror
mov
add
or
pop
stos
add
or
cmc
jne
inc
enter
enter
ud2
or
add
cmp
rcrl
pop
add
jo
clc
clc
or
test
test
bnd
sbb
aad
jo
lea
or
loop
sub
das
pushf
mov
negb
sub
add
push
lods
lods
in
popf
sbb
rcrl
mov
dec
add
or
mov
shl
jno
mov
or
mov
and
cmp
adc
jae
xorb
adc
pusha
mov
inc
sub
adc
jp
into
or
cmp
add
icebp
fisubl
enter
push
sub
push
cs
nop
and
fs
rclb
add
jle
shl
xchg
and
sbb
xorb
ss
aam
sub
pop
mov
xor
push
dec
mov
xor
jle
test
or
subb
mov
xchg
fadd
loopne
push
push
or
fs
push
or
cmp
addb
mov
jb
rcrb
shr
inc
bound
sbb
clc
or
lods
adc
adc
xchg
adc
fdivrs
ljmp
in
sbb
cmpsb
mov
pop
add
in
icebp
cmp
inc
fdivs
or
xor
xchg
lret
lret
or
scas
call
add
lods
sarl
inc
add
push
inc
pop
xchg
add
test
add
inc
rcll
and
inc
loop
test
jne
popa
and
pop
sbbb
or
sub
daa
fs
mov
mov
sub
xchg
or
or
push
mov
orb
add
cmp
adc
dec
or
out
test
push
add
pop
push
xor
into
push
cmc
ret
sbb
rorb
sbb
mov
sub
or
add
ljmp
cmp
mov
push
ret
mov
fldt
stos
sub
mov
push
cmpsb
outsb
add
sbb
sub
xor
xchg
mov
pop
mov
xor
jge
cli
mov
call
mov
add
push
movsb
or
mov
xor
scas
pop
fcmovbe
adc
inc
push
mov
sbb
mov
cmp
imul
mov
test
in
insb
imul
cmp
roll
push
orl
ret
sbb
sub
mov
ss
call
test
adc
and
or
sbb
clc
mov
mov
add
jo
adcl
add
xor
js
or
adc
repnz
adc
xchg
push
sub
and
adc
mov
les
sub
add
js
enter
hlt
sbb
jbe
mov
inc
stos
fcomps
js
mov
jnp
cltd
sti
jp
or
add
leave
mov
enter
dec
adc
add
jge
jbe
enter
negl
clc
sbbb
stos
mov
mov
xchg
adc
arpl
loopne
loopne
push
jp
push
xchg
adcl
sub
adc
add
test
sub
inc
aam
shlb
and
mov
cli
push
es
test
subb
adc
and
sub
rcrl
mov
pop
rorb
sbb
and
rcl
adc
push
aaa
sub
add
push
lock
inc
or
mov
leave
rol
xor
roll
mov
mov
leave
cmp
mov
push
and
or
mov
fistl
xchg
mov
mov
mov
push
sbb
sub
shrb
out
xor
loopne
orl
and
mov
mov
pop
sub
roll
insl
push
cmovg
xor
xor
ror
push
push
push
cmp
pop
fdivrs
cmp
sub
xlat
cmpsb
pop
cwtl
sarb
inc
dec
sbb
les
shlb
xor
add
adc
repnz
or
jns
fs
push
ret
inc
add
and
arpl
sahf
adc
push
push
push
sub
push
lods
leave
or
adc
add
and
adc
push
add
push
push
les
sub
mov
stos
dec
add
push
jns
je
loope
movsb
add
leave
push
push
loopne
call
js
les
addr16
inc
and
lret
lcall
ret
jne
mov
adc
push
pcmpeqb
xchg
loope
pop
icebp
add
pop
popa
xor
leave
and
xor
call
adc
dec
inc
push
push
xchg
dec
pusha
push
sbb
push
mov
fidivrl
push
cmc
or
jne
push
enter
and
mov
pop
dec
dec
stos
test
faddp
leave
mov
test
xlat
or
sarb
sub
cmpsb
dec
and
mov
roll
mov
pop
inc
andb
add
inc
xor
and
pop
adc
mov
sbb
push
roll
mov
in
in
pop
add
popf
add
and
pop
imul
orb
scas
int3
and
adc
mov
push
and
mov
mov
cltd
cmp
pop
inc
popf
push
mov
mov
push
sar
aam
movsl
es
cmpsl
sbb
shrb
cmp
adc
push
push
adc
pop
ljmp
loope
fmull
xor
push
fdivrs
mov
push
push
add
bound
jno
xor
or
sub
mov
shrb
and
cmp
out
cmp
notl
test
jl
xor
lcall
xor
imul
mov
or
flds
and
outsb
test
out
or
stos
lock
pop
dec
jo
imul
test
lods
fidivrs
movsb
adc
rorb
cmp
dec
fnstenv
ror
les
call
lock
mov
and
cmp
loop
sub
jo
mov
sub
enter
or
push
sbb
sub
add
sub
rorb
xor
push
sbb
cmpsb
sbb
adc
push
repz
add
jae
mov
or
mov
enter
xor
lea
mov
and
adc
repnz
adc
push
mov
add
mov
cmp
in
orb
leave
push
xchg
xchg
lock
push
or
mov
sbb
pusha
pop
test
stc
adc
js
jle
ljmp
mov
or
push
movsb
sub
cli
mov
mov
rcrl
and
inc
enter
mov
xchg
sbb
mov
jne
subb
sub
add
cmp
stos
pop
out
push
dec
xor
cmp
mov
arpl
je
adc
out
pop
hlt
cmp
mov
out
xor
mov
xor
icebp
sub
push
shr
loopne
lret
push
in
adc
mov
push
in
es
out
mov
push
or
adc
inc
in
adc
mov
cmp
cltd
pop
scas
insl
lods
andl
mov
xchg
test
shr
push
enter
add
adc
add
push
sbbb
fcom
inc
cs
inc
add
jmp
inc
sbb
in
cmpsl
jecxz
popa
adc
sub
mov
out
adc
inc
rcll
leave
pop
inc
into
add
dec
dec
sub
add
pop
mov
mov
repz
mov
enter
xor
push
push
aam
rcrl
mov
lcall
push
jae
out
xor
add
xchg
dec
sbb
push
pop
push
cmp
add
cmpsb
pop
sbb
jle
jmp
imul
push
mov
push
inc
mov
mov
or
and
shl
pop
dec
rol
test
sbbb
aam
sub
test
push
loope
mov
jb
push
xor
cmp
aas
fidivrs
gs
not
movl
mov
rclb
push
adc
sub
mov
clc
enter
push
lcall
xchg
mov
js
nop
shll
add
add
pop
mov
sarb
popa
fimuls
sbb
push
adc
ss
sbb
push
pop
push
push
je
mov
shlb
add
adc
sbb
add
fistpl
pop
shll
rolb
popf
rorb
pop
in
ret
out
stc
inc
pop
push
loope
addb
xchg
sbb
xchg
cs
sbb
add
or
push
or
mov
adc
daa
fmull
sub
pop
movb
push
dec
cmc
or
data16
test
mov
pop
mov
les
sbb
jle
adc
mov
pusha
test
pop
add
add
sbb
push
xlat
pop
repnz
mov
leave
int3
test
idivb
mov
fwait
and
gs
movsl
dec
jb
sbb
loope
iret
loope
xchg
inc
add
test
sub
and
sub
fldl
enter
mov
and
cmpb
sub
jecxz
mov
xor
mov
out
subl
shlb
xchg
push
ja
xlat
or
pop
jbe
adc
adc
jmp
push
xchg
cmp
scas
mov
lcall
add
in
or
xchg
or
adc
and
lcall
mov
adc
xlat
mov
adc
shrl
das
or
mov
sub
cmp
xorb
mov
and
and
cmp
je
inc
push
xor
inc
or
lret
in
rclb
pop
nop
andb
cld
lahf
fbld
mov
sarl
or
into
clc
adc
add
les
subb
mov
dec
nop
out
loopne
push
jne
push
mov
mov
jge
sub
test
subl
mov
mov
pop
arpl
push
adc
sbb
inc
add
add
test
bnd
push
cmp
adc
test
push
pop
testb
pop
lock
push
clc
lret
shrl
push
jae
je
shrl
xor
movsb
iret
and
sub
loopne
mov
cwtl
or
pusha
or
mov
test
lock
aaa
lods
adc
and
enter
add
arpl
mov
dec
xchg
add
push
outsl
sbb
addb
mov
sbb
in
insb
pushf
sub
jl
and
adc
mov
lret
in
mov
sbb
pop
cmpsb
and
sub
or
addl
mov
inc
xor
mov
sbb
aad
cmpsl
add
push
sbb
pop
dec
or
rcrb
repnz
test
jne
fiaddl
adc
movb
pop
lea
mov
stos
cmp
push
inc
or
les
jbe
lea
cmp
push
lds
xor
pop
fxsave
push
mov
inc
and
setle
xorl
out
rcrl
add
and
inc
pop
inc
add
enter
or
push
xor
adcl
adc
test
inc
push
lods
scas
cmpsb
add
test
stc
mov
js
adc
xchg
xor
in
nop
xorb
and
testb
jge
dec
push
add
pop
jle
stc
or
scas
and
add
push
sub
xchg
pop
cmp
fisttpll
adc
add
xlat
and
or
clc
adc
sub
rclb
push
inc
pusha
loop
lods
cmc
xor
subb
outsb
lret
std
xchg
add
cli
push
addb
adc
dec
push
add
mul
enter
inc
stos
lds
add
lods
das
push
mov
andb
insb
pop
push
sbb
push
add
cmp
leave
mov
xchg
add
mov
jb
add
out
push
push
cmp
push
stos
cli
add
adc
sbb
xor
adc
add
fwait
lds
les
stc
or
aas
lea
cmp
jae
sbb
aaa
movsl
mov
adcb
dec
adc
add
cmp
pop
gs
aam
enter
dec
or
pop
daa
lret
xchg
test
inc
dec
pop
add
ss
fidivs
mov
faddl
sub
data16
call
int
mov
cltd
adc
ret
and
jge
mov
add
int
push
mov
or
pop
es
imul
sub
scas
iret
adc
test
inc
enter
push
push
pop
pop
insb
pop
inc
lock
out
add
arpl
inc
sbb
xchg
sarl
mov
les
ret
xchg
cs
add
roll
xchg
or
ret
adc
push
into
cmp
rol
jbe
cmp
in
sbb
pop
jnp
cmp
jae
scas
sbb
pop
xchg
sbb
mov
adc
test
adc
fs
sub
add
xorb
push
pop
pusha
add
inc
int
cld
je
das
test
sbb
popf
lods
xor
mov
jnp
inc
or
std
sub
test
cmc
or
out
adc
leave
mov
pusha
add
add
jb
or
xchg
test
jl
mov
jg
mov
add
mov
out
sarl
push
xor
xchg
ror
inc
div
test
ljmp
inc
push
sub
push
xchg
inc
and
ret
inc
inc
scas
popf
cmpb
mov
adc
xorps
loope
push
sbb
out
mov
push
test
xchg
or
pop
push
sub
mov
fwait
inc
sub
add
jge
add
mov
addb
sub
orb
push
in
fnstsw
rcl
shll
lret
mov
dec
call
sbb
sbb
shl
inc
or
jp
xchg
rcrb
jnp
add
and
sub
push
shl
push
xor
les
inc
add
jnp
stos
mov
imul
jo
dec
leave
pop
pop
push
cmp
sahf
sub
add
push
xchg
xchg
int3
addr16
pop
pusha
sub
in
push
lea
or
or
push
inc
jp
push
push
cld
ret
movb
lock
dec
cmp
shl
fldl
sbb
and
mov
cmpsb
dec
into
pop
xchg
add
out
int
cmp
add
test
test
add
rorb
sahf
push
cli
sbb
nop
imul
jae
popf
cmc
push
movsb
or
popa
test
sbb
loopne
lods
movups
add
mov
xchg
cltd
repz
lods
xchg
leave
push
mov
bound
jb
ja
popf
xor
loopne
pop
les
daa
enter
push
push
and
xor
sub
mov
add
jnp
pop
cmp
rcl
leave
or
adc
and
mov
mov
mov
jmp
push
stc
ret
inc
lret
enter
aad
pushf
add
setp
cmp
and
jnp
pusha
push
add
xchg
sub
pushf
inc
rol
add
adc
pop
mov
ret
cmp
adc
sarb
repnz
ret
pop
push
imulb
mov
jae
mov
add
push
mov
sub
icebp
pop
add
or
jecxz
andl
testb
sbb
or
lret
adc
loop
mov
mov
sub
inc
outsb
mov
add
mov
sbb
add
lock
hlt
xchg
push
lds
loope
cli
hlt
ret
push
loopne
push
mov
add
or
add
pop
mov
pop
add
push
xlat
xor
mov
sub
arpl
lcall
adc
xchg
shll
mov
sahf
add
inc
adc
imul
lods
jb
adc
lods
add
or
jl
sbb
or
sbbl
cwtl
push
dec
imul
push
outsl
push
mov
sbbb
add
push
sub
lret
xchg
jo
popf
mov
jg
xor
test
mov
pop
push
je
clc
push
mov
lock
push
cld
cmp
inc
dec
test
add
add
or
xchg
inc
lods
or
or
test
add
or
ret
mov
mov
xchg
mov
jnp
adc
nop
lret
fadds
addl
or
jno
in
or
pusha
mov
insl
push
roll
mov
xchg
cmp
jbe
cmc
xor
or
imul
xor
adc
sbb
xchg
incb
or
lret
sbb
sbb
adc
aas
adc
cld
add
jb
mov
mov
dec
lds
pop
xor
and
mov
mov
xor
push
and
mov
sbb
push
sub
sti
iret
dec
call
inc
add
inc
xor
adc
lock
dec
scas
jne
sbb
pop
push
push
push
scas
and
leave
mov
adc
lds
cwtl
add
xchg
adc
cmp
fdivrl
mov
adc
ss
or
shl
sub
add
stc
imul
nop
stos
pop
pop
push
add
test
cmp
bound
addb
or
or
push
scas
scas
clc
adc
repnz
sbb
sub
roll
out
push
sub
push
mov
sub
hlt
push
das
dec
insb
into
push
pop
adc
orb
addr16
sahf
mov
add
sahf
sbb
add
sahf
sub
add
lock
lcall
andb
leave
leave
inc
add
scas
bound
mov
mov
lret
or
or
adc
dec
stos
outsb
mov
pop
shr
enter
mov
add
push
popa
inc
popa
or
scas
inc
push
push
call
out
push
mov
cmp
test
push
and
pushw
mov
dec
dec
rclb
imul
xor
pop
in
sub
add
mov
or
or
lds
push
in
loopne
inc
inc
stos
pop
shll
mov
scas
add
sub
dec
xlat
pop
int3
sub
test
mov
stos
lock
in
jg
dec
leave
mov
ret
and
jp
jnp
adc
dec
lret
loope
nop
cli
sti
mov
stos
lock
sbb
fcompl
add
cmp
mov
adcl
push
cmpsl
scas
leave
nop
add
adc
add
jp
inc
push
scas
adc
jecxz
cwtl
pop
add
mov
dec
rol
add
rcll
add
lcall
inc
lds
sbb
sbb
mov
movsl
adc
push
add
xchg
mov
xchg
pop
aad
xchg
sub
loop
lcall
icebp
icebp
sbb
leave
adc
adc
mov
or
xchg
loop
dec
add
jo
xlat
sub
add
jp
rolb
insb
push
filds
push
pop
inc
mov
enter
loopne
xchg
mov
and
adc
push
andl
adc
rcrl
xor
roll
rclb
mov
sbb
mov
je
cmp
mov
in
cmp
pusha
mov
ss
push
sub
inc
mov
push
push
xchg
or
test
inc
inc
cmp
aad
ret
sbb
int3
add
loopne
push
rolb
cmp
shrl
add
rclb
cmp
add
inc
lock
clc
xor
lret
arpl
sbb
icebp
ja
inc
mov
cmp
add
sub
cmp
cmpsl
adc
sbb
mov
es
test
xchg
dec
rcl
ja
mov
shl
inc
cmpsb
jo
or
sub
add
mov
push
in
in
add
mov
xor
adc
push
sbb
or
add
pop
or
push
lods
scas
push
scas
lods
leave
jecxz
xor
push
loop
inc
jo
push
add
icebp
pop
pop
cmp
rclb
lret
xchg
dec
dec
das
add
cmc
xorb
aam
dec
pop
mov
inc
mov
xor
add
sbb
push
push
sub
subl
je
ret
mov
add
pop
inc
adc
pop
js
mov
test
clc
int3
fisubrs
pop
mov
jo
add
bound
mov
aad
and
bound
or
or
jns
gs
push
xchg
out
add
adc
xlat
xor
add
leave
pop
xor
test
pop
xchg
adc
cmp
pop
out
jae
dec
jge
mov
or
add
jb
pop
lret
adc
xchg
icebp
mov
jae
orb
push
push
popf
mov
sarb
or
ret
lds
sbb
rclb
or
test
jl
cli
mov
testb
add
mov
inc
aas
inc
rol
in
mov
lret
mov
push
xchg
push
or
cs
xchg
jnp
add
iret
imull
adc
xchg
addb
aad
adc
negl
test
add
lods
sahf
dec
sti
test
dec
leave
rcrl
push
loope
xor
add
shrl
and
ror
fwait
and
fs
xor
cmp
mov
addb
jmp
fisubrs
push
popf
lds
popa
sbb
mov
or
shrb
decb
cmpl
add
sbb
sbb
xor
fcomps
inc
adc
push
sbb
mov
push
xorb
mov
sbb
mov
pop
das
mov
or
rol
dec
in
mull
jecxz
mov
adc
xchg
mov
nop
dec
mov
shr
push
adc
push
add
sbb
or
inc
xor
mov
xchg
adc
pop
lock
sti
xchg
fwait
jb
inc
mov
adc
or
out
lret
cli
add
mov
inc
mov
sub
inc
test
imul
jo
add
fcmove
pusha
jb
sbb
test
cmp
sub
cwtl
in
and
push
mov
and
ljmp
jp
je
dec
fadd
es
rolb
js
jecxz
arpl
push
or
ljmp
add
mov
mov
xor
enter
push
je
sbb
pop
push
leave
push
subl
mov
testb
and
sbb
mov
sbb
popf
sub
pop
add
jge
aad
mov
adc
push
adc
sbb
jmp
add
jo
jae
push
push
rcrb
jno
into
inc
mov
adc
xchg
insb
jmp
daa
ret
or
std
repnz
and
sahf
je
sub
sbb
lea
jne
or
push
add
cmpsb
test
mov
and
adc
or
jo
ss
or
ret
popa
mov
push
dec
push
jmp
mov
sbb
dec
fimuls
push
test
pop
aam
mov
roll
mov
fists
mov
and
popa
add
push
push
xor
imulb
jo
or
dec
roll
into
inc
xor
push
lods
loop
pop
cltd
movsl
adc
and
mov
out
into
clc
mov
xchg
sbb
cltd
ljmp
mov
nop
adc
enter
fcmovnbe
mov
imul
inc
adc
test
loopne
adc
cmp
aaa
orb
sub
inc
rclb
rcrb
xor
jne
adc
sub
push
push
stos
pop
jbe
push
sbb
mov
add
adc
leave
jecxz
test
loope
cmp
lret
roll
and
aas
cmp
add
or
aaa
daa
es
pop
mov
rcrb
adc
outsl
pop
shlb
shll
aam
sbb
or
sub
jb
sub
inc
pop
ret
in
jge
dec
inc
xor
jae
ret
or
and
xor
adc
cmp
rcrb
jg
or
or
mov
add
rcrb
mov
lret
mov
sar
loop
dec
adc
or
mov
add
sahf
rclb
std
bound
push
adc
pop
and
cmpsb
xchg
loope
in
gs
dec
inc
movsb
pushf
rcl
lea
add
add
lret
mov
sbb
pusha
lret
insl
stos
out
push
and
xor
and
add
pushw
cli
subb
push
pop
pop
or
push
add
mov
lret
push
push
adc
clc
out
push
cmp
sbb
imulb
adc
and
sbb
or
rcrl
xlat
js
inc
and
cmp
push
sub
mov
and
mov
fstps
add
subb
xchg
mov
shl
div
adc
sbb
mov
jo
add
or
jne
pop
pop
movsl
movb
sbb
cmp
xchg
pop
xor
or
movsb
dec
or
jne
push
mov
push
xor
loopne
into
push
mov
push
icebp
sbb
aam
jge
or
or
add
dec
repnz
jge
cmp
jne
or
aad
mov
loopne
lret
and
adc
sub
lret
cmp
xor
push
jecxz
jbe
add
jb
adc
dec
daa
inc
cmp
ljmp
sbb
adcb
loop
not
clc
mov
sub
test
test
adc
inc
xchg
mov
sbbl
xchg
sbb
xchg
mov
or
lock
push
jp
cmp
loope
mov
bound
pop
xor
ss
pop
adcl
jge
mov
push
dec
pushf
loope
imul
lret
add
rcl
inc
mov
push
and
or
push
and
pop
int
lds
inc
roll
rolb
add
add
sub
test
push
addr16
and
adc
inc
ret
stos
push
jb
push
loop
cmp
cmpsl
dec
and
fs
dec
inc
jge
sub
or
in
mov
mov
out
mov
or
push
add
cmc
push
movhps
push
xchg
sti
popa
inc
adc
adc
dec
repnz
inc
add
outsb
cmc
add
dec
orb
adcb
rclb
sub
cmpsl
aas
ss
es
js
inc
lea
cmpsb
mov
pop
addb
ret
push
cmpsb
or
pop
xor
lret
into
inc
dec
cmp
roll
sar
push
fcoms
mov
or
adc
inc
shll
mov
xchg
clc
add
pop
sub
test
popf
xchg
mov
dec
ret
rcrb
out
sbb
or
mov
cmp
leave
cmp
xor
pop
jo
pop
add
sbb
aad
lods
call
add
rorb
push
lock
adc
mov
inc
pusha
pusha
or
mov
add
or
cmp
iret
sbb
test
js
aam
fstps
sub
cmp
repnz
cmp
movsl
in
rolb
je
push
orl
fisubrs
jg
cs
ret
in
jbe
mov
mov
mov
push
shll
dec
je
pop
cmpsb
mov
xor
lahf
cli
ret
bound
mov
jmp
mov
jmp
and
add
pop
push
mov
add
les
dec
mov
icebp
pusha
sbb
xchg
je
push
mov
orb
scas
sub
outsb
jns
daa
sbb
adc
xchg
pusha
cmp
jbe
push
inc
scas
call
mov
mov
cmp
pop
mov
xor
or
add
jne
or
cmp
adc
adc
pop
mov
mov
mov
cmovl
inc
sbb
popa
push
adc
iret
mov
pusha
push
sub
aad
loop
cmp
dec
lock
jp
call
leave
icebp
sbb
and
iret
jne
and
inc
loope
pop
orl
mov
mov
push
xchg
loop
movsb
out
ss
mov
push
aam
and
and
sar
rcll
push
mov
scas
push
cmp
add
movsb
lcall
push
cwtl
cmpb
jo
add
xchg
lock
push
cmp
push
adc
mov
ljmp
sub
test
addr16
ficompl
sbb
mov
les
xchg
xor
and
jno
jnp
rcrb
add
push
sub
dec
or
mov
fbld
push
lea
inc
or
loopne
pop
and
xchg
adc
cmp
lret
popf
mov
repnz
sbb
push
out
add
loopne
jecxz
fadds
icebp
xchg
sub
inc
into
test
jo
sbb
nop
rorb
add
fisttpll
push
xchg
or
push
cmp
sbb
out
cli
enter
adc
xchg
stc
sbb
inc
add
iret
lock
je
ret
xor
dec
call
test
add
sbb
sbb
xor
cmp
xchg
icebp
add
mov
pop
adc
rorb
loop
xchg
shrl
push
and
pop
gs
push
mov
sbb
fmull
mov
sub
push
orl
add
cmpsb
and
xchg
sbb
cmp
adc
or
add
adcb
mov
addr16
rcll
push
into
and
adc
out
inc
mov
sbb
scas
movlps
sub
aam
dec
lret
popf
mov
and
imul
roll
or
pop
inc
rcll
or
repnz
ret
pop
mov
lds
dec
sbb
insb
cmp
push
gs
jg
inc
xor
minps
jp
into
xor
sub
or
call
ds
stos
xor
sbb
jp
cmp
iret
insb
lahf
setbe
js
loopne
rcll
sub
adc
push
mov
jae
adc
inc
push
push
nop
dec
sub
push
aas
rcrb
lods
add
inc
xor
add
insb
add
inc
je
adc
mov
fsubrl
add
inc
imul
popa
pop
test
cld
or
adc
lahf
inc
test
push
mov
loope
loope
pop
push
lcall
test
roll
cmp
push
adc
enter
shlb
rolb
lock
sbb
loop
dec
add
enter
sbb
test
rcll
pop
out
inc
and
lret
aad
sub
pop
fstp
and
loope
inc
xchg
mov
add
push
cmp
roll
mov
inc
adc
mov
ljmp
unpcklps
mov
lds
popf
sub
in
ret
mov
rorb
push
add
push
dec
dec
insb
add
push
sub
cmp
arpl
add
adc
rcl
pop
jecxz
xchg
scas
adc
xor
aam
xchg
in
imul
push
ror
adc
inc
xchg
xor
test
xchg
hlt
nop
mov
call
rclb
mov
stos
xor
inc
int
and
inc
in
dec
outsb
shll
aam
cli
adc
mov
or
jb
movsl
push
ret
xchg
jmp
add
inc
cmpsb
rcll
frstor
push
xchg
ljmp
mov
enter
aad
imul
jp
in
jg
mov
icebp
rorl
mov
mov
add
lret
mov
mov
push
adc
push
leave
and
test
xor
xchg
mov
xor
add
orb
inc
jg
mov
pop
in
pushl
cltd
sbb
sub
fs
insl
test
lret
and
andb
mov
inc
dec
fimull
mov
inc
cmp
add
adc
pop
int
negl
mov
xchg
add
cmp
xor
roll
and
push
pop
loope
dec
les
add
inc
aam
mov
sbb
xchg
negb
mov
lret
pop
sbb
adc
jae
cmp
sub
lahf
mov
jl
lds
fs
or
leave
outsl
pusha
subb
jmp
inc
stos
or
insl
into
push
adc
addr16
jmp
mov
sub
imul
mov
jb
pop
or
dec
push
dec
mov
sbb
lahf
adc
add
add
ds
xlat
stos
sahf
pop
leave
and
and
xchg
xor
mov
inc
pop
xchg
or
js
push
inc
adc
pop
pop
shll
icebp
lock
and
mov
push
mov
iret
repnz
pop
ret
mov
or
xchg
pop
shll
mov
sbb
inc
inc
lcall
and
sub
or
dec
inc
jb
imul
and
xor
aad
cmpsb
mov
pop
jb
xor
adc
mov
and
sti
jge
sub
hlt
lret
sub
dec
das
sub
lock
push
sbb
sbb
dec
lock
dec
push
jne
aam
sub
cld
shlb
push
inc
jae
mov
enter
push
cld
or
push
inc
mov
jb
sub
mov
jnp
inc
or
and
icebp
icebp
shrl
test
out
or
addl
add
cmp
fs
les
rcl
or
jmp
adc
inc
add
and
scas
inc
add
cwtl
nop
add
ds
pop
imul
adc
inc
add
sahf
or
cmp
jb
shlb
fwait
jae
fcompl
shrl
cmc
dec
shrl
lods
xchg
add
add
xchg
sahf
mov
sbb
pusha
or
fcoms
push
sub
mov
jp
inc
loopne
mov
adcb
mov
sub
pop
imul
dec
adc
test
in
lea
rclb
test
xor
hlt
aam
pop
js
push
add
stc
imul
decl
and
enter
pop
fs
out
or
push
and
mov
in
push
test
inc
rclb
insl
sub
or
sbb
enter
or
sbb
add
xor
mov
rolb
push
rcll
add
sub
bound
push
mov
leave
push
xlat
xchg
cmp
add
push
adc
push
pop
adc
push
sub
jo
nop
mov
push
cmp
adc
rcr
int
inc
pop
push
add
and
push
xor
pop
lret
add
mov
out
nop
imul
out
stc
test
out
or
icebp
jecxz
inc
lock
mov
cmpsl
int3
leave
inc
leave
loopne
lock
in
ret
rcrl
adc
inc
pusha
loopne
inc
and
sti
inc
mov
jge
or
add
pop
mov
sbbb
push
out
aad
fidivrl
and
push
add
inc
aam
leave
or
inc
add
andb
sti
aam
push
adc
adc
addr16
testb
orb
inc
push
mov
ret
jno
gs
push
sbb
int
leave
outsb
xchg
mov
cmp
ret
call
or
dec
stos
sub
add
in
int
movsb
add
bound
imul
stos
inc
xchg
xchg
sub
outsb
mov
inc
mov
xor
jo
or
pop
or
test
or
cmp
and
mov
inc
out
dec
push
pop
inc
movhps
movsl
fcoml
mov
dec
sbb
or
rorl
shrb
sub
xchg
es
mov
xchg
sub
adc
pop
shrb
andb
cmp
push
sahf
inc
cmp
push
add
adc
cmc
add
sub
adc
xor
adc
sbb
psubsw
lock
adc
pop
sbb
inc
xor
stos
push
add
inc
ret
xorl
pop
aas
add
shrb
push
fists
in
icebp
jns
pusha
mov
cltd
insl
out
loop
loop
and
les
lcall
data16
mov
push
lgs
into
mov
and
or
push
shlb
add
pop
ret
rolb
adc
xor
cmpb
rol
movsb
or
mov
and
or
movsb
test
mov
push
cmp
imul
syscall
push
xlat
adc
xchg
inc
sbb
mov
inc
or
or
pop
clc
adc
mov
les
sarb
cmpsl
dec
sbb
or
sub
mov
xchg
or
xor
inc
mov
push
mov
or
dec
push
xchg
imul
in
rcrb
js
add
mov
xor
mov
sahf
lahf
sub
sub
aad
mov
mov
inc
jne
fs
mov
test
sbb
std
and
push
lds
mov
rcll
ret
mov
out
sub
push
pop
mov
mov
lea
add
sbb
or
pop
js
subb
mov
pop
adc
stos
sbb
sub
pop
adc
jo
ficoml
add
add
cmpsl
or
sub
and
dec
mov
xor
int3
ljmp
and
stos
jecxz
outsb
cmp
dec
insl
rclb
sbb
adc
rcrb
andl
dec
sub
xor
rcll
pop
icebp
inc
fs
mov
icebp
scas
test
cltd
pop
les
sub
cmpsl
inc
test
daa
mov
popa
sahf
mov
jb
or
je
sbb
fsubrl
cmp
cwtl
inc
rorl
mov
adc
jae
pop
lods
repnz
sbb
push
cli
xor
shll
dec
pop
push
mov
cmp
xor
push
adc
push
and
dec
test
int3
pop
stos
xchg
gs
cmp
loope
push
int
sbb
pop
dec
je
pop
nop
mov
add
push
rclb
or
movsl
enter
sbb
test
push
adc
mov
loop
cmp
enter
mov
or
clc
add
cli
sub
mov
push
jae
daa
xchg
pop
mov
pop
jge
add
into
or
scas
shrb
dec
into
cmp
adc
push
das
cmpb
pop
adc
xchg
in
fiadds
mov
test
push
adc
or
jb
jle
in
sbb
repnz
push
les
jg
into
stos
cmp
mov
sbb
mov
inc
in
add
or
dec
lea
adc
test
sub
pop
das
xor
test
sub
jne
sub
or
inc
inc
rcll
cmp
das
fildll
inc
inc
push
jp
lods
imul
sarb
mov
mov
shr
adc
adc
add
insl
shlb
orb
cmc
add
dec
sbb
hlt
add
adc
test
loop
push
push
into
cmc
nop
push
cmpsl
mov
add
cmpsl
xor
sub
push
ja
mov
push
pop
dec
aad
ret
inc
call
adc
add
push
cmp
mov
push
push
dec
mov
shrb
add
and
xchg
loopne
or
push
cmpsb
scas
popf
jb
dec
jmp
and
orb
dec
incb
xor
or
icebp
das
mov
pop
es
add
inc
in
cmp
mov
movsb
and
js
xchg
int3
scas
push
dec
es
dec
test
mov
dec
cmp
push
pop
push
mov
pop
sarb
cwtl
mov
mov
in
mov
inc
daa
iret
push
pop
inc
sbb
cmp
jp
rcll
dec
sbbl
lock
nop
aad
xor
sbb
cmp
inc
add
pop
cmp
lret
and
push
scas
mov
pop
or
cmp
pushf
je
jne
add
mov
mov
inc
xor
cli
mov
pop
add
jb
cmpsl
lcall
jne
xor
push
stc
aad
inc
mov
lret
sub
sbb
mov
add
imul
adc
or
mov
loope
rcll
mov
test
lahf
inc
icebp
enter
jb
add
rclb
mov
call
faddl
jb
or
add
addr16
pop
leave
add
mov
cmp
and
hlt
and
adc
push
add
mov
cmpsl
pop
ds
inc
int3
test
cmp
lock
mov
andl
dec
pusha
push
jle
aam
sbb
lahf
rorb
dec
mov
js
cmp
test
inc
xchg
xor
or
lret
sarl
or
scas
rclb
sbb
mov
mov
sbb
add
loope
fdivl
addr16
inc
enter
idivb
adc
push
movsl
xor
pushf
imull
mov
jg
jl
push
out
repnz
ret
jb
add
scas
mov
test
mov
test
inc
and
mov
or
push
test
adc
add
sub
sahf
jb
fs
inc
aad
outsl
lock
lret
push
push
push
jmp
sbb
sub
out
ret
push
inc
rclb
jmp
or
add
int
js
push
hlt
lret
adc
std
mov
push
push
sub
sub
inc
in
dec
push
inc
dec
ljmp
and
cmp
sbb
shlb
inc
pop
and
ficomps
mov
push
dec
stc
adc
lds
jne
mov
push
mov
test
dec
mov
test
das
and
rorl
add
push
into
rolb
push
push
jge
and
adc
add
rorb
sub
push
push
mov
sub
push
push
xchg
sbb
inc
or
pop
sbb
adc
pusha
mov
add
dec
inc
enter
sub
repnz
pop
adc
sbb
ss
sbbl
cwtl
xchg
add
dec
aas
cvttps2pi
lret
or
dec
call
add
xor
add
adc
adc
and
add
rorb
stc
icebp
cmp
nop
jmp
xchg
add
lds
ret
adc
jo
in
adc
stos
dec
add
das
push
jns
sub
sarb
mov
test
mov
aad
stos
and
mov
push
or
sub
rclb
imul
idivl
xchg
mov
jp
cwtl
jb
roll
xor
jne
mov
dec
add
or
lock
push
je
mov
add
add
mov
sbb
push
mov
dec
cmpsl
insl
mov
add
mov
cmc
cmp
push
inc
faddl
fimull
rorb
add
inc
cmp
das
ret
shlb
rorl
inc
jl
sbb
add
or
xchg
je
and
loope
and
loopne
mov
stos
push
jb
add
ja
push
addr16
sarb
xchg
sub
in
adc
push
aad
insl
rolb
push
enter
stos
ror
cmp
mov
mov
mov
sbb
cmp
push
leave
cmp
ret
jge
jnp
mov
push
test
add
mov
xchg
or
es
test
add
sbb
mov
popf
and
pop
sbb
shlb
add
add
imul
outsb
xor
pop
aam
mov
sbb
push
push
mov
add
ljmp
jp
push
xchg
js
sbb
push
dec
inc
adc
mov
jmp
test
arpl
dec
test
insb
inc
and
sbb
repnz
into
popf
shr
sbb
addb
mov
test
fmuls
loope
int
js
lret
outsb
xchg
outsl
sarb
fwait
sti
mov
arpl
bound
push
push
pushf
push
cmp
sub
push
pop
imul
mov
rorl
sar
mov
and
pop
into
test
in
pop
push
sbb
add
push
mov
xor
push
lock
out
dec
or
pop
cmp
sbb
add
push
ret
adc
inc
sbb
cmp
dec
ret
and
and
dec
push
mov
dec
mov
scas
pop
loop
aas
idivb
add
mov
inc
icebp
lock
or
int
sub
je
mov
cmp
cmp
dec
pop
xchg
xchg
mov
adc
shrl
mov
xchg
sbb
sub
push
or
mov
push
test
into
addb
sbb
ret
or
aad
rclb
inc
mov
sbb
icebp
inc
loopne
adc
or
mov
inc
push
jp
lods
sub
dec
cmp
mov
push
dec
stos
cwtl
adc
add
and
fs
pop
adc
or
pop
xchg
push
inc
jno
shlb
mov
ret
int3
sbb
add
sub
mov
mov
fdivrs
add
add
push
xlat
jle
mov
lock
les
sbb
jmp
and
add
repnz
mov
jp
cmp
imul
adc
and
scas
push
inc
sbb
push
in
mov
xchg
xor
adc
sub
mov
pop
jle
popf
or
sub
pop
into
pop
pop
lock
rclb
jb,pt
rclb
push
daa
into
js
push
inc
or
cmp
outsb
xor
jbe
incl
jo
add
cwtl
fs
orb
adc
aad
xor
mov
lahf
ss
adc
rolb
mov
loope
push
adc
mov
inc
aam
adc
loope
rcrl
mov
mov
adc
xor
xchg
adc
popf
mov
ret
dec
cmp
imul
pop
pop
cs
outsb
jg
lods
inc
push
jno
mov
sbbb
xor
or
push
stos
push
ror
sub
arpl
adc
out
push
and
cmp
sub
fidivl
adc
aam
inc
arpl
shll
sub
mov
jne
lods
stos
stc
pushf
shr
div
inc
jg
push
outsb
sbb
xor
leave
ret
add
xor
jg
sbb
add
push
mov
push
push
mov
in
in
call
sbb
rorb
mov
fisubrs
push
shl
mov
add
call
je
cmp
shlb
les
inc
pcmpgtb
sbb
dec
adc
xor
mov
or
mov
sti
jbe
fnstsw
inc
mov
mov
xor
js
mov
rorb
jg
lcall
adc
mov
testb
je
mov
aam
add
jbe
fisttpl
pop
sbb
and
and
push
notl
clc
out
mov
inc
in
mov
mov
push
push
adc
in
jle
test
pop
ret
mov
jne
push
fs
imull
sbb
je
add
orl
push
dec
das
and
and
inc
and
mov
add
iret
testl
add
sti
and
add
inc
or
xlat
testb
adc
push
sub
mov
out
pop
cmp
jne
sbb
jg
jle
and
jl
add
pop
and
and
mov
add
adc
mov
jno
cs
in
jb
mov
pushf
fstpt
xor
and
pop
cltd
sbb
mov
and
or
mov
repnz
sbb
pop
or
daa
cmp
jae
jo
add
push
pop
jbe
cmp
push
sbb
sar
jbe
outsl
jbe
mov
sub
out
je
ss
pop
or
pop
or
fsubr
sti
add
sbb
sub
adc
test
insl
add
loop
dec
push
int
mov
mov
ficomps
jno
dec
mov
test
scas
shl
push
aam
push
out
daa
in
cmpsb
cli
or
movsb
add
cmp
and
sbb
sarl
jno
sub
pop
cmp
push
jnp
movl
cmp
cmp
inc
test
cmp
cmp
cs
popl
push
cmp
jbe
push
jge
pop
iret
rcrl
js
pop
jmp
call
test
jg
mov
or
jmp
addr16
pop
leave
inc
sbb
insb
mov
push
popa
aam
pop
pop
repnz
mov
adc
shrb
jae
cmp
jne
out
adc
clc
arpl
or
mov
enter
cmp
cmp
jne
mov
jmp
pop
je
test
dec
movzbl
das
sbb
fisttps
jecxz
and
jbe
inc
or
shll
and
xor
add
jmp
cmc
jle
xor
cmp
ud0
movsl
mov
ret
je
cmp
je
inc
out
and
pop
lea
add
add
add
cmp
pop
cmp
mov
int3
sbb
aas
test
mov
cmp
cmp
cmp
aas
dec
pop
mov
in
and
cmp
das
push
cs
pushl
fdivs
pop
bound
std
aaa
jne
pop
incl
stos
sub
movl
mov
imul
ja
dec
pop
pop
jle
sbb
sbb
clc
mov
ss
mov
add
push
push
push
lahf
adc
mov
xchg
scas
sub
aam
sbb
mov
or
daa
and
push
push
aad
outsb
xchg
pop
les
shl
dec
sbb
mov
add
jne
jecxz
or
add
adc
jle
aaa
add
mov
ret
cmpb
inc
mov
inc
cmp
sub
mov
inc
pop
loope
je
add
mov
mov
mov
inc
inc
or
jmp
or
addb
out
add
sbb
inc
push
add
add
inc
sbbl
mov
inc
icebp
repnz
fsubl
je
or
or
jne
dec
sub
jmp
imul
lcall
data16
mov
pop
icebp
pop
enter
adc
incl
rcl
test
pop
jne
inc
inc
loope
jecxz
jmp
xchg
sub
ret
add
addl
add
jecxz
jmp
pop
aaa
or
sbb
xchg
ret
shr
mov
dec
test
scas
mov
inc
mov
jne
andb
stc
lock
add
sub
loop
pop
fwait
sbb
dec
sbb
inc
add
test
adc
xor
push
test
dec
daa
mov
pop
sub
sarl
and
sub
xor
ffree
or
sbb
repz
lea
ds
jnp
hlt
jmp
pop
inc
inc
cltd
ret
fnstcw
ror
pushf
sbb
pop
push
pop
hlt
lret
sbb
aas
daa
ret
jae
cmp
cmp
sbb
jecxz
sbb
push
adc
das
inc
cmp
clc
mov
fistps
insl
inc
add
mov
call
xor
cmp
je
xor
je
sbb
push
imul
and
push
test
mov
mov
rcrl
jmp
push
jne
movsl
mov
popf
int3
test
je
and
insl
mov
sbb
push
into
push
jmp
jmp
mov
and
or
cmp
mov
cwtl
cmp
dec
in
dec
sub
insl
push
lock
xor
pop
pop
sbb
and
outsb
lock
outsl
add
jle
push
mov
inc
add
insb
icebp
mov
jmp
and
sbb
sarl
in
in
xchg
cs
cmp
mov
add
dec
mov
rcrb
jge
sub
sbb
add
push
cmp
mov
mov
xorl
add
sbb
pusha
and
pusha
inc
mov
std
cltd
imul
add
jl
jmp
mov
push
mov
adc
jle
lock
inc
and
jno
mov
inc
mov
test
jne
push
stos
push
and
pop
sbbb
mov
mov
pop
pop
or
shll
out
pop
mov
mov
mov
inc
add
inc
cmp
jl
jg
sbb
and
cmpl
lea
jne
mov
push
das
enter
jmp
pop
sbb
ret
dec
neg
sbb
or
jge
cmp
pop
push
jo
and
xor
in
orb
or
ja
add
or
add
addb
jl
push
sbb
pop
dec
ret
pop
test
sub
fcomps
adc
ljmp
sbbb
push
cmp
mov
daa
xor
sub
adc
pop
sbb
mov
inc
lods
push
adc
pop
pushl
mov
sbb
pop
inc
adc
mov
inc
mov
ficompl
adc
pop
fwait
popf
mov
stos
les
or
fs
and
insb
sbb
mov
push
into
es
pusha
outsl
pop
jge
add
pop
scas
sbb
cs
xchg
sub
incl
xlat
stc
xor
mov
popa
pop
call
insb
xor
nop
ret
int3
int3
mov
push
leave
xor
xchg
das
fisttpl
pop
sub
testl
repz
psubsw
cmp
add
adc
adc
push
inc
lret
push
inc
pushf
data16
sbb
adc
fwait
cs
sub
jbe
mov
jecxz
rorb
jl
jne
adc
sti
mov
sub
mov
sbb
push
or
ret
popl
inc
orl
jns
push
push
or
push
shll
fwait
mov
inc
or
lods
adc
add
pop
sti
add
pop
ret
push
inc
xor
pop
inc
xor
push
outsb
mov
popf
pop
or
adc
in
adcb
subl
and
fnclex
mov
xchg
jbe
popl
inc
push
push
lea
test
pop
pop
inc
or
xor
and
add
push
mov
pop
or
or
outsl
fimuls
mov
push
or
or
sbb
xor
jmp
mov
jmp
pop
xchg
fwait
lods
fnstcw
pop
push
xchg
fs
sarb
sbb
add
push
and
add
cmpb
push
inc
repnz
test
or
clc
pop
loope
adc
rolb
or
leave
mov
mov
or
push
mov
icebp
push
fisubrs
faddp
out
cmp
fstps
out
insb
cwtl
call
call
cli
jne
icebp
adc
pop
lcall
sub
push
addr16
hlt
inc
in
add
divb
fidivrs
gs
sub
push
addr16
je
push
clc
or
cmc
sti
push
add
inc
loopne
cltd
xor
pusha
inc
adc
addr16
fisttps
shll
imul
and
insb
mov
pop
pop
sub
adc
sub
imul
cmp
push
cmpsl
jg
pop
xchg
pop
cmp
addr16
jbe
and
pop
in
and
lret
subl
cmp
imul
push
push
outsl
shrb
pop
clc
call
pop
pop
stos
jne
scas
cmpl
or
outsb
es
mov
push
pusha
lods
jge
sbb
test
fwait
or
push
adc
or
add
sbb
stos
cmp
mov
mov
sbb
mov
push
movzwl
mov
dec
cwtl
stc
add
int
inc
sbb
xchg
cmp
sbb
mov
inc
xchg
push
mov
sub
sub
sbb
or
or
dec
out
cmp
js
sbb
inc
push
push
push
call
pop
cmp
pop
jmp
mov
and
andl
cmp
sti
ja
loopne
jne
rep
stos
mov
xchg
pop
cmpb
lahf
mov
arpl
or
fs
inc
decl
mov
out
jmp
cld
push
dec
lea
add
std
lea
pop
cmp
lret
je
mov
jmp
add
cli
xchg
ja
adc
in
mov
and
nop
inc
inc
adc
inc
push
push
enter
xor
fnstenv
fs
jmp
lods
push
mov
fisttpll
jo
shlb
jmp
inc
push
rcl
jns
jno
gs
bound
jge
inc
cmp
cmp
rcr
pop
dec
push
jmp
and
imul
stos
add
push
jo
pusha
mov
loope,pn
and
insb
sbb
cmp
xchg
fdivrl
mov
fstpt
pusha
call
pop
cmpsb
fs
nop
cld
cmp
adc
cld
sub
test
shrb
add
dec
push
jbe
pop
cmp
inc
add
cmp
or
js
jae
inc
xor
rol
add
addr16
int3
out
pop
mov
lea
cli
mov
mov
inc
sarb
decb
scas
in
add
repnz
add
push
repz
insb
push
cltd
ja
lea
inc
mov
shr
test
and
rep
or
inc
mov
xor
rcrb
push
in
cli
lea
lea
push
mov
xor
and
sbb
leave
push
push
xor
xor
dec
dec
pop
daa
sarb
je
lret
jb
mov
test
mov
add
mov
sbb
add
pop
mov
mov
add
ss
mov
faddl
in
pop
pop
xchg
pop
mov
enter
mov
insl
pop
sbb
ja
and
lods
shr
and
dec
dec
mov
add
push
inc
mov
and
in
sbb
hlt
subb
pop
sti
test
mov
push
jecxz
sub
insb
mov
fmull
cmp
insl
xorl
add
addr16
lea
xor
jae
lods
loope
push
inc
sarl
push
call
icebp
mov
mov
mov
pushl
sub
test
call
xchg
and
mov
das
outsl
xchg
add
int
fs
add
jmp
std
jmp
insl
or
or
sbb
inc
add
aaa
ljmp
jmp
mov
jecxz
xorb
fidivs
imul
xor
jmp
test
testb
cmp
fldenv
movb
or
inc
mov
pop
push
cwtl
xchg
mov
cltd
jl
loopne
and
lock
xchg
and
dec
jne
aam
cmp
xor
lock
mov
ja
xorl
push
in
sub
sub
lea
cmp
mov
inc
add
out
loope
loope
adcl
test
inc
inc
dec
push
adc
adcb
and
push
loope
adc
sub
ret
or
pop
nop
dec
es
cld
jle
xchg
jne
shrb
pop
andb
fistpll
jbe
mov
clc
jb
mov
and
or
rep
jmp
push
orl
mov
mov
loopne
enter
pusha
push
je
arpl
and
nop
add
add
and
mov
mov
mov
add
int
or
pop
int3
xchg
mov
dec
lea
sub
in
add
pop
aaa
nop
scas
inc
aas
mov
aas
add
sbb
or
sub
mov
inc
mov
pop
in
lcall
in
lock
imul
inc
cwtl
cld
xchg
jnp
shl
sar
or
lock
push
lcall
pop
lret
mov
rcr
popf
or
adc
nop
adc
or
fs
lea
jl
cld
jg
jo
mov
or
es
fldenv
xchg
mov
nop
dec
stc
sub
mov
and
or
or
jne
ret
inc
insl
add
outsl
add
dec
or
add
push
mov
pop
in
push
dec
mov
mov
lret
push
nop
daa
and
add
scas
insb
sub
mov
xchg
add
lods
mov
xlat
shll
sbb
adc
shll
or
sbb
xor
add
push
add
or
subb
mov
xchg
xor
push
aad
test
jmp
popa
fidivs
ljmp
adc
orb
add
push
imul
cmp
push
or
lods
push
mov
push
jle
insl
mov
push
inc
push
subps
dec
lea
add
inc
pop
mov
dec
cmpsb
pop
jg
push
mov
pusha
push
mov
dec
xor
pop
pop
test
mov
adc
sbb
pop
or
push
pop
push
add
pop
stos
or
and
rorb
imul
fiaddl
inc
incb
inc
push
jno
pop
add
push
shr
jecxz
jle
cmpl
leave
add
dec
mov
imul
dec
dec
in
sbb
jle
adc
roll
clc
jne
rcrl
mov
cmp
jbe
int
adc
add
adc
jae
mov
xor
out
lea
xlat
and
decb
sub
mov
mov
and
loopne
sub
and
jns
data16
fdivl
adc
adc
add
icebp
or
pop
clc
or
sar
icebp
aas
jnp
outsb
imul
das
mov
out
cltd
push
pushw
mov
mov
dec
pop
cmp
cmpsb
jbe
repz
inc
sbb
inc
ds
jbe
cli
mov
stos
fnstsw
push
mov
sbb
mov
stc
mov
xchg
adc
mov
push
imul
push
mov
lods
sub
or
adc
jmp
sbb
lods
xor
mov
lock
or
pop
jae
mov
push
add
stos
gs
arpl
add
test
paddd
mov
jae
jge
inc
push
mov
std
mov
shr
jbe
sbb
sbb
imull
mov
and
lea
sbb
push
cmp
mov
stos
hlt
add
adc
dec
cli
xor
lods
xor
pop
rorl
pop
adc
push
addb
add
push
test
in
push
call
pop
xor
push
or
cmp
andl
push
paddd
or
jns
mov
andl
adc
mov
jo
pop
adc
adc
popa
test
or
jmp
mov
fdiv
add
xchg
lret
enter
cli
out
stos
dec
adc
push
lea
push
push
push
not
imul
mov
add
sbb
mov
lods
fwait
adc
xrelease
in
add
push
in
sbb
jbe
pop
test
xor
push
xor
out
sub
test
decl
shlb
shr
push
add
push
or
dec
test
fdivrs
adc
sbb
sub
decb
iret
jne
xlat
mov
lcall
repnz
jne
mov
cmp
es
sub
pop
and
push
jnp
or
mov
adc
jmp
es
mov
out
xlat
cs
jg
dec
aad
push
test
das
or
outsb
or
pop
mov
jge
ja
arpl
jmp
mov
mov
cli
dec
sub
xchg
mov
nop
inc
mov
mov
loopne
push
mov
adc
adc
inc
or
mov
jne
xchg
sbb
test
adc
in
mov
and
or
sub
hlt
xlat
je
mov
ffree
popa
pop
dec
jbe
push
into
jne
data16
mov
pop
test
jl
shl
inc
jmp
mov
push
stc
inc
or
icebp
jnp
incb
cwtl
aas
out
mov
aam
or
dec
and
and
adc
fistl
jl
pushf
shl
in
and
mov
hlt
sub
jne
call
xor
push
xchg
mov
xor
sbb
ss
sub
xchg
jae
test
or
jp
scas
dec
scas
push
mov
fstpt
push
icebp
inc
or
pop
push
nop
pop
and
fs
notl
data16
jge
les
fs
bound
cmp
push
shrb
or
das
sub
xchg
add
mov
jmp
aaa
push
je
mov
mov
add
mov
jne
loope
mov
and
adc
cld
lahf
mov
and
pop
test
sbb
push
dec
cmp
imul
in
inc
add
mov
fwait
adc
and
or
mov
ret
arpl
push
xchg
pushf
cmp
je
lret
bound
sbbl
mov
les
or
add
imul
sub
cmp
push
and
push
sbb
or
pushl
fs
imul
lds
add
nop
rcrl
enter
jmp
aaa
enter
fcmovnb
dec
loopne
ret
mov
rolb
mov
inc
push
or
lods
pop
inc
push
decb
sti
test
out
add
fstpt
mov
addb
fbld
shll
xor
lea
mov
or
ja
lea
dec
repnz
hlt
lea
cld
lock
idivl
jmp
call
stos
outsb
add
pcmpeqw
add
mov
lea
or
inc
mov
push
jecxz
inc
mov
or
mov
stos
sub
cmpsb
or
mov
xor
push
mov
fsubrs
mov
inc
sub
movsb
mov
jnp
addr16
mov
popa
xor
push
adc
test
add
insb
mov
lods
jmp
call
cmp
add
push
adc
add
dec
ror
add
sbb
xchg
jp
push
mov
jecxz
lods
ss
imull
push
and
jno
movsl
ficoms
jne
jmp
inc
inc
inc
in
flds
jl
dec
je
adc
pop
jne
sub
sbb
je
and
test
xor
ret
pop
push
loop
je
cmp
leave
jmp
cmp
cli
sub
xchg
arpl
lcall
pop
xchg
fisubrs
or
lcall
and
add
mov
add
rclb
push
or
popa
mov
jne
mov
test
bound
jg
stos
in
das
nop
jne
push
push
or
cmc
sub
push
xor
push
sub
push
sbb
ljmp
and
hlt
sub
nop
pop
adc
adc
or
jbe
pop
pop
call
int3
nop
out
sbb
xor
add
pop
popa
inc
je
dec
jmp
inc
imul
fisubl
sbb
in
pop
mov
andb
or
aaa
pusha
add
xchg
and
cs
daa
fiaddl
sbb
ss
cmp
fimuls
push
test
push
jmp
clc
mov
pop
mov
adc
dec
data16
dec
fsubl
push
hlt
sub
sbb
xchg
jbe
dec
divl
inc
or
sbb
pop
push
aam
inc
cmp
jg
ficoml
popa
xor
test
hlt
lea
addr16
xor
movsl
sub
add
fs
mov
fmull
pop
lods
xchg
pop
mov
fbstp
fs
popf
mov
addr16
mov
add
jmp
sbb
push
mov
push
ret
push
jno
adc
test
push
inc
or
decl
xor
shll
roll
xchg
repz
mov
sub
add
pop
fcmovb
add
mov
lods
enter
cmpb
inc
in
push
pop
push
sub
movsl
mov
mov
mov
pop
clc
js
xchg
pop
mov
sbb
int3
push
mov
push
xor
xor
add
sub
and
mov
loopne
je
gs
clc
jl
xorb
sub
cmp
ret
sbb
notb
mov
insl
sub
push
pop
sbb
jl
in
loope
clc
xlat
xchg
mov
nop
cmp
int3
mov
adcb
arpl
int3
add
loopne
je
sbb
orb
neg
mov
je
addr16
out
insl
push
add
add
push
adc
ficoms
lret
je
rep
cmp
and
pop
cmpsb
dec
mov
data16
mov
pop
test
sbb
pushf
nop
add
add
inc
xor
mov
sbb
aaa
or
dec
shll
incl
in
in
aam
inc
shll
les
or
lock
add
mov
nop
mov
and
pop
mull
fmuls
mov
cmp
sub
pop
push
push
add
dec
shll
jl
xchg
and
pop
adc
jne
mov
mov
push
cmpb
orb
shll
sti
jge
insl
or
jae
mov
les
loope
jnp
mov
out
cmp
sbb
sarb
js
hlt
lock
sbb
loopne
in
sbb
sbb
or
aam
mov
mov
imul
add
jb
outsb
je
push
mov
ljmp
and
jb
jb
or
cmc
push
dec
dec
xchg
push
add
dec
inc
mov
inc
dec
dec
inc
adc
push
pop
fisubrs
sub
cmp
sub
insb
je
and
imul
fldt
push
popa
insb
imul
aaa
daa
in
mov
outsl
je
add
addr16
arpl
mov
jnp
outsl
ja
cmp
outsl
outsb
aaa
dec
sahf
inc
cs
fs
jle
sbb
jbe
jb
jne
xor
mov
mov
arpl
and
insb
sub
frstor
gs
das
pop
in
fs
mov
xor
divl
jo
pop
xor
pcmpgtb
pop
fwait
or
arpl
cmp
aaa
adc
faddl
and
outsb
bswap
aaa
insl
jne
lods
je
mov
xchg
jl
outsl
arpl
pop
jae
pusha
xor
mov
add
and
add
addr16
insl
and
das
test
insl
ss
xor
dec
push
inc
sub
lahf
inc
xlat
xor
sub
popa
jb
jne
out
jl
jae
xor
shlw
fldt
subb
cmp
fs
pop
loope
out
dec
sub
jecxz
ficoms
inc
sub
and
dec
imul
mov
jns
or
insb
jnp
and
push
aam
ret
fwait
imul
add
mov
outsb
sbb
je
popa
xor
jbe
mov
scas
jne
adc
push
xchg
pop
std
fs
jae
addr16
outsl
js
lds
push
jecxz
and
sub
lods
jnp
cmp
or
bound
or
push
divl
add
movb
mov
dec
pop
std
sub
add
xchg
xor
jnp
idivb
add
outsb
gs
push
adc
bound
cmpb
add
orl
add
add
dec
xor
add
and
xor
dec
push
dec
pop
js
or
shll
mov
and
stc
ja
pop
add
or
or
leave
xchg
inc
inc
hlt
adc
adc
bnd
dec
sbb
sbb
sbb
leave
xchg
daa
mov
js
push
js
cmp
repnz
jns
jp
cld
sbb
mov
into
dec
or
push
rcrb
mov
cmovs
add
add
das
movsb
add
dec
push
repnz
cmpsb
fbld
repz
loopne
inc
jle
cld
test
mov
sbb
in
adc
das
out
push
sbb
inc
mov
iret
mov
inc
sbb
in
call
push
add
add
pop
ficompl
fisubrl
xor
fcomp
loopne
xchg
xchg
jo
cmp
jle
clc
add
cmp
add
leave
add
xchg
and
adc
or
aas
add
mov
addb
add
sbb
cmp
rorl
imul
inc
add
or
mov
add
stos
repnz
add
dec
gs
jo
insb
insb
outsl
arpl
dec
outsl
fs
gs
popa
outsb
fs
popa
jle
sbb
xor
outsb
outsw
adc
jb
add
inc
mov
lods
stos
or
sub
push
dec
adc
inc
jne
jb
outsb
and
outsb
push
inc
inc
imul
adc
popa
insl
jl
cmp
mov
xchg
add
mov
addr16
shlb
fs
bound
outsl
dec
lret
pop
xor
pop
pop
sub
jmp
fcoms
inc
push
pop
sbb
add
add
imulb
mov
loope
neg
xchg
addr16
fs
insb
jae
push
popa
insb
jne
or
add
and
jb
push
add
jae
addb
or
das
adc
mov
jns
lods
in
lret
sbb
push
je
inc
ja
add
je
adc
mov
dec
or
jb
dec
cltd
loope
je
outsb
bound
mov
jbe
rclb
or
mov
inc
or
dec
inc
dec
or
rclb
adcb
in
fs
dec
rorb
xchg
add
inc
and
inc
lds
in
test
or
jnp
or
nop
fisttpl
sahf
insl
insl
xchg
outsb
and
push
push
mov
fwait
sub
mov
xor
push
cwtl
add
add
fistpl
loope
popa
roll
inc
sub
or
loopne
push
sbb
mov
xor
rolb
js
insb
fldt
jae
push
inc
sbb
loopne
push
clc
mov
je
dec
jae
outsl
outsl
ds
jb
or
cmp
jle
jo
jno
movsl
ret
add
sub
cs
lock
dec
outsb
jne
fisubrl
das
orb
lret
loopne
fildl
cmpsb
outsb
imul
xor
js
mov
add
add
lock
xchg
jnp
fstpt
cmp
jle
or
cmp
xchg
jg
mov
jg
lock
sub
loope
mov
lret
add
mov
jg
lock
add
mov
inc
ret
lock
mov
in
fidivrl
xor
std
add
outsb
incl
xor
add
sbb
aaa
test
push
add
or
xchg
push
mov
subb
push
cmp
add
cmp
xchg
add
lock
idiv
das
mov
cmp
mov
jecxz
push
add
sbb
inc
lock
fldt
push
jp
inc
add
inc
lock
lods
jne
mov
sub
adc
neg
ss
lds
inc
fdivs
js
into
neg
jbe
push
add
cmpsl
lock
dec
sbb
inc
fistpl
mov
xor
jg
or
adc
jnp
dec
and
add
or
fbstp
add
pusha
xor
add
add
das
or
cld
pop
inc
adc
add
xor
lock
in
xor
ss
das
xorl
sub
jge
jns
ds
add
in
jne
dec
cmpsl
add
icebp
mov
add
aaa
add
add
add
mov
mov
adc
in
pop
inc
xor
xorl
lock
mov
imul
or
sti
add
scas
cmp
mov
add
addl
inc
xchg
add
or
fiadds
add
jae
add
jne
xor
fbstp
jb
dec
add
leave
cmpsb
inc
add
mov
dec
jne
fnstcw
cmp
notb
jge
push
je
lock
push
or
outsl
cmp
dec
imul
das
pop
jmp
add
into
dec
inc
lock
in
xchg
dec
inc
add
mov
jbe
js
pop
cmp
add
lock
push
mov
add
mov
pop
add
xor
xorb
icebp
add
mov
mov
popf
cmc
add
mov
push
cli
add
int3
cs
mov
data16
jnp
ret
jno
add
jg
sbb
cmp
or
mov
sbb
push
add
les
mov
sbb
cmovg
dec
cmp
clc
ja
aas
pop
dec
jnp
add
jne
xchg
out
jns
lock
add
incl
dec
xor
pop
sbb
mov
rcr
push
cmp
lock
xor
xchg
jb
cmp
call
or
dec
mov
cmp
fnstcw
add
add
out
mov
add
mov
mov
jns
outsb
add
add
pop
sub
mov
add
clc
pushl
add
cs
dec
iret
ret
ss
or
decl
or
xor
or
or
adc
mov
or
push
push
push
test
cmovl
xor
inc
or
adc
or
lcall
dec
inc
jecxz
xor
aas
push
adc
xor
pop
adc
and
push
xor
adc
mov
imul
sbb
cmp
pop
sbb
adc
sbb
sbb
outsl
decl
lock
add
adc
or
inc
adc
or
adc
sbb
adc
sbb
or
adc
and
and
insl
mov
pop
adc
or
sub
mov
outsl
add
push
outsl
mov
adc
or
push
movups
addr16
sbb
inc
cmp
ret
sbb
scas
add
sub
sbb
add
dec
dec
enter
add
or
pop
push
sbb
push
mov
xor
or
icebp
or
clts
mov
mov
adc
adc
or
fimuls
inc
cmpsb
mul
lock
add
adc
test
sbb
mov
bound
pop
adc
lcall
mov
push
push
sbb
xor
into
popa
negb
pop
adc
rcrl
push
add
insb
and
cmp
add
add
lods
or
or
and
adc
aaa
jl
add
movsb
scas
add
imul
push
push
or
mov
push
aas
cmp
adc
fnstsw
push
or
push
add
ljmp
cmp
ds
inc
subl
add
push
pop
leave
aaa
jmp
js
add
rolb
addb
ret
enter
add
sub
mov
pushf
cmp
push
or
jmp
and
pusha
jb,pn
fmull
push
hlt
or
test
mov
add
cs
sbb
pusha
push
dec
rorl
jb
jb
jmp
dec
or
and
scas
xchg
cmpsb
jnp
dec
testb
lcall
add
mov
add
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
