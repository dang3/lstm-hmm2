add
aad
or
sub
movw
pavgw
xor
decl
adc
jmp
push
pand
jmp
loope
jmp
loopne
add
shll
push
inc
pop
add
sub
and
movb
rcl
push
xchg
pop
punpckhdq
xor
rcl
push
cmc
pop
xorps
and
and
or
dec
movw
sbb
and
ror
movl
sbb
jmp
mov
clc
or
loopne
jmp
and
pop
rcr
or
jg
movb
sub
push
cmc
pop
jmp
int3
xchg
mov
scas
push
aaa
pop
sub
or
jmp
iret
movb
and
jmp
jmp
jns
jmp
cmp
dec
and
sub
push
stc
pop
xor
je
push
dec
pop
jbe
jns
xor
xor
movl
js
add
jle
push
inc
pop
or
punpckhbw
and
jl
movb
or
and
or
adc
pcmpeqd
push
lahf
pop
sbb
jge
psubusw
push
inc
pop
je
adc
jae
movb
sbb
punpckhwd
je
sub
xchg
movb
psraw
and
push
stc
pop
sbb
push
xchg
pop
addps
adc
jb
jmp
out
ret
add
pop
shr
movl
pmulhuw
xor
js
and
jo
or
jmp
inc
rcll
sahf
cmc
adc
push
xchg
pop
psrad
xor
xor
js
movb
add
dec
cmpl
jne
sbb
push
ret
add
add
push
nop
shll
aas
and
xchg
mov
jae
inc
or
inc
xchg
jae
lods
sub
cli
lods
sub
cmp
cmp
cmp
inc
push
cmp
push
rcrl
adc
xchg
jae
mov
mov
mov
push
popf
addr16
push
xorl
or
jae
push
sar
aad
mov
inc
push
xorl
push
sub
cli
lods
mov
fwait
in
shll
jbe
xor
push
rcl
inc
dec
xchg
jae
insb
lret
xor
push
mov
mov
adc
sub
push
shll
push
leave
xor
push
imul
push
cmpsl
test
cmpsb
jne
mov
pop
imul
xchg
cmpsb
lods
insl
loop
xor
push
mov
and
aaa
shlb
cmp
jae
jl
jb
cmp
jae
inc
sub
mov
shll
jmp
mov
push
insl
jae
adc
andb
sbbl
push
xor
pop
push
mov
flds
add
jae
je
dec
mov
idivl
mov
arpl
jg
jae
inc
sub
cli
lods
sub
cli
lods
out
xor
push
shll
or
xor
adc
lds
jae
push
shll
add
fsts
lds
jnp
popf
cmp
rcll
inc
mov
mov
pop
fsts
lock
jae
adc
and
clc
int
jb
add
bound
or
push
sar
inc
bound
or
adc
push
pop
cmp
jp
popa
push
xorl
mov
inc
pop
pop
and
or
popa
popa
repz
add
fsts
jecxz
ret
xchg
ret
xchg
ret
xchg
ret
xchg
ret
les
xor
push
pop
jp
movsl
pop
mov
cmc
xlat
cmp
scas
push
add
adc
ret
jae
or
and
push
test
jo
inc
and
insb
sub
and
lock
xlat
jae
pop
push
mov
insb
pop
dec
and
and
stos
cmp
scas
push
adc
and
fwait
xchg
push
jbe
push
shll
pop
push
mov
push
shll
jae
sub
or
and
add
adcb
or
add
jo
add
push
dec
add
shr
jae
dec
pop
jno
push
shll
fistl
lods
shll
mov
adc
mov
adc
lods
push
shll
fistl
lods
shll
mov
adc
add
jno
pop
jno
nop
xlat
cwtl
mov
push
mov
shrl
sub
jo
rcll
pop
mov
mov
xchg
iret
and
rcll
dec
mov
mov
adc
add
shrl
jae
jb
stos
mov
add
fldcw
jae
push
push
mov
lock
jb
pop
mov
xlat
cli
jge
mov
cli
imull
xor
ret
adc
rcrl
mov
shll
fcmovnbe
lock
push
mov
and
mov
jae
fcmovnbe
lock
push
mov
and
xchg
jae
fcmovnbe
lock
push
sbbl
inc
xchg
jae
mov
pop
jne
xchg
xlat
and
les
add
push
pop
mov
les
add
push
sar
add
adc
push
ja
mov
ss
std
pop
imul
cmpsl
push
fs
add
shll
fs
pop
imul
mov
and
pop
push
and
pusha
and
pop
imul
push
cmp
adc
mov
and
cmpsl
sbb
sarl
mov
adc
addb
cmp
pop
push
daa
mov
jl
mov
adc
mov
adc
mov
jae
push
shll
push
shll
inc
shll
sahf
sub
add
ja
xchg
inc
push
shll
push
roll
add
inc
fidivrs
push
add
add
add
add
cmp
add
add
add
add
add
add
aam
add
popa
mov
iret
add
push
lods
xlat
loopne
gs
inc
mov
xor
push
sub
dec
xor
add
sbb
mov
icebp
sti
fildll
xlat
add
add
add
jmp
ljmp
stc
test
lret
std
adc
loopne
int3
ja
cmp
fcoml
cmp
xchg
arpl
ja
mov
jbe
xor
outsb
loopne
shrb
lret
dec
push
mov
push
jnp
lock
bound
add
add
add
add
test
add
xchg
add
pop
data16
add
add
add
das
add
add
or
add
add
mov
movsb
add
jns
add
adcb
lea
add
insb
add
xchg
add
add
add
sub
add
add
and
add
addb
add
add
filds
add
add
cmpsl
add
add
add
addl
add
add
and
add
inc
rorb
xchg
add
add
or
fldl
add
add
add
add
pop
es
mov
cmp
fildl
add
add
push
xchg
add
add
int
sbb
jb
add
pop
and
add
push
je
mov
add
sbb
add
cltd
add
add
stos
add
aad
add
movsb
push
add
add
add
add
cmp
mov
add
jecxz
sbbl
pop
jb
into
push
cli
push
movl
insl
and
shrb
and
mov
icebp
mov
js
cld
xchg
mov
ds
add
or
lods
pop
in
xor
roll
stc
fwait
stos
in
jbe
pop
ficoml
popf
and
or
adc
movsl
pop
xchg
xchg
sti
xchg
adc
fisubrs
loope
jne
jg
call
xor
aam
pusha
or
mov
loop
xchg
icebp
pop
sub
test
push
int3
ss
xchg
cmp
sub
mov
inc
mov
aas
lds
jbe
push
cmpsb
out
mov
cmpsb
sub
je
push
xchg
sbb
addr16
or
lods
enter
jl
cld
mov
pop
or
xchg
sbb
lods
inc
fsubrl
or
cwtl
imul
mov
mulb
and
or
pop
push
mov
enter
insl
cmp
xchg
addb
mov
dec
jmp
in
mov
test
xlat
cmp
js
cmpsl
int
or
std
sahf
xor
out
data16
out
mulps
adc
mov
adc
mov
sbb
or
lahf
fcoms
adc
sub
loop
jmp
cmpsb
xchg
sub
push
xchg
sbb
and
jno
jae
and
hlt
push
aam
dec
push
jmp
pop
int
mov
or
test
icebp
jecxz
addr16
xchg
cs
leave
dec
jne
jge
out
test
push
shll
mov
mov
jle
mov
adc
inc
push
sbb
xlat
stos
fwait
xchg
scas
into
mov
arpl
and
in
xchg
mov
inc
push
lds
rorl
into
mov
mov
insb
cmpsl
test
mov
das
loop
inc
ret
sub
adc
les
jg
add
push
jl
adc
mov
aam
jecxz
aad
push
jge
fmull
sahf
jns
mov
lock
shll
in
push
ds
xor
sbb
sbb
sbb
mov
insl
jecxz
lcall
dec
mov
andl
push
push
xchg
add
and
dec
inc
movsl
leave
bound
stos
pop
daa
add
or
mov
jbe
dec
lret
jp
test
mov
cmp
std
loopne
pusha
fwait
xor
test
rcrl
test
jle
mov
mov
addr16
or
leave
mov
dec
loop
xlat
mov
cmp
dec
push
in
in
jo
pop
xchg
mov
mov
mov
out
enter
cmpsl
test
decl
enter
test
push
sub
lea
mov
out
popa
outsl
sbb
arpl
sub
pop
repz
addr16
cmp
dec
loope
std
fstl
fsubs
push
jmp
repz
xor
test
std
out
jno
test
fistpl
adcb
inc
cmpsb
in
adc
imul
adc
xchg
cld
mov
mov
cld
and
cwtl
lret
popa
lret
sub
test
lahf
sub
xchg
enter
mov
cmpsb
and
loopne
push
jno
insl
jne
mov
ret
sub
pop
mov
fnsave
lcall
sbb
insl
jg
or
mov
fldt
xor
cmp
insl
adc
mov
fisubrl
in
repz
aad
ret
out
mulb
xor
cmp
and
incl
cmp
xor
decb
lret
pushf
jmp
lret
mov
adcl
jno
outsl
dec
loope
sahf
mov
into
sbb
xchg
mov
testl
fcmovnu
insb
xchg
add
subb
jae
stc
push
push
ss
aaa
xchg
xchg
jmp
ficoms
adc
test
pcmpgtb
pusha
push
cmp
loopne
pop
push
xchg
adc
sbb
mov
stc
push
ret
pop
xchg
xchg
or
mov
mov
sub
call
popa
shll
ret
mov
ror
xor
add
fsubl
loop
add
adc
movsl
push
enter
adc
insb
dec
adc
xor
push
push
out
clc
xlat
and
sub
xor
xchg
adc
mov
dec
adc
in
out
out
and
out
inc
call
and
mov
cwtl
jb
sub
xor
lods
xchg
pop
lret
sbb
cli
jo
stc
dec
xchg
repz
js
adc
fs
inc
sbb
aas
sbb
mov
push
mov
xchg
in
push
pop
fimuls
fwait
mov
das
fcomps
cmp
out
sub
sub
mov
mov
movsb
insl
addr16
dec
sbb
mov
cmp
out
or
pop
dec
or
lods
cmpsb
std
add
ficomps
jge
arpl
jmp
sahf
ror
jle
sub
aad
adc
retw
xchg
les
push
aad
stc
mov
xchg
jp
loopne
shrl
test
lret
push
mov
insb
mov
push
adc
jbe
inc
imul
sbb
pop
addr16
push
loop
jno
sub
jl
and
jb
xor
movsl
enter
jo
pop
mov
sub
sarl
in
fwait
sbb
xchg
sbb
lea
ja
sub
mov
sti
pop
sub
and
cmpsb
and
test
ret
jo
mov
push
mov
rcrl
xor
pop
cmp
or
fistpl
ss
jmp
cltd
inc
xor
insb
cld
test
or
sbb
das
lea
cmc
sbb
in
mov
lcall
or
jmp
mov
in
xchg
sub
sti
cmpsb
cmp
fisttpl
jnp
or
popa
aad
lcall
aam
push
lahf
mov
pop
aaa
shll
std
fsubs
xchg
xchg
int3
bound
je
fs
mov
ficoms
lock
jg
sbb
arpl
test
push
pop
add
sbb
xchg
inc
push
pop
sub
test
dec
add
sbb
sbb
repnz
into
sbb
jnp
incb
sbb
xchg
rcrl
repz
add
cmp
push
push
ds
sbb
push
lcall
aaa
mov
add
xchg
jbe
mov
mov
dec
jne
scas
sbb
cmp
xlat
insl
in
dec
sbb
push
incb
ss
mov
jmp
inc
subb
cmp
fwait
mov
dec
and
adc
out
filds
loopne
je
mov
pop
cmp
push
mov
stc
push
or
jl
sarl
in
push
push
xchg
pushf
xor
pop
loopne
xchg
inc
fucomp
inc
fisttpll
out
push
out
sbb
mov
fstpt
ficoms
aas
cmp
sbb
dec
sbb
add
cmp
push
xchg
pop
adc
movsl
xor
out
jge
sub
push
xchg
inc
lahf
jae
test
sarb
sub
insl
dec
dec
sarl
data16
inc
jno
or
in
jne
cli
insb
fcoms
add
hlt
mov
sbb
jno
lods
xchg
movsl
loop
filds
mov
stos
cmp
pop
mov
dec
repnz
enter
imul
pop
pop
lea
xchg
xchg
repnz
add
ljmp
lcall
out
fidivs
or
dec
mov
lret
adc
sbb
push
jp
jl
push
xchg
cmp
data16
aam
add
mov
lcall
fildl
ror
sbb
mov
push
jl
ljmp
xor
mov
enter
mov
in
pop
pop
lcall
dec
lret
lret
mov
jno
sbb
pop
ficomps
test
test
and
call
lahf
dec
adc
xor
lds
cmp
inc
sarb
test
pop
aas
adc
rcrl
add
cs
ret
cmp
add
mov
subb
jae
mov
push
push
es
jns
xor
ljmp
ret
xchg
cmp
imul
lret
mov
orb
or
in
rcrb
mov
cmp
xchg
dec
addl
dec
push
xchg
add
pop
cli
pushf
sti
mov
roll
and
jno
pop
inc
lods
nop
mov
adc
shll
cmpsb
inc
loop
mov
fwait
xchg
repz
lret
imul
shlb
shll
sbbl
lret
mov
mov
push
ret
mov
jbe
les
mov
std
jnp
es
fdivr
jecxz
cli
cld
stos
and
jg
fnstsw
push
insb
ret
mov
out
cwtl
mov
fldenv
and
sub
sub
jns
rcrb
lea
mov
add
addr16
push
push
and
out
pop
outsl
stos
fsubs
push
or
cmp
lds
ss
dec
push
or
dec
rol
test
stos
test
push
pushaw
gs
cmpb
int3
xorl
or
rorl
xchg
sub
dec
adc
inc
les
mov
push
mov
fmull
pop
mov
lock
xchg
cmp
lea
add
and
popa
sarb
and
dec
fwait
mov
aad
ffreep
sbb
lret
xor
ret
mov
jno
les
mov
std
pop
frstor
nop
fdivr
jecxz
cli
cld
sub
xor
idiv
jnp
repz
dec
data16
popa
adc
dec
push
xchg
and
notb
lret
pushf
dec
pop
pusha
popa
inc
repnz
popf
push
add
fcmovnb
ficoml
dec
dec
push
xorb
test
sbb
xor
test
in
push
loope
fists
and
pop
ds
lret
scas
loope
out
ret
and
jp
xchg
popl
jecxz
les
clc
dec
test
or
push
insb
loope
add
enter
xor
cmp
or
dec
pusha
pop
orb
fcmovb
fildl
in
or
mov
cmpsb
xchg
mov
inc
mov
sbb
mov
sub
pop
in
lea
in
inc
fdivs
ljmp
shlb
inc
pop
jae
and
loopne
mov
pop
ret
xor
loopne
mov
int3
mov
jns
ds
and
jl
xchg
jecxz
daa
aas
hlt
jb
das
push
fwait
dec
sbb
sahf
ret
rcrl
mov
pushf
adc
lahf
in
test
lds
cwtl
add
test
arpl
stos
dec
push
testb
xchg
adc
jg
xchg
test
outsb
adcb
fisubl
hlt
aaa
enter
xchg
mov
inc
test
fdivl
xor
mov
sbb
and
mov
mov
lock
or
outsl
fistpl
xchg
rcr
mov
adc
mov
jl
fs
sbb
roll
or
pop
mov
aad
dec
mov
cmpsl
mov
neg
movb
or
pop
xchg
push
fmuls
mov
loopne
sti
shlb
mov
pop
pop
sbb
inc
mov
mov
xor
xchg
lcall
dec
pushf
or
cli
jbe
cwtl
movsl
push
pop
ret
sub
jne
jmp
dec
or
push
popf
inc
sbb
jae
adc
mov
mov
xor
cwtl
inc
aam
xchg
or
xor
add
xchg
test
inc
mov
icebp
mov
inc
incl
popa
xchg
scas
test
aam
mov
shrl
mull
mov
and
sbb
cmpsl
popf
loope
icebp
sbb
pop
jge
sbb
xchg
psubsb
out
fidivl
push
xor
mov
xchg
mov
pop
ret
std
or
or
lahf
mov
and
mov
pop
add
sbb
mov
rsqrtps
push
push
int3
adc
stos
loopne
push
and
pusha
pop
std
and
xchg
pop
and
mov
xor
in
xchg
in
popa
mov
dec
lock
sbb
push
push
rol
push
jo
xchg
andb
mov
jbe
test
and
addr16
ret
dec
ficoml
fistl
and
adc
pop
mov
add
add
outsb
fwait
stc
imul
push
xor
out
mov
int3
hlt
push
pop
sub
add
pusha
addl
test
inc
and
int3
lock
xor
add
imul
fldenv
cmpsb
push
sbb
incl
in
inc
out
sub
xor
in
in
fmull
cmp
mov
add
xchg
xor
cmp
push
mov
xchg
out
mov
cs
arpl
fwait
pop
adc
stc
sbb
aam
push
mov
or
daa
mov
test
lret
xor
jb
jno
xor
clc
adc
adc
in
out
imul
fdivp
imul
push
push
insb
mov
dec
addl
stos
xor
dec
mov
inc
sbb
shlb
xor
cs
test
push
jb
lea
insb
sub
pop
ljmp
mov
rorl
js
push
pop
mov
icebp
mov
cltd
scas
adc
cmp
or
cmp
mov
cmpsl
mov
xchg
repnz
cmp
inc
popf
mov
sbb
pop
cli
jns
cmpsb
ss
dec
test
xchg
jae
lea
xor
mov
add
mov
inc
mov
rorl
fmull
ljmp
mov
mov
iret
sbbb
sub
jge
push
add
scas
enter
fsubrp
imul
push
mov
xchg
je
pop
insb
enter
pushf
or
mov
addr16
into
loopne
fisttpl
mov
and
push
pop
dec
or
pop
and
jns
pop
data16
xor
test
aaa
adc
test
rcl
iret
imul
pop
stos
lcall
jmp
fs
or
lcall
pop
push
inc
mov
push
add
fsubrl
ret
jge
pop
dec
in
cld
sub
ss
test
clc
movb
add
nop
dec
into
out
shll
stc
sbb
sti
fcomps
jge
mov
test
nop
jo
ds
dec
sub
scas
ss
jl
mov
mov
mov
test
jecxz
xchg
ss
or
mov
mov
iret
fs
orb
outsl
xlat
insb
in
pop
dec
sbb
add
mov
xchg
cli
sbb
push
mov
xchg
push
sub
js
mov
loop
push
fdivs
mov
push
popa
outsb
add
fdivrl
xchg
addl
or
jbe
mov
insl
test
insl
or
xlat
pushf
push
pop
or
sub
jmp
sub
mov
jns
in
fnstcw
adcl
ret
inc
shlb
sbb
cmp
lds
mov
lahf
xchg
sub
mov
cld
test
lea
movsb
adc
repnz
jl
dec
cltd
pop
ret
je
push
aad
int3
sub
sbb
dec
or
jae
inc
or
hlt
push
js
scas
call
fstpl
xchg
das
sbb
push
mov
adc
movsb
cld
adc
stc
lea
xchg
add
push
int3
subl
or
enter
xchg
dec
sub
fwait
test
dec
rcrb
mov
into
test
xor
add
nop
in
stos
push
add
in
repz
fnstsw
pusha
or
or
jbe
in
arpl
insl
inc
rolb
ds
outsl
jg
sbb
mov
xchg
or
cmpsb
sbb
int
scas
std
out
pop
lods
imul
jp
sub
dec
jg
lcall
orl
arpl
mov
in
lea
leave
test
rcrb
cmp
std
dec
jo
adc
or
outsb
inc
or
icebp
lods
sbbl
pop
mov
pop
in
xchg
push
mov
les
add
xchg
cmc
in
cwtl
outsl
push
rorb
jg
iret
cld
fcoms
popf
imul
cltd
js
lods
loopne
stc
psubq
pop
int3
rcrl
popf
lock
push
xor
ret
test
xlat
pop
lock
jae
mov
repz
and
leave
jle
stos
push
fldl
xor
ds
or
mov
cmp
pop
add
jl
add
out
jae
pop
push
xor
das
or
adc
jle
mov
lret
jge
dec
imul
test
arpl
mov
ss
adc
enter
ds
adc
mov
jo
pop
std
adc
xchg
stos
iret
or
leave
cli
sub
push
mov
popl
sbb
cltd
push
rcll
sbb
ja
dec
jo
data16
gs
aad
mov
cli
push
mov
repz
cmp
adc
jl
xor
into
lods
stos
cmc
or
test
dec
mov
dec
pushf
jg
lock
cmp
or
dec
dec
pushl
sub
sahf
mov
jge
rcr
mov
xchg
bound
xchg
cld
mov
dec
push
cmp
dec
cli
sub
mov
inc
push
inc
imul
pusha
jne
test
test
xchg
mov
mov
jb
pop
lods
inc
lret
ja
inc
cltd
pop
sbb
push
mov
mov
cld
addr16
sub
sbb
cmp
mov
gs
push
aam
cmc
xchg
adc
sar
lcall
ffreep
popa
lds
and
mov
mov
pop
aam
push
iret
inc
inc
loop
and
add
rclb
mov
into
pop
jmp
mov
hlt
dec
cwtl
push
or
sub
inc
ret
dec
lds
add
loopne
lahf
and
or
inc
imul
jae
sahf
js
mov
repz
pop
and
shrb
mov
test
dec
sbb
xlat
mov
imul
add
xchg
lock
pop
pop
push
stos
sub
sub
bound
jge
mov
jle
loopne
mov
test
cmpsl
sub
pop
add
shll
arpl
inc
out
add
jno
sbb
sbbb
aad
and
psubd
das
in
imulb
inc
int3
les
xchg
imul
pusha
ret
push
push
ds
xchg
out
mov
stos
jae
and
pop
dec
out
divb
jge
fidivs
jnp
rcll
jns
xor
or
cmpsl
cmpsw
aad
push
aas
icebp
or
xchg
cmp
repnz
xor
enter
sub
jl
gs
mov
andl
les
inc
xchg
cmp
aad
ss
xlat
inc
mov
scas
aaa
cli
push
ja
jae
cmp
xor
mov
out
out
sti
imul
pop
das
lret
insb
out
adc
lock
rorb
and
xchg
adc
and
mov
pop
cmp
in
mov
leave
cmp
xchg
inc
sbb
rcrb
or
pushf
add
or
sub
sub
pusha
popf
add
movsl
mov
roll
lahf
mov
cmp
mov
idivw
jecxz
shr
jne
daa
imul
sarl
daa
cmc
inc
fadds
fistps
hlt
mov
popf
mov
mov
xor
movsb
xlat
mov
fnstsw
push
in
subl
mov
xchg
sub
add
ds
jb
mull
mov
fs
push
cmpsb
in
cwtl
cmc
push
out
daa
fists
pushf
cwtl
push
jae
les
mov
adc
jecxz
imul
sub
mov
jecxz
ljmp
das
cmp
sarb
les
lcall
cmp
ss
mov
jns
fwait
jae
inc
popa
aam
dec
hlt
addb
sti
mov
in
jge
inc
movsb
mov
popf
ficoml
int3
loope
enter
popf
adc
mov
xor
mov
adc
shl
mov
or
sti
cmp
je
cmp
sarb
addr16
shll
testb
and
sbb
push
imul
cmp
fwait
xlat
mov
loopne
inc
leave
xchg
jecxz
inc
mov
pop
shr
mov
and
and
aas
add
rorb
mov
icebp
mov
xchg
xor
rclb
stos
push
xchg
xor
push
nop
lcall
mov
repz
fsubs
jle
popa
scas
and
or
in
cwtl
cmp
pop
outsb
cmp
test
dec
aam
bound
enter
sbbl
sahf
test
inc
cmp
pop
es
pushf
or
out
pop
into
test
mov
jle
dec
pop
pop
inc
pushl
lds
scas
lds
adc
loope
test
push
sbb
mov
int
sbb
dec
jge
sub
push
mov
or
pop
in
lock
mov
cmpsl
shll
xchg
outsb
jmp
xchg
gs
mov
fdivrl
int3
sub
mov
pop
mov
orl
stos
add
sub
aam
into
fnstenv
out
sub
jnp
clc
in
mov
hlt
mov
scas
dec
xchg
xor
div
and
movb
hlt
mov
xorl
cli
mov
lods
add
in
push
sbb
lods
xor
lods
iret
test
dec
aad
fdivl
push
pop
stc
xor
faddl
cmp
fcmovnb
and
cmp
xchg
les
fcmovnu
add
xchg
shrb
jge
mov
push
mov
inc
aaa
ret
push
repz
mov
pop
jb
ds
loopne
aam
ljmp
or
mov
add
xchg
call
mov
push
xor
fistl
mov
push
jnp
jne
or
ds
push
and
insl
loop
insb
aas
lods
fisttps
loop
dec
daa
xchg
pop
pop
cmp
test
push
cmp
cmpsb
inc
dec
aam
push
out
sub
jnp
pop
in
mov
hlt
movsb
scas
mov
add
sti
rorl
adc
stc
push
and
pop
jns
mov
sub
or
insb
in
jno
pop
adc
std
sbb
lods
xchg
cmp
lods
iret
cmp
xorb
jg
popl
cs
fisubl
jge
cmc
xchg
imul
push
mov
in
cmp
mov
add
xchg
cmp
push
test
dec
adc
fidivl
push
mov
lahf
data16
into
movsl
iret
sti
movsl
ret
movsl
pop
out
and
xlat
mov
popf
sbb
nop
jle
cmp
imul
dec
jnp
ret
loopne
psllw
adc
stc
aam
in
xor
das
nop
and
pop
out
push
mov
daa
mov
orb
enter
and
fs
sbb
lret
push
ds
movsb
inc
inc
jne
sbb
jno
jnp
fs
mov
lods
imul
std
add
sbb
lock
mov
stos
das
fisubrs
fs
gs
decl
ljmp
pop
aas
dec
cld
ljmp
cmc
je
cli
bnd
jecxz
jp
flds
jnp
nop
out
xchg
jae
les
jg
push
aam
xlat
inc
stos
fisubrs
stos
ljmp
lods
out
repnz
ds
cmp
das
mov
popa
fs
mov
xor
das
xor
jnp
popf
inc
pop
into
inc
lcall
popa
test
inc
pop
cwtl
mov
ds
test
int3
into
out
repnz
sbb
js
jo
lods
xchg
sti
ja
es
and
in
movsb
or
stos
stos
push
lods
test
pop
cmpsl
in
shlb
jmp
ret
add
outsb
jmp
leave
push
in
aaa
jmp
bound
scas
insw
jbe
xchg
lods
pop
adc
sar
xchg
daa
mov
or
cltd
push
cmp
push
sub
push
notb
inc
sarb
pop
xchg
aas
subl
mov
jbe
or
push
xor
cmp
jno
xor
adc
push
inc
data16
fstpl
mov
push
dec
aas
mov
imul
pop
lds
pushl
inc
test
jge
in
push
mov
jle
mov
les
fidivl
test
jb
jle
ret
mov
subl
cmp
push
jnp
xchg
in
popa
fnsave
icebp
iret
bswap
fimuls
loopne
and
or
pop
cmpsb
ljmp
push
mov
jp
pusha
jmp
xor
shlb
repz
cmpsb
in
lret
dec
ret
adc
std
leave
push
std
ds
jecxz
ss
insl
xor
xchg
lods
out
or
addr16
xchg
cli
lea
pop
jp
repnz
jb
add
bnd
mov
sub
jbe
imul
sbb
push
cmp
xchg
xlat
jno
hlt
push
add
into
cmp
sub
lock
jecxz
stos
mov
daa
insl
jns
shlb
flds
dec
add
xor
aaa
fnstsw
test
xor
pop
es
ja
or
jle
xor
pop
cmpsl
fmul
jno
je
aam
outsl
push
pop
imul
out
pop
pop
dec
rcrl
test
lds
dec
mov
enter
inc
add
jg
jne
scas
dec
arpl
jbe
call
mov
psraw
out
leave
xor
aas
ds
mov
push
cmp
mov
push
fsubs
ss
mov
mov
jg
shrl
stc
push
adc
push
xchg
mov
daa
jg
test
cmpsl
mov
mov
jae
dec
repz
pop
sbb
lret
pop
idivb
xor
clc
rclb
cmp
jb
mov
movl
add
xchg
loop
stos
dec
push
test
in
outsb
jge
push
cld
pop
pop
pop
bound
ljmp
mov
or
repz
aam
and
insb
test
cmc
imul
mov
sub
test
stc
stos
ja
aad
mov
sahf
sahf
jecxz
lahf
ljmp
xchg
and
adc
dec
mov
pop
imul
stos
jmp
dec
pop
mov
jp
jmp
xor
cmp
xchg
mov
aas
imul
scas
out
scas
sub
loopne
jae
push
std
andl
bound
shrl
sti
pop
popf
movsl
cli
xchg
std
sti
stos
inc
mov
lods
leave
or
jae
sbb
jp
sbbl
es
add
mov
aas
leave
inc
icebp
cmp
cmp
jb
jbe
adc
int
orl
adc
xchg
nop
mov
scas
and
cmp
push
cld
or
dec
sti
imul
dec
add
or
in
fimull
testl
mov
fisttps
jge
pop
pop
scas
jno
pop
pop
scas
sub
test
ljmp
icebp
or
ljmp
repz
int
cwtl
dec
cmp
dec
out
iret
dec
push
and
jae
nop
xchg
mov
ret
ds
jbe
mov
movsl
cmp
mov
cwtl
push
shlb
cs
popa
orb
jecxz
fucom
inc
fidivs
sar
xchg
xchg
shll
andb
cmpsl
jno
shrl
pop
testl
lret
push
int3
out
inc
pusha
shlb
ja
lahf
sub
test
sub
int
push
jo
mov
cmp
in
fiadds
lds
dec
fsubrl
loop
insb
push
dec
pop
daa
loope
icebp
in
mov
popa
and
clc
cmpsl
imul
cmp
mov
or
or
push
push
enter
sbb
adc
xlat
mov
pop
enter
pushf
xor
jecxz
and
inc
sahf
call
adc
xchg
and
jo
stos
mov
ss
shll
cmp
jbe
pop
les
lods
in
sub
daa
push
and
mov
or
in
cmpb
cmp
sub
bound
je
clc
mov
push
adc
repnz
mov
pop
mul
dec
stc
xchg
xorl
data16
test
adc
mov
shr
inc
arpl
mov
sub
mov
mov
jne
loopne
jno
adc
and
push
out
in
filds
shlb
es
lret
lods
push
dec
pop
daa
es
push
popa
and
lods
mov
push
cs
clc
inc
lahf
mov
jo
jecxz
and
pop
stos
push
in
dec
pushf
aaa
movsb
inc
ss
mov
push
jae
cmp
mov
lds
mov
pop
sub
jge
call
lcall
mov
cli
ja
test
call
mov
jne
leave
dec
test
mov
dec
mov
jb
cmpsl
data16
loope
shl
lds
mov
jmp
mov
mov
dec
stc
adc
pop
xor
mov
pop
bnd
loop
mov
or
and
movsb
mov
inc
xchg
cmp
loop
cwtl
sbb
inc
or
adc
in
dec
cmp
not
lods
mov
or
pop
mov
mov
testb
lods
push
sub
or
adc
fmull
mov
jbe
mov
mov
cmpsl
subl
add
shll
add
mov
lods
outsb
mov
stos
push
jns
ljmp
std
into
enter
ret
adc
mov
push
sbb
push
lret
add
fwait
sub
int3
ret
sub
scas
sarb
push
pushf
fidivl
lahf
inc
sarl
adc
sub
dec
mov
jno
push
adc
inc
xor
sbb
outsb
lock
addr16
mov
and
shll
int
jmp
push
cmc
dec
cmc
mov
bound
or
outsl
xchg
adc
ret
insl
push
xchg
addr16
in
lock
or
mov
out
dec
outsl
loop
cmpsl
lods
push
or
les
scas
jge
test
lahf
jno
and
lods
and
pop
jle
std
pop
pop
cmpsl
mov
jecxz
aad
aas
pop
cmp
push
mov
sub
in
fmuls
and
in
pop
and
aaa
dec
push
pusha
je
imul
mov
inc
jo
xor
loope
rorl
fnsave
notb
mov
shrl
xlat
mov
dec
xor
or
jns
mov
add
lcall
jns
mov
das
imul
add
xchg
push
shll
mov
imul
sahf
mov
outsl
int3
scas
xor
rcll
bswap
xor
imul
push
aam
dec
lret
aad
cwtl
repz
push
lock
ss
xchg
popa
fs
cmp
mov
out
adc
imul
pop
push
sub
or
jge
pop
dec
pop
or
sub
pop
in
cli
mov
repz
mov
cmpsb
rcll
daa
push
into
ja
in
ja
pop
and
hlt
cmpsb
push
jmp
xor
out
loopne
mov
pop
lea
cs
push
mov
jnp
stc
push
fwait
fwait
repnz
int
adc
push
xchg
ret
aas
test
jno
pop
sbb
stos
insl
dec
aaa
sbb
adc
cwtl
aaa
aam
loope
aas
jno
inc
cld
gs
mov
lcall
fimuls
add
jecxz
jp
add
stos
add
push
outsl
inc
sti
lds
js
imul
cmpsb
cwtd
lahf
pop
lret
sub
and
mov
xchg
fidivrs
leave
mov
add
enter
pop
int
inc
stc
clc
pop
sbb
loopne
lock
iret
aam
test
push
xor
mov
not
xchg
pop
popa
dec
jp
mov
sub
push
lret
test
mov
filds
xor
push
add
add
clc
addr16
repz
rorb
popa
cwtl
cmpsl
or
mov
mov
mov
loop
ret
add
xor
push
test
lds
lea
fisttpll
cmp
aaa
push
int3
cmp
cs
pop
xor
or
sbb
loop
xorb
mov
adc
aad
mov
or
in
cmpsb
dec
sbb
jmp
mov
mov
jmp
test
cmp
xor
xchg
adc
mov
and
inc
pop
repnz
arpl
test
cmp
shrb
ror
mov
enter
xchg
scas
ljmp
xchg
sbb
ss
test
sub
mov
pop
jae
xchg
or
pop
cmp
adc
add
cmpsl
rol
mov
add
divb
pusha
cmc
lods
jns
inc
fadd
mov
lds
mov
or
mov
fstps
xchg
hlt
mov
mov
loope
push
mov
test
xchg
xor
testb
mov
xor
sbb
das
xchg
fdivs
mov
in
or
jo
addl
xchg
mov
fs
loop
lock
sbb
xchg
addr16
stc
push
out
mov
xor
mov
pop
adc
pusha
aad
int
jmp
mov
subb
dec
jb
sbb
repz
dec
jp
into
mov
add
enter
cltd
push
cmp
cmp
xor
aaa
cltd
ss
call
push
pop
lea
xchg
or
dec
jecxz
adc
push
adc
das
into
pop
xchg
fidivl
js
in
pop
mov
fiadds
cltd
jmp
dec
sbb
orl
cltd
sub
out
icebp
test
pop
ss
or
xchg
jmp
and
fnstcw
int
lcall
xchg
cmpsl
ret
xor
fisttpll
lcall
adc
into
popa
div
ret
cwtl
jp
sbb
gs
cmp
cli
out
pushf
and
scas
jb
sbb
gs
jb
mulb
mulb
cmp
test
add
scas
movsb
mov
push
jbe
add
and
flds
out
inc
jno
lret
pop
cmp
and
mov
and
xlat
jbe
fldl
push
paddb
push
fstps
dec
sbb
xchg
mov
dec
push
dec
jno
and
adc
pop
clc
xchg
repnz
mov
xor
cld
fcompl
xor
mov
ja
or
push
in
outsb
scas
in
sub
ds
adc
push
mov
pop
cmc
cmpsb
arpl
push
in
adc
mov
pop
stos
mov
push
cs
adc
outsb
adcl
mov
icebp
ret
inc
push
push
xchg
mov
std
in
out
pushf
and
mov
incb
mov
add
test
mov
jne
inc
fiaddl
sub
add
outsl
cs
pop
fwait
push
out
jbe
mov
test
dec
loop
jp
pop
gs
jge
orb
pop
inc
sbb
mov
xor
push
notl
mov
and
daa
lret
xor
popf
lret
lahf
sahf
or
nop
mov
adc
fcmovu
into
add
push
vmovq
mov
dec
jecxz
inc
cld
mov
or
mov
dec
fsts
adc
stos
loop
repnz
push
ror
pop
imul
pop
jne
sbb
lods
out
sahf
sbb
pop
ja
mov
cmpsb
sub
movsb
insb
loopne
mov
push
pop
or
pop
adc
jmp
in
pop
vandnps
scas
daa
add
cmc
inc
shlb
or
jmp
xor
jmp
aam
adc
add
rcl
sbb
sub
ja,pt
mov
sbb
pop
lret
negl
xor
sarb
scas
dec
sbb
xchg
inc
cs
mov
and
pop
std
int3
mov
mov
cmpsl
add
inc
xchg
cmp
enter
dec
hlt
cld
adc
daa
push
sbb
push
xchg
add
sti
push
and
cmp
pop
and
fmul
fcomps
shl
sub
stos
mov
xor
inc
ficompl
je
jbe
pop
adc
jbe
test
int
mov
jmp
fs
pop
mov
sub
sub
pop
jne
das
cmpsl
into
add
rcr
xor
xchg
sub
jae
addr16
enter
lret
or
and
pop
pop
sbb
sti
sbb
pop
stc
lahf
test
lds
cmc
stc
sbb
jg
ror
pop
out
fs
jo
in
ljmp
nop
ret
adc
xor
jb
or
mov
mov
je
cltd
jmp
xlat
add
add
xor
jp
add
push
lahf
or
jnp
test
xchg
outsl
cltd
ficomps
xor
xor
cmpsl
push
ret
xchg
adc
jnp
pusha
add
fsubs
sub
imul
pop
cmp
aam
mov
pop
and
pusha
clc
add
idivb
or
loopne
stos
ja
hlt
in
sbb
xchg
lods
test
les
inc
imul
out
mov
add
flds
fsubl
out
fwait
leave
push
dec
es
jns
mov
inc
mov
cmp
test
push
dec
dec
pop
sbb
mov
adc
in
mov
enter
sbb
jecxz
popf
mov
inc
call
test
je
mov
ret
xchg
js
test
inc
iret
fidivrl
or
inc
mov
adc
pop
cmp
adc
jne
call
pusha
subl
call
push
jae
jo
cmp
pusha
sub
xchg
xlat
or
ljmp
ss
cmpsl
push
push
dec
clc
in
test
jb
jle
scas
dec
jb
pop
movsb
jne
pushf
aad
pop
add
jge
cld
mov
loop
negl
mov
outsl
cmp
pop
jo
iret
data16
dec
mov
add
jb
mov
mov
aaa
std
push
pop
aas
les
insl
js
or
cmp
gs
leave
repz
cmpsl
push
out
in
cltd
cwtl
mov
ret
mov
add
mov
clc
sbb
push
xchg
outsl
cmp
jge
in
mov
ja
es
sub
imul
fsubs
pop
dec
xor
sbb
icebp
lret
dec
lret
xlat
into
xchg
and
jle
repz
xor
jmp
cmc
add
fnstcw
lret
push
loope
clc
rcrl
pop
test
imul
fwait
pop
into
cmp
xor
aam
cmp
mov
hlt
movsl
fidivs
mov
sbb
and
push
adc
pop
negb
mov
mov
mov
xchg
mov
pop
adc
inc
rorb
in
dec
pop
loop
or
imul
and
arpl
imul
sub
mov
cmc
in
mov
aaa
lret
pop
pop
and
rorl
xchg
push
adc
cmp
jo
xchg
pusha
adc
hlt
mov
mov
inc
mov
inc
imul
or
cmc
repnz
sahf
add
add
test
jge
lret
sarb
pop
test
mov
adc
or
int
int3
mov
inc
xchg
push
shll
dec
sub
test
out
lds
insb
outsl
fldl2t
mov
cmp
dec
mov
lock
xchg
xchg
push
jp
inc
dec
and
add
jno
lock
enter
enter
inc
movsl
fidivs
and
inc
jp
imul
or
cli
test
adc
lcall
mov
xor
mov
pop
sbb
inc
mov
faddp
je
inc
push
orl
in
cmp
pop
fwait
add
xchg
jle
jl
pop
push
fists
aaa
ds
inc
mov
sahf
jl
mov
outsl
xor
out
mov
fcomps
ja
lock
add
sub
negb
mov
insl
or
inc
rclb
imull
cmp
mov
movsb
mov
dec
xchg
jb
sahf
scas
mov
shlb
pop
xor
js
popf
test
push
out
mov
pop
in
adc
fidivs
fldl
pop
insb
pop
sbb
in
mov
jle
add
mov
adc
or
push
mov
mov
sub
mov
adc
or
push
int3
jl
jne
pusha
mov
es
lds
outsb
sbb
iret
cmp
mov
dec
sbb
or
fildl
fwait
bound
add
pop
adc
inc
bswap
cltd
mov
mov
and
xchg
sti
mov
fstps
jl
lds
outsb
nop
push
rclb
ret
mov
sahf
and
pop
mov
dec
adc
fwait
xchg
mov
rcll
jns
fstp
pop
out
sub
sti
lea
dec
mov
dec
sub
xchg
lods
out
outsl
mov
clc
movsl
mov
inc
jge
adcl
xor
lea
dec
out
rorb
and
jge
pusha
adc
jae
dec
roll
cs
test
push
jne
insl
sbb
in
sar
push
out
adc
mov
fldenv
ret
sbb
imulb
shrb
xor
fmull
movsb
jb
int3
push
pop
push
js
xchg
fistl
dec
pop
in
mov
mov
jmp
call
add
sbb
adc
jmp
das
lret
js
popf
push
dec
push
ret
push
fs
popf
ja
and
xchg
pop
mov
repnz
pop
sub
cmp
inc
push
cmp
loopne
je
out
inc
stos
sarb
icebp
push
ret
jmp
pushf
dec
sub
push
push
js
sub
dec
adcb
incl
xchg
mov
pop
dec
xor
test
push
pop
sbb
scas
dec
divl
jns
dec
cmpsl
cmp
dec
imul
dec
jmp
add
mov
jmp
push
inc
pop
cmp
or
mov
loope
push
cmp
lcall
mov
mov
cwtl
sub
mov
push
js
pop
xchg
sub
in
jb
jno
adc
pushf
sbb
sub
outsl
dec
arpl
lea
rol
mov
out
jne
scas
fildl
jmp
in
fcmove
fidivrs
sahf
xchg
add
jp
mov
pop
cwtl
mov
movsl
mov
and
outsl
push
mov
lea
jl
xchg
mov
xorb
or
jecxz
mov
lds
jb
mov
jbe
popf
or
or
testl
xor
xchg
pop
aaa
inc
jnp
leave
mov
cmp
and
mov
fbstp
cltd
push
cmc
sbb
jmp
out
push
jmp
ljmp
dec
dec
xor
insb
bnd
shlb
pusha
out
jno
add
jg
adc
cmp
or
clc
and
loop
std
push
repnz
fimuls
lock
adc
xor
std
and
adc
insb
sbb
push
loopne
add
pop
sahf
stos
mov
les
mov
rorb
lods
adc
aad
push
xchg
jmp
jg
inc
pop
add
dec
nop
or
nop
ficompl
lods
jle
push
lea
insb
aad
aam
mov
xor
dec
push
ret
mov
xor
aam
push
cmp
repz
cltd
mov
xchg
lea
popw
add
movsb
repz
iret
aaa
scas
iret
mov
pop
das
dec
pop
push
inc
mov
mov
jge
dec
lcall
ja
lds
cmp
scas
sbb
les
jb
pop
mov
fists
inc
and
push
std
or
jnp
mov
or
and
fsubs
icebp
lret
and
mov
add
pop
jle
xchg
mov
lcall
popf
nop
cmp
out
sub
loopne
add
pop
es
inc
sub
inc
mov
addr16
push
adc
popf
or
rcr
jg
dec
lcall
pusha
xchg
inc
cmp
cld
xchg
es
jne
mov
movsb
xlat
or
aam
addr16
int3
xchg
ds
lea
out
lret
mov
fsubp
aam
jb
sar
adc
push
movsl
mov
push
ss
aas
pop
loopne
popa
int
lods
add
das
movsb
repz
repnz
push
sbb
adc
int
dec
lcall
das
testl
cmp
adc
das
lcall
notl
shrl
pop
cmpsl
xchg
dec
cmp
mov
jge
pop
xor
xchg
out
dec
fdivs
push
or
inc
vcvtss2sd
push
cld
pop
xchg
jp
stos
fcom
mov
test
adc
cmp
pop
insl
push
aad
jne
cld
mov
sub
xor
out
sub
or
pop
adc
je
inc
int3
jns
mov
pushf
addr16
adc
push
arpl
jg
aam
pop
jo
aad
push
repz
ret
loopne
out
fsubl
sub
and
hlt
lret
xor
les
xchg
fwait
and
in
ficompl
mov
or
sub
imul
or
push
sub
ret
dec
ja
jbe
adc
jg
xor
bnd
pop
jb
pop
dec
add
mov
push
pusha
and
pop
jns
inc
mov
or
insl
mov
mov
xor
jge
pop
push
insb
mov
bound
xchg
mov
jo
jge
andb
or
xchg
mov
clc
mov
cmp
sbb
loopne
dec
cmpb
or
jle
xchg
jl
pop
jne
and
inc
sub
cs
add
pop
adc
dec
inc
adc
jle
mov
insl
mov
adc
and
fincstp
fidivrl
lea
jecxz
add
pusha
ljmp
cmpsb
inc
push
mov
lea
mov
dec
in
mov
xchg
xchg
por
jp
push
ret
or
inc
pop
xchg
imul
jecxz
or
add
jne
das
cmp
cmpsl
jge
aas
mov
mov
ror
movsl
pushf
push
rcll
sbb
cmc
or
mov
pop
xor
orb
mov
adc
lcall
lahf
add
rorb
test
test
notl
pop
jmp
loop
jp
sbbl
or
jnp
shll
sbb
and
in
xor
mov
cmp
loop
mov
std
jmp
mov
or
and
aad
mov
inc
call
les
pusha
push
xchg
or
ljmp
jbe
inc
mov
mov
outsl
fimuls
fsubrl
sti
jmp
mov
inc
imul
lods
jl
lret
inc
xlat
popa
xchg
aaa
sub
mov
xor
in
int
rcrb
cli
les
lahf
or
shlb
adcl
in
add
push
nop
cmpb
stos
stc
or
in
dec
arpl
xchg
pop
adc
addb
or
jge
stc
aas
loopne
lock
pop
cmc
sub
sbb
push
movsl
out
ss
jnp
pop
or
mov
mov
cwtl
pop
adc
xchg
js
push
icebp
xchg
mov
fidivrs
sub
push
jp
mov
sbb
movsb
pop
fdivs
in
ret
xchg
sub
adc
sub
push
fnstcw
jb
mov
aaa
fildl
or
test
pop
dec
dec
and
inc
mov
mov
cmpsb
jae
push
inc
ret
ljmp
dec
push
xor
nop
adc
fmul
aas
ret
push
popa
das
pop
enter
mov
testl
rorb
inc
inc
add
inc
mov
pop
cmpb
stos
stos
push
mov
add
sti
pop
frstor
mov
rorb
cwtl
mov
mov
mov
mov
cwtl
add
adc
cmp
mov
hlt
push
mov
out
cmp
subb
jnp
dec
dec
push
mov
aaa
popa
stos
mov
xchg
aaa
push
shl
cmpsl
int
pusha
mov
mov
fs
push
dec
add
lea
add
xor
sub
mov
aaa
pop
je
mov
fisubrs
call
inc
inc
movsl
hlt
push
decl
sub
rclb
fs
lods
add
push
cmp
mul
lods
push
jmp
lods
cmp
sub
imulb
sub
mov
mov
and
mov
adc
dec
popf
loop
in
push
xor
jns
mov
dec
mov
jecxz
mov
or
xchg
sbb
fbstp
inc
in
out
movl
pushf
pop
sbb
imul
mov
inc
pop
sbb
push
shl
aaa
adc
xor
nop
fsub
mov
jl
mov
mov
dec
jmp
dec
mov
sbb
insl
jg
dec
outsl
cmp
jle
dec
loopne
xor
dec
cmpsb
xor
mov
outsl
cltd
sbb
and
cs
push
xchg
push
cmp
cmpsb
or
and
aad
imul
pushl
pop
fwait
sbb
std
vmovupd
mov
lods
xor
test
enter
ljmp
outsl
and
xor
xchg
in
aaa
jecxz
pushf
mov
mov
popf
adc
insl
push
insb
repz
shlw
lret
fcmovne
push
jo
jp
add
push
pushf
sbb
sbb
cltd
pusha
mov
push
and
jb
daa
in
test
iret
pusha
adc
sbb
orl
or
lret
push
fsubs
scas
outsb
add
sahf
ja
mov
in
scas
fisubrl
push
xor
bound
out
addr16
cmpsl
fdivrp
stos
aam
adc
dec
out
or
sti
sub
bnd
imul
sti
xor
ljmp
mov
addr16
cmp
add
outsl
cmpl
cmp
push
pslld
jae
mov
sub
pop
sub
fdivr
xchg
ja
idiv
adc
and
int
mov
cmpsb
loop
popf
pop
mov
enter
sub
insb
outsl
cwtl
add
out
test
xor
pop
lds
cmp
outsb
or
xchg
and
sub
shlb
or
mov
fsubl
or
mov
outsb
dec
or
push
jle
mov
add
loop
push
add
lcall
jae
push
lahf
mov
lds
divb
sbb
insb
fldcw
add
sahf
mov
cmpsl
sub
in
jg
loope
pop
cld
in
stos
test
mov
sbb
mov
jb
fs
jg
jbe
sbb
adcl
aaa
in
shll
cmp
rcr
int3
repz
shll
cmp
xchg
sarl
mov
lock
icebp
mov
xchg
call
and
cmp
cmp
imul
into
jne
leave
cmpsl
dec
pushf
dec
pop
sbb
sbb
repz
movsb
test
lods
adc
cs
ret
adc
test
repnz
pop
subb
mov
out
pop
js
rcl
jnp
int3
push
out
add
test
lcall
and
xchg
push
int3
cmpsl
mov
test
addr16
add
add
inc
repnz
popf
test
lahf
loope
xchg
ljmp
sub
jbe
sbb
mov
sub
lcall
mov
and
insb
mov
movsl
sar
mov
jmp
xchg
mov
cmp
repnz
not
adc
out
mov
mov
push
call
enter
sub
push
xchg
stc
sub
adc
dec
xchg
xor
icebp
cltd
testb
scas
xor
orl
cmpsl
cwtl
xor
dec
push
in
rol
push
inc
sbb
push
mov
out
cmpsb
add
js
in
lods
int
lret
mov
or
stos
repz
push
add
addl
sub
and
inc
xor
nop
xor
ficomps
mov
or
jp
xchg
imul
popf
addr16
js
out
jecxz
imul
sbb
popa
adc
push
pop
or
jb
fstpt
mov
pop
adc
sub
dec
out
cwtl
cmpsb
adc
and
stos
mov
out
sti
and
push
fisttpll
mov
mov
sbb
mov
repz
pop
jo
call
int
fwait
test
ds
jmp
cmp
sti
lea
xchg
xchg
test
xchg
adc
cmpsl
inc
dec
push
and
es
sbb
or
mov
xchg
push
pop
stos
mov
push
loope
out
mulb
das
or
jnp
sub
push
dec
lcall
stos
int
mov
mov
test
mov
icebp
cli
cwtl
psraw
and
pop
sbb
dec
mov
sub
shrb
cwtl
js
and
inc
mov
push
andb
or
out
and
es
jl
dec
add
dec
inc
idiv
out
mov
scas
mov
sahf
das
lret
mov
bound
lods
jne
pop
mov
jl
xchg
jg
addl
repz
sub
insb
ja
in
outsl
lahf
fwait
dec
cltd
mov
aad
push
sbb
popa
out
addr16
loop
gs
bound
mov
sub
ret
stc
loope
mov
add
std
xchg
negl
in
lahf
pop
xchg
inc
inc
out
push
inc
out
mov
mov
out
insb
insl
xchg
fst
inc
cmpb
repz
or
push
sbb
mov
call
push
mov
daa
repz
cld
ss
rcrb
mov
sub
mov
add
pop
sbb
adc
imul
lds
xchg
mov
fcmovnb
sahf
scas
jne
jge
pop
mov
aas
add
mov
bound
aas
jae
push
xchg
add
jns
sub
jae
jg
jbe
dec
sub
ficoml
repnz
jle
aaa
push
popf
xchg
adc
push
int
nop
xor
lods
cld
jbe
push
pop
jne
push
rcrl
mov
xor
mov
adc
loopne
adc
loope
clc
xlat
fidivl
cmpsl
mov
jecxz
push
ss
dec
pop
lock
xchg
lods
fs
fs
dec
fs
js
or
sti
mov
fsub
mov
push
shrb
jecxz
lods
mov
ja
xor
xor
test
loop
mov
dec
lods
and
sub
or
sbb
xsha1
cmpsb
or
jp
test
ljmp
or
jbe
xchg
xlat
call
cmp
fdivp
int3
sub
push
mov
lret
insl
es
cmp
pop
push
push
xchg
or
add
int3
pop
repz
push
xor
inc
out
imul
push
mov
icebp
and
pushf
sbb
xor
lock
or
shlb
pop
cmpsl
ret
sub
test
shlb
clc
pop
xor
test
call
movsl
adc
loope
out
mov
push
mov
aaa
add
dec
dec
or
cld
lods
test
test
push
mov
push
or
js
mov
mov
enter
push
sub
sarb
adc
cmp
test
adc
jecxz
add
xor
mov
shrl
cmp
cli
punpckldq
cmpsl
mov
mov
out
repz
jae
faddp
push
jp
cmc
mov
fsubr
sub
pop
ds
es
iret
dec
je
outsl
dec
iret
movsb
push
xchg
mov
mov
sbb
call
cmp
xlat
flds
in
mov
and
push
cmp
pop
lock
adc
nop
pop
sarb
jl
outsb
test
cmp
mov
push
mov
xchg
lods
or
imul
or
mov
mov
pop
int
and
ss
inc
push
mov
cmp
in
mov
push
cld
cmp
test
add
push
cmpsl
insb
jl
or
clc
lret
sub
popa
push
mov
xor
or
scas
xchg
push
sub
adc
push
mov
cli
test
lods
clc
push
fucomip
jle
jae
in
cwtl
mov
out
dec
arpl
mov
xor
or
mov
inc
mov
mov
fdivs
lret
pop
in
gs
movsl
fmull
mov
fstp
cmpsb
mov
lds
mov
sbb
pop
push
xchg
cmpb
xorl
and
mov
sub
dec
sbb
pusha
sbb
xchg
or
or
bound
popf
push
jo
sbb
popf
xchg
cltd
jno
repz
pop
ret
jmp
xlat
call
scas
pop
scas
jecxz
pop
cli
dec
loopne
xchg
sub
jmp
cmpsl
mov
inc
scas
aas
jle
mov
inc
int3
ftst
pop
ljmp
sbb
sti
add
sbb
ret
jns
mov
in
cmp
xchg
inc
mov
sarb
call
sbb
mov
addr16
mov
mov
frstpm(287
xor
or
or
es
dec
jmp
jnp
dec
jp
test
mov
repnz
cmp
popf
ja
add
push
add
mov
adc
mov
in
xchg
xchg
cld
sbb
push
pop
jecxz
sbb
out
push
mov
test
sub
lahf
mov
push
popf
xor
jbe
push
insl
repnz
notb
xchg
mov
ljmp
es
dec
jmp
pop
and
or
sbb
or
cmpsb
imull
cs
jbe
aad
sbb
xchg
jnp
inc
push
dec
mov
add
pop
jle
lahf
movsb
mov
nop
push
lret
jo
test
inc
inc
dec
mov
mov
loopne
loope
mov
ds
add
cmpsb
cmp
pop
and
inc
orb
mov
or
mov
dec
cmp
int
call
aam
stos
inc
push
mov
xor
sub
outsb
and
sub
negb
mov
add
pop
lds
into
add
jp
maskmovq
divl
add
imul
test
outsb
lods
add
repz
pop
lds
sbb
movsl
pop
pop
ljmp
outsl
fidivl
imul
push
inc
push
push
test
add
pop
mov
adc
out
imul
add
out
sar
jle
pop
cwtl
push
loope
push
insl
pop
pop
xchg
pop
cmc
add
jbe
ret
pop
andb
adc
pop
and
push
mov
push
jae
lcall
imul
xchg
outsl
dec
das
lods
push
dec
and
push
arpl
daa
outsl
mov
into
in
inc
fs
dec
xchg
cmp
lahf
inc
gs
fs
popa
adc
xor
aaa
cld
push
sub
mov
or
enter
mov
lcall
dec
mov
lcall
xchg
sub
insl
sub
mov
mov
das
loope
mov
rorb
scas
jmp
lock
jp
mov
or
mov
dec
xchg
jae
adc
daa
mov
mov
and
and
fbstp
sbb
mov
fiaddl
push
mov
adc
call
cmc
push
lahf
adc
lods
inc
mov
repnz
jp
test
pusha
dec
push
das
xchg
xchg
push
out
ss
push
clc
add
add
pop
xchg
and
mov
add
push
popf
loopne
repz
xchg
jecxz
mov
cld
shlb
xchg
cld
fdiv
sub
movsb
cld
iret
out
hlt
into
mov
aad
pop
mov
sbb
fidivs
push
aam
lahf
sub
je
xor
ds
push
xor
cwtl
repz
sub
sar
or
daa
and
call
sbb
shlb
dec
xchg
jmp
stos
ret
push
lock
and
cld
mov
mov
pushf
dec
in
push
push
inc
sbb
or
pop
xchg
xchg
cmc
xlat
arpl
subl
mov
pop
gs
pop
pop
in
nop
in
iret
xchg
mov
out
push
cmp
outsw
sbb
adc
push
adc
push
adc
sub
jae
icebp
or
xor
lock
lcall
or
sbb
es
xor
outsl
push
fldt
pop
test
pop
stos
pop
mov
inc
lcall
fists
ja
loope
jmp
aam
sub
popf
ret
ds
cmpsl
or
sarl
cmpsl
dec
inc
jecxz
inc
les
dec
aaa
js
mov
out
mov
jmp
adc
inc
xor
ret
sub
movsl
mov
adc
imul
lret
enter
movsb
fimuls
jl
mov
xor
scas
mov
mov
bnd
movsl
mov
mov
sahf
dec
out
and
cmp
out
popf
hlt
mov
jecxz
sti
or
add
mov
fisttpll
push
test
fildll
push
pop
pop
icebp
xchg
fadd
xchg
je
jmp
mov
sti
mov
mov
imul
aam
outsb
leave
push
sbb
test
or
and
in
pop
in
mov
jae
and
xlat
lock
mov
add
leave
test
fucomp
das
dec
fs
ret
js
movsl
push
dec
jge,pn
cmp
test
xor
push
xchg
iret
or
loop
xchg
push
or
and
rcll
shrb
mov
lods
push
cmp
cmpsb
fsubs
sub
xchg
add
mov
or
pop
popl
je
nop
fstpl
and
mov
and
sub
data16
out
jge
sub
mov
sub
incl
fnstenv
and
push
or
add
jns
and
lret
add
sbb
sub
cltd
inc
dec
sbb
pop
fs
aad
jns
and
push
ss
sbb
or
mov
shrb
test
ljmp
in
cli
fistl
inc
push
push
lahf
and
add
jae
frstor
in
add
add
mov
jne
je
xchg
call
inc
ficomps
xchg
xchg
out
mov
movsl
push
dec
jle,pn
into
stos
pop
cmc
data16
rcll
xchg
ret
loop
add
rcrl
jle
pop
xchg
ret
out
pop
movsl
add
mov
fs
rcrl
mov
xchg
dec
mov
out
mov
xchg
call
adc
cli
push
push
xor
sub
scas
adc
cmp
fmulp
push
in
pop
xlat
mov
mov
out
jmp
icebp
adcl
in
push
sbb
aaa
out
or
repnz
aad
pop
adc
dec
outsl
sarl
jl
mov
adc
faddl
push
fildl
sub
xor
push
out
mov
jecxz
dec
es
xor
cltd
lods
xchg
mov
add
cmp
jmp
int
jmp
lahf
les
icebp
sbb
ret
shll
ljmp
mov
pop
fs
in
adc
push
xor
mov
and
cmp
outsb
addr16
sub
int3
inc
out
ret
das
test
sbb
lret
mov
pop
lret
ret
xor
push
xor
mov
je
outsb
mov
mov
cmc
sub
mov
mov
sbb
cmp
aad
mov
xchg
and
or
adc
bnd
jg
mov
ljmp
mov
sbb
sbb
mov
sbb
aad
dec
arpl
xor
shll
pop
inc
sub
ljmp
lea
pop
mov
data16
outsb
and
push
lcall
inc
aaa
outsb
orl
xorl
sub
inc
sahf
mov
inc
fcmovbe
adc
sahf
std
rorb
mov
cmpsl
mov
adc
lods
mov
shl
pushf
sarb
and
cwtl
shlb
shrb
push
orl
jg
mov
adc
xchg
mov
icebp
adc
sub
dec
stc
dec
insl
push
push
pushf
shl
cwtl
dec
mov
pusha
scas
cmp
sub
xchg
lods
mov
adc
sbb
dec
fwait
xor
xchg
mov
jg
fsubr
je
dec
and
sahf
cltd
das
test
jmp
pop
mov
xlat
idivb
sub
movsl
push
mov
push
aam
andl
ret
shlb
shlb
push
cmp
rcl
lcall
xchg
mov
xchg
add
fwait
xchg
add
cltd
aam
xchg
and
inc
sub
js
inc
adc
jecxz
mov
aaa
negb
pusha
pop
subl
add
lret
cmp
rcrl
mov
inc
fstps
orb
push
jle
mov
repnz
inc
adc
sbbl
mov
pusha
leave
or
cmp
stos
cmpb
cs
xchg
pop
dec
and
push
jnp
fnstenv
push
aaa
lds
sbb
stc
push
sbb
push
mov
pop
sbb
out
sub
dec
stc
inc
sub
out
pop
fsub
les
je
insl
mov
loopne
imul
aas
fdivrl
mov
xchg
xchg
pop
repnz
inc
pop
stc
imul
mov
das
add
stc
mov
fisubrl
cmp
cmpb
adc
adc
xrelease
mov
pop
aas
mov
push
sbb
dec
fcoms
rorb
or
lcall
push
out
loope
sahf
stc
loope
xchg
pop
out
sbb
ja
xor
adcb
push
sbb
cmp
dec
sbb
test
popa
sbb
neg
mov
mov
mov
test
out
adc
clc
loop
pop
mov
into
ljmp
and
jmp
jecxz
sbb
jmp
cltd
testl
lcall
lret
roll
int3
mov
lock
jno
shlb
jg
push
and
xchg
scas
sbb
xchg
xchg
add
nop
adc
xor
sbb
pusha
lret
movsb
out
add
fidivrl
push
lea
lods
xchg
sub
gs
push
repz
imul
in
sub
ss
scas
imul
fidivrl
sub
jmp
xor
mov
mov
pop
inc
inc
and
push
pop
xor
sbb
and
xchg
inc
add
jg
dec
jmp
sbb
dec
xchg
xor
aam
mov
aas
pop
cmp
cmp
pop
cmpsl
imul
jb
mov
or
pop
fcmovbe
push
mov
aaa
mov
mov
xchg
adc
mov
sti
out
addb
or
mov
enter
jecxz
dec
test
cmp
push
sbb
mov
gs
loopne
inc
add
jmp
int
mov
mov
cltd
mov
push
mov
daa
fimuls
lds
xchg
sbb
xor
rorl
cmpsb
in
inc
sbb
mov
lahf
adc
imul
ljmp
adc
enter
addr16
adc
xchg
push
fsubrl
pop
test
aas
outsb
mov
push
enter
mov
dec
aas
inc
xchg
ret
or
stc
ret
out
dec
adc
pop
xor
in
les
test
movb
xor
stos
push
mov
jae
jo
sbb
pop
ret
mov
repz
xor
test
cmp
adcb
push
jmp
mov
lods
aam
stc
out
push
rcrb
pop
and
scas
mov
in
cmc
arpl
cmp
adc
pop
outsb
inc
cmp
es
popf
int3
mov
test
cmpsl
xchg
mov
enter
adc
in
fwait
xor
je
adc
sbb
xor
gs
adc
int3
cmpsl
in
push
lahf
dec
fistps
jbe
pop
add
clc
cmc
add
push
out
lret
push
sbb
xor
shll
scas
push
movsb
mov
in
hlt
xchg
fsubl
in
lahf
mov
and
lods
int3
xchg
inc
sarl
cwtl
jo
incl
xchg
or
lods
je
test
jo
pusha
bound
jl
mov
or
test
or
aad
inc
and
test
decb
sahf
xchg
sbb
dec
fs
into
aam
dec
sub
mov
inc
lods
addb
out
adcb
lcall
pop
xor
or
loopne
notl
shl
cmp
xor
pop
rcll
and
jnp
test
lret
sub
adc
push
ret
cmc
lret
jecxz,pt
mov
movsb
mov
cs
adcb
mov
push
es
pop
insb
inc
sub
xchg
lret
and
sbb
bound
out
cwtl
popf
or
shr
push
push
in
pop
loope
cmp
cmp
test
mov
adc
std
jmp
or
inc
shll
sbb
xor
pop
mov
sti
cmp
test
fisubrs
jp
cmp
bound
cmp
xor
add
jge
adc
mov
fadds
jo
adc
dec
cmpl
add
xor
movsb
mov
mov
pop
pop
roll
rolb
push
lahf
pop
cmp
mov
imul
cltd
aam
cmpsb
and
sub
scas
add
aas
cmp
push
adc
icebp
push
dec
jp
hlt
cmp
in
lds
mov
push
ret
hlt
mov
jmp
xchg
pusha
mov
popf
and
aaa
push
leave
push
sub
inc
mov
or
call
sub
sbb
pop
jo
clc
insl
insl
mov
pop
or
push
adc
jp
lret
nop
mov
xor
cmp
or
cwtl
popl
mov
sub
jle
jne
push
int
scas
loope
lahf
sbb
sbb
scas
cmp
bound
movq
xchg
dec
bnd
mov
rorb
sti
cltd
cmp
call
pop
ss
adc
mov
xchg
aaa
mov
mov
sub
inc
cltd
ss
add
inc
fstl
xchg
jo
inc
stc
push
and
test
lds
sub
cltd
minps
or
pusha
rcrl
cli
arpl
rcll
out
popaw
call
fidivs
mov
rclb
sarb
ds
mov
mov
mov
add
jl
inc
jae
popf
pop
js
ret
andl
test
push
mov
pop
push
test
inc
add
pop
xchg
mov
and
sub
loope
inc
push
jg
fwait
add
mov
jne
cmp
sbbl
xor
out
and
scas
push
in
mov
push
das
lods
mov
mov
xor
das
imul
idiv
scas
pusha
insl
adc
add
cmp
jle
jp
aaa
aas
adc
jg
dec
lret
jle
ret
jns
cld
sti
inc
mov
jae
std
lahf
sub
test
fimull
in
mov
int
lahf
test
mov
repz
adc
repnz
es
push
sbb
pop
outsb
mov
mov
in
ficomps
insl
aad
push
adc
mov
inc
sub
inc
xchg
mov
cmp
xor
push
xchg
test
push
push
add
dec
inc
and
adc
jae
pop
das
jbe
inc
enter
das
push
add
or
incb
mov
ja
jno
sbb
or
cwtl
mov
loope
push
sub
sub
movsb
nop
fistpll
mov
or
lret
hlt
hlt
out
and
ja
push
cmp
scas
int3
mov
add
xchg
sub
mov
shl
xlat
mov
mov
add
imul
push
sbb
popf
inc
dec
scas
aas
push
ss
pop
cmp
lods
pop
out
shll
mov
adc
push
enter
or
mov
xchg
cwtl
mov
xlat
pop
adc
sbbl
push
push
xchg
loope
lret
jo
arpl
dec
out
lret
lahf
sbb
das
inc
lods
push
inc
sbb
fs
sub
xlat
jg
aam
out
mov
add
xor
pop
mov
push
sub
setae
mov
and
popf
aad
jmp
test
or
and
nop
jo
les
ljmp
or
push
scas
out
js
add
cmpsb
or
mov
neg
iret
int
cs
fiaddl
push
out
add
push
xchg
fs
or
mov
mov
add
stos
cmp
push
xor
insl
ljmp
add
popf
cltd
lret
jp
push
sub
fmull
jl
xor
xor
jbe
mov
xor
add
pop
addl
inc
or
jg
sub
jle
cmp
sub
repnz
lock
jbe
jmp
mov
andb
out
cmp
fbstp
push
mov
repz
sbb
or
scas
aad
push
in
lcall
inc
jns
fmuls
cltd
pop
icebp
mov
fwait
lock
int3
xorl
inc
inc
add
stos
push
outsl
lret
xor
out
or
and
aam
push
out
adc
mov
jo
and
jb
flds
idivb
cwtl
ret
arpl
repnz
dec
xor
lret
jge
cmp
in
mov
mov
add
cld
cwtl
adcl
pushf
rcll
hlt
lock
sbbl
mov
sub
add
jle
jb
out
and
test
shll
adc
inc
push
lods
cld
mov
in
shlb
mov
int
mov
scas
ljmp
cmp
in
and
scas
add
mov
shlb
mov
mov
enter
pop
xor
adc
sub
mov
mov
aas
ret
mov
mov
lock
adc
dec
std
in
xor
test
dec
add
xchg
aam
fdiv
push
std
rcll
push
popl
jae
ds
bound
pop
adc
xchg
jecxz
lods
out
loop
or
lret
adc
jno
push
mov
stc
or
mov
xchg
dec
dec
dec
xor
mov
mov
and
repnz
cmp
pop
out
xor
mov
xlat
and
inc
cld
icebp
or
je
xor
dec
mov
sbb
cmp
pop
daa
add
sahf
sub
xchg
ljmp
insb
jmp
or
xchg
push
lods
mov
mov
jne
pop
lods
inc
ljmp
pushf
push
pop
cmp
movsl
adc
ljmp
push
ret
jne
or
popa
add
pop
scas
inc
pop
out
dec
out
insb
rcr
push
loope
lock
fbstp
dec
mov
cld
int3
sbb
xchg
dec
inc
cltd
pop
mov
push
arpl
sub
sahf
pop
aad
inc
cmp
cmpsl
push
push
test
adc
push
inc
cltd
mov
and
dec
int3
das
push
out
cltd
push
fisttpl
add
mov
xor
mov
xchg
outsb
adc
lods
mov
jl
mov
outsb
cmpsb
addl
cld
in
movsl
ljmp
insl
lahf
xchg
pushf
jnp
cmp
pop
pop
dec
xor
pop
mov
or
xor
sub
or
out
add
ret
jne
xor
decb
cmc
cmpsb
xchg
cltd
rolb
mov
jecxz
push
rcl
outsl
or
shrd
dec
js
jg
outsl
and
sbbb
arpl
mov
inc
adc
loopne
mov
cli
mov
fdivr
push
pop
cltd
inc
push
daa
dec
cld
dec
leave
movb
dec
push
ret
into
and
shrl
fadds
outsl
fstpl
cmpsb
das
cmp
imul
shll
in
mov
ss
lcall
mull
push
int
and
fstpt
mov
pop
test
sbb
jne
arpl
enter
inc
sub
cmp
push
movsb
sarb
int
lret
push
popa
add
cmp
lret
mov
shrb
or
dec
shl
or
daa
xchg
out
aam
xchg
mov
test
xor
dec
add
cld
or
out
adc
mov
sbb
adcb
adcb
pusha
pop
jne
lods
nop
xor
push
push
daa
loope
out
push
repz
movsb
rolb
aam
les
popa
mulb
rolb
fdivr
mov
lds
imul
sahf
std
lds
fcomps
sbb
mov
mov
fcoml
fs
push
enter
ret
jno
mov
idivb
push
or
jne
mov
inc
and
testb
sbb
push
fs
aaa
jnp
inc
std
adc
rorb
pusha
jns
in
jge
ror
int
cmpsl
dec
decb
mov
in
mov
nop
push
xor
cmp
mov
cmp
stc
mov
mov
or
fwait
jg
add
push
mov
sub
test
push
fsubr
sub
orb
dec
mov
leave
int3
inc
mov
mov
mov
and
pusha
cld
fiaddl
mov
loopne
jmp
int3
push
push
xchg
push
vpaddusb
adc
out
aaa
inc
loope
cmp
pop
dec
test
and
in
mov
dec
xchg
imul
inc
xor
cld
mov
addb
fs
cmp
daa
xchg
cmpsl
rorb
gs
jge,pt
int3
loopne
push
xor
mov
mov
out
aad
int3
insl
mov
stos
push
jmp
ss
enter
and
inc
in
jp
xchg
fmulp
mov
stos
sahf
lahf
xor
into
stc
out
aaa
mov
xchg
sub
movl
leave
mov
push
dec
push
dec
orl
jo
xchg
faddp
adc
lret
mov
cmpsb
stc
sbb
xlat
cmp
jnp
js
push
lods
mov
mov
inc
ds
popf
dec
push
or
jo
loope
cmpb
jns
in
add
jb
stos
push
cmp
lcall
jne
sub
adc
mov
or
xchg
fcmove
or
std
xor
fwait
dec
pop
int
mov
push
repz
imull
fisubrs
pop
adc
adc
fs
push
xor
adc
in
push
insl
sbb
adc
call
dec
pushf
shlb
push
aad
cmc
mov
mov
sahf
push
mov
mov
add
test
adc
cmp
imul
lret
decb
push
lahf
xchg
lods
jp
inc
insl
or
lods
cmp
or
dec
cmp
mov
pop
sbb
sbb
jl
lock
es
insl
scas
es
xorb
inc
stos
lahf
arpl
xor
imul
mov
jecxz
in
mov
adc
add
lods
or
jmp
ss
mov
test
inc
das
jg
add
sub
cmpsb
push
call
ret
dec
or
jbe
lret
cmp
clc
add
out
sub
sub
push
aaa
xlat
mov
repz
cmp
jnp
push
jg
aas
pop
add
xchg
adc
cmp
mov
sub
mov
sub
inc
or
adc
cli
sbb
jg
xor
cmp
cld
adc
adc
nop
inc
jecxz
fsubr
push
cmp
es
mov
rol
mov
call
int
adc
push
ja
xchg
push
pop
pop
cmp
in
andl
lods
push
popf
in
mov
incl
les
cli
adc
sbb
xor
mov
xchg
fs
enter
ljmp
js
mov
dec
popa
mov
cmp
lret
ret
sub
out
or
jmp
dec
arpl
lods
pop
ja
push
pop
dec
leave
aaa
mov
clc
fbstp
fldl
adc
sub
inc
std
rolb
lock
or
out
xlat
aad
popa
aaa
push
mov
jnp
aad
loopne
jb
in
sbb
scas
ss
cltd
mov
xor
or
je
xor
cmp
sub
lds
inc
orl
mov
cmpsl
into
mov
and
icebp
adc
or
adc
data16
and
xor
mov
mov
aam
mov
dec
in
in
mov
and
mov
scas
outsb
sbbb
in
pop
pop
pop
inc
mov
pop
xor
add
pop
pop
add
inc
cld
inc
add
jge
out
insb
xor
mov
cli
lea
repnz
in
cltd
ficomps
dec
outsl
les
es
add
leave
dec
icebp
stos
stos
in
aas
push
add
mov
push
xor
fucomip
sbb
popf
cli
xchg
mov
ret
test
in
or
pop
lock
mov
cmp
cli
sub
sub
js
jbe
dec
sub
xchg
pop
jb
repz
fisubs
std
xor
sbb
cmp
mov
outsb
inc
sbb
std
sub
jmp
jp
clc
std
xchg
mov
ljmp
push
xor
shl
or
inc
imul
jmp
sbb
cli
xchg
jecxz
xchg
fdivrs
mov
test
popa
pop
sti
pop
loopne
adc
xchg
in
mov
stos
stc
fdivrl
ja
push
xchg
sahf
cld
xor
cmp
inc
mov
hlt
and
loop
loop
dec
test
repnz
out
jne
xor
sahf
mov
das
mov
ret
xlat
inc
add
or
pop
cmpl
hlt
pop
pop
push
sub
xchg
and
mov
or
enter
and
das
fsubs
sbb
pusha
mov
lds
push
pop
sub
insl
loop
pop
jne
loopne
push
inc
jb
test
xor
dec
lret
movsb
adcl
ss
inc
jnp
cmp
jo
seto
lea
adc
daa
imul
xor
gs
call
out
push
outsb
cmp
cmc
xlat
jecxz
mov
lahf
loope
lcall
out
dec
movsb
lock
mov
inc
add
push
xchg
sti
lock
dec
mov
xchg
ss
jo
mov
push
shl
inc
mov
aam
sub
add
xchg
std
adc
pop
jl
and
fdivs
das
sub
cwtl
data16
push
aad
std
outsb
jns
sub
and
cmpsl
cmpsb
lea
aad
sub
fcmove
pop
out
mov
notb
ret
arpl
outsb
decl
sub
dec
fadd
cs
xor
clc
pop
lret
fcoms
mov
stc
pop
fstpt
imul
lret
lret
xor
inc
rolb
xchg
mull
jl
mov
inc
or
add
mov
mov
das
scas
sbb
into
ss
cmpsb
in
push
roll
repnz
shlb
movsl
ljmp
outsl
lods
ljmp
inc
sbb
arpl
clc
push
jnp
movsb
clc
push
aaa
sbb
ja
icebp
scas
add
xor
in
hlt
lret
xchg
jne
pushf
xor
xor
lret
inc
sub
and
testl
stc
out
scas
jnp
ret
das
sub
into
sbb
std
push
out
lahf
xor
sub
jbe
jns
push
xlat
adc
outsb
jns
push
or
and
xlat
ds
add
pop
inc
gs
mov
lahf
inc
out
out
mov
into
popf
mov
movsb
shll
icebp
aaa
mov
hlt
push
xor
pop
sahf
mov
push
jecxz
dec
pop
xorl
xchg
xchg
je
mov
xor
pushf
inc
roll
mov
inc
xchg
inc
jne
jp
adc
jno
cmp
xlat
inc
or
iret
sbb
test
push
addr16
ds
iret
stos
and
addr16
push
dec
jmp
xor
lret
push
and
push
jmp
cwtl
fidivs
xchg
data16
lahf
mov
sub
and
jle
sub
les
daa
test
xchg
cmp
xor
nop
add
hlt
fsubp
das
mov
sar
shll
add
lret
or
jne
jp
cmpsb
jecxz
cld
in
adc
fsubrl
and
jne
add
in
pop
push
adc
mov
jp
loopne
push
inc
mov
mov
es
mov
dec
pushf
icebp
icebp
lret
int3
xor
fidivrs
mov
mov
imul
bound
adc
movsl
push
sub
aaa
push
nop
jg
push
arpl
lods
not
sub
add
test
outsw
testl
sti
xor
mov
pop
test
bound
movsb
sub
push
stos
xlat
push
dec
out
push
out
push
mov
or
aaa
in
lcall
imul
and
push
push
popa
int
jns
jl
loopne
cmpsl
rcll
imul
inc
cmc
push
jle
and
gs
loope
add
or
sbb
cmp
mov
add
xor
jmp
cld
mov
lahf
rcr
xchg
imul
jg
sbb
loopne
hlt
cmp
dec
mov
xorl
shlb
jle
jo
in
je
ss
fisubrs
fistpll
or
mov
pop
in
repnz
mov
out
add
pop
stos
movsb
mov
xchg
in
arpl
test
pop
mov
loopne
icebp
and
xor
fnstcw
xchg
cmp
int3
pop
popa
push
and
negl
jle
jecxz
mov
mov
mov
dec
or
cs
pop
mov
cmp
push
pushf
gs
fucomip
xlat
push
dec
lock
insb
mov
xor
mov
fs
ret
es
loop
xor
pop
stos
mov
sbb
jl
push
xor
aas
das
std
or
cld
push
daa
add
fistps
ss
inc
fidivrs
dec
in
mov
jmp
lds
call
mov
cmp
lcall
sub
pop
faddp
scas
adc
cli
ss
jg
lret
jge
popa
dec
ljmp
insb
bound
cmpsl
and
aad
jmp
out
push
mov
cs
push
jns
pop
rorb
mov
and
repz
mov
nop
fisubrs
fildll
call
mov
or
int3
pop
dec
push
add
xchg
mov
mov
lods
xchg
xchg
jno
sub
fcmovu
mov
das
cmpsb
xor
cmp
arpl
pop
jae
cmp
lods
sbb
inc
push
movd
pop
outsb
out
push
jb
fisubrl
repnz
xchg
es
ljmp
std
xchg
or
xor
loope
test
test
ret
cmp
inc
mov
cmpsl
mov
jg
mov
int3
cmc
andl
sbb
mov
jne
mov
push
outsl
jne
ret
mov
sub
pusha
mov
cmpsb
flds
mov
pop
in
arpl
stc
insb
clc
push
jmp
sub
and
test
fucom
push
cwtl
jae
sub
leave
jg
repz
data16
insb
fiaddl
add
fs
sbb
dec
push
xchg
int3
xorb
add
test
pusha
and
outsl
jns
xchg
dec
add
cmp
jb
test
ljmp
xchg
xchg
push
jl
xor
or
in
push
sub
fimull
sbbl
xor
fadds
push
mov
sbb
jg
mov
push
mov
mov
shrb
xchg
stc
test
out
jmp
or
jno
idivl
adc
mov
push
sahf
pop
std
lea
hlt
addr16
out
dec
jbe
cmp
ret
mov
push
pop
or
and
dec
bound
or
test
xor
xor
mov
aad
imul
xor
mov
and
stos
mov
push
enter
fcmovne
pop
clc
inc
sbb
mov
aam
dec
fildl
repnz
lods
rcrl
call
cmc
jecxz
imul
adc
test
data16
pop
or
adc
les
sub
imul
insl
push
push
std
pop
rcrb
ficomps
and
mov
in
xchg
lcall
jne
sbb
mov
or
sub
ss
mov
das
jns
mov
in
cmp
aam
and
jmp
or
mov
or
leave
mov
pop
cmpsl
push
sarl
fdivl
div
loopne
outsl
push
push
addl
mov
mov
test
push
in
fwait
jns,pt
jnp
clc
push
std
and
cld
fldenv
or
xor
cmpsl
cli
outsl
ret
rolb
xor
sub
pop
in
adc
sbb
flds
js
sbb
pmaxsw
add
aaa
imul
jp
notl
mov
dec
push
cmp
adc
xchg
enter
mov
pop
and
aam
push
jg
lahf
mov
xchg
into
xor
and
and
mov
aad
jb
mov
xchg
dec
movsl
gs
cmp
adc
pop
xchg
mov
mov
fsin
ja
add
mov
cmc
into
jl
dec
inc
aaa
mov
fwait
popf
mov
loope
mov
int
iret
mov
or
aam
xchg
mov
add
xlat
sub
jl
iret
push
scas
sbb
sbb
fcoml
push
cmp
sarl
out
inc
stos
imul
call
sbbb
int
and
repz
icebp
cmp
or
xor
ljmp
dec
lock
cmpsb
xor
and
inc
cmp
lahf
stos
xor
xchg
iret
fisttpl
repz
repnz
dec
rol
sbb
sahf
sub
call
cmpsb
lods
cmp
mov
or
jnp
push
sbb
xchg
pop
add
pop
out
or
stc
inc
inc
loope
inc
pop
cld
inc
lock
xchg
dec
xor
xor
test
sahf
push
xor
add
cwtl
subl
sbb
jnp
andl
clc
lahf
mov
xchg
stos
shrl
inc
xor
je
outsl
xor
repnz
lds
or
arpl
cmp
ljmp
jns
mov
jmp
insl
out
ds
fisttpl
ds
nop
pop
out
arpl
outsl
sahf
pop
mov
sub
cs
out
cs
xor
add
iret
mov
jl
adc
outsb
add
lea
sub
clc
jae
lock
test
inc
dec
mov
enter
test
add
mov
in
jns
mov
inc
inc
lds
bound
and
xchg
shrb
arpl
rcrl
xlat
nop
mov
mov
mov
inc
sbbl
mov
aam
notb
vunpckhps
notb
pop
add
pop
mov
lss
not
dec
out
ss
add
pusha
call
sub
xchg
test
and
inc
mov
dec
xor
sbb
or
pop
gs
push
xchg
mov
mov
pusha
push
add
mov
sahf
aas
fcompl
pop
and
addr16
cld
out
jns
adc
loop
push
nop
mov
jmp
xchg
adc
xchg
jns
cltd
mov
je
sbb
xchg
xchg
adc
xchg
idiv
push
adc
leave
and
insb
and
pop
cmp
pop
js
adc
sbb
pop
add
and
sub
out
les
mov
popf
mov
mov
std
test
rolb
jae
mov
sbbb
out
roll
xlat
cld
leave
dec
imul
jmp
mov
mov
adc
mov
or
mov
fisubrs
fsubrl
jmp
sbb
vorpd
dec
push
icebp
ret
int
daa
fsubs
dec
mov
cmp
mov
lret
mov
lds
pop
and
jg
leave
jne
js
sub
movsb
decb
xor
xor
xor
inc
or
xor
dec
add
ret
pushl
inc
dec
mov
and
das
xlat
aad
arpl
push
inc
std
cmp
dec
ss
loope
push
xchg
out
or
stos
out
cmp
jle
inc
push
jae
loop
xchg
jbe
push
rolb
stos
and
lds
fisttps
push
jmp
into
icebp
and
xchg
sti
dec
sbb
sbb
imul
cmc
adc
or
jbe
adc
sarl
mov
cmp
pop
mov
es
data16
popf
xchg
pop
push
movsb
mov
mov
jg
rcrb
mov
push
inc
decl
add
les
mov
xchg
mov
fs
add
in
push
dec
xlat
call
jecxz
fcompl
add
sbb
mov
les
xor
mov
dec
push
xor
out
xor
inc
enter
test
rorl
jl
pop
orb
and
fldenv
addb
mov
xchg
or
cmc
insl
sbb
dec
xchg
mov
push
jns
out
xlat
ljmp
les
cld
rorb
xor
sbbb
pop
test
loop
add
jo
cmc
daa
stc
pop
ret
dec
jle
cmp
adc
inc
xchg
cli
dec
lock
stc
mov
cmp
push
sahf
enter
bound
adcb
pop
test
inc
sbb
scas
sub
inc
adc
jge
push
leave
icebp
movsl
cs
cmpl
sti
hlt
in
cld
mov
call
je
pop
addr16
inc
xchg
xor
clc
icebp
xchg
xor
rol
jmp
adc
push
jl
das
je
xor
inc
push
lea
mov
pop
out
shll
in
sbb
subb
mov
dec
ja
adc
lock
fs
mov
scas
add
pop
in
hlt
not
scas
cs
pusha
movsl
das
ud1
push
cmc
mov
outsb
jmp
pop
lcall
mov
notl
push
icebp
jge
dec
inc
xchg
mov
pop
jno
in
or
xchg
pop
push
mov
jnp
lret
or
js
movl
int
fidivrs
dec
icebp
push
push
xorl
pushl
cmpl
mov
aad
fwait
mov
sub
dec
movsl
cwtl
aaa
or
xchg
subl
sar
jnp
add
pop
cs
rclb
jmp
push
mov
cltd
xor
jl
xor
mov
or
mov
aas
jnp
mov
cmp
js
dec
pop
imul
pop
pushf
pusha
sub
pop
pop
sbb
and
and
imul
inc
mov
mov
mov
jp
nop
data16
xor
add
into
fwait
insb
push
out
jl
mov
fdivrl
and
or
jp
or
aad
xlat
or
popa
pop
dec
and
cmp
nop
push
push
ret
mov
sbb
cmp
push
aaa
ret
addr16
hlt
movsb
pushf
rsm
push
add
repz
loopne
sub
push
sub
add
jl
adc
lahf
test
je
dec
sbb
into
sbb
pushf
cwtl
pop
aad
movsb
out
leave
fwait
push
lahf
scas
orl
mov
jecxz
cwtl
sarl
jno
and
push
pop
dec
loop
xor
cmc
pop
and
jg
int3
xchg
notl
jge
test
xchg
ljmp
mov
das
sbb
sbb
push
scas
mov
fiadds
jnp
mov
leave
or
pop
mov
and
push
cmp
mov
mov
out
ss
pop
mov
pop
dec
jb
xchg
mov
aam
int
stos
stos
sbb
or
pushf
stos
push
lock
push
inc
addb
outsb
orl
pop
scas
dec
hlt
fsts
int
test
dec
sahf
mov
ja
clc
bound
mov
jp
pop
hlt
lcall
div
inc
leave
cmp
pop
ret
dec
sub
pusha
add
or
dec
mov
fs
adc
int
in
lret
jbe
adc
outsl
mov
mov
daa
adc
or
dec
scas
inc
xchg
pop
jl
icebp
push
pop
push
sbb
and
mov
cld
repnz
fisttps
iret
pop
cmp
cmp
mov
xchg
or
stos
call
int3
call
mov
stos
lods
lret
or
and
xor
pop
stos
lods
incb
mov
jmp
in
inc
into
movsb
test
push
pop
insl
pusha
mov
or
xor
lret
insb
insl
shl
scas
xchg
inc
imul
or
mov
repnz
inc
addl
loop
movsl
imul
ljmp
inc
xchg
cltd
and
mov
jp
js
mov
insl
sbb
xchg
movb
ret
sub
add
aad
jae
push
inc
mov
clc
orl
add
lahf
sub
lock
maskmovq
idivl
cmc
sbb
imul
repnz
mov
push
movsb
pop
adc
cwtl
loopne
xchg
xor
inc
adc
es
ret
sbb
dec
lret
bound
stc
add
add
mov
inc
or
push
jecxz
mov
adc
or
daa
std
mov
inc
push
push
inc
xor
fwait
dec
dec
push
pop
es
push
mov
xchg
icebp
sub
or
dec
mov
pop
cld
fistpl
in
in
mov
pushf
scas
cli
sarl
imul
sbb
fldenv
mov
cmp
xor
or
sbb
enter
sahf
sbb
aaa
cltd
or
mov
mov
inc
enter
stc
pusha
pop
enter
jge
and
out
ret
pop
bound
out
mov
cld
les
xchg
int
push
adc
out
jne
mov
sub
xchg
push
mov
inc
dec
sub
pop
sub
pop
and
shrl
cld
fnstsw
sub
or
fsub
xchg
xor
or
mov
jnp
fwait
addr16
rcrl
ret
je
in
xchg
pop
sahf
dec
in
fs
cmovg
repnz
add
in
inc
ficomps
out
push
popf
cltd
addr16
inc
sahf
push
cmpb
daa
sub
jge
mov
sub
add
insl
aam
sbb
jnp
je
xorl
dec
adc
fistl
in
push
push
jl
cmovle
pop
add
add
aad
mov
pop
pop
mov
mov
orl
icebp
sub
movb
inc
cmpsb
out
out
pop
mov
inc
imul
cmp
dec
jno
cmp
push
call
or
xchg
ret
mov
sub
dec
pop
pop
ss
dec
fmuls
cmpsb
xchg
adc
imul
popa
pop
js
movsl
xchg
movsb
xchg
dec
mov
shl
sbb
pushf
pusha
inc
sub
add
les
xchg
popf
negl
bound
or
pop
outsb
test
dec
jmp
test
imul
scas
xor
ret
and
mov
pop
bound
xor
mov
dec
inc
jne
inc
mov
xchg
sbb
add
xor
or
push
pop
jge
lods
sti
push
or
stos
pop
and
mul
pop
mov
pushf
xchg
fsts
aas
adc
test
std
dec
or
and
pop
jmp
rcrl
mov
xchg
xchg
lods
mov
shl
xchg
lcall
lds
inc
mov
and
movsb
adc
repz
sbb
adc
jmp
jge
mov
fcomps
aad
shrl
cmp
shll
xchg
add
fimull
cmpsl
lods
call
pop
lods
cmpsb
jno
mov
fwait
pop
and
dec
inc
push
or
xchg
cmp
dec
stos
pop
inc
loop
lea
cld
adc
stc
jno
fs
inc
xchg
dec
cmpl
jp
cmp
push
xchg
movsl
lcall
pushf
int
lcall
lods
inc
inc
jae
clc
and
fldcw
movsl
push
jge
or
sub
stos
xchg
rolb
mov
cs
lea
sbb
hlt
and
sub
loop
push
push
adc
loope
mov
jae
jmp
dec
cmc
sahf
mov
insl
out
hlt
or
adc
adc
les
cmp
lds
or
pop
mov
cwtl
outsl
repz
shlb
jae
xchg
jp
scas
lcall
test
fdivrl
jge
popa
lcall
out
out
mov
mov
scas
jmp
fs
jl
in
or
xchg
xchg
outsb
cltd
mov
mov
aaa
or
cmp
push
xchg
inc
fadd
pop
into
fwait
cld
inc
ss
inc
leave
xor
add
jl
in
sbb
loop
bt
pop
fcoml
and
xchg
mov
push
pushf
cmp
cltd
leave
pop
pmaddwd
inc
inc
popl
scas
adc
rcrl
jg
cmp
lret
mov
mov
mov
mov
aaa
jo
std
popl
adc
inc
add
pop
sbb
xorb
enter
inc
xchg
xchg
and
inc
sub
mov
insb
jmp
out
mov
mov
fcoms
dec
dec
inc
jns
into
in
or
call
or
rcll
add
xchg
ja
mov
sbb
call
mov
sti
pop
decb
xchg
test
test
mov
stos
inc
pop
test
xlat
nop
xchg
push
ds
inc
mov
add
test
pop
adc
push
inc
inc
out
int3
push
cmp
push
in
cmp
arpl
aas
push
push
cmp
ds
test
push
adc
insl
bound
aas
mov
sub
js
ficompl
mov
push
add
jne
jne
movl
and
jns
push
aam
push
shll
mov
push
stos
xchg
repnz
dec
fimuls
dec
fisttpll
test
mov
dec
pop
jbe
mov
aas
ret
jnp
out
js
repz
xchg
jecxz
sub
pop
push
lret
dec
mov
jg
int
push
bound
pop
scas
mov
in
adc
xor
test
xlat
push
lods
fildl
inc
xchg
sti
fildl
aaa
fwait
jbe
movsb
fidivl
jmp
fnstcw
dec
sub
mov
xor
data16
jg
sub
in
andl
sti
jae
aaa
call
xchg
push
cmp
or
movsl
push
ret
sub
leave
sbb
data16
sbb
dec
flds
fisubs
call
sbb
jmp
jnp
push
movsl
cmp
ds
lods
ret
push
lea
xchg
lcall
lret
jmp
mov
push
sbb
js
pushf
fidivs
fistpll
xchg
push
psadbw
xchg
daa
ret
pop
mov
mov
or
fildll
add
fwait
mov
dec
pop
dec
xchg
xchg
sti
and
jp
aaa
loope
js
test
imul
jns
mov
sub
mov
pop
loopne
or
push
ret
outsb
gs
mov
push
mov
dec
fldl
add
fsubrs
sub
mov
nop
cmpsl
push
imul
insb
mov
sub
int3
test
call
lahf
push
pop
cld
pushl
mov
data16
ss
sbb
push
sbb
mov
inc
into
outsb
jb
in
ds
jmp
sbb
push
xchg
aam
push
mov
ret
cmovne
or
ljmp
jge,pt
sub
ds
stc
sub
cmc
mov
mov
icebp
ss
xchg
and
adc
mov
cwtl
popa
fisttpll
lret
rcll
xorb
icebp
mov
fwait
enter
fstl
jmp
insl
test
outsl
int3
ds
mov
nop
ds
addb
xor
mov
mov
jae
std
loop
lods
ljmp
add
pop
popf
sub
mov
jb
xor
fldenv
cs
and
insb
stc
push
divb
std
hlt
xchg
sti
jbe
loopne
and
inc
les
inc
add
adc
pusha
pop
pop
adc
shll
iret
repnz
adcl
icebp
outsl
cld
aad
arpl
adc
pop
cmpsl
xor
enter
mov
push
adc
call
mov
dec
je
add
adc
dec
clc
mov
mov
in
sbb
jp
mov
cli
mov
in
and
vpcmpeqb
fwait
movsb
iret
or
inc
cltd
lret
das
dec
leave
or
pop
pop
inc
rorl
popa
loope
mov
rcrl
and
ret
adc
incl
cmp
insl
jp
push
bound
mov
xor
or
repz
mov
push
insb
sub
cmp
cmp
adcb
cli
lcall
pop
cmc
sub
jmp
imul
add
into
mov
cmp
push
fistl
mov
push
loopne
push
mov
mov
xchg
pop
into
fldl
push
adc
in
mov
push
iret
je
or
xchg
adc
cmp
sarb
lods
cmpsb
adc
mov
mov
add
sbb
mov
out
add
ss
jno
repz
mov
or
popf
in
jb
scas
outsb
leave
loope
loopne
xchg
lock
dec
loopne
mov
stos
mov
add
or
sbb
cmp
dec
je
mov
sub
mov
push
mov
movsb
cltd
inc
mov
mov
mov
xchg
arpl
jmp
cmpsb
add
int
mov
nop
outsl
mov
xlat
pop
mov
cmp
pop
int3
ja
add
mov
jo
out
inc
xchg
call
xchg
pop
mov
jb
cwtl
lods
scas
jecxz
push
fcomps
or
or
enter
mov
mov
push
xchg
lret
sbb
popa
add
pop
fbld
adc
adc
outsb
jmp
ljmp
insl
stos
add
pop
push
cmc
sbb
adc
xor
xlat
jge
fwait
push
add
leave
jae
pop
sti
xchg
inc
js
rol
cmp
nop
xchg
fidivrl
mov
out
subl
jge
repz
das
out
add
xor
inc
or
cltd
jl
inc
push
jp
pop
sub
push
clc
mov
shll
xchg
pop
cli
sub
sbb
cli
aaa
jae
inc
popa
rcrl
push
popa
arpl
pusha
sub
sub
xchg
xchg
cmp
pop
les
or
xor
adc
incl
insl
cmpsl
xor
lds
jns
push
lcall
sbb
sbb
xchg
stos
push
aas
mov
mov
popf
dec
sbb
pop
push
sub
shll
enter
push
fidivl
jnp
sub
push
andl
inc
and
pop
js
adc
pop
jle
push
xor
fdivrl
adc
add
ret
jb
push
ret
movl
or
ret
fdivl
data16
add
adcl
push
or
aas
xchg
mov
push
and
mov
and
mov
insl
add
sahf
adc
icebp
mov
fs
inc
cmpsb
jmp
add
loopne
clc
adc
sbb
jns
shl
adc
je
in
xor
jnp
push
push
pop
mov
std
inc
or
jnp
jle
cmp
das
mov
pop
mov
mov
mov
sbb
xchg
xchg
bound
pop
cltd
dec
mov
test
outsl
loopne
sbb
ret
test
out
sbb
jl
jno
cmc
xchg
dec
mov
sub
dec
mull
jle
and
mov
sbb
arpl
mov
sarl
mov
lret
lea
sahf
in
xchg
out
dec
xor
mov
adcl
test
lret
mov
sub
je
js
in
ja
insl
hlt
or
mov
lahf
jle
add
enter
add
cld
pop
jge
jnp
repnz
aam
jnp
mov
insl
xor
test
aaa
fadds
lds
pop
ss
jp
mov
mov
mov
andl
mov
jp
into
and
outsl
cmp
data16
cmc
fcmovb
loopne
mov
dec
orb
mov
adc
fstps
pop
subl
aas
push
cs
pop
mov
enter
xor
testb
sub
or
pop
dec
inc
adc
je
lds
dec
jl
sbb
jl
shrl
scas
clc
adcb
jge
movsl
xor
andl
sbb
sbb
jno
or
mov
std
test
jge
jl
pop
clc
xor
add
bnd
out
mov
pop
jmp
aas
mov
sahf
sub
sbb
adc
push
push
mov
adc
in
dec
iret
hlt
repnz
xchg
jg
and
in
or
adc
out
push
sbb
cmp
jno
shlb
jle
push
outsl
movsl
adc
and
clc
xchg
mov
repz
das
mov
xchg
xor
xchg
cmp
ror
cmc
dec
mov
es
adc
xchg
bound
dec
inc
mov
sbb
pop
sbb
pop
in
mov
inc
ret
loope
icebp
cmp
fcmovu
fstpl
pop
pop
test
inc
adc
fdivrs
lds
dec
sahf
sahf
sub
mov
jne
fldt
aas
add
dec
aaa
fiaddl
scas
insb
in
jae
fisubrs
ret
loopne
mov
jge
lock
sbb
fmul
arpl
enter
adc
icebp
std
mov
pop
mov
push
lret
into
iret
sub
jp
jle
inc
jne
jnp
repnz
mov
mov
bound
mov
insl
and
arpl
mov
jns
mov
cmp
js
adc
mov
push
cmp
dec
repnz
out
mov
cld
or
push
nop
repz
xchg
add
stos
cmc
ljmp
add
mov
out
cmpxchg
adc
imul
xchg
push
xchg
lds
decb
jmp
popf
fidivl
push
mov
mov
ss
insb
mov
popf
test
rorl
iret
dec
xor
inc
ds
pushf
dec
testl
addr16
xchg
shrl
and
into
cltd
mov
notb
subb
aas
mov
rcrl
cmp
push
sti
push
jmp
push
rcrl
jmp
icebp
icebp
out
js
or
mov
mov
lods
jnp
sbb
imul
addl
or
sahf
inc
leave
sbb
les
mov
fldenv
loope
arpl
mov
imul
fadds
cmp
xchg
mov
jnp
jo
xor
aam
test
ret
loopne
xor
repz
sbbb
xchg
fildll
pop
xlat
int3
lods
sbb
mov
jge
movl
jmp
cld
jle
jnp
ss
fwait
cltd
fimull
rcll
sub
cwtl
daa
lds
imul
imul
scas
movsb
pop
dec
inc
xor
cmp
outsb
xchg
ss
inc
rcrb
jae
in
test
mov
in
adc
xchg
cmp
arpl
cli
xchg
and
mov
call
out
in
repnz
push
sub
lds
lods
sbb
es
dec
add
xor
push
lock
push
mov
call
push
mov
push
out
xor
repnz
and
jge
add
add
xchg
mov
js
mov
mov
push
lods
arpl
jo
mov
imul
inc
daa
inc
fildl
aam
sub
dec
inc
scas
outsl
loope
dec
jmp
mov
movsb
mov
shll
jae
xor
mov
mov
fimull
lds
sub
iret
scas
jecxz
xchg
fs
sbb
xchg
push
cmp
js
sarb
cmp
sub
test
mov
out
jns
cmc
or
out
jne
xchg
or
les
and
pusha
mov
adc
add
out
int
mov
fstp
adc
mov
adc
pop
inc
test
lods
pop
lret
loopne
xor
roll
push
outsl
stos
cltd
cmp
and
push
pop
arpl
sahf
insb
lds
shr
call
xchg
cmp
mov
push
imul
jns
stos
push
dec
cmp
xchg
mov
rcll
and
lods
cld
roll
jle
jmp
movaps
lahf
jmp
outsb
cmp
stos
sub
cmp
sbb
jecxz
loopne
mov
aam
mov
repnz
mov
inc
fwait
xchg
inc
fadd
mov
or
cmp
rorb
in
subb
xchg
fstpl
outsb
mov
pop
dec
pusha
repz
scas
scas
or
es
inc
mov
jbe
adc
and
mov
mov
push
scas
cmp
add
in
cld
stos
xchg
xorl
inc
mov
mov
mov
jnp
pushf
push
call
sub
push
loop
lahf
xchg
outsl
dec
lods
sub
add
hlt
test
daa
pop
jmp
and
outsl
jecxz
xchg
mov
jnp
subl
insl
add
mov
outsb
fdivrl
pusha
mov
cmp
sub
add
pop
mov
movsl
test
push
popa
mov
popa
push
out
add
in
xlat
insb
sub
jmp
inc
popl
xchg
aas
jbe
mov
jnp
cmp
mov
inc
xchg
or
fsts
xlat
movl
xor
sbb
pop
stc
sub
xor
sbb
xchg
jbe,pn
inc
mov
add
sub
pop
cmpb
das
push
jle
mov
leave
stc
lret
lcall
loope
mov
aam
xchg
lods
cmp
lods
xor
ja
mov
out
push
jne
test
cmp
sbb
jp
lahf
dec
call
and
outsb
pop
cli
dec
xchg
and
popa
cli
cwtl
sbb
push
and
mov
scas
in
mov
jmp
and
ret
call
aas
jp
fstpt
arpl
pop
idivb
xchg
mov
ds
mov
inc
push
or
ljmp
in
pushf
sub
mov
aaa
shl
pop
cwtl
and
mov
mul
lds
xlat
and
pop
jge
jle
mov
mov
or
inc
adcb
mov
push
sub
fld
pop
and
mov
sbb
incb
jae
ror
test
xchg
test
sbb
cli
dec
and
push
inc
and
jmp
mov
xor
stc
movsb
mov
jo
int
jmp
addl
aaa
ds
push
loop
test
xchg
dec
mov
out
adc
push
or
sahf
sbb
std
fmull
push
das
xchg
popf
in
dec
adc
call
nop
mov
sub
push
insb
stos
sbb
and
mov
ss
shll
call
xor
fs
pop
pop
and
mov
int
push
test
jnp
push
je
je
xor
fdivr
pop
cmp
bound
mov
jb
push
sub
xchg
cltd
inc
add
lods
sarl
jnp
cmp
out
int
mov
test
push
shrb
jecxz
sbb
mov
bound
add
xorl
push
mov
les
adc
mov
aad
adc
pop
mov
adc
mov
outsb
aaa
loope
les
cli
shl
ds
cli
mov
lcall
mov
call
pop
xor
push
xlat
daa
pop
in
icebp
xchg
adc
mov
lock
and
sbb
lret
xchg
ret
or
inc
fadds
outsb
pop
mov
arpl
cmp
dec
imul
pop
pop
shl
mov
jmp
jecxz
repnz
pushf
and
les
and
sub
popa
mov
leave
and
dec
rcll
fsubrs
cmp
arpl
fildl
mov
push
stc
or
mov
mov
jle
jge
cmp
or
imul
imul
cmc
rcrb
push
mov
mov
mov
out
scas
xor
into
fcomps
mov
adc
and
stos
mov
push
xorb
lcall
and
lods
adcl
lds
stc
and
mov
inc
push
popf
icebp
and
mov
lods
cmp
sub
das
push
jmp
dec
rol
push
sbb
inc
mov
fisubrs
or
mov
cmp
xchg
dec
and
dec
ret
lock
adc
lret
push
inc
jnp
testl
cltd
adc
je
mov
call
add
popa
xchg
subb
lret
pop
cltd
or
jle
adc
subb
push
inc
xchg
filds
xor
cmpsb
enter
bound
iret
push
mov
testl
pushf
nop
add
pop
imul
aam
pop
push
rcl
shl
lds
sbb
add
cwtl
mov
jmp
push
mov
iret
xorl
scas
shl
adc
js
ss
ss
adc
add
pop
jbe
sahf
sti
nop
dec
nop
push
xchg
insl
cmc
xchg
adc
push
inc
icebp
mov
mov
mov
les
fwait
xchg
int3
shrb
adc
outsl
xchg
lods
movsb
in
jae
push
out
xchg
jae
xor
inc
mov
les
clc
inc
loopne
cmpsl
mov
cmpl
mov
cmp
ljmp
push
mov
in
insb
test
nop
sub
mov
or
sub
jb
inc
jg
cwtl
fldcw
insl
fs
xor
xchg
jle
or
or
adc
mov
outsl
sahf
jl
or
in
adc
icebp
xchg
enter
shrl
test
cs
in
ljmp
lahf
xor
rcll
sbb
mov
or
adc
faddl
push
cmp
fstpl
and
cmp
pop
outsl
mov
jns
loopne
mov
ss
cmpsb
fstps
and
test
push
aam
add
imul
xor
shlb
sar
jg
aaa
cmp
imul
sbb
cltd
into
dec
mov
cmp
jmp
rcr
fldln2
adc
mov
cmp
in
fbld
lret
mov
rcl
push
adc
push
and
out
inc
xor
stc
lahf
ret
gs
fnstcw
cmp
icebp
daa
and
out
jge
or
pop
or
mov
sub
jl
fwait
es
jo
cmp
scas
aam
lods
popf
aad
repnz
push
icebp
inc
mov
icebp
cmp
mov
add
dec
dec
cld
mov
xchg
fdivrs
adc
sbb
xor
push
in
jae
ja
ucomiss
mov
mov
icebp
pop
cltd
inc
das
sub
sub
jno
mov
mov
pushl
and
sbb
lods
inc
push
adc
pop
enter
and
test
int3
loop
sahf
dec
mov
dec
add
pop
iret
cltd
aaa
movsb
push
or
dec
pop
repnz
inc
outsl
popf
mov
loope
je
fisubs
lret
mov
pop
adc
jns
push
gs
jmp
push
pop
loop
es
jnp
jl
das
xchg
out
sub
sbb
adc
dec
movsl
pop
mov
xor
iret
aas
xor
ret
mov
mov
mov
outsb
sbb
test
fisubrs
arpl
pushf
xchg
or
out
in
push
push
ljmp
push
pop
out
jne
repz
lds
jmp
sbbb
aad
mov
lahf
push
scas
ljmp
and
pop
sbb
stos
mov
push
lahf
fistl
adc
mov
sbb
mov
or
dec
cld
and
jge
js
movsb
dec
cmpsl
or
das
pop
cmpsl
adc
rolb
iret
jmp
mov
cld
and
sbb
jbe
xlat
fmul
push
int3
out
adcb
mov
aas
loopne
cld
into
fs
sbb
mov
inc
mov
movsl
xor
xchg
in
aaa
adc
and
in
out
daa
mov
call
in
not
inc
adc
and
or
jge
add
push
mov
movsw
scas
mov
cli
addr16
fidivrs
add
test
mov
std
mov
jae
mov
fistpl
in
mov
into
fwait
add
xor
pop
cs
sbb
inc
incl
ret
pop
loopne
movsb
mov
sub
dec
push
mov
xor
jo
mov
sub
data16
push
pusha
xchg
pop
repnz
xchg
inc
sub
adcb
xchg
pop
addl
cs
inc
cltd
int
xchg
and
sbb
cltd
cs
movsl
sbbl
movsb
fdivs
in
cmp
shrb
sub
rcll
mov
lods
push
ret
mov
jne
pop
pop
scas
mov
mov
or
in
xchg
jns
jb
adc
mov
mov
mov
insb
das
pop
xchg
xor
in
xor
mov
sub
add
jl
jnp
int3
pop
jnp
inc
cmpsb
pop
aaa
mov
nop
and
cmp
out
and
sub
shr
repnz
test
inc
and
mov
push
dec
mov
inc
mov
jne
adc
ret
mov
rcll
cmc
xchg
iret
lret
xchg
push
or
adc
add
fstl
pop
enter
cwtl
cmp
setle
xchg
in
movsl
daa
aaa
mov
movsl
out
aad
frstor
sub
ret
and
jo
movsb
jae
gs
adc
mov
stos
sub
mov
subl
jne
cmp
adc
dec
pop
bound
pop
xchg
je
or
test
dec
and
push
cmovb
fcomps
pop
cmpsb
mov
pop
dec
addb
imul
ficompl
push
cltd
test
and
cmc
and
dec
out
icebp
jae
adc
cltd
movsb
cmc
inc
dec
dec
mov
sub
cmp
js
enter
sbb
sub
sbb
cmp
xor
mov
clc
dec
pop
push
fisubrs
es
or
cwtl
mov
push
ja
movsl
loopne
pop
and
imul
bound
enter
sub
add
mov
push
nop
cli
mov
shlw
and
imul
call
dec
mov
imul
xor
adc
daa
mov
mov
sub
adc
mov
inc
dec
sub
jo
sub
push
shll
mov
lret
push
lret
mov
jno
clc
cltd
fcompl
stos
scas
mov
inc
inc
and
icebp
ret
mov
std
mov
stos
shlb
adc
fstpt
clc
sbb
xlat
daa
movsl
test
sub
adc
mov
jl
xor
cmpsb
into
or
mov
xchg
pop
sbb
loop
fimull
inc
aas
flds
subb
popa
sbb
or
fsts
out
lahf
jle
mov
movsl
fdivrl
fwait
and
xchg
mov
push
jge
or
sub
hlt
mov
arpl
pop
lcall
push
jnp
outsb
sub
sub
pop
fwait
sub
jno
movsb
sbb
movsb
xchg
mov
ror
lcall
int
int
add
inc
sub
stos
jl
push
adc
data16
adc
or
push
int
cmp
or
inc
xor
outsl
inc
push
stos
sbb
test
or
add
push
hlt
and
adc
cmpb
int3
add
pop
mov
into
cmp
sbb
loop
sub
jae
jbe
sbb
aaa
and
and
fwait
pop
xor
mov
arpl
movb
ja
adcb
les
test
dec
scas
fstl
jo
jmp
cmc
out
aas
in
cltd
rcl
jae
mov
cwtl
mov
xchg
push
mov
rclb
lds
fcompl
sub
repnz
pop
aad
fwait
in
aad
mov
in
sub
stos
test
and
mov
mov
mov
xchg
cmpl
pop
imul
jmp
pop
into
jne
inc
mov
jae
popa
pop
xchg
sbb
inc
mov
sbb
aad
jne
xchg
pop
or
mov
test
pop
sub
arpl
dec
dec
test
repnz
add
cwtl
adcl
movsb
enter
mov
adc
data16
inc
mov
addr16
sub
fildll
cs
mov
out
addr16
dec
lods
xor
sub
mov
cmc
pop
data16
cld
sbbl
jne
jg
outsl
popa
in
lock
popf
repz
ljmp
movsl
shrl
movsl
sbb
inc
fildll
outsb
cmp
jecxz
mov
pop
jo
fcmovbe
pop
dec
lahf
xchg
cld
dec
sbb
mov
mov
mov
mov
dec
adc
cmpsb
and
scas
sub
loop
test
pop
mov
sbb
loopne
sub
fwait
dec
jno
inc
or
stos
int3
mov
mov
adc
out
inc
bound
jmp
dec
jmp
lea
lds
mov
fldenv
in
sub
inc
fnstenv
stos
in
xlat
gs
cmpsb
test
pop
dec
cs
pop
mov
adc
jp
pop
push
pushw
imull
daa
clc
cmp
jmp
xor
mov
sbb
mov
test
jb
mov
xor
cmp
mov
and
sahf
inc
inc
pushf
lock
and
lret
xchg
mov
push
cmpsb
sbb
xor
in
ds
cwtl
cwtl
mov
sbb
in
in
lds
stos
push
pop
mov
mov
lcall
add
xchg
pop
divl
pop
xor
sbb
scas
or
insb
notb
std
adc
aam
cld
out
js
pushf
or
cmp
ficoml
mov
out
push
and
push
popl
popa
xor
mov
iret
dec
cwtl
aad
sub
inc
test
xchg
fistps
arpl
or
inc
scas
push
loope
sub
inc
cltd
xchg
aad
dec
ja
ja
sbb
lret
js
xchg
arpl
in
sti
push
int3
xor
aas
sub
xchg
js
cmc
jg
inc
or
pop
mov
cmp
mov
mov
pop
out
adc
movsb
push
popf
repnz
adc
pushf
inc
dec
cwtl
inc
sahf
iret
sub
mov
adcl
inc
and
outsb
push
cmc
xor
pop
cmpsl
aas
and
pop
mov
or
lods
xor
push
or
jnp
xor
jle
pop
rclb
loope
fstl
push
mov
xchg
mov
cmp
stos
pushf
adc
jo
or
adc
sbb
push
xlat
add
xor
movsb
add
pushf
push
shrl
fistps
xchg
jnp
je
inc
push
sub
fsubr
fsubl
mov
lret
xor
hlt
in
add
scas
scas
push
sbb
negl
pusha
mov
xchg
push
xchg
xchg
shlb
jae
cmp
jmp
repnz
jp
mov
insb
sub
nop
fnstsw
dec
test
cmpsb
xor
adc
push
mov
bound
mov
es
and
pop
push
stos
xchg
stos
jb
pop
xchg
out
mov
xchg
mov
inc
pop
leave
pop
cmp
dec
loope
bswap
cmpsb
popa
lock
jo
and
rcll
or
xchg
mov
jo
push
mov
push
insl
cmp
and
lret
jb
out
push
fistpll
shlb
push
cmpl
and
mov
lahf
mov
jnp
push
pop
mov
inc
fiadds
iret
pop
sub
popa
pop
das
and
mov
jns
fildll
enter
sbb
fildll
jmp
dec
pop
iret
cmp
jne
pushf
xchg
ficoml
mov
xor
sub
lods
inc
sub
test
add
jns
dec
inc
popa
jno
paddusw
outsb
inc
cmc
and
xchg
idivl
fistl
scas
std
cmp
leave
aaa
aas
cmpb
jo
or
arpl
ljmp
mov
les
jge
pop
pop
lret
cmp
sbb
xlat
imul
repnz
jge
cwtl
sahf
stos
lods
mov
cmc
mov
mov
dec
xchg
add
push
shlb
fiaddl
xchg
ja
ja
add
xlat
mov
negb
rorl
and
sbbl
hlt
mov
sub
jle
push
or
movsl
sbb
inc
stos
mov
sbb
lret
sub
xchg
cltd
fbld
test
dec
or
loop
out
movsb
mov
imul
inc
jns
mov
xor
cmp
push
or
inc
add
pop
mov
sub
mov
imul
xchg
lret
aas
inc
xor
pop
add
js
gs
dec
dec
out
ss
cmp
leave
and
call
adc
aad
test
mov
lret
jmp
xchg
cmpsl
and
pusha
rcrb
imul
iret
xchg
test
adc
dec
pop
es
mov
psllq
dec
pop
mov
xor
inc
cmp
stos
repnz
push
inc
pop
pop
mov
xchg
mov
inc
inc
add
xchg
push
xchg
loop
pop
leave
jbe
outsl
mov
push
push
jp
xor
loop
sbbb
sbb
mov
push
popa
jecxz
cmp
inc
mov
lret
pop
out
sub
xchg
cwtl
fdivrl
loopne
dec
fidivl
ja
jo
mov
inc
js
sub
repz
icebp
dec
sbb
test
scas
sti
dec
jno
inc
loop
sub
mov
test
cwtl
cmp
loop
mov
mov
add
cli
cmp
lea
xchg
cwtl
jnp
push
outsb
subb
rcrb
pop
pop
xlat
divb
mov
dec
in
nop
insb
inc
push
pop
pop
xorb
sbb
das
mov
mov
jp
push
xchg
lahf
mov
xor
sbbb
mov
sub
mov
add
clc
je
dec
iret
xchg
lods
push
jb
mov
pop
sbb
add
xchg
addr16
cltd
xor
pop
push
aad
stos
mov
fldl
mov
push
push
sbb
loopne
xor
and
into
test
cmp
clc
or
pop
mov
mov
nop
in
les
lahf
add
xor
xor
std
xor
adc
push
push
add
sarl
adcb
push
jmp
pushf
fstps
sbb
test
addb
test
sbb
ljmp
push
ljmp
cmpl
lods
mov
adc
fwait
or
popa
gs
aad
jl
inc
shl
mov
adc
icebp
xchg
mov
cmpsl
push
ljmp
pop
mov
or
inc
fisttpll
mov
lea
sbb
sub
std
mov
pop
xchg
movsl
mov
faddl
es
test
cmp
sbb
pusha
rclb
add
mov
lds
faddp
in
jae
xorb
std
mov
inc
inc
shlb
pusha
adc
sbb
stos
push
movsb
mov
inc
in
repz
jbe
das
movsl
into
pop
mov
xchg
mov
mov
or
movsb
dec
add
jbe
cmp
and
xchg
pop
xchg
sub
lods
sahf
fwait
xchg
ds
or
or
iret
xchg
rorb
arpl
and
imul
mov
push
jge
add
subb
outsb
pop
push
pop
cmp
dec
pop
add
push
ret
pop
leave
mov
les
mov
ret
clc
fnstcw
test
xor
sub
outsb
in
cli
cvtpi2ps
in
cmp
mov
not
cs
or
cld
xrstor
enter
mov
leave
popa
loop
fidivl
test
push
loope
pop
push
mov
sub
leave
dec
jecxz
jp
mov
mov
in
dec
pushf
sbb
je
into
test
cmp
add
dec
jo
outsl
into
jae
adc
lret
dec
xchg
inc
sbb
stos
scas
dec
fimuls
roll
dec
and
insb
icebp
test
out
iret
push
jle
pop
add
or
push
mov
or
xchg
mov
das
test
add
xchg
mov
repnz
push
mov
xchg
test
inc
push
insl
cmp
jno
and
add
inc
shlb
mov
or
mov
push
or
ret
xor
scas
dec
sti
push
notl
push
xor
cltd
mov
xchg
jl
mov
mov
aaa
iret
xor
stc
xor
iret
mov
xchg
or
add
ja
or
jb
jge
inc
adcb
stc
loopne
jmp
lret
xchg
minps
roll
negb
std
add
xchg
les
les
cwtl
sub
mov
fs
lds
push
push
mov
mov
movsl
push
sbb
rcrl
jnp
push
inc
xor
mov
cwtl
out
push
jle
mov
jg
adc
pop
in
sahf
shll
ret
test
dec
fimull
push
xchg
rcrl
movsl
std
mov
int3
xchg
mov
ret
ror
adc
jle
dec
enter
jno
in
or
bnd
mov
mov
xchg
inc
cs
movhps
mov
out
add
mov
push
pop
inc
dec
push
jae
addl
mov
lret
fnstcw
es
or
cmp
es
mov
xchg
adc
cmpsl
adc
lret
lahf
push
xchg
pop
mov
sub
rorl
fnstcw
mov
mov
popf
sub
notb
sbb
mov
add
pop
sbb
fisttps
rolb
or
in
xor
js
mov
in
sbb
mov
mov
or
and
in
iret
adc
es
call
popa
cmp
push
jl
pop
inc
outsb
xchg
mov
icebp
test
mov
into
movsl
data16
cld
sub
hlt
test
mov
mov
xor
push
push
movl
loopne
sbb
pop
jmp
dec
std
ss
shrb
sahf
push
xchg
mov
pop
lods
mov
stos
sbb
or
inc
jne
out
add
into
adcl
lods
jne
sahf
imulb
incl
jbe
cmp
cmp
jo
mov
or
pcmpgtw
xor
push
sub
adc
popa
lcall
inc
cmp
leave
scas
popa
ficomps
inc
cs
dec
in
dec
jle
loopne
fistps
rcl
xchg
jecxz
sbb
sbb
call
pop
fucomp
cmp
rclb
ljmp
mov
pop
negb
lock
test
push
mov
xchg
leave
sub
jns
sbb
call
inc
xor
cli
xor
mov
test
lock
inc
push
std
test
rolb
cmpb
dec
test
xor
inc
inc
mov
call
call
cmc
in
rcrb
cmp
mov
mov
cmp
mov
lods
stos
ret
movd
mov
cld
ljmp
fs
mov
aaa
sbb
or
out
push
imul
push
out
dec
cmp
out
mov
adc
enter
ljmpw
dec
jmp
hlt
dec
push
stc
clc
inc
arpl
jmp
cmp
mov
lret
pusha
jge
icebp
jle
ret
mov
mov
addr16
into
xchg
ds
leave
bound
pop
ret
sub
nop
jl
adcl
insl
dec
imul
pop
pop
pop
cmp
loop
xorl
xchg
adc
jnp
test
mov
rep
cmpsb
aad
sbb
push
lret
xor
xor
mov
cmp
xchg
out
mov
int3
jp
out
ss
jmp
movswl
mov
mov
dec
test
ss
xor
push
push
jno
inc
clc
shlb
push
xor
and
cs
fsts
outsl
cwtl
or
pushf
pop
cmp
outsl
sub
icebp
lcall
adc
dec
inc
fs
aaa
pop
adc
sub
outsl
call
push
jecxz
pop
jnp
es
mov
out
sarb
or
stos
mov
pushf
pop
push
adc
push
adc
sbb
mov
mov
push
rcrb
js
add
sub
arpl
push
xchg
test
mov
fldl
int
test
dec
mov
mov
adc
cld
test
xchg
aam
dec
push
rolb
sub
sbb
dec
jge
mov
add
ret
fimull
cmp
in
pop
sarb
cmp
mov
sti
dec
and
test
lods
push
xor
push
or
mov
cltd
jp
push
stos
cs
imul
dec
jb
add
leave
inc
pop
mov
adc
loopne
lea
sbb
adc
sub
mov
push
pop
imul
push
sbb
rcrb
fdivs
and
inc
mov
pop
fimull
mov
push
cmp
popf
shll
push
hlt
testl
mov
insl
lds
pop
sarb
jp
lea
fidivl
push
jae
jo
nop
dec
dec
or
dec
out
test
push
stos
dec
cmpl
mov
aaa
lods
sbb
xor
adcb
mov
cmp
cwtl
dec
adc
hlt
mov
push
mov
stos
push
int3
add
jecxz
mov
movsl
lret
jge
add
push
pop
shll
movsb
push
fdivrl
or
addb
in
div
sub
mov
xchg
dec
insl
cmp
add
sbb
cmp
or
xor
inc
in
and
loopne
jo
mov
sub
out
sbb
jl
js
aam
enter
xchg
dec
bound
pop
cwtl
pop
rolb
iret
gs
sti
loopne
addb
mov
cld
sub
mov
les
jbe
fimuls
orb
adc
xchg
dec
dec
cmpsb
out
test
mov
and
adc
fildl
jge
and
pusha
adc
outsl
sti
sti
pop
mov
add
cmpsl
jo
pop
lahf
and
and
xchg
lods
addr16
cld
pop
pop
mov
pop
xor
cmp
ljmp
lock
adcl
xorb
inc
scas
mov
add
stos
icebp
jnp
push
sub
and
jl
fistps
fdivp
push
in
and
mov
cmpsb
jge
push
xchg
out
popa
xchg
add
dec
push
mov
lcall
js
cmp
jnp
fstpl
jle
cmc
imul
daa
xchg
or
mov
xchg
stos
in
jnp
repnz
test
movsl
jb
enter
xchg
pop
mov
loope
lea
adc
aas
repnz
or
adcl
roll
xor
dec
mov
jno
scas
push
and
scas
push
sbb
loop
mov
cmpb
push
mov
test
mov
push
jbe
out
hlt
xchg
mov
outsl
lret
fistl
jne
ret
cmpsb
adc
in
mov
rol
dec
loope
jle
jbe
sub
ja
scas
in
xchg
mov
sbbb
cmpsl
ja
call
and
add
enter
xchg
and
pushf
popa
xor
sbb
jmp
mov
in
jge
cmpsl
mov
jle
into
jbe
mov
jle
inc
lock
stc
cld
lods
outsl
pop
lods
xlat
inc
push
fimuls
leave
pop
imul
sahf
flds
iret
mov
les
roll
inc
cmp
xchg
insl
cli
insl
push
xchg
sbb
ret
ljmp
jbe
mov
add
xchg
stos
xor
sbb
pop
cmp
aaa
cmp
sbb
mov
jg
addb
inc
sub
movsb
mov
xchg
sbb
enter
test
pop
cmp
lea
sbb
mov
ret
adcl
dec
clc
out
movl
inc
dec
aas
mov
repz
out
addl
jl
dec
shrb
or
and
sbb
jno
shrb
pop
ficompl
mov
lcall
je
mov
xchg
aaa
nop
scas
out
jg
inc
add
clc
mov
js
cmp
pop
or
cmc
fs
and
pop
mov
pop
cmp
sbbl
jae
xor
push
icebp
cli
in
inc
es
lods
cwtl
jno
xchg
pusha
mull
outsb
push
and
jne
cld
push
dec
imul
dec
xchg
add
jnp
in
add
jbe
pushl
fstps
dec
adc
test
es
dec
stos
aad
mov
push
int
stos
pop
sub
adc
push
push
cltd
out
lahf
cltd
jge
and
xor
outsl
xchg
xchg
out
xor
pop
lret
in
ret
jge
inc
pop
test
and
sbb
nop
and
test
cmp
mov
roll
popf
dec
add
sub
push
inc
fcomps
int3
insb
shl
adc
push
in
in
mov
cmpsl
repnz
out
adc
xchg
xchg
or
iret
xchg
or
cmc
hlt
and
jae
inc
dec
icebp
pushf
decl
pop
sub
mov
or
inc
push
xor
xor
je
pop
cmpb
leave
inc
scas
test
dec
pushf
gs
insb
push
nop
sarl
jne
lods
mov
rcr
push
dec
xchg
push
outsb
jge
pop
xor
daa
rorl
test
dec
scas
cmp
pop
push
lock
ja
pop
mov
mov
pop
iret
iret
test
dec
push
shll
pop
les
jp
dec
and
pop
shrw
hlt
enter
add
dec
add
loop
dec
jmp
les
stc
bound
das
daa
inc
dec
sbb
xchg
cmpsl
mov
or
pop
add
ss
lods
imul
scas
es
sbb
loopne
jno
cmc
add
ret
int3
mov
dec
pop
xor
mov
dec
sub
cwtl
popf
and
and
out
rclb
xlat
xor
xor
pop
jge
sti
loope
add
push
dec
mov
lahf
mov
je
xchg
xor
adc
sahf
cli
pop
xor
push
outsl
cmpsl
jge
movsl
xor
mov
imul
xchg
lea
rorb
repnz
sbb
xor
xor
jmp
sti
or
jp
jl
loopne
sahf
pop
scas
ja
rclb
aas
shrb
in
dec
fcomip
cmpb
mov
fmull
xchg
pop
mov
jb
shll
aaa
adc
ficoml
lds
daa
lcall
fwait
dec
cs
mov
pusha
mov
repz
clc
mov
out
xorl
cmp
int
sbbb
xchg
mov
or
ficompl
lahf
push
dec
pop
xor
lret
ficomps
cmp
das
pop
xor
xor
jecxz
fisubl
shll
jmp
das
js
clc
pop
cmp
popf
fs
scas
lcall
sbb
xchg
adcl
xor
ljmp
jae
mov
push
hlt
pop
dec
stos
scas
mov
pop
test
lods
icebp
xchg
mov
loop
clc
or
repz
loope
or
sti
xchg
call
sarb
cmp
repz
repnz
jae
xor
jmp
mov
and
mov
mov
sbb
jecxz
xchg
scas
or
mov
fimuls
outsb
sbb
sub
imul
lret
test
mov
shrb
inc
and
int
loop
rcl
cmpsb
loope
xchg
call
repz
jecxz
pop
xor
pusha
aad
pop
lds
imul
xor
mov
and
into
nop
fsubrl
imulb
inc
insb
mov
fldcw
push
shlb
cmp
jne
xchg
xor
lods
pushf
test
jnp
xor
test
push
movsb
pushl
in
shlb
mov
pop
xchg
add
rorl
ljmp
xor
fistpll
and
data16
xchg
xor
mov
in
dec
sarb
and
sub
pop
leave
sbb
xchg
rcll
lods
inc
sub
in
dec
cmp
or
shr
xchg
out
pop
std
les
imul
lcall
xchg
in
push
push
insb
sub
adc
lock
push
in
xorl
xor
fwait
push
mov
inc
arpl
pop
inc
aaa
push
pop
inc
repz
insb
dec
test
cmp
mov
xor
std
adcb
mov
inc
mov
xchg
jb
xor
inc
jae
xor
ja
mov
or
mov
subl
sahf
hlt
adc
scas
sbb
and
in
ds
int3
cmpsb
in
cmp
icebp
cmp
rolb
inc
sbb
cli
push
pop
dec
aaa
ja
xor
stc
inc
pop
push
jg
in
faddl
push
shrb
pop
and
sbb
enter
out
xor
pop
sahf
mov
int
mov
sbb
dec
in
jno
or
mov
imul
outsb
sub
adc
xor
mov
dec
and
sahf
lds
cmp
in
sub
mov
jno
repz
mov
mov
out
push
test
loopne
loope
out
fs
jo
outsl
push
popf
cmp
dec
push
outsb
leave
imul
push
les
lret
jl,pn
bound
imul
stos
inc
addr16
in
clc
and
and
int3
sub
mov
das
cmp
xchg
je
or
mov
add
lods
mov
inc
push
stc
mov
jnp
popf
cwtl
inc
sbb
sbb
data16
insl
das
loopne
xor
or
and
xchg
inc
fs
jno
sbbb
jg
andb
rclb
loope
stc
mov
cmc
int3
test
mov
push
inc
add
call
aam
pop
roll
push
imulb
adc
nop
sub
and
dec
enter
lds
leave
dec
aam
aam
cltd
jo
mov
jns
dec
lcall
jb
repnz
gs
and
xchg
fwait
movsl
arpl
dec
addr16
sbb
lods
and
int
mov
insl
and
rolb
xor
pop
sarl
lea
dec
dec
mov
xchg
fdivs
pop
sub
mov
xchg
xchg
mov
movsl
cmp
in
push
sub
sub
aam
js
ret
or
add
xchg
lahf
add
or
call
stos
cmp
inc
div
jle
aaa
mov
jo
fidivl
dec
sbb
into
push
push
loop
test
push
stos
outsb
outsl
mov
aas
jnp
jmp
and
mov
shlb
lds
sahf
cmc
mov
arpl
sub
push
push
push
mov
push
sub
scas
imul
adc
xor
xchg
clc
call
outsl
andb
sub
fmuls
hlt
sbb
out
fisubrl
adc
sahf
pop
cmp
pop
in
daa
cmp
pop
daa
xor
rcrb
jmp
test
aaa
test
inc
sub
xchg
test
dec
popa
inc
inc
testb
fnstenv
or
pop
sub
insb
push
fildll
mov
lahf
dec
pop
out
xchg
jg
lcall
iret
sarb
aad
cmc
xor
pop
lcall
push
sbb
shr
scas
mov
inc
inc
div
mov
dec
or
or
lods
xchg
pop
sbb
jecxz
jns
out
inc
cmpsb
sbb
aad
call
xor
jle
dec
jae
test
xor
dec
sub
loopne
mov
lahf
cmc
mov
or
decb
sub
daa
dec
fcomps
xor
push
sbb
lods
xchg
pop
jmp
lret
jge
iret
sub
fldt
inc
aaa
rcl
pusha
pop
int
pusha
mov
cwtl
lock
cld
mov
jno
icebp
cltd
mov
scas
fsubrl
sbb
je
push
lods
push
gs
sbb
xlat
mov
arpl
xlat
mov
lret
push
in
out
inc
testb
mov
arpl
add
mov
js
cmpsb
out
mov
xor
jle
lods
pop
test
lea
lods
adc
and
or
or
clc
aaa
leave
or
mov
pop
push
or
cmpb
mov
pop
sbb
xor
pop
inc
adc
pop
xchg
pop
jg
daa
pop
cmp
xchg
jnp
je
out
in
mov
dec
xor
aad
and
or
inc
or
mov
mov
rcr
fxch
shll
jmp
jp
leave
cmp
scas
imul
cwtl
insl
arpl
jge
inc
mov
push
lcall
hlt
jne
xchg
adc
sub
popf
fmuls
jno
xlat
loope
sub
sub
aaa
xor
aam
std
adc
pop
push
sbb
popa
mov
mov
les
fcompl
inc
inc
testb
arpl
cli
lds
adc
aam
mov
scas
or
add
xor
shlb
data16
sub
xchg
jecxz
sahf
and
jb
movsl
jge
ljmp
repnz
sub
out
mov
adc
movsl
push
enter
fisttpll
or
jg
orb
aam
pop
dec
jne
dec
pusha
and
sti
sub
mov
xchg
inc
out
inc
inc
adc
movsl
mov
fwait
lock
stos
xlat
flds
xor
movsl
shll
movsl
jnp
push
sub
lods
imul
icebp
fsub
fwait
pop
or
test
bound
or
inc
popf
mov
pop
cwtl
ss
push
push
repnz
sbb
insb
insb
dec
out
mov
mov
jne
test
stc
dec
push
sbb
or
sub
mov
in
push
push
inc
inc
icebp
add
mov
or
push
dec
jecxz
adc
lods
add
xchg
inc
out
push
and
jp
ret
add
push
cmp
add
or
and
lods
mov
cmp
sahf
inc
add
rcrl
enter
dec
mov
jb
cmpb
add
mov
divb
out
push
and
pop
mov
and
loopne
add
js
mov
fwait
repnz
jmp
in
inc
push
ja
rclb
mov
stos
rorl
jns
add
pop
loop
sub
sahf
das
aad
lock
xor
sub
sub
xor
jp
imulb
pushf
hlt
lret
lahf
roll
shlw
pop
into
xor
iret
pusha
out
jne
or
ret
sub
popf
and
fdivr
sub
or
mov
push
mov
mov
das
mov
repz
fbld
fst
or
jmp
or
and
jle
dec
loopne
push
sub
or
xchg
sbb
jp
icebp
push
cmp
popa
pop
or
and
mov
inc
push
aam
cmpl
leave
int
push
loope
repz
sub
popa
pop
loope
clc
pushf
movsb
or
daa
movsl
test
stc
sti
shll
jnp
push
jl
lods
or
mov
ret
mov
ret
jmp
push
push
mov
fimuls
mov
cmp
repz
insl
dec
or
fistl
or
movsl
and
paddd
movsl
sub
xchg
jp
adc
fdiv
jo
adc
sbb
dec
or
cmpb
xchg
and
cmp
lods
test
mov
mov
in
mov
fstpl
jp
in
sarb
mov
pop
leave
into
popa
cmp
popf
push
cmp
xor
repnz
in
int3
sar
push
pop
cwtl
test
push
jno
or
jle
xchg
shrl
mov
cmp
add
push
movsb
fisubrl
pcmpeqb
sbb
pop
das
mov
mov
or
lds
jne
or
not
mov
and
and
jle
and
mov
mov
int3
insb
test
sub
loopne
fidivl
mov
rcll
mov
test
mov
pushf
in
ret
jo
lret
in
outsl
jnp
out
push
mov
mov
lahf
aad
sub
push
mov
fcomip
insb
dec
js
popf
inc
sub
stos
xchg
xchg
aam
stc
xchg
test
xor
mov
subl
push
dec
jo
fisttpll
insl
jo
dec
sub
ret
adc
or
mov
add
sub
pop
mov
imulb
add
push
cli
out
addr16
push
cltd
fcompl
jb
push
mov
pop
or
ja
jb
pop
dec
cwtl
lods
lahf
scas
cltd
sahf
rol
mov
dec
xchg
testl
rorl
jp
mov
xor
rolb
test
mov
ret
ficoms
push
stc
cmp
stc
loopne
xchg
repz
mov
test
ficoms
jg
adc
jmp
testb
push
dec
adc
xchg
aaa
addr16
dec
jne
imull
imul
bound
jecxz
fldcw
sbb
push
pop
sub
je
addr16
sar
jl
popf
fistps
lods
inc
xchg
jmp
cmc
sbb
inc
jae
adc
lret
pop
punpckhbw
lock
jb
mov
xchg
outsl
mov
ret
fnstsw
xor
ds
cmpl
pop
xlat
mov
add
sbb
mov
xor
mov
movsl
xor
or
lods
add
pop
push
jecxz
test
out
test
jae
in
mov
sub
xorb
pop
hlt
out
hlt
lods
jnp
dec
shr
ficoms
xor
add
mov
lahf
fwait
adc
arpl
insb
mov
cmp
int
push
jg
xchg
sti
orb
cwtl
repz
pop
rcrl
mov
push
pop
dec
mov
rcll
or
mov
inc
or
test
fnsetpm(287
dec
leave
add
mov
cmpsl
in
les
in
lret
push
jl
bound
sub
filds
outsb
and
pop
into
enter
add
or
push
enter
cltd
repz
fs
and
jbe
std
pop
clc
out
mov
pop
adc
bound
negb
cwtl
add
xchg
cmp
push
repnz
shll
jnp
xchg
fs
adcl
pop
pop
xchg
ret
add
xchg
into
or
enter
jo
insl
test
adc
cltd
push
in
imul
int3
jo
out
outsb
add
and
fimuls
mov
les
mov
scas
jns
stos
loop
push
lcall
sub
push
jge
jge
xorl
dec
je
jle
jl
add
lods
xchg
ret
mov
lcall
or
mov
push
or
sub
pop
ret
pusha
rorl
clc
out
push
pop
push
mov
test
or
fcmovnb
nop
add
sbb
or
jb
std
add
cmpsl
repnz
xor
test
scas
test
inc
or
stos
mov
push
cli
pop
ja
jnp
push
repnz
pop
jl
ja
or
xchg
add
test
test
dec
fs
mov
iret
push
add
dec
popf
into
bound
jno
popa
jns
dec
addb
cltd
lret
ret
cmc
xchg
out
lahf
outsl
add
adc
rcr
iret
add
mov
int3
je
push
xchg
jmp
cmp
push
push
std
scas
cmp
rcll
in
lods
sub
outsb
ljmp
fbstp
jne
insb
loope
jb
mov
sti
push
loopne
daa
adc
or
outsb
lret
enter
insl
cmp
fisubl
pushf
rorl
std
das
dec
lret
repz
iret
incl
cmp
loopne
sub
adc
scas
jge
scas
in
iret
mov
push
xchg
test
into
mov
imul
pusha
and
add
movsb
mov
pop
jbe
sub
pop
inc
inc
and
pop
ror
mov
xor
xchg
cwtl
mov
les
std
jecxz
adc
add
sti
xchg
sahf
mov
cmp
sub
in
cmc
dec
xchg
mov
push
add
lea
push
jo
jnp
and
enter
or
clc
loope
jne
iret
loopne
mov
lret
aam
fst
ss
jae
fs
inc
pop
cli
sarb
adc
add
ja
shl
jno
movsl
mov
mov
inc
jbe
xor
jno
xor
rclb
sahf
sahf
call
adc
dec
adc
lock
es
or
xchg
jl
div
ret
sub
sarl
jmp
sub
in
popf
pushf
loope
sub
mov
js
dec
aam
pop
jo
repnz
pop
aaa
adc
outsl
faddl
cmp
sti
dec
push
ret
adc
pushf
inc
or
ljmp
dec
xchg
inc
mov
dec
bnd
dec
test
cltd
aad
cbtw
adcb
jecxz
and
movsb
mov
lahf
push
inc
jl
scas
cltd
popa
inc
xchg
cmp
mov
ret
pop
push
cmp
fwait
add
punpcklwd
jno
pushf
mov
adc
pop
bound
jae
lret
add
sbb
jmp
out
into
mov
mov
popa
mov
ret
cmp
xchg
cmpsb
cwtl
sbb
pop
cmp
jg
outsl
popl
js
xchg
idivb
sbb
pusha
in
jl
sbb
mov
sub
pop
cmpb
mov
jle
inc
pop
repnz
jns
add
loope
dec
push
aad
and
cmp
inc
dec
data16
outsl
jle
fcmovne
add
int
push
and
and
adc
dec
dec
push
test
ds
mov
and
mov
jo
mov
sbbl
rol
mov
push
ss
mov
mov
fidivs
jno
pop
push
fcompl
fmuls
cmp
rol
sarb
adc
lods
fistpll
and
and
das
sbb
fucomip
popf
imul
pop
xchg
scas
mov
clc
jae
or
jae
add
in
xor
dec
jb
lcall
xor
cmc
out
sbb
subl
push
fisubs
push
rolb
nop
mov
fs
push
xor
mov
inc
and
mov
ljmp
jnp
xchg
cmp
and
push
lods
leave
add
call
mov
movsl
jg
popa
jle
pop
in
push
orl
idivl
imul
or
pop
repnz
jbe
js
mov
out
cmp
jb
mov
sbb
lahf
les
xchg
sub
int3
mov
xchg
xor
push
lds
scas
adc
addb
xor
mov
iret
sbb
jnp
sbb
movb
jl
mov
lret
lock
fs
inc
mov
lods
push
inc
lret
clc
ret
xchg
aad
enter
out
ss
or
out
dec
pop
xchg
leave
push
sbbb
add
jne
adc
int
jecxz
sbb
or
push
mov
push
outsb
lods
inc
adc
dec
lods
sbb
adc
loop
fcomps
mov
inc
jg
lea
dec
dec
push
adc
add
shr
xchg
xchg
call
mov
or
lea
or
lcall
lret
jecxz
xlat
adc
inc
or
pop
mov
shll
jl
fdivs
jae
lcall
jae
push
sbb
inc
push
les
pop
pop
lea
loop
shlb
mov
jns
adc
and
rcrl
inc
sbb
pop
xchg
cmp
dec
adc
and
xor
or
push
jne
and
mov
adc
lods
jnp
loopne
mov
js
pop
lds
mov
jl
cmp
in
fisubrs
je
imul
inc
icebp
das
in
leave
sbb
lea
mov
jl
lods
enter
lods
sub
mov
loope
rorl
pop
adc
xchg
scas
in
aaa
rcll
jmp
mov
or
mov
mov
mov
cwtl
mov
cwtl
xchg
sbbb
scas
push
dec
xor
add
shll
ret
cmc
cmpsb
cmpsl
sti
push
out
icebp
push
pop
negb
dec
push
insl
jle
add
xor
sti
mov
test
std
jge
jp
inc
adc
pop
pop
jp
xchg
shrb
int
inc
dec
shrb
adc
ljmp
pop
cli
insb
push
xor
mov
ss
out
stos
outsb
and
loope
ja
daa
push
das
int
stc
ret
xor
pop
clc
push
in
nop
movsb
fmuls
sbb
xor
push
xor
fs
push
into
imul
gs
sbb
inc
adc
lcall
into
or
iret
lea
xchg
sbbl
das
dec
dec
mov
je
inc
incl
push
xchg
xchg
mov
into
in
push
dec
mov
pop
mov
pop
xchg
fcmove
mov
jo
and
jmp
dec
cmp
lret
fimuls
inc
lods
xchg
mov
dec
mov
ret
ljmp
cmpl
imul
dec
lock
xor
mov
lret
pop
pop
shl
pop
pusha
mov
popa
jae
jbe
jle
jbe
mov
push
dec
pop
sbb
iret
xorb
ret
sbb
sub
mov
shll
sbb
jns
push
out
adc
sbb
jecxz
in
xchg
push
stos
cmp
sti
xor
pushw
push
filds
xor
or
fsubrs
in
ljmp
dec
pop
jge
xchg
mov
ja
jmp
insl
mov
rcll
xor
loope
in
pop
sub
in
test
js
dec
enter
adc
arpl
pop
cmp
push
sbb
dec
hlt
cmpsl
dec
cmp
and
cs
dec
mov
jmp
jnp
or
outsl
jo
inc
xorl
mov
or
push
aas
add
icebp
cmc
sbb
mov
mov
pop
inc
es
sub
jb
repz
ret
insb
outsb
ficomps
test
xchg
push
inc
jl
or
add
jge
lret
sahf
adc
pop
les
jns
adc
or
out
aam
xor
sub
out
mov
int3
call
sub
cli
pop
imul
xor
fcmovnu
loop
jae
pop
push
mov
repz
scas
jg
mov
pop
xor
mov
cmp
call
mov
leave
push
add
mov
mov
mov
iret
cmp
push
adc
es
out
lea
cmpsb
int
lret
shlb
into
nop
insl
orl
add
inc
cmp
mov
xor
out
inc
inc
mov
imull
pop
push
ret
leave
int3
int
mov
stc
and
xchg
pop
xchg
iret
adc
cli
dec
inc
add
sub
jno
dec
jg
dec
xchg
sbb
jp
sahf
jnp
je
mov
in
into
popa
lea
jmp
fadds
pop
addl
xor
push
jmp
mov
mov
push
in
movb
or
mov
sub
test
clc
push
aad
pushf
mov
pop
adc
sub
loope
ljmp
test
pop
jmp
push
or
adc
dec
icebp
jl
add
push
xchg
test
pop
jnp
dec
inc
nop
insb
loop
fstps
dec
lahf
mov
les
jle
inc
or
lock
mov
sub
dec
xchg
adcb
aad
in
aas
stos
mov
or
push
cmp
dec
ds
mov
shlb
push
icebp
dec
dec
mov
push
inc
xchg
cmp
pop
inc
mov
add
lret
mov
rorl
mov
hlt
test
lods
test
sub
sbb
sub
push
sub
mov
push
mov
inc
mov
stc
push
cmp
add
sub
aam
mov
shll
cmp
outsl
ja
in
jns
cld
shlb
loop
cli
shll
cmpsb
or
dec
enter
outsl
push
ss
mov
mov
mov
out
and
push
out
fistl
cli
cmp
sub
adc
sbb
inc
and
call
lods
leave
pop
cmpsl
jns
mov
pusha
adc
pop
loop
pop
or
jno
pop
shlb
or
xchg
stos
movsl
adc
xchg
mov
xchg
mov
daa
mov
lea
sbb
daa
icebp
ret
loop,pt
mov
and
fidivs
into
mov
fucom
aad
jno
sar
cwtl
inc
loop
mov
mov
adc
add
stos
jbe
icebp
push
ss
and
shr
mov
jnp
mov
mov
mov
pop
mov
movsl
push
sub
pop
in
pop
mov
inc
pusha
mov
jl
dec
inc
jl
pop
in
bnd
test
ret
xchg
pop
add
scas
jl,pn
jno
subl
lret
jnp
ret
adc
mov
sbb
jnp
cs
adc
cs
fucomp
andb
or
insb
sbb
and
cli
or
cltd
jb
dec
movsb
jle
mov
pushf
das
push
mov
sti
push
xchg
lods
add
or
arpl
dec
and
or
xchg
subb
push
pop
int
daa
imul
cmp
fucomi
mov
and
les
pop
mov
xlat
pusha
dec
sub
dec
dec
outsb
imul
out
cwtl
lock
cld
mov
out
push
arpl
pop
adc
scas
adc
pushf
pop
lret
mov
imul
dec
fwait
loopne
outsb
xlat
leave
xor
cli
int3
sub
test
jmp
dec
outsb
xor
pop
leave
mov
outsl
or
subb
inc
dec
bnd
loopne
and
sbb
popa
sub
sub
xlat
subl
push
mov
movsl
inc
cmp
pop
out
pop
out
dec
ljmp
test
lods
mov
xor
lahf
add
repnz
jnp
add
jl
mov
adc
popf
mov
xor
pop
mov
mov
push
imul
push
push
sbb
pop
adc
lahf
lds
dec
jb
pop
xor
sbb
xchg
je
icebp
sbb
mov
mov
xor
pop
jns
call
jmp
fists
int3
cli
cs
push
adc
stos
push
cmp
adc
mov
mov
aaa
dec
mov
loope
push
jle
loope
rcrb
dec
aad
inc
cmp
mov
cld
mov
adc
lret
pop
out
pushf
push
out
pop
testl
pop
inc
dec
xor
jle
pop
int
mov
inc
repnz
data16
sub
xchg
es
pop
pushf
or
push
imull
cmp
rep
pop
mov
rcll
and
sbb
out
pop
je
jecxz
lods
cwtl
mov
fisubrs
sub
loopne
push
data16
xchg
xchg
cwtl
jns
push
sbb
test
adc
fdivrl
fildll
pop
push
sbb
xchg
ret
xlat
push
mov
jbe
aad
and
es
pop
mov
dec
nop
cmp
in
dec
sbb
jmp
sar
lea
mov
xor
push
cmp
xchg
or
pop
cmpsb
fidivl
mov
nop
pop
lret
pop
mov
clc
jp
int
and
hlt
popf
adc
test
push
pop
out
mov
adc
xchg
add
inc
sbb
shll
arpl
shr
jo
mov
and
xor
add
push
sub
mov
cmp
into
stos
decb
xchg
push
xchg
mov
adc
xchg
aaa
and
aaa
jmp
xchg
add
cmp
mov
sub
mov
xchg
pop
inc
movsb
push
aad
lock
xor
call
call
movsl
mov
xchg
add
std
int
sub
pop
sbb
dec
push
and
dec
sub
lret
cli
mov
or
inc
pop
xchg
movsl
xor
jp
push
jo
xchg
mov
or
cld
jbe
jns
sarl
in
adc
cmpsl
jmp
jo
sbb
cmp
jne
incl
push
nop
inc
mov
js
insl
out
pop
mov
lret
sti
aaa
fidivl
pusha
lock
mov
test
ja
rol
scas
and
cmc
or
shll
and
xor
addb
xor
dec
mov
mov
add
xorl
ds
cmpsl
addb
mov
push
cmpsb
aad
add
jecxz
icebp
or
sti
mov
in
mov
das
sub
bound
aaa
mov
jmp
mov
lret
rol
lea
mov
dec
fldenv
lret
pop
pop
xchg
sti
adc
hlt
cwtl
shrb
test
movsl
push
in
ficoml
dec
pop
adc
sub
pop
cwtl
cltd
enter
adc
pop
inc
and
popf
push
fwait
xor
cmpsb
jge
mov
lds
jl
stc
cs
es
stos
cmp
mov
out
jmp
jl
nop
mov
js
add
push
pop
dec
push
xlat
cwtl
outsb
cld
mov
cmp
fadds
fisubrs
ss
pushf
sar
fstpt
in
shr
dec
sbb
mov
jmp
ds
sahf
imul
ljmp
mov
dec
fucom
repnz
enter
lcall
lahf
pop
and
or
xor
or
imul
hlt
mov
aad
dec
outsl
xchg
inc
sbb
inc
cmp
mov
or
push
xorb
sbb
inc
sub
or
scas
cmpsb
push
sbb
jnp
sbb
adc
or
cltd
inc
ficoml
flds
adc
mov
hlt
jmp
jl
mov
out
cmp
dec
adcb
and
lock
sbb
dec
push
cmp
xchg
push
pushf
mov
cmpsb
jg
cmpsb
mov
xchg
icebp
addr16
into
sub
addb
rclb
div
loope
mov
sbb
push
inc
leave
mov
imul
push
mov
fwait
sub
lods
pop
xchg
jo
xchg
lds
stc
in
fmul
fadds
incb
movsl
outsl
int3
pop
call
dec
dec
push
xchg
mov
jg
je
pop
inc
mov
cmpsl
shrb
rep
lds
inc
rcrb
mov
test
lea
mov
aad
ds
das
mov
pushl
push
ret
or
rcr
dec
xchg
adc
push
add
loopne
imul
mov
scas
in
les
jl
dec
pushl
xchg
mov
or
ja
mov
mov
nop
push
push
loope
adc
gs
lock
xorb
sbb
mov
jae
xor
jle
or
sti
pop
lcall
jnp
adc
jo
or
nop
out
adc
mov
dec
addr16
mov
addr16
or
xor
sbb
mov
cmp
push
add
mov
ror
sub
aaa
jb
incl
cld
mov
insb
sub
test
fdivp
cmp
inc
fiaddl
cli
test
cltd
sbb
push
sbb
jbe
popf
add
dec
in
jno
pop
out
out
ss
mov
add
mov
push
inc
rcrl
ret
je
test
mov
mov
xor
pop
daa
lahf
ds
aaa
cmp
lds
sahf
fnstsw
inc
pusha
push
mov
sahf
dec
into
in
and
ja
xor
fcompl
jne
dec
and
outsb
add
mov
int
aaa
and
push
jno
ss
pop
adc
out
lea
fdivl
out
cmpsl
lret
push
jl
and
sub
dec
gs
andb
stos
adc
cmpl
mov
cmpsl
pop
and
or
test
dec
ljmp
icebp
push
fidivrl
xor
mov
sub
dec
dec
lods
jecxz
fnstcw
dec
decl
je
incb
sub
scas
mov
sbb
add
cs
enter
inc
stc
subb
pop
adcl
inc
pop
movsb
jecxz
adc
or
test
call
jp
xchg
insb
mov
dec
xchg
dec
call
mov
xchg
lea
xor
pop
dec
addl
xlat
cmp
jne
call
adc
add
mov
mov
jg
aam
xor
mov
mov
into
pusha
scas
cmp
pop
mov
scas
jge
in
lea
popa
cs
jmp
sbb
add
movsl
cmp
sbb
mov
insl
mov
scas
inc
cmpsb
inc
jne
popf
add
jno
inc
fbstp
cmp
jno
imul
mov
inc
sbb
aad
cmp
lret
push
dec
jl
cmp
jmp
mov
dec
xor
jns
sub
jmp
dec
cmp
outsb
pop
xchg
ja
cmp
cmpl
dec
iret
ret
xchg
jb
lds
or
sbb
test
icebp
fs
pop
cs
jns
or
cmpsl
hlt
dec
jl
test
out
and
xchg
insb
or
test
jmp
add
xlat
shll
cmpsl
movsb
sbb
lret
icebp
dec
xlat
testl
jge
fdiv
xchg
insb
dec
xchg
test
xchg
push
fisubs
jnp
insb
lods
cmp
add
dec
icebp
shrl
loop
fisttps
popf
bound
mov
scas
lahf
in
push
daa
fwait
cmp
pushf
and
insb
mov
into
mov
sub
movsb
cld
add
out
jmp
sub
loopne
repz
xor
mov
mov
and
sbb
movsb
fcoml
and
mov
mov
fmulp
jge
push
std
push
std
mov
pop
adc
and
mov
jl
es
stos
xor
pop
xor
inc
mov
sbb
les
jo
cmc
and
sbb
pusha
mov
in
data16
cmpsb
mov
push
jge
pop
js
add
adc
lret
into
clc
stc
mov
int3
subl
cmpsl
jo
lods
mov
jns
jecxz
cs
pop
mov
jmp
mov
pusha
loop
cld
add
lods
cmp
cld
mulb
mov
sub
pop
adc
sti
dec
lea
pop
push
test
les
mov
popa
jge
sar
sbb
shll
bound
pop
les
push
xor
mov
mov
les
outsb
add
lods
cs
xchg
mov
inc
push
sub
add
or
jmp
dec
xor
out
jne
call
adcb
push
adc
jmp
fbstp
push
enter
ss
xor
adc
or
xlat
test
push
lret
pushl
ljmp
mov
jne
fsubrs
ret
jnp
ds
jmp
add
dec
imul
repz
cmpsb
in
shrb
jbe
dec
stos
arpl
mov
pusha
fimuls
push
inc
in
sub
pop
lods
mov
mov
cmp
insl
xchg
add
dec
push
out
mov
pop
cwtl
sub
mov
cmp
enter
sbb
lahf
pop
mov
jns
int3
das
jg
and
cmpsb
xorl
neg
add
out
repz
and
xor
sbb
mov
mov
and
mov
sbb
jbe
aas
xor
xchg
and
mov
repnz
push
adc
cmpsl
add
movsb
xchg
push
stos
xchg
idivb
das
je
stos
push
lea
pop
ffreep
pop
stos
or
cmp
pop
mov
xchg
xor
mov
sub
out
xlat
popf
xor
int
inc
dec
in
test
cltd
xchg
jne
icebp
mov
iret
pop
jp
push
sbb
lods
scas
dec
popa
inc
mov
js
jle
pop
test
inc
xchg
ja
adc
pop
sbb
jns
pop
in
inc
ss
push
popa
mov
and
cli
imul
inc
xchg
in
dec
add
pop
mov
adc
push
cmpb
mov
rcrb
jbe
add
mov
and
mov
xchg
cmp
mov
js
push
dec
mov
jmp
pusha
ret
dec
popf
test
dec
add
imul
xchg
and
mov
clc
negl
inc
js
icebp
inc
inc
xor
xchg
and
mov
out
cmpsl
pop
dec
divb
out
pop
fidivl
cwtl
stos
or
aaa
fnstenv
sbb
xor
adc
xchg
sbb
in
out
orb
stos
int3
sti
jge
jns
cmp
test
sbb
xor
je
shlb
cwtl
sub
ret
xor
mov
mov
jne
xchg
xor
and
cs
or
enter
popf
mov
jnp
bnd
cld
sub
add
jmp
dec
lea
movsb
sub
jle
lea
or
cld
es
or
out
rcrb
push
stos
mov
mov
xor
xor
pop
mov
inc
fiaddl
dec
mov
arpl
ret
je
sti
push
and
hlt
movsb
adc
hlt
jmp
stos
or
in
fwait
mov
jg
and
test
fidivrs
pop
out
mov
inc
leave
insl
xchg
adc
repnz
sub
jecxz
dec
loopne
cmp
push
in
leave
mov
ret
out
mov
shll
cmp
mov
inc
sbb
push
cmp
dec
bound
push
in
mov
mov
repnz
mov
xchg
cmp
cmp
popa
mov
fwait
or
cwtl
jmp
je
mov
gs
sti
test
push
mov
mov
adc
mov
push
mov
sub
insb
cmpsl
jne
popa
stc
and
stos
mov
and
and
nop
cmp
int3
mov
mov
lret
xor
mov
cmp
les
pop
shlb
or
jge
adc
dec
push
aad
xor
jle
push
mov
fbld
insb
mov
ja
and
mov
ret
adc
add
xor
cli
in
mov
loop
movsb
inc
xchg
in
ret
rdpmc
movsb
or
sub
sbb
subl
xor
hlt
hlt
xchg
cmp
insb
push
nop
jb
and
cmp
iret
insb
outsl
je
into
sbb
and
adc
dec
adc
sub
add
test
lret
ds
rclb
push
sbb
loope
push
std
and
lods
sbb
cmp
sahf
cld
dec
and
mov
sbb
cli
sti
xchg
pop
mov
lea
xor
test
jae
push
ret
in
inc
push
pop
jmp
loop
and
mov
jmp
call
add
lret
cmp
and
aas
rol
jg
out
jmp
pop
xor
add
push
repnz
jns
loop
jecxz
or
cmp
mov
jl
cmp
and
xchg
stc
dec
xchg
aas
mov
pop
in
add
xor
mov
pop
add
loop
fs
jno
incb
loop
std
push
xchg
lret
cmpsl
pop
dec
in
or
xchg
push
jne
es
jo
test
adc
and
sub
cltd
pop
rorb
sahf
mov
push
mov
jle
or
or
pop
mov
fwait
gs
cmp
roll
inc
insb
and
adc
lods
and
dec
and
mov
mov
cmpsb
lret
adc
fdivs
aam
fwait
js
adc
ffreep
out
leave
icebp
rclb
cwtl
popa
jns
cmp
xchg
loop
inc
push
gs
cmp
mov
add
inc
lcall
fadds
mov
mov
pop
daa
or
iret
mov
adc
cmp
push
mov
xor
mov
insb
lss
fs
imul
lcall
es
push
jno
cmp
jns
pop
inc
pop
jns
jno
repnz
xor
jnp
jno
std
stc
jbe
in
lods
push
push
jb
push
dec
fs
push
push
data16
xor
clc
lds
lcall
cld
or
pop
in
pushf
leave
pop
inc
ljmp
repnz
loop
xlat
cwtl
in
mov
nopl
pop
test
es
psubusb
and
adc
add
dec
push
pop
negl
negl
push
fwait
jno
insb
pusha
mov
iret
test
shlb
xchg
push
mov
inc
mov
icebp
ret
and
pushl
mov
in
sarl
cmp
mov
pusha
scas
loopne
jnp
lods
xchg
rcrb
sub
out
pop
mov
push
jno
popa
out
jno
mov
dec
pushf
dec
jle
mov
dec
fnstcw
mov
jecxz
cmpsb
int3
dec
insb
add
mov
mov
cmp
sbb
in
adc
add
xchg
add
jecxz
sub
dec
fsubl
mov
and
xor
dec
push
add
xchg
sub
mov
test
pop
imul
cmp
xor
jbe
or
pusha
mov
inc
sbb
daa
popa
aam
sub
cltd
test
xchg
test
nop
out
cs
push
mov
inc
outsl
pop
mov
leave
lods
mov
fsubp
pop
or
or
mov
mov
mov
shlb
jg
aaa
sbb
dec
movsb
icebp
fildl
lcall
cmp
xchg
data16
loopne
mov
push
pop
inc
repnz
xchg
fcoms
movsb
inc
xor
ljmpw
adc
mov
sub
mov
mov
test
lock
bound
shrl
push
inc
sbb
add
mov
aaa
sbb
mov
inc
sbb
aad
pop
sub
test
imul
mov
pop
sub
add
sbb
stc
lahf
jg
xor
mov
dec
pop
xor
iret
ret
scas
cmp
pop
mov
lock
addr16
and
xchg
and
and
mov
test
xor
mov
jp
cmpsl
cmp
lahf
jge
gs
popf
loop
scas
mov
dec
lret
xchg
or
out
incb
ret
sbb
jne
or
rclb
loopne
jb
scas
cld
stc
mov
adc
mov
cwtl
mov
adcb
adc
jmp
mov
pop
cmp
jmp
jmp
inc
ret
push
cmp
bound
push
xor
pop
xor
in
test
sarl
inc
mov
xor
rolb
sub
lcall
mov
xchg
xor
and
adc
inc
lock
sbb
cmc
jp
nop
testl
push
int
test
je
stc
outsl
adc
pop
mov
lea
pop
in
xlat
jmp
leave
push
dec
out
sub
stos
cwtl
mov
pop
mov
imul
shlb
out
fmull
push
scas
mov
cmpsl
ret
les
mov
lret
sub
sub
out
pusha
jmp
fwait
clc
xchg
inc
or
test
cmp
das
repz
sbb
bound
cmc
push
adc
jmp
lret
jecxz
jp
add
arpl
insl
loope
xchg
and
inc
mov
popa
ljmp
dec
sub
inc
jle
inc
ret
cmpsl
sbb
in
mov
pop
or
mov
inc
or
adc
icebp
repnz
xor
bnd
aas
popa
and
inc
lods
popa
movsb
popa
adc
xchg
add
test
inc
scas
arpl
push
adcl
cmc
stos
ljmp
pop
add
xchg
and
test
fldl
imul
dec
cmc
and
test
in
ds
bswap
adc
push
cld
pop
orl
sub
push
mov
push
addr16
test
xlat
xor
adc
or
dec
mov
shrb
mov
loope
jmp
sti
push
inc
jno
test
mov
aad
xrelease
sub
mov
xchg
ss
into
ja
adc
sub
mov
xchg
sar
vhaddpd
lret
sbb
adc
pop
push
shr
dec
xlat
lcall
outsl
push
adc
lods
adc
mov
mov
lahf
cmp
push
cmp
repz
repz
lahf
test
mov
jbe
dec
insb
aam
pop
sahf
call
cmpsl
inc
cld
pop
cmp
xor
cmp
repz
aaa
jge
ret
out
fiadds
adc
aad
sti
scas
stos
mov
mov
bound
adc
or
sub
or
ds
dec
cs
stos
cltd
std
sbb
das
jmp
fisttpll
enter
pushf
shrb
rcll
sub
xchg
je
dec
les
ret
shll
lret
repnz
fbld
mov
pop
cmp
lea
xor
or
adc
jnp
loopne
pushf
dec
mov
xchg
cmpsb
pop
insl
shr
sub
add
inc
mov
outsb
outsl
icebp
cmp
add
outsl
and
cmp
push
lret
addl
cmc
add
mov
notb
xor
rcll
es
shrb
adc
xchg
movsb
mov
ficoms
push
test
xchg
jns
popl
cmpsl
lods
push
sbb
pop
ss
adc
loope
js
in
add
mov
pop
jmp
push
xchg
arpl
ret
xchg
dec
cmp
and
cmpb
inc
lcall
fstpl
into
call
adc
out
adc
xchg
xchg
lret
jecxz
loope
adc
mov
ret
jo
add
push
and
inc
insb
add
arpl
jg
mov
aaa
mov
mov
and
or
mov
inc
loopne
pop
pop
cli
pop
xchg
and
mov
xor
pop
push
test
in
cmp
cmpsb
movsb
mov
nop
repz
and
jmp
push
add
ret
outsb
jp
aam
je
mov
or
pop
pop
lock
mov
fs
pop
xchg
je
and
mov
aam
sub
adc
cmp
test
insl
fs
es
adc
lret
or
fnsave
or
fwait
cmp
jb
xchg
add
inc
pushf
jae
mov
adc
scas
daa
cmc
pop
cld
ret
mov
cmp
es
repnz
in
cwtl
in
mov
mov
cli
adc
jge
mov
jle
adc
push
and
inc
aas
sbb
lahf
push
int
dec
ficompl
push
sub
fs
adc
xchg
orb
mov
cmp
in
loop,pt
mov
mov
mov
xchg
adc
mov
pop
or
sbb
out
les
dec
pop
cltd
mov
out
in
push
cmpsl
xor
cld
inc
pop
cmpsl
nop
sbb
test
shrl
out
xlat
and
rorl
cmp
fistpll
add
jns
and
arpl
cmc
mov
testb
xchg
jl
cmpl
xor
int
mov
xchg
adc
jne
sub
mov
imulb
or
dec
add
jae
jno
sub
rcll
inc
fcmovnbe
fldenv
and
adc
sub
sbb
mov
arpl
or
jno
mov
dec
enter
aaa
jnp
add
cmp
in
mov
mov
rep
daa
gs
push
leave
jecxz
push
cmpsb
add
inc
fisttpl
xchg
cmp
push
loope
mov
daa
jne
stc
mov
mov
fwait
mov
dec
pusha
cmp
lcall
push
cmpsl
mov
add
dec
mov
jo
adc
lahf
ficomps
ret
xor
xchg
xlat
xchg
out
add
out
push
aaa
fwait
mov
xchg
mov
cmp
popf
jge
jbe
test
push
push
inc
pop
push
gs
shr
push
fwait
nop
jne
cmpl
or
xchg
ret
in
addr16
aas
cmpsb
mov
cmp
mov
ja
insb
sahf
aas
mov
xor
js
movsb
push
shlb
inc
pop
mov
mov
mov
mov
dec
and
push
adc
dec
dec
pop
add
mov
mov
push
aad
test
scas
xor
jne,pn
cmpsb
push
cli
cmp
push
and
iret
loopne
mov
in
dec
dec
mov
mov
movsl
out
add
jmp
mov
lods
leave
mov
mov
cmp
cmp
xchg
es
sbb
arpl
fsubrp
and
fwait
fwait
mov
out
mov
out
pop
lea
jl
sbb
xchg
or
xchg
cmp
push
mov
cltd
and
call
add
rclb
pusha
mov
loop
das
ja
xor
and
sbb
lahf
mov
loope
and
out
and
mov
movsl
mov
push
lds
sti
stc
in
sub
fwait
mov
pop
shrl
mov
stc
mov
data16
loope
add
lock
sbb
jp
xchg
pop
dec
ret
lods
xchg
xchg
adc
stc
inc
mov
ds
or
sub
push
gs
pop
pop
data16
mov
jle
xor
pop
and
push
lcall
mov
jb
ss
sbb
add
xchg
sbb
mov
or
xor
sahf
dec
sub
pop
lahf
stos
out
xchg
adc
orl
add
or
adc
out
cmp
cwtl
aad
divl
pop
fsubrl
sahf
and
inc
jmp
xchg
stos
outsb
lcall
or
jns
mov
rol
insb
xchg
ret
adc
push
stc
inc
sub
jg
xorb
outsb
stos
pop
xor
lods
mov
cmp
cs
sub
dec
and
enter
lds
push
ljmp
mov
leave
test
fstpt
in
inc
or
push
scas
xchg
mov
addb
mov
ljmp
setge
repnz
sti
jp
inc
out
and
sbb
inc
ljmp
ds
ds
or
mov
adc
rcll
jge
testb
mov
push
scas
xor
pop
or
leave
ds
enter
mov
movsb
mov
int
adc
sub
lahf
dec
shl
add
push
hlt
cmpsb
js
arpl
mov
loop
adc
andl
mov
lcall
movsb
nop
mov
stos
dec
push
mov
sub
cmp
sahf
or
mov
xchg
inc
dec
mov
jge
cld
inc
test
mov
pop
out
add
and
mov
inc
xchg
pusha
ds
dec
cmp
jg
lahf
fildl
pop
mov
ret
mulb
cltd
mov
fildl
jne
sub
out
fimull
push
pop
adc
inc
and
mov
arpl
pop
movups
inc
sub
inc
fdiv
pop
scas
sbb
mov
or
ret
int
shl
jb
fimuls
jge
add
xchg
jb
dec
rclb
cmc
test
in
pop
movsb
adc
mov
movsl
pop
mov
mov
mov
cmp
sar
stc
sbb
je
push
mov
mov
out
jp
lock
dec
cmc
adcl
inc
pusha
jbe
pop
aas
test
xchg
cwtl
scas
cli
dec
incl
mov
push
push
push
ficomps
aaa
popf
or
add
aad
rcrl
or
incl
addr16
push
jb
inc
xor
inc
inc
rclb
or
cmp
out
dec
mov
add
fidivrl
jp
pop
xchg
ret
xchg
test
test
aaa
repz
jb
xchg
insb
xor
js
xorb
jno
lcall
xchg
fwait
sbb
fld
push
outsb
fs
bound
scas
mov
cs
imul
sbb
dec
nop
mov
add
int3
jae
incb
dec
mov
mov
push
sar
cmp
outsb
and
mov
jo
fidivs
push
das
inc
icebp
cmpsl
xchg
inc
add
xchg
jo
jmp
stos
xlat
adcb
jecxz
mov
lock
outsb
pop
push
enter
push
faddl
inc
mov
fsts
cmp
pop
fidivs
pushf
and
into
cmp
push
or
mov
lds
sub
mov
out
out
push
jno
jecxz
push
cwtl
jno
xor
cmp
mov
xchg
mov
fmuls
lahf
pop
rorb
popa
in
inc
shl
aam
pop
add
test
loop
push
add
test
fstp
add
rorl
push
mov
nop
add
push
rclb
or
fsts
inc
loope
shr
aad
inc
outsl
push
jp
xor
scas
xor
mov
mov
lret
lock
movl
mov
aas
jecxz
in
mov
popf
pop
adcl
sbb
jb
jecxz
sub
add
sbb
xor
dec
cltd
movl
push
mov
mov
jecxz
mov
js
insl
inc
fsubrl
iret
stos
xor
adc
int3
sbb
div
out
mov
cmpl
pop
outsl
xor
inc
or
or
adc
ljmp
sub
and
or
mov
push
test
xchg
or
movb
or
mov
sub
jmp
pop
push
or
adc
ficoms
sti
arpl
adc
aam
aam
push
mov
mov
mov
cmp
std
popa
daa
push
or
addl
inc
cmpsl
xorl
vcvtss2sd
ss
das
cmp
xor
adc
adc
pop
pushf
lea
mov
pop
add
cmp
mov
lahf
inc
pop
psrlw
sbb
mov
mov
nop
fdivl
jno
dec
add
pop
and
pop
and
lods
loop
lods
jno
xchg
nop
lock
ljmp
dec
mov
and
xchg
cmpl
mov
div
outsb
ss
lea
adcb
add
shlb
push
aaa
les
mov
scas
or
in
adc
push
add
or
jno
cmpsl
ljmp
aas
fsubrs
and
inc
dec
or
cmp
pusha
ljmp
mov
repnz
ds
mov
cmp
and
inc
dec
cmp
dec
loope
arpl
stc
jmp
test
push
pop
ret
jbe
and
add
inc
mov
and
jl
fldt
xchg
ljmp
sbb
mov
and
and
insl
iret
xchg
mov
adc
xor
mov
jge
pop
loopne
add
jbe
add
and
in
add
lcall
mov
fwait
push
pusha
mov
dec
dec
cmp
xor
lea
add
mov
lcall
andl
dec
inc
outsl
add
jno
mov
sub
stos
loop
jp
sbb
dec
fdivl
xchg
stos
mov
out
pop
xchg
adc
add
call
mov
push
dec
in
mov
out
inc
sbb
mov
out
mov
push
push
in
sub
ja
je
mov
push
cmp
xlat
mov
fcmove
loop
cmpsl
or
les
dec
and
mov
lods
pop
dec
xchg
inc
dec
and
add
pop
push
mov
test
mov
daa
es
pop
jmp
sub
outsb
mov
cmp
and
adc
dec
adc
jbe
pop
push
or
pop
fcmovnu
hlt
fwait
test
mov
add
inc
adc
pusha
enter
rcl
int
jne
aad
in
push
sbb
adc
jae
xor
aaa
mov
leave
push
bsf
in
sahf
sbb
negl
xor
mov
ret
pushf
jbe
fmuls
add
jp
test
jle
jne
adcb
and
in
in
subl
or
aaa
sub
push
dec
mov
jns
scas
and
mov
sbb
iret
mov
and
rcr
adc
out
mov
in
cli
das
pop
sub
dec
pop
or
test
addr16
sbb
aaa
rcrb
es
xor
cmc
pushf
mov
mov
pop
test
xchg
xorb
jecxz
or
loop
leave
push
icebp
cmp
push
push
dec
push
je
mov
jmp
popa
or
mov
hlt
xlat
out
popf
push
int
jns
pop
dec
add
lret
xchg
jbe
xchg
push
popa
add
test
cmp
lret
xor
inc
cmp
mov
jecxz
stos
int3
into
cmp
rolb
mov
enter
pusha
xchg
daa
xchg
sub
ret
mov
jp
dec
shll
and
pop
cmp
mov
stos
xchg
cli
dec
sub
scas
mov
mov
dec
aaa
push
icebp
lods
xchg
inc
test
xchg
inc
xor
jg
sbb
and
movsl
movsb
and
fbstp
jmp
into
sbbl
add
movsl
inc
sub
stc
jnp
mov
sarl
xchg
sbb
xchg
or
jns
and
into
pusha
push
shrl
and
cmp
pop
push
repz
inc
mov
lret
adcl
test
or
movl
ljmp
arpl
sub
or
iret
pop
out
adc
jno
pop
in
mov
xchg
xlat
andb
sbb
xorb
pop
repz
notl
stos
jnp
shl
in
ja
outsl
dec
mov
mov
outsl
sbb
and
jmp
xor
pop
push
dec
or
dec
jbe
lea
shll
ficoms
mov
and
adc
push
push
dec
inc
jne
pusha
pop
jae
fisubrs
xchg
sub
stos
lahf
arpl
jle
mov
and
dec
push
aam
cli
jae
imul
ljmp
inc
cmp
sbb
and
ss
mov
prefetchnta
imul
pusha
inc
scas
nop
pusha
cld
mov
push
add
repnz
imul
lea
inc
add
roll
movsl
push
add
imul
mov
idivb
lods
inc
pop
jb
or
in
jp
js
into
gs
xor
pop
cld
cs
cld
add
sub
or
sbb
lret
sbb
add
cmc
mov
xor
and
xor
xchg
ljmp
test
and
dec
push
mov
movsb
pop
lods
mov
dec
and
inc
xchg
and
mov
lods
jb
sub
mov
xor
nop
mov
mov
insb
adc
xchg
xor
pop
adc
leave
jbe
js
xrelease
jg
ss
mov
in
mov
test
jo
pushf
cmp
push
dec
pop
aaa
push
das
mov
pop
inc
loopne
xor
mov
cs
sub
fistpl
mov
shld
sbbb
adc
and
pop
iret
xor
repz
fdivrl
div
push
mov
arpl
xchg
fsubrs
jbe
sbb
loope
shrl
inc
test
lods
add
sbb
hlt
aaa
mov
ds
out
dec
and
dec
adc
bound
call
xor
xchg
push
dec
bound
das
in
iret
dec
gs
dec
stos
insb
movsl
nop
movsb
andb
and
popf
lret
and
cmp
sub
insb
pop
std
fisubs
and
cmpsl
cmp
fistps
push
cmp
lods
pop
adc
jle
dec
inc
xorb
add
in
outsb
sub
sub
pop
inc
nop
and
popf
cmp
cmp
pop
stos
and
jmp
jge
lea
jnp
jo
bound
orl
rcl
andb
inc
dec
cmp
int
pop
push
mov
cmp
pop
cmc
jle
fsubs
lock
scas
les
enter
in
ret
add
pop
rcrl
jmp
xchg
push
fs
sub
lret
pop
jl
lret
inc
stos
repnz
fisubs
sub
pushf
xchg
out
jns
dec
cmpsl
push
cmovs
loope
xor
cmpsb
ja
cli
pextrw
cli
xor
mov
xchg
pop
test
inc
loop
mov
push
aam
sbb
insl
or
mov
mov
inc
xor
sbb
or
stos
sub
fidivrs
jns
cmc
mov
and
dec
mov
movsb
ret
push
sti
add
add
dec
mov
ret
adc
leave
mov
and
out
adc
test
adc
jecxz
adc
into
and
rcrb
mov
jmp
pop
test
cli
sti
or
and
sub
dec
sub
shl
and
daa
es
push
mov
fs
or
mov
add
sub
fisubl
and
hlt
mov
insl
jecxz
mov
adc
jle
test
iret
lret
mov
or
xchg
cmp
lahf
out
sub
cmpsb
lods
dec
out
jp
and
mov
or
mov
out
sbb
mov
fs
scas
pop
sbb
sbb
jae
xor
pop
xchg
stos
je
pop
out
popa
and
jne
push
orl
mov
enter
mov
cld
fildll
ds
in
shlb
jp
stos
popa
adc
loope
mov
fidivl
mov
mov
int3
es
aad
and
lea
sub
inc
or
jg
and
outsl
mov
or
inc
out
popf
xchg
ret
jp
imul
pop
lcall
jge
fwait
xor
pop
mov
push
dec
pop
add
mov
insb
xor
scas
cld
and
shrl
test
cmp
sti
mov
jb
cmp
or
sub
push
sarb
sub
push
fbld
in
addr16
inc
jnp
fiadds
stos
push
and
jae
shll
loop
add
stos
and
dec
push
inc
inc
xchg
mov
inc
rcll
stos
sbb
push
sbb
mov
cmc
dec
pop
int3
mov
jb
sbb
jo
test
jecxz
sarl
and
popa
pop
outsb
jp
cld
gs
mov
push
cmp
pop
jmp
shr
sub
push
in
les
icebp
add
xchg
sbb
mov
adc
push
pop
or
repnz
dec
cmp
cmpsb
mov
lods
lret
fisttpll
stos
mov
and
adc
popa
push
scas
fistps
dec
lock
mov
adc
pop
dec
js
push
adc
loopne
stc
hlt
lret
mov
stos
jmp
int3
cld
je
or
pop
mov
cld
aaa
fstp
imul
aas
int
or
dec
mov
sbb
rolb
and
ss
cli
out
stc
push
popa
ficoml
ljmp
sbb
incl
hlt
lcall
cmp
mov
mov
ret
repnz
dec
outsb
jmp
sbbb
mov
xor
cmp
fdivrl
mov
or
pop
in
cmp
adc
push
ds
out
mov
and
lea
adc
pop
add
pop
mov
repz
cld
jns
shll
es
sbb
pop
nop
leave
and
sti
roll
insl
and
pop
scas
dec
aaa
push
shrb
pop
sub
xchg
dec
lock
ljmp
dec
adc
jg
mov
sahf
out
mov
sub
sbb
dec
arpl
push
mov
xor
add
xchg
mov
gs
jo
out
push
sarl
pop
pop
sbb
or
mov
xor
sti
into
adc
addr16
dec
adc
jo
lods
repz
sbb
xor
pop
lret
imulb
cmc
imul
xchg
adcb
aaa
add
pop
adc
sub
lock
pop
jl
lock
mov
jge
repnz
nop
hlt
fs
mov
mov
test
dec
lea
pop
push
jge
in
push
jo
shll
sub
xchg
mov
int
add
cmp
cmc
enter
push
movsb
orl
ret
out
leave
xor
orl
std
dec
cmc
adc
mov
aaa
push
pop
cwtl
fucomip
pop
dec
sbb
stos
sti
lock
cmp
fnsave
mov
mov
loopne
jp
mov
xchg
test
ds
inc
rorl
sub
dec
fists
jmp
jg
lret
and
xor
push
pop
cmpsl
push
lods
arpl
das
pop
flds
jge
jp
movsb
jne
lods
loop
and
rcrl
jb
ret
ja
push
lods
insb
fnstcw
xorb
add
bound
cwtl
lods
imul
fdivr
jmp
push
outsb
pop
inc
movsl
add
in
push
inc
int
mov
xlat
jge
dec
or
addb
jns
sub
sub
dec
add
leavew
push
and
fisttpll
sti
lods
sbb
popa
sub
mov
cmpsb
inc
push
and
pop
sub
stc
mov
xorb
fidivrs
inc
xor
mov
sub
shrl
cmp
imull
bound
clc
addr16
mov
sub
mov
mov
xchg
aad
push
jg
dec
pusha
and
addr16
push
dec
jmp
fidivl
jge
in
testb
push
cwtl
add
mov
sub
adc
movsl
push
pop
ret
add
xchg
mov
mulb
xor
ljmp
imul
stc
ficompl
addr16
cmpsl
jo
adc
xchg
jp
data16
jmp
ljmp
aam
or
mulb
loope
mov
sub
fcmovne
jl
mov
xor
sub
js
lods
dec
push
or
and
movsl
pushfw
icebp
xchg
jg
sbb
fisubs
and
rol
push
xchg
mov
sahf
gs
inc
jmp
push
jp
cli
nopl
xchg
mov
into
xor
lret
xchg
cmp
test
add
movsb
jnp
outsl
out
mov
mov
ja
dec
aas
arpl
mov
sbb
fidivs
icebp
dec
jno
mov
and
cwtl
add
pop
mov
xchg
xchg
pop
sub
imul
jb
push
lahf
hlt
fdivrs
sahf
movsb
cmc
test
mov
mulps
ss
add
cmpsl
mov
and
dec
icebp
nop
mov
dec
cmpsb
xorl
loope
js
xchg
sbb
ja
xchg
in
stos
ret
mov
push
and
repz
lods
mov
or
insb
jnp
sbb
xor
jns
and
cmp
jne
test
xor
jno
push
push
xor
cltd
inc
sti
mov
mov
data16
outsb
in
loope
push
mov
xchg
stos
adc
sub
cmp
dec
enter
and
jno
jmp
je
leave
jno
xor
inc
das
mov
mov
movsb
jae
mov
les
push
enter
rorb
js
mov
pop
cmp
ds
stos
push
sarl
push
and
jo
or
or
jnp
jp
ret
stos
or
sbb
mov
or
pop
lock
pop
stos
jg
sbb
mov
jns
inc
xlat
jg
pusha
xor
cmp
loopne
xchg
dec
rolb
add
jp
inc
daa
jbe
stos
out
add
push
adc
adc
out
xlat
in
mov
jmp
pusha
pop
jae
repz
lds
mov
xor
ja
dec
leave
cli
outsl
ret
ret
mov
ret
cmp
pop
cmp
xchg
addl
in
out
dec
push
mov
jae
xor
jae
pop
stos
sahf
repnz
xchg
ljmp
dec
iret
sbb
push
jl
push
movl
xor
movsb
fcmovbe
in
cs
dec
adc
sub
cmp
add
addr16
pop
mov
fisubrl
stos
xchg
outsl
outsb
nop
mov
mov
sti
out
push
ljmp
ret
mov
pop
bnd
push
repz
repnz
std
sbb
mov
ds
fldt
cmp
pop
jle
push
push
mov
pop
xor
leave
mov
mov
test
add
scas
cpuid
aaa
sbb
fsts
sub
ret
in
movsb
daa
aas
loope
ret
dec
neg
fstps
push
pop
push
pop
mov
push
cli
lret
xchg
xor
adc
cmp
pop
xor
gs
daa
xchg
int
push
cmp
push
and
cmc
mov
shl
mov
ss
pop
ljmp
fstps
mov
mov
loopne
jmp
mov
cli
lcall
push
imul
fcoms
mov
mov
es
and
adc
or
cmc
data16
jno
jmp
test
push
mov
or
mov
cltd
push
pop
mov
and
outsb
jnp
inc
sarl
push
mov
les
test
push
dec
out
push
stc
mov
mov
fcomp
pop
sub
mov
stc
push
cmp
mov
aas
loope
in
fldt
test
sbb
sti
pop
dec
and
pop
add
shrl
aad
test
rcl
lods
subl
out
adc
sbb
xchg
xchg
into
sub
xor
enter
dec
add
jmp
leave
ja
inc
rcrb
es
lock
mov
jnp
int3
je
cs
cmpsl
sub
sahf
mov
test
lahf
dec
sbb
add
push
xor
enter
jo
mov
ja
adc
push
push
or
jmp
out
mov
pop
fsubr
xchg
and
adc
xor
subl
call
mov
ss
lock
or
loop
xor
pop
rorb
lcall
je
add
popf
cmp
fst
sbb
and
insb
scas
jp
cmp
mov
xor
pop
inc
jae
rol
insb
sbb
arpl
fs
jle
mov
inc
pop
mov
ret
jmp
stos
aad
adc
add
hlt
jg
mov
fs
lods
and
cmpsl
gs
out
lods
sbb
and
push
and
cmp
hlt
and
sbb
loope
pop
imul
ljmp
mov
sbb
fwait
jmp
pop
outsb
test
scas
sbb
clc
inc
ret
ror
mov
xor
ds
data16
pop
xor
gs
push
mov
cmp
or
xor
iret
out
pop
imul
jle
or
stos
dec
lret
xchg
add
and
jecxz
pop
sbb
iret
movsl
xchg
test
mov
jno
in
enter
rolb
hlt
pusha
xorb
push
push
or
xchg
mov
imul
scas
jne
imul
dec
push
or
pop
lea
in
mov
in
ficomps
mov
pop
xor
pop
mov
shrl
testl
imul
pop
xchg
arpl
jmp
nop
jle
scas
ja
lea
jbe
jnp
xchg
sub
fs
std
fistpll
out
ljmp
cmp
andb
mov
or
xchg
pop
outsb
dec
push
mov
lock
fistps
leave
inc
pop
jo
add
ret
dec
mov
testl
mov
nop
adc
pop
jmp
dec
cmp
cmpsb
xchg
xchg
stos
pop
test
mov
xorb
adc
cmp
or
xchg
test
sub
imull
jle
imul
dec
push
adc
xor
mov
dec
pop
or
xchg
je
inc
je
fwait
xchg
cs
daa
lea
and
mov
push
aaa
xor
jecxz
push
xchg
pop
jb
hlt
test
sbb
repnz
imul
fnsave
adc
addl
dec
addb
lds
push
xchg
sub
fs
xor
call
or
jp
out
pop
add
maxps
pop
push
lock
mov
xor
adc
fstpt
pop
add
sbb
jle
iret
mov
js
mov
pop
lcall
cwtl
mov
dec
cmp
xor
mov
stos
iret
in
push
and
loope
aad
test
adc
inc
jmp
xor
iret
xchg
test
inc
xor
sbb
push
sub
pop
ret
in
rclb
mulb
and
add
push
arpl
xchg
daa
mov
in
repnz
or
out
lar
and
adc
fmulp
fsubp
lret
inc
xchg
jmp
jbe
sbb
sub
je
and
mov
and
jnp
dec
mov
pushf
mov
outsb
inc
lea
add
jp
pusha
mov
pusha
inc
and
push
setp
gs
imul
adc
cmc
ja
sub
pop
push
push
jno
jo
sub
mov
cmp
xchg
mov
scas
push
ficomps
shll
lret
popa
filds
push
loope
imul
push
xchg
jp
call
add
jmp
cwtl
cmpl
cmp
mov
xchg
inc
push
sarb
mov
mov
inc
push
hlt
or
sbbb
lods
push
loope
cmc
icebp
fstpt
jg
or
mov
data16
ficomps
dec
mov
fwait
popa
mov
pushf
jno
cmp
and
fst
push
and
js
cmp
in
in
imul
rorb
dec
inc
mov
clc
fimull
fldl
mov
jno
jne
sub
iret
mov
test
jl
add
scas
xchg
das
jb
addr16
jl
sahf
xchg
lods
jge
lea
dec
add
loop
pop
or
xchg
lcall
leave
pop
in
inc
or
movsl
push
movl
lds
xchg
pop
out
and
pushf
inc
into
mov
jl
dec
dec
imul
loop
mov
cmp
and
dec
movsl
xchg
bound
push
adc
movsl
mov
xlat
mov
aaa
in
pop
rcrl
dec
sbb
sbb
mov
jg
std
leave
jbe
mov
gs
sti
fisubrs
add
push
int
testl
adc
jge
addr16
outsb
repnz
cmpsb
jmp
push
cmovl
cmpsl
std
adc
idiv
test
inc
adc
imul
mov
inc
and
dec
or
inc
jle
lret
popl
push
std
jno
xchg
js
sub
cs
setnp
fstp
into
into
xlat
push
inc
sbb
adc
into
push
and
leave
pop
outsl
addr16
in
pop
cs
pop
rcr
xchg
push
xchg
icebp
test
aas
rcrb
jb
mov
xor
dec
xchg
lds
hlt
inc
cmp
rclb
leave
jg
dec
mov
or
or
ret
dec
sahf
sbb
pushf
fcompl
jecxz
lret
dec
and
mov
xchg
sbb
stc
int
out
ret
movsl
pop
jnp
push
movsl
pop
mov
xchg
icebp
cmpsl
lods
lcall
data16
or
push
test
test
pop
xor
shl
inc
shlb
xor
pop
out
push
fnsave
out
lock
je
xor
out
rorb
lods
scas
cmp
mov
xchg
add
mov
hlt
pop
adc
pop
jg
jne
jb
xchg
mov
imul
inc
mov
imul
add
addb
xchg
fidivrl
or
and
dec
fiadds
mov
addr16
mov
sub
dec
inc
ja
loop
dec
fptan
add
sbb
dec
mov
push
mov
mov
jnp
adc
adc
and
adc
cmpl
loopne
or
loopne
js
cltd
xor
push
push
sub
dec
test
or
pushf
jmp
dec
leave
ja
and
xor
adc
mov
inc
jae
jg
jg
xchg
cmp
sahf
cmp
pop
xor
lods
pop
mov
push
fnsave
cli
daa
cmovns
jae
adc
push
push
je
sub
rorb
jecxz
xchg
push
outsl
push
mov
ja
pmullw
sahf
dec
mov
das
sbb
jae
adc
push
jbe
stos
sti
cs
xor
lods
jae
ret
gs
add
or
xchg
imul
pop
lret
mov
fmuls
sub
jne
repz
jecxz
mov
dec
jnp
add
aad
lahf
ss
inc
xor
stos
jmp
stc
lret
sbb
sbb
mov
movl
movsb
inc
test
and
jecxz
repnz
iret
mov
cmp
je
out
pop
dec
adc
repz
mov
daa
jle
sub
fadds
arpl
call
jae
pop
xchg
cmp
cmp
fwait
jmp
xor
mull
xchg
ficoml
xchg
pop
sbb
les
cltd
dec
cwtl
leave
or
cmc
out
adc
cltd
out
fdivr
lock
fstpt
mov
fmul
fwait
scas
cmpsl
and
ficompl
jnp
jno
adc
or
mov
cmpsl
sbb
out
ja
sub
fisttpll
loop
xor
lret
dec
in
movb
push
movnti
scas
sub
sti
cmp
orl
sub
jno
popf
cld
js
leave
ja
jge
pop
and
mov
cli
or
jno
dec
pop
cld
or
std
add
inc
int
mov
mov
subl
inc
clc
xchg
fcoml
lahf
mov
rcll
out
jl
jecxz
cmpsl
sub
jns
mov
jo
mov
testl
notl
inc
in
mov
icebp
pop
adc
pop
pop
push
mov
ljmp
insb
jecxz
push
xchg
cmpsl
xor
xchg
mov
in
adc
mov
mov
aam
loope
ja
pinsrw
cmpsb
push
imul
jmp
or
lods
jo
xor
xchg
in
hlt
or
sarl
jmp
jns
testl
scas
fmul
mov
xor
xor
pop
lret
adc
neg
std
je
call
jo
cmc
in
xor
add
imul
and
push
cltd
stc
cmp
dec
popa
add
aam
lret
pop
mov
sbb
push
push
sahf
mov
inc
mov
jae
dec
call
mov
or
bound
test
pop
inc
jnp
insl
jle
cmp
xchg
xor
das
std
push
push
ja
andb
push
fnstsw
mov
mov
pop
popf
cmp
jne
add
in
xchg
mov
fists
data16
es
push
or
imul
mov
iret
ds
pop
dec
xchg
rorl
js
cmpb
stos
xlat
rorl
mov
das
cmp
jge
inc
insl
xchg
cld
jecxz
mov
add
mov
inc
imulb
xchg
loopne
out
inc
negb
mov
int
add
divb
js
mov
sbb
outsl
push
imul
adcl
roll
leave
aas
cmp
cmp
lahf
adc
icebp
or
movsl
stc
pmuludq
or
leave
mov
dec
push
and
inc
sub
inc
int3
std
les
out
mov
mov
stos
xchg
inc
inc
push
pushf
in
icebp
rolb
in
rolb
add
inc
or
ss
mov
jb
into
in
lahf
lcall
rclb
lcall
enter
lock
rolb
int3
in
or
xchg
or
dec
outsl
fsts
cld
aas
lock
es
pop
rol
jne
sub
pop
jp
dec
xchg
xchg
test
ss
pushf
jnp
ret
xor
rorb
mov
fistpll
out
adc
cmc
fcmovnb
outsl
mov
or
mov
and
loope
std
xchg
dec
insb
jmp
pop
pop
xor
sub
mov
cmc
pop
lret
clc
xchg
mov
std
jb
inc
jge
aaa
out
ds
sub
pop
dec
pop
or
divl
mov
cld
stos
repz
dec
cmpsl
xor
popa
adcl
inc
hlt
pop
adc
cmp
lret
cwtl
or
jo
fidivrl
adc
cmc
mov
repz
lods
add
push
stc
jge
in
sbb
or
push
aas
sbb
push
xchg
dec
push
cwtl
movsb
fwait
imul
por
sahf
dec
pop
stos
inc
or
xchg
mov
xchg
jecxz
out
nop
mov
data16
into
aad
mov
das
dec
dec
mov
daa
or
addr16
ret
imul
sbb
nop
dec
jo
in
lds
jecxz
int
or
mov
dec
sub
lret
or
clc
adc
mov
adc
outsb
inc
mov
mov
loop
out
lea
push
mulb
into
adc
pop
xor
inc
xor
push
test
cmp
pop
mov
loopne
sbb
pop
int
adc
lret
mov
pop
xchg
cli
dec
roll
xor
loop
bound
xorb
or
cmpl
roll
loop
adc
xor
mov
cmp
sub
xor
mov
mov
pop
ret
pop
call
into
ret
jecxz
cmp
in
xchg
dec
xor
sbb
sub
repnz
loope
and
add
and
aam
mov
mov
sbb
mov
sahf
jg
sbbl
in
jmp
inc
shl
xchg
xchg
jbe
cmp
add
jle
push
sar
jle
inc
mov
mov
out
dec
push
adc
and
mov
mov
fbstp
xor
jo
psadbw
imul
xor
imul
xchg
ljmp
clc
cmp
lea
pop
cmpsl
pop
sub
andl
and
and
dec
int3
or
add
sbb
dec
mov
stos
dec
mov
enter
repnz
mov
mov
add
ret
shrl
out
cmp
add
and
lods
xchg
pop
andb
or
movsl
pop
imul
ds
jg
stos
cld
mov
hlt
aaa
into
lock
and
adc
insb
push
jg
inc
andl
push
test
and
scas
xchg
dec
nop
sbb
push
xchg
jmp
testb
push
test
mov
js
cs
pop
push
jo
ficoml
jle
lret
dec
lcall
sbb
jae
or
or
mov
js
or
mov
std
nop
cs
jnp
enter
cmpsl
lret
arpl
sub
pop
jb
mov
mov
cmpsl
stos
fiadds
mov
and
shlb
xor
ja
mov
scas
mov
test
incb
push
adc
jge
xor
faddl
arpl
pop
cmp
mov
mov
pop
xchg
decb
jne
lds
fs
lods
pop
cmp
nop
addl
jmp
call
adc
jb
insb
in
adc
pop
push
and
inc
cltd
mov
icebp
push
cmp
imul
pop
xchg
jge
push
nop
push
fwait
in
loopne
stc
xchg
mov
jno
cld
cmc
jae
add
sbb
mov
shll
pop
vpshlb
wbinvd
dec
mov
ret
adc
pusha
sub
jo
jo
hlt
imul
sub
add
mov
pop
adc
stc
adc
push
pusha
sahf
mov
or
inc
cld
aas
cmp
sub
mov
fsubs
das
mov
jno
mov
cmpsl
mov
pusha
adc
or
dec
mov
inc
movsl
and
mov
inc
push
in
dec
sbb
das
ret
ret
mov
pop
dec
xor
shrl
pop
inc
mov
shlb
push
and
or
push
movsl
test
sbb
fnstcw
test
pushf
inc
ret
cmp
scas
adc
outsl
inc
or
or
aaa
je
inc
ljmp
push
div
jns
rorl
incb
add
int3
mov
pusha
rcrl
sbb
cmp
xchg
int
or
gs
cmp
pop
fistl
xor
xor
inc
jae
aaa
in
mov
out
push
cmp
out
rorl
lret
or
mov
sbb
das
jl
divl
or
jecxz
fisubrs
subb
pushf
xchg
inc
lret
inc
mov
cmp
sub
sub
adc
xor
xor
adc
add
inc
lahf
stos
cmp
jo
in
lret
mull
xor
js
jno
cld
inc
iret
push
movsl
hlt
int3
movsb
mov
jae
sub
inc
das
mov
add
xchg
ja
push
sub
loopne
dec
add
negb
stos
adc
nop
cli
mov
pop
inc
sbb
xlat
jne
push
aam
rorl
lret
push
scas
fstpt
enter
imul
push
dec
test
mov
out
mov
shll
enter
mov
push
jg
insb
mov
dec
iret
roll
mov
cmpsb
test
xor
popf
pusha
dec
and
pop
jbe
pop
xor
jp
fidivl
sub
mov
loop
add
ljmp
mov
jne
mull
jnp
or
mov
pop
mov
cmc
dec
cs
pop
sub
mov
icebp
mov
xchg
gs
or
and
mov
fwait
andb
std
jae
push
test
or
mov
cmpsl
adcl
lcall
sbb
xchg
sub
sub
inc
adc
out
scas
mov
sub
sbb
scas
cmp
cmp
sbb
cltd
addr16
fwait
xchg
lock
mov
sti
shl
movl
cmp
iret
mov
icebp
aaa
repnz
sub
arpl
sbbl
jle
sub
lcall
sbb
loop
sahf
pop
call
insl
clc
cltd
sbb
addr16
cmp
xor
dec
stos
sti
cmpsb
out
sub
inc
jnp
pop
je
dec
jnp
dec
pop
mov
cmp
test
pushf
sub
jnp
push
mov
sub
mov
pop
dec
out
int3
adc
fdivp
sbb
or
sbbb
lods
inc
and
shll
pop
jnp
add
mov
mov
cwtl
out
push
adc
rorb
imul
mov
jnp
ds
xchg
insl
scas
call
je
inc
mov
push
cltd
cs
loope
cmp
test
sar
mov
push
bound
fisttps
iret
pushf
or
fld
lahf
stos
rorb
lret
ja
stc
mov
out
rcll
push
mov
lahf
bound
xchg
mov
cmp
sbb
test
pop
shrb
push
das
arpl
pop
movsl
into
insb
sbbb
das
fs
arpl
sub
test
lcall
jo
shl
test
out
lcall
xor
ret
shrl
push
loop
mov
orl
cmpl
pop
outsl
cwtl
adc
pop
push
mov
scas
shlb
jmp
sub
or
test
xlat
mov
mov
push
jp
sbb
cmc
ds
pop
mov
pusha
iret
into
add
mov
sub
lock
ja
jae
ja
sbb
push
popa
push
mov
inc
stc
inc
and
dec
mov
and
fstl
mov
nop
iret
popa
cmp
xor
pusha
mov
sbb
in
lahf
cld
imul
add
sub
or
mov
adc
push
xchg
sbb
cmpsl
gs
das
sahf
pop
xor
xor
mov
loop
fcomip
xchg
xor
fsubs
xlat
test
ss
jecxz
xchg
mov
add
mov
sarl
movsb
cmp
xlat
pop
dec
jb
test
call
jp
mov
pop
cmp
push
imul
sti
push
div
mov
sub
jb
inc
test
add
dec
addb
sahf
outsb
and
sbb
xor
cmp
scas
dec
cmc
jb,pt
stos
mov
jo
into
push
arpl
xchg
test
ja
sbb
jge
dec
std
mov
insl
push
jmp
mov
sub
icebp
aam
adc
cmp
cmpb
xor
incl
adc
and
out
sub
loopne
mov
xchg
mov
cmp
mov
push
insb
fsubs
scas
push
outsb
xchg
scas
stos
pop
mov
out
jg
cmp
out
jb
in
and
sub
frstor
cmp
mov
cmp
in
pop
mov
lahf
lret
jb
jecxz
xor
xor
fisubrl
int3
sbb
inc
es
push
icebp
ret
xor
int
xchg
adc
adc
or
adc
mov
xor
sahf
fldenv
mov
scas
sub
test
ljmp
roll
sub
mov
inc
xchg
stos
subb
enter
cli
cs
xor
movsb
jo
sbb
std
mov
sub
xchg
or
loope
fdivrp
mov
in
insl
push
sub
mov
dec
pop
dec
dec
mov
push
and
mov
sahf
fldenv
repnz
jmp
mov
stc
rclb
xor
mov
sets
gs
popa
cmpl
mov
faddl
inc
mov
movsb
popf
dec
cmp
mov
movsb
sub
aas
fs
imul
or
stc
xchg
clc
movsb
iret
cmp
cli
push
jbe
aaa
mov
inc
sahf
jae
sbb
xor
adc
lret
int3
stc
stos
icebp
inc
xor
push
jne
push
adc
sbb
xor
lcall
and
imul
fwait
and
mov
xlat
hlt
pop
or
data16
adc
fidivrl
mov
mov
cmc
es
and
inc
xlat
jnp
mov
enter
jg
in
mov
imul
xor
inc
insl
sub
test
cmp
pop
mov
add
roll
jno
add
in
jnp
in
cmp
jecxz
dec
push
test
dec
mov
jnp
mov
pop
into
aam
sbb
in
dec
jb
jb
es
fstpl
sbb
or
loopne
idiv
lods
js
rcll
leave
sub
sub
clc
ljmp
push
cmp
push
pop
out
jmp
dec
daa
mov
mov
cmp
inc
pop
dec
and
mov
int3
cmp
shl
mov
in
ja
mov
loope
inc
push
popl
insb
xchg
or
jmp
mov
jno
and
into
rcrl
pop
mov
mov
inc
or
cmp
arpl
xor
cmp
outsl
fsubrs
mov
dec
mov
lahf
mov
fdivl
shl
mov
rcl
pop
and
and
test
cmc
cmpsl
fmuls
push
aam
xor
xchg
xchg
repz
push
inc
mov
sahf
aaa
adc
adc
adc
xlat
test
out
sub
and
popa
push
cmp
sbb
ficoms
xchg
adc
test
pop
sarb
sahf
repz
arpl
in
sbb
das
jp
clc
shll
aam
sub
sahf
mov
mov
movups
mov
mov
mov
cmp
push
inc
in
jg
mov
fldl
pop
jae
push
pushf
aaa
icebp
push
add
repnz
push
nop
adcb
enter
fisttpl
in
insb
and
mov
sub
popa
test
pusha
or
cmc
sub
xchg
loop
call
popa
jno
cli
lods
cmc
mov
push
insl
pop
out
xor
sbb
sub
adc
adc
jne
pop
sub
pop
das
gs
fisttpll
inc
xor
inc
test
lret
insl
or
xor
and
out
lods
mov
or
inc
insb
iret
xorb
fiadds
jmp
test
adc
jmp
cmp
dec
sub
xchg
push
notb
lods
pop
bound
inc
lock
hlt
and
jnp
movsl
xor
sub
add
loope
xchg
cmp
sti
sub
in
cli
test
sbb
les
xor
inc
aad
mov
and
dec
iret
sbb
sub
loopne
hlt
fidivs
inc
imul
jo
sbb
pop
js
push
adc
cmp
lods
test
ljmp
mov
push
cmpsl
and
notl
sbb
daa
imull
filds
or
inc
je
mov
inc
lcall
or
arpl
adc
repz
push
cmpsl
adcl
mov
mov
push
and
orl
or
mov
xor
es
pop
gs
cmpb
test
sahf
xchg
stos
ficoms
and
dec
add
sbb
test
hlt
jl
and
xchg
dec
and
stos
sbb
adc
push
push
push
inc
sub
adc
test
imul
xchg
jb
dec
paddusw
cltd
cmp
dec
pop
addr16
adc
stc
mov
jb
xchg
sahf
iret
push
popf
das
mov
pop
adc
sub
adc
imul
xor
pop
push
shll
mov
jg
lcall
pusha
repnz
clc
adc
or
mov
sbb
mov
or
jb
stc
sti
fwait
add
xchg
ds
jge
pop
mov
xchg
scas
xlat
test
cs
mov
inc
mov
jnp
mov
dec
add
mov
inc
push
js
xchg
xchg
bound
mov
xor
daa
jno
lock
mov
ficoms
cmp
jp
dec
das
mov
orl
mov
scas
and
push
push
sbb
adc
dec
sub
inc
popa
cli
jge
dec
mov
cmp
loopne
dec
jae
insb
ja
mov
sbb
lcall
jne
jp
out
sahf
imul
es
std
mov
cmc
fcoms
lcall
arpl
int3
push
out
stos
data16
insb
les
fldenv
sub
jbe
fs
lcall
pop
jp
hlt
and
jns
leave
jbe
fidivl
fwait
jb
imul
cmpb
out
mov
cltd
jle
adc
inc
xor
push
in
cwtl
push
adc
cmpl
ljmp
shll
and
fcoms
jmp
push
jp
cs
sub
imul
int3
adc
pushw
and
pop
ss
sbb
inc
sub
cltd
fcomip
mov
mov
mov
and
push
fisttpl
rol
cmp
ror
arpl
subb
lahf
scas
cmp
and
test
aas
push
aaa
cwtl
int
js
mov
xchg
dec
lds
pusha
dec
jno
imul
mov
push
pop
cmpsl
or
sub
dec
dec
test
pop
jnp
ret
int3
ret
fstpt
pop
out
outsl
fsub
out
loop
popa
lds
addr16
popf
add
cmp
jnp
aam
in
rcrl
pushf
das
or
push
fstpt
jno
outsl
repnz
imul
jnp
test
icebp
out
clc
ds
movsb
xchg
mov
dec
mov
pop
mov
stos
pop
mov
rcl
jbe
loopne
lahf
mov
gs
mov
add
mov
sub
and
jb
jo
sbb
data16
sbb
mov
mov
sub
push
xchg
xchg
nop
xchg
add
adcb
sbb
es
fisttpll
scas
int
mov
pop
adc
ror
ss
jg
daa
push
aas
cmp
test
js
sbb
jmp
jnp
inc
mov
dec
xor
mov
test
inc
imul
movsb
psubw
imul
imul
mov
jmp
xchg
fdiv
dec
outsl
pop
fldenv
cwtl
cltd
and
aaa
ja
xor
xor
daa
lahf
ja
imul
or
nop
sahf
out
push
mov
pop
push
sub
jecxz
stos
orl
lret
push
out
sub
cmp
pushf
mov
mov
or
mov
xchg
in
adc
cmpsl
or
push
lret
pop
push
popf
mov
aad
movl
mov
inc
fs
rcr
gs
pop
fwait
dec
fwait
pop
mov
test
negb
cmpsb
fisttpll
jb
lods
cltd
xchg
sbb
jp
fsts
xchg
popa
aad
push
out
xor
xlat
xor
jecxz
repz
mul
or
outsb
and
jmp
jns
mov
xor
out
push
ss
fwait
dec
stos
add
cmpsb
loope
jbe
xchg
shlb
arpl
mov
mov
ljmp
lahf
mov
cmp
cltd
cmpsl
test
jge
add
mov
popa
scas
and
int3
stos
jp
lods
jne,pt
jo
cmp
cwtl
add
cli
hlt
xlat
push
out
jb
nop
movsb
in
mov
xor
ficomps
jmp
pop
into
shll
ds
lds
xor
cmp
pop
push
mov
outsl
sbb
dec
shrb
sub
mov
ret
xchg
or
sahf
push
add
addr16
add
pop
out
xchg
xchg
cmpsb
loop
add
test
lds
ret
imul
ss
icebp
add
cwtl
sbb
fcoms
sbb
movsb
pop
pop
fidivs
sub
ljmp
arpl
dec
sbb
sub
aaa
pop
xor
sahf
out
outsl
xlat
jae
mov
shlb
and
jo
cltd
xchg
aad
adc
jo
push
popf
out
sarb
adc
fildll
pop
pusha
iret
jne
cmc
cs
jno
hlt
cmp
test
mov
sub
xchg
loopne
mov
sbb
lock
addr16
jmp
jge
hlt
jge
rcrl
clc
cmc
and
sbb
adc
adc
das
mov
fldenv
nop
sbb
movl
pop
jae
jg
and
add
xchg
outsl
mov
fsts
cltd
mov
add
out
sbb
out
mov
lret
cltd
lea
cmp
ja
lcall
test
or
add
inc
bnd
cmp
mov
imul
iret
fidivrl
fistpl
roll
and
add
pop
cs
out
sti
bound
xor
pop
and
mov
shrl
fistpll
mov
sbb
sub
inc
cs
fnstenv
fisubl
inc
fdivrs
negl
pop
out
jle
add
movsl
add
xchg
leave
fsubrs
inc
loop
add
testl
lods
cmp
dec
adc
repz
add
push
lock
push
add
ret
mov
test
push
fadds
inc
jge
add
jno
pop
add
add
add
add
cld
push
mov
stos
add
sbb
mov
mov
pushf
ljmp
jmp
add
test
test
fsubrs
rcrl
fwait
add
mov
xor
sub
and
xor
add
add
lock
test
outsb
testb
pop
clc
cmp
add
cltd
mov
cmp
test
add
add
out
or
sbbb
add
push
sbb
das
clc
aaa
add
mov
push
rcll
dec
pop
add
mov
add
gs
push
jne
addb
jno
adc
push
xchg
arpl
dec
add
in
lods
sldt
sbb
mov
push
je
es
int3
add
cmp
push
rcll
sub
jae
iret
cmp
add
mov
aad
inc
enter
sub
fxch
movsb
test
add
add
sbb
es
sbb
add
clc
fs
add
lret
add
xchg
push
sbb
cmp
andb
cmp
cmp
aad
jb
add
push
shr
xor
mov
cwtl
out
mov
lea
pusha
out
mov
add
rep
insl
lret
sarl
xlat
inc
pop
mov
add
ja
mov
push
jns
jo
jle
xchg
mov
xchg
add
fs
cvttps2pi
out
add
es
jo
add
push
out
add
cs
add
daa
fidivrs
add
imul
add
pushf
lods
jae
cwtl
jmp
mov
adc
lret
jnp
dec
push
ja
cmp
les
push
addb
and
dec
adc
add
int
jno
std
add
in
add
cmc
add
pop
notb
and
pop
cmp
add
add
sbb
dec
out
xor
cwtl
fdivrs
arpl
jns
mov
stos
iret
stos
aaa
das
adc
shrb
xchg
daa
or
jnp
dec
mov
in
mov
dec
sub
pop
inc
add
or
xchg
ds
jmp
int3
add
jle
sahf
cmp
imul
ret
mov
mov
cmp
lods
jp
bound
xor
shlb
icebp
mov
imul
out
popa
xchg
add
cmp
mov
add
test
rolb
iret
ss
add
js
push
and
lock
dec
les
add
push
iret
add
jp
stos
lods
dec
lret
fwait
stos
dec
pop
and
xchg
add
loopne
nop
roll
cli
ss
mov
mov
push
in
add
data16
cmpsl
out
add
pop
enter
add
xor
pop
push
pop
cmpsl
dec
jecxz
cmp
jns
add
out
enter
and
add
daa
sbb
pop
mov
sbb
icebp
stos
mov
add
inc
cmp
mov
push
sahf
sub
or
add
in
and
add
das
jae
xchg
insb
add
mov
push
or
repz
scas
add
es
andb
icebp
pop
xor
push
mov
adc
das
in
xor
add
mov
leave
fnsave
ficoml
mov
std
repnz
shll
repz
stos
jb
sub
xor
scas
xor
fiaddl
add
and
adc
lahf
cmpsl
adc
nop
bound
shlb
shrl
test
pop
adc
sbb
cmpsl
jo
xchg
push
iret
add
data16
xchg
mov
xchg
shl
xchg
fwait
addb
add
rolb
sub
iret
insl
add
add
add
mov
xchg
in
cmpsb
daa
fsubrp
cmp
movsl
cmc
out
aad
and
add
mov
add
mov
fbld
out
jbe
jge
cli
and
sbb
std
push
icebp
notl
add
jmp
pop
pusha
and
testb
mov
push
add
push
add
xlat
fldt
call
loope
clc
pop
xor
mov
pop
insb
mov
add
adc
add
inc
dec
fiaddl
add
cmp
add
pop
mov
xchg
fcomps
mov
xchg
xchg
je
add
movl
not
or
pop
add
cmp
jb
jmp
out
fsts
bound
loope
pop
repnz
mov
pop
lods
xchg
add
test
mov
jecxz
jg
add
pop
add
mov
sbb
sti
std
mov
dec
ror
pop
sbb
mov
lret
add
add
push
xchg
add
jbe
test
add
jl
add
int3
jne
push
sbb
nop
js
sub
add
cmp
lods
push
pop
fidivrs
add
addb
xchg
dec
sub
add
jg
jae
add
pusha
outsl
sub
add
call
adc
push
and
add
inc
or
add
or
js
popf
int3
leave
cmp
add
or
cmp
arpl
test
inc
je
add
jge,pt
mov
push
cmpsb
sti
ficomps
inc
add
aad
mov
inc
mov
popf
repnz
pop
add
add
sti
shll
out
inc
add
add
test
nop
push
std
jl
mov
jns
add
inc
ss
popa
add
push
mov
popf
bound
pop
dec
xorb
dec
lock
je
add
jg
and
mov
outsb
push
sub
cwtl
sbb
outsl
or
je
jae
lret
fmull
push
add
sbb
pop
adc
xlat
ret
lods
and
sub
add
addr16
mov
and
push
push
sbb
cwtl
into
data16
fiaddl
push
push
push
add
sub
add
pop
fsubs
add
push
rolb
pushf
add
fidivl
add
jnp
add
add
addb
sub
cli
sbb
out
push
clc
jl
and
ja
add
std
sbb
lods
cs
add
scas
test
aam
xchg
sub
shll
dec
pop
xchg
jnp
addr16
sub
and
jne
sahf
movsl
push
pushf
pop
and
mov
int
stos
mov
and
or
xchg
pushf
int3
mov
addr16
out
test
add
sti
lcall
xchg
in
push
add
add
repnz
mull
xchg
out
sarl
dec
scas
rcll
cltd
inc
mov
ret
rcrl
add
and
push
add
jmp
aas
lods
mov
adc
aas
repnz
push
mov
push
add
out
jmp
sti
loopne
lret
cmc
ss
xchg
xor
dec
sbb
add
addb
mov
ss
add
add
push
scas
add
fdivrs
popa
mov
scas
leave
add
add
push
cli
add
add
inc
adc
mov
flds
add
mov
add
mov
jne
or
jle
mov
pop
fdivrs
ret
add
add
sbb
add
push
jl
cli
inc
jbe
add
jecxz
pop
add
dec
jne
xchg
jg
fiadds
add
out
mov
hlt
sub
imul
xchg
scas
sub
adc
popa
mull
bound
mov
dec
hlt
pop
inc
jmp
add
xchg
add
jle
mov
jb
push
movsl
inc
push
add
mov
lods
xchg
ds
adc
lcall
repz
push
lcall
scas
pop
mov
add
push
std
jo
mov
scas
dec
cmp
stc
push
stc
mov
pop
ljmp
mov
pop
das
pop
add
shll
jno
add
stc
fisubrl
xchg
xor
add
add
jns
je
pushf
les
cld
pop
test
imul
das
xor
lcall
imul
bound
data16
ror
sub
insl
repz
fwait
push
rolb
add
sbb
inc
scas
cmp
into
ljmp
mov
shll
inc
lods
jne
cwtl
add
stos
adc
mov
jbe
sbb
add
mov
push
dec
jno
lret
add
and
add
pop
add
cmp
cmp
add
stos
dec
add
and
iret
xor
leave
add
add
and
push
dec
imull
jg
mov
ljmp
mul
loop
mov
jp
xchg
mov
pusha
in
addb
and
add
das
outsl
pop
daa
call
hlt
mov
cmp
jne
xchg
jnp
and
jle
ss
cmc
xor
je
imul
xchg
xor
pop
inc
rclb
adc
pop
daa
inc
cmpsb
dec
add
inc
push
and
jae
cmp
bnd
jbe
push
lahf
cwtl
jb
pop
stos
sbb
and
test
and
les
xor
and
cltd
lea
aaa
out
add
and
fs
shrb
mov
xchg
jnp
ljmp
jp
sub
add
dec
xchg
add
lods
loop
popf
jg
xchg
shr
xchg
sub
pusha
xor
cmpb
les
fisubl
pop
pop
cmpsl
call
jmp
cld
xchg
out
jae
add
ds
jae
sbb
jg
lods
inc
js
and
inc
das
ja
pop
loopne
adcb
xchg
in
push
std
xchg
inc
sbb
add
xchg
lods
mov
push
pop
pop
push
cmp
aas
mov
stc
in
push
sub
pop
pop
add
pop
int3
pop
adc
test
xor
jle
cmp
stc
mov
fistl
cmp
add
dec
push
push
addr16
push
test
dec
fsubs
or
sbb
xchg
cmp
sbb
insb
and
adc
jp
pop
push
jbe
jb
in
mov
popa
repnz
pop
insb
add
outsb
dec
bound
fnsave
lea
pop
add
cmp
dec
add
sbb
pop
addl
add
add
jecxz
add
jle
mov
das
pop
mov
cmpsb
imul
lods
and
into
test
pop
and
xchg
lahf
and
pop
addl
jmp
fisttpl
mov
fcom
add
popf
lods
fwait
add
sub
pop
cmpsb
dec
jecxz
inc
and
cmp
cmp
lea
sub
insl
addl
dec
pop
jno
jno,pt
arpl
lock
pop
xchg
mov
cwtl
adc
enter
cli
clc
sub
sub
outsb
sbb
and
ljmp
hlt
cs
mov
stos
out
shll
push
add
add
negl
add
ja
sbb
cmp
jl
mov
std
dec
dec
data16
jno
sbb
adc
ljmp
in
loope
or
add
add
jge
xor
xchg
jle
sub
imul
ret
cmc
insb
push
roll
outsb
popa
dec
pop
or
mov
test
notl
les
gs
inc
pop
lods
insb
sub
add
imulb
outsl
or
add
jae
jge
stos
jb
addl
jns
push
dec
cmp
mov
mov
cmp
data16
mov
stos
or
pop
jl
inc
pop
add
push
out
adc
jne
or
xlat
dec
outsb
cmp
cltd
orl
stos
push
sarb
xchg
cmp
dec
fsubrl
sbb
inc
add
stc
fcmovb
inc
shlb
add
jne
jo
out
enter
jecxz
shl
scas
mov
sub
es
add
adc
call
dec
mov
jne
lods
adc
dec
mov
movsb
mov
or
and
xchg
mov
add
xchg
mov
sbb
sub
add
mov
sub
add
lret
into
loopne
cmp
fmul
fwait
ja
fldt
fsubrs
sbb
fimuls
dec
jns
mov
sarl
add
mov
mov
or
add
mov
cwtl
fcoms
add
lods
dec
in
jge
cmpsb
jae
insl
lret
add
add
and
shrl
ja
add
inc
call
incl
pop
add
aaa
add
xor
push
icebp
call
fucompp
add
stos
jle
in
loop
dec
xor
dec
add
add
pop
sbb
in
xor
mov
outsl
xor
inc
add
call
cs
adc
fiaddl
pop
or
cmpl
xor
adc
rcl
add
sbb
xor
xchg
cmp
xchg
scas
xchg
int3
test
mov
adc
fbstp
adc
or
jmp
push
mov
repnz
sar
inc
js
lcall
add
cmp
push
jecxz
mov
xor
add
call
add
subb
xchg
sbb
add
fmull
and
in
fisttpll
pop
adc
scas
mov
loop
add
outsl
xchg
insl
add
cmpl
sti
add
or
dec
nop
push
je
hlt
into
addr16
cmc
bound
cmp
jno
mov
sbb
fcom
mov
loopne
imul
add
lahf
fdivrs
arpl
dec
and
sbb
pop
imul
cmpsl
jno
notb
in
fildl
add
dec
pop
add
xchg
or
out
jno
add
icebp
aad
in
and
pop
pop
or
inc
jle
icebp
outsb
data16
cmpl
jmp
stc
push
shr
cmp
cmp
pop
add
in
pop
xor
sbb
xor
popf
outsb
fsubp
popa
add
imul
and
push
cld
test
outsl
std
sub
dec
addr16
mov
movsb
aas
scas
dec
add
mov
divb
cmpsl
xor
pop
iret
add
or
insb
dec
jbe
jg
sub
adc
call
add
push
add
cmp
mov
dec
sar
lods
in
or
push
std
and
ffreep
add
pop
push
nop
mulb
jae
fldenv
jl
jno
jno
add
mov
fwait
add
add
mov
xor
xchg
xor
out
add
dec
call
and
mov
and
pop
sbb
das
xchg
pusha
xor
test
str
xchg
nop
cmp
popf
cwtl
jo
add
add
int3
inc
lock
or
data16
gs
push
mov
add
ret
push
mov
add
adc
filds
leave
inc
pop
popa
dec
nop
add
cmc
and
cwtl
div
shl
sahf
repz
div
add
lock
xchg
add
sti
das
xlat
aas
adc
test
lods
mov
test
movsl
mov
pop
dec
scas
jno
aad
pusha
add
xlat
ret
add
mov
cmp
sub
jge
xchg
mov
inc
mov
mov
out
fwait
sub
ret
cmp
mov
add
xchg
in
loope
int
mov
or
pop
mov
pop
or
mov
add
lea
iret
addb
cmp
in
add
xchg
and
push
outsb
add
jb
add
jbe
sti
cmp
cmp
push
dec
dec
clc
dec
das
mov
xchg
sbb
pop
mov
insb
xchg
mov
aas
jnp
fldenv
inc
cmpsl
jb
pop
sub
addb
test
add
leave
dec
mov
mov
add
rcrb
add
or
inc
add
rorl
adc
add
xor
jo
jge
add
fsubrp
xchg
mov
xchg
ja
or
add
mov
add
and
dec
add
sub
add
xor
xor
lcall
cwtl
fwait
xchg
adc
add
rcrl
rolb
add
jne
jb
ds
rcl
add
add
mov
negb
notb
mov
jg
cmp
add
gs
imull
sbb
mov
dec
dec
popl
jo
pop
xor
in
push
dec
in
lods
daa
mov
mov
lods
add
iret
jecxz
mov
mov
jmp
inc
mov
ficompl
mov
subl
sahf
loopne
add
and
sub
fdivrs
arpl
andl
aad
dec
dec
adc
pop
and
or
inc
add
jp
rolb
das
in
cmp
testb
lret
scas
lods
mov
add
aad
xchg
loop
or
movb
add
subb
cmpsl
shll
mov
add
sbb
adc
dec
es
mov
xchg
xchg
faddp
mov
out
add
mov
jge
pop
shlb
add
mov
add
mov
cmp
mov
add
fwait
add
sahf
lcall
pop
add
xor
int
add
dec
sub
clc
mov
inc
dec
and
sbb
jg
mov
aam
mov
add
movsb
inc
cwtl
hlt
push
pop
sbb
add
pop
inc
push
dec
testb
push
pop
mov
add
sub
pop
stos
insb
stc
cld
xor
cltd
xchg
push
sub
or
jns
js
add
push
imul
hlt
lds
add
cmp
shrl
add
cmp
lds
sbb
add
insl
push
nopl
addl
mov
or
add
aad
scas
fldl
out
jbe
add
and
dec
out
jns
in
scas
movsb
gs
pop
lea
ljmp
jge
push
push
iret
xor
in
dec
imull
sub
lea
out
push
add
jbe
mov
add
or
mov
sub
mov
sub
mov
add
mov
outsl
or
add
mov
adc
out
mov
jg
add
stos
inc
cmc
inc
data16
repz
add
lods
cmp
mov
shl
sbb
ret
insl
add
lods
or
out
jg
add
pop
add
add
test
pop
imul
enter
add
add
mov
add
sahf
jb
lods
out
cld
ret
jns
test
addl
inc
and
lret
gs
mov
fcoms
jnp
or
jno
add
mov
pop
xchg
aas
adc
dec
vsubsd
negl
add
add
adc
push
xor
add
gs
cmp
nop
push
aad
cmc
addl
sbb
mov
movsl
stos
add
or
iret
mov
hlt
pop
adc
xchg
xor
stc
shll
cmp
add
ret
pop
cmpsb
xor
icebp
mov
fisttpl
jp
jbe
add
xor
ficomps
add
push
rcrb
adc
scas
les
cmc
movsl
or
adc
xchg
xor
mov
add
inc
push
cltd
fisubrs
add
jne
pusha
add
adc
fwait
sar
mov
add
frstor
xor
sti
xor
add
jecxz
mov
cmp
pop
pop
mov
dec
sbb
add
sar
iret
pop
or
add
and
into
fmuls
lock
add
add
push
xlat
add
add
dec
jb
sub
das
cltd
loop
mov
add
xor
lcall
les
jbe
pop
sub
xchg
add
jae
pop
loopne
test
sub
add
add
pop
adc
jp
pop
nop
mov
fs
aas
arpl
add
jmp
mov
loope
add
das
xchg
loop
pop
add
and
add
movsl
push
imull
adc
dec
sbb
push
cwtl
add
xor
sbbb
es
pop
add
cwtl
xor
mov
add
mov
lods
mov
adc
sti
js
push
add
xchg
jae
cmp
push
ss
shl
push
adc
jecxz
push
jnp
add
adc
inc
xchg
lock
dec
aad
insl
inc
ja
pop
pop
sahf
mov
test
adc
jo
mov
xchg
jge
stos
stos
in
push
fs
add
jl
int
jae
add
mov
add
aas
in
lea
addb
pop
push
fiaddl
out
jb
insb
add
mov
scas
ret
add
jae
fs
jl
pop
addr16
cmp
mov
xchg
jno
add
mov
adc
and
pop
push
in
sub
jle
pusha
add
aas
mov
mov
dec
sub
xchg
mov
sub
push
jnp
add
xor
and
add
les
xor
or
insb
ljmp
add
sti
rolb
jno
add
xor
cmp
flds
cmpsl
out
mov
lret
dec
sbbl
lock
add
jo
push
adc
ficomps
imul
rolb
int3
cwtl
cld
std
mov
mov
push
add
dec
lret
sti
pop
ds
mov
adc
les
lcall
mov
add
iret
xor
add
js
sub
mov
jo
in
push
sbbb
psubsb
out
adc
nop
sbb
jae
shll
dec
add
movsl
inc
mov
xor
xor
jns
inc
roll
lods
test
xor
mov
aaa
testl
cmp
loope
xchg
inc
cmp
cmpsb
loopne
nop
les
ljmp
jle
es
xchg
popf
lock
rcr
out
in
dec
add
cli
pop
leave
inc
add
jno
dec
add
stc
lahf
mov
cmp
add
movsl
mov
dec
lods
jp
xor
jg
add
xchg
loope
nop
and
xchg
leave
stos
shll
add
xorb
add
pop
push
movsb
stos
shl
mov
fsubrs
std
cwtl
fimull
out
mov
sbb
iret
add
sbb
add
outsl
mov
icebp
sub
out
cmp
lret
leave
scas
jnp
xor
jb
add
cmpsl
xor
movsl
sbb
xor
xchg
adc
add
xorb
fsubrp
mov
out
add
outsl
int
inc
mov
test
mov
rorl
push
aaa
jmp
in
push
xchg
adc
xor
mov
cld
push
add
xchg
hlt
int
movsb
cmp
add
sub
in
xchg
jb
sbb
lds
std
add
add
inc
add
jno
sub
add
add
xor
push
push
jle
pop
add
add
sbb
mov
ja
iret
pop
insl
add
and
pop
dec
add
pop
add
add
iret
pop
dec
aad
push
mov
xor
add
inc
outsb
mov
popa
ja
add
add
leave
test
or
sahf
push
push
or
pop
sbb
adc
sbb
sahf
add
add
insb
fadds
repz
cmp
std
push
jae
pop
mov
jp
pushf
shll
xor
jb
aaa
stc
adc
add
add
rcll
jo
add
xor
mov
pop
or
sbb
add
add
iret
and
xchg
jl
add
add
int
lock
jne
mov
std
xlat
fstpl
psllq
addl
ss
rorl
push
and
sbb
frstor
and
aad
loopne
popa
push
js
cltd
std
push
push
jb
out
cmp
mov
inc
scas
mov
lods
lods
push
jl
popf
mov
push
lahf
push
test
mov
arpl
dec
stos
stc
nop
cmpsl
je
int
add
push
add
pusha
inc
mov
pop
enter
xor
and
repnz
push
mov
addr16
pushf
dec
ret
push
add
add
popa
mov
stos
les
adc
roll
add
js
xchg
dec
gs
adc
aaa
cmp
test
test
or
testb
jle
int3
jbe
xchg
lods
pop
push
mov
add
pop
clc
jecxz
add
cmp
or
aad
cmp
xor
sti
jmp
repz
out
add
jmp
pop
shlb
dec
sub
pushf
stc
inc
fisttps
andl
gs
pop
xor
popf
and
pop
push
lahf
movl
inc
inc
or
jne
test
out
pop
jnp
sub
xor
imul
into
ljmp
xchg
inc
mov
push
fisttps
xor
insb
jb
scas
sahf
push
mov
mov
dec
inc
in
aad
scas
push
push
nop
arpl
push
push
enter
out
mov
mov
inc
add
pushf
ljmp
sti
jmp
mov
add
sub
scas
iret
mov
inc
add
and
pop
sarb
in
add
cmpsb
push
mov
faddl
pop
sbb
adc
add
movsb
sar
ret
push
loope
jne
into
cmc
ds
fst
sbb
push
out
ljmp
repz
outsb
mov
andb
add
in
fidivl
xor
dec
negb
inc
pop
xchg
dec
cmp
or
movsb
outsl
fistpll
outsl
cli
mov
mov
dec
hlt
bound
add
mov
and
aad
inc
cmp
stos
add
sbb
sub
movsb
dec
add
sbbb
movsb
adc
pop
jg
mov
cmp
or
rcrb
lods
std
lea
adc
clc
pause
push
fs
scas
addr16
push
in
fcoms
lods
lock
call
icebp
stc
push
shl
xchg
mov
cs
fisubl
add
and
fistl
sub
mov
add
xor
popf
popa
and
scas
xor
or
jae
cltd
inc
sub
sub
mov
push
lea
xor
add
push
adc
adc
mov
pop
mov
add
pop
sti
cld
mov
in
sbb
xchg
sahf
ficomps
cmpsl
repnz
movsb
mov
shrl
sbb
xchg
fs
out
popf
lods
or
inc
stos
adc
mov
push
or
movb
sbb
test
or
sti
jg
mov
test
push
inc
sub
jmp
jl
mov
xor
movsb
add
xor
mov
js
mov
rclb
loop
or
add
dec
dec
into
jmp
add
ret
bound
add
add
arpl
test
jo
add
add
lret
scas
lods
faddp
mov
lea
and
add
add
insb
add
push
add
sub
sbb
jge
pop
mov
mov
mov
push
and
xchg
and
scas
inc
adc
add
add
jle
cmp
dec
or
pop
cmpsl
scas
jmp
mov
mov
add
push
cmc
aas
mov
fildl
push
popl
stos
mov
pushf
cld
add
add
aad
cmpsb
aad
and
loop
cmp
bound
js
mov
add
popf
add
sub
sarb
fwait
dec
outsl
push
mov
inc
mov
ret
shll
fs
imul
fnstcw
shll
imul
jbe
mov
lret
leave
out
pushl
xchg
inc
sbb
add
lea
and
xchg
or
imul
fcomps
jp
aas
mov
movsb
and
push
lock
push
bound
lods
xlat
dec
movsl
jbe
daa
inc
fwait
xor
pop
mov
out
add
push
jae
xchg
push
inc
clc
repnz
enter
jbe
sarl
add
adc
mov
jg
mov
or
mov
fbld
scas
pop
sbb
or
xor
loopne
push
leave
push
popf
push
push
xchg
add
add
add
and
xor
insb
add
stos
mov
arpl
sbb
mov
andb
push
add
xchg
push
in
pusha
std
jp
add
add
jmp
fcoml
repnz
sub
imul
test
icebp
enter
jo
mov
xchg
pop
xchg
in
int3
iret
pop
out
aam
push
mov
out
movsl
mov
cmp
std
jae
pop
cld
adc
scas
lcall
mov
add
imul
repz
lds
js
pop
mov
add
mov
sbb
push
icebp
or
lock
pusha
shll
mov
add
stos
mov
sbb
nop
and
aad
lods
or
add
add
add
inc
pop
subl
inc
int
hlt
xchg
add
roll
fsubp
push
add
mov
fcmovne
jg
adcl
and
and
enter
jecxz
xor
mov
add
shrb
sub
jb
inc
sti
mov
je
movsl
jp
out
bound
test
orb
iret
add
push
sahf
ficoms
sbb
es
add
add
loop
addl
int
dec
xor
inc
sub
sub
xor
cmpsb
and
add
push
jno
mov
mov
add
or
filds
mov
loope
cmp
or
xchg
inc
add
stc
scas
pop
jb
and
add
rcrl
pop
xlat
xchg
inc
popa
sbb
mov
js
mov
popf
push
jg
mov
sub
cltd
add
push
add
and
cmp
sub
push
nop
rcr
pushf
xrelease
jmp
movsb
jecxz
sub
mov
sub
jmp
out
mov
add
movsb
jg
daa
add
add
fisttpl
out
push
mov
add
xchg
xchg
xor
jmp
pop
add
xor
fwait
in
add
pop
fs
dec
ret
mov
add
pop
lret
cmc
test
pusha
iret
add
bound
pop
mov
add
fdiv
sbb
jno
mov
add
jbe
or
xchg
movsl
iret
and
sahf
lds
dec
jns
pop
sbb
lods
std
fs
add
and
add
sahf
and
jge
push
test
adc
add
fwait
add
lds
out
subb
inc
dec
fisttpl
lods
or
push
xchg
ret
cmpsl
jo
mov
das
xchg
insb
mov
sbb
sub
flds
add
sub
outsl
icebp
pop
sbb
pop
clc
fs
fucomp
jae
xchg
xchg
aas
loopne,pt
hlt
push
in
push
adc
xor
pop
add
adc
inc
cli
clc
push
fbstp
push
add
stos
cli
fisubrs
xor
lret
dec
xor
adc
push
and
sub
stos
pop
movd
xchg
fs
orl
lock
inc
es
sub
sahf
mov
sub
fld
cmp
pop
pop
mov
push
add
clc
out
rcrl
je
sub
sbb
ret
loopne
incl
rclb
in
mov
ret
mov
lods
test
loopne
add
pop
jo
push
pop
xchg
sub
mov
jmp
jl
xchg
scas
mov
inc
adc
and
test
mov
mov
jl
sbb
sbb
mov
ljmp
aad
cmp
sti
fists
scas
lods
mov
xchg
xor
lock
cmp
xchg
lcall
outsl
mov
mov
cmp
movsb
and
xchg
lods
test
lcall
jno
cli
or
inc
dec
pop
push
fcomps
or
fists
sti
mov
imul
pop
jno
dec
ror
xor
jle
sar
movsb
mov
repnz
movsb
mov
adc
xchg
lret
add
add
xor
pop
jle
dec
inc
fs
add
addr16
add
add
adc
cmpsl
add
add
movsl
jne
add
add
paddusb
xor
idivb
pop
and
mov
xor
pop
es
aam
mov
dec
rcrb
add
xchg
add
push
add
add
sbb
iret
xor
pop
div
sbb
and
jo
mov
popa
cmp
inc
sbb
cwtl
mov
fmuls
xor
xchg
push
stc
inc
jge
cwtl
xchg
sbb
push
pop
ror
sub
pop
out
jbe
cld
insl
inc
les
les
push
pushl
cmp
movsb
dec
ja
push
enter
sbb
and
insb
and
pop
dec
dec
inc
pop
std
test
mov
cmp
lods
push
push
adc
cmc
cmpsb
lds
stc
jp
mov
adc
inc
ja
frstor
pop
inc
pop
add
xor
push
dec
sahf
addl
out
cltd
out
or
and
add
hlt
dec
pop
ljmp
jne
jbe
mov
lods
test
enter
fistpl
adc
js
mov
in
cmc
icebp
outsl
repz
and
mov
lds
cmp
dec
scas
xchg
mov
push
xchg
in
xchg
dec
push
xor
pop
or
fiadds
je
hlt
lcall
out
inc
or
out
test
gs
adc
inc
shrb
mov
pop
divl
push
dec
adc
inc
lea
dec
push
lea
cli
int
and
sub
ja
std
xchg
and
inc
sub
je
in
scas
dec
imul
les
faddp
adc
pop
pushf
add
add
fildl
pop
ficoms
cmp
jae
pop
cmp
adc
dec
jnp
aad
pop
loop
cmp
and
and
pop
cmp
cli
or
xchg
rcrl
in
ret
add
sub
adc
ss
cmp
cmp
enter
insl
push
add
push
inc
inc
nop
aad
add
inc
sbb
insb
fs
mov
add
bound
xchg
and
shll
dec
add
sub
aad
in
mov
fidivrl
adc
test
clc
mov
xlat
pop
cmp
icebp
mov
add
add
arpl
xchg
comiss
add
loop
lock
mov
test
add
adc
daa
dec
jns
not
add
rorb
xchg
cmc
or
add
scas
dec
subb
ror
jb
mov
xchg
jbe
lcall
add
pushf
imul
add
xchg
and
mov
hlt
sahf
push
imul
inc
xor
and
les
pop
addr16
xor
lret
pop
ljmp
add
inc
sbb
cmp
add
loop
shl
push
ja
popf
lds
cmp
bound
movsl
add
push
test
and
ds
push
add
idiv
repnz
mov
dec
into
add
lds
stos
out
mov
add
add
jp
add
xchg
add
lods
mov
adc
jae
push
sahf
push
adcl
imul
jmp
daa
push
je
ret
repz
outsl
sbb
fninit
in
mov
xchg
push
jae
lods
scas
adc
push
add
mov
adc
pop
andnps
push
fwait
add
mov
ljmp
push
cmc
std
push
add
pusha
inc
inc
add
xchg
ds
das
sbb
mov
jne
jmp
das
dec
dec
push
pop
mov
pop
rorb
mov
add
adc
cmp
inc
sub
in
rcrl
cmp
lods
in
jp
add
jo
add
mov
and
scas
ds
push
push
in
shlb
test
bnd
add
xchg
imul
in
xchg
fcomi
insb
sti
pop
imul
cmp
dec
ficompl
popf
xor
mov
fadds
add
add
xchg
xchg
popa
add
add
pushf
xchg
jnp
or
xchg
cltd
add
and
pop
push
add
add
dec
dec
adc
bound
xor
fisttpll
fisubrl
mov
xorb
in
outsb
mov
cwtl
iret
sbb
loop
add
popl
insb
jns
incl
add
cmpsl
add
sbb
stos
mov
lahf
push
fiaddl
shll
add
add
inc
and
ds
mov
push
cmp
std
lods
mov
add
popa
testb
clc
jnp
aad
push
out
or
inc
test
ljmp
sete
adc
inc
xchg
shll
shll
inc
mov
stos
jae
repz
cltd
push
adc
xchg
jl
loop
insl
inc
or
add
rolb
mov
add
add
mov
add
add
or
movsb
add
add
pop
jmp
jnp
add
aam
add
ds
xchg
pop
add
imull
dec
jmp
in
mov
pop
sbb
add
mov
js
test
lock
adc
mov
add
jmp
pop
pop
add
add
adc
test
add
out
pushf
cmp
add
mov
pop
add
add
fiaddl
add
or
js
cwtl
aas
mov
add
jge
add
xchg
ljmp
add
adc
mov
cs
pop
add
mov
push
and
lea
sahf
rcr
loope
data16
out
dec
loopne
int3
outsl
mov
ret
in
xchg
test
add
add
jmp
outsl
jb
loop
cld
cmp
les
add
fidivrl
xor
dec
cld
push
testb
aas
sub
stos
aam
cmpsb
sti
in
imul
mov
fisttps
loope
add
jbe
push
cmp
push
pop
loope
fcmovnb
xor
out
dec
adc
cmp
add
add
shrb
xor
lods
xchg
mov
loopne
xor
movsb
outsb
pop
pop
xlat
inc
lods
out
ret
xor
xchg
in
xchg
mov
test
arpl
sbb
inc
clc
repnz
pushf
xchg
jns
mov
in
sub
add
sub
push
mov
add
fmuls
push
cmp
xchg
dec
fistl
xor
xchg
jbe
push
push
mov
push
scas
jecxz
cmpsl
dec
pop
repz
mov
add
mov
mov
ret
cmp
filds
add
adc
add
add
adc
rolb
fisttps
xchg
and
les
mov
add
add
addr16
loope
push
out
push
or
cmp
pop
enter
je
add
nop
xchg
push
cmp
add
lds
repnz
add
add
stos
mov
rolb
xor
lock
add
add
sub
jb
divb
lds
push
pop
sbb
mov
xor
sub
repz
gs
out
cld
ret
out
test
mov
call
out
pusha
xchg
add
add
jecxz
hlt
add
sbb
jnp
pushf
repz
daa
in
in
push
add
add
push
inc
fldcw
fdivl
add
test
mov
in
xchg
push
icebp
fildl
cwtl
push
outsb
aas
jg
nop
push
cld
bound
dec
stc
sbb
int3
icebp
add
add
xor
bound
or
loop
fdivp
sahf
inc
lods
add
add
cmp
daa
xchg
xlat
ret
movsb
stos
loopne
es
jmp
je
xchg
add
add
adc
repnz
add
add
cmc
sbb
add
sarb
jmp
lcall
jp
xchg
shl
scas
jbe
sub
add
add
add
push
push
jno,pt
imul
mov
popf
mov
aaa
push
sbb
mov
add
movsb
mov
dec
sbb
mov
ljmp
jae
insl
lock
dec
rolb
dec
xor
adc
add
call
xchg
repz
add
leave
shll
and
xor
push
and
stos
sub
mov
add
push
popf
in
add
mov
fwait
std
jp
jnp
push
mul
nop
push
add
ret
and
pushl
sti
shl
or
ja
add
adc
xor
add
arpl
out
out
enter
mov
addl
xor
aam
xor
fbld
fisttpl
ret
push
fisubs
cmp
mov
int3
lahf
test
mov
icebp
add
sbb
jnp
jl
addr16
mov
mov
mov
cli
lods
scas
jno
rorl
add
add
add
rcr
insl
xchg
fwait
mov
adc
pop
sahf
add
xchg
rcrb
divb
mov
pop
fdivs
cltd
insl
movsl
jmp
pop
std
mov
add
in
or
popa
jbe
add
stos
mov
lods
fsts
daa
test
mov
nop
out
movsl
cltd
lahf
jno
or
push
xchg
sub
add
mov
loope
aad
popf
lret
push
add
pop
or
add
push
sbb
adc
add
xchg
xor
into
push
fmull
and
mov
scas
add
pop
cmpsl
lret
add
add
mov
cltd
in
push
fstl
xor
cmpsl
repnz
cmp
inc
pop
add
add
pop
and
xchg
cmp
outsb
fstps
mov
pop
add
xorl
add
jecxz
outsl
fisubl
add
sahf
add
mov
js
pop
addr16
jo
jno
fidivrs
pop
aaa
jo
repz
sti
or
xor
add
pop
add
dec
loop
sahf
or
mov
mov
pop
cmp
insl
inc
aam
insb
mov
cli
pop
sbb
outsb
dec
loopne
cmc
daa
divb
cmp
js
push
sbb
add
js
add
ljmp
loopne
mov
in
outsl
add
popf
data16
cmp
push
jle
cwtl
and
out
pop
add
movsb
pop
nop
orl
cld
bts
out
dec
xchg
xacquire
es
popa
lods
out
mov
test
add
add
lret
xlat
or
xchg
lret
dec
int3
es
stc
mov
fbstp
add
mov
pop
add
mov
pop
wrmsr
add
fstpl
dec
imul
or
data16
push
xchg
xchg
jecxz
and
daa
loope
add
cmp
fdiv
sbb
jo
jb
fnsave
call
clc
addl
clc
and
cld
roll
add
sarb
mov
jno
stos
sbb
adc
push
or
addl
int
mov
les
cmp
add
push
sbb
inc
dec
xlat
cmc
js
mov
push
subl
ljmp
add
push
sbb
fcompl
pop
cli
sub
lahf
scas
daa
xchg
mov
lcall
pop
xchg
cmp
push
jl
pop
jp
jns
xchg
in
jge
inc
popa
xor
sahf
icebp
insl
test
mul
popf
or
out
out
cmpsb
pop
add
push
xchg
add
mov
ret
mov
leave
out
jl
inc
pop
lret
mov
or
ljmp
leave
fiadds
aaa
dec
add
lea
add
jbe
add
dec
xchg
add
and
daa
imul
mov
aam
dec
and
rcrw
bound
je
cmc
cmp
js
cmp
shrb
std
pop
das
sbbb
sbb
jp
dec
in
adc
add
add
mov
test
dec
insl
add
push
xor
in
popl
xor
add
push
add
mov
adc
fwait
or
loop
sbb
sub
pop
mov
mov
push
nop
popf
fcomps
insl
mov
jo
imul
cmpsb
xor
lods
sub
fidivl
notl
cmp
mov
jmp
jmp
xor
test
pminsw
mov
in
cmpb
lahf
sbb
arpl
aad
add
add
add
mov
nop
cmp
mov
fildl
add
scas
mov
add
addr16
sbb
lds
add
or
fsubr
or
inc
mov
add
add
lcall
js
add
add
hlt
sahf
push
push
out
add
add
mov
add
lods
add
add
xchg
dec
pop
out
adc
add
add
insl
add
add
and
jnp
add
mov
add
ds
je
ds
cmpsl
jmp
add
jmp
and
jecxz
add
add
iret
in
rcrl
add
add
gs
jl
inc
push
adc
add
inc
and
add
push
vfnmaddps
mov
add
add
jae
push
sarb
xchg
cld
jb
ror
scas
out
subl
cmp
adc
and
xchg
and
in
fidivrs
push
inc
mov
mov
jo
xchg
nop
push
push
sbb
xor
add
nop
mov
in
cmp
add
inc
in
adc
popf
jns
add
mov
lds
stc
int3
add
add
mov
add
add
dec
add
std
inc
stc
cmp
add
sub
scas
fmul
rorb
mov
loop
push
add
in
dec
push
fistps
mov
xchg
enter
fisttpll
daa
add
add
jl
mov
lret
sbb
and
shll
xchg
fsubrs
mov
lea
add
fwait
stos
dec
sbb
xchg
movsl
adc
lock
add
mov
insl
int
cmpsl
dec
or
mov
pop
stos
xor
add
in
shl
dec
xchg
push
movsl
mov
add
add
ficomps
fwait
mov
add
and
jmp
roll
add
adc
adc
subl
cli
pop
gs
mov
add
add
xchg
add
add
and
and
ds
jl
jne
sbb
jl
mov
psllq
aad
mov
xor
dec
nop
push
jae
sbb
jnp
and
addb
or
inc
cmp
ret
pop
popf
jp
movsb
sub
xchg
mov
add
rorl
push
xchg
jae
push
add
adcl
and
add
inc
sbb
cmp
mov
icebp
sahf
and
cmp
or
xchg
mov
std
mov
and
add
sub
xchg
movsb
icebp
pop
jae
sbb
pop
and
inc
das
fdiv
and
push
add
add
daa
cld
mov
sub
lods
add
cmp
mov
xchg
and
sbb
call
movsl
xor
mov
addb
test
push
pop
add
xchg
add
test
push
sahf
js
jge
andl
idivb
push
fwait
add
or
inc
inc
add
jnp
xchg
or
icebp
movsl
mov
add
jle
fidivrl
add
cmc
out
mov
push
sub
es
jp
into
sbb
out
ja
movsb
clc
ud1
clc
out
xorb
and
nop
test
xor
stos
or
jge
xor
out
and
xchg
xor
and
lods
or
popa
mov
dec
push
pushf
dec
adc
and
xchg
in
rcr
daa
jecxz
sbb
xor
or
add
add
sbb
jp
jmp
jb
pmulhw
jl
and
outsl
cld
sahf
movsb
cmpb
mov
xchg
test
lret
inc
pop
test
jbe
shr
lods
push
jecxz
addr16
stos
rcl
xor
pop
mov
pushf
add
xchg
cmp
lret
movl
leave
and
xchg
js
cmp
push
sub
push
add
xchg
pop
xchg
stos
fisubrs
pop
mov
xchg
sbb
add
cld
cmp
pop
cltd
out
mov
clc
push
mov
dec
mov
out
pop
gs
mov
pop
cmp
stos
xlat
ret
add
add
mov
xchg
out
push
dec
sub
xchg
mov
pop
ficompl
in
xchg
mov
xchg
mov
or
ret
lds
add
lods
push
jle
jbe
add
and
adcb
rclb
mov
inc
outsl
scas
stos
inc
gs
loope
imul
pop
sbb
pop
pop
cmp
pop
fisubl
loop
out
jae
lret
add
add
xchg
mov
dec
add
add
xor
dec
lcall
push
pop
push
add
sub
add
sahf
mov
jp
into
lds
add
out
fcoms
add
sbb
inc
std
mov
xchg
xchg
cltd
rorb
data16
pop
sbb
dec
add
gs
pop
ljmp
pop
popa
add
in
push
add
add
aam
push
popa
add
jnp
jno
mov
add
hlt
sub
ja
add
movsb
sub
int
das
popf
add
mov
adc
js
add
add
xor
setno
push
std
mov
xchg
outsl
sub
mov
in
or
add
test
add
jge
push
mov
mov
je
and
gs
repnz
add
adc
cli
aas
dec
cmp
mov
scas
mov
pop
inc
add
pop
or
lcall
fbstp
popa
xchg
lds
add
int3
out
add
dec
std
jns
data16
nop
mov
adc
and
add
push
sbb
add
sahf
sub
arpl
add
add
adc
add
dec
sub
test
hlt
or
repnz
jae
dec
sar
or
dec
cmp
add
jne
insl
and
in
xchg
push
cmp
xor
dec
xor
cmp
loope
adc
add
stos
sub
jmp
ds
add
sahf
aas
inc
insb
movsl
add
add
and
xor
in
mov
push
popf
ss
mov
pmuludq
add
add
inc
jbe
insb
std
js
or
push
xchg
xchg
mov
shlb
nop
push
xchg
mov
test
test
jo
or
jmp
adc
dec
xor
fcmovb
ds
jno
add
mov
add
push
xchg
mov
xchg
out
lea
mov
add
add
push
add
add
mov
jne
out
sbb
fldcw
adc
add
add
mov
mov
lds
loopne
into
add
and
add
loope
scas
in
add
loope
adc
das
cmpsl
cmp
into
jmp
jmp
cmc
add
ds
add
pop
add
fstps
test
aam
test
add
mov
addr16
imulb
inc
xchg
jae
divb
cmpsl
lahf
add
popf
push
test
inc
add
add
jmp
divb
mov
lds
pop
push
jae
adc
inc
mov
outsb
pop
xchg
pusha
ss
dec
xchg
addl
dec
xchg
mov
xor
ljmp
or
lods
bound
add
push
cmp
add
mov
lods
js
dec
iret
push
imull
in
shrl
dec
sub
lret
add
scas
fcmovnu
shlb
add
pop
and
stos
add
and
loopne
sbb
cmp
or
push
mov
dec
sub
int3
das
jmp
jge
orl
das
sub
jp
dec
jne
movsb
lds
repnz
push
das
push
aas
pop
jae
jns
call
clc
shlb
lds
test
push
cmp
mov
ficompl
cs
mov
pop
mov
push
ja
sub
fwait
mov
and
add
add
aad
cmpb
call
aad
sub
bnd
jae
inc
cmp
popa
lods
cmc
repnz
mov
cvtpi2ps
mov
or
xchg
and
push
lods
popa
pop
pop
stc
jns
gs
ret
adc
and
popa
rolb
inc
add
data16
add
dec
hlt
in
xor
and
inc
and
mov
or
add
adc
add
jle
cwtl
cmp
xchg
jecxz
loopne
inc
addl
sub
add
and
pop
xchg
cltd
push
into
and
rcr
insl
and
test
pop
push
xchg
insb
push
cmp
scas
outsl
scas
mov
jnp
add
ja
rclb
incb
popf
stc
add
add
sub
in
lcall
addr16
cmp
xor
inc
cmpsb
clc
out
pop
es
cld
mov
add
add
jae
insl
pop
push
add
mov
ljmp
add
enter
jmp
add
push
cmp
dec
push
rorl
mov
popa
add
movsl
es
into
and
incb
add
push
jne
sti
mov
pop
xorb
pop
sbb
bound
test
jne
xchg
jmp
push
dec
adc
bndldx
xor
rcrb
and
imul
test
xorb
daa
dec
adc
aam
pushf
into
cli
jns
and
arpl
mov
add
push
pushf
dec
lret
xchg
inc
sbbb
mov
shll
add
add
add
pop
or
cwtl
pop
xor
test
cltd
cmc
xchg
mov
adc
add
pusha
jo
lcall
pop
sahf
mov
sub
in
add
mov
outsb
pop
add
add
add
or
push
aaa
inc
fistl
sbb
ret
sub
xchg
addl
ficomps
test
nop
ret
insb
xchg
add
scas
xchg
stos
xor
pop
out
jnp
mov
ja
add
xor
pop
fwait
shll
repz
pop
aad
add
insb
xor
hlt
sub
sahf
fldcw
outsl
push
pop
push
imul
and
sbb
dec
cmc
outsl
notl
mov
jns
adc
outsl
fisttpl
dec
pop
and
lret
sbb
xchg
inc
push
ret
inc
pop
adc
xchg
je
and
mov
lahf
mov
inc
push
nop
movsb
add
xchg
repnz
xchg
sbb
or
sbb
push
xchg
ficoms
pop
jae
inc
hlt
je
mov
shr
jmp
pop
sub
add
sub
fsubs
jnp
hlt
and
push
jno
cmp
lahf
add
xor
inc
cltd
push
mov
fisubrl
shlb
imul
or
adc
jl
add
add
add
cmp
push
dec
xchg
xchg
aam
insb
test
add
pop
sbb
inc
inc
imul
jne
repnz
test
sti
leave
mov
add
pop
int
sbb
dec
add
add
add
clc
xchg
or
es
std
out
dec
out
adc
cld
test
push
loop
adc
and
dec
and
aaa
jae
aam
movl
aaa
and
fnsave
xchg
add
add
cs
xchg
push
jecxz
cmp
pushf
inc
pop
aaa
jp
xlat
xlat
adc
inc
sbb
int
cmp
cmc
and
mov
cmc
loop
xor
leave
fiaddl
fiaddl
add
sub
gs
jl
add
pop
dec
pop
add
fs
sbb
jp
les
outsb
out
filds
jae
js
loop
mov
cmc
pop
enter
leave
shll
dec
ret
adc
fcompl
sbb
outsl
mov
dec
jecxz
fwait
inc
sbb
rorl
pop
xchg
xor
dec
jno
mov
add
lcall
lods
testb
mov
add
das
cs
dec
shlb
add
jo
jb
shlb
mov
mov
add
sti
jecxz
ret
add
add
mov
jecxz
fdivs
std
or
add
stos
and
or
mov
rcl
xlat
bound
shl
sbb
dec
and
xchg
add
or
push
cli
xchg
pop
pop
iret
test
pop
mov
fisttpl
adc
jne
add
aas
push
in
jp
add
add
lea
add
cli
jg
and
lods
mov
movsl
xchg
inc
mov
mov
mov
shrb
pop
aaa
std
and
cmp
imul
stos
cld
cmp
inc
push
pushf
add
movsl
imul
imul
fcompl
sarl
sahf
mov
xorb
dec
xchg
add
leave
frstor
inc
mov
call
dec
insl
mov
sbb
les
adc
add
add
loop
popf
adc
jbe
add
sub
add
pop
mov
add
dec
push
idivl
add
movsb
jg
push
pop
jno
lods
jno
js
push
add
add
scas
daa
cmpsb
ret
das
xor
pop
mov
xlat
xchg
xor
inc
insl
aaa
push
pusha
addl
xchg
add
stos
pushf
gs
add
jge
dec
cmp
fimull
add
add
out
xor
mov
stc
jge
push
std
jmp
scas
shlb
add
pushl
fwait
lods
in
mov
push
mov
push
rol
das
outsl
xor
and
xor
aas
xchg
add
jbe
fs
clc
rep
loop
cld
clc
cmp
jbe
mov
loope
mov
xor
lods
inc
aad
or
push
mov
addr16
in
mov
jp
out
bound
lcall
scas
dec
daa
test
call
pop
ss
subb
inc
dec
ret
in
mov
fsubs
xor
inc
mov
xchg
repz
xor
add
test
sbb
mov
fistpll
dec
pop
jb
cld
out
es
out
addr16
jns
lret
sub
inc
xchg
xchg
flds
rcll
inc
mov
mov
add
xor
mov
loop
clc
inc
jp
xchg
decl
repz
out
cmp
push
jae
mov
push
add
add
push
jmp
icebp
cmpl
push
test
add
es
test
push
add
mov
lods
sbb
push
jne
test
movsb
add
and
repnz
push
mov
popa
push
mov
mov
cs
dec
addl
mov
xor
mov
fcomip
pop
ljmp
add
add
in
testl
jmp
pop
mov
cmp
push
outsb
insb
testb
repz
dec
aam
cmp
mov
je
add
hlt
dec
mov
add
sbb
add
cmp
rcll
subb
xor
pusha
insl
test
mov
push
pusha
je
iret
push
pushf
fnstcw
rclb
in
or
mov
lret
int
pop
jae
mov
scas
xchg
push
cmp
aam
push
loop
hlt
dec
mov
cmpsb
pop
cmp
mov
or
in
cmp
in
pop
add
push
mov
sub
cld
repnz
call
jbe
add
lahf
jo
sub
in
or
mov
and
add
fadd
xor
icebp
dec
pusha
inc
pop
in
sub
xor
ljmp
and
jecxz
xor
outsl
pop
and
pushf
lcall
enter
stos
pop
sbb
pusha
scas
iret
test
out
mov
and
sbb
mov
jno
jp
fadds
idiv
sbb
sub
sub
jns
ret
cmpsl
xor
movsl
sbb
dec
cmp
sbbl
add
imulb
adcl
fldenv
rclb
sbb
add
add
mov
test
mov
iret
jp
xchg
or
xor
inc
xchg
push
data16
jge
add
cmp
pop
xchg
sahf
cmc
pusha
xchg
add
add
hlt
nop
pop
scas
add
add
and
and
xor
inc
sti
xor
inc
bound
push
mov
sbb
es
ss
push
jle
popf
add
mov
mov
cmp
insb
aad
mov
add
xchg
ss
sti
add
and
push
inc
cmp
sbbl
insl
data16
xchg
lahf
test
push
leave
sub
je
cltd
add
add
ret
ret
jp
mov
andl
pop
js
outsb
xlat
imul
and
and
pop
pusha
ja
pop
add
dec
pushf
cld
push
dec
fiadds
loopne
add
push
dec
sbb
xchg
rol
lods
scas
add
dec
add
jg
data16
push
xchg
pushf
mov
dec
add
jmp
test
bound
cmp
and
cmp
repnz
add
add
dec
addr16
cmp
mov
rolb
pop
jns
push
andl
nop
ss
fldl
add
push
sub
add
add
xor
dec
jo
adc
mov
add
jecxz
jns
lea
add
repz
repz
outsb
ficoms
cmpb
sub
cld
mov
fcmovbe
mov
mov
sar
std
addb
jo
and
xchg
add
add
bound
add
inc
subl
pop
mov
pop
xchg
push
sbb
add
mov
roll
add
push
aas
loopne
xchg
mov
and
sbb
sub
xor
test
movsl
sub
insb
xor
cmp
add
push
or
rorw
mov
fisttpll
and
sti
cld
inc
movsb
fistps
lea
jb
xchg
sti
jg
xchg
seto
cmpsl
sahf
outsl
dec
icebp
xorl
mov
daa
mov
clc
popf
fwait
enter
mov
jbe
push
dec
mov
jnp
ds
testb
lods
dec
sarl
popf
push
or
sub
add
add
stos
scas
add
add
lea
mov
mov
ljmp
fisubrs
mov
and
mov
scas
outsb
lret
push
repz
loope
sub
add
add
pop
lock
iret
jbe
add
add
mov
int
xchg
lds
dec
jbe
cmp
add
mov
mov
mov
add
pop
into
or
add
cmc
pop
inc
ss
movsb
adc
pop
push
frstpm(287
jecxz
sbb
aaa
pop
mov
pop
les
daa
xchg
lahf
test
movsl
sub
insb
push
hlt
push
add
repnz
test
ds
cmp
int3
leave
ja
and
jne
addr16
sbb
add
xchg
mov
mov
scas
sbb
cwtl
push
shlb
loope
mov
call
add
shl
fisubrl
xor
rorb
jmp
mov
adcl
mov
cli
jae
in
test
mov
fildl
ja
push
stos
or
sbbb
xchg
jne
int
and
daa
subb
add
xor
mov
push
stc
in
push
ss
dec
push
outsl
fxch
js
push
adc
nop
sub
mov
in
es
inc
jmp
jg
sub
jne
es
iret
into
sbb
aam
add
cmpb
add
cltd
je
xchg
sub
mov
ja
pop
and
insl
xor
pop
and
mov
add
lods
testb
int3
ljmp
pop
mov
inc
sbb
shl
mov
adc
imul
add
nop
dec
popl
add
inc
mov
add
add
inc
cmp
std
inc
mov
cltd
mov
mov
call
push
shl
pushf
cmpsl
out
ds
hlt
int
add
add
out
push
lods
and
aad
xchg
add
clc
dec
sub
mov
pop
popf
int3
movsl
sub
sub
add
add
add
iret
call
sbb
stc
fsubl
add
repnz
mov
roll
add
shlb
mov
add
pop
xor
xlat
lock
pop
stc
xchg
or
push
jae
cmpsb
out
jge
lods
xchg
or
inc
add
test
mov
les
pop
adc
cld
shll
shlb
add
xor
mov
fiaddl
xchg
xlat
mov
and
mov
ss
loopne
nop
dec
les
ret
sub
add
daa
fldenv
fwait
mov
sub
test
fimuls
test
add
mov
push
mov
xor
aas
jl
ljmp
xor
lods
sbb
cmc
or
repz
or
pop
cwtl
push
scas
outsl
add
popf
int
fisttps
rcrl
fdivr
mov
scas
rcrb
jg
inc
xchg
or
xor
shll
aaa
push
je
xchg
and
mov
inc
loope
xchg
aas
adc
imul
in
and
adc
cmp
out
jecxz
repz
nop
push
shld
test
jns
addb
das
fldt
andl
int3
jbe
push
rorl
cmc
mov
orb
add
clc
test
mov
mov
xor
jmp
test
pop
xchg
dec
jecxz
fcompl
inc
add
add
sbb
jecxz
addl
sbb
iret
and
popl
repnz
add
add
ss
xchg
outsb
outsb
movsl
add
sub
jl
mull
cmpb
lret
cmp
fwait
imul
shll
inc
add
mov
in
dec
or
aam
jg
sahf
aad
add
enter
add
imul
mov
leave
or
std
pusha
lods
dec
sarl
add
arpl
and
inc
pop
test
and
and
cwtl
and
ds
push
mov
into
nop
clc
pop
add
add
add
pop
lods
iret
out
jecxz
adc
add
pop
mov
and
arpl
repz
gs
fwait
xchg
stc
push
stc
add
add
add
fisubs
mov
push
jge
addr16
dec
add
add
mov
and
cmc
jmp
in
pushf
mov
push
dec
cmp
fld
xor
xchg
inc
cmpsb
sar
mov
jae
js
popf
loop
testb
iret
jg
fs
ss
cwtl
push
pop
cmp
mulb
fcoml
notb
xchg
shl
xchg
fwait
rolb
add
and
sbb
sub
insb
and
ljmp
aas
push
mov
jae
xchg
xchg
xchg
mov
or
in
imul
sub
leave
xchg
and
popf
sbb
xchg
pop
jns
push
das
cmp
js
xor
cmp
and
add
pushf
fcoms
dec
movsb
push
scas
adc
xor
cltd
pushf
js
pop
andps
lods
repz
add
scas
in
test
jmp
fucomp
mov
mov
repnz
andl
add
adc
pop
dec
sbb
popa
push
rorl
push
and
add
fists
add
add
jmp
dec
xor
test
add
stos
mov
cmp
inc
test
stos
les
push
test
jae
add
test
pusha
dec
xor
mov
sub
out
xor
push
jae
cmp
and
stos
and
lahf
push
mov
stos
or
insb
insl
jecxz
arpl
sbb
bound
mov
mov
pop
pop
xchg
fwait
rcrb
imul
mov
lahf
ja
outsb
dec
mov
test
xchg
ss
mov
push
scas
sbb
mov
xchg
insl
push
push
rol
add
lods
das
cmpb
insl
lods
insl
stos
push
addl
shrb
xchg
or
rcll
in
cmp
sub
add
adc
stc
lock
shlb
adc
fsubrl
add
add
xchg
jl
cli
inc
cli
and
js
lods
push
dec
mov
xor
pop
cs
mov
add
add
repz
add
cld
inc
inc
enter
in
xor
pop
sbb
and
pop
mov
arpl
in
xchg
loopne
add
xchg
pop
jns
pop
dec
js
pop
cmpsl
or
pop
mov
lods
inc
sbb
pop
jmp
pop
add
add
jecxz
popf
dec
sbb
and
add
add
repnz
inc
inc
fdivs
add
add
xchg
aas
cli
cmp
bound
fwait
pop
testb
cmpsb
mov
jns
sub
jb
add
add
popa
stc
xor
and
mov
xchg
xchg
int3
jmp
mov
lods
pushf
and
dec
jnp
clc
xchg
sbb
shrl
lods
cmp
cmpsb
icebp
pushf
orl
mov
icebp
jecxz
data16
dec
sub
int
scas
addr16
test
add
add
jo
ds
xchg
cmpsb
setle
imul
sbb
mov
jle
mov
test
jl
inc
fdivrp
mov
add
stos
test
leave
pop
jle
movsl
shlb
pop
mov
cmp
loopne
pop
lock
or
pop
inc
and
dec
pop
add
add
in
add
add
jbe
xchg
jp
xor
sub
sub
inc
pop
jp
push
mov
sbb
or
jle
jnp
jae
or
inc
fisubrs
xor
sarl
mov
orb
sbbb
and
in
enter
add
jl
fists
pop
fstpl
std
lock
ljmp
cwtl
enter
adc
aaa
mov
mov
mov
cmpsl
mov
adc
call
in
sub
jp
mov
dec
mov
test
push
push
mov
dec
jne
lcall
xor
mov
ljmp
jge
je
push
mov
es
cmp
enter
mov
fmull
test
and
call
fidivl
cmp
cmp
inc
add
je
push
bound
add
add
cmp
mov
add
clc
mov
gs
adc
add
insb
xor
xor
xchg
shl
jecxz
jnp
push
push
cmpsl
cmp
int
cmpsl
and
mov
inc
popf
test
loopne
fwait
rolb
repnz
movsb
add
inc
inc
cmp
loopne
stos
adc
jns
aam
fldt
push
sub
add
add
and
clc
pop
cmc
cli
xchg
and
add
push
jb
aaa
fsubr
mov
call
pusha
andl
pop
sbb
xor
pop
sahf
xor
jecxz
or
mov
jmp
repnz
repnz
push
push
iret
in
mov
mov
ljmp
orl
dec
push
mov
cs
ret
icebp
pop
mov
shrb
mov
push
sbb
jnp
lahf
and
sti
pop
push
mov
ljmp
and
sub
cmp
fdivrs
lcall
jle
cmp
fwait
out
push
mov
cmpsl
mov
aad
inc
sub
popf
cmp
xor
dec
add
cmc
js
lods
pop
and
push
shll
mov
push
test
fsubl
jb
mov
and
pushf
js
inc
xchg
push
mov
add
and
mov
or
lods
push
inc
gs
shrl
mov
mull
daa
or
pop
adc
call
nop
push
syscall
frstor
mov
iret
mov
inc
adcb
lock
mov
inc
cwtl
mov
add
std
pop
push
mov
or
cwtl
cmpsb
jb
cmpsl
mov
jbe
popa
std
xchg
and
add
adc
loope
xchg
xchg
add
add
sub
add
mov
out
jo
fidivl
add
mov
lahf
imul
add
mov
ss
fdivrs
pop
mov
pusha
jae
cmpsl
pop
lock
jmp
cmp
nop
add
mov
inc
loopne
sbb
insl
xchg
and
or
fsub
int
jne
iret
push
jb
mov
popl
popl
push
les
fsubrp
pop
add
push
in
cs
fwait
mov
add
cwtl
push
aaa
enter
imul
dec
cmpsb
shlb
mov
test
push
fildl
ja
mov
push
jns
lcallw
inc
or
loop
enter
xchg
pop
add
push
xor
mov
ret
push
cmp
add
aas
inc
inc
sbb
fisttpll
pop
jae
pop
add
add
stc
mov
lock
push
inc
mov
shll
or
inc
push
or
pop
ljmp
pop
inc
fwait
adc
push
outsl
and
outsl
sbb
jno
adc
xchg
and
add
pop
jmp
out
mov
mov
dec
xor
sti
or
sub
jmp
pop
stc
add
sbb
ss
mov
add
push
mov
mov
aaa
repnz
or
fcomps
push
push
mov
push
push
xchg
mov
in
jge
and
pop
push
and
in
stc
or
inc
ja
add
fnstcw
ret
sub
push
mov
xor
add
add
jle
push
and
xchg
sbb
rclb
adc
xorl
xlat
or
stos
lret
std
pop
sub
add
mov
xchg
pusha
pop
cmp
insb
inc
outsb
add
inc
sbb
xor
inc
and
sub
xor
lahf
nop
sbb
dec
test
dec
or
clc
call
push
dec
pop
xchg
dec
jmp
sub
repnz
out
fucomip
pop
sbb
sahf
stos
jbe
movsb
loop
cmp
add
mov
cld
add
ljmp
add
test
into
pop
xor
jo
out
das
push
test
mov
pushf
stc
sbb
add
aas
jge
jbe
lret
and
imul
es
or
sti
xchg
mov
xor
fbld
push
xor
add
test
lcall
outsb
insb
add
mov
outsl
imul
scas
sub
sbb
mov
ss
inc
hlt
sar
push
insb
add
push
repz
arpl
push
xchg
add
outsl
mov
sub
negb
ds
and
lock
inc
sbb
cwtl
dec
pop
mov
aas
xchg
outsb
addl
push
mov
cli
add
in
add
sub
sub
mov
cs
stc
je
add
adc
aam
mov
fcomp
lret
imul
test
xor
sbb
inc
sti
mov
mov
inc
jno
sub
pop
mov
push
mov
push
popf
outsb
xchg
outsl
mov
add
add
mov
fst
and
bound
jecxz
sbb
jno
sbb
mov
mov
aaa
dec
pop
aas
or
jbe
aad
lock
and
mov
data16
sbb
push
int3
jge
data16
adc
hlt
clc
push
lods
cli
mov
sub
test
and
stc
push
add
add
test
rol
or
in
sbb
cwtl
std
aad
xor
adc
nop
cmp
stc
sub
enter
test
add
add
vpermpd
arpl
out
lock
std
mov
or
gs
lret
mov
jg
test
xor
fimull
pop
add
mov
fstps
inc
mov
lret
scas
push
mov
jecxz
ja
sbb
add
outsl
testb
fistpll
and
ja
stos
dec
cmp
pop
add
adcl
mov
pushf
jno
adc
sbb
mov
dec
test
rcr
xchg
mov
mov
lret
and
pop
pop
xchg
ss
and
lret
lods
mov
add
fldenv
add
aaa
std
add
int3
add
or
add
sahf
fwait
xor
sti
in
popa
mov
jno
decb
lret
mov
repnz
je
fistl
sub
cli
and
push
mov
pusha
cmc
addl
pop
push
jecxz
out
mov
add
jae
pop
arpl
ficoms
add
dec
dec
add
in
push
call
and
ljmp
mov
xchg
out
std
shlb
xor
test
mov
in
lods
fstps
push
push
add
mov
repnz
push
aas
xor
lds
ja
add
hlt
testb
in
mov
in
js
add
fwait
pop
iret
add
dec
cli
dec
add
roll
js
xor
xlat
rcrb
cmp
xor
add
add
popf
nop
cmp
das
add
insl
add
pop
pushf
add
out
addr16
push
mov
xor
faddl
jno
imul
fildl
adc
in
add
enter
mov
add
and
ds
add
add
push
and
jnp
and
jae
shrl
pop
ret
xor
jp
dec
mov
pushf
fidivs
fdiv
cmp
insb
add
jp
sbb
add
mov
add
add
add
mov
pusha
mov
gs
ljmp
push
imul
fwait
mov
in
push
cmp
adc
mov
xor
leave
hlt
push
cmova
push
mov
adc
add
stos
bnd
pop
dec
xlat
movsl
outsl
adc
inc
loop
test
pop
call
jae
adcl
mov
push
es
fwait
nop
cmpsb
push
dec
sbb
clc
fucomi
pop
xchg
or
insl
add
add
call
std
aas
push
aas
loope
push
icebp
pop
add
add
push
sub
shrd
pop
sbb
outsl
nop
filds
add
out
and
mov
cmp
lret
out
add
add
scas
mov
add
add
cmp
xor
add
inc
lret
and
add
add
aas
adc
mov
jbe
sub
arpl
add
add
in
push
fnsave
add
in
push
or
mov
add
add
jns
ljmp
pop
loopne
inc
jae
add
xchg
out
add
ret
push
mulb
add
sbb
push
in
sub
adcl
enter
inc
xchg
neg
outsl
out
add
add
and
lock
fisubrl
jl
mov
cmp
xchg
aam
sahf
movsl
fcomps
enter
repz
cwtl
call
mov
push
add
add
daa
stc
mov
rol
xchg
xchg
arpl
enter
push
enter
pop
push
jp
jbe
jg
mov
cmp
jns
inc
jg
adc
jge
dec
test
ret
ficoml
mov
mov
repnz
faddl
sbb
xor
mov
mov
fwait
scas
mov
mov
xor
push
inc
pop
dec
imul
xchg
out
cltd
dec
jp
lods
test
enter
shlb
cs
cmp
ret
sub
repz
fcomps
dec
dec
fmull
push
pop
repz
cwtl
mov
aam
dec
add
add
andl
jl
and
je
mov
rclb
cmp
imulb
add
add
hlt
jae
add
sbb
xor
sub
ds
lcall
pop
add
int3
repnz
mov
repnz
add
stc
jno
aad
push
aas
dec
lret
sbb
subb
cli
clc
pop
cmp
mov
push
push
add
xor
mov
enter
movsw
sar
bound
push
and
inc
pop
es
jge
mov
cmp
push
ss
inc
mov
aam
mov
insb
lcall
jnp
jecxz
arpl
add
notl
mov
and
push
test
bound
jmp
push
popf
fldl
ret
stos
lods
jno
dec
and
pop
pop
lods
pushf
add
ds
sub
outsl
stos
add
mov
gs
out
lock
jb
sbb
add
divb
fimull
push
cmpsl
es
sbb
arpl
mov
xchg
jecxz
test
es
pop
cmpsl
push
xor
jns
add
mov
nop
mov
and
pop
nop
fs
jno
movsb
fnsave
xor
add
sahf
les
mov
jno
adc
stc
insl
inc
data16
jp
push
xchg
jo
aas
mov
dec
jns
push
daa
mov
or
add
xchg
in
loopne
bound
pop
shl
jnp
sbbl
test
pop
cs
maskmovq
fiadds
fs
add
add
xor
sarl
es
inc
js
inc
sub
add
jne
aaa
push
mov
repnz
or
pop
jl
xchg
add
add
nop
pop
jecxz
adc
add
add
pop
das
pop
xchg
andl
add
mov
push
gs
ds
jmp
fmuls
jle
xor
push
dec
int
mov
cmc
adc
jmp
push
cmp
xor
cli
icebp
fidivrs
push
mov
adcl
mov
outsl
getsec
pop
dec
bswap
sahf
add
sbb
mov
add
mov
mov
mov
adc
jno
loopne
scas
dec
cmp
es
dec
cmp
xchg
enter
cmpsl
adc
cli
inc
pop
sarl
mov
push
dec
bound
xchg
neg
inc
or
sar
jge
pop
movsl
rcl
pop
ktestw
sbb
mov
pop
sub
sti
push
call
mov
popf
ljmp
xor
xor
mov
add
add
adc
std
cmc
add
add
imul
in
and
adc
cmp
movups
insb
add
sbb
add
sub
jge
lods
add
xorb
add
xchg
push
pop
nop
xchg
and
add
int
arpl
jp
push
cmp
mov
add
call
lret
and
push
ficompl
cltd
push
stos
ja
stos
add
jl
and
push
jl
insb
fs
aam
arpl
test
bound
add
add
xor
pop
in
inc
repz
int
lods
dec
das
icebp
xor
and
add
jae
addr16
lret
mov
mov
cmp
sahf
ret
test
pop
in
xchg
jg
ret
add
xor
adc
stc
cmp
dec
inc
fisttps
adc
push
dec
jns
sub
rolb
add
aad
xlat
and
jb
daa
pushf
mov
mov
mov
cmp
mov
cld
push
dec
push
xchg
mov
insb
mov
xchg
push
outsb
add
test
hlt
push
inc
lock
jl
pop
xchg
inc
add
loop
jns
sub
push
sub
outsl
inc
pop
add
add
cs
aaa
xor
jg
ja
inc
dec
inc
add
add
addl
popf
or
mov
fdiv
shlb
ljmp
iret
sub
inc
jg
add
add
fdivp
sahf
push
pushf
sub
testb
loop
stos
lcall
stos
pop
xchg
push
mulb
stos
add
add
adc
in
call
cmpsb
inc
aaa
add
lds
aas
dec
pop
sub
loop
sbb
push
mov
inc
ret
adc
add
cld
inc
push
fstl
out
js
mov
call
add
mov
and
scas
repnz
dec
mov
sbb
jb
or
cmp
scas
sub
std
ret
add
clc
popf
icebp
lods
test
xrstors
mov
and
in
fs
cmp
sbb
add
and
and
das
lods
out
push
pop
xlat
pusha
movsl
les
js
adc
add
push
pop
leave
fldenv
push
adc
cmp
inc
or
in
xchg
dec
inc
jg
repz
mov
push
sub
popa
xchg
mov
fistpll
pop
pop
jge
add
pop
in
movsb
sbb
pusha
fsubl
std
fdivp
fidivrs
push
ficompl
mov
loopne
add
jecxz
and
ficoms
mov
imul
inc
out
v4fnmaddps
test
sar
sub
shrl
and
stc
mov
mov
aaa
repnz
cmovl
lret
shrb
add
inc
push
adc
cs
repz
imul
ret
shll
and
push
sub
repz
mov
cmpsl
mov
xor
movsb
add
xor
mov
movsl
push
lahf
push
mov
fists
jns
xchg
in
ljmp
insb
cmc
icebp
jp
cvttps2pi
into
xchg
and
rcll
sub
std
inc
les
cwtl
inc
mov
xlat
ja
fsub
jge
sarl
adc
mov
and
imul
adc
pop
mov
dec
inc
mov
cmpsb
addr16
push
adc
push
les
xor
pusha
sti
adc
dec
xor
or
inc
sub
xchg
add
push
jno,pt
sbb
daa
sbb
popa
clc
fucomi
dec
aaa
mov
pop
xor
insl
jge
sahf
ljmp
popf
or
jae
in
add
les
cs
ljmp
cmp
add
clc
ss
sahf
sbb
or
xor
pop
loop
ljmp
je
testb
push
mov
adc
fsubrl
add
and
test
jmp
test
xchg
cmp
rorb
lcall
sub
in
pop
jae
aad
and
fadd
mov
add
sub
jg
test
lcall
ss
jno
add
or
test
daa
inc
fldcw
sbb
ds
jmp
inc
jo
sub
loopne
jno
insb
and
mov
pusha
mov
lahf
in
lahf
addl
cmpsb
cmc
sub
adc
mov
cmpsb
sar
add
add
push
iret
add
scas
fiaddl
ljmp
add
into
jb
jnp
dec
add
inc
add
xor
pop
mov
add
cli
sti
add
add
xchg
xor
add
leave
addb
jbe
add
or
jg
jecxz
jnp
daa
add
pop
or
lea
add
jae
add
fildl
dec
test
add
pop
push
hlt
inc
stc
add
push
das
add
aam
add
jae
add
xchg
push
add
or
idivb
add
mov
add
int
add
test
daa
stc
sbb
adc
add
movsl
outsb
add
rolb
mov
add
sti
push
add
mov
add
cmpsl
mov
xchg
lret
insl
movsl
jg
sbb
data16
lods
scas
add
and
cld
fnstsw
add
imul
ljmp
add
cmp
mov
add
add
add
into
add
add
mov
pop
jne
xchg
push
mov
push
aad
add
mov
push
xchg
fdivrs
add
add
xor
adc
shl
add
add
loope
xchg
pusha
jb
scas
or
js
add
add
add
and
and
adc
mov
in
pop
ja
cmpsl
fsubrs
imul
arpl
test
data16
lock
testl
addr16
rol
pop
inc
push
or
loopne
push
ds
mov
xor
call
fimull
or
addl
dec
push
lods
pop
movlps
pop
fists
sbb
mov
jb
dec
je
xchg
adc
sahf
jle
iret
and
cmpsl
scas
inc
pusha
arpl
inc
ss
aas
xor
jns
push
out
add
add
sub
xor
jp
insl
imul
dec
popa
repnz
inc
fists
push
insb
ficompl
sarb
icebp
and
cmpsb
out
push
dec
jge
lret
fsubl
jns
subb
nop
pop
and
lea
mov
push
cmp
cmp
mov
pop
xchg
les
mov
sbb
dec
cltd
popa
cwtl
jecxz
repnz
test
add
ljmp
push
xor
jo
jns
push
jbe
adc
mov
cld
push
push
js
cmpsb
xor
adc
out
xchg
jno
enter
fdiv
pop
call
test
testb
aas
pushf
dec
xchg
sub
fwait
loope
sbb
pop
sti
xor
fs
lret
adc
add
pushf
or
inc
xchg
pop
pop
call
test
push
pop
int
push
cmp
ret
mov
addb
cmp
lods
xchg
pop
jbe
jle
andb
mov
sub
loopne
inc
dec
js
pop
pop
add
mov
icebp
add
mov
pusha
or
xor
out
pcmpgtd
pop
jbe
test
adc
jp
xchg
cmp
lock
mov
add
add
add
pushf
sub
xorb
xchg
es
mov
push
das
mov
or
add
jl
sti
inc
fsubr
and
push
fsubs
in
loope
mov
out
lret
addr16
imull
pop
cmp
sbb
loopne
test
dec
adc
mov
sub
scas
add
cmp
add
sub
lret
pop
dec
sbb
aad
pushf
popa
out
jmp
push
fs
insb
adc
call
lahf
pop
pop
lret
add
mov
dec
adc
mov
add
add
popf
int
arpl
test
popf
push
dec
jae
sbb
aad
adc
xchg
imul
dec
shl
push
dec
ja
cmp
subb
arpl
xor
pop
cmp
imul
push
jp
out
sbb
test
sbb
aaa
add
insl
dec
mov
sub
ds
mov
or
rcrl
add
xchg
jae
test
pop
mov
pop
jnp
test
xor
cmc
push
xchg
leave
add
notl
aam
xchg
jns
xchg
add
loopne
mov
push
loop
mov
icebp
inc
addr16
xor
xor
outsb
or
push
sbb
ljmp
inc
ss
mov
jge
scas
cltd
outsb
xlat
test
add
add
inc
mov
and
mov
int
xchg
int3
inc
sahf
sub
xchg
jecxz
sbb
pop
sti
xor
mov
dec
mov
add
call
loopne
or
adc
mov
pop
fcomps
dec
cmp
arpl
add
add
out
fadds
pop
xor
mov
sbb
loope
jo
mov
adc
pop
fucompp
mov
xor
sarl
add
add
or
or
jb
pop
jnp
cld
push
pop
fmuls
jp
fidivrs
sbb
add
test
and
ret
adc
stos
sub
ret
fdivl
movsb
xchg
das
or
pop
and
mov
cmc
cmp
sub
mov
lods
or
das
cltd
testb
sbb
inc
xchg
js
lods
xchg
scas
shll
nop
fdiv
dec
jge
sbb
jb
cld
ds
push
insl
cmp
mov
pop
jl
mov
xor
roll
ja
popf
in
push
out
inc
mov
lock
roll
cmp
push
test
jmp
xor
test
jno
out
sbb
lret
push
rorb
or
xchg
inc
inc
shrb
add
lods
sbb
push
popa
jbe
cld
mov
fcompl
push
and
dec
iret
mov
jnp
sbb
or
mov
outsl
lret
leave
add
or
and
inc
push
mov
mov
bound
cmp
push
jo
std
add
cld
add
add
dec
inc
sub
inc
repnz
mov
gs
cmp
jnp
fcmovb
and
mov
nop
push
cmp
orb
pop
xor
add
add
mov
adc
mov
xchg
flds
pushf
push
fadds
loop
xchg
jecxz
loope
dec
pop
mov
xchg
rolb
add
fldt
pop
add
pusha
std
jns
pop
jne
push
adc
scas
push
push
inc
ja
add
popf
int3
xor
mov
xor
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
dec
jge
add
add
add
ret
stc
roll
add
add
add
lds
add
rolb
add
add
add
dec
add
aam
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
in
add
add
add
add
add
or
mov
outsl
add
add
je
xchg
add
or
imul
cmpsb
add
push
sub
clc
xchg
inc
dec
arpl
pop
aas
xchg
pop
lods
pop
add
add
out
add
sbb
cmp
push
sub
dec
inc
jecxz
add
cmp
add
inc
hlt
cli
fnstenv
mov
sub
stos
mov
add
add
iret
fistpl
add
push
and
mov
movsl
and
add
mov
mov
les
into
pop
mov
aad
pop
les
mov
lret
fcomi
test
cmc
add
add
add
shlb
push
sbb
inc
arpl
aam
roll
shll
in
fbld
xchg
addb
xlat
mov
lods
pop
loope
mov
cmp
xchg
aad
or
ja
push
iret
dec
fdivrl
jle
sbb
arpl
es
imulb
jmp
cs
js
jo
test
push
pop
xchg
mov
rcll
int
xor
gs
mov
sbb
and
roll
sub
movsb
add
add
cmp
out
jecxz
dec
add
add
inc
add
add
add
add
jae
roll
add
add
add
add
call
add
push
add
mov
ja
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
les
mov
add
iret
add
add
add
stos
add
add
add
add
popa
add
add
add
add
add
iret
add
add
add
cld
add
add
add
xchg
add
add
incl
lcall
add
add
add
add
add
add
into
add
add
add
add
add
add
add
add
add
add
jne
jb
jp
mov
add
add
add
dec
add
mov
add
add
out
mov
sbb
add
out
add
add
dec
add
add
add
add
add
add
add
add
xchg
add
test
test
test
test
test
test
test
xchg
add
add
add
add
dec
cmp
sti
or
je
cmp
push
sbb
fistl
movsl
jge
push
jmp
sub
and
es
jge
fstp
cmp
inc
add
add
add
add
call
in
push
pop
hlt
out
add
repz
vphsubsw
outsb
stos
ret
and
pop
sub
loopne
shlb
mov
leave
and
pop
dec
fwait
ja
push
add
add
add
add
add
add
add
add
add
xchg
add
mov
add
add
cli
add
add
adc
add
add
add
add
add
add
les
repnz
jo
mov
add
add
add
add
lret
add
add
int
outsb
add
dec
add
add
add
cltd
jnp
mov
stc
adc
lea
fbld
cmp
in
shlb
or
jae
push
adc
dec
imul
xchg
cmp
add
sub
je
sti
iret
cli
add
std
lahf
outsl
subl
or
and
dec
mov
clc
mov
push
sbb
fcoms
cmpsb
jge
push
jmp
add
imul
leave
and
fidivrl
test
add
jge
pushf
daa
in
cmp
pusha
jmp
dec
fs
xchg
fs
cli
cwtl
xchg
iret
or
bound
cli
dec
mov
popf
mov
xchg
mov
lock
cli
mov
dec
mov
xor
mov
mov
push
xchg
in
mov
adc
orl
movsb
mov
mov
movsb
lret
xor
sub
fildl
lcall
clc
xchg
into
xor
rcrl
adc
imul
sbb
outsb
dec
push
mov
jmp
adc
imul
mov
decl
in
mov
leave
std
pop
push
add
iret
push
test
xor
cs
test
js
mov
lret
aad
pop
adc
mov
mov
mov
sub
rcrb
int3
stc
mov
dec
data16
icebp
xchg
xchg
sbb
pop
clc
cmpsb
lods
int
sub
mov
mov
lahf
mov
jge
mov
cmc
daa
fyl2xp1
outsb
cld
push
dec
mov
bound
xchg
mov
outsl
aam
add
lahf
out
mov
adc
inc
shr
dec
dec
mov
cmp
test
pusha
adc
daa
cmpsl
iret
scas
sub
cwtl
and
mov
js
bnd
ljmp
jp
add
push
xor
dec
mov
push
sbb
mov
repnz
mov
rcr
popa
in
imulb
mov
ljmp
mov
push
cmp
inc
loopne
aaa
dec
adc
popa
push
inc
loopne
mov
roll
push
push
stos
fnstcw
mov
ds
repnz
inc
dec
nop
push
test
cmp
or
lea
fstl
add
stos
jg
clc
cmp
stos
arpl
cmp
int
jb
sbb
pop
cwtl
repnz
add
loop
and
jmp
jl
into
sub
add
test
inc
cmp
movsl
daa
pop
inc
in
jp
ror
cmp
loopne
cmp
and
jo
leave
in
pop
xor
mov
push
in
dec
and
call
cvtps2pi
jae
fidivs
or
cltd
cmp
adc
push
std
mov
jl
cmp
dec
mov
push
push
jge
dec
mov
repz
mov
rcr
in
divl
popl
in
iret
out
jae
mov
push
cmp
dec
loope
ss
adc
pusha
jne
inc
loope
mov
rolb
push
push
stos
mov
cmp
lds
inc
dec
xchg
push
test
cmp
or
mov
fcoml
jb
adc
dec
daa
add
add
jnp
or
cmp
aas
or
aad
sbb
leave
shlb
mov
add
add
cs
add
movsb
inc
inc
jnp
xor
add
add
scas
jne
push
pusha
ror
adc
add
add
popa
sub
sbb
pop
xor
pop
jo
add
add
add
sbb
add
cmp
add
add
adc
fldl
add
add
out
enter
add
xchg
mov
push
aas
add
add
outsl
adc
add
add
in
jb
xorl
add
pop
ss
mov
add
mov
sbb
adc
addl
out
test
pop
add
push
mov
push
xchg
out
add
cltd
loopne
mulb
out
popf
add
add
jmp
add
add
loopnew
maxps
add
add
cmp
les
push
scas
rolb
sbb
fwait
mov
add
imul
popf
jmp
add
insl
lret
add
xchg
testb
dec
sbb
sbb
dec
add
faddl
add
int3
add
jne
pop
push
mov
and
mov
jmp
adc
add
mov
inc
mov
pop
mov
xor
ficoms
or
lahf
and
pop
or
add
add
add
nop
add
add
push
dec
add
insb
sbb
inc
movsl
data16
jb
add
fiaddl
add
add
add
add
sub
add
lock
clc
push
shr
add
add
mov
add
add
or
add
add
mov
add
cmpsb
mov
add
add
pusha
inc
std
add
add
xchg
and
mov
pop
sub
add
add
add
icebp
sahf
push
add
add
jnp
jecxz
add
add
sbb
lahf
dec
add
add
sbb
add
xchg
sub
or
lahf
and
andb
add
pop
push
popl
add
add
cmp
xlat
dec
lret
add
add
enter
pop
jno
add
add
sbb
faddp
add
add
cmp
sbb
sbb
mov
add
add
add
mov
add
add
add
add
add
add
outsl
ret
add
add
shll
inc
add
add
mov
add
add
lea
add
dec
pop
xchg
add
add
lret
bound
add
add
rcrb
add
add
int
add
add
mov
inc
filds
add
add
mull
add
add
loopne
xor
add
add
lods
and
add
add
enter
add
add
sarl
push
pop
cmp
add
stos
add
add
add
xlat
xchg
xor
add
add
add
mov
add
add
fcoms
add
add
add
push
adcl
add
shrl
pop
xchg
inc
das
add
add
mov
add
shl
loopne
add
add
shll
or
lcall
add
mov
add
in
cmp
add
add
shl
nop
push
add
add
jb
fcmovu
add
add
sbb
add
add
add
add
add
repnz
push
add
add
sahf
aaa
fdiv
add
add
add
inc
add
add
add
add
add
add
add
push
add
rcrb
add
orb
add
cmpsl
mov
add
fisubl
inc
add
add
scas
sbb
add
add
add
mov
add
sbb
loope
add
add
fcomip
sahf
push
add
add
mov
add
add
sbb
add
fs
stos
jo
add
add
xchg
sub
push
adc
pop
add
add
push
add
add
cltd
add
mov
lods
pop
adc
inc
sub
add
js
add
popl
push
pop
rolb
fldcw
push
add
xor
sbb
sbb
jb
out
insl
dec
add
movb
lcall
jnp
dec
add
pop
add
inc
add
adc
addb
jns
add
or
daa
add
pop
or
adc
add
fstl
mov
add
jb
add
test
add
push
pop
inc
stc
add
ror
outsb
push
das
add
popa
add
aad
add
cmp
sbb
stos
add
push
add
or
push
fsubrl
out
mov
add
into
add
in
cmpsb
test
cli
sbb
cld
imul
enter
push
mov
add
add
add
repnz
or
xor
xor
add
inc
lret
jecxz
add
add
loopne
ljmp
sub
mov
or
rcll
mov
dec
cmp
mov
mov
mov
cmp
stos
adc
sub
push
mov
jecxz
mov
push
dec
add
mov
test
loope
xchg
outsl
imul
and
add
xlat
pop
inc
dec
pop
stos
icebp
cmp
adc
lahf
add
cmp
inc
xlat
shll
lds
cwtl
lret
lret
add
cs
dec
xchg
xchg
jecxz
adc
mov
pop
movl
lret
cs
pushf
xchg
pop
pop
mov
fwait
push
push
adc
jno
cmp
cwtl
pop
adc
imul
sbb
imul
add
pop
in
mov
push
arpl
fucom
mov
pusha
outsl
pop
xor
mov
pop
movsb
inc
inc
rcr
adc
push
jge
or
add
pop
push
call
add
push
addr16
out
push
cwtl
fildll
add
rclb
pop
daa
int
into
dec
or
mov
push
adc
mov
testb
iret
fistl
jne
xchg
sbb
pop
add
add
subl
mov
mov
lock
xchg
lds
add
pushf
cs
les
popa
cmpsl
in
fimuls
mov
and
mov
add
or
ja
dec
or
das
add
lret
cmpsb
cmp
std
xor
mov
ds
stos
lahf
dec
fadd
sbb
cltd
repz
add
sbbb
cmpsl
loope
dec
pop
add
out
addr16
jl
sti
adc
mov
add
scas
in
adc
push
or
inc
mov
add
popf
test
add
sbb
lea
jp
sbb
inc
mov
push
imul
dec
xchg
insl
hlt
test
add
xchg
inc
push
jo
and
xorb
push
mov
jp
cmp
in
push
pusha
stc
std
add
mov
or
insb
fisttpl
lock
test
push
mov
adc
mov
push
cmp
mov
mov
xchg
movsl
add
out
fwait
lret
sbb
std
sbb
pop
xchg
add
int3
add
mov
push
push
mov
inc
jge
sbb
push
jnp
push
jno
or
cli
lcall
add
fwait
sbb
int
cmp
das
lahf
mov
or
popl
mov
pushf
ljmp
push
inc
add
dec
hlt
xchg
stc
in
pop
add
cmpl
daa
pop
mov
adc
hlt
push
ficompl
sbb
push
dec
lahf
dec
cmp
movsl
lcall
xchg
dec
cmp
fsts
jle
add
adc
mov
imul
faddl
xlat
shlb
imul
add
test
mov
add
inc
cmp
incl
add
pop
fdivrp
daa
push
lcall
or
aam
add
popf
repnz
nop
sub
test
lcall
into
cmp
add
add
sbb
xor
mov
add
dec
jge
sub
push
cltd
add
js
rclb
cwtl
not
add
adc
push
mov
dec
outsl
mov
add
mov
pop
rcll
dec
dec
sbb
icebp
lods
or
add
pop
mov
push
inc
jo
mov
cmp
sahf
inc
fcmovb
sbb
icebp
xchg
mov
and
pop
orb
add
fists
enter
cli
scas
hlt
stc
adc
add
jns
adc
mov
out
sbb
lock
add
push
dec
insb
outsb
add
add
add
add
cmp
add
add
add
add
add
jl
add
mov
add
add
add
pusha
and
jbe
add
add
add
push
jnp
add
add
add
add
add
add
jmp
add
mov
add
lds
add
add
add
push
jno
adc
add
or
add
add
aas
add
add
and
or
mov
aam
add
test
add
add
add
add
add
loope
add
add
add
add
add
add
add
inc
cld
fwait
add
add
add
add
dec
add
add
add
xor
loope
mov
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aam
add
push
add
add
add
add
add
add
add
add
add
fiadds
add
roll
add
add
add
add
add
add
faddl
add
jg
add
dec
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
push
add
add
add
add
add
outsb
add
add
add
add
add
add
add
and
add
xchg
add
add
add
add
add
add
add
add
add
adc
add
imul
add
mov
add
add
add
pop
add
add
add
add
add
jnp
add
les
add
jns
add
or
add
xor
add
mov
add
in
add
add
add
add
add
aad
add
add
add
arpl
add
and
add
sub
add
jne
add
testb
add
add
add
add
add
add
add
add
loopne
add
inc
add
add
add
add
jb
add
add
mov
add
sub
add
jge
faddl
ja
enter
js
push
cmp
push
add
int
add
add
add
imul
add
out
ds
jl
jecxz
lret
sub
inc
btr
rclb
cmp
add
cmp
aad
inc
and
sub
iret
jo
out
inc
es
mov
ja
xor
test
fs
or
dec
pusha
push
or
cmp
inc
add
add
add
push
aad
xor
cmp
mov
cmp
jmp
sbb
fcmovnu
push
mov
push
jno
mov
push
jo
sub
lahf
hlt
jl
inc
sub
add
add
add
loopne
std
pop
jp
int
pop
fmuls
or
lods
xchg
fsubrs
add
mov
call
bound
jecxz
sbb
cmp
or
mov
add
add
add
sbbb
aad
jne
gs
adc
adc
lock
inc
int
movl
mov
imul
lods
lods
add
lds
mov
add
add
add
add
xchg
add
add
add
sbb
add
add
jge
add
add
int
cmc
scas
add
add
xchg
fadds
add
add
add
add
add
mov
add
add
add
cmpsl
add
mov
add
add
add
add
add
sub
add
add
add
xchg
std
add
loope
sub
jbe
cltd
push
xor
popa
add
addb
add
add
jmp
lahf
stos
add
add
dec
cmpsb
add
cmp
pushf
leave
add
divl
pop
add
sti
add
shlb
add
add
mov
add
add
add
add
add
push
mov
add
add
add
add
add
call
add
jmp
add
add
add
add
add
push
adc
add
mov
inc
add
cld
inc
add
add
add
sbb
inc
jmp
add
add
std
xchg
xor
add
int3
mov
add
add
mov
and
mov
jbe
add
icebp
add
test
add
jle
add
std
lods
add
mov
add
push
add
pop
iret
add
pusha
lahf
add
inc
clc
add
dec
add
adc
lret
add
jmp
add
mov
int3
popa
sbb
mov
mov
sbb
loope
sbb
lcall
add
mov
add
mov
add
in
ret
add
aam
add
mov
add
add
fiaddl
add
add
add
je
fwait
add
add
add
xchg
movl
fsubs
add
ss
add
adc
add
mov
jnp
or
ljmp
push
ret
scas
cmpsb
push
xor
sub
add
xor
add
push
add
add
dec
in
in
add
add
add
add
jnp
add
add
push
add
xchg
xchg
add
add
aaa
addb
fucomp
aad
add
add
add
add
add
add
add
add
iret
repnz
mov
add
pop
add
add
add
add
add
add
add
dec
dec
add
stos
data16
or
add
ret
add
push
add
int3
add
add
add
add
add
add
add
add
add
add
add
dec
jb
add
add
add
add
insb
loope
push
and
add
mov
movsl
add
add
add
add
add
sbb
mov
push
repz
dec
jmp
dec
iret
inc
clc
jp
imul
push
jmp
stos
sbb
push
mov
push
mov
cli
mov
out
lea
mov
test
mov
or
dec
into
inc
xor
xchg
mov
add
aad
mov
ret
insb
xchg
xchg
jg
test
lods
pop
lahf
cmp
enter
aam
fldcw
xchg
add
aas
adc
lods
inc
ja
lock
cld
loopne
mov
es
push
and
popfw
jle
xchg
sub
cli
xor
movsb
jne
dec
aaa
aaa
lock
push
mov
lret
mov
shlb
fcoms
xchg
pop
sbb
and
shl
mov
or
sub
loope
inc
cmp
std
lea
mov
push
repnz
jp
adc
sub
into
les
dec
rcl
add
mov
gs
cwtl
adc
sti
jnp
push
repz
call
test
ret
imul
mov
mov
jmp
xchg
fdivl
subl
or
inc
xor
jns
or
cli
lods
das
test
lods
sti
push
pop
ja
mov
sub
adc
out
add
andb
imul
sub
insb
sbb
in
enter
xchg
mov
and
pop
ret
push
test
bound
fcmove
dec
gs
adcl
frstor
jns
andl
mov
mov
and
ret
mov
insl
and
repz
mov
or
sub
loopne
inc
nop
cmp
cld
mov
popf
mov
add
lods
jnp
adc
sub
iret
push
sub
mov
lea
icebp
les
push
jle
leave
inc
cli
or
hlt
push
jmp
bound
test
lds
repz
push
mov
call
nop
fnsave
subb
push
dec
int3
and
outsl
inc
sub
loope
pop
cwtl
cmp
jp
shrl
not
scas
xchg
popf
insl
out
push
in
jle
cli
fisttpll
test
push
pushf
xor
xchg
ljmp
imul
cld
mov
jl
mov
or
mov
push
xchg
aas
fwait
iret
or
fidivl
popa
test
mov
test
xchg
test
dec
movsb
fmulp
and
push
mov
lock
jno
jp
pop
call
loop
add
or
bnd
adc
pop
mov
adc
insl
cs
mov
jge
xchg
sub
mov
push
inc
hlt
insl
add
clc
sub
xchg
push
ljmp
lret
popf
sbb
cs
scas
ljmp
movsb
ret
ljmp
pushf
jmp
cmpsb
mov
push
movsl
out
aam
push
jns
sbb
data16
adc
loopne
leave
inc
fildl
mov
xor
sti
jbe
push
es
test
mov
data16
add
fsub
pop
mov
push
cmp
outsb
jecxz
bound
xchg
cmp
push
fs
cmp
cmp
mov
and
or
jle
jg
in
ret
jle
arpl
cmpsb
or
out
xor
mov
pop
mov
icebp
hlt
xchg
push
ja
fcomp
in
add
sub
in
xor
mov
lsl
or
mov
mov
or
mov
cmp
lcall
jmp
push
std
std
sub
xchg
push
xchg
mov
jnp
lods
daa
cltd
sbb
nop
xor
lret
jle
std
sub
lds
out
fwait
icebp
xchg
push
adc
iret
mov
jl
lods
incb
lods
and
loop
rolb
jno
into
cmp
aaa
mov
dec
fsubs
outsb
dec
insl
jne
cmp
imul
mov
scas
sub
fsub
adc
cmp
loop
nop
popa
out
movsb
ja
mov
aaa
mov
pusha
mov
xor
and
ljmp
mov
repnz
mull
loopne
incl
jg
xchg
test
add
cmp
or
in
mov
xchg
push
jae
xor
mov
adc
fildl
es
pop
add
sbb
sub
aad
imul
js
or
nop
mov
pop
leave
gs
inc
repz
outsl
pusha
pop
xchg
cmpsb
push
es
sbb
iret
mov
mov
push
mov
mov
mov
and
aad
lcall
lods
mov
push
lods
decl
mov
and
imul
xor
ss
mov
rol
dec
imul
mov
bound
into
and
scas
or
inc
cmp
popl
sub
es
mov
mov
cmp
outsl
addr16
cmp
movsl
or
jmp
and
add
jae
jbe
loope
sarb
xor
idiv
test
sbb
ja
cmpsl
in
aas
xor
shlb
adc
push
lods
out
ret
cmp
mov
add
pop
cmpb
mov
add
pop
push
ds
mov
icebp
jecxz
add
stc
and
sbb
outsb
es
mov
sbb
scas
and
xchg
sub
les
lock
xlat
mov
xchg
in
lods
mov
aam
jg
dec
movsl
sarb
or
inc
cwtl
lret
ljmp
into
sbb
pop
adc
shrl
leave
outsl
pop
in
lcall
add
and
scas
pop
mov
mov
xchg
inc
mov
in
jmp
loopne
movsl
fs
insb
inc
mov
popa
mov
mov
and
cmpsl
fwait
xchg
cmp
repnz
jle
mov
mov
jne
push
fwait
xchg
xchg
lock
jno
cmpsl
jecxz
cmp
shlb
adc
lret
cmp
mov
sbb
fbld
pop
popf
mov
or
add
push
nop
rorb
aam
jg
or
into
in
orb
movsb
lcall
fcomip
cmpsl
add
fwait
fwait
imul
xchg
xor
sub
les
mov
push
movsl
jno
in
nop
in
lods
repnz
dec
stos
cld
xchg
lret
jle
or
outsb
out
adc
popa
or
mul
dec
iret
inc
rorl
mov
push
mov
loope
scas
pop
insb
xchg
sub
cmc
lret
arpl
pusha
loop
mov
lahf
mov
in
push
inc
mov
les
andb
sbb
and
xor
in
jmp
cmpsb
sbb
mov
loope
test
std
inc
mov
mov
repz
add
loope
sbb
repz
push
lea
ret
shrb
lret
mov
sbb
outsb
adc
cmpb
and
mov
adc
lea
xor
jae
pop
or
out
out
or
fsave
pop
xchg
in
adc
cmpsb
add
stc
ss
ret
mov
or
or
mov
popf
stc
cmp
adc
mov
push
or
inc
xor
sub
cs
in
popa
sub
sbb
mov
mov
mov
loopne
insl
push
bound
stc
hlt
mov
pop
cmp
adc
and
mov
mov
iret
stc
test
mov
inc
mov
adc
mov
xlat
pop
cmc
sub
loope
icebp
mov
pop
out
mov
sti
inc
imul
and
mov
daa
xchg
nop
mov
jmp
push
stos
lock
mov
stos
dec
and
iret
sbb
repnz
imul
fbstp
mov
xchg
xor
adcl
test
push
insb
adcl
in
jmp
xor
cltd
add
push
out
stos
pop
sub
stos
imul
hlt
jge
pop
outsl
push
jmp
adc
lods
js
jmp
pushf
cld
aas
dec
rclb
jae
loopne
xchg
loope
mov
push
push
mov
xchg
leave
mov
scas
das
das
das
push
pusha
call
sti
push
inc
rorl
lods
mov
iret
fsubr
and
push
outsl
lahf
sub
icebp
mov
pop
add
and
jbe
add
dec
and
xchg
inc
mov
call
cmpsb
sbb
jmp
mov
outsb
mov
mov
xor
clc
mov
daa
popa
add
push
loop
stc
inc
xorl
lock
xchg
testl
out
add
mov
add
sbb
adc
ds
mov
arpl
mov
and
sbb
mov
push
cmp
adcb
xchg
dec
inc
adcb
test
call
mov
pusha
xor
sbb
jno
fisubrs
or
cltd
cmp
inc
stos
leave
and
sbb
dec
cwtl
rcr
mov
repnz
popf
ret
stos
pop
je
dec
aad
nop
adc
in
or
rorl
sbb
pop
cs
out
push
push
gs
adc
sti
jno
pop
or
sbb
cmpsb
scas
invd
push
loopne
xchg
ret
cmp
xchg
pop
mov
inc
and
lds
sbb
fsub
dec
std
popa
insl
ret
test
or
sti
mov
insb
or
fmuls
dec
sbb
mov
jns
pusha
cmp
out
lods
fwait
idivb
add
jge
scas
jmp
xor
enter
and
and
movsb
scas
ja
xor
push
mov
pop
add
push
sbb
cltd
sarl
xchg
adc
loope
js
test
repz
adc
adc
push
cs
cmp
cmp
jae
ret
das
add
cmpsb
jae
fnsave
shrl
push
ja
mov
lock
cmc
icebp
mov
int3
adc
push
fmuls
test
and
aam
shll
insb
mov
int
and
les
mov
pop
and
pusha
push
and
cld
inc
enter
and
jne
insb
xchg
shlb
ret
jmp
mov
sahf
dec
push
sub
scas
pop
ljmp
mov
sub
dec
and
mov
xor
clc
lcall
in
icebp
imul
pop
or
cmp
and
pop
jne
lock
ljmp
sbb
insl
mov
cmp
pop
jge
out
push
sub
and
add
subb
jecxz
add
sub
imul
out
sbb
jmp
sub
push
jle
fldt
mov
sbb
sarb
adc
push
js
les
push
movsb
adc
jnp
sub
mov
xchg
ss
adc
jb
mov
mov
call
mov
cltd
cmp
inc
jno
sbb
mov
xchg
or
dec
into
xchg
imul
inc
xchg
mov
das
repnz
xor
stc
mov
cmp
stos
jne
jo
hlt
jle
pop
aaa
scas
sbb
fsts
out
xor
stos
jge
out
out
test
stos
or
aas
bound
xchg
mov
adc
pop
pop
repz
enter
cmpsb
jge
sub
insl
ja
imul
bound
mov
dec
fildll
cmp
popf
int
push
fisttpl
cmpsb
popf
cs
mov
jp
add
negl
sbb
int3
bnd
or
ja
fsts
add
add
mov
pop
xchg
repnz
jmp
in
xchg
call
push
sbb
cmpsb
jno
xchg
sub
jmp
jmp
sahf
mov
fiaddl
dec
imul
enter
mov
or
cwtl
dec
push
inc
jge
sbb
mov
notb
fwait
cmp
dec
push
mov
sbb
rcrb
fsubp
dec
inc
dec
insb
lods
outsb
lods
inc
sbb
mov
std
add
mov
jae
lcall
mov
movsl
mov
popf
mull
call
or
loope
inc
push
add
mulb
test
sub
arpl
leave
cmp
cmp
outsb
outsb
adc
adc
push
xchg
and
enter
ss
sub
push
pop
out
xchg
add
bound
and
pop
xchg
stos
adc
hlt
pop
or
mov
mov
pusha
fistpl
add
mov
adc
mov
aad
cld
enter
movsb
and
jae
jmp
and
inc
nop
xor
icebp
sbb
inc
fidivrs
cmpsb
push
sub
fsub
int3
pop
push
and
add
inc
lcall
adc
stc
mov
and
dec
push
mov
idivb
std
push
mov
dec
stos
je
mov
add
xor
cmpsl
sub
mov
fnsave
in
mov
inc
mov
or
xlat
repnz
or
add
pop
pop
add
pop
jge
pop
in
out
outsb
pop
cmp
mov
es
inc
int
iret
sub
ss
addr16
pop
cmp
mov
dec
push
ds
sbb
ds
in
add
div
ja
sbb
adc
popf
xchg
sub
addr16
mov
fwait
push
gs
sbb
cmp
call
nop
out
dec
movb
jno
aaa
xchg
sti
into
mov
popa
ret
je
or
mov
inc
mov
clc
sti
sbb
inc
lret
dec
nop
cmp
mov
adc
adc
aas
fidivs
mov
xor
or
pop
mov
ss
aas
imul
negl
movsl
insl
sahf
xchg
push
hlt
cmpsb
adc
sbb
cmpsl
sub
es
add
scas
psubusw
dec
push
sar
add
inc
push
or
lods
push
cli
std
and
or
xchg
in
add
xor
call
xchg
mov
fisubl
jae
addb
xchg
cmp
and
xor
or
sahf
in
add
call
out
dec
cltd
test
or
mov
cmp
xor
pop
dec
xchg
hlt
sbb
pop
cmpl
lret
mov
pop
dec
inc
hlt
addr16
cmpsb
mov
fldcw
lcall
gs
lds
pop
or
push
sbb
fnstsw
push
pop
mov
xor
xor
mov
adcl
cmp
ficoms
dec
outsb
insb
jbe
pusha
jne
and
es
xchg
pop
sti
mov
mov
dec
popf
pop
fsubrl
ljmp
hlt
or
jae
push
in
enter
jg
popf
mov
sub
cmp
pop
clc
adc
sub
scas
xchg
jl
add
jns
mov
or
mov
xor
pop
xor
inc
stos
test
inc
sub
mov
icebp
jg
insb
dec
add
ljmp
lds
fisttps
cmp
rcll
lret
stc
jmp
insl
cltd
or
enter
mov
movsb
mov
cli
outsl
in
popf
lret
fxch
out
dec
fisttps
outsl
add
movsb
cmpsl
cmpb
ret
pop
test
movsl
push
fstpl
jns
cmp
mov
mov
adc
pop
xor
leave
in
lock
push
jecxz
jb
jp
mov
mov
sub
sub
lods
adc
pusha
xchg
sbb
aaa
in
sub
push
test
or
sub
or
cs
repz
in
and
fldln2
inc
and
inc
fwait
cmc
testb
cmp
jp
into
addl
aaa
mov
inc
push
and
inc
and
xchg
mov
lcall
adc
xor
jecxz
jns
sbb
call
xchg
add
repz
or
sub
push
cwtl
icebp
push
pop
sbb
insb
cs
ret
test
es
dec
mov
cmp
in
rolb
sahf
ret
push
dec
push
stc
push
xor
mov
stc
enter
pop
mov
mov
mov
push
aaa
xor
sub
dec
daa
push
sub
xor
gs
xor
mov
iret
pop
nop
inc
scas
xchg
jp
outsl
jp
and
daa
repz
and
dec
xchg
mov
lea
mov
sub
add
outsl
and
lcall
jmp
adc
les
mov
aaa
xor
stos
adc
dec
xchg
addr16
mov
pop
pop
sub
push
pop
jl
xchg
pop
and
mov
adc
ret
xor
bound
mov
push
pop
lea
xchg
in
dec
cltd
mov
xor
mov
xchg
cmpsb
push
mov
push
inc
nop
int
xchg
movl
or
ds
fidivrl
das
js
shrl
mov
dec
xchg
in
mov
fdivr
jmp
stc
and
divb
cmpsb
fs
pop
jg
mov
movsl
mov
pop
mov
hlt
add
dec
psllw
push
outsb
lret
fldl
pop
lahf
mov
xor
mov
iret
adc
sbbl
out
outsl
sarl
fimuls
push
aad
repz
addr16
dec
lahf
in
fcoml
sub
dec
divl
stc
add
andb
sub
or
aaa
jne
sti
or
xchg
inc
jmp
sub
jb
or
test
and
ret
xchg
dec
dec
push
sti
mov
or
fwait
or
sbb
jo
fdivrp
loope
mov
sbb
js
or
jl
mov
mov
sub
add
mov
outsl
push
test
arpl
dec
push
movsb
lea
fstp
pop
test
stos
sbb
call
or
pop
fwait
movsb
lods
mov
outsb
pop
stc
test
jecxz
jns
mov
stos
pop
lahf
push
cmp
mov
mov
into
pop
sub
mov
aam
fimull
adc
repnz
xchg
inc
jno
pop
mov
sbb
testl
mov
mov
adc
mov
and
jmp
loop
push
in
sub
lret
iret
ja
adc
mov
xchg
cmp
or
nop
sbb
lcall
dec
and
es
xor
aam
lds
movsb
pop
adc
fsubl
xorb
mul
jg
cmp
arpl
pop
push
out
mov
push
cmp
mov
add
in
mov
out
addps
lods
dec
adc
arpl
push
dec
push
mov
push
jge
mov
sti
int
fldcw
xor
mov
push
shlb
pop
cmp
and
clc
shll
outsb
ret
inc
jge
inc
in
bound
fs
mov
imul
idivl
adc
pop
sub
xchg
shrb
pop
scas
dec
in
cmpsl
pusha
mov
fld
lea
ja
int
das
ret
dec
push
fisubs
enter
loop
stos
sbb
mov
rclb
adc
arpl
or
add
rorl
jp
popf
faddl
ds
stos
push
xlat
adc
mov
dec
pop
push
gs
cmpsl
clc
sbb
xchg
add
jmp
push
sub
cmp
lahf
cmpsb
or
or
push
movsl
sub
pop
inc
andl
rcll
mov
and
fwait
sbb
xchg
sub
sbb
push
inc
iret
inc
pop
xchg
mov
into
js
or
pop
lods
into
jno
fwait
xor
sahf
dec
jmp
fisttps
mov
insb
in
or
pop
xor
insb
dec
mov
jmp
or
stos
push
dec
sub
cmp
xor
mov
sbb
pop
mov
cmp
dec
xor
movsl
cltd
loop
add
or
notl
pop
jae
xchg
and
xchg
adc
leave
jp
pop
or
rclb
nop
mov
adc
outsb
inc
aad
push
daa
fnstcw
scas
sarl
cli
push
cmp
or
jp
js
std
xor
sbb
mov
inc
loopne
ds
inc
sub
sbb
pop
icebp
mov
dec
incb
scas
sbb
notb
xchg
insl
cmp
pop
cltd
fwait
dec
les
cmp
addr16
inc
mov
adc
pop
mov
mov
push
sub
mov
dec
push
sub
adcl
sbb
push
jge
or
push
push
iret
jno
or
mov
push
add
adc
push
in
fcmove
mov
or
mov
jo
outsb
imul
andl
gs
mov
push
rcl
daa
ds
cmpsb
xor
adc
adc
int
cmc
fs
das
clc
push
and
mov
or
jnp
mov
roll
ds
into
sbb
cmp
xchg
addr16
mov
push
int
add
mov
jo
sub
imul
adc
dec
push
aad
insb
cmpl
mov
sbb
std
cmp
movsb
inc
cltd
lea
and
xor
sub
sahf
adc
int
insb
mov
inc
xor
mov
sub
imul
mov
xchg
lcall
cmc
or
add
popa
and
mov
stos
jnp
lods
pop
fstl
or
xchg
xchg
or
push
mov
dec
pop
imul
xchg
loope
push
fcmovnu
stc
adc
xlat
sarb
arpl
addr16
push
cmc
sahf
mov
push
or
lcall
lods
nop
jp
shll
pop
lret
dec
push
jmp
rcl
lcall
movd
push
jp
inc
out
std
notl
jnp
cmp
sub
pop
flds
repz
es
push
rcrl
xchg
int3
lds
add
pop
adc
sbb
out
cltd
mov
out
inc
adc
dec
cli
loope
pop
outsb
push
pop
ret
pop
mov
ds
test
adc
inc
pop
xchg
ja
push
jle
or
stos
mov
js
fsubr
ret
ja
mov
fcom
cmc
push
cmp
adc
mov
cmpsl
mov
decb
add
testb
mov
cmpl
loop
out
inc
daa
mov
mov
inc
push
shrb
adcb
push
lret
scas
and
push
insl
push
sub
push
test
and
xchg
stos
jle
mov
notb
and
ss
je
cltd
test
scas
mov
ss
add
dec
sbb
fnstenv
sbb
jmp
inc
dec
sbb
rcll
outsl
add
cs
xor
xabort
aam
dec
push
mov
add
xchg
xchg
add
