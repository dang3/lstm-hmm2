sbb
add
adc
test
arpl
or
xchg
dec
in
mov
int3
mov
mov
aaa
push
repnz
adc
cltd
xlat
sti
sbb
jne
jno
fdivl
sub
cmp
clc
les
shlb
cmp
sub
movsb
inc
xchg
cs
xor
repnz
fcoml
loopne
inc
adc
mov
push
hlt
mov
adc
inc
mov
incl
insl
push
imul
mov
mov
jo
popa
in
mov
and
or
test
adc
lfs
mov
dec
inc
into
sahf
and
jbe
lahf
push
lret
call
pop
push
andl
add
and
and
pop
cmp
xchg
push
int
mov
mov
lahf
jns
add
xor
add
mov
cmpsb
outsl
or
icebp
ljmp
and
cmpsl
sub
dec
loope
stos
pop
lods
pusha
in
and
ret
es
stos
cmpsb
icebp
mov
cs
or
mov
shlb
aam
xchg
test
push
lahf
cli
xchg
test
sbb
jb
inc
sbb
js
sbb
and
and
cmp
shl
fmull
mov
add
cmc
pop
cmpsb
jg
dec
xor
mov
adcl
icebp
adc
push
lods
jp
ja
mov
jle
cmc
jb
add
pop
mov
ja
iret
xor
jg
xor
gs
inc
rclb
mov
xor
mov
push
jg
hlt
sbb
pop
mov
adc
jl
dec
les
testb
fsubr
aam
jne
push
xchg
push
inc
and
dec
pop
and
xor
outsl
ret
mov
mov
xchg
pop
sahf
fwait
popa
mov
mov
cmc
push
xor
mov
inc
loop
pusha
ds
dec
stc
int3
inc
sbb
js
adcl
fildl
xor
mov
jne
mov
jo
jb
gs
push
push
mov
in
sbb
dec
push
int
loopne
andb
xchg
xchg
divl
adc
cmc
ret
jg
cmp
fadd
sub
mov
shl
mov
pop
mov
aaa
or
cmp
fimuls
mov
test
mov
int3
mov
xchg
adc
into
sub
lret
lea
xchg
lds
sbb
sarl
add
incl
out
mov
inc
push
inc
mov
xchg
xchg
popl
mov
in
adc
or
jno
xchg
pop
pusha
es
xor
jl
mov
enter
xchg
popf
lahf
jp,pn
out
xor
shlb
iret
sub
sub
xor
cwtl
outsl
out
arpl
sbbb
add
pop
test
out
scas
sub
dec
dec
ljmp
fs
outsl
andl
nop
mov
xor
sub
push
mov
fbld
sub
adc
lcall
sti
xor
jns
inc
movsl
jle
pop
lret
into
in
aas
jae
xor
jae
sub
loop
jno
xchg
mov
mov
pop
mov
xchg
pusha
fstps
lods
outsb
sbb
je
imul
test
xchg
sahf
mov
ret
into
push
std
add
lret
arpl
aad
cwtl
imulb
es
ja
cld
cli
pushf
pop
movl
xor
add
jg
pop
ror
int3
movsb
mov
in
mov
fdiv
add
imul
stc
ja
jne
jae
jg
jb
mov
leave
clc
testb
and
inc
adc
je
push
mov
cmpsb
or
movsl
scas
jl
sub
movsb
mov
sub
jns
loop
xchg
jecxz
dec
imul
jg
mov
out
add
inc
push
cmpsb
adc
sbb
rcrl
cmp
or
out
add
push
dec
ja
fwait
cmp
ds
fdivr
fisubl
or
ret
sub
jne
jno
imul
dec
inc
add
push
mov
insb
testb
xchg
inc
into
outsl
ret
stos
ja
aam
lods
add
push
loope
mov
je
aaa
leave
cmp
lahf
xlat
sti
out
ficompl
stc
xchg
and
push
mov
in
push
enter
mov
stos
inc
dec
insb
jle
outsb
dec
add
shr
or
jne
rclb
mov
jecxz
in
push
or
aad
scas
mov
jge
bound
or
fwait
cmp
stos
lods
xlat
bound
lock
mov
mov
test
pushf
xor
dec
push
lods
jge
out
idivb
popf
push
lret
test
inc
outsb
cmc
addb
mov
jp
fimull
sahf
sub
sarb
push
cmp
insb
int3
cs
lahf
test
test
lcall
adc
sbb
pop
sahf
inc
daa
ljmp
aad
cli
js
xchg
mov
sub
or
cli
ret
cmp
mov
mov
cmpsb
arpl
int
mov
dec
mov
into
or
sub
mov
ret
scas
adc
xor
cmp
cld
cmc
clc
lret
arpl
sbb
bound
cmpb
sarb
aam
mov
jno
fistps
add
sar
shl
pop
lock
popf
test
hlt
ds
cli
cltd
aaa
insl
mov
xor
int3
lahf
pop
repnz
daa
jle
scas
mov
add
or
push
jecxz
xchg
sahf
sub
enter
lock
das
cmpl
out
cld
xchg
dec
xor
inc
repnz
addr16
mov
sbb
popa
mov
aaa
sub
inc
lock
xchg
sbb
jp
lods
ret
sarl
jmp
mov
popa
push
cmpsb
push
mov
mov
push
insb
cmpsl
ret
or
jb
je
ficomps
mov
jl
iret
cmp
lahf
pop
cli
fisubrs
cltd
rcrl
pop
push
andb
addr16
pop
repnz
sbb
leave
xchg
push
mov
adc
cli
pop
pushf
push
pop
cwtl
scas
daa
xchg
daa
cmp
cs
sbb
int
cwtl
push
dec
negb
aaa
inc
les
adc
xchg
sarl
aam
pop
add
xor
adc
sub
ret
inc
jbe
pop
mov
lcall
lods
mov
xchg
sbb
inc
lret
jl
pusha
dec
pop
push
sub
insl
ret
mov
cwtl
mov
cmc
pop
ficomps
dec
js
bound
in
sub
cmp
xchg
repnz
mov
int
aam
mov
loope
cmc
push
pop
push
mov
test
int3
fsts
jp
inc
cmp
pop
jecxz
dec
mov
xor
lcall
cmp
aam
leave
jns
stos
xor
mov
aaa
adc
sub
leave
ljmp
cltd
jmp
push
push
fisttpl
lea
xor
shl
inc
dec
stos
mov
test
push
ljmp
mov
ljmp
mov
repnz
xlat
lahf
jne
mov
gs
inc
push
jge
ljmp
lahf
push
xchg
cmp
pop
lock
mov
pop
push
mov
in
sbb
pop
jecxz
pop
es
ss
xchg
daa
add
pop
popf
lcall
jns
dec
xor
xor
repnz
push
ja
subb
bound
jmp
jnp
les
sbb
or
pusha
fucomip
addr16
mov
fistps
sbb
jge
mov
insl
push
mov
dec
sub
xchg
ret
sbb
jns
data16
ret
ljmp
and
fists
outsl
cmpsl
stos
lahf
mov
mov
iret
push
sbb
add
xchg
and
and
fwait
in
mov
repz
jle
mov
dec
inc
je
cltd
fs
push
mov
notb
add
jp
sub
adc
repnz
ja
cld
stos
jmp
fmulp
sub
lahf
sub
insl
adc
rol
pop
outsb
sti
ffreep
and
mov
sbb
mov
stos
aas
sub
mov
xchg
jle
out
scas
fst
inc
xor
pop
incb
int3
ljmp
mov
and
sub
sub
ljmp
or
pop
aaa
stos
fs
and
jg
or
stos
movsl
adc
outsl
jmp
ja
imul
jp
popa
pop
and
and
adc
add
xorb
fidivs
in
outsl
cli
lcall
inc
pushf
or
insb
das
sbb
inc
imul
es
stos
push
sub
fcompl
jmp
imul
pop
pop
jecxz
rcrl
add
imul
mov
sub
out
mov
je
popf
jae
push
cli
orb
loop
sahf
out
cs
lock
mov
repnz
addb
sbb
mov
pop
ss
movsl
push
inc
or
lret
popf
nop
aam
js
js
inc
push
stos
cld
push
mov
call
lds
mov
outsb
jae
inc
int
or
push
lock
mov
push
xchg
push
int3
mov
imul
js
adc
ds
mov
xchg
cmova
popf
sbb
repnz
dec
shll
and
cmpsl
cmp
test
gs
clc
leave
shrl
cld
jno
dec
cmp
or
sti
xchg
and
loope
icebp
or
cmpb
sub
or
cmpsl
mov
fwait
lea
push
or
xchg
aaa
loopne
les
mov
ss
add
push
out
pop
mov
daa
cmp
ss
test
push
scas
push
pop
push
jnp
mov
sub
ja
sbb
mov
sub
pop
js
andl
jmp
ljmp
sbb
cmp
pop
inc
stc
nop
xchg
sub
enter
sbb
mov
aad
fdivs
or
jp
dec
std
shlb
xchg
stos
pop
shl
test
les
adc
inc
xor
adc
imul
cmp
mov
rorl
insl
pop
mov
push
pop
cmpsb
and
aam
je
xchg
sub
inc
jo
je
or
xor
and
arpl
rcrb
ljmp
add
stc
dec
jg
fisubs
sbb
cmc
fadds
or
xor
or
lock
xor
repnz
sbb
xor
mov
sbb
push
add
jle
inc
sub
mov
xor
jmp
dec
xorb
dec
ret
fisubl
push
xchg
test
into
xchg
pop
int
pop
sbb
out
jns
xchg
push
push
xor
pop
adc
adc
fcomps
rcrl
cmp
pop
mov
fdivl
subb
or
jl
dec
dec
jo
ljmp
and
lea
mov
mov
aam
std
hlt
aad
dec
dec
rcr
or
inc
outsb
icebp
test
adc
ja
mov
loopne
adc
insb
sub
call
cmp
lcall
and
rorb
aam
out
shll
xor
xor
add
addr16
mov
xor
leave
xchg
mov
jae
push
xchg
jle
outsl
dec
dec
js
xor
cmp
xor
sti
dec
fisubrs
test
mov
jl
test
and
jl
adc
lret
push
popf
add
xlat
scas
cltd
shll
push
je
fidivrl
jne
aad
repnz
xor
mov
lahf
into
lret
sbb
jae
mov
add
jecxz
push
dec
loope
sub
mov
rclb
stc
mov
aam
mov
fbld
mov
dec
jmp
xchg
imul
stos
and
fucomp
add
pop
dec
aam
sub
and
jns
or
adc
cmpsb
ficompl
and
jns
pop
dec
xor
sbb
sbb
movsb
mov
andl
cmp
outsl
scas
lock
cli
sbb
in
fldl
stc
pop
xchg
or
ja
aas
lahf
push
jbe
mov
inc
inc
adc
cmp
subl
test
fwait
jge
stos
sbb
dec
pop
aas
ffree
jno
push
push
int
add
ja
inc
rcrb
in
jg
aas
popl
sti
xchg
outsl
pop
fs
ret
xchg
cmp
jae
or
push
pop
mov
shrl
pop
jae
rolb
leave
adc
cs
xor
pop
mov
in
mov
pop
lret
xchg
orl
nop
mov
movsl
loopne
and
daa
mov
shlb
sub
cmpsb
mov
jge
push
dec
xchg
test
cmp
mov
xor
loopne
cld
sbb
in
pop
xchg
mov
sbb
cmp
or
mov
xor
or
cmp
imul
in
dec
imul
xchg
push
adc
cmc
iret
xlat
je
sbbb
lea
lahf
aaa
dec
les
cmpsb
clc
inc
fildl
jns
imul
mov
cli
shlb
cmp
sub
jmp
imull
test
push
mov
stc
movsl
mov
mov
xor
mov
xchg
out
pushf
fcmovb
ljmp
cmp
jecxz
mov
sbb
outsl
test
xchg
sub
cwtl
cmp
add
or
pop
lea
xchg
in
jno
push
stos
fcoms
popa
leave
jb
cmc
scas
mov
mov
rcrl
inc
push
and
adc
lcall
mov
in
sub
shrl
cltd
sub
add
xor
and
push
push
popf
stos
cmp
loopne
or
shll
icebp
lock
add
dec
sub
mov
cmpsl
cmc
cwtl
inc
cmp
xor
dec
jns
ss
dec
cmp
dec
fwait
gs
dec
push
adc
pusha
out
pop
test
jge
stc
or
nop
cmp
jmp
add
cmp
insb
xchg
js
pop
jg
push
mov
movsb
lock
in
push
lahf
cmpsl
mov
push
loop
insl
loopne
adc
xchg
pop
mov
add
mov
in
mov
popf
movsl
xchg
outsb
mov
shrl
aam
lock
cli
mov
push
add
dec
and
jns
test
into
out
rcll
cmp
jns
mov
in
icebp
pop
imul
ljmp
jp
lock
ret
sub
dec
imul
and
insl
stos
jmp
push
inc
and
cmp
mov
int3
jo
jae
sbb
aad
cli
xchg
inc
jge
std
push
or
mov
rorb
movl
mov
cld
jo
cs
test
sbb
cmp
scas
ljmp
movsl
dec
xchg
xchg
and
gs
int3
ret
adc
sarl
pop
mov
ss
pop
andb
test
inc
pop
nop
loopne
hlt
pusha
or
pop
add
mov
or
mov
jb
cs
xor
lcall
mov
pop
xor
jb
mov
sbb
ret
xor
inc
std
sbb
shll
jmp
mov
sbb
mov
in
mov
mov
out
add
movsl
xor
das
xchg
popa
xchg
cmp
shlb
enter
ja
cwtl
jg
xor
xchg
je
or
push
nop
in
jp
pop
stos
in
bound
mov
and
mov
cltd
lds
jp
mov
imul
jle
data16
lret
test
fldcw
jne
imul
jne
jge
fstl
add
cwtl
loope
cmp
lock
pop
js
sub
cmpl
lds
shrl
repnz
mov
cmpsb
xchg
adc
mov
out
mov
test
xchg
test
push
xchg
lret
mov
out
jmp
cwtl
adc
lret
int
lret
mov
jae
jmp
mov
pop
jnp
movsl
test
mov
add
mov
jp
cmp
pop
dec
add
into
imul
mov
fwait
sub
call
enter
adc
xchg
push
or
fmuls
rcrl
pop
addr16
add
xchg
or
fisttpl
mov
shll
xor
adc
xchg
lods
push
mov
roll
mov
xor
inc
cmp
jge
xchg
jno
lods
dec
fwait
mov
inc
test
outsl
in
xchg
mov
hlt
fimuls
divb
push
cmpsb
cld
scas
inc
xor
push
mov
cmp
or
push
div
pusha
inc
ret
adc
loopne
and
adc
lcall
sahf
xchg
jp
adc
inc
dec
cmp
fdivrl
mov
pop
sbb
xchg
icebp
shll
inc
xchg
cmpsl
mov
mov
cmp
push
push
repz
lea
hlt
test
jns
pop
pop
jmp
mov
lret
rcrb
xor
stos
aas
aas
fdivr
adc
adcb
loopne
or
add
bound
arpl
adc
out
andl
arpl
outsb
and
mov
pop
test
stos
or
push
push
sub
loope
fistpll
insl
or
pop
movsl
aam
dec
subl
xor
cmp
jnp
mov
xchg
bound
out
mov
jg
xor
inc
adc
ja
push
mov
imul
jne
cli
pop
mov
cmpl
pop
add
adc
push
sub
mov
insb
int3
decb
push
push
leave
sbb
lret
push
dec
jmp
pop
iret
mov
fisubl
lea
hlt
adc
pop
orb
pop
xchg
push
adc
bound
adc
or
xor
movsl
mov
es
cld
add
sbb
ljmp
mov
pop
cltd
invd
popf
add
pop
xchg
xor
jns
pop
xchg
sbb
sub
sbb
lods
jl
jmp
inc
add
dec
adc
sti
lock
call
out
mov
jle
mov
subl
lock
std
add
cmp
jecxz
in
push
test
mov
lock
lcall
enter
sbb
clc
mov
in
inc
adc
leave
sbb
aaa
xor
cmp
ljmp
pop
ja
or
insb
and
dec
int3
or
or
icebp
jbe
sub
call
sub
inc
popf
fildl
ror
fcompl
xor
aam
sbb
sub
push
call
loope
push
mov
pop
ret
loopne
push
adc
out
out
fnstcw
adc
fs
sub
out
adc
mov
pop
iret
jne,pt
iret
cld
pushf
lods
imul
mov
mov
jns
movsb
push
add
rcrl
pop
or
or
sbb
cmp
scas
inc
mov
add
into
lock
mov
xor
dec
push
fldcw
xchg
iret
cmpsb
push
xchg
hlt
out
fcompl
setae
lods
bound
dec
test
out
push
jmp
ja
test
mov
sub
jge
outsb
and
sbb
dec
or
lahf
cmp
pop
and
outsb
add
cmpsl
aas
sbb
loope
movsl
xlat
call
and
pop
mov
jmp
inc
enter
pop
xchg
icebp
cs
push
lret
push
xchg
into
call
sub
mov
cltd
in
adc
push
and
rorb
jecxz
sbb
ds
push
or
xchg
xchg
jbe
shlb
negl
into
pushf
mov
or
xlat
pop
movb
add
add
popa
and
addl
mov
push
aaa
xor
mov
sahf
out
dec
jg
pop
mov
arpl
mov
mov
rolb
mov
mov
in
or
pop
inc
cmp
mov
jo
pop
push
adc
mov
pop
lock
repz
leave
lods
les
fisttpll
rep
rorl
xchg
jmp
mov
xchg
loopne
dec
xchg
stos
std
mov
fs
sar
dec
pop
int3
in
pusha
jmp
stos
cmp
rolb
cs
xchg
xchg
mov
fldt
cwtl
js
push
pop
jb
cli
xchg
mov
inc
outsl
mov
aas
cmp
adc
or
inc
es
mov
sub
sbb
push
jg
dec
loope
jp
mull
test
xchg
insb
cmc
xchg
rcr
mov
cmpsl
stos
loope
pop
cwtl
out
mov
out
cmc
mov
add
stos
movsl
adc
jo
dec
test
xchg
fs
cmpsl
mov
adc
out
mov
add
into
ret
mov
mov
imul
insl
cmp
add
fs
jns
cmp
adc
lcall
mov
popa
inc
sbb
jo
xor
jle
movsb
fcmovu
in
mov
jp
jmp
enter
jo
pop
lahf
xchg
fsubs
push
pop
pop
jne
fs
cwtl
aam
pop
jnp
push
cs
leave
inc
insl
or
sub
add
push
iret
pop
fwait
test
cmp
pop
xchg
paddq
dec
mov
dec
and
mov
xor
into
mov
js
sbb
xchg
xchg
jecxz
jecxz
ffreep
lock
cmp
sbbl
xchg
xor
out
sub
jns
and
loope
mov
fisttpl
icebp
adc
loopne
and
lret
push
mov
mov
xor
xchg
or
js
loope
push
push
mov
adc
jne
out
insl
xchg
test
xor
and
scas
fimuls
sub
popa
call
int3
pop
mov
xchg
test
push
insl
cs
movb
movsl
aad
sub
cmp
js
sarb
mov
imull
push
cltd
mov
scas
xchg
dec
mov
shrb
jle
pop
sub
pop
add
jo
sbb
xor
aad
cmpl
fbstp
bound
sahf
movsb
dec
mov
movsl
insb
add
add
sub
ja
pop
movsb
cwtl
aam
jb
emms
sbb
xor
jae
mov
imul
mov
inc
mov
ror
pop
jmp
imul
sbb
jp
mov
mov
in
mov
sub
mov
dec
into
mov
mov
mov
mov
js
jb
in
jne
cmpsb
push
jge
fwait
insl
sbb
test
lret
mov
lods
add
negl
add
clc
out
jns
hlt
sbb
in
popf
daa
notl
mov
sbb
jne
out
daa
mov
push
mov
mov
test
cmpsl
cmp
leave
pop
insl
add
add
cmp
mov
dec
in
daa
add
fs
into
js
adc
sub
pusha
xchg
and
mov
rcll
je
jnp
dec
xchg
rcrl
sbb
push
mov
into
inc
push
lret
fiadds
mov
vorps
mov
mov
or
xchg
fimull
out
rclb
ret
ljmp
mov
mov
add
push
cltd
stc
sbb
daa
repz
push
sbb
push
lods
xor
jge
je
les
jnp
jae
mov
mov
popa
pop
and
cs
pop
ss
mov
pop
inc
aaa
cmp
pushf
add
adc
sub
aam
ret
push
sahf
mov
and
outsl
lret
ret
es
imul
jo
ljmp
push
out
popa
fcmovu
sbb
xchg
xchg
fcomp
adc
sti
dec
mov
sahf
pop
add
sub
jne
pop
pop
daa
push
pop
add
push
sbb
movsb
xor
mov
mov
fs
mov
push
cmp
mov
add
adc
fdivrs
and
pop
mov
mov
cmp
mov
push
js
xor
cwtl
pushf
hlt
cltd
fmuls
in
dec
pop
dec
push
or
sbb
xor
jp
test
subl
xor
cmp
dec
adc
add
or
lcall
mov
out
test
test
iret
jns
clc
jnp
cmpsl
sti
pop
and
cmp
xor
sarl
pop
rorb
gs
jg
xor
and
aad
add
icebp
inc
stc
sbb
pop
fsubrl
sub
cwtl
adc
sbb
or
mov
test
ficoms
adc
std
jge
fistpl
or
mull
dec
popf
lds
push
jbe
pcmpgtd
insl
lods
pop
das
in
xor
mov
jbe
lret
in
push
andl
movsl
push
pop
mov
push
mov
bound
push
iret
cmp
fnstsw
cmp
lods
ja
fistpl
stc
jp
dec
vpaddusw
jp
sbb
pop
push
int3
adc
xor
data16
movsl
jecxz
xchg
mov
adc
add
inc
shrl
in
ficoms
std
inc
aas
jns
push
das
jmp
cmpl
bound
imul
addb
stos
adc
js
or
add
adcl
inc
jnp
xlat
xchg
dec
jb
sub
or
in
orl
add
add
mov
and
daa
repz
add
push
cs
pop
aas
mov
movsl
and
push
sbb
dec
add
lcall
insb
leave
ficoms
test
mov
sub
in
or
or
into
mov
aas
or
testb
push
push
mov
fisttpll
data16
mov
cmp
fimull
xor
stc
jecxz
cmpsb
mov
popf
push
cs
mov
es
and
popa
in
push
fstl
xor
dec
fldenv
mov
and
inc
add
in
bound
pop
data16
mov
cmp
repz
in
xor
repnz
push
xor
push
xor
adc
iret
imul
js
stc
xchg
gs
sbb
jbe
ljmp
je
loopne
inc
aam
cmp
and
or
mov
rep
iret
dec
bound
hlt
pusha
mov
jmp
das
sbb
movb
mov
out
iret
mov
icebp
repz
pushf
xchg
cmp
int
mov
jno
mov
call
cmp
popl
sti
insl
or
cld
pusha
pushf
mov
test
aad
loopne
or
xor
inc
push
xchg
cld
sbb
xchg
cmpsl
pusha
lea
jecxz
rorb
pop
bnd
xchg
add
lock
sbb
xchg
mov
in
lret
inc
addb
push
ret
js
fistpl
clc
inc
sbb
push
mov
lock
clc
cmpsl
clc
subb
xorb
cmp
sahf
loopne,pn
ss
xchg
lahf
arpl
jb
sbb
push
leave
push
add
jl
pop
cmc
fsubr
fs
cmp
clc
xor
shl
lret
ret
sub
adc
and
pop
pushf
mov
pop
into
pushf
enter
push
in
jb
cmp
in
or
xor
inc
adc
push
je
test
insb
and
les
mov
adc
add
ja
mov
mov
test
aas
out
sub
inc
jg
sbb
lcall
addr16
lea
push
repnz
mov
aad
dec
cmc
pusha
or
mov
cmp
icebp
push
jmp
jnp
jecxz
js
daa
cmp
inc
xlat
lock
test
loop
iret
and
sahf
jb
mov
lods
mov
sbb
test
mov
sbb
push
das
dec
imul
fcmovu
sub
pop
xlat
dec
push
dec
push
cmp
leave
clc
in
pop
mov
inc
mov
out
push
scas
sub
mov
shrl
es
add
incl
cld
icebp
inc
cmp
insb
cmp
cmpsl
mov
popl
scas
mov
test
insl
pop
push
enter
rorl
aam
mov
pop
adc
add
pop
aad
jp
outsl
loop
test
inc
sbb
pop
out
insb
shrb
outsl
les
addb
sub
and
sbb
dec
cmp
mov
movsl
jmp
test
lods
sbb
sub
mov
sarb
lods
in
and
clc
cwtl
add
icebp
or
sbb
je
jg
lock
add
out
movsb
inc
pop
dec
je
or
sahf
pop
jae
mov
inc
mov
jle
pop
mov
push
outsb
or
xchg
lret
clc
in
push
sub
jmp
fwait
cmc
es
cld
and
iret
arpl
movsl
popa
aad
cmp
leave
mov
fisubrs
push
mov
jecxz
sahf
push
movsl
outsb
cmovl
add
addb
test
pop
xchg
lahf
inc
les
mov
ss
jle
shlb
xor
mov
adc
add
push
xor
int
pop
lods
xor
mov
xor
push
xor
add
mov
in
sub
and
loop
mov
imul
mov
mov
push
push
mov
mov
push
mov
loop
or
and
into
fwait
outsl
mov
and
push
int3
inc
test
test
mov
cmp
push
mov
fdiv
popa
sbb
or
sbb
test
scas
sbb
dec
push
cmpsl
mov
cmc
mov
mov
dec
adc
mov
xchg
cwtl
xlat
das
and
jmp
bound
inc
sarb
or
push
imulb
push
dec
imul
ljmp
sti
mov
xlat
mov
clc
xor
mov
leave
mov
popf
roll
scas
sbbl
insb
js
test
test
scas
sbb
loope
rcll
and
fdivs
es
push
filds
mov
lds
ss
daa
subl
dec
ljmp
fs
dec
cmp
loopne
jmp
lret
adc
ret
dec
and
and
xor
fisubrl
test
xor
pop
pop
push
shlb
mov
js
push
dec
jbe
mov
sti
aaa
add
out
jns
jle
adc
imul
sub
and
clc
test
sti
jle
jmp
dec
xchg
xor
and
js
sti
cmpl
add
ljmp
push
loope
scas
add
push
shr
jns
int
pop
xchg
loopne
shrb
dec
add
sub
outsl
sub
aaa
sbb
insb
push
sub
call
xor
int3
sbb
les
lahf
sbb
cmc
stc
jge
sub
cs
test
cltd
lea
sub
inc
cmp
fisubs
ds
scas
in
cmp
pop
bswap
pusha
iret
push
rcrb
xchg
out
inc
int3
push
pop
and
leave
insl
inc
int3
loope
mov
sti
call
xorb
adc
out
imul
mov
adc
xor
pushf
add
dec
pop
jmp
rcrl
adc
mov
testl
mov
insl
pusha
xor
cld
pop
adc
pop
ds
mov
inc
mov
mov
mov
mov
sub
stos
into
rorl
lret
sub
repz
mov
insb
dec
in
jo
jno
lock
cmp
movsb
and
cmpsl
inc
push
js
popf
popa
andl
pop
and
xor
std
aad
mov
sti
ja
test
sbb
ret
shl
mov
repnz
loopne
push
pop
cld
in
shr
test
aad
or
popf
lcall
gs
jno
loop
jae
outsl
push
dec
inc
push
cmp
pop
jp
imul
js
fbld
scas
xchg
das
imul
jb
loop
sti
pop
in
inc
cs
cmp
lret
mov
and
out
pop
add
scas
outsl
sbb
lods
test
js
fdiv
sbb
outsb
cmp
mov
adc
fdivs
inc
mov
cmp
fsubrs
pop
ret
cmp
rcll
andl
sbb
dec
fcmovnb
jnp
pop
push
out
stc
xchg
insl
push
popf
gs
in
repz
stos
mov
or
pop
sarb
mov
or
sub
pop
test
inc
sbb
daa
sbb
pop
ds
cmp
lods
repz
mov
xchg
ret
cs
ret
push
xor
adc
nop
ret
xlat
fists
lret
ret
out
xchg
or
mov
jmp
push
dec
mov
inc
pop
mov
push
sbb
sbb
cmc
push
cltd
ja
iret
cmpsl
mov
rcr
aad
lods
int3
lds
in
cltd
pop
loop
push
imul
std
arpl
inc
inc
cmp
lcall
clc
mov
cmpsb
call
fnstenv
fwait
sbb
add
xor
adc
or
xchg
mov
imul
cmp
aas
xor
fadd
mov
pusha
or
xor
dec
sub
fisubs
dec
mov
mov
pop
push
in
sub
fstpl
pop
add
fdivrs
lock
mulb
jg
call
push
xor
js
pop
sbb
mov
mov
fs
push
in
ret
das
fistl
aad
xor
add
jno
enter
xlat
xchg
mov
xor
jns
pusha
scas
xlat
mov
lret
int
mov
out
cmp
daa
shrl
sbb
ljmp
mov
icebp
ss
push
pop
jae
sbb
sbb
call
icebp
xchg
in
lret
xorl
mov
popf
hlt
sbb
xor
mov
sub
mov
push
inc
sbb
jo
shll
clc
clc
scas
filds
loopne
xlat
data16
xchg
pop
imul
test
xchg
rcll
jle
jae
xchg
lahf
sbb
es
jmp
lcall
xchg
or
mov
test
ljmp
add
mov
jmp
cmc
shrb
clc
mov
inc
movsl
push
dec
out
out
bound
ds
dec
and
cmpsb
decb
push
jb
fs
pop
imull
add
scas
jl
std
incl
xchg
push
inc
inc
cltd
sub
mov
mov
xchg
or
sub
inc
cs
adc
pop
pop
mov
fisubs
mov
mov
xor
xchg
mov
dec
lret
call
pop
jg
ss
and
jns
xor
xchg
enter
mov
aad
cmp
cmp
jb
or
cltd
mov
loope
divb
data16
inc
xlat
lods
and
out
adc
pop
mov
test
mov
push
shll
cmpsb
out
test
lock
fisubs
xchg
push
loope
sub
lds
shrl
mov
les
fldt
or
jecxz
sbb
add
iret
ror
adc
stc
jmp
mov
std
sbb
dec
insl
fcmovnbe
add
pop
nop
mov
test
mov
dec
adc
mov
rcr
sbb
push
lcall
inc
lods
jg
pop
add
retw
daa
push
xchg
cmpsl
clc
pop
xchg
mov
mov
lods
or
adc
or
mov
sbb
sbb
push
and
ret
js
fists
xchg
sbb
and
fwait
sub
pop
xlat
arpl
xor
jmp
dec
add
xor
push
sti
pusha
ss
cmp
jnp
loope
leave
sub
xchg
mov
faddl
xchg
lret
jle
outsb
mov
test
int
inc
pop
es
push
mov
sbb
clc
testl
sub
das
leave
add
mov
dec
or
mov
insl
fwait
pop
dec
xchg
flds
dec
in
subl
mov
inc
or
test
lahf
or
cltd
imul
hlt
sub
pop
out
imul
les
sub
cmp
cmpsb
and
movsl
rcpps
repnz
cmp
pop
in
fs
idivl
pop
out
jecxz
inc
aam
fbld
bnd
je
comiss
rolb
inc
in
jb
inc
daa
xchg
sbb
add
leave
sub
mov
fstl
xchg
add
mov
dec
sbb
inc
cli
mov
fsubl
push
fldpi
adc
repz
rclb
int3
out
dec
loopne
int
daa
xchg
jle
pop
xchg
pop
imul
outsl
test
push
dec
mov
push
push
mov
jae
fs
lock
pop
test
popf
pop
push
fs
andb
addl
fwait
js
fnsave
adc
fstps
pop
es
and
call
jmp
movsl
std
into
test
shlb
and
adc
or
xchg
pop
iret
xor
jns
mov
loope
imul
insl
stos
fstpt
mov
xor
sub
cmp
cltd
push
jl
or
or
xor
int3
aaa
mov
jl
movsb
mov
aam
mov
test
ret
cmp
hlt
lret
xchg
mov
lock
xchg
and
adcl
pop
add
scas
repz
andl
lahf
ret
mov
jb
ficoms
cld
sub
lds
icebp
or
dec
or
mov
lcall
enter
mov
cs
stos
xor
mov
fs
shrl
ljmp
cmp
les
insb
xchg
add
sbb
daa
in
xor
jg
xchg
inc
push
adc
rclb
and
scas
pushf
pop
addl
xor
cltd
mov
sub
test
lcall
stos
sub
jb
ret
cmovno
imul
and
insb
and
mov
xor
divb
fcmove
fldl
loopne
js
mov
out
jno
hlt
andb
repz
sub
lret
xchg
inc
andb
sti
mov
push
jne
sbb
inc
dec
mov
adc
ds
xchg
notl
fnstcw
lods
iret
popa
ret
push
or
mov
fs
dec
and
ret
jns
jge
negb
scas
inc
int
fs
andb
dec
sub
int3
mov
xchg
into
repz
in
dec
insl
mov
cli
rclb
je
jno
xlat
adc
cli
imul
inc
or
push
push
dec
xlat
sub
push
add
push
push
inc
test
fisubrl
stos
lret
jbe
push
hlt
mov
testb
mov
and
fmuls
push
repz
xor
stc
adc
test
pop
mov
inc
call
add
mov
rcl
mov
adc
out
inc
xchg
dec
cmp
xchg
roll
fwait
call
mov
push
dec
repz
or
femms
jno
xor
inc
cld
pop
fldpi
out
mov
push
jge
imul
jns
or
stc
xchg
lods
leave
fsubs
xchg
dec
mov
vmovdqu
sti
sbb
xadd
mov
mov
mov
inc
mov
mov
inc
mov
inc
shlb
clc
leave
sbb
and
mov
jecxz
cmc
lods
fisubrs
add
outsb
xchg
mov
push
fstpt
push
stos
mov
xor
and
ret
xor
mov
roll
cmp
repnz
loop
mov
nop
jg
xchg
pop
or
mov
fstps
js
add
adc
test
iret
push
shl
test
rsqrtps
sbb
push
pop
repz
sahf
cli
mov
sti
sbb
jne
movsl
ficoms
and
fnstsw
insb
pop
fwait
ja
cmp
addl
sarb
dec
lret
faddl
out
rorb
fistpl
jns
mov
fnstenv
divps
jnp
sahf
push
ret
daa
cmp
into
enter
jb
push
mov
adc
lods
ja
ret
mov
sbb
sbbl
fdivs
lcall
or
ljmp
cld
inc
inc
mov
outsl
andb
sar
repz
sbb
lret
jnp
scas
fidivl
mov
dec
ja
stc
mov
push
andb
mov
test
jno
and
push
xor
cmp
push
mov
ret
out
xchg
pushf
addl
sarb
push
cltd
cli
lods
lret
fs
std
cli
nop
jnp
ja
jae
das
lock
lock
insb
cltd
and
mov
lret
test
das
gs
icebp
out
xchg
adc
push
sub
jle
jnp
jae
or
fwait
mov
test
data16
test
jns
les
stc
fsubs
and
adc
cwtl
mov
cwtl
mov
test
iret
daa
dec
sub
mov
xchg
jae
ja
mov
xchg
sarb
adc
bound
mov
push
or
xchg
arpl
repnz
test
sub
lahf
mov
xlat
pop
call
adc
jns
sub
jecxz
popa
gs
and
add
call
cli
push
insb
leave
sub
jae
stos
sahf
sbb
stc
cmp
jle
pop
jg
fstp
imul
xchg
xor
test
jl
cwtl
fsubl
popa
jp
mov
or
jp
push
aaa
fst
call
jne
xchg
pop
pop
ds
dec
lahf
add
and
mov
cmpsb
mov
insl
inc
imul
jnp
sub
push
mov
nop
pop
es
fucomi
lret
sbb
imul
loope
call
loopne
imul
sub
dec
nop
nop
jle
adc
push
sti
mov
add
cli
jae
mov
jns
shl
pusha
push
cld
aaa
inc
loopne
movsl
fs
fldl
push
out
imul
pop
adc
inc
lds
aas
fiadds
lock
dec
jge
or
rcrb
dec
add
hlt
test
enter
add
clc
cmp
je
inc
push
or
fwait
rcrb
inc
xchg
add
pop
xchg
xor
xchg
cmp
jb
mov
xchg
je
jg
sbb
lds
dec
pop
lods
push
ljmp
ret
int3
xor
out
adc
adc
out
jo
pop
daa
pop
lods
scas
in
dec
fmuls
jbe
dec
sbb
lcall
outsl
xor
test
push
arpl
imul
sub
cmp
adc
and
aad
ja
mov
inc
inc
xchg
ja
jle
call
lea
popf
imul
push
ret
pop
into
push
sub
lret
idivb
dec
push
jmp
mov
xchg
fimull
in
stos
push
stos
xchg
xor
mov
data16
mov
sar
ds
jecxz
push
test
loope
push
pop
xchg
adc
test
pop
rorb
pop
mov
out
in
mov
das
adc
pop
mov
dec
imul
call
mov
out
push
ljmp
lret
xor
sti
adc
lds
adc
je
iret
into
inc
ret
jns
jecxz
lods
adc
inc
cltd
dec
arpl
out
adc
subl
mov
dec
jl
add
and
xor
jnp
nop
lods
fsubrs
mov
pop
arpl
popf
jnp
dec
pop
hlt
jecxz
inc
ret
sbb
add
mov
mov
fs
pop
aas
cmp
rcll
lret
inc
push
mov
sbb
jnp
cvtps2pd
test
adc
fstpt
xor
enter
or
push
packuswb
aaa
daa
js
or
hlt
lock
and
je
mov
insl
dec
mov
cmp
fldln2
pop
sarl
addl
cmp
sub
push
and
stos
adc
mov
call
sbb
stos
push
mov
fcompl
int3
ret
shll
mov
sub
out
mov
pop
mov
inc
lds
incb
sti
add
sbb
mov
push
cld
subl
dec
or
out
shlb
pop
shll
data16
sub
or
adc
test
inc
inc
sbb
data16
popa
pusha
xchg
jp
mov
sub
add
sub
sbb
das
add
inc
ret
xchg
adc
es
in
xchg
ds
jae
sub
mov
mov
mov
dec
lahf
lcall
fs
xchg
jge
mov
push
pop
lds
xchg
and
icebp
push
pop
or
sbb
andl
mov
arpl
call
jb
popa
js
fldl
nop
rolb
or
xchg
rcl
loop
cmpsb
jecxz
iret
imul
mov
push
fstpt
inc
cmpsb
jmp
or
push
dec
xchg
pushf
add
ret
mov
repz
or
rolb
out
and
dec
mulb
pop
test
mov
xlat
jp
stc
and
jecxz
push
and
adc
stos
mov
fisubl
lods
filds
add
fistpl
hlt
mov
push
sub
pop
aaa
es
or
stos
fstpl
xor
daa
sbb
xor
sbb
dec
mov
pushf
push
jb
jns
idivl
pushf
stc
loope
ret
mov
inc
dec
adc
mov
jg
sub
adc
mov
sahf
into
sbb
fisubl
push
movsb
add
mov
popf
jle,pn
add
test
test
mov
popa
cmp
dec
inc
call
icebp
ja
xor
es
mov
fisubl
in
cmc
cmp
cld
or
mov
or
scas
mov
mov
sub
and
and
iret
pop
inc
lret
inc
xlat
fwait
push
fisttps
divb
cmpsb
cld
icebp
fnstcw
pop
lods
loope
mov
lds
cmp
imul
push
gs
xor
mov
add
add
inc
sub
fstpt
pop
push
push
cmpsb
pop
mull
clc
bound
call
cltd
xor
dec
out
xor
inc
jl
cmp
xchg
ret
in
sub
xor
push
out
sbb
mov
xor
aam
mov
test
cwtl
aas
pop
pop
loop
or
mov
out
mov
scas
bound
ds
xor
rolb
and
add
enter
fsubs
sti
jns
inc
lcall
int3
lret
test
out
pop
dec
test
lret
in
cld
mov
lods
arpl
xor
cmp
jmp
movl
popa
push
sti
push
addb
and
jbe
lret
fistl
stos
sub
mov
dec
add
mov
div
push
push
adc
stos
add
scas
dec
icebp
push
popa
test
aaa
or
pop
pop
or
fcmovbe
cmp
leave
xchg
sub
xor
adc
cmp
jl
addr16
push
clc
lcall
pop
mov
clc
xchg
cld
ds
addr16
mov
lahf
and
xchg
jmp
hlt
cmpsb
cmc
shlb
call
andb
in
rcrb
and
dec
push
bound
inc
push
ss
ds
cmpb
lahf
out
xchg
daa
sti
push
inc
xchg
femms
das
xchg
or
mov
aas
pop
dec
mov
mov
lret
sub
mov
cmp
icebp
adc
enter
or
aad
xorl
jecxz
inc
shr
das
fidivs
cltd
lret
push
inc
ss
in
ret
add
stos
inc
push
jb
inc
aam
call
scas
jnp
stc
aas
repnz
pop
imul
into
aaa
push
in
dec
dec
into
pop
shlb
aas
jmp
mov
daa
sbb
je
jo
add
add
sahf
mov
fadds
push
cmp
outsl
imul
and
insl
mov
out
sub
jmp
add
std
lahf
cmp
insl
xor
cmc
cmpsl
dec
add
dec
sbb
mov
dec
int3
add
sbb
cmp
repnz
dec
imul
sar
daa
or
daa
xor
fistpl
dec
adc
lahf
sbb
mov
std
push
in
popaw
enter
mov
add
sahf
lea
push
int
rcll
jecxz
dec
call
loopne
fwait
test
mov
int
mov
outsl
rol
cmp
ljmp
jl
setnp
out
lret
inc
xor
cmpsb
movsb
push
mov
xchg
push
sahf
xchg
aas
push
and
movsb
imul
lcall
mov
ss
sahf
lods
lcall
in
xchg
das
subb
cld
maskmovq
testl
xor
sbb
or
pop
add
nop
pusha
jae
dec
rcll
pop
cmp
pusha
je
mov
lcall
shrl
dec
std
push
das
mov
mov
aas
out
jb
sub
cmp
and
test
in
mov
pop
sbb
jno
xor
pushf
jno
lea
adcb
mov
mov
popa
lds
jle
mov
push
or
jb
cld
or
in
jne
cmpsb
dec
and
mov
xchg
jns
js
xlat
popa
sub
ds
jb
dec
cltd
and
lea
ret
jmp
mov
add
ljmp
jb
mull
das
mov
jbe
mov
mov
xor
push
inc
add
dec
mov
mov
aad
xchg
cmp
push
lods
xlat
jns
dec
cmp
fmuls
ljmp
aad
inc
insl
ret
out
mov
mov
push
sub
inc
test
cli
mov
adc
jp
xchg
xchg
lret
lret
lea
mov
aad
fstps
mov
and
test
push
int
pop
inc
test
inc
mov
les
inc
mov
rcrb
test
lock
sub
mov
or
shl
cmp
inc
jge
cwtl
addl
dec
aam
sbb
je
or
sbb
insl
pop
loop
or
loop
movsl
fldl
jb
call
pop
aaa
subb
loope
push
fs
leave
inc
jge
outsb
les
push
cmpsb
pop
das
es
inc
lret
outsl
pop
nop
cltd
jecxz
mov
add
add
mov
das
mov
lea
in
or
lods
sub
add
mov
mov
xor
lret
jge
or
mov
in
stos
add
clc
mull
int
mov
mov
pop
insb
lret
sbb
dec
mov
pop
xor
iret
xor
nop
jbe
lods
dec
imul
lds
mov
sbb
xchg
orb
popl
outsb
dec
cmp
pop
test
ds
sub
inc
lcall
dec
push
jnp
cmc
cmc
stos
scas
and
sub
and
les
loope
xchg
sub
xor
pop
add
int3
test
or
dec
shll
mov
fistpl
or
add
inc
in
jge
fisubl
les
jl
out
and
inc
push
xorps
inc
jg
inc
repnz
adc
push
loopne
adc
cmp
clc
push
fbld
dec
incb
mov
push
push
imul
mov
jle
adc
pop
push
mov
inc
pop
xchg
inc
mov
xor
mov
lahf
mov
cmp
rolb
jmp
test
out
fwait
and
sub
pop
inc
xor
mov
test
mov
jecxz
loopne
imul
movsb
pop
xchg
ds
jp
ss
lret
dec
pusha
sub
and
xlat
je
inc
jecxz,pt
lods
test
push
mov
adc
or
clc
imul
pop
jecxz
outsb
test
push
mov
aad
cmc
cmp
cmpl
loope
movb
fs
stc
cwtl
sub
push
out
cmp
or
les
ljmp
lret
clc
out
sbb
adc
adc
repz
fstpt
loop
leave
stc
add
and
and
push
mov
scas
pop
clc
inc
imul
jae
sub
xor
je
dec
mov
xor
jns
jge
and
dec
repnz
sti
pusha
inc
jne
push
sti
test
fadds
lods
and
daa
jb
lcall
rcrl
jle
xchg
mov
mov
xchg
add
xlat
repnz
fdivrl
or
stc
dec
push
mov
inc
insl
sub
sbb
cmp
arpl
fcmovnbe
shlb
jp
xor
mov
hlt
inc
out
je
xchg
stc
int3
push
in
cmpsl
or
pop
dec
sub
aad
andl
dec
adc
std
push
sti
pushf
lods
scas
fcmovbe
add
jmp
mov
add
adc
or
jmp
xchg
xor
push
loope
pop
jne
out
cs
jnp
pushf
jnp
pop
push
pop
inc
xor
dec
aas
jne
adc
adc
mov
pop
mov
xchg
inc
mov
dec
push
in
out
stc
adc
je
loop
xchg
mov
ret
xor
mov
sbb
ret
push
cltd
jecxz
sarl
insb
push
daa
push
mull
les
push
fs
mov
inc
xor
inc
jnp
ret
dec
add
fisubrl
dec
mov
js
or
jmp
jp
icebp
enter
push
xlat
aaa
add
sub
add
mov
inc
inc
loop
mov
mov
loope
pop
push
add
or
mov
push
mov
mov
adc
ljmp
outsb
sbb
int3
pop
mov
mov
lods
fmul
fstpt
scas
mov
enter
repnz
dec
scas
mov
add
mov
push
xchg
or
pop
pop
das
mov
mov
inc
mov
mov
js
inc
xchg
aaa
pop
sub
pop
outsb
stc
out
xor
sbb
cmpl
dec
mov
stos
and
in
es
xor
adc
adc
cmc
cmp
sbb
jmp
or
cmc
mov
mov
xor
out
in
add
mov
cmp
dec
inc
loop
pusha
bound
jg
cmc
arpl
movsb
cmc
sbb
xchg
xchg
fwait
and
pop
dec
push
jo
jge
add
pop
adc
lock
push
lods
mov
sub
out
das
shl
sbb
fisubrl
jno
mov
dec
or
test
in
pop
mov
adc
jge
int3
popf
sub
pop
pop
pop
jbe
ljmp
into
arpl
jmp
stc
ja
jge
mov
inc
fucomi
adc
test
dec
push
inc
inc
and
arpl
shrb
fildl
in
mov
add
hlt
cld
lret
dec
push
adc
xor
push
sbb
lret
repz
dec
in
push
xor
mov
dec
add
and
mov
adc
rcl
arpl
cmpsl
iret
lcall
lret
push
lret
das
in
ljmp
xchg
ja
out
aad
xor
lock
mov
cmpsl
adc
je
dec
dec
push
push
mov
sbb
into
mov
das
lret
aaa
lahf
mov
mov
push
hlt
xchg
jp
mov
shrl
push
aad
stos
int3
jmp
cltd
faddl
cmp
dec
rorb
and
out
xchg
xor
sub
mov
loopne
add
outsb
test
sbb
xchg
in
int3
cmp
jle
inc
and
add
xchg
call
je
push
out
cmpsl
sub
dec
callw
outsl
or
push
movsl
cld
fdivs
adcl
insb
sbb
inc
loop
xlat
or
push
lea
jge
cmp
jb
imul
dec
mov
movsl
mov
xchg
mov
push
pop
xchg
std
jp
sub
adcl
lods
leave
jns
test
sub
adc
inc
call
inc
adc
rorb
or
mov
mov
mov
popf
inc
out
lcall
mov
xchg
push
or
add
repnz
repnz
adc
clc
fmuls
stc
inc
fidivrs
jns
xorb
push
jp
and
shll
imull
cmp
insb
inc
pop
mov
xchg
fstps
out
sub
and
jne
repnz
cmpsb
mov
loopne
sub
test
out
and
jns
fmuls
pop
fld
adc
lret
jne
aad
jae
cltd
xchg
loop
inc
pop
aas
xor
pop
jo
inc
mov
xchg
fcmove
mov
or
xlat
mov
xchg
push
or
je
test
cmpsl
dec
mov
shll
or
aas
mov
dec
jne
add
movsb
or
mov
test
js
or
jle
mov
pop
jo
ret
shrl
inc
pusha
popw
aas
out
test
int
xor
mov
pop
adc
lahf
and
loope
dec
and
shrb
aam
xchg
mov
fsubp
je
add
cmpsb
jge
loope
pop
mov
lea
sub
dec
fistpl
lock
insl
cmp
jbe
lods
insb
nop
in
push
push
dec
sub
sbb
lods
sbb
scas
cmp
mov
adc
popa
cmp
cld
addr16
aaa
inc
fs
mov
mov
or
xor
adc
mov
pop
repz
shrl
repz
mov
jg
std
dec
fmuls
cmp
mov
stc
int3
ds
pop
flds
adc
fs
shll
in
roll
jns
fisubl
xor
push
stc
mov
out
rclb
xchg
loopne
movsl
mov
aam
ja
xor
int
jae
out
lahf
in
add
pushf
sbb
push
sahf
pop
movsb
mov
mov
in
test
jmp
jno
cmc
cmp
ja
add
aaa
pop
sbb
mov
imul
jl
es
mov
pop
aaa
sbb
ds
and
sti
pushw
or
xor
frstor
adc
in
repz
or
or
outsb
adc
in
xchg
dec
daa
jle
push
push
cwtl
inc
push
test
or
and
lds
aad
push
arpl
test
repz
popa
pop
ret
pop
cmp
pop
aam
call
cmc
movsb
pop
iret
loopne
xor
test
aaa
push
or
mov
ja
jae
icebp
cmp
scas
sub
adc
inc
sbb
sub
dec
jmp
in
in
mov
in
mov
bound
push
fs
xchg
pop
ret
xorl
lret
test
insl
outsb
insl
jne
xchg
cmp
jmp
hlt
pop
dec
std
pop
lahf
and
das
adc
subl
addb
jns
add
xchg
xlat
les
mov
mov
xor
sub
lods
xor
cmpsb
lods
data16
cli
jne
leave
cs
out
cmpsb
test
xor
mov
aas
arpl
jecxz
mov
push
push
arpl
call
sub
cmc
adc
adc
test
jl
mov
pop
pushf
inc
cmp
inc
mov
add
repz
inc
pop
push
fcomps
lods
lahf
xchg
mov
clc
out
cmp
sti
mov
cli
mov
test
adcb
addr16
cld
mov
adc
loop
roll
clc
sbbl
int
jne
dec
pusha
mov
inc
out
mov
dec
stos
enter
ret
lahf
adc
inc
enter
mov
fisubs
mov
sbb
sub
dec
lret
pushf
sbb
push
int
add
ja
inc
and
in
xlat
data16
dec
inc
cld
imul
jecxz
jge
jle
push
sbb
inc
push
add
jbe
stos
loope
repz
or
subb
cmp
dec
data16
jge
jb
sub
mov
lret
add
int3
aaa
aam
adc
pop
add
xor
std
cmp
sbb
sbb
adc
xchg
bound
push
mov
adcb
adc
mov
push
push
mov
cltd
addr16
je
mov
mov
adc
lods
ss
dec
push
mov
mov
aas
test
enter
jmp
psrlq
nop
movb
add
subb
clc
rclb
push
and
loope
int
adc
add
adc
adc
pop
jecxz
outsl
mov
cli
lods
divb
and
pop
pushl
popf
outsb
cmc
xchg
mov
in
jno
dec
loop
daa
push
and
jle
xchg
adc
adc
cmp
mov
shrl
pop
hlt
lds
sbb
aam
testb
adc
scas
xchg
out
mov
pop
jecxz
in
popl
dec
aaa
test
mov
pop
pop
push
inc
mov
or
out
insb
arpl
cmp
leave
fmull
repz
pop
lock
jmp
lret
mov
xchg
adc
xchg
lea
loopne
test
push
push
push
xchg
stos
decb
stos
and
in
shlb
leave
out
outsb
mov
adc
add
pop
test
lahf
jmp
pop
fldcw
pushf
dec
pop
insl
js
add
sub
das
loop
cli
mov
out
das
aad
imul
cwtl
cmp
stos
mov
jne
pushf
cwtl
jns
jle
sbb
mov
xchg
or
xor
shlb
inc
movb
add
aas
cmpsb
lds
cmp
outsl
sbbl
cmpsb
push
lods
push
js
dec
es
cs
dec
cli
bound
ror
xchg
push
mov
sub
jmp
loopne
lods
sbb
pop
pop
mov
mov
insb
push
add
shlb
sbb
inc
xchg
in
cmp
sbb
pop
jo
xchg
or
mov
jns
sub
push
outsl
mov
adc
ja
int
jge
jae
xor
mov
test
cmp
add
rol
rclb
xor
adc
pop
push
cmp
lods
lret
ja
sbb
pushf
sbb
push
xor
js,pn
cmp
or
push
push
mov
iret
insl
mov
sbb
jmp
push
push
popa
jbe
les
jp
mov
bound
push
sbb
add
cmp
sub
xor
mov
sarl
xor
fistpl
jb
call
setge
fdivrl
sbb
adc
add
jg
xchg
jp
mov
ret
push
test
dec
and
push
sub
inc
xchg
push
roll
popa
inc
mov
pop
testl
jb
stos
mov
movsl
ret
xchg
enter
mov
mov
shll
and
sarb
dec
sahf
cmpsl
inc
jl
mov
fisubrl
rorb
or
loopne
mov
push
or
rorb
mov
dec
loopne
cld
xor
rolb
fistl
sbb
in
jo
xor
push
jnp
xchg
popa
mov
imul
roll
mov
icebp
test
fdivs
or
jnp
addr16
xor
das
clc
and
mov
idivb
lods
out
mov
and
pop
imul
repz
xchg
sbb
add
mov
mov
and
in
stc
addr16
cmpsl
cmp
test
adc
int3
dec
sahf
sbb
or
xchg
in
xor
repz
inc
pop
call
orl
cmp
pop
jb
xchg
push
das
xlat
mov
in
fs
in
xor
xor
loop
shr
sbb
xor
sbb
xchg
pop
popl
js
mov
lcall
dec
pop
sbb
test
aaa
mov
lcall
mov
insl
pop
cmc
movsb
cmpsl
and
out
inc
dec
pop
shrl
jmp
sub
cmpxchg
and
fidivl
sbbb
scas
mov
or
jp
das
cmc
call
sti
pusha
sub
cmc
jbe
rep
imul
sbbb
mov
adc
std
mov
enter
in
jle
sbb
adc
jne
repnz
xchg
ss
movsb
fwait
wrmsr
insl
mov
mov
stc
mov
add
sub
jne
pop
in
stos
sbb
sti
push
fmull
roll
insb
lods
enter
add
or
and
push
add
out
das
imul
int3
mov
arpl
and
call
xchg
and
mov
add
jae
out
outsb
jno
orb
and
call
xor
jecxz
les
xor
xlat
mov
fs
sbbb
aaa
imul
jns
mov
mov
push
sti
jo
es
adc
inc
shlb
cmp
adc
cmp
loopne
mov
fwait
add
cmp
lret
subl
mov
jns
insb
xchg
pop
outsb
mov
insl
iret
pop
xor
inc
push
jbe
movl
dec
mov
je
xor
adc
mov
add
xchg
subl
jl
scas
sbb
outsb
lea
fwait
stos
rolb
sub
xor
pop
pop
xchg
ret
inc
imul
jb
lds
js
jecxz
jecxz
sbb
jp
mov
cmp
push
mov
test
loopne
ja
dec
lods
adc
and
sub
shlb
out
sub
mov
bound
inc
mov
push
pop
lret
out
in
pop
daa
fcoms
inc
mov
fimull
fsubl
xorl
xchg
mov
clc
icebp
xchg
clc
cmpl
pop
jb
in
xor
xchg
adc
push
sub
outsb
sahf
xchg
gs
mov
cmp
dec
push
scas
imul
flds
mov
and
call
ret
jno
je
popa
mov
mov
jae
xor
jmp
lock
das
jge
pop
dec
test
repnz
cmp
jnp
in
jb
sbb
aaa
sbb
xchg
add
or
lock
add
xor
mov
xchg
adc
in
xchg
scas
insl
cmpsl
out
push
ljmp
sarb
test
sub
or
loopne
in
or
test
xchg
mov
pop
and
sbb
sbb
pushf
fmulp
mov
stos
jg
divb
push
inc
ret
imul
jge
push
fsubrl
sbbl
pop
jmp
cld
icebp
popf
movsl
cli
aaa
mov
mov
sub
add
or
sbb
push
imul
fcmovnbe
push
push
sub
xchg
ret
mov
sub
nop
adc
adc
xchg
sti
jo
mov
pop
ljmp
mov
dec
int3
mov
lcall
jo
xor
xchg
int
dec
or
pop
and
xor
jle
cmp
sar
lret
aas
mov
jo
outsb
xchg
cmp
cli
je
test
add
test
aas
jp
imul
adc
lods
jns
xlat
fstps
adc
call
pop
hlt
jno
mov
outsb
mov
inc
in
mov
fidivl
arpl
call
mov
out
or
pop
cmp
push
insb
sub
add
test
bnd
and
sbb
jae
out
sub
push
in
lcall
push
xor
mov
or
xchg
addr16
stc
push
pop
inc
sub
jae
xchg
es
lock
in
in
aad
int3
sub
lret
cli
fnsave
int
and
or
in
nop
sub
cmp
mov
cmp
xchg
repnz
jl
lods
dec
push
sti
cmc
dec
test
addb
sub
lods
mov
sbb
loope
pop
addr16
cmp
mov
dec
cld
pushf
push
xchg
mov
mov
lret
xchg
jne
aas
xchg
mov
psubb
xor
test
jmp
xor
jb
jbe
loope
pop
inc
jge
dec
and
sub
xlat
pop
leave
push
stos
add
add
mov
test
or
pop
inc
inc
aas
mov
jbe
push
mov
inc
pop
mov
pop
sar
add
ret
xchg
mov
ret
mov
shll
push
dec
lcall
fs
jp
adc
sahf
pop
inc
push
cli
sbb
xchg
push
stos
dec
sub
test
push
fildl
pop
sbb
leave
mov
es
ljmp
sub
insb
inc
sbb
lret
ud0
mov
mov
ffreep
icebp
outsb
int3
ret
push
cmp
pusha
jl
mov
xchg
xchg
mov
jns
pcmpeqd
shlb
push
dec
sahf
add
ret
loope
aad
lret
inc
pop
inc
mov
push
dec
sbb
xor
xor
pop
mov
ret
inc
mov
dec
divl
cwtl
popa
push
xorb
mov
jp
or
mov
jmp
ret
je
sbb
sub
ja
ret
dec
fisubrl
dec
mov
mov
test
push
sub
jg
imul
mov
iret
aad
inc
xchg
cmpsl
ss
bound
or
or
xchg
ret
push
inc
movsl
xchg
icebp
sti
sub
fldenv
mov
mov
adc
lahf
push
dec
test
inc
jg
ja
arpl
data16
subl
sbb
sub
mov
rol
xchg
or
dec
fcoms
mov
and
xchg
jbe
ds
cmp
roll
xchg
mov
pop
cld
jne
cwtl
fwait
sti
cmp
testl
int3
jo
jp
arpl
dec
aad
jns
push
mov
mov
and
rcl
sub
mov
rorb
push
push
mov
xchg
dec
push
shl
les
mov
movsb
and
xchg
jbe
mov
dec
push
jg
in
jge
in
mov
xor
popf
and
sub
mov
adc
push
push
lahf
orb
mov
jg
push
daa
mov
inc
nop
mov
mov
mov
cwtl
lret
movsb
xor
jno
cwtl
scas
cs
push
leave
mov
xchg
mov
in
in
mov
adc
loopne
xchg
roll
popf
or
je
inc
stos
cmp
arpl
xor
stos
das
arpl
das
aaa
aam
outsl
loop
repz
loop
sti
xor
stc
mov
jle
mov
push
pop
inc
inc
pop
rcll
leave
mov
jb
pop
fdivrs
adc
gs
cmp
fmulp
jne
mov
loope
in
push
mov
push
mov
repnz
sub
pop
xorb
enter
xchg
ds
lahf
dec
ret
mov
addb
pusha
mov
mov
into
mov
mov
mov
cs
xlat
lds
inc
jp
inc
push
pop
adc
icebp
unpckhps
pop
stos
es
jl
ds
addr16
adc
enter
nop
pusha
and
dec
fildl
or
inc
cld
daa
popf
xor
mov
adc
movsl
dec
jle
outsl
enter
or
adc
fsubp
xchg
outsb
or
push
incl
aam
gs
movsb
pop
int3
in
je
mov
pop
pop
lret
dec
lret
shl
sbb
cmc
aaa
pop
xchg
sbb
pop
movsb
in
fidivrs
pop
stos
and
jmp
in
and
popa
ljmp
and
cmp
dec
rcll
mov
push
icebp
sub
scas
xor
xchg
mov
and
in
cmp
pusha
xor
jnp
cmc
mov
push
adc
sbb
push
cmp
daa
mov
inc
sbb
pop
xor
ljmp
add
ficoml
adc
cmpsb
es
mov
adcb
in
enter
xchg
mull
out
int3
jnp
mov
call
mov
xlat
pusha
xor
xchg
jge
loope
and
jg
addr16
xlat
fldenv
cs
jne
outsl
cmp
pusha
or
lock
pop
test
mov
inc
das
inc
mov
sbb
mov
push
mov
shrl
mov
inc
sub
adc
and
mov
push
fsubrl
pop
pop
pop
inc
jae
pop
ss
mov
jp
xlat
imul
xchg
add
cmpb
aam
inc
dec
mov
push
xor
inc
mov
sbbb
lret
insl
add
and
inc
pop
jns
pop
and
rcrl
data16
dec
mov
icebp
push
push
loope
fcmovnb
ror
aad
add
pusha
add
pop
rcl
jno
mov
pusha
push
loop
pushf
in
push
add
aam
aas
pop
je,pn
fadds
aad
mov
insl
roll
and
ret
jbe
xchg
dec
and
jl
inc
test
in
xor
jae
cmc
jp
or
inc
and
fmull
imul
lret
mov
aas
leave
out
mov
ret
imul
sub
mov
add
jae
arpl
ret
cwtl
add
jl
mov
fsubrl
repz
cmp
mov
mov
pop
xchg
stc
xchg
lahf
cmc
int
jecxz
sub
ss
mov
orl
add
jecxz
jl
out
adc
rcrb
cmp
pop
test
jo
sbb
xchg
mov
xchg
sub
in
cmpsb
jo
xchg
cmc
or
jo
test
xor
and
mov
mov
push
out
fisubl
aas
insl
cmp
add
pop
movsb
aaa
sub
movsl
ljmp
adc
leave
andb
lock
inc
pusha
jp
xchg
movsb
push
test
jle
push
loopne
jne
mov
jno
xchg
mov
dec
cltd
es
cmp
negl
cmp
insl
mov
adcb
jns
loopne
popa
adc
daa
jp
fdivr
pop
sarb
fwait
icebp
sahf
add
das
dec
cld
or
pusha
xchg
push
xchg
push
outsl
les
push
adcl
dec
push
push
in
sub
js
cli
out
cmp
lods
inc
into
inc
cmp
mov
dec
lret
jl
sbb
jmp
mov
cwtl
adc
jecxz
jle
mov
loopne
xlat
ret
jns
imul
adc
out
sbb
movsb
xor
pop
pop
lcall
lods
jbe
jnp
mov
fprem1
sbb
add
dec
shrb
icebp
push
nop
mov
mov
ret
lods
push
push
sub
mov
lret
push
jmp
push
sbbl
push
or
movsb
aad
mov
push
movsb
cmpsb
ja
dec
into
push
pop
shlb
push
dec
mov
jns
aad
movsb
xor
push
ja
jecxz
inc
popa
jnp
xchg
cltd
lods
js
pop
ljmp
adc
push
push
out
ljmp
xlat
arpl
push
mov
xor
push
cld
push
mov
aas
or
or
movsl
int
aaa
outsb
xchg
call
push
lret
xchg
mov
loop
int
xor
aaa
jg
movsb
mov
ja
lcall
sbb
leave
add
dec
mov
or
hlt
pop
mov
movsb
sbb
sbb
das
pop
int
add
cvtps2pi
pop
mov
gs
test
lods
aam
aam
popf
into
mov
rolb
mov
mov
in
dec
outsl
data16
xor
xchg
mov
dec
inc
sbb
cmp
imul
inc
sbb
jb
daa
mov
and
shll
lret
leave
push
xor
jmp
lret
dec
fcmovbe
in
mov
mov
mov
or
fistpl
mov
test
lret
xchg
out
rolb
add
xor
daa
xor
lret
movsb
push
xor
sub
pop
stc
xchg
push
jns
and
dec
lods
and
jb
loope
dec
add
xchg
pushf
push
addl
sbb
lods
outsl
xor
mov
insl
nop
inc
and
jae
test
xchg
jbe
repz
stos
je
dec
pop
jno
or
or
push
pop
ja
push
dec
sub
icebp
pop
pop
push
push
push
jbe
xor
mov
pop
mov
xor
jmp
pop
jb
xchg
stos
mov
outsb
pop
fdivs
cmpb
in
dec
mov
sbb
cmpsb
scas
enter
cmp
movsl
push
jno
push
mov
popa
jg
out
or
movsb
sbb
dec
jl
mov
stos
sub
pop
or
ljmp
lcall
push
sbb
rol
pop
and
adc
loopne
push
mov
mov
ljmp
sub
gs
mov
or
popf
shll
push
jns
stos
dec
sub
lods
inc
js
bound
push
lcall
rcll
movsb
lcall
mov
movsb
iret
jecxz
or
cli
and
jo
adc
out
outsb
lock
lods
aas
test
ja
pushf
lret
daa
in
mov
jp
or
cmc
lods
jp
mov
pop
pop
ret
jmp
push
lcall
sti
jp
or
loope
pusha
mov
imul
mov
les
dec
xlat
inc
sub
mov
cwtl
push
ret
dec
movl
fidivl
mov
daa
and
leave
add
dec
sbb
les
lret
mov
fcomps
cmp
cs
push
cmp
xor
imul
int
sub
sbb
fadds
andl
add
xchg
sub
loop
jnp
in
in
fisubrl
frstor
pop
movsb
sub
cmp
insb
or
movsl
imulb
cmp
rolb
leave
mov
mov
jae
clc
add
data16
daa
xchg
rcrb
int
aaa
sub
imul
in
ret
out
inc
add
pop
decb
jbe
repz
sbb
or
outsb
xchg
ds
xchg
add
add
mov
inc
cwtl
pop
ret
xchg
mov
loope
jp
aam
es
add
mov
lea
xchg
add
xor
cmp
icebp
mov
fidivs
jp
xor
pop
pop
out
je
popa
push
xchg
mov
jge
adc
aas
push
inc
adcl
xchg
push
icebp
shll
repnz
xchg
fimull
pop
inc
or
jae
shrb
lcall
xor
ljmp
call
test
call
outsb
test
orl
sti
jnp
sarl
jbe
sahf
dec
pop
jb
fwait
mov
xchg
out
ja
fidivs
cmc
push
xor
rcrl
jmp
mov
je
mov
sub
mov
add
xchg
adc
add
int3
xor
jns
mov
aaa
mov
mov
pop
cmp
dec
push
xor
xlat
imul
jae
mul
lock
movsb
and
pop
popa
pop
call
movsb
push
jae
roll
out
jmp
mov
mov
inc
push
dec
mov
jge
mov
mov
data16
call
mov
test
imul
pop
arpl
pop
stos
lds
insb
stc
loope
ret
and
imul
aam
in
loop
push
push
outsl
pop
sti
adc
addr16
fcmovb
imull
cmp
xchg
lcall
fisubrl
negl
pop
jb
leave
scas
repnz
lods
mov
lretw
xor
pop
dec
push
aaa
adcl
aas
aad
sub
addb
into
call
pop
mov
pushf
les
inc
xor
sbb
ret
push
imul
lahf
rcl
xchg
scas
pop
dec
dec
jl
and
fs
lahf
scas
popa
pop
testl
aas
jecxz
sub
das
and
push
aam
sub
cmpsb
add
xlat
mov
mov
mov
decl
sbb
pop
inc
sub
mov
shlb
rorl
ss
stos
in
inc
mov
sub
int3
aam
and
jle
imul
xor
insl
inc
or
in
inc
xor
scas
fistpll
pop
cmpsb
dec
mov
outsl
push
push
xor
ljmp
ret
sahf
adc
jmp
xor
ljmp
ds
mov
jg
cld
cwtl
jge
and
pop
jbe
mov
jecxz
xor
lret
nop
mov
sbb
mov
sti
lret
jl
rcll
rclb
addr16
daa
pop
lea
ret
jle
loopne
in
adc
add
lret
fcomps
insl
mov
in
sub
mov
inc
add
addr16
fnstenv
and
shl
jg
add
jmp
repz
xor
fsubl
mov
add
lcall
xchg
add
aaa
jmp
xchg
cmc
xchg
shrl
push
pushfw
insb
pop
lretw
mov
inc
xor
sbb
mov
out
aam
xchg
aas
mov
dec
ljmp
inc
mov
bound
xor
pop
out
add
arpl
and
push
ljmp
repnz
daa
pop
ss
xchg
sub
xor
loope
in
mov
out
inc
addr16
add
pop
jno
popa
ja
push
add
adc
clc
dec
jmp
mov
lret
jmp
xlat
mov
xor
movsb
bound
xor
and
fcomps
add
sub
je
sub
sbb
aas
dec
iret
cmpsb
dec
icebp
mov
vsqrtps
pop
cmpsl
sti
pusha
xor
xchg
loopew
hlt
sti
loop
mov
and
push
jno
ja
add
mov
in
jb
lods
xor
adc
mov
adc
cmc
jne
pop
or
sbb
rcrb
mov
adc
stc
sub
clc
inc
jbe
insl
out
notb
push
outsb
xor
push
sarl
mov
xchg
push
sub
mov
call
jge
or
aam
push
jmp
int3
fmull
xor
fisubrl
mov
ficomps
ljmp
test
fbld
dec
mov
int
dec
es
adc
sub
sbb
push
push
scas
out
inc
cli
fmuls
cmp
mov
ja
mov
xchg
jo,pt
dec
and
xchg
mov
pop
mov
mov
imul
int3
popa
xchg
jno
add
mov
aas
jp
jmp
in
popa
cmp
imull
pop
cmp
push
ficomps
imul
pop
ret
xchg
lea
fdivrl
adc
pop
xchg
hlt
sar
loopne
mov
cmp
add
pop
push
mov
cmpsl
lcall
or
out
ljmp
mov
bound
jns
sub
mov
pop
shr
jle
xchg
mov
int3
das
and
rcl
push
ficoms
xchg
mov
or
xlat
dec
les
fldcw
mov
faddp
scas
hlt
jo
mov
daa
or
cmc
push
shlb
pop
push
xorb
bound
into
mov
cmpsl
dec
xor
mov
imul
leave
imul
xchg
std
inc
and
lods
pop
add
int3
int3
push
pop
ja
notl
mov
or
arpl
inc
scas
dec
js
pop
adc
pop
test
pop
mov
mov
and
push
add
push
movsb
aaa
pop
dec
push
mov
cmp
add
out
push
xchg
add
jno
mov
sub
daa
movsb
push
sub
xor
test
pop
cli
sbb
add
and
int3
push
mov
pop
imul
mov
adc
mov
sub
pushl
dec
cmp
cmp
nop
lret
aas
cmp
das
adc
out
ficomps
imul
das
scas
rolb
out
inc
jo
int
outsl
cmc
fnstenv
jmp
mov
xchg
sbb
sub
pushf
and
cmpsl
cmp
mov
ret
mov
pusha
jbe
ret
pushf
ljmp
sbb
cmpsl
out
or
aad
frstor
loope
insl
int
outsl
ds
xchg
aaa
dec
sub
dec
arpl
movsl
into
sub
cmp
jge
mov
mov
scas
leave
pop
jl
dec
sti
aad
push
push
pop
xchg
out
cmpsl
sub
push
cmp
jno
or
sbb
dec
fwait
and
mov
int3
pop
popf
int
mov
jne
xchg
push
in
mov
dec
mov
and
mov
out
popa
stc
jg
jbe
push
mov
loopne
jmp
fistps
adc
das
xor
inc
in
jmp
sub
inc
sub
hlt
insl
mov
notl
out
or
shrl
jae
cli
shl
popa
shlb
faddp
stos
lods
jnp
mov
push
or
sbb
clc
ljmp
fisubl
pop
daa
or
fcom
enter
bound
and
cltd
cmpsl
sti
arpl
lods
push
sbb
in
in
fnstenv
lret
jle
adc
arpl
sbb
in
cs
scas
ljmp
jg
mov
xor
xlat
stos
je
outsb
outsl
add
push
ss
cmpsl
cmp
lret
push
mov
inc
loope
mov
mov
je
clc
adc
sahf
test
inc
mov
flds
mov
pop
js
loop
sahf
jp
pop
inc
pop
out
xchg
jp
fldenv
sbb
add
add
ljmp
xor
mov
xchg
aaa
and
mov
adc
and
subb
sub
es
insb
push
push
lret
adc
and
cmp
rcrb
push
sub
and
and
inc
lods
or
sub
xchg
movsb
adc
ss
pop
fldl
xchg
iret
fistps
add
cmp
mov
out
xorb
call
mov
or
sbb
out
add
adc
fidivrl
jb
loope
fwait
pop
leave
cld
dec
add
fwait
sub
sbb
aas
or
js
pop
jae
dec
data16
outsl
hlt
lods
add
out
jno
frstor
xchg
push
sbb
daa
aam
popa
push
push
lret
and
sbb
jb
dec
int3
rclb
lea
aam
or
cmp
test
fstpl
lahf
lock
mov
and
aad
scas
sub
dec
jp
mov
jge
jmp
cltd
mov
cmp
notb
rcll
add
sbb
dec
xor
xor
lods
mov
cmpl
mov
mov
dec
fwait
adc
int
out
mov
mov
cwtl
dec
aam
fstpt
scas
icebp
dec
adcl
test
push
sub
mov
and
mov
js
je
scas
inc
add
ret
inc
xchg
cltd
add
inc
daa
xor
insb
negb
pop
int3
add
xchg
mov
mov
dec
lahf
dec
jb
push
mov
out
pop
aam
adc
xor
adc
and
pop
jo
les
aaa
xchg
or
push
inc
jl
inc
cs
xor
icebp
out
rorl
shl
outsl
cmpsl
dec
imul
incl
cwtl
jne
fdivrl
push
imull
adc
dec
push
add
into
stc
xadd
inc
js
ss
out
lods
or
mov
jmp
and
adc
push
adc
jecxz
cmc
scas
mov
nop
aaa
sub
bound
movsb
fildll
dec
cmpsb
cmpsl
and
in
mov
pop
ret
int
mov
mov
test
lahf
jle
cli
adc
sbb
jbe
xlat
jecxz
movsl
in
push
fadd
call
sbbb
out
mov
je
ja
jae
lods
inc
push
mov
leave
repnz
data16
test
movsl
add
jbe
push
and
jle
mov
ficompl
add
mov
jmp
cltd
jae
sti
cwtl
cmp
cmp
adc
xchg
lods
mov
ja
jae
inc
mov
push
fistpl
arpl
out
ljmp
push
adc
or
fwait
push
aaa
leave
imul
fisttpll
cwtl
adc
dec
cmp
or
lret
ja
adcb
nop
xor
inc
pusha
imul
repz
mov
inc
cmpsl
addr16
in
xchg
rclb
push
push
push
add
xor
mov
arpl
dec
rcrl
lahf
enter
test
mov
lods
les
sbb
mov
sbb
xchg
fsubp
mov
jp
fimuls
iret
mov
xor
xor
loop
inc
mov
jb
add
jno
cs
shrb
repnz
adc
repz
mov
xchg
sub
pushf
adc
jg
and
push
xor
cmp
jmp
cmpb
cmp
mov
dec
hlt
dec
mov
hlt
ret
lret
shll
addr16
sub
mov
out
insb
ljmp
popf
sub
jmp
sub
and
gs
push
stos
maskmovq
negl
jp
lea
mov
or
inc
fxch
push
movsb
cmp
inc
pop
cmp
inc
mov
push
push
push
hlt
cmp
jp
mov
dec
mulb
shrb
stos
loop
int3
pop
inc
jp
fcomip
lods
shll
bound
scas
iret
rcl
inc
outsb
xchg
daa
push
sbb
movb
out
mov
jle
outsl
pusha
and
repz
cld
clc
cmp
fldl
jmp
inc
mov
mov
mov
pop
jnp
sbb
push
addr16
cmp
inc
jnp
sti
mov
xor
or
cmpsb
jbe
aaa
testl
push
add
sbb
call
mov
adcl
jo
outsb
mov
dec
nop
sub
call
enter
adc
inc
pop
add
push
test
mov
jmp
lock
mov
jns
add
or
fcoml
fs
mov
dec
push
lods
sbbl
mov
sbb
loop
and
lcall
pop
push
lods
cmp
mov
and
clc
push
leave
or
mov
mul
sarl
mov
into
cld
sub
stc
frstor
es
pop
inc
and
mov
inc
push
xchg
fildll
mov
pop
jnp
mov
ret
into
jmp
out
hlt
xchg
dec
sarl
sbb
mov
daa
rol
sub
inc
inc
lcall
cmpsl
mov
fcos
add
sti
push
sbb
cmpsb
mov
fcomi
cli
lcall
mov
aad
movsb
iret
fstpl
pushl
pop
sbb
shlb
vshufpd
cmp
int
fs
sub
inc
pop
cmp
or
loop
scas
pop
call
inc
mov
loope
mov
insb
inc
inc
add
cmp
sub
xor
dec
ficoml
lock
adc
pop
test
addl
lock
mov
arpl
in
mov
shlb
xor
nop
jl
jecxz
fisubrl
scas
movsb
fstpt
cld
enter
jmp
lcall
icebp
adc
dec
inc
rep
jg
ret
sub
rcrb
movsb
std
jl
mov
xchg
fisubs
xor
add
jecxz
fmulp
rcl
push
push
in
lahf
and
or
mov
arpl
popa
addr16
ja
fnsave
lds
int3
js
push
jl
pop
mov
jle
lcall
mov
inc
call
mov
clc
cmp
cli
xor
mov
scas
xlat
add
aas
jg
add
loop
jmp
or
xor
loop
in
pop
out
outsb
xchg
mov
and
cmp
xor
incb
dec
fwait
or
push
inc
fisubrs
pop
cmp
and
push
sti
dec
add
loop
sub
xchg
aaa
cmp
mov
adc
insl
int3
jle
add
pop
pop
rcr
mov
movsl
cmp
call
sub
test
insl
icebp
scas
xchg
loope
sub
daa
pop
jnp
mov
test
stos
sbb
pop
inc
stos
sbb
add
rorb
xchg
int
adc
dec
je
and
ret
or
push
mov
lds
mov
inc
movsb
pop
cmpsb
dec
insb
mov
les
call
push
dec
mov
call
lods
push
jo
repz
mov
fidivrl
mov
adc
stos
fwait
cmc
push
add
test
je
jmp
inc
cmc
popa
push
movsl
icebp
arpl
jge
cmpb
adc
mov
popa
mov
pop
pop
xor
sbb
xchg
pop
loope
fcmovu
sbb
lods
loopne,pn
jne
or
stos
xchg
mov
xor
stos
arpl
xor
sahf
rol
push
mov
adc
xor
jle
mov
ja
int
push
stos
sbb
int3
mov
inc
aam
xchg
movsb
pop
pusha
out
movsl
mov
aam
and
jecxz
nop
sbb
movsl
push
aam
lret
push
push
dec
ss
arpl
fmuls
jmp
push
scas
xchg
in
mov
adc
imul
xchg
mov
mov
shlb
in
hlt
sub
sar
cmp
xlat
imul
sbb
sbb
jg
pop
nop
xchg
jl
xor
mov
lcall
jmp
rcrb
xor
insb
and
cmp
sahf
mov
data16
lds
dec
mov
daa
test
call
push
adc
fwait
push
push
fsubl
push
sbb
lret
stos
push
mov
dec
ss
lahf
stos
push
add
and
stos
insl
test
fmul
mov
xchg
shll
lcall
pop
push
xchg
xchg
jle
cmpsl
and
add
pop
sub
into
jae
test
notl
mov
imul
pop
add
fstps
inc
cmp
fcomi
loope
fisubs
jo
sahf
jb
testb
das
or
cmc
sub
sub
gs
push
dec
mov
mov
int3
jmp
inc
cmp
insl
adc
int3
mov
sahf
sub
shlb
out
mov
popa
out
add
insl
cwtl
je
stos
sbb
clc
test
fs
inc
and
lea
mov
jne
dec
scas
pop
int3
dec
adc
push
mov
das
sub
mov
imul
hlt
fld
loopne,pn
nop
dec
jae
mov
mov
in
cmp
push
pop
mov
shlb
push
mov
dec
gs
xlat
sub
jge
cs
inc
fstpt
mov
imul
pop
enter
inc
jmp
or
dec
mov
fsts
and
mov
test
fcoms
xchg
repnz
das
popa
lcall
scas
test
lock
push
dec
movmskps
lret
and
jecxz
xchg
sub
fcompl
cltd
mov
push
xchg
daa
cmp
scas
jne
push
movsl
mov
pop
jg
jl
mov
add
sbb
shll
sub
xor
mov
jbe
fisttpl
sarl
adc
std
sub
jg
push
jbe
shrl
lahf
jnp
xorl
xchg
add
stos
or
xchg
nop
push
movsl
insb
cmpsb
mov
popf
stos
xchg
adcl
int3
xchg
sub
push
push
insb
push
add
pop
mov
cmp
aad
mov
mov
imul
xor
mov
cmp
sub
es
shrb
add
pop
js
ljmp
in
pop
mov
xchg
inc
cmp
fsubs
jge
test
mov
sbb
addr16
mov
addr16
jecxz
addr16
mov
bound
mov
mov
jecxz
clc
icebp
shlb
cmc
ja
pop
fstp
outsb
xor
jno
jnp
jecxz
leave
ljmp
mov
pop
add
xor
orl
jo
mov
mov
fisubrs
xchg
in
inc
jmp
popf
daa
and
cmc
cmpsl
push
loopne
fwait
outsl
or
push
pop
shrb
xor
push
mov
add
sarl
insl
mov
dec
ja
push
xor
int3
pop
out
push
js
hlt
inc
cltd
les
add
and
cld
jecxz
push
inc
sbb
movhps
add
loope
mov
jb
sbb
test
xchg
fistl
mov
cld
mov
or
jno
dec
sbb
icebp
lds
mov
mov
pop
aas
push
or
sub
icebp
loop
mov
cmp
cmp
sbb
leave
adc
or
inc
popf
imul
pop
and
les
rcll
dec
or
clc
mov
repz
dec
rep
push
sub
mov
lcall
repnz
filds
push
jl
sbb
and
out
jnp
mov
in
xchg
pop
cwtl
mov
sarb
pop
mov
outsl
ror
arpl
xchg
xlat
jb
pop
pop
ret
andb
addb
roll
jb
shlb
xor
mov
out
push
icebp
and
dec
clc
mov
fidivl
rolb
sub
inc
inc
adcb
ljmp
xor
cmpsb
test
jo
in
mov
dec
push
nop
sbb
pop
pop
sbb
adc
mov
pusha
mov
mov
shlb
aaa
add
dec
lock
das
lahf
or
sub
push
pop
pop
xchg
cmpsl
test
xchg
subl
lea
mov
mov
mov
push
jg
clc
xchg
pusha
xor
int3
mov
cli
adc
hlt
mov
iret
out
inc
xor
jae
xchg
bound
fcmove
dec
iret
push
inc
sub
jecxz
mov
lds
test
into
out
or
std
xchg
scas
push
sbb
add
hlt
mov
sub
lret
and
loope
rorl
jo
hlt
mov
pop
mov
push
cs
push
icebp
sub
cmp
dec
leave
xchg
test
cmp
pop
jns
or
or
or
lods
sub
push
sti
loopne
ret
adc
sub
fucomp
out
mov
shr
mov
aaa
lea
stos
jle
filds
leave
inc
mov
dec
adc
daa
cmc
stos
xor
push
je
xor
push
add
pop
or
mov
add
cltd
popa
mov
xchg
cwtl
sub
pop
js
jnp
pop
cmpsl
lods
addr16
dec
mov
iret
push
cld
sarl
mov
xchg
mov
lahf
jo
or
das
mov
js
jp
pusha
cltd
mov
iret
sbbl
popw
inc
xor
add
lock
nop
adc
dec
sbb
mov
mov
lret
imul
ret
outsl
xchg
jp
sbb
sub
loopne
jmp
xchg
aaa
jle
pop
or
jl
fst
pop
xchg
add
out
orb
xor
xchg
loope
in
nop
arpl
ficoms
cmc
aam
dec
repz
scas
mov
test
push
shrl
pop
adc
pop
lcall
and
in
imul
push
aas
xchg
stos
or
les
jnp
sahf
repnz
or
and
pop
xor
lret
dec
jno
and
add
mov
insl
enter
cmp
sub
test
fdivl
dec
jecxz
xlat
sub
aas
fsts
lock
jae
inc
lods
xchg
sub
in
jbe
int3
stc
cltd
int3
fsubr
mov
xorl
lret
pop
imull
push
lea
fcomp
sarl
js
xchg
lods
sub
stc
cmp
js
dec
fbstp
jl
inc
bound
adc
and
lock
loope
rcrl
sbb
and
pop
rcr
xor
cwtl
adc
data16
xchg
push
outsl
adc
in
clc
lds
pop
out
clc
or
mov
stos
inc
xchg
pop
sub
cld
aas
in
movsl
pop
and
aam
insb
ja
dec
ret
daa
fldl
lret
mov
xor
and
aas
testb
mov
scas
bound
popf
and
push
mov
daa
push
popf
sbb
repnz
pop
aas
mov
push
dec
xchg
insl
test
imul
jge
adc
fcmovnb
cmp
lret
aam
push
in
lock
jp
fcoms
cmpsl
mov
cmp
imul
mov
mov
stc
sub
adc
lock
test
popa
inc
sbb
mov
jnp
cmp
jmp
out
xchg
xor
and
mov
mov
pop
jo
rclb
inc
adc
mov
mov
inc
dec
inc
jnp
fs
fists
mov
imul
mov
jo
mov
sahf
or
adc
shlb
mov
mov
mov
sbb
jo
mov
testl
daa
std
into
and
test
sub
loope
shlb
lds
pushf
repz
jl
push
outsl
pop
scas
mov
dec
scas
mov
push
int3
pop
in
pop
xor
add
cmpsl
jp
push
fldt
push
push
sbb
rclb
aaa
add
adc
in
dec
dec
mov
nop
scas
out
iret
ja
fidivl
test
test
jecxz
push
rcl
xor
loop
mov
adc
xor
inc
xchg
je
stos
cmp
mov
adc
dec
xlat
push
jp
or
and
fmul
ret
mov
or
pop
lcall
inc
mov
or
mov
sub
cltd
dec
insb
test
stos
ljmp
pushf
in
jnp
icebp
in
div
stos
xor
sub
push
mov
mov
and
icebp
cmp
cmp
outsb
arpl
mov
dec
add
adc
loopne
lea
mov
sahf
jle
mov
mov
arpl
mov
cmp
jge
aam
imul
stos
jne
fwait
adc
xor
push
addr16
xor
filds
popa
popf
in
aas
lcall
das
mov
xchg
mov
lcall
ss
mov
lret
xchg
ffreep
clc
sbb
call
fnstsw
mov
jo
test
and
push
popf
iret
fstpt
loopne
rcl
punpckhwd
aas
mov
ljmp
sub
mov
repnz
mov
js
js
cli
mov
adc
into
ret
mov
fiaddl
inc
push
adc
add
rcl
mov
sbb
mov
cs
push
ss
cmpsl
jns
dec
lret
cmp
loop
xchg
mov
inc
jnp
es
mov
mov
inc
pop
push
dec
dec
mov
shlb
adc
push
shlb
movb
pop
mov
jmp
inc
push
nop
je
add
adc
sar
lret
sub
adc
popa
adc
cltd
std
mov
xchg
jae
pop
dec
ret
out
jns
fcoms
cmc
loope
jnp
push
xchg
mov
jae
addb
inc
cli
xchg
cltd
mov
into
and
push
dec
mov
mov
movsb
adc
dec
pop
popa
arpl
jge
ds
mov
mov
psubb
mov
mov
and
cli
and
rcr
lcall
repz
inc
pop
shr
lret
lret
movsb
dec
sbb
gs
shrl
gs
pusha
mov
add
decb
push
aas
lds
cmpsb
int
pushl
cmp
scas
jbe
int3
pushf
xchg
cmp
mov
mov
imul
test
xor
shlb
cmp
inc
sahf
lret
mov
movsl
dec
xchg
mov
xchg
stc
add
add
pop
lcall
add
shl
jo
ss
inc
mov
mov
mov
pop
roll
test
sub
xlat
mov
xchg
int
out
push
cmp
xor
pop
pop
xchg
enter
push
pusha
pop
and
pop
roll
sbb
scas
aas
js
push
mov
das
ficoml
add
idiv
cmp
shrl
mov
xchg
mov
clc
cwtl
xorl
test
mov
pop
out
in
mov
dec
in
ret
rclb
xchg
cmp
insl
or
sbbl
push
in
xor
mov
or
lcall
or
dec
xor
outsb
xchg
adc
imul
push
xor
lds
jno
push
scas
adc
or
push
mov
jecxz
push
cmp
sub
fildll
push
adc
pop
fcmovb
cld
je
jmp
or
mov
lea
stos
push
push
ss
aas
adc
inc
data16
xchg
cmp
shl
pop
add
pushf
scas
inc
mov
pop
sbb
mov
inc
jge
mov
pop
inc
enter
movsl
lret
push
loope
pop
stc
inc
popf
push
mov
push
out
int3
repz
or
cwtl
aaa
aam
fmuls
inc
fptan
test
das
and
sub
outsl
add
shrb
lahf
adc
mov
cli
add
add
addb
out
imul
xor
pop
stos
iret
pop
loopne
sbb
adc
in
rcrl
dec
pop
repz
mov
push
jbe
hlt
add
sub
mov
mov
mov
shlb
stos
shlb
and
rcrb
in
mov
gs
insl
aaa
and
sub
mov
xchg
jno
xor
movsb
inc
jl
iret
jb
iret
mov
mov
outsl
out
stos
push
cmp
push
lahf
icebp
pop
loope
mov
jp
jae
je
fiadds
mov
fidivs
sub
pop
popa
jae
inc
negl
push
lcall
and
testl
push
cmp
repz
sahf
cmpsl
cmp
and
add
jae
cwtl
cmp
outsb
jnp
pop
repnz
xchg
loopne
cltd
arpl
pop
fsubr
jae
scas
mov
fwait
mov
add
in
rcrb
dec
adc
adc
lcall
fwait
loope
iret
or
add
push
icebp
js
add
jmp
sub
mov
bound
jl
icebp
push
or
insl
ret
ss
or
xchg
insl
imul
jno
loopne
fcompl
cmp
fdivrs
cmpsl
sub
stc
int
es
bound
xchg
mov
ret
outsb
rcrl
add
and
push
push
sarl
mov
mov
mov
jp
sbb
out
aad
or
divb
ret
cmp
outsl
xchg
xor
or
stc
xor
nop
fsubr
sti
push
das
into
xchg
fisubrs
lret
dec
push
mov
pop
movb
in
add
std
jmp
inc
jmp
xor
out
inc
scas
sti
insb
ret
fisubrl
dec
push
gs
ret
push
or
out
sarl
sub
das
xlat
call
jo
icebp
loopne
cmp
pop
and
add
es
stos
les
jp
push
pop
add
or
es
pop
push
mov
inc
popf
fwait
loopne
add
js
cmp
pop
in
sub
ds
out
mov
loope
mov
test
cmp
pop
jo
dec
insb
inc
nop
add
punpckhdq
sbb
cli
xor
es
je
jb
imul
je
cmpsl
pop
push
lret
sbb
imul
xor
lret
push
push
and
and
sbb
bound
insl
jle
cmp
inc
data16
xchg
dec
mov
xchg
lcall
rcrb
add
mov
and
push
jnp
cmp
je
jb
arpl
and
push
sahf
arpl
pop
clc
mov
jl
dec
mov
das
movsl
jp
lahf
inc
in
mov
pop
push
push
or
sbb
mov
mov
mov
iret
xor
mov
dec
mull
push
add
mov
fnstcw
cmpsb
testb
negl
rcrl
mov
push
sbb
mov
nop
pop
ret
mov
aaa
loope
outsl
mov
xchg
jne
mov
push
stos
mov
imul
jl
push
aas
xchg
inc
cmpsl
mov
outsb
cmp
fstpl
cld
add
lret
mov
jns
lods
jg
imul
pop
push
pusha
out
sub
cmp
out
enter
pop
movq
ljmp
cmp
mov
mov
outsb
push
iret
jae
filds
inc
les
shlb
add
jae
and
cli
popf
jbe
jmp
mov
out
xchg
mov
dec
xor
sub
rclb
jno
rorb
lahf
mov
shlb
inc
and
jl
and
daa
sub
sbb
fstpl
push
aad
mov
cmp
rorb
enter
xor
add
dec
cwtl
fcmovb
push
dec
leave
and
jge
imul
aad
mov
sub
in
push
push
mov
stos
push
in
int3
add
adc
xchg
mov
out
test
push
bound
mov
jnp
jecxz
mov
pop
movsl
xchg
pop
neg
lds
adc
inc
mov
fwait
add
mov
les
arpl
stos
clc
sbb
repnz
xorl
stos
pop
jne
lods
sbb
adc
sub
push
into
popa
adc
addl
and
dec
xlat
mov
xchg
sbb
insb
cmp
mov
addr16
sub
std
loope
xchg
cmp
pop
cmp
ljmp
add
mov
ljmp
inc
xchg
cld
dec
fstpt
or
dec
push
in
pop
mov
je
movsb
stos
sub
cmp
lock
enter
add
mov
cmpsb
cmpsb
lcall
jg
sub
arpl
mov
mov
shll
cmp
es
push
fdivrs
daa
js
cmpsl
lds
ljmp
mov
movsb
lds
and
pop
jp
data16
mov
aas
enter
inc
jno
sbb
sti
sub
shrl
jge
pop
iret
xbegin
inc
pushf
nop
mov
out
std
sub
call
inc
ss
xchg
faddl
and
fldcw
push
hlt
jp
gs
jb
cs
lock
test
inc
cmc
fs
int3
or
jp
xchg
inc
retw
je
jb
push
into
iret
mov
rcrl
lock
notb
adc
jo
push
scas
xchg
or
lods
mov
xor
or
scas
jae
inc
push
daa
and
bound
xchg
mov
sbb
mov
jnp
xchg
mov
mov
mov
mov
sti
and
adc
imul
sub
loopne
lock
xchg
sbb
mov
cltd
in
or
push
push
adc
xchg
mov
mov
loopne
cmp
mov
dec
push
push
mov
pop
mov
mov
dec
push
loope
jbe
inc
adc
mov
cmp
cmp
mov
inc
dec
scas
or
jb
xor
jl
xchg
dec
mov
pop
jb
sbb
test
inc
push
into
cmp
imul
movsl
xor
rolb
add
ds
test
adc
push
push
add
clc
enter
cmp
push
cwtl
fwait
and
les
lcall
dec
xchg
popf
sbb
in
into
mov
dec
in
pusha
xchg
rcrl
bound
clc
sub
cltd
shlb
shl
nop
das
mov
stos
add
mov
xor
xor
pop
add
fnstenv
xor
stos
push
dec
negb
iret
or
test
fcmovnbe
dec
sbb
sub
inc
inc
mov
cs
popf
arpl
cmc
jg
movsl
test
movsl
jns
push
rcll
dec
mov
mov
xchg
sub
lock
pop
out
popa
sahf
and
bound
lods
in
push
cmp
repnz
jecxz
cmpsl
xchg
fists
cs
addr16
xlat
push
jno
jecxz
cmp
cmpsb
loopne
dec
sub
test
jg
in
and
js
jae
sti
jbe
push
dec
mov
xor
dec
adc
push
aam
dec
gs
pop
push
push
cmpsl
arpl
xchg
push
repnz
out
loope
or
rcr
push
pop
mov
test
in
cld
out
pop
in
insl
pushf
imulb
in
mulb
or
dec
in
repz
loop
sti
mov
nop
adc
in
sub
aas
lcall
xchg
inc
pushf
mov
and
andl
shl
arpl
jns
rcrl
fs
ffreep
cmpsl
jae
movsb
push
push
lret
mov
mov
int
loopne
jb
or
cmp
jg
sub
push
cmp
jne
outsl
xor
adc
ss
icebp
xor
push
clc
inc
sub
xor
lods
in
popf
fwait
std
add
and
jnp
jl
sbb
and
inc
dec
inc
ljmp
orl
dec
enter
movsb
jne
jp
or
jo
mov
mov
mov
xor
inc
aas
dec
lret
pop
pop
dec
and
sub
mov
xor
out
je
mov
and
pop
xor
adc
dec
push
add
jl
xchg
add
loope
xor
fisubs
lret
aaa
push
fcomip
xor
push
mov
xor
mov
rcll
inc
jo
insb
jnp
dec
ret
out
xor
sbb
movsl
sbb
insb
fildl
loope
stos
mov
add
push
pop
inc
fsubs
xchg
inc
pop
jp
ret
jno
movsb
jmp
test
inc
call
test
mov
jns
push
sbb
xchg
lods
orl
lods
in
xorl
xchg
push
mov
int3
and
into
inc
cmpsb
pop
or
mov
add
rcl
pop
iret
adc
hlt
int
jp
mov
jl
pop
out
dec
rorl
add
mov
cmp
sub
aam
int3
gs
data16
xchg
dec
cmp
adc
dec
cmp
int3
push
mov
cmp
cmp
clc
bound
or
cmp
loop
mov
sub
ss
cmp
inc
xor
dec
cld
xlat
popf
push
fsin
mov
ss
test
ret
rcll
out
sbb
das
jmp
cmp
pop
mov
call
mov
ja
cld
cmp
lock
or
pop
and
fdivs
cmp
imul
sti
rorl
ss
sub
in
xor
xor
adc
xchg
sbb
stos
xchg
push
shld
sub
xchg
scas
cli
movsb
push
test
js
push
and
imul
jg
inc
pop
mov
push
and
cli
bound
mov
inc
fnstenv
dec
push
out
std
add
dec
ss
push
ret
jnp
int3
mov
rorl
sahf
test
daa
imul
arpl
cld
adc
insb
adc
ret
in
cmp
pushf
adc
int3
dec
lret
fs
mov
in
sub
xchg
ffree
movsl
mov
or
push
mov
jg
mov
cltd
lret
xor
mov
js
or
in
sbb
testl
vpsubw
ss
outsb
mov
jno
test
xchg
xor
xor
adc
leave
lea
int
lock
push
push
cmp
add
mov
ret
fnstsw
jle
int3
xchg
loop
aad
dec
push
dec
cmc
mov
xor
mov
mov
pop
xor
aas
in
add
jbe
lret
fs
addps
xchg
cmp
pop
inc
and
int3
jae
jno
les
aad
bound
xchg
push
xlat
inc
mov
jae
loopne
push
popa
mov
clc
orl
rorl
shll
xor
add
cmp
add
pushf
xor
or
les
add
mov
data16
aam
mov
mov
or
clc
pop
loope
jge
jo
fwait
xchg
mov
ret
clc
lock
dec
rcrl
cltd
push
pusha
out
cmp
pop
fistpll
push
aam
je
mov
cmc
push
das
push
imul
inc
mov
scas
enter
call
xor
loope
mov
pop
ja,pn
lds
lods
ret
jmp
dec
jmp
cs
adc
nop
xchg
lods
inc
mov
pop
and
lods
xchg
test
scas
aaa
mov
in
leave
or
pop
insb
jle
adc
cmpsl
xchg
sub
jg
pop
push
sub
lahf
mov
sub
cmpsl
sbbb
std
mov
aad
xor
dec
mov
or
arpl
jp
sbb
push
jnp
xchg
out
pop
pusha
ljmp
fldcw
xchg
inc
repz
push
push
jbe
lods
orb
pop
and
andl
in
inc
das
dec
fwait
cmp
fstpt
dec
xchg
lcall
shrl
cmp
es
mov
push
push
xchg
addr16
cwtl
sbb
sub
push
xchg
cwtl
bnd
scas
sbb
or
or
jnp
xchg
mov
mov
lds
sbbl
sbb
and
faddl
repz
dec
popa
xchg
jle
jnp
gs
imul
out
fiaddl
cmp
stos
lods
sbb
add
pop
out
fdivp
shll
aas
pop
push
ljmp
jo
add
pop
popf
dec
ret
lea
ret
inc
out
loopne
loopne
jmp
jl
jo
pop
jecxz
out
sub
mov
lock
dec
mov
dec
js
or
push
in
and
neg
out
and
pop
repnz
jp
scas
xor
xchg
adc
xor
loopne
dec
je
test
aas
cli
shl
sub
js
call
test
xchg
sbb
dec
iret
daa
stc
popf
sbb
jmp
lahf
mov
and
adc
xchg
sbb
add
les
xor
les
pop
add
pop
incb
divl
outsl
test
pop
hlt
xor
xchg
adc
pusha
setb
cld
pop
xchg
aad
push
cmp
and
subl
xor
xor
xchg
jo
dec
mov
adc
aas
test
shlb
push
cmpsl
push
sahf
fs
je
adc
sub
inc
pop
shll
jg
inc
xor
sub
jmp
mov
cs
nop
ljmp
lods
cmp
add
sbb
xchg
jo
lds
stos
jle
mov
iret
cmp
inc
sti
fcom
xchg
push
negl
dec
repz
cmp
xor
lea
cwtl
out
jecxz
mov
mov
sbb
mov
push
dec
xchg
fstl
leave
cld
and
cmpsl
push
mov
sub
push
decb
test
orl
dec
pop
insl
jbe
jbe
jns
mov
icebp
and
push
adcb
idivl
loop
jmp
mov
shll
dec
sbb
sahf
lcall
push
jbe
push
sub
enter
jno
rolb
xor
cmp
mov
loop
xor
sbb
xchg
stc
mov
stos
sub
dec
pop
outsl
out
test
xor
cmp
and
jns
inc
cli
pop
movsl
xchg
cli
js
sarl
jl
leave
jbe
test
mov
sub
call
pop
pusha
and
cmpsl
xchg
xor
lahf
movsb
push
gs
enter
fwait
jbe
insb
dec
arpl
int
xchg
mov
push
hlt
ret
call
and
mov
fs
dec
sub
orb
addr16
push
add
lahf
dec
mov
loop
jne
pop
mov
call
scas
movsl
nop
xlat
sub
and
popa
out
sub
shrl
mov
mov
xor
hlt
and
mov
and
inc
pop
mov
pop
xchg
jb
jbe
jmp
int
test
mov
mov
mov
enter
xor
mov
dec
das
mov
lods
xchg
ss
cmp
dec
jge
jmp
adc
push
and
ja
push
stc
jae
xchg
mov
cmpsb
mov
stc
sub
mov
add
shl
mov
xorl
ret
dec
test
jae
or
fwait
xchg
or
testl
fldenv
adc
out
cmp
test
imul
lahf
popl
xchg
int3
or
sub
jne,pn
cmp
inc
mov
fldenv
aaa
repnz
movsl
loopne
push
add
test
in
dec
xchg
adc
mov
sbb
mov
pushf
cltd
pop
pop
add
mov
push
repz
insb
movsl
and
sbb
and
std
in
inc
repnz
push
sub
inc
outsb
out
faddl
out
fldt
addl
adc
inc
pop
sbb
mov
push
cmc
ficoms
sub
sahf
fisubs
xorb
ret
mov
dec
xchg
mov
aam
int3
incb
dec
cli
mov
imul
mov
les
lods
and
cmpsb
pop
in
pop
mov
insl
repnz
push
out
jl
out
jp
fidivl
inc
jecxz
inc
inc
mov
adc
inc
jle
or
mov
lcall
popl
outsl
aas
repz
xchg
inc
jp
push
sbb
int3
pop
mov
subb
jne
sub
js
sbb
dec
mov
outsl
aam
or
jecxz
lods
stos
aam
cmp
inc
lods
in
sbb
dec
mov
fsubr
mov
xchg
pusha
cmp
fisubrl
movsb
lcall
add
repnz
fst
mov
xchg
das
lret
jl
mov
and
mov
add
repz
dec
xchg
cmp
mov
dec
sub
push
insl
inc
aad
xchg
push
sbb
add
xor
test
aaa
cli
jp
cli
add
jecxz
dec
dec
popf
lret
shr
lock
pop
xchg
int
aad
popa
inc
ror
lods
mov
movsl
int3
les
fmul
adc
nop
pop
cmp
in
icebp
xchg
add
ret
mov
outsb
lcall
in
mov
cmp
xor
out
dec
js
sub
cmpsl
sub
pop
sub
push
dec
adc
mov
notb
or
xchg
repnz
insl
and
pop
gs
ljmp
iret
insl
or
dec
add
pusha
popf
addl
fstpl
and
xchg
and
mov
fbstp
jae
xchg
xchg
or
mov
sarl
and
jbe
add
cld
sbb
cli
in
call
mov
dec
cmp
mov
jmp
mov
in
xchg
rcr
mov
lcall
sbb
fimuls
orl
pop
test
push
call
mov
mov
cmp
sbb
jae
and
mov
jns
add
bound
fcoms
in
mov
idivl
mov
cltd
dec
outsb
sub
mov
add
push
xor
rcl
out
stos
imul
icebp
sub
mov
test
cli
lods
dec
int
pop
mov
icebp
dec
cld
mov
sbb
test
sbb
bswap
adc
xorb
xor
jns
in
cld
pop
push
xchg
jle
xchg
sub
mov
dec
out
stc
dec
cmp
gs
int3
cltd
pop
out
mov
xchg
xor
stc
dec
xor
cmp
fs
mov
cmp
adc
jbe
fcompl
out
jo
push
cs
mov
testb
mov
dec
xchg
mov
dec
sub
inc
mov
lock
inc
lahf
stos
sti
mov
or
mov
push
negl
push
lcall
call
xlat
sub
sub
pushf
push
ja
ja
mov
mov
lods
mov
sub
outsl
shlb
dec
pop
inc
cmpsb
cltd
dec
jl
cmovnp
jecxz
nop
loopw
call
push
enter
lret
adc
mov
jb
add
sub
lret
lcall
xchg
inc
call
loope
mov
les
xchg
push
pop
into
lret
fldt
stos
sub
mov
sub
push
ds
mov
pop
out
std
mov
nop
fsubr
stos
dec
flds
xchg
push
out
stos
xor
movsl
lcall
cli
cwtl
sub
lea
leave
jo
fisubrs
pop
ret
test
add
pop
xchg
pop
xor
mov
and
inc
lock
dec
or
push
mov
imul
sub
adcb
adcl
mov
mov
addr16
inc
scas
into
test
xchg
popa
repz
les
cld
inc
add
shll
push
lret
repz
adc
cmp
orb
jg
imul
sub
xor
push
push
iret
mov
and
ret
ja
cwtl
idivl
xchg
repnz
data16
stc
xor
clc
out
sbb
mov
and
scas
mov
popa
or
cmp
leave
sbb
or
scas
ret
xchg
sbbl
mov
addr16
test
cld
xor
mov
push
popl
sahf
and
xor
add
xor
mov
testl
add
jne
inc
mov
sarl
mov
div
jp
jmp
je
aam
add
fs
lods
xchg
mov
and
lret
into
inc
cmpsb
inc
mov
or
and
fwait
jnp
xchg
je
mov
xor
pusha
in
call
orb
ds
popa
fistpl
pop
jbe
cli
adcl
out
push
cmpsb
sti
enter
inc
insl
add
pop
fsubl
adc
mov
rcll
js
dec
inc
pop
mov
icebp
push
cmc
or
enter
jl
push
roll
les
push
inc
aaa
mov
push
loope
sbb
lock
loope
and
pop
xor
gs
ret
hlt
xor
xlat
sbb
loope
jae
ret
test
out
pusha
fsub
outsl
stc
cld
js
jg
daa
or
push
xchg
addb
fdivrl
inc
push
pushf
cmpsl
fwait
xlat
jle
mov
cmp
flds
fcomps
roll
out
scas
loop
out
clc
nop
pop
cmp
bound
xchg
mov
fdivr
cs
or
test
xchg
dec
int3
dec
incb
or
ss
mov
nop
dec
sub
cltd
pop
pop
hlt
xor
sbb
jle
iret
movsl
inc
xchg
les
dec
pop
fwait
mov
sbb
inc
xlat
popl
imul
pusha
scas
loopne
jecxz
insl
pushf
imul
icebp
fnsave
dec
jg
cltd
popa
sbb
cwtl
stos
jecxz
or
jns
adcb
inc
test
xorl
xchg
and
fbld
test
ss
test
and
add
dec
xor
out
inc
sub
and
aad
pop
push
cs
icebp
push
movsb
icebp
sbb
stc
lret
push
jg
aas
mov
mov
cs
push
and
lahf
and
loope
mov
jmp
fcos
pop
fmuls
sub
jmp
ja
and
adc
mov
test
push
js
cmc
loope
sub
bnd
inc
or
add
jg
sbb
testb
sub
cmpsb
push
jns
je
push
sub
push
sbb
lcall
dec
movsl
test
xchg
js
cmp
mov
enter
jne
cmp
jo
int
mov
popf
push
xchg
mov
ja
imul
xor
js
popa
mov
stos
movsb
icebp
dec
aad
testb
daa
dec
jnp
jle
sahf
scas
imul
pop
sbb
ds
mov
push
mov
add
pop
ret
adc
or
cwtl
scas
in
ljmp
jno
mov
repnz
hlt
jb
addr16
xor
mov
lods
bound
xchg
outsl
dec
pop
mov
scas
cmpsl
in
pusha
loope
aas
fcompl
shr
push
and
mov
mov
and
mov
mov
jle
ret
repz
int3
aaa
pop
scas
inc
popa
dec
in
gs
outsb
imul
mov
test
stos
xchg
std
push
cwtl
jnp
inc
mov
sti
clc
inc
and
mov
pop
mov
out
into
fstpl
pop
lds
or
fisubs
scas
icebp
popf
into
cld
aad
lods
fdivrl
movsl
jg
and
loopne
lahf
push
movsb
jle
add
inc
mov
mov
outsl
push
or
sbbb
popf
push
xor
mov
push
gs
pushf
xor
lds
ret
sahf
cmc
dec
movsl
cmpsb
push
xchg
test
out
pop
in
push
add
outsl
shll
or
jge
lods
jmp
xlat
js
int3
data16
cmpsb
iret
xor
pop
push
ds
lcall
jl
mov
cmp
push
pusha
loope
inc
imul
add
push
cld
aad
pop
aad
mov
lods
imul
xchg
sbb
mov
xchg
sub
fdivl
movl
pop
add
test
jmp
imulb
rolb
pusha
adc
mov
mov
cltd
push
addr16
xchg
lods
sbb
loope
adc
cmp
in
push
incl
jecxz
mov
lahf
push
test
data16
rol
loope
cli
dec
fbld
inc
std
scas
jg
cmpsb
mov
jo
and
jg
ret
or
push
mov
or
or
dec
jg
es
nop
int3
stc
das
or
hlt
pop
lods
les
popf
sbb
ret
mov
testb
stc
lock
mov
adc
rclb
push
ljmp
scas
push
or
shr
fsub
sbb
pop
or
push
xor
mov
dec
push
sbb
jnp
movsb
rcl
scas
rol
imul
in
sub
movsb
das
fwait
pop
mov
ss
jbe
cmpsb
pushf
cmpsb
and
inc
mov
dec
cmp
enter
sub
mov
add
inc
in
inc
sub
adc
js
adc
cmp
scas
negb
mov
or
mov
push
in
cmpsl
dec
aaa
addr16
add
ja
mov
mov
mov
xor
call
or
cmpsb
mov
notb
cmc
cmp
cmpsl
out
addr16
imulb
cld
cmp
jmp
das
xchg
mov
adc
cli
aad
into
add
adc
xor
mov
mov
daa
xchg
jecxz
std
stos
sbb
decl
add
jae
std
mov
out
fadd
in
inc
lods
jmp
sub
lds
out
jns
xor
dec
pop
dec
mov
aad
add
lds
dec
mov
add
arpl
aas
jo
divb
pop
add
das
add
adc
iret
popf
lret
jno
xor
sahf
lret
sbb
sub
jmp
out
enter
sub
cmp
add
xor
popa
mov
jo
sbb
rcrl
in
mov
gs
out
into
mov
pop
cmp
inc
rcll
cmp
xor
notl
fdivrp
pop
lock
push
mov
xchg
xchg
xchg
repz
fldcw
ss
outsl
int3
ja
pop
adc
push
mov
repz
loopne
scas
stc
dec
pushf
movsl
push
std
xchg
mov
cltd
loopne
mulb
imul
jg
repnz
loop
xor
aam
pop
cli
insb
xor
mov
scas
push
loope
mov
mov
imul
iret
mov
dec
stos
jecxz
les
in
mov
lret
push
movsb
clc
mov
stos
and
fs
adc
ja
mov
mov
lods
xchg
out
daa
jnp
xor
cmp
or
std
mov
aaa
sub
out
je
test
cli
fisubrs
mov
clc
nop
in
mov
xor
jb
mov
pop
adc
xchg
flds
rcl
dec
scas
mov
push
test
jns
bound
pop
lods
xlat
incl
aad
orl
lods
test
dec
popa
je
sar
or
dec
xor
adc
inc
mov
adc
sti
ret
data16
mov
andb
dec
inc
scas
loope
gs
cmc
lahf
int3
lea
lods
jmp
or
xchg
out
ret
cmp
int
jo
xchg
push
xor
mov
outsl
inc
sbb
fistps
sbb
and
ror
inc
aad
jl
orl
lock
add
push
out
xchg
fnstenv
add
sub
jecxz
aam
sarl
outsl
popf
rcrl
adc
jecxz
cmp
in
pop
fcom
fadds
insl
inc
scas
jb
aad
fwait
sbb
or
sub
mov
ds
call
mov
div
sbb
setp
je
mov
insl
cltd
jecxz
mov
add
lods
mov
aas
data16
mov
sub
sti
fcom
rcrb
sbbb
or
fists
add
enter
sbb
jo
cld
ljmp
enter
or
and
and
adc
out
or
aaa
mov
and
add
inc
lods
xchg
and
insb
loop
mov
pop
outsl
popf
mov
push
sbb
ftst
mov
pop
xchg
jnp
das
dec
dec
push
and
mov
fmuls
sub
lcall
push
lahf
mov
dec
push
mov
fidivl
xor
or
add
loope
in
ss
rol
sbb
ja
jnp
sub
into
add
jge
outsl
cmpsb
in
mov
push
out
or
rorb
mov
bound
or
sbb
mov
cli
lret
lods
in
loope
mov
xor
pop
sbb
or
lods
or
daa
ret
push
sub
xchg
out
and
sbb
mov
xlat
jmp
push
pop
mov
loope
insl
mov
mov
sub
test
push
push
pop
call
mov
dec
jmp
int3
jb
inc
ret
mov
add
add
xchg
mov
inc
mov
mov
jle
dec
xchg
faddl
stc
fcmovne
cld
mov
mov
fildll
sub
xchg
and
movsl
dec
jg
mov
pop
dec
pop
loopne
jmp
cld
movsl
sahf
mov
jmp
aam
pop
add
jecxz
ret
add
test
mov
addr16
int3
fdivr
ret
lods
and
cltd
jne
ficompl
nop
cmp
mov
pop
jns
fbld
sbbb
cld
dec
jbe
stc
pusha
add
xor
movsl
into
lods
mov
jo
scas
cmp
pusha
add
in
xchg
test
mov
cmpsl
loopne
les
fildll
icebp
pop
pop
and
je
sbb
sub
int3
jge
iret
dec
fs
lds
and
bound
cmp
or
loope
cltd
mov
shrb
mov
push
subb
add
dec
adc
bnd
jo
xchg
out
into
std
out
out
and
push
jae
hlt
add
cmp
lock
loop
dec
fucomp
mov
rsm
cwtl
mov
lret
aas
ret
mov
fiaddl
mov
mov
xor
ret
pop
adc
mov
jns
sub
dec
mov
push
int3
add
cmp
aaa
ret
and
jo
mov
sub
and
mov
fcompl
cmc
mov
movsb
fwait
push
push
push
das
out
enter
movsb
and
in
ret
cmp
cltd
subb
adc
pop
outsb
test
mov
insl
fdivr
loop
jns
into
xorl
or
cmp
cmp
pop
cwtl
jle
and
xchg
in
vpcmpeqw
test
jo
and
cld
into
lret
xor
xchg
aas
xor
in
push
fistps
lods
xor
pop
push
enter
sti
adc
mov
sbbb
lcall
imul
xchg
jb
add
ds
cmpb
jecxz
stc
dec
dec
fbld
subl
shlb
mov
add
lret
adc
push
sbb
inc
jne
xchg
lods
cmp
jns
imul
test
sarb
mov
out
addr16
mov
mov
push
cmp
vxorps
bound
or
add
stos
sub
adc
push
push
push
add
test
es
and
test
jne
movsl
sub
mov
or
jne
stos
sub
push
mov
icebp
dec
andl
pop
push
jmp
xor
cmp
fdivs
xchg
adc
stos
adc
fldl
or
mov
stc
scas
sub
pop
lret
adc
mov
sbb
fistps
dec
sar
inc
or
lods
test
jge
gs
nop
dec
cltd
and
dec
xor
out
mov
xchg
rcll
fwait
cld
mov
mov
and
pop
push
sbb
shlb
pusha
lods
push
add
jge
jp
mov
addl
outsb
hlt
test
xchg
push
xchg
scas
stos
loope
or
imul
in
in
fucomp
scas
ja
mov
call
out
jmp
shll
adc
xchg
pushf
sub
pop
sbb
test
mov
mov
daa
cwtl
or
fmuls
lods
ficoms
lea
mov
cmp
dec
aaa
cmp
sbb
xor
dec
fwait
scas
andb
sub
xchg
cmp
loopne
pop
mov
sbbb
sbb
les
mov
lock
sarl
dec
and
cmp
cltd
jne
sbb
mov
into
add
mov
int
xor
jmp
hlt
outsb
scas
adcl
das
xor
push
sub
rol
movsb
mov
dec
lods
cvtpi2ps
inc
pop
pop
inc
jne
mov
je
and
popa
stos
ficoml
repz
xor
int3
mov
in
cmpsl
xchg
adc
jno
mov
je
in
sarl
pop
cmp
shlb
cmpsl
inc
lret
mov
mov
fistpll
js
fildl
push
mov
pushf
jo
cmc
idiv
jns
push
jmp
inc
les
xor
addl
cmp
loope
add
std
sub
icebp
jg
pushf
inc
push
jb
push
aad
xor
bound
rcrl
push
shrb
mov
out
scas
daa
jmp
jnp
dec
cmp
pusha
cmp
mov
in
xchg
imul
adc
cmc
aad
in
ss
pop
cmp
fdivrs
sub
sub
adc
push
shll
mov
xchg
out
out
mov
inc
add
or
push
xor
cmp
lods
push
push
jbe
in
and
sarb
inc
mov
pushf
or
or
orb
ljmp
test
sub
or
mov
clc
push
or
add
lret
mov
mov
xor
mov
xor
xchg
xchg
xchg
and
and
fldz
out
jmp
mov
mov
std
not
loopne
push
xchg
mov
lock
fwait
es
xchg
ret
dec
insb
rsqrtps
add
mov
fucomi
stos
mov
inc
or
dec
hlt
imul
sahf
jbe
add
mov
xchg
rcl
dec
daa
call
out
out
sub
loop
adc
pop
lea
jl
sarb
jmp
mov
sub
bndldx
dec
mov
lahf
push
cmp
stos
lret
es
add
cmp
xchg
pop
sub
add
xor
xchg
sbbl
enter
xchg
pop
xchg
add
out
pop
pop
movsb
leave
mov
sahf
add
les
fists
inc
pop
shlb
and
xchg
cmp
aad
adc
nop
cmpsl
adc
cmp
js
cmovl
into
jne
dec
xor
into
mov
ss
pop
testb
xor
sbb
arpl
add
movb
inc
pop
pop
xchg
test
loope
cmp
call
mov
ror
stos
jp
rcr
fwait
hlt
lret
jmp
inc
jecxz
sub
int
push
and
imul
lcall
aam
mov
sbb
pop
les
mov
movsb
jmp
inc
jnp
xchg
hlt
sahf
xchg
jnp
ljmp
push
inc
adc
je
sbb
jne
pop
sub
pop
and
xor
lods
and
dec
in
pusha
test
outsl
add
and
cmp
adc
adc
cs
cmpsb
out
dec
sbb
shlb
pop
push
sub
je
and
xlat
dec
mov
mov
or
push
fsubl
in
int3
iret
gs
pop
mov
test
mov
adc
sbbb
xchg
mov
rclb
jne
leave
ret
push
aam
inc
daa
addr16
rclb
daa
nop
rcrl
jecxz
outsl
aas
push
fimull
push
sahf
jmp
sbb
jns
lods
enter
cmp
flds
lahf
daa
out
lret
popa
arpl
negl
call
dec
jns
or
mov
xchg
nop
or
dec
jp
fiadds
dec
sbbb
imul
call
outsb
or
push
stc
lret
jg
outsl
mov
cld
cmp
and
lcall
adc
mov
dec
inc
mov
shll
cwtl
enter
push
mov
stos
xor
xor
or
xchg
and
sbb
xchg
push
data16
add
adc
pop
mov
je
add
das
outsl
inc
fdivl
fisttpll
mov
seta
mov
sbb
das
xor
movsb
pop
sbb
push
nop
jecxz
and
ss
push
rclb
lock
push
cmpsw
gs
fidivs
inc
cmp
xor
fnstenv
and
inc
and
stos
push
stos
das
inc
jns
cwtl
and
jo
clc
js
mov
sbb
icebp
cli
aam
sbb
push
jecxz
int
dec
inc
icebp
pop
add
sub
xorb
fs
push
shlb
cmpsb
sti
add
mov
mov
adc
xlat
cwtl
adc
mov
imul
insl
and
xchg
lahf
popa
ret
cmpsl
imul
leave
loopne
gs
imul
mov
leave
sub
jns
popa
xor
jbe
gs
and
sbb
and
or
cmp
daa
cmp
sub
mov
jne
mov
rorb
insl
lds
enter
enter
pop
popa
rclb
lds
test
sub
mov
xor
add
inc
pop
sarl
xlat
xchg
out
bound
lahf
and
cli
push
push
loope
adc
das
lret
jmp
cmp
xor
sub
ja
out
adc
inc
stc
sub
dec
popa
lss
mov
fstpl
cmc
lods
nop
stc
mov
bound
jmp
push
push
sbb
mov
mov
jmp
sahf
lahf
push
pop
test
fisubl
add
les
add
fcoml
loope
sarl
xorb
arpl
pop
pop
cli
push
mov
mov
mov
mov
les
jge
popf
fsubr
clc
xchg
mov
nop
cs
jecxz
dec
cltd
mov
std
mov
jns
fs
xchg
add
fists
shll
pop
push
mov
ljmp
mov
or
mov
xor
xlat
xlat
cmc
test
push
sbb
fbstp
leave
sub
jnp
pushf
and
or
jno
jo
jo
and
sub
mov
xor
ljmp
fst
push
push
and
jge
jecxz
mov
stos
ja
bound
mov
and
ja
xor
cmpsl
iret
fisubs
aas
int
and
cmp
or
dec
cmc
inc
xor
push
jmp
mov
mov
lcall
sti
cmp
loopne
int3
les
xchg
insl
cmp
dec
push
push
and
cmp
cs
dec
notl
insb
scas
jmp
ds
ja
loopne
ljmp
cmc
lret
or
sarl
push
add
lock
xor
xor
jno
xor
stos
into
in
and
xchg
hlt
push
data16
jnp
push
cmc
lods
mov
sbb
push
scas
sub
js
fimull
jb
rol
lods
lret
push
jae
mov
leave
inc
sbbb
xchg
mov
ljmp
stc
lea
jbe
xor
mov
leave
hlt
cmpsl
insb
cmp
lea
cmpsb
insb
pop
inc
test
jbe
ret
inc
mov
rcll
sbb
push
in
loop
sti
popa
data16
adc
lods
out
add
test
int
and
aas
jo
int3
push
test
and
stc
outsb
mulb
cltd
dec
or
fisttpl
mov
scas
mov
into
fldcw
out
inc
xchg
pop
jne
mov
add
js
sub
xor
push
or
das
cmpb
into
mov
sahf
gs
test
test
jo
fs
loop
ror
pushf
or
or
shl
sub
fcomi
mov
fsubrp
add
sub
and
or
push
dec
cli
idiv
mov
xor
in
scas
push
sahf
add
loop
stc
bound
cwtl
push
pop
cli
push
push
loopne
pop
xor
ret
sbb
jnp
orl
test
mov
sahf
loopne
push
leave
add
jo
movsb
lcall
daa
mov
test
ss
mov
add
popf
mov
cmp
dec
lea
inc
loope
sti
or
nop
outsl
xlat
adcl
sbb
mov
aas
jle
push
gs
negl
repnz
add
mov
lds
dec
jne
mov
push
mov
mov
rcll
xchg
fnstenv
aam
dec
mov
fs
pop
stos
sub
ja
hlt
xchg
repz
nop
sbb
icebp
jl
mov
outsl
or
mov
mov
cld
out
inc
repnz
loopne
movsl
cmc
fld
pop
rorl
sub
fdivl
mov
pusha
fwait
ja
test
push
mov
dec
adc
jecxz
dec
cltd
jmp
add
inc
pop
shll
mov
pop
xor
pop
in
ret
addl
repz
roll
inc
cltd
je
sub
in
add
jne
daa
jb
test
aas
mov
jno
inc
inc
orb
mov
mov
fisttps
les
jae
fsubs
ja
les
add
push
fs
push
jo
sub
adcb
nop
jp
jle
and
lret
aas
sbb
test
in
mov
fidivs
out
dec
jae
lcall
jno
sbb
ljmp
push
bound
xchg
mov
fdivr
jo
sub
push
add
mov
pop
out
xlat
and
add
jb
inc
cli
out
lret
dec
jecxz
leave
adc
test
fisttpll
sbb
sub
aas
cmp
movsl
mov
dec
ret
pop
popf
mov
popf
pop
roll
popl
ds
sbb
rcr
daa
call
jg
and
loop
std
fwait
call
jae
or
cmp
jnp
in
arpl
movsb
loop
xchg
inc
inc
cli
sti
call
pop
push
xchg
xor
add
mov
int3
jne
mov
ret
in
and
pop
sbb
js
dec
add
lods
cmpsl
mov
lock
push
push
subl
push
aam
sbb
call
pop
or
add
rorl
push
les
adc
aas
pop
outsl
or
lods
orb
xchg
aad
adc
pop
cmpsl
je
xor
clc
insl
push
inc
aas
and
adc
cwtl
jo
adc
das
pop
outsb
or
hlt
addr16
pop
or
lods
lret
inc
fsubs
imul
mov
mov
push
shlb
cwtl
lret
aad
enter
push
jge
ret
mov
orb
jbe
movsb
repz
cmc
pop
adc
aam
cmp
popf
dec
pop
out
out
out
add
or
ss
push
fistl
dec
dec
and
push
push
add
clc
mov
jmp
push
out
jnp
in
push
sbb
out
inc
lods
xchg
jg
add
push
lods
xor
outsl
cmp
sub
test
rcrb
div
jo
mov
cmpsb
xor
nop
iret
rorl
mov
icebp
js
push
jno
adc
jecxz
dec
dec
dec
int
repz
mov
and
imul
pop
pop
cmpsl
adc
pop
mov
nop
mov
adc
dec
add
pop
dec
rclb
jp
jnp
mov
arpl
pop
lock
jb
inc
jne
ss
inc
xchg
addl
jo
enter
inc
in
xchg
dec
and
jp
sbb
fmull
add
adc
outsb
addr16
loopne
push
shlb
lcall
shll
or
cltd
sar
dec
xchg
stos
xorb
insb
lcall
mov
xchg
fldt
mov
cltd
fnstenv
test
sarl
pop
and
mov
pop
sub
shll
fndisi(8087
ja
pushf
pop
push
xor
cmp
loope
push
fldl
rcl
in
ret
dec
sub
lret
out
cmp
cmc
jnp
adc
pop
stc
pop
xchg
jae
fnclex
xor
fwait
sti
cmp
sub
cmp
pop
xchg
pop
scas
cmc
idiv
in
ret
xor
lcall
push
cmp
xchg
jl
clc
fwait
push
jle
jge
push
xchg
mov
ljmp
xor
dec
out
cli
dec
adc
faddp
mov
adc
sbb
xchg
cmp
rcrl
pusha
xchg
mov
dec
cmp
dec
inc
pop
in
jle
test
push
fcmove
stos
lea
ljmp
mov
shlb
nop
in
inc
push
ja
aaa
sbb
cmp
popa
cmp
sub
xor
adc
aad
pop
inc
pop
push
inc
mov
jne
inc
pushf
xchg
push
scas
and
mov
mov
enter
push
lcall
cltd
fiadds
sbb
push
inc
push
add
dec
test
push
mov
dec
xor
lahf
xorl
inc
mov
out
cli
sub
test
ja
shlb
jl
popa
mov
fistpll
lods
cmp
add
ja
adc
mov
jle
rcrl
movsl
imul
inc
sub
inc
sbb
in
cmp
xor
and
xchg
mov
sbb
cld
pop
out
in
xor
adc
iret
xchg
adc
push
mov
push
das
mov
fcmovnb
dec
mov
cmpsl
pop
loope
cwtl
push
inc
xor
mov
sahf
fbld
stos
xchg
or
pop
mov
jmp
out
dec
sub
not
in
hlt
sub
and
out
je
mov
aaa
cwtl
test
or
adc
test
loopne
or
sub
dec
mov
jb
mov
mov
mov
jo
push
pop
das
jb
pushf
stc
arpl
test
rolb
sbb
divl
dec
mov
xor
sub
int3
xor
es
shlb
andl
cmp
jmp
inc
pop
cmp
inc
cmp
xor
loop
rorl
subl
dec
mov
push
iret
push
cmp
push
mov
int3
push
mov
outsb
cmp
xchg
xchg
xor
insl
leave
sub
arpl
pop
fsubrl
ljmp
xor
inc
daa
pop
ja
jp
sbb
jl
stos
icebp
in
sub
adc
push
mov
movhlps
xor
push
sbb
icebp
faddp
call
jno
or
lods
xchg
rorl
outsl
iret
xchg
pop
stos
arpl
jo
inc
sub
pop
or
or
insl
or
es
jp
or
test
aam
fnstcw
dec
les
push
jge
gs
xchg
add
stos
aaa
jg
xor
pop
xchg
mov
mov
popf
mov
das
jecxz
add
wrmsr
stos
sub
cmp
int3
dec
mov
jno
popf
mov
push
iret
mov
pmulhw
xorl
in
mov
sbbl
jno
lods
sarl
cltd
and
ret
jae
sbb
test
rorb
dec
aas
add
insb
xchg
in
fcmovnu
ret
insl
inc
xor
xchg
cmp
fsubl
xor
jne
push
scas
xchg
pop
lock
test
sbb
mov
mov
roll
subl
push
xchg
push
lahf
mov
cmp
adc
sbb
mov
sti
daa
iret
cltd
mov
daa
ja
leave
in
stos
mov
data16
ret
bnd
fld
pop
push
cli
mov
ret
mov
mov
nop
jge
cmpsb
in
sbb
xor
or
int
call
icebp
jb
and
dec
fistps
inc
inc
dec
dec
lds
movsl
jbe
fcompl
sbb
xchg
inc
mov
push
rorb
aam
add
stos
push
mov
dec
lock
loop
pop
jge
ret
imul
dec
push
lods
shrb
adc
movq
push
cmp
or
sub
movsl
xchg
pop
out
movsl
pop
pop
in
dec
fstps
enter
lcall
outsl
inc
nop
push
fsub
inc
cs
mov
leave
push
jp
imul
or
clc
adcb
push
and
jnp
add
xchg
adc
mov
arpl
xchg
add
push
fimuls
rorl
xchg
lcall
mov
out
adc
mov
out
inc
es
mov
ja
xchg
bound
mov
pop
call
push
cltd
bound
sti
call
push
insl
sub
sbb
jae
mov
cltd
out
lods
or
cmp
or
or
pusha
mov
or
lahf
mov
fsubrp
add
loope
jne
leave
mov
ret
insb
imul
fwait
inc
insl
mov
push
cld
xchg
ret
repz
xchg
lcall
cmp
adc
jmp
xor
cmpsl
jo
sahf
je
test
or
mov
push
xchg
outsb
pushf
jp
mov
inc
and
lods
mov
data16
xchg
cmp
lret
sub
aas
mov
in
popa
sbb
mov
cmp
movsl
daa
jecxz
mov
xorl
pop
push
out
std
mov
pop
cmpsb
push
mov
sbb
inc
ljmp
mov
jae
jle
xchg
out
popa
jns
pop
lret
jne
sub
sarb
movsl
outsb
sbb
dec
sti
xchg
pop
pop
nop
outsb
test
sbb
adc
mov
int3
add
cwtl
mov
xchg
fcoml
sub
pop
ffreep
sarl
push
jno
test
rol
sub
xchg
mov
sbbb
push
push
jae
jae
loope
cmpsl
add
sub
fcomps
inc
ljmp
popf
add
lcall
jb
shrl
cmpsb
lods
sbb
sub
ds
fidivrs
call
sbbl
mov
call
mov
lret
inc
or
hlt
and
cli
cmp
adc
add
dec
pushf
xor
cmc
sub
add
sbb
test
scas
adc
negb
jmp
push
subb
xchg
cmp
pushf
lock
sbb
xchg
insb
into
sub
and
jmp
mov
pusha
cld
jb
mov
aaa
les
and
fdivl
mov
sub
jnp
xchg
imul
shl
jno
sub
cmp
bt
les
xchg
dec
nop
or
mov
push
xchg
lcall
pop
mov
aad
add
sub
inc
sub
jb
pop
or
push
pop
sbb
aas
lods
ja
pop
inc
sbb
sbb
pop
and
dec
les
push
xchg
out
lods
xchg
xchg
push
out
aam
push
mov
cmp
aas
clc
pop
sbb
inc
test
inc
arpl
mov
or
cmp
or
xchg
imul
cmc
adc
mov
cs
aam
in
sbb
pusha
aas
inc
mov
and
icebp
sub
jnp
mov
scas
xchg
incb
inc
dec
cmp
xor
lcall
leave
imul
gs
add
inc
test
sbb
pop
push
cmpsb
test
call
movl
outsb
xchg
xchg
sar
pop
ret
pop
bound
mov
pop
inc
and
inc
inc
push
xor
popa
inc
cmpsl
and
insl
in
mov
adc
add
jno
pop
pop
push
nop
sub
fisubl
xchg
icebp
inc
push
fdivs
mov
mov
push
lods
pop
je
pop
sub
shl
add
out
sbbb
in
xchg
inc
icebp
xor
shlb
pop
orl
outsl
mov
or
jne
outsl
sub
dec
scas
xor
cmovne
popf
jl
ret
shll
inc
lods
mov
dec
mov
dec
out
xchg
jp
out
add
sarb
jmp
scas
xor
ds
call
mov
xor
arpl
and
out
dec
dec
in
sti
sbb
icebp
dec
xchg
cltd
jle
mov
stos
lds
imul
cs
sub
pop
sbb
call
mov
dec
rorb
sub
mov
and
clc
add
push
add
ret
sub
mov
sbb
shrb
mov
jno
sub
push
or
imul
xor
sub
bound
pop
or
ficoml
xor
mov
dec
jmp
lods
lods
stos
repnz
push
mov
ss
or
mov
cmp
dec
inc
bswap
aas
mov
mov
inc
jbe
jns
push
xor
lcall
add
roll
push
adc
cld
and
jl
jae
fcompl
out
pop
jns
je
push
insl
pop
push
cltd
test
test
movsb
adc
sti
jne
push
outsb
mov
push
rorb
pmulhuw
sbbb
push
mov
xor
std
jbe
std
xchg
ja
xchg
cmp
cltd
add
mov
mov
xor
push
sti
pop
dec
fisttpll
stc
jbe
and
pop
in
or
ret
and
xchg
and
movsl
sub
sbb
pop
or
movb
les
add
or
jmp
sub
mov
lahf
xchg
mov
out
dec
arpl
into
jb
xchg
ficomps
jp
dec
call
pop
dec
test
out
xor
shl
jle
and
les
sbb
sti
fidivl
mov
pop
cmp
sbb
hlt
adc
into
lea
outsb
stos
es
movb
stos
jg
outsl
jb
scas
adc
sub
jmp
sub
loop
mov
push
repnz
mov
mov
gs
or
mov
out
xor
lods
adc
fwait
leave
mov
pop
pusha
sub
stos
jb
push
pop
cmp
js
repnz
mov
inc
leave
push
cmp
inc
sub
xor
fmul
movb
rcl
cwtl
adc
inc
test
add
iret
test
inc
in
adc
test
ret
js
sub
xchg
out
fld
dec
aam
pop
push
adc
xchg
imul
enter
add
push
jmp
mov
fiadds
leave
jle
jb
mov
push
into
push
dec
mov
pop
ret
cmp
dec
test
adc
jne
outsl
xchg
cmp
fisubrl
xlat
fwait
pop
lret
out
and
xor
cmp
pop
sti
push
xor
mov
int
lret
and
mov
hlt
or
inc
repz
jo
sbb
pop
sub
mov
fsubp
loope
loope
pop
or
fiadds
shr
sub
and
adc
cltd
pcmpeqb
sarl
mov
int3
or
orb
dec
sbbb
bound
insb
jbe
pop
aaa
hlt
pushf
xchg
xchg
out
rcr
and
hlt
hlt
mov
in
lds
mov
lods
inc
fmull
add
das
xchg
mov
jp
push
jg
jo
sarl
mov
testl
xlat
fnsave
dec
sbb
scas
adc
xchg
xchg
call
cli
mov
add
dec
inc
js,pn
xor
iret
add
xchg
out
addb
fidivrl
mov
pop
outsb
movsl
cmpl
js
fs
iret
inc
pop
mov
xchg
pushf
push
xchg
and
push
sbb
jl
inc
sub
or
jno
cmp
mov
dec
fistl
in
lock
dec
mov
aad
mov
ret
xchg
mov
pop
mov
movsb
cld
gs
nop
jg
or
add
test
in
dec
or
add
idivb
sbb
in
sub
sub
push
mov
stos
adc
sub
xorl
rol
aas
push
cld
lods
adc
mov
mov
or
adc
xor
pop
cmp
mov
adc
adc
and
cld
data16
jecxz
add
cwtl
xchg
lret
mov
aad
stos
in
outsl
mov
pop
jne
mov
xchg
fnstsw
outsb
mov
enter
test
mov
jbe
daa
mov
ja
cmp
fucomp
rclb
dec
aaa
adc
ss
jb
and
jl
les
pop
pop
add
cmp
jne
loope
movsb
pop
xor
sbb
mov
clc
rdmsr
ud2
inc
jo
fisttpl
mov
dec
cmp
cmpb
adcb
outsl
and
lods
xor
bound
jno
aas
dec
pusha
jb
and
push
or
or
fisubl
and
xchg
cmp
xchg
rcr
inc
jno
cs
stc
xor
fmuls
jbe
insb
push
dec
fcmovnb
insb
dec
sahf
loop
mov
inc
cmpsl
cld
fisubrl
xchg
rcrb
xor
and
mov
mov
jbe
lcall
inc
pop
sub
rcrb
shrb
sub
mov
pusha
cmp
repnz
bound
xchg
add
or
inc
idiv
jo
dec
cli
xchg
cwtl
and
xchg
inc
and
xor
mov
insb
mov
insb
daa
lea
pop
inc
cmp
pop
sub
jbe
test
xor
hlt
inc
jecxz
test
cmp
pushf
cwtl
mov
fistps
and
push
push
loope
aas
pusha
dec
inc
out
mov
aaa
jge
jmp
pop
and
lret
sub
adc
in
aaa
fidivl
popa
mov
dec
ds
sahf
add
push
lahf
daa
arpl
dec
mov
sbb
aaa
mov
sarb
mov
cmp
je
lds
das
xchg
inc
sub
roll
jmp
mov
push
mov
inc
add
adc
inc
aaa
mov
jmp
and
cwtl
push
or
xor
mov
sahf
jle
insl
jo
pop
testb
stos
std
add
repnz
inc
pop
jge
mov
std
add
xchg
mov
lahf
cmp
jl
hlt
pop
mov
inc
or
rorl
inc
sub
dec
movsl
icebp
push
cli
adc
mov
pop
mov
pop
mov
int
mov
shrd
rolb
movsb
pop
xchg
loope
call
ret
roll
or
xlat
imul
mov
add
sbb
int3
fwait
sub
xor
inc
in
cmp
cmp
mov
les
xor
ja
cmp
sahf
out
stos
shll
mov
rorl
jmp
outsb
shll
pushf
outsb
pop
dec
ja
cmpsb
das
hlt
xor
push
add
mov
or
jns
fs
out
lret
adc
cmpsb
cmp
or
jns
loope
stos
dec
loop
aas
jmp
dec
jbe
mov
divl
daa
mov
mov
add
and
sub
sub
lock
pop
mov
and
in
popf
pop
inc
aaa
xchg
xor
cvtps2pd
icebp
lcall
into
xor
adc
cli
adc
mov
jle
push
hlt
insb
sub
xchg
int
pop
add
cli
rcll
adc
das
iret
arpl
aam
add
or
push
test
xor
test
loope
inc
cli
xchg
bound
mov
mov
loopne
sbb
inc
outsb
cmp
bound
jmp
rol
leave
mov
sahf
mov
je
sbbl
jne
outsb
push
sti
inc
lock
fisubl
insb
adc
pop
xor
and
and
adc
popf
rclb
push
pause
sub
mov
fwait
test
ficoms
and
lret
jae
fistpl
adc
mov
in
mov
mulb
jo
std
push
fwait
addr16
or
in
pop
outsl
imul
dec
dec
mov
vphaddbw
mov
ret
int3
lret
sbb
mov
add
sbb
ficompl
icebp
fidivrl
inc
jg
ds
mov
cmpsb
enter
mov
push
insl
push
mov
pusha
insl
enter
pop
jmp
cltd
jno
stos
dec
je
push
dec
or
or
cmp
mul
jg
fldenv
jle
shrb
adc
fidivrs
sti
shl
adc
adc
dec
rcll
scas
adc
adc
mov
mov
int3
sub
arpl
test
sbb
jb
push
jge
dec
mov
data16
in
les
xchg
and
or
rcll
mov
or
outsl
adc
or
push
and
test
mov
imul
gs
sub
popa
xchg
mov
test
cmp
cmp
lods
ljmp
lds
test
testb
std
cmpsl
or
and
fsubr
or
mov
push
mov
icebp
gs
mov
xchg
jns
inc
lcall
nop
lret
sbb
sti
imul
cltd
cs
das
or
push
shrb
inc
cmpsl
adcb
adc
fstl
mov
mov
sub
enter
jp
int
or
push
add
pusha
insl
inc
lds
popa
imul
add
xorb
sub
sti
xchg
inc
mov
mov
hlt
or
loop
lret
lods
cli
mov
xchg
push
lahf
add
mov
pushf
sbb
movsb
cmp
pop
cltd
test
mov
pushf
pop
mov
jae
lcall
pop
or
xchg
addr16
xchg
mov
mov
jle
dec
xlat
outsl
filds
xor
push
push
rolb
xchg
cmc
popa
xchg
clc
add
or
andl
mov
jb
imul
sbb
xchg
adc
xor
insb
sub
push
loop
int
imul
movsb
mov
add
int
lahf
xchg
cmc
pop
icebp
pop
adc
sub
cmp
gs
scas
fbstp
mov
or
loopne
leave
fwait
mov
pop
icebp
sub
enter
inc
fistpll
xchg
fidivl
xchg
add
leave
hlt
inc
dec
ret
or
and
mov
push
subl
xchg
jle
enter
push
push
push
fxch
loope
sub
shr
adcb
jg
cli
movsb
fisubl
les
cli
insl
das
xor
loop
cmpsb
push
adc
jbe
inc
out
cmp
divl
sbb
lcall
push
mov
mov
lds
mov
clc
sbb
mov
dec
sbb
fwait
stc
jecxz
ja
add
pop
pop
in
cmpsl
je
stos
aaa
push
lea
icebp
fists
push
cmp
cmc
loop
rclb
pop
loop
xor
push
and
mov
sub
iret
stos
mov
dec
dec
addr16
xchg
mov
aad
call
lds
and
or
inc
ja
sti
mov
sub
cmpsl
loopne
jecxz
call
bnd
or
insb
xchg
popw
aas
mov
icebp
jle
test
js
mov
cwtl
push
nop
movsl
push
xchg
clc
int
into
mov
repnz
push
mov
push
out
loop
mov
cmpb
or
xor
enter
fldl
in
xchg
loop
ror
fadd
testl
push
lods
or
sub
movsl
insl
sub
xchg
cmp
cmp
stc
xorl
insb
movsl
fistl
nop
jne
das
movsb
or
sahf
mov
ja
sbb
int
mov
sub
jmp
add
push
stc
and
adc
push
subl
mov
add
mov
xor
clc
addr16
mov
jo
adc
sub
inc
push
js
andl
and
mov
aaa
sar
es
popf
ret
cmp
roll
and
or
ret
stos
clc
iret
dec
addr16
adc
dec
xor
dec
jae
nop
push
jb
ja
xchg
xchg
push
push
cmp
or
and
dec
dec
lret
jge
pop
imul
leave
pop
movsb
in
sub
cmp
lret
aas
xchg
das
mov
dec
add
test
cs
out
xchg
mov
cs
sbb
lahf
push
push
das
in
inc
mov
pop
xchg
stos
mov
enter
xchg
mov
mov
jns
int3
dec
jl
dec
movsl
xor
push
jae
stc
mov
push
pop
bound
fwait
xchg
maxps
push
mov
add
enter
adc
lods
mov
sub
inc
insb
repz
jle
frstor
lret
js
jge
xchg
outsb
mov
pop
cmp
add
lods
jb
ss
daa
add
sub
outsb
in
nop
dec
divb
sbb
lock
push
aas
gs
inc
test
das
mov
cli
out
rol
rcll
dec
dec
xlat
or
pop
scas
in
stos
xchg
mov
sbb
pop
jnp
jb
pop
fcoms
fcomps
ret
mov
jg
mov
repnz
jae
push
mov
inc
sti
or
stos
jb
fs
mov
dec
lock
int
mov
lea
lret
sahf
js
pop
pop
leave
dec
pop
jmp
shrb
je
and
or
xchg
lret
fcmove
sbb
aad
pop
pop
aas
sbb
mov
in
dec
test
leave
mov
push
aam
lcall
pop
jno
cs
mov
mov
and
or
and
out
sub
push
xlat
loop
dec
jl
int
pop
divl
sbb
dec
or
popa
dec
call
fwait
sbb
push
inc
dec
xchg
fcomp
arpl
xlat
jbe
jp
inc
sbb
mov
cmp
xor
addb
dec
mov
cmp
je
cmp
test
test
test
icebp
aas
shl
inc
pop
or
arpl
lock
xor
and
push
lock
cmp
jb
xor
outsl
and
ja
inc
adc
and
push
cs
cwtl
sub
stos
jnp
mov
sti
fs
rolb
movsb
mov
rcr
out
in
cmp
sub
shlb
jbe
mov
add
sub
imul
ret
mov
add
xor
jmp
adc
notb
lret
in
ficoml
sahf
and
pop
sub
bound
or
mov
sbb
sti
xor
push
push
test
mov
mov
cs
arpl
push
test
mov
dec
push
mov
xor
in
push
mov
lret
jge
mov
fwait
data16
pop
fidivl
and
sti
pop
cmp
jmp
jmp
sub
add
mov
mov
cmp
cli
jbe
xor
insl
xor
lretw
inc
popf
push
in
add
sub
jb
dec
ficompl
push
idivb
cmpsb
inc
sbb
mov
imul
cmp
lods
lock
addb
xchg
cld
negl
pop
nop
les
inc
and
pop
pop
or
push
mov
jbe
rolb
gs
clc
cmpsl
push
jg
inc
stos
mov
imul
mov
fistpl
lret
cmpsb
in
movsl
repnz
xchg
popa
js
lods
cmp
movsb
test
sbb
add
push
lea
push
mov
mov
dec
out
xchg
js
fildll
addr16
fsubs
dec
mov
stos
and
xor
ss
pushf
fistl
repnz
movsb
stc
lahf
xchg
nop
xchg
sarl
mov
cmc
out
les
stos
cmpsb
inc
sub
xor
mov
sbb
xchg
push
xchg
andb
out
orb
pushf
inc
test
jae
rorb
test
xchg
mov
jg
clc
xchg
and
push
dec
fldl
and
sbb
cmpsb
cwtl
insl
jne
pushf
jno
in
push
hlt
add
pop
push
fnsave
pushf
leave
sbb
push
cmpsb
lock
cli
adc
jge
add
or
mov
and
dec
adc
lds
and
popf
icebp
mov
and
push
dec
mov
rcrl
pop
ss
psubusb
sub
dec
sbb
and
or
adc
lock
std
mov
xor
xor
mov
out
lret
rorb
sbb
idivb
cmp
xor
stc
inc
sub
ret
lcall
sbb
pop
push
inc
std
loope
loope
fs
mov
jecxz
lods
sub
pusha
mov
out
adc
xchg
out
adc
push
mov
loope
push
lret
ja
fwait
jl
in
xor
xchg
orw
cli
movsl
xchg
xor
mov
inc
test
dec
and
and
adc
arpl
mov
fisttps
adc
or
loopne
hlt
pop
gs
sub
pop
cltd
add
pop
loop
add
xchg
push
add
hlt
mov
sub
lods
notl
mov
add
or
mov
faddl
inc
jnp
xlat
loopne
nop
and
pop
xor
mov
loop
mov
sbb
in
sbb
aas
insl
lea
inc
arpl
mov
into
out
popf
push
add
mov
push
lods
in
or
xchg
aad
or
outsl
dec
lret
xor
fwait
sbb
sub
or
adc
andb
add
lcall
filds
or
inc
mov
insl
shll
mov
dec
cmc
fdivl
lods
add
test
lea
inc
cmc
jecxz
lret
sbb
inc
jle
cmp
adc
fs
push
test
fists
test
mov
mov
cli
mov
stos
lret
pop
push
fdivrl
push
and
into
es
mov
movsb
ds
lret
xor
in
and
mov
mov
fmuls
dec
push
inc
push
jns
ss
push
and
mov
incb
out
adc
cmp
loope
or
fimuls
inc
cmp
aas
mov
mov
aam
push
ds
inc
mov
sub
mov
sbb
arpl
add
and
fs
push
push
leave
push
inc
repz
mov
xchg
cwtl
nop
ret
ljmp
cmpsb
dec
loop
push
icebp
cmpsb
dec
out
testb
out
pop
int
inc
sbb
iret
rcrl
sbbl
out
rcll
dec
or
pusha
incl
and
push
sbb
sbb
into
ret
movsl
das
outsl
add
pusha
mov
pop
ja
in
pop
dec
test
cmp
in
stos
dec
pushw
insb
popa
aad
adc
push
les
sbb
rcr
nop
in
mov
mov
sti
ret
jecxz
or
aas
jb
sub
stos
test
loopne
repz
push
out
cmp
xchg
lock
gs
nop
in
jg
adc
ljmp
popa
and
inc
cwtl
xor
mov
mov
cmp
sub
mov
adc
ret
outsb
mov
cs
jnp
xor
mov
aas
push
lock
cltd
into
test
fcmovne
dec
movsb
cs
dec
xor
imul
into
pop
test
shrl
dec
lcall
aas
insl
xor
movsl
dec
jecxz
mov
dec
cmp
cltd
sbb
rclb
test
lock
push
xchg
in
nop
clc
jl
mov
mov
cmp
xchg
adc
into
bts
mov
pusha
xlat
dec
inc
insb
inc
dec
inc
inc
xor
inc
dec
in
out
es
or
ret
pop
pop
mov
gs
push
inc
lods
das
test
xor
fmul
add
mov
xor
pushf
call
pop
clc
pop
lret
cmp
scas
inc
lret
insl
adc
sub
sub
dec
fdivrs
jns
dec
xchg
inc
outsb
and
daa
aaa
mov
push
mov
stc
or
aas
sarl
cmc
mov
inc
pop
sbbl
lret
gs
mov
dec
pop
frstor
arpl
mov
push
int
pop
push
and
jno
inc
dec
lea
xor
pop
cwtl
aas
aam
mov
xchg
mov
push
mov
aam
pop
mov
cs
adc
aad
jg
sbbl
mov
popf
and
fistl
push
mov
inc
pop
test
in
sbb
mov
cmp
cmp
in
loopne
aas
cmpb
andb
in
int
dec
inc
mov
xlat
hlt
test
out
cmpsl
popa
lahf
cmp
aas
jnp
je
in
adc
fdivr
push
mov
insb
inc
inc
add
ficomps
xor
xor
pop
dec
add
les
pop
daa
andl
aad
sbb
mov
mov
ja
test
or
add
addr16
fldt
sbb
roll
les
xor
hlt
xchg
sti
je
out
push
stos
push
cmp
adc
inc
cmp
lcall
push
cmp
xchg
das
pop
push
jae
and
imul
pushf
xchg
scas
es
out
mov
cltd
arpl
jne
test
hlt
roll
push
cmpps
pop
movsl
fldl
pop
jb
fdivrs
mov
in
dec
ror
fucompp
jmp
add
in
addr16
xor
jbe,pn
gs
cmp
jl
cmpsb
rcrb
cli
xor
arpl
ds
gs
and
jb
imul
je
imul
gs
mov
movsl
test
cmp
es
sub
lea
pop
stc
fistpll
out
or
push
and
dec
mov
lcall
mov
mov
fwait
dec
test
stc
cmc
int
frstor
int3
jmp
mov
je
cltd
pop
push
ljmp
ja
cwtl
pop
cmp
and
daa
aaa
pop
lret
jnp
mov
movb
sub
mov
imul
and
sarb
pop
lea
mov
xchg
pop
push
imul
iret
fdivrl
push
inc
decl
mov
push
jb
repnz
sbb
pop
cmp
jp
fcomps
addr16
aam
aas
pop
sbb
xchg
jp
sbb
rorl
insl
add
test
rcl
pop
lahf
stos
xchg
or
mov
pop
inc
pop
inc
sbb
lahf
sti
cld
mov
iret
or
xchg
inc
push
out
mov
inc
sub
xor
dec
sbb
xchg
ljmp
repz
push
pop
movsb
mov
jb
xor
aam
mov
or
and
sub
in
stos
outsb
rorl
cmp
add
jo
loop
and
aas
ret
jbe
arpl
out
out
cmp
cmp
cltd
lds
inc
jge
testb
test
lret
cmpsb
mov
jae
and
rcr
pop
jae
mov
fildll
pop
pop
adc
mov
in
out
les
cmp
cmp
mov
scas
mov
mov
ret
xchg
sbb
sarl
dec
enter
and
jge
jl
rcll
pop
or
adc
pusha
xchg
out
cmpsb
push
in
loope
fistpll
or
sbb
rclb
cmc
fildl
leave
mov
ffreep
push
adc
pop
fs
add
and
addb
jmp
cmp
das
jg
xchg
mulb
notb
mov
insb
lods
jge
mov
xchg
and
mov
push
xchg
movsb
push
xchg
mov
aam
pop
add
push
out
pop
mov
lcall
xchg
pop
dec
dec
mov
inc
stos
pop
test
adc
xchg
sarb
mov
mov
xor
jmp
push
fstl
je
daa
mov
pop
fcmovu
sub
cld
das
call
sub
push
pop
and
lods
lcall
pop
mov
cwtl
pop
xchg
leave
xorb
imul
loope
push
mov
or
adc
inc
mov
adc
out
cmp
les
sahf
in
lock
push
cli
mov
mov
push
cltd
das
icebp
in
adc
mov
cli
and
cltd
add
or
in
jb
lcall
sbb
fdivr
shrb
mov
xchg
jl
hlt
add
repnz
bt
lock
notb
cmp
stc
mov
xor
subb
lret
mov
out
xchg
mov
xorb
inc
push
mov
pushf
pop
mov
cwtl
shl
sub
roll
lret
aaa
lcall
xchg
fs
lods
lret
pop
roll
add
repz
shlb
cmp
test
aam
cmp
in
xor
jns
push
outsb
inc
es
sbb
adc
mov
sbb
lds
mov
jno
push
sbb
mov
pushf
push
mov
inc
sti
leave
pop
dec
xchg
jnp
mov
out
insl
add
cmp
jnp
xor
adc
adc
mov
lock
lcall
jo
iret
fistpl
jp
enter
xor
and
pop
push
push
ret
int3
adc
je
cmp
arpl
adc
xchg
push
lahf
leave
incb
jmp
cmp
ret
scas
sub
sbb
and
push
mov
push
imul
mov
lret
dec
daa
and
xlat
and
xchg
test
lods
test
jo
lea
fmul
mov
test
test
mov
mov
cmp
pop
dec
iret
inc
loopne
mov
cmp
jb
mov
sub
pop
adc
test
push
jb
testb
shlb
aas
jmp
adc
cwtl
mov
sub
xchg
fldpi
inc
pop
ror
cmp
adc
mov
mov
fmull
shlb
add
pop
cltd
push
fsubrl
das
dec
adc
mov
cltd
or
vmaxpd
push
mov
xlat
mov
jns
mov
xorb
addr16
mov
adc
addl
jge
loopne
add
sub
rcll
test
lock
push
push
pop
add
adcl
cmp
roll
stos
cld
xchg
iret
and
int3
or
pop
pop
mov
stos
ficomps
cmpsb
jp
test
xor
adc
orb
adc
mov
test
lcall
push
lock
loope
jp
lods
or
or
call
push
jmp
cmp
repz
js
pop
xchg
lret
dec
cmc
fmuls
call
dec
add
gs
data16
inc
push
fcompl
or
or
adc
fpatan
mov
rol
mov
lahf
mov
fisubl
xor
cmp
lock
jge
hlt
push
js
mov
jne,pn
nop
fldl
je
inc
mov
dec
or
lock
bnd
xor
xor
loop
loope
sarl
lock
leave
inc
mov
sbb
imul
dec
sbb
add
call
mov
loop
imul
in
cmp
add
mov
adc
das
mov
inc
imul
jecxz
test
loope
fs
fisubrs
mov
lods
pop
lock
mov
mov
fimuls
xor
xor
adc
cmp
stos
and
test
hlt
push
in
push
stos
dec
lea
lret
xor
iret
jl
fldl
das
stos
and
or
mov
pusha
jg
xchg
cmpsl
and
jno
jge
aad
mov
or
mov
and
xor
xlat
mov
cmp
and
mov
shr
mov
dec
mov
gs
mov
xchg
sbb
imul
ljmp
ss
faddl
pop
shll
adc
aad
mov
or
loope
into
shrb
pusha
mull
mov
imul
aas
pusha
inc
xor
in
sbb
sub
and
movsb
cs
bound
pushf
cmp
cmp
into
idivl
stc
sbb
fwait
xchg
mov
loope
jbe
dec
push
inc
mov
mov
push
jo
cmp
into
fimuls
ds
xor
and
loope
inc
loopne
ret
xlat
enter
jg
scas
push
std
rorl
stos
insl
push
xchg
cmpb
bound
lea
sub
bound
xor
ljmp
stc
pop
or
add
stos
stos
pop
xor
inc
sub
add
xlat
es
mov
clc
sbb
stos
insl
pushf
out
int
add
enter
sbb
imul
pop
xor
movsb
test
sbb
inc
and
mulb
jne
cs
cmc
pop
jl
shrl
xchg
testl
mov
jle
cmp
xchg
pop
sub
jne
out
idivl
push
push
addr16
push
pop
fadds
imul
dec
sbb
mov
decl
inc
mov
pop
xchg
div
mov
sti
sbb
loope
test
fs
mov
sbb
cs
cwtl
es
or
xchg
or
imul
or
mov
stos
xchg
inc
cmpsl
subb
jmp
sahf
or
adc
push
popf
arpl
mov
subb
bound
sbb
mov
jecxz
dec
jb
dec
push
rorl
or
push
or
pop
pop
push
push
cltd
ss
aaa
flds
ret
subb
push
mov
xlat
std
or
ds
jno
ja
loop
fisubs
ret
adc
pop
fwait
jl
jl
jl
setbe
js
ss
adc
cmp
cltd
std
xchg
add
jp
push
and
sbb
test
aad
out
dec
int3
inc
stc
fidivs
or
pop
cmp
cli
cmpsb
adc
dec
notb
cltd
sub
out
xorb
mov
pop
fcmovne
fcomip
push
cmp
mov
add
cli
mov
jne
aas
in
les
fwait
jo
push
ss
pop
adc
pop
add
je
dec
shr
inc
lret
sbb
aaa
insb
jle
and
mov
test
je
aad
imul
cmc
clc
out
jmp
popl
xchg
aad
xchg
jmp
insl
sbb
call
xchg
or
inc
add
xchg
dec
pop
push
popa
out
cmpsl
out
jecxz
xor
dec
out
nop
dec
repnz
jae
push
jno
and
sub
stc
mov
fisubrs
mov
andl
mov
shrl
lods
divb
sub
jo
andb
ret
dec
cmp
in
sbb
je
push
hlt
xlat
test
dec
add
imul
ret
sub
loopne
popf
sbbb
mov
dec
in
lahf
test
lret
pushf
not
sbb
xor
aad
loopne
mov
push
popf
subb
das
push
std
and
clc
insb
xchg
mov
pop
test
or
fidivl
fldcw
push
jle
inc
cmp
mov
push
test
push
push
ds
shlb
push
add
adc
cmp
inc
insl
cwtl
jnp
pop
push
mov
imul
push
dec
push
bound
or
jbe
mov
stc
xor
jge
xor
mov
test
movsb
push
outsb
mov
in
insw
nop
mov
js
dec
popf
sub
add
test
push
add
add
lds
sbb
ret
dec
imul
xchg
and
popa
pop
das
cmp
cs
sub
cwtl
imul
sbbl
scas
fistl
jg
sbb
ljmp
nop
test
jg
mov
cmp
mov
jae
push
and
cmp
in
mov
and
fsubrs
lahf
arpl
cmp
push
xor
adc
popa
cltd
cld
sbb
push
idivb
sub
push
pop
in
xlat
insl
dec
fadd
cmp
lods
mov
xor
xchg
rcrb
andb
andb
lds
xchg
addr16
jbe
jns,pn
cmp
pop
inc
push
leave
loop
push
adc
mov
xor
inc
sbb
es
add
and
inc
mov
dec
xor
repz
inc
pusha
and
inc
dec
push
push
shll
or
sub
sub
stc
testb
icebp
hlt
test
push
leave
jb
repz
mov
std
xchg
fcom
out
jo
mov
pop
rol
mov
int3
mov
jg
int
fstpt
add
icebp
jge
sbb
add
ret
scas
pcmpgtw
out
int3
clc
popa
insb
loopne
leave
pop
or
mov
push
in
popa
aas
xor
jno
xor
adc
cwtl
push
push
pushf
stos
shll
movsb
mov
cmpsl
xor
mov
pop
xorb
adc
ljmp
les
flds
push
mov
shlb
filds
xor
and
mov
je
jp
pushf
and
es
xor
jg
sub
int3
outsl
push
stc
rolb
mov
cmc
xchg
or
sub
lea
adc
xlat
lods
push
test
loopne
gs
xlat
fisttpll
into
out
movsb
stos
aad
mov
mov
dec
fchs
fwait
pop
mov
inc
pop
push
pop
xorl
arpl
lods
repz
imul
iret
lret
pushf
mov
jbe
xor
sbb
dec
imul
adc
xchg
sbb
into
sub
outsb
push
xchg
inc
addr16
outsl
test
or
fst
jge
adc
dec
rcl
xor
push
jno
bound
loop
mov
das
jbe
jecxz
push
sub
sub
lds
loope
les
gs
into
adc
or
push
out
or
xor
arpl
dec
dec
inc
xor
sahf
fists
xchg
mov
orl
sbb
repnz
jno
ja
push
or
out
aaa
test
aas
and
add
out
add
mov
lock
daa
mov
mov
mov
divl
mov
add
mov
int3
outsb
jne
stos
fs
fwait
mov
mov
out
std
mov
sbb
sbbl
stc
xchg
pop
inc
sbb
xchg
mov
imul
rcrl
js
out
push
int
push
dec
repz
cli
sub
push
pushf
in
sbb
pop
jno
cmp
call
push
in
iret
xor
fwait
sbbb
aas
push
fidivl
leave
cmc
dec
popf
test
add
ljmp
xor
das
popf
or
addr16
push
shll
data16
mov
xor
imul
push
sbb
inc
jne
test
pop
hlt
out
repz
and
sub
jns
cmp
mov
xor
into
movsl
mov
ljmp
test
xchg
pop
dec
sbb
insb
cmpsb
and
mov
loop
and
mov
test
mov
cmc
pop
clc
xchg
and
cld
xlat
mulb
jo
sahf
leave
sub
adc
outsl
aam
loop
insb
sub
ljmp
xchg
fistpl
insl
sar
call
mov
in
and
cmp
das
mov
mov
mov
test
jno
cltd
mov
int3
jle
push
pop
inc
push
decb
aad
push
xchg
inc
andb
lods
test
imul
sbb
inc
xor
push
bound
adc
or
in
adc
subl
stos
stc
xchg
cwtl
daa
mov
shl
fstpl
push
jle
aam
shlb
adcl
mov
sti
mov
pop
and
ret
cmp
push
lds
mov
adc
xor
jnp
out
push
lret
mov
add
out
inc
hlt
int3
sahf
push
dec
lock
pop
das
push
das
out
pop
fwait
loop
xor
decl
mov
xchg
enter
adc
test
xchg
popf
xor
xchg
and
out
scas
pusha
sbb
jb
in
xchg
sub
jp
fildl
gs
fldenv
mov
clc
fst
fdivrl
lds
cs
nop
cmp
pop
cli
fstl
daa
mov
xchg
f2xm1
push
add
jb
mov
stos
into
nop
pop
mov
jle
sbb
sub
sbb
aam
xchg
dec
dec
pop
xchg
sbb
inc
xlat
int3
out
cmp
fucomi
jecxz
popl
ss
and
inc
js
fisubrl
mov
sbb
ret
cmp
pop
or
xor
pop
out
imul
pop
and
sub
daa
xor
imul
scas
inc
mov
and
jns
mov
xchg
shlb
cmpsb
pop
pop
hlt
pop
push
insl
ret
adc
inc
cmpsb
mov
insb
mov
pop
test
iret
push
xchg
adc
adc
xchg
or
sub
sub
mov
xor
inc
mov
inc
sti
xchg
xchg
xlat
stos
in
cmc
sbb
xlat
ret
jmp
out
pop
dec
and
jmp
and
adcl
mov
inc
pop
jg
and
addb
cmp
fnstsw
cmp
repnz
mov
outsb
or
ja
dec
hlt
and
sub
sbb
or
in
ss
xchg
push
jp
ja
cltd
mov
movb
movlhps
mov
jno
in
movsb
ficoml
cmp
bound
mov
or
rclb
and
pop
scas
adc
or
punpckhwd
sub
repz
aaa
ljmp
mov
and
add
mov
scas
push
pop
repnz
fnsave
cmp
test
in
cmp
loope
jo
std
xchg
stos
fstpl
mov
data16
std
das
shll
out
dec
dec
jnp
pop
lret
in
popa
out
sub
fmull
cli
call
push
dec
ja
repnz
push
std
adc
cltd
jp
jecxz
sahf
sub
jae
add
test
hlt
mov
push
pop
xlat
xor
push
dec
movsb
clc
mov
jb
outsl
popa
push
sbb
push
pop
jnp
dec
dec
adc
sub
push
mov
xor
jp
adc
repnz
rol
adc
lods
scas
xchg
mov
add
jo
mov
push
sbb
loop
addb
xor
rcl
gs
push
xlat
lods
add
mov
sbb
roll
inc
stos
mov
jbe
fcmovnbe
int3
es
mov
test
outsl
cld
xor
xor
jbe
add
inc
add
push
xchg
shlb
xchg
in
dec
xchg
mov
dec
imul
gs
sti
cs
js
pop
xchg
ds
mov
enter
les
in
sub
dec
fbld
in
lcall
jp
mov
mov
pop
pop
addr16
daa
addb
addr16
scas
mov
and
dec
mov
aam
nop
push
das
xlat
pushl
sub
je
sbb
stos
mov
int3
xchg
ds
sub
push
pop
out
sbb
mov
mov
test
cmp
ror
mov
sarl
mov
cltd
je
bound
bound
daa
sar
in
or
ret
in
stos
shrl
inc
and
out
in
scas
test
and
mov
jae
mov
pop
out
fwait
sbb
out
and
std
jo
mov
push
xor
stc
out
mov
ja
nop
and
mov
jae
pop
add
ja
or
push
sbb
aam
sub
out
cmc
lret
sub
mov
push
and
and
mov
movsb
popa
push
jecxz
lock
mov
mov
dec
ja
add
dec
inc
scas
fmuls
xchg
ds
xchg
cmpsl
out
out
mov
sbb
dec
sub
jne
lock
int3
mov
add
mov
gs
push
mov
add
int3
rol
punpckldq
dec
lock
insb
mov
aad
adc
mov
push
cltd
jb
and
xor
loop
inc
jnp
xchg
pop
not
out
clc
imulb
ds
adc
pushf
or
xor
xor
insl
stc
xchg
xor
add
repz
xor
aas
loope
lods
cmp
or
push
xchg
popf
mov
and
jecxz
sahf
mov
clc
or
subb
out
inc
lahf
jne
jl
pop
int
push
pop
scas
out
mov
sbb
shrd
push
sub
vhaddps
hlt
negl
imul
or
incl
or
xor
stos
cmp
outsb
push
mov
cwtl
xor
dec
inc
jmp
sub
scas
mov
dec
mov
test
leave
push
mov
xor
test
test
test
loopne
sub
fcoml
xchg
cli
or
jg
add
xor
mov
mov
pushf
xor
dec
inc
loop
sbb
clc
mov
repnz
mov
fsubrl
icebp
mov
pop
add
mov
inc
mov
lods
pop
mov
pextrw
les
inc
outsl
cmp
pop
add
outsb
movsl
rorl
ss
loop
call
xchg
cmp
mov
hlt
out
fildll
jo
outsl
xor
xchg
dec
bound
pop
jo
jg
xor
dec
jl
mov
cmp
jbe
inc
popa
jnp
stc
dec
ficoml
rcr
push
xor
leave
mov
cld
test
pop
shlb
fs
sub
add
aas
pop
pusha
or
aaa
inc
outsl
jnp
adc
jl
cli
inc
mov
in
sbb
stos
ljmp
xorl
in
jae
bound
movsb
pop
repz
xchg
js
sbb
xorl
enter
mov
mov
ret
xchg
aaa
and
adc
sub
mov
aam
movsl
out
dec
test
out
or
movb
xor
hlt
lods
cmp
outsl
ja
cmp
xor
mov
ds
pop
scas
fcomp
lods
push
fdivrs
jl
fiaddl
xchg
mov
cmp
push
shlb
mov
mov
nop
aaa
dec
jle
push
cltd
sahf
in
cmp
pushf
pop
and
loopne
cmpsb
cltd
fwait
mov
pop
jae
je
inc
jecxz
shr
shl
pushf
pop
sbb
adc
shll
loop
push
push
push
aaa
dec
popa
adc
fadds
nop
mov
sbb
dec
sub
sbb
or
movl
pop
xor
jg
lea
mov
ljmp
sub
stos
mov
jle
lahf
scas
push
jmp
mov
lods
fiadds
sub
idivb
sub
xor
movl
and
popa
adc
and
hlt
push
adc
lods
cld
xchg
cwtl
ficoms
jno
fisubrl
dec
xorb
js
cmp
push
loop
mov
jge
lock
repz
dec
xchg
push
outsl
xchg
cmp
loopne
mov
add
pushl
loopne
movsl
adc
and
cmp
add
mov
sbb
test
xchg
scas
xor
push
lds
mov
mov
cmp
dec
sub
aaa
add
jno
shll
xrelease
inc
int3
cmpb
sub
cmc
dec
push
enter
mov
cwtl
or
rclb
xor
jecxz
mov
mov
fisttpl
cmp
or
push
fs
aad
aad
stos
xchg
cmp
add
pop
push
or
mov
sarb
div
inc
aaa
pop
jo
add
imul
xchg
out
dec
popa
adc
adc
pop
or
dec
inc
mov
inc
outsl
dec
mov
lahf
or
push
mov
loope
jmp
sub
sarl
fs
les
je
push
dec
mov
pushf
mov
addb
setle
adc
ja
icebp
mov
int
or
into
aaa
outsb
imul
xor
movsl
push
xchg
sbb
xlat
push
imul
lock
add
shl
pop
add
aas
call
in
xlat
inc
push
sbb
xlat
outsl
aam
rorl
test
pusha
insl
push
fnstsw
jg
scas
push
loop
inc
adc
push
dec
mov
out
jno
fnop
sbb
jno
mov
sbb
scas
mov
je
jne
sub
lods
push
inc
ret
lret
adc
adc
xor
inc
jb
bnd
sbb
jg
sbb
jbe
shlb
and
dec
mov
sbbl
and
ss
push
xor
xchg
ljmp
cmp
std
lds
add
ret
lret
or
addr16
idivb
shll
jae
fdivs
push
out
test
inc
xor
dec
inc
adc
mov
movsb
stc
jg
loope
aad
fsubrs
shll
js
pop
daa
repz
stos
inc
imul
add
scas
pop
out
jg
jne
xchg
test
scas
push
fmuls
jnp
or
inc
hlt
imul
bound
lds
add
aad
bound
aam
push
stos
fists
mov
dec
xchg
inc
mov
lcall
into
inc
dec
inc
cmc
dec
int
cltd
cmp
pop
das
inc
call
call
popf
inc
in
sbb
sbb
jmp
mov
fs
out
jecxz
dec
push
ljmp
loopne
ret
xor
jmp
frstor
rorb
mov
push
jne
mov
pop
ljmp
bound
xchg
cmc
cwtl
pop
lret
arpl
test
mov
es
xchg
pop
push
sahf
dec
out
into
sahf
jmp
jns
cltd
popa
outsb
or
jl
xor
cmp
sub
jp
and
outsb
xor
clc
push
lock
and
push
mov
pop
jl
scas
jmp
jp
push
lgs
call
cmp
add
lock
push
cld
jmp
and
dec
pushf
jb
repnz
cmp
cltd
leave
adc
pop
inc
and
mov
imul
aad
adc
pop
cld
gs
xor
mov
sub
sbb
mov
mov
mov
mov
jge
mov
sbb
inc
in
cs
sub
xor
xlat
jge
out
cld
dec
lods
mov
mov
outsb
addr16
sub
ror
lods
in
xor
mov
mov
fdivs
push
mov
outsb
bnd
popf
aad
and
jbe
xor
mov
arpl
fistl
mov
jae
aaa
aam
push
xchg
shr
jne
mov
adc
ffreep
orb
sbb
mov
and
adc
xchg
aaa
lds
sbb
je
push
rclb
inc
rcrl
push
mov
mov
inc
dec
and
std
out
jns
pop
lods
subl
mov
push
out
negb
mov
mov
ds
subl
out
sti
xchg
and
loopne
imul
and
lcall
or
jmp
aam
aad
cmc
lods
xlat
cmp
les
dec
xchg
adc
mov
je
gs
dec
insb
adc
pop
jp
adc
jl
cltd
dec
gs
cs
and
faddl
pop
loope
ja
loop
iret
mov
pop
adc
mov
sbb
stos
pop
inc
ss
jnp
pop
jae
sub
pop
xor
push
stc
lret
cmpsb
jns
mov
jbe
in
fistpll
leave
push
in
and
cwtl
jo
test
ja
or
rorl
ds
add
inc
mov
stc
cmc
mov
out
jmp
repnz
dec
test
movsb
sbb
ret
sti
cwtl
in
pop
mov
movsb
ss
sti
shl
xchg
mov
movsb
mov
add
mov
jb
mov
pop
mov
add
add
cmp
bound
clc
jmp
cmp
dec
cmp
jg
add
pop
int3
hlt
lahf
inc
data16
cltd
jg
pop
test
jae
inc
mov
fucomip
pop
rorl
adc
jns
clc
nop
outsb
push
cmp
inc
rolb
shll
cmp
or
sbb
and
xchg
pop
movsb
clc
in
inc
stos
mov
adc
lret
or
mov
addr16
ss
mov
or
jbe
or
loope
mov
cmp
push
pop
mov
jae
add
jb
sub
stos
push
ds
xlat
sbb
cmpsb
adc
lahf
or
cli
shrb
sbb
pusha
cmp
mov
adc
dec
nop
mov
xor
movsl
repz
lock
lods
ret
xchg
mov
outsl
stc
ret
lods
mov
xchg
icebp
fiaddl
movsl
cmp
mov
and
cwtl
repz
lods
arpl
adc
lock
repz
sub
dec
js
sbb
xchg
mov
ficomps
mov
mov
cmp
and
xor
push
loop
adcl
call
cli
rol
xor
test
adc
fiadds
stos
ret
imul
pop
jmp
sub
imul
loope
sub
test
dec
sub
mov
out
divb
fwait
pop
lods
sub
addl
mov
in
icebp
inc
xlat
stos
xchg
js
cmc
xor
sbb
jp
sbb
nop
xchg
xchg
in
mov
movsl
fadd
shll
repnz
jmp
arpl
hlt
jbe
mov
xchg
push
adc
cltd
sbb
lods
sbb
push
aam
xchg
imul
daa
lret
outsb
sbb
or
jno
cli
es
or
push
pop
ljmp
mov
mov
cmc
mov
mov
sbb
inc
adc
js
dec
add
sbb
cmpsl
sbb
out
mov
loope
inc
or
xchg
loope
lret
or
xchg
xchg
lcall
out
jae
out
cmp
outsb
mov
lahf
aam
push
ret
sbbb
ss
into
loope
adc
orb
mov
and
dec
aam
push
in
mov
and
cltd
xor
shrl
sbb
sbb
mov
loope
adc
adc
adc
into
cmp
push
dec
mov
clc
cmp
adc
rcrb
and
mov
loope
andl
mov
jnp
jl
or
fisubl
push
inc
negl
loope
push
jbe
cmp
dec
jne
cmp
lods
test
jno
mov
fcomip
fdivrs
mov
jb
bound
mov
pop
std
ljmp
add
outsb
pushl
fptan
stos
sbb
repz
aas
mov
jnp
push
mov
sbbb
push
lcall
icebp
sbb
lahf
add
dec
sbbb
insb
imul
out
outsl
sbbl
jge
je
ret
pop
and
xlat
int
fcoms
adc
push
inc
mov
jb
push
inc
inc
ret
xor
ja
push
cltd
gs
and
cmp
aas
iret
cmc
rclb
lcall
xor
dec
xor
xor
pop
sub
or
daa
fisttpll
sahf
es
aas
push
xchg
inc
dec
adc
xchg
rclb
mov
push
xchg
push
out
arpl
inc
pop
mov
repz
xor
lods
pop
push
repz
idivb
pusha
dec
add
jp
out
pop
mov
sbb
mov
xchg
neg
push
mov
test
push
mov
mov
cmp
xchg
lds
sbb
add
mov
shll
shl
sub
pop
mov
inc
lods
cltd
add
stc
jecxz
int3
xchg
sub
dec
pop
cli
sub
dec
push
adc
push
aam
lahf
mov
loop
pop
std
xlat
push
enter
pop
inc
es
dec
stos
jge
sahf
xor
sub
mov
fwait
push
push
inc
lret
xchg
shl
leave
addr16
xor
xchg
cmp
rcr
cmpsb
fcmovne
mov
xchg
jno
sahf
movsb
jg
pop
mov
push
addr16
imul
movsb
data16
repnz
out
inc
sub
sbb
aas
add
rorb
sti
les
mov
shll
jmp
mov
repz
test
xor
aam
arpl
cli
imul
and
or
movsb
cwtl
imul
sbb
lods
lock
daa
in
and
mov
lret
or
mov
jmp
arpl
fwait
mov
out
lods
fsubl
cmp
cld
pop
jo
mov
imul
pop
mov
mov
sbb
rcrb
int
in
or
jmp
mov
push
xor
cmp
mov
jo
mov
fs
mov
xchg
imul
lds
inc
lahf
lret
andl
jb
les
push
or
mov
push
and
push
sub
add
stc
jg
js
pop
add
hlt
imul
pop
mov
test
imul
repnz
fstpl
push
or
xor
sub
mov
cmp
adc
dec
data16
sti
out
cmc
aam
outsb
xchg
cmpsl
cmp
inc
aaa
xor
repnz
mov
jne
cmpsb
lock
sub
imul
mov
inc
subl
dec
scas
pop
ljmp
or
lds
mull
or
test
rcl
popa
int
mov
incb
mov
aas
cmp
jge
pop
inc
fadd
jp
cmc
pop
push
gs
mov
jp
hlt
insl
test
mov
insl
and
out
fs
lcall
popf
xor
mov
je
inc
add
dec
xor
add
push
les
fcmovnb
lahf
ret
jg
inc
push
in
arpl
mov
pusha
lahf
and
mov
xor
jno
adc
jecxz
mov
inc
leave
lret
stos
add
psllw
aaa
imul
shlb
int3
dec
sbb
ret
sahf
add
or
hlt
sbb
loop
push
mov
push
xlat
cmp
lods
or
inc
aam
sti
push
pop
mov
adc
lea
push
and
sbb
adc
push
out
and
in
sbb
and
pop
and
call
gs
shrl
mov
dec
mov
pop
xchg
lock
ficoml
js
aaa
xor
mov
jmp
and
mov
pushf
mov
das
push
jns
lock
sub
add
sbb
ret
inc
popf
or
dec
mov
scas
sbb
ja
xchg
outsl
shll
ja
inc
cmp
mov
std
pusha
nop
push
cmpsl
fcomps
ficoml
mov
fldt
in
xchg
pop
jnp
lock
mov
cs
shrl
jbe
inc
int3
xchg
fisubrs
push
sti
mov
cmpsb
movsb
ret
andb
ljmp
push
push
pop
fadds
std
enter
mov
push
dec
cmpsl
repnz
je
icebp
push
push
sarl
outsb
inc
lea
lcall
sbb
jns
shrb
cmp
lret
adc
xorl
jne
stos
lods
sub
mov
rcl
scas
ja
pop
jnp
fcmovbe
mov
or
push
insl
sub
mov
loopne
lds
stos
or
sarb
or
leave
add
fldcw
and
add
sbb
imul
add
mov
lahf
jne
xchg
std
lods
es
and
xor
sbb
push
sub
mov
bnd
jb
jno
jp
out
xor
out
add
movsl
lsl
xor
ret
enter
test
sub
xor
mov
in
add
sub
and
addl
mov
jmp
push
pop
das
cmpsb
pushf
inc
sarl
sub
iret
push
cmp
sub
sahf
movsl
or
rcr
add
sti
jecxz
js
sub
ljmp
int3
cs
ds
push
int3
cmpb
test
push
mov
inc
roll
mov
pop
movsb
mov
jne
mov
loope
stos
dec
push
mov
push
and
repz
mov
out
mov
cmp
xchg
jl
popf
fstl
movsb
inc
cmp
adcl
inc
out
xor
push
rolb
aad
xor
aad
pop
fistpll
test
rdpmc
je
pop
mov
or
pop
icebp
mov
shr
fs
shll
mov
dec
mov
dec
mov
xchg
xchg
cmp
repz
lret
adc
jns
mov
mov
push
pop
inc
dec
outsb
frstor
je
cwtl
jp
inc
jle
inc
sti
divb
and
shl
push
movsb
scas
fstl
aam
aas
shll
scas
mov
cmpsb
pop
sahf
push
jns
xor
inc
push
add
pushf
cmp
jbe
cld
cmp
popf
xor
sar
incb
pop
pop
sti
shl
or
fimull
pop
push
mov
in
les
mov
mov
mov
roll
mov
jne
nop
jl
in
cltd
imul
inc
jl
fwait
xchg
or
push
xchg
shlb
aam
inc
mov
jns
rorb
mov
mov
iret
je
pop
mov
mov
imul
dec
xor
sbb
in
mov
push
fsubrs
cmp
cli
fnsave
cmp
mov
jbe
jle
sub
add
xchg
jno
or
cmc
idivl
ficoml
push
jae
test
rorl
mov
lret
inc
mov
push
sbb
pushf
sti
fidivl
xor
jle
inc
arpl
xchg
pop
js
lret
stc
movsb
mov
lahf
test
jp
xor
or
xchg
add
cmpsl
in
cmp
shlb
adc
ds
fwait
insb
jle
adc
dec
lcall
rolb
lcall
push
push
adc
jl
or
test
sub
sub
repnz
inc
push
cmp
cmp
js
fstl
jl
in
jne
mul
xor
inc
mov
adc
mov
data16
or
sti
in
clc
aas
add
mov
dec
cmp
mov
fisubrl
mov
filds
test
xchg
fisubrs
mov
lods
and
repnz
out
xor
mov
push
sbb
jnp
scas
or
xor
sbb
daa
or
fldl2e
jle
cmp
ret
nop
or
aaa
mov
aaa
xchg
dec
inc
sbb
xchg
sbb
mul
clc
je
dec
orb
jbe
sbb
xor
pusha
pop
aam
mov
aas
xchg
neg
inc
icebp
lret
push
cmp
push
xor
ljmp
aaa
jge
stc
push
pop
arpl
inc
je
das
sub
mov
in
pop
test
dec
jecxz
jp
mov
sbb
add
or
cmp
iret
xor
sti
lret
mov
or
sahf
fsubrs
insb
iret
cld
int3
sbb
xchg
pop
mov
cwtl
cltd
lock
js
sbb
aad
sub
outsl
shll
or
and
fistpll
popf
cmp
xor
and
jle
scas
adc
sarb
cwtl
xchg
sarb
shr
dec
fidivrs
test
in
popa
fdivrl
insl
mov
jbe
lods
scas
mov
call
ds
out
outsl
add
xor
jmp
jns
mov
cmpsl
stos
xlat
outsl
out
dec
lahf
add
fidivs
hlt
xor
push
nop
cmpsl
inc
bound
push
je
hlt
add
cs
dec
out
fbld
repz
push
or
les
and
adc
stc
jns
bound
add
xchg
pop
ret
stos
mov
ja
into
jl
add
loope
shlb
sub
loope
idivb
cltd
xchg
and
push
mov
mov
loopne
into
inc
cltd
dec
cld
mov
pop
adc
movsl
aas
negl
sub
sbb
add
rdmsr
sbb
xor
stos
enter
mov
pop
or
cmpsb
jecxz
cmp
imul
lahf
out
lea
mov
inc
stc
cmp
nop
adc
push
and
and
in
test
pop
test
inc
ss
sub
xchg
inc
leave
push
repnz
and
sub
mov
jle
subb
rcl
in
cld
pop
rorb
test
adc
stc
fs
sbb
and
sbb
call
xchg
pop
loope
add
icebp
inc
ret
mov
mov
add
sub
cmp
push
cmp
jbe
aaa
cmp
jle
cmp
lcall
mov
out
ret
loop
mov
push
pop
push
dec
mov
movsb
xchg
js
lods
cwtl
loope
es
inc
cld
aam
inc
push
imull
fistps
lahf
xchg
aad
jmp
pushf
cmp
lret
scas
mov
mov
pop
leave
mov
rolb
jge
js
mov
inc
pop
lods
lcall
push
pop
cmp
cmp
cmpsl
leave
maskmovq
testl
mov
mov
cmp
xchg
lret
dec
cld
leave
ret
scas
xor
sub
and
add
test
iret
out
mov
jmp
nop
lret
adc
pop
sub
cmp
jg
inc
popf
cmpsl
and
das
aad
repnz
fwait
scas
out
fwait
jecxz
lods
stos
leave
mov
imul
sbb
add
sarb
lret
lahf
or
inc
roll
rcr
adc
xchg
xor
movsb
xchg
sub
mov
mov
pushf
dec
lret
xchg
inc
ja,pt
and
outsl
xchg
xlat
push
in
push
push
jmp
push
xor
fwait
shll
cmp
sarl
dec
or
sub
popf
mov
outsl
sbb
aam
cmpl
jnp
pop
adc
lahf
rcrl
dec
mov
lods
push
insb
int3
push
xchg
int
iret
imul
add
mov
push
mov
dec
mov
sahf
mov
jb
lods
lods
js
mov
cmp
popa
adc
cmp
xor
push
jae
in
mov
push
in
in
cwtl
cwtl
mov
ja
or
xor
xchg
cmp
shll
cmp
xor
jo
adc
mov
or
push
test
stos
mov
flds
loopne
popf
sub
add
subb
aam
dec
mov
dec
repnz
cmp
stos
push
jo
or
jmp
fistpll
sub
mov
jo
xor
jecxz
lcall
fwait
lea
and
or
scas
or
lock
mov
pusha
icebp
xor
fnstsw
es
call
dec
mov
adc
lcall
mov
mov
test
pop
mov
ljmp
jmp
lea
or
popf
xchg
adc
xchg
imul
inc
loope
sti
sbb
sbb
add
and
jmp
jne
stos
mov
mov
xchg
mov
shr
clc
cmp
ret
ja
insl
mov
arpl
das
dec
nop
hlt
jl
decl
jns
lcall
mov
aas
int3
cli
les
ficoml
pushf
xor
out
repz
inc
sub
cmp
lods
jns
mov
roll
scas
or
jne
es
insb
cmp
inc
and
sbb
mov
mov
mov
and
daa
adc
fnstenv
lea
push
xor
add
testb
or
xor
dec
mov
and
fbld
jmp
xchg
test
call
jmp
jmp
adc
pop
mov
mov
jne
pushf
xchg
cmp
jle
dec
push
lods
in
dec
lret
sbbl
pushf
ljmp
cmc
adc
pop
adc
out
or
dec
into
addr16
cmp
lods
mov
adc
add
jl
or
cmpsl
cltd
dec
adc
sub
or
int3
or
dec
inc
sarl
out
mov
jns
ja
or
movsb
rorb
and
bound
push
es
inc
sbb
mov
mov
fisubrs
arpl
rolb
sbb
push
sub
or
rcl
or
xchg
test
add
insb
enter
lret
xchg
icebp
out
loopne
cmp
xorl
cli
push
test
pop
sbb
jp
and
test
adc
xchg
mov
aad
fistpll
outsb
add
sub
cmp
sbb
insb
pushf
rcll
and
pop
in
sbb
cmp
push
push
sarl
pushf
aad
fs
pushf
aas
sub
pop
jbe
jge
data16
mov
imul
mov
mov
sahf
jle
xchg
lret
lahf
sahf
push
mov
mov
jno
dec
dec
in
sub
or
mov
daa
dec
sub
sbb
push
add
int3
in
xor
mov
jno
jg
add
jb
bound
loop
or
mov
das
pop
mov
mov
sub
push
aaa
or
xchg
cmp
cmpsl
pop
test
loopne
push
jb
mov
cmp
mov
ja
movsl
pop
jecxz
adc
inc
popa
jne
imul
adc
mov
mov
xor
stc
hlt
fiaddl
pop
fisttpl
ret
lahf
adc
inc
out
rolb
rorl
shll
inc
and
das
dec
or
movl
mov
mov
inc
cmpl
jnp
fdivl
mov
ret
adc
jmp
fistpl
push
popa
fldt
lods
shrl
add
add
in
mov
imul
js
loopne
mov
pop
xsaves
imul
hlt
or
jnp
jnp
stos
cwtl
shl
dec
aam
movb
pop
or
adc
jae
scas
jmp
scas
in
jle
leave
sarb
sbb
sahf
xchg
cwtl
hlt
jbe
sub
dec
pop
clc
mov
cmpsb
mov
rclb
jnp
insb
jmp
pop
add
push
sbb
xchg
nop
mov
sbb
lods
and
sbb
mov
pop
dec
ljmp
push
push
push
iret
mov
adc
push
lcall
xor
mov
pop
loop
sbb
lods
pusha
stc
add
fsts
nop
cmp
lods
cmp
es
add
rorl
sbb
push
ss
aam
pop
jns
movsb
into
outsb
push
add
lds
das
mov
sbb
jne
jo
rcrb
ljmp
shrl
pop
lret
clc
test
lahf
adc
mov
dec
add
in
sti
cltd
rorl
pop
cmp
cmp
jbe
insb
mov
mov
insl
cmp
insl
dec
and
cmp
mov
das
and
in
inc
mov
lahf
jo
sbb
fwait
mov
push
mov
idivb
pop
lods
pop
add
cmovg
xchg
mov
out
adc
mov
les
inc
nop
mov
lds
cmp
or
pop
shlb
in
and
stc
sti
pop
mulb
js
leave
repnz
xor
pop
adc
test
pusha
jle
push
mov
push
jp
push
cmp
dec
push
sub
orl
sahf
cs
fs
xlat
outsb
pop
repnz
dec
sub
ljmp
stos
in
push
pop
xchg
adc
xor
stos
outsb
xor
shr
insb
inc
imul
dec
sbb
and
popa
pop
cmp
mov
adc
or
jbe
push
cmp
sub
sub
pop
sahf
push
mov
scas
push
cmp
js
insl
inc
outsb
pop
pop
negb
mov
adc
dec
dec
inc
aas
inc
mov
test
jno
fnstenv
and
fwait
xor
jle
add
bound
jo
or
pop
add
xchg
xchg
dec
jle
loopne
pushf
loopne
inc
mov
xchg
push
cmp
push
movsb
push
js
push
jno
ds
test
movsb
inc
mov
adcl
js
inc
scas
outsl
imul
mov
pop
mov
jg
jp
stos
imul
test
sub
xor
xchg
add
pop
subb
mov
ds
fadds
dec
enter
jbe
sti
adc
jbe
lea
repnz
test
and
lods
fsubrs
xchg
push
push
xor
icebp
mov
adc
ret
gs
mov
push
in
dec
hlt
gs
stc
or
nop
and
sub
lret
nop
push
out
xlat
ret
fs
push
add
das
call
sub
sbb
push
adc
mov
jle
mov
lods
lret
js
lret
outsl
pusha
fucom
call
fisttpl
dec
pop
jmp
cmp
pusha
cmp
push
mov
fmuls
mov
enter
cwtl
jecxz
push
iret
sub
out
out
shlb
mov
int3
xor
mov
lcall
dec
repnz
dec
jecxz
sub
xor
push
adc
shll
pop
sub
mov
sub
mov
mov
and
fsubs
in
fdivl
lods
stc
nop
fisubrs
xor
jns
pop
jge
lret
pop
push
pushf
and
addr16
aad
notb
push
push
or
std
test
xchg
push
sub
push
adc
movsb
xchg
mov
xchg
repz
iret
mov
test
xor
sbb
stc
lcall
or
jnp
shll
loopne
sub
push
mov
test
fwait
cmp
in
sbbl
pop
mov
inc
mov
out
jb
bound
sub
cli
dec
outsb
jl
xchg
mov
xchg
lods
sub
mov
shlb
xchg
int
pop
ficoms
xchg
push
or
sbb
pop
adc
insb
push
les
adc
push
test
iret
inc
repnz
lcall
mov
rorl
sub
sub
mov
add
push
mov
sub
pusha
push
call
ljmp
fs
int
mov
xchg
adc
push
add
pop
mov
cmp
in
xlat
aaa
push
or
sub
xor
ret
fiaddl
repnz
ja
inc
jge
sbb
cmp
test
jge
sahf
or
pop
push
ret
subb
or
repz
mov
movsl
cmp
cmp
mov
movsb
mov
cmp
jmp
push
in
inc
test
push
adc
cmpsl
jmp
scas
shll
inc
mov
insl
sbb
imul
and
cmp
ror
fldt
adc
not
rcl
dec
jne
sbb
scas
cmp
sub
xchg
xor
mov
stc
test
pop
or
xchg
nop
push
mov
and
jnp
push
fistps
xchg
daa
and
iret
test
jecxz
data16
mov
lea
xchg
stc
inc
cltd
xchg
fadds
dec
aaa
ss
push
cmp
xor
mov
pop
es
ret
mov
aas
sbb
mov
jo
jnp
push
test
sbb
leave
mov
js
out
aam
fists
std
loope
dec
int
enter
jmp
fldcw
andl
sbb
out
push
inc
xor
xlat
lahf
popf
stos
std
icebp
jl
lret
popf
push
fwait
in
sub
sbb
jbe
mov
cmp
mov
cmc
lods
mov
mov
push
cmp
fstl
mov
jbe
mov
or
lock
imul
repnz
pop
cmp
dec
cltd
stc
dec
mov
push
xchg
insb
movsl
sbb
add
aaa
das
out
xor
aas
cmp
xchg
jae
sbb
or
popa
movsl
or
aaa
stos
mull
inc
ror
cmp
push
sahf
adc
enter
into
push
outsb
dec
scas
je
mov
aad
xchg
sub
cmp
fildl
ds
cmp
loopne
or
fnsave
mov
jmp
push
add
shl
fisttpll
cmpsl
jmp
cmp
or
iret
int
sub
adc
mov
std
call
mov
fidivrl
push
pop
sbb
call
xchg
bnd
sbb
adc
add
jae
sahf
out
inc
inc
and
in
xchg
jae
xchg
jb
es
insl
insb
pop
std
push
js
jle
repnz
in
add
repz
lea
idivb
inc
and
movsl
lahf
xor
xchg
xlat
ret
adc
cmpsl
push
dec
lret
ret
add
sbb
enter
stc
mov
jecxz
mov
xorl
nop
ficoml
mov
adc
add
pushf
and
pop
fs
cmp
mov
cmc
mov
xor
test
xor
jo
mov
icebp
mov
xchg
mov
push
repz
inc
test
xchg
and
call
or
out
cwtl
icebp
insl
fdivp
leave
inc
fidivs
xchg
insl
shl
loopw
sbb
xor
add
in
fldl
fidivrs
adc
enter
jp
add
add
out
out
adcb
inc
sub
jns
add
inc
out
push
cmc
cltd
pushf
fldl2t
iret
or
pop
sub
aaa
adcb
cmp
inc
adc
mov
pop
adc
inc
jae
out
push
insl
and
adc
push
jmp
push
ds
repz
sar
mov
aas
shrl
sahf
push
sub
push
negb
rolb
or
mov
push
xchg
dec
ds
sahf
jae
imul
xchg
push
or
je
jae
xchg
dec
xchg
add
sub
jae
xchg
shl
es
pushf
lret
call
push
and
arpl
cltd
fucomip
jl
sbb
int3
repz
add
cwtl
cmpsl
and
adc
scas
xor
ds
and
nop
loop
fdivr
popf
jne
cmp
int3
jb
mov
cmc
sbb
addb
std
loop
mov
xchg
hlt
fisttpll
ja
xor
push
shll
movsl
cmpsl
pop
mov
pushf
rorb
inc
js
sti
int
xor
cmp
or
pop
pop
add
into
aad
icebp
jne
out
xchg
xorl
inc
mov
ja
das
imul
or
loope
cltd
and
push
mov
test
pop
cmp
jmp
rcrb
mov
mov
repnz
mov
pusha
insb
scas
jo
shr
xor
mov
ror
mov
mov
arpl
in
mov
xor
cmp
jl
jbe
loope
icebp
ds
push
mov
dec
sub
xor
cmp
movsl
out
scas
in
xchg
add
pop
cmpsb
pop
jmp
fistpll
rol
loope
push
enter
xor
and
push
lods
popf
out
sub
mov
and
js
jp
mov
mov
aad
sub
sti
sti
loope
stc
test
rolb
out
adc
lcall
add
mov
ljmp
lcall
cmc
sub
dec
stos
xor
stos
std
inc
jle
adc
mov
jmp
pop
and
xor
loope
cmp
lock
inc
leave
xor
push
inc
fdivr
jo
mov
sub
nop
inc
dec
xor
je
jle
test
daa
push
push
inc
out
push
in
fdivp
and
fcoms
shlb
stos
out
or
xchg
mov
adc
push
cmc
mov
cmp
inc
cmp
movsl
xchg
xchg
jmp
aas
inc
inc
adc
xchg
pop
xchg
mov
js
mov
mov
cmp
and
xchg
les
fadds
dec
subb
mov
lds
inc
int3
push
pop
inc
push
xchg
xlat
and
data16
test
out
idivb
ss
cmp
pop
movsl
and
sbb
lea
insl
xchg
sub
mov
mov
cmc
inc
fstl
fs
lret
mov
sti
icebp
and
andb
and
sbb
jl
sbb
push
add
cli
pop
pusha
ja
xor
mov
inc
push
call
out
popf
ss
inc
xchg
mov
in
lods
out
fnstenv
fmuls
shlb
stos
push
dec
pop
ljmp
out
leave
rcrb
cmp
mov
imul
jp
jge
in
js
loopne
cmpsl
stc
sbb
sub
pop
outsl
ljmp
add
jle
fs
adc
pop
pop
inc
mov
mov
addr16
bound
cld
pop
movsl
js
xor
cmp
out
sub
add
cli
xchg
and
mov
add
je
mov
cmp
and
pusha
inc
push
out
outsl
xchg
xchg
mov
out
dec
cmc
outsl
dec
mov
repnz
cmp
or
mov
push
cmp
jae
test
push
mov
fidivs
sbb
jmp
lahf
push
add
aam
test
icebp
mov
and
outsl
cs
or
add
in
jne
jne
out
pop
fcoml
fnstsw
pushf
push
pop
jmp
mov
lods
jae
push
test
and
rcrb
mov
mov
push
jp
pop
add
push
sub
cmp
jecxz
outsl
outsl
xor
bound
inc
hlt
jbe
ror
imul
mov
ret
adc
andnps
rcrl
out
shll
cmp
nop
inc
ss
jnp
jae
jmp
divl
mov
sbb
outsb
mov
add
xchg
xlat
out
shr
leave
clc
inc
push
daa
lcall
mov
lea
loop
pop
out
shll
jmp
ljmp
pop
or
sar
adc
or
jae
adc
mov
adc
xchg
adc
test
and
mov
jo
cmpsb
hlt
sti
jmp
es
inc
inc
mov
lock
jge
mov
out
adc
out
xchg
gs
jnp
xchg
mov
inc
out
dec
jb
pushf
mov
rolb
xchg
add
xor
lcall
mov
jge
inc
mov
gs
inc
gs
xchg
lds
push
and
mov
dec
add
rclb
stos
scas
loope
pop
fstpt
sti
xor
lret
pop
ja
inc
pop
test
push
ret
fistps
pop
fnstenv
dec
test
fmulp
xlat
stos
sahf
xchg
lock
xchg
je
mov
mov
cli
aas
in
std
sub
push
test
or
inc
sarb
mov
shl
cmp
push
dec
xchg
push
mov
xor
dec
je
dec
loopne
push
inc
pop
sbb
daa
inc
cwtl
cmp
rep
xor
cmpsb
movsb
rcl
movl
pop
cwtl
dec
in
add
and
mov
gs
push
leave
fiaddl
stos
sub
lds
push
outsb
cmp
pop
hlt
push
lcall
nop
imul
cmp
mov
out
sbb
es
add
sub
test
or
mov
fsubl
sbb
inc
in
jns
pop
xchg
mov
or
orb
xor
and
xor
addr16
cli
sbb
cmp
ljmp
out
pop
cmp
aam
data16
loop
aas
imul
push
add
xchg
mov
jg
int3
jl
outsl
push
in
aad
imul
ss
shll
leave
add
or
ss
jne
mov
in
dec
aam
xchg
aad
and
jb
xchg
out
daa
cwtl
int3
xchg
int
sbb
mov
roll
push
cld
leave
call
xor
iret
pop
adc
mov
into
sbb
sub
es
cmp
loope
scas
xor
push
push
mov
in
and
das
xlat
lock
dec
pushf
shrb
pop
sub
mov
xor
and
push
mov
cmp
pop
rorl
pop
adc
xor
sahf
cmc
test
punpckhdq
pop
xor
js
movl
or
jl
inc
push
fisttpll
adc
imul
inc
xor
scas
inc
fiadds
enter
pushl
inc
addl
adc
push
or
xor
xor
xor
add
xor
aas
jae
push
pusha
xchg
cmpsl
mov
dec
ja
mov
cli
mov
fucomip
jne
fs
sbb
xchg
push
cmp
dec
in
or
clc
and
fldcw
sub
cmp
push
movsb
inc
lahf
jno,pt
cmpsb
mov
and
jge
out
and
fiaddl
xor
shlb
adc
imull
jp
mov
dec
mov
dec
dec
cmpsb
adc
adc
hlt
jnp
lock
xchg
jo
push
mov
jecxz
std
cli
inc
cmp
inc
int
lods
imul
clc
stos
add
xchg
and
shl
and
adcl
or
lods
ja
jnp
addr16
xor
pop
or
testb
adc
mov
xchg
and
jg
jne
pop
mov
dec
xchg
dec
adc
or
arpl
xchg
pop
push
jne
adc
mov
xchg
shl
push
adc
push
mov
out
mov
call
jmp
in
sbb
stos
cwtl
inc
pop
fadds
mov
and
push
xchg
pop
xchg
loope
dec
and
gs
jle
mov
cmp
xchg
cmpsl
sub
cmp
push
dec
dec
sbb
or
test
pop
and
jno
mov
into
xlat
aad
pop
sub
adcl
lock
es
cwtl
bnd
inc
mov
cmpsl
cltd
or
fldenv
sub
orl
aas
out
xor
xchg
adc
or
pop
lret
mov
jp
out
fisubs
mov
rcrb
sbb
sahf
dec
dec
push
jno
jg
std
out
xor
dec
outsl
cmc
aam
loopne
aaa
out
gs
out
int
sti
dec
mov
fstps
rorl
pop
mov
push
notl
jl
mov
push
adc
jne
lods
rcrl
pop
xor
jb
jl
cmp
and
iret
pop
push
jmp
mov
daa
dec
cmp
pop
inc
adc
lret
jp
lea
inc
cmp
jge
mov
loopne
or
add
and
int3
mov
lods
sbb
cltd
push
iret
adc
sub
aam
movl
popa
mov
insl
mov
into
pop
push
outsl
or
xchg
mov
add
jae
xlat
mov
rorb
aas
stos
pop
jmp
iret
dec
ret
je
push
aas
out
adc
cmp
ss
adc
xor
jg
mov
ret
dec
ja
shrl
movsb
dec
or
mov
jmp
jnp
add
dec
maskmovq
testl
pop
loopne
cmpsb
out
cmp
cmpsl
fdivrl
mov
sub
out
outsl
xchg
add
cmc
cli
xor
lds
ja
cltd
sbb
sub
adc
xor
movsl
mov
lret
xchg
fwait
sbb
push
scas
mov
pop
push
hlt
sub
addl
push
cmpsl
add
inc
sbbl
mov
lds
cmpb
es
add
add
shll
insl
lret
sbb
scas
xchg
stos
ljmp
in
sub
push
inc
popa
xor
iret
or
and
pusha
scas
daa
pop
and
cs
lods
inc
in
lods
sti
push
scas
xor
sbb
ljmp
jae
mov
popf
add
fs
push
inc
inc
xchg
inc
pop
fbld
fwait
pop
es
aaa
mov
rorl
push
cli
scas
pop
xchg
imul
dec
stos
add
cmpsb
iret
sub
int
int
sub
rorl
es
cli
les
cmp
lahf
aad
push
ficompl
lahf
xchg
sbb
mov
add
jo
mov
sar
dec
aad
sub
lea
test
loopne
push
jg
inc
int
mov
push
insb
loope
mov
aam
dec
icebp
dec
add
outsb
lods
xchg
push
jae
popa
lods
mov
pusha
fidivs
dec
insb
out
data16
leave
sbb
bound
in
scas
arpl
call
sub
xchg
xlat
mov
dec
fwait
divb
lea
sarl
repz
jge
jbe
inc
dec
std
cmpsl
mov
fadds
mov
movsl
stos
mov
and
pop
lods
hlt
adc
pushl
add
mov
mov
push
add
and
adcl
jmp
mov
out
cmpsb
test
icebp
dec
dec
out
jnp
daa
jmp
iret
outsb
push
daa
in
mov
es
out
cmp
les
mov
rcr
push
int3
dec
cmp
xor
cmp
add
pusha
in
dec
mov
dec
shrb
test
inc
ret
fsubrs
iret
outsb
cs
cs
fwait
outsl
popa
fildl
xchg
les
dec
xlat
or
pop
or
push
adc
xchg
mov
jg
loopne
or
cmp
lret
lods
fstpl
cmpsb
fcoml
jns
pop
dec
sbb
push
and
outsl
lret
sets
cltd
add
dec
movsb
jg
push
mov
sub
cmp
xor
fistpl
lea
pushf
sub
loope
sbb
cwtl
push
inc
ja
pop
adc
adc
xchg
push
xlat
aad
pop
sarl
ljmp
cmp
pop
lcall
js
int3
mov
popf
push
out
sub
lods
sub
shl
push
jl
aam
rcr
mov
mov
js
das
pop
fs
dec
shll
arpl
inc
sti
inc
jno
std
lods
test
idiv
fimull
or
dec
mov
mov
aaa
in
xchg
xchg
pop
pop
push
test
ret
inc
sti
mov
mov
aas
fsubrl
test
rolb
adc
cs
sbb
lahf
cltd
pop
mov
out
outsl
add
push
lock
mov
enter
int3
lcall
das
fst
rcll
inc
add
mov
or
mov
pop
dec
cld
pop
sbb
mov
insl
adc
addr16
mov
ret
loopne
mov
dec
test
push
xchg
cwtl
xor
mov
test
icebp
loope
cmc
cmpsb
loope
mov
xor
ds
or
mull
pop
xorl
js
cld
aaa
lods
test
f2xm1
dec
xchg
push
in
mov
mov
inc
fisubrl
addr16
xchg
adc
out
shlb
shl
int3
lret
sub
or
cs
lret
sub
jne
cmc
lahf
and
incb
mov
mov
in
mov
inc
mov
or
pop
popf
in
push
fbstp
add
test
insb
hlt
adc
imulb
mov
iret
bound
pop
inc
std
frstor
insb
lods
sbb
mov
mov
aad
inc
sbb
pop
js
movsl
in
or
cmpsb
fs
iret
or
lock
pop
dec
in
rorb
mov
clc
out
lcall
mov
jne
or
and
or
add
cltd
les
xchg
cmp
stos
pop
jbe
sahf
cmpb
pop
out
adcb
inc
and
sarl
fbld
jb
xchg
mov
sub
jns
jb
sbb
je
mov
dec
leave
enter
icebp
and
das
fisttpl
stos
sbb
pop
pop
mov
cmc
adc
ja
jnp
sub
mov
fdivs
test
xchg
sahf
or
mov
add
loopne
sti
dec
jp
pop
in
push
test
mov
pop
xchg
jge
push
cmp
add
sub
inc
mov
in
jae
aas
inc
stos
cwtl
je
inc
pusha
movsb
pop
inc
mull
pop
out
dec
inc
fld
pop
test
push
aaa
fstl
icebp
pop
jl
cmp
mov
scas
inc
cmpsl
loopne
mov
or
clc
jne
lcall
jg
pop
jmp
cmp
jle
and
leave
xlat
or
jecxz
dec
xchg
lds
out
push
mov
sub
sahf
movsb
or
or
mov
repz
adc
adcb
xor
lret
adc
stos
ds
sbb
fsubrl
adc
and
sti
xchg
sbb
mov
rclb
dec
adc
inc
pop
out
and
cmp
inc
in
mov
mov
jl
pop
je
sub
dec
push
arpl
xorb
mul
push
inc
xor
mov
lods
or
adc
movsb
pop
andl
mov
arpl
or
push
in
xchg
out
xchg
jns
mov
mov
pusha
clc
inc
add
dec
and
jne
xor
test
dec
inc
and
pop
enter
jecxz
addr16
stos
fcompp
dec
sahf
imul
add
lods
mov
pushf
pusha
sbb
pop
daa
mov
dec
push
jmp
or
push
sbb
push
in
jp
les
mov
pop
lea
xor
sub
mov
in
jmp
xchg
or
mov
sbb
xor
xor
in
xor
out
or
lahf
xchg
push
xlat
pop
sbb
das
movsl
sti
subl
inc
inc
sub
adc
addr16
aad
sbb
cmpsl
cltd
lock
je
and
push
mov
ss
cmp
pop
add
pop
inc
or
lods
andb
push
pop
stos
jno
cwtl
cmp
inc
sbb
adc
sbb
das
push
iret
test
mov
ja
pop
mov
xchg
mov
sbb
inc
or
cwtl
mov
push
add
stc
pop
stc
ds
jecxz
inc
add
xor
fists
movsb
xchg
and
add
lret
or
sbb
outsb
adc
push
in
leave
popa
mov
inc
shll
sub
mov
mov
enter
push
imul
add
sub
lods
sub
jecxz
pop
imul
push
clc
rol
cmp
inc
addr16
jl
fstl
and
pop
lods
loope
test
inc
scas
imul
jmp
lret
adc
leave
cmpsb
insb
sbb
sbb
icebp
or
ljmp
loopne
fists
div
insl
xlat
dec
les
mov
lea
xchg
adc
push
imul
test
add
dec
fildl
or
lock
in
popa
int
cmp
cmpl
repnz
jno
movsl
std
push
movsl
push
add
ret
push
movsb
cld
repz
stos
pop
test
push
cmc
aad
and
arpl
push
xchg
mov
mov
stc
dec
out
add
out
and
mov
sub
lret
ss
imul
cltd
imul
mov
jge
add
iret
jg
in
inc
jnp
add
out
rolb
sbb
sbbl
push
sub
jg
push
ljmp
xor
sub
inc
push
cmp
mov
into
leave
shlb
mov
jnp
mov
aaa
fdivp
sbb
push
aas
jno
in
int3
jo
push
inc
iret
fadds
test
dec
lock
dec
or
lret
es
dec
inc
or
inc
push
es
sahf
test
jae
pop
std
sbb
test
adc
jae
addl
orl
push
out
dec
mov
shufps
andl
ret
fnstenv
inc
jns
dec
jns
stc
icebp
stos
gs
fwait
xor
inc
aaa
pop
xchg
jecxz
dec
cpuid
movsl
lock
insl
pop
jne
int3
orb
lods
mov
xlat
mov
xor
roll
and
jae
dec
jge
mov
sti
cmc
jl
cltd
aad
into
jl
cmpsl
daa
cmp
xor
sbb
sbb
clc
cli
ljmp
and
mov
decl
and
mov
cmp
xlat
inc
adc
pop
in
jp
ja
repnz
jno
repnz
cmp
and
enter
outsb
dec
mov
idivb
andl
xchg
inc
jp
mov
mov
out
test
or
jae
push
mov
stc
mov
jp
notb
fcoms
icebp
cmp
xor
out
cmp
jae
roll
das
add
and
pusha
lahf
imul
scas
loope
pand
movsl
repnz
inc
dec
inc
mov
push
test
cmp
or
sti
inc
or
fcomps
cld
aad
fcomi
mov
imul
int
fadd
xchg
cmpsl
sbb
push
pop
negb
jge
xchg
cmp
jns
out
nop
mov
movsl
ljmp
and
fmuls
popa
bound
movsl
ss
loop
pop
test
ror
imul
iret
daa
xchg
dec
mov
mov
scas
jno
lea
or
ficomps
mov
xor
mov
pop
push
xor
punpcklbw
js
sub
rcrb
jmp
dec
mov
jmp
aam
daa
bsr
adc
or
adc
sbb
xchg
sub
xchg
and
mov
xchg
cwtl
cmpsl
pop
push
popa
cltd
add
xor
dec
dec
push
sbb
adc
push
lcall
inc
mov
shlb
popf
xchg
imul
sbb
insl
arpl
mov
jle
xchg
inc
lods
imul
sub
loopne
and
mov
push
xor
xchg
mov
in
jne
adcl
xor
rolb
push
mov
jge
icebp
sarl
mov
push
dec
xchg
out
inc
je
lds
lods
cmp
test
daa
insb
out
mov
sub
and
mov
test
adc
cwtl
mov
aas
sbb
jecxz
mov
mov
lods
jge
repz
stos
outsl
loopne
lods
add
jl
xchg
das
enter
cmpsb
ret
inc
repz
sub
ljmp
in
sub
inc
mov
inc
std
jg
jne
mov
mov
scas
imul
lods
rorl
fwait
mov
cmpsl
and
into
sbb
in
jle
out
pop
add
aad
lret
mov
sbb
push
sub
xchg
repz
mov
lds
imul
xor
mov
in
pop
ret
idivb
sti
adc
lods
push
mov
mov
mov
push
fists
or
or
or
sub
or
push
fldcw
ljmp
push
mov
mov
cmp
ds
fadds
pop
push
jp
call
add
push
mov
mov
mov
xchg
test
add
pusha
idivl
out
and
pop
or
stc
aam
mov
daa
cld
xor
ficoml
inc
cmp
cmp
adc
jle
ja
repz
jp
lods
jecxz
add
cmc
cmc
loopne
sub
js
stos
push
mov
cmpsb
lret
clc
pop
push
loope
pop
mov
dec
jne
pop
pop
out
ret
xor
lret
shlb
js
push
fsubrl
jns
cli
in
cwtl
out
fiaddl
nop
dec
iret
arpl
stc
sbb
cld
bswap
movsb
dec
dec
loop
cmp
cmpsl
cmp
aas
sbb
adc
adc
popf
jns
test
adcl
or
imul
mov
push
bnd
cmp
add
xchg
dec
pop
sbb
test
sub
hlt
mov
push
and
jl
add
loope
push
mov
mov
std
xchg
dec
mov
adc
and
pushf
mov
mov
daa
push
fmull
imul
push
subl
pop
aaa
fsts
test
imul
push
and
lahf
popa
insl
mov
stc
jbe
push
dec
int
popa
mov
imul
xor
jae
mov
adc
jp
aaa
int3
out
ret
xchg
call
xchg
addb
add
mov
mov
xor
fisubrl
cmp
xchg
negl
mov
jb
popf
mov
dec
mov
mov
leave
or
pop
or
inc
fcomps
inc
stos
aam
cmpsl
fcomip
xor
lret
lret
iret
in
int
xchg
popf
jbe
into
dec
or
lock
cmp
into
loopne
aaa
mov
orl
sbb
sub
mov
and
movsb
jle
arpl
jae
inc
mov
push
cmp
mov
das
jl
outsl
sub
jecxz
push
test
test
mov
test
arpl
into
adc
xor
dec
out
pushf
cs
jbe
push
inc
stc
or
fsts
fisttpl
dec
push
sbb
sbb
fildl
out
mov
mov
mov
xor
push
jecxz
cmp
lock
fnstcw
or
call
mov
in
xchg
outsb
and
repz
ret
and
jecxz
mul
ret
push
loope
sbbb
pop
mov
cmp
repz
jl
inc
scas
mov
xor
in
sahf
push
cltd
sarb
inc
scas
push
adc
xor
aad
pop
and
mov
or
jnp
pop
out
sub
lret
jecxz
ss
mov
lods
aaa
pop
inc
inc
bound
fdivl
cmp
add
push
in
testb
pop
test
xchg
jmp
xchg
sbb
rcrl
pusha
xorb
in
sub
cmp
pop
xlat
rcll
popfw
fcoms
sub
xor
push
ljmp
insb
nop
fdivrl
cmpsb
les
adc
cld
pop
nop
mov
inc
sub
cwtl
mov
cld
jne
mov
mov
xor
push
mov
inc
or
pop
push
cmpl
lret
lret
fmul
pushf
outsl
dec
inc
sbb
decl
ds
mov
mov
or
repz
cmpsl
out
scas
add
push
mov
inc
lahf
int3
es
cmpb
push
nop
daa
jl
imul
cmp
or
cmpsl
jge
movlps
push
lds
xchg
dec
lahf
test
ret
lods
cs
aas
jo
xchg
repnz
into
add
inc
aad
sbb
loop
dec
cmp
fxch
into
out
xlat
jns
adc
stc
mov
popf
daa
mov
into
mov
lods
nop
or
push
ja
cltd
int
push
pop
faddl
push
xor
cmp
adc
cwtl
lods
pop
sti
imul
mov
ret
jns
cmpsb
xor
ss
iret
pop
mov
pop
inc
imul
nop
dec
aam
mov
idivl
dec
int
sub
mov
dec
repnz
xchg
push
sbb
fldenv
push
addr16
sbb
inc
adc
inc
push
cltd
das
mov
data16
cmp
ss
lea
out
cld
mov
mov
xchg
das
insb
xor
call
movsb
mov
inc
inc
push
inc
push
sub
fidivrl
and
xchg
adc
scas
pop
mov
adc
push
insb
cmp
mov
ret
outsl
das
cmp
sbb
andl
push
call
pusha
fcmovu
shr
out
sbb
in
shlb
cmp
mov
stc
pop
iret
inc
sbb
scas
inc
inc
lahf
cwtl
sbb
dec
xor
add
jo
cltd
lds
jle
outsb
movb
xor
cmpsb
fsubp
mov
or
pop
cmpsb
inc
xchg
mov
out
cmpsl
pop
scas
push
fisubrl
xchg
enter
pop
or
stos
pushf
loop
popa
inc
adcl
mov
jne
fwait
fwait
inc
aam
addr16
call
shll
or
mov
sbb
push
leave
jg
xchg
aas
pusha
jae
sbb
sub
loop
xor
lcall
mov
push
mulb
pop
scas
xor
xor
outsb
int3
fildl
cs
sbb
insb
mov
and
add
rcl
push
test
xlat
mov
out
and
and
push
sarb
sub
scas
leave
sbb
testb
es
stc
rcrb
ds
imul
xchg
dec
fucomi
sbb
mov
scas
rolb
pop
shrl
ljmp
jns
add
xchg
call
test
pusha
into
das
xchg
mov
sub
int3
adc
lock
adc
test
movsb
les
lods
shrb
cltd
shl
bnd
dec
jecxz
add
mov
jno
jle
ds
ja
scas
pop
sahf
sub
sbb
lahf
in
pop
sahf
xor
sbb
test
inc
mov
mov
aas
mov
adc
adc
cmpsl
xchg
sbb
sub
pop
xor
xor
cmpsb
ds
cmp
popa
mov
out
ds
lcall
sbb
stos
shlb
or
xchg
loope
icebp
xchg
andl
mov
shrb
add
shll
xor
scas
popf
jbe
in
add
nop
pop
and
add
inc
xchg
dec
cmp
pop
int3
repnz
sub
test
fisubs
addr16
cmp
add
popa
push
sub
add
xor
pop
mov
in
call
push
jg
jge
stc
jmp
mov
pop
sub
fidivrl
sarl
dec
push
aaa
lds
inc
and
dec
sub
xchg
xor
aaa
mov
cmp
mov
pop
add
mov
jbe
out
hlt
add
shll
sbb
in
dec
push
adc
int3
loop
dec
adcl
nop
fucomp
inc
test
push
add
adc
dec
dec
test
push
in
icebp
into
imul
fiaddl
in
push
ds
add
divl
jmp
cli
out
add
or
push
mov
cs
popf
xor
pop
sbb
cld
mov
inc
sbb
add
into
add
into
insb
or
sbb
scas
rclb
daa
xchg
fnsave
sub
repnz
and
lret
or
out
inc
pop
out
lret
pop
inc
add
sbb
insb
arpl
fs
or
or
dec
mov
lea
inc
lds
xor
inc
popf
or
add
push
mov
bound
sti
loopne
adc
in
add
push
test
imul
jmp
inc
mov
js
inc
pop
insl
mov
addb
jle
jge
xor
ret
mov
lcall
lds
push
daa
rclb
idivl
loopne
push
repnz
pop
nop
jge
insl
adc
test
sub
lods
lea
mov
push
xchg
sbb
xor
pop
repnz
mov
push
cmp
enter
jnp
outsb
into
push
mov
mov
and
xor
daa
sbb
out
cld
cmp
mov
stos
cmp
ja
xchg
insl
sub
adc
mov
js
and
je
xor
fs
dec
out
orps
ficoml
stos
dec
mov
iret
enter
inc
jne
das
fsubl
ljmp
lahf
sub
in
or
cld
jb
scas
in
add
add
or
jecxz
inc
sti
imul
lock
or
lahf
mov
push
mov
in
loopne
ret
sbb
test
and
push
push
or
int
jmp
rclb
sub
and
jns
call
xchg
and
daa
jns
call
add
cmc
pop
xchg
mov
repz
lcall
leave
leave
mov
faddl
mov
fstps
lret
mov
in
shl
cmp
pop
lock
xor
or
test
pushf
pop
ret
dec
fcoml
mov
dec
xor
jae
insl
es
adc
das
inc
mov
inc
mov
js
pop
insl
dec
sti
or
add
cwtl
mov
lahf
cltd
ds
mov
das
jl
adc
aad
rolb
loop,pn
mov
cld
loopne
jmp
andl
js
push
cli
movsl
mov
mov
ss
push
pop
jmp
or
stos
sub
push
cs
stc
pop
xchg
jmp
mov
stos
add
lea
lods
adc
or
hlt
fistl
and
mov
fcompl
cmp
sbb
fs
lods
xor
or
xchg
jmp
adc
sbb
das
fisttps
repnz
lods
ljmp
ret
jg
sbb
scas
dec
push
rorb
or
lahf
fwait
sti
in
sar
adc
dec
lods
adcl
je
adc
ret
inc
mov
push
xchg
arpl
jge
fldt
mov
xor
enter
aas
cld
sub
call
out
pop
loop
jmp
jae
jecxz
addr16
sub
out
rolb
dec
sti
mov
arpl
jo
out
out
arpl
pop
es
mov
mov
pop
or
fwait
ljmp
pop
sub
inc
mov
cmp
cwtl
xchg
popf
jo
add
fiadds
daa
stos
jne
inc
mov
push
icebp
clc
xor
test
push
xor
jb
push
into
popa
mov
mov
pop
imul
jmp
scas
cmc
fwait
dec
sbb
dec
xchg
and
lahf
mov
das
popf
inc
jge
test
aas
mov
imul
loopne
clts
mov
lods
bound
cmpsl
test
into
rol
adc
mov
or
mov
ds
lods
pop
push
mov
mov
repz
jle
sahf
hlt
mov
push
mov
mov
stos
xlat
cmpsl
repz
or
jae
ret
jnp
fistps
repz
sub
int
stc
stc
cmpsl
push
jno
sub
out
insb
out
in
in
je
cmp
and
inc
and
bound
sbb
mov
ljmp
stc
sub
mov
mov
inc
in
nop
lods
movsb
or
inc
loope
xlat
add
push
bound
mov
sbb
cmp
std
pop
push
and
cs
sub
pop
jne
push
ss
xor
xor
xor
aam
roll
cmp
repnz
sbb
dec
sbb
fs
sbb
test
mov
xor
adc
ret
imulb
les
jo
mov
xor
jbe
test
jo
and
cmpsl
sub
add
push
lahf
sub
hlt
xor
sub
jmp
xchg
mov
orb
icebp
pop
sub
add
push
pop
add
and
ja
adc
sbb
hlt
jge
rorb
push
fs
jmp
adc
hlt
push
scas
jb
aam
arpl
push
cmp
in
rcrl
sti
jl
leave
mov
in
pop
add
jo
jb
clc
mov
inc
out
adc
adc
ficomps
or
push
or
jns
mov
movsl
xor
call
mov
in
and
xchg
sbb
out
aad
cmp
pop
sbb
clc
xor
or
rclb
inc
inc
xchg
push
xchg
mov
mov
popa
test
mov
xor
dec
sbb
jg
pop
mov
xchg
sbb
inc
pop
icebp
in
je
push
pop
pop
mov
mov
popf
xor
adc
mulb
fcmove
inc
mov
mov
fbld
nop
loop
out
mov
or
dec
sub
je
std
out
xchg
loopne
js
fsubrl
jle
dec
fwait
loopne
pop
out
ljmp
push
adcl
or
ret
movsb
rolb
or
sbbb
shll
mov
iret
popf
insl
aam
or
cmp
addl
inc
sbb
lods
ret
and
scas
mov
cli
push
add
hlt
stc
jae
xchg
push
mov
fsubrs
ljmp
lods
and
or
hlt
lahf
xchg
in
out
imul
cmp
jo
js
jl
out
cmp
adc
dec
cmp
xor
stc
xor
mov
insb
xchg
dec
lahf
push
xor
jns
xchg
enter
add
xchg
mov
adc
mov
adc
iret
and
mov
pop
jne
xchg
int
or
mov
mov
rclb
sub
mov
push
lret
adc
shll
push
mov
mov
mov
and
sbb
int
mov
rcrl
push
inc
jbe
xor
scas
cs
or
fldt
inc
inc
jmp
sbb
dec
gs
mov
and
leave
lock
jecxz
push
jmp
iret
add
mov
das
ljmp
dec
mov
push
push
dec
les
add
lahf
push
mov
loopne
mov
stc
push
inc
pop
add
jnp
mov
daa
mov
cs
aad
es
movsb
arpl
std
test
inc
imul
cmp
xor
push
mov
mov
mov
sarl
ja
mov
out
fsubp
rolb
cld
cmp
les
ja
out
jp
adc
gs
jmp
arpl
lcall
stc
sti
pop
lock
jecxz
aas
mov
cmpl
addr16
testb
jmp
fistl
dec
aaa
repnz
and
add
cvtps2pd
lea
mov
addl
in
fdivl
jle
movsl
fs
sub
cmc
mov
pop
testl
clc
out
popf
mov
out
inc
mov
sub
jnp
insl
inc
decl
and
fmuls
pop
fisttpl
lcall
movsb
push
popa
pop
mov
insb
fdivl
fcmovu
mov
das
and
xor
sub
push
mov
aam
jns
scas
cli
pop
mov
or
cwtl
mov
mov
aad
xor
jecxz
aas
mov
es
aam
mov
xor
aaa
adc
movsl
inc
lret
dec
inc
mov
loope
call
inc
arpl
xchg
add
roll
out
mov
mov
sub
inc
sub
adc
jge
data16
or
xor
add
jo
xorl
out
cltd
cwtl
lds
dec
jb
arpl
cmp
int
mov
pop
dec
repnz
cmp
orl
mov
lods
repnz
int
mov
and
dec
wbinvd
cmc
sbb
sbbl
inc
mov
mov
adc
mov
add
adc
popa
fisttpll
movsb
mov
push
xchg
loopne
jo
arpl
imul
dec
fcompl
divb
or
and
or
mov
mov
xchg
inc
insb
inc
add
jmp
jbe
push
data16
movsl
xor
in
xchg
mov
add
dec
stos
xchg
add
sub
adc
cld
flds
push
lahf
mov
inc
inc
jnp
aam
xchg
lds
lock
adc
or
push
jae
push
adc
and
mov
pop
cwtl
adc
push
cs
mov
and
cwtl
xor
adc
jecxz
call
lea
push
loope
lahf
je
sub
int
ficomps
rcrb
or
dec
xlat
js
add
inc
lret
adc
jns
mov
adc
loopne
adc
cmp
pop
int3
mov
jns
cmp
xlat
fdivs
mov
or
or
xor
rolb
mov
psubsw
in
int3
arpl
xlat
div
loop
addr16
xchg
subb
add
mov
dec
jns
bound
ret
xchg
lods
xor
lret
insl
lcall
loop
jg
sti
fstpl
push
and
fcoml
rolb
push
and
ljmp
mov
out
push
aaa
xchg
push
data16
fcmovne
cmpsb
inc
sub
shll
shr
jmp
ret
test
mov
inc
test
mov
subl
movsb
test
insb
scas
in
mov
int3
jecxz
add
xchg
jg
cmp
repnz
jle
xor
iret
mov
dec
jmp
mov
stc
in
fcompl
adc
lret
rclb
or
pop
ret
add
fcmove
push
jge
inc
in
xchg
and
int
jo
xchg
or
test
sbb
mov
es
push
push
mov
jns
xor
test
xor
xor
pop
popl
push
jge
sbb
nop
push
or
fcmovnb
jae
push
inc
xchg
sar
ret
jg
sub
lret
mull
fistps
cli
or
aad
out
fidivrs
mov
jp
in
push
shll
incb
in
and
rclb
jg
jno
jge
dec
and
je
in
adc
lea
outsl
cmp
out
mov
mov
out
mov
inc
and
mov
test
pushf
jmp
push
or
cwtl
fcoms
lea
insl
push
jne
fcoml
xchg
pusha
test
hlt
add
dec
pusha
orb
mov
jg
adc
shrl
dec
xchg
cltd
aaa
or
out
push
or
gs
in
inc
inc
repz
inc
pop
jno
add
fbld
xchg
add
mov
jae
xchg
insb
and
adc
sub
mov
in
mov
lahf
ja
lock
mov
or
add
push
sbb
adc
push
hlt
xchg
out
xor
dec
jne
repz
mov
imul
jns
fldcw
jge
mov
dec
imul
mov
sti
leave
scas
test
inc
clc
mov
cmc
sub
stos
mov
adcb
sub
add
js
add
mov
cmpsl
inc
xlat
dec
scas
add
addr16
lods
add
dec
mov
cli
push
bound
push
notb
cmp
xchg
aam
push
xor
loope
or
pushf
ss
jnp
ljmp
or
xor
mov
mov
push
cwtl
mov
daa
and
movsl
in
pop
sub
negl
mov
add
data16
push
bound
pop
jb
decl
sbb
testl
scas
jl
jno
push
int
hlt
mov
or
mov
cmpsb
das
xlat
and
mov
xor
add
or
out
leave
out
aad
orb
lods
movsb
out
mov
mov
hlt
pop
mov
sahf
int3
out
mov
jnp
push
loopne
es
pop
out
xor
lea
mov
mov
jo
jb
call
aad
aas
mov
push
pop
lahf
shl
adcl
and
or
mov
lcall
fcompl
xchg
fidivs
int
loopne
cmpsl
je
jecxz
mov
aas
adc
adc
dec
xor
ret
mov
int
sub
notb
imul
data16
jl
sub
out
pop
dec
outsl
dec
inc
sub
ljmp
bound
mov
orl
popa
fnstsw
xchg
xchg
mov
outsl
sti
adc
mov
lods
push
mov
and
insb
pop
inc
lahf
call
je
gs
xor
hlt
gs
and
pop
les
jmp
sbb
adc
jle
fstpl
arpl
push
lret
push
cmpb
icebp
sbb
mov
fwait
or
inc
imulb
mov
test
test
xchg
fiadds
fisttpl
sahf
nop
add
cltd
test
ret
in
in
inc
jb
lcall
mov
in
pop
mov
insb
test
setl
in
xchg
lret
ljmp
std
lock
sbb
pop
outsl
or
mov
outsl
mov
mov
jp
or
pop
icebp
repnz
or
xor
in
add
std
mov
jo
out
testb
lea
mov
mov
lds
insl
push
insb
push
push
inc
push
pop
call
xchg
push
adc
or
mov
popa
je
pushf
bound
decb
jno
push
lods
fldenv
pop
inc
xor
icebp
stos
lock
mov
xlat
sbb
push
enter
aad
aam
mov
jns
inc
sub
xchg
daa
lods
adc
inc
fisttpll
outsb
cmc
nop
xchg
inc
cmp
push
adc
pusha
repz
nop
push
or
aad
lea
idivb
lods
sbb
xorl
inc
in
and
insb
jns
add
push
inc
jae
aas
imul
xor
movsb
push
adc
mov
lahf
sbb
dec
and
mov
xchg
in
xchg
pop
cmpsb
dec
xchg
std
iret
sti
jmp
dec
mov
scas
mov
xlat
clc
daa
mov
rorb
push
mov
mov
fists
lret
enter
ret
and
inc
adc
mov
movl
movsb
cltd
in
aam
mov
int
sbbl
adc
popf
insl
out
mov
hlt
xor
jle
dec
xchg
jne
add
sub
movsl
rcrl
jmp
loope
cmpsl
scas
cmp
xor
clc
dec
jl
aaa
stos
xor
imul
aaa
mov
dec
jns
jg
inc
jge
sbb
jno
lods
cli
ljmp
and
jnp
add
push
mov
push
jne
fnstcw
adc
jo
bound
adc
test
mov
ror
cs
push
aaa
xchg
imul
push
or
cmp
int
clc
pop
pop
aad
shrb
ljmp
into
xchg
insl
lgs
cmp
in
cmp
dec
xlat
xor
lahf
inc
pop
mov
mov
inc
xchg
or
shll
push
dec
test
cmc
mov
jmp
cwtl
shrb
and
lds
std
lods
stc
xlat
cwtl
ret
lock
mov
es
mov
inc
cs
xchg
pop
and
push
out
stos
test
aas
mov
cmpb
add
call
int
push
in
push
push
pop
scas
sub
lea
out
sub
inc
repnz
lock
pop
mov
jae
out
jbe
das
adc
imull
mov
mov
sbb
jge
add
sar
push
push
movsb
aad
cmp
dec
xlat
inc
rorl
sub
aad
sub
movsl
ljmp
jmp
mov
roll
ret
mov
inc
aad
out
daa
popf
les
mov
cmp
fildll
xchg
push
jbe
les
lcall
and
xchg
mov
push
xchg
inc
dec
repz
xchg
mov
divl
and
aaa
icebp
pop
imul
ljmp
aad
xchg
adc
cmp
repnz
sbb
mov
fimuls
pushf
orb
push
add
sbb
fidivl
push
fsubp
jno
push
inc
add
lea
shll
mov
push
ficoml
cmpl
pop
filds
push
ja
leave
mov
push
jg
rcrl
xchg
xor
pcmpeqd
mov
add
mov
sbb
jp
pop
inc
stos
enter
sbb
std
pop
jecxz
outsl
movsb
shrl
repnz
jns
scas
repz
popf
ret
mov
adc
lahf
ja
icebp
sub
sub
pop
push
cltd
ret
lret
das
sub
and
sub
inc
subb
int3
pop
mul
pushf
cli
jmp
insb
cmp
pop
jmp
fcoml
inc
xor
pop
lods
aas
cwtl
mov
mov
out
mov
stc
test
mov
add
adcb
xchg
xor
dec
add
int
sbb
ret
repz
out
leave
xlat
cs
push
mov
aam
push
jmp
fmull
mov
push
sub
loope
or
sub
ss
xchg
stos
fucom
mov
clc
inc
add
inc
xor
cmpsl
fwait
pop
push
out
movsb
fisubrl
or
cmp
cwtl
xor
cmp
push
push
sub
repnz
sbb
shrl
hlt
lods
dec
int
repz
cmpsl
push
sub
lds
fsubrl
push
into
dec
xchg
mov
nop
enter
push
aaa
sub
mov
and
lret
int3
in
cs
out
dec
stc
ja
ret
outsb
jmp
shl
xor
repnz
loopne
or
sub
in
inc
loopne
outsl
jae
inc
push
aam
xor
out
hlt
lea
jbe
mov
cmp
and
jl
xor
stc
leave
pop
loop
mov
shr
push
mov
ja
fcmove
sub
jb
ljmp
into
jne
shlb
dec
int
fs
int
xchg
aas
sar
insl
test
sub
mov
loope
popf
imul
and
cltd
cltd
lret
xorb
adc
mov
jo
cwtl
inc
sub
cmc
ret
cli
stos
pop
dec
ja
fcmovu
push
mov
cmp
fstpt
loop
lods
rorl
dec
add
or
sbb
pop
jae
adc
shlb
mov
loope
add
mov
outsb
inc
ds
stc
out
pop
stos
xchg
lea
xchg
push
mov
out
shl
movb
cmc
sti
jl
repz
xor
dec
popf
xlat
mov
adcb
lods
leave
nop
push
dec
and
xchg
pmaddwd
aas
scas
pushl
push
mov
outsb
jo
enter
inc
push
ret
mov
push
aad
dec
mov
stos
gs
test
iret
je
pop
mov
test
aaa
add
push
fxch
pop
inc
and
sub
push
std
xchg
iret
test
sub
pusha
mov
in
cli
test
mov
fcoml
add
inc
push
bound
out
call
cmpb
roll
movsl
pop
xchg
loopne
cmp
test
popf
outsl
mov
jne
mov
les
lods
insb
andl
sub
shrb
xchg
loope
push
fisttpl
icebp
or
push
lret
ja
or
repnz
jbe
iret
push
xor
xor
lahf
iret
pop
jge
ds
lret
cld
je
movsl
fcmovu
mov
xchg
in
shll
jo
scas
cmp
inc
pop
js
mov
jbe
jb
mov
dec
jmp
sbb
add
mov
xor
imull
int3
neg
mov
in
push
shr
inc
jecxz
lock
sarl
push
pop
pop
dec
test
mov
xchg
loope
pushf
jae
mov
or
cmpsb
dec
jmp
test
fcomip
mov
xor
push
ds
rolb
arpl
dec
scas
stc
pop
xchg
mov
adc
loope
loopne
sbb
fisubs
movsl
or
xor
cli
testl
inc
xchg
xchg
mov
and
mov
cmp
jb
push
cltd
fstpt
pop
add
inc
ret
es
push
scas
mov
xor
js
test
outsb
in
adc
xor
sub
xor
shll
cmpsb
lods
jno
pop
fnsave
xchg
adc
testl
dec
lds
jo
xchg
cmp
jb
and
sbb
lods
adc
insl
mov
push
mov
mov
scas
clc
cmc
add
mov
push
sub
das
pop
inc
jp
mov
sahf
daa
pop
insl
push
aam
sbb
fwait
scas
push
jbe
daa
jmp
in
cmp
mov
sarb
and
orb
rolb
shr
rcll
call
push
jp
lahf
add
push
sub
pop
fcmovu
int3
jecxz
mov
ds
movsb
jle
cmp
and
call
add
add
insl
jle
push
pop
or
mov
clc
daa
push
lea
adc
sti
cmp
mov
ret
cmp
inc
jbe
mov
dec
mov
fdivl
out
dec
mov
mov
cwtl
cmp
cmp
jb
mov
roll
push
inc
sub
shlb
mov
int
es
es
in
mov
mov
pusha
out
fisubl
push
fwait
sub
out
pushl
push
std
push
sarl
dec
iret
sub
add
ja
jns
push
insl
in
xchg
rcll
decl
mov
pop
xchg
sub
jle
fnstenv
xchg
into
inc
xchg
loop
idivb
and
fildl
clc
sbb
cmpb
pop
loop
push
movsl
dec
sub
popa
add
pop
adc
adc
cwtl
outsb
loope
arpl
test
stc
iret
jb
xor
lock
jnp
or
testl
and
cmpsl
adc
aam
dec
subl
and
repnz
add
add
mov
loop
xchg
repz
lods
in
popa
insb
adc
push
pop
or
pop
mov
mov
lcall
xorb
inc
adc
cmp
jmp
out
jno
add
push
rorb
xor
xchg
inc
inc
mov
mov
jno
scas
push
shrl
push
mov
fists
dec
dec
lods
jecxz
xor
pop
cmp
ss
push
push
jmp
fstps
cmc
loopne
jnp
sub
dec
call
push
in
and
cld
or
out
loop
mov
in
dec
mov
inc
fdivl
sbb
push
incl
inc
inc
icebp
mov
mov
adc
xchg
dec
mov
int
add
xchg
inc
lods
xlat
pop
mov
sub
xor
and
cmc
hlt
rol
xor
adc
sbb
push
jo
out
insl
aad
inc
xchg
xchg
les
mov
or
push
xor
nop
dec
mulb
sti
sub
test
dec
add
loop
pop
loope
movsb
jne
add
lret
add
sub
push
add
inc
inc
out
dec
mov
sub
mov
lods
outsl
pop
fmuls
inc
int3
movsl
fiaddl
or
mov
pop
jecxz
pop
lods
enter
sti
xor
mov
inc
push
fidivrs
fiaddl
test
jmp
add
xor
ljmp
inc
sub
pop
iret
jo
cmc
ljmp
out
lods
bound
dec
jo
test
stos
enter
ret
lret
cmp
cmp
xchg
out
cli
pop
jmp
pop
dec
fldl
mov
xchg
lock
bound
inc
xor
mov
outsl
in
imul
fnstenv
or
add
mov
inc
mov
mov
and
mov
aaa
lret
pop
aam
arpl
imul
shll
or
aad
outsl
bound
testl
in
mov
int
mov
dec
or
push
inc
es
mov
add
xchg
stc
cld
js
add
mov
adc
outsb
push
daa
xor
push
repz
cmp
dec
call
push
int
sahf
jmp
jge
xchg
fsubs
sbb
mov
aas
test
cltd
push
push
or
or
fcoml
pop
mov
testb
ja
outsb
imul
add
or
sub
ja
xchg
jbe
int3
sub
sbb
inc
sti
or
lcall
pop
mov
inc
movb
rorb
iret
mov
scas
rolb
add
or
sarl
outsl
add
lods
leave
andl
or
sub
inc
pop
and
filds
ret
stc
mov
lock
lcall
es
xchg
cmc
repz
xor
cmpsl
fildll
fbld
mov
les
lds
cmovle
mov
daa
pop
ds
cli
das
mov
pushf
loope
sub
cli
cmp
out
xchg
xor
adc
xor
xor
test
negl
adc
inc
push
or
movsb
out
mov
mov
mov
iret
xor
aam
jle
cli
ja
xchg
and
cwtl
mov
enter
sbb
fidivrl
in
outsb
mov
push
mov
sub
sub
mov
add
outsb
call
icebp
ja
add
ljmp
inc
jecxz
outsb
sub
ja
adc
or
test
enter
into
pop
xorb
fptan
sub
mov
pop
adc
mov
adc
sbb
push
shrb
adc
out
sbbl
xchg
bound
shrb
insb
iret
lret
lods
mov
out
add
mov
push
dec
lds
leave
pop
or
and
adc
and
or
das
notl
ret
lock
pusha
pop
push
mov
cli
adc
mov
and
inc
outsb
fwait
shrl
ljmp
lahf
test
xor
or
cwtl
sbb
das
sbb
neg
lret
loopne
jle
cmp
popa
cmp
xchg
sub
jo
pusha
cmp
pop
xchg
stos
mov
aad
jp
test
jno
push
adc
adc
cmp
dec
dec
loope
imul
xchg
jl
xchg
popa
mov
lods
fcoms
stos
or
dec
xchg
or
jge
push
dec
daa
scas
sbb
xor
cwtl
daa
mov
jbe
ret
xor
arpl
mov
jno
scas
insl
and
inc
shl
xchg
and
shrb
cmp
pop
in
mov
add
out
xchg
adc
xchg
inc
dec
pop
out
dec
jp
rolb
add
push
stos
mov
addr16
adc
clc
jp
sub
pop
xor
push
push
out
imul
or
and
in
fs
movsl
jae
in
outsl
scas
imul
loop
loopne
and
pop
dec
or
push
cmp
jl
movsb
rclb
or
xor
fxch
int
sti
mov
mov
andl
ret
mov
sub
inc
popf
push
cmova
inc
lds
fmul
and
mov
and
inc
or
sti
fisttpll
push
mov
sbb
xchg
pop
shll
sbb
shl
mov
into
push
mov
xor
dec
pop
in
cli
test
imul
jb
sbb
adc
xor
mov
mov
or
or
push
dec
stc
lcall
mov
push
rorb
xchg
cld
sub
stos
dec
shrb
sub
adc
or
iret
push
mov
mov
xchg
clc
mov
sub
mov
ja
hlt
inc
push
andb
std
aas
xchg
jno
xlat
pop
in
dec
fwait
pop
fstpl
pop
pop
rcl
mov
fs
mov
push
dec
sbb
aaa
call
ds
pop
sbb
aas
mov
mov
lock
ljmp
sbb
sub
adc
add
imul
dec
mov
jb
std
cmp
neg
sti
jl
ss
cmpsb
mov
addr16
xchg
jmp
lret
call
xchg
out
mov
addl
inc
insb
out
dec
gs
xchg
sub
cmp
add
pushf
sbbb
insb
repz
out
hlt
stos
and
or
lahf
pop
adc
sub
or
xchg
rorl
and
data16
push
roll
xchg
adc
hlt
mov
bnd
mov
shrb
sub
mov
mov
or
mov
sub
pop
mov
pop
add
out
ret
mov
pusha
jb
dec
add
dec
shl
sbb
leave
test
mov
scas
push
push
xor
cmp
cmpsl
call
push
fwait
xor
repnz
int3
aad
mov
pop
dec
into
add
mov
loope
or
lcall
cmc
and
dec
sub
ficompl
add
sbb
jl
lds
mov
inc
jmp
in
cmp
xor
xchg
outsl
rorb
sub
scas
adc
pop
lret
sti
jge
roll
xchg
mov
mov
aaa
rolb
ljmp
cmp
sbb
mov
leave
inc
lds
sub
imul
cmp
fs
aam
fsubrs
je
stos
push
fldl
sbb
pushf
pop
push
pop
mov
out
push
xlat
sbb
or
xor
xchg
cmp
push
int
dec
repnz
out
pop
xor
gs
lods
push
pop
rolb
call
scas
and
and
xor
jnp
sbb
mov
or
arpl
or
add
enter
repnz
jno
pop
lea
sub
call
xchg
repnz
fldcw
jge
push
ja
mov
pushf
stos
movsl
sbb
cmc
fxch
inc
int3
add
add
inc
repz
cmp
icebp
and
shlb
sbb
int3
sub
push
sbb
ret
js
mov
and
gs
xchg
insl
js
pop
popa
call
scas
mov
ljmp
and
mov
ror
test
sti
cmp
pop
or
lea
mov
adc
lret
push
sbb
mov
jb
mov
ja
lea
xchg
call
and
pop
arpl
xor
setl
arpl
cmpsb
inc
adc
arpl
add
jp
sbb
push
add
loope
cmp
loop
xor
clc
mov
lock
in
push
mov
lea
vmovlps
cwtl
rorb
dec
pushf
sub
ficomps
push
jg
ja
jp
daa
pop
stc
movntq
arpl
cwtl
data16
adc
repnz
mov
sbb
xor
mov
fldcw
orb
cmpsb
mov
xchg
jge
mov
loopne
fmull
cs
mov
pop
lds
out
ds
imul
orb
cmc
imul
mov
dec
push
fmull
dec
pop
pop
jbe
repnz
or
xor
cmp
sub
cmc
mov
test
xchg
popf
lock
call
insb
xchg
jle
add
call
adc
pop
inc
daa
ret
dec
frstor
mov
in
jb
insb
test
push
leave
jmp
les
repnz
adc
jbe
jae
out
pop
jb
xor
cmpl
mov
and
push
rorb
out
mov
cmpsb
push
popf
bound
testl
loope
pop
adc
add
push
stos
js
jmp
sarl
movsl
xchg
cvtpi2ps
xchg
mov
dec
push
out
push
pop
imul
mov
or
sub
mov
cmpsl
aad
or
lock
and
add
decb
gs
das
inc
or
mov
cmp
push
cmpb
dec
cs
add
lret
imul
into
mov
data16
mov
and
and
cmpsb
add
repz
dec
jnp
scas
adc
add
dec
sbb
pop
xor
xchg
sub
dec
daa
pop
nop
jl
mov
into
mov
ljmp
mov
push
jmp
mov
loop
jb
push
jne
inc
sbb
cmp
fisttpll
ret
fstps
pop
jno
lret
aam
bound
xor
out
jle
add
cmp
and
push
arpl
clc
gs
push
jl
bound
dec
mov
jg
push
pop
hlt
stc
stos
jmp
sbb
xor
sub
inc
push
or
xchg
idivl
adc
pop
icebp
cmp
xchg
mov
jmp
sbb
add
dec
sub
faddl
stos
insb
fnstenv
scas
lret
je
in
jecxz
push
xlat
pop
in
lods
bound
jb
pushf
xor
pop
push
xor
in
aad
mov
ret
fisubrl
push
sbb
movsl
cli
hlt
outsb
pop
add
cmp
gs
fstl
xchg
addb
cmc
add
hlt
xchg
in
add
daa
popa
cmpb
push
mov
cltd
outsl
ljmp
jbe
test
or
sub
push
mov
mov
push
repnz
xor
in
dec
xor
jb
push
xor
frstor
xor
mov
arpl
sbb
dec
or
cltd
xchg
mov
dec
ds
dec
push
xor
sbb
shl
in
dec
fwait
cli
sbb
lea
movl
push
popf
jae
shr
mov
test
mov
jle
mov
cmc
stc
aam
orl
add
sbb
push
data16
loopne
xchg
xorb
and
scas
push
mov
mov
pop
sahf
jbe
dec
mov
aas
jne
fistl
es
adc
sub
jecxz
ss
cmpsb
mov
mov
sbb
imul
jns
jle
sti
push
imul
mov
rorb
inc
ret
bnd
int
jae
lock
pop
movhps
dec
dec
enter
and
aam
lret
icebp
mov
and
das
mov
push
lods
inc
lods
es
adc
jbe
dec
in
rcl
inc
loopne
aad
add
push
sub
sub
jmp
xor
testb
unpckhps
pop
clc
mov
push
add
jg
popf
cwtl
push
les
mov
mov
jecxz
lahf
popa
mov
mov
mov
or
movsl
sub
fisubl
int3
subl
add
push
push
addb
cmp
dec
adc
or
ret
pushf
pop
dec
aaa
xchg
leave
sahf
icebp
sahf
add
sar
loope
xor
mov
adc
xchg
insb
mov
sub
sbb
cli
aam
ss
out
shl
sbb
xchg
sbb
stc
dec
jnp
mov
xor
push
sti
xor
fsubr
imull
lds
sub
gs
jnp
inc
jnp
repnz
scas
pop
stos
and
fs
mov
pop
xor
mov
popf
out
stos
outsl
fnstenv
xor
pushf
ja
and
sub
aam
cmp
das
push
imull
xor
test
pop
xchg
dec
push
push
cs
or
cmpsl
jnp
aam
inc
sub
adc
pop
sbb
cmpsl
xor
dec
leave
out
xchg
call
ja
loope
aas
push
stos
xor
push
pop
push
add
icebp
or
adc
sub
push
mov
fnstcw
push
jmp
clc
ljmp
sub
sbbl
pusha
shlb
imul
cmp
iret
jae
adc
fstl
popf
cmp
fs
dec
jo
fxch
mov
cmp
xor
jmp
fwait
mov
lods
mov
icebp
cld
cmp
fucomp
pop
ljmp
test
sbb
mov
pop
pop
test
addl
rcrb
jg
or
xchg
cmpsb
repnz
lret
pusha
mov
cmp
jecxz
inc
xchg
pop
in
movsb
rcr
lods
imul
or
js
imul
in
mov
jg
xor
cmp
mov
pop
int3
iret
subb
repnz
mov
cmc
inc
in
scas
cmp
or
push
aam
js
sub
pop
movsb
ljmp
adc
mov
shrb
rol
shrl
out
cmp
pop
lret
clc
es
ss
pop
sti
scas
test
clc
mov
lds
out
and
test
adc
xor
inc
pop
xor
add
pop
mov
roll
mov
bound
dec
sbb
add
inc
mov
sbb
pusha
cmp
std
inc
and
xchg
inc
push
aaa
shll
push
in
push
in
pop
out
shlb
pop
lock
dec
es
pop
lods
inc
xor
mov
jnp
and
pop
dec
inc
xchg
and
rol
cmp
pop
ret
imul
outsl
aaa
not
lea
lret
push
and
push
add
leave
shrb
aas
insl
pusha
pop
test
pushw
jns
std
iret
mov
aam
fnstsw
push
inc
ret
cld
mov
mov
xchg
fwait
mov
or
inc
push
fidivrl
jae
int3
mov
mov
sbb
ror
jns
jg
mov
leave
jbe
sbbl
xor
mov
pusha
or
and
jo
sub
popf
push
arpl
insb
loope
sub
xchg
dec
fcmovnb
incb
fdivr
inc
sbb
or
cld
icebp
or
mov
jle
shlb
jae
aam
shl
mov
push
cmp
out
lcall
inc
push
sub
popa
in
and
xor
mov
fucomp
das
cmp
xchg
add
outsl
jne
xor
leave
xchg
popa
rcl
cmp
stc
clc
frstor
jle
jmp
xchg
in
arpl
lods
mov
clc
jge
jne
clc
cwtl
and
sub
test
loopne
mov
jmp
stos
pop
push
pop
cmp
mov
fldcw
aas
daa
out
sbb
notb
lods
les
add
push
mov
mov
xchg
enter
push
push
inc
mov
and
in
imul
in
loope
cmp
xor
data16
test
xor
push
mov
mov
lods
call
cmp
add
mov
and
push
rorl
mov
jl
sub
cmp
fxch
fs
icebp
cli
xchg
inc
pop
jnp
dec
repz
inc
cmp
or
pop
xchg
mov
mov
or
and
xchg
popa
ss
push
and
xor
or
mov
cld
pop
jno
mov
mov
outsl
test
mov
lcall
ficomps
rcl
cmc
jbe
cmp
mov
outsl
loop
cmp
jnp
rolb
lret
or
dec
testb
jp
popf
stos
sbb
push
xchg
cli
push
sbb
inc
jnp
cmp
fimull
jmp
mov
roll
pop
test
cmp
push
inc
or
push
cmp
mov
pushf
scas
jecxz
cmpsl
and
cmpl
push
ds
aas
das
test
shrb
xchg
xor
rcll
sub
xchg
inc
push
dec
cwtl
add
xor
iret
pop
fists
or
mov
push
jae
pop
mov
sbb
cmpsb
adc
ss
repnz
std
dec
in
mov
pop
push
stc
xor
or
aad
xchg
jns
xchg
test
fnstsw
mov
mov
dec
lcall
addr16
call
and
mov
insb
lods
repnz
dec
add
outsl
sbb
ret
push
adc
das
subb
add
sar
push
cmp
popf
not
inc
push
pusha
mov
xchg
jns
fwait
inc
jecxz
pop
mov
jno
test
iret
lahf
xchg
cltd
and
aas
jg
or
xor
ret
or
fidivrl
rclb
insb
or
or
add
and
dec
add
cmpsl
push
lods
insb
push
scas
jle
mov
push
stos
fs
xchg
adc
jnp
push
stc
jg
cs
or
mov
scas
lahf
mov
fstl
mov
loopne
mov
push
jp
in
or
mov
js
add
cmc
mov
mov
lock
fsubl
call
insb
rolb
push
into
sarb
aaa
setl
inc
jmp
scas
mov
xor
out
xchg
pushf
ret
clc
dec
jl
and
pushf
loop
dec
or
cmp
xor
fiadds
cwtl
add
push
in
or
iret
out
mov
lcall
addb
in
and
and
roll
mov
and
incb
inc
or
mov
mov
repz
jbe
add
dec
stc
pop
cmpl
lods
dec
adcl
imul
add
daa
fisubs
or
jns
cltd
xchg
es
mov
shl
in
mov
push
in
ror
sub
addr16
sbb
xlat
xor
sbb
mov
or
mov
sub
mov
fldcw
sub
jecxz
mov
out
adc
adc
mov
inc
mov
sbbl
add
outsl
repz
and
adc
mov
add
jb
adc
mov
xchg
rcrb
rcll
jbe
loope
in
sti
adc
mov
rcrl
pop
xchg
pop
sbb
push
inc
push
jle
into
daa
push
aad
sub
pop
enter
cld
ss
or
pop
push
dec
mov
sbb
push
dec
push
mov
push
or
xor
xchg
cmp
repnz
popf
mov
addr16
hlt
int
mov
or
and
mov
push
mov
out
movl
jl
in
sahf
fucom
mov
xor
sbb
cmc
lock
xchg
or
jle
out
sbb
xchg
popa
adc
in
jp
pop
stc
pop
je
jae
sbb
xor
adc
cmpsl
mov
sbb
push
adc
int
mov
rorb
mov
int
lcall
push
dec
jno
hlt
fsts
loope
shll
pop
loop
or
cli
adcb
gs
pop
ja
les
and
ljmp
mov
mov
scas
sbb
test
cltd
test
js
les
addr16
ficompl
sub
sbb
xchg
cli
lods
and
movsb
inc
or
pop
sub
mov
mov
imul
sub
pop
daa
sahf
push
ljmp
jbe,pt
or
pop
jne
les
and
inc
in
fs
fs
popa
pop
inc
pop
in
pop
xor
pushl
call
push
movsl
and
imull
arpl
mov
mov
sbb
lock
inc
ds
and
xchg
mov
subl
fs
jl
arpl
fdivl
fwait
jecxz
push
add
inc
or
add
mov
out
lds
ret
or
push
adc
sub
inc
mov
sti
xor
xor
lea
dec
scas
fwait
mov
mulb
aaa
test
imulb
cli
inc
and
inc
mov
jns
inc
sbb
xor
add
adc
daa
bnd
adc
rorb
sahf
addr16
jbe
mov
jge
cltd
mov
cmpb
adc
inc
imul
aas
dec
pop
dec
cmp
inc
xchg
idivl
fisubl
push
out
lcall
imul
mov
and
stos
insb
mov
mov
mov
fldcw
sahf
adc
std
in
adc
ja
jmp
cmp
das
mov
daa
mov
aam
idivb
xlat
sub
mov
xchg
add
icebp
xchg
int
shlb
inc
jmp
push
jg
mov
stc
aad
cld
xlat
jns
and
or
sbb
dec
mov
mov
test
imul
xorl
fdivl
mov
shl
jl
cltd
dec
sub
cmpsl
jno
and
push
sub
sub
push
jnp
imul
push
js
imul
cmpl
lret
pop
aas
jle
pop
sub
mov
push
push
jle
inc
mov
inc
repz
push
aam
inc
rorl
jl
push
mov
push
pop
aad
mov
xchg
xor
sti
or
punpckhdq
ss
iret
and
xor
pop
aad
and
and
sub
add
push
stc
xchg
push
insl
jp
xor
sbb
fs
jmp
push
stos
gs
fwait
ss
mov
add
clc
fnstsw
sub
dec
dec
mov
mov
scas
sbb
imul
fimull
mov
jle
push
fdivl
repz
sti
out
ds
xlat
std
data16
aam
dec
push
xchg
jno
xor
test
sub
ljmp
lds
lods
int3
lock
in
push
inc
push
adc
lcall
pop
rcrb
sub
mov
cmp
push
xchg
adc
mov
mov
loope
mov
cmpsb
shlb
ret
ret
adc
leave
sub
out
mov
mov
data16
out
mov
dec
adcb
adc
imul
iret
icebp
add
lea
shlb
sbb
mov
add
stos
sub
dec
inc
insb
mov
test
sub
inc
arpl
cmp
movsb
pop
lea
mov
cwtl
pop
outsl
fldl
xchg
jmp
pop
scas
popf
cmp
push
rclb
xchg
in
dec
push
and
lods
xchg
nop
xchg
dec
adc
sub
ja
mov
cld
movsb
and
xchg
orb
jne
cmpb
or
in
cmp
rolb
mov
mov
loopne
push
lret
insb
mov
mov
add
je
pop
aaa
add
xchg
ret
and
std
jo
jmp
call
inc
stos
pop
dec
aad
roll
ffreep
fisubl
adc
dec
cwtl
and
scas
inc
std
mov
dec
das
inc
or
addr16
mov
lcall
push
sbb
icebp
lods
lahf
rcrl
jns
or
mov
dec
js
or
sub
mov
cmp
push
scas
int
xchg
sub
push
pusha
scas
iret
vpmadcsswd
adc
pop
pop
ds
or
mov
push
hlt
sub
inc
push
clc
out
dec
jne
movl
inc
jecxz
adc
jp
iret
add
insb
add
sbb
xchg
stc
push
movsb
in
imul
fldl
js
int3
mov
fistl
iret
ds
mov
adc
ja
gs
fildl
inc
in
das
add
mull
ret
mov
adc
lahf
faddl
out
stc
call
sbb
mov
pushf
insb
lock
addr16
imul
push
loop
std
sarl
into
push
jmp
or
ret
push
push
sub
cmp
fldcw
sub
dec
pop
mov
xchg
in
stos
adc
push
fxch
cs
dec
out
xchg
xor
call
sbb
mov
shlb
lahf
pop
in
jne
loopne,pt
mov
fistpll
mov
mov
test
jnp
fwait
or
std
jnp
movsb
cmc
mov
rcrb
pusha
repz
and
add
pop
sbb
mov
je
into
xor
jo
arpl
push
xchg
ss
out
fildl
out
dec
aad
mov
mov
mov
cli
and
addr16
std
cmp
testb
lret
inc
mov
cmp
pop
nop
inc
cld
test
adc
mov
daa
aam
mov
and
mov
ja
pop
xchg
cmp
adc
xor
sbb
test
test
mov
movb
test
scas
adc
push
imul
xchg
cmp
stc
sub
orb
movsl
and
outsb
xchg
push
mov
pop
les
jg
out
push
loop
xchg
popf
daa
scas
out
inc
ficomps
mov
dec
mov
sbb
add
dec
loop
in
xchg
and
push
and
in
sbb
jge
int
sub
ror
and
pop
inc
push
inc
fnstsw
push
pop
push
or
sbb
mov
or
push
inc
cmpsb
int
mov
add
das
jo
jmp
xchg
sahf
adc
sar
nop
fsubrs
imul
or
xchg
in
mov
in
mov
jge
in
jbe
adc
add
psrlw
fcompl
lahf
pop
xchg
inc
fcmovb
mull
mov
sub
jb
std
cmp
push
pusha
mov
jno
je
imulb
loope
cmp
pushf
aas
pop
rcl
jb
cmp
sbb
lcall
sbbb
not
icebp
lret
inc
mov
dec
mov
js
mov
or
lock
xor
mov
leave
push
andl
arpl
mov
out
pop
sub
xchg
mov
xchg
leave
jmp
sub
ret
xlat
and
mov
in
pop
out
dec
outsl
in
dec
repnz
pop
dec
in
aam
sahf
fwait
pop
cmp
mov
imul
call
outsb
insb
add
ret
or
insb
mov
add
xchg
push
dec
jns
cld
movsl
imul
push
inc
decl
jo
das
adc
dec
adc
inc
icebp
lods
fs
xchg
out
stc
adc
push
pop
call
push
inc
xor
data16
outsb
sarl
pop
gs
cmp
sbb
sbb
push
or
jne
nop
inc
xlat
scas
mov
cmpb
push
mov
aad
sub
pop
lds
cmp
push
fwait
rcrb
push
mov
decb
daa
adc
aad
or
testb
sub
xor
gs
leave
scas
or
shl
pop
fs
push
addr16
mov
xchg
mov
cmpsl
cli
xor
rolb
push
and
cltd
ss
pop
mov
es
inc
or
push
fs
push
jae
sub
arpl
fnstsw
cmp
add
push
add
push
inc
js
inc
out
lock
and
movsb
jbe
sub
dec
cs
xchg
jge
and
cmp
jo
test
sti
test
mov
imul
xchg
jbe
push
add
inc
jle
test
xchg
adc
pop
fld
sub
jg
scas
leave
popf
xor
xchg
sbb
xor
test
and
mov
add
shr
rorl
push
adc
stos
mov
push
addr16
or
push
lds
sub
aas
lahf
adc
inc
xchg
pop
mov
xor
sbb
mov
stos
aas
mov
pop
adc
dec
mov
shll
xchg
idiv
inc
or
push
lods
jg
std
icebp
jne
pop
mov
aam
lea
xor
pop
pop
dec
lods
adc
rcr
push
pop
in
sub
je
jns
mov
inc
sbb
adc
loope
xor
pop
lock
movsb
int3
mov
and
push
stos
rcll
jnp
ja
xchg
or
xchg
outsb
arpl
xor
movsl
mov
aad
clc
ja
cwtl
jne
or
test
std
lods
xor
mov
adc
xchg
jns
cld
shrb
stc
add
push
inc
cltd
pop
in
std
enter
jecxz
gs
fdivrl
jae
jp
cmp
pushf
out
shrl
rol
fldt
pop
add
pop
xor
scas
xor
push
xchg
sub
out
mov
out
jmp
xor
and
xchg
mov
dec
rcl
push
or
insl
xchg
cmp
fs
cltd
lock
pop
and
mov
mov
sahf
pop
repnz
sbbl
mov
adc
sbb
mov
mov
pop
and
dec
lods
andb
test
popf
into
test
into
jl,pt
add
imul
pop
and
iret
or
stc
pop
or
mov
add
inc
imul
push
add
nop
jg
ja
inc
add
xor
sub
xchg
cmc
sbb
push
gs
lods
cmpsl
mov
add
add
sahf
mov
ss
xor
jae
mov
push
daa
es
push
mov
push
fscale
mov
shl
push
push
insb
push
lea
mov
sbb
cmp
in
xchg
in
sbb
popl
nop
out
pop
or
in
jns
pop
push
imul
sbb
and
test
dec
mov
jge
loopne
mov
jp
fs
js
inc
scas
mov
test
push
push
sahf
sub
cmpsb
imul
or
and
sub
movsb
sbb
xor
fists
adc
or
and
int
test
push
in
jecxz
add
and
and
dec
pop
je
xchg
out
inc
popf
push
lods
mov
mov
addl
outsb
push
repnz
andb
es
std
aas
xor
pop
sbb
pop
sbb
fwait
cld
push
sub
fcmovnbe
mov
adc
incb
cwtl
inc
adc
arpl
lret
pop
push
aam
loop
jmp
jnp
xor
push
cltd
movsl
hlt
fimuls
mov
pushf
add
xchg
inc
mov
clts
int
data16
pop
or
mov
inc
fbld
fs
pusha
insb
mov
imul
test
loopne
stos
mov
jb
jo
test
mov
xchg
dec
push
push
int3
jle
pop
mov
stos
faddl
push
sti
jl
inc
sub
in
lahf
pop
mov
sub
pusha
adc
pusha
pushf
stc
jnp,pt
push
adc
jb
sub
jl
daa
push
or
dec
sbb
and
or
lcall
mov
inc
push
pop
xor
dec
mov
mov
filds
out
and
inc
jge
dec
bound
addb
ret
pop
push
cmp
call
cld
or
jnp
push
repnz
movsl
daa
pop
cmp
mov
mov
mov
fistps
movsb
in
inc
les
cmp
jge
ljmp
sahf
pop
js
ljmp
imul
and
mov
lds
mov
test
arpl
adc
push
xchg
popf
xor
lret
add
pop
cld
inc
int3
test
gs
gs
xchg
jb
addr16
pop
cld
or
cmp
sub
fwait
iret
cwtl
fldenv
mov
push
into
insb
mov
xchg
sub
mov
jae
jp
xor
cmp
xor
bound
scas
js
or
add
lcall
shll
movsb
dec
pop
and
addr16
adc
lahf
stc
inc
and
push
pop
inc
inc
add
das
shll
xor
push
mov
add
loop
mov
mov
push
mov
xorl
dec
or
fisttps
add
loope
xchg
mov
inc
push
jno
mov
sub
jg
mov
in
daa
adc
stos
mov
jne
test
xor
popl
pop
mov
or
and
xchg
lea
pop
pop
sti
arpl
mov
arpl
je
stos
xor
or
push
push
or
or
jmp
pop
loop
bound
jle
dec
int
inc
scas
repz
pop
and
mov
into
dec
add
cmp
cmp
in
int
mov
add
or
jmp
or
adc
sbb
stos
inc
push
add
mov
lock
lcall
inc
and
ljmp
inc
xor
cmpsl
scas
and
out
fdivl
out
loop
jg
add
out
arpl
lret
mov
lea
xor
add
mov
and
out
mov
es
in
repz
test
clc
cmp
mov
insl
aam
ret
jle
lret
jle
push
mov
imul
mov
outsl
and
push
inc
std
icebp
arpl
inc
mov
xchg
imul
divps
mov
mov
shll
push
repz
sbb
xchg
mov
jo
int
or
mov
fstpl
mov
jno
int3
xchg
push
mov
mov
inc
popf
aas
dec
orb
lock
dec
pushf
inc
adc
dec
stos
pop
mov
adc
in
mov
sbb
jbe
push
movsl
lds
mov
push
aas
fwait
outsb
stos
xchg
push
outsl
xchg
adc
mov
dec
xor
pop
add
and
inc
pop
sbb
pop
inc
das
jne
push
insl
lds
lds
mov
pusha
mov
push
mov
loop
cmpsl
mov
loopne
push
push
pop
das
xor
cmp
sub
and
mov
jno
cmpsl
fwait
jo
in
or
rol
and
xor
int3
sbb
adc
or
lahf
test
loopne
xchg
inc
xchg
addr16
filds
loope
jecxz
scas
pcmpeqw
cmp
cmp
adc
sub
imul
dec
fs
xor
cltd
cli
insl
jno
rolb
mov
scas
iret
dec
inc
int3
outsl
rcll
xchg
rorl
add
push
xor
aas
stos
mov
lcall
sbb
jg
xlat
mov
mov
or
je
in
movsb
in
scas
inc
or
stos
in
les
sbb
cltd
xor
and
cmp
or
fnstcw
loope
or
adc
adc
mov
je
sbb
andb
or
cli
xor
cli
or
or
pop
aam
sbb
pop
call
xchg
mov
xchg
inc
push
pop
and
add
xorl
stc
into
rcrb
push
fistl
lcall
or
ret
bound
and
lds
mov
les
outsl
mov
je
rcr
sub
into
adc
lods
pop
fs
iret
cmp
stos
mov
mov
pushf
rorl
pop
mov
cwtl
fisttpll
rcrl
push
inc
push
roll
leave
bound
test
mov
pop
mov
rcr
imul
cmc
dec
add
popa
stc
outsl
cmp
stos
int
xchg
lahf
inc
arpl
stos
mov
fisubrs
xchg
lds
lock
inc
lret
mov
in
push
xor
stos
fmull
jae
dec
sbb
pop
cltd
lock
cs
mov
cli
cmp
sub
xchg
cmp
loopne
popa
lret
nop
or
ret
lods
cs
jo
and
fcom
mov
shl
arpl
mov
xchg
aaa
push
in
push
lock
jb
push
adc
jb
call
das
clc
mov
orb
dec
sbb
xor
adc
pop
xchg
xor
cmpsl
push
or
leave
sub
jl
inc
imul
gs
neg
leavew
lods
mov
jge,pn
mov
pop
into
mov
xchg
call
insb
and
adcb
sub
jo
mov
enter
cmp
cwtl
mov
andb
push
jne
xorl
push
xchg
cmpl
jae
xchg
cltd
cmpsl
lahf
and
hlt
bound
xlat
in
stc
fsubs
mov
stos
movsb
shlb
iret
subl
mov
into
mov
cmp
into
in
sbb
pop
je
and
stc
jmp
sub
das
pop
mov
scas
add
cmc
cmp
std
adc
test
gs
mov
push
out
vpmuludq
insl
pop
frstor
movsb
sti
mov
test
fstl
clc
pop
or
lcall
push
mov
sbb
pop
imul
popf
cmpsb
mov
xor
cmp
je
hlt
lods
jo
mov
push
aam
pop
pcmpeqb
pop
push
cmp
fsts
cmp
mov
lds
out
stos
push
les
addl
push
xchg
pop
or
sbb
arpl
sbb
pushf
into
push
xchg
bound
push
push
js
mov
das
pop
xor
jp
pop
scas
sub
in
jle
push
pop
xchg
or
sub
into
pop
jns
cmpsl
in
sub
mov
pop
jge
mov
add
in
cmp
pop
mov
icebp
xchg
lahf
xchg
push
xchg
push
adc
arpl
mov
xchg
addr16
push
push
xchg
add
mov
pusha
mov
dec
jno
fimull
into
js
addr16
loop
pop
fldt
push
add
cld
pop
dec
jns
and
or
adc
imul
lock
enter
mov
in
and
sub
jbe
xchg
clc
rcrb
jl
iret
fnstcw
and
lods
cmp
cmp
push
inc
mov
pop
nop
test
rcrl
xlat
add
pop
lock
imul
push
pushl
seto
add
pop
jns
pop
xchg
rcl
pushf
hlt
mov
lock
mov
jbe
cs
cwtl
xorl
mov
movsb
jb
pop
push
repnz
pop
mov
inc
insl
loopne
add
repnz
or
mov
ja
fsub
test
pop
popa
outsb
lock
in
popa
push
jae
push
lods
lds
lahf
push
adc
cmp
mov
ret
add
mulb
ret
lock
loop
jmp
ds
jo
and
call
call
test
inc
xchg
iret
xchg
xchg
xchg
push
in
ficoml
cmp
and
andl
and
cltd
xchg
icebp
xor
dec
lods
dec
lahf
loope
iret
std
sbb
arpl
xor
aas
adc
push
enter
aam
xor
mov
pop
pop
inc
in
gs
or
mov
jne
inc
inc
pop
dec
shrb
aad
fsubrl
sbb
int3
ljmp
adc
pop
or
push
pop
mov
sub
jge
les
cli
push
xor
pop
cli
mov
pop
stos
and
mov
and
jmp
les
or
sbb
lods
sarl
sbb
into
ljmp
mov
cwtl
fidivrl
push
sbb
push
or
jae
mov
push
adc
aas
xlat
push
sub
not
or
call
or
pushf
adc
lahf
mulb
pop
xchg
fwait
jg
push
ret
mov
aam
mov
or
rol
and
mov
dec
je
lret
jbe
pop
pop
dec
mov
mov
icebp
dec
xchg
xchg
lcall
incl
inc
push
out
test
push
inc
xchg
sub
pop
clc
dec
ds
jns
xor
rcrb
push
dec
push
gs
dec
xchg
xor
pushf
xorb
inc
out
cmp
shr
sub
fstpl
sub
pop
inc
orl
cmc
das
xor
es
popf
into
mov
sti
or
ds
mov
ret
iret
pop
lock
loopne
nop
pop
mov
adc
and
inc
mov
jae
mov
shl
mov
cmp
fstps
pop
ret
mov
aam
mov
ds
leave
xchg
stc
lods
ret
notb
gs
or
push
push
or
mov
in
sub
adc
daa
dec
dec
cmp
add
jb
cmc
stos
dec
push
push
cs
call
mov
xchg
and
pop
and
ret
incw
and
mov
cmpsl
mov
xchg
arpl
popa
mov
imul
fldt
push
dec
xchg
push
xchg
popf
andb
ljmp
cwtl
jmp
lcall
test
ja
and
mov
xor
pop
ret
push
push
pushf
xor
adc
add
or
sbb
pop
mov
push
aas
in
push
add
roll
xchg
sbb
pop
xor
sbb
sahf
out
leave
rcrb
xlat
inc
into
mov
es
push
mov
pop
out
fsub
call
out
and
jl
push
cmp
push
rcl
loop
pop
push
add
xor
cmp
in
xor
sub
pushf
fdivrl
mov
pop
cmp
mov
inc
ljmp
sub
pop
jne
cmc
dec
test
inc
out
sahf
das
or
xlat
xchg
jmp
out
pop
dec
jle
outsb
xchg
iret
sti
push
dec
add
mov
pop
mov
loopne
test
inc
jns
enter
and
aaa
pop
mov
sahf
imul
mov
mull
mov
mov
push
pop
sub
inc
rolb
dec
cmpsb
jo
dec
les
mov
jae
hlt
dec
fs
cltd
push
or
mov
ds
dec
pop
int
dec
jg
stc
bound
add
insl
mov
sarb
mov
xor
inc
stos
mov
cmp
gs
rcll
insl
rcrl
push
jnp
jmp
pop
out
xchg
cltd
out
repnz
sub
add
idivl
jne
jbe
insb
dec
pop
mov
dec
or
loop
ret
xor
sub
push
sbb
lock
xchg
rcrb
mov
inc
mov
lea
mov
jne
xor
es
cmp
adc
je
ja
loop
xlat
popf
and
outsl
or
lock
xor
pop
lods
andl
pushf
jp
cmp
ret
cmpsl
in
push
dec
jne
stos
insb
adc
into
iret
leave
ds
rclb
div
rcrl
and
rcr
pop
addr16
mov
xchg
cmpsb
negb
cmc
xor
and
aad
daa
push
xchg
les
dec
pop
aas
imulb
call
jno
addr16
clc
pop
cmp
mov
dec
fwait
xchg
add
leave
fistps
aad
loope
jno
xchg
jno
je
rcrl
hlt
testl
mov
pop
lcall
add
push
jge
mov
lea
inc
mov
push
outsl
out
xlat
and
sarb
pop
and
mov
push
ds
inc
mov
call
add
les
loope
cltd
push
cmpsl
repnz
fisttps
sbb
bnd
sarl
or
push
mov
out
inc
jne
push
repz
or
mov
and
mov
add
and
xchg
cli
adc
sub
cs
stc
inc
test
mov
pushf
fs
xchg
push
lds
lcall
push
mov
push
dec
xchg
sti
lods
jb
ljmp
xchg
inc
sub
movsb
movsb
mul
ljmp
push
add
dec
sub
out
dec
mov
and
enter
pop
aam
push
mov
or
lds
fstpl
ljmp
popf
loop
dec
movsb
xchg
xchg
outsb
xchg
fwait
iret
lods
pop
cmp
data16
or
xor
arpl
pop
loop
jl
and
call
sbb
je
in
xchg
sahf
or
xor
shll
inc
lds
cmp
dec
add
push
add
pop
and
mov
pop
jl
cmp
in
add
icebp
popa
mov
dec
addr16
imul
fdiv
lods
shrb
xchg
push
adc
ljmp
add
sbb
sub
cmp
mov
and
into
xchg
addr16
add
cmp
out
push
pop
iret
icebp
adc
ret
mov
add
mov
cmpsl
movsl
mov
inc
cli
mov
jmp
xor
mov
dec
es
rcl
stc
popf
xchg
sbb
or
adcl
fucomp
push
xchg
ljmp
jnp
mov
rorb
xchg
enter
and
cmc
in
add
pop
mov
xchg
ja
data16
mov
icebp
and
jp
lock
leave
lods
cmpsl
in
fisubl
push
dec
cmp
or
cmp
mov
int3
dec
mov
or
les
lds
adc
das
in
stos
push
mov
mov
pop
mov
cmp
xor
pop
dec
xor
mov
mov
mov
sub
repz
popf
and
iret
xor
sub
pop
jecxz
sub
jae
xchg
lcall
pop
fwait
ret
flds
sub
sahf
fs
mov
and
jne
dec
lock
push
xor
xor
insl
xchg
or
lahf
mov
sahf
jl
jo
aad
lds
cs
shlb
mov
xor
cmp
test
outsb
and
data16
loopne
pop
roll
fwait
and
mov
rorb
lods
cmp
cmp
pop
pop
pop
into
mov
sbbl
cmp
push
ljmp
mov
mov
shll
sbb
jbe
inc
sahf
or
fnsave
push
bsr
addr16
xchg
fwait
mov
jge
scas
in
into
xchg
mov
out
sub
dec
and
cmp
sub
arpl
push
mov
pop
inc
clc
push
mov
adc
xchg
xchg
hlt
sbb
leave
outsl
mov
fidivs
enter
dec
lods
scas
mov
mov
xor
pop
jno
stc
and
aad
jmp
bound
and
leave
jl
or
mov
cmp
pop
push
jge
arpl
xchg
ret
mov
int3
lret
push
and
icebp
mov
fwait
cmp
or
xchg
push
jb
inc
in
pop
mov
lahf
enter
call
add
pop
jne
mov
test
sub
xor
lds
sahf
jl
out
imul
call
xchg
jle
pop
push
dec
or
into
rcll
aam
arpl
enter
test
add
pop
clc
mov
push
pop
push
jae
push
fs
enter
inc
sti
mov
pushf
jb
out
sub
inc
rolb
repz
pop
push
sbb
lahf
lahf
orl
dec
sbb
or
adcb
inc
cmp
inc
ds
jb
loop
adc
or
or
mov
xchg
jg
test
cmp
ret
mov
mov
lcall
iret
jb
sub
xchg
insl
insl
xchg
pop
sbb
es
leave
pop
push
push
data16
push
je
aad
pop
sahf
push
dec
lret
fwait
imul
lock
or
mov
arpl
fisubs
out
dec
lahf
lret
push
xorb
sub
dec
insl
bound
mov
mov
add
push
dec
lock
adc
and
cmc
mov
xchg
mov
mov
adc
cs
cwtl
dec
mov
imul
imul
not
imul
ret
cwtl
aas
insb
sbb
push
in
shll
ret
jp
mov
inc
ret
fs
xor
mov
lahf
pop
sbb
inc
lret
punpckldq
shlb
jp
sub
je
and
pushf
or
ja
xor
dec
pop
ds
imul
dec
ret
loopne
cmpsl
insl
pop
pop
cmp
push
or
xlat
outsb
xchg
and
sahf
mov
cmp
lret
mov
sbb
xor
rclb
test
sub
mov
mov
jae
addr16
xor
dec
cld
cmp
adc
icebp
fwait
add
cmp
dec
scas
xchg
rcl
es
loop
dec
call
mov
test
xchg
std
out
fiaddl
int
icebp
push
mov
lret
mull
add
and
sbb
subl
mov
xchg
mov
int
mov
jb
mov
hlt
or
cmpb
dec
dec
jmp
lahf
add
lods
aam
mov
cmpb
jae
fidivs
add
mov
xor
adc
add
pop
cmpsl
add
xchg
insb
jl
mov
ffreep
fdivp
orl
out
inc
mov
cmpsb
ljmp
mov
movsl
jmp
xchg
ss
cmp
and
shrb
out
imul
push
movsl
das
lret
fstps
sbb
call
mov
test
inc
xchg
fstl
push
xchg
test
xchg
xchg
and
andb
aaa
dec
mov
mov
adc
mov
xchg
cmpsl
sub
mov
adc
lock
pushf
push
clc
fsub
xchg
jno
or
and
xor
cmp
pop
jmp
jb
or
shl
scas
xchg
fnstcw
loop
mov
clc
aas
cmp
sub
push
cmp
mov
inc
sbb
dec
and
dec
loop
pop
shll
and
mov
shl
and
out
adc
pop
enter
jae
shrb
popa
cmpsl
out
pop
pusha
iret
mov
mov
xchg
xchg
xchg
pop
sbb
sbb
xchg
cli
push
jge
push
pusha
jb
xor
cmp
sub
clc
lcall
add
jne
mov
push
sbbl
rcl
xor
stos
insb
je
mov
loope
jl
sub
popa
mov
in
sub
push
mov
test
xchg
mov
fnsave
mov
in
ds
mov
cwtl
push
and
cmp
in
pop
sbb
cwtl
loop
push
jmp
pop
leave
repnz
mov
inc
insl
ret
adc
jo
sbb
cmc
xchg
push
decb
xor
out
and
adc
cltd
jne
xlat
cmp
ret
xchg
and
add
into
ss
mov
pop
test
add
lahf
lahf
lcall
xlat
imul
sbb
or
mov
jae
xor
mov
mov
ret
jle
popl
adc
fadds
mov
jl
nop
inc
mov
movsl
test
dec
je
daa
rol
int
ret
nop
push
int3
or
sub
gs
das
call
arpl
sub
jno
stc
loope
mov
adc
xchg
ss
hlt
inc
xchg
or
cmp
sarl
stos
shll
in
sub
out
add
enter
jmp
push
test
pop
mov
xchg
js
dec
sbb
outsl
lods
jp
cmc
ds
mov
xchg
cmp
dec
std
repnz
clc
cld
ret
sbb
sti
push
ret
push
out
scas
sub
popf
dec
push
movsl
mov
push
cmp
jno
sti
cmpsl
adc
addr16
dec
icebp
or
iret
sbb
pop
jg
cli
imul
mov
and
repz
adcb
fstps
outsl
mov
dec
cltd
push
push
insb
aam
daa
aaa
hlt
jno
pop
push
clc
fisttps
sbb
in
leave
xchg
out
inc
sub
aaa
sti
cltd
movsb
sbb
sbb
mulb
fisttps
fdivp
mov
or
sbb
shr
add
jecxz
and
int
sbb
iret
pusha
clc
pop
daa
fcmovnbe
out
xchg
pusha
rcrl
nop
test
repz
in
add
lock
inc
cmp
xor
inc
jmp
addr16
cmpsl
mov
jae
fistpl
aad
test
sub
mov
fst
jns
sub
cmp
fnstsw
dec
sbb
test
dec
inc
lret
into
ret
test
aaa
mov
lods
xchg
adc
aam
mov
jne
cmp
fadd
lahf
pop
cltd
cmp
addr16
push
loopne
imul
jmp
inc
adc
insl
dec
inc
andl
cmc
sbb
cmp
out
es
outsb
lds
jbe
pop
stc
icebp
pop
cmc
addr16
clc
add
sub
jno
movsl
aas
out
sub
std
cwtl
mov
jmp
fdivs
rcrl
sub
clc
dec
add
dec
or
mov
negl
inc
stc
neg
mov
inc
mov
lock
push
sahf
nop
aam
imul
inc
test
jmp
movsl
addr16
xchg
add
fisttpll
dec
sub
mov
cld
mov
pop
sub
add
push
jno
aas
pusha
ds
gs
nopl
mov
or
pop
xor
and
fiadds
sti
lods
outsl
leave
lahf
or
xor
jae
inc
je
cmc
sbb
divl
shr
or
cmp
cld
jl
in
fptan
roll
pop
cmp
test
inc
adc
and
jecxz
into
dec
cmp
push
adc
dec
mov
adc
pop
pop
testb
sub
int
lods
pop
into
pop
cmp
fcomps
jl
imul
add
inc
jne
cld
ds
cmp
mov
sub
ss
xlat
ror
mov
test
scas
sahf
adc
test
subl
cmc
or
pop
mov
lahf
adc
clc
repnz
xor
iret
pop
stc
or
bound
push
sbb
cwtl
mov
mov
stc
sbb
mov
fbld
sbb
dec
inc
dec
xchg
test
push
in
xchg
dec
out
jo
push
mov
cld
repnz
lahf
add
mov
test
cltd
xchg
mov
arpl
push
and
push
loope
mov
sub
mov
xorl
cmp
add
out
cmp
pop
shlb
jl
sub
mov
pusha
mov
jb
push
ret
add
push
insb
mov
xor
fwait
rcr
mov
xor
sub
jns
mov
cld
dec
movsl
rorl
push
neg
sbb
adc
in
in
mov
push
and
jo
adc
rcl
mov
pop
shrl
movsl
inc
dec
xlat
push
pop
mov
mov
pop
mov
xor
mov
dec
call
xor
in
movsb
movsl
stos
mov
pop
insl
xlat
mov
push
add
xchg
push
pop
jno
xor
mov
ss
mov
sub
ficoms
cmp
in
loop
imul
xlat
aam
mov
repz
cli
stc
sbb
jb
inc
dec
sub
sbbl
call
inc
or
push
adc
rorl
cmc
mov
lds
adc
dec
clc
push
xlat
fdivs
add
hlt
mov
push
mov
bound
clc
xor
insb
inc
jg
pop
stc
mov
call
xor
cmp
icebp
test
adc
pop
scas
xchg
test
and
iret
ljmp
push
popa
adc
or
loopne
cltd
mov
pop
insb
dec
push
mov
popf
inc
cmpsl
das
sbb
outsl
cmp
xchg
pop
mov
mov
cwtl
push
call
push
cmp
cmc
pushf
dec
xor
insl
stos
pop
dec
or
xor
shrl
cmp
lea
ss
bound
cmp
sbb
stos
push
rcrb
pop
xchg
xor
loop
movsb
lcall
mov
cmp
rcll
fstps
push
outsb
dec
scas
or
pop
out
lret
push
fwait
leave
fwait
ljmp
and
jne
addr16
cltd
push
pusha
faddl
outsl
lahf
out
sub
jae
mov
xlat
mov
js
lock
gs
pop
pusha
out
popf
push
clc
mov
nop
std
xor
into
inc
add
stos
popa
or
dec
inc
cmp
mov
sbb
jbe
out
pop
add
mov
adc
sarb
mov
divl
lds
fcmovnu
pop
jnp
add
outsl
loope
ss
imul
adc
pop
inc
pop
jb
mov
inc
push
icebp
cli
loope
jg
jno
test
stos
in
inc
jo
in
push
cmp
xor
mov
pusha
je
clc
jb
push
xor
movsb
sti
insl
xor
jmp
jae
cltd
sarl
fdivrs
lds
scas
sbb
push
or
fildl
sbb
sub
xor
sahf
and
dec
mov
fnstcw
cmp
in
pop
inc
add
xor
sub
insb
ret
enter
pop
pop
out
mov
or
lds
adc
lods
dec
inc
imul
mov
test
pop
dec
xor
popf
adc
add
pop
xchg
xor
and
mov
xchg
cltd
sub
lods
mov
hlt
leave
cmpsb
pop
push
add
push
cmp
or
test
leave
test
sahf
mov
int
push
push
jge
pop
pusha
inc
xchg
stos
xchg
pop
ja
and
out
test
std
sti
xlat
jnp
jnp
push
jnp
mov
nop
jbe,pt
fists
cmp
lret
pop
jne
jo
sbb
xor
cmp
mov
imul
sbb
jp
mov
and
sbb
repz
lahf
int3
jge
into
popf
ret
leave
imul
pop
or
cmpsb
push
adc
ljmp
outsl
ss
loope
jo
jg
push
sbb
and
jge
or
decb
int
mov
test
cmc
mov
push
or
xchg
lock
iret
aaa
xlat
iret
fwait
lods
add
jge
xlat
iret
out
cmp
pushf
pop
mov
pop
fdivrs
fucompp
add
loopne
sub
inc
jae
xor
out
bound
mov
inc
push
pop
shlb
aas
push
sub
xor
out
add
push
popa
nop
xchg
out
stos
mov
mov
leave
push
aaa
inc
insb
xorl
xchg
xchg
jl
dec
or
pushaw
mov
aad
mov
pop
cmp
xchg
push
mov
jo
lcall
push
idivl
pop
mov
xor
fcoms
cmp
push
mov
xchg
aas
popf
dec
scas
sub
imul
dec
dec
popf
mov
rorb
and
popa
add
pop
cmp
mov
inc
cli
sti
mov
push
insb
pop
shrb
jmp
arpl
jne
push
lret
mov
mov
mov
mov
in
rorl
outsl
ret
mov
dec
jns
das
sub
adc
or
push
lds
outsl
pop
ret
jns
stc
ficoml
jbe
push
lods
adc
dec
call
add
jbe
mov
pop
ljmp
pop
loope
mov
xor
jp
in
sub
inc
cmc
and
xchg
jg
xchg
push
adc
sbb
sbb
fwait
sub
fisttps
cmp
adc
dec
fisubrl
ror
sbb
test
mov
xorl
iret
and
movl
xchg
mov
mov
adc
stc
loop
loope
jne
mov
insl
cmp
lock
and
pusha
mov
rolb
xchg
add
add
mov
adc
call
cmp
pusha
int3
fdivrl
test
and
pop
ret
popf
fstpt
sbbb
pusha
sbb
or
mov
xchg
dec
cmp
xor
ret
cmpsb
dec
adc
insl
imul
out
cmp
call
test
inc
adc
daa
dec
aad
mov
jae
adc
xchg
cld
jle
cmpsl
mov
test
shll
gs
loopne
aam
jne
sub
aas
cltd
push
outsl
dec
xchg
jnp
popa
imul
xchg
mov
aas
push
rolb
mov
mov
xor
cmp
jle
or
rcrl
dec
lahf
and
mov
xchg
loope
call
testl
sub
test
mov
test
ret
filds
cmp
or
aam
mov
pop
mov
jb
pop
movsb
cmp
test
movlhps
testb
mov
and
lods
cmp
or
push
es
pop
repz
mov
aas
pop
lock
cmp
push
lods
adc
xchg
and
inc
sar
adc
mov
add
jmp
movsb
test
out
aas
xchg
dec
push
xchg
cmp
inc
shlb
testw
repnz
loope
dec
cmpsb
xchg
int
iret
aam
adc
cmp
outsb
jbe
xchg
push
in
out
pop
or
mov
js
pusha
out
dec
popa
add
xchg
xchg
cmc
fiaddl
shl
mov
xlat
loope
push
in
cmc
xchg
movsb
inc
addr16
lret
xchg
sbb
xchg
mov
pushf
aam
arpl
shlb
pop
daa
fnstsw
or
lock
in
push
in
and
adc
fdivr
clc
scas
pop
and
je
gs
adc
pop
dec
inc
mov
or
add
pop
outsb
dec
mov
sbb
cltd
adc
mov
in
jg
xor
adc
insb
jbe
lods
xor
hlt
cmp
aas
es
push
and
lods
mov
adc
pop
pop
mov
in
cltd
mov
lock
cli
ss
mov
bsf
int3
arpl
lcall
shl
imulb
fisubrl
sbb
insb
pop
and
mov
arpl
sbb
push
inc
sbb
pop
xchg
bound
stc
inc
sub
arpl
sub
xlat
mov
jo
call
outsl
sbb
mov
aad
cmp
lret
xchg
add
xor
les
dec
pop
mov
call
push
ds
stc
xlat
mov
orl
cmp
mov
xchg
add
lods
xchg
xchg
out
nop
fsubs
dec
aam
stos
test
cli
jg
ret
cld
outsb
rep
scas
pop
xchg
push
add
push
in
xor
aad
push
sbb
jg
push
jns
call
add
or
mov
fildl
jns
aas
outsb
adc
shrb
imul
mull
jecxz
sbb
mov
ljmp
outsb
sbb
repnz
outsl
sbb
push
adc
scas
inc
add
stos
xchg
mov
out
xchg
push
push
inc
faddp
xor
arpl
nop
sbb
lods
mov
add
sahf
sti
or
sbb
stos
jne
push
xor
mov
jle
imul
movsl
inc
fwait
push
mov
jg
popa
fcoms
xor
cmc
push
cmp
cwtl
daa
adcb
cld
mov
push
jl
nop
pop
mov
sbb
stos
jb
xor
test
jmp
xchg
repnz
iret
insb
jecxz
mov
data16
fdivrl
jbe
and
inc
jecxz
push
mov
insb
push
dec
xchg
lret
shll
pop
fstpl
add
adc
sti
mov
push
cmpsl
jo
cld
sbb
ds
pop
mov
mov
movsb
sti
inc
adc
icebp
rclb
in
repnz
daa
addr16
nop
bound
outsb
stc
and
sbbb
push
lahf
or
in
imul
push
mov
mov
xchg
inc
shlb
and
js
inc
push
mov
aam
mov
sahf
dec
mov
lock
pop
or
jae
jb
add
xlat
cmp
xchg
or
cmpsl
cmp
fisubl
clc
cltd
sbb
pop
ret
jbe
nop
mov
in
and
add
test
les
packssdw
mov
dec
movsl
or
jp
out
xor
inc
or
lcall
stc
je
in
and
ret
outsl
lcall
and
push
mov
repnz
dec
push
xor
sub
mov
fidivrs
aad
cli
or
insl
push
xchg
jbe
jae
pop
out
mov
sarl
push
pop
pop
mov
std
in
clc
aaa
and
pushf
dec
popa
fwait
arpl
pop
nop
mov
push
rclb
add
lods
sbb
mov
subl
mov
out
in
fs
push
dec
les
fnstenv
fwait
add
fdivr
pop
dec
push
cmp
or
mov
faddl
adcb
outsl
in
pop
inc
loopne
nop
mov
movsl
mov
mov
movb
scas
pushf
xlat
adc
cld
js
sbb
jo
std
pop
xchg
ja
add
ror
xchg
xchg
xchg
clc
lret
lea
fisttps
and
push
aaa
mov
mov
mov
lods
fdiv
xchg
pop
cld
push
and
je
ss
mov
pop
scas
xlat
mov
fwait
aam
mov
cmp
inc
mov
push
push
xchg
and
mov
clc
xor
fdivr
and
mov
insl
cwtl
mov
test
xchg
popa
inc
cmpsl
addr16
push
cs
pop
movsb
sub
and
les
sti
cmp
xchg
lcall
popa
xor
subl
iret
aas
imul
lds
bound
xchg
push
out
sbb
jmp
or
adc
cmp
aad
loope
js
lcall
inc
inc
cld
mov
or
and
xor
in
out
jle
mov
adcb
outsl
cmp
cmp
xchg
ffreep
out
xlat
mov
int
lods
pop
ljmp
in
push
adc
jl
adc
movsb
pop
sbb
push
mov
std
pop
lcall
lods
movsl
lods
jge
js
lock
aas
adc
test
xchg
sbb
ss
push
mov
xchg
or
inc
out
add
shlb
arpl
jmp
icebp
xorb
pop
repnz
inc
test
add
imul
mov
insb
xchg
add
ss
push
ja
and
fwait
pop
adc
js
out
lods
loope
test
push
out
fwait
incb
xor
pop
cmpsl
add
inc
sub
xor
call
adc
jo
push
fsts
ret
cltd
xor
negl
add
dec
jge
and
int
test
add
push
aas
cs
sub
stos
fsts
lock
or
mov
repnz
xor
stos
pop
jmp
lock
xor
and
lock
rcll
push
cmp
lock
mov
scas
jg
or
sbb
out
xor
xchg
jae
dec
sub
hlt
push
int3
jge
adc
push
mov
les
push
outsb
fwait
cwtl
push
xchg
imull
pop
push
add
negl
adc
or
roll
pop
sti
jmp
aaa
lods
cltd
clc
pop
lods
ja
sub
in
pusha
lods
jne
xchg
aaa
outsl
push
push
out
push
sbb
enter
data16
stc
adcb
sbb
dec
mov
mov
movsb
jbe
xchg
lea
orb
roll
jno
jnp
clc
andb
imul
ds
xor
xchg
in
imul
jns,pt
pop
sbb
pushf
jle
mov
or
inc
and
xchg
push
scas
jae
ds
xchg
mov
jp
aas
in
adc
mov
push
add
adc
xchg
loope
jne
or
js
lret
lea
fs
add
hlt
pop
cmc
stos
sbb
xchg
mov
push
lea
push
ljmp
lea
adc
jg
fs
scas
push
es
xor
mov
addr16
xchg
xchg
repz
xlat
xchg
dec
dec
mov
pop
pop
adc
fmull
mov
mov
jle
inc
sbb
adc
push
ja
push
scas
mov
int3
pusha
imul
and
cmp
sbb
push
xchg
rorl
pop
stc
aaa
cmpsl
aas
or
xchg
mov
xor
ja
xchg
outsb
jnp
int
mov
sbb
cs
sbb
cmp
inc
inc
gs
adc
mov
movb
cmp
push
in
ljmp
stos
movsl
cltd
mov
mov
mov
mov
jp
add
inc
mov
mov
mov
or
stos
mov
xchg
mov
inc
sbb
add
pop
fstl
out
std
jp
xor
mov
jl
movhps
and
add
leave
sarl
mov
out
mov
mov
or
push
movsb
cmp
repz
pop
xchg
mov
sbb
test
add
fs
jae
xchg
enter
sbb
inc
or
push
xchg
stos
cmpsl
cmp
aas
aad
adc
and
jecxz
ds
movsl
xlat
loope
es
cmpsb
scas
jae
sub
inc
ds
je
insl
inc
lret
cmpsb
dec
scas
mov
xchg
xchg
cld
or
xchg
and
adc
movsl
in
imul
jne
lds
fisubs
mov
xchg
cli
jae
arpl
add
push
xchg
mov
imul
mov
sbb
test
outsb
pop
sub
xor
or
jns
sbb
and
cltd
imul
jne
js
inc
cmc
in
fcomi
mov
out
add
push
rcr
push
mov
into
inc
sbb
rclb
push
dec
call
or
mov
aas
mov
idivb
sub
xor
push
cmp
sbb
sbb
rorl
adc
inc
in
push
xchg
cmp
and
stos
imul
inc
nop
pop
add
sti
xlat
push
or
mov
scas
or
mov
pop
add
xor
and
xchg
xlat
and
or
sahf
or
pop
or
push
mov
aam
jo
ljmp
sti
lahf
mov
sub
pushw
pop
mov
push
sub
inc
cmp
push
adc
int
leave
pop
int
mov
aaa
xchg
push
cmp
movb
imul
xor
jbe
hlt
mov
push
push
out
enter
pop
push
int
cmc
cmp
cmp
inc
push
jmp
mov
push
fisttps
fwait
pop
adc
pop
shl
mov
mov
test
arpl
xchg
lock
call
inc
jbe
add
mov
das
insl
in
lret
addr16
inc
fdivr
xor
popf
xor
into
das
aad
cmp
xlat
rcll
aad
movl
xchg
mov
jg
push
jg
adc
xor
inc
inc
push
dec
mov
push
jmp
push
out
orl
popf
and
mov
jp
fwait
ret
mov
lret
mov
or
inc
inc
sub
push
pop
mov
mov
fisttpl
push
dec
and
adc
mov
cmp
cld
xor
push
and
mov
scas
test
dec
call
jne
test
pop
push
mov
sbb
scas
dec
rorl
cmp
mov
add
lods
mov
xchg
data16
ret
call
je
jmp
rcll
adc
inc
cmp
stc
push
imul
push
test
xchg
mov
pop
std
fcoml
inc
ret
imul
push
test
xchg
add
and
adc
push
xorl
pop
and
psubw
push
cmpsb
xchg
mov
dec
xor
call
bound
mov
inc
lret
fnstsw
adc
and
mov
cmp
gs
into
jno
fwait
cmpsl
push
adc
push
int3
shr
frstor
pusha
pop
inc
dec
aaa
popl
pop
pop
adc
std
mov
mov
adc
call
add
int3
or
icebp
xchg
int3
insb
xchg
fistpl
insb
mov
cmpsl
shll
xchg
xor
push
sbb
aam
ljmp
inc
inc
mov
mov
in
jg
sub
lods
adc
data16
iret
adc
mov
xor
add
or
nop
push
push
mov
flds
arpl
push
popa
xchg
lock
loope
aas
repz
or
mov
dec
stos
fwait
outsl
adc
dec
push
xor
lret
xchg
scas
add
fbstp
dec
mov
outsl
push
les
mov
add
fists
push
stos
insb
push
dec
call
sub
lret
sbb
add
push
push
int3
in
jns
into
insl
push
das
jb
or
jmp
icebp
sub
stc
pop
add
cmp
mov
jp
add
imul
or
dec
jl
cmp
into
in
fdivs
or
sub
cs
inc
sub
cmpsl
push
lods
fstps
data16
in
andb
sahf
xor
jns
pushf
in
jo
mov
cmp
repnz
push
sub
mov
ret
adc
in
lcall
repz
adc
sbb
out
movsb
in
shll
mov
mov
mov
scas
xchg
ljmp
add
ficomps
dec
sbb
mov
mov
fsincos
into
or
sahf
shrb
pop
and
fcompl
mov
mov
lcall
iret
mov
sbb
sbb
xor
ds
jns
insb
push
cmp
dec
lock
add
adc
mov
inc
loope
mov
fldl
xor
das
sub
xor
add
mov
mov
mov
mov
out
fldenv
test
and
push
insl
mov
lods
jge
mov
loope
xchg
ret
inc
xor
jg
cltd
or
mov
loop
div
lods
lea
xchg
sub
aaa
adc
sbb
adc
cwtl
or
cmpsl
jl
inc
daa
insl
pop
iret
divb
push
lds
lcall
test
mov
ror
loopne
gs
sbb
mov
xchg
lds
enter
and
push
mov
scas
sub
push
ret
add
scas
dec
push
hlt
pop
arpl
jbe
add
imul
push
sub
sti
cmpb
add
mov
repz
in
push
in
fwait
movsl
shl
mov
add
aas
push
fcompl
sbb
lods
popa
movsl
jae
push
pop
sbb
lahf
rclb
xor
jnp
jae
imul
aam
les
mov
out
adc
lret
mov
lock
mov
dec
enter
xchg
push
and
inc
mull
daa
mov
jae
iret
pop
stos
sbb
sbbb
xchg
mov
out
mov
ljmp
pop
pop
adc
xchg
and
cltd
add
fisttpl
cmp
sbb
inc
pop
cs
nop
mov
nop
in
lcall
push
sahf
mov
bound
jne
clc
push
pop
mov
add
cli
sub
cmp
mov
outsb
sbb
jae
pop
fsubl
sti
and
cltd
mov
inc
divl
stos
pop
out
das
scas
loope
or
ret
loope
lret
pop
jle
shll
es
sub
and
aas
and
enter
test
clc
scas
pop
mov
js
sti
je
mov
pop
mov
add
xchg
and
stc
push
idivb
call
dec
cltd
xor
popa
aam
mov
hlt
gs
sub
jmp
pop
push
aam
mov
jnp
jb
aas
jmp
adc
mov
mov
mov
pop
xchg
mov
leave
loopne
loope
je
daa
leave
sti
xor
xchg
sub
xchg
imull
xor
inc
mov
movsw
jle
mov
out
sub
and
xor
les
and
hlt
sbb
and
insl
jo
rcrb
xchg
or
mov
lcall
xchg
icebp
outsl
mov
and
pushf
dec
fsubrs
inc
mov
enter
dec
ljmp
test
push
dec
xchg
inc
lret
pusha
push
push
mov
das
aaa
sbb
pop
jae
loope
or
js
xchg
out
pop
add
dec
in
into
cs
fcmovbe
loopne
xchg
gs
push
pop
shl
mov
test
cli
movsl
jae
in
or
cs
jg
pusha
jnp
mov
push
pop
decl
es
cwtl
mov
push
subl
ret
mov
sbb
daa
enter
mov
leave
pushf
xor
pop
addl
movsl
dec
mov
cmpsl
mov
xor
push
shlb
insb
xor
int
out
aas
or
adc
into
les
mov
sar
push
call
jno
mov
je
pop
insb
setbe
mov
pusha
mov
arpl
push
add
stos
outsl
push
aad
hlt
iret
subb
and
jae
out
xchg
ret
inc
flds
mov
mov
mov
and
dec
xor
mov
mov
ficoml
add
mov
int3
push
or
xchg
test
and
pop
pop
pop
mov
mov
jg
ret
mov
sub
push
or
sbb
xchg
pop
mov
test
xchg
sub
and
pop
repnz
cmp
test
xchg
and
sbb
xchg
test
dec
mov
bound
mov
ljmp
mov
dec
shlb
sub
cli
adc
sub
out
push
test
add
jmp
push
mov
ret
pushf
mov
push
in
push
mov
sub
push
sub
jl
xor
push
adc
push
mov
pop
cmp
cmp
xchg
inc
hlt
clc
enter
pop
lods
insb
cmc
adc
cmpsb
call
cmp
cli
jge
push
hlt
sub
sub
es
pop
ss
pop
ljmp
out
mov
leave
shll
enter
xchg
loope
mov
je
daa
data16
mov
mov
cs
or
divb
es
inc
rcr
out
add
mov
xchg
cmp
int3
bound
mov
jp
js
xchg
jmp
sti
mov
fdivs
sti
push
pop
scas
out
mov
out
shrb
pusha
jns
in
dec
popa
lret
loopne
stc
shlb
lahf
sahf
xchg
sub
jmp
bound
inc
nop
add
fistpl
xor
mov
inc
ss
aam
mov
js
lods
call
fcmovne
cs
mov
add
lcall
xchg
aas
pop
popf
mov
sub
imul
mov
xor
or
fistps
mov
push
shl
pop
cltd
les
push
inc
pop
mov
fstpt
loope
les
xor
les
clc
and
xor
je
or
jo
lods
push
movsb
rcl
icebp
xchg
push
sbb
popa
loope
popa
hlt
add
dec
call
hlt
std
cli
in
movsl
daa
sbb
repz
sti
adc
cmc
push
in
cmp
rorl
add
adc
mov
leave
or
inc
loopnew
sahf
jno
and
sbb
js
mov
clc
adc
sbb
loop
js
into
mov
cwtl
and
inc
outsb
into
daa
int
xchg
popf
cmpsb
inc
inc
dec
fsubrl
sub
shlb
outsb
fwait
jg
cltd
or
jp
lods
jbe
fsts
imul
aaa
inc
fstpl
cmp
aas
jmp
ret
xor
iret
pop
xchg
pop
cli
popa
sub
sbb
loopne
pusha
xchg
inc
cmpsl
aad
or
jns
cmp
push
jo
fsubrl
pusha
cli
out
add
xchg
dec
pop
mov
mov
movsl
movsb
leave
sbb
fistpl
dec
stc
cmpsl
repnz
fcoms
mov
sbb
mov
inc
jo
fwait
push
dec
mov
cmp
jno
xor
repnz
adc
sub
push
mov
aad
jno
popa
loop
outsl
pop
adc
out
stc
lret
stos
mov
push
push
test
pop
pusha
cmp
ja
out
jns
icebp
mov
in
pusha
or
or
enter
mov
or
sub
jnp
sub
dec
fnstcw
js
xchg
mov
xor
shrl
mov
xchg
das
sub
dec
std
enter
out
ret
testb
jns
jge
push
inc
push
hlt
loop
jp
adc
out
cmp
jp
sbb
vpmuludq
push
dec
cmp
pop
jmp
add
arpl
inc
stos
and
ret
jae
das
dec
inc
xchg
mov
and
ret
mov
je
cmc
inc
out
repnz
add
dec
fwait
adc
jle
stc
cmp
jns
das
push
imul
inc
mov
mov
je
sbb
sub
xchg
mov
cli
adc
dec
push
test
jecxz
lret
xor
mul
ds
or
insl
pandn
ja
loope
inc
loopne
rclb
lock
mov
test
in
dec
shll
movsb
inc
jge
inc
rclb
jae
and
lea
mov
cld
scas
lcall
adc
cwtl
push
mov
test
xorb
mov
xchg
ror
lds
and
mov
and
test
sub
push
cmp
jno
cld
inc
mov
jle
es
jl
mov
cmp
jnp
sub
push
imull
push
pop
ja
imulb
mov
repnz
lret
rorl
int
in
xchg
test
aaa
dec
xchg
pop
sub
or
mov
lods
cwtl
mov
dec
mov
and
or
cld
pop
lret
pop
sti
or
pop
add
movsb
xlat
or
sub
dec
sti
xlat
sbb
and
xor
jmp
es
daa
je
aaa
pop
rcr
lea
pop
jb
pop
mov
adc
or
popf
or
mov
mov
mov
call
mov
ret
in
pop
adc
loopne
xor
mov
jnp
cmpsl
dec
mov
cmp
cmc
daa
pop
xchg
cs
test
sbbl
cmpl
cmp
sbb
adc
jns
shr
cmp
pop
inc
mov
mov
pushf
or
fmull
shl
dec
ljmp
test
xchg
push
nop
and
rcr
shl
cmp
push
and
mov
pop
movsl
jae
jbe
sbbl
scas
aaa
les
daa
inc
xor
or
xor
lcall
xor
out
sub
cmp
movsl
cli
lds
lcall
in
xchg
gs
std
cld
std
sub
xchg
adc
mov
and
movsl
aam
mov
lods
std
xchg
mov
popa
sub
mov
scas
and
and
pop
xchg
pop
mov
fstp
in
imul
or
push
test
test
in
aad
inc
push
sub
ljmp
bnd
mov
sbb
mov
xchg
mov
xor
or
inc
addr16
lock
sbb
mov
inc
adc
sarl
bound
clc
mov
ret
and
insl
xchg
fidivl
aad
out
aad
xchg
xchg
cmpsl
and
inc
push
jae
xchg
shrb
push
xchg
jg
dec
mov
roll
ror
imulb
cmpl
test
cltd
jne
movsl
fadds
xor
data16
daa
add
jo
faddp
ds
jnp
push
push
pop
mov
rcl
and
xchg
pusha
add
mov
pop
mov
jno
or
movsb
test
incl
add
jmp
fldenv
inc
pop
inc
inc
loop
es
cmp
mov
push
aam
fdivrp
mov
push
or
es
xchg
and
outsb
imull
inc
adc
mov
les
xchg
xor
dec
push
mov
push
dec
jp
cs
mov
loopne
mov
iret
add
mov
add
cmpsl
fcoml
dec
add
aad
iret
fsubrs
or
mov
out
orb
out
jnp
lods
push
sahf
outsb
xchg
test
mov
aas
mov
fwait
mov
pusha
cmc
inc
xor
testl
adc
dec
repnz
jbe
movsl
ss
das
xor
pop
out
dec
add
outsb
int3
and
btsl
fsts
xor
mov
and
popf
fcmovu
or
loopne
aaa
sbb
lock
adc
cltd
mov
sbb
sti
div
mov
loopne
push
mov
cli
aam
stos
arpl
outsl
inc
iret
stos
add
aas
in
sub
frstor
jecxz
cmp
xchg
push
movsl
pop
in
xchg
xchg
sub
cmc
fiadds
jo
xor
imul
xor
push
idivb
adc
mov
pushf
sbb
jbe
loopne
sti
xchg
leave
cmp
pop
cwtl
lahf
icebp
dec
pushf
xor
jnp
xchg
xor
mov
sbb
cld
repz
jecxz
push
pushf
movsb
jge
pop
mov
es
aad
scas
sub
and
notl
push
pop
jge
ret
insb
and
mov
pop
mov
lahf
shll
negl
clc
outsl
pop
je,pn
mov
and
or
pop
and
adc
sbb
ja
dec
sbb
das
jae
popf
cmpsl
dec
sbb
jge
jne
cmp
sbb
push
test
lret
add
xor
inc
lods
aad
test
loop
or
jns
fmull
fbstp
arpl
jnp
mov
imul
sub
lret
jne
xchg
je
fsubr
loopne
inc
dec
outsb
rcrb
cwtl
std
outsl
outsl
outsl
pop
ret
and
xchg
push
mov
dec
push
test
pop
push
lret
or
insl
xchg
ljmp
repz
leave
inc
push
subb
inc
mov
xchg
mov
pusha
imul
xchg
insl
movsl
jb
push
movb
lcall
jecxz
aam
jns
test
pop
inc
icebp
movsb
cmc
or
and
arpl
cmp
sbb
cmp
jge
mov
movsl
popa
lods
jno
mov
aam
daa
loope
xor
test
mov
inc
or
inc
lds
push
sahf
out
pop
xchg
addr16
fistpll
push
rorl
and
inc
jl
lahf
lods
xchg
push
lcall
ss
inc
shrb
imul
imul
lods
test
out
ljmp
call
or
aas
cmp
in
aam
jecxz
sub
sub
xchg
in
xchg
and
push
push
dec
mov
je
sti
mov
inc
imul
or
and
lret
or
lahf
sbb
loopne
inc
or
dec
pop
icebp
pusha
dec
jmp
cmp
out
push
in
sbb
sti
pop
ds
dec
shrl
out
repnz
sbb
mov
rorl
cmp
daa
sub
mov
cmpsb
xlat
js
cmp
hlt
push
loopew
lods
shlb
scas
es
mov
add
pop
and
jo
xchg
fwait
mov
loope
imul
lret
test
sbb
jl
mov
fwait
add
fists
sti
jae
pop
push
ds
cmp
xchg
pushf
sbb
mov
jnp
inc
es
addl
popa
gs
lods
lcall
iret
add
jne
flds
jge
inc
dec
lret
sti
lcall
mov
in
cmpsl
sbb
pop
xchg
flds
pop
cwtl
test
inc
test
cmpl
lods
aam
idivl
ss
popw
xlat
cltd
les
popa
insl
cli
out
mov
cmp
push
sub
pushf
cmpsb
jl
xchg
xchg
lock
movsl
mov
shll
popa
in
fisubs
adc
icebp
dec
jmp
cltd
adc
call
push
inc
sbb
push
lahf
clc
aaa
or
mov
mov
adc
dec
adc
jl
pop
data16
lcall
xorb
inc
xor
cmp
cmp
sbb
gs
jno
mov
and
mov
jecxz
jno
jae
and
push
sbb
add
push
lock
sbb
sub
push
pop
iret
dec
pop
xor
aaa
inc
or
fs
aam
mov
stos
sbb
cmpsb
and
inc
cmp
sbb
jo
xchg
negl
xchg
stc
jb
adc
push
dec
jl
outsb
aas
add
adc
cmp
test
lcall
mov
pop
jl
mov
std
pop
iret
repz
inc
mov
leave
mov
jmp
or
pop
roll
cwtl
inc
sbb
nop
in
xchg
mov
cltd
ds
mov
jg
inc
mov
add
push
pop
and
sub
pushf
fs
pop
movsl
mov
inc
scas
mov
lock
fmuls
movsl
or
ds
mov
ljmp
enter
shll
mov
push
fnstenv
cmp
xor
int3
fldenv
fdivrp
jl
push
insl
cli
mov
xchg
repz
or
pop
lods
leave
xchg
jae
shrl
mov
push
cmp
push
jle
push
sbb
pop
ds
mov
and
sub
add
mov
jecxz
cs
add
cltd
jbe
mov
mov
mov
dec
test
add
xchg
mov
pop
mov
flds
mov
inc
and
jne
xor
pop
and
dec
jno
jecxz
jae
rclb
test
add
out
out
mov
push
fs
push
cltd
bound
jne
ds
test
shl
xlat
sarl
mov
sbb
pop
push
mov
aad
pop
cmp
mov
adc
dec
in
fsubl
inc
movsb
dec
cli
adc
fldcw
xchg
mov
lods
pop
push
prefetch
lret
lcall
sbb
xchg
cli
jge
adc
sub
adc
xor
xor
jnp
movsb
mov
xor
pop
ret
das
je
js
cmp
div
icebp
les
adc
into
daa
sub
cmpsl
push
jl
adc
lahf
xor
pop
mov
pop
mov
and
testl
or
jbe
add
data16
js
cmp
test
mov
sahf
int
in
xchg
xor
xlat
add
push
imul
sti
popf
mov
push
fildll
mov
les
std
xchg
mov
jns
xchg
jp
sbb
aas
mov
shlb
scas
dec
leave
cmp
push
decb
and
jno
sub
test
inc
push
test
push
xchg
movsl
cmpsb
movsb
xchg
inc
fmul
lods
mov
scas
movsl
jle
lds
lret
bound
je
dec
mov
fcmovu
xchg
cmp
sub
push
push
mov
bound
dec
fildll
jne
cmpsb
inc
cmp
mov
sbb
scas
movsl
push
or
sub
lock
ret
pop
add
or
addr16
push
icebp
dec
sbb
incl
mov
jg
push
push
rcll
mov
test
push
mov
lret
popa
aam
data16
push
xor
cmp
enter
or
loope
mov
mov
pop
hlt
pushf
mov
insl
andb
xor
mov
mulb
lret
sbb
xchg
dec
in
adcb
mov
or
or
fisubrl
mov
push
push
orl
jl
aaa
pop
pop
pop
and
shrl
push
aas
inc
or
pop
movzwl
cmc
push
cmp
into
mov
adc
xchg
les
ljmp
jecxz
js
jmp
dec
jbe
inc
addr16
idivl
dec
rcrl
dec
lea
xchg
add
mov
lret
rcll
nop
and
push
xor
pop
push
mov
and
and
shrl
das
lea
inc
xor
pop
xchg
mov
xor
xor
fiadds
mov
pop
push
dec
out
sbb
xlat
int
jmp
push
mov
lock
pop
call
or
ret
roll
stos
mov
cmp
mov
sbb
js
inc
sti
xchg
cmp
cmp
ret
cmp
mov
loope
fiadds
sub
push
jae
ds
pop
nop
cmpsb
and
mov
cwtl
les
cmp
mov
and
iret
sub
cmp
adc
sub
repnz
xor
adc
ret
stos
popf
xchg
pop
pop
mov
shl
fnstenv
sub
xchg
and
add
in
cmp
pop
push
push
andb
jbe
subl
lock
test
loop
arpl
xor
cmc
cwtl
dec
test
mov
aad
stc
adc
sbb
mov
scas
push
imul
mov
pop
push
jl
dec
lds
inc
mov
mov
lea
jle
shl
outsl
adc
xchg
dec
jo
adc
add
mov
repz
push
outsl
bound
inc
mov
jge
fnstsw
and
add
out
mov
dec
or
dec
dec
shlb
add
jg
and
jl
mov
xchg
outsl
aad
enter
shrl
icebp
nop
or
cmc
stos
push
fcoml
add
dec
xor
pop
adc
sub
mov
add
ja
imul
jo
jns
push
popf
shll
sbb
xchg
jbe
mov
push
pop
jns
lods
mov
bound
aam
add
and
leave
repz
pop
pushf
imul
aaa
movq
int3
or
push
pop
sbb
cmp
mov
jl
mov
iret
dec
int3
adc
sbb
pop
pop
xchg
xchg
ljmp
in
jns
xor
emms
daa
int
scas
orl
pop
int
sbb
add
loopne
les
adc
hlt
mov
and
sbb
push
xor
adc
insb
lds
xchg
loopne
rorb
xchg
pop
insb
pusha
mov
data16
or
out
pushf
popf
arpl
aam
int
push
aad
or
xchg
push
dec
pop
xor
ja
xchg
mov
jne
jne
nop
pop
pushf
ljmp
int3
xchg
xchg
int
stc
pop
gs
mov
loope
xorl
xchg
xchg
stos
inc
hlt
jbe
ljmp
fsubrl
ret
push
cmp
aam
out
mov
adc
xchg
push
inc
cmp
pop
in
popa
push
aad
pop
shll
sbb
inc
jnp
mov
in
mov
inc
fwait
shll
add
cmc
xchg
pop
push
out
scas
fldl
fcmovnu
dec
popf
out
or
rcr
sbb
xchg
repz
mov
test
push
cmc
mov
mov
movsl
or
aas
out
into
stos
add
popa
loopne
push
daa
mov
pop
in
subb
pop
dec
push
test
sub
lea
cmp
cmp
mov
aad
or
js
mov
jb
pop
repz
fcomp
mov
mov
out
jl
lea
sbb
add
sub
jp
popf
daa
cmp
cmc
xor
fisubrl
aam
loopne
insl
int3
dec
icebp
mov
call
adc
pusha
push
sbb
push
jne
es
insl
sarb
add
inc
push
clc
aad
jmp
lds
dec
scas
in
repnz
jle
enter
ret
xchg
inc
pop
mov
lcall
jne
cmp
pop
or
mov
sbb
mov
xchg
jnp
adc
imul
test
iret
cmp
mov
mov
mov
addb
jmp
inc
dec
jmp
stos
xchg
pop
mov
mov
pop
xor
jmp
repnz
ss
add
push
push
cmp
xchg
push
int
push
cld
out
ret
ficomps
mov
lret
pop
lea
sahf
xor
lea
mov
inc
cmc
or
or
jae
push
cld
xor
jbe
sarl
in
out
inc
loope
gs
add
sahf
and
or
sub
mov
or
arpl
inc
push
mov
pop
mov
stos
or
pop
add
in
mov
inc
and
int3
mov
mov
add
push
fstpt
inc
ret
mov
or
pop
jecxz
iret
lahf
mov
xchg
dec
inc
adc
mov
lods
aad
pop
ja
dec
xor
sbb
add
out
cld
fs
std
dec
adc
sbb
or
dec
lds
fwait
out
aad
insl
mov
cmp
push
pop
inc
jb
repz
rcrb
cmp
push
inc
in
lret
and
std
mov
data16
xor
pop
inc
dec
arpl
mov
aam
sub
jno
popf
push
addr16
sbb
loope
adc
insl
std
ds
rolb
sarb
inc
pop
cli
lock
jg
cmp
shlb
push
pop
pop
mov
jo
add
xchg
lahf
xor
cli
ja
cli
inc
push
daa
sub
ffreep
loope
out
icebp
out
pop
popl
dec
cmp
int3
cld
or
ret
and
xchg
insb
pop
mov
mov
les
sar
xchg
outsl
lds
fucomi
loope
shlb
dec
dec
push
push
movsl
xor
inc
pop
popa
in
enter
testl
mov
push
dec
out
adc
mov
fs
sub
dec
aad
adc
adc
in
pop
add
addr16
mov
jp
les
xor
es
xlat
mov
sti
jae
sub
sub
inc
xchg
push
lcall
lods
pop
out
sbbb
shlb
xor
pop
xor
cwtl
or
in
in
in
sbb
or
and
inc
mov
push
loop
ss
or
jb
mov
mov
cmp
push
mov
and
popf
movsl
rorl
sarl
addr16
nop
test
mov
mov
adc
into
mov
sbb
dec
cmp
test
insb
lods
movsl
in
mov
jno
inc
lcall
imul
mov
cwtl
ret
stc
lds
daa
dec
cmpsb
scas
nop
popf
mov
pop
cld
jb
ljmp
stc
adc
test
mov
imul
sbb
inc
inc
xchg
and
cmp
lea
inc
in
lods
pop
adc
sbb
enter
ffreep
popf
mov
lcall
dec
xlat
inc
lret
push
inc
into
xor
cmp
jns
cmp
adc
test
pop
pop
cli
inc
inc
or
aaa
xor
fildl
rorb
jo
pop
daa
pop
add
push
inc
cs
adc
outsb
adc
mov
push
sub
sbb
cmpsl
dec
ja
cmp
stc
add
inc
mov
dec
inc
mov
in
mov
call
aaa
xchg
js
xchg
cmp
call
cli
dec
or
add
aam
or
push
outsl
les
scas
frstor
mov
pop
ds
je
ficoms
and
mov
test
stos
insl
out
or
and
mov
and
inc
loope
adc
orl
cld
jp
inc
sbbb
ja
jnp
inc
ja
ss
mov
inc
and
mov
aam
push
lret
outsb
jge
cld
xchg
repnz
mov
nop
mov
int3
xchg
adc
add
scas
in
inc
cmc
mov
lods
jne
loop
dec
mov
jp
repz
pop
add
stc
push
pop
dec
inc
push
pop
test
mov
inc
inc
mov
adc
jge
and
push
outsl
fmuls
mov
lock
and
call
cmp
movl
xchg
mov
xor
jne
repz
mov
mov
add
push
sbb
decb
fimuls
push
sbb
and
adc
in
pop
add
int
mov
mov
push
xchg
enter
sti
lcall
and
subb
insb
lret
xor
test
push
push
orl
or
popa
mov
jp
jns,pn
inc
mov
mov
or
mov
push
aam
dec
jp
fmulp
xchg
dec
dec
and
xchg
xchg
jle
jmp
cltd
mov
pushf
or
insl
push
push
mov
imul
test
movsb
aaa
enter
out
and
push
xchg
mov
pop
js
sbb
sbb
mov
pop
pcmpeqd
and
loop
dec
xchg
mov
mov
ret
sar
aam
inc
aam
les
xor
fwait
pop
nop
fidivs
xchg
lods
mov
movsl
fists
sbb
out
outsl
inc
mov
call
push
fstpl
inc
mov
outsl
and
divl
leave
enter
in
sub
data16
cs
push
xchg
je
stc
test
jmp
stc
sub
adc
cmp
add
xor
ds
jg
stos
movsb
lods
fwait
inc
insb
adcl
sub
sub
pop
sub
inc
jle
pop
icebp
and
jl
or
lds
arpl
insb
push
jbe
sub
mov
test
iret
pusha
mov
dec
mov
or
dec
push
pusha
int
loop
mov
iret
bound
das
mov
out
stos
mov
testl
xchg
or
cmc
jbe
inc
xchg
sub
mov
mov
stos
sbb
rolb
jbe
pop
addr16
sub
addr16
jb
mov
push
inc
xor
xor
lods
adc
pop
movq
adc
cmp
xor
lahf
loop
mov
addr16
xlat
and
shlb
lods
fildl
cmp
aas
mov
and
xchg
adc
lcall
cmp
xlat
jmp
imul
adc
das
pop
insl
test
pop
mov
sbb
xchg
cmp
push
int
cmc
outsb
inc
aaa
pop
xor
xchg
mov
in
mov
sub
push
and
push
scas
int3
mov
xchg
mov
push
lock
inc
adc
or
jno
cmp
fs
mov
enter
mov
add
pop
and
adc
insb
push
roll
mov
mov
sbb
xor
jmp
cmp
sub
addr16
les
ljmp
lret
out
xor
daa
mov
mov
push
cmp
repz
enter
mov
xlat
mov
hlt
das
nop
lock
mov
add
repz
mul
loopne
lods
imul
xchg
in
lcall
fidivrl
pop
into
test
clc
push
lret
xchg
fdivrs
aam
rolb
push
lahf
call
lahf
cs
scas
lods
test
lcall
lods
dec
adc
rcrb
movsl
shrb
push
pop
aas
sbb
adcl
push
pushf
imul
mov
bound
adc
inc
pop
mov
pop
test
ret
mov
popf
dec
sub
pop
cwtl
add
mov
pusha
xor
adc
cmp
sbb
int
cmpsb
mov
ja
mov
test
and
in
es
or
data16
or
pop
jno
inc
cmp
push
lcall
ds
xchg
mov
js
dec
mov
test
jge
jg
data16
pop
in
addr16
sub
dec
xchg
and
inc
inc
movsb
fsubs
cmp
cld
test
cld
jb
mov
repz
push
push
jae
adc
pop
sahf
sub
mov
pop
dec
sub
push
aad
mov
sub
pop
into
dec
insb
sbb
cltd
fimuls
jle
aaa
sbb
andnps
push
xchg
sub
jge
xchg
dec
mov
stos
fs
or
jg
and
adc
shlb
mov
hlt
rcll
and
dec
or
add
call
sbb
mov
imulb
lcall
fldenv
rorl
aad
mov
xchg
ja
xchg
call
mov
pop
push
xchg
outsl
pop
mov
push
mov
and
mov
das
mov
scas
mov
mov
pop
xchg
sub
scas
data16
cmc
mov
push
add
iret
mov
test
jne
pop
inc
scas
inc
mov
add
leave
add
shll
es
dec
xchg
movsb
lret
fcmovu
js
pop
iret
sti
xchg
fldenv
cltd
cmpsb
loop
pop
mov
inc
xchg
out
out
pop
imul
and
loope
in
rcl
mov
cmp
mov
lret
vmptrst
ret
jp
jnp
xor
pop
inc
ljmp
mov
test
jns
test
ds
dec
or
push
inc
jle
push
xor
mov
fnstcw
out
hlt
sbb
sbb
xchg
out
test
push
movsl
mov
adc
adc
cs
test
enter
xor
test
mov
in
pop
sub
outsb
cmp
lea
fs
rorb
or
insb
or
fistpl
mov
jmp
sbb
rclb
adc
scas
out
loop
xor
lcall
sub
xchg
mov
rcrb
in
xor
nop
dec
enter
mov
in
movsl
sbb
xor
jae
mov
mov
test
inc
test
nop
insb
orl
jecxz
pop
repnz
loop
or
and
xchg
push
ficoms
pusha
aam
shl
popa
test
cmp
inc
sbb
xor
dec
push
dec
out
xchg
mov
jae
or
call
or
loope
inc
enter
std
in
pop
icebp
sbb
or
cmp
adc
out
std
and
insl
out
fldcw
push
pop
dec
mov
imul
inc
loope
mov
fildll
mov
ds
shrl
rorl
jb
test
push
cmp
push
dec
jbe
inc
rorb
jecxz
in
stos
cmp
notb
push
sub
push
dec
cmp
sub
lds
add
stc
pop
jne
cmp
gs
add
lods
dec
cmp
mov
out
inc
movsl
or
push
mov
xchg
push
notb
clc
cltd
xchg
mov
adc
sub
popa
lock
or
dec
lcall
pop
xchg
popf
mov
movsl
dec
std
aam
sahf
leave
dec
xor
push
pop
sub
lea
lret
mov
iret
sub
int
xchg
jecxz
insl
fs
fs
test
out
xlat
mov
int3
jg
aas
ror
jg
adc
lahf
mov
frstor
jno
pop
ss
mov
ss
jecxz
outsb
inc
xor
inc
mov
int
arpl
aas
test
push
adc
push
aas
loopne
sbb
loopne
dec
jle
jp
stos
out
loop
test
shl
daa
daa
inc
movsb
fidivrl
dec
repnz
movsl
mov
or
add
fnstcw
mov
xchg
lret
mov
jno
and
mov
out
imul
int
shlb
pop
cmpl
dec
arpl
sub
in
mov
mov
outsb
fistpll
mov
lret
cmpsb
add
test
iret
mov
jp
imul
test
push
xor
jb
ljmp
sbb
push
mov
mov
test
pushf
mov
push
sahf
cmp
iret
cmp
and
xor
int
subb
popa
int3
xchg
sbb
out
sub
cmp
inc
iret
sbb
shll
movsl
push
sti
inc
int3
mov
fistpl
pop
in
push
push
les
in
test
movsb
outsl
inc
pop
repnz
fwait
xrelease
ficompl
pop
dec
fidivrs
cmp
xchg
inc
inc
pop
xor
nop
ljmp
ljmp
je
int3
in
cli
mov
fnstenv
jnp
dec
in
push
aaa
repnz
jbe
aad
adcb
incl
incl
int3
lods
or
adc
aam
inc
dec
or
or
mov
sbb
fucomp
jecxz
outsl
sub
pop
sbb
xchg
dec
pop
cs
cmp
jbe
es
shll
jbe
cmp
jg
stos
xchg
mov
nop
mov
xor
dec
test
push
imul
loopne
out
pop
xchg
inc
out
mov
push
rolb
xor
int
push
arpl
mov
das
mov
nop
mov
nop
popa
hlt
push
xchg
mov
and
repz
sub
cmp
invd
clc
xor
mov
dec
out
idivb
add
jnp
inc
movsb
nop
insb
hlt
push
arpl
enter
dec
cs
fbstp
repnz
pushf
cld
pop
repz
push
not
dec
dec
pop
xchg
sub
and
shr
cwtl
repnz
push
sub
dec
sbb
add
cwtl
jg
loopne
aad
push
imul
cmp
mov
push
pop
dec
repz
add
mov
add
hlt
mov
adc
mov
dec
ret
inc
push
fwait
sbb
outsl
mov
out
mov
jne
cli
add
jno
lcall
xor
movsl
inc
xor
shlb
stos
push
pop
or
fadds
cli
inc
sub
hlt
xchg
add
sahf
imul
sbb
sbb
push
out
out
xor
mov
xchg
jge
xchg
dec
cmp
pop
rorl
fldenv
clc
xchg
inc
mov
clc
popf
lock
mov
enter
subl
sbb
lret
out
test
es
mov
std
das
push
xchg
notb
adc
aam
test
mov
adc
hlt
call
incb
mov
adc
pop
addl
ja
or
push
rcll
imul
add
jp
sub
cmpsb
sub
xor
dec
outsl
in
lods
jl
xchg
sbb
add
xchg
xor
mov
add
pop
sbb
xor
xor
push
jnp
inc
mov
xor
adc
clc
jno
mov
lods
negb
int
or
and
int3
fildl
std
add
sbb
iret
mov
pop
fisttpl
push
and
mov
xchg
call
sbb
in
mov
fwait
mov
aam
mov
add
out
mov
xchg
movsl
jb
add
push
add
pop
dec
gs
out
jnp
sub
xor
cwtl
pop
sub
inc
mov
leave
push
pop
mov
add
hlt
arpl
sbb
ror
xorl
pop
je
mov
enter
xor
fldenv
dec
add
test
sbb
cltd
mov
push
lods
cmp
aad
sti
xchg
leave
ja
enter
lods
cwtl
mov
inc
xor
mov
sub
jge
cmp
mov
mov
scas
movsl
jg
pop
insb
add
lret
call
scas
out
mov
mov
out
lcall
in
and
ret
or
mov
stos
push
aaa
ljmp
or
in
insl
xor
and
jl
jge
adc
movsl
xchg
rclb
bound
ja
xor
fbld
jl
xor
into
ljmp
int
in
in
add
repz
cs
mov
mov
or
or
cli
xlat
into
mov
add
data16
subl
ret
push
or
rcl
data16
push
in
icebp
ret
clc
test
js
divb
cmp
fs
stos
rcll
mov
testl
jmp
cmpsb
jno
fimuls
and
sbb
outsb
jl
ret
pop
sub
ss
call
hlt
cld
xchg
dec
dec
and
insl
and
lds
aad
lea
add
je
xchg
mov
inc
dec
out
clc
jge
pop
add
sub
jns
xor
insl
pop
and
pop
fsubrs
enter
dec
std
ss
or
add
or
arpl
aas
dec
std
mov
out
jbe
push
in
cmp
cld
mov
aad
xchg
pop
popl
cmpb
sub
cmp
dec
pusha
das
sarb
cmpsl
xchg
xor
cmp
sbb
jecxz
je
fwait
mov
mov
dec
lock
jns
xchg
dec
out
mov
gs
imul
hlt
in
xchg
outsl
xchg
add
and
mov
cs
xor
jno
push
and
mov
in
fisubl
repnz
ds
and
push
dec
out
jmp
xchg
outsl
mov
out
cs
xchg
add
lods
mov
cwtl
lock
mov
fidivrl
fdivl
jbe
sub
mov
mov
push
stc
fcmovne
mov
ljmp
cmpsb
out
and
popa
adc
xchg
ljmp
rcl
cli
mov
sub
divl
pop
or
mov
sbbb
clc
or
pop
iret
test
andl
leave
cld
add
inc
int3
and
jmp
inc
sysexit
jmp
cmp
aaa
dec
and
icebp
pop
pop
sti
pop
inc
add
pop
imul
xor
iret
cltd
xlat
pop
or
inc
push
sti
bound
outsb
pop
outsl
lahf
iret
and
arpl
push
push
cmpsl
popa
lret
insb
notl
shll
push
daa
lret
adc
mov
and
addr16
sbbl
mov
roll
cmp
hlt
test
push
mov
les
insl
test
jmp
lret
icebp
add
mov
cwtl
roll
cmp
jno
hlt
aad
lds
cmc
std
adc
repz
icebp
push
out
ds
mov
in
xchg
pop
dec
pop
dec
adc
daa
push
aad
daa
and
mov
andb
addr16
dec
sbbl
pop
fs
popf
pop
pop
call
jmp
movsb
insb
pop
ds
push
inc
dec
test
mov
shlb
and
jle
xor
test
push
adc
add
enter
xchg
cmp
leave
inc
inc
adcb
cmp
xor
xchg
mov
les
mov
ss
dec
sub
shlb
in
add
dec
js
fadd
and
fdivs
fstps
int
imul
mov
jbe
inc
insb
test
and
and
test
jp
cltd
xlat
test
ja
pop
pop
mov
shlb
movsb
daa
and
jge
mov
push
inc
sbb
ds
les
jne
pusha
xchg
xor
out
imul
push
mov
ret
push
mov
aad
pop
es
or
and
push
stos
sahf
jle
divb
out
mov
les
loope
pop
add
mov
or
loop
xchg
push
testb
gs
xor
jg
adc
adc
fisubrl
and
and
cmp
test
cltd
sarl
repz
xor
xchg
sub
shlb
push
xor
jbe
repz
xchg
push
sbb
in
lahf
fsts
dec
mov
jmp
mov
stos
movsl
add
bound
and
jmp
mov
and
and
mov
test
addr16
mov
loopne
insl
inc
lret
mov
mov
xor
push
add
add
pusha
adcl
fidivl
in
xor
std
call
mov
jg
testb
fsubrs
jmp
bound
cmp
testb
sahf
xchg
mov
xor
das
adc
cld
scas
xchg
sbb
jno
pop
mov
pushl
adc
sti
fs
sbb
enter
sub
subb
push
in
xlat
addr16
movsl
nop
leave
in
fidivl
dec
aas
sahf
jno
push
data16
insb
xor
xchg
jg
or
push
gs
push
into
repnz
or
sbb
lock
fildll
enter
cmp
mov
ja
loope
xchg
jb
aad
cwtl
cltd
push
dec
mov
pop
xlat
repz
in
bndstx
mov
out
and
ljmp
sub
dec
stos
cmpsb
cmpsl
dec
enter
adc
mov
jns
sub
popf
cmp
or
pop
or
flds
xchg
pop
jmp
arpl
daa
iret
test
dec
imul
lcall
add
in
scas
add
sarb
mov
ret
inc
sbb
rclb
sub
xor
and
inc
mov
enter
imul
out
mov
bound
xchg
jb
aam
sub
sub
sbb
aad
add
mov
sbb
push
or
pop
or
pushf
data16
dec
repz
jae
loopne
or
repz
adcl
add
aad
xor
inc
mov
pusha
in
lret
fnstsw
push
scas
shll
das
cmc
fmul
mov
sbb
out
test
cltd
fwait
aad
lods
mov
adc
test
pop
xchg
sbb
pop
jo
push
xchg
sbb
js
std
push
adc
stos
les
stos
lock
mov
aas
lds
mov
cmc
dec
sbbl
notb
xchg
std
or
or
clc
cmpsl
jb
push
adc
in
sbb
cmpsl
mov
testl
sbb
mov
jge
sbb
sbb
cld
loop
jmp
lret
mov
xchg
inc
cwtl
sub
xor
jne
test
outsb
adc
sti
and
bndstx
and
bound
test
mov
sti
adc
repz
call
in
jmp
repz
dec
jge
mov
fnsave
sub
pop
icebp
sbb
push
and
repz
inc
fistl
dec
call
mov
fisubrs
mov
shll
flds
jecxz
fstpt
and
dec
popl
mov
in
push
mov
xchg
addl
movsb
pop
pop
call
sbb
mov
push
in
in
and
int3
pushf
xor
imul
inc
icebp
popf
pop
mov
int3
out
mov
gs
adc
pop
xor
xchg
pop
aam
pop
mov
scas
mov
pop
sub
jnp
ss
xor
xchg
cli
lds
lret
stos
iret
pop
aad
es
or
cli
decl
jnp
outsb
mov
mov
xchg
outsl
nop
repnz
fbstp
cs
mov
xchg
and
mov
mov
xchg
cmp
scas
sbb
lret
sub
or
aad
in
loope
or
sub
sbb
adcb
xor
mov
mov
xor
call
iret
push
xor
daa
sbb
xchg
xor
imul
jbe
mov
jge
mov
imulb
pop
push
jp
xchg
repz
sbb
mov
xchg
sbb
in
call
outsl
xorb
outsl
fdivr
cwtl
sub
sub
das
jecxz
jns
xchg
pop
into
mov
sbb
sub
push
ret
addb
mov
dec
inc
lods
jp
stos
adc
lea
or
sub
mov
push
adc
icebp
pop
push
inc
xor
fwait
mov
sub
cltd
aas
sub
xchg
dec
test
cmp
fstpt
lock
dec
lret
mov
mov
aaa
xchg
test
ds
lahf
bound
addps
clc
lock
pushf
inc
mov
mov
sbb
push
outsl
out
sbb
xchg
fildl
scas
ja
jne
mov
xchg
rorb
xchg
add
jo
orl
jmp
pop
cltd
cmc
fldl
xor
mov
push
arpl
cmp
sbb
inc
xorl
and
std
shlb
pusha
sbb
ja
xchg
lds
movl
out
dec
add
xchg
sbb
xchg
mov
cli
pop
jbe
add
imul
icebp
daa
jl
sbbl
jl
mov
lods
pop
cmp
pop
sbb
insl
jmp
and
xor
inc
jecxz
add
jmp
cli
mov
out
enter
jecxz
loope
inc
out
mov
ficomps
fmull
sbb
xor
and
pushf
js
cmp
cmp
sbb
cmpsb
and
cwtl
shll
shrb
in
jge
test
in
or
mov
stc
mov
xor
je
add
arpl
into
shlb
add
adc
and
xchg
icebp
and
ret
push
add
outsl
test
lcall
test
jns
ss
jnp
enter
sbb
xchg
fcoms
lods
test
xlat
popa
inc
bound
inc
push
ds
out
in
in
in
sbb
lods
mov
inc
jmp
test
and
or
mov
imul
mov
xchg
and
and
xchg
pop
cld
sub
les
fcomps
lahf
inc
les
pop
je
dec
and
dec
jb
ds
push
push
or
jnp
jns
popf
push
dec
adc
push
cli
dec
fcmovnbe
mov
cli
pop
xor
jecxz
jo
push
dec
hlt
adc
mov
jo
dec
jmp
add
mov
xchg
outsb
and
popf
jnp
dec
inc
pop
filds
fs
cmpsb
icebp
inc
lods
fyl2x
mov
mov
loop
xor
mov
mov
pop
cmpsl
arpl
fs
fildll
cmp
cwtl
imul
iret
cmpb
cltd
scas
lea
pop
nop
pop
test
es
mov
mov
mov
cmp
fidivs
or
xor
dec
inc
aas
push
rolb
adc
addr16
les
inc
or
jbe
dec
cmc
fists
iret
nop
daa
cmp
inc
fdivp
cs
fistpll
pop
in
stos
push
daa
movsb
sbb
mov
add
call
mov
mov
sar
jle
inc
sub
xor
ror
cmp
fcmovu
test
rolb
mov
add
pop
pop
dec
xchg
inc
push
lcall
cwtl
or
sbb
mov
inc
mov
pop
dec
into
mov
in
in
or
aad
mov
inc
mov
jmp
setg
xchg
gs
mov
movsl
lea
add
dec
icebp
or
divb
sarb
movsb
pop
and
aam
rcll
loop
and
push
leave
cs
xchg
mov
pop
jb
mov
mov
sarl
cpuid
in
loope
js
decb
lcall
xchg
mov
insl
sub
and
test
inc
mov
mov
adcb
mov
inc
mov
lahf
xor
outsb
adc
push
arpl
shlb
mov
fcomi
int3
test
movsb
and
lret
lds
test
xchg
pop
adc
fbstp
xor
cmpsb
dec
ficoms
jnp
repz
repz
sub
in
rorb
dec
std
cs
mov
or
xchg
ret
lret
sbb
andl
shll
add
mov
jb
sub
std
sub
jb
inc
test
out
outsb
xchg
dec
adc
les
fldt
cmp
fldenv
outsl
into
sbb
pop
jbe
insb
cmc
dec
sub
xor
mov
icebp
xor
mov
or
xchg
xlat
xchg
sti
push
int3
mov
push
pop
push
mov
test
bound
repnz
mov
mov
lret
imul
jnp
sub
adc
inc
push
in
ret
push
inc
push
ret
sbb
in
mov
shll
imulb
cs
jle
rcr
pop
jge
mov
dec
push
addr16
outsl
loope
inc
sbb
pop
or
pop
adc
les
pop
mov
xchg
clc
mov
insl
fists
xor
add
push
pop
cmp
add
sub
hlt
in
sti
mov
in
hlt
mov
inc
jo
lret
lahf
cmp
ja
dec
jmp
shl
imul
std
mov
pop
xlat
ret
leave
ja
rorb
and
shlb
aaa
leave
sbb
das
stos
das
in
subb
sub
out
jae
push
xchg
push
or
cld
aaa
inc
cmp
fldenv
fwait
inc
xor
fwait
lods
std
loope
mov
jmp
cs
sti
leave
inc
enter
inc
addr16
dec
divl
and
inc
xor
mov
in
mov
adc
jnp
inc
lock
popl
testl
sbb
fcmovnb
sub
je
and
jp
push
pop
fistpll
cmp
lret
imul
jle
dec
push
pusha
push
inc
xlat
stos
stos
sub
cmc
leave
or
call
adc
mov
int3
push
cli
xor
movsl
mov
sti
ja
shll
xorl
je
sub
inc
pop
in
aas
popa
pop
bound
mov
sarl
paddusb
ss
xchg
dec
imul
dec
mov
mov
cmpsl
jo
push
jnp
sbbl
outsb
fimull
pop
adc
adc
imul
test
xor
pop
add
cmp
repnz
or
lret
cmp
jmp
add
mov
hlt
jp
xor
lahf
into
ret
leave
in
loopne
sbb
icebp
and
mov
xor
das
imul
repnz
aaa
scas
xor
cmp
xchg
sub
sarl
inc
xchg
adc
inc
ret
xchg
sub
insb
dec
pop
in
mov
cmpb
and
cmc
mov
jo
rcll
out
cmp
xchg
rorl
in
test
push
not
mov
jp
pop
sarl
pop
inc
cmp
sbb
adc
jb
fmuls
mov
fsubrp
fidivl
ljmp
xor
rolb
pop
cli
jecxz
mov
fbld
jg
dec
mov
sub
cmpsb
iret
ror
mov
out
fcoms
adcb
mov
neg
mov
xor
insl
pop
out
dec
stos
shlb
pushf
mov
int
jp
jo
dec
and
add
movsl
mov
sbb
xchg
ret
into
jge
sbb
aam
inc
scas
mov
cmp
push
jne
cs
in
push
stos
outsl
and
js
or
cmp
jo
aad
sti
insl
mov
cmc
rorb
push
push
popa
mov
movsl
call
fldenv
mov
stos
scas
push
aad
xchg
movsb
lods
mov
je
mov
incb
mov
cmp
dec
or
sahf
ljmp
jb
xor
es
push
insb
jne
jo
and
lret
push
mov
in
in
push
aas
out
cmp
pop
cmp
popf
cmpsb
lahf
push
bswap
jno
adc
sahf
jae
cmp
xchg
xchg
push
mov
paddd
mov
sub
xchg
arpl
or
ret
repnz
sti
mov
pop
mov
xchg
lds
and
jnp
or
les
xchg
inc
scas
fwait
lods
stc
in
mov
mov
fsubs
add
out
mov
jno
cmpsb
mov
lods
sub
cltd
sub
ret
jl
or
ds
mov
xchg
cli
cld
cmp
xchg
cli
test
leave
push
mov
push
xor
ja
add
ret
outsl
orl
test
fcmovbe
dec
add
mov
fwait
jmp
mov
orb
push
cli
popa
pushf
test
das
int
dec
sbb
rclb
mov
mov
cwtl
cmp
add
sub
rolb
push
repz
ret
jecxz
lock
int
test
icebp
notb
dec
aam
jl
mov
in
hlt
dec
stos
scas
ret
int3
lds
lcall
lea
out
mov
insl
pop
xchg
icebp
inc
dec
or
mov
sub
push
cmp
cmp
push
pop
sahf
push
jmp
jb
leave
mov
inc
cmp
or
pop
add
dec
dec
sub
mov
nop
pushf
add
pushf
push
cmc
int3
sub
cmp
imul
out
pop
push
inc
stos
movsb
jmp
lock
orl
adcb
push
dec
mov
outsl
dec
in
xchg
xor
push
clc
and
xor
insb
xchg
cmc
inc
mov
lods
out
or
bound
stos
in
cmpl
cmp
mov
pop
loope
in
repnz
movsl
into
in
mov
pop
scas
mov
pop
pop
jp
or
dec
xor
cs
pop
in
sub
loopne
or
jl
push
fidivl
movsl
push
xchg
js
inc
cmp
and
xor
aaa
imul
fidivrs
imull
push
cbtw
adc
int3
movsl
test
and
cli
out
add
xchg
xchg
dec
mov
fldenv
push
adc
or
mov
loope
decl
or
insl
test
push
cli
add
les
sti
das
movsl
movsb
mov
jne
dec
das
popa
xor
arpl
mov
pop
xor
mov
jae
imul
dec
imull
inc
cmpsl
loope
dec
scas
icebp
jns
xchg
in
sub
mov
pop
outsb
mov
rcrb
mov
jp
mov
xchg
pop
shlb
xorl
mov
cmpsl
imul
add
ficomps
popa
es
jl
pushf
cwtl
data16
gs
aaa
loop
sbb
adc
lea
out
aam
dec
cmc
sbbb
mov
adc
inc
mov
mov
pop
outsb
push
xor
sti
cmpsb
xor
cld
mov
cmp
and
fiaddl
out
fmulp
inc
ja
mov
orb
lret
xor
pop
cmp
jmp
movsl
int
negl
stos
bnd
push
and
jmp
or
jmp
adcb
add
mov
xor
cmp
xchg
mov
mov
pop
daa
xchg
dec
cmc
push
imul
push
das
mov
add
paddb
adc
or
inc
jns
testl
add
in
aaa
mov
adc
stos
sub
fs
in
inc
aaa
mov
nop
fdiv
xchg
sbbb
mov
outsl
lret
xor
stc
xchg
shl
mov
fcompl
dec
mov
mov
xchg
into
pop
cs
xor
cwtl
pop
mov
inc
ljmp
xorl
mov
push
jmp
arpl
test
jb
fldenv
mov
lock
mov
pop
or
ret
adc
or
inc
dec
lahf
out
mov
mov
ret
mov
fldenv
inc
imul
and
jge
jge
sbb
jbe
ljmp
shll
js
dec
sbbb
lods
mov
push
xor
mov
clc
lahf
mov
rolb
mov
shl
call
ret
jo
lods
shll
out
add
stc
sbb
xlat
es
pop
mov
pop
or
pop
add
hlt
ja
cmpsb
data16
dec
inc
repz
orb
pusha
imul
fidivrs
push
pop
cmc
outsl
push
cld
push
enter
nop
inc
clc
push
adc
insl
dec
xor
inc
pop
adc
cmp
out
xchg
or
xorb
xor
mov
fstl
push
rcll
push
mov
mov
aaa
insl
loopne
and
cld
push
sub
mov
and
mov
mov
add
test
stos
mov
push
or
je
cwtl
sbb
or
cmp
mov
ret
jne
jecxz
xor
adc
mov
stos
sbb
jge
enter
cs
iret
adc
push
dec
popf
std
cwtl
ret
xchg
lcall
loop
cmp
xchg
dec
jg
mov
sub
into
arpl
rcl
test
fistps
inc
test
jle
sahf
adc
dec
out
dec
lds
leave
jbe
sub
lods
xchg
jmp
jb
fiaddl
and
mov
outsl
rorb
cmp
add
pop
pop
insl
loope
or
pop
mov
mov
adc
pop
pop
bound
or
clc
mov
mov
out
lahf
mov
je
es
inc
and
loopne
dec
inc
fdivs
dec
loop
jmp
cmpsb
inc
mov
testb
incl
sbb
insl
adc
bound
hlt
inc
jb
cmp
push
xor
mov
jae
fwait
mov
lods
in
aaa
sbb
mov
clc
and
pop
mov
or
clc
out
mov
sbb
cmp
mov
pop
xchg
aaa
or
out
sarb
nop
cmp
and
ret
pop
jge
femms
out
fmuls
cmp
pop
dec
cmpsb
xchg
sbb
test
test
or
xlat
sahf
and
sub
inc
outsb
mov
mov
movsb
out
xchg
mov
dec
mov
pop
sub
sub
mov
rcr
inc
jae
fcomi
imul
test
lret
inc
shr
push
cli
insl
mov
cmpsb
repz
call
decl
push
lahf
jecxz
xchg
jb
mov
mul
cltd
xor
mov
push
repnz
inc
enter
pop
push
jnp
xchg
out
dec
cmp
jmp
dec
inc
iret
outsb
add
mov
mov
std
movsl
mov
xor
adc
out
arpl
pop
adc
inc
sub
and
adc
adc
ret
mov
xchg
cli
lcall
pusha
imul
jnp
cmp
insl
test
out
xchg
lret
mov
push
dec
xchg
push
addr16
push
jns
and
jp
push
push
dec
imul
aam
cmp
mov
or
or
dec
push
scas
pop
ret
push
adc
enter
insb
sub
mov
xchg
mulps
inc
ret
nop
jle
sub
cmpsl
mov
int3
jo
mov
loopne
sbb
jne
push
xor
dec
jo
jo
out
lds
jge
sbb
dec
into
mov
push
mov
cmpsb
aas
out
lcall
imul
mov
pop
out
and
pop
stc
repnz
movsl
mov
or
int3
aam
and
sti
lock
fwait
out
inc
dec
cmpsb
sub
pop
xchg
int3
outsb
aaa
adc
int3
pop
inc
lcall
ret
imul
cmp
stc
push
fstpl
aam
stos
add
push
inc
nop
popf
aam
fiaddl
cs
hlt
pop
iret
add
js
je
xor
push
mov
push
test
jo
ljmp
enter
jbe
jp
movsb
mov
push
fidivs
jle
pop
add
and
lahf
mov
inc
push
outsl
or
pop
sbb
pop
or
mov
fcomps
daa
mov
out
insl
lea
push
cltd
shrl
mov
sahf
lea
cld
pop
jge
repnz
sahf
push
pop
push
and
push
sub
mov
mov
movsl
add
xchg
xchg
int
and
pop
fstl
fwait
addr16
or
sub
paddsb
mov
in
outsb
pop
sbb
inc
mov
mov
mul
lock
scas
push
fdivs
xchg
push
test
mov
out
sbb
nop
pop
push
pop
xor
aad
pop
jae
and
sbb
jl
sahf
lods
mov
lock
fstpt
cli
aas
cmp
ds
xchg
xchg
pushf
pop
push
cltd
das
dec
push
scas
negb
pop
mov
das
pop
aam
aaa
add
cmp
adc
jo
adc
fidivl
aad
pop
jle
addr16
mov
adc
or
divl
mov
cmp
pop
push
xchg
cmp
add
mov
dec
adc
pop
push
jns
xor
adc
lahf
jbe
dec
incb
or
loopne
jle
pop
cmp
clc
inc
xchg
xor
add
sti
stc
mov
push
hlt
ret
mov
mov
pop
lock
pusha
test
out
push
mov
mov
mov
or
push
mov
dec
cmp
mov
pusha
lods
push
in
sub
jp
cmc
pop
sub
aas
push
pop
xchg
fcom
push
or
pop
sub
arpl
stc
jle
pop
rcrb
sbb
fistpll
mov
jae
arpl
xor
adc
mov
push
push
cmpsl
and
icebp
lea
cmp
xchg
rorb
dec
test
mov
push
inc
or
outsb
adc
mov
inc
mov
test
fidivs
inc
rcrl
je
stos
cs
mov
aas
inc
in
adc
sbb
add
repz
pop
es
cli
inc
cmpsb
jecxz
orl
add
mov
fcomps
pop
dec
adc
pushf
bound
adc
jo
jg
inc
xor
inc
movsl
dec
push
aas
pop
rclb
aas
test
mov
and
hlt
fldt
sbb
sti
push
shll
int
sbb
ret
pushf
rcrl
dec
cmc
jge
pop
daa
lcall
sbb
out
xchg
or
push
cmp
sbb
test
pop
sbb
and
je
xchg
pop
loop
in
stos
enter
daa
fsubs
push
mov
and
pop
cmp
repz
test
push
rdtsc
shlb
inc
mov
enter
add
fcmovbe
stos
jp
cltd
mov
fwait
shlb
xchg
xchg
push
mov
daa
out
dec
arpl
rorl
je
mov
in
je
mov
jno
ljmp
jmp
movsl
daa
scas
mov
jbe
cmp
hlt
jp
shl
add
adc
fstps
popa
add
ljmp
pushl
pop
push
push
negl
jno
cmp
rolb
ss
imull
repnz
dec
cmp
nop
addr16
nop
arpl
rorl
cwtl
xor
xchg
inc
int
leave
adc
lock
fstps
call
out
pop
fidivl
xchg
push
mov
iret
mov
sbb
push
aas
stos
add
inc
inc
fdivrs
or
jno
add
int3
sub
das
repz
cmc
push
cmpsl
dec
sbb
icebp
stos
mov
jno
fs
mov
into
xchg
addl
mov
jae
out
and
cmp
ret
aaa
mov
lea
ss
sahf
into
or
add
push
imul
cwtl
pop
and
lea
icebp
inc
js
inc
adc
enter
dec
and
xchg
imul
cltd
add
pop
jle
lds
mov
and
movsl
or
dec
cld
hlt
or
mov
pop
push
pop
call
iret
loope
fsubr
out
sbb
adc
xorb
mov
out
cmpsl
and
mov
mov
stos
into
jns
jns
cmp
cltd
mov
jbe
cmp
or
mov
jno,pn
lcall
xchg
sahf
or
out
cli
fnstsw
xchg
jecxz
inc
or
jmp
mov
in
loopne
sub
mov
clc
int3
lods
lcall
ss
in
lahf
jl
jge
das
mov
fdivrs
and
insl
stos
and
test
jae
inc
adcl
ret
pop
sbbl
mov
enter
int3
xchg
aam
or
sub
loop
lcall
pop
add
pop
push
mov
dec
outsb
mov
xchg
loope
out
pop
out
call
imul
out
xchg
dec
aam
jge
in
push
into
inc
cli
and
pop
jg
inc
cmp
push
xchg
cmpsb
fs
push
insl
std
dec
jmp
lahf
xor
cli
test
int3
fstpl
jno
mov
xchg
stc
dec
notl
fmul
pop
je
ret
test
xor
femms
or
jg
cmp
cmc
mov
cmp
adc
fnstenv
or
sbb
in
cmp
shll
dec
aad
xchg
jb
inc
ja
adc
cmp
adc
cltd
scas
push
inc
inc
cmp
add
pop
pop
adc
dec
jnp
lahf
jl
mov
divb
dec
or
adc
cmp
mov
jp
or
sbb
push
scas
mov
js
call
jbe
stos
adc
jl
and
insl
xchg
mov
out
cmp
and
mov
adc
mov
fldcw
mov
outsb
jae
jmp
jae
mov
mov
or
xchg
test
addr16
jb
aaa
scas
call
mov
mov
inc
cmp
test
addl
mov
loope
cmp
in
cmp
repnz
test
test
mov
sahf
cmc
in
mov
scas
xor
ss
xor
cmp
fdivrs
xchg
jmp
and
push
or
fisttpl
cmp
inc
test
jae
shlb
fxch
or
xor
insl
pop
jbe
sbb
sub
mov
sub
xchg
cmp
xlat
imul
push
mov
mov
dec
jmp
push
inc
pushf
test
add
dec
jecxz
sbbl
fcompl
js
call
int
ja
lock
mov
decb
sub
xchg
xchg
insb
pop
mov
pop
pushf
jbe
mov
je
data16
ret
cli
pusha
mov
pop
pop
xchg
add
cmp
into
shrl
aaa
dec
sub
adcl
inc
and
rol
int
mov
adc
mov
mov
daa
sbb
icebp
scas
das
stos
sub
mov
pop
mov
cltd
inc
cld
sbb
inc
imul
push
iret
xchg
dec
jg
cmc
pop
mov
jmp
adc
adc
lret
jb
jnp
stc
sub
jmp
hlt
push
lea
xor
hlt
in
nop
cld
lods
stos
ljmp
cs
inc
or
push
stos
xchg
fcmovnbe
sbb
stos
jle
sub
adc
xor
mov
repz
or
das
cmp
cld
jo
mov
bound
fisttpll
xor
loope
pop
iret
adc
addl
mov
mov
jb
loopne
sub
sti
inc
xor
add
jle
mov
mov
js
jae
sti
push
sti
or
hlt
xor
ret
xchg
ljmp
sub
xor
push
mov
dec
arpl
mov
sbb
loop
orb
xchg
push
repnz
shll
clc
insl
adc
out
je
outsb
bswap
clc
ss
arpl
test
jl
imul
sbbb
xor
lds
ffree
aas
lret
sub
xchg
cwtl
xchg
out
mov
std
outsb
aam
sub
jecxz
incl
xchg
push
into
jno
call
ja
scas
mov
mov
lock
mov
mov
lods
xor
fdivl
jle
pop
sub
ja
or
lcall
jo
sbb
popl
aad
xor
out
je
xchg
call
push
mov
mov
cmp
sbb
and
xrelease
dec
and
lock
ret
mov
rcrl
mov
jp
xchg
jo
clc
lock
leave
jle
inc
adc
push
repz
loop
sbb
mov
add
int
lahf
mov
cmovge
jno
cmc
and
cmpsl
xchg
mov
cmp
add
cmc
cmp
or
fadd
cmp
hlt
adc
push
sarl
repnz
inc
push
je
push
nop
ja
fwait
add
mov
lahf
out
daa
inc
sbb
jge
or
dec
mov
adc
fsubl
push
inc
fsubrs
mov
dec
adc
cli
ljmp
sahf
ret
decb
push
adc
popa
adc
mov
inc
push
ljmp
xchg
xchg
aam
pop
sahf
mov
pop
push
cmc
sbb
push
les
loope
jmp
lods
xor
lds
add
mov
rorl
mov
mov
pop
mov
sub
js
jecxz
adc
fistpll
jbe
sub
xor
sub
pop
or
jle
xchg
outsl
mov
jle
int
xor
imul
xchg
mov
cs
mov
add
scas
lcall
loopne
ss
jbe
inc
push
dec
xchg
sub
jge
add
mov
cmc
mov
test
mov
jge
inc
mov
sbb
pusha
les
es
xor
and
or
testl
sub
notb
lods
lods
pop
jo
dec
jnp
pusha
fsubs
or
lds
xor
popf
xor
xor
jmp
inc
cmpps
mov
popf
push
int3
pop
sbb
push
les
push
inc
jo
into
dec
add
sbb
in
push
js
push
xor
fwait
or
mov
cmc
int3
call
cs
ss
or
sbb
test
imul
mov
xchg
lahf
ucomiss
sti
mov
orl
aam
pushf
push
inc
xor
mov
ret
push
jecxz
ja
jnp
adc
stos
mov
es
rcl
lds
adc
and
jmp
leave
mov
scas
dec
out
je
lcall
test
or
dec
add
outsb
push
outsl
sbb
sbb
or
out
sarl
push
push
jns
xor
bound
cmpsb
mov
sub
fsubrp
gs
andl
jge
inc
push
jmp
popa
and
xor
lret
dec
mov
stos
shll
popf
and
dec
add
outsl
stos
mov
xchg
cli
sbb
lcall
and
inc
insl
cmp
mov
testb
outsl
or
inc
mov
xchg
mov
inc
jbe
cld
sbb
cwtl
xor
fdivl
aam
pop
push
test
cmp
sub
or
je
cld
scas
inc
xchg
ret
mov
mov
push
mov
out
cmpsl
hlt
dec
xchg
mov
das
imul
sbb
and
push
adcb
xor
xor
addb
das
sbb
xchg
int3
push
fwait
inc
mov
dec
test
push
shl
mov
insl
ss
mov
rcrb
in
icebp
jmp
mov
xchg
cmpsl
js
mov
jnp
pusha
ret
das
push
into
call
in
xor
mov
dec
fcoms
xchg
fwait
sbbb
iret
fisttpll
sahf
rcll
pusha
fistpll
pusha
int
mov
pop
int
sub
outsb
jns
jno
in
cld
subb
adc
popf
outsb
lcall
loop
dec
jg
lds
ror
fisubs
push
mov
leave
cltd
mov
add
dec
mov
sarb
xchg
pop
in
mov
sbb
add
cmp
pop
repz
out
fstl
xor
adc
mov
sti
inc
sbb
xlat
cs
call
pusha
mov
lcall
stos
movsl
dec
or
push
in
mov
push
lods
sbb
mov
and
pop
enter
adc
mov
lret
mov
testl
icebp
data16
lret
add
jmp
dec
pop
dec
out
xchg
aam
pop
fbld
test
push
aad
sub
mov
rcrb
imul
jnp
fsubr
clc
push
add
lods
push
or
je
inc
mov
aad
sub
sbb
push
inc
loope
jecxz
lea
pop
loopne
adc
and
movsb
out
xchg
iret
xlat
loop
cmp
out
dec
bound
lds
fdivs
not
ljmp
push
xor
pushf
cld
pusha
into
sub
push
divb
jae
ljmp
nop
xchg
in
cmp
dec
aad
jle
movlps
imul
ljmp
dec
mov
inc
sbb
mov
aad
sbb
fsts
shlb
mov
xchg
mov
jg
stos
repz
sahf
add
mov
mov
mov
xlat
sbb
cmc
adc
adc
xor
jb
stc
stos
add
mov
or
mov
pop
hlt
add
jecxz
shll
sub
repnz
mov
mov
cmp
cmp
das
lret
ss
sbb
cmp
dec
fs
push
fsts
cli
fwait
xchg
pushf
inc
mov
dec
dec
cmpsb
adc
sub
ds
nop
push
std
xchg
call
stc
or
jl
cmp
movsl
mov
mov
inc
push
pop
in
ds
mov
insl
sub
cmp
iret
stc
mov
mov
jp
lcall
pop
mov
and
or
or
and
cmp
js
test
sbb
movsb
lcall
in
sbb
xchg
cmp
jnp
xchg
sub
mov
lods
out
mov
add
inc
adc
stos
inc
jecxz
sahf
js
imul
cld
aaa
sbb
jo
stc
outsb
repnz
clc
mov
push
aad
sbb
push
adc
mov
jl
jmp
push
mov
mov
or
adc
jnp
adc
lods
push
mull
cmp
xor
cmp
cwtl
in
inc
in
push
test
enter
into
or
dec
mov
sti
push
lods
pop
mov
xchg
or
and
gs
aaa
jae
xchg
es
mov
aad
xchg
xor
or
add
mov
push
movsb
cmpl
orb
dec
pop
sbb
cmpsl
loop
jbe
add
xlat
arpl
orb
movl
pop
push
pop
insl
out
cwtl
sahf
mov
lock
cltd
in
add
push
sbb
mov
or
fnstenv
pop
fidivl
push
mov
sbb
mov
aad
aad
xor
jbe
push
cmc
push
cmp
add
addr16
hlt
cmp
push
pop
imull
loope
mov
sub
cwtl
test
aas
out
push
scas
mov
lea
adc
fidivs
into
rcrl
mov
fmull
push
nop
iret
frstor
inc
inc
cmc
pop
ss
loop
xor
lcall
jne
pop
xor
push
fimull
sbb
xor
lahf
xchg
dec
clc
sub
or
sub
sbb
daa
popa
hlt
mov
scas
xchg
cmp
dec
ljmp
dec
cmc
adc
clc
mov
mov
jl
out
xor
jecxz
fwait
imul
loop
dec
sbb
mov
xchg
neg
pop
je
inc
subl
add
dec
jg
dec
inc
andl
push
fidivl
inc
mov
mov
pop
addb
lahf
inc
stos
insb
aam
sbb
inc
test
lock
or
mov
jmp
mov
aad
inc
jle
les
xchg
out
inc
aad
call
pop
lret
lods
out
pop
pop
xlat
pop
into
add
insb
add
xchg
imul
xchg
repnz
test
ja
sbb
mov
or
mov
sbb
lds
cmpsl
dec
jp
int
sbb
push
jge
jb
fsubs
pop
bound
adc
pop
fsubrl
push
cmp
aaa
cmp
rcr
sahf
je
les
in
push
andb
ret
cmp
jb
adc
shl
dec
xchg
into
test
cld
mov
pop
jns
push
mov
adc
movsl
ret
dec
in
dec
je
push
sbb
int3
div
stos
mov
pop
mov
fwait
jne
in
mov
movsl
cmpsb
mov
inc
movsb
inc
sbb
scas
dec
stos
mov
mov
fisttpl
dec
iret
in
test
jle
out
or
xlat
cmp
push
dec
and
mov
out
mov
xor
imul
push
pop
jge
into
mov
or
icebp
cwtl
sub
sub
das
pop
add
xchg
out
cs
jns
test
and
nop
loopne
inc
ret
mov
mov
mov
mov
insb
dec
dec
aad
adc
xchg
mov
lret
jle
lret
xor
dec
inc
lods
rcl
testb
xchg
mov
sub
repz
or
pop
test
pop
addr16
jl
dec
xchg
mov
movsl
jne
bound
adc
std
test
pop
mov
lods
and
loop
in
fsubrp
xchg
arpl
sub
mov
cwtl
je
leave
fnstenv
sub
push
mov
aaa
jb
cmp
test
mov
sub
adc
imul
lcall
popa
push
push
in
sahf
xchg
sub
aas
ljmp
rorl
mov
ficompl
jp
sbb
mov
lock
gs
int3
lods
mov
lret
or
cld
sbb
test
lds
mov
test
and
loope
jl
addb
clc
aam
push
mov
cmp
or
iret
cwtl
mov
jae
dec
mov
iret
inc
stos
mov
xchg
pop
aas
outsb
fstl
and
test
cmp
inc
addb
pop
nop
pop
jg
and
das
add
leave
fwait
add
stos
adc
sbb
test
mov
insl
scas
imul
test
jge
mov
fbstp
cwtl
rcll
or
and
cmp
subl
pop
jl
je
push
data16
arpl
xchg
mov
stc
imul
jnp
push
push
xchg
dec
add
fidivrl
aas
pop
shl
push
sub
xchg
add
lock
jno
inc
mov
fiaddl
sbb
cmp
subb
fs
ret
xor
hlt
mov
and
aad
dec
lcall
test
push
jb
lods
arpl
dec
mov
xlat
pop
sbb
jg
fsubrl
sahf
dec
inc
sbb
push
cmpsl
movsl
jo
call
dec
push
inc
pop
mov
loope
push
negl
cmp
add
sub
cltd
nop
lea
jo
jl
fs
push
shll
and
ret
into
inc
mov
xor
and
inc
sbb
std
mov
push
and
add
push
fildl
xor
and
cmp
xchg
in
bound
pop
sub
sub
in
data16
adc
stos
inc
jle
repnz
jp
ret
test
lea
js
ret
and
xchg
cmove
adc
or
clc
call
pop
inc
into
mov
mov
sbb
xchg
dec
mov
movsl
shlb
addb
cld
lret
and
out
or
lcall
jge
insl
mov
sub
addr16
inc
lcall
sub
sti
xchg
stos
push
scas
pop
add
sub
aam
and
sbb
inc
cld
xor
andl
mov
push
mov
and
cld
stos
rol
sub
and
js
push
aad
or
aaa
into
jb
xor
mov
xchg
adcb
int
je
xchg
es
push
xor
fistps
call
add
aad
stc
fisubrl
dec
in
sub
adc
adc
adc
and
adc
push
mov
repnz
mov
outsl
or
or
movsl
ja
loopne
popl
nop
imul
xchg
mov
lret
inc
ds
mov
daa
xchg
xor
adc
mov
push
lock
scas
add
pop
movsb
loop
mov
imulb
mov
sub
aad
mov
inc
dec
push
pop
jno
mov
xor
dec
in
int3
outsl
xor
icebp
imul
mov
jmp
cmp
loopne
insl
iret
inc
jb
sbb
add
ljmp
inc
stos
ja
in
icebp
mov
loopne
pop
adc
call
lock
je
pop
out
in
aad
ret
push
out
jge
out
push
call
fnsave
pop
movsb
ret
out
in
sub
std
sub
scas
add
lods
aam
leave
jb
cwtl
outsl
xor
jno
test
das
inc
push
push
adc
mov
xor
pop
int3
adc
scas
xchg
sub
movsl
hlt
fbld
xchg
cmp
movsl
stc
jo
sub
push
insl
std
adc
cmp
mov
pop
jb
push
add
mov
sbb
fistps
lcall
je
je
fs
ss
std
inc
ja
pop
sbb
jecxz
inc
or
xchg
int
pop
fucomip
arpl
arpl
pop
inc
call
ja
mov
mov
lahf
xor
or
pop
imul
mov
jo
inc
adc
ret
loope
mov
lcall
dec
cmp
pop
ss
or
das
sub
scas
add
dec
int
mov
sub
jp
hlt
pop
cmp
in
je
imul
std
pop
mov
sbb
xor
cmp
mov
dec
sub
imul
cmp
das
out
or
repnz
lret
stos
push
jecxz
mov
sbb
sbbb
popf
imul
mov
mov
nop
sti
mov
icebp
pop
daa
clc
sbb
sarl
sub
scas
hlt
addr16
enter
das
mov
fwait
inc
push
inc
shll
insb
jmp
or
xchg
aad
xchg
fbld
push
lds
mov
jne
pop
sbb
mov
test
mov
repnz
orb
dec
out
iret
insl
decl
imul
jnp
andb
out
mov
mov
std
push
pop
insb
mov
and
into
inc
xor
jl
xchg
popf
test
loop
lcall
add
imul
cmp
aaa
shll
fwait
call
stos
nop
jmp
inc
aas
testb
mov
fcmovnu
jb
or
sbb
add
fldcw
pop
add
rorl
ret
test
cli
sub
jo
mov
es
cmpb
mov
imul
outsb
xor
das
xor
add
xchg
and
mov
or
inc
dec
mov
ja
in
mov
pop
sbb
push
movsb
or
push
jns
add
out
leave
dec
push
scas
inc
xor
pushf
xchg
add
jge
cmc
push
test
mov
ret
jo
ret
xor
cmpsb
iret
mov
jno
xor
mov
lret
or
xchg
dec
add
es
jno
mov
lcall
loopne
xor
je
xchg
xchg
jo
mov
cmpb
or
cmp
adc
mov
lods
sub
dec
fcompl
loope
inc
mov
rcll
mov
sbb
sub
mov
xor
fistl
and
jecxz
out
and
xchg
adc
sub
xchg
dec
pop
jns
dec
imul
movzwl
inc
xor
arpl
pop
mov
sub
jmp
fldt
dec
or
cmp
mov
xlat
inc
push
jne
stos
pop
ds
pusha
popf
mov
test
sbb
outsl
sbb
cld
push
jmp
ret
imul
out
test
inc
mov
xchg
popa
jns
rclb
js
sub
mov
idivb
and
fcomps
fwait
ljmp
inc
mov
fbld
or
loope
addr16
int
int
adc
pop
nopl
lcall
sub
jnp
imul
lock
fdivs
xor
push
rcrb
and
xchg
std
dec
hlt
out
sbb
fldt
dec
movsl
lock
pop
arpl
sbb
sub
test
es
lret
mov
xor
shrb
pop
je
je
andb
lea
add
xor
lret
js
aam
cmc
int
sub
xchg
push
push
jo
bound
jne
stc
stos
pop
into
stos
data16
lods
adc
add
lds
and
xor
push
sub
xchg
shr
enter
leave
outsl
scas
cli
adc
dec
int3
sbb
imulb
xchg
sbb
add
add
push
outsl
nop
pop
jne
add
add
cs
cmpb
push
movsb
push
lods
int
fsubr
mov
hlt
jbe
add
push
jp
addr16
pop
inc
sbb
mov
cli
sbb
dec
xchg
js
mov
clc
cmc
jmp
push
scas
lea
dec
sbb
icebp
inc
out
and
icebp
or
or
fsubs
and
hlt
push
imul
sbb
mov
sbb
ds
out
int
aas
sbb
in
shll
jbe
mov
pop
sub
enter
sub
xor
sbbl
add
mov
and
outsl
push
lods
add
adc
notb
out
lret
notb
sub
pushf
mov
or
cltd
std
outsb
cmpsb
outsl
pusha
in
ret
and
repz
iret
outsb
push
xchg
in
inc
jns
fdivrs
xchg
dec
lcall
dec
cmp
fs
fld
xchg
push
or
push
inc
lret
aam
jns
push
add
cmpsl
jbe
stc
sub
mov
out
ljmp
pop
jnp
les
or
dec
inc
add
sub
push
movsl
mov
lds
fwait
sbb
pop
shll
mov
inc
sbbl
xor
fidivl
aad
imul
test
aas
repnz
in
inc
jae
mov
test
sbb
dec
outsb
imul
ret
pop
imulb
jecxz
fnstsw
fs
test
dec
ss
xor
out
ret
pop
pop
jbe
data16
jle
in
cwtl
push
fwait
sbb
fucomip
inc
xchg
cmpsl
pop
cmpsl
loope
and
fsubrl
sub
out
decl
pushf
add
sub
push
add
add
shrl
mov
sbb
jecxz
add
sahf
int3
ljmp
daa
pop
jecxz
cli
in
mov
jge
mov
mov
push
inc
inc
rcr
cld
leave
add
out
xor
add
jp
mov
cmp
cli
shlb
xor
cltd
sbbb
xor
inc
mov
lds
into
or
rcrl
out
push
pushf
inc
cwtl
hlt
cwtl
rcrb
ret
cli
outsl
adc
adc
push
in
js
imul
les
inc
cmp
dec
bound
mov
pusha
and
mov
daa
popf
xor
xchg
mov
outsl
rcr
and
jb
adc
xor
mov
fs
fcomps
add
jp
nop
fsts
and
outsl
jb
mulps
jae
pop
jecxz
mov
movhps
fidivl
jp
testb
mov
sarb
xor
pop
je
sbb
mov
cld
repnz
or
jb
pop
popa
xor
test
pop
int
or
xchg
mov
pop
add
xchg
repnz
aas
lods
mov
cli
cmp
rcrl
aad
pusha
rorb
test
leave
and
call
xchg
out
fs
loopne
out
mov
inc
pop
sub
xor
stc
jae
ret
inc
scas
aad
rolb
in
push
mov
mov
ja
jl
std
fdivs
das
or
sub
fwait
mov
mov
mov
xchg
pop
jle
movsl
aam
cmp
cs
ret
fists
notl
rcll
sub
mov
aaa
stc
mov
shll
idiv
ret
jge
lock
call
popf
adc
mov
jl
pop
xor
fiaddl
ja
ss
lahf
rcll
gs
int
popa
inc
sub
sbb
scas
xchg
int
jo
pop
xlat
jp
fdivs
pop
pop
add
aas
repz
jo
jmp
movsb
daa
repnz
mov
lock
adc
test
mov
xor
daa
shl
or
and
dec
loope
repnz
je
adc
aam
fbld
dec
adc
jg
push
imul
addb
cmpl
ja
insl
cmp
out
sub
incl
ds
cmpsb
out
mov
add
into
mov
and
and
out
sub
pop
pop
and
orl
and
jae
mov
mov
rcrb
lcall
stos
dec
add
cli
sbb
sbb
mov
add
xchg
insl
lods
call
in
popa
sub
sbb
jns
std
mov
repnz
mov
jle
scas
mov
insb
sub
andl
in
lds
jns
xchg
inc
cld
test
jg
test
shrb
shrl
mov
fildll
fsubs
in
ljmp
das
pop
mov
add
test
shrl
test
idiv
mov
fsubl
push
pop
dec
mov
pop
imul
sub
pop
in
xchg
and
pop
cmp
fstps
jne
stos
dec
pop
push
mov
daa
scas
popf
add
in
sbb
xor
aam
in
sahf
xchg
mov
test
add
pop
pushf
xor
or
call
dec
mov
nop
dec
sbb
imul
xchg
cltd
adc
mov
pop
xchg
inc
mov
xchg
shrb
xor
test
pop
sbb
bound
ljmp
push
ss
push
sbb
pusha
outsl
adc
xor
jg
pop
push
or
in
or
xchg
or
int
leave
repz
das
js
imul
cmp
clc
frstor
js
cmp
adc
jb
fldpi
inc
dec
sbb
scas
cmp
push
sbb
cmpsl
call
xorb
sbb
xor
ds
mov
out
mov
ds
or
stc
aad
scas
push
aaa
mov
cmc
pop
insl
jne
add
and
fwait
mov
cmc
icebp
push
mov
cmp
jp
lock
aaa
and
push
cmpl
jns
sar
sub
xchg
push
decl
out
test
inc
loopne
les
rorb
push
negl
or
push
fucomip
or
sti
sahf
dec
add
aaa
adc
and
fnsave
mov
pop
bound
rorl
cmc
sar
jecxz
ja
outsb
sub
mov
xchg
adc
lea
scas
sub
push
pop
push
lret
xchg
xor
jnp
adcl
leave
adc
lcall
mov
dec
outsl
and
xchg
inc
push
or
push
pusha
addb
into
mov
movsb
and
push
mov
lock
call
cmp
sub
hlt
ret
outsl
int3
repnz
and
push
xchg
outsb
outsb
or
sbb
fsubrl
pop
inc
stc
sarl
fsubrs
imul
mov
pop
cltd
cwtl
lock
ljmp
add
cmc
add
pop
mov
lcall
mov
aam
add
push
push
daa
jge
xchg
pop
je
pop
test
xchg
and
xchg
xchg
mov
js
mov
cmp
pop
cli
mov
sarb
cs
xchg
aaa
jp
pop
pop
idiv
clc
scas
scas
inc
xchg
fisubrl
out
jp
imull
and
aam
lock
sarb
cwtl
mov
jno
inc
push
movsb
fwait
and
out
cmp
inc
daa
lret
xchg
sub
sbb
sub
jmp
loope
arpl
and
es
mov
adc
add
call
dec
call
out
shrb
inc
mov
xchg
push
in
jg
pop
dec
imul
dec
sbb
fdivrl
xchg
adc
cmc
mov
inc
js
mov
xchg
lcall
stos
mov
push
xor
xor
icebp
fcomps
inc
add
sbb
and
call
cmp
and
outsb
and
cmp
movsl
fmuls
cld
mov
pusha
hlt
movsl
and
sbb
push
dec
jge
and
mov
jne
or
insl
adcl
and
cwtl
mov
push
adc
test
ss
add
lahf
jno
mov
loope
das
lds
sub
leave
iret
and
mov
mov
pop
push
andl
mov
call
ds
ret
xor
ss
mov
out
mov
rcr
addr16
lds
cli
aam
jmp
pop
lods
xor
push
xchg
pushf
loope
inc
data16
cltd
stos
cmp
adc
pop
cltd
mov
pop
mov
xchg
xchg
hlt
xchg
insl
shlb
mov
loop
ds
aad
aam
or
inc
outsb
pusha
loope
loopne
enter
ficompl
mov
ficoml
sub
fldl
scas
ret
adc
or
xor
xor
push
ds
dec
popa
mov
dec
cmp
sub
inc
cmp
mov
adc
inc
sahf
cmp
es
sbb
pop
push
mov
dec
gs
mov
filds
mov
int3
insb
pop
mov
or
icebp
pop
fxch
imul
mov
sub
out
ja
or
pop
or
les
xchg
lods
sbb
imul
cwtl
ds
pop
cld
inc
mov
sti
fdivrl
scas
cwtl
add
mov
sbb
or
fwait
clc
sbb
sub
daa
add
movb
mov
fildll
lret
loopne
dec
xchg
outsb
pop
sbbb
scas
inc
jns
pop
adc
pusha
lcall
sbb
cmc
inc
or
pop
inc
xor
je
xchg
gs
imul
xor
pop
test
movsb
cmpsb
xchg
rcrl
jbe
jl
cmp
mov
cmp
movsl
xor
ds
mov
sub
inc
and
xor
dec
hlt
call
sti
in
icebp
loope
fdivrl
sahf
aam
mov
inc
ret
andl
js
dec
sub
mov
leave
pop
or
fiadds
push
sbb
shrb
mov
sbb
in
test
mov
dec
xchg
call
out
xchg
mov
popf
inc
inc
and
cmp
cmp
jg
repz
jg
sbb
das
mov
or
cmp
sarl
cmp
adc
jmp
cmpsl
push
rorb
xchg
mov
into
jo
xchg
int3
inc
inc
pop
aaa
iret
mov
stos
add
and
or
stc
pop
or
push
out
mov
xor
xchg
fstps
cmp
push
in
leave
out
jle
adc
nop
mov
jp
fdivrp
cmp
dec
insl
shlb
bound
test
aas
arpl
shr
push
cli
push
pop
sub
pop
cmp
arpl
xor
imul
divps
jmp
mov
dec
int
lret
sti
les
test
cltd
cs
inc
fidivs
xchg
hlt
dec
jo
lds
stos
fwait
or
push
adc
and
add
aas
jb
addl
cmp
faddl
and
out
repnz
sub
mov
sbb
jle
inc
std
enter
mov
adc
cmc
out
nop
or
adc
fidivl
mov
jp
sub
mov
lock
gs
mov
sar
fdivrs
lcall
addr16
add
popf
jno
pop
mov
imul
and
negb
aad
hlt
out
or
ret
fstps
adc
mov
loopne
sub
mov
stos
jae
test
test
dec
imull
cmp
xchg
jl
aas
daa
in
mov
dec
mov
adc
jge
out
jle
mov
int3
xchg
shlb
mov
fwait
in
xchg
test
and
add
gs
mov
stos
inc
sarl
sahf
lds
xor
mov
add
addr16
push
jne
mov
sahf
cmovo
mov
inc
cmpsl
outsb
xchg
int3
leave
xchg
cmp
xorl
mov
out
pop
sub
mov
das
int
cltd
fstps
cmpsl
imul
xor
mov
cmp
cld
hlt
clc
cmc
or
xchg
mov
add
lds
dec
clc
jbe
loopne
scas
and
push
ja
push
adc
out
jo
mov
cmp
stos
mov
pop
sbb
mov
add
int
cmp
mov
outsl
push
jle
loop
lock
add
sub
sbbl
xchg
jo
test
out
dec
addr16
out
loope
mov
and
push
jae
sub
push
out
stc
ds
or
jb
pop
int3
add
xchg
xor
add
push
mov
cmpsb
xchg
loop
xchg
and
mov
or
test
pop
lret
mov
push
sti
sbb
xchg
flds
lahf
fs
sbb
rolb
cmp
inc
adc
xor
cmc
inc
jge
fidivrl
hlt
mov
clc
popa
inc
cmp
sbbl
sub
sbb
inc
stos
jns
jae
jp
xor
aam
ds
pop
pushf
cmp
xchg
adc
inc
test
hlt
insl
sti
int3
mov
cmpb
xor
lock
jbe
push
dec
jp
pop
and
cmc
sbb
cmp
jg
mov
xchg
lret
sbb
test
push
pop
cwtl
into
xchg
gs
xchg
jp
icebp
lea
push
dec
into
cmpsl
xchg
cmp
dec
in
mov
adc
in
dec
pusha
cmpsl
pop
popa
pop
dec
xor
ret
sbb
pop
les
xchg
mov
fninit
es
xchg
shlb
jnp
xchg
call
cwtl
push
xchg
mov
xorl
lcallw
pop
push
jb
mov
test
pop
dec
mov
inc
es
rclb
jno
xchg
xchg
xor
incb
cmp
icebp
mov
adc
mov
insl
ror
xchg
icebp
mov
loope
mov
sbb
cld
add
add
bound
pop
add
push
das
jle
xchg
xorl
inc
cltd
out
push
sub
movb
out
mov
and
push
leave
cmp
call
loope
ret
jle
adc
pop
cmp
or
jle
jne
jnp
xchg
scas
sti
orl
xchg
sub
and
mov
hlt
adc
sub
lock
pusha
xor
adc
inc
push
imul
and
jnp
ret
and
sti
cmpsb
insl
loope
out
xchg
into
mov
dec
jle
popa
mov
jge
test
call
mov
lret
lahf
inc
inc
ljmp
xor
fsubrl
mov
xchg
pop
push
ds
outsl
fcomi
mov
orl
inc
xor
mov
jno
mov
clc
ja
inc
je
mov
in
das
inc
sub
cmp
es
adc
push
fucomp
dec
idivl
mov
xchg
add
jecxz
mov
add
pmulhw
dec
mov
fcomps
mov
push
fnstsw
jae
test
rcrb
nop
out
imul
or
mov
mov
or
orps
or
enter
dec
cmp
inc
fldt
in
in
pop
and
xchg
aas
andb
cltd
mov
pop
cmp
sub
lret
aaa
mov
xchg
ljmp
cmp
ret
test
push
pop
push
lret
fidivl
aas
mov
push
pushf
lock
add
into
aaa
in
ss
sub
out
in
dec
add
sub
mov
insl
clc
and
fldcw
dec
mov
punpcklwd
jnp
pop
mov
dec
jmp
mov
pop
imul
insb
xlat
cli
add
in
setne
mov
dec
adc
mov
mov
shrl
fisttps
leave
test
push
int
stos
insl
cmp
outsl
ret
into
xchg
inc
add
cmp
fwait
lds
sbb
adc
fmul
leave
adc
es
sub
je
ret
pop
out
or
pusha
mov
pop
fcomps
into
cmp
mov
dec
dec
sub
test
or
mov
sub
ret
lods
and
dec
fstps
test
xchg
xchg
ds
sub
xchg
xchg
pop
mov
jp
lods
repz
adc
dec
cs
scas
xor
mull
popf
enter
ficomps
sbb
mov
shrl
cmp
and
lahf
fstl
sbbb
adc
outsl
int3
xchg
and
push
push
mov
add
mov
addb
inc
mov
adc
mov
enter
inc
pop
adc
lods
divl
pop
mov
mov
cltd
xor
mov
or
mov
outsl
js
jbe
stc
in
popf
insb
mov
sahf
fwait
cltd
es
bound
ftst
mov
jne
cli
in
jl
sbb
push
out
xchg
test
loopne
sub
lret
cli
rcrb
xchg
push
pop
out
aam
divb
sub
rcl
mov
roll
pop
ja
test
xlat
jb
fisubl
xchg
mov
xchg
cmp
and
filds
mov
movsl
xchg
lahf
movl
fidivl
push
and
pop
jecxz
lea
cmp
lods
mov
fistpll
aad
scas
and
out
loope
add
repz
pop
fisubs
cmp
mov
sub
data16
decl
sub
mov
sbb
test
xor
rcr
enter
pop
test
xor
inc
xor
sbb
push
push
mov
call
push
ret
xchg
push
add
and
mov
lret
adc
fwait
jnp
xor
in
mov
ds
mov
cld
cmp
mov
divb
gs
daa
xchg
jnp
cmpsb
jo
iret
aam
mov
iret
mov
sub
jae
int
cmp
inc
mov
out
call
xorl
lods
aaa
dec
cli
hlt
filds
clc
test
leave
ret
call
ljmp
out
xchg
shlb
dec
repnz
adc
out
hlt
sti
and
cwtl
cmp
dec
inc
pop
jmp
iret
and
pop
test
sub
push
push
dec
test
cmp
mov
push
mov
imul
fsts
jb
out
add
mov
jmp
push
leave
push
adc
scas
punpckhbw
mov
dec
cmp
in
scas
push
xor
sub
fwait
mov
dec
pushf
add
loop
orl
cs
fsubl
insl
push
mov
ficoms
adc
lret
stc
mov
mov
mov
mov
gs
inc
int3
dec
push
lcall
sub
stc
int
and
outsb
push
mov
loop
int3
in
and
test
xchg
dec
fwait
dec
loopne
rcrl
xor
push
out
std
negb
inc
movntq
lods
fists
ja
sbb
int3
ljmp
test
pop
dec
out
sahf
in
xchg
lret
call
adc
add
xchg
inc
pop
dec
fcoml
adc
add
fbld
std
incl
cmp
fimuls
mov
pop
ficoms
call
xchg
pop
enter
imul
jns
xlat
sbb
popa
rorl
sarb
inc
add
cs
pop
cmp
in
sub
xchg
pop
addl
ret
push
outsb
and
fucomi
sub
es
pop
repnz
pop
pop
inc
andb
mov
mov
inc
ds
jg
mov
cmp
out
jns
mov
mov
icebp
lret
into
loop
insb
add
scas
and
xlat
nop
add
lds
test
add
xor
test
dec
ss
sub
xor
push
orb
data16
sahf
push
mov
xor
push
bound
les
sahf
in
addr16
stos
mov
mov
test
pop
mov
cs
int3
sahf
aas
loopne
in
pushf
cmpsl
outsb
mov
xor
stos
in
and
xchg
roll
mov
leave
pusha
xchg
mov
lahf
xor
sub
push
insl
fstpt
into
scas
cmp
les
and
push
inc
lret
arpl
jnp
sub
jae
mov
dec
cmp
call
insl
or
mov
xor
lods
inc
shl
iret
pop
or
adc
sbb
out
out
adc
jne
sub
push
jg
iret
push
out
decl
pop
xor
rcrb
rcr
imul
pop
mov
ds
insl
test
pop
sub
sbb
push
subb
das
inc
int3
pop
unpcklps
mov
arpl
fadds
cld
xor
sub
and
sbb
loopne
xor
dec
mov
push
mov
shll
add
shll
inc
mov
jmp
dec
dec
or
sub
pop
xor
fcmovbe
test
cmp
enter
cmp
lret
push
mov
mov
es
std
in
push
call
mov
popf
mov
aad
cli
fistpl
xchg
mov
sti
jae
fisttps
jl
xor
in
mov
sahf
push
mov
or
cmpsl
cltd
imul
jae
or
xor
sbb
js
outsb
fidivs
pop
dec
push
push
les
std
mov
dec
mov
mov
aam
cmp
fs
leave
outsl
push
mov
sbbl
add
sub
test
mov
xchg
jno
icebp
lret
cmp
cmp
cmp
ret
push
fs
out
push
push
pushf
decb
icebp
adc
add
jecxz
cld
ret
pop
pop
nop
add
test
lods
mov
rorb
mov
xor
out
xorb
adc
mov
pop
lcall
data16
jb
ficomps
inc
in
jmp
stos
mov
xchg
xchg
pop
arpl
pop
pop
jp
enter
mov
inc
cmpsl
orb
mov
jo
xchg
push
lea
repz
cltd
xchg
and
xchg
test
jne
inc
call
push
ret
xor
popf
sub
fcmovnbe
test
sbb
hlt
cmp
sub
mov
aaa
or
sbb
pop
sbb
loope
dec
out
inc
stos
pop
cmc
int
lds
mov
and
mov
aaa
mov
sarl
or
mov
pop
stos
out
outsb
aam
repnz
cld
mov
adc
adcb
stc
push
in
jge
adc
sbb
or
lret
mov
jns
cmp
das
movsb
jne
aas
inc
aad
pop
shl
mov
rorl
les
xchg
dec
imul
lea
xchg
xlat
mov
pop
cmc
adc
mov
pusha
pusha
lds
lret
in
aad
daa
jno
test
dec
xor
les
adc
test
std
divl
mov
mov
js
int
test
sub
hlt
outsb
lock
in
dec
mov
mov
divl
stos
call
mov
xor
xchg
into
xor
pop
or
xorl
shl
sbb
sub
jnp
mov
call
jg
test
fstpt
mov
call
ficoml
ja
sub
inc
inc
sbb
cs
cmpsb
adc
jno
cmp
popf
mov
ds
test
inc
movsl
adc
push
sub
loopne
cmp
and
ficompl
jge
xchg
mov
rol
cmp
dec
or
adc
xchg
aaa
mov
mov
call
cltd
dec
xlat
inc
jb
dec
adc
mov
mov
pop
jnp
inc
pop
and
out
mov
scas
cli
inc
add
cmp
out
jl
fsubrs
inc
mov
sbb
cs
fildl
push
push
push
stos
and
sbb
push
adc
icebp
xor
dec
aam
popf
andl
mov
xor
daa
stos
and
clc
jl
push
mov
fisubs
mov
imul
dec
ja
popf
rclb
popf
addr16
lods
enter
adc
ss
or
mov
and
adc
aad
dec
lcall
inc
sbbl
and
or
sbb
ret
xchg
lds
dec
jg
xor
fbstp
out
xchg
xor
das
mov
xor
nop
sbb
xchg
add
jns
mov
xchg
push
push
fistps
push
notb
pop
fwait
and
int
jne
adcb
mov
sub
jp
in
std
cld
fsubrp
lret
cmp
leave
fs
cmp
inc
adc
pusha
sahf
lahf
cld
sbbl
dec
ror
pop
shll
sbb
out
mov
sbb
sbb
add
cmp
popa
mov
pop
daa
dec
xchg
mov
dec
imul
cmp
mov
fldcw
mov
out
xlat
nop
js
xchg
xor
lods
shlb
xorl
outsl
leave
xchg
ret
lods
and
mov
inc
aam
sub
sbb
out
pop
xchg
cmpsl
xlat
dec
mov
mov
fwait
aaa
lods
mov
lock
pop
pop
arpl
jle
cwtl
cmc
jne
add
mov
fnsave
push
mov
mov
pop
sbb
aad
mov
push
push
lds
mov
or
xor
aam
cmp
adc
popf
push
sub
jp
pop
cs
popa
aaa
aad
sbb
adc
and
adc
loop
and
inc
stos
and
jp
cmp
push
loop
lods
repz
pop
fmul
xorb
push
insl
xchg
or
lea
repz
adc
xor
test
test
cmp
fisubl
iret
pop
ljmp
lret
adc
call
pop
pop
vmovq
lahf
mov
mov
push
jp
mov
jnp
lea
cmp
mov
mov
inc
cmpsb
jns
subl
jne
dec
push
mov
sub
test
cwtl
sbb
mov
jg
scas
add
inc
stc
xchg
jp
addb
jns
scas
cmpl
popa
aas
dec
sub
std
aaa
rcr
fmulp
add
pop
mov
aam
rcll
icebp
mov
dec
inc
fdiv
pop
orb
cmp
dec
clc
addl
and
shrb
inc
movsl
int3
push
dec
dec
inc
mov
mov
nop
rcll
je
inc
lds
cwtl
push
cmc
push
xchg
jle
test
cmp
dec
mov
fcoms
push
std
pop
mov
jne
ss
aam
testb
mov
mov
iret
adc
fcoml
or
jbe
inc
aas
sub
push
movsl
fmuls
fcompl
insb
lods
divl
jno
mov
and
pusha
mov
call
imul
sub
pop
mov
xor
insb
pop
xchg
jno
ss
jmp
and
pop
xchg
out
push
cmp
in
mov
mov
rcl
pop
mov
xor
popa
xor
lea
test
hlt
mov
jmp
inc
mov
sahf
cmpsl
loopne
mov
push
adc
popf
scas
call
insb
mov
addr16
mov
jp
negb
cltd
sbb
jge
sbb
lret
scas
push
cmp
xchg
ficomps
mov
cmpsb
inc
or
jo
mov
pop
pop
and
ds
bound
push
imul
push
push
jo
add
xor
lret
addr16
mov
or
xchg
sbb
movsb
cmc
es
insl
je
and
sub
jbe
mov
pop
inc
in
mov
or
movsb
stos
sub
jmp
gs
add
fcompl
dec
add
repnz
or
pop
mov
or
nop
push
ds
pop
lea
xor
inc
jbe
sbb
pop
mov
jg
xchg
xorb
clc
fwait
mov
xor
mov
incb
fildll
ret
nop
xor
fs
mov
faddl
rcrl
push
jb
xor
mov
cli
xchg
xchg
xlat
sub
mov
mov
loop
xor
and
mov
pushf
sarb
jo
mov
dec
je
loopne
cmc
xor
sub
cmc
push
in
call
std
xchg
aas
lahf
mov
xor
cwtl
push
cmp
int3
mov
mov
into
cmp
jns
push
ja
cmpl
jae
test
repz
ror
pop
pop
and
mov
inc
movsl
sbb
push
ja
xor
add
inc
mov
dec
dec
push
cmp
jne
xchg
cmp
xor
jbe
inc
pop
xchg
sbb
mov
or
popa
xlat
fwait
shll
lcall
aas
sti
mov
mov
aam
pop
push
sbb
xor
cmp
dec
sti
xchg
jb
lock
push
shll
or
je
outsl
pop
dec
popa
out
mov
lcall
leave
mov
jmp
daa
popf
dec
push
dec
ja
and
loop
popf
scas
mov
push
mov
insb
xchg
push
lahf
dec
inc
incb
stos
in
add
pop
ds
or
sub
fildll
je
mov
aad
sub
test
mov
xlat
popa
je
and
sub
aam
push
pushf
xchg
cmp
loope
sub
jp
jg
gs
ss
lods
in
add
push
pcmpgtd
mov
pmulhw
mov
add
fstpt
movsl
adc
mov
mov
inc
cmpsb
and
mov
fldenv
xlat
pushf
lahf
ret
and
xchg
pop
mov
inc
out
pop
adcb
jge
aaa
ja
mov
mov
xchg
sbb
ds
addps
jecxz
push
lea
lds
pop
xchg
mov
add
sub
in
iret
addl
lds
cltd
pop
fldt
add
push
sub
dec
sbb
jae
xor
js
test
cwtl
adc
movsb
adcl
mov
stos
rcll
dec
mov
sti
add
push
fiaddl
ret
js,pt
int3
out
repz
aaa
push
sarl
mov
sbbb
test
mov
pop
jmp
pop
xchg
fsub
cmp
repnz
rcr
js
jo
xchg
imul
push
add
dec
sbb
add
in
and
xor
push
sarl
and
ret
movsb
mov
int
jl
ljmp
xchg
int3
cmc
inc
xor
lea
push
scas
sbb
push
cmp
lock
iret
push
jge
jmp
or
fistpll
sub
lods
push
inc
scas
push
daa
adc
jne
shll
xor
mov
jne
into
cmpsl
or
add
test
mov
cwtl
mov
jo
mov
and
xor
dec
mov
push
adc
pop
fisttpll
pusha
sub
pushf
mov
out
popfw
cmp
mov
sub
sub
lcall
bswap
push
mov
cmpsl
fcmovbe
sbb
out
sub
lds
sahf
push
mov
ja
test
mov
imul
stos
cmp
or
loopne
mov
imul
jg
addr16
bound
int
into
pop
mov
mov
add
arpl
mov
cmp
mov
pop
lds
mov
popf
xorl
out
test
mov
cmp
fcmovnb
inc
xor
loop
ds
stc
jns
jl
idivb
fdivr
test
sbb
dec
jne
inc
or
jne
add
rolb
popf
cld
push
sbb
and
mov
cmpb
es
mov
mov
dec
push
pop
dec
inc
xchg
fdivl
aas
push
rolb
cmp
pop
push
jnp
inc
xor
dec
fcmovnbe
imul
jbe
enter
lret
xchg
loope
jecxz
adcb
sti
lock
xchg
mov
int
pop
and
pop
rorb
fdivl
xchg
or
in
add
push
xor
fwait
dec
insl
sub
xchg
push
int3
ret
push
repz
push
adc
xchg
mov
mov
clc
aaa
cld
and
lret
popa
popf
repz
daa
add
xchg
pop
dec
lods
push
cmpsb
out
movsb
int
stos
ljmp
add
pop
addl
mov
sub
out
mov
cmp
pushf
jne
push
ret
paddw
pop
mov
popa
das
imul
xor
sbb
hlt
lcall
das
fdivrs
push
das
push
mov
jo
xor
pop
or
cli
mov
cmp
push
aas
cmp
repnz
xor
dec
dec
mov
mov
push
inc
xchg
addr16
jmp
int
inc
xor
pop
sub
push
out
insb
jp
pop
into
fcoml
fstp
das
xor
push
add
xlat
neg
sub
movsl
inc
or
mov
mov
xchg
add
sub
xor
push
cld
sbb
jecxz
push
xchg
sbb
lret
mov
mov
enter
je
scas
ficomps
lods
lock
es
pusha
mov
insl
daa
shl
jnp
dec
fcmovne
loopne
faddl
mov
inc
xor
aad
mov
jge
dec
inc
dec
ret
jge
cmp
ret
add
jbe
sub
xor
push
repnz
lods
mov
loope
addr16
js
cltd
bound
push
divb
jle
cmp
lret
out
push
in
xchg
xor
cmp
iret
cmp
cmpl
pop
add
and
ss
cli
or
push
pushf
sbb
stos
push
cmp
xor
mov
das
jl
inc
xchg
loop
jp
out
add
pop
mov
icebp
push
lock
inc
subb
push
inc
sbb
jg
jne
mov
inc
mov
sbb
push
pop
mov
sub
ret
lods
xchg
shrb
neg
adc
inc
lds
bound
dec
inc
cld
mov
xor
ss
jbe
inc
inc
xchg
mov
pop
adc
xor
shll
mov
loope
mov
nop
lea
jb
dec
pop
into
xorl
std
push
addl
negb
in
mov
xor
cmp
mov
fsts
mov
xor
xor
call
cmp
popf
sbb
xor
mov
ja
stos
int
inc
aad
pop
addr16
cmp
inc
lret
sbb
mov
xchg
fsubp
mov
cld
imul
shrl
lahf
jl
sub
add
mov
js
jge
scas
test
mov
xor
and
mov
pop
or
lods
xchg
jle
pop
inc
addr16
dec
js
cmp
nop
and
mul
mov
movsl
lods
add
stos
add
incb
push
xchg
cmpl
add
inc
fimuls
shl
loop
js
inc
push
cld
scas
jb
ret
or
fxch
push
pop
inc
push
mov
fs
inc
jae
inc
push
stc
mov
jge
mov
in
js
dec
jno
out
imul
subb
jb,pn
mov
movsb
scas
outsl
and
and
andb
repz
jle
jg,pt
dec
cli
out
mov
movsb
ja
dec
ljmp
sub
sub
jmp
int3
push
sbb
fsubrs
push
cs
push
jmp
or
cmp
pop
loopne
push
add
pop
jns
subl
loopne
call
xor
sub
in
mov
sbb
inc
push
out
or
aad
scas
insb
jecxz
jns
mov
dec
out
dec
jp
pop
dec
dec
out
adc
jg
dec
mov
jno
and
jl
add
cli
sub
adc
nop
mov
jno
adc
fldenv
push
insb
decb
subl
movsl
push
mov
arpl
xchg
cmc
clc
mov
orl
add
jecxz
push
std
push
xchg
push
xchg
push
add
data16
mov
popf
je
out
out
popf
cmp
pop
sub
jae
cmp
push
iret
movsb
and
adc
aad
push
pop
xor
jge
insb
mov
pop
push
inc
xlat
leave
fst
out
jmp
test
jg
int
loopne
cld
test
lret
cmpl
and
jo
fiadds
fsubl
mov
mov
rol
ret
aad
lret
cmp
mov
sbb
jle
cmp
adc
inc
out
sahf
lods
arpl
jbe
ljmp
mov
cmp
hlt
lock
adc
pop
and
clc
call
inc
inc
std
mov
jbe
xchg
pop
out
jecxz
cli
js
ljmp
pop
fwait
arpl
pop
push
gs
mov
mov
push
jmp
adc
xchg
das
sbb
loopne
or
xchg
imul
xchg
outsb
or
mov
sbbl
inc
mov
adc
out
sub
mov
call
cmc
dec
call
andb
imul
jnp
ss
leave
mov
adc
stos
inc
add
or
imulb
lods
adc
mov
dec
mov
lea
xor
cltd
mov
jo
dec
stos
mov
mov
push
mov
xor
leave
sbb
inc
popf
sub
xor
icebp
jp
push
loope
inc
inc
mov
jecxz
jnp
push
mov
orb
call
xor
test
push
add
into
sbb
and
inc
lcall
sbb
sbb
sbb
pop
int
sub
ds
xor
ret
xor
sub
pop
pop
testb
pop
adc
aad
repnz
sub
outsl
dec
add
fisttps
stos
call
mov
push
mov
or
rorb
icebp
xlat
mov
in
dec
xlat
adc
mov
fmul
cmpsb
js
xor
cmpsb
sub
repnz
sub
lea
mov
sub
cmp
jl
dec
out
lds
jns
jge
xchg
dec
insb
outsb
je
push
test
sahf
outsl
rol
mov
and
xor
lahf
fisttpl
xchg
add
sti
lahf
or
push
lahf
or
inc
sub
inc
imul
andl
dec
sub
rcl
bound
and
cmp
addr16
sbb
cmp
sub
dec
mov
stos
pop
add
cvttps2pi
push
in
rolb
pop
aaa
push
xchg
dec
jnp
into
mov
repz
lods
out
mov
sbb
in
loope
sysenter
or
fwait
mov
xlat
jns
jae
add
pop
adc
ret
sbb
test
xchg
ret
xor
das
add
mov
push
pop
outsl
loop
repz
lds
das
sahf
mov
repnz
hlt
loope
ror
les
mov
not
adc
jo
xchg
add
adc
fistpl
sti
sarb
dec
daa
in
repz
fwait
mov
cmp
addl
in
jp
jo,pn
lahf
daa
sbb
ffreep
pop
out
out
push
outsb
or
mov
dec
pop
arpl
and
out
popa
bound
sbb
scas
mov
int3
mov
test
cmpsb
iret
dec
mov
adc
jns
gs
sub
sbb
cmpsl
cmpsl
fcomi
pop
cmp
in
xor
mov
pop
xor
jmp
cs
mov
xchg
shl
lea
sub
cld
fdivl
sub
in
xchg
or
outsb
lret
ljmp
icebp
daa
imul
mov
dec
push
jbe
scas
pop
hlt
adc
jle
xchg
test
and
test
sbb
dec
mov
mov
mov
jnp
shlb
in
mov
push
push
addr16
fildl
mov
rclb
push
pushf
dec
xchg
push
cs
in
leave
rcr
test
mov
je
mov
or
negl
repnz
pushf
push
and
xchg
ret
testl
and
into
shll
cmpsl
push
js
pusha
cmp
divb
mov
adc
adcl
jns
scas
jle
jnp
dec
add
lahf
and
mov
nop
pop
add
fnstsw
movsb
jle
lahf
sub
dec
pushf
jmp
les
cwtl
hlt
dec
stc
push
adc
adc
adc
out
sub
out
xor
lahf
in
jbe
bswap
aas
cli
push
mov
in
push
mov
fdivl
call
in
cld
stc
stos
scas
mov
aad
inc
dec
xor
call
in
pop
sub
adc
and
add
je
aaa
aaa
add
mov
add
fmull
test
ljmp
and
enter
push
add
call
jmp
jmp
or
mov
mov
sbb
dec
aaa
rcll
aam
lret
xchg
inc
je
mov
push
popa
sti
cmp
lcall
adc
push
dec
and
cmp
xchg
mov
jno
mov
subl
adc
scas
push
loopne
mov
out
out
mov
mov
fists
mov
pop
dec
mov
mov
aad
cmpsl
rcl
movsb
add
ljmp
leave
lds
sub
mov
cltd
scas
jne
add
or
sub
stos
jb
shll
das
sub
push
les
and
push
mov
pop
sbb
es
add
clc
push
daa
mov
and
lea
push
or
inc
mov
xor
in
cmp
jmp
test
lahf
xchg
sbb
popl
mov
inc
sbbb
mov
push
xchg
jecxz
or
lahf
mov
sbb
mov
inc
push
sbb
test
jecxz
add
jb
or
adc
sbb
ss
push
sub
jg
std
cmc
pop
jae
mov
mov
cmpb
xchg
loope
ja
je
adc
nop
mov
pop
lods
jle
lcall
xor
icebp
inc
pop
lret
jnp
or
pop
addl
inc
jge
test
out
in
xchg
cmc
push
pop
sub
xor
into
mov
push
aas
outsb
xor
mov
inc
cmp
or
mov
aas
test
int3
inc
shlb
jle
jns
inc
mov
adc
sub
push
jo
jge
pushf
fisttpl
cmp
mov
pushf
popf
mov
je
push
fldl
and
xor
ficoms
jl
pop
icebp
pop
scas
popa
or
cwtl
cmp
mov
inc
cmp
fs
call
add
testb
add
xchg
push
pusha
addr16
fcoml
pusha
sbb
pop
mov
jp
jbe
or
cmpsl
cmp
mov
ja
xor
out
adcb
sub
adc
loopne
add
mov
sbb
jne
flds
jecxz
mov
gs
add
sbb
into
mov
std
loope
add
stos
rcr
xchg
xchg
sbb
and
add
test
mov
mov
cli
hlt
xor
out
out
push
repz
in
xchg
jne
or
aam
jl
and
sub
mov
shlb
xor
int
iret
push
or
mov
das
inc
in
aam
mov
fsubp
add
divl
fldt
iret
jno
test
cli
push
xchg
adc
lcall
mov
pop
cltd
fstpl
inc
sbb
xrelease
insl
jp
rcr
inc
in
cld
cmc
sbb
cmp
in
inc
negb
inc
clc
fidivs
sbbb
leave
test
popf
jo
sbb
sbb
or
sbb
inc
adc
adc
xor
sbb
and
shll
push
aas
fsubs
pop
sbb
insb
fcmovu
jbe
stc
add
push
push
mov
fcomp
data16
movsl
cmp
xchg
fisubrl
mov
xchg
add
sbbb
aad
test
jmp
outsb
mov
cltd
rol
push
jno
push
mov
jl
adc
jno
lcall
pop
into
outsl
gs
mov
jle
scas
mov
iret
out
push
dec
inc
lods
std
cmp
cmp
lds
lcall
shlb
jmp
xor
adc
lret
jl
pop
sub
xor
in
lahf
test
data16
cmp
lret
cs
mov
imul
scas
mov
push
fwait
mov
sub
inc
push
mov
cmp
cmc
cli
cld
or
add
and
lcall
mov
adc
mov
outsb
dec
sti
add
mov
mov
sarl
and
inc
out
mov
bound
sbb
cmp
sbb
cmp
adc
les
sbb
mov
stos
fstpt
movsl
rclb
cmc
dec
push
push
lea
adc
lods
movsb
pushf
or
rorb
ret
ljmp
mov
and
pop
fcompl
push
sbb
daa
jns
adc
mov
outsl
cmp
movsl
or
jp
fbld
dec
fisubrl
xchg
mov
jo
pop
out
jp
xchg
cmpsl
test
cltd
test
imul
pop
sbb
out
lcall
cs
jmp
xchg
dec
addb
jae
mov
test
es
dec
or
pop
int3
clc
out
insl
les
cmp
imul
jmp
outsb
push
jbe
xchg
sahf
es
mov
xor
sahf
fists
ja
nop
cmp
dec
push
xor
sbbl
fsubrs
mov
fstpl
sub
push
mov
clc
das
dec
cwtl
add
jbe
pop
mov
testb
inc
aas
jne
jnp
aad
fbld
negl
ret
sbb
pop
aas
fdivrs
lods
jg
lahf
lahf
jnp
pop
pushf
and
and
pusha
loop
orl
lds
mov
ds
aad
hlt
in
ret
mov
push
adc
popa
into
xchg
mov
scas
lahf
lret
xchg
imul
mov
pop
loop
mov
scas
cld
xchg
into
cmp
mov
imul
scas
insb
dec
push
fneni(8087
push
jo
push
xchg
daa
popf
notl
ror
loopne
stos
movaps
pop
adc
sti
xor
dec
cmc
pop
mov
movsl
push
sbb
ss
sahf
jp
add
imul
sbb
sub
jmp
test
jg
push
ja
inc
jb
pop
adc
stos
out
lcall
sub
lods
inc
bound
ss
push
fsubrl
jns
xor
push
sub
jb
mov
add
push
lret
dec
and
arpl
cmpsl
mov
lahf
mov
lcall
sbb
add
subb
fisttpll
fisttps
fs
xlat
mov
mov
mov
data16
jecxz
sub
ret
sub
cld
sub
loope
xchg
mov
jmp
lcall
sub
call
fs
mov
xor
mov
sbb
adc
xor
sarl
xchg
mov
sbb
cmpsb
pause
ret
int3
outsb
cs
cli
test
push
loope
jp
jmp
lcall
dec
xor
mov
push
mov
pop
fs
les
cmp
cmpsl
ret
pop
fsts
cld
popa
in
push
cmc
loope
mov
and
out
jae
sti
inc
inc
sub
clc
pop
test
rcrb
jno
pop
cli
pop
bound
jmp
mov
xchg
into
add
xchg
in
sub
push
popa
iret
mov
in
jns
rep
and
orl
popa
dec
xor
not
add
and
push
xchg
inc
sar
push
or
mov
cmpsb
out
sub
jge
xor
sub
mov
addl
mov
cmpsl
test
jbe
mov
addr16
push
jmp
mov
ret
mov
push
inc
sbb
loop
aad
out
xlat
fidivl
push
push
mov
inc
push
push
mov
frstor
cwtl
fs
mov
pop
bound
dec
loope
frstor
jb
push
inc
mov
or
shll
int3
pop
mov
icebp
xchg
push
jg
sbb
xchg
dec
adc
aam
mov
cmp
add
push
and
fisubl
iret
add
xor
sbb
dec
imul
pop
pop
insb
mov
jecxz
inc
mov
les
pop
filds
adc
ret
into
call
fnstsw
mov
push
mov
and
inc
cmp
cwtl
dec
inc
push
iret
dec
mov
jo
cmp
pop
insl
adc
xorb
dec
adc
and
mov
push
or
or
push
in
iret
lcall
and
ja
cmpb
push
ljmp
mov
or
sahf
mov
ja
mov
bnd
xchg
jg
cld
call
icebp
ror
icebp
aam
jae
pushl
aaa
iret
jg
lret
fbld
lds
ficompl
push
jo
stc
cld
pop
hlt
adc
jle
sbb
insl
xchg
cmp
hlt
dec
xchg
data16
xchg
negb
popf
pop
sub
adc
jb
xchg
jne
xchg
sub
insb
inc
mov
dec
leave
lods
leave
ja
push
scas
xor
xor
mov
shl
std
mov
xorb
cmp
mov
je
movsb
add
sarl
cmp
cld
mov
outsb
stos
pop
xchg
push
mov
pusha
jnp
xor
shll
jecxz
test
pop
sub
stc
sbb
xchg
lock
sub
jb
les
inc
vphsubdq
adc
mov
ret
cmpl
ret
frstor
sarb
sub
lret
lahf
jne
or
cmpl
stos
jmp
ljmp
icebp
adc
and
inc
pop
xchg
and
cmp
aad
xor
dec
sbb
push
sub
mov
out
hlt
cltd
cmpsl
in
or
and
add
mov
cmp
aaa
cmp
pop
and
cmc
aas
adc
std
jge
cmp
js
daa
sahf
jp
test
dec
icebp
imul
add
xor
mov
mov
lcall
adc
sub
adc
hlt
stc
jns
xor
movsb
es
sub
push
mov
push
xchg
mov
pusha
fists
sbb
or
test
daa
add
test
xor
mov
push
inc
or
xor
test
shll
cmp
cmpsb
and
or
dec
in
mov
mov
sub
xchg
aad
mov
and
mov
scas
lret
sbb
and
rol
inc
rolb
mov
test
adc
out
mov
fcoms
pop
sbbb
xor
aad
jno
bound
sub
das
movsb
inc
ret
xchg
mov
xorb
das
gs
mov
and
push
jo
xchg
lret
mov
inc
xchg
pop
mov
stos
xchg
addl
div
fisttps
cs
mov
mov
cwtl
js
int
lods
int
in
xchg
ret
jb
lods
popa
mov
cmp
jmp
flds
pop
cmp
push
dec
imul
jecxz
push
scas
adc
add
mov
xchg
inc
lret
fdiv
jbe
addr16
shlb
enter
shr
stos
mov
les
es
cmpsb
faddl
movsl
push
fadds
stc
add
xchg
xor
movsl
das
push
push
jbe
or
pop
fidivrs
imul
scas
push
mov
mov
xchg
rcrb
lods
xchg
xor
mov
insl
aam
cli
inc
jg
adc
mov
mov
mov
popa
leave
andl
xchg
in
and
mov
leave
fisttpl
push
imul
mov
les
sub
mov
int
and
sub
jb
mov
imul
icebp
pop
pop
lcall
psubsw
mov
push
lea
mov
jl
lcall
int3
xchg
jl
lahf
mul
cmp
sbb
adc
xorb
cmp
push
stos
jecxz
fadds
insb
xchg
jnp
sub
jbe
fdivl
pop
outsl
je
lods
push
add
jns
subb
adc
call
rclb
push
xorl
test
int
jnp
test
enter
pop
cmp
test
int3
sbb
ljmp
jecxz
pusha
cmp
adc
outsb
andb
sub
addps
pop
adc
pop
pop
and
inc
dec
lcall
jns
cmp
aam
mov
push
outsb
cwtl
xchg
jns
aas
xor
adc
jg
dec
mov
sbb
mov
into
fmuls
cmc
jle
push
mov
jp
inc
mov
jg
xor
add
data16
aam
jp
xchg
lods
jb
push
test
cmpsl
add
pusha
cli
xor
sub
dec
into
dec
and
lods
push
test
pop
test
movl
push
jae
repnz
mov
push
push
inc
insb
cmp
cs
scas
decl
inc
imul
call
jg
mov
mov
cli
xor
jno
or
jmp
or
test
ret
mov
rorb
jl
jge
ss
decl
int3
jbe
mov
insb
adc
js
shlb
pop
push
pop
flds
notb
fmull
test
pusha
gs
mov
and
mov
mov
jb
es
std
cmc
dec
jae
lcall
xlat
insl
enter
lcall
xor
mov
orb
mov
mov
xchg
cmp
lret
fstl
faddl
push
xor
es
xchg
cmp
inc
addr16
add
and
pop
mov
and
push
or
cmp
aad
fcompl
test
mov
mov
cwtl
mov
not
scas
mov
sbb
outsb
and
sub
or
and
sub
add
mov
push
cwtl
fnstenv
leave
out
jg
lret
dec
jp
mov
jle
xor
int
pop
add
cld
cwtl
add
jg
lods
jge
fnstenv
cmp
daa
and
popa
mov
adc
icebp
sub
jmp
mov
roll
cld
jecxz
add
add
enter
cs
pop
lea
ficomps
or
cs
shll
jnp
mov
xchg
loope
loopne
jl
jno
cmp
dec
aaa
aam
fistl
mov
cmp
push
sub
xchg
xor
in
lret
cmp
ret
pusha
mov
lcall
fmulp
mov
push
adc
mov
in
andb
sbbl
cmc
mov
mov
and
sub
jecxz
push
jge
add
add
fdivl
inc
push
in
fwait
push
into
das
test
daa
lahf
frstpm(287
inc
insl
repz
andl
add
les
mov
mov
gs
pop
adc
pop
out
repnz
sbbb
add
push
nop
enter
iret
js
test
test
dec
mov
repnz
outsl
mov
jne
dec
dec
mov
scas
lahf
test
jae
sub
aam
ds
push
cmp
xor
mov
mov
sub
mov
xchg
xor
push
shlb
and
push
jnp
mov
test
sbb
jmp
mov
xor
jmp
or
outsb
das
test
jno
pushl
jge
adcl
xor
lods
addb
mov
nop
mov
push
xchg
dec
xchg
mov
test
sub
mov
xchg
cmp
bound
jae
repz
xor
lods
sbb
das
push
aaa
rcl
push
push
addr16
pop
stos
inc
fldcw
push
mov
cs
cmp
pop
insl
out
shl
sub
jne
ret
subl
sbb
inc
push
scas
mov
pusha
shll
aam
mov
mov
adc
aad
adc
test
in
pop
xchg
jnp
inc
fmull
cmp
aas
pop
mov
idivl
pushf
push
and
fsts
push
sub
push
xor
inc
pop
sarb
rolb
cmp
push
mov
iret
jns
lret
jmp
mov
or
punpckhbw
stos
xchg
in
jae
sub
or
and
and
insb
mov
or
push
dec
mov
jp
clc
sahf
imul
xchg
fwait
call
and
insl
fisttps
mov
movsl
scas
iret
and
rcrb
sarb
idivb
jmp
in
jmp
pusha
daa
adc
lcall
or
xor
stos
imul
and
push
test
fisubl
or
ja
test
ljmp
bound
into
ja
xchg
and
enter
push
sub
lea
rcll
aas
mov
std
sub
movsb
loopne
and
and
arpl
gs
pop
mov
stos
mov
out
imul
xor
dec
pop
push
xchg
loope
sbb
movsb
int3
icebp
idivb
fadds
adc
das
add
add
in
jle
adcb
inc
add
cmp
pop
dec
dec
push
fbld
inc
hlt
in
insb
mov
jnp
add
mov
adc
push
ret
iret
adc
xorl
xchg
out
leave
pop
out
push
cmp
inc
arpl
adc
std
in
cmc
in
outsl
inc
repz
repz
dec
pop
mov
clc
inc
xor
inc
and
and
or
xchg
shl
mov
push
int
mov
arpl
pop
enter
and
test
push
mov
add
xchg
mov
std
mov
pusha
out
pop
xor
ja
pop
sbb
sbb
cmpsl
pop
push
sub
ds
sbb
pop
mov
sbb
mov
push
sbb
cmpsb
insl
test
xrelease
push
cmp
add
cwtl
push
jp
lods
or
call
and
xchg
cwtl
dec
cmp
xchg
mov
into
adc
mulb
sub
add
cmp
mov
stos
lock
xor
mov
sub
insb
jae
push
lods
std
dec
adc
lds
leave
sub
push
sbb
out
idivb
imul
mov
push
mov
rolb
push
loope
int
push
cmp
adc
mov
add
sub
out
jnp
addl
mov
pop
scas
jmp
lcall
in
push
jecxz,pt
mov
dec
aaa
push
mov
cmp
shlb
xor
lret
cmp
stc
inc
ds
add
test
add
das
adc
inc
add
arpl
sub
jae
sbb
push
pushf
mov
les
mov
lahf
aas
adc
adc
mov
movsb
and
into
sub
cld
mov
mulb
mov
call
or
xchg
xlat
xor
imul
out
iret
lahf
jecxz
cli
or
sub
push
pop
sbbb
pop
leave
shlb
jg
mov
loopne
and
or
rol
pop
mov
inc
test
in
mov
mov
sub
xor
sti
jmp
outsb
or
mov
movsl
mov
push
das
mov
sbb
adc
inc
pop
jmp
das
in
int3
cltd
out
sub
shl
lahf
push
or
cmp
cltd
int
cmp
cs
js
int
mov
movsl
push
fwait
ja
and
push
xor
sbb
testb
or
out
test
sti
test
jmp
push
pop
ret
dec
jp
cmpsl
and
cmp
mov
idiv
dec
xor
dec
out
xor
or
lcall
fidivrl
mov
rolb
dec
push
inc
cmpsl
or
fildll
push
xchg
fdivs
add
xor
sarl
mov
lcall
jbe
pushf
mov
lock
int3
jge
sub
push
push
leave
inc
lea
mov
sub
and
test
mulb
mov
mull
sbbl
mov
sbb
rorl
scas
aam
and
scas
adc
sarl
mov
jbe
dec
test
cmp
mov
sbb
sbb
jl
loop
mov
nop
pop
inc
dec
push
or
and
and
pop
jecxz
xchg
pusha
test
sbb
push
scas
rolb
mov
cmpsb
adc
mov
lret
insb
xchg
add
xlat
movsl
sub
outsb
nop
negb
xor
dec
dec
aaa
aaa
cs
and
sbb
pop
push
mov
add
add
xchg
sahf
arpl
popa
pop
iret
mov
mov
sub
mov
jmp
mov
sbb
das
fimuls
ret
in
sub
mov
aas
or
rol
aam
xor
jl
xchg
shrl
insb
inc
test
jo
mov
rcrl
mov
add
jae
sub
xor
sub
mov
adc
jmp
scas
dec
cmp
dec
mov
xor
out
or
out
lret
fmul
cmpsl
mov
in
cmp
dec
test
xorl
lods
js
push
inc
and
jno
scas
ljmp
cmp
jb
cmp
push
jb
jae
stos
stos
mov
and
inc
shl
push
addr16
mov
jle
push
out
xor
das
sbbb
xchg
dec
jb
pop
or
adc
sahf
xor
cmp
sbb
sbb
repnz
hlt
cwtl
imul
sub
stos
jg
std
dec
lods
loop
cmpsb
gs
mov
cmp
mov
sbb
ret
mov
jp
hlt
scas
inc
push
out
add
push
xchg
xchg
stc
cmpsb
clc
cmp
hlt
and
out
movsl
sahf
dec
and
mov
sub
shl
aas
dec
hlt
mov
fidivs
in
pusha
mov
and
mov
xchg
clc
sbb
fsubs
adc
and
js
adc
iret
in
shlb
into
fnstcw
data16
or
pop
inc
lods
aaa
jmp
stos
aad
pop
xchg
push
fiaddl
inc
sahf
cmp
out
cwtl
in
ss
jne
addr16
inc
shll
and
add
in
mov
icebp
pop
icebp
sbb
cwtl
add
jl
xchg
sbb
adc
cmc
xchg
loopne
pop
push
sbb
mov
mov
scas
ja
leave
xor
inc
push
jecxz
or
mov
fistpll
enter
inc
dec
mov
data16
ljmp
jecxz
mov
xor
push
pop
in
call
in
cmc
xchg
rclb
mov
mov
arpl
or
adc
push
push
sbbl
jnp
lret
lret
aam
push
fs
jns
rcl
adc
repnz
or
xor
sarl
imul
or
jge
sbb
mov
inc
push
rolb
out
adc
add
jle
stos
mov
jmp
sti
jnp
test
adc
insl
push
sarb
cmp
addr16
lret
arpl
out
mov
mov
sahf
in
xor
shll
mov
in
add
addl
xchg
int3
shrb
popa
pop
dec
inc
push
jge
sar
in
cmp
xlat
bound
enter
out
pop
sbb
xchg
cli
and
ljmp
or
xchg
pop
mov
dec
nop
jbe
fcomip
fsubrs
nop
and
push
sti
std
movsl
call
leave
loop
loope
pop
push
adc
add
out
xchg
mov
and
mov
pop
dec
pusha
enter
pop
cmp
enter
inc
js
mull
gs
or
andl
mov
jne
push
jo
xchg
xor
aaa
push
and
scas
or
jecxz
outsb
lock
loopne
cmp
ds
lds
aad
ja
mov
adc
stc
push
push
je
pop
inc
jmp
inc
and
and
and
or
xor
fbld
dec
push
mov
cmpsb
jl
popf
movsb
sar
in
dec
jne
and
xor
mov
rclb
shlb
add
out
jp
and
and
jge
sti
lods
push
adc
movsb
jae
add
mov
int
xor
mov
fldt
xchg
or
sub
sarb
xchg
into
adc
xlat
imul
repz
mov
out
je
es
dec
mov
out
adc
add
add
sbb
xchg
push
cli
xor
rol
cmpsl
mov
in
in
popa
mov
adcb
or
out
mov
adc
mov
out
adc
mov
stos
in
sbb
add
dec
or
or
in
out
jbe
les
aam
lods
xchg
inc
and
xorb
inc
ljmp
into
jae
mov
prefetch
fwait
cmp
sbbb
js
ljmp
pop
pop
cs
adc
sub
imul
mov
sbb
inc
xchg
sub
lds
and
pop
xor
subb
xchg
xor
push
mov
incl
pop
incb
sti
xor
add
stc
xchg
sub
jl
push
mov
inc
cmp
lock
fstpl
divb
das
cltd
jge
stos
sbb
push
iret
adc
test
xor
xchg
or
and
call
pop
lahf
mov
pop
mov
mov
stos
cltd
cli
push
mov
jp
movsl
out
xchg
adc
xlat
fisubl
aad
popf
add
xchg
sbb
gs
test
stc
mov
push
ficoml
xchg
and
pop
pop
data16
fmuls
and
icebp
sbb
xor
outsl
mov
add
or
mov
mov
ret
cmp
in
out
adc
push
adc
dec
mov
mov
sbb
cmp
bound
out
loop
scas
ss
push
mov
arpl
xchg
std
lret
scas
add
or
cld
fldl
daa
icebp
push
mov
sbb
sub
lret
inc
cltd
push
and
xchg
inc
and
or
sub
pop
in
jecxz
imul
stos
bnd
push
idiv
ja
negl
int3
nop
lods
daa
dec
push
pop
push
pop
mov
lds
cmc
psraw
jns
inc
lea
push
sub
arpl
mov
sti
and
nop
jnp
and
dec
lret
ficoml
sbb
int
or
pop
lea
ret
sbb
xchg
jbe
sbb
jmp
xor
fucomip
adc
mov
dec
into
dec
cmp
xchg
fcoml
jge
into
and
mov
lods
gs
jl
pop
mov
pop
push
sbb
dec
lret
fildll
sbbl
popa
mov
fildl
loope
loopne
movsb
jge
pop
pushl
std
xchg
push
adcb
xor
and
inc
pop
and
xlat
jmp
mov
nop
push
mulb
cltd
jmp
xlat
dec
mov
push
push
insl
test
rolb
pop
push
push
shrl
fwait
pop
pop
rep
pop
dec
mov
xor
adc
cmp
pushf
xchg
mov
out
and
icebp
lcall
adc
push
lods
gs
mov
mov
xchg
pop
mov
sti
push
jo
into
shr
add
sarb
ljmp
xor
in
mov
cltd
mov
lret
pop
dec
mov
xchg
mull
aad
test
mov
ljmp
add
add
sbbb
dec
push
mov
push
imul
jg
imulb
stos
stc
jae
push
movsl
fisubrl
ja
test
cltd
dec
sti
popf
mov
fs
lea
push
xor
cmpsl
cltd
jne
outsb
push
bound
jne
clc
loope
movsl
ljmp
std
pop
pop
xchg
jne
fwait
aam
sbb
inc
ret
fs
cmpsb
ss
push
lea
je
or
fisubrl
fwait
idivb
stc
xchg
push
lcall
jmp
add
or
insl
into
nop
cld
pusha
lods
push
inc
jne
mov
lsl
mov
push
loop
adc
in
testb
in
and
in
rcrl
iret
test
mov
icebp
mov
call
stc
mov
dec
and
das
loopne
aas
inc
jbe
data16
xchg
js
aam
or
aad
pop
add
jp
mov
imul
or
pop
sub
mov
sar
jge
mov
stc
mov
fs
fsubrl
xlat
push
sbb
scas
pop
jnp
insl
pop
aaa
mov
gs
rcr
lods
in
pop
add
inc
test
lahf
pop
orb
fsts
jne
or
fs
es
lret
push
pop
ljmp
shll
cmp
imul
cmpsb
lcall
addr16
lret
inc
bound
cmpsl
iret
ret
or
std
cmc
fcomp
loopne
mov
fs
outsb
xchg
insl
push
leave
lahf
insb
aam
lret
nop
push
outsl
subl
mov
fwait
xor
push
push
push
ret
xchg
add
ds
sub
pop
jno
nop
ljmp
loopne
aas
xor
std
fisttps
xor
sbb
dec
dec
mov
mov
movsl
sub
cmpsb
shll
xlat
xor
insb
subb
fdivrl
imul
mov
in
cmp
lods
pop
adc
fiaddl
mov
jne
lret
jnp
sbb
and
jl
jno
dec
sbb
loop
and
pop
xchg
es
jne
lahf
and
adc
inc
iret
sub
clc
std
into
outsl
popa
int
out
add
mov
sahf
sar
cmp
insl
rclb
xor
ljmp
adc
cmpl
sbb
cmp
mov
and
sub
pop
xor
pop
call
cmp
ret
xchg
adc
mov
js
cmp
jae
sti
cmp
dec
dec
mov
dec
dec
jle
test
das
and
jecxz
add
push
and
outsl
out
nop
push
xorl
or
jbe
aam
xchg
mov
jp
push
push
fwait
pop
gs
aaa
out
je
mov
fcomps
jb
mov
and
mov
rcrb
xchg
aaa
stc
rorb
std
fimull
dec
jno
adc
jne
ret
xchg
push
sbbl
mul
mov
inc
or
iret
dec
test
mov
ret
push
lods
xchg
xchg
pop
pop
ret
fwait
test
and
sbb
insl
lds
add
mov
push
jb
lods
mov
scas
jl
sub
cmc
divb
test
data16
sbb
mov
test
or
cmpsl
push
sbb
adc
pop
push
outsl
adc
cmc
int
mull
adc
mov
out
add
daa
jmp
or
dec
push
loope
mov
ja
xchg
xchg
xchg
stos
push
cltd
je
stos
jmp
mov
in
rol
addb
mov
xchg
insl
inc
int3
rclb
loopne
in
pop
stos
arpl
sbb
or
xor
lds
lcall
sub
ficoms
leave
mov
fnstsw
pop
scas
or
jle
jecxz
jge
icebp
jns
inc
sub
mov
mov
mov
fstpt
fsubr
filds
inc
cld
pop
inc
out
in
das
les
out
int
test
in
pop
lcall
sbb
push
outsb
fwait
dec
cmpsl
push
xor
arpl
inc
mov
adc
cs
cwtl
aad
xor
and
push
cmp
xchg
repnz
scas
iret
dec
push
xor
les
lock
pop
mov
cmp
neg
sbb
test
jmp
or
movsl
lret
dec
popf
xor
out
sub
and
pop
ficoml
out
fisttps
hlt
adc
sahf
pop
sub
sub
push
cld
push
pop
ret
mov
fcom
fisttpl
adc
or
or
bound
sub
pop
in
xchg
int
scas
cli
jecxz
cli
clc
mov
jns
sub
fisttps
test
outsl
std
mov
ror
mov
adc
pop
mov
out
push
jb
jge
cld
cs
cmc
in
test
scas
decb
sarb
in
std
jae
jg
pop
and
flds
sbb
jnp
adc
push
inc
push
jnp
push
leave
dec
ljmp
test
jmp
imul
push
inc
pop
cmp
mov
jle
decb
push
mov
test
sar
popf
xchg
daa
mov
pusha
dec
in
inc
add
lods
lcall
xlat
pop
xlat
jle
jns
es
leave
addr16
ret
pop
outsl
hlt
cmpsl
out
fiadds
cs
popf
popf
mov
xor
inc
es
add
decl
or
les
jl
mov
sub
sub
mov
adc
loop
mov
stc
scas
inc
push
mov
fsub
jbe
inc
push
fnstcw
pop
mov
jge
adc
scas
outsl
hlt
or
mov
or
mov
and
cltd
add
mov
jle
sbb
je
cli
lahf
dec
ljmp
inc
push
mov
fstpt
ss
dec
lret
mov
or
aaa
aaa
aam
mov
in
out
sahf
pop
jecxz
mov
inc
adc
cmpsb
mov
add
mov
adc
clc
test
ljmp
xor
js
ret
ret
fiaddl
in
mov
insl
into
out
sbb
and
and
mov
xchg
add
push
xlat
dec
ss
in
mov
test
push
push
nop
mov
and
push
aad
jmp
jg
out
filds
leave
lock
pop
mov
ret
sbb
mov
push
adc
mov
mov
mov
push
call
lods
arpl
mov
xor
shl
mov
xchg
dec
repnz
pusha
stos
cmp
mov
jg
xchg
hlt
xchg
mov
scas
jmp
leave
and
test
cmpsl
into
out
pusha
adc
jmp
push
out
or
and
adc
sub
mov
les
fsts
pop
les
aam
leave
lock
push
shr
es
pop
mov
lock
outsl
add
nop
add
outsb
pop
cmc
xchg
adcb
in
jo
jno
rcl
mov
imul
mov
jbe
jb
push
adc
push
adc
divl
cmpl
cmp
adc
mov
dec
test
fisttps
cmp
repz
xor
xchg
add
in
pop
in
movsb
shrb
push
inc
test
mov
add
fbld
lods
movsb
dec
clc
fwait
adc
dec
xor
in
mov
mov
outsl
pop
arpl
push
out
mov
jmp
push
cmpl
repz
ja
inc
int3
pop
in
cli
mov
and
dec
stos
or
loopne
and
sarb
int3
mov
bound
xlat
in
ja
arpl
inc
rol
cmp
sbbl
out
xchg
popf
jns
lret
or
and
add
jg
rcrl
jl
add
les
inc
divb
adc
mov
in
stos
repz
mul
daa
popf
leave
into
jp
in
sbb
xchg
pop
mov
lds
mov
xchg
adc
adc
cmpsb
xchg
xchg
pop
outsb
mov
dec
fidivl
inc
jl
nop
lock
and
loopne
out
daa
outsl
aas
shll
add
push
pop
adc
dec
sbbb
jmp
jns
fstps
fimull
mov
adc
mov
stos
or
ret
add
dec
inc
sti
scas
dec
push
inc
lock
mov
mov
push
test
lcall
sbbb
fs
fldt
lea
adc
adc
mov
inc
lock
fldl2e
jb
outsb
mov
les
test
cld
sbbl
xchg
dec
dec
and
inc
pop
xchg
mov
mov
test
or
or
pop
sub
mov
push
stc
cld
jle
lock
adc
mov
das
jg
lods
xlat
mov
jecxz
cmpsb
punpckhdq
std
mov
lods
test
outsl
outsb
sub
loope
mov
mov
fwait
lods
xor
fwait
dec
inc
imul
mov
js
or
pushf
or
push
pop
mov
enter
das
add
lret
popa
packssdw
loopne
loope
icebp
mov
dec
xchg
mov
sbb
movsl
ffreep
push
addr16
mov
mov
and
xchg
lods
rol
sub
loopne
jae
loope
nop
div
cmc
in
xchg
leave
arpl
daa
xchg
stos
dec
adc
mov
xchg
cmp
mov
fnstcw
and
mov
lods
lds
cmp
push
nop
in
ret
mov
cwtl
sub
loop
or
in
adc
mov
push
movsb
xor
pop
fs
mov
jmp
bound
imul
pushf
push
scas
mov
sti
nop
fmuls
xchg
bound
fdivs
mov
sub
pop
sub
mov
cmp
cltd
inc
adc
rcl
testb
lock
addb
rol
lcall
mov
pop
aam
xor
lock
out
sbb
lret
mov
fsubrl
pop
ljmp
pop
idiv
add
cmp
outsl
push
jne
movsl
loope
sbb
mov
mov
fdivr
lahf
push
loop
imul
fcmovu
and
adc
xchg
cmp
rclb
pop
xor
ficomps
jnp
sub
pop
mov
popf
out
int
push
stc
push
inc
pop
out
xchg
out
add
shll
mov
mov
xchg
leave
and
mov
mov
fnstsw
pusha
mov
xor
sub
cmp
lcall
pop
xor
gs
jb
imul
fistps
inc
repnz
or
sub
push
cmc
insl
adc
xchg
mov
add
pop
xchg
sub
daa
jge
xchg
mov
push
adc
pop
mov
mov
fisttps
push
xor
sub
and
inc
xchg
xor
xchg
clc
xchg
sahf
popf
sbb
inc
sbbl
fcoms
mov
iret
sbb
aad
and
mov
subb
rorb
test
or
std
sbb
dec
cmp
mov
mov
mov
out
xchg
in
stos
jns
repz
sub
adc
notl
cmp
mov
and
push
sub
pop
sub
fstl
out
fisttps
adc
mov
mov
mov
and
and
orb
xchg
out
and
pop
iret
lea
inc
mov
adc
and
icebp
jmp
xchg
or
mov
or
aam
push
lods
popf
incb
adc
dec
jb
loop
insb
ds
int3
jns
inc
aaa
push
mov
add
inc
sbb
mov
loopne
outsl
test
mov
pop
test
and
fistps
fcomps
inc
sbb
mov
popa
idivb
push
mov
fcomps
imul
addr16
lods
bound
sbb
sub
push
xlat
repnz
add
stc
in
jl
xor
sub
and
dec
roll
dec
mov
inc
iret
jne
mov
push
push
fstpt
sub
fcomps
push
push
pop
sarb
outsb
mov
insl
push
aaa
les
rolb
adc
xchg
dec
ja
daa
sub
cmp
in
data16
movl
mov
sub
outsl
pop
mov
test
data16
scas
dec
movsb
sub
xor
xor
pop
inc
aaa
jecxz
push
xor
mov
test
xor
aad
or
dec
fucomi
pop
and
push
jecxz
pop
pop
and
out
lret
leave
scas
aaa
inc
jo
add
add
into
aaa
cs
push
imull
xchg
mov
push
jbe
mov
add
stos
mov
fsts
inc
insl
seta
adc
or
cld
adc
flds
subl
test
inc
lcall
mov
pop
xchg
js
cmp
in
jge
insl
lret
inc
fwait
in
sbb
mov
cmp
pop
sti
jno
je
pop
pop
adc
mov
jecxz
das
dec
mov
hlt
or
mov
mov
in
in
jns
xchg
enter
fnsave
jo
mov
inc
ljmp
sub
arpl
je
mov
fwait
xor
add
clc
cwtl
jmp
dec
out
add
lret
inc
cltd
lods
lods
inc
jmp
mov
pop
fiaddl
fcmovnu
fdivrl
aaa
push
movsb
jnp
inc
ds
enter
cld
dec
int
xchg
loope
iret
sbb
inc
fsts
jmp
cmpsl
sbb
inc
repnz
cmpsb
pop
iret
imul
pop
xor
lret
mov
nop
mov
lret
mov
loopne
adc
push
popf
add
jnp
push
lret
adcl
fnstenv
call
xor
inc
das
mov
inc
push
sbb
cli
les
in
adc
jmp
in
pop
mov
out
stc
xor
sahf
lock
jb
loope
cmc
test
loope
or
xor
ss
addr16
cmp
pop
arpl
lcall
mov
push
negl
std
mov
mov
in
cmp
mov
and
in
mov
mov
movsl
gs
or
fs
adc
adc
pop
mov
test
frstor
iret
aam
jbe
cmp
mov
dec
jl
push
adc
pusha
lahf
xlat
lea
sub
dec
dec
pop
inc
cli
movsl
mov
fisubrs
in
mov
inc
xor
hlt
mov
test
push
xor
nop
push
cmp
pushf
icebp
dec
xchg
dec
test
lods
adc
and
mov
mov
and
cmp
push
dec
pop
les
sub
adcb
lods
out
out
rcrb
test
inc
cmc
lret
sub
or
xchg
adc
xchg
stos
loope
loopne
aad
mov
jae
sbb
sub
mov
xor
clc
stos
pop
stc
icebp
pop
and
popf
xchg
pushf
ret
std
jg
dec
mov
cmp
test
in
in
call
orl
jns
cmpsb
pop
pop
bound
ja
ds
cli
in
inc
pop
les
movsl
pop
mov
loopne
ljmp
add
add
sub
xor
icebp
loopne
out
test
cmp
in
test
test
int
jae
movb
and
in
lret
sub
inc
mov
cmpsl
mov
imul
sahf
mov
push
adc
stos
or
mov
or
jbe
adc
loopne
xchg
loopne
adc
sub
movsl
rol
mov
std
xorl
cmp
push
xor
in
and
ljmp
call
inc
inc
xchg
add
ljmp
adc
mov
in
test
sub
xor
aas
lea
pop
or
fs
loopne
movsb
push
lds
gs
or
fcmove
add
imulb
jno
popa
adc
fldcw
mov
orb
test
dec
lret
jno
xlat
ja
hlt
mov
xchg
cmp
enter
ficompl
cmp
sbb
ja
popf
dec
mov
data16
jp
into
iret
clc
mov
fwait
xor
push
and
dec
sub
in
or
xor
int3
xchg
sbb
or
inc
ficoml
scas
pop
ljmp
pop
pop
les
add
mov
sahf
sbb
jo
jge
stc
and
mov
test
dec
mov
fsub
mov
jecxz
outsb
sbb
fwait
repz
dec
sti
ljmp
sub
sub
jae
push
or
jmp
mov
sbb
pop
add
push
cmpsb
xchg
sbb
pop
addl
call
ficoml
mov
jle
test
enter
adc
dec
add
mov
adc
mov
adc
cltd
pop
lock
pop
leave
scas
or
jb
hlt
sbb
shlb
sub
inc
out
pop
dec
call
pop
jecxz
lcall
inc
sub
pop
or
push
bound
dec
and
pop
xchg
lcall
aam
cmp
cli
cs
xor
lea
mov
mov
mov
inc
xchg
insl
pop
mov
push
push
and
lods
xor
add
bound
imul
pop
and
mov
and
push
mov
mov
mov
xor
mov
sub
popa
fidivs
std
pop
sub
outsl
mov
jne
cmc
mov
adcl
or
scas
adc
fimuls
xchg
iretw
and
push
cmpsl
sub
mov
push
cmc
inc
into
jecxz
dec
mov
fld
pandn
ljmp
in
dec
stos
shr
cmc
sti
pop
adcl
or
ret
repz
dec
mov
mov
dec
mov
lea
scas
rcrb
add
or
in
jno
dec
add
inc
rcr
les
fidivs
cmp
push
sub
mov
sbb
fsubl
lds
stos
mov
pop
hlt
cmpsl
sub
add
mov
sbb
pushf
mov
dec
jp
push
lcall
jbe,pt
push
shrb
cli
mov
lea
add
in
mov
sbb
push
mov
sbb
and
cwtl
inc
fistpl
aam
push
sbb
iret
xor
into
es
jne
and
pop
cmp
dec
jl
icebp
xor
xchg
aad
cli
jg
test
adc
adc
fisubrl
dec
xchg
std
xchg
jae
push
and
fcomp
lods
hlt
cmp
xlat
scas
fcompl
xchg
shlb
inc
and
sub
stos
cmp
pop
or
fsubl
or
sub
mov
mov
jo
pop
push
inc
mov
test
call
ja
jg
add
roll
push
lods
mov
aas
jecxz
clc
fwait
jb
dec
shr
pop
mov
push
jl
inc
inc
or
mov
and
std
iret
inc
dec
lods
push
ljmp
push
pop
mov
inc
adc
iret
cmc
insb
jmp
cmp
push
sar
sbb
pop
jno
call
jo
xchg
rcll
cmpb
add
or
dec
shrb
dec
jns
notl
shlb
sbb
bound
jmp
adc
xchg
popa
cld
lcall
lods
mov
pop
pusha
and
mov
xchg
mov
out
fs
cmp
stc
cmp
sahf
arpl
test
push
mov
andb
fnstcw
jecxz
fcoml
inc
lret
or
inc
xor
inc
je
cmp
and
jmp
arpl
outsb
psadbw
jo
xlat
les
loopne
bound
test
scas
orl
jne
inc
mov
leave
notl
jle
xchg
push
sub
cwtl
mov
les
lret
xchg
mov
cmp
mov
push
cmp
push
addb
cmc
in
nop
jge
cmp
or
imul
jo
jne
and
mov
cmp
ja
out
mov
mov
divb
sub
push
nop
lea
test
je
mov
cltd
cmp
mov
mov
mov
loop
or
test
aad
mov
mov
shr
dec
mov
adcl
inc
cld
push
xor
mov
sbb
inc
out
or
mov
nopl
dec
jnp
and
push
cmpsb
and
jmp
icebp
lods
mov
cmp
and
and
xchg
sub
in
outsb
pop
fstps
push
arpl
push
les
sbb
sbb
insb
movsb
pop
clc
sarl
cmp
mov
push
les
imul
mov
pop
jmp
mov
push
sysret
cmpb
test
cmp
xor
mov
sbb
ljmp
out
inc
pop
mov
jno
fsubrl
loop
mov
out
cmpsb
cmp
inc
push
dec
test
jecxz
aaa
lock
icebp
lods
stos
mov
fidivrs
dec
push
xchg
ss
outsb
or
ja
fsts
cwtl
mov
inc
lret
cmp
pop
wrmsr
mov
aaa
cmpsl
xor
pop
xchg
jl
decl
mov
mov
mov
lret
das
inc
movzwl
push
and
mov
nop
and
pushf
mov
mov
xchg
iret
subb
in
out
mov
lock
das
in
and
call
arpl
cmp
jge
mov
testb
loopne
and
xchg
fsubs
js
les
imull
xor
jbe
sbb
pushf
mov
jl
jae
dec
cwtl
inc
push
add
andl
ljmp
jmp
xchg
les
dec
popf
popl
adc
fucomi
push
aas
push
sahf
stc
and
sub
dec
inc
cmp
add
mov
nop
adc
lock
rcrl
cmpsl
jecxz
out
xchg
xor
push
mov
leave
mov
lds
aas
mov
and
jnp
jb
stos
cmp
lret
adc
xor
call
push
frstor
mov
mov
inc
cmp
pop
shll
cmp
push
out
es
pop
jl
lret
mov
fimull
jnp,pt
mov
fldcw
addr16
in
cmp
pop
sbb
jecxz
push
or
add
push
push
leave
and
push
sbb
mov
or
adc
adc
int3
aad
add
mov
dec
fs
cmp
shl
addb
mov
and
and
sbb
jg
es
mov
jb
push
fsubs
inc
icebp
pop
mov
inc
jmp
nop
jge
jnp
xlat
push
inc
add
push
pop
inc
sub
adc
jb
mov
imul
xor
pop
fld
ret
inc
mov
push
or
std
or
in
test
int3
fs
inc
mov
xor
fs
sbb
and
cltd
or
push
mov
jnp
jo
push
push
xor
nop
push
mov
inc
lret
in
add
subl
cltd
mov
repnz
lret
mov
mov
mov
inc
sub
xor
dec
mov
scas
rcr
push
icebp
push
and
and
ss
pop
mov
movswl
dec
fstl
push
mov
mov
cld
in
push
mov
adc
xor
shll
mov
pop
ret
sub
daa
je
mov
cmpb
pop
mov
jp
outsl
sub
and
xchg
pop
gs
xchg
sti
cmpsb
pop
iret
cmp
test
xor
ss
add
inc
and
xchg
push
fstps
mov
mov
lahf
lods
adc
sbb
lock
stc
mov
xor
or
lret
ficompl
hlt
pop
loop
fsubl
cmpsb
add
gs
movsl
mov
inc
jl
mov
shll
test
push
cmpl
inc
dec
lds
lahf
adc
sub
mov
mov
std
in
test
inc
int3
out
fwait
add
fdivr
es
adc
mov
sub
inc
xor
bound
push
mov
sub
shrl
mov
lods
cmpsl
call
mov
test
cmp
lods
aad
cmpsb
outsl
xor
pop
push
pop
ss
rcl
pop
mov
imul
enter
in
and
push
lock
leave
and
jnp
push
cmc
mov
jp
add
js
and
sti
sub
fidivl
mov
pop
xchg
je
dec
mov
mov
jns
add
or
xor
lods
sbb
fs
cmp
imul
lcall
ljmp
ret
movsb
mov
cmp
test
clc
mov
daa
shrl
push
stos
jns
pop
sbb
aaa
rcrl
xchg
mov
lahf
sahf
xor
jge
adc
rcrl
lahf
mov
sbb
inc
pop
int3
movsb
cmpsl
mov
mov
pop
sbbl
lods
sbb
cld
fists
pushf
jne
xor
xchg
dec
mov
or
mov
jg
push
pop
mov
or
mov
clc
dec
insb
rclb
test
sub
and
mov
sub
std
movsl
dec
rcrl
mov
adc
mov
pop
subb
mov
sbb
addr16
xchg
loope
pop
imul
push
hlt
js
pop
addb
and
adc
pop
push
mov
sbb
pop
push
mov
loopne,pt
aad
pop
sbb
mov
pop
ljmp
lahf
sti
pop
xchg
fs
aaa
push
and
mov
push
xchg
pop
pop
push
pop
mov
xchg
cld
sub
int
push
sarl
mov
adc
mov
pusha
neg
fstpt
mov
jecxz
cld
jg
fistps
jne
xor
rolb
mov
call
test
or
rcrl
leave
lds
and
xor
lcall
sti
sub
or
mov
pop
in
dec
pop
pop
mov
dec
int3
jno
cmpsl
lcall
outsb
xor
jp
jne
ds
mov
push
in
js
add
sti
mov
or
icebp
and
sub
lcall
jne,pn
out
mov
pop
mov
xchg
adc
adc
idivb
add
into
je
es
int
testb
std
add
sub
and
aad
stos
mov
pop
stos
jge
inc
mov
hlt
mov
insb
sub
fcomi
dec
mov
call
push
mov
and
inc
mov
seto
push
push
push
xor
adc
lret
mov
cli
xor
pop
sbb
lcall
xchg
sbb
mov
pop
cltd
mov
mov
xchg
imul
cmp
sub
ljmp
pushf
icebp
inc
bound
pop
or
js
jne
cltd
dec
repz
push
lds
in
repnz
mov
add
imul
ret
ljmp
std
les
mov
and
stc
lea
or
lods
pop
jmp
pop
out
cmp
inc
rcrl
pop
sbb
dec
ljmp
imul
sti
xlat
sub
test
lret
sti
insb
sub
cmp
shll
push
stos
pop
mov
cmp
xor
lods
in
jmp
nop
sbb
or
mov
fucomi
mov
in
mov
fidivrl
cmpsl
xchg
push
mov
lods
xchg
dec
mov
pushf
cmp
xchg
faddl
icebp
rcr
sub
jo
push
arpl
mov
inc
mov
lretw
push
cs
cmp
mov
xchg
in
xor
scas
jl
dec
push
sub
push
mov
sbb
lds
popl
loopne
xchg
lret
push
pop
adc
adc
mov
xlat
maskmovq
push
out
mov
dec
stc
aaa
jle
fstl
cld
jo
push
mov
sarb
lock
ds
dec
popa
dec
and
jb
fsubr
inc
cmp
mov
mov
adc
mov
ficoms
fwait
push
add
outsb
sub
test
push
sbb
sbb
push
ss
push
xor
cmp
mov
enter
les
xchg
icebp
stos
jl
sbb
pushf
jb
push
popa
inc
fcmovnu
dec
dec
add
cltd
dec
jno
pop
addr16
or
lret
into
sub
shll
insb
mov
jnp
or
jb
mov
lds
lret
jo
rolb
push
jp
and
add
cmp
test
mov
dec
shl
and
mov
sbb
or
ja
popf
lahf
jg
mov
xor
cmp
xor
mov
add
cwtl
mov
add
sbb
loopne
test
movsb
addr16
xor
jge
sahf
cmp
out
dec
and
loopne
jbe
in
jns
jnp
dec
xor
push
jo
or
gs
push
std
ret
cmp
inc
pop
lea
and
pop
mov
fsts
out
jge
fstpt
loopne
rclb
sbb
imul
mov
jl
mov
loop
or
cmp
outsb
jns
and
bound
jle
cld
mov
rorl
push
arpl
mov
jmp
sbb
mov
sub
sbb
pushf
lcall
push
inc
les
or
insb
pop
xor
sub
std
rorl
sti
xchg
ret
mov
mov
imul
daa
cli
xchg
popa
sbb
mov
icebp
stos
repnz
lods
cltd
out
cmpl
pop
jb
rorl
and
and
fdivrl
sbb
jecxz
xlat
pop
das
insl
mov
stos
dec
rolb
out
xchg
push
or
xchg
mull
lods
inc
fdivrl
sbb
sub
hlt
out
stc
icebp
rcrl
adc
push
fwait
icebp
pushf
add
sub
adc
xchg
cmp
jne
outsb
mov
cwtl
xchg
mov
popf
fisttps
or
pusha
push
call
adc
cs
push
mov
adc
fldt
leave
cmpsb
inc
mov
mov
cld
cmp
sub
mov
cmp
bsf
and
fwait
data16
insl
fcoml
sahf
inc
xchg
xor
movsb
jmp
mov
push
push
add
or
enter
inc
adc
pop
divb
and
ret
sbb
shlb
push
inc
divl
pop
xchg
in
int
enter
int
aas
cli
dec
adc
and
lret
inc
and
xchg
test
pop
daa
xor
ret
mov
dec
adc
insb
fstl
ja
es
add
das
movsb
mov
dec
lret
in
mov
sbb
mov
and
pop
sub
adcb
push
aad
mov
adc
fiaddl
mov
iret
jno
add
lret
aaa
jne
imul
rolw
aam
ud2
sbb
sub
jmp
xor
jo
lcall
push
stc
inc
xchg
shr
cmpl
xor
dec
cmp
out
and
mov
adc
in
call
scas
shlb
ret
mov
and
not
push
in
insl
sub
loop
mov
hlt
pop
out
fwait
out
in
in
jge
popf
cli
shll
out
push
or
xorl
movd
loope
std
dec
push
jb
and
push
inc
dec
scas
nop
loopne
ja
repnz
dec
inc
xchg
pop
cmp
cmp
adc
xor
lcall
add
decb
fdivs
mov
jnp
in
sub
adc
mov
fldt
xlat
mov
repnz
jae
std
push
leave
rcl
movsl
sub
or
int3
inc
xor
icebp
push
js
jmp
loope
insl
mov
pop
sub
ja
repnz
mov
loopne
in
mov
add
push
lods
insl
and
jp
push
adc
lea
or
pusha
in
mov
xor
and
out
lock
or
insl
mov
aad
xor
sub
or
jg
add
xor
and
jg
jle
fidivs
sub
or
or
xchg
lret
cmp
scas
sbb
mov
pop
in
xchg
pop
test
mov
jmp
ja
lds
sub
insl
push
sbb
test
mov
cmc
clc
cmp
push
out
rcll
and
shrb
lods
addb
lahf
or
xchg
sbbb
dec
adc
popf
data16
push
mov
sahf
cmc
repnz
pop
push
mov
pusha
sbb
jg
sarb
cmpb
lret
pop
cmp
shr
ret
adc
vpsllq
pop
rol
add
sub
test
dec
dec
cmp
fisubrl
fiadds
subb
scas
in
incb
mov
mov
jb
xchg
or
lcall
dec
xor
andl
sub
sbb
cmc
aam
insl
dec
int3
ds
imul
bound
or
mov
pop
push
lods
popf
push
negl
mov
push
xchg
lahf
cmc
inc
and
dec
jecxz
int3
rcr
adcb
ljmp
cli
sub
xorl
and
xchg
and
jmp
js
adc
int
pushf
popf
lods
imul
or
add
or
jmp
xor
jb
adc
jl
pop
xchg
cmp
mov
incb
mov
push
jle
imul
pop
test
lock
out
sub
mov
xor
je
cli
idivb
insb
add
sbb
cmp
imul
loop
out
out
pushf
push
and
sub
cwtl
in
lods
ds
sub
sbb
outsl
stos
sub
jae
test
subl
fldcw
inc
cmp
add
cmp
adc
repz
xor
orl
std
outsl
mov
xchg
mov
imul
jo
repz
sbb
std
jnp
subl
cli
pop
lret
movsb
lds
inc
dec
insl
jae
loope
repz
test
arpl
fisubrl
cld
lret
out
imul
add
add
pusha
pop
in
xchg
ja
ret
cmp
nop
or
cmp
rolb
dec
push
sbb
push
lods
push
mov
pop
aam
xchg
mov
lret
ret
nop
dec
or
int3
stos
adc
or
out
jle
je
repz
push
jb
xchg
outsb
outsl
or
movsl
mov
or
mov
mov
lcall
sub
lret
test
repnz
lret
cmp
xor
jg
ss
mov
jmp
jg
xchg
shll
stc
jae
scas
dec
mov
sub
adc
loope
add
aam
sti
aad
cld
icebp
jo
or
jge
and
outsb
fnsave
ljmp
and
xchg
lea
add
popa
or
aaa
and
fdivrs
fcom
mov
pusha
add
mov
mov
xchg
add
lret
lods
and
adc
push
rcll
or
mov
in
fisttpl
sbb
xchg
xchg
inc
shlb
lahf
stc
in
enter
adc
mov
das
mov
bound
push
xchg
sbb
sbb
repz
cwtl
and
push
cli
dec
adc
mov
test
arpl
xchg
and
mov
movups
xchg
mov
je
push
mov
xor
xor
movsb
fnstcw
xchg
repnz
and
sarl
xor
addr16
aas
add
add
fadds
cli
sbb
push
pop
xchg
mov
pop
les
jns
adc
pop
mov
push
xor
add
dec
enter
jne
or
iret
out
aaa
test
stos
insl
pushf
adc
xor
mov
sub
cld
xchg
jbe
divl
or
fs
dec
mov
fcomps
inc
test
leave
aas
inc
push
iret
adc
sahf
stos
jae
pavgw
neg
jg
cli
bound
sbb
pop
stos
out
adc
je
outsl
fdivrl
stos
sar
pushf
pop
sti
pop
xor
inc
sub
jle
loope
sub
xchg
or
push
jae
inc
mov
pop
mov
jp
inc
xchg
dec
and
xor
xchg
arpl
aam
mov
xor
inc
aas
mov
lock
stc
cld
cmp
out
and
rclb
xchg
inc
imul
pop
repz
leave
orb
addl
clc
ret
inc
push
push
insb
sbb
xchg
mov
bound
iret
loop
xor
cwtl
adc
mov
jmp
test
pop
into
dec
out
jae
cltd
pop
xchg
cmpsb
dec
aaa
scas
prefetchwt1
ja
sub
pushl
int
icebp
cs
std
cmp
ret
data16
xor
test
outsb
pop
ret
xor
push
dec
movsb
sbb
dec
imul
adc
pusha
stc
adcl
mov
in
bound
fs
dec
and
mov
fcomps
sti
shl
aaa
fdivs
aad
pop
arpl
leave
xor
leave
loopne
ljmp
clc
jbe
adc
dec
jnp
outsb
cmc
shrl
add
cld
call
popa
jne
and
cmpsl
sbb
aaa
test
sub
arpl
mov
loop
xchg
pop
jge
push
push
out
test
jnp
je
ljmp
xorl
or
adc
mov
push
scas
inc
leave
mov
scas
les
adc
int3
subb
inc
into
jecxz
pop
in
mov
ret
fstpl
inc
push
push
popl
push
pusha
dec
ja
fistpl
mov
or
test
dec
popf
ja
cltd
call
xchg
xor
pop
int3
push
add
bound
aaa
xchg
outsl
ds
nop
neg
outsl
sub
cmp
popa
fistl
lods
les
mov
cld
push
push
jmp
mov
cmp
inc
adc
and
push
lret
push
std
mov
test
jb
add
add
popa
ja
je
mov
andb
ss
test
jge
out
inc
enter
in
ja
mov
xchg
fs
cs
insl
inc
cmp
lods
push
movsb
dec
cmpl
add
mov
inc
inc
mov
lea
ret
cmpsb
sub
iret
mov
push
sub
mov
mov
and
arpl
lret
mov
jge
popa
inc
repz
ds
shll
clc
jle
cld
ja
aam
imul
mov
lret
fisubl
loopne
movsb
ja
daa
les
data16
jmp
xor
jb
mov
jle
roll
xchg
xlat
decb
cmpsl
lds
dec
push
dec
scas
test
sub
js
rol
enter
pusha
xor
icebp
xchg
rorl
cwtl
xchg
jle
ljmp
jo
mov
repz
xchg
mov
scas
test
cmp
jbe
cwtl
ficoms
aam
push
outsb
les
repnz
sub
xchg
not
cwtl
into
xlat
cmc
mov
testb
repnz
pop
popa
push
xor
mov
call
loop
and
shrl
int
popf
sbb
je
and
mov
or
lock
push
cmp
xchg
test
adcl
lret
pushf
fisubl
mov
or
inc
jmp
test
cmp
sub
xor
out
stc
cwtl
lods
mov
aam
pop
mov
aaa
and
jp
loop
push
and
call
jb
dec
jmp
cmpsb
sub
out
dec
mov
mov
cmp
mov
and
jbe
mov
jge
cs
lret
mov
xor
cmp
into
aam
inc
mov
sbb
pop
pusha
pop
dec
mov
hlt
loop
sub
dec
lods
cld
sub
mov
arpl
incl
ret
fdivrp
mov
out
lods
mov
rclb
imul
mov
lea
xor
shl
repz
dec
test
fists
dec
xchg
xor
adcl
outsl
lods
cwtl
sub
pop
or
add
scas
test
or
cmp
fstps
adc
push
mov
or
and
mov
hlt
cltd
dec
sbb
mov
scas
into
sbb
pop
mov
cld
lods
int
stos
sbb
lods
and
in
rcrl
fisubl
sbb
push
xor
lds
xor
lret
adc
mov
outsb
pop
mov
mov
mov
mov
mov
daa
data16
mov
cld
inc
andb
dec
push
adc
add
fisubrl
lods
ljmp
int
fwait
mov
movsb
sbb
jle
in
jno
sbb
cld
cmp
mov
mov
mov
out
mov
and
add
sti
packsswb
pop
cmpsb
in
cmc
mov
mov
sbb
imull
leave
jp
out
loope
xor
mov
add
test
mov
pop
jno
outsl
mov
lods
push
and
mov
and
mov
lret
gs
inc
movsl
fwait
mov
mov
pop
cmp
mov
fsubl
dec
shll
mov
push
add
lea
popf
aas
jg
mov
adc
cli
xchg
leave
out
adc
xchg
pop
addr16
cltd
outsl
sbb
hlt
mov
adc
inc
adc
cs
repnz
cmp
add
fucomip
pop
sysret
repz
add
mov
in
inc
imul
lock
jnp
pop
hlt
adc
xorl
cltd
mov
pop
in
imul
xor
sahf
aam
dec
pushf
sahf
sub
repnz
pop
inc
mov
sar
cmp
dec
pusha
sbb
ds
push
push
js
push
jns
mov
sub
aad
gs
push
bound
je
fwait
cmc
pop
movsl
adc
sahf
lea
mov
mov
sbb
insb
popl
inc
jo
outsl
mov
push
pop
push
add
lea
xchg
xchg
loope
fdivp
cmpsl
mov
pop
hlt
outsl
cli
fwait
push
dec
xor
or
lret
sub
popf
fsts
pop
jge
dec
xorb
xchg
jo
out
cltd
adc
pop
sub
add
cmpsb
cwtl
sbb
call
dec
fs
dec
sbb
stc
mov
jle
sbb
add
cmp
in
mov
stos
push
adc
andb
lret
cmp
fwait
testb
scas
add
aas
loopne
out
sbb
ret
bound
mov
ja
add
enter
push
push
xchg
jne
mov
dec
aad
sti
jbe
pop
mov
pop
mov
xchg
add
pop
or
andb
bound
xchg
dec
arpl
push
nop
insl
xor
imul
mov
push
rcll
or
xor
push
out
cmpb
cmp
push
push
repz
imulb
push
test
or
mov
push
mov
in
or
jb
mov
adc
add
cmp
or
push
vmovmskpd
push
repnz
or
lahf
dec
pop
dec
je
repz
pushf
mov
mulb
test
gs
jge
push
adc
repnz
addr16
mov
cmpsb
fldenv
mov
dec
repz
jge
daa
xchg
xchg
push
ljmp
scas
adc
add
cmc
test
pop
int3
jp
gs
sbb
adc
inc
sbb
pop
aad
mov
jnp
scas
xor
cmpsb
loop
int3
sbb
mov
jbe
add
outsl
mov
aad
jp
and
js
jb
lcall
pushf
cmpsb
lea
dec
mov
cmp
fsubrl
mov
dec
inc
addb
loope
fstp
jmp
cmp
xor
mov
xor
fldl
out
sub
out
or
or
mov
sbb
adc
jmp
ds
imul
push
mov
std
aaa
in
xor
push
lods
cmp
scas
insb
mov
dec
fistpl
push
mov
push
add
adc
add
xchg
lock
ss
xchg
dec
lock
sub
test
pusha
dec
mov
stc
add
push
sbb
inc
lea
arpl
or
rorl
jl
call
clc
jae
xor
stos
movsl
aaa
lea
mov
fcmovb
dec
adc
stc
jb
adc
cld
jmp
xchg
test
in
fcompl
cmpsl
fcmovnb
in
lock
jmp
ljmp
imul
je
fdivr
mov
push
sub
mov
stc
sahf
add
xchg
mul
out
mov
out
mov
or
je
cmp
xlat
ret
test
mov
in
pop
mov
mov
push
jmp
mov
pop
sti
push
stos
cmc
pop
sbb
mov
inc
dec
ds
cld
jns
inc
jb
imul
ror
cmp
cmp
adc
sub
jecxz
fs
pop
or
push
sub
pop
push
cmp
insb
lock
xor
ret
mov
scas
fisubrl
inc
mov
scas
arpl
leave
mov
mov
lds
push
xchg
scas
mov
jp
mov
test
inc
dec
insl
xor
mov
scas
test
bound
outsb
and
push
sahf
inc
test
popl
add
imul
mov
cwtl
push
jl
lods
or
dec
popa
outsb
fldt
xchg
es
push
and
pop
pop
sbb
repz
jl
aaa
mov
int3
pusha
xor
fcmovnu
adcb
fidivl
iret
xchg
sub
testb
jge
jns
es
std
gs
mov
sti
cmp
inc
ljmp
aad
lock
cmpsl
push
jne
ds
cwtl
movsl
dec
xchg
sub
sbb
cs
jp
inc
aad
inc
mov
stc
xchg
add
jne
gs
mov
add
das
pushf
lea
inc
mov
out
mov
xor
inc
in
mov
out
sahf
push
add
jae
js
ds
xor
shll
inc
sarb
sbb
imul
andl
mov
dec
cmp
mov
loopne
pop
sub
inc
outsl
in
jl
rcl
test
pop
hlt
adc
imul
inc
dec
icebp
sub
push
inc
dec
into
sahf
movl
popa
xchg
dec
mov
data16
lods
mov
lret
loop
cmc
and
jmp
pop
rolb
popf
mov
push
xor
andb
in
lret
popa
inc
fwait
enter
adc
loopne
cmc
pop
dec
xchg
mov
or
add
in
sub
cmc
xlat
fistpl
mov
dec
jo
rolb
repnz
sub
rolb
shr
push
adc
fcompl
push
inc
lcall
ss
pop
into
adc
lea
push
inc
movsb
stos
cli
adcl
xchg
dec
leave
add
int3
jl
addl
inc
ret
push
les
adc
data16
push
outsl
test
or
mov
cld
jne
mov
outsl
shlb
fnstcw
divl
pushf
fbstp
fildl
xchg
push
mov
mov
shrl
lods
add
xor
sbb
vpermt2w
mov
cltd
push
fs
sub
push
mov
ret
lods
push
jmp
rcrl
jo
sub
jnp
movsl
push
das
mov
les
test
jmp
push
dec
pop
insb
out
xor
sub
or
xor
out
or
in
ljmp
adc
mov
push
mov
mov
hlt
jno
out
cli
xchg
test
jg
je
fdivl
lret
xor
xchg
cmp
imul
mov
add
push
push
sbbl
test
faddl
movsb
adc
icebp
push
mov
jg
jge
stc
and
inc
jae
push
cmc
mov
sbb
and
stos
scas
fcomp
movl
xchg
mov
or
mov
add
in
pop
pop
xor
in
cs
aam
ds
mov
jbe
or
jl
jmp
push
stc
ficomps
fcmovnb
mov
dec
stos
inc
hlt
mov
sub
sbb
mov
add
sbb
pop
sbb
stc
je
idivl
gs
cwtl
jle
outsl
in
sbb
sbb
lret
stc
xchg
pushl
push
aas
hlt
negb
pop
hlt
push
xchg
f2xm1
xchg
leave
add
mov
inc
jno
in
rcr
out
cwtl
sub
loopne
lahf
fstl
aam
addr16
push
inc
mov
mov
sbb
mov
pop
and
mov
aam
scas
sbb
clc
push
in
sbb
sbb
hlt
and
inc
fld
ss
add
add
mov
pusha
test
cmc
movsb
push
jb
nop
inc
cmp
add
dec
cmp
adc
mov
in
lock
aam
aas
or
scas
sti
pop
jl
fdivs
xor
in
out
adc
cs
sbb
inc
gs
pop
adc
addl
mov
dec
enter
imul
mov
xor
adc
mov
and
ret
clc
loope
ret
sbb
jne
jo
outsb
divb
cwtl
inc
mov
inc
orl
mov
pop
lcall
pop
cmpsb
and
out
xchg
lods
pop
xchg
jne
xor
sbb
push
jno
outsl
inc
andb
hlt
lahf
add
fistpl
test
adc
aas
xor
in
inc
or
pop
xchg
cli
mov
cli
push
aaa
iret
cmp
mov
dec
or
add
push
sbb
data16
pop
call
popf
andl
movsb
pushf
dec
sub
jp
and
or
stos
lret
adc
idivb
ret
inc
mov
add
xor
cmp
scas
adc
add
mov
in
lahf
xor
and
xchg
sub
sbb
push
js
xor
arpl
scas
sarb
push
mov
jno
xchg
mov
mov
outsl
aaa
in
cmp
dec
push
push
xor
jge
xchg
cwtl
sub
mov
out
int3
dec
mov
cmp
or
push
mov
push
add
mov
push
jmp
mov
push
push
fnstcw
xchg
xchg
add
mov
push
bound
fwait
sahf
insb
jo
pushf
stc
push
subl
pop
jne
push
aam
cwtl
jb
pop
cs
push
dec
adc
mov
jne
or
xchg
and
inc
outsb
and
cld
mov
icebp
pop
pop
pop
xchg
mov
js
add
push
add
lds
popf
mov
fidivl
movsl
jmp
xchg
cmp
cmp
mov
les
gs
sub
push
enter
xchg
mov
pop
fsts
jns
xor
mov
mov
pusha
push
push
arpl
xor
cld
enter
sub
mov
into
adc
xor
sub
dec
leave
adc
pop
push
and
scas
ss
rcll
aaa
ret
in
sbb
add
adc
out
stc
int3
popa
cmp
dec
push
sbb
ss
xor
mov
paddq
xchg
aaa
jae
xor
pop
fwait
dec
mov
das
les
dec
in
jp
sbb
jp
sub
fst
enter
cs
jae
fs
fldl
fiadds
sahf
adc
std
fstpt
add
push
out
and
loop
andb
xchg
lods
cltd
xor
push
dec
sbb
dec
sbb
add
xlat
fidivrl
fisttps
repnz
out
mov
xchg
insl
fisttpll
out
rolb
cltd
fstp
mov
popa
push
sub
and
pop
js
adc
pop
rcrb
sbb
nop
sbb
add
cmpsl
addr16
nop
mov
jns
inc
dec
clc
lock
xchg
pop
outsl
jge
xchg
xor
ss
xor
mov
mov
aad
mov
jecxz
mov
mov
jns
pop
scas
mov
mov
mov
int3
mov
adcl
ljmp
fldl
lods
push
leave
sub
jp
icebp
jbe
sbb
push
xchg
push
faddl
add
add
aad
in
mov
xchg
addb
inc
call
jbe
or
cld
fsubrl
in
inc
imul
gs
ja
pop
and
mov
int
cs
lret
jle
in
jae
hlt
dec
adc
lock
rcrb
or
cltd
mov
daa
xchg
leave
shll
mov
mov
mov
and
out
fs
pusha
sub
pop
sub
sub
mov
test
ja
in
xor
sar
test
sub
movsl
xchg
lods
cmpsl
int
dec
adc
jo
xchg
cmpsb
call
shl
mov
fs
push
scas
loop
adc
pop
cmp
nop
dec
or
fs
insl
inc
inc
push
xchg
lret
push
jae
aad
push
rcl
aad
adcb
rol
out
pusha
inc
cmpb
sbb
push
cmpsl
adc
push
inc
mov
bnd
call
inc
mov
pop
mov
and
xor
loop
pop
xlat
xchg
adc
icebp
ss
push
and
xchg
xor
add
ljmp
jb
dec
jae
pop
jmp
dec
mov
or
push
pop
popf
pop
fbld
jbe
xchg
lods
enter
push
call
dec
xchg
movsb
push
xchg
popf
push
fcomps
adc
mov
shrb
jecxz
add
mov
out
cmc
xor
inc
push
mov
mov
mov
in
mov
cli
pop
mov
mov
adc
loop
sbb
jne
daa
push
cltd
ljmp
jp
es
jbe
daa
xor
mov
movsl
push
aam
jae
mov
lea
mov
jns
loope
push
ds
inc
outsb
jmp
adc
mov
shrb
mov
cmc
nop
add
pop
stos
sbb
cmp
daa
add
mov
aaa
xchg
sub
jp
movsl
and
leave
ljmp
aad
lahf
daa
add
mov
pop
loope
fdivl
cmp
pop
movsb
push
iret
dec
and
dec
mov
aam
imul
jmp
loope
lret
mov
aam
push
dec
loopne
clc
mov
mov
or
mov
iret
lcall
push
push
jg
add
sub
mov
inc
mov
push
ljmp
jl
xchg
sub
dec
xchg
test
imul
or
mov
loopne
xchg
mov
mov
dec
jns
jmp
ljmp
ror
jne
out
call
jbe
mov
adcb
popa
iret
add
cld
adcb
jne
or
jecxz
sbb
or
daa
ja
cld
sbb
add
and
add
lds
mov
mov
or
xchg
fs
jns
cmc
jg
xor
mov
jecxz
xorb
dec
or
xchg
mov
adc
cli
pop
test
dec
or
xchg
je
and
ss
and
fwait
je
xor
xor
fwait
call
lcall
or
pop
or
cmp
mov
jbe
mov
shl
leave
repnz
jp
mov
bound
pop
scas
ljmp
jecxz
movsb
frstor
xor
or
cmp
or
jmp
popf
dec
sbb
daa
mov
xchg
jno
out
push
into
fiaddl
push
push
push
sub
shrb
notb
or
push
inc
mov
jg
dec
test
jle
bound
pop
mov
lea
jge
std
dec
push
jge
inc
fldl
adc
lods
adc
cli
sub
je
dec
xor
mov
lahf
je
jo
xor
cmc
fcmovb
sbb
mov
jg
int3
cmp
mov
jg
dec
cmp
or
push
and
ror
mov
decl
faddl
mov
dec
add
ds
inc
adc
mov
cmp
pop
stc
movsl
aas
jno
or
mov
fwait
es
mov
in
aad
or
or
insb
int
adc
out
pop
jno
dec
jo
shll
mov
bound
int
sbb
pop
in
sbb
pop
mov
adc
or
pusha
lahf
int
xchg
xor
fists
aad
push
mov
fcomi
sub
outsb
mov
nop
and
repnz
or
leave
pushf
dec
shrb
aaa
ss
dec
lds
lahf
jno
sub
ret
sbb
push
mov
jo
fadd
mov
fisttpl
cmp
gs
xor
push
scas
xor
dec
and
ja
jne
stc
pop
bound
arpl
pop
ret
fmuls
jle
xor
sbb
add
call
inc
lds
sbb
pushf
pop
adcb
mov
fucomi
jecxz
inc
icebp
test
cmp
jae
ss
mov
jp,pt
mov
les
mov
jge
inc
sbb
out
dec
jns
pop
out
repnz
mov
or
push
jnp
movsb
or
or
ss
xor
pop
inc
aam
std
sbbb
ja
rcrl
fucom
jmp
jnp
xor
setns
pop
dec
aaa
sub
jp
add
nop
test
pop
push
subb
movsl
js
push
and
ds
fdivrs
lcall
sub
insb
sub
cli
aad
rol
sbb
daa
into
outsb
mov
movsb
dec
mov
fst
cmp
mov
add
mov
setbe
es
mov
imul
sub
xchg
jmp
mov
test
push
xchg
inc
and
lret
arpl
sbb
stos
adc
out
pop
mov
es
adc
push
inc
push
inc
dec
inc
add
repnz
fs
jecxz
inc
pop
cwtl
cmp
add
lock
call
imul
mov
xor
cltd
call
jae
mov
aas
fs
or
jl
or
xlat
call
test
cmp
mov
enter
sub
jl
add
loopne
xchg
dec
jbe
dec
pop
jg
jecxz
ljmp
pop
and
icebp
std
add
test
icebp
mov
repnz
test
inc
lea
cmp
dec
dec
xor
std
jge
pusha
sarb
mov
mov
adcb
fdiv
jge
fadd
out
arpl
mov
in
inc
test
dec
pusha
xor
addr16
lret
call
inc
sub
inc
std
jae
sub
aas
pop
cmp
imul
jae
mov
mov
jp
cld
jmp
push
pop
mov
iret
clc
popf
mov
rcll
mov
pop
adc
add
sbb
cmp
dec
repz
adc
or
out
push
fisubs
adc
pusha
adc
les
loop
mov
mov
xchg
mov
xchg
xor
xchg
cmp
not
sbb
cmp
stc
dec
sti
test
lods
js
xor
cmp
daa
stos
jp
cmp
cmp
adc
notl
xchg
movsl
insb
mov
es
bound
mov
or
push
add
inc
bound
movsb
sub
hlt
adc
std
into
inc
shlb
fcom
xor
mov
or
and
outsl
movl
mov
adc
subl
sbbl
mov
or
mov
sub
std
push
and
test
jmp
inc
push
mov
jmp
pop
das
mov
scas
clc
out
dec
popf
push
loope
shl
sub
push
mov
movsl
imul
jne
mov
in
pop
sub
es
mov
jno
iret
dec
into
pop
add
fwait
adc
sub
lea
mov
ljmp
les
lods
pop
fs
jp
scas
mov
sbb
ja
test
pushf
fwait
pop
outsl
nop
mov
dec
lea
sbb
es
xchg
adc
pop
fs
push
xchg
mov
add
iret
mov
jno
pop
mov
int
dec
push
adc
mov
mov
sahf
mov
test
ds
inc
mov
repnz
pop
repnz
add
jns
scas
fadds
negl
and
push
xor
pop
pop
gs
dec
pushf
data16
mov
repnz
das
scas
xchg
nop
mov
call
inc
sbbb
inc
outsl
sbb
std
jno
stos
fs
or
ds
ja
in
mov
nop
cmp
adc
fldenv
je
xchg
daa
jmp
adc
lcall
mov
addb
lods
cli
xchg
sub
or
add
inc
in
sbb
ljmp
cmp
sub
add
jge
and
repz
and
ljmp
int3
jge
call
fwait
lea
dec
data16
out
sub
aaa
pop
fwait
cltd
fsts
cmc
adc
lock
movsl
jns
and
xor
mov
mov
sbb
mov
es
sbb
pop
cli
sbb
jmp
cltd
icebp
stos
xor
mov
pop
xor
pusha
cmp
jg
pushf
push
xlat
nop
lock
les
jae
lods
dec
push
push
cmpsl
or
sbb
add
jg
mov
mov
sub
nop
sbb
es
xor
lock
pop
aad
xor
popf
add
js
popf
xchg
adc
das
jns
imul
adc
cld
movsl
scas
and
lea
cmp
jge
jnp
dec
adcb
lret
xchg
fwait
iret
in
pusha
fisubrs
or
mov
xor
rcrl
cmc
push
and
lret
pusha
or
aad
lock
push
cmp
fistps
sub
sub
pop
sahf
aam
mov
jg
mov
loop
push
in
movb
xchg
in
stos
pop
dec
insl
pop
es
test
sub
mov
xchg
hlt
mov
jb
int3
dec
mov
push
pop
lds
sub
in
lods
mov
jnp
push
jns
mov
jmp
push
arpl
testb
ljmp
lock
add
jb
sbb
push
xor
sbb
aad
add
sbb
mov
jmp
mov
sbb
mov
fcom
lret
insl
sbb
lds
sub
adc
add
in
pop
mov
or
adc
sti
test
jecxz
jp
inc
lds
data16
mov
mov
cmp
jecxz
outsb
daa
scas
mov
mov
inc
mov
push
shlb
xchg
icebp
add
and
mov
cmp
inc
pop
fs
repnz
sahf
std
push
and
test
and
jmp
fstps
mov
fsubrl
push
ljmp
dec
cli
xchg
mov
dec
aam
mov
and
push
leave
jns
maskmovq
fcomps
sub
sbb
in
inc
inc
rol
sbb
std
test
adc
sahf
xor
sub
xor
loope
inc
aas
icebp
nop
in
xchg
cmp
ret
pop
xchg
xor
pushw
lods
jns
rorl
fmull
jnp
xlat
flds
jns
ja
in
mov
inc
enter
jo
and
mov
add
sub
call
fs
jle
mov
cmpsl
add
out
mov
inc
loope
pop
mov
leave
xchg
std
ret
out
js
clc
jecxz
lock
mov
shll
addl
enter
insl
sub
lcall
ljmp
push
jne
mov
nop
leave
mov
add
cmp
sbb
xor
fcomip
mulb
mov
icebp
ds
and
push
xor
push
frstor
mov
lcall
mov
push
nop
mov
mov
mov
dec
add
add
xlat
push
enter
sti
inc
sub
adc
cmc
stc
fisubl
jno
test
xchg
mov
fdiv
sub
stc
xchg
mov
outsb
jno
pop
pop
adc
jecxz
ss
filds
inc
xor
nop
jmp
call
jle
push
xor
sti
orl
push
jp
xor
pop
stos
fsts
out
mov
in
push
mov
pop
sahf
cmp
movsl
or
and
ret
cmp
pcmpeqb
pop
push
scas
stc
dec
or
adc
inc
adc
or
pop
arpl
testb
test
daa
popf
loope
xchg
nop
and
nop
cmp
ds
and
fstps
addr16
xchg
sub
sub
jb
arpl
mov
movsl
pop
sbb
mov
bound
cs
call
iret
aaa
lods
and
xor
push
bt
movsl
adc
or
mov
pop
adcb
iret
aam
push
or
adc
paddsw
or
imul
fcomp
mov
or
lcall
jns
dec
push
sbb
rcll
inc
pop
rol
mov
adc
adcl
cwtl
push
sub
fs
insb
mov
inc
out
cltd
in
enter
insl
cmp
shl
testb
or
mov
pop
lcall
jb
sub
or
hlt
add
xor
xor
in
rorb
lods
dec
mov
sarl
daa
fisubrs
jno
push
imul
inc
scas
imul
jg
cmp
pop
cmp
notl
rol
jge
jne
ja
add
int
jno
in
sbb
lock
cli
lds
xchg
std
arpl
and
push
pop
flds
cltd
lcall
xchg
sbb
adc
or
xchg
add
cmp
mov
sbb
mov
inc
jmp
imul
mov
push
idivl
hlt
adc
rcll
push
fwait
pop
xchg
sub
dec
out
mov
jl
jno
add
fists
adc
adcb
fbld
jbe
push
arpl
nop
sbb
and
dec
mov
jmp
jo
pop
into
fistl
adc
flds
pop
add
mov
cs
add
pop
pop
hlt
jmp
and
lds
shrb
lahf
mov
and
push
mov
cltd
sbb
scas
arpl
and
daa
in
or
mov
jle
jns
loop
and
jp
mov
mov
sbbb
loop
out
adc
popa
enter
add
jnp
mov
popa
leave
imul
bsr
cmp
mov
and
lea
pop
pusha
dec
mov
psrad
loopne
push
fs
pusha
rclb
bound
inc
jae
push
insb
stc
push
test
out
addr16
sbb
sbb
shll
in
add
or
ffreep
hlt
mov
int
push
and
ficoms
dec
sbb
adc
gs
out
test
enter
je
cld
push
aas
rorb
jae
and
push
adc
lods
inc
into
adc
push
xlat
es
push
mov
nop
fnsave
lea
fs
lods
push
or
je
pusha
pop
mov
xor
repnz
pushf
jbe
dec
sub
test
add
jge
shl
addr16
mov
fimull
sahf
lret
addr16
das
in
cmpb
jle
add
insb
mov
and
cld
mov
mov
scas
sub
mov
test
imul
xor
push
sbbb
jae
xchg
mov
leave
jge
shlb
mov
cli
popa
cmp
inc
jnp
fsubs
dec
stc
and
pop
pop
mov
dec
rclb
dec
sbb
sbb
xlat
fwait
add
lea
sub
add
int3
pop
pop
add
and
clc
cmpsb
sub
push
jnp
xor
loope
popa
cmc
fstpt
cltd
and
xchg
sbb
sub
aam
pop
mov
adc
adc
inc
outsb
inc
inc
lahf
pusha
repnz
mov
or
and
mov
insb
icebp
sbb
jno
iret
sub
mov
test
dec
aam
popa
and
jns
mov
pop
clc
test
ljmp
dec
sub
mov
scas
jo
and
lods
sub
add
or
nop
add
ljmp
add
xchg
cltd
mov
ficomps
mov
mov
lahf
shll
out
test
adc
mov
iret
lret
lcall
dec
lea
jo
imul
std
mov
inc
std
adc
mov
lcall
mov
lds
loop
mov
aad
xor
rcl
pop
jo
mov
inc
cwtl
push
pop
loope
lcall
push
imul
cmp
or
mov
add
inc
dec
inc
pop
cld
shrb
in
cld
lret
jns
or
mov
aas
pop
dec
loope
mov
icebp
cmp
das
xchg
push
ja
jge
lods
push
or
aad
pop
scas
xchg
add
adc
mov
cmc
sbb
in
push
pop
or
jae
aad
pop
xlat
test
outsl
mov
and
mov
sbb
std
cmc
lahf
jg
cltd
call
cwtl
push
cltd
cli
jecxz
xor
mov
rolb
sbb
push
mov
in
sbb
xor
adc
cmp
daa
cmpsb
movsl
and
sbb
pop
movsl
cld
xor
testl
stos
xor
cmp
dec
mov
testb
hlt
jg
add
add
or
ds
xchg
xchg
push
sar
jle
add
or
cmp
in
push
jp
add
or
arpl
ja
adc
push
testb
xor
leave
enter
popf
dec
mov
push
xor
dec
movsb
push
fwait
xor
scas
xchg
mov
dec
cmp
pushf
lods
sub
lods
sbb
mov
mov
daa
sbb
mov
lock
and
mov
jl
mov
iret
hlt
push
pop
pop
or
pop
inc
jge
cmc
js
push
cmp
push
xchg
pushf
cmp
jnp
insb
cmpsl
test
es
mov
clc
out
test
jp
jg
dec
lret
dec
into
fsubrs
jo
sub
adc
int
test
mov
loopne
mov
test
mov
cli
xchg
fnstsw
lods
push
and
jl
lea
sti
or
shrb
dec
hlt
jbe
into
hlt
mov
mov
mov
push
pusha
test
cmp
push
lahf
mov
xchg
lds
add
push
mov
xor
movsb
and
add
stos
jno
pop
push
jbe
jbe
arpl
fidivs
mov
lret
imul
sub
pop
inc
dec
ja
push
adc
mov
insb
shrb
insl
idivl
jno
arpl
lods
mov
or
sub
jp
xor
test
inc
icebp
add
add
out
xor
pop
or
test
jle
xchg
subl
das
fstp
cpuid
or
xchg
int
add
jle
stos
lahf
fidivs
sub
push
sbb
es
pop
ret
mov
movb
gs
mov
pop
adc
push
pop
sbb
sub
mov
sbb
xor
sub
mov
popa
dec
sti
addb
push
loop
dec
sbb
cwtl
adc
sub
repnz
js
add
pop
aas
cli
adc
pop
cld
stc
xor
pop
xorl
mov
in
dec
sti
add
in
cmc
jb
inc
add
pop
je
cmpsl
pop
aam
pushf
not
shrl
inc
or
ss
jne
mov
sub
cltd
mov
fdivl
inc
inc
pusha
mov
lea
imul
mov
inc
inc
mov
sub
mov
lods
dec
jp
ret
push
lret
push
notl
mov
mov
cmpsl
mov
push
call
imulw
test
adc
cmp
addb
inc
sbb
loop
into
rcrb
sahf
insb
push
jecxz
iret
out
push
ret
popf
scas
loopne
ljmp
push
cmpsb
xchg
mov
push
int
or
pop
inc
jecxz
push
ret
sub
lret
in
daa
pushl
dec
fwait
imul
fiadds
dec
inc
mov
dec
xchg
loope
call
dec
push
stos
and
dec
ds
out
bound
xor
inc
dec
xchg
repnz
or
jp
fdivs
addr16
pop
notb
pusha
lahf
fdivrl
ror
leave
test
pop
inc
fistl
ljmp
or
sbb
mov
test
jae
jge
xchg
or
mov
seta
sahf
inc
inc
stos
push
dec
adc
out
in
pop
hlt
jbe
pop
fwait
fwait
jg
fidivs
repnz
shrl
dec
xor
push
lds
push
mov
ljmp
ja
and
mov
ss
pop
push
lods
sbb
or
shrl
sub
push
push
outsb
and
mov
fidivl
fwait
lock
sbb
orb
fisttpl
daa
into
cmpsl
fst
fcomps
lods
mov
or
sbb
xchg
pop
imul
and
xor
repnz
mov
sbbb
out
bnd
pusha
cs
pop
xor
int3
pop
and
mov
andnps
sbb
addr16
push
out
or
std
xor
xor
aaa
std
mov
adc
test
dec
aas
dec
stos
movsl
cltd
loopne
enter
mov
sbb
inc
xor
int3
inc
xor
clc
loop
int3
jno
pop
cmpsb
lahf
dec
hlt
loopne
mov
push
pop
out
insl
jg
or
test
mov
push
pop
jbe
sbb
sub
outsl
push
xchg
jo
xor
cmpsl
inc
iret
pop
dec
pushf
jmp
insl
iret
data16
movsl
adc
dec
inc
inc
enter
scas
and
push
outsl
dec
and
pop
xor
stc
mov
jle
ss
adc
sub
pop
add
enter
and
lcall
sub
mov
sub
inc
inc
adc
out
or
mov
shll
sub
xlat
add
mov
push
mov
inc
stos
test
xchg
sub
push
aas
jbe
xor
js
aam
std
lods
push
divl
outsl
fdivl
push
fstp
mov
xchg
xchg
or
xchg
push
daa
mulb
cs
mov
lret
sub
pop
js
mov
sbb
sub
cwtl
pop
aaa
loope
cmpl
or
mov
xchg
sub
jbe
aaa
cmp
pop
lret
jno
jg
imul
push
jg
sarb
mov
xchg
ljmp
std
add
mov
dec
dec
mov
lods
stos
out
popf
sub
je
sbb
jg
push
cs
cmp
in
jae
gs
aas
sub
cmp
aaa
je
sti
repz
or
or
pop
jns
repnz
mov
out
cmpsb
testb
mov
xorb
mov
jmp
and
mov
lahf
enter
inc
lods
icebp
xchg
xor
sbb
inc
push
cli
jno
xor
cmc
inc
inc
inc
push
imul
outsb
cltd
mov
dec
jmp
xchg
call
cmp
jae
xchg
push
lock
push
daa
and
jge
fistpll
xor
aam
jbe
jns
sub
mov
xor
pop
adcl
sti
mov
lods
lahf
es
ret
dec
dec
hlt
in
imul
in
fsubs
testl
mov
inc
decb
mov
mov
jle
out
jo
cltd
push
hlt
in
stos
hlt
fists
inc
cmp
push
lods
int
sbb
sub
sub
sub
mov
hlt
imul
push
fwait
mov
pop
pushf
jo
fistl
jbe
push
pop
jo
cmp
mov
jns
xchg
scas
fucomi
mov
lods
cmpl
mov
daa
loope
mov
shlb
aad
jmp
negl
jle
dec
hlt
sub
in
test
xchg
xlat
xorl
stos
push
mov
inc
jne
cmp
aam
xor
mov
rcll
mov
sbb
gs
push
add
gs
lret
or
aam
pop
xchg
inc
mov
add
jbe
mov
xchg
scas
xor
test
sbb
cmpsl
out
into
push
nop
jnp
stc
push
pop
test
and
push
inc
pop
ret
and
cwtl
xchg
inc
icebp
inc
cld
mov
inc
adc
addb
lret
xchg
dec
and
andl
push
mov
ret
scas
ffreep
fildl
fstps
dec
push
adcl
add
movsl
inc
xor
test
sub
popf
bound
xor
jmp
mov
stos
outsb
cltd
jns
mov
mov
out
pusha
stos
xor
outsl
mov
loopne
xor
popaw
gs
pop
insl
mov
jne
rcll
dec
xor
adc
dec
repz
mov
cmpb
pop
jmp
mov
int3
add
cmp
shll
jg
lock
stc
jle
inc
sbb
test
int3
in
xchg
mov
sti
dec
shlb
xchg
lds
cmpsb
out
xor
call
insl
jp
fwait
dec
in
xor
xor
jle
adcl
sub
pop
xchg
push
cmp
into
into
xchg
adcl
push
xlat
xchg
lcall
jmp
lds
rcr
xorl
xor
add
outsb
lods
and
inc
xor
sbb
adcl
sbb
sub
inc
repnz
movsl
mov
xchg
repz
lods
insb
jbe
cmc
xchg
sub
xchg
mov
sub
mov
sbb
or
sub
lea
xlat
add
bound
sbb
add
loop
mov
pop
xchg
pop
jge
sbb
jmp
mov
mov
push
xor
push
jae
jle
dec
nop
mov
mov
sti
call
test
ret
pop
enter
jge
ret
in
and
or
pop
ror
dec
jle
jl
sbb
mov
sbb
call
icebp
test
push
xchg
jb
imul
jne
ss
push
jecxz
mov
cmp
dec
or
lock
pop
outsb
mov
lds
add
adc
xor
mov
in
jp
sub
or
xchg
fbld
add
inc
push
xchg
xor
mov
movsb
mov
shr
jecxz
outsb
sbb
test
out
xchg
push
fistl
xor
imul
movsl
decl
rcrb
xor
xchg
cmpsb
js
pop
aad
je
fcmovnb
shll
call
and
enter
outsb
jp
xlat
lock
call
xchg
jb
icebp
orl
adc
fcom
rol
add
lock
mov
and
ret
sub
fmull
loope
and
inc
jnp
push
adc
notb
js
fidivs
xlat
imul
fsubs
cld
mov
shlb
push
xor
cmp
adc
pop
xor
orb
bound
hlt
out
mov
testb
pop
push
rorl
jecxz
mov
jge
pop
icebp
push
jg
xor
mov
or
hlt
xchg
test
pop
insl
movl
subb
sub
jmp
jae
lret
cmp
mov
andb
jne
cmp
bound
pop
out
add
cmpsb
add
ret
lods
push
mov
cmp
adc
jns
js
cmpsl
jmp
fcmovnbe
mov
pop
leave
pusha
loopne
xor
sub
push
lds
mov
jnp
sarb
lret
jg
xor
popa
out
sbb
inc
test
into
loope
repz
out
rcrb
daa
out
fmuls
inc
jecxz
sbb
popf
ja
xchg
inc
mov
jns
out
icebp
enter
and
les
add
js
gs
xor
push
shlb
bnd
lods
movl
sub
mov
arpl
xchg
orb
adc
jle
jb
cmp
ret
ficoms
test
mov
push
pop
lea
cmp
mov
add
inc
int
sbb
dec
push
jne
inc
cli
out
ret
mov
dec
lods
sub
mov
decb
jae
xchg
sub
xchg
inc
cld
cmc
and
outsb
adc
stos
idivb
jnp
mov
out
ja
scas
lea
adc
call
mov
mov
int3
mov
int
push
adc
sbb
in
pop
sbb
mov
stc
sub
jns
jne
mov
jl
loopne
lret
xchg
pop
stos
loope
fiadds
dec
and
sbb
xor
xchg
in
push
pusha
adc
add
jns
add
shll
or
popf
jmp
adc
data16
mov
sarl
sbb
loop
int3
push
cmp
and
out
xchg
orb
shll
or
jl
loope
or
arpl
imul
popa
mov
xchg
mov
or
int
xchg
dec
mov
rcr
jecxz
repnz
insb
imul
xchg
sahf
pop
icebp
jg
fistpl
adc
or
orb
pop
and
dec
cmpsb
scas
test
fidivrs
adc
xchg
je
std
dec
out
insb
xchg
movb
xlat
push
subl
mov
test
sbb
test
jmp
sub
repz
mov
inc
add
fdivr
push
cmp
fmuls
add
jecxz
jmp
push
cmp
pop
jo
imul
mov
das
icebp
push
int3
std
mov
sub
rcrl
pop
aad
sahf
sub
cmpb
loopne
shr
pop
mov
pusha
rcr
push
sub
push
std
dec
mov
mov
outsl
pop
jle
in
lods
mov
pop
loop
add
cmp
jo
mov
daa
fidivrl
jp
daa
push
loop
aaa
sub
in
stos
or
mov
xchg
shlb
sub
fnstenv
push
jl
and
mov
arpl
dec
loope
mov
sbb
xchg
or
and
and
aaa
push
adc
push
clc
jecxz
add
repnz
rolb
outsb
out
dec
or
xchg
bound
xor
inc
lret
push
xchg
mov
jbe
sub
push
mulb
adc
push
les
ljmp
sub
cmp
mov
inc
shrb
fsubl
sub
dec
das
into
push
adc
daa
in
mov
insb
ljmp
dec
cmp
scas
push
cltd
test
xchg
in
pop
mov
les
and
and
aas
scas
repz
outsl
jp
pop
adc
cmp
cltd
push
insl
jmp
xchg
adc
dec
out
cli
or
jns
mov
ja
leave
adc
loopne
and
mov
es
xchg
pop
fcoms
imul
out
popa
out
enter
ljmp
dec
jb
fmul
loop
hlt
adc
push
fisttpl
sub
mov
pop
out
mov
popa
inc
push
xchg
jb
xchg
ja
mov
repz
lret
arpl
cmpsl
scas
loope
pop
gs
xorb
mov
les
clc
jmp
pop
std
in
xchg
or
xlat
jb
sbb
sbb
dec
xchg
clc
jae
and
fs
mov
rcrl
and
dec
push
xchg
movsl
cmp
mov
inc
sti
addr16
bound
mov
aas
sahf
add
filds
fstps
stos
imull
fistpl
std
sbb
and
mov
mov
cmp
out
loopne
insl
scas
fcoml
test
push
adc
jne
test
jg
repnz
push
or
and
add
pop
arpl
dec
icebp
das
subb
adc
xor
sbb
sbb
sbb
pop
outsb
stc
pushf
inc
sub
flds
cmp
cmpb
sub
xor
inc
jne
pop
lds
and
es
sbb
repnz
iret
sub
sbb
shll
les
push
mov
or
sbb
xchg
add
push
shl
fcmovb
push
fdivrl
inc
scas
cs
daa
lea
cs
pop
mov
mov
and
pop
and
aam
and
xchg
lock
or
outsl
dec
sbbb
shlb
mov
and
add
inc
insb
xchg
and
in
jmp
xor
aam
lods
scas
adc
roll
mov
cmp
popf
or
daa
adc
or
jmp
fisttps
jecxz
inc
lahf
jnp
sub
pop
jecxz
mov
xor
adc
inc
cmp
and
dec
les
les
fdivs
js
push
cmpsb
mov
dec
scas
aam
lods
or
or
xchg
push
pop
cmp
mov
push
mov
fsts
fistpl
pop
addb
js
outsl
test
or
pop
orb
ret
push
mov
mov
bound
jg
sbbb
mov
dec
aam
or
xchg
test
and
push
cmp
in
jp
test
xchg
leave
jns
out
outsb
je
out
sbb
and
adc
loop
push
sub
outsl
pushf
repnz
push
ror
and
es
add
jge
lahf
pop
and
mov
fs
mov
sahf
pop
rcl
ljmp
xor
cmp
xchg
cs
das
lock
xor
sub
icebp
cld
fdivs
sub
xlat
cmp
sbb
push
repz
pushf
sub
jg
xchg
shrl
mov
scas
movsb
vpand
and
inc
ror
cmp
gs
repnz
enter
lret
pop
cltd
jl
bound
and
dec
push
ret
imul
adc
and
cmc
push
and
andb
fsts
lret
push
lds
push
push
test
scas
test
testl
mov
cld
lret
mov
test
sub
inc
mov
in
adc
mov
loopne
ss
xor
bound
adc
pop
data16
in
inc
mov
fnstsw
dec
mov
loop
xchg
jl
push
aad
int
adc
les
shrb
push
or
xchg
cli
sub
adc
fstpt
out
in
xor
mov
inc
xlat
test
negb
adc
mov
pop
insl
sub
lret
in
fisttpll
cmp
sub
sub
fisubl
adc
mul
test
inc
dec
in
mov
add
inc
or
mov
hlt
xor
test
in
aad
push
ja
sbb
cltd
aad
pop
in
iret
cmpsb
dec
loop
mov
repz
es
rolb
inc
or
adc
cld
sub
cwtl
js
fmulp
jle
enter
fiadds
fisubrs
jo
fildll
sub
lods
add
dec
jo
push
test
adc
repnz
jnp
gs
imul
and
pop
cwtl
cli
out
cmp
pop
insb
xor
xor
push
push
hlt
xchg
or
mov
bound
cmp
dec
xchg
int
sbb
fmuls
mov
loopne
jge
icebp
or
cli
rcrl
filds
and
sbb
pop
adc
mov
mov
or
sub
mov
sbb
out
pushf
mov
xor
insb
xlat
fisubl
outsb
dec
mov
pop
mov
xor
mov
scas
std
xchg
adc
push
in
pusha
andl
mov
out
sub
cmp
das
mov
insl
fnstcw
enter
aaa
lcall
jo
lret
leave
jb
cmp
into
or
adc
ja
cld
bound
pop
fdivl
sbb
cwtl
icebp
lock
push
out
ss
add
and
and
cmp
insl
call
mov
rcr
std
insl
bound
inc
and
cmp
cmc
shrl
mov
rcrb
shlb
stos
je
and
pop
mul
push
js
inc
jb
add
sub
push
push
mov
daa
std
scas
imull
nop
stos
add
pushf
outsl
add
lock
sub
insb
add
mov
or
pop
fs
and
dec
mov
in
mov
xchg
dec
daa
aas
xchg
add
cmp
or
in
xor
mov
loopne
mov
lock
xchg
iret
push
pop
jl
mov
inc
add
jl
add
dec
add
mov
test
daa
inc
cli
mov
adc
je
pop
popf
ret
pushf
sti
lcall
mov
mov
enter
lcall
jbe
xchg
xchg
and
cwtd
daa
mov
pop
out
mov
pop
push
js
ret
stos
jmp
jp
dec
das
je
fldt
xchg
xor
fists
mov
dec
stos
jge
mov
cmp
add
pushl
inc
xchg
stos
or
imul
loop
int
mov
clc
test
cmp
cmc
hlt
cmp
mov
test
scas
or
aad
enter
sub
aam
das
sub
fisubrl
rcll
inc
mov
hlt
jmp
fwait
jbe
xor
mov
mov
inc
test
out
ja
jp
fisubrl
stos
bnd
lret
sub
dec
fstps
push
jle
mov
inc
add
cmp
pop
popa
fidivl
or
add
ficompl
mov
arpl
popa
enter
fnstsw
and
jns
lods
fidivrl
xor
rcrb
stos
xchg
in
xor
movsl
dec
mov
hlt
mov
add
dec
jb
adc
inc
jne
jle
push
lods
out
adc
dec
and
rol
pop
jle
and
xchg
es
cld
inc
adc
jge
cmc
rcll
adcb
xchg
cli
adc
or
inc
inc
cmpsw
mov
mov
inc
loope
in
shll
push
sti
push
popf
dec
int
les
jns
mov
shl
sahf
out
jge
dec
call
outsb
pop
shlb
jb
sbb
add
jp
test
mov
xchg
daa
dec
or
and
pop
jecxz
scas
mov
repz
or
pop
cs
dec
cmp
add
dec
mov
sub
cli
ret
nop
rolb
mov
into
xor
jnp
dec
iret
cs
movsb
in
dec
pusha
push
pop
fs
lods
sub
sbb
pop
lds
ret
mov
jno
adc
test
iret
dec
push
adc
int
inc
int
imul
adc
or
cltd
xchg
mov
xor
sahf
sub
pop
repnz
push
nop
loop
inc
pop
ficompl
cmp
adc
sti
mov
push
aad
cli
shlb
js
incb
and
jge
mov
daa
popa
enter
pop
das
cld
std
sbb
sub
in
push
and
dec
andl
cli
ret
xchg
mov
ss
and
xor
stos
add
lret
ret
or
ret
jl
mov
popa
jl
jl
push
pop
jl
lret
cmp
cmpsl
jg
jmp
lods
mov
es
cmp
orl
mov
push
out
jl
stc
xchg
cmc
in
pop
shll
call
jecxz
mov
or
adc
and
xor
mov
cmp
add
cmc
jae
scas
push
xchg
ret
push
test
dec
gs
outsl
aas
test
movsl
lahf
sub
je
insb
cwtl
test
stos
orb
xchg
int
loope
mov
xor
ror
iret
je
and
cmp
jmp
nop
mov
leave
fsubl
push
xchg
pop
sbb
into
inc
arpl
cmpsl
pop
sti
aas
int
pop
push
call
or
inc
mov
push
dec
inc
sub
adc
fidivrs
cs
inc
dec
bound
dec
push
call
pushf
sahf
inc
inc
adc
imul
cmpsl
adc
xorb
xchg
ret
pop
ret
aaa
ja
mov
cmp
push
push
mov
subl
xchg
dec
loopne
into
dec
cmp
cwtl
pop
mov
sbb
fmull
xor
pop
push
xchg
push
sub
xchg
mov
push
sub
sti
clc
push
mov
add
cmp
cmp
push
aas
mov
pop
aas
jbe
mov
insl
or
nop
clc
xchg
sbbl
adc
add
mov
mov
out
and
jns
in
push
xchg
popa
push
mov
dec
movb
pop
pop
daa
dec
mov
mov
adc
jecxz
fwait
mov
loopne
dec
or
inc
cmc
test
or
dec
test
insb
sahf
jecxz
les
cmpsl
xor
inc
xor
sbb
jecxz
repz
inc
setne
mov
mov
jbe
repz
testb
mov
push
stc
fsubrp
jg,pt
pop
out
sub
mov
iret
mov
ds
lret
mov
mov
mov
sub
std
insb
push
pop
fldt
cli
cmp
subb
sub
or
pop
cmpsb
mov
pop
cmp
lea
pop
xor
or
out
scas
inc
jb
mov
push
dec
ret
push
and
les
test
stos
popa
xchg
repnz
push
fldt
or
fstpl
popf
mov
mov
and
inc
cwtl
cmp
mov
in
sti
ja
push
jo
cli
aaa
jne
lods
inc
inc
mov
sbb
ret
hlt
scas
dec
mov
xor
mov
dec
popa
or
dec
sbb
add
sub
push
pop
fisubrs
xor
xor
inc
pop
ljmp
sbb
imul
insb
stos
push
dec
add
cld
fs
pop
xchg
mov
imul
jg
punpckhwd
and
mov
fstpl
inc
mov
or
adc
xchg
or
jp
fldenv
bound
sbb
adc
lds
pop
fcmovbe
mov
xor
scas
mov
pushf
das
sub
dec
mov
cmp
jecxz
aam
jbe
aaa
lret
push
pusha
adcb
lret
pop
sbb
push
and
repnz
xchg
imul
adc
adc
sbb
push
cli
inc
orl
or
or
adc
add
push
ljmp
or
cmpsl
test
xor
test
inc
popf
sbb
sub
hlt
das
xchg
stos
mov
or
cmp
lods
sar
xor
xchg
pop
jl
and
push
or
jmp
jae
jecxz
lods
jg
aas
add
idivb
lds
loope
xchg
in
push
mov
filds
notb
mov
outsb
and
pop
sbb
test
jmp
pop
pop
cwtl
sub
outsb
in
pop
es
shlb
push
popf
sahf
bound
cltd
lret
adc
adc
inc
out
out
ret
shlb
dec
loopne
lret
cltd
mov
test
cmp
inc
jg
push
xchg
push
inc
imul
jp
aad
cmp
mov
xchg
xor
jmp
sub
pop
jne
push
xchg
sbb
pop
push
xchg
add
sbb
jmp
imul
mov
gs
int3
jno
out
sbb
mov
lock
in
add
sti
je
jns
out
adc
push
push
fnstcw
adc
fldcw
pop
test
sub
dec
xchg
pop
sahf
test
repz
into
ljmp
mov
pop
mov
dec
adc
jns
add
pushf
push
icebp
cmp
xchg
repnz
dec
jle
sbb
jp
not
or
out
loopne
or
pop
push
cmp
add
adc
popa
je
movsl
mov
jo
test
sbb
xchg
arpl
leave
cmpsb
mov
daa
cmpsb
jecxz
push
push
fbstp
push
leave
bound
adc
dec
push
jne
stos
test
repnz
inc
out
or
add
es
sbbl
imul
jo
subb
add
jb
lods
pop
sbb
fnstcw
out
inc
mov
and
in
xchg
cld
lahf
push
dec
and
and
add
add
out
fbstp
add
dec
lds
sbb
orb
popa
xchg
push
pop
inc
fnstcw
scas
xor
mov
cmc
enter
add
or
aaa
outsb
fsubl
xchg
popa
lock
lcall
xor
imul
push
aam
cmp
cli
loopne
pop
je
xchg
xchg
push
push
les
adc
mov
xchg
fidivl
mov
hlt
ljmp
gs
mov
sarb
cmc
push
cmp
adc
mov
cmpsb
bound
dec
xor
mov
push
push
pop
adc
lret
cmp
cmp
movsl
mov
dec
fistps
or
in
rcr
adc
lds
jecxz
out
mov
push
push
mov
aas
push
inc
cs
aas
xchg
das
push
subb
fs
sahf
addl
in
push
push
pushf
sti
dec
jecxz
push
ret
stc
cmc
inc
pop
jle
push
xor
shll
xchg
lret
mov
jns
cmpl
nop
jne
add
pop
mov
sub
jle
in
push
dec
or
and
fstl
sbb
adc
lods
adc
inc
dec
pop
mov
mov
adc
lock
or
xchg
cmc
or
cmp
mov
push
sub
cli
jbe
fsubrl
jbe
into
add
mov
cmc
jo
cmp
in
lds
test
pop
mov
fdivrs
push
mov
inc
mov
mov
mov
jno
push
sbb
mov
mov
mov
insb
and
nop
sbb
std
cmp
inc
inc
add
sbb
pop
jecxz
adc
fmull
sbb
adc
enter
jno
into
mov
jb
or
xor
mov
mov
repnz
js
add
out
out
loopne
cmp
or
unpckhps
scas
sub
add
popa
mov
add
add
or
in
sbb
ds
or
rcll
xor
mov
jl
shrl
inc
cmp
and
and
cltd
mov
test
push
inc
pusha
arpl
mov
cmp
out
jmp
mov
arpl
cmp
sub
or
mov
jp
jns
xchg
add
out
dec
cmpsb
outsb
xchg
cmc
shll
or
pop
ljmp
insb
call
add
in
out
and
and
ret
adc
xor
adc
outsl
pop
dec
in
cmpsl
sub
xchg
popa
jb
andb
ss
sbb
cmp
mov
add
fnsave
dec
adc
and
jle
add
or
dec
int
mov
xlat
cmp
jbe
arpl
call
push
adc
push
jno
lahf
lret
xchg
movsb
mov
cwtl
adc
mov
idivb
insl
jo
push
gs
sbb
xor
add
fdivl
jo
fstl
and
pop
loopne
add
cmp
les
inc
mov
insl
push
push
loop
jg
outsl
or
ret
cmp
stos
inc
dec
lock
fldt
xchg
aaa
jae
and
nop
cs
dec
xchg
mov
mov
scas
push
lahf
mov
xchg
push
fadds
scas
jge
xchg
mov
sbbb
in
pop
int3
pop
stos
cmp
lock
mov
xor
mov
mov
subb
push
cmpsl
xlat
sbb
xor
fisubs
fmuls
fistpll
mov
dec
js
sub
or
imul
add
sbb
dec
adc
arpl
sbb
gs
daa
adc
inc
sbb
inc
add
addb
repnz
enter
xchg
mov
cmp
sub
ljmp
sbb
loope
ret
fcoml
xchg
xchg
fucom
adcb
daa
pushf
dec
lock
sub
das
mov
ja
in
xchg
jl
sub
adc
mov
ss
sbb
lds
test
aaa
push
leave
and
push
and
mov
test
leave
cmpsb
mov
popa
mov
mov
test
fisubl
cmpsb
mov
pusha
popf
lods
std
insl
add
dec
jo
leave
enter
jg
int3
add
mov
or
decb
pushf
pop
lahf
add
jmp
mov
add
repz
aad
add
xchg
pusha
and
xchg
xor
orl
dec
xor
cmp
mov
stc
xchg
jne
insl
bound
cmp
nop
mov
loopne
nop
jb
call
std
mov
call
sbb
shlb
sub
dec
sahf
pop
addr16
cmp
cmp
lret
cmpsl
in
adc
mov
fwait
push
add
mov
das
addr16
push
aaa
mov
push
add
and
xchg
popa
pop
pop
test
scas
movsb
or
adc
lods
mov
sub
pop
push
loop
xor
fstps
inc
or
pop
pop
and
into
jecxz
je
pop
push
pusha
in
jbe
bound
add
add
sbb
xchg
or
xor
add
pop
outsl
wrmsr
mov
testl
stos
mov
int3
xchg
insb
mov
aam
jo
jle
outsb
out
lea
fs
js
pop
xchg
shl
in
icebp
push
stc
xchg
sub
sti
push
dec
and
jp
test
jbe
mov
fnsave
pop
nop
and
int3
les
cli
ds
pop
mov
js
aad
xor
xor
sub
cmp
fcomps
mov
cltd
mov
and
dec
idivb
out
out
enter
dec
xchg
mov
or
fwait
test
inc
test
lock
mov
lds
push
out
outsl
dec
add
pop
mov
mov
jbe
aas
sub
sbb
aad
jle
sub
dec
std
cmp
jb
xchg
pusha
or
mov
mov
sahf
lea
ljmp
outsl
sub
pop
push
sub
mov
loopne
cs
xchg
ficoml
inc
and
lcall
imul
aas
lcall
jne
icebp
mov
mov
xchg
push
mov
adc
mov
adc
enter
shlb
push
mov
adc
aad
and
xor
fs
test
sub
cmp
jmp
mov
and
push
rcll
pop
adcl
xor
fcoms
lret
mov
andl
int3
mov
fildl
icebp
xchg
inc
ja
adc
dec
and
and
fbstp
subb
xor
clc
cmp
aam
mov
xor
call
sarl
and
mov
pop
xchg
gs
and
es
aas
jge
test
test
add
shl
popa
fisubrl
mov
jns
pop
ficoms
int
or
ret
xor
cmpsl
and
dec
jb
sub
test
loopne
mov
lcall
daa
fisttpl
dec
stos
xor
cmp
loopne
or
scas
add
mov
out
push
sti
jns
ja
fdivrp
sbb
push
mov
cmp
jbe
test
push
push
xlat
sahf
push
xor
mov
cmc
push
push
cli
repz
adc
xchg
loopne
out
mov
pop
sub
add
dec
push
cmpsb
mov
fwait
aaa
cs
mov
jmp
lret
arpl
dec
jae
cltd
jbe
mov
ret
mov
aam
sbb
int3
and
add
out
mov
cmp
repnz
popa
into
xchg
or
ficoml
enter
outsb
mov
pop
jno
mov
out
xor
push
push
pop
int3
data16
loope
orl
out
lods
pop
sub
jl
in
gs
xchg
mov
adc
ljmp
enter
mov
lea
movsb
and
xor
js
stos
push
decl
cmp
push
in
arpl
out
shll
sti
imul
popf
cmp
xor
mov
jge
pop
dec
lcall
rolb
inc
enter
push
mov
data16
pop
icebp
test
jle
cmp
and
rcrb
imull
test
push
in
sbb
adc
or
bound
xchg
mov
sub
js
xchg
jmp
lock
mov
mov
pop
jg
movsb
jnp
push
mov
dec
movsb
orl
stos
jg
fisttpll
inc
sbb
sub
test
lret
cwtl
cmp
dec
jns
aad
lods
in
push
inc
push
jns
xchg
iret
jb
push
shll
popf
jge
jnp
xchg
mul
repz
mov
pcmpeqb
xor
out
push
popf
sbb
scas
jb
test
addr16
sbb
imul
dec
adc
pop
inc
or
arpl
jge
das
iret
pop
cmp
jne
sbb
fmull
insb
int
xor
add
push
xor
jmp
pop
bound
xor
jle
jl
add
inc
subb
adc
out
enter
xchg
dec
xor
fwait
mov
push
adc
sbb
out
mov
jae
jge
push
xchg
mov
lea
and
shlb
push
pop
push
dec
and
add
lret
or
xchg
cli
imul
fdivrl
push
cltd
sbb
jmp
pushf
das
push
into
pushf
mov
dec
adc
loop
mov
add
xchg
dec
imul
or
and
jb
icebp
add
divl
in
dec
pop
in
subl
data16
pop
cmp
cltd
mov
xchg
ficoms
shrb
and
xorl
push
cmp
js
add
test
add
outsb
jne
inc
nop
lods
jne
out
movsb
shl
jae
out
cmpsl
mov
fstpt
jecxz
dec
add
jne
pop
mov
jnp
movzbl
imul
dec
je
add
adc
aam
stos
cmp
adc
pop
or
xlat
xchg
aaa
call
sub
pushf
and
jbe
xchg
push
mov
xchg
xchg
push
push
addr16
sub
test
jo
cmp
scas
sbb
lret
cmc
imull
sti
repnz
fwait
cwtl
xchg
sahf
shl
sti
icebp
sub
aam
rolb
rcl
mov
xor
jno
int
push
pusha
jl
or
xchg
jnp
jnp
and
sub
adc
dec
adc
push
dec
shrb
and
jecxz
dec
pop
je
lret
push
les
inc
popl
add
dec
inc
and
inc
daa
add
inc
bound
jmp
pop
lods
pop
daa
push
inc
ret
cmpsb
push
mov
inc
js
shr
aas
inc
test
push
jbe
and
icebp
aam
inc
outsl
mov
push
sbb
fadds
and
xchg
movsb
push
mov
sbb
mov
nop
loop
in
jnp
jle
adc
mov
mov
xchg
aas
push
test
cmp
mov
nop
ss
into
inc
or
xlat
outsb
fwait
ret
jo
aad
cli
push
mov
mov
pop
out
aam
inc
dec
gs
mov
popl
dec
xchg
popf
mov
and
sbb
or
ja
xchg
out
sbb
loop
push
mov
ret
addb
mov
push
inc
mov
xchg
adc
movsl
mov
add
adcl
int
jne
dec
ljmp
dec
iret
loopne
lcall
ret
cwtl
aaa
dec
push
mov
push
cli
push
dec
inc
les
jle
xchg
cld
test
stos
add
sarb
xchg
cmp
and
sbb
dec
jae
mov
dec
ja
sti
sub
pushf
ret
imulb
cltd
lahf
cmp
cmpsl
iret
add
repz
imul
push
scas
je,pt
xor
cmp
xor
push
outsl
in
jne
cltd
sbb
movsl
scas
jb
fdivrl
sub
sub
pop
mov
out
aaa
shlb
ljmp
mov
repnz
aad
sub
jne
add
out
repnz
sub
dec
pop
and
repz
imul
mov
push
fsubl
enter
daa
xchg
daa
mov
jne
insl
cmc
outsb
xchg
xchg
sub
mov
adc
jg
sbb
shl
dec
mov
pop
adc
push
cli
jmp
dec
push
pop
test
leave
mov
pop
cmp
or
push
sub
movsl
lcall
adc
adc
shrb
add
cmp
xor
sub
in
fs
jecxz
mov
sub
xor
xchg
or
addr16
mov
dec
ljmp
push
mov
ret
mov
pop
inc
push
xchg
out
icebp
mov
xchg
and
jg
fwait
outsb
jo
mov
add
xor
xor
xor
push
push
cmpsb
mov
scas
adcb
insl
cmp
mov
cwtl
movb
mov
enter
loope
jecxz
movsb
arpl
push
pusha
repz
mov
xlat
inc
stos
inc
push
sbb
ror
mov
lahf
loope
popf
jp
xchg
mov
cltd
mov
add
xchg
iret
ret
hlt
or
jbe
mov
sub
and
sbb
pop
or
cmp
je
jne
or
dec
ja
adcb
jno
cmp
ret
adc
inc
inc
pop
repz
dec
jg
cmp
sbb
push
shlb
movsl
jns
and
jl
popa
or
lea
loop
xchg
sbb
xchg
jnp
sbb
cmc
in
lods
adc
mov
inc
clc
rcll
scas
out
sbb
sub
js
fldenv
gs
jb
ljmp
inc
insb
pop
sarl
inc
repnz
stos
add
fstl
ljmp
hlt
dec
icebp
inc
pop
in
lock
aas
xor
pop
insl
cltd
pop
ficompl
pop
mov
lcall
xchg
cmc
mov
daa
shr
cwtl
mov
and
jp
xor
ret
pop
testb
add
mov
or
and
or
loopne
mov
cs
cmp
cwtl
pushf
int3
out
lret
mov
into
push
mov
push
mov
xor
dec
cmp
arpl
aad
ficoms
jecxz
jge
and
rorl
ret
adc
lea
mov
lods
add
xlat
leave
scas
movl
lea
imul
add
cmp
sbb
loope
sbb
and
cmp
sbb
lods
repnz
dec
cwtl
rdpmc
fmuls
mov
fcmove
lret
mov
into
mov
fsqrt
lret
dec
imul
shr
jbe
sbb
das
fnstsw
pop
lock
adc
add
and
shr
adc
in
fsubrs
or
add
iret
mov
nop
mov
pop
sub
inc
lahf
cmp
ljmp
rorl
iret
fsubrs
jbe
lret
cmp
cmpsb
pop
fimull
sbb
push
adc
xchg
sahf
pushf
bound
jg
cli
xor
addr16
rorl
adc
std
inc
sti
sub
or
push
xor
aad
shll
or
dec
sub
xchg
stc
testl
pop
sahf
aaa
xor
fisubrl
imul
cs
cmp
cltd
ficompl
leave
mov
mov
push
aaa
cmpsb
mov
mov
sub
pop
xchg
jecxz
repz
in
xchg
clc
mov
cmp
jne
jno
add
pop
fs
js
mov
mov
fnstcw
mov
push
shlb
imul
je
outsb
sub
jl
jg
loope
out
dec
clc
xchg
mov
out
test
xor
pop
sub
mov
mov
xor
pushf
imul
shlb
pop
and
in
sub
lahf
cmpsl
fcmove
je
sbb
lea
add
ficoml
mov
cmpsb
scas
nop
or
xor
std
nop
add
xchg
imull
es
sar
inc
jno
mov
movsb
mov
incb
xchg
xor
ret
push
icebp
call
scas
cmpsl
fwait
mov
dec
or
mov
sbb
push
adc
pop
sti
in
lahf
call
shl
in
jb
xchg
and
cmp
das
add
push
fcmovnb
popa
xchg
or
xchg
mov
dec
sub
pop
adc
push
clc
adc
scas
push
mov
loopne
sti
lock
popf
jecxz
adc
xorb
cltd
mov
out
xchg
adc
pop
pop
int
lods
ja
dec
pop
das
pop
mov
mov
push
lret
mov
lahf
mov
cmpsb
fldt
lds
icebp
movsb
mov
inc
cmp
ffree
jmp
push
xchg
sarb
dec
inc
sbb
out
test
and
repnz
fistps
fdiv
pusha
xchg
insb
cmc
pop
mov
sbb
stos
ljmp
fisubrs
imul
jbe
jno
adc
in
je
mov
addr16
ret
pop
or
cmp
movsl
mov
jns
add
xor
mov
and
fwait
push
ret
sub
push
test
jp
mov
das
loope
pushf
js
and
push
mov
in
cmp
jno
xlat
sahf
cld
lods
pop
shll
mov
cmp
pop
pop
mov
pop
fnstenv
ret
sbb
ljmp
jp
and
jno
cmpsl
stc
jns
sub
xchg
loope
rcll
ret
cmp
inc
jne
les
out
fnstenv
fsts
aaa
push
sbb
sbb
push
pop
fwait
daa
addr16
ds
ljmp
leave
loopne
mov
ja
adc
jb
divl
sub
mov
ljmp
add
pop
lds
jge
add
or
jbe
popa
cmpsl
ret
in
lods
dec
or
movsl
mov
sbb
pushf
mov
mov
fldcw
aaa
jne
enter
pop
imul
loope
cmp
dec
push
inc
push
mov
push
outsl
cmp
stos
push
and
mov
xor
sub
pop
xchg
mov
or
add
push
xchg
or
mov
pop
xor
loope
pop
inc
fwait
cli
fnstenv
mov
mov
repnz
rclb
mov
rolb
sub
jg
leave
xchg
inc
xchg
or
mov
sti
test
mov
lcall
rorb
and
add
cmp
jl
mov
sbb
insl
out
sub
mov
ret
adc
icebp
mov
aad
movsb
xchg
imul
sbb
sub
lretw
dec
mov
gs
stc
inc
fstpl
sbb
xchg
lcall
pushf
mov
sub
sub
fsubl
dec
cwtl
outsb
bnd
fcoms
aam
sub
stos
ret
xor
push
out
and
test
ret
adc
push
ljmp
cli
inc
shlb
in
out
pop
ret
dec
sbb
ds
xor
push
mov
inc
pop
push
ret
std
jne
stos
repnz
cli
mov
cmc
push
cld
jle
or
dec
adc
gs
mov
mov
fcmovbe
sbb
inc
pop
inc
int3
fs
dec
cmp
add
add
push
jg
mov
cmp
dec
aam
xorl
sbb
xchg
add
xor
jmp
dec
pop
call
out
in
cmp
xchg
lock
jo
sbb
xor
push
dec
mov
in
flds
sbb
mov
into
inc
cmp
aaa
jno
fdivs
push
xor
test
fs
fcomi
fwait
test
test
fst
jecxz
sahf
aad
jnp
ror
loop
xor
mov
je
das
sbb
arpl
fnstsw
adc
cltd
scas
sub
test
and
add
cmp
aam
cmp
dec
or
dec
dec
cmc
mov
dec
inc
lahf
loope
rcrl
xor
jns
mov
fdivrp
lret
data16
cmp
ds
or
sbb
mov
arpl
loopne
xchg
jb
test
out
stos
test
mov
or
mov
dec
push
mov
test
cmp
enter
in
add
sahf
loopne
out
les
in
push
adc
ja
mov
je
cmc
and
xchg
dec
cli
mov
add
movl
cmpsb
fiaddl
insl
xchg
sbb
xor
mov
inc
fcompl
jle
adc
js
jnp
lret
add
jl
adc
pop
add
mov
xor
fs
hlt
insb
jg
add
fucomip
pop
sbb
outsb
sbb
jns
imul
test
pop
fiaddl
vdivsd
xchg
push
pop
xchg
aaa
fdivs
gs
fnstsw
inc
test
xchg
jle
inc
loope
mov
fwait
je
js
aaa
lahf
out
loope
sarb
jmp
pop
xor
test
shlb
sbb
mov
cmp
in
cmp
cld
jb
pop
stos
xlat
add
push
cmp
mov
and
stos
ss
stos
adc
ja
pusha
int3
sub
roll
lods
inc
xchg
push
cmp
mov
rclb
xor
adc
xchg
dec
push
pusha
outsb
repz
ss
dec
ljmp
push
ja
sbb
cmp
adc
fldenv
jbe
xorl
movsl
sub
add
cmp
mov
ret
pop
out
movsb
dec
pop
icebp
gs
jecxz
out
out
enter
push
push
pop
lcall
insb
data16
adc
xchg
ja
lret
adc
mov
mull
add
push
jle
cli
gs
mov
mov
cmp
test
outsl
mov
pushl
pop
leave
fldt
out
cli
pop
sub
rorl
leave
fnstsw
push
adc
jae
dec
sbb
xor
scas
rclb
mov
mov
sbb
xor
and
xor
repnz
bound
cmp
pop
ja
enter
jp
adc
shll
jnp
imul
push
mov
xchg
sub
adc
test
add
divb
test
cmpsl
movsl
in
cwtl
xchg
sbb
xchg
sub
mov
mov
daa
mov
mov
and
xchg
jno
xchg
mov
std
jne
bound
add
lock
dec
cltd
cmpsb
xchg
push
imul
mov
cmp
xor
jno
or
sub
push
and
outsb
test
sbb
lea
add
cmp
push
ud2
ljmp
cli
xchg
fsubr
jmp
jmp
jge
out
jae
shll
adc
ja
int
jno
mov
in
push
dec
jno
mov
jns
dec
out
jno
aaa
xor
push
inc
sbb
mov
inc
pop
sub
jecxz
in
ljmp
jmp
push
mov
push
sti
mov
iret
dec
call
pop
jns
fwait
mov
fisubl
jae
and
cli
sub
out
pop
add
pop
mov
jns
out
daa
or
dec
sbb
xlat
repnz
mov
pop
or
addr16
fldt
push
dec
jecxz
and
mov
insl
shlb
inc
out
pop
add
orl
inc
ss
adc
cmp
push
mov
bound
push
stos
and
jl
mov
xor
sbb
nop
fs
test
mov
outsl
fstl
dec
add
push
jno
call
push
sarl
mov
add
stos
cli
jecxz
xlat
add
lcall
fbld
out
enter
das
lret
arpl
cmp
xchg
and
jb
loop
int3
push
dec
dec
shrl
xchg
lahf
mov
xchg
clc
mov
fldt
ret
test
stos
cmp
cmpl
testl
test
mov
mov
mov
gs
jnp
jmp
sarb
xor
and
shlb
and
jns
sbb
rcr
mov
out
popf
xchg
nop
inc
cld
adc
inc
notl
mov
call
mov
sbb
xchg
stc
xchg
push
inc
xchg
subl
mov
imul
in
adc
mov
daa
ret
lcall
lods
sub
movsl
outsb
dec
pop
sbb
imul
rcrl
jns
pop
dec
xorb
jg
push
lcall
push
insb
fs
cmp
mov
std
addl
outsl
or
cld
loopne
inc
mov
inc
arpl
lret
aaa
jle
icebp
std
mov
dec
sub
xor
xor
insl
cli
or
and
lods
scas
loop
ret
jmp
dec
mov
sbb
sbb
xor
xchg
ljmp
enter
sahf
jne
movsl
jnp
pop
mov
pop
jns
push
add
lock
mov
enter
adc
in
xchg
lods
sub
fs
push
scas
lds
mov
dec
add
mov
mov
hlt
pop
push
fimull
mov
out
nopl
mov
imul
movsl
or
mov
lds
push
mov
adc
hlt
outsb
and
xchg
jecxz
icebp
sahf
pop
xor
xchg
andb
lock
adc
mov
xor
inc
or
xchg
fadds
loopne
test
stos
xor
mov
or
insl
es
and
xor
xchg
incb
aaa
mov
iret
int
push
popl
stos
outsb
hlt
lret
xchg
lock
xchg
mov
int3
jne
pop
add
or
pop
inc
mov
enter
lcall
scas
and
ja
push
or
scas
fiadds
sub
or
or
mov
aas
push
sub
inc
sbb
mov
pushf
std
mov
ja
aaa
xchg
pop
fidivrs
insb
test
je
inc
pop
movsb
pushf
fstpl
das
loope
insb
mov
enter
dec
jle
jl
jmp
cmpl
sahf
xchg
es
leave
cld
push
lods
adc
or
xor
in
and
adc
aad
out
xchg
cmc
mov
imul
push
ds
stos
imul
test
sub
repz
stos
or
mull
test
and
cmp
jne
mov
cs
lods
mov
aam
xchg
shrb
pop
daa
cmc
fstpt
out
sub
jle
mov
mov
dec
negl
mov
fdivs
or
push
imul
testb
or
dec
mov
sahf
fs
imul
insl
push
out
lret
sub
clc
mov
fcmove
push
scas
lock
sub
leave
lcall
mov
fidivrl
test
mov
cli
mov
in
cmpsl
or
xor
dec
cmovae
jno
sbbl
sbb
cmp
sbb
add
jle
orl
pop
shll
cmp
and
mov
daa
sub
lret
mov
mov
jecxz
pop
add
xlat
sub
cmp
sub
inc
jl
cwtl
add
jg
loop
inc
testb
aas
adc
stos
popl
mov
sub
mov
stos
pop
inc
xor
lret
test
or
or
mov
adc
mov
test
cmpsl
push
out
push
mov
test
push
ds
mov
xlat
mov
sub
xor
mov
xor
frndint
sub
mull
xchg
lea
test
movsl
sub
sahf
sub
arpl
sub
push
cmp
mov
mov
js
mov
mov
gs
dec
test
dec
shll
jmp
lret
loop
sbb
stos
out
jne
dec
mov
ffreep
fwait
xchg
xchg
mov
mov
xor
les
push
adc
ret
mov
jns
mov
dec
sti
ret
int
lret
and
xchg
mov
les
and
repnz
sub
xor
sub
pop
rcrl
call
sbb
arpl
mov
sahf
shrl
add
enter
sbb
imul
test
mov
jno
ret
sub
lret
mov
ret
das
jg
pop
pushf
lret
icebp
push
jns
xor
repz
ficomps
enter
pushf
shll
cmp
mov
int3
jmp
das
mov
orl
fdivrs
aad
dec
xchg
fs
adc
sar
mov
dec
out
and
addl
adc
shrl
rclb
les
lret
xchg
or
neg
push
xchg
mov
mov
jp
add
add
jmp
cmp
xor
sbb
lret
daa
pushf
xor
outsl
mov
rcll
hlt
dec
jecxz
adc
std
sub
xor
loope
aaa
cwtl
popa
cltd
sar
mov
and
cmp
sti
jmp
aaa
sahf
cmp
push
insl
push
lcall
or
xchg
movsl
fwait
pop
ret
add
insb
jg
push
lea
imul
mov
push
push
fwait
je
mov
push
adc
fildll
jp
cwtl
ss
rcl
cmc
in
push
xor
sbb
insl
shlb
sub
mov
in
dec
loop
shl
out
xor
rorb
test
call
jb
loop
dec
arpl
mov
addb
adc
xor
mov
mov
mov
dec
xchg
ret
sub
outsb
pop
jne
sbb
push
mov
scas
lds
jbe
arpl
xchg
faddl
stos
xor
int
mov
addr16
clc
dec
pop
xor
mov
stc
popa
sahf
or
cmpsb
mov
add
pushf
icebp
ja
daa
and
mov
or
leave
out
jge
subl
adc
mov
lret
lods
pop
jg
mov
leave
inc
ret
insl
cmpsb
pop
xchg
mov
push
sub
push
fbld
dec
xchg
mov
sti
jns
pushf
push
xchg
push
popf
push
sbb
mov
aaa
mov
mov
test
push
outsl
adc
mov
loopne
push
outsl
xlat
pop
push
sub
mov
fimuls
dec
out
sub
in
into
pop
adcl
cmc
mov
or
jmp
ret
lret
ficompl
dec
or
inc
lcall
mov
mov
imul
xchg
mov
fsubr
aad
xor
xlat
xchg
mov
add
fwait
mov
fcom
ja
clc
into
imul
mov
xchg
pop
jl
jl
mov
and
addb
xchg
insl
das
movsl
sub
loop
mov
in
push
jns
mov
push
cmp
sub
sub
xor
mov
sbb
shl
je
push
jl
mov
and
mov
inc
jo
into
inc
divl
roll
in
add
in
mov
cmp
fnstcw
mov
inc
loope
fisubrl
lock
push
mov
lahf
mov
sti
push
setnp
imul
or
adc
dec
into
jg
pop
add
stos
push
movsb
dec
push
jmp
imul
lods
lods
cld
lds
in
xchg
pop
shlb
xchg
push
sbb
jmp
inc
xor
xchg
cwtl
sbb
xchg
sbb
dec
xchg
push
jne
filds
scas
popf
push
inc
inc
inc
cli
xor
pusha
adc
pop
jmp
lahf
jno
adc
cmp
cli
idiv
push
dec
or
outsb
and
arpl
inc
jns
shlb
or
aaa
sbbb
mov
push
adc
dec
sahf
mov
gs
adc
minps
xchg
testl
dec
add
sub
cs
stos
cmp
fstl
sub
test
push
out
cmp
jb
insl
jmp
dec
sub
and
call
clc
iret
leave
jb
inc
pop
test
adc
jl
cmpsl
inc
cltd
lret
sbb
adc
pusha
pushf
and
mov
jl
and
inc
mov
mov
lods
mov
pop
push
add
xchg
xlat
pop
fidivrs
idivb
xchg
push
fcmovb
fidivl
jno
in
jne,pt
mov
xor
pop
or
adc
adc
test
push
inc
mov
dec
pop
lgdtl
inc
xchg
mov
or
xchg
sub
adc
push
imul
ja
cltd
fimuls
clc
in
scas
xchg
xchg
sub
and
dec
iret
movsl
and
xor
dec
pop
stos
sub
test
xchg
in
add
pop
mov
push
call
mov
push
aad
push
shll
xchg
lods
cmp
sbb
mov
jl
test
lret
pop
ja
mov
in
lahf
mov
fisubrl
push
pop
inc
clc
jmp
mov
pusha
int3
jo
pop
outsl
movsl
in
js
dec
imul
xchg
xchg
test
jo
xchg
fmul
in
mov
cli
inc
adc
xchg
call
sub
jmp
xor
push
add
sub
orb
jbe
call
adc
cwtl
sub
cli
imul
js
aas
xchg
loop
sbb
cwtl
xchg
in
and
sub
sti
mov
inc
mov
out
mov
das
fsts
sar
in
and
xchg
cltd
scas
sub
fstps
xlat
cmpsl
cmc
sub
ja
mov
mov
mov
sub
pushf
mov
fxch
xchg
idiv
cmp
clc
test
pop
cmp
cmp
adc
aam
adc
cltd
jns
test
fists
add
xchg
mov
mov
daa
sbb
outsl
arpl
jge
inc
repnz
cmpsb
jae
ds
mov
inc
sahf
add
inc
movsl
data16
xor
cmc
inc
addr16
jl
imul
insl
inc
out
push
add
sub
addr16
nop
mov
push
xchg
call
push
or
fsubs
xchg
dec
jne
push
pop
xchg
lock
xchg
jne
adc
cmp
pop
bound
or
repz
fndisi(8087
cld
inc
inc
divb
pop
push
xlat
push
sbb
add
lods
das
out
lods
mov
inc
or
mov
shll
dec
and
dec
jp
push
push
mov
cmp
icebp
call
subl
rcrb
sbbb
inc
out
insb
movsl
imul
fldt
mov
cmc
adc
push
push
xlat
mov
mov
sub
adc
mov
pop
dec
fcmovne
iret
mov
leave
xor
out
push
lahf
mov
xchg
mov
cmp
cld
and
push
add
jo
shl
inc
nop
xor
sti
popa
nop
fisubrl
cmp
inc
and
sbb
mov
jg
outsb
aas
xchg
aad
xor
stos
cwtl
ljmp
sbb
lea
adc
cmp
repz
gs
add
hlt
leave
enter
inc
rclb
clc
shlb
cmpb
push
out
fstp
lods
xorb
mov
add
mov
sbb
sub
pop
outsb
ja
fisubrl
mov
int3
fwait
pop
stos
and
icebp
push
fdivp
test
inc
lods
sbb
mov
shrl
jae
out
add
scas
insl
inc
mov
test
fs
add
into
jne
add
lock
push
int3
cmpsl
icebp
js
shlb
sar
jg
xor
push
adc
pop
mov
pop
rcrb
mov
push
adc
sub
sub
push
push
xor
or
and
cmpsl
pop
or
jge
movsb
ret
into
pop
mov
outsb
ja
add
dec
xor
inc
sub
jmp
pop
lcall
into
or
cmp
popf
xlat
xchg
lcall
push
inc
xor
pop
sub
mov
add
repz
sub
dec
dec
stos
adc
xor
and
lcall
rcll
rorl
xor
or
ds
in
fiadds
cli
js
int
movsb
xor
fmul
mov
mov
jae
jno
pop
in
int
xor
xor
outsb
fldt
imul
sbb
and
mov
out
test
repnz
adc
add
std
out
dec
mov
sub
repz
dec
bnd
loopne
mov
xorb
cmp
in
rcrl
push
hlt
push
jge
fadds
orl
dec
rcr
mov
ss
das
hlt
stc
xchg
test
out
nop
mov
mov
cmp
adc
aad
xchg
push
sbb
jnp
rorb
lret
enter
jle
out
dec
test
xor
xor
out
xchg
div
mull
fucomp
xchg
adc
push
mov
test
mov
addr16
fs
sub
sub
arpl
pop
xchg
fistps
pop
jae
inc
or
jecxz
je
mov
push
lahf
insb
stc
outsb
lea
lea
and
sub
and
rcl
lcall
xlat
inc
pop
add
mov
ret
mov
sub
fsubr
adc
xchg
sbb
xorb
insb
cmp
gs
movsl
shll
sub
xor
pushf
lret
ret
movsb
adc
ja
mov
dec
mov
mov
jle
sbb
imul
add
lcall
sub
inc
mov
mov
filds
xchg
je
sub
xorb
mov
in
stos
fcoml
jne
xor
lcall
dec
pop
aam
mov
test
push
push
mov
sahf
and
sti
cmp
adc
daa
fcmovb
sub
addb
mov
mov
scas
insb
dec
xchg
jbe
xchg
lods
cmp
jle
push
cld
into
and
fsubl
push
aaa
clts
cltd
hlt
cwtl
aad
dec
inc
lods
insb
adc
cmp
insl
out
pop
dec
out
mov
add
push
popa
mov
jmp
and
push
in
mov
in
test
movsl
icebp
xchg
jmp
mov
lods
mov
ljmp
hlt
int
in
hlt
push
nop
cmp
ds
int3
mov
test
out
nop
mov
push
inc
aad
xor
push
and
insb
imul
and
xor
sbb
add
jne
mov
loope
js
mov
adc
jnp
lods
test
dec
inc
jo
outsl
ret
xchg
pusha
dec
cmp
adc
test
std
mov
cvtdq2ps
lcall
cmp
fidivrs
push
dec
and
mov
sbb
push
pop
pop
jno
dec
iret
inc
lock
iret
sbb
xor
push
mov
add
rcll
popf
daa
push
fdivs
mov
sub
push
movsl
push
mov
test
jecxz
in
and
cmp
lea
repz
rcr
inc
mov
jge
in
in
cmpsl
mov
adc
dec
lcall
lds
cmpsl
mov
inc
outsl
es
sbb
sub
cmp
ljmp
push
loopne
int
cmp
push
jns
dec
popa
fsubs
mov
aad
xor
ljmp
sbb
xor
mov
mov
add
pop
cmpsl
loop
sbb
roll
imul
inc
or
outsb
pushf
pop
mov
es
fisttpll
xor
mov
mov
xor
sub
mov
popl
xor
lea
in
stc
inc
or
lret
xchg
xchg
ror
rolb
out
jno
adc
cmc
das
lods
push
mov
push
xchg
es
mov
stos
repz
mov
adc
in
loopne
pop
jnp
jno
cmc
ds
daa
in
jmp
xor
movsl
negl
ret
std
cwtl
cmp
mov
jecxz
and
hlt
xchg
and
imul
ds
cwtl
mov
fmul
inc
cmp
push
lcall
cwtl
call
pop
in
loop
inc
adc
outsb
xor
xchg
popf
sbb
fs
push
movsb
out
cmp
and
call
mov
mov
mov
xchg
mov
mov
out
lods
popa
loop
sahf
test
and
adc
or
cli
or
jg
cld
aas
ljmp
lcall
lcall
jnp
and
es
repnz
adcl
jecxz
insb
push
into
and
test
add
cltd
xchg
ffreep
fs
push
mov
leave
xor
add
or
sarl
in
ret
int
imul
mov
mov
inc
sahf
mov
shrb
xor
adc
arpl
adc
fwait
pop
mov
out
roll
lret
es
iret
lock
paddsb
mov
add
outsl
inc
stos
xchg
int
fadds
test
pop
push
pop
mov
xor
rorl
cmpsb
dec
fidivrl
inc
xchg
dec
sbb
push
pop
out
ret
stos
and
cmc
loop
xlat
jp
inc
incb
fsubrl
pusha
or
sub
push
mov
dec
cmp
xchg
cmp
cmp
rcrb
outsl
mov
lea
xor
and
lret
pop
int3
pop
sahf
add
or
outsb
push
into
inc
aam
testl
cli
jge
add
mov
ja
cmpsb
lret
and
lds
pop
and
dec
sti
std
xor
mov
aam
iret
lock
push
cmp
ljmp
les
aaa
cltd
movsb
inc
sub
mov
rorl
jl
out
sbb
inc
lock
imul
sub
addl
mov
mov
orb
test
adc
test
mov
addr16
mov
jecxz
and
jnp
shll
jo
push
movb
clc
and
bound
pop
clc
aas
pop
cmpsb
xorb
icebp
xchg
add
out
int3
sub
jl
push
dec
fcompl
adc
fimull
mov
jo
xor
sub
dec
dec
ficoms
mov
cmpsb
insb
mov
int3
add
sub
icebp
push
clc
into
mov
in
jns
incb
mov
mov
sub
mov
stos
sbb
sub
bound
pop
cmc
pop
fwait
leave
repnz
cmp
pop
inc
pushf
cltd
jb
pop
xor
fstpt
xchg
jl
outsb
dec
xor
dec
jae
lds
call
sub
xchg
xchg
push
js
push
sbb
cmp
xchg
in
xor
sbb
push
or
mov
dec
add
into
mov
outsb
fbld
insb
xor
mov
sbb
push
adc
sub
sbbl
push
outsb
jnp
hlt
mov
xchg
push
loopne
pop
and
in
das
mov
jne
or
xchg
loop
orps
scas
sbb
push
mov
fdivl
int3
jg
cmpsl
out
cmpsb
push
stc
arpl
xchg
clc
xor
arpl
shrb
mov
add
sbb
and
inc
rorb
xchg
dec
popf
aas
jns
clc
in
mov
sbbb
cmp
pop
insl
and
pop
in
lods
mov
and
vmovd
mov
and
mov
das
dec
xchg
shll
mov
popa
sbb
dec
and
scas
inc
xchg
cmpsl
lods
sub
scas
gs
mov
push
lret
and
push
or
cmp
xor
jnp
sti
fwait
test
shr
fidivs
xor
xchg
adc
loope
lods
pushf
or
pop
cmc
dec
push
sub
addr16
push
sbb
pushf
mov
dec
lds
jns
aad
or
aad
aam
pop
into
dec
int
hlt
jns
inc
pop
mov
loop
inc
arpl
cmp
add
ljmp
aas
adc
or
data16
mov
mov
das
push
adc
js
push
pop
and
imul
cmovge
pop
xor
cltd
aam
es
cmp
lret
jge
test
xor
popa
adc
xchg
popa
cmc
mov
inc
pop
xchg
mov
scas
xor
mov
test
in
sarb
cmp
fisttps
lea
push
or
adc
xchg
adc
lods
bound
dec
gs
inc
aaa
mov
cld
adc
cmp
mov
mov
xchg
jmp
mov
test
mov
mov
loopne
jnp
daa
cmp
inc
cmp
push
inc
pop
push
adc
inc
stc
dec
in
xor
popf
push
jae
inc
pop
sbb
cmp
push
popf
les
pop
out
adc
pop
jne
scas
or
xchg
sub
sbb
mov
adc
jle
lcall
mov
dec
cwtl
sbb
inc
sub
test
pop
mov
mov
adc
mov
pop
out
mov
lds
imull
loopne
in
cmp
or
gs
lds
popf
scas
lock
fdivl
xor
stos
inc
mov
repnz
sub
xchg
sbb
push
stos
mov
cld
push
cltd
pop
pop
inc
push
pop
mov
into
jne
and
stos
push
xor
pop
inc
push
mov
push
pushf
jl
lahf
gs
sbb
sbb
aam
pop
mov
push
push
pop
mov
add
sub
int
pop
in
fwait
out
pop
out
jecxz
jecxz
stos
int
jae
negl
in
add
dec
arpl
inc
out
notb
sbb
fs
sbb
lret
orl
mov
push
cmp
push
jo
pop
add
int3
sub
in
repnz
and
scas
enter
pop
cmpsb
jb
xor
pop
pop
dec
inc
insb
and
cmp
arpl
and
jmp
addr16
arpl
add
inc
in
dec
xor
roll
jle
inc
out
pop
mov
push
and
adc
stc
fsub
or
test
xchg
arpl
sbb
jae
cmp
jne
iret
repnz
ficomps
out
pop
icebp
rcl
fsts
or
mov
push
xchg
or
mov
sbb
sub
add
fistl
dec
outsl
mov
cs
dec
popf
repz
xchg
test
jl
push
dec
cs
outsb
mov
into
test
aaa
hlt
inc
xor
aaa
and
pop
lret
jo
clc
pop
add
bound
arpl
xor
xchg
aad
andl
dec
push
out
out
push
addb
pop
mov
sbbl
pop
insl
inc
cmp
sti
and
sub
xchg
pop
jne
pop
aas
xchg
or
pop
xor
imul
jb
into
lock
test
and
or
fwait
es
incb
insb
and
push
sub
iret
out
in
pop
ds
and
adc
fisubl
je
push
sahf
push
pop
sbb
lahf
dec
scas
cmovns
push
fisubrs
or
push
lret
std
in
pushf
cwtl
and
movsl
ret
mov
jmp
jmp
out
and
inc
out
pop
ficompl
adc
xor
mov
test
in
xchg
dec
dec
add
xlat
cltd
sti
sahf
jg
xor
iret
stos
mov
fwait
out
push
jge
in
mov
lret
xorb
pushf
sub
cmp
mov
adc
adcb
xchg
jbe
notl
xchg
mov
stos
sbb
inc
xor
xor
enter
sub
mul
xchg
fchs
data16
js
movsl
icebp
dec
xchg
mov
fists
inc
les
sub
inc
imul
fstpl
pop
mov
mov
pop
adc
inc
js
xor
adc
popa
add
das
dec
stos
cltd
push
xor
xor
out
add
mov
aaa
lods
push
sbb
sbb
lahf
sahf
aas
push
inc
les
add
add
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
nop
xor
inc
nop
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
