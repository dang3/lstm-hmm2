add
push
add
add
add
add
addb
addb
add
push
add
orb
add
nop
add
adcb
add
rolb
add
add
add
outsl
add
add
add
add
add
add
add
jo
add
call
pop
add
add
add
mov
add
add
add
addb
add
add
add
mov
les
add
add
add
add
add
add
add
movl
add
add
add
add
cmp
add
pusha
add
subb
add
add
add
add
add
add
subb
add
add
subb
sub
add
add
add
add
add
push
add
add
movsl
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
addb
add
cs
add
add
add
add
add
add
test
add
add
add
add
add
rolb
add
iret
add
add
add
add
add
add
add
addb
add
add
add
add
add
adc
add
pushf
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
fadds
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
jbe
das
add
add
outsl
add
insl
add
outsb
add
add
add
add
add
je
and
jae
push
add
add
jne
add
outsl
add
add
add
outsl
add
add
and
popa
add
add
add
jb
outsl
add
add
jae
outsl
add
and
data16
insb
add
add
add
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
popa
add
xor
data16
insb
add
add
add
sub
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
arpl
xor
data16
insb
add
add
add
jl
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
and
bound
jns
and
inc
add
add
popa
add
add
jb
and
push
add
add
jbe
jae
imul
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
popa
add
xor
data16
insb
add
add
add
js
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
xor
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
xor
inc
add
insb
add
add
add
xor
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
inc
mov
ljmp
mov
sbb
jo
or
mov
cmp
sbb
push
int3
rolb
dec
imul
fwait
and
std
aam
lods
cmpl
pop
dec
fstpt
mov
fsubs
mov
push
adc
adc
dec
mov
sahf
sahf
inc
jae
jp
scas
ret
sub
mov
adc
and
nop
rorl
pop
xlat
jle
and
adc
mov
pop
adc
insb
mov
jle
or
aaa
sti
outsl
daa
adc
and
inc
push
cmp
mov
jnp
adc
mov
mov
add
mov
icebp
rcr
jbe
insl
test
popa
in
sub
and
inc
popa
inc
andb
mov
mov
jnp
add
pop
mov
pop
fadd
jae
gs
and
fprem
xchg
sahf
pop
xlat
inc
leave
inc
shll
fcmovbe
pusha
scas
push
jae
add
stos
push
cli
mov
fldl
cld
mov
pop
mov
ret
out
pop
enter
je
adc
enter
fidivrl
sub
jb
cwtl
cmc
or
mov
outsl
fldcw
mov
push
lods
and
xor
dec
iret
movsl
cmp
jmp
gs
sbb
test
inc
sub
daa
pop
test
dec
jg
es
mov
xor
xchg
decb
rorl
sbb
mov
nop
xchg
dec
outsl
sub
jmp
adc
push
out
lods
loope
mov
dec
cld
hlt
jo
dec
inc
jnp
out
aad
mov
dec
inc
cmp
mov
iret
xchg
jmp
adc
int
mov
sbbl
cli
mov
sub
icebp
gs
loope
adc
xlat
add
add
bound
fstp
les
add
push
sub
push
repz
lds
loope
pop
sub
cmp
leave
mov
pop
fmuls
or
cwtl
add
cli
in
mov
push
jbe
fcmovnbe
ds
test
push
xchg
hlt
mov
jge
aam
rorb
and
inc
lcall
pushl
bndstx
loopne
jp
cwtl
xchg
in
scas
mov
aas
loope
jbe
out
cmp
notl
or
out
bnd
popa
scas
movsb
hlt
je
push
mov
pop
inc
stos
das
push
pop
pop
cmp
loop
jmp
cmpsl
jmp
jecxz
fistps
adc
pop
or
push
cmp
jle
in
hlt
in
insb
loopne
mov
lahf
sahf
push
add
std
inc
nop
xchg
xchg
imul
repnz
in
shlw
fs
lret
mov
leave
or
outsl
cltd
scas
test
jle
push
mov
cmp
jg
std
push
mov
cld
push
test
push
xor
popa
adc
xchg
mov
arpl
fimuls
jo
repz
lock
aas
lods
push
mov
add
test
push
cmp
das
test
sbbb
leave
inc
loop
sub
arpl
jmp
lock
mov
js
cmp
je
sub
dec
fadd
jae
lret
adc
inc
fnstcw
ficoms
ja
cwtl
ficompl
shrl
hlt
xor
mov
mov
fbstp
fdivrl
push
pop
dec
pop
cmp
pop
xor
adc
gs
lcall
push
xchg
movsb
push
pop
push
repnz
les
pushf
gs
cmpl
outsl
jns
ss
push
mov
sbb
and
popa
cmp
mov
jae
fwait
xor
shr
and
cltd
flds
shll
negb
leave
in
inc
push
cmp
das
mov
jecxz
sbb
xchg
inc
cld
sbb
sbb
adc
jl
mov
and
std
inc
or
ljmp
mov
mov
jbe
adc
mov
xor
mov
xor
jnp
push
mov
jb
arpl
cwtl
and
pop
pop
and
fwait
xor
ja
aaa
fistpll
and
jmp
fidivrs
cmpsl
jg
and
lret
iret
pushl
and
fcoms
lods
adc
mov
and
dec
rcrl
insb
mov
xor
je
fs
cmp
xlat
cmp
scas
jg
fsubr
iret
je
test
ss
clc
push
dec
xchg
jb
pop
cwtl
inc
lret
jecxz
sub
push
jae
test
xor
icebp
mov
popa
testb
add
dec
xor
repz
cmp
fcmovne
push
xor
push
dec
sbb
fldcw
dec
ja
outsb
adc
jb
push
push
xor
lods
jae
cmp
dec
cli
inc
movzbl
cmp
shlb
ljmp
out
sub
roll
stos
cmc
stc
and
push
shll
or
aam
add
xchg
jmp
leave
ret
test
cs
inc
xchg
sbb
sub
fdecstp
adc
jno
addl
fwait
inc
and
dec
xor
mov
rclb
jnp
jmp
xchg
stc
clc
and
out
mov
xlat
shlb
xchg
adc
jb
nop
cmc
lret
push
add
roll
push
push
sub
lds
dec
push
mov
lcall
push
fcoms
orb
stos
push
jl
push
xor
sbb
mov
xchg
mov
test
lock
or
or
push
nop
pop
rcl
mov
push
xchg
outsl
xchg
mov
xchg
or
out
or
mov
add
adc
fdivrs
or
or
in
out
icebp
jp
sbb
xor
ds
xor
cmpsl
test
les
mov
xchg
addb
out
leave
dec
pushf
xchg
test
sbb
fadd
lds
loop
mov
jns
xchg
jnp
cmp
enter
imul
or
jmp
jmp
add
icebp
test
xchg
mov
xchg
lret
iret
xor
push
inc
adc
or
dec
je
shrb
in
shrb
push
je
push
scas
mov
cmc
sub
mov
sub
leave
popf
jnp
clc
mov
sarb
pop
mov
sbb
call
pop
xchg
out
add
jp
jge
je
push
in
mov
adc
lea
lods
in
sub
sub
mov
dec
sahf
jno
pop
sbb
mov
out
movsl
push
push
dec
cmp
hlt
dec
and
add
jg
push
pop
scas
pop
mov
pushl
movsl
fstps
adc
sbb
rol
dec
xor
sub
mov
hlt
sbb
cmp
mov
sbb
dec
mov
xchg
cld
fsts
push
sub
pushf
cmpsb
jg
and
cmpsb
iret
int
das
in
mov
cmp
jne
pop
data16
es
adc
cld
mov
xchg
sbb
jmp
scas
incb
lock
es
sub
mov
cmp
aas
ljmp
and
jnp
sub
mov
insb
cmp
pop
or
fsubl
inc
cmp
test
ljmp
mov
lret
cmp
inc
pop
jecxz
cwtl
cmpsl
pop
imul
xchg
cmp
mov
add
rorl
inc
scas
out
xchg
rorl
in
fbstp
shr
cli
sbb
mov
sbb
call
xor
ret
lret
cmp
adcb
or
xchg
mov
jbe
int3
or
inc
cs
insl
push
mov
mov
repz
rol
push
je
pop
add
mov
aam
adcb
inc
cmc
cmpb
movsl
xlat
fsubl
xor
ficomps
push
xor
lods
stc
xlat
std
mov
sub
add
icebp
js
and
into
fsubl
addl
jae
icebp
subb
insl
out
stc
aad
lock
shr
and
lcall
in
rcll
mov
shll
pop
jecxz
lret
push
adc
push
inc
sbb
ror
lock
cs
push
pop
iret
inc
or
inc
mov
mov
ret
mov
rorb
pop
mov
bound
data16
pop
ljmp
rcrb
loopne
popa
jno
xor
push
call
lret
jae
adcw
push
mov
pushf
push
push
lcall
or
push
cmp
dec
in
ret
fsts
cmp
push
adc
mov
mov
int
in
stc
cmpsb
sahf
dec
xchg
adc
or
sbb
notl
pop
or
aad
sub
mulb
test
jbe,pt
mov
out
lock
lcall
iret
and
sub
enter
add
sub
mov
xor
sub
sub
fisubrs
xor
gs
cs
repz
mov
dec
jmp
pop
push
pop
js
mov
insb
cwtl
enter
lret
movsb
mov
fimull
cmc
stc
gs
xor
mov
cmp
dec
aam
aaa
jecxz
and
pop
push
dec
scas
fwait
and
pop
imul
sbb
mov
xchg
or
push
in
or
cs
lock
or
sbb
jbe
mov
fsubl
mov
xchg
in
sbb
dec
mov
icebp
mov
adc
jmp
movsl
dec
out
js
inc
cmp
sti
pand
mov
jne
mov
dec
mov
int3
fwait
add
xchg
mov
call
pop
mov
or
mov
jl
cmc
mov
les
dec
ret
sub
cli
loope
popa
loop
cltd
inc
test
bsf
push
mov
push
cli
xchg
and
jge
push
dec
adc
push
jmp
ret
push
sub
aaa
and
push
or
bound
jae
fdivs
repnz
mov
sbb
out
push
test
jnp
push
js
sbb
mov
in
inc
incl
sbb
cltd
stos
pmaxub
pop
inc
lods
xchg
fcomps
mov
in
jb
adc
mov
test
out
push
adc
pop
testb
or
cmpsb
dec
push
sarl
imul
mov
sbb
stc
int
xor
inc
jns
aaa
stos
xchg
jne
nop
mov
jne
or
loope
add
push
leave
mov
add
mov
pop
int3
xchg
ss
pop
gs
ds
mov
jbe
sbb
adc
cmpsb
sarb
cmp
mov
pop
xor
icebp
clc
mov
pop
mov
sub
adc
ret
mov
mov
imul
xchg
xor
dec
mov
dec
pop
pusha
into
push
mull
out
adc
mov
pusha
scas
inc
fdivl
ds
mov
adc
add
insb
das
xchg
dec
lret
pop
in
cmc
lret
aas
mov
jnp
inc
sbbl
mov
lcall
js
lahf
ret
mov
or
hlt
mov
popf
insl
fdivs
lcall
jae
dec
push
mov
dec
out
mov
sbb
push
aam
mov
mov
pop
je
mov
stc
inc
mov
jp
xor
hlt
or
adc
adc
xlat
or
mov
jmp
push
pop
fwait
pop
aas
idivl
sub
int
cmpsb
push
pop
pop
pushf
sub
xchg
arpl
test
mov
clc
aaa
in
jne
loope
xchg
xchg
mov
xchg
pop
jecxz
lret
push
cmp
movsl
xchg
lock
int
fstl
dec
adc
sbb
outsl
push
or
mov
inc
add
repz
push
lds
sub
ss
in
push
mov
outsb
pop
rclb
cmp
ret
js
cmpsb
add
dec
dec
out
lds
push
lock
test
sub
cwtl
pop
jl
icebp
out
icebp
cmp
std
or
out
mov
les
push
stos
mov
jbe
fsubl
mov
arpl
or
mov
lods
cwtl
push
xchg
cmc
lds
add
push
xchg
or
stos
xchg
xchg
dec
jo
jae
dec
xor
jmp
pop
cmp
ret
jbe
outsl
mov
lods
enter
sbb
subl
ss
sti
sti
pop
fdivs
stc
daa
mov
dec
shll
jno
mov
stc
mov
sbb
loop
inc
jns
pop
in
ret
xchg
loope
cwtl
pushf
pop
lods
in
sbb
pop
pop
mov
cli
xchg
mov
fldcw
jae
jp
xorb
test
ja
pushf
int3
loopnew
mov
xor
xchg
dec
mov
mov
mov
out
fisubrs
lock
rorl
mov
movb
adc
mov
das
mov
adc
xor
add
lods
cmp
sub
mov
adc
cmpsl
sbb
sbb
cs
and
in
or
or
pop
ret
sbb
xchg
mov
adc
jecxz
in
mov
xchg
lods
es
dec
mov
orb
jmp
ljmp
or
cmp
push
cmp
xchg
xchg
push
movsb
test
pop
mov
cmp
aaa
inc
jne
ficoms
mov
mov
data16
mov
xchg
pushf
cmpb
mov
add
mov
adcl
mov
fwait
setge
iret
stc
sub
dec
adc
ret
dec
pushf
testl
inc
mov
gs
jns
enter
loope
test
or
pushl
and
dec
in
mov
loop
mov
xchg
and
pop
cld
cmp
lods
aas
out
lods
adc
cmp
or
imul
bound
scas
jecxz
orl
lret
outsl
adc
jns
subb
inc
jae
pop
push
sbb
fucomp
iret
cwtl
imul
hlt
pop
orps
mov
dec
les
mov
cmp
int
cltd
ljmp
rcll
cmp
imulb
sub
add
pop
scas
stos
inc
adc
xor
in
fisttpl
addr16
out
mov
pop
mov
add
jl
das
iret
sub
rep
sbb
int
sub
lods
mov
scas
out
mov
inc
sub
out
pop
adc
jne
enter
mov
adcl
or
js
fistps
repz
in
rclb
push
adc
pushf
inc
rcll
std
push
data16
xor
popf
lock
mov
fwait
les
inc
in
andb
mov
out
leave
and
jo
xchg
test
lcall
popf
ja
mov
jge
lock
lds
hlt
cltd
loope
out
cmp
lds
aad
push
inc
fstl
sbb
adc
cmp
xchg
add
out
or
cmp
pop
int
rcr
cld
daa
push
push
andb
push
mov
lahf
mov
gs
jle
decb
jmp
shll
gs
popf
fcompl
js
xchg
sub
test
lret
dec
out
in
mov
loop
or
mov
sbbb
push
lcall
dec
mov
rcl
cmc
aas
loope
pop
stos
xchg
mov
fiaddl
insb
xchg
xor
push
xchg
add
pop
clc
adc
and
xchg
dec
or
test
icebp
pop
or
into
test
out
cld
pop
fcomps
add
or
inc
mov
sar
ds
ljmp
and
stos
loop
movsl
xor
dec
nop
out
mov
fprem
mov
jnp
arpl
jl
mov
mov
movsl
jmp
cli
mov
pop
pop
jae
add
movq
movb
scas
mov
rclb
mov
xchg
addr16
inc
enter
pop
mov
pop
inc
stos
loopne
inc
pop
jbe
adc
fs
cltd
push
hlt
jmp
js
mov
fstl
jo
sbb
pusha
sbbb
mov
cmpsb
out
or
pop
mov
mov
xor
cli
call
and
push
push
cmpb
sti
leave
mov
movsl
push
pop
cmp
add
xchg
mov
or
test
dec
jno
pop
jne
xchg
dec
fxch
rorb
rcrl
dec
mov
push
popa
aaa
jp
aaa
jne
push
xor
mov
pusha
test
imul
mov
pop
add
sub
icebp
aaa
je
xor
jl
mov
push
jb
popf
pop
dec
pop
testl
xor
inc
pushw
es
jno
jmp
jl
ret
shrb
sub
cmp
mov
jg
cmp
jbe
fsubs
or
outsl
push
stc
cld
shlb
and
sbb
in
and
aaa
adc
ret
or
je
sti
outsb
adc
outsb
jmp
imul
or
cmpsl
std
fstl
aas
mov
repz
mov
and
lea
mov
cmp
jp
adc
xchg
fsubrl
pop
and
sub
out
adc
push
dec
cmp
popf
arpl
mov
xorl
pop
mov
outsb
xchg
push
outsl
in
inc
dec
adc
push
jae
add
mov
rcr
in
jbe
mov
stos
and
mov
mov
inc
push
fsubr
cld
dec
xchg
adc
shrl
test
rcll
add
mov
sub
shrl
repnz
mov
pushf
push
mov
and
pop
or
cmpsl
dec
add
or
pop
out
lret
das
cli
xor
fimuls
test
js
loope
adc
mov
pop
in
jns
or
cmp
pop
movsb
mov
or
cmova
jp
sbb
lret
adc
mov
shrb
xor
sbb
and
into
xor
enter
sub
js
fiadds
push
les
insl
add
jp
sti
ds
loop
imul
mov
rorl
mov
dec
lock
ds
ret
mov
inc
aad
sbb
pop
cmpsl
sub
cmp
not
repz
xor
cmp
jns
dec
iret
mov
je
and
int3
mov
pop
bound
test
out
sub
xor
xor
mov
lds
das
repnz
cmp
shlb
cmp
pop
lahf
jp
xor
les
data16
mov
mov
jecxz
xchg
out
fcoms
xor
negl
xchg
cmc
std
adc
mov
lcall
push
shll
nop
hlt
or
adc
cmpsb
push
outsl
xor
scas
fsub
adc
xchg
mov
push
scas
stos
cld
push
mov
adc
mov
mov
pushf
sbb
pusha
mov
mov
jno
imul
or
cmp
cmp
into
jg
pop
fisubs
sub
shll
inc
push
pop
nop
hlt
pop
push
push
mov
test
lcall
out
fisubl
mov
pop
fwait
sbb
or
rcll
xor
mov
popa
jg
push
imul
push
xchg
sbb
fnstsw
call
jo
out
pop
iret
dec
out
pop
xor
push
add
cmp
ja
insb
stos
lahf
das
scas
xchg
inc
push
dec
sahf
test
jmp
xchg
cld
aad
jmp
cltd
xchg
add
sub
inc
popa
jecxz
add
mov
sub
dec
xor
repz
cmpsl
daa
lahf
inc
scas
sti
adc
cmp
mov
out
pop
mov
call
xchg
insb
fstl
xchg
jecxz
and
push
pop
aas
mov
push
sbb
imul
loopne
xchg
fstpt
jl
rclb
mov
xchg
pop
mov
lods
inc
xchg
cmp
lret
stc
aam
loop
cltd
xor
testl
fs
inc
mov
push
mov
lock
popf
inc
pushf
jae
lock
mov
mov
cmp
les
mov
sub
sti
mov
pop
sbb
mov
jns
pop
cmpsl
cmpsl
sar
xchg
jb
test
lret
xor
add
cmp
mov
rcll
dec
ret
cmp
cmpsl
inc
es
cmc
jae
sbbl
mov
clc
lds
aas
pop
push
in
fbld
mov
xchg
cmp
sbb
negb
mov
pop
push
and
iret
fildll
bnd
andb
sti
rorl
jl
clc
add
lea
js
and
dec
xchg
xchg
pop
shll
sbb
fldl
xchg
ds
pusha
mov
outsl
lds
nop
sub
in
and
and
test
dec
loopne
mov
sbb
aaa
fwait
add
push
pop
jmp
jo
ja
ret
jl
movsl
mov
mov
jnp
mov
xchg
add
lds
fstpl
xlat
repnz
push
out
enter
insl
jns
jne
add
mov
flds
in
mov
pop
mov
mov
jge
sub
mov
add
sub
out
add
std
frstor
pop
int
pop
mov
mov
sub
je
dec
cmpsb
outsb
sahf
vandps
pop
ljmp
and
inc
xchg
push
and
push
imul
and
fstps
das
je
dec
dec
bound
cmpsl
popa
jmp
rcrb
xchg
iret
icebp
popa
rorb
pushf
mov
push
cmp
add
push
hlt
stos
bndldx
pop
rcll
sbb
fistl
je
jb
xchg
shlb
and
push
inc
imul
xor
insl
mov
and
ds
orl
sub
test
shlb
jmp
mov
ja
int
loopne
std
fwait
and
xchg
cmp
adc
cmp
roll
stos
int
xchg
popa
aam
out
mov
lock
add
loope
adcb
outsb
xchg
clc
pop
in
add
mov
test
xchg
dec
movsl
mov
fcompl
and
out
mov
shl
mov
dec
mov
cwtl
addr16
mov
push
cs
push
push
mov
lret
loopne
pop
pushf
jno
sti
jmp
xor
inc
repnz
test
hlt
out
rcrb
dec
icebp
or
push
fildll
add
stos
in
fildll
pop
dec
nop
stos
outsb
adc
cmp
movsb
int3
or
ret
lret
jb
aad
les
rcr
xor
into
xor
add
mov
lds
and
fbld
call
js
jge
cmp
out
out
iret
mov
cld
mov
pop
fisubs
pop
xor
fdivp
dec
mov
jo
inc
icebp
cltd
lods
fisubl
xor
and
or
test
xchg
fs
imul
xchg
inc
xor
adc
cmp
mov
js
mov
cmp
adc
push
pusha
cmp
inc
lret
stos
mov
add
jmp
aaa
jns
or
sbbb
pop
xor
psrlq
jp
je
add
stos
sbbl
mov
stos
movsl
xor
add
mov
call
andb
or
cmp
cmp
imul
sub
xor
out
jbe
out
inc
mov
pop
jecxz
ficoms
jns
dec
mov
xor
xlat
ss
adc
aaa
fdiv
addr16
lock
sub
in
inc
das
pop
insb
ss
push
mov
pop
shrl
adcb
inc
hlt
test
push
flds
mov
pop
mov
movsb
insb
pop
cmp
pop
cld
jne
push
sub
cli
out
mov
inc
add
sti
cltd
hlt
aas
sbb
rep
pusha
lret
add
les
and
jb
dec
stc
adc
dec
out
push
add
add
cmpsb
int
mov
in
jno
mov
aam
out
and
adc
lea
jae
mov
add
ds
pop
sahf
popf
push
push
mov
aam
loope
fstpt
xor
mov
add
xchg
jp
pop
lods
mov
frstor
inc
sbb
js
in
aaa
imull
popa
ljmp
push
mov
add
pop
aaa
loope
cs
mov
lods
bound
pop
mov
aas
inc
mov
enter
scas
fs
fldz
mov
sub
addr16
js
sub
fcomps
pushf
xchg
js
cmp
ss
add
xor
mov
test
mov
sarw
mov
xor
je
popa
mov
ret
mov
jge
or
ret
mov
or
dec
ljmp
dec
outsb
roll
jno
lret
cmp
jno
or
xor
push
dec
add
pushf
jmp
sti
das
or
addb
xor
xor
and
cmp
or
imul
push
or
push
cmp
mov
push
lea
xor
push
leave
mov
pop
test
jp
xchg
mov
mov
adcl
pop
sbb
sbb
imul
arpl
mov
jno
das
pushf
aas
out
ja
in
ljmp
or
dec
push
outsl
pop
mov
adc
js
jne
jnp
push
popf
jne
mov
dec
sbb
push
pop
stos
jl
fsin
insb
ss
jmp
inc
cmp
add
outsl
push
and
fdivr
cmp
jl
imul
and
clc
push
push
push
or
mov
sub
push
test
add
add
add
or
repz
in
xchg
ljmp
mov
jb
outsb
mov
sbb
lahf
push
dec
int3
xchg
mov
mov
cmp
cmp
pop
rcll
dec
jns
adc
pop
repnz
pop
mov
clc
lret
add
in
push
out
push
xor
push
int
cltd
adc
imul
mov
stc
jne
jbe
rorl
aam
addr16
fs
adc
rol
xlat
out
ss
bound
add
rclb
popa
mov
loop
mov
jno
sub
jecxz
adc
mov
or
jb
mov
das
enter
pop
mov
leave
push
sbb
and
js
fistps
add
sti
xorl
repz
sub
movsl
push
lcall
inc
dec
imul
movsb
repnz
subl
jns
push
shr
enter
jo
pop
cld
repnz
mov
sahf
insb
xchg
dec
xchg
rcl
and
rorl
mov
push
jle
and
mov
xor
adc
dec
push
les
add
aam
push
cli
lds
sub
scas
ret
adc
pop
adc
pop
and
minps
or
push
cs
stc
xchg
lahf
es
mov
push
pop
sub
les
push
rcrb
push
rol
ret
xchg
ljmp
xchg
xor
xchg
mov
lahf
pop
lret
imul
clc
and
and
or
test
and
imul
push
mov
xchg
xchg
stos
pop
dec
xchg
jns
filds
sbb
ficoml
dec
into
loopne
xor
xor
add
sti
ja
push
sar
movsl
lret
mov
mov
cltd
mov
dec
out
lret
fwait
xor
jl
cmp
test
lock
repz
scas
push
cmpsl
aam
sub
daa
jno
or
mov
sbb
mov
xor
inc
jns
adc
jecxz
mov
sbb
daa
jmp
xor
cld
or
mov
loopne
dec
inc
les
sbb
mov
push
outsl
xor
test
jg
jnp
stc
and
test
add
or
mov
inc
out
ret
add
push
or
sub
sahf
adcl
jb
sub
mov
mov
insb
pop
fsubl
dec
sbb
mov
test
or
dec
sbbb
push
out
mov
dec
pop
std
out
push
cmpl
jb
sbb
and
cltd
push
jo
and
sbb
ljmp
jl
scas
adc
sub
insb
sahf
icebp
cmp
pxor
push
lock
subb
push
inc
sbb
imull
xor
mov
dec
lods
andl
mov
inc
push
test
adc
cmc
pop
scas
popf
inc
push
arpl
lret
add
push
adc
or
filds
adc
dec
sahf
insb
xchg
pop
loopne
cmp
and
or
and
push
push
xchg
fwait
dec
xchg
les
adc
out
mov
push
push
mov
bound
dec
leave
ljmp
jecxz
stc
cmp
imul
xchg
xrelease
dec
bound
xchg
lcall
outsl
and
jge
outsl
mov
notb
push
ds
hlt
push
jge
ja
lcall
rolb
cmpsb
jp
movsb
inc
ror
adc
xor
dec
ficompl
or
push
test
lock
lret
cwtl
pop
insb
fsubl
test
cmp
cmp
mov
sub
mov
pop
xchg
int3
adc
repnz
lock
pop
mov
push
sarl
ds
mov
rcrb
pop
xor
jno
push
iret
std
push
inc
inc
xor
push
bound
dec
jb
inc
lods
or
repz
cmpsb
or
ja
movsl
xor
xor
mov
pop
push
fwait
add
orb
dec
addr16
gs
sub
push
cmp
repnz
mov
sbb
push
sub
dec
les
rolb
push
lcall
inc
dec
jae
rcr
fimuls
fdivrs
mov
imul
jb
dec
es
movsl
sub
loopne
dec
xchg
xor
xlat
pop
push
mov
sahf
cmp
xor
pop
sub
test
popf
push
in
dec
push
fdivl
bound
in
lcall
push
gs
idivl
and
mov
add
and
dec
and
fcmovu
mov
pop
aas
stc
push
fwait
sti
inc
ljmp
stc
outsl
inc
dec
adc
mov
mov
repz
sbb
popa
ficomps
mov
adc
adc
stos
xorl
out
inc
lds
cltd
cmp
sub
xor
xchg
add
mov
add
push
push
mov
into
popa
push
call
cmc
jg
sahf
repz
mov
fistps
les
aas
cmpb
cmp
jb
mov
adc
int
dec
cmpsl
adc
sarb
aam
stos
in
lods
mov
aas
dec
fstps
scas
add
cmpsl
out
add
in
mov
fadd
fnstsw
fbstp
mov
lret
jbe
pushf
insb
mov
mov
jne
xchg
lret
xchg
sbb
cmp
fadds
les
sti
or
push
jmp
outsb
dec
cmp
les
inc
and
push
xlat
daa
xor
xor
or
or
or
inc
fidivl
je
int3
inc
cmp
sub
movsl
xchg
test
mov
test
loopne
daa
divb
cmpsl
lods
cmpsl
or
add
pushf
xchg
add
jge
cwtl
xor
outsb
lods
mov
xlat
cmpsb
nop
enter
sbb
insb
cmp
jmp
xor
xchg
mov
int3
popf
rcrl
add
int3
sbb
xchg
cmp
mov
lods
lret
inc
dec
pop
sub
movq
fiadds
push
xchg
sbb
sbb
aaa
xor
xlat
scas
std
mov
iret
mov
jne
aas
rorb
xchg
mov
push
sbbl
subb
scas
hlt
je
push
int3
sbb
pop
jnp
jbe
or
sti
sbb
stos
mov
shll
jg
mov
adc
jno
shrl
mov
jge
repz
sub
jg
mov
adc
push
addl
in
dec
stc
mov
in
mov
jmp
jb
enter
lods
jl
in
inc
inc
dec
iret
fwait
add
mov
jae
jp
call
inc
stos
inc
push
add
aas
lcall
mov
das
sbb
sub
iret
or
xor
cs
dec
je
jp
mov
std
fdivl
jl
dec
lea
xchg
or
push
stos
mov
jnp
sbb
push
add
leave
fwait
pop
pop
mov
sub
fisubrl
sbb
or
clc
decl
imul
sub
sbb
jae
test
int3
pop
push
adc
push
sbb
sub
xorb
xor
pop
add
insl
aaa
enter
mov
mov
sub
push
adcl
mov
or
es
push
das
add
fwait
lds
ret
add
iret
mov
pusha
and
imul
les
popf
pushf
xorb
sub
cmpsl
cld
ret
aam
nop
cmp
sbb
and
daa
jle
mov
imul
sub
into
sub
sbb
mov
popa
jno
xchg
rorl
dec
fcoml
mov
stc
aas
cmp
loope
mov
adc
lahf
adc
movsl
test
loop
sub
dec
and
cli
jge
stos
ljmp
inc
into
inc
sub
sub
jg
jae
xchg
movsb
push
arpl
je
xor
out
gs
comiss
ja
dec
dec
dec
lcall
test
pop
mov
es
sub
push
cs
mov
fsubs
jae
testl
popf
xchg
nop
ljmp
addr16
lcall
out
add
push
data16
cmc
out
pop
in
xchg
add
rorl
add
insl
nop
sar
pop
in
outsl
inc
pop
pusha
data16
fcmovbe
scas
in
call
and
jo
push
jmp
stc
fisttps
sbb
jmp
sbb
xchg
daa
jl
jne
testb
push
xchg
inc
out
cmpb
cli
xor
dec
mov
mov
add
aas
ss
enter
inc
lods
sub
push
testl
mov
dec
mov
or
jecxz
arpl
mov
pop
jmp
pop
xchg
jno
aad
adc
lds
lock
xchg
scas
aad
fwait
inc
das
adc
push
dec
or
pop
cltd
xchg
out
xchg
data16
ja
add
mov
xchg
fisubl
add
dec
cs
cs
pop
sub
jnp
out
stos
pop
flds
mov
mov
pop
fildl
movsl
das
or
sbb
mov
loopne
jns
xlat
push
int
cmp
or
imulb
push
int
int
icebp
test
ja
out
movsl
xchg
mov
sti
push
ss
xor
push
lea
lods
sub
push
pop
sub
push
outsb
pop
lds
loop
inc
in
mov
or
jnp
sbb
dec
adc
fmul
mov
sbb
dec
add
and
out
push
fdivp
cmpsb
push
push
sbb
loopne
fwait
clc
pop
test
je
add
out
xor
mov
repz
stos
sbb
and
mov
mov
stos
push
cwtl
mov
notl
fwait
push
mov
stc
mov
inc
inc
xchg
fimull
mov
loopne
ret
sarl
in
lds
cld
or
es
mov
into
mov
xchg
frstor
cld
jne
inc
mov
mov
adc
addr16
out
xor
and
das
movsb
or
inc
mov
subb
push
cltd
jb
outsl
outsl
cs
divl
nop
cmp
aad
dec
sbbb
scas
ffreep
fbld
jnp
mov
outsb
cmc
in
ret
test
sbb
mov
stos
imul
sbb
enter
iret
cmp
fs
xchg
add
inc
aad
xlat
sub
inc
sbbl
sub
stc
add
cmp
xor
divl
jge
lret
mov
aam
sbb
addr16
adc
pop
sub
std
les
and
out
xchg
add
adc
sar
hlt
or
cltd
out
push
cmp
sub
sub
std
push
cmp
sbb
bound
cmovo
and
jp
cmp
jnp
dec
sub
cmp
imul
cmpsl
test
adc
sbb
test
je
int3
jmp
movsb
lods
div
mov
test
push
xchg
xchg
mov
les
iret
fbld
shl
inc
sbb
stos
lahf
cwtl
lods
mov
lods
mov
and
std
loopne
out
cmp
loop
adc
dec
or
decl
mov
push
stc
pop
push
je
lcall
test
cmpsl
jl
pop
mov
ljmp
xchg
push
frstpm(287
cltd
icebp
jge,pt
daa
lea
and
dec
cmc
sbb
dec
mov
xchg
mov
pushf
mov
and
nop
and
fdivrp
pop
jbe
mov
push
jg
pop
in
pop
sub
lock
hlt
mov
mov
mov
push
mov
movsb
cmp
push
add
ja
xor
cmp
pop
xchg
in
xor
push
rol
adc
or
fisttpl
xchg
inc
xchg
push
jl
rclb
xchg
ja
nop
sbb
adc
adc
repz
jecxz
in
or
insl
mov
mov
pop
mov
flds
loop
sub
cmpsl
scas
dec
xchg
adc
testb
xchg
pop
jg
sbb
shlb
leave
pushf
clc
inc
ljmp
xchg
mov
call
mov
push
push
sub
into
adc
out
inc
leave
gs
es
and
mov
and
jmp
push
sbb
dec
sub
fdivr
dec
pop
push
jmp
lret
push
mov
cmp
das
xor
mov
bnd
jae
gs
dec
cld
mov
and
xor
jne
ret
outsb
jo
add
shlb
stos
in
jo
lret
pushf
in
pushf
xchg
pop
ret
rcll
loope
inc
pop
loopne
jl
into
push
int
fldt
mov
test
out
sahf
loopne
cld
lcall
and
loopne
adc
addl
dec
mov
mov
insb
xor
mov
aam
xor
shl
adc
lds
rorl
xor
enter
lahf
inc
outsb
add
or
push
xchg
pop
or
xor
fwait
out
mov
mov
divb
inc
dec
int
daa
in
shrl
fsubrp
mov
outsb
cmp
jge
rcll
loopne
fbld
jl
cwtl
jns
mov
jo
shl
mov
pop
ljmp
jge
outsl
mov
lret
imul
mov
or
ja
mov
mov
jg
and
daa
std
dec
fwait
aad
xchg
inc
push
xchg
out
and
add
jg
std
movsb
mov
mov
aad
dec
sahf
fbstp
ss
and
testl
add
or
or
sbb
pop
popa
dec
adc
fidivl
xchg
popa
ficomps
psrlw
pop
sbb
push
adc
mov
lcall
sub
fadds
rorl
rorl
mov
xor
jo
push
stos
loopne
and
dec
cmp
xchg
daa
push
sbb
and
pushf
cmp
fwait
jno
pop
test
xchg
addl
add
bound
loopne
adc
aas
xor
jle
out
mov
js
test
jo
xor
cmpsb
jne
dec
push
add
cs
and
cmp
cmp
pop
pop
cmc
addr16
cmp
xchg
and
imul
mov
dec
xorl
and
cmp
cmp
and
or
out
or
jle
aad
in
js
cmpsb
daa
pop
jp
mov
add
add
dec
xor
mov
into
and
lods
pop
sbbb
dec
sub
cmpsb
sbb
rclb
cmp
stos
fnstcw
insl
imul
sbb
sarb
cmp
push
data16
lahf
mov
inc
mov
dec
test
xchg
jae
sbb
gs
xor
aad
les
cs
clc
dec
lods
push
test
xchg
call
push
imull
cmp
test
movsb
jb
pop
pop
mov
xchg
out
in
fwait
push
out
or
insb
bnd
and
call
sbb
xchg
ds
aas
mov
ljmp
xchg
xorb
push
aaa
scas
xchg
fistps
hlt
insl
fs
push
repz
mov
je
mov
popf
dec
mov
sub
mov
sbb
push
dec
pop
stos
mov
test
mov
mov
jge
into
jne
and
shrb
aam
ja
and
loop
xorl
movsb
das
test
les
fdivrs
cmp
or
push
add
dec
mov
mov
shrl
sbb
pop
sub
mov
inc
lret
jg
cmp
dec
adc
lcall
xchg
lods
lds
and
rcrl
loop
ss
xchg
dec
les
mov
in
sub
cmp
insl
sub
sub
jmp
mov
xor
mov
sahf
subl
out
gs
mov
dec
or
in
mov
mov
mov
jno
mov
cmpsl
int3
shrw
setl
or
repnz
repz
mov
addr16
fldt
test
cld
mov
cmp
xchg
mov
cli
lahf
std
inc
fwait
dec
and
pop
movsl
lret
add
add
leave
cld
cs
mov
xor
xlat
outsb
inc
sub
sbb
xorb
dec
inc
imul
xchg
jae
dec
adc
inc
or
stc
sahf
pop
xlat
aam
fidivrl
ret
imul
sbb
pop
sarb
jecxz
test
push
mov
fdecstp
cltd
xor
shrl
lods
sarb
push
repz
outsl
popa
std
rcrl
pusha
push
jle
lds
inc
repz
ja
lods
mov
es
adc
scas
dec
movsb
push
inc
movsl
jecxz
cmc
notl
aas
or
stos
out
or
sarl
jnp
and
cmp
inc
jg
lahf
test
shlb
pop
fmull
lods
cltd
xchg
or
cld
leave
clc
iret
nop
addb
pop
fisttpl
out
jp
cmpb
mov
xchg
sbb
lods
sarb
jle
mov
or
lret
int
dec
sbb
jns
jle
jg
sbb
std
enter
aas
jns
add
aas
ffreep
jge
inc
sbb
stos
fimuls
or
xor
push
int
popl
push
xor
cmpsb
xchg
popf
int3
hlt
out
in
imul
lods
sahf
test
mov
sbb
stos
push
aaa
xor
rol
pop
adc
push
hlt
jge
jne
gs
lcall
cli
loope
mov
add
std
xor
pop
mov
je
inc
mov
mov
nop
adc
mov
pushf
jmp
xchg
or
andb
arpl
lea
in
daa
movsb
dec
or
jmp
nop
inc
pop
data16
push
push
out
pop
xchg
cld
dec
lods
or
jno
cmp
push
or
cltd
jne
lcall
jns
sbb
lds
dec
mov
ret
sub
cmp
hlt
fisubrl
in
lock
mov
or
movsl
pop
push
loopne
in
inc
pop
ss
je
xchg
jl
sbb
popa
push
je
pop
xor
in
xor
mov
mov
jnp
shll
pop
pop
pop
out
rdseed
roll
push
sub
divl
pushf
xor
pop
cmpsb
cmp
xchg
mov
push
pop
dec
add
test
add
push
lahf
mov
leave
xlat
mov
jo
mov
cmp
sub
push
fcoms
mov
movsl
xchg
xchg
xor
pop
lcall
loop
push
xorb
cs
mov
fcmovne
push
push
imul
push
adc
shlb
jle
jecxz
or
jge
dec
pop
test
fdivs
dec
and
push
pop
nop
lock
cld
ret
sbb
cwtl
inc
jne
xlat
push
add
sbb
dec
loope
ja
outsl
in
add
and
cmp
jb
movsl
mov
mov
cld
lods
jecxz
stc
xchg
jne
xor
pand
adc
mov
lea
cltd
cmp
inc
add
cmpb
popf
jae
xchg
into
hlt
mov
mov
pop
lret
movsl
lods
sub
dec
std
or
lds
push
add
push
xlat
sbb
aaa
lock
pop
mov
sbb
push
cltd
sbb
ds
lahf
or
push
loope
mov
popf
pop
fbstp
or
popf
enter
repnz
mov
iret
addr16
mov
sarl
scas
lods
dec
leave
sbb
lret
push
pop
shll
insb
push
push
les
sub
cmpsb
imul
mov
fisttps
fdivrs
jns
dec
pop
xor
cmp
jle
cmp
jmp
faddp
rorb
adc
xor
dec
hlt
xor
mov
pop
sub
and
pop
jb
movsl
stos
dec
fidivs
xor
jecxz
iret
inc
pop
xor
repnz
test
xchg
daa
dec
push
test
jae
addr16
daa
movsb
mov
outsl
dec
adc
push
xchg
sbb
cs
out
mov
aad
xchg
sub
push
mov
push
addr16
mov
in
xchg
les
push
adc
jne
mov
xor
out
clc
lods
int
lcall
mov
add
repnz
add
ljmp
xor
mov
xchg
sbb
dec
leave
rcr
repnz
int
and
push
sub
lock
xor
adc
clc
mov
mov
xchg
js
sbb
aad
insl
ss
fwait
push
outsl
mov
cli
mov
lcall
lret
or
aam
push
test
fdivr
push
iret
dec
call
pop
in
mov
sbb
testb
inc
mov
add
jl
jo
mov
jnp
pop
lds
arpl
xchg
clc
xor
sub
sub
sub
imul
int
lods
cltd
and
js
test
outsl
pop
mov
out
dec
mov
xchg
lret
add
xchg
push
nop
aad
rorl
sahf
xchg
sub
fs
jmp
scas
xor
nop
aam
and
xchg
jnp
movsl
imul
dec
mov
subl
pop
ret
push
add
mov
outsb
cmp
sub
inc
push
aaa
inc
mov
jmp
sbb
push
shll
jb
mov
mov
arpl
sub
or
movsb
pop
inc
mov
scas
cs
jecxz
daa
inc
mov
jle
jmp
sbb
jb
mov
fdivs
mov
hlt
push
add
mov
xor
mov
aaa
popa
and
lods
imul
push
lds
popa
jb
push
or
mov
out
or
out
xor
fidivrl
test
adc
idivl
inc
cmp
xor
outsb
and
test
mov
pushf
and
pop
cld
adc
ljmp
ljmp
scas
out
out
cmp
sbb
cmp
clc
mov
stos
pop
stos
into
mov
mov
push
aad
mov
or
xor
cmpsl
and
mov
xlat
push
and
jne
scas
push
outsb
icebp
xchg
push
sub
pop
iret
sub
push
jmp
sahf
les
jae
jp
test
movsl
xlat
and
fmulp
insl
lret
push
int
cmp
or
jge
pop
lret
xlat
pop
cmc
iret
out
enter
in
test
mov
mov
adc
or
jge
test
nop
sahf
mov
mov
shll
dec
and
lods
xor
in
imul
mov
pop
notl
mov
lahf
mov
sbb
push
rclb
mov
or
cmp
rol
out
insl
in
arpl
pop
mov
imulb
sbb
inc
fucomi
mov
daa
push
imul
pop
pop
or
and
cmc
sub
bound
movsl
inc
iret
out
gs
or
pop
push
lcall
inc
xchg
xlat
cmp
mov
js
out
in
mov
pop
dec
and
inc
push
and
in
pop
mov
outsb
or
xchg
imul
jb
cmpsl
test
pop
enter
test
adc
cmp
or
adc
sbb
out
jge
xchg
rorb
orb
inc
mov
out
cwtl
sahf
cmp
mov
pop
sub
fdivrl
aad
inc
push
mov
and
xchg
xchg
or
jg
add
dec
lret
icebp
dec
in
das
xchg
push
jns
mov
lock
xchg
in
cmp
int3
jae
dec
dec
adc
pop
repnz
cs
out
arpl
push
mov
fcmovbe
sbb
subl
dec
and
ret
jg
mov
loope
push
les
jmp
shlb
cmp
add
xor
int
and
pop
out
mov
aam
or
rcl
mov
loop
push
push
ljmp
int3
mull
push
ss
add
testl
loope
pop
ficomps
cmp
cwtl
cmpsl
jbe
inc
fimuls
lahf
movsl
dec
sbb
jbe
xchg
push
loope
push
and
adc
movsl
lret
lahf
sbbl
xchg
sarb
je
iret
push
loop
push
dec
and
add
pop
xchg
cmp
aas
pop
jo
test
cmp
aaa
xchg
jge
aad
dec
pop
push
jle
mov
push
movsl
out
out
movsb
and
lea
xor
sbb
mov
inc
loop
popf
stos
inc
and
mov
jb
mov
stos
cs
adc
inc
test
cmc
push
mov
mov
jno
jns
js
xchg
xor
cmc
add
fldt
rcr
shrl
push
mov
js
fdivrl
lahf
es
adc
jg
divl
xchg
popf
gs
popa
insl
clc
mov
lock
xchg
and
mov
mov
sbb
mov
shrb
stc
xchg
sti
pop
mov
xlat
xor
sbb
fcmovne
cmp
insb
adc
pop
and
add
cmp
jge
std
pop
push
bound
dec
scas
cmp
hlt
into
rcrl
adc
mov
ja
mov
mov
iret
xchg
lea
gs
add
negl
xchg
push
adc
lds
outsl
fwait
test
xor
cmove
mov
cli
push
jnp
negb
add
xlat
cli
cmp
jo
shll
sub
push
add
das
rcll
inc
jge
sarb
pushf
das
pop
fnstcw
jne
mov
fdivrl
arpl
mov
adc
stos
pop
movb
stc
xlat
iret
pop
std
pushf
gs
aam
or
data16
adc
mov
fwait
xchg
scas
in
jmp
push
sbb
lcall
mov
push
xor
add
stos
sbb
aad
mov
mov
add
adc
mov
les
dec
enter
stos
jo
sub
inc
adc
out
push
fucom
push
lret
jecxz
clc
and
cmpsl
movsl
cmp
cli
ds
into
add
mov
lret
dec
xor
data16
sbb
and
sub
sub
insb
jnp
xchg
mov
inc
mov
mov
cmc
pop
and
in
pop
cs
add
jge
xlat
int
fsubp
in
stc
pop
cmp
sub
and
sub
mov
out
inc
lret
ja
add
xor
pusha
stos
sarl
or
out
mov
cli
bound
cs
pop
mov
adc
or
xor
mov
sub
gs
shlb
xchg
fwait
xor
push
ret
outsl
push
xorl
leave
mov
cvttps2pi
mov
cmpb
mov
xchg
adc
jecxz
ss
lahf
jo
add
test
or
cwtl
push
mov
sti
in
pop
pop
dec
lock
out
test
pop
pop
stos
or
add
mov
cmp
dec
andl
outsb
mov
jno
sub
cmp
xchg
lock
and
pop
jmp
or
fsubs
nop
cld
jb
popa
xchg
dec
cmp
mov
sbb
xorl
push
jns
orb
pop
addr16
jo
fldt
mov
pop
aad
scas
ss
iret
scas
push
lret
outsl
mov
jno
insb
cmpsl
adc
mov
pop
dec
cmp
mov
sbb
shll
mov
jb
cli
cmp
push
out
and
xchg
push
adc
loopne
xor
mov
pushf
ljmp
ret
mov
inc
jnp
lret
enter
cmc
std
shlb
shl
push
iret
imul
adc
cmp
pushf
das
fisubrl
fnsave
mov
shlb
cmpsb
xchg
lret
cs
mov
mov
pusha
sub
mov
dec
mov
aad
push
mov
repnz
push
bound
int
cmp
cmp
xor
xchg
xor
arpl
out
lret
cmpsl
mull
out
repnz
je
inc
enter
push
fdivrs
out
pop
xchg
and
data16
jecxz
mov
pop
addl
push
loopne
mov
pop
js
pop
mov
sbb
sbb
out
jno
or
push
inc
mov
cmpsb
scas
cmp
fistps
lea
dec
mov
repz
ja
sub
fbld
jns
repz
pop
cmp
pop
adc
cmp
fiadds
repz
clc
inc
jne
adc
or
cmp
mov
je
shll
int3
pop
pop
je
addr16
mov
push
in
jp
dec
sbb
fcompl
adc
pop
cmpl
pop
pop
dec
and
in
pop
aam
mov
sub
and
xchg
mov
fisttpll
xchg
fisubs
mov
fld
ret
repz
mov
pop
push
and
sub
xor
jns
pop
or
mov
xchg
dec
pop
jne
ljmp
sub
or
sbb
mov
cmp
pop
call
cmc
or
idiv
xchg
add
in
call
jge
fsubrs
push
lds
cli
jle
or
mov
lods
in
dec
repz
cld
push
sbb
jmp
push
xor
popa
mov
mov
jne
inc
sbb
or
jecxz
mov
inc
fs
sbb
popa
add
cmp
push
jo
or
repz
js
xor
fmull
je
mov
cmp
enter
out
lock
outsl
sbb
add
jl
stc
and
or
mov
mov
test
mov
rorl
outsl
mov
sbb
push
pop
mov
mov
int3
sub
pop
xrelease
jge
insl
jae
repz
std
outsl
int
arpl
sub
cmpsl
loop
push
icebp
mov
xor
outsl
fisubrl
pop
rclb
pop
dec
sub
aad
out
outsb
fst
jmp
inc
dec
adcb
incb
dec
pop
popf
dec
fcoms
dec
pop
mov
xor
lret
arpl
or
sub
push
sub
fs
aas
rorl
add
and
in
mov
inc
jnp
mov
push
imul
mov
and
mov
mov
push
dec
iret
jns
fdivrs
test
movsl
enter
push
call
adc
mov
idivb
movsb
daa
setle
adc
mov
xchg
jle
sub
xchg
shlb
mov
mov
sub
cmp
xor
das
adc
pop
addr16
fwait
lods
out
lahf
mov
vpcomw
enter
jo
and
mov
sub
lret
leave
adc
movsl
jge
push
insl
shlb
jnp
add
imul
cmp
outsl
sub
sbb
xor
cmp
test
fadds
filds
movsl
lods
sub
sub
imul
mov
jecxz
mov
inc
fsts
shrb
push
xor
popa
xchg
mov
push
xor
mov
pop
addr16
xchg
ljmp
arpl
inc
cmpsl
sub
in
movsb
leave
jns
inc
fisubrs
mov
jae
mov
pop
es
ss
fistpl
mov
cwtl
sub
cmpsb
xchg
adc
inc
rol
fwait
pop
loope
mov
add
in
xchg
ret
or
xor
add
add
push
call
das
sub
mov
scas
loope
sub
aas
ss
xchg
push
xchg
jl
adc
repz
pop
rorl
insl
std
cwtl
add
test
cli
add
xchg
das
sbb
mov
push
inc
inc
adc
enter
push
sbbl
rorb
clc
mov
push
push
or
into
mov
or
mov
cmp
lret
lcall
les
outsl
mov
test
lret
ret
xor
out
sub
push
repz
insb
xor
out
mov
dec
add
push
cwtl
push
flds
movsl
pop
js
sub
js
xchg
cmc
repnz
clc
je
inc
push
and
repz
in
mov
aad
inc
out
mov
xchg
mov
push
pop
cmp
sub
sub
cmp
in
jge
jae
cmp
sub
leave
ja
testl
cmc
pop
add
insb
nop
mov
push
xchg
mov
mov
and
inc
jno
adc
jmp
xor
xlat
xlat
inc
or
daa
push
add
mov
push
das
or
mov
cmpsl
int
scas
int
fstps
int3
mov
mov
mov
faddl
xchg
sub
mov
sub
mov
scas
push
popa
pop
adc
daa
jbe
inc
jg
shr
sub
pop
sbb
rcl
xor
cmp
pop
cmpsl
mov
cld
mov
shll
cli
push
je
fisttps
sub
mov
rcl
iret
or
cmp
loopne
icebp
lret
les
insl
mov
cmp
es
cmp
sub
xchg
sbb
in
rcl
lea
cmp
ljmp
mov
sub
imul
aad
dec
lret
inc
sbb
icebp
jp
cs
cld
das
and
add
hlt
cmp
icebp
mov
fnstcw
int
sbb
dec
mov
mov
dec
adc
sub
add
es
insl
push
pop
xchg
clc
mov
xchg
mov
mov
jp
inc
into
int3
in
pop
setp
int
out
in
cli
mov
or
imul
clc
decl
dec
fisttpl
pop
jg
subb
push
xlat
push
rcrl
mov
push
es
pop
insl
flds
aas
fdiv
rcrb
dec
mov
mov
cltd
icebp
or
ja
and
dec
mov
lret
adc
pop
mov
fistpl
shll
adc
stc
cmp
outsl
ss
sub
inc
mov
test
xor
mov
mov
push
lods
adc
adc
ja
js
rcpps
and
mov
rcl
add
jg
aaa
leave
imul
cs
cld
xchg
shll
pop
movsl
jae
andl
fwait
imul
xlat
sub
sti
loope
ret
insl
stc
dec
out
cmp
cwtl
nop
stc
lea
divb
or
sub
lods
stc
aas
ds
fwait
mov
pop
outsb
repnz
xor
push
push
movsl
jecxz
roll
mov
into
push
mov
testb
dec
mov
mov
pop
push
mov
cld
jb
lods
sub
sub
insl
loopne
aam
rcll
adc
ret
mov
hlt
out
mov
push
mov
sub
sbb
inc
lods
sub
xchg
mov
clc
cli
push
fisubrs
lcall
rol
pop
mov
adc
scas
adcb
xchg
enter
sub
xor
mov
or
out
bound
sbb
inc
or
ds
xor
repz
ja
divb
xor
inc
sub
dec
lcall
imul
adc
pop
pop
push
movsb
in
ja
and
aaa
popa
xchg
mov
push
sbb
jecxz
loop
out
lcall
ret
mov
rorl
pop
movsl
in
in
xor
sbb
cmp
out
adc
mov
subb
idivb
ret
in
push
mov
in
pop
insb
inc
pop
scas
mov
cs
sub
dec
or
jg
or
pop
insb
movb
gs
es
pop
std
fs
out
sbb
gs
clc
xchg
mov
dec
in
loope
psubw
or
sub
sahf
sub
cmp
rcrb
pop
jl
cmp
rclb
mov
jb
ja
mov
dec
inc
sub
jno
leave
xchg
dec
cmp
mov
lds
and
test
sub
xchg
dec
in
ljmp
dec
popf
iret
test
mov
mov
decb
ss
stos
adc
sbb
out
jb
cmc
push
test
mov
or
xchg
push
popa
and
mov
mov
ds
ret
jo
aam
push
mov
add
cli
or
or
mov
sub
loop
lds
sbb
and
inc
dec
push
jb
hlt
xchg
and
fwait
popa
stc
mov
adcb
stos
negb
loopne
inc
repnz
sbb
sbbl
scas
and
sarb
movsb
jp
sub
data16
loopne
and
inc
filds
scas
push
hlt
jb
fldenv
sub
lds
aaa
ds
adc
push
pop
js
iret
sbb
pushf
fstps
cmpsl
adc
rcrl
sbb
pop
mov
push
sub
fnstenv
sub
and
imul
das
pop
sar
call
jnp
and
sbb
loopne
mov
mov
dec
push
add
jmp
adc
dec
fldcw
pop
sbb
xchg
out
ljmp
push
dec
test
sahf
cli
push
in
cld
xchg
ret
inc
mov
add
sub
sub
aas
add
test
xchg
sbb
mov
add
out
push
rorb
xor
or
sahf
pop
cmpsl
fsubr
add
push
sbb
data16
cmpsl
dec
inc
test
jge
inc
mov
cs
dec
movsb
dec
dec
data16
enter
mov
mov
and
enter
outsl
outsb
xorl
jge
push
movsl
push
in
mov
adc
loopne
cld
shrb
add
adc
dec
mov
push
inc
pushaw
adc
cli
sahf
in
cwtl
pop
rolb
fisttps
in
push
in
ss
sbb
mov
daa
movsb
lcall
xor
jne
out
cmp
xchg
das
dec
and
pusha
push
cmp
mov
mov
fnstenv
push
scas
ss
and
dec
sbb
insb
lock
loope
sub
pop
mov
dec
adc
mov
inc
loope
sub
shlb
mov
leave
aas
add
inc
mov
pop
rclb
add
repnz
nop
xor
jno
repnz
fucomi
jbe
pop
out
add
dec
pop
pop
ss
test
stos
mov
cmpsl
nop
jle
adc
mov
hlt
push
stos
xchg
adc
in
or
xchg
nop
xor
dec
hlt
adc
outsb
test
out
add
and
sub
fld
in
mov
sbb
mov
add
out
pushf
push
sahf
ret
test
adc
mov
loopne
mov
inc
aaa
ljmp
shlb
inc
icebp
and
stc
call
pop
push
mov
push
mov
jae
incl
cmp
sbb
fucomp
cwtl
fisubrl
in
int3
xchg
data16
or
negl
mov
push
mov
cltd
sbb
push
push
fcompl
mov
call
sbb
lret
mov
lds
movsb
fsts
xor
scas
add
movsb
fbstp
loopne
lods
and
pop
aam
sub
jbe
test
mov
ror
mov
movsl
push
jns
loop
inc
scas
and
or
jge
imul
mov
cmpsl
pop
mov
add
cmpsl
mov
dec
sahf
dec
rcll
push
xchg
push
popf
fwait
pop
push
repz
sub
insl
inc
stos
aas
subb
push
fst
lahf
arpl
mov
rcrl
sbb
mov
lds
xchg
mov
sub
out
nop
lods
lret
xor
cmovb
pop
mov
sti
test
stos
inc
cmpsb
shlb
hlt
testl
fcoml
push
pop
daa
aaa
popa
ret
outsl
outsl
and
push
test
addb
test
mov
arpl
out
fwait
mov
mov
push
js
mov
xchg
sbb
dec
jmp
sub
stos
pop
orl
fwait
and
pop
inc
jne
imul
mov
out
inc
mov
je
mov
imul
mov
pop
outsl
adc
pushf
icebp
jmp
sar
mov
cmp
or
fwait
shl
xchg
cmc
in
popf
loopne
mov
sub
or
inc
enter
je
aas
mov
cmp
mov
pop
ret
jle
inc
xorb
testb
xchg
xchg
je
mov
add
jo
pop
pop
std
in
add
push
mov
push
scas
stc
popa
arpl
fdivrl
cld
mov
mov
sub
out
fcoml
int3
loop
enter
enter
movsb
jo
call
cld
xchg
rclb
sub
dec
sub
inc
dec
addr16
pop
lret
adc
pop
enter
repz
mov
push
mull
push
repnz
lea
std
fisttpll
inc
mov
mov
into
dec
movsb
mov
add
lret
mov
jo
cltd
aad
lods
mov
push
cli
mov
sbb
push
lcall
mov
xchg
inc
std
lock
out
adc
test
mov
testb
push
dec
xchg
jmp
fwait
pop
outsl
mov
inc
mov
and
lea
adc
ret
hlt
push
push
jnp
or
mov
aas
in
js
mov
daa
stos
push
adc
pop
xor
push
test
add
movsb
and
enter
fcmovu
fsubl
jmp
push
push
xor
sub
mov
inc
jmp
pop
push
push
stos
aas
mov
data16
stos
push
jbe
inc
pop
mov
call
loope
dec
shll
in
insl
aas
dec
cmpsl
addr16
add
scas
jmp
mov
mov
je
sbb
movb
call
aad
fisttpll
xlat
sbb
push
out
xor
lods
lods
fs
adcl
xchg
jle
lds
dec
mov
adc
xlat
test
pop
cs
or
xchg
add
cmc
mov
pop
jae
mov
sbb
add
ljmp
inc
inc
cltd
mov
push
dec
jns
lods
pop
pop
or
lds
lahf
push
std
call
int
xchg
pushf
mov
mov
aaa
pushf
gs
mov
pmulhuw
stos
or
into
cmp
pop
addr16
mov
xlat
scas
fimull
or
mov
mov
push
jmp
inc
cmpsb
test
push
push
dec
push
pushf
sbb
cmpb
es
dec
push
cs
or
shrl
iret
and
popf
cmp
out
inc
and
pop
jp
mov
cmp
popa
pop
outsb
xchg
call
cli
test
inc
jmp
clc
mov
repz
je
lds
test
clc
clc
add
rorl
add
ret
les
dec
jp
jp
bsf
sbb
repnz
loopne
mov
pop
adc
int3
dec
mov
jge
pop
mov
popa
cmp
mov
fdivs
cli
inc
inc
stc
cli
movsb
pop
jle
adc
push
mov
std
rcll
jnp
cmp
or
push
movsb
cmpsb
movsb
scas
mov
add
mov
fmull
pop
jle
push
inc
ljmp
adc
mov
faddl
mov
mov
push
stc
sbb
xchg
jmp
add
or
add
in
inc
jb
adc
mov
mov
movsb
fidivrl
xor
inc
sub
imul
xor
lahf
jle
mov
mov
repnz
loopne
aad
xlat
push
cmp
xchg
jg
enter
gs
mov
and
arpl
loop
xchg
mov
cmc
xor
mov
sbb
sar
or
xlat
jbe
mov
or
jmp
jns
insl
ficompl
loopne
dec
mov
jge
cwtl
das
enter
iret
mov
mov
and
loope
add
aad
mov
insl
adc
xor
pop
loop
imul
fs
cmp
jo
loope
mov
pop
ret
mov
mov
inc
test
jno
or
push
mov
les
dec
in
push
decl
mov
jge
bound
adc
or
jmp
fisttpll
dec
fiadds
mov
inc
cmp
addb
xchg
dec
gs
dec
and
ss
fdivl
mov
push
loop
add
xlat
mov
filds
testl
jnp
jne
pop
fucomi
int
call
test
push
f2xm1
or
stc
inc
pop
cmpsb
or
insb
hlt
loop
test
xchg
mov
push
adc
push
loopne
push
jbe
outsl
test
push
xor
push
adc
popa
mov
lea
cmp
nop
cmp
icebp
imul
arpl
nop
movsb
mov
shrl
jns
dec
pop
pusha
movsb
arpl
mov
mov
inc
sbb
cld
ljmp
and
sub
rcr
insb
lods
jg
js
scas
js
shrb
xchg
pusha
les
pop
mov
inc
dec
push
and
lods
enter
in
aas
mov
imul
scas
idivl
mov
push
out
jno
ss
sub
cmp
pop
iret
dec
jns
mov
jmp
mov
sub
jno
icebp
rorl
rcl
jns
mov
in
push
ret
xlat
fld
or
dec
xlat
movsb
in
fadds
jmp
xchg
mov
pop
pop
out
push
leave
push
cwtl
stos
ret
repnz
test
xor
dec
enter
daa
int
or
subl
test
jb
add
and
mov
out
aam
es
movsl
das
nop
std
repnz
sti
sub
movsl
cmp
jp
outsb
push
push
push
pop
out
jg
dec
jecxz
push
ret
loop
negb
les
inc
and
stos
stc
push
pop
lahf
pushf
dec
and
ret
add
cmp
in
clc
inc
cmp
sbb
mov
fwait
pop
mov
aam
mov
lods
jp
test
mov
mov
pop
dec
mov
mov
or
jg
cltd
sbb
ljmp
test
push
push
cmpsl
cmp
movsl
sbb
iret
addl
pushf
orb
ret
mov
pop
xchg
pop
in
add
je
cmp
add
imul
out
cmp
push
push
xor
inc
mov
cld
pop
xchg
in
test
mov
cmp
popa
pop
test
pop
jecxz
into
jae
push
fwait
cmp
testb
repz
std
mov
mov
rcr
leave
jle
pop
cli
and
pusha
jbe
add
push
jo
push
pushf
cmp
idiv
cmc
pop
inc
dec
das
movsb
fistpll
push
aam
cmp
cmp
cmovne
push
push
int3
dec
test
mov
lods
mov
dec
hlt
inc
iret
add
jnp
push
cli
lret
popa
xor
jns
pop
mov
push
pop
lcall
test
repz
pop
push
xor
or
add
fldcw
ljmp
lds
mov
mov
cmp
stos
lods
and
call
pop
jp
or
push
shrb
lcall
std
mov
cwtl
je
inc
fistpll
inc
jnp
lods
sysret
push
cs
adc
jbe
mov
ja
push
mov
mov
adc
xchg
pusha
int
subl
dec
add
xor
jno
lock
add
jp
inc
loopne
jnp
sbb
call
cmpsb
adc
inc
pop
dec
or
or
lret
pop
lahf
stos
mov
mov
popa
sub
loopne
push
dec
mov
inc
xchg
fcomip
aaa
push
in
lock
mov
hlt
pop
adc
fwait
cmp
fdivr
insl
adc
push
pop
push
push
lods
or
nop
and
icebp
in
inc
mov
fbstp
int
push
sub
xor
fidivrl
mov
iret
cld
jecxz
cld
cmpb
out
roll
lock
mov
jnp
scas
mov
in
aaa
movsb
xorl
sbb
je
xor
pop
xchg
inc
jbe
leave
push
ljmp
icebp
xchg
push
cltd
imul
imul
mov
mov
sbb
jecxz
in
dec
stos
mov
cmc
clc
mov
pop
inc
sbb
int
jge
xchg
insl
pop
xor
or
loopne
add
sbb
ljmp
clc
gs
mov
sbb
bound
add
popl
outsl
fildll
cmp
xchg
jb
pushf
inc
dec
xchg
adc
jle
es
aam
mov
mov
pop
xor
mov
movsl
pusha
stos
mov
clc
lea
adc
jmp
sbb
jne
data16
pusha
pop
adcl
pop
enter
fcmovb
inc
data16
test
mov
or
daa
in
push
leave
in
jbe
subb
xchg
xor
jmp
mov
sbb
jecxz
adc
shrl
lret
xor
sahf
sbb
lahf
push
sub
sub
pushf
xchg
jl
sub
aam
mov
cmpl
sub
popa
cmpl
and
scas
into
leave
pop
or
hlt
lock
addl
add
mov
test
or
ret
ds
gs
sbb
adc
mov
mov
stos
ja
mov
and
xlat
inc
adc
out
xor
and
outsb
pop
inc
fstps
and
push
pop
movsl
mov
mov
xor
aad
mov
sar
pop
push
fildll
cmpsl
and
adc
mov
add
mov
stos
cmc
sbb
and
popf
sub
movsb
adc
pop
mov
cs
daa
jnp
lahf
popf
testl
cmc
jp
out
push
sti
mov
and
aad
xchg
and
jge
and
sbb
mov
cli
imull
aam
and
mov
sbb
in
cld
lret
mov
movsb
adc
cmp
lock
loope
add
cmp
dec
xchg
mov
sub
jl
pusha
inc
inc
lahf
cli
scas
das
jge
sbb
imul
clc
jp
jge
dec
mov
cmp
or
lods
lahf
inc
xchg
pushl
push
sub
sub
les
enter
or
and
mov
fisttpl
aaa
ret
cld
cmpsl
shrl
mov
leave
inc
xchg
arpl
cmp
in
add
inc
std
ja
jl
test
in
lret
stos
scas
sub
repnz
notl
sub
pop
andl
in
xor
sub
sub
imulb
sbb
ja
xchg
pop
leave
mov
xchg
add
sub
adc
fwait
ds
cmp
pop
xchg
cmp
mov
adc
jle
jg
add
xor
cmp
fisubrs
fs
sub
faddl
jecxz
out
test
xor
xor
mov
cmp
push
inc
xor
mov
push
cwtl
ss
push
lock
bound
xorl
cli
xchg
out
mov
cld
and
sbb
mov
out
sti
aas
push
mov
fidivs
add
sbb
pop
inc
les
repz
mov
sbb
mov
pop
jmp
loopne
out
arpl
cli
jb
and
pop
or
clc
mov
mov
push
or
fwait
cmp
lahf
xchg
fnstcw
jle
cmp
lret
push
repnz
sub
xchg
das
lea
add
ficoml
dec
mov
add
push
mov
cmp
out
sbb
sti
or
fcompl
xor
mov
mov
nop
sbb
pop
mov
add
inc
pop
fimuls
cmc
mov
jg
fisubrs
imul
mov
or
int3
sub
inc
in
or
aad
cmpb
push
sbb
cmpsb
roll
icebp
pop
jp
cmpsb
pop
push
pop
mov
dec
arpl
push
gs
mov
sbb
ror
adc
mov
nop
int
and
and
or
popa
stos
loopne
je
push
add
jno
ds
mov
jge
negl
in
lret
int
cmp
dec
inc
cmpsl
fmulp
enter
dec
sub
xor
cli
mov
pushl
aas
mov
push
xchg
leave
push
popa
popa
ljmp
mov
ljmp
aaa
gs
test
cs
pop
iret
push
int
lret
sub
add
pause
sbb
sbb
frstor
aam
sub
lods
fmuls
sub
push
hlt
xor
adc
out
lods
int
mov
mov
mov
push
sbb
lret
and
sub
mov
ss
sbb
mov
mov
pop
adc
out
inc
pop
cmpsb
jae
push
pop
aam
xor
push
pop
mov
fildll
push
faddl
test
les
gs
adc
push
jmp
cltd
jmp
imul
aad
fidivl
mov
popl
push
stc
mov
xchg
adc
jmp
mov
mov
xchg
mov
sbb
pop
loopne
lret
sahf
xchg
dec
mov
sub
mov
movswl
stos
mov
aaa
stc
sub
adc
mov
aas
inc
int3
aam
inc
ljmp
push
pop
shlb
stc
add
das
pop
shll
std
mov
inc
imul
jmp
pop
sub
xchg
outsb
negb
cwtl
xor
test
into
arpl
jl
xchg
orl
ret
dec
loop
pop
pop
dec
cmp
xor
loope
inc
mov
stos
xor
out
adc
mov
aad
cmp
arpl
mov
movsb
or
fcoml
xchg
les
push
lea
sub
pop
jnp
into
add
or
insb
in
rorl
sahf
mov
xchg
rcll
push
into
movsb
xor
cmp
and
dec
mov
adc
sbb
xor
or
lds
sbb
inc
pop
add
mov
xor
mov
push
hlt
pop
lcall
xorb
scas
push
mov
and
inc
shl
sub
ficoml
xchg
fs
out
testb
orl
hlt
test
or
loopne
lods
pop
add
iret
mov
arpl
test
call
mov
add
jns
adc
add
jg
pop
test
inc
mov
xchg
dec
cmp
hlt
movsl
push
notl
stos
shlb
mov
mov
movl
pop
enter
cmpsb
adc
lea
inc
insb
pop
imul
adc
jp
xor
clc
outsb
stos
mov
jg
cmpsl
mov
int3
mov
movsb
xchg
push
mov
fcoms
push
xchg
popa
lret
movsb
dec
cmp
inc
jb
pop
lock
or
shrb
orl
outsb
mov
rorl
lret
xchg
les
fidivl
rolb
nop
les
bound
xchg
and
adc
add
into
xchg
push
or
lods
mov
or
fidivrl
pop
adc
cmp
mov
fisubs
add
dec
push
out
mov
test
inc
lods
lcall
mov
jg
jno
outsb
fistl
sbb
mov
jmp
fadds
xchg
and
div
push
movsb
xor
jle
sbb
jle
mov
pop
rclb
add
je
into
aas
fwait
es
adc
cld
add
inc
or
jl
in
xchg
pop
sbb
xchg
int
arpl
cmp
xchg
mov
in
mov
mov
and
adc
mov
cmc
xor
adc
mov
or
ds
xchg
rcrb
sbb
mov
add
sbb
pop
outsb
cli
into
adc
rcll
clc
adc
xchg
cmc
shrl
rcrl
and
ds
outsb
sbb
push
incl
aad
in
inc
loop
add
dec
ss
adcl
cltd
aaa
mov
pop
inc
mov
jl
or
rcrb
or
daa
aad
adc
mov
cmp
or
into
dec
cli
xor
pusha
cltd
push
jle
sbb
dec
push
add
dec
add
std
pop
hlt
cmp
inc
cli
jbe
add
jecxz
mov
jno
ljmp
jne
aas
sbb
outsb
enter
les
push
daa
sub
or
xorl
jle
stos
rcrb
es
xchg
icebp
pop
cmp
sub
out
js
xchg
sbb
and
jne
mov
cmpsb
aas
inc
push
mov
mov
and
sbb
dec
mulb
fwait
int3
movsb
add
mov
xor
mov
push
test
in
lock
jge
jo
push
fs
loope
and
movsl
ja
mov
rcrb
dec
sti
fwait
mov
push
fdivs
arpl
movsb
repz
fstpt
push
ds
ja
inc
dec
sbb
cltd
hlt
sub
nop
mov
rorl
push
nop
icebp
nop
ficoml
dec
xchg
imul
xchg
cltd
movsl
add
pop
lahf
pushf
sub
jbe
mov
mov
movsl
adc
movsb
je
movsl
sti
add
es
ja
idivl
scas
push
push
pusha
jg
dec
mov
jle
lods
repnz
ljmp
jge
aaa
sub
pop
mov
mov
fisttpll
ja
inc
adc
sahf
mov
dec
fstpl
jl
push
cs
clc
mov
cmpsl
cmp
inc
add
dec
icebp
fiaddl
imul
notl
jmp
pop
mov
arpl
jnp
lcall
push
mov
and
xchg
xchg
or
pop
aam
jecxz
aam
rclb
jnp
xchg
mov
dec
dec
lock
and
cmp
or
or
mov
cmp
jbe
push
lea
mov
jnp
mov
rolb
jecxz
lcall
jne
sub
stos
iret
fs
icebp
xlat
or
xchg
sbb
inc
pop
xor
or
nop
dec
mov
ja
add
hlt
xor
mov
xlat
pop
push
adc
xor
push
push
dec
jg
das
cli
out
cmpsb
add
subl
jmp
adc
xor
cmpsb
pop
icebp
mov
ds
fimull
mov
ljmp
and
adc
cli
out
imulb
push
dec
inc
cli
fsubr
ja
add
jnp
arpl
out
bnd
push
pop
int
sarl
dec
adc
mov
loop
sub
arpl
int
sub
mov
in
cmpsb
pop
or
xchg
push
push
ljmp
sbb
test
pop
cmpsb
mov
andb
inc
popf
aas
mov
add
fiaddl
in
xchg
fcoms
sarb
pop
mov
int
inc
je
fbstp
sbb
add
mov
ficoms
je
cld
pop
inc
fwait
or
jae
sti
sbb
dec
sbb
cmp
outsb
hlt
rcrb
jb
mov
movsb
sbb
lcall
shlb
dec
jns
xchg
lods
cmp
xchg
scas
dec
in
push
xor
xor
lcall
mov
push
mov
mov
das
adc
out
in
repnz
stos
push
sub
sbb
cmpsb
lds
sub
fsubs
jl
out
pop
sub
cmp
jns
rcrb
loopne
dec
push
mov
mov
inc
inc
xchg
push
jp
test
jge
lods
mov
jmp
mov
inc
add
movsl
js
mov
das
jno
loopne
fmuls
fidivrl
sbb
movsb
sarb
shll
push
cmp
psubd
enter
stc
insb
inc
adc
dec
pop
mov
push
sbb
jge
aas
fldl
dec
test
iret
add
xlat
pop
popa
pop
enter
test
roll
imul
and
add
push
inc
jecxz
mov
cmp
push
cmp
or
or
sub
aaa
sarb
aas
push
push
mov
incb
sbb
or
mov
stos
mov
jbe
pop
add
dec
int3
loope
mov
loop
dec
mov
cmp
cmpsl
ja
jo
push
push
inc
lret
fistl
and
movsb
insl
xchg
sub
addb
mov
push
adc
push
xor
or
fnstenv
fcomps
icebp
xor
xor
and
outsl
adc
jbe
ds
adc
fucomi
push
xchg
cmp
in
mov
outsl
mov
jmp
add
mov
push
lahf
push
test
fcomi
test
mov
cmp
out
mov
repnz
jb
nopl
jnp
cwtl
fcompl
outsb
mov
xor
sbb
loope
or
into
mov
pop
popa
outsl
je
orb
ljmp
imul
mov
xchg
pop
add
pushl
cltd
adc
in
inc
inc
insb
aas
jecxz
sbb
ret
out
sub
lock
outsl
inc
movlps
jne
pusha
iret
lods
jbe
adc
cmp
xchg
jmp
and
inc
test
and
nop
adcl
jecxz
jl
scas
jmp
aam
push
push
mov
inc
cmp
mov
fwait
dec
mov
imul
addr16
mov
mov
out
fistps
lods
mov
loopne
lock
push
cmp
mov
sub
and
fists
sbb
inc
xor
mov
add
mov
fcoms
mov
xchg
cmpsb
pop
das
jno
sub
add
imul
imul
jno
cwtl
push
lret
fwait
arpl
adc
pop
lahf
movsl
pop
mov
loopne
pusha
je
ret
push
push
xchg
fsubrl
adc
loop
inc
mov
mov
mov
jo
inc
std
mul
ljmp
pop
loop
mov
cld
inc
cmp
jae
out
sti
pop
jnp
into
fcoms
scas
jns
sub
lea
ffreep
ret
and
adc
dec
lock
popa
sub
rep
or
test
push
int3
pop
hlt
sbb
lret
mov
pop
pop
jl
out
sbbb
arpl
and
mov
adc
aas
jbe
mov
pop
and
movsl
xchg
int3
mov
fistl
ret
out
xorl
cwtl
push
les
fildl
xchg
dec
pop
leave
or
mov
or
xchg
test
mul
jmp
loop
out
shrd
ja
pop
cld
xor
adc
rcrl
push
movsl
push
test
pop
call
movsl
gs
cltd
xchg
or
sub
adc
cmp
pop
and
mov
inc
enter
xchg
dec
or
mov
aaa
popa
lods
cs
arpl
pusha
rcl
cltd
dec
std
loopne
xchg
push
push
sarl
out
add
es
dec
out
sti
sub
dec
mov
push
sahf
mov
mov
addr16
aas
xor
mov
stos
sarb
jbe
push
xor
lods
or
pop
xor
outsl
dec
push
mov
push
pop
or
dec
pushf
dec
repnz
xchg
xchg
mov
dec
aaa
test
mov
xchg
jp
insb
adc
lcall
lret
push
add
push
jecxz
repnz
ja
outsb
aaa
push
cmpsb
loop
push
and
ja
stos
in
push
dec
decl
out
inc
jmp
jbe
mov
outsl
jmp
xchg
lods
mov
cmp
mov
push
sahf
mov
shll
je
stc
das
subl
subb
jns
pop
out
out
push
sub
ja
repnz
in
pusha
mov
pop
xchg
mov
loopne
push
mov
push
dec
pop
jge
mov
xlat
or
bound
lret
test
adc
inc
cmpsl
or
xchg
sahf
push
xlat
in
int3
pop
ret
mov
pop
mov
shlb
js
cltd
jne
movsl
dec
rdpmc
push
jle
mov
mov
stc
test
pop
nop
int
xor
jle
in
adc
xchg
add
lods
int
dec
lret
incb
jmp
lods
sub
fs
cli
pop
cmp
jge
xchg
mov
xor
mov
ret
xlat
push
lock
fldcw
adc
clc
mov
jg
cmp
ficompl
ret
jle
stos
xchg
aam
data16
adc
xor
sbb
repnz
pop
mov
pop
adc
dec
loopne
push
push
mov
mov
test
in
fisubrs
jb
mov
stos
cmpsl
lock
sbb
fisubs
pop
sub
testb
cmpsl
iret
inc
scas
orb
inc
scas
pop
jmp
hlt
mov
addr16
jle
stos
or
lock
in
mov
repnz
xchg
loopne
aas
in
addr16
addr16
mov
dec
mov
fidivs
and
fwait
push
mov
mov
arpl
mov
out
cs
lods
and
cmp
cmp
xchg
and
mov
inc
aad
test
pop
cmpsl
sbb
pop
push
test
daa
fisttpll
int
cld
lar
cmp
rcl
clc
aad
loopne
sub
insl
ss
rorl
addr16
cmp
mov
lahf
push
push
pop
pop
inc
jge
out
lea
jnp
ss
mov
sub
jge
xor
gs
mov
in
imul
lods
sub
jmp
mov
push
aas
fcmovb
clc
mov
mov
fcoml
sub
jecxz
lret
in
fmuls
mov
pop
ret
adc
sub
or
add
mov
add
mov
pop
lods
fists
jmp
scas
shl
rol
push
push
mov
call
scas
jae
aad
xchg
fstpt
cmp
lcall
aad
mov
jb
lods
pop
xor
push
inc
push
js
outsl
bound
fdiv
lea
and
into
nop
inc
jns
aas
xor
ds
xor
mov
arpl
insl
inc
xchg
sbb
pop
sbb
push
jbe
pop
dec
mov
repz
lock
ljmp
jl
repz
mov
pushl
jp
push
inc
push
xchg
jae
mov
inc
sub
js
out
adc
ret
rcr
lcall
scas
cltd
adc
insb
push
fnstenv
data16
fnstsw
dec
sub
push
test
popa
push
xor
jl
and
imul
iret
pop
cmp
inc
mov
lahf
jge
dec
mov
inc
push
lcall
add
incb
test
push
imulb
ljmp
stos
mov
sahf
sarb
fidivrl
ret
push
fwait
jp
fs
in
push
sub
or
or
mov
fdivrl
xchg
mov
daa
out
daa
jae
adc
mov
and
movsl
sub
iret
cmpsb
add
movsb
adc
fisubrs
adc
shlb
mov
adc
pop
stos
popf
inc
xchg
adc
ret
lahf
addr16
aas
push
addr16
mov
cltd
sarl
dec
xor
rcrb
ja
stos
or
pop
push
xor
mov
mov
mov
scas
test
in
inc
jmp
dec
mov
cmp
push
dec
add
rorl
dec
xchg
ds
out
sbb
mov
fbstp
loope
addb
push
scas
inc
fs
sbb
out
push
add
mov
rorl
mov
jl
inc
or
xor
out
add
outsl
outsl
js
jl
dec
pop
and
data16
sbb
cmpsb
sbb
stos
adc
push
jnp,pn
pop
divl
fldt
loop
lahf
adc
outsl
aad
mov
loop
and
sarl
loop
pop
push
cld
inc
mov
mov
addb
adc
aad
xchg
fnstcw
pop
xor
in
lcall
orl
mov
and
repnz
cmp
xchg
scas
and
out
adc
daa
rcll
fldenv
jmp
cld
jle
add
sub
pop
xchg
push
jg
add
ss
dec
out
inc
ret
loope
jp
mov
xchg
xchg
mov
aas
scas
adc
aad
addr16
xchg
sarb
es
in
jl,pt
in
aam
pop
jmp
loop
jl
add
loope
xor
xchg
outsb
imul
inc
repz
or
xchg
jne
ret
fcomps
sub
pop
fsts
mov
mov
ja
add
pop
pop
cmpsb
outsb
cmova
es
outsl
popf
das
sbb
mov
ret
inc
push
enter
or
in
aaa
or
aam
dec
movsl
rclb
pop
cmp
fs
int
cmpsl
ret
sbb
scas
mov
cld
hlt
jbe
sub
outsl
wbinvd
out
loop
jbe
lds
mov
xor
das
pushf
lret
pop
fwait
ret
sub
notb
sbb
sbb
sbb
adc
jnp
pop
es
mov
fmull
push
pushf
stos
mov
push
sub
add
test
lea
push
int
push
pop
mov
jmp
fstps
mov
imul
sub
jle
sahf
popf
sub
cmp
and
inc
lds
imul
in
mov
dec
in
movsl
inc
adc
pop
test
push
cmpsl
fs
cli
sub
sub
lcall
seta
es
arpl
movsl
push
cmp
cmp
sub
ss
jns
xor
cmp
lcall
aas
mov
js
shrb
pop
test
adc
scas
mov
push
testl
lock
sahf
pusha
xchg
int3
cld
clc
jge
jmp
cmc
jns
jae
mov
push
insb
lret
cmpb
xor
daa
push
push
int
stos
inc
adc
loop
scas
inc
cli
inc
xchg
mov
es
loop
test
fstpl
gs
clc
add
movsb
xchg
out
jmp
into
jmp
jne
mov
push
fucomi
insl
imul
cmp
xor
adc
adc
je
ds
test
cli
mov
lods
adc
mov
sub
xchg
sarb
or
inc
int3
push
sub
xchg
and
inc
pop
lea
or
mov
xor
out
cli
test
insb
repnz
mov
mov
and
cmp
stc
xor
sbbb
out
movsl
mov
cmpsb
gs
mov
xlat
mov
cltd
xchg
sub
xchg
pop
and
mov
fs
sbb
push
sbbl
lahf
iret
aam
rorl
lods
sub
adc
scas
push
cmpb
in
sbb
mov
inc
incl
fldcw
or
repz
xchg
jl
mov
fsubrl
sub
pop
fistps
sub
xlat
scas
lcall
in
xchg
push
in
inc
pop
aad
lods
fildll
dec
mov
pop
jb
movsb
ss
pop
in
jl
repz
mov
add
sbb
inc
inc
test
fwait
jg
mov
mov
pop
popf
subb
mov
pop
add
inc
inc
xor
pop
jp
mov
sbb
push
mov
sbb
pushf
push
arpl
inc
sbb
push
add
mov
imul
xor
ret
int3
and
mov
les
into
in
arpl
test
out
mov
add
mov
xor
sbb
ss
jae
mov
out
stos
cmpsb
cmpsl
inc
xlat
clc
bound
sub
subl
je
jecxz
imul
mov
testb
cli
xlat
inc
aad
jb
dec
fcoms
outsl
or
pop
loope
and
or
in
xchg
fstpl
jge
or
ljmp
jle
fstl
add
ss
or
in
lods
mov
lret
adcb
fisttpl
out
jecxz
aad
push
sub
jmp
in
jecxz
adc
adc
iret
mov
mov
dec
int3
sub
stc
popf
imul
es
cmp
repnz
and
fidivrl
call
dec
push
movsl
decb
movl
cmc
jecxz
sbb
jo
jecxz
push
shl
lods
enter
outsb
sti
push
mov
iret
cmp
pop
incl
fwait
mov
lods
xchg
cmc
dec
mov
jne
mov
popf
orl
gs
fs
sbb
add
and
negl
test
scas
mov
loope
daa
fisubl
or
pop
mov
xchg
mov
cmp
out
call
aas
push
in
and
cmp
mov
mov
sub
dec
add
arpl
push
cltd
pusha
push
test
fldenv
xchg
push
bswap
test
mov
scas
cwtl
inc
leave
ljmp
fists
and
xchg
call
das
mov
stc
in
sub
push
mov
sbb
mov
lods
into
mov
popa
sbb
icebp
xor
cmpb
push
rol
test
cmp
push
xor
push
mov
jae
push
mov
adc
out
int3
pop
fcompl
cmp
nop
or
jnp
xchg
xchg
dec
in
xor
addb
push
add
mov
outsb
fisttpll
scas
shlb
scas
shl
mov
fildl
stc
inc
cmp
cwtl
cmpb
sub
addr16
gs
cmp
je
add
jns
dec
in
or
orl
stos
ret
pop
pop
divl
jg
sub
popf
sbb
ds
xchg
push
mov
leave
jg
pushf
jb
cmp
icebp
es
mov
push
push
lahf
jne
cs
cmp
loop
add
mov
mov
push
jns
pop
mov
lahf
mov
sbb
jnp
adc
mov
leave
inc
stos
fimull
pusha
push
scas
and
lds
sub
test
jg
inc
mov
into
in
cmp
scas
push
stos
test
jge
jns
mov
hlt
mov
dec
mulb
xor
mov
in
fisubrl
jbe
jg
xchg
jle
les
pop
in
hlt
loop
xchg
mov
in
xchg
mov
adc
jl
mov
push
bound
adc
testb
arpl
cli
fdivl
ljmp
outsb
pop
mov
cmp
jmp
fnstcw
mov
pop
cmp
xor
xchg
xor
inc
stos
cmpsl
repz
fdivs
aam
mov
mov
rorl
xchg
cmp
pop
ljmp
sub
gs
jns
sub
jle
int3
lea
mov
xor
fldenv
mov
push
cmpsb
mov
icebp
jp
pop
rorb
out
mov
std
scas
js
inc
popf
add
fidivs
addr16
test
in
push
inc
and
inc
pop
inc
xlat
gs
movsl
mov
dec
adc
add
movsb
rolb
cmc
jae
cmp
movsl
int3
push
xchg
sbb
leave
dec
add
lods
jno
cmpsb
dec
push
jno
jg
clc
cmp
aaa
push
out
jbe
inc
xchg
mov
xlat
in
xor
subb
mov
sbb
mov
rol
stos
pop
or
jmp
cmc
rclb
mov
sarl
xchg
xchg
cmpsl
shrl
ja
mov
cmpsl
mov
cwtl
push
std
aas
out
ret
stos
jge
sub
test
ror
xchg
imul
movsl
fildl
sbbl
adc
mov
sbb
outsb
leave
jae
movsl
push
js
xchg
fdivrl
idivb
fmull
push
pop
outsl
dec
lds
aaa
push
popf
pop
push
or
insb
out
cs
or
xchg
pop
in
jae
push
outsl
push
adcb
and
mov
loope
adc
pop
loope
rclb
test
js
xchg
sti
cmpsb
jp
mov
cs
lret
ret
into
inc
pusha
pop
cmc
fstpl
jne
dec
cld
daa
lret
icebp
jbe
xchg
arpl
fnstenv
ficoms
fld
daa
mov
sub
movsl
adc
lret
movsl
ja
mov
pop
jo
icebp
xor
lcall
rcll
inc
fwait
insb
xchg
lahf
adc
and
xor
pop
sub
cmpl
mov
ljmp
push
in
mov
adc
jmp
mov
es
movsl
add
and
or
repz
jle
mov
shll
nop
sbb
mov
push
fdivrp
mov
jl
lea
adc
push
push
cs
cmp
jae
sbb
adc
fisubrl
outsl
idivb
jbe
and
cltd
or
add
mul
sub
test
jg
xchg
xchg
jbe
fcoml
faddl
inc
xor
je
cmpsb
mov
into
call
mov
in
mov
xor
push
push
lods
loope
push
jge
pop
in
int3
add
stos
adc
lret
es
hlt
mov
fcoml
cmpsl
ds
enter
xor
add
xchg
out
or
testb
outsb
and
mov
mov
outsb
xor
test
xchg
shll
push
ficoms
sbb
int3
arpl
lods
in
sbb
imul
call
sbb
pop
xlat
pop
xor
out
cmpsb
les
add
inc
sub
es
mov
es
in
inc
push
popa
fldenv
ja
outsl
and
xor
mov
orl
sub
pusha
cmp
stos
fdivl
jl
fisubrl
repz
cltd
lret
mov
mov
loop
cld
mov
jmp
push
add
adc
movsb
pop
mov
pop
popa
lds
sti
sub
addr16
gs
jle
into
shrb
sub
push
lret
test
fwait
inc
shrb
cmp
dec
icebp
sar
fdivrl
into
push
add
mov
fwait
mov
mov
sti
cmp
xchg
out
sub
mov
jb
cmp
pop
ret
cld
icebp
in
xor
push
push
lods
xchg
lods
rolb
fisubs
pop
jecxz
inc
mov
fisubrl
mov
pop
stc
add
add
in
aad
xchg
imul
cmp
xlat
cli
inc
mov
or
loope,pt
cmp
divb
popa
in
rol
push
testl
push
mov
sub
xor
test
out
cmp
mov
fldenv
mov
imul
cmp
popf
mov
cmp
cmp
das
adc
mov
mov
mov
dec
ds
xchg
jns
cmp
cltd
sahf
les
mov
aad
gs
xor
dec
mov
test
mov
push
xor
push
rclb
cmp
mov
adc
sahf
mov
cmp
lods
or
or
lcall
lea
dec
roll
mov
dec
arpl
add
push
cmp
inc
dec
repz
adc
mov
icebp
add
xor
sub
fcmovnbe
loop
mov
bound
test
adc
in
in
out
mov
repz
stc
cld
xchg
mov
mov
push
jb
mov
or
mov
mov
xchg
jnp
dec
ror
mov
sarl
pop
inc
rcll
adc
xor
cltd
sti
jge
ds
leave
mov
movsb
adc
xlat
sbb
mov
inc
ja
mov
imul
cld
enter
jno
sub
dec
addr16
dec
cmp
movsb
push
stos
jae
pop
test
mov
push
lahf
out
insl
imul
rcrl
scas
dec
pop
push
sub
into
sub
sub
xor
and
jmp
rol
int
cmp
loopne
lcall
dec
pushf
mov
roll
imul
mov
and
fmuls
filds
mov
into
out
test
lds
pop
stos
jo
shrl
out
ljmp
push
addr16
mov
repz
dec
sub
ja
sbb
movsl
mov
mov
rcrb
adc
lods
sub
sbb
mov
pop
mov
push
mov
cld
push
or
rcrb
les
xor
das
pop
sub
jne
xlat
lcall
les
repnz
mov
dec
inc
ss
stos
jmp
movsb
xchg
xchg
sub
lock
aaa
pop
lret
mov
adc
push
in
jl
mov
inc
in
lahf
push
cli
push
and
fnstcw
insb
pusha
adc
xchg
jle
pop
xchg
and
sbb
nop
jb
inc
mov
sub
jg
lock
dec
in
dec
loope
popa
ret
mov
lods
dec
mov
mov
dec
out
je
dec
fucom
js
mov
mov
test
or
andb
clc
xchg
cmc
push
cmp
jb
pop
jmp
jp
pop
sbb
sahf
mov
xchg
push
ficoml
lret
sbb
orb
or
out
aas
sub
insl
ret
dec
xchg
lock
into
xchg
push
adc
dec
pop
clc
popaw
add
push
gs
push
icebp
iret
mov
lret
mov
xor
bound
data16
fdivr
inc
rcll
push
rcll
ret
inc
cmpsl
mov
mov
jae
cli
out
add
inc
dec
xor
test
or
stc
and
mov
sahf
push
mov
pop
inc
outsb
cmp
jl
and
je
and
and
lret
pusha
or
sub
inc
int3
sub
sbb
cmpsb
sbb
arpl
cmp
xor
into
mov
ljmp
or
outsb
ss
pop
push
sub
loope
loopne
mov
jae,pn
cmpsb
lods
dec
xchg
add
and
dec
notl
mov
rorb
stc
push
xchg
int
xchg
adc
mov
pop
clc
fldenv
sub
mov
jo
test
lods
je
xchg
push
pop
lahf
push
mov
pop
cmpsb
add
lds
mov
mov
jl
fimull
fwait
sbb
out
mov
scas
push
mov
gs
inc
rorl
sub
jle
daa
repnz
int3
aaa
bound
std
jle
pop
fsts
cmp
and
cmp
or
fcomps
mov
and
xchg
mov
out
sbb
jl
pop
mov
rcrl
sub
or
insb
lea
out
sub
sub
add
jl
mul
lcall
pushf
xchg
mov
jecxz
popa
or
and
repz
testl
in
inc
mov
into
repnz
sub
shll
xor
sub
and
fwait
idivb
jne
push
and
inc
aam
adc
pop
xchg
pop
cmp
sub
cltd
mov
jo
sub
sbb
or
clc
dec
pop
jge
mov
push
nop
rcr
daa
xchg
iret
stc
cmp
sbbl
mov
lock
sarl
or
notb
push
outsl
cmpxchg
or
and
dec
jg
aaa
imul
sub
add
inc
cli
bound
gs
mov
mov
out
stos
push
sub
addr16
bound
inc
ret
xor
xor
out
xchg
inc
and
int3
jl
in
scas
ret
ret
std
push
add
aaa
outsb
mov
mov
popf
add
push
mov
adc
push
push
sahf
pop
pop
hlt
in
leave
pop
sbb
xchg
leave
mov
pop
and
fidivrs
dec
push
std
out
pushf
push
cmp
jp
mov
xlat
repnz
inc
mov
adcb
cmp
add
push
mov
mov
stc
push
xor
negb
cmp
sbb
test
or
enter
or
inc
sti
data16
push
push
addr16
sbb
fdivrp
lcall
pusha
fsubrl
lret
aad
push
daa
pop
cwtl
lret
divb
xor
adcb
out
scas
jle
mov
mov
iret
movsl
push
jmp
fpatan
sub
aas
into
push
pop
dec
js
xlat
aaa
test
aad
sbb
icebp
mov
in
daa
mov
out
jmp
sbb
stos
pop
pusha
call
jo
push
cmp
adc
gs
jns
xchg
jmp
xchg
mov
fnop
mov
not
les
mov
das
inc
dec
mov
cmc
cmpsb
push
xchg
or
adc
cs
jmp
sbb
jno
adc
enter
test
pop
and
dec
adc
aam
mov
in
adc
mov
sbb
mov
iret
sbb
pop
les
aad
rorb
add
popl
adcl
aas
out
push
jg
aam
push
mov
inc
pop
pop
mov
cwtl
std
pop
cmpsb
push
mov
add
or
mov
mov
xor
mov
push
ds
fldenv
es
adc
js
mov
mov
andl
inc
add
in
or
mov
scas
aas
sub
inc
sub
lret
stos
sub
jae
int
dec
iret
jp
sbb
movsb
in
mov
rolb
and
add
jb
call
push
mov
ds
stc
xchg
push
aad
inc
into
pusha
test
add
add
dec
nop
adc
movsb
cmpsl
in
jb
mov
ss
adc
push
fmulp
add
in
inc
mov
push
xlat
popa
sub
lea
push
out
stos
jns
imul
push
mov
stos
in
rol
cmpsb
aaa
or
shl
add
dec
and
ja
bound
mov
outsb
popf
dec
lds
xchg
pop
test
sub
lcall
sub
aam
out
fisubrl
pusha
popa
or
cmp
xchg
xor
iret
pop
dec
sbb
fstpt
inc
dec
pop
pop
fildl
stc
leave
push
out
movsl
sub
int
mov
sbb
iret
es
pop
sbbl
pop
jae
mov
sub
ds
in
or
xor
mov
cmpsl
aaa
stos
pop
sti
test
mov
push
xchg
cmp
adcb
cmpl
rcrl
pop
cmpsl
mov
mov
dec
call
lock
mov
jne
lods
push
hlt
add
das
sub
sub
cs
fdivs
mov
testl
xchg
cs
fwait
mov
xor
add
inc
les
hlt
shll
in
inc
and
push
or
sub
cmp
jne
sub
inc
sub
cltd
or
les
mov
mov
aaa
pop
lcall
adc
xor
aaa
sbb
pop
or
fwait
mov
sbbb
pop
or
lea
cmpsl
jge
inc
adc
fidivrs
or
clc
jae
ret
daa
sbb
jle
pushl
pop
in
sub
divl
shr
sbb
lcall
xchg
ret
in
add
pop
mov
or
sarl
xor
aad
enter
xchg
mov
pop
adc
pop
roll
inc
in
insl
mov
jne
testl
insb
mov
shrl
verw
loopne
sub
lds
dec
cli
movsb
out
adc
jbe
inc
lret
loopne
inc
dec
and
or
es
adcl
jae
mov
xchg
adc
scas
inc
and
jg
enter
mov
stos
mov
sbb
into
jbe
shr
call
pop
aaa
adc
adc
adc
add
jmp
pusha
sarl
dec
lret
ja
ds
fwait
int3
sbb
or
into
enter
in
insl
loope
inc
jne
jnp
sbb
std
xor
sub
aas
stc
xor
xchg
mov
cmp
pop
push
sub
mov
sti
sbb
inc
mov
xchg
shll
stos
lock
stc
jo
fistpll
jnp
jb
decb
or
inc
fistl
lahf
jg
sbb
repnz
push
lret
rcl
pop
push
sbb
les
aad
arpl
jnp
push
jne
lods
jno
rorb
outsl
xchg
fidivl
push
add
inc
popa
push
into
cmp
jbe
inc
mov
invd
xor
roll
dec
test
fsubl
cli
sbb
loope
sbb
flds
xor
inc
jge
jle
popf
out
and
fsub
sti
xor
cli
cmp
cmp
dec
sbb
in
cmp
adc
push
inc
lock
movl
xor
fadd
nop
mov
pop
add
movsl
adc
cmp
psubd
mov
aas
mov
fisttpll
push
pop
xor
das
jl
and
mov
dec
ja
repz
dec
aam
jne
mov
or
enter
fstpl
xchg
jo
inc
xchg
pop
and
mov
fnstenv
mov
ljmp
addr16
pushl
movsb
or
mov
cwtl
nop
outsl
push
inc
or
push
dec
repz
mov
sub
gs
clc
fstpt
fs
dec
popf
xchg
pop
and
mov
push
imull
pop
movsl
lret
cmp
sub
and
enter
test
fnstsw
negl
nop
mov
xchg
mov
lock
push
ret
sbb
aas
pop
and
into
pop
sub
and
lret
sbb
das
sub
fstl
inc
lahf
cmpsb
adc
jns
shll
call
or
out
jle
push
scas
push
scas
aad
mov
xor
out
cmp
add
dec
pop
rcrl
addr16
fcmovnbe
dec
sbb
mov
inc
mov
fcomip
dec
lds
jne
push
cmp
adc
int
and
popf
mov
adc
xchg
jno
pop
fld
out
gs
push
loopne
aam
arpl
add
jg
adc
inc
in
dec
add
shrb
cltd
fyl2xp1
jecxz
jb
pop
xchg
lds
leave
mov
jecxz
sarl
dec
sbb
sbb
mov
xlat
cmp
repz
sbb
or
pop
std
lds
dec
lds
and
sbb
out
loopne
aam
push
jp
mov
enter
push
jno
sub
jbe
clc
dec
std
mov
les
or
sbbb
cmp
jl
mov
test
sbb
gs
imul
lret
fidivrl
xchg
or
movsb
xchg
hlt
adc
and
int3
jns
mov
loope
sub
incl
jecxz
jnp
ja
xor
call
cltd
mov
imul
mov
dec
aad
inc
and
adc
sahf
xchg
adc
sub
lods
dec
jmp
jbe
jnp
xor
xchg
repnz
scas
xor
fs
mov
stc
call
in
adc
data16
jo
jns
aas
adc
mov
out
mov
cmpb
xlat
je
add
xorb
xchg
pop
xor
jmp
add
sub
jno
add
sbb
ficoms
dec
int3
jne
adc
or
fsubrs
cmpsl
sarb
jg
lcall
xchg
mov
pop
dec
in
shr
repnz
push
adc
lss
dec
imul
rcr
mov
outsb
lcall
mov
or
dec
sbb
dec
pop
inc
mov
lret
je
lret
cwtl
or
sarl
out
mov
cwtl
out
mov
imul
xorl
inc
lret
jmp
sbb
dec
clc
add
cwtl
push
ljmp
das
inc
add
cmpsl
lret
add
cmc
data16
int
xchg
adc
xchg
sub
or
push
shl
enter
xchg
cmp
inc
mov
ret
mov
scas
jecxz
mov
jae
or
push
cmp
imul
pushf
shrl
xchg
mov
mov
sbb
push
pop
jo
loop
fsubs
out
jno
repz
test
repz
and
xor
inc
sbb
cmpsl
jb
loopne
and
cmp
mov
jge
push
mov
cmpsb
adc
mov
fdivs
lock
jb
dec
aad
push
xor
add
orl
jmp
jge
jmp
xchg
cmp
arpl
sub
sub
or
in
stos
daa
fs
xchg
mov
int
jp
imul
mov
inc
ljmp
ret
sbb
pop
mov
mov
mov
daa
into
repnz
mov
and
push
inc
mov
or
push
xor
fcoms
outsb
lods
dec
lods
add
cmp
mov
adc
inc
das
mov
out
and
mov
adc
aad
movnti
outsb
imul
mov
and
jle
add
shll
push
cmp
xchg
out
adc
or
cmp
xor
push
lods
shlb
aaa
repz
mov
insl
jecxz
pop
int
nop
lea
ret
cmp
mov
imul
dec
repz
stc
leave
fists
mov
loopne
test
mov
mov
lods
das
scas
inc
outsb
ss
or
lds
fidivrl
and
mov
aam
or
scas
test
dec
sti
mov
leave
or
andb
lcall
mov
jmp
cmp
enter
sub
rcll
or
incl
and
xchg
sahf
hlt
stc
push
add
and
cli
or
sbb
or
test
call
add
mov
sbbl
fdivrs
incb
sub
xchg
add
pop
or
mov
push
xor
in
fsubrs
sbbb
lret
insb
enter
pop
movsb
popa
pop
movsb
pusha
lock
lods
lods
cmp
stos
cmpxchg
lods
fimuls
fsts
scas
dec
jecxz
jns
in
mov
xchg
hlt
rcrb
ljmp
xchg
push
scas
and
pop
push
adc
xchg
mov
aas
int
push
inc
mov
inc
cmp
pushf
sub
mov
into
jge
pushf
add
mov
ljmp
or
imul
push
pop
repz
inc
je
mov
push
stos
sub
ss
and
mov
add
mov
pop
xchg
xchg
push
xchg
mov
add
jle
xor
fsubr
mov
inc
xlat
or
mov
iret
outsl
int3
lea
lahf
decb
push
jbe
js
inc
imulb
test
repnz
hlt
jl
add
jg
stos
aas
jno
inc
push
into
popl
mov
xchg
or
idivb
xchg
adc
jl
mov
enter
shll
js
movsb
sub
rorb
mov
xchg
enter
xchg
or
jmp
or
testb
test
jg
aad
jg
loop
lret
test
mov
ss
mov
js
push
xor
add
xchg
stos
adc
aam
adc
cs
iret
ficomps
mov
jno
lock
mov
cwtl
cmp
xor
add
stos
movsb
pop
pop
fstl
stc
mov
adc
mull
dec
add
mov
sbb
in
mov
mov
inc
into
adc
popl
loope
mov
lods
xor
jo
cmp
xor
loope
adc
jge,pn
mov
jge
insb
lods
jae
iret
jge
lret
xchg
dec
in
cmpsl
adc
mov
add
loope
rcrb
insb
xor
and
push
cmp
les
adc
cwtl
mov
xor
sub
dec
pop
push
lods
orb
test
gs
fimull
add
loop
int3
mov
in
cwtl
pop
add
cmp
das
sahf
mul
es
ja
mov
sub
in
adc
ficompl
mov
dec
cwtl
adc
mov
lret
imul
into
jae
mov
movsl
inc
mov
in
add
push
daa
add
dec
mov
mov
jb
shr
stos
scas
sarl
xchg
fnstenvs
roll
sbb
and
sub
das
lahf
stc
and
cmp
jns
inc
add
lcall
ss
mov
adc
cmpsb
into
pop
rcl
push
outsl
js
mov
insb
loopne
pop
loopne
dec
fdivp
and
and
xchg
loope
xor
stos
and
push
xchg
pop
adc
sbb
subl
loope
and
xchg
adc
xchg
xchg
mov
aaa
rclb
sti
test
scas
out
and
xlat
insl
adc
push
test
mov
xchg
imul
aam
xor
lret
loopne
mov
fisttps
les
cmpsb
mov
or
and
sub
and
cwtl
clc
shl
outsl
or
xchg
jl
dec
fsubs
js
push
je
scas
in
leave
or
xchg
sbb
dec
aas
scas
jmp
inc
pop
filds
and
loop
add
jnp
std
dec
ljmp
sbb
idivb
mov
xchg
ljmp
sarl
pop
call
inc
push
adc
loop
pushf
jno
aad
mov
mov
lahf
addl
fstpl
pop
xchg
jb
or
lods
pop
mov
xlat
int3
jbe
xor
xchg
pop
inc
cmp
push
ja
insb
and
mov
scas
ret
mov
push
into
jo
es
pop
nop
stos
jl
mov
xor
mov
repnz
dec
mov
fsubp
mov
jmp
dec
and
xchg
mov
fnstenv
psadbw
mov
and
and
jo
hlt
xchg
lcall
fldl2e
and
lahf
ffree
cmp
out
xor
andb
jo
adc
mov
mov
mov
jmp
es
cmp
lods
push
fidivs
mov
enter
xchg
aam
sbb
pusha
out
dec
xor
mull
mov
pop
xorl
dec
inc
mov
ljmp
imul
test
xchg
out
in
mov
loop
xchg
xor
inc
testl
dec
add
jl
lahf
xorl
es
ds
jae
cmp
loop
inc
mov
dec
sbb
fwait
adc
inc
lds
std
mov
jo
push
repnz
jge
out
push
cli
inc
mov
mov
movsb
fsubl
jmp
cmpsb
scas
out
add
stos
sbb
movsl
adc
and
ds
ljmp
push
loope
mov
emms
movd
sti
lock
mov
inc
jle
mov
aam
and
and
aaa
inc
int3
insb
mov
pop
adcl
xlat
mov
nop
bswap
popf
pusha
mov
sub
cmp
gs
sbb
mov
and
ror
jle
xor
push
mov
sub
test
adc
fisttps
lock
cli
insb
mov
sub
mov
xor
faddl
lret
js
das
mov
adc
addr16
xor
std
mov
cmp
mov
mov
pop
mov
stc
sbb
add
rcr
jge
push
sbb
filds
xchg
mov
cwtl
sub
es
pushf
addr16
and
out
fwait
stos
scas
testl
jl
pop
inc
jl
xchg
pop
popa
mov
pop
jge
sti
movl
jge
pop
mov
out
cmpsl
mov
cltd
jecxz
jl
aas
sbb
subb
fmuls
add
xor
xor
test
mov
ss
mov
inc
adc
sahf
jae
pop
lret
pop
lahf
in
mov
scas
jge
lcall
sbb
mov
shr
xor
add
scas
lret
xlat
cmp
cld
push
jno
jae
jle
pop
mov
in
or
std
add
mov
hlt
xor
iret
mov
push
mov
mov
pop
mov
inc
sbb
xor
std
adc
mov
pop
stos
cld
mov
in
lretw
out
push
or
and
mov
and
stc
sub
lock
cmp
idivl
movsb
subb
sbb
loop
pop
pop
pusha
jne
mov
int
jp
push
mov
lret
das
or
sbb
mov
push
ds
rolb
mov
das
vpackuswb
jg
xor
clc
jne
dec
ret
mov
pop
push
ds
sbb
repnz
mov
outsb
xchg
ds
cmp
aaa
sub
ficoms
loope
rcl
pusha
jo
loop
pushf
mov
movsl
adc
mov
or
push
insl
cmp
iret
out
xchg
je
mov
xchg
enter
and
lret
sti
mov
add
cmp
jb
xorl
mov
push
sbb
mov
data16
movsl
dec
test
mov
jo
loope
jno
test
les
xchg
mov
cwtl
das
mov
add
leave
out
fdivrs
lahf
arpl
jg
and
pop
adc
jge
push
pop
dec
imul
outsb
cmp
xor
testb
pop
sti
jns
ret
sub
notb
jno
sub
cmpsl
into
jmp
cmp
sbb
cmp
or
inc
sub
les
fwait
sbb
imul
out
jae
leave
mov
pop
or
fnsave
fbld
xchg
add
jmp
xchg
or
popf
xchg
nop
in
fstps
pop
gs
les
in
push
rorl
aas
insl
je
mov
cmp
shr
mov
push
imul
mov
loop
jns
inc
mov
mov
sub
fidivrs
mov
xor
hlt
mov
stc
jns
adc
inc
xchg
fimuls
test
dec
fisttpl
ret
pop
repz
push
sub
mov
inc
cmp
mov
outsb
mov
and
add
mov
lods
stos
pop
das
jne
mov
jecxz
xor
aam
adc
mov
ret
mov
jle
je
test
jno
cmp
jb
and
pop
shlb
mov
lcall
ss
dec
pop
pushf
hlt
inc
sarl
xor
sub
xchg
stc
xchg
pop
rorb
mov
je
fmulp
and
push
lds
push
stos
push
add
in
pop
pop
test
xchg
out
repnz
adc
fldcw
or
adc
pop
subl
xchg
rcrb
aam
push
mov
lea
xchg
mov
mov
scas
stc
sbb
es
in
or
arpl
push
or
jnp
lods
or
lret
dec
and
fistpll
push
add
adc
sub
push
push
cltd
mov
push
xchg
out
loopne
mov
stc
dec
dec
popf
lahf
out
bnd
xchg
stos
and
scas
fmuls
shll
and
mov
je
test
pop
mov
mov
dec
aam
lret
iret
test
xchg
push
adc
lock
dec
push
in
outsl
xchg
das
sahf
mov
popa
cmp
fdivrl
cmp
jge
pop
jbe
jg
ret
mov
dec
inc
test
jmp
jnp
cltd
dec
cmp
mov
outsb
dec
aas
dec
rcr
jle
pop
xor
stos
push
rolb
loopne
mov
adc
pushf
insl
test
lock
xchg
mov
inc
fadds
lahf
pop
repz
lahf
lds
int3
mov
scas
adc
cmp
sahf
pop
int
in
cli
in
mov
sub
lods
lret
add
arpl
ja
cwtl
pop
jp
rorb
lods
std
jb
mov
test
mov
mov
adc
pop
scas
or
aad
mov
mov
cli
mov
cli
sub
ss
mov
cmp
cltd
loopne
repnz
dec
cmpl
mov
aaa
dec
cmp
insl
push
jb
jp
insb
sbb
into
nop
cmp
inc
jne
dec
dec
movsb
cmc
daa
xlat
sbb
or
ja
testb
dec
sub
dec
je
fsub
ljmp
outsl
inc
sbb
ljmp
cli
test
dec
jg
pop
out
into
jle
adc
dec
scas
pop
test
or
rorl
mov
call
cmp
xchg
mov
pop
icebp
bound
jno
mov
mov
sahf
xchg
push
shl
jo
mov
sahf
aam
mul
dec
dec
fdivs
clc
loop
adc
ja
cltd
jne
xor
shrb
xchg
unpcklps
adc
mov
dec
inc
repz
nop
mov
dec
pusha
adc
cmp
sbbl
popa
and
jne
shlb
lcall
pop
jecxz
shll
mov
fildll
xorb
push
movsb
push
frndint
fbstp
fwait
dec
sbb
jg
int3
cs
mov
stos
mov
push
lods
mov
dec
push
scas
cmp
stos
xor
hlt
pop
push
lahf
dec
and
add
push
push
and
jmp
pop
subl
push
push
test
push
xlat
jnp
in
sbb
shrl
lea
sarl
iret
and
ficoml
xor
jno
aam
leave
sti
adc
xchg
xchg
ja
into
mov
ss
sbb
xchg
adc
movb
fs
pop
mov
imul
xchg
addl
pop
or
mov
movsl
lods
jnp
aam
nop
out
xchg
push
adc
mov
add
popf
push
je
adc
into
std
push
scas
fsubp
cmp
mov
ss
cmp
cwtl
hlt
dec
clc
pop
push
jp
and
inc
pop
and
push
jl
inc
jns
cmc
cmc
mov
jle
popf
or
test
clc
mov
inc
mov
sub
stc
and
and
jb
and
cs
pusha
add
adc
push
and
adc
inc
push
cmp
and
clc
jmp
and
test
fistl
pop
cmp
cmp
imulb
pop
push
lods
fucomi
inc
pop
cmpsb
mov
stos
and
iret
loope
aad
iret
test
popf
les
jbe
scas
cmpsl
pop
test
jp
sbb
inc
mov
push
mov
and
push
add
push
jne
pop
fcompp
or
fbld
xchg
pop
push
or
push
rcrb
fsubrl
dec
mov
aaa
jge
cmp
icebp
lods
jb
addl
mov
sub
repz
add
out
fbstp
push
stc
jnp
leave
xchg
lds
or
cmpsb
xchg
pusha
adc
hlt
mov
mov
clc
loop
insl
clc
sub
xchg
shrl
scas
dec
and
dec
jle
jns
pop
push
mov
dec
mov
add
imul
cmp
cld
adc
fistl
pop
push
xchg
pop
arpl
xor
cmp
mov
mov
stos
shlb
mov
mov
divl
mov
lea
ficoms
inc
ret
xchg
popl
out
insl
lcall
mov
dec
pop
jnp
stos
addl
dec
cmpsb
dec
scas
cld
cmp
pop
xchg
lret
sbb
push
cmp
cmp
adc
push
lods
into
lea
mov
hlt
stos
add
add
add
add
arpl
mov
stos
inc
pop
pop
out
ljmp
jns
mov
jnp
lahf
cmp
push
mov
dec
fs
das
lret
lock
jbe
cmp
adc
jge
sub
xchg
pushf
dec
sub
nop
mov
dec
in
dec
mov
scas
scas
push
setbe
repnz
pop
aas
jbe
js
jmp
es
out
xchg
lods
pop
dec
out
mov
in
cli
divb
xchg
dec
pushf
mov
lret
les
daa
cmp
pop
xor
rcrb
insb
dec
jbe
pop
ret
or
lret
sub
add
rcrl
push
mov
jge
data16
les
cld
fs
je
sbb
lods
stos
pop
fsts
mov
cmpsl
mov
movsl
pop
sbb
ficompl
sub
adc
mov
les
in
pop
push
mov
adc
or
sbb
xor
lods
mov
xchg
scas
inc
add
jmp
into
push
mov
fcoms
movsb
mov
jb
sbb
addr16
push
xor
loop
fcoml
jnp
mov
pop
lea
sub
cmpsb
dec
mov
jbe
adc
jg
arpl
cmp
je
outsl
add
out
sbb
bound
mov
aad
and
push
mov
xor
enter
daa
sbb
mov
push
repz
aam
xchg
pushf
cmpsl
mulb
sbb
repnz
pop
aam
mov
in
jo
mov
sbbl
in
outsb
sbb
sbb
out
xlat
cs
ljmp
xchg
aam
int3
idivl
push
int
xor
pop
negb
pop
xor
ficoms
inc
cmc
mov
xchg
imulb
or
mov
fmull
mov
inc
ret
es
scas
xchg
in
out
out
push
xor
pop
adc
or
push
aaa
xor
sarb
pop
aaa
mov
test
arpl
sahf
js
xor
dec
sahf
and
std
aas
xchg
xchg
and
xor
or
sbb
mov
pushf
xor
fistpll
out
subps
pusha
push
xchg
std
idivb
jecxz
test
cwtl
xchg
sub
pushf
dec
in
or
incl
ret
sbb
mov
jb
mov
test
loope
pop
mov
in
es
push
jo
inc
sub
out
test
and
or
negb
lock
mov
jl
mul
in
xchg
and
pop
int3
adc
ja
push
clc
mov
outsl
popa
inc
imul
inc
daa
enter
jp
inc
or
cwtl
fisubrs
insl
pop
xor
mov
lock
fstpt
and
mov
mov
dec
in
cmp
cmp
pop
mov
dec
pop
out
xchg
push
cs
sub
into
and
jnp
xor
fdivrl
xchg
sahf
pop
mov
sbb
movsl
stc
sub
sahf
dec
or
gs
fsubs
mov
xchg
stc
xlat
inc
in
dec
xchg
pusha
hlt
outsb
jl
das
sbb
inc
mov
or
rcr
stos
and
dec
lcall
in
scas
aam
and
xor
arpl
cmp
daa
xor
sbb
mov
cltd
xor
shrl
inc
std
push
push
insl
adc
sbb
js
lahf
xor
dec
xor
in
insb
push
ljmp
cmp
sub
jle
pop
pop
popa
xchg
mov
sbb
inc
push
push
idivl
daa
ficoml
adc
mov
mov
sub
or
das
mov
das
in
sbb
hlt
add
mov
dec
adc
push
jp
cltd
repz
jmp
sbb
push
dec
inc
xlat
leave
mov
xchg
notb
push
sbbb
in
adc
clc
xchg
push
mov
sbb
call
push
das
gs
lcall
jmp
mov
cmpsl
rolb
cmp
int3
sbbb
imul
inc
nop
mov
push
cmp
adc
test
filds
sahf
add
das
lock
adc
cmovle
sbb
stos
push
xchg
pop
sub
int
xchg
push
mov
mov
mov
mov
cmp
dec
cmp
shll
mov
pop
push
pusha
mov
adc
or
pop
aam
movsb
mov
mov
rcll
cmp
xorb
shll
clc
jo
imul
ja
jne
in
push
jmp
ja
das
pop
rcl
fidivs
adc
jne
mov
ss
jbe
fcmovu
inc
out
js
mov
iret
fs
andl
inc
xchg
push
stc
xchg
stc
push
and
lds
int
xchg
enter
sub
mov
stc
adc
popf
adc
and
xor
xchg
imul
cmpsl
jae
xchg
mov
es
fs
sbb
loope
jbe
imul
in
push
leave
das
mov
and
dec
adc
push
daa
movsb
rolb
xchg
shrl
jecxz
dec
adc
adc
pusha
inc
lds
sub
cmp
dec
scas
push
dec
sarb
mov
xchg
xchg
mov
or
xchg
cs
pop
xchg
jns
push
jle
or
adc
fs
sub
cs
jle
lds
daa
sahf
cwtl
cs
test
xor
xchg
push
daa
in
cmp
pop
dec
aam
cmp
std
ja
inc
inc
clc
adc
in
mov
loop
rcrl
shll
cld
popf
mov
in
popa
pop
cltd
jge
aam
xchg
setle
int3
dec
pop
and
mov
jmp
inc
inc
and
and
lods
cmp
jnp
bound
dec
test
lock
loope
sbb
jp
add
push
gs
aad
rolb
lods
pop
jmp
sbb
pop
into
sbb
push
leave
mov
add
push
mov
pusha
inc
pop
cmp
mov
mov
ja
daa
cltd
loop
and
pop
dec
test
pop
xchg
push
add
scas
popf
push
pop
outsb
inc
rclb
fldenv
sbb
xchg
outsl
rorl
mov
mov
push
movsb
inc
adc
xchg
push
xor
lret
cltd
and
ljmp
sbb
mov
push
cmp
sub
xchg
scas
out
test
and
sbb
jge
insb
lcall
gs
inc
cmpsl
aad
xor
pop
add
adc
test
jae
adc
std
mov
sahf
std
jmp
push
push
in
mov
mov
adcl
cwtl
jne
push
fwait
or
fwait
les
cmpsl
call
jns,pn
enter
mulb
and
pop
pop
jb
inc
mov
or
arpl
ret
fisttpll
dec
out
jns
xlat
cmp
dec
in
mov
dec
xor
mov
dec
pop
rorb
lahf
out
adc
ret
stc
aaa
or
pop
arpl
adc
cmp
mov
mov
or
pop
imul
into
daa
mov
mov
insb
je
cltd
jb
scas
pop
adcb
pop
sbb
fwait
pusha
xchg
xchg
jg
mov
xchg
sub
pop
test
dec
outsl
push
mov
rcrl
iret
incl
push
movsl
mov
inc
fs
outsb
pushf
fcoms
and
fwait
push
dec
rolb
jle
sbb
in
push
lock
mov
imul
sbb
jns
push
mov
mov
and
scas
cltd
mov
daa
cmp
add
and
mov
in
popa
js
jge
hlt
mov
ret
adc
mov
sub
dec
lods
sti
jae
xchg
or
les
sub
and
jnp
pop
xorb
or
fcomip
mov
lea
cmpb
cmc
dec
push
xor
aam
in
cmp
jle
sub
out
inc
push
in
xor
sahf
sbb
out
incb
lret
mov
sarb
sbb
jbe
lock
ja
icebp
daa
insb
sbb
cmpsb
sarl
addr16
cmpsb
add
in
pop
fdivrs
push
push
sbb
and
mov
push
outsl
mov
xchg
mov
and
adc
lock
out
ret
lds
pop
lahf
jmp
push
ss
cmp
cmp
xor
jo
mov
popa
adc
rcrl
fucomp
cmp
aad
popf
xor
cmp
fistps
cmpsl
fldt
shr
das
mov
cmpsl
or
scas
cli
outsb
or
into
cmpsl
inc
xlat
inc
and
sub
pop
cwtl
jmp
cmpsl
jbe
mov
sbb
pop
pop
decb
or
aaa
loop
popa
insb
scas
cmc
jle
sub
inc
bound
jecxz
mov
in
xchg
add
mov
adc
mov
mov
popf
mov
inc
es
add
adc
push
mov
or
scas
and
mov
or
add
popa
jbe
jp
das
jnp
jg
add
mov
push
loopne
cmc
dec
mov
pop
mov
push
stos
pop
sbb
sub
or
add
cmp
rclb
dec
movsl
jge
jbe
jp
lahf
inc
add
jae
int
insb
xor
xor
out
repz
iret
push
lds
daa
and
fistl
mov
inc
in
mov
mov
mov
aas
fs
fidivrs
imul
ret
adc
xor
inc
mov
div
sub
mov
mov
jns
loop
pop
fsubrs
jge
in
in
jmp
cmp
stc
push
cmpsb
push
inc
sarb
outsl
inc
in
pop
xlat
push
lods
les
loopne
push
subl
int
test
outsb
loop
mov
push
pushw
dec
mov
enter
fwait
cmpl
fchs
push
in
repz
push
fxch
addr16
lahf
jl
in
lock
push
jmp
ret
cmp
jo
xchg
js
mov
dec
repnz
adc
pop
movsb
dec
jp
pop
dec
dec
outsl
inc
pop
add
xchg
pushf
addr16
mov
inc
les
jecxz
outsl
inc
push
cmp
enter
cmp
xchg
fldl
aas
mov
jbe
jp
ja
and
mov
xlat
fwait
test
jbe
das
pop
or
es
inc
mov
push
es
dec
and
in
outsb
mov
xchg
jb
insb
and
fdivr
pop
mov
fnsave
or
cmc
push
test
and
mov
or
int
sub
arpl
rorb
je
sub
test
inc
jae
lret
test
jnp
xlat
mov
lods
stc
int
xor
loope
fisttpl
mov
rolb
mov
and
push
add
data16
iret
xchg
mov
int
push
dec
rcrb
jg
add
pop
xchg
cmp
pop
cmp
adc
mov
pop
mov
dec
dec
fmuls
test
jb
inc
enter
cmp
std
sahf
out
adc
cmp
andb
or
push
ret
test
xor
loope
loopne
and
rcl
xor
lods
dec
push
lods
jae
jmp
arpl
lods
mov
or
in
sub
bound
mov
cmpsb
jge
mov
mov
pop
add
cmpl
cmp
ss
mov
and
mov
sbb
add
lea
cmp
fwait
lds
int
sub
mov
negl
into
mov
pop
es
shlb
fwait
mov
mov
mov
add
lea
js
imul
mov
mov
mov
inc
call
aaa
jbe
bound
loopne
pop
cmc
fistpl
out
rcr
aas
fwait
dec
in
add
add
pop
ret
adcb
mov
jae
mov
mov
xchg
ja
mov
clc
lods
mov
lock
mov
sub
adc
aam
loope
add
sub
ret
inc
xchg
adcb
mov
sbb
addr16
push
inc
leave
popf
mov
pop
cmpsb
jle
mov
out
cmp
inc
push
cmp
lret
mov
call
fnsave
push
or
xor
dec
fmull
hlt
mov
lock
stos
mov
pop
shrl
sarl
clc
es
andl
push
mov
xchg
xorb
stos
xchg
cmp
sbb
imul
sub
cmp
imull
adc
pop
dec
push
add
lds
adc
lock
test
aaa
loop
mov
cmpsl
fcmovnu
inc
lcall
sbb
pop
lock
mov
popa
adc
cld
or
lods
loop
mov
adc
loopne
insb
subl
cmp
xor
rcrb
sub
xchg
rclb
mov
adc
xor
mov
ror
push
fildl
and
bound
jge
jns
stos
int
repz
xchg
push
xchg
cmc
aaa
fcomp
mov
pop
adcb
imul
lret
mov
call
ljmp
addb
adc
jo
insl
or
add
push
jno
mov
inc
inc
push
cmp
adc
and
jnp,pt
add
leave
mov
and
das
xchg
enter
push
mov
push
test
cmpsl
jae
cmpl
std
push
pop
std
mov
mov
sarb
pop
or
fs
fstpt
jmp
cld
pusha
ja
in
xchg
or
leave
call
pop
pop
adc
lock
pusha
jne
shll
adc
or
mov
mov
out
ret
xor
rcr
mov
dec
loopne
je
xchg
iret
jp
mov
outsb
xchg
jns
xchg
or
push
faddl
mov
push
imul
mov
outsl
in
lds
adc
lahf
fcmovbe
pop
lcall
lcall
push
lea
ja
cltd
in
rcrb
movsb
mov
dec
cltd
mov
bound
mov
jmp
inc
push
in
xor
mov
xlat
imul
xor
mov
mov
repnz
insb
pop
xor
imul
mov
mov
jne
imul
movsb
stc
jne
jbe
decl
pop
pusha
mov
xchg
imul
lret
movsl
notb
mov
xchg
dec
inc
sbb
inc
sbb
in
rep
mov
rorb
add
or
pop
xchg
jle
push
and
pop
add
cmpsb
jnp
cmpsb
lret
iret
jns
push
btr
int3
mov
add
loopne
incl
loope
ds
or
das
and
push
stos
cmp
aas
lods
add
mov
pop
or
loopne
int
and
and
or
xchg
sbbb
arpl
out
mov
mov
cmp
aaa
xor
pop
add
or
mov
mov
fstps
jae
add
pop
mov
je
fs
shl
imul
pop
dec
xor
mov
mov
test
mov
add
xor
mov
std
and
cli
in
repnz
push
or
add
imulb
add
pop
inc
js
test
aad
stc
fs
push
and
in
mov
xchg
call
cmp
push
out
loope
addr16
icebp
stos
jp
jl
cwtl
inc
jns
cmp
dec
scas
jae
mov
add
test
jae
arpl
mov
xor
sub
in
sbb
mov
cmp
dec
in
test
das
les
pop
imul
in
or
jp
cwtl
pop
mov
mov
movsb
lea
push
mov
mov
rcll
sti
dec
fs
or
xchg
test
mov
mov
adc
enter
mov
hlt
daa
nop
adc
sub
push
inc
sub
loopne
es
mov
aad
jno
pop
xchg
jne
negb
call
shll
rcrb
sarl
jle
pop
push
xchg
je
shll
jb
push
and
jecxz
mov
push
movsl
add
fstl
mov
and
arpl
test
push
sbb
js
ret
jbe
in
or
mov
call
ret
fiadds
ja
mov
adc
add
mov
in
idivl
add
neg
dec
or
aaa
fidivl
dec
add
inc
cli
mov
mov
xchg
jg
xlat
stos
icebp
sub
xor
sub
rcl
insb
adc
imul
inc
stc
lret
ss
sub
cmp
jle
cmp
xchg
lods
mov
adc
mov
or
popl
dec
cmp
sub
xor
rorl
cmp
and
enter
idiv
inc
xchg
pop
aaa
add
push
jg
xor
sub
push
dec
and
cltd
dec
sub
adc
cltd
cs
imull
imul
or
addr16
pop
call
cmpsl
imul
jae
imul
fwait
rclb
push
lret
mov
jb
test
xchg
jecxz
cld
mov
mov
or
jns
das
push
push
sub
dec
out
out
out
test
inc
out
orl
aam
jns
popf
xor
sub
mov
jnp
mov
cmp
inc
lret
aas
js
pop
pop
repz
adc
pop
imul
sub
fwait
lods
lret
mov
sub
sub
xchg
inc
jecxz
jge
in
cli
or
and
jno
ljmp
aas
pop
aaa
or
pushf
and
xor
leave
mov
icebp
fistps
les
and
out
sub
inc
add
out
push
ds
jmp
jle
inc
scas
cmp
dec
out
fidivrs
rclb
outsb
pushf
jl
push
add
pxor
lods
add
sbb
ret
mov
shl
in
shll
popf
add
adc
test
dec
push
pop
and
sahf
in
adc
out
pop
sub
add
enter
popf
or
movsb
mov
pop
pop
push
and
xor
xchg
xchg
mov
iret
jle
jge
push
or
ret
push
push
cmpsl
or
fwait
leave
push
cmpsb
jbe
cwtl
icebp
aas
sarb
mov
loop
and
loop
jmp
lea
jmp
push
mov
ret
mov
rcrl
std
outsl
sbb
orb
pop
popf
cs
rcll
inc
and
mov
xchg
sub
inc
xchg
jbe
or
shl
mov
xor
or
rcrb
pop
daa
imul
or
nop
icebp
mov
xor
sub
jle
aas
aad
inc
mov
push
push
or
verw
pop
stos
popa
mov
mov
xchg
jnp
outsb
hlt
ss
mov
push
faddl
inc
jae
add
lea
xor
lea
cmp
xchg
dec
jg
jmp
fisubs
mov
insb
jecxz
and
sbb
add
repnz
sahf
lcall
or
test
jo
ds
pop
clc
sbb
push
jns
cmp
clc
popa
jmp
mov
inc
add
out
andl
test
pop
ret
sbb
lcall
push
lods
das
jo
stos
push
jo
mov
adc
rolb
dec
push
mov
addr16
sub
jae
jo
shl
sub
inc
stc
inc
cltd
adc
div
inc
jae
ja
pop
aaa
aam
pop
out
loop
aaa
cltd
in
xchg
imul
lods
xchg
outsb
cmp
std
pop
inc
loope
jne
mov
mov
imul
pop
je
call
int3
shlb
enter
and
lods
sbb
sbb
test
faddl
out
add
in
xchg
icebp
into
jg
jb
jno
dec
lahf
loop
xchg
pushf
mov
sar
dec
xchg
xchg
roll
lds
cli
xor
mov
or
addb
divb
loop
fs
int3
cs
pushf
dec
pop
scas
fs
jno
inc
or
xchg
dec
nop
andl
imul
lret
inc
out
or
imul
rclb
pop
sub
mov
adc
and
xchg
cmp
imul
jp
jp
mov
repnz
aad
add
fisubrs
out
xor
adc
sbb
faddl
ljmp
push
lods
inc
mov
push
push
fxch
nop
mov
and
dec
mov
push
lea
and
fnstenv
gs
xor
enter
cmp
in
sbb
lret
mov
addr16
aad
mov
icebp
pop
xchg
sti
movsb
test
mov
stos
ret
adc
pusha
sbb
cld
insb
in
mov
xor
pop
inc
leave
lods
cli
xor
xchg
insb
test
mov
mov
and
pop
sbb
nop
out
mov
xor
loope
loope
push
push
xchg
xor
sbb
loopne
add
add
outsl
insl
iret
fstl
xchg
mov
adc
sub
jg
arpl
in
jmp
sarb
mov
and
xor
sahf
and
movsb
jb
xor
shl
std
or
imul
xor
pop
xor
loopne
or
adc
mov
mov
sub
sbb
cmp
mov
fildll
sbb
push
in
js
mulb
rcr
mov
popf
mov
jns
cs
jmp
aam
mov
cmc
push
adc
mov
lea
je
inc
gs
adc
pop
mov
push
jge
xchg
enter
mov
sub
sub
imul
fistps
xor
out
nop
xor
jne
mov
outsb
arpl
sbb
pop
fisubs
hlt
inc
rcl
xor
mov
jae
cmp
in
movsl
cmpsl
stos
mov
xchg
subl
mov
mov
mov
andb
adc
mov
ja
imul
add
pop
adc
inc
filds
adc
add
cmp
jbe,pt
xchg
mov
mov
lea
jo
or
iret
daa
push
pop
lock
movsl
xor
mov
xchg
and
sub
int3
xchg
cmp
xor
inc
cmpsb
jle
cmpb
outsb
xchg
or
cltd
ds
mov
test
mov
div
nop
rcl
scas
test
cmpb
imull
fs
jl
dec
js
out
adc
sbb
or
movl
xorl
out
mov
jne
fildl
jns
scas
add
test
out
and
loope
or
rcrb
dec
jbe
cmp
call
jp
leave
stos
rcrb
sbbb
pop
mov
jo
sub
xchg
testb
mov
push
mov
jge
mov
push
jns
xor
idivl
imul
pushf
aas
dec
xchg
cmp
arpl
ficompl
pop
adc
in
mov
push
jle
sub
mov
mov
mov
pop
imul
lods
push
decl
mov
mov
mov
imul
push
lds
sbb
cltd
and
std
mov
int3
ud0
mov
stos
into
push
pop
xchg
xlat
lds
fdivl
inc
cmp
inc
ljmp
lods
jmp
cmp
loop
mov
int3
insl
rcll
repz
xor
xor
addl
lahf
imul
mov
dec
mov
lds
sbb
out
out
or
dec
adc
pop
shrl
inc
add
jp
dec
inc
inc
jb
dec
mov
jnp
shl
out
outsb
test
mov
movsl
popa
ja
mov
pop
inc
cld
xor
sub
je
movsl
jno
inc
mov
call
lods
dec
push
pop
cmp
adcl
enter
sub
je
mov
push
pop
gs
in
filds
dec
sub
adc
mov
mov
test
inc
sub
jnp
push
push
shl
mov
mov
roll
sti
cmp
test
mov
cld
pusha
or
or
ljmp
dec
sub
xor
mov
mov
inc
jo
cmp
and
jbe
test
daa
and
inc
or
or
fisubs
and
mov
iret
out
clc
leave
hlt
ljmp
sub
or
cmpsl
lahf
cmp
clc
mov
insb
dec
xor
cs
mov
xchg
xor
xor
mov
hlt
sub
mov
and
imul
and
inc
imul
shlb
push
shlb
leave
fimull
push
outsl
adc
push
lcall
popa
aam
lahf
xchg
mov
sbb
inc
int3
cwtl
and
movsb
pop
ds
or
mov
xor
mov
and
adc
fstpl
xchg
pop
ds
push
imul
das
xchg
fdivrl
mov
mov
mov
push
inc
shll
repz
orl
outsl
xchg
lret
dec
into
mov
ficomps
sub
mov
dec
cmc
dec
in
lcall
ds
sbb
pusha
movsb
popf
psllq
push
pop
scas
xor
push
and
and
mov
push
jns
cwtl
and
les
ret
or
pmulhuw
shrb
js
imul
lock
rorl
sbb
insl
xchg
xchg
or
push
test
repnz
bound
cmp
jmp
shlb
push
ret
iret
mov
xlat
or
adc
std
jmp
icebp
pushf
adc
inc
iret
pop
loope
mov
push
inc
mov
fiadds
call
scas
bound
mov
cmp
adc
pop
cmp
ss
test
or
push
cmp
sub
lret
and
adc
mov
iret
call
icebp
ss
in
dec
cmp
push
test
xchg
push
xchg
xchg
add
mov
jge
push
xor
cltd
sbb
cmp
mov
sarb
popa
adc
mov
rorl
and
pop
test
push
and
dec
ds
mov
mov
mov
fnstsw
pop
aad
push
out
mov
cltd
mov
lock
cmp
jecxz
hlt
sub
mov
pop
ljmp
jecxz
mov
pop
cmp
mov
mov
add
stos
adc
mov
push
add
cmp
test
js
cmp
add
add
dec
fadds
fwait
lahf
fs
mov
out
fldpi
inc
fnstcw
xchg
neg
and
add
cmp
mov
adc
outsb
mov
lods
sbb
out
sahf
cli
or
xorl
aam
imul
mov
pop
cmpsb
sti
pusha
and
sub
xor
rcll
mov
pop
xor
inc
xor
sbbb
insb
mov
mov
fmull
addr16
cmp
add
stc
and
sbb
lods
push
dec
testl
and
negb
fwait
lret
inc
push
movsl
push
test
dec
test
loope
add
std
mov
add
dec
in
dec
mov
add
jge
aam
inc
popa
dec
in
adc
mov
jae
add
das
fildl
mov
xor
cmc
cltd
xorb
cmpsl
jg
jle
jb
daa
mov
sub
lret
int
sti
mov
into
add
jge
mov
or
mov
pop
jmp
test
rorl
jnp
sub
xchg
jno
push
xchg
mov
repz
adc
bound
and
pusha
push
mov
shrd
in
xchg
add
push
or
daa
jp
push
daa
fidivrl
push
jg
or
xchg
push
push
xchg
loop
mull
call
pushf
add
je
fdivrl
daa
jbe
arpl
jg
mov
mov
xor
mov
in
adcb
mov
mov
and
push
push
imul
outsb
leave
pusha
stos
mov
xchg
repnz
jmp
in
pop
scas
xchg
repnz
int3
push
lods
xchg
mov
adc
mov
lcall
rorb
dec
dec
aaa
fildl
ss
mov
sbb
movsl
lahf
mov
aaa
aam
and
fidivl
pop
out
testl
mov
dec
out
sub
sub
xchg
mov
cmp
cmp
mov
les
jae
fistpl
mov
fldcw
xchg
inc
icebp
dec
out
gs
js
xor
and
mov
dec
loop
addr16
jo
mov
aad
mov
mov
mov
out
jl
dec
xchg
lods
arpl
pop
xor
mov
loop
sti
push
fwait
mov
enter
fisubs
jmp
sub
sbb
adc
test
adc
push
sbb
jns
orb
out
xchg
imul
aaa
mov
push
pop
xor
xchg
or
cmp
cwtl
jl
or
out
hlt
mov
jb
jecxz
jnp
fisttpll
xor
dec
pop
dec
mov
pop
push
clc
clc
mov
fmull
xchg
std
cmp
shr
in
aaa
push
mov
add
jbe
pop
mov
mov
dec
mov
mov
xchg
adc
inc
jne
fwait
mov
xor
adc
xlat
fcomp
mov
inc
lcall
pop
mov
icebp
test
xlat
mov
xchg
add
adc
mov
jb
aad
xlat
les
js
inc
and
test
shlb
sub
and
sti
jmp
push
daa
adc
mov
ret
and
les
pop
add
add
adc
aas
inc
inc
jns
mov
cmpsb
or
xorb
imul
jns
int
notl
cmc
xorb
xchg
mov
add
or
adc
fimull
icebp
repz
push
lcall
adcl
add
sub
aaa
fcomps
mov
mov
shr
mov
roll
xor
dec
inc
adc
mov
jmp
dec
pop
or
xchg
mov
adcb
jge
cmp
cmp
sub
pop
aas
lahf
imulb
in
insl
test
outsl
les
jne
pop
hlt
push
repnz
mov
mov
test
std
incl
mov
xchg
push
lret
ds
jo
xlat
stos
add
mov
shlb
push
mov
loope
sub
repz
add
shrb
add
loopne
ja
jmp
mov
lret
xchg
das
jno
cmp
or
insl
lods
push
mov
in
dec
and
sub
nop
std
sbb
scas
pushl
popf
pop
mov
xchg
jns
cltd
mov
push
stc
cld
popf
jns
lret
stos
dec
and
pop
lcall
adc
clc
inc
and
in
dec
pop
test
cmp
fwait
jmp
clc
js
rorb
lock
lcall
add
jns
mov
clc
iret
lock
cmc
xor
jecxz
fdivs
mov
inc
lret
outsb
cmp
inc
pop
enter
aaa
sub
repnz
js
arpl
jmp
sahf
sti
sub
pop
das
cmpsl
inc
lahf
xchg
push
mov
cmpsb
sbb
adc
and
jge
mov
xor
dec
add
push
cwtl
mov
jmp
setl
cmp
iret
cld
daa
sbb
sub
iret
lock
add
int3
ds
out
xchg
xchg
jecxz
sbb
and
outsl
lock
pushf
xchg
adc
ret
test
or
emms
fadd
xor
test
lods
dec
mov
and
push
push
dec
cmpl
jle
out
rolb
aad
ja
insb
xor
mov
fnstsw
insl
sti
and
xchg
sub
inc
xchg
dec
push
ret
subl
inc
push
lahf
xchg
cmp
jnp
xlat
inc
and
dec
call
mov
pop
lret
jne
mov
pop
push
xchg
andb
mov
cmp
aam
mov
pop
fdivr
test
outsl
je
adc
sub
pop
out
sub
add
mov
cmp
call
jnp
xchg
sbb
mov
dec
sub
dec
pusha
shlb
divl
dec
ja
out
and
gs
cmp
jb
pop
lea
inc
xchg
xor
aaa
or
add
fwait
or
sub
mov
cli
fcoml
cmpb
aas
fwait
mov
jl
jb
popl
sbb
fwait
ret
sbb
mov
and
iret
bswap
xor
out
fsubs
xlat
subl
and
push
movsb
fstps
imull
in
loopne
adc
sbb
inc
popa
out
mov
lods
bnd
jge
inc
loop
xchg
xchg
pop
pop
and
cld
cmp
aaa
push
int
inc
mov
cs
pop
cmpsl
mov
mov
mov
mov
mov
cltd
in
daa
shll
sub
insb
or
sub
or
test
push
icebp
mov
mov
sub
add
mov
test
iret
adc
and
sbb
sub
insb
sub
addr16
mov
jae
mov
add
dec
std
fnstsw
adc
mov
add
xor
mov
mov
data16
jecxz
imul
aam
jae
mov
out
cmpsb
jmp
mov
adc
ss
jmp
out
xchg
scas
mov
jbe
pop
mov
arpl
pop
ja
cmp
arpl
ja
bound
mov
int3
ret
cmc
adc
jl
xor
lods
adc
jne
inc
insb
in
cltd
ss
scas
inc
sub
out
rcl
inc
dec
in
cmpsl
iret
fldl
fmull
cmp
and
xor
push
push
iret
loope
sbb
cmpsl
rcrb
cs
mov
sub
popf
into
sub
mov
dec
insl
out
or
rolb
mov
mov
lds
arpl
je
pop
mov
or
icebp
sub
push
mov
addl
pop
add
je
fldl2e
sbb
push
pop
clc
pop
cmp
shl
mov
push
mov
fs
pop
jbe
out
adc
cltd
cwtl
sbb
dec
andl
xchg
push
jge
mov
or
cmp
sub
adc
idivl
lcall
and
outsl
lret
add
aaa
mov
or
inc
jg
cld
inc
ljmp
cmp
xor
test
int
mov
loopne
xchg
repz
js
mov
xchg
adc
outsl
cltd
icebp
cmc
push
add
mov
add
cmpsb
sub
insl
push
xchg
push
or
scas
xchg
arpl
lds
dec
popa
sub
xchg
xchg
insb
lea
xor
jo
mov
lcall
mov
stos
mov
ret
mov
pop
jecxz
je
dec
mov
push
daa
mov
ja
insl
inc
or
pop
sub
xchg
jno
fs
call
stc
mov
cmpsb
iret
lea
sahf
inc
push
dec
fstpl
out
rcr
jns
sub
jmp
popf
and
xchg
xor
mull
mov
add
ds
aaa
stos
xor
jae
sahf
mov
imul
int
push
adc
out
lcall
imul
arpl
add
scas
iret
and
jbe
addr16
or
xchg
pop
xchg
xchg
stc
dec
xchg
int
je
enter
adc
sbb
notl
fsubrs
dec
in
mov
out
push
filds
in
jg
test
fdivr
pop
and
adc
add
mov
jne
xchg
mov
subl
mov
and
das
enter
xchg
jp
sub
cli
add
call
mov
lods
adc
or
mov
inc
and
xchg
jge
pop
cmp
mov
insl
lret
jecxz,pt
data16
sti
or
lcall
jns
rep
pop
enter
xchg
addr16
cli
movb
sbbl
flds
fstl
shrl
ror
call
pop
inc
cmp
shlb
mov
int3
int
xor
insl
pushf
imull
shl
mov
and
fidivrs
out
call
xor
cltd
pop
scas
addr16
jl
or
pop
ja
jae
lcall
jmp
push
enter
scas
or
adc
orb
push
add
mov
jbe
lret
imul
loopne
unpckhps
xor
outsb
push
shl
sarl
es
add
sub
mov
mov
xlat
push
andl
fidivs
insl
mov
leave
stc
mov
push
popf
ret
cmp
xchg
subb
loope
jg
lret
dec
jo
nop
lods
sbb
lret
push
adc
fbstp
aad
fs
nop
inc
or
cmp
jne
mov
fstpl
cmc
inc
scas
push
stos
imul
cmpsb
fcomip
aaa
inc
es
jle
lea
mov
lds
pop
pop
stos
and
jbe
icebp
enter
add
hlt
cld
xchg
hlt
inc
movsb
dec
int
out
aam
inc
aaa
stos
push
cmp
flds
xor
outsb
dec
sti
addb
je
in
xorb
shr
inc
mov
or
popl
popf
dec
sbb
js
and
add
pop
xor
and
imul
stos
cs
sbb
daa
add
movsb
aam
cld
mov
push
mov
mov
jecxz
cwtl
inc
jl
fcmovu
inc
imul
and
packssdw
inc
xchg
std
adc
es
lods
or
push
inc
or
faddl
int3
insl
jo
add
mov
fbld
dec
fidivrl
sbb
pop
imul
and
movsb
mov
aad
adc
call
cmp
int
jp
movsl
loop
stos
les
inc
clc
pop
cld
jo
int
xchg
cmp
shlb
pop
xor
adc
popl
out
and
gs
cmp
and
ds
in
jmp
pop
mull
std
xor
lods
lea
push
into
mov
mov
mov
lret
dec
dec
xchg
xor
xlat
xchg
andl
sbb
lret
shll
pop
js
jbe
add
jg
push
lods
mov
adc
daa
and
dec
pop
add
cmpsb
insl
sub
jbe
cmp
jmp
inc
xchg
jae
ficompl
jg
xor
cltd
fbld
adcl
sub
loop
shll
mov
push
mov
rorl
sub
jb
cmp
fwait
dec
stos
jge
test
xchg
rclb
fdivrs
mov
mov
and
sbb
sbb
cmp
fistpll
mov
jns
dec
insl
pop
arpl
or
jmp
mov
jmp
nop
dec
cs
xchg
cmp
sti
outsb
repz
test
iret
jge
xchg
sti
jbe
stos
cvttps2pi
xor
rorb
sub
adc
pop
mov
sub
jo
push
cli
std
inc
mov
push
dec
cmp
pop
mov
push
call
in
xchg
push
movsl
jle
inc
jb
cmp
mov
inc
mov
mov
xchg
shrb
notb
testb
das
clc
shrb
mov
ds
mov
sbb
daa
ret
mov
outsb
sti
mov
mov
xchg
push
inc
sub
push
stos
rcr
fsubrl
pop
push
into
loop
cmp
inc
testl
loopne
mov
mov
and
add
mov
scas
repnz
or
add
mov
mov
sub
mov
add
jle
ret
repz
fcomp
mov
ds
lret
es
cmc
cmp
inc
inc
or
xchg
xor
mov
loopne
lods
xchg
jns
jo
add
je
cld
mov
or
pop
in
xor
add
cld
jae
fwait
xor
mov
arpl
repnz
inc
fnstcw
pop
iret
lds
push
xchg
shll
or
rclb
rcll
pop
test
lods
sbb
cmp
pop
xchg
adc
jmp
fwait
pop
jno
fstps
dec
es
cmpsb
mov
push
or
pop
fidivrs
sub
shlb
incl
xor
repz
add
insl
cmp
add
push
bound
movsl
cmpsl
jo
test
cmpsb
movsl
sub
fadd
les
cmp
add
testl
loope
in
pusha
stos
lods
jp
xlat
test
add
sub
adc
and
sahf
lret
repnz
xchg
mov
push
cmpl
push
mov
sub
inc
jp
loopne
aam
dec
xor
sub
rcrb
cmp
pop
loopne
mov
jp
fstl
rorl
pop
in
in
add
jg
shlb
jge
int
andb
fs
aas
or
mov
and
mov
mov
mov
cmpsb
jg
sub
sub
inc
mov
test
shll
mov
pop
in
bound
jbe
xchg
mov
dec
sbb
jns
push
mov
jbe
inc
xor
mov
or
mov
test
sub
sarl
jnp
scas
mov
push
xlat
bound
mov
cwtl
inc
pop
add
add
inc
int
lcall
fsts
outsb
out
es
in
adc
insl
or
pop
pushf
in
cmp
sar
frstor
xlat
mov
lea
bt
ljmp
bound
jecxz
cmpsb
mov
mov
push
std
push
push
or
xor
iret
cmp
inc
add
xor
jnp
pop
xchg
add
cmpsl
xor
mov
inc
shrb
xor
fs
pop
jo
pop
scas
fwait
das
mov
xchg
hlt
stc
scas
and
sbb
mov
lods
mov
lret
inc
cli
popa
fiaddl
clc
test
or
rorb
mov
movsl
je
xorb
insl
cmp
ss
imull
xor
xor
sub
negl
pop
cli
or
jo
lea
pop
jecxz
xor
push
inc
lds
std
insb
pop
out
inc
adc
mov
and
lock
fistl
ss
divl
push
test
jne
in
cmp
popaw
xor
or
inc
xor
xchg
mov
aaa
mov
and
je
ret
shl
lock
lock
mov
es
lds
sahf
pusha
loop
sub
inc
pop
aad
lea
sbb
pop
cmp
outsl
jae
out
cmpb
imul
iret
fidivs
pushf
jb
rorb
dec
sbb
rolb
adc
inc
cld
cmp
ljmp
scas
in
lret
xor
jno
mov
dec
mov
fisubs
mov
aaa
outsb
pop
out
cli
and
mov
cmp
imul
push
sub
and
sub
cmp
cmp
mov
push
and
cli
or
jae
negb
adc
dec
scas
adcb
imul
add
push
lods
mov
repz
rolb
pop
pushf
movsl
aad
add
test
sahf
sbb
int3
ficomps
pusha
inc
xchg
test
nop
mov
push
mov
xchg
sub
or
jns
xchg
pop
xor
andb
ret
and
es
sti
loop
cmp
rcr
pop
mov
cmc
movsl
cmp
iret
das
xor
pop
inc
mov
sbb
or
in
fstp
in
xor
push
cmp
add
jge
fstpt
or
sti
adc
data16
data16
dec
inc
jecxz
into
loopne
int
leave
pop
and
ljmp
xor
ss
fimuls
or
sbb
mov
cmp
aas
xor
inc
push
and
jns
in
jge
xor
sbb
pop
fidivrs
fistl
pop
movsb
xorl
xor
lahf
mov
test
cwtl
cmp
or
lds
scas
jecxz
push
xor
ljmp
ss
xchg
sti
mov
cmp
mov
push
mov
pop
pop
cmp
pop
stc
jne
test
add
adc
lahf
xchg
in
clc
pop
flds
insb
jle
pop
sbb
dec
xchg
mov
or
adc
test
arpl
lret
in
outsl
int3
stos
in
push
cmpsb
xor
cmp
inc
lds
in
stos
cltd
sub
mov
xchg
cmp
popa
scas
jbe
test
dec
cltd
ja
rcr
or
pop
or
or
call
push
aam
xchg
dec
jge
aam
orb
xor
dec
sub
outsl
pop
add
repz
cmp
jno
adc
test
cli
jmp
mov
adc
mov
mov
out
stos
out
stos
lret
iret
rol
pop
idivb
dec
jbe
push
xlat
adc
decl
insb
mov
cmpsl
stos
pop
incb
cmpb
push
aas
lds
mov
dec
xchg
mov
push
mov
adc
mov
insb
lea
cltd
cmp
lret
leave
push
lcall
and
stos
mov
outsb
mov
add
arpl
pop
movlhps
into
dec
and
fmull
sbb
stos
sarb
mov
and
notl
cmpsl
jle
adc
cmp
aad
test
cmp
iret
movsl
in
lods
xchg
fdivrl
ljmp
or
out
rcl
mov
jmp
das
sub
jp
add
sti
rorb
mov
repnz
call
push
xchg
movsl
mov
inc
test
mov
jecxz
movsl
lcall
sahf
ret
inc
icebp
test
aad
mov
int
cmove
mov
mov
or
cs
inc
mov
mov
movsl
fidivrl
jp
js
fidivs
ret
icebp
pop
shll
pop
xchg
jmp
xor
sbb
add
mov
jo
adc
outsb
aaa
rclb
cli
pop
dec
addl
and
in
sub
dec
fisttpl
fs
aas
adc
push
pop
adc
jp
in
andl
inc
bound
adc
xor
jl
mov
sbb
ss
cmp
sti
jle
add
jae
xor
clc
in
push
lods
xchg
stos
jno
pop
loope
lock
xchg
or
hlt
out
inc
add
das
mov
movsb
jl
aad
or
push
ss
sbb
mov
in
scas
test
in
in
mov
aaa
mov
and
cmp
push
cmp
repnz
outsb
int
and
loope
sub
mov
xor
inc
sbb
ja
subb
lcall
mov
mov
xor
push
lock
adc
daa
xor
mov
data16
xchg
lds
jae
test
cmp
dec
inc
or
jne
enter
insl
and
cmpb
sub
xor
sub
inc
arpl
out
testl
jp
in
mov
lcall
pop
dec
hlt
test
stos
mov
cmp
loope
push
cvtpi2ps
dec
sbbl
aam
jne
add
push
shll
fwait
push
inc
stos
mov
or
push
xchg
pop
mov
dec
stc
add
inc
bound
lea
std
mov
inc
into
sbbl
nop
sub
inc
movsb
push
rolb
jnp
add
cli
test
fdivs
fmuls
lret
pop
sub
rcrb
push
scas
adc
cmp
stc
dec
xor
pop
aad
insb
repz
jb
jb
and
sub
pop
in
mov
frstor
enter
cmc
rcrl
into
jo
sahf
lret
loop
in
push
mov
jge
rorl
arpl
add
pop
aam
dec
fistpl
cs
jecxz
in
cmp
bnd
xchg
inc
pop
mov
jae
pusha
xchg
pop
xchg
fcomip
mov
add
jl
nopl
xor
bound
jg
ret
movsl
dec
or
pop
jno
pop
mov
mov
fs
pop
les
inc
movsl
aas
imul
out
test
in
cmp
cmp
and
mov
jmp
pop
push
dec
sub
inc
cmc
cmp
push
enter
pop
and
adc
fldcw
push
scas
inc
fisttpl
les
lea
out
popf
das
out
inc
jmp
scas
pop
mov
les
dec
and
jo
cli
insb
mov
stos
ljmp
xchg
mulw
stos
adc
fidivrl
fwait
aaa
bound
add
sub
push
xchg
scas
push
jbe
lea
stos
insl
call
pop
jl
cmp
icebp
jbe
jge
or
push
subl
xor
aad
mov
pop
jno
aas
sbb
pop
inc
loopne
lds
test
int
cmpsl
and
mov
cmpl
pop
add
mov
fcomps
xchg
push
cmc
lock
and
lods
add
je
and
lcall
lret
or
add
mov
les
call
adc
jl
data16
aaa
pop
ds
push
sbb
lcall
int
mov
add
push
cmpsl
or
xchg
rcll
adc
xor
mov
mov
in
lret
jns
cmp
pop
cld
mov
add
movsb
cmpsb
adc
adcb
adc
lds
pop
cltd
jns
gs
xchg
cmp
pop
adc
std
dec
ret
cli
cmpsl
push
loop
repz
sub
out
fistps
scas
push
js
popa
aas
pop
cmp
aaa
jno
xchg
std
aad
xchg
fwait
adc
xor
fwait
cs
xchg
xchg
mov
adc
int3
int3
add
xlat
jnp
adc
mov
sbb
xor
and
lea
mov
add
cltd
int3
stos
lods
mov
scas
addr16
jge
js
not
mov
xchg
xchg
stos
dec
sub
inc
lret
shlb
arpl
lods
enter
aas
imul
out
mov
test
lock
stc
stc
cmp
jae
and
int
in
stos
add
pusha
loope
shr
out
fincstp
push
mov
cmp
fwait
ret
xor
pop
out
stos
cwtl
stos
into
enter
clc
and
mov
mov
cs
mov
daa
xchg
dec
rcrl
iret
cmp
push
cmp
pusha
xchg
imulb
popl
std
xor
ret
aam
std
mov
xchg
xchg
sub
test
sahf
push
jns
outsb
daa
jb
stc
out
pop
pop
loopne
fwait
xor
push
mov
push
aam
inc
cmp
push
pop
in
in
rcr
mov
pop
fcmovu
testb
cmc
cmp
pop
add
lock
ja
xor
scas
dec
add
xor
push
mov
sub
subl
mov
and
push
call
fiaddl
les
push
push
sub
sub
mov
push
xchg
inc
cmpsl
ret
shlb
fsubrs
pushf
xor
cmc
inc
xor
lds
cmp
ret
cmpsl
jecxz
popa
out
in
xor
ljmp
dec
in
and
mov
ja
imul
mov
jp
pop
adc
adc
shr
gs
ljmp
popa
push
or
enter
mov
cmp
mov
mov
loopne
repz
rorl
add
lock
xchg
push
dec
pop
popf
test
arpl
mov
lret
mov
xchg
cli
jl
inc
or
nop
mov
push
pop
mov
lea
mov
push
mov
add
popf
in
mov
aam
cmp
mov
aas
jle
or
cmpsb
addr16
xchg
xchg
mov
aad
out
pop
out
xor
push
xlat
mov
adc
int3
mov
out
mov
mov
nop
and
push
sbb
loope
mov
sbb
mov
clc
out
xchg
leave
xor
shll
cwtl
xlat
pop
lahf
mov
sarb
testb
mov
inc
push
ds
cmp
or
aam
dec
inc
or
cmpsb
nop
or
cmp
movsb
scas
pop
das
mov
repnz
jns
sbb
es
dec
jnp
xchg
ja
cmp
sub
sbb
lret
xchg
test
jbe
sub
ficoms
jge
mov
test
out
xchg
jae
mov
pusha
arpl
pop
push
test
aad
ds
sbb
cmp
addr16
lret
inc
cmpsl
mov
xor
cmp
pop
dec
mov
call
jbe
outsl
mov
add
aam
iret
mov
xchg
cmc
loop
xchg
xor
sub
push
test
dec
lahf
sbb
xor
push
mov
adc
test
in
gs
xor
push
aas
sub
adc
jmp
mov
cmc
jg
jl
sub
mov
xor
std
scas
scas
mov
cmp
mov
insl
add
into
adc
mov
iret
pop
inc
inc
mov
jg
inc
mov
push
sahf
push
and
xchg
and
jb
cli
adc
dec
push
xchg
in
lods
jge
test
rcr
lcall
lds
test
outsb
xor
sub
jb
push
mov
adc
mov
xor
add
enter
pop
out
cmp
adc
push
add
je
arpl
fwait
add
pushf
sbb
pop
jo
sbbl
sub
dec
out
cmp
xor
or
pop
inc
pop
sub
sub
repz
out
add
pop
and
pop
cmpsb
push
sbb
inc
push
ficoml
jne
enter
pop
dec
daa
ljmp
xor
lahf
in
data16
outsl
test
add
xchg
xor
or
mov
leave
push
test
scas
lahf
xor
push
jecxz
dec
mov
nop
xor
sbb
cltd
mov
mov
xchg
pop
and
leave
jl
in
fmull
cmp
add
mov
in
mov
add
daa
inc
shl
hlt
loope
pop
mov
cmp
ds
push
add
test
movl
adc
mov
rcrl
pop
and
xor
sub
and
mov
fadd
adc
sbb
sbb
inc
pop
setl
lock
or
or
xchg
cs
jge
dec
mov
xchg
sub
mov
daa
dec
out
xor
pop
mov
test
xchg
sbb
mov
fadds
scas
fwait
cmp
and
jnp
push
stos
add
je
jns
push
mov
push
into
pop
jnp
cmp
add
mov
enter
insb
xlat
je
xchg
cmc
pop
iret
pop
or
lret
cwtl
cltd
mov
xor
xchg
aas
mov
sub
aaa
clc
aad
jae
in
adc
pop
ret
mov
arpl
sbbb
jne
pop
and
sub
mov
in
and
mov
dec
ds
xchg
adc
insb
jecxz
sbb
mov
lea
cmc
repz
in
inc
push
clc
dec
mov
and
pop
mov
imulb
mov
inc
mov
addr16
mov
pop
jp
rol
xchg
ds
adc
ret
out
idivb
adcl
icebp
loop
loop
jmp
int3
cmpsl
sub
or
gs
fwait
inc
adc
mov
dec
push
jl
into
lock
repnz
push
in
push
xor
fdivrs
ljmp
mov
adc
testl
aam
cli
std
dec
mov
mov
add
movsb
scas
aas
aaa
mov
in
add
gs
or
js
push
mov
in
and
inc
out
add
repz
inc
xor
jg
inc
dec
fdivrs
push
ds
je
adc
push
lods
pop
js
push
mov
cwtl
cld
lds
lods
add
jg
daa
scas
jle
pusha
xchg
or
xor
or
add
adc
or
les
enter
test
and
inc
movsb
lea
mov
clc
cmp
dec
xchg
and
in
stos
sub
or
sub
mov
jmp
jne
adc
aad
or
les
data16
xchg
loop
loope
sub
incb
or
repnz
ds
cs
cmp
add
js
push
int3
push
insl
pop
sbb
pop
je
test
dec
push
inc
ror
fsubrl
and
push
push
lock
push
imul
in
mov
xor
addl
mov
xchg
xchg
mov
in
dec
and
cmpsb
addb
or
fldt
icebp
or
loop
sub
repz
pop
dec
fs
mov
sahf
lods
andb
out
push
cmp
ljmp
aas
int3
push
jge
inc
sbb
leave
mov
aas
sub
cmp
adc
icebp
add
addr16
stc
push
pop
jecxz
or
jg
mov
jg
mov
xchg
xchg
stos
cld
push
jl
pop
pop
cltd
push
fdivrs
loopne
jae
xchg
xchg
xor
add
outsl
xchg
lahf
out
mov
jecxz
aam
xchg
fstp
or
bound
mull
xchg
xor
mov
flds
sbb
shlb
fisubrs
sub
push
push
into
fwait
lock
pop
push
popa
fistpl
insl
and
xchg
pop
fisubs
iret
jns
test
sub
xor
mov
sarb
push
cmpsl
movsb
add
pop
enter
sub
ficomps
jle
pushf
sub
push
mul
and
jmp
fildl
je
pushl
cmp
ss
out
and
jl
cli
loop
rorl
shlb
stc
xor
dec
cmc
mov
push
push
lds
cmp
jecxz
stos
push
dec
nop
call
xchg
dec
fimull
mov
mov
mov
stc
add
scas
mov
fldt
adc
loope
adc
idivb
in
add
lret
faddp
cmp
pop
out
movsl
test
or
pop
test
sub
sub
lret
sbb
aam
aam
inc
imul
pushf
push
mov
rorb
pushf
fcompl
add
test
cmp
roll
adc
dec
push
and
roll
jmp
lods
xchg
mov
mov
pop
xchg
adc
dec
mov
sarb
jle
mov
pop
mov
jge
std
scas
jne
cmp
inc
popf
cli
fwait
mov
mov
jmp
pop
in
dec
push
sbbl
fisttps
bnd
mov
cmc
dec
adc
mov
loop
jae
test
adcl
insb
clc
rclb
rcrb
enter
push
cltd
mov
icebp
xor
pop
rolb
mov
xor
mov
fadds
loopne
fldcw
cmp
mov
pop
pop
dec
mov
andl
popa
inc
vunpcklps
xchg
push
arpl
lret
add
lock
add
sub
lea
mov
adc
xor
ljmp
sub
cmp
push
fidivs
sub
rorl
int3
or
frstor
fildl
add
sub
lods
sub
jp
xchg
mov
mov
cwtl
ss
imul
lret
push
sub
cmpsb
ror
push
scas
pop
and
lds
sbb
loopne
data16
sbb
cmp
fsub
jmp
ljmp
cmpsb
subb
mov
dec
or
mov
iret
xlat
rorb
rcrl
adcl
loop
ss
je
sarb
aad
push
into
pop
stos
lock
jge
or
ficompl
daa
outsb
dec
or
addr16
push
or
xchg
xlat
bound
cwtl
repnz
jne
pusha
addr16
mov
aaa
inc
jae
adcb
test
and
xor
pop
jb
or
stos
adc
out
andl
push
out
int
cmp
cmp
mov
jle
je
adc
sub
sub
rorl
fstpl
mov
icebp
inc
cli
adc
bswap
and
dec
fisttps
and
fsubrs
cltd
cltd
outsl
mov
inc
sbb
ja
shrl
add
cmp
push
pop
cmpsb
sbb
imul
xchg
outsl
je
out
sti
xchg
addr16
inc
add
cli
push
imul
dec
iret
add
lcall
ja
dec
out
dec
scas
add
sbb
mov
ja
jl
jno
je
sub
mov
jg
out
rcrb
fnstenv
sbbb
jo
pop
bound
outsl
mov
mov
cmp
dec
loop
adc
sub
mov
cmp
or
scas
jg
sbb
sbb
je
dec
stos
lahf
mov
mull
sahf
mov
xchg
cli
iret
shr
fldt
movsl
adc
sub
int
test
insb
push
pusha
imul
and
or
xchg
or
std
push
and
mov
test
fldlg2
mov
xchg
push
jp
and
enter
push
xchg
mov
pusha
mov
xchg
pop
cwtl
test
cmpsl
clc
xor
shl
xchg
in
add
xor
pop
aas
xchg
dec
jno
and
xchg
mov
jmp
add
mov
dec
push
jg
pop
dec
pop
scas
stos
ljmp
mov
out
loope
imul
sbb
push
lret
in
int
push
or
sbb
lds
and
icebp
ret
mov
je
pop
mov
mov
xchg
or
cmpsl
jae
inc
xchg
loope
fsubrs
repz
jne
xchg
sbb
sub
in
jle
daa
and
add
push
shll
ljmp
sbb
pop
out
dec
pop
add
lahf
mov
jmp
jl
out
test
std
push
mov
cli
sub
stc
xchg
cmp
mov
paddw
xchg
sbb
adc
pop
out
pushf
or
pop
xor
sbb
fildll
xlat
add
bound
xchg
mov
and
push
sub
cmc
cmpsb
lea
jg
test
mov
ljmp
add
mov
pusha
stos
rcrb
sub
bnd
js
xchg
sbb
sbb
loope
push
add
xor
xor
lock
cld
shlb
xor
or
and
and
cli
and
push
arpl
dec
sub
loope
mov
cmpl
jp
pushf
and
orb
cmp
loopne
popl
pop
jno
sub
frstor
xchg
mov
xor
fwait
sub
rcll
add
ja
aam
mov
add
insb
push
ret
xchg
andl
fidivs
push
pusha
rorl
mov
in
push
mov
pop
imul
out
movsb
test
imul
hlt
dec
loopne
jbe
cmp
push
dec
dec
xor
dec
icebp
es
cmp
add
mov
pop
mov
out
mov
pop
xor
test
call
or
movl
mov
push
fldt
outsl
push
and
aaa
jnp
adc
mov
mov
daa
cmp
test
cmpb
aas
add
ret
dec
sbb
shrl
ss
jne
sti
out
xchg
mulb
pop
adc
fsubp
lea
dec
mov
inc
adc
mov
inc
add
aad
jmp
sbb
mov
pop
cmp
and
stos
movsl
adc
clc
insb
pop
lret
mov
mov
cwtl
and
lods
add
or
push
les
in
int3
aam
sub
lcall
adc
lret
push
sbb
and
mov
push
loope
pop
lods
fs
dec
xor
xor
bound
enter
xchg
cmp
loop
xchg
stos
sub
ljmp
stos
ja
insl
test
sti
mov
dec
fimull
sub
inc
sub
mul
outsb
loop
jae
xchg
inc
sahf
fbstp
sbb
insb
dec
ja
and
ds
cmp
or
sub
popf
or
stos
nop
pop
mov
nop
mov
xchg
leave
hlt
xchg
shl
dec
xchg
out
mov
jmp
lods
mov
xchg
jo
push
inc
aaa
in
push
enter
imull
pop
jb
lea
cmp
mov
jg
cltd
imul
aas
movsl
dec
dec
and
fmul
cmp
sti
fnsave
aaa
or
lods
mov
and
and
jp
gs
cmp
and
mov
and
push
mov
add
push
insl
push
aam
sub
xor
sysenter
loope
xchg
xchg
xor
dec
pop
leave
pop
fcoms
dec
add
xchg
lcall
jo
or
push
mov
mov
jo
loop
sub
test
outsb
iret
popa
lret
mov
addr16
in
mulb
dec
jb
pop
jle
addr16
ret
inc
dec
push
repnz
dec
scas
mov
dec
and
in
hlt
push
out
mov
inc
into
cmpsl
call
sub
cltd
jmp
out
inc
cmp
mov
or
lcall
inc
adc
mov
repnz
xor
repnz
mov
es
das
mov
ss
and
mov
dec
repnz
pushf
std
popf
loop
das
imul
jge
je
mov
pusha
cmp
out
sbb
xchg
daa
push
fldt
pop
sbb
shlb
sub
insb
add
sub
dec
add
jne
push
mov
daa
in
mov
out
loopne
xchg
fwait
lcall
inc
add
push
mov
push
stos
ret
pop
cltd
subl
add
fwait
es
shll
fidivrs
fdivl
mov
fs
jp
cs
shl
jae
lret
or
sti
or
testb
jns
ds
mov
pop
adc
dec
xlat
test
mov
mov
cmc
js
inc
out
cmp
pushf
inc
cltd
pop
fisubl
jl
shrl
mov
jbe
in
push
test
js
testl
sub
pop
push
cltd
cmp
stos
jmp
test
pop
mov
mov
mov
lret
inc
push
test
push
dec
pop
out
gs
xchg
mov
pop
out
filds
add
mov
xor
pushf
es
cli
clc
xor
inc
ss
or
rorb
push
sbb
inc
and
sub
in
arpl
bound
out
inc
jns
pop
pop
and
jmp
les
cmp
popa
and
imul
jbe
out
je
dec
cmp
addr16
mov
sbbb
ljmp
outsb
fnstenv
fucomp
sbb
jge
xor
aaa
dec
mov
test
push
out
lods
imul
push
push
sbb
adc
test
in
nop
mov
out
lret
mov
add
fistpll
and
fmull
pop
les
cmp
or
xchg
mov
xchg
inc
ja
and
es
movsl
sbb
dec
adc
cmp
pop
gs
xchg
add
sub
scas
fdivr
ficoms
xchg
loope
mov
cmp
cmp
aad
pushf
mov
js
hlt
bound
iret
jmp
lahf
jle
shll
test
or
mov
lret
push
repnz
nop
or
dec
insl
dec
fs
jo
push
mov
das
and
test
dec
test
xor
pop
test
jo
out
jl
mov
mov
xchg
scas
mov
cmovg
popf
inc
cmpsb
mov
pushw
cmp
sahf
mov
jae
popa
movnti
sbb
icebp
insb
sarl
mov
mov
pusha
add
or
mov
call
jg
xor
mov
cmp
xchg
mov
clc
dec
cmpsl
fistpl
push
loope
arpl
mov
fsubs
out
dec
xor
call
es
jno
sub
cmp
push
push
call
popf
sahf
dec
inc
psubsb
insl
cmpb
aad
and
fmuls
js
fs
cmpsb
push
xchg
mov
adc
rorl
call
push
gs
sbb
fwait
xchg
sbb
test
cmpsl
or
cli
dec
xorb
xlat
call
dec
dec
fwait
xchg
icebp
sub
inc
push
mov
mov
pop
adc
mov
dec
idiv
scas
cltd
jo
add
insl
ret
fistps
gs
add
xlat
mov
arpl
push
xor
xchg
mov
push
addr16
inc
push
out
in
rclb
movntq
out
jg
insb
stos
outsl
roll
adc
fsubrs
ljmp
scas
js
cmp
int3
mov
xchg
loope
int
or
xor
pop
rorb
xchg
xchg
jae
add
js
add
jbe
sahf
cmp
mov
sbbl
ror
aam
int3
mov
test
insb
popa
dec
cwtl
xor
leave
push
or
push
icebp
adc
loope
pop
in
xor
imul
mov
mov
or
cmp
cli
xor
nop
in
jb
leave
loop
dec
cmp
add
lods
pop
imul
cmp
xorb
push
test
sub
jo
mov
xchg
dec
iret
cmp
clc
xorb
xor
adc
out
push
mov
shlb
cwtl
arpl
adc
mov
push
pop
mov
and
jae
mov
sub
mov
xchg
cs
in
add
jns
cs
or
push
test
add
in
test
ljmp
dec
cltd
sarl
scas
jecxz
push
inc
push
js
xchg
daa
in
inc
fsubrp
xor
mov
push
sub
dec
in
ljmp
cmp
rsm
pop
outsb
mov
adc
cmp
imul
out
insb
jmp
repz
pop
movsl
sahf
mov
cmp
jae
fdivrs
sbb
add
mov
fsts
adc
jmp
fcmovbe
scas
and
aam
mov
sub
popa
data16
loop
loope
icebp
mov
das
mov
push
stc
inc
dec
scas
xchg
nop
push
or
repnz
call
xor
pushw
pop
cs
imul
cmp
jb
cltd
add
test
stos
inc
aas
inc
std
cwtl
stc
vsqrtss
mov
xchg
inc
jb
xchg
test
testb
loopne
jno
scas
jl
cld
lock
iret
stos
pop
mov
mov
push
subl
aad
ja
pop
jo
int
sbb
mov
or
xchg
mov
iret
out
push
add
dec
adc
ret
subb
pop
dec
jo
xchg
lds
sub
add
jbe
jbe
mov
xchg
mov
sbb
cmpsb
enter
adc
jnp
xchg
xchg
and
bound
negl
gs
jl
lcall
scas
ja
ljmp
mov
mov
in
dec
xor
inc
pop
adc
ja
mov
out
fisttps
enter
jg
inc
add
mov
insb
or
icebp
cmc
push
inc
or
ljmp
jecxz
stos
sbbl
and
stc
jmp
cs
das
sbb
xchg
test
imul
mov
push
jo
fnstenv
sub
and
scas
ss
ja
sarb
mov
pop
addr16
fsts
push
xor
or
ss
repnz
fldenv
ljmp
nop
cmpsl
arpl
sahf
test
pop
imul
ss
adc
sti
pop
outsl
fisubs
insl
dec
jo
std
movsb
jmp
inc
pop
dec
pushf
in
sub
cli
mov
out
mov
in
mov
pushf
decb
adc
adc
test
shlb
call
dec
jecxz
xchg
add
mov
cmp
push
imul
or
mov
pop
xchg
cmpsb
shrl
xor
imul
mov
pop
and
loope
add
addr16
mov
sub
or
sub
js
xor
jmp
mov
ja
add
insb
arpl
test
and
dec
cmp
mov
pop
lods
dec
or
int3
cltd
leave
dec
daa
jmp
cwtl
push
scas
dec
clc
insb
sub
jno
adc
xorb
je
test
ret
mov
xchg
cltd
shr
sbbl
push
sbb
call
ret
out
ljmp
jl
je
ffreep
push
add
lock
shll
imul
xchg
jbe
or
sbb
or
push
dec
mov
push
sub
sub
notl
push
scas
xchg
jg
pop
nop
xchg
inc
nop
and
xor
sub
das
adc
xor
pop
mov
xor
adc
mov
mov
es
adc
xchg
sbb
pusha
lock
test
adc
mov
xchg
shr
data16
pushf
popf
mov
mov
adc
fdivr
lret
fdivrl
sahf
mov
ja
cmp
xor
fistps
vdivpd
sub
out
stc
mov
jecxz
jl
cmc
xchg
or
repz
pop
cmpsl
ret
insl
repz
sbb
xchg
push
mov
sub
mov
pop
int
mov
test
rclb
inc
in
lahf
xchg
insb
mov
arpl
cmpb
mov
dec
xchg
scas
pop
push
stc
cmp
sub
aam
rclb
sub
iret
fsubr
adc
sbb
mov
cmp
add
ret
inc
and
gs
add
jle
jae
test
sahf
and
aad
data16
xchg
mov
lahf
int
movsb
inc
inc
mov
push
les
addb
add
xlat
dec
mov
mov
dec
push
lret
int3
dec
loop,pn
in
fwait
mov
cmc
add
xchg
sbb
scas
stc
pop
clc
mov
pusha
loopne
jmp
mov
or
pusha
les
jge
daa
cmpsl
jl
add
mov
clc
je
or
inc
jae
sbb
les
popf
fisubrl
mov
add
pop
sbb
xor
pop
pusha
in
lds
mov
pop
insl
imul
imul
pop
xor
xchg
jecxz
pop
test
scas
push
mov
ds
push
ja
sub
cmp
out
mov
adc
nop
aas
xor
inc
push
cmp
arpl
and
adc
mov
adc
jae
repnz
dec
out
cmp
sbb
shr
icebp
test
push
push
cs
sbb
sbb
xor
dec
imul
xor
aas
es
negb
fisttps
sub
popa
push
scas
cld
test
mov
inc
lcall
pop
mov
cmp
pop
add
in
cmp
push
rcrb
dec
lods
cmp
cmpsl
mov
jg
cmp
aam
movsl
mov
jb
mov
mov
test
aad
jle
cmp
sub
jle
jl
repnz
ja
push
or
loop
leave
out
push
xor
xor
xchg
dec
inc
mov
cld
ficomps
sbb
lahf
fmuls
cmpsl
adc
mov
pop
out
and
jne
or
test
or
dec
shlb
mov
dec
and
pop
addr16
push
jb
mov
fisubrl
sub
mov
testb
daa
lods
cmp
push
push
aaa
movsl
iret
mov
jne
outsb
ja
lret
ds
sbb
and
cmp
xor
fstps
push
lock
push
push
sub
test
cli
cwtl
add
push
cmp
test
sbb
cmpsl
push
jne
sahf
push
dec
ja
sbb
jmp
int3
stc
jne
movsl
shrl
push
sbb
popa
sub
out
xchg
cs
dec
sub
hlt
in
lods
je
movsl
mov
jl
push
les
sub
mov
dec
sub
sbb
jbe
xchg
das
movsl
jp
dec
cmp
bound
xor
addr16
pushf
jns
or
in
sbb
out
mov
mov
aas
int3
mov
int3
hlt
add
ds
faddl
push
inc
or
pop
xchg
sbb
and
pop
hlt
lret
insl
loopne
jp
jmp
int
leave
loope
xor
faddl
mov
into
push
loopne
shl
outsb
jo
adc
leave
jno
call
fdivrl
shlb
out
xor
xchg
or
ret
xor
out
pop
and
jl
pop
leave
dec
ficoms
jo
out
or
jle,pt
push
inc
add
testl
push
imul
out
cmp
cmpsb
inc
add
mov
rclb
jnp
inc
nop
push
shlb
sub
repz
in
clc
clc
sahf
movsl
mov
mov
stc
mov
int
ds
lods
push
jbe
call
fildl
push
push
fists
sub
outsb
call
jbe
mov
dec
inc
mov
enter
idivb
inc
fwait
mov
test
cmpsb
pushf
jo
and
orl
or
inc
xchg
std
cmp
xor
out
and
sarl
push
pop
mov
cs
leave
jno
ljmp
push
xor
jnp
dec
push
and
stc
push
scas
ds
lret
inc
or
inc
cmp
sub
mov
cmp
xchg
mov
add
cmpb
lods
stos
add
subl
mov
mov
add
gs
gs
mov
lock
sarl
int3
jmp
mov
sub
mov
pusha
ss
aaa
cwtl
adc
dec
jns
into
pusha
inc
jns
dec
inc
jnp
ja
dec
push
js
scas
and
or
ret
dec
or
adc
cmp
sbbl
mov
fisttpll
cli
push
jno
ror
movsl
inc
pop
inc
and
mov
data16
pop
outsb
mov
ret
fwait
mov
loope
xor
out
fidivrs
or
cmp
push
iret
jle
je
leave
push
dec
jecxz
rolb
sub
stos
int3
jnp
imull
xchg
hlt
mov
rcrl
sbb
jbe
mov
add
cmp
or
out
mov
add
mov
sub
pop
cmpsb
cmp
push
sub
fcmovnbe
test
push
sub
mov
lds
out
pop
movsb
insb
sub
push
insl
cmc
mov
xchg
cltd
dec
stos
dec
push
daa
add
jne
mov
jmp
rcrl
lret
outsb
out
outsb
push
ret
dec
jnp
subb
mov
xor
push
add
adc
cs
pop
adc
push
jl
shrb
imul
or
aas
jno
pop
or
jmp
mov
mov
sbb
sti
pop
fistpl
inc
call
cmp
jae
mov
mov
clc
mov
or
aas
jo
pop
push
xchg
adc
push
push
xchg
mov
lods
push
jmp
pop
cs
imul
adc
pop
fucom
dec
loop
push
cmp
call
xlat
scas
push
lret
add
inc
scas
add
xchg
fs
loopne
aam
cltd
das
mov
lret
pop
xor
stc
push
in
lods
mov
nop
jb
lea
cmp
dec
shrb
lahf
fidivrs
decl
xor
cmp
aad
pop
jecxz
repnz
out
add
test
xor
fsts
aaa
std
pop
imul
das
jecxz
adc
hlt
ret
outsl
gs
cltd
push
push
popf
pop
jb
jb
fsubl
push
js
fldt
fmull
in
jmp
mov
push
leave
insl
mulb
inc
inc
xchg
xor
inc
test
or
ret
roll
mov
cmp
cmp
je
cmp
orb
and
dec
mov
fidivl
mov
and
or
test
cmc
push
sahf
inc
testb
lret
xchg
gs
ljmp
mulps
push
lret
sub
mov
sub
mov
add
mov
rcl
inc
mov
adc
xor
push
inc
and
inc
mov
add
xchg
sbb
in
std
cmc
jl
cwtl
dec
jno
movsl
inc
test
pop
ja
scas
pop
sbbl
les
js
enter
cmp
mov
ret
pop
leave
mov
in
mov
and
into
jae
cmpsb
cmp
xor
mov
pop
les
or
sub
dec
mov
stc
push
xor
ror
rcll
imul
iret
lret
jb
inc
push
adc
dec
jl
ret
pop
out
mov
or
jmp
jbe
or
cwtl
cmp
xor
inc
addr16
lret
or
add
xchg
clc
ljmp
repz
cli
xor
push
jae
orb
repnz
les
sbb
add
in
or
jg
sarb
fidivrl
or
mov
lret
add
jne
mov
pop
or
xor
rcr
and
xchg
cli
add
add
or
xor
lock
mov
mov
outsl
fwait
or
dec
add
cmpsl
jnp
inc
orb
cmp
sbb
inc
insb
add
lret
icebp
sub
addr16
mov
sarl
add
push
cwtl
cmpsl
lods
push
mov
cmpsb
scas
xchg
adc
lods
jmp
xor
movsl
mov
mov
push
inc
lea
out
xor
testl
fistl
arpl
stc
fstl
add
add
test
mov
int
sbb
and
gs
xor
xor
inc
ret
or
pop
in
rolb
sti
hlt
mov
shlb
scas
mov
cwtl
fsts
push
std
aaa
mov
js
sarb
dec
popa
pop
mov
or
dec
pop
dec
dec
or
outsl
ficoms
push
iret
jp
arpl
sbb
jmp
clc
inc
cmp
pop
push
outsb
xchg
push
xchg
jne
push
ja
lods
dec
outsb
lods
jmp
test
or
mov
cmpsl
dec
push
inc
cli
popf
jne
adc
imul
lds
jo
insl
sub
pop
inc
loopne
xor
xchg
jp
loopne
push
cld
stc
add
and
repz
and
imul
dec
dec
sub
add
push
mov
ljmp
sbb
js
push
inc
add
sub
sbbb
sbb
push
mov
ret
daa
mov
cmp
jbe
cmp
test
dec
loop
mov
pop
pop
dec
adc
hlt
inc
xor
mov
ss
xor
sub
mov
arpl
cld
jns
pop
mov
jbe
jmp
cwtl
js
xchg
add
dec
scas
adc
pop
inc
or
ds
jge
and
sti
outsl
pop
add
test
leave
nop
shlb
fsubrl
and
sub
sub
add
sbb
mov
jo
pop
inc
mov
xor
cmp
cmp
push
loope
inc
inc
sbb
bound
push
cmp
outsl
cld
push
stc
xlat
xor
jp
lcall
mov
sub
sbb
mov
out
icebp
jns
push
mov
inc
and
dec
andb
xchg
cmp
scas
pop
xlat
roll
mov
push
rcrl
jge
out
dec
and
out
sbb
pop
xchg
push
dec
pop
outsl
fdivl
imul
add
ret
rcrb
leave
cmp
inc
push
xor
cld
fwait
mov
mov
inc
mov
xor
mov
jo
out
in
pop
faddl
ficomps
clc
ja
aaa
shll
das
aas
mov
jp
aaa
cmp
cmpb
and
sbb
clc
loop
inc
inc
xchg
add
pandn
inc
andps
test
stc
inc
stos
das
mov
push
sub
add
pop
push
lcall
imul
sbb
jle
ss
xor
inc
mov
rorb
lcall
mov
iret
sub
mov
mov
mov
pushf
xchg
rcrl
insb
mov
pushf
and
adc
out
xchg
repnz
lock
push
mov
jp
push
and
mov
sub
leave
jmp
outsb
outsl
mov
sub
fidivl
adcl
loope
cmp
xor
imulb
aaa
je
xor
adc
and
xor
movsw
mov
andb
cltd
or
out
mov
into
btc
ja
pop
out
mov
xchg
aaa
add
loop
add
lock
cmp
out
mov
sbb
mov
gs
jo
and
stc
loop
lock
cmp
movsb
jbe
ror
insl
bound
inc
mov
adc
gs
lods
mov
push
les
sbb
divb
sbb
jg
mov
xchg
enter
in
xchg
pop
jnp
mov
adc
push
inc
das
sbb
sahf
jg
in
fimuls
ret
test
xchg
mov
and
dec
call
repz
loop
iret
add
cmp
ds
dec
dec
inc
cmp
int3
fdivs
pop
cmp
dec
sub
cwtl
lods
hlt
dec
add
sub
push
add
mov
mov
cmp
push
push
in
ljmp
and
and
repz
sub
add
int
jo
push
sbb
sahf
dec
imul
pop
adc
jo
pop
lcall
aad
xchg
dec
in
mov
popl
clc
add
and
mov
mov
push
insb
sub
sub
pop
shr
push
adc
dec
mov
outsb
jg
xchg
push
jmp
repnz
pop
stc
mov
add
inc
sbb
jle
daa
leave
dec
fadds
daa
add
adc
mov
and
inc
cmc
test
cld
inc
loop
aaa
call
rorl
push
fs
call
xchg
push
movsl
shlb
gs
insb
cmp
dec
ret
stos
adc
lahf
mov
sti
out
mov
dec
add
dec
mov
inc
pop
mov
pop
and
mov
mov
pop
sbb
push
js
fst
test
and
adc
sub
inc
sub
xor
or
dec
xchg
sub
inc
enter
push
repnz
aam
aas
push
mov
stos
or
or
lea
push
fstl
pop
andb
inc
ja
xchg
fadds
andb
dec
ss
jecxz
push
push
pxor
mov
sbb
mov
sbbb
jns
jp
jnp
cmp
jl
aad
push
mov
and
mov
filds
cmpsb
cli
shll
inc
push
sbb
ret
scas
mov
cld
adc
sub
xor
shrb
loopne
pop
mov
mov
into
stc
sar
fwait
inc
pop
addr16
inc
sub
mov
push
jp
paddusb
pop
push
adc
xor
xchg
lahf
jmp
test
jmp
xchg
xchg
mov
or
arpl
inc
aas
loop
loop
sahf
mov
dec
push
lret
mov
push
xchg
add
cmc
cmp
aam
test
jl
mov
mov
dec
jmp
es
sbb
cmpsb
in
and
or
xorl
mov
adc
je
sub
push
and
jp
mov
xchg
add
push
ja
push
sarb
mov
push
or
or
jo
lods
shl
repz
fdivrl
inc
jbe
arpl
insb
loop
jecxz
sti
jo
cli
jae
dec
adc
mov
mov
es
out
pop
xor
fcomps
les
ljmp
sub
cmp
push
fnstcw
add
imul
clc
dec
test
popa
push
xor
jge
test
test
fst
mov
dec
add
cmpsb
shlb
ds
mov
fistpl
cmpsb
cmp
jle
std
sbb
jg
xchg
mov
rcrl
mov
push
and
aad
mov
add
stos
jl
arpl
xor
jl
mov
lahf
mov
or
insl
rcl
push
mov
xchg
lods
xchg
test
and
or
sahf
adcl
dec
push
in
mov
test
inc
inc
jns
xor
pop
pop
inc
mov
movsb
cmpb
push
dec
xchg
add
ss
enter
adc
mov
fdivp
adc
push
jns
popa
fs
aaa
adc
repz
mov
fcmovnu
or
jns
cmp
push
fwait
cmp
insb
xchg
mov
lret
add
mov
mov
pushw
inc
cli
jmp
lret
mov
nop
push
and
dec
mov
repz
pop
mov
repz
les
jmp
sbb
roll
or
mov
scas
jge
add
xor
mov
sahf
dec
call
jmp
es
push
jle
inc
sahf
adc
and
dec
mov
and
and
jp
cmp
inc
xchg
dec
dec
lds
cmp
and
cltd
jg
sbb
loope
ja
stc
mov
add
in
insb
sub
aam
cmp
add
fisubrl
loop
leave
inc
out
push
sub
mulb
cmp
pop
inc
jb
adc
ror
sahf
add
bound
jmp
popa
fs
test
jmp
sarb
sbb
or
inc
inc
decb
mov
inc
cmp
add
jle
mov
xchg
dec
and
xchg
mov
sub
jae
mov
lds
mov
xchg
xor
push
ret
data16
xchg
sub
jae
pop
cld
pop
jecxz
scas
pop
cs
xchg
inc
dec
lds
fs
xchg
adc
xor
cld
sbb
outsb
data16
push
xor
fisubs
mov
dec
mov
mov
mov
mov
andl
test
imulb
in
fsubl
xor
xchg
sarb
inc
rol
insl
mov
push
lea
xor
lods
idivb
dec
andb
in
mov
jge
and
or
xchg
loopne
in
mov
xor
xor
andb
mov
add
cmp
pop
mov
cmpsl
mov
pop
fstps
dec
ds
jmp
push
lcall
xor
mov
adc
mov
cld
imul
clc
cltd
gs
std
out
sub
push
pop
mov
lock
add
xchg
mov
cmpb
roll
aam
mov
and
jmp
popf
jecxz
outsl
inc
lret
push
sbb
dec
push
inc
bswap
int
cmpsb
xor
xor
inc
leave
xchg
or
adc
cmp
andl
cmp
aam
test
imul
in
sarl
dec
mov
fiaddl
jo
pop
insl
push
push
push
add
or
clc
int
bnd
mov
jae
push
roll
lahf
xchg
sahf
jne
jp
aas
filds
mov
std
popa
cs
pop
jle
dec
rolb
popa
repz
mov
rcr
dec
ficomps
jle
rcrl
sub
add
mov
aaa
rcl
inc
mov
dec
out
in
mov
inc
pop
mov
xchg
jne
mov
sub
mov
lcall
mov
adc
shll
push
mov
arpl
mov
jmp
mov
jge
inc
lods
jmp
pop
or
cmp
pop
lcall
lods
inc
lcall
loope
mov
shrb
jae
xor
icebp
pop
xor
jbe
inc
jmp
mov
pop
pop
ret
popl
push
aam
mov
insb
mov
test
jb
pop
mov
stos
lea
hlt
pushf
inc
jae
enter
pop
int
jg
mov
mov
imul
adc
movl
lcall
in
mov
data16
out
mov
outsb
sbb
add
jl
fbstp
lock
and
imul
mov
sub
xchg
sbb
add
cs
aad
or
mov
mov
add
mov
lret
addl
cmp
inc
add
faddl
mov
adc
inc
and
mov
jb
lods
dec
or
or
xchg
fxch
xchg
cmp
pop
xchg
xor
ljmp
sbb
sub
cmp
or
les
rolb
lea
inc
lcall
pop
adc
mov
mov
out
fimull
fldz
and
pop
mov
sbb
add
jecxz
std
mov
mov
add
das
and
aas
sub
add
fwait
or
test
sub
mov
mov
add
xchg
cmp
sbb
in
adc
mov
sti
sbb
out
call
es
hlt
push
addr16
jge
jmp
out
rcll
xchg
lods
test
aaa
sub
sbb
xchg
mov
stos
pop
orb
gs
les
mov
push
or
adc
in
enter
add
xchg
sbb
xor
pop
or
rol
mov
push
and
rol
insb
cmc
cmp
into
adc
in
adc
ret
jo
and
out
and
mov
frndint
inc
mov
movsb
sub
out
popa
xchg
pop
aaa
orb
and
rcll
filds
movsb
and
adc
sbb
icebp
dec
cmp
rorl
pop
jg
pop
ds
pop
scas
pop
iret
mov
sarb
fwait
mov
sub
mov
fs
push
mov
out
mov
adc
cmpb
jne
sub
sub
sbb
inc
jbe
std
stos
test
cld
movsb
inc
dec
jbe
push
dec
ss
sub
and
das
xor
adc
subl
mov
xor
test
pop
adc
pop
mov
inc
xchg
stos
imul
or
mov
add
cmp
jo
int3
shrb
daa
inc
sahf
inc
imul
jae
hlt
adcl
sbb
xlat
sbb
xlat
push
sub
mov
ss
add
pop
clc
imul
jl
and
lcall
mov
pop
jle
xor
icebp
sub
push
sub
pop
jmp
cs
mov
xchg
cltd
mov
test
sbb
pushf
inc
rcl
mov
fists
dec
imul
fbld
xchg
xchg
mov
jne
fistpl
xor
push
scas
sahf
add
adc
cmp
sub
sbb
jle
aaa
lret
cwtl
mov
cmp
sbb
into
add
or
mov
pop
stc
ljmp
cmp
lock
les
test
jae
imul
add
sub
call
lds
fcmovne
cmp
leave
xchg
shll
repz
fdiv
out
pop
cwtl
es
adc
mov
dec
add
and
es
aaa
int
and
push
pop
mov
fsubl
pop
movl
repz
out
clc
movsl
cltd
jno
dec
sbb
daa
in
cwtl
pop
mov
insb
test
xchg
cmp
frstor
std
pop
dec
xchg
in
leave
lods
cmc
aam
stos
mov
int
fnsave
test
pop
cs
mov
int
cmp
cld
cmp
das
mov
push
std
dec
inc
jp
lods
sbb
ret
call
mov
movsl
jl
mov
dec
adc
push
gs
rcll
fiaddl
dec
out
stc
lods
inc
cli
inc
cmc
test
out
dec
mov
int
es
adc
mov
push
mov
mov
lcall
mov
xchg
push
sub
sbb
pop
pushf
push
imul
cmp
test
pop
push
inc
mov
fadd
cmp
clc
cltd
fcompl
mov
hlt
push
xchg
pop
jmp
aam
ds
addb
jo
or
and
sub
shrb
stc
add
sub
psubw
jg
enter
fcompl
fmuls
and
int
lds
or
pushf
pop
popa
xchg
mov
jl
sbb
rcll
int3
test
in
mov
adc
mov
lea
and
hlt
xor
jmp
jo
push
inc
pop
fistpll
jae
mov
xor
push
test
insb
rcr
std
pop
aaa
stc
adc
inc
xchg
push
es
lods
jmp
fnsave
xchg
js
sbb
imul
scas
in
mov
dec
inc
or
jb
loopne
aaa
inc
jmp
or
mov
cltd
in
mov
jg
jmp
pop
popa
xchg
mov
jb
mov
dec
rorl
call
jae
xchg
scas
inc
jne
lea
mov
lret
xchg
sub
arpl
cmp
testb
mov
sbb
cmp
fdivrs
xchg
push
xchg
and
std
shlb
mov
outsl
into
jmp
cmp
cmp
pushf
movsb
jb
pop
fcompl
lods
jl
push
pop
hlt
jp
or
xor
test
mov
sbb
fcomps
iret
fwait
data16
loop
inc
outsl
push
pop
lds
push
mov
and
sbb
test
mov
dec
popf
jno
jbe
test
sub
adc
push
pop
adc
inc
aam
mov
mov
mov
sub
enter
mov
test
push
cwtl
jns
icebp
cmpsb
imul
scas
jg
enter
pop
xor
dec
fsubl
dec
cmc
repz
xor
inc
push
adc
stos
jmp
sub
pop
sbb
sti
cmpsl
xchg
sbb
pushf
cwtl
cs
push
movsl
push
xor
movsb
add
jl
or
sbbl
jae
shl
ret
pushw
out
and
jo
inc
lcall
daa
inc
test
rorb
out
nop
mov
sarl
and
ljmp
stos
push
inc
loop
fs
ss
xor
cmpsl
scas
push
iret
xchg
mov
std
dec
pop
push
inc
jae
pushf
dec
jb
or
jge
inc
jae
mul
lds
movsb
in
add
or
rorb
xchg
neg
data16
mov
ret
gs
scas
xor
push
add
or
pop
jne
xchg
cmpsl
push
out
fwait
rcr
ja
andl
push
push
imul
dec
jae
mov
cld
and
lock
adc
add
jle
xchg
aad
gs
mov
shlb
lods
cmp
ja
pop
lods
into
sbb
mov
push
xlat
aam
inc
lea
and
push
pop
mov
jmp
push
adc
xchg
pop
jno
cltd
insb
mov
jae
lahf
dec
mov
xor
cmp
or
shl
xchg
add
mov
ds
gs
push
inc
fcmovb
pop
xchg
xchg
test
jp
out
sub
ret
scas
in
in
xor
push
test
rorb
fbld
sbb
mov
pop
add
ffree
cmp
mov
scas
inc
and
neg
icebp
scas
sbb
cli
adc
out
in
jmp
lahf
pop
stos
cmp
and
pop
movsb
adcb
ds
cmc
add
mov
mov
int3
arpl
out
pop
pop
outsb
push
cmc
popa
cs
lahf
pop
or
cmp
lahf
mov
mov
xor
iret
inc
iret
mov
jbe
push
adc
inc
iret
jle
push
mov
mov
sub
fists
sbb
js
outsb
pop
pop
xorps
sbb
daa
stc
push
jle
mov
push
mov
out
pop
fidivrs
pop
add
shlb
xor
pop
xchg
mov
mov
aaa
inc
pop
std
sbb
popf
sti
jge
mov
xchg
dec
xchg
and
ret
mov
cld
popf
jecxz
jg
in
out
rcrb
outsl
add
loope
jl
cmpsl
push
gs
ret
xor
inc
je
push
test
xor
scas
pop
movsl
out
inc
xor
push
ds
aas
popf
lret
jmp
ljmp
mul
add
push
sub
push
xchg
lds
fldenv
out
push
imul
mov
fbstp
sub
repnz
sti
mov
adc
adc
bound
sbb
and
lods
cmpb
push
lods
sub
xor
fadds
pusha
pop
cmpsb
add
lahf
jne
sub
orl
icebp
or
nop
and
sbb
jne
jb
fstp
dec
jb
xchg
icebp
or
rclb
repz
xchg
aad
cmp
into
fbld
jl
mov
mov
push
and
cmpsl
inc
mov
mov
push
pop
mov
sbb
test
fidivs
bound
mov
jl
hlt
adc
cmp
leave
lea
fldt
mov
adc
aaa
xlat
out
sub
roll
jne
add
mov
xchg
push
xchg
inc
sti
and
repnz
jns
pop
fists
mov
sub
dec
jmp
and
lock
cmp
jb
sub
lcall
jnp
or
sbb
pop
mov
icebp
mov
call
cs
mov
mov
lods
stos
out
fisttpl
lahf
ss
pop
add
cmpsb
cmc
pushf
jecxz
sbb
faddl
pop
and
and
fstl
jle
jns
dec
inc
shll
jl
vxorps
aad
mov
roll
mov
adc
jg
mov
xchg
popa
mov
std
sub
add
jle
push
sbb
jle
mov
ljmp
shlb
sbb
nop
xchg
in
imul
xchg
lahf
dec
in
lods
mov
imul
push
pop
pop
mov
jecxz
push
mov
bound
or
sbb
xchg
jl
and
mov
xchg
ret
jp
or
mov
adc
pusha
push
mov
or
inc
jb
lahf
loope
fildll
shrb
mov
in
aad
pop
mov
mov
data16
adc
stos
push
testl
jnp
jecxz
pop
or
lret
lock
loopne
sub
mov
push
dec
cmp
aaa
scas
sti
mov
cmp
aaa
fst
sub
mull
adc
pop
xlat
xor
ljmp
mov
jno
cs
ret
popl
pop
in
int
int
inc
pop
aam
sbb
shld
inc
xor
lret
push
or
repz
add
jne
gs
fdivl
add
movsl
fstpt
stos
ljmp
mov
jo
call
sahf
mov
add
push
scas
jmp
scas
add
out
jae
mov
rcll
imul
xor
add
test
or
jp
and
pusha
bound
enter
stos
cs
pop
xchg
call
cld
mov
enter
lret
adc
nop
test
mov
lret
negb
pop
cwtl
rolb
aam
adc
lds
adc
arpl
fcmove
sub
rcll
movsl
pop
scas
out
cwtl
xor
repz
rolb
sbb
in
xchg
mov
push
invd
mov
andw
jns
mov
mov
jl
xlat
adc
mov
xor
out
loope
fdivr
sub
sbb
test
pop
data16
sub
in
cltd
imul
jb
jmp
arpl
inc
mov
lods
inc
pusha
mov
ret
push
or
xchg
or
into
and
xchg
dec
and
aam
lock
sub
push
test
xlat
mov
sbb
xor
sub
std
sbb
sub
jne
nop
sahf
aad
out
mov
mov
mov
adcl
and
fs
xchg
inc
and
cmp
mov
enter
push
dec
add
inc
lahf
pop
dec
jp
and
xchg
lcall
lock
in
fdivrs
into
mov
inc
push
pop
mov
mov
pushf
xor
xor
sbb
out
cmp
xor
dec
pop
ret
push
add
test
int3
jbe
mov
or
mov
cmpsl
outsb
xor
pop
mov
popf
jmp
mov
add
stos
inc
enter
test
and
push
lea
rorb
or
mov
cltd
dec
jns
adc
enter
ja
lods
xor
xlat
iret
enter
sbb
jne
push
fstpl
fcompl
inc
and
xlat
ret
inc
adc
into
fdivr
lds
enter
into
mov
sub
cli
dec
mov
mov
push
rcrl
in
mov
xchg
imul
jg
add
xchg
xor
lcall
pop
mov
orl
push
push
jecxz
xchg
repz
pop
inc
dec
icebp
out
adc
test
sbb
into
rcrb
sub
pusha
out
jo
sbb
fmulp
outsb
rcrl
nop
fldenv
xor
cmp
mov
push
inc
repnz
push
cltd
push
mov
lods
mov
adc
aad
out
xor
call
stos
xor
mov
or
push
test
sbbl
push
insb
out
int3
jmp
and
leave
repnz
or
negb
sbb
jg
movsb
cmp
fisubl
sbb
mov
mov
push
sbb
jmp
add
lret
ret
ss
push
xlat
cli
cltd
data16
stc
stc
mov
mov
enter
jmp
out
sub
pop
and
sub
data16
jae
mov
sbb
or
sbb
sbb
fwait
bound
dec
stc
iret
orl
mov
xor
cmpsl
cvttps2pi
xchg
or
and
xlat
nop
jae
add
pop
jg
jl
call
shl
clc
nop
inc
inc
pop
jl
inc
das
aad
push
stos
cs
call
test
mov
aaa
fdivrs
jo
fnstsw
enter
cld
pop
add
fdivs
inc
cmc
fwait
push
jmp
mov
pop
mov
jnp
xchg
sbb
xorl
jne
inc
mov
mov
mov
push
sbb
negl
int3
mov
pop
es
xchg
push
pop
cmovno
xchg
jmp
js
mov
dec
cwtl
int3
divb
lds
movsb
jle
nop
scas
repnz
mov
icebp
sbb
adc
lcall
xorl
data16
add
std
repz
xor
insl
hlt
movsb
psubd
mov
sbbb
iret
mov
hlt
add
imul
add
cmc
jo
push
lock
xor
sub
push
adc
inc
pop
lock
xchg
scas
daa
add
mov
loop
cli
int
les
scas
clc
gs
fwait
pop
aas
mov
scas
rol
and
sbb
out
fstpt
adc
arpl
stos
stos
scas
sbb
xchg
xchg
jle
outsl
xchg
fmul
push
imul
or
inc
stos
orb
insl
test
fwait
mov
out
cmp
and
fnstsw
fstpl
sbb
dec
xor
xor
pop
out
in
adc
test
out
mov
test
sub
enter
pop
cmp
dec
sbb
mov
stc
popf
int
mov
xor
lods
jl
pop
test
ja
mull
lahf
dec
lods
sbb
sub
insb
dec
punpcklbw
dec
and
sbb
inc
nop
xchg
fwait
hlt
xorb
loopne
iret
push
cmp
pop
add
and
mov
pop
mov
add
jp
lcall
repz
jnp
inc
std
pop
dec
cmp
test
dec
add
mov
mov
and
fsubrs
mov
mov
outsb
mov
dec
lods
or
jne
mov
jae
fdiv
sbb
sbb
inc
dec
dec
sbbb
call
sub
daa
xor
xchg
ficompl
aaa
test
pop
mov
push
xchg
sbb
or
iret
or
push
lret
xlat
movsl
xor
pop
xchg
mov
add
das
mov
scas
pop
outsl
mov
pop
xchg
out
xchg
add
push
lods
jbe
sub
pushf
stos
sub
pop
aaa
jge
inc
aad
xor
lahf
in
inc
sbb
add
push
int
mov
pop
xor
dec
loop
xor
xor
jecxz
sub
loopne
pushf
pop
and
adc
in
mov
out
inc
lea
test
or
sub
cmp
nop
popa
mov
adc
and
xchg
fwait
stos
js
jns
daa
fisttpll
mov
arpl
daa
push
lods
or
je
aad
xchg
mov
push
cmp
test
xor
inc
movsl
push
out
mov
add
and
stos
push
jns
iret
mov
flds
jnp
mov
push
lods
stos
ret
push
stc
aad
mov
nop
jne
jb
enter
mov
inc
xchg
popf
in
cmp
and
xor
xchg
mov
xor
jns
pushf
cmp
inc
add
scas
push
xchg
sbb
pop
int
clc
jge
mov
rcrl
inc
test
int3
pop
sbb
pop
or
clc
xor
out
dec
dec
cltd
adc
fisubs
mov
lods
push
insl
fmuls
aas
cmpsb
xor
jmp
ja
pop
imul
popa
sub
mov
mov
cmpsl
or
mov
fsts
out
testl
lcall
sbb
push
popl
xchg
lcall
sti
testb
icebp
mov
xor
adc
les
stos
mov
and
mov
rep
xchg
cmpsb
imul
inc
mov
stos
jg
jle
scas
pop
dec
data16
mov
mov
pcmpgtd
outsb
fimuls
fadds
mov
je
fucomip
negl
cli
bound
dec
popf
jns
mov
inc
notl
mov
std
arpl
jle
add
push
xchg
adc
inc
mov
xchg
clc
pop
rolb
jnp
inc
cmpsb
in
dec
xchg
dec
in
sub
sahf
cmp
pop
stos
addr16
test
mov
or
insl
add
jnp
xor
mov
ret
dec
call
xchg
jb
or
xlat
insb
fs
sbb
xor
shlb
imul
les
xor
mov
das
mov
into
out
aaa
and
mov
pop
mov
mov
rorl
iret
inc
push
push
sub
xor
push
inc
inc
mov
mov
cmp
imul
inc
loop
mov
pushf
std
lcall
jne
in
xchg
inc
mov
adc
fldt
xchg
adcb
dec
mov
mov
stos
cs
inc
stc
add
hlt
xor
rolb
pusha
out
cmpsb
mov
xchg
pop
mov
inc
mov
mov
clc
push
cmc
add
and
xlat
fiadds
sbb
out
pusha
lods
push
nop
inc
adc
xchg
mov
enter
jecxz
cmpl
sbb
jno
cmp
adc
lods
pop
push
bound
mull
add
cmp
pop
jno
addb
mov
push
xchg
lds
adc
clc
call
cltd
insl
xor
por
cmp
and
shlb
out
sub
push
movsb
xchg
scas
lock
test
test
test
ljmp
icebp
out
jae
andb
daa
fisttps
js
add
jnp
lods
and
in
js
bound
aas
pop
leavew
inc
add
rep
lahf
icebp
loope
movsl
sbb
or
lea
arpl
xor
sbb
push
addr16
or
mov
mov
inc
andl
or
ja
or
in
jnp
dec
loop
jbe
push
aad
and
nop
rcl
cmp
xor
cmp
aas
negl
xor
fldl
ret
mov
sar
imul
push
mov
call
icebp
js
mov
pop
mov
or
sub
adc
sbbl
cwtl
pop
mov
subb
pusha
pop
pushf
js
mov
cmp
ror
lahf
popf
repnz
loop
mov
mov
stc
movsb
lcall
mov
arpl
aaa
call
jecxz
add
cmp
and
push
mov
int3
call
jmp
rol
dec
push
dec
cltd
cmp
xchg
sub
in
mov
or
or
xor
adc
popa
mov
sub
and
xchg
mov
mov
orl
std
pushw
sub
sbb
mov
adc
or
ds
pop
hlt
in
cmp
dec
xor
js
xchg
sbb
sub
movsb
push
add
mov
push
in
xor
jmp
adc
dec
mov
insl
insl
mov
in
jmp
push
lds
mov
sub
pop
jae
aas
pop
add
flds
xchg
rcrl
les
lret
aad
movsl
fcoml
or
imul
mov
jno
lret
mov
dec
jo
mov
in
xlat
sub
ss
xchg
mov
sub
or
xor
in
loopne
popa
xor
and
lds
cs
clc
add
sbb
mov
rcll
rorl
std
push
daa
inc
pop
sti
int
sbb
outsb
test
movsl
ds
jl
sahf
pop
mov
mov
sbb
enter
shlb
loop
mov
ret
ret
and
push
jo
or
add
mov
rorb
add
jb
xor
xchg
outsl
in
pop
jnp
es
lds
mov
adc
mov
xor
dec
pop
scas
rolb
mov
pop
fcomps
or
dec
cmc
clc
and
imul
shll
test
cmp
out
push
bound
cli
scas
pop
jl
and
in
cli
loopne
sub
add
xorl
mov
js
mov
testl
xchg
jmp
cmp
mov
add
je
jmp
sub
or
sub
jg
jle
mov
push
sub
add
sub
jno
jno
xor
or
outsl
jle
loopne
sub
out
popa
cmpsl
nop
push
inc
cli
insb
rcrl
lahf
sub
sahf
mov
xor
mov
lods
cmp
jmp
dec
push
adc
je
in
adc
movsb
mov
xchg
inc
hlt
pop
sbb
jns
mov
into
pop
pop
and
and
or
cmp
mov
inc
jne
cmpsl
arpl
das
fldenv
mov
or
mov
divl
sbb
push
pop
sbb
cmpsb
sbb
movsb
shrb
pusha
sub
imul
cltd
dec
push
pop
cld
jmp
insl
fcompl
test
push
lcall
adc
sbb
dec
inc
outsl
mov
lret
and
aam
cmp
cmpsl
out
lcall
out
mov
mov
add
adc
adc
mov
cltd
fists
cld
aaa
xorl
add
mov
sub
repz
jno
test
push
xchg
jne
or
add
repz
or
push
dec
jnp
scas
mov
or
cli
and
sbb
and
mov
xor
hlt
xchg
cwtl
lea
mov
pop
mov
bound
inc
jecxz
inc
mov
lds
rcl
dec
je
mov
inc
pushf
xchg
cmp
adcb
jge
dec
je
sarb
dec
stos
mov
ret
mov
pop
mov
dec
cmp
andl
mov
ljmp
jl
daa
outsl
mov
sbb
aad
pop
or
pop
jle
cwtl
push
ljmp
add
loope,pt
xchg
dec
xchg
dec
in
outsl
cli
adc
outsl
cwtl
in
push
lods
add
aam
and
popf
mov
lahf
lcall
pop
mov
cmpsb
push
stos
les
pop
sub
test
mov
lret
aaa
test
test
ds
add
push
inc
pop
sbb
adc
xor
sbb
sbb
sbb
xorl
or
out
les
mov
js
sbb
fwait
and
dec
or
jecxz
pop
lret
pop
testl
mov
xor
test
movsl
push
push
or
cmpb
mov
xor
cmc
fsubl
shrl
mov
in
daa
add
ret
lods
jbe
mov
xchg
sbbb
sub
sbb
fildll
fimuls
push
mov
mov
scas
mov
test
loopw
loop
icebp
arpl
jp
jns
fstps
or
lods
jp
loope
mov
mov
pop
fcomps
inc
cmp
add
cwtl
push
sub
mov
das
pop
adc
cwtl
adc
cltd
sub
fadds
pop
dec
jp
and
xchg
dec
sti
inc
sub
dec
mov
jg
stc
or
dec
orl
faddl
aad
pop
pop
jb
pusha
fiadds
mov
jle
xchg
arpl
arpl
das
bound
push
mov
lods
sbb
cmp
sub
inc
les
cs
jnp
sub
jge
mov
jg
xor
mov
aad
jo
insl
adc
mov
testl
pop
adc
xor
mov
xor
jecxz
push
push
mov
push
js
int3
aad
adc
test
push
and
ret
and
mov
jae
sub
mov
cmp
push
push
jecxz
ret
test
ficoms
outsb
mov
mov
out
fs
sti
ljmp
ss
dec
pop
fistl
jne
gs
lcall
adcb
stc
pop
iret
mov
cmp
pop
ret
dec
lret
rorb
pop
push
cs
inc
lock
inc
insl
mov
jge
imul
hlt
movl
and
push
mov
dec
adc
sub
xor
cld
in
mov
mov
or
ret
add
cs
arpl
mov
cmp
ss
aam
jno,pt
mov
or
mov
scas
mov
sub
mov
repnz
or
test
cld
inc
pop
div
pop
out
ret
mov
jecxz
xchg
imul
out
or
imul
sbb
jae
icebp
in
pop
ja
and
out
stc
mov
in
dec
cmp
arpl
dec
bound
or
enter
push
jbe
dec
push
mov
mov
mov
push
dec
addr16
jp
in
dec
daa
pusha
push
test
outsl
fdivl
loope
shl
adc
add
hlt
xchg
or
jo
sbb
cwtl
xchg
faddp
pop
sahf
fisubrl
icebp
pop
or
movsl
xchg
les
jne
in
ror
jl
cld
cmp
or
inc
daa
mov
mov
sbb
icebp
out
sub
adc
out
push
repz
jmp
push
call
cltd
add
dec
mov
push
pusha
xor
mov
fs
sbb
pop
push
mov
sbb
out
pushf
insl
lods
inc
jbe
jp
xor
sub
xor
and
push
xchg
sarl
jno
icebp
daa
adc
mov
je
test
cmpsb
sbb
mov
pop
fidivrl
adc
test
movsb
fldt
ret
sbb
xchg
rorl
sahf
enter
xor
push
test
pushf
andl
in
cmpsl
xchg
and
dec
push
sbb
and
xor
je
push
mov
mov
shr
push
mov
or
popa
push
jge
jne
imul
mov
lods
inc
dec
jne
and
adc
jle
test
dec
jecxz
flds
push
icebp
rcll
push
add
push
cli
movsb
or
push
daa
or
lret
sarb
sti
arpl
cmpsb
pop
add
sub
add
sti
into
push
std
fiadds
sbb
sub
aas
adc
inc
mov
mov
xor
mov
enter
fdivs
ds
inc
and
adc
lahf
jmp
xlat
jle
es
jmp
cltd
cmp
imul
push
rclb
xchg
sub
dec
popa
scas
hlt
sbb
jne
mov
inc
fucomip
lahf
std
ljmp
inc
test
ja
hlt
mov
daa
cmc
mov
jae
jo
xchg
adc
lcall
inc
pop
lods
cs
iret
je
jns
sub
push
ja
mov
jno
rcl
xor
and
add
xor
arpl
fxch
xlat
jne
mov
in
mov
fildl
push
enter
nop
add
xor
sbb
cmp
mov
jle
sarl
scas
movsl
subl
and
rcll
jno
das
and
pop
aaa
cmp
sbb
sbb
ds
aas
fidivl
cmc
add
das
cmp
adc
or
ret
inc
cld
adc
test
inc
jmp
mov
xchg
popa
jb
pop
sub
sub
std
push
sahf
sbb
jmpw
push
loope
sub
mov
dec
sub
inc
loopne,pn
mov
dec
pusha
inc
jmp
sub
xor
xlat
gs
jmp
pop
sbb
jno
sub
xor
or
adc
incl
dec
sbb
test
cmp
outsl
mov
adc
pop
sub
call
add
mov
inc
das
push
fmuls
jns
dec
mov
in
xchg
jmp
push
punpckhdq
pop
test
popf
push
popf
and
in
add
bound
and
sbb
outsb
insb
cltd
and
jmp
cmp
mov
inc
lock
inc
inc
adc
aaa
lock
mov
adc
icebp
sub
mov
and
sbbl
fimull
dec
ljmp
sub
jnp
cs
es
push
add
rcrl
mov
sub
cmp
sub
cmpsl
lcall
pushf
xor
addr16
or
loope
ss
ds
stos
jp
daa
cltd
mov
imul
in
sbb
jnp
sub
pop
lods
andl
sub
lods
cmp
dec
lahf
xor
mov
or
cmp
ficoms
lret
fcomip
sbb
xchg
cld
push
mov
xchg
mov
mov
inc
out
or
xor
cmp
jg
or
mov
push
add
pushf
cwtl
insb
scas
arpl
js
jne
lea
pusha
jecxz
stos
cltd
sub
add
xchg
lea
or
lods
scas
adc
les
ds
fiadds
rcrl
push
in
jmp
dec
sbb
mov
mov
rolb
push
imul
mov
add
mov
mov
xchg
inc
imul
jae
or
pop
jo
dec
std
addr16
or
inc
adc
test
jle
iret
xchg
push
jae
lret
mov
into
inc
imul
ret
into
mov
cmp
xchg
inc
jecxz
pop
jo
lret
outsl
sub
jo
dec
fsubrl
je
test
jle
insl
mov
xor
push
mov
pop
vshufps
mov
mov
jle
insb
lret
fcomip
jmp
jp
cltd
lahf
out
popa
push
push
fwait
in
mov
cmp
adc
test
int3
ljmp
mov
pop
int3
push
push
xchg
jae
roll
adc
mov
xor
fpatan
add
mov
insl
lods
push
jnp
test
int
icebp
fwait
lret
mov
adc
shlb
sub
sbb
scas
pop
test
mov
fstpl
outsl
popa
fs
es
sbb
jle
adc
adcl
in
mov
mov
imul
fstps
push
and
push
fwait
insb
adc
mov
jmp
es
out
mov
mov
pop
sarb
leave
test
out
xlat
jbe
sbb
ja
dec
aaa
mov
mov
push
adc
or
xor
add
mov
pop
lret
and
pop
adc
sub
mov
xor
loope
xchg
in
jmp
jg
fidivrs
jns
fucomi
outsb
out
mov
leave
aad
jo
pushf
jns
icebp
fwait
pop
lds
dec
cs
outsb
dec
pusha
push
lret
dec
pop
out
mov
roll
xchg
lahf
mov
insb
and
or
arpl
mov
sbb
fcmovnbe
pop
jne
inc
cld
ficoml
test
and
dec
ljmp
enter
dec
inc
sbb
adc
ret
ss
mov
repnz
int3
sbb
ret
xchg
pop
push
lea
or
test
add
xor
inc
or
pushf
or
inc
lods
popa
in
loope
xor
int
dec
aaa
mov
insb
jmp
push
pop
pop
adc
daa
rorl
or
fcmove
stos
and
mov
or
jmp
jno
lods
outsb
ficompl
and
ret
pop
adc
xchg
dec
pop
xchg
add
and
aad
fwait
imul
sub
mov
pop
jbe
in
lds
mov
sub
mov
test
mov
sub
or
or
push
xor
cmp
scas
jbe
dec
cmp
gs
push
stos
sbbl
arpl
dec
popa
ficoms
je
or
lahf
push
mov
lret
pushf
jl
mov
rclb
not
sbb
mov
popa
mov
push
jbe
call
cmp
push
adc
add
ficoml
mov
pop
sti
test
enter
pop
push
cmp
inc
aad
cmp
or
jae
xorb
pop
loop
mov
pop
out
sub
and
jp
aad
jecxz
mov
loope
lret
jecxz
test
aad
leave
xchg
call
push
icebp
ja
inc
dec
mov
add
jnp
xlat
adc
mov
mov
sbb
cmp
lcall
cmp
xchg
jmp
sbb
and
fsts
test
xlat
xchg
lret
sub
xor
or
cwtl
mov
push
push
loope
lahf
ljmp
add
or
mov
add
decl
pop
in
daa
aad
mov
jbe
pop
iret
les
ror
and
lret
inc
sub
jmp
adcb
ret
inc
insb
dec
js
add
dec
push
js
mov
adc
loope
pop
xor
insl
jb
test
add
xchg
inc
jl
sub
mov
ja
subb
mov
bound
cli
add
sti
push
imul
push
add
hlt
iret
imul
and
add
outsb
imul
ret
test
sarl
cmp
data16
mov
insl
jp
mov
sbb
jmp
daa
outsb
fadds
rclb
jp
ss
ljmp
jecxz
push
mov
fs
lock
xor
jns
outsb
jle
es
shll
gs
adc
inc
movsl
mov
or
stc
stos
lret
rcl
cld
pop
orl
push
push
mov
je
sbb
insl
adcb
cld
add
jmp
sub
sbb
and
test
enter
dec
dec
roll
iret
jmp
adc
or
dec
lret
test
pushf
xor
in
jb
inc
mov
sti
sub
sub
jnp
jp
arpl
push
jns
jne
out
mov
out
data16
movsb
mov
xchg
inc
cwtl
dec
popa
in
jo
jae
jg
arpl
popf
rsm
movsb
mov
inc
push
bound
cmp
test
pop
scas
inc
jno
popa
cmp
jecxz
iret
mov
mov
mov
pop
call
test
or
mov
scas
iret
imul
sbb
and
loopne
aaa
cmp
std
xchg
xor
add
lds
and
fwait
cmp
xor
rcrb
inc
lahf
inc
pop
push
push
int3
aad
test
in
decb
or
shll
lahf
and
sbb
sub
fcmove
mov
mov
add
enter
jne
loope
mov
xchg
pop
mov
or
push
xor
adc
jo
jbe
push
out
xchg
cltd
imul
cmpsb
in
add
pop
imul
adc
push
cmp
cmp
sub
test
sarl
int3
aaa
mov
cwtl
jo
add
adc
xadd
scas
inc
sbb
cli
mov
loope
mov
xor
push
or
jp
or
add
sbb
and
jge
stos
std
adc
mov
jle
das
mov
int3
neg
scas
popf
in
adc
insb
jge
into
sbb
fidivrl
mov
xor
inc
push
xlat
xchg
iret
fimull
pop
insl
sub
jo
dec
das
mov
sub
movsb
inc
fwait
test
push
sbb
sub
push
mov
jle
or
repnz
inc
push
sbb
aas
jl
xchg
push
stos
or
mov
adc
or
enter
push
push
push
mulb
lcall
sbb
mov
call
dec
sbbl
test
loop
jle
insl
lock
add
mov
out
loop
nop
xlat
enter
sti
sub
push
pop
jmp
in
rcll
in
mov
adc
shll
notb
iret
fisttps
xchg
or
or
mov
jnp
xor
mov
repz
mov
xor
jge
mov
pop
mov
lea
sub
and
xchg
xchg
mov
mov
mov
xchg
fdiv
movsb
xchg
rcl
or
enter
fisttpll
mov
mov
in
lods
int3
hlt
xchg
aam
jecxz
and
shrd
ja
orb
jl
rcll
dec
and
mov
mov
outsl
xchg
push
scas
loopne
or
inc
mov
rorb
xor
lret
cmp
adc
dec
dec
lret
mov
dec
jo
adc
dec
adcl
lock
push
ret
aas
pop
fcmovb
sbbb
mov
dec
mov
pop
fwait
jge
inc
add
lcall
cmp
mov
xor
std
jno
cmp
popf
std
imul
outsb
ljmp
or
push
fs
imul
push
mov
inc
push
dec
inc
fcompp
jo
int
xchg
outsl
fmull
jmp
inc
inc
xor
inc
xor
clc
sub
arpl
sbb
popa
mov
in
scas
add
in
dec
lcall
xchg
fistpll
stc
xchg
mov
fimull
sbb
je
data16
inc
or
sbb
lcall
cwtl
sub
pop
jg
push
pop
cld
xchg
xchg
push
fldl
lret
icebp
pop
jnp
stc
sbb
cli
pop
in
pop
mov
lahf
push
lock
mov
call
andl
sbb
xchg
lret
lock
inc
cmp
cmpsl
cmp
push
push
pop
adc
mov
inc
notb
test
pop
int3
pop
pop
xchg
out
cmp
jecxz
jno
loop
stc
xor
les
subb
pop
sbb
or
jg
loope
adc
mov
or
pop
pop
inc
push
mov
lods
test
call
adcb
jmp
or
rcrb
lock
scas
cwtl
dec
and
sbb
sbb
int
ljmp
in
cmpb
mov
add
sub
push
sbb
push
jno
cmp
fldenv
sbb
shlb
arpl
jge
xchg
sahf
mov
fs
lea
clc
rcr
or
std
cld
ror
int
loopne
pop
cmc
lods
dec
js
int
xor
cmp
inc
test
mov
punpckhdq
pop
mov
push
insl
push
cmp
addr16
popa
in
push
dec
ljmp
decb
sub
push
sahf
fdiv
push
xchg
lock
jge
addr16
int
jg
xor
cmc
sbb
jmp
sbb
pop
dec
fisttpl
sbb
int
out
fisubs
loope
sub
fwait
fs
int3
out
xchg
xchg
fldl
xchg
cmp
movsl
sbb
lock
and
iret
jb
insl
dec
lret
xor
push
push
push
pop
lock
cmp
pop
insb
pop
pushf
clc
cwtl
mov
push
ret
insb
test
imul
cwtl
cmp
pushf
push
mov
cmp
sub
sub
sub
xor
ja
mov
lds
pop
ds
dec
xchg
out
repz
scas
push
fcomip
shlb
xchg
fistpl
mov
xchg
divl
nop
lods
ds
sub
ljmp
movsb
loop
and
popf
stos
dec
xlat
adc
int3
or
push
mov
jl
cmp
jg
jns
aad
sbb
sub
int3
mov
dec
addl
sub
scas
fs
clc
rcrl
cs
popa
add
push
out
dec
or
jg
jp
ja
add
xor
jg
mov
cmp
and
mov
outsl
sbb
xchg
dec
inc
rorb
xchg
bound
jo
lret
cltd
lahf
mov
in
sbb
xor
les
xor
mov
ret
jbe
or
and
lret
fistpl
imul
sub
sub
fisttps
insl
sub
pop
sarl
inc
jle
xchg
xchg
push
idivl
ss
out
rdpmc
xchg
loope
loope
xor
mov
pop
test
push
rcl
or
scas
and
jbe
out
push
js
cwtl
push
dec
push
lret
lds
imul
sarb
popa
cmp
dec
mov
lods
ja
mov
xchg
test
jae
daa
sub
sbb
pushf
dec
xchg
and
adcl
dec
iret
sub
outsl
jnp
xor
andb
lea
push
jg
lea
fwait
cmpsl
scas
push
enter
mov
js
outsb
call
fstsw
jno
stc
mov
sar
shrl
dec
shr
lret
jecxz
push
rcl
jno
mov
es
push
pop
xchg
dec
xchg
pop
inc
scas
inc
inc
imul
xchg
enter
add
sbb
mov
shrb
ds
xor
cwtl
pop
adc
jg
inc
gs
flds
leave
jl
inc
imul
sbb
xchg
inc
sbb
inc
inc
or
and
or
and
push
sti
into
pop
bound
and
pop
dec
jne
loopne
xchg
stc
mov
pop
inc
mov
psrad
fiadds
dec
mov
mov
jne
push
mov
fwait
jne
mov
js
sbb
lret
sbb
lcall
mov
mov
nop
aas
or
ret
mov
pop
add
or
iret
cmp
and
add
push
rorb
adc
sbb
repz
cltd
and
fiaddl
data16
mov
add
xchg
jge
mov
inc
and
sbb
jl
pop
ja
pop
xchg
loope
stos
dec
outsb
push
incl
stos
lea
push
and
lcall
mov
adc
cmp
popl
jge
mov
dec
enter
mov
mov
mov
jno
inc
rclb
xchg
mov
ficoms
inc
or
mov
cmp
adc
or
xchg
xchg
or
imul
xchg
pop
jbe
or
mov
cmpsl
stc
xlat
push
lock
out
leave
js
cmp
jo
mov
sub
jge
int
jl
ljmp
pop
add
sbb
mov
jl
inc
push
shlb
dec
push
das
mov
dec
cmp
fs
popa
mov
cmp
notb
pop
mov
dec
cmp
das
mov
sub
fsts
ret
lea
mov
or
bound
sub
jp
fmuls
add
pop
or
loope
je
push
sbb
sbb
sub
arpl
ret
std
sti
das
pop
rolb
shrl
ficoms
mov
andl
jmp
or
lods
sbb
lock
ljmp
pop
movsl
mov
cmp
mov
mov
shl
push
shlb
push
cmp
repnz
ret
mov
cs
std
jns
inc
rcrb
add
dec
popl
in
jge
outsl
mov
jle
insl
adc
mov
add
xchg
pop
cmpsl
xchg
clc
stos
insl
test
mov
push
sub
pusha
jne
and
sbb
fisubrl
in
test
ljmp
xchg
subl
or
repz
insb
push
jg
cwtl
push
lcall
fdivr
lahf
js
mov
add
fadds
test
push
jns
adc
xor
push
push
mov
fnstenv
cwtl
mov
es
fldcw
mov
jns
cwtl
int
je
dec
push
andl
scas
add
ljmp
mov
icebp
cmc
or
outsl
mov
push
out
xor
push
cmp
enter
dec
or
xlat
popa
jnp
adc
push
cmpsb
aam
adc
out
sbb
lods
xorb
sub
push
and
push
movsb
add
xchg
adc
mov
pop
cltd
stos
push
mov
in
inc
loopne
faddl
pusha
push
jo
xchg
inc
cmp
rolb
pop
ja
leave
lock
mov
mov
scas
in
mov
inc
pop
mov
and
pusha
xor
xchg
add
sbb
inc
imul
aaa
stos
jno
mov
pop
jne
cmp
dec
sbb
dec
fnsave
cmp
fwait
in
cwtl
cmp
rcll
nop
cmp
shll
push
cmp
pushf
out
outsb
daa
mov
sub
lahf
and
dec
popa
inc
pusha
cmpsl
jg
dec
pop
dec
mov
inc
pop
mov
pop
jno
repnz
mov
push
scas
add
xor
cld
in
lods
shll
push
test
push
sbb
je
and
scas
mov
out
xlat
daa
insl
and
pop
pop
sub
jnp
aam
leave
testb
outsl
lea
outsb
pop
adc
dec
int3
das
mov
adc
sbb
mov
and
stc
jo
in
fldenv
lret
inc
cmc
add
mov
or
sub
mov
test
lods
clc
test
push
sahf
stc
sti
int3
mov
lea
cmpsl
mov
nop
ret
outsb
sub
push
xchg
sbb
cmp
push
sbb
out
rolb
jge
pop
jo
push
outsl
shrl
mov
shlb
insb
xor
sbb
add
ljmp
pop
dec
aaa
lcall
pusha
lods
adc
xor
popf
jecxz
xchg
out
mov
push
shrl
push
push
das
ret
jns
sub
jmp
shrb
ja
lods
aad
jno
stos
cmp
dec
data16
cld
mov
jbe
and
lret
mov
fnstenv
fs
andl
add
mov
mov
dec
sub
pop
cmp
inc
hlt
cltd
into
fdivs
cmpsb
xchg
mov
fwait
addl
mov
jno
rolb
sub
or
jno
ds
mov
xor
ja
mov
popf
fadds
stos
sti
lcall
mov
in
xor
adc
jae
push
aaa
xchg
dec
loopne
roll
jbe
pop
jle
shll
test
mov
push
pusha
imul
imul
call
filds
jecxz
xchg
mov
test
aas
dec
mov
fdivl
xor
in
jae
sbb
fs
fwait
jle
or
inc
cmpsb
fcompl
jp
jmp
aad
cli
lds
imul
add
jns
testb
imul
pop
or
dec
lea
nop
dec
pop
imul
loop
or
add
jmp
dec
mov
add
outsb
inc
mov
sub
aaa
add
cmp
xchg
mov
sub
add
jmp
leave
aas
nop
out
pop
jle
xchg
dec
cld
and
sub
int
test
adc
adc
sarl
filds
mov
pop
loop
cwtl
or
sbbb
pop
dec
xchg
popa
mov
outsb
mov
or
shll
adc
xlat
xchg
int3
rorb
cltd
outsl
fnstsw
mov
adc
subb
shl
sub
jmp
xchg
inc
sub
les
shl
imul
cmp
jno
inc
fstpl
shlb
pop
bound
lds
inc
cltd
xlat
push
adc
cltd
sub
inc
adc
mov
pop
dec
enter
mov
not
lret
push
push
pop
jnp
mov
xlat
pop
adc
xchg
add
xchg
frstor
mov
pop
sarl
test
push
xchg
mov
test
push
int
dec
sub
dec
add
shlb
dec
push
mov
and
mov
out
jb
repz
jle
push
add
das
std
adc
in
shlb
cld
in
adc
rolb
jne
mov
pop
adc
daa
push
mov
subl
and
jmp
adc
shlb
xor
stos
testb
rcll
data16
sar
jae
pop
xchg
pop
sbb
dec
iret
notb
pop
mov
loopne
inc
ja
bnd
je
lods
sahf
or
je
mov
data16
jb
add
or
int
pop
jmp
xor
ret
incl
push
ret
pop
inc
je
jg
jae
push
loopne
mov
ret
into
rcrb
adc
jge
mov
dec
mov
add
lcall
adc
adc
in
call
add
jmp
arpl
mov
test
jb
add
sbb
repz
pop
lods
gs
mov
sub
push
in
jb
scas
imul
and
push
xchg
cmpsl
dec
mov
nop
push
popa
push
jg
add
mov
mov
or
mov
and
mov
sbb
movsl
fcmovnbe
or
push
cmpl
shrb
mov
rol
inc
or
sti
pop
sbb
test
push
fdivrl
mov
push
and
adc
and
or
mov
inc
scas
push
jg
xor
jp
jbe
push
outsl
in
clc
testb
pop
bound
dec
lock
loopne
std
inc
sbb
rclb
sbb
sahf
sti
dec
mov
dec
pop
jo
pop
sahf
lcall
mov
inc
xchg
lea
xchg
or
shlb
je
cmp
push
sti
lret
stc
jg
mov
outsb
fwait
insb
push
popa
cmpsb
lock
pusha
scas
mov
jb
and
sar
shlb
mov
dec
sbb
test
sbb
adc
cmc
cmpb
xor
xlat
hlt
out
outsb
outsb
stos
mov
roll
push
dec
add
in
mov
jle
dec
mov
in
popaw
je
push
leave
paddusw
lods
sub
lahf
lea
into
pop
js
jns
mov
stos
adc
push
fbld
orb
mov
xor
pop
add
fiadds
icebp
rorb
lods
mov
xchg
jmp
clc
add
movsl
xchg
outsb
aas
pop
clc
aam
aas
push
mov
aas
push
imull
fldl
xor
rcr
nop
xor
xchg
sub
adc
outsb
pop
dec
jl
sub
and
ja
ds
sbb
pop
xchg
push
mov
sbb
test
sbbb
ret
push
scas
add
mov
cs
dec
push
in
lahf
test
jp
mov
xchg
sbb
sub
aam
add
rorb
xor
mov
outsl
fidivrl
std
mov
sbb
mov
inc
pop
jge
sub
mov
sbb
mov
cmc
fwait
popa
xor
pop
sub
std
jp
ret
fstps
testl
push
pop
mov
test
mov
pop
add
int
out
xchg
cmp
and
jecxz
sahf
data16
lret
inc
popl
dec
pop
data16
xchg
cmp
test
pop
insl
jbe
mov
in
cmpsb
les
out
mov
outsb
out
and
rcll
cld
cmp
out
adc
push
push
jns
jno,pt
mov
and
mov
sahf
cmp
cli
insl
cmpsl
mov
sti
movsl
in
push
out
jecxz
int
repz
add
cmp
xchg
sbb
test
pop
enter
imul
cmc
out
jmp
lahf
pop
dec
pop
int3
xchg
testl
sbb
bound
test
gs
lea
pushf
dec
sub
inc
cmpsl
repz
ret
and
pop
mov
pop
jecxz
fs
and
clc
ljmp
jns
and
pop
jl
cmpsb
jl
sub
cmc
adc
jae
sbb
sbb
xchg
shlb
dec
adc
rolb
or
mov
je
and
add
popf
bndstx
dec
mov
mov
jae
or
popf
mov
push
xchg
stos
mov
testl
enter
int3
lds
cmpsl
pop
out
test
xor
mov
dec
sub
jne
and
jne
xchg
mov
sbb
mov
orl
js
es
ja
dec
push
pop
sarb
xchg
nop
push
push
mov
sahf
fldl
mov
adc
stos
sbb
test
cmp
adc
lahf
cld
cmpsl
mov
or
sub
sbb
sti
cwtl
imul
test
mov
push
fnstenv
stos
xchg
stos
andb
and
pusha
and
inc
mov
in
test
jno
shrb
ret
jne
xor
push
pop
xor
or
orl
inc
mov
sub
inc
push
xchg
shr
sub
call
push
mov
dec
scas
call
cmp
cltd
icebp
sti
test
fstps
loope
insl
add
insl
fisubl
mov
iret
ds
mov
add
movsb
inc
adc
mov
lods
mov
mov
js
mov
adc
stos
add
nop
dec
loopne
and
inc
mov
js
lea
mov
push
push
mov
dec
inc
or
and
lds
cmp
fisubrl
jo
outsl
repnz
add
cmpsl
dec
push
dec
jecxz
sub
pop
lret
or
mov
mov
shrl
pop
ljmp
inc
lret
loope
out
and
jmp
jbe
jmp
xor
cmp
movsb
std
jmp
cmp
pop
cltd
stos
sbb
cmp
movsl
or
adc
in
arpl
jge
dec
mov
lock
into
jb
mov
loopne
pop
gs
and
lahf
addr16
ret
pusha
rcl
or
sub
jo
pop
xor
movsl
sbb
sub
movsl
nop
pusha
sbb
adc
rolb
rclb
push
xchg
push
or
xor
and
mov
daa
imul
addr16
fdivrs
push
or
sub
jnp
lods
mov
mov
nop
sub
jbe
daa
mov
dec
les
stos
inc
bound
inc
or
or
inc
sub
xlat
cmp
fimuls
scas
je
mov
std
jmp
lods
mov
inc
mov
ja
cmpxchg
hlt
dec
imul
or
add
or
hlt
cli
leave
add
dec
fdivs
fistl
out
dec
insb
pushf
add
call
clc
pop
dec
mov
jp
das
fdivl
aas
fiadds
rol
mov
push
inc
cwtl
outsb
popa
mov
cmp
cmp
pop
and
in
adcb
xchg
inc
scas
mov
push
loope
cmp
je
add
iret
js
roll
pusha
sbb
imul
lock
sbb
mov
stos
insl
std
dec
sbb
cmp
adc
cmpsb
or
dec
sub
add
jge
fwait
sbb
mov
mov
fimuls
pushw
icebp
in
sub
in
adc
enter
xchg
sub
adcl
sahf
push
movsl
sbb
add
out
sahf
cmp
sti
pop
lock
jae
push
cs
scas
shll
jbe
add
cmpl
daa
and
sti
data16
in
cmp
cld
lahf
stos
lcall
fdivrl
xchg
jne
xor
lret
jb
or
imul
cmp
out
std
nop
mov
jae
and
aam
push
or
repnz
fnstsw
sahf
ja
add
push
cmp
aas
add
pop
in
loopne
icebp
sbb
adc
in
insl
jne
jns
cmpl
xchg
and
std
lods
sti
test
in
push
mov
movaps
cmp
jg
xchg
mov
nop
adc
orl
mov
outsl
aas
ds
sub
movsl
fucomp
aam
push
fucomp
dec
inc
push
lret
xor
mov
jg
xchg
jecxz
je
mov
jle
add
mov
lods
lea
lods
dec
mov
mov
cmp
push
mov
shlb
cmp
je
inc
inc
shlb
sbbb
inc
push
jb
cltd
jecxz
xor
popf
mov
add
adc
jne
test
and
push
cltd
fs
leave
sahf
cmp
bound
cli
out
out
add
adc
rol
xor
test
jg
daa
xchg
pop
stc
mov
pusha
jge
inc
test
cmpl
push
lcall
push
push
neg
xor
ja
mov
xchg
mov
stos
movsb
aam
fwait
pmaxub
xlat
in
push
es
push
aad
mov
jno
leave
or
flds
jmp
adc
sub
outsl
jecxz
pop
cmp
cmp
push
jmp
outsb
insl
push
cmpsl
gs
pop
pusha
or
push
and
fs
lret
sbb
mov
mov
sub
mov
pop
xor
push
pop
xor
inc
leave
orb
pop
cltd
outsl
mov
iret
sub
ja
xchg
adc
pop
movsl
dec
mov
add
aas
daa
fcmovnb
dec
pushf
test
xchg
dec
insb
jb
inc
and
and
test
pop
stos
lds
iret
movsl
mov
scas
cmc
add
sub
lcall
mov
insl
jo
hlt
notb
xor
fwait
adc
in
mov
int3
ljmp
add
push
add
push
fmull
idiv
popf
sub
add
rdpmc
bound
mov
test
xor
add
xor
lret
call
cmp
push
imul
pop
aam
pusha
inc
adc
dec
je
in
shrl
aas
stos
sub
enter
jge
lret
int3
data16
shl
mov
aas
lods
ljmp
gs
mov
fs
aad
lock
std
push
mov
sbb
shlb
push
push
xchg
add
mov
mov
mov
lret
fstpt
mov
lds
es
dec
xchg
jmp
dec
inc
lret
repz
mov
jl
test
mov
and
sbb
lock
pop
inc
xchg
xlat
test
imul
mov
aas
fiadds
push
jnp
lock
mov
dec
mov
data16
xchg
pmulhuw
mov
out
arpl
pushf
or
call
out
ffreep
test
fsts
ja
inc
mov
sbb
jnp
cmpsl
inc
loop
inc
sbb
mov
sbb
sbb
test
dec
arpl
dec
lock
cld
popf
pop
sbb
and
cli
dec
lods
add
and
xor
dec
pop
sbb
xchg
mov
test
sub
cli
out
mov
enter
test
addr16
imul
adc
xchg
out
push
add
dec
xchg
je
or
lahf
cmpl
popa
adc
xlat
adc
xor
push
popf
cmc
pop
bound
fcoml
add
popa
out
jmp
fisubrl
aas
xor
sbb
fwait
inc
xor
mov
cld
push
stos
dec
pop
sbb
push
sar
aaa
enter
addr16
xor
pushf
fwait
xchg
jnp
pop
mov
mov
ja
jns
lcall
jmp
in
cld
jmp
mov
dec
add
push
sbb
lcall
insl
sub
dec
popa
movsl
testb
mov
or
lock
lret
jl
pop
mov
mov
inc
fistl
ror
fstp
inc
push
es
sarl
xor
inc
fs
shll
xor
xchg
addl
add
pop
jle
popf
out
cmp
sub
ret
jge
lods
xchg
fisubl
outsb
xor
jl
in
xor
sub
mov
mov
out
inc
xor
test
outsb
subb
shl
push
mov
fidivrl
hlt
push
sbb
dec
loop
and
xchg
adc
xchg
int
dec
lret
lret
add
pop
mov
mov
ja
or
pop
movsb
jmp
ja
fiadds
jg
mov
jo
icebp
cs
mov
sub
xchg
mov
inc
cltd
push
mov
mov
lret
jg
arpl
or
cmpb
add
xor
pop
cmp
push
xor
pop
ja
dec
inc
into
adc
adc
mov
aam
loopne
movsb
cmp
subl
js
dec
xchg
ret
orb
mov
cmp
aam
sub
loope
or
mov
mov
xchg
leave
cmp
das
push
or
add
outsb
stos
inc
dec
cs
jb
out
lahf
pop
insl
into
in
and
aas
sub
push
push
cmpsb
test
sub
loopne
dec
jp
fnstenv
bnd
xor
pop
jmp
outsb
mov
rclb
sti
or
sbb
dec
in
pop
adc
pop
roll
rorl
addr16
push
int
add
cli
jne
mov
mov
aas
stos
popa
inc
pop
das
mov
imul
data16
pushf
jno
push
pop
adc
arpl
and
sbb
inc
cmp
xchg
cmp
aad
xor
arpl
sub
test
imul
cmp
leave
adc
and
dec
pop
pop
lret
popf
inc
lods
mov
mov
pop
adc
and
hlt
ljmp
pop
pop
bound
xchg
jecxz
gs
shr
aas
cli
push
call
push
std
orb
mov
sub
imul
or
and
test
sarb
mov
jge
push
ficompl
or
lret
sub
sahf
dec
xchg
cwtl
shll
rolb
sbb
jo
inc
rolb
pop
les
test
jp
add
cltd
xchg
mov
xchg
icebp
or
aaa
addb
adc
out
adcl
mov
push
fwait
out
roll
dec
into
lret
jecxz
sbb
outsl
or
daa
out
sbb
mov
mov
mov
xor
cmpsl
sbb
push
push
or
xor
repnz
inc
insb
sub
pop
in
adc
adc
mov
mov
movswl
sub
scas
stos
test
pop
les
and
mov
stos
cmp
lahf
jbe
pop
sub
adc
call
cmpsl
jo
mov
fiadds
xchg
movsl
scas
pop
add
cmp
cmp
xchg
xchg
mov
stos
sub
or
je
xlat
push
imul
sub
outsb
sbb
roll
aaa
jo
insl
mov
xchg
in
mov
pop
mov
rolb
lcall
xchg
addr16
daa
sbb
mov
ss
clc
push
jno
js
lret
jl
add
fs
and
mov
lret
xlat
mov
orb
jge
movsl
test
cs
pop
mov
call
xchg
std
daa
negb
sti
rcrb
xchg
xchg
sub
ds
mov
out
mov
mov
mov
xor
jecxz
lea
jno
fmull
fdivs
lods
inc
adc
mov
rclb
add
pop
mov
adc
xchg
mov
mov
cmp
and
xchg
addr16
cltd
ss
imul
and
in
arpl
lret
mov
jle
dec
ret
jbe
pusha
pop
jg
xchg
aad
mov
push
xchg
pop
nop
and
sub
xchg
add
ljmp
jl
movsl
and
and
neg
aaa
xor
jge
xchg
xor
mov
or
out
addr16
pop
fldenv
mov
scas
out
cmp
xchg
aas
push
fwait
jle
js
js
mov
aam
stc
insl
pop
es
xchg
or
push
pop
cmp
push
push
in
cmpsl
ret
add
mov
sub
pop
sbb
pop
sub
add
int
loopne
arpl
rcll
out
fwait
push
adc
adc
leave
enter
not
in
loop
mov
or
inc
jecxz
jo
test
popf
cmp
enter
pop
incl
jbe
and
pop
inc
test
sub
lods
cmp
addr16
sbb
outsl
sub
nop
lods
and
adc
mov
push
jge
sbb
push
mov
das
jp
fistpll
inc
cmpsl
rorl
jmp
mov
pushf
sti
push
jl
hlt
jge
mov
dec
mov
dec
data16
or
mov
jns
push
sub
and
cmp
adc
pop
mov
add
jecxz
cmc
xchg
dec
jns
push
add
jns
dec
xchg
dec
push
xchg
xchg
push
popa
mov
inc
jbe
pushf
insl
stos
outsl
loopne
aam
mov
and
cmp
push
xchg
incb
jns
or
subl
pop
insb
hlt
mov
das
jg
fimull
nop
or
cmp
and
faddl
aas
movlhps
insl
lea
xchg
arpl
push
push
sbb
int
ljmp
sbb
data16
movsl
xor
inc
lret
xchg
loop
repnz
in
iret
mov
popl
rolb
jae
out
les
push
hlt
stos
mov
cli
pop
pop
pop
pop
adcl
ss
pop
jbe
mov
call
pop
xchg
xchg
fistpll
mov
movsb
ja
mov
fimuls
push
sub
popa
xchg
xor
xchg
fisttpll
push
test
fs
loope
js
mov
in
mov
pusha
xchg
xchg
loop
outsl
shl
bound
xlat
fbstp
ljmp
inc
pusha
jmp
mov
dec
popl
fwait
shlb
or
or
scas
popa
mov
push
mov
cmpsl
push
popf
fcoms
jl
in
shl
xchg
jae
sbb
push
mov
push
sbb
test
push
psubq
mov
adc
daa
loop
mov
dec
xchg
xor
mov
or
mov
mov
pcmpeqd
pop
dec
aad
mov
xchg
or
dec
push
jge
push
lret
fstps
and
mov
sub
insl
pop
mov
push
jo
jmp
div
push
fs
ljmp
and
mov
insl
and
dec
rcll
cltd
lea
sub
sub
mov
shll
adc
sbbl
movsb
pushf
push
hlt
xchg
lods
mov
sbb
cmp
faddp
aaa
fcomps
mov
je
out
and
pop
mov
addb
xorb
pop
jecxz
mov
cmp
push
outsl
pop
xchg
cmpsb
mov
sahf
sti
or
add
mov
in
xor
in
mov
xchg
insl
pusha
je
push
mov
lss
xchg
pop
cmpsl
idivl
popf
aaa
xor
mov
cmp
mov
mov
ret
loop
mov
or
pop
dec
jl
movsb
sbb
imul
pop
lds
ret
xor
inc
xor
ljmp
outsb
sahf
dec
adc
dec
adcl
cmp
cltd
sbb
mov
out
inc
iret
jae
push
roll
adcb
push
dec
loopne
in
jp
cld
mov
and
cmp
lods
movsb
ljmp
in
in
mov
sub
call
cmp
pop
cltd
push
jmp
repz
out
mov
icebp
inc
je
and
lods
jns
sub
andl
mov
das
popa
jns
int
je
mov
les
push
fcomi
push
mov
scas
mov
mov
xor
mov
testb
and
test
outsl
stos
adc
lcall
fistpll
xchg
fidivrs
sbb
popa
push
stc
das
push
pop
loopne
and
stc
call
lahf
cmp
ficompl
ret
pop
jne
or
push
lods
mov
mov
cwtl
push
div
sub
cmp
lahf
insl
pop
pop
lock
pop
cmc
cmp
int
or
sar
push
enter
fwait
in
loopw
mov
leave
leave
out
pop
pop
or
jle
pusha
sbb
xchg
mov
dec
pop
and
cwtl
sub
inc
int3
mov
mov
mov
add
lds
dec
mov
jne
mov
testb
loop
dec
dec
jecxz
cmp
xor
call
xchg
lahf
popa
xor
jecxz
cli
les
stc
fnsave
cmp
aam
loopne
or
mov
ret
and
mov
jo
mov
js
aaa
mov
push
mov
inc
lcall
and
fs
xchg
leave
scas
out
test
dec
add
inc
mov
daa
add
out
fs
mov
cli
and
pop
pop
push
xchg
or
xlat
pop
mov
addb
les
sbb
sub
cmp
enter
sbb
test
out
test
jg
lock
test
into
pop
mov
ret
mov
sahf
rclb
mov
mov
sbb
xchg
loopne
inc
pop
jb
and
adc
and
das
call
decb
fnsave
bound
adc
out
rorb
jb
xchg
adc
mov
mov
in
xor
lret
movsb
movsl
into
cltd
frstor
add
stc
shlb
int3
int
mov
xchg
mov
dec
mov
cmpsb
sbb
xor
rcr
outsb
pop
ja
cmpsb
push
xchg
cmp
jb
mov
jmp
stc
js
mov
xchg
sub
into
mov
iret
dec
aad
aad
data16
ffreep
inc
call
pop
add
out
pop
mov
sub
leave
sbb
ss
mov
dec
dec
sbb
fisubrl
jnp
mov
pop
fs
sbb
sti
sbb
push
aaa
cmp
inc
push
jl
hlt
push
mov
cli
add
push
pop
stos
fs
dec
push
sti
mov
ljmp
orl
push
popa
xchg
pop
daa
popa
jge
mov
cltd
mov
outsl
ds
adc
js
jmp
leave
add
ficompl
mov
out
sub
sahf
push
push
fnstsw
in
mov
inc
mov
mov
je
push
mov
dec
push
sub
jle
loopnew
shll
mov
sbb
movsl
mov
sub
mov
mov
mov
mov
sti
sbb
popa
incl
push
jecxz
push
add
or
fwait
cmp
pop
xchg
cmpsl
jmp
stos
fwait
and
stos
xor
or
inc
fnstsw
push
pushl
fsubrl
adc
aam
mov
push
and
pop
pushf
es
mov
pop
insl
xor
into
insb
sub
in
cmp
mov
pop
fcoml
test
aaa
clc
lret
out
pop
xchg
xchg
push
jge
sbb
dec
pop
push
and
mov
aas
jo
test
lods
imul
mov
adc
out
out
mov
push
cmp
js
or
mov
shr
push
mov
fdivrl
fisubrl
insb
cmc
mov
hlt
mov
lret
dec
push
das
push
loopne
std
dec
xor
stc
mov
xchg
das
stos
push
pop
fistpll
jb
into
mov
mov
lea
mov
dec
arpl
test
test
mov
rorb
daa
mov
dec
stc
fsubrs
loopne
shrb
fsubl
mov
or
lods
or
xorl
push
sarl
jg
cmp
in
xchg
sub
and
out
xchg
insl
pusha
dec
or
lret
mov
mov
bound
sbb
es
xchg
aad
rorb
movsb
test
stos
xchg
push
jmp
sub
jl
cs
xor
and
xchg
pusha
inc
stc
fs
stc
mov
sub
outsl
test
popa
outsl
mov
jne
lds
mov
mov
pop
cmc
xchg
scas
mov
in
push
fisubl
fsubl
addl
sti
adc
mov
or
cmp
psraw
and
out
and
loopne
mov
imul
sbb
popf
iret
movsl
out
adc
aas
into
push
imul
mov
xchg
loopne
sbb
jmp
or
and
stos
xor
insl
insl
dec
insb
loopne
inc
push
cmp
mov
stos
mov
lahf
movsb
ss
loopne
mov
fwait
mov
je
subb
sbb
jo
jb
rcrl
lods
enter
iret
es
fldenv
push
pop
pop
lret
mov
add
mov
or
fists
and
xchg
cld
adc
mov
sub
sbb
bound
cwtl
jno
or
int
pop
inc
add
mov
insl
mov
ret
jg
scas
hlt
mov
inc
mov
inc
loopne
add
cmp
int3
xchg
rorb
jae
push
lcall
pop
enter
aam
sahf
push
bound
xchg
adc
mov
test
xorb
std
lahf
push
iret
lds
loope
repz
adc
sbb
cld
mov
loop
jno
shlb
adc
add
mov
or
inc
push
add
sbb
jae
ljmp
push
cmpsb
and
js
jae
movsl
adc
jle
mov
sub
sbb
rcr
out
in
push
cmp
mov
adc
cwtl
cltd
sbb
std
lods
cld
clc
pushf
sbb
or
mov
jg
pop
dec
jae
cmp
jge
xchg
or
int
sti
ljmp
push
lods
push
and
inc
pop
jl
adc
scas
fwait
xor
es
stc
imulb
add
dec
adc
xor
mov
clc
loope
loopne
dec
aam
fistl
int
mov
pop
inc
aaa
mov
stos
and
les
in
pop
inc
sbb
cwtl
mov
mov
je
mov
pop
push
pop
ret
sub
pusha
and
gs
jge
shl
dec
cmpsb
stos
leave
push
ja
pop
xor
lcall
loop
jmp
sub
pop
cmc
shlb
lcall
scas
adc
cli
icebp
pop
mov
jo
popa
in
add
lahf
shr
xor
jb
int
xchg
mov
xchg
xor
jl
loop
aad
aad
rep
mov
pop
pop
ret
test
xor
jb
dec
rcrb
mov
jbe
or
or
pop
hlt
xchg
loopne
lahf
jp
leave
pop
cmp
xchg
or
icebp
sbb
sub
arpl
and
not
in
jg
aaa
lods
mov
mov
or
loope
and
stc
push
inc
fs
outsb
mov
sbb
or
in
sbb
orb
adc
outsl
pop
adcl
outsb
jne
leave
cmp
jp
sbb
cwtl
or
sub
and
test
sbb
rclb
jne
adc
sub
dec
in
push
push
aas
or
inc
add
xor
mov
insb
aas
sarl
inc
shlb
lea
cmp
xor
lods
push
dec
cld
or
outsl
outsb
pop
lret
jmp
push
imul
ds
sub
pusha
or
mov
or
scas
outsb
outsl
imul
pop
jecxz
decl
pop
aas
xor
jbe
push
pop
cmp
pop
jns
jl
and
test
lock
fnsave
cmpsl
out
xor
movsl
inc
pop
imul
cwtl
dec
aam
popa
jp
cmpsb
lds
stos
js
cmc
mov
int
addr16
push
sub
int3
pop
sub
dec
call
lret
xor
push
mov
decl
lea
xor
in
data16
sarb
lea
jno
push
scas
and
popf
or
cmpsb
pop
imul
js
sbb
push
cli
pop
rolb
pusha
sahf
mov
mov
rep
and
js
add
outsb
in
pushf
or
stos
test
int
mov
outsl
push
dec
gs
xchg
in
enter
std
cmp
add
shrl
icebp
sti
cmp
cmpsb
and
out
arpl
push
xor
gs
inc
fadds
fistl
jle
add
xor
dec
outsb
or
sub
stos
inc
xchg
mov
jns
leave
sub
adc
insl
das
and
sub
push
xor
xor
push
add
sbbl
or
aad
lahf
xchg
leave
dec
push
or
push
and
testb
insl
sub
push
pop
loope
pop
insb
pop
pop
aam
pop
xlat
shll
outsl
sub
xchg
adc
jne
pop
out
bound
cwtl
repz
fistpl
lea
orl
gs
mov
mov
fcomps
ret
arpl
sub
into
pop
scas
add
and
data16
sub
fcomp
sub
sub
leave
leave
sbb
jmp
das
dec
xchg
sbb
lret
loopne
das
fdivl
shll
cli
push
into
sub
lock
and
push
sub
daa
xor
es
out
popf
xor
ljmp
pop
aas
popf
lods
push
cmpsl
rorb
js
mov
insb
addb
divb
mov
add
mov
lret
mov
negb
aam
jp
dec
pop
xchg
pop
test
push
push
orps
add
mov
lcall
scas
cmpsl
push
xchg
jmp
out
outsb
or
fdivrs
pop
outsb
into
ret
lret
ljmp
mov
pop
sub
adc
cltd
dec
lret
repz
sbb
jae
mov
sub
pushf
std
push
sbb
xchg
mov
dec
push
shrl
xor
xchg
cld
icebp
les
sarb
divb
sahf
xchg
loopne
daa
jno
repnz
ret
xchg
mov
jmp
pop
test
fimuls
mov
jle
adc
adc
dec
enter
out
push
aad
jns
out
mov
mov
sbb
mov
dec
push
push
or
stos
ja
cmp
push
leave
mov
sub
into
dec
lods
movl
dec
stos
ret
mov
lret
adc
adc
adc
aad
test
out
popa
out
pop
mov
aad
push
dec
loop
pusha
xor
dec
mov
and
mov
push
sub
inc
pop
ud0
sub
and
icebp
or
dec
lock
je
jp
out
ror
icebp
scas
test
cmp
dec
push
ror
js
add
das
popa
stos
push
stos
add
cmp
mov
ljmp
out
lret
sbbb
adc
push
in
sub
mov
jno
jecxz
fs
subb
push
lret
dec
test
pop
mov
mov
int3
sub
mov
shlb
lock
xor
in
pop
ja
xor
imul
inc
int
mov
insl
push
aas
mov
cltd
adc
shrb
pushf
push
inc
jp
stos
mov
or
sub
scas
pop
sar
clc
xchg
or
adc
pop
mov
in
lods
dec
leave
jnp
shl
adc
cs
cli
ds
adc
jecxz
and
arpl
sub
mov
or
push
mov
scas
inc
sbb
std
fldt
push
movsl
push
std
dec
cmp
int3
or
stc
orl
mov
cs
jl
clc
ficomps
out
push
or
push
mov
cld
push
out
addr16
sti
add
in
fs
adc
mov
fidivl
xchg
mov
mov
leave
add
imul
mov
inc
int
enter
movsl
push
inc
adc
pop
cwtl
sbb
stos
test
fdivrl
xor
inc
stos
popf
adc
inc
aad
mov
sbb
mov
push
test
fimull
lahf
popa
pop
pop
testb
xor
push
lods
xchg
iret
jns
cmpsl
scas
lea
cli
sti
fildl
fucom
out
repz
icebp
nop
sub
addr16
jg
add
mov
cmp
sbb
ljmp
hlt
loope
pushl
adc
mov
push
pusha
or
inc
ss
lahf
mov
cmp
ljmp
jmp
push
sub
mov
cmc
mov
push
sti
outsl
lods
aam
pop
mov
loop
fs
pop
dec
sub
mov
lock
loope
loop
mov
xchg
or
jnp
dec
mov
or
jns
shll
pop
mov
inc
xchg
pop
lods
popa
sbb
not
dec
loope
pop
sbb
push
inc
adc
leave
and
pushf
popa
xor
mov
mov
lret
xchg
inc
xor
rclb
add
into
push
pushf
pop
mov
xchg
jl
push
das
mov
cwtl
lret
repz
aam
sbb
mov
sbb
push
adc
lahf
push
test
dec
add
xchg
add
mov
sbb
enter
fdiv
jb
mov
mov
cmp
sub
xor
adc
xor
mov
in
out
jne
lahf
lcall
imul
in
xor
or
cmp
jns
jns
xor
dec
xchg
out
jl
push
pop
sub
test
mov
push
movsl
and
cmpsb
cmp
out
into
adc
inc
fidivl
pop
loop
cld
int
jns
fdivs
pushf
data16
pushf
mov
popf
xchg
mov
in
adc
test
test
into
mov
rcrl
mov
cwtl
testb
ja
sub
mov
pushf
and
dec
adc
lods
mov
fnsave
stos
xor
mov
sar
imul
jne
movsb
gs
pop
mov
enter
mov
pop
sbb
sbb
mov
push
in
je
inc
test
add
jl
scas
mov
mov
cli
dec
stos
cmp
xchg
insb
iret
cmpsb
or
icebp
xchg
jl
fisttpl
and
pop
std
lods
push
test
mov
sahf
lcall
popa
mov
or
js
jecxz
mov
in
imul
pushf
andl
loope
aad
aaa
adc
mov
cmp
dec
lea
int
loop
mov
imul
pop
ficompl
inc
cmp
inc
and
or
cmc
fwait
int
sbbl
arpl
dec
push
push
inc
mov
xchg
pop
adc
in
inc
ret
into
mov
rcrl
outsl
mov
push
loop
ds
inc
aad
sbb
mov
push
dec
and
es
xor
das
xlat
mov
dec
fdivrs
jge
sub
push
lods
cmpb
sti
movsl
xchg
xchg
lea
rorl
popa
sub
xor
push
arpl
sti
push
sbb
sti
push
movsb
fwait
pushf
loop
add
and
insb
cmp
inc
mov
pcmpgtd
lds
sti
xchg
orl
cmp
inc
inc
jno
outsl
sub
pop
hlt
clc
movsl
adc
sbb
repz
imul
lret
out
std
nop
scas
pop
jge
das
inc
xchg
fidivl
mov
lret
stos
jae
add
sbb
jecxz
push
cmp
dec
outsb
sub
sbb
cmc
addr16
adc
jne
jmp
idivb
fimuls
in
pop
ds
stos
ret
std
lahf
cmp
js
pop
rcrl
les
pop
dec
shrb
add
int3
inc
push
or
mov
add
ret
inc
dec
gs
arpl
fchs
inc
push
and
divl
ds
cmc
aam
ret
stos
or
sub
scas
out
adc
popf
jnp
nop
jle
insb
les
stos
mov
sbb
scas
lock
cmpsl
or
out
jno
xchg
jo
mov
mov
adc
inc
jae
pushf
pop
je
or
xchg
mov
push
inc
xchg
arpl
sub
and
fwait
mov
divl
mov
sbb
dec
pop
popf
pop
sbb
repnz
inc
xchg
cmp
dec
sub
jmp
cmp
mov
sbb
or
sbb
xchg
lea
and
mov
sti
add
sbb
pop
xchg
in
fildll
sahf
mov
mov
in
insl
mov
inc
ja
mov
lods
sub
sbb
sub
enter
in
jae
sub
add
xlat
add
ljmp
add
push
pop
push
mov
repz
cli
sbb
pusha
stc
mov
or
leave
add
addr16
push
pop
cwtl
stc
pop
popa
inc
mov
scas
sbbb
add
dec
jmp
hlt
dec
and
mov
pop
inc
xor
adc
fwait
and
loope
jbe
or
cmpb
out
sbb
test
ret
mov
lea
and
lcall
push
repnz
cmp
xchg
lahf
mov
jp
and
cmovg
jb
cmpl
out
addl
idiv
push
jae
mov
or
or
adc
mov
lods
les
dec
pusha
testb
cltd
fdivp
imul
repz
xchg
xor
leave
clc
or
repnz
mov
mov
dec
cmp
mov
push
mov
inc
cli
inc
or
cmp
leave
mov
jecxz
xor
mov
cltd
fdivrl
int3
subl
sub
aam
jae
aad
mov
ret
outsb
mov
mov
enter
loopne
cmp
lret
mov
xchg
ljmp
sub
dec
sti
pop
cmp
aaa
mov
arpl
or
incl
xchg
mov
or
insl
scas
js
aad
cmc
les
push
clc
adc
jge
inc
inc
jle
insb
jle
sbb
inc
std
movsl
lea
pop
inc
fsts
repz
inc
in
mov
fnsave
inc
xchg
push
push
clc
icebp
pop
inc
mov
jns
movsb
mov
lock
and
pop
sub
les
adc
stc
in
jno
mov
outsl
or
jg
xor
shlb
lods
push
xor
repz
add
out
push
jle
add
in
and
shlb
xchg
test
xchg
mov
mov
lahf
loop
push
insb
xchg
jl
xor
pop
sbb
mov
movsl
mov
add
stc
mov
mov
adcl
xchg
mov
or
and
rolb
jo
into
pusha
cmpsl
loop
dec
add
daa
aam
mov
aad
fcompp
roll
repz
inc
outsb
sub
push
add
fcmovu
xchg
call
push
push
mov
or
fsubp
cli
fwait
and
outsb
jno
in
lds
imul
lock
fdivl
sub
jbe
inc
push
mov
clc
pushf
in
iret
xchg
imull
dec
xchg
movsb
pop
xchg
pop
push
push
rorl
popa
loop,pn
mov
cmp
icebp
sti
mov
jg
push
sarb
mov
into
subl
adc
xchg
sub
jae
scas
test
xchg
lods
sub
push
mov
mov
iret
dec
push
pop
xor
pop
es
dec
mov
loope
push
test
and
ljmp
das
stos
ret
dec
cmp
add
mov
sbb
test
nop
mov
mov
loope
addr16
roll
scas
loop
mov
push
int
enter
push
cltd
mov
xchg
mulb
sbb
hlt
test
cld
xchg
out
shll
neg
push
ret
sbb
jo
add
sub
mov
jg
cmc
or
and
and
out
aam
scas
jecxz
loopne
sbb
adc
dec
sbb
sbb
adc
jno
fldt
int3
push
xor
lock
pop
jae
mov
call
xchg
pop
ja
mov
in
pop
push
cmc
pop
xorl
cwtl
lret
cwtl
ss
js
std
fmul
call
mov
outsb
loopne
xchg
dec
pop
cltd
lds
dec
pop
inc
in
sti
dec
mov
mov
or
mov
or
lods
xor
xchg
fs
mov
jne
cli
jnp
mov
adc
pop
adc
mov
ficompl
inc
fdivrs
pop
lods
xchg
push
mov
jmp
lahf
outsb
inc
or
dec
stos
add
insl
sti
leave
inc
into
popl
xchg
dec
push
xchg
in
adc
std
shll
xchg
xor
arpl
push
in
lcall
sbb
sub
sub
sti
pop
bound
mov
fsubs
inc
loope
xchg
mov
movsl
fidivrl
push
xchg
iret
cmp
pop
cli
push
jle
loop
mov
mov
movl
xchg
pop
les
sub
inc
jg
popf
rcrl
push
or
ljmp
xchg
add
pop
andb
movsb
and
pop
add
inc
out
fcmovu
cmp
xlat
lcall
shl
stos
lret
sbb
xchg
shlb
mov
outsb
ljmp
xlat
xlat
out
sbb
jns
scas
ljmp
aaa
mov
int
aam
inc
test
test
pop
mov
repz
xor
mov
mov
mov
pop
and
adc
mov
outsl
adc
jnp
pop
clc
loope
mov
out
fwait
insl
jno
pop
fwait
pop
cmc
jbe
sahf
xorl
sbb
fsubrp
fistps
sub
in
adc
mov
into
cmc
lcall
or
stos
dec
fcmovbe
lcall
fmull
loopne
pop
stos
and
ss
out
cltd
in
sbb
lock
or
or
dec
out
or
dec
push
iret
jmp
ss
jb
pop
mov
inc
xlat
fsubrl
test
out
cld
sub
adc
popa
cli
xchg
sub
je
fwait
jo
xchg
xchg
jno
add
jbe
mov
mov
fidivrs
mov
out
aas
pop
lcall
fdivp
imul
fs
aad
test
or
mov
jo
test
aaa
jp
push
int3
mov
jns
sub
and
mov
jnp
jle
xchg
xor
dec
dec
or
popa
xchg
xor
mov
push
push
mov
or
pop
in
decb
pop
mov
rcrb
movsl
lods
cmpb
pop
add
cmp
pushf
pop
xor
push
mov
das
int3
sbb
mov
sbb
pop
push
loopne
test
mov
jmp
sbb
add
shrb
inc
shll
push
jecxz
sbb
cmp
cwtl
pop
iret
adcb
add
or
ss
orl
add
and
sarb
cli
rorb
push
jecxz
outsb
or
mov
inc
cltd
test
pushf
pop
and
lds
mov
xor
xor
sub
lock
fisubl
cwtl
pop
mov
into
sbb
cwtl
mov
pop
add
inc
fcmove
xchg
in
es
push
es
mov
sti
inc
fcoms
cmc
or
daa
int3
lret
stc
inc
mov
pop
insl
pop
je
xlat
push
push
stos
loop
and
dec
rorl
jmp
pop
cmp
xchg
cmp
adc
dec
xor
jecxz
gs
add
xchg
lods
sub
daa
and
xor
out
in
gs
std
mov
andl
cmp
notb
pop
sbb
insl
popl
pop
popl
cmp
adcb
out
cld
imul
inc
mov
jo
xchg
mov
fbstp
js
xchg
es
into
fsubr
cmp
dec
jbe
fs
xlat
push
dec
jge
lret
mov
js
mov
cmpsb
and
ret
test
sub
xchg
test
adc
jne
push
mov
push
pop
aam
and
cmp
fcoms
std
add
lods
cmp
inc
cmpsb
push
dec
test
fwait
push
loop
push
cwtl
dec
sub
loope
mov
cmc
jns
jmp
mov
xchg
or
cmpsl
icebp
fsubrs
sarl
jl
xor
lcall
sarl
mov
icebp
xor
dec
iret
mov
in
out
sub
test
inc
inc
add
mov
stc
xor
xchg
dec
mov
push
add
adc
mov
loop
cli
stc
push
push
dec
imul
jns
dec
lcall
pop
je
ficompl
push
jecxz
lret
std
mov
ror
adc
je
jp
or
or
fsubrp
pop
jge
and
aas
mov
imul
jnp
jo
xchg
push
sbb
testb
xor
sbb
fs
jmp
cmpsb
shll
jno
jp
dec
or
pop
push
std
fsubrs
test
mov
and
xchg
and
in
inc
xchg
fstl
jne
pop
inc
mov
leave
stc
add
xchg
pop
cltd
imul
xor
out
sub
jno
and
cmp
testb
jmp
sbbb
cmp
out
mov
cmpsl
es
outsb
cmp
xchg
shr
sar
addr16
nop
mov
cmpsb
and
nop
data16
ljmp
inc
sub
sbb
mov
ds
cmpsb
mov
loopne
leave
dec
out
popa
mov
cmc
out
lretw
fdivp
lock
adc
dec
test
kandw
jmp
mov
pmullw
lcall
lods
jp
xchg
xor
mov
cmp
es
arpl
xor
add
mov
insb
sti
inc
lret
shr
mov
sub
hlt
mov
mov
clc
push
dec
popa
pop
or
pop
movd
decl
xor
or
jg
rcl
cmp
mov
add
shlb
pop
mov
or
out
sbb
adc
jb
call
jecxz
je
aad
sbb
scas
out
and
jp
je
mov
scas
mov
aaa
hlt
imul
mov
add
dec
lods
repnz
and
jle
cmpsl
jle
in
sub
negl
aaa
lock
sbb
mov
negl
adc
push
mov
stc
out
and
sti
das
or
push
rcrl
mov
dec
push
std
std
sbb
fyl2x
mov
pop
cli
jno
insb
sub
xor
imul
jns
adc
in
dec
mov
push
xor
xchg
inc
test
cmovle
das
testl
outsl
sub
jl
inc
adc
jb
mov
mov
sub
mov
dec
mov
mov
loop
xchg
mov
mov
cld
push
lock
sbb
cmp
lds
or
or
fisubrl
mov
mov
inc
clc
mov
ja
out
dec
js
cmpsb
push
inc
repnz
movsb
pushf
cld
inc
cmpsb
nop
adc
mov
icebp
and
jne
sahf
xor
daa
dec
lret
les
xchg
gs
mov
cmp
lcall
xchg
jbe
sbb
jmp
jl
out
call
insb
mov
xor
pop
ja
push
test
xor
js
sahf
and
lea
test
cltd
ret
out
orb
aam
repnz
loope
js
iret
outsb
mov
test
add
jbe
stos
ret
mov
mov
jne
ljmp
mov
loope
jno
rcl
fs
scas
dec
inc
lods
ret
cmp
clc
xchg
adc
imull
jae
leave
fwait
jmp
mov
aas
aad
and
insb
repz
mov
jae
ss
mov
inc
repz
repz
cli
adc
pop
push
in
cli
add
xor
mov
jmp
xchg
in
das
push
and
fstps
inc
enter
popf
pop
mov
cli
or
cmc
leave
sbb
fwait
mov
leave
inc
mov
inc
jp
jb
pop
sbb
lods
pushf
push
ret
mov
or
cmpb
in
xor
inc
out
jno
sub
ss
and
jno
test
cli
push
ret
mov
xchg
jge
fnstenv
mov
inc
mov
and
xchg
xor
mov
stos
dec
mov
inc
lds
rolb
fimull
mov
popl
stos
xor
out
jle
stc
pop
adc
push
sub
cmp
mov
in
push
xor
dec
fcomps
das
std
pusha
outsl
sbb
sbb
in
cmp
daa
pop
in
and
scas
js
sbb
mov
fists
sub
lock
cmp
add
push
dec
rcl
leave
jmp
inc
mov
call
es
sahf
pop
xchg
mov
cmp
mov
dec
sbb
andb
dec
dec
mov
push
je
sahf
adc
out
xor
sub
jo
push
jb
dec
out
pop
xchg
decl
out
sbb
addr16
push
shl
scas
xchg
in
fistps
mov
jp
orl
bound
call
or
mov
pop
mov
adc
cmp
shlb
lret
shlb
orl
inc
mov
push
loop
dec
mov
stc
xchg
mov
fldenv
push
loopne
mov
adc
adc
pop
mov
cwtl
cmp
dec
cwtl
xchg
das
ffreep
dec
add
cmp
and
xchg
enter
scas
mov
dec
mov
aam
or
or
lock
mov
or
adc
repnz
gs
xor
in
inc
add
push
loop
fwait
xor
call
xchg
inc
xor
lcall
shl
insl
or
mov
mov
jns
lret
dec
cwtl
rcll
js
popa
rol
lods
adc
adc
mov
cwtl
in
aas
cmp
mov
pusha
insl
rcrl
les
lret
add
xor
xchg
mov
shl
test
push
in
sbb
movsb
imul
stos
stos
ljmp
loopne
fwait
mov
dec
sbb
loope
add
xor
xlat
mov
mov
pop
repnz
fninit
pop
icebp
mov
add
mov
mov
test
shlb
xor
inc
add
in
outsl
mov
adc
shlb
or
add
and
mov
testl
xor
imul
hlt
push
adc
lods
arpl
jl
cmpsb
push
xchg
pusha
inc
adc
push
popa
cwtl
jge
pop
into
or
xor
jb
lock
popf
mov
mov
inc
push
and
and
aad
dec
rol
cs
add
jge
mov
adc
sub
lock
or
inc
inc
jle
cmp
push
out
lods
shlb
xlat
std
cmp
pop
stos
jnp
insb
clc
shll
lock
int3
inc
mov
insb
stos
cmp
pushf
xchg
shrl
into
sahf
mov
sahf
inc
jae
ret
add
fucom
outsb
inc
imul
out
mov
push
mov
sarl
mov
or
pop
dec
mov
movl
push
dec
data16
push
arpl
pusha
inc
setne
jno
gs
es
sub
mov
mov
rcr
jns
xor
cmp
notb
fistl
dec
ffreep
andb
xchg
inc
dec
or
sub
pop
xchg
sbb
cmpsb
scas
cs
inc
jo
adc
push
jmp
lods
sub
pop
push
jl
loope
sbb
dec
scas
xor
pop
rclb
xor
dec
call
enter
mov
in
aas
outsl
roll
sub
add
mov
add
test
xchg
mov
imul
push
mov
xor
scas
lods
push
adc
lods
pop
addr16
data16
je
jbe
movsl
data16
or
and
mov
movl
test
xchg
scas
sub
out
pop
mov
lods
pop
mov
jle
sti
mov
push
lock
dec
sub
cs
add
push
lods
pop
and
pop
xchg
jnp,pt
outsb
das
out
xor
leave
mov
icebp
into
push
mov
fistpll
outsb
cmp
lahf
call
mov
cmp
jmp
inc
movsl
mov
test
jnp
mov
and
aam
xchg
inc
rcrb
loope
jb
fcmovu
cmp
je
dec
ja
mov
xchg
pop
xchg
add
ljmp
push
pop
or
arpl
xor
dec
xchg
movsl
aam
push
sbbb
xchg
inc
fldenv
es
rorl
in
xchg
sub
cmp
je
outsb
mov
inc
push
push
jno
or
lcall
aad
xchg
pop
push
das
fnstsw
shlb
inc
aaa
xchg
cmc
adc
ljmp
stos
xor
sbb
cmp
sbb
dec
or
xchg
adc
sub
dec
sti
inc
lods
jmp
xor
lock
ljmp
test
sub
mov
pushl
or
sahf
cld
xchg
aaa
hlt
sti
mov
xchg
test
fdivs
mov
adcl
xchg
test
int
rolb
mov
test
outsb
jmp
ret
popa
insb
xor
pushf
cld
xchg
cmp
adc
mov
jnp
inc
pop
inc
push
insl
adc
or
adc
jns
xchg
cs
adc
ret
push
je
xchg
push
sbb
scas
rcll
in
lds
bound
repz
xor
cmpsb
rol
andl
push
ret
xlat
and
sbb
pop
sub
pslld
pop
fcomi
add
call
pop
xchg
add
mov
inc
movsl
sub
mov
sbbl
mov
and
pop
les
jae
sar
out
nop
xchg
jbe
nop
mov
xchg
pushf
sbb
rolb
sub
mulb
add
ds
pop
in
out
sahf
shlb
cmpsb
lret
ja
fwait
sbb
jb
aaa
sub
dec
lods
cwtl
sub
cmc
mov
fadd
idiv
mov
insb
int3
lock
cli
test
and
cs
sub
sub
push
mov
icebp
insl
lock
pop
fimuls
insb
or
mov
ss
fcmove
pop
lahf
or
mov
jge
jge
fsts
mov
mov
enter
pop
mov
fisttpl
fcomip
pop
or
dec
in
sub
ds
and
inc
imul
mov
jmp
or
repz
test
cwtl
jle
dec
add
inc
inc
hlt
dec
leave
mov
dec
cmp
or
test
adc
or
leave
lods
sub
mov
sub
mull
xchg
scas
rclb
std
xor
ds
mov
push
ljmp
ret
push
inc
lds
inc
or
pop
jmp
cmp
rcll
mov
sub
add
dec
xor
stos
outsl
xlat
jne
je
cmp
ja
sub
jbe
test
or
out
push
lret
test
jl
cld
into
iret
jl
ret
divl
cmpsl
cmpb
push
in
or
mov
pushf
or
xchg
bound
mov
nop
adc
mov
je
hlt
add
pop
jb
inc
xchg
xor
jb
js
sub
adc
mov
in
push
shll
clc
out
inc
jg
mov
cmpsl
or
mov
fwait
adc
add
jbe
inc
pop
mov
out
leave
mov
cmp
movsl
push
jns
lret
jns
out
push
xor
jle
jecxz
cmp
popf
sbb
adc
fwait
mov
mov
enter
es
mov
dec
mov
xchg
xchg
pushf
inc
fstl
xor
movsb
std
dec
push
movsb
std
or
xchg
and
add
sbb
inc
mov
sub
mov
push
ss
cld
es
aam
push
or
bound
jmp
inc
enter
std
arpl
das
into
and
xor
add
push
jmp
or
stos
in
pop
test
and
cmp
stos
push
data16
pop
rolb
or
pop
scas
inc
xchg
nop
or
shll
push
cltd
outsl
stos
adc
outsl
push
popf
add
mov
pop
add
sbb
inc
inc
push
cwtl
ja
imul
dec
cs
jmp
dec
push
cmp
insb
rclb
loope
scas
inc
inc
cwtl
js
in
repnz
push
mov
fisttps
adcb
push
into
ret
jl
rcll
mov
push
and
decb
rclb
imul
ret
std
and
and
sub
jnp
loope
push
mov
lods
test
xor
adc
dec
sub
stos
shrb
test
xchg
in
dec
add
ds
adc
dec
cld
insb
lahf
aad
or
fcompl
into
mov
push
out
sar
add
loop
mov
out
xor
xor
pop
or
xchg
movsb
cmp
imul
mov
leave
push
bound
pop
or
rol
add
inc
sbb
repnz
addl
ficomps
call
mov
mov
pop
mov
xlat
les
out
test
aam
into
movb
dec
xchg
mov
push
sub
add
andb
sbb
jns
bound
mov
pop
mov
dec
and
push
push
negb
and
jne
repz
jo
sub
push
mov
rcrb
fsub
xor
imul
jp
les
pushf
bound
iret
popf
push
cwtl
pop
inc
movsb
sarl
scas
push
inc
inc
pop
lods
sub
xchg
stc
movsb
shll
lods
mov
adc
icebp
or
xchg
pop
scas
sbb
jp
mov
pop
sbb
aas
pop
pop
mov
inc
push
pop
fisttpl
jl
mov
shlb
jns
add
loop
repnz
int
pop
pop
add
pop
or
adc
sub
ja
mov
in
xor
test
pop
jp
subl
sub
mov
cmp
pusha
jb
inc
sub
xor
xlat
daa
sbbb
adc
enter
rcrb
in
adc
movsl
movl
sub
bound
mov
cld
dec
sub
mov
xchg
mov
lahf
mov
adc
imul
daa
sahf
fsts
out
mov
xchg
cmp
jno
cwtl
push
outsl
fisubl
repz
sbb
addr16
cmpsb
stos
adc
imul
lcall
xor
or
xchg
cmp
xchg
pop
cltd
into
outsb
xchg
xor
popa
mov
push
push
nop
xor
and
dec
out
xchg
subl
inc
mov
add
adcb
insl
fisubrs
jle
mov
outsl
mov
in
jno
add
int3
fimuls
jle
jmp
and
stos
daa
xchg
sbb
movsb
in
jno
fsts
mov
rolb
loope
shll
xor
push
repz
mov
fwait
jge
adc
cmp
ljmp
les
aas
sub
dec
sub
push
ret
sti
adc
mov
xor
testl
pop
mov
dec
sbb
ljmp
or
mov
adc
mov
imul
or
add
xchg
pop
sarl
mov
jle
inc
lcall
fs
push
scas
testb
popf
roll
mov
xchg
das
fcomi
mov
movsl
int
aam
push
outsl
jnp
pop
xchg
pop
ud2
cmp
dec
sub
jl
int
pop
data16
adc
cli
push
out
nopl
mov
lahf
jbe
push
push
push
pop
arpl
add
add
fbstp
mov
cmc
mov
cmp
stos
push
mov
lea
out
sahf
addr16
push
push
cmp
pop
insl
adc
push
inc
les
adc
xchg
dec
xchg
adc
xorl
pop
rolb
fnstcw
dec
mov
inc
in
adc
push
shl
xchg
adc
and
pop
cs
pop
aam
or
xlat
or
repz
leave
in
mov
add
inc
lods
out
xor
and
xchg
xor
setp
xchg
push
or
ljmp
xchg
inc
xor
out
adc
push
xor
push
mov
pop
cmc
xor
addr16
and
pop
imul
pushf
xchg
or
cmp
js
ja
sbb
aas
dec
popf
stos
cmpb
sub
xor
dec
movsb
cmc
jl
nop
xchg
xor
adc
jp
icebp
mov
adc
jl
popf
mov
sub
movsb
in
idivl
pop
xlat
shll
add
mov
mov
dec
pushf
cli
daa
inc
inc
jp
in
es
mov
ds
icebp
cltd
dec
imul
icebp
mov
and
xor
in
in
stos
hlt
xor
and
repnz
push
fs
out
cmp
popa
sahf
push
lret
jmp
jg
test
fdiv
mov
daa
js
cmpsb
mov
sub
adc
and
mov
inc
pusha
pushf
or
jo
xchg
and
decb
add
repnz
cltd
cmpsb
push
jbe
sub
shrl
jne
add
mov
jo
mov
arpl
push
fcom
lret
push
mov
loopne
stos
sbb
pusha
clc
aas
test
mov
mov
pmulhuw
dec
dec
shlb
mov
out
jle
xor
sbb
aad
add
mov
pop
xchg
inc
fs
and
xchg
sbbl
shlb
fists
stc
cmp
sub
lret
insl
out
fnstsw
pop
dec
repnz
jmp
mov
adc
ljmp
xchg
mov
xchg
lods
js
in
cmpsl
cwtl
in
outsb
pcmpeqd
or
rcll
lcall
mov
fwait
rcrb
outsl
ds
aaa
sbb
jno
mov
push
mov
andl
sbb
sub
or
and
add
outsl
xchg
ret
ja
movsl
insl
push
adc
jg
fwait
pushf
cmp
jg
arpl
xor
cwtl
mov
push
mov
lea
mov
dec
rorb
mov
cmp
pop
adc
sbb
sub
push
cli
xor
cmp
das
aad
in
sbb
inc
sub
and
lahf
mov
push
in
or
pop
pop
shrb
aas
cmp
fnsave
mov
cmpsb
xchg
xchg
pop
push
lahf
xchg
sub
jbe
dec
repz
xor
adc
add
xor
push
pusha
ret
xchg
mov
pop
daa
or
mov
mov
das
xchg
test
dec
push
adcl
jle
dec
fs
cmp
cmp
inc
lret
leave
ret
pushf
cmp
cmp
xchg
or
std
arpl
test
pop
out
inc
lret
pushf
sbb
cmp
aaa
push
pop
shrl
dec
add
sbb
jge
or
sbb
icebp
or
inc
in
xchg
and
std
sub
and
jmp
dec
pop
jl
mov
pop
cmpsb
aas
popf
sbb
mov
push
aad
inc
inc
pop
inc
add
or
bound
sbb
xchg
inc
mov
fcomi
nopl
das
mov
arpl
push
dec
sti
or
ret
cmp
mov
xchg
dec
jecxz
mov
cmp
jbe
jns
push
jecxz
push
or
ret
dec
or
adc
push
cltd
mov
gs
fsubrl
mov
xchg
mov
adc
test
rcll
gs
loop
xchg
inc
xor
adc
adc
push
add
xchg
xchg
push
popf
adc
push
aaa
cli
sti
and
roll
jbe
outsl
nop
and
cld
inc
notb
ja
push
lret
push
push
pop
jns
lods
xor
lcall
js
mov
push
fisubrl
rdpmc
push
inc
mov
cmp
es
jo
mov
pop
inc
bnd
inc
inc
imul
sub
test
mov
pop
in
sahf
lcall
xor
ds
out
loope
dec
xchg
lods
jl
inc
dec
rcrb
nop
mov
inc
mov
lods
pop
std
mov
xchg
push
inc
xlat
xor
in
xchg
daa
dec
adc
and
repnz
or
stos
nop
test
sarl
aaa
out
ljmp
cld
push
cmp
repz
and
mov
inc
ffree
mov
setl
out
jmp
mov
lret
outsb
push
adc
enter
divb
jge
fs
fstps
pop
adc
push
imul
push
xchg
jg
xchg
insl
pop
mov
outsb
push
xor
pop
in
or
push
dec
ljmp
jle
and
rclb
ljmp
xor
inc
sbb
and
nop
jae
stc
lahf
into
pushf
out
pushf
cmpl
cmp
dec
cmpsb
pop
jbe
repnz
movq
mov
imul
hlt
cmp
dec
adc
inc
es
jo
arpl
dec
dec
or
xlat
xorl
sbb
or
outsl
fsubp
jne
mov
push
fisubrs
data16
lods
pop
stc
cmpsl
arpl
xor
mov
adc
adc
inc
out
sti
mov
fcmovu
mov
iret
cmp
mov
addr16
in
testl
or
int3
mov
mov
sarl
gs
adc
ja
cmpsl
lcall
sbb
jle
xchg
mov
lock
xor
adc
mov
sub
lret
stos
push
mov
aam
lret
in
xchg
inc
enter
pop
or
rolb
pop
aam
cmp
mov
inc
icebp
into
movsb
fisttpll
cmpsb
fstpl
ja
hlt
push
cmp
mov
mov
add
sub
pop
in
xlat
inc
lret
jl
xchg
xchg
mov
jne
xchg
cmp
jbe
fildll
jnp
andb
sub
adc
mulb
push
enter
and
mov
xor
rol
jns
lcall
adc
testl
cmpsl
aaa
icebp
lds
dec
mov
nop
into
test
outsb
imul
sbb
in
inc
fstl
adc
mov
cld
mov
mov
loop
cmpsl
mov
roll
es
aaa
incb
dec
and
mov
lea
mov
sub
in
stos
mov
in
int3
inc
addr16
mov
mov
mov
shll
mul
cmp
mov
mov
push
aaa
mov
dec
iret
mov
into
sti
mov
adc
imul
aaa
mov
lcall
daa
adc
scas
push
pop
or
js
idivl
and
adc
shl
dec
roll
jp
cmpsl
je
mov
shlb
sub
testb
xchg
insb
insl
jns
std
sahf
cmp
scas
mov
or
sahf
sarl
adc
outsb
sarb
insb
rol
mov
and
xlat
or
fidivrs
repnz
add
shll
lock
mov
jns
inc
pusha
call
int3
inc
mov
jae
cmp
jae
test
cli
daa
jp
pop
push
add
addr16
sahf
sub
mov
test
lret
dec
or
repnz
rolb
add
sub
jp
lds
mov
push
or
adc
test
inc
mov
jno
xor
jmp
loop
lret
xchg
or
add
mov
outsl
push
popf
mov
loope
sti
pop
inc
std
cwtl
add
jae
mov
test
pushf
push
bound
cmp
push
jmp
shlb
je
cmc
cmpsl
pop
xchg
in
inc
std
mov
mov
imul
mov
in
or
les
mov
adc
or
mov
out
call
adc
addr16
inc
aaa
or
rclb
adc
mov
das
enter
mov
mov
dec
mov
lret
aas
sub
sbb
jecxz
add
jns
lcall
xchg
sbb
hlt
repz
cltd
shlb
es
mov
in
and
lret
mov
mov
incl
pusha
pop
or
mov
xlat
pop
adc
mov
pop
pop
cs
mov
arpl
inc
fldl
jns
and
push
xor
jle
mov
or
sub
scas
dec
shlb
aas
stc
mov
dec
cwtl
push
popf
lret
ja
xchg
fwait
cmp
xor
daa
fdivl
xchg
inc
cmp
xor
leave
push
adc
jb
fmull
cmpsl
mov
inc
nop
jmp
shl
pushf
shrb
adc
add
lret
lock
cmpsb
mov
out
idivb
dec
mov
stos
cmp
fsubrs
cmp
push
inc
stos
sbb
ljmp
daa
sti
enter
mov
mov
xchg
adc
add
or
xor
pop
pop
in
in
pop
inc
shll
mov
inc
adc
fstl
adc
push
dec
jne
ffreep
std
in
enter
dec
aad
push
or
orl
push
push
add
dec
inc
inc
fwait
push
xchg
test
idivb
mov
inc
sub
and
incb
arpl
fdivrl
shll
mov
cmp
in
lock
mov
mov
sub
out
test
push
ss
jb
push
call
mov
cmp
lret
inc
rcll
adc
aad
inc
mov
out
inc
jle
data16
dec
pusha
std
mov
mov
or
out
stc
mov
test
cmpsl
imul
mov
push
xor
popa
push
bound
dec
popf
xor
add
jbe
fucomp
sub
in
mov
nop
dec
xlat
mov
enter
xchg
lcall
jecxz
adc
sub
jb
aam
xor
mov
pop
mov
and
ds
clc
inc
gs
inc
mov
mov
jno
dec
fsubrs
adc
mov
fimuls
mov
nop
bnd
cs
sbb
xorb
ja
scas
mov
out
adcb
add
xchg
rorb
les
andl
mov
xchg
cmc
and
jg
cmc
push
pop
out
jmp
cmp
pop
inc
shl
xchg
mov
loopne
xor
adc
sbb
mov
cmp
rcrb
in
cmp
or
out
popf
sbb
out
xor
or
mov
dec
sub
in
insb
rcl
jne
lock
into
stos
xor
inc
xchg
imul
fnsave
es
or
in
push
mov
std
lea
dec
sbb
sub
aad
xchg
out
lds
test
hlt
adc
xchg
pop
jmp
adc
icebp
pushf
jno
repnz
out
xor
xchg
lcall
repnz
xchg
inc
or
cmp
loopne
xchg
mov
mov
adc
iret
mov
jno
jnp
jnp
insl
mov
inc
mov
mov
scas
lods
lret
lock
loope
fwait
and
outsb
insl
mov
in
out
mov
mov
pop
push
inc
les
je
dec
push
mov
sub
sub
or
dec
dec
scas
push
push
cli
gs
andl
and
adc
mov
sub
mov
mov
pushf
sub
outsb
outsl
dec
sub
sbb
fnstenv
outsl
mov
pop
dec
std
mov
int
addr16
jl
stc
inc
lahf
or
xchg
pop
lret
orb
sti
imul
push
int
cmp
shrd
daa
xchg
fisubrl
pop
loop
hlt
inc
dec
mov
pop
add
xchg
out
sub
lcall
mov
mov
test
and
xor
or
addb
or
mov
pop
popa
loopne
movsl
dec
jg
dec
cmp
cmpsb
lods
aaa
mov
addr16
add
stos
jb,pn
mov
mov
bound
mov
lods
xchg
jae
sti
subl
or
movsb
mov
sahf
lcall
dec
jno
je
xor
mov
mov
bound
movsl
test
je
fs
sbb
stos
sub
push
imul
push
cltd
ljmp
cs
mov
aad
mov
insb
or
adc
fadds
cmp
mov
int3
jmp
sub
inc
daa
lret
adc
mov
test
inc
jl
jb
mov
cwtl
sbb
jp
cmpsl
inc
pop
lods
xchg
sub
add
push
pop
scas
lock
nop
js
test
punpckhbw
popa
shll
add
add
imull
pop
lcall
dec
lcall
pop
jmp
mov
jne
jp
mov
stos
mov
add
dec
ficoml
push
aam
repnz
jg
mov
in
push
push
aas
or
mov
outsl
push
jb
adc
inc
push
xchg
sub
inc
or
fs
repz
fcomip
imul
sub
mov
mov
out
shr
arpl
xchg
sub
mov
or
enter
or
fdivl
test
mov
dec
scas
pop
push
out
and
push
mov
mov
push
cmp
fmuls
aad
adc
ss
iret
outsb
mov
test
movsb
andb
sub
lcall
add
jg
dec
cld
xchg
add
cmp
stos
rclb
in
lret
fs
mov
sbb
addb
xor
nop
addr16
rcrl
mov
cli
dec
sub
ljmp
xchg
lods
mov
xchg
aas
mov
cmp
nop
inc
inc
ret
mov
jecxz
sub
popa
popf
xor
pop
gs
add
push
idiv
stc
jb
mov
fldl
aad
outsb
cltd
mov
adc
shl
mov
psubq
out
mov
pop
stos
fiaddl
jmp
notb
into
adc
jo
ja
out
adc
bound
pop
rcrb
mov
sub
je
js
jnp
loope
or
push
sbb
push
hlt
ljmp
inc
push
fadds
mov
and
adc
dec
push
push
orl
icebp
testb
or
pusha
cmp
push
out
stos
mov
mov
hlt
bound
cmp
lock
cmc
fstpl
cmpsl
stos
inc
mov
ss
sub
add
xor
dec
push
mov
push
shlb
pop
arpl
sub
xchg
orb
and
sbb
repz
lods
in
push
xchg
cmp
add
xchg
cmpsl
out
fwait
pmaxsw
pushf
xlat
cmp
test
jne
mov
mov
mov
jne
es
xchg
outsb
jb
lahf
ja
enter
int3
fxch
sbb
dec
out
cmpsb
xor
sub
lahf
jae
pop
fwait
pop
inc
daa
lret
lret
ficompl
xchg
mov
xor
ret
insb
cmp
xchg
adc
xchg
push
xchg
sti
cmpsl
lods
xor
dec
out
push
push
pop
testb
bound
xchg
fidivs
adc
mov
jl
xchg
mov
fwait
mov
xchg
lods
push
stos
shlb
mov
and
inc
xor
cmpsb
stc
xchg
jo
daa
xchg
mov
mov
in
pop
je
jl
ljmp
push
js
cmp
addr16
dec
or
mov
sbb
mov
xor
mov
adc
fwait
xor
lahf
cmpsl
gs
and
mov
movsb
testl
ljmp
push
imul
add
in
xchg
sar
call
push
cmp
dec
js
aam
add
sub
shrb
fstp
or
test
js
push
push
std
jl
push
push
iret
jae
fdivr
cmp
push
xlat
scas
mov
lock
cmp
shl
ljmp
push
lds
gs
mov
jb
data16
dec
sub
pop
xchg
jl
xor
sbb
dec
js
pop
mov
inc
out
out
je
pusha
sub
inc
std
cwtl
out
lcall
pop
push
pop
lcall
ds
push
add
cmc
sbb
ret
call
fnstcw
cli
mov
cmp
ret
mov
xlat
sub
cmp
out
movsl
mov
fcoms
test
repnz
sub
pop
cmpsl
jbe
mov
push
pop
fisubrs
repnz
mov
sbb
pop
or
aaa
mov
inc
inc
and
pop
andl
cld
ja
loope
dec
or
add
sbb
fistl
push
and
jp
mov
dec
in
cmc
mov
sub
mov
mov
push
sbb
or
fimuls
sub
sti
jl
int
stos
cmp
and
jge
cmp
gs
in
lds
sbb
jmp
mov
call
clc
sbb
sub
loop
test
push
scas
pop
lahf
push
lcall
repnz
xlat
lea
fwait
add
fmull
cmp
jecxz
jmp
ds
push
cs
pusha
repz
mov
ljmp
push
lds
xor
sub
leave
sub
mov
cwtl
xor
dec
stos
addr16
push
rol
sbb
adc
sbb
push
cmp
inc
pop
jne
push
xchg
and
cli
push
pop
push
fnstsw
xor
nop
out
lea
test
addr16
and
jae
repnz
xchg
jmp
inc
mov
gs
mov
xor
dec
or
xchg
aad
frstor
fidivrs
out
add
sbbb
das
dec
mov
jg
arpl
call
mov
test
jl
movsb
jl
ljmp
dec
xlat
pop
insb
xor
pusha
or
sbb
inc
in
pop
sub
cltd
push
pop
js
test
mov
xor
mov
sub
in
jno
or
lret
testb
sub
mov
xchg
pop
int
jb
inc
xchg
fidivl
pop
icebp
or
loop
cmc
in
inc
aas
sbb
dec
lea
test
push
hlt
inc
mov
lock
mov
add
cmc
cmp
hlt
shr
setbe
pushf
cmp
or
call
leave
xchg
aad
nop
adc
xchg
leave
and
cltd
flds
js
jmp
orl
cmpsb
pop
call
cld
aam
imul
repnz
test
push
inc
mov
in
call
adc
mov
pop
daa
lds
pushf
enter
pop
daa
ja
cmc
mov
and
lret
inc
xlat
shlb
je
fwait
imul
or
inc
pop
jo
stos
jbe
ret
pop
dec
push
xchg
cmp
pushf
lret
movsb
ret
mov
add
xor
push
in
xor
inc
mov
sahf
mov
int
cmp
daa
cli
sbb
adc
out
mov
orl
addl
pop
aas
scas
lock
sub
imul
lds
pop
adc
cmp
add
add
ss
jecxz
push
mov
inc
rcrl
loop
fidivl
xor
xchg
loopne
mov
js
sub
xlat
mov
and
and
sbb
out
frstor
sub
inc
jecxz
ds
lea
xor
mov
jg
xor
aad
dec
and
add
mov
fsubr
jecxz
mov
and
pop
daa
mov
mov
jle
mov
in
adc
rorl
fistps
mov
and
or
cmpsb
push
repz
xor
or
roll
adc
fwait
jns,pt
adc
adc
sarb
imul
add
loopne
scas
in
add
or
test
aaa
xor
xor
daa
ja
out
adc
int3
push
jbe
cmp
pop
hlt
cmc
mov
ret
pavgw
call
xor
sarl
popf
ret
inc
pop
xor
ret
cs
popf
cmp
out
mov
es
decl
outsb
sub
rolb
add
adc
sub
push
push
roll
cmp
dec
dec
arpl
xchg
cwtl
call
fwait
ss
jecxz
std
inc
lret
add
xor
lret
sahf
addr16
add
daa
jl
orb
cld
push
add
mov
dec
sub
dec
js
pusha
and
lret
pop
ds
jnp
insl
and
cmpsb
fcompl
scas
add
sub
or
leave
mov
add
in
mov
nop
pop
stos
jo
in
mov
push
or
mov
cmp
jmp
arpl
jb
and
loope
lret
mov
lods
xchg
into
bound
pop
mov
inc
lods
fcmovne
stc
xor
xchg
in
inc
bound
scas
or
fwait
in
int3
or
icebp
ret
add
push
mov
cmp
push
adc
je
mov
je
sub
stc
mov
dec
cli
in
sbb
mov
fucomip
subb
pop
xchg
sbb
push
sarl
dec
dec
cmc
jmp
sbb
imul
inc
sub
out
jecxz
stc
fisubl
pop
out
xor
jp
inc
gs
rclb
jno
jmp
dec
je
bsr
int
adc
insl
data16
flds
dec
in
mov
dec
mov
mov
sbb
inc
rcrb
xor
aaa
imul
or
daa
sub
repz
inc
sub
mov
push
jl
lret
mov
adc
cwtl
mov
int3
inc
cmp
test
lds
into
mov
test
hlt
xchg
ficompl
dec
xchg
lahf
push
aam
xlat
xor
xchg
inc
mov
repz
jbe
or
mov
xchg
loope
mov
daa
cmp
test
sbb
adc
mov
rcll
arpl
into
and
inc
sub
cmpsl
jmp
scas
lods
or
adc
ss
mov
pop
dec
adc
insb
out
adc
mov
mov
mov
sbb
add
mov
xor
push
pop
notl
repnz
inc
ror
out
mov
sti
es
and
pop
push
mov
mov
adc
push
faddp
fnstcw
xor
inc
jp
mov
xchg
xchg
pop
cmp
add
fs
pushf
push
inc
and
mov
test
jnp
or
mov
inc
movb
mov
sub
and
in
jecxz
lods
cmp
faddl
roll
or
int
sub
aaa
mov
inc
out
insl
adc
sarl
inc
cmp
rclb
pop
rolb
add
xchg
xor
popa
pop
or
xchg
xlat
mov
or
cs
cmp
les
or
int3
fistpll
leave
dec
add
sub
dec
mov
or
stos
cwtl
fldenv
mov
mov
adc
mov
ret
les
aas
xchg
in
push
loopne
xorl
pushf
push
pop
mov
int
mov
push
lock
roll
lock
lcall
push
orb
inc
push
clc
std
sub
pusha
dec
aaa
add
dec
loopne
sub
divb
pop
data16
fwait
or
in
push
scas
lret
stos
sar
inc
xchg
repnz
lods
mov
or
outsl
push
xchg
pop
test
cwtl
mov
pop
int
jge
or
aas
jbe
popa
and
jle
sbb
stc
jmp
sbb
push
not
out
lahf
pushf
test
popf
mov
sbb
push
out
mov
mov
and
jecxz
xor
xor
mov
dec
mov
mulb
fnstcw
lret
sti
pop
cwtl
cmpsl
clc
inc
push
stos
add
fmuls
pop
fwait
pop
cmp
test
jl
icebp
cmp
stos
sbb
aaa
andb
xor
aaa
xor
and
pop
xor
rclb
adc
out
repnz
mov
enter
dec
sbb
imul
or
repnz
bound
fdivrl
rcll
movsl
inc
push
insb
dec
adc
cmc
jae
pop
popf
and
lret
mov
mov
pop
das
sti
push
sbb
in
cld
xchg
inc
dec
or
sbb
mov
je
movsl
mov
hlt
push
clc
addr16
jbe
ja
test
daa
push
idivb
lods
xchg
jp
in
lock
sbb
sbb
inc
mov
inc
push
pop
arpl
push
cmpsl
add
xchg
hlt
mov
clc
jl
movsl
popa
orb
test
call
and
insl
int
sub
pop
jmp
xchg
fldenv
mov
cltd
aad
jecxz
cmpsb
pop
repnz
lds
pop
add
xchg
cmp
jp
jp
sbb
cmp
cmp
adc
inc
sbb
push
scas
int
cmp
push
xlat
cmc
mov
or
xchg
cmc
jmp
pop
incl
xchg
sub
repnz
loopne
test
inc
or
mov
jecxz
out
mov
cmp
ss
jae
cmp
and
cmp
shll
push
repnz
lds
mov
cmc
dec
stc
or
cmp
or
les
xchg
jno
cmp
xchg
fwait
in
sub
idiv
aad
adc
inc
pop
test
std
mov
pop
mov
push
ficoml
aas
cmp
xchg
fadds
sahf
lahf
or
loope
sbb
xchg
mov
and
stos
pop
out
adc
push
mov
push
mov
cwtl
mull
mov
jbe
inc
jae
sarl
adc
pop
int3
or
int
loope
and
push
mov
pusha
xchg
dec
sub
mov
cli
lods
stos
inc
mov
inc
mov
or
je
adc
movsb
icebp
pop
cmp
sbb
in
xchg
insb
clc
xorl
add
xor
pop
jl
setne
dec
add
outsl
test
lods
xor
push
adcb
bound
pop
movb
xor
js
nop
inc
adc
inc
lret
loope
cmpsl
test
ret
inc
out
into
popl
add
jbe
sub
sbb
mov
inc
push
mov
stos
mov
test
cmp
and
ds
xchg
jo
outsb
sub
rolb
ljmp
movsl
adc
lahf
cmp
imul
push
int
outsb
and
lods
es
lahf
daa
cwtl
adc
mov
mov
cmp
mov
jp
push
jno
ss
andl
jp
popf
fiaddl
stos
xchg
mov
jo
adc
test
out
addr16
popf
xchg
xor
add
pop
mov
jne
daa
call
mov
mov
in
xchg
lea
mov
pop
pop
ret
mov
dec
add
cmp
dec
dec
push
mov
popf
sub
or
dec
sub
cli
inc
and
iret
lret
jns
xor
dec
stos
mov
xor
mov
dec
aad
adc
ret
mov
inc
scas
fsub
mov
lret
dec
xor
pop
nop
xlat
xorl
pop
pop
cmpsb
movsb
and
or
push
rolb
out
jnp
ss
or
fbstp
add
add
loopne
dec
incb
and
fstl
test
dec
lcall
adc
mov
pop
inc
dec
add
mov
or
add
arpl
xchg
sbb
ds
stc
fisttpl
test
sub
xor
cld
jno
aaa
push
jae
sub
xor
fld
xor
xor
adc
jb
add
pop
push
or
aad
mov
pop
inc
in
mov
ja
out
scas
stos
mov
sbbl
scas
repz
sbb
cmp
cltd
inc
push
xor
jmp
fimuls
scas
sbb
call
clc
insl
pop
scas
dec
sbb
int
mov
ja
stc
xchg
jecxz
mov
aas
lcall
mov
mov
sub
adc
ficompl
ret
push
adc
rcll
push
dec
aas
push
sahf
addr16
data16
and
jmp
push
aam
sbb
mov
sub
in
jmp
xchg
cmp
xor
add
lret
leave
pop
push
push
and
stos
jb
xor
and
out
dec
mov
add
xchg
push
inc
add
ret
sti
xorb
xchg
jg
pusha
cld
mov
sub
pop
dec
xor
push
data16
dec
dec
int
xlat
lods
xchg
ds
pushw
jno
ret
xchg
in
sbb
leave
and
and
jge
enter
jae
xor
pop
cmpsb
pop
push
fisttpl
lds
pushf
pusha
xor
imul
push
mov
shlb
xchg
mov
int3
push
pop
jmp
int
sbb
xor
jecxz
rcl
outsl
test
push
mov
popa
shll
int3
adc
sub
or
mov
repz
mov
or
cltd
jg
scas
mov
jge
inc
call
hlt
push
add
je
sub
cld
fldcw
jno
push
xchg
add
sbb
and
adc
adc
inc
push
lods
xor
fsts
lahf
or
cmp
orb
loope
add
pop
mov
add
enter
repz
mov
mov
jp
push
sbb
shl
lds
fs
and
test
or
fdivrl
mov
aaa
mov
roll
sarb
xor
imul
aad
lods
subb
nop
inc
sub
imul
cltd
imul
pop
jmp
dec
vprotq
outsl
pop
lret
call
sub
in
adc
imul
outsl
shll
loop
add
adc
mov
rolb
jge
mov
push
in
sub
int
testl
mov
jne
and
loope
mov
dec
bound
mov
popa
sbb
test
imul
inc
jmp
add
fisttpl
mov
jo
stos
inc
stos
adc
adc
lahf
hlt
hlt
jmp
lds
adc
pop
cwtl
sub
stos
sbb
or
dec
or
xchg
dec
cs
shrl
scas
adc
gs
hlt
cmpb
mov
mov
or
out
jb
xchg
hlt
add
pop
fadds
sbb
outsl
cmp
bound
test
xchg
sbb
add
push
mov
xchg
mov
cmc
lret
and
lods
scas
aam
mull
and
mov
dec
ss
and
xor
out
imull
insl
pop
int
out
mov
and
cmp
dec
out
pop
fmulp
mov
mov
mov
aaa
push
jg
rorb
jmp
test
and
xor
adc
xchg
add
cmpsb
adc
test
mov
subl
inc
xor
push
jg
outsb
adc
movsl
fistpl
xor
adc
dec
sub
mov
mov
mov
jnp
repz
insb
and
imul
stos
out
jle
xchg
inc
push
aaa
sbb
jbe
xor
stc
mov
add
pop
mulb
inc
lahf
sar
and
loop
repz
inc
push
dec
mov
xchg
dec
or
std
add
xchg
jle
dec
mov
js
outsl
dec
fcoml
sbbb
xorb
or
mov
cmp
gs
adc
cli
jge
inc
dec
mov
and
and
inc
in
inc
clc
scas
xchg
cmp
and
mov
dec
dec
js
das
mov
cmp
push
lock
sbb
call
je
jg,pn
inc
arpl
xor
cmc
cmpsb
ficoml
dec
fidivrs
sbb
sub
lahf
lret
enter
push
dec
pushf
decl
or
mov
clc
shlb
sub
xchg
push
push
js
pop
jo
ss
out
sub
xchg
rorb
mov
enter
xchg
xchg
ss
jmp
ss
xchg
ret
fnstcw
pop
ja
scas
mov
mov
inc
mov
shlb
les
mov
mov
ss
push
in
pushf
add
mov
or
xlat
outsl
xchg
and
xor
repnz
dec
xchg
and
lcall
lea
cltd
subl
fidivl
ljmp
pop
popa
rdtsc
pop
adc
and
movl
xchg
lahf
test
xor
roll
jmp
xchg
scas
movsb
and
jge
cmc
push
fcompl
aad
fidivrl
sub
hlt
mov
push
sbb
shl
cmp
cmp
cmp
adc
ucomiss
dec
sahf
cmpsb
shlb
push
pop
sbb
cmc
xchg
loopne
sub
mov
cltd
fnstsw
shrl
dec
cmpsl
mov
adc
lret
gs
test
pop
push
aam
xchg
aam
mov
cltd
jo
mov
xchg
lahf
arpl
insb
mov
jns
mov
push
add
xchg
fwait
arpl
pop
insb
adc
push
fists
and
add
or
addl
jecxz
cmp
inc
ss
aas
and
cmp
ror
mov
and
je
push
dec
pop
sbb
test
fdiv
stc
insl
icebp
daa
xchg
dec
add
cmp
in
sub
mov
adc
je
push
push
jge
jecxz
arpl
mov
ss
cmpsl
xor
mov
cmpsb
jns
in
pusha
stos
shll
test
into
ret
mov
pop
push
sub
jno
cmpsl
cmp
gs
test
cwtl
pop
add
dec
test
mov
shll
scas
mov
std
in
xchg
xchg
and
pop
or
jno
jb
mov
test
xchg
sub
mov
push
dec
sti
xchg
pusha
xor
cmpsl
cmpsl
es
hlt
scas
mov
clc
enter
in
leave
test
pop
inc
add
test
pop
fsubrs
push
pop
scas
pop
push
ljmp
sbb
in
lcall
cmp
cmp
and
jmp
rcr
xchg
daa
lds
filds
lods
call
out
xor
mov
mov
push
inc
bound
aas
leave
addr16
and
ret
add
aad
das
pop
fldenv
test
test
daa
or
pop
rcrb
cmp
andb
dec
jae
sub
cmp
arpl
hlt
aas
mov
sbb
aad
xchg
out
fistpll
adc
aaa
inc
jl
adc
fimuls
sub
jmp
sbb
sub
ljmp
lret
addr16
test
int3
inc
insb
imul
mov
in
test
push
cli
xchg
mov
nop
adc
push
jnp
cld
sub
dec
out
jne
push
lea
jmp
mov
daa
mov
and
xor
test
mov
lock
ds
js
jbe
inc
xor
mov
int3
add
inc
sub
jg
inc
push
iret
out
arpl
push
jle
xor
mov
nop
fnsave
mov
sar
pop
nop
xorb
mov
mov
test
push
cs
cmp
repnz
or
fidivs
test
aad
adc
dec
push
mov
dec
push
stc
fucom
add
andb
imul
mov
xchg
aas
cmp
das
or
setbe
adc
cmp
nop
insl
rcll
xchg
and
mov
daa
mov
jnp
dec
mov
cmp
jp
and
mov
push
mov
sarl
outsb
jecxz
je
test
mov
xchg
jbe
or
fs
cmp
xchg
and
popa
or
xchg
scas
sub
push
jae
adc
ret
add
sub
pusha
repz
rorb
mov
filds
mov
gs
pop
jg
xor
mov
repz
and
clc
mov
sub
scas
shlb
je
sub
repnz
mov
adc
xchg
das
xlat
adc
mov
fcoms
cmpsb
dec
cmp
mov
les
int3
andb
dec
mov
sub
stos
popf
in
and
incl
and
sbb
and
xchg
xor
cwtl
push
inc
das
iretw
dec
sub
cmpl
add
xchg
inc
dec
movsl
sub
sub
add
jecxz
nop
mov
shlb
nop
into
rolb
sub
inc
jns
xlat
out
aad
cltd
and
push
jg
inc
inc
in
das
stos
lahf
clc
orb
mov
data16
popf
xorb
xchg
mov
fdiv
push
push
adc
adc
push
cmc
pop
sti
xor
inc
or
inc
hlt
sub
incb
or
fsubrl
pop
mov
cs
in
and
aaa
out
fildl
xor
mov
mov
inc
in
hlt
mov
pop
xchg
ds
sti
loopne
shl
push
icebp
lahf
in
out
add
mov
xor
mov
sbb
push
call
loop
arpl
sti
jl
dec
sbb
pop
mov
lret
pop
into
sbb
fidivrs
xchg
xchg
pop
sbb
mov
add
jle
xor
mov
or
inc
in
add
rorb
push
lcallw
sbb
divl
jle
inc
inc
stos
mov
pop
cs
cmp
dec
pop
cs
mov
icebp
rcll
sub
dec
cmp
insl
jg
push
jbe
aad
les
hlt
dec
mov
xchg
iret
decl
lea
lret
mov
sub
cmpl
push
push
jne
mov
lea
cmp
rorl
mov
and
sti
fiadds
pushf
out
lds
lret
xchg
aas
adc
jae
ja
push
rolb
ja
insb
or
repz
mov
outsb
or
add
sub
or
in
imul
mov
jbe
mov
imul
mov
popa
jecxz,pt
dec
out
cmp
frstor
dec
mov
adc
fldcw
mov
aam
inc
xor
dec
xor
add
jle
inc
add
adc
pop
out
dec
je
jno
addr16
push
mov
mov
mov
sahf
push
push
mov
pop
pop
fwait
xor
mov
loope
sbb
xlat
outsb
loop
adc
cmp
mov
push
pop
fcmovbe
adc
mov
inc
vphsubdq
dec
and
shrl
lahf
mov
push
xchg
jo
push
cmpsl
mov
daa
mov
pop
mov
mov
lahf
insl
mov
fwait
cmp
fstps
lods
insb
lret
loop
mov
adc
test
orl
fcomps
mov
out
ficoms
insl
ror
sbb
jle
dec
jo
xchg
lods
pop
ret
cltd
js
or
mov
stos
push
or
aas
call
lret
or
ljmp
js
mov
or
fs
sub
ja
mov
mov
and
xchg
add
cld
mov
sub
sarb
cmp
sub
push
push
stc
sub
and
jne
test
adc
shrl
dec
xor
js
lock
mov
cmpsl
mov
leave
dec
stos
and
push
mov
and
or
push
roll
xchg
mov
loop
scas
imul
sbb
scas
in
pop
sub
leave
daa
scas
mov
sbb
lcall
ret
stos
xor
popf
adc
movsb
mov
dec
pop
lods
pop
push
popa
aad
jp
test
loop
cmp
shll
xor
sub
mov
test
pop
js
or
in
in
fsub
out
scas
lcall
lea
call
push
add
shrl
sbb
lret
enter
mov
call
jle
mov
or
jno
jne
adc
dec
aad
mov
sahf
or
mov
loope
mov
in
into
mov
cmc
daa
stos
iret
fdivl
int
ficoms
push
je
lcall
mov
mov
daa
pushf
repz
daa
movsl
leave
inc
call
dec
lods
roll
loope
push
ljmp
test
push
aaa
fisubs
fildl
xlat
dec
out
filds
dec
icebp
ss
xor
stos
xchg
mov
pop
inc
cmp
shr
outsl
mov
add
jge
adc
popa
sbb
adc
or
mov
jne
mov
or
orb
test
xchg
mov
jb
jns
xchg
inc
js
sbbb
mov
mov
scas
pop
sbb
add
dec
pop
insb
in
addr16
pop
xchg
sahf
adc
dec
mov
sbb
lcall
xchg
push
dec
sub
leave
mov
lcall
push
adc
pop
aas
inc
xchg
mov
scas
loopne
cmpsl
ret
dec
bound
mov
js
cmp
fcoml
daa
aam
xchg
jge
clc
pop
cmp
inc
pop
mov
cmp
sbb
push
push
fidivrs
fwait
cs
mov
pop
sub
sub
lret
sbb
xor
in
mov
mov
mov
testb
ja
inc
repnz
jno
fistpll
or
out
daa
lahf
faddp
push
test
daa
push
mov
mov
inc
test
and
cmc
pop
je
iret
xor
js
ficomps
movsb
inc
add
jbe
dec
push
xchg
jbe
mov
fidivrs
mov
jmp
scas
dec
inc
outsb
mov
gs
xlat
inc
pop
lock
in
sub
cmpsb
shlb
push
sub
pusha
xlat
movsl
pop
xor
adc
iret
cwtl
mov
pop
call
rcll
inc
xlat
pushf
xor
pop
push
pop
jns
jge
push
shll
push
add
aam
cmp
test
shll
jo
pop
pop
mov
inc
cmp
aaa
ret
or
js
sub
popf
lret
es
ds
outsl
jl
ja
sbb
hlt
mov
push
mov
in
cmpl
cmpsb
jnp
adc
pop
jae
rolb
out
and
rcrb
out
js
xchg
out
aad
dec
lahf
cmp
lock
cltd
dec
and
mov
loop
jne
fnstcw
imul
push
mov
jne
add
insb
and
push
dec
imul
adc
mov
sub
xchg
sbb
and
inc
sbb
dec
in
mov
xchg
movsl
jl
and
cmp
sub
mov
and
cmp
pop
data16
out
mov
dec
pop
lods
sbb
outsl
addr16
repnz
mov
push
and
fwait
sbb
daa
aam
aad
push
xor
pop
sub
std
and
xor
scas
js
mov
push
into
ljmp
cmp
shrl
push
pop
aad
lret
xlat
into
aam
fsubrs
imulb
rorb
call
cmp
mov
mov
mov
xor
mov
cli
rcll
or
arpl
dec
inc
jmp
push
outsl
addl
js
cli
jns
mov
adc
cltd
es
lods
jg
inc
ret
or
or
jle
pushf
mov
xchg
test
pop
in
mov
xchg
fs
and
sbb
add
fcompl
ret
push
fdiv
sub
xor
pop
pushf
push
and
in
lret
or
enter
addr16
pextrw
push
shl
mov
das
pop
leave
adc
jecxz
sahf
fnstsw
les
pushf
mov
shll
decl
mov
xchg
sbb
fwait
leave
clc
and
ret
call
push
pop
scas
insl
add
fdivr
mov
pop
cmpsb
dec
pusha
out
sti
xor
and
jne
jmp
rcll
mov
fidivrl
mov
push
in
movsl
dec
in
cmp
jmp
stos
jmp
fisubrs
push
outsl
cmpl
mov
lret
dec
imul
cwtl
sub
daa
xchg
test
xlat
add
dec
aas
fcoms
xlat
push
mov
gs
daa
mov
inc
stc
les
mov
cmp
test
add
out
js
xchg
mov
ja
lods
mov
sub
es
shlb
jae
es
jp
inc
jge
les
mov
leave
test
and
pop
icebp
std
xchg
arpl
int
rclb
out
insl
jbe
lea
xchg
pop
call
stos
fstpt
cmp
xchg
out
mov
aad
dec
and
pop
rorb
fsubr
push
imul
mov
pop
into
adc
adc
xchg
jo
test
popf
pusha
inc
add
and
and
loope
orb
jae
dec
mov
pop
cmp
mov
xchg
cwtl
test
aam
cmp
enter
cwtl
mov
jg
sbb
jo
pusha
xor
sti
scas
fptan
pop
roll
pop
inc
xchg
andl
xchg
jg
lock
pop
fadds
push
add
sbb
sbb
and
mov
pop
cld
fistl
out
mov
mov
mov
sub
push
pop
mov
cmp
arpl
inc
push
psrlq
cmp
stos
mov
inc
mov
pop
cmp
dec
sbb
dec
mov
cld
and
cmpsb
mov
jae
mov
ds
lea
cmp
mov
fdivs
or
inc
les
xor
sarb
add
mov
add
stos
test
loop
loop
xor
std
in
or
cwtl
mov
fwait
movsl
hlt
imul
rolb
out
rorl
jne
jle
xor
dec
shl
mov
cmp
ret
pop
cmp
jecxz
insb
add
xchg
scas
hlt
and
scas
mov
movsb
mov
scas
stos
shll
push
jmp
shlb
dec
cli
xor
movsb
sbb
cmp
add
xor
pop
loopne
sub
xchg
pushf
clc
jno
jnp
lods
in
sub
add
mov
adc
xchg
insl
subl
roll
dec
aas
cld
pop
repz
add
repz
inc
xor
pop
sbb
dec
das
dec
push
out
push
xchg
cs
rorb
jae
and
xor
repnz
dec
das
mov
and
ds
push
dec
add
fisttpl
pop
loope
mov
dec
sti
jo
gs
aad
mov
lret
sbb
stos
mov
lods
sub
cmc
inc
rclb
push
mov
shlb
out
sar
stos
mov
cld
push
pop
cmc
xchg
loopne
or
xchg
adc
mov
or
adc
int
shll
adc
inc
mov
pop
xchg
dec
mov
mov
cmpsb
shlb
ja
cli
popf
cmp
lahf
mov
sub
ja
jp
push
aad
cli
popa
cltd
sti
mov
mov
jl
lcall
mov
pop
and
mov
cmp
cmc
cld
shll
int
sahf
sub
inc
hlt
in
call
jo
cmpsl
dec
ljmp
dec
or
je
xchg
xchg
push
sub
daa
shrb
jmp
inc
es
push
inc
mov
sahf
and
xchg
ret
ret
aas
push
add
lcall
adc
inc
xchg
xlat
sbb
xchg
mov
fistpll
stos
aam
push
xor
mov
pop
lidtl
xchg
mov
adc
cli
push
pop
test
arpl
jl
ja
mov
and
imul
add
jo
cmp
mov
adc
pushf
fstpl
and
sub
dec
iret
or
push
scas
push
jnp
stos
jl
shll
mov
mov
fs
dec
das
stc
lds
jle
xchg
sti
sbb
xchg
sti
sub
sbb
xor
clc
push
aam
decb
int3
divl
sbb
lock
stos
push
mov
out
fildl
aad
call
jecxz
scas
xor
adc
lcall
push
adc
test
clc
test
fldlg2
sbb
pop
dec
lret
incl
pop
orb
add
scas
jecxz
cmpsl
das
inc
and
fisttpll
subl
mov
rcr
and
popf
dec
sub
mov
div
cld
adc
pusha
push
frstor
daa
stc
pop
pop
leave
cmp
push
pop
dec
rcrb
mov
adc
mov
or
push
pop
sbb
sbb
xor
mov
in
and
xchg
movsb
je
rcrl
leave
mov
addr16
loop
stos
xchg
pop
xor
cmp
pop
or
push
dec
mov
cmp
adc
jb
xor
add
adc
sub
je
scas
sbb
arpl
jae
ret
lods
mov
push
notb
dec
jmp
pop
aaa
aaa
cwtl
sbb
inc
mov
and
push
cmp
movsb
xor
enter
xor
adc
mov
cs
sub
xchg
mov
push
sbb
or
mov
ds
daa
hlt
mov
sub
push
push
outsb
daa
repnz
mov
test
mov
pushl
mov
and
ja
scas
clc
push
arpl
or
into
jmp
call
sarb
xchg
out
mov
xchg
loop
mov
or
cmpsb
fs
cmp
arpl
scas
mov
cmp
mulb
loop
jle
mov
cmc
add
push
and
fisubrs
into
xchg
dec
push
data16
nop
inc
movsl
pop
cmp
and
test
cmp
xor
cwtl
pop
adc
add
loopne
push
sbb
mov
movsl
fldenv
mov
ljmp
or
aam
dec
in
lret
sub
adc
in
ficoml
xor
xchg
xor
aam
push
dec
sbb
insb
mov
loope
mov
lods
call
lock
in
insl
fs
or
es
ja
pop
adc
negb
into
pop
mov
fwait
incl
mov
or
mov
sbb
cmp
add
inc
and
or
xchg
lds
mov
mov
roll
cmp
in
ret
jmp
cld
and
jno
inc
and
ljmp
in
bnd
hlt
outsl
and
cmpsl
cs
out
add
cmpsb
push
mov
je
push
imul
push
adc
dec
pop
sahf
dec
add
or
xorb
adc
js
mov
adc
in
sahf
mov
or
push
mov
dec
jmp
aam
rcll
push
sub
push
jnp
ja
lds
xchg
in
push
or
jl
jecxz
mov
xlat
aam
gs
es
mov
in
dec
xchg
sub
mov
xor
aad
mov
clc
jns
out
xchg
cmp
ret
inc
je
sub
and
jecxz
jge
leave
mov
jne
sbb
ret
repz
sbb
ret
cli
mov
pop
jp
adcb
shrb
jmp
out
sahf
push
shrb
inc
xor
cld
cld
imul
adc
push
lret
jno
jecxz
push
jge
and
out
xchg
outsl
push
stc
dec
shlb
pop
in
pop
add
leave
leave
aaa
xor
jnp
ljmp
jecxz
mov
lret
mov
adc
mov
mov
es
sbb
ficoml
stos
sub
imul
outsl
psrlw
fs
loopne
cmp
fisubrl
cmp
shlb
jecxz
shrl
and
mov
mov
insb
jnp
pop
mov
xor
jae
or
adc
aad
fimuls
std
mov
ret
mov
into
addb
mov
daa
in
test
adc
mov
xor
jno
add
sbb
mov
dec
je
xchg
lea
imul
lahf
sbb
incb
les
repz
add
clc
in
stc
jl
cs
cs
xor
lock
mov
inc
push
mov
lea
in
stc
sahf
inc
sub
stos
push
inc
mov
jae
pop
and
adc
mov
scas
jmp
push
lret
dec
dec
inc
push
hlt
push
mov
movsl
lret
mov
push
mov
ret
bound
popl
jg
add
shll
and
mov
pop
cmp
mov
xor
sahf
sbb
push
xor
leave
push
mov
push
pop
pop
pop
data16
pop
jne
fistpl
jp
imul
push
es
mov
mov
adc
stos
mov
iret
and
maskmovq
idivl
popa
dec
pushf
cmp
ljmp
cmp
cwtl
daa
arpl
test
pop
add
mov
cmp
jb
add
xor
add
xchg
adc
insb
lea
dec
xchg
mov
sbb
sbb
bnd
mov
dec
jl
cmp
in
xor
mov
fadds
aam
packssdw
loope
xor
xchg
add
jmp
mov
pushf
jmp
xor
jmp
imul
movsl
lods
adc
cmp
cmp
xchg
fwait
jne
adc
sbb
push
mov
dec
sbb
inc
leave
or
pop
jo
jg
cli
cmpsl
xchg
xor
push
jle
or
loop
mov
add
push
inc
std
lahf
loop
and
jae
mov
cwtl
mov
lds
add
scas
fldt
insb
into
movsb
aam
sbb
loopne
xchg
cmp
jns
dec
mov
xchg
inc
ljmp
mov
mov
movsl
cmp
in
pop
popa
insl
jnp
fs
xchg
cwtl
ss
mov
dec
adc
add
sbb
or
pop
and
xchg
xchg
pop
fdivs
xor
pop
repz
lock
test
cmpb
in
rclb
mov
fcoms
test
mov
icebp
iret
rolb
mov
lods
pop
imul
xor
mov
test
insl
rolb
add
xor
xchg
in
stc
fwait
mov
into
mull
sub
call
icebp
scas
lret
jo
sbbl
mov
mov
cmc
lds
aad
int
xchg
inc
add
jne
stos
mov
sbb
mov
lock
shl
mov
das
inc
andb
shrl
rclb
das
addr16
cmpsl
cmc
lods
in
jecxz
rcll
xchg
xor
aas
push
xchg
mov
dec
adc
out
pop
sti
jg,pt
ficompl
mov
fildl
push
das
push
sbb
jb
gs
out
xor
pop
jl
sarl
stc
adc
outsb
arpl
out
push
mov
jne
adc
add
sbb
fsubs
scas
arpl
xor
repz
lcall
cld
mov
mov
adc
mov
mov
js
push
and
aam
sbbb
sbb
addr16
add
push
sub
cwtl
mov
loop
incl
stos
clc
lret
jno
bound
sub
in
icebp
in
fildll
js
cmp
sub
push
mov
mov
xchg
xor
hlt
mov
cmp
inc
loope
jo
mov
pop
testl
inc
out
cmpsl
cmp
pop
adc
sbb
addr16
cltd
sbb
jae
out
pusha
cltd
aas
stos
and
mov
inc
push
inc
fstpt
addb
ret
shll
repnz
jmp
imul
push
fs
cmpsb
imull
pop
in
cmp
mov
xchg
pop
bound
adc
iret
xchg
cli
or
dec
mov
pop
push
sub
loop
mov
lds
test
movsl
je
sbb
adc
mov
stos
xor
xchg
bound
mov
outsb
imul
and
pop
mov
dec
cmc
call
lods
mov
push
pop
jle
inc
rolb
sti
push
ds
add
loop
add
xchg
push
pop
subb
or
fcmovb
jl
inc
mov
inc
rcr
add
mov
sbb
std
push
int
rol
std
push
or
sub
xchg
sub
rcll
sub
test
xor
test
cs
jae
mov
lret
mov
roll
jnp
sahf
in
xchg
pusha
inc
imul
push
test
cmc
iret
mov
push
or
xor
loopne
pop
insb
jmp
lods
mov
inc
mov
jmp
ja
rcrb
sub
ret
nop
ret
jg
lret
fstps
subb
jecxz
sti
aad
xor
mov
mov
dec
adc
and
cmp
sub
xchg
int3
and
inc
mov
mov
sub
out
dec
push
push
xchg
rorb
imul
cwtl
mov
lahf
jo
loop
pusha
fs
cwtl
or
mulb
jns
scas
sbb
ss
adc
insl
nop
in
dec
dec
sar
repnz
sahf
data16
shr
and
inc
lea
aaa
cmc
stos
cmp
add
dec
out
popf
sti
mov
test
aaa
fs
jne
add
xor
sbb
mov
and
decl
divw
jnp
insb
shlb
push
cs
lods
rolb
leave
lock
pushf
jle
sub
in
pop
inc
jne
mov
mov
mov
out
cli
mov
pop
mov
jg
popa
lahf
sbb
push
xor
bound
movsl
popf
mov
shl
xor
mov
adc
int3
enter
daa
dec
xchg
rcl
dec
out
lods
aad
into
ret
add
enter
push
jge
push
rcrl
mov
dec
mov
jbe
inc
cmp
jp
jp
mov
clc
loopne
cs
and
push
fstpl
pop
lea
cld
mov
in
mov
sub
pop
push
jg
or
pusha
icebp
inc
std
sbb
ret
push
xchg
pushf
hlt
push
int3
cmpsl
out
ds
lea
clc
lods
std
jno
inc
push
jne
in
push
lods
popf
fiaddl
push
adc
adc
addr16
outsl
popf
jb
fwait
scas
jmp
push
and
xchg
test
add
lahf
jge
test
add
adc
scas
pop
test
dec
fyl2x
jle
push
mov
ja
leave
push
cld
mov
inc
mov
push
adc
data16
adc
pop
pop
sbb
sub
or
add
sbb
fbstp
aaa
cltd
loop
mov
dec
push
jp
sahf
jns
call
or
inc
mov
pop
mov
mov
xchg
adc
js
or
nop
jp
add
popf
lret
testl
mov
cmp
mov
flds
lret
xchg
sbb
shr
rol
jb
sub
push
fcmovnu
add
idiv
sahf
push
xor
jmp
sub
add
and
dec
xchg
movsb
adc
icebp
or
mov
adcb
or
xchg
xor
stos
and
les
mov
cmp
cmp
repz
scas
aam
lret
repnz
loop
scas
xor
popa
loopne
and
pop
pop
lea
out
push
repz
cmpsb
sahf
cmp
gs
divl
bound
add
jmp
mov
pusha
add
cltd
gs
lods
xor
push
in
jns
stos
mov
xchg
mov
ljmp
push
push
cmp
adc
xchg
mov
mov
aas
pop
mov
popf
ss
xor
pop
or
mov
mov
mov
and
clc
xchg
pop
cmp
pop
mov
dec
cmc
daa
aam
mov
add
push
into
add
cmpb
dec
mov
push
aas
xchg
aaa
iret
inc
sbb
dec
addl
in
mov
mov
and
pop
pop
testb
jl
fs
test
inc
jg
mov
sbb
xchg
cmc
repz
cwtl
lcall
das
ja
cmp
push
cmpsl
aam
push
mov
mov
or
adc
jo
adc
outsb
jp
adc
int3
lea
inc
lds
loope
stc
push
arpl
pop
and
sbb
or
stos
das
fcmovnb
sbb
rorb
inc
ja
xlat
stos
aas
jl
scas
es
sub
push
pop
inc
inc
pop
loopne
lods
sub
add
cli
pop
clc
fnsave
das
or
adc
lcall
andl
pusha
and
add
xor
adc
in
hlt
dec
ja
xchg
sub
sbb
mov
ljmp
fidivrs
jmp
adc
adc
mov
ds
call
inc
sbb
inc
hlt
test
mov
add
pop
inc
dec
mov
gs
xchg
test
add
adc
push
cli
mov
inc
lahf
push
pop
cmp
cwtl
adc
push
ret
imul
push
sub
cltd
in
and
sub
xor
fldcw
xor
out
fcom
pop
data16
shll
sahf
dec
pop
aam
sub
cli
idiv
sbb
sub
mov
das
inc
das
push
outsl
adc
cs
aam
in
sti
out
adc
pop
dec
sbb
inc
arpl
push
pop
inc
pop
cld
cltd
jge
push
iret
stc
test
xchg
mov
or
outsb
dec
sahf
pop
fstp
scas
popa
push
dec
pop
dec
nop
xlat
int
mov
sbb
and
push
fwait
mov
jmp
stc
mov
jno
stos
ljmp
adc
jb
dec
aaa
jns
cmp
je
stos
pop
scas
jbe
cli
pop
cmp
and
pusha
mov
inc
and
icebp
nop
mov
popa
jmp
xchg
mov
sbb
mov
divl
das
popa
pop
xor
outsb
add
imul
dec
aam
adc
sub
call
outsb
cli
inc
loope
jnp
lock
mov
or
inc
mov
aas
push
and
in
or
sbb
mov
jb
mov
push
dec
outsb
je
sahf
pop
iret
sub
sub
fs
xchg
inc
mov
orl
stos
inc
into
data16
fnstcw
out
pop
xchg
bound
stos
in
push
jmp
adc
bound
shrb
push
mov
add
mov
test
push
jp
adc
add
int3
mov
inc
mov
dec
nop
jmp
mov
push
mov
popa
scas
outsb
xchg
add
jle
out
pop
or
jp
xchg
mov
xchg
xchg
dec
jmp
mov
xor
fdivr
das
nop
xor
push
ja
and
pop
iret
ja
dec
cmp
ret
pop
into
jge
lret
push
loop
sub
sbb
cli
imul
xor
int3
dec
add
inc
mov
outsb
push
test
jbe
jbe
out
mov
adc
mov
cmc
pop
mov
shlb
je
push
rcrb
jae
pop
inc
out
jns
idivl
jl
pop
and
add
sbb
insl
icebp
outsl
mov
inc
mov
pushf
jnp
push
test
sti
pusha
push
scas
adc
inc
repnz
aaa
cmp
nop
jge
or
push
out
mov
mov
test
loope
repz
in
push
mov
fwait
jae
push
jg
add
push
push
mov
jbe
push
shrb
pushf
mov
dec
aad
jge
loope
adc
xchg
mov
adc
mov
in
dec
push
ss
xchg
out
jb
or
addb
xchg
pusha
sti
and
and
insl
xor
xchg
mov
cmp
inc
jmp
mov
icebp
jb
shlb
imul
mov
clc
jns
inc
push
xchg
xlat
and
xchg
iret
cmpsl
sbb
xor
xor
das
cmp
imul
push
fldcw
lret
jbe
scas
pop
and
int
add
cmp
repz
xchg
pop
xchg
loopne
sbb
pop
adc
data16
dec
mov
pusha
dec
dec
nop
xor
pop
stos
fld
mov
mov
clc
dec
jge
add
jnp
push
stos
mov
pop
jns
sbb
pop
mov
xor
std
insl
shlb
call
mov
out
xchg
mov
les
mov
dec
popf
outsl
push
xlat
shrl
mov
in
mov
or
dec
push
adc
icebp
cltd
jne
clc
xor
jb
mov
push
mov
and
arpl
mov
mov
jae
cmp
cmp
int
mov
dec
xor
imul
add
or
out
dec
in
inc
lret
push
jle
in
mov
push
inc
orb
inc
es
push
mov
adc
repnz
jmp
loop
in
mov
push
test
insb
and
xchg
cli
cmpl
cmp
sbb
imul
or
sbb
pinsrw
push
mov
stos
sub
sti
ret
or
and
fcmovu
xchg
cmp
adc
dec
xchg
gs
imul
or
push
and
sub
xchg
xchg
iret
jle
xor
mov
inc
rcrl
or
mov
lret
rclb
mov
pop
fcomps
ret
not
jp
mov
or
pop
ret
std
jno
js
subl
inc
fs
imul
push
test
sbb
fdivl
jmp
cmpsb
xchg
mov
jp
int3
sub
adc
rclb
xchg
mov
or
inc
lods
pop
mov
in
pop
or
leave
data16
mov
or
jae
cmp
sbbl
add
stc
xlat
negl
dec
stos
clc
jae
cld
das
lret
xlat
enter
jmp
gs
xor
adc
lds
imul
mov
cwtl
aam
adc
push
pop
xchg
in
inc
adc
aam
jae
inc
imul
sbb
cmpsl
or
lret
in
and
popf
gs
pop
stc
shl
and
dec
dec
push
negl
arpl
cli
sbb
jo
cmp
push
sub
add
test
lods
jb
push
divb
mov
outsl
or
fs
lea
js
pcmpeqb
inc
push
sub
mov
imul
in
ret
mov
pop
repnz
push
stos
xchg
pop
sub
test
xorb
out
int3
loope
sti
mov
icebp
test
lods
rol
pop
inc
add
fiaddl
cli
loopne
xor
sub
xor
rcr
mov
and
add
pop
cmp
push
fwait
js
imul
add
leave
push
out
aam
insb
sub
ja
add
xchg
pop
sbb
push
lock
dec
shlb
dec
pushf
stos
and
mov
sub
cli
shr
dec
add
xchg
ds
lea
mov
lods
cmpsl
std
mov
inc
push
cltd
mov
imul
sti
sub
stc
or
inc
or
inc
xchg
into
sti
jmp
jne
popf
int
mov
push
dec
les
xchg
jnp
mov
mov
xchg
in
push
jecxz
jecxz
mov
cltd
jbe
pop
fisubrl
xor
ret
adc
mov
add
idiv
flds
push
inc
lods
or
jno
cltd
popf
jne
dec
fs
and
lods
cld
shll
sub
loope
add
mov
mov
fistps
nop
test
mov
push
test
stos
fidivrl
jnp
xor
mov
xchg
in
scas
jmp
mov
and
int
ss
xor
je
jle
push
add
xor
jbe
cli
pop
pop
sub
icebp
test
repnz
and
mov
sti
or
push
push
sahf
arpl
dec
add
add
cmc
jae
dec
add
out
inc
jbe
xchg
xorb
mov
shr
ds
clc
imul
cmp
cmpsb
sub
xchg
cs
sub
and
fisttpl
cmc
lret
jmp
jns
lcall
nop
sarl
xchg
loope
and
fwait
rcrb
shrl
call
mov
mov
out
push
std
lods
fcoml
xor
sub
or
xorl
xchg
cli
pusha
mov
mov
and
dec
mov
add
inc
and
inc
shlb
icebp
ret
inc
mov
push
sub
idivb
mov
adcl
rcrb
push
mov
lock
das
nop
testb
jmp
cmp
pop
sub
xor
cmp
push
mov
mov
inc
leave
addb
pop
ds
iret
scas
es
jno
or
xor
mov
adc
std
add
stos
stc
inc
dec
mov
dec
dec
mov
loop
push
in
and
bnd
leave
pop
mov
add
mov
sbb
outsl
adcl
adc
mulb
arpl
shrb
add
stc
cmp
daa
pop
jle
xor
into
xlat
pop
jl
xchg
or
jbe
inc
sarl
sbb
mov
sahf
mov
xchg
pop
mov
mov
mov
dec
xor
test
mov
sbb
aas
sbbb
and
addr16
push
arpl
dec
cmp
lea
in
cmp
cltd
ds
dec
scas
sub
push
outsb
or
sub
sub
pop
xor
xchg
mov
mov
sbb
jmp
cmp
jmp
pop
inc
repz
cmp
push
arpl
orb
das
in
mov
das
fmulp
sti
jnp
shll
fistpl
dec
pop
add
ret
sbb
and
xor
jle
mov
aam
mov
jp
fidivs
push
adc
xchg
push
sbb
xor
mov
pop
mov
mov
lods
mov
jnp
fiadds
insb
mull
shll
xor
pop
add
and
jmp
pop
jecxz
xchg
jecxz
sub
dec
sbb
addr16
push
push
loopne
jnp
sub
orl
jb
pop
ja
inc
jle
call
cmpsb
lods
pushf
cmpsl
clc
mov
jp
cmp
mov
xor
lods
jns
jne
xchg
icebp
stos
incb
ret
ja
dec
fwait
sub
dec
mov
xor
mov
pop
xchg
imul
mov
cmpsb
test
jae
fsub
stc
mov
iret
jne
stos
sbb
hlt
jl
and
sub
pop
mov
lods
xor
ss
sbb
lea
lock
test
addr16
in
and
push
in
aam
push
in
mov
sbb
push
push
pop
out
aad
cmpsb
cmp
popf
call
push
mov
insb
ss
xchg
in
pop
cmpsb
xor
mov
loop
sub
gs
jae
push
mov
inc
xor
jae
inc
lahf
and
dec
ds
inc
mov
xchg
mov
and
lods
ror
adc
jb
jmp
push
cmp
and
lcall
jp
cld
jne
sbbb
sahf
or
nop
push
fidivrl
rorl
xchg
testb
negl
mov
lods
pop
adc
inc
repnz
lea
or
and
js
insl
dec
addb
test
or
mov
sub
mov
int3
outsl
jp
sub
stos
mov
mov
shll
mov
mov
addr16
mov
inc
xchg
pop
lret
mov
push
cltd
pop
jnp
xchg
pop
out
cmpsb
or
ja
test
cld
xchg
mov
lcall
loope
or
sub
pop
xchg
js
cmp
loopne
or
add
lahf
rcl
add
out
icebp
cmp
xchg
jnp
push
xor
inc
xchg
pop
or
add
aas
xlat
fs
lcall
and
or
aad
imul
mov
popf
xor
sbb
test
cmc
pushf
xchg
and
mov
fadds
or
daa
dec
and
pop
push
xchg
add
into
push
sub
push
xor
cli
push
ljmp
fisubrl
jne
push
mov
punpcklwd
movsl
popw
pop
decl
loopne
movsb
hlt
push
adc
xchg
pushf
fstp
mov
loopne
sbb
or
and
cmp
or
movsb
jg
mov
enter
sub
adcl
fsubp
mov
sbb
mov
add
and
xchg
xchg
mov
cmpsb
ret
mov
adc
adc
addl
les
and
mov
sahf
and
mov
stos
jle
ret
mov
outsl
push
cmp
fcompl
xchg
addl
mov
adc
icebp
and
mov
jns
inc
mov
lcall
pop
cmc
pop
push
sbb
rorl
and
jge
rcll
mov
outsb
add
ja
or
fcomps
push
outsb
jp
xchg
jg
and
cwtl
xor
or
jns
sub
stos
push
nop
je
add
out
xor
mov
jp
inc
cmp
inc
inc
cmc
and
out
sub
cld
jb
jo
ljmp
ljmp
addr16
lds
pop
cmp
jb
lcall
xor
adc
test
in
nop
add
out
adc
lods
gs
int
in
dec
add
and
icebp
mov
jnp
sub
mov
cmp
pop
adc
fisubrs
pop
pop
pop
pop
fmul
pusha
out
test
xor
add
shlb
sbb
cmp
inc
cmp
mov
leave
jnp
xchg
xlat
sbbb
and
xchg
lcall
out
jp
sahf
lcall
mov
popa
or
and
sbb
xlat
jge
cs
cmc
mov
int
inc
xchg
mov
test
loop
xchg
sub
sti
xor
sub
lock
sbb
jno
dec
dec
mov
pop
enter
scas
data16
mov
mov
adc
jnp
scas
iret
loope
jg
inc
sub
mov
addb
leave
xchg
test
in
fsubl
ret
test
add
add
pop
shlb
xor
pop
xchg
push
in
jo
aam
lret
lcall
jnp
repnz
dec
jo
add
add
pop
iret
icebp
sbb
lds
imul
add
inc
negb
shrb
imul
cmpsb
push
dec
mov
add
mov
in
sbb
orl
loop
js
dec
js
iret
imul
sub
lods
push
sbb
stos
xor
rclb
pop
sub
cmp
into
add
out
or
fcomps
dec
inc
lcall
pop
xor
and
add
sbb
adc
es
es
adc
out
daa
jno
jns
lahf
lock
sbb
cltd
push
je
pusha
and
mov
sbb
repnz
mov
add
call
xor
aas
sub
insb
int
outsl
mov
jmp
jne
push
cmpsl
mov
adc
shrl
repnz
inc
loope
lock
in
pop
je
outsb
and
sbb
mov
lcall
xchg
lret
cmc
adc
ds
inc
inc
xchg
jno
out
inc
outsb
popa
dec
mov
sbb
xlat
xchg
push
push
fwait
subl
adc
jno
gs
mov
cmp
test
push
addl
sbb
mov
movsb
sbb
les
pop
jecxz
sub
adc
sbb
rclb
and
cmpb
dec
xchg
mov
cmc
sub
xor
fnstsw
std
inc
pop
mov
or
xor
nop
decl
int3
and
inc
cld
repnz
js
xorb
jmp
push
insb
decl
repz
lds
lods
roll
rep
cmp
int3
jb
and
xor
loope
clc
les
stos
ret
fucomi
sbb
inc
jl
xchg
andl
in
push
ret
jl
shll
adc
adc
data16
insl
pop
push
add
lahf
data16
es
pop
xor
mov
daa
adc
icebp
in
mov
sub
mov
lods
adc
loopne
popf
xchg
mov
fwait
jmp
insl
mov
pop
out
call
lods
nop
adc
mov
mov
push
mov
sub
das
push
xorb
and
pop
dec
out
sub
stos
ficompl
faddp
mov
sbb
and
adc
fadd
adc
pushf
pop
dec
inc
mov
cltd
ljmp
outsb
lret
loop
cld
fists
popa
mov
cmp
loope
cmp
sub
lcall
test
gs
mov
pop
es
pop
or
jnp
sbb
outsl
push
add
mulb
jno
xlat
sbb
shll
sbb
daa
mov
or
jns
lcall
dec
in
cmc
sub
fs
addb
mov
xchg
mov
stos
sbb
cltd
push
repnz
ret
pop
and
add
adc
icebp
rorl
test
gs
imulb
push
mov
fidivrl
lods
lahf
aas
dec
in
push
jge
mov
mov
hlt
scas
xor
mov
pop
mov
icebp
or
and
lret
mov
bound
clc
cmpl
add
filds
jle
xor
fimuls
in
out
or
adc
mov
std
inc
movsl
cmp
mov
add
lahf
cmp
jo
pop
and
lds
pop
xor
shll
mov
add
xor
call
pop
inc
mov
sar
jns
mov
jb
pop
push
int
inc
adcl
jp
adc
std
fwait
jno,pt
lahf
cs
je
inc
pushf
pusha
mov
cmpsl
outsl
xor
mov
pop
cmp
push
negl
inc
xchg
xchg
fwait
movsl
inc
popf
fidivl
or
pop
mov
inc
mov
dec
mov
adc
popa
xor
repnz
fwait
dec
ret
inc
push
pop
sub
dec
clc
or
repnz
or
sbb
sub
cltd
jno
and
and
jae
jp
push
iret
imul
aas
mov
iret
mov
inc
and
add
jbe
push
mov
push
sbb
or
outsl
push
scas
sub
pop
mov
pop
fldl
jmp
leave
cmp
push
push
xor
and
xlat
jne
lret
dec
aam
pop
dec
movsb
es
inc
insl
movsl
addr16
loopne
popf
pop
sbb
sti
xchg
pop
ja
xor
mov
subb
xor
out
das
stc
lret
into
adc
sbb
loope
fidivrs
pop
leave
dec
cmp
cmp
enter
cli
jmp
dec
mov
inc
xchg
out
lods
cmpsb
divb
xchg
loope
cld
cmp
loop
repz
pusha
clc
and
inc
fbstp
cmp
add
fdivrl
insl
popa
pop
lock
mov
or
pushf
adc
jmp
cmp
out
fcoms
cld
enter
xchg
xor
mov
xchg
or
pop
jg
mov
pop
ljmp
push
lahf
ss
mov
test
jne
adc
jnp
inc
addl
arpl
daa
mov
sahf
je
es
lret
inc
or
aam
mov
inc
and
test
sbb
mov
mov
test
adc
add
and
shrl
push
cs
leave
mov
fbld
jecxz
outsb
sub
adc
cmp
inc
imul
pop
loopne
pop
cli
jl
jb
pop
push
in
adc
jle
fisubl
xchg
push
fsubrl
icebp
jns
jne
add
mov
movsb
pop
cld
push
add
cli
cmp
pop
hlt
hlt
cli
cmp
lret
cmp
pop
sbb
shlb
mov
pop
sbb
test
roll
push
fwait
cmp
or
and
insb
jnp
loop
fmul
lahf
cltd
sbb
pushf
inc
insl
jne
sub
jo
ja
mov
and
pushf
sbb
push
dec
push
ss
movsl
xchg
sbbl
jge
sbb
mov
int3
rcr
mov
out
out
lret
mov
mov
pop
adc
push
bound
jae
adc
pop
in
je
cmp
push
insb
cwtl
into
int3
in
mov
icebp
stos
addr16
jp
lret
nop
insl
imul
xor
outsb
mov
pop
dec
add
push
xchg
inc
outsb
outsl
and
mov
hlt
cwtl
cmp
adc
out
jb
test
bnd
push
test
pop
imul
outsl
pop
cli
xchg
mov
fists
stos
mov
arpl
mov
and
movsl
insb
lea
jb
or
and
mov
filds
jl
cwtl
sahf
push
jmp
push
push
push
cmpsb
repnz
dec
bound
negl
rcl
out
fwait
stos
and
xchg
lods
imul
leave
xor
pop
ja
mov
stos
xchg
fucomp
movsb
mov
lods
cli
mov
sbb
cli
loop
outsl
ds
rep
lods
daa
inc
xchg
dec
mov
and
mov
mov
pop
adc
mov
push
out
pushf
jnp
cmp
aas
push
xor
push
mov
popa
lods
xlat
pop
adc
add
jbe
in
pop
popa
sub
insb
mov
xchg
lcall
mov
sub
adc
jp
mov
ja
ficoml
pop
push
loop
test
push
and
inc
and
xor
mov
lahf
jno
loopne
or
fiadds
rcl
mov
fs
xchg
clc
inc
jbe
es
inc
push
pop
push
sbb
shl
stc
mov
test
das
dec
cmp
int3
lods
jmp
jae
cs
mov
inc
into
mov
mov
pop
test
sbb
sub
cltd
cwtl
mov
icebp
ficoms
sub
cltd
lcall
dec
mov
clc
mov
mov
out
lods
pop
lret
pop
or
inc
cmpb
loope
push
test
call
shrb
jns
repnz
fcmovb
inc
add
orb
jmp
out
sub
xor
stc
push
xchg
mov
mov
adc
inc
les
lock
mov
add
hlt
inc
pop
popl
mov
ficomps
mov
mov
xchg
mov
dec
lock
or
add
ds
subb
inc
inc
or
cmp
mov
or
fdivs
mov
cmp
adc
or
fistpl
arpl
rorb
lcall
mov
movsb
stos
scas
mov
rol
gs
movl
push
jbe
aas
sarl
fstl
and
xor
andps
aam
enter
xchg
scas
fdivl
jg
popa
inc
push
ss
rclb
pop
loop
mov
fs
adc
or
loop
xor
mov
inc
insb
mov
jne
or
add
push
test
aam
mov
es
sbb
pusha
movsb
inc
xor
xor
in
lcall
cltd
xchg
cmc
sbb
icebp
rcrb
rorb
loope
lret
movsl
out
pop
sbb
rcll
dec
mov
ds
lods
les
mov
adc
jno
push
out
bnd
mov
out
lret
adc
sbb
inc
subl
xor
fsubrl
pop
pop
cmp
in
or
insb
lds
jno
mov
popa
ss
mov
or
loop
fstp
lock
ret
cmpsb
push
cwtl
push
cltd
rorl
inc
sbb
lods
push
mov
mov
xchg
movl
ret
loopne
jns
jae
in
adc
nop
cmp
push
jge
xchg
mov
cmp
repz
ret
pop
pop
or
mov
shrb
push
dec
sbb
xor
dec
sahf
and
cwtl
xchg
mov
mov
pushf
xchg
das
and
push
rcll
add
outsl
icebp
dec
aaa
fisubrs
loope
and
pop
sbb
int3
push
into
xchg
sbb
icebp
or
loop
or
mov
sub
lods
into
lret
ret
xlat
cli
pop
mov
pop
adc
jge
insb
jl
loope
xchg
add
jg
mov
add
lahf
movsb
lock
add
gs
in
fsubp
rolb
mov
pop
stos
push
pop
cld
insb
mov
or
add
pop
cmc
daa
dec
cwtl
jge
nop
and
mov
inc
fldl
sub
jbe
shll
in
das
lret
inc
sbb
shll
out
jle
mov
sbb
push
xchg
aaa
fimuls
mov
in
jno
in
inc
stos
and
movsb
aad
sbb
loop
adc
test
aam
fisttps
popa
xor
push
push
lret
sub
andb
mov
stos
loopne
xor
push
sbb
mov
adc
sub
mov
pop
les
pop
pushl
or
dec
jecxz
cmp
sub
mov
xor
mov
daa
add
fnstsw
aas
arpl
filds
xor
inc
or
out
mov
lods
out
out
add
test
xor
jns
not
xlat
pop
enter
popf
rcl
shll
ljmp
inc
enter
xchg
clc
push
movsl
pusha
pop
mov
in
stc
adc
jle
cmpsl
rorl
inc
adc
add
stc
sub
imull
fisttps
xor
ficoml
mov
ss
add
ret
pop
fsts
mov
inc
pusha
std
sbb
dec
push
xor
lahf
outsb
scas
aam
push
lds
adc
ljmp
repnz
xor
or
sbb
push
test
sbb
lret
mov
js
dec
mov
fcoml
lret
and
xchg
sti
pusha
ficoms
outsl
sbb
dec
push
xchg
adc
mov
lds
or
add
push
pop
ret
mov
or
stos
scas
lea
inc
mov
loope
inc
test
rorb
scas
sbb
pushl
xor
out
rorl
scas
aas
cmp
out
addl
fpatan
push
fdivrp
movl
jecxz
cs
add
xchg
jle
mov
add
xchg
mov
jle
js
les
sub
add
icebp
out
je
ds
out
xor
jno
dec
movsb
sub
enter
fstpl
scas
adc
mov
mov
pop
lcall
sub
decb
mov
mov
clc
dec
loope
cmp
fmul
push
repz
dec
sub
xchg
pop
int3
hlt
ss
lods
mov
xchg
in
js
cmc
cmc
hlt
push
push
insb
sub
mov
jb
dec
aas
rcrb
mov
and
push
daa
and
mov
mov
loope
cmpl
loope
in
dec
ds
sarl
popf
aaa
fcompl
inc
fidivl
out
jno
mov
fsubl
pushf
imul
dec
cmpsb
daa
or
int3
dec
aad
inc
xchg
in
cmpsl
sub
and
jg
lret
push
imul
sub
out
mov
in
mov
leave
dec
jmp
mov
sbb
push
or
iret
mov
jns
dec
shll
aaa
mov
cld
push
xor
xor
loopne
push
ja
dec
rolb
repz
push
frstor
and
mov
cmpsb
and
out
and
sar
aam
mov
sub
cs
cwtl
lods
mov
fisttps
jo
hlt
push
lahf
inc
dec
push
hlt
test
inc
jno
pushf
sbb
mov
jo
mov
ljmp
mov
ja
subb
negb
setle
sbb
scas
in
jp
or
sub
pop
pop
dec
fstl
dec
sbb
cmp
jle
jmp
mov
lods
jg
addb
add
lods
fisubrs
repz
out
or
cmp
and
jl
pop
pop
xchg
in
xchg
pop
nop
xchg
xchg
jne
mov
cmp
cmp
outsb
and
jo
xor
in
rcrl
clc
pusha
sub
outsl
sbb
bound
pop
fs
ret
sti
or
cltd
js
cmp
jle
or
cmp
idivl
insb
push
push
in
sbb
sbb
dec
notl
dec
and
cmp
out
daa
dec
je
inc
addb
jb
push
jmp
pop
out
mov
out
sub
mov
ss
mov
sbb
lds
inc
rcll
push
mov
adc
add
pop
mov
xor
stos
jbe
mov
lret
push
and
int
inc
and
xor
pop
filds
pop
sbb
push
stos
mov
mov
adc
sti
and
or
into
or
mov
mov
stc
add
call
sbb
mov
test
sarb
mov
scas
or
rcrb
je
push
ss
jb
fsts
shlb
and
mov
pop
pop
adc
mov
cmpsl
jo
jle
mov
dec
das
and
xchg
in
xchg
jp
mov
mov
dec
dec
repz
sti
cmp
gs
dec
cld
push
scas
dec
lcall
adc
lods
mov
test
das
xchg
insl
add
clc
nop
cwtl
add
in
pop
jnp
lods
sbb
push
insl
jle
addl
fwait
inc
out
pusha
xchg
repnz
jmp
xor
ret
lock
mov
stos
mov
addr16
into
lret
jns
add
test
push
in
inc
rcll
jge
repz
fstpl
popf
cmp
and
inc
or
scas
adc
lods
sti
sarb
push
jo
adc
into
pop
pop
and
int
popa
mov
sbb
pop
push
pushf
adc
insl
int3
fdivrl
daa
mov
outsb
sub
insl
nop
rolb
push
push
sbb
sub
aas
mov
fistps
outsl
lret
sub
popa
rcl
sbb
push
pop
cmp
add
inc
xchg
push
push
cmp
mov
arpl
ja
nop
add
enter
sub
in
inc
sahf
test
jl
int
ret
cmpsl
icebp
gs
fsubr
push
aam
or
pushf
push
adc
sub
push
cli
and
shlb
push
subb
xchg
je
add
mov
push
xlat
aas
or
shr
fcompl
aas
adc
sub
adc
inc
mov
fidivrl
jb
mov
pusha
sbb
sub
inc
and
or
loopne
shl
adc
xor
adc
ss
fcomps
imul
pop
xor
lods
mov
mov
pop
xchg
rclb
mov
popa
xlat
idivl
cmp
pop
add
xor
mov
xor
ds
pop
dec
sgdtl
jns
push
daa
fidivrs
das
dec
xor
sahf
mov
or
out
push
imul
jmp
push
pop
orl
xor
pop
fsubl
iret
fcoms
stos
shl
or
xor
leave
dec
add
test
mov
xchg
icebp
cltd
iret
int
ja
push
mov
xchg
enter
sub
jo
test
mov
pop
add
dec
adc
scas
inc
mov
jbe
stc
pushf
mov
fsubrs
fwait
les
leave
inc
mov
dec
loop
cwtl
mov
adc
xor
jmp
cmp
pop
lock
dec
cwtl
dec
fldl
adc
sbb
fnstcw
cltd
mov
fldenv
dec
fadd
cmp
cmp
fnstsw
pop
daa
adc
push
pop
icebp
cmp
sbb
das
orb
or
or
cltd
xlat
addr16
adc
mov
jmp
pop
push
arpl
bound
add
mov
lock
lock
xor
sub
pop
mov
sbb
mov
jns
loope
cmp
mov
pop
mov
imul
or
add
pop
cli
incl
lahf
jl
adc
test
jbe
xchg
bound
mov
push
ja
ret
sbb
insb
sub
mov
scas
push
push
adc
jp
out
imul
push
mov
push
add
mov
pop
mov
test
jne
mov
clc
js
and
fidivrs
in
xchg
mov
dec
push
lds
dec
pop
xor
movsb
or
pop
or
jecxz
psubusb
and
jbe
sub
jb
test
gs
mov
push
adc
aaa
cmpsl
fs
jns
scas
ret
sbb
mov
idivb
push
inc
cmp
sahf
loope
out
inc
sub
fimull
arpl
ficompl
cmp
mov
clc
stc
test
test
mov
ljmp
rorl
mov
mov
fcoml
add
faddl
dec
mov
popf
subb
jle
test
and
push
movsl
repnz
mov
js
and
outsb
inc
ja
ljmp
mov
in
loope
in
lret
xlat
aad
fnsave
mov
out
movsl
js
jae
hlt
sahf
into
or
aaa
sbb
inc
inc
subb
xchg
dec
mov
inc
mov
sub
push
mov
jmp
int3
mov
into
cmpl
outsb
movsl
mov
inc
add
mov
mov
cs
in
test
sbb
cmp
dec
stc
jge
or
ret
pop
out
mov
or
sub
inc
fsts
xor
push
enter
stos
and
mov
sbb
stos
inc
mov
add
cmp
lret
sbb
dec
xor
in
nop
repnz
inc
lea
cmp
pop
outsl
cs
add
lret
sub
mov
call
and
dec
call
fs
and
in
xlat
aad
pushf
xorb
pop
daa
pop
sbb
shl
xor
inc
daa
shll
out
sub
or
ret
add
xorb
xchg
pop
je
arpl
mov
sahf
sbb
mov
jge
loopne
dec
notl
dec
lahf
js
cmp
gs
mov
inc
pop
mov
fiaddl
popa
jo
cmp
es
add
cli
std
adc
stos
adcb
sti
jne
mov
adc
mov
adc
nop
pop
mov
call
adc
je
inc
shrl
call
enter
leave
push
cmpl
je
hlt
add
jns
dec
cmp
imul
imul
aam
adc
adc
aaa
and
dec
cmc
xlat
adc
xchg
mov
push
call
sahf
je
jmp
loope
and
cli
add
cld
cs
mov
mov
jp
movsb
lock
dec
inc
cmpsl
loopne
stos
inc
sbbb
outsl
das
sbb
jle
enter
mull
out
push
add
nop
adc
xchg
push
orb
sbb
add
xor
fmuls
and
sti
and
xorb
mov
fstpt
scas
or
add
iret
dec
dec
adc
or
inc
in
dec
push
addr16
out
outsl
test
loopne
jbe
push
lock
jbe
mov
out
mull
lea
push
or
aas
lret
scas
pushf
jnp
js
int
push
xor
jae
or
adc
jle
mov
xchg
lcall
pop
cmp
inc
imull
add
imul
mov
es
push
popf
mov
push
adc
stos
out
lahf
fs
in
aam
arpl
pop
mov
mov
movsb
mov
mov
xor
loope
loop
mov
enter
push
clc
add
int3
arpl
shlb
cmpsb
fs
mov
xor
insb
jns
test
insl
out
cmpsl
sub
ljmp
add
adc
sbb
mov
cmpsb
out
pop
dec
mov
in
jp
mov
jmp
popf
lock
xor
das
daa
add
imul
xor
in
inc
fptan
and
or
roll
clc
push
mov
imul
mov
pop
leave
clc
scas
subb
int
dec
daa
dec
imul
les
add
xor
xchg
leave
pop
pop
ljmp
imul
movb
mov
lsl
xor
jp
mov
insb
jl
mov
pusha
jns
data16
cs
mov
inc
xchg
out
aaa
out
xor
test
inc
push
es
std
movsl
sbb
mov
arpl
adc
adc
mul
lret
leave
aaa
lret
nop
push
mov
mov
add
push
mov
fs
jne
dec
mov
bound
jg
decb
mov
mov
dec
pop
jmp
jg
and
add
stc
pusha
jno
dec
jl,pt
push
or
lock
pop
subl
pop
cmpsb
pop
inc
push
cwtl
inc
cmpsl
mov
movsb
rcr
inc
mov
inc
push
sub
sub
ret
mov
fs
aad
scas
push
ja
shlb
lds
test
scas
lcall
and
adc
jp
mull
and
sbb
pusha
jl
sbb
mov
shl
xchg
rolb
repnz
xchg
aad
mov
in
cwtl
mov
pop
repnz
inc
stos
push
jle
insl
ljmp
fldenv
push
add
insb
lock
int
sub
cwtd
or
jp
pop
mov
mov
pop
push
rclb
out
stos
sbb
test
out
es
jns
ficoml
lods
fmull
int
dec
adc
or
xchg
rclb
and
bound
imul
or
ja
and
mov
jne
hlt
pop
pop
loopne
fldl
or
rcrb
fnsave
jnp
ss
sub
xchg
or
or
xor
js
mov
or
adc
push
ret
sbb
adc
test
dec
xor
js
inc
movsb
pop
push
xchg
icebp
push
nop
insl
pop
ret
daa
mov
cltd
test
and
jge
xor
sti
fldl
push
addr16
sahf
push
sub
rcrb
mov
jle
cmpsl
stos
jbe
outsl
or
xor
es
mov
or
and
fs
out
jno
mov
cmc
xorb
ds
push
jbe
cmp
testb
or
mov
cltd
mov
add
in
add
call
cmp
aad
mov
or
push
ret
pop
jge
push
popf
mov
inc
in
lods
xchg
aad
cmp
insb
dec
call
cmp
sub
push
jmp
sub
pusha
addb
jbe
mov
add
sub
inc
dec
dec
add
and
jno
jg
pop
add
mov
cmp
mov
or
add
lahf
in
xor
adc
mov
stc
jg
std
inc
stos
cmp
lds
imul
into
push
push
in
lret
dec
gs
mov
or
lock
fwait
enter
js
shrb
jmp
insb
or
scas
pop
dec
cmpsb
neg
out
sbb
sahf
mov
mov
pop
enter
movsl
push
cmp
pop
pushf
movsb
pop
xchg
loopne
sub
add
cld
imul
xchg
or
xor
xor
popf
sbb
cmpsb
in
add
pusha
ret
pusha
sbb
xchg
mov
cmp
rcrb
decb
fwait
not
aaa
sarb
jmp
dec
mov
push
adc
roll
xchg
repnz
mov
arpl
push
pushf
in
arpl
push
std
ljmp
pop
enter
push
out
push
das
les
outsl
imul
ss
iret
cltd
xchg
js
daa
lcall
repnz
jne
aad
cmp
rorb
xchg
push
jns
loope
or
and
or
fdivl
lock
shll
rcr
and
cmpsb
into
gs
movsb
out
enter
into
movsb
mov
scas
or
mov
fisubs
stc
inc
insl
or
inc
pop
ja
cmpsb
jo
je
pop
scas
std
fdivl
pop
xor
scas
jae
cmp
mov
movsl
les
push
dec
lods
sbb
clc
jle
sarb
clc
in
sbb
lcall
out
pop
jnp
lcall
jns
cmp
or
std
lock
iret
xchg
sub
jle
mov
inc
out
jecxz
sub
pop
call
movsl
add
data16
push
jecxz
sbb
cmp
fs
dec
pop
jmp
and
dec
aaa
xchg
sbb
lahf
sbb
loop
inc
sub
inc
lods
and
xorb
mov
jmp
inc
push
ds
mov
push
dec
jo
cld
or
mov
cmp
int3
je
mov
mov
cld
pusha
or
shrl
addb
xchg
inc
adc
pop
mov
adc
xor
adc
je
inc
xchg
push
movsl
inc
push
adc
dec
pop
adc
sbb
push
pop
aam
xor
mov
rcrb
stos
fiadds
rolb
cmp
imul
jl
push
mov
mov
imulb
mov
or
clc
cmpl
sbb
pop
dec
enter
dec
dec
inc
sbb
pop
jl
or
mov
in
sbb
in
lods
movsb
outsb
jae
sub
jne
in
dec
cld
ret
mov
movsb
jmp
dec
call
scas
jns
js
repnz
fcmovnu
add
adc
add
add
scas
out
push
leave
dec
xchg
sub
jecxz
aaa
lods
cmp
icebp
cmpsl
dec
int
sbb
cld
cmpb
int
jg
push
shrl
pop
test
cmp
mov
or
pop
pop
cmp
sub
mov
mov
cmpb
rcll
adc
call
imul
fld
hlt
and
jb
into
in
leave
or
shlb
mov
jb
jle
mov
pop
mov
inc
dec
jecxz
xor
loop
xor
jns
imul
fidivrs
pop
jl
call
dec
cmpsb
mov
xchg
lock
inc
or
cmp
xchg
scas
pop
sahf
hlt
push
mov
cli
mov
rcr
push
jge
addr16
cli
mov
adc
ljmp
lea
cwtl
cmp
into
mov
xorl
lret
outsl
in
pop
push
in
dec
test
sub
push
in
push
mov
aad
jno
push
addl
pop
sub
or
cs
int
fs
sbb
mov
imul
cmpsb
mov
repnz
push
inc
push
lock
test
fsubrs
dec
outsl
add
push
sub
outsl
mov
rcll
sub
inc
test
fiadds
cwtl
and
in
outsb
iret
mov
sahf
rclb
mov
xchg
push
push
addl
das
or
inc
pop
or
cmpsb
insl
je
and
jl
out
or
loop
pop
das
out
mov
xor
das
pusha
shlb
add
lret
out
push
je
lret
adc
ja
adc
fiaddl
pusha
insl
std
adc
pop
je
mov
lods
push
push
sarb
sub
outsb
movsl
div
ret
ror
jle
lock
inc
stc
adc
sbb
ss
xchg
in
out
jb
jbe
or
pop
xor
rolb
xchg
jb
in
ds
sub
les
pop
push
push
adc
add
push
cmp
push
ret
adc
fcoms
cmpsb
int
icebp
dec
sbbb
mov
push
xor
pop
lds
ret
mov
jl
or
sti
scas
shrl
lcall
js
aad
je
mov
mov
loop
lock
sbb
jbe
xor
sub
sbb
imul
cmpsb
push
inc
xchg
das
pop
jle
pushf
int
adc
adc
jle
inc
dec
xlat
mov
mov
stos
clc
push
repz
clc
mov
cmp
js
sti
fistl
and
fwait
nop
pop
test
mov
mov
dec
test
dec
pop
push
adc
push
int3
jbe
nop
push
mov
mov
sti
mov
mov
add
inc
mov
cmpsb
loope
ret
or
repz
hlt
or
pushf
aam
addr16
popf
jle
das
rorl
jle
popa
add
fcompl
pop
aas
movsb
popa
mov
aaa
push
xor
xor
outsb
jle
mull
mov
mov
mov
xchg
xlat
cmp
rorb
and
jbe
or
loop
arpl
fs
scas
push
repz
shrb
rcl
ret
cmp
and
xchg
ret
jno
mov
adc
pop
pop
mov
icebp
add
mov
xchg
fcmovu
pop
jg
push
xchg
jecxz
lret
int3
movsb
cmp
inc
rcl
or
inc
jecxz
jnp
and
push
add
fidivrs
jmp
cld
insl
jne
cmp
fs
sub
xchg
and
shrl
pop
push
sar
ret
sbb
rol
xchg
pop
dec
adc
std
lock
fistpll
ja
xchg
out
testb
dec
shll
xchg
lods
je
es
shlb
das
mov
inc
pop
adc
and
sbb
sahf
out
lcall
imulb
pushl
test
stos
pusha
or
lods
adc
lds
jle
push
push
xor
xor
stos
cmc
add
rcr
pop
aaa
mov
ljmp
or
add
sbb
mov
jp
rcrb
es
je
push
mov
ds
sub
popa
cwtl
sarl
inc
adc
in
jp
test
lgs
stos
sbb
data16
xor
jbe
movsb
movsb
jmp
jge
cmp
or
xor
std
push
sbb
loope
stc
sub
mov
nop
cmpsl
mull
inc
mov
pop
subl
jg
xlat
cmp
adc
lahf
lret
pop
cmp
scas
mov
dec
fs
xor
add
sti
push
push
cmpsl
pushf
fdivs
les
fcomps
fucomi
outsb
shlb
pushf
sub
test
std
xor
stc
push
cmpsl
pop
movsl
dec
cmp
pushw
int3
fidivrl
dec
cmp
imull
ds
dec
stc
div
andb
enter
movsb
scas
push
push
fbld
xchg
jns
jle
repz
adc
inc
push
inc
imul
cmp
mov
pop
aam
insb
rclb
push
ja
in
jp
or
sub
adc
pop
repnz
lock
mov
jmp
adc
sub
out
dec
mov
cmp
test
xchg
insb
jae
mov
and
popf
or
icebp
jo
pop
push
inc
mov
lret
repz
test
enter
pop
popa
pop
call
jbe
xor
icebp
sub
xchg
addps
jo
mov
pop
xlat
mov
dec
inc
sub
lods
out
xchg
lret
repz
mov
jge
mov
sub
lds
loope
test
and
aad
push
mov
mov
xchg
pusha
mov
fisubs
subb
dec
add
push
jge
push
fwait
lahf
mov
sbb
fisubrs
subb
pop
testl
aad
ds
mov
jno
inc
mov
sbb
nop
push
mov
addb
xor
adc
or
inc
lods
neg
xchg
dec
xor
fwait
and
fbld
mov
pop
and
mov
aaa
in
mov
jns
inc
sbb
add
xchg
push
jmp
mov
fisttps
stos
jl
inc
add
ss
lret
and
and
add
mov
ljmp
dec
or
aaa
push
pop
int3
and
cmpsb
add
or
mov
retw
cli
or
js
sbb
mov
aam
jnp
sbbb
sbb
fs
push
push
add
sbb
mov
and
xchg
push
mov
gs
cmc
dec
js
repnz
push
and
cmp
sub
leave
adc
adc
pop
adcl
pop
sbb
sbb
popf
jecxz
adc
ret
pop
and
mov
dec
test
mov
push
repnz
enter
xor
jo
loop
fwait
mov
cmp
jnp
push
add
xchg
or
xorb
test
cmpsl
ja
jo
stc
ret
movsb
jns
outsl
test
sti
rclb
hlt
mov
mov
loopne
jb
test
lods
mov
dec
cmp
insb
enter
jno
mov
mov
jbe
xlat
dec
pop
mov
xor
icebp
add
fists
mov
lock
ds
lds
sarb
add
cmpsl
shll
push
cmp
test
xchg
fcom
mov
scas
xor
mov
in
and
lods
jae
out
fs
sti
adc
dec
xor
pop
dec
iret
and
mov
xor
repz
pop
fcmovnbe
lods
fldpi
std
ja,pn
pushf
adc
cmp
test
pop
mov
mov
fwait
in
pop
fcomps
mov
push
lods
nop
loope
insb
orl
push
daa
xor
out
popf
lret
add
push
mov
or
stc
sub
mov
jle
lock
mov
repz
fcoml
pop
xlat
mov
and
movsl
das
push
mov
adc
and
shll
lods
pop
xlat
ja
push
or
stos
inc
stc
mov
xchg
aad
xor
bound
pop
jnp
sahf
push
ret
jmp
outsb
movsl
jmp
and
pusha
cmpsb
cld
and
and
es
aas
xor
gs
push
sahf
jb
dec
popf
imul
loopne
fdiv
cld
scas
cmp
add
pop
sbb
sbb
or
idivl
shll
aad
mov
js
push
cmpsl
or
pop
mov
and
bound
stc
push
push
dec
ljmp
mov
mov
divb
addl
fwait
lds
cmp
testl
mov
adc
lret
push
repnz
mov
xor
fs
push
mov
or
mov
dec
mov
repz
push
mov
stc
dec
jne
push
outsl
fimull
out
and
mov
dec
push
adc
xor
lret
mov
roll
movsb
xchg
nop
shlb
jbe
flds
ret
mov
in
cwtl
mov
xchg
xchg
in
xor
aad
mov
fwait
push
orl
nop
sub
test
cmp
pop
mov
fwait
sub
dec
dec
mov
mov
cmc
pop
pop
adc
in
xchg
sbb
xor
pop
mov
xchg
hlt
aas
das
cmp
enter
lahf
movsl
mov
mov
dec
insl
andb
bound
pop
cmpsb
inc
cmpl
outsl
fs
push
xchg
mov
jmp
js
ljmp
inc
xor
sub
xchg
push
mov
push
js
cmpsb
nop
adc
cmpsb
mov
jge
lds
mov
push
mov
dec
pop
pop
cmp
jo
fwait
test
in
jne
or
push
fsubrp
xorl
faddl
scas
sbb
push
cmpsb
popa
pop
mov
and
rolb
xchg
nop
sbb
test
cwtl
repz
mov
mov
js
sub
adc
fnsave
inc
cmpb
and
pop
in
ds
mov
cli
iret
push
jo
cltd
jb
test
jmp
inc
xchg
add
pop
and
cli
mov
psrld
jp
and
jne
cmp
jp
insl
scas
mov
test
fldl
mov
adc
stos
dec
jnp
or
or
sub
frstor
imul
pop
lcall
xchg
xchg
je
cmpsb
adc
movsl
test
int
aas
imul
scas
aam
inc
jmp
lds
inc
not
ret
push
imul
sbb
pop
and
mov
sub
jnp
push
cmp
mov
lahf
arpl
movsb
gs
sarb
xorl
xor
ss
ds
xchg
cmpsl
arpl
gs
cmp
inc
roll
out
mov
mov
xchg
fnstcw
in
call
orb
ss
stos
out
mov
roll
in
xchg
loope
push
divl
mov
lods
sbb
aam
inc
test
aam
stc
fwait
hlt
lods
stos
add
push
xor
or
je
adc
neg
mov
dec
subb
cmp
loopne
dec
mov
mov
fimuls
sub
xchg
hlt
fistps
shll
sub
inc
ret
xlat
sub
out
mov
and
movsb
ljmp
mov
push
pop
cmp
shrb
xchg
mov
mov
cmpsl
rcll
inc
mov
seto
sti
and
cmpsl
unpcklps
add
sbb
cld
lds
dec
sbbb
lock
in
cmp
push
cmp
adc
and
int
dec
add
or
les
sbb
fstpl
dec
lea
adc
imul
imul
cld
sbbb
out
and
cmp
sbb
and
ja
adc
in
push
mov
out
mov
pushf
add
enter
xor
or
jg
push
aad
jp
lret
out
aas
fidivrs
mov
mov
in
mov
pushf
mov
push
fdivrl
inc
pop
mov
leave
dec
sti
mov
pop
or
arpl
int3
jg
subl
clc
push
mov
push
subb
cmp
sub
popa
and
out
sbb
sub
scas
sub
lods
shll
pop
add
hlt
push
sbb
test
int3
pop
sbb
xchg
mov
sbb
jge
inc
ljmp
add
fmul
mov
or
dec
xchg
xchg
or
clc
jmp
lods
xchg
stos
xor
movsb
leave
int3
sub
test
dec
push
dec
cmpb
mov
mov
adc
inc
inc
jbe
adc
sub
or
rol
lea
aaa
mov
in
js
rolb
lods
or
ja
pop
adc
iret
or
in
add
xchg
xchg
add
sbb
je
bound
or
cmp
xchg
mov
out
aam
mov
mov
repz
jge
leave
ds
cld
popa
inc
jle
sbb
adcl
xor
test
xchg
and
mov
outsl
pop
cmpsb
mov
sarb
mov
push
imul
movsb
mov
push
xchg
rep
stos
xor
cmp
lret
pop
nop
out
xchg
jno
mov
mov
sub
aam
popa
pop
xstore-rng
cmpsl
ret
sbb
mov
xchg
mov
xchg
dec
adcb
add
insl
dec
shlb
xor
pop
xor
pushf
fisttps
and
hlt
jg
movsl
fcompl
fcoms
pop
into
insl
and
mov
inc
test
das
add
mov
jns
fdivrl
gs
movsl
aas
mov
jp
push
jle
cmpsb
dec
icebp
call
andb
or
cmc
shl
inc
push
aam
or
xor
fs
add
sti
inc
cmp
pop
movsb
roll
cmp
cmp
cmpb
mov
sbb
jbe
ror
mov
out
lea
push
jmp
cmp
lcall
fldl
insl
loop
pop
bound
cmc
cmp
lds
sbb
jbe
gs
xchg
icebp
scas
xor
negl
push
or
lcall
in
flds
mov
xchg
xor
xor
stos
jge
sti
sbb
sbb
sbb
pop
adcb
mov
movsl
sub
aad
adc
loope
std
lahf
fnstenv
xor
outsb
add
aad
sbb
jb
movsbl
or
jecxz
outsl
cld
lods
mov
aaa
imul
dec
fwait
mov
stos
xchg
call
lods
xchg
inc
push
js
addr16
shrl
push
push
cmp
lcall
and
jo
mov
xor
inc
adc
add
inc
jo
jmp
push
scas
insl
xlat
mov
mov
jo
or
ss
clc
mov
cli
sbb
add
loopne
xchg
sub
in
das
xor
repz
or
jp
int3
xlat
and
mov
xchg
jns
das
cmpsb
andb
cmpsb
fists
jne
add
or
sub
jnp
xorl
sub
push
push
addr16
shlb
movl
or
repnz
das
or
inc
xor
ljmp
add
lret
xchg
xchg
sar
int
xchg
pop
test
vcomisd
add
mov
imul
sti
mov
fcmovnu
loope
lds
orl
cmp
fwait
nopl
sbb
add
adc
add
adc
dec
mov
test
fcomi
into
push
push
pop
in
push
frstor
cmp
loope
jno
jne
or
cltd
lea
jecxz
pop
jecxz
jmp
mov
fwait
push
inc
mov
dec
rclb
mov
adc
inc
adc
push
mov
stc
adc
rclb
enter
or
mov
add
cmp
sbb
dec
mov
xor
and
adc
pushf
rolb
lods
fcomp
mov
stos
pop
imulb
dec
out
movsb
test
or
or
es
test
cmp
and
dec
mov
pop
int3
insb
jmp
stos
sahf
inc
sbb
mov
xor
movsl
sub
fcoml
out
je
and
sbb
repnz
pop
insl
xchg
fsubrp
shrb
hlt
cld
enter
pusha
sbb
dec
out
cltd
cmovnp
mov
dec
in
rorl
xchg
or
lods
icebp
ss
les
pop
mov
and
dec
cmp
ss
mov
movsb
cs
mov
mov
test
xacquire
pop
jb
iret
cmp
xor
and
cmc
pop
dec
pop
lods
fxtract
add
stos
lahf
sbb
mov
cmp
mov
pop
or
dec
ficoml
out
sti
and
sub
pusha
add
out
push
pop
push
adc
add
pop
mov
and
outsb
push
loope
fmuls
pop
mov
or
lock
pop
inc
movsb
arpl
mov
cmc
push
call
mov
fwait
mov
addr16
lods
jnp
enter
lock
sub
dec
jnp
int
clc
sub
mov
cltd
outsb
in
pop
bound
sar
mov
cmp
aam
hlt
dec
or
xlat
scas
ds
fs
adc
mov
mov
cmp
adcb
dec
test
xchg
jb
sbb
adc
int
das
inc
and
sub
pop
pushf
adcb
cmp
call
mov
lods
pop
xchg
push
xor
lods
xrstors
mov
add
xlat
data16
aaa
xor
jno
mov
jb
loope
rol
test
mov
inc
lcall
mov
lret
out
and
cmp
mov
cli
les
sbbb
jge
pop
xchg
xor
lds
lea
dec
cmc
push
mov
jnp
xchg
out
mov
testb
outsl
test
xchg
xor
add
pop
sbb
adc
mov
mov
subl
hlt
adc
xchg
mov
mov
adc
aam
ret
test
movsb
je
cli
js
decl
lods
xor
push
nop
in
clc
hlt
or
cmp
push
sub
hlt
push
mov
ja
scas
data16
negb
aaa
adc
and
push
test
cli
xchg
fs
push
push
gs
repz
in
lods
jmp
addr16
jl
int
fisubl
fildl
or
mov
inc
negb
orl
idivl
mov
adc
daa
jb
sub
data16
addb
sub
cs
jmp
incl
inc
mov
sbb
push
pushf
mov
popf
xchg
movsb
xchg
roll
xchg
insl
data16
aam
sbb
push
stos
mov
jle
fwait
xchg
add
jmp
or
lock
lret
jb
movsb
push
xchg
or
mov
into
lea
push
lret
push
xchg
ret
std
pop
push
jns
out
iret
scas
dec
cmp
sub
xchg
push
cmp
push
or
adc
pop
jnp
das
cmp
push
popa
notl
or
sti
and
mov
xchg
xor
sub
cli
mov
jl
imul
aaa
fcomip
fwait
mov
inc
push
andl
lods
cmp
xchg
in
mov
std
jb
sub
insb
call
lock
mov
jns
int
hlt
mov
test
sbb
insl
out
jne
outsl
std
mov
lret
les
xchg
xchg
cwtl
rcll
int
cmp
mov
and
cmpsb
out
arpl
movsl
rcrb
mov
into
mov
inc
or
bnd
loop
xchg
dec
inc
inc
dec
mov
mov
jo
arpl
data16
xchg
and
add
xchg
jmp
test
fs
shr
pop
or
out
fisttpl
dec
ret
mov
popa
mov
out
in
dec
xor
push
jb
test
pushf
mov
mov
cmp
xor
dec
jns
and
negl
fs
jle
test
sub
mov
outsb
or
into
sbb
jns
std
int3
push
dec
fdivr
sbb
pop
sub
leave
mov
adc
clc
out
mov
call
mov
cmpsb
inc
or
in
lcall
xchg
add
bound
jns
mov
and
sub
and
or
mov
jne
je
sub
sub
push
test
lret
lahf
shll
push
dec
pop
testl
xchg
fbstp
inc
adc
imulb
adc
sub
scas
push
mov
mov
jae
cmp
mov
push
ljmp
pop
add
daa
or
pop
mov
dec
data16
mov
pop
mov
jb
shrb
outsl
movsl
scas
aam
fsubrs
pop
mov
je
mov
repz
and
xchg
or
or
and
rclb
pop
scas
lret
or
push
dec
mov
mov
xchg
repz
test
repnz
cs
mov
and
popf
lds
dec
pop
stc
sbbb
enter
xor
sub
rol
int3
repz
decl
std
jo
mov
mov
nop
or
sub
movsb
inc
sarl
push
ss
imul
fwait
xchg
jge
pop
dec
stos
mov
inc
dec
icebp
pop
stos
test
insl
fwait
sti
in
cmp
addb
xchg
sbb
arpl
test
pop
dec
mov
popl
dec
stc
imul
insl
pop
or
sbb
leave
mov
dec
test
sub
push
pop
test
fcoms
dec
int
push
sub
xor
call
daa
add
jnp
mov
add
stos
xor
pusha
pop
ucomiss
lret
frstor
pop
mov
adc
cltd
jbe
rcrb
sbb
sbbl
dec
repnz
ret
or
es
stc
stos
mov
mov
popa
mov
insl
dec
inc
jecxz
paddw
lock
xor
mov
jb
out
fiadds
popa
rolb
in
bound
xor
jae
es
das
or
mov
pop
push
add
add
sub
add
cmp
and
cmp
lahf
pop
dec
into
push
mov
fs
lea
push
pop
sub
dec
cmpl
jp
mov
push
sarl
xchg
adc
inc
lods
imul
sti
int
jg
psubsw
xlat
jbe
jae
sub
stos
dec
sarb
sbb
scas
cmp
adc
mov
leave
pop
js
movsb
jl
push
enter
push
rorl
fistl
aam
xchg
inc
inc
out
sub
rorb
inc
or
movsb
jp
dec
scas
xor
cmp
pop
push
push
in
loopne
push
negb
lods
inc
lahf
sub
rorb
xchg
outsb
cmp
mov
lahf
into
adc
mov
cmp
xor
cs
push
aad
mov
xchg
mov
and
out
inc
lcall
sar
in
je
xorb
xchg
lods
pop
pop
call
xchg
cwtl
int
fcompl
mov
lods
add
mov
pusha
adc
cmp
inc
jecxz
push
bound
push
out
lahf
xchg
mov
push
add
push
shr
lahf
stos
sti
mov
mov
mov
fcmovbe
jbe
jnp
sub
sbb
xor
fistpll
fistpll
pop
data16
loop
lock
push
push
xchg
and
rcrl
and
pop
push
js
js
pop
data16
addr16
adc
inc
cmpsb
xor
hlt
rcr
push
jg
mov
imul
cli
shll
cmp
sbb
mov
sti
mov
sbb
pop
xor
add
insl
loope
sub
pop
add
int3
sub
xor
push
push
pop
and
jns
mov
mov
insl
jb
outsl
popf
xchg
nop
inc
outsl
mov
mul
jnp
push
xor
pop
cmpsb
clc
int3
pop
xchg
popf
fbstp
mov
xor
ss
mov
insb
imul
pop
or
cltd
es
das
lahf
std
add
test
mov
out
movsl
mov
push
mov
fbstp
popa
stos
push
or
mov
cmp
xchg
jb
push
clc
aam
shrb
shlb
daa
loope
adc
xor
push
stos
xorb
inc
mov
bnd
mov
push
js
pop
lock
fs
xchg
test
xor
mov
sub
jne
cmp
lds
out
sub
cmp
mov
orl
fcmovnu
and
cmp
loope
add
jbe
push
dec
xor
pushf
mov
mov
sbb
cltd
data16
lret
shll
out
jle
cmp
daa
icebp
push
sbb
popa
outsb
dec
in
or
push
leave
jno
movsb
gs
jns,pn
bound
or
lods
push
mov
and
mov
ret
push
add
add
add
ror
cmp
sub
insb
loope
and
lcall
cmp
sub
adc
mov
imul
cmp
call
mov
insl
adc
leave
add
repz
test
inc
enter
mov
inc
lea
sub
xchg
mov
loopne
sbb
lods
shl
in
push
mov
sahf
hlt
imul
jo
repz
jge
xlat
mov
and
stc
push
test
int
iret
push
xor
clc
lcall
in
dec
fadd
out
sub
push
rcrb
stc
push
cld
mov
imulb
mov
stos
mov
das
or
aaa
test
mov
or
ret
pop
or
and
xchg
clc
and
inc
and
mov
shrb
lods
push
and
push
repnz
dec
cmp
pop
jb
lret
push
adc
out
stc
mov
mov
lods
repz
sbb
xchg
rorb
mov
mov
jno
jb
dec
enter
emms
adc
imul
popa
jnp
cmp
inc
or
push
push
add
or
mov
dec
cmp
gs
icebp
add
sahf
and
adc
sahf
and
dec
jle
gs
push
sub
cli
sbb
cmp
cmc
nop
pop
mov
xchg
es
add
pop
test
adc
mov
call
mov
xor
fimull
or
lods
aam
jne
sub
in
das
bound
stc
je
push
mov
lods
test
lret
jb
cmp
mov
fiaddl
pop
xchg
insl
mov
shll
inc
mov
mulb
dec
sub
aaa
dec
inc
ud1
sbb
outsl
ss
xchg
xchg
fists
mov
mov
jnp
lods
call
adc
outsb
cmp
enter
scas
mov
int
jbe
adc
xchg
sub
lock
lods
orb
imul
bound
aam
push
add
pusha
or
inc
outsb
cs
cmpb
add
dec
int
out
mov
xor
jns
insl
aam
les
in
sub
and
iret
or
into
dec
sbb
xor
repz
or
or
mov
mov
stc
cld
sub
lds
mov
push
out
cmp
push
cmpsl
sbb
ss
mov
jno
adc
cmc
pusha
adc
pop
and
mov
xchg
push
out
mov
jb
cmpsb
mov
imul
mov
sbb
or
pop
pop
lahf
cli
mov
mov
repz
sbb
scas
and
repz
sbb
jb
inc
inc
loop
xor
loopne
xchg
sbb
sbbl
dec
jp
xor
pop
sub
stos
inc
mov
lcall
mov
orb
mov
xor
push
mov
cmc
idivb
into
mov
or
lods
mov
jb
jnp
sarb
xchg
mov
bound
les
ds
fcoms
jle
push
dec
mov
or
adc
ds
sbb
xor
sub
pop
aam
push
push
jecxz
and
or
xchg
mov
mov
ljmp
aaa
stc
xchg
sub
sbb
adc
push
jg
addr16
push
rorb
lahf
mov
lret
push
rcll
fldl2e
pusha
push
xchg
jecxz,pn
mov
das
icebp
cmp
in
divl
or
inc
stos
cmp
sbb
xchg
gs
ror
ret
push
stos
pop
mov
divb
lahf
adc
mov
aaa
fcompl
xchg
sub
lret
xchg
jmp
xor
xchg
pop
pop
jns
inc
aas
xchg
xor
cs
jge
inc
pop
add
hlt
rcrl
xor
cmc
lea
out
das
jecxz
outsl
add
fwait
cmc
adc
enter
mov
push
mov
stos
dec
sbb
fs
lock
jge
xchg
sbbb
outsl
enter
into
jns
mov
adc
shl
pushf
sbb
stos
daa
sbb
and
mov
je
std
push
jnp
lods
push
cmpsl
mov
sbb
push
xor
cltd
cwtl
data16
cmp
dec
push
push
stc
shll
cmpsb
inc
mov
loope
push
dec
pop
popa
dec
xor
mov
jmp
int3
aad
pop
fidivl
testb
lcall
cmpl
cli
out
cmp
mov
mov
loop
test
pop
xchg
mov
add
out
divl
ds
das
cmc
mov
repnz
test
mov
cmp
lahf
or
add
xchg
push
fistpl
pop
dec
push
arpl
and
pop
fildll
outsl
int
or
and
lret
mov
mov
sub
xor
dec
xchg
lcall
jecxz
je
xchg
sub
shr
push
add
iret
sarl
lret
or
xor
inc
lods
add
outsl
ljmp
adc
scas
jg
sbb
dec
movsb
lret
push
or
ficoms
nop
sbb
mov
dec
outsl
ret
jno
pop
rcl
ret
clc
inc
jnp,pn
mov
daa
inc
and
bound
xchg
mov
xchg
pop
ljmp
mov
pop
or
int
pop
daa
adcb
pop
or
aad
fs
insb
hlt
inc
enter
addr16
lcall
ja
xchg
or
push
mov
incb
jl
push
pop
add
test
divl
ret
scas
int
out
jg
sub
push
inc
js
push
outsb
cli
mov
or
mov
and
dec
nop
mov
sbb
add
dec
add
xchg
add
sub
scas
sub
insb
and
and
stos
push
xchg
test
and
mov
adc
sbb
fstl
jle
push
movsb
cmp
scas
shll
mov
sub
test
pushf
push
sbb
and
hlt
mov
cmp
divl
mov
ss
mov
mov
jg
inc
mov
sub
sahf
test
or
cmp
fwait
je
mov
jg
scas
cmpsl
mov
negb
or
jb
xor
in
mov
ss
jne
fcoml
fdivrl
cs
sub
icebp
std
mov
xchg
fsubl
mov
in
mov
inc
xor
jae
popf
das
inc
flds
xor
mov
decb
cmp
shll
js
adc
mov
stos
inc
xchg
jmp
xchg
cmpl
mov
in
sbb
std
aad
lods
dec
ss
jo
and
ss
adc
adc
pop
fisubrs
imul
jecxz
pop
jb
or
aaa
out
insb
xchg
fcompl
xchg
cmp
repz
xchg
cmp
mov
js
xchg
or
cmpsl
lcall
cmp
je
and
retw
mov
inc
xchg
movsb
loopne
hlt
sarl
loop
pop
and
jl
ja
or
jae
loope
test
js
or
out
movlps
push
pop
inc
or
pmaddwd
sbb
jg
sbb
mov
mov
lods
add
mov
ret
outsb
cmp
xchg
ret
mov
out
int3
and
sub
jl
pop
aaa
sub
outsb
jg
iret
push
daa
push
std
push
fidivrl
incb
ret
lods
jns
pop
inc
jmp
xchg
push
xlat
pushf
add
pop
cmp
fnstenv
repnz
cmp
push
rol
nop
pusha
adc
and
in
dec
sub
mov
pop
mov
scas
mov
push
lods
mov
fcomip
imul
jae
pop
or
jp
and
pop
mov
mov
hlt
push
loopne
shrl
das
ja
mov
or
jle
add
popa
xchg
dec
xchg
add
mov
mov
xlat
out
dec
mov
icebp
pusha
xchg
inc
push
push
loope
iret
add
addl
cmp
rcr
mov
inc
jle
pop
mov
push
out
movsl
ret
icebp
sti
push
gs
pop
mov
imul
dec
jo
sub
and
jns
notb
imul
sarb
ret
dec
sbb
push
ljmp
xchg
dec
and
pop
mov
xchg
pop
cmpsb
pop
aam
and
mov
sahf
fnstenv
xchg
jnp
jg
ret
test
ficoms
pop
outsb
mov
jb
sub
inc
sub
mov
mov
push
int3
fisubrl
push
mov
xor
je
ret
jns
pop
incl
das
lahf
jecxz
clc
and
sub
xor
loop
mov
and
pop
ja
aaa
int3
fidivs
loop
adc
xchg
jo
inc
sbb
xchg
cld
int
xchg
push
mov
stos
cmpsl
cltd
mov
xor
cs
fs
outsb
push
mov
negb
pop
loope
inc
lods
movntps
cld
mov
inc
pop
dec
dec
push
mov
mov
lods
fwait
cmc
jne
mov
cld
pop
cmp
push
fimuls
push
loopne
add
fldenv
add
test
xor
ljmp
mov
repz
pop
aaa
neg
or
inc
testl
loope
fstl
mov
and
push
push
adc
arpl
inc
or
icebp
mov
pop
std
push
or
pop
and
fst
add
scas
out
mov
dec
mov
lds
lea
or
or
push
inc
push
cmp
push
cmp
add
sub
fdivrl
outsb
push
les
cmc
xor
loopne
jp
cmc
sbb
mov
aaa
xchg
pop
pop
xor
out
mov
inc
xor
pop
jnp
push
xchg
les
loop
adc
xor
ja
pop
xchg
out
xlat
mov
movsl
mov
scas
out
loope
inc
popa
dec
incl
repz
lods
jbe
xchg
scas
lret
xchg
fdivs
out
mov
or
test
rcr
mov
cltd
push
sarb
pushf
lret
pop
push
sub
ret
in
mov
pop
push
dec
adc
add
ljmp
scas
imul
xlat
pop
out
sti
js
cld
push
pop
mov
out
lock
xchg
lock
cli
pop
dec
dec
clc
ret
lea
fcoml
ljmp
and
xor
in
xchg
and
int3
loop
cmp
adc
jns
mov
fisubs
fimull
dec
pushf
gs
stos
or
imul
sbb
faddl
insl
sub
pop
int
add
mov
fcoms
in
mulb
pop
ljmp
dec
ss
dec
mov
sbb
sub
sub
filds
mov
jne
pop
add
jne
or
jnp
insb
xlat
clc
negb
pushf
pop
inc
std
mov
pop
adc
cmp
dec
push
and
cmpsb
das
push
lea
test
or
pop
out
pop
xchg
lods
je
insl
cltd
clc
and
cmp
mov
hlt
mov
xchg
and
add
and
adc
out
clc
lcall
lcall
fstp
inc
mov
fcmovnbe
xchg
aam
ljmp
idivl
inc
and
and
in
lcall
jl
popf
push
stos
cmp
lock
push
mov
cmp
cmp
nop
push
scas
cs
iret
push
mov
jb
enter
mov
iret
mov
inc
subl
sub
adc
ljmp
scas
mov
adc
mov
cmpsl
test
inc
cmc
sti
xchg
adc
mov
cmp
sbb
cmp
in
in
sub
ret
loopne
jg
sub
cli
je
lea
mov
jmp
xchg
mov
jno
xchg
cmpsb
mov
dec
rolb
roll
loop
jle
leave
sub
mov
mov
imul
mov
insl
sub
xchg
xchg
mov
cmp
adc
popf
loop
aaa
aaa
clc
cmp
pushf
sub
add
add
stos
or
loope
daa
jecxz
mov
sbb
add
scas
repz
and
test
cmp
dec
sbb
and
stos
and
loop
pop
adc
add
sub
les
daa
popf
loopne
les
dec
jbe
pop
outsl
inc
adcb
scas
movsl
ret
mov
es
pop
mov
loop
jg
cld
jge
cmc
insb
jae
cltd
loop
jo
incb
mov
inc
xchg
cmp
lret
clc
xor
jo
out
out
jecxz
lods
pusha
adc
das
mov
in
mov
mov
mov
adc
mov
test
mov
xlat
and
jb
das
push
test
daa
mov
and
dec
pop
daa
xchg
mov
aaa
mov
adc
jge
ret
cmpsl
negl
or
je
sahf
outsb
mov
mov
sub
test
or
mov
adc
mov
and
pop
mov
clc
fcmovnu
add
lret
pop
out
insl
xchg
daa
mov
sarb
cmpsl
xor
pop
lret
fucom
and
push
adc
push
mov
test
jmp
mov
sub
jmp
push
sahf
mov
and
lret
call
sbb
lea
or
xchg
in
fstpl
shll
aas
cmpsl
enter
xor
or
aaa
mov
push
les
andb
test
fdivs
aam
adc
inc
mov
sbb
sub
sub
sti
neg
repnz
mov
hlt
imul
dec
jnp
jb
pop
dec
mov
shl
sub
sub
addr16
sub
aad
cmc
scas
std
loopne
iret
and
add
cmp
jne
out
pop
jae
ljmp
rolb
mov
scas
jo
addr16
fidivl
xchg
ret
divl
ljmp
jae
mov
out
inc
imul
aam
xchg
dec
mov
into
and
and
pop
das
inc
add
jmp
xor
xchg
mov
pop
xor
mul
sti
dec
and
cwtl
push
add
fucomp
das
sbb
mov
inc
or
pop
inc
fidivs
test
mov
jmp
fnstsw
lcall
mov
ss
in
das
sbb
jnp
cmp
sub
addr16
test
pop
xor
sarb
mov
lods
cli
testl
add
jnp
push
je
sarl
mov
pop
out
pop
xchg
in
repz
ret
or
xor
fisubs
push
stos
test
es
loopne
lea
rcl
mov
pop
cmp
out
push
ds
jge
fists
ficoms
and
sbbb
push
mov
push
lds
shll
in
and
lea
scas
rorb
scas
xor
xchg
cmpsb
inc
mov
mov
xor
in
out
jg
gs
lods
pop
dec
or
and
cltd
pop
in
pop
xchg
inc
jle
insl
mov
adc
iret
arpl
xor
jno
mov
out
jnp
ja
jae
push
dec
xchg
pop
insb
mov
sub
adc
cmp
jmp
jge
popf
pop
imul
sahf
mov
lock
xor
sub
ret
or
iret
repnz
xor
ret
push
roll
jne
pop
mov
cmp
cmpl
ja
bswap
pop
test
xchg
xor
xor
sub
jbe
mov
xor
cmp
mov
cmp
lret
jge
push
xor
and
js
xor
fcmovb
repz
inc
jae
lods
flds
sbb
inc
pop
sub
adc
imul
divb
test
inc
cmovbe
and
dec
pop
add
lds
movsb
das
xor
dec
popf
fdiv
lahf
cmc
scas
pop
push
mov
stos
sti
cmpsb
dec
inc
jg
mov
push
test
daa
sub
inc
inc
fwait
and
addl
out
cltd
xor
test
cltd
repz
and
or
ljmp
add
cmpb
negb
inc
mov
mov
es
mov
inc
xchg
clc
mov
jbe
inc
jmp
mov
imul
js
adcb
enter
ljmp
jecxz
in
and
ret
test
repz
test
ja
clc
lahf
movaps
mov
mov
jp
clc
scas
jbe
out
xor
std
jb
ljmp
in
pop
rorl
dec
xlat
dec
clc
lcall
add
xchg
sbb
xchg
xchg
or
ljmp
mov
lahf
or
cmp
negb
xchg
pop
ja
loopne
cld
pop
inc
pop
mov
js,pn
or
adc
inc
xchg
add
dec
in
gs
xchg
inc
jno
aas
xor
jle
cmp
hlt
cwtl
dec
lahf
pop
mov
inc
shlb
xchg
xchg
out
jno
fistpll
andl
pusha
xor
and
adc
jne
or
icebp
cmp
loopne
sub
dec
lret
test
xor
mov
daa
ljmp
aaa
es
cmpsl
cltd
push
cmc
int
fwait
es
stc
mov
dec
lahf
push
mov
pop
pusha
sub
popf
mov
fcoms
jns
xchg
mov
fists
cli
out
jmp
jbe
xchg
pop
test
inc
sub
out
cmp
mov
inc
push
fbstp
xchg
or
jp
adc
sbb
rolb
sti
pop
inc
aas
and
aam
cmp
inc
inc
pop
aam
cmpsl
shl
nop
je
out
sub
fisttpl
jb
add
pop
pushf
inc
mov
stos
push
popa
and
or
jno
enter
pop
mov
or
aad
push
out
in
adc
inc
pushf
jecxz
imul
adc
or
add
inc
and
ja
pop
movsl
loope
cli
xchg
scas
insb
mov
mov
stos
adc
sti
nop
mov
pop
mov
jmp
mov
pop
jecxz
mov
dec
je
add
sub
push
test
outsl
leave
sbb
cmp
or
pop
shrl
icebp
fildll
repz
adcl
fcmovbe
add
jns
fwait
pusha
jb
sbb
and
mov
jns
mov
lods
or
xor
sub
sbbb
scas
clc
cmp
inc
push
mov
xchg
out
ret
pop
pop
rolb
lcall
imul
andb
adc
arpl
and
lcall
aam
lods
outsl
test
js
or
repz
adc
loop
sub
sub
mov
pop
scas
cmpsb
and
inc
adc
cmp
jmp
fcomps
jp
inc
mov
scas
daa
mov
xchg
or
nop
lods
and
xchg
std
push
fs
cmc
inc
mov
cmp
stos
push
pop
mov
lcall
pop
mov
xchg
ljmp
frstor
fcmovnu
ret
or
movb
int3
mov
sub
cltd
jge
stos
mov
std
cmpsl
scas
inc
fdivs
mov
lea
pop
jl
xor
sbb
and
pop
sub
fildll
call
loopne
dec
inc
nop
xor
adc
push
leave
xchg
or
test
ds
jmp
nop
mov
dec
enter
loopne
xor
ret
shrl
lret
push
es
vmread
cmp
xlat
popa
mov
push
pop
movl
mov
insl
dec
sbb
stos
movsl
xchg
subb
std
cli
jecxz
outsb
push
pusha
gs
cltd
jmp
out
mov
sub
cltd
test
push
jg
jo
stos
sbb
outsl
and
inc
inc
mov
inc
cmpsl
push
rcrl
add
movsb
clc
pop
dec
cmp
xchg
push
sub
pop
std
pop
iret
push
jae
jae
test
and
loop
clc
mov
or
cs
mov
add
sub
and
mov
jl
flds
shl
imul
hlt
pop
lea
jle
andl
mov
loop
in
shrl
stos
and
xchg
jmp
pop
dec
scas
xor
das
cmp
gs
adc
es
sbb
jne
push
out
rcr
fcoml
inc
xor
dec
inc
aaa
xorb
into
push
lods
ss
add
cs
loopne
scas
ja
sub
mov
xchg
sub
jecxz
add
fdiv
repnz
and
and
inc
mov
adc
sar
das
and
mov
push
lods
lods
shr
call
rorb
push
stc
int3
movsl
stc
add
stos
sub
push
push
lea
dec
jg
sbb
pop
pushf
stc
jbe
jmp
jg
push
ds
icebp
aas
and
sbb
ds
fisttps
xor
int3
cmp
push
rolb
pop
mov
sub
xor
cmc
sbb
aaa
insl
cwtl
push
or
xchg
mov
frndint
daa
outsb
scas
xchg
and
sbb
add
jg
xchg
jae
in
clc
sti
cmp
inc
lret
sub
dec
sbb
pop
in
orl
shl
mov
mov
jno
sbb
orb
add
mov
jnp
push
xrelease
jno
aaa
jmp
fnstcw
daa
inc
push
dec
xchg
testb
or
mov
mov
fdivl
and
xor
das
aas
idivl
in
sbb
pop
ss
fnsave
enter
sbb
cmp
test
rorl
cld
sbb
testl
add
xchg
fdivr
add
loop
pminub
mov
xchg
or
xchg
dec
dec
test
pushf
mov
pop
add
inc
lds
add
lods
gs
call
fbld
mov
popa
mov
sahf
ss
push
push
push
into
push
loop
and
xchg
cld
jecxz
ljmp
push
lods
bound
aad
xchg
push
scas
sti
add
out
imul
fdivrl
daa
pop
lret
lods
out
cmp
sbb
mov
fstpl
outsl
inc
mov
mov
stos
not
add
aam
mov
dec
or
stos
jne
cvtps2pd
test
adc
pop
es
xchg
mov
shrl
inc
mov
aaa
mov
out
ds
push
pop
jle
fsubl
push
mov
xchg
add
dec
mov
mov
add
jge
adc
jo
mov
jp
push
into
hlt
or
add
lahf
mov
mov
inc
adc
add
sahf
das
pop
and
pop
push
into
std
dec
cli
inc
sub
movsl
xchg
push
sbb
jp
mov
or
mov
inc
sbb
inc
mov
jmp
movsl
leave
sbb
out
pop
int
mov
inc
pop
or
shll
stc
outsb
mov
ljmp
fisubl
enter
xchg
subb
fcmovnb
repz
mov
push
add
shll
jecxz
int3
mov
pop
sub
and
cmp
aam
shrl
test
daa
gs
xchg
mov
dec
in
jae
pop
add
daa
jnp
add
fidivrs
imul
sub
andb
dec
pop
scas
rcrl
xchg
aas
das
mov
js
push
or
xchg
outsb
shrl
push
fwait
xchg
cmp
fsubrl
ss
sub
aaa
jg
les
fwait
popa
call
cmp
pop
shlb
loop
sub
inc
or
xchg
out
or
push
cld
lock
idivb
xor
pushfw
dec
lret
cltd
lret
sub
cmp
dec
push
test
push
shr
push
lcall
or
out
mov
mov
leave
lock
aaa
mov
jmp
push
push
dec
and
ss
pop
add
adc
jl
pop
push
dec
mov
jbe
je
inc
call
or
fistpl
test
ficoml
or
movsl
lods
mov
or
dec
outsb
jno
cmp
xor
pop
in
popf
mov
into
dec
stc
sarb
das
push
mov
pop
ja
pop
ss
mov
sahf
gs
xchg
es
fnsave
sub
push
cmp
das
cwtl
bound
xor
je
pop
imul
movsb
pop
jg
dec
aam
movsb
jl
scas
sti
nop
sahf
imul
xchg
inc
out
mov
cmp
lds
and
filds
cmp
repnz
mov
in
int3
push
outsl
lcall
sub
or
mov
int3
sbb
jae
mov
sahf
clc
push
mov
push
mov
call
sti
sub
adc
jno
pop
mov
and
cmpsb
jmp
cli
out
mov
lea
pushl
jle
fiaddl
inc
sub
push
outsl
addl
xchg
stos
stos
adc
xchg
pop
mov
ja
iret
mov
test
add
addl
mov
mov
rclb
jae
dec
or
xchg
bound
stc
nop
fisttps
es
inc
push
rolb
inc
jno
jns
cmp
inc
add
in
cmc
lds
push
adc
andl
dec
sahf
ss
push
jmp
shll
es
mov
jle
mov
iret
mov
pushf
adc
mov
xchg
adc
fnsave
push
push
in
dec
xchg
and
ret
adc
mov
rcr
inc
xchg
xchg
and
jg
adc
icebp
sbb
cs
fimuls
iret
imul
ja
xchg
inc
sub
jns
insl
arpl
sub
and
push
sub
in
xchg
jo
sarb
cmpl
ror
sti
cmp
stc
pop
popl
sbb
lds
repz
mov
cmp
cmp
std
in
jecxz
es
repz
xor
orb
sti
adc
sti
pop
cld
mov
rcrl
jg
mov
mov
repnz
stos
stc
lds
out
dec
xor
fs
loopne
mov
cmp
iret
addr16
pop
jp
sub
pop
cmp
inc
add
shlb
adc
xchg
lods
inc
cmp
cltd
icebp
dec
and
sbb
ffreep
out
push
aam
jle
xchg
pusha
and
sbb
rclb
subb
or
shl
mov
inc
mov
subb
push
hlt
xchg
test
lea
dec
sub
rclb
ljmp
sbb
sbb
push
xor
mov
mov
in
call
mov
dec
aad
and
inc
ret
push
std
xchg
scas
sbb
xlat
push
les
ret
mov
or
out
jmp
dec
sub
call
rcl
aam
aad
sbb
dec
mov
jns
data16
into
inc
dec
pusha
scas
xchg
shrl
jle
adc
lea
xor
push
pop
lods
jnp
rcrb
shl
lods
sub
sbb
stc
cltd
jp
push
clc
pop
xchg
sbb
sti
pop
cmp
sbb
daa
sbb
jp
out
push
push
imul
fsubr
sbb
bnd
mov
jp
mov
enter
jns
xor
lock
xchg
cmp
and
inc
pop
sbb
lea
or
nop
jl
cmc
sti
sbb
pop
push
pop
xchg
in
mov
inc
pop
stc
add
outsl
lods
sbbl
mov
aad
sub
out
xchg
sub
xorb
push
test
repnz
nop
clc
inc
aam
adc
xor
sbb
mov
aam
sbb
cmp
xor
into
mov
inc
int3
mov
sub
or
pushf
inc
mov
inc
insl
dec
scas
iret
xchg
std
adc
aaa
jno
inc
loop
jne
mov
lahf
testb
je
xchg
jecxz
loop
js
shrl
rcr
jmp
mov
fwait
mov
mov
mov
and
cld
mov
out
repnz
cmp
jge
add
outsb
pushf
push
jb
jae
mov
mov
mov
inc
jb
adc
mov
xchg
call
push
adc
mov
clc
pop
jmp
and
inc
inc
rcrl
mov
cmp
mov
dec
adc
jne
addr16
stc
cmpsb
push
pop
mov
jmp
lret
sbbb
insl
ja
imul
and
mov
stos
xchg
ret
jp
xor
mov
adc
adc
jecxz
ljmp
inc
mov
imul
in
iret
ljmp
fbld
adc
outsb
mov
fidivs
sub
adc
cmp
jle
jg
iret
leave
test
sub
mov
mov
adc
popa
repnz
es
cld
inc
fisttps
jg
neg
insb
adc
push
mov
cmp
ljmp
mov
mov
stc
cld
adc
sub
push
push
pop
xchg
mov
jmp
in
jecxz
pop
mov
adc
jb
dec
dec
stos
inc
aaa
lock
xchg
xor
cmp
dec
imul
test
xchg
out
scas
push
add
lret
mov
fadd
mov
cltd
in
mov
mov
sbb
xorb
mov
inc
outsl
test
ljmp
adc
leave
sahf
mov
mov
xor
dec
push
sahf
pop
mov
repz
pop
or
or
das
sub
ficoml
mov
mov
repz
mov
lret
out
movsb
mov
jle
repz
cs
aam
push
mov
mov
mov
stos
adc
push
repz
push
mov
dec
inc
mov
fisttps
pop
dec
fwait
in
inc
inc
scas
xor
push
pop
orl
ja
jecxz
aad
pop
adc
orl
daa
and
js
mov
jp
push
push
push
out
fldt
xor
les
or
ds
jo
inc
mov
int
pop
dec
push
push
in
clc
mov
jmp
les
adc
mov
push
cmpsb
mov
test
cmp
mov
mov
pushl
jno
ljmp
xchg
lahf
pop
sub
xchg
xlat
mov
inc
loop
movb
roll
sbb
jo
arpl
dec
jp
mov
sub
and
leave
insl
daa
mov
mov
add
jmp
arpl
push
test
es
mov
ret
mov
inc
and
xchg
cwtl
mov
pop
es
dec
sti
ss
mov
lds
sbb
gs
mov
enter
mov
ja
gs
push
pusha
sbb
and
and
cmp
jns
add
imul
rol
inc
ret
push
mov
sbb
mov
mov
mov
push
ljmp
cmp
pop
mov
bound
lds
mov
mov
out
xlat
mov
fbstp
fwait
add
adc
rcll
adc
jns
cmp
repz
loop
mov
stos
pop
movsb
mov
call
in
mov
std
push
cmpsl
mov
jae
repnz
xor
xchg
mov
jge
mov
push
gs
and
jmp
sub
and
mov
dec
mov
push
dec
loop
sbb
jae
lret
clc
mov
fstp
iret
sub
add
out
bound
sar
fidivs
mov
cmp
adc
or
sub
cmpsb
dec
and
adc
cmc
sbb
cwtl
fwait
pop
xchg
pop
inc
lcall
sbb
adc
or
dec
icebp
xor
add
xor
movsb
adc
add
xchg
jno
inc
ret
dec
dec
add
or
fisttpll
mov
aas
adc
sahf
mov
inc
test
fsubl
mov
in
mov
jns
or
lds
mov
iret
dec
loope
inc
call
sti
rclb
aad
xchg
repz
pop
xor
es
outsl
stos
pop
mov
push
rolb
ret
add
stos
hlt
jmp
xchg
mov
and
inc
mov
jl
mov
movsb
out
jmp
mov
push
fsub
repz
xor
ja
lret
mov
in
scas
pop
mov
jne
int3
xchg
lods
sbb
adc
lret
movsb
push
stos
scas
dec
jo
jns
mov
out
jns
loope
out
mov
rolb
aaa
jb
xchg
mov
mov
add
adc
adc
pop
shlb
add
cmp
aam
fwait
xchg
cmpsb
icebp
loopne
jecxz
dec
das
and
jno
mov
out
lods
cmp
inc
ljmp
mov
jae
pusha
mov
nop
adcl
repnz
clc
push
cmp
pop
cmp
out
add
sub
xchg
jbe
test
scas
sbb
ljmp
adc
and
pop
mov
out
jns
pop
gs
and
rorb
push
add
rorb
inc
add
mov
add
lret
test
daa
nop
stos
iret
and
sahf
dec
push
stos
icebp
mov
xchg
fldenv
cmpsl
adc
fstl
mov
lret
pop
out
fnstenv
cmp
mov
xor
sbb
repnz
inc
add
xorl
add
lret
cltd
sbb
xchg
xchg
lahf
bound
adc
sub
pop
arpl
jg
insl
jns
jp
jo
inc
xchg
lret
andl
add
inc
out
insb
std
frstor
cmc
dec
popa
jmp
mov
popf
and
pop
nop
ja
inc
outsb
punpckhwd
lret
popa
std
sbb
xchg
mov
jb
fistps
mov
aam
xor
inc
addr16
inc
pushf
ret
jmp
cmp
jmp
mov
xor
rcl
push
flds
aas
outsb
out
test
push
pop
sahf
stos
daa
lcall
orb
push
sub
roll
fistpll
int3
sub
pop
lea
mov
iret
sub
sub
jne
jno
daa
iret
inc
mov
sub
jp
mov
fistpl
cmp
jge
mov
fldt
jmp
adc
pop
cmpsb
cltd
cmp
sub
cmp
faddl
or
inc
xlat
sub
loop
je
adc
int
sub
in
scas
push
and
mov
mov
bswap
push
or
outsl
test
mov
ret
scas
stos
or
cltd
popf
jnp
xchg
addr16
ja
popa
fcom
and
mov
add
push
mov
int
subl
cli
sar
xchg
mov
inc
push
cmpl
lods
outsl
or
popf
jmp
cmpsl
cmp
dec
and
int
jns
inc
jns
movsl
mov
xor
fidivrl
test
mov
int3
dec
and
addr16
fsubl
pop
subb
dec
jo
fisttpll
dec
adc
cwtl
fistpll
or
idivb
outsl
pushw
ret
sti
xchg
or
push
xchg
pop
or
or
jo
rcll
or
lret
lea
sub
into
push
mov
sbb
int
fwait
aas
or
movsl
sbb
movsb
cmc
xchg
adcb
push
jle
test
ffreep
js
jmp
popf
outsl
test
mov
inc
out
rol
push
sbb
mov
pushf
mov
clc
xor
aam
push
data16
or
mov
jge
cwtl
bnd
in
jo
cmp
std
pushf
or
int3
aas
sub
jge
xchg
lcall
out
jl
fdivp
aas
adc
adc
push
mov
je
test
sub
xchg
add
xor
in
loopne
std
jge
outsl
cmpsl
ja
mov
mov
lds
ret
test
mov
adcl
lret
push
dec
je
sub
testb
jo
lea
insl
push
leave
xor
xchg
xchg
dec
or
cltd
and
mov
popf
and
std
loope
inc
push
mov
in
sub
mov
xchg
mov
mov
es
js
mov
aam
pop
loopne
pop
out
pop
out
add
outsl
push
xor
fs
addr16
test
js
shl
xlat
loopne
rolb
dec
out
fisubs
inc
ret
push
adc
addr16
inc
insl
out
addr16
xchg
push
mov
gs
push
cld
sbb
out
jl
dec
out
jnp
cmp
dec
out
xor
xor
mov
add
pop
or
sbb
xor
mov
outsb
aas
daa
movsl
xchg
sti
loope
lret
add
inc
push
fisttpll
add
or
adc
pop
add
jecxz
sbb
sbb
xor
test
in
xchg
in
loope
in
fisttpll
xadd
icebp
xor
xchg
mov
leave
dec
scas
inc
or
cmp
lods
xor
popf
inc
int3
and
cmp
jge
rorb
shll
mov
pop
pop
ljmp
sbbl
xchg
xchg
and
jmp
push
stos
jnp
jbe
cmpb
hlt
popa
jge
sbb
xor
mov
sbb
xlat
xchg
lock
imul
icebp
leave
fnstsw
shrl
add
int
aaa
in
and
jle
inc
xor
ja
cmp
loopne
jbe
fidivs
aad
leave
adc
jnp
loopne
mov
imulb
movsb
stos
mov
xchg
sbb
lea
add
pop
mov
xor
clc
fsubrs
loope
mov
in
loop
push
jge
bound
jne
sub
push
int3
cmc
xor
inc
inc
data16
rorb
and
arpl
push
iret
lret
outsb
shrl
lahf
dec
addr16
enter
push
push
movsl
inc
ljmp
sub
out
cwtl
xchg
addr16
dec
cld
les
repnz
cld
lods
fsubr
dec
shlb
lcall
push
fstl
sub
push
mov
subl
in
subb
and
pop
pushf
pushf
mov
xorl
push
xchg
out
cmp
cwtl
int
xchg
inc
or
jne
xchg
and
inc
pop
popf
dec
leave
add
ljmp
xor
and
rcrb
inc
pop
add
jo
adc
mov
jae
test
mov
stos
push
xlat
movsl
jae
cmp
inc
or
lahf
sahf
filds
rclb
roll
jbe
push
mov
and
cltd
ss
bndldx
push
or
icebp
lcall
lret
inc
xchg
jle
shlb
mov
add
in
test
ficoms
arpl
inc
mov
lods
mov
xchg
cmp
out
sbb
pop
test
cwtl
mov
mov
lds
cmovbe
gs
sbb
inc
sub
adc
lea
adc
out
arpl
xor
pop
push
fnstcw
int
lock
iret
dec
or
inc
xchg
mov
clc
arpl
dec
jo
push
lret
mov
add
fxch
nop
xchg
xchg
iret
out
sbb
in
push
mov
xchg
sub
jnp
adc
adc
xchg
jg
aad
dec
js
xor
test
loope
and
pop
jno
dec
and
lock
test
pop
push
aad
rol
mov
scas
leave
jl
xchg
or
ljmp
test
aas
pop
loopne
out
dec
lods
add
sarl
divl
das
daa
imul
jp
into
inc
scas
and
pop
mov
loop
popa
into
call
cwtl
mov
or
test
out
fistpl
add
xor
aam
pop
push
je
push
ljmp
rcl
jecxz
loopne
pusha
test
jmp
push
cmc
sahf
jno
or
cmpsl
jnp
xchg
shll
lods
ss
mov
dec
mov
cmpsl
daa
and
es
lds
sub
data16
pop
jg
push
rcl
shl
push
scas
mov
mov
mov
xchg
in
insb
cs
mov
fcomi
cmc
sbbb
in
ret
fstpl
mov
ret
xchg
cld
lods
mov
gs
out
and
shrd
pop
int
or
fptan
mov
pop
cmp
fwait
data16
pop
jg
push
mov
ficompl
jge
sbb
stos
cmp
xchg
inc
sbb
xchg
enter
jle
fcoms
adc
adc
movsl
jmp
or
add
xchg
rcrb
inc
mov
mov
mov
stc
jno
call
jb
xchg
incb
dec
rorb
dec
test
mov
jne
mov
fsubr
inc
inc
int3
aas
fnsave
scas
xchg
icebp
jae
jmp
dec
inc
lods
push
pop
ds
out
dec
call
xchg
leave
jge
mov
jge
mov
push
jne
cmp
repz
cmp
push
in
push
ss
dec
fidivrs
icebp
add
into
aaa
xlat
fcomps
add
push
icebp
aas
sub
popa
cld
movsb
in
sti
push
jmp
jbe
dec
imul
fidivrl
negl
arpl
ret
lret
mov
cmpb
imul
es
and
lcall
stos
and
jmp
outsb
jne
sub
xlat
cmpsb
or
test
and
imul
mov
push
popa
pop
push
dec
or
push
scas
cld
lock
data16
dec
dec
test
inc
shlb
pop
pop
cmp
xchg
xchg
ds
xor
jns
lock
cmp
push
movsb
inc
pop
mov
roll
mov
aaa
in
and
test
jo
mov
jl
or
aaa
mov
sub
divw
xor
or
xchg
jl
mov
mov
sbb
in
pop
imul
push
movsl
jmp
daa
neg
fists
es
ret
push
jnp
inc
jmp
or
aam
dec
call
mov
push
add
add
inc
fstpt
mov
lods
sub
iret
push
in
cwtl
loop
jl
sub
pop
xchg
push
dec
pop
leave
sar
sarl
xchg
inc
xor
sub
xchg
or
or
loop
stc
jo
ss
inc
les
sti
imul
mov
hlt
aaa
or
rcrb
push
add
cmpsb
mov
fwait
insb
push
call
in
mov
icebp
repz
lea
iret
cmp
mov
ja
push
xor
pop
sub
cmp
mov
sub
cwtl
cmp
push
fisubrl
lret
pop
xchg
test
subl
int
inc
loope
adc
cmp
and
xlat
xor
xlat
push
push
addb
cmp
jge
dec
add
jl
mov
push
mov
xor
xchg
ds
ja
and
out
and
push
inc
imul
addl
shl
out
xlat
arpl
stc
rcl
pop
add
lcall
jecxz
cli
jl
xlat
or
inc
mull
and
pop
aad
cs
push
adc
stos
enter
test
dec
and
lods
jo
inc
aaa
rcr
push
aas
mov
sub
mov
mov
dec
pop
rcrl
divb
adcb
or
lods
or
jmp
mov
xor
inc
sbb
scas
push
sbb
jmp
mov
jg
fcomp
cmp
ja
xor
shll
jnp
rcrb
les
stos
cmp
mov
xor
out
push
arpl
lret
pop
sbb
mov
add
push
pop
xchg
jecxz
xor
mov
mov
push
sbb
pop
mov
push
xchg
push
push
shll
mov
push
cmp
fisttps
xchg
add
inc
scas
pop
push
jmp
out
loop
jg
inc
loope
hlt
jo
movsb
xchg
sbb
lahf
shlb
shl
or
stc
dec
xchg
mov
pop
dec
nop
out
or
outsl
push
xchg
and
dec
icebp
mov
lods
mov
push
inc
cmpsl
and
lret
mov
mov
cmp
and
fxch
inc
add
xor
and
dec
or
js
adc
es
ja
dec
push
cmp
cmp
shlb
and
out
cmpsb
jb
sbb
loop
aam
out
mov
mov
add
inc
dec
and
pop
add
and
xorb
out
in
sbbb
stc
push
jge
push
cmp
inc
push
sub
sbb
out
popa
filds
and
shll
dec
push
pop
pop
loopne
jl
jg
mov
shrl
into
hlt
stos
andb
xchg
lret
xchg
clc
jno
ss
mov
jle
and
sahf
dec
mov
test
push
add
bound
rcr
inc
mov
pop
mov
mov
xchg
push
sbb
push
mov
lret
into
mov
xchg
enter
adc
pop
out
sub
cld
enter
sbb
fcoml
mov
jb
push
loop
mull
dec
and
lods
xor
faddl
popa
hlt
fwait
push
xchg
mov
pop
int
sub
cmp
dec
pop
cmp
ret
loope
xorl
es
repnz
fstpt
bound
arpl
lock
pop
mov
cmpsl
out
loope
add
mov
aaa
in
clc
movsl
int3
mov
mov
testl
inc
movsb
outsb
out
scas
sbb
sbb
push
mov
popf
mov
test
dec
push
mov
pop
in
fisubl
scas
pop
adc
cmc
gs
xchg
jne
push
xchg
int
in
into
pop
scas
add
add
dec
clc
cmpl
ss
popa
dec
js
dec
lods
lcall
add
shl
je
inc
aas
or
inc
lds
cmp
mov
push
dec
stos
psllw
xchg
aam
xor
loop
cmp
or
push
sbb
sub
rolb
or
icebp
sub
xchg
das
mov
pop
icebp
test
lock
stos
data16
jae
aas
pusha
jbe
inc
xor
push
ljmpw
insl
jo
jno
test
hlt
stos
add
loopne
xchg
out
je
xor
ljmp
dec
or
sbb
popa
fadd
loope
sbbl
xor
dec
adc
add
sti
imul
lods
add
jne
mov
inc
mov
or
xor
xchg
cmp
movsl
xchg
xor
pusha
stos
push
mov
push
test
lods
pop
in
clc
icebp
mov
fcomps
pop
outsb
imul
fs
mull
and
fisttpll
xchg
dec
mov
pop
leave
mov
adc
popf
push
mov
jbe
loopne
and
fmull
dec
and
in
jnp
cmp
add
pop
pop
insb
mov
js
mov
loope
mov
test
sbb
add
adc
push
rclb
andl
mov
or
push
nop
in
mov
xor
xchg
push
pop
mov
add
lods
pop
stos
dec
jge
mov
aam
ss
mov
and
stos
mov
mov
xchg
cmpsl
in
jl
cmp
sub
mov
ja
sub
bound
and
fisttpl
push
cmp
jne
xchg
add
jbe
addl
sbb
mov
inc
mov
sbb
js
xchg
pop
andl
jns
push
mov
mov
mov
push
lods
stos
pop
lods
pusha
push
sti
cwtl
mov
push
add
cmpsb
in
scas
loopne
dec
and
jne
pop
push
cmp
inc
cmp
jae
repnz
mov
fwait
dec
xchg
cmp
cmp
pusha
dec
addr16
std
sub
cmpsb
or
push
test
mov
cmp
jge
push
fbstp
cmp
push
out
data16
xorl
add
mov
mov
pop
outsb
cli
sti
sti
pop
sub
adc
xchg
out
out
ror
aam
jns
lret
lea
mov
dec
xor
fcmovbe
push
icebp
mov
rolb
jb
xchg
mov
movsb
movsl
out
adc
push
push
jl,pt
mov
loope
lds
js
mov
pop
mov
gs
out
mov
push
je
add
lods
and
lahf
shl
or
les
leave
jno
pop
adc
jb
mov
push
sub
iret
scas
mov
lds
out
dec
adc
lcall
dec
push
sub
sahf
std
fsubl
fisttpl
fiadds
sub
out
stos
faddl
sub
int3
and
clc
adc
fsts
loop
gs
jecxz
cmp
mov
inc
or
scas
out
jmp
subb
sbb
stos
mov
adc
or
es
and
xchg
mov
sarl
addb
and
dec
in
repz
sub
jb
fisttpl
cli
jb
fisubrl
xor
jp
in
int
lret
fildl
jnp
pop
mov
jge
pop
and
push
mov
or
inc
jb
notl
arpl
movsb
cs
dec
dec
xor
int
pop
fnsave
add
or
shrl
aam
rcl
jle
xor
cmpsl
cmp
shlb
sbb
jmp
call
xor
jnp
or
add
jno
and
xor
mov
test
dec
rcll
mov
ret
push
iret
pop
xchg
adc
mov
inc
pop
pushf
jnp
test
dec
fdivrl
aaa
sbb
imul
push
push
movsb
shr
lahf
ds
stos
outsb
std
mov
jge
dec
rcrl
cmp
mov
inc
sub
push
or
jns
sub
test
mov
lcall
xchg
pop
pop
xorb
sbb
data16
sub
nop
and
cmpsl
repnz
repnz
push
cmp
cmp
mov
sub
insb
imul
iret
add
mov
mov
mov
xchg
cmp
hlt
mov
cmp
mov
pop
testb
mov
dec
fbstp
adc
sub
scas
mov
xchg
push
shlw
pushw
jnp
jge
sbb
cs
cmp
pop
out
loope
and
fninit
lahf
cmc
adc
sub
add
js
sbb
fs
insl
fsubs
push
xchg
lret
sub
push
push
jmp
pop
stos
adc
and
ss
pop
inc
fs
mov
cmp
inc
adc
cmp
in
mov
in
sbb
ret
mov
cmp
pop
cmpsb
fs
adc
ljmp
xchg
cli
jecxz
pop
add
pop
xchg
adc
cltd
sbb
sbb
cwtl
out
adc
jle
jb
cmp
data16
and
jle
cmp
rolb
xchg
mov
pop
ret
mov
aad
outsb
out
ret
dec
pushf
inc
or
mov
push
xor
mov
inc
inc
xchg
cld
push
and
push
xor
loopne
aas
sub
lahf
push
loopne
dec
mov
sub
cmp
mov
das
inc
and
test
sbbl
xor
push
cs
jmp
movsb
cmp
mov
das
scas
and
jmp
pop
pop
jae
ds
or
cmp
add
push
out
addr16
dec
adc
mov
jno
jmp
mov
fidivs
sub
lret
push
push
jne
mov
mov
in
sbb
push
add
mov
aas
or
sbb
jge
sbb
and
bound
movsb
cmpsl
push
cmp
or
fistpl
or
in
xchg
add
loope
bound
sbb
outsb
test
sub
cmp
nop
inc
dec
sahf
mov
cmp
bound
and
jge
mov
mov
popa
aaa
call
popf
repz
dec
sbb
jb
out
pop
xchg
add
aas
call
add
and
in
aas
scas
scas
mov
sbb
hlt
xor
mov
hlt
or
sbb
movsb
dec
inc
xor
adcb
in
emms
sub
mov
pusha
nop
in
add
sbb
or
mov
stc
cld
inc
out
pop
mov
or
or
mov
movsl
lea
xchg
add
jo
fs
outsb
repnz
test
and
push
push
push
into
lret
test
adc
cmp
xlat
or
adc
and
imul
pop
frstor
addb
pop
pop
cmpsl
cmp
loope
xchg
pop
inc
push
aas
aas
jl
jecxz
popa
shlb
xlat
fdivl
fidivrs
fdivrl
insb
xor
push
sbb
inc
cmp
cwtl
cli
and
imul
xchg
adc
orl
cmp
or
fnstenv
in
ret
pop
pop
pop
leave
mov
pop
push
add
sahf
adc
push
loope
iret
mov
imul
filds
loope
movsl
push
or
dec
negl
test
add
movsb
xchg
out
neg
dec
cwtl
fadds
sti
inc
inc
lods
jno
icebp
dec
insb
dec
push
add
bts
push
scas
and
push
outsl
aaa
lret
test
mov
pop
mov
test
sbb
xor
xor
push
inc
insb
jne
cmp
inc
dec
mov
mov
add
ds
stc
dec
add
cmp
add
jbe
push
inc
jo,pn
cmp
add
push
xchg
jo
shr
cmc
fsincos
jae
mov
outsb
cmpsl
js
xorl
lods
sub
mov
dec
fs
mov
and
lock
mov
add
xor
loopne
sub
lret
xor
adc
pop
es
dec
mov
fidivs
xchg
jo
test
rorl
leave
dec
sbb
sti
jle
in
jecxz
mov
call
das
iret
cwtl
jmp
repnz
push
push
or
movsl
pop
sub
adc
and
fcmovne
lret
adc
iret
mov
mov
shrl
ret
push
pusha
movsb
dec
jns
out
movsb
cmp
cld
leave
rorl
stos
jb
sub
jmp
jp
mov
jmp
cmpsb
fistpll
sub
cli
pop
pop
cmp
iret
int3
ret
sar
mov
outsb
out
fisttpll
or
sbb
push
int
loop
scas
push
xchg
jbe
jo
jmp
fisubrl
pop
jo
cli
pop
mov
push
rcrb
inc
or
andb
scas
lret
add
es
push
or
sub
int
outsb
pop
sarb
stos
push
ds
mov
push
mov
test
icebp
lret
out
fildll
imul
aaa
lret
pushf
out
lock
aas
jg
mov
inc
jae
cwtl
loopne
pop
sti
sbb
ja
jp
sub
lret
inc
cltd
push
shll
outsl
fcoms
mov
jo
test
mov
sarb
data16
xlat
movsl
jae
popf
dec
sbb
adc
outsb
cmc
in
jb
mov
insl
add
add
inc
pop
dec
dec
loope
loop,pt
int3
stc
imul
cmp
mov
nop
arpl
clc
pop
aas
andb
inc
stos
adc
es
jno
xlat
push
roll
or
cmp
js
aaa
outsb
loop
icebp
xor
jbe
decl
out
mov
leave
jne
leave
cmp
in
mov
dec
int3
push
and
mov
lahf
mov
pushf
add
add
icebp
mov
sub
push
ret
rorb
fsts
outsb
or
pop
in
sub
adc
shlb
pop
inc
pop
arpl
adc
sar
sbb
movsb
xor
jns
out
loope
aaa
mov
cmpsl
xor
out
fnsave
jle
sub
cmp
or
or
pushf
sub
mov
sub
pusha
repz
shl
adc
mov
mov
lahf
and
xlat
dec
popa
std
lret
and
jl
xor
sub
jo
mov
cmp
xor
aad
add
mov
xor
dec
divl
ret
scas
push
imull
fidivrl
xor
ss
cmp
cmp
mov
push
jge
jae
add
pop
xor
mov
lcall
mov
repnz
jle
sarb
adc
sub
add
nop
jp
cmpb
ja
pusha
jecxz
call
jle
in
push
sub
testb
ffree
xorb
sub
fcmovne
and
push
xchg
jp
pop
cmp
inc
xchg
lcall
sbb
pop
lret
push
ret
inc
pop
repnz
mov
fadds
and
fstl
or
xor
sbb
jle
or
and
pop
mov
ret
dec
sar
pushf
add
mov
fs
shll
adc
pinsrw
adc
pop
pop
sub
cld
ret
dec
mov
mov
cwtl
push
or
int
mov
pop
shlb
scas
int
sahf
jmp
pop
xchg
cwtl
pop
adc
icebp
and
push
bound
sub
jae
mov
cs
add
jg
scas
subb
mov
les
out
icebp
push
dec
rorb
adc
das
fiaddl
rclb
rcr
daa
outsb
cmp
mov
pop
xchg
ror
in
repnz
adc
movsb
rolb
test
lock
or
and
fsub
pop
adc
jb
cwtl
bnd
xchg
pop
jmp
adc
rcrl
das
mov
into
sbb
cmp
or
scas
mov
and
xchg
dec
jbe
mov
add
inc
cmpsl
mov
add
mov
lret
outsl
adc
add
cli
sahf
lret
pop
push
repnz
pop
nop
cli
in
pop
shlb
inc
loopne
fld
xchg
repnz
stos
jl
push
mov
and
inc
inc
or
and
push
mov
in
sbb
xchg
fbld
xor
mov
loopne
mov
dec
arpl
mov
ret
inc
cmp
imul
pop
lahf
and
inc
and
loop
out
xchg
sbb
imul
cltd
pop
inc
rorb
and
pop
loop
mov
cltd
lcall
dec
adc
pusha
adc
cmp
bnd
ret
fmul
push
xor
stos
cmpsb
movsb
push
pop
std
js
fimuls
mov
xor
shll
shrd
scas
push
int3
addb
cmp
call
mov
popa
lret
out
movsl
repnz
sub
jle
push
xchg
adc
pop
pop
adc
xor
cli
aaa
mov
push
xchg
and
inc
sahf
sbb
and
jle
popf
xchg
daa
cmp
jge
lods
sub
adc
jle
lods
mov
xchg
pop
adcb
notb
out
shlb
lods
mov
rorb
jne
mov
jo
mov
push
xchg
sbb
mov
pop
inc
add
sub
int
data16
shll
mov
ss
bound
sahf
shll
in
jno
xchg
add
fst
cli
xchg
dec
nop
gs
pop
out
push
fs
or
push
repnz
sahf
icebp
insb
movl
outsb
testl
imul
popa
lods
and
mov
jb
mov
lods
shl
lds
or
xor
jl
sbb
mov
mov
inc
fwait
jne
lock
and
and
and
dec
jmp
add
ret
dec
aas
xor
xlat
mov
jmp
imull
sbb
rclb
jecxz
add
xor
and
cmpsb
xor
adcl
fdivl
inc
cmp
imul
popa
inc
mov
add
mov
lods
imul
insl
and
loope
mov
or
add
mov
shr
push
and
ja
adc
inc
adc
aas
pop
es
jle
sub
mov
jecxz
aam
addr16
adc
xchg
sti
mov
xchg
and
shlb
lahf
sub
mov
push
shr
adcl
xchg
fldl2e
mov
fisttpll
cmp
or
xchg
rol
dec
mov
xchg
dec
adc
sbb
sbb
mov
mov
mov
lods
lcall
cwtl
loope
sbb
loop
or
xchg
fildl
and
rcll
inc
movsl
das
out
jmp
push
cmp
in
adc
cmp
daa
bound
inc
pop
pop
push
into
cmp
aaa
in
ds
out
nop
cwtl
pusha
xor
loop
jmp
repz
inc
jl
mov
pop
andb
xor
inc
inc
jae
js
add
insl
pusha
sbb
lock
add
cltd
sbb
dec
std
scas
lret
mov
daa
pop
addr16
imul
xchg
mov
pusha
push
fisttps
decb
test
in
mov
lcall
mov
cmpsb
jecxz
daa
xor
dec
negl
popa
sbb
mov
mov
mov
mov
jbe
push
push
int3
orb
aad
lahf
xlat
cmpsl
cmpsl
xor
loopne
jo
std
cmpl
cmpsl
vpshufd
cvtps2pd
pop
sbb
cmpb
xor
aad
mov
pop
out
iret
aas
xchg
add
jp
mov
lea
movsb
popf
push
movsl
fsubrs
mov
or
test
rorl
fwait
loopne
aad
hlt
test
shll
or
xchg
out
sub
out
or
or
jg
gs
in
lcall
lahf
mov
shll
into
push
xchg
push
out
adc
xchg
aas
ljmp
jne
dec
pop
xchg
xchg
and
outsb
sbb
push
xchg
mov
or
sub
xor
fwait
nop
jb
inc
mov
fldl
cmp
mov
test
mov
xchg
mov
inc
dec
dec
inc
cmc
adc
inc
stos
addb
xor
push
jb
add
imulb
dec
lret
dec
cltd
in
movsl
out
xchg
in
addr16
fldenv
iret
js
nop
jo
push
stos
add
adc
lods
popf
jb
hlt
and
pop
cmp
ret
sbb
inc
sub
popa
stos
mov
xchg
push
int
xor
adc
out
adc
addb
pop
imulb
mov
iret
testb
xchg
cli
cld
or
les
pop
pop
sub
shlb
out
jecxz
lock
pop
out
dec
je
cmp
mov
or
push
xor
xor
nop
rolb
and
hlt
lahf
imul
fwait
mov
inc
fdivs
add
loop
cmp
scas
jecxz
dec
pop
mov
scas
cmovo
mov
cmp
pop
ljmp
add
lea
xor
add
testb
sahf
push
fisubrl
and
sub
mov
adc
les
arpl
mov
jp
sbb
inc
adcl
nop
or
mov
pop
imull
push
or
mov
inc
stos
adc
push
scas
push
repz
icebp
push
pop
mov
pop
in
int
jae
sbb
rorb
fsubl
cmp
jge
leave
test
fwait
in
mov
mov
mov
xor
stos
sub
push
mov
aaa
dec
push
dec
xchg
fisubrl
mov
inc
or
inc
jnp
out
ljmp
fnstsw
dec
pop
fadds
mov
fisubs
xor
test
cwtl
mov
push
adc
or
int3
jbe
stos
sub
popf
jno
aaa
add
sbb
pop
fs
out
push
xchg
sub
call
shll
or
add
ss
xchg
les
sbb
nop
lea
pop
out
mov
ss
shl
pop
xlat
add
gs
out
imul
movsl
inc
sub
cmp
or
mov
mov
cwtl
ficoms
lahf
xchg
xor
dec
pop
cmp
cmpsl
sbb
shll
pusha
ficoms
cmpsl
and
xor
in
lea
fidivs
jb
test
stos
test
aas
addb
pop
lods
xchg
insb
imul
sbb
mov
bound
lds
std
sbb
mov
xchg
leave
jle,pt
mov
pop
push
rcl
xchg
jno
loop
ja
push
or
sub
out
loop
fcomp
je
movsb
pop
or
dec
pushw
jge
dec
jns
or
or
dec
sti
popa
imul
adcl
mov
mov
xor
sub
and
sbb
movsb
mov
icebp
sbb
fwait
or
sub
rolb
and
aad
lret
nop
dec
and
cmp
sbb
clc
ljmp
dec
imul
ja
xor
pushf
sbb
lcall
shrb
push
sub
dec
jecxz
mov
mov
or
sbb
scas
jno
xor
xor
inc
xor
fst
sub
or
jb
ret
loopne
pop
or
xor
aaa
add
stc
mov
pushf
sti
pop
adc
pop
jge
hlt
test
jb
or
out
fidivrs
inc
out
adc
inc
popf
popa
subb
daa
sub
rcr
jae
adc
mov
xchg
hlt
rolb
sbb
jne
xchg
push
sarb
loope
ftst
or
dec
imul
in
test
cmp
fwait
jle
dec
xor
add
or
pop
fs
pop
fdivrp
mov
dec
and
movsl
or
shlb
push
push
or
scas
mov
arpl
jne
mov
hlt
xchg
jnp
enter
fs
mov
add
or
sub
orb
cmp
dec
mov
and
inc
popa
cmp
push
mov
and
int
adc
dec
sub
dec
cltd
push
inc
xor
call
cmpsb
cwtl
xchg
dec
push
and
inc
add
sbb
xchg
clc
cmp
in
xchg
xchg
je
jns
std
push
popf
test
adc
inc
lcall
adc
inc
out
popf
add
mov
shlb
outsl
inc
sbb
dec
mov
mov
xchg
rcll
and
inc
lds
or
test
fldt
aam
cld
xchg
sbb
push
xchg
mov
push
je
pop
outsl
push
mov
arpl
and
stos
jne
sbb
mov
cltd
mov
jnp
mov
cld
sub
xchg
jmp
sar
repz
inc
outsl
dec
inc
xor
cltd
pushf
jo
adc
adc
sbb
mov
inc
pop
cmp
insb
popa
dec
imulb
leave
dec
ficomps
lahf
data16
ja
in
leave
inc
and
ja
mov
cli
xchg
in
xchg
aaa
stc
mov
sub
lret
in
or
dec
cmc
lahf
mov
loope
es
cmp
ja
inc
bound
fwait
push
sbb
pop
mov
outsl
jge
add
gs
cmpsl
cmp
add
rorb
lret
jecxz
or
fwait
push
inc
idiv
pop
dec
adc
in
jb
jbe
add
dec
ljmp
in
pop
sbb
mov
das
out
and
aaa
lret
dec
fisttps
and
dec
mov
inc
in
sarl
add
lds
negl
cmp
adc
mov
mov
scas
lods
ja
subl
sbb
push
mov
pop
ficoms
cmp
mov
add
lods
sbb
sbb
ror
push
int
add
inc
gs
xlat
sub
mov
in
xchg
jl
add
or
insl
pushf
repz
insb
add
outsb
maxps
push
mov
sub
shlb
lret
add
inc
nop
push
mov
int
shl
lret
adc
cltd
or
test
sbb
mov
xchg
adc
cmp
shl
andl
cmp
or
and
jecxz
mov
mov
ja
leave
cmp
jmp
pop
mov
sbb
pop
cmpsl
data16
sub
dec
ds
iret
mov
inc
nop
inc
sub
jp
sbb
mov
mov
jnp
gs
push
insb
push
mov
cwtl
pop
and
inc
sub
sbb
push
cmpsl
sbb
and
popa
sub
mov
pop
dec
or
div
fsts
insl
adc
dec
imul
les
mov
jmp
xor
ret
pop
push
cmp
mov
out
sub
and
repnz
jmp
mov
mov
push
mov
loopne
imul
adc
add
xchg
push
test
out
lea
sbb
cs
mov
pop
int3
hlt
shrb
dec
mov
fldt
icebp
mov
bound
mov
mov
loope
enter
lock
xor
fiaddl
or
insl
jecxz
add
in
mov
xor
pop
ret
stos
lods
pop
push
icebp
in
sbb
cmp
push
imul
call
lcall
mov
pushf
lea
mov
fstps
clc
fcoms
inc
rolb
jbe
sbb
dec
das
adc
fidivrs
movsb
pop
mov
call
jne
repnz
lret
rcr
add
dec
leave
push
mov
stc
mov
cwtl
lret
xchg
pop
dec
dec
cmp
int
movsl
xchg
sub
sub
ficoms
loope
std
cltd
push
call
pop
loopne
in
ficoms
mov
pop
ja
inc
lds
or
std
test
sarl
push
adc
testb
daa
pop
addb
lahf
int3
sub
mov
inc
push
jae
add
add
jecxz,pt
rcrl
inc
repz
mov
int3
mov
cmp
jge,pn
mov
loopne
mov
iret
stos
inc
jo
or
xchg
jmp
addr16
push
xchg
inc
adc
add
sub
inc
leave
xchg
popf
sbb
lret
inc
push
mov
fsubrl
fnclex
cmpsb
inc
cmpsl
sbbb
std
xchg
lret
adc
int3
stos
add
aam
rcl
cld
push
imul
xor
sahf
pop
iret
pop
sub
fwait
mov
lods
add
dec
cmp
arpl
xor
cmp
insb
divl
jnp
and
shrb
inc
adc
shlb
cmp
push
negb
aaa
cmpsb
fwait
loop
shrb
cmp
mov
sahf
push
cli
bound
push
dec
pop
or
inc
pop
sahf
testb
mov
add
popf
xor
push
add
mov
mov
movsb
dec
jo
cmp
dec
scas
push
inc
jne
mov
lret
mov
jmp
or
scas
mov
mov
ss
ss
mov
dec
jp
inc
dec
push
pop
cmpsb
enter
mov
mov
xor
push
out
add
xchg
out
popa
jmp
push
inc
es
push
xchg
cld
outsb
adc
lock
push
scas
xchg
scas
and
shlb
call
pop
or
xchg
inc
mov
movl
sbb
insb
cmp
pop
loop
loop
ret
sbb
jbe
mov
pushf
arpl
lock
das
add
jne
popa
cmc
cmp
add
adc
inc
sub
inc
and
xor
jl
sub
jae
insb
adc
test
ss
fdivrl
ja
adc
jne
and
xorb
and
mov
xor
pop
mov
scas
push
inc
mov
add
sbb
cmp
push
lcall
sub
fsts
cmp
and
mov
jnp
sub
sbb
pop
sub
pop
loope
imul
xchg
pop
xor
jmp
mov
bound
aam
shrl
dec
ja
cli
inc
xor
stc
aas
inc
sbb
loopne
jns
in
repnz
std
cmp
xchg
sbb
inc
scas
ss
insb
mov
aaa
pop
cmp
int3
and
lock
pop
shr
out
je
xor
cmp
dec
addr16
push
jns
repz
adc
data16
xchg
andb
push
shl
pop
xchg
pop
sbb
inc
xchg
je
sub
ficomps
push
xchg
jnp
rcl
jnp
rolb
lret
jl
or
aam
mov
dec
stc
cld
jno
jae
lds
mov
mov
inc
mov
mov
aad
adc
fcomp
out
pop
sbb
mov
movsb
aam
lret
push
jle
cmpsl
xor
xorl
sbb
jae
and
addr16
xor
inc
aas
hlt
orb
mov
loope
in
inc
rorl
mov
int
loope
or
loopne
cmpl
in
inc
push
xor
pusha
cli
jge
and
shrb
divl
test
inc
insb
pushf
and
out
xor
sub
in
mov
shrl
std
loope
ret
adc
ljmp
std
mov
jnp
and
jo
inc
sbb
and
cmpsb
rep
cmp
shlb
shrl
cmpsb
cmp
cmp
jb
and
mov
cmpsb
jne
sbbl
add
add
stc
dec
push
push
fsubs
sub
add
push
inc
pop
outsb
adc
jmp
push
pushf
enter
icebp
mulb
jecxz
add
pop
dec
std
mov
mov
insl
test
jg
fisubl
mov
cmp
cmp
int3
xor
push
int
add
dec
dec
dec
jbe
inc
mov
lret
test
fs
loop
jae
dec
mov
fwait
notl
mov
and
pop
pop
in
ss
push
rolb
rcrl
push
ja
popa
ret
aam
cmp
mov
mov
cmpsl
aas
mov
iret
sqrtps
hlt
cmp
push
or
and
add
cmpsb
shl
mov
or
or
jp
jno
sbb
cmp
jbe
xchg
push
xor
add
inc
or
add
fiaddl
pop
mov
xchg
movsl
pop
mov
or
fnstcw
push
aam
mov
fwait
pop
into
hlt
and
testb
aad
insl
js
push
add
aad
shll
rolb
pop
aam
cmp
push
xor
adc
mov
das
push
jns
and
movsl
std
loopne
les
xchg
sub
push
dec
pop
and
xor
sbb
je
mov
ret
jl
add
pop
cmp
add
xor
iret
pop
shrl
or
stc
jmp
mov
sub
dec
xor
sbb
div
loopne
mov
ret
lret
jae
cmpsb
jecxz
incl
mov
leave
and
sub
je
orb
sub
movsl
inc
sbb
inc
lock
mov
add
cwtl
mov
and
or
adc
out
push
mov
fisttpl
jecxz
stos
and
pop
movsl
popf
pop
mov
sbb
adc
mov
call
dec
dec
out
jae
fmul
ret
cs
sbb
xchg
and
out
stos
in
and
push
xorb
rolb
dec
rol
test
inc
jge
mov
aas
mov
jp
insb
push
shrl
mov
ss
xchg
lods
sbb
lods
xchg
insb
sub
std
lea
insl
cwtl
cld
push
push
fcmovnbe
daa
cmp
jmp
lock
ds
in
inc
cs
and
sarb
and
inc
push
icebp
or
mov
mov
shll
xor
add
xor
adc
jns
andb
adc
es
iret
pop
fiadds
aam
cltd
outsl
xor
cmc
repnz
jp
xor
cmp
inc
mov
jmp
shrl
and
aaa
xor
andb
cmp
and
nop
push
lcall
pusha
dec
movl
test
aaa
lea
mov
jp
sub
aas
mov
shrl
xchg
fs
inc
addb
push
pop
int
mov
mov
sub
js
mov
sbb
outsl
or
mov
sub
xor
js
jp
mov
ss
pop
jnp
dec
lret
cli
test
mov
adc
pop
mov
test
sbb
test
test
cmp
or
mov
push
aam
lahf
in
mov
stos
jnp
cmpsb
jp
ficompl
xchg
add
adc
popa
stos
xor
push
mov
inc
lods
push
jl
and
out
mov
pop
dec
int
lea
inc
mov
jno
mov
js
xchg
push
push
popfw
push
push
fsubl
or
int
shl
vsqrtss
adc
adc
in
movsb
sub
iret
cmp
xchg
xor
push
push
iret
xor
faddl
imul
xchg
cmpsb
mov
xchg
xlat
shrb
scas
cmc
mov
mov
mov
cmc
xchg
in
lahf
fimull
outsb
mov
mov
je
bnd
add
pop
leave
mov
mov
pop
xchg
dec
out
dec
xor
out
add
or
test
sbb
adc
xchg
mov
inc
inc
mov
push
and
fwait
iret
lret
pushf
adc
clc
push
es
sbb
push
ja
jns
and
test
cmp
mov
out
mov
iret
jno
mov
inc
jbe
push
or
lret
call
jecxz
flds
lahf
daa
enter
cmp
imul
lcall
xchg
sbb
push
cmp
adc
xchg
icebp
test
push
xchg
loop
inc
inc
inc
jge
loopne
sbb
jo
xchg
jle
jo
push
pop
adc
add
data16
in
pop
mov
frstor
arpl
js
ficoml
xchg
iret
repz
dec
xlat
and
and
into
in
sub
lret
ljmp
ret
or
test
rol
sub
sahf
and
dec
xor
inc
xor
mov
out
cmp
orl
lds
and
jp
lods
out
pop
ljmp
mov
push
xchg
add
sbb
jne
adc
dec
or
adc
push
pop
nop
aas
jno
shrl
pushf
xchg
xor
push
fmuls
inc
xor
push
aaa
clc
and
dec
xlat
push
lret
jl
bound
lret
push
pusha
and
sti
jmp
xchg
and
std
into
pop
repz
cmp
stc
negb
adc
testb
xor
cwtl
dec
out
xchg
dec
int3
xorb
aas
and
xchg
jge
jl
dec
dec
jp
popf
cs
add
sbb
cmp
shl
lock
lods
stos
bound
movsl
jo
xor
inc
mov
jo
or
mov
mov
pop
push
push
dec
test
icebp
push
add
orb
dec
mov
sahf
lcall
aaa
mov
fmull
mov
mov
xor
lods
push
mov
ret
inc
dec
in
mov
mov
sub
repnz
aaa
negb
test
ret
cmc
mov
adc
push
mov
sub
xor
jbe
xchg
push
shl
push
jp
push
clc
xor
mov
pop
mov
xor
mov
or
dec
aaa
mov
add
and
test
push
scas
icebp
adc
test
out
cmp
ljmp
dec
or
lock
pop
mov
dec
rclb
or
lcall
adc
imul
jmp
loope
inc
xor
push
push
stc
insb
sbb
or
dec
sbb
out
or
mov
outsl
and
mov
clc
sbb
mov
push
push
push
pop
sqrtps
fisttps
cmpsl
fcoml
scas
dec
xchg
aad
lahf
divl
cmp
push
fldcw
or
lahf
adcl
mov
aad
fidivl
hlt
pushf
mov
inc
loopne
mul
leave
push
pop
xlat
lret
cmp
rcrb
pop
es
repnz
lret
jp
loop
push
pop
ljmp
and
push
push
ret
div
xchg
clc
into
xchg
jmp
sahf
cmp
mov
mov
ret
inc
adc
mov
xchg
call
and
and
xlat
jbe
daa
mov
dec
mov
test
fnsave
outsl
push
xor
add
cli
scas
mov
iret
xor
pushf
vmovaps
icebp
pop
mov
dec
jl
gs
push
je
ljmp
xchg
or
cmp
es
outsb
sbb
mov
and
mov
jnp
sarb
fiaddl
jecxz
xor
insl
or
jmp
add
cld
sahf
jnp
xchg
cmp
jns
scas
fadd
cmp
or
hlt
push
pusha
popf
shlb
sbb
xchg
and
pop
ret
xor
rcr
and
or
out
ljmp
repz
mov
test
in
sbb
lock
pop
in
dec
sbb
hlt
and
sub
dec
gs
mov
stc
lea
jge
insb
add
push
jmp
fsubs
jb
orb
in
out
mov
lea
adc
ret
sub
addb
bound
sahf
lahf
add
push
adc
test
mov
insb
arpl
jb
cmp
or
pop
pop
fstpt
jp
scas
xlat
sbb
xchg
mov
add
dec
mov
cmp
jno
lods
xor
push
call
mov
xchg
mov
sarb
outsl
sbb
ret
movsb
int3
call
adc
stc
xchg
fucomip
push
insb
mov
mov
sbb
test
fmuls
push
addl
mov
jae
int
mov
or
lret
sbb
stos
jo
je
mov
mov
outsb
dec
ret
pop
jne
fimull
pop
rolb
mov
pop
xlat
add
popa
stos
or
loope
mov
xchg
pop
inc
add
movb
cmp
gs
jb
filds
in
add
in
iret
sbb
push
jp
int
mov
pop
cmpsb
fmull
cwtl
or
out
icebp
push
add
shlb
call
mov
mov
outsb
mov
rcl
mov
popf
lahf
into
jno
or
mov
adc
dec
and
xlat
mov
push
into
mov
and
and
movsl
imul
sbb
xchg
cli
mov
leave
lret
cs
cmp
insb
lret
or
mov
inc
mov
cmp
inc
mov
sti
test
pushf
adc
xchg
and
insb
adc
sbb
pop
xchg
ljmp
ds
repz
aam
jecxz
mov
inc
addb
and
and
xchg
push
push
fs
cltd
pusha
push
inc
clc
call
mov
push
dec
cmp
sub
cmpsl
test
pop
mov
push
inc
sub
jg
ss
fidivrl
push
adc
ljmp
je
test
sbb
or
aam
xchg
mov
cwtl
pmuludq
fistpll
out
out
push
jnp
jne
mov
jne
mov
daa
enter
mov
dec
mov
jae
int
dec
test
hlt
cld
ljmp
out
js
push
mov
push
cmp
out
lds
sub
dec
lahf
pushf
lds
out
insl
std
leave
into
jmp
pop
mov
pushf
mov
cmp
mov
push
lods
enter
out
adc
xchg
lahf
and
and
in
sub
push
ret
icebp
test
jns
jb
lea
mov
adcb
push
mov
sahf
lods
pop
and
in
inc
popf
mov
xor
call
pop
or
dec
inc
cld
adc
shlb
jecxz
mov
arpl
test
fildll
mov
ds
mov
dec
mov
and
push
dec
mov
xchg
ror
aas
jo
inc
cmp
dec
std
ret
sbb
xchg
sbb
lds
fmuls
push
aaa
int
in
dec
sti
lret
sbb
movb
mov
imul
sti
add
in
inc
mov
sbb
push
dec
or
dec
iret
bound
jl
out
and
rclb
sti
xchg
jl
mov
out
xchg
fcomip
ror
xchg
ja
aas
inc
add
lods
sub
fwait
xor
add
aad
mov
ret
popa
insb
inc
lret
jnp
pop
lret
mov
jle
push
mov
xor
or
cltd
mov
out
or
sub
out
add
pusha
js
fcomps
out
xbegin
fidivl
stos
cmp
mov
out
mov
test
in
dec
mov
lea
mov
movsl
ret
push
pop
mov
mov
mov
filds
mov
les
pop
or
jg
sti
xchg
js
push
jge
test
cmp
mov
dec
dec
xchg
push
xchg
notl
xorb
lahf
mov
push
fildll
mov
imul
and
inc
or
cwtl
mov
lea
out
imul
imul
mov
outsb
in
cmpsb
sub
xchg
in
out
or
lea
stc
stos
pop
mov
aaa
jp
cwtl
cmp
cli
jmp
daa
jbe
in
cmp
xor
xchg
loope
sbb
sub
mov
adc
mov
insb
adc
in
xchg
inc
ljmp
lahf
cld
and
pop
pop
sbbb
dec
mov
das
lcall
idivb
xorb
push
aas
jns
push
sub
les
into
js
push
xor
insb
push
mov
data16
inc
int3
jno
in
cmovle
xchg
mov
cltd
mov
xor
mov
add
cmp
subl
dec
loop
add
xor
rclb
adc
fnstcw
dec
sub
adc
outsb
mov
divb
dec
pop
les
movups
adc
xchg
jno
hlt
in
movsl
pop
pop
cmp
and
mov
push
add
hlt
insb
out
ret
fdivrs
adc
xchg
pop
fcom
movswl
pushf
je
cli
inc
ret
jmp
pop
movsb
sub
push
sbb
push
in
xor
out
cwtl
lret
push
dec
lcall
dec
fs
in
or
mov
mov
mov
cltd
xchg
mov
aas
xchg
movsb
loop
sbb
out
mov
aad
sub
fnstcw
xchg
push
scas
outsb
sbb
jmp
pop
inc
pop
sub
inc
cmp
imul
repnz
dec
pop
pop
test
sub
inc
stos
mov
shll
mov
push
dec
jg
scas
jge
cs
push
ficomps
jle
push
hlt
add
and
lds
sbb
out
and
push
repnz
xor
dec
push
rcrl
mov
mov
mov
insl
lret
jae
cmp
fs
xchg
test
pop
setle
add
jns
add
lea
movsb
xlat
xlat
xor
fisubs
sti
gs
mov
cs
std
mov
repnz
das
test
das
and
push
cmp
bound
cwtl
out
sahf
xchg
xlat
pusha
mov
shll
cli
bound
xor
sahf
push
inc
mov
incl
xchg
add
in
out
push
jl
or
jb
test
cwtl
int3
bound
cmc
out
cld
sbb
ret
push
lock
test
lock
add
xlat
shll
sbb
sti
mul
dec
lea
inc
dec
push
movsl
lahf
mov
cmp
mov
mov
fdivr
lret
imul
out
fldcw
dec
add
out
js
cmp
inc
jle
lret
mov
and
data16
sbb
fnstsw
cmp
jnp
cwtl
pop
adc
xor
int
repz
gs
pusha
in
imul
or
pop
mov
add
adc
popf
inc
addr16
cld
gs
scas
popa
pop
mov
je
mov
dec
xor
push
mov
roll
xor
inc
pop
jl
fs
mov
fdivrl
sub
out
jb
pop
je
and
test
mov
pop
decl
xlat
lret
fwait
in
out
sahf
push
test
repz
push
dec
and
sub
add
jne
outsl
jl
xor
lods
mov
loop
lds
pop
or
sti
fcoml
cld
int
mov
mov
pop
push
xchg
das
dec
push
andb
arpl
shl
fcomi
mov
call
movsl
fidivs
aas
cwtl
and
sbb
push
and
or
mov
and
out
movsl
mov
pop
iret
mov
xor
inc
cmp
and
push
mov
push
test
dec
cli
jo,pt
mov
out
mov
outsl
mov
mov
mov
dec
lret
cld
std
js
outsb
push
jb
mov
xchg
cli
jmp
push
ljmp
pop
inc
cmp
lock
add
or
cli
leave
shl
sarl
insl
adc
es
adc
mov
lahf
mov
mov
fistpl
test
out
add
leave
insb
out
jmp
lods
cwtl
stos
cmpsb
dec
test
es
into
iret
repnz
int3
stos
sub
and
or
pop
aam
scas
adc
lds
ss
ja
mov
cmp
loop
scas
fistl
or
mov
xor
or
aaa
xchg
jmp
mov
and
shll
mov
cmp
dec
jns
popf
jae
mov
lods
sbb
push
pop
shll
jl
lock
push
loope
xchg
fwait
dec
mov
jno
mov
pusha
jg
jp
enter
and
stos
push
fcoml
clc
and
mov
and
or
icebp
mov
inc
loopne
test
xchg
xchg
push
ret
adc
push
xchg
arpl
addl
in
mov
jb
sbb
jmp
or
pandn
out
and
xchg
adcl
std
xor
fdivl
inc
add
hlt
mov
and
out
and
push
jns
sbb
clc
out
mov
es
scas
push
push
cltd
lcall
pop
jle
add
inc
xchg
xor
jbe
jmp
push
outsl
loope
sbb
arpl
into
ss
jecxz
xchg
imul
adc
into
aad
hlt
jmp
arpl
jno
nop
xchg
mov
rcrl
dec
scas
test
stos
pop
in
mov
mov
push
and
out
adc
in
ss
test
adc
mov
stc
cmp
mov
pop
call
push
push
out
in
mov
cmp
dec
xchg
es
adc
cli
push
in
mov
lds
test
out
scas
ret
cmc
cs
fdiv
scas
add
lods
jmp
sbb
jle
cmc
push
or
adc
ja
xor
and
mov
jnp
push
and
dec
inc
stc
xor
jg
pop
pop
repz
or
sub
call
imul
in
or
iret
xchg
mov
lock
rcrl
pop
js
out
int3
jns
mov
ret
out
leave
xor
jo
popf
xor
into
cmp
ficoml
popa
std
rcrl
adc
jge
fistl
daa
out
mov
scas
sub
bound
jo
mov
mov
pushf
or
inc
add
or
add
decl
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
cltd
add
add
adc
add
adc
add
testl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
inc
jo
insb
gs
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
insb
insb
push
imul
jb
gs
inc
insb
insb
push
outsb
jb
imul
jb
gs
arpl
data16
.byte
addr16
