pop
call
in
add
add
imul
cmp
sub
add
mov
add
fcmovnu
decl
sub
sub
imul
sub
sbb
sbb
inc
cld
add
mov
mov
sub
lret
sub
inc
mov
sub
sub
add
or
sbb
cmp
mov
repnz
sti
cli
push
mov
push
cmp
cmp
ss
adc
out
jbe
ret
inc
cmp
sbb
adc
fistl
addb
sbb
or
add
or
rcll
mov
mov
insl
neg
out
imul
scas
call
sub
addb
xchg
mov
mov
xor
sbb
pop
mov
adc
pop
imul
push
add
cmp
insl
add
shlb
adc
lock
jne
mov
fcmovnbe
ret
lock
outsb
cmp
mov
lret
or
mov
mov
mov
add
add
imul
mov
in
add
hlt
cli
pop
cmp
adc
adc
mov
ds
je
sbb
movsb
fcomp
out
testb
adc
outsl
or
mov
add
shr
adc
sbb
xchg
adc
add
sub
test
xchg
adc
add
test
jne
testb
jge
outsb
lods
mov
sub
or
mov
push
or
sarb
enter
pop
adc
pop
popa
sub
push
jge
leave
mov
mov
into
sti
pop
aaa
xlat
mov
bound
shll
mov
jle
sbb
or
leave
or
insl
outsb
fcmovnb
adc
sub
fsubp
fucomi
adc
shl
mov
pop
faddp
in
mov
mov
fidivrl
sbb
or
imul
imul
cmp
or
mov
inc
rcrl
cli
add
idivl
mov
and
inc
mov
cltd
lock
cs
push
ss
mov
sub
outsb
adc
jne
add
rorb
sub
in
shlb
addb
mov
pop
ss
add
sarb
shrl
mov
push
pop
enter
xchg
xchg
lods
adc
mov
jl
fwait
mov
sbb
push
shr
mov
lock
jge
icebp
push
xchg
or
xor
iret
cmp
ss
sbb
push
cmp
jp
sbb
jbe
rcrl
dec
sahf
add
jae
sbb
sub
sbb
decb
pop
outsl
test
pop
sbb
lods
cltd
ss
imul
adc
mov
fbld
sbb
mov
xor
jmp
sbb
xor
or
ds
jbe
ficoml
adc
adcb
pop
jo
sub
lock
pop
jb
sbb
jmp
or
clc
mov
mov
rclb
mov
enter
fldln2
mov
adc
adc
xor
movsb
rcl
pushf
loope
into
push
out
test
clc
xchg
mov
push
mov
scas
xor
cmc
rol
pop
lods
shrl
ljmp
cmpsb
jp
or
daa
shll
clc
adc
cmp
jge
incl
je
or
in
sbb
add
adc
ljmp
mov
sbb
xchg
popa
fldt
sbb
jmp
mov
sbb
leave
sbb
xchg
or
pop
xor
sub
mov
add
add
and
pop
jg
ja
out
and
push
add
push
sbb
add
into
mov
ret
call
dec
insl
rcl
jge
decb
or
int
or
xchg
push
insl
rorb
sub
mov
pop
int
or
sar
pop
add
jne
sarl
inc
cmp
js
rorb
or
enter
push
cmp
push
or
lds
jnp
inc
jnp
sbb
inc
notl
jmp
insl
scas
rolb
test
insl
scas
inc
inc
pop
add
rolb
pop
push
add
and
pop
push
fistl
add
out
pop
arpl
or
or
test
or
loopne
inc
test
add
rcrb
inc
rolb
pop
nopl
fcomi
bound
sbb
or
or
jnp
pop
adc
mov
or
jnp
mov
sbb
sar
mov
xor
and
and
mov
sbbl
add
sbb
test
gs
push
or
add
adc
fwait
ret
lock
icebp
add
xor
mov
adc
push
sbb
loopne
add
stc
mov
inc
fs
imul
mov
stos
mov
push
or
jnp
rol
push
addr16
sub
test
arpl
outsb
cwtl
shll
sti
leave
call
lock
add
mov
xor
and
movsb
js
push
push
adc
add
inc
call
pop
mov
loopne
sub
adc
dec
xchg
stc
jmp
sub
pop
aas
sti
inc
and
xor
shl
icebp
push
cmc
imul
add
repnz
or
mov
dec
aaa
xchg
int
add
sarb
mov
clc
or
prefetcht0
ss
loopne
add
mov
mov
fs
pop
dec
imul
cli
test
stc
push
pop
push
inc
and
mov
outsb
mov
push
sbb
shlb
das
ljmp
mov
cs
or
cmp
int3
add
mov
or
or
fsubrs
adc
test
bound
push
sub
cli
std
fadds
orl
push
dec
and
popa
pop
xorb
outsb
nop
or
xchg
mov
adc
in
cli
push
ds
loope
mov
or
add
and
ret
pop
push
pop
lahf
pop
roll
stc
insb
rolb
icebp
add
push
mov
pop
fildl
out
or
lods
xchg
push
mov
inc
sbb
and
rorb
aas
ret
sbb
and
inc
jae
stos
and
xor
insb
adc
ret
mov
stc
jp
push
rclb
add
adcl
mov
xor
repnz
pop
pop
lds
adc
mov
xor
data16
add
and
or
in
loop
adc
mov
mov
setno
mov
or
adc
lods
add
pop
hlt
loope
ljmp
jl
sbb
jbe
add
or
or
jmp
cmpl
or
mov
xlat
pop
lods
mov
jne
out
adc
inc
sti
mov
aam
popa
ljmp
into
cmp
mov
or
push
xchg
pop
jmp
jp
pop
fidivrl
xlat
xor
jno
or
pop
mov
adc
fldl
cwtl
lods
jp
call
mov
sub
lret
lods
xchg
fisubrl
call
or
inc
cmp
sbb
adc
int
repnz
add
sbb
ret
fdivrs
jge
test
fisttpl
push
shll
mov
add
push
or
ret
mov
jne
mov
or
xor
mov
lods
test
inc
hlt
add
or
sahf
inc
jo
jo
sbb
fidivl
negb
lock
ss
add
dec
sarl
inc
movsl
dec
jecxz
jecxz
loope
cmp
adc
sbb
jecxz
pop
inc
and
mov
mov
ljmp
xchg
or
ss
and
in
or
or
push
jnp
pop
adc
enter
repz
pop
cld
jge
xchg
mulb
incb
mov
cld
add
ljmp
jnp
dec
and
inc
mov
loop
out
xchg
dec
movzwl
cmp
cwtl
out
fstl
dec
ret
xor
add
adc
pop
pop
lods
cmp
sbb
push
push
xchg
outsl
aad
in
push
mov
ja
pusha
cltd
mov
loopne
dec
or
add
xchg
sbb
insl
scas
sahf
imul
add
pop
insb
dec
sbb
popa
sbb
inc
or
inc
hlt
sub
imul
pop
sarl
js
sub
sbb
pusha
or
rorb
inc
cmp
xor
bound
xchg
sub
mov
jbe
push
lods
sbb
push
ljmp
xchg
xor
ds
mull
jl
int3
push
push
pop
push
jg
ret
pop
pop
xor
movl
lret
pop
test
add
insl
sub
pop
adc
fldlg2
sub
test
push
dec
inc
sub
nop
fs
out
popa
aad
call
mov
add
imul
or
sbb
sbb
ljmp
pop
outsb
lret
dec
stos
sbb
xchg
mov
sbb
pop
call
sbb
jbe
out
or
push
pop
leave
dec
leave
mov
mov
mov
or
push
imul
dec
or
sarb
out
cmp
sub
andl
fldl
stc
mov
ret
sbb
xchg
cmp
lods
push
leave
sti
aas
sbbl
sbb
js
stos
mov
xor
push
in
sbb
inc
mov
pop
enter
sbb
or
les
mov
sbb
pop
add
jno
imull
push
add
push
push
and
ds
xor
sbb
popf
mov
and
xor
pop
repnz
xlat
rorl
sbb
xchg
or
jns
fs
xlat
inc
fucomi
roll
dec
into
xlat
bound
sbb
pop
cli
and
inc
icebp
mov
adc
pop
add
cmp
inc
cmp
pop
rolb
push
imul
stc
fs
push
rcll
adc
ret
scas
lock
std
add
push
inc
add
push
sbbl
add
push
mov
pop
cmpsb
push
mov
cmpl
inc
sub
adc
push
mov
or
xlat
jnp
push
call
int3
push
stc
hlt
sbb
sbb
pop
mov
adc
jecxz
repz
xlat
dec
cmp
push
mov
add
addb
mov
add
jne
loopne
xchg
jne
rol
pop
jae
les
xor
arpl
cmp
sbb
mov
mov
pop
push
loopne
sbb
mov
add
cli
insl
mov
xor
push
pop
pop
daa
push
xor
cmc
add
cli
or
pop
in
add
adc
stc
mov
es
inc
pop
pop
pusha
jns
jo
xor
inc
add
shll
sbb
mov
data16
into
cmpsb
mov
sbb
or
into
jne
or
push
push
adc
mov
inc
pop
lahf
add
mov
sbb
rclb
sbb
cmp
add
cmp
pusha
sub
mov
add
sahf
lret
aam
dec
in
stc
adc
jae
inc
and
aas
int
push
clc
leave
add
jnp
bound
rorb
ljmp
jmp
es
xor
pushf
and
insb
mov
rclb
push
push
pop
push
mov
dec
pop
les
bound
cmp
ljmp
adc
jns
icebp
dec
ljmp
xchg
push
loopne
adc
mov
pop
jecxz
mov
movsb
neg
je
data16
pop
push
stos
pop
sbb
push
mov
rcrb
fwait
xadd
add
inc
lret
inc
mov
cwtl
rcl
pop
sub
aas
cmp
call
jo
popa
pop
ja
add
scas
cmpsb
push
pop
les
adc
jl
cmp
pop
xchg
in
in
insl
test
in
xchg
rorl
jo
lret
xchg
inc
clc
and
lds
sbb
cmp
mov
add
and
mov
mov
mov
rcrb
lcall
repnz
inc
dec
rolb
push
push
sar
add
out
or
aad
pusha
xor
or
dec
push
inc
testb
sahf
push
adc
xchg
push
cwtl
push
test
mov
push
popa
mov
add
addr16
sbb
subl
mov
ret
push
mov
mov
sbb
or
and
faddl
pop
movb
shll
sbb
popa
add
es
mov
dec
xor
push
xlat
mov
lret
or
push
push
adc
loopne
inc
mov
or
enter
shll
sub
testb
idivl
xchg
push
push
stos
inc
and
enter
pop
cmpsb
or
pop
dec
mov
xchg
ret
inc
mov
mov
dec
cmp
push
scas
and
cmp
mov
cs
adc
push
mov
mov
mov
mov
sub
mov
pop
cmp
xchg
mov
inc
sbb
loope
inc
cwtl
adc
in
pop
in
pop
out
cmp
cmpsb
push
or
lea
xchg
mov
lcall
sub
scas
scas
cmp
mov
dec
bound
jae
addl
sbb
add
xorl
adc
into
testb
adc
inc
mov
rol
mov
in
add
ljmp
rclb
repnz
mov
jno
mov
sub
jp
or
das
xchg
cmp
sbb
int3
push
inc
mov
xchg
mov
sub
mov
sub
jg
imul
out
and
aas
idivb
jecxz
push
imul
ret
idivb
xor
jg
push
xor
lret
adc
lods
push
pxor
test
sub
adc
ds
adc
adc
pop
mov
push
subl
out
cltd
and
sahf
jb
cli
loopne
mov
adc
push
or
dec
add
lods
gs
sbb
loopne
es
or
pop
mov
ficompl
cmp
push
sbb
cmp
mov
dec
xor
mov
or
shll
push
mov
enter
mov
fs
mov
inc
adc
xor
movsb
int
or
pop
pop
mov
pushf
testb
pop
aam
enter
or
mov
adc
dec
push
xchg
dec
ficoml
add
mov
pop
and
fnstenv
mov
or
pop
sbb
push
imul
dec
rcll
fwait
adc
push
cmp
rolb
mov
add
sub
rorb
rdmsr
rcrb
lcall
cmp
nop
sub
inc
insb
imulb
sub
lret
or
cmp
out
xor
sub
sub
inc
add
je
mov
mov
inc
sarb
pop
sbb
out
ljmp
jo
xchg
sub
push
or
call
das
sbb
insl
adc
nop
mov
push
pusha
mov
push
push
adc
adc
xchg
into
inc
push
test
stos
adc
lods
mov
push
push
push
push
push
push
and
cmp
into
push
cltd
xor
out
sti
imul
cmpsb
or
mov
fldenv
add
jbe
mov
into
push
std
shlb
test
push
loopw
call
jecxz
push
mov
aad
inc
in
inc
pop
pushf
js
leave
shll
sub
or
dec
sub
jl
push
shrl
adc
clc
ret
and
adc
add
jb
and
sbb
sbb
subl
rorl
mov
js
inc
test
adc
loope
lret
jmp
or
in
mov
or
xchg
scas
dec
notb
ret
pop
pop
cs
js
ret
adc
inc
push
ret
lds
mov
ficoml
adc
inc
ret
repz
push
ja
mov
cli
loope
cmp
inc
popf
sub
icebp
sbb
xor
iret
rorb
and
mov
push
stos
mov
cmc
in
mov
adc
imul
mov
rol
in
push
add
orb
bound
lock
pop
ret
or
xlat
dec
pusha
xor
push
cmp
clc
fwait
and
rcr
lcall
adc
mov
inc
mov
sbb
out
gs
inc
pusha
loop
mov
shl
add
dec
fcoml
sub
loope
adc
push
out
cmp
sarl
ds
push
sub
cli
arpl
lret
in
push
scas
push
orb
xor
lods
and
mov
jo
bound
rcll
jo
mov
add
loop
mov
push
andb
and
push
out
xor
out
mov
ret
shll
sbb
sbb
or
push
mov
add
inc
or
gs
movsl
mov
insb
add
movb
test
pop
sub
jp
into
ret
push
out
inc
inc
jmp
xor
lds
push
stc
clc
aaa
shlb
leave
sub
insl
pop
sub
pop
or
insb
dec
xor
jmp
hlt
sub
fadds
loope
pop
stos
stos
rclb
push
pop
jae
cmp
into
push
ljmp
cmpsb
or
inc
jle
leave
dec
mov
sbb
add
and
rorl
rcll
mov
lock
pop
cld
dec
sub
mov
stos
xor
std
mov
mov
shll
lret
shlb
jbe
inc
adc
xchg
sub
sub
sahf
stos
lcall
sub
insl
xchg
mov
cmp
mov
xor
ret
and
test
or
cmpsl
lods
in
mov
popf
insb
inc
xor
push
cmp
mov
adc
pop
inc
add
aaa
xchg
cmp
mov
or
rcl
xor
add
or
sub
daa
outsb
lds
push
out
imul
or
sarl
mov
fmuls
cmpsl
ja
mov
dec
push
lea
lret
orl
shll
add
xor
mov
inc
out
push
dec
mov
jg
adcb
push
push
push
inc
push
cs
sub
and
jnp
in
mov
xorl
ljmp
fimuls
xor
sbb
dec
mov
adc
adc
dec
loopne
push
jle
rcr
rcrl
cltd
xorl
addr16
xchg
inc
mov
xor
mov
xlat
pop
adc
or
jo
mov
pop
and
cli
jb
stc
inc
pop
xchg
rcl
sub
and
or
or
and
push
sub
iret
js
pop
lret
sarl
xchg
popf
mov
push
hlt
into
cwtl
inc
sbb
lods
cmc
loope
addb
stc
cmp
add
leave
pusha
hlt
aad
jb
lds
and
ljmp
sub
and
inc
cld
add
push
push
adc
push
add
sub
out
add
jge
or
inc
mul
jmp
jb
clc
shll
in
pop
mov
insb
mov
or
adc
scas
rolb
mov
push
test
adc
cmp
test
in
sub
out
adc
lcall
ds
mov
push
imul
or
mov
stos
test
outsl
mov
mov
movsb
je
sbb
or
scas
mov
mov
xor
inc
push
adc
mov
push
cmp
or
stc
shlb
pop
mov
stos
cmp
mov
sbb
orb
mov
enter
pop
cmp
sub
xchg
sbb
mov
or
adc
roll
cltd
mov
push
in
nop
ljmp
aam
xchg
imul
leave
aam
inc
push
mov
inc
loop
xchg
clc
lods
add
dec
push
jo
adc
leave
xchg
mov
mov
sub
adc
lret
or
cmp
or
sub
or
aas
repz
int3
push
mov
daa
or
or
or
inc
loopne
cmc
adcb
popa
xchg
test
shlb
shr
add
jb
or
mov
das
mov
push
cmp
sarb
mov
xchg
push
xchg
add
sbb
push
sahf
stos
jp
add
rcll
lea
or
xchg
or
repnz
shrb
push
lock
sub
mov
add
les
push
sbb
lock
adc
pop
mov
gs
popf
lahf
mov
pop
pop
pusha
xor
mov
lods
or
push
sub
ljmp
push
push
xor
enter
repz
jbe
mov
cmp
call
call
inc
ja
rcr
test
xor
rolb
xor
inc
cmpsl
sbb
cmp
loope
push
push
je
pop
sbb
pushf
add
or
xchg
and
or
pop
mov
add
sbb
push
movsb
lcall
sbb
or
sub
xchg
or
in
or
std
enter
fdivs
cli
add
mov
xchg
rcrb
add
mulb
add
push
sub
push
orb
add
popf
daa
inc
popa
loopne
test
push
pop
jl
add
mov
push
rol
inc
testb
xchg
andl
pop
dec
sbb
dec
rolb
ret
out
ljmp
add
pop
imul
sbb
sarl
dec
rorb
mov
mov
aad
mov
and
push
inc
arpl
sbb
ret
cmc
cmp
test
inc
popa
aad
mov
sbb
xor
ficoml
cmp
stos
hlt
fs
adc
int
push
add
orb
inc
test
stos
mov
ret
roll
cmp
and
push
imul
jo
push
jno
shrb
dec
daa
mov
ja
mov
mov
rorb
add
insl
enter
imul
mov
or
int
add
imul
loopne
cs
cli
adc
sbb
xchg
cwtl
push
jp
orl
cltd
inc
mov
add
maskmovq
mull
push
add
mov
aaa
dec
cmp
add
add
adc
cmc
bound
inc
out
and
loope
sbb
adc
adc
mov
fldcw
je,pt
push
fcomps
mov
pminsw
xchg
imul
icebp
shl
inc
daa
aad
jo
adc
push
add
pop
dec
xor
nop
mov
loope
mov
sub
push
and
push
or
inc
loope
xchg
jb
cltd
mov
arpl
imull
icebp
jb
and
push
jp
jns
cltd
dec
bound
rclb
pop
cltd
sbb
pop
sbb
inc
mov
adc
dec
push
insl
add
lcall
sub
out
inc
andl
roll
sbb
mov
loope
add
pop
add
les
pop
and
adc
and
mov
adc
push
push
mov
cmp
pop
dec
mov
les
insl
sbb
rorb
cmpb
inc
sbb
cmp
push
add
and
inc
and
pop
cmp
mov
xor
xor
sbb
jl
sbb
xlat
push
inc
mov
or
out
mov
imul
push
adc
repnz
stc
push
xchg
adc
xorl
jmp
loopne
pop
pushf
jmp
xor
decb
adc
icebp
mov
push
jo
je
adc
push
cmp
add
ret
pusha
pop
stos
adc
xchg
test
inc
add
jp
mov
or
inc
test
stc
dec
fmuls
sub
sbb
pop
ljmp
mov
cli
lret
adc
sbb
enter
sbb
adc
andb
cmpsb
out
sbb
lock
pushf
sbbb
mov
ret
or
dec
ret
daa
jo
pop
sbb
push
xchg
mov
nop
mov
and
xor
lock
rol
lea
clc
shlb
or
cwtl
adc
mov
add
jg
stos
push
cmp
adc
mov
test
ret
sub
xchg
cli
shr
inc
addl
addr16
pop
jns
adc
stc
adc
rcrl
and
mov
dec
adc
rclb
loope
mov
push
add
mov
dec
xchg
push
or
jno
mov
cmpsb
jmpw
adc
rolb
js
push
inc
jae
ret
stos
pop
fs
into
rorb
cmc
lods
xchg
mov
xor
or
lock
movsb
or
mov
push
pop
mov
stos
cltd
cmpb
test
add
fsubl
jecxz
add
stc
inc
and
rcr
push
ret
std
aad
push
pop
cwtl
or
push
sbb
mov
subl
mov
sub
dec
mov
je
sbb
xor
icebp
adc
inc
jbe
mov
xchg
cmp
jo
pop
sub
mov
dec
mov
adc
inc
mov
cmp
test
xor
adc
dec
xor
and
shrb
jb
out
negb
xor
push
sbb
out
aad
pop
add
das
dec
jns
aad
push
ja
cmp
xchg
sub
out
jno
push
mov
bound
or
in
sbb
and
push
add
push
add
and
sbbl
sbb
cmpsb
dec
push
push
mov
cli
or
clc
push
clc
bound
mov
js
mov
xchg
inc
push
and
cmp
sbb
inc
sub
ret
sub
jmp
inc
xchg
ret
add
das
or
mov
pushf
mov
stos
test
jne
mov
add
xchg
cs
adc
and
xor
xchg
test
pushf
fcompl
ret
inc
xor
adc
or
fsubrl
inc
adc
mov
cli
jno
sbb
insb
test
mov
mov
push
mov
add
inc
or
cmp
fwait
subb
insl
xchg
dec
xor
add
rcrb
mov
mov
adc
mov
pop
or
pop
and
addl
inc
sub
push
stos
movsb
mov
mov
call
mov
test
call
push
movsl
sbb
cmpsl
outsb
ror
int
imul
pusha
push
lock
insb
mov
repnz
jmp
adc
fcmovnb
xchg
push
ffree
xchg
sub
xlat
adc
ret
or
mov
cmp
fists
add
inc
pusha
sti
jmp
push
inc
mov
pop
inc
adc
mov
lds
or
ficompl
mov
pop
addb
push
ds
adc
insl
addb
inc
clc
push
cwtl
dec
rclb
sahf
ret
add
pop
push
mov
or
jo
sahf
sbb
aad
aad
add
xor
add
pop
test
es
sbb
add
divps
aam
jl
out
mov
adc
enter
sbb
fmull
inc
dec
push
insl
cmp
and
or
pop
sub
subl
cli
adc
shl
and
pop
push
and
lods
cmpsb
popf
cmp
sbb
xor
mov
bound
test
aam
push
cmp
icebp
and
add
sub
xor
cwtl
sahf
pop
call
mov
adc
decb
cmpsb
mov
fnsave
shll
addr16
mov
ljmp
add
insl
xchg
mov
stos
scas
aad
popf
dec
in
jmp
push
cmp
cli
and
mov
adc
scas
adc
mov
lods
push
sbb
jecxz
add
xlat
or
es
lret
lds
mov
sarb
js
sub
pop
push
shlb
inc
inc
push
and
shll
pop
push
or
ret
adc
sbb
dec
adc
shlb
push
mov
leave
adcl
icebp
daa
xor
ficompl
xchg
mov
push
push
add
mov
ret
add
les
jns
into
xchg
xor
nop
mov
push
and
add
into
lods
push
insl
sbb
pushw
sub
pop
adc
push
sti
pop
mov
inc
mov
cmp
xor
xor
js
sub
adc
test
xchg
out
and
enter
mov
pop
call
mov
mov
cmp
push
mov
or
mov
cltd
fwait
lret
jbe
or
out
adc
mov
stos
icebp
push
fucomip
test
jae
dec
xor
jmp
shr
inc
insl
xlat
rolb
mov
xchg
loopne
mov
je
lock
sbb
out
push
insl
out
adc
inc
insb
adc
imul
or
lret
icebp
jo
adc
mov
arpl
or
iret
mov
push
scas
push
sbb
and
mov
into
mov
xchg
mov
or
mov
test
mov
push
or
test
cwtl
test
sbbl
cmp
cmp
xchg
lea
inc
mov
add
dec
push
push
or
add
pop
lcall
add
inc
divb
cs
xor
ja
inc
not
in
adc
xchg
sub
push
push
push
xchg
lret
inc
cmpsl
mov
lods
mov
inc
pop
sbbl
add
mov
into
adc
xchg
shrb
rolb
cwtl
cmp
das
mov
pop
push
loope
xor
or
xchg
xchg
or
push
orb
sub
jo
sbb
lcall
in
or
mov
shlb
fstl
into
sub
divb
push
sbb
sbb
inc
jmp
xchg
mov
shll
stc
fcoml
push
movsb
or
dec
push
add
lret
lods
sbb
push
pop
or
or
sbb
or
rorl
int3
jg
xchg
xorl
dec
mov
xchg
sub
or
call
and
test
mov
pushf
sar
ss
enter
sbb
loope
add
adc
outsl
sahf
xlat
popl
dec
cmp
mov
repnz
mov
std
test
jo
mov
inc
push
cmp
pop
xchg
in
xchg
mov
mov
ret
aad
mov
mov
adc
cs
or
push
out
psubsw
or
lea
and
add
dec
les
xlat
or
cli
add
cmc
cmc
addb
mov
push
fwait
cmp
inc
or
cs
loop
push
js
scas
test
adc
or
pop
sub
mov
jecxz
inc
stos
push
mov
test
loop
out
adc
pop
movb
mov
dec
pop
xchg
shlb
sbb
inc
lods
cmp
aad
fmull
xor
mov
and
pop
push
push
scas
xorb
adc
push
test
je
addr16
mov
test
pusha
es
mov
push
shl
jmp
cltd
pop
inc
jl
rcrl
xchg
add
mov
inc
sub
loopne
sbb
cs
dec
xchg
or
adc
adc
pop
pop
cmpb
sub
ret
movb
pop
sbb
lods
rol
sarb
add
ret
push
movsb
mov
mov
sub
pop
dec
bound
adcb
inc
dec
sbb
pop
sbb
popf
enter
push
enter
ja
mov
and
xchg
add
jb
jnp
loop
jbe
xchg
jae
out
push
cmp
add
mov
leave
add
insl
sarl
rcll
mov
adc
lods
rorb
jl
mov
add
shl
mov
xchg
jecxz
pop
cmc
cli
fwait
jmp
addl
adc
push
inc
mov
or
xchg
and
lret
xor
fisubrl
jnp
test
clc
sbb
sbb
pop
mov
in
fisubl
outsb
test
stos
mov
xor
add
nop
xchg
inc
lock
cmc
sarb
xchg
adc
clc
clc
add
inc
mov
cmc
inc
push
aas
pop
aad
andl
sbb
or
dec
lret
pop
fmul
mov
test
jo
mov
mov
insb
sbb
adc
add
pop
inc
arpl
sarb
and
das
stc
add
mov
xchg
and
or
cmc
push
mov
mov
int
in
ljmp
jl
pop
shlb
ret
inc
sub
ret
mov
xchg
mov
shll
jb
ret
ljmp
push
or
leave
mov
test
in
sbb
sbbb
xor
cmp
push
mov
pop
push
repnz
cmp
ja
adc
xor
adc
push
inc
mov
or
cmp
xchg
sbb
bound
sub
jno
ret
adc
pop
daa
push
sub
inc
inc
aad
es
cmp
or
rcrb
push
add
cmp
movsl
push
add
or
lods
rorb
adc
mov
or
test
pop
lret
and
dec
or
sub
or
push
sub
push
mov
push
xor
mov
mov
push
rorl
rcrl
cmp
loopne
jp
jbe
ljmp
pop
dec
sub
fiadds
and
xor
mov
nop
jb
adc
adc
mov
imul
dec
imul
repnz
push
aad
sbb
push
pop
sbb
lret
mov
lods
mov
js
adcl
push
es
lret
inc
pop
sub
inc
mov
push
lret
scas
rolb
sbb
adc
mov
inc
enter
add
adc
je
add
pop
push
mov
mov
add
das
in
push
and
test
cmp
inc
pop
loope
out
in
int3
or
dec
cld
dec
cmp
or
inc
add
adc
jne
adc
adc
shlb
hlt
inc
es
mov
jo
sbb
dec
dec
rolb
aaa
or
push
cmp
adc
into
rolb
lea
aad
pop
mov
pop
lods
mov
sub
add
aad
inc
add
or
mov
sbb
jmp
popf
mov
sub
xor
adc
push
xor
pop
or
leave
xor
mov
and
dec
sbb
outsl
andl
in
sbbb
mov
jb
loopne
idivb
pop
adc
or
jge
pop
ljmp
and
stos
shrb
push
or
xchg
outsb
jae
adcb
xor
dec
roll
inc
push
pop
jge
jge
sub
push
push
lods
sub
pop
int3
jne
adcl
out
xchg
lret
test
sbb
sarb
add
gs
or
add
das
push
jae
test
dec
loopne
stos
add
jnp
add
sbb
xor
and
pop
lods
mov
sub
or
push
jmp
mov
mov
lock
add
sbb
icebp
pushf
add
daa
push
iret
push
leave
pop
mov
stc
rcl
or
shlb
rcrb
mov
pop
scas
push
cltd
das
adc
pop
pusha
lret
out
shrl
push
cwtl
rolb
sub
push
jge
add
outsb
popw
enter
out
dec
sti
bound
mov
dec
sub
lock
sub
bound
push
or
orb
push
push
push
jo
jp
lcall
xor
cmpl
subl
and
je
pop
cmp
push
add
insb
mov
dec
mov
in
inc
loopne
inc
lret
cs
xor
mov
mov
pop
repz
or
fs
jnp
lea
shrl
and
and
cmp
cmp
or
add
shll
xchg
dec
mov
adc
jle
lods
fsubs
mov
lret
sbb
clc
shll
or
and
popa
mov
add
and
sbb
jb
mov
push
sub
sub
sbb
or
les
or
orl
outsl
mov
mov
lea
xor
pop
aam
xchg
in
dec
add
pop
jno
mov
cmc
scas
push
mov
andb
mov
pop
jo
cmp
add
push
push
mov
sub
push
sarl
lock
mov
dec
adc
inc
mov
in
push
inc
mov
popa
dec
movb
mov
mov
insb
cmp
mov
dec
int
das
dec
xor
adc
and
pop
and
or
jl
sbb
push
inc
loopne
mov
pusha
or
mov
iret
sbb
or
dec
add
push
push
mov
enter
push
pusha
push
into
push
pop
pusha
xor
ret
pop
mov
pushf
sbb
xchg
xor
sub
dec
pusha
sub
xor
sub
rcll
adc
mov
add
loopne
inc
notb
mov
ljmp
and
rorl
inc
fcmovnbe
in
dec
push
or
cmpsb
pusha
and
mov
and
ficoml
fmul
xchg
mov
xor
in
jbe
aad
xor
inc
jb
sbb
dec
js
pop
mov
popf
loopne
loop
lcall
inc
mov
adcl
or
mov
mov
addr16
in
mov
daa
adc
fs
cmpsb
enter
or
test
insb
xlat
xchg
scas
or
mov
adc
mov
xchg
cmp
in
sub
xor
dec
lcall
sbb
idiv
adc
jbe
scas
jb
bound
out
sub
dec
adc
loopne
lods
fwait
sub
sbb
mov
xchg
jae
shll
sbb
jo
loopne
push
sahf
in
push
test
or
push
sub
pop
rcrb
push
push
xchg
pop
mov
mov
lock
xor
sub
sbb
push
inc
inc
jmp
pop
xchg
mov
test
mov
roll
enter
sbb
es
add
stc
aad
arpl
mov
sub
mov
mov
cmp
mov
inc
lock
xor
jge
std
or
aaa
lcall
pop
in
aaa
mov
nop
clc
test
push
sub
pop
lock
inc
and
fcoms
rcll
push
jmp
xchg
add
push
pusha
mov
dec
add
in
repnz
mov
inc
sar
add
setl
dec
lret
sarb
pop
aam
test
sahf
ffreep
out
fcom
or
or
xor
add
mov
cmp
aaa
mov
fdivrl
cmpsb
jge
add
add
add
mov
mov
mov
adc
loopne
cmp
test
popa
clc
aas
or
test
pop
rorb
mov
add
jge
leave
inc
stos
aas
jge
mov
mov
pushf
scas
in
sub
insb
scas
sub
jmp
or
add
mov
add
aad
es
iret
loopne
sbb
mov
stos
add
jne
ja
or
arpl
cmp
push
xchg
or
push
sbb
adc
in
add
inc
push
ret
xor
orb
scas
ljmp
lret
daa
inc
or
push
gs
sbb
xor
popa
loopne
loop
adc
add
dec
adc
mov
inc
subb
popa
xor
in
call
add
call
rcll
adc
inc
sbb
add
or
push
jne
cmp
or
add
into
sti
jo
sbb
jmp
adc
test
or
mov
int3
aam
inc
sub
pop
inc
push
cmc
push
repnz
rsqrtps
inc
adc
add
shl
push
adc
test
not
dec
roll
sbb
mov
rcll
mov
sarb
mov
movsl
shr
inc
lret
jo
cmp
inc
xchg
test
inc
fwait
icebp
mov
mov
xchg
dec
push
jo
cmp
cmp
jo
jb
popf
shrl
rcrl
les
push
cmp
add
mov
xor
sbb
jecxz
int
sbb
or
inc
cltd
add
jne
lods
inc
inc
mov
pop
sub
jnp
or
jbe
jae
inc
xchg
xchg
ffree
popa
sbb
pop
gs
jo
aad
sub
call
push
aaa
mov
or
xor
sbb
sarb
jo
or
add
pop
push
xchg
lea
push
outsb
mov
sarl
loopne
in
cwtl
mov
xor
inc
jnp
lret
cwtl
stos
push
or
or
inc
adc
add
and
cmp
mov
cmp
xor
inc
cmpl
mov
popa
mov
add
lods
mov
sarb
dec
push
add
aam
sbb
and
xchg
cld
lds
je
or
call
and
bound
sbb
add
sarb
mov
push
cld
push
push
and
xchg
jnp
rolb
add
rcll
or
or
sbb
mov
push
sub
inc
arpl
loope
fiadds
mov
jb
pop
inc
sysenter
test
jmp
ret
fadds
cltd
push
xchg
xchg
xchg
stc
inc
sub
pop
cmp
jp
push
sub
pop
je
push
test
push
xor
mov
pop
rorl
out
adcb
sbb
clc
pop
out
or
push
pop
cmp
push
and
or
insl
push
mov
add
cmp
inc
xchg
mov
pop
push
or
add
xchg
cmp
lods
rcrl
pop
orl
lea
cltd
jmp
repnz
add
daa
and
push
mov
pop
rsm
add
adc
das
dec
cmc
adc
inc
dec
rolb
mov
cmp
push
jmp
push
or
pop
sbb
movsb
xchg
adc
push
inc
mov
pop
dec
loopne
shr
leave
ljmp
mov
jbe
cmpl
mov
into
mov
or
mov
and
lds
or
add
cwtl
mov
push
or
pop
add
dec
ja
push
dec
daa
jp
movsl
add
nop
jmp
xchg
sbb
andb
mov
lock
pop
or
pop
clc
and
add
roll
push
add
sti
loope
dec
add
clc
pop
rcll
leave
call
andl
mov
push
or
loopne
aas
jns
test
push
inc
xchg
dec
push
xor
xor
sbb
loope
push
hlt
add
sbb
sub
nop
leave
xlat
sbb
pop
inc
xlat
and
dec
push
xlat
or
pop
lret
jae
jne
add
pop
cmp
mov
and
in
pushf
pop
cmpsb
push
out
add
sarb
sub
ret
mov
pusha
test
pop
je
jl
or
xchg
jb
sbb
rol
orb
nop
sub
add
aam
test
pop
scas
out
jmp
int
dec
pop
push
push
js
popa
add
je
sarl
dec
adc
mov
lret
stos
push
pop
cs
inc
call
mov
inc
nop
nop
xchg
pop
test
push
inc
and
aam
inc
mov
push
cmp
es
xchg
jb
test
mov
jno
inc
lea
adc
mov
pop
and
decb
xchg
push
xor
and
pop
call
mov
testb
push
add
leave
lea
xor
daa
cmp
adc
pop
gs
in
test
inc
sbb
push
cmp
add
sub
aam
sub
mov
cmp
and
xchg
or
in
mov
inc
je
push
adc
aam
pop
xchg
popa
mov
into
dec
adc
out
pushf
orl
insl
inc
push
push
fcomip
mov
pop
push
xor
sarb
in
sar
jnp
adc
push
dec
fwait
cli
sbb
inc
movsb
or
rcll
enter
sbb
call
ja
bound
popa
lcall
sbb
test
rcrb
sarl
mov
mov
mov
test
add
loop
pop
bt
sbb
ret
das
xchg
inc
xorb
test
icebp
mov
js
pop
add
pop
scas
movsl
cmp
sub
push
cmp
adc
sub
mov
and
xor
filds
pusha
inc
scas
dec
xor
adc
rcll
movsl
bound
or
repz
jp
out
mov
sbb
dec
pop
xor
xlat
push
jo
inc
sbb
add
add
in
lret
loopne
movb
adc
shlb
push
pop
ret
cmp
sub
movsl
sbb
cmp
ljmp
xchg
inc
roll
imul
mov
xchg
and
loopne
out
push
mov
push
test
add
jo
pushf
jmp
stc
sbb
cmp
lods
fwait
adc
sub
sbb
mov
out
sahf
out
inc
xchg
add
xorb
cli
pop
pop
or
or
test
mov
ret
jae
sahf
stc
leave
lods
leave
cmpsl
mov
setp
add
add
mov
push
fmulp
lock
adc
aad
into
add
pop
jo
and
adcb
ljmp
add
lds
dec
xor
pushf
push
inc
into
imul
pop
jne
rcrb
mov
fildl
mov
mov
stos
cmp
mov
andl
mov
pop
dec
add
push
or
and
shr
or
sub
rclb
xor
push
jle
and
xchg
xchg
add
dec
mov
push
sbb
call
js
test
ror
dec
orb
mov
leave
adcb
je
sbb
dec
in
inc
pop
pop
rcrl
xchg
dec
jne
cmc
adc
push
repz
adc
faddl
mov
sub
xor
push
push
movsl
cmpsb
pop
xchg
mov
ret
les
push
adc
dec
fisubrs
or
adc
adc
adc
xchg
mov
cmp
pop
mov
and
clc
cmp
dec
test
cli
ds
int3
add
jns
lar
inc
jecxz
divb
ficoms
adc
clc
leave
popf
shll
subl
sbb
test
into
iret
sbb
and
hlt
rol
data16
mov
mov
xlat
add
subb
jo
stos
outsb
call
inc
xchg
xchg
popa
adc
popa
sub
jae
or
sbb
and
adcb
outsl
push
mov
adc
stos
adc
pop
xchg
inc
xchg
add
or
inc
jno
pop
push
lea
pop
adc
add
clc
or
push
pop
adc
je
insl
cli
cmp
mov
mov
call
sarl
nop
or
or
ret
repnz
or
jecxz
cs
sbb
pusha
mov
mov
mov
imul
push
push
and
incl
mov
sahf
sub
shl
stos
pusha
ds
pop
adc
add
sub
cs
push
mov
test
and
push
mov
shll
ret
aad
mov
inc
movsl
xor
movsl
push
jno
adc
fcoms
jo
push
clc
jne
push
lods
sbb
cwtl
rcll
adc
loope
lock
mov
sub
pop
test
and
mov
pop
pushf
add
fs
push
and
or
adcl
test
mov
das
or
arpl
call
out
insb
sbb
push
dec
jge
pop
mov
and
xchg
push
add
adc
inc
pop
daa
adc
ret
xchg
rclb
mov
fisubrl
and
inc
push
xchg
sbb
jo
xchg
sub
pop
or
int3
or
push
aad
fsubrp
mov
sbb
gs
stc
or
mov
pop
xchg
or
xor
xchg
push
sarl
mov
clc
pop
xchg
or
pop
in
lock
rcrb
or
cmp
lods
adc
outsb
xchg
addl
or
and
push
inc
mov
rcrb
jp
dec
ret
nop
or
or
or
cmc
aam
lds
das
mov
inc
fwait
mov
sbb
and
movsb
mov
mov
and
repnz
shl
negb
addl
jae
popf
and
stc
sub
mov
icebp
pop
jmp
sti
sbbb
shlb
bnd
aam
and
dec
scas
push
test
andl
movb
into
stos
pop
inc
fldcw
lret
scas
xchg
int
add
push
inc
mov
or
fs
inc
imul
jno
or
jmp
mov
cs
les
push
mov
ret
cld
setne
pop
or
cmp
or
xchg
icebp
push
insb
cmpsb
push
loope
sbb
jg
xchg
popa
ljmp
pop
xor
sbb
xlat
or
mov
add
cmpsb
xchg
push
add
push
or
pop
ret
push
js
fsubrs
rol
push
jge
or
cli
shrl
inc
push
push
sbb
aaa
xchg
fbld
xor
ljmp
add
push
call
shr
fsubs
sub
adc
into
sti
mov
lret
lds
push
mov
xchg
out
push
sbb
sbb
ds
jne
bound
xchg
xchg
jge
adc
cmp
shrb
push
test
pop
pop
sub
pushf
add
pop
inc
ja
aad
out
dec
jp
mov
add
andb
and
dec
in
push
stos
lret
int
repnz
out
add
inc
mov
rorl
jl
aad
cmovl
inc
sub
pop
mov
sbb
cltd
adc
jecxz
xor
test
stos
inc
scas
sub
mov
shlb
nop
cmpsb
xchg
xor
pop
add
shll
test
jbe
xchg
mov
push
sbb
ss
or
outsl
stos
inc
inc
cmp
scas
rcl
jo
add
mov
xchg
adcb
mov
je
push
test
adc
movsl
pop
or
ret
into
and
loope
cltd
add
inc
sbb
add
lods
mov
mov
add
and
mov
loop
lea
mov
mov
adc
jb
mul
call
aam
aaa
adc
mov
sbb
mov
lret
sbb
mov
or
cli
sarl
mov
mov
mov
fistps
mov
popf
push
test
dec
lahf
inc
cltd
movsl
dec
daa
add
and
aam
movsb
rcrl
les
inc
sub
gs
jno
push
testl
pop
jg
stc
movsl
sub
insb
xchg
jb
inc
negb
int
test
mov
lods
and
jle
and
leave
sub
and
and
add
add
add
pop
mov
ret
std
fsts
sub
push
dec
pop
pop
and
push
iret
add
push
adc
dec
aam
adc
or
adc
iret
shr
xchg
pusha
lods
cs
inc
dec
sub
add
jmp
push
call
mov
cs
pop
inc
mov
clc
mov
xchg
hlt
push
idivb
jge
ret
xor
aad
cmpl
ss
push
mov
cli
or
insl
sub
mov
jnp
mov
shrl
std
pushf
ljmp
stc
add
inc
jmp
stc
dec
repz
adc
or
sub
adc
or
push
mov
adc
mov
sub
rolb
bound
clc
mov
push
push
cmpsb
mov
mov
add
cmp
sbbl
shlb
das
pushf
jb
add
ja
dec
mov
mov
add
adc
push
daa
mov
and
adc
insl
or
sbb
mov
repz
inc
cs
sar
cltd
scas
mov
or
or
adc
leave
loop
push
fs
mov
aam
daa
mov
repz
nop
test
aas
adc
push
es
or
mov
mov
push
psrld
fdivs
test
xchg
mov
lock
scas
rcrl
push
scas
sbb
xchg
or
xchg
or
push
mov
jmp
adc
mov
cmp
add
adc
jb
cltd
inc
push
adc
fsubrl
mov
or
inc
add
push
test
mov
jp
mov
jo
sbb
jne
sbb
adc
sub
dec
pop
ror
into
mov
aaa
and
in
push
sub
jb
movsb
push
aam
jecxz
inc
xor
xor
add
add
fistpll
or
aaa
testb
fucomip
inc
sbb
inc
jne
push
iret
aam
pop
in
and
jo
add
xor
pop
mov
ret
adc
sub
cwtl
stos
adc
jo
mov
jo
mov
ret
inc
cmp
nopl
aam
xor
cmp
push
and
insl
xchg
xchg
adc
push
mov
loope
cmpsl
cld
idivb
adc
jp
aad
into
mov
jns
ret
push
push
jno
orl
add
lock
adc
or
inc
adc
sub
sbb
adc
dec
pushf
jecxz
ljmp
data16
xchg
rolb
js
ret
pop
sub
jo
and
cmp
sbb
test
loopne
out
sbb
jo
pushf
or
or
into
sbb
lret
xor
icebp
jne
mov
movsl
hlt
pushf
push
test
push
scas
add
movsl
add
cltd
or
inc
add
dec
je
shlb
in
or
jmp
push
and
mov
in
cmp
push
icebp
sub
pop
push
pop
cwtl
sbb
or
or
inc
clc
roll
sub
dec
cmpb
inc
adc
test
pushf
pop
popf
sbb
out
hlt
xor
subb
ret
or
push
inc
jae
xor
add
loopne
inc
add
cmpb
sbb
aam
mov
rol
add
cltd
out
mov
dec
add
mov
or
add
rorb
xchg
out
inc
out
pop
pop
add
arpl
test
dec
mov
xor
imul
mov
divb
or
xor
sub
lret
push
mov
or
inc
sbb
ljmp
mov
xchg
jecxz
mov
ljmp
push
push
sub
mov
cmp
mov
pop
cmp
andl
mov
aam
or
rcl
adc
add
or
movsb
xchg
repnz
sbb
les
inc
imul
lret
cmpsb
inc
dec
mov
add
or
test
dec
shlb
add
mov
rorl
pop
inc
addr16
xor
adc
xor
lcall
mov
or
xor
push
sub
inc
dec
push
push
mov
test
inc
int3
mov
adc
data16
inc
add
sub
ret
add
bound
and
fdivl
imul
jge
push
push
add
mov
lock
mov
or
shlb
cmp
add
sub
or
inc
pop
dec
test
push
inc
mov
out
sbb
inc
test
inc
in
add
inc
stos
add
sbb
stos
out
add
xchg
ret
ret
loop
jo
dec
es
and
sub
cwtl
mov
mov
pop
nop
sub
adc
add
bound
cwtl
enter
shll
mov
add
and
jg
fimull
add
xor
mov
pop
dec
push
test
je
pop
inc
adc
and
xchg
pop
push
sub
xchg
mov
mov
icebp
mov
dec
stos
mov
arpl
push
inc
daa
fisubl
movsb
or
nop
or
mov
test
aam
cmp
out
lds
push
cli
push
sub
aaa
and
sbb
hlt
xor
xchg
mov
sbb
xor
or
or
sbb
or
mov
push
cmovno
inc
enter
mov
pop
and
push
add
adc
ljmp
inc
xchg
cmpsb
test
add
stos
inc
sbb
cwtl
mov
sub
shll
mov
lds
enter
enter
pop
or
push
dec
daa
je
aaa
jge
lods
pop
and
mov
xor
in
adc
xor
xor
cmp
aad
stos
or
sbb
fs
xchg
and
cltd
inc
mov
mov
push
ret
xchg
sbb
xor
bndstx
sub
icebp
pop
cmp
jg
ficompl
push
xchg
push
cmp
cmp
mov
clc
testb
inc
je
sbb
mov
push
push
pop
aad
enter
mov
adc
add
sub
sub
lods
sbb
pop
add
or
addr16
popf
mov
cmp
push
push
scas
push
push
mov
jb
dec
loopne
push
out
fldl
and
cs
andl
out
xchg
in
inc
rorl
lea
dec
fyl2x
subb
mov
lds
mov
js
push
test
xor
cmp
insb
pop
popf
push
and
sbb
pop
roll
push
lea
add
ds
adc
mov
or
popa
es
or
and
mov
int
push
xor
adc
rorb
negb
lods
data16
das
or
enter
lcall
xchg
mov
pop
sub
xorl
pop
inc
int
addb
mov
mov
add
or
xchg
cmp
jb
xor
orb
sar
adc
mov
out
sub
shrb
out
lea
daa
ret
inc
cltd
sbb
sbb
cmc
push
adc
mov
int
push
pop
or
xlat
fildl
sbb
inc
inc
cmp
or
mov
pop
sbb
inc
std
and
add
xor
pop
into
xor
push
rcll
jmp
jbe
push
mov
xchg
clc
icebp
scas
mov
xchg
mov
xor
inc
mov
mov
adc
mov
pop
fildl
cmp
imul
add
mov
mov
sbbl
push
das
pop
adc
ljmp
and
mov
in
inc
and
push
mov
les
test
push
lds
cmp
inc
xor
scas
insl
push
mov
sbb
inc
adc
mov
in
mov
sbb
sub
mov
mov
dec
dec
add
push
les
ret
aas
scas
rorb
cmp
mov
stc
daa
sbb
adcl
add
test
dec
cmp
aad
push
stos
adc
or
call
and
pop
add
addb
pusha
and
out
aam
pop
inc
pushf
leave
sbb
pop
gs
fs
pop
imul
jp
mov
dec
or
inc
mov
jmp
lret
inc
mov
pop
mov
pop
lcall
shrb
popa
cmp
aad
add
sub
push
cmp
rcll
insl
push
jo
js
mov
in
addb
cltd
clc
mov
cmpsb
push
addl
mov
and
cmc
push
rorb
inc
cmpsb
adc
clc
or
cmp
pop
cwtl
jo
scas
xor
sub
sub
dec
loope
call
das
imul
or
jne
dec
test
pop
sub
add
idiv
or
push
jb
mov
cwtl
or
pusha
mov
add
cmc
mov
mov
icebp
loope
cmp
rcrl
fwait
push
adc
add
cmp
fisubl
into
popa
push
lods
mov
test
lock
or
daa
jp
and
push
jb
inc
in
adc
mov
push
insb
loopne
fld
sti
inc
mov
jne
cmpsl
call
adc
push
loope
inc
stos
jb
sub
xorl
icebp
jp
mov
ss
lea
mov
orl
lret
cli
push
push
decl
jne
sbb
sarl
adc
sbb
rclb
shl
addb
mov
and
mov
pop
push
js
adc
orb
push
sbb
add
andb
cmp
adc
test
inc
lods
lods
sub
adcl
push
outsl
adc
rolb
stos
xchg
xor
inc
xor
ds
mov
mov
dec
or
jmp
sbb
roll
scas
shrl
sub
rclb
push
in
ret
xor
push
repnz
push
out
and
xchg
sub
mov
jl
pop
and
push
shlb
add
dec
lock
pusha
adc
push
cmp
mov
adc
push
or
pop
lret
adc
or
or
xorl
add
rcr
adc
pop
and
xchg
mov
les
mov
mov
xor
movsl
in
daa
out
push
lret
push
or
stos
mov
shl
xchg
out
in
leave
mov
loopne
jo
rcl
sbb
push
mov
cmpsb
andl
cmp
jae
xor
sbb
add
rolb
nop
daa
or
leave
cmp
shrl
inc
rclb
loope
call
or
mov
test
and
cmpsb
movsb
pop
test
jecxz
sub
clc
cli
mov
inc
sbb
cwtl
mov
push
test
push
aad
in
push
inc
es
mov
adc
stos
mov
dec
mov
nop
stos
cmpsb
sub
fisubl
jmp
stos
psadbw
aam
sarb
cmp
rclb
rcrl
push
cli
pop
adc
xchg
add
inc
jl
add
sbb
mov
sbb
cmpsb
int3
mov
stos
ljmp
mov
mov
inc
mov
adc
cld
mov
filds
movsl
and
or
lret
jb
mov
stc
and
pop
movsl
sbb
mov
and
stos
sub
push
andl
fwait
in
ret
addr16
mov
leave
mov
popf
pop
mov
stos
push
mov
dec
mov
ds
xchg
and
call
data16
arpl
mov
mov
xor
ret
orl
add
pop
lea
mov
push
sub
jmp
pop
pop
push
into
mov
mov
sbb
aad
leave
psubq
mov
xchg
mov
dec
test
shll
rolb
jg
pop
or
fnstcw
add
jmp
sub
sub
push
mov
icebp
fs
inc
sbb
shlb
ret
jns
xor
cmc
fsubr
enter
sub
add
data16
sarl
roll
sub
testb
pop
push
daa
or
mov
or
arpl
inc
xor
cmova
dec
jmp
jp
add
sub
jo
adc
mov
popf
into
cmp
push
test
int
inc
sbb
cmp
mov
mov
xchg
mov
xor
inc
ud1
push
dec
or
mov
cmpsb
adc
in
lcall
add
xor
cwtl
add
cmp
push
sub
mov
sbb
ret
cmp
sbb
or
xor
push
movsb
mov
sbb
sub
or
jb
mov
mov
out
sub
stos
shlb
jnp
je
pop
or
adc
adc
sub
jne
adc
or
fsubrl
out
jnp
sub
add
ret
push
and
lret
or
movsb
jae
ret
mov
inc
lods
push
sbb
int3
mov
in
cmp
add
adc
jl
or
add
ja
sbb
sbb
xchg
stc
ret
in
faddl
adc
add
push
pop
jle
or
jne
sbb
ret
add
sbb
adc
mov
inc
cmpsb
into
sub
cltd
sbb
dec
insl
jmp
fdivl
xor
mov
aam
mov
adc
in
mov
ds
scas
cli
mov
es
xchg
pop
push
out
inc
push
stos
dec
sbb
pushf
aad
push
int
pop
lret
jp
dec
rorb
arpl
fiaddl
outsl
jnp
rcll
or
jo
into
gs
add
push
xor
adc
xlat
lcall
mov
out
or
sbb
ds
jge
or
or
mov
mov
xor
dec
pop
cmp
lock
or
sbb
jne
lock
and
push
add
add
cmpb
pop
enter
test
and
mov
jb
mov
xchg
dec
sbb
push
push
mov
jmp
adc
mov
aam
cmpsl
adc
lods
cmp
add
cltd
aad
pop
scas
jle
mov
cwtl
adc
adc
aam
pop
or
dec
aad
or
sub
lahf
mov
jo
pop
push
mov
adc
lock
xchg
adc
mov
or
flds
mov
jne
mov
xchg
outsb
insb
sbb
mov
ret
ljmp
aam
add
stos
test
das
add
pop
aad
pop
rorl
pushf
dec
inc
aaa
push
and
incb
cmp
je
push
je
inc
enter
loopne
sub
je
mov
inc
sub
lret
roll
cld
movb
push
rcrl
adc
movb
inc
add
xchg
pop
xor
sub
or
fwait
pop
push
mov
ljmp
es
leave
push
xor
and
js
movsl
sbb
loopne
inc
lds
mov
and
inc
mov
add
and
out
arpl
sbb
adc
leave
xor
push
ret
add
xchg
jb
cmp
mov
inc
adc
mov
add
aam
lock
add
sub
add
cmc
pop
adc
js
nop
xchg
dec
and
xchg
mov
push
rcr
push
sbb
dec
cs
push
aam
sbb
rcll
sub
add
cs
sarl
adc
mov
jo
les
repnz
test
and
dec
push
mov
mov
in
mov
fs
inc
adc
es
in
pop
mov
sbb
jmp
and
mov
mov
sub
push
ret
loopne
pop
mov
and
mov
dec
xor
enter
add
add
and
pop
push
rcl
jo
testb
negb
cmp
test
cmp
cs
add
test
pop
popf
test
cmp
lret
xor
data16
js
or
or
adc
pop
js
inc
cmc
sbb
movsb
mov
mov
movl
add
in
push
xchg
mov
stos
push
sub
push
scas
mov
cwtl
sbb
loop
jo
push
ss
sbb
jno
or
or
pop
add
xchg
lods
loop
mov
scas
sbbb
cli
cmovns
and
pop
xchg
push
ja
add
add
adc
or
int3
mov
sub
push
fisubrs
or
sub
into
lahf
gs
inc
lods
lock
add
adc
loopne
mov
dec
fstpl
add
push
shrl
imul
flds
jge
dec
add
pop
adc
mov
xchg
jmp
rcl
adc
add
sbb
pop
sub
mov
clc
and
pop
clc
sbb
iret
push
mov
imul
sbb
mov
stc
add
lods
mov
inc
xor
add
lret
or
orl
fbstp
push
mov
movsb
stos
add
mov
push
inc
inc
pop
or
jp
xor
dec
scas
push
adcb
push
jl
xchg
rorl
inc
and
or
shlb
lcall
pusha
std
mov
and
or
dec
cmp
ret
les
stos
mov
in
or
push
cmp
add
push
cmp
inc
mov
dec
push
scas
mov
add
mov
xchg
popf
xor
push
rclb
inc
add
psadbw
int
and
sub
sbb
inc
and
insb
orb
out
adc
dec
cmp
xchg
mov
sahf
cmpsl
jmp
in
ljmp
mov
or
and
insl
das
dec
jp
or
jl
push
lcall
add
cmp
lds
loopne
mov
add
leave
jl
mov
inc
inc
add
lock
or
in
leave
lock
pop
outsl
mov
mov
mov
inc
and
lcall
sbb
xor
push
add
lock
push
mov
sbb
sti
in
inc
mov
loop
cld
or
pop
xchg
mov
lea
or
xor
imull
push
xchg
and
or
pop
rclb
add
test
sbb
push
sub
or
pop
shrl
shlb
into
adc
aaa
hlt
mov
shll
xor
pop
out
adc
inc
leave
add
add
and
adc
enter
xchg
decl
or
mov
pushf
pop
jecxz
scas
and
bextr
adc
adc
and
sbb
pop
inc
inc
mov
adcl
test
xchg
add
add
adc
ljmp
and
pop
pop
js
sbb
jne
mov
inc
push
jns
repz
loop
loopne
or
inc
sbb
cmp
add
add
call
leave
je
cmp
pop
gs
push
ret
loop
lods
jbe
mov
cwtl
and
rcrl
cmp
int
in
mov
cmp
push
lahf
sarb
xorb
push
les
inc
test
pop
adc
pop
lds
leave
or
sub
stos
outsb
aas
mov
xchg
loope
icebp
inc
clc
pop
and
sbb
adc
mov
pop
in
mov
arpl
add
mov
mov
push
push
inc
sbb
inc
adc
icebp
push
dec
roll
push
repnz
popa
and
cld
scas
pusha
add
hlt
test
dec
jae
lea
mov
imul
andb
add
jb
mov
add
into
stos
icebp
stos
sbb
adc
pop
pop
xchg
mov
xor
jmp
xor
leave
and
sbbb
mov
pop
push
sub
push
bound
pop
cmpsl
ja
jecxz
pop
insl
pop
loopne
mov
pop
push
mov
hlt
call
and
xchg
mov
inc
pop
out
or
into
daa
jl
cld
or
or
pop
test
push
pop
mov
or
test
mov
test
in
mov
sbb
pop
idivl
xor
mov
push
rorl
mov
sbb
or
jb
inc
rcr
pop
push
cwtl
mov
xchg
xchg
cmpl
jae
inc
popf
sub
ffree
sub
push
cmp
sub
adc
rolb
mov
jl
jns
rol
es
push
push
jnp
mov
pop
mov
dec
adc
fcomps
stos
stos
xchg
lock
shll
mov
ret
in
loop
pop
or
mov
and
shl
int
sbb
push
add
mov
mov
xchg
add
clc
or
jae
mov
push
ret
pusha
lret
jo
jne
fimuls
push
cmpsl
cmp
jge
or
lret
and
adc
int
cmpl
scas
loopne
adc
aad
sub
push
mov
pop
sbb
testb
das
je
pop
xchg
or
mov
xchg
addr16
or
rol
add
sub
push
and
push
test
pop
test
fsubrl
jo
dec
in
push
adc
push
cmc
les
push
add
cmpsb
sub
repnz
push
popa
pop
and
ljmp
rcr
add
and
push
lret
les
mov
push
popa
and
add
ret
xor
inc
in
pop
and
ss
mov
add
dec
shl
je
sbb
xchg
test
cli
jle
mov
leave
pop
push
pop
nop
sub
mov
or
rcr
mov
xchg
cli
loop
sbb
sbb
mov
sarl
sbb
dec
popa
cli
add
cmovl
adcb
cmp
push
adc
adc
jg
cwtl
fimull
rcll
sti
test
push
pop
cld
adc
and
or
mov
jo
push
out
add
add
hlt
pop
roll
add
movl
sub
xchg
popl
and
sbb
sbb
mov
sub
push
or
movsb
xchg
daa
cwtl
or
push
lock
sbb
push
add
push
add
or
test
sbb
rolb
iret
lea
pop
pop
mov
je
jo
and
cli
or
jnp
adc
mov
push
add
push
xchg
int
jbe
pop
sbb
mov
and
out
or
clc
les
xor
sub
fsubrs
adc
test
cmpsb
fcoml
cmp
xchg
jae
lret
sub
pop
or
lods
or
sbb
bound
mov
adc
sbbb
and
cmp
xchg
aad
jl
cli
adc
ret
push
or
inc
cs
mov
push
push
sti
sbb
add
or
add
pop
shl
lret
lock
popa
xor
fs
xchg
fistpll
leave
data16
lock
sbb
add
pusha
shlb
sbb
mov
add
adc
or
or
test
popa
mov
and
aad
enter
xor
dec
shrl
and
out
or
bound
add
lcall
or
scas
xchg
adc
js
dec
add
or
cltd
testl
sbb
mov
cmpsl
dec
mov
dec
pop
popf
stc
sbb
icebp
inc
sub
jo
and
add
adc
out
mov
mov
das
sub
jno
subb
sub
mov
std
sub
push
mov
adc
sbb
lret
andb
jle
fisubl
add
nop
scas
ret
xor
mov
enter
sbb
lods
push
scas
or
xorb
jo
push
push
rclb
ss
push
dec
adc
rcll
push
or
mov
repnz
mov
pop
mov
jecxz
shlb
bound
cmp
sarb
add
or
ljmp
or
inc
icebp
or
or
dec
aam
sub
sbb
mov
dec
and
push
and
sub
imulb
pop
fs
push
sbb
mov
pop
aaa
loop
adc
jle
push
and
dec
adc
mov
addb
in
mov
scas
inc
cmpsb
mov
or
add
sbb
aaa
pusha
jne
repnz
pop
add
and
push
mov
sti
ss
or
stos
or
test
popf
inc
add
xchg
pusha
test
cwtl
bswap
jne
lret
ret
cwtl
or
sbb
mov
sbb
mov
sbb
roll
imul
adc
aas
inc
lods
jp
adc
roll
pop
fsubrs
mov
dec
xor
or
adc
adc
push
add
imul
xor
cmp
sub
in
push
or
dec
add
popa
out
add
mov
mov
cmpsb
sahf
jb
insl
sbb
loope
orl
in
jmp
mov
push
aam
cmpsb
stc
sub
punpckhbw
mov
add
add
ss
repz
pop
fimull
or
js
adc
add
xchg
fisubrs
lcall
mov
fs
ljmp
rol
pushf
bound
jb
bound
loop
lods
inc
push
mov
mov
rorb
cmp
icebp
cld
push
cmp
inc
stos
inc
out
popa
or
mov
adcb
into
lret
stc
pop
andl
lock
aad
and
and
xor
jns
lock
das
adc
push
cmpsb
call
jae
xor
rcrl
push
pop
mov
lret
repnz
mulb
add
mov
and
add
adc
adc
fdivs
mov
add
and
or
xor
imul
lret
mov
xchg
sti
sub
adc
xor
hlt
or
or
mov
mov
nop
pop
cmp
xor
push
orb
and
addl
stos
add
cmp
adc
in
ret
and
sbb
or
cmp
push
xchg
sbb
mov
push
or
lahf
mov
loopne
and
ret
dec
leave
cmp
rcll
xchg
leave
ret
cmp
jne
cwtl
mov
push
shrb
mov
push
fs
mov
mov
mov
sbb
xor
repnz
cmp
fcmovbe
out
sbb
sub
or
mov
cmp
or
rorl
pop
push
test
add
pop
push
cwtl
inc
inc
lock
call
shrl
adc
or
push
mov
xor
faddl
xor
lods
sub
repz
stos
add
loop
mov
js
aam
not
lds
mov
xchg
push
inc
pop
shrb
add
stos
scas
movb
mov
jbe
add
icebp
dec
push
shrl
or
xchg
loope
scas
fwait
cmp
mov
jno
shlb
push
test
mov
jb
add
or
push
sub
xchg
aad
jb
xor
mov
or
add
test
int
lgs
outsl
push
lods
loop
push
push
hlt
pop
subb
add
cli
add
mov
rcl
faddl
jp
idivb
jo
push
and
push
mov
sbb
fs
push
mov
popf
test
loope
or
rolb
xor
adc
xor
pusha
call
sub
test
adc
add
mov
xor
jl
fcoms
dec
pop
mov
jp
mov
test
cmp
add
jp
stos
and
xor
inc
pop
adc
push
or
stos
inc
fs
rorl
lock
fiaddl
sbb
dec
scas
mov
inc
pop
sub
dec
xchg
outsb
es
and
sub
sub
adc
mov
or
jb
add
add
rcrl
scas
mov
adc
lods
into
cmp
out
add
orb
shrb
add
mov
add
sbb
mov
cmc
inc
int
mov
xor
fdiv
mov
cmp
add
pop
push
add
inc
hlt
sub
rcr
add
cwtl
stos
and
adc
ror
lcall
xchg
add
cmp
orl
mov
out
cmp
mov
inc
push
int3
icebp
scas
inc
shrb
pop
inc
movsb
movsb
cmpsb
ljmp
xlat
and
xchg
or
daa
adc
ret
dec
aad
stc
lret
popf
pop
loopne
pop
add
inc
cwtl
and
mov
mov
push
aam
push
push
mov
sbb
inc
and
testl
loop
movl
xlat
int
jg
test
pop
subb
sarb
lods
loopne
or
add
into
and
loope
mov
imul
push
mov
add
int
jmp
pop
mov
or
push
xlat
push
les
mov
stos
pop
sbb
call
dec
xchg
dec
sbb
inc
mov
mov
mov
ret
hlt
push
mov
xor
jb
cmpsl
add
pop
push
add
outsb
xchg
push
pusha
or
jg
cs
lock
push
scas
mov
sbb
dec
stos
pop
adc
or
sbb
push
loopne
inc
lahf
push
inc
push
mov
inc
push
push
and
pop
sbb
adc
mul
or
xor
push
jne
or
pop
rorl
orb
jp
add
and
js
loop
push
push
and
sbb
jmp
shrb
dec
int3
pushf
out
xor
jns
jb
push
add
push
push
and
js
adc
jae
in
dec
inc
lods
lcall
es
dec
in
fcoml
adc
push
pop
xor
pop
je
mov
push
lret
shrb
addl
in
shlb
adc
inc
cmpl
dec
pop
jg
xchg
repz
add
test
adc
inc
push
ret
andl
xchg
enter
mulb
inc
loop
pop
incb
xor
pop
dec
push
bound
mov
mov
push
sbb
xchg
int3
dec
add
push
adc
pusha
xchg
jmp
in
inc
leave
inc
push
rol
push
push
xchg
lret
lcall
pop
adc
dec
sbb
cmp
push
push
ror
jb
ljmp
push
or
in
sub
mov
or
fs
lret
fsub
jl
pop
mov
mov
cwtl
cmpsb
pop
nop
xchg
add
mov
lret
ret
inc
enter
adc
mov
push
inc
jmp
or
and
mov
rcll
addb
jb
dec
jg
mov
fldl
sbb
mov
je
in
sbb
loopne
sbb
das
add
inc
rolb
icebp
es
add
loopne
popf
sbb
xor
rcr
orb
mov
pop
push
mov
sbb
lods
ret
adc
sbb
pop
add
or
inc
cmpsl
push
dec
mov
inc
push
dec
or
popa
andb
mov
add
sub
jbe
ljmp
xor
aaa
inc
int
insb
das
jge
and
xor
push
jmp
cmpsb
dec
xchg
sub
sub
repnz
xor
jecxz
jne
push
push
add
push
out
xchg
pop
dec
add
scas
and
in
mov
cmp
mov
scas
pop
lock
jle
test
cmp
sub
pop
mov
and
out
sbb
xchg
lret
mov
aad
addl
and
sbb
xchg
into
enter
jmp
xlat
push
les
adc
movsb
sub
adc
cld
adc
adc
adc
mov
hlt
jb
pop
and
sbb
sub
cmp
stos
lds
test
mov
pushf
inc
or
inc
sub
enter
adc
fsubr
inc
aad
shll
cmp
rcrl
add
pushf
sub
inc
dec
sbb
add
jge
lea
mov
xor
shll
inc
xchg
test
insb
jb
jb
test
lret
adc
inc
fiaddl
xor
or
pop
push
push
push
aam
add
fildll
adc
and
dec
in
adc
shrl
add
push
test
pop
nop
test
push
roll
push
in
hlt
pop
adc
lods
addb
xchg
imul
jmp
or
arpl
push
push
notl
sub
js
jmp
mov
push
add
xor
cltd
sbb
loope
imul
aad
inc
ss
andl
jmp
dec
adc
sarb
loope
lock
add
lret
lcall
adc
xor
rcrb
ret
cmp
lcall
add
cmp
rclb
rorl
push
outsl
push
loope
cmp
and
mov
push
dec
hlt
add
add
dec
and
or
ret
adc
pop
mov
jae
lods
or
push
and
sub
pop
mov
clc
or
test
or
xor
sbb
and
or
movsb
test
add
icebp
push
outsb
xor
xlat
int
cmp
insb
push
push
push
lret
ljmp
adc
push
or
out
inc
jl
add
cmp
push
lret
stc
fisubl
bound
enter
sub
sbb
sbb
mov
inc
cmp
sub
ret
jp
push
sarb
xor
ja
addb
stos
adc
addb
mov
scas
outsl
fstpl
cmp
enter
push
and
inc
dec
adc
adc
das
push
add
mov
push
rolb
shl
or
push
nop
loopne
lret
or
mov
jl
mov
call
lret
xchg
test
mov
ret
lods
pop
and
lods
pop
xchg
jmp
push
sub
lds
sbb
nop
sub
cmp
push
xor
dec
mov
jo
dec
push
xchg
fwait
ss
setnp
out
sbb
add
mov
and
mov
push
mov
add
lret
push
lods
ret
fcmovnu
ret
inc
out
xchg
rolb
lea
dec
dec
xchg
ror
lret
inc
mov
cmpsl
mov
inc
stos
or
add
shll
and
or
jo
xchg
or
inc
test
rol
ret
rol
test
adc
sti
lock
call
push
cwtl
mov
inc
sub
jne
xchg
xchg
jmp
cmp
fwait
add
test
icebp
lret
popa
sub
inc
mov
shrl
push
push
imul
mov
test
and
or
xchg
add
loopne
mov
jo
adc
pop
adc
mov
sub
sbb
xor
adc
cmp
or
lret
and
sbb
and
shrb
pop
je
lahf
or
orl
inc
cmpl
aas
ret
inc
cwtl
ret
jp
jo
add
dec
cwtl
sub
add
jecxz
sub
xor
es
or
inc
or
int3
pushf
hlt
ret
mov
sbb
mov
or
popa
rolb
sbb
mov
orb
imul
adc
sub
shrl
mov
and
mov
xor
mov
arpl
enter
test
es
rcll
sub
lods
into
test
mov
push
adcb
pop
xchg
mov
fbstp
mov
push
lds
cmp
daa
jb
jnp
into
sub
imul
or
pop
add
or
push
lret
icebp
std
dec
sub
lds
mov
jg
pop
sbb
cmp
mov
fnsave
push
in
imull
mov
ljmp
rol
lock
scas
stos
mov
mov
add
push
inc
test
or
push
cmp
rcrl
faddp
push
push
mov
mov
xchg
rorb
mov
sub
jmp
test
dec
mov
mov
adc
or
mov
inc
adc
iret
out
out
add
daa
or
push
arpl
pop
loopne
or
loopne
fs
cmp
xchg
enter
dec
sarb
push
and
xor
xor
orl
mov
adc
add
dec
or
xor
or
lods
pop
or
outsb
pop
pop
fstpt
cs
push
push
inc
imul
push
mov
sub
and
pop
stos
push
cmp
and
adc
and
sub
adc
rcr
test
sbb
scas
in
sbb
pop
mov
stos
adc
pop
xchg
scas
test
and
mov
add
adc
inc
mov
mov
adc
fimuls
pushf
loop
pushf
pop
adc
xor
add
push
and
push
add
test
enter
mov
push
or
or
test
lods
adc
xchg
movb
inc
xor
mov
stos
add
clc
addb
push
insl
and
sub
sub
pop
cmp
push
insb
lret
mov
insb
add
or
ret
insb
add
andl
xor
or
push
push
dec
or
movb
xchg
stos
or
stos
fs
add
stos
jne
sub
sub
mov
and
mov
scas
mov
nop
xor
or
stos
imul
mov
rolb
js
cmp
dec
in
notb
xchg
divb
out
incb
adc
dec
fdivrl
or
orl
xchg
xchg
or
pop
or
adc
dec
sbb
or
xor
inc
adc
xchg
loopne
faddl
imul
fisubl
or
push
rolb
jp
adc
mov
jae
sahf
call
xlat
or
push
nop
sbb
add
mov
ljmp
xor
pop
push
rcll
lock
inc
pop
test
inc
fstps
sahf
push
dec
rcrb
inc
sub
or
scas
leave
ret
or
lds
inc
test
push
fists
aam
fisttpll
adc
mov
or
mov
or
daa
clc
jne
loopne
pop
jbe
imul
jmp
fimull
pop
adc
jp
subb
dec
xchg
xchg
in
loope
in
repnz
rolb
or
xor
inc
sub
cmpsb
or
fld
dec
aam
shll
pop
mov
xchg
push
and
lahf
or
ret
adc
lea
js
mov
icebp
test
shlb
adc
or
adc
iret
sbb
add
xrelease
inc
push
jnp
push
push
sub
sbb
and
xor
addl
push
add
ret
sub
orl
outsb
cmp
mov
dec
push
pop
js
or
sarb
adc
adc
mov
cmp
lods
inc
gs
incl
dec
loope
jns
pop
enter
dec
pushf
rolb
mov
and
sarb
or
loopne
push
aad
or
rcrb
push
push
push
mov
xchg
and
xor
mov
pop
lock
loopne
push
bound
daa
add
dec
push
test
daa
enter
or
rcrl
sub
adc
mov
mov
lret
adc
sub
inc
iret
add
add
mov
jnp
loopne
inc
into
and
popa
sub
test
add
mov
shr
xchg
sbb
aaa
imul
pop
aad
lds
ret
insb
add
push
mov
rorb
pop
push
mov
or
mov
aas
adc
stos
mov
adc
dec
movsb
xor
mov
sub
jge
stc
push
ja
sbbl
or
add
in
ret
loop
dec
test
inc
mov
sahf
push
addl
test
psrad
push
push
clc
stos
adc
push
jecxz
sbb
orl
inc
movl
adc
lcall
pop
inc
fmuls
xchg
gs
pop
add
clc
or
stos
or
bound
leave
sahf
call
or
popf
jp
add
push
xchg
cmp
adc
push
icebp
adcb
nop
test
ljmp
sbb
inc
ret
adc
and
mov
pop
loope
arpl
inc
movsb
sbb
inc
push
sbb
and
adc
push
inc
lods
leave
cmp
xchg
rcll
dec
dec
and
pop
filds
add
outsb
push
sarb
push
xor
movsb
push
inc
or
rol
adc
cmpsb
push
jnp
outsl
cwtl
and
xor
arpl
pop
jg
push
push
push
mov
in
mov
and
inc
loopne
pop
sbb
aam
cmp
jne
test
int
pop
cmp
push
xor
leave
mov
mov
or
push
fcoml
test
add
sbb
or
jne
push
stos
mov
mov
outsl
jo
xchg
cmpb
ret
dec
mov
adc
mov
inc
in
xchg
mov
add
in
jg
jp
or
mov
lods
les
ret
add
loop
xor
shld
orl
dec
add
mov
sbb
xchg
rclb
and
paddq
mov
push
xor
push
inc
pop
prefetchnta
addl
dec
cmp
add
mov
lahf
sbb
or
mov
jo
pop
mov
jl
lods
pop
mov
or
jmp
dec
call
bound
or
je
sahf
rolb
bound
rolb
repnz
adc
paddd
mov
inc
movsb
pop
and
add
sbb
sbb
pop
push
es
inc
outsl
mov
iret
xchg
adc
stos
lret
stos
xor
shll
add
adc
add
sub
adc
pop
mov
addr16
mov
push
adc
sbb
mov
push
ret
or
mov
xchg
stc
mov
in
sub
or
rolb
adc
sbb
call
in
adc
repz
lock
enter
leave
add
ret
add
mov
les
jnp
mov
sbb
ret
sub
mov
cmpsb
adc
jnp
test
ss
mov
adc
add
jle
insb
pusha
test
mov
cmp
mov
lds
jp
mov
call
mov
xor
push
add
js
popf
lret
sub
dec
das
mov
lret
or
out
inc
or
adc
mov
cmp
pusha
mov
sub
sbb
pop
addl
lea
enter
mull
cmp
push
sbb
adc
addr16
mov
xor
and
in
lret
fs
dec
ret
jge
add
mov
or
pop
add
adc
dec
shl
pop
test
mov
push
fwait
push
jno
add
stos
xchg
les
jo
mov
dec
loop
or
push
nop
or
pop
leave
in
sbb
adc
and
nop
jmp
and
push
sti
sub
dec
inc
int3
xor
or
jno
add
mov
adc
jo
push
mov
in
bound
mov
pop
add
mov
add
push
pop
xchg
leave
hlt
es
jb
add
mov
push
pop
stos
enter
mov
scas
jae
xchg
xchg
test
sbb
nop
adc
jmp
stos
ret
push
sbb
mov
in
ffreep
xchg
arpl
push
add
adc
aad
add
pop
cmp
mov
adc
shr
sbb
cmp
xchg
adc
push
or
push
push
ror
mov
psllq
rorl
inc
scas
push
add
mov
aaa
mov
inc
sub
mov
lea
sbb
dec
or
rolb
pop
scas
rclb
loopne
lcall
incb
mov
loope
add
jle
sbb
xchg
cli
dec
ljmp
mov
cmp
mov
inc
sub
stc
or
mov
or
jmp
sub
xor
xor
int
push
xchg
lods
fcoms
mov
adc
adc
out
mov
pushf
add
push
sbb
icebp
jo
push
pop
mov
add
jp
sub
jg
inc
xchg
or
inc
xor
cli
cmp
lods
push
xchg
orl
xchg
in
jo
mov
fs
enter
sbb
pushf
sbb
mov
lods
ret
jae
sub
sti
cs
xor
dec
scas
out
cmp
push
cmp
ds
and
inc
xchg
pop
jnp
adc
push
mov
jae
inc
jnp
std
cmpsb
or
jne
stos
jp
lock
and
sub
nop
sbb
jae
and
enter
test
rorb
int
lods
adcl
daa
ret
lea
push
aas
loopne
loope
jo
clc
or
ds
add
cmp
ljmp
xchg
sbb
jecxz
push
add
adcb
lret
mov
rolb
cmpsb
mov
push
inc
add
mov
loopne
aam
push
cmp
sbb
shlb
or
sub
popa
mov
push
push
add
mov
cmp
dec
pop
cwtl
dec
icebp
lods
sbb
je
sbb
leave
adc
jp
dec
jg
icebp
loope
or
inc
sub
xchg
jmp
or
out
pcmpeqb
xchg
mov
or
dec
roll
mov
and
sbb
inc
shrb
or
sub
adc
stos
push
mov
or
aad
pop
sub
push
jl
jns
pop
pop
shrb
inc
ljmp
push
scas
je
or
lds
add
adc
rclb
fcoml
and
or
xor
sbb
popa
jmp
fdivrl
fistpl
push
out
or
call
xor
addb
dec
push
push
test
dec
and
push
stos
pop
push
mov
jno
rcl
sub
mov
cwtl
rcl
push
aas
pop
adcb
pop
or
inc
repnz
xor
lcall
mov
test
subl
push
or
xchg
mov
sub
sub
sub
int3
push
ret
cli
insb
push
dec
aas
xchg
rorb
scas
stc
movsb
fsubs
repnz
cmp
stos
push
pop
jge
add
daa
or
push
clc
xchg
sbb
add
sbb
adc
mov
adc
adc
adc
fiaddl
cmp
and
sbb
cmp
jbe
xor
sbb
push
pop
inc
cmp
loop
add
lret
xchg
gs
and
push
jmp
cld
mov
adc
sti
das
enter
sbb
mov
xor
sbb
push
aam
push
rclb
jo
cs
incl
in
add
sub
in
inc
mov
xor
test
jp
push
and
or
mov
add
rolb
rolb
loop
add
add
lock
adc
or
mov
sbb
add
sub
gs
int3
add
sbb
cli
inc
fs
out
or
iret
add
popf
mov
sbb
mov
or
roll
inc
lock
mov
lret
push
cmpsb
mov
sub
pop
shrl
cmp
xchg
mov
cmp
in
add
pusha
xor
pushf
or
js
and
dec
sbb
add
shlb
jecxz,pt
lock
scas
add
and
jo
mov
jp
xchg
add
loop
clc
mov
notl
jge
out
pop
mov
in
push
sub
inc
adc
push
fildl
mov
in
ret
adc
sbb
addb
je
int
pusha
push
xor
leave
icebp
cli
or
or
lcall
inc
pop
aad
add
lret
fwait
add
in
arpl
push
out
mov
add
sahf
cmpsl
enter
sbb
subb
push
or
sbb
inc
jp
sub
cltd
les
sbbl
les
jne
cltd
add
str
add
inc
and
inc
add
lret
pop
mov
pushf
js
movq
push
or
popf
inc
stos
add
cmp
imul
adc
xchg
sub
ds
jmp
inc
adc
and
pop
inc
lods
jne
push
mov
add
push
sub
ret
call
xor
popf
xor
and
aam
mov
adc
rclb
dec
or
adcl
rclb
hlt
inc
dec
adc
icebp
push
sbb
inc
xchg
sub
lods
hlt
xor
lret
add
pusha
sbbb
lock
push
aad
shll
lock
dec
cs
add
mov
imul
lock
cmp
je
leave
cmp
enter
mov
add
mov
push
xchg
adc
jmp
out
test
xor
test
ret
push
adc
sbb
bound
add
mov
add
rclb
jge
sarl
cmc
sub
jle
inc
dec
add
cmc
push
arpl
sbb
push
ficoms
fsub
xor
push
mov
push
push
xor
sub
push
dec
pop
push
cmpsb
xor
pop
and
jo
cmpsl
mov
lea
jns
addb
outsl
negb
cmp
or
push
cmp
mov
insl
or
jb
pop
cwtl
ljmp
sbb
jecxz
pop
lods
je
cmp
out
into
adc
stos
xchg
ret
mov
inc
scas
aam
sbb
lock
xor
fwait
mov
mov
pushf
ret
lock
push
push
xlat
sbb
or
insb
inc
or
popf
in
jne
xor
mov
imulb
push
cmp
adc
sub
pushf
enter
adc
and
inc
ljmp
push
push
adc
rolb
xor
add
push
out
adc
push
shl
push
xor
pusha
stos
mov
orb
pop
stos
jle
inc
in
sub
adc
data16
and
lret
push
and
popa
outsb
loopne
jb
into
pop
cld
push
mov
add
push
xor
aad
cli
jge
cmp
inc
jmp
or
push
sbb
test
add
mov
lret
sub
add
js
adcl
xor
inc
mov
adc
cli
jo
and
pop
xor
cmp
mov
jae
pop
cmc
jle
inc
iret
inc
lds
xchg
mov
pusha
lret
sbb
xchg
ss
push
push
sub
aad
mov
pop
cmp
inc
and
push
inc
mov
cmpsl
mov
mov
jae
jecxz
xchg
adc
and
dec
das
js
int
mov
outsb
push
add
stos
sbb
mov
pop
outsb
pop
lods
lods
iret
lcall
pop
jmp
sbbl
stc
into
jo
test
fdivr
mov
cwtl
cmp
inc
mull
cmp
mov
das
fbld
push
push
ret
add
lds
or
into
movsb
pusha
scas
xor
pusha
and
adc
mov
and
mov
or
mov
fisubl
hlt
adc
jmp
icebp
mov
adc
push
adc
mov
adc
cmpsl
cli
adc
xchg
lcall
rclb
add
dec
pop
or
xchg
jle
xchg
rclb
test
mov
movsl
cmpsb
jo
lret
lahf
leave
in
push
xchg
pop
xchg
mov
xor
adc
add
mov
push
call
in
xor
lods
mov
pop
popf
fwait
sub
mov
push
add
pop
or
es
push
mov
pop
insl
push
mov
push
in
adc
push
sbb
stos
sbb
sbb
xor
dec
dec
ret
lahf
adc
and
test
lds
pop
mov
push
cmc
push
mov
verr
xor
mov
insb
pop
sbb
push
ss
add
lret
or
mov
jbe
sub
aam
sar
xchg
push
subb
push
add
jmp
adc
push
sbb
push
or
aaa
adc
push
sub
push
mov
jne
cmpsl
out
xor
loopne
pop
subl
je
push
mov
mov
pop
andb
into
add
adc
or
push
add
xlat
mov
add
pushf
mov
loop
stos
les
xchg
or
sbb
mov
add
ret
mov
js
inc
jecxz
jg
push
adc
cmp
push
and
out
xchg
ds
js
cmpsb
shlb
mov
mov
mov
jge
xchg
sbb
cmp
add
cmp
repz
adc
sbb
mov
mov
adc
push
lcall
push
lods
mov
rclb
lret
add
sub
imull
sub
icebp
or
mov
aam
xor
or
pop
popa
adc
shrb
cmp
callw
push
add
xchg
cmp
jnp
add
and
sub
push
xor
lret
mov
ja
xor
cmp
das
xor
push
add
pop
adc
pop
shlb
jb
imul
mov
xor
cli
sub
push
pop
adc
int3
or
inc
mov
xchg
ret
mov
ficompl
mov
sbb
mov
loop
or
xchg
jmp
pop
mov
dec
movb
cmovne
enter
adc
ror
cmp
fmul
enter
test
jg
rorb
and
imul
loopne
or
cpuid
or
lock
adc
inc
in
push
mov
mov
fadds
add
es
xlat
jg
mov
scas
js
ljmp
neg
dec
jo
jge
xchg
adc
jne
and
sbb
int
lea
or
or
pushf
js
inc
ficompl
add
and
pop
icebp
popf
shlb
and
inc
mov
mov
scas
and
in
mov
pop
inc
mov
sbb
sub
mov
shll
into
lods
push
adc
push
imul
pop
rcll
mov
push
test
hlt
pusha
or
rorb
subb
and
movsl
add
movsl
mov
mov
sbb
daa
inc
test
dec
aad
pop
adc
inc
sbb
or
clc
jp
mov
jp
lock
pop
jo
sbb
mov
insb
in
jno
outsb
sbb
imul
aas
aas
jecxz
push
dec
push
push
cmp
aam
inc
test
xchg
pop
enter
setl
test
scas
and
icebp
add
int
mov
xchg
inc
repnz
sbb
sub
lea
sbb
or
bound
lret
movsb
add
xchg
mov
cmp
sbb
or
mov
jne
and
adc
sub
sbb
jp
cli
sbbl
pop
or
mov
xchg
inc
adc
mov
pusha
adc
mov
ds
sbbl
in
inc
in
cltd
pushf
or
mov
inc
push
test
adcl
inc
loopne
adc
ljmp
lods
call
mov
push
jge
mov
loope
es
cmp
pusha
scas
sub
test
jnp
es
push
stos
mov
pop
adcb
xor
or
cmp
jnp
xor
stos
loopne
mov
mov
sub
or
icebp
lods
sbb
testb
and
mov
in
outsb
add
lock
inc
rclb
int
cmp
cmp
aad
sbb
ret
mov
mov
and
sub
adc
loopne
xchg
mov
mov
or
jb
subb
pop
rorb
mov
js
add
push
push
jnp
or
das
repnz
mov
mov
movl
cmc
arpl
cltd
mov
ljmp
pop
sub
rolb
mov
sbb
xchg
add
inc
lods
cs
and
pusha
adc
sbb
test
loopne
push
jge
mov
add
adc
in
loopne
bound
dec
or
in
shll
xchg
sbb
je
imul
xor
mov
test
cmp
sub
or
push
adc
loopne
ret
sbb
adc
pop
enter
scas
cmp
or
xchg
cmp
adc
cli
push
adc
shll
inc
adc
test
loope
sub
push
xor
stc
push
cmp
mov
inc
sbb
cmpsl
ret
mov
cmp
cmpsb
mov
adc
adc
ss
push
and
inc
int3
lds
sbbl
xor
sub
je
loop
pusha
mov
adc
jo
add
jg
pusha
and
sbb
cwtl
adc
stos
sub
ljmp
adc
and
cmp
push
dec
adc
test
or
jbe
out
inc
ret
push
xchg
or
mov
cmp
jnp
popf
push
les
sbb
adc
movb
sub
pop
cmp
adc
or
cmp
push
xor
xorl
pusha
or
rorl
pop
push
leave
inc
addr16
lret
das
and
xchg
push
pop
xchg
stos
xor
fchs
stos
pop
mov
jnp
push
or
pop
or
cmpsl
adc
push
test
ret
popf
or
or
test
add
jo
xchg
pop
dec
xchg
fmuls
fstpl
xor
add
sub
int3
mov
xlat
cli
mov
or
lcall
sub
mov
push
mov
push
adc
and
or
add
jae
repnz
test
mov
sbb
xchg
adc
test
cmp
mov
adc
cld
lods
cmp
mov
dec
roll
push
rol
gs
test
jo
fnsave
sbb
jb
scas
cmp
sub
adc
xor
hlt
icebp
push
lods
inc
rolb
js
push
adc
push
xor
lock
sub
les
sub
mov
add
dec
decb
aam
mov
jle
orb
rclb
inc
sub
sub
sbb
mov
pushf
addl
or
mov
into
mov
out
aam
sbb
sub
or
loop
adc
icebp
add
sbb
and
out
xor
xor
sbb
rcl
xor
jle
inc
lock
jo
stc
adc
or
or
loope
push
adc
pop
mov
push
mov
lock
mov
stos
clc
mov
push
dec
add
sbb
lock
and
adc
mov
cltd
dec
push
out
lcall
andl
mov
cmp
cwtl
mov
enter
jno
and
or
das
pop
movsb
push
adc
push
lahf
push
add
jbe
rcrl
adc
shl
or
inc
add
lea
sub
ret
dec
cmp
cmpsb
pop
cmp
mov
stos
push
push
sub
mov
incl
adc
and
and
cmp
or
lret
jo
movsl
enter
xchg
lods
shll
push
adc
and
cmp
inc
mov
loopne
or
adc
pop
push
clc
out
lcall
or
adc
push
in
pusha
mov
subb
xor
push
cmp
add
bound
sbb
mov
sub
add
dec
and
shll
fcompl
lock
stos
out
loop
dec
add
push
jge
cmp
add
mov
adc
mov
dec
sahf
imul
push
popf
enter
push
lea
cmp
jecxz
sbb
inc
xchg
sbb
push
or
sti
push
jb
xor
icebp
loope
bound
push
adc
andb
add
push
rclb
cli
mov
mov
ret
daa
in
jb
add
mov
add
sub
jmp
pop
out
mov
adc
xor
loopne
movsl
adc
cwtl
rcll
leave
inc
adc
mov
stc
adc
sub
inc
push
fs
add
shr
or
ret
mov
pop
xorl
push
push
pop
pop
cmovs
push
in
pop
push
push
inc
or
jno
sub
sbb
xchg
sub
or
push
mov
addr16
or
out
pop
sub
data16
dec
or
mov
ljmp
stos
and
testl
sub
ss
fisttps
inc
icebp
gs
bound
push
mov
hlt
inc
sbb
pop
lds
xchg
js
or
inc
cmp
add
push
xor
arpl
inc
into
pop
push
ret
jno
adc
sarl
pop
call
xchg
call
mov
movhps
shlb
in
jo
mov
out
sub
sbb
jbe
shlb
xor
inc
and
aam
or
enter
popl
adc
mov
inc
mov
loopne
mov
test
imul
xlat
inc
sbb
pop
pop
dec
add
fstpl
or
adc
shl
xchg
ljmp
add
adc
add
shl
mov
imulb
or
cs
push
mov
push
dec
movsb
test
inc
sbb
test
add
orl
xor
lock
add
enter
pusha
and
clc
xor
dec
or
je
mov
rcll
and
pop
inc
cvtpi2ps
in
jne
fsubrl
mov
mov
or
sbb
mov
mov
mov
test
jns
lcall
loopne
mov
cmp
rolb
pop
movl
or
pop
push
inc
in
lock
or
adc
xchg
add
jp
pop
adc
pop
jge
push
xor
stos
or
insb
xor
mov
mov
cs
ror
pop
clc
mov
adc
sbb
add
inc
ljmp
or
arpl
cmc
jb
loope
pop
cmp
xor
push
push
pop
mov
xchg
adc
and
mov
xor
and
push
xchg
adc
icebp
syscall
lret
shlb
rcl
add
mov
adc
dec
insb
scas
push
sbb
add
out
push
rclb
xchg
aam
ret
ds
fdivp
sub
mov
adc
push
enter
xchg
test
lods
cli
push
lods
mov
incl
push
pop
daa
mov
mov
cli
mov
in
adc
push
loopne
cwtl
and
js
add
mov
loop
adcl
popa
pop
arpl
dec
test
pushf
sub
js
cmp
push
push
push
out
leave
push
add
add
adc
add
icebp
jae
mov
cmpb
xor
lock
xor
les
sub
or
push
sbb
sbb
lock
ret
add
mull
stc
fsubl
lret
lret
ljmp
jp
in
push
xor
push
jge
mov
xor
push
inc
loop
stos
or
push
pop
and
lods
xor
add
icebp
cltd
jl
or
test
inc
inc
test
int
jmp
popf
rcrb
or
or
push
sbb
sahf
mov
jge
es
xor
or
jp
sbb
rcl
mov
sub
scas
and
lock
xchg
fdivrs
rolb
cmp
fdivp
and
add
enter
ret
sub
cli
push
cmp
out
shrl
rorl
xor
pop
iret
leave
adc
xor
xor
fdivl
mov
mov
stos
test
pop
out
cmp
inc
adc
add
jnp
pop
pop
bswap
jo
mov
pop
adc
push
add
and
push
mov
mov
inc
leave
lods
dec
loope
in
and
jmp
cld
cmp
cmp
push
test
sub
sub
sbb
or
mov
test
or
or
or
cmp
sub
loopne
cli
enter
inc
jne
push
stc
or
adc
test
sub
scas
mov
pmuludq
popa
mov
pushf
lock
stos
mov
daa
loop
mov
inc
xor
mov
push
adc
addr16
sbb
mov
sub
push
js
mov
push
lock
push
sub
mov
add
add
test
jp
add
pusha
ret
loope
inc
push
mov
andl
jns
add
andl
aad
lahf
imul
aaa
rclb
outsb
adc
imul
add
test
popf
and
xlat
std
lods
enter
push
int
xor
pusha
enter
adc
add
jnp
aad
jl
std
cltd
repnz
push
adc
or
decb
dec
push
in
das
dec
xchg
push
add
call
push
sarl
mov
inc
shll
fs
add
mov
adcl
sub
pushf
mov
lea
inc
roll
xor
cli
sahf
icebp
fstps
in
loope
mov
fmull
popf
cmpsb
das
inc
xchg
mov
or
test
out
push
add
mov
ret
sub
cltd
cwtl
adc
jg
sub
mov
popa
inc
xchg
lock
mov
enter
aas
add
out
adc
add
mov
xchg
fisttps
xlat
sub
out
out
add
cs
sbb
xchg
mov
mov
mov
push
jns
or
inc
call
or
or
add
jb
inc
dec
cmp
stos
mov
xor
test
jo
push
aad
cwtl
test
pop
add
or
and
pop
sbb
loop
pop
lahf
int3
roll
int
js
pop
or
mov
into
mov
sub
pop
inc
lock
aam
ret
jo
cmp
test
add
mov
sbb
andb
call
test
loope
ror
or
rol
bnd
add
mov
add
paddb
mov
jg
push
imul
sqrtps
or
pop
inc
stos
jb
rcrl
and
hlt
push
mov
cmp
cwtl
jo
inc
scas
incb
add
test
dec
jo
or
sub
jne
pop
lock
das
loopne
mov
adc
cmc
sarb
cmp
or
adc
sbb
scas
out
mov
inc
mov
xchg
xlat
icebp
add
add
addb
inc
or
pop
sarl
inc
xchg
sub
test
mov
scas
and
dec
sbb
adc
or
stos
testl
inc
inc
sub
mov
jmp
popf
fdivl
or
adc
and
mov
es
cmp
rclb
subb
xchg
xor
jne
adc
push
inc
fadds
inc
icebp
sub
shrl
cltd
xchg
jmp
jbe
push
jg
cltd
mov
cmove
xor
push
add
scas
mov
pushf
jae
inc
mov
rolb
ss
orb
jge
imul
mov
pop
enter
int3
add
push
dec
sub
popa
push
cmp
jmp
add
lcall
pop
movsl
lock
sub
inc
dec
dec
cmp
shrb
or
push
lods
push
shll
sub
sub
pop
mov
fdivrs
and
jne
ret
or
pushf
mov
das
sbb
push
into
and
xchg
sbb
xchg
loope
fidivl
fwait
adc
push
sub
add
test
js
push
cmp
or
mov
add
and
in
jmp
and
test
push
adc
aam
loope
daa
mov
push
push
mov
fldcw
fldcw
jne
add
pusha
dec
or
mov
adc
xchg
push
fs
add
test
cs
es
add
sub
mov
add
mov
pop
jmp
sbb
popa
je
rclb
in
repnz
dec
adc
jbe
inc
daa
push
adc
mov
push
xchg
enter
jae
adc
push
mov
sub
push
xchg
and
shr
ret
push
inc
add
cltd
pusha
mov
lds
out
nop
pop
roll
mov
and
inc
adc
dec
adc
cld
mov
adc
lret
sbb
sbb
sti
xorps
mov
jb
push
inc
rol
test
sarb
mov
fsubp
mov
arpl
pushf
mov
jno
push
sbb
pusha
sub
loopne
and
dec
int3
pop
dec
lea
popf
jb
dec
inc
arpl
enter
mov
add
xor
adc
cmc
addb
loop
push
pop
mov
xchg
jbe
lock
stc
lock
sub
inc
cmp
cmp
pop
cmp
add
or
dec
adc
outsl
pop
shlb
dec
and
cmp
pop
sbb
push
cmpb
inc
inc
sub
cwtl
aam
mov
xchg
lods
push
loope
ljmp
mov
cmp
stos
es
out
sbb
or
icebp
inc
fisubrl
adc
loop
rorl
movsl
jo
push
jno
pop
nop
mov
aam
mov
xchg
stos
add
jo
jle
lock
lods
pop
mov
mov
push
mov
arpl
es
mov
test
pop
adc
js
mov
or
sahf
inc
lds
in
ss
int3
subb
stos
ss
pusha
enter
pop
mov
sub
mov
push
push
rcll
xor
and
je
loope
jo
test
orb
inc
cmp
or
xchg
pop
pop
mov
mov
sub
xchg
ret
pop
sub
hlt
pop
adc
scas
adcl
stos
ljmp
push
out
leave
jno
jb
xchg
inc
mov
push
in
xchg
je
jae
push
rcrb
icebp
jo
add
arpl
add
cmp
cmpsb
sub
loopne
cmp
cmp
push
shll
subb
xchg
jne
add
mov
adc
ror
add
or
fs
jbe
add
mov
or
mov
addb
or
shrb
add
sub
test
dec
push
call
lock
push
xor
push
add
adcb
or
pop
mov
xor
ret
push
add
loop
pop
lods
and
sub
aad
inc
cwtl
leave
cmc
cmp
push
scas
mov
enter
jo
push
cmpsl
mov
xchg
jb
adc
stos
push
clc
out
or
ss
pop
push
xchg
into
popf
test
or
add
ss
leave
mov
push
xor
pop
push
xor
adc
out
fst
cmp
and
sbb
jge
add
shrl
or
dec
lock
inc
adc
movhps
jmp
or
cli
cmp
addr16
test
add
outsb
jae
pop
jno
sahf
and
out
test
movsl
mov
fnstsw
fisttpll
sbb
adc
mov
adc
call
jge
sbb
lock
mov
adc
push
in
dec
pushf
add
jmp
or
adc
or
dec
push
imul
scas
pop
sub
push
or
mov
imul
and
sbb
or
inc
inc
roll
daa
or
sbb
or
shrb
inc
loop
int3
sbb
movntps
pop
lds
sbb
jmp
xchg
and
push
arpl
add
xchg
sub
mov
adc
mov
rclb
and
xor
pusha
add
pushf
sub
push
sahf
jb
cmp
in
adc
mov
sbb
add
xor
push
push
push
sub
sahf
and
pushl
sbb
lret
jl
ret
sub
dec
shrb
xchg
and
cmp
cmp
sbb
call
fimull
gs
call
inc
adc
iret
sbb
add
push
cmpsb
fiaddl
cmp
sbb
xchg
imul
or
mov
mov
jne
cltd
jo
or
xor
and
out
ret
add
pusha
loop
mov
or
mov
xchg
add
jo
dec
dec
or
mov
stos
lret
mov
pop
lcall
adc
cmpl
mov
xor
pop
adc
cmp
add
xchg
add
sbb
xor
or
add
xchg
mov
call
sbb
jle
hlt
mov
icebp
inc
jp
mov
inc
movsb
add
les
rolb
and
and
and
leave
jnp
xchg
add
add
and
insl
mov
dec
pop
lea
pop
adc
mov
jp
je
je
mov
loopne
addr16
mov
or
and
stos
mov
popa
pop
gs
imulb
popa
push
or
add
or
lret
ljmp
adc
xchg
cmp
and
add
xor
aam
inc
cmpps
aad
out
pop
add
push
shr
nop
sarb
mov
cmp
ss
add
inc
into
xor
ljmp
jne
cmpsb
push
xchg
sbb
jo
mov
cmpsl
push
push
testb
mov
mov
jg
std
aaa
rol
pop
push
push
andl
arpl
out
lahf
aas
mov
and
popa
dec
pop
cli
xor
repz
mov
fsubrs
cmc
jmp
mov
cli
xchg
fistl
cld
stc
mul
dec
push
shll
daa
and
bnd
mov
fnstcw
rorl
sub
dec
mulb
iret
rol
dec
mov
sub
loope
je
fsubrs
lods
inc
push
jp
cmovl
subl
repz
bound
xchg
scas
les
push
sbb
bound
aas
jg
cld
mov
adc
imul
lahf
jns
shrl
loopne
cld
stc
xlat
jecxz
shll
les
lret
leave
jmp
lahf
aas
sbb
push
add
iret
mov
xlat
or
loop
and
stc
push
mov
xor
fdivrs
push
test
lahf
stos
fdivrl
insb
dec
add
jl
aas
jg
aas
fdivl
lret
cmp
pop
inc
enter
cld
loope
stos
push
iret
add
pop
sub
lods
push
bound
iret
lahf
aas
xchg
push
push
push
lock
repz
jecxz
rorb
in
aaa
sahf
addb
stc
sbb
and
mov
sbb
adc
jmpw
iret
lahf
aas
inc
xchg
clc
jne
lret
imul
stc
repz
push
push
fildll
cmp
cs
dec
inc
roll
orb
cld
stc
repz
or
push
adc
cmpsb
xchg
xlat
or
rcrl
mov
lahf
aas
jg
cmp
xor
push
ljmp
out
into
aaa
adc
cld
pop
xchg
xchg
lahf
aas
jg
add
fdivl
repz
cs
repz
imul
fwait
or
cld
popa
cmpb
fdivrs
ror
sub
xor
out
lahf
adc
lea
test
xchg
jmp
notl
inc
mov
filds
fsubs
clc
push
pop
sti
lcall
out
lahf
lea
daa
repz
xchg
xchg
mov
cld
stc
test
sub
iretw
sub
push
outsl
stos
mov
out
lahf
aas
and
xchg
cld
stc
repz
adc
and
pop
lods
aaa
inc
add
int3
lea
lahf
aas
jg
sarb
sub
mov
cld
stc
repz
enter
in
or
adc
mov
test
decb
ret
cmp
mov
out
notb
sbb
and
aas
jg
cld
in
loop
cmp
addr16
and
aad
cmp
repz
lahf
push
lds
jbe
pop
mov
cld
stc
xor
inc
jl
sbb
and
out
lahf
aas
adc
adc
cmp
cld
stc
repz
pop
pop
dec
lock
inc
xor
lahf
aas
jg
data16
sub
add
dec
lds
out
pop
inc
jnp
lret
jg
frstor
mov
lahf
xlat
jmp
jle
in
pop
repz
lahf
out
add
jmp
add
push
lock
jg
cld
stc
int3
or
inc
mov
loopne
sti
int
movsb
adc
iret
lahf
aas
mov
mov
mov
cld
stc
repz
or
aad
mov
adc
adc
lahf
aas
jg
lcall
pop
inc
aaa
xchg
clc
stc
xlat
call
lcall
aas
jg
cld
lcall
mov
inc
xchg
cmc
repz
lahf
mov
out
loopne
sbb
cmpb
stc
test
pop
bound
sbb
scas
in
iret
lahf
aas
jge
jbe
pmaxsw
cld
stc
inc
jmp
inc
shrb
lahf
aas
jg
mov
jo
xchg
lcall
xor
out
in
cmc
push
pop
scas
fimuls
sbbb
jg
cld
mov
dec
push
mov
iret
lahf
aas
inc
xor
and
mov
cld
stc
repz
or
bound
mov
iret
lahf
aas
jg
cmpsl
mov
movsl
flds
out
pop
jl
leave
stos
jne
loopne
mov
lahf
aas
jg
xor
add
inc
fwait
push
sbbl
out
jne
gs
inc
test
leave
stos
xchg
test
jg
cld
scas
mov
iret
rcl
mov
repz
lahf
stos
mov
sbb
push
jle
cld
stc
push
mov
pop
insl
insl
mov
je
jg
aas
lcall
inc
scas
jle
cmovno
cmp
out
lahf
loope
fs
pop
ss
fcomip
cld
stc
mov
lods
lds
in
dec
push
add
dec
int3
iret
lahf
aas
ljmp
scas
push
adc
pop
int
out
pop
cmp
stc
repz
addl
cmp
stc
pop
jg
push
cmp
push
sub
inc
outsb
in
mov
jecxz
and
adc
test
or
add
out
pop
pop
dec
pop
and
mov
stc
cld
stc
repz
or
mov
add
lcall
fsubrs
and
mov
pop
xchg
aas
jg
or
test
rcr
out
enter
stc
repz
pop
rolb
test
pop
mov
repz
aas
stc
clc
cltd
in
fcmovb
inc
frstor
stc
shld
mov
lahf
mov
ret
dec
cli
xlat
movsl
fildl
iret
lahf
aas
mov
ja
or
iret
lock
jl
repz
push
dec
scas
mov
lahf
lock
lods
cld
lea
xor
sarb
popf
popf
imul
iret
lahf
enter
adc
cwtl
mov
cld
stc
and
xorb
jns
or
fwait
outsb
int3
out
lahf
aas
js
push
ret
sub
std
mov
mov
cmp
shrl
push
loopne
lea
aas
jg
jl
outsb
xor
mov
div
xchg
cld
stc
repz
jp
xchg
dec
lea
imul
sbb
addl
daa
mov
repz
xor
mov
ljmp
insb
cld
cld
sbb
mov
cmp
xchg
ljmp
vmread
cmp
stc
pause
pop
cmpsb
in
mov
outsb
outsl
push
out
jbe
iret
lahf
aas
jg
dec
movsl
xchg
pop
cmp
cmp
stc
repz
ja
fildll
lds
push
rcll
inc
lea
xlat
xchg
jne
dec
std
lds
cld
andb
and
mov
sbb
leave
test
push
dec
add
xor
out
lahf
push
xchg
cltd
or
fcompl
sbb
cld
stc
xchg
std
dec
mov
bound
lahf
lahf
in
ljmp
lahf
aas
test
inc
push
lcall
in
divb
lret
dec
ror
sahf
std
xor
addr16
xor
jne
rcrl
iret
pop
jle
dec
sti
rclb
cmc
test
repz
adc
je
ret
mov
rorl
xor
inc
dec
test
xchg
pop
mov
repz
pop
aas
pushf
gs
jno
pop
lcall
mov
sti
xlat
ret
pop
xor
cmp
sub
or
aas
jg
cld
jb
pop
sub
ja
out
sarb
pop
repz
lahf
ret
push
aam
fwait
push
pop
jp
push
xor
repnz
push
scas
jo
xor
leave
iret
lahf
test
pop
leave
stos
xor
out
lahf
jg
div
pop
sbb
addr16
adc
stc
repz
dec
iret
inc
mov
sub
sbb
aas
jg
sbb
roll
das
mov
repz
jbe
xchg
shrl
inc
daa
nop
pop
clc
or
ljmp
movsb
imul
aas
jg
cld
adc
fs
inc
mov
adc
iret
lahf
stos
vmulsd
jmp
or
cld
stc
and
imul
mov
dec
out
out
lahf
aas
dec
and
push
daa
scas
jg
sbb
cld
stc
repz
or
pusha
insb
sbb
adc
repz
mov
sub
mov
push
jg
cld
stc
dec
daa
mov
nop
push
pop
std
jmp
mov
outsl
xor
jae
xchg
leave
pop
cld
stc
repz
push
adc
cmp
pop
hlt
out
lahf
aas
jg
fmull
dec
aam
notl
jle
stc
repz
lea
sub
sub
dec
push
sbb
rcrb
in
jmp
sub
repz
cmp
pop
add
int
std
lods
lods
imul
dec
nop
xchg
andnps
lcall
in
iret
lahf
iret
je
pop
stos
loopne
push
mov
cs
cld
jmp
pop
push
cmpsl
int3
mov
repz
lahf
jl
xchg
or
xor
sub
jg
cld
stc
or
xchg
inc
push
outsl
xorl
mov
or
iret
lahf
aas
dec
xor
xchg
mov
filds
cld
stc
repz
fadds
fwait
jnp
mov
push
mov
ja
fs
push
aas
in
leave
test
push
sub
stc
repz
in
lods
roll
xor
das
jle
lahf
aas
jg
add
push
mov
into
repz
mov
push
mov
imul
das
push
push
lret
pusha
jns
jg
cld
jno
xchg
xchg
inc
popf
mov
sub
out
lahf
out
sub
mov
test
cld
stc
pop
pop
mov
xchg
mov
jmp
mov
sahf
out
lahf
aas
jno
or
out
or
sub
repz
sub
pop
or
rcrb
lcall
jg
outsl
mov
dec
push
push
int
cmp
cld
mov
das
xor
scas
inc
xchg
iret
lahf
aas
jg
jmp
daa
adc
call
outsl
xchg
cld
stc
repz
mov
pop
gs
mov
lahf
aas
jg
push
jge
fistl
pop
repnz
xor
out
in
adc
cmp
mov
jg
cld
ss
pushf
mov
cmp
mov
iret
lahf
inc
mov
or
fs
push
clc
jno
inc
mov
cld
stc
popa
rcrb
cwtl
addr16
stos
or
iret
lahf
aas
mov
mov
cmp
call
push
push
cmp
sbb
inc
iret
lahf
aas
jg
inc
inc
xor
fcoml
or
fnstenv
lods
cld
stc
repz
mov
jo
and
jp
pop
movsl
lahf
aas
jg
inc
pop
cmp
insb
aas
and
push
stc
repz
pusha
adc
sub
fdivrl
iret
lahf
sahf
cld
lods
pushf
cmp
xor
and
stc
repz
std
mov
or
add
dec
inc
inc
call
mov
les
stc
repz
shll
mov
push
dec
xchg
das
sub
lock
out
call
iret
lahf
aas
jmp
push
or
data16
xchg
push
lock
stc
repz
imul
sub
mov
imul
sbb
and
jg
mov
sub
mov
mov
sbb
lahf
cmpsl
or
xchg
sar
loope
repnz
stc
dec
out
cmp
bound
add
iret
lahf
aas
sti
pushf
inc
pop
mov
fidivrl
cld
stc
repz
repz
lock
orb
add
in
iret
lahf
aas
jg
mov
jl
mov
stc
repz
sbb
sbb
pop
sbb
lahf
aas
jg
nop
and
mov
faddp
lea
lods
cmp
stc
repz
and
jae
aam
dec
ret
push
cld
mov
jno
leave
inc
lahf
gs
inc
repz
lahf
jae
imul
js
cld
stc
inc
push
mov
mov
fstpt
iret
lahf
aas
add
ja
jno
mov
mov
cmp
repz
pop
and
xchg
jns
repz
pop
nop
mov
add
adcb
icebp
lods
push
and
cwtl
incl
out
lahf
pop
or
or
shlb
hlt
pusha
icebp
gs
jg
cld
stc
mov
mov
jae
movsl
xchg
push
cmp
add
leave
lahf
aas
sbb
cmp
mov
cld
or
pop
pop
loope
dec
pop
cmp
iret
lahf
sub
pop
cmp
cld
stc
cmpsl
fcoml
lds
andl
dec
ret
shl
inc
jo
jo
wrmsr
mov
lahf
jg
les
lahf
inc
in
fs
repz
jge
pop
arpl
mov
cmp
cld
movsl
mov
xchg
hlt
jnp
rcrb
mov
repz
lahf
aad
sbb
aad
jle
xlat
jg
cld
stc
jne
mov
fdivrs
int3
mov
xchg
jnp
pop
out
or
outsl
fiadds
xor
iret
fldl
mov
iret
int
aaa
fmulp
iret
std
mov
orb
or
mov
sbb
out
jne
adc
jbe
ja
fcoml
xorb
loop
xor
cld
stc
cmp
jo
lods
push
in
shll
lahf
aas
jg
dec
mov
fstpl
sub
adc
repz
dec
js
lahf
lods
ret
jecxz
cld
imul
aas
into
cmp
sub
dec
jg
fldpi
mov
cmpsl
sub
sub
outsl
sbb
sub
std
in
mov
jno
outsb
les
iret
lahf
aas
jle
das
jl
sbb
dec
mov
add
cld
stc
repz
movsb
mov
sbb
mov
lahf
aas
jg
xor
adcb
pop
push
stc
repz
add
inc
leave
mulb
mov
jne
out
testb
sub
out
stc
repz
testl
test
mov
and
cld
pop
test
aam
cltd
cmpsb
stc
cld
stc
push
and
cs
jb
ret
jg
std
inc
or
or
mov
lock
mov
fisttps
in
jecxz
sub
out
lahf
lret
les
dec
je
jp
mov
fbstp
repnz
adc
dec
xor
adc
cld
stc
rep
xchg
leave
dec
jp
dec
out
bound
mov
aas
jg
add
mov
jno
jno
ret
repz
mov
xlat
into
inc
out
fldl
pop
sub
mov
and
in
data16
cld
stc
lret
cli
dec
pop
cmp
or
mov
sub
lahf
aas
sub
cmp
rcll
dec
lret
repz
xlat
inc
dec
jecxz
rol
aam
push
femms
fildll
inc
or
cmp
cmp
fiadds
push
fwait
stos
mov
and
ljmpw
fisubl
or
adc
in
iret
lahf
jg
and
cltd
jmp
addr16
push
sbb
stc
repz
mov
xor
cmp
cs
jle
jnp
aas
add
pop
enter
scas
xor
cmc
xchg
dec
arpl
xchg
xor
jmp
in
lahf
mov
repz
lahf
std
scas
and
nop
mov
cmp
jg
cld
stc
pop
enter
jae
shl
push
jecxz
outsb
or
mov
bound
xchg
hlt
pusha
icebp
gs
out
cld
stc
repz
cmp
inc
push
jnp
insb
mov
jbe
push
pop
outsl
loopne
stc
repz
fs
scas
popf
imul
ss
aas
jg
cld
movsl
cltd
arpl
lcall
jmp
cld
repz
lahf
repz
cmp
xchg
mov
cld
stc
cmp
adc
add
push
adc
and
xor
fwait
aaa
outsl
fdivp
jnp
jle
scas
mov
test
lahf
cltd
jns
out
sbb
inc
jg
mov
adc
dec
sbb
idivb
andl
pop
cli
dec
ret
dec
fsubs
push
mov
or
mov
fists
inc
and
aas
jg
fists
jmp
pusha
aad
stc
repz
setle
addr16
ss
popf
fidivrs
scas
jbe,pt
in
mov
cmp
fwait
aaa
outsl
pop
inc
daa
xchg
int
add
call
mov
repz
xchg
sbb
and
scas
adc
iret
pop
ds
arpl
negl
jg
mov
mov
repz
sub
cmp
sti
iret
lahf
aas
jg
cmp
addr16
and
std
cld
stc
repz
in
addr16
push
xor
shl
insl
outsb
inc
jle
stc
pop
ficompl
mov
jns
iret
pop
bt
adc
in
out
jle
cld
loope
inc
jns
xchg
pop
push
cmp
push
repz
cmpsb
clc
lahf
sbb
dec
sbb
cld
stc
es
inc
mov
nop
ret
daa
mov
iret
lahf
aas
subb
ret
in
js
fwait
aaa
push
popa
out
jle
mov
ljmp
adc
insb
wbinvd
pushf
lcall
mov
outsl
fidivrs
sub
sub
xchg
nop
mov
out
fists
fs
push
push
fisttpl
pop
sbb
int
in
imul
mov
cld
stc
repz
mov
sahf
mulb
addr16
jp
lahf
aas
jg
add
mov
sarb
inc
cld
stc
repz
push
cltd
popf
mov
dec
addr16
scas
xchg
mov
xor
arpl
int3
lahf
and
jno
pusha
dec
stc
repz
shr
aad
icebp
mov
sbb
inc
aas
stc
cld
popf
fwait
cmp
sub
enter
aaa
outsl
fisubrs
inc
jg
int
and
decb
jns
out
popf
adc
cmpsl
sbb
push
ret
nop
and
outsl
fidivrs
xor
mov
daa
adc
je
fistpll
cwtl
adc
lahf
aas
jg
call
leave
pop
rcrl
mov
scas
bound
out
aaa
outsl
ficoms
adc
in
push
pushf
lods
ljmp
jbe
pop
enter
xlat
push
xlat
inc
lcall
aad
or
dec
push
loop
out
fwait
mov
xchg
div
gs
lret
int
mov
sbb
mov
adc
stc
repz
loopne
pusha
pop
jg
gs
leave
lahf
aas
jg
sti
jp
ja
imul
dec
jne
lahf
aas
jmp
loope
mov
xchg
cld
jns
iret
push
aaa
cmp
adc
roll
inc
pop
or
lahf
aas
jg
or
shlb
movsb
in
mov
dec
push
fsubrp
iret
stc
repz
test
xorl
push
lahf
aas
jg
inc
call
dec
cmp
push
repz
sti
push
pop
leave
jl
fmuls
mov
sahf
cld
sbb
sbb
cmp
outsl
fisubrs
outsb
mov
ljmp
inc
lret
cld
addl
jb
adc
scas
out
aas
jg
inc
iret
leave
test
test
shr
popf
cli
jnp
fidivrs
pusha
pop
cmp
sub
outsl
or
popa
fwait
push
outsl
jne
cli
imul
jns
out
sbb
fadds
pop
daa
je
out
fwait
aaa
outsl
and
jmp
or
into
insb
xor
out
iret
push
mov
cwtl
sahf
int
mov
jns
stos
cmc
sub
pop
insb
sbb
daa
and
jle
and
sarl
iret
lahf
aas
jg
xchg
sbb
dec
fidivrs
stc
repz
push
xchg
mov
add
lahf
aas
jg
push
and
and
fcmovnb
stc
repz
xchg
mov
jl
shll
stc
inc
into
aas
jg
cld
repz
sub
ljmp
aaa
lds
xchg
xchg
imul
repz
push
sbb
mov
push
sbb
push
iret
lahf
aas
sbb
cltd
inc
test
loopne
or
cld
stc
repz
inc
inc
js
or
and
push
sarl
lahf
aas
jg
test
and
sbb
iret
popf
push
ss
jno
cmp
adc
iret
lahf
aas
negl
sbb
jno
in
dec
fimull
cld
stc
idivl
movsb
sub
adc
fdivr
in
lahf
aas
mov
fcoms
mov
mov
push
xchg
jb
pop
out
lahf
aas
jg
pop
or
pop
jle
push
dec
sbb
stc
repz
or
test
cmc
lret
xchg
into
lcall
aas
jg
cld
and
loopne
sub
sub
add
lahf
lahf
shl
iret
lahf
aas
jg
sub
adc
sahf
std
repnz
stc
repz
jne
push
ficoml
enter
xchg
add
mov
sub
add
repnz
iret
mov
inc
inc
roll
pop
out
jmp
pop
ja
test
lahf
nop
add
in
scas
cmp
stos
add
add
jg
cmpsb
lds
mov
cld
stc
repz
movsb
push
test
and
jmp
jg
mov
mov
dec
add
dec
sub
test
or
fst
adcl
gs
scas
int
cli
fdivl
out
mov
push
sub
lret
hlt
xchg
mov
cld
stc
aas
mov
pop
mov
imul
cld
mov
clc
pop
out
jnp
or
mov
cmp
mov
push
orb
xchg
cmp
ja
das
mov
mov
add
mov
mov
stc
mov
and
dec
dec
jl
mov
iret
lahf
aas
iret
pop
aas
cmp
cmp
or
movsb
cld
stc
repz
sub
jno
jmp
sbb
addr16
movsb
idivl
js
cmp
cld
stc
repz
fwait
sbb
adc
mov
insb
or
jg
pop
aas
or
cwtl
adc
iret
mov
in
lods
popf
out
mov
sbb
outsl
ficoms
mov
and
int
fdivl
mov
fistl
mov
mov
sub
xor
in
push
stc
repz
insb
jne
into
out
call
gs
lahf
aas
jg
les
mov
rolb
aas
cmp
stc
repz
pop
sahf
xchg
xchg
sar
sahf
adc
mov
cmp
mov
pushf
or
stc
repz
lcall
push
mov
aas
jg
cld
cmpb
jmp
icebp
jo
jo
inc
jbe
stos
jae
loop
lahf
loop
or
std
ret
push
iret
lahf
aas
std
ja
in
jae
out
rclb
pslld
repz
popw
sub
mov
aaa
outsl
ficoms
jle
dec
add
inc
cmp
inc
cld
loope
fwait
jne
and
jg
clc
lret
aas
jg
popa
pop
outsb
roll
addr16
ljmp
adc
cli
cmc
je
stos
int
in
cli
inc
jle
cld
fidivs
xchg
add
pop
bound
push
fdivrl
mov
addr16
mov
insb
jns
out
leave
shl
xchg
push
cmp
xchg
and
outsl
fidivrs
mov
fcompl
data16
in
repz
xchg
lcall
in
mov
push
jg
cld
stc
dec
fucomp
sti
in
arpl
mov
cmp
loopne
iret
lahf
aas
shll
push
xor
sub
pause
mull
fldcw
push
insl
ds
cmp
add
cmpsl
sub
push
gs
inc
popa
aam
call
adc
pop
cmp
movsl
in
ret
jecxz
adc
jno
clc
aaa
mov
push
outsl
jle
cld
fildl
divl
daa
push
insb
clc
ja
leave
pop
dec
xrelease
pop
pop
or
stc
add
cltd
roll
mov
mov
iret
lahf
aas
jg
jae
adc
cmp
loopne
cld
stc
repz
and
mov
mov
inc
ss
push
fmulp
lahf
aas
jg
pop
xchg
sub
sbb
jle
mov
sub
fs
jg
push
mov
dec
jae
xchg
cmp
lods
and
popf
mov
mov
adc
inc
mov
icebp
fisttps
mov
insl
jns
cmpsl
mov
stc
repz
jmp
inc
push
loopne
or
pop
push
inc
cmc
enter
mov
inc
repz
lahf
dec
ds
loope
mov
arpl
pop
fdivrl
cld
stc
repnz
cli
jne
out
cmp
sbb
pop
mov
enter
adc
inc
lahf
aas
jg
insl
fistps
xchg
out
adc
fcoms
push
mov
jg
cld
ficoms
pop
aam
rclb
lret
pop
sub
roll
shll
outsl
fidivrs
fistl
out
fwait
jno
and
sub
xor
outsl
fidivrs
xor
cltd
lret
inc
and
mov
repz
mov
lcall
shlb
cmp
fwait
aaa
outsl
aas
adc
cmp
cmpsl
mov
aaa
popf
scas
cmp
out
cld
jbe
and
xchg
cmpsl
push
fidivrs
sub
mov
push
and
lods
int
aaa
outsl
sbb
int3
ret
mov
repz
pop
movsb
xor
pushf
or
in
dec
repnz
cmp
inc
and
or
sub
shl
inc
rolb
repz
loopne
pop
aas
mov
fdivrs
mov
inc
mov
aas
mov
int
jns
inc
sbb
or
xchg
cmc
jns
out
xchg
push
and
lahf
sub
and
and
mov
std
dec
pop
movsl
negb
xor
cmpsl
ss
aas
jg
cld
and
xchg
mov
and
mov
iret
lahf
repnz
repnz
test
repz
in
push
jg
pop
jnp
pop
lods
push
es
cld
stc
pop
mov
loopne
dec
loopne
aas
stos
movsl
xchg
insl
push
jle
out
lahf
aas
lret
mov
mov
stos
movsb
pop
hlt
cld
stc
repz
insl
xchg
enter
jae
mov
sbb
jg
mov
push
xor
push
push
cld
stc
repz
dec
sub
outsl
js
frstor
jae
rclb
jns
inc
and
jge
lahf
pop
sarl
repnz
movsl
setp
jo
jo
cmp
out
pop
ja
dec
add
push
jle
cld
stc
subb
sub
imul
ror
je
push
cld
mov
jg
mov
or
lahf
aas
jg
lahf
push
imul
cmp
xchg
xor
stc
repz
arpl
add
aam
fcmove
mov
xchg
xor
fcomi
xchg
push
or
add
jns
out
xchg
adc
gs
jne
outsb
jmp
push
in
movsl
xlat
jge
inc
mov
cmp
rep
cli
mov
mov
dec
dec
cmp
and
cwtl
cmpsl
pop
pop
push
andb
xchg
movntq
out
iret
dec
sbb
add
sub
int3
outsl
fidivrs
sbb
repnz
leave
imul
out
fwait
aaa
inc
jle
xchg
mov
and
sub
hlt
xchg
test
cmova
push
and
lods
cltd
mov
push
int
aaa
outsl
and
jno
cmp
sub
or
out
jg
daa
mov
xor
sub
pop
fwait
aaa
outsl
fidivrs
sbb
xchg
mov
repz
cs
out
cmpsl
hlt
cmpsb
sub
or
stc
mov
pop
andb
aaa
outsl
daa
popf
sub
mov
out
inc
mov
fildll
mov
xor
je
fwait
aaa
outsl
fidivrs
call
decb
ljmp
enter
cmp
or
mov
cwtl
out
outsl
imul
out
fwait
aaa
xchg
ror
dec
sbb
push
jno
mov
outsl
lds
js
lock
test
outsl
les
mov
mov
outsl
xchg
xchg
sbb
push
popa
dec
inc
jo
test
aas
jg
lcall
pop
jge
loopne
cld
stc
repz
sub
mov
mov
mov
cmpsl
mov
inc
enter
mov
leave
stc
repz
inc
test
or
push
sbb
jg
cld
sub
sti
std
jb
loopne
scas
cmp
iret
lahf
mov
idivl
dec
inc
jo
jg
cld
stc
pop
ds
mov
lea
ret
stos
cld
stos
daa
jns
pcmpeqd
insl
out
push
push
dec
fwait
sbbb
xor
out
sub
out
push
xchg
fildl
push
or
jb
outsl
fidivrs
cwtd
test
or
xchg
inc
inc
push
xchg
xchg
fwait
mov
outsl
xor
test
fwait
cld
lods
push
mov
pop
sahf
shrl
inc
cmp
int3
mov
pop
mov
int
ja
daa
icebp
cmp
jne
dec
outsb
pop
leave
mov
pop
sub
lcall
cwtl
push
fwait
aaa
outsl
fidivrs
pop
cmpsl
adc
or
ret
adc
outsb
lds
push
outsb
adc
inc
cmp
outsl
fidivrs
inc
cmpsl
rcrl
cmc
xchg
int
pop
cmpsl
jp
mov
hlt
lahf
aas
jg
jp
xlat
mov
movsb
or
repz
sahf
adc
push
and
jge
orl
jo
jb
test
and
ficomps
dec
pop
lahf
cld
jnp
xchg
dec
sahf
and
lds
lret
stos
test
lahf
aas
jg
xor
add
dec
mov
xlat
sbb
repz
pushf
pop
inc
add
mov
nop
decb
mov
ret
pop
mov
sub
add
loopne
cwtl
mov
or
cltd
xchg
xchg
hlt
leave
clc
cmp
aaa
outsl
ficomps
cmp
xor
rorb
lahf
fwait
aaa
out
mov
ja
cwtl
xchg
xchg
stos
and
jns
dec
jns
out
push
loope
icebp
pop
cmp
mov
mov
iret
lahf
aas
cmpsl
pop
jg
out
mov
mov
repnz
test
fsubr
xchg
decb
jg
xor
sub
movsb
aam
das
cld
stc
repz
push
in
dec
cmp
xor
icebp
mov
cmpsl
add
jg
push
xchg
into
fisttpl
mull
sarl
dec
shll
jecxz
sbb
xor
rcrb
pop
bound
sbb
and
outsl
fidivrs
loopne
jae
jmp
xlat
ss
cli
repz
fwait
sbb
push
outsl
fidivrs
shll
jp
inc
lret
fwait
mov
int
aaa
push
jae
lea
dec
cmpsb
cmp
in
push
fidivrs
cwtl
push
and
cmp
int
aaa
outsl
outsl
adc
imul
push
scas
clc
fs
leave
out
lds
hlt
sub
iret
lahf
aas
jmp
es
out
add
insb
rorb
leave
mov
push
stc
repz
cld
sbb
das
cwtl
into
xchg
add
scas
stc
inc
sbb
jne
ds
div
aas
jg
cld
pusha
stc
fldl
xchg
mov
dec
sub
in
iret
lahf
fs
insl
das
sub
and
pop
iret
lahf
jg
push
ja,pn
lods
sub
divl
stc
repz
xlat
hlt
jo
jl
xor
adc
lahf
aas
jg
repz
add
movsl
frstor
add
or
mov
xor
pusha
lods
jl
or
repnz
xchg
pushw
fwait
aaa
outsl
fidivrs
fcompl
sbb
inc
das
push
cld
stc
ror
movsb
movsl
repz
jecxz
push
and
lahf
aas
jg
hlt
mov
sub
dec
add
or
iret
mov
xchg
inc
or
insb
sub
push
or
aas
pushl
sahf
outsb
add
ds
lahf
fcmovu
inc
out
ficomps
sbb
stc
repz
movsb
loop
inc
gs
scas
push
xchg
into
inc
mov
aad
and
jg
lcall
imul
xor
stc
mov
out
out
ljmp
mov
loop
jnp
cmc
out
dec
lahf
inc
int3
nop
adc
sbb
ss
lahf
jg
fiadds
daa
jle
pushl
dec
les
fs
hlt
leave
push
jg
aas
mov
in
testb
repnz
dec
fwait
aaa
outsl
fidivrs
sub
arpl
lea
into
inc
sub
out
adc
push
xchg
sbb
cmpsb
jbe
dec
outsb
int3
xchg
aaa
outsl
fidivrs
adc
push
mov
icebp
addb
inc
and
mov
add
shl
push
out
lahf
aas
test
or
ja
arpl
repnz
xchg
or
fisubrl
jbe
lock
ljmp
leave
cmp
repz
lahf
subps
rorb
mov
and
jns
cld
stc
pop
dec
in
jle
cmpsb
orl
mov
pop
inc
mov
push
dec
fcompl
cmp
in
pushw
jcxz
vprotw
xchg
nop
movsl
xor
mov
xchg
andb
enter
inc
addr16
loop
add
fwait
aaa
lds
pop
xchg
cld
je,pt
mov
repz
sbb
sbb
iret
out
out
sub
xor
outsl
fisubrs
rclb
add
jns
out
jae
arpl
mov
test
outsl
fidivrs
jge
int
or
xchg
out
fwait
push
xor
lods
mov
push
pop
and
mull
jg
sbb
jnp
cmp
mov
mov
ds
aad
cmpsb
dec
cmp
ja
aas
imul
aad
fwait
repnz
xor
addr16
lahf
aas
jg
push
pop
and
fwait
je
and
jbe
popf
aam
je
out
add
add
cld
mov
jmp
dec
cs
inc
pusha
dec
xchg
fs
iret
lahf
aas
cmpsl
outsb
push
or
icebp
aas
jne
loope
cs
cld
stc
rep
adc
sbb
cld
inc
idivl
rcrl
jg
jnp
pop
push
sbb
mov
repnz
lret
push
dec
sbb
dec
pusha
push
loop
je
ljmp
jns
xorl
xor
mov
push
add
fldln2
or
cmp
cmovs
add
dec
pop
xchg
jg
cld
andl
fwait
inc
or
mov
fiaddl
lds
aas
push
lock
push
loop
mov
aaa
roll
cmp
pop
or
hlt
jns
out
idiv
ss
mov
aaa
outsl
fidivrs
fcmovnb
das
mov
into
jbe
out
fwait
mov
xchg
mov
adc
ret
mov
jns
stos
in
call
xor
mov
out
xchg
aaa
arpl
jns
mov
cld
stc
repz
push
or
test
push
mov
orb
adc
in
lods
inc
stos
push
jns
out
daa
inc
cmp
mov
lods
sbb
mov
mov
lahf
xchg
mov
inc
int
int
lahf
ljmp
shll
mov
repz
sub
adc
xchg
lret
mov
jg
std
aas
jge
jnp
jb
inc
xchg
cld
stc
xchg
push
inc
xor
test
or
sti
mov
dec
jns
test
adc
cmpsl
push
and
cmc
xchg
add
jmp
loope
sbb
lahf
aas
xor
mov
or
aam
cld
stc
repz
xchg
imul
pop
loopne
out
and
jg
or
push
mov
push
pusha
and
data16
ret
bnd
sbb
popl
adc
jbe
sti
aaa
adc
or
fstl
outsl
pushf
stos
fwait
repz
fwait
inc
sub
nop
loop
orl
or
outsl
fidivrs
sbb
pop
in
fwait
enter
int
aaa
in
xlat
pop
cmp
mov
xchg
les
fidivrs
pop
data16
push
jno
and
aaa
outsl
and
scas
push
jbe
int
andb
addr16
fs
out
lock
stos
cltd
sub
clc
je
fnstcw
mov
stc
sub
aas
movsb
outsl
fiadds
pop
xchg
lds
cmp
scas
lds
aaa
xlat
cltd
and
fistps
xor
lods
lock
adc
jns
mov
pop
cmp
lods
jmp
outsl
fidivrs
or
cmpsb
jb
cltd
push
xchg
xor
int3
fwait
sbb
lret
inc
pop
in
repz
adc
and
rcll
fidivrs
cmp
xor
cmp
or
stc
test
jb
jns
in
adc
sub
nop
addb
and
test
jge
hlt
outsl
fidivrs
cmp
inc
imul
test
popf
cmp
sub
movsl
aaa
fwait
xchg
int
loop
mov
adc
jns
out
dec
adc
mov
and
or
push
fwait
aaa
outsl
ficoms
test
cmp
es
fnsave
idivb
ret
out
cmc
ss
shlb
jno
fmul
test
fidivrs
pop
mov
cld
mov
aaa
fcoms
andl
lahf
aas
jg
jmp
sti
int
stos
jmp
dec
popa
xlat
pop
dec
insb
stc
repz
scas
dec
ljmp
scas
sti
addr16
cld
fisubs
xchg
pop
js
sbb
mov
add
add
fwait
aaa
outsl
xchg
and
mov
daa
jg
enter
scas
pop
repz
les
imull
movsb
mov
into
insb
fidivrs
dec
or
sub
movsb
stc
xrelease
call
mov
cmp
push
inc
popa
jl
push
xchg
sub
imul
pop
cpuid
aaa
outsl
ficoms
jbe
flds
in
sub
repz
fwait
jg
inc
ret
nop
pop
gs
and
jns
push
jb
mov
add
jae
insb
pop
xor
repnz
imul
mov
dec
xor
or
add
out
or
aaa
sarl
in
rcrb
out
jae
lahf
fidivrs
mov
sub
fxch
push
xor
gs
aaa
outsl
add
out
jno
jle
mov
movsl
sub
sub
int3
xor
xor
mov
ds
lds
mov
js
add
popl
push
jg
cld
imull
and
push
jne
cld
xchg
aam
sub
mov
mov
cmp
mov
lahf
aas
jg
mov
int
adcb
push
pop
test
mov
enter
fidivs
popf
icebp
push
bswap
lahf
aas
jg
jmp
clc
sahf
cmc
mov
push
rorl
leave
inc
xchg
xlat
out
shlb
imul
and
mov
and
cmp
fwait
aaa
outsl
pusha
push
cmpsl
test
sbb
aad
mov
dec
sti
inc
and
lcall
outsb
ficomps
aaa
adc
cmp
outsl
ds
stc
repz
aam
js
dec
out
inc
scas
mov
out
lahf
cmovnp
call
and
sub
and
out
xorb
fidivrs
mov
dec
sbb
popa
repz
fwait
dec
xchg
shl
push
testb
rcr
inc
cmp
ljmp
adc
xor
mov
inc
push
add
mov
enter
bound
int3
pop
out
fidivrs
popa
or
push
mov
fwait
aaa
inc
lahf
aas
loope
push
xorl
mov
and
jae
fs
aad
movl
add
xchg
jg
cld
stc
push
rcll
dec
sub
icebp
test
outsl
mov
out
lahf
aas
shrl
das
pop
cld
and
adc
stc
repz
popf
cwtl
xor
push
ret
lahf
aas
jg
push
into
xchg
cmpsl
testl
mov
andb
cli
out
arpl
inc
or
pop
push
mov
jge
test
aam
lods
jo
cld
stc
repz
mov
pop
mov
add
jmp
mov
gs
or
and
ss
fstl
shrb
add
push
popl
pop
imul
pop
xor
or
pop
and
push
add
out
stc
and
sub
add
call
or
out
out
subl
repz
fwait
ret
inc
mov
sub
mov
ds
testb
mov
stc
jo
mov
sbb
sub
jnp
adc
out
ret
lret
jne
push
pop
xchg
in
fadds
fsub
cli
mov
fwait
js
sub
inc
iret
sub
sti
enter
repnz
sbb
mov
test
aas
jg
cld
cld
testb
xchg
xchg
outsl
jge
rorl
iret
lahf
jl
pop
hlt
lahf
inc
sti
andl
in
popl
inc
fidivrs
cli
jge
cmp
out
fwait
aaa
mov
mov
add
cmp
pop
mov
inc
adc
in
out
adc
xchg
xchg
xchg
in
mov
cmpsb
call
mov
sub
pop
fnstcw
int
test
sub
ret
jle
addr16
lea
dec
jg
cld
stc
addr16
inc
add
das
test
jb
jmp
shl
xor
iret
jg
repz
in
jbe
ja
xor
clc
xchg
and
jg
cld
addb
mov
or
jb
aaa
add
push
xlat
jle
adc
or
or
outsl
inc
mov
mov
das
aas
test
and
outsl
pushf
mov
mov
fwait
int
repnz
inc
mov
push
into
movsl
adc
mov
sub
pextrw
adc
out
andl
dec
mov
xchg
sub
daa
mov
fidivrs
or
jno
sbbl
pop
imul
scas
nop
insb
jno
xor
dec
jo
stos
ss
test
scas
mov
xor
jecxz
pop
push
imul
add
pop
xchg
jg
les
lahf
loope
aas
pop
test
dec
push
add
aas
mov
int
cld
movsb
fbstp
outsl
fidivrs
mov
xchg
pop
push
out
xorb
movsl
pop
notl
scas
cmp
inc
test
add
divb
sahf
jl
pop
xlat
aaa
outsl
fidivrs
imul
dec
cld
imul
jle
iret
fadds
lahf
aas
jg
insl
bound
or
push
cld
jmp
daa
mov
adcb
js
loopne
iret
lahf
aas
jg
push
das
out
sahf
andl
nop
adc
pushf
cld
stc
repz
daa
je
push
out
inc
xor
cmpsl
mov
jg
ja
std
js
pop
rclb
das
incb
ficoms
and
pop
jae
add
into
out
fwait
aaa
inc
ds
orb
jbe
mov
inc
inc
repnz
fisttps
fnstsw
lods
fwait
aaa
outsl
ficoms
mul
mov
mov
jl
jns
out
rcll
pusha
xchg
mov
and
mov
or
or
icebp
rol
sbb
andw
testb
pop
stc
leave
popf
push
cld
stc
repz
aam
push
adc
sub
movsb
and
push
dec
dec
nop
xor
cmpsl
ss
add
outsl
xor
adc
push
xchg
fwait
aaa
aad
pop
bound
xchg
cli
movsb
mov
out
mov
fistpl
jecxz
jbe
ret
dec
cmp
shr
inc
in
sbb
jbe
sub
cld
stc
inc
aas
add
les
mov
add
xor
lret
cld
mov
and
cmpsl
pop
imul
inc
cld
mov
jg
jbe
pusha
stos
push
addr16
jae
xor
mov
gs
pop
sti
leave
adcb
repz
xchg
jb
or
mov
aas
jg
cld
sub
or
xchg
sub
and
loope
out
lahf
push
dec
mov
jne
mov
fstpl
jg
cld
stc
adc
dec
stc
aas
enter
call
mov
out
lahf
aas
or
jg
test
cld
stc
repz
adc
jbe
jo
mov
out
jmp
adc
stc
push
dec
in
pop
pop
adcl
cs
out
adc
sbb
inc
pushf
mov
arpl
fsubrl
roll
pusha
and
enter
xchg
sbb
dec
ds
mov
stc
repz
test
pop
jno
pop
xor
notl
inc
push
push
mov
int3
dec
fimull
divl
lahf
pop
movsl
stc
orl
clc
jns
out
leave
pop
dec
xor
cmp
outsl
fidivrs
pxor
and
inc
rcll
push
gs
stc
testl
ret
out
cli
test
jg
sbb
mov
lcall
push
cmp
outsl
mov
adc
xrelease
insb
out
shlb
inc
adc
mov
addr16
xor
fwait
ja
cmp
lcall
fidivrs
cmp
sub
xchg
xchg
pop
ret
out
sbb
lahf
fldcw
xlat
lret
out
iret
ja
pop
dec
add
sbb
pop
push
or
out
outsl
pop
and
mov
jnp
insb
loope
mov
stc
repz
cmc
dec
hlt
sbb
jbe
inc
or
leave
add
pusha
enter
fidivrs
pushf
inc
mov
push
mov
rolb
adc
adc
lock
stos
leave
enter
popf
inc
lock
pop
in
ljmp
inc
add
cmp
xchg
dec
mov
stc
movsb
xor
mov
dec
rolb
aaa
outsl
fidivs
cmp
dec
and
jns
out
mov
xchg
mov
in
pop
adc
fdivrl
adcb
mov
out
fwait
aaa
leave
sub
in
test
repz
mov
xchg
mov
cmp
aaa
outsl
inc
leave
add
add
icebp
out
iret
mov
pop
fists
jg
aad
js
sbb
in
pop
das
push
ss
iret
lahf
aas
out
outsb
xchg
pop
dec
std
stos
jmp
sbb
stc
xlat
or
or
fidivrs
xchg
or
sub
repz
fwait
push
dec
enter
js
adc
outsb
fidivrs
fs
cmc
sbb
pop
or
cmp
mov
and
jo
into
loope
daa
xor
aaa
outsl
stos
mov
or
mov
adc
cld
stc
rcll
sub
in
imul
jg
inc
shll
pop
and
and
xchg
stos
cmpsb
mov
push
and
iret
lahf
push
mov
mov
hlt
mov
inc
add
mov
pmuludq
rsqrtps
pop
scas
nop
xor
cli
cmp
lret
dec
lret
repnz
fwait
out
xor
pop
std
jmp
rolb
cmp
sti
daa
inc
mov
push
test
iret
or
pop
sarb
push
hlt
add
in
pop
psrlq
scas
aaa
outsl
fidivrs
push
xor
cmc
movsb
repnz
mov
out
fwait
and
push
stos
lcall
or
add
stos
andl
shr
xchg
fwait
aaa
scas
xchg
rcr
mov
and
jns
scas
negl
cmp
or
dec
fidivrs
hlt
dec
inc
xlat
cmpsl
xchg
outsb
lret
repz
insb
push
adc
loopne
mov
cli
bound
out
mov
mov
cmp
cmc
aas
fisttpll
imul
inc
ficoms
mov
stos
pop
repz
fwait
pop
mov
fdivr
out
cmp
cwtl
outsl
fidivrs
in
orps
push
push
push
nop
xchg
lods
hlt
out
fwait
aaa
and
mov
inc
adc
cwtl
adc
or
aaa
push
mov
sbb
es
inc
scas
rclb
mov
mov
mov
hlt
add
pop
adc
repnz
iret
lahf
mov
dec
xchg
mov
cmpsl
sbb
push
movsl
push
jl
hlt
enter
inc
mov
dec
mov
lahf
or
shl
outsb
rorl
xchg
ret
repnz
jne
sti
dec
dec
jg
cld
stc
inc
aaa
mov
adc
ficoml
push
inc
xlat
nop
repz
cli
jecxz
int
xlat
add
cld
stc
push
mov
or
and
or
repz
push
scas
mov
clc
js
outsl
fidivrs
jecxz,pt
mov
adc
sarb
addb
dec
lea
outsb
fidivrs
loopne
xchg
cmpsl
jp
inc
mov
lahf
jg
insb
pop
xchg
cld
xchg
int
mov
mov
daa
push
in
mov
mov
mov
into
movsb
fisubl
lds
faddl
cwtl
inc
pop
jg
shll
xlat
insb
shl
pop
je
je
fsubrl
popf
sbb
jno
inc
fcmove
xchg
mov
iret
loope
xchg
pop
das
sahf
pop
add
lock
aaa
outsl
fdivp
or
scas
lcall
repz
out
fnstsw
push
cmp
add
sarb
mov
xor
out
lahf
aas
fs
adc
push
xchg
add
xchg
insl
and
inc
push
pop
pushf
cmpsl
ror
aaa
outsl
std
sub
vmaxps
cld
stc
repz
adcb
or
pushf
dec
xor
in
mov
jmp
repnz
sub
or
push
shrl
lcall
cmp
rcrl
cmp
mov
ds
push
add
push
lods
aaa
xor
xor
jg
cld
stc
nop
aad
fcoms
push
popa
fcom
in
pop
int
mov
mov
jnp
cmpsb
stc
ja
out
inc
ja
adc
inc
test
rcr
and
std
inc
jae
test
out
lahf
jnp,pt
lock
sbbb
aas
pop
stc
stc
mov
scas
push
andb
dec
push
test
enter
das
dec
jo
ret
int
mov
and
aam
lock
fidivrs
push
dec
loopne
fwait
cmp
pop
dec
or
add
pop
mov
fidivrs
in
out
insb
ja
setbe
int
aaa
outsl
sub
dec
and
xchg
push
inc
dec
call
out
jle
cmc
mov
add
xchg
or
pop
inc
fsubrp
mov
iret
enter
add
push
dec
fiadds
sub
push
fst
sub
int
fwait
aaa
outsl
fidivs
ret
jl
shlb
jecxz
pop
add
jns
out
in
cmpsl
mov
fldt
mov
out
lahf
lock
or
add
ljmp
mov
fwait
aaa
aas
out
mov
rcl
pop
mov
jns
out
leave
xchg
scas
push
push
mov
ficomps
scas
stos
fsub
insb
fidivrs
aad
lret
lret
cld
stc
repz
arpl
jp
mov
cltd
shll
incb
rolb
bound
in
push
xchg
sbb
test
jns
out
punpckhwd
pop
sbb
pop
scas
xor
outsl
fidivrs
stos
nop
mov
sarl
rcll
and
or
jp
cld
out
lahf
aas
repz
and
lods
loopne
inc
cld
stc
repz
jae
xchg
xor
cmp
into
push
lods
pop
sbb
lahf
aas
jg
dec
and
add
lds
adcl
ja
xor
lahf
jg
jecxz
fimuls
inc
jecxz
lds
jecxz
jb
cld
stc
repz
lahf
adc
dec
sbb
sub
aas
jg
xor
lea
adc
mov
xor
leave
xor
in
mov
cmp
mov
xchg
aas
out
pop
es
fistpll
mov
out
fwait
aaa
outsb
mov
aas
dec
std
test
les
in
mov
mov
popa
out
adc
xchg
aaa
outsl
fsubp
sahf
or
mov
outsl
or
fiadds
cmp
repz
fwait
inc
test
pop
adc
scas
pop
xor
cmp
mov
rol
or
push
daa
inc
push
add
pop
mov
xchg
fwait
aaa
mov
hlt
and
mov
int
mov
mov
cmp
out
ljmp
loopne
xchg
add
add
mov
dec
add
push
fldcw
in
repz
int
mov
scas
roll
fidivrs
cmp
bound
mov
out
fwait
aaa
out
mov
std
mov
shll
push
sub
daa
or
sub
xchg
stc
adc
jb
fwait
aaa
outsl
das
sbb
scas
push
pop
jbe
mov
out
aas
mov
mov
mov
pop
mov
jg
in
cld
stc
repz
divb
hlt
push
mov
push
std
loope
ds
ret
stc
repz
sahf
jmp
pop
sti
fstl
cmp
inc
pop
push
jns
cld
out
dec
mov
mov
repz
cmp
mov
inc
pop
xchg
pop
sbb
outsl
fidivrs
dec
push
mov
into
aas
or
in
mov
jecxz
int
aaa
in
xchg
pop
pop
inc
sub
fidivrs
cmp
jge
push
test
sub
int
aaa
outsl
test
or
cwtl
or
dec
cltd
push
xor
stc
jns
out
xor
inc
mov
xchg
inc
popa
aaa
outsl
fidivrs
and
aas
push
sbb
push
sub
out
fwait
mov
in
fisubrs
push
cmpsl
cltd
lahf
aas
sbb
sub
ja
in
cmp
repz
movsb
adc
adc
dec
sbb
mov
push
int3
pop
lret
xchg
cmpsb
sbb
les
and
push
int
xorb
mov
lahf
imul
push
leave
inc
lahf
adc
out
lret
ret
insl
shrl
and
aad
decl
pusha
cmc
mov
cmp
xchg
test
or
addr16
movsb
pop
lahf
cld
cld
push
inc
movsl
out
mov
mov
sub
hlt
in
xchg
lods
ret
rol
lahf
insb
fidivrs
inc
xor
call
jg
fsts
flds
out
lahf
inc
dec
call
add
push
data16
and
icebp
flds
cld
stc
or
mov
cmp
adc
out
sub
lods
jmp
movsl
cmp
sbb
stc
out
adc
movsl
push
mov
testl
in
xchg
out
fmull
dec
push
out
or
sub
stc
repz
cs
repz
outsl
pop
iret
lahf
aas
jg
punpckhwd
and
shl
stc
repz
ds
mov
mov
ds
aas
jg
js
mov
cltd
jno
push
imul
in
xchg
mov
jns
icebp
jmp
bound
mov
dec
inc
and
repz
add
inc
popf
ja
leave
gs
std
mov
pop
cmp
jp
out
cld
mov
movsl
jmp
pushf
sbb
pop
cmp
fwait
aaa
outsl
pop
sahf
xor
jle
jb
cmp
xor
xor
pusha
hlt
loopne
aaa
outsl
fidivrs
lods
aad
pop
rcll
sub
sbb
xchg
int
insl
mov
xchg
ficoms
stc
cs
mov
dec
ds
pushf
sub
int
aaa
outsl
bound
cmp
xchg
daa
mov
repz
int
lds
xchg
stc
loopne
aaa
outsl
fidivrs
jae
xchg
sbb
dec
cmp
mov
ds
iret
fists
aaa
outsl
fidivrs
pop
int3
mov
ret
repz
fwait
outsl
cld
adc
and
in
jg
jge
mov
sub
aaa
jb
icebp
xchg
mov
mov
dec
cld
stos
push
and
jg
loopne
mov
shll
push
xchg
inc
testb
test
repz
jp
enter
aaa
loopne
movsl
pop
fs
xor
jg
cld
mov
mov
adc
sti
mov
out
lahf
pop
stc
arpl
mov
cld
stc
mov
and
or
push
xchg
das
or
icebp
out
lahf
aas
gs
shll
xchg
movsb
mov
cmp
inc
das
xchg
ds
movsb
movsb
fwait
aaa
outsl
fdivp
outsb
xchg
ja
inc
push
cli
push
rorl
dec
cmc
enter
sbb
push
mov
imul
in
popa
out
mov
mov
fidivs
ja
int
mov
cmpsb
jae
out
mov
jg
cld
stc
mov
adc
mov
xor
in
mov
iret
lahf
aas
and
or
icebp
mov
repz
inc
sbb
mov
push
sub
repnz
out
dec
ret
stos
mulps
aam
aas
jg
cld
mov
mov
push
sub
iret
lahf
aad
insl
dec
std
xor
iret
push
imul
cmp
sub
xorl
das
or
insl
js
jo
dec
mov
jno
clc
cmpsb
loop
mov
or
loop
fidivrs
xchg
fs
andl
int
aaa
outsl
sti
cmp
sub
scas
push
mov
test
out
cltd
std
pop
mov
enter
mov
enter
add
stos
and
jno
repz
cli
or
lods
dec
push
xor
sub
lcall
add
jle
arpl
jg
aad
mov
push
pop
imul
sets
repz
lahf
xchg
xchg
ftst
add
into
mov
mov
cmp
cld
stc
pop
pop
mov
idivl
mov
iret
lahf
aas
insb
push
out
lea
mov
stc
repz
in
push
push
jno
mov
or
xchg
out
cli
inc
lea
inc
xlat
xorb
cld
stc
repz
call
push
jae
loop
mov
daa
jg
shl
fisttpll
das
xchg
pop
and
stc
repz
mov
mov
gs
push
sub
aas
jg
cld
push
jb
dec
mov
clc
jne
stos
nop
in
iret
lahf
iret
cmpb
enter
pop
mov
pop
sahf
sub
inc
cmp
and
cmovb
popa
jmp
fwait
cli
sti
or
lods
clc
pop
xor
test
cmpl
pop
outsl
fidivrs
mov
outsb
jl
int
aaa
jns
inc
mov
cmc
inc
mov
rep
adc
jno
pop
cwtl
mov
and
gs
push
dec
aaa
fwait
mov
sub
and
add
adc
int
aaa
outsl
popf
mov
adc
testl
js
repz
mov
mov
aas
lcall
sub
push
stos
inc
push
or
sbb
cmp
lahf
rclb
es
xchg
fnstcw
mov
out
stos
loope
ficoms
daa
or
mov
cmp
int
aaa
mov
gs
mov
or
repnz
mov
outsl
fdivrp
jle
mov
lcall
loop
fwait
aas
mov
xchg
pop
adc
out
stos
enter
cmp
ss
jle
dec
jge
outsl
fidivrs
sbb
jnp
pop
insl
mov
mov
and
xor
sbb
out
jge
in
adc
jns
out
outsl
nop
movsb
sub
fwait
test
scas
fwait
aaa
outsl
ficoms
mov
jge
mull
out
mov
addr16
and
fwait
push
in
pushl
outsl
fidivrs
adc
mov
out
xchg
fwait
sbb
adc
lahf
adc
adc
mov
pop
outsl
fidivrs
popf
cli
clc
or
inc
dec
mov
out
fwait
aaa
jge
push
mov
andl
mov
sahf
inc
dec
fwait
aaa
outsl
fiadds
cmp
mov
iret
out
rcrb
jns
out
sub
stc
sti
clc
or
insl
enter
push
sbb
mov
aad
out
enter
popa
lods
pop
sahf
pushf
lret
rcr
cld
stc
repz
fs
inc
lret
out
pop
mov
jg
push
mov
jecxz
xchg
or
js
ljmp
push
jg
movsb
jns
movntq
adc
xor
mov
sahf
and
stos
sub
ds
and
and
add
out
xor
gs
movsb
shrb
outsl
rcrl
lahf
mov
sbb
inc
xor
mov
cmpl
fs
pushl
enter
call
in
out
jl
cmpsb
mov
out
lahf
pushf
mov
movd
xchg
lea
cld
stc
inc
testb
xlat
mov
sbb
repz
shlb
rol
mov
out
fbstp
jg
xchg
rcrb
cmp
mov
jae
movsl
xchg
push
repz
lahf
mov
sti
mul
test
adc
cld
stc
xor
shll
cs
mov
jns
mov
jnp
cmp
scas
pushf
sub
jno
push
push
sbb
sbb
jne
pop
jne
jns
out
jno
mov
jo
jecxz
lahf
xchg
outsl
fidivrs
mov
xchg
int3
repz
in
aaa
shlb
xor
daa
test
jns
out
test
xlat
push
mov
pop
inc
inc
outsb
fidivrs
int3
pop
outsl
pusha
sub
jge,pn
mov
push
xlat
xor
mov
sbbb
test
loop
cmpsb
xchg
pop
iret
mov
sbb
pop
daa
ja,pt
clc
add
out
adc
dec
fbstp
jmp
aas
jg
mov
in
xor
cld
stc
xlat
pop
aas
push
in
shll
xchg
test
aas
jg
pop
or
or
sbb
pop
outsb
in
pop
push
loope
inc
int
cmp
enter
js
sbb
push
fsubrl
gs
lahf
aas
xor
mov
cld
stc
repz
jmp
xchg
and
jl
mov
aas
jg
xor
xchg
jb
cmc
sbb
pop
push
adc
stc
cs
dec
add
mov
call
push
adc
pop
push
scas
pop
shll
pop
xchg
lahf
aas
jg
dec
das
sub
outsb
pop
fidivrs
repz
call
adc
out
push
int
fs
jg
cld
mov
mov
inc
pop
lret
adc
lahf
in
and
xchg
cmc
cmpsb
xchg
inc
jecxz
ja
repnz
add
imul
fwait
popf
or
test
inc
and
daa
enter
and
das
iret
sub
or
xchg
lahf
aas
jg
add
imul
push
mov
jle
outsl
fidivrs
mov
mov
repz
fwait
and
pop
outsl
daa
or
mov
out
lea
pop
sahf
fdivrl
shr
inc
int
fmuls
iret
pop
out
sbb
scas
and
push
sbb
push
push
es
mov
int
inc
aad
or
xchg
lret
jmp
xchg
fwait
aaa
outsl
fisubs
jmp
sbb
sti
leave
jg
rclb
mov
out
out
lahf
aas
mov
nop
mov
shl
stos
cltd
adc
cld
stc
repz
fisttpll
clc
rcl
inc
insl
imul
jg
cld
inc
push
xchg
sbb
push
stc
stc
repz
dec
test
popa
dec
in
fucomip
push
push
push
aaa
adc
stc
sahf
repz
fwait
mov
ljmp
cli
outsl
sbb
mov
and
or
xor
out
fwait
aaa
add
pop
call
fidivrs
fsubrl
imul
lea
jns
xchg
in
stos
enter
icebp
or
pop
icebp
xchg
sbb
clc
stos
hlt
fistpll
sbbl
or
mov
dec
fsubr
les
cmp
fucomi
mov
push
inc
cmpb
mov
sub
pop
adcb
orl
mov
aaa
outsl
sub
push
lods
out
ljmp
xchg
int
stos
pop
js
js
rorb
dec
push
add
out
ja
in
js
mov
cmp
mov
jg
cld
cwtl
mov
add
jp
push
xor
push
repnz
lahf
shrb
xchg
cltd
or
xor
cmp
stc
stc
out
mov
insl
pop
enter
mov
int3
ss
fidivrs
or
mov
fiaddl
mov
xchg
fwait
aaa
in
mov
orl
lahf
aas
jg
movl
pop
jmp
out
stos
sub
mov
sub
adc
jp
fwait
aaa
shll
adcl
and
sub
enter
ds
daa
sbb
faddl
mov
sub
sbb
push
aam
sahf
fdivrl
jne
ljmp
add
inc
ret
cmpsb
sub
jns
out
dec
fistl
add
iret
dec
push
addr16
ds
cmp
mov
mov
enter
cld
stc
repz
in
mov
mov
cmp
add
jno
lahf
aas
jg
std
pop
cmp
or
push
insl
xchg
iret
xchg
outsl
outsl
ficoms
je
xchg
jge
push
imul
daa
fwait
aaa
std
call
lahf
loop
rorb
lea
and
movsl
pop
stc
stc
mov
cmp
mov
fisubrl
mov
das
add
lahf
aas
jg
out
or
cmpsb
xor
call
in
hlt
leave
das
outsb
xchg
decl
pushl
out
add
jns
add
imull
lods
hlt
leave
clc
dec
sbb
neg
rorl
iret
stc
aaa
pop
adc
xlat
aas
jg
cld
mov
sbb
lock
dec
mov
lret
pop
lds
xchg
pusha
mov
cmpsl
inc
js
rcl
data16
mov
aas
jg
lds
or
imul
shll
repz
lahf
and
xchg
push
js
xchg
cld
stc
test
rorl
push
push
xchg
dec
fdivrl
nop
lahf
aas
sbb
dec
cwtl
and
jg
mov
aas
pop
push
xchg
fdivrs
push
mov
push
push
js
fs
fs
test
dec
rolb
push
dec
inc
fldt
mov
push
data16
ja
xchg
jl
cmp
and
addr16
pop
gs
repz
rol
jbe
dec
bound
adc
sub
call
fs
fs
xchg
inc
mov
xchg
lahf
inc
xor
mov
cmp
prefetcht0
inc
push
xchg
pop
adc
pop
orb
ficoms
dec
jae
negl
pop
dec
adc
jmp
cld
cmp
daa
aad
aad
popa
mov
jae
and
out
lahf
aas
lods
cmp
push
dec
mov
cld
stc
repz
and
pop
test
dec
sbb
cmp
lahf
aas
jg
sub
inc
inc
mov
cld
stc
repz
std
inc
or
je
dec
dec
addl
jmp
push
nop
imul
xchg
inc
cmpsl
stc
inc
iret
std
jns
out
or
adcl
pop
dec
imul
pop
mov
and
mov
or
xor
stos
cmc
xchg
int
js
rol
push
push
mov
jg
dec
lods
test
mov
jns
sub
repz
je
sub
bound
jmp
cld
in
xorl
mov
repz
lahf
fldz
repnz
rclb
jp
je
ret
inc
xor
dec
jo
inc
call
daa
outsb
decl
mov
mov
hlt
js
repz
jge
imul
mov
inc
jbe
ss
repz
vmaxsd
stc
pushf
adc
fstp
clc
stc
inc
xchg
test
test
dec
mov
leave
xlat
inc
jmp
push
test
mov
aam
lahf
aas
jg
sub
xchg
cs
cmp
out
andl
push
lods
mov
adc
lcall
fwait
aaa
outsl
fisubs
sbb
mov
adc
sbb
das
cmp
enter
loopne
inc
pop
cli
cld
das
orl
ret
push
mov
adc
fcoml
pop
lret
jne
xchg
mov
xchg
outsl
inc
int
aaa
outsl
fwait
push
lcall
cli
sarb
sbb
ss
xlat
fsubr
clc
sbb
mov
repz
leave
cltd
mov
xor
int
or
and
mov
fs
cmp
rcr
fucomp
jne
inc
inc
call
or
pop
je
mov
loope
push
out
outsl
cmp
int3
cltd
js
add
mov
xor
les
lods
pop
orl
popa
fmulp
mov
jne
xchg
iret
lahf
xchg
ljmp
data16
pop
push
xor
in
filds
out
addr16
xchg
mov
and
jle
aas
jg
cld
and
xchg
mov
mov
jge
add
lahf
cmp
sub
lods
lds
adc
adcl
repz
lahf
scas
sub
test
add
out
push
sub
cld
stc
pop
fdiv
hlt
out
shrb
inc
es
xor
es
divl
fwait
aaa
outsl
inc
cltd
dec
jne
lret
inc
or
sahf
aas
jne
mov
outsl
adcl
daa
pop
ljmp
aas
jg
shll
neg
add
std
arpl
sbb
out
cmpsb
push
stc
repz
pop
out
or
adc
xor
jg
cld
or
adc
or
outsb
mov
repz
lahf
sahf
psraw
jp
pushf
xor
pop
in
lahf
mov
inc
sbb
fldl
lods
out
fwait
aaa
aaa
push
mov
jg
sti
xchg
fidivrs
inc
out
pop
or
push
dec
test
int
aaa
outsl
sub
or
mov
push
xchg
mov
jns
out
cmp
rcrb
jae
sahf
dec
outsb
xchg
aaa
outsl
fiadds
stos
loopne
mov
and
mov
pop
testb
push
clc
mulb
jp
dec
in
jg
jge
and
pushf
mov
clc
dec
pop
je
out
inc
fldcw
dec
rcrb
mov
cmp
ljmp
add
fdivrs
int
aaa
outsl
mov
jnp
xchg
cltd
loope
mov
mov
nop
pop
testl
sbb
outsl
fidivrs
cwtl
ds
popf
pop
mov
jno
jns
out
push
push
cmp
sub
outsl
fidivrs
xchg
aas
fcomps
mov
arpl
repz
fwait
rol
cmp
xchg
sub
loopne
xchg
cld
in
fidivrs
fldt
sub
stos
aaa
sbb
fwait
aaa
jecxz
lea
movsl
xor
aaa
repz
pop
sbb
repz
and
adc
into
inc
cwtl
ret
cld
stc
repz
inc
ja
cmc
lret
add
ficoms
adc
xchg
into
cmpsb
sbb
jbe
xor
fwait
aaa
outsl
les
push
push
repnz
push
dec
add
into
jnp
hlt
jle
xchg
inc
sub
push
inc
xlat
inc
push
in
dec
jg
pop
inc
sar
inc
decl
addr16
fildl
add
and
mov
mov
hlt
or
bswap
lods
in
pop
lods
cltd
inc
outsb
adc
mov
fwait
ja
das
icebp
scas
lods
bound
mov
xchg
jp
sub
fnstenv
int
sub
mov
shlb
test
mov
lods
sub
fwait
aaa
outsl
faddp
lds
dec
or
adc
mov
andb
dec
test
in
lahf
mov
xor
pop
cmpsl
leave
out
out
lds
mov
in
mov
adc
jmp
lods
push
jg
xchg
outsl
or
lret
pop
sarb
and
repz
scas
push
scas
push
jg
mov
and
in
repz
lahf
ret
lds
push
add
and
stos
and
push
fcompl
outsb
fiadds
mov
ljmp
shll
dec
mov
push
mov
ja
pop
sub
pop
out
and
fisttps
imul
cmp
or
push
jnp
stos
mov
shlb
scas
leave
push
out
pop
cmpsb
mov
leave
scas
inc
xor
adc
inc
fwait
mov
and
mov
and
lods
mov
xlat
mov
adc
out
ja
sbb
xchg
fwait
aaa
mov
pop
pop
inc
sti
out
add
je
aam
mov
mov
daa
aas
xor
xchg
xchg
scas
test
sub
adc
out
jno
pusha
mov
fcoml
loop
js
sub
repnz
aaa
push
xor
out
sbb
inc
xlat
xchg
dec
adc
push
in
js
pop
and
and
mov
les
sti
mov
js
out
inc
iret
push
add
or
int
aaa
outsl
arpl
xor
rorl
mov
cli
dec
jl
ret
dec
orl
or
mov
outsl
lcall
lods
cmpb
aad
aad
mov
int3
mov
cmp
xor
loopne
pop
ja
scas
int
aaa
outsl
popf
lods
lds
jnp
aas
into
cmpb
cmp
call
dec
add
lahf
jl
outsl
fiadds
idivb
dec
decl
cmp
inc
ss
push
imulb
xchg
mov
fdivrl
pushf
push
pop
out
fcoml
fwait
sub
inc
cmp
sub
rep
or
cs
jb
dec
dec
int
aaa
out
fistps
or
inc
push
out
add
bnd
jb
out
mov
jg
rcl
movsl
mov
mov
pushf
lds
cld
and
cld
sbb
xor
sub
xchg
fwait
ja
mov
jp
push
shlb
xchg
les
arpl
mov
aaa
out
stos
sbb
mov
std
add
rcll
xchg
int
and
out
adc
pushf
faddl
inc
jns
jb
out
fwait
mov
sub
insl
xor
or
xchg
mov
dec
mov
or
adc
movups
cmpsb
xlat
in
mov
jp
cmp
lahf
aas
jg
xchg
xchg
pushf
jno
dec
xchg
aad
test
mov
stc
repz
push
push
pop
sbb
std
daa
inc
scas
dec
sbb
mov
cmpsb
std
scas
sbb
jg
mov
or
fcmovnb
add
out
inc
push
jl
enter
lds
mov
icebp
and
pop
inc
and
fistl
mov
dec
sub
xchg
fnstcw
rcll
mov
fidivrs
loop
aaa
inc
inc
ret
lods
aam
pop
mov
pop
lea
jmp
aas
jg
cld
jmp
mov
mov
stos
mov
repz
lahf
nop
dec
ficoml
xor
xchg
xchg
xchg
cmpb
stc
mov
mov
jg
adc
fwait
aaa
out
out
ja,pt
pop
jp
test
dec
mov
in
test
sub
inc
stos
lret
dec
xchg
fidivs
or
stc
cld
stc
repz
jne
cli
jae
repz
movsb
repz
aas
and
jb
xor
mov
bound
pop
sbbb
stc
cs
sbb
out
cmp
stc
xlat
pusha
pop
xchg
out
mov
push
or
lahf
aas
jg
pusha
mov
hlt
pop
pushf
and
out
push
mov
adc
xchg
mov
ja
xchg
imul
adc
mov
pushf
popl
push
int
jne
or
or
inc
or
sahf
fdivrl
scas
push
loope
leave
clc
in
scas
loopne
rorb
loope
sub
aas
mov
inc
xchg
ret
xchg
repnz
repz
and
cld
roll
out
mov
int
mov
dec
outsl
mov
js
mov
pop
xor
gs
cltd
inc
xor
mov
inc
lahf
xor
cwtl
fsubr
xlat
adc
shlb
icebp
repnz
loope
xchg
cmp
out
and
xchg
jne
ljmp
xlat
push
add
adcb
hlt
popa
out
fwait
aaa
and
jns
in
mov
mov
jns
xlat
cmc
test
lock
lock
pop
mov
int
aaa
outsl
xchg
lahf
mov
lahf
jmp
and
adc
stc
ja
dec
jne
fstp
addr16
cld
fwait
mov
aas
jg
mov
clc
sbb
sbbl
enter
xchg
and
pusha
xchg
bound
stos
std
and
aad
dec
mov
xor
mov
add
sub
sbb
cli
je
aad
push
aas
mov
aaa
outsl
fimuls
adc
sub
bound
lcall
cmp
aad
lock
adc
inc
fidivrs
jmp
sbb
outsl
fiadds
jg
stos
clc
sbb
lcall
mov
ret
fwait
jg
jp
ljmp
aad
sbb
xor
sti
loopne
sbb
mov
adc
pushf
ret
cmpsl
je
and
imull
int
aaa
add
insl
mov
out
jns
hlt
xchg
push
out
or
mov
outsb
cmp
inc
fidivrs
das
aam
gs
daa
out
aam
enter
into
jle
xor
lahf
aas
jg
cld
out
mov
sub
push
arpl
stc
repz
iret
jb
and
lcall
jno
dec
pop
sbb
pop
ficoms
dec
imul
aam
filds
or
xchg
aaa
pop
xchg
fwait
out
lock
cmpsb
inc
minps
dec
xor
push
mov
dec
dec
inc
cmpsl
enter
cmp
hlt
test
ror
jmp
or
stos
stc
repz
out
popf
mov
add
xchg
xchg
or
mov
xchg
mov
sub
mov
mov
sbb
out
shlb
adcl
jl
rep
inc
dec
mov
dec
test
fidivrs
rcrb
mov
scas
popa
dec
aaa
out
fwait
aaa
pushf
nop
pusha
push
adc
data16
mov
jns
xchg
adc
jge
jo
lods
jae
int
mov
imul
out
aas
out
xor
shr
cmpsb
jg
iret
scas
fdivrl
xchg
call
add
dec
pop
rcpps
mov
mov
jae
fld
dec
pop
scas
sub
movsb
ret
ds
mov
ds
insb
cld
cld
jmp
hlt
jecxz
and
fidivrs
les
mov
fwait
aaa
outsl
xchg
sub
test
fsubrp
aad
pop
add
mov
imul
xchg
in
push
and
ja
inc
fimuls
xlat
fmull
sahf
xlat
in
int
xchg
andb
mov
popf
pop
iret
lahf
aas
lock
mov
jmp
out
pop
xchg
push
mov
lahf
jg
xchg
fs
ffree
fisttps
daa
mov
or
mov
dec
cmp
lahf
aas
jg
dec
push
or
lahf
test
call
mov
out
in
inc
sub
xchg
sub
fwait
aaa
inc
orl
mov
fs
inc
daa
fiadds
outsl
mov
jge
aam
ret
iret
test
imul
int
dec
xchg
mov
push
pop
adc
adc
outsl
fidivrs
lds
sub
int
add
lods
inc
pop
das
adc
arpl
sub
cmp
shrb
dec
fwait
aaa
outsl
fidivrs
push
mov
inc
mov
push
sbb
out
mov
mov
sbb
sbb
lods
adc
mov
fwait
aaa
outsl
ficoms
adc
aad
sub
das
in
int
mov
jnp
cs
xor
leave
leave
fwait
aaa
inc
scas
sbb
xchg
lahf
cld
roll
lret
aad
stc
repz
xor
icebp
sub
xor
dec
fcomip
testl
jecxz
push
aas
jg
sarl
mov
pop
pop
fbld
cmp
out
lahf
push
subl
or
jg
jae
loope
and
enter
ret
scas
pop
adc
repz
pop
inc
clc
test
sbb
popf
mov
jmp
pusha
ljmp
lock
inc
ljmp
push
insl
jns
out
loop
pop
push
loope
xlat
rcrl
mov
data16
push
push
and
mov
mov
clc
mov
mov
ja
fwait
aaa
outsl
fiadds
loope
into
lods
stos
jb
pop
outsl
mov
repz
mov
popa
out
fcoml
cmp
mov
ds
pop
cmp
cld
sbb
xchg
divl
pop
int
xor
hlt
repnz
mov
mov
inc
das
lcall
cmpsb
xor
jge
jb
or
lahf
inc
push
xor
push
jl
aaa
outsl
fidivrs
enter
insl
out
cmp
enter
pop
mov
fidivl
adc
mov
repnz
xchg
pop
sub
push
iret
jp
xchg
add
rcr
push
xchg
aaa
xor
out
fwait
pop
xor
rol
jb
cmpsb
out
shrl
mov
pop
inc
es
inc
iret
fmuls
lahf
cld
push
inc
xlat
aam
in
sbb
je
fimuls
xchg
repz
cmpsl
xchg
pop
dec
fsts
and
je
dec
gs
inc
jmp
push
mov
fcmovne
lahf
outsb
pop
jns
out
pop
sub
inc
pop
imul
pop
adc
movsb
lods
xchg
test
pop
fidivrs
call
mov
js
xchg
int
aaa
outsl
repnz
shlb
imul
mov
mov
imul
mov
repnz
push
cs
aaa
outsl
ficoms
into
popf
mov
incb
repz
jno
xchg
inc
pushf
std
mov
or
cmp
addr16
xor
stos
and
outsl
fidivrs
lock
leave
hlt
xchg
loope
dec
into
pop
jno
int
icebp
mov
rcll
imul
inc
inc
mov
mov
jno
sti
aad
aam
ja
in
fbld
scas
add
fstps
sub
imul
in
jns
pop
into
insb
out
mov
mov
mov
stos
mov
adc
rep
jp
adc
mov
mov
mov
aad
outsl
xor
push
fidivrs
push
sbb
sbb
ljmp
and
dec
ret
dec
cmp
inc
mov
mov
stc
in
jb
mov
test
mov
fwait
adc
lock
xchg
mov
out
test
out
int
sbb
mov
int3
fwait
aaa
inc
daa
adc
adc
inc
and
ljmp
fidivrl
or
rol
iret
mov
cli
leave
out
dec
pushl
enter
sbb
mov
jns
push
mov
dec
stos
mov
rcr
pop
std
inc
mov
cwtl
jg
xchg
out
push
inc
mov
jns
pusha
jns
push
push
add
adcl
loope
aaa
outsl
fidivrs
adc
inc
sub
imul
int
fnsave
add
lods
push
repz
mov
jge
mov
mov
repz
jo
cmpl
lret
jnp
push
ja
push
fwait
aaa
outsl
fisubrs
enter
scas
icebp
stos
jnp
jae
cmpl
int
pop
ret
sub
xchg
and
lods
std
sahf
push
aaa
outsl
fidivrs
loope
decl
lret
jge
repz
fwait
inc
pusha
orl
pusha
lret
mov
xor
loope
dec
mov
aas
mov
in
sbb
iret
cmpsl
jns
rcll
jns
out
aad
mov
xchg
nop
int
sub
fwait
aaa
outsl
fimuls
cmp
adc
stc
mov
dec
dec
cmp
out
mov
and
hlt
mov
or
fidivrs
cmp
xlat
dec
mov
jmp
cmp
nop
aad
ds
pop
out
jg
cld
loop
and
orb
scas
jl
in
iret
lahf
out
xor
jecxz
psllq
dec
das
adc
pusha
mov
nop
std
fwait
and
mov
cld
stc
repz
dec
mov
sbb
rcll
push
pop
imul
adc
loop
fwait
inc
or
aaa
scas
cmpsl
aas
push
fdivrp
stc
repz
je
jl
ret
adc
loope
dec
add
inc
rcr
and
int
ja
enter
sub
mov
fidivrs
jle
out
je
xchg
push
dec
stos
lret
enter
mov
mov
pop
mov
cmp
aas
jg
adc
cld
pop
enter
bound
push
in
out
xor
dec
sub
ss
iret
iret
mov
xchg
cld
adc
lds
test
outsl
fidivrs
push
mov
jo
jg
fcomps
xorb
shl
iret
lahf
imul
jg
jo
in
loope
stc
stc
ret
pop
imul
aas
jg
cld
sub
testb
cli
push
push
leave
out
lahf
cmp
addr16
call
iret
lahf
clc
xor
lret
sbb
sub
adc
repnz
cld
push
sahf
or
push
pop
scas
mov
fcom
hlt
stos
and
aas
ljmp
insl
mul
add
out
lahf
mov
inc
add
sbb
mov
mov
mul
pop
int
in
jge
xchg
aam
fwait
aaa
outsl
or
cmp
iret
pop
sub
insl
mov
pop
and
lods
sbb
in
shl
mov
out
nop
je
push
mov
push
fidivrl
repnz
push
mov
mov
data16
ljmp
xchg
xchg
repz
fwait
iret
cmp
out
loopne
bnd
cmp
dec
in
jp
mov
jne
cmpl
repz
xchg
sbb
out
je
dec
jb
clc
test
cmp
xchg
sahf
or
dec
sub
sub
sub
cmp
pop
and
insl
out
add
sub
adc
ret
movsb
shrb
outsl
jbe
ja
in
fstl
inc
outsl
out
mov
or
out
mov
sbbb
add
pushf
xchg
icebp
xor
jl
test
pop
es
call
test
outsb
fwait
ja
mov
inc
testb
enter
xlat
mov
sbb
push
pop
lds
cmp
out
shlb
adc
pop
out
aas
into
dec
in
out
fwait
xchg
or
cmp
mov
aam
or
add
test
jb
out
push
adc
push
push
mov
inc
mov
iret
lahf
jg
cmp
scas
pushf
sub
jno
push
push
jne
out
mov
jne
into
repz
mov
xorl
fdivrp
insb
fidivrs
es
shll
int3
int
orb
xor
test
out
ds
test
xlat
push
mov
and
outsl
ficoms
inc
xor
pop
outsl
pusha
sbb
jns
rcll
sub
ss
fidivrs
dec
loop
in
roll
sub
aaa
daa
ds
clc
add
ds
jg
orl
jne
dec
jmp
out
lahf
mov
in
xor
arpl
in
jg
cld
stc
shll
xchg
test
or
or
iret
lahf
aas
inc
sbb
pop
outsb
in
inc
int
fwait
ja
lock
movsl
cwtl
movsl
push
xor
sbb
int
push
fsubrl
ss
out
mov
fwait
jmp
lcall
jl
mov
push
shll
iret
add
cmpsb
pusha
add
add
nop
pop
daa
mov
add
add
mov
in
jae
mov
push
int
aaa
outsl
dec
xchg
das
sub
outsb
pop
fidivrs
sbb
call
adc
out
push
aaa
add
fs
ret
mov
inc
jns
out
pop
lret
adc
cmp
add
notb
popa
add
int
aaa
outsl
add
push
pop
sbbb
and
les
jae
iret
push
mov
cmp
js
mov
jno
add
imul
outsl
xor
sub
sbb
int
or
mov
and
inc
inc
and
dec
mov
aaa
mov
lea
add
mov
repz
fwait
in
inc
int
fmuls
dec
sbb
outsl
fidivrs
jb
popa
push
sbb
push
jo
and
aad
or
lods
mov
inc
jge
mov
mov
aaa
outsl
fidivs
mov
sti
leave
pop
ds
dec
jg
jb
out
push
mov
out
mov
nop
mov
sub
and
xchg
repz
jp
fisttpll
rcl
movl
mov
cld
inc
push
xchg
sbb
push
fistpll
pop
push
dec
test
popa
dec
in
filds
cmp
out
push
push
push
cli
cld
push
stc
lahf
aaa
outsl
fidivrs
std
and
fstl
jecxz
cld
mov
or
imul
cmpsl
iret
lahf
aas
jg
and
pop
pop
call
stc
repz
adc
dec
fsubrl
imul
lahf
aas
lcall
xchg
in
stos
enter
icebp
mov
sbb
clc
outsl
stos
hlt
jb
out
jg
sbbl
and
fsubr
fnstcw
jmp
jmp
push
inc
xor
loope
jmp
out
fwait
aaa
pop
orb
or
in
hlt
xchg
mov
mov
mov
jp
push
lods
mov
cmp
stos
pop
js
and
outsl
push
js
shlb
adc
xchg
xlat
in
data16
in
int
aaa
outsl
js
mov
cmp
mov
mov
inc
xor
out
cmp
sbb
sahf
aaa
push
lahf
mov
xor
stc
repz
out
mov
or
out
push
or
das
fldcw
jns
ss
sub
cmp
jg
mov
mov
mov
add
lods
xchg
testb
mov
mov
out
mov
push
lock
aaa
outsl
fidivrs
mov
jg
lock
lds
stc
jmp
and
xchg
clc
push
pop
xchg
aam
in
or
add
mov
add
inc
push
inc
xchg
xchg
cmpsb
sbb
shrl
or
mov
sbb
insl
mov
push
shlb
shrl
es
cwtl
pop
out
stos
sahf
faddl
fistpll
and
dec
jnp
add
lds
int
sqrtps
pop
cmp
cld
dec
int
dec
add
adc
mov
iret
inc
aaa
outsl
ficoms
jne
sbb
cmp
sub
fwait
ret
jbe
adc
aaa
jl
fidivrs
fmull
push
fxch
pop
aas
jge
pop
ja
sub
sub
popf
cld
repnz
lahf
mov
or
scas
and
mov
js
xchg
hlt
aam
dec
call
decl
adc
adc
fwait
aaa
out
push
adc
xlat
bound
mov
stc
repz
leave
out
gs
xor
or
cld
aam
push
mov
ljmp
or
jge
ljmp
mov
pop
stos
lods
daa
daa
mov
and
or
fcmovu
push
bound
fldenv
outsl
ficoms
in
xchg
aaa
mov
cmpsb
cmc
push
jno
int
lods
iret
gs
ror
fildl
push
xor
iret
repz
sbb
rorb
mov
in
fidivrs
push
stc
notb
les
out
fwait
aaa
jge
or
lods
lahf
or
mov
mov
repz
lods
je
jmp
loopne
sti
pusha
in
push
dec
out
adc
test
jg
adc
add
dec
dec
iret
mov
adc
mov
cmpsl
cs
jns
out
inc
addr16
mov
push
ss
aaa
outsl
ficomps
pop
add
xchg
nop
iret
shlb
jns
out
or
fwait
enter
in
comiss
fisubl
mov
sbb
movsb
xchg
dec
repz
mov
in
aam
mull
cld
stc
rcrl
xchg
cmp
sub
sbb
mov
jg
xlat
sub
stc
repz
mov
mov
xorb
ljmp
xor
test
dec
dec
popl
fidivrs
imul
and
jns
out
scas
rcr
loope
mov
lret
int
dec
xchg
pushf
aaa
outsl
fidivrs
adc
add
iret
pushf
mov
and
out
fwait
sbb
or
int3
mov
jns
jl
push
aad
aad
loope
icebp
inc
stc
out
fwait
aaa
mov
shld
cli
dec
repz
cmp
mov
xchg
lock
xchg
out
xlat
xchg
scas
fwait
aaa
out
and
mov
pop
xlat
inc
ja
jnp
js
out
add
push
inc
in
xor
jle
inc
lcall
test
jge
sahf
jge
insb
mov
pop
sbb
xchg
sbb
push
dec
mov
fiadds
out
mov
jns
push
and
add
cmp
mov
sub
and
sbb
mov
xor
loopne
mov
call
shll
fadds
xor
stos
sub
adc
and
inc
rcll
push
pop
adc
addb
inc
cmc
push
dec
or
sahf
or
sar
aam
add
push
dec
add
mov
adc
or
mov
and
hlt
push
add
sbb
inc
add
repz
popa
adc
and
cmp
cmp
or
cmp
jnp
sub
xor
ss
ret
add
xor
inc
jnp
or
push
sub
push
int3
or
sbb
icebp
inc
xor
inc
cmpsb
push
ljmp
icebp
cmpsl
add
add
push
je
lcall
shl
stos
call
mov
inc
add
inc
lds
jle
aad
out
mov
sub
cmp
mov
lods
and
divb
jecxz
push
arpl
push
sbb
push
inc
mov
inc
or
sbb
sbb
inc
add
orb
or
outsb
jne
rorb
inc
in
inc
add
popa
xor
fcmovnb
dec
shl
testb
jp
adc
mov
dec
add
inc
movsb
cmp
inc
xchg
mov
and
shlb
jl
inc
andl
fmull
lods
add
ffreep
sbb
aam
call
popa
arpl
mov
je
or
or
test
cmpsb
jno
add
pop
add
inc
insl
or
sbb
mov
mov
or
sub
mov
lock
xor
pop
ret
insb
sbb
ja
mov
add
push
shrl
adc
decb
and
cmp
leave
jp
lods
push
or
or
cmp
sbb
in
xchg
jmp
pop
adc
push
orb
cmp
cmp
shll
add
sbb
jb
xchg
ret
loopne
mov
push
push
verw
sbb
xor
pop
and
xchg
dec
add
sub
xor
cmp
push
add
dec
inc
fs
mov
push
add
fimull
pop
test
mov
adc
pop
stos
popf
add
test
sahf
mov
das
inc
sbb
arpl
jno
add
ficoml
icebp
stos
pop
sbb
add
mov
jmp
test
mov
and
xchg
inc
scas
sbb
cmp
sbbb
inc
jno
adc
dec
enter
mul
push
lret
add
aam
jg
cmp
ret
mov
hlt
rol
negl
pop
add
sbb
jmp
add
xor
jmp
roll
adc
inc
enter
add
idivb
fisubrl
testl
sub
lahf
pop
adc
scas
icebp
inc
hlt
mov
adcl
pusha
jmp
inc
pop
sub
es
aam
sbb
movsb
mov
add
push
xchg
imul
lahf
jp
loope
xor
mov
pop
mov
or
leave
add
jns
rcrl
lret
or
movups
push
add
inc
aad
inc
lret
push
xchg
rorl
cmpb
sbb
and
sbb
and
mov
sbb
push
or
lret
jo
add
push
inc
and
add
and
les
and
inc
mov
movsb
mov
push
mov
lock
add
adc
adc
je
into
and
sub
ficompl
mov
hlt
or
sub
cmp
mov
stos
mov
jnp
in
test
mov
cmp
pop
dec
rcrb
adc
cmp
add
scas
rorl
jnp
sub
add
popf
rolb
push
popf
clc
cmovg
clc
push
hlt
mov
mov
add
xchg
xchg
addr16
and
jg
fwait
mov
addr16
mov
xchg
ret
mov
adc
stc
shl
adc
adcl
xor
and
and
pop
pop
outsb
das
and
or
xor
aam
aad
lcall
mov
lret
repnz
adc
std
cmp
fldenv
test
pop
divl
add
cmp
shl
lods
add
rcl
test
push
leave
sub
mov
outsb
adc
adc
mov
push
adc
movsl
cmp
mov
pop
rcrb
ret
sbb
cmp
call
xor
popa
stos
dec
inc
adc
mov
or
gs
pop
ret
adc
adc
jb
jecxz
pop
mov
jp
adc
sbb
mov
call
sarb
test
jno
jnp
js
iret
xchg
movsb
or
shrb
push
mov
jl
sbb
push
push
inc
adc
or
push
and
push
imul
aad
inc
shrb
into
popa
add
push
lcall
mov
push
lods
ret
pop
mov
mov
aam
push
aas
movsb
push
add
xor
rolb
xchg
pop
pop
imul
mov
cmpps
or
loop
add
cwtl
inc
aad
mov
push
sub
cmp
sub
sub
notb
sbb
scas
scas
data16
das
sbb
movb
push
push
or
daa
push
sub
sbb
imul
xchg
push
push
mov
push
test
pop
fwait
scas
into
inc
decb
jge
push
rcll
leave
xlat
popf
push
inc
mov
test
dec
push
and
add
push
inc
je
adc
stc
and
mov
xchg
in
popf
mov
inc
outsb
andl
xor
adc
push
dec
jne
es
push
dec
pop
insb
add
sbb
jbe
enter
sub
lret
or
add
adc
loop
add
push
inc
shll
sub
in
js
xlat
out
sbb
jge
xchg
add
fwait
push
or
mov
fnsave
mov
push
add
or
adc
pop
popl
ret
aas
adc
mov
add
call
xor
jl
adc
icebp
jp
leave
jmp
push
mov
xor
mov
fnsave
xlat
sbb
xor
add
add
int
mov
mov
clc
push
repz
insb
adc
mov
js
rcrb
andb
or
test
xlat
or
push
and
mov
data16
addb
push
mov
lock
mov
mov
adc
add
or
push
fcomps
or
sbb
mov
shrb
pop
bound
imul
cmpsb
pop
inc
push
pop
and
hlt
add
imul
lods
pop
pop
xchg
jbe
leave
and
push
lds
or
push
jae
inc
rcrl
rorb
pop
cmp
js
or
push
addr16
mull
push
or
pop
lahf
les
test
and
rcrb
ret
inc
add
sti
repnz
and
xchg
and
mov
ljmp
push
ss
loope
into
cmc
add
popa
push
roll
mov
stos
test
add
sbb
xchg
dec
scas
push
push
sbb
mov
jle
sbb
mov
adc
stos
arpl
sbb
mov
pop
sbb
mov
rcll
pop
add
dec
mov
cmp
lds
and
xor
xor
or
fstpt
mov
pop
mov
adc
addl
sbb
and
and
sbb
in
scas
xchg
mov
cmp
add
bound
int
xchg
gs
ss
mov
jo
fldt
sbb
cwtl
sub
xchg
jo
and
nop
jp
or
sar
push
sub
stos
dec
lret
mov
in
xor
gs
adc
aam
pusha
jae
sbb
cltd
push
add
mov
add
sbb
lods
inc
in
adc
xchg
xchg
xchg
loopne
aaa
jmp
mov
push
fimull
adc
dec
push
shlb
cmpsb
pop
fwait
cmovae
clc
or
mov
sub
jno
adc
and
mov
js
or
rclb
add
mov
cwtl
out
cmp
rol
mov
pop
leave
test
dec
sub
jge
loope
mov
inc
adc
rol
xchg
roll
add
or
rol
outsl
pusha
add
push
rcrb
stos
cmp
cmp
cltd
mov
xchg
adc
sbb
enter
or
rcrb
mov
add
stos
sbbl
jo
jns
pop
loopne
adc
push
push
dec
out
stos
xor
xchg
rol
xchg
xchg
sub
in
push
xchg
std
mov
lcall
test
subl
inc
mov
mov
sarb
rcrl
inc
and
mov
btc
pop
add
cli
fimuls
mov
shl
sub
adc
test
gs
cmc
stos
dec
out
adc
adc
xor
pop
pop
sarb
xor
lock
push
lcall
popf
or
ljmp
push
and
dec
pop
pusha
inc
fwait
test
test
mov
lods
jmp
test
lds
or
hlt
icebp
mov
rorl
adc
rcll
xor
jbe
addb
sub
adc
negb
clc
adc
rol
xor
dec
jp
in
mov
mov
xor
mov
dec
xor
add
scas
test
rcrl
adc
testb
dec
sub
divb
sbb
lret
and
jb
add
rcrl
loope
or
sub
inc
rorl
add
push
adc
popa
mov
pop
push
mov
inc
inc
mov
pusha
push
aaa
dec
jmp
andb
sub
push
xchg
lret
inc
jae
ljmp
mov
or
cmpxchg
inc
adc
mov
or
scas
loope
es
sbb
call
scas
and
add
mov
rclb
pusha
jo
loope
rol
inc
sbb
or
add
addr16
adc
xor
adc
or
lds
rol
inc
sub
sbb
in
enter
stos
rolb
add
lods
push
popf
xor
push
add
fiaddl
stos
lret
pop
inc
xlat
test
shlb
movsl
lods
fisubl
movsl
and
les
jno
jp
test
dec
clc
adc
jne
add
decb
or
jmp
mov
inc
xor
xor
mov
ret
mov
int
je
cmp
flds
rol
dec
xlat
sbb
add
inc
ficoml
enter
outsl
pop
dec
adc
pop
jne
and
adc
pop
inc
xchg
ret
adc
fwait
adc
lea
dec
int3
shll
or
sbb
and
icebp
adc
les
and
inc
out
xchg
fcomps
mov
xor
push
stos
xchg
aam
enter
std
mov
out
je
mov
inc
pop
test
mov
jle
adc
sub
and
ret
jo
addr16
xor
fisttpl
es
subl
adc
subl
add
fdivrl
or
adc
andl
cmpsb
add
mov
sbb
and
lds
adc
shrb
adc
or
sub
mov
test
sbb
pop
mov
into
add
test
sub
and
ds
into
pop
or
adc
or
jno
rcrb
push
jle
adc
add
cs
or
mov
popa
notl
sbb
clc
push
outsb
es
push
lret
adc
or
and
scas
xchg
test
cmp
cmpl
jmp
test
push
negb
les
pop
sbb
push
add
aad
inc
test
jge
mov
lret
pop
add
subb
data16
cmp
add
jo
or
cmpsb
addb
push
cmp
enter
inc
arpl
jge
test
jo
mov
inc
addr16
or
sbb
orl
sub
pusha
ljmp
adc
adc
ficomps
int3
and
jl
mov
rcll
add
stos
sbb
cmp
pop
xchg
cli
faddl
jp
lret
imull
dec
sarl
fs
push
adc
es
or
jo
daa
jne
leave
jbe
or
push
adc
cld
jmp
mov
push
fcomip
pop
fists
pop
push
adc
orb
mov
push
or
shll
xchg
enter
pop
loop
dec
inc
test
inc
push
mov
aad
or
mov
or
test
adc
inc
add
sub
or
jl
add
add
add
dec
add
clc
rolb
loop
mov
xor
aad
inc
cli
sbb
dec
inc
push
sar
push
pop
lcall
add
jb
scas
xorb
in
push
xor
aad
add
cmp
in
add
adc
add
adc
mov
mov
and
mov
iret
mov
jo
pop
into
dec
sub
in
dec
icebp
push
daa
add
sar
adc
and
setp
xor
cmp
fisttpll
lods
addb
dec
fcmovnbe
in
lods
lahf
aad
icebp
ljmp
cmp
inc
or
push
mov
inc
and
sbb
cmp
xor
stos
mov
addr16
add
sbb
jo
or
mov
jb
subb
inc
mov
scas
adc
pop
cltd
xchg
mov
pop
inc
mov
fistpl
pushf
xchg
mov
push
jae
cmp
or
pop
push
lds
loopne
and
jae
test
adc
inc
ffree
pop
add
imul
loop
push
dec
mov
adc
loopne
in
mov
mov
pushf
pop
sbb
shll
push
push
ret
adc
push
mov
out
sbb
movsl
scas
lock
push
and
xor
mov
inc
add
jo
mov
lret
stc
fcoml
inc
ficoms
sbb
jge
push
add
mov
add
lock
loop
push
movl
push
movsl
sahf
ds
pop
xor
pusha
push
mov
push
push
push
in
out
pop
push
loopne
mov
call
add
push
add
xchg
mov
ss
and
push
pop
les
mov
push
push
movsl
jno
cmpsl
mov
inc
xchg
pop
fs
stc
movb
xchg
out
sbb
dec
adc
inc
and
sbb
push
pop
mov
cli
in
xorb
push
roll
mov
psrlw
or
outsb
fs
ror
xor
rorl
sbb
push
xchg
stos
and
push
sub
inc
push
pop
xor
icebp
add
bound
pop
inc
mov
int
pop
xor
test
or
lret
notb
pop
icebp
add
lock
inc
mov
mov
sbb
xchg
mov
cmc
push
xor
aad
xchg
mov
subb
sbb
stc
aam
mov
ss
mov
mulb
xor
adc
xor
fnstsw
int
repnz
mov
fsubrl
or
pusha
jne
push
ret
sub
out
inc
or
iret
push
sbb
xchg
popa
clc
mov
push
cmpl
jmp
out
add
or
daa
adc
mov
and
mov
in
movsl
inc
jbe
push
xchg
rorb
sbb
shll
ja
push
adc
insl
ret
push
fstpt
sub
jo
xchg
andb
lret
mov
xor
sbb
pop
mov
xchg
test
pop
and
pop
es
pop
push
addl
dec
pop
adc
push
fists
mov
push
inc
iret
or
rcrb
xor
and
pop
add
add
movsl
insb
pop
sar
adc
mov
xor
mov
shlb
or
inc
cmp
fmull
ljmp
leave
push
loop
pop
or
sbb
ljmp
mov
aam
add
insb
inc
lock
int
add
or
icebp
sub
adc
or
push
xchg
dec
push
arpl
sbb
bnd
aam
mov
daa
lods
movsb
mov
push
scas
xor
cmp
imull
push
adc
shll
mov
rclb
adc
dec
xchg
add
test
inc
push
adc
cwtl
das
push
mov
jo
jl
inc
push
push
mov
aam
inc
or
push
xor
sub
out
pop
popf
loopne
inc
clc
add
adc
leave
push
sub
sbb
enter
jo
sbb
mov
push
and
stos
testb
mov
xor
ret
and
dec
out
js
mov
imul
shrb
call
shlb
add
inc
and
sub
in
out
rolb
je
jne
push
jo
lds
jge
mov
inc
sbb
push
adc
loope
loope
jl
or
dec
pop
fdiv
fsubp
jne
add
js
push
xchg
xor
sahf
test
xchg
scas
cmp
mov
daa
xor
mov
push
in
rolb
push
rorb
idivb
into
jge
push
jns
testb
add
sahf
arpl
test
cwtl
fs
pushf
rorb
ret
xchg
or
inc
jmp
shrb
std
ret
sbb
pop
pop
sub
and
xchg
push
sub
push
push
jo
mov
sub
push
and
in
enter
pop
sbb
bnd
cs
and
loope
bnd
xchg
jle
rclb
addr16
adc
mov
jg
testl
inc
add
pop
insb
sub
fwait
add
sbb
ljmp
add
jge
je
sqrtps
add
push
mov
or
sbb
adc
or
sbb
ljmp
or
add
push
aaa
mov
loopne
in
and
stos
or
mov
adc
rcll
gs
roll
adc
add
cmp
leave
scas
cmp
pop
adc
xlat
push
mov
adc
out
movsb
mov
call
and
dec
repnz
push
jmp
cmp
repnz
lds
mov
mov
mov
add
xchg
and
mov
fcoms
dec
inc
arpl
xchg
cmpsb
or
xchg
into
inc
and
cmpsl
rorl
stc
cmpsl
pop
scas
inc
stos
int3
cmp
rorl
mov
dec
adc
stos
xor
or
mov
pop
adc
inc
rcll
js
jp
out
jo
or
xchg
dec
js
scas
daa
fmul
jge
lret
inc
pop
mov
scas
out
mov
mov
or
or
mov
inc
push
and
push
scas
scas
rolb
cli
inc
enter
add
hlt
sbb
add
sbb
mov
fwait
add
sub
flds
daa
add
add
ljmp
pusha
inc
insb
cmp
sub
adc
adc
push
add
into
ja
cwtl
bound
or
or
or
rcrb
xor
inc
inc
sahf
add
add
es
mov
push
repz
mov
jge
or
rcrb
add
add
xor
mov
jle
shrb
xchg
sbbb
pop
mov
inc
cmp
add
nop
call
and
and
lcall
push
ljmp
pop
rcrb
ljmp
push
rclb
dec
inc
jns
and
or
push
inc
ret
sbb
es
div
add
and
adc
add
repz
add
lods
inc
and
psubsw
adc
aaa
xor
ret
std
mov
mov
fwait
lds
lds
loop
es
adc
test
mov
int
rorl
shl
mov
adc
sub
dec
add
xchg
fcoml
xor
test
add
xchg
jmp
pop
inc
mov
cmp
sti
xor
bound
dec
pop
cmp
cmp
add
mov
jb
pop
add
sub
or
cmpsb
mov
add
push
scas
add
push
xor
sbb
xor
movsb
xor
jo
imul
lods
pop
pop
sbb
push
pop
les
aad
sti
je
rclb
push
addr16
add
adc
jnp
or
bound
imul
jo
xchg
add
adc
adc
dec
aam
shl
pop
fidivs
daa
mov
mov
ret
add
fwait
or
add
push
pop
movsb
movsb
sbb
adc
sub
adc
adc
adc
mov
pop
and
not
pop
mov
aad
mov
push
shrl
in
mov
jmp
loop
and
sub
pushf
mov
stc
fs
shrl
xor
es
add
and
orl
xor
sbb
and
insb
mov
enter
dec
into
shrb
cs
repz
ret
mov
pop
xor
subb
cmp
gs
push
call
mov
rorl
sbbl
mov
aam
movb
rcr
push
mov
xchg
pop
mov
add
jae
sub
imul
mov
push
adc
cmp
bound
imul
aam
cli
cmpb
insl
fsubl
xor
jns
sub
testl
push
outsl
cli
jge
test
je
xor
rcl
sbb
mov
dec
rclb
or
inc
test
in
es
js
adc
cld
loop
push
inc
or
push
pop
vandnps
mov
sbb
add
imul
push
mov
add
rclb
jp
ret
and
push
cmp
sub
mov
ret
movsb
mov
cmp
rclb
scas
xlat
into
and
or
push
push
in
out
inc
xchg
mov
push
add
push
xchg
add
add
insl
rorb
add
add
gs
sahf
rcrb
cmp
insl
push
lods
mov
fs
mov
xchg
es
inc
xor
or
or
push
xor
aad
push
ret
addb
sbb
sbbl
and
add
mov
sbb
add
test
sahf
push
cld
fcom
add
shlb
test
cwtl
add
cli
adc
xchg
push
mov
loopne
xor
fxch
add
loopne
pop
popf
lahf
mov
sarb
lea
inc
stos
lcall
rolb
push
hlt
ret
push
add
popf
rcll
and
adc
cwtl
add
daa
add
or
jle
ljmp
enter
xchg
add
pop
xor
pushf
rol
mov
mov
icebp
in
out
xor
repnz
cmp
add
dec
adc
inc
addr16
add
inc
add
out
push
pushf
inc
ret
push
lods
jmp
enter
adc
or
and
sbb
cmp
sbb
push
mov
arpl
lds
add
or
test
icebp
or
arpl
inc
push
push
add
adc
and
test
cmp
pop
xor
cwtl
ljmp
or
addb
aam
sub
lret
xor
mov
movsl
shll
pop
push
sub
js
xchg
shrb
out
std
out
inc
add
ficompl
shlb
adc
and
movsb
pop
add
adc
ret
add
inc
sub
jb
stos
push
testb
push
inc
sbb
es
pop
push
dec
das
add
mov
inc
cmp
adc
xchg
test
stos
add
mov
sbb
aam
ret
inc
les
lock
test
dec
xor
cmc
push
mov
sub
subl
jg
push
sub
ret
sub
popa
push
xchg
loope
js
arpl
inc
jmp
cwtl
adc
mov
cmp
mov
sbb
sub
dec
xor
sub
adc
jl
movsb
stos
push
hlt
adc
pushf
fs
adc
negb
rcrb
xlat
cmp
mov
adc
push
jo
xor
mov
and
xor
adc
mov
adc
sbb
mov
aam
cwtl
lods
lahf
jp
push
or
addb
fs
punpcklbw
inc
and
sbb
mov
xchg
pop
addb
pop
add
subl
loopne
push
or
xchg
sbbb
push
int3
fldl
cmp
stos
lock
popf
xchg
mov
notb
in
shl
nop
into
inc
push
xor
sti
jo
ret
loope
push
aam
push
mov
xchg
inc
or
shll
lret
test
cmp
mov
sar
bnd
sbbl
mov
xchg
sbbl
test
xchg
mov
les
test
sbb
mov
cltd
cs
js
push
adc
sub
scas
and
js
sbb
sbb
loop
and
add
movsb
lods
push
dec
mov
pop
push
ror
pop
mov
inc
and
add
stos
loope
cmpsl
or
inc
sub
mov
push
dec
or
pop
and
and
jne
stos
adc
ret
inc
xchg
leave
clc
jmp
push
xor
push
rolb
add
push
or
je
loopne
fidivl
add
cs
aam
add
add
pusha
xor
sub
lcall
into
adc
add
out
or
stos
pusha
lret
jp
push
xor
push
jl
pop
mov
mov
xchg
les
testb
mov
arpl
movsb
popf
sahf
adc
mov
out
mov
call
or
cmc
inc
cs
js
call
mov
add
cltd
clc
cli
icebp
test
imul
lds
xchg
cltd
adc
jp
rcrb
cltd
loopne
pusha
push
add
aas
xor
sbb
daa
mov
cmp
test
and
es
fs
les
and
call
push
push
push
add
cwtl
xor
or
xor
shl
ret
cmc
sub
or
or
xor
add
mov
fs
inc
pop
sbb
and
cmp
daa
pop
xor
mov
pop
mov
sub
ss
rcr
mov
loopne
sbb
or
dec
inc
int
pusha
loop
mov
sbb
add
test
add
fisttps
or
mov
jb
sbb
cmp
lock
jp
shlb
xchg
push
adc
lahf
mov
and
call
xor
xchg
sbb
push
dec
adc
ret
inc
inc
xchg
mov
add
ds
ret
cmp
jae
fcom
lahf
cmp
iret
sbb
fwait
sub
rclb
and
repnz
push
xchg
pop
mov
or
gs
cmp
mov
mov
inc
subb
ds
rcll
adc
data16
push
js
push
rcl
rorl
sub
adc
sub
xor
popa
test
and
push
in
ret
sbbl
cmp
and
push
mov
push
adc
push
mov
push
sbb
push
loopne
out
int
mov
dec
lahf
lock
shll
sbb
sahf
or
push
cmp
xor
sti
ret
and
push
sub
jae
sub
jge
sbb
imul
shrl
sbb
and
inc
xor
adc
push
mov
add
aas
stos
mov
xor
dec
and
test
cmp
mov
push
pushf
mov
test
fnstenv
les
and
xchg
sub
pop
inc
scas
popa
jno
adcb
scas
push
sub
xor
rorl
mov
sbb
arpl
pop
inc
mov
inc
adc
or
xor
daa
pop
adc
lret
pop
or
or
lea
jne
adc
adc
ret
pop
loop
enter
call
leave
dec
sbb
je
jo
stos
mov
mov
lock
jb
dec
cmpsl
ja
add
push
mov
sub
sub
add
in
pop
addr16
repnz
test
stos
cli
cmp
jecxz
in
pusha
xor
xor
pmuludq
or
mov
pop
loop
add
cmp
ret
cmp
xor
sar
cmp
mov
dec
dec
or
repz
lods
xchg
scas
mov
push
push
or
mov
xor
int
adc
mov
orl
arpl
add
pop
daa
imul
mov
das
xor
mov
xor
add
push
sub
std
jo
pop
mov
add
sub
in
jo
jae
test
ffree
movsl
shlb
add
push
and
jl
out
xor
rcll
or
ss
cmp
std
aad
mov
mov
or
fs
pop
mov
sbb
xchg
imul
or
outsb
push
lds
jl
stc
add
add
adc
add
sahf
fsubs
inc
mov
push
mov
test
adc
dec
rclb
cmpsl
add
aad
sub
xchg
cmp
daa
stos
fcoms
push
dec
lret
add
subl
mov
or
fists
dec
ja
xchg
adc
adc
sbb
mov
add
sub
and
stos
pushf
and
lock
mov
pushf
sbb
push
test
ja
mov
loopne
pop
lea
mov
loopne
adc
cmpsb
rorb
jnp
fiaddl
cmp
dec
jo
jns
dec
daa
pop
inc
mov
rol
lea
sub
xchg
jae
sbb
mov
fldl
and
add
fs
adc
out
xor
sbb
push
and
cltd
mov
rclb
adc
shrl
dec
or
mov
pushf
enter
adc
sbb
sarb
mov
icebp
push
pop
popa
sbb
pop
inc
xchg
pop
sbbl
aaa
xchg
repnz
pop
mov
mov
sub
adc
adc
adc
mov
stos
cmp
andb
xor
cmp
inc
or
jl
push
nop
jp
mov
sbb
test
push
imul
or
adc
xchg
add
aam
sbb
lds
test
hlt
enter
rclb
pop
add
sahf
sub
popa
std
mov
xchg
and
addr16
notl
add
sbb
push
or
and
mov
push
scas
loop
into
cmp
adc
push
int
xor
repnz
addr16
add
adc
mov
xchg
ljmp
ret
push
sub
mov
add
cmp
adc
push
mov
pop
mov
adc
jb
cmpsb
out
in
push
ljmp
cmp
add
psubw
and
pop
xor
add
add
mov
xorl
push
call
jmp
xchg
sahf
cmp
inc
sub
enter
jge
sub
inc
xchg
jnp
inc
ljmp
jl
mov
xchg
push
dec
sbb
mov
ss
ljmp
adc
cltd
xlat
cltd
jns
cmc
adc
mov
orb
mov
jb
or
out
push
inc
es
outsb
sub
lcall
mov
and
or
push
fwait
add
mov
les
adc
xlat
jg
adc
mov
outsb
in
xor
repz
xchg
pop
nop
or
add
push
into
pop
mov
mov
js
dec
inc
sub
push
mov
push
pop
add
pop
sbb
movsl
imull
mov
adc
jo
fcmovbe
les
icebp
xchg
movsl
xchg
pop
shlb
add
cs
xor
mov
cmp
xchg
push
push
xorl
jb
roll
pop
ljmp
push
add
inc
mov
js
mov
add
ret
mov
pop
inc
mov
xor
popa
and
and
and
add
int
cmp
dec
or
or
lods
sbbb
cmpsl
lret
pop
dec
push
ljmp
int
add
add
cmp
inc
xor
ja
jle
and
jns
rolb
stos
jp
hlt
sub
subb
sbb
mov
or
enter
pop
mov
add
test
test
push
mov
ljmp
xchg
sub
inc
add
xsaves
jmp
pusha
sub
jno
add
jg
stos
and
and
and
mov
adc
sbb
fdivrl
adc
sub
outsb
sbbb
pop
repz
aas
or
or
jb
jae
push
rcl
andl
cmp
cmpsb
push
out
add
push
test
aad
rorl
fimuls
enter
ret
and
adc
push
sbb
pusha
shl
cmp
ljmp
push
stos
sbb
adc
mov
gs
pop
test
sbb
dec
movb
mov
jl
push
rcrb
lret
cmp
movsb
xchg
pushf
in
sbb
jle
xchg
pop
loopne
adc
lock
icebp
inc
sbb
add
aaa
pusha
mov
xor
push
adc
loopne
daa
loop
jp
push
jo
pusha
mov
in
test
sbbl
aam
pop
lcall
or
sbbb
add
sub
xchg
inc
push
push
adc
pop
popa
shrl
mov
adc
dec
and
adc
xlat
inc
aad
lods
or
into
ljmp
bound
dec
adc
xchg
mov
mov
cmc
rcl
or
jg
push
sbb
mov
adc
mov
inc
sub
xor
and
mul
mov
leave
pop
orl
mov
sub
in
add
and
jmp
jne
push
push
xchg
jle
nop
rorl
add
sub
sbbl
test
hlt
sub
mov
cs
xchg
pop
sub
fwait
push
jnp
add
sbb
xchg
add
inc
or
std
rcr
adc
aam
popf
sbb
fs
push
xchg
adc
push
cmp
insb
cwtl
sub
test
add
lret
add
enter
mov
jae
sbb
mov
xor
subl
je
mov
adc
pop
add
push
lods
sbb
and
cwtl
fistl
roll
stos
shrl
mov
adc
sahf
pop
mov
push
cmp
pop
xor
pop
popf
ficoml
sbb
mov
xor
jmp
js
bnd
add
mov
icebp
sahf
jne
pusha
loopne
call
push
and
aam
mov
cltd
addb
adc
sub
frstor
fists
xor
mov
dec
pop
test
cwtl
fistpl
adc
icebp
or
pop
loope
sets
mov
pop
pushf
aad
loopne
loopne
fistpl
push
sub
inc
insl
enter
lods
push
inc
and
pop
jecxz
jg
mov
enter
in
dec
std
jno
and
add
mov
fidivl
jle
daa
pusha
inc
scas
sub
sbb
jne
or
mov
add
fs
data16
nop/reserved
adc
dec
hlt
or
or
mov
out
incb
aaa
test
sbb
adc
add
and
push
sbb
lcall
push
clc
sub
cmp
and
push
bound
std
cltd
cmp
mov
rorl
adc
scas
add
add
sbb
pop
inc
and
jns
es
xchg
fcomp
rclb
mov
pop
mov
lret
push
or
mov
in
adc
out
pop
push
sub
dec
adc
rclb
or
xor
or
jge
ret
cmpsb
or
cmpsl
lock
stos
mov
push
lods
ljmp
notb
add
push
xchg
jp
add
adc
xchg
pop
js
dec
rorb
pop
aam
leave
pushf
mov
test
add
add
adc
push
or
add
lods
in
push
adc
sbb
xor
rclb
pop
cmp
cmp
push
fsubrs
add
sub
inc
sbb
insl
or
mov
popf
addb
shrb
cmpsl
test
add
xor
into
mov
adc
iret
shr
shrb
aam
jbe
xor
ret
push
cli
push
leave
loop
aad
inc
loopne
mov
sub
test
cmp
daa
xor
mov
mov
dec
mov
adc
xchg
lcall
sub
adc
in
push
inc
mov
add
cmp
in
sbb
inc
jno
scas
adc
shrb
and
xchg
rclb
and
add
hlt
rcll
loopne
iret
add
push
cli
enter
and
cmp
add
cmp
sbbl
push
push
mov
xchg
test
adc
mov
add
call
loopne
ret
scas
sarl
xor
dec
jo
pop
add
sbb
icebp
or
and
rcll
push
jb
push
pop
je
ja
lret
clc
les
lcall
pop
test
orl
adc
roll
mov
hlt
and
stos
int
mov
aas
stos
fcmovne
push
mov
mov
or
sbb
push
stos
push
sarb
enter
adc
dec
push
rorb
or
add
or
mov
push
or
iret
xor
clc
and
add
ret
sbb
stos
sub
push
mov
xchg
mov
mov
aam
mov
xchg
cmp
xor
pop
mov
sbb
push
push
sbb
adc
adc
subl
adc
bound
or
inc
pop
pop
addr16
subb
sbb
std
or
mov
inc
rol
lret
inc
ficoml
xchg
repnz
pop
xlat
loop
push
rcrb
shrl
inc
cmp
inc
sub
adc
ret
pushf
jae
outsl
or
xor
sub
sbb
ljmp
and
sub
int
lret
cmpsl
xchg
clc
or
or
nop
jmp
and
sbb
mov
loop
outsb
adc
add
mov
adc
shlb
xchg
and
rcrb
mov
push
sbbb
lret
aam
call
lea
sub
int3
mov
aaa
or
push
addr16
xchg
or
push
shll
xlat
dec
mov
add
cmpsb
pop
sub
addr16
lods
cmp
mov
dec
mov
call
xor
lods
sub
movsl
ljmp
push
adc
pop
pop
or
adc
ljmp
mov
jb
xchg
lret
test
mov
popa
pop
cmp
sbb
push
sub
add
aam
cwtl
ljmp
xor
push
xor
and
mov
push
and
add
add
xchg
inc
inc
add
push
in
decb
inc
sbb
addr16
add
and
or
rorb
xchg
ljmp
push
out
mov
adcl
aam
mov
adc
and
add
cld
push
and
inc
call
pop
cwtl
stc
inc
pop
pop
sub
add
rcrl
pop
call
push
shlb
popa
jge
or
pop
shl
enter
push
test
jns
mov
sub
shlb
xchg
hlt
push
testb
cmp
and
ret
xchg
sub
cwtl
or
push
cwtl
iret
mov
loope
pop
add
pop
add
and
xchg
pop
je
or
rolb
add
orl
inc
sbb
cli
mov
das
sub
add
dec
test
push
inc
push
sbb
ss
inc
in
and
subb
cmp
idiv
inc
jo
lret
pusha
cmpsb
mov
xor
mov
push
je
pop
addb
ret
fcmovb
xor
or
mov
or
test
sbb
mov
fnstcw
jmp
pusha
inc
inc
das
xlat
rol
jge
loopne
call
sbb
mov
outsl
xorb
or
mov
or
xor
adc
in
lds
xchg
sbb
sbb
inc
push
or
nop
nop
adc
adc
push
arpl
add
push
or
aad
sarl
push
pop
stc
push
adc
int
adc
dec
jno
imul
push
das
rorl
add
add
rolb
bound
or
mov
pop
gs
xchg
lcall
push
sbb
scas
mov
inc
cmp
jmp
inc
shrb
and
push
pop
add
stos
push
rep
mov
lock
and
roll
push
roll
and
pop
adc
push
inc
outsl
in
cmp
mov
push
leave
test
aam
push
inc
inc
mov
or
sbb
dec
mov
sbb
enter
jae
jnp
sub
cmp
dec
loopne
add
neg
fldt
jp
cmp
pop
roll
or
mov
or
test
push
in
out
psadbw
push
xchg
mov
sbb
and
lret
sbb
inc
cmp
addb
adc
pop
test
inc
lret
ret
dec
jb
xchg
xor
sub
inc
cmpsb
pop
push
adc
fisttpl
cmp
push
pop
dec
push
icebp
stos
adc
jbe
fscale
pop
lret
cmc
inc
jge
and
xchg
jp
xor
mov
or
cmp
inc
addr16
jmp
into
xchg
push
push
stos
loopne
adc
add
loop
jle
or
cmp
add
xor
movsb
or
xchg
cmp
adc
into
icebp
lock
test
lds
xchg
cli
stos
add
cmp
pop
add
fdivl
push
dec
adc
sbb
dec
xor
daa
rcll
adc
dec
cli
or
add
shll
mov
adc
push
pushf
push
adc
push
lods
xchg
and
enter
in
push
cmpsl
std
mov
into
test
stc
add
into
add
push
push
push
lret
and
in
cmp
or
mov
dec
push
stos
cmp
add
fimuls
inc
adc
push
test
mov
aas
jb
mov
icebp
sbb
shlb
add
push
icebp
jg
fisubrl
mov
pushf
add
lds
aad
and
pusha
and
cmp
insl
inc
jb
stos
or
imul
orb
xchg
lds
shr
sub
pop
xchg
push
push
lock
push
in
fs
add
ss
push
or
out
adc
out
push
ds
push
mov
dec
jnp
daa
xor
aaa
inc
mov
ja
mov
lret
shrb
les
mov
pop
ficoms
add
sahf
add
test
shrl
fisttps
cmpsb
dec
push
jmp
add
and
in
or
cwtl
sub
mov
jb
sbb
daa
ljmp
insl
xor
mov
data16
or
xchg
ret
push
nop
addb
bound
xorb
std
mov
test
push
gs
add
pusha
cmp
pop
mov
push
les
lock
mov
btc
jb
sbb
.byte
pop
call
in
add
add
imul
cmp
sub
add
mov
add
fcmovnu
decl
sub
sub
imul
sub
sbb
sbb
inc
cld
add
mov
mov
sub
lret
sub
inc
mov
sub
sub
add
or
sbb
cmp
mov
repnz
sti
cli
push
mov
push
cmp
cmp
ss
adc
out
jbe
ret
inc
cmp
sbb
adc
fistl
addb
sbb
or
add
or
rcll
mov
mov
insl
neg
out
imul
scas
call
sub
addb
xchg
mov
mov
xor
sbb
pop
mov
adc
pop
imul
push
add
cmp
insl
add
shlb
adc
lock
jne
mov
fcmovnbe
ret
lock
outsb
cmp
mov
lret
or
mov
mov
mov
add
add
imul
mov
in
add
hlt
cli
pop
cmp
adc
adc
mov
ds
je
sbb
movsb
fcomp
out
testb
adc
outsl
or
mov
add
shr
adc
sbb
xchg
adc
add
sub
test
xchg
adc
add
test
jne
testb
jge
outsb
lods
mov
sub
or
mov
push
or
sarb
enter
pop
adc
pop
popa
sub
push
jge
leave
mov
mov
into
sti
pop
aaa
xlat
mov
bound
shll
mov
jle
sbb
or
leave
or
insl
outsb
fcmovnb
adc
sub
fsubp
fucomi
adc
shl
mov
pop
faddp
in
mov
mov
fidivrl
sbb
or
imul
imul
cmp
or
mov
inc
rcrl
cli
add
idivl
mov
and
inc
mov
cltd
lock
cs
push
ss
mov
sub
outsb
adc
jne
add
rorb
sub
in
shlb
addb
mov
pop
ss
add
sarb
shrl
mov
push
pop
enter
xchg
xchg
lods
adc
mov
jl
fwait
mov
sbb
push
shr
mov
lock
jge
icebp
push
xchg
or
xor
iret
cmp
ss
sbb
push
cmp
jp
sbb
jbe
rcrl
dec
sahf
add
jae
sbb
sub
sbb
decb
pop
outsl
test
pop
sbb
lods
cltd
ss
imul
adc
mov
fbld
sbb
mov
xor
jmp
sbb
xor
or
ds
jbe
ficoml
adc
adcb
pop
jo
sub
lock
pop
jb
sbb
jmp
or
clc
mov
mov
rclb
mov
enter
fldln2
mov
adc
adc
xor
movsb
rcl
pushf
loope
into
push
out
test
clc
xchg
mov
push
mov
scas
xor
cmc
rol
pop
lods
shrl
ljmp
cmpsb
jp
or
daa
shll
clc
adc
cmp
jge
incl
je
or
in
sbb
add
adc
ljmp
mov
sbb
xchg
popa
fldt
sbb
jmp
mov
sbb
leave
sbb
xchg
or
pop
xor
sub
mov
add
add
and
pop
jg
ja
out
and
push
add
push
sbb
add
into
mov
ret
call
dec
insl
rcl
jge
decb
or
int
or
xchg
push
insl
rorb
sub
mov
pop
int
or
sar
pop
add
jne
sarl
inc
cmp
js
rorb
or
enter
push
cmp
push
or
lds
jnp
inc
jnp
sbb
inc
notl
jmp
insl
scas
rolb
test
insl
scas
inc
inc
pop
add
rolb
pop
push
add
and
pop
push
fistl
add
out
pop
arpl
or
or
test
or
loopne
inc
test
add
rcrb
inc
rolb
pop
nopl
fcomi
bound
sbb
or
or
jnp
pop
adc
mov
or
jnp
mov
sbb
sar
mov
xor
and
and
mov
sbbl
add
sbb
test
gs
push
or
add
adc
fwait
ret
lock
icebp
add
xor
mov
adc
push
sbb
loopne
add
stc
mov
inc
fs
imul
mov
stos
mov
push
or
jnp
rol
push
addr16
sub
test
arpl
outsb
cwtl
shll
sti
leave
call
lock
add
mov
xor
and
movsb
js
push
push
adc
add
inc
call
pop
mov
loopne
sub
adc
dec
xchg
stc
jmp
sub
pop
aas
sti
inc
and
xor
shl
icebp
push
cmc
imul
add
repnz
or
mov
dec
aaa
xchg
int
add
sarb
mov
clc
or
prefetcht0
ss
loopne
add
mov
mov
fs
pop
dec
imul
cli
test
stc
push
pop
push
inc
and
mov
outsb
mov
push
sbb
shlb
das
ljmp
mov
cs
or
cmp
int3
add
mov
or
or
fsubrs
adc
test
bound
push
sub
cli
std
fadds
orl
push
dec
and
popa
pop
xorb
outsb
nop
or
xchg
mov
adc
in
cli
push
ds
loope
mov
or
add
and
ret
pop
push
pop
lahf
pop
roll
stc
insb
rolb
icebp
add
push
mov
pop
fildl
out
or
lods
xchg
push
mov
inc
sbb
and
rorb
aas
ret
sbb
and
inc
jae
stos
and
xor
insb
adc
ret
mov
stc
jp
push
rclb
add
adcl
mov
xor
repnz
pop
pop
lds
adc
mov
xor
data16
add
and
or
in
loop
adc
mov
mov
setno
mov
or
adc
lods
add
pop
hlt
loope
ljmp
jl
sbb
jbe
add
or
or
jmp
cmpl
or
mov
xlat
pop
lods
mov
jne
out
adc
inc
sti
mov
aam
popa
ljmp
into
cmp
mov
or
push
xchg
pop
jmp
jp
pop
fidivrl
xlat
xor
jno
or
pop
mov
adc
fldl
cwtl
lods
jp
call
mov
sub
lret
lods
xchg
fisubrl
call
or
inc
cmp
sbb
adc
int
repnz
add
sbb
ret
fdivrs
jge
test
fisttpl
push
shll
mov
add
push
or
ret
mov
jne
mov
or
xor
mov
lods
test
inc
hlt
add
or
sahf
inc
jo
jo
sbb
fidivl
negb
lock
ss
add
dec
sarl
inc
movsl
dec
jecxz
jecxz
loope
cmp
adc
sbb
jecxz
pop
inc
and
mov
mov
ljmp
xchg
or
ss
and
in
or
or
push
jnp
pop
adc
enter
repz
pop
cld
jge
xchg
mulb
incb
mov
cld
add
ljmp
jnp
dec
and
inc
mov
loop
out
xchg
dec
movzwl
cmp
cwtl
out
fstl
dec
ret
xor
add
adc
pop
pop
lods
cmp
sbb
push
push
xchg
outsl
aad
in
push
mov
ja
pusha
cltd
mov
loopne
dec
or
add
xchg
sbb
insl
scas
sahf
imul
add
pop
insb
dec
sbb
popa
sbb
inc
or
inc
hlt
sub
imul
pop
sarl
js
sub
sbb
pusha
or
rorb
inc
cmp
xor
bound
xchg
sub
mov
jbe
push
lods
sbb
push
ljmp
xchg
xor
ds
mull
jl
int3
push
push
pop
push
jg
ret
pop
pop
xor
movl
lret
pop
test
add
insl
sub
pop
adc
fldlg2
sub
test
push
dec
inc
sub
nop
fs
out
popa
aad
call
mov
add
imul
or
sbb
sbb
ljmp
pop
outsb
lret
dec
stos
sbb
xchg
mov
sbb
pop
call
sbb
jbe
out
or
push
pop
leave
dec
leave
mov
mov
mov
or
push
imul
dec
or
sarb
out
cmp
sub
andl
fldl
stc
mov
ret
sbb
xchg
cmp
lods
push
leave
sti
aas
sbbl
sbb
js
stos
mov
xor
push
in
sbb
inc
mov
pop
enter
sbb
or
les
mov
sbb
pop
add
jno
imull
push
add
push
push
and
ds
xor
sbb
popf
mov
and
xor
pop
repnz
xlat
rorl
sbb
xchg
or
jns
fs
xlat
inc
fucomi
roll
dec
into
xlat
bound
sbb
pop
cli
and
inc
icebp
mov
adc
pop
add
cmp
inc
cmp
pop
rolb
push
imul
stc
fs
push
rcll
adc
ret
scas
lock
std
add
push
inc
add
push
sbbl
add
push
mov
pop
cmpsb
push
mov
cmpl
inc
sub
adc
push
mov
or
xlat
jnp
push
call
int3
push
stc
hlt
sbb
sbb
pop
mov
adc
jecxz
repz
xlat
dec
cmp
push
mov
add
addb
mov
add
jne
loopne
xchg
jne
rol
pop
jae
les
xor
arpl
cmp
sbb
mov
mov
pop
push
loopne
sbb
mov
add
cli
insl
mov
xor
push
pop
pop
daa
push
xor
cmc
add
cli
or
pop
in
add
adc
stc
mov
es
inc
pop
pop
pusha
jns
jo
xor
inc
add
shll
sbb
mov
data16
into
cmpsb
mov
sbb
or
into
jne
or
push
push
adc
mov
inc
pop
lahf
add
mov
sbb
rclb
sbb
cmp
add
cmp
pusha
sub
mov
add
sahf
lret
aam
dec
in
stc
adc
jae
inc
and
aas
int
push
clc
leave
add
jnp
bound
rorb
ljmp
jmp
es
xor
pushf
and
insb
mov
rclb
push
push
pop
push
mov
dec
pop
les
bound
cmp
ljmp
adc
jns
icebp
dec
ljmp
xchg
push
loopne
adc
mov
pop
jecxz
mov
movsb
neg
je
data16
pop
push
stos
pop
sbb
push
mov
rcrb
fwait
xadd
add
inc
lret
inc
mov
cwtl
rcl
pop
sub
aas
cmp
call
jo
popa
pop
ja
add
scas
cmpsb
push
pop
les
adc
jl
cmp
pop
xchg
in
in
insl
test
in
xchg
rorl
jo
lret
xchg
inc
clc
and
lds
sbb
cmp
mov
add
and
mov
mov
mov
rcrb
lcall
repnz
inc
dec
rolb
push
push
sar
add
out
or
aad
pusha
xor
or
dec
push
inc
testb
sahf
push
adc
xchg
push
cwtl
push
test
mov
push
popa
mov
add
addr16
sbb
subl
mov
ret
push
mov
mov
sbb
or
and
faddl
pop
movb
shll
sbb
popa
add
es
mov
dec
xor
push
xlat
mov
lret
or
push
push
adc
loopne
inc
mov
or
enter
shll
sub
testb
idivl
xchg
push
push
stos
inc
and
enter
pop
cmpsb
or
pop
dec
mov
xchg
ret
inc
mov
mov
dec
cmp
push
scas
and
cmp
mov
cs
adc
push
mov
mov
mov
mov
sub
mov
pop
cmp
xchg
mov
inc
sbb
loope
inc
cwtl
adc
in
pop
in
pop
out
cmp
cmpsb
push
or
lea
xchg
mov
lcall
sub
scas
scas
cmp
mov
dec
bound
jae
addl
sbb
add
xorl
adc
into
testb
adc
inc
mov
rol
mov
in
add
ljmp
rclb
repnz
mov
jno
mov
sub
jp
or
das
xchg
cmp
sbb
int3
push
inc
mov
xchg
mov
sub
mov
sub
jg
imul
out
and
aas
idivb
jecxz
push
imul
ret
idivb
xor
jg
push
xor
lret
adc
lods
push
pxor
test
sub
adc
ds
adc
adc
pop
mov
push
subl
out
cltd
and
sahf
jb
cli
loopne
mov
adc
push
or
dec
add
lods
gs
sbb
loopne
es
or
pop
mov
ficompl
cmp
push
sbb
cmp
mov
dec
xor
mov
or
shll
push
mov
enter
mov
fs
mov
inc
adc
xor
movsb
int
or
pop
pop
mov
pushf
testb
pop
aam
enter
or
mov
adc
dec
push
xchg
dec
ficoml
add
mov
pop
and
fnstenv
mov
or
pop
sbb
push
imul
dec
rcll
fwait
adc
push
cmp
rolb
mov
add
sub
rorb
rdmsr
rcrb
lcall
cmp
nop
sub
inc
insb
imulb
sub
lret
or
cmp
out
xor
sub
sub
inc
add
je
mov
mov
inc
sarb
pop
sbb
out
ljmp
jo
xchg
sub
push
or
call
das
sbb
insl
adc
nop
mov
push
pusha
mov
push
push
adc
adc
xchg
into
inc
push
test
stos
adc
lods
mov
push
push
push
push
push
push
and
cmp
into
push
cltd
xor
out
sti
imul
cmpsb
or
mov
fldenv
add
jbe
mov
into
push
std
shlb
test
push
loopw
call
jecxz
push
mov
aad
inc
in
inc
pop
pushf
js
leave
shll
sub
or
dec
sub
jl
push
shrl
adc
clc
ret
and
adc
add
jb
and
sbb
sbb
subl
rorl
mov
js
inc
test
adc
loope
lret
jmp
or
in
mov
or
xchg
scas
dec
notb
ret
pop
pop
cs
js
ret
adc
inc
push
ret
lds
mov
ficoml
adc
inc
ret
repz
push
ja
mov
cli
loope
cmp
inc
popf
sub
icebp
sbb
xor
iret
rorb
and
mov
push
stos
mov
cmc
in
mov
adc
imul
mov
rol
in
push
add
orb
bound
lock
pop
ret
or
xlat
dec
pusha
xor
push
cmp
clc
fwait
and
rcr
lcall
adc
mov
inc
mov
sbb
out
gs
inc
pusha
loop
mov
shl
add
dec
fcoml
sub
loope
adc
push
out
cmp
sarl
ds
push
sub
cli
arpl
lret
in
push
scas
push
orb
xor
lods
and
mov
jo
bound
rcll
jo
mov
add
loop
mov
push
andb
and
push
out
xor
out
mov
ret
shll
sbb
sbb
or
push
mov
add
inc
or
gs
movsl
mov
insb
add
movb
test
pop
sub
jp
into
ret
push
out
inc
inc
jmp
xor
lds
push
stc
clc
aaa
shlb
leave
sub
insl
pop
sub
pop
or
insb
dec
xor
jmp
hlt
sub
fadds
loope
pop
stos
stos
rclb
push
pop
jae
cmp
into
push
ljmp
cmpsb
or
inc
jle
leave
dec
mov
sbb
add
and
rorl
rcll
mov
lock
pop
cld
dec
sub
mov
stos
xor
std
mov
mov
shll
lret
shlb
jbe
inc
adc
xchg
sub
sub
sahf
stos
lcall
sub
insl
xchg
mov
cmp
mov
xor
ret
and
test
or
cmpsl
lods
in
mov
popf
insb
inc
xor
push
cmp
mov
adc
pop
inc
add
aaa
xchg
cmp
mov
or
rcl
xor
add
or
sub
daa
outsb
lds
push
out
imul
or
sarl
mov
fmuls
cmpsl
ja
mov
dec
push
lea
lret
orl
shll
add
xor
mov
inc
out
push
dec
mov
jg
adcb
push
push
push
inc
push
cs
sub
and
jnp
in
mov
xorl
ljmp
fimuls
xor
sbb
dec
mov
adc
adc
dec
loopne
push
jle
rcr
rcrl
cltd
xorl
addr16
xchg
inc
mov
xor
mov
xlat
pop
adc
or
jo
mov
pop
and
cli
jb
stc
inc
pop
xchg
rcl
sub
and
or
or
and
push
sub
iret
js
pop
lret
sarl
xchg
popf
mov
push
hlt
into
cwtl
inc
sbb
lods
cmc
loope
addb
stc
cmp
add
leave
pusha
hlt
aad
jb
lds
and
ljmp
sub
and
inc
cld
add
push
push
adc
push
add
sub
out
add
jge
or
inc
mul
jmp
jb
clc
shll
in
pop
mov
insb
mov
or
adc
scas
rolb
mov
push
test
adc
cmp
test
in
sub
out
adc
lcall
ds
mov
push
imul
or
mov
stos
test
outsl
mov
mov
movsb
je
sbb
or
scas
mov
mov
xor
inc
push
adc
mov
push
cmp
or
stc
shlb
pop
mov
stos
cmp
mov
sbb
orb
mov
enter
pop
cmp
sub
xchg
sbb
mov
or
adc
roll
cltd
mov
push
in
nop
ljmp
aam
xchg
imul
leave
aam
inc
push
mov
inc
loop
xchg
clc
lods
add
dec
push
jo
adc
leave
xchg
mov
mov
sub
adc
lret
or
cmp
or
sub
or
aas
repz
int3
push
mov
daa
or
or
or
inc
loopne
cmc
adcb
popa
xchg
test
shlb
shr
add
jb
or
mov
das
mov
push
cmp
sarb
mov
xchg
push
xchg
add
sbb
push
sahf
stos
jp
add
rcll
lea
or
xchg
or
repnz
shrb
push
lock
sub
mov
add
les
push
sbb
lock
adc
pop
mov
gs
popf
lahf
mov
pop
pop
pusha
xor
mov
lods
or
push
sub
ljmp
push
push
xor
enter
repz
jbe
mov
cmp
call
call
inc
ja
rcr
test
xor
rolb
xor
inc
cmpsl
sbb
cmp
loope
push
push
je
pop
sbb
pushf
add
or
xchg
and
or
pop
mov
add
sbb
push
movsb
lcall
sbb
or
sub
xchg
or
in
or
std
enter
fdivs
cli
add
mov
xchg
rcrb
add
mulb
add
push
sub
push
orb
add
popf
daa
inc
popa
loopne
test
push
pop
jl
add
mov
push
rol
inc
testb
xchg
andl
pop
dec
sbb
dec
rolb
ret
out
ljmp
add
pop
imul
sbb
sarl
dec
rorb
mov
mov
aad
mov
and
push
inc
arpl
sbb
ret
cmc
cmp
test
inc
popa
aad
mov
sbb
xor
ficoml
cmp
stos
hlt
fs
adc
int
push
add
orb
inc
test
stos
mov
ret
roll
cmp
and
push
imul
jo
push
jno
shrb
dec
daa
mov
ja
mov
mov
rorb
add
insl
enter
imul
mov
or
int
add
imul
loopne
cs
cli
adc
sbb
xchg
cwtl
push
jp
orl
cltd
inc
mov
add
maskmovq
mull
push
add
mov
aaa
dec
cmp
add
add
adc
cmc
bound
inc
out
and
loope
sbb
adc
adc
mov
fldcw
je,pt
push
fcomps
mov
pminsw
xchg
imul
icebp
shl
inc
daa
aad
jo
adc
push
add
pop
dec
xor
nop
mov
loope
mov
sub
push
and
push
or
inc
loope
xchg
jb
cltd
mov
arpl
imull
icebp
jb
and
push
jp
jns
cltd
dec
bound
rclb
pop
cltd
sbb
pop
sbb
inc
mov
adc
dec
push
insl
add
lcall
sub
out
inc
andl
roll
sbb
mov
loope
add
pop
add
les
pop
and
adc
and
mov
adc
push
push
mov
cmp
pop
dec
mov
les
insl
sbb
rorb
cmpb
inc
sbb
cmp
push
add
and
inc
and
pop
cmp
mov
xor
xor
sbb
jl
sbb
xlat
push
inc
mov
or
out
mov
imul
push
adc
repnz
stc
push
xchg
adc
xorl
jmp
loopne
pop
pushf
jmp
xor
decb
adc
icebp
mov
push
jo
je
adc
push
cmp
add
ret
pusha
pop
stos
adc
xchg
test
inc
add
jp
mov
or
inc
test
stc
dec
fmuls
sub
sbb
pop
ljmp
mov
cli
lret
adc
sbb
enter
sbb
adc
andb
cmpsb
out
sbb
lock
pushf
sbbb
mov
ret
or
dec
ret
daa
jo
pop
sbb
push
xchg
mov
nop
mov
and
xor
lock
rol
lea
clc
shlb
or
cwtl
adc
mov
add
jg
stos
push
cmp
adc
mov
test
ret
sub
xchg
cli
shr
inc
addl
addr16
pop
jns
adc
stc
adc
rcrl
and
mov
dec
adc
rclb
loope
mov
push
add
mov
dec
xchg
push
or
jno
mov
cmpsb
jmpw
adc
rolb
js
push
inc
jae
ret
stos
pop
fs
into
rorb
cmc
lods
xchg
mov
xor
or
lock
movsb
or
mov
push
pop
mov
stos
cltd
cmpb
test
add
fsubl
jecxz
add
stc
inc
and
rcr
push
ret
std
aad
push
pop
cwtl
or
push
sbb
mov
subl
mov
sub
dec
mov
je
sbb
xor
icebp
adc
inc
jbe
mov
xchg
cmp
jo
pop
sub
mov
dec
mov
adc
inc
mov
cmp
test
xor
adc
dec
xor
and
shrb
jb
out
negb
xor
push
sbb
out
aad
pop
add
das
dec
jns
aad
push
ja
cmp
xchg
sub
out
jno
push
mov
bound
or
in
sbb
and
push
add
push
add
and
sbbl
sbb
cmpsb
dec
push
push
mov
cli
or
clc
push
clc
bound
mov
js
mov
xchg
inc
push
and
cmp
sbb
inc
sub
ret
sub
jmp
inc
xchg
ret
add
das
or
mov
pushf
mov
stos
test
jne
mov
add
xchg
cs
adc
and
xor
xchg
test
pushf
fcompl
ret
inc
xor
adc
or
fsubrl
inc
adc
mov
cli
jno
sbb
insb
test
mov
mov
push
mov
add
inc
or
cmp
fwait
subb
insl
xchg
dec
xor
add
rcrb
mov
mov
adc
mov
pop
or
pop
and
addl
inc
sub
push
stos
movsb
mov
mov
call
mov
test
call
push
movsl
sbb
cmpsl
outsb
ror
int
imul
pusha
push
lock
insb
mov
repnz
jmp
adc
fcmovnb
xchg
push
ffree
xchg
sub
xlat
adc
ret
or
mov
cmp
fists
add
inc
pusha
sti
jmp
push
inc
mov
pop
inc
adc
mov
lds
or
ficompl
mov
pop
addb
push
ds
adc
insl
addb
inc
clc
push
cwtl
dec
rclb
sahf
ret
add
pop
push
mov
or
jo
sahf
sbb
aad
aad
add
xor
add
pop
test
es
sbb
add
divps
aam
jl
out
mov
adc
enter
sbb
fmull
inc
dec
push
insl
cmp
and
or
pop
sub
subl
cli
adc
shl
and
pop
push
and
lods
cmpsb
popf
cmp
sbb
xor
mov
bound
test
aam
push
cmp
icebp
and
add
sub
xor
cwtl
sahf
pop
call
mov
adc
decb
cmpsb
mov
fnsave
shll
addr16
mov
ljmp
add
insl
xchg
mov
stos
scas
aad
popf
dec
in
jmp
push
cmp
cli
and
mov
adc
scas
adc
mov
lods
push
sbb
jecxz
add
xlat
or
es
lret
lds
mov
sarb
js
sub
pop
push
shlb
inc
inc
push
and
shll
pop
push
or
ret
adc
sbb
dec
adc
shlb
push
mov
leave
adcl
icebp
daa
xor
ficompl
xchg
mov
push
push
add
mov
ret
add
les
jns
into
xchg
xor
nop
mov
push
and
add
into
lods
push
insl
sbb
pushw
sub
pop
adc
push
sti
pop
mov
inc
mov
cmp
xor
xor
js
sub
adc
test
xchg
out
and
enter
mov
pop
call
mov
mov
cmp
push
mov
or
mov
cltd
fwait
lret
jbe
or
out
adc
mov
stos
icebp
push
fucomip
test
jae
dec
xor
jmp
shr
inc
insl
xlat
rolb
mov
xchg
loopne
mov
je
lock
sbb
out
push
insl
out
adc
inc
insb
adc
imul
or
lret
icebp
jo
adc
mov
arpl
or
iret
mov
push
scas
push
sbb
and
mov
into
mov
xchg
mov
or
mov
test
mov
push
or
test
cwtl
test
sbbl
cmp
cmp
xchg
lea
inc
mov
add
dec
push
push
or
add
pop
lcall
add
inc
divb
cs
xor
ja
inc
not
in
adc
xchg
sub
push
push
push
xchg
lret
inc
cmpsl
mov
lods
mov
inc
pop
sbbl
add
mov
into
adc
xchg
shrb
rolb
cwtl
cmp
das
mov
pop
push
loope
xor
or
xchg
xchg
or
push
orb
sub
jo
sbb
lcall
in
or
mov
shlb
fstl
into
sub
divb
push
sbb
sbb
inc
jmp
xchg
mov
shll
stc
fcoml
push
movsb
or
dec
push
add
lret
lods
sbb
push
pop
or
or
sbb
or
rorl
int3
jg
xchg
xorl
dec
mov
xchg
sub
or
call
and
test
mov
pushf
sar
ss
enter
sbb
loope
add
adc
outsl
sahf
xlat
popl
dec
cmp
mov
repnz
mov
std
test
jo
mov
inc
push
cmp
pop
xchg
in
xchg
mov
mov
ret
aad
mov
mov
adc
cs
or
push
out
psubsw
or
lea
and
add
dec
les
xlat
or
cli
add
cmc
cmc
addb
mov
push
fwait
cmp
inc
or
cs
loop
push
js
scas
test
adc
or
pop
sub
mov
jecxz
inc
stos
push
mov
test
loop
out
adc
pop
movb
mov
dec
pop
xchg
shlb
sbb
inc
lods
cmp
aad
fmull
xor
mov
and
pop
push
push
scas
xorb
adc
push
test
je
addr16
mov
test
pusha
es
mov
push
shl
jmp
cltd
pop
inc
jl
rcrl
xchg
add
mov
inc
sub
loopne
sbb
cs
dec
xchg
or
adc
adc
pop
pop
cmpb
sub
ret
movb
pop
sbb
lods
rol
sarb
add
ret
push
movsb
mov
mov
sub
pop
dec
bound
adcb
inc
dec
sbb
pop
sbb
popf
enter
push
enter
ja
mov
and
xchg
add
jb
jnp
loop
jbe
xchg
jae
out
push
cmp
add
mov
leave
add
insl
sarl
rcll
mov
adc
lods
rorb
jl
mov
add
shl
mov
xchg
jecxz
pop
cmc
cli
fwait
jmp
addl
adc
push
inc
mov
or
xchg
and
lret
xor
fisubrl
jnp
test
clc
sbb
sbb
pop
mov
in
fisubl
outsb
test
stos
mov
xor
add
nop
xchg
inc
lock
cmc
sarb
xchg
adc
clc
clc
add
inc
mov
cmc
inc
push
aas
pop
aad
andl
sbb
or
dec
lret
pop
fmul
mov
test
jo
mov
mov
insb
sbb
adc
add
pop
inc
arpl
sarb
and
das
stc
add
mov
xchg
and
or
cmc
push
mov
mov
int
in
ljmp
jl
pop
shlb
ret
inc
sub
ret
mov
xchg
mov
shll
jb
ret
ljmp
push
or
leave
mov
test
in
sbb
sbbb
xor
cmp
push
mov
pop
push
repnz
cmp
ja
adc
xor
adc
push
inc
mov
or
cmp
xchg
sbb
bound
sub
jno
ret
adc
pop
daa
push
sub
inc
inc
aad
es
cmp
or
rcrb
push
add
cmp
movsl
push
add
or
lods
rorb
adc
mov
or
test
pop
lret
and
dec
or
sub
or
push
sub
push
mov
push
xor
mov
mov
push
rorl
rcrl
cmp
loopne
jp
jbe
ljmp
pop
dec
sub
fiadds
and
xor
mov
nop
jb
adc
adc
mov
imul
dec
imul
repnz
push
aad
sbb
push
pop
sbb
lret
mov
lods
mov
js
adcl
push
es
lret
inc
pop
sub
inc
mov
push
lret
scas
rolb
sbb
adc
mov
inc
enter
add
adc
je
add
pop
push
mov
mov
add
das
in
push
and
test
cmp
inc
pop
loope
out
in
int3
or
dec
cld
dec
cmp
or
inc
add
adc
jne
adc
adc
shlb
hlt
inc
es
mov
jo
sbb
dec
dec
rolb
aaa
or
push
cmp
adc
into
rolb
lea
aad
pop
mov
pop
lods
mov
sub
add
aad
inc
add
or
mov
sbb
jmp
popf
mov
sub
xor
adc
push
xor
pop
or
leave
xor
mov
and
dec
sbb
outsl
andl
in
sbbb
mov
jb
loopne
idivb
pop
adc
or
jge
pop
ljmp
and
stos
shrb
push
or
xchg
outsb
jae
adcb
xor
dec
roll
inc
push
pop
jge
jge
sub
push
push
lods
sub
pop
int3
jne
adcl
out
xchg
lret
test
sbb
sarb
add
gs
or
add
das
push
jae
test
dec
loopne
stos
add
jnp
add
sbb
xor
and
pop
lods
mov
sub
or
push
jmp
mov
mov
lock
add
sbb
icebp
pushf
add
daa
push
iret
push
leave
pop
mov
stc
rcl
or
shlb
rcrb
mov
pop
scas
push
cltd
das
adc
pop
pusha
lret
out
shrl
push
cwtl
rolb
sub
push
jge
add
outsb
popw
enter
out
dec
sti
bound
mov
dec
sub
lock
sub
bound
push
or
orb
push
push
push
jo
jp
lcall
xor
cmpl
subl
and
je
pop
cmp
push
add
insb
mov
dec
mov
in
inc
loopne
inc
lret
cs
xor
mov
mov
pop
repz
or
fs
jnp
lea
shrl
and
and
cmp
cmp
or
add
shll
xchg
dec
mov
adc
jle
lods
fsubs
mov
lret
sbb
clc
shll
or
and
popa
mov
add
and
sbb
jb
mov
push
sub
sub
sbb
or
les
or
orl
outsl
mov
mov
lea
xor
pop
aam
xchg
in
dec
add
pop
jno
mov
cmc
scas
push
mov
andb
mov
pop
jo
cmp
add
push
push
mov
sub
push
sarl
lock
mov
dec
adc
inc
mov
in
push
inc
mov
popa
dec
movb
mov
mov
insb
cmp
mov
dec
int
das
dec
xor
adc
and
pop
and
or
jl
sbb
push
inc
loopne
mov
pusha
or
mov
iret
sbb
or
dec
add
push
push
mov
enter
push
pusha
push
into
push
pop
pusha
xor
ret
pop
mov
pushf
sbb
xchg
xor
sub
dec
pusha
sub
xor
sub
rcll
adc
mov
add
loopne
inc
notb
mov
ljmp
and
rorl
inc
fcmovnbe
in
dec
push
or
cmpsb
pusha
and
mov
and
ficoml
fmul
xchg
mov
xor
in
jbe
aad
xor
inc
jb
sbb
dec
js
pop
mov
popf
loopne
loop
lcall
inc
mov
adcl
or
mov
mov
addr16
in
mov
daa
adc
fs
cmpsb
enter
or
test
insb
xlat
xchg
scas
or
mov
adc
mov
xchg
cmp
in
sub
xor
dec
lcall
sbb
idiv
adc
jbe
scas
jb
bound
out
sub
dec
adc
loopne
lods
fwait
sub
sbb
mov
xchg
jae
shll
sbb
jo
loopne
push
sahf
in
push
test
or
push
sub
pop
rcrb
push
push
xchg
pop
mov
mov
lock
xor
sub
sbb
push
inc
inc
jmp
pop
xchg
mov
test
mov
roll
enter
sbb
es
add
stc
aad
arpl
mov
sub
mov
mov
cmp
mov
inc
lock
xor
jge
std
or
aaa
lcall
pop
in
aaa
mov
nop
clc
test
push
sub
pop
lock
inc
and
fcoms
rcll
push
jmp
xchg
add
push
pusha
mov
dec
add
in
repnz
mov
inc
sar
add
setl
dec
lret
sarb
pop
aam
test
sahf
ffreep
out
fcom
or
or
xor
add
mov
cmp
aaa
mov
fdivrl
cmpsb
jge
add
add
add
mov
mov
mov
adc
loopne
cmp
test
popa
clc
aas
or
test
pop
rorb
mov
add
jge
leave
inc
stos
aas
jge
mov
mov
pushf
scas
in
sub
insb
scas
sub
jmp
or
add
mov
add
aad
es
iret
loopne
sbb
mov
stos
add
jne
ja
or
arpl
cmp
push
xchg
or
push
sbb
adc
in
add
inc
push
ret
xor
orb
scas
ljmp
lret
daa
inc
or
push
gs
sbb
xor
popa
loopne
loop
adc
add
dec
adc
mov
inc
subb
popa
xor
in
call
add
call
rcll
adc
inc
sbb
add
or
push
jne
cmp
or
add
into
sti
jo
sbb
jmp
adc
test
or
mov
int3
aam
inc
sub
pop
inc
push
cmc
push
repnz
rsqrtps
inc
adc
add
shl
push
adc
test
not
dec
roll
sbb
mov
rcll
mov
sarb
mov
movsl
shr
inc
lret
jo
cmp
inc
xchg
test
inc
fwait
icebp
mov
mov
xchg
dec
push
jo
cmp
cmp
jo
jb
popf
shrl
rcrl
les
push
cmp
add
mov
xor
sbb
jecxz
int
sbb
or
inc
cltd
add
jne
lods
inc
inc
mov
pop
sub
jnp
or
jbe
jae
inc
xchg
xchg
ffree
popa
sbb
pop
gs
jo
aad
sub
call
push
aaa
mov
or
xor
sbb
sarb
jo
or
add
pop
push
xchg
lea
push
outsb
mov
sarl
loopne
in
cwtl
mov
xor
inc
jnp
lret
cwtl
stos
push
or
or
inc
adc
add
and
cmp
mov
cmp
xor
inc
cmpl
mov
popa
mov
add
lods
mov
sarb
dec
push
add
aam
sbb
and
xchg
cld
lds
je
or
call
and
bound
sbb
add
sarb
mov
push
cld
push
push
and
xchg
jnp
rolb
add
rcll
or
or
sbb
mov
push
sub
inc
arpl
loope
fiadds
mov
jb
pop
inc
sysenter
test
jmp
ret
fadds
cltd
push
xchg
xchg
xchg
stc
inc
sub
pop
cmp
jp
push
sub
pop
je
push
test
push
xor
mov
pop
rorl
out
adcb
sbb
clc
pop
out
or
push
pop
cmp
push
and
or
insl
push
mov
add
cmp
inc
xchg
mov
pop
push
or
add
xchg
cmp
lods
rcrl
pop
orl
lea
cltd
jmp
repnz
add
daa
and
push
mov
pop
rsm
add
adc
das
dec
cmc
adc
inc
dec
rolb
mov
cmp
push
jmp
push
or
pop
sbb
movsb
xchg
adc
push
inc
mov
pop
dec
loopne
shr
leave
ljmp
mov
jbe
cmpl
mov
into
mov
or
mov
and
lds
or
add
cwtl
mov
push
or
pop
add
dec
ja
push
dec
daa
jp
movsl
add
nop
jmp
xchg
sbb
andb
mov
lock
pop
or
pop
clc
and
add
roll
push
add
sti
loope
dec
add
clc
pop
rcll
leave
call
andl
mov
push
or
loopne
aas
jns
test
push
inc
xchg
dec
push
xor
xor
sbb
loope
push
hlt
add
sbb
sub
nop
leave
xlat
sbb
pop
inc
xlat
and
dec
push
xlat
or
pop
lret
jae
jne
add
pop
cmp
mov
and
in
pushf
pop
cmpsb
push
out
add
sarb
sub
ret
mov
pusha
test
pop
je
jl
or
xchg
jb
sbb
rol
orb
nop
sub
add
aam
test
pop
scas
out
jmp
int
dec
pop
push
push
js
popa
add
je
sarl
dec
adc
mov
lret
stos
push
pop
cs
inc
call
mov
inc
nop
nop
xchg
pop
test
push
inc
and
aam
inc
mov
push
cmp
es
xchg
jb
test
mov
jno
inc
lea
adc
mov
pop
and
decb
xchg
push
xor
and
pop
call
mov
testb
push
add
leave
lea
xor
daa
cmp
adc
pop
gs
in
test
inc
sbb
push
cmp
add
sub
aam
sub
mov
cmp
and
xchg
or
in
mov
inc
je
push
adc
aam
pop
xchg
popa
mov
into
dec
adc
out
pushf
orl
insl
inc
push
push
fcomip
mov
pop
push
xor
sarb
in
sar
jnp
adc
push
dec
fwait
cli
sbb
inc
movsb
or
rcll
enter
sbb
call
ja
bound
popa
lcall
sbb
test
rcrb
sarl
mov
mov
mov
test
add
loop
pop
bt
sbb
ret
das
xchg
inc
xorb
test
icebp
mov
js
pop
add
pop
scas
movsl
cmp
sub
push
cmp
adc
sub
mov
and
xor
filds
pusha
inc
scas
dec
xor
adc
rcll
movsl
bound
or
repz
jp
out
mov
sbb
dec
pop
xor
xlat
push
jo
inc
sbb
add
add
in
lret
loopne
movb
adc
shlb
push
pop
ret
cmp
sub
movsl
sbb
cmp
ljmp
xchg
inc
roll
imul
mov
xchg
and
loopne
out
push
mov
push
test
add
jo
pushf
jmp
stc
sbb
cmp
lods
fwait
adc
sub
sbb
mov
out
sahf
out
inc
xchg
add
xorb
cli
pop
pop
or
or
test
mov
ret
jae
sahf
stc
leave
lods
leave
cmpsl
mov
setp
add
add
mov
push
fmulp
lock
adc
aad
into
add
pop
jo
and
adcb
ljmp
add
lds
dec
xor
pushf
push
inc
into
imul
pop
jne
rcrb
mov
fildl
mov
mov
stos
cmp
mov
andl
mov
pop
dec
add
push
or
and
shr
or
sub
rclb
xor
push
jle
and
xchg
xchg
add
dec
mov
push
sbb
call
js
test
ror
dec
orb
mov
leave
adcb
je
sbb
dec
in
inc
pop
pop
rcrl
xchg
dec
jne
cmc
adc
push
repz
adc
faddl
mov
sub
xor
push
push
movsl
cmpsb
pop
xchg
mov
ret
les
push
adc
dec
fisubrs
or
adc
adc
adc
xchg
mov
cmp
pop
mov
and
clc
cmp
dec
test
cli
ds
int3
add
jns
lar
inc
jecxz
divb
ficoms
adc
clc
leave
popf
shll
subl
sbb
test
into
iret
sbb
and
hlt
rol
data16
mov
mov
xlat
add
subb
jo
stos
outsb
call
inc
xchg
xchg
popa
adc
popa
sub
jae
or
sbb
and
adcb
outsl
push
mov
adc
stos
adc
pop
xchg
inc
xchg
add
or
inc
jno
pop
push
lea
pop
adc
add
clc
or
push
pop
adc
je
insl
cli
cmp
mov
mov
call
sarl
nop
or
or
ret
repnz
or
jecxz
cs
sbb
pusha
mov
mov
mov
imul
push
push
and
incl
mov
sahf
sub
shl
stos
pusha
ds
pop
adc
add
sub
cs
push
mov
test
and
push
mov
shll
ret
aad
mov
inc
movsl
xor
movsl
push
jno
adc
fcoms
jo
push
clc
jne
push
lods
sbb
cwtl
rcll
adc
loope
lock
mov
sub
pop
test
and
mov
pop
pushf
add
fs
push
and
or
adcl
test
mov
das
or
arpl
call
out
insb
sbb
push
dec
jge
pop
mov
and
xchg
push
add
adc
inc
pop
daa
adc
ret
xchg
rclb
mov
fisubrl
and
inc
push
xchg
sbb
jo
xchg
sub
pop
or
int3
or
push
aad
fsubrp
mov
sbb
gs
stc
or
mov
pop
xchg
or
xor
xchg
push
sarl
mov
clc
pop
xchg
or
pop
in
lock
rcrb
or
cmp
lods
adc
outsb
xchg
addl
or
and
push
inc
mov
rcrb
jp
dec
ret
nop
or
or
or
cmc
aam
lds
das
mov
inc
fwait
mov
sbb
and
movsb
mov
mov
and
repnz
shl
negb
addl
jae
popf
and
stc
sub
mov
icebp
pop
jmp
sti
sbbb
shlb
bnd
aam
and
dec
scas
push
test
andl
movb
into
stos
pop
inc
fldcw
lret
scas
xchg
int
add
push
inc
mov
or
fs
inc
imul
jno
or
jmp
mov
cs
les
push
mov
ret
cld
setne
pop
or
cmp
or
xchg
icebp
push
insb
cmpsb
push
loope
sbb
jg
xchg
popa
ljmp
pop
xor
sbb
xlat
or
mov
add
cmpsb
xchg
push
add
push
or
pop
ret
push
js
fsubrs
rol
push
jge
or
cli
shrl
inc
push
push
sbb
aaa
xchg
fbld
xor
ljmp
add
push
call
shr
fsubs
sub
adc
into
sti
mov
lret
lds
push
mov
xchg
out
push
sbb
sbb
ds
jne
bound
xchg
xchg
jge
adc
cmp
shrb
push
test
pop
pop
sub
pushf
add
pop
inc
ja
aad
out
dec
jp
mov
add
andb
and
dec
in
push
stos
lret
int
repnz
out
add
inc
mov
rorl
jl
aad
cmovl
inc
sub
pop
mov
sbb
cltd
adc
jecxz
xor
test
stos
inc
scas
sub
mov
shlb
nop
cmpsb
xchg
xor
pop
add
shll
test
jbe
xchg
mov
push
sbb
ss
or
outsl
stos
inc
inc
cmp
scas
rcl
jo
add
mov
xchg
adcb
mov
je
push
test
adc
movsl
pop
or
ret
into
and
loope
cltd
add
inc
sbb
add
lods
mov
mov
add
and
mov
loop
lea
mov
mov
adc
jb
mul
call
aam
aaa
adc
mov
sbb
mov
lret
sbb
mov
or
cli
sarl
mov
mov
mov
fistps
mov
popf
push
test
dec
lahf
inc
cltd
movsl
dec
daa
add
and
aam
movsb
rcrl
les
inc
sub
gs
jno
push
testl
pop
jg
stc
movsl
sub
insb
xchg
jb
inc
negb
int
test
mov
lods
and
jle
and
leave
sub
and
and
add
add
add
pop
mov
ret
std
fsts
sub
push
dec
pop
pop
and
push
iret
add
push
adc
dec
aam
adc
or
adc
iret
shr
xchg
pusha
lods
cs
inc
dec
sub
add
jmp
push
call
mov
cs
pop
inc
mov
clc
mov
xchg
hlt
push
idivb
jge
ret
xor
aad
cmpl
ss
push
mov
cli
or
insl
sub
mov
jnp
mov
shrl
std
pushf
ljmp
stc
add
inc
jmp
stc
dec
repz
adc
or
sub
adc
or
push
mov
adc
mov
sub
rolb
bound
clc
mov
push
push
cmpsb
mov
mov
add
cmp
sbbl
shlb
das
pushf
jb
add
ja
dec
mov
mov
add
adc
push
daa
mov
and
adc
insl
or
sbb
mov
repz
inc
cs
sar
cltd
scas
mov
or
or
adc
leave
loop
push
fs
mov
aam
daa
mov
repz
nop
test
aas
adc
push
es
or
mov
mov
push
psrld
fdivs
test
xchg
mov
lock
scas
rcrl
push
scas
sbb
xchg
or
xchg
or
push
mov
jmp
adc
mov
cmp
add
adc
jb
cltd
inc
push
adc
fsubrl
mov
or
inc
add
push
test
mov
jp
mov
jo
sbb
jne
sbb
adc
sub
dec
pop
ror
into
mov
aaa
and
in
push
sub
jb
movsb
push
aam
jecxz
inc
xor
xor
add
add
fistpll
or
aaa
testb
fucomip
inc
sbb
inc
jne
push
iret
aam
pop
in
and
jo
add
xor
pop
mov
ret
adc
sub
cwtl
stos
adc
jo
mov
jo
mov
ret
inc
cmp
nopl
aam
xor
cmp
push
and
insl
xchg
xchg
adc
push
mov
loope
cmpsl
cld
idivb
adc
jp
aad
into
mov
jns
ret
push
push
jno
orl
add
lock
adc
or
inc
adc
sub
sbb
adc
dec
pushf
jecxz
ljmp
data16
xchg
rolb
js
ret
pop
sub
jo
and
cmp
sbb
test
loopne
out
sbb
jo
pushf
or
or
into
sbb
lret
xor
icebp
jne
mov
movsl
hlt
pushf
push
test
push
scas
add
movsl
add
cltd
or
inc
add
dec
je
shlb
in
or
jmp
push
and
mov
in
cmp
push
icebp
sub
pop
push
pop
cwtl
sbb
or
or
inc
clc
roll
sub
dec
cmpb
inc
adc
test
pushf
pop
popf
sbb
out
hlt
xor
subb
ret
or
push
inc
jae
xor
add
loopne
inc
add
cmpb
sbb
aam
mov
rol
add
cltd
out
mov
dec
add
mov
or
add
rorb
xchg
out
inc
out
pop
pop
add
arpl
test
dec
mov
xor
imul
mov
divb
or
xor
sub
lret
push
mov
or
inc
sbb
ljmp
mov
xchg
jecxz
mov
ljmp
push
push
sub
mov
cmp
mov
pop
cmp
andl
mov
aam
or
rcl
adc
add
or
movsb
xchg
repnz
sbb
les
inc
imul
lret
cmpsb
inc
dec
mov
add
or
test
dec
shlb
add
mov
rorl
pop
inc
addr16
xor
adc
xor
lcall
mov
or
xor
push
sub
inc
dec
push
push
mov
test
inc
int3
mov
adc
data16
inc
add
sub
ret
add
bound
and
fdivl
imul
jge
push
push
add
mov
lock
mov
or
shlb
cmp
add
sub
or
inc
pop
dec
test
push
inc
mov
out
sbb
inc
test
inc
in
add
inc
stos
add
sbb
stos
out
add
xchg
ret
ret
loop
jo
dec
es
and
sub
cwtl
mov
mov
pop
nop
sub
adc
add
bound
cwtl
enter
shll
mov
add
and
jg
fimull
add
xor
mov
pop
dec
push
test
je
pop
inc
adc
and
xchg
pop
push
sub
xchg
mov
mov
icebp
mov
dec
stos
mov
arpl
push
inc
daa
fisubl
movsb
or
nop
or
mov
test
aam
cmp
out
lds
push
cli
push
sub
aaa
and
sbb
hlt
xor
xchg
mov
sbb
xor
or
or
sbb
or
mov
push
cmovno
inc
enter
mov
pop
and
push
add
adc
ljmp
inc
xchg
cmpsb
test
add
stos
inc
sbb
cwtl
mov
sub
shll
mov
lds
enter
enter
pop
or
push
dec
daa
je
aaa
jge
lods
pop
and
mov
xor
in
adc
xor
xor
cmp
aad
stos
or
sbb
fs
xchg
and
cltd
inc
mov
mov
push
ret
xchg
sbb
xor
bndstx
sub
icebp
pop
cmp
jg
ficompl
push
xchg
push
cmp
cmp
mov
clc
testb
inc
je
sbb
mov
push
push
pop
aad
enter
mov
adc
add
sub
sub
lods
sbb
pop
add
or
addr16
popf
mov
cmp
push
push
scas
push
push
mov
jb
dec
loopne
push
out
fldl
and
cs
andl
out
xchg
in
inc
rorl
lea
dec
fyl2x
subb
mov
lds
mov
js
push
test
xor
cmp
insb
pop
popf
push
and
sbb
pop
roll
push
lea
add
ds
adc
mov
or
popa
es
or
and
mov
int
push
xor
adc
rorb
negb
lods
data16
das
or
enter
lcall
xchg
mov
pop
sub
xorl
pop
inc
int
addb
mov
mov
add
or
xchg
cmp
jb
xor
orb
sar
adc
mov
out
sub
shrb
out
lea
daa
ret
inc
cltd
sbb
sbb
cmc
push
adc
mov
int
push
pop
or
xlat
fildl
sbb
inc
inc
cmp
or
mov
pop
sbb
inc
std
and
add
xor
pop
into
xor
push
rcll
jmp
jbe
push
mov
xchg
clc
icebp
scas
mov
xchg
mov
xor
inc
mov
mov
adc
mov
pop
fildl
cmp
imul
add
mov
mov
sbbl
push
das
pop
adc
ljmp
and
mov
in
inc
and
push
mov
les
test
push
lds
cmp
inc
xor
scas
insl
push
mov
sbb
inc
adc
mov
in
mov
sbb
sub
mov
mov
dec
dec
add
push
les
ret
aas
scas
rorb
cmp
mov
stc
daa
sbb
adcl
add
test
dec
cmp
aad
push
stos
adc
or
call
and
pop
add
addb
pusha
and
out
aam
pop
inc
pushf
leave
sbb
pop
gs
fs
pop
imul
jp
mov
dec
or
inc
mov
jmp
lret
inc
mov
pop
mov
pop
lcall
shrb
popa
cmp
aad
add
sub
push
cmp
rcll
insl
push
jo
js
mov
in
addb
cltd
clc
mov
cmpsb
push
addl
mov
and
cmc
push
rorb
inc
cmpsb
adc
clc
or
cmp
pop
cwtl
jo
scas
xor
sub
sub
dec
loope
call
das
imul
or
jne
dec
test
pop
sub
add
idiv
or
push
jb
mov
cwtl
or
pusha
mov
add
cmc
mov
mov
icebp
loope
cmp
rcrl
fwait
push
adc
add
cmp
fisubl
into
popa
push
lods
mov
test
lock
or
daa
jp
and
push
jb
inc
in
adc
mov
push
insb
loopne
fld
sti
inc
mov
jne
cmpsl
call
adc
push
loope
inc
stos
jb
sub
xorl
icebp
jp
mov
ss
lea
mov
orl
lret
cli
push
push
decl
jne
sbb
sarl
adc
sbb
rclb
shl
addb
mov
and
mov
pop
push
js
adc
orb
push
sbb
add
andb
cmp
adc
test
inc
lods
lods
sub
adcl
push
outsl
adc
rolb
stos
xchg
xor
inc
xor
ds
mov
mov
dec
or
jmp
sbb
roll
scas
shrl
sub
rclb
push
in
ret
xor
push
repnz
push
out
and
xchg
sub
mov
jl
pop
and
push
shlb
add
dec
lock
pusha
adc
push
cmp
mov
adc
push
or
pop
lret
adc
or
or
xorl
add
rcr
adc
pop
and
xchg
mov
les
mov
mov
xor
movsl
in
daa
out
push
lret
push
or
stos
mov
shl
xchg
out
in
leave
mov
loopne
jo
rcl
sbb
push
mov
cmpsb
andl
cmp
jae
xor
sbb
add
rolb
nop
daa
or
leave
cmp
shrl
inc
rclb
loope
call
or
mov
test
and
cmpsb
movsb
pop
test
jecxz
sub
clc
cli
mov
inc
sbb
cwtl
mov
push
test
push
aad
in
push
inc
es
mov
adc
stos
mov
dec
mov
nop
stos
cmpsb
sub
fisubl
jmp
stos
psadbw
aam
sarb
cmp
rclb
rcrl
push
cli
pop
adc
xchg
add
inc
jl
add
sbb
mov
sbb
cmpsb
int3
mov
stos
ljmp
mov
mov
inc
mov
adc
cld
mov
filds
movsl
and
or
lret
jb
mov
stc
and
pop
movsl
sbb
mov
and
stos
sub
push
andl
fwait
in
ret
addr16
mov
leave
mov
popf
pop
mov
stos
push
mov
dec
mov
ds
xchg
and
call
data16
arpl
mov
mov
xor
ret
orl
add
pop
lea
mov
push
sub
jmp
pop
pop
push
into
mov
mov
sbb
aad
leave
psubq
mov
xchg
mov
dec
test
shll
rolb
jg
pop
or
fnstcw
add
jmp
sub
sub
push
mov
icebp
fs
inc
sbb
shlb
ret
jns
xor
cmc
fsubr
enter
sub
add
data16
sarl
roll
sub
testb
pop
push
daa
or
mov
or
arpl
inc
xor
cmova
dec
jmp
jp
add
sub
jo
adc
mov
popf
into
cmp
push
test
int
inc
sbb
cmp
mov
mov
xchg
mov
xor
inc
ud1
push
dec
or
mov
cmpsb
adc
in
lcall
add
xor
cwtl
add
cmp
push
sub
mov
sbb
ret
cmp
sbb
or
xor
push
movsb
mov
sbb
sub
or
jb
mov
mov
out
sub
stos
shlb
jnp
je
pop
or
adc
adc
sub
jne
adc
or
fsubrl
out
jnp
sub
add
ret
push
and
lret
or
movsb
jae
ret
mov
inc
lods
push
sbb
int3
mov
in
cmp
add
adc
jl
or
add
ja
sbb
sbb
xchg
stc
ret
in
faddl
adc
add
push
pop
jle
or
jne
sbb
ret
add
sbb
adc
mov
inc
cmpsb
into
sub
cltd
sbb
dec
insl
jmp
fdivl
xor
mov
aam
mov
adc
in
mov
ds
scas
cli
mov
es
xchg
pop
push
out
inc
push
stos
dec
sbb
pushf
aad
push
int
pop
lret
jp
dec
rorb
arpl
fiaddl
outsl
jnp
rcll
or
jo
into
gs
add
push
xor
adc
xlat
lcall
mov
out
or
sbb
ds
jge
or
or
mov
mov
xor
dec
pop
cmp
lock
or
sbb
jne
lock
and
push
add
add
cmpb
pop
enter
test
and
mov
jb
mov
xchg
dec
sbb
push
push
mov
jmp
adc
mov
aam
cmpsl
adc
lods
cmp
add
cltd
aad
pop
scas
jle
mov
cwtl
adc
adc
aam
pop
or
dec
aad
or
sub
lahf
mov
jo
pop
push
mov
adc
lock
xchg
adc
mov
or
flds
mov
jne
mov
xchg
outsb
insb
sbb
mov
ret
ljmp
aam
add
stos
test
das
add
pop
aad
pop
rorl
pushf
dec
inc
aaa
push
and
incb
cmp
je
push
je
inc
enter
loopne
sub
je
mov
inc
sub
lret
roll
cld
movb
push
rcrl
adc
movb
inc
add
xchg
pop
xor
sub
or
fwait
pop
push
mov
ljmp
es
leave
push
xor
and
js
movsl
sbb
loopne
inc
lds
mov
and
inc
mov
add
and
out
arpl
sbb
adc
leave
xor
push
ret
add
xchg
jb
cmp
mov
inc
adc
mov
add
aam
lock
add
sub
add
cmc
pop
adc
js
nop
xchg
dec
and
xchg
mov
push
rcr
push
sbb
dec
cs
push
aam
sbb
rcll
sub
add
cs
sarl
adc
mov
jo
les
repnz
test
and
dec
push
mov
mov
in
mov
fs
inc
adc
es
in
pop
mov
sbb
jmp
and
mov
mov
sub
push
ret
loopne
pop
mov
and
mov
dec
xor
enter
add
add
and
pop
push
rcl
jo
testb
negb
cmp
test
cmp
cs
add
test
pop
popf
test
cmp
lret
xor
data16
js
or
or
adc
pop
js
inc
cmc
sbb
movsb
mov
mov
movl
add
in
push
xchg
mov
stos
push
sub
push
scas
mov
cwtl
sbb
loop
jo
push
ss
sbb
jno
or
or
pop
add
xchg
lods
loop
mov
scas
sbbb
cli
cmovns
and
pop
xchg
push
ja
add
add
adc
or
int3
mov
sub
push
fisubrs
or
sub
into
lahf
gs
inc
lods
lock
add
adc
loopne
mov
dec
fstpl
add
push
shrl
imul
flds
jge
dec
add
pop
adc
mov
xchg
jmp
rcl
adc
add
sbb
pop
sub
mov
clc
and
pop
clc
sbb
iret
push
mov
imul
sbb
mov
stc
add
lods
mov
inc
xor
add
lret
or
orl
fbstp
push
mov
movsb
stos
add
mov
push
inc
inc
pop
or
jp
xor
dec
scas
push
adcb
push
jl
xchg
rorl
inc
and
or
shlb
lcall
pusha
std
mov
and
or
dec
cmp
ret
les
stos
mov
in
or
push
cmp
add
push
cmp
inc
mov
dec
push
scas
mov
add
mov
xchg
popf
xor
push
rclb
inc
add
psadbw
int
and
sub
sbb
inc
and
insb
orb
out
adc
dec
cmp
xchg
mov
sahf
cmpsl
jmp
in
ljmp
mov
or
and
insl
das
dec
jp
or
jl
push
lcall
add
cmp
lds
loopne
mov
add
leave
jl
mov
inc
inc
add
lock
or
in
leave
lock
pop
outsl
mov
mov
mov
inc
and
lcall
sbb
xor
push
add
lock
push
mov
sbb
sti
in
inc
mov
loop
cld
or
pop
xchg
mov
lea
or
xor
imull
push
xchg
and
or
pop
rclb
add
test
sbb
push
sub
or
pop
shrl
shlb
into
adc
aaa
hlt
mov
shll
xor
pop
out
adc
inc
leave
add
add
and
adc
enter
xchg
decl
or
mov
pushf
pop
jecxz
scas
and
bextr
adc
adc
and
sbb
pop
inc
inc
mov
adcl
test
xchg
add
add
adc
ljmp
and
pop
pop
js
sbb
jne
mov
inc
push
jns
repz
loop
loopne
or
inc
sbb
cmp
add
add
call
leave
je
cmp
pop
gs
push
ret
loop
lods
jbe
mov
cwtl
and
rcrl
cmp
int
in
mov
cmp
push
lahf
sarb
xorb
push
les
inc
test
pop
adc
pop
lds
leave
or
sub
stos
outsb
aas
mov
xchg
loope
icebp
inc
clc
pop
and
sbb
adc
mov
pop
in
mov
arpl
add
mov
mov
push
push
inc
sbb
inc
adc
icebp
push
dec
roll
push
repnz
popa
and
cld
scas
pusha
add
hlt
test
dec
jae
lea
mov
imul
andb
add
jb
mov
add
into
stos
icebp
stos
sbb
adc
pop
pop
xchg
mov
xor
jmp
xor
leave
and
sbbb
mov
pop
push
sub
push
bound
pop
cmpsl
ja
jecxz
pop
insl
pop
loopne
mov
pop
push
mov
hlt
call
and
xchg
mov
inc
pop
out
or
into
daa
jl
cld
or
or
pop
test
push
pop
mov
or
test
mov
test
in
mov
sbb
pop
idivl
xor
mov
push
rorl
mov
sbb
or
jb
inc
rcr
pop
push
cwtl
mov
xchg
xchg
cmpl
jae
inc
popf
sub
ffree
sub
push
cmp
sub
adc
rolb
mov
jl
jns
rol
es
push
push
jnp
mov
pop
mov
dec
adc
fcomps
stos
stos
xchg
lock
shll
mov
ret
in
loop
pop
or
mov
and
shl
int
sbb
push
add
mov
mov
xchg
add
clc
or
jae
mov
push
ret
pusha
lret
jo
jne
fimuls
push
cmpsl
cmp
jge
or
lret
and
adc
int
cmpl
scas
loopne
adc
aad
sub
push
mov
pop
sbb
testb
das
je
pop
xchg
or
mov
xchg
addr16
or
rol
add
sub
push
and
push
test
pop
test
fsubrl
jo
dec
in
push
adc
push
cmc
les
push
add
cmpsb
sub
repnz
push
popa
pop
and
ljmp
rcr
add
and
push
lret
les
mov
push
popa
and
add
ret
xor
inc
in
pop
and
ss
mov
add
dec
shl
je
sbb
xchg
test
cli
jle
mov
leave
pop
push
pop
nop
sub
mov
or
rcr
mov
xchg
cli
loop
sbb
sbb
mov
sarl
sbb
dec
popa
cli
add
cmovl
adcb
cmp
push
adc
adc
jg
cwtl
fimull
rcll
sti
test
push
pop
cld
adc
and
or
mov
jo
push
out
add
add
hlt
pop
roll
add
movl
sub
xchg
popl
and
sbb
sbb
mov
sub
push
or
movsb
xchg
daa
cwtl
or
push
lock
sbb
push
add
push
add
or
test
sbb
rolb
iret
lea
pop
pop
mov
je
jo
and
cli
or
jnp
adc
mov
push
add
push
xchg
int
jbe
pop
sbb
mov
and
out
or
clc
les
xor
sub
fsubrs
adc
test
cmpsb
fcoml
cmp
xchg
jae
lret
sub
pop
or
lods
or
sbb
bound
mov
adc
sbbb
and
cmp
xchg
aad
jl
cli
adc
ret
push
or
inc
cs
mov
push
push
sti
sbb
add
or
add
pop
shl
lret
lock
popa
xor
fs
xchg
fistpll
leave
data16
lock
sbb
add
pusha
shlb
sbb
mov
add
adc
or
or
test
popa
mov
and
aad
enter
xor
dec
shrl
and
out
or
bound
add
lcall
or
scas
xchg
adc
js
dec
add
or
cltd
testl
sbb
mov
cmpsl
dec
mov
dec
pop
popf
stc
sbb
icebp
inc
sub
jo
and
add
adc
out
mov
mov
das
sub
jno
subb
sub
mov
std
sub
push
mov
adc
sbb
lret
andb
jle
fisubl
add
nop
scas
ret
xor
mov
enter
sbb
lods
push
scas
or
xorb
jo
push
push
rclb
ss
push
dec
adc
rcll
push
or
mov
repnz
mov
pop
mov
jecxz
shlb
bound
cmp
sarb
add
or
ljmp
or
inc
icebp
or
or
dec
aam
sub
sbb
mov
dec
and
push
and
sub
imulb
pop
fs
push
sbb
mov
pop
aaa
loop
adc
jle
push
and
dec
adc
mov
addb
in
mov
scas
inc
cmpsb
mov
or
add
sbb
aaa
pusha
jne
repnz
pop
add
and
push
mov
sti
ss
or
stos
or
test
popf
inc
add
xchg
pusha
test
cwtl
bswap
jne
lret
ret
cwtl
or
sbb
mov
sbb
mov
sbb
roll
imul
adc
aas
inc
lods
jp
adc
roll
pop
fsubrs
mov
dec
xor
or
adc
adc
push
add
imul
xor
cmp
sub
in
push
or
dec
add
popa
out
add
mov
mov
cmpsb
sahf
jb
insl
sbb
loope
orl
in
jmp
mov
push
aam
cmpsb
stc
sub
punpckhbw
mov
add
add
ss
repz
pop
fimull
or
js
adc
add
xchg
fisubrs
lcall
mov
fs
ljmp
rol
pushf
bound
jb
bound
loop
lods
inc
push
mov
mov
rorb
cmp
icebp
cld
push
cmp
inc
stos
inc
out
popa
or
mov
adcb
into
lret
stc
pop
andl
lock
aad
and
and
xor
jns
lock
das
adc
push
cmpsb
call
jae
xor
rcrl
push
pop
mov
lret
repnz
mulb
add
mov
and
add
adc
adc
fdivs
mov
add
and
or
xor
imul
lret
mov
xchg
sti
sub
adc
xor
hlt
or
or
mov
mov
nop
pop
cmp
xor
push
orb
and
addl
stos
add
cmp
adc
in
ret
and
sbb
or
cmp
push
xchg
sbb
mov
push
or
lahf
mov
loopne
and
ret
dec
leave
cmp
rcll
xchg
leave
ret
cmp
jne
cwtl
mov
push
shrb
mov
push
fs
mov
mov
mov
sbb
xor
repnz
cmp
fcmovbe
out
sbb
sub
or
mov
cmp
or
rorl
pop
push
test
add
pop
push
cwtl
inc
inc
lock
call
shrl
adc
or
push
mov
xor
faddl
xor
lods
sub
repz
stos
add
loop
mov
js
aam
not
lds
mov
xchg
push
inc
pop
shrb
add
stos
scas
movb
mov
jbe
add
icebp
dec
push
shrl
or
xchg
loope
scas
fwait
cmp
mov
jno
shlb
push
test
mov
jb
add
or
push
sub
xchg
aad
jb
xor
mov
or
add
test
int
lgs
outsl
push
lods
loop
push
push
hlt
pop
subb
add
cli
add
mov
rcl
faddl
jp
idivb
jo
push
and
push
mov
sbb
fs
push
mov
popf
test
loope
or
rolb
xor
adc
xor
pusha
call
sub
test
adc
add
mov
xor
jl
fcoms
dec
pop
mov
jp
mov
test
cmp
add
jp
stos
and
xor
inc
pop
adc
push
or
stos
inc
fs
rorl
lock
fiaddl
sbb
dec
scas
mov
inc
pop
sub
dec
xchg
outsb
es
and
sub
sub
adc
mov
or
jb
add
add
rcrl
scas
mov
adc
lods
into
cmp
out
add
orb
shrb
add
mov
add
sbb
mov
cmc
inc
int
mov
xor
fdiv
mov
cmp
add
pop
push
add
inc
hlt
sub
rcr
add
cwtl
stos
and
adc
ror
lcall
xchg
add
cmp
orl
mov
out
cmp
mov
inc
push
int3
icebp
scas
inc
shrb
pop
inc
movsb
movsb
cmpsb
ljmp
xlat
and
xchg
or
daa
adc
ret
dec
aad
stc
lret
popf
pop
loopne
pop
add
inc
cwtl
and
mov
mov
push
aam
push
push
mov
sbb
inc
and
testl
loop
movl
xlat
int
jg
test
pop
subb
sarb
lods
loopne
or
add
into
and
loope
mov
imul
push
mov
add
int
jmp
pop
mov
or
push
xlat
push
les
mov
stos
pop
sbb
call
dec
xchg
dec
sbb
inc
mov
mov
mov
ret
hlt
push
mov
xor
jb
cmpsl
add
pop
push
add
outsb
xchg
push
pusha
or
jg
cs
lock
push
scas
mov
sbb
dec
stos
pop
adc
or
sbb
push
loopne
inc
lahf
push
inc
push
mov
inc
push
push
and
pop
sbb
adc
mul
or
xor
push
jne
or
pop
rorl
orb
jp
add
and
js
loop
push
push
and
sbb
jmp
shrb
dec
int3
pushf
out
xor
jns
jb
push
add
push
push
and
js
adc
jae
in
dec
inc
lods
lcall
es
dec
in
fcoml
adc
push
pop
xor
pop
je
mov
push
lret
shrb
addl
in
shlb
adc
inc
cmpl
dec
pop
jg
xchg
repz
add
test
adc
inc
push
ret
andl
xchg
enter
mulb
inc
loop
pop
incb
xor
pop
dec
push
bound
mov
mov
push
sbb
xchg
int3
dec
add
push
adc
pusha
xchg
jmp
in
inc
leave
inc
push
rol
push
push
xchg
lret
lcall
pop
adc
dec
sbb
cmp
push
push
ror
jb
ljmp
push
or
in
sub
mov
or
fs
lret
fsub
jl
pop
mov
mov
cwtl
cmpsb
pop
nop
xchg
add
mov
lret
ret
inc
enter
adc
mov
push
inc
jmp
or
and
mov
rcll
addb
jb
dec
jg
mov
fldl
sbb
mov
je
in
sbb
loopne
sbb
das
add
inc
rolb
icebp
es
add
loopne
popf
sbb
xor
rcr
orb
mov
pop
push
mov
sbb
lods
ret
adc
sbb
pop
add
or
inc
cmpsl
push
dec
mov
inc
push
dec
or
popa
andb
mov
add
sub
jbe
ljmp
xor
aaa
inc
int
insb
das
jge
and
xor
push
jmp
cmpsb
dec
xchg
sub
sub
repnz
xor
jecxz
jne
push
push
add
push
out
xchg
pop
dec
add
scas
and
in
mov
cmp
mov
scas
pop
lock
jle
test
cmp
sub
pop
mov
and
out
sbb
xchg
lret
mov
aad
addl
and
sbb
xchg
into
enter
jmp
xlat
push
les
adc
movsb
sub
adc
cld
adc
adc
adc
mov
hlt
jb
pop
and
sbb
sub
cmp
stos
lds
test
mov
pushf
inc
or
inc
sub
enter
adc
fsubr
inc
aad
shll
cmp
rcrl
add
pushf
sub
inc
dec
sbb
add
jge
lea
mov
xor
shll
inc
xchg
test
insb
jb
jb
test
lret
adc
inc
fiaddl
xor
or
pop
push
push
push
aam
add
fildll
adc
and
dec
in
adc
shrl
add
push
test
pop
nop
test
push
roll
push
in
hlt
pop
adc
lods
addb
xchg
imul
jmp
or
arpl
push
push
notl
sub
js
jmp
mov
push
add
xor
cltd
sbb
loope
imul
aad
inc
ss
andl
jmp
dec
adc
sarb
loope
lock
add
lret
lcall
adc
xor
rcrb
ret
cmp
lcall
add
cmp
rclb
rorl
push
outsl
push
loope
cmp
and
mov
push
dec
hlt
add
add
dec
and
or
ret
adc
pop
mov
jae
lods
or
push
and
sub
pop
mov
clc
or
test
or
xor
sbb
and
or
movsb
test
add
icebp
push
outsb
xor
xlat
int
cmp
insb
push
push
push
lret
ljmp
adc
push
or
out
inc
jl
add
cmp
push
lret
stc
fisubl
bound
enter
sub
sbb
sbb
mov
inc
cmp
sub
ret
jp
push
sarb
xor
ja
addb
stos
adc
addb
mov
scas
outsl
fstpl
cmp
enter
push
and
inc
dec
adc
adc
das
push
add
mov
push
rolb
shl
or
push
nop
loopne
lret
or
mov
jl
mov
call
lret
xchg
test
mov
ret
lods
pop
and
lods
pop
xchg
jmp
push
sub
lds
sbb
nop
sub
cmp
push
xor
dec
mov
jo
dec
push
xchg
fwait
ss
setnp
out
sbb
add
mov
and
mov
push
mov
add
lret
push
lods
ret
fcmovnu
ret
inc
out
xchg
rolb
lea
dec
dec
xchg
ror
lret
inc
mov
cmpsl
mov
inc
stos
or
add
shll
and
or
jo
xchg
or
inc
test
rol
ret
rol
test
adc
sti
lock
call
push
cwtl
mov
inc
sub
jne
xchg
xchg
jmp
cmp
fwait
add
test
icebp
lret
popa
sub
inc
mov
shrl
push
push
imul
mov
test
and
or
xchg
add
loopne
mov
jo
adc
pop
adc
mov
sub
sbb
xor
adc
cmp
or
lret
and
sbb
and
shrb
pop
je
lahf
or
orl
inc
cmpl
aas
ret
inc
cwtl
ret
jp
jo
add
dec
cwtl
sub
add
jecxz
sub
xor
es
or
inc
or
int3
pushf
hlt
ret
mov
sbb
mov
or
popa
rolb
sbb
mov
orb
imul
adc
sub
shrl
mov
and
mov
xor
mov
arpl
enter
test
es
rcll
sub
lods
into
test
mov
push
adcb
pop
xchg
mov
fbstp
mov
push
lds
cmp
daa
jb
jnp
into
sub
imul
or
pop
add
or
push
lret
icebp
std
dec
sub
lds
mov
jg
pop
sbb
cmp
mov
fnsave
push
in
imull
mov
ljmp
rol
lock
scas
stos
mov
mov
add
push
inc
test
or
push
cmp
rcrl
faddp
push
push
mov
mov
xchg
rorb
mov
sub
jmp
test
dec
mov
mov
adc
or
mov
inc
adc
iret
out
out
add
daa
or
push
arpl
pop
loopne
or
loopne
fs
cmp
xchg
enter
dec
sarb
push
and
xor
xor
orl
mov
adc
add
dec
or
xor
or
lods
pop
or
outsb
pop
pop
fstpt
cs
push
push
inc
imul
push
mov
sub
and
pop
stos
push
cmp
and
adc
and
sub
adc
rcr
test
sbb
scas
in
sbb
pop
mov
stos
adc
pop
xchg
scas
test
and
mov
add
adc
inc
mov
mov
adc
fimuls
pushf
loop
pushf
pop
adc
xor
add
push
and
push
add
test
enter
mov
push
or
or
test
lods
adc
xchg
movb
inc
xor
mov
stos
add
clc
addb
push
insl
and
sub
sub
pop
cmp
push
insb
lret
mov
insb
add
or
ret
insb
add
andl
xor
or
push
push
dec
or
movb
xchg
stos
or
stos
fs
add
stos
jne
sub
sub
mov
and
mov
scas
mov
nop
xor
or
stos
imul
mov
rolb
js
cmp
dec
in
notb
xchg
divb
out
incb
adc
dec
fdivrl
or
orl
xchg
xchg
or
pop
or
adc
dec
sbb
or
xor
inc
adc
xchg
loopne
faddl
imul
fisubl
or
push
rolb
jp
adc
mov
jae
sahf
call
xlat
or
push
nop
sbb
add
mov
ljmp
xor
pop
push
rcll
lock
inc
pop
test
inc
fstps
sahf
push
dec
rcrb
inc
sub
or
scas
leave
ret
or
lds
inc
test
push
fists
aam
fisttpll
adc
mov
or
mov
or
daa
clc
jne
loopne
pop
jbe
imul
jmp
fimull
pop
adc
jp
subb
dec
xchg
xchg
in
loope
in
repnz
rolb
or
xor
inc
sub
cmpsb
or
fld
dec
aam
shll
pop
mov
xchg
push
and
lahf
or
ret
adc
lea
js
mov
icebp
test
shlb
adc
or
adc
iret
sbb
add
xrelease
inc
push
jnp
push
push
sub
sbb
and
xor
addl
push
add
ret
sub
orl
outsb
cmp
mov
dec
push
pop
js
or
sarb
adc
adc
mov
cmp
lods
inc
gs
incl
dec
loope
jns
pop
enter
dec
pushf
rolb
mov
and
sarb
or
loopne
push
aad
or
rcrb
push
push
push
mov
xchg
and
xor
mov
pop
lock
loopne
push
bound
daa
add
dec
push
test
daa
enter
or
rcrl
sub
adc
mov
mov
lret
adc
sub
inc
iret
add
add
mov
jnp
loopne
inc
into
and
popa
sub
test
add
mov
shr
xchg
sbb
aaa
imul
pop
aad
lds
ret
insb
add
push
mov
rorb
pop
push
mov
or
mov
aas
adc
stos
mov
adc
dec
movsb
xor
mov
sub
jge
stc
push
ja
sbbl
or
add
in
ret
loop
dec
test
inc
mov
sahf
push
addl
test
psrad
push
push
clc
stos
adc
push
jecxz
sbb
orl
inc
movl
adc
lcall
pop
inc
fmuls
xchg
gs
pop
add
clc
or
stos
or
bound
leave
sahf
call
or
popf
jp
add
push
xchg
cmp
adc
push
icebp
adcb
nop
test
ljmp
sbb
inc
ret
adc
and
mov
pop
loope
arpl
inc
movsb
sbb
inc
push
sbb
and
adc
push
inc
lods
leave
cmp
xchg
rcll
dec
dec
and
pop
filds
add
outsb
push
sarb
push
xor
movsb
push
inc
or
rol
adc
cmpsb
push
jnp
outsl
cwtl
and
xor
arpl
pop
jg
push
push
push
mov
in
mov
and
inc
loopne
pop
sbb
aam
cmp
jne
test
int
pop
cmp
push
xor
leave
mov
mov
or
push
fcoml
test
add
sbb
or
jne
push
stos
mov
mov
outsl
jo
xchg
cmpb
ret
dec
mov
adc
mov
inc
in
xchg
mov
add
in
jg
jp
or
mov
lods
les
ret
add
loop
xor
shld
orl
dec
add
mov
sbb
xchg
rclb
and
paddq
mov
push
xor
push
inc
pop
prefetchnta
addl
dec
cmp
add
mov
lahf
sbb
or
mov
jo
pop
mov
jl
lods
pop
mov
or
jmp
dec
call
bound
or
je
sahf
rolb
bound
rolb
repnz
adc
paddd
mov
inc
movsb
pop
and
add
sbb
sbb
pop
push
es
inc
outsl
mov
iret
xchg
adc
stos
lret
stos
xor
shll
add
adc
add
sub
adc
pop
mov
addr16
mov
push
adc
sbb
mov
push
ret
or
mov
xchg
stc
mov
in
sub
or
rolb
adc
sbb
call
in
adc
repz
lock
enter
leave
add
ret
add
mov
les
jnp
mov
sbb
ret
sub
mov
cmpsb
adc
jnp
test
ss
mov
adc
add
jle
insb
pusha
test
mov
cmp
mov
lds
jp
mov
call
mov
xor
push
add
js
popf
lret
sub
dec
das
mov
lret
or
out
inc
or
adc
mov
cmp
pusha
mov
sub
sbb
pop
addl
lea
enter
mull
cmp
push
sbb
adc
addr16
mov
xor
and
in
lret
fs
dec
ret
jge
add
mov
or
pop
add
adc
dec
shl
pop
test
mov
push
fwait
push
jno
add
stos
xchg
les
jo
mov
dec
loop
or
push
nop
or
pop
leave
in
sbb
adc
and
nop
jmp
and
push
sti
sub
dec
inc
int3
xor
or
jno
add
mov
adc
jo
push
mov
in
bound
mov
pop
add
mov
add
push
pop
xchg
leave
hlt
es
jb
add
mov
push
pop
stos
enter
mov
scas
jae
xchg
xchg
test
sbb
nop
adc
jmp
stos
ret
push
sbb
mov
in
ffreep
xchg
arpl
push
add
adc
aad
add
pop
cmp
mov
adc
shr
sbb
cmp
xchg
adc
push
or
push
push
ror
mov
psllq
rorl
inc
scas
push
add
mov
aaa
mov
inc
sub
mov
lea
sbb
dec
or
rolb
pop
scas
rclb
loopne
lcall
incb
mov
loope
add
jle
sbb
xchg
cli
dec
ljmp
mov
cmp
mov
inc
sub
stc
or
mov
or
jmp
sub
xor
xor
int
push
xchg
lods
fcoms
mov
adc
adc
out
mov
pushf
add
push
sbb
icebp
jo
push
pop
mov
add
jp
sub
jg
inc
xchg
or
inc
xor
cli
cmp
lods
push
xchg
orl
xchg
in
jo
mov
fs
enter
sbb
pushf
sbb
mov
lods
ret
jae
sub
sti
cs
xor
dec
scas
out
cmp
push
cmp
ds
and
inc
xchg
pop
jnp
adc
push
mov
jae
inc
jnp
std
cmpsb
or
jne
stos
jp
lock
and
sub
nop
sbb
jae
and
enter
test
rorb
int
lods
adcl
daa
ret
lea
push
aas
loopne
loope
jo
clc
or
ds
add
cmp
ljmp
xchg
sbb
jecxz
push
add
adcb
lret
mov
rolb
cmpsb
mov
push
inc
add
mov
loopne
aam
push
cmp
sbb
shlb
or
sub
popa
mov
push
push
add
mov
cmp
dec
pop
cwtl
dec
icebp
lods
sbb
je
sbb
leave
adc
jp
dec
jg
icebp
loope
or
inc
sub
xchg
jmp
or
out
pcmpeqb
xchg
mov
or
dec
roll
mov
and
sbb
inc
shrb
or
sub
adc
stos
push
mov
or
aad
pop
sub
push
jl
jns
pop
pop
shrb
inc
ljmp
push
scas
je
or
lds
add
adc
rclb
fcoml
and
or
xor
sbb
popa
jmp
fdivrl
fistpl
push
out
or
call
xor
addb
dec
push
push
test
dec
and
push
stos
pop
push
mov
jno
rcl
sub
mov
cwtl
rcl
push
aas
pop
adcb
pop
or
inc
repnz
xor
lcall
mov
test
subl
push
or
xchg
mov
sub
sub
sub
int3
push
ret
cli
insb
push
dec
aas
xchg
rorb
scas
stc
movsb
fsubs
repnz
cmp
stos
push
pop
jge
add
daa
or
push
clc
xchg
sbb
add
sbb
adc
mov
adc
adc
adc
fiaddl
cmp
and
sbb
cmp
jbe
xor
sbb
push
pop
inc
cmp
loop
add
lret
xchg
gs
and
push
jmp
cld
mov
adc
sti
das
enter
sbb
mov
xor
sbb
push
aam
push
rclb
jo
cs
incl
in
add
sub
in
inc
mov
xor
test
jp
push
and
or
mov
add
rolb
rolb
loop
add
add
lock
adc
or
mov
sbb
add
sub
gs
int3
add
sbb
cli
inc
fs
out
or
iret
add
popf
mov
sbb
mov
or
roll
inc
lock
mov
lret
push
cmpsb
mov
sub
pop
shrl
cmp
xchg
mov
cmp
in
add
pusha
xor
pushf
or
js
and
dec
sbb
add
shlb
jecxz,pt
lock
scas
add
and
jo
mov
jp
xchg
add
loop
clc
mov
notl
jge
out
pop
mov
in
push
sub
inc
adc
push
fildl
mov
in
ret
adc
sbb
addb
je
int
pusha
push
xor
leave
icebp
cli
or
or
lcall
inc
pop
aad
add
lret
fwait
add
in
arpl
push
out
mov
add
sahf
cmpsl
enter
sbb
subb
push
or
sbb
inc
jp
sub
cltd
les
sbbl
les
jne
cltd
add
str
add
inc
and
inc
add
lret
pop
mov
pushf
js
movq
push
or
popf
inc
stos
add
cmp
imul
adc
xchg
sub
ds
jmp
inc
adc
and
pop
inc
lods
jne
push
mov
add
push
sub
ret
call
xor
popf
xor
and
aam
mov
adc
rclb
dec
or
adcl
rclb
hlt
inc
dec
adc
icebp
push
sbb
inc
xchg
sub
lods
hlt
xor
lret
add
pusha
sbbb
lock
push
aad
shll
lock
dec
cs
add
mov
imul
lock
cmp
je
leave
cmp
enter
mov
add
mov
push
xchg
adc
jmp
out
test
xor
test
ret
push
adc
sbb
bound
add
mov
add
rclb
jge
sarl
cmc
sub
jle
inc
dec
add
cmc
push
arpl
sbb
push
ficoms
fsub
xor
push
mov
push
push
xor
sub
push
dec
pop
push
cmpsb
xor
pop
and
jo
cmpsl
mov
lea
jns
addb
outsl
negb
cmp
or
push
cmp
mov
insl
or
jb
pop
cwtl
ljmp
sbb
jecxz
pop
lods
je
cmp
out
into
adc
stos
xchg
ret
mov
inc
scas
aam
sbb
lock
xor
fwait
mov
mov
pushf
ret
lock
push
push
xlat
sbb
or
insb
inc
or
popf
in
jne
xor
mov
imulb
push
cmp
adc
sub
pushf
enter
adc
and
inc
ljmp
push
push
adc
rolb
xor
add
push
out
adc
push
shl
push
xor
pusha
stos
mov
orb
pop
stos
jle
inc
in
sub
adc
data16
and
lret
push
and
popa
outsb
loopne
jb
into
pop
cld
push
mov
add
push
xor
aad
cli
jge
cmp
inc
jmp
or
push
sbb
test
add
mov
lret
sub
add
js
adcl
xor
inc
mov
adc
cli
jo
and
pop
xor
cmp
mov
jae
pop
cmc
jle
inc
iret
inc
lds
xchg
mov
pusha
lret
sbb
xchg
ss
push
push
sub
aad
mov
pop
cmp
inc
and
push
inc
mov
cmpsl
mov
mov
jae
jecxz
xchg
adc
and
dec
das
js
int
mov
outsb
push
add
stos
sbb
mov
pop
outsb
pop
lods
lods
iret
lcall
pop
jmp
sbbl
stc
into
jo
test
fdivr
mov
cwtl
cmp
inc
mull
cmp
mov
das
fbld
push
push
ret
add
lds
or
into
movsb
pusha
scas
xor
pusha
and
adc
mov
and
mov
or
mov
fisubl
hlt
adc
jmp
icebp
mov
adc
push
adc
mov
adc
cmpsl
cli
adc
xchg
lcall
rclb
add
dec
pop
or
xchg
jle
xchg
rclb
test
mov
movsl
cmpsb
jo
lret
lahf
leave
in
push
xchg
pop
xchg
mov
xor
adc
add
mov
push
call
in
xor
lods
mov
pop
popf
fwait
sub
mov
push
add
pop
or
es
push
mov
pop
insl
push
mov
push
in
adc
push
sbb
stos
sbb
sbb
xor
dec
dec
ret
lahf
adc
and
test
lds
pop
mov
push
cmc
push
mov
verr
xor
mov
insb
pop
sbb
push
ss
add
lret
or
mov
jbe
sub
aam
sar
xchg
push
subb
push
add
jmp
adc
push
sbb
push
or
aaa
adc
push
sub
push
mov
jne
cmpsl
out
xor
loopne
pop
subl
je
push
mov
mov
pop
andb
into
add
adc
or
push
add
xlat
mov
add
pushf
mov
loop
stos
les
xchg
or
sbb
mov
add
ret
mov
js
inc
jecxz
jg
push
adc
cmp
push
and
out
xchg
ds
js
cmpsb
shlb
mov
mov
mov
jge
xchg
sbb
cmp
add
cmp
repz
adc
sbb
mov
mov
adc
push
lcall
push
lods
mov
rclb
lret
add
sub
imull
sub
icebp
or
mov
aam
xor
or
pop
popa
adc
shrb
cmp
callw
push
add
xchg
cmp
jnp
add
and
sub
push
xor
lret
mov
ja
xor
cmp
das
xor
push
add
pop
adc
pop
shlb
jb
imul
mov
xor
cli
sub
push
pop
adc
int3
or
inc
mov
xchg
ret
mov
ficompl
mov
sbb
mov
loop
or
xchg
jmp
pop
mov
dec
movb
cmovne
enter
adc
ror
cmp
fmul
enter
test
jg
rorb
and
imul
loopne
or
cpuid
or
lock
adc
inc
in
push
mov
mov
fadds
add
es
xlat
jg
mov
scas
js
ljmp
neg
dec
jo
jge
xchg
adc
jne
and
sbb
int
lea
or
or
pushf
js
inc
ficompl
add
and
pop
icebp
popf
shlb
and
inc
mov
mov
scas
and
in
mov
pop
inc
mov
sbb
sub
mov
shll
into
lods
push
adc
push
imul
pop
rcll
mov
push
test
hlt
pusha
or
rorb
subb
and
movsl
add
movsl
mov
mov
sbb
daa
inc
test
dec
aad
pop
adc
inc
sbb
or
clc
jp
mov
jp
lock
pop
jo
sbb
mov
insb
in
jno
outsb
sbb
imul
aas
aas
jecxz
push
dec
push
push
cmp
aam
inc
test
xchg
pop
enter
setl
test
scas
and
icebp
add
int
mov
xchg
inc
repnz
sbb
sub
lea
sbb
or
bound
lret
movsb
add
xchg
mov
cmp
sbb
or
mov
jne
and
adc
sub
sbb
jp
cli
sbbl
pop
or
mov
xchg
inc
adc
mov
pusha
adc
mov
ds
sbbl
in
inc
in
cltd
pushf
or
mov
inc
push
test
adcl
inc
loopne
adc
ljmp
lods
call
mov
push
jge
mov
loope
es
cmp
pusha
scas
sub
test
jnp
es
push
stos
mov
pop
adcb
xor
or
cmp
jnp
xor
stos
loopne
mov
mov
sub
or
icebp
lods
sbb
testb
and
mov
in
outsb
add
lock
inc
rclb
int
cmp
cmp
aad
sbb
ret
mov
mov
and
sub
adc
loopne
xchg
mov
mov
or
jb
subb
pop
rorb
mov
js
add
push
push
jnp
or
das
repnz
mov
mov
movl
cmc
arpl
cltd
mov
ljmp
pop
sub
rolb
mov
sbb
xchg
add
inc
lods
cs
and
pusha
adc
sbb
test
loopne
push
jge
mov
add
adc
in
loopne
bound
dec
or
in
shll
xchg
sbb
je
imul
xor
mov
test
cmp
sub
or
push
adc
loopne
ret
sbb
adc
pop
enter
scas
cmp
or
xchg
cmp
adc
cli
push
adc
shll
inc
adc
test
loope
sub
push
xor
stc
push
cmp
mov
inc
sbb
cmpsl
ret
mov
cmp
cmpsb
mov
adc
adc
ss
push
and
inc
int3
lds
sbbl
xor
sub
je
loop
pusha
mov
adc
jo
add
jg
pusha
and
sbb
cwtl
adc
stos
sub
ljmp
adc
and
cmp
push
dec
adc
test
or
jbe
out
inc
ret
push
xchg
or
mov
cmp
jnp
popf
push
les
sbb
adc
movb
sub
pop
cmp
adc
or
cmp
push
xor
xorl
pusha
or
rorl
pop
push
leave
inc
addr16
lret
das
and
xchg
push
pop
xchg
stos
xor
fchs
stos
pop
mov
jnp
push
or
pop
or
cmpsl
adc
push
test
ret
popf
or
or
test
add
jo
xchg
pop
dec
xchg
fmuls
fstpl
xor
add
sub
int3
mov
xlat
cli
mov
or
lcall
sub
mov
push
mov
push
adc
and
or
add
jae
repnz
test
mov
sbb
xchg
adc
test
cmp
mov
adc
cld
lods
cmp
mov
dec
roll
push
rol
gs
test
jo
fnsave
sbb
jb
scas
cmp
sub
adc
xor
hlt
icebp
push
lods
inc
rolb
js
push
adc
push
xor
lock
sub
les
sub
mov
add
dec
decb
aam
mov
jle
orb
rclb
inc
sub
sub
sbb
mov
pushf
addl
or
mov
into
mov
out
aam
sbb
sub
or
loop
adc
icebp
add
sbb
and
out
xor
xor
sbb
rcl
xor
jle
inc
lock
jo
stc
adc
or
or
loope
push
adc
pop
mov
push
mov
lock
mov
stos
clc
mov
push
dec
add
sbb
lock
and
adc
mov
cltd
dec
push
out
lcall
andl
mov
cmp
cwtl
mov
enter
jno
and
or
das
pop
movsb
push
adc
push
lahf
push
add
jbe
rcrl
adc
shl
or
inc
add
lea
sub
ret
dec
cmp
cmpsb
pop
cmp
mov
stos
push
push
sub
mov
incl
adc
and
and
cmp
or
lret
jo
movsl
enter
xchg
lods
shll
push
adc
and
cmp
inc
mov
loopne
or
adc
pop
push
clc
out
lcall
or
adc
push
in
pusha
mov
subb
xor
push
cmp
add
bound
sbb
mov
sub
add
dec
and
shll
fcompl
lock
stos
out
loop
dec
add
push
jge
cmp
add
mov
adc
mov
dec
sahf
imul
push
popf
enter
push
lea
cmp
jecxz
sbb
inc
xchg
sbb
push
or
sti
push
jb
xor
icebp
loope
bound
push
adc
andb
add
push
rclb
cli
mov
mov
ret
daa
in
jb
add
mov
add
sub
jmp
pop
out
mov
adc
xor
loopne
movsl
adc
cwtl
rcll
leave
inc
adc
mov
stc
adc
sub
inc
push
fs
add
shr
or
ret
mov
pop
xorl
push
push
pop
pop
cmovs
push
in
pop
push
push
inc
or
jno
sub
sbb
xchg
sub
or
push
mov
addr16
or
out
pop
sub
data16
dec
or
mov
ljmp
stos
and
testl
sub
ss
fisttps
inc
icebp
gs
bound
push
mov
hlt
inc
sbb
pop
lds
xchg
js
or
inc
cmp
add
push
xor
arpl
inc
into
pop
push
ret
jno
adc
sarl
pop
call
xchg
call
mov
movhps
shlb
in
jo
mov
out
sub
sbb
jbe
shlb
xor
inc
and
aam
or
enter
popl
adc
mov
inc
mov
loopne
mov
test
imul
xlat
inc
sbb
pop
pop
dec
add
fstpl
or
adc
shl
xchg
ljmp
add
adc
add
shl
mov
imulb
or
cs
push
mov
push
dec
movsb
test
inc
sbb
test
add
orl
xor
lock
add
enter
pusha
and
clc
xor
dec
or
je
mov
rcll
and
pop
inc
cvtpi2ps
in
jne
fsubrl
mov
mov
or
sbb
mov
mov
mov
test
jns
lcall
loopne
mov
cmp
rolb
pop
movl
or
pop
push
inc
in
lock
or
adc
xchg
add
jp
pop
adc
pop
jge
push
xor
stos
or
insb
xor
mov
mov
cs
ror
pop
clc
mov
adc
sbb
add
inc
ljmp
or
arpl
cmc
jb
loope
pop
cmp
xor
push
push
pop
mov
xchg
adc
and
mov
xor
and
push
xchg
adc
icebp
syscall
lret
shlb
rcl
add
mov
adc
dec
insb
scas
push
sbb
add
out
push
rclb
xchg
aam
ret
ds
fdivp
sub
mov
adc
push
enter
xchg
test
lods
cli
push
lods
mov
incl
push
pop
daa
mov
mov
cli
mov
in
adc
push
loopne
cwtl
and
js
add
mov
loop
adcl
popa
pop
arpl
dec
test
pushf
sub
js
cmp
push
push
push
out
leave
push
add
add
adc
add
icebp
jae
mov
cmpb
xor
lock
xor
les
sub
or
push
sbb
sbb
lock
ret
add
mull
stc
fsubl
lret
lret
ljmp
jp
in
push
xor
push
jge
mov
xor
push
inc
loop
stos
or
push
pop
and
lods
xor
add
icebp
cltd
jl
or
test
inc
inc
test
int
jmp
popf
rcrb
or
or
push
sbb
sahf
mov
jge
es
xor
or
jp
sbb
rcl
mov
sub
scas
and
lock
xchg
fdivrs
rolb
cmp
fdivp
and
add
enter
ret
sub
cli
push
cmp
out
shrl
rorl
xor
pop
iret
leave
adc
xor
xor
fdivl
mov
mov
stos
test
pop
out
cmp
inc
adc
add
jnp
pop
pop
bswap
jo
mov
pop
adc
push
add
and
push
mov
mov
inc
leave
lods
dec
loope
in
and
jmp
cld
cmp
cmp
push
test
sub
sub
sbb
or
mov
test
or
or
or
cmp
sub
loopne
cli
enter
inc
jne
push
stc
or
adc
test
sub
scas
mov
pmuludq
popa
mov
pushf
lock
stos
mov
daa
loop
mov
inc
xor
mov
push
adc
addr16
sbb
mov
sub
push
js
mov
push
lock
push
sub
mov
add
add
test
jp
add
pusha
ret
loope
inc
push
mov
andl
jns
add
andl
aad
lahf
imul
aaa
rclb
outsb
adc
imul
add
test
popf
and
xlat
std
lods
enter
push
int
xor
pusha
enter
adc
add
jnp
aad
jl
std
cltd
repnz
push
adc
or
decb
dec
push
in
das
dec
xchg
push
add
call
push
sarl
mov
inc
shll
fs
add
mov
adcl
sub
pushf
mov
lea
inc
roll
xor
cli
sahf
icebp
fstps
in
loope
mov
fmull
popf
cmpsb
das
inc
xchg
mov
or
test
out
push
add
mov
ret
sub
cltd
cwtl
adc
jg
sub
mov
popa
inc
xchg
lock
mov
enter
aas
add
out
adc
add
mov
xchg
fisttps
xlat
sub
out
out
add
cs
sbb
xchg
mov
mov
mov
push
jns
or
inc
call
or
or
add
jb
inc
dec
cmp
stos
mov
xor
test
jo
push
aad
cwtl
test
pop
add
or
and
pop
sbb
loop
pop
lahf
int3
roll
int
js
pop
or
mov
into
mov
sub
pop
inc
lock
aam
ret
jo
cmp
test
add
mov
sbb
andb
call
test
loope
ror
or
rol
bnd
add
mov
add
paddb
mov
jg
push
imul
sqrtps
or
pop
inc
stos
jb
rcrl
and
hlt
push
mov
cmp
cwtl
jo
inc
scas
incb
add
test
dec
jo
or
sub
jne
pop
lock
das
loopne
mov
adc
cmc
sarb
cmp
or
adc
sbb
scas
out
mov
inc
mov
xchg
xlat
icebp
add
add
addb
inc
or
pop
sarl
inc
xchg
sub
test
mov
scas
and
dec
sbb
adc
or
stos
testl
inc
inc
sub
mov
jmp
popf
fdivl
or
adc
and
mov
es
cmp
rclb
subb
xchg
xor
jne
adc
push
inc
fadds
inc
icebp
sub
shrl
cltd
xchg
jmp
jbe
push
jg
cltd
mov
cmove
xor
push
add
scas
mov
pushf
jae
inc
mov
rolb
ss
orb
jge
imul
mov
pop
enter
int3
add
push
dec
sub
popa
push
cmp
jmp
add
lcall
pop
movsl
lock
sub
inc
dec
dec
cmp
shrb
or
push
lods
push
shll
sub
sub
pop
mov
fdivrs
and
jne
ret
or
pushf
mov
das
sbb
push
into
and
xchg
sbb
xchg
loope
fidivl
fwait
adc
push
sub
add
test
js
push
cmp
or
mov
add
and
in
jmp
and
test
push
adc
aam
loope
daa
mov
push
push
mov
fldcw
fldcw
jne
add
pusha
dec
or
mov
adc
xchg
push
fs
add
test
cs
es
add
sub
mov
add
mov
pop
jmp
sbb
popa
je
rclb
in
repnz
dec
adc
jbe
inc
daa
push
adc
mov
push
xchg
enter
jae
adc
push
mov
sub
push
xchg
and
shr
ret
push
inc
add
cltd
pusha
mov
lds
out
nop
pop
roll
mov
and
inc
adc
dec
adc
cld
mov
adc
lret
sbb
sbb
sti
xorps
mov
jb
push
inc
rol
test
sarb
mov
fsubp
mov
arpl
pushf
mov
jno
push
sbb
pusha
sub
loopne
and
dec
int3
pop
dec
lea
popf
jb
dec
inc
arpl
enter
mov
add
xor
adc
cmc
addb
loop
push
pop
mov
xchg
jbe
lock
stc
lock
sub
inc
cmp
cmp
pop
cmp
add
or
dec
adc
outsl
pop
shlb
dec
and
cmp
pop
sbb
push
cmpb
inc
inc
sub
cwtl
aam
mov
xchg
lods
push
loope
ljmp
mov
cmp
stos
es
out
sbb
or
icebp
inc
fisubrl
adc
loop
rorl
movsl
jo
push
jno
pop
nop
mov
aam
mov
xchg
stos
add
jo
jle
lock
lods
pop
mov
mov
push
mov
arpl
es
mov
test
pop
adc
js
mov
or
sahf
inc
lds
in
ss
int3
subb
stos
ss
pusha
enter
pop
mov
sub
mov
push
push
rcll
xor
and
je
loope
jo
test
orb
inc
cmp
or
xchg
pop
pop
mov
mov
sub
xchg
ret
pop
sub
hlt
pop
adc
scas
adcl
stos
ljmp
push
out
leave
jno
jb
xchg
inc
mov
push
in
xchg
je
jae
push
rcrb
icebp
jo
add
arpl
add
cmp
cmpsb
sub
loopne
cmp
cmp
push
shll
subb
xchg
jne
add
mov
adc
ror
add
or
fs
jbe
add
mov
or
mov
addb
or
shrb
add
sub
test
dec
push
call
lock
push
xor
push
add
adcb
or
pop
mov
xor
ret
push
add
loop
pop
lods
and
sub
aad
inc
cwtl
leave
cmc
cmp
push
scas
mov
enter
jo
push
cmpsl
mov
xchg
jb
adc
stos
push
clc
out
or
ss
pop
push
xchg
into
popf
test
or
add
ss
leave
mov
push
xor
pop
push
xor
adc
out
fst
cmp
and
sbb
jge
add
shrl
or
dec
lock
inc
adc
movhps
jmp
or
cli
cmp
addr16
test
add
outsb
jae
pop
jno
sahf
and
out
test
movsl
mov
fnstsw
fisttpll
sbb
adc
mov
adc
call
jge
sbb
lock
mov
adc
push
in
dec
pushf
add
jmp
or
adc
or
dec
push
imul
scas
pop
sub
push
or
mov
imul
and
sbb
or
inc
inc
roll
daa
or
sbb
or
shrb
inc
loop
int3
sbb
movntps
pop
lds
sbb
jmp
xchg
and
push
arpl
add
xchg
sub
mov
adc
mov
rclb
and
xor
pusha
add
pushf
sub
push
sahf
jb
cmp
in
adc
mov
sbb
add
xor
push
push
push
sub
sahf
and
pushl
sbb
lret
jl
ret
sub
dec
shrb
xchg
and
cmp
cmp
sbb
call
fimull
gs
call
inc
adc
iret
sbb
add
push
cmpsb
fiaddl
cmp
sbb
xchg
imul
or
mov
mov
jne
cltd
jo
or
xor
and
out
ret
add
pusha
loop
mov
or
mov
xchg
add
jo
dec
dec
or
mov
stos
lret
mov
pop
lcall
adc
cmpl
mov
xor
pop
adc
cmp
add
xchg
add
sbb
xor
or
add
xchg
mov
call
sbb
jle
hlt
mov
icebp
inc
jp
mov
inc
movsb
add
les
rolb
and
and
and
leave
jnp
xchg
add
add
and
insl
mov
dec
pop
lea
pop
adc
mov
jp
je
je
mov
loopne
addr16
mov
or
and
stos
mov
popa
pop
gs
imulb
popa
push
or
add
or
lret
ljmp
adc
xchg
cmp
and
add
xor
aam
inc
cmpps
aad
out
pop
add
push
shr
nop
sarb
mov
cmp
ss
add
inc
into
xor
ljmp
jne
cmpsb
push
xchg
sbb
jo
mov
cmpsl
push
push
testb
mov
mov
jg
std
aaa
rol
pop
push
push
andl
arpl
out
lahf
aas
mov
and
popa
dec
pop
cli
xor
repz
mov
fsubrs
cmc
jmp
mov
cli
xchg
fistl
cld
stc
mul
dec
push
shll
daa
and
bnd
mov
fnstcw
rorl
sub
dec
mulb
iret
rol
dec
mov
sub
loope
je
fsubrs
lods
inc
push
jp
cmovl
subl
repz
bound
xchg
scas
les
push
sbb
bound
aas
jg
cld
mov
adc
imul
lahf
jns
shrl
loopne
cld
stc
xlat
jecxz
shll
les
lret
leave
jmp
lahf
aas
sbb
push
add
iret
mov
xlat
or
loop
and
stc
push
mov
xor
fdivrs
push
test
lahf
stos
fdivrl
insb
dec
add
jl
aas
jg
aas
fdivl
lret
cmp
pop
inc
enter
cld
loope
stos
push
iret
add
pop
sub
lods
push
bound
iret
lahf
aas
xchg
push
push
push
lock
repz
jecxz
rorb
in
aaa
sahf
addb
stc
sbb
and
mov
sbb
adc
jmpw
iret
lahf
aas
inc
xchg
clc
jne
lret
imul
stc
repz
push
push
fildll
cmp
cs
dec
inc
roll
orb
cld
stc
repz
or
push
adc
cmpsb
xchg
xlat
or
rcrl
mov
lahf
aas
jg
cmp
xor
push
ljmp
out
into
aaa
adc
cld
pop
xchg
xchg
lahf
aas
jg
add
fdivl
repz
cs
repz
imul
fwait
or
cld
popa
cmpb
fdivrs
ror
sub
xor
out
lahf
adc
lea
test
xchg
jmp
notl
inc
mov
filds
fsubs
clc
push
pop
sti
lcall
out
lahf
lea
daa
repz
xchg
xchg
mov
cld
stc
test
sub
iretw
sub
push
outsl
stos
mov
out
lahf
aas
and
xchg
cld
stc
repz
adc
and
pop
lods
aaa
inc
add
int3
lea
lahf
aas
jg
sarb
sub
mov
cld
stc
repz
enter
in
or
adc
mov
test
decb
ret
cmp
mov
out
notb
sbb
and
aas
jg
cld
in
loop
cmp
addr16
and
aad
cmp
repz
lahf
push
lds
jbe
pop
mov
cld
stc
xor
inc
jl
sbb
and
out
lahf
aas
adc
adc
cmp
cld
stc
repz
pop
pop
dec
lock
inc
xor
lahf
aas
jg
data16
sub
add
dec
lds
out
pop
inc
jnp
lret
jg
frstor
mov
lahf
xlat
jmp
jle
in
pop
repz
lahf
out
add
jmp
add
push
lock
jg
cld
stc
int3
or
inc
mov
loopne
sti
int
movsb
adc
iret
lahf
aas
mov
mov
mov
cld
stc
repz
or
aad
mov
adc
adc
lahf
aas
jg
lcall
pop
inc
aaa
xchg
clc
stc
xlat
call
lcall
aas
jg
cld
lcall
mov
inc
xchg
cmc
repz
lahf
mov
out
loopne
sbb
cmpb
stc
test
pop
bound
sbb
scas
in
iret
lahf
aas
jge
jbe
pmaxsw
cld
stc
inc
jmp
inc
shrb
lahf
aas
jg
mov
jo
xchg
lcall
xor
out
in
cmc
push
pop
scas
fimuls
sbbb
jg
cld
mov
dec
push
mov
iret
lahf
aas
inc
xor
and
mov
cld
stc
repz
or
bound
mov
iret
lahf
aas
jg
cmpsl
mov
movsl
flds
out
pop
jl
leave
stos
jne
loopne
mov
lahf
aas
jg
xor
add
inc
fwait
push
sbbl
out
jne
gs
inc
test
leave
stos
xchg
test
jg
cld
scas
mov
iret
rcl
mov
repz
lahf
stos
mov
sbb
push
jle
cld
stc
push
mov
pop
insl
insl
mov
je
jg
aas
lcall
inc
scas
jle
cmovno
cmp
out
lahf
loope
fs
pop
ss
fcomip
cld
stc
mov
lods
lds
in
dec
push
add
dec
int3
iret
lahf
aas
ljmp
scas
push
adc
pop
int
out
pop
cmp
stc
repz
addl
cmp
stc
pop
jg
push
cmp
push
sub
inc
outsb
in
mov
jecxz
and
adc
test
or
add
out
pop
pop
dec
pop
and
mov
stc
cld
stc
repz
or
mov
add
lcall
fsubrs
and
mov
pop
xchg
aas
jg
or
test
rcr
out
enter
stc
repz
pop
rolb
test
pop
mov
repz
aas
stc
clc
cltd
in
fcmovb
inc
frstor
stc
shld
mov
lahf
mov
ret
dec
cli
xlat
movsl
fildl
iret
lahf
aas
mov
ja
or
iret
lock
jl
repz
push
dec
scas
mov
lahf
lock
lods
cld
lea
xor
sarb
popf
popf
imul
iret
lahf
enter
adc
cwtl
mov
cld
stc
and
xorb
jns
or
fwait
outsb
int3
out
lahf
aas
js
push
ret
sub
std
mov
mov
cmp
shrl
push
loopne
lea
aas
jg
jl
outsb
xor
mov
div
xchg
cld
stc
repz
jp
xchg
dec
lea
imul
sbb
addl
daa
mov
repz
xor
mov
ljmp
insb
cld
cld
sbb
mov
cmp
xchg
ljmp
vmread
cmp
stc
pause
pop
cmpsb
in
mov
outsb
outsl
push
out
jbe
iret
lahf
aas
jg
dec
movsl
xchg
pop
cmp
cmp
stc
repz
ja
fildll
lds
push
rcll
inc
lea
xlat
xchg
jne
dec
std
lds
cld
andb
and
mov
sbb
leave
test
push
dec
add
xor
out
lahf
push
xchg
cltd
or
fcompl
sbb
cld
stc
xchg
std
dec
mov
bound
lahf
lahf
in
ljmp
lahf
aas
test
inc
push
lcall
in
divb
lret
dec
ror
sahf
std
xor
addr16
xor
jne
rcrl
iret
pop
jle
dec
sti
rclb
cmc
test
repz
adc
je
ret
mov
rorl
xor
inc
dec
test
xchg
pop
mov
repz
pop
aas
pushf
gs
jno
pop
lcall
mov
sti
xlat
ret
pop
xor
cmp
sub
or
aas
jg
cld
jb
pop
sub
ja
out
sarb
pop
repz
lahf
ret
push
aam
fwait
push
pop
jp
push
xor
repnz
push
scas
jo
xor
leave
iret
lahf
test
pop
leave
stos
xor
out
lahf
jg
div
pop
sbb
addr16
adc
stc
repz
dec
iret
inc
mov
sub
sbb
aas
jg
sbb
roll
das
mov
repz
jbe
xchg
shrl
inc
daa
nop
pop
clc
or
ljmp
movsb
imul
aas
jg
cld
adc
fs
inc
mov
adc
iret
lahf
stos
vmulsd
jmp
or
cld
stc
and
imul
mov
dec
out
out
lahf
aas
dec
and
push
daa
scas
jg
sbb
cld
stc
repz
or
pusha
insb
sbb
adc
repz
mov
sub
mov
push
jg
cld
stc
dec
daa
mov
nop
push
pop
std
jmp
mov
outsl
xor
jae
xchg
leave
pop
cld
stc
repz
push
adc
cmp
pop
hlt
out
lahf
aas
jg
fmull
dec
aam
notl
jle
stc
repz
lea
sub
sub
dec
push
sbb
rcrb
in
jmp
sub
repz
cmp
pop
add
int
std
lods
lods
imul
dec
nop
xchg
andnps
lcall
in
iret
lahf
iret
je
pop
stos
loopne
push
mov
cs
cld
jmp
pop
push
cmpsl
int3
mov
repz
lahf
jl
xchg
or
xor
sub
jg
cld
stc
or
xchg
inc
push
outsl
xorl
mov
or
iret
lahf
aas
dec
xor
xchg
mov
filds
cld
stc
repz
fadds
fwait
jnp
mov
push
mov
ja
fs
push
aas
in
leave
test
push
sub
stc
repz
in
lods
roll
xor
das
jle
lahf
aas
jg
add
push
mov
into
repz
mov
push
mov
imul
das
push
push
lret
pusha
jns
jg
cld
jno
xchg
xchg
inc
popf
mov
sub
out
lahf
out
sub
mov
test
cld
stc
pop
pop
mov
xchg
mov
jmp
mov
sahf
out
lahf
aas
jno
or
out
or
sub
repz
sub
pop
or
rcrb
lcall
jg
outsl
mov
dec
push
push
int
cmp
cld
mov
das
xor
scas
inc
xchg
iret
lahf
aas
jg
jmp
daa
adc
call
outsl
xchg
cld
stc
repz
mov
pop
gs
mov
lahf
aas
jg
push
jge
fistl
pop
repnz
xor
out
in
adc
cmp
mov
jg
cld
ss
pushf
mov
cmp
mov
iret
lahf
inc
mov
or
fs
push
clc
jno
inc
mov
cld
stc
popa
rcrb
cwtl
addr16
stos
or
iret
lahf
aas
mov
mov
cmp
call
push
push
cmp
sbb
inc
iret
lahf
aas
jg
inc
inc
xor
fcoml
or
fnstenv
lods
cld
stc
repz
mov
jo
and
jp
pop
movsl
lahf
aas
jg
inc
pop
cmp
insb
aas
and
push
stc
repz
pusha
adc
sub
fdivrl
iret
lahf
sahf
cld
lods
pushf
cmp
xor
and
stc
repz
std
mov
or
add
dec
inc
inc
call
mov
les
stc
repz
shll
mov
push
dec
xchg
das
sub
lock
out
call
iret
lahf
aas
jmp
push
or
data16
xchg
push
lock
stc
repz
imul
sub
mov
imul
sbb
and
jg
mov
sub
mov
mov
sbb
lahf
cmpsl
or
xchg
sar
loope
repnz
stc
dec
out
cmp
bound
add
iret
lahf
aas
sti
pushf
inc
pop
mov
fidivrl
cld
stc
repz
repz
lock
orb
add
in
iret
lahf
aas
jg
mov
jl
mov
stc
repz
sbb
sbb
pop
sbb
lahf
aas
jg
nop
and
mov
faddp
lea
lods
cmp
stc
repz
and
jae
aam
dec
ret
push
cld
mov
jno
leave
inc
lahf
gs
inc
repz
lahf
jae
imul
js
cld
stc
inc
push
mov
mov
fstpt
iret
lahf
aas
add
ja
jno
mov
mov
cmp
repz
pop
and
xchg
jns
repz
pop
nop
mov
add
adcb
icebp
lods
push
and
cwtl
incl
out
lahf
pop
or
or
shlb
hlt
pusha
icebp
gs
jg
cld
stc
mov
mov
jae
movsl
xchg
push
cmp
add
leave
lahf
aas
sbb
cmp
mov
cld
or
pop
pop
loope
dec
pop
cmp
iret
lahf
sub
pop
cmp
cld
stc
cmpsl
fcoml
lds
andl
dec
ret
shl
inc
jo
jo
wrmsr
mov
lahf
jg
les
lahf
inc
in
fs
repz
jge
pop
arpl
mov
cmp
cld
movsl
mov
xchg
hlt
jnp
rcrb
mov
repz
lahf
aad
sbb
aad
jle
xlat
jg
cld
stc
jne
mov
fdivrs
int3
mov
xchg
jnp
pop
out
or
outsl
fiadds
xor
iret
fldl
mov
iret
int
aaa
fmulp
iret
std
mov
orb
or
mov
sbb
out
jne
adc
jbe
ja
fcoml
xorb
loop
xor
cld
stc
cmp
jo
lods
push
in
shll
lahf
aas
jg
dec
mov
fstpl
sub
adc
repz
dec
js
lahf
lods
ret
jecxz
cld
imul
aas
into
cmp
sub
dec
jg
fldpi
mov
cmpsl
sub
sub
outsl
sbb
sub
std
in
mov
jno
outsb
les
iret
lahf
aas
jle
das
jl
sbb
dec
mov
add
cld
stc
repz
movsb
mov
sbb
mov
lahf
aas
jg
xor
adcb
pop
push
stc
repz
add
inc
leave
mulb
mov
jne
out
testb
sub
out
stc
repz
testl
test
mov
and
cld
pop
test
aam
cltd
cmpsb
stc
cld
stc
push
and
cs
jb
ret
jg
std
inc
or
or
mov
lock
mov
fisttps
in
jecxz
sub
out
lahf
lret
les
dec
je
jp
mov
fbstp
repnz
adc
dec
xor
adc
cld
stc
rep
xchg
leave
dec
jp
dec
out
bound
mov
aas
jg
add
mov
jno
jno
ret
repz
mov
xlat
into
inc
out
fldl
pop
sub
mov
and
in
data16
cld
stc
lret
cli
dec
pop
cmp
or
mov
sub
lahf
aas
sub
cmp
rcll
dec
lret
repz
xlat
inc
dec
jecxz
rol
aam
push
femms
fildll
inc
or
cmp
cmp
fiadds
push
fwait
stos
mov
and
ljmpw
fisubl
or
adc
in
iret
lahf
jg
and
cltd
jmp
addr16
push
sbb
stc
repz
mov
xor
cmp
cs
jle
jnp
aas
add
pop
enter
scas
xor
cmc
xchg
dec
arpl
xchg
xor
jmp
in
lahf
mov
repz
lahf
std
scas
and
nop
mov
cmp
jg
cld
stc
pop
enter
jae
shl
push
jecxz
outsb
or
mov
bound
xchg
hlt
pusha
icebp
gs
out
cld
stc
repz
cmp
inc
push
jnp
insb
mov
jbe
push
pop
outsl
loopne
stc
repz
fs
scas
popf
imul
ss
aas
jg
cld
movsl
cltd
arpl
lcall
jmp
cld
repz
lahf
repz
cmp
xchg
mov
cld
stc
cmp
adc
add
push
adc
and
xor
fwait
aaa
outsl
fdivp
jnp
jle
scas
mov
test
lahf
cltd
jns
out
sbb
inc
jg
mov
adc
dec
sbb
idivb
andl
pop
cli
dec
ret
dec
fsubs
push
mov
or
mov
fists
inc
and
aas
jg
fists
jmp
pusha
aad
stc
repz
setle
addr16
ss
popf
fidivrs
scas
jbe,pt
in
mov
cmp
fwait
aaa
outsl
pop
inc
daa
xchg
int
add
call
mov
repz
xchg
sbb
and
scas
adc
iret
pop
ds
arpl
negl
jg
mov
mov
repz
sub
cmp
sti
iret
lahf
aas
jg
cmp
addr16
and
std
cld
stc
repz
in
addr16
push
xor
shl
insl
outsb
inc
jle
stc
pop
ficompl
mov
jns
iret
pop
bt
adc
in
out
jle
cld
loope
inc
jns
xchg
pop
push
cmp
push
repz
cmpsb
clc
lahf
sbb
dec
sbb
cld
stc
es
inc
mov
nop
ret
daa
mov
iret
lahf
aas
subb
ret
in
js
fwait
aaa
push
popa
out
jle
mov
ljmp
adc
insb
wbinvd
pushf
lcall
mov
outsl
fidivrs
sub
sub
xchg
nop
mov
out
fists
fs
push
push
fisttpl
pop
sbb
int
in
imul
mov
cld
stc
repz
mov
sahf
mulb
addr16
jp
lahf
aas
jg
add
mov
sarb
inc
cld
stc
repz
push
cltd
popf
mov
dec
addr16
scas
xchg
mov
xor
arpl
int3
lahf
and
jno
pusha
dec
stc
repz
shr
aad
icebp
mov
sbb
inc
aas
stc
cld
popf
fwait
cmp
sub
enter
aaa
outsl
fisubrs
inc
jg
int
and
decb
jns
out
popf
adc
cmpsl
sbb
push
ret
nop
and
outsl
fidivrs
xor
mov
daa
adc
je
fistpll
cwtl
adc
lahf
aas
jg
call
leave
pop
rcrl
mov
scas
bound
out
aaa
outsl
ficoms
adc
in
push
pushf
lods
ljmp
jbe
pop
enter
xlat
push
xlat
inc
lcall
aad
or
dec
push
loop
out
fwait
mov
xchg
div
gs
lret
int
mov
sbb
mov
adc
stc
repz
loopne
pusha
pop
jg
gs
leave
lahf
aas
jg
sti
jp
ja
imul
dec
jne
lahf
aas
jmp
loope
mov
xchg
cld
jns
iret
push
aaa
cmp
adc
roll
inc
pop
or
lahf
aas
jg
or
shlb
movsb
in
mov
dec
push
fsubrp
iret
stc
repz
test
xorl
push
lahf
aas
jg
inc
call
dec
cmp
push
repz
sti
push
pop
leave
jl
fmuls
mov
sahf
cld
sbb
sbb
cmp
outsl
fisubrs
outsb
mov
ljmp
inc
lret
cld
addl
jb
adc
scas
out
aas
jg
inc
iret
leave
test
test
shr
popf
cli
jnp
fidivrs
pusha
pop
cmp
sub
outsl
or
popa
fwait
push
outsl
jne
cli
imul
jns
out
sbb
fadds
pop
daa
je
out
fwait
aaa
outsl
and
jmp
or
into
insb
xor
out
iret
push
mov
cwtl
sahf
int
mov
jns
stos
cmc
sub
pop
insb
sbb
daa
and
jle
and
sarl
iret
lahf
aas
jg
xchg
sbb
dec
fidivrs
stc
repz
push
xchg
mov
add
lahf
aas
jg
push
and
and
fcmovnb
stc
repz
xchg
mov
jl
shll
stc
inc
into
aas
jg
cld
repz
sub
ljmp
aaa
lds
xchg
xchg
imul
repz
push
sbb
mov
push
sbb
push
iret
lahf
aas
sbb
cltd
inc
test
loopne
or
cld
stc
repz
inc
inc
js
or
and
push
sarl
lahf
aas
jg
test
and
sbb
iret
popf
push
ss
jno
cmp
adc
iret
lahf
aas
negl
sbb
jno
in
dec
fimull
cld
stc
idivl
movsb
sub
adc
fdivr
in
lahf
aas
mov
fcoms
mov
mov
push
xchg
jb
pop
out
lahf
aas
jg
pop
or
pop
jle
push
dec
sbb
stc
repz
or
test
cmc
lret
xchg
into
lcall
aas
jg
cld
and
loopne
sub
sub
add
lahf
lahf
shl
iret
lahf
aas
jg
sub
adc
sahf
std
repnz
stc
repz
jne
push
ficoml
enter
xchg
add
mov
sub
add
repnz
iret
mov
inc
inc
roll
pop
out
jmp
pop
ja
test
lahf
nop
add
in
scas
cmp
stos
add
add
jg
cmpsb
lds
mov
cld
stc
repz
movsb
push
test
and
jmp
jg
mov
mov
dec
add
dec
sub
test
or
fst
adcl
gs
scas
int
cli
fdivl
out
mov
push
sub
lret
hlt
xchg
mov
cld
stc
aas
mov
pop
mov
imul
cld
mov
clc
pop
out
jnp
or
mov
cmp
mov
push
orb
xchg
cmp
ja
das
mov
mov
add
mov
mov
stc
mov
and
dec
dec
jl
mov
iret
lahf
aas
iret
pop
aas
cmp
cmp
or
movsb
cld
stc
repz
sub
jno
jmp
sbb
addr16
movsb
idivl
js
cmp
cld
stc
repz
fwait
sbb
adc
mov
insb
or
jg
pop
aas
or
cwtl
adc
iret
mov
in
lods
popf
out
mov
sbb
outsl
ficoms
mov
and
int
fdivl
mov
fistl
mov
mov
sub
xor
in
push
stc
repz
insb
jne
into
out
call
gs
lahf
aas
jg
les
mov
rolb
aas
cmp
stc
repz
pop
sahf
xchg
xchg
sar
sahf
adc
mov
cmp
mov
pushf
or
stc
repz
lcall
push
mov
aas
jg
cld
cmpb
jmp
icebp
jo
jo
inc
jbe
stos
jae
loop
lahf
loop
or
std
ret
push
iret
lahf
aas
std
ja
in
jae
out
rclb
pslld
repz
popw
sub
mov
aaa
outsl
ficoms
jle
dec
add
inc
cmp
inc
cld
loope
fwait
jne
and
jg
clc
lret
aas
jg
popa
pop
outsb
roll
addr16
ljmp
adc
cli
cmc
je
stos
int
in
cli
inc
jle
cld
fidivs
xchg
add
pop
bound
push
fdivrl
mov
addr16
mov
insb
jns
out
leave
shl
xchg
push
cmp
xchg
and
outsl
fidivrs
mov
fcompl
data16
in
repz
xchg
lcall
in
mov
push
jg
cld
stc
dec
fucomp
sti
in
arpl
mov
cmp
loopne
iret
lahf
aas
shll
push
xor
sub
pause
mull
fldcw
push
insl
ds
cmp
add
cmpsl
sub
push
gs
inc
popa
aam
call
adc
pop
cmp
movsl
in
ret
jecxz
adc
jno
clc
aaa
mov
push
outsl
jle
cld
fildl
divl
daa
push
insb
clc
ja
leave
pop
dec
xrelease
pop
pop
or
stc
add
cltd
roll
mov
mov
iret
lahf
aas
jg
jae
adc
cmp
loopne
cld
stc
repz
and
mov
mov
inc
ss
push
fmulp
lahf
aas
jg
pop
xchg
sub
sbb
jle
mov
sub
fs
jg
push
mov
dec
jae
xchg
cmp
lods
and
popf
mov
mov
adc
inc
mov
icebp
fisttps
mov
insl
jns
cmpsl
mov
stc
repz
jmp
inc
push
loopne
or
pop
push
inc
cmc
enter
mov
inc
repz
lahf
dec
ds
loope
mov
arpl
pop
fdivrl
cld
stc
repnz
cli
jne
out
cmp
sbb
pop
mov
enter
adc
inc
lahf
aas
jg
insl
fistps
xchg
out
adc
fcoms
push
mov
jg
cld
ficoms
pop
aam
rclb
lret
pop
sub
roll
shll
outsl
fidivrs
fistl
out
fwait
jno
and
sub
xor
outsl
fidivrs
xor
cltd
lret
inc
and
mov
repz
mov
lcall
shlb
cmp
fwait
aaa
outsl
aas
adc
cmp
cmpsl
mov
aaa
popf
scas
cmp
out
cld
jbe
and
xchg
cmpsl
push
fidivrs
sub
mov
push
and
lods
int
aaa
outsl
sbb
int3
ret
mov
repz
pop
movsb
xor
pushf
or
in
dec
repnz
cmp
inc
and
or
sub
shl
inc
rolb
repz
loopne
pop
aas
mov
fdivrs
mov
inc
mov
aas
mov
int
jns
inc
sbb
or
xchg
cmc
jns
out
xchg
push
and
lahf
sub
and
and
mov
std
dec
pop
movsl
negb
xor
cmpsl
ss
aas
jg
cld
and
xchg
mov
and
mov
iret
lahf
repnz
repnz
test
repz
in
push
jg
pop
jnp
pop
lods
push
es
cld
stc
pop
mov
loopne
dec
loopne
aas
stos
movsl
xchg
insl
push
jle
out
lahf
aas
lret
mov
mov
stos
movsb
pop
hlt
cld
stc
repz
insl
xchg
enter
jae
mov
sbb
jg
mov
push
xor
push
push
cld
stc
repz
dec
sub
outsl
js
frstor
jae
rclb
jns
inc
and
jge
lahf
pop
sarl
repnz
movsl
setp
jo
jo
cmp
out
pop
ja
dec
add
push
jle
cld
stc
subb
sub
imul
ror
je
push
cld
mov
jg
mov
or
lahf
aas
jg
lahf
push
imul
cmp
xchg
xor
stc
repz
arpl
add
aam
fcmove
mov
xchg
xor
fcomi
xchg
push
or
add
jns
out
xchg
adc
gs
jne
outsb
jmp
push
in
movsl
xlat
jge
inc
mov
cmp
rep
cli
mov
mov
dec
dec
cmp
and
cwtl
cmpsl
pop
pop
push
andb
xchg
movntq
out
iret
dec
sbb
add
sub
int3
outsl
fidivrs
sbb
repnz
leave
imul
out
fwait
aaa
inc
jle
xchg
mov
and
sub
hlt
xchg
test
cmova
push
and
lods
cltd
mov
push
int
aaa
outsl
and
jno
cmp
sub
or
out
jg
daa
mov
xor
sub
pop
fwait
aaa
outsl
fidivrs
sbb
xchg
mov
repz
cs
out
cmpsl
hlt
cmpsb
sub
or
stc
mov
pop
andb
aaa
outsl
daa
popf
sub
mov
out
inc
mov
fildll
mov
xor
je
fwait
aaa
outsl
fidivrs
call
decb
ljmp
enter
cmp
or
mov
cwtl
out
outsl
imul
out
fwait
aaa
xchg
ror
dec
sbb
push
jno
mov
outsl
lds
js
lock
test
outsl
les
mov
mov
outsl
xchg
xchg
sbb
push
popa
dec
inc
jo
test
aas
jg
lcall
pop
jge
loopne
cld
stc
repz
sub
mov
mov
mov
cmpsl
mov
inc
enter
mov
leave
stc
repz
inc
test
or
push
sbb
jg
cld
sub
sti
std
jb
loopne
scas
cmp
iret
lahf
mov
idivl
dec
inc
jo
jg
cld
stc
pop
ds
mov
lea
ret
stos
cld
stos
daa
jns
pcmpeqd
insl
out
push
push
dec
fwait
sbbb
xor
out
sub
out
push
xchg
fildl
push
or
jb
outsl
fidivrs
cwtd
test
or
xchg
inc
inc
push
xchg
xchg
fwait
mov
outsl
xor
test
fwait
cld
lods
push
mov
pop
sahf
shrl
inc
cmp
int3
mov
pop
mov
int
ja
daa
icebp
cmp
jne
dec
outsb
pop
leave
mov
pop
sub
lcall
cwtl
push
fwait
aaa
outsl
fidivrs
pop
cmpsl
adc
or
ret
adc
outsb
lds
push
outsb
adc
inc
cmp
outsl
fidivrs
inc
cmpsl
rcrl
cmc
xchg
int
pop
cmpsl
jp
mov
hlt
lahf
aas
jg
jp
xlat
mov
movsb
or
repz
sahf
adc
push
and
jge
orl
jo
jb
test
and
ficomps
dec
pop
lahf
cld
jnp
xchg
dec
sahf
and
lds
lret
stos
test
lahf
aas
jg
xor
add
dec
mov
xlat
sbb
repz
pushf
pop
inc
add
mov
nop
decb
mov
ret
pop
mov
sub
add
loopne
cwtl
mov
or
cltd
xchg
xchg
hlt
leave
clc
cmp
aaa
outsl
ficomps
cmp
xor
rorb
lahf
fwait
aaa
out
mov
ja
cwtl
xchg
xchg
stos
and
jns
dec
jns
out
push
loope
icebp
pop
cmp
mov
mov
iret
lahf
aas
cmpsl
pop
jg
out
mov
mov
repnz
test
fsubr
xchg
decb
jg
xor
sub
movsb
aam
das
cld
stc
repz
push
in
dec
cmp
xor
icebp
mov
cmpsl
add
jg
push
xchg
into
fisttpl
mull
sarl
dec
shll
jecxz
sbb
xor
rcrb
pop
bound
sbb
and
outsl
fidivrs
loopne
jae
jmp
xlat
ss
cli
repz
fwait
sbb
push
outsl
fidivrs
shll
jp
inc
lret
fwait
mov
int
aaa
push
jae
lea
dec
cmpsb
cmp
in
push
fidivrs
cwtl
push
and
cmp
int
aaa
outsl
outsl
adc
imul
push
scas
clc
fs
leave
out
lds
hlt
sub
iret
lahf
aas
jmp
es
out
add
insb
rorb
leave
mov
push
stc
repz
cld
sbb
das
cwtl
into
xchg
add
scas
stc
inc
sbb
jne
ds
div
aas
jg
cld
pusha
stc
fldl
xchg
mov
dec
sub
in
iret
lahf
fs
insl
das
sub
and
pop
iret
lahf
jg
push
ja,pn
lods
sub
divl
stc
repz
xlat
hlt
jo
jl
xor
adc
lahf
aas
jg
repz
add
movsl
frstor
add
or
mov
xor
pusha
lods
jl
or
repnz
xchg
pushw
fwait
aaa
outsl
fidivrs
fcompl
sbb
inc
das
push
cld
stc
ror
movsb
movsl
repz
jecxz
push
and
lahf
aas
jg
hlt
mov
sub
dec
add
or
iret
mov
xchg
inc
or
insb
sub
push
or
aas
pushl
sahf
outsb
add
ds
lahf
fcmovu
inc
out
ficomps
sbb
stc
repz
movsb
loop
inc
gs
scas
push
xchg
into
inc
mov
aad
and
jg
lcall
imul
xor
stc
mov
out
out
ljmp
mov
loop
jnp
cmc
out
dec
lahf
inc
int3
nop
adc
sbb
ss
lahf
jg
fiadds
daa
jle
pushl
dec
les
fs
hlt
leave
push
jg
aas
mov
in
testb
repnz
dec
fwait
aaa
outsl
fidivrs
sub
arpl
lea
into
inc
sub
out
adc
push
xchg
sbb
cmpsb
jbe
dec
outsb
int3
xchg
aaa
outsl
fidivrs
adc
push
mov
icebp
addb
inc
and
mov
add
shl
push
out
lahf
aas
test
or
ja
arpl
repnz
xchg
or
fisubrl
jbe
lock
ljmp
leave
cmp
repz
lahf
subps
rorb
mov
and
jns
cld
stc
pop
dec
in
jle
cmpsb
orl
mov
pop
inc
mov
push
dec
fcompl
cmp
in
pushw
jcxz
vprotw
xchg
nop
movsl
xor
mov
xchg
andb
enter
inc
addr16
loop
add
fwait
aaa
lds
pop
xchg
cld
je,pt
mov
repz
sbb
sbb
iret
out
out
sub
xor
outsl
fisubrs
rclb
add
jns
out
jae
arpl
mov
test
outsl
fidivrs
jge
int
or
xchg
out
fwait
push
xor
lods
mov
push
pop
and
mull
jg
sbb
jnp
cmp
mov
mov
ds
aad
cmpsb
dec
cmp
ja
aas
imul
aad
fwait
repnz
xor
addr16
lahf
aas
jg
push
pop
and
fwait
je
and
jbe
popf
aam
je
out
add
add
cld
mov
jmp
dec
cs
inc
pusha
dec
xchg
fs
iret
lahf
aas
cmpsl
outsb
push
or
icebp
aas
jne
loope
cs
cld
stc
rep
adc
sbb
cld
inc
idivl
rcrl
jg
jnp
pop
push
sbb
mov
repnz
lret
push
dec
sbb
dec
pusha
push
loop
je
ljmp
jns
xorl
xor
mov
push
add
fldln2
or
cmp
cmovs
add
dec
pop
xchg
jg
cld
andl
fwait
inc
or
mov
fiaddl
lds
aas
push
lock
push
loop
mov
aaa
roll
cmp
pop
or
hlt
jns
out
idiv
ss
mov
aaa
outsl
fidivrs
fcmovnb
das
mov
into
jbe
out
fwait
mov
xchg
mov
adc
ret
mov
jns
stos
in
call
xor
mov
out
xchg
aaa
arpl
jns
mov
cld
stc
repz
push
or
test
push
mov
orb
adc
in
lods
inc
stos
push
jns
out
daa
inc
cmp
mov
lods
sbb
mov
mov
lahf
xchg
mov
inc
int
int
lahf
ljmp
shll
mov
repz
sub
adc
xchg
lret
mov
jg
std
aas
jge
jnp
jb
inc
xchg
cld
stc
xchg
push
inc
xor
test
or
sti
mov
dec
jns
test
adc
cmpsl
push
and
cmc
xchg
add
jmp
loope
sbb
lahf
aas
xor
mov
or
aam
cld
stc
repz
xchg
imul
pop
loopne
out
and
jg
or
push
mov
push
pusha
and
data16
ret
bnd
sbb
popl
adc
jbe
sti
aaa
adc
or
fstl
outsl
pushf
stos
fwait
repz
fwait
inc
sub
nop
loop
orl
or
outsl
fidivrs
sbb
pop
in
fwait
enter
int
aaa
in
xlat
pop
cmp
mov
xchg
les
fidivrs
pop
data16
push
jno
and
aaa
outsl
and
scas
push
jbe
int
andb
addr16
fs
out
lock
stos
cltd
sub
clc
je
fnstcw
mov
stc
sub
aas
movsb
outsl
fiadds
pop
xchg
lds
cmp
scas
lds
aaa
xlat
cltd
and
fistps
xor
lods
lock
adc
jns
mov
pop
cmp
lods
jmp
outsl
fidivrs
or
cmpsb
jb
cltd
push
xchg
xor
int3
fwait
sbb
lret
inc
pop
in
repz
adc
and
rcll
fidivrs
cmp
xor
cmp
or
stc
test
jb
jns
in
adc
sub
nop
addb
and
test
jge
hlt
outsl
fidivrs
cmp
inc
imul
test
popf
cmp
sub
movsl
aaa
fwait
xchg
int
loop
mov
adc
jns
out
dec
adc
mov
and
or
push
fwait
aaa
outsl
ficoms
test
cmp
es
fnsave
idivb
ret
out
cmc
ss
shlb
jno
fmul
test
fidivrs
pop
mov
cld
mov
aaa
fcoms
andl
lahf
aas
jg
jmp
sti
int
stos
jmp
dec
popa
xlat
pop
dec
insb
stc
repz
scas
dec
ljmp
scas
sti
addr16
cld
fisubs
xchg
pop
js
sbb
mov
add
add
fwait
aaa
outsl
xchg
and
mov
daa
jg
enter
scas
pop
repz
les
imull
movsb
mov
into
insb
fidivrs
dec
or
sub
movsb
stc
xrelease
call
mov
cmp
push
inc
popa
jl
push
xchg
sub
imul
pop
cpuid
aaa
outsl
ficoms
jbe
flds
in
sub
repz
fwait
jg
inc
ret
nop
pop
gs
and
jns
push
jb
mov
add
jae
insb
pop
xor
repnz
imul
mov
dec
xor
or
add
out
or
aaa
sarl
in
rcrb
out
jae
lahf
fidivrs
mov
sub
fxch
push
xor
gs
aaa
outsl
add
out
jno
jle
mov
movsl
sub
sub
int3
xor
xor
mov
ds
lds
mov
js
add
popl
push
jg
cld
imull
and
push
jne
cld
xchg
aam
sub
mov
mov
cmp
mov
lahf
aas
jg
mov
int
adcb
push
pop
test
mov
enter
fidivs
popf
icebp
push
bswap
lahf
aas
jg
jmp
clc
sahf
cmc
mov
push
rorl
leave
inc
xchg
xlat
out
shlb
imul
and
mov
and
cmp
fwait
aaa
outsl
pusha
push
cmpsl
test
sbb
aad
mov
dec
sti
inc
and
lcall
outsb
ficomps
aaa
adc
cmp
outsl
ds
stc
repz
aam
js
dec
out
inc
scas
mov
out
lahf
cmovnp
call
and
sub
and
out
xorb
fidivrs
mov
dec
sbb
popa
repz
fwait
dec
xchg
shl
push
testb
rcr
inc
cmp
ljmp
adc
xor
mov
inc
push
add
mov
enter
bound
int3
pop
out
fidivrs
popa
or
push
mov
fwait
aaa
inc
lahf
aas
loope
push
xorl
mov
and
jae
fs
aad
movl
add
xchg
jg
cld
stc
push
rcll
dec
sub
icebp
test
outsl
mov
out
lahf
aas
shrl
das
pop
cld
and
adc
stc
repz
popf
cwtl
xor
push
ret
lahf
aas
jg
push
into
xchg
cmpsl
testl
mov
andb
cli
out
arpl
inc
or
pop
push
mov
jge
test
aam
lods
jo
cld
stc
repz
mov
pop
mov
add
jmp
mov
gs
or
and
ss
fstl
shrb
add
push
popl
pop
imul
pop
xor
or
pop
and
push
add
out
stc
and
sub
add
call
or
out
out
subl
repz
fwait
ret
inc
mov
sub
mov
ds
testb
mov
stc
jo
mov
sbb
sub
jnp
adc
out
ret
lret
jne
push
pop
xchg
in
fadds
fsub
cli
mov
fwait
js
sub
inc
iret
sub
sti
enter
repnz
sbb
mov
test
aas
jg
cld
cld
testb
xchg
xchg
outsl
jge
rorl
iret
lahf
jl
pop
hlt
lahf
inc
sti
andl
in
popl
inc
fidivrs
cli
jge
cmp
out
fwait
aaa
mov
mov
add
cmp
pop
mov
inc
adc
in
out
adc
xchg
xchg
xchg
in
mov
cmpsb
call
mov
sub
pop
fnstcw
int
test
sub
ret
jle
addr16
lea
dec
jg
cld
stc
addr16
inc
add
das
test
jb
jmp
shl
xor
iret
jg
repz
in
jbe
ja
xor
clc
xchg
and
jg
cld
addb
mov
or
jb
aaa
add
push
xlat
jle
adc
or
or
outsl
inc
mov
mov
das
aas
test
and
outsl
pushf
mov
mov
fwait
int
repnz
inc
mov
push
into
movsl
adc
mov
sub
pextrw
adc
out
andl
dec
mov
xchg
sub
daa
mov
fidivrs
or
jno
sbbl
pop
imul
scas
nop
insb
jno
xor
dec
jo
stos
ss
test
scas
mov
xor
jecxz
pop
push
imul
add
pop
xchg
jg
les
lahf
loope
aas
pop
test
dec
push
add
aas
mov
int
cld
movsb
fbstp
outsl
fidivrs
mov
xchg
pop
push
out
xorb
movsl
pop
notl
scas
cmp
inc
test
add
divb
sahf
jl
pop
xlat
aaa
outsl
fidivrs
imul
dec
cld
imul
jle
iret
fadds
lahf
aas
jg
insl
bound
or
push
cld
jmp
daa
mov
adcb
js
loopne
iret
lahf
aas
jg
push
das
out
sahf
andl
nop
adc
pushf
cld
stc
repz
daa
je
push
out
inc
xor
cmpsl
mov
jg
ja
std
js
pop
rclb
das
incb
ficoms
and
pop
jae
add
into
out
fwait
aaa
inc
ds
orb
jbe
mov
inc
inc
repnz
fisttps
fnstsw
lods
fwait
aaa
outsl
ficoms
mul
mov
mov
jl
jns
out
rcll
pusha
xchg
mov
and
mov
or
or
icebp
rol
sbb
andw
testb
pop
stc
leave
popf
push
cld
stc
repz
aam
push
adc
sub
movsb
and
push
dec
dec
nop
xor
cmpsl
ss
add
outsl
xor
adc
push
xchg
fwait
aaa
aad
pop
bound
xchg
cli
movsb
mov
out
mov
fistpl
jecxz
jbe
ret
dec
cmp
shr
inc
in
sbb
jbe
sub
cld
stc
inc
aas
add
les
mov
add
xor
lret
cld
mov
and
cmpsl
pop
imul
inc
cld
mov
jg
jbe
pusha
stos
push
addr16
jae
xor
mov
gs
pop
sti
leave
adcb
repz
xchg
jb
or
mov
aas
jg
cld
sub
or
xchg
sub
and
loope
out
lahf
push
dec
mov
jne
mov
fstpl
jg
cld
stc
adc
dec
stc
aas
enter
call
mov
out
lahf
aas
or
jg
test
cld
stc
repz
adc
jbe
jo
mov
out
jmp
adc
stc
push
dec
in
pop
pop
adcl
cs
out
adc
sbb
inc
pushf
mov
arpl
fsubrl
roll
pusha
and
enter
xchg
sbb
dec
ds
mov
stc
repz
test
pop
jno
pop
xor
notl
inc
push
push
mov
int3
dec
fimull
divl
lahf
pop
movsl
stc
orl
clc
jns
out
leave
pop
dec
xor
cmp
outsl
fidivrs
pxor
and
inc
rcll
push
gs
stc
testl
ret
out
cli
test
jg
sbb
mov
lcall
push
cmp
outsl
mov
adc
xrelease
insb
out
shlb
inc
adc
mov
addr16
xor
fwait
ja
cmp
lcall
fidivrs
cmp
sub
xchg
xchg
pop
ret
out
sbb
lahf
fldcw
xlat
lret
out
iret
ja
pop
dec
add
sbb
pop
push
or
out
outsl
pop
and
mov
jnp
insb
loope
mov
stc
repz
cmc
dec
hlt
sbb
jbe
inc
or
leave
add
pusha
enter
fidivrs
pushf
inc
mov
push
mov
rolb
adc
adc
lock
stos
leave
enter
popf
inc
lock
pop
in
ljmp
inc
add
cmp
xchg
dec
mov
stc
movsb
xor
mov
dec
rolb
aaa
outsl
fidivs
cmp
dec
and
jns
out
mov
xchg
mov
in
pop
adc
fdivrl
adcb
mov
out
fwait
aaa
leave
sub
in
test
repz
mov
xchg
mov
cmp
aaa
outsl
inc
leave
add
add
icebp
out
iret
mov
pop
fists
jg
aad
js
sbb
in
pop
das
push
ss
iret
lahf
aas
out
outsb
xchg
pop
dec
std
stos
jmp
sbb
stc
xlat
or
or
fidivrs
xchg
or
sub
repz
fwait
push
dec
enter
js
adc
outsb
fidivrs
fs
cmc
sbb
pop
or
cmp
mov
and
jo
into
loope
daa
xor
aaa
outsl
stos
mov
or
mov
adc
cld
stc
rcll
sub
in
imul
jg
inc
shll
pop
and
and
xchg
stos
cmpsb
mov
push
and
iret
lahf
push
mov
mov
hlt
mov
inc
add
mov
pmuludq
rsqrtps
pop
scas
nop
xor
cli
cmp
lret
dec
lret
repnz
fwait
out
xor
pop
std
jmp
rolb
cmp
sti
daa
inc
mov
push
test
iret
or
pop
sarb
push
hlt
add
in
pop
psrlq
scas
aaa
outsl
fidivrs
push
xor
cmc
movsb
repnz
mov
out
fwait
and
push
stos
lcall
or
add
stos
andl
shr
xchg
fwait
aaa
scas
xchg
rcr
mov
and
jns
scas
negl
cmp
or
dec
fidivrs
hlt
dec
inc
xlat
cmpsl
xchg
outsb
lret
repz
insb
push
adc
loopne
mov
cli
bound
out
mov
mov
cmp
cmc
aas
fisttpll
imul
inc
ficoms
mov
stos
pop
repz
fwait
pop
mov
fdivr
out
cmp
cwtl
outsl
fidivrs
in
orps
push
push
push
nop
xchg
lods
hlt
out
fwait
aaa
and
mov
inc
adc
cwtl
adc
or
aaa
push
mov
sbb
es
inc
scas
rclb
mov
mov
mov
hlt
add
pop
adc
repnz
iret
lahf
mov
dec
xchg
mov
cmpsl
sbb
push
movsl
push
jl
hlt
enter
inc
mov
dec
mov
lahf
or
shl
outsb
rorl
xchg
ret
repnz
jne
sti
dec
dec
jg
cld
stc
inc
aaa
mov
adc
ficoml
push
inc
xlat
nop
repz
cli
jecxz
int
xlat
add
cld
stc
push
mov
or
and
or
repz
push
scas
mov
clc
js
outsl
fidivrs
jecxz,pt
mov
adc
sarb
addb
dec
lea
outsb
fidivrs
loopne
xchg
cmpsl
jp
inc
mov
lahf
jg
insb
pop
xchg
cld
xchg
int
mov
mov
daa
push
in
mov
mov
mov
into
movsb
fisubl
lds
faddl
cwtl
inc
pop
jg
shll
xlat
insb
shl
pop
je
je
fsubrl
popf
sbb
jno
inc
fcmove
xchg
mov
iret
loope
xchg
pop
das
sahf
pop
add
lock
aaa
outsl
fdivp
or
scas
lcall
repz
out
fnstsw
push
cmp
add
sarb
mov
xor
out
lahf
aas
fs
adc
push
xchg
add
xchg
insl
and
inc
push
pop
pushf
cmpsl
ror
aaa
outsl
std
sub
vmaxps
cld
stc
repz
adcb
or
pushf
dec
xor
in
mov
jmp
repnz
sub
or
push
shrl
lcall
cmp
rcrl
cmp
mov
ds
push
add
push
lods
aaa
xor
xor
jg
cld
stc
nop
aad
fcoms
push
popa
fcom
in
pop
int
mov
mov
jnp
cmpsb
stc
ja
out
inc
ja
adc
inc
test
rcr
and
std
inc
jae
test
out
lahf
jnp,pt
lock
sbbb
aas
pop
stc
stc
mov
scas
push
andb
dec
push
test
enter
das
dec
jo
ret
int
mov
and
aam
lock
fidivrs
push
dec
loopne
fwait
cmp
pop
dec
or
add
pop
mov
fidivrs
in
out
insb
ja
setbe
int
aaa
outsl
sub
dec
and
xchg
push
inc
dec
call
out
jle
cmc
mov
add
xchg
or
pop
inc
fsubrp
mov
iret
enter
add
push
dec
fiadds
sub
push
fst
sub
int
fwait
aaa
outsl
fidivs
ret
jl
shlb
jecxz
pop
add
jns
out
in
cmpsl
mov
fldt
mov
out
lahf
lock
or
add
ljmp
mov
fwait
aaa
aas
out
mov
rcl
pop
mov
jns
out
leave
xchg
scas
push
push
mov
ficomps
scas
stos
fsub
insb
fidivrs
aad
lret
lret
cld
stc
repz
arpl
jp
mov
cltd
shll
incb
rolb
bound
in
push
xchg
sbb
test
jns
out
punpckhwd
pop
sbb
pop
scas
xor
outsl
fidivrs
stos
nop
mov
sarl
rcll
and
or
jp
cld
out
lahf
aas
repz
and
lods
loopne
inc
cld
stc
repz
jae
xchg
xor
cmp
into
push
lods
pop
sbb
lahf
aas
jg
dec
and
add
lds
adcl
ja
xor
lahf
jg
jecxz
fimuls
inc
jecxz
lds
jecxz
jb
cld
stc
repz
lahf
adc
dec
sbb
sub
aas
jg
xor
lea
adc
mov
xor
leave
xor
in
mov
cmp
mov
xchg
aas
out
pop
es
fistpll
mov
out
fwait
aaa
outsb
mov
aas
dec
std
test
les
in
mov
mov
popa
out
adc
xchg
aaa
outsl
fsubp
sahf
or
mov
outsl
or
fiadds
cmp
repz
fwait
inc
test
pop
adc
scas
pop
xor
cmp
mov
rol
or
push
daa
inc
push
add
pop
mov
xchg
fwait
aaa
mov
hlt
and
mov
int
mov
mov
cmp
out
ljmp
loopne
xchg
add
add
mov
dec
add
push
fldcw
in
repz
int
mov
scas
roll
fidivrs
cmp
bound
mov
out
fwait
aaa
out
mov
std
mov
shll
push
sub
daa
or
sub
xchg
stc
adc
jb
fwait
aaa
outsl
das
sbb
scas
push
pop
jbe
mov
out
aas
mov
mov
mov
pop
mov
jg
in
cld
stc
repz
divb
hlt
push
mov
push
std
loope
ds
ret
stc
repz
sahf
jmp
pop
sti
fstl
cmp
inc
pop
push
jns
cld
out
dec
mov
mov
repz
cmp
mov
inc
pop
xchg
pop
sbb
outsl
fidivrs
dec
push
mov
into
aas
or
in
mov
jecxz
int
aaa
in
xchg
pop
pop
inc
sub
fidivrs
cmp
jge
push
test
sub
int
aaa
outsl
test
or
cwtl
or
dec
cltd
push
xor
stc
jns
out
xor
inc
mov
xchg
inc
popa
aaa
outsl
fidivrs
and
aas
push
sbb
push
sub
out
fwait
mov
in
fisubrs
push
cmpsl
cltd
lahf
aas
sbb
sub
ja
in
cmp
repz
movsb
adc
adc
dec
sbb
mov
push
int3
pop
lret
xchg
cmpsb
sbb
les
and
push
int
xorb
mov
lahf
imul
push
leave
inc
lahf
adc
out
lret
ret
insl
shrl
and
aad
decl
pusha
cmc
mov
cmp
xchg
test
or
addr16
movsb
pop
lahf
cld
cld
push
inc
movsl
out
mov
mov
sub
hlt
in
xchg
lods
ret
rol
lahf
insb
fidivrs
inc
xor
call
jg
fsts
flds
out
lahf
inc
dec
call
add
push
data16
and
icebp
flds
cld
stc
or
mov
cmp
adc
out
sub
lods
jmp
movsl
cmp
sbb
stc
out
adc
movsl
push
mov
testl
in
xchg
out
fmull
dec
push
out
or
sub
stc
repz
cs
repz
outsl
pop
iret
lahf
aas
jg
punpckhwd
and
shl
stc
repz
ds
mov
mov
ds
aas
jg
js
mov
cltd
jno
push
imul
in
xchg
mov
jns
icebp
jmp
bound
mov
dec
inc
and
repz
add
inc
popf
ja
leave
gs
std
mov
pop
cmp
jp
out
cld
mov
movsl
jmp
pushf
sbb
pop
cmp
fwait
aaa
outsl
pop
sahf
xor
jle
jb
cmp
xor
xor
pusha
hlt
loopne
aaa
outsl
fidivrs
lods
aad
pop
rcll
sub
sbb
xchg
int
insl
mov
xchg
ficoms
stc
cs
mov
dec
ds
pushf
sub
int
aaa
outsl
bound
cmp
xchg
daa
mov
repz
int
lds
xchg
stc
loopne
aaa
outsl
fidivrs
jae
xchg
sbb
dec
cmp
mov
ds
iret
fists
aaa
outsl
fidivrs
pop
int3
mov
ret
repz
fwait
outsl
cld
adc
and
in
jg
jge
mov
sub
aaa
jb
icebp
xchg
mov
mov
dec
cld
stos
push
and
jg
loopne
mov
shll
push
xchg
inc
testb
test
repz
jp
enter
aaa
loopne
movsl
pop
fs
xor
jg
cld
mov
mov
adc
sti
mov
out
lahf
pop
stc
arpl
mov
cld
stc
mov
and
or
push
xchg
das
or
icebp
out
lahf
aas
gs
shll
xchg
movsb
mov
cmp
inc
das
xchg
ds
movsb
movsb
fwait
aaa
outsl
fdivp
outsb
xchg
ja
inc
push
cli
push
rorl
dec
cmc
enter
sbb
push
mov
imul
in
popa
out
mov
mov
fidivs
ja
int
mov
cmpsb
jae
out
mov
jg
cld
stc
mov
adc
mov
xor
in
mov
iret
lahf
aas
and
or
icebp
mov
repz
inc
sbb
mov
push
sub
repnz
out
dec
ret
stos
mulps
aam
aas
jg
cld
mov
mov
push
sub
iret
lahf
aad
insl
dec
std
xor
iret
push
imul
cmp
sub
xorl
das
or
insl
js
jo
dec
mov
jno
clc
cmpsb
loop
mov
or
loop
fidivrs
xchg
fs
andl
int
aaa
outsl
sti
cmp
sub
scas
push
mov
test
out
cltd
std
pop
mov
enter
mov
enter
add
stos
and
jno
repz
cli
or
lods
dec
push
xor
sub
lcall
add
jle
arpl
jg
aad
mov
push
pop
imul
sets
repz
lahf
xchg
xchg
ftst
add
into
mov
mov
cmp
cld
stc
pop
pop
mov
idivl
mov
iret
lahf
aas
insb
push
out
lea
mov
stc
repz
in
push
push
jno
mov
or
xchg
out
cli
inc
lea
inc
xlat
xorb
cld
stc
repz
call
push
jae
loop
mov
daa
jg
shl
fisttpll
das
xchg
pop
and
stc
repz
mov
mov
gs
push
sub
aas
jg
cld
push
jb
dec
mov
clc
jne
stos
nop
in
iret
lahf
iret
cmpb
enter
pop
mov
pop
sahf
sub
inc
cmp
and
cmovb
popa
jmp
fwait
cli
sti
or
lods
clc
pop
xor
test
cmpl
pop
outsl
fidivrs
mov
outsb
jl
int
aaa
jns
inc
mov
cmc
inc
mov
rep
adc
jno
pop
cwtl
mov
and
gs
push
dec
aaa
fwait
mov
sub
and
add
adc
int
aaa
outsl
popf
mov
adc
testl
js
repz
mov
mov
aas
lcall
sub
push
stos
inc
push
or
sbb
cmp
lahf
rclb
es
xchg
fnstcw
mov
out
stos
loope
ficoms
daa
or
mov
cmp
int
aaa
mov
gs
mov
or
repnz
mov
outsl
fdivrp
jle
mov
lcall
loop
fwait
aas
mov
xchg
pop
adc
out
stos
enter
cmp
ss
jle
dec
jge
outsl
fidivrs
sbb
jnp
pop
insl
mov
mov
and
xor
sbb
out
jge
in
adc
jns
out
outsl
nop
movsb
sub
fwait
test
scas
fwait
aaa
outsl
ficoms
mov
jge
mull
out
mov
addr16
and
fwait
push
in
pushl
outsl
fidivrs
adc
mov
out
xchg
fwait
sbb
adc
lahf
adc
adc
mov
pop
outsl
fidivrs
popf
cli
clc
or
inc
dec
mov
out
fwait
aaa
jge
push
mov
andl
mov
sahf
inc
dec
fwait
aaa
outsl
fiadds
cmp
mov
iret
out
rcrb
jns
out
sub
stc
sti
clc
or
insl
enter
push
sbb
mov
aad
out
enter
popa
lods
pop
sahf
pushf
lret
rcr
cld
stc
repz
fs
inc
lret
out
pop
mov
jg
push
mov
jecxz
xchg
or
js
ljmp
push
jg
movsb
jns
movntq
adc
xor
mov
sahf
and
stos
sub
ds
and
and
add
out
xor
gs
movsb
shrb
outsl
rcrl
lahf
mov
sbb
inc
xor
mov
cmpl
fs
pushl
enter
call
in
out
jl
cmpsb
mov
out
lahf
pushf
mov
movd
xchg
lea
cld
stc
inc
testb
xlat
mov
sbb
repz
shlb
rol
mov
out
fbstp
jg
xchg
rcrb
cmp
mov
jae
movsl
xchg
push
repz
lahf
mov
sti
mul
test
adc
cld
stc
xor
shll
cs
mov
jns
mov
jnp
cmp
scas
pushf
sub
jno
push
push
sbb
sbb
jne
pop
jne
jns
out
jno
mov
jo
jecxz
lahf
xchg
outsl
fidivrs
mov
xchg
int3
repz
in
aaa
shlb
xor
daa
test
jns
out
test
xlat
push
mov
pop
inc
inc
outsb
fidivrs
int3
pop
outsl
pusha
sub
jge,pn
mov
push
xlat
xor
mov
sbbb
test
loop
cmpsb
xchg
pop
iret
mov
sbb
pop
daa
ja,pt
clc
add
out
adc
dec
fbstp
jmp
aas
jg
mov
in
xor
cld
stc
xlat
pop
aas
push
in
shll
xchg
test
aas
jg
pop
or
or
sbb
pop
outsb
in
pop
push
loope
inc
int
cmp
enter
js
sbb
push
fsubrl
gs
lahf
aas
xor
mov
cld
stc
repz
jmp
xchg
and
jl
mov
aas
jg
xor
xchg
jb
cmc
sbb
pop
push
adc
stc
cs
dec
add
mov
call
push
adc
pop
push
scas
pop
shll
pop
xchg
lahf
aas
jg
dec
das
sub
outsb
pop
fidivrs
repz
call
adc
out
push
int
fs
jg
cld
mov
mov
inc
pop
lret
adc
lahf
in
and
xchg
cmc
cmpsb
xchg
inc
jecxz
ja
repnz
add
imul
fwait
popf
or
test
inc
and
daa
enter
and
das
iret
sub
or
xchg
lahf
aas
jg
add
imul
push
mov
jle
outsl
fidivrs
mov
mov
repz
fwait
and
pop
outsl
daa
or
mov
out
lea
pop
sahf
fdivrl
shr
inc
int
fmuls
iret
pop
out
sbb
scas
and
push
sbb
push
push
es
mov
int
inc
aad
or
xchg
lret
jmp
xchg
fwait
aaa
outsl
fisubs
jmp
sbb
sti
leave
jg
rclb
mov
out
out
lahf
aas
mov
nop
mov
shl
stos
cltd
adc
cld
stc
repz
fisttpll
clc
rcl
inc
insl
imul
jg
cld
inc
push
xchg
sbb
push
stc
stc
repz
dec
test
popa
dec
in
fucomip
push
push
push
aaa
adc
stc
sahf
repz
fwait
mov
ljmp
cli
outsl
sbb
mov
and
or
xor
out
fwait
aaa
add
pop
call
fidivrs
fsubrl
imul
lea
jns
xchg
in
stos
enter
icebp
or
pop
icebp
xchg
sbb
clc
stos
hlt
fistpll
sbbl
or
mov
dec
fsubr
les
cmp
fucomi
mov
push
inc
cmpb
mov
sub
pop
adcb
orl
mov
aaa
outsl
sub
push
lods
out
ljmp
xchg
int
stos
pop
js
js
rorb
dec
push
add
out
ja
in
js
mov
cmp
mov
jg
cld
cwtl
mov
add
jp
push
xor
push
repnz
lahf
shrb
xchg
cltd
or
xor
cmp
stc
stc
out
mov
insl
pop
enter
mov
int3
ss
fidivrs
or
mov
fiaddl
mov
xchg
fwait
aaa
in
mov
orl
lahf
aas
jg
movl
pop
jmp
out
stos
sub
mov
sub
adc
jp
fwait
aaa
shll
adcl
and
sub
enter
ds
daa
sbb
faddl
mov
sub
sbb
push
aam
sahf
fdivrl
jne
ljmp
add
inc
ret
cmpsb
sub
jns
out
dec
fistl
add
iret
dec
push
addr16
ds
cmp
mov
mov
enter
cld
stc
repz
in
mov
mov
cmp
add
jno
lahf
aas
jg
std
pop
cmp
or
push
insl
xchg
iret
xchg
outsl
outsl
ficoms
je
xchg
jge
push
imul
daa
fwait
aaa
std
call
lahf
loop
rorb
lea
and
movsl
pop
stc
stc
mov
cmp
mov
fisubrl
mov
das
add
lahf
aas
jg
out
or
cmpsb
xor
call
in
hlt
leave
das
outsb
xchg
decl
pushl
out
add
jns
add
imull
lods
hlt
leave
clc
dec
sbb
neg
rorl
iret
stc
aaa
pop
adc
xlat
aas
jg
cld
mov
sbb
lock
dec
mov
lret
pop
lds
xchg
pusha
mov
cmpsl
inc
js
rcl
data16
mov
aas
jg
lds
or
imul
shll
repz
lahf
and
xchg
push
js
xchg
cld
stc
test
rorl
push
push
xchg
dec
fdivrl
nop
lahf
aas
sbb
dec
cwtl
and
jg
mov
aas
pop
push
xchg
fdivrs
push
mov
push
push
js
fs
fs
test
dec
rolb
push
dec
inc
fldt
mov
push
data16
ja
xchg
jl
cmp
and
addr16
pop
gs
repz
rol
jbe
dec
bound
adc
sub
call
fs
fs
xchg
inc
mov
xchg
lahf
inc
xor
mov
cmp
prefetcht0
inc
push
xchg
pop
adc
pop
orb
ficoms
dec
jae
negl
pop
dec
adc
jmp
cld
cmp
daa
aad
aad
popa
mov
jae
and
out
lahf
aas
lods
cmp
push
dec
mov
cld
stc
repz
and
pop
test
dec
sbb
cmp
lahf
aas
jg
sub
inc
inc
mov
cld
stc
repz
std
inc
or
je
dec
dec
addl
jmp
push
nop
imul
xchg
inc
cmpsl
stc
inc
iret
std
jns
out
or
adcl
pop
dec
imul
pop
mov
and
mov
or
xor
stos
cmc
xchg
int
js
rol
push
push
mov
jg
dec
lods
test
mov
jns
sub
repz
je
sub
bound
jmp
cld
in
xorl
mov
repz
lahf
fldz
repnz
rclb
jp
je
ret
inc
xor
dec
jo
inc
call
daa
outsb
decl
mov
mov
hlt
js
repz
jge
imul
mov
inc
jbe
ss
repz
vmaxsd
stc
pushf
adc
fstp
clc
stc
inc
xchg
test
test
dec
mov
leave
xlat
inc
jmp
push
test
mov
aam
lahf
aas
jg
sub
xchg
cs
cmp
out
andl
push
lods
mov
adc
lcall
fwait
aaa
outsl
fisubs
sbb
mov
adc
sbb
das
cmp
enter
loopne
inc
pop
cli
cld
das
orl
ret
push
mov
adc
fcoml
pop
lret
jne
xchg
mov
xchg
outsl
inc
int
aaa
outsl
fwait
push
lcall
cli
sarb
sbb
ss
xlat
fsubr
clc
sbb
mov
repz
leave
cltd
mov
xor
int
or
and
mov
fs
cmp
rcr
fucomp
jne
inc
inc
call
or
pop
je
mov
loope
push
out
outsl
cmp
int3
cltd
js
add
mov
xor
les
lods
pop
orl
popa
fmulp
mov
jne
xchg
iret
lahf
xchg
ljmp
data16
pop
push
xor
in
filds
out
addr16
xchg
mov
and
jle
aas
jg
cld
and
xchg
mov
mov
jge
add
lahf
cmp
sub
lods
lds
adc
adcl
repz
lahf
scas
sub
test
add
out
push
sub
cld
stc
pop
fdiv
hlt
out
shrb
inc
es
xor
es
divl
fwait
aaa
outsl
inc
cltd
dec
jne
lret
inc
or
sahf
aas
jne
mov
outsl
adcl
daa
pop
ljmp
aas
jg
shll
neg
add
std
arpl
sbb
out
cmpsb
push
stc
repz
pop
out
or
adc
xor
jg
cld
or
adc
or
outsb
mov
repz
lahf
sahf
psraw
jp
pushf
xor
pop
in
lahf
mov
inc
sbb
fldl
lods
out
fwait
aaa
aaa
push
mov
jg
sti
xchg
fidivrs
inc
out
pop
or
push
dec
test
int
aaa
outsl
sub
or
mov
push
xchg
mov
jns
out
cmp
rcrb
jae
sahf
dec
outsb
xchg
aaa
outsl
fiadds
stos
loopne
mov
and
mov
pop
testb
push
clc
mulb
jp
dec
in
jg
jge
and
pushf
mov
clc
dec
pop
je
out
inc
fldcw
dec
rcrb
mov
cmp
ljmp
add
fdivrs
int
aaa
outsl
mov
jnp
xchg
cltd
loope
mov
mov
nop
pop
testl
sbb
outsl
fidivrs
cwtl
ds
popf
pop
mov
jno
jns
out
push
push
cmp
sub
outsl
fidivrs
xchg
aas
fcomps
mov
arpl
repz
fwait
rol
cmp
xchg
sub
loopne
xchg
cld
in
fidivrs
fldt
sub
stos
aaa
sbb
fwait
aaa
jecxz
lea
movsl
xor
aaa
repz
pop
sbb
repz
and
adc
into
inc
cwtl
ret
cld
stc
repz
inc
ja
cmc
lret
add
ficoms
adc
xchg
into
cmpsb
sbb
jbe
xor
fwait
aaa
outsl
les
push
push
repnz
push
dec
add
into
jnp
hlt
jle
xchg
inc
sub
push
inc
xlat
inc
push
in
dec
jg
pop
inc
sar
inc
decl
addr16
fildl
add
and
mov
mov
hlt
or
bswap
lods
in
pop
lods
cltd
inc
outsb
adc
mov
fwait
ja
das
icebp
scas
lods
bound
mov
xchg
jp
sub
fnstenv
int
sub
mov
shlb
test
mov
lods
sub
fwait
aaa
outsl
faddp
lds
dec
or
adc
mov
andb
dec
test
in
lahf
mov
xor
pop
cmpsl
leave
out
out
lds
mov
in
mov
adc
jmp
lods
push
jg
xchg
outsl
or
lret
pop
sarb
and
repz
scas
push
scas
push
jg
mov
and
in
repz
lahf
ret
lds
push
add
and
stos
and
push
fcompl
outsb
fiadds
mov
ljmp
shll
dec
mov
push
mov
ja
pop
sub
pop
out
and
fisttps
imul
cmp
or
push
jnp
stos
mov
shlb
scas
leave
push
out
pop
cmpsb
mov
leave
scas
inc
xor
adc
inc
fwait
mov
and
mov
and
lods
mov
xlat
mov
adc
out
ja
sbb
xchg
fwait
aaa
mov
pop
pop
inc
sti
out
add
je
aam
mov
mov
daa
aas
xor
xchg
xchg
scas
test
sub
adc
out
jno
pusha
mov
fcoml
loop
js
sub
repnz
aaa
push
xor
out
sbb
inc
xlat
xchg
dec
adc
push
in
js
pop
and
and
mov
les
sti
mov
js
out
inc
iret
push
add
or
int
aaa
outsl
arpl
xor
rorl
mov
cli
dec
jl
ret
dec
orl
or
mov
outsl
lcall
lods
cmpb
aad
aad
mov
int3
mov
cmp
xor
loopne
pop
ja
scas
int
aaa
outsl
popf
lods
lds
jnp
aas
into
cmpb
cmp
call
dec
add
lahf
jl
outsl
fiadds
idivb
dec
decl
cmp
inc
ss
push
imulb
xchg
mov
fdivrl
pushf
push
pop
out
fcoml
fwait
sub
inc
cmp
sub
rep
or
cs
jb
dec
dec
int
aaa
out
fistps
or
inc
push
out
add
bnd
jb
out
mov
jg
rcl
movsl
mov
mov
pushf
lds
cld
and
cld
sbb
xor
sub
xchg
fwait
ja
mov
jp
push
shlb
xchg
les
arpl
mov
aaa
out
stos
sbb
mov
std
add
rcll
xchg
int
and
out
adc
pushf
faddl
inc
jns
jb
out
fwait
mov
sub
insl
xor
or
xchg
mov
dec
mov
or
adc
movups
cmpsb
xlat
in
mov
jp
cmp
lahf
aas
jg
xchg
xchg
pushf
jno
dec
xchg
aad
test
mov
stc
repz
push
push
pop
sbb
std
daa
inc
scas
dec
sbb
mov
cmpsb
std
scas
sbb
jg
mov
or
fcmovnb
add
out
inc
push
jl
enter
lds
mov
icebp
and
pop
inc
and
fistl
mov
dec
sub
xchg
fnstcw
rcll
mov
fidivrs
loop
aaa
inc
inc
ret
lods
aam
pop
mov
pop
lea
jmp
aas
jg
cld
jmp
mov
mov
stos
mov
repz
lahf
nop
dec
ficoml
xor
xchg
xchg
xchg
cmpb
stc
mov
mov
jg
adc
fwait
aaa
out
out
ja,pt
pop
jp
test
dec
mov
in
test
sub
inc
stos
lret
dec
xchg
fidivs
or
stc
cld
stc
repz
jne
cli
jae
repz
movsb
repz
aas
and
jb
xor
mov
bound
pop
sbbb
stc
cs
sbb
out
cmp
stc
xlat
pusha
pop
xchg
out
mov
push
or
lahf
aas
jg
pusha
mov
hlt
pop
pushf
and
out
push
mov
adc
xchg
mov
ja
xchg
imul
adc
mov
pushf
popl
push
int
jne
or
or
inc
or
sahf
fdivrl
scas
push
loope
leave
clc
in
scas
loopne
rorb
loope
sub
aas
mov
inc
xchg
ret
xchg
repnz
repz
and
cld
roll
out
mov
int
mov
dec
outsl
mov
js
mov
pop
xor
gs
cltd
inc
xor
mov
inc
lahf
xor
cwtl
fsubr
xlat
adc
shlb
icebp
repnz
loope
xchg
cmp
out
and
xchg
jne
ljmp
xlat
push
add
adcb
hlt
popa
out
fwait
aaa
and
jns
in
mov
mov
jns
xlat
cmc
test
lock
lock
pop
mov
int
aaa
outsl
xchg
lahf
mov
lahf
jmp
and
adc
stc
ja
dec
jne
fstp
addr16
cld
fwait
mov
aas
jg
mov
clc
sbb
sbbl
enter
xchg
and
pusha
xchg
bound
stos
std
and
aad
dec
mov
xor
mov
add
sub
sbb
cli
je
aad
push
aas
mov
aaa
outsl
fimuls
adc
sub
bound
lcall
cmp
aad
lock
adc
inc
fidivrs
jmp
sbb
outsl
fiadds
jg
stos
clc
sbb
lcall
mov
ret
fwait
jg
jp
ljmp
aad
sbb
xor
sti
loopne
sbb
mov
adc
pushf
ret
cmpsl
je
and
imull
int
aaa
add
insl
mov
out
jns
hlt
xchg
push
out
or
mov
outsb
cmp
inc
fidivrs
das
aam
gs
daa
out
aam
enter
into
jle
xor
lahf
aas
jg
cld
out
mov
sub
push
arpl
stc
repz
iret
jb
and
lcall
jno
dec
pop
sbb
pop
ficoms
dec
imul
aam
filds
or
xchg
aaa
pop
xchg
fwait
out
lock
cmpsb
inc
minps
dec
xor
push
mov
dec
dec
inc
cmpsl
enter
cmp
hlt
test
ror
jmp
or
stos
stc
repz
out
popf
mov
add
xchg
xchg
or
mov
xchg
mov
sub
mov
mov
sbb
out
shlb
adcl
jl
rep
inc
dec
mov
dec
test
fidivrs
rcrb
mov
scas
popa
dec
aaa
out
fwait
aaa
pushf
nop
pusha
push
adc
data16
mov
jns
xchg
adc
jge
jo
lods
jae
int
mov
imul
out
aas
out
xor
shr
cmpsb
jg
iret
scas
fdivrl
xchg
call
add
dec
pop
rcpps
mov
mov
jae
fld
dec
pop
scas
sub
movsb
ret
ds
mov
ds
insb
cld
cld
jmp
hlt
jecxz
and
fidivrs
les
mov
fwait
aaa
outsl
xchg
sub
test
fsubrp
aad
pop
add
mov
imul
xchg
in
push
and
ja
inc
fimuls
xlat
fmull
sahf
xlat
in
int
xchg
andb
mov
popf
pop
iret
lahf
aas
lock
mov
jmp
out
pop
xchg
push
mov
lahf
jg
xchg
fs
ffree
fisttps
daa
mov
or
mov
dec
cmp
lahf
aas
jg
dec
push
or
lahf
test
call
mov
out
in
inc
sub
xchg
sub
fwait
aaa
inc
orl
mov
fs
inc
daa
fiadds
outsl
mov
jge
aam
ret
iret
test
imul
int
dec
xchg
mov
push
pop
adc
adc
outsl
fidivrs
lds
sub
int
add
lods
inc
pop
das
adc
arpl
sub
cmp
shrb
dec
fwait
aaa
outsl
fidivrs
push
mov
inc
mov
push
sbb
out
mov
mov
sbb
sbb
lods
adc
mov
fwait
aaa
outsl
ficoms
adc
aad
sub
das
in
int
mov
jnp
cs
xor
leave
leave
fwait
aaa
inc
scas
sbb
xchg
lahf
cld
roll
lret
aad
stc
repz
xor
icebp
sub
xor
dec
fcomip
testl
jecxz
push
aas
jg
sarl
mov
pop
pop
fbld
cmp
out
lahf
push
subl
or
jg
jae
loope
and
enter
ret
scas
pop
adc
repz
pop
inc
clc
test
sbb
popf
mov
jmp
pusha
ljmp
lock
inc
ljmp
push
insl
jns
out
loop
pop
push
loope
xlat
rcrl
mov
data16
push
push
and
mov
mov
clc
mov
mov
ja
fwait
aaa
outsl
fiadds
loope
into
lods
stos
jb
pop
outsl
mov
repz
mov
popa
out
fcoml
cmp
mov
ds
pop
cmp
cld
sbb
xchg
divl
pop
int
xor
hlt
repnz
mov
mov
inc
das
lcall
cmpsb
xor
jge
jb
or
lahf
inc
push
xor
push
jl
aaa
outsl
fidivrs
enter
insl
out
cmp
enter
pop
mov
fidivl
adc
mov
repnz
xchg
pop
sub
push
iret
jp
xchg
add
rcr
push
xchg
aaa
xor
out
fwait
pop
xor
rol
jb
cmpsb
out
shrl
mov
pop
inc
es
inc
iret
fmuls
lahf
cld
push
inc
xlat
aam
in
sbb
je
fimuls
xchg
repz
cmpsl
xchg
pop
dec
fsts
and
je
dec
gs
inc
jmp
push
mov
fcmovne
lahf
outsb
pop
jns
out
pop
sub
inc
pop
imul
pop
adc
movsb
lods
xchg
test
pop
fidivrs
call
mov
js
xchg
int
aaa
outsl
repnz
shlb
imul
mov
mov
imul
mov
repnz
push
cs
aaa
outsl
ficoms
into
popf
mov
incb
repz
jno
xchg
inc
pushf
std
mov
or
cmp
addr16
xor
stos
and
outsl
fidivrs
lock
leave
hlt
xchg
loope
dec
into
pop
jno
int
icebp
mov
rcll
imul
inc
inc
mov
mov
jno
sti
aad
aam
ja
in
fbld
scas
add
fstps
sub
imul
in
jns
pop
into
insb
out
mov
mov
mov
stos
mov
adc
rep
jp
adc
mov
mov
mov
aad
outsl
xor
push
fidivrs
push
sbb
sbb
ljmp
and
dec
ret
dec
cmp
inc
mov
mov
stc
in
jb
mov
test
mov
fwait
adc
lock
xchg
mov
out
test
out
int
sbb
mov
int3
fwait
aaa
inc
daa
adc
adc
inc
and
ljmp
fidivrl
or
rol
iret
mov
cli
leave
out
dec
pushl
enter
sbb
mov
jns
push
mov
dec
stos
mov
rcr
pop
std
inc
mov
cwtl
jg
xchg
out
push
inc
mov
jns
pusha
jns
push
push
add
adcl
loope
aaa
outsl
fidivrs
adc
inc
sub
imul
int
fnsave
add
lods
push
repz
mov
jge
mov
mov
repz
jo
cmpl
lret
jnp
push
ja
push
fwait
aaa
outsl
fisubrs
enter
scas
icebp
stos
jnp
jae
cmpl
int
pop
ret
sub
xchg
and
lods
std
sahf
push
aaa
outsl
fidivrs
loope
decl
lret
jge
repz
fwait
inc
pusha
orl
pusha
lret
mov
xor
loope
dec
mov
aas
mov
in
sbb
iret
cmpsl
jns
rcll
jns
out
aad
mov
xchg
nop
int
sub
fwait
aaa
outsl
fimuls
cmp
adc
stc
mov
dec
dec
cmp
out
mov
and
hlt
mov
or
fidivrs
cmp
xlat
dec
mov
jmp
cmp
nop
aad
ds
pop
out
jg
cld
loop
and
orb
scas
jl
in
iret
lahf
out
xor
jecxz
psllq
dec
das
adc
pusha
mov
nop
std
fwait
and
mov
cld
stc
repz
dec
mov
sbb
rcll
push
pop
imul
adc
loop
fwait
inc
or
aaa
scas
cmpsl
aas
push
fdivrp
stc
repz
je
jl
ret
adc
loope
dec
add
inc
rcr
and
int
ja
enter
sub
mov
fidivrs
jle
out
je
xchg
push
dec
stos
lret
enter
mov
mov
pop
mov
cmp
aas
jg
adc
cld
pop
enter
bound
push
in
out
xor
dec
sub
ss
iret
iret
mov
xchg
cld
adc
lds
test
outsl
fidivrs
push
mov
jo
jg
fcomps
xorb
shl
iret
lahf
imul
jg
jo
in
loope
stc
stc
ret
pop
imul
aas
jg
cld
sub
testb
cli
push
push
leave
out
lahf
cmp
addr16
call
iret
lahf
clc
xor
lret
sbb
sub
adc
repnz
cld
push
sahf
or
push
pop
scas
mov
fcom
hlt
stos
and
aas
ljmp
insl
mul
add
out
lahf
mov
inc
add
sbb
mov
mov
mul
pop
int
in
jge
xchg
aam
fwait
aaa
outsl
or
cmp
iret
pop
sub
insl
mov
pop
and
lods
sbb
in
shl
mov
out
nop
je
push
mov
push
fidivrl
repnz
push
mov
mov
data16
ljmp
xchg
xchg
repz
fwait
iret
cmp
out
loopne
bnd
cmp
dec
in
jp
mov
jne
cmpl
repz
xchg
sbb
out
je
dec
jb
clc
test
cmp
xchg
sahf
or
dec
sub
sub
sub
cmp
pop
and
insl
out
add
sub
adc
ret
movsb
shrb
outsl
jbe
ja
in
fstl
inc
outsl
out
mov
or
out
mov
sbbb
add
pushf
xchg
icebp
xor
jl
test
pop
es
call
test
outsb
fwait
ja
mov
inc
testb
enter
xlat
mov
sbb
push
pop
lds
cmp
out
shlb
adc
pop
out
aas
into
dec
in
out
fwait
xchg
or
cmp
mov
aam
or
add
test
jb
out
push
adc
push
push
mov
inc
mov
iret
lahf
jg
cmp
scas
pushf
sub
jno
push
push
jne
out
mov
jne
into
repz
mov
xorl
fdivrp
insb
fidivrs
es
shll
int3
int
orb
xor
test
out
ds
test
xlat
push
mov
and
outsl
ficoms
inc
xor
pop
outsl
pusha
sbb
jns
rcll
sub
ss
fidivrs
dec
loop
in
roll
sub
aaa
daa
ds
clc
add
ds
jg
orl
jne
dec
jmp
out
lahf
mov
in
xor
arpl
in
jg
cld
stc
shll
xchg
test
or
or
iret
lahf
aas
inc
sbb
pop
outsb
in
inc
int
fwait
ja
lock
movsl
cwtl
movsl
push
xor
sbb
int
push
fsubrl
ss
out
mov
fwait
jmp
lcall
jl
mov
push
shll
iret
add
cmpsb
pusha
add
add
nop
pop
daa
mov
add
add
mov
in
jae
mov
push
int
aaa
outsl
dec
xchg
das
sub
outsb
pop
fidivrs
sbb
call
adc
out
push
aaa
add
fs
ret
mov
inc
jns
out
pop
lret
adc
cmp
add
notb
popa
add
int
aaa
outsl
add
push
pop
sbbb
and
les
jae
iret
push
mov
cmp
js
mov
jno
add
imul
outsl
xor
sub
sbb
int
or
mov
and
inc
inc
and
dec
mov
aaa
mov
lea
add
mov
repz
fwait
in
inc
int
fmuls
dec
sbb
outsl
fidivrs
jb
popa
push
sbb
push
jo
and
aad
or
lods
mov
inc
jge
mov
mov
aaa
outsl
fidivs
mov
sti
leave
pop
ds
dec
jg
jb
out
push
mov
out
mov
nop
mov
sub
and
xchg
repz
jp
fisttpll
rcl
movl
mov
cld
inc
push
xchg
sbb
push
fistpll
pop
push
dec
test
popa
dec
in
filds
cmp
out
push
push
push
cli
cld
push
stc
lahf
aaa
outsl
fidivrs
std
and
fstl
jecxz
cld
mov
or
imul
cmpsl
iret
lahf
aas
jg
and
pop
pop
call
stc
repz
adc
dec
fsubrl
imul
lahf
aas
lcall
xchg
in
stos
enter
icebp
mov
sbb
clc
outsl
stos
hlt
jb
out
jg
sbbl
and
fsubr
fnstcw
jmp
jmp
push
inc
xor
loope
jmp
out
fwait
aaa
pop
orb
or
in
hlt
xchg
mov
mov
mov
jp
push
lods
mov
cmp
stos
pop
js
and
outsl
push
js
shlb
adc
xchg
xlat
in
data16
in
int
aaa
outsl
js
mov
cmp
mov
mov
inc
xor
out
cmp
sbb
sahf
aaa
push
lahf
mov
xor
stc
repz
out
mov
or
out
push
or
das
fldcw
jns
ss
sub
cmp
jg
mov
mov
mov
add
lods
xchg
testb
mov
mov
out
mov
push
lock
aaa
outsl
fidivrs
mov
jg
lock
lds
stc
jmp
and
xchg
clc
push
pop
xchg
aam
in
or
add
mov
add
inc
push
inc
xchg
xchg
cmpsb
sbb
shrl
or
mov
sbb
insl
mov
push
shlb
shrl
es
cwtl
pop
out
stos
sahf
faddl
fistpll
and
dec
jnp
add
lds
int
sqrtps
pop
cmp
cld
dec
int
dec
add
adc
mov
iret
inc
aaa
outsl
ficoms
jne
sbb
cmp
sub
fwait
ret
jbe
adc
aaa
jl
fidivrs
fmull
push
fxch
pop
aas
jge
pop
ja
sub
sub
popf
cld
repnz
lahf
mov
or
scas
and
mov
js
xchg
hlt
aam
dec
call
decl
adc
adc
fwait
aaa
out
push
adc
xlat
bound
mov
stc
repz
leave
out
gs
xor
or
cld
aam
push
mov
ljmp
or
jge
ljmp
mov
pop
stos
lods
daa
daa
mov
and
or
fcmovu
push
bound
fldenv
outsl
ficoms
in
xchg
aaa
mov
cmpsb
cmc
push
jno
int
lods
iret
gs
ror
fildl
push
xor
iret
repz
sbb
rorb
mov
in
fidivrs
push
stc
notb
les
out
fwait
aaa
jge
or
lods
lahf
or
mov
mov
repz
lods
je
jmp
loopne
sti
pusha
in
push
dec
out
adc
test
jg
adc
add
dec
dec
iret
mov
adc
mov
cmpsl
cs
jns
out
inc
addr16
mov
push
ss
aaa
outsl
ficomps
pop
add
xchg
nop
iret
shlb
jns
out
or
fwait
enter
in
comiss
fisubl
mov
sbb
movsb
xchg
dec
repz
mov
in
aam
mull
cld
stc
rcrl
xchg
cmp
sub
sbb
mov
jg
xlat
sub
stc
repz
mov
mov
xorb
ljmp
xor
test
dec
dec
popl
fidivrs
imul
and
jns
out
scas
rcr
loope
mov
lret
int
dec
xchg
pushf
aaa
outsl
fidivrs
adc
add
iret
pushf
mov
and
out
fwait
sbb
or
int3
mov
jns
jl
push
aad
aad
loope
icebp
inc
stc
out
fwait
aaa
mov
shld
cli
dec
repz
cmp
mov
xchg
lock
xchg
out
xlat
xchg
scas
fwait
aaa
out
and
mov
pop
xlat
inc
ja
jnp
js
out
add
push
inc
in
xor
jle
inc
lcall
test
jge
sahf
jge
insb
mov
pop
sbb
xchg
sbb
push
dec
mov
fiadds
out
mov
jns
push
and
add
cmp
mov
sub
and
sbb
mov
xor
loopne
mov
call
shll
fadds
xor
stos
sub
adc
and
inc
rcll
push
pop
adc
addb
inc
cmc
push
dec
or
sahf
or
sar
aam
add
push
dec
add
mov
adc
or
mov
and
hlt
push
add
sbb
inc
add
repz
popa
adc
and
cmp
cmp
or
cmp
jnp
sub
xor
ss
ret
add
xor
inc
jnp
or
push
sub
push
int3
or
sbb
icebp
inc
xor
inc
cmpsb
push
ljmp
icebp
cmpsl
add
add
push
je
lcall
shl
stos
call
mov
inc
add
inc
lds
jle
aad
out
mov
sub
cmp
mov
lods
and
divb
jecxz
push
arpl
push
sbb
push
inc
mov
inc
or
sbb
sbb
inc
add
orb
or
outsb
jne
rorb
inc
in
inc
add
popa
xor
fcmovnb
dec
shl
testb
jp
adc
mov
dec
add
inc
movsb
cmp
inc
xchg
mov
and
shlb
jl
inc
andl
fmull
lods
add
ffreep
sbb
aam
call
popa
arpl
mov
je
or
or
test
cmpsb
jno
add
pop
add
inc
insl
or
sbb
mov
mov
or
sub
mov
lock
xor
pop
ret
insb
sbb
ja
mov
add
push
shrl
adc
decb
and
cmp
leave
jp
lods
push
or
or
cmp
sbb
in
xchg
jmp
pop
adc
push
orb
cmp
cmp
shll
add
sbb
jb
xchg
ret
loopne
mov
push
push
verw
sbb
xor
pop
and
xchg
dec
add
sub
xor
cmp
push
add
dec
inc
fs
mov
push
add
fimull
pop
test
mov
adc
pop
stos
popf
add
test
sahf
mov
das
inc
sbb
arpl
jno
add
ficoml
icebp
stos
pop
sbb
add
mov
jmp
test
mov
and
xchg
inc
scas
sbb
cmp
sbbb
inc
jno
adc
dec
enter
mul
push
lret
add
aam
jg
cmp
ret
mov
hlt
rol
negl
pop
add
sbb
jmp
add
xor
jmp
roll
adc
inc
enter
add
idivb
fisubrl
testl
sub
lahf
pop
adc
scas
icebp
inc
hlt
mov
adcl
pusha
jmp
inc
pop
sub
es
aam
sbb
movsb
mov
add
push
xchg
imul
lahf
jp
loope
xor
mov
pop
mov
or
leave
add
jns
rcrl
lret
or
movups
push
add
inc
aad
inc
lret
push
xchg
rorl
cmpb
sbb
and
sbb
and
mov
sbb
push
or
lret
jo
add
push
inc
and
add
and
les
and
inc
mov
movsb
mov
push
mov
lock
add
adc
adc
je
into
and
sub
ficompl
mov
hlt
or
sub
cmp
mov
stos
mov
jnp
in
test
mov
cmp
pop
dec
rcrb
adc
cmp
add
scas
rorl
jnp
sub
add
popf
rolb
push
popf
clc
cmovg
clc
push
hlt
mov
mov
add
xchg
xchg
addr16
and
jg
fwait
mov
addr16
mov
xchg
ret
mov
adc
stc
shl
adc
adcl
xor
and
and
pop
pop
outsb
das
and
or
xor
aam
aad
lcall
mov
lret
repnz
adc
std
cmp
fldenv
test
pop
divl
add
cmp
shl
lods
add
rcl
test
push
leave
sub
mov
outsb
adc
adc
mov
push
adc
movsl
cmp
mov
pop
rcrb
ret
sbb
cmp
call
xor
popa
stos
dec
inc
adc
mov
or
gs
pop
ret
adc
adc
jb
jecxz
pop
mov
jp
adc
sbb
mov
call
sarb
test
jno
jnp
js
iret
xchg
movsb
or
shrb
push
mov
jl
sbb
push
push
inc
adc
or
push
and
push
imul
aad
inc
shrb
into
popa
add
push
lcall
mov
push
lods
ret
pop
mov
mov
aam
push
aas
movsb
push
add
xor
rolb
xchg
pop
pop
imul
mov
cmpps
or
loop
add
cwtl
inc
aad
mov
push
sub
cmp
sub
sub
notb
sbb
scas
scas
data16
das
sbb
movb
push
push
or
daa
push
sub
sbb
imul
xchg
push
push
mov
push
test
pop
fwait
scas
into
inc
decb
jge
push
rcll
leave
xlat
popf
push
inc
mov
test
dec
push
and
add
push
inc
je
adc
stc
and
mov
xchg
in
popf
mov
inc
outsb
andl
xor
adc
push
dec
jne
es
push
dec
pop
insb
add
sbb
jbe
enter
sub
lret
or
add
adc
loop
add
push
inc
shll
sub
in
js
xlat
out
sbb
jge
xchg
add
fwait
push
or
mov
fnsave
mov
push
add
or
adc
pop
popl
ret
aas
adc
mov
add
call
xor
jl
adc
icebp
jp
leave
jmp
push
mov
xor
mov
fnsave
xlat
sbb
xor
add
add
int
mov
mov
clc
push
repz
insb
adc
mov
js
rcrb
andb
or
test
xlat
or
push
and
mov
data16
addb
push
mov
lock
mov
mov
adc
add
or
push
fcomps
or
sbb
mov
shrb
pop
bound
imul
cmpsb
pop
inc
push
pop
and
hlt
add
imul
lods
pop
pop
xchg
jbe
leave
and
push
lds
or
push
jae
inc
rcrl
rorb
pop
cmp
js
or
push
addr16
mull
push
or
pop
lahf
les
test
and
rcrb
ret
inc
add
sti
repnz
and
xchg
and
mov
ljmp
push
ss
loope
into
cmc
add
popa
push
roll
mov
stos
test
add
sbb
xchg
dec
scas
push
push
sbb
mov
jle
sbb
mov
adc
stos
arpl
sbb
mov
pop
sbb
mov
rcll
pop
add
dec
mov
cmp
lds
and
xor
xor
or
fstpt
mov
pop
mov
adc
addl
sbb
and
and
sbb
in
scas
xchg
mov
cmp
add
bound
int
xchg
gs
ss
mov
jo
fldt
sbb
cwtl
sub
xchg
jo
and
nop
jp
or
sar
push
sub
stos
dec
lret
mov
in
xor
gs
adc
aam
pusha
jae
sbb
cltd
push
add
mov
add
sbb
lods
inc
in
adc
xchg
xchg
xchg
loopne
aaa
jmp
mov
push
fimull
adc
dec
push
shlb
cmpsb
pop
fwait
cmovae
clc
or
mov
sub
jno
adc
and
mov
js
or
rclb
add
mov
cwtl
out
cmp
rol
mov
pop
leave
test
dec
sub
jge
loope
mov
inc
adc
rol
xchg
roll
add
or
rol
outsl
pusha
add
push
rcrb
stos
cmp
cmp
cltd
mov
xchg
adc
sbb
enter
or
rcrb
mov
add
stos
sbbl
jo
jns
pop
loopne
adc
push
push
dec
out
stos
xor
xchg
rol
xchg
xchg
sub
in
push
xchg
std
mov
lcall
test
subl
inc
mov
mov
sarb
rcrl
inc
and
mov
btc
pop
add
cli
fimuls
mov
shl
sub
adc
test
gs
cmc
stos
dec
out
adc
adc
xor
pop
pop
sarb
xor
lock
push
lcall
popf
or
ljmp
push
and
dec
pop
pusha
inc
fwait
test
test
mov
lods
jmp
test
lds
or
hlt
icebp
mov
rorl
adc
rcll
xor
jbe
addb
sub
adc
negb
clc
adc
rol
xor
dec
jp
in
mov
mov
xor
mov
dec
xor
add
scas
test
rcrl
adc
testb
dec
sub
divb
sbb
lret
and
jb
add
rcrl
loope
or
sub
inc
rorl
add
push
adc
popa
mov
pop
push
mov
inc
inc
mov
pusha
push
aaa
dec
jmp
andb
sub
push
xchg
lret
inc
jae
ljmp
mov
or
cmpxchg
inc
adc
mov
or
scas
loope
es
sbb
call
scas
and
add
mov
rclb
pusha
jo
loope
rol
inc
sbb
or
add
addr16
adc
xor
adc
or
lds
rol
inc
sub
sbb
in
enter
stos
rolb
add
lods
push
popf
xor
push
add
fiaddl
stos
lret
pop
inc
xlat
test
shlb
movsl
lods
fisubl
movsl
and
les
jno
jp
test
dec
clc
adc
jne
add
decb
or
jmp
mov
inc
xor
xor
mov
ret
mov
int
je
cmp
flds
rol
dec
xlat
sbb
add
inc
ficoml
enter
outsl
pop
dec
adc
pop
jne
and
adc
pop
inc
xchg
ret
adc
fwait
adc
lea
dec
int3
shll
or
sbb
and
icebp
adc
les
and
inc
out
xchg
fcomps
mov
xor
push
stos
xchg
aam
enter
std
mov
out
je
mov
inc
pop
test
mov
jle
adc
sub
and
ret
jo
addr16
xor
fisttpl
es
subl
adc
subl
add
fdivrl
or
adc
andl
cmpsb
add
mov
sbb
and
lds
adc
shrb
adc
or
sub
mov
test
sbb
pop
mov
into
add
test
sub
and
ds
into
pop
or
adc
or
jno
rcrb
push
jle
adc
add
cs
or
mov
popa
notl
sbb
clc
push
outsb
es
push
lret
adc
or
and
scas
xchg
test
cmp
cmpl
jmp
test
push
negb
les
pop
sbb
push
add
aad
inc
test
jge
mov
lret
pop
add
subb
data16
cmp
add
jo
or
cmpsb
addb
push
cmp
enter
inc
arpl
jge
test
jo
mov
inc
addr16
or
sbb
orl
sub
pusha
ljmp
adc
adc
ficomps
int3
and
jl
mov
rcll
add
stos
sbb
cmp
pop
xchg
cli
faddl
jp
lret
imull
dec
sarl
fs
push
adc
es
or
jo
daa
jne
leave
jbe
or
push
adc
cld
jmp
mov
push
fcomip
pop
fists
pop
push
adc
orb
mov
push
or
shll
xchg
enter
pop
loop
dec
inc
test
inc
push
mov
aad
or
mov
or
test
adc
inc
add
sub
or
jl
add
add
add
dec
add
clc
rolb
loop
mov
xor
aad
inc
cli
sbb
dec
inc
push
sar
push
pop
lcall
add
jb
scas
xorb
in
push
xor
aad
add
cmp
in
add
adc
add
adc
mov
mov
and
mov
iret
mov
jo
pop
into
dec
sub
in
dec
icebp
push
daa
add
sar
adc
and
setp
xor
cmp
fisttpll
lods
addb
dec
fcmovnbe
in
lods
lahf
aad
icebp
ljmp
cmp
inc
or
push
mov
inc
and
sbb
cmp
xor
stos
mov
addr16
add
sbb
jo
or
mov
jb
subb
inc
mov
scas
adc
pop
cltd
xchg
mov
pop
inc
mov
fistpl
pushf
xchg
mov
push
jae
cmp
or
pop
push
lds
loopne
and
jae
test
adc
inc
ffree
pop
add
imul
loop
push
dec
mov
adc
loopne
in
mov
mov
pushf
pop
sbb
shll
push
push
ret
adc
push
mov
out
sbb
movsl
scas
lock
push
and
xor
mov
inc
add
jo
mov
lret
stc
fcoml
inc
ficoms
sbb
jge
push
add
mov
add
lock
loop
push
movl
push
movsl
sahf
ds
pop
xor
pusha
push
mov
push
push
push
in
out
pop
push
loopne
mov
call
add
push
add
xchg
mov
ss
and
push
pop
les
mov
push
push
movsl
jno
cmpsl
mov
inc
xchg
pop
fs
stc
movb
xchg
out
sbb
dec
adc
inc
and
sbb
push
pop
mov
cli
in
xorb
push
roll
mov
psrlw
or
outsb
fs
ror
xor
rorl
sbb
push
xchg
stos
and
push
sub
inc
push
pop
xor
icebp
add
bound
pop
inc
mov
int
pop
xor
test
or
lret
notb
pop
icebp
add
lock
inc
mov
mov
sbb
xchg
mov
cmc
push
xor
aad
xchg
mov
subb
sbb
stc
aam
mov
ss
mov
mulb
xor
adc
xor
fnstsw
int
repnz
mov
fsubrl
or
pusha
jne
push
ret
sub
out
inc
or
iret
push
sbb
xchg
popa
clc
mov
push
cmpl
jmp
out
add
or
daa
adc
mov
and
mov
in
movsl
inc
jbe
push
xchg
rorb
sbb
shll
ja
push
adc
insl
ret
push
fstpt
sub
jo
xchg
andb
lret
mov
xor
sbb
pop
mov
xchg
test
pop
and
pop
es
pop
push
addl
dec
pop
adc
push
fists
mov
push
inc
iret
or
rcrb
xor
and
pop
add
add
movsl
insb
pop
sar
adc
mov
xor
mov
shlb
or
inc
cmp
fmull
ljmp
leave
push
loop
pop
or
sbb
ljmp
mov
aam
add
insb
inc
lock
int
add
or
icebp
sub
adc
or
push
xchg
dec
push
arpl
sbb
bnd
aam
mov
daa
lods
movsb
mov
push
scas
xor
cmp
imull
push
adc
shll
mov
rclb
adc
dec
xchg
add
test
inc
push
adc
cwtl
das
push
mov
jo
jl
inc
push
push
mov
aam
inc
or
push
xor
sub
out
pop
popf
loopne
inc
clc
add
adc
leave
push
sub
sbb
enter
jo
sbb
mov
push
and
stos
testb
mov
xor
ret
and
dec
out
js
mov
imul
shrb
call
shlb
add
inc
and
sub
in
out
rolb
je
jne
push
jo
lds
jge
mov
inc
sbb
push
adc
loope
loope
jl
or
dec
pop
fdiv
fsubp
jne
add
js
push
xchg
xor
sahf
test
xchg
scas
cmp
mov
daa
xor
mov
push
in
rolb
push
rorb
idivb
into
jge
push
jns
testb
add
sahf
arpl
test
cwtl
fs
pushf
rorb
ret
xchg
or
inc
jmp
shrb
std
ret
sbb
pop
pop
sub
and
xchg
push
sub
push
push
jo
mov
sub
push
and
in
enter
pop
sbb
bnd
cs
and
loope
bnd
xchg
jle
rclb
addr16
adc
mov
jg
testl
inc
add
pop
insb
sub
fwait
add
sbb
ljmp
add
jge
je
sqrtps
add
push
mov
or
sbb
adc
or
sbb
ljmp
or
add
push
aaa
mov
loopne
in
and
stos
or
mov
adc
rcll
gs
roll
adc
add
cmp
leave
scas
cmp
pop
adc
xlat
push
mov
adc
out
movsb
mov
call
and
dec
repnz
push
jmp
cmp
repnz
lds
mov
mov
mov
add
xchg
and
mov
fcoms
dec
inc
arpl
xchg
cmpsb
or
xchg
into
inc
and
cmpsl
rorl
stc
cmpsl
pop
scas
inc
stos
int3
cmp
rorl
mov
dec
adc
stos
xor
or
mov
pop
adc
inc
rcll
js
jp
out
jo
or
xchg
dec
js
scas
daa
fmul
jge
lret
inc
pop
mov
scas
out
mov
mov
or
or
mov
inc
push
and
push
scas
scas
rolb
cli
inc
enter
add
hlt
sbb
add
sbb
mov
fwait
add
sub
flds
daa
add
add
ljmp
pusha
inc
insb
cmp
sub
adc
adc
push
add
into
ja
cwtl
bound
or
or
or
rcrb
xor
inc
inc
sahf
add
add
es
mov
push
repz
mov
jge
or
rcrb
add
add
xor
mov
jle
shrb
xchg
sbbb
pop
mov
inc
cmp
add
nop
call
and
and
lcall
push
ljmp
pop
rcrb
ljmp
push
rclb
dec
inc
jns
and
or
push
inc
ret
sbb
es
div
add
and
adc
add
repz
add
lods
inc
and
psubsw
adc
aaa
xor
ret
std
mov
mov
fwait
lds
lds
loop
es
adc
test
mov
int
rorl
shl
mov
adc
sub
dec
add
xchg
fcoml
xor
test
add
xchg
jmp
pop
inc
mov
cmp
sti
xor
bound
dec
pop
cmp
cmp
add
mov
jb
pop
add
sub
or
cmpsb
mov
add
push
scas
add
push
xor
sbb
xor
movsb
xor
jo
imul
lods
pop
pop
sbb
push
pop
les
aad
sti
je
rclb
push
addr16
add
adc
jnp
or
bound
imul
jo
xchg
add
adc
adc
dec
aam
shl
pop
fidivs
daa
mov
mov
ret
add
fwait
or
add
push
pop
movsb
movsb
sbb
adc
sub
adc
adc
adc
mov
pop
and
not
pop
mov
aad
mov
push
shrl
in
mov
jmp
loop
and
sub
pushf
mov
stc
fs
shrl
xor
es
add
and
orl
xor
sbb
and
insb
mov
enter
dec
into
shrb
cs
repz
ret
mov
pop
xor
subb
cmp
gs
push
call
mov
rorl
sbbl
mov
aam
movb
rcr
push
mov
xchg
pop
mov
add
jae
sub
imul
mov
push
adc
cmp
bound
imul
aam
cli
cmpb
insl
fsubl
xor
jns
sub
testl
push
outsl
cli
jge
test
je
xor
rcl
sbb
mov
dec
rclb
or
inc
test
in
es
js
adc
cld
loop
push
inc
or
push
pop
vandnps
mov
sbb
add
imul
push
mov
add
rclb
jp
ret
and
push
cmp
sub
mov
ret
movsb
mov
cmp
rclb
scas
xlat
into
and
or
push
push
in
out
inc
xchg
mov
push
add
push
xchg
add
add
insl
rorb
add
add
gs
sahf
rcrb
cmp
insl
push
lods
mov
fs
mov
xchg
es
inc
xor
or
or
push
xor
aad
push
ret
addb
sbb
sbbl
and
add
mov
sbb
add
test
sahf
push
cld
fcom
add
shlb
test
cwtl
add
cli
adc
xchg
push
mov
loopne
xor
fxch
add
loopne
pop
popf
lahf
mov
sarb
lea
inc
stos
lcall
rolb
push
hlt
ret
push
add
popf
rcll
and
adc
cwtl
add
daa
add
or
jle
ljmp
enter
xchg
add
pop
xor
pushf
rol
mov
mov
icebp
in
out
xor
repnz
cmp
add
dec
adc
inc
addr16
add
inc
add
out
push
pushf
inc
ret
push
lods
jmp
enter
adc
or
and
sbb
cmp
sbb
push
mov
arpl
lds
add
or
test
icebp
or
arpl
inc
push
push
add
adc
and
test
cmp
pop
xor
cwtl
ljmp
or
addb
aam
sub
lret
xor
mov
movsl
shll
pop
push
sub
js
xchg
shrb
out
std
out
inc
add
ficompl
shlb
adc
and
movsb
pop
add
adc
ret
add
inc
sub
jb
stos
push
testb
push
inc
sbb
es
pop
push
dec
das
add
mov
inc
cmp
adc
xchg
test
stos
add
mov
sbb
aam
ret
inc
les
lock
test
dec
xor
cmc
push
mov
sub
subl
jg
push
sub
ret
sub
popa
push
xchg
loope
js
arpl
inc
jmp
cwtl
adc
mov
cmp
mov
sbb
sub
dec
xor
sub
adc
jl
movsb
stos
push
hlt
adc
pushf
fs
adc
negb
rcrb
xlat
cmp
mov
adc
push
jo
xor
mov
and
xor
adc
mov
adc
sbb
mov
aam
cwtl
lods
lahf
jp
push
or
addb
fs
punpcklbw
inc
and
sbb
mov
xchg
pop
addb
pop
add
subl
loopne
push
or
xchg
sbbb
push
int3
fldl
cmp
stos
lock
popf
xchg
mov
notb
in
shl
nop
into
inc
push
xor
sti
jo
ret
loope
push
aam
push
mov
xchg
inc
or
shll
lret
test
cmp
mov
sar
bnd
sbbl
mov
xchg
sbbl
test
xchg
mov
les
test
sbb
mov
cltd
cs
js
push
adc
sub
scas
and
js
sbb
sbb
loop
and
add
movsb
lods
push
dec
mov
pop
push
ror
pop
mov
inc
and
add
stos
loope
cmpsl
or
inc
sub
mov
push
dec
or
pop
and
and
jne
stos
adc
ret
inc
xchg
leave
clc
jmp
push
xor
push
rolb
add
push
or
je
loopne
fidivl
add
cs
aam
add
add
pusha
xor
sub
lcall
into
adc
add
out
or
stos
pusha
lret
jp
push
xor
push
jl
pop
mov
mov
xchg
les
testb
mov
arpl
movsb
popf
sahf
adc
mov
out
mov
call
or
cmc
inc
cs
js
call
mov
add
cltd
clc
cli
icebp
test
imul
lds
xchg
cltd
adc
jp
rcrb
cltd
loopne
pusha
push
add
aas
xor
sbb
daa
mov
cmp
test
and
es
fs
les
and
call
push
push
push
add
cwtl
xor
or
xor
shl
ret
cmc
sub
or
or
xor
add
mov
fs
inc
pop
sbb
and
cmp
daa
pop
xor
mov
pop
mov
sub
ss
rcr
mov
loopne
sbb
or
dec
inc
int
pusha
loop
mov
sbb
add
test
add
fisttps
or
mov
jb
sbb
cmp
lock
jp
shlb
xchg
push
adc
lahf
mov
and
call
xor
xchg
sbb
push
dec
adc
ret
inc
inc
xchg
mov
add
ds
ret
cmp
jae
fcom
lahf
cmp
iret
sbb
fwait
sub
rclb
and
repnz
push
xchg
pop
mov
or
gs
cmp
mov
mov
inc
subb
ds
rcll
adc
data16
push
js
push
rcl
rorl
sub
adc
sub
xor
popa
test
and
push
in
ret
sbbl
cmp
and
push
mov
push
adc
push
mov
push
sbb
push
loopne
out
int
mov
dec
lahf
lock
shll
sbb
sahf
or
push
cmp
xor
sti
ret
and
push
sub
jae
sub
jge
sbb
imul
shrl
sbb
and
inc
xor
adc
push
mov
add
aas
stos
mov
xor
dec
and
test
cmp
mov
push
pushf
mov
test
fnstenv
les
and
xchg
sub
pop
inc
scas
popa
jno
adcb
scas
push
sub
xor
rorl
mov
sbb
arpl
pop
inc
mov
inc
adc
or
xor
daa
pop
adc
lret
pop
or
or
lea
jne
adc
adc
ret
pop
loop
enter
call
leave
dec
sbb
je
jo
stos
mov
mov
lock
jb
dec
cmpsl
ja
add
push
mov
sub
sub
add
in
pop
addr16
repnz
test
stos
cli
cmp
jecxz
in
pusha
xor
xor
pmuludq
or
mov
pop
loop
add
cmp
ret
cmp
xor
sar
cmp
mov
dec
dec
or
repz
lods
xchg
scas
mov
push
push
or
mov
xor
int
adc
mov
orl
arpl
add
pop
daa
imul
mov
das
xor
mov
xor
add
push
sub
std
jo
pop
mov
add
sub
in
jo
jae
test
ffree
movsl
shlb
add
push
and
jl
out
xor
rcll
or
ss
cmp
std
aad
mov
mov
or
fs
pop
mov
sbb
xchg
imul
or
outsb
push
lds
jl
stc
add
add
adc
add
sahf
fsubs
inc
mov
push
mov
test
adc
dec
rclb
cmpsl
add
aad
sub
xchg
cmp
daa
stos
fcoms
push
dec
lret
add
subl
mov
or
fists
dec
ja
xchg
adc
adc
sbb
mov
add
sub
and
stos
pushf
and
lock
mov
pushf
sbb
push
test
ja
mov
loopne
pop
lea
mov
loopne
adc
cmpsb
rorb
jnp
fiaddl
cmp
dec
jo
jns
dec
daa
pop
inc
mov
rol
lea
sub
xchg
jae
sbb
mov
fldl
and
add
fs
adc
out
xor
sbb
push
and
cltd
mov
rclb
adc
shrl
dec
or
mov
pushf
enter
adc
sbb
sarb
mov
icebp
push
pop
popa
sbb
pop
inc
xchg
pop
sbbl
aaa
xchg
repnz
pop
mov
mov
sub
adc
adc
adc
mov
stos
cmp
andb
xor
cmp
inc
or
jl
push
nop
jp
mov
sbb
test
push
imul
or
adc
xchg
add
aam
sbb
lds
test
hlt
enter
rclb
pop
add
sahf
sub
popa
std
mov
xchg
and
addr16
notl
add
sbb
push
or
and
mov
push
scas
loop
into
cmp
adc
push
int
xor
repnz
addr16
add
adc
mov
xchg
ljmp
ret
push
sub
mov
add
cmp
adc
push
mov
pop
mov
adc
jb
cmpsb
out
in
push
ljmp
cmp
add
psubw
and
pop
xor
add
add
mov
xorl
push
call
jmp
xchg
sahf
cmp
inc
sub
enter
jge
sub
inc
xchg
jnp
inc
ljmp
jl
mov
xchg
push
dec
sbb
mov
ss
ljmp
adc
cltd
xlat
cltd
jns
cmc
adc
mov
orb
mov
jb
or
out
push
inc
es
outsb
sub
lcall
mov
and
or
push
fwait
add
mov
les
adc
xlat
jg
adc
mov
outsb
in
xor
repz
xchg
pop
nop
or
add
push
into
pop
mov
mov
js
dec
inc
sub
push
mov
push
pop
add
pop
sbb
movsl
imull
mov
adc
jo
fcmovbe
les
icebp
xchg
movsl
xchg
pop
shlb
add
cs
xor
mov
cmp
xchg
push
push
xorl
jb
roll
pop
ljmp
push
add
inc
mov
js
mov
add
ret
mov
pop
inc
mov
xor
popa
and
and
and
add
int
cmp
dec
or
or
lods
sbbb
cmpsl
lret
pop
dec
push
ljmp
int
add
add
cmp
inc
xor
ja
jle
and
jns
rolb
stos
jp
hlt
sub
subb
sbb
mov
or
enter
pop
mov
add
test
test
push
mov
ljmp
xchg
sub
inc
add
xsaves
jmp
pusha
sub
jno
add
jg
stos
and
and
and
mov
adc
sbb
fdivrl
adc
sub
outsb
sbbb
pop
repz
aas
or
or
jb
jae
push
rcl
andl
cmp
cmpsb
push
out
add
push
test
aad
rorl
fimuls
enter
ret
and
adc
push
sbb
pusha
shl
cmp
ljmp
push
stos
sbb
adc
mov
gs
pop
test
sbb
dec
movb
mov
jl
push
rcrb
lret
cmp
movsb
xchg
pushf
in
sbb
jle
xchg
pop
loopne
adc
lock
icebp
inc
sbb
add
aaa
pusha
mov
xor
push
adc
loopne
daa
loop
jp
push
jo
pusha
mov
in
test
sbbl
aam
pop
lcall
or
sbbb
add
sub
xchg
inc
push
push
adc
pop
popa
shrl
mov
adc
dec
and
adc
xlat
inc
aad
lods
or
into
ljmp
bound
dec
adc
xchg
mov
mov
cmc
rcl
or
jg
push
sbb
mov
adc
mov
inc
sub
xor
and
mul
mov
leave
pop
orl
mov
sub
in
add
and
jmp
jne
push
push
xchg
jle
nop
rorl
add
sub
sbbl
test
hlt
sub
mov
cs
xchg
pop
sub
fwait
push
jnp
add
sbb
xchg
add
inc
or
std
rcr
adc
aam
popf
sbb
fs
push
xchg
adc
push
cmp
insb
cwtl
sub
test
add
lret
add
enter
mov
jae
sbb
mov
xor
subl
je
mov
adc
pop
add
push
lods
sbb
and
cwtl
fistl
roll
stos
shrl
mov
adc
sahf
pop
mov
push
cmp
pop
xor
pop
popf
ficoml
sbb
mov
xor
jmp
js
bnd
add
mov
icebp
sahf
jne
pusha
loopne
call
push
and
aam
mov
cltd
addb
adc
sub
frstor
fists
xor
mov
dec
pop
test
cwtl
fistpl
adc
icebp
or
pop
loope
sets
mov
pop
pushf
aad
loopne
loopne
fistpl
push
sub
inc
insl
enter
lods
push
inc
and
pop
jecxz
jg
mov
enter
in
dec
std
jno
and
add
mov
fidivl
jle
daa
pusha
inc
scas
sub
sbb
jne
or
mov
add
fs
data16
nop/reserved
adc
dec
hlt
or
or
mov
out
incb
aaa
test
sbb
adc
add
and
push
sbb
lcall
push
clc
sub
cmp
and
push
bound
std
cltd
cmp
mov
rorl
adc
scas
add
add
sbb
pop
inc
and
jns
es
xchg
fcomp
rclb
mov
pop
mov
lret
push
or
mov
in
adc
out
pop
push
sub
dec
adc
rclb
or
xor
or
jge
ret
cmpsb
or
cmpsl
lock
stos
mov
push
lods
ljmp
notb
add
push
xchg
jp
add
adc
xchg
pop
js
dec
rorb
pop
aam
leave
pushf
mov
test
add
add
adc
push
or
add
lods
in
push
adc
sbb
xor
rclb
pop
cmp
cmp
push
fsubrs
add
sub
inc
sbb
insl
or
mov
popf
addb
shrb
cmpsl
test
add
xor
into
mov
adc
iret
shr
shrb
aam
jbe
xor
ret
push
cli
push
leave
loop
aad
inc
loopne
mov
sub
test
cmp
daa
xor
mov
mov
dec
mov
adc
xchg
lcall
sub
adc
in
push
inc
mov
add
cmp
in
sbb
inc
jno
scas
adc
shrb
and
xchg
rclb
and
add
hlt
rcll
loopne
iret
add
push
cli
enter
and
cmp
add
cmp
sbbl
push
push
mov
xchg
test
adc
mov
add
call
loopne
ret
scas
sarl
xor
dec
jo
pop
add
sbb
icebp
or
and
rcll
push
jb
push
pop
je
ja
lret
clc
les
lcall
pop
test
orl
adc
roll
mov
hlt
and
stos
int
mov
aas
stos
fcmovne
push
mov
mov
or
sbb
push
stos
push
sarb
enter
adc
dec
push
rorb
or
add
or
mov
push
or
iret
xor
clc
and
add
ret
sbb
stos
sub
push
mov
xchg
mov
mov
aam
mov
xchg
cmp
xor
pop
mov
sbb
push
push
sbb
adc
adc
subl
adc
bound
or
inc
pop
pop
addr16
subb
sbb
std
or
mov
inc
rol
lret
inc
ficoml
xchg
repnz
pop
xlat
loop
push
rcrb
shrl
inc
cmp
inc
sub
adc
ret
pushf
jae
outsl
or
xor
sub
sbb
ljmp
and
sub
int
lret
cmpsl
xchg
clc
or
or
nop
jmp
and
sbb
mov
loop
outsb
adc
add
mov
adc
shlb
xchg
and
rcrb
mov
push
sbbb
lret
aam
call
lea
sub
int3
mov
aaa
or
push
addr16
xchg
or
push
shll
xlat
dec
mov
add
cmpsb
pop
sub
addr16
lods
cmp
mov
dec
mov
call
xor
lods
sub
movsl
ljmp
push
adc
pop
pop
or
adc
ljmp
mov
jb
xchg
lret
test
mov
popa
pop
cmp
sbb
push
sub
add
aam
cwtl
ljmp
xor
push
xor
and
mov
push
and
add
add
xchg
inc
inc
add
push
in
decb
inc
sbb
addr16
add
and
or
rorb
xchg
ljmp
push
out
mov
adcl
aam
mov
adc
and
add
cld
push
and
inc
call
pop
cwtl
stc
inc
pop
pop
sub
add
rcrl
pop
call
push
shlb
popa
jge
or
pop
shl
enter
push
test
jns
mov
sub
shlb
xchg
hlt
push
testb
cmp
and
ret
xchg
sub
cwtl
or
push
cwtl
iret
mov
loope
pop
add
pop
add
and
xchg
pop
je
or
rolb
add
orl
inc
sbb
cli
mov
das
sub
add
dec
test
push
inc
push
sbb
ss
inc
in
and
subb
cmp
idiv
inc
jo
lret
pusha
cmpsb
mov
xor
mov
push
je
pop
addb
ret
fcmovb
xor
or
mov
or
test
sbb
mov
fnstcw
jmp
pusha
inc
inc
das
xlat
rol
jge
loopne
call
sbb
mov
outsl
xorb
or
mov
or
xor
adc
in
lds
xchg
sbb
sbb
inc
push
or
nop
nop
adc
adc
push
arpl
add
push
or
aad
sarl
push
pop
stc
push
adc
int
adc
dec
jno
imul
push
das
rorl
add
add
rolb
bound
or
mov
pop
gs
xchg
lcall
push
sbb
scas
mov
inc
cmp
jmp
inc
shrb
and
push
pop
add
stos
push
rep
mov
lock
and
roll
push
roll
and
pop
adc
push
inc
outsl
in
cmp
mov
push
leave
test
aam
push
inc
inc
mov
or
sbb
dec
mov
sbb
enter
jae
jnp
sub
cmp
dec
loopne
add
neg
fldt
jp
cmp
pop
roll
or
mov
or
test
push
in
out
psadbw
push
xchg
mov
sbb
and
lret
sbb
inc
cmp
addb
adc
pop
test
inc
lret
ret
dec
jb
xchg
xor
sub
inc
cmpsb
pop
push
adc
fisttpl
cmp
push
pop
dec
push
icebp
stos
adc
jbe
fscale
pop
lret
cmc
inc
jge
and
xchg
jp
xor
mov
or
cmp
inc
addr16
jmp
into
xchg
push
push
stos
loopne
adc
add
loop
jle
or
cmp
add
xor
movsb
or
xchg
cmp
adc
into
icebp
lock
test
lds
xchg
cli
stos
add
cmp
pop
add
fdivl
push
dec
adc
sbb
dec
xor
daa
rcll
adc
dec
cli
or
add
shll
mov
adc
push
pushf
push
adc
push
lods
xchg
and
enter
in
push
cmpsl
std
mov
into
test
stc
add
into
add
push
push
push
lret
and
in
cmp
or
mov
dec
push
stos
cmp
add
fimuls
inc
adc
push
test
mov
aas
jb
mov
icebp
sbb
shlb
add
push
icebp
jg
fisubrl
mov
pushf
add
lds
aad
and
pusha
and
cmp
insl
inc
jb
stos
or
imul
orb
xchg
lds
shr
sub
pop
xchg
push
push
lock
push
in
fs
add
ss
push
or
out
adc
out
push
ds
push
mov
dec
jnp
daa
xor
aaa
inc
mov
ja
mov
lret
shrb
les
mov
pop
ficoms
add
sahf
add
test
shrl
fisttps
cmpsb
dec
push
jmp
add
and
in
or
cwtl
sub
mov
jb
sbb
daa
ljmp
insl
xor
mov
data16
or
xchg
ret
push
nop
addb
bound
xorb
std
mov
test
push
gs
add
pusha
cmp
pop
mov
push
les
lock
mov
btc
jb
sbb
sbb
cmpsl
jae
cs
scas
sub
push
lods
push
hlt
mov
jle
sbb
jo
stos
pand
pop
jo
lcall
and
orl
je
push
es
aam
into
into
push
in
add
jmp
mov
dec
or
push
fbld
aaa
sbb
or
jge
inc
pop
xor
dec
clc
orb
cmp
mov
and
icebp
dec
pop
pop
cmp
push
leave
jbe
add
call
lret
popf
mov
loopne
cmc
outsl
push
xchg
add
push
scas
sti
lret
cs
jle
or
add
adcb
xor
xor
fldl
lahf
sub
add
dec
pop
jno
cs
push
gs
add
inc
or
push
adc
and
inc
inc
call
dec
mov
loopne
lcall
pop
sub
adc
xor
inc
loopne
leave
jns
leave
add
es
out
subl
or
mov
lret
mov
movsb
test
icebp
stc
shlb
arpl
in
insl
sub
pop
push
adc
andb
cwtl
dec
add
js
testb
loope
sub
dec
xlat
xor
in
jo
push
adc
sti
pop
imul
pop
jb
leave
test
iret
test
push
xor
or
stc
jmp
add
add
mov
js
mov
lock
sub
xor
or
mov
inc
push
dec
mov
pusha
test
decb
call
insb
mov
add
out
loope
insb
cltd
ret
iret
not
sahf
inc
rolb
dec
shl
add
andl
dec
sbb
call
cmp
jo
mov
addb
rolb
adc
mov
ja
lahf
not
dec
adc
adc
xchg
repnz
jb
orb
push
push
je
leave
push
pop
bound
push
sbb
push
xor
mov
and
cwtl
sub
dec
jle
fimull
popa
mov
xor
pop
sub
loopne
loopne
add
loop
add
repnz
mov
inc
daa
or
lods
mov
push
ret
add
into
lcall
ret
pop
inc
ret
jge
addr16
mov
adc
nop
sbb
pop
or
mov
pop
cmp
insl
xor
pop
inc
sub
fwait
lock
dec
ds
inc
adc
mov
in
adc
or
adc
mov
mov
mov
inc
subb
mov
or
aam
out
dec
lea
push
test
testl
cmp
pop
xchg
add
repz
xor
andb
and
mov
fcomps
inc
loope
lods
sbb
mov
push
push
xor
cli
push
adc
add
lret
push
push
cltd
outsb
inc
arpl
outsl
inc
icebp
mov
test
pop
push
add
sbb
inc
jae
filds
cmpsb
pop
adc
add
push
sub
mov
or
push
std
xchg
mov
mov
mov
xchg
add
pop
xor
jno
inc
lds
stc
popa
sub
adc
test
pop
cli
fdivrs
add
add
mov
inc
mov
les
sbb
xorb
or
cli
sbb
rclb
add
mov
test
or
or
add
jnp
inc
les
sub
test
and
adc
sbb
fimuls
stos
mov
mov
out
jmp
roll
loopne
jo
addr16
mov
loopne
or
pusha
push
push
repnz
xlat
or
add
sub
jl
add
pusha
add
xchg
jmp
enter
cli
adc
rcrl
icebp
jae
test
xchg
inc
jbe
ret
sti
or
fisttps
adc
icebp
in
inc
insb
add
xor
pop
cmc
mov
push
leave
add
adc
add
sub
shlb
push
pop
lods
bswap
xor
cmp
add
rcrb
xor
data16
loop
adc
mov
and
lret
ret
adc
cmc
out
pop
js
pop
inc
cltd
sbb
xor
xorl
mov
add
data16
js
mov
jecxz
cmc
add
ret
loopne
mov
pusha
and
lret
into
pop
mov
in
stc
or
add
scas
adc
data16
call
dec
or
paddw
or
mov
xor
insl
bnd
popf
add
dec
int3
or
adc
inc
mov
mov
sbb
adc
mov
lret
xchg
adc
sbb
adc
mov
int
push
push
imul
rolb
inc
adc
ret
adc
lea
or
jno
add
loope
add
xorb
push
sub
xchg
aas
push
push
push
push
sbb
or
xchg
lock
mov
mov
je
test
pop
arpl
jo
mov
rolb
mov
les
lcall
mov
add
fucomp
dec
add
test
push
and
jp
pop
add
add
aam
sub
pop
sub
add
fs
or
mov
and
pop
loopne
lea
lcall
push
push
mov
push
push
pop
hlt
and
cmpsb
mov
shrl
sbb
dec
jbe
rolb
cmp
daa
add
add
inc
imul
jecxz
adc
mov
add
popa
cmp
addr16
push
xchg
add
and
or
lock
js,pt
sub
ljmp
sub
pop
inc
repnz
lcall
mov
negl
cmp
mov
outsb
pop
popa
subl
adc
lea
inc
jae
adc
xchg
aas
call
scas
arpl
add
ds
adc
xor
sub
fstpt
ret
mov
mov
add
lret
hlt
push
xchg
adc
sub
xchg
adc
cmp
sarb
inc
adc
adc
cmp
mov
in
sbb
push
pop
les
inc
xor
xor
xor
pop
pop
push
call
adc
adc
cs
sbbb
int
push
dec
sbb
xchg
mov
xchg
adc
or
pop
shr
lods
and
adc
je
mov
mov
mov
adc
inc
push
dec
or
and
cmp
cmp
bound
lss
jmp
xlat
xor
inc
fdivs
rorb
or
add
addb
adc
add
push
xor
add
les
push
xor
movsl
cmp
sbb
mov
add
jns
rclb
push
mov
cmp
fwait
sbb
xor
add
pop
dec
lret
mov
gs
mov
outsl
mov
orl
lahf
sub
or
xchg
cmpsb
sub
inc
enter
cmp
mov
inc
les
cmp
mov
cmp
xchg
mov
inc
pusha
std
gs
mov
add
push
adc
mov
pop
cvtpi2ps
push
mov
cmp
mov
dec
inc
push
cltd
ljmp
int3
inc
int3
sar
scas
test
and
pop
mov
mov
jns
sub
inc
fsts
mov
pop
imul
add
inc
dec
adc
ds
or
insb
add
or
scas
push
adc
push
inc
scas
inc
jl
pop
ja
ret
jno
cmp
lcall
pop
adc
lret
xchg
int
add
stos
xor
push
mov
test
stos
repnz
or
shrb
loope
mov
and
mov
add
jo
xor
ret
push
push
dec
push
adc
or
inc
pop
or
pop
outsb
lods
pop
leave
loope
sahf
cmp
adc
clc
add
sub
jbe
adc
roll
addr16
divb
cmpsb
es
nop
mov
add
or
mov
test
dec
push
xor
cmp
daa
add
xor
mov
inc
ljmp
add
sub
test
sub
adc
out
and
push
aad
hlt
fnstsw
enter
mov
pop
movsl
pop
cli
mov
bound
lcall
mov
add
add
rol
inc
dec
sarl
sub
sbb
push
add
ljmp
call
xchg
sub
arpl
int
sub
or
or
jne
add
call
xor
or
dec
scas
jae
jecxz
sbb
mov
lret
mov
inc
into
daa
adc
sub
cli
sbb
and
push
cmp
adc
scas
pop
and
add
push
call
jns
sub
lds
ljmp
movsl
push
sub
mov
loopne
call
push
ret
scas
jo
test
push
cli
scas
imul
cmp
repz
push
scas
sub
pop
test
loop
loope
test
aam
jmp
adc
das
fmul
loopne
pop
and
xchg
js
shll
ror
adc
push
xor
dec
icebp
scas
inc
ds
sub
push
mov
mov
push
mov
sbb
ret
add
or
mov
pop
push
lock
mov
mov
mov
mov
call
inc
cmc
pop
and
lock
test
jne
fdiv
sbb
and
adc
testb
pop
sarb
sti
jbe
mov
or
out
cs
sti
in
ds
lea
push
sub
pushf
testb
pop
loop
add
inc
aam
add
cmp
jne
push
push
and
and
push
mov
push
ds
out
das
cld
imul
mov
push
push
adc
mov
mov
cwtl
push
jl
cmp
add
je
jae
testl
dec
push
dec
das
and
lahf
insb
or
inc
and
mov
dec
mov
adc
jo
inc
sahf
out
inc
push
add
add
ret
test
fcmovnbe
mov
inc
or
lea
or
outsb
filds
cmp
jne
insl
dec
sbb
sbb
pop
jl
fstp
mov
pop
and
mov
call
jne
mov
mov
ja
and
lea
gs
cs
sub
xor
push
jns
pop
cltd
sbb
adc
out
out
pop
jns
test
pop
je
or
pop
ret
orl
repnz
jbe
in
mov
or
adc
and
enter
mov
leave
jo
add
push
jo
push
mov
and
jbe
or
fldt
loopne
push
pushf
pop
je
outsb
mov
inc
fistpl
or
jne
pusha
mov
sbb
sub
add
outsb
mov
cld
mov
mov
mov
ret
mov
mov
push
aam
movsl
aam
push
jge
lea
movsb
fs
push
adc
cmp
sbb
sarl
jno
pop
jle
cmp
int
or
inc
pop
orl
nop
jae
iret
popa
jno
xchg
sbb
ds
lea
push
cmp
xchg
pop
fisttpl
jg
mov
rcrl
js
outsl
mov
call
mov
or
jmp
incl
addr16
pop
leave
mov
push
outsl
icebp
or
fsubl
xor
je
fcmovu
adc
cmp
add
cmp
jne
out
test
or
xlat
or
jno
pop
mov
inc
cmp
sti
sbb
and
pop
je
test
dec
movzbl
ret
cmpsl
shrb
daa
mov
jmp
cmpb
or
pop
or
jbe
inc
or
ja
xor
add
sti
lods
push
jmp
fstpt
sbb
pop
mov
pop
mov
ret
je
movsl
aas
cld
adc
sub
lea
add
add
pop
jbe
add
pushf
pop
cmp
mov
int3
std
outsl
adc
std
cmp
cmp
loope
in
cmp
aas
dec
and
cmp
das
ja
mov
pushl
js
pop
bound
std
mov
mov
aaa
jne
pop
incl
je
ja
mov
add
loopne
outsl
ja
arpl
lock
ret
ja
dec
sbb
sbb
fldt
mov
push
add
push
push
push
lahf
xchg
in
sbb
fmuls
xchg
mov
das
mov
out
fisubl
and
push
push
xor
addr16
push
pop
les
pop
fidivl
dec
sbb
es
jne
test
jge
movl
pop
mov
add
mov
cmp
fistps
loope
cmp
sub
addb
add
inc
sbb
mov
mov
inc
inc
or
mov
arpl
into
or
andb
inc
inc
sbb
inc
jns
and
add
testb
sbb
je
or
and
js
or
jne
dec
mov
mov
mov
sbb
dec
add
xor
add
pop
enter
xor
rcl
icebp
out
fisttps
test
pop
jne
inc
inc
jmp
xchg
sub
ret
add
inc
cmp
or
jecxz
lods
inc
mov
or
adc
xchg
ret
fdivrp
shr
mov
dec
test
push
pop
inc
mov
jne
jl
insl
xlat
andb
mov
mov
push
add
sbb
or
dec
sbb
pop
sbb
inc
ret
or
je
insb
xor
push
cmp
add
xor
or
dec
and
or
inc
loopne
add
inc
imul
test
add
clc
cld
sub
repz
jnp
hlt
jmp
xor
aaa
pop
inc
inc
cmp
pop
ljmp
pop
sbb
push
test
jne
insl
inc
or
daa
ret
pop
jmp
jmp
or
jne
push
clc
push
mov
cmp
clc
hlt
mov
fisttpl
mov
call
fcmovnu
xchg
mov
xor
adc
je
sbb
lcall
and
mov
ljmp
add
cmp
jne
movsl
mov
popf
int3
test
je
and
insl
mov
sbb
push
into
push
jmp
jmp
mov
xor
jmp
sbb
mov
pop
or
pop
fwait
dec
push
and
pop
sbb
sbb
sub
jae
outsl
mov
mov
inc
add
pop
cld
cs
and
pop
jmp
and
ret
ljmp
in
in
or
cmp
mov
jbe
jle
add
push
clc
jl
pop
push
sub
fisubs
push
mov
arpl
jae
mov
repz
andb
inc
mov
mov
roll
mov
jl
jmp
mov
adc
jle
js
push
dec
lock
fsubrs
mov
lcall
push
xor
inc
aam
and
shll
pop
or
shll
jae
cs
mov
mov
inc
add
inc
cmp
jl
mov
pop
and
cmpl
lea
jne
fildll
adc
push
das
enter
jmp
sub
outsl
xchg
ret
dec
neg
sbb
cmc
or
jge
cmp
pop
push
jo
and
sbb
in
orb
or
mov
jns
jne
or
add
addb
jl
jle
ss
pop
test
and
mov
xchg
cmp
cmc
sub
int
jnp
sub
sbb
sbb
cmp
divb
adc
pop
lea
or
xor
inc
adc
shrb
add
ficompl
addr16
mov
adc
data16
les
mov
mov
aas
insb
xchg
sbb
test
adc
push
pop
adc
or
jge
add
subl
inc
lods
push
incl
lea
xlat
mov
xor
xlat
mov
outsb
sub
popa
pop
call
xchg
push
loope
fcom
cs
dec
int
cli
pop
daa
or
gs
dec
testl
je
out
lds
mov
mov
out
fdivrl
adc
push
push
inc
jns
or
add
pop
insb
push
mov
mov
hlt
mov
sub
jbe
mov
dec
test
xchg
mov
jne
push
mov
insb
push
or
ret
popl
addr16
in
or
lea
mov
push
push
or
push
test
push
mov
inc
or
or
fcmovnbe
or
dec
add
inc
cli
mov
pop
ret
int3
push
inc
xor
pop
inc
xor
mov
icebp
cli
fwait
pop
or
testl
mov
push
push
inc
adc
mov
pop
idivl
and
or
sti
xchg
insl
mov
jbe
je
push
push
lea
test
pop
mov
inc
or
push
lret
pop
mov
rcrb
mov
sbb
test
jo
insl
fimuls
jle
jae
or
or
sbb
mov
mov
leave
jmp
pop
xlat
aas
pop
sbb
adc
xchg
mov
xchg
in
testb
push
and
mov
loopne
jbe
sub
push
jp
inc
and
add
out
pop
fistps
push
imul
adc
test
mov
mov
xor
mov
aas
notl
jp
or
push
mov
icebp
jb
shl
cmp
test
sbb
insb
xchg
call
jo
adc
test
or
sti
test
jmp
push
xchg
sub
mov
push
add
sbb
outsl
mov
popf
mov
sbb
clc
or
andl
add
clc
inc
loopne
xchg
xor
dec
push
pusha
inc
adc
or
sbb
lods
jge
jmp
and
adc
and
mov
sub
es
mov
imul
sbb
push
movsl
jge
icebp
enter
gs
je
xor
pop
in
sbb
sub
mov
test
test
xor
jne
movsb
pop
into
loopne
push
push
clc
call
push
jmp
fiadds
lods
cmpl
push
in
mov
addb
sti
ljmp
sbb
sbb
push
adc
mov
add
and
lds
or
ret
adc
inc
jne
cltd
outsl
push
movzwl
adc
and
add
data16
sbb
xchg
out
test
iret
cmp
push
mov
inc
xchg
push
mov
add
ret
mov
pushl
xchg
cld
pop
push
js
sbb
inc
push
push
push
call
pop
cmp
fwait
popa
and
andl
mov
loopne
jne
rep
stos
mov
xchg
jmp
jge
arpl
fmuls
ss
jbe
inc
decl
sbb
adc
xchg
pop
test
out
push
dec
lea
pop
ret
add
lea
popf
rcr
dec
je
mov
mov
add
mov
ja
adc
mov
inc
inc
push
test
fists
jbe
inc
inc
cmpb
enter
rcll
jge
jb
fs
lahf
ds
push
int3
lods
push
mov
mov
jl
push
shlb
jmp
inc
jns
addr16
push
pop
jno
pop
mov
roll
xchg
jb
push
cmp
divl
jmp
or
add
pop
stos
add
push
jo
pusha
xchg
cs
test
mov
and
pop
xor
or
lahf
push
pusha
leave
mov
cmp
xor
adc
mov
andl
mov
mov
pop
lds
rorb
aaa
je
jbe
push
push
mov
cs
add
rorl
push
jno
rcl
mov
in
pop
xchg
xchg
sub
out
lea
xor
push
push
aas
das
cwtl
aad
mov
in
decl
push
loopne
mov
movb
outsl
add
lea
mov
sbb
in
enter
inc
mov
shr
test
and
rep
inc
inc
mov
xor
rcrb
push
in
cli
lods
xor
lea
push
xor
pop
mov
mov
mov
xor
ss
push
xlat
dec
inc
cld
dec
push
jg
movsl
gs
jb
lret
jb
mov
mov
ret
add
mov
ficomps
xor
adc
add
icebp
fildl
ja
mov
dec
mov
jmp
adc
pop
arpl
enter
mov
dec
pop
sbb
ja
fnsave
and
dec
dec
mov
mov
inc
adc
ret
call
sbb
mov
rclb
adc
pop
data16
or
sbb
fisubrl
or
rorl
push
imul
push
fistpl
int3
add
arpl
push
movsb
lds
ljmp
test
inc
iret
cmp
jne
mov
mov
insl
cmpl
icebp
xchg
sub
call
test
je
test
pop
mov
fiaddl
jmp
lea
or
add
jmp
std
jmp
cld
pusha
or
mov
insl
or
mov
inc
bound
jmp
mov
frstor
jbe
adc
loope
xor
ss
std
daa
test
cmp
fld
mov
movb
mov
pop
or
mov
adc
pop
sbb
cwtl
sbb
imul
adc
dec
cmp
shlb
into
repz
loop
bound
push
jo
ja
push
xor
andb
add
cmp
add
mov
lock
and
outsb
adc
pop
and
push
pop
jb
and
inc
lds
xor
and
rol
std
cld
rcl
xor
add
push
aad
add
into
sbb
jbe
sti
adc
jb
sbb
cltd
mov
jg
and
rep
jmp
lea
dec
stos
add
insb
and
test
push
out
mov
lret
lea
test
add
loop
mov
and
mov
mov
xor
mov
add
mov
pop
mov
sbb
lea
sub
add
add
popf
and
inc
aas
mov
cmpsb
imul
cmpsb
stc
outsl
lcall
in
inc
in
lcall
lock
popa
lcall
mov
rorb
adc
sbb
add
sbb
dec
cmp
mov
leave
nop
popf
or
add
adc
or
xor
xchg
inc
js
cmp
jg
or
in
cld
ja
nop
neg
sub
sahf
pushf
sbb
stc
sub
cwtl
pop
shll
and
enter
enter
cmp
dec
pop
dec
push
mov
and
or
add
fldl
out
add
mov
mov
scas
pop
cwtl
orl
scas
inc
add
cmpsb
imul
sbb
lcall
adc
adc
cmpsb
imul
cmp
add
push
mov
addb
mov
mov
pop
std
push
inc
sti
or
imul
ja
cmp
adc
shrl
sub
daa
push
insl
and
jne
push
or
and
and
lods
mov
jle
jmp
push
inc
push
cmp
or
or
jmp
jmp
or
mov
inc
cmpsb
pop
in
pop
cmp
jns
mov
jo
add
arpl
xchg
push
dec
mov
adc
sbb
mov
lcall
call
jb
hlt
jb
jle
call
push
add
mov
add
scas
repnz
cmc
test
ret
rorl
jp
imul
jge
movsl
movsl
inc
out
mov
inc
pushf
test
dec
mov
jl
or
test
or
jne
shll
or
ficompl
lret
add
add
dec
lea
jae
mov
xor
out
lea
xlat
and
decb
sub
mov
mov
and
loopne
sub
and
jns
data16
fdivl
pop
jl
or
icebp
or
pop
clc
or
sar
hlt
aas
jnp
outsb
imul
das
mov
mov
fsubrs
scas
inc
testl
cmpsb
jbe
repz
mov
lret
sti
inc
ds
jbe
insb
pop
push
cli
mov
push
mov
inc
push
mov
ds
in
push
mov
lds
dec
push
mov
lret
add
adc
call
xchg
jns
sub
lea
lret
testl
add
fsts
add
fistl
filds
mov
jae
mov
inc
push
jbe
fnstsw
shr
jbe
sbb
bound
sti
or
jmp
and
lea
sbb
inc
jo
popf
test
mov
xor
mov
inc
rcll
gs
push
lods
xor
adc
data16
loope
add
push
xorb
push
jno
add
push
call
pop
xor
pop
and
push
or
cmp
out
aam
movsb
mov
decb
jnp
test
or
jns
adc
mov
cs
insb
sub
movb
adc
adc
notl
sbb
call
cmp
lods
dec
adc
push
lea
push
push
std
xor
repnz
incl
inc
push
jecxz
xor
ljmp
inc
mov
shlb
out
sub
ds
cmp
sub
dec
pop
jbe
cwtl
ss
pop
push
xor
push
sbb
loope
xor
out
sub
mov
jmp
es
xor
shr
push
movhps
mov
cmp
shlb
mov
cmp
imul
outsl
sub
decb
iret
jne
call
lcall
out
jne
mov
cmp
es
add
pop
and
push
jnp
fnstcw
aaa
jmp
es
fnstcw
or
popf
stos
insl
ret
xor
jnp
mov
mov
pop
pop
mov
inc
test
mov
shr
or
test
adc
lret
dec
dec
xchg
pop
sub
nop
lret
mov
mov
mov
jo
push
fistl
sbb
fstl
push
inc
or
mov
jne
xor
inc
cmpsl
xchg
push
aad
mov
and
or
je
mov
add
ja
mov
into
jne
pushw
fs
test
jne
jbe
jl
shl
inc
jmp
mov
push
stc
inc
or
jg
aam
xorl
fwait
aas
jle
pop
cmp
fsubrl
fwait
or
and
insl
and
adc
stos
ja
pop
pushf
shl
in
and
mov
decb
jne
ss
mov
or
xor
sub
sbb
sbb
mov
sbbb
insb
jb
sarb
add
scas
jp
nop
test
test
jl
inc
or
and
xchg
outsb
xchg
gs
decb
jge
les
jae
cltd
or
mov
bound
mov
jbe
cmp
jmp
sub
dec
add
jnp
jmp
divb
out
or
push
sub
or
mov
ret
outsl
pop
mov
add
xor
lahf
xorb
lds
jne,pt
mov
mov
bound
mov
adc
rolb
or
and
aad
pusha
jne
pop
mov
cmovs
add
push
xchg
pushf
cmp
lds
test
ret
cltd
test
push
inc
xor
xor
mov
inc
adc
cwtl
test
sub
mov
push
sbb
adc
les
dec
and
sub
jle
incl
sbb
jmp
push
jno
inc
or
fcmovnb
jge
push
ret
aaa
imul
bound
andb
outsb
or
test
push
sti
test
out
stc
insb
mov
jns
mov
addb
xchg
leave
add
mov
xchg
add
fidivrl
push
cli
ja
lea
dec
repnz
hlt
lea
cld
lock
mov
jmp
call
xchg
fiadds
and
dec
or
clc
xchg
xchg
lods
mov
lea
or
sub
mov
mov
or
jp
dec
inc
test
xor
add
sub
push
or
stos
int
cmp
inc
sub
cmp
addr16
mov
jl
fs
adc
pop
sti
pop
cwtl
test
adc
or
insb
sti
cmc
push
mov
call
cmp
add
out
add
add
push
xor
aam
cmp
int3
add
push
xchg
jp
mov
insl
call
adc
sub
mov
outsb
imul
and
mov
clc
push
inc
inc
dec
je
adc
pop
mov
jmp
sbb
je
and
test
ret
adc
push
pop
je
cmp
dec
adc
out
insb
sbb
les
cmp
arpl
cmp
xchg
fisubrs
or
adc
cmp
sbb
imul
xor
push
out
push
popa
mov
mov
pop
jne
mov
test
pop
inc
inc
jg
stos
enter
nop
jne
cmc
sub
push
push
or
xor
add
jmp
dec
add
sub
cmp
mov
and
inc
push
nop
pop
or
jle
pushl
sti
je
xchg
add
pop
in
nop
call
sbb
pop
pop
adc
or
fnstenv
mov
mulb
mov
fisubl
jae
jg
push
rolb
loopne
inc
push
aaa
and
or
xlat
test
loopne
ja
cld
stos
push
fnsave
les
scas
js
jmp
hlt
mov
es
mov
insl
mov
fdivl
push
dec
fsubl
pop
xchg
lods
and
dec
in
sbb
call
add
testb
je
ds
mov
fcmove
data16
aad
push
fidivl
dec
xchg
sub
inc
cmp
jg
xor
mov
rolb
ss
xchg
mov
fmull
push
mov
je
push
fs
je
jbe
mov
add
jmp
mov
pop
in
xor
push
mov
lds
jno
movsl
mov
rcll
test
push
cld
dec
or
sub
inc
in
dec
mov
repz
enter
and
pop
sbb
inc
jnp
mov
lods
jp
sbb
mov
push
push
pop
push
push
movsl
mov
add
sbb
daa
sahf
xchg
push
mov
test
pop
mov
pop
sub
add
flds
cmp
pop
xchg
iret
xchg
pop
sbb
inc
ss
sbb
loopne
insb
adc
push
je
gs
push
or
push
inc
cmp
ror
sub
or
testb
loopne
pop
cmp
push
push
clc
xchg
xchg
mov
add
int3
jb
ret
pop
mov
pop
js
ror
lahf
add
and
add
xlat
divb
mov
stc
pop
or
lods
test
neg
add
sub
dec
jg
add
xlat
sub
xlat
mov
push
rep
cmp
and
icebp
push
mov
in
mov
in
cmp
scas
shr
cmp
nop
pop
pusha
adc
or
add
mov
cmp
mov
xchg
mov
je
mov
or
lock
pop
and
lcall
and
and
test
out
push
nop
or
mov
sub
mov
add
or
imul
inc
mov
pop
and
add
mov
lahf
push
cmp
push
iret
jb
sub
mov
add
add
jae
movsl
les
loope
jecxz
cmp
xor
push
xchg
enter
xor
xor
push
xor
xor
clc
hlt
loopne
xor
xor
in
or
cmp
xor
aam
add
xchg
mov
add
add
out
jb
outsb
je
insl
and
jb
jb
or
rcll
adc
add
dec
dec
inc
add
inc
adc
mov
xor
cmp
sub
insb
je
and
fucomip
imul
aaa
daa
aaa
das
je
aas
outsb
outsl
je
add
addr16
popa
ss
out
mov
and
insb
outsl
ja
cmp
jns
mov
ss
fs
in
and
jo
jb
jbe
jb
jne
fdiv
fistpl
movsl
arpl
and
insb
sub
inc
mov
gs
xchg
mov
push
fsub
pop
xor
out
mov
imull
gs
xor
xor
fs
sub
inc
inc
mov
and
gs
xor
insl
jecxz
mov
push
outsl
arpl
push
pop
and
xor
mov
lods
loope
lcall
jo
and
mulb
popa
insl
and
ss
sbb
jnp
cmp
inc
repnz
xor
sub
psraw
adc
jb
jne
jae
xor
insl
fldt
outsb
subb
or
mov
adc
dec
sub
pusha
cmp
push
imul
push
out
mov
imul
sub
push
inc
push
and
push
aam
sbb
sbb
add
add
pop
and
outsb
sbb
je
popa
fadds
add
push
scas
jne
adc
mov
xorps
jae
popa
addr16
sbb
loop
js
adc
cs
cmp
add
cmp
add
insb
imull
lcall
add
mov
xor
mov
push
outsl
imul
push
insl
jne
add
sub
or
or
add
dec
xor
and
add
and
nop
xchg
xchg
je
xor
xchg
add
pop
add
lahf
or
and
xchg
add
sbb
add
lods
jp
daa
jo
pop
inc
or
cmp
sbb
inc
hlt
adc
adc
daa
je
dec
sbb
sbb
cmp
inc
call
sbb
js
leave
xchg
daa
inc
jns
jp
cld
inc
jbe
repnz
or
push
rolb
xor
dec
jle
mov
add
das
movsb
add
nop
pop
pusha
cmpb
cmpsb
fbld
aas
sbbl
mov
xchg
pop
inc
aaa
enter
das
inc
mov
repz
in
sbb
in
call
sub
in
out
push
add
pop
pop
fisubrl
xor
fsubp
stc
cmp
jle
clc
add
sbb
xchg
push
mov
jge
push
add
add
add
fs
addl
aas
addb
nop
loopne
adc
and
and
and
push
adc
pushl
pop
mov
inc
add
add
popa
jo
insb
insb
outsl
arpl
outsl
push
add
fs
gs
popa
outsb
fs
add
push
je
xor
outsb
outsw
adc
add
push
gs
or
pop
push
add
jb
cmp
pusha
imul
push
dec
gs
mov
and
jb
outsb
and
outsb
push
sbb
jo
inc
inc
imul
jp
gs
popa
insl
jl
cmp
mov
or
jo
jb
addr16
mov
push
imul
orb
jns
pop
test
push
pop
ss
mov
inc
outsl
jne
add
in
pop
insb
or
gs
mov
dec
fs
insb
jae
push
popa
add
in
insb
jne
or
push
mov
and
mov
inc
ds
or
andb
and
lahf
int
in
sbb
push
je
inc
ja
xchg
xchg
imul
dec
mov
add
arpl
xor
or
outsb
bound
dec
push
jbe
rclb
arpl
jmp
inc
or
dec
inc
dec
or
mov
xchg
push
cmp
and
popa
in
fs
dec
or
add
shrb
adc
fmuls
insl
inc
dec
inc
ja
or
mov
push
lods
loopne
and
stc
sbb
mov
cs
insl
insl
mov
jecxz
mov
dec
xor
sub
rcrb
inc
jae
mov
cltd
inc
jne
push
and
or
inc
mov
push
lret
xor
xor
rolb
jae
lcall
lcall
pop
or
cmp
inc
or
cmp
pop
fmuls
daa
adc
push
inc
cmp
push
dec
das
jecxz
ljmp
test
in
imul
push
and
dec
lcall
adc
stos
jb
lods
imul
dec
in
lcall
jo
mov
pop
lock
add
mov
add
cmp
dec
xor
xchg
jge
add
ss
add
js
add
stos
jecxz
mov
xor
pop
add
add
push
add
cmp
mov
add
insl
popa
sti
cmp
lock
and
inc
inc
and
cli
dec
add
repnz
sbb
or
add
lock
sar
outsb
mov
add
sbb
add
aas
mov
jle
aas
cmp
xchg
es
dec
jl
dec
add
jo
mov
mov
dec
mov
xchg
dec
xor
lret
mov
add
push
stos
mov
mov
pushl
mov
add
xor
add
fcmovu
jbe
or
xor
xchg
push
jns
lds
jle
push
jb
jo
addb
add
sti
add
outsl
das
fsubrl
lock
add
in
das
fcompl
jnp,pt
call
mov
add
fcomi
idivb
lret
dec
add
es
add
push
cmp
scas
pop
push
pop
je
ret
or
outsl
daa
cmp
inc
inc
add
mov
mov
inc
scas
sub
insb
lock
and
cmp
fldt
pushf
lock
cmp
mov
jno
add
add
inc
jg
xor
add
jp
and
mov
add
cmc
jae
add
jle
xchg
jbe
jl
xchg
lock
js
cmp
cmpb
add
popl
inc
xor
jnp
xor
mov
add
flds
sub
sub
inc
add
or
xchg
add
add
fisttpll
lods
add
scas
add
inc
add
add
push
imul
add
sub
std
lods
popa
loopne
mov
push
lret
mov
ja
lock
push
filds
jge
lock
ss
mov
ds
dec
xor
add
test
ss
and
mov
insl
je
dec
imul
sbb
add
mov
or
xor
and
insb
test
fiadds
out
int
movsl
sbb
mov
add
sbbl
fcmovnu
outsb
aad
mov
lock
addl
fucomp
cmpsl
sub
add
gs
xor
push
clc
jge
add
mov
xchg
aas
inc
roll
mov
cmp
or
sub
insb
ja
dec
inc
mov
push
fistl
mov
xchg
in
sbb
insl
out
lret
ret
add
stc
add
mov
add
add
dec
cmpb
jbe
outsb
pop
jbe
cmpsb
add
inc
lock
mov
xor
lret
cmp
fldt
mov
cld
test
or
or
push
or
jg
lcall
xor
or
or
adc
pop
or
or
incl
xchg
push
push
push
test
cmovl
xor
inc
or
adc
or
dec
inc
jecxz
xor
std
call
aas
push
adc
xor
pop
adc
and
push
xor
adc
add
inc
or
adc
sbb
fistpl
jle
inc
imul
es
inc
adc
or
adc
push
and
adc
sub
xor
mov
or
adc
and
and
mov
pop
adc
or
in
fistpl
sub
add
push
outsl
mov
adc
call
and
push
movups
lock
inc
cmp
ret
sbb
scas
add
sub
sbb
add
ja
sahf
add
add
or
pop
push
sbb
insl
aas
jb
push
or
jecxz
xor
or
push
add
push
sbb
clts
adc
adc
or
fimuls
fwait
imul
inc
cmpsb
mov
adc
test
or
fisttpl
sbb
adc
or
pop
pop
clc
adc
sbb
mov
sbb
xor
ret
jnp
adc
adc
sarl
adc
xchg
add
mov
xchg
sti
lock
add
add
inc
fmuls
add
pop
stos
jmp
adc
lock
add
push
sub
add
push
test
xor
add
lcall
adc
and
adc
jne
out
sbb
or
filds
adc
lret
fdivrp
sbb
sub
pop
fwait
incl
push
add
js
add
in
in
rolb
add
or
push
pop
popa
fbld
or
sub
dec
ds
and
push
int3
pusha
jb,pn
test
sbb
cld
or
fldl
cs
sbb
pusha
cltd
aas
and
jb,pn
jb
add
jmp
dec
or
pop
sub
andb
fwait
xchg
cmpsb
or
inc
sbb
push
add
mov
and
mov
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
