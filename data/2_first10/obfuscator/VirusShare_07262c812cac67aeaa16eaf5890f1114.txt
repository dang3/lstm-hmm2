popf
xchg
xchg
mov
add
jecxz
pop
les
bound
mov
lcall
mov
jb
jno
es
jns
jne
jge
jmp
jg
pop
cltd
mov
mov
sahf
cmpsl
add
sub
xor
mov
push
arpl
cs
pop
adc
dec
sbb
cmp
or
int
mov
lds
add
loope
sub
xor
mov
lahf
inc
pop
push
or
or
cmova
mov
push
pop
les
loopne
and
jl
mov
inc
and
pop
jmp
loope
xchg
add
mov
loop
pop
in
sbb
dec
sub
add
add
and
mov
xor
add
xchg
xor
mov
ja
jne
popf
mov
push
sub
std
adc
adc
pushf
mov
loopne
fmul
wbinvd
cmp
scas
or
xchg
aam
pusha
orl
xchg
nop
cmp
int
addb
jge
and
push
mov
or
jmp
inc
push
popa
pop
in
add
hlt
or
je
jecxz
push
loop
mov
lret
fisttpl
adc
test
popa
push
addr16
ljmp
das
sti
mov
stos
or
lcall
or
dec
pop
jae
icebp
out
jbe
sub
mov
push
push
lret
test
leave
mov
test
fnsave
into
cli
dec
mov
stos
test
in
sbb
cltd
or
sbb
adcl
lea
sub
loope
inc
or
mov
push
and
inc
push
mov
or
or
aas
inc
sub
ja
data16
cmp
jmp
xchg
inc
test
xor
mov
add
mov
xor
addr16
gs
cmp
xchg
data16
mov
and
rorl
or
cmp
sbb
mov
mov
sbb
dec
mov
cwtl
ljmp
cmp
push
out
sub
add
bound
push
cmp
pop
sub
test
testl
lods
in
andb
fisttps
fdivrs
loop
outsl
sub
jns
lea
cmpsb
and
mov
xchg
or
mov
adc
aad
jp
adc
or
sub
aas
and
add
ljmp
adc
and
xor
and
pop
lcall
jge
xchg
jmp
or
cmpsl
adc
mov
mov
sbb
mov
icebp
mov
std
ss
xor
fiaddl
inc
sub
lahf
jbe
ss
test
jl
jne
add
repnz
loope
inc
add
sbb
pop
enter
shl
dec
loop
cmp
shlb
dec
xor
adc
and
jns
sub
sbb
add
ret
orl
add
or
xchg
rcll
in
sub
pop
pop
je
scas
shll
inc
shll
or
pop
sbb
out
das
push
adcl
popa
repnz
mov
or
rorl
inc
addl
adc
push
pop
push
test
test
and
popa
add
dec
scas
lds
jg
popf
scas
arpl
sub
dec
daa
xor
cmpsl
test
int
xchg
xlat
sbb
out
sbb
pop
push
mov
aam
pushf
adc
insl
sbb
xor
sbb
mov
push
outsb
xchg
sahf
sbb
add
and
xorb
mov
leave
dec
sbb
adc
insl
dec
or
add
xchg
sbb
mov
fsubl
outsb
or
fs
inc
in
sub
out
popf
cltd
movsb
test
mov
mov
das
ret
movsb
movsl
sub
xchg
push
test
pop
pop
cwtl
add
add
xor
mov
dec
enter
mov
adc
adc
sub
call
imul
or
fidivrl
mov
fs
loop
inc
dec
imul
add
jno
adc
jmp
enter
imul
imul
xor
sbb
mov
mov
fs
pop
call
xchg
mov
dec
push
sub
cmp
das
add
test
cmp
pop
mov
xor
and
cmp
shll
or
lea
std
adc
lods
fsubl
mov
or
xor
add
lahf
push
jmp
je
dec
cs
ret
roll
push
add
and
sbb
or
mov
pop
jg
gs
loope
add
push
sahf
iret
inc
add
xchg
shrl
fs
or
dec
aas
inc
push
push
inc
jb
jmp
and
add
popl
dec
xlat
movsl
pop
add
in
inc
cmp
push
or
jmp
clc
push
inc
sbb
add
push
mov
out
push
scas
jno
and
xchg
cmpsl
icebp
dec
dec
imul
aad
xchg
ss
mov
aaa
push
jge
mov
inc
dec
inc
stc
movsl
lock
or
aas
push
sub
jmp
mov
push
pop
add
gs
mov
sub
push
xor
pop
or
test
std
jne
cmp
aam
ret
inc
cmp
add
rcrb
imul
and
mov
ja
and
adc
inc
add
or
dec
inc
adc
add
data16
loop
and
push
int3
mov
adcl
inc
cmpsl
cmp
and
dec
jg
psllw
stos
jae
lcall
dec
clc
mov
push
mov
test
dec
cmp
add
cltd
jl
inc
insb
jmp
and
adc
shrl
loope
lods
lock
and
xor
add
ficompl
fiadds
inc
cmp
orb
add
sbb
add
sub
or
and
call
inc
dec
nop
sbb
sbb
sbb
dec
test
inc
scas
push
pop
dec
and
jb
stos
adc
lret
stc
stc
jb
daa
inc
rcll
rorb
imul
adc
repz
push
pop
inc
and
popf
test
xor
mov
and
jo
divl
scas
mov
xor
xor
push
and
push
mov
adc
mov
andl
icebp
mov
xchg
push
pop
or
enter
mov
fwait
test
adc
jnp
xchg
xor
push
cld
in
testl
daa
lcall
inc
iret
push
xchg
mov
sbb
mov
push
shll
outsb
adc
sbb
ljmp
sub
xor
xor
adc
mov
leave
jo
jge
sub
leave
jns
jno
inc
xor
jl
dec
lds
insl
hlt
jne
insb
arpl
jnp
in
push
scas
adc
add
sbb
pop
mov
dec
cmpsl
pop
jb
mov
pop
int3
sbb
inc
aaa
pop
pop
imul
pop
sub
int3
sbb
fcmovbe
les
xor
mov
pop
sub
inc
dec
js
add
mov
cli
scas
loopne
das
push
mov
xor
add
mov
mov
cmc
subl
add
push
shl
cltd
mov
into
fwait
aam
pop
imul
jmp
add
and
xor
cmp
movsl
jecxz
loope
fucom
cmp
int
jnp
loope
data16
call
hlt
jb
fcmovne
jecxz
test
adcl
mov
lds
pusha
fisttps
lods
jl
sub
push
fldenv
xor
push
or
cmp
xlat
inc
popa
inc
push
shrl
into
popl
inc
mov
or
dec
adcl
jns
inc
leave
push
adc
lret
pop
stos
sbbl
xor
dec
mov
and
inc
mov
pop
inc
cmp
inc
hlt
add
cmp
jl
jle
push
repz
add
sub
mov
add
mov
mov
jae
inc
jns
std
adc
or
xchg
sub
scas
mov
fsubrs
loop
bound
cmp
mov
mov
insl
neg
mov
shl
adc
mov
push
fisttpll
mov
push
and
xor
or
out
fwait
dec
xor
les
pop
bound
loop
hlt
xor
shll
push
adc
cmpsl
lds
sub
pop
adc
xchg
mov
stos
inc
sub
shrl
rcr
sub
imul
jbe
dec
add
sbb
xchg
mov
aaa
adcl
dec
mov
pop
push
pop
dec
mov
hlt
add
nop
daa
or
cmc
pop
add
loopne
dec
aam
jp
sar
cmpsl
sbb
pop
movsb
pop
adcl
cltd
add
pop
mov
pop
lods
subl
jmp
lret
movsl
dec
and
xchg
and
or
in
adc
dec
sbb
and
sub
sub
mov
je
aam
jmp
mov
aaa
jbe
sub
repz
es
xchg
mov
xchg
mov
ror
mov
pop
ret
fistpll
pusha
sbb
ror
lea
rcll
xor
sub
pushf
sub
and
adc
adc
or
xchg
lea
scas
push
sub
inc
adc
or
clc
dec
xchg
inc
nop
loope
jecxz
sbb
sub
in
sbb
push
dec
roll
scas
addr16
in
dec
mov
push
mov
enter
mov
xchg
cmpsb
test
loope
or
sub
cmp
xor
stc
cmp
cmp
add
cmc
jbe
adcb
fs
or
mov
jns
add
push
ret
mov
mov
insl
push
and
sub
out
sub
rorb
les
lret
xchg
and
cmp
clc
orl
xor
mov
and
or
xchg
pop
push
pop
xchg
cmp
inc
mov
fdivs
js
xor
sub
imul
adc
cmp
sub
and
and
mov
adc
pop
mov
test
xor
nop
or
inc
xor
pop
inc
mov
test
pop
sub
mov
and
adc
orl
test
xchg
dec
mov
out
jp
or
test
xchg
into
dec
stc
mov
jo
mov
mov
add
xchg
dec
add
push
inc
popf
push
fidivrl
icebp
mov
inc
pop
arpl
or
sub
pminsw
xchg
jae
aas
add
fucomp
inc
inc
cmpsb
loope
push
xor
jnp
jb
cmp
cmp
add
je
inc
pop
pusha
inc
xchg
cmp
xor
xor
and
adc
cmpl
aaa
leave
icebp
scas
mov
lds
mov
sahf
icebp
cmp
push
and
and
cmp
pop
test
jns
pop
add
enter
shll
pop
adc
test
lea
inc
test
pop
and
xor
xchg
insb
pop
jne
inc
jno
jmp
mov
test
test
adc
aas
inc
andb
xchg
loopne
inc
enter
lods
add
in
stos
mov
add
sub
mov
add
lar
adc
call
pop
adc
mov
dec
popa
inc
sahf
xchg
inc
jmp
or
cmpsl
push
clc
sub
out
or
roll
cmp
sbb
mov
xorl
cwtl
popa
cld
or
leave
jg
out
mov
pop
pop
orb
xchg
mov
pushf
inc
fcomps
inc
imul
std
movsb
daa
movsl
xor
xchg
adc
inc
aaa
xchg
mov
sub
push
in
sti
add
adc
push
stos
pop
dec
mov
and
and
push
add
mov
lea
and
bound
mov
mov
icebp
xor
es
pop
fmuls
aas
inc
testl
cld
jne
imul
mov
imul
mov
ret
stc
arpl
sub
ret
sbb
out
loop
fistps
adc
or
jg
outsb
adc
test
orl
sbb
sbb
fstl
pop
mov
mov
pop
sub
inc
out
xchg
orl
inc
andb
rcrb
mov
imul
lods
adc
pop
mov
fscale
add
cmpl
jns
mov
fisttpll
and
push
jecxz
xchg
cmp
adc
inc
jns
rcrb
and
mov
jmp
mov
pop
imul
lds
les
mov
push
ljmp
lods
das
xchg
push
cmp
lret
rcll
xchg
lret
lcall
popa
pop
push
push
lods
and
cld
jnp
leave
pop
stc
enter
cs
sub
inc
imul
aas
fcmovne
jl
loopne
test
out
mov
jae
rcl
dec
mov
ret
jl
testl
test
roll
jnp
xchg
add
pop
imul
xchg
and
fwait
sbb
push
in
jne
das
mov
and
jne
add
inc
outsl
add
dec
loop
fisttps
fsubrl
ja
mov
outsl
lds
adc
test
cld
jmp
in
and
lret
insl
das
ja
adc
sbb
sub
inc
sbb
jno
add
insl
mov
and
cmpsb
xchg
ret
jl
push
xor
popf
std
xchg
shll
mov
sbb
cltd
inc
dec
cmp
push
cmp
push
inc
aas
add
jns
add
xchg
jl
dec
xchg
inc
sbb
add
sahf
fs
add
cmp
imul
jne
imul
sbb
xchg
dec
sti
xor
dec
shlb
or
add
stos
jmp
xchg
add
jl
arpl
mov
ret
or
sbb
push
pop
mov
sbb
movl
and
inc
sub
mov
xchg
ss
push
ret
push
sub
add
sub
push
cmpsl
loope
push
inc
or
mov
cmp
cmp
and
add
xchg
xchg
inc
xor
leave
repz
fs
jg
adc
inc
lock
repnz
daa
inc
mov
jp
inc
wbinvd
xchg
cmp
xor
xchg
pop
or
inc
cmp
mov
inc
push
jo
or
xor
jo
mov
in
mov
loop
mov
dec
sbb
add
test
cli
add
mov
std
xchg
sub
push
cmp
aaa
push
dec
and
inc
or
loope
add
add
rol
insl
xor
pushf
test
push
or
stos
mov
test
cmp
inc
fisttpll
sbb
out
ss
shlb
dec
cmp
or
movb
cmpsl
in
mov
sub
add
jno
loope
test
inc
xchg
imul
jle
lret
push
sbb
xchg
fidivrs
addl
mov
xchg
mov
loope
dec
push
push
push
in
jmp
mov
and
xchg
lock
add
add
jno
xor
shrb
push
mov
sub
lods
sub
lea
data16
mov
mov
lods
mov
cmovns
jns
sbb
inc
aaa
add
fs
inc
imul
leave
push
nop
lods
jae
sbb
jo
cmp
int3
rol
imul
fimuls
rolb
jle
pop
push
dec
arpl
dec
out
aaa
rcr
pusha
sub
in
loope
sub
mull
xor
in
push
dec
add
pop
push
arpl
shlb
cmpsl
sub
cld
add
jle
dec
sub
sub
mull
inc
push
enter
jns
lahf
popa
rorl
enter
lods
mov
jno
inc
jae
into
inc
in
aas
std
repz
pop
ret
fwait
inc
mov
dec
shrb
pop
cmp
movsl
mov
pop
les
ret
enter
xrelease
xchg
call
insb
xor
xchg
mov
cwtl
aam
or
jge
std
dec
add
adc
mov
sbb
cmp
aad
pop
pusha
pop
mov
inc
sub
cld
push
test
movsl
lret
mov
sub
sbb
add
jl
xchg
gs
cmp
inc
test
repnz
mov
inc
dec
je
testl
adc
daa
mov
stc
repz
fdivrs
ret
das
into
pop
stos
xchg
jae
jmp
ret
test
loope
or
cli
inc
cmp
mov
ret
rclb
out
addr16
pop
enter
cld
imul
arpl
mov
in
dec
xchg
loop
lret
dec
adc
sbb
notb
in
mov
leave
lods
push
fldpi
sahf
cld
int
and
das
push
xchg
adc
aam
mov
sbb
dec
jns
or
push
mov
loopne
aad
inc
add
outsb
sbbl
shrl
cmp
repnz
loop
lock
dec
and
xchg
popl
push
aaa
jne
pop
xchg
repz
daa
push
xchg
jo
imul
lods
push
in
aas
ror
sub
pushf
lea
xchg
movsb
push
dec
pop
add
pop
mov
xor
sbb
stos
jbe
hlt
jg
bound
cmp
ss
push
ja
jecxz
rcl
cmp
and
adc
or
lds
push
int
int
adc
fcompl
pop
inc
pop
daa
dec
fsubs
push
sub
rcll
adc
xlat
adc
xor
or
adc
push
xchg
jmp
dec
and
popa
out
pusha
xchg
or
pop
mov
adc
test
or
lea
pusha
test
inc
inc
test
and
roll
adc
dec
adc
pusha
mov
cmp
cli
arpl
sbb
orl
ret
and
jns
sbb
outsb
xchg
or
and
mov
rcrl
cmp
mov
addr16
dec
cmp
fwait
mov
inc
mov
sub
call
arpl
subl
or
xchg
xorl
add
jmp
sbb
dec
and
push
js
xor
mov
leave
xor
daa
and
lea
je
inc
dec
push
and
pop
imul
xor
pushf
stos
lea
pushf
sub
lds
lea
scas
mov
jbe
and
sub
inc
inc
xchg
loopne
inc
and
adc
cltd
push
rorb
lds
nop
mov
pusha
mov
add
sbb
add
mov
push
xor
push
inc
ja
inc
push
lds
lods
and
mov
lret
repz
inc
xor
mov
sub
jp
sbb
pop
mov
fcoms
xor
pop
push
or
in
add
ret
stc
jecxz
sub
sbb
jmp
push
jne
out
cmpsl
into
mov
std
xor
fs
test
bound
test
or
mov
mov
inc
fwait
nop
and
lds
lret
and
and
imul
inc
sbb
jns
mov
add
sbb
cmp
mov
sub
leave
cltd
mov
inc
jns
pushf
imul
rolb
inc
es
psubsb
sbb
fwait
push
push
rclb
int
adc
cmpsl
pusha
pop
mov
cmovg
xchg
lods
dec
pop
mov
add
pop
and
xchg
dec
cmp
fs
cmpsl
xor
aad
clc
sbb
shrl
shl
std
bound
and
mov
xor
in
aam
sahf
out
sbb
lret
fdivrl
frstor
stc
cld
fcomps
nop
jo
add
push
push
push
add
mov
lea
fs
lea
sbb
pusha
cld
jnp
xor
bound
fwait
mov
mov
iret
xor
sbb
pop
pop
and
inc
rolb
push
call
int
dec
mov
dec
das
jno
addb
xchg
xlat
xchg
popa
xor
or
sub
lock
cwtl
and
push
outsl
iret
xor
scas
pop
sub
stos
jae
adc
push
pop
pusha
movb
into
mov
sub
or
leave
pop
pop
inc
push
push
fisubrs
or
or
add
inc
mov
inc
lret
mov
push
mov
cmp
or
xlat
addb
ficoml
fst
xchg
mov
fcoml
jle
and
cmp
dec
xchg
pop
loope
xorl
cltd
mov
jns
dec
pop
jg
mov
pop
push
xchg
xchg
imul
inc
sub
or
xchg
pushf
xor
orb
rcl
out
dec
dec
inc
mov
xor
xor
xor
sbb
in
dec
dec
mov
jnp
push
sub
inc
test
adc
push
xchg
cmpsl
mov
mov
dec
into
sbb
cmp
jecxz
mov
or
jmp
fwait
add
jmp
inc
testl
push
add
and
cwtl
or
push
sti
xlat
dec
add
pop
xchg
jae
cltd
mov
and
push
xor
cmp
nop
in
test
mov
mov
out
xchg
in
ss
or
test
adc
jno
bound
lea
add
adc
mov
lahf
push
lret
or
or
and
adc
test
push
test
rolb
insb
inc
mov
fsub
ret
jno
fimull
inc
pop
rorb
cs
int
pop
scas
jecxz
into
inc
in
mov
jae
jmp
lea
cmp
mov
mov
mov
dec
fisubrl
outsb
and
stos
shl
lahf
push
movsl
push
jb
mov
sbb
lea
or
dec
mov
aam
pop
ret
sub
jmp
popf
movsb
add
jge
jp
mov
xchg
stos
gs
mov
pop
ror
sub
sahf
push
xor
pushl
loop
movl
int
fistl
cmpsb
pop
add
movsb
fmuls
adc
mov
add
pop
popa
cmp
xchg
xchg
out
mov
ja
sbb
je
scas
sub
pop
pop
adc
pop
insb
sub
iret
mov
mov
decb
dec
lods
inc
popl
or
nop
and
orl
inc
ret
inc
test
push
fucom
add
add
sbb
sbb
and
scas
xor
push
xor
pop
ja
pop
aam
mov
sahf
xchg
lea
adc
dec
or
rcrl
xchg
and
mov
mov
int
mov
and
scas
aad
sbb
jp
cmp
test
add
ret
cltd
leave
adcl
mov
fs
loope
test
dec
adc
dec
and
push
arpl
orb
dec
pop
cmpsb
xor
outsl
mov
scas
pusha
repnz
pop
pop
inc
jl
and
and
pop
fs
sub
inc
push
add
mov
push
push
bnd
jecxz
xor
fbld
data16
int3
xor
add
out
mov
fs
aad
mov
push
lcall
pop
sbb
mov
pop
adc
nop
inc
nop
mov
mov
xchg
imul
jecxz
xchg
cmpsl
loop
mov
mov
insl
or
add
push
inc
xchg
fs
xor
cwtl
pop
sbb
or
push
loopne
sub
stos
inc
out
pop
inc
lret
mov
lods
popf
js
or
notb
test
bound
repnz
test
sub
mov
push
push
jnp
sbb
sbb
pop
cmp
jns
jns
sub
xchg
aad
lahf
insl
inc
pop
in
sub
orl
ret
push
call
push
dec
sub
data16
enter
sbb
rorl
push
sahf
dec
lock
cmpsb
cmp
dec
or
xchg
cmpsl
push
mov
mov
or
icebp
xor
adcb
or
pop
adc
or
lahf
or
daa
push
xchg
out
roll
invd
adc
xchg
xor
mov
test
dec
stc
les
add
inc
sarl
in
xor
subl
pop
sub
xchg
pop
add
jo
in
sbb
pop
icebp
sbb
or
inc
icebp
inc
xor
adc
or
or
sbb
lds
clc
lds
fsubs
in
sbb
cmp
lcall
das
fldenv
popa
repnz
cmc
dec
mov
push
sbb
jmp
test
jns
stc
xchg
aas
mov
xor
or
push
pusha
inc
cmp
dec
jns
adc
cmp
xorb
sbb
movsl
jne
pop
add
addl
loope
clc
shlb
popa
add
ret
rclb
sub
cs
or
arpl
popf
dec
pusha
call
addr16
andl
xor
push
sub
enter
sub
out
sbb
fidivs
das
xlat
fcomps
inc
sbb
movsb
loop
dec
jo
mov
roll
sub
sbbb
mov
outsl
adc
popf
movsl
repnz
inc
inc
inc
dec
mov
psraw
movsl
mov
add
xor
dec
pop
mov
sbb
insl
push
and
lea
jmp
mov
clc
mov
bound
mov
inc
mov
cmp
add
mov
cmp
mov
pop
sbb
adc
jns
sbb
cltd
cmp
mov
jnp
mov
stc
aad
js
and
out
pop
repz
pop
adc
ja
xor
sub
jnp
sub
sbb
jno
dec
sbb
lret
dec
ret
pop
adc
jge
push
mov
push
ljmp
and
inc
xchg
in
jno
lcall
int
inc
dec
cltd
and
xor
inc
pop
inc
mov
lds
or
add
xchg
out
mov
cli
mov
inc
jb
sbbl
sti
nop
and
shl
and
mov
sub
sar
xor
adc
xor
shl
and
call
dec
fnstcw
pop
arpl
mov
inc
insb
insb
insl
jmp
popf
ss
xor
insb
insb
inc
frstor
or
loope
pop
push
inc
fildll
add
inc
jmp
loope
xor
insb
insb
stc
in
xor
xor
insb
insb
pop
xor
and
push
insb
push
cmpsb
lds
dec
cld
push
insb
pop
xor
insb
mov
fsub
out
sub
mov
call
mov
insb
insb
sub
jle
test
xor
insb
insb
jb
pop
xor
insb
insb
test
cmp
dec
mov
pop
push
mov
insb
insb
pop
call
out
pop
xor
insb
pop
push
cmc
inc
insb
insb
dec
in
lret
in
push
out
pop
insb
insb
daa
daa
jnp
xchg
fucom
loope
ja
push
jecxz
insb
insb
pop
push
jge
mov
fucom
loope
push
push
movsl
insb
insb
xchg
xchg
push
psllw
jp
pop
xor
scas
jbe
add
fucom
loope
mov
insb
insb
pop
insl
cmpsl
fildll
pop
lahf
jecxz
fucom
loope
shll
mov
insb
insb
dec
jae
xor
insl
call
hlt
arpl
xor
insb
mov
lea
bound
xor
gs
insb
insb
jge
dec
sarb
pop
xor
repnz
inc
cli
imul
mov
sbb
insb
insb
lods
add
int
inc
xchg
fucom
loope
mov
pop
inc
insb
insb
inc
cs
gs
xor
insb
insb
into
movsb
leave
xchg
fucom
loope
jecxz
fistpl
insl
sahf
test
lds
insb
into
fldcw
arpl
jns
push
push
insb
insb
xchg
cmp
gs
insb
cltd
cmp
pop
insl
xchg
fucom
loope
jns
push
xor
insb
insb
out
or
enter
jg
insb
insb
pop
xor
or
std
sti
adcl
mov
add
ret
lock
xor
mov
sbb
and
xor
insb
cmc
mov
fucom
loope
mov
insb
insb
push
mov
insb
insb
jbe
lahf
imul
sbb
out
pop
xor
movsb
cmp
icebp
add
insb
insb
pop
xor
insb
insb
insb
movsl
cli
fldenv
sbb
test
inc
test
inc
sbb
xor
insb
push
lea
push
pop
xor
mov
and
xor
insb
cwtl
pop
add
jns
insl
hlt
lds
or
cltd
pop
xor
xchg
mov
insb
insb
pop
push
out
and
shll
cld
xor
bound
sub
xor
jbe
mov
xchg
sar
insb
insb
pop
xor
stc
out
push
jae
fucom
loope
insl
xor
ja
lods
imul
xchg
sbb
xor
insb
xchg
arpl
xor
filds
mov
sbb
jl
pop
xor
iret
and
insl
mov
shll
mov
insb
insb
push
mov
mov
int3
xchg
fucom
loope
sub
pop
xor
jecxz
or
mov
insb
insb
push
mov
jl
pop
xor
ljmp
insl
sub
dec
dec
pop
into
jae
jmp
mov
ss
fucom
loope
pop
push
mov
insb
insb
lcall
jnp
insl
pop
subb
lods
push
sub
loope
insl
and
insb
inc
xor
xor
xchg
fucom
loope
pop
xor
insb
push
js
insb
insb
test
iret
xchg
fucom
loope
pop
xor
push
add
test
movsl
cltd
xchg
fucom
loope
mov
insb
dec
dec
subb
xchg
fucom
loope
mov
pop
xor
ja
dec
cmp
pop
call
insl
jmp
insb
insb
pop
xor
ljmp
pop
xor
insb
pop
insl
sbb
insb
insb
mov
xor
xchg
fucom
loope
xor
xchg
lods
dec
dec
cmp
and
add
xor
insl
lea
mov
pop
push
mov
dec
lock
xchg
jns
pop
xor
insb
insb
mov
arpl
or
loop
pop
xor
dec
dec
gs
inc
adc
xchg
fucom
loope
dec
push
xor
dec
fstps
sbb
mov
insb
insb
pop
adc
xchg
fucom
loope
insl
mov
fcmovb
pop
dec
mov
pusha
insb
insb
pop
xor
dec
inc
stos
std
fcompl
xchg
fucom
loope
mov
insb
pop
inc
icebp
fdivrl
shrl
out
xchg
fucom
loope
push
punpckldq
xor
adc
xchg
fucom
loope
sub
insb
pop
xor
insb
lcall
pop
xor
insb
pop
mov
iret
lods
dec
dec
pop
xor
dec
mov
xor
push
xor
insb
insb
cmpsl
xor
ret
sti
dec
dec
xchg
fucom
loope
xor
insb
inc
inc
rorl
fucom
loope
shrl
xor
insb
sahf
jmp
fwait
xchg
fcom
out
shr
jmp
push
insb
insb
xor
jns
pop
xor
dec
mov
mov
adc
xchg
fucom
loope
cmp
insb
insb
jnp
orb
insl
clc
and
fadd
push
xor
insb
insb
jecxz
jge
xchg
fucom
loope
mov
insb
insb
inc
push
xor
push
inc
insb
insb
insb
inc
cld
stos
ror
mov
xchg
fucom
loope
jns
pop
xor
mov
xor
insb
or
pushf
int
aas
and
xor
insb
insb
cli
pop
adc
xor
insb
test
jns
xchg
fucom
loope
jns
insl
mov
insb
insb
loopne
pop
shll
dec
jns
loope
insb
insb
inc
icebp
cvttps2pi
xor
xor
roll
loope
cmc
pop
push
dec
add
or
pop
pop
or
mov
pop
xor
cmp
xor
add
ja
sbb
pop
or
mov
add
inc
lds
xchg
fucom
loope
mov
pop
insl
cli
and
xor
inc
pop
xor
insb
adc
imul
insl
out
insb
insb
cmp
sub
and
pop
xor
insb
insb
arpl
fucom
loope
xor
push
cltd
or
dec
std
ret
cli
push
xor
loopne
insb
insb
dec
int3
outsb
sbb
xor
cwtl
lds
xchg
jne
insb
xchg
xchg
fucom
loope
xor
pop
push
mov
sbb
insl
pop
shrb
cmp
xor
xchg
roll
fucom
loope
clc
pop
xor
insb
push
test
lock
out
xchg
aaa
pop
insl
dec
add
out
call
xor
pop
lahf
insb
insb
and
and
ror
loop
xor
insb
push
std
aam
xchg
fucom
loope
rol
insl
out
mov
roll
xor
dec
push
xchg
bound
inc
sbb
pop
xor
insl
mov
movsl
sarb
pop
xor
movl
push
fs
jo
ret
xchg
fucom
loope
insb
pop
xor
insb
dec
dec
mov
and
or
dec
mov
xchg
fucom
loope
mov
pop
xor
insb
or
sbb
mov
loope
faddl
insl
and
insb
insb
sub
and
dec
lods
dec
dec
pop
xor
fildll
mov
or
sbb
add
out
jmp
xchg
fucom
loope
insl
pop
mov
ss
xor
insl
and
mov
mov
jnp
dec
jnp
pop
insl
daa
lods
dec
dec
pop
push
mov
dec
dec
mov
cmp
xor
ja
insb
insb
cmp
pop
xchg
push
insl
popf
dec
and
xor
insb
insb
jle
add
sbb
sahf
dec
dec
dec
data16
in
rorl
and
xor
push
sbb
insb
insb
in
mov
fucom
loope
inc
subb
shll
hlt
fwait
jae
pop
xor
insb
insb
cltd
push
adc
xchg
fucom
loope
dec
jnp
insl
sbb
insb
insb
in
or
and
xor
insb
insb
mov
pop
xor
inc
insb
insb
lods
addr16
icebp
pushl
mov
clc
mov
cmp
scas
xchg
fucom
loope
mov
insb
xchg
xor
mov
insb
cmp
pushl
xchg
xchg
or
insl
shl
insb
insb
neg
cli
xor
jnp
dec
jnp
push
outsb
mov
mov
pop
xor
insb
mov
repnz
mov
pop
xor
cmp
sub
enter
in
sbb
xor
cmpsl
out
mov
xchg
data16
insl
mov
push
pushf
mov
pop
fsubrs
sbb
xor
jecxz
in
dec
jo
cmp
insl
lea
dec
pop
xor
dec
jne
cmp
xor
insb
insl
stos
jg
insb
xchg
pop
pop
push
bound
pusha
cmpsb
push
cmc
xor
andb
add
in
xor
insb
test
mov
push
decl
dec
shlb
ret
fucom
loope
mov
dec
inc
pop
xor
and
inc
ret
mov
mov
insb
insb
nop
pop
test
push
repz
xchg
push
pop
xor
insb
insb
enter
adc
pop
xor
shlb
jecxz
xor
xor
insb
fs
daa
lcall
sbb
data16
dec
dec
mov
pop
insl
mov
insb
insb
xchg
pusha
popa
ret
mov
dec
dec
stc
mov
in
pop
xor
jno
aaa
cmp
xor
insb
pop
push
repz
insb
insb
xchg
je
and
add
insb
and
sbb
sub
loop
pop
xor
push
mov
shrb
mov
insb
insb
adc
leave
pop
jge
fucom
loope
push
repz
dec
dec
cmpsl
xor
fucom
loope
mov
stos
mov
mov
insb
movsb
cmp
pop
xor
rclb
pop
xor
insb
push
inc
and
dec
sbb
fs
insb
pop
xor
dec
xor
mov
movsl
adc
cli
xchg
fucom
loope
leave
pop
xor
cmp
sti
pop
jbe
xor
sbb
insb
lods
in
divl
mov
mov
lret
subl
insb
fsubs
shrl
dec
dec
pop
xor
and
outsb
fwait
addr16
fucom
loope
xor
je
das
scas
xor
push
testl
stos
xchg
fucom
loope
jns
pop
xor
insb
pop
xor
sbb
enter
mov
insb
insb
or
sbbb
fnstsw
xor
dec
sub
pushw
mov
dec
dec
xchg
ss
ret
pop
insl
push
and
insl
popa
pop
insb
insb
xor
cmc
dec
sbb
mov
insb
insb
and
push
xor
xor
dec
mov
dec
adc
aaa
or
mov
loop
insb
pop
xor
jecxz
ret
mov
push
or
dec
and
int3
xchg
fucom
loope
jnp
mov
je
insb
insb
loop
push
cmpsb
jno
sub
insb
push
push
add
rclb
or
xor
push
mov
pushf
mov
and
xor
call
mov
inc
subb
push
inc
sbb
dec
pop
push
dec
dec
enter
cs
xor
push
jge
insb
insb
pushf
in
ds
dec
sbb
push
or
insb
insb
jl
js
mov
insl
jnp
dec
dec
mov
lea
dec
dec
dec
pop
xor
fiaddl
insb
insb
unpckhps
fucom
loope
mov
subb
cmp
sub
insb
insb
je
out
fildll
enter
fucom
loope
insl
inc
bound
xor
lds
enter
loope
pop
loop
xor
jmp
xlat
stc
pop
xor
pushf
stos
cld
sahf
cmp
push
inc
and
sbb
xor
pop
dec
dec
dec
mov
xorl
push
shl
insb
mov
shr
shr
out
pop
insb
insb
aaa
dec
outsl
mov
sbb
jns
push
inc
or
dec
fadd
loope
aaa
pop
xor
out
insb
insb
pusha
inc
imul
xchg
data16
insl
inc
bound
push
sbb
jp
stc
xchg
fucom
loope
push
ja
dec
dec
push
enter
cmp
dec
pop
xor
pop
inc
insb
insb
fcoml
xor
xchg
and
ret
pop
insb
insb
and
pop
push
insb
int
xor
loopne
insb
pop
std
mov
dec
aaa
sbb
sub
jp
dec
dec
push
inc
pop
pop
xor
dec
pop
xor
test
in
pop
xor
insb
insb
and
repz
pop
xor
insb
fld1
dec
xchg
fucom
loope
xor
mov
xchg
loopne
fucom
loope
xor
insb
pop
push
enter
xchg
xor
aas
int
pop
xor
mov
sbb
xor
xor
aas
loopne
insb
dec
cwtl
movsl
ret
xchg
shrb
push
lahf
imul
cltd
jne
xor
mov
insb
pushf
pop
repnz
fucom
loope
insl
test
dec
dec
dec
xchg
imulb
sbb
xchg
fucom
loope
xor
aad
dec
dec
push
paddusb
insl
sbb
push
subl
fucom
loope
mov
icebp
adc
insl
fimull
hlt
adcb
jmp
sub
or
xchg
fucom
loope
mov
mov
lret
mov
push
jle
dec
dec
pop
push
mov
or
cwtl
and
jns
pop
insb
pop
insb
insb
push
jns
pop
inc
mov
outsb
push
push
pop
insb
insb
jbe
mov
fucom
loope
push
mov
jmp
inc
shrl
insb
insb
pop
xor
subb
sub
xchg
data16
insl
and
insb
insb
pop
insl
lds
testl
loope
mov
push
and
add
xchg
fucom
loope
xor
std
dec
cs
xor
push
in
dec
dec
jb
mov
and
xor
push
leave
mov
cltd
ret
mov
dec
dec
stos
jge
or
xchg
jns
pop
xor
sbb
jl
dec
movsl
sbb
insl
cmpl
and
pop
xor
push
aam
insb
insb
loopne
ss
insl
xchg
jg
insb
pop
xor
push
shrl
dec
stos
adc
pop
xor
test
ja
jecxz
stc
pop
xor
insb
aad
stos
mov
loope
xor
insb
std
rcl
cmpsl
sbb
sub
insb
insb
pop
push
or
insb
insb
in
push
pop
jo
xchg
fucom
loope
mov
dec
dec
pop
insl
pop
ret
pop
les
in
xor
push
nop
lds
insl
lods
pop
insb
insb
nop
adc
inc
sbb
push
je
dec
dec
jnp
pop
bound
stc
dec
dec
dec
pop
push
mov
outsb
add
mov
pop
xor
insb
xor
pop
dec
jnp
pop
push
inc
dec
dec
dec
addr16
cmp
inc
push
push
dec
dec
dec
pop
xor
insb
iret
scas
add
mov
insb
xlat
ljmp
fucom
loope
mov
sbb
dec
xchg
dec
pop
or
popl
insb
insb
pop
push
xor
insb
insb
daa
adc
sar
icebp
xchg
fucom
loope
xor
dec
dec
lea
xor
insb
insl
cmp
dec
dec
stos
mov
cmp
ja
out
mov
aaa
insl
mov
lcall
fucom
loope
jnp
dec
jnp
insl
or
insb
insb
pop
insl
lcall
insb
insb
adcl
push
scas
subb
test
jmp
pop
insl
retw
sbb
xor
ret
pop
xor
insb
pop
push
inc
aas
insb
insb
fsubs
push
imul
mov
dec
dec
add
sbb
jns
pop
push
sub
sub
xchg
fucom
loope
mov
insb
insb
xor
mov
xchg
fucom
loope
ret
je
xor
insb
sub
push
xor
insb
cmp
fucom
loope
pop
pop
xor
insb
or
pop
insb
fs
insb
pop
xor
insl
add
dec
dec
add
jo
xchg
fucom
loope
jnp
insl
loop
dec
dec
and
pop
xor
insb
imul
jp
push
pop
mov
mov
pop
xor
jle
insb
insb
loope
mov
and
mov
insb
insb
mov
xor
xor
imul
xor
inc
insb
insb
loope
pop
daa
pop
xor
loopw
or
xor
into
in
in
dec
or
shlb
insb
insb
insl
jl
insb
insb
mov
loopne
loope
imul
pop
pop
xor
rclb
insl
loop
dec
dec
push
mov
insb
insb
jg
scas
inc
xor
xor
insb
insb
add
pop
and
and
xor
insb
dec
or
dec
xchg
fucom
loope
das
pop
insb
insb
insl
dec
dec
dec
push
outsb
outsb
xchg
jae
sbb
push
inc
mov
push
pop
add
inc
xchg
ljmp
sbb
into
jmp
dec
cwtl
jae
pop
xor
push
lods
dec
dec
aad
pop
pop
xor
insb
insb
pop
xor
pop
in
int
js
mov
pop
xor
ljmp
dec
dec
dec
pop
xor
insb
insb
push
push
ret
sub
lahf
dec
xchg
fucom
loope
mov
pop
push
dec
or
cmp
sbb
xor
mov
loope
fs
insl
mov
dec
dec
fstpl
fucom
loope
push
dec
shrl
rclb
push
jge
insb
insb
pop
imul
sbb
stos
dec
dec
push
imul
xlat
int
sbb
inc
push
imul
lret
dec
call
mov
subl
pop
insl
or
insb
insb
leave
sahf
xor
pop
xor
dec
dec
decl
scas
out
fucom
loope
jp
push
mov
insb
insb
jo
fs
pop
push
fwait
mov
sub
xor
insb
pop
xor
mov
xor
insb
pop
rorl
ja
pop
xor
es
loope
xor
mov
dec
dec
push
lock
pop
xor
mov
cwtl
sub
mov
dec
dec
dec
pop
xor
pop
popa
mov
push
rcll
pop
xor
dec
sbb
sbb
mull
insb
push
or
testl
sub
insb
pop
xor
adc
sbb
je
xchg
ljmp
imul
pop
pop
pop
add
sarl
push
cmpsl
jmp
dec
scas
xchg
shr
sbb
das
mov
pop
insl
mov
xor
in
xchg
adc
fucom
loope
mov
insl
cltd
lret
dec
dec
jle
and
pop
push
in
out
dec
dec
push
cmc
lds
mov
insl
inc
stos
dec
dec
cwtl
pop
sub
aaa
pop
xor
scas
add
out
cmp
mov
insb
bound
add
aam
xor
push
inc
popa
insb
insb
add
mov
mov
pop
insl
xchg
shrl
add
add
xor
insb
insb
ss
push
scas
xor
sbb
ret
mov
add
sbb
mov
cs
dec
insl
xor
pop
dec
sbb
sub
insb
pop
push
in
loope
insb
jns,pn
fsubrl
sbb
sbb
xor
fildll
jl
std
mov
pop
push
pop
imul
loope
fucom
loope
push
dec
dec
dec
ret
and
xchg
xor
mov
insb
stc
and
xor
insb
insb
movsl
daa
add
rcr
add
push
inc
dec
dec
dec
adc
pop
adc
pop
or
dec
dec
out
mov
xor
and
loop
sarb
sbb
push
popa
push
insb
sub
dec
and
cmpl
mov
mov
sbb
mov
movsl
mov
inc
or
xchg
fucom
loope
xor
push
xor
dec
dec
rorb
clc
roll
sub
push
addb
sbb
insl
int3
mov
push
dec
pop
xor
dec
mov
inc
sbb
fucom
loope
push
popa
popa
insb
insb
popf
sbb
inc
mov
xchg
fucom
loope
pop
insb
bound
loope
insb
insb
or
xchg
adc
xor
iret
pop
insb
insb
in
repz
std
mov
mov
inc
xchg
jno
dec
dec
push
loope
insb
insb
mov
js
push
mov
dec
lods
pop
fcoml
les
inc
xchg
sbb
insb
insb
push
adc
bound
jns
pop
xor
mov
pop
or
in
sarl
xor
aam
insb
insb
jne
mov
mov
insb
insb
loope
and
sbb
xor
dec
cmpsl
outsl
insb
xchg
fucom
loope
add
push
mov
test
dec
jns
insb
insb
insb
insb
pop
xor
dec
lock
mov
push
int
mov
das
add
cli
stos
pop
xor
insb
daa
repz
dec
jnp
insl
jge
dec
dec
pop
insl
xchg
insl
dec
dec
pop
popl
fucom
loope
xor
das
and
dec
pop
xor
insb
insb
pop
xor
repz
dec
or
lods
xchg
fucom
loope
mov
push
and
insb
insb
cmp
jle
fs
xchg
fucom
loope
jns
pop
xor
in
into
dec
dec
call
pop
xor
dec
insl
sub
dec
xchg
inc
push
inc
and
sbb
movsb
pop
xor
insb
insb
mov
pushf
cmp
sarb
pop
xor
dec
xchg
in
test
mov
dec
inc
xchg
xchg
sbb
dec
dec
dec
push
in
add
xchg
cmpb
repnz
xor
dec
ljmp
pop
mov
fdecstp
xor
insb
xlat
loop
xchg
cmc
mov
sbb
dec
push
test
dec
hlt
adc
or
loope
insl
nop
int3
dec
dec
push
outsb
sub
sbb
xor
jge
notb
xor
arpl
dec
push
fsubp
insb
insb
xchg
scas
pop
dec
jae
pop
xor
dec
jnp
fcoms
jp
pop
push
loope,pn
insb
add
fldl
sbb
fucom
loope
mov
dec
dec
das
pop
stos
dec
mov
pop
xor
insl
adc
dec
nop
mov
xchg
jns
pop
xor
lods
dec
dec
insl
enter
pop
xor
pop
jecxz
les
xor
mov
dec
ret
scas
xchg
fucom
loope
out
pop
xor
insb
xor
movsl
sbb
jp
pop
xor
adc
jl
xchg
fucom
loope
push
push
inc
sub
dec
cmp
sbb
jns
pop
insl
adc
insb
insb
lcall
jp
pop
xor
dec
pushl
jle
popf
movsl
xor
dec
cmpsb
dec
ror
xor
insl
rol
insb
jmp
sbb
test
sbb
in
dec
dec
dec
jo
es
repz
xchg
imull
mov
pop
push
into
dec
dec
dec
ja
daa
rcrb
gs
fucom
loope
mov
dec
jle
mov
lret
add
jns
int3
icebp
pop
xor
mov
dec
pushf
movsl
push
xchg
fucom
loope
mov
insb
insb
inc
fwait
xorb
sbb
mov
insb
sub
sbb
jae
insb
insb
pop
push
popf
dec
dec
dec
or
pop
pop
xor
dec
mov
jle
xchg
fucom
loope
mov
data16
insb
insb
pop
push
jp
dec
dec
mov
pusha
pop
xor
dec
sub
dec
xchg
fucom
loope
mov
push
subl
xchg
fucom
loope
sub
dec
dec
pop
xor
dec
stc
int3
icebp
xor
insb
pop
push
adcl
dec
dec
cwtl
xchg
sbb
jns
pop
xor
dec
inc
ja
and
shrl
and
xor
dec
notb
mov
insb
sbb
rcll
mov
push
cmp
dec
js
sub
xor
dec
aas
gs
sub
repnz
dec
dec
insl
lods
scas
dec
dec
jmp
mov
sar
in
push
ret
dec
dec
dec
lea
dec
sbb
jl
pop
xor
insb
push
enter
notb
mov
stc
pop
xor
insb
insb
pop
fistpll
xor
rep
dec
dec
stos
roll
push
xor
xor
jns
pop
rolb
outsb
dec
dec
pop
xor
dec
dec
pusha
shr
xchg
fucom
loope
mov
pop
insl
mov
popf
das
insl
pusha
lea
push
jbe
dec
dec
jecxz
inc
jmp
sbb
mov
sub
pop
inc
cmp
xchg
fucom
loope
popa
insb
pop
xor
dec
xchg
jne
pop
xor
insb
insb
pop
xor
cli
mov
and
cmp
xor
push
cmp
dec
dec
mov
movsl
xor
insb
insb
loopne
sub
pop
insl
xchg
mov
stos
lret
push
pop
cwtl
pop
pop
xor
dec
sahf
popa
fisubl
sbb
ja
insb
insb
adc
test
icebp
cld
icebp
pop
xor
mov
insb
xor
sarl
xor
dec
dec
jmp
push
enter
loope
mov
pop
push
fimull
dec
mov
xchg
fucom
loope
xor
push
and
out
lahf
xlat
xor
push
sub
cmp
sbb
xor
insl
and
xchg
fucom
loope
push
push
and
jl
pop
xor
dec
dec
and
dec
stos
aad
xchg
sbb
xor
lods
dec
dec
pop
bound
adc
sbb
push
ret
pop
xor
frstor
insb
insb
dec
jl
ret
sub
sbb
test
lret
dec
dec
dec
into
inc
push
push
xor
mov
dec
icebp
or
fimuls
sub
pop
xor
icebp
mov
dec
dec
pop
xor
insb
insb
and
ja
adc
push
dec
pop
xor
and
mov
loop
insb
xchg
mov
push
add
out
push
push
ret
sub
dec
mov
sub
and
push
lret
imul
cltd
hlt
mov
in
sbb
nop
sub
dec
or
dec
and
jnp
pop
xor
dec
adc
cmp
mov
mov
in
insl
dec
push
dec
dec
insl
dec
in
dec
dec
xchg
lods
aam
mov
xor
testl
loop
sar
xor
in
dec
dec
addr16
int3
sbb
xchg
lret
add
aaa
cmpb
insb
pop
push
push
dec
dec
dec
pop
fsubs
sbb
insl
insb
insb
insb
and
pop
xor
insb
insb
insb
push
stos
dec
dec
dec
xor
out
and
push
cli
in
dec
dec
insb
loop
jb
add
jp
pop
xor
dec
xchg
xor
rclb
mov
dec
dec
pop
xor
dec
repz
jns
pop
xor
dec
imul
sar
fsts
xor
dec
jno
repnz
es
fucom
loope
push
sub
dec
dec
lods
jecxz
dec
popf
xor
xor
dec
pop
xor
or
or
xor
dec
lods
shll
lea
xor
mov
dec
stos
enter
xor
pop
xor
dec
or
pushf
rclb
xor
rol
insb
insb
stos
push
pop
fsts
xor
xor
mov
xchg
aaa
pop
xor
xor
iret
xchg
xchg
fucom
loope
jns
pop
xor
dec
insb
loope
mov
xor
test
in
pop
xor
rcrb
xor
dec
sbb
mov
dec
dec
xchg
rcll
jl
dec
dec
insb
insb
inc
push
inc
int3
dec
dec
pop
xor
xlat
shrl
fstl
mov
sbb
mov
xchg
pop
xor
popa
insb
insb
cmp
leave
dec
loopne
xor
xchg
into
lock
clc
test
in
xor
mov
loope
xor
dec
imul
lret
mov
sbb
and
dec
dec
xchg
jae
jecxz
fucom
loope
xor
or
dec
sbb
js
fucom
loope
xor
push
mov
xchg
fucom
loope
insl
jnp
dec
dec
je
fs
push
iret
sub
pop
xor
insb
mov
fdiv
xchg
fucom
loope
mov
insb
insb
or
dec
mov
pop
xor
insb
pop
xor
shll
insb
pop
push
cmpsl
jmp
dec
ficoml
int3
sbb
mov
insl
pop
jmp
dec
sub
pop
xor
dec
out
lods
mov
dec
cmp
movsb
insb
inc
xchg
xchg
mov
insl
sub
popf
mov
xor
sbb
jp
pop
push
insl
in
dec
dec
jge
sahf
ret
and
mov
in
pop
insl
aaa
subl
mov
jmp
xor
push
fucom
loope
xor
leave
pop
xor
jl
pop
lcall
ret
dec
add
cmc
pop
xor
dec
dec
jecxz
in
or
xor
dec
jge
or
xchg
fucom
loope
mov
mov
dec
adc
daa
hlt
xchg
fucom
loope
push
xor
xor
inc
lret
xchg
fucom
loope
mov
dec
dec
js
mov
mov
mov
insl
dec
outsb
dec
dec
jo
mov
fucom
loope
shlb
pop
xor
dec
cmp
cmpsl
sbb
imul
mov
dec
dec
popa
push
dec
lock
adc
xor
mov
dec
data16
xor
pop
xor
dec
sar
ret
inc
sbb
xor
ss
dec
dec
fs
data16
jnp
push
cwtl
into
dec
dec
sbb
xchg
fucom
loope
jnp
insl
pop
loope
insb
insl
sub
mov
mov
xor
mov
dec
outsb
sbb
rorl
in
fucom
loope
ja
xor
insb
sbbl
inc
and
sbb
pop
xor
dec
insl
dec
test
dec
enter
dec
pushf
pop
xor
mov
dec
fistpll
loope
pop
xor
dec
fcomp
sub
in
shrl
sbb
push
cmpsb
lea
mov
and
stc
insl
stos
push
mov
sbb
xchg
data16
insl
push
dec
dec
push
lods
mov
test
sbb
fs
insl
shrl
dec
dec
scas
xchg
fucom
loope
mov
dec
dec
mov
lret
mov
test
dec
push
popa
int3
dec
dec
jecxz
xchg
xchg
cwtl
pop
xor
dec
pop
sub
dec
dec
pop
xor
insb
and
jns
mov
je
pop
xor
lea
movl
dec
dec
sbb
in
push
dec
pop
xor
into
xchg
rorb
addr16
fucom
loope
mov
insl
mov
insb
insb
aad
in
xchg
fucom
loope
ror
pop
xor
and
fadd
sti
sbb
jns
pop
xor
dec
lret
adcl
inc
xchg
test
insb
pop
xor
inc
mov
xchg
fucom
loope
clc
pop
xor
insb
fnstsw
mov
fucom
loope
dec
jnp
push
subb
stos
xchg
loope
mov
mov
cltd
lea
loope
push
and
insl
mov
repz
push
loope
and
dec
pop
xor
dec
add
popl
mov
xchg
jns
push
xchg
mov
imul
mov
dec
jg
dec
pop
push
das
mov
pop
insl
shlb
insb
pop
insl
shr
dec
dec
bound
inc
rcrb
add
insl
loop
dec
dec
outsb
inc
jp
fucom
loope
jns
pop
xor
data16
xchg
fucom
loope
mov
dec
dec
dec
mov
xor
insb
insb
insl
and
mov
cltd
int
shr
shr
in
mov
aaa
pop
insl
out
push
test
ja
out
shr
jmp
push
aam
dec
dec
push
xlat
cwtl
pop
lock
pushf
sub
insl
mov
dec
dec
sbb
xorl
sbb
stos
dec
dec
sub
pop
xor
fs
xchg
fucom
loope
mov
sub
repnz
movsl
pop
xor
stos
dec
dec
and
jne
cs
rorb
xor
rcrl
shrl
in
insb
insb
insb
insb
pop
xor
dec
dec
pop
add
in
sbb
jecxz
dec
dec
pop
in
dec
jle
and
ret
je
xor
mov
xor
mov
mov
xchg
fucom
loope
xor
dec
mov
mov
loope
pop
xor
int
dec
ljmp
xor
dec
dec
dec
cs
push
es
sbb
aad
dec
dec
test
in
sbb
xor
shrb
push
xchg
fucom
loope
xor
dec
lods
xlat
mov
ret
lods
dec
dec
dec
in
out
lret
pop
in
push
pop
add
mov
xor
mov
fidivl
repnz
pop
xor
jmp
insl
loop
dec
dec
pusha
cmp
jae
xor
xor
fstl
popw
xor
dec
mov
mov
shlb
mov
xor
dec
adc
pop
push
cli
sub
lcall
shr
shr
imul
call
test
pop
xor
dec
dec
loope
push
pop
out
ror
gs
insl
cmp
xchg
scas
xor
adc
pop
xor
dec
ja
fldt
pop
push
cmpsl
dec
dec
dec
mov
cli
xchg
fucom
loope
popf
adc
pop
xor
dec
mov
mov
pop
xor
or
out
sahf
xchg
fucom
loope
mov
clc
mov
dec
jnp
pop
xor
dec
mov
daa
xor
insb
insb
cld
mov
cmp
rorl
pop
mov
fldt
cmpb
xor
push
sub
mov
fucom
loope
insl
movntps
insb
call
sbb
pop
xor
ja
jns
adc
in
pop
xor
pop
push
in
dec
dec
popa
popa
sub
insl
imul
dec
xchg
jge
negb
push
imulb
dec
pop
xor
pop
push
addb
cwtl
xchg
fucom
loope
mov
dec
outsb
xor
fucom
loope
insl
sbb
xchg
inc
lea
sarb
in
mov
dec
cmp
sbb
xor
dec
push
ret
mov
add
xor
dec
add
sarl
jns
pop
xor
lret
mov
xor
insb
hlt
mov
insb
insb
insb
insb
push
jns
pop
xor
push
mov
pop
xor
or
dec
cmp
mov
dec
dec
lods
loope
or
or
xor
dec
dec
fdiv
outsl
xor
xchg
fucom
loope
xor
dec
xchg
pop
mov
sbb
jl
pop
xor
lods
xor
xchg
fucom
loope
jnp
insl
adc
push
jmp
dec
cmpsb
jecxz
xchg
fucom
loope
push
dec
push
xor
lds
sbb
sbb
push
call
mov
in
dec
jnp
insl
out
dec
dec
pop
push
and
addr16
fucom
loope
fsub
loopne
insl
lods
dec
dec
sbb
xor
dec
dec
repz
mov
sbb
cwtl
mov
dec
add
daa
test
mov
dec
dec
mov
mull
xor
dec
fisttpll
icebp
out
mov
insl
xchg
or
jne
dec
jecxz
xchg
fucom
loope
lret
cmc
pop
xor
dec
or
xchg
fucom
loope
jns
pop
xor
insb
loop
testl
insb
inc
icebp
fwait
insl
dec
dec
pop
xor
inc
pop
nop
jmp
mov
inc
xor
sub
xor
dec
dec
lock
adc
jno
mov
fucom
loope
push
imulb
les
ja
mov
sbb
push
pop
xor
insl
subb
movsb
xchg
jg
sbb
xor
dec
hlt
inc
out
enter
fucom
loope
movsb
stos
scas
arpl
mov
dec
inc
pop
pop
or
mov
push
fsubrp
dec
dec
loopne
aaa
movsl
xchg
jns
pop
push
mov
dec
dec
fdivrs
xchg
xchg
fucom
loope
xor
dec
cld
in
stos
xchg
fucom
loope
jnp
dec
jnp
insl
mov
dec
dec
pop
xor
add
fucom
loope
out
shr
imul
mov
dec
sbb
dec
adc
notb
push
in
sub
and
inc
xchg
mov
xor
fxch
dec
dec
and
pop
xor
sub
cmpb
fucom
loope
xor
insb
mov
ljmp
or
dec
dec
pop
sbb
and
fucom
loope
lods
lret
dec
dec
pop
xor
dec
movsb
add
mov
dec
jbe
enter
sbb
shr
dec
pop
xor
mov
xchg
fucom
loope
lret
dec
pop
xor
out
dec
dec
inc
cmp
fucom
loope
xor
dec
dec
div
shrb
fucom
loope
ja
out
mov
push
in
dec
dec
mov
jb
jnp
push
inc
dec
lea
rcr
cmp
call
jle
loope
pop
xor
sbb
cmp
jne
jle
fistpll
and
xor
rcr
adc
mov
cmp
jne
mov
sar
add
and
sbb
and
call
cmpsb
movsl
psrld
test
adc
rol
rol
neg
cmp
jne
lds
jno
shl
or
shl
xor
xor
cmp
jne
inc
idivl
mov
rol
adc
fcomps
loopne
bnd
fdivp
xchg
lea
rcl
jmp
or
lea
or
sub
shr
sbb
sar
jmp
mov
and
neg
and
sub
shl
cmp
jne
lea
sar
ror
sub
mov
mov
cmp
jne
inc
int3
mov
jge
rcl
sub
shl
jmp
shlb
and
shr
shl
test
rcl
call
clc
int3
stc
xchg
mov
repz
test
test
mov
call
jg
inc
cs
jmp
shrb
cltd
jecxz
shl
not
test
cmp
jne
cmpsb
test
inc
lock
out
repnz
sar
cmp
jne
and
mov
add
xlat
sar
adc
cmp
call
mov
sub
rcl
rcr
cmp
jne
xchg
pushf
data16
fadds
mov
add
sub
adc
mov
call
xchg
xlat
and
lock
rol
test
sub
jmp
mov
mov
sbb
neg
call
mov
inc
pop
shl
sar
jmp
xchg
insl
mov
add
lock
mov
jne
adc
mov
out
fdivrp
int
neg
or
cmp
jne
mov
xor
or
ret
adc
rcl
jmp
imull
rcr
not
sub
call
sarl
rorb
loopne
inc
sbb
call
aam
pushf
scas
pop
mov
fcomi
sub
cmp
jne
cmp
data16
ror
sub
shr
rcr
call
cld
loope
call
add
adc
shr
and
jmp
lods
roll
and
stc
mov
ss
nop
out
jecxz
fs
inc
or
sar
test
cmp
jne
out
push
icebp
daa
xor
int
shr
adc
jmp
mov
andl
sar
adc
rcr
not
cmp
jne
rorb
icebp
dec
sub
ror
adc
call
fnstsw
mov
jne
rol
call
adc
jmp
lea
adc
shl
mov
or
jmp
popa
inc
pop
sub
rorb
popw
in
test
mov
lea
shr
jmp
stos
pop
xor
cmp
lea
sar
jmp
sbb
xlat
pop
and
sbb
sbb
ror
xor
call
xor
shlb
xor
ror
call
mov
out
bswap
not
shl
and
lea
mov
and
adc
sar
ror
jmp
mov
fisttpll
clc
sar
mov
rol
adc
call
inc
sub
sbb
sbb
adc
sar
ror
and
call
fnstenv
jp
test
lea
shr
rcr
test
sub
shl
cmp
jne
xchg
mov
cmp
xor
dec
rcl
call
or
sub
fs
dec
add
sbb
jmp
sti
lods
or
movsb
cmpsl
add
lock
rcl
mov
rcl
test
call
pop
fldt
lea
shl
or
dec
rcr
rcr
call
sub
aam
mov
rcl
call
fs
add
and
xor
neg
test
call
fists
mov
xchg
test
rcl
test
shl
cmp
jne
adcl
push
add
jp
jae
leave
ror
adc
cmp
jne
cmp
push
daa
xor
out
pop
sbb
shr
sar
sbb
and
jmp
dec
inc
cmp
sbb
jmp
sbb
jne
lret
out
push
xchg
xlat
lea
add
and
inc
ror
mov
cmp
jne
jns
sbb
lea
sbb
shr
call
xchg
jmp
adc
xor
or
sub
cmp
jne
jbe
fimuls
loopne
cmp
jne
repz
pop
or
and
sbb
add
neg
mov
cmp
jne
loope
mov
adc
fimull
cld
and
or
ror
cmp
jne
or
out
mov
adc
jb
test
aad
xchg
stc
mov
sar
test
sar
shl
jmp
sbb
jb
fisttpl
shll
sub
sbb
cmp
jne
in
lret
arpl
and
push
lea
mov
sub
xor
sbb
jmp
mov
xor
lea
test
shl
sbb
sbb
cmp
jne
aas
jg
jns
xchg
xchg
lea
and
rcl
sub
jmp
mov
mov
enter
fs
rol
xor
cmp
xor
call
cli
pop
mov
leave
or
cltd
and
call
cmp
das
cmc
inc
inc
pop
add
not
or
call
test
shr
loop
dec
lea
shl
ror
call
dec
mov
sub
rcll
lock
dec
test
call
ret
idivb
incl
jmp
jbe
jmp
fs
sub
jmp
xchg
mov
fs
mov
and
rcl
add
mov
jmp
sub
dec
in
in
in
adc
inc
add
mov
sub
jmp
out
lahf
je
and
rol
or
jmp
mov
shl
cmp
ror
call
add
push
cmp
clc
rcr
call
jae
adc
add
ljmp
scas
clc
fnstenv
fstps
adc
mov
cmp
jne
clc
xchg
imul
jae
fs
shl
call
icebp
nop
mov
mov
cli
or
pop
rol
rcr
rcr
cmp
jne
loop
mov
out
out
mov
lret
cmp
jne
ror
shr
cmp
jne
movsb
iret
shrb
shll
out
dec
repz
sar
add
rcl
cmp
jne
mov
cs
ror
rcl
call
xor
lcall
ljmp
jmp
xlat
shl
cmp
jne
lahf
sub
cmp
ret
push
or
rcl
filds
push
shl
jmp
stos
stos
data16
pop
shr
rol
adc
test
call
hlt
adc
ljmp
ss
add
xchg
jae
fs
test
inc
or
jmp
inc
cmc
fldt
iret
jne
sti
pop
mov
call
fdivs
fwait
lea
sub
or
adc
add
jmp
cmpsb
mov
pop
shl
shl
cmp
jne
iret
idiv
js
pop
rcl
sub
sub
call
xchg
iret
mov
or
mov
shl
cmp
jne
sbb
lea
fldenv
sub
neg
dec
test
jmp
pop
das
popa
cmp
addr16
sbb
shl
rol
rcl
shl
neg
cmp
jne
addr16
imul
hlt
test
call
pop
mov
fcom
fld
rcl
sub
rol
call
sub
mov
test
out
shl
shr
rcl
rol
shl
dec
call
dec
cmp
pop
mov
ror
rcr
shr
cmp
jne
push
pop
inc
inc
sub
icebp
xor
lret
add
xchg
orl
fadds
or
add
lea
and
cmp
xor
inc
call
dec
jns
arpl
jecxz
rolb
fldl2t
lahf
mov
test
sbb
sbb
rol
test
test
cmp
jne
pop
jmp
and
test
sbb
sbb
mov
shl
call
add
add
rcl
out
fldl
mov
add
cmp
lea
sar
not
inc
sar
not
call
push
mov
sub
cmp
movsb
arpl
flds
ror
mov
cmp
jne
stos
jbe
addr16
test
sub
shr
shr
not
cmp
jne
sbb
mov
lea
add
adc
cmpw
je
shl
cmp
jne
icebp
cli
sbb
xor
add
ret
rcr
mov
jmp
ds
andb
sar
call
xor
and
shl
cmp
jne
addb
inc
sub
shl
call
lret
rcr
rol
jmp
bound
fwait
rcl
call
shl
call
mov
sbb
ljmp
lock
lea
shl
rol
jmp
xor
add
incb
inc
call
jge
out
scas
xor
lea
shl
ror
adc
shl
add
call
fcmovu
push
add
sar
call
out
je
das
imul
sbb
lock
cmp
jne
sarb
dec
aad
std
adc
ror
call
decb
inc
shr
sbb
xor
jmp
sbb
adc
cmp
jne
jbe
cmp
sahf
mov
shr
cmp
add
adc
jmp
cld
adc
xchg
sub
shl
neg
cmp
jne
call
fcompl
rol
rcr
test
call
mov
jae
neg
sar
rol
shl
adc
shl
cmp
jne
sub
push
or
adc
not
neg
not
cmp
jne
push
ret
fs
sbb
jmp
shrl
fs
cmp
jmp
data16
popf
xchg
jae
sti
jmp
scas
dec
shl
mov
call
das
cmp
lret
enter
cmpsb
in
shr
test
cmp
jne
xchg
roll
sahf
adc
rol
sar
call
mov
or
scas
shr
or
add
or
jmp
xor
lea
add
shl
jmp
push
shrb
sub
ljmp
adc
adc
or
cmp
jne
icebp
repz
gs
call
jmp
jge
dec
adc
or
xor
neg
cmp
jne
mov
not
cmpsl
nop
inc
lea
shl
ror
ror
sar
shl
jmp
test
mov
fs
mov
ror
neg
shl
cmp
jne
loop
mov
fs
rol
neg
xor
mov
jmp
or
cmp
lea
sub
cmp
jne
mov
or
ror
not
jmp
inc
mov
out
aam
jmp
out
call
rcrl
call
out
xor
sub
cmp
jne
add
lea
sar
rcl
mov
xor
call
add
ljmp
test
mov
xor
call
mov
xor
and
mov
shl
jmp
adcb
mov
faddl
fiadds
out
ret
std
jmp
inc
je
sub
rol
enter
dec
cmp
jne
repz
psrlq
test
sbb
shl
ror
adc
call
imul
sbb
inc
shr
add
or
or
call
je
mov
loopne
notb
loopne
shl
cmp
jne
xor
stos
addr16
cltd
mov
fs
mov
call
mov
int
adc
rol
shl
ror
call
jmp
fs
mov
shl
adc
rol
test
jmp
imul
out
sbb
fdivr
ret
sbb
lods
jne
stc
ss
into
pop
nop
ror
xor
dec
sar
ror
shl
call
dec
jmp
shl
call
subb
and
shr
or
shl
rcr
rcl
call
int3
jmp
xor
ficoms
shr
sar
shl
mov
cmp
jne
jae
mov
cld
rcl
neg
shr
jmp
divl
