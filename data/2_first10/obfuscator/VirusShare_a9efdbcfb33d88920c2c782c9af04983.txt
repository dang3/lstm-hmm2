nop
nop
nop
push
nop
nop
nop
ret
mov
push
fwait
adc
movsb
add
in
jp
jns
loop
or
out
test
gs
sarl
adc
jl
pop
cmp
jns
cmp
pop
push
stos
pop
and
cld
inc
out
ficoms
cltd
xchg
sub
pushf
push
fstl
sarb
adc
jecxz
mov
outsb
insb
je
sti
fwait
jns
xor
mov
out
jno
mov
ror
das
pop
in
stos
addr16
xlat
repz
repz
mov
adc
aas
jp
inc
ja
cmc
mov
ljmp
mov
stos
dec
push
imul
das
js
pop
mov
addr16
add
popf
fbstp
sbb
es
push
pop
push
xchg
xchg
xchg
test
pusha
adc
or
push
das
or
cli
aas
jge
popa
pop
or
pop
cmpsb
aam
mov
inc
leave
scas
repnz
sbb
loope
jns
cli
cmpsl
adc
push
adc
out
lahf
mov
push
jne
and
incb
mov
fs
adc
ret
lods
inc
in
test
inc
arpl
cwtl
push
pushf
ficompl
into
ret
fistl
pusha
push
xor
inc
pop
dec
jmp
pusha
inc
jb
sub
cmp
mov
inc
cmp
shlb
sti
dec
leave
inc
mov
adc
lret
jle
test
loopne
xor
jle,pt
pop
out
xchg
enter
dec
adc
in
loopne
out
xchg
add
arpl
inc
popl
lcall
inc
mull
mov
flds
fildll
ja
sbb
adc
loop
add
dec
imul
in
mov
call
dec
fs
in
lcall
add
inc
xor
les
dec
stc
lea
scas
inc
xor
lcall
pop
movsl
testb
lahf
inc
rcrb
push
cs
mov
cmp
push
jmp
test
jp
std
and
adc
aas
pop
pop
push
sbb
or
mov
mov
adc
outsl
in
cmp
js
inc
mov
push
pop
add
fnsave
pop
jnp
push
xor
mov
packssdw
xchg
push
xchg
sbb
shlb
jle
xor
adc
mov
push
add
rcrb
sti
sbb
xor
adc
mov
pop
xchg
mov
xchg
or
xlat
arpl
mov
xlat
addb
cltd
js
dec
adc
shlb
cmp
test
loopne
clc
dec
add
inc
cmovo
xchg
inc
inc
xor
mov
pop
test
shll
and
in
cld
and
mov
jno
stos
push
fsubl
inc
xchg
sub
mov
in
sub
xchg
mov
mov
cwtl
test
lods
rorb
les
or
ljmp
or
lahf
xchg
mov
fnsave
je
outsl
xchg
outsb
adc
pop
fbstp
hlt
ret
ficompl
mov
popa
shlb
mov
add
jge
add
adc
mov
jmp
jmp
mov
adc
or
mov
lods
xor
jg
mov
das
push
rcrl
xchg
in
in
pop
inc
or
in
out
pop
mov
pop
and
push
mov
pop
nop
or
add
xchg
in
add
sbb
and
cld
jb
pop
cmp
je
inc
pop
xchg
adc
push
dec
mov
lret
clc
adc
sub
repz
movsl
mov
jl
lods
enter
push
xor
in
orl
outsb
or
push
sub
xor
cmpl
or
sbb
clc
pop
cld
popf
das
or
mov
xchg
xchg
mov
mov
xchg
or
idivl
scas
clc
xor
xchg
push
test
sbb
mov
mull
cltd
or
lods
mov
and
push
rclb
sar
sub
fwait
jg
or
jle
les
scas
jae
call
cmp
mov
or
shlb
aas
mov
in
push
sbbl
outsb
or
jns
xchg
into
cmc
mov
xor
arpl
mov
mov
int
sbb
mov
filds
adc
test
lret
adc
repnz
xchg
push
rcr
dec
push
xchg
loop
enter
xchg
cltd
outsl
xchg
sbb
arpl
pop
ficompl
mov
dec
mov
push
pushf
sub
inc
inc
xor
push
pop
pusha
sahf
mov
call
dec
loopne
test
mov
add
dec
lods
xchg
scas
mov
sahf
dec
pop
pop
in
cmp
push
xchg
cmp
mov
mov
mov
repnz
test
sub
or
shrl
nop
sub
scas
add
push
pushf
or
out
stos
and
sub
lret
xor
popa
mov
pushl
scas
push
insl
dec
xor
jb
mov
adc
push
mov
fimull
lods
cmp
std
mov
mov
mov
popa
pop
xchg
paddsb
jb
andl
movsb
in
inc
andl
icebp
int
imul
xor
adc
mov
cmp
repz
aad
push
xor
mov
mov
out
push
pop
push
ljmp
sahf
out
push
push
push
repz
cmp
stc
mov
or
push
xchg
js
mov
scas
nop
push
repnz
lods
orb
mov
icebp
dec
fildl
push
bound
adc
xor
xchg
ljmp
inc
lret
cwtl
mov
adc
ffreep
subl
pop
sbb
inc
testl
jnp
sub
loope
imul
lods
pop
insl
insb
divb
pop
mov
mov
ret
out
out
push
cmp
inc
outsb
fsts
or
xchg
lahf
push
aad
jge
js
dec
mov
mov
jae
xchg
adc
mov
fcmovnb
jbe
and
dec
sub
xor
dec
push
insb
cli
das
xchg
xchg
jns
inc
addb
jge
xchg
xor
cltd
mov
repnz
arpl
pop
mov
lds
xchg
xchg
add
mov
adc
mov
pop
lret
je
outsb
js
cli
aaa
sarb
inc
dec
mov
ret
popf
mov
loop
mov
mov
cmp
mov
xor
adc
fwait
jle
shlb
lds
sbb
mov
mov
subl
jmp
jmp
add
stc
data16
sub
inc
scas
pop
pop
jge
lea
mov
fs
push
jne
pusha
mov
adc
addr16
fs
xor
pop
inc
int3
call
shlb
sbb
fwait
push
sbb
hlt
repnz
push
mov
daa
test
inc
jnp
shll
pop
xchg
ljmp
or
and
fsubl
dec
and
fdiv
lock
add
int
cmpb
jmp
sub
jge
sbb
ror
loop
jnp
sub
fwait
dec
ljmp
loopne
mov
loopne
jb
jae
or
pop
pop
enter
int3
popa
add
decb
fldt
popa
xlat
js
addr16
xor
pop
mov
mov
sub
cli
daa
in
xor
scas
je
loopne
roll
pop
add
daa
movsb
adc
push
mov
push
dec
dec
sahf
cmpsb
or
les
repz
push
lds
sti
dec
xchg
aam
dec
mov
mov
lods
addr16
es
stos
lock
mov
jb
jl
pop
cwtl
push
xor
or
xchg
xchg
stos
dec
mov
mov
jno
mov
cmp
sti
xor
stos
fsts
cmp
xchg
cltd
mov
test
pop
cmp
cmp
and
mov
lret
subl
or
aam
out
xor
fwait
dec
scas
insb
out
xor
incb
xchg
movsb
xchg
xchg
xchg
std
fwait
stos
loop
popa
fs
sbb
jb
sub
out
aam
cmpsl
arpl
inc
sahf
inc
lcall
pop
add
and
aaa
pop
adc
pop
cmp
sahf
pusha
pop
add
loopne
xchg
es
dec
mov
cmp
cs
dec
xchg
cmp
icebp
jns
hlt
fwait
pop
daa
dec
adc
decl
pop
sbb
int
loop
xor
inc
out
out
mov
jb
lods
push
iret
adc
mov
push
add
insl
mov
cltd
push
pop
jno
push
imul
mov
inc
jecxz
jae
mull
jno
stos
pop
xchg
jbe
ret
xchg
mov
sub
push
dec
add
ds
outsb
xchg
arpl
jns
fisttpl
adc
fists
xlat
sub
xsavec
sbb
fdivs
cmpsl
jmp
les
pusha
mov
lret
xorb
lds
ljmp
or
pop
jb
jo
adc
and
scas
repnz
popf
mov
cmpsl
fwait
jge
fs
push
fisttps
mov
sbb
or
inc
pushf
mov
sbb
lods
cmp
pop
or
lcall
mov
das
out
mov
stos
mov
dec
push
xor
jo
fs
scas
push
pop
stos
mov
add
cld
push
add
add
js
add
out
lcall
mov
and
daa
xchg
jecxz
popf
mov
sub
hlt
ret
fiadds
pop
mov
fisttps
mov
dec
ret
cmp
jnp
inc
jo
aad
xor
xor
lret
in
ret
dec
or
addr16
pop
insb
jmp
into
std
aam
sub
sub
roll
cmc
popf
das
in
test
add
and
sub
fmull
pushl
mov
popf
mov
ret
iret
insb
negl
roll
aad
pop
sti
repnz
push
mov
pop
xor
in
push
dec
push
sbb
lea
inc
fwait
test
jmp
mov
pushf
daa
jbe
dec
pop
stos
cmp
adc
lcall
into
or
or
arpl
test
mov
ljmp
push
lods
and
or
xchg
movsb
add
push
fsubrs
jns
std
leave
inc
dec
popa
xchg
adcl
mov
jnp
cmp
jne,pn
repz
shlb
or
mov
inc
add
aam
jmp
dec
lret
or
push
sub
and
aad
outsl
or
adc
mov
aaa
ss
pusha
mov
sub
add
test
adc
push
cltd
fwait
les
roll
bound
push
cmp
inc
or
mov
cltd
push
adc
aas
outsl
xchg
adc
inc
rcll
incb
loope
xor
pushf
inc
mov
cmp
pop
push
imul
xor
std
inc
bound
sub
add
and
jo
imul
testl
mov
cltd
pop
addb
push
aad
mov
in
cmp
or
lods
pop
arpl
incb
cld
lahf
mov
cltd
repz
cmp
jb
mov
jb
addr16
in
loopne
xchg
addr16
clc
push
aaa
ret
sbb
add
or
ss
adc
xor
mov
rcr
mov
fs
out
mov
mov
popa
or
dec
pop
imul
mov
jge
xchg
adc
scas
fnstsw
add
cmp
mov
mov
dec
inc
jae
push
inc
idiv
movsb
inc
mulb
scas
inc
test
mov
xchg
dec
sar
adc
adc
adc
adc
lds
push
movsb
aad
test
and
adc
outsl
add
clc
jbe
int3
xor
cmpb
decb
popa
nop
pusha
mov
out
pop
and
jb
jo
scas
lcall
jb
or
imull
lods
addr16
xorb
out
jmp
xchg
xchg
in
pop
negl
sarl
frstor
cmpsl
and
and
arpl
bound
movsl
cmpsb
aaa
neg
mov
nop
xchg
cmp
stos
push
and
aaa
clc
jp
pop
jle
lods
mov
outsb
or
pop
xor
pop
movsl
icebp
push
out
loop
loopne
pop
fildl
jne
cmpl
mov
fs
jnp
fcmovbe
mov
popa
insl
and
push
push
mov
dec
sub
cmp
push
fwait
dec
and
insb
mov
sbb
xchg
adc
lods
xor
sub
push
pop
jbe
fwait
popa
ret
inc
xlat
pop
mov
pop
sub
xor
sbb
push
add
add
dec
lods
sub
stos
inc
sti
push
out
shl
lret
mov
pop
adc
cmp
jp
pop
outsl
cmp
xor
add
popa
push
test
mov
adc
imul
test
arpl
mov
or
in
cmpsl
inc
jnp
inc
out
popf
mov
ret
repz
scas
fcoml
aad
inc
push
add
in
fwait
adcb
popa
jo
xorb
xor
out
ds
and
int3
cmc
cmp
xlat
sahf
iret
data16
mov
dec
pop
iret
sub
pushf
cld
gs
in
fidivs
out
or
push
fsubrl
xchg
gs
mov
push
jnp
cmp
fsubr
sub
scas
ja
jb
stos
adc
test
out
jmp
lahf
les
popf
daa
pop
mov
pop
adc
jne
mov
mov
scas
pop
fcoms
cmpsl
stos
enter
sub
sbb
sub
inc
outsb
enter
mov
push
xchg
push
xor
movsl
and
les
push
jae
cmc
sar
sbb
xor
int
gs
ljmp
xorl
mov
rol
jno
sub
les
fdivs
mov
test
enter
and
dec
in
jmp
sub
inc
and
jle
mov
inc
ljmp
pop
xchg
sahf
or
pop
roll
add
xchg
sub
stos
adc
ds
sbb
mov
int3
outsb
ljmp
inc
inc
jne
lahf
and
ja
sbb
ret
mov
inc
fcomi
cmp
sub
mov
mov
and
xchg
jg
ror
mov
jo
addr16
pop
inc
data16
shrb
aad
inc
xchg
add
mov
add
insb
xchg
aam
fnstsw
mov
cmp
add
ljmp
ds
incb
xchg
ss
idivb
divb
jae
pop
cmp
push
jno
xor
adc
nop
sub
ss
enter
fstpt
in
mov
xorb
cmp
adc
and
adc
xor
sbb
add
loop
jecxz
xchg
jnp
sub
jl
jg
dec
cli
push
cmpsb
sub
adc
repz
and
and
es
int3
jle
inc
aas
dec
mov
imul
outsl
dec
mov
nop
aaa
jmp
movsl
orl
push
les
dec
dec
pop
enter
push
mov
outsl
inc
jns
mov
cmp
xlat
test
bound
push
inc
dec
iret
jnp
pushf
jl
sbb
adcb
enter
fs
outsb
xchg
sbb
sub
loopne
jecxz
dec
sbb
sahf
or
jb
sub
add
scas
cltd
cmpsb
aas
lret
sub
adc
jnp
ljmp
fstps
movsb
xchg
in
and
and
push
push
ror
into
icebp
mov
or
sahf
add
bnd
push
dec
jmp
movb
mov
cmpsb
call
mov
and
mov
ret
imul
lock
iret
sbb
xor
roll
push
pushf
dec
ss
rep
shlb
or
cmp
in
cs
jnp
and
add
fldenv
shl
out
adc
push
push
add
jecxz
xchg
mov
adc
int3
or
js
test
mov
mov
out
testb
push
ja
adc
imul
push
fs
push
jecxz
and
sbbl
adc
ret
stos
test
daa
fidivrl
mov
pop
or
pop
out
or
cmp
push
mov
add
movsl
sub
fnstenv
jne
sub
stos
pop
mov
add
popa
nop
sub
daa
insl
push
fsts
sti
movsb
or
ja
fistpl
adc
add
push
dec
xchg
pop
adc
push
add
dec
int3
popf
inc
and
xor
adc
fmull
push
push
pop
movsb
jl
and
push
enter
xor
add
mov
ret
repnz
push
cmp
xor
sbbb
or
lret
stc
xor
cmp
inc
lds
or
mov
sbb
add
sbb
and
stc
shrl
fucomip
lret
ret
sub
jno
and
cmp
xchg
dec
faddl
sti
and
mov
mov
sbb
xchg
mov
mov
pushf
push
xorl
mov
notb
shrb
adc
in
popa
scas
and
mov
sbb
pop
xor
jle
addr16
xor
xor
jbe
or
and
sbb
pop
lret
dec
pop
sti
mov
in
mov
int
addb
dec
sub
sti
xchg
inc
xor
lret
push
cltd
jecxz
xor
push
lcall
xor
jnp
add
movsl
js
dec
stos
xchg
mov
xor
mov
mov
pop
incb
addr16
adc
pop
int
fidivrl
sbb
in
mov
xchg
sar
cmp
out
rclb
xchg
out
sti
mov
push
cmc
lods
xchg
frstor
sbb
mov
mov
or
inc
push
push
mov
shll
jmp
jp
into
mov
repz
aam
cld
insb
fdivl
jp
ret
int3
jns
out
into
loopne
cltd
enter
xor
add
ss
stos
sbb
std
fcoms
adc
ffree
dec
push
jbe
dec
jae
fdivrs
aam
inc
xor
adc
mov
cld
popa
cmp
sub
call
cmp
shrb
in
aas
and
cmp
push
or
sbb
jo
add
rolb
rcrb
aaa
incl
je
jno
cmpsb
mov
std
divb
adc
adc
and
movsl
inc
sti
mov
mov
lahf
pusha
fwait
imul
and
ja
add
arpl
int3
xchg
jmp
clc
orl
into
fcoml
xlat
in
stos
loope
and
xor
xchg
cmp
xchg
mov
bound
mov
dec
jno
xchg
rcr
pop
pushf
fdivrs
lods
test
sbb
out
mov
mov
sbb
mov
cmp
inc
mov
push
pop
test
add
add
and
mov
loope
push
movsb
iret
cmpxchg
cmc
rcr
and
loop
outsl
mov
push
xorb
or
sahf
pop
xor
cmpsl
divl
pop
std
or
inc
ss
xchg
mov
fwait
sar
xor
xchg
add
vdivpd
mov
ja
xchg
cmp
or
aas
aaa
aam
push
cmp
mov
bswap
adc
xchg
pop
ss
cmp
sub
in
out
push
pushf
in
lea
xchg
add
scas
addr16
xor
xchg
aad
nop
xchg
push
lcall
jbe
push
out
imul
cwtl
cmpsb
sub
push
mov
loopne
cmpsb
xchg
push
stos
xor
jnp
out
xchg
jbe
dec
icebp
lods
mov
repz
arpl
jmp
popf
lds
jp
and
rcrb
icebp
adc
xchg
in
lock
mov
jle
lods
ret
push
aas
loopne
and
adc
xchg
push
stos
iret
divl
adc
push
movsl
mov
std
cmp
out
popa
xor
dec
shlb
lahf
outsb
dec
push
add
adc
in
aam
mov
bound
add
inc
sbb
das
cld
dec
aas
sbb
mov
in
xor
push
xchg
push
int3
cmp
call
jno
sub
ss
arpl
push
mov
sbb
test
fists
popf
aaa
stc
or
mov
dec
xchg
cmp
int
repz
lea
jmp
mov
test
test
rolb
xchg
mov
push
pop
and
addr16
adc
aas
ret
cmp
pusha
mov
or
shlb
inc
mov
jg
movsl
xchg
add
leave
and
imul
adc
cld
jmp
inc
outsl
rcr
pop
cmp
add
push
ss
pop
loop
cmpsb
push
nop
stos
xchg
or
push
testb
popa
mov
pusha
pop
int3
pusha
add
xchg
xchg
mov
stc
or
mov
imul
cmp
lcall
cmp
adc
dec
adc
pop
sbb
stc
mov
movsl
xor
pop
test
rcl
mov
scas
pop
outsb
push
test
je
fwait
jo
andb
or
mov
pop
mov
sarb
cwtl
xor
mov
push
push
ja
push
pop
nop
xor
dec
movsb
dec
inc
sbb
jb
lcall
in
jnp
jmp
push
cmc
jne
and
push
sbb
sbb
mov
aam
or
js
cld
test
push
lcall
jne
out
sti
mov
inc
pop
ljmp
push
fstl
shl
mov
sub
push
ss
adc
pop
sti
xor
add
loope
pop
cmp
dec
cmp
mov
and
jge
dec
sub
xchg
or
imul
loop
mov
jp
fwait
lods
imul
jns
xchg
call
test
xor
cmc
mov
or
rclb
push
pop
loopne
dec
aad
pushf
shl
shl
cld
loop
pop
and
outsl
dec
pop
insb
leave
and
out
adc
sub
xor
shl
pop
push
loop
outsl
push
inc
shll
fdivr
xor
xlat
and
das
mov
roll
out
orb
iret
dec
es
sbb
nop
jmp
xlat
out
push
clc
mov
push
inc
data16
sbb
hlt
xchg
test
dec
push
ja
lcall
mov
sbb
or
adc
popf
popa
pop
cmp
lret
insl
int3
add
push
lods
es
sub
mov
fdivrl
lcall
adcb
leave
mov
lds
leave
xchg
push
test
repz
cmp
pop
inc
lods
add
decl
pusha
or
jns
mov
add
lahf
in
enter
pop
push
inc
jl
movsl
mov
imul
es
loopne
aam
mov
mov
jge
inc
data16
bound
cmp
lds
lret
mov
mov
push
xor
jg
sarb
iret
dec
repnz
subb
les
or
arpl
fisubl
sbb
lods
cmp
daa
inc
fld
xchg
jns
jp
jo
jl
or
fcmovnbe
leave
lret
fwait
xchg
xchg
and
movsb
addr16
sti
pop
jp
adc
in
and
xchg
aam
xor
insl
push
lods
movsb
adc
cmp
adc
sub
push
pop
add
insl
test
pop
sar
pop
jge
stos
mov
mov
lods
xor
lods
iret
mov
stc
sbb
or
xchg
jp
out
jo
out
sub
pop
daa
stc
dec
mov
adc
sar
movsb
in
mov
movsb
cmc
fldcw
pop
aad
pop
mov
cwtl
dec
cmp
in
and
mov
fisubs
jno
lea
pop
ss
cli
inc
mov
fs
ljmp
or
pop
pop
cmp
dec
pop
idiv
outsb
gs
mov
inc
js
loopnew
sarl
and
fwait
test
push
into
add
jno
popf
psubw
jg
nop
pop
inc
push
xchg
mov
mov
xorl
push
outsb
imul
mov
and
cmpsl
leave
jle
cmpsb
decb
cmp
fisubrl
imul
push
sbb
in
movsb
jb
pop
clc
inc
xchg
div
sbb
adc
jle
cwtl
push
dec
adc
push
push
adc
mov
cmp
imul
xor
sbb
adc
sub
xchg
imulb
leave
dec
cmp
inc
xchg
or
nop
mov
sub
push
inc
test
push
arpl
cmp
cli
fisubs
fs
mov
push
popf
dec
mov
inc
loopne
pop
sbb
test
mov
sub
sahf
leave
je
dec
xchg
cmpsb
push
adc
pop
push
dec
mov
cmp
pusha
cmp
xchg
ja
and
push
xchg
mov
mov
nop
arpl
inc
cs
or
ds
ret
push
add
or
push
movsb
repnz
add
push
and
fwait
lea
xor
or
add
add
lods
mov
lret
push
jecxz
lahf
lods
addr16
lea
repz
xor
pop
add
jno
fwait
pop
repnz
enter
pop
mov
or
sub
jo
fdivrl
or
adc
jl
or
pop
pop
ret
sub
xchg
ret
fnstenv
sub
push
mov
pop
call
iret
rcrl
out
test
scas
inc
sub
or
xchg
aaa
add
in
or
sub
in
scas
xor
adc
loop
inc
shlb
sub
mov
adc
pop
cmp
push
jmp
adc
popf
testb
add
xchg
lea
or
dec
ds
das
push
in
mov
jmp
xor
cmp
mov
cmovp
push
add
jmp
fcom
xchg
lea
icebp
xchg
sub
outsb
mov
movsl
mov
mov
sub
pop
or
fsubrl
jne
lcall
les
js
inc
movsl
test
mov
fbld
dec
mov
jp
jp
mov
cli
mov
mov
xor
jbe
ret
mov
and
xchg
push
int3
sub
imul
jl
lds
cmp
xor
ds
mov
dec
sub
sahf
jbe
in
call
sub
into
in
scas
je
pop
mov
in
gs
mov
push
xchg
add
into
push
fwait
cwtl
shlb
sub
mov
mov
pusha
notl
lret
jecxz
and
pop
sbb
arpl
and
mov
movl
jnp
in
sub
jp
test
push
clc
adcb
fcomps
inc
lret
xchg
sbb
mov
enter
ss
mov
fwait
incb
rol
rcll
arpl
sarb
push
inc
sub
cli
ljmp
ficompl
lret
mov
mov
out
cltd
pop
fistl
out
and
xchg
xlat
and
add
pusha
add
les
ficoml
aad
mov
lret
test
mov
mov
in
out
pusha
cmp
adc
jg
inc
aam
inc
or
dec
lahf
mov
or
lods
mov
dec
test
sahf
lods
xor
or
cld
ret
push
scas
or
test
lods
cmp
pop
cmpsb
inc
test
mov
fs
fnstsw
dec
in
mov
xor
push
add
mov
and
jmp
shll
aas
sbb
mov
jge
movsl
mov
bound
scas
xchg
inc
sub
pop
test
das
push
mov
pop
fidivs
pop
aad
movsb
sbb
stos
testl
andb
dec
scas
pusha
lret
push
sub
fs
orb
dec
test
inc
sbb
iret
jl
pop
xchg
add
and
cmp
movsb
loope
inc
add
sub
ret
insb
add
mov
push
sbb
fadds
mov
loop
enter
inc
cmp
out
sbb
test
inc
mov
xchg
mov
pusha
adc
sbb
ror
ficomps
ss
lret
lods
loope
push
sub
test
test
lcall
stos
bound
scas
outsb
xchg
imul
jp
jg
cmp
jnp
pusha
jge
inc
jno
xchg
inc
mov
aad
js
or
add
cmc
mov
imul
inc
mov
inc
jbe
push
jbe
int
add
cmpl
dec
dec
pop
cwtl
jne
xchg
xchg
cmp
aas
les
cli
lods
dec
ret
add
fcomip
cmc
sti
iret
fadds
mull
jg
mov
dec
xchg
movsl
into
pop
pop
mov
aaa
and
daa
and
cld
sbb
adc
pop
les
ss
pusha
cmp
out
in
scas
mov
sub
imul
mov
std
jb
xchg
sbb
scas
es
in
xchg
pop
cld
mov
fsubrs
lret
add
xor
inc
mov
cld
aaa
sbb
sbb
lods
add
push
rcrl
pop
sbb
adc
test
test
mov
pop
in
scas
hlt
push
es
cmp
stos
arpl
lret
and
xchg
xchg
lods
mov
mov
pop
or
out
outsl
adc
out
push
mov
mov
cld
jge
aaa
sbb
sub
pop
lret
push
mov
hlt
mov
shl
and
flds
push
pop
inc
cltd
push
shr
push
scas
mov
lods
mov
sbb
dec
out
mov
pop
loopne
mov
das
or
xchg
jb
push
jne
add
jge
in
mov
test
je
dec
aas
out
or
out
and
shl
push
mov
jmp
je
and
fwait
add
push
ret
mov
add
sarl
hlt
movsl
rol
sub
jno
xchg
fildll
mov
lret
cmpsb
xor
ret
mov
push
and
cmp
or
and
sbb
lds
subl
pop
in
xor
add
in
negb
scas
sub
imulb
mov
mov
es
rcll
jmp
clc
adc
cmp
inc
pop
add
mov
cs
mov
fldl
test
adc
sub
mov
push
xor
push
in
call
loopne
leave
and
in
cmpsb
test
add
and
cld
push
dec
in
jbe
cmpb
jb
mov
inc
push
sub
xchg
enter
addr16
dec
sub
bound
lret
and
repz
sarb
imulb
pushw
mov
hlt
and
pop
inc
mov
loope
pushf
jnp
mov
jle
add
pop
dec
cli
orl
cwtl
inc
cmpsl
pop
aaa
nop
out
fldenv
mov
mov
jno
push
inc
scas
mov
aad
std
mov
imul
in
or
push
mov
aam
pop
inc
ret
test
jmp
ja
jecxz
outsb
fwait
mov
mov
jmp
xor
lret
pop
dec
mov
lods
mov
sub
out
fcompl
pushf
int
jae
xor
adc
and
imulb
xor
add
xchg
cmc
imul
sbb
and
pop
pop
cld
insl
xchg
jmp
inc
popl
mulb
add
mov
in
dec
sub
arpl
push
add
ja
mov
and
mov
inc
pop
sub
std
jmp
pusha
movsl
mov
pop
bound
out
decl
and
inc
shll
cmp
pop
test
inc
mov
mov
cmp
cmp
cmp
lret
pop
xchg
sti
negb
cmp
fs
jg
add
popf
scas
dec
jae
mov
gs
sbb
ret
fistl
das
add
sarl
nop
dec
or
fists
mov
orl
cltd
push
dec
mov
push
sub
sub
inc
cmp
aaa
stc
push
push
adc
xchg
push
lcall
jge
fs
mov
mov
adc
pusha
adc
push
jno
xor
jle
movsl
jae
mov
mov
pop
shrl
in
fsubrl
icebp
pop
and
mov
add
nop
je
stos
xchg
data16
add
pop
add
mov
mov
or
fwait
lds
in
and
push
fiaddl
inc
outsl
sti
lods
outsb
mov
lods
mov
xor
jno
jmp
jge,pt
mov
data16
fmuls
mov
rcrl
mov
clc
or
andb
sti
cli
add
lret
mov
jp
fisubl
aad
fnsave
pop
inc
pop
xchg
cmp
icebp
popf
sub
add
push
push
rorl
fstpt
or
add
jbe
jmp
dec
push
int3
addb
adc
or
in
adc
les
and
sub
sub
cli
mov
es
lahf
mov
ret
iret
aad
dec
pop
pop
lcall
pop
outsb
inc
jmp
sub
jmp
jne
add
xchg
xchg
orb
xchg
mov
sbb
inc
and
out
cs
xchg
mov
subl
negl
pop
and
add
cwtl
cmp
xor
popa
sbb
popa
and
aas
hlt
cmpsb
and
adc
jo
dec
mov
leave
pop
scas
add
arpl
push
add
dec
aam
loop
out
ja
pop
out
mov
xor
inc
imul
xor
inc
inc
xchg
jbe
fsqrt
mov
in
int
leave
and
dec
sbb
mov
int3
xchg
push
sbb
lods
ja
cmp
mov
mov
inc
sub
stos
dec
xlat
rclb
sub
mov
dec
movsb
push
lcall
call
push
sbb
lea
cmp
fistpll
pop
mov
in
dec
cmp
addb
outsl
dec
lods
pop
test
hlt
arpl
inc
aas
xchg
rcll
xchg
push
push
xchg
pop
in
enter
pop
cmp
mov
xor
mov
jo
mov
add
nop
shlb
out
and
sbb
pop
or
or
nop
add
insl
lret
inc
add
push
movb
orl
addl
es
mov
loop
cmp
mov
inc
nop
shrl
mov
jae
imul
cwtd
push
enter
arpl
lock
mov
inc
nop
jp
push
imul
popf
mov
test
fs
adc
aaa
lods
ljmp
gs
in
push
cmp
adc
or
clc
add
aaa
xor
mov
and
ret
filds
jle
push
adcl
sbb
dec
inc
xchg
inc
push
jle
xor
cmp
mov
mov
lahf
cs
sub
imul
or
cmc
cmpsl
enter
mov
out
stos
jae
daa
mov
dec
aas
inc
add
push
jne
movsl
popa
inc
xor
ret
jg
mov
jmp
pop
mov
out
xor
jb
or
mov
aad
xor
fs
add
push
mov
rcrl
adc
jmp
mov
push
dec
jmp
push
cmpsb
add
pop
inc
jmp
ret
dec
gs
pop
xorb
cmp
shrl
mov
test
in
and
sub
mov
inc
jno
inc
daa
js
mov
test
or
sbb
mov
aaa
out
fwait
push
and
jge
sub
inc
xchg
xor
out
aad
inc
xor
sbb
mov
addr16
inc
iret
out
inc
ds
es
jae
cli
mov
mov
xor
jge
shlb
icebp
lock
push
cmp
mov
adc
mov
subl
mov
fs
mov
rorb
leave
sbb
inc
adc
xchg
int3
push
mov
xchg
test
icebp
hlt
push
adc
out
sbb
mov
adc
imul
sub
fsubr
sbb
mov
cmp
jno
cltd
pop
jl
push
dec
popa
loop
rclb
popf
and
jle
lcall
mov
test
ror
pop
and
push
jo
push
xlat
popf
mov
test
xor
movsb
xchg
inc
inc
imul
and
mov
push
loop
xchg
jbe
sbb
mov
movsb
cmp
and
sub
push
jecxz
roll
xchg
in
inc
loop
lock
xchg
cmpsb
push
xchg
roll
test
xor
mov
shll
xor
dec
sti
in
sbb
sbb
into
sbb
loope
or
xchg
dec
lret
pop
out
xchg
mov
out
fnsave
sbb
outsl
sub
adc
xor
bound
pop
jnp
iret
in
fstpt
push
cmpl
scas
xor
rcl
mov
into
inc
xchg
pop
fisttps
sub
orb
repz
inc
test
sbb
push
and
or
push
lea
mov
movsl
imul
xor
sub
mov
cld
push
sub
jae
icebp
fisubrs
sbb
sbb
aad
mov
push
pop
out
addr16
or
enter
and
fnstcw
pop
bound
mov
push
jns
inc
jae
inc
sbb
fwait
cld
insb
dec
jbe
ja
ljmp
popa
or
sbb
pop
xor
in
inc
mov
add
loop
cmp
es
sahf
add
test
push
hlt
call
adc
in
cli
push
ss
in
jecxz
xor
dec
lock
lcall
xchg
mov
adc
lcall
aaa
addb
jl
out
mov
adc
int
mov
mov
lods
xchg
cli
mov
adc
daa
shr
fistl
inc
mov
lea
in
shr
test
stos
jg
in
data16
stc
lock
jge
pop
lock
imul
cmp
movsb
jb
push
in
inc
adc
inc
mov
js
nop
rclb
and
sub
mov
cld
mov
push
xlat
mov
pop
test
ret
xor
lcall
sbb
std
sbb
das
pop
scas
outsb
xchg
cltd
cmc
aad
adc
pop
lea
pop
push
ss
subl
sub
add
pop
pop
add
pop
insl
add
es
scas
mov
cmpsl
dec
inc
lods
pushf
lahf
lock
rolb
loopne
jbe
cld
adc
add
xor
fnstenv
inc
add
pop
mov
ss
dec
out
daa
out
xor
stos
lods
clc
cli
cmp
push
lahf
in
cmpl
popf
push
jne
inc
sbb
fs
pop
data16
jmp
jo
xchg
ds
aas
jmp
lock
push
mov
sarl
sub
push
leave
jecxz
into
mov
jnp
mov
sbb
add
jae
lods
imul
dec
mov
notl
inc
sti
arpl
ds
fmull
xor
jo
mov
out
push
push
mov
cmpsb
push
subl
sbb
adc
jo
xor
xchg
jae
pop
jne
lret
into
sub
sub
imull
pop
imul
sub
xor
push
and
inc
pop
adc
stos
dec
inc
inc
cmpsl
xor
fnstcw
sub
je
or
and
cmp
xor
pop
or
mov
dec
xchg
lds
or
add
ds
ficompl
lock
mulb
dec
loopne
cmp
pushl
xor
jne
fs
in
jg
sbb
imul
push
add
push
es
jbe
and
daa
stc
xchg
dec
imul
push
decb
sti
mov
in
inc
jecxz
int
fsubl
adc
xchg
xor
rorb
stc
mov
addb
dec
subb
and
call
xchg
fnstenv
movsl
bound
add
and
ljmp
jbe
ror
pop
data16
and
adc
out
rorb
dec
inc
and
xchg
int3
xchg
ds
iret
push
mov
rcrl
ret
dec
adc
jae
test
and
divl
lods
push
mov
xchg
insb
dec
mov
xchg
mov
cs
mov
mov
mov
insl
fwait
js
adc
pop
xor
rorl
orb
and
push
mov
pop
lea
xor
dec
add
and
mov
pop
mov
scas
testb
out
stos
xchg
das
xchg
aad
push
xor
jae
arpl
out
sub
int
mov
and
push
or
out
nop
jne
mull
ljmp
cmp
repz
sti
lds
xchg
pop
jb
mov
jbe
ja
sbb
iret
cmp
mov
pop
xchg
inc
popf
lds
ja
std
cmp
rcrl
mov
mov
out
sub
pusha
cmpsl
fisubs
pop
lcall
movsb
aaa
dec
jle
or
or
pop
ficoml
mov
pop
pop
pop
sbb
cld
pop
mov
gs
sti
into
shrb
loope
fmull
dec
dec
mov
mov
pop
push
ljmp
jae
ficoml
xchg
xchg
sub
fisubs
movsb
vpsllw
add
cmp
mov
sub
out
loop
mov
cmp
adc
add
jns
mov
mov
movsb
outsb
jb
popa
int
xlat
add
fcomps
nop
add
aad
add
sahf
in
fwait
les
pop
clc
loope
scas
or
idivb
fst
add
adc
xchg
and
test
jb
pop
gs
sbb
gs
jle
loop
xor
into
test
adc
dec
pop
stc
mov
clc
jecxz
mov
mov
ret
and
andl
add
or
inc
mov
push
mov
jno
jg
call
mov
cmp
lods
dec
or
pop
dec
lds
cli
sub
fwait
push
or
or
sbb
add
iret
hlt
roll
lret
int3
inc
cmc
lcall
pop
inc
sub
add
jne
sbb
jl
add
or
xchg
scas
push
mov
out
jle
push
cmp
cmp
xchg
jo
xchg
scas
mov
cs
idivb
test
mov
dec
call
cmpsb
mov
popa
jo
icebp
ss
jae
out
test
inc
sub
push
jmp
roll
mov
sbb
call
ret
jl
dec
and
mov
cwtl
popa
add
dec
add
les
imull
subl
into
and
in
add
pop
gs
dec
xchg
shrl
mov
cmp
sub
push
je
mov
cmc
and
push
mov
pusha
clc
mov
push
inc
xchg
inc
jbe
mov
adc
mov
loope
shlb
sbb
insl
mov
inc
xchg
add
je
add
lcall
mov
sahf
cmc
push
mov
lods
lea
push
xchg
rclb
and
pop
xlat
mov
fbld
xchg
sbb
pop
hlt
mov
xchg
mov
add
or
loope
jecxz
mov
adc
wbinvd
or
es
call
shlb
mov
pop
mov
pop
pop
in
cmp
test
aaa
aad
jnp
fildll
push
adc
nop
sbb
loopne
inc
pop
loopne
outsb
mov
dec
dec
minps
stos
sub
daa
lret
hlt
pop
lcall
cld
stos
mov
clc
pop
ret
sti
pop
push
add
mov
es
mov
xor
jmp
je
clc
push
out
cwtl
aaa
jecxz
add
adc
in
jp
in
pop
cwtl
js
mov
mov
pop
rorb
push
mov
rorl
imul
jmp
adc
inc
jns
in
push
inc
mov
inc
mov
loope
push
aas
or
xor
mov
mov
sbb
xchg
ret
or
sbb
sbb
jp
jbe
jmp
repz
out
jae
and
fcmovnb
jle
es
dec
sahf
imul
icebp
or
sub
and
sbb
repnz
cmp
dec
push
jl
mov
pop
or
and
mov
stos
aad
adc
cmpsb
cli
test
or
int3
dec
xor
out
jns
jo
cmp
bound
jge
nop
mov
xadd
ja
xchg
xor
or
dec
push
popf
aaa
aaa
adc
push
push
outsb
sbb
ret
push
fptan
les
jmp
push
sti
adc
lds
sub
lret
in
in
fwait
sub
clc
cmp
push
adc
xchg
mov
mov
sub
mov
aaa
sbb
ffree
out
adc
sbb
mov
shlb
addl
adc
in
xchg
arpl
insb
jae
cld
push
inc
out
cmp
scas
pop
xor
xchg
jg
jmp
lock
push
dec
jp
and
xchg
and
out
xchg
mov
pusha
mov
or
sub
fidivs
test
in
es
nop
notb
or
cmp
ret
repz
js
rcrl
pop
jmp
lcall
sbb
mov
pop
xor
stc
es
pop
mov
lds
lds
mov
lea
in
clc
cmc
mov
enter
pop
add
out
fs
loop
dec
and
add
pop
and
loope
cmp
mov
add
xorl
push
cld
cmp
arpl
dec
jno
or
sahf
and
orb
insb
jns
fnstcw
aam
fs
cltd
jne
es
test
sbb
fwait
int3
pop
mov
fs
mov
cmp
dec
icebp
in
add
fisttpll
cmc
xor
mov
jmp
pop
adc
or
call
jecxz
outsl
push
push
mov
xor
shlb
dec
cli
ja
lods
add
lret
and
xor
ret
xchg
adc
fstpt
cli
lret
int
leave
lret
cwtl
movsb
cmp
jne
in
and
pop
fucomp
mov
rcrb
adc
out
sti
push
imul
or
inc
hlt
sub
jno
push
pop
add
mov
mov
imul
in
sahf
dec
pushf
cmp
jge
fidivrl
mov
aam
cmpsl
or
lods
pop
xchg
into
pop
jg
movsb
sub
pop
mov
mov
add
dec
cld
lret
xor
in
negl
pop
repnz
inc
sub
mulb
adc
mov
fiaddl
addr16
sub
jae
jns
mov
testl
dec
in
movsb
lods
not
dec
rcrl
push
push
out
and
aam
shl
jge
inc
loope
es
jns
fnstenv
and
jg
pop
cmp
sub
shll
push
inc
scas
dec
mov
xor
push
mov
sarl
mov
insb
pop
movsb
jecxz
lock
test
inc
mov
stos
sub
jns
cmp
div
pop
fsub
and
subl
cld
repnz
or
jl
pop
bound
dec
ret
lcall
clc
jp
fwait
out
inc
lds
pop
rcrb
adc
mov
cld
xor
xchg
jp
pop
pop
or
flds
lret
ret
adc
push
push
fsub
loop
add
js
fbld
inc
call
sti
jo
pop
and
mov
jmp
sub
lds
or
push
cmc
push
test
mov
out
lock
pushl
push
push
xchg
mov
jns
adcb
dec
cmpsb
das
lock
and
mov
inc
ljmp
or
ret
in
xchg
dec
ret
jle
outsl
shl
adc
std
adc
or
cld
repnz
jl
insl
xchg
mov
loop
jmp
xor
jbe
xchg
std
leave
cmp
insb
into
in
fcompl
sti
aam
xor
cs
xchg
jae
mov
lahf
and
sbb
mov
sbb
lds
pusha
cmc
push
mov
flds
imul
pop
xor
jo
in
pop
sub
sti
cmpl
and
outsl
sbb
xchg
lahf
jp
mov
cmpb
daa
stc
out
sbb
out
mov
pop
jge
xor
in
add
leave
mov
fldcw
iret
lea
mov
rol
rcl
lcall
fstps
ret
ds
aas
pop
xchg
push
jl
lea
test
xchg
cmc
cmp
mov
mov
push
or
ret
mov
scas
xchg
mov
add
int
test
ja
shlb
test
or
sarb
imul
addr16
push
push
sbb
ds
cmpsb
cmpsl
aam
stc
fildll
jnp
push
mov
push
sub
icebp
int3
dec
incb
sbb
mov
insb
es
sub
inc
sarl
not
test
imul
push
inc
aam
shr
ret
cmp
negb
fiadds
xor
sub
pop
fdivl
add
push
outsl
mov
mov
or
mov
add
enter
imul
xchg
dec
jl
xchg
fdivrs
mov
jno
and
mov
inc
cmp
repnz
in
test
loopne
mov
push
je
jg
cmp
mov
jnp
nop
and
xlat
test
adc
enter
rcrl
jge
int
add
rcll
push
std
and
pop
sbb
xchg
test
out
repz
sbb
lock
pop
cmp
lret
cmp
fstl
and
movsb
dec
lods
movsb
shll
xor
cs
xor
pop
lahf
cmp
clc
in
imul
cmpl
xor
insl
in
xchg
pop
dec
inc
loope
cmc
test
ret
in
sub
pop
fcoms
jg
fimull
enter
ljmp
ficoml
test
sub
or
xchg
push
sbb
sub
xchg
cmp
imul
pop
ss
out
push
jg
push
and
andb
cmp
cli
xchg
pushf
out
sbb
stc
push
gs
adc
sbb
inc
xlat
loop
and
sahf
xor
arpl
cmpsb
popf
out
bound
adc
fldenv
cmp
push
mov
ss
imul
mov
aam
push
pop
stos
push
jecxz
mov
jl
mov
add
jne
xor
scas
lret
addb
push
jl
xchg
js
mov
inc
sbb
mov
xchg
imul
repnz
jbe
sub
jne
push
or
mov
sbb
mov
test
loop
cmp
xor
scas
sub
cli
pop
pop
add
mov
add
negb
pop
fsubrl
int3
xchg
pop
xchg
sbb
xchg
jge
inc
and
mov
jbe
fldenv
push
clc
popa
movsb
orb
mov
sbb
stc
dec
add
sbb
adc
sbb
jle
pop
insb
cwtl
pushf
outsb
scas
clc
sbb
sbb
mov
stos
pop
ret
xchg
aaa
shl
add
jge
push
sbb
jg
xor
inc
leave
mov
mov
xchg
pusha
ja
test
mov
mov
mov
out
stos
test
sahf
push
or
mov
adc
xor
jno
dec
jmp
scas
inc
mov
je
sub
test
add
sub
pause
ret
adc
push
add
fsubrl
ficoml
insl
outsl
test
gs
bound
xchg
fdivrp
mov
cmc
dec
add
dec
movsl
test
lret
leave
jne
stos
fwait
in
xor
mov
inc
fistpl
ds
sete
dec
pop
or
js
gs
loopne
pop
ror
jbe
jno
jmp
jecxz
dec
lcall
inc
mov
leave
mov
je
xchg
fidivrl
into
mov
popf
fcom
cwtl
stos
fcom
pop
out
outsl
call
stc
stc
je
or
cmpb
push
and
mov
inc
ficomps
xchg
or
jb
or
fs
or
repnz
inc
mov
jmp
inc
lock
loopne
addr16
pop
sbb
movsl
push
les
test
mov
sbbl
aas
jns
dec
mov
cs
mov
loop
imul
xchg
ljmp
dec
out
aam
pushf
shrl
mov
imul
jnp
dec
out
pop
cwtl
cld
mov
sub
pop
lods
movsb
add
jmp
pop
ss
pop
iret
dec
aam
nop
and
sbb
fidivrs
mov
imul
cld
push
pop
adc
lods
enter
jo
shr
cmp
movsb
sub
fwait
imul
pop
lret
inc
subb
push
sbb
jge
jae
sub
xchg
inc
mov
in
sub
dec
mov
mov
cmc
add
pushf
sahf
gs
fbld
leave
push
push
adc
lods
fucomi
adc
sbbb
sbb
xchg
jo
fistpll
cwtl
fbld
cltd
add
int
sub
leave
adc
cli
mov
adc
dec
mov
sub
dec
rcrb
lret
inc
shll
iret
sub
mov
ficoml
pusha
push
pop
std
out
mov
inc
les
xchg
lret
es
popa
or
daa
ret
fcomi
jbe
hlt
std
mov
jno
mov
xorb
std
lea
leave
popf
xchg
jge
cmpsb
sub
mov
pushf
mov
push
out
push
xorl
in
shll
push
sti
adc
outsb
dec
jns
dec
xchg
scas
mov
scas
pop
mov
sbb
mov
jb
scas
add
jbe
adc
push
mov
loopne
pop
fidivl
scas
incl
jmp
ds
inc
in
xor
pop
mov
subb
loopne
adc
cmp
ja
mov
sub
adc
in
mov
int3
pop
ficompl
stc
cmp
inc
dec
lock
aam
or
lods
int
mov
icebp
mov
cmc
xchg
adc
inc
movsb
mov
dec
jg
rcrb
and
out
repz
xchg
mov
test
test
cmp
pop
in
pop
jg
jae
mov
lods
sbb
and
mov
test
nop
cltd
into
mov
nop
cmp
stos
shrl
sub
jnp
shl
jne
adc
aad
roll
add
cltd
sarl
das
jb
mov
lea
xchg
bound
insl
or
add
push
dec
lret
pop
add
inc
inc
jmp
cmp
loop
add
testb
adc
sbb
sub
xor
mov
bnd
mov
rcr
nop
push
push
insl
dec
inc
push
cmp
shl
add
push
bound
ss
push
out
dec
in
add
xchg
push
in
lds
mov
dec
ja
insb
jb
daa
cmp
mov
xlat
inc
lea
sbb
insb
adc
fldl2e
scas
insw
push
inc
test
shl
push
das
pop
mov
jecxz
or
adc
mov
popf
xchg
ljmp
pusha
or
push
mov
mov
jns
mov
lods
adc
in
jecxz
iret
push
iret
and
push
sarl
xor
jo
imul
fimull
mov
cmp
adc
mov
pop
fcoms
mov
notl
stc
jnp
push
icebp
xchg
push
ret
push
pop
ljmp
cmp
xor
loope
imul
push
xchg
xchg
bound
add
imul
test
pushf
testl
negl
push
out
shll
adc
and
aaa
dec
sbb
ljmp
dec
or
dec
dec
std
xchg
je
jb
push
jg
inc
repz
fs
stos
ja
jae
mov
cmpsb
addr16
mov
add
and
test
bound
jge
push
lods
in
aad
xlat
das
pop
repnz
adc
jae
int3
daa
push
outsl
jp
stos
cs
or
stos
leave
inc
xchg
pop
inc
dec
hlt
mov
pushf
sbb
mov
adc
sbb
xor
addr16
xorb
imul
mov
xchg
xchg
sub
mov
or
mov
push
jge
fildll
aas
repnz
popa
fcompl
cmc
mov
mov
jns
ljmp
mov
sbb
push
repnz
jb
mov
pop
imul
fmuls
popf
fistpll
mov
sub
add
or
xchg
mov
sub
and
mov
fwait
arpl
pushf
call
idivb
dec
rcl
push
sbb
aaa
ffreep
pop
scas
and
dec
pop
xchg
mov
dec
js
dec
lcall
and
push
pop
dec
push
pop
pop
jmp
jp
mov
push
and
ret
lret
cwtl
rclb
add
sub
sub
dec
mov
cmc
fisttpl
inc
and
je
dec
movsb
cmp
lods
jecxz
mov
jb
mov
cmp
jo
mov
ljmp
cmp
leave
cmp
int
sbb
mulb
xchg
repz
rorb
into
mov
ret
mov
cmpsl
inc
inc
jno
xorl
rolb
jecxz
rcl
xor
repz
loope
lea
lea
je
insl
loop
jmp
sbb
jne
adc
out
add
outsl
dec
out
shl
push
jae
mov
pop
rorl
mov
aaa
stos
xor
mov
pop
cmp
adc
dec
fidivrs
movsl
dec
dec
ds
cmpb
inc
popa
outsb
jmp
lods
push
push
out
xor
scas
push
mov
ds
loopne
lods
dec
cmpsl
pop
and
cld
inc
outsb
imul
fwait
iret
or
mov
xchg
dec
pop
loopne
sbb
add
jno
xchg
pop
mov
cwtl
int
sbb
pop
movsb
scas
out
lods
adc
leave
fucom
mov
pop
jle
icebp
mov
mov
mov
repnz
test
sub
insl
or
push
mov
and
push
iret
adc
jae
mov
pop
xor
lock
jg
loope
lcall
sub
popl
popa
je
popf
add
insl
mov
adc
mov
mov
je
mov
and
je
push
je
arpl
push
xor
mov
mov
pop
cwtl
mov
imul
fidivrs
cmp
cmp
add
dec
xchg
xor
les
cli
dec
sbb
out
xchg
or
jmp
xchg
mov
jbe
rcrl
push
mov
add
andb
mov
lret
jp
sbb
mul
fisttpll
cwtl
xchg
push
sub
cmp
xor
sub
movsb
sub
mov
cmp
add
add
jnp
push
divl
adc
add
jle
or
das
add
int
add
cli
scas
mov
int3
divl
sahf
les
fistps
mov
aad
nop
mov
in
divl
pop
dec
scas
lock
pop
dec
in
sbb
mov
cmc
xor
daa
jecxz
xchg
push
mov
cwtl
xchg
or
test
push
pop
inc
icebp
jmp
cmpsl
jle
pop
dec
decb
sbb
js
add
cmp
dec
sub
int
xchg
mov
push
sbb
mov
dec
sbb
divl
int
test
in
rclb
addr16
lret
int3
and
lret
aas
inc
dec
movsl
mov
nop
lds
repnz
inc
mov
cmpsl
stos
in
push
ja
xor
subb
mov
pusha
mov
rcrl
jbe
fidivs
sub
lahf
sub
mov
pop
jnp
loope
enter
jge
ss
dec
jmp
inc
mov
ljmp
and
mov
es
insl
loop
pushf
pop
popa
push
and
imul
les
movl
mov
sbb
loope
inc
mov
mov
and
adc
xor
addr16
shl
mov
outsl
inc
testl
pusha
sub
add
outsb
lahf
cmp
or
xchg
fwait
adc
addb
fsubl
push
push
pushf
xor
mov
arpl
jl
mov
sti
das
fsubrp
and
or
shrl
xchg
jmp
cld
mov
mov
push
das
insb
push
ds
add
adc
hlt
in
scas
mov
mov
call
pop
pop
add
or
lret
insl
cmp
sbb
out
mov
dec
mov
gs
cmp
jecxz
push
nop
sbb
push
lods
sbb
sub
cmpsl
sbb
dec
out
loop
rcr
mov
xchg
mov
add
jno
ss
and
aam
pop
jbe
jmp
into
mov
loope
and
cld
mov
arpl
mov
sbb
xor
jge
int
shl
cli
in
lods
fstps
cs
add
les
decb
mov
imul
shrb
cmpsl
mov
lea
call
xchg
jl
test
adc
into
pushf
lods
push
cmp
pop
pop
lret
andl
ss
out
btcl
fcompl
cli
or
xor
into
adc
mov
out
xchg
shl
lret
popf
pop
xchg
loope
mov
and
pushf
mov
into
das
jo
cmp
shl
pop
fucomp
or
and
addr16
insb
cs
subb
xor
bound
cs
dec
lods
iret
mov
mov
mov
mov
sbb
sub
cmpsl
push
rclb
stos
push
mov
iret
sbb
or
sbb
pop
push
xchg
loopne
addb
xchg
mov
pop
push
int3
stos
xor
scas
pusha
inc
lret
mov
adcl
pop
repz
pop
cmpsb
flds
mov
nop
arpl
inc
aas
popf
and
mov
push
in
dec
dec
mov
or
dec
dec
out
in
add
aam
sti
sbb
ficoms
adc
jge
mov
adc
and
dec
push
je
insl
push
xchg
loop
inc
inc
inc
cmp
xchg
cmc
and
push
pop
push
fistl
inc
sbbl
pop
mov
sub
xchg
pop
jo
cmpb
int3
aad
dec
lahf
inc
xchg
sahf
xchg
pop
pop
inc
or
lea
dec
iret
pop
pop
xchg
push
hlt
lds
add
insl
xor
add
add
push
inc
cmp
and
dec
or
test
push
rolb
mov
jno
inc
mov
sub
push
lock
adc
js
mov
xchg
dec
rep
sub
loop
and
int
mov
fwait
in
outsb
xor
xor
notb
pusha
aad
sarb
push
enter
repnz
jbe
add
sbb
mov
mov
outsb
xchg
or
mov
mov
and
call
ljmp
bound
pop
sbb
repz
xchg
cmc
lcall
rorb
lods
and
add
ror
test
cmp
in
in
add
int3
cs
fincstp
jns
xchg
bound
scas
out
sub
sub
jbe
or
push
mov
mov
scas
xor
test
call
cli
dec
sarl
mov
mov
daa
mov
push
pop
push
cwtl
jns
pop
subl
lcall
push
mov
cmpsl
int
push
mov
pop
push
dec
insb
call
xchg
lods
jl
lock
sub
nop
cmpsl
dec
out
cmp
sti
push
clc
lea
xor
stc
sub
xchg
ret
xor
or
jb
jae
inc
jg
fisttpll
data16
mov
push
movsb
inc
add
jl
insb
jl
jno
cmp
fucomp
push
cmc
in
push
add
fiaddl
out
into
sub
jo
add
movsl
out
push
mov
ret
push
stc
jp
mov
sub
or
lret
xchg
xchg
negb
jg
out
xchg
mov
stos
popa
dec
push
outsb
ret
mov
mov
sub
inc
call
lahf
jmp
and
ret
mov
aaa
xlat
repz
jecxz
cmp
cmp
pop
and
add
lret
dec
jno
mov
xchg
rorb
pop
push
and
push
out
adc
pusha
dec
jecxz
mov
popa
push
cs
jmp
mov
in
mov
xchg
adc
popf
mov
or
aas
outsb
test
cwtl
pop
sub
pop
into
mov
les
jb
cmp
jae
imul
inc
scas
inc
pop
pushf
xchg
adc
or
mov
inc
loopne
xchg
adc
and
repz
fdivr
gs
in
mov
lds
jge
and
mov
int
mov
rcr
mov
pop
xor
imul
or
aad
jo
mull
xlat
testl
in
aas
es
cwtl
sbb
mov
insb
pop
xor
hlt
mov
stos
gs
xchg
insb
push
mov
xchg
dec
jle
inc
dec
mov
call
fdivp
pop
sbb
sbb
jle
and
xor
sub
mov
dec
cmp
mov
xchg
cli
push
aas
cmpb
std
jle
sbb
fdivrs
repnz
pop
cmpsb
and
sbb
push
jecxz
sqrtps
sub
or
mov
stos
clc
arpl
shrb
push
push
jns
or
push
inc
dec
cs
add
popa
rol
cwtl
cmp
lcall
out
dec
or
mov
lcall
xchg
mov
aas
pop
mov
mov
idivl
add
ss
cmp
movsb
out
test
fdivp
int
ljmp
push
popa
ljmp
cmp
dec
movsb
push
fmul
loopne
fdiv
pop
add
or
popf
inc
cmpsl
ficomps
xchg
lcall
adc
aad
fbstp
mov
loop
shrb
ss
dec
arpl
cld
sub
add
lods
push
iret
or
idiv
or
pop
push
cmpl
mov
inc
mov
mov
fidivrl
or
or
cltd
add
xor
xchg
inc
imul
cs
mov
dec
bound
sbb
add
and
int
ret
inc
fcoml
aas
addr16
enter
stos
cmpsl
test
cmp
outsl
push
lret
outsl
lods
shl
sub
pop
adc
test
pmulhuw
adc
in
ror
dec
add
mov
int3
sbb
cwtl
mov
push
cmp
ljmp
fcompl
movsl
mov
add
jl
popa
xor
adc
add
popf
jne
pop
jl
jbe
lock
mov
cwtl
mov
movsl
mov
cmpsb
push
push
xchg
xchg
push
out
add
mov
inc
shlb
inc
dec
jge
add
inc
out
cmp
js
or
mov
inc
inc
push
xchg
or
xor
cltd
adc
cs
stos
imull
or
push
enter
shrl
add
loop
push
push
and
shll
out
test
and
mov
sti
ret
mov
frstor
sub
in
dec
mov
mov
pop
adc
pop
imul
bound
add
xchg
popa
ret
test
int
imul
mov
or
div
or
dec
sbb
or
stc
mov
or
push
loop
out
sbb
jne
data16
mov
inc
fistpll
testl
pop
orb
xchg
fwait
sbb
leave
add
nop
sub
cld
das
clc
dec
mov
push
jle
cmpsb
cwtl
or
add
mov
and
insl
and
cmp
jbe
arpl
adc
xchg
mov
popf
pop
in
cli
push
add
ja
orl
dec
push
xchg
outsb
push
fs
addr16
stos
cmp
dec
loopne
movntq
out
cmc
adc
jp
stos
jb
bound
sahf
adc
sbb
push
dec
push
xor
push
pop
xor
stos
lods
sbb
stc
fldcw
aas
dec
pop
and
xchg
xor
sti
and
cmp
lahf
adc
inc
inc
repnz
popf
adc
jne
in
notb
lock
lcall
sub
imulb
lods
cmp
xor
fiadds
jg
xor
add
popf
sub
add
fistl
pop
and
mov
popa
mov
xor
lret
mov
in
dec
mov
cmp
jmp
into
ret
mov
mov
sarl
adc
shll
and
scas
lods
je
adc
movsl
jns
pop
loopne
mov
pushl
es
or
dec
xchg
aas
xchg
sub
icebp
lods
mov
jbe
push
xor
mov
xor
iret
dec
dec
and
adc
sub
std
pop
mov
lea
out
subl
sti
aas
outsb
fldt
xchg
adc
in
fisubrs
mov
cmp
nop
push
repz
sub
mov
or
sbb
add
scas
xchg
dec
pop
bound
stos
imul
test
cmpsl
popf
fcmovnbe
add
mov
pop
pop
pop
std
add
loop
in
jbe
mov
gs
bound
and
pop
adc
mov
xor
dec
stc
dec
pop
jle
dec
mov
adc
rclb
xchg
aad
mov
add
stos
rclb
jp
shrl
out
bound
jb
repnz
int3
push
ficomps
roll
imull
dec
ljmp
push
and
push
add
repz
mov
fdivr
repnz
mulb
add
inc
jb
pop
and
dec
out
jmp
test
and
imul
mov
push
stc
sbb
jmp
and
lret
jmp
push
insb
fstl
and
imul
les
or
andl
dec
inc
lea
ds
cmp
insb
mov
mov
cmp
xchg
push
jne
sub
sbb
or
pop
scas
push
mov
mov
gs
out
aad
dec
cmove
mov
cli
dec
xor
sbb
dec
jo
je
mov
mov
jecxz
add
inc
movsb
jge
add
enter
imul
fldt
cs
fstps
add
inc
xor
stc
repz
std
mov
sub
sbb
ret
xchg
lcall
into
and
mov
mov
jb
cmpsl
jnp
outsl
mov
xchg
leave
xchg
xchg
cmp
outsb
test
fs
inc
mov
test
imul
jmp
jge
insl
sub
mov
sbb
iret
movsl
mov
and
out
xchg
pop
add
out
outsl
out
jg
rcrb
push
scas
flds
sub
int
lods
push
dec
in
dec
fnstsw
ficompl
mov
mov
sbb
les
js
out
cmp
pop
xor
sub
sbb
insl
nop
pop
xchg
aam
push
xchg
and
popa
test
inc
int
insb
scas
mov
stc
mov
fnstsw
lret
inc
frstor
cmp
mov
pop
dec
mov
inc
faddl
jl
call
movsb
or
pop
andl
sub
stos
inc
adc
sbb
dec
popf
inc
movsl
mov
cmp
fdivrl
pop
inc
jmp
sahf
in
ljmp
push
ror
xor
mov
add
dec
mov
rorb
ds
pop
or
mov
mov
popf
idivl
sub
mov
leave
pusha
sub
sbb
sahf
aas
cmp
mov
xor
inc
rcll
mov
adc
fsubrs
pop
mov
inc
and
dec
adc
xchg
xor
dec
int
pop
xor
jp
cltd
insl
lock
dec
mov
adc
aam
xchg
mov
adc
or
ja
mov
into
je
mov
jbe
push
lahf
mov
pop
cld
std
dec
push
xchg
cwtl
mov
pop
dec
into
jb
xchg
bound
mov
aaa
xchg
es
shrb
outsl
jle
lcall
adc
or
ret
iret
es
mov
jl
imul
fnstenv
cwtl
pop
pop
je
xchg
test
mov
and
ret
cli
pop
scas
movb
cltd
dec
imul
ljmp
inc
popf
xor
xor
xor
movl
shll
jnp
pop
xchg
push
xchg
pop
jb
ret
xor
sbb
imull
adc
popl
cld
dec
inc
out
xchg
out
stc
rclb
call
popa
cld
mov
push
gs
rol
mov
mov
jnp
leave
rcrl
imul
sub
mov
xchg
xchg
mov
std
dec
test
std
lods
cmc
adcl
add
std
addb
jnp
arpl
pusha
out
les
inc
add
inc
loop
loop
add
mov
je
ret
push
pop
cmp
aas
sub
rcll
adc
push
rorl
in
pushl
sub
mov
mov
and
push
xor
test
push
add
nop
adc
jnp
pop
mov
pop
nop
sysexit
add
adc
mov
sub
mov
lods
les
pop
cmp
imul
pop
sbb
cwtl
mov
outsl
adc
shll
sub
cltd
push
xor
mov
call
xorl
pop
jge
mov
inc
test
mov
fwait
cld
jge
pushf
xchg
add
mov
fcom
ds
ret
push
popf
stos
stos
cltd
adc
sub
adcl
jb
cmc
rol
sbb
scas
push
lea
or
ljmp
popa
push
cmp
test
add
xchg
push
push
gs
adc
cmp
ficomps
pop
inc
popl
mov
and
pushf
dec
mov
pop
rclb
xor
mov
push
data16
cwtl
sti
dec
xchg
in
adc
cltd
inc
push
cltd
lahf
mov
stos
dec
out
arpl
loop
push
dec
mov
jge
dec
xchg
dec
fisubrs
xchg
inc
sbb
add
mov
insl
je
sti
dec
and
cmc
stos
roll
cltd
sub
aam
arpl
fisubl
push
rol
add
xlat
sahf
in
inc
or
xchg
fsubr
fdivl
popa
cmp
std
loopne
or
lods
dec
fadds
mov
loopne
imul
incl
mov
rcrl
add
xorl
xchg
out
inc
les
jnp
scas
int3
loopne
or
scas
mov
xchg
push
xor
mov
sub
pop
xor
jle
loop
call
inc
lahf
mulb
lods
or
push
rorl
mov
sbb
add
rclb
aaa
iret
and
cwtl
jp
or
rclb
repnz
dec
into
push
std
push
mov
dec
or
les
aas
insb
loopne
push
aad
out
test
js
mov
dec
ret
aam
sbb
mov
dec
out
shrl
bound
je
xor
mov
ss
insb
movb
fprem
inc
pop
jmp
sub
scas
jmp
add
cmpsb
adc
jnp
repz
jbe
or
mov
insl
mov
aam
jb
or
adc
jno
ds
jl
imul
lods
sarl
popa
dec
je
xor
pop
xor
and
mov
loop
and
and
xor
mov
mov
push
int3
xchg
mov
pop
insb
sbbb
punpckhwd
xor
mov
pop
repnz
lcall
push
xchg
shr
in
iret
imul
rolb
sahf
jle
push
getsec
add
lret
imul
pop
mov
jl
data16
jle
fsubl
jmp
outsb
mov
int
repnz
adc
lcall
mov
pusha
cwtl
daa
in
jmp
xor
xchg
daa
mov
jl
sbb
xlat
into
lods
sti
ja
loop
sahf
int
inc
hlt
xor
out
js
inc
ja
rorl
jmp
dec
mov
sub
pop
loope
add
hlt
cwtl
mov
shl
aam
or
mov
push
cs
jnp
imul
push
in
movsl
inc
decl
fsubrl
xor
ret
popa
sub
mov
inc
pusha
add
sub
imul
sbb
sbb
lahf
out
cltd
sbb
popf
adc
lods
movsb
dec
mov
inc
aaa
outsl
pop
jle
pop
mov
adc
fwait
xchg
or
insb
sahf
dec
outsb
lods
jb
jmp
adc
jbe
lods
inc
pop
out
jl
adc
orl
pushf
jno
lock
lods
xlat
ds
aas
inc
jnp
aam
push
push
enter
pop
inc
test
add
push
jmp
and
pop
jb
sub
in
imul
imul
cwtl
cmc
sti
add
push
sbb
pop
insb
data16
sarl
ljmp
ret
mov
mov
xchg
jl
and
or
les
pop
repnz
data16
ret
adc
filds
xor
lds
test
sbb
pushf
cmp
aam
add
lret
and
xchg
sub
cs
sub
stc
pop
stc
gs
lret
je
out
xor
xchg
out
jno
clc
push
test
xor
mov
lea
pop
ss
shll
mov
iret
mul
lds
cmp
jmp
mov
dec
ja
stos
xchg
arpl
sarb
push
sti
ficoms
xor
insb
inc
lods
ja
test
cmp
stc
mov
out
dec
inc
test
fmuls
or
or
adc
add
inc
xor
je
jnp
sub
aas
sub
leave
lds
sbb
pop
in
xchg
xor
sub
fwait
jo
xchg
cltd
inc
mov
das
xor
push
lahf
aam
push
mov
sub
sahf
cmp
in
cmp
inc
sub
clc
call
das
pop
cs
in
pushl
pop
or
dec
imul
inc
fstl
xchg
jo
inc
sub
mov
lds
inc
dec
mov
inc
mov
jne
rcll
dec
push
loopne
push
jbe
lret
pop
xor
outsb
lcall
jo
dec
shll
ja
xor
lods
loop
xlat
rorb
fildll
push
cmp
ljmp
ds
mov
sub
icebp
es
iret
imul
xchg
mov
cmp
dec
ja
lahf
loop
stos
mov
pop
cmp
outsl
rcl
nop
push
jnp
xchg
push
sbb
xor
js
or
loope
xchg
aad
fwait
mov
sbb
or
pop
insb
fstps
bound
push
cli
mov
sub
out
lock
xor
inc
mov
pusha
rcl
sub
int3
jecxz
mov
es
xor
jp
bound
aad
lea
mov
frstor
movsl
sarb
adc
or
jmp
sbb
mov
es
fisubrl
cmpsb
cmpb
add
mov
arpl
mov
ficoml
mov
sub
push
out
xchg
mov
lea
or
jnp
rcrl
std
cmp
mov
pop
lock
pminub
push
dec
aas
add
adc
in
jle
mov
cltd
lahf
cmc
cmpsb
mov
or
sbb
dec
sbb
xchg
sbb
xor
mov
jb
hlt
xchg
or
outsb
inc
inc
mov
shll
mov
loop
cmpsb
jns
pop
clc
add
enter
sub
fisttpll
lods
sbb
ss
jbe
mov
dec
ja
hlt
jecxz
ljmp
push
test
cmpsl
cwtl
shll
jae
sbb
addr16
dec
scas
shll
int
hlt
insl
dec
pushf
lods
sbb
in
mov
mov
sub
cwtl
pop
les
cmpsl
pop
jle
xchg
je
mov
repnz
jmp
lods
xor
dec
xchg
push
mov
pushf
es
pop
notl
outsl
stos
pusha
and
or
pop
mov
jecxz
mov
out
nop
test
cmp
push
inc
add
or
std
les
outsb
fdivl
and
scas
or
cmp
or
mov
or
sub
mov
push
cmpb
mov
fwait
sub
lret
int3
cmp
inc
and
lcall
xor
push
pop
sub
mov
test
jmp
les
xor
or
jmp
jge
or
and
test
pop
ret
mov
mov
push
mov
dec
jno
adc
and
mov
and
push
inc
inc
push
mov
rolb
inc
ss
dec
fidivrl
insb
push
push
enter
xchg
pop
cmp
adc
jae
fidivs
adc
imul
hlt
orb
imul
pushf
push
lods
adcb
das
leave
add
pushf
or
ds
or
sub
repnz
push
jecxz
push
jnp
les
aas
pop
daa
pop
mov
jmp
test
aaa
inc
push
stos
loopne
push
mov
shlb
popa
cld
addr16
mov
and
ret
xor
xchg
or
lods
sbb
test
leave
cltd
std
lock
test
aaa
cmp
jb
cmp
dec
dec
adcl
xchg
sbb
xor
mov
lea
test
xor
movl
in
pushf
test
jge
ss
outsl
cmp
lods
mov
add
in
sub
leave
pusha
cmc
xchg
dec
adc
addr16
sub
cmp
adc
shl
rclb
push
push
inc
fists
fildl
fnsave
sbb
inc
adc
repz
fxch
cmp
xchg
push
adc
and
sbb
or
jae
bound
push
or
dec
jg
mov
scas
test
clc
pop
aaa
push
addr16
movsl
pop
movsl
sbb
mov
cmp
add
pop
setns
repz
mov
sbb
enter
fcomi
orl
aam
pop
sbb
sti
inc
sub
xchg
sbb
inc
xchg
lock
in
call
sbb
lea
jge
dec
xor
mov
sbb
flds
push
mov
add
push
cmp
adc
aaa
loope
add
ficomps
lock
clc
pop
add
xor
fwait
sti
adc
push
inc
js
outsl
mov
xor
jb
lahf
xchg
ret
sub
cmpsl
aad
adc
icebp
aam
jl
cmp
mov
shrl
aaa
cltd
inc
mov
lock
xchg
mov
sub
movsl
popa
pop
das
xchg
iret
mov
popf
mov
js
fstpl
adc
test
shll
movsb
jge
sbb
repz
mov
fists
push
jl
cmp
into
pop
mov
stc
mov
test
xchg
stos
sbb
cmp
aaa
scas
lret
icebp
mov
int
es
popf
jne
mov
ret
je
push
adc
enter
or
call
mov
gs
dec
dec
sub
mov
out
mov
cmp
sbb
hlt
test
stos
dec
add
shl
lods
dec
mov
test
sbb
dec
negl
jbe
int
jae
cmpsb
jno
mov
xor
xor
pop
jge
iret
sbb
fs
test
movsl
jb
or
mov
cwtl
loope
xchg
push
mov
bound
pop
movsb
ret
mov
push
mov
es
cmp
push
sub
sarl
mov
bound
cmp
enter
push
hlt
fwait
test
stos
pushf
hlt
dec
dec
xchg
popf
rcll
jo
or
cmp
out
sub
or
in
mov
jno
in
pop
or
imul
fs
add
inc
fisttpll
adc
or
and
sub
push
loope
outsb
out
add
pop
jnp
idiv
jp
inc
scas
dec
les
adc
pop
or
cmpsb
clc
push
shl
xor
enter
pop
jns
mov
dec
cmp
cmc
adc
mov
fadd
cwtl
and
mov
jb
and
dec
xor
shlb
int
pop
into
in
mov
mov
lcall
aam
xchg
cmp
je
daa
and
cmp
dec
cwtl
push
push
pop
cld
enter
scas
or
pop
lods
frstor
pop
andb
scas
test
aam
in
mov
and
fs
into
jno
or
mov
pop
inc
test
mov
pusha
xchg
es
icebp
loope
pop
sub
les
sbb
int3
pop
loopnew
rcrb
aas
xorb
movsb
imul
and
fdivl
int
pusha
dec
jo
or
lea
nop
push
in
inc
outsl
dec
imulb
mov
in
lret
scas
xor
push
fsts
add
mov
ss
sbbl
fnstenv
scas
fwait
stc
sarb
hlt
lret
lcall
add
push
lea
dec
cmp
scas
push
jno
xchg
popl
sahf
sub
iret
mov
cmp
lcall
jp
adcb
lds
fcoms
inc
sbb
lahf
dec
das
add
es
popf
jne
mov
xchg
je
dec
or
jg
bound
cmp
push
pop
and
adc
outsb
mov
in
jne
fcomps
xchg
inc
jl
or
outsb
inc
jb
fcmovne
cmpsl
mov
mov
xchg
int
fistps
cmpsb
jne
jo
inc
hlt
insb
sub
or
or
pop
lcall
icebp
insb
fwait
sti
ret
shlb
stos
orb
dec
inc
dec
sub
jne
adc
rorl
pop
sub
rclb
test
mov
pop
mov
jge
pusha
inc
inc
pop
mulb
fs
cld
mov
push
shlb
mov
fsubrs
jle
and
pop
xor
xchg
or
nop
push
push
stos
rolb
adc
loop
mov
stc
fistl
add
mov
call
rorl
cmp
lock
sub
xor
xchg
hlt
sub
xchg
adc
iret
sub
cmc
cmpsl
js
pop
js
outsl
repz
jge
cwtl
gs
jns
cmp
mov
mov
sub
icebp
data16
jg
aas
or
or
mov
test
add
mov
fwait
or
daa
popf
negb
iret
outsl
cmp
cmp
les
hlt
les
dec
pop
cmpb
mov
adcl
int
test
or
ret
mov
xorl
fcompl
xchg
mov
popa
jecxz
out
xchg
aas
add
pop
daa
mov
lahf
aas
add
into
cmp
pop
fdivrs
out
sub
mov
insb
sbbb
inc
xchg
imul
cmpl
push
sti
sahf
loope
inc
call
into
xlat
xchg
ljmp
mov
xchg
fs
aad
xor
cmc
and
xlat
pushf
and
add
jmp
cltd
mov
pusha
scas
fisttpll
cmp
mov
sub
or
mov
xchg
shll
and
and
jns,pt
cli
dec
pop
lahf
fnstenv
mov
jnp
mov
out
imul
add
push
jge
cld
pop
out
xchg
iret
push
xchg
je
stos
leave
imul
push
lahf
add
mov
mov
pushf
and
sub
js
imul
inc
fadds
xor
or
outsb
push
repz
push
cmp
std
adc
stos
mov
adc
dec
jns
aad
loop
jbe
cs
add
xlat
sbb
fidivrl
fists
mov
sbb
jp
daa
aad
sub
popa
add
outsl
xchg
jns
shll
xchg
inc
cmpsb
inc
leave
adc
xchg
push
sub
dec
xchg
add
jle
loop
or
movsb
inc
sbb
call
mov
dec
pusha
mov
movb
ja
scas
std
sbb
je
js
stc
loop
mov
mov
dec
mov
add
pushf
in
and
inc
lock
xchg
mov
subl
cs
jg
mov
jg
dec
fwait
std
cmp
out
lock
loopne
xor
mov
into
cmp
push
xor
daa
int
negb
cmp
mull
loope
xlat
or
cmpb
pop
out
pop
push
aad
cwtl
push
mov
imul
cmpl
mov
jns
in
jge
repnz
mov
ror
push
add
dec
pop
xchg
pop
iret
ret
xchg
ss
or
add
fcmovnb
add
jge
mov
sub
fildll
popa
inc
ret
adc
add
ds
push
mov
js
sahf
rclb
pop
jmp
xchg
or
lret
test
xchg
xor
jle
mov
and
or
mov
pop
mov
arpl
cmp
mov
add
aas
inc
subl
insl
lcall
add
sub
mov
push
add
hlt
xchg
pop
rclb
loopne
mov
push
and
cld
mov
mov
dec
cs
jb
mov
imul
xchg
fincstp
aas
ja
das
ret
aaa
sub
pushf
pop
andb
adc
test
mov
mov
mov
lcall
lods
int
ss
repnz
jo
or
mov
cmpsb
clc
cmp
sahf
sti
dec
dec
pop
or
inc
jg
xchg
adc
and
stos
mov
stos
or
cmpsl
scas
lea
inc
nop
jno
addr16
lods
lahf
out
int3
test
out
and
jb
sub
mov
mov
jecxz
adc
xor
xlat
fcoms
lock
pop
inc
mov
je
mov
mov
dec
mov
jb
out
jne
mov
call
ret
in
xchg
adc
fsts
jno
fwait
mov
out
sub
aas
stos
hlt
repz
sub
cmp
movsl
and
aad
je
test
adc
or
mov
add
stos
je
add
ljmp
mov
inc
dec
xor
mov
arpl
jne
mov
cmc
sbb
js
dec
jnp
push
idivl
iret
loop
mov
clc
mov
iret
lcall
aad
cmp
mov
cltd
out
sub
or
inc
ja
popa
ds
mov
xor
inc
sarl
dec
push
jg
ja
sub
xchg
bound
jnp
lret
push
dec
xor
mov
adc
leave
inc
push
cltd
fsubl
movsb
cmp
in
subb
pop
cmp
outsb
stos
add
mov
in
or
sti
fcompl
hlt
push
and
xchg
dec
mov
icebp
iret
rclb
add
jle
push
push
adc
stos
sbb
fidivrl
jecxz
mov
xchg
scas
pop
loopne
push
mov
sbb
pop
add
fnsave
movsb
jmp
int3
cli
xor
cmp
stos
push
stos
xor
call
sub
add
mov
test
pop
or
data16
jb
jmp
jns
push
je
mov
jg
pop
sti
pop
push
test
sbb
repz
testl
and
pop
mov
cmpb
mov
pop
repnz
int3
or
movsb
mov
pop
jns
test
outsb
test
cmp
out
outsb
insb
aam
movsl
xor
xchg
test
mulb
stos
sub
pop
sbb
mov
xor
sub
jmp
pop
pop
push
xchg
rcrb
push
mov
pushf
adc
dec
in
in
or
add
les
push
fwait
cmp
pop
aas
cld
sbbl
sub
clc
or
xor
xchg
pusha
xor
clc
add
repnz
jb
mov
mov
out
aaa
sub
data16
xchg
dec
fwait
pop
cwtl
pop
xchg
mov
add
es
sub
test
jle
notb
dec
xchg
pop
and
add
test
push
leave
adc
div
fcmovbe
cld
loopne
lret
push
clc
sub
mov
sbb
pushf
jnp
mov
clc
mov
out
cld
mov
push
lods
adc
adc
in
sbb
jp
or
xchg
push
mov
std
pop
push
push
mov
xor
push
jnp
xor
ja
pusha
jns
sbb
jg
mov
adc
mov
sub
fldt
testl
jl
jle
push
fsubl
cmp
pop
push
in
fdivrl
adcl
stos
pop
and
xor
jg
adc
ficoml
push
ljmp
aad
jecxz
pop
adc
cld
dec
addr16
add
push
jbe
ljmp
jp
or
sub
subb
sub
leave
or
test
aaa
push
push
push
push
mov
fidivrl
arpl
mov
jnp
jbe
sbb
push
xor
gs
stos
push
popf
and
push
std
jb
xchg
inc
pushf
jle
aaa
negl
scas
dec
pop
popa
stos
inc
out
push
fsubrl
mull
push
lods
lea
and
sub
inc
or
fnsave
cs
sub
dec
mov
daa
fidivrs
add
scas
or
cmp
imul
sarb
adc
dec
scas
clc
out
out
add
dec
cmp
repnz
sbb
jge
dec
mov
or
jge
xor
mov
lods
inc
xchg
jne
notl
cmp
mov
mov
ds
xor
je
mov
mov
hlt
or
jecxz
test
or
into
adc
sbbl
and
mov
aad
aaa
outsl
gs
or
push
xchg
stos
stos
ret
pop
cwtl
adc
shll
dec
ds
and
or
fists
stos
add
mov
adc
inc
imul
js
mov
vmovdqa
jecxz
out
dec
ljmp
mov
data16
cmpsl
inc
bound
out
sbb
in
lods
xchg
and
push
mov
cmp
pop
mov
sub
mov
mov
test
mov
fstps
add
lods
clc
nop
jnp
bound
mov
sahf
fistl
cs
xchg
and
and
jge
jl
push
addb
or
in
pushf
imul
movsl
clc
mov
or
mov
pop
adc
mov
test
insl
xlat
jg
sbb
push
loopne
lods
ljmp
orl
mov
mov
scas
mov
ret
daa
push
mov
call
shlb
pop
push
mov
int3
scas
push
int
inc
xor
subl
and
jb
neg
insb
jg
ret
cmp
ljmp
sbb
sbbb
je
adcl
in
int
push
sti
jne
fcomps
xchg
stos
adc
lret
pop
imul
cmp
outsl
call
jb
lret
fnstenv
imul
add
jb
sahf
jp
cmp
sbb
xchg
aaa
add
aam
pushf
mov
lret
pop
test
dec
xor
pop
mov
inc
jp
lcall
push
clc
enter
pop
pushf
sbb
jbe
pop
leave
lods
jno
orb
xor
out
lahf
xchg
or
jno
out
outsb
sub
pop
fists
or
sub
xor
mov
aaa
jecxz
sub
sub
faddp
test
lea
or
cmc
lcall
mov
mov
fdiv
pop
push
es
or
jp
adc
jl
jg
fmuls
xchg
jecxz
add
mov
pop
repnz
test
stc
int
insl
or
dec
add
fnstsw
adc
or
mov
es
popf
cmp
inc
popf
or
pusha
shrl
mov
jns
push
push
mov
or
hlt
mov
and
popf
or
sub
xor
sub
adc
mov
inc
popf
inc
mov
push
sbb
int
cwtl
pop
in
sbb
jge
arpl
loope
mov
scas
jle
mov
dec
xchg
add
adc
rcl
adc
jle
lea
inc
sbb
arpl
add
cmc
mov
popa
shl
adc
add
adc
lods
jnp
lea
mov
sarb
int
movsl
fwait
xchg
or
movsb
icebp
mov
scas
and
push
push
jle
aad
hlt
fcomi
add
scas
jmp
sbb
adc
pop
xchg
pop
mov
adcl
dec
mov
xchg
test
lods
dec
and
scas
sbb
jge
mov
push
push
iret
repnz
sub
cmp
daa
mov
pop
dec
pop
jmp
xchg
adc
inc
iret
hlt
mov
pushf
lcall
fildl
mov
and
dec
xchg
scas
jg
popa
dec
out
dec
jns
leave
pop
mov
add
jl
xor
adcl
cmp
aad
dec
je
repnz
test
clc
push
inc
insb
subl
mov
jmp
pop
lea
pop
fsubrl
xchg
sub
repz
in
popf
xchg
push
mov
icebp
andl
and
sbb
xor
dec
test
repnz
sub
sub
les
andb
jne
pop
jno
fsubs
jb
repnz
adc
in
lcall
dec
loope
aad
xchg
cmpsb
mul
sub
jnp
pop
imul
inc
fstps
mov
insl
inc
push
jl
lods
lods
pop
rcrl
cmp
in
repnz
movswl
in
lcall
and
movntq
out
mov
mov
cmp
add
cmpsb
movsb
push
xchg
insb
jbe
xchg
test
jl
jmp
xlat
mov
nop
mov
sbb
adc
mov
jb
enter
imul
xchg
or
hlt
insl
or
mov
sbb
inc
stc
xor
mov
xor
xchg
pop
jmp
sub
sub
pop
leave
aad
imulb
fs
jnp
imul
aaa
inc
add
loopne
xor
mov
aas
insl
fcompl
mov
jge
mov
stc
les
stos
adc
mov
or
fs
scas
inc
fstpt
fcmovnb
xor
loop
adc
in
mov
rcll
add
ffree
fbld
lock
mov
xor
pop
clc
add
divl
lret
dec
hlt
pop
sub
repnz
movsl
pop
in
test
pop
cmp
mov
shlb
and
ds
inc
outsl
cli
jg
mov
cli
imul
adc
cltd
push
hlt
gs
xchg
aas
fimull
xchg
insl
and
pusha
pushl
movsb
sub
icebp
ss
cmp
sbb
rolb
jmp
pop
je
mov
pop
xor
dec
fidivl
inc
mov
dec
dec
scas
mov
pop
shll
mov
or
loope
cmp
je
sbb
aad
mov
cmp
xchg
cwtl
xchg
mov
and
inc
aas
inc
sub
push
aas
inc
pop
aaa
xor
push
mov
call
mov
cli
lcall
pop
sub
inc
insl
xchg
or
lods
and
mov
mov
mov
and
push
fcoms
icebp
jns
inc
jno
sub
test
sub
jb
sub
fidivs
cmpsb
test
mov
push
xchg
jnp
jmp
xchg
inc
cwtl
icebp
inc
pop
xchg
sbb
dec
jb
sub
xchg
sbb
loop
rcl
mov
inc
aad
sub
lods
jno
pop
mov
and
and
out
out
int
jb
mov
dec
movsl
sbb
adc
popa
push
call
imulb
cmp
mov
aas
neg
stos
pushf
sbb
sub
adc
cmp
ds
and
xchg
cmp
lock
ror
push
adc
add
pop
iret
dec
lods
clc
and
movsb
insb
sbb
mov
xor
popa
dec
rclb
aaa
mov
inc
jno
lcall
pop
shl
xor
jns
mov
mov
add
pop
mov
cmp
and
out
xor
out
rolb
jnp
pop
push
adc
add
jbe
enter
aaa
adc
dec
jnp
popa
adc
adc
mov
pusha
push
or
adc
outsl
into
call
nop
ljmp
sti
or
lock
fs
movsl
mov
sub
add
adc
incl
jbe
mov
lods
loope
add
or
sbb
jnp
and
or
ljmp
lret
push
pop
push
loopne
pushf
in
fadd
mov
imul
cltd
loopne
sub
into
lods
scas
fists
xor
subb
insl
sarb
inc
sub
popl
div
jge
lret
inc
mov
adc
cmpsb
stos
mov
mov
push
bound
add
adc
sti
dec
aad
lcall
lcall
dec
les
mov
jne
ja
jnp
jae
pop
adc
or
mov
orl
repnz
dec
dec
or
jg
stos
xchg
lret
iret
sbb
dec
mov
cmc
je
jno
mov
xchg
xorb
dec
mov
jnp
popf
jns
xlat
lds
adc
rsqrtps
push
orb
fldcw
aad
jno
and
jmp
pop
adc
push
lods
divl
idivl
or
mov
pop
jno
cltd
mov
fidivs
std
out
ret
aad
or
inc
pop
xchg
aad
lret
sbb
push
arpl
lock
fstl
outsl
xor
mov
out
and
loope
dec
inc
cmpsb
inc
sbb
lahf
shl
inc
popa
lret
pop
add
out
lcall
sbb
inc
mov
hlt
inc
dec
push
hlt
add
lods
jge
jb
mov
or
insb
in
dec
mov
jae
shlb
cmp
nop
dec
push
xor
xchg
pop
cmp
mov
pop
mov
xlat
pop
inc
jl
xor
xor
bound
loop
int3
out
pop
lods
iret
cli
dec
movsl
je
jns
cmp
dec
cmpsb
repnz
pop
cltd
sub
inc
rclb
aad
cmp
push
inc
movsl
popa
insb
out
pop
cmp
leave
dec
mov
jo
cmpsl
popa
pop
or
mov
ffree
jo
ds
add
push
inc
push
sbb
push
setne
lods
lea
mov
xor
pop
dec
ret
adc
lret
xchg
jle
or
jmp
cmc
cli
popf
push
lds
subl
pop
mov
scas
jecxz
fldl
jge
push
and
in
scas
cmp
lods
imul
sub
enter
jmp
jp
stos
paddb
test
js
in
ret
and
clc
test
mov
in
int
fcompl
xor
xchg
setae
std
sbb
outsb
mov
dec
mulps
imul
aas
addl
insl
jae
stc
lds
sbb
movsb
fadds
mov
lret
cli
lcall
aad
add
fimull
mov
loopne
sub
jp
pop
mov
xor
es
xor
mov
aaa
scas
cltd
stc
dec
push
cli
xor
bound
ficoml
sub
cmp
outsb
add
jmp
mov
dec
xchg
fs
cltd
int3
pop
jge
and
xlat
lret
gs
add
ficoml
dec
iret
iret
and
mov
jb
dec
mov
adc
outsl
jmp
aas
inc
mov
test
push
aad
xchg
cmp
cs
jmp
or
cli
jle
test
mov
aas
lock
cmpsb
insl
mov
mov
push
or
pop
inc
fbstp
jle
mov
mov
and
xor
fldenv
jl
sahf
ss
cmpsl
xor
xor
sarb
mov
cmp
daa
lock
xchg
fisubrs
les
pop
stos
xlat
addr16
lods
jno
mov
std
sbbl
sub
stc
adc
xchg
cltd
clc
mov
js
mov
cltd
sub
push
test
xchg
insb
movsb
stc
fimull
xor
call
adc
gs
lahf
sahf
sub
cmp
fcoms
les
pop
out
cwtl
cmp
pop
mov
pop
or
test
xchg
mov
sub
mov
imul
ret
popf
movsb
clc
nop
pop
push
popl
mov
imul
xor
xor
lret
lods
aas
jp
movsb
xchg
out
fcom
and
sub
pop
je
mov
or
sbb
mov
lcall
sbb
out
mov
imul
add
push
mov
adc
scas
or
mov
repz
mov
test
sub
aad
in
mov
adc
jmp
lcall
push
jne
cmpsl
out
and
pushf
dec
cld
mov
pop
pop
scas
and
shlb
xor
push
xor
xchg
stc
lds
push
xchg
add
or
cmp
fld
xor
push
aam
mov
mov
mov
cmc
xor
mov
loop
fcoms
xor
cld
ret
sub
rcr
dec
push
test
lock
jb
enter
pushf
push
mov
stos
dec
enter
and
and
into
dec
cmpl
jne
mov
sbb
xor
inc
mov
in
shrd
add
cwtl
dec
lret
mov
orl
out
lds
sub
pop
and
shll
stos
lret
cmp
in
adc
cmpb
iret
in
dec
mov
sbb
push
test
inc
pop
ds
sar
ss
add
mov
fcmovu
push
scas
or
inc
and
mov
push
dec
pop
and
into
xor
std
pop
and
inc
insl
jnp
loope
pop
in
arpl
add
ret
cwtl
fwait
dec
fisubs
aam
xchg
lret
xor
mov
ret
hlt
add
inc
jmp
les
mov
mov
adc
sub
in
popf
mov
sbb
loope
lcall
or
andl
stc
mov
scas
aas
ss
xor
aam
orb
mov
jecxz
jo
lret
imul
fistps
inc
pop
jp
mov
iret
jle
ret
outsl
xchg
mov
movsb
std
xchg
mov
lret
and
fs
insb
mov
and
in
push
ficoms
sbb
dec
movsl
xchg
insl
sbb
push
push
cli
rcrb
cmpsb
mov
pop
in
jmp
sahf
ss
insb
dec
ret
mov
adc
mov
shlb
push
dec
je
lcall
inc
int3
dec
scas
orl
scas
sbb
popf
sub
scas
movsb
adc
das
fbstp
jo
inc
sub
xor
test
dec
jg
add
jnp
sti
popa
cmp
add
adc
push
cmp
hlt
imul
and
mov
bound
sbb
mov
repnz
fsubp
dec
out
jmp
insb
inc
repnz
or
in
lret
adc
mov
mov
cld
testb
pop
clc
push
loopne
test
lahf
movsl
inc
sub
xchg
scas
divb
inc
test
stos
int
jp
adc
sub
xor
add
sti
lds
jmp
pushf
mov
es
xor
cmp
push
jp
frstor
rolb
push
int3
notl
addl
or
ror
loop
inc
and
test
push
pusha
cmc
outsb
shll
xchg
jle
and
test
jnp
mov
and
and
sub
cltd
in
sbb
orl
scas
mov
stos
cmc
inc
and
mov
inc
scas
fnsave
push
nop
and
add
cmp
cmp
jns
outsl
mov
pusha
test
pop
inc
int
pop
sbb
and
mov
ret
mov
mov
jnp
adc
popf
movsb
mov
pop
mov
add
pop
enter
push
push
push
inc
iret
out
xchg
mov
jg
stos
sub
cmp
or
lea
sahf
rcrl
out
pusha
mov
mov
push
cmp
pusha
sbb
out
sbb
addr16
jns
repz
sub
mov
xor
loop
mov
push
fwait
iret
xchg
mov
lret
and
dec
sub
mov
ja
dec
stc
adc
jb
insl
inc
ss
or
es
push
or
jmp
adc
out
into
enter
mov
aad
and
inc
inc
fnstcw
xor
test
push
inc
shrl
jno
lahf
ja
cmp
add
rolb
push
mov
mov
xchg
sub
add
add
mov
call
fisubrl
inc
add
xchg
rcrl
ret
push
outsl
fs
adc
loop
cli
adcb
mov
into
es
xchg
xlat
setne
push
int
sbb
xor
gs
vdivsd
scas
mov
orb
xchg
shr
mov
repnz
mov
shl
fsubl
shlb
pop
int
fsubl
imulb
out
cmp
rclb
inc
cmc
jl
data16
adc
xor
lock
fnstenv
jae
jmp
cmp
lret
dec
icebp
test
cmp
mov
sbb
inc
mov
dec
dec
adc
ss
sbb
dec
pop
mov
repnz
adc
inc
inc
les
out
sub
stc
push
cs
in
lahf
popf
xor
into
add
push
inc
push
into
add
popf
cmp
lods
mov
xchg
and
mov
pop
test
mov
test
test
push
mov
pop
pop
les
mov
sub
and
mov
push
scas
adc
inc
pop
enter
and
shll
inc
outsl
mov
pop
jg
ret
pop
jno
lahf
movsb
add
daa
addr16
xor
subl
loopne
mov
mov
and
sub
dec
fcoms
push
pop
cmc
in
jae
inc
sub
mov
cld
out
jp
xorb
jp
and
cmp
dec
repnz
repz
cwtl
xchg
aad
and
cld
dec
xor
mov
adcl
xchg
fimuls
sub
repz
movsl
cmp
daa
lret
mov
mov
pusha
lds
mov
mov
mov
repnz
js
jb
repz
inc
int3
faddl
jne
mov
je
imul
ja
out
daa
inc
and
lret
adc
adc
xor
adc
jae
aaa
jb
cli
cmp
lret
arpl
addr16
inc
add
xor
xchg
packsswb
or
lods
mov
mov
fldcw
out
test
stos
add
test
cmp
mov
shl
jno
mov
dec
call
sbb
mov
lods
popa
repz
pop
addr16
push
inc
insl
xchg
fs
jg
cmp
cmc
inc
in
lods
fwait
int
dec
cmc
lea
pushf
out
fisubs
test
jns
push
push
mov
lds
add
out
jno
loop
lods
pop
jge
jns
out
cmovns
call
xchg
fidivrl
or
xlat
push
push
and
cmp
xor
outsb
sbb
das
dec
loope
movsl
ficompl
push
inc
ss
pop
cmpsb
inc
xchg
lcall
push
xchg
fbld
data16
jno
mov
icebp
adc
sbbb
fcmovne
or
cmpsl
mov
xlat
test
out
cs
dec
cmp
xchg
in
push
cmp
dec
sub
mov
or
mov
adc
adcb
lcall
mov
adc
arpl
pop
aam
out
pop
pop
fdivs
mov
stos
xlat
rcr
repz
lods
mov
lock
pusha
lock
cwtl
push
push
sbb
or
xor
mov
mov
push
or
mov
mov
cld
repz
das
mov
iret
pop
mov
lret
aaa
frstor
inc
aaa
hlt
add
lcall
jns
and
and
js
jb
pop
andl
pop
jne
fsubrs
xchg
cmp
ja
out
js
rorb
inc
inc
cmp
cmp
and
test
mov
cmpsb
push
gs
cs
clts
dec
xor
cld
out
sub
or
sbb
shll
mov
jge
sub
and
insl
push
int
cmpsl
add
push
xor
mov
inc
add
cmp
sbb
inc
stc
cmpsb
push
pop
test
xchg
std
sbb
bnd
cmp
imul
cwtl
popa
int
and
jmp
mov
jns
ljmp
test
sub
mov
gs
jo
inc
sbb
lods
ss
outsl
pop
notb
jge
jnp
movl
or
mov
inc
jbe
je
mov
sbb
xchg
je
sbb
cmp
dec
xchg
pop
std
cli
ss
out
push
dec
mov
cmp
loope
loope
push
mov
mov
fsubs
outsl
pop
aam
scas
in
inc
push
repz
mov
repz
mov
adc
pop
xor
in
cmp
je
ret
mov
or
imul
pop
xor
inc
aam
xor
cmc
shlb
mov
push
loop,pt
out
xor
cmp
dec
aad
xchg
sub
je
movsb
or
and
cmp
fidivs
cli
test
adc
add
fwait
sub
lret
scas
xchg
jno
lea
imul
bound
and
test
addr16
xchg
sub
pop
dec
out
or
and
out
adc
mov
nop
mov
cmpsb
mov
dec
pusha
push
pop
mov
in
pop
adc
push
jb
pop
dec
ffree
inc
xchg
lea
sahf
mov
mov
xor
jle
push
adc
xor
pop
stos
jmp
pop
xor
aaa
jb
dec
add
loop
mov
and
stc
and
add
or
xchg
add
stos
xchg
imul
mov
mov
rolb
mov
and
mov
mov
add
fcomps
int
lods
xchg
test
jmp
sbb
mov
arpl
ret
out
xchg
xor
mov
into
xchg
stos
gs
jo
xchg
add
dec
xor
inc
adc
nop
ljmp
dec
jmp
ret
xchg
xchg
pop
xor
jne
dec
jnp
outsl
fmull
cmp
inc
push
inc
leave
addr16
repnz
roll
mov
cmp
dec
scas
inc
pop
push
and
rorb
pop
and
dec
sbb
and
sub
fmull
icebp
out
pusha
push
push
out
mov
mov
out
out
nop
sbb
and
imul
xor
push
inc
sahf
mov
xchg
xchg
subb
mov
lods
inc
jp
cli
sbb
mov
push
aam
mov
and
stos
out
push
lods
sahf
rcl
lcall
leave
clc
stos
jb
mov
mov
dec
fwait
clc
rorl
sarl
data16
es
inc
sub
mov
sub
icebp
sub
dec
pop
xchg
out
xor
inc
aam
in
arpl
data16
popf
sub
fdivrl
out
rcll
lods
sbb
mov
sub
adc
and
dec
ljmp
mov
add
fstl
pop
mov
adc
or
pushf
lahf
jp
cmpsl
in
in
jmp
jecxz
jmp
pop
sbb
std
mov
fimull
fisttpll
scas
adc
sti
fisttps
mov
lret
push
sub
add
xor
jle
std
sbb
xlat
dec
and
sbb
xor
mov
test
cmc
in
jg
test
aas
daa
fadds
clc
add
jecxz
adc
push
lcall
xor
jle
pop
jns
js
aad
test
popf
and
pop
mov
or
mov
mov
xchg
shrl
cmp
pop
gs
movsl
pop
sub
enter
je
rorl
pop
lock
dec
push
scas
xchg
sub
call
push
and
cmc
mov
shlb
adc
add
cmpsb
cltd
shl
test
mov
push
xchg
xor
adc
inc
cmpb
jne
je
mov
sbb
sbb
test
push
push
addb
pop
std
mov
xor
and
mov
inc
aaa
inc
fisubs
loopne
mov
sbb
inc
ds
iret
movsb
jne
cmp
fildll
xchg
loopne
lcall
xchg
jp
pop
into
btsl
dec
pop
or
add
in
mov
int
sbb
and
test
out
mov
adc
mov
imul
mov
mov
push
lret
mov
cmpb
flds
in
arpl
stc
mov
or
sub
jnp
push
mov
mov
cmpsl
pop
and
imul
std
adc
sub
test
int
in
hlt
jo
das
or
sahf
mov
add
repz
mov
test
jmp
test
mov
jno
dec
dec
ret
test
std
inc
shlb
aam
push
adc
xor
ret
jns
in
pop
jmp
xor
cmp
mov
and
hlt
pop
int3
negl
adc
push
mov
call
adc
dec
pop
mov
mov
pop
fs
cmp
cs
jge
pop
inc
dec
test
mov
adc
dec
sbb
test
xchg
lods
sub
push
ret
cld
roll
mov
mov
pop
lcall
jae
pusha
jmp
sahf
xchg
push
or
mov
sar
mov
jno
cli
xchg
nop
xor
mov
add
cmpsl
outsb
cmp
aas
inc
aam
sub
mov
xchg
lea
aam
cmpsl
inc
popf
lret
xorb
adc
jecxz
popf
mov
sbb
dec
js
icebp
fdivrs
test
jp
shlb
dec
sbb
inc
cltd
mov
mov
clc
add
cli
jle
push
std
outsb
arpl
mov
aaa
sub
inc
push
dec
cmp
fidivs
cmp
call
pop
cmp
out
push
pop
cmp
xor
add
nop
push
mov
rcr
fs
sub
mov
fisubrs
sub
sub
ljmp
jg
push
cli
addr16
lahf
mov
int
xchg
clc
rorl
inc
outsl
sub
cmc
icebp
xchg
sbb
mov
push
iret
mov
xchg
adc
adc
pop
popf
scas
lcall
mov
push
add
mov
mov
fcoms
dec
insb
inc
test
fwait
pushf
xchg
pop
aaa
sti
clc
or
adc
addr16
or
in
push
out
dec
add
aas
sub
icebp
test
mov
jnp
das
call
mov
or
sbb
xchg
lds
lcall
and
push
xlat
fwait
pop
inc
popf
or
dec
in
mov
aam
xor
addb
dec
shr
mov
in
adc
sbb
js
mov
mov
jae
pop
lds
inc
mov
push
xor
fisttps
sub
out
or
xchg
lcall
ljmp
test
test
sbb
cmpsb
scas
cltd
pushf
pop
fistps
rcrl
jbe
xor
sti
aad
out
push
dec
xor
xorl
outsb
sbbl
mov
xchg
sub
leave
incl
std
adc
sbb
clc
pop
dec
into
mov
or
xor
cmc
jne
add
sbb
setb
hlt
xchg
ffree
rorb
jg
pop
xor
xor
and
jge
imul
test
fwait
adc
cmp
sahf
ds
outsl
pop
das
push
cmp
lcall
addr16
sub
rclb
cmp
js
callw
mov
jbe
sub
push
pop
sbb
xchg
mov
mov
cmpsl
les
mov
add
sbb
je
pop
popf
sbb
out
dec
cmpsb
hlt
push
les
cmp
sbb
lds
gs
mov
mov
mov
add
ds
inc
jmp
or
in
fstl
stc
ljmp
js
dec
push
lock
sub
pop
scas
jo
mov
jno
cmp
movsb
popa
cmpsl
dec
mov
in
push
movsb
sbb
adc
std
and
lods
out
adc
jae
add
sbb
push
dec
shlb
lret
imul
icebp
aad
aaa
xor
in
js
sub
stc
cmp
leave
inc
push
or
adc
nop
test
jb
mov
and
jmp
and
roll
jb
mov
push
fcompl
jb
lds
lret
dec
push
je
int
dec
pop
popf
and
sysenter
mov
pop
hlt
or
jge
dec
fxch
lahf
xchg
daa
insl
push
inc
insb
pop
call
mov
lahf
lahf
ja
mov
arpl
inc
inc
stos
xor
data16
adcb
adc
xlat
cmc
fistpll
jle
aam
push
mov
fwait
and
sub
fistps
jl
or
movsb
pop
cltd
sub
xchg
lahf
fldcw
cld
mov
subb
and
gs
adc
dec
jle
mov
or
jmp
mov
sub
iret
inc
aad
and
iret
jp
sub
jge
push
xor
nop
mov
push
dec
cmpsl
popf
xchg
and
jp
dec
push
aaa
cmp
add
lea
jb
mov
xchg
gs
repz
arpl
add
or
mov
sub
mov
inc
push
rcrl
out
jp
or
or
movsb
daa
xchg
inc
sbb
aaa
push
add
push
rcrl
jo
pop
lods
loopne
imul
mov
mov
repz
scas
push
jno
xchg
cmp
sahf
sbb
out
hlt
jmp
dec
fs
mov
mov
mov
insb
dec
lock
mov
ret
sbb
fnstenv
andb
insl
cmp
clc
scas
xchg
sub
cmp
and
mov
aas
loop
mov
pop
mov
aad
or
inc
adc
mov
nop
sub
in
mov
dec
mov
ja
lock
pop
cmp
lods
inc
xchg
ja
lret
push
scas
lcall
lods
pop
cmp
aas
shll
xchg
push
dec
fsubp
cmc
push
mov
int3
or
dec
cli
aaa
cmp
push
imul
int
cmp
repz
cs
mov
lock
ret
mov
sarl
mov
sub
mov
mov
push
push
gs
arpl
imul
movsl
int
les
imul
rolb
enter
jbe
cmpsl
cmp
aad
fcmovnb
pushf
inc
mov
add
idiv
gs
movsb
or
imul
mov
mov
cli
shll
leave
mov
les
rorb
sbb
dec
fildll
and
loopne
mov
inc
outsl
mov
dec
ljmp
xchg
add
shrb
mull
mov
mov
jmp
addr16
je
negb
ja
mov
call
je
sub
int
outsb
sbb
mov
or
add
push
or
mov
fs
xchg
leave
cld
mov
jecxz
rorl
mov
mov
sarw
xor
xlat
lahf
pusha
je
addr16
mov
ss
test
push
mov
mov
adc
dec
js
xor
popl
hlt
imul
fldt
sbb
xchg
sub
mov
sbb
jnp
out
fcmovne
dec
arpl
gs
inc
subb
jecxz
fld
lea
mov
sbb
das
imul
cmp
pusha
sub
jl
dec
int
or
lret
add
fnsave
mov
dec
xor
negl
aas
push
divl
lret
mov
push
sbb
enter
or
adcl
outsl
add
ret
dec
out
test
pop
push
sbb
jge
fadd
int3
sti
xchg
out
mov
pushl
dec
fnsave
xor
test
mov
loop
cmp
in
sbb
mov
int
les
in
push
sti
push
or
imul
imul
test
or
or
inc
cld
mov
popa
cli
decl
xor
or
pushf
and
jbe
jno
movsb
icebp
inc
sub
inc
out
call
add
fisttpl
mov
pop
inc
xlat
pop
fsubrp
sti
sarb
add
sub
mov
outsl
and
inc
mov
jo
xchg
mov
or
jae
loope
mov
push
add
ss
and
xor
xorl
xor
outsb
sub
cs
in
hlt
stos
stos
mov
push
dec
dec
repz
sub
cmpb
fwait
loope
sub
pop
or
jne
or
outsl
es
mov
enter
dec
insb
xor
sbb
sarl
dec
hlt
mov
das
imul
pop
cltd
adc
fdivrs
pusha
aas
xchg
in
lods
mov
aaa
push
mov
xchg
cli
xchg
test
fidivl
out
popf
sbb
ror
mov
jl
and
xchg
lcall
push
out
pop
xor
out
push
je
jle
in
lods
sbb
xchg
mov
mov
mov
hlt
jb
pop
pop
push
nop
xor
cmp
stos
cmpsb
pop
rorl
or
rolb
int
mov
arpl
push
xchg
jb
push
ficoms
rcrl
fwait
xchg
adc
jns
into
ja
cltd
mov
inc
mov
mov
mov
lods
sbbb
pop
leave
mov
and
and
cmp
fs
mov
lea
adc
loopne
dec
in
xor
xor
movsb
push
adc
push
insl
int3
cwtl
or
fldpi
xchg
dec
add
push
in
pop
rcll
xor
cmp
and
outsl
sarb
add
es
dec
out
clc
jo
mov
push
fwait
sbb
popa
cmc
outsb
mov
xchg
pop
mov
loop
iret
mov
mov
mov
sub
push
sub
mov
add
into
push
cmp
in
cli
inc
shlb
jge
jae
mov
push
les
sbb
out
and
jbe
mov
mov
rcll
sarl
fs
mov
icebp
push
mov
js
pop
sti
lods
dec
push
hlt
sub
jo
int3
das
or
fcom
adc
aaa
dec
or
shlb
inc
imul
out
fldenv
lret
in
push
push
xchg
mov
mov
xchg
shrb
lahf
insl
cld
ret
test
ficoms
mov
mov
divb
mov
mov
cmp
int
les
jbe
lea
dec
inc
cltd
cmp
push
fstps
cwtl
mov
add
jo
dec
inc
pop
inc
jmp
fmull
inc
cmpsb
or
arpl
mov
iret
fimull
dec
cs
test
dec
xchg
lds
test
sub
push
fcoml
mov
movsl
jb
cmpsb
roll
fisttpl
xchg
aad
xlat
movsl
pop
push
mov
daa
add
xor
mov
and
xor
jnp
inc
or
xchg
arpl
in
mov
and
push
call
mov
fnsave
aam
arpl
push
ret
das
dec
mov
faddp
leave
push
push
push
mov
xchg
ret
out
test
mov
inc
add
push
jbe
xchg
pop
xchg
repz
jmp
fcmovnu
push
dec
mov
push
subl
imul
sbb
jg
and
inc
sub
mov
push
jecxz
inc
sbb
inc
cmp
pop
xor
jmp
les
dec
pop
in
or
out
xor
lcall
push
jl
jg
mov
lahf
push
jno
push
notl
jl
addr16
jbe
and
aad
sub
mov
jmp
idiv
gs
cmc
aas
mov
cs
in
into
in
jmp
jecxz
pop
xor
push
sbb
push
mov
gs
iret
mov
ret
aam
loop
cs
add
inc
push
jno
jo
xchg
xchg
frstor
mov
adc
jno
add
inc
adc
inc
loopne
xor
sub
vmovupd
pop
mov
cmp
dec
mov
shll
or
les
hlt
xor
fisubs
inc
cmp
stos
shl
vcvtps2dq
jecxz
movb
adc
inc
pusha
cld
xor
pop
cltd
or
in
jle
out
sbb
mov
xor
mov
repnz
sbb
push
ss
cmpsl
xchg
sbb
cmpl
je
popf
mov
pop
repnz
push
fstpt
clc
dec
jnp
ja
out
xor
in
in
mov
jp
lods
movsb
xchg
sti
aam
fstl
repnz
jmp
dec
inc
jns
sbb
loopne
lea
test
les
mov
mov
test
leave
push
jl
mov
sub
jne
dec
movsb
iret
add
cs
sub
aaa
adc
jle
outsb
mov
out
xor
pop
push
stos
imul
int3
jecxz
arpl
xchg
outsb
pop
pop
mov
jl
sub
pop
stos
and
and
or
mov
mov
xlat
adc
pushf
cs
lret
cmp
std
dec
pusha
add
pop
jne
pop
cmp
pop
or
push
sub
pop
mov
mov
push
add
mov
mov
cltd
cmp
add
ljmp
notb
mov
repz
int
pop
iret
jge
dec
mov
mov
mov
inc
xchg
mov
push
mov
mulb
mov
jno
dec
cmpsl
test
add
push
aas
dec
cmp
pop
ds
cmpsb
mov
xor
hlt
imull
adc
jae
mov
pop
in
lock
xchg
jecxz
xchg
imul
popa
ret
rcrb
test
mov
shl
ds
fwait
sbbl
orb
sarb
jno
mov
in
pop
enter
lcall
or
mov
loopne
jo
into
jecxz
pop
jno
inc
sbb
test
es
rcll
out
xchg
sbb
shlb
push
pop
repnz
insb
fs
mov
cmpsl
or
inc
or
test
stos
mov
mov
movsl
cs
dec
stos
or
or
aas
icebp
jne
sbb
xchg
sbb
mov
aas
and
ficomps
adc
add
movsl
add
push
lods
dec
sbb
and
cmp
mov
mov
dec
lds
sbb
pop
push
or
popa
call
push
test
insb
lret
inc
jl
pop
lret
xchg
cld
movsl
jmp
cmp
bound
or
popf
les
xchg
cld
mov
outsb
mov
pop
add
aas
pop
addr16
xor
lods
scas
shlb
sahf
scas
push
add
lods
scas
dec
mov
mov
loop
sub
mov
xchg
lcall
jnp
rcr
add
pusha
xchg
pop
push
push
in
mov
out
mov
xchg
jnp,pt
data16
movsl
mov
into
push
test
sahf
stos
je
mov
pop
int3
inc
push
je
je
out
or
pusha
xor
scas
sub
or
mov
pushf
les
dec
rorb
adc
imul
mov
mov
push
loopne
dec
in
loop
and
pop
sub
or
lret
icebp
mov
jl
mov
adc
ds
in
dec
adc
pop
push
add
pop
inc
enter
sti
pop
imul
xor
icebp
dec
imul
and
es
out
lods
lcall
mov
and
jno
mov
dec
mov
inc
xchg
or
mov
aas
sbb
jl
mov
pop
lcall
repnz
stc
add
dec
xchg
adc
dec
rcrl
fsubrp
pop
jns
rclb
push
mov
bound
cld
fisubrs
cs
jbe
adc
cltd
fisubl
add
mov
mov
and
pop
sbb
std
sbb
add
dec
mov
leave
and
add
popa
dec
jl
cmp
clc
sub
mov
mov
imul
sbb
jae
pop
pusha
ss
lahf
mov
in
fcomps
ljmp
or
sub
cmpsb
xor
and
pop
pop
faddl
pusha
inc
scas
jp
push
dec
and
and
popa
fistpll
xchg
cwtl
mov
lods
aam
fsubrs
pop
iret
jmp
sub
xor
xor
jmp
add
ja
push
sbb
out
mov
push
sbb
pop
movsl
push
sub
and
xchg
popf
add
dec
sbb
xchg
lret
dec
mov
xchg
loopne
sbb
repz
sbbl
xor
ret
cmp
mov
flds
pop
decl
das
mov
in
and
inc
loopne
movsl
or
add
push
pop
sub
sub
mov
jae
xor
adc
mov
mov
or
push
in
cmp
jns
fwait
sahf
and
adc
inc
push
aad
mov
inc
imul
sbb
push
movsl
inc
or
loopne,pt
add
jo
in
rol
fdivrp
sti
lods
sbb
dec
fcomp
das
and
or
iret
add
adc
mov
ret
fadds
test
cmp
cmp
sbb
cmp
adc
cmp
les
push
adc
xchg
ds
lds
mov
or
or
mov
fistpll
push
arpl
push
dec
fstps
into
dec
iret
imul
decl
xchg
icebp
outsl
and
jbe
insb
shrl
sub
jbe
jb
inc
sub
and
xor
mov
inc
imul
stc
or
mov
rclb
stos
add
cmpb
cld
out
mov
and
dec
sbb
lock
je
or
dec
dec
stos
or
fdivl
aam
jnp
add
or
out
cmp
pop
xor
xor
fnstsw
push
xchg
popf
das
iret
sbb
mov
mov
mov
out
inc
shlb
repnz
xchg
mov
mov
jmp
jle
adc
shr
mov
clc
jp
xchg
mov
mov
cmpsl
jnp
movaps
pop
leave
sarb
aaa
and
insb
xchg
lds
push
aaa
lods
sub
add
fildl
add
adc
inc
and
mov
mov
push
mov
jns
gs
fwait
aaa
in
ss
adc
dec
cwtl
xchg
mov
xchg
xchg
rol
mov
outsl
in
cld
mov
jmp
and
mov
fldl
scas
inc
xlat
enter
push
pushf
iret
popf
incl
pop
sbbl
and
lds
xchg
dec
adc
mov
dec
jns
imul
outsb
js
or
insl
mov
insb
adc
jmp
push
jno
adc
jb
adc
mov
xchg
ja
cwtl
loopne
push
insb
ss
shll
int3
or
xchg
shrl
cmp
les
adc
xor
scas
lods
sti
movl
inc
inc
cwtl
mov
add
fsub
mov
stos
dec
das
sbb
lret
mov
cmp
push
xchg
jg
push
call
cs
iret
cmc
push
push
dec
lods
sbb
adc
jp
fcoml
add
imulb
dec
fisttps
mov
bound
daa
ret
inc
movb
ss
inc
jecxz
or
mov
adc
mov
push
imul
dec
test
sahf
loope
cld
hlt
mov
or
pop
in
and
mov
jns
jecxz
and
cmp
sub
jmp
aam
and
and
xchg
mov
inc
xor
push
stos
add
out
xor
es
out
mov
enter
lods
add
pop
outsl
add
jl
loop
ss
mov
push
sub
daa
in
test
jecxz
jg
and
mov
fwait
mov
je
cmp
roll
mov
sti
push
cmc
jecxz
stos
pop
fimull
dec
dec
pop
data16
insl
pushf
cmp
int3
aad
sti
sbb
sub
jno
jmp
inc
xchg
push
imul
sbb
mov
xchg
push
scas
stos
daa
stos
push
and
mov
shl
pushl
cmp
cmp
divb
lcall
cwtl
pop
js
cwtl
xor
jp
mov
lret
scas
xor
pop
mov
xor
push
insb
mov
movsl
and
int3
test
mov
mov
or
cmpsb
aaa
xchg
xor
pop
push
dec
nop
mov
aad
mov
in
sbb
xchg
sub
mov
inc
aaa
xchg
pop
pop
addb
inc
inc
fists
cltd
xchg
call
mov
mov
loopne
ficoms
sti
jmp
jmp
jmp
pusha
sahf
xchg
mov
adc
xchg
xor
xchg
mov
push
lea
sub
lret
push
add
jns
js
sub
sub
jle
push
xchg
lret
xchg
push
and
outsb
repnz
ret
mov
std
fstpt
fisttpll
adc
psubusb
and
push
pop
mov
dec
leave
cmp
jb
mov
mov
or
ficoml
pop
loope
jecxz
push
mov
outsb
inc
ljmp
mul
into
jg
mov
push
mov
ja
sbb
ret
into
fwait
mov
nop
dec
xchg
add
fwait
xchg
paddsw
add
inc
jmp
inc
sti
sub
int
sub
call
and
dec
push
mov
daa
int3
cmpsb
xor
mov
cmp
fldl2t
pop
jg
dec
xlat
int3
cld
and
sub
mov
js
inc
iret
jne
ror
cmp
addr16
xchg
lret
mov
test
repnz
jo
dec
insb
sub
mov
repz
ret
mov
outsb
mov
pop
aaa
pop
adc
or
shlb
rcrl
cmp
testb
jbe
outsl
shrb
jb
cld
xor
jae
push
inc
inc
pop
test
add
out
stos
add
mov
mov
xchg
cmc
pop
ror
push
in
sub
mov
push
mov
jno
lds
mov
imul
lret
cmpsb
jae
clc
idivb
mov
fdivrl
mov
mov
xchg
lret
dec
dec
repnz
fsubr
jmp
int3
xchg
lods
js,pt
arpl
mov
sub
jg
imul
sub
cwtl
mov
imul
add
int
in
fs
inc
mov
ljmp
add
imul
es
xlat
das
adc
cmp
cli
xchg
push
inc
push
lahf
pop
shrb
inc
int3
inc
test
test
sbb
std
cmp
ds
inc
pop
sbb
pop
das
jmp
in
push
dec
cli
mov
fsubr
or
insl
xor
das
es
xchg
mov
lea
out
sub
pusha
or
dec
or
mov
lea
ss
jb
outsb
clc
or
ret
rclb
mov
movsl
loope
mov
pusha
dec
rcl
dec
movsb
xchg
cmpsl
rcr
test
lods
shlb
bound
aaa
mov
arpl
xchg
test
loopne
mov
js
std
pop
jp
sub
outsb
mov
fs
push
sub
lock
dec
cmc
lods
popf
test
add
sub
negl
shlb
jbe
and
jns
lock
or
stos
cmpsl
sbb
fs
dec
in
pop
ljmp
fucomip
fnstenv
mov
mov
mov
negl
or
add
pop
jg
pop
pop
or
clc
popa
imul
add
pop
cs
jecxz
push
aam
pop
mov
adc
es
or
fildll
cmc
iret
ret
repnz
add
jl
dec
dec
push
loopne
mov
xchg
dec
in
cmpsl
rorl
insl
test
popa
inc
insl
gs
mov
outsb
cmp
sahf
or
jecxz
out
and
mov
or
movl
fstl
mov
push
sbb
xchg
sti
or
add
bound
ds
es
mov
repnz
or
cmp
nop
outsb
fsubrl
in
imul
mov
inc
fs
pop
dec
imul
jnp
call
and
loop
in
enter
hlt
aad
data16
les
test
jmp
mov
sub
movsl
mov
outsb
sbb
mov
inc
lea
cli
std
or
push
flds
jno
test
imul
cli
inc
cwtl
cld
repz
adc
lea
push
ds
cltd
xor
cmp
fidivs
sbb
iret
loope
lahf
mov
jmp
jmp
xchg
xor
pop
ret
loopne
scas
add
movsb
mov
outsb
pop
lods
mov
xor
and
cmpsl
scas
iret
dec
fstpl
jle
mov
sbb
and
lods
mov
push
xchg
mov
inc
repnz
or
fsts
xor
pop
cmp
out
insl
cmp
dec
fisubs
adc
cmp
xor
aad
mov
xchg
pop
test
cmp
inc
mov
cmc
mov
imul
pushf
test
aad
push
push
push
pop
or
movsl
sbb
add
inc
and
jg
mov
loope
xchg
or
mov
enter
insb
mov
es
pop
cmp
jmp
movb
call
xchg
sbb
dec
out
xchg
call
iret
mov
add
pop
mov
jmp
mov
cmp
mov
cmp
rorb
jl
scas
or
lock
rcrl
ljmp
scas
das
cli
lcall
dec
adc
fcomps
xor
sar
push
cmpsb
lea
mov
push
cli
xor
cld
orb
cmp
mov
mov
repnz
ds
fisubrl
xor
into
mov
std
and
lcall
out
xchg
lret
inc
pop
dec
std
aaa
cs
ljmp
int
in
test
call
and
xchg
rcr
or
mov
int
pop
or
lret
pushf
xor
cmp
or
jl
pop
push
imul
and
in
push
mov
pushf
pop
jmp
push
sbbl
adc
popa
pop
out
jle
mov
mov
mov
mov
pop
pop
dec
imul
roll
pop
lret
push
les
and
cmp
pop
adc
loopne
pop
arpl
faddl
pop
dec
dec
aaa
pop
xlat
cmp
jmp
inc
stos
mov
xor
mov
xor
pop
dec
arpl
sbb
stos
push
cwtl
mov
and
repnz
pop
dec
xor
into
mov
dec
popa
ror
or
mov
xor
xor
stos
inc
sbb
jo
xchg
or
sti
es
insl
add
cmp
pop
hlt
mov
dec
push
or
pusha
and
js
in
pop
mov
into
ret
cld
dec
inc
push
or
ss
and
rclb
xchg
call
mov
rorl
fildll
mov
clc
lock
jae
cli
add
and
sarl
pop
fwait
ret
loope
cmp
outsb
daa
stos
nop
cmc
push
jp
dec
sbb
push
orl
adc
mov
rorl
inc
xor
xor
xchg
fldt
add
in
xor
pop
push
cmpb
outsb
cmp
add
push
mov
mov
pusha
push
jno
jmp
stos
daa
inc
ja
stos
xor
hlt
cmpsl
mov
in
inc
movsl
enter
decb
xchg
mov
fs
lret
pop
pop
mov
hlt
cmp
jl
cmp
push
stos
mov
insl
jbe
cmp
adc
xchg
xchg
jmp
mull
test
inc
inc
mov
out
cwtl
push
pusha
mov
fs
dec
xchg
ret
cld
aam
push
jno
std
inc
sbb
sti
sbb
je
xor
rcll
cld
push
mov
rorb
sti
mov
rcll
mov
imul
fs
or
jecxz
daa
cmp
cmpb
nop
les
rcrl
adc
jno
mov
fs
les
sarb
out
mov
in
pop
pop
fisubrs
arpl
pop
mov
sbb
scas
cmpl
insb
inc
cmp
fnsave
mov
xchg
inc
sti
jbe
mov
push
fsub
inc
inc
jae
push
fsubrl
and
mov
pop
and
fwait
push
cwtl
outsb
cltd
jb
and
fmuls
mov
sahf
es
xor
sub
add
jg
leave
in
mov
fwait
cs
pop
loope
rorb
or
pop
ljmp
sub
and
pop
pop
mov
cmp
in
mov
mov
stos
fcoms
loope
pop
add
mov
push
movsb
call
test
jecxz
mov
sahf
test
ljmp
sub
clc
fsubrs
mov
sbb
inc
fisubs
jg
xor
push
insb
push
cltd
daa
push
pushf
pop
inc
mov
add
mov
and
cmp
sti
mov
pusha
insl
jno
mov
mov
cmpsl
push
inc
mov
inc
jl
mov
inc
cmpsl
jnp
arpl
sbb
or
sarb
xor
clc
inc
lret
loopne
sub
dec
mov
or
cmp
aaa
fwait
mov
xchg
mov
jno
mov
or
or
jp
xchg
dec
faddl
dec
andb
lea
jbe
mov
cmpsl
aas
int3
rcrl
mov
mov
pop
push
jle
mov
aaa
fistl
js
pop
push
jecxz
or
pop
jnp
mov
mov
or
data16
daa
sub
mov
push
xchg
pop
lcall
mov
push
out
loopne,pt
xchg
test
push
sub
inc
push
sub
out
insb
sub
lods
cmp
test
test
stc
out
test
add
inc
call
stos
test
cltd
mov
lds
je
cli
cmc
sarl
stos
inc
cwtl
mul
aas
jg
add
jle
or
mov
fmuls
sar
hlt
les
adc
testb
sub
leave
test
repz
push
push
leave
cmp
dec
xor
das
lret
and
and
adc
aad
xor
cmc
repnz
push
imulb
adc
fucom
lea
repnz
xchg
xchg
lret
in
mov
insb
dec
ljmp
leave
lods
sbb
sbb
lds
push
test
fnstenv
imul
insb
pusha
cmpsl
iret
adc
insl
xchg
loopne
mov
or
sti
jmp
shr
xchg
adc
dec
test
jg
fbstp
out
in
xchg
fistps
outsl
in
inc
sbb
out
nop
pusha
out
fisttpl
mov
adc
int3
mov
mov
movsb
repnz
icebp
pop
mov
aad
xchg
repz
dec
sbb
cmp
adc
mov
in
cmc
ror
testl
sahf
lods
test
mov
dec
stos
insl
jp
test
push
mov
xlat
jns
jecxz
pop
call
pop
xchg
inc
xchg
arpl
push
and
mov
or
rorl
pop
mov
jo
xchg
in
inc
and
sbb
jne
xor
push
int
push
out
test
outsl
jl
ret
mov
xchg
clc
jbe
orb
mov
add
jp
lcall
sar
pop
dec
mov
imul
movsb
mov
notb
and
or
lods
and
test
jl
cld
sub
outsl
lret
sub
xchg
das
xchg
inc
fisttpl
jmp
adc
inc
add
test
fdivl
movsl
or
pusha
insl
push
repz
cmp
fisubrl
or
adc
testl
sbb
sub
pop
cmpsl
inc
out
pop
or
push
in
out
pop
lods
leave
dec
movb
addl
cltd
movsb
cmp
subl
repz
js
lahf
sub
sub
jb
std
dec
out
xor
cmp
fdivrl
sub
cmp
push
pushf
and
push
dec
cmp
jp
cmc
int3
inc
jmp
jle
mov
pop
inc
mov
sub
movsb
xor
push
pop
and
je
adc
pop
enter
fbstp
out
je
orl
js
jo
movsl
and
mov
clc
push
insb
jg
push
call
popa
mov
notl
imul
dec
std
popf
mov
push
jp
stos
mov
ret
iret
cmpsl
enter
mov
adc
enter
add
push
push
inc
loop
mov
cltd
enter
sahf
push
sbb
pop
dec
cli
lock
call
cltd
mov
mov
aaa
xlat
dec
push
hlt
push
sub
push
jg
xchg
dec
test
sub
je
or
jge
cmp
inc
xor
cltd
xor
inc
xor
stc
push
lea
cld
stc
pop
cmp
and
pop
aaa
incb
push
mov
pop
cmp
lock
jmp
fmul
adc
imul
jae
idiv
jecxz
jg
in
jnp
mov
dec
cmp
sbb
call
fcomip
mov
mov
mov
ret
stos
lret
mov
jmp
movsl
hlt
dec
sub
mov
mov
cmpsl
mov
fiaddl
inc
add
mov
add
mov
xchg
inc
insb
pop
outsb
ss
push
enter
cltd
es
mov
push
sub
icebp
xor
rcrl
out
push
hlt
in
xchg
sbb
pop
cmp
aad
jmp
pop
icebp
sbb
dec
push
or
loope
mov
pop
int
cwtl
add
pop
nop
xchg
jecxz,pn
jb
addr16
iret
jmp
or
jp
inc
ds
jecxz
sub
xor
mov
jo
push
fsubs
sub
mov
out
sbb
xchg
movsb
cmp
or
repz
mov
xchg
cmp
pop
ljmp
aad
outsb
ret
rcll
xchg
mov
stos
les
aam
cmpsl
lock
insl
inc
jb
fld
cmp
je
aad
loopne
ror
lods
and
add
mov
push
enter
mov
pop
scas
push
or
das
out
mov
arpl
push
pop
ficoml
sahf
fcmovu
outsb
cmpsl
push
andb
mov
leave
lret
int
mov
js
push
or
daa
rcll
sub
sbb
jb
daa
loope
fsubrp
imul
mov
ficomps
loopne
pxor
jmp
mov
jle
xor
push
int
or
xor
mov
out
jb
or
lds
add
jae
ds
outsl
and
mov
call
pusha
jne
inc
mov
mov
push
inc
xchg
sbb
lds
cwtl
das
mov
adc
adc
iret
out
fwait
popa
xor
inc
popf
test
cmp
stc
fdivp
mov
enter
mov
adc
cmpsl
fcmovnu
push
icebp
jo
cmp
add
cld
fsubs
ljmp
adc
xor
mov
xchg
sub
fsubrs
sbb
aas
mov
movsb
lret
jp
mov
jp
and
jmp
push
shll
cmpb
lret
clc
es
push
and
push
xor
pop
cmp
in
lods
xchg
push
inc
cvtpi2ps
push
daa
mov
sbb
mov
js
mov
push
pop
shufps
push
xor
stos
push
or
xor
push
sbb
jnp
out
add
iret
lea
mov
sub
mov
jmp
cmp
mov
push
or
mov
add
mov
xor
cmpsl
push
stos
dec
add
out
mov
or
sahf
pop
sahf
pop
out
or
mov
jb
cltd
clc
inc
lret
in
xchg
sbb
inc
sahf
xchg
mov
lea
dec
push
je
test
ljmp
xlat
adc
lahf
shr
imul
mov
sub
mov
out
std
mov
cmc
call
fimuls
mov
fwait
adc
jge
subb
ss
addr16
inc
xchg
xor
mov
jle
int3
jo
adc
push
adc
xor
push
mov
pop
out
aaa
aas
mov
push
shl
mov
jmp
dec
dec
gs
push
insl
ret
cld
loopne
mov
outsb
call
bnd
jmp
aaa
jae
cmpsl
pop
leave
fisubl
insb
dec
xchg
add
add
and
and
subb
out
add
sub
push
inc
loopne
ret
jg
pop
jne
out
mov
add
push
movsl
in
test
inc
inc
rcll
mov
push
test
jae
les
ret
dec
xchg
lods
cmc
mov
insb
jp
lock
lods
out
ja
lret
insl
mov
push
std
fimuls
xchg
mov
pop
pop
mov
cmc
adc
into
js
insb
or
aas
cmp
jno
ss
stc
xchg
lret
arpl
mov
adc
mov
push
sbb
imul
gs
mov
sub
or
push
out
test
push
and
and
es
in
add
dec
int
xchg
sub
scas
fisubs
inc
inc
mov
and
lcall
xor
divb
xor
dec
fwait
or
lods
pop
loopne
fwait
add
inc
fmulp
in
inc
mov
outsb
push
and
pusha
inc
adc
cmp
mov
jecxz
ja
arpl
cmp
in
pop
loope
push
leave
test
into
addr16
jae
es
mov
xlat
fcompl
mov
daa
repz
mov
imul
inc
rcll
xchg
inc
test
xchg
or
out
inc
cmp
orb
cmp
adc
push
push
jmp
xor
cld
jmp
repz
lods
subb
dec
ljmp
push
icebp
stc
ljmp
mov
mov
add
mov
out
add
sahf
adc
mull
scas
je
iret
push
mov
push
or
js
push
data16
add
mov
jl
and
loopne
adc
or
out
xchg
hlt
cli
rdtsc
xor
push
jl
mov
jbe
or
clc
mov
jns
and
pop
fiaddl
out
jns
ljmp
inc
mov
sub
inc
jns
jns
out
into
repz
push
in
pop
repnz
jg
dec
mov
je
test
pop
pusha
jge
ds
sbb
adc
xchg
jg
and
and
push
sub
das
test
scas
pop
inc
addr16
pop
cmpsl
cmc
adc
dec
rcll
pop
and
in
sbb
sahf
xchg
inc
jbe
add
jmp
inc
icebp
mov
add
testb
or
xor
push
loopne
repnz
das
mov
loop
cs
mov
jmp
sbb
daa
inc
adc
mov
cmp
and
jmp
mov
adc
pusha
mov
loope
cmp
push
call
stc
inc
std
push
dec
lods
sub
jl
xor
ds
loope
arpl
inc
movsb
in
cmp
pop
or
and
xchg
cmp
aas
insl
push
pop
cmpsl
and
jmp
in
test
iret
ret
jae
pop
add
scas
xchg
inc
pusha
mov
sbb
rcr
popf
mov
push
out
lods
cli
cltd
inc
mov
gs
mov
in
or
cmp
mov
out
sarb
push
add
push
mov
jmp
int
inc
xchg
out
fldt
lock
negl
mov
int3
arpl
cmp
fs
cli
add
cmp
repz
cmp
aam
pop
mov
outsl
mov
add
sbb
rcr
adc
cmp
cltd
fcomps
or
and
test
subl
sbb
mov
std
inc
rcrl
xor
xor
mov
mov
adc
xor
imul
sub
inc
xor
xchg
outsb
leave
jae
and
push
sbb
xchg
pop
in
stos
mov
mov
jge
ret
sub
sahf
mov
test
pop
ja
push
xchg
stos
fwait
xchg
xor
jb
lods
cmp
js
or
push
into
in
inc
dec
out
rorb
pop
outsb
push
fisubs
jecxz
stc
andl
jle
sbb
xchg
adc
adc
mov
lods
sbb
or
adc
adc
inc
out
lret
ljmp
insl
fdivr
test
mov
sbb
add
jge
cli
mov
adc
adc
sbb
and
lea
mov
in
lods
cld
or
ret
out
pusha
add
and
decl
dec
sub
mov
dec
faddp
andl
cmp
je
xor
scas
cmp
repz
jns
subl
movsl
dec
cmp
sbb
cmp
dec
mov
push
test
int
lcall
inc
dec
and
leave
sub
push
fwait
xorb
push
faddp
inc
sbb
pop
rclb
rcl
cmp
pop
or
sbb
inc
xor
test
stos
pop
hlt
or
jb
push
sub
cmpb
sbb
int
inc
test
addl
rorb
test
or
sbb
xor
adcb
ljmp
loop
sbb
mov
cmp
add
inc
mov
adc
push
adc
insl
mov
fcoml
inc
clc
rep
jno
push
adc
imul
cmp
dec
pop
insb
lcall
data16
loop
and
dec
jge
dec
push
repnz
in
loop
adc
mov
sub
in
push
movsb
lea
push
pop
stc
cmp
popf
push
or
dec
xchg
outsl
mov
inc
xchg
inc
movsb
adcl
push
sbb
xor
and
cs
or
loope
sahf
jno
sbb
push
sbb
leave
out
and
adc
cmpsb
movsb
inc
loope
adc
ljmp
inc
scas
mov
push
xchg
das
repnz
and
bound
mov
fistpl
out
fstp
xchg
loopne
push
add
jmp
push
push
loopne
push
call
and
cltd
arpl
push
loopne
aas
and
mov
and
dec
lahf
cwtl
loopne,pn
or
cs
ds
fadd
push
fcomps
out
fwait
jo
into
js
sbb
negl
add
cltd
roll
call
cmp
push
mov
sbb
mov
sahf
in
and
stos
mov
ja
ss
in
sub
imul
lret
pop
sahf
lcall
add
pop
ss
test
xchg
xor
fiaddl
jne
or
aaa
jnp
pop
push
aam
cmc
sbb
popa
jnp
dec
mov
add
iret
aad
aas
aas
xchg
xchg
jge
ss
mov
add
jge
add
and
inc
nop
addr16
pop
stc
dec
add
jne
ficompl
out
and
imul
sub
cmp
in
icebp
je
push
push
shlb
or
dec
sbb
and
lods
outsb
lcall
outsl
mov
cmp
sarl
bound
addr16
mov
adc
add
add
jp
xchg
fldenv
xor
jge
out
mov
add
stos
jp
pushf
fs
cmp
shll
hlt
lods
fdiv
inc
pop
sarb
sbb
push
loop
push
cmp
or
jecxz
es
xor
adc
xor
jbe
push
add
ljmp
fiaddl
dec
flds
dec
cwtl
in
stos
out
lcall
inc
xchg
popf
add
jo
push
sbb
loope
cwtl
stos
fidivl
inc
aad
jno
cmc
dec
mov
xchg
mov
sub
dec
pop
xchg
out
nop
scas
adc
xchg
sub
mov
sub
negl
pop
pop
out
sbb
sbb
hlt
in
mov
push
shll
mov
jne
push
adc
pop
je
cmp
int
jmp
mov
mov
fdivl
jno
jl,pt
out
mov
imul
cltd
sub
and
aaa
or
cmp
mov
xchg
push
repz
add
cmp
call
outsl
push
rorl
xlat
dec
fmuls
divb
xchg
ss
add
mov
lock
cmp
lcall
movsb
sub
jne
js
call
pushf
imulb
ljmp
dec
ljmp
xlat
xchg
mov
frstor
mov
fiaddl
add
adc
orb
cli
sbb
out
lock
or
loope
sti
inc
or
int3
mov
inc
pop
loope
xor
fwait
adc
jno
in
sub
add
mov
add
insb
pop
sbb
enter
data16
lret
ss
fcmovbe
es
mov
or
sbb
in
sub
stc
xor
adc
arpl
xchg
fwait
mov
pusha
mov
in
push
pop
ficomps
mov
ss
fsubrs
lods
push
mov
add
sbb
jle
imul
xchg
sbb
mov
mov
lods
sub
dec
cmc
call
mov
jo
test
subl
push
jp
out
xor
ljmp
mov
xor
pop
pop
mov
or
sub
divl
je
fdivrs
std
adc
leave
xchg
xchg
pop
push
or
test
scas
mov
inc
je
mov
xchg
inc
lcall
idivl
lret
mov
leave
pop
xchg
imul
jnp
loopne
push
cmpl
dec
adc
movsb
lahf
stc
xor
dec
mov
outsb
lea
popl
or
aad
push
aaa
adc
xor
xchg
pop
xchg
cld
pop
daa
mov
or
adc
xor
imul
int
fstps
out
out
mov
sub
movb
cmp
pop
fidivrl
nop
adc
jae
adc
mov
mov
jmp
xor
mov
stc
lock
les
loopne
jge
outsl
inc
ds
xchg
mov
xor
lahf
ficomps
mov
faddp
pop
rorl
push
insl
add
mov
push
outsb
cmpb
scas
push
sub
xchg
daa
pop
int
xchg
fidivrs
and
cs
sub
sub
cld
scas
xchg
xlat
test
xchg
mov
inc
aas
rcrb
mov
adc
sbb
xor
dec
jno
fcomi
ds
mov
repz
mov
lret
loopne
mov
add
cmp
inc
movsl
mov
sub
inc
cmpsl
jns
cmp
jbe
mov
sahf
xorl
popa
adc
xchg
leave
push
cmpsl
ss
or
pop
mov
aad
mov
pop
sti
mov
push
insb
xchg
movzbl
push
fbstp
ljmp
insl
pop
mov
jl
ret
fsubl
imul
or
mov
mov
adc
lahf
inc
jno
mov
cmp
xchg
inc
orb
std
sahf
movsl
xchg
popf
sub
push
xor
pop
xchg
lds
inc
fucom
jae
xchg
sub
sbbb
sub
aam
enter
sub
cmp
jns
sbb
mov
xor
lds
in
dec
cmp
cli
xor
jae
push
ret
push
gs
mov
jo
bound
les
inc
pop
movsb
inc
jne
push
rcrl
cltd
jb
cli
add
test
jns
imull
ljmp
push
jecxz
stos
jo
insb
push
jmp
jno
das
push
in
dec
lret
add
sub
mov
xor
or
bound
xor
stos
push
lods
mov
pop
dec
jne
xchg
or
cwtl
int3
push
push
xchg
dec
sbb
xchg
fs
cld
cld
repnz
and
mov
or
inc
mov
xchg
pop
ret
xor
or
cwtl
add
cltd
outsb
lret
jo
xchg
xchg
lcall
mov
jno
je
ljmp
jo
jo
iret
adc
and
xor
xchg
inc
jp
mov
test
xor
shll
mov
pushf
lea
imul
pop
mov
add
iret
and
mov
pop
in
or
ss
icebp
mov
mov
gs
lods
pusha
inc
aad
dec
pop
in
sbb
xor
xchg
cli
popa
mov
popf
sbb
adc
lahf
adc
mov
in
cli
add
addb
out
or
hlt
scas
xor
test
xor
push
in
pop
mov
cmpl
enter
or
pop
sbb
jge
je
add
rcll
push
ret
ret
outsb
mov
outsl
fsubrs
xor
inc
into
cmc
pop
jmp
jmp
cmpsl
es
ja
repnz
fwait
lods
and
ds
pushf
xor
xor
popa
loop
out
gs
fsubp
mov
in
or
test
out
fistpl
jb
in
push
fxch
rorl
mov
dec
popa
jmp
and
or
loop
fs
lods
lock
jne
das
mov
push
pop
sbb
mov
push
mov
inc
and
out
mov
xor
add
xorb
dec
repnz
mov
das
xchg
mov
lods
push
or
xchg
pop
cmp
xor
fnsave
and
mov
lods
lret
subl
jae
adc
loopne
cmp
pop
lahf
js
jmp
xor
xchg
das
das
fdivrp
sbb
aaa
dec
mov
add
dec
rcr
or
fsts
push
mov
add
cli
lock
iret
and
push
jno
xchg
int3
xor
test
push
aaa
mov
mov
inc
add
mov
xchg
jbe
sarb
push
jmp
mov
or
fs
ja
xchg
aad
add
roll
xchg
jns
inc
cmpsb
add
mov
mov
gs
pop
pop
inc
test
push
dec
sub
xor
mov
jb
mov
mov
icebp
in
loop
bound
addr16
test
push
loop
adc
mov
in
jge
inc
shlb
mov
pushf
pop
pop
mov
test
add
loop
mov
mov
sbb
lret
movsl
push
icebp
add
lods
adc
push
inc
and
cmc
jmp
movsl
fs
fs
iret
dec
jmp
lea
lcall
das
lret
and
incb
aas
andl
int3
test
xor
outsb
sti
mov
mov
ret
xchg
out
mov
in
inc
pop
leave
mov
cmp
jl
jnp
aas
or
ret
push
dec
mov
jp
inc
pop
sarl
std
out
push
ja
adc
mov
mov
mov
repz
lret
decl
jge
mov
ss
add
jmp
mov
imul
dec
jae
push
and
int
mov
pop
mov
aas
testb
add
or
js
xor
add
cmpsl
xlat
add
xchg
outsb
hlt
imul
sub
sub
lret
data16
cmpsl
dec
jns
mov
ret
adc
lods
test
jno
xor
adc
xchg
and
adc
setg
and
insl
or
cmp
and
es
mov
push
xor
imul
leave
outsl
pop
shlb
or
xchg
sarb
sar
cmpsl
or
leave
cmp
loopne
and
fcoml
sbb
rcrl
stos
scas
out
sub
push
jp
cmp
add
adc
cld
mov
fisubrs
sbb
fidivl
fstpt
and
push
call
push
add
xor
loopne
es
nopl
and
jl,pn
ds
xchg
adc
in
fdivrl
mov
sahf
sti
or
hlt
mov
popa
cli
or
xor
mov
rcll
shlb
rclb
sbb
in
lea
and
push
out
push
mov
popa
dec
cli
inc
xchg
cmp
dec
lret
jg
ds
pop
xchg
mov
push
into
push
out
mov
lods
outsl
mov
pusha
or
rcll
pop
lret
xchg
mov
jo
add
and
je
push
mov
sbb
ret
push
jb
int3
mov
dec
xorl
push
mov
pusha
sub
cmp
repz
loope
mov
decl
stos
mov
data16
inc
push
push
cld
xchg
or
test
mov
inc
sub
mov
mov
or
mov
inc
daa
aam
cld
js
jns
sbb
push
mov
xchg
jne
pop
push
inc
mov
jge
outsl
insl
mov
out
out
es
or
outsb
dec
inc
mov
xor
ret
fld
fs
js
jle
int
cmp
ficoml
dec
dec
clc
shrl
xor
out
adc
clc
mov
mov
push
sub
lock
aad
xchg
bound
cwtl
xchg
cltd
jo
shrl
dec
cwtl
movsb
and
outsb
adc
mov
lcall
lods
je
lods
push
cli
fdivrs
xchg
out
les
imul
arpl
mov
mov
add
icebp
sbb
push
mov
rcll
add
jp
mov
or
das
stos
int3
popf
fwait
push
and
jno
int3
push
mov
xchg
mov
jno
arpl
mov
ror
int
sahf
push
lret
push
dec
movb
xlat
jne
cmpsb
ja
outsl
pop
lcall
xchg
in
and
pop
jbe
sub
jo
out
sub
imul
repnz
dec
mov
cmp
and
mov
xchg
cmc
push
dec
iret
sbb
push
xchg
dec
jmp
inc
xchg
ds
in
into
xor
add
int3
pop
adc
dec
jns
mov
loope
fisttpll
data16
dec
and
enter
data16
repnz
xor
nop
fsubrs
xor
or
add
xchg
ret
xor
push
xor
jecxz
or
dec
in
push
aaa
aad
and
loop
jb
xor
shrl
adc
rclb
adc
mov
mov
in
daa
jge
js
sub
adc
push
imul
jmp
xchg
jmp
test
dec
inc
fcomi
fst
int
and
es
les
dec
or
jmp
pop
out
xchg
lahf
xchg
fistpll
pusha
std
rorb
jle
mov
insl
adc
addb
adc
stos
inc
subl
cmp
jecxz
mov
push
xchg
jmp
cmpsb
sub
pop
ret
idiv
ret
add
pop
push
push
cmc
fwait
aam
stos
xor
mov
das
pop
xor
test
mov
push
stc
jmp
push
mov
data16
insb
or
fsubl
jmp
adc
stos
dec
cmc
add
pop
aaa
pop
adc
test
loop
flds
fs
sub
push
sub
mov
insb
xchg
jae
lock
push
mov
push
aam
add
scas
fildl
insb
shlb
inc
sub
xlat
pop
mov
add
mov
push
into
sbb
xorb
pop
in
mov
xchg
push
shl
dec
call
jge
fs
ss
addr16
and
pop
pushf
push
or
add
mov
divb
in
dec
cmpsb
outsb
pusha
sbb
cmpsl
pop
mov
xor
push
inc
pusha
mov
dec
dec
cmpsb
sbb
sbb
lret
mov
adc
jno
aas
xor
mov
jbe
movd
test
cmpsl
sub
in
adc
int3
push
pop
stos
ficompl
cmp
adc
jg
sub
and
xor
jg
mov
xchg
popf
lret
inc
les
push
mov
imul
inc
cmc
sub
shl
push
xchg
or
cld
inc
pop
cmp
loopne
rcrb
push
push
orb
and
sbb
lret
dec
xchg
sub
inc
aad
sbb
pop
sub
aas
or
rcll
sbb
btr
mov
rolb
imul
ret
mov
inc
out
fistl
in
stos
ret
insb
mov
sub
nop
cltd
or
adc
lods
cmc
rcrl
data16
push
mov
sbb
jnp
std
movsl
mov
lods
ret
es
add
xchg
test
mov
test
xor
adc
lods
jae
lods
imul
hlt
leave
pop
or
sub
dec
or
jno,pn
int3
lock
lahf
xchg
lcall
push
ret
sub
push
mov
and
std
fdivl
lods
inc
add
test
test
addr16
in
outsb
fadds
sub
adc
or
pop
mov
insb
jl
neg
push
arpl
test
int3
fstpt
dec
adc
jecxz
out
inc
push
nopl
xchg
pusha
jg
sbb
iret
divb
roll
sbb
or
fbstp
inc
and
lret
jp
mov
cmpsl
and
mov
jo
pop
js
adc
dec
std
xor
lret
rolb
lea
inc
xlat
icebp
fwait
aaa
sub
cmp
mov
lea
mov
xor
std
sub
xlat
xchg
fiadds
repnz
insl
roll
or
push
pushw
sbb
and
adc
push
scas
out
jb
mov
mov
bound
imul
fisubl
inc
push
jnp
std
in
lock
jecxz
pop
aaa
dec
test
add
negb
enter
adc
repnz
je
loope
lods
test
mov
repnz
loop
test
push
rcr
push
push
cmp
mov
call
pop
jne
ret
or
orl
cmp
enter
and
inc
jb
fcmove
cmp
shlb
mov
aad
cmp
jecxz
cmp
cmp
dec
adcb
ret
sub
push
cmp
test
rorb
xchg
jl
mov
outsb
or
mov
sti
cmc
ljmp
insl
repz
cmp
stos
mov
clc
aaa
xchg
sub
xchg
adc
fdivrl
pop
pop
push
mov
pop
mov
xchg
pop
xchg
mov
mov
cmp
xor
or
aad
and
in
sub
jae
dec
loope
jns
sub
insl
nop
in
ljmp
lods
dec
in
fisttps
stos
xor
mov
repz
pop
iret
in
fnsave
cmp
adc
push
stos
mov
stos
rcrb
lea
cwtl
or
cmp
int3
and
mov
pop
arpl
nop
ljmp
and
pop
out
popa
int
pop
out
jp
dec
mov
lods
aaa
push
hlt
add
ljmp
lea
jge
push
inc
call
xorl
in
and
push
push
adc
add
mov
fidivrs
frstor
xchg
mov
jb
lahf
adc
jl
cmp
pop
aas
ret
std
jmp
mov
js
fsqrt
jae
mov
push
mov
xor
push
daa
mov
stos
pushf
add
lret
jl
hlt
dec
add
adcl
aam
cwtl
ljmp
cmp
fdivrs
out
sahf
add
dec
test
ljmp
fcmovnu
dec
pushf
push
xchg
shlb
pop
push
mov
call
ja
pop
mov
sub
xchg
sbb
daa
pop
or
hlt
iret
popf
dec
in
sbb
xchg
inc
loop
lods
sub
cs
or
mov
addr16
cmp
and
sbb
fdivp
mov
lods
cli
mov
mov
fwait
loope
add
int
lock
out
jne
cltd
or
movl
adc
mov
rorb
xchg
rorb
or
add
enter
inc
or
fildl
xchg
inc
sub
inc
idivb
outsb
jle
and
arpl
adc
push
and
jbe
scas
jmp
add
add
fbld
xchg
jg
pop
and
daa
jbe
sbb
das
inc
ss
xor
push
imul
mov
xchg
fs
jg
and
cmc
xchg
inc
pop
arpl
adc
cmpsl
cmpsb
sbb
dec
xchg
pop
popf
mov
cld
sbb
jle
jle
das
xchg
pop
pop
jp
inc
outsb
mov
std
pusha
adc
sbb
mov
mov
xchg
pop
sbb
sarb
mov
fs
cld
xor
fwait
out
inc
aas
fisubl
mov
push
sahf
addl
fisttpl
xchg
jb
idivl
sub
mov
cmpsl
addr16
lds
inc
xchg
xchg
lock
das
lock
jne
dec
xchg
mov
xchg
push
pop
push
mov
sbb
cli
dec
pop
fwait
cmp
inc
lret
scas
ljmp
ret
outsb
jns
ljmp
mov
adc
push
rorb
cmp
jl
pop
lds
push
mov
adc
inc
out
into
mov
rcr
bound
dec
push
rorb
movsl
mov
loopne
xchg
pop
or
xchg
test
push
in
pop
ja
push
dec
sbb
mov
dec
idivb
cmp
mov
xor
inc
sbb
xlat
mov
insl
je
ret
dec
insb
into
in
rcr
pushf
jbe
jae
xchg
adc
adc
mov
cmc
mulb
lea
push
in
subb
in
and
fwait
cltd
popa
leave
lods
or
adc
mov
or
mov
sbb
ja
enter
or
mov
xchg
leave
leave
int3
fists
inc
movsb
mov
sbb
jle
fs
push
loop
mov
dec
xor
or
and
outsl
pop
out
popf
aam
data16
cmp
iret
pop
jle
inc
sbb
dec
sub
loopne
pop
mov
insb
xor
dec
stos
scas
cmp
sub
dec
out
push
xlat
mov
dec
popf
int
leave
sub
int
lcall
cmp
lahf
mov
repnz
add
stos
mov
add
jecxz
cmpsl
lods
cmpsl
mov
mov
xor
push
sub
lea
or
imul
cli
cltd
inc
or
or
xchg
mov
inc
sbb
mov
daa
rcrl
mov
mov
out
add
push
in
inc
jo
dec
push
cmp
jg
ja
ss
mov
mov
imul
lahf
out
cli
rcrl
jecxz
adc
testl
decb
jbe
mov
add
push
insl
or
push
repnz
xor
xor
inc
aam
xor
rorb
mov
push
xor
rcll
jp
jb
sub
mov
adc
mov
jb
and
push
out
std
fdivs
fidivrs
sub
lods
cli
or
pushf
sub
pusha
xor
or
in
leave
pop
lock
aaa
push
in
dec
xlat
insb
ret
push
ret
push
shlb
add
aas
les
test
or
jmp
jl
ror
inc
sbb
mov
scas
add
fcoml
dec
in
push
push
push
fwait
push
xchg
scas
popa
call
mov
sbb
lock
push
pop
push
mov
xor
not
and
add
ljmp
jg
dec
scas
jmp
mov
jle
lahf
cs
mov
imul
or
sub
xchg
iret
or
xor
mov
es
jmp
in
movsb
sbb
sbb
dec
sbbl
test
mov
shrb
lahf
in
adc
lds
pop
pushf
jb
mov
movsl
cs
dec
jb
mov
push
xor
out
out
cmp
js
pushf
sbb
jb
fs
cmp
jecxz
mov
ljmp
aas
into
cli
and
xor
sbb
fidivrs
in
mov
xchg
push
stos
cmp
into
cld
int
int3
outsl
or
aam
mov
cmp
push
lret
sub
mov
outsl
iret
fwait
jb
std
es
xor
data16
mov
test
pop
dec
mov
mov
dec
repnz
cmp
stos
imul
fidivl
bound
loope
pop
fstp
xor
xchg
fsubr
imul
adc
add
mov
cmp
cmp
out
pop
mov
fisttpll
push
xor
adc
scas
je
test
mov
je
add
popf
sbb
cld
xchg
xlat
and
fsts
dec
push
xchg
mov
aad
push
inc
outsb
lret
mov
jmp
pop
push
fldt
cmc
dec
arpl
test
test
je
movsb
xlat
jno
fwait
leave
sbb
cwtl
clc
out
or
fstpl
inc
incl
lahf
in
scas
xchg
scas
adc
mov
lahf
movsb
inc
enter
enter
pop
lds
cltd
sub
aas
xchg
daa
sub
push
repnz
jge
mov
jmp
lcall
lret
rolb
inc
pop
or
iret
mov
pushf
ja
cmp
mov
cmp
or
jne
loope
hlt
push
sub
imul
and
and
and
inc
push
imul
xor
mov
push
xchg
roll
pop
jecxz
mov
jne
xor
fwait
sbb
push
mov
fcoms
test
cmpl
test
bound
jb
lods
fadds
outsl
sub
and
adc
xchg
scas
or
push
sti
lret
cli
cmp
cmp
push
mov
jne
stos
dec
dec
jnp
iret
sbb
ljmp
or
xor
adc
jno
push
or
pop
in
and
movsb
fs
fimull
imul
shrl
pop
das
sub
je
mov
imulb
call
jecxz
call
or
mov
cmpsb
or
fs
leave
fistps
int3
ja
repnz
sti
xor
scas
stc
mov
push
cmp
add
cmpsl
ja
nop
dec
ficompl
jp
mov
xlat
loope
insl
cmpsb
adc
mov
iret
xor
arpl
ret
mov
mov
es
mov
ljmp
xor
imul
loope
mov
and
fisttpll
shrl
lahf
rolb
orb
sub
and
pop
adc
inc
scas
add
out
xchg
mov
jno
lret
jmp
mov
cmpsb
xor
pop
loopne
hlt
push
inc
jno
push
push
cmpsb
outsb
sti
jnp
mov
mov
mov
jo
mov
mov
dec
orb
inc
inc
arpl
sahf
addb
add
sahf
pop
adc
mov
add
in
mov
aad
dec
cwtl
enter
cwtl
shl
insl
enter
movsb
inc
insl
push
stc
jo
subb
jg
mov
sub
xor
scas
mov
shll
xchg
shlb
fs
stos
pop
add
movsl
mov
sbb
and
and
testb
or
mov
into
jle
lret
adc
xor
push
adc
popa
sbb
mov
mov
pop
in
cmp
loope
xchg
xchg
or
lret
fwait
or
lds
lret
pop
movsb
dec
into
daa
push
test
or
jecxz
cmp
mov
inc
push
repnz
movsb
fwait
lea
inc
push
inc
testb
call
enter
neg
push
jbe
pop
outsb
es
mov
pop
pop
popa
inc
int
aam
jnp
mov
jg
div
xlat
mov
rorl
sti
loope
cmp
insl
pop
mov
loopne
arpl
jae
jo
pop
jmp
mov
cmpsl
std
lds
mov
add
rcl
imul
xorb
mov
xor
pop
lahf
jmp
arpl
push
mov
fwait
out
pop
pop
xchg
adcb
push
mov
adc
mov
push
mov
cmpsb
and
imul
cli
mov
add
leave
ljmp
add
add
cmp
sub
xor
mov
ja
jbe
out
scas
xchg
push
push
mov
mov
pop
xchg
dec
mov
xchg
ss
inc
pop
cmp
sarl
fwait
leave
int
enter
cmp
rcrb
pop
loope
leave
lods
jecxz
addl
push
cld
in
dec
sar
mov
mov
dec
cmpsl
mov
mov
rclb
int3
inc
inc
mov
rcr
mov
jl
imul
xor
mov
sbb
ljmp
or
ds
mov
xchg
and
inc
inc
out
repnz
dec
mov
inc
mov
jecxz
addr16
pop
mov
icebp
pop
pushf
inc
jne
pop
imul
and
xor
add
lds
and
jns
xchg
push
in
addr16
repnz
pop
fcoms
pushf
adc
mov
cmp
orl
fmuls
arpl
into
js
aam
mov
xchg
sub
std
add
pop
out
pop
dec
mov
lock
xchg
scas
sub
xor
daa
nop
add
scas
pop
fimuls
aaa
push
outsl
jmp
in
imul
push
in
lods
sti
divb
push
subl
aad
popf
leave
adc
adc
xchg
in
adc
aaa
adc
loop
jl
push
xor
sti
cmp
fcmovbe
dec
lds
cmc
repnz
sub
jge
rcrb
pop
or
and
mov
mov
loopne
inc
dec
and
xor
mov
or
rorb
lret
addr16
mov
xor
sbb
and
jae
fmull
inc
lds
pop
cmp
dec
jo
notb
push
cmp
and
xchg
mov
mov
dec
xor
mov
shll
out
push
lds
shr
sarb
pop
mov
jo
jno
repnz
push
pushf
pop
mov
xchg
inc
mov
jae
jnp
cs
mov
pop
cltd
movsb
imul
xchg
addr16
sahf
xchg
inc
dec
fucom
push
mov
cmc
popa
test
cmp
ss
ja
pushl
add
mov
outsl
pop
add
stos
mov
mov
pop
test
outsl
pop
mov
movsl
xchg
cmc
imull
fdivrl
push
mov
sub
insl
mov
daa
fists
lea
sub
lds
dec
mov
fiadds
mov
pop
test
movsb
outsb
int3
xor
dec
data16
out
mov
repnz
divb
jge
in
push
fisubl
cmp
add
dec
lea
dec
mov
mov
mov
in
jg
cmp
js
fsubrs
stc
cmp
arpl
out
sub
push
lcall
jmp
data16
xchg
stos
add
daa
gs
push
sbb
fsub
das
fcompl
jle
mov
jnp
mov
sub
int3
sbb
sbb
xchg
pop
xor
xchg
js
and
cmp
lcall
cmp
out
xlat
mov
roll
mov
in
popf
cmp
cmp
in
mov
aam
imul
add
mull
inc
sbb
into
jne
xchg
cmpl
scas
test
jnp
inc
jae
insl
out
jnp
test
xor
xor
aaa
lods
fidivs
cmp
cmp
loope
jns
and
idivb
fmull
cmp
in
mov
ss
out
push
mov
pop
notl
cmp
sbb
daa
jg
sti
cltd
lods
in
aaa
sbb
lock
and
fists
lcall
lds
scas
repz
das
in
and
sbb
push
ret
mov
rorl
mov
mov
push
xchg
scas
stos
aam
daa
out
xchg
adc
les
das
pop
daa
xchg
cwtl
pop
fwait
cwtl
mov
mov
mov
dec
jmp
test
scas
xor
jb
fidivs
ficomps
xor
sbb
bound
popa
fisubrl
je
or
leave
pushf
sbb
cmp
insl
repnz
stos
insl
push
jnp
iret
scas
int
mov
loopne
mov
xor
jo
and
dec
lret
cltd
outsb
xchg
lods
push
sahf
sbb
pop
test
adc
pop
jecxz
int
xor
loop
sub
scas
out
pop
imul
bound
jg
fstps
ret
adcb
push
push
rorl
xlat
push
adc
and
insl
mov
aam
ss
movsb
push
popa
mov
stos
into
cli
pusha
adc
push
shl
cmp
loope
xlat
ljmp
ljmp
popa
loop
adc
sub
ret
cs
mov
filds
in
jno
xor
mov
call
cs
sbbl
add
ret
mov
mov
fst
dec
aas
mov
int3
je
clc
sub
inc
mov
daa
mov
ss
int
xchg
stos
push
outsl
mov
movsb
sub
pushf
ljmp
inc
cmc
repnz
imul
leave
cmp
sub
stos
and
mov
fnstsw
test
pop
cwtl
sbb
clc
cmp
outsl
sub
xor
or
xor
fadds
cmp
cwtl
in
flds
lods
mov
clc
mov
adc
bound
jns
orb
ljmp
enter
and
mov
pop
bound
xor
pop
cmp
mov
testb
dec
xor
ljmp
dec
sti
cmp
sub
mov
lods
hlt
aam
cli
pop
pop
adc
xchg
adc
repz
pop
imul
in
and
test
insb
iret
in
pop
roll
adcl
testb
pop
lods
pop
or
dec
ss
iret
je
pop
mov
jnp
out
jnp
movsl
sarl
mov
mov
push
jae
mov
stos
jnp
and
imul
mov
add
insb
fbstp
jnp
jns
adc
push
mov
sbb
sarb
cmpsb
leave
jnp
repz
pop
xchg
mov
testl
cmp
gs
test
iret
jns
inc
dec
mov
int
add
subl
out
pop
sub
sbb
push
sub
mov
sbb
dec
je
xchg
inc
adc
test
aaa
aaa
jl
pop
adc
ds
rcrl
pop
dec
pop
mov
hlt
adc
int
sti
loop
or
scas
rclb
testb
sub
adc
rol
int
in
xchg
push
mov
adc
add
jb
xchg
push
mov
dec
jecxz
mov
cli
popf
hlt
je
jbe
mov
iret
popf
lea
push
pop
sbb
xchg
rorl
add
in
xchg
fsub
push
lock
cwtl
xlat
inc
lock
popa
pop
push
fisubl
mov
push
push
je
push
add
xor
push
adc
imul
push
xor
jp
aam
or
in
add
and
sub
lret
loope
add
std
js
divb
adc
jg
xor
cmp
jno
pop
addr16
pop
push
mov
jb
pop
jne
in
stos
fadds
and
loope
aas
mov
pop
test
pop
cld
add
add
xchg
pop
or
xor
repnz
cmc
ret
add
push
and
test
cmp
pusha
das
sub
call
ror
loope
pop
xchg
inc
sbb
adc
xor
push
clc
pop
push
scas
push
cmpsl
loop
popf
adc
mov
xor
jmp
jmp
or
js
mov
mov
add
in
dec
jnp
push
stos
insl
jge
mov
mov
pusha
lret
mov
in
mov
xchg
lock
loope
inc
jbe
pop
icebp
or
divb
mov
pop
and
sti
test
data16
loopne
cmp
add
xlat
mov
mov
or
lock
mov
push
adc
movhps
add
enter
xchg
sbb
jne
pushf
jg
mov
jbe
push
mov
push
loope
jbe
sahf
es
push
loope
nop
and
hlt
movsb
fs
std
mov
jb
leave
shll
popf
adc
popl
push
stc
lcall
hlt
int
adc
outsl
xchg
enter
mov
push
fldenv
dec
jl
jle
inc
lcall
mov
jle
xor
rclb
mov
ja
push
scas
or
jge
imul
sub
ret
dec
push
fists
or
inc
gs
out
inc
fcomi
xor
mov
jge
dec
sahf
xchg
inc
xchg
pop
mov
inc
iret
or
daa
lock
jne
add
ds
mov
test
adc
stos
ss
push
add
out
inc
push
xlat
inc
fucomip
mov
fildll
in
test
fwait
in
cmp
jne
xlat
jbe
add
cmpsb
push
insl
idiv
jp
dec
jmp
xchg
or
lea
inc
dec
lea
mov
das
hlt
pop
scas
inc
shr
adc
das
xchg
jmp
jle
mov
xor
jp
mov
push
sub
in
push
xchg
insb
cmp
inc
lods
jmp
dec
cs
and
outsb
js
mov
jg
dec
insl
xchg
scas
dec
popf
and
jno
sub
pop
outsb
push
notb
and
loope
pushf
cmpsl
lods
pop
aas
xor
repz
fdivrs
cmpsl
aaa
inc
xchg
dec
mov
inc
and
mov
jmp
daa
sub
out
push
push
dec
repz
sub
cmp
pushf
test
arpl
mov
out
aaa
cmpsl
jmp
pop
les
and
dec
adc
popa
lcall
jae
xor
pop
pop
jl
loopne
pop
inc
mov
movsb
out
iret
lahf
pop
test
dec
popa
sbb
hlt
mov
sub
shl
push
add
mov
into
mov
pop
lahf
jb
xchg
out
cli
pop
push
in
jae
inc
jecxz
testl
addl
jno
jecxz
testl
fisubrs
xlat
pusha
popa
mov
xor
mov
sbb
in
mov
ja
scas
dec
mov
cmp
leave
fstl
lods
out
out
jb
mov
jl
ficomps
mov
in
andl
add
add
jmp
lods
xor
aas
je
mov
aam
cmp
xor
stos
dec
int3
iret
cmp
cwtl
mov
jae
inc
inc
fwait
cmp
cmp
mov
jmp
leave
xchg
cmp
mov
fdivrl
and
pusha
or
lret
push
jno
mov
mov
test
xor
jmp
xlat
clc
push
aaa
lods
imul
cld
mov
leave
mov
dec
arpl
in
add
mov
push
int3
sbb
mov
pop
ret
mov
pcmpgtd
stc
in
inc
mov
stos
jnp
add
leave
addl
repz
adc
jmp
int
dec
popf
inc
lock
flds
lahf
data16
fisttps
ljmp
leave
insb
out
mov
xlat
mov
mull
xor
popf
pop
aas
cld
in
outsl
lret
mov
nop
and
aas
xchg
ret
fsubrs
mov
aad
push
push
pop
sahf
xor
loope
xchg
xor
sbb
dec
xchg
xchg
iret
cmp
dec
inc
inc
mov
int3
lea
iret
jo
jb
xchg
push
mov
jae
and
sub
pop
cwtl
lods
inc
cmp
jge
daa
stc
pop
fstp
dec
cmpsb
xchg
sub
or
jmp
xchg
scas
and
xor
jle
xchg
iret
jnp
dec
or
cmp
ret
addr16
pop
js
mov
xchg
in
xchg
je
testl
sub
push
mov
sbb
mov
mov
or
push
arpl
test
lods
jmp
sbb
dec
das
fdivl
lcall
sbb
adc
dec
cmp
fs
pop
ss
adc
push
inc
dec
xor
test
and
in
xor
jmp
sub
pop
push
das
lock
adc
push
and
adc
xchg
dec
adc
int3
dec
xchg
add
push
adc
cmp
cmp
sub
cmp
dec
in
adc
es
dec
cmc
jecxz
and
pushf
mov
or
fwait
popa
and
scas
lcall
mov
sbb
mov
mov
sbb
jne
shll
cld
shl
int3
pop
ja
mov
stc
jp
sub
sub
inc
test
xor
int
bound
daa
jge
mov
push
lods
add
mov
stos
into
sbbb
fs
jmp
jns
sahf
dec
and
or
lods
ret
dec
xchg
dec
and
adc
push
je
loopne
scas
fwait
jo
or
pop
out
out
adc
jae
das
xor
ljmp
outsl
xor
lock
add
in
xor
pusha
aad
ljmp
mov
lods
rep
adc
pop
clc
jb,pn
pop
lahf
movsb
mov
push
mov
pop
pusha
dec
out
jne
movsb
jle
jecxz
test
leave
pop
mov
sbb
lods
push
or
sub
mov
mov
add
into
jl
pop
cmc
jge
jle
inc
in
xchg
cmp
movsl
stos
jp
mov
aad
repnz
fldcw
add
imul
lods
fsubrs
adc
imul
pop
sub
ret
cmp
inc
pop
mov
test
andl
shlb
push
jmp
inc
or
adc
mov
popa
lods
and
jbe
lods
jo
ret
push
lock
sub
dec
inc
push
lock
les
iret
out
or
call
xor
leave
sub
pop
sub
enter
xor
je
adc
add
push
aam
mov
in
je
jnp
push
fiaddl
sub
xchg
in
and
dec
fcmovnu
mov
adc
or
blci
loop
test
and
push
aad
je
mov
cwtl
jp
push
xor
push
aam
xor
testb
mov
cmp
and
fmuls
pop
adc
pop
cmpsb
sbb
leave
cltd
lods
fisubs
pop
inc
xlat
sbb
push
ljmp
into
dec
gs
adc
cmpsb
rol
fs
dec
inc
sbb
cmp
loopne
add
lahf
call
movsl
xchg
mov
mull
enter
pop
add
loope
icebp
mov
dec
fmull
orb
divb
cmp
inc
mov
pushf
sarl
fisttps
test
sbb
sahf
fstps
fldt
mov
into
fwait
out
daa
rcl
push
xchg
push
push
cld
sbb
cld
lcall
std
dec
xchg
out
repnz
mov
pop
inc
adc
int3
rcrb
add
pop
fucomip
jae
dec
push
sahf
scas
pushf
mov
pusha
ss
sub
rcll
aam
push
mov
lret
call
and
lods
in
sbb
out
push
jmp
add
in
loope
sahf
jl
and
inc
pushf
sub
push
xor
icebp
sbb
das
cltd
add
scas
jnp
sbb
and
fcoml
push
insl
cmpsl
jbe
test
jnp
insb
inc
lock
hlt
xchg
bound
jecxz
cmp
fsts
movsb
xrelease
call
cmp
std
mov
lahf
leave
mov
call
mov
adc
in
call
dec
xor
movsl
jno
pop
es
jle
hlt
jecxz
out
jnp
lret
inc
sub
adc
call
dec
loope
mov
aaa
lret
inc
and
add
push
xchg
jge
push
cmp
push
out
dec
mov
in
push
mov
dec
push
jno
lahf
lock
mov
jge
lret
and
cwtl
dec
xor
mov
dec
divb
cltd
pop
mov
and
pop
pop
enter
push
shll
dec
inc
cs
nop
sbb
push
das
dec
push
sub
popf
cli
enter
adc
or
stos
cmp
dec
hlt
scas
jns
sub
mov
sbb
xor
int3
daa
fdiv
imul
xorb
pop
dec
dec
dec
ret
mov
cltd
sbb
into
dec
rcr
inc
repnz
and
repz
int
test
leave
xlat
frstor
mov
lea
mov
aam
arpl
xor
jg
jne
adc
xchg
pop
mov
push
testb
inc
stos
int3
xchg
cmpsb
pusha
mov
dec
mov
xor
and
push
scas
jbe
out
fisttpll
push
cmp
mov
adc
cld
xor
movsb
mov
sbb
jp
jp
lods
sbb
sahf
lods
mov
ret
mov
push
xchg
pop
pop
in
rcll
sub
repnz
imul
xor
out
push
mov
fadds
mov
mov
cmpl
ret
push
or
xor
fs
cmp
stc
inc
jmp
stos
adc
sub
cmpsl
mov
in
adc
lds
dec
sub
xor
sub
popf
mov
mov
cmpsb
and
push
push
aas
mov
mov
sahf
dec
sub
xor
push
mov
and
out
dec
stc
imul
out
xchg
ret
xchg
pop
cmp
jne
lret
jb
jo
faddl
push
inc
sub
cmc
sbb
pop
or
outsl
or
int
cmp
sbb
cld
or
lock
push
in
out
xlat
test
and
js
test
or
mov
xchg
sub
cmp
or
frstor
push
pop
pop
shlb
daa
test
test
in
mov
push
sbb
fistl
subb
sbb
les
rep
dec
insb
push
dec
pop
stos
xchg
negb
imul
outsl
push
insl
jbe
jnp
xor
call
pop
xchg
xor
xchg
mov
cmp
sub
lcall
cmp
es
xor
out
outsb
out
fldl
inc
subb
arpl
push
jmp
push
fwait
lods
hlt
cmp
or
jl
call
sub
clc
adc
and
pop
enter
and
cmp
inc
mov
int3
push
gs
sbb
lea
adcb
dec
leave
adcl
movd
jge
testl
push
stos
add
adc
sbb
insl
lret
push
push
xchg
movsb
and
andl
icebp
ss
mov
pusha
lcall
in
pusha
pop
cmp
or
jecxz
push
aas
roll
cmpsb
mov
daa
cmp
lods
lcall
mov
in
xchg
xor
clc
imul
ja
mov
arpl
out
es
repz
add
jle
pop
mov
es
mov
cmpsl
notl
lods
mov
jp
sub
stos
ja,pn
sbb
sub
pop
cmp
repz
lods
mov
lret
outsl
loopne
inc
lods
mov
pop
add
dec
xchg
cmp
stos
gs
ja
mov
inc
inc
mov
rorb
sbb
add
adc
fcoms
jbe
push
or
add
mov
mov
xor
sbb
push
jmp
rolb
andb
ficomps
dec
push
test
mov
fwait
imul
in
fwait
jmp
xchg
xchg
cmpsl
repz
inc
mov
js
inc
lcall
xchg
movsb
push
addr16
pop
mov
rdtsc
mov
lret
push
sbb
mov
test
outsb
jb
xchg
imul
mov
push
inc
jl
xchg
out
mov
dec
lahf
pusha
ja
out
add
push
add
movsb
xchg
xchg
mov
xchg
test
imul
jns
sub
xchg
push
es
fs
in
adc
andl
lods
icebp
mov
cmp
jbe
dec
mov
roll
mov
pusha
xchg
idiv
mov
jo
sub
out
je
mov
push
mov
iret
xlat
adc
hlt
sbb
jnp
leave
xor
mov
xchg
lds
mov
xchg
jne
nop
int
in
les
inc
xor
and
pop
outsl
inc
mov
call
push
xor
pop
lds
push
aas
jno
pop
and
cmp
dec
lahf
inc
pushf
scas
repnz
shrb
repz
or
ljmp
mov
mov
and
mov
loop
mov
sti
das
mov
jae
add
xorb
and
mov
ficoml
xchg
popf
lret
iret
lods
cwtl
out
fmull
and
mov
xchg
out
addr16
insb
stc
mov
movsl
sub
in
fsubrs
into
or
dec
imul
or
je
ss
jne
cmpsb
popa
fildll
or
jge
pop
test
xchg
sti
pop
jge
adcb
sub
or
mov
loopne
es
xorl
inc
cmp
dec
jmp
mov
inc
lock
pushf
xchg
gs
divl
lea
inc
enter
jo
out
pop
lret
sar
or
fistpll
dec
das
mov
pushl
repnz
aam
out
cmp
in
shlb
in
jg
cld
or
mov
or
dec
aaa
push
mov
jp
adcl
mulb
inc
mov
es
mov
xor
xchg
ja
ds
jg
mov
in
test
sbb
and
lahf
cmp
scas
xchg
sub
lods
fisubs
push
mov
cld
faddl
mov
movsl
das
push
rolb
mov
jg
fabs
loop
mov
jbe
sbb
fistpll
or
push
fs
xor
mov
mov
and
imul
sti
mov
inc
imul
sbb
lods
xchg
jo
testl
mov
inc
mov
push
xchg
jno
test
pop
mov
xlat
or
inc
xor
fs
aad
jae
mov
mov
data16
jns
ficoms
dec
jmp
cmp
pop
fs
mov
xchg
dec
sahf
jb
xchg
xchg
int3
fs
xor
mov
scas
fldt
ds
stc
outsb
js
push
int
or
dec
pop
mov
and
insl
pop
and
xlat
stc
sti
scas
xor
scas
inc
or
sub
ljmp
jle
das
pop
xor
mov
dec
dec
cltd
pusha
fs
inc
pop
pop
xchg
xchg
insb
jp
mov
into
mov
in
mov
mov
cmp
mov
dec
stc
sub
push
pop
or
cmp
mov
mov
mov
aaa
out
add
cmpsl
dec
bnd
enter
int3
jecxz
mov
in
pop
pop
in
sti
lods
sti
or
shlb
psubw
inc
daa
shrl
sysexit
orl
xor
jno
aam
popa
mov
mov
fiaddl
test
push
push
icebp
inc
aaa
leave
mov
lcall
add
outsb
js
aas
push
fisttpl
fwait
xlat
in
rcrl
inc
popa
call
stos
rclb
movsl
cltd
jp
pop
fstps
mov
inc
insb
dec
push
stos
movsb
adc
mov
repnz
jg
inc
inc
xchg
inc
decl
xchg
jmp
xor
lret
sbb
sbb
stos
mov
addl
stos
jo
orb
lods
aam
repnz
loop
dec
pop
lret
ja
repz
cmp
xchg
pop
push
jmp
and
pop
andb
xchg
in
inc
add
push
mov
in
dec
push
dec
xchg
aad
pop
data16
and
fldenv
adc
cmc
inc
fisubrl
cmpb
mov
hlt
shr
add
pop
fadd
mov
nop
mov
insl
dec
call
aam
sub
cwtl
outsl
jb
push
add
mov
shrb
mov
lret
fistl
inc
pusha
mov
mov
pop
xchg
dec
fs
push
jge
sbb
or
push
test
sbb
cmp
push
roll
xchg
sbb
adc
inc
cmp
fmulp
in
pop
pop
add
add
sbb
cmp
mov
nop
fs
jno
jne,pt
outsb
jg
sub
sbb
iret
outsl
add
xor
stos
mov
in
xchg
mov
stc
push
aaa
popa
in
pushf
dec
das
into
in
xor
loopne
fs
stos
lcall
decl
lock
stos
mov
dec
inc
jp
pop
cmp
inc
cs
insl
adc
xlat
sti
xchg
stc
mov
js
cmp
std
gs
inc
test
dec
dec
insb
jns
pop
inc
std
pop
iret
add
jo
loop
xchg
xchg
gs
lds
out
out
movsl
std
jae
repnz
inc
sbb
out
dec
stos
lret
test
sbb
jle
adc
push
rorl
or
sahf
mov
inc
sub
pop
jmp
js
mov
mov
or
mov
sarb
xor
adc
and
push
addb
sub
cmp
lock
add
ret
push
adcl
mov
xchg
cltd
pop
out
pop
xchg
mov
and
out
cmp
lods
enter
cmpsb
pop
sbb
or
pusha
ds
mov
faddl
jge
sub
push
daa
ja
mov
add
jnp
jo
adc
mov
imul
lcall
nop
lods
cwtl
rcl
xchg
ja
xchg
shlb
push
loop
ja
clc
push
pop
ljmp
sbb
mov
mov
aaa
pop
mov
push
popa
lret
fwait
jp
mov
outsl
xchg
jle
xchg
inc
mov
icebp
sbb
out
mov
fdivrp
stos
add
dec
pop
cmc
fadd
inc
out
movaps
aam
cmc
jns
pop
or
sahf
or
fisubl
xchg
cld
fsubr
inc
loope
push
cld
lcall
das
ljmp
cmp
aaa
pop
inc
push
cltd
enter
int
xor
jns
pop
and
rcll
pop
aad
lret
loop
lret
jp
iret
movsl
outsl
xor
lods
adc
scas
add
jmp
stos
into
in
push
jp
mov
push
lcall
jge
mov
outsb
dec
sub
mov
jg
ds
mov
xchg
xchg
sub
outsb
push
test
mov
xchg
jp
xchg
lods
mov
mov
sarb
repz
data16
xor
mov
pop
jns
xchg
xor
sti
xor
inc
pop
adc
cmp
aam
aaa
popf
pop
jnp
ret
adc
add
lods
sbb
enter
or
cltd
push
jl
or
pop
ret
push
sbb
push
js
cmp
sub
rclb
fwait
sbb
lahf
pushf
cmp
and
add
xlat
jo
shlb
pop
pusha
das
nop
dec
sbb
dec
dec
xor
das
out
and
icebp
or
out
sbb
fisubl
xlat
fcoms
xchg
into
mov
repz
lods
mov
clc
jbe
lahf
sysret
cmp
sub
ds
fnstenv
in
mov
push
mov
mov
lcall
in
xor
push
je
in
lock
mov
sarb
and
rorl
jecxz
push
add
push
mov
aas
leave
movsb
enter
jp
lret
jge
mov
xchg
mov
leave
xor
add
movsb
xchg
shll
cmp
jo
xchg
jae
xchg
cli
or
xor
leave
jp
or
jmp
loope
xor
testb
mov
jg
xchg
mov
in
dec
adc
icebp
mov
xchg
mov
or
ja
loope
xor
xor
push
mov
das
sbb
mov
and
mov
push
mov
je
and
shrl
dec
loopne
sub
inc
clc
cmp
pop
xlat
inc
cmp
in
pop
mov
mov
movsl
out
push
out
pop
sub
fnstcw
jbe
adc
mov
fwait
push
xchg
cmp
push
mov
sti
ss
pop
xchg
test
xchg
xorb
sahf
xchg
mov
cmp
sbb
mov
mov
sub
pop
adc
xchg
je
sub
sub
ja
arpl
cltd
icebp
int3
pusha
out
add
imul
push
sub
mov
push
outsb
mov
fwait
bound
sbb
cmp
cmpsl
cli
cmc
in
adc
repz
aas
out
cmpb
or
dec
xchg
cs
xor
xor
test
nop
xor
repnz
pop
cmp
cli
mov
fst
push
push
add
decb
je
fldl2e
cmp
ret
xchg
ss
mov
jl
arpl
push
inc
xor
aam
cmpsl
imul
jno
aam
lods
aam
xchg
mov
pushf
out
insb
xor
test
mov
push
out
and
xor
add
fldcw
mov
mov
push
arpl
push
clc
loopne
xchg
lret
pop
outsb
sbb
add
xchg
ljmp
adc
and
lea
inc
dec
out
ret
scas
jle
stos
mov
loope
bound
mov
shrb
sbb
pop
push
xchg
mov
jge
lcall
push
add
into
add
test
adc
sti
mov
jmp
out
ret
rorl
xorl
or
add
imul
sbbb
lods
sub
shlb
in
and
mov
negl
add
lcall
in
adc
xchg
fiadds
lock
negl
rcll
fdivr
xor
mov
aas
pop
lcall
adc
sbb
les
push
sbb
and
fnstcw
lret
mov
daa
push
jno
lret
and
jnp
xchg
loop
insl
push
out
mov
inc
jmp
int3
add
push
sbb
test
cmp
xchg
push
shl
xchg
sub
ficomps
bound
cmp
cli
into
or
sub
shlb
subl
sbb
push
daa
mov
data16
dec
inc
out
clc
lcall
cmp
jno
aas
aaa
lret
add
or
pop
sbb
sbb
aaa
add
fsts
movsb
test
pop
inc
xchg
aaa
inc
pop
cmc
adc
imul
lcall
orl
js
jo
out
js
movsb
sub
cmpsb
fdivrs
mov
cld
jbe
sarb
clc
insb
xor
inc
lret
pop
pop
mov
mov
loop
xor
pushf
pop
mov
adc
mov
inc
fstps
xchg
mov
xor
xchg
ret
icebp
pop
add
lahf
jle
cwtl
mov
inc
inc
pop
push
push
add
cmp
jmp
js,pt
pop
aas
xor
adc
mov
das
mov
jg
pop
adc
aad
adc
or
add
cwtl
lcall
aam
fs
testl
xchg
cmpsb
out
fwait
and
pop
stc
xor
js
jne
cmpsb
or
scas
aaa
mov
inc
push
xchg
test
ret
cmpsl
inc
call
fnstcw
sub
inc
push
and
xchg
mov
mov
add
lock
std
dec
jno
stos
imul
sub
in
shlb
mov
pop
loope
out
pop
lahf
adc
push
ja
orl
and
jo
push
mov
xchg
aaa
std
stos
xor
mov
imul
xchg
fnstenv
loop
mov
jno
and
lock
push
sub
adc
ljmp
xchg
test
add
pop
xchg
dec
mov
ret
dec
push
cmpsl
inc
jno
mov
mov
inc
mov
mov
cmp
das
sbb
ljmp
in
or
pop
add
pushf
xor
add
mov
lods
into
mov
icebp
dec
lahf
xchg
bound
and
adc
data16
cmp
push
repz
daa
insl
adc
mov
test
xchg
fnsave
jp
popa
pop
mov
push
repz
clc
cmp
pop
les
jmp
or
cmp
push
movsb
xor
mov
mov
scas
or
decb
imul
test
cmp
push
mov
add
pop
test
pop
mov
mov
mov
test
dec
push
sub
xchg
jae
add
pop
das
mov
dec
jo
pop
sub
cltd
loop
pop
jns
pop
fwait
push
and
mov
sub
std
cmp
cmp
jg
out
push
dec
ret
into
fwait
pop
inc
or
or
mov
xchg
lods
movsb
pop
inc
loope
pop
fstpl
call
rcr
and
out
jl
sbb
bound
in
in
pop
test
jns
xchg
nop
fstpt
cli
lods
jae,pt
push
push
inc
push
mov
mov
or
mov
ss
add
ja
sbbl
shrl
lods
dec
jl
jns
xchg
lods
add
sbb
jo
push
mov
adcl
shll
loope
cmc
test
aam
loop
sahf
gs
jecxz
insb
movsl
je
xchg
inc
xchg
push
xlat
in
xor
loopne
shrb
rcrb
or
std
sbb
inc
ficomps
int
jno
call
fimuls
gs
shrl
mov
adc
inc
andl
daa
cs
jae
in
stc
inc
lret
jmp
jne
sub
cltd
popa
and
js
cli
mov
and
dec
xchg
lret
xor
in
pop
add
popf
leave
aaa
xchg
rorb
mov
arpl
sub
popa
stos
mov
ljmp
add
dec
fistpll
mov
rcrl
sub
clc
sbb
jae
scas
movsl
lret
imul
push
gs
rol
bound
mov
sbb
fsubrl
bound
cmovge
xchg
repnz
std
fstpl
jge
mov
out
adc
out
add
push
cld
pop
mov
jmp
xor
cmp
dec
js
pop
cmp
pop
xchg
int3
or
add
pop
fisttpl
inc
insl
push
jmp
dec
cltd
dec
sub
mov
inc
test
cwtl
dec
mov
iret
mov
inc
lahf
add
out
mov
sbb
loope
xor
les
or
dec
adc
inc
dec
push
push
mov
xlat
mull
out
aaa
test
inc
std
loopne
cmpsl
idiv
pop
pop
xor
test
std
add
int
rclb
mov
inc
lods
test
dec
repz
test
lea
lods
mov
int
mov
gs
pushaw
shlb
and
or
gs
das
aad
aaa
mov
js
adc
frstor
test
in
fdivl
arpl
scas
or
mov
repnz
cltd
cmp
dec
sub
inc
pop
sbb
daa
subl
popf
rclb
es
movsb
xlat
std
bound
movhlps
xchg
insb
mov
in
ret
cmp
jle
test
xchg
xor
pusha
cmpl
in
sbb
pop
cmp
lret
jmp
push
xor
scas
pop
outsb
movsl
sti
dec
or
inc
cmpsb
sahf
fucomp
jno
pop
sbb
cmp
xchg
iret
mov
pop
fidivrs
test
outsb
sbb
arpl
dec
lret
sahf
lcall
addr16
stos
and
fucom
ss
sahf
aam
cltd
add
adc
test
out
push
sub
aad
cmpsb
add
cwtl
sub
adc
clc
add
mov
mov
jbe
cmc
dec
pop
mov
inc
xchg
sahf
pop
xchg
adc
xchg
xorb
pop
dec
mov
loop
pop
mov
xchg
cmp
xchg
ds
jmp
sbb
mov
and
push
sbbl
or
mov
insb
mov
pop
pop
cmp
daa
movsl
mov
out
scas
cmp
mov
xchg
arpl
in
cmpsl
pop
testl
aad
xchg
cmpsl
lahf
and
jno
jnp
fstpt
and
cmpsb
sahf
xor
cmp
insb
sub
lds
jo
adc
push
mov
sbb
sub
inc
inc
push
cmp
fstpl
nop
scas
pop
fs
adcl
jg
mov
mov
fistpl
lret
jg
je
jle
jecxz
pushf
xor
mov
cmp
adc
out
cmc
push
pop
sub
jae
add
xchg
mov
or
fwait
xor
lock
xchg
test
and
inc
and
mov
push
inc
mov
lahf
xchg
int3
ss
stc
xor
dec
add
push
cmp
add
pop
xchg
mov
adc
inc
jnp
jmp
inc
jmp
aas
shll
pop
mov
cmpsb
xor
jo
add
push
lea
call
jae
cmp
lret
mov
xor
int3
and
fwait
adc
dec
pushf
mov
sub
aam
mov
stc
inc
lret
inc
mov
mov
lret
mov
sarl
cmp
mov
jbe
jecxz
cmc
outsb
data16
dec
jmp
aaa
mov
dec
dec
and
mov
add
inc
sub
jg
insl
ret
notl
insb
mov
and
les
jno
sub
pop
loop
mov
in
mov
fucomi
sub
ja
test
pop
std
out
shrb
hlt
jne
and
jns
mov
pushl
mov
test
or
or
xchg
sbb
push
cmp
testb
call
pop
test
lret
cli
scas
orb
jmp
dec
aaa
adc
adc
xchg
mov
test
in
movsb
cmp
jg
mov
test
xchg
lret
adc
dec
leave
in
jecxz
ret
push
push
loop
add
xorl
das
sub
fnstsw
lahf
xchg
stos
fadds
push
dec
xchg
ret
xchg
pop
add
mov
or
lods
inc
stc
sbb
xor
xchg
jne
push
popa
stos
or
hlt
or
pop
movsl
stos
mov
lods
sub
pop
mov
ljmp
xchg
cmp
cmp
arpl
sub
lock
idiv
sub
cmp
cmpsb
popf
adc
test
jge
pop
inc
scas
mov
pop
push
mov
icebp
jmp
out
jae
insl
out
ss
xor
pop
jno
mov
pusha
mov
pcmpeqd
dec
fisubl
popf
inc
ss
insl
leave
ja
cmp
lret
jp
add
loopne
add
cmp
mov
hlt
push
sub
ss
sbb
and
sbb
cmpsb
adc
int3
mov
mov
pusha
add
cmpsl
or
xor
inc
fsubrl
lods
es
cmpsb
mov
dec
cmp
sub
stc
add
dec
mov
adc
xor
jg
sub
jl
mov
push
dec
shll
daa
pop
shl
push
cwtl
sub
and
stos
stc
data16
mov
jle
and
and
loope
movsb
mov
bound
leave
jge
insb
xchg
imul
xor
test
dec
cmp
mov
pop
mov
test
lods
scas
add
push
pop
andl
sub
fcoml
jecxz
cmpsb
movsl
movsb
clc
dec
imul
cltd
daa
cmp
cmp
sbb
fldl
aas
enter
cmp
test
sbb
andb
ljmp
inc
or
jge
int
jl
ds
sub
in
xchg
fs
loop
push
sbb
ss
lret
and
jp
loop
outsb
adc
shll
xchg
push
in
jge
jne
cmpsb
fisttpl
ss
inc
ficomps
in
pop
and
sbb
mov
out
jecxz
fstps
adc
pop
push
push
repz
jne
test
loop
adc
enter
push
mov
push
sarl
adc
dec
or
jno
pop
and
enter
push
sub
dec
ja
or
inc
mov
mov
arpl
mov
in
in
aaa
mov
add
ror
sbb
cmp
in
orl
xor
je
xor
test
mov
jo
sub
and
lods
pop
add
jae
out
mov
stos
hlt
fadds
mov
mov
lea
inc
jmp
xchg
pusha
pop
pop
stos
in
pushf
pop
pop
lods
mov
lds
aam
loopne
or
les
mov
popf
push
jle
inc
and
cmp
cmc
cmc
dec
repz
sbb
jecxz
xor
mov
scas
or
add
pusha
adc
rcrb
jmp
sbb
and
js
jns
out
jae
sahf
cmp
lods
adc
pop
dec
mov
dec
and
pop
test
sub
push
iret
les
adc
xchg
mov
cmc
mov
js
sub
pop
inc
pavgb
rol
enter
popf
xchg
lret
mov
popa
cmp
xchg
jb
sub
divl
or
mov
out
scas
jle
xchg
inc
or
sub
mov
xchg
pop
mov
fnstsw
mov
jl
aad
pop
xchg
popf
into
stos
daa
pop
mov
addr16
mov
pop
ret
mov
push
insb
jns
push
xchg
xor
jmp
aad
xor
jp
call
ljmp
enter
xchg
int
inc
cmp
sbb
and
or
sbb
dec
mov
mov
sbb
scas
xor
mov
mov
fstpl
inc
mov
lods
fdivrl
sub
movsl
adc
cmp
js
dec
sarl
fldenv
addr16
dec
js
and
out
sub
cmove
insb
inc
or
push
lods
jno
push
out
xor
enter
inc
mov
push
hlt
inc
or
in
inc
mov
dec
mov
xchg
clc
inc
jb
cmovle
mov
hlt
mov
arpl
cmp
das
ficoms
mov
mov
stc
inc
test
lds
dec
std
mov
push
mov
pop
repz
add
xchg
leave
push
jle
popf
in
test
je
repnz
inc
jae
push
jmp
outsb
mov
or
and
and
jb
mov
fcmovnbe
imul
aam
and
sbb
out
js
mov
lods
dec
pop
outsb
adc
xorl
adc
mov
inc
xlat
ficompl
inc
lds
pop
pop
lcall
popa
mov
aas
mov
in
mov
loop
mov
ficoml
push
xorl
sbb
negl
leave
lea
pop
fisubl
mov
pop
fs
add
leave
push
jne
std
pop
push
movsb
int
stos
popa
mov
inc
arpl
add
cli
sbb
fs
xor
sub
inc
sbb
orb
xor
dec
pop
mov
rcrb
mov
in
and
icebp
cmp
repnz
jae
stc
scas
jae
popa
fsts
push
xchg
lret
gs
arpl
je
lahf
dec
xchg
fnsave
jp
out
ret
mov
lcall
aam
jmp
int
pop
xchg
lret
loop
nop
aaa
lahf
cmp
xor
dec
outsl
or
cmp
jno
cwtl
and
call
push
ret
in
repz
xchg
std
lcall
xchg
jmp
xchg
cmpsb
icebp
jle
test
add
stos
mov
mov
push
dec
add
repnz
push
pop
inc
jbe
mov
and
mov
mov
in
das
xchg
jmp
inc
pop
sbbb
mov
mov
push
sbb
add
iret
jmp
test
jo
lret
jbe
pop
xorl
repnz
mov
fidivs
dec
inc
and
sub
rorb
cli
and
xchg
jb
push
jge
sbb
xor
dec
repnz
in
mov
mov
rcrl
sahf
idivb
test
fcomp
xchg
and
out
fs
inc
insl
lahf
xchg
adc
andl
or
rcr
xor
lock
xor
jns
loop
in
dec
addr16
lods
sbb
add
das
pushf
or
out
mov
mov
dec
pusha
sub
jae,pn
cli
mov
pop
pop
imulb
lods
sbb
push
dec
cmp
ja
sarl
push
push
push
lds
cmpsb
fiadds
push
xor
repnz
inc
int3
adc
or
repz
in
fldenv
movsb
addr16
pop
loope
mov
clc
mov
sub
int3
cs
pop
test
test
xor
jmp
fs
les
lret
cld
insb
sbb
iret
push
fsubrs
xchg
sub
and
jns
cmp
cmp
or
mov
lahf
pusha
push
push
pop
cmp
mov
enter
ret
call
jb
ds
jns
cwtl
add
inc
lea
ds
cmp
xor
dec
bnd
jns
jle
add
adc
les
or
rcrl
aad
ret
fdecstp
in
inc
mov
testl
pop
dec
pop
jno
repz
decb
push
jae
mov
add
push
inc
in
movsl
jb
dec
cmc
sub
dec
cmp
sub
ret
pop
bound
js
dec
adc
xor
shlb
sub
je
cmp
fiaddl
lcall
iret
call
cwtl
push
jecxz
test
mov
cmpb
les
or
push
outsl
xor
pop
leave
add
movsb
lcall
fimull
pop
mov
insl
popa
or
inc
xchg
dec
stos
push
jo
mov
cmpsb
xchg
div
lret
sbb
pop
icebp
push
loop
push
mov
mov
je
fdivs
mov
push
icebp
lods
xchg
xchg
add
push
je
push
pop
cld
and
sbb
jb
pop
jg
jb
or
test
jecxz
adc
jnp
pop
xchg
jecxz
aas
fidivrs
hlt
movsl
mov
out
cli
xor
xchg
insb
dec
mov
cmp
push
xchg
inc
jmp
inc
gs
pop
pop
push
stos
xlat
dec
pushw
dec
push
aas
xchg
cmp
pop
dec
adc
movsl
leave
xor
shll
jle
aad
insl
xor
fcomps
mov
outsb
push
pop
mov
hlt
repz
daa
leave
dec
inc
popa
cmp
insl
bound
xchg
cmp
add
mov
call
movsb
inc
xchg
adc
jp
mov
lds
mov
mov
pushf
dec
test
jge
mov
loop
je
mov
sub
fcoml
jle
mov
lock
fstps
mov
aas
and
pop
xchg
adc
mov
add
out
pop
fldt
push
add
push
shll
jb
push
push
sbb
sub
roll
mov
cmp
and
xchg
leave
sub
xlat
fidivrs
jo
push
inc
les
push
xchg
jae
xor
mov
gs
fsubrs
cmpl
push
dec
sbb
push
cmpsl
sbb
mov
xor
subl
shll
jbe
inc
mov
imul
push
push
cmp
adc
xor
jg
lods
xchg
add
les
stos
sub
js
arpl
iret
adc
int3
and
scas
sub
jmp
pop
pop
jg
int3
mov
xlat
and
or
pop
ret
pop
xor
cmp
push
sbb
sti
cltd
push
fsubrl
stc
or
lods
inc
es
orl
xchg
mov
mov
mov
movsl
popa
mov
or
adc
into
add
mov
or
adc
jmp
pop
and
lret
push
je
jbe
add
test
push
repnz
push
sub
out
std
mov
loopne
pop
sbb
dec
mov
dec
sbb
movsb
add
mov
mov
out
insb
sarb
cli
and
mov
aas
loopne
sub
sbb
adc
les
mov
scas
mov
mov
jle
add
ret
mov
hlt
jne
xor
add
mov
inc
and
cmp
daa
dec
aas
jp
add
adc
jp
sub
sub
dec
jecxz
push
jl
ret
and
add
jge
inc
push
xchg
rolb
mov
xorl
mov
or
loop
movb
fisubs
pop
push
xor
pop
inc
jl
push
mov
jle
ja
jno
cmp
dec
sub
addr16
outsb
lds
and
dec
mov
mov
lods
xor
test
adc
ss
and
mov
dec
nop
lret
pop
and
dec
cmp
mov
cmp
test
sbb
mov
repz
sub
push
jmp
cmp
cwtl
jge
xchg
sti
insl
jmp
cltd
movsb
add
lret
or
out
mov
push
or
aas
int3
in
xor
jecxz
dec
test
notl
cmp
ss
scas
in
sbb
and
lods
lock
mov
or
dec
xchg
pcmpgtb
mulb
cmp
gs
pop
push
dec
mov
es
es
inc
xchg
pop
lods
sub
mov
or
inc
push
ret
inc
xchg
std
dec
pushf
mov
mov
lds
or
sbb
pop
jmp
test
sbb
call
cld
xlat
scas
dec
hlt
pop
cmp
dec
push
popa
pop
xor
sarb
mov
inc
mov
pop
pop
mov
test
mov
pop
mov
mov
imulb
int
or
in
xchg
aad
lods
ljmp
adc
mov
xor
sbb
adc
je
shll
mov
arpl
pop
ficoms
push
jbe
adc
lods
les
lret
je
add
push
xor
rcr
outsl
stos
mov
cltd
pop
inc
outsb
arpl
adc
push
mov
pop
icebp
repz
imul
fwait
pop
out
and
std
test
mov
cmpsl
mov
loop
movsb
idiv
cmp
and
mov
xchg
lret
pop
xchg
pop
xorl
xchg
push
fldcw
push
xchg
or
aad
mov
rcl
lcall
fidivl
sub
insl
mov
pop
into
cmp
push
dec
dec
dec
jge
and
add
pop
leave
push
test
ss
mov
push
mov
cs
push
jb
ds
dec
xor
les
ret
enter
add
out
insb
add
adc
pushf
outsb
movsl
inc
mov
fsubrs
into
fsubrl
fbstp
mov
iret
stos
ss
push
lcall
sub
mov
dec
stos
cmp
cmp
outsb
insl
stos
outsl
scas
cmp
notl
daa
add
pushf
ret
cmp
rcrl
pop
fildll
mov
bound
cli
fcoms
lods
lret
jnp
outsl
cmp
cmovnp
fiaddl
jae
dec
xchg
pop
fnsave
mov
sarb
pop
jge
inc
sub
fs
adc
xchg
les
dec
sub
pop
leave
cwtl
add
pop
lds
fmul
cmp
pusha
addr16
lds
adc
mov
jae
aam
cli
xchg
mov
pop
icebp
adc
xchg
das
mov
xor
add
mov
mov
test
xor
inc
mov
mov
not
xor
push
insb
loope
cwtl
and
jbe
xor
fstpl
xchg
add
std
push
rcrl
outsl
push
rcrl
fdivs
push
mov
fstpl
lret
and
mov
flds
popl
mov
cltd
iret
lods
pusha
arpl
cmc
inc
js
add
enter
xlat
jb
mov
cli
dec
mov
ret
xchg
or
xor
sbb
xchg
mov
sub
divl
push
jae
scas
push
stos
mov
cmp
push
dec
cmp
xor
ret
jl
stos
dec
push
enter
sbb
mov
jecxz
ret
sub
insb
imul
pop
shl
sub
mov
in
and
push
decb
sbb
imul
cld
insl
imul
adc
pop
in
jecxz
icebp
mov
xor
jnp
xor
fwait
inc
js
lret
stc
fcmovbe
and
leave
inc
dec
mov
aaa
add
sbb
xchg
sbbb
cld
mov
or
sbb
sbb
mov
sbb
shll
sub
inc
mov
lds
andl
jo
adc
call
mov
and
fsubl
xchg
fwait
test
or
fiaddl
jns
sbb
shl
bnd
sbb
mov
xor
sbb
lods
aas
outsl
jo
jle
adcl
mov
movsl
cmp
xchg
lcall
repnz
lret
sub
lcall
inc
sbb
jecxz
inc
and
frstor
enter
loope
xor
xor
aas
leave
or
into
jmp
xor
sbb
and
sarb
xor
testb
dec
or
in
or
pop
jbe
fadds
out
xor
mov
enter
faddl
std
add
push
jmp
ja
mov
cmp
test
adc
mov
cmp
addl
jp
mov
out
lret
mov
loope
inc
sbb
popa
pop
dec
insb
test
push
mov
cld
adcb
not
call
cmp
and
and
pop
adc
sahf
or
movsb
jmp
test
jl
jae
stos
popa
adc
aaa
scas
pop
lcall
cmp
call
cmpsb
jge
push
das
popa
mov
sub
in
xchg
es
leave
sub
in
add
std
push
cmpsl
fs
push
and
xchg
cmpsl
pop
out
imul
dec
rcrb
loop
dec
in
ja
mov
xor
push
or
and
je
ds
xor
adc
pusha
int
leave
sub
xchg
loope
push
or
loop
xor
aam
sub
pop
and
enter
popa
push
ficoml
or
mov
dec
push
imul
push
xor
flds
or
add
loope
push
push
daa
fstl
push
fs
pop
mov
pop
cmpsb
out
cmp
shl
lret
pop
adc
xchg
cmpsl
dec
xlat
add
inc
xor
popf
dec
mov
jo,pt
cltd
jo
js
jp
rorb
mov
fadd
loopne
pop
aam
jno
push
add
pop
sub
jecxz
xchg
cmp
push
mov
push
int
aaa
pop
and
test
lea
pop
sahf
jp
bnd
inc
or
pop
add
inc
fsts
add
arpl
mov
jns
imul
cli
inc
fsubrs
stc
push
sub
jmp
sti
ror
inc
xchg
or
rclb
sbbl
xchg
add
arpl
dec
fnsave
xchg
aad
in
mov
cmpsl
jge
in
pop
aas
jo
mov
sti
call
xchg
shlb
cmc
jmp
jle
cmc
mov
mov
dec
es
mov
lret
and
lret
cs
mov
add
orb
popf
jecxz
jp
xor
dec
loop
add
fs
mov
js
test
mov
mov
orb
mov
mov
js
popf
and
popf
pusha
push
pop
lahf
push
mov
xlat
xchg
mov
add
outsb
and
jo
inc
and
shl
xlat
sbb
push
mov
mov
out
add
lret
jae
mov
sbb
shll
adc
in
inc
popf
jo
dec
lret
mov
cld
dec
lret
jp
jno
iret
shrl
fisttpl
sbb
mov
dec
test
incb
popf
ss
or
mov
xchg
dec
xchg
popf
adc
js
out
pushf
stos
sbb
dec
pop
hlt
mov
mov
cmp
jnp
iret
inc
sbb
sti
add
popa
repz
fidivrl
daa
fs
xchg
int
scas
loop
jbe
inc
loope
push
push
xor
jmp
mov
jl
rolb
jne
in
cli
push
dec
mov
popa
and
cmc
push
aad
sub
xchg
gs
push
push
enter
test
xor
sub
negb
out
in
mov
add
out
push
push
imul
les
adc
jl
push
pop
rcll
test
sbb
push
cmp
daa
pop
decb
mov
and
ror
pusha
xor
jno
pop
push
les
js
addr16
cmc
nop
sti
hlt
push
inc
movsb
sbb
xor
les
ret
out
out
test
xchg
inc
imul
push
adc
pop
add
mov
and
dec
negl
arpl
dec
dec
flds
add
pop
adc
pop
xchg
jno
aaa
push
xchg
clc
sbb
repnz
mov
xchg
imul
out
rorb
imull
jo
add
repz
leave
dec
pusha
pop
sub
dec
adcl
pop
or
mov
jb
cld
pop
es
ret
cmp
je
addr16
mov
adc
push
xchg
in
mov
and
std
sub
lcall
sahf
push
test
dec
fwait
insb
jmp
fs
sbb
or
xchg
imul
cmp
addl
in
sbb
stos
add
mov
xor
jecxz
test
or
rolb
sub
add
pop
and
decl
fidivl
adc
dec
inc
inc
push
stc
mov
fcmovne
dec
mov
repz
outsl
leave
mov
pop
pop
lcall
lea
xchg
or
lcall
addb
add
pop
std
addb
mov
xor
arpl
xchg
or
out
xor
addr16
out
jge
jecxz
rclb
cli
jle
push
enter
sub
adc
jnp
sbb
xlat
clc
lahf
cmpsb
push
sub
sub
ss
fcmovbe
movsl
imulb
cwtl
shlb
sbb
inc
pop
push
mov
jle
das
hlt
mov
xor
test
push
out
mov
cwtl
fwait
hlt
in
adc
pop
xor
mov
movsl
xlat
pop
add
mov
or
clc
mov
iret
bound
jecxz
push
mov
sbb
inc
ljmp
sub
in
outsl
aaa
inc
and
xor
mov
lock
push
shll
rcll
or
push
cli
sub
popa
daa
je
jl
cmc
lods
sbb
loop
mov
and
jge
inc
cmp
es
int
dec
or
inc
xchg
dec
and
sub
mov
mov
int
loop
jns
xor
cmp
loopne
mov
loop
and
mov
xchg
scas
push
push
push
inc
and
popa
jne
push
cmp
cld
mov
sub
sbb
je
xor
jl
dec
pop
adc
lcall
add
aas
ret
loop
adc
icebp
sbb
push
xchg
fwait
add
mov
adc
sub
mov
scas
xchg
lods
pop
push
push
fucomp
fisubrs
scas
push
pop
lock
sbb
lods
rclb
fs
test
out
and
mov
out
mov
push
lock
out
iret
adc
inc
fcom
add
shll
sbb
xlat
jmp
adcb
fidivrl
pop
arpl
inc
adc
int3
adc
in
pop
cmc
ret
loope
add
or
xchg
or
adc
cltd
cld
icebp
xchg
ret
stc
clc
shrb
stc
clc
xor
mov
aaa
bound
nop
xor
xchg
adc
gs
mov
icebp
mov
or
dec
pop
push
jle
mov
push
adc
push
icebp
mov
andb
into
cli
aas
xor
push
and
pusha
sub
divb
mov
rcrl
cs
mov
push
call
and
inc
aad
sbb
cli
inc
subb
xchg
or
inc
roll
scas
push
fldt
mov
std
adcb
int
pop
adc
rclb
aas
pop
mov
add
into
xor
xchg
push
xor
xor
test
add
mov
shll
ss
cmpsl
hlt
pusha
sub
pushf
sahf
xchg
sub
cmp
sub
into
sub
or
imul
adc
call
mov
js
loop
insl
pop
cli
ret
stc
divl
mov
jns
inc
jg
ja
fimuls
fs
out
push
cmpsb
mov
pop
lcall
lds
adc
inc
pop
cld
pop
mov
cmpsl
enter
aas
or
mov
and
push
xchg
cmp
imulb
xor
sti
pop
add
jge
dec
xor
and
mov
push
leave
lea
cmpsl
xchg
aas
mov
fnsave
into
add
mov
sahf
enter
xchg
out
jnp
push
das
push
test
shlb
dec
cmp
mov
adc
pop
push
movb
adcl
orl
movsl
push
out
mov
repnz
xor
push
incl
lcall
inc
clc
adc
lcall
xchg
pusha
sbb
ds
sub
xchg
daa
into
stos
pop
pop
int
icebp
cmc
scas
lcall
jl
jge
out
jle
sub
aam
push
mov
and
sub
insb
stos
cmp
mov
aas
sbb
sub
jecxz
pop
cwtl
add
jge
cwtl
fisttpl
daa
mov
lret
sbb
lods
push
lret
push
adc
cmp
sti
dec
pop
sbb
icebp
mov
sbb
and
call
jecxz
mov
sbb
andps
pop
push
fisttpll
out
enter
jmp
fldenv
icebp
js
jecxz
cmpsb
xchg
aad
add
sbb
fs
nop
in
sbb
les
mov
jnp
rcl
cmc
jae
mov
into
mov
mov
add
inc
xor
les
js
mov
das
loope
mov
fdivrl
cmpsl
bound
pop
inc
test
fcmovnb
mov
rorl
sbb
lret
jecxz
cmpsb
add
lock
aaa
xchg
pop
dec
adc
jbe
dec
gs
mov
lea
aaa
lods
orl
adc
ret
sub
aam
push
repnz
dec
cmp
cld
loopne
ret
and
push
sub
ret
push
jns
adc
lcall
inc
shlb
outsl
iret
rcll
jle
jnp
pop
stos
mov
test
int3
fists
inc
lods
sub
push
or
or
decb
cltd
pop
cmpsl
xchg
jp
es
aaa
dec
pop
and
out
shlb
lds
or
mov
popf
lahf
jecxz
cmpsb
roll
push
jnp
orb
cmpsl
loopne
rcll
mov
sbb
adc
push
inc
ja
or
stc
or
sub
mov
mov
pop
mov
aaa
pop
jo
stos
test
xorl
scas
cmc
mov
dec
cmp
cld
sti
stc
sub
dec
aas
jae
xchg
out
xchg
sahf
jb
jg
test
jmp
add
pusha
sub
push
pop
adc
aam
iret
in
jnp
mov
enter
dec
fwait
jne
sub
popf
xor
fdivs
xchg
popa
cmp
fsts
dec
mov
loopne
gs
cmp
dec
add
mov
loop
cmp
lods
mov
aas
xlat
push
popf
mov
inc
inc
mov
jae
insb
jecxz
aam
arpl
xchg
mov
adc
inc
out
xor
out
mov
xlat
cmc
mov
jns
xor
rcrl
mov
loopne
sbb
xchg
mov
add
les
outsb
ret
loopne
push
mov
scas
lods
shll
mov
mov
inc
fstpl
adc
dec
aad
fst
nop
iret
test
sub
lods
jnp
ror
push
int
addr16
mov
out
or
pop
jmp
mov
movsl
pop
jmp
out
xchg
jb
or
fisttps
cmpsb
fldenv
mov
out
pusha
shr
das
xor
in
xorl
popa
js
and
sbbl
mov
stos
dec
sub
sbb
addr16
pop
lods
jae
sahf
or
adcb
dec
inc
ljmp
mov
cmp
lea
aad
gs
pop
cwtl
mov
pushf
mov
icebp
sbb
sbb
mov
push
iret
jbe
or
adcb
data16
pop
sbb
sub
add
mov
daa
pop
add
inc
lret
daa
jecxz
pop
xchg
movsl
bound
out
lods
add
and
fistpl
bound
mov
mov
int3
adc
mov
mov
enter
and
dec
or
adc
sub
push
mov
sbb
xchg
jp
sbb
inc
arpl
jbe
jg
das
or
popa
cmp
sbb
xor
jae
push
scas
les
scas
sbb
ficoml
in
add
cld
and
movsl
cmp
je
and
adc
clc
jmp
and
mov
or
test
push
in
repnz
adc
test
pop
mov
or
jns
loop
cld
sbb
rcl
movsl
mov
inc
and
ja
sub
cs
cli
les
mov
loopw
mov
jbe
mov
pop
fiadds
push
les
mov
and
xchg
pop
or
push
sahf
daa
jbe
ret
or
push
xor
clc
pop
int3
js
mov
pop
test
mov
cltd
or
adc
mov
mov
and
dec
stos
fiaddl
sub
je
loopne
pop
jo
stos
rep
push
shlb
push
jbe
jp
jbe
fs
dec
add
in
jecxz
push
or
sbb
daa
dec
jmp
in
xlat
pushf
push
cmp
je
jns
shrl
lods
das
cmp
arpl
fs
cmp
push
xor
adc
pop
inc
jnp
rol
xchg
push
adc
xchg
fwait
xorl
inc
mov
cmp
jge
dec
xchg
and
adc
sbb
fsubs
xlat
mov
enter
add
and
iret
xchg
inc
sbb
or
roll
stc
xchg
stos
lcall
imul
addb
mov
lret
stc
and
sub
fisubrs
pop
movsl
rcl
or
cli
jbe
cmpb
stos
pop
lea
pop
data16
fadd
xchg
push
aad
jbe
mov
jne
fstpl
push
scas
inc
sub
lret
dec
repz
push
xor
ret
out
add
outsl
adc
int3
sahf
mov
push
shl
fisubrs
jl
pop
in
sbb
out
push
std
imul
movsb
or
aas
ret
adc
dec
repnz
xchg
pop
ss
pushf
pop
clc
xchg
mov
jno
push
sahf
push
pop
xchg
inc
das
xor
mov
inc
inc
sbb
leave
and
clc
dec
dec
mov
loope
testl
mov
fldenv
sub
ds
add
push
pop
scas
mov
sbb
add
cli
imul
bound
das
and
into
orl
clc
sbb
and
jbe
shlb
pop
mov
cmp
adc
push
push
jb
sbb
inc
pop
test
fidivs
cmc
loop
sbb
std
mov
xchg
pusha
out
pop
cmp
xor
add
je
aam
and
xchg
mov
dec
mov
or
adc
mov
push
int
lahf
push
mov
sbb
addr16
push
addl
xor
dec
mov
loope
bound
push
icebp
data16
lahf
cmpb
mull
sbb
rcrb
pushf
neg
xchg
jo
into
xor
pop
xchg
sbb
ja
mov
out
cmpsl
cmpsl
mov
ljmp
subb
insl
out
jmp
in
and
or
inc
pushf
and
out
mov
mov
adc
cmp
into
cltd
sub
cld
sbbb
adc
sub
das
add
dec
fs
push
fadd
push
leave
ljmp
jbe
fsubr
psubq
movsb
sahf
andb
lods
push
pop
stc
insb
jo
jmp
clc
dec
ret
aas
jecxz
lods
cmc
out
ljmp
std
iret
mov
int3
or
fstpl
out
pusha
movsl
adc
sbb
mov
push
pop
cmc
inc
or
js
or
xor
gs
pop
lea
jle
pop
dec
xchg
mov
ds
pop
ljmp
rorl
out
aam
xor
or
loope
mov
icebp
dec
jno
outsb
rcll
hlt
js
out
testl
or
adc
mov
aad
stc
pop
iret
sahf
sub
cmp
cmpsl
ret
fcmovnbe
sub
jns
ds
pop
fists
das
mov
cld
les
aas
xchg
ds
es
fwait
push
aam
rolb
mov
jecxz
xchg
mov
fsubrl
jae
sahf
push
cltd
xchg
ret
and
insb
push
xor
push
xor
add
in
dec
bound
xor
out
jg
clc
fincstp
jle
xor
sub
pop
repnz
sub
gs
call
hlt
mov
sbb
jns
sub
adc
jo
xor
pop
dec
imul
lret
cwtl
in
orl
gs
adc
cmp
aam
jp
dec
add
mov
and
mov
mov
addr16
clc
aad
xor
rcr
lret
call
out
dec
in
mov
push
lret
xor
sbbb
cmpsb
mov
pusha
fadd
cmp
cli
std
outsb
aad
lock
popf
adc
ljmp
mov
nop
mov
xchg
or
pop
popa
mov
mov
push
mov
icebp
and
pop
push
pop
mov
fstpl
ret
js
dec
jb
sub
in
jl
dec
push
dec
sub
aaa
clc
push
jo
les
aam
xchg
ja
mov
std
push
xchg
inc
mov
mov
insb
mov
xor
push
jbe
mov
adc
add
xchg
jae
jp
int
mov
in
outsl
cmpl
pusha
push
and
roll
cmp
xchg
pop
faddl
push
add
notb
sbb
loop
sub
xor
dec
inc
jnp
fwait
mov
movsl
xchg
and
pop
adc
pmulhw
je
mov
mov
push
inc
or
int
adc
loop
shlw
inc
rorl
pop
shlb
push
mov
mov
sbb
stc
inc
outsl
enter
cmpsl
loopne
inc
and
lods
pop
dec
jno
or
rcl
sub
jnp
out
xchg
ret
mov
lds
enter
jmp
push
cli
cmp
dec
xchg
mov
sub
jns
data16
mov
adc
lds
pop
fdivrs
incb
inc
jbe
out
xlat
add
dec
loope
sub
adc
rcrb
jns
hlt
sub
lock
pusha
add
xor
movsb
sahf
aaa
sbb
repnz
jno
push
mov
jb
mov
sub
push
out
mov
nop
ljmp
mov
ljmp
mov
push
xchg
repnz
fidivrl
lock
repnz
dec
stc
and
movsl
shlb
xor
test
push
and
jmp
jo
sub
in
mov
mov
mov
or
sub
outsl
or
aad
pop
test
out
inc
cwtl
cli
pusha
mov
inc
push
adcb
adc
xchg
pushf
jo
test
std
sbb
xor
notl
fcmovnu
inc
pop
dec
adc
in
mov
mov
leave
pusha
out
pop
push
mov
mov
dec
into
fisttpll
cwtl
hlt
pop
push
mov
jb
cli
dec
cmp
outsb
prefetch
xor
lcall
in
mov
xor
jnp
and
mov
mov
sub
imul
js
jnp
shll
stc
and
int3
rorl
sbbb
push
push
jmp
mov
push
shll
inc
hlt
cli
popf
mov
imul
adc
lods
aaa
sarl
cs
mov
insl
test
pop
jg
sub
out
xchg
cmp
test
pop
sarl
movsl
xchg
push
push
out
lahf
mov
hlt
mov
mov
in
fs
sub
scas
shr
adc
dec
fs
inc
ljmp
in
push
lcall
stos
pop
cmp
hlt
orl
int3
and
adc
sti
repz
pop
lret
int
fwait
int3
lret
xor
or
add
fdivrp
jbe
cwtl
loop
adc
add
pop
das
sar
pop
aad
iret
popa
xor
inc
xchg
or
pop
shrl
outsl
push
adc
shll
push
mov
loopne
mov
mov
mov
sbb
daa
les
out
jg
cltd
pop
add
les
stos
icebp
dec
mov
jo
mov
or
mov
or
lock
sub
test
ja
dec
inc
fs
dec
push
push
dec
addr16
or
or
adc
movsb
stc
test
ljmp
pop
in
jecxz
or
and
fstpl
sti
jl
xor
inc
pop
push
popf
test
mov
in
jae
iret
mov
or
fdivl
cmp
xchg
cli
xchg
rcrl
je
test
stos
mov
popa
inc
in
shl
add
add
movsb
loopne
mov
ret
lret
sahf
xchg
jle
sub
aas
inc
fwait
jl
in
lcall
xchg
sub
xor
ljmp
aas
push
mov
fs
in
outsl
jmp
push
dec
inc
jmp
pop
and
push
fstps
daa
add
mov
xor
xor
add
inc
imul
or
and
shr
loop
xchg
jl
int
add
jns
das
mov
mov
repz
mov
std
mov
dec
push
outsb
js
jge
jecxz
and
dec
mov
popa
jmp
enter
mov
sbb
or
jg
mov
or
lea
inc
mov
shr
je
mov
pop
mov
cmp
lds
into
cmp
ss
out
out
dec
shrl
popf
sub
lock
jmp
push
loopne
cmpsb
jg
sahf
inc
xor
dec
negl
arpl
sub
mov
aaa
pusha
adc
shl
pop
push
test
jecxz
mov
bound
sahf
cmpsl
add
ret
xor
fdiv
mov
and
sub
jge
call
push
lea
cld
in
int
dec
push
xchg
and
jo
fcoms
mov
jle
mov
in
sbb
jle
inc
jnp
outsb
inc
push
dec
fisubl
sub
mov
les
jle
inc
cmp
test
or
cmp
or
mul
xorb
push
xor
fwait
mov
pop
inc
clc
cltd
sbbb
rcrb
or
dec
dec
in
test
imul
pop
push
jmp
dec
mov
ja
sarl
push
insb
push
cld
pop
cli
leave
xor
cld
sti
movsb
mov
popa
adc
or
jbe
push
adc
insl
sbbl
jg
pop
mov
sub
inc
inc
jno
mov
inc
xor
jge
lret
dec
pop
cmp
lods
add
jns
imul
xchg
mov
cs
jbe
mov
mov
lods
xchg
js
sub
xchg
cmp
imul
adc
jle
fisubrs
xchg
stc
testl
fiaddl
push
add
stos
xlat
pop
cmp
aam
push
imul
xchg
jmp
xor
hlt
xor
movsb
adc
jno
or
jo
loop
xchg
mov
push
pushf
clc
leave
push
rclb
push
or
sbb
inc
mov
xchg
fadds
jg
mov
xor
xor
sahf
push
or
lods
add
test
mov
lods
addr16
xchg
fs
in
popa
cmp
push
xor
iret
jbe
in
adc
cltd
lea
test
or
mov
loop
sub
mov
cmc
popf
pop
inc
mov
in
cmc
imul
loop
add
sti
mov
dec
adc
paddsb
and
ss
in
mov
testb
mov
pop
ret
jecxz
jmp
pop
in
mull
sbb
fsubl
idivb
lret
jle
lret
outsb
push
jp
or
jbe
orl
rcrb
loop
in
icebp
xor
sbb
lods
lock
cmp
sbb
cmp
nop
into
mov
push
popf
lahf
in
cmp
mov
gs
in
or
mul
lds
adc
subb
outsb
lahf
das
xor
push
jmp
push
xor
leave
mov
adc
jb
inc
sti
dec
jp
ds
mov
and
daa
jp
xchg
pop
adc
mov
cmc
shll
xor
das
repz
pop
dec
jg
add
mov
sbb
sub
stos
mov
ds
jo
clc
ret
mov
sarb
mov
adc
dec
mov
jmp
iret
jmp
jl
sub
xor
fldt
dec
pop
xor
movsb
xor
cwtl
and
mov
aaa
leave
jmp
das
or
iret
int3
fnsave
dec
mov
jo
lret
jno,pt
lret
mov
daa
xchg
push
nop
lcall
mov
push
in
xchg
outsl
jbe
lcall
stos
lods
cld
popf
pop
push
fildll
jae
call
rcll
test
xchg
pop
mov
jmp
sbb
jecxz
and
lock
stos
bnd
add
pushf
fimuls
sbb
push
mov
xchg
inc
mov
jnp
fs
pop
or
ja
inc
icebp
hlt
lahf
stc
insl
ffree
arpl
xchg
popa
cmpsl
bound
adc
mov
sub
sbb
sub
mov
jnp
pop
mov
jns
or
out
xchg
xchg
add
daa
inc
fisubs
push
lea
dec
pop
jp
addr16
repz
daa
and
jp
fmull
rcr
pop
rep
mov
mov
mov
mul
cmp
lock
cmc
dec
lret
and
pop
pusha
rcrl
gs
enter
rcrb
add
pop
das
push
lret
adc
insl
mov
mull
lock
int3
pop
add
jae
mov
ss
xlat
push
pop
xchg
push
icebp
jl
cmp
xchg
cmpb
test
bound
in
loope
lret
push
int
adc
xchg
inc
pop
jge
scas
cmp
inc
xor
cmp
in
fmull
sub
xchg
hlt
mov
cli
sub
hlt
lret
ds
dec
popf
jno
or
mov
mov
jecxz
dec
jnp
push
dec
push
std
loop
cld
mov
mov
jecxz
cmp
push
test
jo
pop
pop
push
jo
xlat
mov
cli
repz
sarl
shrb
mov
lods
loop
scas
outsl
mov
aaa
push
fnstenv
aad
dec
jo
hlt
mov
and
push
lcall
andb
int
dec
mov
scas
push
ret
mov
sarb
dec
and
inc
sub
inc
jp
jno
std
fsubrl
lock
mov
mov
inc
pop
jnp
insl
xchg
rorl
xchg
or
outsl
cmp
test
stos
aas
pushf
loopne
cmp
into
lret
sti
pop
jb
cmp
sub
jnp
inc
imul
sub
push
jo
fucom
mov
lea
cmpsl
sbb
popa
dec
scas
cmpsl
fstpt
push
cltd
sub
in
mov
mov
js
cwtl
dec
inc
mov
scas
pop
add
jecxz
lahf
xlat
sbb
xchg
popf
aaa
out
adc
xor
enter
insl
pop
xlat
inc
mov
xor
sub
in
in
fdivrl
test
inc
fisttpl
std
mov
xchg
bnd
pop
andb
mov
add
sub
into
adc
mov
out
in
xor
jmp
xor
rclb
sub
out
stc
mov
xor
push
cli
xchg
hlt
lret
cmp
push
sub
inc
das
pop
idivb
add
and
dec
shrb
es
xchg
xchg
pop
sub
aam
jg
test
sub
daa
mul
in
push
mov
xchg
sub
xchg
adc
lea
mov
lcall
iret
push
mov
mov
xor
lods
mov
inc
cmpb
pop
sbb
mov
movsb
xchg
ret
adc
icebp
sbb
xchg
xor
lock
jo
movsl
sbb
pop
fstps
sub
mov
push
push
pushf
movsl
sub
addr16
shrl
and
cwtl
cmpsb
jo
cmp
inc
push
mov
nop
bound
out
push
out
mov
faddl
cli
mov
clc
push
test
daa
mov
stc
jecxz
into
pop
int
or
sbb
jb
jp
push
es
pop
out
mov
push
into
push
adc
mov
mov
mov
cld
loop
loopne
mov
jno
adc
sub
bound
sub
std
scas
incl
or
push
ljmp
aas
adc
shl
pusha
stos
test
loope
scas
es
frstor
aam
jne
and
fdivs
sarb
add
popl
adc
mov
mov
or
sub
jecxz
cmpsl
cmp
add
popa
xchg
divb
movsl
shl
xchg
mov
movsl
jecxz
pop
mov
pop
jmp
add
push
lds
lcall
addb
cld
mov
ret
push
and
in
fistps
icebp
shr
pop
dec
mov
pop
hlt
test
daa
fdivrl
popa
imul
dec
loope
push
jmp
and
cmp
movsl
xchg
mov
mov
out
cmc
adc
icebp
jb
xor
adc
lret
es
inc
adc
cmp
mov
adc
ss
jecxz
dec
pop
jp
sahf
stc
sahf
sti
jp
pop
pop
or
test
incl
adc
push
test
mov
pop
sub
je
lcall
xchg
popl
lods
mov
imul
enter
jp
cmp
sub
push
adc
sbb
jge
mov
push
push
add
sbb
mov
pushl
imul
push
mov
mov
out
hlt
jle
mov
into
imul
sbb
mov
cli
lea
xchg
mov
sbb
int3
lods
cltd
xor
dec
daa
mov
std
pop
push
inc
bswap
mov
lds
test
push
mov
or
aad
leave
lods
and
mov
xor
cmp
push
dec
sbb
jp
jnp
pushf
mov
xchg
loopne
dec
xor
call
xor
outsl
mov
mov
add
jne
jno
dec
test
jge
sbb
xlat
or
cs
dec
xchg
rclb
sahf
out
subl
jbe
mov
adc
xlat
push
xlat
jns
shl
lods
movsl
push
cmp
mov
sub
add
mov
adc
sbb
mov
fistps
and
fiaddl
mov
cwtl
push
jbe
fnstcw
scas
inc
daa
ja
pop
icebp
mov
sbb
into
xchg
sbb
push
dec
mov
pushf
add
jecxz
mov
in
pop
imul
mov
aaa
mov
jge
and
je
or
add
dec
fstpt
pop
cmp
jno
cwtl
xchg
loop
int
pop
sbb
pop
lock
outsb
leave
and
es
and
iret
enter
cmpb
into
test
xor
mov
aam
jns
out
dec
mov
iret
push
sub
sahf
push
sbb
popf
ljmp
mov
in
dec
sub
add
arpl
mov
mov
or
mov
aam
out
aad
daa
xchg
pop
mov
gs
je
jo
stc
cmp
scas
fisubrs
loopne
arpl
or
lret
push
lock
sbb
es
mov
adc
mov
cli
jle
adc
clc
fmuls
push
jae
xor
int
repnz
xlat
es
test
mov
xchg
dec
xchg
outsl
inc
icebp
das
dec
outsl
loop
mov
push
loope
jecxz
inc
jne
mov
jp
jmp
js
out
adc
adc
cli
adc
jae
xchg
sub
mov
mov
sub
mov
jbe
dec
inc
insb
inc
add
das
mov
orb
jb
sub
les
lea
dec
cld
enter
push
jle
mov
or
mov
ja
outsb
daa
cmp
sbb
leave
jmp
orl
pop
jo
inc
mov
hlt
ds
xchg
adc
xacquire
mov
test
sti
iret
test
dec
pop
mov
andl
jbe
lahf
data16
fidivs
xchg
mov
cmc
xor
mov
es
test
xchg
cmp
jmp
pop
pop
shrb
es
jmp
movsb
les
adc
imul
popl
lret
xor
es
or
scas
mov
lahf
roll
shlb
filds
xchg
mov
test
fsub
out
pop
push
mov
mov
mov
in
mov
mov
popa
add
inc
incl
push
sbb
xchg
cmc
mov
jb
jb
fcmovnb
add
adc
sub
inc
popa
mov
fstps
js
inc
lods
lcall
sub
movsl
pop
or
jge
sub
mov
ret
push
insl
cmc
gs
jecxz
fimuls
mov
dec
jl
das
cmpsb
and
loop
repz
lea
mov
adc
or
jecxz
outsb
push
inc
or
shrl
pop
jno
arpl
cmp
movsl
in
sarl
cmp
add
or
into
cmpsb
xchg
jb
push
fisubs
mov
inc
stos
leave
xor
jmp
int3
jns
jmp
in
decl
jae
popa
dec
mov
sbb
mov
push
mov
mov
outsl
jnp
jmp
push
shrl
mov
dec
inc
std
dec
lret
xchg
jnp
add
pop
jmp
cmpsb
lea
insb
jb
fsts
cld
hlt
movsb
pop
jae
mov
sub
daa
aad
js
mov
ljmp
imul
pop
add
sub
cltd
jo
pop
mov
mov
fidivrl
les
das
pop
cmp
mov
jl
push
cmp
xchg
popa
jmp
insb
push
xor
shrb
mov
cmpsb
imul
fsin
cltd
addr16
inc
xchg
mov
or
mov
mov
in
mov
popf
push
les
cmc
add
inc
sbbl
sbb
shl
repnz
mov
fcomps
sub
push
mov
mov
das
mov
jnp
aam
in
xor
ret
push
sub
ja
shlb
mov
stos
sahf
sub
push
mov
les
stc
rcl
repz
pop
jmp
sbb
gs
je
jne
mov
outsl
js
push
je
mov
jns
lea
push
cmpsb
push
or
or
rcrb
mov
push
pop
fnstcw
loopne
enter
test
pop
mov
pop
iret
js
lds
test
and
xlat
dec
sub
jnp
in
stc
sbb
pop
addb
sbb
mov
mov
mov
sbb
faddp
mov
inc
sub
pop
fsubp
pop
inc
fsubl
push
sbbl
in
ljmp
push
loope
or
imul
cld
jge
mov
dec
mov
mov
mov
mov
and
imul
push
je
push
test
or
xor
add
sub
popf
test
in
cld
or
fimull
or
and
ds
jmp
jg
mov
cltd
ror
ror
pop
lahf
int3
jne
aam
and
xchg
cmc
jmp
pop
test
or
lds
mov
xchg
shr
mov
xacquire
mov
jecxz
das
mov
jle
add
ljmp
hlt
add
xor
and
xchg
mov
mov
cmp
scas
ss
je
dec
std
shr
or
jns
dec
and
inc
jmp
xchg
rorb
sub
aam
mov
popa
ja
pop
xor
jecxz
out
out
sbb
xchg
push
aas
iret
xor
sahf
mov
add
xchg
lods
das
and
adc
call
xchg
or
repnz
pop
out
addr16
in
int3
dec
pusha
add
loopne,pn
lods
and
mov
push
cmp
mov
in
xchg
into
sub
das
cmp
push
repnz
test
aad
mov
stos
xchg
push
mov
insl
xor
mov
pop
mov
or
pop
loope
cmpb
pop
sbb
rorb
lds
lret
mov
movsb
xor
add
mov
dec
mov
jno
pop
xchg
daa
mov
xor
or
add
loopne
push
rcrb
sbb
xor
out
cmp
in
jnp
mov
cmp
push
cmp
fdivs
cmp
mov
inc
mov
cmpsl
inc
sbb
cltd
bound
and
pop
and
popa
fisttps
xchg
mov
push
sbb
push
cmp
popf
sub
inc
aad
cwtl
ja
inc
sbb
push
adc
mov
test
cmp
xchg
pop
inc
pusha
pop
dec
enter
mov
stc
push
xlat
bound
fildll
cli
mov
aas
shrb
sbb
mov
sub
stos
adc
fnstcw
outsb
repz
mov
scas
daa
mov
fwait
pop
into
xchg
imul
daa
cmpsl
pushf
xor
pop
push
cmp
inc
xchg
dec
cli
push
loopne
lea
mov
lcall
mov
and
add
add
pop
or
add
push
xchg
mov
fldl
pop
mov
sahf
inc
xchg
sub
cmp
or
repz
data16
mov
mov
adc
pop
add
xor
movsb
loope
or
int3
mov
sbb
imul
adc
inc
mov
pushl
js
pushf
cmp
mov
mov
push
jmp
das
gs
test
pop
je
xorl
mov
pop
or
push
testl
cmp
stc
jge
fdivl
orb
movsl
lods
and
das
ds
das
jmp
jne
das
arpl
lock
out
adc
xor
stos
in
int
cmpsb
gs
fisttps
out
testl
fsubr
call
pop
lcall
in
clc
mov
fsubr
inc
mov
cmp
push
ja
je
or
push
rcrl
dec
mov
lret
mov
mov
ret
push
jne
stos
adc
xor
inc
pop
scas
xchg
xor
sub
adc
mov
je
add
ss
xlat
add
add
cli
bound
xchg
mov
mov
add
je
cmp
or
xchg
out
sub
add
je
imul
mov
ret
jnp
out
lock
xchg
fcompl
jne
loope
mov
mov
mov
jecxz
ss
lods
push
push
sub
xchg
clc
subl
pop
mov
cmpsl
sub
movsl
mov
xchg
mov
std
add
movsl
and
adc
in
rcrb
into
jge
insl
push
xchg
cld
adc
jge
pop
push
ja
adc
sarl
iret
pop
outsl
push
sub
dec
gs
iret
test
jmp
jae
jecxz
xor
mov
add
iret
sub
or
or
sub
sbb
mov
scas
sbb
mov
mov
dec
jg
xchg
mov
pop
int3
pusha
xchg
shl
xchg
addr16
lret
push
lock
repnz
mov
subl
inc
sbb
nop
mov
rorb
add
mov
shll
mov
adc
ret
pop
inc
js
jmp
mov
push
add
jb
int
fmulp
sbb
movsl
mov
pop
mov
test
mov
aad
inc
jmp
clc
es
aad
hlt
pop
jmp
mov
dec
js
adcb
xchg
jbe
push
insb
jecxz
sub
leave
aas
sbb
pop
lea
and
mov
mov
aad
out
ja
adc
out
js
test
mov
pop
sub
push
std
jmp
rcll
xlat
ret
adc
addr16
xchg
and
inc
add
test
les
fcomip
jle
sbb
push
mov
or
sub
push
fsubl
js
xchg
inc
xchg
fnstenv
adc
mov
ret
xchg
lods
test
pusha
inc
fsubr
daa
or
sbb
xor
pop
cmpsb
rcrb
inc
xchg
inc
push
or
push
enter
fnsave
clc
mov
sub
cmp
cwtl
mov
xchg
leave
lahf
pusha
test
popa
shlb
mov
je
cld
sub
mov
cltd
pop
popf
lret
enter
mov
aaa
inc
dec
cmpsb
cmp
in
jbe
or
add
fisubs
pop
nop
jbe
das
mov
add
mov
out
int
jbe
cwtl
sbb
lods
or
shlb
sub
fmuls
push
add
pop
push
insb
iret
hlt
clc
dec
nop
das
sbb
test
xchg
nop
xor
test
fsubrs
daa
mov
cmpb
shl
xor
icebp
pop
lcall
mov
andl
cmpsb
call
shlb
push
xlat
lret
push
sbb
addr16
repz
mov
cmp
push
mov
jne
stos
sahf
movsb
push
or
mov
mov
xchg
pop
in
or
aas
insb
xchg
movsl
leave
and
fs
ss
push
jg
lret
testb
test
pop
leave
cmp
test
leave
arpl
gs
pop
mov
xor
mov
pop
xor
pusha
jbe
loopne
test
adc
or
sbb
popf
fcoms
mov
in
adc
mov
jp
adc
jmp
jp
mov
pop
aad
xchg
lcall
lods
rolb
xchg
cmp
sub
std
xlat
add
xchg
mov
adc
mov
push
addr16
mov
sbb
hlt
js
sbb
loop
jnp
ja
imul
mov
fwait
outsb
test
push
loope
mov
arpl
mov
pop
add
cmpb
pop
popf
mov
push
mov
xor
lea
mov
stos
mov
pop
out
mov
imul
mov
imul
xor
ljmp
fdivs
fs
push
mov
xchg
negb
mov
and
addr16
adc
dec
sbb
sbb
and
enter
pop
loop
fs
and
xlat
fsts
cmp
sbb
jge
or
mov
addr16
movsb
aam
ficoms
insb
and
sub
mov
and
mov
sub
rcll
cmc
and
ficoms
test
cmp
jmp
push
adc
adc
aad
bound
adc
push
cs
pop
pop
test
sub
repz
movsb
test
pop
addr16
pop
mov
daa
inc
mov
mov
push
and
inc
push
xchg
push
sub
mov
push
jge
or
js
lea
and
sarl
jge
cmpsl
es
mov
in
int
sti
push
xchg
mov
jbe
outsl
icebp
xchg
pop
mov
add
icebp
jne
aad
sub
and
lret
jge
pop
cmpsl
jmp
lret
packuswb
mov
mov
popa
adc
and
dec
lods
pusha
test
nop
adc
or
cwtl
xlat
and
or
enter
enter
mov
gs
sub
fdiv
sti
add
cmp
xchg
test
mov
or
cmp
out
mov
or
rorl
pop
cmpl
dec
mov
loope
push
and
or
push
lods
out
int3
dec
sbb
es
cmp
add
jne
cmp
ja
cmpsl
jle
data16
mov
fs
dec
push
addr16
fidivrl
ljmp
test
jne
lret
jmp
fwait
xor
pop
jb
jmp
sarl
inc
stos
out
repnz
and
mov
add
pop
jle
pop
dec
fs
outsl
and
push
adc
sbb
push
lods
icebp
mov
in
mov
das
std
mov
xlat
mov
mov
out
and
inc
popa
cmpsl
cmpsl
xor
cltd
cwtl
shrb
in
jnp
aaa
fidivl
xchg
and
fs
and
pop
push
mov
jmp
iret
mov
cld
cli
add
mov
sbb
push
scas
test
imul
pop
xchg
cmp
mov
jno
sbb
mov
bound
out
adcl
in
cmpsb
mov
lock
jecxz
mov
sub
pop
push
jne
xor
and
xor
push
xor
cmpsl
loope
es
add
lret
movsl
flds
test
add
pop
jmp
fldcw
mov
in
xor
shrl
ret
push
lret
rorb
movsb
sub
jb
aaa
dec
xor
add
push
inc
xchg
mov
les
bound
adc
xchg
push
cs
hlt
in
je
cmp
in
lcall
and
xchg
cmp
sbb
mov
aaa
sbb
push
inc
lret
rcrb
dec
dec
xchg
and
adc
lret
add
xor
adc
mov
jbe
stos
mov
nop
or
popa
popa
jecxz
pop
jp
dec
cld
es
notb
push
xchg
xchg
popa
loop
montmul
cmpsb
xorl
test
cmp
add
xlat
or
ds
fidivs
enter
pushf
lods
pop
sahf
test
iret
add
xchg
adc
rolb
sti
insl
nop
push
jbe
cld
mov
xchg
loop
cmp
ds
insb
inc
and
dec
mov
jae
mov
scas
pop
pusha
mov
and
mov
push
inc
sarb
sbbb
les
or
loop
xchg
je
push
inc
pop
adc
sbb
or
stc
push
mov
xor
adc
push
in
adcl
dec
fimull
fcompl
aad
sub
jle
push
inc
pop
push
push
jbe
movsb
or
lds
out
and
pop
mov
inc
movsb
dec
push
inc
movsb
xchg
xor
lods
dec
add
push
xor
adc
outsb
and
lods
mov
jp
sub
or
aam
insb
mov
sub
lods
jp
xor
sbb
fidivl
out
rcrl
inc
cltd
push
leave
lea
lahf
in
adcb
or
dec
mov
adc
imul
lcall
test
loop
pop
outsb
rclb
fildll
into
xchg
mov
mov
lea
mov
xchg
lods
idivl
xor
or
dec
inc
jnp
sbb
push
lret
vmovsd
imul
xor
aaa
sbb
cmp
das
dec
shr
aaa
sub
inc
inc
bound
adc
and
les
cmpsb
aas
mov
push
sbb
lret
call
insb
inc
add
daa
sub
xchg
jno
fwait
inc
repz
pop
pusha
int
inc
into
sub
push
xchg
stos
push
sub
and
cmp
cmpsl
xchg
lods
pop
xchg
and
mov
mov
xor
xor
in
loope
lcall
outsb
loop
cmp
out
fs
js
push
enter
dec
pop
popa
xor
addl
adc
mov
and
loop
mov
cmc
rcl
push
mov
fidivs
jp
movsl
dec
xor
mov
mov
out
pusha
and
testb
cwtl
inc
ds
mov
push
loop
je
stos
jmp
or
mov
jo
into
pop
and
into
daa
les
mov
lret
inc
pusha
dec
out
adc
imul
dec
mov
jecxz
adc
jno
pop
xor
inc
push
mov
repnz
add
xlat
sti
dec
lret
fcmovnbe
negl
add
outsl
cmp
stos
pop
xchg
add
repnz
stos
inc
lock
and
inc
notl
ret
xorb
xlat
loop
cmp
mov
or
out
mov
or
lods
fldt
or
pop
and
aas
fidivs
or
cmp
mov
mov
iret
pop
inc
inc
jge
lods
addr16
into
enter
dec
xchg
jb
xchg
adc
push
add
movsl
and
iret
mov
inc
enter
sahf
and
rclb
dec
xchg
ret
in
sub
xchg
or
lret
sub
jmp
movsb
ret
or
xor
stc
out
fistps
scas
sbb
ret
cmc
popl
push
iret
pcmpeqb
ss
rcrl
data16
mov
add
push
lret
fwait
jbe
lds
pop
dec
jge
jle
decb
repz
ret
dec
das
mov
cs
dec
xchg
movsb
cmpsb
or
add
lret
inc
sarb
inc
pop
add
test
nop
dec
mov
jge
jle
dec
inc
repz
cmp
xchg
cmp
loopne
outsl
ja
cs
adcb
xchg
mov
xor
and
xchg
shlb
dec
or
imul
sbb
fucomip
test
cmp
std
mov
mov
hlt
stos
sahf
leave
outsl
lods
cmpsl
int3
pop
mov
mov
cli
call
and
inc
xor
mov
cld
dec
add
push
xchg
stos
subb
mov
add
js
adc
pop
cmpsl
push
scas
shlb
ret
mov
aam
sbb
pushf
test
test
or
in
pop
xchg
fldenv
scas
in
xor
xor
leave
popf
or
test
lods
rorl
adc
and
cli
dec
cltd
sub
xchg
inc
cmpsb
pusha
push
sbb
stc
sti
lret
mov
xor
pusha
fcmovb
mov
inc
push
test
lret
ret
mov
ds
pop
dec
ficompl
sub
jno
inc
insb
je
jl
in
pusha
repnz
outsl
dec
lret
pusha
inc
jbe
ret
fimull
pop
dec
and
pop
loopnew
dec
fsubs
dec
xchg
push
jge
stc
or
bound
xchg
jle
int3
dec
insl
xchg
adc
rorl
inc
insl
and
jnp
and
sbb
imul
mov
push
ja,pn
fs
sbb
push
test
repnz
mov
jg
mov
mov
or
and
test
jno
mov
sbb
mov
movsl
nop
xor
push
xchg
lods
cmp
aas
int
pop
scas
mov
ss
test
std
cmpl
movsl
jp
push
fstpt
mov
ret
test
popa
into
cmp
pop
ds
daa
aaa
cmp
sub
lds
test
loopne
push
xlat
jns
jp
lret
push
repz
popa
mov
inc
push
or
out
addl
add
mov
lds
aad
jbe
mov
push
sub
daa
xor
shr
and
lods
or
scas
ljmp
pop
sbb
lret
popf
push
addr16
pop
out
clc
jl
bound
daa
rol
or
inc
es
add
ficoms
dec
xchg
bound
xor
aas
sbb
mov
mov
or
or
dec
and
xor
es
cld
mov
lret
mov
lahf
addl
xchg
out
inc
cs
pop
or
or
call
mov
xor
insl
lret
test
jmp
xchg
push
dec
lods
outsl
imul
mov
sub
lea
orb
stos
jo,pt
loopne
sbb
out
rclb
insl
xchg
out
dec
rorb
stos
push
icebp
adc
cltd
icebp
mov
xchg
xchg
loopne
shlb
push
cli
stos
mov
arpl
push
loopne
dec
jg
sbb
jp
fs
mov
add
lcall
adc
fs
add
pushf
lds
mov
and
ds
dec
mov
pop
ljmp
pop
xchg
mov
add
gs
dec
int3
mov
outsb
xchg
fisttps
daa
xor
add
adc
or
jg
cmp
and
xor
and
mov
or
mov
scas
xchg
and
mov
pop
push
push
add
fsubrs
xlat
stc
jecxz
loope
aad
jo
pop
push
or
push
cltd
and
mov
aaa
xchg
cmp
cvtps2pi
cmp
in
mov
imul
inc
adc
inc
mov
push
movsl
or
mov
pop
out
movsl
in
stos
mul
adc
stos
and
in
and
aam
push
xor
adc
jmp
add
pop
ret
mov
iret
int3
mov
scas
add
inc
shl
pop
imul
dec
dec
lcall
cmp
lea
mov
test
adc
mov
fs
xchg
jnp
inc
fs
xchg
fsubrl
in
imul
mov
sbb
push
mov
outsl
sbb
xchg
lret
mulb
mov
cmc
popl
movsb
cmp
nop
rclb
adc
push
stos
mov
popf
lahf
jns
lods
pop
add
data16
push
mov
fdivrl
inc
and
sbb
stos
and
push
scas
fnstenv
lret
fimuls
jmp
andb
xchg
fcomps
adc
or
bound
xchg
jno
jbe
jmp
sbb
xchg
punpckhwd
mov
jle
ss
or
dec
add
jae
xor
fcmovnu
out
in
push
leave
lods
pop
cmp
outsb
dec
pop
stos
cwtl
adc
push
bound
fdivl
push
ss
icebp
add
lods
xorb
mov
inc
mov
xor
xchg
pop
call
push
jg
addl
loop
repz
jl
stos
mov
fwait
sbb
mov
dec
jl
insl
es
sub
out
gs
in
lret
insl
ret
dec
outsl
inc
cmp
mov
adc
bnd
push
xchg
lret
inc
arpl
push
inc
lcall
push
pop
adc
jns
popf
outsl
leave
sub
mov
inc
in
sbb
mov
xchg
outsb
jb
imul
rclb
and
adc
fsubr
sbb
adc
sub
inc
andb
iret
dec
push
inc
mov
or
sarb
sahf
cwtl
adc
sub
stos
xchg
mov
xchg
mov
loope
decb
call
ja
sbb
xchg
gs
leave
sahf
repnz
cmp
or
add
jmp
dec
xchg
iret
push
jns
dec
aam
mov
jecxz
sbb
adc
pop
fisubrl
sbb
mov
out
stc
and
and
mov
data16
push
sub
inc
pusha
aaa
and
mov
outsl
cmp
lcall
mov
imul
mov
jl
fs
mov
dec
xor
js
sbb
into
insb
cli
xor
xchg
mov
add
and
cmp
mov
jle
cwtl
lds
ja
fldt
fidivl
cli
mov
xchg
insl
xchg
pop
cmp
push
jae
stos
push
or
xchg
sbb
mov
xor
call
loop
es
xor
repz
in
int
xchg
pop
movsl
cmpsl
xchg
push
and
outsl
daa
mov
inc
shll
je
movsb
inc
aaa
insl
inc
js
and
cli
out
jmp
and
push
add
push
xchg
jge
xor
out
cwtl
testl
add
push
loopne
xor
out
aaa
mov
cmp
jp
imul
push
add
or
add
adc
aam
mov
in
mov
dec
insb
rcrl
or
in
or
mov
fxch
cmp
xchg
mov
cmpsl
push
adc
test
idivb
inc
sub
aaa
lods
clc
xchg
add
adc
xor
addr16
jns
inc
cld
test
mov
inc
cmc
or
lds
out
movsb
mov
xor
mov
cld
pusha
mov
mov
jae
pusha
subl
mov
xchg
jl
lret
mov
in
cmp
insb
jae
aam
lahf
dec
mov
and
les
dec
mov
adc
inc
xchg
and
xchg
push
lea
jns
fsubl
push
xchg
aas
scas
in
mov
dec
push
pop
xchg
mov
mov
std
fs
fcom
jno
xor
cmp
jns
mov
cmp
fcoms
insl
test
dec
cwtl
loopne
lods
mov
mov
fiadds
insl
arpl
stos
lock
xchg
call
jbe
sbb
adc
mov
ret
iret
sub
mov
lds
jbe
mov
insl
xor
out
add
push
xchg
add
outsb
adc
pop
push
insb
push
dec
pop
mov
jp
aam
rcrb
dec
mov
stos
out
aad
pushf
loopne
addr16
sbb
adc
test
scas
cld
mov
or
dec
in
stc
popa
fcmovnu
xor
int
xorl
pop
and
out
out
js
cmp
sbb
inc
ret
inc
cmc
hlt
in
aas
pop
jno
test
mov
mov
lea
or
lods
jbe
pop
sahf
aad
loopne
jns
repnz
scas
test
inc
xor
insb
inc
adc
ret
cmp
add
stos
scas
imul
xor
adc
imul
inc
mov
mov
mov
adcl
add
inc
aam
push
test
imul
sub
adc
push
mov
rcr
ja
lahf
dec
xchg
lds
push
mov
aas
fcoml
xchg
jp
mov
fstpl
push
adc
cmpsb
inc
adc
ret
int3
insb
pop
fnop
mov
sbb
push
idivb
js
ret
jge
rcll
xlat
out
je
stos
jg
adc
add
jg
imulb
sbb
xchg
push
jae
adc
mov
mov
xchg
insb
and
mov
adc
xchg
mov
add
stos
js
outsb
fcoms
mov
inc
ret
shlb
and
xchg
pop
daa
out
and
int
sub
testl
jnp
adc
xor
mov
pushf
or
test
pop
incb
mov
aaa
pop
enter
arpl
int3
lods
orb
aas
sbbb
mov
adc
push
pusha
shr
scas
mov
mov
leave
jbe
jl
je
loopnew
inc
loop
pop
pop
sar
or
jb
lcall
mov
lods
adc
add
xchg
inc
push
daa
xchg
cmp
adc
and
fstpl
pop
sub
testb
sbb
pop
sub
push
xor
adcl
or
aas
lret
daa
test
xor
dec
mov
clc
icebp
push
or
int3
or
dec
mov
imul
xchg
sub
push
jl
push
mov
testl
dec
ja
xchg
and
push
fs
in
imul
pop
mov
dec
int
mov
push
das
adc
ja
mov
or
jg
test
jmp
fs
es
daa
jno
cmp
pop
ds
cltd
out
stos
fucom
dec
pop
subb
jl
sbb
pop
mov
mov
mov
dec
test
mov
push
stos
mov
outsb
shrb
adcb
data16
inc
lcall
ss
in
scas
jo
test
call
adc
dec
shll
inc
lods
push
int3
pop
fsts
mov
mov
js
sbb
inc
fimull
jns
adc
jb
sahf
inc
push
cld
fidivrl
pop
gs
pop
loope
int
lahf
test
sub
shlb
push
cmp
aas
imul
lods
jle
arpl
jmp
mov
popf
push
sarl
push
xor
sub
data16
shrb
test
iret
loop
push
jnp
pop
sub
jp
int3
sub
test
in
dec
rcll
sbb
jb
cmp
pop
adcb
shl
rcll
lahf
add
jg
fldcw
movsl
dec
push
aaa
js
out
and
sub
repz
xor
xlat
push
iret
repz
xlat
sub
les
push
fwait
jl
movsl
imul
mov
cmp
out
shlb
cmp
sub
stos
stos
out
jb
fisubrs
inc
repnz
hlt
lods
test
ss
mov
push
mov
push
cltd
sbb
pusha
sti
sub
dec
cmp
hlt
dec
cli
rcl
jmp
sub
xor
or
pop
insl
in
dec
leave
rol
insl
add
fmuls
shll
fdivr
pop
aaa
dec
cmpsl
add
outsl
clc
push
out
aaa
jne
movsl
add
xor
mov
pop
lea
int3
negb
ljmpw
sub
push
int3
lock
cmp
inc
stos
fsubrp
xchg
sbb
cli
scas
test
sub
pop
lock
pop
pop
loope
leave
mov
dec
ljmp
cmp
cmp
pop
pop
adc
into
add
into
ds
test
mov
cmp
jae
lock
lahf
and
jecxz
rcr
xchg
popf
fcmovu
and
cmp
sub
pop
and
and
repnz
jecxz
xor
dec
pop
jns
fcmovnbe
mov
pop
or
dec
lea
pop
icebp
add
add
inc
sub
xchg
out
mov
sub
stos
ds
adc
or
pop
cltd
add
pop
push
idivb
mov
cmpsl
mov
into
repz
lret
pop
jno
dec
adc
dec
pop
mov
inc
lea
and
and
inc
sub
lea
or
bound
orb
lea
adc
lods
add
xor
pop
dec
add
sti
sub
dec
in
jg
jg
sbb
nop
dec
cld
jg
mov
fstl
cmpb
and
mov
sti
into
sbb
les
jmp
jae
pop
test
and
inc
mov
out
mov
cmp
push
sub
mov
repz
rorl
xchg
xchg
xchg
mov
sub
sub
push
jecxz
pop
pushf
enter
dec
test
popa
or
xchg
fwait
mov
paddd
lea
xorb
gs
cld
xchg
aad
out
mov
imulb
cmpsb
xor
inc
xchg
das
andb
or
xor
popf
xor
mov
lds
sub
in
sub
and
int
mov
push
adc
pushf
xchg
sbb
xor
xchg
mov
sbb
jo
dec
scas
rcr
mov
sbb
fdivl
jmp
outsl
mov
in
inc
push
mov
shrl
mov
jge
es
xchg
arpl
scas
sub
sahf
or
mov
jae
inc
cmp
inc
cwtl
push
out
ret
sbb
pop
movsb
leave
sahf
insl
sbb
mov
into
addr16
xchg
popf
les
out
xchg
jns
stos
stos
in
pop
and
scas
lret
sub
jge
cld
mov
jl
scas
mov
jb
orb
sub
out
aad
mov
mov
imul
push
lods
pop
sbb
stos
inc
mov
pop
mov
pop
xor
mov
xor
inc
add
dec
fistpll
int3
inc
mov
xor
cltd
jp
movsl
lods
xor
jnp
xchg
inc
and
roll
dec
mov
sahf
aam
cmp
pop
push
stos
push
aas
dec
xchg
fstpl
or
fnstenv
gs
loopne
push
or
push
xor
fwait
push
sub
push
rolb
push
add
sub
adc
les
dec
adc
iret
test
sarb
sbb
sub
inc
mov
rcl
xor
loopne
mov
les
jg
inc
shl
or
jae
cltd
xchg
in
push
push
leave
and
pusha
mov
dec
mov
mov
ss
mov
pop
xchg
int3
pop
repnz
sbb
jns
loope
pop
pushf
jmp
addr16
jb
in
outsl
sbb
or
nop
mov
or
add
sub
addl
mov
in
add
in
idivl
jg
xlat
inc
movsl
cmc
pusha
mov
pop
add
inc
int3
iret
div
pop
push
arpl
xchg
shrl
cwtl
mov
lcall
mov
inc
loope
fwait
test
leave
arpl
sub
sub
cmc
es
imull
inc
add
cwtl
push
jp
loopne
int3
dec
f2xm1
es
aam
imul
sbb
pop
lods
sbb
pop
fistl
adc
in
test
inc
cmp
fimuls
mov
jns
imul
xor
cmpsl
mov
movsl
mov
repnz
sbb
pop
jmp
mov
stos
dec
push
pusha
aam
in
sub
ljmp
enter
call
cmpsb
mov
test
fcomp
jg
cmp
js
cmp
inc
ds
adc
mov
jmp
fdivr
mov
xor
imul
ljmp
mov
dec
inc
mov
imul
push
bnd
jne
sbb
ljmp
pusha
jg
pop
and
or
stos
inc
dec
cwtl
addr16
cmp
sbb
js
adcl
leave
mov
pusha
frstor
add
mov
push
cmpsb
inc
mov
in
xchg
lahf
int3
pop
jns
in
bound
stos
out
test
mov
into
push
xor
shlb
arpl
enter
cli
pop
xor
mov
sbb
inc
leave
enter
dec
gs
jne
ja
mov
jno
iret
int3
or
xchg
sahf
pop
outsl
shl
inc
xchg
push
in
loope
jg
xor
fcoml
loope
rcrb
scas
std
call
inc
addr16
lret
test
testl
aam
jge
dec
ret
sub
es
and
inc
push
stc
push
js
bound
sub
xchg
aam
insb
cmp
dec
fistpl
xchg
inc
fists
mov
cmp
jnp
sbb
sbb
push
jno
call
sbb
les
add
jo
jb
jns
and
mov
mov
adc
aam
testb
fildll
lahf
dec
mulb
mov
inc
dec
repnz
sbb
push
stos
inc
cld
push
mov
sbb
mov
lcall
fwait
rorb
dec
fistpl
sbb
and
cmp
jbe
push
pusha
jnp
lods
daa
fistpll
mov
mull
cmpsb
add
cmp
xor
data16
adc
sub
push
enter
xchg
push
stos
mov
movsb
aam
adc
sub
adc
push
jne
mov
cmp
jl
enter
adc
aaa
ja
loopne
orl
jecxz
jecxz
mov
jecxz
mov
mov
cs
sarl
xor
lret
les
push
ret
lret
xchg
push
cmp
pop
adc
push
dec
dec
test
ficomps
shll
xchg
bound
sbb
imul
rclb
xchg
out
jmp
sub
jne
insb
ret
jg
or
mov
jp
cmp
pop
sahf
bound
cmc
sub
std
jns
dec
xor
and
jle
push
mov
pop
nop
test
mov
bound
sub
xchg
push
mov
push
dec
out
enter
dec
push
pop
movsl
and
rcrl
cmp
pop
jmp
and
sbb
loopne
shrb
or
mov
int
push
add
dec
inc
jmp
or
je
dec
je
add
adc
mov
clc
shl
bound
sub
movsl
xchg
dec
outsb
dec
shrl
test
mov
or
ljmp
pushl
movsb
cmpsb
adc
add
xchg
subb
ss
test
xchg
scas
mov
ss
gs
mov
rcrl
pop
cmp
aaa
stos
js
and
les
ret
mov
sbb
loopne
inc
addr16
jg
xchg
js
fs
sbb
mov
or
mov
sub
in
out
sbb
adc
ret
cmpsb
popf
pop
adc
or
cmp
push
mov
popa
out
xlat
jo
inc
fldl
inc
movsl
pushf
cmp
push
sbb
push
push
outsb
jmp
xchg
and
ja
sub
loope
mov
pop
inc
mov
sbb
add
fdivrp
addr16
out
add
and
xor
jmp
iret
jno
out
stos
dec
xchg
pop
pop
ljmp
adc
stos
ja
orl
push
add
dec
xor
pop
fdivs
add
sub
mov
repz
cmp
outsb
aas
int3
push
dec
addr16
sbb
inc
lods
xor
mov
or
push
dec
ljmp
sub
and
rcl
pop
pop
mov
mov
cltd
fsubrs
into
movsb
add
mov
dec
sub
push
pop
mov
xchg
push
lret
rcrl
clc
imul
test
aas
imul
mov
xor
out
mov
sahf
adc
sub
jb
dec
lcall
xchg
or
pop
lods
xor
inc
test
xchg
push
mov
mov
jns
push
mov
leave
xor
add
iret
and
jmp
repnz
test
cmc
xchg
les
cmp
mov
fistpll
ljmp
cmp
dec
fildl
neg
int3
ljmp
sbb
daa
clc
ja
inc
or
cmp
inc
jge
or
fstps
pop
ljmp
jmp
cmp
push
pusha
std
mov
jo
sti
cltd
or
lret
push
mov
inc
and
mov
clc
mov
fimuls
loop
cmp
cmp
jmp
pop
ljmp
shrb
jmp
push
inc
sbb
xor
jo
test
xchg
pop
repz
std
jecxz
outsb
lock
repnz
lret
sub
sbb
mov
pushf
mov
mov
mov
pop
mov
cmpsl
jle
push
lock
cld
sub
mov
int3
lods
cltd
outsl
mov
jne
jb
xchg
std
lds
dec
adc
repnz
push
out
sti
cmp
out
mov
jmp
pop
fmul
xchg
push
xor
outsb
lds
lea
das
arpl
mov
or
mov
aas
dec
pop
int3
mov
nop
fmulp
and
lret
sbb
add
jns
int
faddl
sbb
inc
dec
xor
imul
daa
adc
push
cmp
int3
xchg
cmp
jl
dec
dec
int
movsl
daa
dec
mov
xchg
mov
scas
xchg
cld
xor
insb
insb
dec
rcrl
and
out
xchg
sub
in
lods
repnz
imull
add
lea
dec
ss
sbb
cli
js
sahf
stos
roll
loopne
dec
stc
xchg
pop
leave
mov
jge
adc
sbb
rclb
mov
mov
xchg
fmul
fs
xor
jb
fstl
iret
and
out
jmp
dec
std
out
sbb
test
repnz
or
in
sub
enter
int3
dec
mov
fisubl
xchg
mov
add
fmul
arpl
add
dec
push
movsb
mov
inc
add
popf
push
and
mov
jbe
cld
test
in
inc
mov
adc
ds
xchg
dec
lea
mov
add
push
xchg
jno
popf
pushf
adc
mov
insb
repnz
mov
and
ja
imul
loope
or
jns
repz
ret
sbb
push
mov
pop
and
xchg
jne
pusha
cwtl
cmc
jmp
jecxz
cmpsb
mov
scas
icebp
insl
lea
mov
pop
jns
sub
and
nop
sub
cmp
jp
lods
cmc
jno
loopne
adc
add
push
sub
mov
movsl
popa
sti
in
aad
cmp
fmuls
cs
jbe
mov
xchg
movsb
imul
mov
pop
pushf
push
test
lods
push
fnstenv
add
shl
sbb
mov
outsl
repz
and
mov
sbb
and
jae
mov
sbb
data16
pushf
mov
cmp
cli
dec
clc
aas
repz
lahf
add
and
sbb
scas
jmp
shll
mov
inc
mov
jp
es
and
lret
cmp
shlb
pushf
adc
imul
and
popf
lret
pop
test
movl
pop
cs
xchg
add
push
inc
add
pop
sub
xchg
mov
lret
mov
or
jl
lahf
adc
rcrb
ss
push
popf
rol
lret
adc
cmpsl
fxam
data16
cmp
stos
push
and
cmp
mov
add
jge
jo
cmp
add
aad
push
mov
xchg
out
andb
or
xchg
push
movsb
pop
into
mov
clc
scas
pop
pop
ja
call
cmp
lock
mov
cmp
xchg
aas
mov
stos
sbb
mov
imul
mov
inc
dec
test
pop
orb
cmpsb
mov
cwtl
cli
lret
icebp
jae
daa
rcll
repz
pop
lea
test
push
int
dec
pop
xchg
arpl
arpl
cld
mov
mov
test
xor
clc
xchg
push
dec
rcl
lock
inc
les
incb
call
pop
dec
inc
xchg
and
call
loopne
sbb
inc
sahf
cmpsl
fists
enter
inc
out
hlt
fsub
sbb
inc
sar
push
lods
std
aam
mov
mov
xchg
add
sub
aad
rolb
inc
outsb
mov
push
jns
jo
xor
jge
mov
out
push
mov
jl
fstpt
test
call
lods
hlt
lods
xlat
mov
push
es
data16
cltd
dec
cmp
enter
outsb
mov
enter
lret
mov
mov
loope
sar
std
ret
xor
loopne
clc
xor
mov
mov
test
push
xchg
loopne
or
lea
mov
ja
pop
leave
divl
filds
movsb
movsl
stos
addb
into
dec
push
nop
call
mov
bound
cltd
mov
pop
dec
stos
int3
ret
das
call
sub
pop
call
ret
inc
cmp
push
jge
sub
mov
xchg
xor
daa
cmp
mov
repnz
loope
xlat
arpl
ds
dec
and
shr
imul
call
icebp
adc
mov
sub
roll
ss
jae
popa
fwait
pop
ss
test
xchg
sub
out
das
mov
dec
mov
mov
divl
fldcw
push
outsl
xchg
lret
push
fidivrs
pop
gs
jl
jle
loop
out
inc
xchg
ds
push
scas
xor
not
inc
mov
cmp
setno
xchg
ret
push
sbb
add
xor
dec
mov
mov
cmp
xor
jecxz
lahf
xor
bswap
int
push
push
dec
mov
sub
add
iret
pop
xor
idivb
push
adc
sbb
in
mov
imul
repnz
fisttpl
in
cmp
test
sub
lret
jg
mov
xor
sbb
or
popf
ljmp
push
push
inc
rclb
xchg
js
sbb
pop
or
jb
pusha
pop
add
test
negl
xlat
outsb
pusha
mov
mov
gs
ret
jne
lcall
and
push
out
xchg
int
js
stc
mov
adc
xor
push
fwait
dec
adc
inc
popa
js
shll
mov
xor
jb
xchg
mov
sbb
jns
fistps
lock
sub
jae
inc
inc
or
addr16
jns
lock
mov
xchg
dec
pusha
push
jo
cmp
popl
clc
xchg
inc
pushf
loope
fdivl
not
jecxz
enter
testb
mov
cmp
loop
movsl
insb
cmp
test
jp
or
stos
mov
cmp
or
inc
xor
jo
xchg
xchg
adc
push
pop
and
insl
add
out
mov
aaa
icebp
test
xchg
repnz
pop
pusha
sub
cwtl
lods
xchg
sub
lcall
cmp
jecxz
xchg
pop
ja
mov
insl
loope
add
cmp
dec
adc
adc
mov
mov
sti
push
dec
pop
pushf
xchg
push
ljmp
adc
add
xor
xor
call
fimull
dec
adc
push
enter
pusha
repz
and
xchg
push
loopne
jnp
clc
gs
inc
push
cmp
pop
in
pusha
mov
jmp
add
out
loopne
cwtl
out
loop
pop
shll
and
loop
aaa
push
movl
or
mov
data16
xchg
enter
pushf
mov
lea
stc
sbb
std
push
scas
pop
imul
insl
bnd
sub
outsb
cmpb
in
call
pop
es
add
xor
loopne
sar
arpl
sbb
pop
les
lret
mov
or
lcall
jns
andb
mov
pop
xor
es
lock
push
cs
jle
lea
xchg
mov
pop
in
jns
cmp
rcll
in
test
sbb
push
inc
insl
into
sub
pop
adc
int3
xor
xor
aad
dec
cmp
sub
or
and
cltd
sbb
inc
cmp
and
out
inc
cmp
fs
xor
das
pop
adc
leave
jecxz
fnstenv
in
fisubrs
xchg
mov
mov
pop
cmp
cwtl
xchg
mov
or
movsl
fistl
add
addr16
sarb
mov
fidivl
test
and
sbb
movsb
js
or
push
das
jo
cwtl
adc
add
mov
xchg
jns
lds
adc
mov
push
out
in
pop
pop
cmp
mov
push
sbbl
sbb
into
scas
jne
stos
mov
and
and
fimuls
xor
pushf
mov
test
xchg
pop
out
clc
jo
sub
push
and
mov
push
xlat
loop
loop
in
int3
cltd
or
dec
enter
xor
mov
repnz
popa
dec
ja
les
cld
xchg
xor
or
in
movsb
dec
cmpsl
cltd
add
push
push
clc
jae
mov
sbb
mov
jb
lret
sub
adc
sub
xor
mov
mov
in
rol
out
or
imul
fdivr
mov
cmp
mov
pusha
adc
cmc
mov
rol
xor
cmc
roll
dec
lods
and
pop
stos
rcrb
aaa
push
int3
push
je
pop
adc
stc
das
jnp
movsb
out
addr16
insl
fistpll
loope
pop
andl
dec
xchg
gs
fld
pop
in
sub
mov
enter
push
andl
outsb
push
push
push
cmpsb
mov
pop
jnp
cmp
sub
pop
in
jmp
cmpsb
fimuls
in
pop
push
arpl
sub
repnz
rcrl
lahf
mov
lret
icebp
adc
xor
sub
mov
xchg
out
icebp
stos
stos
mov
ja
insb
inc
mov
or
out
ljmp
adc
cltd
imul
fldcw
adc
mull
adc
and
das
xchg
adc
add
mov
jo
bnd
repz
hlt
movsl
inc
daa
iret
iret
adc
sbb
sub
imul
jge
xchg
jecxz
inc
xchg
sbb
inc
mov
in
adc
pop
into
sbb
les
scas
sbb
or
mov
inc
jb
fsubs
or
inc
je
cltd
lds
fsts
cmp
aam
les
shll
adc
xor
push
pop
xchg
mov
xchg
repz
cmp
lods
push
std
xchg
dec
ds
cmp
pop
je
jge
rcrb
leave
jae
pop
pop
xor
and
daa
fstpt
ret
rcr
movb
push
add
shlb
xlat
adc
out
mov
add
push
fdivs
push
lods
out
ret
sbb
pop
fsubrs
enter
dec
mov
and
aad
push
adc
sub
rclb
jno
loop
mov
pop
jmp
mov
in
movsl
ret
aam
lods
mov
mov
jmp
sbb
xchg
or
xor
fbld
jns
cld
fs
cs
push
adc
add
bound
xor
xor
movsb
out
lahf
jae
sti
rcl
gs
xor
cmc
mov
xor
pop
sub
xchg
int3
jo
adc
xchg
shrb
mov
mov
sub
fwait
inc
ss
sar
aas
jb
dec
dec
scas
dec
cmc
push
and
xlat
lods
addr16
hlt
lcall
or
adc
xlat
add
pop
push
psrlw
sbb
mov
pop
push
pop
inc
push
es
pop
sub
xor
adc
pusha
and
shll
jns
scas
mov
fistpll
mov
fcoms
and
xor
cmc
inc
mov
out
cltd
xchg
mov
xchg
ljmp
ljmp
xor
dec
fucom
sub
lret
sbb
jge
repnz
xor
push
and
dec
lret
test
jp
shr
xor
daa
int
iret
mov
add
xchg
xchg
xchg
jo
mov
adc
insl
or
nop
stos
xorl
leave
xchg
mov
mov
bound
jno
popa
lea
xchg
pop
pop
test
mov
repz
aaa
jb
out
inc
cmc
scas
xchg
mov
dec
add
test
js
add
je
adc
mov
push
aaa
aaa
loopne
int
push
fcmovu
cmpl
mov
std
xlat
cmc
ficoml
out
push
inc
imul
pop
gs
fxch
push
xchg
mov
sti
push
push
mov
xor
sbbl
shll
mov
jnp
cld
or
ljmp
shrl
push
addb
data16
sub
mov
fwait
push
sub
pop
push
clc
dec
out
adc
xor
shrl
enter
or
rcrb
cmp
or
inc
jns
aas
lahf
mov
xchg
jge
jne
jle
lods
sahf
lods
aam
shr
lds
pop
orb
xor
or
addr16
adc
ficoms
rcl
outsl
filds
cld
loope
pop
loop
inc
adc
adc
pusha
jo
dec
aad
ja
xchg
pop
or
mov
mov
pop
jge
dec
pop
sti
xchg
jo
push
sysret
nop
sub
dec
add
pop
mov
ret
test
out
insb
pop
cwtl
xor
mov
xor
stos
xchg
jmp
pop
jmp
jmp
dec
movsb
pop
xchg
inc
jne
push
mov
and
xchg
mov
jl
lcall
pop
lret
arpl
push
lock
ficoml
sbb
jbe
xorl
aaa
push
jae
sahf
and
fisubl
fdiv
pop
cmp
fnstenv
xchg
cmpsl
pop
out
repnz
stos
xchg
cmp
sub
popa
jle
lret
mov
push
loopne
sub
jl
sti
cltd
sub
xlat
mov
fs
test
sahf
dec
cmp
push
add
aam
jno
daa
mov
mov
popa
mov
js
pop
test
leave
push
incb
cwtl
mov
sub
sbb
iret
xlat
push
aaa
mov
xchg
fwait
rcrl
ret
cli
test
push
mov
mov
dec
or
pushf
leave
mov
fimuls
inc
mov
movsb
sahf
popf
mov
push
xor
pop
or
adc
icebp
push
sbb
sub
adc
ljmp
ror
and
pop
pop
arpl
push
in
mov
lret
fsubrl
test
dec
fwait
ss
data16
insl
pop
or
mov
dec
into
pusha
aaa
fisubl
outsb
pop
out
sub
jne
or
stc
add
mov
push
mov
xlat
adc
and
dec
mov
iret
shll
sub
push
inc
shlb
loope
or
ret
sbb
cld
popf
cmp
jle
push
cltd
sub
mov
sbb
in
out
adc
xor
fistl
mov
jp
adc
jbe
cmp
iret
or
popf
sbb
call
imul
out
or
xchg
cmpsb
lock
loop
mov
mov
mov
sarl
pop
pop
xorb
jge
mov
mov
std
mov
and
scas
aam
jb
call
fidivs
xchg
or
mov
dec
or
jnp
sbb
mov
gs
test
insl
and
pop
xor
stos
mov
pop
je
push
push
or
sbb
xlat
sub
adc
sbb
cs
cs
dec
imul
mov
sub
stc
jmp
or
add
test
mov
jo
xor
and
in
xor
sbb
sbb
out
movsl
adc
mov
adc
cmp
and
xor
mov
mov
ret
sarb
add
mov
jp
xchg
push
lcall
pop
or
mov
je
push
test
movsb
xchg
sub
ret
mov
jb
mov
ret
ja
lea
test
arpl
sbb
test
faddl
mov
cmp
data16
mov
clc
std
pop
orl
loopne
in
or
outsl
sbb
scas
add
insl
add
push
repz
adc
imul
or
jge
and
pop
out
add
pop
sub
or
mov
mov
test
imul
fdivl
dec
xor
call
jmp
dec
push
sub
dec
orb
scas
lret
loop
fadds
mov
pop
mov
mov
mov
and
adc
arpl
data16
mov
sbb
test
jg
mov
arpl
int3
pop
cmp
fadds
push
imul
negb
add
jge
jge
sub
xchg
fwait
mov
hlt
lds
mov
test
in
adc
shll
nopl
xchg
inc
cmp
repnz
incl
imul
xlat
dec
xchg
cmpsb
orl
dec
push
inc
dec
arpl
cmp
stos
imul
je
cli
pop
stos
test
sbb
div
stos
lods
test
std
mov
or
enter
xchg
lock
rorb
test
push
xchg
inc
adc
xchg
jecxz
push
icebp
das
dec
xchg
inc
js
push
in
adc
in
or
inc
mov
ds
pop
scas
aaa
lods
stos
lcall
mov
adc
xor
arpl
cmpsb
sarl
mov
xchg
aaa
sbb
cmp
popf
lahf
mov
into
push
sub
fnstsw
clc
push
cmp
xchg
pop
jnp
mov
fadd
add
mov
jb
pushw
outsb
frstor
out
push
mov
loope
fldcw
pusha
fisubs
mov
adc
mov
int3
aad
pop
xchg
mov
pusha
dec
leave
call
push
ja
fldenv
scas
sbb
dec
test
mov
push
ds
or
mov
lea
xor
pop
sbb
and
and
testl
mov
cli
ds
xchg
iret
sbb
cli
add
inc
adc
xor
mov
push
xor
inc
sbb
jnp
add
jle
ja
outsb
imul
mov
into
mov
sbb
sbb
hlt
imul
add
jp
int
sub
sub
xchg
enter
lahf
scas
roll
jae
enter
xchg
out
in
aad
xchg
orl
mov
pushfw
loopne
pop
cmc
and
jb
outsl
or
jne
inc
mov
xchg
push
push
push
or
add
rcll
push
test
dec
sub
sub
das
mov
xchg
xor
insb
xchg
dec
adc
aas
sbb
mov
jb
jg
shlb
dec
add
adc
pop
fbstp
push
cmp
and
mov
negb
popf
mov
or
es
mov
addr16
lcall
mov
outsl
in
mov
push
into
aaa
out
test
fsubrs
xchg
xchg
jle
cmpsb
xchg
mov
sti
loop
or
rcrb
inc
ljmp
aaa
inc
fstl
mov
imul
dec
pop
adc
aas
mov
push
mov
sbb
cmpsl
mov
sub
hlt
cmpsb
cmpb
imul
insl
pop
xchg
inc
lds
mov
add
push
inc
inc
sub
mov
mov
xchg
in
stos
mov
cmpsl
push
rdpmc
jecxz
inc
cmpsl
add
mov
fildl
jae
and
cmpsl
jmp
add
nop
mov
jnp
push
in
pop
repz
ret
adc
add
cwtl
out
sbb
sub
dec
dec
pop
aad
leave
mov
jmp
xchg
lcall
adc
icebp
subb
clc
nop
scas
xor
cmp
and
mov
push
testb
pop
cli
xchg
mov
and
das
xchg
adc
movsl
add
xor
in
pop
xchg
cmp
mov
sbb
out
mov
xchg
aam
xchg
push
fstpl
push
insl
pusha
inc
push
mov
pop
mov
mov
mov
in
out
xchg
xchg
pop
jle
pushf
lods
push
out
xlat
xor
loope
xor
insl
aad
xchg
lods
xchg
gs
ficoms
jae
jbe
jns
xchg
out
adcl
lods
push
ljmp
xor
adc
movsl
xor
fldcw
out
call
jg
jb
psubb
insb
jnp
fisttps
or
xchg
xchg
cmc
insb
insl
or
xor
scas
mov
add
shlb
fidivrl
xchg
mov
dec
sub
loopne
mov
jo
sarl
insl
es
mov
mov
sbb
push
and
ret
stos
out
sbb
shrb
mov
mov
std
scas
xchg
je
dec
mov
mov
xchg
sub
lods
push
imul
out
or
clc
dec
sbb
add
cld
inc
ret
jnp
sbb
out
dec
xor
dec
call
js
popf
shlb
cmc
xchg
add
cmp
jge
aam
scas
ds
fadd
hlt
sbb
and
sar
cmp
inc
pop
lret
xor
xchg
dec
push
scas
or
sbb
adc
les
imul
iret
ljmp
loope
cmp
shlb
popw
pusha
outsb
adc
adc
xchg
or
sbb
sub
xorb
push
add
test
mov
sahf
imul
rcrb
mov
loope
mov
pushw
icebp
dec
callw
mov
int
mov
enter
push
adc
out
pop
cli
in
mov
cld
icebp
sbb
pusha
mov
push
sbb
data16
dec
xchg
add
shl
xchg
lods
inc
push
js
cwtl
mov
pop
mov
sbb
push
scas
out
notb
in
icebp
mov
xor
cmp
lret
dec
insl
and
xchg
cmpsl
mov
inc
sbb
sbb
mov
mov
xchg
cmpsb
xchg
xchg
cmc
cltd
or
push
or
movl
lock
add
mov
aad
xor
push
leave
mov
je
shlb
test
cmpl
sub
cmp
jg
lock
add
pop
dec
cs
stos
jecxz
clc
sti
add
sub
aaa
add
int
leave
test
es
mov
mov
hlt
xor
push
lcall
seta
dec
cs
mov
stc
loopne
fadd
in
add
cmpsb
xor
repnz
push
shll
or
cmc
and
xchg
stos
into
mov
dec
inc
imul
mov
inc
into
scas
test
cmpsl
push
lea
jecxz
out
cltd
mov
popa
scas
lods
loop
pop
addr16
mov
jnp
mov
ret
decl
add
push
add
mov
sbb
lods
subl
jl
ret
mov
dec
lret
cmp
out
adc
inc
shrl
clc
jge
pop
fcomps
jmp
mov
sbb
mov
dec
fwait
sarl
and
repz
mov
jbe
cmpsl
mov
rcrl
mov
test
out
shl
enter
jo
outsb
mov
enter
xor
cld
cmp
mov
je
cmp
fildll
add
fdivs
xor
cmpsl
stc
insb
dec
jo
fwait
aad
dec
insl
inc
add
and
and
sbb
leave
sub
mov
xor
lea
jp
inc
sbb
cwtl
bound
mov
movsl
or
fwait
cmp
xchg
jle
scas
shlb
jae
mov
push
xchg
fiadds
jmp
cltd
lea
leave
add
cmp
and
mov
lret
mov
divl
xchg
fcomip
fdivr
into
dec
mov
fadds
in
pop
cmpsl
pop
sbb
fnsave
leave
xchg
mov
cs
fstpt
pop
jnp
scas
adc
ror
call
pop
jb
push
cmp
lcall
lahf
ficompl
inc
outsl
add
mov
adc
mov
cld
cmp
inc
and
loope
aam
popa
mov
fldlg2
pushf
into
sti
cmp
daa
es
xchg
ss
loopne
jecxz
mov
push
fldt
bound
inc
outsl
jae
popf
mov
cmp
cmp
gs
or
mov
adc
repnz
jl
popa
lds
xchg
mov
loop
daa
jle
cwtl
dec
dec
aas
cmp
call
pop
pop
insb
mov
add
mov
mov
xor
mov
rcll
cmp
push
xchg
dec
jmp
sub
add
mov
hlt
dec
jb
fistpll
and
out
das
mov
cmp
mov
fsubrl
xor
gs
arpl
push
call
lea
xchg
mul
mov
and
mov
lret
push
jle
xchg
mov
cmp
mov
popa
dec
fldcw
mov
sub
insl
cwtl
dec
pop
insb
orb
sub
in
xchg
xchg
hlt
int3
call
stos
sbb
scas
loopne
mov
push
mov
aad
jmp
or
inc
jo
inc
cmp
push
cmpb
fimull
mov
push
out
int
push
cmp
push
out
loop
test
sbb
jns
push
mov
jbe
cltd
popf
insl
lcall
into
push
js
inc
mov
mov
aam
and
lock
int3
or
xchg
fisubs
stos
adc
pop
mov
pop
xor
jecxz
movsl
sub
mov
mov
fxch
xchg
sub
aad
ret
repnz
subb
jge
repz
fldl
push
xor
insb
adc
out
xchg
popa
les
jle
add
add
xor
lods
mov
sahf
dec
mov
out
fidivrl
in
or
mov
nop
push
jmp
mov
inc
mov
out
das
mov
adc
jno
aad
mov
pop
outsb
outsl
subl
pop
test
ljmp
enter
and
jae
scas
add
lods
xor
adc
sbb
aam
mov
sub
sub
mov
fs
sbb
adc
loopne
sub
xchg
gs
add
xchg
sub
add
cltd
lret
mov
insl
hlt
add
sub
aaa
sti
iret
xchg
xor
popf
pop
xchg
stos
jb
mov
std
mov
cli
cmp
and
mov
pop
scas
imul
push
pusha
dec
movsl
jp
cmpsl
push
pop
cmp
je
xor
imul
xchg
jp
std
cmp
push
xchg
ss
push
call
mov
jl
pop
jp
lds
stc
cmp
xor
aas
pop
shll
xor
jns
in
xor
mov
stos
fs
mov
and
pop
push
or
test
xchg
pop
decb
inc
movmskps
adc
inc
addl
lea
inc
push
push
call
andl
jne
jnp
fs
icebp
xchg
out
mov
and
sub
mov
pop
ret
jnp
out
mov
sbb
mov
add
pusha
lahf
sbb
lret
pop
adcl
repz
xchg
jbe
mov
sub
push
push
lcall
dec
cmp
or
xchg
clc
fwait
dec
inc
aas
jo
cltd
pop
les
lods
pusha
in
sub
lds
les
jge
adc
rcrl
mov
sub
nop
loope
mov
mov
sbb
push
popf
shr
rcrl
les
icebp
ror
push
lret
push
mov
push
sub
cmpsl
insl
aaa
pop
enter
shlb
clc
or
push
and
xchg
xor
sub
jg
or
xlat
insl
mov
cmp
sub
std
mov
inc
bound
sub
sub
stos
loop
adc
popa
jecxz
jle
add
dec
dec
les
stc
mov
gs
pop
leave
mov
xchg
inc
pop
lcall
filds
clc
mov
clc
pop
push
jnp
mov
push
mov
and
xchg
pushf
add
jns
js
out
sbb
add
cmpl
sub
and
or
loope
xchg
ja
add
sub
shr
inc
cwtl
stc
mov
add
push
adc
inc
push
ds
test
mov
mov
in
or
push
fisubs
js
jb
loop
sub
sbb
call
inc
pop
mov
push
fwait
push
subb
add
daa
pop
sub
decb
xor
mov
inc
xchg
rorb
inc
in
mov
int
push
cmpsl
mov
cli
faddp
push
xorb
gs
cli
loopne
lds
jb
dec
data16
cmp
mov
mov
cmp
icebp
mov
ljmp
jno
scas
pop
adc
fcoms
ja
dec
pop
jle
add
mov
mov
leave
mov
xor
dec
sub
mov
cmp
outsl
cmp
sbb
dec
add
std
addr16
jecxz
sub
ds
leave
push
fmuls
pop
popf
push
xlat
stos
daa
push
cmpb
xor
or
aam
sub
out
data16
rorl
push
mov
cwtl
lcall
fstpt
cwtl
inc
ret
aad
mov
out
sub
mov
and
push
jnp
jo
mov
mov
and
js
and
mov
mov
pop
mov
aam
dec
stc
aaa
add
jecxz
out
cmp
sbb
js
arpl
mov
sahf
lods
xorl
push
movl
xlat
cli
dec
sarb
into
mov
lods
imul
in
cmp
sbbb
scas
mov
dec
push
xchg
rcl
dec
mov
iret
add
mul
or
lcall
push
jbe
scas
adc
dec
test
into
xor
sti
fdivl
stc
out
add
push
inc
lret
loope
in
pop
mov
push
loop
inc
lds
sbb
mov
jp
cld
push
push
dec
pop
cmp
push
mov
mov
jg
jp
sbb
xor
pop
nop
mov
fs
call
pop
icebp
inc
xor
inc
outsl
outsl
add
rclb
mov
add
jb
xchg
repz
or
leave
lods
fistpll
rcrb
and
insb
push
scas
jle
and
xchg
mov
aaa
iret
dec
hlt
cmp
adcb
xor
push
jg
addr16
fcompl
lahf
ss
cli
orb
enter
out
push
das
adc
jae
outsl
addr16
imul
add
mov
aaa
sahf
pop
mov
mov
test
pop
fisttpll
push
dec
sbb
sbb
ret
or
mov
push
scas
das
adc
jb
dec
insb
sbb
daa
addb
push
jmp
or
and
jg
push
pop
test
lock
sub
repnz
jmp
sti
push
lcall
push
aad
jmp
outsb
fxch
int
lea
testl
jb
pop
hlt
daa
popa
mov
sub
mov
lret
adc
lret
lods
push
and
sahf
out
and
shlb
mov
fcomp
pop
pop
aaa
insb
xor
fisubrl
pop
xor
lea
push
rol
lcall
mov
call
fisubl
mov
test
addr16
xchg
std
xlat
jbe
jg
mov
pop
and
gs
mov
lods
inc
xchg
cmp
filds
shlb
inc
add
xchg
fsubl
cmp
fnstsw
outsl
into
xchg
mov
adc
and
adc
pop
jmp
into
push
mov
xor
jo,pt
nop
test
sbb
inc
inc
ss
mov
push
push
dec
ret
sahf
lock
push
xor
and
test
outsb
dec
push
jecxz
push
add
mov
scas
sbb
cs
test
xor
jecxz
loope
and
enter
repz
ja
sub
int3
pop
lahf
test
out
jmp
cmpsb
xchg
jmp
or
xlat
fdivl
pushf
push
push
and
nop
pop
sbb
inc
lret
ret
hlt
leave
aas
bound
bound
cmp
xchg
repnz
scas
jo
xor
adc
add
lret
js
add
enter
mov
lret
jmp
dec
daa
lahf
sub
mov
lcall
outsb
ret
push
stc
cld
and
fwait
inc
jns
std
or
addr16
test
mov
shrb
cmpsb
mov
sub
rcl
call
inc
mov
sub
push
lods
push
inc
mov
sahf
nop
in
js
jge
jl
lret
lcall
aaa
das
xlat
std
mov
mov
sti
sarl
jbe
add
add
adc
data16
cli
adc
sbb
adc
shll
inc
cmp
dec
inc
movsb
mov
jl
imul
push
cmp
jns
fs
test
or
out
cmp
jl,pt
inc
jae
pop
mov
int
cmpl
jae
inc
in
sarl
movsb
push
sub
test
dec
adc
outsb
ret
in
sbb
lret
insb
add
jns
mov
int
out
and
sarb
sbb
test
mov
loopne
inc
mov
mov
sbb
push
adc
pop
sarl
and
ljmp
insl
inc
xor
mov
xor
pusha
and
addr16
ret
sbb
daa
dec
jno
repnz
cmp
stos
test
mov
popf
lods
pop
mov
ret
ja
mov
std
test
subl
jmp
adc
das
fisubrl
and
pop
xchg
dec
outsb
push
dec
cmp
push
fdivrs
or
lahf
insb
les
cwtl
mov
add
pop
mov
rorl
shl
add
dec
jo
cmp
and
mov
jb
adc
or
jb
push
aad
adc
or
mov
pop
fidivs
jle
mov
inc
jo
addr16
mov
add
cli
pop
icebp
inc
adc
push
pop
stc
lahf
inc
addl
cs
pop
repz
les
cli
out
mov
aas
or
lcall
pusha
cmpsl
and
xchg
ficoml
in
mov
push
lahf
and
mov
xchg
js
and
pop
ljmp
xchg
iret
loope
xor
mov
and
mov
lret
sbb
xor
sub
jbe
rorb
ja
fdiv
cwtl
adc
stos
add
aas
lods
repz
mov
outsb
sub
mov
aas
xchg
xchg
insb
xchg
andb
xchg
faddl
jno
mov
imul
mov
xor
sbb
cmp
cmpsl
pusha
add
xchg
imul
pop
jne
or
into
insl
sbb
bound
inc
int3
dec
lret
push
cmpsl
insb
loope
pushf
push
mov
xchg
xor
mov
or
mov
out
push
dec
push
jb
dec
cwtl
rcr
push
pusha
int3
shrl
xlat
and
jmp
in
not
mov
pop
or
cmp
rcll
out
addr16
outsl
loope
mov
out
cmp
int3
aaa
push
lret
mov
mov
imul
mov
push
imul
jnp
call
popf
push
jne
push
pop
lods
sbb
sarb
jo
insl
dec
and
xor
mov
leave
popa
add
xor
cmp
push
loopne
mov
cwtl
mov
mov
aaa
and
pop
inc
hlt
push
loop
adc
nop
mov
in
push
xlat
mov
or
cmc
fsubr
adc
adcl
dec
push
data16
aam
pusha
cltd
fcmovne
int
pop
add
and
stc
xchg
xchg
inc
mov
ljmp
cli
jbe
mov
jnp
jno
and
aas
mov
lea
pop
call
cmp
shlb
and
cmpsl
jno
jecxz
jl
mov
outsb
les
mov
mov
sbb
mov
inc
mov
ficomps
inc
dec
dec
inc
loopne
lret
mov
loop
push
mov
movsl
push
push
push
adc
sbbb
mov
jns
push
cmp
mov
jns
dec
sub
adc
or
out
mov
pop
add
fs
imull
mov
xor
mov
mov
adc
stos
insb
mov
xor
stc
test
aad
call
in
sub
mov
push
push
ss
sub
push
ret
cmpsl
or
add
insl
ljmp
mov
xchg
outsl
xchg
sti
pop
and
bound
cmc
clc
arpl
jnp
or
in
arpl
pop
cli
add
cltd
xlat
push
fnstcw
pop
lahf
mov
repnz
xchg
das
aas
cmp
jge
aad
mov
lods
jecxz
mov
stos
mov
push
push
mov
xorps
insb
insl
mov
call
in
lods
push
lock
jecxz
jge
imul
test
mov
mov
jbe
jg
out
out
sbb
mov
or
and
pusha
jp
test
cmp
or
clc
cs
pop
jmp
fmuls
dec
dec
jbe
imul
lcall
sub
imul
out
roll
lcall
mov
and
pusha
mov
pop
mov
leave
push
out
enter
inc
pop
inc
push
mov
ficomps
testb
stos
clc
movsb
jno
xlat
xchg
cmc
mov
and
repnz
aad
mov
jmp
or
aas
dec
add
inc
or
fiadds
xchg
and
xor
bnd
cmp
loopne
in
fisubrs
dec
ss
mov
jl
clc
jae
imul
sbb
jne
dec
in
mov
insb
lds
mov
enter
inc
fs
push
xchg
aaa
test
mov
mov
xchg
stos
push
je
int
xchg
mov
jne
sarl
ret
pop
xchg
aam
test
int3
xor
fcoml
pusha
cmp
jmp
addb
stos
add
fidivs
sub
shll
jns
inc
lret
jg
dec
pop
cmpsb
mov
lock
push
add
dec
lds
adcl
stc
imul
fs
push
jns
sbb
and
jmp
sbb
sbb
mov
js
sti
cmc
lea
mov
xchg
mov
enter
clc
xchg
jge
lret
add
into
push
enter
es
popa
stc
sub
jns
sbb
pop
jl
mov
test
push
sub
sbb
mov
jg
mov
stc
cmp
push
sbb
stc
es
sub
cs
adc
pusha
addr16
cltd
idivl
and
aas
jnp
dec
idivl
adc
xor
ror
int
loop
cli
lock
lods
shll
jecxz
out
repnz
rep
mov
stos
mov
cmp
rorb
mov
dec
cmpsl
lret
insl
bound
adc
out
jl
shll
pop
fprem1
mov
call
loope
adc
test
call
xorb
sbb
mov
add
xlat
sbb
and
push
scas
mov
mov
mov
jecxz
or
lahf
mov
out
xchg
pop
pop
sarl
jecxz
jp
in
mov
cld
pop
add
fwait
lcall
push
ss
lret
push
jb
icebp
jmp
jl
repnz
dec
andl
ss
daa
push
pop
push
inc
leave
loop
xor
and
and
mov
aam
bnd
sub
mov
je
jge
xlat
sub
std
outsl
movsb
cmp
xchg
sbb
loopne
out
or
mov
cmp
test
xor
rcll
fstps
xor
mov
sub
into
mov
jle
xchg
xchg
dec
jl
lds
jnp
lock
sbb
into
cmp
pop
aas
mov
je
jmp
int
std
hlt
add
pop
lahf
mov
leave
cli
mul
enter
push
lahf
or
out
std
scas
stc
lods
shll
xchg
push
std
mov
push
cwtl
pop
mov
xchg
fiaddl
int
jns
aad
cmp
cmp
dec
and
adc
shlb
cld
xchg
popa
xor
sbb
cmp
push
add
int3
hlt
loopne
inc
xor
pop
pusha
cmpsl
dec
repnz
lret
repz
adc
inc
gs
mov
push
pop
push
fsubrl
test
and
lahf
jecxz
js
out
cmc
and
and
ret
mov
and
cmp
pop
decl
push
add
mov
cmpb
lods
jb
daa
test
clc
fdivl
xchg
push
bound
testb
orb
cmp
or
orl
pop
je
push
mov
jae
gs
cmp
cmpsl
jo
cmp
add
popa
mov
sahf
jo
test
popf
data16
xor
jge
xor
inc
imul
je
jle
mov
pop
cmc
cmp
fimull
rclb
jbe
add
stos
pop
pop
and
inc
mov
out
ljmp
xchg
or
cmp
mov
mov
das
les
adc
mulb
aas
dec
fnstcw
mov
inc
shll
mov
push
fwait
or
mov
mov
lcall
jae
pop
iret
dec
scas
scas
das
pop
push
int3
jle
insb
popf
int
dec
rolb
out
push
lret
repz
jg
sbb
xchg
stos
pop
stc
pop
sbb
rcll
mov
gs
xor
sub
xchg
sub
cld
jg
push
xchg
aad
push
loope
xchg
jg
popf
inc
roll
jno
xorl
fcmovnbe
jle
fldpi
xchg
mov
ja
cmp
aaa
cvtpi2ps
mov
adc
adc
inc
push
or
mov
jo
or
adc
out
int
pop
cmpsb
xor
aaa
sahf
xchg
pop
mov
bound
outsb
aad
enter
push
nop
pop
sahf
loopne
xchg
je
pop
mov
lock
sub
push
pop
out
cs
dec
addl
xorb
or
xchg
push
fldcw
scas
dec
call
adcl
call
out
mov
cmp
mov
sti
mov
xor
add
cmpsl
xchg
je
pop
jp
inc
inc
and
and
jbe
cmp
mov
in
pop
mov
imul
mov
test
jmp
mov
pop
jmp
push
cld
sbb
hlt
and
mov
lea
jg
pushf
es
iret
loopne
mov
fwait
pop
push
cmc
dec
and
sbb
cltd
arpl
aam
jns
xor
es
les
or
mov
inc
xchg
jmp
mov
sbb
int3
mov
insb
out
cmpsl
mov
ret
pop
xchg
sbbb
aaa
cltd
mov
jo
ret
pop
mov
shl
push
or
inc
lods
mov
std
xchg
rcl
cmp
add
push
ljmp
lods
cmp
and
dec
sbb
int3
push
mov
sbb
das
pop
fildll
add
mov
jecxz
pop
clc
mov
pop
or
mov
in
pop
cmp
pop
and
mov
xor
test
mov
lahf
push
cmpb
subb
mov
push
inc
mov
push
inc
add
adc
stos
fstpt
je
test
xor
aad
mov
push
inc
movsb
jg
popf
sbb
iret
ja
mov
mov
push
add
inc
cmp
out
pop
outsb
cmp
daa
dec
push
mov
ljmp
out
pop
std
imul
mov
mov
mov
popa
stos
mov
dec
pop
aam
xchg
lcall
dec
adc
cltd
push
push
addr16
sarb
stos
ljmp
jno
outsb
dec
jae
fiaddl
lahf
out
in
dec
insb
cmp
jmp
dec
lret
xchg
mov
xchg
data16
cmp
adc
nop
rcrl
lret
dec
int3
fnstsw
sub
das
cwtl
mov
leave
jmp
cmp
xlat
mov
ret
insb
push
sbbl
cmp
xor
or
sub
adc
outsb
fldcw
lcall
push
cltd
call
leave
inc
or
dec
in
inc
mov
inc
loope
pop
push
xchg
testb
mov
test
adc
aaa
in
sbb
mov
lea
adc
or
mov
in
dec
push
sahf
xchg
cmpsb
subb
mov
das
aaa
fidivrl
jecxz
jmp
inc
sarb
push
cmp
js
mov
ret
imul
pop
jo
mov
jnp
out
loope
or
xor
sbb
incb
mov
test
cmp
mov
pop
adc
dec
flds
mov
inc
das
xchg
stc
fcomps
sbb
add
or
cmp
mov
lods
dec
in
adc
dec
shlb
xchg
cmpl
mov
das
sub
ljmp
into
mul
cli
les
mov
push
dec
adc
inc
jmp
sbb
aam
xchg
hlt
cltd
test
pop
push
scas
push
sub
xchg
aam
mov
cmp
and
jns
inc
aas
dec
inc
push
xlat
and
ja
mov
aaa
sbb
sbb
pop
xchg
stos
test
les
inc
xor
mov
lods
mov
mov
dec
rol
push
das
out
hlt
enter
shll
lock
push
test
subb
ljmp
push
sub
sub
and
hlt
cmp
inc
jo
cmp
xor
push
adc
push
pop
addr16
or
arpl
xchg
shlb
loop
mov
add
mov
dec
movsb
insl
jbe
addr16
arpl
clc
dec
jb
fsubrs
dec
cmp
mov
xchg
in
or
jne
add
aas
aas
lea
cwtl
xchg
scas
repz
fstpt
inc
xchg
adc
mov
fcoms
inc
inc
sarb
or
or
push
pop
lcall
xchg
push
call
out
dec
inc
out
rcr
or
dec
in
dec
xchg
ds
cwtl
jp
mov
mov
and
ds
push
xchg
pusha
cmc
bound
adcb
stc
sahf
rcll
outsl
stc
je
cmpsb
scas
je
les
icebp
loopne
inc
sbbb
lret
sub
aas
xchg
pop
cmp
test
or
pop
jbe
mov
movsl
das
fs
add
jecxz
jo
ret
test
xchg
jg
call
dec
add
push
enter
cmp
mov
inc
mov
xor
jecxz
pop
clc
jnp
jnp
sub
repz
pushf
jmp
es
jge
roll
ljmp
sub
mov
subl
dec
jl
sub
mov
enter
mov
or
inc
push
dec
popf
in
leave
mov
mov
push
jg
or
cmp
negb
dec
jbe
lods
aam
jge
inc
mov
jmp
das
push
rcll
xchg
sbb
fstpl
sub
std
pop
or
sbb
mov
pop
xchg
jb
mov
push
sbb
repnz
inc
add
xor
ds
loope
int3
xor
rorl
sub
jbe
mov
cltd
pop
jg
mov
pop
mov
and
movsl
andl
sbb
cmpsl
xor
jl
xchg
jnp
andl
and
lret
cmp
sub
cs
dec
clc
ja
cltd
push
jg
pop
stos
cmp
jno
xorb
xchg
aad
xchg
in
js
jg
mov
push
mov
es
pop
xchg
inc
lahf
lods
fs
rcrb
int
iret
push
xchg
mov
or
filds
adc
adc
inc
cmp
sub
mov
std
inc
xorl
mov
pop
nop
std
mov
fiaddl
add
lret
mov
jmp
shrl
in
sbb
insl
sbb
gs
sbb
or
pop
stos
dec
pushf
stos
mov
into
lret
and
fisubs
sub
add
in
jno
es
push
into
pusha
pushl
dec
inc
nop
add
andl
popf
insb
or
push
stos
push
or
adc
inc
pop
sub
jle
mov
sub
or
mov
ja
push
mov
loopne
adc
adc
sahf
popa
jecxz
push
dec
mov
pop
es
and
int
push
mov
into
jp
repz
stos
bound
std
mov
jl
mov
mov
stc
shlb
repnz
mov
fdivl
xor
adc
sti
mov
push
sbbl
cwtl
xor
push
dec
cmpsl
inc
scas
lods
xchg
jecxz
xor
push
cli
imul
bound
in
movsl
push
divb
xchg
xchg
pushf
lahf
jg
dec
mov
ret
rcrb
jne
test
loopne
push
jae
into
pop
out
mov
and
pop
test
pop
movsl
sub
cli
inc
test
push
addr16
out
rcll
sub
jle
out
xor
pop
jg
jmp
mov
xchg
imul
xor
and
add
in
add
imul
pop
sbb
scas
stos
mov
stc
lret
loope
mov
cmp
pop
mov
add
int3
adc
dec
jecxz
out
sub
mov
fucomp
inc
sbb
fbld
fsubrp
adc
mov
sbb
clc
mov
mov
rcl
fsubrl
lods
sub
outsl
xor
insl
cmc
jl
push
out
xor
shrl
jle
add
bnd
loop
pushf
filds
cmp
in
test
loope
fidivrl
sbb
lock
pop
xlat
push
inc
das
nop
mov
sub
pop
fs
inc
lock
pop
jns
in
inc
push
aas
jbe
jae
adc
and
sub
adc
jae
adc
xchg
sub
adc
imul
inc
adc
sub
mov
out
inc
and
or
into
or
dec
or
fisttps
sbb
ficomps
pop
shll
and
aaa
push
pop
inc
imul
xchg
cmp
out
xchg
mov
pop
repnz
fdivrl
sub
sub
pop
jp
pop
pop
fstpl
jno
adc
aas
mov
cmp
jecxz
mov
sub
aas
sbb
adc
mov
gs
xor
inc
fstl
outsb
lds
out
push
dec
stos
out
jb
xchg
lea
call
out
leave
mov
or
fidivrs
mov
scas
arpl
add
outsl
loop
sub
dec
mov
push
pop
sbb
lds
dec
fidivs
inc
cmp
fwait
xchg
jl
cld
mov
mov
fisttps
cmp
std
arpl
movsb
jecxz
fs
xchg
xor
xchg
sar
cmp
rorl
nop
xor
aas
outsl
or
inc
and
scas
loop
or
jo
stos
rorl
lock
mov
shrl
jmp
sbbb
loopne
test
adc
mov
fstpl
insl
xor
push
bound
xor
mov
fidivrl
test
push
testl
inc
sarl
jp
sub
dec
nop
outsl
cmp
mov
das
inc
les
xchg
out
dec
adc
int3
imul
xorl
decl
xor
mov
js
jp
icebp
rorb
adc
addl
imul
lahf
or
repnz
cmc
sbb
or
lret
push
lahf
ja
lret
shll
xor
adc
push
int3
mov
pop
testl
notb
enter
scas
xlat
inc
daa
inc
mov
pop
pushf
mov
xchg
addr16
push
roll
jbe
test
mov
xlat
in
stc
pusha
jbe
xchg
fcompl
pop
push
int
cmp
in
adc
push
lea
mov
outsl
dec
lock
inc
adc
imul
hlt
dec
pop
push
and
loop
jne
pop
pushf
mov
sbb
mov
popa
inc
ljmp
fcomp
mov
ljmpw
sub
adc
mov
inc
loop
aad
pop
fwait
sbb
out
mov
rcrb
sbb
xchg
or
inc
cmc
jl
aad
jne
dec
fstl
and
outsl
jmp
sub
mov
mov
es
loopne
mov
fidivl
stos
data16
mov
mov
movsb
std
pop
adc
testb
mov
repnz
mov
sahf
ret
add
scas
xlat
not
imul
repnz
test
jge
dec
mov
cmpsb
or
add
fs
ret
xor
mov
arpl
mov
stos
movsb
xor
cmovae
fisttpl
adc
mov
hlt
sub
movsb
push
loope
dec
jp
pop
push
or
lea
xor
lahf
and
sbb
daa
in
dec
test
lods
into
xlat
loop
sbb
outsl
or
ljmp
dec
xor
adc
push
sbb
in
mov
mov
popf
jb
pop
into
xchg
out
cmp
push
jns
adc
dec
pop
pop
or
jns
mov
inc
shll
jae
push
and
mov
xchg
stc
test
add
jno
xor
push
cmc
jae
and
dec
popf
fdivrs
mov
pop
xlat
icebp
lahf
mov
add
inc
lds
or
inc
fwait
pop
addr16
adc
cld
fs
sub
xor
dec
mov
dec
adc
arpl
mov
xor
adc
jl
lcall
add
jnp
cli
das
in
push
fwait
in
push
insl
jne
xorb
xchg
inc
inc
cmp
repnz
icebp
out
mov
jbe
lea
daa
out
or
addr16
mov
ja
push
int3
jmp
mov
xor
shr
data16
mov
or
shl
xchg
cld
or
mov
adc
addb
outsb
hlt
lret
dec
cmp
stos
imul
pop
notl
cli
add
jns
popa
push
scas
mov
mov
mov
dec
out
jno
mov
icebp
push
sbb
mov
push
dec
add
lock
call
or
in
xchg
scas
ret
pushf
pop
cmpsl
loop
mov
mov
xchg
xchg
or
xor
mov
or
cwtl
mov
jne
movsl
aaa
inc
aad
inc
jns
mov
mov
add
xor
sbb
mov
rorb
arpl
cmpsb
ljmp
jns
insb
sub
lcall
out
or
rcrl
adc
sub
cmpsb
arpl
cmpsl
mov
push
pop
push
leave
lcall
je
insb
fnsave
adc
rclb
lea
aad
xchg
xchg
rclb
insb
mov
mov
xchg
in
sbb
fisttpl
aaa
adc
data16
dec
aam
adc
movsb
xchg
push
std
cltd
jns
lds
psubusb
out
fwait
xchg
xor
jno
pusha
sbb
sub
fwait
jmp
add
orl
hlt
sbb
faddl
fdivrl
dec
shlb
push
test
jl
inc
adc
std
fsubrl
outsl
std
lret
popf
sub
roll
and
xchg
negl
orl
repz
xor
aad
mov
push
ret
mov
ja
or
cmpsl
loop
hlt
gs
pop
in
lds
mov
and
popa
imul
nop
lods
and
pop
sbb
in
or
fs
xor
mov
daa
push
in
mov
call
cmpsl
bound
xchg
cld
adc
mov
outsl
jle
sbb
and
rcrl
mov
add
mov
cmpsb
aaa
mov
aam
inc
outsb
in
jge
push
imul
ret
mov
clc
add
pusha
test
aas
mov
insl
mov
inc
sbb
and
ficompl
inc
add
int3
jmp
mov
inc
push
adc
mov
data16
sub
shlb
int3
inc
faddl
sub
inc
or
imul
daa
or
cltd
mov
pop
or
test
aad
mov
or
movsb
and
outsb
mov
pop
jae
setns
in
dec
add
inc
int3
in
xor
xchg
frstor
insl
lods
jecxz
mov
gs
clc
cmp
mov
push
cmp
cwtl
xchg
cmp
jecxz
push
ficoml
fs
sub
xor
imul
jo
mul
addb
jmp
xchg
sub
stc
xor
sbb
xor
gs
dec
pop
mov
rol
dec
mov
out
cmp
mov
loopne
and
and
test
jo
in
mov
mov
cmp
jle
out
sub
sti
inc
xor
cmp
mov
mov
pop
test
test
sbb
out
mov
cld
mov
mov
push
mov
bnd
cmpsb
mov
xchg
xor
push
inc
push
les
in
sub
xchg
cmc
hlt
inc
pop
mov
xor
scas
jno
jbe
dec
outsb
fwait
sbb
es
xchg
js
mov
mov
mov
pop
mov
lcall
das
addr16
jae
push
inc
cli
mov
or
test
ss
pop
add
and
sahf
rclb
cmpsl
scas
adc
ret
mov
xchg
jnp
sbbb
mov
addr16
sub
mov
dec
mov
lret
jl
sub
push
stos
aaa
xor
lret
xchg
sub
fistpll
sub
mov
clc
add
jns
imul
add
cmp
or
mov
std
cmp
jg
pop
ficompl
inc
les
cmc
out
or
pop
and
dec
ret
and
in
and
je
fcomps
faddp
aaa
jmp
jecxz
sahf
mov
jae
das
and
dec
mov
cmp
dec
add
cmp
aas
cltd
jne
in
test
jl
out
jo
or
push
repz
lret
repnz
push
xchg
xchg
mov
outsl
fimull
jp
mov
cmp
xchg
enter
clc
pop
cmp
sti
aaa
imul
add
or
shrl
pop
int
shrb
out
rcl
and
and
dec
clc
mov
into
xchg
push
cmp
fisubs
filds
cltd
outsb
or
mov
test
push
jae
xchg
push
mov
out
add
sbb
push
inc
mov
popa
push
sub
pop
adc
insb
dec
xchg
in
add
scas
aaa
ret
mov
subl
mov
mov
jae
jbe
mov
in
dec
fbld
repz
ds
mov
aas
push
std
pop
add
pop
push
cwtl
je
mov
js
outsl
mov
hlt
sub
xchg
sarl
jo
and
rcll
push
xchg
in
push
inc
fsts
inc
aam
add
jb
daa
aam
stos
or
arpl
movsl
test
add
mov
xchg
outsl
stos
mov
mov
add
pop
lock
push
add
daa
sub
clc
add
movsb
push
adc
cli
add
shrl
jns
jae
daa
cltd
xchg
clc
mov
mov
insl
jp
addl
fimull
xor
dec
loopne
insb
mov
lahf
dec
jl
mov
scas
mov
testb
jp
imul
cmp
ret
or
or
sbb
xchg
mov
push
xchg
cs
inc
push
pusha
arpl
incb
cli
lods
push
push
cld
and
rcr
sbb
mov
lds
cmpl
mov
rorb
fidivrs
pop
in
xor
jo
daa
insb
fsts
fdivs
popf
push
ret
mov
cmp
sub
outsb
inc
repz
cmp
test
xchg
scas
sbb
or
jg
or
xchg
mov
fildl
xlat
fwait
add
add
and
xlat
les
rcrl
sbb
cmp
fwait
adc
xchg
fwait
pusha
shll
cmc
dec
rolb
push
cmpsl
dec
pop
shrl
pop
cmp
scas
mov
or
mov
add
sbb
out
jnp
mov
jb
gs
xor
jne
scas
add
mov
test
iret
dec
mov
pop
das
mov
adc
rcr
sub
xor
addr16
xchg
xor
bnd
in
mov
fisttps
mov
jns
inc
mov
div
jp
add
or
mov
shll
jecxz
call
cld
lods
dec
add
aam
ds
cwtl
xor
outsb
mov
and
jle
xor
test
lds
sub
xchg
xchg
mov
adc
in
nop
push
les
add
inc
int
sub
push
jle
cmp
mov
loopne
adc
in
mov
sbb
and
lods
nop
pop
jl
fisttpll
sub
arpl
pop
scas
repnz
test
loopne
fs
push
aaa
pop
sub
scas
mov
dec
jne
xchg
xor
dec
xchg
inc
mov
pop
and
nop
iret
mov
xor
mov
ficompl
iret
dec
xchg
lock
jle
scas
dec
mov
pop
mov
xchg
cmc
lods
pushf
int
shll
sahf
ret
cmpsb
sbb
xor
call
xchg
or
mov
sub
and
movsl
insl
push
mov
das
push
and
lcall
lea
insb
push
loope
fcomp
sahf
xor
and
ss
mov
and
cmp
or
push
and
cmp
ss
lods
mov
stc
repz
sar
pop
and
dec
jnp
or
mov
test
sbb
cwtl
xor
rorb
fwait
stc
push
inc
push
sbb
lahf
xchg
fwait
pop
inc
arpl
cld
shlb
addr16
pop
cmpsl
out
mov
fs
and
push
inc
xchg
lds
lods
push
ss
dec
push
shlb
or
stc
out
push
idivb
jl
sub
mull
and
mov
mov
rcr
push
inc
dec
inc
test
mov
inc
in
cmp
mov
jle
or
push
shll
inc
push
rclb
and
test
sub
cmp
inc
lret
arpl
and
adc
mov
fldenv
mov
inc
dec
and
pop
popl
stos
fidivrl
sbb
sbb
in
xchg
test
push
jne
pop
jp
pop
or
adc
or
dec
and
add
dec
das
insl
mov
sbb
or
ret
lock
mov
enter
mov
popa
and
dec
insl
mov
out
cmp
mov
push
jns
into
dec
jnp
idiv
dec
xor
sarb
movb
cmp
xchg
mov
cltd
movsl
lds
lods
stc
testl
inc
sub
daa
inc
in
jnp
add
jns
mov
lret
mov
inc
dec
cmp
es
adc
in
xchg
ret
jb
or
mov
pop
add
cmp
test
or
insl
mov
sbb
xchg
dec
mov
loop
sbb
inc
add
cld
add
inc
and
mov
fsubl
lock
dec
cwtl
imul
fisubrs
xor
test
out
cmpsb
lret
aaa
mov
cmp
js
repz
xor
int3
cli
push
and
outsl
orb
sbb
cli
scas
ss
inc
frstor
popa
dec
push
repz
arpl
fs
cmp
pop
cmp
aaa
pop
add
mov
test
and
fucompp
mull
loope
mov
arpl
movsl
mov
ds
cmp
xchg
ljmp
test
subl
mov
inc
sahf
pushf
pop
sub
iret
pop
mov
and
dec
xchg
xchg
aaa
test
clc
test
or
movsb
mov
and
cwtl
je
cwtl
leave
mov
push
loopne
jnp
rcll
mov
mov
pop
inc
and
mov
addr16
arpl
dec
jns
mov
call
pop
call
stc
xor
fildl
or
scas
inc
ret
icebp
adc
je
mov
xor
sbb
daa
pop
cmp
dec
std
cmp
push
jmp
cmp
aaa
xchg
out
ja
cmc
loope
pop
xchg
xchg
lahf
insb
loope
or
decl
add
xchg
fsubp
mov
shlb
add
in
mov
int3
mov
mov
test
imul
xchg
popa
jns
adc
and
in
pop
cwtl
fs
push
adc
inc
xchg
adc
sub
ss
and
loop
cmp
jge
adc
push
test
push
repnz
mov
xchg
push
push
or
adc
scas
ret
scas
pop
or
bound
daa
sub
in
loope
das
pop
pop
add
aam
packuswb
iret
stc
xchg
jnp
lods
mov
cmp
imul
mov
push
inc
sbb
mov
repz
addr16
int
das
int
push
dec
stc
jnp
aas
dec
outsl
ss
ss
jmp
push
inc
lds
out
hlt
call
stos
or
out
adc
leave
call
mov
xchg
gs
jbe
fs
cmp
adc
cmpb
mov
xor
mov
mov
rcrb
out
addb
cmp
cmp
adc
and
cmp
push
or
lcall
push
mov
loopne
hlt
xchg
jb
mov
incb
mov
les
out
push
enter
or
adc
sti
dec
rcrl
adc
popf
push
or
mov
push
andl
cmp
popf
stc
incl
int3
and
call
cli
jo
mov
lods
jo
sub
mov
jns
or
xchg
shl
dec
sbb
stos
inc
popa
shll
or
icebp
cld
mov
movsb
mull
cmp
cmp
imul
add
push
push
les
xor
mov
or
xchg
dec
sahf
lret
daa
cmp
xchg
fdivl
xor
inc
jb
jle
mov
mov
lcall
sub
jp
orb
jle
stos
shrb
xchg
stos
daa
push
push
inc
lock
pop
aam
xor
inc
fadd
jb
insl
mov
add
cmpb
inc
ret
xchg
and
ffreep
lods
mov
addr16
call
test
jno
pop
inc
fucomip
cmpsb
cmp
shr
ds
insb
push
mov
sbb
out
into
stos
rol
fisttpl
push
fsub
hlt
popa
dec
mov
mov
sub
repz
ds
sbb
jbe
mov
pusha
dec
fucomi
fidivl
lock
mov
mov
addl
cmp
cwtl
iret
imul
test
or
mov
sbb
nop
mov
lods
call
arpl
stc
inc
add
add
jge
sbb
out
rorl
push
xchg
mov
mov
fistpl
mov
jne
movsl
mov
mov
inc
sub
xchg
adc
outsb
inc
mov
and
sarl
pusha
cmpb
jle
and
add
call
push
mov
sbb
sbb
pop
pop
aaa
xchg
repnz
daa
lret
fsubr
leave
inc
lret
popw
jmp
jo
mov
mov
scas
inc
jge
mov
stos
sbb
movsl
xlat
orb
mov
inc
and
mov
sahf
nop
jle
mov
pop
ljmp
xor
daa
pusha
jmp
data16
jne
sub
mov
lret
sbbb
imul
or
lea
test
fidivrs
add
movsb
push
pop
pop
sub
fcomp
fstps
and
aas
and
popf
and
rolb
orb
mov
aas
sub
pop
inc
adc
inc
andb
xor
pop
pop
or
xor
sub
xchg
loop
loope
pop
std
aam
inc
scas
mov
adc
xchg
lret
push
popf
sbb
push
clc
inc
push
mov
push
inc
das
es
mov
outsl
mov
jo
add
mov
flds
jmp
fildl
and
lea
jne
fstps
mov
jne
jae
pop
ret
push
cwtl
or
adc
push
int
sbb
sbb
pop
push
sahf
sub
add
xchg
mov
jae
cmp
stos
daa
scas
dec
jo
xlat
push
loope
imul
inc
imul
test
dec
cli
fmuls
jns
sbb
or
xchg
imul
out
dec
imul
xchg
mov
inc
or
xor
out
fstpl
roll
cwtl
shrl
jb
or
lds
adc
ds
mov
xor
js
inc
adc
pop
repz
ret
push
aam
cwtl
ljmp
ss
mov
xchg
dec
jae
loop
pop
pop
ds
inc
mov
xor
fstps
insb
mov
mov
aas
lret
lock
xor
adc
lahf
jb
call
add
test
and
pop
push
out
adc
xchg
data16
add
jg
adc
xlat
mov
inc
mov
mov
inc
rorl
fmuls
fcoms
hlt
jecxz
lds
out
repz
inc
cmp
rcr
add
inc
jge
xchg
adc
add
xor
sbb
or
cltd
iret
pop
icebp
xchg
fs
lock
pop
cld
lea
adc
xchg
add
outsb
scas
xchg
xlat
test
popa
ficoms
add
stos
cmpsl
add
mov
mov
ret
iret
out
mov
aaa
out
add
pop
and
mov
xor
or
outsb
sbb
xchg
mov
mov
mov
repnz
fsub
cmp
and
repz
out
dec
mov
dec
shrl
cmpsl
sub
push
repz
das
ret
testl
lock
adc
scas
loop
push
je
imul
dec
cmc
pop
adc
xor
fwait
pop
das
in
pop
pop
and
std
pop
pop
fdivl
mov
push
sbb
addl
inc
popf
dec
push
or
mov
cltd
stc
mov
mov
cmp
outsb
jnp
stos
xor
jae
shlb
js
mov
jbe
cmp
dec
jg
push
les
sbb
std
test
jge
lret
pushf
vshufps
xchg
and
das
dec
dec
add
adc
test
cmp
repnz
es
and
and
sub
or
scas
sub
sub
adc
mov
ljmp
push
stc
sbb
in
and
ret
dec
sbb
aad
sub
mov
xor
movsl
xchg
mov
mov
and
xchg
push
mov
pop
or
testb
lret
dec
cli
or
cli
add
fcmovnu
sbb
arpl
adc
sbb
xchg
mov
xor
or
adc
mov
test
push
cmp
dec
adc
xor
js
push
pop
push
lock
fidivrs
rolb
repz
neg
cmp
punpckldq
add
pushf
dec
mov
or
mov
inc
in
or
push
add
ljmp
imul
sub
sti
stc
adc
or
push
int3
xor
jmp
pushf
jb
in
es
je
mov
aad
push
aas
cs
add
fsubs
aam
jl
inc
push
xchg
test
mov
into
sub
lds
scas
scas
mov
xchg
add
sbb
push
cltd
je
dec
fisubrl
hlt
dec
push
xchg
lds
mov
jl
add
sub
dec
and
iret
call
js
push
push
outsl
dec
inc
add
fmull
dec
aam
pop
jnp
lret
mov
repnz
mov
lock
imul
fcompl
cmp
mov
jp
mov
cld
dec
std
out
fisubrs
pop
loop
sbb
dec
pop
dec
aad
aam
inc
sahf
sbb
sti
sti
sub
jne
rorl
mov
mov
in
mov
iret
daa
pusha
inc
and
mulb
es
jns
pop
cmp
xor
nop
imul
xor
insl
push
aas
dec
cmp
mov
xchg
mov
sub
notb
mov
push
mov
cmp
dec
out
mov
das
inc
adc
dec
subl
pop
lahf
ret
mov
popa
pop
out
mov
pop
stos
mov
and
nop
pop
xchg
out
jnp
adc
jecxz
cmp
or
ss
insl
mov
or
xchg
inc
outsb
sub
fldenv
cmp
xor
lods
lahf
int3
mov
lcall
or
roll
xchg
mov
and
lret
movb
and
bound
imul
in
mov
fcompl
iret
mov
jl
push
lahf
adc
jns
mov
xchg
xchg
dec
fwait
jo
data16
aam
hlt
mov
test
and
jb
test
inc
or
cmp
add
push
add
inc
cwtl
mov
pop
cmp
std
xchg
add
ror
in
lds
adc
stc
fs
mov
mov
negl
popa
lds
pop
mov
inc
leave
xchg
outsb
leave
adc
mov
fiaddl
gs
in
adc
sti
int3
cli
jns
mov
push
pop
adc
test
inc
fnsave
xchg
pushf
mov
xor
stc
dec
clc
dec
ljmp
ds
xlat
mov
jae
jbe
and
dec
cmp
int3
push
es
dec
inc
push
adc
pmulhw
xor
loopne
into
jno
or
add
sbb
jge
pop
xchg
inc
icebp
and
pop
nop
xchg
insb
gs
mov
mov
fcmovnbe
repnz
ficoml
lret
cmpsb
lds
adc
lahf
xor
mov
mov
add
sub
add
xchg
lcall
fwait
mov
insb
xor
lahf
cld
fcom
cs
arpl
push
and
fisttpll
push
js
popf
jle,pn
push
call
xchg
mov
es
negb
jbe
xor
lret
sarb
icebp
dec
loope
push
sbb
xor
jno
ljmp
rolb
mov
stos
push
sbb
xlat
jmp
jb
mov
xor
jo
mov
divl
sbb
loop
and
clc
and
xor
mov
gs
xor
xchg
divl
dec
pop
mov
les
shll
cmp
mov
or
repnz
pop
das
pusha
inc
sbb
in
jle
je
insl
fsts
jp
push
xor
push
mov
aas
add
xchg
call
rorb
loope
pop
xor
adcb
call
mov
rcrb
or
xchg
scas
ljmp
mov
js
or
push
stos
ljmp
shr
cli
outsb
ret
and
sbb
movsb
adc
and
negb
pop
lods
rcll
push
add
repz
out
pop
sti
push
loope
sti
push
mov
jb
push
jae
jmp
xor
dec
xor
push
aaa
movsl
inc
lods
mov
pop
loope
dec
pop
xorb
xchg
jb
jecxz
mov
adc
sbb
sarl
icebp
add
insl
jo
btc
mov
fnstsw
xchg
jge
sub
mov
clc
or
push
aaa
outsb
arpl
adc
push
push
pop
in
push
movsb
rolb
mov
mov
push
outsb
cmpsl
sub
sbb
xor
dec
and
xor
mov
add
rclb
cmp
fstpl
mov
outsb
mov
fisttpll
inc
scas
mov
test
inc
add
mov
push
test
cmpsb
and
inc
jg
inc
jns
push
test
mov
data16
cs
pop
jp
movsl
push
andb
push
lods
push
aad
mov
mov
cmp
or
jp
sub
nop
jmp
ficoms
pop
jmp
jne,pn
mov
xor
out
shl
out
mov
out
xor
insb
adc
push
cs
in
add
add
jnp
loopne
mov
mov
xlat
out
cli
or
or
jo
cwtl
in
popa
mov
pop
pop
jge
jbe
jmp
add
cmpsl
pop
dec
add
cmpsl
mov
stos
sbb
test
popl
cmp
out
jne
jmp
cs
lcall
stos
push
dec
mov
cmp
int3
xor
xlat
ja
mov
pop
sahf
into
pop
popa
sbb
add
xor
jecxz
lds
and
pop
pop
repz
repz
outsl
cltd
push
inc
lods
and
xchg
jns
jae
mov
sub
adc
mov
outsb
icebp
mov
pop
cmp
cmp
cmp
fbstp
xor
mov
lret
fsubr
and
rorl
dec
or
out
add
arpl
clc
xchg
or
mov
out
adc
xor
mov
loop
ja
lahf
cld
or
mov
daa
push
inc
rcr
xor
adc
xchg
pop
and
and
push
lret
mov
dec
std
mov
pop
in
scas
mov
arpl
xlat
addl
in
mov
cli
cmp
mov
fwait
ret
inc
cmp
dec
bound
pop
push
ljmp
negb
or
add
inc
fwait
repz
int3
adc
mov
pop
push
dec
stos
mov
and
aas
icebp
mulb
std
pop
je
js
test
xorb
adc
and
pop
ret
mov
cld
add
lret
out
mov
fidivl
push
adc
and
cmpsb
test
inc
push
cmp
mov
outsl
fwait
jb
imul
push
jge
in
or
cld
idivb
addr16
push
dec
cmc
lds
insb
dec
jp
xchg
sub
xchg
mov
fnsave
pop
fs
mov
inc
daa
arpl
jnp
shr
adc
dec
xor
mov
pop
sub
adc
cltd
lds
sbb
mov
jae
fadd
adc
stos
subl
add
ljmp
paddsw
shlb
jo
dec
and
mov
rclb
sbbl
jno
xchg
push
push
jo
inc
dec
cwtl
pop
gs
cwtl
dec
in
addr16
mov
push
clc
or
daa
sub
jb
xlat
mov
mov
cmp
mov
movsl
xor
in
dec
and
pushf
test
pop
lods
xor
jecxz
loope
jne
sub
arpl
insb
test
fdivs
int
das
outsb
cmp
imul
and
mov
lods
popa
ret
gs
insl
xchg
mov
mov
mov
sub
sub
mov
xor
mov
mov
xor
adc
add
and
adc
in
jne
int
mov
stos
and
sbb
shlb
mov
sub
les
icebp
add
cwtl
mov
mov
test
xchg
jo
push
fcom
mov
mov
mulb
imul
sti
out
btr
cmp
imul
push
xor
sbb
fcompl
xor
dec
inc
test
jp
push
mull
lods
mov
jo
or
sub
leave
out
scas
dec
pop
fiaddl
mov
lds
incl
adc
cwtl
jge
cmpsb
int3
clc
leave
dec
jmp
push
fnsave
fyl2x
fucomip
in
push
push
adc
mov
sbb
lret
stos
lea
push
nop
insl
outsl
rclb
gs
inc
push
cwtl
sub
into
idivb
mov
shll
in
lock
data16
sub
jo
jmp
iret
add
xor
jl
popf
in
or
into
notl
ja
test
lock
fldt
mov
out
clc
mov
xchg
xchg
movb
xor
sbb
aas
mov
lock
or
xchg
lock
in
ljmp
xchg
mov
mov
int
lds
add
mov
cwtl
and
pop
push
and
addr16
lea
lcall
mov
mov
lea
cmc
aaa
andl
cmc
cmp
ljmp
sahf
es
inc
add
lds
stc
xchg
lock
repnz
push
dec
test
shlb
je
inc
inc
scas
loop
pushf
pusha
mov
lahf
clc
push
pop
fistps
mov
xor
dec
adc
or
add
ss
xor
sbb
movsl
aam
das
pop
and
imul
adc
dec
int
sahf
mov
inc
fisttps
imul
push
daa
mov
lods
out
test
sbb
outsb
scas
xor
dec
fdivs
fidivs
xor
xlat
push
sub
adc
lea
mov
icebp
push
cmp
je
cltd
sub
push
into
or
lock
jnp
dec
push
dec
pop
int
sbb
jbe
inc
stos
mov
ret
sbb
cmp
in
push
cmp
pop
mov
scas
std
scas
inc
jle
adc
push
shll
xchg
cmovnp
sbb
shll
and
cmpb
push
push
nop
jae
adcb
ret
je
shlb
aad
dec
es
sbb
mov
repnz
fcomps
push
jp
mov
mov
sbb
lret
adc
in
addr16
jl
cwtl
scas
xor
arpl
leave
movsl
jnp
js
sub
and
fwait
cmc
repz
sub
mov
push
fs
cmp
loop
fidivl
ja
sub
cld
push
adc
push
and
int3
push
stos
or
movsb
pusha
imul
clc
mov
addl
out
inc
push
xchg
int
leave
arpl
mov
icebp
dec
pop
imul
sar
adc
repz
add
pop
push
imul
ja
push
add
dec
gs
cmpsl
sarb
fistl
fcompl
lods
stos
adc
mov
jno
mov
iret
lcall
daa
outsl
sahf
pushf
jb
xchg
sbb
jb
mov
sbb
push
sbb
cmp
mov
repnz
xchg
mov
sbb
pop
scas
call
das
aaa
sub
iret
ret
xchg
mov
xchg
dec
dec
inc
inc
dec
clc
adc
mov
add
dec
js
sbb
xor
mov
clc
dec
jno
sbb
jae
xor
stc
xchg
mov
push
inc
jecxz
outsb
out
shlb
xor
inc
sub
fsubrs
inc
aad
xor
dec
es
jno
adc
sub
add
fbld
faddl
lds
js
or
stos
lock
fsubrl
add
mov
push
jno
movsb
addr16
cmc
sar
adc
push
test
pop
dec
roll
loopne
ja
in
cli
mov
rcrb
cmc
imul
xchg
loopne
lret
push
add
in
xchg
inc
sbb
minps
stos
xchg
inc
cwtl
pop
lret
inc
in
xchg
lcall
pop
cs
xlat
mov
jge
gs
int
sbb
frstor
sub
pop
pushf
xlat
pop
sub
lods
pop
dec
mov
test
xor
push
out
add
outsb
sahf
stc
mov
shrb
movsb
xchg
iret
lds
insl
call
lea
cmp
ja
gs
xchg
xchg
aas
aas
fidivl
imul
pop
movsl
inc
sub
mov
dec
pop
sbb
mov
repnz
push
movsl
js
mov
jno
mov
leave
into
les
outsl
and
inc
ret
fisttpll
insb
lods
sub
inc
add
stos
jbe
push
dec
cmc
scas
mov
mov
mov
aad
mov
mov
scas
js
jmp
cltd
or
sti
pop
in
xor
imull
mov
negb
int
sub
int
push
sbb
pop
pop
cmp
lock
pop
shl
xor
mov
movsb
fildl
scas
call
jp
pop
rcrb
out
inc
ljmp
sub
stc
fyl2x
or
xor
outsl
xor
adc
bound
mov
bound
xchg
mov
add
jae
out
sub
sub
loope
sub
and
pop
cwtl
call
mov
dec
dec
testb
add
mov
divb
aaa
fwait
cmp
mov
andl
dec
ret
push
insb
and
das
push
xor
xchg
out
cmp
jnp
mov
mov
jbe
xchg
fwait
jb
mov
inc
dec
sbb
dec
xlat
mov
ret
or
sarb
dec
xchg
in
js,pt
jmp
loopne
outsl
fs
fdivrs
rcl
lret
pop
cmp
push
adc
jbe
dec
push
mov
push
cs
leave
or
jne
cmp
pop
inc
test
movsl
fcmovnu
jo
outsb
push
aaa
test
cmc
pushl
ja
flds
push
add
mov
sbb
je
pop
sbb
mov
outsl
mov
jg
insl
inc
push
in
mov
jbe
and
movsb
sbb
jmp
sub
cltd
or
pop
dec
xchg
movsb
inc
mov
insl
outsl
ja
cltd
mov
and
sbb
sarl
mov
or
cmp
mov
rcrl
push
push
cmp
sbb
jmp
jbe
sub
cmp
inc
arpl
sub
imul
pop
sbb
lods
sbb
mov
ret
mov
lock
pop
rclb
pop
sub
fnstenv
xor
js
inc
movsb
xlat
lret
nop
gs
call
mov
and
stc
sub
mov
pusha
push
add
repnz
push
pop
pusha
mulb
sbb
sbb
push
mov
lcall
pop
mov
data16
xlat
xchg
mov
mov
push
push
aaa
int3
cld
xor
cmp
mov
lods
cmp
mov
in
inc
adc
mov
mov
add
pop
ret
jp
nop
test
mov
and
push
lock
shrl
adc
nop
subl
in
jns
cs
inc
adc
jge
mov
pop
stos
mov
push
mov
xor
ret
jecxz
adcb
fsubp
add
sub
xor
add
aas
aad
roll
jecxz
add
push
sub
call
or
jae
fisttpl
xor
dec
fwait
jae
inc
popf
int3
in
out
loop
leave
jns
mov
cld
xchg
push
push
xlat
and
jbe
stos
scas
loop
imull
mov
or
in
dec
lods
sarb
pop
imul
in
push
pop
jae
cmp
aas
addr16
and
jns
popa
mov
pop
mov
inc
rcrl
aas
add
fiaddl
and
pusha
jle
inc
aad
sahf
ficoms
adc
aaa
aad
pop
fstl
cltd
mov
or
ss
mov
jge
push
sub
rolb
cmp
xlat
inc
add
into
lock
push
scas
sbb
mov
notl
push
lcall
out
arpl
push
dec
and
je
jns
ret
dec
adc
add
test
pop
sti
out
sbb
jns
stc
scas
dec
rep
les
imul
jle
sahf
inc
xor
jg
inc
aaa
ljmp
fldt
fidivl
jge
aas
sbb
cmp
sarl
test
lret
lret
inc
mov
dec
out
xorb
mov
lahf
mov
data16
pop
mov
icebp
enter
imul
rolb
push
dec
outsw
pop
movsb
fnsave
fwait
lods
stc
mov
dec
pop
mulb
xchg
shlb
imul
bound
lret
dec
fiadds
mov
fistps
icebp
xor
addl
pop
sbb
mov
cwtl
push
push
dec
aas
push
or
daa
xlat
adc
data16
dec
mov
xchg
cmovg
pop
pop
xor
test
inc
out
pushf
xchg
cmc
imul
mov
ret
lahf
enter
jg
jp
mov
add
stos
adc
sub
gs
sahf
dec
fcomi
lret
hlt
pop
fdivrl
sub
push
out
aad
adc
mov
fisttps
insl
sbb
test
stos
hlt
aas
inc
or
jmp
mov
mov
fwait
out
xor
xor
push
cmp
test
or
mov
mulb
movsl
dec
ret
rcrb
pop
int
test
lret
call
fistps
aas
dec
and
aas
repz
pushf
orb
and
rolb
cmp
das
adc
mov
cltd
aam
ss
fwait
pop
scas
pop
fmull
aad
pop
xor
and
jns
lock
fistl
bound
in
int3
or
aam
pop
push
nop
sub
xor
mov
pop
ss
xchg
pop
aam
cmp
xor
dec
mov
rcrl
int3
fs
aas
cmp
mov
push
pop
outsb
inc
lret
outsb
mov
push
mov
es
mov
push
sahf
xorb
xor
xchg
sti
sub
cld
pop
ljmp
sbb
or
jb
jnp
fcompl
push
imul
sub
pop
in
jbe
push
lret
sbb
cmp
mov
add
mov
xorb
mov
aas
stc
std
sub
jb
and
lret
stos
inc
push
mov
aad
xor
loope
loopne
or
stos
shr
and
cltd
clc
nop
pop
loop
in
cmp
stos
mov
jns
push
push
hlt
scas
jl
fidivl
jp
fs
xchg
pop
mov
daa
jo
cwtl
fsubp
call
push
add
popa
push
bound
repnz
shrb
push
imul
jl
neg
cmp
rol
cli
push
dec
das
dec
lods
pushf
dec
cmp
push
cld
jle
cmp
mov
dec
pop
adcl
pop
mov
mov
shrb
std
clc
clts
out
mov
and
insb
push
or
dec
dec
lock
fidivs
jecxz
sti
in
es
into
adc
fs
xchg
sbb
xchg
mov
hlt
add
loop
inc
imul
pop
iret
mov
pop
pop
mov
dec
mov
mov
fiaddl
and
or
cmp
inc
and
in
xchg
inc
xlat
notl
sub
push
adc
inc
movsb
out
push
sub
imul
xchg
cmp
sbb
enter
loope
add
into
vpsadbw
mov
jp
pushf
or
fbstp
sub
push
mov
pop
adc
pop
push
adc
push
xor
xchg
sub
dec
js
lret
push
clc
in
insb
fisubrs
adc
lret
mov
dec
std
inc
lea
mov
fwait
dec
xchg
adc
fwait
mov
stc
xchg
mov
inc
mov
stc
mov
sub
jmp
test
push
jg
jae
mov
movsl
mov
fdiv
xor
gs
push
rorl
out
stos
push
insb
push
cmp
jae
mov
clc
fs
stc
xchg
int
or
mov
bound
out
in
dec
lret
test
rcrl
lods
loop
scas
mov
stc
loope
mov
jo
push
movb
cmp
sub
das
loop
scas
mov
add
inc
adc
xor
sub
shrb
insb
fnstsw
fcmovnu
lcall
daa
popf
mov
pusha
out
cmp
jae
arpl
push
adcl
sbb
fsubl
fcmovne
push
sub
and
sub
adc
mov
jmp
enter
popa
mov
ljmp
mov
inc
jecxz
mov
xor
out
int3
lea
das
mov
lahf
push
xor
gs
lock
shrl
dec
mov
cmc
mov
arpl
sahf
daa
xor
or
ljmp
roll
js
data16
and
in
cs
cmpsb
sbb
sub
xor
adc
ret
cmp
mov
mov
sub
loop
sarb
movsl
cmp
rep
xchg
lret
xchg
inc
xchg
xchg
outsl
rolb
pop
pop
aad
mov
incb
jecxz
xchg
mul
mov
fucomp
adc
bound
int3
ds
icebp
fwait
jo
insb
fists
out
loopne
fimuls
add
inc
divl
cmpl
lcall
xchg
les
clc
sub
insl
jb
insb
std
sub
lods
mov
and
arpl
scas
ficoms
mov
adcb
arpl
cwtl
or
fwait
xor
sbb
subb
xlat
dec
aaa
js
lods
push
sbb
sub
push
daa
add
lds
sbb
in
pop
test
scas
cli
or
fsubs
mov
shrl
jae
and
lret
je
lea
xor
data16
test
xchg
cld
stc
lds
shlb
xor
adc
into
or
repz
pop
lcall
outsb
clc
sub
jp
and
aad
loop
rcll
sbb
ja
outsb
iret
cmp
sub
lds
sbb
outsl
bound
inc
jns
aam
into
push
jb
insb
push
mov
aas
lcall
cwtl
mov
fprem
or
sub
jge
lret
out
iret
cltd
xchg
pop
pop
outsb
icebp
lret
inc
clc
orl
push
pop
add
jb
gs
jo
and
insb
jbe
mov
or
or
mov
in
sbb
int
lret
pop
or
push
cmpsb
jns
xchg
cld
cmp
add
rorl
jmp
mov
pop
inc
cli
sahf
push
add
pusha
xchg
xor
ljmp
in
in
cmpsl
scas
dec
xlat
jno
xchg
mov
into
out
xor
lods
fisubl
sbb
insb
jecxz
inc
test
mov
xor
push
sub
jo
sub
insl
jl
cwtl
mov
out
clc
push
leave
bound
jbe
std
shlb
testb
popa
test
jp
popf
sbb
cmp
mov
jmp
xchg
imul
popf
lret
test
push
pop
repnz
dec
mov
and
mov
jg
mov
insb
mov
hlt
movsl
mov
xchg
js
cmp
mov
gs
or
das
out
lods
xchg
pop
xchg
inc
sub
jb
lds
xor
pop
push
loope
pop
fwait
or
inc
es
clc
inc
pop
cmp
pop
inc
sbb
mov
ficoms
ss
mov
pop
movsb
mov
mov
movsl
xchg
mov
sti
sbb
movsb
arpl
hlt
xchg
setp
xlat
mov
xor
lcall
inc
push
push
push
movsl
inc
mov
pop
imul
inc
jnp
adcl
dec
pushf
movsb
loop
scas
hlt
clc
dec
imul
cmp
add
mov
mov
dec
jae
dec
or
push
aam
cmpsl
inc
jecxz
xorl
shl
jnp
hlt
test
shrb
pop
and
add
out
gs
in
iret
or
cmp
hlt
push
fs
aam
adc
andb
stos
jae
pop
mov
sbb
andb
jbe
lret
pop
add
js
stos
rcll
jle
cmp
dec
negb
or
test
in
data16
pop
push
inc
xchg
jg
sbb
imul
push
cmp
aas
inc
cltd
sub
mov
add
sbb
aam
mov
subb
test
jbe
xchg
inc
popf
mov
xlat
mov
loop
pop
mov
and
fucomp
and
adc
adc
and
xchg
hlt
add
and
push
stos
adc
popa
repz
fisttpll
es
mov
mov
jns
loop
sbb
inc
sahf
andb
les
test
cwtl
andb
insl
cmp
sub
jno
fmull
outsl
daa
hlt
cmp
or
lds
cld
adc
int
and
add
outsl
pop
imul
push
pushf
xchg
lds
cld
leave
test
jl
pop
jne
jno
and
clc
inc
fidivrl
cmpsb
int3
sub
sub
movsb
scas
movsl
lea
mov
nop
lcall
dec
or
mov
sbb
into
icebp
pop
dec
push
xchg
inc
rcll
push
mov
ja
inc
out
cmp
cmp
jl
push
mov
out
push
outsl
pop
pop
adc
stos
scas
pop
das
sub
inc
imul
mov
mov
mov
jle
and
jl
mov
nop
pop
imulb
nop
jecxz
outsb
loopne
cmp
mov
jns
pop
in
jb
loope
inc
stos
js
mov
rcl
mov
inc
xchg
or
mov
or
bound
cmpl
inc
xor
into
pop
sub
out
faddl
mov
mov
sbb
dec
pop
xor
mov
mov
xor
mov
sbb
dec
ds
test
data16
in
jb
add
mov
lea
je
out
psubq
add
in
icebp
ret
and
fmul
xor
mov
sub
repnz
out
mov
pop
cs
insl
gs
subl
int
and
lret
popa
mov
outsb
sahf
cmpsl
es
mov
jmp
jl
test
out
insl
push
jmp
or
cmp
mov
adc
fstl
ss
xchg
out
or
and
pop
xchg
call
xcrypt-cbc
cmpsl
push
test
sub
jbe
call
iret
fldt
ds
out
push
out
cmp
sub
hlt
push
lea
aas
push
sti
icebp
mov
adc
int
xchg
les
scas
pop
sub
xor
cmp
push
jle
pop
imul
lea
subb
sbb
sar
nop
sub
cmovbe
sti
pop
xor
xchg
dec
adc
cmc
aam
jns
sub
xchg
cmpb
xlat
xorb
sahf
adc
xchg
and
add
add
loope
mov
orl
jecxz,pt
scas
cmp
mov
mov
movsl
adc
sbb
mov
inc
mov
pop
mov
xchg
sub
xchg
inc
xchg
xor
ljmp
cmpsb
mov
imul
fisubrs
adc
mov
and
or
cmp
adc
mov
mul
sti
orl
mov
popf
cltd
and
je
sti
mov
lcall
add
das
pop
or
mov
mov
fisttpll
push
repz
sbb
int
sub
addr16
inc
ds
das
fisttpl
ret
jl
xor
cwtl
lahf
sub
or
imul
mov
dec
xor
sbb
stc
mov
push
aad
mov
ds
ja
gs
call
cmpsb
xchg
cmp
jg
push
cmpsb
mov
lea
sbb
dec
xor
inc
pop
mov
dec
adc
push
je
cmp
test
outsl
xor
jg
xchg
je
mov
nop
mov
xchg
ljmp
mov
add
jl
lea
cmpsl
pop
lods
cmp
or
fisubrs
cmp
or
movsl
and
repz
rclb
fstpt
mov
pop
popf
jge
cltd
cwtl
loop
pop
dec
pop
cmpsl
inc
fndisi(8087
cmpl
xchg
fistpl
adc
cltd
decl
and
sbbl
push
movsl
cmc
data16
mov
testl
lret
pop
dec
cmp
jne
jmp
in
mov
xchg
scas
push
sbb
hlt
imul
push
aam
sbb
pop
in
mov
xchg
xchg
loop
push
lcall
mov
mov
xor
xchg
les
inc
ret
xchg
lea
pushl
divl
loopne
clc
repz
xor
sahf
int
inc
std
mov
inc
mov
dec
pop
jo
aaa
mov
movsb
jns
ja
mov
add
mov
into
dec
das
or
mov
push
push
les
out
mov
xor
push
push
imul
cli
stos
inc
insb
sbb
jecxz
popa
xor
test
mov
adc
idivl
flds
mov
mov
xchg
fsubp
sbb
mov
out
fmulp
jmp
mov
xchg
flds
gs
push
xor
inc
jle
sti
mov
xchg
fsub
cmp
dec
insb
or
adc
ss
sbb
and
jb
cmp
ficoms
sbb
sbb
sub
decl
out
xchg
sar
sbb
fcmovbe
and
push
add
mov
add
mov
jno
xor
fisubs
js
sub
xor
add
cmp
mov
insb
xor
insb
sub
aaa
mov
push
push
gs
sub
dec
push
cmp
xor
insl
push
int
jbe
and
imul
jb
inc
loopne
push
aas
lret
jne
adc
ret
addb
call
adc
nop
jns
sbb
andb
pushf
push
daa
ljmp
sub
mov
mov
push
das
jb
jecxz
out
sbb
adc
into
adcl
test
jmp
add
daa
adc
push
pop
out
and
cli
testl
inc
adc
sahf
stos
mov
fdivp
leave
inc
dec
and
mov
test
sbb
add
in
sar
arpl
rolb
sub
mov
dec
iret
lret
or
pusha
fwait
scas
sti
and
fwait
pop
je
aas
mov
stos
lea
ffree
mov
dec
mov
test
addb
jmp
out
xor
jnp
nop
loope
add
fstps
ja
and
hlt
and
xchg
fxtract
or
jbe
out
add
xchg
mov
fs
mov
arpl
and
es
jnp
mov
jmp
icebp
out
adc
dec
xchg
bound
push
mov
pop
xchg
dec
ljmp
mov
mov
loopne
xor
loop
ret
insb
rcrl
dec
or
loope
rcr
shl
dec
cmp
sti
ret
mov
loop
out
in
testl
push
es
sbb
mov
into
arpl
dec
pop
pop
lcall
int3
popa
xor
push
les
cmp
lret
lret
notb
lds
out
xchg
push
lods
mov
cmpl
mov
push
push
lret
cld
push
out
sbb
fisubs
xchg
insb
sub
lods
xchg
call
jg
aaa
push
add
test
xchg
inc
stc
je
mov
inc
mov
iret
and
lret
push
push
jo
dec
xchg
enter
push
repz
lock
loope
cmp
cmp
ret
mov
cmc
or
cmc
and
fcomps
sub
and
pushf
or
mov
int3
cmp
xchg
dec
addl
rcrb
mov
adc
mov
sbb
lods
xor
jmp
mov
push
outsb
jnp
leave
jp
loopne
loopne
jle
movsb
sbb
push
movsb
divb
repnz
sbb
mov
jmp
cmc
xchg
outsl
mov
lods
cltd
imul
or
mov
mov
outsl
dec
sbb
insl
loop
cmp
inc
jmp
cmp
popa
shlb
stc
pop
stc
pushf
push
mulb
and
enter
cmp
stos
mov
or
jns
dec
push
stos
push
jne
sub
aad
push
mov
cli
and
jnp
sub
les
pop
mov
push
test
pop
sub
cmp
movsb
cmpsl
pop
sti
sbb
cmp
inc
scas
cmpsb
test
and
mov
xchg
mov
or
pop
xchg
xor
fs
cmp
jbe
inc
pop
mov
ja
lret
sbb
or
mov
std
stos
shrb
dec
mov
xor
arpl
cmpsl
scas
mov
popa
mulb
lret
arpl
mov
adc
xchg
mov
incb
mov
dec
sub
fnsave
sbb
sbb
rclb
mov
aaa
ds
adc
jge
cmp
sub
mov
pushf
icebp
adc
mov
mov
adc
mov
sbb
fsqrt
jns
pop
pop
inc
fmulp
imul
movsb
dec
sahf
inc
dec
mov
xchg
lods
pop
jle
lea
call
mov
pop
or
add
cmpsl
aam
mov
jg
push
add
cltd
cmp
add
sbb
fdivs
mov
stos
iret
pop
mov
fcomps
test
jns
sbb
push
cmpsb
adc
ret
ret
test
jnp
daa
enter
clc
mov
cmpsb
outsb
push
push
in
xor
loopne
and
sarl
pop
and
and
jo
pop
pushl
xchg
mov
push
push
dec
or
in
stos
sbb
dec
repnz
cli
int3
arpl
pop
jb
fcomp
lea
enter
pop
sub
in
inc
or
in
fildll
adc
int
sbb
dec
inc
arpl
mov
push
sarl
sti
xchg
add
call
flds
xchg
sub
sub
popa
jge
pop
xor
mov
stos
lea
push
push
int3
pop
out
iret
jp
mov
xchg
sbb
clc
dec
inc
push
das
lds
das
push
xchg
sub
movsb
xchg
dec
pop
lret
cmp
test
xchg
and
mov
mov
cmp
pop
lea
stos
sub
mov
int
add
xchg
cmc
xor
cmp
shrb
rolb
xchg
xor
scas
jnp
sbb
aaa
pop
stos
aam
fdivp
mov
mov
or
inc
cmp
fisttpl
inc
push
dec
lret
loopne
lahf
addr16
test
jo
sub
mov
sub
push
sbb
imul
pop
dec
cmp
ss
pop
test
lret
xchg
adc
daa
enter
cmpsl
mov
mov
and
add
cmp
adc
cmpsb
mov
pop
dec
xchg
pop
xchg
jmp
adc
clc
cmp
movsl
xchg
inc
mov
jmp
adc
imul
dec
push
add
add
mov
adc
sub
mov
lock
lret
cli
test
xchg
aas
push
add
or
xor
push
cs
ss
jecxz
push
sti
jl
pop
in
pop
dec
mov
dec
or
dec
stos
and
jbe
mov
push
inc
sub
push
jmp
out
push
push
insb
js
pushf
cli
sub
add
inc
jnp
jb
and
cli
cld
lea
hlt
pop
es
push
sarl
std
mov
push
adc
or
xlat
mov
push
lock
xchg
xor
mov
mov
adc
or
or
push
sub
jno
push
push
popa
call
jmp
mov
dec
xchg
sbb
or
jmp
xchg
hlt
push
icebp
or
xchg
orl
in
and
cmp
das
stc
jnp
push
mov
push
loope
cli
add
insb
call
push
add
movsb
pop
lret
and
movsl
inc
sarl
movsb
pop
bound
pop
lock
xor
fidivl
xor
xchg
loop
ret
pop
nop
aam
sub
pop
in
push
clc
dec
push
adc
lret
iret
repnz
mov
das
jbe
mov
sub
aam
push
jbe
popf
jne
add
sub
mov
inc
cmp
cmp
mov
dec
and
fs
pop
iret
jle
insl
sub
xor
test
out
flds
loope
mov
push
adc
sti
adc
push
test
inc
mov
into
shll
in
aaa
loop
dec
pusha
cmpb
cmpsl
mov
or
jo
xor
push
mov
add
mov
pop
stc
jecxz
iret
push
mov
std
xor
in
push
in
mov
sahf
adc
cld
das
repnz
xor
cmc
pushf
jbe
sub
mov
lods
lock
repz
shrl
mov
add
cmp
cwtl
leave
lret
adc
and
mov
testb
out
test
adc
xor
js
ret
sub
shlb
pushf
jns
das
sub
mov
sbb
pop
sub
nop
scas
add
and
ret
add
push
xor
icebp
jge
shll
dec
lods
dec
movsb
or
adc
xchg
xor
add
sub
pop
shll
popf
sbb
push
out
sbb
mov
adcl
and
addl
popf
push
jb
enter
test
sub
cld
les
icebp
test
int
fistps
xchg
ss
aas
adc
js
lods
pop
mov
test
dec
cmp
push
dec
insb
push
jb
and
cmp
imul
movsb
jae
fwait
cmp
cmpsl
fcmovne
xor
mov
mov
icebp
lds
ffree
repz
icebp
jnp
cmp
push
fs
dec
mov
sub
xor
cmpl
ret
lret
lods
adc
add
roll
pop
or
and
pop
outsl
inc
inc
negb
repnz
inc
add
data16
nop
outsb
pop
cmpsl
loopne
push
jb
add
negb
out
test
xlat
mov
sub
pop
sarb
lock
adc
lods
xchg
out
push
rcl
movlhps
sbb
mov
pop
in
test
mov
daa
into
fmull
cwtl
add
dec
adc
repz
inc
adc
out
push
jo
inc
fsubs
sbb
sbb
lods
add
push
stos
push
scas
fisubs
fisttps
stos
outsb
cmovb
loope
data16
mov
lret
pop
push
aad
sub
sub
pop
not
and
imul
mov
push
jmp
bound
adc
test
and
xchg
mov
push
mov
and
ja
or
add
jmp
cs
xorb
jbe
mov
psrld
mov
mov
inc
mov
adc
or
pop
test
dec
pushf
rorb
adc
test
cs
mov
cld
push
adc
xor
adc
xchg
lods
or
arpl
jp
jle
sub
stos
sub
daa
push
dec
mov
daa
stos
aaa
inc
fcoml
ljmp
aad
cs
and
test
test
in
xchg
adc
push
and
mov
and
sbb
adc
xor
in
and
and
cmpsl
fistps
mov
arpl
cmp
mov
cmp
stos
mov
adc
lds
xor
mov
in
mov
sub
sub
out
push
jne
ds
push
test
and
dec
inc
and
push
lods
cmp
sbb
jge
push
loope
cmp
mov
mov
mov
adc
daa
push
mov
xchg
int3
add
sti
mov
sub
jo
out
mov
pop
sbb
adc
pop
ss
dec
mov
out
push
lret
xor
push
mov
lods
loope
push
loopne
scas
mov
pop
popf
or
jno
js
push
mov
ror
push
stos
jno
loop
mov
dec
xchg
in
mov
dec
adc
cwtl
cwtl
dec
cmovno
mov
jp
je
enter
jne
mov
nop
push
and
mov
xor
xor
jmp
out
lds
in
jb
cld
hlt
xchg
add
mov
ret
dec
stos
dec
mull
pop
nop
hlt
stos
lods
shrb
jmp
nop
push
ret
lods
mov
out
popf
cmp
mov
push
or
aaa
test
dec
fidivrl
or
ljmp
data16
lods
arpl
jmp
jge
mov
aad
gs
jo
adc
push
aaa
fnstenv
dec
mov
push
sub
add
aaa
mov
jne
inc
push
push
or
jg
in
fnstcw
xchg
dec
mov
fisttpl
pop
test
int
xchg
imul
jecxz
jno
dec
out
bound
push
out
jae
mov
scas
pop
mov
or
cwtl
cmpsl
insl
dec
xor
push
pop
scas
sbb
xor
pop
fcoml
xlat
jns
and
pop
rcrb
sarl
and
out
cmc
mov
popa
out
mov
and
std
xchg
lahf
xchg
sbb
leave
stos
adc
sub
fisttpll
push
in
inc
xlat
ja
adc
lea
mov
fidivrl
push
push
jb
push
dec
repnz
adc
xchg
jne
jae
mov
xor
sar
cmp
or
sub
repnz
scas
test
adc
ljmp
push
out
add
dec
jecxz
es
mov
clc
add
push
in
xchg
inc
shrl
inc
sbb
push
mov
push
dec
adc
inc
fistps
inc
mov
jg
hlt
movsb
aam
push
mov
jmp
lods
fdivrs
std
and
ret
cvtps2pi
mov
jne
lods
xlat
repz
insb
cwtl
mov
inc
xchg
cmp
xchg
or
push
jb
lea
and
push
xchg
stos
mov
add
mov
sub
mov
push
popl
aaa
rcll
jbe
mov
push
cmp
jg
xlat
lds
jne
in
adc
cli
sbb
inc
and
popf
fdivp
mov
mov
or
inc
movb
sub
ret
in
ss
jno
scas
leave
pop
xchg
adc
cmp
pop
repnz
add
jmp
sub
xor
pop
pop
mov
pop
outsb
xchg
pop
mov
push
shl
cltd
inc
mov
pop
orb
dec
aam
mov
and
xchg
xchg
add
mov
pop
ljmp
and
int
add
insb
push
mov
cmp
push
cmp
jno
or
aas
aas
inc
inc
mov
jb
outsl
dec
jno
add
xchg
insb
std
push
push
push
mulb
add
enter
addb
sub
int3
add
xlat
jae
and
into
jb
mov
aam
lods
arpl
pop
jo
out
jno
ss
andb
js
cmp
xor
add
popw
out
ret
iret
mov
jle
mov
insl
mov
loope
push
mov
mov
rcl
xor
xor
inc
clc
sub
lcall
idiv
push
xchg
loop
pop
inc
daa
mov
arpl
add
mov
lds
inc
sub
out
push
cmp
pop
xchg
xlat
fbld
push
mov
cltd
ss
push
mov
ds
icebp
data16
sti
in
cld
adc
into
das
adc
cs
mov
sti
rcrb
js
inc
dec
cli
add
inc
repnz
stc
and
rorl
cld
stc
xchg
scas
adc
push
mov
rcll
pop
mov
lret
mov
add
data16
cld
loop
pop
cmp
scas
cmpsb
sbb
sbb
sbb
or
adc
xor
xor
divl
sbbl
add
push
mov
insb
fdivp
out
jae
add
in
cld
cmp
pop
push
cltd
nop
mov
or
fnstsw
pusha
mov
mov
cmp
push
push
repz
lods
enter
mov
out
test
sub
cvtps2pd
dec
add
inc
je
daa
dec
call
cli
dec
dec
adc
adc
gs
scas
cmpsl
cmpsb
push
imul
in
subl
xchg
add
fdivrl
nop
jmp
sbb
or
test
cmp
add
adc
ja
jns
out
fiadds
dec
sbb
or
mov
into
mov
inc
push
sbb
add
xchg
dec
push
shrb
sub
ror
mov
xchg
cltd
mov
aas
insb
div
stos
das
sbb
add
stc
sarl
lcall
ss
adcl
mov
addr16
pop
add
fdivrs
cmc
call
add
ret
jge
adc
fistpll
popf
dec
adc
xor
mov
xchg
adcl
repz
imul
sbb
pusha
cmp
and
ljmp
push
in
popa
sahf
cld
imul
pop
out
inc
mov
nop
test
xchg
popf
mov
mov
cmp
sub
dec
cmpsl
sbb
fisubs
inc
and
pop
shll
cmp
cltd
loopne
outsl
gs
sub
lods
stc
jmp
stos
out
jae
stc
lret
hlt
sub
xor
movsl
mov
or
leave
enter
fstpt
mov
inc
fisubl
adc
jae
or
and
arpl
mov
pop
mov
inc
in
addr16
and
inc
adc
cwtl
out
outsb
jo
loopne
sbb
mov
filds
dec
sub
daa
xchg
pop
xchg
fists
and
rorl
pop
inc
dec
push
xor
pop
pop
mov
adc
fwait
cli
rorl
adc
xchg
xorl
frstor
lds
mov
pop
push
jae
xor
stc
rolb
cmpsb
mov
lcall
inc
cltd
and
and
loope
cltd
fisubl
xor
scas
and
xchg
push
push
add
sub
add
cwtl
sub
addr16
lcall
jl
mov
cmp
jnp
cld
int
in
idiv
inc
adc
lcall
mov
dec
std
mov
xchg
adc
mov
add
dec
xchg
in
push
ret
popf
xor
add
aaa
test
not
sub
and
jmp
int
mov
jge
adc
shl
clc
cmpsl
inc
dec
cmp
push
jmp
dec
xor
nop
cmp
pushf
push
aad
int3
and
cmp
pop
pushf
cltd
fbstp
xor
mov
sbb
fs
or
jae
ds
sub
sub
dec
shll
mov
mov
aam
dec
xor
stos
mov
xorb
dec
rcll
pop
movsb
xor
dec
or
sahf
out
sbb
or
xor
sbb
lea
pop
daa
sub
arpl
sub
bound
cmp
loop
jmp
and
shll
xchg
es
pusha
mov
cmpsb
loopne
pop
out
mov
or
dec
int
sub
pop
punpckldq
pop
pushl
inc
lock
add
mov
push
out
mov
sub
inc
inc
jnp
xor
dec
jno
stc
xchg
pop
cmp
cld
je
fldl
xchg
fsubs
popf
push
push
sbb
mov
adc
ret
adc
jl
cmp
mov
cmp
pop
adcb
inc
sbb
adc
out
xchg
xchg
in
fsubrs
addr16
jb
jmp
loop
push
lahf
ljmp
mov
movsl
movsb
push
inc
sbb
ja
cli
ret
xchg
jle
ror
jne
or
loope
add
notb
out
test
in
adc
outsl
push
xchg
pusha
push
cmp
mov
mul
mov
push
cmovo
loopne
fstps
jmp
dec
cmpsb
cmpsb
pop
xorb
sbb
lahf
daa
scas
arpl
popf
in
call
cmp
sbb
jle
leave
dec
xchg
ja
and
inc
mov
pop
aaa
sub
outsl
rcll
add
mov
jecxz
jns
or
into
inc
iret
testb
mov
sbbb
sbb
push
adc
sti
repz
psubq
iret
push
fildll
in
dec
test
xor
and
sti
dec
jge
movsl
jl
cmp
addb
adc
lret
loopne
cld
xor
in
adc
or
mov
rol
or
xor
cmpsl
inc
icebp
lods
aam
sbb
pop
cmpsl
push
dec
cmpsl
arpl
arpl
adc
mov
inc
addr16
inc
xchg
fdivs
imul
call
repnz
push
pop
xor
cmp
rorb
lods
test
fsubl
ss
adc
loopne
lock
and
jge
into
clc
jecxz
pop
pop
xchg
pop
mov
cmp
ret
sti
xor
mov
push
mov
add
testb
call
fsub
js
mov
cmp
add
sti
pop
addl
xor
and
fs
xchg
pop
fcmovne
mov
cmp
inc
imul
ret
jg
or
sub
jae
icebp
ds
mov
sub
cmp
push
cwtl
aam
jnp
scas
lock
mov
xlat
push
xor
cwtl
ret
xchg
outsb
fsubrs
ja
xchg
mov
xor
jb
neg
and
loop
pop
adc
sbb
rorb
aas
mov
adc
xor
inc
lret
add
dec
outsb
aad
adc
loopne
inc
fdivs
sub
cmpsb
insl
jp
or
sub
lods
imul
movsl
mov
sub
das
and
xchg
loopne
loopne
in
rcrb
xchg
ljmp
jmp
adc
mov
bound
dec
pcmpeqb
orl
xor
add
insl
mov
push
add
bound
push
arpl
mov
mov
inc
daa
rol
mov
fdivl
sahf
pop
xchg
adc
add
cmpb
ljmp
test
push
shrb
jecxz
repz
xchg
and
out
out
add
push
xchg
std
jnp
addr16
ret
pop
std
pop
in
fisubrs
insb
call
push
pop
mov
rorb
ret
cmp
or
iret
sub
int
mov
subl
clc
or
cmc
rorl
push
ret
jo
ljmp
test
mov
mov
inc
push
mov
inc
aad
mov
out
xchg
mov
stos
jo
or
shrb
lods
stos
push
xor
dec
test
lret
xchg
cli
lcall
mov
shlb
test
mov
pop
repnz
ljmp
push
popa
nop
in
aas
lcall
lcall
push
xor
add
mov
pop
imul
push
push
test
mov
fcomip
cld
pusha
icebp
aad
dec
pop
mov
mov
cmp
incb
dec
in
movsl
lods
jmp
addr16
mov
and
cli
aas
mov
xchg
ja
cmp
sbb
push
mov
fstpt
mov
je
into
outsl
sub
stc
scas
fildl
fs
mov
or
adc
test
push
fdivs
xchg
pop
cmpsl
or
pop
adc
inc
cmpsl
mov
mov
adc
inc
sti
cmc
fidivl
sub
addr16
jl
fstps
jb
jns
bsr
xchg
xchg
add
add
xorb
lret
cmp
jb
pop
or
dec
ss
in
shlb
fbld
mov
cmp
add
in
sub
mov
jecxz
stos
out
sub
xor
idivl
mov
xchg
loop
sub
inc
mov
add
in
setp
popa
push
xor
xor
ds
mov
or
mov
sbb
cld
cld
fildll
loope
xchg
xchg
loopne
loopne
or
mov
pop
jae
dec
sub
xchg
daa
or
and
cmp
das
popf
mov
mov
mov
adc
lcall
jmp
cmp
leave
iret
xchg
mov
mov
jg
push
mov
rol
loopne
push
lds
mov
dec
cmp
add
inc
ret
mov
in
es
addr16
fbld
mul
cmp
fmuls
push
repz
and
pop
mov
jno
enter
out
mov
jge
push
xor
das
push
hlt
mov
outsl
int3
cmp
push
mov
insl
std
rcrl
sbb
dec
xchg
shrl
dec
std
adc
in
aaa
and
mov
idivl
mov
mov
mov
add
jo
jae
add
xchg
cmp
out
jns
imul
jmp
mov
and
lods
sbb
push
jle
pop
sti
outsl
xlat
gs
sbb
popa
fistl
push
mov
mov
mov
add
lret
jle
in
mov
or
out
and
cmp
js
popa
jp
adc
or
push
or
cli
adc
jno
in
inc
dec
gs
mov
hlt
lock
jb
jno
outsb
xchg
inc
rorl
mov
testb
jg
popa
js
outsl
pop
in
cwtl
sub
cli
daa
repz
das
fistpll
add
test
call
cwtl
out
push
ds
enter
lods
test
mov
cltd
cmpsl
mov
lods
fisttps
popf
mov
loop
jnp
lahf
scas
mov
fsubp
cld
mov
fs
sub
ret
cmp
and
cmc
pop
sbb
call
add
data16
and
iret
add
punpcklbw
xchg
mov
push
negl
push
test
nop
and
subb
push
mov
xor
pushf
lret
push
int3
fdivs
sbb
pop
stos
pop
int3
or
jbe
inc
mov
iret
sub
lcall
outsb
addr16
dec
lods
test
pop
cli
adc
and
jp
add
cmp
xor
popf
pop
cmpsb
aaa
ja
jns
push
movsl
cmp
mov
fwait
push
arpl
sub
mov
add
jne
mov
and
or
fwait
push
scas
adc
aam
push
push
cmp
xor
lods
xlat
jmp
jb
dec
movsbl
xlat
jmp
mov
inc
ds
add
xchg
int3
das
pop
push
sub
dec
cltd
aaa
xor
lock
adc
cmp
in
sub
lods
shr
lds
adc
add
loopne
sub
fistps
add
shrb
popf
add
sub
rcl
minps
fisttpll
or
std
ljmp
push
popa
mov
or
adc
or
cmp
enter
add
mov
fstps
mov
bound
cltd
sub
pusha
xchg
mov
jmp
clc
aas
jno
mov
cli
aas
adc
jp
add
jo
xchg
iret
test
imul
popf
sbb
or
xchg
mov
cli
int
fdivrl
sub
mov
fs
cld
pop
rorb
je
cli
mov
pop
lret
mov
cmp
movsb
or
test
adc
in
sbb
pop
pop
jp
sbb
ss
ljmp
pop
andb
xor
dec
mov
jb
mov
mov
inc
cmp
dec
or
cli
arpl
cmp
cli
sub
por
add
ror
pop
cmp
pop
lret
adc
inc
pushw
jbe
lods
and
xor
out
adc
adc
cmp
call
and
stos
fisubrs
fldcw
lea
inc
rcl
push
ret
jg
seto
das
std
lahf
mov
mov
cmp
rcrl
push
fnstenv
and
popf
jp
bound
inc
je
or
pop
sbb
rorl
pop
nop
lods
popf
jle
lock
sbb
mov
jmp
adcl
test
das
add
and
sbbl
add
and
sti
sbb
das
xor
ds
mov
add
loope
arpl
mov
sbb
fmuls
inc
aas
cmp
push
add
pop
scas
pop
push
and
lahf
test
inc
push
mov
mov
jns
mov
ljmp
ja
xorb
pop
cmpsl
fiadds
mov
sub
jl
push
lret
lahf
adc
or
in
aaa
fiadds
sub
jecxz
pop
inc
mov
cmp
sub
stos
mov
and
cwtl
sbb
push
push
scas
pop
in
xor
sti
or
cmp
adc
stos
jne
mov
test
lods
orb
cmc
add
rcrl
shll
lock
mov
cmp
mov
sub
mov
in
mov
and
mov
or
pop
inc
push
stc
movsl
or
dec
out
xchg
push
call
mov
lods
lcall
adc
adc
mov
lcall
mov
ret
sbb
jne
jne
aas
adc
or
cltd
insb
adc
mov
jl
jg
in
or
jmp
movsl
incl
xor
sub
cmp
scas
enter
bound
xor
ds
pop
xor
and
xchg
sub
mov
push
fldcw
push
pop
mov
loope
add
mov
pop
gs
lret
cmc
adc
mov
xchg
adc
or
ret
in
xchg
test
xor
mov
rcrl
das
push
pcmpgtd
pop
xchg
jmp
push
push
rcll
stos
pop
fnstenv
arpl
in
lods
sub
rcll
outsb
adc
call
cmp
imul
loope
mov
push
xchg
pop
sub
enter
xchg
jge
mov
js
ljmp
sbb
push
pop
sub
aam
out
jb
mov
hlt
dec
mov
cmpsl
cmc
icebp
sub
cli
mov
movsb
in
inc
xchg
and
iret
push
mov
pop
sbb
adc
pop
mov
fadds
cmp
out
cmp
stos
call
push
cmpsb
iret
std
mov
fnstenv
add
test
pop
in
fistl
stc
lods
mov
aas
jo
jg
fdivr
repnz
mov
push
jno
mov
jne
adc
ds
mov
cs
imul
mov
add
inc
push
lahf
xchg
jo
and
or
rolb
push
cs
cs
xchg
sar
inc
cld
xor
dec
pop
data16
mov
xchg
sub
insb
push
imulb
sbb
sub
mov
cmp
and
push
or
mov
fs
cmpsb
dec
test
fwait
or
out
jae
popf
out
push
lods
clc
cmp
loope
lods
mov
rorb
mov
inc
out
mov
ffreep
xchg
test
outsw
mov
mov
mov
xor
fnstsw
nop
mov
insl
call
sbb
aas
fsts
fsubrs
xchg
stc
sub
dec
pop
test
push
in
mov
sub
decl
aas
inc
jnp
in
mov
call
arpl
loop
cmc
mov
xchg
mov
inc
clc
cwtl
and
mov
popa
int
jae
in
adc
or
jnp
scas
inc
sbb
inc
loope
push
icebp
adc
fs
daa
dec
and
sbb
rcrb
and
imul
or
pop
adc
repz
pop
sub
loop
aaa
mov
mov
sbb
push
repz
xchg
fldcw
outsb
movsb
push
mov
orl
fucomp
jne
push
and
lret
dec
ret
cmc
sbbl
inc
dec
fstps
adc
cld
jo
mov
sarb
movsl
test
mov
adc
test
sbb
and
rcrl
lds
popw
jo
xor
adc
cld
enter
xor
mov
out
push
push
cmc
pop
xor
or
ja
sbb
sbbb
and
js
daa
ds
adc
xchg
xchg
cmp
popl
xor
xor
xor
sti
loopne
in
push
push
in
shll
stos
aad
jo
jmp
clc
in
mov
lods
mov
les
pusha
call
out
lea
xor
pop
iret
add
and
mov
cmp
and
int3
sub
popa
std
bound
jno
push
pop
mov
xor
arpl
jge
pop
jl
mov
or
cmp
and
lret
mov
xchg
inc
pop
rorl
mov
das
jge
idivb
lahf
loop
clc
mov
sbb
fldt
pop
push
and
jnp
pusha
xor
sub
mov
ss
pop
lods
inc
jl
xchg
and
aam
fcoml
fcomp
bound
inc
xor
cmpsb
subb
mov
push
cmp
inc
movsl
cld
jp
jle
jae
adc
clc
sub
mov
inc
clc
test
mov
mov
jno
data16
fcoms
clc
xorb
incb
notb
jp
jns
call
mov
movsb
add
ja
sub
pop
cmp
xchg
mov
xlat
inc
or
js
mov
push
or
sub
mov
dec
pop
push
clc
or
popf
rcrl
or
adc
dec
loopne
dec
jge
or
in
aaa
cmp
jae
into
test
int3
mov
cmpl
aam
call
cltd
cmp
sub
add
rcr
dec
subb
sub
pop
jne
adc
inc
inc
dec
lea
sub
inc
pop
cs
mov
or
pop
lock
clc
dec
xor
jns
dec
cmp
fisttpl
pop
jg
loopne
addb
scas
hlt
sub
mov
jecxz
mov
and
imul
shrl
sub
push
jp
popa
bound
mov
mov
cmp
push
and
fisubs
cmp
lods
sbb
mov
xchg
or
stos
xchg
add
mov
push
or
mov
inc
pop
adc
jns
push
loope
aam
pop
ja
jmp
mov
jb
hlt
in
daa
dec
lds
xor
sbb
stos
mov
es
or
inc
inc
adc
dec
fsubp
jae
sbb
bound
inc
cmp
pop
fimuls
icebp
lret
cwtl
inc
xor
fdivrl
popf
dec
in
inc
faddp
mov
imulb
and
jbe
das
jmp
mov
or
mov
insl
daa
mov
mov
fdivl
cli
inc
push
jmp
xchg
jecxz
outsb
ljmp
dec
push
pop
test
xchg
scas
dec
and
fwait
test
fnstenv
jmp
xor
push
lods
xchg
insb
pop
lcall
cmpsb
push
lock
jnp
pop
and
pop
cmp
insl
pop
movb
sahf
imul
adc
pop
rorl
xchg
repnz
xchg
mov
outsl
add
cmp
cmc
jb
es
rcrb
frstor
adc
bound
jns
mov
jae
fpatan
cmp
movsl
into
mov
cmp
jb
jno
loop
scas
xchg
jo
popa
xor
pushf
sbb
mov
mov
bound
xor
cmp
xchg
out
loop
inc
dec
mov
test
repz
cmpl
lcall
not
push
ficoml
jae
jo
cmp
dec
aas
pop
sub
rcll
into
and
int
fwait
in
aad
int3
loop
mov
mov
pop
push
arpl
mov
inc
in
out
cmp
test
push
lcall
dec
cmc
test
test
or
xchg
push
jb
xor
push
cmp
push
or
mov
mov
iret
inc
les
enter
lods
fiadds
cmp
pop
testb
fwait
cmp
rcll
push
imul
mov
sti
and
dec
js
stos
lcall
add
dec
test
ret
shr
adc
mov
cmp
push
xchg
out
xlat
and
sbb
enter
imul
add
jns
pop
fnstcw
fmull
cmpsl
hlt
dec
add
mov
mov
fsub
dec
dec
scas
push
not
mov
scas
test
stc
dec
mov
jo
outsb
adc
inc
xor
xchg
xchg
sbb
in
lock
push
inc
pop
subb
nop
ret
arpl
fwait
push
gs
xchg
sbb
rcr
fldenv
xchg
adc
hlt
add
cmc
sub
add
mov
dec
jns
in
sbb
rcrb
addb
lods
icebp
insl
sub
jecxz
in
xor
dec
aad
cmpsb
sub
push
xchg
insb
cltd
lahf
fcmovb
fdiv
std
fbstp
fisttpl
and
std
insl
jae
mov
jmp
fcompl
xchg
sbb
xchg
in
sbb
or
arpl
outsb
pusha
aaa
test
pop
cmp
lea
jne
push
xchg
cmc
jmp
ja
insb
fwait
mov
pop
xchg
rcl
and
xor
call
add
pop
enter
test
adc
scas
inc
or
mov
mov
aam
enter
inc
es
jg
xchg
dec
fisttpl
lea
add
sbb
dec
mov
push
dec
sbb
jno
pop
cs
mov
js
dec
cmp
sarb
cmp
inc
push
ret
jge
js
aaa
in
xor
dec
and
lret
dec
and
addb
cmc
out
ret
lret
lds
movsl
push
clc
sbbb
fs
adc
outsb
adc
std
mov
or
xchg
add
test
xor
negb
or
cli
cltd
js
inc
popa
popf
inc
mov
sub
push
xchg
idiv
dec
push
push
xor
adc
cmpsb
sbb
test
sarl
mov
jae
dec
and
loopne
arpl
inc
push
push
cmp
shlb
add
push
mov
sbb
and
sub
xchg
repnz
push
scas
adc
fsubl
cwtl
call
jmp
ds
std
xchg
movsl
xchg
rcrl
ja
fdivs
pop
xor
aas
mov
sbb
inc
push
inc
out
out
sbb
fistl
push
popa
jge
sbb
dec
xchg
call
push
xchg
dec
into
pop
aam
pop
addr16
fsubrs
xor
sbb
outsb
add
mov
mov
outsb
dec
sbb
inc
mov
nop
push
orb
scas
push
out
push
xchg
sub
sub
dec
inc
les
dec
rcrl
pop
rolb
jbe
sbb
pop
stos
ja
cmpsl
cmp
rcr
pop
xor
mov
pop
outsb
jb
inc
mov
andb
clc
and
cmp
jmp
adc
push
fsubs
lock
dec
xchg
xor
jmp
lcall
lods
mov
jl
ljmp
cmp
pop
jg
inc
sbb
or
push
and
jne
shll
scas
mov
jnp
xor
frstor
adc
and
leave
mov
sub
add
jg
inc
and
push
ficoml
pop
mov
or
adc
xor
ljmp
inc
mov
push
inc
sahf
pushf
stos
arpl
sub
push
fldenv
inc
int
stos
into
dec
mov
jbe
das
insb
or
mov
fimull
dec
je
adc
hlt
jns
dec
insl
fadd
das
lcall
test
insl
inc
sbb
jno
lret
daa
push
andb
push
xchg
jae
dec
cld
sub
pop
mov
pop
jp
fsubrl
out
movsl
xchg
add
jg
clc
jae
mov
pop
sub
shrb
cmpsb
fwait
adc
jns
int
aad
jmp
sub
push
pop
pop
sbb
test
push
xchg
xchg
mov
inc
adc
cmp
mov
and
call
test
mov
jne
inc
push
jmp
pop
lcall
or
sub
pop
add
int
sbb
dec
mov
inc
sbb
cmc
outsb
sbb
fs
dec
sub
roll
dec
aaa
in
cs
adc
insl
and
mov
es
test
mov
mov
das
push
ret
sbb
or
dec
outsb
test
pop
jb
aam
and
dec
mov
inc
mov
dec
cli
cmp
stos
dec
xchg
xchg
sbb
or
stc
repnz
push
or
xor
loopne
popa
mov
pushf
push
jo
mov
stos
cmc
imul
pop
leave
into
add
mov
cmp
cmp
mov
adc
cmpsb
mov
jp
popf
jno
or
sbb
pop
mov
imul
and
inc
xchg
sbbb
std
aam
sbb
int
mov
repz
enter
pop
add
js
stos
add
aas
jns
add
cmp
sbb
xor
mov
or
arpl
test
ds
flds
mov
adc
xor
sbb
jb
pop
enter
push
dec
sbb
repnz
in
xchg
jne
roll
rorb
in
aaa
dec
or
cmpsl
or
mov
shlb
ljmp
mov
adc
dec
imul
and
push
arpl
popl
or
mov
xor
and
and
bswap
jo
cmp
popf
xchg
adc
mov
xchg
mov
xchg
and
or
movsb
pop
sub
mov
and
add
test
aam
xchg
inc
push
test
add
stos
out
out
cwtl
jmp
scas
fidivl
or
dec
inc
xchg
push
test
sub
addl
cmc
sub
sub
and
push
xchg
add
jbe
insl
dec
dec
sbb
sub
inc
bound
cmp
and
mov
lds
pop
sbb
inc
pop
sbb
adc
inc
movlps
test
xchg
push
push
scas
fistl
push
arpl
rcll
push
cld
push
outsl
subw
repnz
fs
nop
cmp
icebp
inc
or
mov
cmpsl
jno
clc
xchg
push
out
test
popa
add
out
mov
pop
pop
into
xchg
fsubl
mov
pop
jge
repnz
add
mov
mov
dec
mov
loopne
xor
sub
xchg
gs
push
dec
pop
fxch
xchg
dec
outsb
in
dec
int
inc
push
movsb
imul
in
popa
mov
jae
xchg
xchg
push
pmuludq
inc
loop,pn
xlat
stc
pop
inc
or
push
insl
or
rorl
mov
stc
lods
xchg
xchg
ljmp
xchg
inc
sbb
test
out
enter
fidivrs
push
xchg
fucomp
mov
xor
jb
jno
push
sbb
call
or
push
jge
int
or
mov
mov
cmp
sbb
push
xchg
inc
cli
mov
xchg
imul
mov
jo
je
add
leave
xchg
jno
xor
mov
mov
leave
or
movsl
test
mov
or
test
mov
and
aad
inc
sahf
adc
jnp
aas
call
das
dec
test
jecxz
arpl
out
out
popf
insl
dec
sbb
sub
xchg
das
push
or
fimuls
or
sub
add
ds
xor
jns
adc
cld
xchg
xchg
cli
push
lock
lods
shlb
ljmp
das
lods
ret
cmp
push
adc
mov
mov
aas
pop
jp
xchg
cs
dec
test
cmc
cmp
daa
cltd
out
notb
sbb
adc
or
xor
push
js
mov
mov
neg
dec
pop
leave
or
or
cmp
nop
aas
push
aas
add
decl
lcall
fisubrs
stc
or
mov
and
das
mov
test
pop
leave
fadds
and
stos
mov
ljmp
je,pn
or
out
rcl
test
push
js
ljmp
inc
jns
inc
xor
push
sub
xorb
cli
xor
test
mov
icebp
pushf
xchg
shl
test
jno
test
jmp
sub
ljmp
cmp
imul
add
dec
xchg
and
int3
cmp
cs
xchg
gs
fsts
xor
in
lock
arpl
clc
bound
ljmp
loopne
je
mov
adc
lock
les
xor
fstl
xchg
mov
cld
je
xor
in
cmpsb
clc
pushf
fldt
push
cmp
cmp
cmp
mov
mov
push
add
shl
cmp
fsubrp
sbb
cltd
adc
test
test
mov
shll
fiaddl
pop
cmp
stos
mov
rorl
xchg
mov
cmp
icebp
pop
adc
inc
inc
cmpsl
xor
xor
pop
test
es
fildl
inc
dec
xchg
push
xchg
jbe
or
aas
xchg
cmp
test
ror
negb
mov
xchg
mov
push
fdivl
outsl
fwait
imul
xchg
int3
xor
inc
bound
aas
cmpsb
push
fs
ret
pop
sub
fwait
sbb
sub
lods
or
lret
lcall
mov
in
std
jge
les
fs
and
adc
outsb
mov
mov
and
push
fcoms
pop
arpl
pushf
push
jl
test
sub
pop
negl
sahf
push
inc
aam
aas
lds
cmp
test
pop
outsl
pop
cs
nop
fwait
js
jge
dec
mov
pusha
je
popa
add
push
std
dec
in
cmp
fdivl
repnz
aad
xor
nop
je
add
mov
sbb
pop
xchg
inc
push
mul
mov
push
pop
sub
mov
movsl
sbb
rclb
repnz
adc
and
jmp
cli
test
bnd
in
movsb
cld
lods
pop
cmp
xchg
push
addb
mov
daa
inc
sub
push
mov
loope
mov
loope
insl
mov
stos
clc
jb
mov
cltd
push
cwtl
popf
xlat
sti
push
scas
or
jbe
sub
mov
das
adc
out
lea
inc
pop
mov
into
cs
loopne
xchg
pop
sub
loopne
inc
sbb
sti
adc
jnp
mov
mov
mov
mov
mov
pop
mov
mov
aaa
push
into
mov
divb
add
cmc
andl
push
enter
jo
popa
std
addl
inc
cmpsl
mov
xor
sub
sti
jge
mov
xchg
push
dec
jnp
pushf
stos
fcmove
lock
pusha
pop
cmpsl
dec
aaa
mov
sar
mov
cmp
or
aam
mov
test
cld
out
call
xor
in
cmc
push
cmp
jp
xor
push
push
stos
or
cmp
stc
sub
sbb
jp
cmp
xor
arpl
xchg
mov
jae
sub
sbb
cmc
out
movsl
int3
enter
in
ret
jp
dec
std
mov
fisubrs
or
xchg
lea
mov
push
out
lds
orl
mov
mov
inc
cmp
fimuls
addb
std
jl
and
xchg
pop
ds
pop
sbb
repnz
xor
std
imul
les
dec
xchg
iret
imul
or
cmpsl
mov
test
add
jae
jg
lret
inc
ljmp
mov
jnp
int3
pusha
mov
fistpll
jno
out
inc
dec
pop
push
jo
in
stos
sti
in
sbb
outsl
fwait
js
outsl
inc
mov
jmp
or
ss
aaa
push
sub
gs
push
push
arpl
dec
push
loopne
arpl
cmp
push
pop
dec
mov
and
add
add
cltd
jle
inc
and
cmp
mov
inc
jno
rcrb
and
jge
test
pop
sub
xchg
sbb
scas
push
adc
pop
outsb
imul
enter
jp
in
pop
aaa
cmpsl
in
push
and
pop
pushl
push
in
das
pop
lods
sbb
andb
and
add
idivb
sub
sbb
and
xchg
and
xor
lods
addr16
jbe
mov
fsubrl
dec
pusha
les
divb
shll
adc
cmp
sbb
push
cmp
mov
fnstcw
mov
scas
mov
xor
mov
dec
dec
push
jecxz
mov
push
inc
fcmovbe
mov
jl
inc
adc
aaa
in
aam
aad
test
ljmp
xor
dec
add
inc
mov
add
or
sub
iret
ljmp
mov
scas
rolb
jl
mov
movsl
cmc
scas
pop
test
mov
lahf
in
mov
pop
jno
xlat
fidivs
xchg
cs
mov
nop
cmp
add
mov
ficomps
cmp
adc
jp
dec
mov
aam
or
stos
push
jne
and
cmpsb
push
iret
mov
mov
ret
xlat
xor
repnz
stc
ss
mov
and
adc
cltd
pusha
inc
pop
arpl
es
dec
mov
in
in
call
pop
jecxz
xchg
sbb
pusha
jne
jmp
out
push
in
mov
mov
fisubl
or
cld
jb
sbb
int3
mov
fwait
push
push
or
push
add
jg
jle
xor
lcall
in
pop
daa
imul
imul
ja
mov
insb
aad
aam
ljmp
dec
fisubrl
adc
fstps
outsb
xchg
ficompl
mov
jl
ja
jp
jno
addr16
sub
xchg
ss
aaa
je
loop
sub
gs
fwait
sub
rcll
ret
lret
mov
fs
inc
in
je
sub
mov
mov
repz
jecxz
sarb
adc
sbb
jns
push
call
inc
shl
cmp
add
or
mov
jl
test
and
pop
push
inc
mov
ror
aaa
pop
add
xlat
test
sbb
ss
and
sbb
jnp
dec
jne
mov
pop
and
arpl
pop
jle
jnp
outsb
xor
push
mov
push
stos
add
push
imul
push
xchg
sub
bound
outsl
aad
mov
sahf
jo
xor
ja
jmp
loop
leave
add
xchg
mov
nopl
sub
sbb
inc
sarl
xor
imul
xchg
gs
imul
movsl
cmpsb
dec
or
and
bound
xchg
cli
lods
pusha
mov
ja
jae
dec
bound
addb
xchg
fsubrp
pop
inc
sub
loopne
out
mov
push
outsl
inc
mov
adc
inc
xlat
call
mov
add
dec
dec
xchg
jge
ja
add
ret
jns
mov
icebp
mov
or
call
std
pop
sbbb
rcl
push
notl
lcall
or
dec
das
mov
mov
push
cmc
popa
pop
fwait
sub
sub
jb
filds
pop
xchg
adc
movsb
pop
pop
frstor
or
nop
jge
aad
aam
pop
pop
out
sub
popa
push
mov
fcoml
push
or
inc
jb
gs
push
lock
sub
xchg
ret
lods
inc
xlat
lret
leave
leave
jo
fcompl
cltd
lea
cmp
std
test
sub
test
sbb
xor
insl
scas
push
push
mov
in
or
inc
push
movsl
jns
aam
in
push
pop
andl
adc
inc
inc
push
dec
adc
inc
rcll
push
fsubr
xor
aaa
repz
jbe
sti
aaa
inc
imul
push
insl
cltd
jno
bound
mov
ret
and
xor
fisubrs
sub
xor
add
fs
int
clc
in
fistpll
sahf
ret
xchg
pop
pop
and
adc
fmulp
js
add
repnz
loopne
out
xchg
enter
jl,pn
icebp
mov
mov
push
adc
mov
mov
lahf
or
pop
scas
imul
in
push
fldl
xchg
cld
push
push
aam
enter
adc
ret
sar
fs
scas
pop
sub
insb
push
addl
or
xor
les
imul
mov
cwtl
out
xor
and
ja
and
sbb
pop
or
mov
adc
pop
test
pop
pop
sbbl
lcall
mov
cltd
add
or
mov
xor
sbb
in
subl
test
push
mov
repnz
loop
dec
outsb
lds
add
bound
or
pusha
iret
push
add
rcrb
sub
out
ret
xchg
popf
sub
and
push
into
daa
cmpsl
mov
clc
frstor
push
int3
out
xchg
in
mov
popa
cmp
dec
jecxz
adc
mov
jge
sub
insl
jns
sbb
pop
xor
jp
gs
push
or
and
lretw
sub
test
xor
je
xchg
shll
movsl
mov
push
push
clc
jo
insb
sbb
pop
pop
mov
push
lods
xchg
inc
ret
adc
into
pop
cmp
adc
sti
push
mull
cmp
cwtl
das
mov
je
mov
lock
sub
dec
ds
jno
mov
dec
push
ds
mov
dec
jecxz
dec
mov
stc
lcall
lcall
mulb
mov
mov
mov
aad
adc
arpl
adcl
inc
jns
andl
lahf
mov
mov
pusha
mov
adcl
jmp
push
das
or
cmpsl
mov
ljmp
jge
mov
xlat
jmp
pop
stos
mov
xchg
or
mov
rolb
sub
fadds
cli
movsl
in
fimuls
mov
mov
pop
loope
add
ret
test
push
ret
xor
xor
lret
imul
lock
iret
sub
inc
lods
lock
jge
pushf
xchg
adc
arpl
push
call
pop
test
shl
scas
hlt
fldenv
repnz
push
int3
adc
je
cmp
jno
cld
mov
repnz
fwait
jno
xor
aas
inc
sti
dec
mov
popl
outsb
insb
push
lods
mov
in
lret
cmpl
mov
out
movsl
divl
sahf
shll
fwait
lret
popf
mov
cmp
fs
ficoml
sub
inc
mov
pop
adcl
add
cmp
mov
cmp
in
int3
in
outsb
and
stc
cmp
lds
dec
pop
insl
int3
adc
iret
mov
add
les
mov
call
jp
xlat
pusha
je
sti
stc
test
jns
push
or
mov
adc
aam
pop
xchg
dec
add
xchg
or
nop
push
sub
jge
add
mov
push
cmp
cmc
nop
daa
dec
dec
sbb
loope
mov
out
lds
push
imul
int
lds
push
adc
loopne
inc
mov
test
leave
lcall
jg
push
cltd
and
mov
enter
nop
data16
shll
mov
stos
rcrl
pop
sub
jne
mov
dec
movsl
and
rclb
sbb
jno
xor
sbb
jle
mov
pop
fucomp
clc
hlt
pop
cmp
and
and
push
mov
js
lahf
dec
mov
daa
fucomip
out
push
dec
inc
xor
mov
hlt
adc
lret
and
dec
jecxz
and
call
cmp
loope
mov
xor
lods
mov
in
pop
mov
rol
bound
xchg
int3
aad
push
jmp
mov
jp
shll
inc
jl
mov
mov
mov
and
jecxz
data16
inc
sub
mov
push
out
jb
aad
mov
fwait
mov
add
sbb
dec
inc
imul
stos
addr16
pop
pop
push
nop
push
adc
mov
lcall
adc
into
insl
out
rcl
in
popa
sbbl
xor
dec
cli
mov
inc
cmpsb
inc
ss
pushf
pushf
rcrl
dec
into
into
ret
pop
xor
push
xchg
inc
mov
gs
out
mov
lret
mov
xor
lods
repz
lcall
orb
sub
inc
and
cmc
mov
popf
add
gs
sbb
push
mov
popa
dec
repz
mov
add
mov
xchg
and
mov
testl
mov
mov
push
cmp
fdivr
lret
imul
xor
inc
mov
or
sub
shll
leave
cmp
arpl
push
xchg
mov
mov
cli
jbe
pop
jge
mov
adc
jae
sbb
test
lret
mov
fwait
sub
inc
cltd
pop
add
es
movsb
pushf
fldt
jmp
inc
fwait
inc
adcl
pop
mul
in
adc
push
inc
xchg
movsl
rol
fs
sub
xchg
into
jo
push
adc
mov
push
test
mov
mov
popa
push
jp
fisubs
sub
jle
xchg
or
notl
in
fiadds
insl
jle
inc
jne
es
es
sbb
lods
sbb
js
or
sub
fcmovnu
cvtpi2ps
xor
lret
mov
push
ja
or
or
out
xor
inc
shl
mov
inc
mov
out
pop
jp
sub
adc
sub
dec
test
repz
push
mul
fwait
inc
int
mov
jnp
clc
loope
dec
cwtl
jmp
xor
sbb
sub
jns
dec
add
pop
or
pop
cmp
inc
and
mov
inc
dec
jb
push
stos
testb
inc
ja
add
mov
inc
pop
adc
outsb
imul
dec
insb
in
cmp
mov
hlt
fwait
or
ljmp
test
addr16
cltd
shl
inc
pop
mov
lcall
cmpsb
mov
aam
mov
pusha
mov
pop
add
jl
bound
pop
loop
stos
popa
das
orl
lcall
inc
test
dec
mov
rol
sbb
cld
divl
sub
adc
clc
loopne
push
mov
scas
pop
jae
out
inc
iret
insb
idiv
push
sbbl
mov
pop
rorl
mov
add
in
jl
mov
jbe
stc
push
stos
inc
xorl
mov
leave
and
divl
jb
inc
sub
fs
jl
stos
ja
mov
jl
rep
pop
repnz
test
cmpb
hlt
add
push
aad
adc
pop
out
pop
push
pushf
lods
jle
mov
pop
pushf
or
lcall
lods
and
cmp
cmp
int3
icebp
jo
xchg
gs
test
inc
push
inc
imul
ret
mov
push
cs
lea
mov
je
test
sub
sbb
adc
mov
and
data16
in
pusha
mov
or
jae
mov
lock
out
adc
cmp
adc
incl
add
xlat
mov
sub
push
or
push
pop
lahf
adc
loop
pop
and
push
mov
sti
fnsave
in
lahf
sub
orb
xchg
sbb
or
jg
push
push
sub
cmpsl
inc
dec
xchg
bnd
push
sub
pusha
movl
and
xchg
mov
mov
mov
xchg
loope
fists
aaa
jbe
sti
ficomps
mov
xchg
clc
pop
psrld
ret
addr16
mov
inc
ds
mov
sub
jno
scas
lock
divl
jl
push
pop
xchg
cmpsl
xor
repnz
pusha
push
out
jne
imul
and
sub
mov
das
mov
ret
mov
mov
pusha
jg
adcl
push
cmc
insb
add
not
dec
out
cli
sub
mov
fwait
mov
cwtl
jo
and
das
mov
and
popa
out
fisubrl
ja
xchg
lds
mov
icebp
aaa
in
mov
lret
into
test
inc
scas
rep
mov
mov
fsubrl
fdivrl
ret
xchg
rorb
pop
dec
sub
and
jae
mov
pop
rorb
sbb
je
cmp
pop
jo
add
xor
lods
je
insl
xor
std
stos
popf
cmp
js
mov
sti
jl
orl
jnp
inc
mov
lock
aas
ret
and
jne
cltd
cltd
jae
add
inc
push
orb
or
jmp
and
shlb
pop
dec
les
imulb
das
imul
data16
mov
aas
ds
jae
sti
lods
mov
pop
pop
shll
ds
push
jbe
int
mov
mov
xchg
ljmp
mov
pop
and
push
daa
xchg
icebp
jne
push
hlt
jo
add
stos
cmpsl
les
xor
push
js
ficomps
and
sub
sbb
mov
jno
and
add
insl
dec
mov
pop
fadds
loopne
fwait
shrl
sub
xchg
and
dec
pop
arpl
repnz
popf
cmp
fsubl
ror
xchg
adc
push
mov
sbbl
std
xor
or
sti
int3
cmp
jb
sub
inc
stos
mov
jns
and
test
cmpsb
add
enter
add
mov
xorb
adc
mov
cmp
lahf
nop
ret
repz
push
sbb
data16
repz
ret
imul
fnstenv
sahf
lock
cmp
push
mov
or
bound
mov
imul
insl
testb
pushf
in
push
xor
mov
loop
dec
stos
mov
sub
adc
fwait
in
xchg
mov
mov
dec
test
jmp
inc
mov
divb
xchg
mov
das
mov
jae
mov
and
push
fs
aam
add
popa
add
testl
xor
pop
lcall
sbb
test
aaa
push
pop
fsubrl
cltd
outsb
jne
pusha
dec
outsb
shll
clc
and
loopne
pop
jl
jo
lods
add
out
aad
stos
dec
shll
mov
or
inc
stos
subl
inc
gs
dec
xchg
js
repnz
dec
repnz
dec
test
xchg
xor
fcomps
fmulp
cwtl
inc
and
sbb
int3
in
test
jle
lods
jg
lea
sti
les
mov
or
test
xor
jb
and
or
adc
aam
out
ror
add
mov
sbb
sub
xlat
arpl
pop
lcall
xchg
pop
cmp
mov
sbb
repnz
loope
mov
mov
popa
out
and
cltd
dec
insb
inc
mov
cmp
movsl
and
xor
fmull
fwait
mov
sub
push
mov
dec
jne
lods
lret
add
sti
xchg
in
imul
dec
push
popa
addr16
add
and
outsb
cmp
pop
call
pop
mov
in
daa
jp
enter
popf
lea
imul
lea
mov
or
mov
xchg
je
outsl
adc
mov
inc
dec
jmp
pop
jmp
xor
cmp
dec
pop
and
je
movsb
out
jbe
clc
fcoml
imul
sbb
push
adc
aaa
dec
add
mov
ds
sbb
test
aaa
push
pop
ret
xchg
cmp
mov
shl
xchg
cmpsl
inc
push
pop
push
push
test
sbb
push
lds
mov
pop
adc
repz
push
call
aaa
insl
stos
xchg
mov
arpl
inc
push
mov
add
dec
jge
inc
cmp
mov
xchg
sub
mov
aas
push
stos
adc
int
fs
xchg
add
pop
mov
add
sbb
mov
or
pop
ds
mov
sbb
dec
push
mov
dec
and
xchg
insb
adc
push
lock
icebp
fldl
call
mov
add
std
fstps
xchg
popf
in
jae
adc
mov
adc
cmpsl
shlb
mov
adc
mov
lock
or
lea
addl
das
or
push
scas
push
sbb
mov
pop
adc
imul
xor
adc
stos
out
shlb
and
repnz
test
pop
inc
and
rorl
fisttps
push
imul
out
adc
pop
fsubrs
pusha
pop
mov
inc
xlat
mov
xor
sbb
inc
outsb
pop
xor
sbbl
dec
movntps
add
sbb
or
pop
push
inc
push
push
push
ret
mov
int
jg
fs
fwait
imul
movsl
adc
jo
dec
or
mov
mov
inc
repz
lods
lds
pop
lods
lds
fnsave
xchg
in
or
pop
xchg
pop
bound
sbb
jl
dec
pop
sbb
jns
popf
jecxz
mov
stc
lods
loope
xor
mov
add
jno
mov
push
adc
outsl
lea
pop
xlat
mov
mov
lcall
loopne
cli
sti
sti
jge
into
mov
push
pop
xchg
lods
add
mov
jp
dec
and
in
testl
cmp
stos
sarl
andb
ja
mov
jbe
push
pop
adc
fcmovbe
add
mov
aam
fdivl
xor
sti
pop
enter
js
sbb
xchg
lahf
jl
jl
add
xor
xor
or
or
sub
stos
jno
divl
repz
les
jbe
fcmovbe
rorl
popl
in
push
xchg
push
into
ret
sbbb
push
pop
aas
and
sbb
daa
or
adc
rcll
push
pop
lcall
jecxz
inc
ret
test
stos
xchg
fbstp
outsl
into
mov
fsubr
mov
and
mov
cltd
adc
out
das
rorb
out
mov
jne
dec
sub
mov
mov
dec
movsb
sbb
adc
push
jo
xchg
lods
sarb
sarl
dec
xchg
ffree
inc
psubw
addr16
clc
cli
jnp
dec
pop
in
jno
jne
fsubrl
mov
leave
and
or
jp
xor
mov
in
aam
cmc
movsb
and
stc
je
and
add
jmp
ds
fimull
popa
xor
out
cmc
pop
or
add
pop
xchg
pop
pushf
cmpsl
je
jp
sahf
push
inc
mov
and
popf
cs
mov
fs
stc
sub
dec
lret
inc
cmp
shrl
cmpl
pushf
mov
cli
call
xor
sahf
xchg
pop
mov
add
cmpsl
test
push
and
lcall
stos
into
mov
cwtl
lahf
sahf
adcb
iret
cwtl
pushf
mov
cmp
jmp
enter
and
dec
inc
mov
jmp
mov
sub
xor
test
inc
mov
arpl
imul
adc
cmpsl
add
cmp
mov
inc
and
adc
call
xchg
inc
add
push
adc
mov
rclb
movsl
out
jmp
mov
pop
sub
jne
pop
pushf
and
enter
mov
cld
arpl
add
arpl
mov
jno
cli
xlat
jmp
push
lahf
mov
icebp
mov
jg
sub
xchg
jmp
sub
jl
sub
pop
cld
fisttps
stos
pop
push
imul
out
pushf
outsl
mov
fsubrl
repz
test
dec
into
pop
adc
inc
imul
or
xchg
jnp
mull
ljmp
ret
stos
rorl
fisubrs
data16
jno
xchg
lods
fdivrl
inc
xchg
sti
inc
ret
inc
adc
jnp
fbld
mov
mov
mov
cmp
nop
xchg
pop
jne
popa
or
sbbb
xlat
movsl
xor
push
pop
push
fwait
xchg
cmpb
pushf
adcl
cmpsb
lods
and
mov
test
push
cwtl
push
faddl
pop
mov
sbb
jns
xlat
in
iret
and
push
and
inc
insb
add
mull
mov
jp
repnz
cmpl
hlt
out
lods
or
adc
loope
mov
xor
call
jmp
cmp
clc
scas
sub
dec
jae
int3
adc
popa
stc
jae
push
fdivrs
and
dec
xlat
test
inc
push
test
call
mov
enter
jbe
int
icebp
test
mov
mov
mov
fistpl
push
push
jge
mov
jb
mov
stc
fs
inc
or
stc
add
jle
popa
mov
fs
add
shrb
test
int3
rorb
sbb
addr16
addr16
jecxz
nop
cmp
cmp
out
push
or
pop
xorb
insl
aam
sbb
mov
cmp
or
rorb
jns
xor
mov
sub
sti
leave
sbb
adc
pusha
mov
popf
fstpl
out
jo
test
jge
adc
clc
or
nopl
xchg
bound
push
arpl
dec
pop
or
test
enter
scas
inc
lretw
sahf
xor
mov
push
push
adc
test
enter
sub
arpl
sarb
inc
mov
dec
outsl
clc
and
in
push
xor
scas
je
clc
pop
add
add
stos
jge
cmpl
movsb
mov
mov
subb
dec
ficoms
hlt
cmc
es
mov
movsb
inc
outsl
jno
xor
dec
imul
jo
cli
rol
jb
and
push
xchg
dec
inc
mov
add
jo
add
xor
aas
ljmp
pop
push
jns
imul
inc
lcall
lds
xchg
cmp
sbb
insb
scas
add
mov
bnd
adc
pop
mov
mov
movsb
mov
je
and
in
out
inc
imul
nop
mov
decl
xor
dec
lds
push
push
mov
iret
testl
add
pop
int3
adc
or
nop
addl
xchg
jge
mov
sub
dec
lods
test
imul
shl
sub
test
lahf
mov
cmpsb
mov
mov
add
xchg
cmp
sbb
push
mov
arpl
lret
dec
dec
mov
push
push
call
jmp
outsb
imul
jns
push
pop
mov
pop
xchg
orl
sbb
scas
je
loop
cwtl
lret
adc
je
insl
add
popf
subb
mov
fidivrs
mov
aaa
test
hlt
gs
cmp
lods
scas
inc
sbb
sbb
addr16
inc
xor
cmp
aas
jge
mov
hlt
pop
leave
mov
mov
imul
inc
push
and
jns
cmp
pop
jl
mov
mov
inc
test
test
movl
rcr
cmp
enter
jl
inc
mov
push
mov
fbld
sub
and
inc
mov
lcall
or
popa
cmp
int3
push
ret
aad
jecxz
das
mov
in
nop
cli
data16
lods
lds
cmp
loop
cmp
dec
aaa
mov
sub
stos
test
pop
lahf
sti
push
arpl
repz
jno
jo
ljmp
jnp
cltd
push
mov
dec
jecxz
lret
mov
adc
mov
pop
rcrl
inc
out
jg
call
mov
inc
pop
xor
call
pop
repz
movsb
adc
or
pushl
and
push
flds
xor
aam
push
push
sub
test
pop
lods
adc
sti
popf
repnz
jl
push
add
and
mov
push
cmpsl
roll
push
add
dec
iret
sub
cltd
sbb
inc
out
cwtl
lret
shl
dec
mov
mov
dec
decl
xor
sub
and
outsb
sub
mov
adc
or
movsb
mov
jbe
test
jecxz
cmc
addr16
cwtl
mov
mov
xor
cmpsl
dec
repz
push
push
stc
add
lds
cltd
sub
punpcklbw
or
rcr
addr16
fsubrs
push
jl
lcall
xor
sub
pop
pop
bound
jp
jmp
sti
sbb
jmp
lahf
dec
add
repnz
mov
sub
add
mov
aad
pop
hlt
repz
mov
sub
sar
out
popa
int
add
ljmp
out
cwtl
dec
lods
jp
sbb
mov
pushf
insb
xor
fidivl
and
flds
xor
jecxz
jge
stos
dec
movsl
in
lock
into
sbb
pop
in
pop
lock
xchg
cwtl
mov
adc
stos
out
je
push
nop
insl
sbb
cmp
iret
sarb
mov
mov
aad
pop
loop
and
imul
and
loopne
sbb
push
sti
in
and
push
push
in
mov
push
adc
clc
lahf
adc
xchg
push
jge
or
fldcw
push
out
ret
movsl
add
fcomp
cmc
add
cltd
push
lcall
sub
in
xlat
insl
xlat
insl
adc
xchg
mov
lret
lcall
jne
mov
out
cs
cmpsl
push
movl
and
imul
jmp
out
aad
out
adc
outsb
rclb
mov
out
clc
out
and
lret
inc
add
out
pop
incb
int
test
pop
push
xchg
into
daa
mov
sbb
pop
pop
rcrl
push
cmp
das
mov
ds
mov
dec
adc
imul
js
add
pop
mov
pop
ja
stc
out
mov
mov
sub
jl
divps
push
je
cmp
notl
cs
add
adc
mov
sbbl
out
cli
and
cmp
mov
adc
shlb
nop
outsl
xchg
pop
inc
nop
imul
lds
cmc
mov
out
mov
shll
cmp
pushf
data16
dec
scas
push
sbb
mov
incb
xchg
pop
inc
jg
pop
in
imul
popa
outsl
dec
xor
stos
mov
popf
ret
inc
inc
icebp
cld
sub
aad
cmpsl
jbe,pt
mov
mov
lcall
and
lret
cmp
jno
sbb
mov
jnp
push
push
sbb
test
insl
fldl
xchg
pop
push
ret
push
mov
rclb
cmp
movsl
pop
pop
cmpsb
xor
or
cmp
scas
sti
pop
mov
data16
cmp
icebp
add
pop
dec
jmp
dec
pop
push
jnp
dec
lret
mov
inc
cmp
test
xchg
add
int3
iret
iret
shrl
add
dec
xchg
aas
or
pop
mov
push
arpl
pop
dec
das
sub
repz
inc
dec
xchg
rcl
xor
mov
imul
mov
dec
inc
adc
in
add
mov
lcall
fcoml
push
insl
std
adc
lods
xchg
idivl
jnp
sub
mov
cmp
adc
add
imul
into
push
popa
mov
xor
aad
adc
ficoml
push
incl
sub
cmp
dec
dec
rol
and
jmp
fsubrs
push
pop
mov
popa
mov
jb
mov
cli
fisubrs
and
sbb
pop
and
mov
xchg
bound
and
inc
xor
roll
push
jno
cmp
jnp
mov
fldenv
mov
cmp
mov
lods
pop
out
repz
jb
sub
sub
push
cmc
dec
popa
adcb
stos
sbb
fwait
mov
negb
out
mov
jns
scas
pop
xadd
ljmp
adc
inc
cld
xlat
neg
cmp
hlt
dec
mov
lcall
xor
repz
lods
push
jle
test
mov
mov
xchg
sub
cmpsl
pushf
ss
cmp
hlt
or
xor
addl
xchg
pop
sbb
popf
lcall
ret
jecxz
in
repz
sbb
icebp
xchg
xchg
nop
loope
inc
shll
cld
loopne
arpl
xchg
xlat
and
les
add
leave
popf
inc
sbb
push
mov
jbe
mov
shll
jp
jns
sarl
ret
shlb
mov
inc
mov
cmp
fcomps
xchg
dec
dec
xor
mov
xchg
sub
cmc
lods
das
and
xor
jae
mov
scas
daa
pop
ret
push
loop
jne
mov
mov
mov
inc
aaa
mov
fldl
fneni(8087
xor
xchg
push
push
dec
lea
mov
adc
push
lret
fisubrl
xchg
rolb
mov
fwait
mov
jmp
arpl
nop
mov
jns
sub
js
sahf
jae
jbe
mov
lock
jnp
push
lods
mov
idivb
adc
cmp
xor
mov
std
jle
cmpsl
idiv
cmc
in
fsub
push
mov
in
xchg
inc
std
mov
fisubs
iret
aad
orb
mov
dec
push
adc
cwtl
test
or
sub
call
in
ret
int3
mov
jl
and
and
cltd
pushf
or
fisttps
enter
sahf
call
cmp
movsb
or
xchg
test
mov
les
lcall
jns
int3
lahf
ja
jg
test
ret
out
lret
adc
ja
sbb
pop
lret
sarb
cs
adc
cmp
fnop
stc
fst
js
pop
mov
imul
mov
pushf
lock
clc
add
xor
sub
cmp
enter
imul
inc
cmp
sbb
in
rolb
jns
sub
or
cld
icebp
fmull
pop
imul
lods
jns
adcb
xor
fs
outsl
fcoml
in
sbb
dec
sahf
jno
icebp
movsb
fadds
inc
sub
xchg
add
lds
je
and
xrelease
cmp
sbb
fdivr
std
ljmp
sub
pop
or
sbb
and
mov
aam
pop
xor
cmpl
aam
out
mov
addr16
test
push
or
mov
dec
mov
inc
movsl
incl
roll
or
loope
pop
adc
stc
shrl
es
gs
jl
mov
je
push
pop
mov
in
in
sbb
sub
ret
lds
cmp
add
jo
ss
in
daa
push
cmp
mov
jnp
nop
je
and
jmp
pop
dec
test
sub
jae
mov
pop
faddl
xor
inc
cli
lret
jnp
loopne
push
out
xchg
xchg
nop
testl
cmp
pop
mov
jecxz
scas
mov
enter
jg
xor
jae
sahf
xchg
sub
jnp
xor
fdivrl
mov
call
lret
insb
add
out
jle
sbb
ret
and
push
sub
test
insb
stc
insl
cli
xchg
mov
inc
jle
aas
insb
cmp
jno
dec
dec
negl
xor
into
adc
add
push
icebp
cmpsb
jecxz
pop
inc
pushf
adc
sbb
lahf
pop
xor
jae
sbb
pop
xchg
jo
push
loop
mov
push
adc
mov
and
push
pushf
jae
dec
or
cmp
lret
clc
divb
int
xchg
adc
mov
popa
ficomps
xor
or
and
dec
pop
js
loop
lods
sbb
adcb
daa
pushf
mov
mov
jae
shlb
aas
jbe
lods
pop
outsl
fnstenv
dec
in
pop
mov
pop
or
mov
outsl
aad
loope
dec
imul
sbb
xchg
dec
fmuls
nop
mov
fildll
or
push
mov
mov
adc
js
dec
xchg
imul
push
sti
fisttpll
jl
stc
daa
in
pusha
lods
sbb
push
xorl
jbe
push
jo
mov
mov
data16
mov
push
into
aas
and
push
lret
rorl
jecxz
jb
mov
and
xchg
push
sahf
mov
xchg
loop
jb
mov
sub
test
or
lret
aad
cmp
adc
jnp
int3
pop
xlat
jo
mov
dec
cwtl
cmp
add
push
inc
fs
dec
jge
stc
push
pop
adc
mov
data16
movsb
int
adc
xchg
sub
sbb
jae
fcmovbe
fstl
inc
pusha
stc
push
xchg
add
mov
enter
dec
lods
pop
dec
inc
jmp
xchg
dec
cmp
jae
mov
in
aad
lds
pusha
jbe
push
cmpsb
dec
push
push
pop
adc
in
cwtl
xlat
xchg
lds
pop
xchg
jns
rcll
or
jne
jecxz
lock
aas
pop
imul
pop
sub
mov
sbbb
outsb
or
aad
or
xchg
sar
insl
pop
insl
lock
ljmp
inc
jnp
mov
pop
inc
dec
pusha
lods
xor
dec
iret
popa
jb,pn
push
addr16
cltd
mov
pop
rcrl
in
mov
testl
cmp
leave
mov
in
fs
ljmp
xor
daa
xor
pop
and
sub
aaa
fiaddl
pop
xchg
data16
push
push
loope
inc
fwait
adc
fidivrs
xchg
fistpl
sbb
fsubrp
inc
push
add
cltd
aam
xchg
sub
adc
in
cmovl
cltd
or
xchg
cld
leave
push
xlat
push
sbb
xchg
inc
cltd
sub
mov
sub
and
cmp
push
pop
dec
inc
lcall
enter
in
mov
lret
xor
mov
js
pop
pop
andb
insb
dec
aam
or
pop
mov
add
aam
stos
mov
add
lea
callw
sti
mov
lret
movsb
mov
jge
movl
and
jns
pop
daa
and
mov
sub
sbb
rolb
jb
or
je
inc
mov
loope
dec
mov
mov
and
scas
in
jp
jp
fwait
cmp
and
rol
fisubl
movsl
cmpl
rclb
sahf
cmp
loope,pt
shl
int
in
call
ss
imul
out
test
sahf
cmpsb
movsl
dec
inc
ret
iret
xchg
mulb
push
adc
inc
cwtl
sbb
cmc
or
fsubrl
xchg
sti
pop
lds
pop
fbstp
incb
cmpl
mov
push
pusha
pop
ss
jne
mov
pop
xchg
cmp
jl
add
mov
pop
mov
loop
fsub
stc
pop
inc
adc
xchg
adc
dec
out
adc
pop
mov
dec
sub
popf
and
cmp
sti
scas
sub
xchg
dec
imul
repz
sub
cmp
inc
mov
xor
loopne
cmpb
into
adc
lds
sti
add
push
dec
mov
dec
inc
cwtl
push
adc
mov
mov
in
mov
and
imul
arpl
jno
insl
or
push
iret
popf
sahf
das
dec
vpsllw
rcll
cs
fnsave
jmp
mov
mov
lahf
dec
push
int
mov
test
inc
mov
dec
push
push
loope
sbb
mov
mov
gs
test
adc
imul
loop
mov
inc
mov
inc
pop
xor
daa
clc
cmpsl
in
insl
pusha
jns
lock
bnd
ficoms
sbb
popa
aam
mov
mov
jmp
mov
xchg
hlt
sub
mov
movsl
push
sbb
ljmp
in
adc
aaa
mov
dec
mov
and
fists
mov
add
cmpsb
mov
clc
xchg
jbe
push
lret
out
pop
push
mov
push
fsubrs
int
stos
lds
and
cmpsl
repnz
mov
scas
sub
pop
orl
dec
mov
adc
jae
mov
testl
mov
sub
push
xor
rolb
push
xchg
mulb
int3
adc
sarl
jp
lahf
fimull
lea
dec
cmp
mov
add
movsl
jae
fwait
ror
inc
or
in
imul
inc
and
test
adc
lea
mov
sbb
test
nop
data16
mov
mov
xchg
mov
jge
jecxz
xor
sbb
pop
pop
testb
shlb
mov
leave
aas
test
and
sbb
shlb
shrl
es
push
mov
jg
test
adc
fisttpll
scas
cmp
sbb
es
lea
xor
sbbl
jbe
adc
jp
mov
xor
les
out
cmc
sarb
mov
add
xor
adc
sahf
xchg
das
test
mov
push
es
xchg
insl
es
pop
xor
jmp
mov
xchg
call
mov
dec
addr16
jge
imul
jb
in
mov
out
outsb
dec
in
loop
repnz
je
inc
cmp
xchg
jbe
lods
sub
cltd
dec
ret
les
jge,pn
jl
or
xor
popa
pop
pop
inc
imul
insl
cmp
push
int
adc
cmp
add
cli
add
lret
jns
xchg
cld
cmp
icebp
es
xor
jle
int3
dec
cmpsl
leave
xchg
push
xor
inc
out
in
sub
sbb
loop
iret
aam
mov
ja
arpl
test
icebp
jg
cwtl
in
fisttps
inc
or
inc
outsb
adc
sbb
daa
xor
roll
pop
lods
addr16
jo
xor
das
stos
mov
sbb
mov
dec
loopne
lods
out
dec
inc
test
scas
sbb
push
jmp
mov
ss
adc
and
lcall
xor
lds
pop
xchg
stos
mov
ds
es
sub
dec
jmp
fadds
std
sbb
inc
pushf
xor
out
adc
cmp
call
lret
and
lods
or
cmp
dec
mov
fisttps
xchg
in
or
popf
popf
in
hlt
add
cmp
lods
ss
push
shr
push
push
sbb
xchg
dec
mov
pop
dec
scas
xchg
retw
mov
daa
and
fcomp
mov
mov
fcompl
sti
inc
xchg
mov
pop
aad
xchg
je
jge
mov
rol
push
aas
jb
sbb
outsl
xor
add
outsb
loopne
lods
leave
sbb
cmp
pop
fiadds
jp
subb
adc
mov
subl
mov
push
into
xchg
fimuls
call
push
test
into
mov
add
xchg
loope
inc
call
fsubrs
mov
inc
subl
shll
addr16
lret
imul
adc
shlb
lock
ljmp
rorb
cli
dec
jno
add
cmpsl
dec
pushf
or
cmp
jecxz
dec
add
aad
sbb
ljmp
mov
fdiv
jae
jb
repnz
mov
outsl
push
jo
sbb
mov
sahf
sbb
or
ljmp
dec
add
jae
mov
out
lds
gs
pushf
subl
ds
movzbl
cmp
fiadds
adc
cld
cs
add
pop
cmpsl
std
inc
arpl
cltd
aam
push
or
aam
rcrl
dec
dec
push
shll
pop
dec
enter
not
mov
decb
test
push
dec
shll
data16
xchg
fimull
ret
mov
rorb
xchg
sbb
rcrl
lahf
xor
xor
mov
and
sbb
movsb
fs
sub
xlat
pop
pop
insl
mov
insb
push
mov
hlt
daa
daa
sti
or
xchg
or
adcl
xchg
mov
mov
daa
and
aas
jecxz
xor
mov
add
fisubrl
in
sbb
stos
hlt
repz
xchg
lret
out
cltd
xchg
cmpsb
or
pop
in
and
ja
mov
pop
cs
adc
fs
xchg
dec
js
push
arpl
inc
in
dec
inc
push
test
cmp
decl
outsb
mov
jbe
movsl
or
hlt
fistpll
inc
sahf
jnp
mov
mov
mov
xor
inc
cmp
loope
lock
jnp
mov
pop
setb
rorl
xchg
dec
xchg
clc
jne
jg
mov
xchg
xchg
xchg
pop
mov
movsb
and
test
push
and
movsl
call
stc
stc
imul
add
inc
mov
xlat
fstps
lret
shlb
mov
xchg
sbb
and
cmp
cmp
push
jle
daa
sub
or
ret
in
mov
jns
int
out
jg
or
leave
je
loopne
ds
cmp
lods
sahf
jne
mov
mov
iret
cmp
mov
mov
das
jg
enter
aaa
scas
add
push
cmp
jp
jne
shll
dec
xchg
lds
je
sbb
fst
or
mov
out
sbb
cmp
dec
int
jbe
add
push
and
aaa
dec
fisttpl
adc
inc
scas
lret
aam
test
rcll
idivb
and
mov
mov
and
cmc
mov
xchg
and
fcoms
xor
nop
stos
inc
fists
out
push
int3
push
jns
cmp
push
sub
shll
xchg
insb
js
loop
js
jns
mov
ja
sbb
fcompl
inc
shll
jbe
out
jg
mov
push
xchg
sbb
sub
stos
and
bound
repz
notl
and
cltd
bswap
push
out
sahf
push
pushf
push
sub
push
std
movsb
mov
icebp
mov
icebp
js
pop
test
fisttpl
dec
movsl
repz
jo
in
mov
jb
pop
push
cmpsb
insl
add
mov
lret
xchg
sti
ffree
sub
or
jmp
scas
mov
adc
out
pop
stc
pushf
lcall
data16
sub
push
jne
push
mov
ret
sub
icebp
ror
jmp
xchg
jo
push
xchg
das
xor
inc
mov
xorl
hlt
aam
setle
jmp
add
xchg
lret
out
sbb
scas
cmp
and
mov
or
jge
push
rcrb
lods
adc
adc
into
in
or
aas
subb
or
push
jns
adc
xchg
sub
enter
lds
data16
sbb
cmpsb
pop
in
mov
movb
ret
out
jmp
ficompl
jo
ljmp
dec
sbb
add
fmuls
cmp
movsl
imul
popf
in
add
jp
jg
mov
scas
mov
fldenv
jo
repz
cmp
xchg
push
or
sub
out
pop
pop
hlt
inc
icebp
fwait
xor
shrl
adc
lock
lods
inc
popa
lock
pusha
jl
sub
xor
jae
hlt
push
enter
dec
nop
xor
inc
addr16
jbe
subl
xor
das
xor
add
ds
xlat
dec
dec
std
jecxz
sub
xor
lea
cmp
icebp
aam
or
xlat
dec
stos
cltd
repz
adc
pusha
std
subb
test
imul
imul
aad
bound
aad
mull
mov
xorb
jge
add
xor
dec
or
testl
sbb
cmpsl
pop
sarb
inc
cs
mov
push
dec
incb
mov
pop
scas
loopne
int3
aam
jmp
or
cltd
fsubrs
cwtl
imul
addl
mov
je
pop
loope
inc
sbb
imul
jae
jecxz
adc
out
scas
leave
rorb
repnz
subw
sub
int
in
push
loope
in
adc
dec
inc
in
xor
xchg
je
out
addr16
mov
rcr
xchg
gs
jb
xchg
imul
scas
stos
mov
cmpsl
lea
xchg
jge
ss
daa
or
sbb
imulb
jle
and
cmc
nop
dec
dec
lods
ja
adc
test
out
stos
jno
fidivl
mov
pop
dec
mov
mov
mov
das
das
pushf
push
pop
in
jmp
test
pop
xchg
push
fildl
sbb
inc
cli
xchg
xor
mov
jge
and
stc
push
mov
in
adc
adc
je
scas
mov
popa
stos
sti
jno
sub
push
sbb
cmp
iret
mov
xor
das
mov
pop
cli
pop
push
adc
inc
cwtl
daa
test
add
mov
pop
adc
lds
das
jnp,pt
dec
fdivl
mov
sahf
sbb
xchg
test
push
aam
shl
fidivrs
mov
ss
es
ds
daa
cmp
lock
repz
adc
xchg
sti
mov
push
push
pushl
shll
xchg
mov
aaa
int
xchg
imul
xor
mov
or
mov
pop
scas
sub
fbld
mov
ficomps
push
and
mov
cmpsb
push
add
ret
shrl
test
bound
sbb
adc
cmp
cli
movsl
mov
push
mov
and
jecxz
xor
aad
shl
popf
inc
inc
sahf
pusha
sub
inc
pop
es
aad
jns
sub
sbb
sub
xchg
roll
std
movsl
mov
test
in
dec
ds
pop
sub
jns
adc
inc
or
jno
mov
cwtl
push
out
mov
stc
nop
xchg
inc
mov
adc
repz
inc
mov
arpl
adc
leave
push
sub
inc
cmp
data16
xchg
cmp
sub
jg
or
lret
shrb
stos
shrb
aad
mov
rcll
cs
sbb
imul
adc
inc
out
ja
loop
loop
movl
mov
negb
pusha
sbb
jne
add
icebp
sbb
jmp
add
setns
sbb
mov
stc
out
ret
je
pop
sub
in
les
push
push
ljmp
lret
hlt
inc
je
test
in
cmpsl
cmp
push
jns
imul
sbb
mov
loope
dec
jmp
icebp
mov
mov
adc
jle
add
push
xor
jle
push
mov
inc
adc
outsb
mov
or
clc
or
stos
or
jb
or
cmp
cmp
sub
jns
mov
nop
adc
xchg
add
lods
and
shl
daa
enter
mov
sbb
or
call
mov
mov
cld
mov
add
repnz
xor
mov
cmp
ss
sbb
sbb
mov
adc
jp
outsl
dec
bound
pusha
ret
push
cli
cmpsl
sarb
mov
mov
es
movl
jl
jb
sub
fistl
mov
push
add
jmp
cmp
lahf
lods
aaa
imul
mov
cld
mov
and
xlat
packsswb
pop
cltd
aam
pushw
jae
xchg
mov
int
jecxz
pop
or
jae
fs
add
mov
movsl
imul
ss
pop
mov
test
test
mov
mov
aas
xor
in
in
inc
sarb
inc
gs
lret
or
cmp
mov
push
pusha
inc
ds
add
pop
jp
push
leave
xor
pushf
lret
jg
add
lods
inc
pop
jo
fwait
inc
fs
adc
or
jl
dec
out
sub
adc
iret
das
pop
push
out
sbb
or
dec
mov
test
ja
push
cwtl
imull
jl
add
out
add
sub
in
data16
faddl
dec
jl
popf
popf
out
sub
pop
sbb
pop
int
stc
jl
or
dec
icebp
add
std
or
dec
ja
xchg
and
adc
pop
xor
adc
push
jno
and
pop
rcr
in
fildl
lcall
add
sti
xchg
mov
dec
out
and
sbb
xchg
adc
push
pop
pop
ret
test
pop
aaa
adc
aad
stos
inc
push
push
adc
or
repnz
movsb
jecxz
mov
mov
mov
add
into
out
cmpsb
inc
cmp
add
mov
jae
iret
jno
inc
mov
dec
scas
adc
imul
push
dec
push
test
mov
and
ljmp
testl
jae
pop
lret
fisubrl
mov
adc
inc
sub
outsl
out
add
in
cli
add
shlb
pop
cs
pop
or
lds
and
or
ret
mov
stc
loope
xchg
xor
in
adc
scas
mov
movsb
inc
push
popa
pop
or
rorl
push
xor
mov
push
jg
cmp
arpl
or
push
cmc
in
cmp
mov
ds
mov
and
push
in
xor
sbb
sbb
sbb
cltd
pop
cmp
clc
inc
dec
push
adc
adc
int3
xchg
lcall
or
cmc
push
pop
es
add
stos
mov
clc
xor
mov
cmp
pusha
lods
xchg
xor
xchg
dec
mov
shl
pop
mov
fwait
test
push
mov
push
sbb
gs
les
arpl
fs
sbb
lret
and
cli
and
aas
jp
std
data16
inc
call
imul
xchg
repnz
scas
jno
cmp
in
outsb
fistpl
cmp
jecxz
pop
sbb
pop
xorl
ficoms
sarl
fiadds
inc
push
pop
outsb
inc
jge
jae
and
push
scas
jb
mov
mov
jno
mov
outsb
rcrb
daa
cmp
cmp
addl
enter
push
enter
jmp
pop
cs
data16
mov
and
adc
popf
xchg
or
int3
and
pop
mov
adc
jg
sbb
and
sub
pop
arpl
fwait
mov
sbb
xchg
push
xorl
pop
mov
jle
sbb
test
mov
iret
sbb
xchg
pop
cmpsl
jns
pop
stos
mov
mov
jae
out
mov
jo
popa
mov
mov
sbb
cld
or
hlt
ljmp
in
dec
mov
inc
sahf
imul
pcmpeqb
dec
je
icebp
sbb
das
rcrl
sbb
es
roll
dec
mov
mov
mov
mov
pop
lahf
fucomi
out
mov
ret
dec
push
mov
arpl
call
hlt
adc
jge
es
sbb
rorl
sbb
mov
push
and
mov
das
xchg
jp
push
push
add
lock
pop
cwtl
ss
adc
into
ds
stc
rol
pusha
sti
mov
sub
mov
dec
pop
aaa
shl
pop
leave
pop
jmp
bound
adc
mov
out
mov
sbb
adc
mov
lret
adc
mov
popa
jmp
or
sahf
ror
xchg
push
cmp
adc
fwait
add
mov
lcall
fildl
cmpsb
xchg
add
or
inc
cmpsl
add
popf
pop
les
popa
jecxz
in
pop
lret
push
int
pop
jge
jae
mov
jl
push
push
mov
or
and
sti
jmp
cmpsb
loop
in
cmp
and
rol
imul
push
or
sbb
js
cmp
inc
cld
mov
fcmovnbe
aad
dec
mov
xchg
xchg
pop
fnstsw
call
push
ret
or
fldt
cmp
lock
inc
fwait
jbe
add
iret
dec
in
adc
lods
dec
in
mov
or
sub
pop
sub
test
add
rclb
popa
mov
sbb
adc
push
xchg
inc
mov
js
js
and
xchg
jmp
cs
pop
pop
in
or
sub
shll
mov
pop
cmpsb
fimuls
je
movsl
call
dec
mov
xchg
mov
adc
out
lods
rcrb
inc
xchg
pop
xchg
scas
testl
push
movsl
dec
and
rcrb
lcall
xor
mov
jae
mov
mov
call
mov
enter
pop
imul
push
jbe
jl
jno
adc
jle
adc
xor
inc
ja
outsl
repnz
xor
psllw
and
jnp,pn
rorb
push
pop
sbb
popf
cli
mov
testb
inc
mov
mov
stos
mov
loope
push
dec
dec
xchg
fdivl
mov
incl
ss
dec
cmp
inc
testb
fdiv
jbe
sub
cmc
xor
sbb
mov
lret
loop
jo
mov
nop
mov
push
pop
inc
push
sub
or
push
repz
outsl
ror
clc
mov
mov
push
int3
jp
sbb
clflush
jg
and
out
mov
or
mov
pushf
fwait
dec
sub
mov
dec
xchg
cmpsb
mov
rcll
jnp
imul
incb
jmp
addr16
ss
repnz
jnp
loopne
cmp
jne
leave
popa
sbb
sub
nop
pop
cmp
sbb
subl
add
test
sahf
pop
lret
pop
push
jle
xor
inc
cld
pop
jbe
das
pop
mov
mov
fwait
push
xchg
cmp
pop
xor
add
push
in
or
movsl
xchg
dec
push
fdivs
cmp
push
mov
push
mov
fidivs
cli
cli
repz
add
inc
jecxz
insl
sub
lods
and
insl
pushf
cmp
xlat
mov
out
adc
or
jbe
enter
mov
mov
jmp
mov
clts
js
ds
aad
cmpsb
inc
mov
sbb
out
add
fisttps
jmp
dec
xchg
pop
adc
cmp
dec
std
jl
jbe
lods
jge
xchg
adc
aaa
pop
rorl
cmpsb
ret
and
inc
sti
dec
imul
and
repz
rcl
xchg
jne
arpl
pop
pop
idivl
add
mov
add
subb
pop
ret
repnz
dec
test
cmp
mov
mov
pushf
jns
and
add
push
ds
or
popa
jb
out
xlat
ljmp
inc
mov
push
cmp
inc
aad
lock
xor
mov
pop
les
sub
pusha
mov
sub
scas
out
mov
mov
popf
inc
fistpll
lcall
dec
pop
push
sub
inc
pusha
jns
xor
fs
daa
dec
aas
add
fcom
push
es
aaa
std
mov
movl
pop
enter
or
popa
pop
push
mov
lret
stos
dec
xchg
ret
cwtl
adc
mov
das
xor
cmpsb
adc
dec
pop
fdivl
mov
pop
aad
mov
lods
test
rcrl
data16
dec
jmp
push
in
iret
dec
hlt
mov
inc
mov
je
push
lahf
sub
pop
outsl
pop
mov
scas
movsb
test
pop
dec
dec
mov
xchg
mov
mov
int3
inc
and
add
int3
sub
push
test
xor
loope
daa
inc
adc
mov
push
jmp
xor
lods
fs
dec
ficomps
jo
push
push
les
hlt
cmpb
and
xchg
enter
adc
lcall
imul
mov
call
lds
mov
xchg
cmp
scas
jl
dec
jne
jno
mov
jbe
cmp
sbb
sbb
jle
mov
sbb
pushf
mov
mov
insb
and
cli
inc
fildl
pop
cmpsl
movsb
adc
outsl
in
jne
xchg
pop
fwait
jns
pop
mov
cmpsl
test
out
pop
mov
lods
test
jg
insl
stos
fwait
sahf
pusha
adc
ss
adc
scas
add
jge
jnp
push
es
push
sarb
and
xor
or
xor
cmp
adc
pop
jbe
push
dec
xchg
scas
adc
in
push
adc
dec
push
push
in
jmp
fistl
mov
add
negb
stos
jo
pop
in
pushf
jns
mov
jo
insb
mov
or
push
cmp
add
fbstp
or
jge
lds
test
push
sbb
pop
add
and
movsl
adc
cmc
imul
pop
jp
xchg
push
xor
sti
in
mov
mov
push
xchg
clc
adc
fistpl
add
ljmp
adc
sub
sub
fdivl
roll
pop
das
std
loopne
sbb
in
add
dec
pop
ss
cmp
sbbb
pop
mov
jo
insl
filds
mov
test
je
inc
and
sbb
dec
int
pop
fwait
rorb
inc
fwait
sbb
cmp
sub
dec
xlat
sbb
clc
loopne
arpl
mov
dec
push
gs
push
lods
data16
mov
je
pop
scas
mov
add
into
shlb
jno
cli
or
mov
mov
push
push
add
mov
icebp
incl
out
cmpsl
arpl
stos
sbb
scas
mov
jne
popa
in
and
jge
jno
jno
bound
mov
xor
negl
dec
leave
mov
ja
test
je
test
insb
sub
test
test
sbb
mov
jecxz
dec
cld
ss
cmp
pop
inc
jle
push
mov
jecxz
xchg
arpl
shlb
xor
int
sub
cli
inc
stos
jno
or
data16
cli
cmp
aas
cltd
sbb
int3
loop
les
xchg
in
es
inc
sub
sub
insb
lods
test
bound
pop
sub
mov
sbb
std
lret
dec
mov
xor
popf
into
gs
mov
inc
pop
outsl
sub
je
dec
pop
lahf
adc
sti
lcall
mov
and
mov
jecxz
jbe
shl
mov
out
push
add
leave
out
sbb
pop
jp
gs
dec
inc
fldcw
inc
inc
push
hlt
sub
cmp
cmp
fmull
cmp
outsb
and
enter
sub
adc
or
lds
sub
jle
lret
mov
xlat
pop
jbe
cmc
mov
les
inc
insl
mov
in
ret
dec
sbb
out
nop
inc
jno
xchg
and
xchg
lods
lahf
neg
rol
leave
fidivs
aad
popa
adcl
mov
repnz
das
xchg
out
adc
outsb
lea
pushf
and
sbb
or
arpl
mov
mov
xchg
jle
sub
stos
divb
and
orl
scas
or
les
fdivs
lods
and
or
adc
adc
loopne
inc
scas
xchg
stos
jl
dec
and
inc
sbb
lock
sub
cmp
mov
lret
xor
or
push
and
sub
cmc
loopne
xchg
data16
arpl
pushf
test
pop
jmp
aas
xchg
fmull
or
mov
dec
xor
sahf
or
fstpl
fsubl
dec
mov
arpl
cli
subb
xor
adc
enter
xor
cmp
cmc
fstpt
xchg
inc
shlb
call
cwtl
cmp
mov
mov
inc
pop
inc
cmp
fildll
fsubl
jns
xchg
cmpl
clc
icebp
and
repz
js
lods
xor
sbbb
sub
lock
lods
cmp
mov
xor
dec
ds
xchg
mov
xchg
imul
xor
cmp
jae
or
dec
mov
ljmp
iret
loopne
out
iret
scas
pop
or
cltd
fwait
outsb
xchg
sbb
movsl
cmp
and
rcl
mov
int3
adc
fisubl
mov
push
jmp
adc
cltd
in
imul
push
lret
push
xor
dec
mov
insb
sbbl
adc
inc
popf
xchg
add
add
lock
daa
or
dec
push
cmpsb
mov
mov
ret
imul
lock
jg
jle
es
adc
clc
dec
or
hlt
pop
lea
push
test
inc
push
jg
in
adc
xchg
aam
out
inc
inc
hlt
mov
aad
in
popf
add
cmp
cmp
pop
sub
mov
aaa
fsubrl
stos
sbb
mov
icebp
rcll
inc
inc
cmp
inc
push
ss
aam
pop
sub
pop
je
jo
pop
dec
push
adc
lds
lods
ss
sarl
mov
mov
sub
insl
push
dec
mov
adc
dec
push
sbb
mov
jle
push
movsb
lahf
dec
loop
cwtl
mov
daa
dec
adc
lods
lcall
xchg
popf
cmp
pop
and
insl
daa
sti
xchg
stos
shll
sbb
arpl
add
mov
sti
and
aam
hlt
xor
mov
xchg
or
pop
iret
fst
out
insl
pop
mov
dec
add
inc
inc
push
dec
sub
xor
js
dec
mov
frstor
add
jno
movsb
xchg
enter
mov
arpl
bound
aaa
loop
popf
and
int3
mov
xor
push
mov
pop
insl
ret
xor
push
stos
xchg
pop
add
push
mov
imul
fs
scas
push
es
iret
lret
movsb
and
xchg
xor
std
pop
adc
ja
fistps
stos
ror
add
cmp
les
js
scas
and
dec
inc
aas
push
and
dec
mov
jnp
fld
push
jecxz
loop
aaa
or
dec
xchg
test
mov
jmp
and
xor
mov
and
push
dec
addr16
and
ja
int
cmp
lcall
mov
mov
and
jle
sbb
jb
mov
inc
aas
add
mov
insl
sbb
pop
enter
scas
fistpl
call
arpl
pop
bound
sub
sbb
flds
cmpsl
fisttpl
sbb
dec
imul
push
mov
sub
aas
xchg
xchg
pushf
bound
pushf
test
and
sub
and
dec
xchg
mov
and
pcmpgtw
mov
dec
jg
lods
sti
or
mov
mov
outsl
xor
insw
repnz
adc
inc
es
or
cmpl
out
lock
outsl
jne
push
mov
out
lret
or
test
rcll
cltd
cltd
adc
add
add
loope
dec
dec
dec
push
repz
test
push
jp
fs
cmc
test
cmpsl
adc
ret
and
fwait
xchg
xchg
push
cmp
and
dec
loopne
loop
mov
lahf
call
xor
push
aad
out
jno
mov
pusha
sub
inc
pusha
out
mov
push
leave
imul
out
add
gs
mov
pop
sbb
xchg
mov
mov
mov
add
ret
cmpsl
pop
push
push
aas
xor
push
pop
pop
cld
clc
adc
test
adc
and
xor
mov
aad
int3
push
sti
dec
test
inc
sub
lock
ficomps
push
hlt
jle
rorl
and
and
pop
jne
or
push
fs
xchg
insb
cmp
sub
or
dec
dec
push
sarl
push
sti
arpl
pop
cmp
inc
cmc
aam
sbb
ficoms
cmp
loope
movsl
sub
xchg
scas
movsb
cmp
divb
fsubrp
daa
push
pop
shrl
xchg
or
jge
xchg
in
cli
popf
or
sub
sub
faddl
and
adc
mov
pop
dec
cmpsl
xchg
fsubr
lods
mov
xchg
hlt
lret
sbb
lods
sbb
bound
test
push
mov
mov
pop
mov
ja
inc
nop
mov
fldl
aad
cmovg
daa
and
mov
jle
push
repnz
mov
push
jae
rcrl
mov
mov
add
sbb
push
jl
jge
inc
xchg
mov
jbe
leave
xchg
dec
mov
mov
test
pop
or
sub
xchg
xor
and
outsl
popf
mov
scas
mov
or
negb
push
sub
arpl
shll
mov
lahf
stc
pop
fcomps
lds
rorb
pusha
test
out
xchg
push
sub
sbb
sbb
das
repz
xor
or
in
pop
arpl
pop
sbb
clc
lcall
es
xor
loop
daa
stc
add
pop
ja
pop
mov
popf
xchg
cmp
sub
dec
out
mov
aas
or
loope
pusha
fisubs
jl
sbb
fcom
aaa
cmp
jno
negl
fistl
xchg
xor
out
mull
inc
xchg
cmpb
out
insb
inc
xlat
loopne
jl
push
mov
daa
pop
push
and
cmp
mov
lea
sub
push
jne
pop
insl
out
rclb
enter
call
loop
rcrl
inc
test
ss
xor
mov
clc
jecxz
jne
mulb
cmp
sarl
mov
push
loope
inc
xor
insb
out
add
popa
int3
and
cmc
sbb
xchg
lock
adcl
sub
out
pusha
or
movsb
jb
aas
or
pop
add
push
imul
adc
pop
mov
add
nop
or
adc
in
mov
push
cmp
movsl
movsl
pop
push
arpl
lods
pop
xchg
pop
dec
jp
pop
test
jnp
jns
mov
orb
ret
or
inc
and
or
test
xchg
add
rcr
pop
repz
cmp
push
pop
mov
lea
lock
enter
rcrl
cwtl
mov
jb
int3
popf
imul
mov
adc
and
aaa
jecxz
dec
push
adc
ret
cmpsb
xchg
pop
pop
fwait
lods
sub
mov
das
sub
pop
jne
test
js
out
jl
sub
push
pop
mov
add
mov
push
addr16
gs
pop
cmp
jb
leave
cmpsl
cmp
xor
out
iret
jge
add
in
rcrb
mov
imul
and
xor
in
push
repz
ud0
jbe
ret
js
iret
fisubs
sbb
es
mov
insl
das
jp
mov
or
aaa
add
test
jno
sbb
imull
push
into
adc
out
sar
jae
mov
rcrl
adc
aad
ror
jns
sahf
sbb
mov
mov
push
mov
insl
xchg
hlt
jle
xor
leave
ljmp
enter
pushf
jl
push
mov
and
daa
xchg
inc
mov
push
dec
pushf
pop
fs
and
popa
add
fistpl
sub
jnp
jge
test
mov
scas
xlat
dec
mov
jno
lret
nop
ss
ret
jl
jecxz
fucomp
js
push
and
pop
std
sarb
orb
inc
xchg
mov
sahf
adc
jns
push
xchg
mov
dec
xor
jne
pushf
fldl
dec
lds
xor
adc
cmpsb
adc
cmp
inc
sarb
dec
dec
fstps
mov
dec
dec
cmp
int
inc
cmp
pop
xor
scas
pop
cltd
mov
lcall
pop
repz
jecxz
xchg
es
xchg
iret
into
aas
mov
jg
fwait
mov
std
jge
insb
push
fildl
pop
dec
icebp
ds
mov
pop
lret
orb
jo
cmp
jg
dec
inc
pop
cmpl
xchg
push
data16
jg
dec
fcomps
xchg
pushf
and
lahf
push
cmp
into
nop
mov
push
out
in
loop
pusha
sbb
mov
inc
cli
sub
dec
cmc
dec
xor
jne
aam
popf
mov
push
jmp
pop
clc
ds
and
rcl
ret
cmp
aam
and
cwtl
pop
pop
mov
adc
inc
cmc
xchg
ret
dec
xlat
add
shll
add
insl
lret
ljmp
lea
outsl
jle
xchg
mov
gs
or
ljmp
sbb
sub
dec
lods
lea
gs
popf
popa
jp
mov
mov
and
dec
sub
jnp
or
rclb
push
loope
lock
jno
lods
push
pusha
or
bound
punpcklbw
in
cmc
jg
sub
pop
sbb
in
mov
mov
and
fstps
roll
xor
xor
lret
mov
hlt
push
pop
int3
or
push
insb
jnp
jp
dec
sbb
dec
ror
imul
scas
movsb
cmp
out
cmp
pop
fucomip
cmp
rclb
andb
add
enter
push
ror
sti
cmc
dec
sbb
pusha
or
mov
cmp
pop
mov
jle
gs
or
mov
into
mov
movsb
in
fcoml
out
mov
int
lds
out
cmp
outsb
push
int3
lcall
cwtl
repz
out
adc
jmp
loope
mov
stc
outsl
cld
pop
lds
add
rcrl
jbe
jne
ja
ds
xchg
xor
aad
insb
mov
inc
shlb
lret
scas
clc
outsb
lahf
xchg
add
xchg
addr16
jns
pop
push
nop
test
fnstsw
mov
insb
data16
out
sub
pop
lahf
and
roll
mov
jbe
mov
xchg
push
pop
inc
cltd
das
jl
xchg
sbb
mov
push
fucomp
pop
sahf
mov
mov
nop
into
addr16
dec
cmc
in
pushf
test
dec
leave
lret
shrb
in
test
stos
or
sbb
data16
pop
daa
mov
mov
xor
lcall
int
add
push
int
sbb
mov
cmp
push
jb
sahf
test
dec
mov
inc
or
and
test
daa
out
pop
stos
call
push
je
push
and
sub
cmpsl
call
out
orb
push
dec
es
xor
adc
mov
ret
mov
jp
clc
xchg
and
mov
scas
testl
fstl
sub
and
xor
fdivrp
adc
jmp
push
test
das
inc
and
pop
jns
in
movsl
inc
mov
xlat
jg
rclb
xchg
or
xchg
pusha
ds
sub
pushf
scas
inc
cmp
fdivrs
adc
xor
pop
outsb
mov
test
mov
lock
pop
inc
or
dec
lea
shlb
mov
mov
pop
push
mov
push
jmp
or
xor
mov
test
sub
sbb
in
leave
movsl
enter
push
push
mov
jno
adc
sbb
lcall
sub
mov
xor
add
fmull
cmp
rcrl
std
sbb
int
cltd
daa
and
into
nop
pop
inc
dec
mov
sub
mov
iret
mov
leave
jp
xor
lds
cmp
popf
or
imul
mov
add
mov
cmp
cmp
cmpsl
and
cmp
loopne
push
scas
imul
cs
add
lea
aam
lea
outsl
test
sbb
xor
enter
dec
pusha
sbb
jmp
insb
clc
xchg
jge
aam
pop
imul
jecxz
xchg
push
sbb
adc
bound
aad
ror
leave
in
xor
mov
xchg
in
push
or
pop
fisubrl
xchg
jge
iret
and
stos
loop
in
stc
in
shll
push
ljmp
sub
fsubr
insb
jp
hlt
cs
jecxz
adc
push
xchg
xor
add
mov
xchg
adc
shll
fistl
aad
rorl
ret
mov
popf
pop
mov
cmpsb
push
and
sub
cmpb
pop
inc
mov
cmp
add
push
lret
push
fidivrl
iret
lcall
xor
in
subl
dec
movsb
mov
mov
repz
bound
mov
xor
or
cmovle
gs
jg
or
outsb
cmp
js
xor
add
test
pop
push
std
addr16
fsts
fidivrs
xor
mov
sbb
mov
imul
out
scas
mov
xchg
pop
or
pop
imul
mov
test
pusha
xchg
ja
xchg
clc
pop
push
jno
out
lds
addb
imul
push
out
sbb
mov
inc
sub
lock
sar
cmpsb
stos
mov
lcall
fimuls
push
or
inc
incb
pushf
mov
lods
rorb
shrl
movsl
push
in
aad
sub
add
psubb
inc
or
jp
cwtl
or
outsb
pusha
repnz
mov
mov
movdqa
sbb
cmpsb
sbb
mov
fistps
lods
and
inc
or
mov
or
push
pop
stos
mov
lock
das
iret
cmp
mov
lods
pop
sub
xor
inc
lods
fadds
pusha
pop
xchg
jge
lods
pop
adc
pop
or
jno
pop
cmp
add
mov
push
mov
xor
sbb
mov
and
or
fldl
pop
push
cmp
inc
cwtl
loope
sub
ror
cli
les
inc
jle
test
inc
sbb
icebp
lods
add
jnp
in
pop
cmp
lea
add
jnp
lock
pushf
cmpsb
or
mov
ja
pop
mov
cmpl
sub
adc
cmc
lock
mov
xor
cmpsb
lods
mov
push
aaa
jae
cmpsl
mov
jno
inc
cwtl
and
aas
adc
mov
or
test
imul
inc
mov
and
jecxz
mov
or
mov
into
test
cli
add
xchg
push
test
dec
xchg
imul
and
ss
pop
roll
flds
outsl
out
inc
and
sub
ficompl
fsubs
aas
xchg
mov
mov
jl
retw
push
aaa
hlt
test
dec
outsb
addr16
push
jbe
push
pop
mov
testl
pop
pop
sbb
mov
adc
hlt
ret
aam
vmovntps
repz
adc
mov
add
ss
mov
cli
and
popa
lea
imul
and
es
inc
fs
fs
bound
dec
aam
dec
daa
sbbl
xlat
pusha
test
mov
ror
and
addr16
aad
inc
jmp
lahf
jnp
mov
ficoms
sub
jl
xchg
and
ret
in
addl
daa
call
cmp
loop
inc
loop
fs
cli
push
das
lea
adc
js
das
jne
cmp
bound
int
add
in
adc
mov
mov
adc
scas
cmp
adc
push
fdiv
push
imul
mov
jl
stc
push
in
xchg
xor
rorl
sbb
iret
jl
lret
das
mov
gs
pop
and
push
inc
push
xor
pop
adc
adc
fsubrs
push
mov
and
stc
fiadds
pop
jae
adc
dec
imul
jge
mov
jae
ljmp
daa
sub
fdiv
loop
mov
xor
push
sbb
popf
fadd
jle
fdivrl
mov
test
pop
dec
call
mov
inc
push
lret
rol
ret
into
jecxz
mov
ret
pop
pop
jo
sti
cmp
adc
sarb
js
mov
add
leave
scas
xchg
dec
xorb
mov
pusha
add
std
sbb
mov
push
mov
add
mulb
add
cmp
cld
enter
stc
into
test
dec
fstl
mov
mov
adc
xchg
add
out
sub
inc
or
mov
sub
loop
inc
imul
shll
adc
inc
cs
in
fimuls
loopne
cltd
movsl
jmp
dec
addl
bt
mov
cmp
arpl
testl
mov
and
adc
cld
mov
mov
add
mov
jle
test
sub
push
sub
sbb
add
leave
test
pop
roll
insb
cmp
dec
or
or
cltd
fwait
push
mov
out
fiadds
push
shrb
outsb
frstor
aad
lock
adc
cwtl
push
push
sub
test
in
mov
pop
mov
test
jo
fidivrs
pop
negl
adc
xor
xor
sub
or
mov
je
add
inc
aaa
sub
add
push
in
rclb
lahf
and
mov
push
cwtl
movsl
xchg
shlb
std
js
popa
jmp
mov
iret
out
xor
cs
pop
jmp
pop
std
ds
or
int
pop
push
test
es
add
fistpl
and
add
lahf
fs
imul
es
lret
inc
mov
insb
std
fld
jge
scas
daa
push
fwait
push
cmp
cltd
mov
mov
adc
aad
pop
and
push
scas
int3
inc
jae
jbe
cmp
pop
inc
cmp
insb
mov
jmp
jbe
or
xchg
leave
push
arpl
mov
push
leave
adc
cmp
fisttps
push
adc
pop
fs
inc
mov
pop
rorb
idivb
das
mov
negb
in
outsl
dec
iret
pop
movsb
dec
sahf
jae
sbb
outsb
aam
sbb
std
mov
inc
pop
add
jge
fdivl
or
mov
xchg
shll
push
aas
in
cld
int
scas
ret
inc
ja
mov
or
push
rorl
sahf
dec
lcall
std
mov
cmc
popf
xor
sub
in
mov
inc
scas
mov
push
push
aam
dec
lea
jb
mov
mov
int
cld
mov
push
pop
fwait
cli
adc
push
mov
jmp
mov
push
push
aam
movsb
sbb
loop
sarl
and
repz
dec
mov
pop
dec
xchg
int
mov
add
scas
dec
inc
fxch
mov
dec
pop
xchg
and
inc
stos
je
sub
mull
insl
mov
loop
lret
cwtl
inc
ss
xchg
into
jecxz
pop
lret
add
sbb
cmp
scas
pushf
pop
mov
arpl
jmp
in
adc
jle
xor
arpl
rcll
lods
dec
mov
pushf
repnz
sbb
fs
jo,pn
cmc
and
aaa
hlt
push
out
mov
push
xchg
jp
outsb
in
aaa
jno
xorl
push
jmp
lret
dec
mov
scas
insb
jp
pop
sarl
push
aaa
add
aas
loopne
mov
movsb
jne
dec
adc
stc
add
lock
stc
fisttpl
cmp
push
lock
and
inc
push
dec
or
ficomps
xor
mov
cmp
testl
out
in
lret
jmp
in
and
jb
mov
je
cld
js
sti
pop
lods
lret
andl
inc
cmp
ds
repz
or
mov
sub
sub
pop
imul
add
xchg
jno
xchg
push
ror
jg,pt
imul
andl
adc
clc
dec
test
mov
adc
in
std
int
and
mov
inc
es
xor
dec
push
add
or
mov
lcall
inc
lods
iret
add
mov
aam
and
cmpb
js
cmp
push
aas
adc
cmp
imul
jno
jae
pop
cmp
adc
repnz
daa
mov
mov
push
sbb
push
jle
in
pop
aam
jbe
loope
pop
loopne
sbb
push
in
mov
in
popf
jb
aad
lods
cld
xor
sbb
push
dec
push
dec
inc
push
or
scas
pop
inc
aaa
int3
imul
sbb
pop
ss
arpl
inc
enter
into
fwait
jmp
adcl
mov
shll
aas
pop
mov
sbb
push
fs
mov
jbe
sub
push
popa
inc
jb
popa
jns
or
and
mov
in
mov
or
je
add
or
pop
inc
nop
pop
out
repnz
push
fbstp
mov
stos
shlb
sbb
add
mov
dec
cmp
xor
stos
movsl
and
pop
add
leave
test
cmp
jp
loop
dec
pop
xor
icebp
aas
sbb
dec
loop
jg
add
mov
aas
aam
mov
mov
jns
add
test
add
adc
jae
jns
pop
inc
rolb
or
or
mov
mov
or
imul
rcrb
dec
fsubs
adc
das
xor
pop
or
cmp
rorl
rol
mov
jno
inc
adc
jnp
mov
ja
and
cld
mov
xchg
pop
mov
push
xor
outsl
aam
shlb
int3
aas
sbb
or
aaa
mov
add
stos
ds
cmp
xor
scas
add
jno
fisubrl
and
jmp
rclb
push
sbb
out
add
imul
push
jecxz
pop
mov
addr16
shlb
jmp
cld
push
cwtl
data16
xchg
imul
pop
push
stos
daa
fiadds
push
dec
jg
neg
inc
ret
pop
jmp
mov
push
xchg
push
mov
popf
shlb
push
sbb
fsubrl
fldenv
push
inc
dec
fs
pop
aaa
sbb
push
es
jb
test
or
hlt
sub
jl
push
mov
movsb
sbb
fcmovbe
es
or
arpl
dec
ret
xchg
ss
dec
leave
rcpps
fcomps
lret
fstps
enter
dec
rcrl
cmpsl
sbb
popa
daa
pop
xor
dec
cmpsb
js
test
scas
popf
lods
xor
lock
push
and
lea
pop
add
call
inc
pop
fldcw
cld
cld
jo
jge
out
pop
imul
inc
call
and
stos
in
add
push
jg
rclb
pusha
xlat
cmp
adc
sub
jne
or
movsb
out
ret
and
dec
jp
fcomp
push
hlt
jno
xchg
pop
mov
cmpsl
das
xchg
jecxz
ficomps
scas
mov
jbe
out
rclb
stos
loope
imul
push
or
dec
sbb
and
addr16
mov
xor
sbb
mov
fcomps
outsb
pop
mov
rcrl
add
or
cmp
ss
pop
or
orb
or
out
into
adc
dec
mov
push
or
add
mov
in
mov
xor
jge
clc
cs
mov
in
push
inc
cmp
pop
adc
pop
mov
lods
bound
cmc
mov
jp
pop
cwtl
mov
rorl
stc
jmp
xor
jle
xchg
jb
fildll
ljmp
jbe
jae
push
cmpsb
sub
inc
scas
mov
mov
push
sti
mov
mov
gs
lock
adc
fdivrs
loopne
adcb
jno
cmpsb
ljmp
mov
adc
leave
stos
inc
int
test
cmp
cmp
js
lcall
jle
lds
fwait
ja
fsubrl
jecxz
or
arpl
adc
add
lea
mov
daa
in
pop
or
je
cmp
mov
fs
dec
scas
xor
mov
cmp
cmc
loopne
fs
aaa
jg
dec
loopne
push
mov
ss
adc
roll
loope
push
das
jae
xchg
aaa
xchg
stos
cmc
loopne
xlat
cmpsl
outsl
sarb
push
cmp
mov
inc
out
jb
push
aad
mov
cs
pop
addr16
cld
sub
sbb
mov
push
push
shll
adc
sbb
push
fsubr
inc
dec
stos
out
fucomip
cmp
std
pop
cmc
ja
mov
bnd
pop
sahf
jo
mov
and
jmp
sbb
int3
lds
push
mov
pop
push
aad
add
fisubrs
sbb
xchg
mov
pushf
xchg
out
arpl
xchg
mov
cmpsb
or
jne
dec
pop
add
mov
or
push
ja
or
int
adc
ficoms
flds
sub
cmp
out
pusha
or
xchg
sub
shlb
popl
call
pop
dec
dec
sbb
popf
or
loope
push
mov
andb
add
mov
ja
test
dec
cmp
cmp
mov
enter
fildl
or
cld
icebp
add
sbb
lret
mov
mov
inc
shr
xor
into
xchg
js
jge
sbb
shr
pushf
fnstcw
jae
cmp
ja
mov
test
in
pop
dec
sbbl
and
test
inc
insl
sbb
scas
sbbl
idivl
inc
data16
push
mov
mov
mov
in
sti
pop
nop
lret
cmp
mov
xor
push
push
and
inc
aad
dec
fwait
in
mov
in
dec
cmp
dec
icebp
inc
inc
jmp
and
jmp
cmp
inc
bound
lret
push
adc
fisubrl
ficomps
or
or
lods
divb
sarl
add
push
subb
fstl
test
subl
mov
pop
loop
dec
add
dec
out
xchg
cmpsl
sbb
test
mov
arpl
aas
scas
fiadds
dec
inc
out
push
test
xchg
mov
pop
push
cmp
push
cltd
inc
aas
mov
aaa
push
popa
scas
or
sbb
jo
xchg
adc
xorb
sti
dec
lods
push
lret
loop
shr
jnp
andl
adc
leave
mov
fildl
sbb
insl
int
sbb
fdivs
push
aaa
je
mov
lahf
inc
mov
mov
in
mov
xor
push
mov
daa
push
and
and
fwait
or
pop
mov
mov
in
addl
mov
xchg
aad
inc
fwait
rclb
push
xor
jp
sti
rolb
inc
repz
xchg
aad
pop
in
sarl
pop
sarl
adc
or
adc
pop
xchg
add
popa
sbb
cmp
and
jbe
jp
mov
mov
xor
xor
dec
push
imul
or
aaa
out
cmp
add
scas
out
dec
lods
fcomip
inc
dec
or
or
or
inc
inc
outsl
xor
int
push
test
ljmp
cwtl
shlb
or
xor
inc
test
mov
in
movsl
sbb
sbb
xor
push
mov
inc
adc
push
jnp
movsl
dec
mov
push
jbe
xor
daa
push
es
cmp
jnp
scas
clc
dec
xchg
dec
imul
stos
cld
and
mov
xchg
js
dec
dec
or
roll
mov
out
arpl
repz
fnstenv
pop
mov
mov
sbb
mov
mov
mov
pop
mov
fsubr
lock
pop
mov
pop
out
or
sbb
aas
mov
or
jae
inc
stc
into
push
cmp
rol
or
out
inc
fstpt
nop
pop
leave
mov
jne
push
mov
sub
rcll
out
push
das
add
xorl
in
lahf
aas
jp
push
pop
push
addb
je
cmp
inc
jmp
jnp
cmp
mov
xor
pushf
pop
repz
add
aas
rol
leave
pop
dec
sarb
pop
mov
rcrb
cs
pop
sbb
or
push
rorl
loop
hlt
rcll
push
test
daa
xchg
push
xchg
xchg
and
or
lock
adc
mov
jecxz
push
cmp
mov
adc
push
mov
cmp
std
sub
test
xchg
aam
hlt
inc
loop
cmp
push
movsl
or
jne
test
xchg
inc
mov
jo
gs
int
jle
and
in
pop
push
sbb
pop
cmp
lock
mov
push
mov
int3
std
fisubrl
out
clc
inc
and
outsb
in
xchg
mov
in
aaa
bound
push
ljmp
sbb
or
enter
stos
and
cltd
fidivs
mov
clc
mov
inc
pop
add
rolb
fimull
inc
mov
dec
sub
fdivl
fcomi
rcr
out
and
mov
jne
pop
stos
jle
mov
lods
xchg
push
lret
int
mov
mov
pop
outsb
or
cli
sbb
pop
jmp
aaa
inc
es
push
gs
ret
icebp
ja
mov
test
jp
jo
jecxz
fstl
pushf
stos
pop
jmp
dec
pop
push
out
cmp
push
test
sbb
lods
je
jne
inc
in
movsb
sti
daa
sub
inc
mov
xchg
sub
popf
lods
out
outsl
jecxz
xchg
inc
repnz
xlat
fnstcw
scas
adc
bound
daa
pop
sub
mov
loope
mov
pop
jmp
or
sub
loope
fwait
adc
por
js
jno
pop
sub
adc
pop
out
xchg
mov
sub
daa
sub
js
repz
jmp
inc
sbb
push
aas
int
pop
xor
sub
repz
mov
inc
push
xorb
and
daa
imul
loop
pop
mov
jge
or
clc
and
add
mov
push
shll
fs
sub
test
push
ret
push
paddsb
jno
pusha
iret
addr16
sub
popa
and
inc
pop
or
imul
stos
jle
scas
les
sub
inc
push
jnp
jns
inc
out
inc
iret
imul
mov
je
ds
movsl
adc
mov
inc
lock
and
sub
stos
pop
jl
pop
push
int
leavew
adc
mov
sub
loope
cmp
mov
outsl
jae
add
ja
out
pop
pop
loopne
xchg
push
inc
xchg
inc
or
inc
lahf
out
push
mov
clc
inc
rolb
arpl
iret
sbb
cmpsb
or
aaa
stos
dec
hlt
jnp
stos
aad
cltd
push
fcomps
sbb
sbb
stos
ds
push
mov
xchg
xchg
aad
cld
and
repz
scas
push
repz
mov
aas
pop
pop
lret
outsl
adc
push
mov
shrb
xchg
mov
mulb
xchg
mov
add
sub
nop
mov
lret
cmc
cmpb
push
sbb
cmp
lret
les
dec
lds
cmp
cmp
cmpb
fdivrl
mov
add
nop
cmc
add
jecxz
hlt
xchg
xor
mov
into
sti
jo
std
nopl
lods
sahf
imul
cwtl
shl
adc
and
aaa
mov
out
pop
and
icebp
cmpsl
dec
pop
fcompl
lods
xor
stc
add
or
sbb
icebp
test
stos
sbb
sub
jp
scas
mov
ret
mov
mov
std
aaa
fsubl
lahf
adc
les
push
out
movsl
push
popf
sbb
cmp
fidivrl
iret
inc
add
push
rcrl
cltd
sub
sub
outsl
sub
or
mov
sbb
or
mov
loop
nop
sub
pop
test
pop
and
add
adc
stos
inc
mov
daa
pusha
cmp
cmp
lahf
test
leave
in
ds
call
jg
and
cltd
fldt
jae
cli
addb
mov
mov
jne
das
mov
lret
sub
lock
cmc
or
sysexit
pushf
and
js
push
outsb
dec
sarb
inc
xchg
mov
das
xchg
or
in
data16
adc
add
jbe
sbb
repnz
dec
push
and
mov
jbe
jnp
or
xchg
xchg
lcall
repnz
inc
add
and
cmp
inc
push
xchg
lds
mov
mov
push
xor
dec
sub
cwtl
mov
pop
pop
aaa
or
cwtl
out
pop
mov
sbb
xchg
rorl
jns
fistpll
fadd
inc
sub
fmull
mov
scas
jge
jecxz
pushf
xor
xchg
aaa
ja
dec
popf
jnp
int3
ja
mov
inc
mov
cmp
fsubrl
das
push
dec
cmp
adc
loopne
pop
ficoms
mov
adcl
or
fnsave
xchg
clc
sub
in
imul
shrl
data16
lcall
push
sti
xor
xor
lcall
mov
dec
mov
jno
inc
push
sti
jecxz
mov
mov
xchg
jmp
jl
inc
out
pop
repnz
pop
xlat
mov
inc
js
outsl
xor
inc
rcr
xchg
stc
out
inc
mov
loop
sbb
sub
jg
mov
scas
sti
xchg
and
sbb
cli
cmp
pop
add
mov
shr
add
shlb
enter
stc
push
mov
sbb
push
enter
lea
jle
mov
sbb
pop
pop
add
add
loopne
fcom
pop
out
ds
push
pop
aaa
in
fstl
fcmovnu
jae
ljmp
jne
inc
jl
arpl
push
lahf
cmc
shrb
aam
scas
jno
loopne
or
mov
xor
xchg
xlat
ljmp
pushf
scas
test
pushf
imul
adc
cmp
and
cmc
stos
push
fdivrl
bound
ja
cmc
push
fstpl
cmp
jne
stos
and
mov
lcall
out
aad
ret
mov
xor
jge
cmp
pusha
cmpsl
mov
cmp
lahf
xchg
std
mov
mov
rclb
inc
unpcklps
sub
pop
mov
sbb
in
mov
push
lods
scas
loopne
popf
sbb
xor
mov
int3
add
sbb
stos
lods
or
mov
push
jns
fmuls
jae
movsl
pop
scas
dec
pop
add
jns
popf
inc
mov
adc
cmp
aad
mov
pop
cmp
xlat
xchg
popf
repnz
test
pop
std
outsb
aaa
andl
gs
shll
dec
dec
inc
sahf
add
je
pop
add
jbe
xchg
aaa
scas
pop
mov
inc
sub
add
or
scas
lock
out
es
adcb
sbb
dec
ret
fs
stos
cmpsb
cs
aaa
or
fidivl
cmova
inc
mov
cmp
push
sbb
ret
sbb
aad
sahf
mov
jnp
out
shll
pop
into
mov
js
push
cwtl
loop
ja
loopne
add
ret
test
lock
ja
test
sub
mov
xchg
push
push
insl
adc
or
xchg
cmp
adc
pop
mov
jae
daa
mov
adc
add
cmp
ret
clc
in
sbb
pop
mov
repnz
push
xchg
mov
mov
cmc
fucomip
arpl
sbb
fs
or
or
lea
popa
xchg
stos
push
lds
or
push
pop
out
dec
mov
popa
lea
and
and
lahf
pop
mov
cmpsb
lcall
in
pop
push
and
sahf
mov
lret
inc
aaa
icebp
push
int
xor
enter
xchg
sub
push
inc
cmpsb
sbb
mov
mov
ret
and
popf
in
fsubl
jmp
add
js
lret
scas
pusha
cmp
push
jae
insl
and
add
les
test
push
push
out
out
inc
sbb
inc
out
push
rclb
push
xchg
inc
jmp
mov
add
leave
cmpb
lret
or
mov
jne
xor
adc
lret
pop
mov
ffree
inc
xor
pop
imul
mov
aaa
repnz
adc
imul
bound
add
stc
xlat
mov
popa
fbstp
lcall
faddp
mov
aas
lret
imul
or
mov
mov
jae
push
call
subb
iret
push
jg
push
loopne
sub
sub
clc
into
ret
cmpsl
nop
sub
pushf
sub
cwtl
mov
push
scas
ret
ss
add
in
filds
xchg
daa
dec
stos
push
pop
push
imul
pop
adc
jg
in
popf
mov
out
movsl
mov
or
dec
imulb
sub
jecxz
inc
aad
data16
mov
call
imul
orl
loop
pop
test
lock
push
pop
into
insb
sti
push
lea
dec
mov
sbb
adc
dec
cmp
shll
int3
shr
sub
rcl
sub
sbb
mov
dec
mov
sbb
push
sarb
aam
jmp
or
jmp
fstpl
push
lcall
pusha
js
ficompl
mov
pushf
notb
xor
or
pop
push
clc
outsl
jge
and
dec
enter
fs
popf
rcrb
lea
add
cwtl
xchg
sbb
aad
scas
push
in
aad
pop
mov
daa
dec
xchg
and
lahf
imull
mov
or
pop
mull
mov
movsl
outsl
xchg
dec
sldt
jne
aam
mov
and
mov
adc
std
lret
push
push
stos
insb
aaa
or
mov
mov
xchg
and
dec
adcl
mov
pop
imulb
nop
pop
daa
pop
or
cmp
jp
mov
mov
mov
xor
loope
adc
cltd
mov
hlt
fidivrl
dec
test
cwtl
out
adc
inc
fisubrs
dec
nop
aam
mov
fwait
lret
repnz
in
cmp
add
mov
nop
dec
xchg
push
lcall
adc
int
mov
pop
or
pop
iret
shlb
and
out
dec
cld
cmp
dec
add
push
dec
arpl
cmp
pop
pop
xor
insb
pop
into
fbstp
push
jle
nop
imul
jle
clc
lcall
or
add
rcll
or
icebp
pushw
inc
es
xchg
xchg
cltd
outsb
and
enter
imul
sbb
fcmovnu
stos
lea
sbb
xor
jp
enter
sub
mov
sub
pop
adc
dec
push
dec
getsec
xor
lret
shlb
int3
sbb
in
jae
sbb
ds
push
fists
fsts
add
mov
ljmp
cmp
cmc
out
stos
sub
xor
cmp
loopne
xchg
in
and
nop
mov
cmp
add
pop
inc
mov
enter
dec
jle
adc
fidivs
dec
inc
lret
lock
inc
out
lret
in
adcl
aaa
fimull
movsl
jno
arpl
stos
mov
jp
sbb
xor
jge
mov
scas
les
arpl
in
dec
mov
out
mov
sub
cld
add
inc
fs
add
test
mov
fisubl
add
cwtl
imul
cli
jmp
xchg
mov
mov
ljmp
pop
bound
xchg
ss
sbb
and
adc
inc
push
lds
sub
sbb
push
or
cmp
in
adc
aas
popf
mov
xor
xchg
popa
add
pop
aaa
daa
xor
bound
pop
sti
cmp
mov
imul
sbb
push
scas
mov
les
aas
push
ja
mov
in
aam
imul
xlat
jne
mov
aaa
and
pushf
filds
test
or
pop
push
or
int3
stos
shll
pusha
mov
cmp
les
ljmp
inc
iret
dec
xchg
icebp
sub
mov
jae
jae
in
xor
out
adcl
inc
push
add
mov
push
xor
test
adc
dec
jle
push
inc
outsb
xchg
ds
nop
push
inc
fnstenv
jge
fbld
mov
adc
jg
dec
sub
sbb
sub
lret
ss
lret
and
addl
jno
jbe
push
jge
ret
cs
orb
xchg
jb
dec
dec
mov
dec
mov
test
xchg
mov
mov
fildl
mov
aam
insb
ret
jle
loope
mov
idivb
xor
cmp
adc
add
mov
lods
sbb
adc
ret
or
dec
pop
add
lcall
sbb
inc
xorl
push
mov
pop
lcall
cwtl
jp
cmc
and
add
mov
cli
insb
jle
pop
pop
test
call
addl
mov
movsl
cli
in
outsb
insb
bound
test
scas
mov
inc
mov
iret
lahf
cltd
mov
test
fsubrs
outsl
jne
scas
cmp
pushf
adc
and
xor
negb
jecxz
dec
popf
je
xchg
loop
cmp
add
sti
pop
mov
pushf
ss
mov
mov
push
stc
pop
enter
out
inc
cmp
sbb
mov
lcall
cmp
cs
cmp
pop
sub
and
lods
in
inc
enter
lods
icebp
cwtl
pusha
pop
aaa
out
mov
fimull
cmp
cwtl
lock
clc
sbb
mov
jge
dec
xor
call
andl
add
je
ja
dec
mov
sbb
scas
xchg
mov
xor
cmp
push
sub
stc
mov
inc
xor
not
loope
mov
add
shll
cmp
cmc
out
xor
cmp
mov
push
or
pop
nop
pop
ss
cmp
roll
fdivl
push
mov
xchg
and
ja
jbe
xchg
add
cld
inc
mov
xlat
lret
sub
hlt
lret
pusha
out
ljmp
stos
push
mov
addb
pop
xor
xchg
add
rcll
sub
jl
mov
lock
fldenv
in
xchg
repnz
arpl
mov
adc
in
inc
lret
mov
mov
inc
fcmovb
add
jmp
xor
sub
mov
mov
xchg
imul
cmp
and
subb
shrl
sti
adc
cmp
dec
stc
mov
add
inc
cld
test
ret
mov
cmc
fucomip
ret
outsb
loop
sbb
sbb
in
or
jne
or
jle
adc
xchg
lods
jae
lahf
adcl
sbb
sub
jb
xor
push
fwait
outsb
nop
lahf
test
in
out
shrb
add
addr16
ret
aas
int
outsl
push
xor
call
xor
mov
mov
adcl
xchg
in
cs
push
adc
sbb
repnz
mov
loopne
js
mov
in
fstps
icebp
dec
fstpt
ror
add
pop
dec
imul
sbb
aam
adc
test
jmp
and
aaa
into
fldcw
xchg
cwtl
xor
xchg
jae
imul
cmpsl
mov
fcoms
movsb
dec
inc
std
hlt
gs
sbbl
movsl
arpl
loopne
sbb
dec
dec
xchg
clc
je
mov
enter
fisttpll
stos
mov
or
cltd
sbb
test
cmp
jle
adc
insl
sbb
sub
inc
cltd
mov
imulb
repnz
jmp
fstl
cltd
lods
mov
hlt
jne
pop
mov
jle
dec
sub
fidivrs
adc
or
iret
sti
cmc
ljmp
xchg
in
cmc
mov
and
inc
mov
enter
cmp
push
nop
add
sarb
test
aas
mov
dec
testl
xchg
push
jbe
xchg
jno
lock
and
sub
push
sub
sub
hlt
jge
stos
hlt
dec
inc
ja
cmp
cli
push
lods
jl
mov
xor
ftst
or
adc
movsb
lods
jo
sbb
mov
test
bound
subl
sub
xor
push
arpl
pushf
ds
adc
inc
jg
icebp
xchg
lret
jle
cmp
repz
sub
cmp
mov
mov
xchg
mov
xor
cli
xlat
leave
sub
into
sbb
push
orb
pop
orl
jae
mov
cli
push
pop
imul
pusha
data16
mov
nop
popa
data16
add
orl
cmp
mov
iret
pop
dec
shrb
out
xchg
negl
test
pop
lahf
clc
sbb
dec
xor
xchg
imul
movsl
imul
in
pop
fidivs
cmp
and
insb
std
dec
inc
xor
test
ljmp
add
mov
cmp
subb
xchg
dec
add
cld
add
sbbb
std
dec
sar
pop
sub
mov
movsb
inc
mov
daa
dec
pushf
or
fbld
lcall
bound
jge
sub
inc
pop
bnd
push
cmp
test
xchg
jg
inc
lcall
jno
adc
sub
and
or
fcoms
int
int
jecxz
aam
rcrb
jo
in
push
loopne
fimuls
and
lahf
cmp
popa
mov
jg
rclb
and
ret
inc
and
ja
lods
shl
push
roll
lret
dec
xchg
dec
nop
js
in
mov
mov
mov
ret
jo
out
std
andnps
cmpsl
repnz
fistps
popf
popf
mov
jae
adc
insb
or
loop
and
mov
and
mov
shrb
stos
jnp
int3
xchg
inc
inc
test
out
ja
push
adc
cmp
adc
add
imul
or
sub
ror
into
xchg
enter
push
inc
cmp
std
sbb
int
or
xchg
xorl
mov
inc
inc
jge
xchg
cld
push
dec
out
mov
lods
lods
push
int
or
idivl
fnstenv
inc
dec
cmp
bswap
ja
fdivrs
ja
outsb
mov
add
clc
fbstp
lret
pop
jmp
call
in
and
add
cld
lods
jle
sbb
and
mov
popa
pop
sub
mov
mov
xlat
or
lods
jmp
or
dec
aam
push
mov
dec
rcrl
pop
hlt
jns
std
fcompl
out
sti
into
lahf
lahf
sbb
sbb
dec
inc
or
cmpsl
mov
sbb
cld
js
inc
roll
mov
repnz
ret
jmp
fwait
inc
dec
or
xchg
mov
mov
pop
in
mov
fwait
mov
and
orb
dec
shl
and
out
inc
sub
aam
shrb
adc
mov
cld
dec
push
int
hlt
sarl
xlat
sub
orps
lock
sub
pop
or
into
xchg
dec
std
shlb
jecxz
jmp
jl
mov
jle
popa
mov
xchg
lods
add
mov
icebp
notb
mov
cld
sbb
stc
ja
mov
cmpb
push
and
xchg
pushf
sbb
divl
or
daa
push
repz
outsl
addr16
and
loop
test
mov
decb
icebp
mov
stc
dec
xchg
test
inc
mov
scas
ret
sub
les
ljmp
cmpsb
adc
repnz
push
fcomi
enter
ret
lock
loope
dec
sbb
mov
or
test
lcall
mov
outsl
push
xor
mov
xlat
xor
mov
lcall
xchg
cwtl
pop
popf
js,pt
and
sbb
mov
jp
add
ret
outsl
out
dec
cmp
jecxz
cmp
cltd
jns
enter
xlat
adc
mov
das
repz
mov
gs
stos
cmpsl
xchg
imull
es
xor
inc
push
enter
stos
xchg
jne
into
mov
mov
pop
lods
add
ror
loop
ljmp
jb
insl
jns
xorb
inc
xlat
cld
mov
lahf
sub
or
lock
mov
out
lahf
jne
stos
stos
imul
ret
xorb
ret
dec
pusha
or
jno
xchg
cli
xor
jle
jnp
mov
jns
sub
pop
aam
jle
xchg
imul
sbb
mov
xor
in
incb
cmp
std
jp
insl
inc
in
test
insl
or
push
cmp
jg
cltd
jb
inc
add
std
cli
adc
out
mov
pop
push
fsubs
mov
pop
imul
cmp
mov
pop
je
inc
iret
sbb
iret
mov
push
divb
add
ds
lret
pop
mov
or
sub
xchg
mov
sbb
pop
icebp
mov
mov
lds
je
push
aaa
test
mov
pushf
jmp
and
or
push
dec
inc
cmp
aas
popf
push
pop
mov
fwait
lret
jge
sbb
and
outsl
jmp
jo
jne
pop
nop
jns
xor
mov
shll
out
call
pop
and
and
xchg
sbb
cmp
repz
or
cwtl
insl
sti
aam
push
push
in
jnp
loop
jmp
lods
and
mov
arpl
xor
jne
push
add
jge
xorl
jmp
add
inc
movsb
jb
jmp
xchg
pop
mov
popf
das
in
pop
push
std
out
mov
push
cmp
dec
cmpsl
and
dec
movsl
xchg
shlb
inc
and
jle
sub
xchg
sahf
andl
out
aad
pop
stos
repnz
mov
insb
xor
inc
pop
fimuls
lds
xchg
adc
rolb
sahf
ficoml
mov
jp
sahf
xchg
je
imul
imul
jnp
addl
jb
dec
sarl
jmp
jle
push
into
jp
lds
mov
bound
jns
add
ret
pushf
std
inc
das
sbbl
mov
jne
adc
test
je
std
dec
mov
stos
lds
push
mov
mov
mov
icebp
xlat
xchg
fcompl
adc
test
or
lret
push
lret
mov
iret
out
in
mov
or
mov
int3
pop
in
xchg
add
sub
pop
jnp
mov
scas
mov
pop
sbb
or
in
pop
sbb
test
jns
outsb
shlb
mov
xchg
or
adc
inc
lea
push
xchg
mov
xchg
stos
mov
mov
or
and
insl
movsb
ret
imul
aad
push
or
dec
or
inc
mov
out
int3
sub
fldenv
xor
fbld
mov
movsb
sub
pop
addb
cmp
xrelease
in
mov
orl
fs
gs
adc
popf
cmpsl
lret
aas
fcmovb
push
lods
xor
les
les
sbb
and
stc
into
out
lahf
pop
add
or
sbb
mov
mov
loopne
es
cmp
mov
aam
pop
fistpll
jae
sub
pop
push
shll
mov
repz
dec
int3
orl
jecxz
stos
mov
ja
sti
rclb
or
sub
arpl
shll
or
mov
xchg
push
gs
mov
add
sbb
adc
xchg
cmp
cmp
xchg
pop
sbb
dec
jne
add
je
xor
mov
scas
xlat
dec
add
dec
jnp
je
testl
sti
mov
push
mov
leave
cmpsb
cmpsb
es
mov
int3
decb
jmp
test
loopne
leave
add
pavgb
lods
mov
mov
mov
mov
jns
stos
imul
and
mov
cltd
ret
cmpsb
dec
mov
xchg
ja
mov
xor
push
adc
jno
jmp
xlat
test
add
gs
movsl
or
dec
fadd
mov
pop
inc
enter
add
xchg
mov
js
sbb
add
lods
fnsave
mov
inc
stos
jns
clc
mov
mov
iret
xchg
stc
mov
stos
pop
in
cmp
cltd
mov
xchg
mov
mov
imul
jb
out
in
stc
and
mov
xchg
jnp
push
pop
in
neg
dec
out
dec
add
sti
mov
or
je
adc
movsl
jb
mov
or
aaa
inc
scas
sbb
ljmp
popf
jmp
pop
in
xchg
xchg
int3
inc
jge
sub
add
pop
jno
push
mov
xchg
sub
stos
int
mov
sbb
fsubs
adc
pop
fadds
out
or
enter
mov
in
nop
mov
push
or
cmp
test
or
loope
mov
test
test
pop
je
pop
sahf
cmp
ret
cmp
in
data16
mov
scas
push
or
leave
insb
xlat
pushfw
mov
jns
call
or
shl
xchg
pop
mov
jb
fcomip
mov
lock
fisubs
loopne
mov
fwait
arpl
mov
inc
inc
out
xorb
popf
mov
xchg
sub
mov
mov
push
push
jge
ja
fisttpl
lea
sbb
jp
test
xchg
adc
or
shll
mov
lods
add
sub
fstpl
push
or
repnz
and
xor
shrl
lds
sbb
mov
xchg
xchg
mov
lcall
test
xor
cmp
cs
nop
or
jg
or
call
pop
and
cmp
pop
add
push
xlat
stc
stc
popf
and
imul
shrl
mov
out
mov
adc
arpl
faddl
dec
cmp
dec
shr
scas
jne
pop
aam
pop
jl
mov
scas
sbb
aad
je
push
add
pop
movsb
aad
inc
sub
daa
xchg
xor
in
sbb
out
sbb
pop
shll
mov
mov
rcll
inc
test
xor
ss
cmp
scas
repz
inc
scas
mov
scas
and
push
dec
paddusw
sub
dec
mov
lds
in
lds
and
div
decb
imul
pop
cmpsb
mov
cmp
pop
mov
ret
xchg
xchg
divl
out
mov
notb
push
or
xor
shll
and
inc
push
inc
jmp
idivl
lret
shr
aaa
ret
pop
repnz
xchg
outsl
sub
push
jge
xchg
arpl
push
pop
and
xchg
or
lods
mov
pop
les
in
fld
outsb
mov
imul
pop
inc
xchg
cld
or
mov
leave
mov
xorl
mov
lods
fnstcw
mov
xchg
push
xor
ficoms
xchg
incb
jno
or
js
push
fstpt
notb
or
lea
xor
loopne
shll
push
and
gs
sti
adc
xlat
add
sub
mov
sub
shl
dec
xor
in
xchg
add
out
cmp
jmp
cli
fistps
iret
ret
xchg
jns,pt
add
sti
hlt
mov
lds
jb
push
dec
jmp
lods
in
fdiv
shlb
mov
in
fidivl
xchg
lea
pop
dec
rcrb
inc
bnd
pop
mov
pop
xchg
push
jle
outsb
mov
inc
rorb
lret
lcall
pushf
cwtl
add
xor
and
jp
push
shrl
notl
mov
dec
mov
push
imul
repnz
push
clc
cmpl
pop
cmp
push
push
mov
sbb
test
bound
xlat
shlb
or
ret
rorl
mov
lods
scas
push
cmp
idivb
sahf
es
sahf
cmp
mov
jp
cmp
add
int3
cwtl
push
dec
sub
sbb
ficoml
sbb
aas
movsb
push
sbb
outsb
mov
add
mov
inc
pop
xchg
ret
sbb
sub
mov
xchg
push
aas
pop
subb
push
movsb
mov
push
and
sbb
mov
lea
jmp
fidivrl
adc
cmp
add
js
imul
das
cltd
inc
int3
inc
repz
dec
sub
cmp
mov
mov
iret
ficoms
shlb
call
mov
xchg
int
mov
dec
add
mov
sbb
mov
pop
pop
aas
vpaddusb
stos
aas
xchg
and
cli
jne
mov
pop
leave
into
xchg
push
movsb
ret
hlt
setl
mov
and
adc
repz
int3
or
mov
mov
add
popa
pop
inc
ja
pop
in
inc
dec
aaa
cmp
pop
xchg
jle
ljmp
cmc
jmp
call
add
popa
shrb
mov
sub
and
mov
pop
arpl
sub
sbb
push
sbb
ret
and
sub
push
call
inc
jmp
and
mov
add
jo
jo
sahf
sahf
sub
jo
fldenv
loop
push
insb
pop
xchg
mov
xor
mov
xor
loope
mov
shld
out
add
pop
jge
mov
mov
push
mov
fsubrs
push
testb
in
call
jno
lock
push
jae
push
iret
push
enter
insb
jns
inc
movsb
cmp
lea
orl
ja
stos
mov
mov
aam
mov
notb
fs
in
mov
mov
inc
cmp
jmp
add
push
dec
out
push
jbe
inc
xor
mov
lcall
jle
jnp
mov
mov
lea
fildl
ret
mov
repz
jne
add
xchg
lret
cmp
xchg
fbld
test
fcmovu
adc
popa
jge
fidivl
jnp
pop
mov
mov
inc
or
int3
sahf
push
std
es
sub
sahf
out
jecxz
or
mov
adc
mov
cli
cmp
jno
add
repz
cmp
inc
inc
mov
jg
in
cmpsl
rcl
addr16
ss
ret
mov
lret
pop
int
inc
lods
aad
mov
or
cmc
sub
adc
cli
push
dec
add
scas
repnz
cmp
mov
test
mov
ds
mov
into
jno
sub
adc
in
sarl
or
mov
sub
push
mov
lret
fsts
mov
add
in
fadds
push
mov
adc
and
push
pop
sub
dec
pop
scas
je
jmp
push
aaa
dec
sub
lds
fisubs
insl
push
aad
adc
jecxz
aas
lret
push
cmc
aam
mov
push
add
pop
pop
pop
mov
xor
arpl
rclb
mov
add
int3
push
arpl
pop
loopne
in
jbe
and
iret
mov
sub
faddl
pop
mul
add
fcmovnu
aad
lock
mov
xchg
mov
mov
scas
test
mov
sbb
jecxz
mov
sbb
push
xchg
popf
and
jnp
mov
sub
xor
mov
adc
xor
sti
shl
xlat
mov
or
mov
hlt
es
push
pop
inc
out
mov
inc
test
shlb
or
movb
cld
cmpsl
into
sbbl
dec
dec
shlb
or
sti
or
mov
or
aaa
inc
adcb
inc
aad
test
cmp
push
pop
mov
cltd
je
mov
cwtl
in
scas
add
xor
add
sbb
jmp
jne
das
out
shrl
xchg
ss
into
out
dec
repnz
shlb
sub
mov
mulb
out
aas
pop
cmp
pushf
mov
es
sub
pop
mov
mov
stos
sbb
mov
test
xor
pop
and
in
dec
pop
and
sub
test
repnz
dec
cwtl
outsl
stos
sub
shll
and
mov
add
xchg
xor
imul
jge
lods
lds
cld
outsl
sbb
pop
leave
pop
pop
cs
or
jae
xor
or
out
dec
jbe
and
pop
cli
into
fcomps
adc
shr
push
pop
lret
and
ljmp
clc
push
lea
aas
in
shrl
push
or
jnp
mov
jg
cmp
dec
add
jg
or
cmp
pop
jmp
shll
mov
dec
mov
dec
adc
jmp
and
sarl
jb
adc
cmpl
orl
push
xchg
jnp
popa
out
pop
rclb
jge
jg
mov
or
in
inc
imulb
and
std
ljmp
jbe
or
jns
mov
xlat
mov
lds
bound
pop
cmp
test
pop
test
push
cli
jmp
pop
xchg
adc
rcrl
add
lahf
inc
out
add
cwtl
cmp
inc
cmp
inc
push
jecxz
ds
leave
nop
push
sub
gs
mov
int3
loopne
and
and
push
clc
test
outsl
mov
fists
push
inc
jecxz
adc
cmc
jle
mov
adc
adc
adc
sbb
push
inc
mov
lock
lret
xchg
enter
or
stos
cmp
out
jae
sbb
daa
mov
dec
lret
leave
test
aad
pushf
test
push
push
sub
or
adc
or
int3
cmp
and
bound
pop
int
sbb
fadds
test
inc
pushf
jnp
out
adc
nop
dec
cmp
sub
push
pop
pusha
mov
and
shr
mov
cmp
aam
mov
lea
dec
xor
jmp
sarb
repnz
cwtl
decb
sbb
jg
les
jle
rcl
sub
notl
mov
lds
or
fnstcw
push
mov
test
and
sbb
push
aam
add
ror
xchg
test
lods
mov
loope
dec
xor
sbb
dec
mov
jmp
xchg
ss
add
mov
je
jns
inc
push
sub
or
jnp
push
mov
sub
adcl
cmpsb
sub
out
and
adc
or
fcomip
out
sbb
cmp
cmp
mov
jmp
aad
fcomps
pop
jne
xor
orb
jl
and
push
dec
xchg
and
mov
xchg
inc
jae
adc
cmp
mov
sub
jbe
or
or
les
inc
push
pushf
sbbl
mov
xchg
mov
nop
in
jne
scas
notb
inc
sbb
xchg
jbe
inc
and
xchg
add
jmp
push
push
pop
sub
xorl
out
fistpl
in
fistps
cmp
mov
negb
test
iret
aam
push
mov
clc
mov
jo
mov
test
sbb
pop
test
jns
mov
out
dec
sbb
test
outsb
mov
lock
or
and
lea
cmp
daa
es
mov
jmp
add
repz
pop
into
fstp
lods
adc
push
sbb
lods
cli
out
xchg
nop
mov
in
dec
add
imull
out
pop
aaa
gs
in
dec
mov
add
mov
mov
cmovl
das
jns
adc
out
in
jns
adc
or
sti
sbb
insl
mov
jno
xacquire
push
outsb
nop
cmpsb
push
and
mov
dec
loope
sbb
jae
or
sbb
es
fwait
add
sahf
pushf
xor
mov
jbe
xor
jg
or
movsl
xor
or
repz
xchg
inc
enter
jae
lds
insl
add
movsb
fisubrs
inc
xor
inc
out
cltd
push
mov
mov
pop
aad
andb
xchg
push
or
ds
sub
jbe
dec
bnd
aas
aam
xor
stos
jmp
lret
lods
inc
sub
into
inc
mov
pusha
gs
xor
sub
test
and
adcb
pop
bound
in
cmc
dec
stos
clc
mov
lods
sbb
push
add
mov
stc
lahf
dec
out
mov
insl
popa
enter
mov
xchg
xor
movsb
push
adc
mov
std
fnstcw
mov
push
mov
movsl
push
lods
std
test
mov
and
imul
addr16
pop
sbb
push
fstl
in
cli
arpl
sbb
out
and
jle
xor
faddl
push
add
ss
jge
aas
jg
scas
xor
push
add
movsl
stc
ljmp
dec
sbb
fsubrl
fsub
stc
into
jg
pop
lea
out
or
cvtdq2ps
test
inc
cmp
jg
je
inc
pop
xchg
ja
sbb
xchg
inc
push
pop
hlt
and
ds
popa
push
rcll
test
cmp
mov
adc
jne
xchg
jmp
scas
cmp
mull
and
loop
cmpsl
jmp
nop
sbb
push
mov
xchg
dec
repz
gs
loopne
sub
faddp
pop
push
pop
in
lret
jns
out
mov
push
adc
jb
loop
pop
mov
xchg
lret
push
mov
mov
inc
jmp
out
jle
cmp
or
test
xchg
mov
push
sahf
cmp
frstor
xor
ja
cmp
jg
or
repz
shr
and
add
pop
mov
mov
enter
pop
push
outsl
inc
pop
sub
cli
pop
sti
dec
sbb
jb
push
test
ds
add
lds
add
jns
cmpsb
push
imul
decl
stc
mov
ss
inc
outsl
and
adc
xchg
daa
fsubrl
sbb
xchg
mov
inc
inc
out
dec
pop
ljmp
xor
cmp
xlat
stos
xor
inc
cmpsl
add
mov
in
push
xchg
xchg
je
test
mov
adc
mov
out
cmp
ret
jl
xchg
jmp
cld
cmp
cltd
xchg
pop
push
in
mov
sub
and
jb
or
sub
sti
leave
cmc
sub
idivb
cmp
add
cmp
cmp
xchg
add
jns
test
dec
addr16
out
pop
mov
rcrl
dec
dec
in
jne
adc
jae
fcoml
jp
jle
inc
mov
ror
shrl
add
sbb
dec
ja
mov
lahf
inc
pop
or
ss
xor
mov
adc
lock
mov
or
pop
jecxz
jns
add
jo
pop
iret
testl
sub
ret
pop
lods
pop
push
dec
out
dec
cmpsb
arpl
lahf
xchg
pop
insb
stc
lret
stos
push
add
inc
adc
cmp
jae
rol
dec
fsub
sub
sbb
outsb
xchg
insb
mov
lret
jno
add
mov
stos
xorb
sbb
sbb
pop
jne
mov
stos
outsb
bnd
and
add
repnz
mov
sub
ret
mov
and
inc
mov
cmp
sub
rorb
sub
cmp
fldt
push
jl
xchg
mov
aam
xchg
mov
mov
mov
dec
mov
std
mov
loop
scas
push
stc
jb
ja
dec
add
xlat
push
mov
xor
or
inc
adc
gs
mov
pop
or
imul
mov
das
shll
xchg
mov
push
sbb
mov
mov
aas
test
lahf
jne
fimull
sbb
add
sbb
paddq
mov
ja
push
cs
fs
cwtl
fstpl
mov
gs
test
nop
push
mov
mov
jb
xchg
add
das
xchg
call
daa
xadd
jecxz
xor
loope
push
lods
loop
stos
jae
leave
test
pop
test
loopne
sbb
lcall
add
xor
xor
leave
shlb
pushf
adc
imulb
or
and
sbb
lock
xor
and
enter
push
dec
jg
lods
adc
push
mov
orl
xor
xchg
mov
dec
push
inc
out
imul
dec
cltd
out
and
jle
loope
jg
cmp
sub
xorb
pop
cmovle
and
or
or
push
sahf
push
stc
or
mov
mov
nop
iret
insl
mov
mov
ret
sbb
cmp
push
shlb
loopne
push
inc
mov
aas
bnd
scas
pushf
aaa
stos
test
dec
shll
int3
push
sbb
jnp
test
lret
jae
jae
and
subb
mov
mov
es
aad
push
movsl
repz
pushf
ret
popf
cmp
sbb
jecxz
insl
pop
xchg
wrmsr
jle
pop
or
xchg
lock
inc
or
cmp
fdivrs
sub
call
xchg
jae
das
cltd
int
hlt
xor
addr16
or
jg
imul
pusha
jne
mov
fwait
lret
js
jge
fidivrl
and
jl
xor
mov
in
aam
ret
popa
sub
fs
test
loope
pop
dec
mov
std
int3
lret
pusha
je
mov
pusha
and
inc
and
jecxz
gs
fwait
dec
jmp
jmp
sub
fbstp
push
mov
sbb
cwtl
icebp
mov
cmp
out
mov
adcl
into
cli
in
add
mov
push
add
add
rdmsr
inc
and
jl
cli
adc
jmp
loopne
sbb
push
sbb
or
in
push
sbb
lret
mov
inc
xor
das
xchg
jmp
mov
xor
mov
outsl
xor
sti
inc
inc
sub
adc
mov
fs
cmc
pop
dec
ds
adc
sbb
outsl
inc
mov
dec
mov
dec
imul
fwait
into
xor
subb
cld
push
dec
jo
movsb
adc
pop
fldt
push
dec
pop
jmp
inc
negl
inc
scas
dec
sbb
imul
jae
adc
stc
arpl
inc
jp
dec
lea
sub
insl
in
sahf
ficompl
hlt
imul
loop
imull
test
mov
jo
or
or
hlt
shrl
sahf
stc
nop
sub
lret
nop
pop
inc
or
jge
jo
dec
xor
and
incb
and
enter
dec
pusha
hlt
sti
jecxz
add
or
repnz
jbe
outsb
pop
out
fdivs
push
pop
or
movsb
push
adc
and
imul
dec
pop
push
je
sub
mov
xchg
movsl
inc
mov
movl
jge
or
stos
mov
sbb
sbb
mov
jnp
lcall
sub
out
xchg
call
jb
lret
int
loop
dec
push
filds
mov
or
movsl
sbb
loope
add
xchg
aad
loope
sbb
and
int
por
push
js
aas
cwtl
or
paddusw
lds
std
xchg
int
mov
dec
mov
addr16
lret
sbb
subl
repz
stos
inc
out
pop
jle
std
mov
mov
push
fcomi
push
scas
sub
test
pop
ja
cld
pop
xchg
iret
xchg
pop
lcall
jnp
dec
inc
inc
jo
cwtl
mov
lock
and
lock
xor
pop
sbb
adc
cmpsl
cmpsb
test
and
sbb
pushf
or
loope
and
lahf
leave
jl
outsb
inc
mov
jle
icebp
je
aam
test
inc
inc
in
aaa
push
scas
adc
test
dec
push
test
push
mov
in
xchg
or
and
nop
xchg
aas
scas
outsl
cmc
js
cmp
jp
sbb
out
mov
xlat
cmpsb
pushw
popf
inc
loop
int
or
mov
out
pop
or
movsw
sub
rcrb
es
xchg
pop
jbe
push
fidivrl
pop
inc
iret
and
fisubrl
in
and
cmp
aam
mov
inc
mov
add
leave
shll
mov
dec
sub
icebp
int3
fcmovb
push
jae
in
jmp
lods
push
mov
mov
imul
fs
pop
push
jmp
addr16
push
in
mov
mov
insb
xor
pop
or
push
fs
in
pop
push
add
adc
xchg
ljmp
push
push
dec
xchg
mov
cld
mov
sub
cmp
cmp
xchg
mov
or
pop
daa
int3
in
ret
cmpsb
arpl
in
pop
in
xchg
sbb
insl
push
adc
cmp
mov
out
or
and
push
roll
icebp
and
pushf
pop
into
sti
arpl
push
or
es
sub
sahf
mov
mov
mov
xchg
sub
mov
xchg
shlb
inc
bound
out
fldenv
shr
mov
test
xchg
or
jle
sbb
xchg
ss
inc
scas
pop
jecxz
test
ss
std
dec
jae
sub
mov
jecxz
ret
icebp
in
aam
popa
cmp
or
fisubl
inc
hlt
inc
repz
lahf
ljmp
das
sahf
iret
push
cmp
inc
lock
or
push
mov
ds
mov
mov
lret
jle
cwtl
mov
jno
inc
xor
fwait
and
insb
test
mov
sub
adc
int
lea
jp
sbb
mov
jnp
outsl
xchg
stc
inc
or
mov
cmp
adc
and
movsb
sub
cli
es
das
enter
pop
pop
mov
and
jg
test
pop
lret
mov
xchg
sub
sbb
add
in
mov
ret
outsl
add
dec
sub
xchg
into
or
loope
fidivs
fidivrl
insb
and
hlt
aad
cld
insb
mov
inc
mov
mov
push
dec
inc
cmc
push
cmpsb
sarb
scas
mov
jl
movsb
cmpsb
rcrb
adc
mov
out
xchg
ds
add
repnz
gs
fisubs
xchg
cmp
adc
lcall
popf
or
push
or
pop
mov
dec
push
sub
int
cmp
xchg
sbb
adcl
adc
pop
outsb
cld
xor
in
jo
fsubrs
push
cmp
jne
inc
push
daa
adc
pop
adc
les
and
mov
mov
adc
mov
jb
std
push
jecxz
aas
andb
loope
jbe
nop
into
scas
andl
mov
xchg
movsb
push
das
test
iret
pop
insb
ficoms
sahf
mov
adc
jecxz
shll
cmp
and
mov
sub
out
and
mov
js
pop
or
push
jo
jp
pop
cwtl
jmp
clc
movsb
cmp
add
js
repnz
into
jnp
fisttpl
mov
fnstsw
fstpt
ret
lods
lahf
pop
push
jmp
daa
cmpsb
fildl
adc
out
pop
xchg
out
fmull
cmp
leave
mov
mov
call
addl
inc
icebp
push
stos
leave
cli
rcrl
dec
mov
movsl
pop
dec
mov
xchg
mov
mov
mov
xchg
dec
mov
sbb
adc
and
mov
leave
sti
push
gs
jo
add
mov
sub
add
and
enter
dec
sub
fcoms
inc
ds
jnp
outsl
movsl
xchg
imul
lds
xor
push
fs
mov
repnz
jo
adc
sbb
test
ja
enter
mov
xor
xor
arpl
dec
or
jb
js
cmp
add
pushf
or
arpl
lods
mov
mov
aam
mov
addr16
sub
test
in
aam
push
or
xor
sub
adc
mov
inc
inc
inc
test
adc
pop
mov
add
leave
in
mov
shrl
in
scas
les
sbb
xchg
idivb
inc
push
add
jne
or
adcb
lret
stos
stc
sbb
push
int3
fists
js
pop
and
mov
sti
ret
jo
sub
jecxz
mov
xor
cmpsb
xchg
insb
fs
outsl
iret
ljmp
xlat
and
lods
sbb
shlb
dec
jnp
pop
and
jge
or
mov
sbb
sbb
pop
mov
mov
lods
fisttps
mov
cmp
sar
and
inc
rorb
pop
std
lret
sbb
sbb
rcr
in
xchg
ss
iret
dec
mov
insb
mov
pushf
popa
mov
in
pop
sbb
in
mov
pop
jmp
mov
aaa
testb
and
cmp
push
and
sub
mov
mov
movsl
jg
icebp
shl
adc
data16
jge
shlb
mov
movsl
das
mov
loope
mov
push
imul
xchg
inc
xchg
loopne
cmp
pop
sbb
mov
xchg
mov
xor
jno
mov
testl
insb
lcall
jmp
and
push
imul
flds
addl
push
leave
lcall
adc
fdivrp
add
roll
and
jmp
insl
fsts
dec
mov
pop
out
hlt
mov
xchg
popf
push
add
lahf
xchg
nop
jecxz
fcoms
fstl
ret
jl
push
add
std
push
xchg
cmpl
xchg
enter
fcmovb
push
cwtl
out
and
push
test
or
lods
pop
cmp
mov
xor
mov
mov
jmp
jne
mov
push
jb
insl
sti
xchg
out
cld
xor
adc
rcl
cltd
call
out
push
pop
xchg
sti
add
jno
inc
or
jo
xor
mov
or
insl
jb
cmp
jae
adc
fidivl
scas
fiadds
jmp
out
sbb
xchg
adc
dec
mov
stos
cmpsb
ds
ds
sub
sahf
ss
movsl
adc
shlb
xor
xchg
or
stc
xor
xchg
lea
push
je
lahf
aas
sub
sbb
lods
rcll
dec
mov
jge
sub
into
cli
adc
add
movsl
inc
inc
iret
outsl
mov
and
jae
jge
cmp
aad
shrd
out
mov
enter
push
push
cmp
cmp
pop
sbb
int3
sub
scas
fsubrp
xchg
sub
fwait
mov
jbe
lret
add
lcall
jae
cmp
imul
dec
jge
mov
sbb
push
leave
lcall
lea
jp
mov
fs
mov
inc
ror
loope
sub
pop
ficompl
xlat
js
repnz
cmp
mov
adc
dec
or
mov
and
dec
push
lcall
jbe
mov
or
adc
dec
movsl
mov
mov
cmp
aad
nop
push
stos
or
adc
inc
dec
push
lcall
jmp
fbld
and
cmpsb
pushf
in
int
ljmp
sub
cmp
pop
scas
enter
lock
int3
inc
leave
je
enter
test
xchg
test
cmpsl
loop
ror
into
xchg
sub
sbb
inc
test
out
lds
cs
push
dec
fs
jg
dec
andb
cmp
iret
mov
fs
push
test
shll
aam
ret
jbe
push
lock
mov
mov
cmp
or
push
lea
push
mov
mov
call
imul
arpl
fidivl
test
push
cmp
sbb
xchg
js
and
js
mov
mov
popa
push
xor
lahf
inc
cmp
jg
push
mov
mov
ljmp
fstps
push
test
cmp
ja
out
int
sti
in
mov
push
loopne
sbb
add
ljmp
push
pop
call
or
add
ljmp
dec
cmp
out
out
test
sbb
lahf
cmpsl
inc
test
movzbl
push
divl
in
cli
imul
sbb
mov
nop
xchg
xchg
cmp
push
or
xchg
shrb
xchg
cmc
jl
push
mov
std
stos
repnz
mov
bound
shll
mov
call
push
dec
imul
sbb
mov
push
mov
xchg
clc
jg
mov
mov
sbb
faddl
test
jb
popa
fcmovb
xor
dec
pop
leave
cmp
inc
daa
rcrb
shll
or
test
dec
fsubr
push
or
add
xchg
jge
cmp
dec
dec
dec
cmp
xchg
stos
mov
xor
movsl
repnz
and
pop
leave
mov
fnstcw
mov
idivb
jb
mov
pop
out
ficompl
cli
push
outsb
mov
mov
movsb
insl
pop
xchg
mov
bound
push
add
xorl
cmp
push
in
jmp
xchg
test
fsubl
lock
ret
sub
stc
adc
and
cmp
ljmp
mov
imul
add
into
sub
adc
mov
xchg
test
fistl
movsl
lcall
jno
jp
cs
push
sbb
xchg
test
pop
iret
push
cmp
ja
sbb
sub
jge
dec
jl
push
jg
dec
mov
sub
adc
inc
push
jg
sti
jle
lahf
cmc
mov
ja
dec
dec
adc
daa
and
dec
in
mov
fmull
mov
clc
inc
mov
mov
push
pushf
adc
xchg
pop
call
mov
dec
ds
add
xlat
mov
jnp
adc
xchg
fcompl
sub
pop
iret
mov
leave
jo
lods
jl
sbb
or
mov
push
adc
scas
xchg
sbb
or
jne
mov
adc
ljmp
subb
cmp
pop
pushf
pusha
fidivrs
inc
or
sarl
pop
cmp
lretw
insb
lds
push
les
mov
arpl
test
mov
pop
notl
mov
inc
addr16
and
pop
fidivl
dec
pop
mov
in
xor
daa
or
and
add
sahf
leave
jne
cmp
adc
loope
pop
adc
ret
xchg
or
or
addr16
jae
jle
cmp
add
xor
dec
sbb
pop
cmpsl
dec
dec
out
or
push
cmp
mov
add
xchg
fidivrs
mov
dec
lahf
sub
es
into
cmp
pop
adc
inc
xchg
or
push
arpl
shr
insb
shl
rcl
fnstcw
mov
jl
les
jne
sbbb
scas
push
or
sub
lahf
pop
iret
mov
push
push
loop
mov
adc
adc
scas
push
mov
mov
mov
mov
in
in
clc
shl
daa
les
mov
cmovbe
push
jmp
sub
lcall
mov
stc
das
arpl
test
mov
pop
int
mov
add
dec
adc
sub
arpl
jmp
sbb
add
popf
std
aas
andps
stos
orb
and
xlat
add
nop
add
sbb
dec
mov
mov
imul
push
or
popf
push
in
outsl
cmc
loope
mov
repz
syscall
sbb
mov
jmp
or
xor
mov
mov
xchg
xlat
adcb
inc
jne
jecxz
xorb
addr16
das
mov
scas
lcall
mov
les
enter
xor
outsl
inc
stos
cltd
pop
mov
xchg
mov
test
mov
inc
jp
ja
repnz
dec
out
mov
lock
test
into
pop
loopne
insb
in
or
adc
int3
clc
fisubrs
or
lret
sub
imul
push
jb
test
ret
mov
mov
adc
adc
push
sub
icebp
jecxz
loopne
pop
push
inc
xor
sub
mov
push
and
mov
add
sbb
pop
in
shll
les
scas
jae
enter
inc
scas
lcall
sar
add
pop
popf
in
neg
mov
xchg
push
inc
jne
jb
fnstcw
cmp
xchg
sub
cmp
dec
add
adc
les
sbb
dec
and
hlt
or
or
mov
add
push
mov
push
std
scas
sarl
inc
jge
inc
dec
sbb
xlat
and
mov
xor
xchg
dec
aas
push
jmp
mov
rcll
pop
enter
movb
ftst
cld
inc
xchg
scas
test
ret
les
lock
ja
cmpsl
or
dec
mov
enter
sahf
lahf
inc
adc
in
jb
push
test
fstpt
or
sub
or
jbe
insb
mull
je
ja
pusha
testl
popf
xchg
cs
mov
sub
adc
push
pinsrw
imul
push
and
xor
adc
into
adc
mov
inc
jle
mov
les
pop
dec
sub
lds
adc
je
xchg
jo
scas
sub
inc
pop
pop
dec
pop
inc
mov
push
icebp
icebp
xor
cmpsb
cmp
mov
jmp
mov
push
shll
out
loopne
rcrb
icebp
mov
fstl
pop
jno
scas
jmp
or
adc
icebp
jmp
adc
bound
mov
mov
lods
jp
sbb
in
insb
jl
jmp
fwait
pop
addr16
loop
add
dec
xchg
cmpsl
inc
sbb
add
cmp
jb
and
jbe
jbe
xchg
ljmp
bsf
xchg
lahf
xor
fsts
xchg
pop
xchg
aad
shrl
push
movsl
mov
hlt
push
adc
sbb
adc
lock
lret
test
divl
fidivs
push
and
mov
outsb
push
pop
sub
les
push
ret
loop
cmc
push
in
sub
stc
inc
sbb
and
test
xchg
mov
scas
pop
lods
into
mov
jmp
scas
fldt
xchg
aad
test
and
inc
ja
int
dec
adc
gs
jle
mov
push
lds
and
int
inc
imul
pop
xchg
mov
daa
hlt
ljmp
aam
cltd
add
inc
xor
stc
outsb
repz
sti
inc
mov
xlat
cmp
push
into
push
iret
clc
xor
ret
fstps
ljmp
sbb
out
scas
in
push
testl
cs
sub
mov
sbb
dec
sub
mov
pop
aam
cli
cmp
xchg
xchg
adc
or
jbe
fimull
mov
popa
xor
or
mov
cli
pop
and
scas
in
adc
loop,pn
xchg
mov
and
out
push
lods
add
mov
int
xlat
cmpb
jo
gs
lock
int
inc
jp
push
icebp
add
jne
mov
xchg
sar
mov
icebp
fisubs
hlt
lret
inc
pop
jmp
pop
shrl
inc
mov
fistpl
mov
jo
fsts
int
mov
gs
adc
sbb
jg
pop
add
mov
rclb
into
in
jge
in
es
inc
rcl
inc
mov
cmp
ret
call
mov
aaa
mov
inc
andb
xor
and
sub
gs
cmp
sub
enter
loop
sub
dec
neg
fbld
and
js
nop
sub
mov
hlt
movsb
sbb
sub
dec
mov
dec
xchg
int3
aam
fdivs
stos
jl
xchg
push
mov
je
cltd
in
dec
mov
jge
sti
orl
cld
xchg
xchg
sbb
and
test
mov
add
mov
test
iret
xor
inc
xchg
psubsw
and
in
les
shrl
push
xor
cs
out
je
data16
add
push
jmp
jecxz
out
int3
or
ljmp
arpl
mov
cmp
pop
aad
dec
pavgw
adc
push
xchg
cmp
fyl2x
enter
hlt
cli
push
jp
or
ja
sbb
push
fwait
jmp
sbb
pop
in
push
push
sti
and
dec
xchg
mov
mov
or
add
push
call
imull
mov
cmp
sub
push
fcom
imul
dec
aaa
inc
sbb
mov
add
and
out
in
xchg
sbb
ret
mov
pop
dec
sahf
addr16
lea
fsubs
inc
cmp
imul
lea
jno
sbb
dec
cmpsb
dec
aad
repnz
xchg
mov
cmp
jp
jle
adc
lahf
inc
cmp
out
sbb
push
cs
dec
pop
push
mov
sub
fdivr
aad
pusha
into
and
fs
pop
cwtl
push
aad
mov
sub
pushf
pop
and
sbb
div
xor
aaa
aam
add
push
xchg
cli
test
adc
adcl
jmp
mov
sub
pop
push
add
mov
push
jl
subb
pusha
push
cmpsb
or
cmp
fs
hlt
pop
and
xlat
xchg
jns
sub
sti
sub
iret
leave
mov
mov
cmp
sub
add
test
mov
subb
inc
jae
mov
bound
xor
mov
loopne
pop
stc
sub
outsb
adc
mov
dec
movsb
jecxz
loop
and
adc
cmpsb
push
insb
push
cmp
push
cmp
mov
sub
pop
dec
imul
lods
adc
scas
imul
and
lods
xchg
or
push
loopne
cltd
incl
mov
jle
cs
push
push
mov
pop
dec
js
je
out
mov
adc
adc
dec
rclb
jle
movl
dec
xor
xchg
enter
and
jb
scas
fidivl
popf
scas
jno
loope
rcl
stc
sbb
repz
fcomps
push
test
sbb
add
mov
fisubrl
ss
or
inc
or
inc
pop
push
stc
fucomi
adc
xor
mov
arpl
push
jo
sub
inc
jle
sti
mov
fs
adc
lret
imul
pop
cmc
mov
scas
sti
ret
es
inc
mov
lock
mov
lods
mov
mov
push
mov
fsubrp
test
pop
stc
dec
push
fdivrs
mov
int3
stos
shll
jp
jg
pop
pop
inc
stos
ja
stos
sub
in
icebp
mov
pop
mov
incl
adc
push
dec
jne
outsb
fwait
mov
xchg
sub
push
jae
inc
aaa
mov
or
out
or
pop
jb
popa
or
nop
inc
mov
push
shll
mov
sbb
inc
lret
hlt
shlb
mov
mov
shl
and
clc
push
xor
leave
and
shrl
aad
dec
loopne
pop
mov
lods
mov
bound
aaa
jae
dec
leave
adc
sti
ljmp
jb
mov
and
lds
mov
jl
push
dec
sbb
sub
mov
xor
fcoml
hlt
jl
mov
pop
and
test
sub
sbb
push
orl
dec
sub
sbb
insb
scas
repnz
xchg
pop
into
out
ljmp
xchg
gs
popa
jbe
cmp
loopne
mov
int3
jb
incb
mov
dec
jecxz
je
cs
push
std
inc
jg
push
sub
movsl
ja
cmpsl
js
and
insl
scas
or
sbb
fcomi
js
adc
fadd
jne
push
inc
sbb
and
call
test
ljmp
in
sbb
xchg
ret
cmp
dec
ds
inc
gs
shl
cmc
les
gs
jb
adc
dec
insb
xor
adc
jne
and
push
test
enter
shrl
inc
jb
add
mov
imul
aas
ret
dec
and
jns,pn
mov
pop
into
outsl
push
test
sarb
adc
js
in
cmp
and
ljmp
push
hlt
jb
inc
jne
in
or
cmpsb
cmp
jl
sbb
cmp
sbb
pop
ja
popf
fidivs
jmp
pop
movsb
cmp
sbb
inc
sahf
sub
shl
mov
jne
clc
pop
xlat
mov
testl
fs
out
push
xchg
repz
lock
out
sbb
sbb
add
pop
sub
mov
and
push
inc
stos
push
cmpb
rolb
rcl
pop
ret
pop
data16
jo
bound
sbb
or
fsubrl
lret
adc
ficomps
popa
repnz
rolb
jne
push
xchg
mov
dec
adc
mov
hlt
daa
mov
pop
sub
pop
ficoml
jb
mov
xchg
xor
rcl
xchg
mov
ret
pushf
rorb
push
clc
add
inc
xchg
jno
jne
pop
ja
imul
push
pop
xchg
pop
pop
inc
pop
mov
scas
hlt
inc
std
ret
xchg
shll
pop
or
mov
inc
std
fidivl
in
sbb
and
out
jne
pop
sbb
cmp
add
sbb
push
les
orl
jo
jge
mov
cmp
enter
pop
inc
sub
orb
jno
and
outsl
xchg
inc
in
test
sbb
sub
sub
pop
outsl
hlt
cwtl
and
out
frstor
mov
dec
xor
xlat
ficoms
in
movsl
or
mov
or
mov
icebp
xor
pusha
pop
test
leave
sti
ja
daa
fistl
push
mov
push
dec
cmpsl
imul
lret
enter
cmp
addl
cmp
xchg
decl
mov
xchg
sub
mov
push
sbb
imul
jb
lods
aam
cli
jmp
adcl
cmpl
addb
and
mov
mov
test
mull
dec
push
mov
sbb
popf
cmp
push
push
clc
ds
xchg
mov
es
jb
fnsave
insl
and
daa
xor
cmp
or
xor
push
sbb
sti
dec
mov
pop
mov
mov
ror
sbb
or
jmp
jg
bnd
mov
or
sbb
pushf
das
loop
xlat
add
push
jae
push
push
pushf
lods
cmp
test
sbb
lret
adc
jl
cmpsl
iret
repz
test
imul
iret
fisubs
out
sub
add
popa
xchg
cmpsb
insl
xchg
cmp
mov
subl
jecxz
sbbb
stc
mov
sub
icebp
inc
inc
movsl
inc
stc
ja
js
pop
cmpsb
mov
jl
xchg
and
inc
je
loopne,pn
fistpll
jae
nop
in
jns
outsl
lea
jb
outsb
fidivl
lock
and
or
cli
nop
mov
call
aaa
and
mov
outsl
shlb
xor
and
cmp
clc
or
fisubs
lahf
int
sub
call
mov
jo
inc
push
outsl
xchg
mov
pusha
cs
mov
into
xor
mov
loope
pop
cmpl
gs
cs
sahf
xchg
dec
es
sbb
je
lret
cmp
jmp
and
gs
adc
xor
ret
sbb
lahf
sbb
out
push
jo
pop
inc
dec
pusha
pop
and
jg
xor
fs
int
jo
js
mov
or
or
xor
push
push
js
das
rcrb
adc
mov
pop
es
aam
jmp
push
xor
mov
repnz
push
push
inc
cld
je
jmp
jne
mov
leave
lock
out
and
and
cmpb
sarl
loop
push
and
or
cmp
gs
xor
dec
adc
lock
sub
in
mov
sarb
stc
xor
mov
fs
loop
or
fbstp
adc
adcb
mov
inc
jb
fwait
sub
sbb
jle
cmp
ss
inc
ljmp
cld
pushf
mov
lahf
nop
cmp
rcrl
or
push
dec
push
add
jecxz
insb
clc
js
sub
mov
clc
outsl
inc
daa
xor
je
dec
cmp
xor
mov
mov
push
filds
movsb
shrb
out
scas
fwait
lret
cmp
adc
push
cwtl
and
stos
cmp
fmulp
add
out
loopne
sar
int3
add
xchg
stos
mov
pop
leave
sbb
pop
cld
fwait
sub
fcmovnb
cmc
ljmp
mov
push
lcall
add
int3
xlat
add
xor
mov
adc
jno
das
xorl
pop
push
loope
sbbb
mov
jne
push
push
pop
add
adc
int
mov
dec
lahf
popa
mov
out
push
gs
mov
xchg
inc
dec
imul
daa
aam
inc
ficoml
pop
inc
iret
dec
or
mov
mov
xor
xchg
push
in
in
sub
shrb
or
mov
jl
mov
in
mov
movsl
outsl
stos
mov
or
fstpl
push
cmp
mov
aam
sbb
or
mov
rol
nop
shrb
jge
cld
movl
inc
inc
lea
push
sbb
jns
or
inc
leave
push
mov
or
cmpsb
cwtl
jns
inc
dec
mov
and
jl
cltd
xchg
dec
cwtl
stos
out
aad
loope
test
shll
push
adc
jge
adc
fcomps
pop
in
out
test
into
outsl
jge
jns
mov
jp
mov
inc
or
mov
clc
fiadds
adc
aad
sbb
and
pop
push
pop
and
mov
pop
mov
mov
pop
pop
pop
addb
mov
out
dec
scas
mov
in
es
stos
lret
push
xchg
repz
cmp
adc
dec
pop
xor
xchg
and
cmp
jno
loopne
adc
adc
jle
in
scas
mov
jae
fs
add
cmp
repnz
or
sbb
xor
lods
cmpsb
ljmp
shrl
mov
and
add
adc
lods
sub
out
xor
into
adc
mov
mov
dec
xchg
xchg
jmp
inc
sbb
and
inc
icebp
mov
cmp
popf
add
add
dec
ret
sub
mov
push
and
push
sti
push
inc
sbb
jno
stos
add
fsubs
sbb
inc
add
dec
or
cmp
popf
insl
out
mov
xor
pushf
mov
movsb
cmpsl
xchg
add
sbb
test
xor
xchg
leave
faddp
cwtl
fldcw
pop
clc
mov
pop
rcll
hlt
jae
fiaddl
mov
mov
mov
fdecstp
pusha
adc
and
data16
mov
and
xor
fwait
push
mulb
jge
adc
inc
popa
imul
fists
in
add
mov
pop
cmp
scas
jne
sbb
sbb
mov
neg
add
jl
pusha
xor
add
inc
push
lods
mov
ret
dec
movsb
mov
lret
or
int
data16
pop
sub
adc
sar
out
xor
sub
jns
imul
mov
arpl
xor
imul
xor
out
and
pop
xchg
jmp
push
in
cli
andl
jo
add
pop
or
fldl
xchg
mov
cmp
ret
lcall
das
mov
inc
cli
mov
pop
gs
inc
insb
pop
sub
adc
xchg
cli
pop
add
fwait
aaa
sbb
out
leave
test
push
inc
jnp
mov
cmpsl
div
jbe
movsl
xchg
push
daa
jbe
lcall
in
jb
pop
dec
adc
scas
insb
sub
inc
loop
shrl
shll
sbb
and
movsb
std
cmp
repz
cmp
push
cwtl
cmp
mov
jle
jns
push
fdivs
push
lret
iret
jnp
call
repz
sub
push
sub
subl
ss
je
sahf
xorl
and
xchg
rorl
loopne
adc
push
cmc
sbb
cli
mov
insl
sbb
and
ja
jb
pop
inc
pop
in
and
ss
adc
add
mov
mov
cmp
imul
xor
dec
or
mov
pushf
mov
out
adc
mov
stos
pop
or
aad
lds
xchg
sub
add
sub
sti
jb
sbb
sbb
fsubl
sub
mov
mov
mov
add
xchg
mov
popf
mov
cli
and
loop
adc
int3
cwtl
gs
mov
ret
shl
test
dec
xor
mov
ja
cs
push
stos
push
adc
fsubs
into
dec
adc
push
xchg
stos
dec
push
sub
add
into
fnstsw
test
mov
outsl
adc
fsubrl
lods
ret
test
outsl
or
pop
jnp
xchg
jne
xchg
mov
jmp
or
cmc
dec
inc
gs
pop
cmp
int3
push
pop
mov
out
int3
jno
mov
int
mov
in
movsl
jnp
jg
push
pop
mov
mov
repz
popf
in
and
addl
outsb
lret
pusha
or
pop
mov
and
mov
jbe
jmp
shlb
test
inc
stc
stos
shll
inc
pop
mov
les
mov
stos
jb
insb
sarb
mov
fistpll
mov
in
outsl
enter
cmc
jle
sub
jecxz
mov
and
fisubs
mov
aaa
imul
xor
stos
cmpsb
push
adc
addl
mov
sti
int
push
adc
mov
not
cmp
fmulp
loopne
mov
jnp
or
sub
pop
popa
js
xor
mov
xchg
idivl
mov
out
fldenv
cmp
arpl
dec
dec
out
mov
jno
mov
out
xlat
and
cmp
xor
test
or
inc
cmc
sub
xlat
cwtl
cmp
cmp
mov
mov
adc
jns
fidivrl
in
cmp
repnz
dec
cmp
cwtl
insl
or
enter
psllq
mov
pop
push
mov
mov
push
hlt
lret
push
pushl
mov
jne
dec
jl
popf
push
sub
pop
fmulp
cmp
adc
jnp
sbb
out
or
lret
ret
sbb
sbb
sbb
loopne
icebp
jg
jb
ret
leave
repnz
pusha
jnp
inc
jp
sbb
xor
out
jg
mov
fistl
inc
shr
xchg
mov
cs
adc
xchg
sbb
lret
push
sarl
push
inc
inc
xchg
mov
xchg
sbb
scas
into
test
push
daa
pop
fcoml
add
jl
push
cmpsb
and
outsb
lods
and
outsl
cmp
insb
push
test
out
jb
arpl
and
jl
fildll
scas
push
inc
unpckhps
data16
popa
decl
in
adc
mov
xor
int
cmc
je
lds
xor
daa
push
cmp
xor
and
add
jo
ds
mov
push
ljmp
and
mov
sbb
lea
push
sub
dec
in
test
jae
adc
out
clc
out
xor
or
add
in
shll
pop
sub
and
or
loopne
xchg
cmpsl
adcl
adc
push
dec
hlt
ret
sub
gs
ret
inc
xchg
and
in
xor
mov
inc
or
push
mov
jns
mov
cmp
lods
sbb
cmp
mov
sbb
push
push
fidivl
ret
jnp
mov
push
xchg
lahf
out
ret
out
insb
je
scas
add
movsl
aad
adc
or
mov
jle
arpl
sbb
and
shll
sub
int
jge
rol
adc
movsl
jno
sub
mov
cld
daa
shlb
rorb
movsb
out
test
mov
xor
push
push
lods
adc
cmp
mov
outsl
cmpsl
lret
jge
fiaddl
adcl
loop
mov
push
mov
dec
in
js
xchg
xor
int
in
or
push
jle
add
add
je
aam
dec
les
negl
hlt
js
fcmovnb
addr16
aam
pop
sbb
cmp
int3
and
lods
mov
or
stos
cmp
mov
xorl
cs
and
repnz
cs
scas
arpl
adc
mov
loop
testb
sahf
repz
cli
adc
and
popa
insb
cmova
aam
ret
jle
push
xor
pop
ljmp
shl
xor
xchg
fnsave
and
sbb
dec
icebp
cmp
dec
or
mov
imul
lock
mull
and
in
cmc
fcmovne
cmp
sub
mov
out
out
call
aad
inc
stos
enter
xlat
popa
mov
push
in
orb
mov
fcomps
test
movsl
leave
inc
xchg
sub
lret
fstpt
xor
inc
nopl
xor
lcall
jbe
mov
mov
icebp
push
xor
mov
out
inc
jecxz
test
sbb
add
cs
or
adcb
jo
cli
lcall
pusha
sub
mov
aas
push
jle
int3
and
mov
push
daa
or
ds
push
lock
rorl
lods
jmp
xlat
dec
add
add
mov
insb
movsl
pushf
dec
pop
push
mov
adc
add
inc
ret
out
out
leave
xor
mov
sub
je
out
pop
inc
mov
inc
nop
cmp
fcomps
add
loop
jo
lea
jns
ja
push
movsb
es
ret
out
decb
lods
ret
jge
mov
fimull
into
sbb
jae
mov
fistpl
and
adc
xchg
pop
cmc
andnps
xor
clc
stos
fstpt
iret
inc
stos
rol
enter
rorb
test
sub
subb
ret
and
data16
jg
pop
cmp
ret
pop
bound
cwtl
ljmp
cli
jnp
aam
adc
xor
push
mov
xor
pop
push
xlat
adc
scas
xor
pop
jmp
in
cmp
mov
push
jmp
adc
imul
popf
push
shll
mov
sub
push
mov
dec
in
rcrl
movsl
and
xchg
inc
adc
cld
pushf
push
test
mov
xchg
jecxz
in
stos
and
push
add
xchg
cltd
lods
mov
lcall
pop
aam
mov
cmp
out
xor
adc
pop
loop
and
enter
mov
jmp
arpl
push
inc
inc
cmp
movsl
movswl
ret
xor
test
push
and
dec
jmp
xchg
outsb
mov
mov
inc
pop
cmp
lods
shl
push
push
cli
stos
shlb
repnz
sbb
shlb
adc
clc
loop
jo
stc
rcrb
mov
or
iret
cmp
inc
out
inc
mov
cmpsb
mov
shrl
jae
lods
or
cmp
je
cltd
andl
fwait
inc
fwait
xchg
fwait
outsl
or
jmp
adc
add
loop
sub
in
shrl
fs
fimuls
dec
sarb
pop
int
sub
adc
cli
mov
dec
mov
in
test
cs
sbb
or
stos
mov
jnp
lret
xchg
lcall
cmc
adc
fldt
mov
mov
negb
cli
adcl
xlat
pop
js
fdivs
add
jmp
aas
xlat
addr16
xor
xchg
cmp
mov
mov
mov
iret
sbb
pop
daa
inc
pop
cmp
filds
hlt
dec
inc
mov
mov
add
xor
mov
rclb
dec
cli
inc
out
cmp
or
fwait
out
cwtl
adc
test
cltd
mov
sub
fwait
jmp
dec
jle
cmp
xor
cwtl
outsb
mov
in
das
pop
testl
dec
cmp
pop
repz
lret
add
inc
das
and
sar
cld
or
fwait
mov
js
jns
adc
xor
cmpsl
loopne
pop
movsb
test
cmpsb
testl
lock
rcrl
insb
fsubl
mov
repnz
lcall
mov
fldl
dec
ficomps
sub
mov
ffree
inc
jo
ja
xlat
inc
or
mov
sar
movsb
ficoms
js
aaa
pushf
ja
push
pop
jb
pop
fisubs
inc
lods
mov
xchg
repz
cmpsb
sahf
jae
mov
mov
sbb
inc
shll
pop
mov
jle
sbb
jle
ss
adc
js
sub
in
jae
in
xchg
rclb
addb
pop
xchg
mov
push
jo
lret
fld
popf
clc
adc
or
jl
int
in
inc
pop
sbb
dec
xchg
mov
fucom
xchg
ds
inc
push
lret
fidivl
test
sbb
xor
push
hlt
icebp
mov
and
lea
les
mov
cli
shlb
enter
sahf
inc
and
dec
xor
xchg
aam
lcall
cmp
cmp
icebp
add
xchg
inc
mov
fists
cmc
movsl
mov
aam
push
mov
pop
mov
inc
in
push
pop
incb
xchg
cmp
andb
sarl
push
jmp
ficompl
gs
mov
lds
repnz
outsl
lahf
out
xchg
and
out
sbb
lret
fstpl
mov
gs
test
stos
sub
repnz
jne
icebp
mov
fsubr
aad
lea
and
sbb
iret
xchg
mov
sub
in
test
sbb
incb
cmp
mov
cli
adc
mov
ds
sti
hlt
mov
mov
jle
mov
mov
les
lcall
sub
jbe
inc
js
inc
xor
jg
or
xchg
inc
fdivl
stc
dec
fs
push
mov
cmpsb
es
jecxz
mov
adc
cmpsl
inc
ret
test
sub
cmp
push
xchg
pop
into
lcall
or
imul
insl
add
mov
inc
push
std
incl
push
adc
fnop
enter
xor
or
arpl
lcall
les
in
lea
jge
dec
fwait
pop
push
jns,pt
fwait
push
and
mov
push
les
adc
stos
mov
and
das
lods
jecxz
xor
gs
jbe
add
outsl
mov
mov
add
pop
addr16
mov
mov
loopne
mov
and
inc
call
loopne
push
dec
in
pop
sub
js
outsl
dec
xchg
pushf
cmp
out
lock
jge
lcall
mov
push
sbb
lahf
sbb
mov
rolb
das
xchg
and
sub
test
adc
inc
jg
sbb
fists
pop
pop
mov
jne
sbb
mov
subb
aas
mov
lea
add
mov
push
cs
adc
mov
push
mov
pop
jecxz
loope
add
enter
xor
push
jns
xchg
fcmovnbe
inc
push
into
inc
push
ljmp
dec
pop
pop
outsl
sbb
dec
jbe
adc
or
and
jae
xor
jecxz
xchg
inc
xlat
lret
imul
in
xor
sbb
clc
popa
cld
cmp
push
cmp
fs
xchg
cmp
or
or
ja
adcl
pop
add
mov
mov
test
repz
sub
mov
pop
mov
sub
mov
or
into
dec
addr16
inc
sub
mov
lret
mov
ret
xchg
add
push
pusha
lods
shrb
stos
jno
xor
imul
iret
mov
adc
or
sahf
pusha
sbb
fdivl
inc
push
scas
sbb
sbb
out
adc
xor
mov
gs
xor
jb
mov
mov
imul
pusha
jns
insl
loop
push
sbb
sub
ret
mov
adc
jmp
rorl
aaa
ss
inc
nop
inc
push
cmpsl
pushf
sub
mov
mov
inc
rorl
xchg
stos
jmp
rolb
inc
lahf
dec
lret
jp
fiaddl
cmp
xchg
jge
fwait
dec
lret
dec
sbb
dec
mov
add
hlt
push
dec
mov
pop
mov
je
dec
pushf
and
cmp
es
and
mov
or
sbb
mov
or
movsb
cmovl
jo
jb
lcall
fdivrs
mov
mov
imul
sub
push
mov
movsb
js
push
imul
or
mov
aaa
jmp
mov
sbb
pop
push
xorl
out
ret
jle
cmp
lcall
clc
insb
nop
es
mov
pop
or
sub
lods
pop
cli
addr16
sub
sbb
mov
hlt
inc
xlat
fisttpll
lcall
mov
in
cmp
and
xchg
xchg
cmpb
je
add
lahf
pushf
mov
adc
push
sub
cmp
or
push
push
xor
xor
sub
imul
sub
lds
dec
or
stos
sbb
mov
mov
jbe
je
pop
push
in
lret
xor
aas
adc
add
loop
bound
pop
xor
mov
or
mov
push
jp
into
sarb
loope
jae
sbb
cmc
sbb
lock
cmp
fcmovbe
data16
out
data16
xlat
pop
aaa
pop
inc
dec
inc
or
adc
xor
adc
iret
inc
enter
pop
bound
insb
cld
lods
scas
test
inc
pop
xor
cmpl
inc
fwait
sub
push
add
test
out
mov
inc
inc
dec
pushl
jnp
or
pop
inc
cmc
daa
cs
scas
scas
xchg
orl
inc
stos
insl
jg
or
ret
movsl
jb
mov
add
cmpsb
xchg
push
js
sub
xor
mov
int3
shl
pop
bound
fsubrs
andl
pushf
jp
adcb
push
add
adc
mov
data16
adc
mov
cld
push
pop
pop
cltd
hlt
add
fildll
add
fwait
and
mov
adc
push
ret
je
and
fwait
inc
jno
or
xlat
or
cmp
icebp
mov
movsl
cmpsb
jae
lock
mov
fstps
add
push
xchg
xor
xlat
and
loop
add
dec
pushf
ds
mov
imul
or
cwtl
lds
jl
mov
pop
insb
std
pop
pop
add
iret
inc
sbb
cmp
dec
cmp
add
rcl
fwait
int
push
out
pusha
cld
mov
jmp
mov
insl
xchg
dec
jl
push
imulb
and
icebp
cmp
jg
push
jne
test
jne
iret
daa
aas
and
clc
inc
ud0
pop
adc
jo
mov
add
decb
push
rcrb
xchg
or
mov
int3
mov
icebp
in
test
cmp
test
cs
jp
fcmovb
push
ret
mov
sbbl
add
xor
xor
dec
push
rcrb
pop
inc
scas
adc
fcmovb
hlt
ss
add
vpandn
mov
or
jge
out
scas
sbbl
leave
adc
mov
sub
and
lds
and
loope
daa
cmp
rcll
andps
cs
out
mov
call
mov
mov
jnp
outsl
jno
sbb
cmp
adc
ds
out
cmp
dec
jns
mov
subb
or
xchg
cmpsb
jae
in
es
lret
lea
push
les
gs
dec
into
int
push
cmp
jns
adc
cli
adc
bound
push
pushf
xchg
movb
mov
std
xcrypt-ctr
cmpsl
cltd
xlat
xor
pop
fstps
push
dec
mov
test
inc
push
cltd
sahf
aam
cmpsb
mov
push
pop
push
push
and
inc
subl
push
xchg
sahf
fisubs
pop
fwait
or
xchg
cld
dec
xchg
inc
mov
mov
aam
pop
lahf
xor
fcomp
sbb
cmpsl
ljmp
add
aam
pop
lret
repz
es
pop
cmp
add
or
inc
sub
adc
jge
pop
mov
fdivrp
add
mov
mov
nop
mov
imull
lret
pop
pop
bound
movb
mov
lret
push
mov
mov
push
fcmovnb
cmp
stos
cmp
adc
mov
fimuls
sbbl
fildll
dec
push
push
cmp
mov
jl
jae
test
push
fidivrl
mov
jbe
test
xchg
cld
mov
xor
imul
cmc
add
icebp
insl
jne
sbbl
and
push
dec
scas
mov
cmpsl
xorb
xchg
inc
sub
push
insl
lods
mul
push
mov
cmp
int3
xor
call
adc
xchg
pop
sub
in
dec
jo
mov
out
aam
push
loope
jbe
enter
enter
insb
andl
mov
js
shll
jnp
ret
cmpb
mov
in
notl
rclb
or
mov
mov
jp
pop
push
insl
add
in
pushf
cmpl
pop
mov
push
mov
or
xlat
or
hlt
push
dec
adc
push
mov
add
xor
enter
pop
sub
sbb
jl
dec
inc
and
addr16
scas
enter
movsl
cmp
cmp
xchg
xlat
in
das
xor
scas
mov
sbb
lds
lcall
push
nop
xchg
out
pusha
not
fadd
in
ljmp
daa
ret
jecxz
add
adc
out
cmp
arpl
int
cmp
pop
inc
sub
xor
push
dec
les
cwtl
pushf
xchg
xchg
js
push
mov
dec
xor
andl
ds
addr16
push
jns
lcall
rorb
rol
cmovno
repnz
pop
jge
inc
sub
and
pop
popf
int
cmp
gs
and
scas
inc
out
cmp
jnp
mov
mov
mov
pusha
shlb
pop
pop
call
jb
push
scas
dec
inc
in
div
jle
addl
push
sbb
sbb
cld
push
or
aas
or
push
mov
icebp
aaa
jecxz
xchg
push
adc
rclb
cli
xlat
push
mov
int3
outsl
aaa
inc
push
cmp
jae
sbb
mov
push
pop
into
filds
outsl
aad
mov
sbb
mov
aad
enter
sub
jnp
loopne
jl
mov
aam
mov
add
shlb
mov
cwtl
fbld
nop
lods
mov
or
add
call
aad
pop
repnz
sub
lret
mov
lods
cmpb
mov
or
push
adc
repz
jle
cmpsb
ss
inc
xchg
ret
ja
rdmsr
into
lcall
jo
push
aaa
xchg
sbb
jmp
sbb
jmp
xchg
movsl
sbb
arpl
mov
ffree
insb
jl
popa
jge
roll
lcall
dec
aas
jae
xchg
jp
dec
fcomps
icebp
fwait
ja
rcll
cwtl
andl
lods
or
ret
mov
lods
sbb
lretw
mov
hlt
movsl
xchg
mov
gs
and
notb
mov
int3
shll
jb
and
fidivrs
lock
push
pop
in
mov
push
out
int
ja
daa
out
push
and
add
jmp
and
das
lcall
inc
cmp
cmp
jl
mov
push
sahf
sub
xchg
in
cmp
pop
jmp
cmp
sar
or
imul
and
aas
adc
add
into
jge
mov
cs
mov
shlb
jbe
clc
fwait
lock
lds
incb
lret
pusha
jne
iret
sub
test
jge
push
ss
jnp
or
out
fwait
dec
and
test
push
or
js
fcoms
and
in
dec
sub
push
inc
data16
sahf
mov
popf
sti
pop
cltd
movsb
pop
fdivrs
call
leave
mov
lods
cvttps2pi
in
cmp
push
push
int3
test
push
inc
inc
in
push
repnz
or
icebp
icebp
out
lock
inc
andb
shrl
popa
add
or
sub
inc
jno
mov
dec
sbb
mov
push
and
out
call
adc
sub
cmp
inc
ljmp
mov
xchg
bt
rol
outsl
sub
cmpsb
hlt
push
sbb
sub
pop
in
inc
and
dec
loopne
mov
cli
mov
fs
cmp
mov
in
sub
and
sbb
jb
stc
push
dec
outsl
ja
bound
mov
shlb
sub
push
mov
jle
aam
mov
pop
and
adc
hlt
lds
icebp
mov
mov
pop
jl
out
fildll
inc
push
and
xor
push
arpl
push
std
mov
fdivp
shl
aas
in
jns
mov
adc
int3
mov
and
add
mov
pop
add
roll
mov
and
fxch
and
sub
scas
popa
test
push
pushf
xchg
popf
jmp
xor
pop
gs
jnp
jg
mov
out
fwait
xor
adc
cli
insb
hlt
xchg
out
xor
scas
mov
loop
std
andl
and
lahf
insl
sarb
pop
mov
int
jno
push
mov
orl
mov
inc
mov
icebp
repz
call
dec
jno
xchg
pop
into
adc
scas
or
mov
lret
stos
mov
stc
xchg
sbb
sarl
adc
push
jae
cmpsl
push
xchg
pop
sbb
cmpsb
nop
cmp
push
mov
pop
xor
fisttpl
mov
enter
test
repz
dec
icebp
sti
adc
jne
jge
and
cwtl
mov
inc
inc
mov
mov
fsubl
fs
out
inc
sub
or
shll
push
xchg
outsb
jno
jmp
out
jmp
push
movsl
jae
in
lret
lods
test
lret
adc
adc
movb
xchg
sbbb
mov
cli
xchg
inc
andnps
xchg
mov
lods
je
addb
xchg
mov
sub
sub
dec
pop
pop
push
sub
dec
pop
icebp
sub
es
fisttpl
hlt
mov
pop
addb
pushf
scas
add
and
std
sub
ret
ds
xchg
clc
lret
mov
lods
clc
pop
and
lock
adc
clc
fucomp
loop
pop
xchg
jle,pt
out
mov
leave
sbb
lods
ljmp
and
shrb
scas
xchg
xor
sub
mov
lods
cmp
inc
pop
testb
mov
jmp
push
or
lea
sbb
jne
xor
int
mov
add
das
push
xchg
inc
mov
sub
scas
in
int
loopne
or
mov
cs
mov
call
lahf
aaa
sub
push
mov
mov
add
test
lcall
fisubl
push
in
mov
popa
aad
mov
sub
jb
jmp
test
mov
xor
mov
movsb
popa
xor
shrl
push
fs
mov
push
cmpsb
mov
pop
pusha
inc
and
lea
fwait
and
inc
mov
pop
xchg
and
arpl
adc
mov
les
mov
std
mov
sub
lret
cmp
into
sbb
dec
add
ds
mov
int
ret
lea
aad
inc
stc
popa
lret
arpl
dec
inc
aaa
push
sub
or
push
xor
xor
pop
fisubl
add
sub
sbb
lods
or
stos
test
int3
lods
je
rcrl
inc
lahf
mov
jge
add
scas
pop
dec
mov
add
mov
mov
xor
xchg
xchg
mov
mov
jb
dec
fiadds
js
pushf
dec
push
into
pop
gs
arpl
jo
jle
mov
and
cmpsb
insb
jne
fwait
mov
dec
popf
xchg
movsl
mov
cmp
jns
dec
jns
cmp
lcall
addr16
jg
fsubrl
sbb
movsb
sub
insl
test
cld
jle
mov
test
push
cmpsl
outsb
pop
and
mov
inc
aas
push
mov
in
arpl
mov
lcall
mov
out
pop
xchg
incb
cmp
dec
mov
or
repnz
or
mov
lcall
cltd
push
pop
xchg
enter
cmp
jp
sub
xor
decb
nop
movsb
inc
lds
adc
into
cs
mov
jecxz
add
lock
repz
pop
and
pop
test
push
scas
mov
sbb
mov
je
dec
xchg
jle
cmc
scas
lret
dec
sbb
push
mov
push
add
push
add
and
orb
xorl
add
int
push
cld
push
stos
sbb
mov
sti
popf
and
jb
push
sub
or
daa
inc
lret
mov
cmp
or
jne
dec
push
mov
or
jg
mov
and
insl
lock
jno
out
test
ja
stc
pop
jmp
je
dec
mov
add
inc
scas
dec
dec
mov
xchg
adc
insb
sbb
adcl
xor
les
ja
push
cmp
inc
out
jo
xor
stos
outsb
add
pop
xchg
mov
cltd
dec
mov
xchg
jns
in
fldt
jl
dec
xor
js
mov
xor
cwtl
addb
fadds
shr
cmp
movsl
xchg
in
push
testb
cmp
jle
sti
popf
popa
and
mov
fdivl
arpl
cmpb
pop
xchg
into
je
ss
inc
add
bound
leave
jp
dec
test
movsl
pop
test
mov
mov
or
push
out
loopne
adc
cmpb
dec
sbb
push
and
out
aas
rolb
out
aam
test
ret
pop
jmp
in
aas
rclb
les
xchg
insb
sbb
cmpsl
pop
rcrl
pusha
inc
out
push
arpl
nop
jbe
mov
ss
push
into
dec
rolb
dec
mov
sub
adc
mov
stc
jb
dec
dec
test
xchg
push
push
jmp
flds
jbe
loope
in
jl
xchg
test
add
mov
pop
lods
fisubrs
in
aas
mov
mov
jge
rorl
adc
push
dec
stc
sahf
inc
or
jl
rcrl
scas
push
nop
loopne
sti
or
and
xchg
shlb
fnstsw
xchg
subl
jns,pt
pop
fildl
sub
jmp
test
jbe
lods
enter
and
jle
xor
dec
push
xor
and
ficompl
aaa
cmp
xchg
jl
inc
adc
mov
into
mov
jl
ds
out
rcll
sti
add
loop
adc
fwait
test
dec
iret
push
cli
inc
movsb
xchg
mov
xor
nop
inc
xchg
out
cmpsb
cmc
movsl
lds
cmpsl
jae
je
jg
mov
dec
add
xchg
fsubs
jecxz
inc
jno
ud2
cmp
xchg
out
inc
jge
repz
js
in
scas
mov
inc
fnsave
or
pop
lahf
xlat
movswl
mov
adc
mov
sub
push
shll
xor
sub
imul
xor
or
int3
inc
fucomp
loopne
mov
or
test
mov
enter
xor
ljmp
gs
mov
dec
and
push
cli
mov
sbb
out
bound
mov
adc
add
xor
pop
cmp
and
outsl
inc
pop
fwait
std
outsl
add
sbbl
xchg
push
push
iret
inc
jle
jne
in
addr16
fcompl
xchg
mov
repz
clc
loope
xor
add
lods
repz
insl
and
mov
lret
cmp
repz
inc
daa
inc
daa
in
sbb
insb
jle
orb
jns
stos
jne
in
idivb
cmc
and
sbb
pop
in
mov
jecxz
mov
inc
and
add
jae
push
les
push
je
loope
xchg
add
jae
jae
das
jle
sub
popf
dec
dec
pop
je
hlt
outsb
aas
mov
jl
dec
jae
mov
test
mov
add
aas
fcomip
add
add
imul
shll
dec
sub
mov
mov
and
nop
dec
loope
dec
push
dec
sub
jno
minps
std
jbe
in
sub
nop
pop
es
bound
xor
jle
lret
mov
xchg
pop
sbb
subb
inc
mov
cs
cmp
pop
mov
in
mov
and
addb
stos
adc
jle
ja
or
lcall
scas
mov
daa
sbb
aas
adc
imul
pop
or
popf
mov
mov
mov
sub
sbb
mov
cli
adc
and
cmp
xor
xlat
inc
cld
enter
mov
or
js
add
imul
jae
mov
add
sub
mov
fs
xchg
xchg
imul
lret
add
lcall
mov
daa
scas
insl
pop
and
dec
push
fidivrs
pop
sarl
subl
inc
ret
push
sub
jbe
daa
shrb
mov
lock
add
cwtl
jge
xchg
outsb
pop
frstor
cmp
pop
cmp
push
test
stos
push
jecxz
subl
xchg
and
mov
cmpsb
push
loopne
cmp
gs
mov
mov
test
dec
pop
rcll
insb
sbb
addr16
sbb
repnz
xor
scas
or
popa
inc
in
pop
pop
and
shll
add
push
in
mov
fs
xor
push
dec
jle
adc
test
jge
pop
pushf
es
ljmp
sub
andl
mov
popa
sbb
mov
pop
js
inc
push
in
sub
adc
enter
sub
aaa
jbe
jns
jb
cmp
pop
out
int
sahf
cld
mov
inc
xlat
xlat
fwait
sub
push
fmuls
stc
fiadds
pop
jne
and
fsts
shll
sub
popf
mov
push
jg
mov
std
scas
dec
out
dec
mov
call
nop
pop
push
xchg
ret
loope
int
movsl
mov
jo
out
or
test
pop
cmp
push
and
leave
xor
jl
imul
lods
mov
je
lret
call
iret
mov
ret
stc
shlb
cmp
outsl
pusha
repnz
sub
push
pop
fwait
dec
bound
mov
mov
int
int3
hlt
push
repz
jae
mov
dec
sbb
cmp
inc
pop
mov
or
fs
mov
push
pop
imul
dec
xchg
lea
ja
leave
mov
int3
in
cmp
cli
xchg
dec
dec
mov
inc
push
lods
xor
dec
cmp
mov
stc
into
loopne
or
cli
ja
ret
lcall
jecxz
jbe
xchg
add
aaa
xorl
mov
dec
mov
pop
xchg
imul
adcl
lods
pop
fsubrl
xchg
sub
int
mov
cmpl
cmpsl
dec
cmpsl
jb
mov
mov
test
xchg
call
or
push
cwtl
inc
sub
mov
mov
icebp
imul
mov
aam
fwait
sub
rcr
jmp
mov
fldenv
inc
sub
pop
out
outsb
sar
inc
rolb
fiaddl
mov
stos
xor
scas
inc
loop
cmpsl
dec
int3
mov
adc
or
pop
and
jns
inc
xor
lgs
test
push
das
inc
jl
rcll
pop
test
or
and
in
repnz
mov
inc
adc
sub
call
pop
sub
push
jmp
divl
lahf
dec
cmpsl
daa
js
repnz
cmc
call
fs
lret
inc
mov
stos
loope
pop
pop
nop
ds
fwait
in
ret
sbb
xor
fbld
cmp
lods
lods
repnz
pop
jne
or
jmp
jg
test
mov
fadds
adc
mov
lcall
cmc
stos
inc
ss
jecxz
jp
andl
cmp
push
mov
stos
stos
rorl
adc
pop
push
sti
aad
add
aam
mov
sbb
push
ss
jmp
and
jne
ficompl
add
lahf
push
inc
sti
sahf
aaa
jp
int3
mov
test
test
loopne
mov
pop
or
or
inc
js
rorb
cmp
mov
shlb
test
insl
mov
sub
dec
dec
testb
fstl
test
repz
mov
in
mov
fldln2
fdivl
in
scas
mov
lret
sbb
adc
sahf
dec
int3
aaa
lret
xchg
pop
or
adc
popf
loop
leave
imul
fwait
ss
cmp
mov
fmul
ret
inc
and
adc
mov
pop
mov
mov
dec
dec
add
test
cld
mov
js
xor
packsswb
pop
in
aas
pop
insb
shrb
lret
gs
cmp
pop
push
ror
mov
adc
shlb
or
cs
sub
inc
pop
fsubs
fsubl
test
sbb
mov
mov
lea
dec
and
adc
or
or
fbld
fs
or
movsb
pop
xchg
ljmp
xor
xchg
push
inc
adc
pop
ret
repz
jns
push
sub
mov
leave
jecxz
pushw
pop
jg
inc
stos
cltd
dec
pop
fwait
scas
inc
lods
hlt
adc
shr
roll
repz
xchg
or
je
mov
jnp
adc
push
and
ds
lahf
loope
icebp
and
shll
and
gs
mov
das
mov
pop
arpl
pusha
dec
inc
inc
inc
xchg
push
lret
out
lock
jno
xchg
cli
adc
scas
fnsave
shr
mov
test
fldcw
and
push
fisttpl
or
hlt
and
add
leave
fisubs
cwtl
pop
mov
jb
cwtl
in
push
pop
jmp
xlat
ja
jl
mov
sbb
popa
cmpsb
inc
fistpl
jne
leave
fld
xor
les
sub
cmpsl
add
cmpb
push
add
lahf
jle
xchg
push
jbe
loop
mov
mov
int
sbb
lret
fcomip
dec
pop
mov
fs
incl
sbb
sbb
leave
mov
sahf
jp
jp
ret
cmpsb
add
add
ficomps
jno
push
cmp
pop
leave
mov
sub
insb
in
or
fnop
aas
jmp
adc
lock
into
fisttpl
es
cmp
add
negl
fmuls
add
xchg
ret
testl
ud2
insl
insl
xor
lcall
push
pop
cwtl
ljmp
pusha
sbb
lret
mov
jl
dec
das
enter
lods
mov
sbb
lahf
in
cmp
test
sub
jo
stos
scas
js
pop
sti
jbe
and
call
dec
add
nop
mov
in
ret
addl
das
xchg
rcr
push
push
sub
cwtl
push
jne
mov
mov
movsb
test
into
sahf
in
aad
jp
test
ljmp
mov
mov
mov
mov
mov
jno
cmp
mov
mov
pop
dec
insb
sub
lret
mov
insl
lcall
adc
ljmp
adcb
xor
into
outsl
or
pop
sbb
mov
pop
aaa
adc
dec
int
inc
lea
fildl
jg
mov
fwait
scas
or
out
jg
cmc
xor
dec
adc
adc
stc
inc
cwtl
inc
mov
test
jge
lahf
shll
jge
mov
repnz
xchg
les
sub
cmp
addr16
push
cs
shrb
push
fisttpl
jo
sarb
lret
test
cmp
inc
mov
in
or
rol
add
pop
int3
pop
std
shlb
sbb
fsubrl
push
mov
inc
xchg
mov
out
mov
pop
inc
js
xchg
xchg
mov
dec
jg
sub
xchg
cltd
dec
pop
push
negl
xchg
mov
in
and
cli
jg
jo
dec
outsb
aad
imul
lret
cwtl
es
jmp
mov
ja
mov
xor
pop
or
loop
insl
and
xchg
jmp
loope
jge
jmp
lret
xor
pop
add
mov
sub
shl
jae
jnp
sbbl
ja
in
lret
stc
mov
and
mov
roll
movnti
jne
add
cmp
lock
cwtl
and
jno
mov
push
xor
xlat
jmp
xchg
fidivs
out
mov
jb
mov
bound
lock
cmp
mov
jb
jo
mov
in
mov
mov
and
imulb
jp
jle
or
rorl
jb
adc
adc
jnp
aad
in
ret
js
xchg
cmpsb
and
push
je
xchg
inc
mov
aam
shl
pop
adc
inc
xchg
jne
jne
roll
sbb
bound
lcall
aas
je
mov
sbb
mov
pop
fbld
or
lods
in
dec
mov
sbb
addr16
dec
aad
jl
inc
mov
dec
imul
loope
jp
pop
cmpl
lret
sarl
xlat
push
test
xchg
xor
popf
shrb
call
test
mov
push
addr16
cmp
push
cmpsl
into
cmpb
cwtl
or
ret
pop
push
ret
loop
sub
mov
in
push
imul
and
std
mov
sub
pop
mov
sbb
fidivrl
cmpsl
fdivrs
icebp
test
lods
xchg
pop
shlb
inc
pop
adc
ljmp
int
rorb
xchg
jo
ss
xor
hlt
test
fsubr
pusha
dec
popa
negb
cmp
bound
sahf
daa
cwtl
hlt
jecxz
dec
js
mov
je
adc
hlt
cmc
shll
aam
rcrl
call
addr16
aad
sub
pop
mov
insb
push
int
or
mov
mov
andb
fidivl
test
push
push
xchg
test
insl
xor
bound
test
sarl
icebp
push
mov
test
adcl
fadd
lret
out
push
ss
icebp
orb
flds
test
inc
xlat
test
out
stc
es
sbb
mov
les
mov
addl
mov
xor
je
cmpsl
cmp
out
mov
es
fsubl
pop
movsl
push
cli
rol
jb
and
popf
jo
and
mov
mov
mov
add
push
lea
scas
or
xchg
jge
cwtl
int3
lods
into
addr16
pop
popa
add
lret
cmpsb
jo
outsl
loope
jmp
cmp
test
ja
fstps
mov
leave
or
fs
mov
jmp
push
or
cltd
andl
xor
sub
sbb
call
lds
mov
dec
adc
mov
mov
cmp
mov
xchg
adc
push
out
inc
xchg
test
fiadds
jb
pavgb
repz
jp
rcl
xchg
xchg
in
lods
cmp
scas
adc
stc
add
fidivs
int3
loop
push
xor
ficoml
mov
dec
adcb
mov
stos
jae
in
nop
pop
push
call
mov
and
push
leave
scas
adc
jmp
push
inc
push
addr16
or
pop
mov
es
push
test
pusha
jne
dec
pop
jge
mov
insb
fs
sbb
cli
imull
dec
scas
xchg
adc
aad
and
cmp
push
ret
cmp
or
imul
sbb
mov
jp
lock
fimull
les
lcall
jne
mov
test
pop
cmpxchg
cmp
push
fwait
xchg
xchg
push
jl
lahf
out
loope
xor
sub
outsb
dec
lcall
xchg
mov
and
cmp
ss
jmp
les
inc
enter
or
mov
xor
out
jne
mov
xchg
dec
addr16
xchg
test
push
ret
mov
add
push
xor
or
pop
nop
aad
push
push
add
xchg
outsb
xchg
stos
loopne
push
sti
ja
mov
pop
adc
mov
pop
push
aas
int3
adc
fs
cs
daa
mov
rcll
int3
mov
or
mov
add
lret
xchg
inc
test
iret
inc
dec
mov
adcl
or
sub
inc
push
adc
pusha
jg
scas
add
sbb
mov
adc
adcl
inc
adc
xor
mov
pop
lret
cld
inc
in
aas
scas
adc
dec
xchg
lock
cmp
out
bnd
pop
scas
jae
imull
scas
iret
int
xor
in
mov
xchg
cmp
or
inc
cmp
xchg
sbb
stc
out
xchg
inc
icebp
ror
scas
int3
jo
dec
push
out
sbb
inc
rcr
in
test
sbb
insb
push
repz
adc
mov
cltd
ds
mov
add
mov
pusha
lock
pop
pop
lds
stc
out
aad
adc
fldln2
loopne
push
or
gs
sbb
dec
mov
mov
push
adc
xor
mov
in
cli
sub
mov
test
or
jecxz
mov
movsl
jg
mov
mov
je
dec
out
out
mov
out
ret
lea
cmp
pop
pop
mov
adc
lds
inc
pop
js
addl
adc
scas
ds
xor
sarb
jns
jno
in
sbb
xchg
sub
data16
mov
cli
test
sbb
iret
fists
cltd
cwtl
pop
roll
pushf
std
dec
jne
jbe
addr16
xlat
sbb
test
mov
lea
or
jno
mov
or
adc
inc
or
popf
xchg
dec
xchg
mov
jge
fsub
add
dec
test
test
loope
sub
test
xlat
xchg
pop
hlt
or
in
or
nop
shrb
sub
dec
xchg
dec
pop
test
fs
cltd
popf
cmp
loope
cld
xchg
mov
mov
cmp
mov
push
lods
jmp
add
stos
in
or
add
je
add
out
mov
subl
xchg
sub
loop
out
pop
jl
inc
lds
lods
xchg
dec
and
out
dec
sahf
xor
jns
xor
pop
cmp
xchg
dec
daa
inc
addb
xor
ja
shlb
jl
and
iret
idivl
aam
popf
cmc
jnp
push
nop
test
hlt
out
stos
shrb
or
pop
movsl
xchg
dec
das
int
pop
add
clc
pushl
test
jne
pop
in
inc
xor
sahf
shll
push
dec
flds
xor
xor
jo
jl
adc
loope
popa
push
jns
mov
ds
jnp
int3
popf
inc
mov
jbe
sbb
outsb
ror
les
rorb
int3
or
fyl2x
ds
ds
pop
popf
ds
mov
leave
movsl
mov
adcl
mov
jns
or
sub
adc
aaa
fidivs
in
inc
inc
dec
fs
lcall
movsl
cwtl
cmp
cmp
leave
jle
in
in
inc
sti
stos
test
mov
pop
ja
and
lahf
rep
xchg
ja
push
popa
aas
and
ljmp
out
out
mov
pop
push
jno
jbe
data16
insl
or
xor
loope
mov
adc
mov
dec
cmp
cmp
xor
int3
test
cmc
mov
je
sbbl
movsl
adc
leave
cmpsb
lods
xor
outsl
stos
lods
dec
xchg
sahf
clc
arpl
idivl
cmp
nop
dec
add
lret
pop
dec
icebp
mov
call
push
add
loope
xor
mov
aaa
mov
mov
scas
clc
nop
movsb
aaa
arpl
lods
mov
loop
lods
or
jg
xchg
mov
lcall
jnp
fwait
add
addl
xlat
imul
out
jg
jno
ficompl
out
jo
sbb
lahf
lea
dec
mov
pop
movsb
ljmp
nop
cli
loope
ror
fs
fs
mov
mov
push
shlb
adc
rorl
adc
push
mov
imul
test
out
popf
sub
out
inc
daa
mov
inc
xchg
xor
pusha
fsts
cmp
jno
fcomip
outsl
pop
xor
push
pop
subps
jmp
xchg
push
test
iret
jne
push
outsb
daa
pop
adc
xorl
in
push
fistl
dec
addr16
and
mov
add
in
aaa
lret
or
push
jmp
daa
sub
shlb
jle
lahf
lret
add
repz
mov
sbb
jmp
push
ljmp
inc
lcall
xchg
in
pop
pop
movsb
mov
insb
inc
in
nop
or
fs
push
push
jp
out
add
inc
mov
dec
add
inc
adc
cmp
or
inc
inc
xor
in
scas
iret
stos
gs
push
and
gs
mov
dec
mov
call
loop
imul
or
jae,pt
call
into
shll
js
inc
mov
mov
arpl
cmp
rorb
sbb
ds
fcmovnb
pop
sahf
ja
sub
dec
jg
aam
pop
aaa
in
imul
jbe
dec
mov
push
mov
fcoms
jns
leave
cmp
outsb
cmp
shlb
jne
imul
and
jno
outsb
lds
sbb
negb
movb
fildl
lret
or
cmp
and
arpl
jle
push
jbe
mov
mov
jl
addr16
xchg
jbe
or
xor
mov
inc
and
mov
jp
adc
inc
inc
mov
xor
sbb
sahf
fcoml
shr
lods
jns
scas
sub
xor
shrl
mov
and
scas
cmp
cs
sub
push
shr
mov
popf
jl
enter
aad
and
mov
pop
mov
pop
mov
pmaddwd
pop
cmp
cmp
pop
in
call
lret
mov
sti
inc
dec
sbb
pop
ret
push
mov
test
out
add
movsl
outsb
out
in
repnz
push
cli
jno
enter
loope
ja
sbb
jle
mov
adc
rcrl
mov
pop
xor
aam
xchg
add
bnd
in
test
ret
insb
jl
enter
ss
sub
repz
into
addr16
jmp
cmp
jmp
or
dec
iret
inc
add
mov
popl
xchg
xchg
mov
fcoml
repz
xchg
fistpl
loop
into
xchg
and
inc
loop
and
pusha
mov
cmpl
or
push
shrl
sbb
push
cmpsb
fsubl
lds
jmp
rcr
push
std
pop
mov
sbb
pop
mov
insb
lcall
xor
fwait
out
xchg
and
pop
sbb
push
adc
jg
daa
lods
mov
loope
inc
sarb
cmp
jno
xchg
bnd
test
fwait
push
xor
fcompl
inc
dec
outsl
lcall
jg
dec
into
stos
clc
xchg
and
cs
push
fsts
xchg
iret
scas
ja
push
cmp
outsb
jge
jle
mov
mov
mov
mov
pop
iret
das
cmp
jnp
xchg
push
or
and
repnz
je
es
loop
stos
popa
scas
push
mov
sub
gs
jbe
jb
sub
dec
add
andl
sub
lea
sbb
mov
shl
cmp
adc
out
aas
movsl
xor
rcrl
mov
push
test
lcall
push
jae
mov
iret
sub
sub
mov
and
das
push
lahf
pop
shl
pop
lcall
daa
daa
dec
cmpb
and
mov
inc
jne
sbbb
and
pop
pop
inc
in
add
add
inc
lds
sbb
sub
or
push
inc
mov
subl
lock
jle
mov
mov
xchg
push
or
xchg
xorb
das
dec
inc
aas
fcom
insb
int3
xor
cmp
mov
adc
xchg
je
ss
outsl
popf
push
in
jp
sbb
lods
mov
loop
stos
icebp
mov
xchg
test
xchg
mov
push
or
sbb
or
popa
repnz
or
aam
into
aad
sbb
and
push
stos
add
mov
out
and
repz
jne
jge
jb
dec
testb
out
ja
clc
ret
xchg
shrb
sbb
mov
xchg
xchg
pop
dec
cs
je
clc
xor
movsl
outsl
test
pop
push
sbb
in
jbe
jle
loopne
repz
inc
rcll
leave
xchg
rorl
sbbb
scas
and
jnp
rolb
inc
fidivrl
push
xchg
jecxz
andb
sbb
test
pop
aam
mov
dec
mov
push
ja
or
xchg
xchg
int
call
xchg
pushf
sbb
lret
ss
xchg
fwait
stos
sbb
add
cmp
cmp
outsl
jg
pop
jno
std
sti
and
inc
in
nop
testb
or
or
lret
int3
out
in
stc
jno
loopne
mov
jg
call
test
fsubp
sbb
mov
sub
pop
add
ds
sar
repz
and
mov
cmp
movsb
fisttpll
lahf
cs
and
xor
sub
jbe
int3
sbb
push
addl
lcall
jnp
sbbb
add
mov
gs
movsl
adc
jmp
adc
add
and
adc
jne
push
pop
nop
je
mov
push
add
imul
fisttps
cmp
dec
shl
inc
mov
jecxz
jmp
jecxz
shl
xchg
jl
arpl
rolb
pop
leave
adc
push
cmp
mov
sbb
dec
out
inc
orb
jg
jae
pop
xchg
push
stc
cmp
mov
pushf
pop
hlt
mov
test
pop
mov
lcall
ja
repz
popf
sar
lods
sbb
sub
dec
dec
js
pushf
lret
xchg
adc
dec
daa
xor
aam
in
lods
enter
jle
push
mov
sarl
fisubl
inc
cmp
addb
lret
movsb
enter
jecxz
mov
mov
cmp
mov
jl
mov
jge
divl
sub
inc
sub
repnz
push
in
cmp
lods
inc
mov
out
sti
dec
dec
sbb
jno
cmp
pop
shl
cld
andb
jno
push
mov
xchg
add
lds
xchg
or
mov
xchg
mov
repnz
xchg
push
mov
loop
jecxz
pop
dec
dec
sahf
imul
icebp
insl
pop
ljmp
sub
cld
mov
loop
push
xor
jmp
in
jnp
in
aas
test
inc
jae
mov
dec
jmp
bound
xchg
sub
xor
ret
mov
rolb
xor
lock
sahf
xchg
mov
mov
mov
gs
lds
bound
push
repz
mul
outsl
lock
test
aam
lods
sbb
push
pop
iret
lds
bound
pop
pop
mov
push
mov
mov
dec
jbe
stos
push
imul
jae
shlb
aas
inc
dec
cmp
bswap
ja
sbb
pop
repz
adc
pop
out
lahf
mov
jbe
cli
cltd
dec
sbb
aad
outsb
std
jle
inc
mov
testb
sbb
xor
push
es
imul
or
and
sarb
push
mov
lea
mov
scas
mov
dec
fisttps
hlt
out
push
stos
std
and
pop
push
mov
mov
xchg
and
jo
sub
and
test
adc
push
dec
adc
add
pop
insb
pop
orl
mov
xchg
loop
and
mov
or
sub
adc
jge
dec
and
in
je
lods
lahf
out
mov
mov
dec
or
fmull
mov
mov
shlb
pop
fldt
inc
jno
mov
cmp
ds
test
arpl
mov
sbb
scas
xchg
cmp
push
out
rolb
xor
popa
adc
pop
fstpl
sbb
or
sbb
jae
xor
sub
push
popa
adc
and
cmp
mov
negb
outsb
pop
arpl
cmc
in
inc
dec
cmp
lahf
jbe
in
lods
jmp
push
cmp
es
cs
test
mov
les
push
push
outsb
dec
insl
lret
mov
cltd
mov
aaa
cltd
insl
sub
loop
sahf
fnstsw
int
and
rcll
cmp
cmpsl
out
enter
in
testl
cmc
dec
int3
adc
jns
insb
mov
ss
push
adc
jg
aaa
aaa
iret
inc
dec
arpl
sbb
pop
adc
in
mov
and
inc
fdivrl
pop
test
inc
iret
xor
sarb
outsb
sub
cmpl
mov
sbb
ret
jecxz
std
ljmp
jns
mov
push
cmp
sarl
jb
push
notb
rorb
jg
arpl
push
test
subb
dec
out
cmp
add
xor
into
in
jmp
loopne
xchg
jnp
lret
int3
mov
adc
sub
mov
inc
inc
push
xor
mov
loopne
popf
sbb
inc
rclb
icebp
testl
xchg
xor
fcomi
mov
mov
daa
push
push
jo
sbb
inc
jp
xchg
mov
repz
dec
sub
outsl
sbb
push
cli
inc
pushf
add
repnz
and
repz
in
inc
xchg
and
ljmp
gs
arpl
push
mov
addb
movsl
sbbl
add
dec
mov
icebp
adc
rcrl
mov
mov
push
test
lcall
enter
xchg
mov
scas
mov
sbb
mov
mov
mov
mov
inc
mov
popf
aad
ret
js
xchg
xchg
mov
lea
cmpsl
adc
xchg
pop
rolb
jge
xchg
xchg
mov
jo
sub
push
and
or
xchg
jns
sub
mov
mov
insb
loope
cwtl
push
adc
push
push
subb
cmp
stos
ss
dec
adc
sbb
leave
les
insb
sahf
aaa
sbb
sub
mov
in
lods
sub
fcoms
scas
lock
movsb
sub
sub
push
jl
shrl
add
push
push
mov
and
sub
ret
sbb
adc
mov
jge
sub
lods
les
scas
jbe
sub
sti
imul
hlt
sahf
out
ror
out
mov
and
lock
dec
rorl
push
mov
mov
or
adc
adc
xor
mov
in
pop
push
int3
push
sbb
scas
jl
pop
lret
and
jl
mov
pop
mov
jnp
fidivrs
mov
ret
jns
add
xchg
adcl
aad
jp
pusha
sbb
dec
xchg
xor
stc
in
mov
and
dec
mov
xlat
clc
lahf
cmp
sbb
faddl
inc
mov
mov
lock
jae
addr16
enter
mov
orl
push
shll
mov
mov
loop
push
push
enter
sti
mov
dec
lods
out
in
fstpt
or
push
lret
jns
push
or
or
jae
popa
push
and
pusha
pop
loopne
pop
cmp
and
xchg
inc
dec
pop
test
rcrb
aaa
in
xor
xchg
add
pop
inc
adc
mov
js
push
sub
fcoms
mov
xlat
mov
add
pop
sbb
or
adc
gs
push
mov
lods
insl
mov
jp
pop
andl
dec
icebp
or
add
push
push
ds
arpl
inc
aam
mov
aad
ficompl
cltd
cs
icebp
movsl
mov
sub
into
mov
mov
pop
pop
ret
dec
mov
cmp
loop
je
mov
xchg
sub
loopne
push
sarl
in
sbb
ljmp
aad
cmp
and
mov
pop
movsb
inc
negl
and
test
aam
std
or
mov
push
dec
add
mov
jle
add
push
pushf
sbbb
clc
negl
push
mov
push
sbb
mov
and
jge
movsl
jo
bound
cmp
jbe
test
xor
sbb
scas
jg
lcall
mov
in
pop
int
arpl
sub
loope
sub
jns
and
add
xchg
push
or
out
jmp
pop
cmp
or
and
sbb
inc
popf
out
and
cs
lods
inc
jo
jbe
jmp
jns
test
pop
mov
in
mov
jns
mov
push
mov
or
mov
xchg
into
inc
into
inc
iret
test
or
popf
xchg
pop
in
mov
cwtl
xor
gs
mov
sbb
lret
inc
xchg
iret
jle
ret
pushf
clc
into
dec
lcall
sub
fists
sbb
cld
jle
pusha
vorps
jl
int
hlt
mov
jge
inc
arpl
push
cmp
xchg
aam
mov
jno
ss
leave
or
stos
xchg
mov
xor
loop
pushf
sbb
sarl
aaa
push
sub
aas
scas
mov
or
cmp
sub
cmpsb
xor
mov
jp,pn
pushl
mov
loope
mov
push
mov
fs
rorb
or
sub
mov
and
inc
out
dec
sbb
mov
test
mov
jbe
inc
pop
sbb
jno
aaa
dec
cmp
push
mov
jmp
xor
and
pushl
and
mov
lahf
xchg
shrl
dec
je
or
mov
xchg
mov
in
mov
scas
adc
sub
and
push
jg
adc
cltd
mov
sub
push
inc
mov
pop
insb
inc
cs
ja
mov
xor
cmp
jbe
jecxz
ret
dec
nop
sti
xor
cwtl
shll
or
test
jns
fnsave
mov
jl
adc
aad
sar
adc
jo
xchg
dec
loopne
pop
push
test
adc
sbb
filds
cld
nop
inc
mov
subb
lea
inc
gs
and
push
popa
push
frstor
daa
xor
test
dec
push
adc
ret
cmp
ljmp
data16
jne
lods
jne
push
sub
rcr
fsubl
pop
sarl
fs
aas
adc
testl
dec
mov
int3
mov
aam
push
or
or
dec
jmpw
xchg
dec
xor
adc
jle
sbb
out
data16
lods
mov
nop
aam
addb
fs
aad
repz
xor
cs
into
inc
sub
pop
pushf
adc
outsb
pop
jae
mov
insl
jecxz
repnz
jns
push
out
cmp
jge
cmp
test
clc
cld
jb
popf
add
jbe
lret
push
cmpsb
sbb
xor
lret
out
rcll
leave
cli
dec
push
inc
add
std
pusha
loope
rolb
adc
inc
stc
dec
loopne
jp
adcb
add
adc
cmc
add
leave
inc
into
imul
pop
filds
or
fcompp
hlt
push
jle
xor
adc
not
ds
loop
jae
loop
jo
xchg
jmp
push
jp
pop
cmpsl
push
dec
aad
sub
repnz
aad
xchg
sub
push
lods
add
and
jne
pusha
sbb
bound
test
jbe
insl
les
pusha
sbb
mov
ret
stos
or
imul
clc
cmp
mov
outsb
mov
and
xchg
mov
xlat
adc
xor
scas
adc
js
sbb
push
ds
inc
pop
cld
jl
add
arpl
mov
mov
jmp
roll
jae
jnp
cltd
in
sub
dec
or
or
aas
dec
test
imul
ds
and
push
cld
jno
mov
dec
xor
repz
ss
pop
inc
inc
cmp
sub
sub
and
adc
test
data16
jae
outsb
adc
clc
gs
xchg
bound
in
cli
push
mov
fcmovu
mov
fbstp
cwtl
insb
jp
loopne
test
jb
jb
xchg
sub
iret
inc
inc
mov
cmc
cmc
and
clc
jg
add
push
mov
dec
movsb
aas
call
in
daa
xchg
scas
push
add
xchg
mov
call
loop
xor
std
xchg
and
xchg
and
xchg
fstl
xor
sbb
jne
or
test
sbb
and
lock
pop
push
out
cltd
cmp
les
ds
xor
cmc
push
inc
push
add
mov
out
outsb
mov
mov
lods
mov
es
sbb
and
pop
and
test
js
pushf
add
inc
dec
dec
mov
loop
mov
inc
mov
mov
out
ss
pop
push
sub
cmp
stos
rorl
xor
nop
pop
in
pop
mov
dec
dec
les
lcall
mov
pushaw
adc
pcmpeqw
popf
or
lret
loop
data16
outsb
fadds
push
ds
data16
cmp
outsl
je
das
jg
xchg
imul
push
call
mov
out
sub
and
fbstp
jge
call
scas
jge
lock
cmp
pop
mov
leave
adc
call
fcmovnb
mov
lahf
jnp
mov
push
rolb
pop
jl
and
ja
sti
loope
sbb
jp
pop
loope
or
or
das
xchg
mov
and
push
dec
add
mov
mov
jmp
pop
xchg
push
jg
popf
sbb
dec
xor
inc
jns
push
dec
xchg
fwait
ret
pushf
mov
jl
pop
mov
and
cld
mov
sbb
ret
xchg
sar
cmp
or
push
push
jge
insl
push
lahf
frstor
into
test
loope
das
cwtl
adc
mov
dec
lcall
lea
mov
mov
cmp
sub
push
mov
rcrl
cmp
push
mov
outsb
xchg
gs
cltd
rol
push
idivb
test
dec
shlb
dec
or
sti
shll
testl
mov
dec
ljmp
cmp
arpl
xor
mov
mov
popa
and
lahf
jmp
out
push
enter
inc
data16
xchg
pop
pop
test
ret
push
mov
inc
and
push
mov
sahf
js
mov
mov
pop
leave
inc
iret
pop
dec
xor
dec
xlat
jmp
sahf
fdivrs
pop
test
call
es
cmp
faddl
test
lret
scas
das
mov
push
inc
cmp
push
movsl
test
add
sbb
xchg
mov
xchg
dec
mov
add
cmp
mov
aas
subb
daa
pusha
adc
lahf
ret
insb
cs
adc
stos
add
adc
sbb
pop
xchg
sbbb
fnstcw
mov
pop
cmp
out
sbb
jmp
cwtl
xor
dec
repz
testl
sbb
fdivl
dec
sbb
je
es
inc
push
pop
pop
inc
hlt
popf
int
popf
nop
scas
icebp
lcall
mov
enter
mov
jbe
pop
sbb
add
or
push
cmpsl
jle
into
sbb
adc
mov
or
sarl
xor
loop,pn
lods
and
add
movsl
pop
sub
mov
inc
lea
jp
mov
add
out
test
stc
mov
je
fisubrl
mov
pop
jmp
aad
in
mov
push
insl
cwtl
mov
inc
push
lock
lock
cmc
push
cmp
push
adc
arpl
xchg
mov
and
jo
jmp
pop
sbb
inc
xor
out
xchg
dec
cmc
sub
sbb
sti
sub
movsl
incb
mov
filds
scas
lret
insl
inc
and
sub
and
push
and
add
hlt
adc
loopne
sbb
andb
ja
or
inc
enter
das
jl
xor
ret
push
in
xchg
rcrb
in
or
mov
cmovs
xchg
inc
in
jle
sbb
mov
and
aad
jnp
cmp
sar
push
decl
push
dec
mov
fsub
jg
test
pop
test
jle
mov
cmp
out
shrl
pop
mov
jnp
das
mov
pushf
and
or
sahf
hlt
xor
pop
mov
sub
test
adc
mov
pop
xor
fninit
cmp
xchg
xchg
push
xor
int3
mov
sub
cli
inc
jbe
push
lods
add
cmp
or
pop
xchg
inc
jmp
xchg
mov
cmp
xchg
jae
insb
inc
jae
gs
ficomps
mov
cmp
out
add
sbb
push
mov
sbb
pop
push
cmc
pop
mov
mov
mov
mov
xchg
in
lcall
xor
cmp
mov
ja
subb
xchg
leave
push
push
cmpsl
cmc
outsl
mov
cld
jb
outsb
cltd
mov
cmp
xchg
cltd
negb
fwait
adc
nop
push
daa
cmp
fstps
aaa
shrb
cmp
dec
das
mov
mov
xchg
rclb
imul
push
fidivrl
aaa
or
pop
inc
xchg
arpl
int3
mov
std
lcall
fsubrp
mov
fdivr
loopne
inc
aas
enter
loop
in
xchg
push
jne
mov
jbe
pop
fnop
enter
push
mov
cmp
or
add
in
cld
loop
mov
cmpsb
pop
add
mov
mov
lods
call
leave
jb
insl
mov
les
mov
scas
fs
jb
je
jne
xchg
enter
dec
iret
add
push
lock
mov
das
push
jecxz
stos
jge
pop
or
sbb
mov
cli
nop
mov
and
loope
mov
adc
pop
lods
lret
pop
out
leave
lret
or
rol
or
xchg
fdivl
pop
cmp
out
dec
pop
lcall
push
sub
sbb
int
adc
jg
pusha
inc
not
mov
sub
fst
push
outsl
pop
push
cmp
jne
xchg
shll
jge
int3
or
and
mov
pop
shrl
inc
arpl
sub
push
sbb
and
ds
ds
imul
out
fidivrl
mov
jb
cmp
mov
cmp
lods
lret
mov
rcr
adc
sub
add
js
adc
adc
cmpl
in
sbb
or
addr16
cmp
out
push
and
nop
adc
icebp
in
push
int
ljmp
mov
xor
mov
cmpsb
jecxz
sbb
mov
jp
push
jne
jmp
inc
cli
jns
es
roll
add
push
push
add
loopne
xor
inc
mov
sub
xor
jle
adc
fs
mov
aaa
aas
jp
lret
xchg
push
pop
push
mov
inc
aam
das
sbb
push
sbb
lods
xor
or
pop
jne
outsl
les
into
dec
clc
or
jmp
mov
test
adc
dec
push
je
ds
imul
dec
add
xor
stos
inc
ja
cmp
in
ja
scas
dec
push
pop
fldt
or
cltd
xchg
jnp
cmp
data16
fs
cmpsb
cmc
mov
repnz
fs
insl
int
pop
test
dec
cmpl
divl
push
pop
icebp
sbb
inc
add
into
leave
jns
cwtl
sbb
mov
add
aaa
mov
int3
add
jmp
mov
sarb
int
and
iret
sbb
shlb
dec
cmp
shr
jmp
mov
jp
mov
add
je
cmp
fwait
sbb
js
mov
ret
sub
cld
imul
ja
push
sbb
int3
movsl
fcmovne
ret
or
outsb
adc
test
int
test
data16
cmpsl
test
dec
mov
pop
repz
ficomps
and
repz
mov
pop
or
jnp
insl
sub
xchg
inc
outsb
lock
xor
fimull
dec
cmc
popf
mov
ficompl
mov
mov
leave
jmp
jp
cmp
inc
pop
bound
pop
sub
add
push
pop
std
jmp
jo
inc
mov
mov
imul
inc
mov
mov
mov
decl
push
xor
push
aam
mov
leave
add
mov
push
mov
fistpl
pop
add
mov
out
jge
mov
decl
jl
push
inc
scas
cli
fsubs
lods
and
data16
mov
dec
rcrb
andb
enter
enter
clc
pop
xor
aas
cs
xchg
lock
pop
lods
je
and
int3
cld
popa
adc
xor
adc
xchg
push
pop
pusha
cltd
mov
popf
push
sbb
lret
push
xchg
jge
jnp
inc
or
sub
in
dec
repnz
mov
mov
mov
outsl
mov
or
xchg
dec
or
pop
dec
mov
push
es
divb
mov
mov
or
ror
adc
mov
enter
mov
addr16
inc
int
testl
jno
cs
sbbb
mov
fs
push
xchg
inc
adc
push
fdiv
cmpsl
enter
pop
loope
mov
xor
out
inc
dec
pop
jb
lahf
adc
mov
outsl
mov
test
arpl
fisttpll
dec
ljmp
sub
shrl
sub
popf
mov
das
scas
jl
addb
xor
jb
xor
stos
or
cli
ret
cmp
push
aad
xor
iret
mov
xor
and
mov
xchg
ret
imul
lods
mov
sbb
dec
xor
sarl
pop
nop
and
sbb
cmp
cli
hlt
xor
cmpsl
and
add
mov
sub
jmp
out
xor
stc
fldl
loope
lret
lea
sahf
mov
xor
cmpsb
inc
add
mov
sbb
xor
cmp
push
jg
pop
stos
pop
dec
lcall
pop
and
aad
adc
sbb
push
mov
movsl
push
mov
cmp
hlt
and
xchg
in
imulb
je
xchg
sub
test
cli
cli
into
adc
psllq
aad
jecxz
add
imul
frstor
cs
sbb
pop
insb
inc
test
insb
out
mov
xchg
jae
sub
andb
fcoms
push
push
lock
lahf
out
inc
sub
sbb
ss
js
push
popa
pop
insl
cmp
insl
iret
inc
insb
insb
jne
add
fsub
and
test
inc
push
push
or
xchg
stc
int3
stos
fists
loope
mov
mov
outsl
mull
imul
inc
jbe
add
lds
xor
cld
push
loope
xchg
ficoml
dec
mov
push
sub
mov
jns
pop
pop
pop
sub
pushf
loop
xchg
mov
ret
popf
cltd
add
addr16
lock
fstpt
jno
insb
rclb
shlb
xchg
imulb
sub
cmp
mov
or
add
data16
adc
call
fstps
lahf
and
mov
jnp
cmc
lret
call
sub
push
and
fwait
jns
jns
out
mov
jmp
mov
data16
jmp
inc
mov
cli
sbbb
nop
xchg
and
push
icebp
sarb
jp
std
rorl
inc
adc
pop
nop
nop
xor
jnp
lock
ljmp
and
jae
aam
mov
inc
rorb
dec
xor
movsb
mov
mov
xor
faddl
rcl
cmp
push
pushf
and
jecxz
lods
xor
enter
inc
fneni(8087
mov
cmpsb
ret
mov
fcomp
lds
cmp
push
mov
jecxz
ljmp
jae
jg
test
js
imul
pop
mov
lods
dec
cwtl
icebp
jns
inc
xlat
arpl
jbe
dec
or
jbe
je
lcall
jns
aad
lods
iret
loop
xchg
lods
lahf
mov
and
add
push
mov
daa
pop
enter
cld
sub
in
lgdtl
stc
and
repnz
repz
xor
mov
mov
push
dec
pop
ficoms
orb
adc
flds
out
dec
and
pop
testl
ss
cwtl
jl
inc
into
adc
inc
mov
mov
jne
inc
imul
into
inc
dec
shll
repnz
adc
pop
je
jno
mov
sbb
sti
out
pop
xchg
sti
inc
jmp
mov
shrb
push
sti
ds
fisttpll
sbb
aas
lcall
addb
fdivp
lea
jge
or
cmp
fs
cmp
sub
movsl
imul
fldcw
mov
xchg
ret
nop
jl
push
addl
sub
inc
add
shlb
sub
ret
daa
and
and
and
ljmp
lret
orl
xor
scas
sub
push
inc
mov
js
mov
cmp
pop
ds
mov
mov
xor
mov
into
orb
jo
and
das
or
mov
aam
xlat
movsl
mov
mov
mov
clc
jbe
jne
pop
mov
cmp
ja
out
jo
in
or
iret
gs
insl
mov
inc
test
sbb
in
nop
lock
sub
cmpsb
test
mov
push
mov
jns
pop
cltd
out
ret
pop
sbb
pop
or
sub
jb
xchg
popa
mov
inc
push
aaa
push
pop
loop
outsl
cmc
je
mov
jmp
jnp
jle
loopne
pop
lds
in
inc
ja
fidivs
mov
lea
ror
lds
lret
jecxz
mov
call
xchg
xchg
gs
push
jae
and
xor
fsts
adc
push
dec
loop
mov
daa
loopne
jmp
inc
shrb
movsb
sbb
test
mov
inc
jae
lods
pop
in
aam
add
in
or
ret
loopne
adc
and
bound
mov
fmull
xchg
mov
repz
cmp
aam
loopne
icebp
mov
fbstp
clc
into
pusha
and
pushf
call
mov
or
mov
lea
scas
mov
imul
rorb
mov
pop
xor
mov
push
stc
mov
cmp
out
rcr
jg
sbb
add
push
push
jbe
sub
pop
pop
ljmp
rcr
ss
bound
pop
pushf
pop
add
adc
sahf
or
mov
sub
fidivs
pop
push
adc
imul
sbb
gs
out
dec
int3
jmp
jmp
sahf
shlb
in
jp
push
movsl
xor
mov
jnp
sub
mov
xor
xchg
fwait
lea
inc
dec
cmp
mov
stos
fsubs
out
sbb
adc
pop
movsl
push
sub
cli
xor
movsl
sub
or
xor
or
enter
mov
cltd
subl
jno
adc
out
adc
cmp
outsl
push
mov
xor
jmp
sar
add
cmpsb
cmp
bound
lret
add
test
out
cmpl
and
sub
or
movsb
es
pop
shrl
icebp
and
sub
in
dec
lcall
addr16
sub
cli
dec
inc
xchg
mov
ret
lcall
mov
xlat
inc
pop
xchg
daa
adc
notb
sbb
outsb
mov
xchg
xor
xchg
pop
cmp
adc
jbe
push
movsl
hlt
push
call
or
mov
fcmovnbe
mov
push
gs
popa
stos
fisubrs
dec
clc
adc
pop
xor
push
std
lret
inc
mov
rcrb
adc
mov
insl
cmpsl
push
adc
lods
je
inc
xchg
cmpsl
in
push
pushf
aam
lret
or
mov
pop
cmp
ficoml
aaa
jl
lcall
push
lret
mov
int3
add
stos
push
cmc
shlb
aad
mov
ret
mov
and
sub
leave
dec
je
fdivs
pop
repnz
mov
push
iret
mov
test
rol
jno
xchg
jmp
sub
imul
ja
stos
int
sub
lret
inc
mov
adc
sbb
cmp
idivb
cs
or
pop
call
mov
xor
imul
jno
fstpt
xchg
sub
loope
loop
cmp
xor
push
and
and
mov
mov
inc
insl
xor
ret
cli
add
ss
loope
jl
cmp
sbb
dec
mov
adc
mov
or
loopne
sub
hlt
jno
xor
fwait
push
stos
ja
mov
dec
inc
pop
pop
inc
fsubr
or
pop
jae
in
or
sar
cs
pop
int
mov
loop
adc
pushf
icebp
sub
push
sub
mov
push
jecxz
push
push
dec
loope
pop
pop
sti
mov
jne
stos
xchg
cmp
xlat
mov
mov
mov
xchg
movl
lods
xor
es
mov
clc
pop
add
mov
dec
mov
jle
mov
dec
cltd
xchg
out
leave
jb
jnp
jno
addl
ficomps
jb
push
cmpsb
jg
stos
jbe
mov
dec
lret
mov
shlb
les
mov
push
imul
push
je
cmp
mov
negl
push
dec
aad
sbb
stos
push
cld
add
dec
xor
popf
jmp
out
mov
sbbl
push
sbb
pop
mov
push
dec
push
jp
sub
sub
jmp
sbb
pop
aas
mov
iret
mov
pop
cld
mov
cmp
xor
mov
xchg
xchg
les
cli
popa
mov
in
pop
inc
mov
xor
xchg
jnp
out
mov
push
movsb
mov
jnp
adc
xchg
sub
jecxz
mov
fimull
call
lods
lret
cmp
outsb
mov
pop
loope
leave
inc
outsl
xchg
push
ss
and
repz
dec
cld
leave
out
adc
dec
cmp
lods
fwait
cmp
cmc
pusha
dec
pop
scas
cmpsl
inc
xchg
push
mov
lods
push
pop
inc
ja
fisttps
mov
mov
sbb
or
xchg
lods
clc
jmp
sbb
fsubr
lea
mov
shl
hlt
pushl
out
xchg
dec
out
push
mov
lds
out
mov
xorl
jae
xchg
inc
pushf
mov
jne
inc
and
xchg
jmp
mov
imul
adc
repz
cltd
cmpsb
fnsave
mov
out
in
inc
inc
mov
insb
mov
scas
mov
stos
stos
mov
xchg
leave
mov
adc
fs
adc
and
scas
dec
or
movsb
cltd
mov
sar
xorl
cli
lahf
xchg
repnz
inc
imul
ja
movsb
cltd
sub
add
mov
mov
leave
outsl
xlat
sbb
mov
xchg
or
mull
popf
xchg
stos
mov
data16
inc
add
lret
fsubrl
pop
out
ljmp
and
jae
mov
sub
mov
mov
fstps
mov
aaa
jmp
jmp
sbbl
test
js
rol
inc
fists
mov
mov
pop
fadds
adc
aaa
test
jecxz
xlat
les
neg
sbb
addr16
mov
aaa
or
mov
imulb
sub
lea
andl
dec
das
xchg
into
ja
lret
aam
test
and
xor
aam
adc
cmc
sub
dec
cltd
mov
mov
or
clc
dec
pop
jnp
sbb
dec
adc
and
mov
cmpsb
and
je
mov
adc
mov
pop
jae
repz
inc
add
out
icebp
inc
add
das
shl
push
inc
pop
je
lcall
jno
int
inc
aad
mov
daa
out
js
mov
aaa
les
cli
sub
ss
nop
je
test
clc
jg
jp
divb
jl
ret
pcmpgtb
jecxz
adcb
addl
mov
lea
lahf
ds
pop
ljmp
pushf
pop
ficoms
mov
push
push
jno
out
in
out
lea
leave
and
int3
stos
push
loop
xchg
inc
leave
push
xchg
cwtl
ret
jp
fisubrs
adc
xchg
push
rcrb
pushf
sbb
fwait
jg
je
je
xchg
mov
xchg
adc
inc
cmpsb
cmp
mov
dec
lock
xchg
sub
mov
fstp
mov
pop
cmp
fdivs
xor
xchg
hlt
sbb
add
cmp
pusha
jg
adc
fcmove
inc
lds
mov
lcall
ds
fistl
shlb
loope
adc
lcall
jo
popa
or
mov
divb
sub
bt
dec
and
scas
jg
pop
mov
nop
fisttpl
sub
mov
fwait
lods
and
push
iret
sbb
jnp
sub
cs
stc
jb
into
int3
inc
jae
ss
push
mov
fstpl
loopne
icebp
add
xchg
and
sub
rcrl
enter
push
ret
gs
xchg
mov
ds
out
inc
lcall
jae
xor
lds
cmc
movsl
nop
pop
or
fstl
shlb
aam
or
mov
xchg
adc
add
inc
sets
fisttpl
hlt
xor
dec
decl
mov
dec
dec
pushf
add
ret
out
sub
inc
push
jb
push
sahf
or
inc
not
lea
jl
mov
pop
dec
and
push
mov
repnz
imul
xor
mov
ds
xchg
sub
add
jne
add
xchg
mov
xorl
fdivrl
sbb
inc
cmpsb
mov
cli
rorb
jb
inc
pop
inc
xchg
loopne
dec
sbb
jp
fwait
dec
inc
aaa
push
pop
pop
pushf
pop
push
in
and
sub
mov
mov
pushf
gs
popf
fs
push
push
sub
or
fistpl
inc
adc
or
stos
or
mov
push
jp
outsl
pusha
hlt
ret
cmpb
and
xchg
mov
xchg
mov
pop
mov
lods
mov
testl
push
cli
rcll
hlt
lret
pop
mov
add
stos
mov
sub
jae
cs
in
xchg
xchg
or
push
imul
test
xor
add
aas
cmc
rorb
mov
imul
sbb
cmc
push
sti
test
inc
inc
out
mov
jns
or
adc
movsl
iretw
xlat
insb
push
and
in
mov
mov
dec
loop,pt
das
mov
inc
bound
add
fiadds
shl
cmp
mov
pusha
pop
push
aaa
loop
out
lea
orb
iret
into
mov
and
dec
movsb
push
jns
or
das
jmp
out
lds
lock
cmp
test
aas
ja
mov
dec
pop
imul
xor
dec
cmp
sarl
jae
aas
sbb
add
test
cmp
jae
pop
mov
sbb
push
icebp
add
insl
loop
into
jbe
jl
push
sub
fstpt
das
adc
dec
push
cmp
adc
mov
jae
into
pop
stc
lock
xchg
mov
jmp
inc
dec
cmp
mov
fwait
jb
sysexit
cmp
dec
cli
pop
lea
das
add
cmp
sbb
jge
es
push
jmp
xchg
je
sbb
mov
mov
nop
pop
xor
dec
sbb
sub
test
test
dec
fistl
adc
or
aad
in
cmp
enter
push
add
add
xor
pop
repz
inc
es
or
pop
pop
fistpll
and
mov
push
adc
pop
mov
mov
sbb
fdivl
jmp
xchg
mov
dec
into
clc
add
lahf
push
stos
orb
adc
pop
pop
dec
inc
inc
enter
sahf
pusha
jne
daa
add
jecxz
ret
flds
in
xlat
xor
les
jbe
neg
fwait
cli
cld
imul
cli
jecxz
lcall
jae
and
sbb
xor
xchg
loop
add
aad
and
xor
fbld
pusha
sbb
push
add
add
int3
andb
dec
int
inc
inc
inc
gs
dec
iret
pop
lods
lods
out
ret
jo
inc
xor
test
cmp
dec
rcrl
mov
inc
mov
jecxz
or
lret
xlat
lret
pop
xchg
scas
mov
fidivrs
pusha
add
mov
mov
lret
out
aad
out
sub
test
fsubrs
mov
dec
xor
mov
rcr
into
movsb
sbb
and
ss
clc
in
dec
xchg
ss
data16
sti
mov
outsl
pushf
test
xchg
cwtl
insl
dec
mov
adc
pop
movsb
cltd
iret
cmp
repz
sub
fwait
outsb
add
adc
lds
sbb
or
mov
jl
mov
xor
mov
pop
adc
xchg
clc
xchg
or
sahf
fnstcw
out
or
pop
popa
nop
bound
shrl
out
mov
mov
sub
cmp
and
fbstp
pop
pop
xchg
into
loope
in
lods
cmpsb
js
and
ja
movsl
rcll
or
sbb
pop
adc
mov
pushf
andl
dec
in
insl
jno
dec
fdivl
inc
and
xor
dec
push
push
pop
dec
lds
loope
xlat
push
mov
xor
in
pop
lret
pop
dec
adc
or
inc
add
xor
popl
ret
fmul
mov
sub
aas
popa
stc
iret
cmp
dec
jae
sbb
orb
into
cld
pop
icebp
dec
data16
aas
or
adc
adc
dec
rorl
cwtl
ss
adc
push
das
xchg
insl
inc
repnz
dec
lret
or
cli
mov
out
fnstcw
mov
mov
pop
push
leave
jmp
ficoml
sbb
mov
rol
decb
sarb
in
push
cmp
nop
xchg
mov
pop
or
data16
dec
sbb
fldenv
and
inc
jg
pop
push
sbb
leave
jp
xor
push
or
mov
jp
push
add
xor
imul
cs
fstp
mov
cli
cld
mov
jnp
inc
stc
loopne
call
pop
hlt
mov
cld
pop
mov
je
mov
push
dec
ja
leave
push
test
lret
addr16
jg
xchg
mov
mov
aas
fwait
dec
jp
jno
or
cli
das
pusha
pop
sbb
aas
mov
cltd
fsubrs
push
sbb
cmp
mov
insb
push
sub
cmp
scas
mov
sbb
jecxz
pusha
cmp
in
incl
push
push
push
mov
fistpll
or
pop
jbe
cmpl
jns
icebp
mov
test
addr16
mov
call
xor
jmp
dec
pop
xor
xchg
sbb
jnp
in
or
jl
inc
je
sub
stc
in
add
inc
out
test
fwait
shl
cmpb
lahf
mov
push
cmp
pop
push
dec
popf
jl
in
push
inc
inc
in
stos
into
sbb
cmp
out
cli
sub
ret
jno
cmp
aam
ss
imul
std
in
mov
jp
ss
js
and
lds
or
movsb
pop
sub
pushf
jb
cmp
repnz
inc
jle
adc
loopne
pop
or
dec
daa
sahf
lahf
fs
aam
loop
mov
fbld
in
cwtl
add
inc
inc
mov
push
mov
jbe
andb
mov
lret
sbb
sti
aam
jno
outsl
in
and
aas
mov
lea
mov
rcrb
popf
sbb
arpl
sbb
push
hlt
add
xchg
dec
jmp
je
jb
mov
and
push
xor
insl
idivb
enter
fxch
imul
pop
ret
stos
cmp
pop
cmpsb
sarb
inc
out
cmp
inc
not
push
popa
sbb
mov
pop
and
cmc
adc
inc
cmc
mov
jae
sub
or
testb
ds
in
mov
lret
mov
imul
adc
or
push
lods
sub
mov
pushl
sbb
cltd
call
daa
call
pop
push
dec
adc
ljmp
dec
mov
mov
stc
stos
lock
adc
sbb
fwait
les
jmp
push
div
xor
aad
cltd
push
ds
adc
fldenv
pop
add
or
insl
gs
or
mov
adc
inc
insl
dec
je
ret
lock
pusha
inc
xchg
hlt
xchg
jge
cmp
xchg
lds
inc
sub
mov
sbb
stos
js
mov
iret
jp,pn
mov
icebp
test
in
das
lcall
fisttps
mov
enter
cwtl
adc
mov
inc
enter
dec
jmp
cmp
jnp
adc
xchg
popa
test
inc
cmp
adc
insl
mov
jl
aam
dec
xor
aas
dec
in
nop
push
les
test
add
lds
adc
sub
inc
adc
dec
pop
pop
inc
jne
adc
sbb
xor
rep
mov
cmpsl
adc
xorl
jb
xchg
bound
add
sahf
add
jnp
or
push
cmp
sbb
cmp
mov
lock
sahf
dec
push
fimuls
in
repz
lret
sub
inc
pusha
dec
aam
outsb
sar
mov
in
sub
inc
sbb
push
sbb
dec
xchg
rclb
pop
jns,pt
loope
jg
pop
xchg
aad
insb
dec
jecxz
xchg
and
loopne
test
cmp
sub
or
testl
mov
and
cmp
cmp
loope
xor
loop
lods
mov
mov
cmp
mov
stos
add
lcall
cwtl
ret
cmp
insl
inc
js,pn
dec
testb
pushf
fdivr
or
push
add
aaa
aaa
fistpl
imul
dec
test
scas
jb
loop
adc
enter
pusha
test
shll
inc
icebp
in
sar
js
lods
or
push
cmp
cmc
xchg
jle
popa
jbe
mov
and
jg
jmp
xor
test
fists
xor
mov
mov
out
inc
inc
cmp
push
push
push
test
cli
lret
fidivrl
aad
add
xlat
insb
pop
and
inc
pop
pop
arpl
xorl
xor
push
loop
lock
cmp
aad
fidivl
mov
sub
mov
inc
out
and
adc
sahf
xchg
add
lock
adc
in
pop
adc
gs
push
cmp
add
jle
fwait
mov
mov
push
arpl
sbb
adcb
repz
jl
and
xor
adc
jns
xor
fldl
aad
test
adc
push
and
test
xchg
xchg
mov
cwtl
das
sarl
pop
mov
xor
ss
xchg
mov
enter
shll
cmp
sub
popf
xor
fs
and
test
loop
jge
je
mov
aad
sbb
add
es
sub
lret
push
mov
out
adc
call
push
push
push
je
cmovg
loope
orb
cmp
dec
out
das
adc
mov
jle
aas
jbe
hlt
xchg
mov
pop
std
xor
pop
add
mov
int
sahf
adc
add
xor
gs
push
sbb
push
mov
out
out
inc
dec
pushf
gs
cmp
and
jp
or
cmp
xor
loope
sub
or
fmulp
fcompl
scas
lods
out
mov
xor
icebp
repz
sbb
rcr
mov
aas
mov
fcompl
cmp
out
adc
and
push
push
push
inc
call
fisttpll
nop
aam
sbb
and
ja
mov
subl
ss
iret
dec
lea
fs
fldenv
in
cmc
das
jle
ret
hlt
lds
dec
mov
imul
insl
call
fdivrs
mov
mov
pop
cmpsl
out
dec
out
add
sub
sbb
sbb
sbb
mov
sbb
push
inc
in
fdivrl
jb
enter
notb
stc
jle
mov
inc
popa
sub
cld
push
add
loopne
or
dec
and
fs
mov
mov
or
cmpsl
mov
insl
push
mov
push
adc
push
cwtl
or
add
inc
add
add
outsl
inc
test
inc
and
insl
scas
repnz
xchg
jmp
inc
loopne
sub
sub
movsl
add
or
repnz
repz
xchg
pop
jmp
push
test
nop
daa
push
stc
mulb
sbb
rcll
xchg
adc
push
aad
xor
pusha
xor
sbb
test
lods
jecxz
mov
scas
into
into
gs
cmp
add
sub
out
test
or
adc
nop
inc
loope
mov
adc
divl
add
lock
addl
jl
mov
mov
jp
pop
push
xor
inc
mov
mov
in
inc
test
loopne
mov
pusha
and
ret
ret
data16
fbld
cli
lods
push
pop
out
and
lret
std
out
xchg
adc
mov
dec
mov
inc
push
mov
movsl
cmc
in
cmp
js
adc
imul
lds
sub
sbb
pop
jnp
sahf
xor
inc
stos
jnp
xchg
orb
push
test
rorb
stos
or
test
cmp
jnp
jmp
faddl
push
xlat
icebp
popa
jle
cli
sbbb
push
mov
pop
sbb
pusha
test
lcall
clc
xor
cwtl
mov
push
add
xchg
mov
fwait
cmp
ds
test
xchg
les
fdivrl
adc
mov
mov
mov
xchg
imul
orl
jg
adc
push
mov
fmul
fsubp
or
sarl
cmp
and
stos
aas
bt
test
or
pop
or
jle
insb
loope
sub
jo
jbe
or
rcll
lock
ss
idivl
gs
jle
into
inc
inc
cld
loop
inc
int3
lds
xlat
iret
mov
mov
das
adc
xor
jge
cmpsl
mov
movsb
dec
imul
cmpsl
dec
in
push
jg
push
cmpsb
cmp
adc
xorl
push
push
cs
push
pop
cmp
lods
adc
dec
mov
ret
sbb
out
dec
loopne
out
rcll
es
sub
inc
out
mov
shll
sbb
xor
je
fwait
jge
add
jne
sbb
imul
xchg
pop
stc
cmpsl
adc
test
scas
xchg
dec
inc
pop
fwait
add
aaa
imul
iret
cmp
sbb
hlt
cli
mov
lods
jae
cmp
fsubl
mov
xor
mov
daa
cmp
mov
out
or
jl
or
rolb
test
mov
mov
push
add
fxch
dec
mov
xor
aas
jecxz
adc
mov
adc
mov
jmp
ret
icebp
enter
lret
hlt
and
aaa
xor
jg
fs
or
or
or
xchg
rorb
or
mov
sub
aam
pop
mov
shrl
xchg
mov
loopne
les
sti
inc
jo
jbe
cltd
data16
mov
cld
leave
ljmp
push
cld
or
sti
pop
into
lods
test
out
adc
mov
push
mov
push
push
mov
data16
xchg
addr16
jne
or
sub
mov
gs
adc
add
test
push
fildll
or
icebp
push
sub
pop
sbbb
sub
mov
push
cmc
cmc
pop
rclb
sbbl
or
mov
cwtl
pushf
dec
pushf
idivb
and
jle
xor
data16
in
je
in
dec
das
ljmp
addl
mulb
mov
insl
xor
dec
and
out
jmp
pop
faddl
inc
loop
xchg
subl
leave
jne
mov
inc
mov
sbb
pop
pop
inc
scas
mov
push
into
dec
lea
or
sub
insl
inc
mov
push
inc
out
cmpsl
xchg
in
insb
xchg
insl
xor
mov
xor
enter
jge
pop
roll
adc
sub
popa
int
adc
mov
push
xor
mov
movzbl
mov
mov
lock
mov
outsb
daa
stc
xor
shrl
rcr
push
cli
in
loop
pop
jecxz
add
and
mov
jnp
jle
sbb
pop
enter
mov
loopne
push
adc
pop
fiadds
movsl
into
fstl
ds
inc
push
incl
mov
iret
cmp
ret
pop
rorb
leave
ficoml
pusha
or
xor
fwait
jno
xor
jl
push
or
nop
pop
loope
lock
mov
jns
mov
leave
and
mov
push
iret
jge
pusha
xchg
shlb
mov
mov
js
or
insl
cmp
dec
dec
push
inc
fiadds
push
fmuls
or
js
sbb
pop
daa
pop
pop
adc
pop
mov
movsb
or
daa
inc
cwtl
mov
cmp
repnz
jno
adc
in
shll
mov
int3
push
mov
aaa
stos
xor
popa
mov
fs
xor
adc
mov
xor
inc
mov
mov
or
scas
push
sahf
push
les
rcrb
das
call
and
testb
cld
lahf
loope
clc
and
push
test
sub
test
orb
lods
das
or
call
jnp
jmp
sub
in
cmpsl
les
std
icebp
inc
lods
mulb
les
push
cmc
bound
movsl
jb
fcoms
mov
or
inc
das
adc
bound
cwtl
out
xchg
ds
sbb
rol
xor
xchg
fmuls
sahf
andl
popa
jg
mov
xorl
fcmovb
and
sub
push
jae
dec
lds
loope
aad
scas
xchg
cld
fldenv
mov
cs
cmp
adc
mov
das
in
fdiv
call
mov
popf
adc
lods
out
lea
sub
mov
mov
xchg
loope
mov
inc
and
test
fstpl
call
or
iret
mov
aaa
aad
sub
or
add
cmc
cmp
outsl
pop
dec
xor
rorl
aaa
or
cwtl
dec
daa
daa
or
push
xchg
out
in
jbe
jae
adc
outsl
lea
add
jmp
push
repnz
stc
mov
adc
mov
xchg
lds
pop
loopne
lret
int3
jge
shl
pusha
inc
cmpsl
cltd
adc
or
pushf
inc
pop
mov
xor
xchg
adc
cli
pop
lret
addl
sbb
xlat
dec
scas
xlat
mov
das
cwtl
mov
pop
adc
movsl
inc
dec
jp
and
dec
dec
mov
pusha
jae
adcl
cli
mov
jp
xchg
mov
cmc
mov
cmpb
rcrb
jo
icebp
jg
push
aaa
cmc
aaa
cmp
mov
loope
ds
xchg
push
mov
inc
mov
cwtl
repz
and
stc
dec
push
sbb
or
int
leave
cmpb
dec
xor
in
into
and
xlat
cmp
inc
xor
pop
push
stos
and
outsb
fidivs
adc
and
ja
andl
ss
inc
and
stos
mov
pop
sbb
int
out
repz
push
dec
leave
mov
and
das
mov
cwtl
loopne
fnstcw
inc
xor
fbld
xchg
jns
arpl
jecxz
fs
mov
fsubrs
incb
dec
push
testl
stc
jmp
and
xchg
insb
sarl
cmp
inc
mov
or
push
jne
mov
jg
hlt
and
insb
cmp
pop
pop
inc
cld
add
jl
int
pop
aad
shlb
xlat
inc
mov
frstor
inc
out
fdivrp
add
add
test
xor
mov
push
push
pop
aam
imul
xchg
test
je
loopew
iret
clc
jp
aaa
pop
push
lret
rclb
cmp
sub
repnz
sub
push
fnsetpm(287
cmp
pop
add
pop
pop
jns
cli
imul
push
pop
push
dec
rep
sub
fnstsw
mov
add
icebp
sbb
in
hlt
test
mov
mov
inc
test
stos
shlb
push
fbstp
fnstenv
imul
ja
and
subb
adc
clc
mov
jnp
int3
inc
enter
imul
jnp
lds
pop
out
ret
adc
loop
jns
sbb
jns
sbb
lods
mov
sbb
sub
mov
xchg
dec
pop
ficompl
out
lcall
xor
pslld
pop
sub
cltd
orl
dec
and
ffreep
enter
cld
scas
mov
cmp
test
out
dec
pop
bound
add
or
sub
mov
add
dec
jp
hlt
or
data16
xor
and
push
sbb
call
negl
scas
push
outsl
fwait
mov
call
lret
sbb
sbb
dec
arpl
data16
test
movsb
inc
pop
call
jnp
mov
mov
lods
mov
mov
inc
dec
mov
adc
shrb
out
cwtl
add
push
xor
rorl
sbb
jbe
adc
popf
mov
sub
push
push
mov
jg
and
cmp
xchg
js
cld
fdivrs
cmp
sbb
stc
dec
xorb
jecxz
cltd
sbb
lcall
add
or
ja
insl
imul
test
ret
lret
out
inc
and
std
push
lods
test
int3
lret
mov
loope
lea
pop
in
fildl
clc
scas
push
inc
cmpsl
lock
mov
push
and
ds
or
sub
scas
loopne
jno
jmp
popf
xor
rorl
std
cmpsb
xlat
sub
repz
mov
jp
or
pop
cmpsb
test
adc
mov
mov
push
stos
movsb
jae
movsb
push
mov
cmp
movsl
pushf
mov
push
xorb
cmpsb
ret
sub
js
popf
or
fdivrs
dec
mov
and
or
pop
lods
int
xchg
jg
xor
jne
imul
mov
icebp
scas
adc
int
dec
fiaddl
shr
stos
or
adc
sub
pusha
dec
cltd
lcall
call
push
mov
js
sub
push
cs
fwait
and
ljmp
add
cmp
fdivrs
adc
sarl
pop
fwait
or
xor
lret
sub
stos
addr16
std
xor
mov
shlb
cmpsb
bound
stos
cmp
jne
pop
shll
adc
leave
inc
and
lods
and
loopne
cmp
pushf
jp
adc
aas
addb
mov
sub
push
mov
movsb
mov
out
shlb
sbb
xor
or
lds
push
ss
outsl
test
js
subl
out
sbb
dec
popa
cmp
mov
int3
mov
xchg
out
outsb
xchg
dec
jae
inc
enter
test
inc
adc
insl
dec
adcb
fs
adc
push
das
xorps
xor
in
test
jle
loopne
negb
and
inc
std
gs
jbe
push
sub
mov
pop
fbld
roll
fmul
stos
and
test
push
cmp
mov
iret
inc
stos
movsl
and
stos
test
stos
aam
sti
clc
shl
mov
pop
adc
push
aaa
shlb
dec
push
xor
loop
insl
pop
push
fwait
inc
rol
lock
add
xor
ret
cmp
pop
cs
jl
int3
mov
clc
insb
jl
lods
mov
test
push
sbb
push
mov
js
rcr
pop
dec
push
push
cmp
sub
mov
pop
imul
pop
push
jbe
mov
jp
add
mov
jo
jg
add
insl
xlat
jbe
insl
imul
push
xor
shll
das
pushf
mov
arpl
sbb
cmc
push
or
repz
je
repz
fimull
pop
and
ret
jmp
sub
mov
mov
or
lods
jne
outsl
cmp
loopne
sbb
add
incl
popa
mov
pop
push
loopne
int3
push
aam
gs
xor
jae
cs
lcall
push
aad
sbb
xchg
push
ret
xor
xlat
int
popf
leave
stos
cmpsb
loope
jo
mov
js
clc
xchg
adc
inc
sar
divps
mov
cmp
push
jb
sbb
push
sub
sbb
mov
mov
data16
popf
imul
rol
sbb
repnz
and
mov
insl
cmp
aam
gs
lock
mov
mov
dec
mov
cmp
cmc
enter
je
test
clc
xor
jb
testl
stos
outsb
dec
push
jo
arpl
jne
icebp
nop
fistl
cmpl
push
xor
lahf
lcall
movsl
add
rolb
dec
ror
xor
loope
dec
mov
orb
lcall
add
loop
mov
xor
lea
test
pushl
sbb
std
dec
fmuls
mov
test
sub
in
imul
jb
mov
cltd
clc
in
ret
enter
addr16
pop
xchg
stc
jb
loope
jle
in
dec
lea
into
add
in
add
add
sub
rorb
cmp
cmp
and
mov
insb
call
push
gs
jl
stos
js
pop
call
inc
sub
or
xchg
xor
or
loop
pop
test
lds
lcall
repnz
loopne
cltd
lock
bnd
sbb
je
push
ja
sti
fcmovnbe
icebp
repz
in
dec
fiadds
and
adc
adc
push
pop
mov
push
mov
icebp
das
pop
faddl
mov
inc
in
lret
test
popf
mov
add
test
popw
add
divl
or
dec
aas
and
cmpsb
sub
lds
dec
dec
jmp
cmp
pop
stc
and
sub
lods
push
pop
iret
decl
jg
fwait
movsb
mov
inc
lahf
cmpsl
test
mov
hlt
mov
in
xlat
mov
das
mov
push
ret
sahf
jne
lea
add
jo
in
lock
mov
jo
cwtl
ja
mov
cwtl
push
cwtl
pushl
mov
gs
push
push
sub
loopne
cmpsl
jmp
pop
mov
mov
or
and
inc
and
aam
sbb
mov
or
scas
in
les
mov
out
flds
das
mov
std
push
cmp
adc
call
pop
mov
push
fiaddl
mov
jmp
sti
sub
dec
aad
mov
mov
jmp
mov
pusha
fsubrl
rcrl
loope
arpl
ret
sahf
xorl
sub
movsl
int
xchg
pop
adc
xchg
xchg
fbstp
jne
in
imul
enter
setl
pop
shl
test
ja
sbb
loopne
hlt
push
sbb
or
fwait
xchg
adc
cmc
mov
repz
mov
adc
dec
and
ret
mov
add
and
mov
xorl
cmp
bound
inc
movsl
or
add
std
les
lret
dec
xorb
hlt
lret
imul
mov
mov
das
adc
hlt
inc
adc
xor
loope
jl
cmp
es
lock
ret
cmp
add
xchg
sbbb
jo
cmc
ret
xchg
or
mov
dec
out
insl
test
sub
mov
add
movsl
mov
jbe,pt
lods
inc
fisubl
into
dec
xor
jns
xchg
cmp
shlb
dec
dec
loopne
pop
jl
rcrl
scas
mov
stos
push
inc
scas
or
xchg
aaa
aam
adc
jl
sbb
xor
jle
adc
mov
popa
xor
add
fnsave
cmp
test
lret
cmp
jne
jle
scas
adc
popa
cwtl
mov
adc
push
pop
das
mov
dec
sti
add
ret
std
pop
dec
pushl
adc
sub
adc
cmp
push
jb
daa
xchg
clc
mov
and
add
dec
nop
in
mov
enter
cmp
add
lock
adc
leave
push
arpl
cltd
adc
addb
push
loopne
aad
in
push
inc
dec
inc
les
xchg
loopne
fdivrl
dec
add
jecxz
insl
in
xchg
cmp
mov
xor
pop
sbbb
mov
mov
icebp
inc
xlat
pop
into
adc
and
pop
adc
adc
cltd
sbb
icebp
inc
jo
into
or
inc
dec
fimull
repnz
mov
inc
sbb
out
arpl
orl
data16
ja
inc
out
cmc
js,pn
lea
mov
test
xor
ffreep
jecxz
cmp
in
jns
test
push
push
pop
stos
pop
inc
in
pushf
stos
orb
lds
xchg
xor
daa
andl
mov
mov
cmp
push
push
lock
inc
push
adc
ret
cmp
pop
mov
jne
dec
data16
jae
jae
ss
inc
and
leave
cmp
jp
cltd
cmp
adc
sarb
and
aam
fisubl
stos
pop
enter
cld
les
mov
jg
mov
pop
add
mov
fxch
and
mov
daa
push
cmp
daa
ljmp
lock
scas
add
sub
into
push
cmp
dec
jbe
pop
into
inc
fs
ja
mov
sbbl
testl
aam
and
adc
push
mov
stos
insl
push
insb
test
mov
nop
add
jle
inc
cmp
jmp
in
push
xor
mov
aad
jne
frstor
mov
aad
lods
push
das
mov
daa
mov
or
hlt
rolb
add
xor
dec
xor
mov
scas
out
insb
sbbb
sbb
les
mov
or
dec
pop
lcall
xor
in
ffree
jl
cmpsl
push
sub
mov
mov
shrl
and
dec
mov
stc
cmp
jns
out
lods
jae
rolb
loop
fwait
cmpsl
enter
mov
push
arpl
dec
lret
scas
into
dec
arpl
fs
mov
push
pusha
jb
testb
mov
xor
inc
repnz
inc
out
mov
inc
stos
sbb
add
ljmp
pop
dec
je
std
sub
cld
aam
stos
popf
dec
push
push
arpl
jle
add
xor
xor
jne
push
cltd
and
pop
outsl
add
rorb
daa
mov
cmpsl
mov
lods
mov
dec
mov
mov
testb
into
loope
xor
jp
in
call
loopne
cmpsb
push
rcl
jbe
fcmovu
xchg
sub
pop
out
and
mov
imul
sub
cmp
cmc
jge
inc
jmp
inc
pop
dec
daa
inc
push
mov
cmp
sbb
adc
ret
shrb
sub
dec
sbb
cld
push
jb
into
movsb
push
outsl
fs
sub
mov
loop
dec
loopne
popf
fwait
clc
shrb
pop
lds
cmp
add
adc
push
subl
mov
sub
sbb
push
xor
sbb
movsl
cmc
jp
and
lea
add
test
cmp
rolb
adc
cwtl
mov
out
add
faddp
xchg
push
sub
xor
jmp
jns
std
jg
xor
cmp
xchg
mov
mov
clc
inc
add
fbstp
xchg
ss
jne
test
stos
popa
js
pop
mov
out
lahf
pop
sbb
pusha
xor
pop
int
dec
jmp
xchg
xchg
cli
fwait
into
xchg
imull
and
das
imul
inc
flds
mov
jbe
mov
push
xchg
mov
and
out
test
jg
push
sbb
and
push
dec
repz
ficoms
add
loope
xchg
movsl
cmp
jecxz
mov
pop
mov
cmpsb
inc
xchg
jns
mov
enter
movsb
movsl
push
scas
add
daa
and
hlt
nop
nop
adc
dec
mov
xchg
xchg
out
js
adc
insb
icebp
mov
movsl
and
js
xchg
movsb
mov
stc
enter
in
dec
mov
dec
xchg
loop
and
lock
push
mov
xchg
and
pop
mov
xchg
pop
adc
and
mov
js
cltd
adc
or
stos
insl
mov
cmp
ja
in
jecxz
xchg
sub
std
into
call
loope
mov
outsb
mov
push
dec
ret
pop
jmp
fwait
xlat
mov
mov
jecxz
test
inc
sub
std
fwait
push
pop
cmp
dec
fdivrs
inc
pop
cmp
out
ucomiss
mov
dec
inc
pop
cmc
std
data16
adc
cmp
mov
cmpl
mov
jae
xchg
sub
aad
enter
dec
push
popf
dec
ret
lods
icebp
out
push
jge
or
in
lods
mov
pop
inc
mov
jecxz
xor
xor
movsl
outsl
clc
inc
jb
cmp
out
lods
cli
push
sbb
inc
or
lret
xlat
out
jno
sar
push
sub
inc
cmp
or
jo
mov
cli
bnd
and
sti
cmpsl
mov
icebp
and
pop
in
pusha
test
inc
xchg
inc
call
mov
scas
je
push
jg
pushf
pop
ljmp
inc
cmp
cwtl
dec
jge
add
xchg
push
xchg
lret
fstpt
push
dec
pop
inc
out
cmpsl
insb
int
inc
xchg
orb
andl
cmp
insb
clc
cltd
incl
jmp
mull
cli
dec
aaa
out
jno
push
mov
push
iret
in
jbe
cmc
cmp
lods
adc
fadds
addl
xor
mov
scas
pop
aam
test
jle
add
inc
in
fadd
inc
inc
push
jo
ror
adc
cmp
lret
jb
add
inc
inc
shl
jg
jno
stc
test
pop
mov
push
mov
fdivrl
cmpsb
popa
mov
push
xor
or
ds
push
loop
inc
jb
mov
xchg
fucomp
pop
xor
add
mov
inc
dec
push
lds
xchg
pusha
rcrl
les
gs
outsb
divb
dec
ja
mov
cmp
mov
jg
add
mov
mov
ret
in
mov
xchg
xlat
mov
scas
jno
mov
jl
pop
loope
sub
adcb
mov
jnp
mov
stos
leave
push
scas
ss
lods
repnz
pop
mov
sub
pop
cmp
test
jmp
xchg
outsl
hlt
dec
gs
ficompl
mov
pop
adc
sbb
addr16
push
pop
mov
es
imul
rcrl
inc
ss
test
sti
push
and
inc
push
pop
mov
sbb
pop
aas
ret
jae
jnp
scas
orb
and
fcomi
daa
test
xchg
mov
out
aam
scas
test
pop
dec
cmpsw
pusha
and
xor
jbe
cld
sbb
out
xor
cld
out
scas
stos
pop
xchg
push
scas
push
std
push
std
dec
stc
hlt
dec
sahf
jge
imul
in
outsl
mov
bnd
aam
lods
xchg
sbb
jp
stc
sbb
dec
ret
and
fcomi
sub
xchg
mov
add
fmull
jbe
in
add
jg
aas
xchg
lahf
negb
test
mov
test
repnz
jns
mov
aam
adc
in
imul
outsl
xor
push
mov
test
add
repz
nop
js
cmp
pop
ja
mov
mov
movsb
fdivr
lret
je
lea
cltd
test
std
decl
sbb
test
mov
xlat
inc
push
push
iret
mov
lret
or
mov
hlt
xchg
pop
out
xor
stos
mov
or
pop
inc
push
inc
pop
out
inc
idivb
push
mov
mov
aam
cltd
mov
sbb
movsb
aam
out
lds
mov
enter
add
xorb
andl
icebp
stc
xchg
cmp
dec
and
rolb
loop
mov
jnp,pn
je
in
cs
pop
mov
jp
cmpsb
sbb
cwtl
imul
hlt
jge
mov
pusha
mov
push
adcb
sbb
into
or
mov
sub
cmpsb
frstor
iret
mov
insl
push
xor
rcrb
mov
cli
pop
iret
hlt
lea
lock
dec
lahf
jnp
xchg
rcrb
lods
sahf
mov
jmp
sarb
dec
jne
mov
push
orb
dec
mov
pop
lcall
pusha
cmpsb
mov
jecxz
loope
add
cs
pusha
fs
jb
cwtl
sub
imul
mov
mov
adc
pop
pop
pop
sahf
mov
adc
cmp
fstps
arpl
ficoms
or
fwait
mov
scas
sti
mov
dec
dec
push
mov
out
jae
lret
mov
mov
jle
testl
fldenv
cltd
jae
jmp
jecxz
cwtl
sub
das
mov
adc
inc
jns
stos
cmp
pop
fsubrl
add
jno
into
insb
jnp
pop
mov
adc
movsl
inc
int
fwait
jmp
rcrl
enter
lods
pusha
dec
outsb
cmp
movl
outsb
xor
fsubrl
mov
pusha
adc
push
pop
push
pop
bound
xlat
mov
sub
dec
fucom
ja
leave
fistl
mov
pushf
repnz
loopne
scas
xchg
push
sbb
add
mov
cmp
mov
repnz
fidivrs
jmp
dec
pop
insl
aad
hlt
sbb
or
in
jecxz
and
subb
cmp
xchg
clc
cmp
push
gs
sub
arpl
loop
popf
push
pop
inc
lret
xchg
test
mov
ret
sbb
cltd
add
jae
inc
gs
pop
test
out
inc
fcoml
dec
leave
xor
pop
push
rclb
cmp
loop
or
cmp
xchg
ret
shll
int3
call
mov
jnp
ss
mov
dec
repnz
pop
stc
enter
cmpsb
inc
inc
mov
mov
dec
pop
mov
fcos
xor
pop
lods
mov
cmp
es
add
cs
clc
pop
movsb
mov
rorl
and
sbb
inc
pop
add
or
in
pop
xchg
jge
enter
rcl
cmp
sbb
jg
jbe
test
loope
test
and
and
xchg
ficoms
loope
enter
loope
filds
out
adc
movsb
add
arpl
push
xchg
pop
into
cmp
data16
push
add
les
daa
xlat
mov
jl
xchg
mov
les
push
rorb
ret
scas
lea
fdivs
mov
in
and
mov
sub
hlt
cmpsl
cwtl
dec
push
cs
and
cmp
nop
rcrb
jo
fisubrl
pop
jl
push
lret
add
xchg
jnp
xor
arpl
lods
push
sbb
sti
xchg
cwtl
xor
cmp
jne
push
fistps
cs
shll
loop
xor
inc
in
xor
pop
mov
scas
movd
arpl
idivb
rcll
idiv
pop
jl
lock
lahf
pop
pop
lea
mov
push
adc
sbb
inc
imul
pop
test
cmpsl
xor
pop
popf
ret
and
xorb
testb
adc
jns
mov
or
add
jbe
outsb
and
add
xchg
outsb
jo
adc
rolb
push
mov
dec
iret
mov
ret
std
mulb
xlat
adc
mov
push
adcl
in
adc
sbb
decl
sub
xor
mov
imul
dec
dec
call
daa
jo
add
repnz
xor
xchg
das
clc
cmp
jne
push
mov
mov
out
loop
sub
mov
dec
cmpsb
orl
repnz
sub
mov
sahf
loopne
cmp
and
inc
sub
sbb
test
fadds
mov
clc
and
jnp
in
es
sarl
xor
paddq
xchg
mov
mov
ss
ljmp
ret
mov
jmp
mov
cmp
rorl
mov
mov
in
in
out
adc
lods
dec
in
orl
jmp
imul
pop
mov
vcvttss2si
ds
out
test
adc
xlat
dec
or
mov
jns
sbb
jecxz
lahf
mov
jecxz
ja
gs
fs
gs
imul
mov
xor
std
stc
nop
sti
aam
js
push
cmpsb
xchg
imul
mov
jecxz
and
and
pop
out
cmp
mov
jo
adc
mov
imul
push
jl
into
mov
jo
jbe
jnp
push
xor
or
mov
popa
stos
fisubrs
add
cmpsl
push
xchg
mov
or
lret
cltd
push
popa
mov
aaa
mov
dec
jp
sbb
rcl
shl
outsl
push
lcall
cmp
push
in
dec
fcmove
sub
insb
ret
enter
pop
or
mov
pusha
sbb
push
mov
adc
push
xor
das
out
push
push
rol
test
inc
mov
fst
test
testb
inc
es
push
and
subb
inc
cmpsb
aas
sbb
arpl
xchg
fdivrs
icebp
rcrb
orl
jae
enter
data16
sahf
add
mov
fdivl
sub
iret
out
push
les
enter
fistl
jns
lock
int
push
xor
in
jmp
popf
and
lock
negb
bound
cmpsb
ds
push
push
outsb
cld
je
xchg
sub
lret
mov
cld
cs
sub
mov
divl
dec
or
rcrb
adc
and
repnz
lods
notl
pop
pop
xor
movsb
imul
push
push
in
xchg
int
fwait
adc
aad
out
jp
mov
cmp
js
rorl
mov
imul
icebp
cs
clc
xchg
adc
pop
push
int
test
stos
ffree
and
fisubrl
pop
rorb
or
std
insl
push
inc
adc
cmpsl
pushf
push
lcall
mov
adcb
adc
movsl
out
int3
inc
inc
loopne
ret
xchg
sub
jnp
in
bound
pop
mov
inc
jns
jg
cmp
les
filds
sti
xchg
dec
xchg
aaa
lcall
cmp
mov
xchg
push
dec
adc
fs
mov
cld
push
out
xlat
mov
daa
pop
dec
scas
xchg
xor
dec
mov
dec
jns
adc
out
pop
fdiv
xchg
or
outsb
scas
aas
lock
jecxz
outsb
leave
sahf
pop
pop
dec
outsb
mov
pop
inc
or
push
pop
push
add
sahf
outsl
shll
or
hlt
mov
jns
dec
stos
mov
pop
xlat
bound
repz
add
and
dec
or
and
loopne
dec
adc
xchg
out
js
loop
ja
movl
mov
orl
sub
cmpps
jne
push
aas
dec
add
cwtl
pop
xchg
int3
cmp
into
adc
cmp
aas
repz
mov
sbb
jmp
cs
subb
jo
cli
popf
cmpsl
cmc
shlb
out
iret
pop
imul
push
adc
pop
mov
sahf
insb
cmp
in
and
lret
push
jecxz
imul
or
push
cs
adc
bound
es
xor
inc
xor
test
pop
cmp
dec
ljmp
not
jmp
inc
cmc
movsl
inc
repz
mov
loope
pop
dec
mov
dec
ror
in
out
cld
pop
scas
pop
jb
sub
sbb
jl
mov
mov
aas
imul
xchg
adcb
or
ss
sti
out
mov
insb
fdivl
add
pop
inc
in
iret
enter
fcmovnu
sahf
addb
xchg
xorl
fldcw
clc
bound
fs
movsb
lods
pushf
fwait
jmp
int
jmp
jbe
mov
push
out
or
push
jae
jl
mov
pop
cs
imul
cli
rcrb
nop
xor
jne
and
adc
test
sbb
mov
mov
mov
loopne
pop
scas
push
cwtl
pop
loopne,pn
rcll
ds
sbb
repnz
sub
and
or
fcmovb
insb
stos
popa
mov
lret
sbb
sub
in
fmuls
lock
adcl
xor
pop
and
inc
stos
repz
add
push
fucom
stos
fbld
sbb
cmp
addr16
scas
xchg
std
rclb
paddq
sbb
add
shll
cmpsl
in
cmp
xchg
dec
push
jg
push
loopne
mov
aas
sub
pop
sub
add
cmp
jo
xor
sbb
lods
dec
stos
loope
adc
aas
nop
or
and
mov
js
fs
or
push
test
out
jb
xchg
mov
cmpb
fidivrl
lea
sahf
rcrl
imul
push
mov
int3
jbe
lods
inc
push
jmp
pop
jmp
sbb
push
rcll
testl
loop
dec
lds
hlt
imul
inc
dec
ljmp
in
jo
adc
fnstenv
inc
das
sub
mov
add
push
lods
loopne
sbb
cmc
pop
dec
adc
sbb
in
bound
jnp
int3
movsl
push
pop
add
sub
and
imul
mov
neg
out
cmp
repz
dec
jnp
and
pop
addb
and
push
jg
sar
add
in
adcb
jl
loope
out
jecxz
sub
mov
dec
ss
cli
sbb
gs
add
pop
dec
sub
cltd
pop
xchg
add
dec
out
adcb
add
enter
cmpsl
pop
mov
xchg
or
push
inc
js
inc
ret
in
in
mov
mov
scas
inc
inc
mov
cmpsb
test
jl
sbb
mov
mov
pop
in
push
lcall
enter
mov
loope
bound
xchg
popl
mov
inc
out
xor
inc
fildl
in
and
data16
out
adc
lea
lods
lock
enter
aad
ret
mov
mov
out
rcll
nop
and
lret
insb
int3
inc
adc
push
mov
adc
jbe
repnz
pop
popl
cmc
rorl
arpl
push
sub
push
loope
sub
ss
dec
sbb
mov
inc
mov
aaa
jae
sub
in
add
add
scas
jmp
xor
nop
iret
jnp
fs
mov
sar
xor
jp
sarl
dec
cmp
into
lcall
fst
dec
dec
mov
in
dec
jl
dec
dec
pop
lds
fbstp
mov
pushf
xchg
inc
push
lret
sub
mov
jecxz
jnp
push
imul
data16
mov
mov
ja
cmp
fcoml
pop
ds
movl
xor
push
xchg
add
enter
sti
sub
sub
dec
mov
fldl
jne
addb
sub
inc
in
and
ss
jb
dec
pop
or
inc
out
stc
mov
cmpl
adc
dec
sbb
xor
movsb
inc
lods
xlat
into
andb
cmp
push
testb
push
fsubrl
arpl
repnz
and
sbb
shll
jbe
cmp
dec
sarb
and
jbe
call
xor
jmp
cmpsb
add
or
nop
jne
mov
push
rolb
insl
push
cmpsl
add
cmp
pop
xchg
or
inc
adc
or
adc
in
jb
pop
repz
sub
push
mov
cmp
in
fnstcw
arpl
dec
jae
add
or
ret
ljmp
pop
cmpsl
xchg
mov
jmp
js
jle
mov
lahf
dec
outsb
pop
int
pusha
mov
dec
int
ror
shrl
mov
pusha
sub
inc
dec
loop
cmp
enter
push
testl
pop
add
sbb
jo
mov
pop
sub
cmpsb
mov
mov
mov
mov
jne
xchg
jge
testl
inc
pop
aam
or
cmp
adc
dec
out
insb
mov
scas
or
jno
icebp
outsb
adc
or
clc
decl
xor
or
into
and
test
mov
leave
push
sbb
add
test
push
sub
and
les
gs
xchg
push
insl
test
mov
loopne
pop
xor
dec
jge
lahf
dec
push
cmpsl
cmp
sahf
xorb
and
xor
mov
mov
mov
adc
cs
adc
orl
xor
push
cmp
lock
in
lds
ret
mov
sub
mov
jne
jmp
cmpsb
in
lods
push
sahf
pop
stc
fs
cmc
sbb
rcl
mov
fcmove
leave
mov
xchg
lea
pusha
arpl
das
xor
fldt
inc
int3
ljmp
mov
fst
push
push
inc
je
popf
xor
xor
or
or
sbb
fnstcw
stos
fcmove
notb
ss
inc
idivb
popa
xor
or
jae
es
xchg
out
and
cmc
lahf
sub
int3
inc
outsl
mov
scas
and
sbb
data16
aad
mov
sbb
aaa
push
sbb
and
mov
test
idiv
push
repz
mov
cmp
jae
movb
jnp
mull
push
lods
test
and
mov
daa
iret
fwait
or
cmp
jbe
push
adc
pop
xchg
xor
sbb
add
or
cmp
fwait
fildll
adc
xlat
jge
int3
pop
icebp
xchg
dec
mov
rcl
push
nop
inc
in
cmp
pusha
pop
pushf
aaa
mov
ret
cmp
sbb
subb
imul
in
es
idiv
mov
ss
and
pop
in
dec
jbe
scas
insl
mov
mov
jg
inc
rclb
cmp
xor
fists
sub
sub
clc
sub
stos
push
rolb
rcll
arpl
sbb
add
hlt
mov
test
int3
ds
mul
test
or
popa
incl
mov
jecxz
faddp
fdivs
or
test
dec
push
cwtl
int
jmp
xchg
arpl
add
cwtl
sbb
jecxz
jecxz
ret
push
mov
repz
xchg
cs
xchg
adc
inc
test
add
fcomip
ror
aad
jns
mov
sbb
bound
dec
bound
or
lods
movsb
in
rcrb
mov
pop
xor
fwait
cmpsb
fcmovb
negl
into
cwtl
or
push
rorl
test
lods
fcoms
and
loop
sub
dec
in
sbb
lahf
test
jo
repz
dec
jo
sbbl
loopne
aas
mov
dec
lds
out
stos
push
outsb
movsb
sub
rorl
pop
roll
mov
xchg
xor
leave
push
enter
and
jno
sub
or
sti
or
test
sub
add
call
movsb
pop
push
sbb
jle
clc
les
inc
icebp
loope
xchg
cmp
scas
pop
push
int
inc
mov
rcll
in
into
jmp
out
mov
arpl
cs
pushf
das
jle
fldl
test
pop
mov
cmp
pop
aaa
adc
push
and
mov
sub
gs
lods
in
inc
incl
inc
in
push
cltd
jecxz
jb
dec
pop
jnp
inc
mov
ret
xchg
sbb
cli
pop
mov
scas
mov
xchg
jmp
xchg
pop
hlt
movsl
and
std
push
or
mov
mov
jns
movsl
inc
neg
in
lock
or
bound
mov
movsl
mov
out
push
stos
aaa
dec
jg
stos
addr16
xchg
fcoms
jp
mov
arpl
mov
xor
aad
lret
sub
add
xor
xor
mov
jg
clc
call
lea
xchg
orl
mov
andl
xchg
scas
sbb
mov
sbb
frstor
cs
pusha
ljmp
cmp
out
and
push
xchg
push
jne
cli
iret
int3
pop
cld
cld
adc
pusha
fs
scas
pop
ljmp
shll
dec
mov
fists
dec
filds
mov
lret
mov
enter
cmp
fisttpl
inc
ja
add
daa
cmp
mov
mov
xor
daa
pop
mov
xor
push
in
cli
sub
xor
sub
push
xor
sbb
mov
popa
incl
adc
sub
mov
jg
aam
stc
mov
add
rcll
add
inc
cwtl
sub
in
int
pop
insb
pop
mov
mov
mov
lds
sahf
dec
dec
push
push
or
sbb
cmpsb
icebp
and
mov
dec
jp
pop
mov
or
xlat
fnstsw
inc
push
shrl
mov
pop
xchg
push
or
xor
ja
sub
jecxz
ficoms
int
mov
or
push
add
jbe
and
insl
xor
dec
popa
xlat
hlt
in
pusha
scas
xor
int
mov
pop
dec
aad
push
mov
xlat
push
scas
insb
fwait
and
aad
mov
cmp
sub
into
out
push
aas
icebp
xor
jnp
dec
xchg
pop
inc
fs
loop
or
lods
hlt
adc
inc
sahf
in
and
lahf
sbbl
sbb
cmp
jge
loop
adc
adc
sub
enter
outsl
stos
mov
pop
andb
jecxz
std
pop
subl
insb
mov
push
stos
mov
mov
inc
pop
and
xor
push
cmp
test
nop
push
add
jl
dec
inc
out
lret
xor
push
loope
pop
call
imul
inc
push
int3
mov
ljmp
mov
cmp
and
js
fs
jmp
dec
int
stos
shl
pop
lret
sub
movb
ror
mov
icebp
movsl
adc
std
sub
pop
sub
mov
inc
cmp
sahf
mov
addb
ficoml
inc
ret
je
fisttps
popa
mov
fucom
and
sbbl
sub
pop
ja
adc
or
decl
in
push
js
lods
mov
stc
inc
jns
cltd
add
lock
stos
add
jae
mov
pop
mov
test
adc
lods
pop
fstpt
xlat
mov
inc
test
and
xor
inc
in
cmp
push
iret
js
mov
adc
push
loope
fidivrl
adc
divl
or
loope
xlat
icebp
arpl
sahf
jns
jno
jns
outsb
push
pop
jb
sub
mov
xor
cwtl
jb
add
inc
pop
cld
aad
hlt
ficomps
in
outsl
dec
or
ficompl
xchg
ljmp
mov
movsb
popf
stc
test
xor
push
mov
ret
push
mov
and
cmc
js
dec
loope
mov
hlt
and
mov
mov
and
std
cmp
xchg
push
pop
dec
in
sbb
sub
add
pop
aam
popa
sti
and
jb
mov
xchg
scas
mov
and
adc
add
cmp
jno
dec
jnp
xchg
xor
into
test
adcl
mov
divl
sub
repz
push
jae
into
mov
adc
call
lcall
xor
icebp
jae
rcrl
mov
fldenv
in
xor
bound
movsb
sub
lahf
ret
sbb
pop
hlt
or
mov
or
pop
cmp
pop
push
lea
in
mov
in
ljmp
popl
test
lock
push
push
in
in
dec
inc
das
pushf
sub
in
repnz
loope
mov
fwait
push
cmp
ror
sbb
dec
add
sub
cwtl
enter
jne
cmpsb
jae
test
or
inc
mov
lock
push
mov
aam
mov
sahf
out
leave
mov
lods
stc
imull
add
xchg
or
inc
push
gs
mov
mov
pop
mov
push
icebp
sub
mov
xchg
push
adc
sub
add
xchg
pop
sub
push
mov
mov
insl
push
in
lods
popf
data16
outsb
ficoml
lcall
push
call
into
test
loopne
inc
repz
mov
push
and
jne
and
into
call
xchg
sbb
adc
or
in
in
adc
es
rorb
lret
scas
sub
and
imul
sub
in
and
pusha
xor
mov
lods
or
out
fisttpl
dec
call
cld
xor
sbb
or
sub
push
aas
popf
fildl
jne
jns
adc
in
clc
sbb
scas
or
inc
stc
jns
movsb
or
and
mov
push
lret
mov
jo
mov
pop
pop
in
fwait
sbb
jge
ljmp
inc
jo
aaa
daa
loope,pn
jecxz
dec
out
out
adc
sub
and
fisttpll
jbe
lret
ss
or
xchg
sbb
test
mov
sbb
ret
mov
scas
push
cmpsl
jo
aaa
sub
wrmsr
mov
xchg
pop
push
or
and
fdiv
or
insb
pop
out
cli
mov
mov
test
sub
pop
sbb
les
mov
movsb
adc
shll
mov
mov
xchg
repnz
pusha
scas
dec
xchg
jno
je
pop
out
test
mov
mov
lock
adc
adc
pop
inc
jmp
xchg
xchg
or
mov
mov
popf
jle
fsubs
cmpsb
inc
es
push
mov
lock
adc
mov
pop
pop
lods
stos
jl
mov
in
sbb
push
xchg
xlat
lret
push
pop
dec
loop
in
inc
push
mov
cmp
inc
jle
subl
imul
and
xchg
pop
sbb
cs
enter
sahf
pop
adc
iret
mov
pop
loope
out
aad
inc
lret
lcall
call
dec
gs
std
jp
push
shl
out
daa
das
cmp
out
sbb
mov
pushf
inc
in
push
jecxz
in
add
push
push
and
in
sbb
inc
dec
cmp
std
push
cmp
cmp
push
push
inc
into
push
je
insl
int3
icebp
loopne
fsts
cmpsl
scas
fldcw
flds
rorl
std
or
adc
push
cmp
push
lds
mov
std
inc
xlat
repnz
mov
sbb
mov
addr16
mov
stos
adc
aam
call
ret
out
repz
xchg
add
mov
jmp
jnp
sub
mov
push
scas
push
stos
sub
fst
adc
adc
mov
lods
and
and
and
push
fsub
mov
sub
or
push
add
movsb
mov
pop
mov
test
hlt
and
xchg
lods
dec
xlat
jne
loope
jl
sub
mov
je
repz
fcoms
push
xor
in
mov
lods
adc
imull
sbb
std
out
mov
inc
je
rcrl
mov
dec
and
fmul
in
loope
addr16
shl
ficoml
sbb
xchg
or
push
mov
sbb
ret
rolb
je
aam
cmpsl
ficoml
push
pushf
ret
ja
mov
insl
sahf
jg
pop
js
mulps
adc
pop
lea
cltd
sbb
add
dec
hlt
sub
loopne
mov
sbb
cmp
int3
shrl
xor
add
lods
aaa
sahf
inc
jle
das
mov
sbb
mov
dec
mov
fcomip
mov
outsb
xlat
cmpsl
cmpsl
mov
divb
cmp
loope
push
aad
sbb
dec
les
jo
push
shlb
mov
dec
pop
sbb
lahf
clc
aas
pop
sbb
pop
jl
push
inc
rcrb
push
shlb
cwtl
jge
adc
jmp
bound
lods
add
into
pop
mov
addb
dec
pop
fsubs
pop
jmp
ficompl
push
fildl
clc
daa
dec
cwtl
arpl
or
shll
mull
enter
jle
push
pop
sub
jle
mov
shl
mov
cltd
popf
inc
rol
fs
sub
mov
cs
fimuls
pop
dec
mov
cmpb
sub
fcmovnbe
fstl
in
cld
adc
add
ficoml
outsl
cmp
stos
pop
sarb
int3
jmp
scas
test
mov
adc
out
je
inc
jg
test
mov
stc
mov
and
int3
or
mov
insb
push
rolb
xor
cmc
mov
xchg
add
das
cmp
pop
xor
vcmpss
jae
mov
mov
adc
arpl
movsb
cmp
mov
jl
sub
sbb
adc
popa
inc
dec
mov
sub
xlat
push
fs
lret
cmpsl
sub
vcvtsi2sdl
loopne
jl
pop
shlb
sbb
outsb
xorb
add
jne
mov
popa
or
mov
loope
jecxz
clc
aaa
ss
lock
rcl
or
jnp
sub
ljmp
pop
dec
shlb
or
pop
rcr
repz
xor
inc
shll
sbb
jno
aam
jb
xlat
rorl
mov
fbld
mov
adc
pusha
pop
aad
rolb
fsub
sub
iret
test
punpckldq
jns
mov
aad
and
arpl
movsl
pop
jno
ss
test
bound
test
popa
les
adc
mov
pop
ja
xor
xchg
pop
push
jp
stos
gs
enter
test
scas
je
imul
lcall
lock
xchg
test
pusha
lods
jns
and
cmp
adc
add
mov
imull
sub
or
test
inc
fisttpl
sbb
fimuls
stos
xchg
sbb
jp
xchg
xchg
and
fildl
outsb
mov
inc
mov
jo,pn
dec
int3
mov
fadds
dec
sub
mov
out
mov
insl
mov
push
mov
fwait
ds
cmp
xor
das
or
fs
mov
push
int
outsl
test
push
fstl
mov
and
mov
stos
mov
and
jecxz
lahf
xor
mov
pop
and
mov
inc
lods
mov
sub
loopne
aam
bound
lcall
sbb
call
pop
mov
sbb
movsb
cmc
loopne
loope
xchg
pop
mov
shll
in
jecxz
mov
js
jge
aas
mov
or
movsl
or
and
divl
daa
inc
mov
jnp
jns
lcall
mov
ss
fld
ficompl
cmc
jge
lret
add
inc
sub
clc
jae
daa
in
mov
and
sahf
or
psrld
rolb
js
jecxz
es
mov
aaa
push
int
daa
and
sbb
mov
imul
adc
ja
inc
addr16
cmpsl
lea
push
push
or
add
jnp
lods
js
popa
sub
pop
dec
add
lock
cmp
loope
daa
into
inc
into
push
in
mov
rclb
lret
mov
out
pop
mov
mov
aam
adc
mov
cmp
fiaddl
xchg
int
pop
leave
sarb
or
sbb
aas
pop
mov
shlb
mov
mov
xchg
pop
pop
mov
pop
flds
lods
jmp
push
inc
ret
mov
sub
lcall
les
mov
mov
adc
fidivrs
cmp
into
rcrb
iret
scas
sub
or
inc
sahf
push
clc
lock
jno
gs
mov
fisttpll
mov
inc
out
mov
bound
ret
or
mov
jo
mov
jo
mov
pop
imul
aam
aad
pop
dec
es
pop
pusha
cmp
jge
add
mov
mov
push
and
pop
push
cwtl
clc
test
inc
pop
dec
out
push
jp
dec
and
add
inc
jbe
jnp
jae
gs
push
pop
popf
pushf
outsl
or
inc
test
xor
xor
push
in
iret
cltd
inc
mov
jo
lea
mov
cmp
hlt
sbb
jg
cmpsl
aam
lods
mov
into
idivl
shrb
lcall
push
insb
mov
push
addr16
movsl
or
pushl
and
clc
pop
sbb
fildll
mov
in
adcb
lods
dec
jg
fisttps
mov
xchg
out
add
aas
add
stos
sbb
out
gs
xchg
cltd
add
subb
inc
cmp
dec
jecxz
mov
test
jg
and
aas
in
xchg
mov
mov
and
inc
adc
xchg
sub
aam
mov
aaa
or
or
sti
scas
adc
daa
push
in
mov
jmp
in
mov
jo
arpl
lahf
mov
jb
int
int
rclb
int
xchg
xor
mov
insb
cmpl
sub
dec
inc
cltd
enter
es
lret
loop
daa
cld
mov
or
push
shrb
or
cmp
and
add
jle
xor
pop
xlat
imul
pushf
mov
rdpmc
push
xor
dec
scas
jmp
add
enter
mov
ds
clc
lret
dec
mov
scas
inc
jge
lcall
popf
lods
or
push
and
sti
cmp
aaa
scas
mov
mov
jne
push
cltd
push
test
mov
sub
sub
mov
repz
pop
scas
call
add
dec
mov
xlat
mov
fsubrs
cwtl
int
mov
jp
notl
cmp
loopne
dec
movsb
jl
xchg
gs
outsb
mov
lds
roll
repnz
dec
mov
iret
push
cmc
cwtl
mulb
or
imul
adc
dec
mov
loope
aaa
pop
fadds
pop
sbb
inc
bound
test
lds
popa
out
cltd
das
xor
mov
jo
sbb
sub
test
mov
jle
jns
jbe
movsb
jl
enter
rolb
cld
hlt
in
adc
inc
adc
addr16
ret
into
pop
stos
cmpl
movsb
fdivrl
loope
mov
aaa
movsb
dec
pushf
test
jno
mov
ja
sahf
in
dec
repnz
pop
or
sbb
fwait
inc
addl
mov
clc
sub
nop
xor
xor
movsl
push
cwtl
repnz
pop
in
fidivl
pusha
jmp
roll
push
mov
sti
cld
and
push
not
push
out
cmpsl
mov
xor
mov
push
cmc
sub
sub
and
mov
inc
adc
xor
fistpl
push
test
js
cltd
mov
std
mov
xchg
mov
xchg
adc
xchg
mov
stos
pop
dec
fcmovu
jae
aas
add
push
ret
fildl
inc
mov
jmp
insl
jo
inc
shl
cmp
aas
js
psrlw
jno
pop
loope
mov
out
sbbb
iret
or
repz
mov
sub
hlt
sbb
sbb
int
mov
sbb
fildll
fimull
loope
xor
loope
and
out
imul
inc
lods
mov
dec
jle
mov
push
and
fdivl
scas
xor
dec
std
push
dec
xchg
add
test
mov
into
stos
pop
mov
push
mov
inc
mov
mov
dec
das
mov
cmp
pop
mov
xchg
sti
enter
mov
es
scas
ljmp
nop
getsec
test
jo
ret
or
outsl
rorl
mov
int3
addr16
repnz
mov
adc
and
push
sub
jmp
jl
ret
ljmp
jl
jns
cmp
adc
inc
aas
incl
jbe
pop
enter
dec
mov
cmp
jg
lret
mov
mov
out
mov
inc
cwtl
pop
mov
das
inc
bound
mov
add
loopne
je
add
adcl
xchg
mov
pop
pop
adc
les
test
pop
shr
pop
xchg
or
movsb
shll
pop
aas
movsb
shr
push
cltd
mov
push
adc
mov
sbb
loope
mov
fsts
dec
mov
and
je
sti
rorb
jne
adc
pop
xor
insl
and
fsubrs
jp
cs
lds
icebp
test
or
dec
push
clc
push
dec
push
add
ds
pusha
xchg
pop
push
test
ljmp
push
xchg
xor
inc
cltd
sbbb
shr
repz
jo
xchg
add
dec
cmp
cwtl
fwait
cmp
mov
dec
xchg
xchg
mov
pop
xor
push
mov
adc
xchg
sub
shrl
xchg
push
call
insl
mov
subb
lea
pusha
pop
stc
mov
mov
es
mov
stc
push
sahf
dec
mov
aad
cmp
ret
gs
and
push
enter
sub
mull
sarl
cli
out
ds
inc
sahf
les
scas
movsb
pop
inc
adc
and
mov
cmp
pop
jbe
pop
pushf
out
sub
pavgw
mov
fxtract
daa
mov
or
outsb
cmp
shrl
jg
enter
es
sub
lods
lahf
jae
jg
mov
jmp
xor
mov
lods
or
xor
inc
dec
in
mov
xchg
pop
jb
das
iret
repz
or
adc
mov
dec
aas
mov
js
mov
rclb
jg
push
push
stos
mov
nop
jge
test
fisttpll
cmp
int3
stos
cmc
or
dec
pop
mov
inc
cld
xchg
ja
sbb
mov
mov
adc
or
add
rorb
mov
push
jne
inc
lods
or
jno
push
dec
fldcw
push
lea
add
jo
sarl
stos
in
std
rorl
jb
mov
pusha
push
sub
mov
sub
mov
cmp
sbb
fsubrl
add
cmp
in
mov
push
inc
xchg
xor
xchg
sbb
push
movsb
paddq
popa
xchg
insb
push
js
sub
xchg
or
in
fdivp
lods
dec
jne
add
pop
sahf
xchg
ficoml
sub
sbb
mov
ss
repz
inc
nop
dec
fld
pop
pop
int3
fs
xlat
xchg
xchg
mov
outsl
icebp
cmp
lcall
pop
movsb
shrl
mov
lcall
cmp
cmpsl
pop
cli
imul
rep
adcl
jb
sbb
mov
pop
daa
popf
push
movsb
xlat
or
cmp
data16
jecxz
push
fwait
test
and
fistps
lea
pop
into
jne
insl
enter
js
ds
or
mov
xchg
mov
sub
jg
dec
pop
push
cld
scas
adc
pop
inc
mov
mov
mov
xor
mov
and
movl
add
fbld
orb
and
sub
cmp
cltd
sub
push
fisubl
das
jmp
fldt
dec
pop
pop
icebp
ret
push
call
sahf
test
push
js
cmc
and
daa
aas
pop
cmp
sti
mov
pushf
and
imul
sbb
loop
scas
test
testb
fisubl
repz
cmpsl
sti
push
aam
pop
imul
fistl
cmp
loopne
mov
fbstp
cltd
lret
inc
adc
push
mov
mov
enter
notw
mov
lods
xchg
push
cmp
dec
ret
push
cmp
xchg
jno
adc
xor
adcb
mov
gs
lock
add
and
cmc
bound
pop
in
sub
cmp
jbe
mov
dec
sbb
cwtl
fcoms
inc
int3
test
xchg
clc
sub
ja
pop
mov
les
int
inc
pop
dec
xor
loopne
jns
int
idivl
mov
xor
mov
and
or
dec
call
inc
cwtl
sbb
icebp
fnstsw
nop
or
mov
mov
ja
test
and
into
outsb
push
jg
cmpsl
lods
sarl
push
and
pop
and
add
call
insb
dec
add
std
cmp
aad
std
inc
addr16
in
stos
inc
mov
outsb
out
insb
addb
pop
ds
shr
testb
dec
pop
testl
mov
lds
or
test
fstps
rorl
jo
cmpsb
lods
dec
dec
xor
lock
jb
push
mov
leave
shll
out
pop
cmp
fidivrs
adc
fidivrs
cmp
pop
mov
std
add
mov
and
pop
sub
test
fcomps
mov
out
cmp
out
arpl
mov
and
imul
cmp
and
mov
mov
mov
aad
fiadds
jae
bsr
stos
cmpsl
mov
lock
les
pop
sbb
cmc
add
cli
push
push
jo
and
cmp
mov
dec
lds
or
mov
pop
push
push
or
jno
ret
push
loop
inc
lahf
pop
fs
add
rorb
push
dec
cmpsb
sbb
in
and
pop
xchg
dec
bound
ds
xchg
mov
sub
out
push
inc
jg
mov
mov
fs
sub
sbb
xor
sti
mov
pop
sbb
leave
inc
fcomp
jmp
outsb
outsl
lds
push
jge
imulb
adc
aas
es
popf
jp
out
mov
cmpsb
sub
xchg
and
xchg
sbb
push
lcall
mov
add
adc
mov
adc
jae
fisttps
or
jne
dec
daa
pop
int3
push
lock
jle
pop
push
jno
pop
add
jae
push
fidivl
or
mov
lahf
cmp
cmpsl
pop
dec
and
ret
or
push
sarb
add
jbe
mov
cmpsl
jl
or
jnp
lret
inc
fcmovnu
in
jne
out
push
test
jae
lcall
inc
jbe
jnp
sbb
xchg
ss
out
test
and
out
mov
cmp
adc
lret
dec
test
xor
fldt
test
xchg
xlat
in
lock
in
repnz
inc
mov
xchg
addl
into
fwait
lods
pop
cmpsb
ja
rcl
dec
fwait
or
xor
cmp
loopne
jge
repnz
das
sub
mov
mov
movsl
mov
mov
loop
mov
pop
lock
pop
mov
add
push
jg
pop
xor
cmpsb
inc
movsl
dec
test
ficompl
addr16
sbb
inc
xchg
jbe
ficompl
pusha
aas
xchg
jl
mov
dec
pop
rol
mov
scas
js
imul
daa
inc
enter
mov
sbb
fwait
push
js
fmull
fcmovnu
dec
or
or
scas
xorb
popf
adc
notb
test
incl
popa
push
nop
or
cmp
jg
scas
or
jmp
sub
pop
push
popf
xchg
popf
arpl
mov
xor
leave
inc
adc
sub
lds
popa
aas
xchg
out
cmp
inc
lret
ror
jne
cmp
insb
sub
pushf
jmp
xchg
jno
xlat
inc
inc
xchg
loop
mov
repz
cmpsl
push
nop
cmp
mov
fldt
jecxz
xchg
jnp
push
push
push
xchg
or
shll
mov
pop
sbb
and
sbb
mov
rol
stc
pop
pop
rcr
test
lods
shl
aam
stos
cmp
inc
push
sub
push
adc
fildl
and
addr16
push
lcall
cmpsb
stos
aas
inc
dec
pop
pop
cli
arpl
jge
xchg
push
xchg
fwait
and
sti
mov
divb
sti
bound
sbb
mov
jl
movsl
js
sub
cld
pop
std
inc
out
sub
jae
adc
inc
shr
jae
xor
outsb
lahf
jp
inc
push
cmpsl
jnp
out
ss
mov
push
int
shrl
add
jno
data16
ffree
lcall
aaa
dec
xchg
cmp
or
andb
or
rorl
cmp
push
cmp
call
outsb
mov
fimuls
adc
push
pop
popf
scas
into
lcall
mov
jmp
inc
adc
ret
das
or
lret
leave
cmp
dec
andb
lds
iret
inc
adc
inc
cmpsb
mov
jnp
mov
mov
sub
xchg
jae
mov
lahf
adc
test
xchg
pushf
loope
test
fwait
and
dec
daa
adc
jge
subl
xchg
jno
sbbb
cmc
cld
pop
jbe
jle
insb
stos
adcl
pop
inc
pop
mov
jno
dec
ret
stc
in
mov
xchg
cmp
push
int
cltd
rorb
pop
push
mov
xor
gs
outsl
xchg
jecxz
xchg
testl
mov
xchg
cmp
or
cmp
test
into
fcoml
push
in
lods
test
push
cli
out
sbb
leave
dec
lods
xor
out
pop
aad
or
nop
sbb
dec
out
stos
imul
sbb
mov
lret
mov
push
inc
test
sbb
cmp
dec
sbb
js
mov
xchg
mov
push
test
dec
loop
negb
outsl
popa
or
sub
ljmp
jp
sbb
and
mov
pop
fs
inc
dec
adc
sbb
sub
lds
loopne
test
mov
test
inc
rcrl
ss
mov
jne
movsl
aad
rcrl
loop
ret
mov
add
mov
pop
pusha
xchg
sbb
add
push
dec
mov
aaa
rorb
or
inc
mov
ret
loopne
mov
out
push
jbe
bound
das
push
lahf
add
jb
xchg
dec
cmpsl
stos
fdiv
xchg
jne
add
repz
adc
jl
lds
fwait
pop
lcall
lret
fwait
and
mov
rol
fldcw
xor
or
pop
gs
addb
movsb
fildll
and
push
test
pusha
cmp
mov
pop
scas
mov
es
stos
adc
sbb
icebp
add
add
test
cmpsl
mov
pop
pop
fwait
push
or
adc
sub
mov
jno
mov
xchg
inc
outsl
cmp
dec
jae
mov
mov
jl
sti
cmpb
or
std
jecxz
adc
lock
rorb
sub
jns
pop
mov
rcrb
adc
out
movsb
insb
jnp
inc
and
aas
adc
test
push
mov
insl
add
pop
jno
test
adc
popa
movb
add
movsl
jecxz
and
loope
mov
sub
dec
push
cmp
je
ret
jne
inc
lret
pusha
add
fbld
daa
and
pop
or
rolb
push
mov
push
mov
repz
fnstcw
xor
fildll
jl
mov
out
je
es
mov
jb
xchg
mov
xor
xchg
jno
sbb
call
sbb
popf
cmc
lret
insb
imull
push
movsb
add
inc
xor
adc
rcrl
cmp
sub
ljmp
mov
mov
lea
cmp
je
sbb
insb
push
fiadds
test
sbb
cmpsl
data16
lret
lahf
and
in
enter
lcall
mov
ret
jl
leave
push
fwait
in
ret
jns
pop
or
ret
sbb
sub
xchg
imul
insb
shrd
mov
ror
dec
inc
lret
pop
xchg
fistpll
xchg
xchg
pop
xchg
push
lods
sbbb
imul
add
mov
pop
les
das
imul
pop
sbb
scas
jecxz
mov
mov
cs
setb
sbb
rorl
adc
jecxz
and
inc
sub
int
aaa
mov
sub
fimuls
mov
lahf
int3
add
js
inc
pop
cmp
divb
jno
in
cli
loope
mov
jl
pushl
pop
jg
mov
clc
mov
cltd
jl
call
pop
mov
ficoml
xchg
and
sub
adc
testb
lret
push
pop
lock
xchg
mov
shll
lcall
in
push
sahf
jmp
adc
pop
addr16
test
out
mov
add
and
mov
mov
stos
aam
mov
dec
gs
mov
mov
mov
int
in
dec
push
ret
jmp
xor
mov
imul
les
cmp
les
add
aaa
mov
mov
mov
xor
add
lds
imul
mov
adc
push
mov
icebp
ret
leave
ret
popf
sbb
xor
jns
aas
mul
pop
dec
or
lahf
mov
mov
adc
sbb
inc
mov
jp
ljmp
decb
rorb
cmp
cmpl
cmp
mov
sbb
fisttpll
aam
pop
sbbl
scas
mov
out
in
insb
repz
xchg
cmp
jecxz
test
cltd
cmp
ss
pop
or
jbe
mov
ror
sub
add
or
imul
jmp
push
repnz
stos
dec
js
jns
cmp
sbb
ds
clc
or
ret
cli
push
loopne
jecxz
xorb
push
mov
xor
test
cmp
int
dec
pop
pusha
pop
shl
sbb
rcrl
lret
clc
xlat
add
cs
test
sbb
movsb
cwtl
or
push
into
push
cmp
mov
cmpsb
mov
add
jmp
jp
lret
adc
xchg
xchg
xchg
adcb
dec
lea
movsl
test
loopne
mov
rcrb
sub
shrb
xor
push
sbb
push
xchg
adc
or
lock
mov
push
mov
fcoms
or
push
and
or
mov
sbb
push
mov
xchg
xchg
mov
repz
aas
loop
sbb
gs
movsl
pop
xchg
nop
jmp
mov
pop
or
sbb
daa
shrb
adc
cmp
sbb
mov
pop
cmp
mov
inc
dec
xadd
push
int
sub
fistpl
mov
push
imul
cmpl
mov
cmc
mov
xchg
arpl
mov
fs
dec
shrb
lods
push
ffree
test
daa
push
fwait
cli
and
loopne
lret
lods
xor
pop
inc
mov
icebp
fiadds
dec
sarl
roll
mov
inc
mov
adc
ja
push
and
push
pop
rorl
jle
dec
push
adc
xor
mov
push
icebp
mov
fstp
mov
ja
jl
jb
orl
adc
inc
bound
xchg
sub
or
sbb
mov
sbb
outsl
adc
lods
inc
push
mov
data16
push
scas
inc
insb
stos
inc
es
cmp
cmp
push
adc
pop
aaa
jl
fildll
xor
mov
int
push
jns
inc
ret
xor
lea
lods
xor
in
jmp
imul
das
outsl
inc
sbb
sbb
aad
add
aas
or
dec
jb
rclb
inc
test
jmp
pop
xor
jbe
pusha
sbbb
out
je
in
or
and
inc
mov
cmp
scas
and
cmp
sbb
push
xor
xor
sub
jns
mov
inc
popl
insb
mov
pop
push
fisttps
mov
push
adc
int3
pop
cmp
or
bnd
repz
aad
push
dec
cmp
add
adc
bound
les
adc
jno
sbb
cmp
fmull
sarl
lea
or
aad
inc
in
sbb
pop
xor
test
adc
shlb
test
sub
mov
repz
xlat
inc
mov
daa
addl
sub
daa
into
xchg
sbb
cmpsb
outsl
jecxz
mov
stos
enter
push
imul
into
inc
insb
cltd
adc
lret
cmp
mov
and
push
lea
repnz
insl
jbe
push
pop
out
cmp
enter
jno
repz
mov
xchg
and
sub
sar
in
lret
stos
std
in
mov
mov
test
mov
push
ljmp
pop
dec
mov
in
rclb
out
fs
aad
or
mov
shlb
mov
fcomps
jecxz
mov
fidivrs
inc
mov
and
pop
and
test
pop
dec
icebp
stos
mov
pop
push
fidivrl
sbb
loopne
push
adc
sub
sub
inc
sarb
sub
fmuls
or
sti
lcall
cld
inc
push
inc
shlb
pusha
movsb
test
xchg
scas
adc
add
adc
repz
sar
mov
mov
test
push
mov
aas
ss
hlt
or
cmp
out
pop
lds
test
lret
cmovb
int
fwait
jo
dec
adc
pop
das
es
pop
or
mov
test
cs
mov
hlt
jmp
imul
cwtl
test
jecxz
sbbb
mov
fisttpll
adc
sbb
sbb
cmp
dec
jae
in
mov
rol
lcall
sbb
jno
popf
movsl
and
fidivl
lds
fbstp
inc
out
cmp
js
fimull
in
movsb
mov
or
loopne
push
dec
inc
mov
xlat
mov
test
gs
cmc
pop
ret
fisubs
lds
fs
iret
cmpsb
out
xor
fsubrs
cwtl
stos
jge
cmp
or
rcrl
sbb
cmp
and
inc
mov
shll
fisubl
jecxz
push
dec
loop
out
cmpsl
jmp
dec
aam
push
mov
test
add
enter
xlat
scas
push
cwtl
push
mov
xor
mov
cltd
pop
shl
loop
pushl
push
mov
adc
out
and
insb
or
or
xlat
clc
sbb
lcall
sti
adc
pop
xor
stos
sbb
jg
lcall
add
pushf
mov
ja
xchg
popf
xchg
mov
aaa
mov
sub
pusha
and
push
push
mov
pusha
mov
in
arpl
pop
sub
sbb
mov
push
push
cmpsb
mov
in
and
movl
mov
add
arpl
std
adc
dec
push
sub
push
and
sub
lds
sbb
std
es
mov
push
repz
jcxz
enter
xchg
aam
in
movsb
dec
fcmovbe
cltd
xchg
jmp
mov
push
bound
pop
mov
movsw
mov
ja
push
hlt
pushf
insb
and
sub
and
popf
je
ja
orb
shl
and
divl
push
or
mov
mov
pop
lods
aas
and
ljmp
mov
ficoml
or
xchg
mov
and
loope
lods
movsb
xchg
mov
sub
sub
xor
xor
add
pop
jg
das
or
mov
sub
iret
mov
enter
mov
insl
outsb
mov
push
push
cmc
cwtl
cmp
jbe
lds
cltd
data16
outsl
int3
add
inc
mov
sahf
lods
sub
push
jbe
xor
sub
ja
cmpsl
in
push
xor
mov
jle
movsl
mov
cmc
loope
or
fidivrl
jle
shll
jp
xchg
lahf
jge
jbe
arpl
jecxz
lcall
ds
repnz
mov
xchg
movsb
mov
and
pop
push
loopne
rclb
xchg
push
cmp
outsb
jno
push
pop
aad
lods
push
jne
ficompl
cli
mov
sti
pop
out
in
enter
mov
jecxz
orb
mov
cmpsb
int
cmp
incb
mov
mov
in
imul
mov
sub
mov
popa
mov
js
out
pusha
add
into
fsubl
fstl
mov
cli
cltd
mov
aas
movsl
xchg
mov
es
imul
shlb
inc
hlt
or
mov
xchg
push
cvtpi2ps
sub
jecxz
jmp
xor
mov
push
dec
frstor
test
jb
insl
xor
rol
dec
ss
ljmp
or
js
repnz
cmp
repz
out
js
or
and
loopne
dec
xchg
xchg
shlb
cmp
dec
aad
cmpsl
in
xchg
daa
das
and
bound
inc
loop
fwait
iret
nop
test
dec
clc
jl
fnstenv
loopne
push
jmp
cmpl
cwtl
xchg
repnz
xor
repz
push
sub
nop
push
lods
pushf
cmpsl
movsl
sahf
and
or
out
movsb
jae
mov
push
inc
enter
fwait
dec
and
sub
sbb
repz
cli
mov
xchg
lahf
mov
fsubrp
and
ja
or
sub
pop
test
sub
ds
push
fdivrl
scas
xor
rcll
les
or
sbb
scas
add
inc
mov
cmp
push
sbb
jb
mov
fdivr
sbb
shlb
sbb
movsl
mov
dec
xchg
cmpsl
scas
in
je
popa
das
pop
xor
jp
cmp
xor
in
lahf
into
push
jbe
inc
cwtl
scas
ret
pushf
adc
lds
cmp
sub
fmulp
xchg
out
dec
movsb
xchg
push
xchg
fs
repnz
bound
and
pop
pushf
mov
popf
outsb
out
les
adc
pop
ss
outsb
divps
dec
mov
pop
pop
rolb
mov
dec
test
shrl
xchg
insb
pop
mov
pop
out
jnp
xchg
push
lcall
jmp
bound
out
mov
out
cmc
out
cltd
pushf
arpl
int
out
mov
in
or
push
jae
push
cs
mov
test
add
cmp
ljmp
js
cltd
push
cmpb
aas
xlat
inc
cld
cmp
and
xchg
add
lret
gs
xor
mov
xchg
stc
sahf
or
adc
int
rorl
pop
fwait
dec
aas
jo
jp
call
mov
inc
pop
mov
scas
cmp
push
lcall
ds
mov
pop
mov
xor
sub
push
int3
sbb
push
sub
jmp
icebp
xchg
cmpsb
leave
dec
outsb
xor
scas
sbb
mov
push
arpl
xchg
inc
adc
shl
pop
dec
cwtl
jle
nop
je
jno
add
mov
xchg
sub
andl
dec
jns
jo
andl
lret
hlt
push
jge
int
xchg
cld
gs
rcrl
mov
xor
leave
subb
scas
sbb
mov
fcomps
jle
jecxz
adc
push
loope
iret
sbb
fwait
xor
and
xchg
pop
clc
add
bound
ljmp
add
sahf
pop
std
sbb
bound
into
xor
sub
xchg
push
lds
loop
inc
mov
mov
adc
cmp
mov
outsl
xor
push
hlt
sbb
or
aad
out
mov
or
in
roll
push
js
mov
sarb
sbb
lea
or
aad
adc
dec
flds
lods
sub
ret
jo
xchg
mov
add
sub
sub
adcl
and
inc
je
dec
sahf
xchg
dec
push
push
xchg
push
ds
inc
jp
lret
cli
lea
jo
ljmp
push
xlat
jge
gs
and
push
cmc
sub
pop
sub
fcoms
cmp
cmp
fnstsw
lahf
sub
scas
dec
sti
dec
leave
xchg
sbb
xor
aad
mov
add
cltd
ljmp
jmp
mov
in
movsl
std
dec
into
jno
xchg
js
pop
adcb
xor
loopne
mov
add
and
xchg
sub
les
cmpl
cli
dec
xchg
test
inc
cmp
adc
and
mov
inc
mov
lahf
mov
sub
repz
mov
mov
jge
repnz
jbe
stc
sbb
sub
cld
jg
sbb
xor
mov
fldl
or
inc
insb
popf
ret
push
iret
in
int
dec
loop
lock
packsswb
inc
stc
dec
fcomip
jmp
repz
push
or
mov
and
jnp
push
jmp
out
int3
mov
inc
scas
inc
and
or
jae
cmp
idivb
jmp
pop
adc
xor
outsb
rcll
fmull
push
pop
aaa
repz
pop
xchg
and
fstpt
and
cmpsb
pop
sub
fsubrs
inc
pop
sub
push
repnz
cwtl
es
or
scas
out
push
pusha
dec
cmc
mov
adc
pushf
loopne
pop
decl
lods
push
pop
inc
xchg
sub
sti
or
ds
fidivrs
cmpsl
addb
xor
xchg
pop
mov
mov
xchg
and
push
sahf
out
imul
popf
cmp
loopne
out
dec
or
dec
xor
mov
push
sbb
imul
push
popa
test
js
scas
sub
adc
add
cs
das
sbb
fidivl
mov
push
dec
pop
mov
jecxz
xchg
xor
cmc
clc
jne
pushf
pop
sub
xor
cmp
pusha
out
dec
jmp
sub
jecxz
ficoms
mov
push
arpl
cmpsl
scas
dec
xchg
and
cmp
mov
dec
repz
scas
and
pop
aaa
inc
mov
int
jo
ds
ret
in
mov
adc
popa
adc
push
xor
and
adc
dec
nop
sub
or
push
insb
test
add
fcmove
mov
lods
dec
sbb
cld
cmpsb
rorl
push
lcall
rcrb
push
mov
sub
popf
sub
adc
jae
rorb
add
jo
add
jp
mov
out
out
cmp
fdivl
in
ja
xchg
in
adc
mov
xor
scas
jmp
add
or
daa
pop
adc
sbb
lret
pop
push
jmp
int
stc
repnz
pop
outsb
pop
jge
popa
in
fwait
dec
xor
popf
arpl
add
int3
ds
lods
test
cltd
lods
xchg
jp
or
dec
das
mov
jp
mov
jo
or
push
jg
sbb
dec
cmp
js
sub
adc
out
jns
jne
push
rorl
sbb
sub
out
xchg
jecxz
push
or
outsl
adc
or
and
and
adc
jb
push
mov
jmp
imul
sarl
mov
lods
pop
jle
xchg
outsb
jge
or
mov
sti
xor
jp
shll
lcall
add
add
jne
cmp
push
mov
je
test
or
mov
sbb
fwait
arpl
ds
loope
mov
dec
outsb
test
lock
xor
divl
ss
cmp
or
outsl
fcompl
out
outsb
add
test
sbbb
insl
and
jecxz
cmp
pop
stc
mov
incl
psubsb
jne
push
xor
loope
sbb
call
or
mov
jmp
xchg
ja
sbb
jmp
lock
rclb
nop
xchg
movsb
or
test
jge
sti
sbb
mov
inc
cmpsb
pop
cltd
mov
bts
das
icebp
inc
sarb
xchg
mov
daa
jns
pop
cltd
es
sbbb
ljmp
xchg
leave
push
int
fwait
insb
insb
shrb
sahf
pushf
and
sub
imul
imull
pop
sub
std
inc
sar
nop
pop
jmp
dec
lahf
rclb
xor
rorl
sub
mov
dec
stos
fldcw
lock
ret
test
test
mov
in
adc
in
pop
mov
dec
cmpsb
movsb
fcmove
cmp
sbb
push
in
jmp
das
cmpsl
into
arpl
es
xchg
lea
xchg
pop
iret
out
push
faddp
ljmp
mov
bound
nop
stos
js
pop
sti
pop
clc
mov
pop
pop
out
adc
movsl
jl
sub
push
xchg
jnp
or
mov
mov
jns
popw
imul
pusha
push
out
ljmp
sub
and
sbb
in
insb
cmp
jno
int
jnp
pushf
adc
or
aas
cmp
sbb
rorl
inc
jbe
or
test
mov
in
add
jns
push
or
lret
hlt
into
ror
outsb
push
mov
addr16
cwtl
sbb
scas
push
mov
sub
cmc
mov
fucom
sub
mov
scas
test
add
sbb
mov
or
in
rcr
xor
xor
adc
int3
xor
jbe
push
push
mov
xchg
cmpl
mov
std
and
pop
cmp
dec
push
pop
hlt
jp
mov
shlb
mov
xchg
imull
xchg
andb
jge
jbe
or
cwtl
fadds
cwtl
cmp
aaa
cmp
xorb
pop
int
sahf
fwait
sub
rolb
push
fildll
rorl
inc
mov
lcall
pusha
mov
sub
mov
sub
pusha
stos
xor
xchg
ror
cmpsl
dec
cmp
out
mov
mov
sub
arpl
andb
data16
and
adc
adc
pop
add
jg
mov
dec
sbb
imul
xchg
inc
cmpsb
or
push
dec
inc
test
dec
jp
mov
sarb
xchg
in
or
test
sbb
dec
mov
push
adc
xor
sar
sbb
xchg
fcomi
sbb
sbb
push
push
push
mov
jb
pmulhuw
pop
ja
sbb
lds
imull
xchg
cmc
outsl
test
xchg
cli
jne
cltd
cmpsl
fwait
xchg
add
pusha
mov
das
lods
jbe
es
insl
nop
gs
rorb
add
test
fsub
repnz
in
sahf
aad
fmul
pop
cld
imul
sub
jle
push
shl
mov
in
je
xor
push
dec
xchg
inc
imul
dec
fistps
in
or
rcrb
popa
push
repnz
mov
out
mov
out
fcomp
dec
rorl
mov
loope
loopne
shrb
std
jmp
jae
fcomps
pop
push
ficoms
mov
mov
and
inc
jne
inc
push
in
xor
xchg
mov
mov
pop
mov
adc
roll
jl
xor
test
scas
mov
add
scas
repnz
push
adc
lcall
imul
mov
scas
lea
fldt
push
test
cmp
pop
rcr
test
stos
push
push
lock
shlb
test
push
ja
inc
pop
lods
test
pop
mull
scas
or
mov
insb
jmp
xorb
lret
clc
lock
jmp
fldt
inc
push
repz
and
pop
data16
cmp
cmp
or
sbb
in
and
pop
push
sub
sbb
adcl
rcrb
xchg
jecxz
mov
popf
sti
mov
sbb
aad
stc
add
mov
pop
std
or
mov
or
aaa
jp
not
and
fdivs
mov
sub
push
xor
xchg
mov
shrl
lahf
adc
push
lret
pop
shll
mov
lret
xchg
imul
cmp
lds
jp
xlat
in
sbb
mov
aam
jbe
mov
fisubrs
or
push
les
push
push
scas
xchg
push
cmp
jno
jae
movsb
icebp
inc
dec
lret
xchg
cmpsl
or
and
mov
mov
pop
in
adc
sub
jmp
mov
fdivrs
jbe,pn
adc
and
repnz
jnp
adc
movsb
xchg
test
xor
je
les
push
mov
cmc
pop
add
or
insl
test
ret
leave
push
dec
cmp
jp
cmp
daa
jns
push
push
orb
mov
ret
mov
mov
xchg
fidivrl
lock
test
and
aaa
popa
sub
sbb
shrb
mov
dec
scas
ja
call
scas
or
int
pop
jae
mov
out
xchg
add
arpl
sub
mov
in
js
faddl
push
xchg
call
dec
cmp
mov
add
mov
dec
push
add
mov
dec
and
or
jmp
xor
out
outsl
sbb
mov
leave
mov
std
sbb
shlb
dec
lsl
scas
push
mov
jae
fisubl
hlt
xchg
add
insl
mov
sarl
dec
push
sub
jle
mov
test
cs
jl
xor
pop
jne
repz
adc
mov
sahf
mov
into
push
nop
pop
add
xor
mov
rorb
push
mov
into
icebp
shll
popw
shlb
out
int3
pop
cld
adc
lahf
mov
int3
lret
push
fsubrp
imul
les
mov
inc
add
cld
sbb
xchg
cmpsb
xor
mov
xchg
call
insb
add
shl
pop
mov
out
xchg
mov
pop
icebp
call
stc
push
adc
out
insl
lods
hlt
in
shll
into
lret
mov
jb
push
je
sub
pop
lret
pop
dec
shlb
xor
pushf
into
test
and
out
movsb
sub
push
addb
pop
sub
rorl
aaa
push
loope
sub
mov
sub
fdivr
dec
mov
jb
push
xlat
and
xchg
idiv
sarb
leave
fs
push
xor
adc
jne
xor
fcomps
pop
cld
mov
aas
xchg
xor
stos
test
je
mov
stos
push
jp
stos
loopew
pusha
lods
push
sar
test
mov
cmp
sbb
sbb
mov
cli
pop
inc
inc
imul
ljmp
popf
pop
out
nop
test
adc
mov
aas
cs
movsb
std
mov
std
sub
xor
ds
jnp
lcall
nop
jae
xorl
xor
popa
sub
aad
adc
xchg
loope
push
add
or
repnz
push
lea
mov
repz
lcall
mov
xchg
repnz
inc
cmp
cmp
push
or
jns
mov
aam
pop
add
xor
leave
jae
repnz
or
mov
mov
inc
inc
pushf
jnp
cmpsl
mov
lods
repnz
in
jge
sub
loop
dec
popf
mov
inc
test
repnz
mov
jmp
test
cmp
push
pop
jb
ja
pop
adc
int
adc
mov
jo
jecxz
orl
jp
fdivp
pushf
scas
sbb
push
or
popf
or
jno
pop
imulb
sub
sbb
out
xor
in
pushf
jmp
negl
call
lcall
repnz
jmp
mov
push
xchg
push
or
sub
add
outsl
jns
dec
leave
stos
dec
pop
idivb
fsubrl
sbbb
xchg
pushf
mov
mov
mov
or
sub
dec
ret
fdivr
mov
sti
aas
test
mov
fistpll
nop
fcompl
mov
ret
xchg
imul
rorb
or
sub
ret
xchg
icebp
ss
jle
jge
add
sti
mov
ror
iret
arpl
xor
mov
ficomps
test
je
mov
sbb
lret
push
loopne
or
loop
loopne
or
jle
pusha
jbe
rcl
push
inc
lret
icebp
xor
dec
sbb
int3
lret
movsb
test
sarb
jno
outsb
pop
mov
adc
loope
repnz
gs
lcall
lea
cmpsb
mov
xchg
sub
jge
cmp
in
inc
dec
cmp
adc
pop
sahf
xor
or
clc
insl
shlb
icebp
icebp
rclb
and
aaa
mov
sahf
xchg
inc
inc
dec
jae
mov
mov
out
dec
add
aam
fsts
addl
stc
fnstcw
xchg
mov
les
and
xchg
pushf
iret
lods
mov
ret
in
ja
lret
lds
jmp
push
mov
lahf
push
mov
decl
mov
aaa
pop
or
mov
push
out
je
sbb
add
xchg
faddl
xor
shlb
int3
add
insl
xor
rcll
add
enter
dec
xor
xchg
clc
jecxz
push
push
pop
test
xor
stc
xor
loop
cmp
jecxz
push
sub
and
int3
jns
ja
mov
sub
cli
push
cmp
decl
inc
cmpsl
cmp
add
lahf
test
paddd
mov
arpl
loop
push
jp
shl
js
lods
mov
mov
insl
push
je
mov
hlt
lods
mov
xchg
cmp
gs
icebp
and
mov
incb
outsb
inc
icebp
dec
or
in
out
mov
xchg
mov
dec
or
mov
mul
cmc
cmp
jns
dec
cmp
mov
addr16
add
mov
mov
test
cmp
repz
outsl
aad
sbb
sbb
and
paddusb
das
jae
orl
adc
pop
ret
jmp
sub
je
sarb
rolb
and
das
adc
nop
aaa
movsb
aam
movsl
push
mov
push
in
pushf
cmp
pop
pop
dec
outsb
and
pushw
cli
jb
insl
int
lcall
loopne
xchg
push
mov
nop
loope
sbb
into
cltd
stos
push
mov
sbbl
imul
mov
imul
shl
sbb
mov
mov
xchg
xor
wrmsr
xor
mov
out
out
ret
push
mov
notb
push
cli
or
scas
aam
rclb
or
xchg
movsl
inc
add
out
je
faddl
sub
popf
push
daa
xor
mov
push
in
push
pop
sbb
scas
bound
push
dec
xor
das
xchg
cmc
sahf
or
jg
movb
sub
jmp
je
mov
mov
jae
sahf
adc
lea
jbe
mov
dec
cltd
push
push
mov
mov
lea
sub
popa
adc
inc
call
fistpl
andb
mov
adc
add
adc
aas
fs
push
jne
jb
shll
mov
xchg
xchg
aaa
pusha
cs
imul
pop
in
jb
std
mov
ss
jmp
pop
iret
jecxz
and
and
dec
ja
inc
xchg
dec
inc
and
jg
pop
and
mov
aad
xor
jb
lahf
xor
cmp
dec
sbb
sbb
dec
gs
mov
jne
jle
or
pop
leave
xlat
cmp
icebp
lret
sarl
mov
fdivl
cmp
outsl
xor
dec
push
sub
insl
stos
or
enter
xchg
xor
lock
or
out
mov
jg
xchg
pop
inc
aad
xor
jb
js
push
add
pusha
rcrb
mov
mov
repz
jno
adc
test
sti
pop
push
mov
jno
rcrl
gs
aas
mov
add
leave
cmp
lcall
dec
and
out
push
mov
and
inc
repz
mov
mov
mov
xchg
mov
add
in
mov
fsubs
arpl
push
divl
stos
pop
cmpsl
sbb
loope
and
xor
mov
lock
sub
loopne
test
and
push
cmpsl
loope
xchg
cld
aad
loop
pop
pop
popa
lret
dec
sub
xorl
sbb
decb
adc
js
mov
mov
test
xor
mov
es
outsb
inc
sub
sub
xchg
push
fsts
aas
insl
arpl
sarb
add
and
mov
lret
js
mov
int3
or
jecxz
bound
test
mov
dec
mov
mov
leave
inc
jns
imul
cmpb
add
hlt
mov
sbb
ret
sub
loop
test
add
pop
icebp
xchg
sbb
mov
sbb
mov
and
bound
mov
jns
mov
xchg
lret
dec
fstpt
scas
sarb
jmp
popa
xlat
dec
mov
fucomi
xor
xchg
pop
int
cmp
xor
icebp
dec
xchg
aaa
mov
ljmp
or
out
jbe
mov
call
dec
aad
xor
xlat
cmp
addr16
aas
movsl
xor
jae
mov
ss
arpl
jecxz
int
divb
stos
push
out
out
dec
clc
adc
imul
scas
popl
sbb
adc
push
jo
movl
jbe
jo
push
xor
sar
cmp
fs
add
ror
jle
lcall
cli
jg
jecxz
stos
lods
in
pop
cmpsl
ljmp
aam
push
cmp
push
shll
in
xor
mov
mov
dec
fwait
scas
pushf
mov
dec
xor
pusha
cmp
data16
hlt
daa
cld
std
mov
mov
dec
push
int3
mov
xchg
into
sbb
test
test
xchg
push
add
cmp
inc
dec
mov
mov
lea
push
sbb
xlat
cli
xchg
cmp
scas
pop
stc
xchg
cmc
repz
cmp
fadd
aam
hlt
movsl
jg
jns
xor
push
and
push
push
cmc
aad
arpl
inc
les
mov
push
int3
test
sbb
jns
mulb
adc
das
dec
cs
dec
xlat
mov
stc
sub
xchg
dec
lds
les
push
inc
fldt
jbe
adc
ss
les
or
mov
adc
jle
mov
movsl
lods
xor
mov
stos
fstl
repnz
dec
dec
iret
pop
add
shlb
mov
testl
inc
notl
loope
lret
icebp
enter
mov
repnz
pop
sub
add
out
rclb
std
push
rolb
sub
push
or
lea
es
cmpsl
mov
dec
lods
pop
pop
cmpsb
out
mov
push
aas
movsl
mov
dec
outsb
cwtl
aas
out
ret
roll
jmp
imul
out
iret
insl
pop
inc
lods
sub
jg
add
pop
xor
fisttpl
push
clc
notb
and
ret
in
outsl
les
xor
mov
mov
and
stc
push
js
mov
dec
jecxz
arpl
jg
xor
push
loope
mov
or
push
ror
roll
jle
xchg
lea
jle
cmp
je
push
rolb
xchg
dec
adcb
data16
and
shl
dec
repz
fwait
pop
in
dec
cld
mov
adc
jg
test
mov
test
pop
xchg
or
dec
addb
scas
sti
rolb
cwtl
fsubrs
fcmovu
cmpsb
pusha
mov
repz
dec
addr16
sbb
lock
adc
cmp
std
fdiv
xchg
mov
sub
sub
jl
in
int3
xor
inc
push
cmc
xchg
jnp
pop
pop
mov
xchg
jg
sub
sub
idivb
mov
divl
adc
cmp
lret
push
je
cwtl
imul
push
fistl
lret
int3
dec
pop
xor
aaa
jae
push
sub
out
lds
xor
sbbb
aaa
inc
in
add
and
inc
push
pop
add
insl
pop
push
xor
dec
out
push
inc
sbb
sahf
les
push
xchg
and
popa
pop
cmp
movl
push
call
test
jae
rolb
or
jbe
cli
ret
sbb
xchg
and
jmp
push
sti
dec
mov
outsb
sbb
mov
add
cmp
and
mov
ja
std
ret
rolb
mov
and
dec
mov
mov
xchg
lret
sub
int3
stos
popf
push
push
push
sub
mov
ss
and
or
cwtl
out
lcall
into
xlat
xor
les
push
mov
nop
push
movsbl
imul
shlb
fldenv
mov
lahf
hlt
cmc
lret
sahf
mov
pop
xchg
les
ret
inc
xor
mov
in
stc
mov
or
push
testb
jmp
push
jmp
xchg
scas
xor
stos
pushf
xchg
cltd
daa
jns
add
pop
mov
xor
stos
xchg
pushf
xchg
jno
ja
popa
outsl
pop
imul
xchg
sbb
repnz
mov
inc
ror
push
repnz
and
mov
pushf
mov
mov
dec
add
push
rol
jns
hlt
and
add
lret
pusha
dec
push
insl
cld
rorl
sahf
call
test
cmp
xor
popf
les
das
cmp
movsl
adc
pop
xchg
lret
test
mov
cmp
cmp
repz
and
int
pop
lock
jns
add
xor
gs
mov
pop
push
xor
lea
adc
add
jbe
les
jmp
xchg
lahf
jns
xchg
icebp
push
mov
jle
aam
loope
cs
dec
lods
insb
dec
ficomps
adc
mov
push
rolb
pop
adc
push
andb
pop
es
push
cmp
xor
test
aam
jne
mov
js
xchg
push
test
fidivrs
lock
push
test
popa
lret
sub
sub
or
ret
outsb
add
cmp
sub
xlat
ja
mov
adc
ret
rcrl
lds
mov
sbb
mov
xor
xchg
mov
cwtl
ljmp
jnp
jnp
mov
jno
sub
shlb
movsl
sbb
rcr
lret
ret
or
loopne
jmp
jbe
fsubr
rcl
mov
das
stc
pop
mov
or
ss
or
jbe
fisubrs
pop
aad
jbe
sub
xorb
dec
xchg
jge
pop
pop
sbb
ret
sub
rolb
arpl
daa
sahf
das
ljmp
push
jecxz
push
push
mov
inc
mov
fisubs
xchg
cmp
mov
dec
mov
mov
dec
cmp
jbe
mov
imul
sbb
inc
movsb
and
sub
notb
shlb
dec
xor
out
hlt
hlt
out
ljmp
stos
fcoml
adc
sbb
daa
xor
fistpll
sub
imul
test
aam
or
hlt
ret
arpl
fistl
xor
sbb
movsl
mov
xor
rorl
jae
dec
dec
andl
inc
lahf
test
popf
je
push
jo
xlat
mov
sbb
xchg
negb
test
pushf
or
jns
mov
inc
out
dec
insl
and
test
pop
mov
inc
lret
rcr
pop
xchg
xchg
in
pmaddwd
iret
inc
mov
das
mov
shlb
add
or
jo
mov
pop
pop
push
mov
cs
xchg
mov
jp
jl
inc
mov
xchg
out
enter
out
outsb
inc
jp
scas
sbb
push
dec
mov
dec
sub
pop
jecxz
pop
dec
mov
jne
pop
popf
mov
loope
sti
adc
icebp
fpatan
add
xchg
mov
subl
or
in
cmp
jne
imul
adc
sbb
mov
int3
or
or
add
fucomp
dec
adc
lret
scas
iret
js
pushf
test
and
clc
outsb
add
shl
lea
xchg
jns
xchg
dec
xchg
sahf
iret
sbb
xchg
sub
sub
loop
dec
mov
push
loop
sahf
cwtl
inc
jns
mov
mov
mov
les
dec
inc
imul
sbb
shrb
movsl
in
push
jns
aam
inc
lahf
adc
popf
push
clc
and
sbb
sbb
or
stos
mov
lret
jle
out
rorb
push
mov
push
add
cld
popl
mov
sub
into
inc
aam
dec
adc
or
stc
insb
mov
inc
mov
xchg
insl
pop
fdivrl
add
add
mov
dec
fildl
scas
xchg
xchg
mov
filds
mov
push
adc
repz
rol
or
dec
sarb
and
lods
rcll
das
xor
sub
xor
push
sub
xor
aaa
add
inc
outsl
dec
push
aam
xchg
pop
mov
andl
inc
push
inc
popf
sub
mov
cmp
dec
mov
mov
leave
pop
insl
xchg
xchg
mov
dec
cmp
jne
lods
aas
add
hlt
mov
sbb
das
test
outsl
inc
pop
dec
mov
lcall
test
mov
leave
std
push
sti
cs
or
dec
push
xor
sbb
dec
jo
leave
mov
inc
xchg
ljmp
jp
and
sub
push
mov
addr16
fldt
cmp
and
sbb
imul
sahf
nop
call
popa
jns
call
lods
or
hlt
inc
xor
js
and
jnp
cli
ljmp
push
xchg
sarb
cmp
add
jle
xchg
dec
mov
lret
push
mov
push
mov
fcmovnbe
mov
out
jno
push
aas
fwait
push
in
aaa
test
cld
adc
cli
bound
ret
outsb
lcall
mov
dec
jbe
adc
jbe
xchg
xchg
hlt
ja
bound
jge
in
inc
inc
push
xor
mov
in
cwtl
data16
mov
stc
and
mov
aaa
in
bound
adc
add
mov
mov
mov
repz
ljmp
jns
jmp
sub
xchg
jl
dec
out
xchg
scas
or
icebp
fs
or
mov
add
out
call
mov
or
mov
call
dec
testb
lcall
sbb
out
xchg
dec
dec
ret
sbb
jns
or
lea
adc
sarb
and
jg
out
mov
jl
mov
inc
jbe
pop
mov
ljmp
pop
pop
add
cmpsb
fucompp
xchg
push
lods
fnsave
sbb
push
mov
test
mov
out
aaa
outsb
sub
rolb
cld
lock
sbb
leave
mov
sub
in
mov
test
pop
adc
jp
jbe
call
jns
dec
sbb
push
ret
jmp
loope
dec
jl
jno
inc
ret
ret
mov
nop
xor
cmp
inc
push
mov
xlat
movsb
mov
add
or
fsubrl
and
adc
loop
ud1
dec
lret
cmc
loop
push
mov
mov
mov
ljmp
imul
int
cltd
test
sub
and
mov
loopne
xlat
out
mov
es
push
cmp
mov
adc
adcl
sti
ret
das
ja
xchg
stc
cmpsl
xchg
dec
or
fprem1
cmp
cltd
jp
mov
jecxz
cmp
mov
out
cmpsb
inc
adc
iret
adc
push
imulb
xchg
mov
sub
sbb
pop
dec
ljmp
inc
jns
mov
dec
mov
mov
sti
jle
mov
sub
in
aas
pop
push
lds
jmp
pop
in
jno
or
lcall
lea
cmpl
xchg
add
dec
and
enter
cltd
dec
sbb
insb
popf
push
cltd
loope
into
mov
inc
arpl
call
sub
jb
xorb
js
call
adc
inc
cmp
lods
pop
and
outsb
jns
into
fs
jo,pn
sti
es
add
pop
push
cltd
test
out
sbb
cs
dec
inc
shrb
movsb
call
imul
sbb
xor
les
push
mov
aas
js
push
and
mov
and
out
pop
cmc
inc
subb
ljmp
or
cmp
out
cmpl
cmp
sarl
scas
enter
add
addb
lahf
loopne
jg
inc
sarl
loope
mov
cmp
mov
add
cmp
cwtl
mov
insb
sub
arpl
fisubs
into
outsl
loope
or
mov
and
cmpsb
lea
jmp
fwait
add
pop
ss
push
sbbl
fidivl
cmpsl
outsb
jbe
dec
int3
sub
lock
data16
test
cwtl
sarb
int3
in
push
dec
inc
lcall
mov
cmp
notl
dec
lret
negb
aad
jnp
push
jmp
cmp
and
pop
xor
mov
bound
lahf
popa
mov
lds
addb
add
loopne
add
inc
out
gs
pop
adc
add
loopne
add
sub
inc
pop
cmp
mov
push
lret
sub
inc
scas
xchg
into
idivl
add
cmp
std
fucomi
in
ljmp
sbb
daa
mov
into
fisubrs
add
outsb
jecxz
inc
shr
call
pop
jl
mov
push
in
add
ss
lods
jp
dec
add
fistpll
dec
xor
push
hlt
pushf
xchg
push
push
repnz
sti
or
or
mov
sub
mov
shl
push
icebp
jecxz
arpl
les
in
xor
cld
rolb
movsl
jae
and
mov
test
cmp
dec
or
lret
jb
nop
popf
divb
out
adc
addb
mov
adc
imul
adc
das
jecxz
pop
xor
stc
mov
xlat
outsb
xchg
lock
stos
pop
push
mov
jge
xor
push
out
shlb
movsb
inc
fildl
push
adc
icebp
fwait
adcl
jnp
jae
sbb
adc
push
insl
sub
test
lods
cwtl
push
fsub
add
xchg
imul
scas
aaa
inc
fidivs
insl
lods
jl
les
add
jne
test
in
inc
add
movsl
inc
jecxz
mov
jno
add
pop
pushf
je
pop
aad
imul
lods
dec
mov
pop
mov
inc
mov
scas
cltd
fs
movsb
sub
jbe
adc
lods
dec
push
es
xor
cmp
test
rolb
into
gs
stc
xor
lcall
mov
push
cmp
mov
jg
jb
leave
jbe
or
notl
scas
inc
xlat
int3
xlat
addr16
and
jbe
adc
ret
mov
lret
hlt
xor
push
fisubrl
adc
gs
stos
shrl
lea
dec
cmpsb
add
test
ljmp
add
xlat
gs
push
jae
mov
or
pop
fiadds
loop
call
in
aad
pop
pop
lret
insb
mov
xchg
pop
xlat
inc
add
add
je
dec
int
sbb
mov
sbb
lret
imul
jb
jcxz
int3
pop
aad
addr16
out
inc
and
mov
mov
sbb
lock
insb
cmp
movsl
repnz
rcrl
jo
icebp
shll
mov
jecxz
iret
adc
inc
aam
repnz
mov
push
js
mov
sub
pop
xchg
jb
nop
ljmp
aad
xchg
adc
pop
push
inc
shrb
pop
sub
sub
add
out
dec
sbb
fisubl
dec
test
out
or
sbb
inc
inc
sti
std
inc
push
inc
repnz
jle
ja
sbb
and
adc
lret
or
sbb
cltd
push
jl
shlb
cmp
iret
in
ds
imul
call
push
jmp
jg
fsubrl
gs
icebp
in
negl
pushf
movsb
sbb
lods
adc
adc
lret
inc
repnz
and
xchg
and
out
sub
mov
hlt
adc
inc
pushf
push
fs
bound
les
jnp
outsl
xlat
inc
pop
cmp
inc
jae
out
sbb
fdivrs
enter
mov
mov
push
addr16
fcmovu
xlat
xor
pop
addr16
cmp
or
mov
push
shl
or
fisttps
jns
push
mov
xor
in
pcmpgtw
push
cmp
cltd
inc
pop
scas
jp
in
add
ss
or
sub
dec
ljmp
pop
dec
fidivrl
mov
mov
sahf
seto
xor
mov
mov
jle
mov
push
add
fldt
add
add
push
dec
jmp
adc
add
shlb
ja
popa
das
push
pop
sbb
sub
icebp
lods
ss
cld
stos
inc
shll
fsts
pop
hlt
dec
mov
add
scas
shrl
push
xor
ljmp
lahf
test
xor
int3
lcall
jecxz
cmp
loope
mov
sub
cmpsl
jae
add
scas
cmp
ret
add
cmp
lods
or
and
ds
addl
push
aam
jbe
ja
out
fildll
mov
aad
test
push
and
xchg
into
mull
sub
lret
rorb
lret
lea
in
dec
daa
xor
aad
lock
add
out
xchg
imul
inc
out
es
dec
lods
xlat
sarb
xor
cmpsl
lock
repnz
xchg
add
pop
ljmp
add
movsb
lcall
push
sbb
iret
cmp
mov
mov
sub
outsb
out
dec
enter
cwtl
push
fwait
adc
aad
sti
fistl
cltd
mov
jnp
push
mov
pop
sub
cmpsb
and
sqrtps
pushf
popf
fisttpll
jne
sub
inc
ret
subb
out
add
mov
xor
sbb
sti
jmp
je
or
and
call
out
imul
add
cld
push
subl
cld
mov
mov
or
leave
in
mov
mov
stos
sub
int
add
rolb
dec
cmp
das
push
or
xlat
je
xchg
jecxz
movsl
movsl
adcb
mov
push
stc
popf
xlat
inc
neg
jge
es
repz
sbb
dec
add
shl
cmp
shrb
push
into
shl
jne
xor
cmpsl
fsubr
and
movsb
push
jmp
mov
and
pop
aas
fistl
push
fwait
ja
and
fimull
push
das
faddl
inc
lods
pop
cmc
jge
sub
or
inc
fs
xchg
add
test
push
es
repnz
sbb
push
daa
mov
cltd
fisubl
dec
mov
and
push
push
cmc
cwtl
inc
arpl
or
push
inc
bound
push
hlt
rcr
push
mov
and
xchg
xor
lcall
mov
cld
sub
inc
mov
call
dec
stos
cmc
test
mov
mov
mov
fxtract
jo
and
and
sub
push
adc
sbb
pop
aad
les
fadd
lods
mov
xlat
imul
lock
mov
mov
push
jg
sbb
test
imul
arpl
mov
lea
adc
or
pop
lods
jg
test
mov
arpl
mov
cwtl
stos
pop
mov
ss
cltd
lret
inc
lods
inc
in
sub
inc
loopne
insl
into
mov
add
int
xchg
repnz
imul
dec
push
pop
subl
ret
rcrl
pop
inc
adc
je
sbb
pop
xor
jmp
scas
cs
insl
scas
movsl
mov
mov
or
adc
and
pop
fiaddl
push
daa
fwait
mov
shrl
pop
ret
out
cmc
ficomps
push
arpl
xchg
push
xorl
pop
push
or
cli
push
popa
xchg
adc
fimull
add
cltd
loopne
mov
xchg
add
loopne
sar
sbb
push
jg
mov
jo
ja
aas
je
mov
push
popf
or
xchg
adc
shr
out
cltd
movsw
cmpsb
or
lcall
outsl
stos
loope
pop
hlt
or
and
cli
mov
cmp
jnp
icebp
jne
cmp
lds
daa
jg
in
mov
dec
mov
xchg
push
scas
loope
pushf
out
jbe
jle
ljmp
iret
dec
dec
lret
adc
shlb
pop
in
push
and
sub
xchg
cmpb
or
in
or
sbb
in
cwtl
sub
roll
inc
add
mov
mov
cmp
cs
fwait
jb
rclb
cmpsb
insl
aaa
rcll
push
or
sti
popf
movsl
pop
add
sbb
pop
movsl
and
mov
pop
pop
movsb
ret
fldenv
mov
push
sbb
cltd
jno
jne
and
ljmp
jnp
aad
fiaddl
xchg
xor
jecxz
adc
mov
xchg
xchg
subl
rorl
cld
fucomi
aaa
fstpl
xor
decl
adc
test
cmp
lcall
stc
lock
jo
popa
jnp
pop
xor
ds
dec
pop
sub
je
push
loopne
sbb
pop
test
xor
subl
lret
lcall
in
shrl
or
sub
mov
in
and
out
aas
shll
sar
xchg
push
dec
shlb
mov
xor
cmp
dec
pop
lds
inc
jge
imul
or
push
xchg
jb
lds
sti
cmp
ds
or
push
mov
jae
les
pusha
imul
sub
int
jl
lret
mov
je
jle
and
lods
xor
fidivs
cwtl
xor
data16
dec
and
shl
out
pop
pop
dec
mov
fwait
pop
dec
imul
fstps
imul
jmp
adc
scas
and
out
mull
jge
outsl
inc
jl
icebp
and
jbe,pt
add
out
xchg
loope
sub
and
popa
jo
xchg
sti
xor
or
xchg
int
movsb
inc
or
lret
cmpsb
inc
mov
or
xor
int
xor
jae
and
pop
popa
sub
jae
pop
loop
and
push
push
fsubl
xor
imul
mov
aam
mov
push
xchg
sbb
in
in
mov
out
fs
int
jmp
cmp
add
mulb
test
out
sub
mov
std
arpl
fiadds
cmp
inc
shlb
es
xor
in
add
add
push
dec
or
jo
mov
inc
dec
add
push
loope
mov
in
aaa
cmc
mov
sbb
xlat
push
icebp
xchg
inc
or
lods
mov
mov
outsl
cmpsb
sbb
jl
sti
mov
and
fwait
cmp
aad
loope
or
push
fwait
sub
leave
inc
les
mov
test
pusha
dec
push
mov
shl
mov
hlt
popf
ds
fidivl
jge
jg
outsl
in
push
shrb
and
pop
add
sub
mov
es
sbb
mov
jge
and
lods
aaa
bnd
out
push
fimuls
xchg
daa
mov
loop
push
mov
xor
iret
clc
pop
addr16
xchg
mov
clc
in
fisttps
jmp
inc
add
add
scas
cs
fisubl
mov
rol
pop
das
not
mov
jo
ss
sbb
into
mov
andl
mov
mov
mov
fwait
mov
ljmp
in
loopne
in
jle
hlt
repz
es
adc
aaa
xchg
mov
cwtl
push
jnp
jl
out
mul
jne
clc
in
fsub
xor
or
mov
rolb
push
lahf
sbb
mov
mov
pop
mov
stos
or
push
int
and
mov
mov
and
xchg
pop
test
jmp
xchg
ljmp
mov
mov
adcb
stos
jg
adc
inc
or
mov
lock
sub
scas
jmp
cli
inc
mov
mov
mov
xlat
daa
cmp
pop
fcomi
mov
lds
movsb
push
and
pop
jl
push
cs
and
or
shll
mov
pusha
enter
mov
imul
mov
nop
int
cli
cmp
and
mov
arpl
cli
add
mov
mov
popa
pop
xchg
cmp
xchg
jo
push
std
and
push
cmpl
jns
push
outsl
daa
pop
ja
jp
rcrl
icebp
add
jecxz
pop
sbb
shll
repz
pop
inc
loop
cli
stos
mov
push
xchg
jecxz
rclb
add
call
dec
out
dec
fisubs
pop
adc
mov
loope
lds
aam
add
or
test
lds
movsb
ret
push
mov
jge
mov
jl
dec
mov
movb
scas
mov
imul
jl
loope
mov
sbb
xlat
mov
xchg
int
jp
mov
lods
add
jl
mov
hlt
nop
js
fcomps
sbb
fsin
mov
lcall
test
xchg
dec
sub
inc
mov
aam
movsb
leave
je
push
jle
lea
cltd
mov
inc
inc
aad
inc
inc
jg
xchg
jmp
jp
lea
dec
les
lods
cmp
mov
adc
jnp
push
rcr
loop
lods
mov
or
daa
or
in
pushf
arpl
dec
bound
es
insl
jp
fcmovu
add
adc
cmp
mov
sub
and
mov
dec
arpl
lods
jecxz
cwtl
jne
jecxz
clc
adc
fucompp
push
lret
loope
or
lods
mov
pop
xorb
xor
adc
in
lret
push
loope
loop
mov
adc
rorb
add
inc
add
fisubl
jne
add
jbe
addr16
push
dec
outsl
out
jno
cmp
cmp
fdivrl
in
scas
mov
mov
in
or
into
roll
mov
adc
or
push
call
cmp
add
cmp
lcall
mov
push
mov
shrl
data16
lds
xchg
lds
dec
jb
lret
cld
adc
mov
push
jp
inc
clc
into
leave
lret
or
iret
jne
dec
sub
loopne
xchg
push
ficoml
test
test
pop
gs
cmp
outsl
mov
das
arpl
fcom
mov
shlb
lahf
mov
rorb
pop
pop
pop
cltd
loop
push
ljmp
xor
jno
aam
mov
stos
mov
loope
out
setne
ficompl
jnp
icebp
mov
inc
mov
stos
adc
fwait
hlt
inc
jmp
lret
jg
loopne
adc
pop
fdivs
sbb
add
pop
jmp
add
mov
adc
insl
xor
and
or
addr16
in
jle
mov
mov
repnz
pop
in
push
jge
push
jns
lret
push
xlat
pop
dec
andb
push
adc
loope
dec
ss
inc
loop
sub
outsl
js
ret
shl
push
adc
dec
into
paddd
or
jne
mov
in
or
frstor
nop
pop
dec
adc
es
loopne
mov
test
mov
data16
rclb
out
daa
std
loope
bound
lret
sbb
repz
out
pushf
xchg
jno
mov
fistps
orl
popa
fstpt
and
add
inc
movsl
outsl
or
or
in
xor
test
mov
lret
cmp
lds
xor
inc
out
pop
jmp
mov
in
lods
inc
xor
xor
jge
shll
mov
bound
push
jg
fisttpl
jp
pop
inc
xchg
in
mov
mov
push
lret
mov
js
mov
inc
push
mov
inc
lods
xor
je
xor
pushf
adcl
out
insl
mov
jle
das
sti
addr16
jb
imul
mov
xor
pop
sahf
scas
shlb
jne
movsb
jb
test
or
popa
mov
es
lods
inc
jae
or
aad
adc
imul
iret
adcb
add
add
jle
pop
fldcw
mov
or
mov
pop
lds
cli
mov
shlb
adc
icebp
stos
clc
add
pop
cwtl
push
push
pushf
mov
mov
mov
in
or
out
rcrl
add
andl
subl
xchg
fistpl
rorl
pop
dec
cmc
jmp
test
faddp
fidivrl
test
shll
pop
jge
scas
or
ljmp
jo
lcall
xchg
icebp
xchg
icebp
mov
lods
sbb
cmp
daa
in
mov
sub
lcall
dec
push
mov
push
icebp
or
insl
out
loopne
adc
sub
sbb
push
cmpsb
negb
pop
aam
fisttps
lea
jo
lcall
push
int3
and
xor
popa
or
scas
mov
inc
jnp
sahf
inc
mov
mov
out
fadds
mov
pop
xchg
or
and
ja
mov
push
rcll
mov
pop
loope
outsb
pop
das
addr16
scas
xchg
adc
mov
sub
popf
jo
push
aas
jp
push
inc
icebp
mov
testl
insb
inc
popf
mov
mov
pop
or
xlat
jae
fcoms
sbb
fiadds
pop
push
repz
pop
movsl
pop
lods
and
inc
adc
push
or
and
xor
loope
xor
and
gs
jae
push
mov
ljmp
xlat
adc
daa
popa
cltd
lret
fisttpll
jge
outsl
cmp
into
out
jge
sbb
sub
pop
pop
in
int
xorl
xor
out
xchg
mov
jb
xchg
add
es
sub
cli
pop
bound
mov
movsb
out
insb
outsb
scas
hlt
adc
sar
sub
fimuls
cmpsl
out
jp
push
cmp
or
loope
int3
inc
fsubl
test
fistl
sti
push
or
les
add
add
mov
mov
xor
jbe
jg
je
lds
inc
or
movsl
mov
xor
pop
sbb
mov
aad
decb
and
xor
dec
ffree
mov
jle
stc
cwtl
lret
jg
jp
dec
inc
push
adc
rorl
mov
or
stos
lods
mov
cmp
movsl
inc
mov
pushf
mov
lods
ja
add
fsub
test
add
jmp
inc
arpl
cmp
sbb
fstps
jg
push
lret
ljmp
fistpll
mov
sbb
loop
mov
aas
add
nop
inc
xor
aaa
icebp
pop
bound
insb
mov
cmpb
lcall
sub
scas
idivb
cltd
pop
decl
out
cmp
inc
lods
mov
dec
sar
iret
repnz
sub
xor
in
stos
jmp
or
and
xchg
pop
rorb
ds
dec
popl
jns
pusha
adc
fldenv
enter
ja
aad
test
dec
push
test
in
lret
push
call
jno
adc
xor
out
outsl
sahf
mov
aaa
bound
repnz
hlt
cmp
inc
cwtl
inc
xchg
fiaddl
ffreep
test
and
rol
adc
mov
pop
movsb
movsl
cs
sbb
jns
jb
fwait
leave
cmp
cmp
mov
jns
cli
out
test
bound
mov
sub
xchg
ja
adc
out
outsb
sub
inc
pop
dec
inc
ret
xchg
pop
add
sbb
insb
mov
std
push
pusha
jge
inc
out
push
push
mov
push
push
es
je
insl
fnstcw
sub
fwait
int
pop
pop
mov
pop
xlat
leave
dec
mov
mov
mov
pop
lahf
in
mov
jne
or
jl
mov
mov
mov
jne
jmp
add
movsb
pop
lods
repnz
cmp
pop
sbb
nop
mov
xchg
push
cmp
cmpsl
add
and
mov
mov
mov
cwtl
out
ja
fs
sub
mov
mov
sub
cmp
and
leave
mov
jge
notl
inc
out
sub
movb
pop
push
push
cmpsb
cld
and
cs
dec
mov
adc
cmp
enter
hlt
js
mov
pop
push
stos
inc
add
aas
call
push
outsb
mov
pop
hlt
sub
fldl
shll
stos
in
hlt
xchg
jge
and
push
mov
faddl
test
fbstp
addr16
inc
push
je
pop
loopne
cmp
and
mov
int3
mov
mov
sbb
jmp
cmp
cmpsb
inc
jg
imul
pop
or
xor
adc
icebp
popa
push
sbb
gs
push
xor
lcall
scas
fisubrs
mul
sub
mov
or
test
call
pop
cmp
dec
jns
imul
test
mov
das
xchg
dec
cs
mov
in
or
imul
nop
jbe
xchg
inc
push
mov
cmp
lret
mov
mov
sub
adc
dec
outsl
cmp
sbb
sbb
mov
sbb
sbb
idivb
mov
fdivrs
hlt
hlt
pop
cld
das
cmp
push
stos
jbe
pop
int
jbe
push
xchg
adc
inc
mov
pop
lahf
and
dec
into
popa
stos
or
leave
pop
push
test
insl
leave
or
dec
cmp
stc
ja
mov
aad
std
popf
stc
lods
jle
icebp
lea
mov
gs
push
mov
cmp
push
daa
faddp
xchg
pop
add
add
aas
nop
jmp
and
mov
xchg
sbb
add
outsl
repnz
in
inc
xchg
sub
pop
xchg
and
xor
xchg
testb
cmp
push
adcb
inc
addr16
xchg
and
sti
stos
addb
aam
aad
jo
mov
ds
loope
mov
or
mov
add
add
xor
lock
adc
and
xchg
call
dec
data16
cli
jg
or
cmp
sbb
or
rol
jns
cmp
pop
popa
push
movsl
out
mov
cs
mov
cmp
pop
push
leave
ret
out
sub
push
add
mov
loopw
aas
test
pop
les
out
loop
out
jle
pusha
mov
xchg
dec
imulb
inc
leave
pop
cmpsb
call
sbb
sub
subps
xorb
pop
lahf
push
int
lret
adc
test
push
sbb
in
adc
cmc
popl
and
mov
into
adc
xchg
pop
ffreep
push
insl
js
xor
aaa
add
ljmp
call
scas
and
mov
ss
mov
mov
cmp
mov
pop
adc
lret
mov
push
cmp
lahf
xchg
inc
pop
sahf
pushf
out
das
adc
add
arpl
inc
cmpsl
imul
jns
push
dec
push
or
jne
mov
cwtl
cld
adc
into
lock
add
in
movsb
add
popf
je
inc
lock
js
mov
jns
pop
lock
lea
pop
push
sbb
daa
lods
dec
and
jne,pt
mov
pop
mov
mov
or
lret
lret
lcall
cs
aas
dec
mov
jl
jae
mov
mov
push
gs
ss
inc
adc
sub
dec
xchg
pop
sub
hlt
sub
lahf
sub
fs
sub
mov
fnstcw
fbstp
test
jno
aas
pusha
pop
dec
movsl
lds
aas
mov
neg
dec
lods
cmp
dec
in
ja
mov
sub
push
xchg
repz
sbb
cmp
dec
and
call
ret
test
adc
mov
jle
inc
imul
mov
loope
hlt
loope,pt
jmp
mov
pop
sub
adc
sub
sub
and
loop
lret
cld
mov
mov
push
ficomps
jmp
cmp
sub
popf
cmp
jp
dec
scas
and
js
adc
inc
inc
addr16
cmpsl
sbb
stc
add
repnz
cltd
pop
popl
sub
mov
js
int3
imul
cmpsb
mov
out
jg
arpl
dec
mov
dec
ds
nop
mov
loope
xor
pinsrw
push
cmp
out
in
push
sahf
jge
mov
clc
sahf
outsl
sbb
jge
lods
or
add
add
repz
mov
das
add
xchg
es
shr
dec
xorb
push
lahf
push
bound
stos
add
ja
ljmp
fsubs
in
dec
loopne
pop
push
stos
mov
jle
jno
adcl
fadds
or
jnp
pop
sti
jp
or
dec
cmp
icebp
push
or
jge
adc
mov
sub
es
push
iret
push
repz
or
push
pop
pop
inc
or
loop
pushf
imul
test
xlat
pop
sub
cmp
stc
ret
fnsave
sbb
jno
insl
mov
ret
aad
dec
cmpl
inc
cmp
dec
mov
iret
cmp
add
pop
dec
ret
jp
dec
cli
nop
mov
lods
mov
jecxz
loop
sub
insl
pusha
lahf
cmp
scas
cmpsl
sbb
sub
hlt
and
xchg
rcll
pop
jbe
mov
sub
fisubl
insb
jo
loope
hlt
cmpsb
mov
jae
push
shl
lods
repnz
aad
inc
pop
outsl
pusha
lahf
outsl
leave
jecxz
insl
repnz
pop
or
sbb
mov
xlat
scas
aad
cmpsb
in
jno
dec
lods
dec
ret
mov
push
cmp
in
dec
pusha
out
mov
pop
jecxz
push
outsl
cmp
mov
shl
sub
es
jmp
dec
rorb
mov
out
sub
xor
cld
cmp
add
fidivrl
nop
imul
es
test
sub
out
movsb
sub
adc
inc
inc
or
movsl
test
jne
xor
test
xchg
mov
inc
and
stos
pop
aam
test
out
insl
mov
ljmp
pop
rcrb
scas
iret
add
mov
ret
hlt
push
mov
lds
adc
popf
lock
pop
jg
ss
mov
lea
es
insl
cli
movsl
xchg
cmp
mov
shlb
mov
push
pop
inc
sub
xor
pop
xchg
jno
or
or
leave
push
dec
out
es
adc
mov
sbb
mov
int3
cld
mov
leave
out
push
mov
mov
fdivs
mov
xor
jp
jecxz
cmpsl
adc
push
lds
inc
pop
and
idivl
roll
pop
push
dec
mov
sbb
and
stos
mov
out
mov
xor
jge
lock
imul
xchg
int
cmp
push
rcll
fldt
and
mov
mov
xchg
dec
sub
test
or
movsl
fwait
ret
xor
movl
stc
inc
enter
sub
out
or
jg
cmp
lock
fldcw
or
xchg
mov
inc
hlt
dec
push
fprem
jne
xchg
daa
scas
adc
aaa
aam
jmp
rep
loope
sahf
jno
aaa
mov
enter
jp
loope
out
xchg
pushf
xchg
push
pushf
in
mov
mov
mov
loopne
push
ss
movsb
mov
jmp
push
js
mov
adc
je
call
hlt
adc
cmp
ret
fs
push
mov
dec
and
jg
jg
xchg
scas
pusha
stc
mov
xchg
adc
imul
outsb
cmpsl
mov
push
mov
adc
inc
xchg
xchg
mov
incl
xchg
push
inc
lahf
push
push
outsb
sub
lret
outsl
or
or
lret
ret
in
insl
fbld
cmp
out
jns
sub
adc
sbb
ljmp
sbb
popa
push
cmpsl
and
sub
mov
imul
ret
mov
xchg
add
ret
mov
add
mov
test
stos
xor
or
hlt
xor
mov
sahf
dec
paddq
mov
pop
stos
ret
inc
dec
push
pushf
ret
pop
push
push
inc
das
mov
mov
adc
and
aas
stc
mov
and
in
jmp
andb
inc
or
cmp
bound
idiv
stc
jo
cmp
das
aad
fld
test
movsb
mov
jne
jnp
or
xchg
into
shl
mov
outsl
jp
adc
sub
fnstsw
mov
mov
mov
inc
xor
mov
iret
popf
stos
jns
cmc
lahf
xor
mov
inc
subl
xor
bound
push
mov
cwtl
jbe
lds
mov
lahf
adc
pop
or
add
sub
and
inc
std
and
pushl
lods
clc
loope
jno
add
sub
mov
xlat
and
iret
mov
loopne
icebp
je
inc
leave
test
jbe
rcl
adc
add
pop
or
pop
pop
pop
and
pop
mov
cli
jle
testb
or
cli
lcall
or
pop
push
mov
outsb
jecxz
notl
sbb
push
pop
mov
xlat
test
xchg
into
sahf
movsl
add
cmpsl
push
pop
pop
out
addr16
inc
nop
jmp
xor
fistpll
test
lret
inc
ljmp
jbe
iret
data16
jle
sbb
sti
jbe
data16
icebp
aam
mov
mov
test
es
add
pop
mov
sub
and
sti
mov
mov
xor
push
popa
adc
loop
jno
fwait
add
jp
xchg
in
mov
adc
xchg
scas
ss
cmp
mov
cmpsl
inc
repnz
pop
ret
xchg
lods
sbb
mov
aaa
mov
insb
mov
ljmp
push
cltd
je
fldenv
popf
sbb
adc
xchg
xchg
in
xor
mov
and
nop
stc
mov
test
into
ds
cmp
or
ret
mov
pop
inc
sub
negl
cmp
xchg
ja
xor
out
cld
push
leave
mov
pop
insb
loopne
sbb
mov
sbb
flds
sub
mov
popl
cmp
clc
xchg
test
mov
cmc
out
shll
imul
cmpsl
outsl
loopnew
adc
sti
movsb
call
push
xor
test
mov
imul
rolb
pop
fnsave
push
ljmp
sub
adc
repz
xchg
jbe
cmp
rolb
jge
push
and
mov
movsb
cld
or
adc
inc
fcoml
aad
scas
in
loop
jmp
add
pop
jbe
imul
loope
cwtl
outsb
rcrl
mov
xchg
sbb
in
sbb
insl
pop
mov
loope
xchg
aas
sbbl
mov
jbe
cmpsl
insl
mov
inc
cli
lret
push
jbe
jg
and
mov
pop
cmpsb
mov
jmp
push
dec
mov
scas
pop
xchg
lcall
mov
faddp
mov
jo
lret
sbb
mov
in
xchg
fs
inc
jne
cmp
test
icebp
and
repnz
movl
inc
out
int
push
leave
ds
jmp
xchg
cmp
test
adc
inc
dec
or
lock
inc
insb
pop
jmp
adc
adc
dec
sbb
push
jl
sbb
mov
scas
flds
cmp
arpl
xchg
insl
inc
mov
cmp
dec
add
inc
jo
ret
dec
mov
dec
fimull
dec
jns
xchg
rcll
int
and
jns
sbb
push
or
pop
idivb
sub
push
scas
jle
jns
hlt
popf
sbb
aam
sbb
cmc
jg
push
cld
pop
push
or
cmpsb
sub
pushl
and
jnp
outsl
ljmp
outsl
and
lock
mov
mov
aam
divb
inc
clc
xchg
pop
sbbb
jle
ret
imul
shll
mov
jns
lahf
dec
xchg
mov
rcll
sub
decb
popa
push
xchg
xor
mov
add
jmp
push
pop
lock
dec
mov
push
sti
mov
xor
mov
lret
aam
imul
cwtl
fnsetpm(287
or
xor
in
mov
xchg
dec
sub
xchg
cld
sbb
gs
add
enter
sub
pop
mov
das
ljmp
jp
fdivrs
gs
xor
loope
mov
repnz
jno
inc
xchg
enter
add
sbb
out
push
pop
les
movsl
aad
bound
mov
pop
sub
lock
dec
dec
adc
pop
sti
je
clc
push
sbbl
nop
dec
test
pop
adc
je
out
into
daa
cld
or
popa
xor
xchg
cmpsl
popa
jne
jb
jno
rorb
sahf
les
ficoms
inc
movsb
add
cmc
insl
xor
push
out
push
js
sbb
cmpsb
aaa
loop
aaa
mov
lahf
jmp
fimull
jle
fwait
into
mov
xchg
inc
je
out
dec
push
jo
sub
pop
movsb
dec
or
fwait
sbb
int
call
mov
add
dec
pushf
aaa
cmp
imul
movsb
dec
mov
adc
xchg
dec
adc
ror
std
repz
xchg
mov
jae,pn
mov
fdiv
or
xchg
add
mov
mov
jb
mov
xlat
cli
cmpsb
es
push
in
arpl
mov
jmp
lock
jae
adc
fildl
inc
xchg
imul
mov
jbe
movsb
lret
jp
scas
int
loopne
xchg
adc
int
mov
jbe
fdivrl
stc
or
cli
jbe
xor
faddl
xor
push
add
mov
cld
xor
pusha
jmp
in
sbb
mov
push
cli
mov
adc
mov
fldl
cld
or
int
or
aas
inc
and
mov
outsb
dec
test
dec
sbb
dec
and
out
gs
and
and
mov
test
sbb
fwait
lret
in
ss
imul
in
pop
and
pop
push
lods
into
scas
mov
out
jne
test
in
mov
dec
shlb
test
add
inc
repnz
jmp
sahf
mov
xlat
sbb
cmc
mov
call
push
nop
push
pop
aaa
add
mov
sahf
jae
push
mov
rol
jmp
incb
pop
repz
or
int
ret
cltd
mov
arpl
cwtl
subb
fstpt
fwait
xchg
pop
mov
subb
or
add
xor
add
push
dec
sti
ljmp
xor
into
xchg
lea
pusha
jp
push
mov
ja
imul
mov
cs
or
mov
push
adc
pop
cmp
fmuls
adc
dec
lea
jge
fcmovnbe
outsb
push
lods
cld
xchg
jg
addr16
lods
ljmp
pusha
fdivl
pop
push
daa
xchg
and
leave
mulb
cmp
pop
sub
sbb
hlt
mov
test
dec
inc
in
mov
daa
or
add
or
fs
mov
aaa
mov
call
and
aas
ds
dec
dec
fcoml
jp
mov
in
testl
cs
lods
addps
and
cmpsl
add
jecxz
jmp
adc
push
sub
adc
sti
or
mov
out
es
nop
push
mov
scas
jo
mov
xchg
fists
push
adc
in
jle
pop
push
adc
leave
adc
ds
imul
mov
dec
insb
int
push
cmpsl
outsb
cmp
sahf
test
dec
leave
xchg
ds
jo
into
xor
pop
and
cmp
or
mov
pop
mov
inc
out
flds
les
out
js
jmp
inc
test
fxch
mov
and
getsec
mov
mov
and
mov
std
inc
in
jnp
pop
xor
jno
xchg
add
push
sbb
popf
daa
ret
sub
ss
or
mov
div
cli
out
icebp
xchg
sub
fisttpl
xor
in
jle
cmp
test
sbb
gs
stos
jp,pt
inc
jmp
sub
jge
divl
mov
test
mov
mov
aas
and
sarl
sbb
ret
add
pop
and
dec
jmp
lods
loop
push
sbb
call
mov
repz
in
pop
xorb
jmp
push
mov
out
cltd
sub
ds
pop
add
subb
dec
iret
jecxz
lcall
mov
adc
inc
mov
mov
and
xchg
sub
aas
sahf
jecxz
loopne
jge
ret
adc
dec
xchg
mov
xchg
in
xor
inc
into
mov
leave
stos
jno
sti
jg
in
pop
jl
dec
pushf
xor
fs
fsubr
es
mov
daa
jo
pop
mov
pop
mov
dec
in
lahf
je
hlt
in
pusha
pop
subl
inc
pop
bound
dec
and
sbb
sub
dec
xchg
jbe
or
gs
push
xlat
mov
push
inc
lds
int
mov
repz
stos
rcll
movsl
jg
push
jge
push
mov
imul
xchg
xchg
scas
dec
inc
sbb
mov
jl
sbb
outsl
ret
enter
add
dec
sahf
pusha
xor
fisubl
jecxz
pop
ficoms
mov
out
and
mov
jecxz
call
jp
xchg
sahf
mov
mov
scas
xor
inc
fimuls
or
call
fs
fsubs
out
and
ror
push
jg
addr16
pop
and
mov
leave
aaa
fsubl
out
inc
negl
jecxz
ja
xchg
into
sti
int3
adc
xchg
arpl
js
mov
jns
shll
addr16
clc
jl
aaa
out
sub
repnz
int3
cld
lods
adc
lcallw
jl
int3
jne
jle
repnz
pop
or
hlt
add
pop
pop
sbb
clc
ficompl
aad
lods
ss
sub
movsb
mov
xor
xchg
das
mov
cmpsb
into
dec
inc
ds
xor
ret
dec
fsubrp
movsb
aas
push
sub
jp
xchg
mov
push
mov
sbb
pusha
xor
xorb
std
cmp
jg
or
inc
out
cli
add
out
mov
push
adc
jmp
inc
or
or
subl
aaa
sub
out
sbb
inc
hlt
repz
sbbb
popa
jmp
push
xor
add
push
data16
outsb
inc
or
cmp
cltd
out
jmp
int3
push
jle
add
sahf
insb
out
xchg
mov
dec
cs
inc
aad
mov
into
arpl
dec
imul
cmp
mov
adc
or
mov
insl
lock
cs
fucom
xchg
mov
cld
dec
arpl
or
pop
dec
cmp
imul
mov
movsl
pop
xchg
or
ljmp
call
js
fstps
ljmp
addr16
mov
add
lret
sahf
scas
out
adc
jns
xor
ljmp
jp
notl
aad
dec
or
mov
int
xor
add
inc
movsb
stos
insb
adc
cmp
out
mov
jb
mov
and
mov
repnz
inc
popf
xor
scas
mov
push
jle
test
mov
ret
imul
or
aas
fbstp
xchg
filds
mov
hlt
xchg
inc
aas
movsl
pop
cmp
in
sub
gs
push
rclb
mov
mov
dec
into
sub
mov
jge
cld
push
fwait
popf
mov
sbb
sub
xchg
inc
daa
add
aad
push
insl
inc
lock
jp
add
jbe
dec
adc
push
sti
pop
cmpsl
imul
lds
push
leave
or
xor
fs
lret
nop
sbb
mov
jne
sub
jb
les
add
imul
bound
dec
lea
pop
mov
lods
mov
xor
mov
daa
xlat
jl
jmp
outsb
es
jne
fwait
pop
push
test
dec
xchg
jle
lea
add
mov
mov
mov
ficomps
popf
mov
jo
jg
xchg
mov
testl
imul
inc
scas
xorl
push
fists
pushf
fdivr
cmp
cmp
inc
out
pop
std
jmp
xchg
mov
dec
mov
inc
enter
int3
push
lods
jnp
xchg
push
sarb
sarl
in
push
cmp
pop
dec
and
cs
lahf
lcall
outsb
push
inc
adc
push
fidivrs
jb
pop
clc
icebp
pop
sub
push
push
mov
int3
movsb
sub
repnz
inc
push
push
mov
pop
leave
pop
out
lret
jmp
sti
ret
int
jne
movsl
lock
mov
jmp
js
add
jno
lcall
adc
pop
int3
das
xchg
or
loope
push
mov
gs
fwait
pop
mov
rclb
cmpsl
pop
pop
and
pop
jle
aaa
jle
push
fidivs
icebp
in
xchg
leave
mov
dec
std
das
or
inc
add
push
sub
idivb
mov
stos
enter
mov
mov
jge
mov
mov
add
enter
das
icebp
push
push
and
mov
in
mov
dec
pop
shlb
add
in
push
fld
adc
arpl
inc
ja
in
jg
cbtw
jno
popf
lods
sbbb
push
jle
cs
push
cmpsb
rcrl
fs
push
in
shll
ljmp
pop
in
mov
int
xor
inc
test
mov
jmp
or
pop
imul
shrl
pop
xchg
dec
inc
fstps
xchg
push
mov
flds
loop
push
je
jno
cmp
inc
in
mov
mov
jmp
jns
push
xchg
jbe
rcrl
daa
les
or
filds
add
or
sub
in
pop
mov
pop
jnp
push
sub
push
xlat
popa
cltd
pushf
pop
sti
mov
pop
dec
sbb
sub
out
sti
mov
into
add
or
nop
cs
xor
inc
sub
daa
fimull
outsb
cmp
shlb
xchg
fidivrs
bound
jbe
inc
push
mov
cwtl
popa
or
in
stos
clc
stos
sahf
sti
lods
ret
in
mov
in
push
jne
in
es
jmp
mov
jl
add
pop
and
test
mov
repz
sahf
mov
xchg
push
xchg
push
pop
xor
pop
inc
out
push
lods
arpl
lock
inc
popa
ljmp
xchg
adc
push
xchg
rsm
jnp
jecxz
xlat
subl
add
jo
or
adc
rcll
stos
add
sti
addr16
test
jle
jns
adc
adc
xor
push
mov
ss
divl
sub
lret
aam
lcall
data16
stc
std
sub
imul
scas
in
push
jl
imul
push
stos
or
add
outsl
test
fwait
xor
push
iret
xchg
mov
insl
or
das
cmp
dec
outsb
or
pop
push
ja
movsl
and
daa
pop
sbb
cmpsb
push
pop
imul
push
mov
adc
repz
icebp
fdiv
sahf
inc
xlat
dec
in
cmp
addr16
cwtl
ljmp
or
sbb
bound
cmp
cmpb
lcall
mov
test
sahf
sar
and
push
insb
xor
rcll
pop
push
push
addr16
int3
idivb
pop
fxch
adc
mov
xor
cmp
pop
add
mov
outsb
mov
pop
data16
sub
mov
cltd
shlb
adcb
mov
or
jg
mov
dec
sub
push
in
mov
xor
sbb
push
lods
cltd
int
sbb
mov
daa
dec
out
xor
mov
mov
inc
test
movl
pusha
call
lods
adc
lret
inc
mov
popf
mov
pop
lods
sub
xchg
cltd
loope
cli
xchg
inc
jo
loop
and
mov
hlt
inc
daa
bound
stc
test
pop
into
xchg
add
mov
gs
mov
and
mov
fs
add
dec
mov
movsb
repnz
cmpsl
mov
in
cmpb
dec
mov
addr16
mov
adc
lea
lock
xor
shr
stos
outsl
mov
jmp
out
std
sub
jl
push
lret
pop
jecxz
pusha
push
iret
imul
mov
cmc
add
int
xchg
outsl
sbb
mov
mov
inc
jmp
push
mov
stc
data16
int
stc
cmp
xchg
mov
pop
push
test
popa
loop
fsts
cmp
mov
outsl
mov
lret
push
jne
sbb
jnp
test
lods
sub
cmpsl
ljmp
pop
mov
es
mov
mov
pop
mov
in
cmpsl
movsb
cmc
mov
mov
out
or
push
mov
lods
push
cmp
loopne
call
in
adc
fwait
test
xor
mov
push
das
xor
hlt
pusha
push
daa
xchg
hlt
shrb
ret
outsb
xlat
mov
sub
sbb
xor
push
xor
and
xchg
lret
jge
mov
cltd
xlat
sub
jp
sub
jne
xor
jbe
icebp
sub
dec
xor
pushf
imull
insl
sub
lea
adc
sbb
xor
cmpsl
or
dec
mov
push
jle
mov
sarb
sbb
out
lock
sub
aad
push
scas
mov
hlt
inc
add
and
push
inc
add
ds
mov
lods
shlb
and
popa
dec
stc
pop
jo
ret
enter
dec
in
mov
test
pop
jle
fcompl
fstpt
popl
aad
pop
cli
in
inc
mov
dec
mov
testb
idivb
dec
push
mov
fcom
aad
mov
or
fstpl
dec
rorl
push
popa
lea
loope
cmp
mov
xor
mov
ret
adc
jne
mov
fs
ljmp
xchg
pusha
push
cmp
add
jb
addr16
iret
xchg
fistl
pop
test
arpl
push
aam
jns
lahf
out
xor
mov
pushf
sub
sbb
andb
lods
and
adc
xchg
sub
and
clc
js
das
push
jg
xchg
cli
mov
xlat
cmp
or
add
fdivl
repz
out
jecxz
sbb
jns
packssdw
xorl
sbb
jb
clc
cmpsl
cmp
pop
pop
pcmpgtb
into
into
flds
mov
fcmovnu
movsl
cmpsl
add
enter
adc
jo
adc
je
adc
lret
push
repz
cli
mov
scas
mov
dec
jge
push
stos
jbe
mov
fcmovnu
shl
mov
push
fimuls
loope
add
push
fildll
lret
ss
jge
sub
ret
push
xorl
ret
icebp
rorb
xchg
mov
lcall
pop
jmp
movsb
add
imul
inc
or
mov
mov
popf
in
xor
xchg
outsb
jne
push
xor
inc
sub
rclb
mov
and
pop
jo
dec
ret
mov
out
and
cmpsl
pop
dec
test
lret
lds
add
ret
daa
pop
cli
mov
jmp
mov
add
or
int3
jnp
lahf
hlt
add
pushf
iret
mov
xchg
lea
and
dec
mov
xor
cmpsb
lahf
cmc
push
rolb
push
leave
lds
cmp
mov
les
inc
jbe
or
mov
and
ljmp
enter
test
pop
sbb
and
clc
adc
mov
xchg
pushf
sbb
inc
icebp
aaa
jnp
mov
mov
cmp
add
cmp
mov
mov
add
divb
dec
mov
add
sbb
fwait
push
pop
ss
xor
inc
mov
mov
cmp
inc
xor
pop
xor
mov
and
adc
mov
daa
popf
inc
int
push
pop
push
das
adc
cmp
jo
fwait
ret
or
xchg
loope
std
inc
xchg
jns
ret
cltd
xor
scas
call
adc
and
leave
dec
mov
mov
push
aaa
push
loope
push
sub
insl
cld
lock
aas
sahf
xor
sbb
jo
notb
pop
cmp
cmp
push
dec
mov
push
addr16
inc
lock
stc
rolb
sbbl
sbb
mov
inc
fwait
lcall
add
xor
pop
lea
test
sbb
xlat
cmp
pop
jno
xchg
jns
xlat
jp
cli
mov
rcrl
mov
xor
inc
enter
jae
and
push
aas
and
int3
pop
xor
push
adc
roll
jae
inc
dec
les
outsl
or
les
mov
repnz
out
push
notl
idivl
mov
rolb
jmp
mov
mov
xchg
ljmp
and
jmp
into
sbb
test
inc
adc
dec
dec
cmp
ret
dec
mov
jg
arpl
and
jmp
sub
loop
test
push
lds
in
jno
into
cmp
into
sbb
das
fwait
dec
or
and
jnp
std
aad
xorl
lds
push
fwait
pop
push
inc
out
pop
clc
out
sub
loopne
inc
in
inc
std
mov
cmp
xor
mov
jecxz
out
int
cwtl
xor
dec
jno
outsl
mov
das
clc
xchg
lds
repz
test
xlat
mov
ret
pop
jnp
jmp
dec
imul
std
icebp
pop
das
push
arpl
cwtl
std
stc
insb
das
sub
xchg
pop
mov
outsb
mov
push
sbb
test
mov
aas
addr16
lcall
mov
sub
dec
cmpsb
les
pop
insl
lea
jb
scas
sbb
loopne
mov
cmp
jne
cmp
push
imul
rcrl
add
or
push
loope
pop
test
aam
add
mov
lahf
mov
adc
cli
push
icebp
outsl
fisttpl
rcrb
push
punpckldq
rolb
in
and
cmpsl
mov
inc
clc
mov
pop
dec
mov
mov
rcl
test
sub
sti
test
jp,pn
decl
inc
xchg
subl
nop
push
sub
fnsave
jne
mov
lea
mov
repnz
xor
orl
cmc
out
add
add
icebp
popf
push
adc
mov
mov
sub
rcll
xor
lds
add
push
push
mov
test
in
sub
mov
inc
push
lea
or
inc
xchg
mov
pop
sarb
jl
out
cmpb
dec
loop
xor
mov
adc
mov
inc
lret
rcl
jnp
cmp
cli
inc
fdivl
popa
jbe
sub
mov
ds
xchg
push
lock
adc
xor
dec
mov
jb
stc
xor
shrl
adc
insb
cltd
mov
sub
icebp
cmp
jp
repz
jb
push
repnz
leave
adc
ror
imul
xor
ljmp
loopne
lret
or
push
into
jb
pop
mov
inc
sub
mov
and
jg
jg
sbb
xchg
push
ljmp
xor
orl
rcr
or
out
push
es
adc
dec
add
sahf
push
jo
sub
push
or
shlb
fisttps
loope
xlat
sub
sub
je
or
insl
sub
andb
or
out
repz
or
daa
out
push
and
mov
iret
sti
rcrb
push
das
adc
frstor
pop
in
in
mov
sub
shlb
rorb
test
adc
iret
mov
dec
cld
pop
mov
insb
loop
sub
adc
push
scas
adc
and
adc
mov
fbld
cmp
pop
cmpsl
fimuls
sub
fwait
or
sub
frstor
mov
mov
inc
xchg
out
pushf
push
rclb
loop
bound
imul
pop
xchg
or
stos
pop
add
divl
test
mov
mov
aam
jge
lds
fdivs
cli
lods
ret
test
mov
xlat
ss
ficompl
pop
lods
jns
inc
or
jle
arpl
xlat
jmp
adc
add
cmp
mov
mov
sbb
dec
cld
or
movsl
movsl
scas
add
enter
lods
sarb
xchg
popf
cmp
int
sub
xor
mov
int3
out
fsubrp
mov
mov
dec
mov
int3
in
or
icebp
xchg
mov
into
or
dec
icebp
fs
cmp
movsl
lahf
xchg
cmp
mov
push
push
mov
mov
jmp
jecxz
xchg
addl
cli
cli
mov
inc
mov
call
jae
sub
push
sbb
imul
dec
inc
xchg
je
pop
xor
scas
xchg
xchg
mov
ficomps
dec
push
or
mov
pop
out
ss
mov
xlat
test
pop
mov
add
mov
aam
add
gs
shrl
jno
call
xchg
call
jp
loopne
enter
mov
mov
xor
or
out
sarl
jo
negl
push
xor
pop
or
in
orb
and
outsl
nop
cs
sub
jp
lahf
loope
stos
jge
aad
fisubl
inc
js
push
dec
insb
push
rclb
aas
shl
mov
jns
push
push
inc
dec
cmp
adc
mov
and
fwait
add
or
jno
or
fldt
xchg
int3
ret
push
xchg
clc
lods
xchg
and
out
outsl
cmp
mov
push
scas
scas
aas
cld
jne
or
dec
xchg
mov
stos
cli
pop
sbb
js
or
mov
aad
nop
enter
adc
mov
rolb
mov
rorb
inc
in
inc
adc
jmp
ss
xchg
enter
test
xchg
les
sbb
inc
dec
lret
inc
icebp
movsb
loope
sbb
mov
scas
xchg
jne
xchg
mov
repz
das
movaps
repz
int
mov
in
imul
loop
mov
jo
xor
lods
lcall
clc
lock
mov
lock
fisttpl
std
mul
jmp
cmp
and
jno
sbb
daa
cmp
int
jecxz
sbb
xor
outsb
mov
aas
inc
jno
mov
insb
and
inc
sbb
filds
pop
mov
pop
popf
popf
testl
pop
pop
negl
push
cli
mov
xchg
add
pop
cmpsb
popa
push
jecxz
inc
xchg
scas
pusha
hlt
or
ficoml
jmp
sub
xchg
imul
rorl
jae
test
jbe
test
fwait
push
fdivrl
or
sarb
or
test
testl
mov
push
std
add
push
and
adc
or
movsb
xchg
cmc
dec
jecxz
mov
adc
mov
rorl
jnp
add
adc
mov
xchg
jecxz
jp
dec
dec
fildll
test
out
jne
push
jb
cmpsl
inc
das
xor
jge
jle
sbb
lret
adc
fwait
jno
or
jl
dec
inc
sbb
push
dec
aad
popa
and
pop
loop
repz
fidivs
scas
pop
inc
push
fsubr
jns
adc
mov
push
xlat
icebp
nop
outsb
lcall
pop
hlt
ljmp
stos
imul
sbb
adc
rcrl
add
pop
ret
dec
xchg
pop
lahf
add
push
dec
clc
xor
pop
movsl
test
fs
loopne
repz
mov
or
test
mov
lods
aad
and
aaa
loop
rorl
jo
ret
jle
hlt
jae
add
cld
xlat
pop
jo
dec
into
loop
dec
add
loope
cli
bound
enter
jno
cmp
int
rcrb
packuswb
mov
xchg
inc
dec
push
icebp
mov
fs
push
mov
jge
xchg
add
add
sbb
and
push
xor
inc
pop
xor
jbe
cwtl
aad
ret
sar
aaa
pop
add
outsl
lock
add
sub
in
xor
movb
or
cwtl
mov
adc
mov
mov
mov
cld
and
pop
outsl
mov
sbbl
in
push
jle
mov
mov
pusha
jae
in
adc
inc
or
sbb
test
add
imul
loop
sub
mov
mov
cwtl
pop
dec
mov
cmp
add
aaa
sub
xor
daa
call
cmp
inc
sub
ss
jle
movsb
test
mov
pop
pop
cmpsl
lods
hlt
jp
cmp
ja
popf
cmp
cltd
add
es
out
push
cmp
pop
sbb
je
es
bnd
out
ss
pop
push
mov
push
test
fistps
push
enter
in
daa
xor
sbb
lret
inc
cmpsl
nop
lods
in
call
mov
inc
arpl
sti
lea
rcrb
sysret
test
fucom
jmp
mov
mov
lock
hlt
jmp
inc
pop
push
cmpsl
fidivl
incb
dec
and
cmovae
out
push
mov
add
mov
aas
xor
cli
adc
xchg
or
pop
push
xor
ret
xchg
push
dec
stc
inc
mov
lret
push
or
ljmp
js
insb
or
sbb
adc
mov
andl
pop
stos
pop
fnstsw
ret
push
int
jmp
cmp
push
xlat
ret
jp
push
movsl
aas
decb
fisubs
pop
and
mov
adc
loope
and
cmp
test
mov
push
xor
push
stos
lahf
or
mov
push
mov
adc
faddl
inc
out
jns
add
mov
dec
fwait
icebp
sbb
test
in
fstpt
shlb
or
dec
sti
mov
or
lds
or
mov
or
daa
cltd
mov
push
rclb
int
sub
pop
xchg
js
arpl
cmpsl
mov
and
jl
ss
pusha
jbe
mov
inc
xchg
jl
sbb
push
lods
mov
mov
xchg
cmp
test
jnp
mov
push
lahf
int
pop
xor
ds
int3
aaa
cs
push
xchg
out
xchg
out
sti
pop
aas
jl
gs
adc
ret
out
in
mov
add
movsb
pop
in
mov
or
xchg
mov
lods
out
cmp
popf
sub
pop
dec
adc
cmpsb
dec
leave
mov
sbb
sbb
jle
sahf
cmp
mov
stos
negb
das
outsb
out
repnz
xor
pushf
mov
mov
xchg
dec
push
inc
cli
cmp
mov
imul
dec
pop
sbb
xorb
ret
fbld
inc
cli
test
loop
sbb
jnp
lds
and
add
sbb
sbb
movsl
mov
or
shll
pop
mov
and
bound
jbe
add
pause
adc
pop
sub
mov
aad
mov
mov
lcall
or
aaa
cltd
mov
xchg
dec
mov
movsb
mov
fwait
jae
dec
pop
arpl
and
in
pop
nop
test
or
lock
cmp
roll
lret
mov
cltd
mov
pop
inc
mov
into
pop
test
mov
cmpsb
mov
cmp
stos
mov
test
xchg
mov
sub
je
idivl
cwtl
lret
and
dec
cmp
and
adc
or
sub
addb
xchg
xchg
jg
mov
inc
adcl
jecxz,pn
sbb
shr
mov
jmp
dec
push
mov
test
dec
mov
cmp
in
jl
fld
inc
repz
aas
call
jo
push
imul
pop
or
lcall
jno
jb
mov
cmc
mov
fcompl
or
imul
pusha
xor
mov
pop
movsl
jne
imul
cltd
adc
mov
jb
lret
push
lret
xchg
fisubrs
add
popf
addl
mov
mov
in
call
dec
nop
inc
ljmp
push
mov
or
stc
xchg
repz
mov
or
cli
jae
push
into
mov
inc
iret
xchg
push
js
inc
sti
imul
test
xchg
js
stos
lock
scas
dec
dec
mov
push
out
mov
and
insl
data16
imul
adc
push
fcom
add
add
rcr
test
dec
dec
inc
mov
aaa
pop
and
je
movsl
push
inc
push
mov
mov
adc
shr
imul
lods
leave
rcrl
cld
fcmovu
mov
scas
fcomps
or
xchg
sbb
test
iret
ja
rorb
push
stc
lret
or
mov
repz
imul
and
lock
nop
sbb
lods
mov
ljmp
mov
or
or
repz
stos
xor
int3
pop
adc
ficoml
fstps
pop
inc
sub
mov
jl
dec
pushf
jecxz
mov
or
out
aas
fs
push
andl
hlt
stos
jb
mov
inc
lahf
sbb
or
stc
inc
cmp
xor
pop
cmp
sub
lds
cmp
shl
add
jg
sub
mov
jmp
ds
fs
xor
and
fmull
mov
mov
push
popf
pop
and
lock
and
cmp
ret
inc
sarl
xor
adcb
test
outsb
adc
adc
mov
mov
cmp
pop
xlat
dec
lods
inc
stc
cmp
les
les
add
cmp
sbb
add
cltd
or
lods
mov
jae
cli
mov
jecxz
pop
jp
femms
imul
cmp
dec
mov
sub
outsb
hlt
jnp
or
jb,pn
sbb
or
mov
sub
es
mov
and
outsb
mov
daa
nop
ljmp
mov
or
imul
push
out
insb
std
insb
fcoms
and
sti
jge
inc
sbb
xor
xchg
in
mov
cmc
xor
nop
fistps
lea
mov
lock
sub
shll
xor
jne
dec
mov
sbb
data16
test
xor
sarb
lcall
std
add
fwait
lret
push
inc
sub
mov
push
sahf
sub
push
inc
xchg
ret
adc
push
pop
adc
and
inc
nop
dec
mov
clc
xchg
iret
hlt
int3
repnz
data16
pop
xchg
loope
daa
call
fimuls
or
and
cmp
out
sub
mov
mov
ja
pop
mov
mov
lcall
mov
dec
je
dec
ret
cmp
xchg
stos
fistl
cld
push
fnsave
nop
aaa
sub
pop
sub
adc
and
cmpsl
add
mov
push
inc
gs
mov
stc
and
dec
mov
cmp
aam
pop
add
dec
bound
loopne
cltd
cmpsb
push
adc
pop
test
push
stos
out
and
in
test
jmp
clc
movsb
fcmovnu
sbb
enter
mov
out
mov
movsl
lret
pop
daa
arpl
ret
out
push
pop
cli
into
mov
adc
test
cmc
pop
pop
jae
stos
loope
add
bnd
stc
mov
fbld
test
mov
mov
push
fstpt
repz
fwait
sub
aas
mov
pop
frstor
sbb
aaa
popf
rolb
pop
pop
rorw
xlat
sbb
cmp
cmpl
or
xor
popf
clc
out
stos
sbb
call
mov
sub
jl
pop
or
add
les
lcall
xchg
imul
xchg
aad
cmp
xchg
movsl
outsl
add
in
mov
les
mov
add
repnz
pop
pop
push
popa
push
mov
pop
fisubrs
add
cmp
push
js
in
jae
fimuls
jecxz
jge
das
mov
les
lahf
popl
mov
mov
hlt
adc
scas
daa
rcrl
popf
add
adc
push
in
cmp
pop
fbld
dec
and
mov
loop
fstps
adc
imul
xor
push
push
rolb
je
cli
aaa
jae
insl
push
aad
jmp
cli
ret
stc
cmp
jp
dec
pop
pop
sub
inc
adc
enter
adc
pop
push
jmp
sbb
addr16
flds
mov
flds
sub
repnz
out
mov
std
les
cli
xor
cmp
xchg
lcall
adc
popa
jge
in
cmp
xlat
mov
iret
lods
orl
and
pop
add
adc
dec
ljmp
mov
stc
and
pop
cmp
mull
pusha
mov
fxam
and
in
cmp
sub
orl
sub
push
sti
insl
dec
pop
es
dec
push
mov
nop
test
xor
push
sti
out
jne
icebp
or
or
inc
test
scas
push
cmc
mov
or
out
mov
shrb
add
adc
jmp
cli
mov
in
out
add
or
ljmp
pop
test
arpl
sub
cmp
sti
mov
stc
adc
inc
pushf
or
in
dec
and
test
mov
loope
rorb
and
imul
jnp
int3
pop
xor
inc
mov
xor
and
movsl
ret
lret
pusha
nop
cmpsl
cli
xchg
jecxz
jo
cld
test
push
testl
out
popf
push
xor
xchg
test
push
je
int3
hlt
in
pusha
ret
ja
jb
jge
and
and
lock
enter
jns
push
out
lret
int
jl
fcomps
cwtl
inc
ja
aaa
add
adc
ljmp
dec
or
in
adc
and
and
mov
int3
mov
in
test
scas
and
mov
mov
inc
push
testb
rolb
add
sub
cmpsl
test
pushf
push
jl
adc
mov
lahf
mov
pop
mov
pusha
pushf
sbb
inc
mov
pop
idivl
out
leave
clc
jle
rol
aaa
out
loopne
lds
sbb
mov
movl
push
jb
jl
cmc
jp
outsl
pop
cmp
dec
enter
mov
icebp
bound
jbe
mov
aad
dec
out
push
sub
fnstsw
data16
rol
mov
and
sti
sbb
add
and
stc
inc
dec
imul
mov
mov
cmc
adc
js
cmp
push
aam
sub
push
xlat
mov
or
pop
imul
pop
jg
or
xor
iret
mov
daa
adc
stos
mov
pop
dec
fwait
testl
flds
xor
xor
aas
or
mov
dec
subl
inc
lods
jmp
pop
sub
inc
decl
std
pusha
rcl
inc
push
xor
xor
dec
mov
insl
in
sbb
cmp
sub
popa
popa
push
push
dec
adc
and
xor
jecxz
pop
pop
gs
pop
repz
xor
pop
dec
mov
mov
add
aaa
les
sub
add
push
dec
fptan
movsb
mov
inc
lahf
jo
rcrb
mov
je
mov
in
xchg
sbb
xor
xchg
lahf
pop
ljmp
hlt
push
daa
dec
int3
fistl
mov
push
scas
pop
mov
mov
jp
or
pop
divb
xchg
dec
adc
dec
lock
loop
nop
outsb
in
lods
lcall
shl
mov
sub
fdivr
lods
shlb
inc
cmpsb
es
outsb
lahf
or
cmp
aad
cli
pop
lar
mov
mov
andb
iret
js
jo
or
jno
push
lcall
sub
adc
clc
int
sahf
lds
fbld
jle
xor
arpl
inc
pop
loopne
sub
popf
jmp
sub
add
out
pop
sbb
push
lcall
ret
push
stos
inc
imul
insb
subb
cmpb
or
jns
lcall
fyl2xp1
shlb
je
in
sbb
mov
data16
add
push
testb
mov
pushf
pmuludq
mov
repnz
decl
adc
in
xchg
fs
lods
es
or
sub
pop
xor
mov
repnz
mulb
push
pusha
mov
xor
xchg
cmpsl
sbb
mov
add
mov
jg
fwait
cmpsb
in
dec
loopew
cmpsl
ss
mov
mov
adc
jg
adc
mov
mov
or
repnz
test
lods
movsl
insb
jp
xorb
stos
and
ds
sbb
jmp
cmpsb
cmc
mov
inc
xorl
lret
pusha
push
inc
rorl
pop
imul
ficoms
dec
or
addb
int3
add
mov
push
loopne
out
adc
push
pushf
or
sub
nop
scas
lds
dec
adc
fsubrp
in
cmpsb
sub
push
jp
aam
sub
divl
ret
mov
es
cmc
and
jbe
cwtl
adc
movsb
adc
enter
push
fbld
repnz
mov
sub
pop
xchg
dec
insb
test
cwtl
sub
mov
into
std
push
and
xor
dec
dec
mov
push
push
push
testb
hlt
xlat
imul
sub
stc
sub
insl
and
and
loope
jnp
mov
hlt
fstpl
fsubrs
stc
sub
pop
sbbl
mov
adc
cmp
adc
sub
in
rorb
mov
mov
cs
and
rcr
mov
or
insl
inc
pop
mov
push
push
xlat
shlb
andl
mov
pop
sub
push
pop
or
mov
pop
add
or
pop
jge
in
bound
or
in
pop
cmp
adc
data16
aam
pop
arpl
add
jbe
xor
dec
xchg
mov
sub
push
shll
push
adc
xor
scas
xchg
ror
nop
bound
sbbb
push
inc
mov
loopne
test
outsb
xor
jbe
jle
pop
daa
jmp
pop
add
mov
addr16
jge
sbb
hlt
add
mov
std
daa
mov
and
mov
sbb
shll
sbb
pop
scas
cltd
jp
sbb
hlt
mov
lods
fiadds
xchg
or
call
popf
add
or
or
negl
sub
gs
fstpl
xchg
push
sbb
adc
pop
mov
add
mov
sbb
xchg
jp
hlt
mov
cmc
pop
push
stc
cmc
mov
mov
xchg
mov
lret
test
mov
mov
sbb
cmp
xchg
lea
movb
pop
test
sub
outsb
and
cld
cli
xor
dec
mull
dec
sub
push
or
mov
fmuls
add
mov
nop
mov
std
hlt
ret
dec
inc
js
cmp
or
mov
out
fstl
es
es
mov
push
and
sub
add
mull
call
lcall
dec
fbld
xor
in
ficoms
sbb
es
xlat
jns
mov
mov
mov
mov
push
lahf
xlat
vrsqrtps
mov
ds
stos
fs
push
sahf
sub
or
movsl
jge
les
out
jg
pop
inc
daa
fcmovne
fs
cmp
adc
lahf
fimuls
fcoml
subl
mov
jnp
inc
sub
fcomps
loop
outsb
cmc
add
add
outsb
xchg
pop
xor
cmc
movsb
jmp
dec
inc
int
jp
jo
sbb
cmpsl
xchg
mov
or
divb
fs
and
xor
sti
pop
add
mov
jo
and
jle
sub
jbe
icebp
pop
push
fidivs
mov
subl
push
ss
mov
fmull
int3
cmp
test
and
repnz
sahf
cwtl
in
jnp
loopne
push
push
dec
mov
cld
adc
lock
out
jmp
repz
mov
fs
push
orl
add
fs
fsubr
sub
sarl
fwait
pusha
adc
mov
call
stos
sbb
pop
xchg
pop
nop
dec
jns
sar
sbb
stos
mov
sub
mov
movsl
fcompl
xchg
rcr
stos
pop
pushf
mov
call
jb
ds
jge
inc
xchg
pop
lcall
mov
pop
movsb
cmp
xchg
enter
sahf
movsb
mov
dec
dec
sahf
loopne
addr16
sub
out
add
add
cmp
push
imulb
mov
stc
mov
cwtl
mov
fcmovnbe
js
or
cmp
clc
and
roll
cmc
mov
pop
sahf
xchg
scas
mov
and
pop
jbe
push
fcompl
or
lret
aas
cltd
jae
lods
xor
lret
adc
fsts
xchg
dec
out
pop
mov
add
jo
das
clc
cld
cld
inc
fdivrs
push
fisubrl
or
insb
mov
jmp
mov
pop
jecxz
loope
fildl
repnz
jmp
cs
mov
mov
ss
scas
nop
add
ret
mov
aam
inc
sbb
mov
movsl
dec
jno
mov
inc
and
mov
mov
mov
lds
gs
unpcklps
mov
sub
fwait
sub
mov
or
icebp
and
mul
mov
xchg
ficoml
in
adc
popa
test
popw
xchg
data16
cmc
out
sbb
sub
mov
inc
enter
out
mov
out
ds
lds
movsl
mov
sub
cmpsb
outsl
jb
insb
add
mov
mov
out
sub
xchg
cmc
loop
pushf
ds
mov
jle
or
add
mov
cltd
mov
loopne
xor
add
xor
mov
sub
sarb
dec
mov
js
out
rorl
enter
fdivl
scas
lahf
bound
mov
inc
mov
daa
bound
jbe
pop
and
mov
pop
fimull
dec
into
xchg
cld
movsb
loope
pop
push
xchg
cwtl
std
loop
inc
icebp
mov
mov
adc
xchg
mov
push
in
pop
andb
clc
addr16
and
fidivs
loopne
lock
jmp
daa
pop
push
jno
push
xchg
sbb
push
xchg
mov
jae
outsl
in
inc
xchg
mov
xor
sub
sarb
mov
pushf
into
insb
out
inc
repz
in
pop
jns
sub
push
jne
popa
mov
mov
push
orl
repnz
xor
sbb
clc
into
mov
xor
js
and
fwait
jle
je
jp
cli
loop
int
sti
fdiv
xor
pop
jmp
insl
and
lahf
pop
sub
fiadds
out
aaa
js
sbb
mov
daa
xchg
sub
push
push
xor
rcll
nop
jecxz
add
add
cmp
data16
je
aam
xchg
ret
out
and
je
in
lahf
adc
mov
ret
jecxz
fmul
shll
pop
pop
sub
icebp
lock
adc
lock
shll
int3
movsl
xor
das
jg
in
hlt
sub
xchg
xor
in
sub
repnz
sub
std
jl
jns
mov
stos
call
push
push
pop
cwtl
and
xlat
dec
aaa
bswap
push
adc
push
imul
imul
or
push
sbb
inc
push
adc
adc
or
jno
stos
push
cltd
mov
sbb
fistpl
xchg
ja
addl
dec
in
scas
stos
adc
cmpsl
inc
aam
xor
cmc
mov
shrb
mov
xor
lcall
test
lods
xlat
cmp
mov
sti
bound
ret
jmp
mov
mov
pop
rcll
aad
loop
test
mov
add
xchg
xchg
jb
mov
pop
mov
xorb
leave
cmc
mov
pop
in
dec
sub
mov
pop
jmp
push
adc
loop
fnstcw
outsb
mov
mov
cwtl
mov
xchg
add
test
into
jge
xor
fldcw
push
xorb
pushf
xchg
stos
notl
insb
out
jle
mov
out
pop
mov
pop
out
jnp
inc
insb
scas
sub
pop
hlt
jl
adc
fdivs
stos
cmp
and
movsl
xchg
and
or
rclb
mov
jmp
stos
add
jne
movsl
int3
cmc
ror
movsl
stc
mov
or
cmp
jno
jl
cmp
movl
in
dec
mov
cmp
test
push
mov
dec
dec
mov
les
popa
xor
jae
sbb
inc
push
lods
imul
lds
mov
int
push
nop
push
pop
mov
aaa
jne
sub
lcall
xor
lcall
je
and
adc
out
xchg
xchg
fistl
enter
inc
shrl
mov
in
add
imul
repnz
in
xlat
lock
mov
adc
in
mul
pop
cmpsl
pop
jecxz,pt
inc
mov
cld
pop
jle
mov
scas
push
inc
or
fdivrs
aaa
add
push
cmp
push
jns
iret
insl
mov
in
or
and
movsl
leave
lock
decl
int
das
gs
scas
jb
sbb
xchg
mov
shlb
pusha
ror
outsb
mov
sub
aaa
sbb
inc
aam
xor
push
adc
in
lods
mov
sub
loopne
pop
sbb
push
es
je
mov
xor
add
subl
inc
mov
mov
test
jno
pop
loope
adc
or
pop
xchg
pop
scas
sarb
loope
add
pop
sub
or
pop
fstpt
addr16
or
ss
mulps
outsb
imul
dec
push
dec
test
xor
hlt
fwait
data16
xchg
jp
sub
nop
mov
fistl
mov
jno
scas
sub
inc
xor
popf
or
sbb
dec
daa
popl
mov
pop
scas
shlb
sti
fs
bound
out
rep
stos
lods
xchg
xorb
jecxz
inc
pop
imul
xor
pop
mov
lock
stc
inc
das
nop
idivb
test
popa
mov
inc
andb
outsb
jmp
in
ret
lcall
faddp
jnp
sub
mov
les
sbbb
jmp
sbb
nop
loop
and
or
mov
ret
push
imul
sbb
je
loopne
lds
sbb
jnp
fbld
pop
aad
lds
xchg
imul
sarl
fsubl
aam
rol
add
xor
sahf
pop
xor
mov
test
jp
push
inc
dec
mov
cwtl
dec
js
sub
lret
pop
jge
cmp
mov
fadds
push
in
jne
add
ss
mov
adc
mov
int
mov
dec
shll
mov
and
pop
rorl
push
sub
add
dec
or
hlt
sar
jecxz
arpl
fisubrl
mov
mov
decl
insl
xlat
in
pop
jge
fs
add
cmpsl
cmp
adc
dec
enter
jnp
inc
xchg
mov
mov
or
imul
stos
insl
lret
stos
std
jp
xchg
jle
jb
and
adc
cmpsb
cmpsl
bound
cmp
sub
cltd
and
iret
in
mov
xor
cltd
lahf
outsb
jmp
imul
inc
cmp
cwtl
gs
js
lock
mov
mov
mov
cli
mov
fs
push
cltd
cmc
xchg
push
fimull
mov
add
inc
adc
add
sub
push
and
sub
int
mov
imul
fs
hlt
fwait
sub
lahf
jp
cmpsb
xor
cmp
out
mov
pop
test
mov
call
addr16
jmp
int3
sub
imul
jge
shll
or
shlb
inc
scas
ja
xlat
jb
ljmp
test
xchg
or
arpl
jne
loopne
add
inc
dec
cli
pop
adc
fs
call
lahf
aas
stos
sub
insb
mov
pop
jmp
loop
cmpsb
inc
repnz
sub
sbb
fnsave
pop
sub
xor
cmp
push
and
pop
mov
movsb
ja
add
sahf
sub
ds
xchg
mov
loopne
push
ret
mov
jbe
dec
fwait
xchg
xor
pushf
stc
add
mov
jle
in
insl
add
cmp
lock
fcomps
cmp
mov
outsl
sbb
cmp
sbb
mov
test
xchg
aas
cmc
mov
mov
aam
pop
cmpsl
out
mov
inc
aad
loope
add
push
dec
mov
sub
rcrb
pop
push
push
rcr
sbb
pop
arpl
xchg
cmp
enter
push
js
and
cmp
dec
aam
mov
jne
xchg
or
movsl
fnstsw
call
mov
in
inc
aaa
fisubl
test
cmp
xchg
pushf
and
lcall
jecxz
les
xchg
pop
inc
add
adc
jl
data16
bound
jmp
lret
in
arpl
mov
in
ja
sub
push
lods
or
xor
lock
mov
shl
ds
adc
ret
cmovo
mov
ja
gs
xchg
insl
add
jno
pop
sub
cmp
xchg
xchg
insb
mov
xor
xchg
es
push
pop
jp
jno
inc
roll
jle
pop
scas
push
clc
jnp
nop
and
dec
.byte
sbb
mov
add
cmpl
idiv
xor
cwtl
dec
fstl
lods
pop
mov
enter
or
sub
scas
inc
push
xchg
mov
mov
sbb
pop
sbb
add
lock
xchg
imul
aad
pushf
ficompl
xchg
les
mov
push
jl
adc
scas
push
mov
pop
xchg
pop
outsb
fists
jnp
xchg
and
shrl
mov
testb
pop
lods
das
out
jne
leave
js
iret
dec
mov
iret
bound
and
jbe
and
mov
inc
cltd
loope
shlb
pop
fstl
adc
mov
clc
sbb
mov
lods
and
sub
imul
fmull
cld
adc
out
mov
ret
gs
mov
push
pop
and
ret
test
jge
dec
push
lahf
dec
aam
aaa
xor
cld
loope
add
dec
push
shrw
jb
out
stos
cmpsl
loopne,pt
call
and
add
add
sbb
call
mov
pushf
xlat
mov
dec
stos
cmp
push
mov
dec
mov
scas
daa
call
add
ds
roll
stos
xchg
adc
repnz
jl
push
xchg
mov
xor
xchg
sub
sub
push
aas
cmp
cmc
fnstcw
sbb
sub
lret
ret
shll
cs
or
das
lods
insl
subl
cli
xor
dec
mov
scas
jp
xor
ds
mov
xchg
mov
popl
repnz
jmp
sbb
adc
outsb
push
jl
fsubp
pop
shr
xchg
bound
js
inc
push
call
sbb
xchg
ror
jnp
sarl
jae
lds
pushf
mov
icebp
cmc
testb
xchg
mov
mov
xchg
xchg
inc
cmc
pusha
push
and
ret
test
movsb
adc
adc
aaa
or
aaa
adc
mov
lods
add
mov
pop
mov
sbb
ret
fistpll
jo
push
dec
js
fcmovb
div
xlat
cmpsl
in
filds
mov
in
adc
in
popa
jae
test
lock
stos
xchg
jb
sub
sarl
mov
push
cmp
add
adc
ljmp
sbb
fstp
gs
push
xchg
and
xchg
aaa
xor
movsb
pop
xchg
mov
leave
or
dec
mov
adcb
subb
adc
jmp
jo
jo
aas
gs
fst
mov
dec
aam
xchg
sub
push
mov
fidivrs
pop
dec
cli
adc
lahf
mov
in
pop
popa
sbb
sub
mov
movsl
pop
jle
sbb
xchg
aam
lahf
push
lods
addr16
test
mov
adc
pushf
mov
sbb
cmp
jmp
and
push
ljmp
jne
mov
mov
jb
jo
pop
int
inc
stc
dec
inc
add
jl
mov
jnp
pop
sub
pushf
jnp
jb
mov
cs
fisttpl
cmc
xorl
decl
cmp
jmp
js
jnp
xchg
push
shlb
popf
lea
mov
aaa
sbb
sub
loopne,pt
scas
ds
mov
and
dec
lea
inc
arpl
pop
dec
add
out
fwait
ds
movl
jge
popf
and
rcll
xor
dec
cmp
addr16
jns
es
addl
sbbb
dec
pop
aas
rcll
popa
mov
fisttpll
sub
aad
jg
ficoml
and
jg
loope
mov
jne
fs
sbb
in
insl
in
ja
testb
repz
shlb
sub
aad
dec
add
popa
push
xor
jg
std
cmp
pop
into
fcom
push
cmp
xor
cmp
push
pop
inc
cld
iret
pushf
das
add
repz
xlat
iret
je
out
fcomps
ret
and
cmp
aaa
xlat
adc
pop
jno
push
cmp
push
popl
jle
add
mov
mov
aas
in
and
ja
and
or
sahf
mov
fiaddl
push
rolb
addr16
mov
inc
mov
loope
out
xor
dec
push
xor
mov
mov
movsl
les
or
xchg
mov
lahf
test
pop
leave
cmp
test
das
cmp
and
and
dec
or
sbb
fidivrs
stc
jmp
out
or
sbb
daa
mov
enter
int
fwait
jb
and
out
out
lahf
and
adc
xor
push
cmp
test
rcrb
cmp
pop
cmp
iret
jo
lret
in
jecxz
test
ret
lcall
pop
filds
lds
xchg
ja
and
cmp
push
mov
mov
pop
push
imul
mov
or
cmp
outsb
dec
cmpl
fstpt
shrb
hlt
pop
sub
test
stos
ret
not
mov
or
push
jne
mov
mov
xchg
sub
dec
push
or
cmpsl
pushf
scas
mov
insb
scas
test
inc
es
add
cmp
int
jl
add
lcall
cld
insb
jne
cwtl
in
hlt
andl
rorb
dec
ljmp
jo
aam
dec
outsl
repnz
rol
imul
jo
or
mov
dec
stos
xchg
andb
cmpb
or
repz
dec
jmp
fcoms
btrl
stc
call
mov
out
dec
adc
sub
in
mov
sbb
jne
xlat
mov
adc
ret
or
dec
jne
push
es
xchg
roll
cmp
xchg
inc
mov
je
in
jle
push
adc
mov
outsb
rclb
cmp
cmp
pop
mov
test
sub
out
in
stos
outsb
xchg
loope
jno
aas
mov
cmpsl
scas
dec
lods
ret
add
scas
int
xorb
ljmp
loop
jno
or
xchg
rclb
loopne
rorb
int3
cmpsb
sbb
js,pn
xor
inc
cmp
jg
test
pop
inc
lods
jg
insb
inc
divb
test
iret
enter
in
xchg
mov
fwait
pop
arpl
mov
fwait
or
ficompl
add
pop
cmp
jae
push
mov
popa
fcmovnbe
jnp
punpcklwd
int
push
data16
sti
ljmp
sub
mov
push
dec
push
call
arpl
out
scas
and
out
push
aad
mov
outsb
push
xchg
imul
inc
push
mov
xlat
mov
jmp
pop
or
add
mov
mov
fsubs
mov
jb
cmpsl
out
and
inc
and
push
xor
imul
jbe
fdivl
cmpsb
sti
test
sub
or
lcall
sbb
in
add
adc
into
stc
add
lods
and
addr16
dec
out
sub
shlb
mov
lret
add
mov
xor
data16
inc
cmp
stos
call
push
cmp
mov
inc
jns
je
add
or
movsl
scas
add
push
and
xchg
movsl
inc
aad
fnsave
inc
fnstenv
sub
and
mov
pop
fcompl
jecxz
hlt
or
dec
inc
mov
inc
jge
ja
loope
cmpsl
insb
data16
outsb
ret
cwtl
mov
mov
pop
add
push
ficoms
and
dec
pop
add
xchg
pop
jg
test
mov
add
add
jecxz
pop
inc
ss
xor
jge
ljmp
popf
or
jmp
cmp
xor
pop
dec
push
loop
xchg
inc
shlb
jecxz
cmp
imul
or
subb
pop
add
lds
pop
stc
and
rolb
hlt
sbb
nop
test
test
push
popf
adc
sub
xor
xchg
das
fwait
push
or
mov
bound
outsb
sbb
add
cmp
stos
pop
aaa
loop
sub
inc
mov
push
loope
inc
mov
cwtl
xchg
adc
lods
sub
outsl
sbb
lock
xor
in
std
pop
xchg
cmc
lods
push
xchg
aam
lahf
lods
dec
incb
dec
or
outsl
daa
fnsave
adc
aaa
out
fucomi
popf
popf
fildll
cs
inc
loope
mov
xor
xlat
cli
xchg
cmc
rcrb
incl
jae
push
lret
fcmovu
aam
insb
fs
ficoms
insb
or
fildl
inc
popa
addr16
repz
repz
jge
jno
dec
cltd
mov
insl
lret
pop
mov
inc
cmp
jno
push
inc
out
leave
sub
inc
inc
lea
pushf
shll
stos
cltd
clc
insb
jno
sbb
out
andl
sub
mov
jb
in
jae
stos
cwtl
lcall
push
jnp
icebp
rorl
inc
lret
xlat
cld
adc
mov
es
pop
out
cmc
push
sbb
out
dec
xchg
cmp
adc
out
sub
roll
jmp
cmp
pop
pop
mov
inc
imul
pop
stc
xchg
lock
std
mov
dec
sbb
xchg
out
test
push
mov
out
mov
jnp
loope
bnd
pop
loop
lock
divb
push
test
inc
jnp
rcll
push
lock
fwait
daa
inc
aad
xchg
inc
cmpb
xlat
mov
cwtl
push
popa
xor
pop
outsb
clc
sub
pop
imul
cmp
xchg
popa
xchg
mov
pop
ss
push
jg
jg
and
push
jle
ja
outsb
dec
pop
sub
xor
lcall
int3
mov
jp
shr
fstp
mov
mov
fs
sti
jnp
adcl
sub
mov
cli
sbb
fidivs
enter
in
mov
pop
mov
sti
pop
js
xor
loop
dec
popa
mov
stos
fisubrs
enter
pop
outsb
adc
inc
insl
jmp
sbb
dec
adc
push
and
add
out
or
out
mov
loop
je
xor
xor
jle
mov
lods
jno
ljmp
in
xchg
push
leave
xor
mov
out
cmp
xor
xor
aad
xor
addr16
inc
cmp
add
mov
adc
dec
push
push
push
stos
movsb
xchg
lahf
lock
loopne
out
mov
test
mov
xor
testb
and
cmp
movsb
add
jns
xlat
ja
int3
dec
pop
push
sarb
mov
push
cmc
jne
add
popa
cmpsl
ss
pop
xlat
je
jmp
stos
add
jge
cwtl
movsl
cmc
jl
cmp
out
out
pop
xchg
push
push
outsb
pop
mov
dec
pop
pop
inc
ret
aam
pop
lahf
push
jns
pop
roll
lea
push
movsb
mov
add
aaa
mov
lea
sbb
mov
inc
pop
insl
pop
mov
out
cmpsb
popa
jnp
push
jae
mov
inc
and
sahf
sbb
out
xor
loopne
mov
sub
cmpsl
mov
jae
out
dec
es
jmp
fists
pop
ret
pop
sbb
addr16
mov
out
push
jno
jmp
gs
sti
sub
push
push
dec
or
test
scas
pop
xor
mov
nop
xchg
sbb
sub
fdiv
and
movsl
inc
fwait
lret
mov
xchg
shr
jecxz
das
es
adc
js
mov
js
out
dec
nop
testl
xchg
mov
das
sub
xor
adc
scas
sub
bound
daa
push
jne
pop
sahf
mov
dec
lret
add
sbb
es
fdiv
dec
ljmp
insl
adc
popf
fsubs
mov
icebp
lods
sbb
popa
pop
mov
pop
sbb
mov
mov
mov
daa
clc
stc
adc
rcll
test
cmpsl
and
mov
rcll
push
lret
out
jge
cld
std
jb
sbb
add
cmpsb
scas
add
stos
add
fimuls
popa
sbb
dec
rcrl
inc
xor
idiv
adc
mov
mov
pop
mov
in
into
add
in
test
pop
inc
mov
mov
stc
mov
add
lds
pop
stc
and
dec
frstor
inc
jb
clc
js
stos
jge
sbb
xor
dec
add
popf
jmp
mov
into
std
xor
test
push
jns
iret
dec
add
mov
cwtl
mov
adc
sahf
iret
sbb
sbb
enter
dec
jl
cmp
jo
mov
js
dec
cmp
scas
dec
ret
imul
fidivl
out
imull
shrl
test
cld
nop
mov
loopne
push
xchg
in
push
sub
and
or
in
out
cmpsl
mov
mov
sahf
jp
or
sub
mov
inc
les
out
cmpsl
sub
mov
pushf
sub
dec
mov
or
or
cltd
mulb
subl
push
aas
js
scas
jp
roll
addl
mov
sub
cmp
mov
xchg
aad
dec
enter
test
imul
jle
push
popf
jne
dec
pop
into
sub
mov
imul
data16
sbb
in
sbb
ret
data16
sub
outsl
push
repnz
or
sbb
mov
loop
clc
or
leave
mov
xor
mov
in
mov
mov
ja
leave
jno
mov
mov
mov
repz
jnp
aaa
jecxz
std
enter
jecxz
fs
out
push
inc
inc
push
mov
adc
incb
xor
enter
mov
mov
lea
hlt
out
int
xor
mov
xchg
mov
push
adc
pop
dec
push
inc
ja
adcl
xchg
mov
push
testl
sar
pop
mov
mov
clc
mov
pop
ret
fistpl
pop
cmpsb
aam
daa
and
sbb
and
mov
lret
sbb
dec
loope
jnp
xor
sbb
test
fwait
push
loopne
xchg
fcomi
lods
cmpsl
pop
add
sbb
loopne
or
or
xor
pop
mov
stos
pop
std
bound
dec
jno
mov
jns
xor
jno
mov
adc
push
xor
adc
push
xchg
jno
stos
pusha
dec
push
inc
iret
xchg
das
test
nop
mov
mov
push
or
out
hlt
imul
fucomip
mov
xor
jb
je
mov
out
xor
sbb
std
in
test
xchg
mov
out
movsl
test
out
mov
movsb
lahf
popa
movsb
ss
clc
push
jo
dec
cmp
pop
jno
in
or
cwtl
push
int3
cli
push
xchg
xchg
mov
or
punpcklwd
pop
cmc
xchg
add
dec
les
pop
cli
addl
push
adc
or
imul
xchg
test
jp
mov
outsb
jns
jecxz
mov
xor
add
add
jge
mov
pop
bound
popf
imul
dec
xchg
sub
outsl
adc
sub
addr16
push
mov
ljmp
xchg
lock
arpl
and
loopne
and
push
in
stos
cmp
loope
das
xor
adc
jmp
pop
cld
orb
stos
pop
shll
mov
mov
push
mov
push
outsb
dec
dec
xchg
cmp
test
lahf
xor
adcl
push
imul
insl
jnp
inc
sti
xchg
jp
adcb
stos
enter
xchg
mov
arpl
xor
mov
ljmp
outsb
pusha
pop
mov
or
pop
jae
int
mov
lret
mov
outsb
sbb
sub
lret
addr16
repnz
gs
ficoml
mov
outsb
xchg
mov
mov
sub
pop
mov
cs
or
lock
cltd
sub
pusha
xchg
fnsave
sub
shll
ljmp
testb
nop
jge
xchg
add
xchg
jnp
shlb
xlat
cmpb
add
bswap
rol
jbe
mulb
inc
push
mov
bound
inc
addl
mov
sbb
in
xchg
xchg
lock
mov
xor
mov
inc
shrl
xchg
mov
fisttps
add
push
sarl
jne,pt
cmp
jb
or
repz
popf
pop
in
sub
enter
rcll
pop
scas
add
addr16
jns
xchg
das
arpl
addb
sahf
xchg
add
movsl
xchg
sub
pinsrw
cwtl
sahf
cmpsb
fwait
cmpsl
xchg
mov
dec
push
daa
or
ret
cs
push
push
sub
fs
mov
mov
popa
xor
xchg
popa
in
imul
out
pop
je
add
incb
negb
bnd
inc
cmp
xchg
subl
mov
sub
mov
sbb
shll
clc
sub
movsb
mov
dec
stc
adc
jno
pop
jnp
mov
aas
mov
push
jg
mov
mov
insb
repz
xchg
xchg
mov
jae
inc
in
cmc
cltd
sbb
arpl
mov
sub
push
jae
sub
xor
xchg
popf
mov
inc
sub
adc
adc
jno
rorl
xchg
add
lods
outsb
push
push
testl
sub
movsb
cwtl
in
clc
mov
imul
xor
rorl
adc
pop
shlb
iret
mov
adc
push
sbb
adc
xchg
popa
lret
.byte
dec
insl
and
addb
push
push
push
stos
hlt
dec
mov
ud2
pop
mov
shll
mov
lods
dec
xor
data16
dec
jge
jge
fbld
jbe
das
fadds
popf
ret
inc
repnz
lcall
loopne
pop
pop
call
leave
xchg
mov
enter
pusha
lret
or
sbb
and
sahf
dec
sbb
testb
pushf
cmc
outsl
dec
in
mov
fbstp
push
or
xor
or
jle
out
or
mov
jmp
mov
psubb
inc
enter
ret
fnstsw
outsl
dec
test
mov
mov
jmp
add
lret
rcrb
incl
xor
cld
dec
mov
push
cmpsb
stc
dec
jo
pop
mov
fcompl
movsb
push
in
test
mov
xor
pop
inc
jb
hlt
pop
cmp
mov
lods
jb
jnp
sub
push
roll
mov
rorb
imul
inc
stos
mov
test
call
aam
push
test
mov
in
pop
pop
sbb
mov
movsl
inc
add
insb
cmp
push
cmpsl
cmpsb
xor
mov
cmpsl
shlb
mov
pop
out
fwait
push
mulb
mov
push
fs
dec
dec
mov
fsubr
and
adc
pop
imul
pop
mov
xchg
jle
lret
hlt
adc
xchg
sbb
or
pop
cmp
sub
mov
icebp
aad
scas
push
sbb
cmp
add
or
xor
pop
push
inc
or
jnp
cmpsb
mov
push
lods
inc
mov
xchg
push
xor
mov
push
xchg
mov
jp
pop
sub
mov
iret
jmp
testl
fldl
mov
sub
cmpsb
pop
out
clc
dec
pop
popa
insl
cmp
dec
cmpsb
orb
les
rcrl
fisubl
jg
mov
mov
and
adc
cwtl
pop
nop
pop
adc
and
jo
inc
stos
xchg
lea
int3
dec
push
add
cli
int3
mov
xor
mulps
or
push
inc
and
jle
push
fldl
pop
add
dec
lock
mov
lret
jns
js
cmp
push
xor
adc
pop
sub
dec
icebp
inc
fsub
mov
pop
sti
shl
sbb
aam
inc
and
sbb
jnp
mov
cli
bound
test
sbb
fs
and
insb
pop
mov
mov
push
inc
bound
lds
sbb
out
imulb
push
repnz
xor
les
mov
icebp
insb
inc
jae
xor
add
stos
jp
rolb
cmp
clc
cmp
lds
xchg
add
cmp
pop
cmpsl
and
adc
lss
inc
cli
cmp
mov
ja
cmp
ja
gs
mov
shll
popf
sbbl
xor
mov
fisubl
xorl
push
leave
int3
mov
push
sbb
mov
jb
mov
imul
in
or
mov
loope
sub
bound
jle
sti
inc
xor
vmovdqa
repz
out
icebp
shl
in
mov
and
mov
pop
mov
xlat
ret
out
mov
cmc
inc
jnp
xchg
add
std
imul
int
xor
mov
mov
sahf
mov
fidivrl
and
sbb
in
cltd
addb
push
sbb
not
xlat
push
outsb
and
mov
dec
push
in
out
insb
mov
repz
rcr
test
subb
movb
mov
test
pop
and
pop
divl
dec
cmp
push
add
sub
sbb
pop
stos
mov
xchg
pushl
mov
addb
mov
cmp
pop
lret
xchg
dec
add
out
sub
outsb
jb
lods
xchg
sbb
pop
movb
into
push
sub
sub
cmp
pushf
dec
outsb
mov
inc
mov
js
sub
outsb
or
pop
fnstcw
enter
mov
pop
enter
fsubl
mov
push
mov
nop
or
sbb
cmpsl
push
cmpsl
leave
js
movsl
scas
lcall
inc
ret
pop
aam
add
sbbl
jecxz
mulb
sahf
pop
jmp
sbb
sahf
jge
dec
lods
jbe
inc
sbb
jmp
cltd
nop
push
int3
jecxz
mov
ss
test
fimull
pop
mov
cmc
push
and
add
mov
xchg
aas
ret
mov
mov
cmp
testb
repz
testb
xchg
scas
lret
jl
fisubrl
mov
enter
pop
sub
mov
fs
cmp
add
gs
sub
repnz
push
setbe
call
lock
jmp
push
rclb
lods
or
int
xchg
stos
clc
and
xchg
sub
mov
mov
pop
out
push
add
cmp
xchg
lahf
ret
jo
ja
push
cmpsb
or
stos
insl
out
sbb
std
es
psrad
test
fst
fdivrs
pusha
xadd
lea
pop
ljmp
nop
lods
mov
xchg
sbb
test
sbb
sub
push
and
fsubl
or
and
xchg
and
or
push
add
push
outsl
cs
sar
lcall
xor
xchg
sub
ljmp
in
sbb
inc
cwtl
add
xchg
jae
loope
xchg
jb
pop
mov
fwait
jb
adc
pusha
lret
aaa
push
inc
stos
shlb
xchg
cmp
mov
push
add
sbb
cmp
dec
mov
outsb
cmpsl
pop
out
inc
enter
fwait
sub
mov
jo
xchg
bound
adcl
xlat
jl
cmpsb
pop
lock
sub
mov
xlat
pop
stos
lods
mov
push
movsb
mov
ja
ss
xchg
rorl
or
pop
pop
mov
cmp
clc
bnd
dec
lret
loopne
or
call
add
xchg
inc
dec
xchg
out
dec
fldl
mov
mov
jmp
xchg
out
arpl
mov
adc
mov
loopne
or
mov
adc
sub
movsl
call
mov
scas
rclb
dec
push
out
lcall
ret
dec
lods
push
aas
or
pop
fmull
or
mov
out
jbe
jp
fwait
andl
xchg
mov
mov
xor
mov
out
mov
arpl
push
xchg
pop
lock
and
cmp
fldcw
add
xor
xchg
lds
mov
jnp
outsl
imull
xor
test
inc
jns
push
push
and
adc
pop
aad
mov
std
add
pop
scas
pop
test
xchg
insb
jns
sub
idiv
add
ds
bound
dec
movsl
adc
jne
rcrb
pop
pop
sbb
or
dec
cmp
push
sbb
lret
mov
movsb
dec
xor
xchg
mov
popf
popf
lock
sbb
and
std
and
sarl
test
std
mov
add
je
push
jg
test
jmp
test
or
adc
iret
pop
jne
pop
hlt
mov
dec
mov
pusha
jb
push
int3
mov
mov
dec
addl
xor
repz
fcompl
jge
xchg
js
mov
cli
shrb
mov
pop
mov
jl
xchg
cmpsb
les
add
decl
and
sub
enter
mov
mov
pop
adc
lea
nop
jmp
fxch
mov
jp
cmp
aad
nop
imul
pop
gs
sti
jmp
idivl
outsb
sbb
lret
mov
int
or
pop
mov
stos
fistps
cli
aas
je
in
and
mov
into
xchg
aad
movsl
dec
mov
ljmp
divl
iret
lahf
xor
xchg
add
ljmp
sbb
ds
mov
or
out
sub
loope
push
or
movsb
aad
aas
cwtl
in
jle
mov
mov
mov
psrlw
shrl
cli
out
mov
mov
push
cmp
xchg
jb
dec
adc
xor
out
jae
sub
movsl
lods
fsub
arpl
js
mov
pop
mov
jo
add
push
mov
push
sbb
sbb
into
pop
fldenv
mov
aad
sahf
movzbl
sub
mov
cli
daa
pop
mov
mov
leave
add
pop
std
pop
or
fdivs
inc
loopne
push
or
pop
dec
xchg
stos
add
pushf
and
orl
jno
sub
mov
rolb
and
in
push
add
jns
pop
sti
jo
sub
daa
push
orb
mov
push
jecxz
and
cmp
addb
repz
ss
fcomps
sub
inc
movsb
xchg
xor
push
mov
cmp
cwtl
mov
sub
add
ret
test
in
jle
sbb
in
outsl
shl
imul
mov
ret
xchg
dec
jle
xchg
mov
outsb
xchg
movsl
push
inc
pop
test
mov
sbb
dec
test
movsb
fcmove
cmp
lock
adc
inc
pop
jbe
sbb
fildl
in
mov
es
outsb
test
std
pop
fisubs
bound
test
push
test
xor
cmp
mov
lret
push
add
push
adc
bound
xor
repnz
mov
or
adc
mov
push
xorl
lods
negl
xchg
pop
xchg
lcall
stc
dec
jo
dec
cwtl
xor
add
in
dec
test
mov
aam
cs
mov
lds
xchg
retw
fnstsw
mov
jl
sti
pop
dec
cmp
lret
pop
test
pop
adc
sub
mov
stos
push
popf
mov
push
out
es
stos
sub
out
or
cmp
in
fstpt
mov
mov
out
cmp
adc
stos
jle
js
and
int
pop
jge
adcb
mov
mov
ds
shrl
mov
lret
ljmp
movl
push
cmp
jmp
xchg
.byte
.byte
push
add
dec
add
dec
add
xor
adc
dec
add
push
inc
xor
xor
add
add
pusha
cmpsl
cmp
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
and
add
push
add
add
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
pusha
cmpsl
cmp
add
add
or
add
lock
subb
add
inc
add
orb
sbbb
sbbb
add
or
orb
add
dec
or
cmpb
add
bound
add
jb
add
jle
add
add
add
add
add
xor
addb
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
cwtl
or
orb
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
js
add
nop
add
sub
add
test
add
rolb
out
sldt
fadds
sub
add
lock
xor
add
or
add
and
add
cmp
add
push
add
add
push
sldt
addb
add
sldt
mov
add
enter
stc
sldt
loopne
add
clc
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
mov
add
rorb
cmpb
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
push
add
call
jg
add
pop
add
sbb
add
xor
add
dec
pop
add
pusha
pop
add
pusha
cmpsl
cmp
add
add
add
add
fmull
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
nop
pop
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
cmp
add
add
add
add
add
add
rolb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
insl
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
lock
or
xor
add
and
or
xor
add
pop
sahf
or
xor
add
mov
add
shlb
add
mov
add
sub
add
pop
movsb
or
rolb
add
sub
or
in
add
adc
add
loopne
or
rolb
add
mov
or
rolb
add
subb
add
or
rolb
add
and
add
lock
add
add
add
mov
add
add
add
add
add
or
test
add
and
or
push
add
add
add
add
add
or
in
add
add
add
add
mov
add
add
add
add
add
add
sbb
or
insb
add
add
add
mov
or
enter
push
fimull
add
add
add
fisttpl
add
add
add
fisttps
add
add
add
loopne
add
add
add
loope
add
add
add
loop
add
add
pusha
in
add
add
insb
jmp
add
lock
or
mov
add
mov
add
add
add
add
cmc
or
in
add
add
testb
sub
add
add
or
mov
add
add
add
add
add
dec
add
les
add
or
or
loop
add
lock
add
add
add
or
adc
add
fmull
or
adc
add
lock
adc
add
add
or
adc
add
sbb
or
adc
add
sub
or
adc
add
inc
or
adc
add
push
or
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
push
add
inc
add
dec
add
or
add
inc
add
dec
add
cmp
cmp
cmp
cmp
cmp
cmp
or
dec
add
dec
add
dec
add
dec
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
adc
add
adc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
add
add
add
xor
ud0
push
xor
ud0
incl
add
add
push
js
add
ud0
pop
mov
lock
decl
mov
decl
call
incl
out
xchg
xor
push
js
add
ud0
incl
add
xor
push
xor
ud0
incl
add
xor
decl
add
xor
incl
xor
xor
add
add
xor
xor
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
inc
add
push
add
add
add
add
add
cmp
dec
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
jae
jae
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
add
push
add
inc
add
add
insl
add
add
push
add
push
add
inc
add
add
jb
jb
outsl
add
and
and
and
add
push
add
inc
add
add
insl
add
add
and
inc
add
insb
add
adc
inc
add
jb
add
je
outsl
add
jns
and
outsb
add
je
and
add
jo
je
jns
str
outsl
add
je
and
outsb
add
je
and
data16
jne
outsb
add
add
add
add
jne
add
je
and
jb
add
add
je
add
add
jb
and
data16
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
inc
add
outsb
add
outsl
add
add
outsl
add
outsb
add
arpl
je
add
push
add
jno
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
add
and
arpl
insb
add
add
je
and
jo
jb
outsl
add
jb
popa
add
and
popa
add
add
add
add
outsb
add
add
add
add
outsl
add
je
and
add
data16
add
add
je
and
jne
jae
add
sub
add
add
push
add
imul
add
ja
outsb
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
add
add
imul
add
add
add
jbe
add
and
add
add
add
outsl
add
add
add
jo
outsl
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
imul
add
add
jne
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
outsb
add
add
popa
add
add
outsb
add
add
jb
jb
outsl
add
and
je
outsl
add
add
outsl
add
imul
add
add
add
jbe
add
add
add
add
popa
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
data16
imul
jb
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsb
add
je
and
popa
add
add
ja
add
add
jns
and
jb
jne
insb
add
jae
add
add
dec
add
je
ja
outsl
add
imul
add
outsb
add
add
arpl
push
add
add
add
add
outsl
add
je
and
jne
outsb
add
add
arpl
push
add
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
push
add
add
add
js
jo
imul
add
add
add
outsl
add
insl
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
jb
imul
add
jae
and
add
ja
outsb
add
add
add
add
add
jb
imul
add
jae
and
jne
outsb
add
add
arpl
push
add
add
add
add
add
add
add
jo
jo
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsl
add
and
jb
add
add
add
add
outsl
add
je
ja
popa
add
add
add
popa
add
jae
add
add
outsl
add
outsb
add
arpl
je
imul
and
popa
add
outsl
add
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
add
add
jns
and
jo
add
jb
add
add
outsl
add
add
jne
data16
add
and
jae
jo
popa
add
add
add
jbe
popa
add
insb
add
bound
insb
add
add
push
add
arpl
imul
add
add
jae
and
popa
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
outsl
add
imul
add
add
jae
and
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
jae
add
add
add
jb
and
jb
add
add
jbe
add
add
data16
add
and
jae
outsl
add
imul
add
add
jae
and
arpl
insb
add
jae
add
add
add
add
and
insl
add
outsb
add
and
jb
add
add
add
arpl
add
sub
and
arpl
popa
add
outsb
add
je
and
jae
jo
insb
add
arpl
add
add
add
outsb
add
arpl
je
imul
and
je
imul
add
add
jne
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
add
add
and
insl
add
outsb
add
and
insb
add
jbe
add
add
add
data16
add
jns
insl
add
outsl
add
add
and
insb
add
outsb
add
jae
add
add
imul
and
outsb
add
insl
add
and
je
outsl
add
and
insb
add
outsb
add
add
add
je
and
imul
add
ja
outsb
add
add
add
outsl
add
add
outsl
add
je
add
add
add
add
outsl
add
je
add
add
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
insb
add
add
insb
add
arpl
imul
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
add
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
outsl
add
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsb
add
add
outsl
add
sub
add
imul
add
add
add
je
imul
je
imul
and
popa
add
add
add
jae
and
jb
add
jne
imul
add
add
add
add
jae
popa
add
add
add
add
and
insb
add
outsb
add
add
add
jb
outsl
add
add
outsl
add
add
jb
outsl
add
add
add
add
add
add
outsl
add
and
jae
outsl
add
imul
add
add
inc
add
add
add
jb
outsl
add
add
outsl
add
add
jo
je
imul
add
add
jb
outsl
add
add
outsl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
outsl
add
imul
add
add
add
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
add
outsl
add
add
popa
add
imul
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
jo
jb
outsl
add
add
outsl
add
add
popa
add
imul
add
add
add
add
jae
jae
and
popa
add
add
popa
add
add
add
outsb
add
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
jb
add
jne
add
je
add
add
add
add
jae
jae
add
add
add
jb
jb
outsl
add
and
outsl
add
and
arpl
popa
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
data16
outsb
add
je
imul
and
and
add
jb
jb
outsl
add
and
outsl
add
and
insb
add
popa
add
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
sub
and
add
add
add
outsl
add
add
outsb
add
and
push
add
add
insl
add
and
and
add
add
outsl
add
outsb
add
arpl
je
imul
and
je
outsl
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
arpl
outsl
add
outsb
add
arpl
je
imul
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
outsl
add
outsb
add
arpl
je
and
je
imul
add
add
jne
je
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
jbe
imul
add
add
imul
add
add
jb
jb
outsl
add
and
and
and
and
add
add
add
outsb
add
add
jb
jne
jo
je
add
add
jns
jae
je
add
and
arpl
popa
add
add
add
add
popa
add
add
imul
and
outsb
add
insl
add
add
add
add
arpl
arpl
add
jae
and
add
outsb
add
add
add
inc
add
add
add
add
add
jae
jae
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
outsl
add
adc
inc
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
popa
add
add
arpl
popa
add
add
add
outsl
add
imul
add
add
add
outsb
add
arpl
je
imul
and
inc
add
add
add
add
jb
popa
add
add
jne
insb
add
add
add
add
outsl
add
insb
add
add
outsl
add
add
imul
and
jae
outsl
add
imul
add
add
add
add
add
jae
jae
and
popa
add
add
add
outsl
add
je
and
popa
add
add
add
insb
add
add
add
and
imul
jne
jae
add
add
add
outsl
add
add
outsb
add
jne
add
and
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
jae
outsl
add
imul
add
outsb
add
je
imul
imul
je
imul
and
inc
add
jb
outsl
add
add
add
add
add
imul
and
inc
add
arpl
add
add
add
add
add
imul
and
and
and
add
add
outsl
add
add
outsl
add
outsb
add
add
outsb
add
add
add
outsb
add
and
push
add
add
outsb
add
add
jb
add
jp
add
add
popa
add
and
add
imul
and
jo
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
outsl
add
add
add
add
add
add
add
add
add
add
inc
add
outsb
add
add
outsl
add
add
imul
and
imul
jo
outsl
add
je
and
jb
popa
add
add
and
sub
and
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
je
and
push
add
outsb
add
add
add
add
add
add
add
push
add
popa
add
add
add
add
jne
je
sbb
dec
add
js
and
insb
add
outsb
add
and
insb
add
outsb
add
je
push
add
arpl
add
add
add
add
add
add
outsb
add
arpl
je
imul
and
inc
add
jb
add
jb
adc
dec
add
popa
add
je
imul
and
inc
add
jo
je
imul
adc
add
arpl
je
imul
and
inc
add
jo
je
imul
and
push
add
js
je
str
outsb
add
outsl
add
add
popa
add
imul
add
outsl
add
outsb
add
add
outsb
add
outsl
add
add
add
je
str
add
jne
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
jne
and
push
add
js
je
add
dec
add
outsb
add
or
push
add
jb
outsl
add
add
add
popa
add
push
add
add
add
add
imul
add
push
add
ja
or
xor
inc
add
add
add
push
add
imul
outsl
add
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
outsl
add
and
inc
add
popa
add
add
add
imul
outsl
add
and
push
add
js
je
sbb
dec
add
and
push
add
and
imul
add
ja
outsl
add
add
add
jo
add
imul
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
jo
add
popa
add
add
outsb
add
add
imul
add
add
insb
add
add
add
popa
add
or
dec
add
add
jne
insl
add
add
jb
popa
add
or
add
add
add
add
outsl
add
add
jb
push
add
arpl
je
imul
and
inc
add
jo
je
imul
adc
add
insb
add
arpl
popa
add
add
outsb
add
add
outsl
add
imul
add
popa
add
add
add
popa
add
imul
add
outsl
add
outsb
add
add
jne
je
je
outsl
add
and
inc
add
arpl
add
add
jne
je
je
outsl
add
and
dec
add
add
insb
add
add
je
or
add
add
outsb
add
add
push
add
ja
or
inc
add
je
je
outsl
add
and
push
add
js
je
or
inc
add
jo
je
imul
and
push
add
js
je
pop
add
add
popa
add
insb
add
add
jb
popa
add
and
push
add
js
je
adc
dec
add
add
insb
add
add
je
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
insb
add
add
je
and
push
add
js
je
add
push
add
popa
add
outsl
add
outsb
add
add
add
add
add
jbe
add
dec
add
jbe
jns
push
add
jne
jb
jo
insb
add
add
push
add
popa
add
add
jb
popa
add
push
add
imul
add
add
push
add
add
dec
add
insl
add
push
add
add
add
ja
add
inc
add
add
pop
add
jne
arpl
push
add
add
inc
add
jne
popa
add
add
je
add
add
outsl
add
add
and
inc
add
add
outsb
add
add
outsb
add
add
jb
outsl
add
popa
add
add
add
push
add
add
outsb
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
jne
jae
je
outsl
add
and
insl
add
jae
jae
popa
add
add
add
add
add
add
add
add
jbe
imul
and
imul
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
jbe
imul
and
jne
outsb
add
outsb
add
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
imul
add
add
outsl
add
je
jb
outsl
add
add
jne
jae
je
and
push
add
and
popa
add
add
popa
add
add
add
outsl
add
and
jb
add
outsl
add
imul
and
arpl
outsl
add
je
jb
outsl
add
add
jb
outsl
add
and
add
arpl
imul
add
add
add
add
add
add
arpl
imul
add
outsl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
arpl
imul
add
outsl
add
add
add
popa
add
and
outsb
add
and
arpl
outsl
add
je
jb
outsl
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
imul
and
popa
add
add
add
insb
add
and
outsl
add
and
inc
add
outsb
add
add
je
jae
adc
dec
add
and
push
add
and
data16
jne
outsb
add
add
outsl
add
and
and
add
outsl
add
add
outsl
add
je
add
je
sub
add
jae
imul
jbe
add
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
and
je
outsl
add
imul
bound
popa
add
add
add
add
add
add
jns
jae
je
add
and
imul
je
popa
add
add
add
add
arpl
imul
add
add
inc
add
ja
outsb
add
add
outsb
add
add
inc
add
insb
add
add
push
add
add
add
insb
add
add
inc
add
add
add
add
outsb
add
popa
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
and
inc
add
add
bound
outsl
add
jb
add
add
add
jae
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
dec
add
outsl
add
jae
adc
add
outsb
add
je
and
outsl
add
add
and
arpl
insb
add
jo
bound
outsl
add
jb
add
add
add
jne
and
daa
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
outsb
add
and
jne
jae
add
add
jns
and
popa
add
outsl
add
add
jb
and
data16
jb
insl
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
add
add
add
js
add
jne
je
add
add
jb
je
add
jae
je
outsl
add
add
add
jae
add
add
outsl
add
je
imul
add
add
add
add
add
add
outsl
add
add
add
insb
add
add
add
and
je
outsl
add
add
insb
add
add
add
and
je
outsl
add
add
add
insb
add
add
imul
add
add
push
add
bound
add
inc
add
arpl
add
add
add
add
add
arpl
add
push
add
push
add
add
push
add
inc
add
add
inc
add
add
dec
add
insl
add
add
dec
add
data16
add
jo
add
add
push
add
add
add
popa
add
outsb
add
je
and
add
popa
add
and
popa
add
add
outsl
add
insl
add
add
add
add
imul
jae
adc
inc
add
push
add
add
add
add
add
imul
jae
add
add
outsb
add
pop
add
imul
popa
add
jae
pop
add
popa
add
outsb
add
outsb
add
add
add
outsl
add
or
dec
add
data16
jb
insl
add
je
imul
pop
add
outsl
add
data16
jb
insl
add
add
add
add
add
outsl
add
add
dec
add
add
popa
add
arpl
add
add
add
add
add
add
add
bound
outsl
add
je
push
add
add
add
add
add
adc
dec
add
outsb
add
and
imul
add
je
add
add
add
arpl
add
add
jne
bound
sub
add
jne
and
imul
outsb
add
je
and
imul
insl
add
outsb
add
sbb
dec
add
je
and
add
outsl
add
add
and
je
imul
jb
jae
and
popa
add
popa
add
insb
add
bound
insb
add
inc
add
jb
outsl
add
jo
dec
add
add
js
and
arpl
popa
add
outsb
add
je
and
bound
add
add
add
jae
and
je
push
add
add
and
jo
jb
add
imul
jae
and
insl
add
outsb
add
and
imul
insl
add
add
and
inc
add
outsl
add
jo
dec
add
add
js
xor
add
outsb
add
je
and
arpl
jb
add
je
add
add
outsl
add
insl
add
add
add
outsl
add
add
inc
add
and
data16
jb
insl
add
and
popa
add
add
add
jne
jb
jb
add
je
insb
add
and
popa
add
je
imul
sub
inc
add
add
outsl
add
je
jb
outsl
add
add
popa
add
outsb
add
je
and
push
add
and
imul
add
add
add
jae
and
imul
and
jo
popa
add
add
je
add
dec
add
push
add
popa
add
arpl
add
add
add
add
add
add
outsl
add
add
insb
add
push
add
add
insb
add
jae
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
je
add
add
insb
add
add
add
push
add
jae
jne
jo
jo
outsl
add
je
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
pop
add
jne
je
and
outsl
add
and
jae
jns
jae
je
add
and
jb
add
outsl
add
jb
arpl
add
sbb
add
jbe
popa
add
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
popa
add
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
and
jae
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
dec
add
jae
je
pop
add
outsb
add
popa
add
add
add
insl
add
add
dec
add
jae
je
and
dec
add
add
js
sub
inc
add
imul
add
add
add
add
add
add
add
insl
add
add
dec
add
jae
je
and
add
je
popa
add
add
jb
outsl
add
and
jae
je
jb
add
insl
add
add
popa
add
insb
add
add
add
add
add
jb
imul
and
dec
add
popa
add
add
add
je
and
add
je
popa
add
add
add
add
je
jb
add
insl
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
add
jbe
imul
and
arpl
outsl
add
je
add
je
sbb
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
arpl
insb
add
jae
jae
sub
inc
add
outsb
add
outsl
add
add
outsl
add
jne
jae
and
popa
add
add
add
popa
add
insb
add
add
add
jb
and
imul
imul
bound
insb
add
and
ja
imul
outsl
add
and
inc
add
outsb
add
add
insb
add
add
add
add
add
popa
add
and
outsb
add
and
jo
popa
add
add
je
and
ja
imul
outsl
add
sbb
add
outsb
add
je
and
push
add
and
popa
add
and
dec
add
add
add
push
add
add
outsl
add
insl
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
imul
bound
insb
add
and
imul
dec
add
push
add
outsl
add
and
outsl
add
and
dec
add
dec
add
add
and
inc
add
outsb
add
outsl
add
add
popa
add
add
add
and
jbe
imul
bound
insb
add
and
ja
imul
outsl
add
and
insl
add
add
insb
add
add
add
jne
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
add
adc
push
add
add
popa
add
and
ja
jb
imul
and
add
jb
outsl
add
sbb
push
add
jb
add
add
add
jb
add
je
imul
and
add
jb
outsl
add
cmp
and
and
add
add
add
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
add
imul
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
and
outsl
add
and
inc
add
dec
add
add
add
add
inc
add
jns
outsb
add
push
add
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
and
and
add
outsl
add
add
add
add
jae
jae
and
jae
jo
add
imul
add
add
popa
add
daa
add
add
add
je
add
and
outsl
add
and
popa
add
and
outsl
add
add
and
jae
outsl
add
imul
add
add
popa
add
daa
add
add
jb
add
je
add
add
add
and
jae
outsl
add
imul
add
add
outsl
add
imul
add
add
insb
add
add
add
and
outsl
add
add
sub
inc
add
outsb
add
add
add
push
add
add
add
popa
add
add
and
ja
push
add
and
jae
outsl
add
imul
add
add
jae
and
popa
add
je
imul
sbb
inc
add
je
insl
add
jo
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
arpl
outsl
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
imul
and
imul
outsb
add
je
and
jbe
popa
add
add
add
outsb
add
popa
add
add
add
imul
insb
add
add
outsl
add
insl
add
je
sbb
push
add
popa
add
and
insb
add
outsb
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
and
inc
add
outsb
add
outsl
add
add
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
and
imul
outsb
add
add
add
outsb
add
popa
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
add
je
and
arpl
popa
add
popa
add
imul
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
arpl
outsl
add
outsb
add
add
jne
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
jne
je
and
outsl
add
and
insl
add
insl
add
jb
jns
and
ja
push
add
and
add
jo
popa
add
add
outsb
add
and
insl
add
insl
add
jb
jns
and
jae
je
jb
add
insl
add
add
jb
jb
outsl
add
and
jb
add
add
outsb
add
and
and
add
and
add
add
add
je
jb
add
insl
add
add
add
add
add
jb
jb
outsl
add
adc
add
jo
add
je
jns
and
imul
jb
add
add
add
add
add
popa
add
insb
add
add
add
add
add
jb
add
je
add
add
add
and
and
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
jb
arpl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
imul
add
outsl
add
add
insl
add
insb
add
insl
add
outsb
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
insb
add
add
add
add
outsb
add
add
outsl
add
je
add
add
add
je
and
and
add
outsl
add
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
jb
add
imul
jb
popa
add
add
outsb
add
add
jb
outsl
add
jo
sbb
push
add
outsl
add
add
je
jns
and
and
add
add
jae
and
outsb
add
je
and
add
imul
sbb
inc
add
outsb
add
outsl
add
add
jae
jae
imul
and
popa
add
add
add
add
add
and
and
add
imul
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
sub
inc
add
outsb
add
add
add
jb
imul
and
je
outsl
add
add
and
jb
add
add
add
add
add
add
outsl
add
jb
arpl
add
add
je
jb
add
insl
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
arpl
popa
add
add
add
add
jb
outsl
add
and
je
push
add
add
add
and
add
add
push
add
and
imul
dec
add
push
add
add
add
and
insl
add
imul
je
push
add
add
add
insb
add
jae
jae
and
and
add
outsl
add
add
outsl
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
and
sub
and
xor
and
add
add
and
arpl
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
imul
and
insb
add
jae
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
sbb
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
imul
and
and
and
add
add
add
add
popa
add
outsb
add
je
and
outsl
add
add
and
data16
insb
add
and
and
and
add
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
outsl
add
insl
add
je
and
daa
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
adc
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
sbb
push
add
popa
add
insb
add
and
je
outsl
add
add
jb
add
je
add
add
add
add
je
outsl
add
jns
sbb
inc
add
arpl
add
je
outsl
add
and
data16
jb
and
daa
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
adc
inc
add
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
jns
jae
je
add
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
pop
add
and
arpl
popa
add
add
add
add
add
outsb
add
add
push
add
add
jne
outsb
add
je
imul
and
data16
imul
add
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
jne
add
add
push
add
popa
add
add
jb
imul
and
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
insb
add
arpl
imul
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
outsl
add
insb
add
add
outsl
add
add
outsl
add
jbe
add
je
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
data16
add
and
ja
push
add
and
arpl
outsl
add
jbe
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
popa
add
imul
je
and
outsl
add
add
data16
add
adc
dec
add
jbe
popa
add
add
add
jb
add
insl
add
outsb
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
js
jo
add
je
add
add
popa
add
imul
je
and
add
jb
outsl
add
adc
add
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
adc
dec
add
add
popa
add
add
outsb
add
add
bound
outsl
add
je
add
add
js
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsb
add
add
add
and
jbe
popa
add
add
pop
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
inc
ss
xor
inc
cmp
xor
inc
inc
xor
xor
xor
xor
cmp
inc
xor
inc
inc
xor
inc
inc
inc
inc
cmp
inc
inc
inc
xor
inc
xor
inc
xor
xor
cmp
cmp
xor
cmp
cmp
cmp
aaa
cmp
xor
xor
cmp
aaa
inc
xor
xor
cmp
xor
cmp
inc
xor
xor
cmp
inc
inc
xor
xor
cmp
cmp
cmp
xor
inc
xor
xor
inc
inc
ss
xor
inc
inc
cmp
cmp
inc
inc
xor
xor
inc
cmp
xor
cmp
inc
inc
xor
cmp
inc
inc
xor
cmp
inc
inc
ss
inc
xor
aaa
xor
inc
inc
xor
xor
cmp
xor
xor
cmp
xor
xor
inc
cmp
xor
cmp
inc
inc
xor
cmp
inc
xor
xor
xor
xor
inc
xor
xor
inc
xor
aaa
inc
xor
inc
xor
ss
xor
inc
cmp
xor
cmp
cmp
xor
inc
xor
cmp
aaa
xor
xor
xor
cmp
inc
xor
inc
xor
xor
cmp
inc
inc
inc
xor
cmp
cmp
inc
xor
inc
xor
xor
inc
xor
inc
inc
xor
inc
inc
inc
inc
xor
inc
inc
xor
xor
inc
ss
inc
xor
xor
aaa
inc
xor
cmp
inc
cmp
xor
inc
xor
inc
cmp
ss
xor
inc
inc
cmp
inc
inc
cmp
inc
aaa
xor
inc
cmp
inc
xor
cmp
inc
aaa
inc
xor
cmp
inc
cmp
or
add
xor
pop
dec
dec
cmp
cmp
cmp
or
popa
imul
gs
add
gs
test
jo
and
jb
gs
arpl
jae
or
imul
dec
outsb
jne
or
jb
gs
je
insb
gs
or
push
imul
popa
jo
imul
add
sahf
mov
jle
dec
dec
jb
inc
insb
imul
addr16
inc
insb
imul
je
add
add
jb
or
inc
je
inc
popa
arpl
inc
outsl
outsb
je
inc
push
je
push
inc
inc
xor
xor
pop
inc
dec
inc
push
push
inc
push
or
outsb
je
inc
outsl
insb
outsl
jb
or
insb
push
imul
js
or
outsb
je
dec
imul
inc
outsl
outsb
je
dec
popa
insl
adc
add
add
inc
outsl
outsb
je
push
je
insb
or
or
jns
jb
jbe
gs
push
dec
insb
fs
jb
popa
je
dec
jb
gs
or
jae
je
outsl
outsb
pop
push
jo
push
arpl
outsb
inc
outsb
je
jb
dec
outsb
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
dec
gs
outsl
ja
pop
or
jb
dec
gs
outsl
ja
or
insb
jae
gs
outsb
arpl
pusha
or
je
imul
push
push
push
popa
outsb
gs
push
push
popa
outsb
gs
xor
gs
add
push
outsl
jo
add
push
imul
push
popa
bound
fs
add
add
dec
fs
inc
push
inc
insb
imul
je
outsl
imul
imul
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
dec
outsb
inc
outsl
outsb
outsb
arpl
pop
sbb
je
outsl
imul
imul
outsb
arpl
add
outsl
jb
add
add
gs
sbb
add
push
push
imul
je
dec
outsl
imul
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
ljmp
imul
jne
outsl
dec
outsl
imul
push
imul
data16
cmp
add
push
push
jns
push
jb
jns
push
jns
push
jb
jns
arpl
push
inc
arpl
or
inc
gs
outsb
imul
outsl
outsb
cs
popa
je
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
or
add
js
mov
add
jo
ja
pop
jo
add
clc
mov
add
mov
pop
ja
jo
add
incl
ja
ja
add
js
mov
add
js
mov
jg
clc
xchg
add
jg
mov
add
ja
pop
ja
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
add
add
dec
imul
inc
pop
jo
inc
inc
dec
dec
or
jo
jo
outsl
fs
insl
push
imul
arpl
or
jo
jo
insb
imul
push
imul
jo
sbb
add
dec
fs
inc
push
inc
insb
imul
push
inc
push
inc
insb
imul
popa
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
outsl
jb
add
add
push
push
push
imul
jb
or
je
jb
popa
insb
add
push
imul
insl
jb
push
imul
data16
push
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
and
add
add
add
xor
add
adc
sub
push
negb
rcrl
mov
out
rolb
in
js
or
lock
dec
cmc
dec
sbb
in
mov
cmpsb
aaa
xchg
inc
vaddsd
xchg
mov
std
lock
sbb
data16
xchg
xchg
jge
or
das
cmp
movb
mov
lods
andl
mov
das
dec
jbe
pop
repz
daa
jecxz
cmp
lahf
mov
in
fwait
icebp
jmp
jne
rcl
shrb
adc
cs
in
mov
add
into
ror
nop
inc
sbb
fwait
cld
xor
movsb
mov
test
push
frstor
add
je
cwtl
cmp
mov
and
mov
pushf
fisubrl
pop
mov
inc
push
arpl
xor
inc
stc
push
or
sub
or
incl
mov
adc
rorl
pop
pop
fidivrs
aaa
sbb
add
pop
outsl
insl
outsl
jbe
dec
stos
stos
cmp
out
sbb
jmp
int
xchg
arpl
jmp
lods
xchg
int3
pop
xchg
scas
and
lret
cmpsl
cmpsl
shrb
repnz
xchg
in
dec
es
aam
sub
add
xchg
push
sbb
outsb
xorl
ss
or
fwait
mov
repz
xchg
pop
aad
sahf
cmc
mov
sbb
pop
divl
sub
dec
xchg
ljmp
cwtl
dec
pusha
jp
adc
xchg
icebp
lods
out
xchg
arpl
or
adc
mov
or
and
add
cli
jmp
sub
out
int
or
mov
rorl
and
mov
jecxz
sbb
fs
cs
adc
sub
xchg
fisttps
mov
xor
pop
in
lret
les
addr16
jecxz
jecxz
movsb
sti
mov
scas
push
sub
test
jg
in
movsl
mov
mov
xchg
inc
mov
nop
stos
mov
rclb
cwtl
push
notl
sub
in
int3
mov
in
lds
cld
adc
outsb
jle
jno,pt
push
inc
push
mov
xlat
push
add
dec
xor
push
sarb
sub
push
ljmp
repz
insl
add
js
lods
add
sbbb
icebp
sbb
push
in
cltd
lret
cmc
jmp
sbb
mov
mov
xchg
hlt
sahf
insb
or
xchg
push
cs
cmp
mov
ja
test
mov
movsl
xchg
je
inc
in
xchg
sarl
out
dec
cmpsl
das
std
mov
xchg
sbb
and
pop
outsl
jns
sahf
push
sub
mov
test
fdivr
pop
and
mov
fnstsw
daa
mov
pushf
fldcw
xchg
adc
push
fcompl
clc
xor
push
jnp
into
mov
mov
dec
ret
sub
add
push
jmp
sbb
or
dec
mov
les
fists
sahf
repz
jle
sub
out
in
and
test
out
std
scas
pop
mov
push
nop
mov
in
negb
jl
es
sub
xchg
aas
mov
inc
dec
push
stos
dec
scas
out
pusha
es
cld
std
shl
mov
cmp
int3
pop
loopne
rolb
jp
mov
cli
test
push
xlat
mov
divb
xorl
repnz
adc
lea
jp
jge
sbb
lds
push
and
je
je
fidivrs
cmp
icebp
and
jge
jb
sbbb
movsl
or
jg
popa
jmp
jno,pn
ret
icebp
xor
xchg
mov
pop
adc
add
dec
dec
pop
xor
and
cmp
add
out
clc
cwtl
andb
adcl
xchg
stc
mov
movsb
dec
je
dec
fdivrs
xlat
dec
rcll
inc
shll
rclb
jns
test
mov
rorb
inc
add
out
xchg
pop
xchg
lock
dec
call
test
sub
and
ret
bswap
scas
aad
outsl
mov
dec
outsl
push
push
in
mov
std
jmp
std
std
dec
test
cli
mov
add
mov
pop
notl
imul
pop
or
sarb
xor
adc
iret
sbb
loope
xor
negl
cmpsb
sbb
inc
daa
inc
mov
je
adc
iret
dec
cltd
jmp
pushf
ror
add
xor
in
rorb
mov
arpl
int
and
mov
outsb
pop
daa
pop
cmc
xchg
out
shrb
in
jo
fisubl
add
jmp
xchg
sub
dec
xor
pop
push
xor
push
lea
shll
mov
js
cmp
xor
sar
push
and
ret
push
iret
clc
insl
jp
faddl
addr16
inc
xchg
mov
sbb
mov
aaa
in
sbb
mov
mov
sub
fs
xor
push
jmp
push
cmp
adc
into
inc
mov
mov
test
push
xchg
push
enter
cmpsl
sbb
pop
push
ret
and
push
test
sbbb
orl
or
cwtl
pop
jecxz
ds
jecxz
push
push
cmc
std
jmp
movsb
out
xchg
pop
push
cltd
enter
mov
test
sbb
xor
or
mov
lock
mov
cltd
jp
jp
mov
and
cmp
push
push
inc
aaa
adc
xlat
and
xor
out
add
icebp
repz
dec
lods
mov
dec
inc
mov
adc
mov
aam
lods
pop
dec
inc
push
mov
orl
ret
mov
into
vprotq
movsl
ja
ljmp
dec
inc
adc
pop
aad
push
je
add
aas
xchg
jl
mov
mov
std
dec
sub
dec
or
test
imul
mov
enter
jmp
cli
mov
das
bndldx
mov
in
rolb
inc
and
pop
out
fdivrs
inc
add
push
iret
rcll
lcall
ret
int
lcall
xchg
shll
xlat
push
push
stos
rolb
xchg
sbb
and
and
push
cmp
imul
mov
sbb
fstps
xchg
or
adc
and
cwtl
add
mov
fucomp
and
sbb
cwtl
inc
cmp
jns
cli
mov
cmp
sbb
sbb
loopne
xchg
mov
idivl
scas
dec
sahf
xchg
int3
xchg
add
mov
rolb
pop
pop
lds
pop
in
cmp
adc
imul
mov
les
rorl
addr16
fldl
daa
xchg
mov
sarb
pop
dec
mov
inc
fists
cwtl
jo
mov
add
stos
das
pop
mov
jl
mov
push
addr16
fwait
xor
push
or
popa
jge
loope
mov
xchg
cmp
adc
in
adc
jns
mov
in
fnstcw
and
inc
sub
jmp
or
pop
inc
xor
pop
out
xchg
lock
add
push
push
hlt
pop
xchg
jns
sub
add
jmp
pop
add
and
inc
pop
pusha
inc
cmc
xor
xor
cmp
xchg
mov
nop
ljmp
jo
scas
fistps
dec
xchg
xchg
pop
mov
ljmp
pop
cmp
or
jge
ss
in
inc
inc
les
repz
or
xchg
xor
pop
ret
push
xchg
and
and
dec
iret
push
xchg
scas
inc
test
sbb
xor
inc
loopne
inc
lods
adc
xchg
aad
add
cli
bound
mov
xchg
inc
in
repz
or
jae
outsb
xor
cli
test
add
fcompl
cmpsb
loope
and
sahf
and
shll
mulb
mov
je
and
imulb
or
pop
in
inc
adc
scas
cltd
cmp
popf
mov
adc
aas
fbld
rcr
mov
stos
iret
pop
insb
mov
adc
fmull
push
jns
mov
mov
adc
jmp
mov
test
and
pop
jb
ds
jnp
adc
addr16
rorl
stc
push
repz
nop
pop
sbb
or
jno
nop
cld
sbb
dec
test
dec
adc
pop
cmp
data16
mov
gs
push
xor
push
jno
add
lret
mov
cmpl
pop
inc
xchg
fcmovne
jl
add
dec
pop
sbbl
hlt
lock
cli
cmp
push
stos
mov
sub
push
fwait
inc
pop
mov
notl
or
mov
mov
mov
xchg
adc
sub
add
xor
lods
sub
push
iret
outsl
pushf
adc
push
jne
mov
leave
jmp
xchg
dec
test
or
and
mov
and
daa
addr16
das
mov
push
xchg
fistps
aaa
or
test
xor
dec
aaa
sbb
and
push
pop
mov
dec
stos
cmpsl
xchg
sub
jecxz
mov
sub
pop
dec
xchg
xor
pop
sub
shl
xchg
dec
pushf
and
roll
movsl
fwait
and
jo
bound
lcall
imul
jg
sub
ficomps
ja
xchg
lret
dec
mov
into
mov
push
adc
das
jno
loop
cmp
mov
xlat
test
add
sub
lahf
dec
push
loop
pop
xchg
ljmp
imul
data16
scas
dec
mov
inc
add
inc
fsubr
movntps
mov
lret
stos
mov
and
inc
loop
adc
pop
int
andb
sub
in
ja
bound
cmp
mov
mov
mov
stos
adc
sub
dec
xor
mov
into
imul
popf
daa
orl
inc
insl
and
sub
sbb
inc
xor
push
push
ljmp
jb
jg
popa
and
inc
push
mov
sub
pop
mov
mov
icebp
cmpl
jbe
in
je
cmp
cmpsb
lds
shrl
jne
push
sub
or
push
sub
xchg
inc
mov
into
mov
xchg
xor
adc
imul
inc
sahf
xor
mov
sbb
jns
inc
mov
popf
int
sub
add
fldl
sub
std
lods
lahf
movsl
insb
mov
jb
sub
cld
dec
lock
out
cmp
add
mov
cmp
inc
test
out
add
cli
leave
cmp
jne
add
sbb
cwtl
dec
gs
dec
std
and
adcl
sub
dec
mov
xchg
movsb
pop
mov
imul
sbb
insl
lds
push
push
xchg
jae
and
and
and
idivb
adc
loopne
gs
rol
pop
xor
ret
or
aas
cli
adc
pop
sub
rclb
mov
mov
aas
xchg
lret
aaa
enter
data16
sbb
je,pn
repnz
xlat
cs
lock
sahf
jmp
xorl
cmp
cs
sub
sub
popw
cmpsl
outsb
pusha
ficompl
xor
roll
enter
js
cmpsb
aaa
ss
or
cli
adc
fs
enter
arpl
cmp
jae
es
nop
imul
mov
das
cmp
mov
cmp
addr16
lock
clc
out
dec
adc
mov
sbb
add
or
xchg
shl
mov
xchg
pop
inc
movsb
mov
aad
lret
add
jbe
cmp
mov
dec
int
aam
or
mov
jge
and
icebp
out
dec
adc
pop
int3
mov
sbb
in
testl
or
in
sbb
cli
insl
jecxz
sbb
sbb
mov
mov
jnp
jbe
pop
ficoms
sbbb
sub
in
movsl
dec
add
in
test
mov
jg
inc
dec
lcall
and
adc
mov
jecxz
ds
lock
aam
ljmp
lea
xor
pushf
pop
jnp
in
xchg
enter
aam
pop
jnp
sub
test
test
js
push
xor
pop
xor
pop
or
enter
sbb
sbb
sbbl
mov
cmp
xchg
mov
dec
fisubl
shl
add
push
das
dec
sub
push
insl
into
inc
mov
lret
addb
sbb
bound
je
mov
or
fcompl
xchg
or
iret
jne
loop
outsl
mov
jbe
aam
mov
add
loope
adc
sbb
mov
nop
out
aaa
mov
out
rcl
pop
cld
inc
imul
sarl
fcmovnb
sahf
leave
pushf
arpl
scas
ds
add
fstl
nop
mov
sub
ja
fisubl
adc
push
dec
add
test
push
loop
iret
shl
mov
leave
pop
fs
bswap
push
mov
loop
mov
dec
mov
cmpsb
and
inc
mov
add
pop
or
popa
mov
sub
and
daa
or
xchg
call
add
dec
pop
mov
shlb
or
movsb
stos
ja
or
adc
insb
ljmp
mov
pop
xchg
and
sbb
aam
jle,pn
mov
push
repz
pop
push
data16
cli
xchg
stc
mov
pop
lds
cli
inc
xchg
imulb
lret
mov
sub
mov
xchg
jmp
std
les
cs
cmp
jbe
lods
sub
shl
fistl
es
and
insl
insb
add
cmp
dec
iret
push
sbb
cltd
leave
xor
dec
inc
ret
add
jecxz
inc
out
out
out
rol
ljmp
push
aad
xchg
adc
cmpsb
outsb
in
outsb
mov
mov
mov
scas
push
pop
add
fists
mov
or
mov
push
adc
mov
mov
adc
outsl
rcrb
test
sbb
scas
int
int
fnsave
pop
pop
sbbb
fimuls
pop
cmpsb
jae
shll
jmp
shll
push
daa
or
test
loop
sti
fadd
mov
lods
repnz
cmp
jno
xorb
cld
jl
and
cmc
sub
and
into
adc
pop
mov
popa
out
push
gs
inc
in
push
sub
mov
pushf
jbe
test
nop
jp
push
test
test
shl
pop
js
adc
incl
pop
and
das
shll
pop
in
pop
xchg
addb
movsb
and
les
and
daa
mov
xchg
cmp
lea
fidivrs
pop
shlb
and
adc
mov
dec
cmp
cmp
push
jnp
mov
lcall
push
adc
repnz
ljmp
cwtl
dec
cli
das
cwtl
pushf
lods
mov
sub
sbb
pop
loop
loopne
stos
cmpsb
or
loop
fiaddl
xchg
or
push
les
cwtl
pop
int3
out
lcall
jmp
and
cmp
jno
adc
pushf
dec
fdivrl
roll
pop
adc
fcoms
ret
scas
sub
sbb
adc
or
jbe
clc
pop
xchg
roll
cld
in
loop
and
sbb
lods
out
adc
cmpb
div
hlt
add
lret
xlat
ret
mov
cmp
inc
xchg
cvtps2pd
push
xchg
stos
popa
mov
dec
clc
adc
sbb
in
inc
or
xchg
jge
xchg
pop
mov
pop
push
rorb
pop
bound
pop
dec
cmp
enter
add
mov
mov
dec
push
stos
pop
and
into
adc
jge
js
shll
adc
inc
push
dec
and
jg
xchg
jmp
dec
fdivs
sub
add
mov
insb
push
push
pushf
es
stc
dec
inc
in
dec
adc
push
aas
popa
bound
stos
xchg
pop
pusha
and
push
leave
jo
mov
cmpsb
in
push
ljmp
add
aas
aad
mov
sub
test
gs
gs
and
xor
jns
repz
cli
idiv
pop
cmc
jecxz
shll
mov
push
or
cld
xchg
stc
inc
mov
push
xchg
ljmp
enter
ret
sti
dec
cmp
data16
dec
int
dec
clc
jbe
ljmp
sbb
jl
fstl
dec
aad
aam
inc
icebp
pop
iret
insb
into
jmp
mov
cmp
lds
outsl
stc
enter
xchg
in
orl
pop
or
mov
sub
popa
in
adc
aam
fisubrl
test
out
insb
cmpsb
ja
data16
or
mov
mov
dec
dec
in
jl
outsb
addb
cmp
fcomi
pop
pusha
dec
push
adc
mov
shrb
in
hlt
cmpsb
jg
divb
sbb
mov
cmp
insl
add
xorb
jle
repz
popf
push
or
cmc
mov
mov
cmpsb
xchg
sub
into
in
es
cmp
mov
cld
rorb
loope
loop
push
fcomps
mov
inc
or
aam
or
push
mov
add
movsl
or
repz
mov
cmpsl
popa
in
push
pusha
adc
dec
push
cwtl
in
iret
pop
jno
std
pusha
nop
dec
incb
push
or
lock
mov
xor
sbb
testb
in
in
lret
mov
fldenv
sti
xchg
and
pop
sub
and
mov
fs
cmp
jbe
lcall
sti
xor
pop
push
pop
push
xlat
xchg
fstpl
mov
sti
inc
sub
lahf
xor
outsl
mov
mov
push
pop
push
cmpsb
mov
mov
add
push
insb
insb
inc
mov
and
jb
or
lods
sub
xor
add
or
je
fisubl
xor
and
shll
ret
sub
pop
mov
cmp
pop
xchg
jle
scas
aaa
pop
or
es
repnz
loopne
mov
insb
fmulp
adc
fmull
inc
xor
aam
jnp
ja
insl
mov
scas
loope
pop
or
add
mov
aad
push
test
sbb
or
dec
iret
inc
shll
iret
cmc
adc
pop
add
push
out
sub
outsb
shlb
les
lods
cwtl
cld
mov
in
in
ret
sbb
pop
mov
xchg
idivl
cwtl
push
jg
lcall
or
fdivrl
mov
mov
les
pop
jp
dec
inc
xor
xor
pop
cmp
rcrb
mov
jg
jns
or
add
out
aaa
mov
mov
lods
ret
testb
jo
dec
fwait
aaa
push
rolb
mov
sub
and
mov
cmp
pop
sub
jg
shl
push
sarb
loop
mov
iret
daa
xchg
sub
mov
jmp
test
lods
adcl
sbb
mov
cmpsl
dec
fdiv
inc
push
ret
inc
sahf
add
or
sbb
sbb
inc
repz
cmpb
sbb
sub
push
js
test
shlb
pop
xor
js
push
out
insl
mov
mov
popa
lcall
enter
jb
dec
or
inc
mov
arpl
movsb
push
jecxz
add
dec
mov
mov
sbb
jnp
xchg
das
or
sub
push
jae
imul
ret
mov
mov
inc
cmp
sbb
fists
sbb
cmpl
aam
dec
std
outsl
stos
in
push
neg
sub
xchg
inc
add
popf
iret
pop
lock
mov
cmp
xor
sub
adc
sub
xchg
inc
cmpsl
inc
es
jl
jns
jmp
sub
cmp
jl
pop
sbb
cwtl
imul
cmc
pushf
xor
scas
lds
jg
iret
dec
or
rsm
sub
xor
xlat
outsb
add
dec
push
js
sbb
mov
fimull
imul
and
sbb
leave
popf
mov
mov
daa
fs
cwtl
imul
pop
mov
pop
cmpsl
fidivrs
mov
js
mov
fnstcw
incl
mov
cli
ret
loope
add
mov
jge
push
push
addr16
cs
rcr
movsb
stos
ljmp
les
out
sub
mov
sbb
mov
mov
and
movsb
dec
in
popf
icebp
push
adc
ret
mov
rcr
push
cmpsb
jge
clc
aad
movsl
jecxz
mov
popa
bound
jo
sbb
mov
decb
cmovne
adc
xchg
adc
sahf
xchg
sub
faddl
into
mov
mov
test
test
or
push
fcomps
es
push
lret
dec
pop
inc
ss
sbb
imul
push
fisttpll
xchg
out
add
fisubrl
jo
pop
or
dec
xor
iret
mov
movsl
push
pop
jle
push
mov
in
jae
loopne
les
adc
aad
sbb
mov
sub
pushf
xor
jmp
lds
cli
mov
insl
out
jle
and
push
xchg
adc
repnz
test
or
xchg
mov
jge
xor
cs
push
mov
xor
ror
mov
in
or
fs
sbb
push
pop
push
loope
or
aaa
pop
and
jnp
sbb
sbb
inc
add
add
fildll
lods
push
lea
in
adc
push
sbbb
cli
inc
fisttpl
loopne
and
in
sbb
dec
lods
mov
add
xchg
lock
fistl
fstps
and
xchg
xor
push
aas
xchg
sbb
into
dec
sbbb
es
dec
lds
aad
fadds
adc
mov
dec
add
cmp
rcr
les
into
sub
mov
pop
es
movsb
fcmovb
cmpsb
aad
mov
cltd
or
adc
xchg
pop
pop
pop
leave
repnz
ljmp
leave
in
gs
mov
jmp
mov
cli
mov
xlat
stos
out
jo
inc
rorb
push
mov
ljmp
inc
or
cmp
fsubl
int
jo
sbb
and
sbb
mov
jne
mov
inc
adc
jo
sahf
aam
andl
jl
out
mov
ljmp
mov
shlb
mov
mov
jae
cld
adc
cmc
roll
aam
lret
jnp
or
cmc
gs
dec
daa
fstl
out
push
subl
dec
loop
imul
aaa
inc
mov
inc
jno
or
inc
push
jp
xor
pop
pop
and
sub
outsl
fwait
mov
adc
lea
sbb
jae
loopne
test
push
push
push
lods
mov
push
fcmovnbe
mov
repz
sti
push
xchg
xlat
lods
fs
inc
jmp
inc
lahf
mov
inc
cmp
ret
mov
lea
loopne
add
add
popa
cltd
sub
pop
call
dec
mov
mov
fdiv
and
add
inc
push
shr
out
push
push
or
xor
pop
cmpb
das
jp
mov
mov
push
mov
or
daa
mov
int
test
and
fists
mov
stos
mov
mov
and
inc
jp
mov
jge
stos
imul
cmp
xchg
and
jle
pop
mov
sub
lds
aaa
inc
fldcw
insb
imul
xor
mov
test
out
push
push
jno
adc
mov
push
mov
int3
idivb
xor
inc
mov
dec
cmp
mov
push
and
add
jns
xor
bswap
adc
ljmp
inc
neg
push
pop
cmpb
pop
ja
and
inc
adc
bnd
xor
sbb
jg
fstps
sbb
or
jnp
push
mov
add
addr16
popa
mov
mov
ds
mov
or
or
jns
shll
cli
in
dec
iret
fbstp
mov
jb
or
xor
or
and
das
mov
popw
cmp
sub
daa
test
lret
jo
negb
xor
stos
xchg
lea
vcmppd
pop
jne
lds
test
add
or
aas
imul
mov
add
push
or
mov
or
iret
pop
cld
imul
dec
cmpsl
push
sub
aaa
adc
lcall
inc
jmp
rolb
inc
xchg
aad
xor
idivl
outsb
push
adc
lods
xchg
jmp
xchg
add
mov
mov
lods
mov
dec
adc
pop
jge
dec
sub
mov
push
inc
sbb
outsb
fsubrl
add
dec
push
sti
inc
adc
dec
mov
sbb
xor
out
sub
xchg
sub
jne
xor
add
mov
aaa
out
cmpsb
fs
std
arpl
push
imul
mov
or
test
pusha
outsl
repz
jge
pop
xor
push
aad
das
jle
jns
repz
adc
lock
adc
jno
leave
pop
loope
out
mov
decl
push
xchg
sub
add
jnp
dec
lods
dec
inc
push
ljmp
lds
xor
aam
scas
mov
outsb
jo
in
loopne
clc
addr16
iret
mov
cmp
mov
nop
xlat
imul
cli
sub
sub
icebp
cmp
cmp
cwtl
or
lock
pop
lcall
fdivl
cmp
or
pusha
loop
shl
movsb
pop
jmp
aam
out
rclb
sub
push
mov
mov
dec
ja
sub
sti
xor
outsl
addr16
push
jp
shl
xor
mov
sbb
sub
push
call
sub
sbb
mov
push
xchg
dec
mov
mov
popf
mov
or
sbb
fdivs
lds
push
lea
jbe
sub
arpl
in
gs
imul
pop
pop
int
cmp
pop
and
stos
hlt
clc
push
in
dec
dec
push
stos
clc
cmp
sbb
jae
lahf
aam
xchg
xchg
add
mov
cmp
add
xorl
sub
mov
fcmovbe
sbb
mov
or
dec
sbbb
lea
imul
or
out
or
ds
dec
ficomps
push
adc
add
xchg
dec
inc
aas
sbb
jne
sbb
mov
adc
stos
popf
xor
push
rorl
mov
pop
popf
stc
sbb
popa
clc
mov
aad
call
mov
jno
jnp
fildl
xchg
jp
push
inc
ds
pop
jnp
push
fs
jl
or
pop
out
cmp
test
das
mov
jmp
xchg
pop
fisubrs
movsl
rclb
pop
imul
pusha
rorl
cmp
push
leave
insl
adc
jge
out
fs
adc
aad
rcrl
adcl
in
xlat
fwait
xor
test
bound
mov
xor
mov
mov
add
daa
adc
cmpsl
jecxz
and
out
push
mov
sbbb
lea
jmp
insl
xor
xor
rcrl
jbe
xchg
push
pop
imul
jecxz
js
dec
xcrypt-ecb
cmpsl
dec
mov
jbe
xchg
fcomi
mov
test
fwait
mov
sarl
or
test
ljmp
je
imul
push
or
jne
push
pop
cli
test
or
ss
fwait
inc
add
sahf
mov
cwtl
or
jmp
mov
es
imul
inc
lods
jp
mov
push
dec
push
ret
mov
sub
jecxz
mov
mov
pop
mov
mov
jae
push
dec
jno
inc
jnp
sbb
xor
std
ss
pop
push
push
xlat
jmp
into
adcb
sahf
in
cmp
cmp
and
sub
je
pop
orl
cmp
lcall
xchg
mov
xor
jnp
icebp
lock
les
out
sahf
jg
xchg
shl
addb
pop
ficompl
lcall
call
hlt
xchg
mov
add
jecxz
daa
int
cmp
outsb
popf
js
and
and
stc
jns
sub
andb
mov
mov
push
sbbb
sbb
ss
sub
inc
inc
or
inc
inc
and
iret
push
ja
popf
add
and
lea
jns
repnz
sar
sar
test
adc
push
mov
fists
mov
fldl
pop
movsb
push
or
in
mov
inc
dec
or
scas
ljmp
mov
jmp
adcl
push
shrl
and
rcrb
mov
mov
push
in
out
lret
inc
sub
push
push
push
and
decb
into
push
loopne
loop
sbb
cmp
mov
orl
cmp
popa
fdivs
mov
sub
jecxz
pop
arpl
enter
jo
aam
loopne
mov
mov
jg
or
sbb
and
mov
mov
scas
cmpsl
lahf
out
orl
subl
fadd
mov
rorb
cwtl
cmp
add
mov
dec
push
mov
inc
and
adc
inc
mov
sbb
mov
aas
sbb
adc
icebp
fisubrl
arpl
in
push
push
inc
pop
imul
or
pushf
xchg
mov
and
add
fistpl
pop
push
jno
jmp
mov
or
lcall
leave
js
cli
and
sub
push
test
outsb
dec
repz
in
call
mov
sbb
mov
iret
xlat
mov
mov
pusha
or
cmp
das
adc
data16
and
jns
jle
dec
xchg
mov
or
dec
xchg
scas
es
xor
push
negb
pop
xlat
sti
mov
inc
outsl
gs
jge
xlat
fidivs
lds
cmp
adc
sub
cmp
cmp
jg
sbb
das
in
push
xchg
adc
sbb
mov
fwait
mov
dec
jno
xchg
xor
and
sub
outsl
cli
add
xor
jg
mov
mov
scas
cmc
scas
jg
scas
xchg
add
pushf
lahf
fsubrl
mov
jmp
divb
pop
xor
jecxz
icebp
jp
test
test
fwait
and
aam
pusha
jle
xchg
adcl
mov
faddp
jmp
js
add
dec
repz
cmp
ret
hlt
cltd
std
dec
les
cld
arpl
add
cwtl
adc
cs
lods
ja
test
or
mov
mov
adc
fisttpll
ficoms
fistpl
jbe
insl
ds
and
xchg
mov
xchg
jle
ljmp
or
call
dec
stos
sub
cld
ds
sbb
lods
pop
or
inc
ja
xor
or
imul
test
pop
pop
clc
adc
ds
adc
sub
ds
xchg
mov
fldl
xor
add
das
out
xor
pop
pop
inc
lea
jns
fstpt
pop
call
test
lcall
int3
cmp
arpl
sub
dec
fldl
inc
xchg
clc
xchg
gs
sbb
stc
iret
and
inc
outsb
insb
ficoms
mov
test
movsl
push
xor
dec
test
pusha
or
cli
mov
sub
inc
mov
pop
cmp
push
lds
and
fwait
or
test
repnz
cmp
fildl
mov
imul
ljmp
sub
jae
in
test
fadd
rorl
rcr
mov
fwait
mov
std
and
xchg
mov
lea
fnstcw
inc
mov
loop
jo,pn
test
pop
mov
or
xor
mov
test
rolb
or
je
lods
and
loop
cwtl
rolb
dec
pop
and
adc
sbb
mov
sbb
hlt
jnp
and
inc
lock
roll
cmp
xchg
pop
jo
or
mov
pop
repz
insl
sub
mov
pop
add
gs
mov
into
and
cmpsl
cs
mov
and
sbb
lcall
mov
daa
jl
mov
ljmp
mov
movsb
and
jns
repnz
icebp
gs
std
loope
push
stc
loopne
ds
jne
jmp
dec
pop
pusha
outsb
popf
mov
imul
cmp
and
mov
and
sbb
cmpsb
lods
in
popf
mov
pushf
cmp
inc
notl
jp
popf
xchg
jmp
add
adc
and
adc
lret
loop
cmp
outsl
sbb
ret
pop
rcll
out
test
leave
popa
pop
add
stos
.byte
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
sbb
call
int3
adc
div
fs
xchg
ror
into
out
cld
test
or
pop
sahf
sub
rorb
and
add
jmp
push
xlat
les
divl
cmc
mov
mov
pushl
mov
pop
jle
mov
sub
push
mov
pop
sub
mov
add
sbb
push
sub
popl
mov
sub
movzwl
sub
jne
call
movb
mov
jecxz
mov
mov
sub
add
sbb
orb
dec
insb
popa
int
je
sbb
es
int
add
lods
frstor
movsl
hlt
fdiv
or
adc
int3
add
fcompl
movsl
hlt
sub
rorb
iret
xor
jg
sub
lcall
ss
sbb
test
jne
test
mov
push
int
add
mov
loope
jb
das
sub
outsl
push
cmc
pop
mov
add
and
movsl
out
in
loope
adcb
faddl
mov
iret
mov
in
movsl
repz
ja
out
adcl
and
and
rcrl
lcall
adcb
dec
xchg
into
clc
arpl
into
adc
ja
test
inc
push
xchg
cmp
xchg
scas
mov
cmpsb
popf
sub
jle
int3
je
adc
mov
jae
xor
lock
jnp
xchg
mov
cmp
mov
test
add
cmpsl
push
jg
mov
outsl
xchg
xor
pop
test
mov
push
sub
popa
cmp
xchg
adc
scas
int
sarl
inc
repz
negb
lahf
sbb
loop
add
cs
xchg
mov
das
pop
addr16
add
and
jnp
dec
into
hlt
sbb
xor
fwait
and
push
sbb
outsl
mov
outsl
jns
adc
ret
sbb
add
add
push
pop
adcl
mov
leave
mov
test
das
mov
fxch
sbb
negb
add
lahf
mov
cmp
ret
xchg
push
inc
xchg
repnz
aam
in
stc
je
or
test
xchg
sarl
push
cli
fistps
hlt
cmc
sbb
out
es
insb
lret
xor
adc
jle
les
add
repz
es
testb
xor
mov
ljmp
or
add
mulb
add
sbb
inc
testl
imul
cmpsb
mov
jp
clc
cs
in
out
or
or
shlb
mov
cmp
push
ss
test
pop
mov
or
mov
push
stc
pop
popf
rcr
adc
std
pop
test
outsb
pop
jbe
and
es
outsb
cltd
insb
jbe
pop
test
add
aaa
icebp
es
xchg
mov
enter
repz
test
es
data16
dec
stc
pop
test
pop
test
and
add
div
inc
and
iret
pop
insl
into
repnz
test
adc
pop
xor
cmp
pop
mov
stc
pop
ss
push
arpl
enter
pop
fdivl
adc
mov
xchg
or
insb
test
mov
and
push
stc
add
jg
pop
test
stc
pop
loopne
std
pop
test
lds
out
int3
pop
push
push
stc
jge
cmp
pop
test
repz
xor
test
stc
add
mov
fdivrs
scas
push
stc
pop
push
es
pop
test
std
pop
test
sbbl
mov
push
pop
test
sbb
ja
test
add
outsb
out
dec
stc
pop
imul
test
negb
mov
push
cmp
push
push
mov
add
lea
mov
cltd
lods
pop
cmp
pop
jg
pop
test
insl
out
dec
stc
pop
iret
mov
ja
test
add
push
stc
add
push
outsb
xlat
jo
stc
pop
or
in
sbb
test
pop
push
es
pop
test
out
xchg
repz
inc
sub
push
jns
test
repz
loope
pop
test
pop
test
cltd
test
pop
test
pop
cwtl
mov
out
or
shrb
ret
inc
jg
call
push
dec
add
add
push
test
jle
call
push
test
pop
dec
add
add
push
test
mov
imul
imul
push
inc
mov
call
push
andb
mov
pop
test
pop
mov
push
fwait
jle
call
push
insb
push
call
pop
test
pop
mov
push
les
call
push
push
test
xchg
insb
bound
xchg
pop
addb
mov
insb
vcvtsd2ss
push
imul
imul
inc
mov
loopne
test
das
test
pop
out
cmp
push
mov
insb
bound
imul
test
xor
mov
popf
sbb
push
bound
mov
cmp
adc
mov
xor
ja
jge
or
jle
push
addb
test
pop
inc
outsl
clc
pop
test
pop
test
pop
jecxz
and
xchg
push
push
pop
test
stos
or
push
shl
into
out
pop
test
iret
push
push
stc
pop
adc
outsb
dec
or
in
test
addl
call
add
negb
mov
outsb
dec
xchg
stc
mov
jle
in
push
push
xchg
std
mov
scas
jns
mov
inc
aas
stos
addl
pop
into
dec
test
cmp
rorb
pop
pop
in
ret
mov
aaa
push
fidivs
cmp
negb
dec
lret
dec
or
mov
jl
add
imul
pop
mov
sub
push
inc
dec
testb
inc
test
pop
test
pop
test
pop
test
pop
test
pop
test
pop
test
pop
test
lock
scas
push
negb
adc
pop
test
pop
test
sbb
imul
push
pop
addb
pop
test
pop
test
pop
test
pop
test
mov
lock
lret
xlat
sbb
inc
pop
shlb
jae
push
popl
rcll
clc
mov
test
lods
idiv
push
mov
pusha
fcoms
mov
cmp
or
sahf
xchg
jne
fcoms
push
ds
sbbb
xchg
xchg
mov
push
push
repnz
jnp
push
pushf
insl
scas
aaa
idivb
dec
movsl
clc
mov
movl
pusha
and
or
fwait
mov
mov
lahf
lret
mov
mov
xchg
out
scas
addr16
dec
adcb
xchg
mov
dec
inc
cmp
loop
jecxz
clc
ss
lret
mov
js
or
repnz
jmp
jae
jae
lock
inc
xchg
les
mov
jae
cwtl
mov
push
push
xor
jmp
ret
ds
rorl
mov
dec
loopne
fisttps
xor
test
xor
cwtl
fs
push
sub
fidivrs
jno
jno,pn
mov
jnp
iret
fstl
xor
jnp
inc
dec
lahf
loope
popf
xor
sub
pop
loop
test
adc
cmp
xchg
lods
xor
xor
test
fsubrs
xor
loop
mov
push
lock
aas
ja
incl
shlb
cltd
cmp
cs
pusha
inc
push
or
testb
pop
insb
sub
or
dec
out
mov
push
in
fldt
je
dec
mov
pusha
cmc
jo
cmp
jne
aas
cmpsb
scas
std
pop
cmpb
jns
mov
test
mov
fldcw
test
or
cs
xchg
inc
out
inc
push
sbb
ret
jne
repnz
mov
jge
mov
dec
push
outsl
cmp
sti
insb
xor
add
push
or
push
or
outsl
iret
decb
cs
loope
sar
lahf
rorl
arpl
out
jbe
test
cld
xchg
mov
and
scas
fsubl
lret
jl
js
mov
fsubrl
cmpb
lcall
jecxz
adc
je
lahf
inc
sti
arpl
xchg
outsl
outsl
cmp
pop
and
and
mov
pop
mov
xchg
std
mov
insb
sub
ret
and
mov
loopne
insb
adcl
insb
push
or
push
jno
xlat
push
dec
jnp
in
xor
push
inc
test
ja
nop
cli
daa
in
pop
xor
or
cmp
cmpsb
mov
ss
std
pop
out
adc
movsl
outsb
jp
lahf
and
adc
add
cmpsb
push
mov
mov
fimull
in
pusha
push
mov
add
and
add
add
add
rorb
rorb
xor
adc
dec
add
dec
or
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
dec
or
hlt
dec
or
adc
or
cmovg
and
add
dec
or
cs
or
pop
dec
or
cmp
add
dec
or
inc
dec
or
das
dec
or
dec
dec
or
aaa
dec
or
pop
dec
or
aas
dec
or
push
dec
or
je
or
dec
dec
or
orl
add
dec
or
lcall
add
dec
or
mov
or
ja
or
rorl
jg
or
leave
dec
or
xchg
add
dec
or
dec
or
fimuls
add
add
add
dec
or
lahf
dec
or
cmc
dec
or
cmpsl
dec
or
add
add
add
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
gs
insb
xor
cs
insb
add
outsb
insl
insl
cs
insb
add
popa
arpl
xor
fs
insb
add
imul
fs
insb
add
outsb
imul
insb
add
jbe
jo
xor
cs
insb
add
outsl
arpl
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
jb
fs
insb
add
imul
insb
add
xor
xor
fs
insb
add
jb
imul
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
dec
or
add
add
fmull
add
add
add
dec
or
add
add
add
add
add
add
push
or
add
add
and
or
add
add
ds
or
add
add
push
push
or
add
add
arpl
add
add
add
or
add
add
adcl
add
add
xchg
push
or
add
add
mov
add
add
add
add
push
or
add
add
fstl
add
add
add
push
or
add
add
stc
push
or
add
add
or
add
add
add
push
or
add
add
add
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
push
gs
jb
inc
jbe
outsb
je
add
add
gs
je
push
imul
inc
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
jbe
dec
jne
push
jb
je
add
add
insl
inc
outsl
jb
popa
je
push
inc
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
dec
outsb
je
jb
gs
gs
fs
imul
je
arpl
imul
add
push
push
inc
inc
insb
gs
outsb
jne
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
popa
jb
push
gs
imul
push
jns
inc
jb
gs
je
imul
insl
popa
addr16
imul
dec
arpl
push
imul
dec
gs
jo
outsb
inc
outsb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
inc
dec
outsl
arpl
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
je
gs
outsl
popa
jb
push
jns
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lds
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
pop
cmpsl
pop
inc
dec
into
hlt
cltd
jl
leave
addr16
inc
popf
add
in
cmpsl
std
push
cmp
adc
sti
hlt
adc
sub
sbb
cs
pushf
ss
jne
mov
xor
sbb
in
add
pop
adc
mov
mov
fisttpll
dec
test
jbe
popa
call
imulb
mov
iret
outsl
icebp
xchg
testl
jl
cmc
dec
js
aad
pop
jnp
std
mov
in
sbb
xor
inc
mov
mov
pop
scas
inc
mov
mov
stc
mov
daa
into
scas
mov
mov
imull
mov
xchg
mov
xchg
sbb
nop
fisttpll
jbe
in
and
jle
call
xchg
pop
cmp
lds
adc
or
push
dec
mov
pop
sbb
movsl
push
pop
jecxz
clc
imul
ljmp
ljmp
enter
jmp
lock
and
jmp
mov
loop
sbb
jne
scas
lds
cmp
push
sbb
out
mov
lea
addb
aam
setb
push
in
sbb
lahf
pop
enter
je
jb
shr
sub
inc
andb
pop
outsb
mov
mov
jge
jns
nop
push
fwait
test
lea
xor
call
cmp
nop
dec
cli
mov
push
xor
dec
inc
jmp
dec
insl
sub
ss
test
pop
sbb
sar
cs
clc
lock
fs
into
mov
lods
shll
sbb
adc
mov
aad
mov
xchg
xchg
pop
mov
push
sbb
mulb
pop
das
inc
and
stc
sub
inc
sub
hlt
mov
repnz
sarb
pusha
xchg
pop
inc
add
jnp
jbe
repnz
pop
mov
cmpsl
lods
in
and
mov
or
push
mov
fstps
and
adc
sti
add
jl
mov
or
push
pop
jns
mov
cmpsl
loopne
mov
ret
lea
add
bnd
ret
and
sbb
mov
cli
arpl
mov
test
adc
sub
sbb
and
jnp
adc
push
or
les
cmpsb
pop
inc
mov
xchg
test
clc
xor
cmp
out
inc
push
popf
xchg
add
maskmovq
negl
push
insl
xchg
pop
mov
push
sbb
fwait
out
pop
mov
xchg
jo
jns,pn
ja
cmpsb
xor
clc
sbb
dec
je
cmpl
sbb
dec
mov
mov
out
shlb
in
sbb
or
shlb
push
xchg
pushf
cli
call
push
daa
pop
outsb
push
add
das
add
rclb
adc
loopne
push
cmpsl
bound
sub
leave
pop
xlat
xor
decl
mov
icebp
insl
jge
lret
xor
dec
pop
loop
mov
jge
push
cmpb
push
add
or
mov
cmpsb
fs
pop
push
test
stos
pop
rcrb
push
fwait
adc
and
or
movsb
popa
and
lea
insb
scas
loop
mov
adc
stos
pushf
jae
ret
push
adc
pop
jg
cmpsl
movsb
mov
add
xchg
mov
popa
and
lcall
cli
aam
rcll
loope
mov
test
arpl
mov
imul
in
imul
sbb
pop
push
insb
sahf
cmp
test
dec
push
loop
xchg
cmpsb
outsb
and
inc
inc
mov
mov
and
leave
fisubrl
dec
or
cmp
repz
jb
push
sub
pop
inc
adc
push
imul
xchg
fmull
repnz
push
and
test
dec
sbb
push
inc
cmp
scas
mov
fwait
adc
in
fs
in
mov
sub
aas
mov
popa
clc
sahf
lret
cmp
outsl
sub
rcrl
nop
adc
jo
push
push
das
mov
pop
fidivrl
mov
cmp
test
jne
ret
jmp
sti
imul
fnsave
hlt
addl
imul
popf
sbb
lret
or
popa
pop
jns
cs
mov
or
lahf
sub
sti
mov
inc
mov
ret
or
mov
jae
add
repnz
js
jns
stc
and
pop
xor
xchg
push
cmp
leave
pop
jno
ret
arpl
sub
dec
sub
icebp
inc
inc
and
mov
ss
adc
sahf
or
iret
enter
sub
xor
test
pop
outsl
rcr
pop
rcll
push
push
repz
xchg
mov
test
sbb
notl
and
movsb
xchg
aaa
and
paddw
arpl
push
xchg
sbb
outsb
cwtl
imul
mov
stos
rorb
mov
sbb
mov
jmp
or
and
xor
ljmp
neg
fidivs
add
or
jle
shll
pop
and
jnp
pop
dec
adc
cwtl
imul
lods
sub
rolb
scas
repz
scas
in
popf
sub
jg
arpl
or
or
inc
in
stos
les
mov
push
leave
lcall
and
and
add
add
mov
inc
cwtl
xlat
pop
push
pusha
lock
mov
in
jp
xchg
enter
xchg
imul
cmp
jge
mov
adc
lcall
cmpb
lret
fcomps
pop
aaa
call
jl
inc
repnz
dec
cltd
iret
pop
notl
mov
jp
pop
cmp
mov
daa
mov
and
insb
jmp
sub
xor
or
lods
shrb
push
jbe
mov
xchg
movsb
jge
gs
cmp
push
pop
insb
sub
popf
aaa
mov
negl
ljmp
push
jecxz
push
shr
call
mov
add
movq
bound
mov
add
dec
inc
fwait
inc
mov
sbb
daa
mov
pusha
and
xor
into
mov
mov
cli
dec
jne
mov
fsub
jns
adc
jg
sub
sbb
pop
sbb
mov
cmp
push
cmp
inc
lret
sbb
ljmp
rcr
dec
jmp
sarb
mov
xchg
popf
test
cmp
mov
inc
sub
mov
dec
push
mov
test
cmp
cmp
jmp
fstl
test
xor
inc
imul
sbb
and
cmp
por
mov
adc
bound
out
arpl
mov
test
imul
mov
mov
ret
cld
fcoms
rorb
xlat
jmp
cmpsl
adc
xchg
jmp
push
call
fcmovnbe
sub
pop
int3
cmp
inc
xchg
inc
arpl
aaa
stc
fwait
scas
xchg
shl
jae
fidivrs
adc
stc
in
mov
jnp
or
xchg
adc
sbb
and
push
jl
cwtl
sub
idivl
aad
sbb
and
jp
push
insb
xchg
mov
xor
in
stos
add
push
push
add
out
lret
push
out
push
xchg
arpl
and
pop
out
mov
jmp
pop
push
mov
jge
mov
int
in
cmpsl
or
fmuls
xchg
add
sub
xor
int3
je
mov
test
xor
push
movsl
insl
outsb
rol
dec
cltd
pop
xchg
push
out
dec
lds
shrl
icebp
mov
sarb
movsl
outsl
pop
ljmp
pop
loopne
leave
sub
ficomps
popf
mov
stos
sbb
mul
push
ficoms
pop
xchg
mov
mov
jmp
lcall
test
inc
in
call
push
cmpsb
sbb
or
xchg
mov
rcrl
mov
ljmp
xchg
fsubr
push
enter
jns
jecxz
imul
mov
stos
ljmp
xor
mov
mov
flds
cmp
pop
mov
pop
xchg
or
xchg
and
mov
and
push
arpl
cwtl
lea
inc
popf
sahf
inc
mov
and
or
inc
jo
mov
mov
jmp
xchg
in
cmovl
mov
repz
and
dec
mov
add
pop
loop
push
inc
mov
cmpsb
or
lods
movsb
lret
sbb
outsb
xchg
xor
pop
cli
shll
xor
sahf
fcoms
mov
adc
lret
mov
inc
rcll
shlb
dec
pop
dec
cmpsb
lahf
je
pop
dec
push
ljmp
or
pop
xchg
push
dec
pop
sbb
mov
pop
divl
mov
jnp
aas
imul
pushf
xchg
xchg
shrb
sahf
push
fistl
lcall
data16
std
movsl
adc
jbe
xchg
or
in
xchg
sbb
inc
imull
jmp
mov
sbbl
and
mov
addr16
hlt
mov
adc
test
mov
ja
sbb
sahf
dec
and
push
fldt
push
loop
insl
push
mov
js
fnstsw
and
cwtl
mov
adc
cmpl
lods
scas
pop
aad
jle
pushf
cmp
das
or
loop
std
jle
aas
xchg
inc
jo
rcl
enter
adc
inc
jg
js
xor
lea
andl
mov
and
mov
mov
mov
fcmovnb
popa
mov
mov
inc
stos
cmp
cltd
sub
add
jno
mov
shlb
jae
xor
mov
jle
test
xor
or
lahf
mov
pop
stos
je
push
test
xor
jge
adc
dec
repnz
sbb
xchg
dec
mov
outsl
and
push
mov
mov
mov
loope
cld
inc
push
inc
arpl
sub
lahf
iret
push
hlt
jl
inc
fwait
cmp
mov
aaa
lock
cld
cld
int
movsl
arpl
jne
out
andb
int3
sub
push
dec
cs
stos
xor
cmp
jmp
popa
jo
into
mov
sbb
js
jmp
and
jns
sub
cltd
nop
nop
pop
stos
lods
std
repnz
mull
sbb
ja
aas
mov
cmpsb
inc
in
jo
out
out
repnz
mov
addr16
pop
mov
mov
push
sti
aaa
loopne
es
clc
ret
frstor
xor
mov
mov
in
pushf
subb
jecxz
add
mov
xor
fstpt
or
dec
xchg
mov
fidivrs
and
jo
icebp
movsb
xor
call
dec
rclb
sbb
pop
pusha
call
popf
outsl
jnp
mov
lods
cltd
out
shrb
aaa
sub
cmpsb
insb
hlt
mov
lret
sbb
jp
sub
data16
mov
in
shlb
gs
lods
or
call
shl
cmp
xchg
adc
inc
sub
outsl
in
xchg
or
ret
out
cmp
xor
decl
cmpsl
pop
lods
pop
popw
faddl
jne
shrb
mov
jns
outsb
ljmpw
sbb
push
sub
aam
je
xor
push
cwtl
stos
sub
push
shll
add
stos
jecxz
scas
dec
and
loopne
lods
testb
pop
push
mov
xchg
jmp
jae
push
push
cmp
xchg
mov
rclb
and
push
push
and
imul
popf
std
sbb
mov
stc
push
push
jne
test
test
sti
xor
cmp
cltd
lock
jnp
sub
clc
fisubrl
adc
movhps
sub
xor
sub
mov
xchg
psubw
xchg
aad
lods
push
mov
daa
or
mov
sbb
mov
sbb
movsl
lock
inc
ret
ds
or
jne
dec
inc
movq
sbbl
pop
imul
adc
in
ja
jb
fcomip
mov
dec
repz
sahf
fidivl
aaa
inc
sub
pop
jno
std
fwait
jle
push
inc
pop
lahf
test
push
testl
mov
inc
adc
mov
mov
imul
mov
mov
sbb
sub
pop
and
mov
mov
sti
test
inc
or
mov
jge
adcb
mov
lret
sub
mov
cmpsl
bound
push
arpl
stc
dec
mov
imul
sub
jp
xor
or
inc
jg
test
jmp
mov
sub
hlt
and
push
dec
cmpb
push
push
xchg
out
pop
cmp
shlb
loope
nop
sbbb
arpl
jae
xchg
inc
insb
inc
aas
ret
and
sarl
fcomps
cwtl
inc
fistps
cmp
lock
dec
test
sbb
jne
xlat
mov
add
in
icebp
mov
pop
inc
mov
lods
addr16
out
cmp
out
ljmp
push
adc
xor
xor
pop
push
adc
ljmp
cmp
lret
icebp
and
push
jg
dec
daa
iret
jae
mov
ror
xchg
pop
sub
sahf
movsl
push
sbb
in
movsb
imul
add
jle
dec
out
add
add
lock
sahf
inc
push
sbb
sbb
mov
mov
dec
mov
hlt
mov
in
mov
cmpsl
xchg
xlat
jecxz
adc
and
sahf
sarb
xchg
add
cmpsb
outsl
pop
jmp
pop
inc
mov
xor
mov
data16
adc
call
cltd
jnp
xlat
push
lret
in
xchg
push
xchg
dec
sbb
and
daa
ljmp
imul
cs
or
ror
mov
clc
shl
add
dec
and
imul
lahf
pop
push
mov
mov
mov
lods
daa
es
test
mov
or
ret
sub
insl
fidivs
mull
rorb
cmp
imul
mov
fcmovnbe
jns
bound
mov
sub
pushf
and
xor
scas
mov
std
adc
add
cmpsl
sbb
xchg
mov
jl
ret
cmp
fldcw
popa
or
cld
ja
fidivs
xchg
ljmp
sbb
rcr
les
jecxz
lret
pop
jmp
je
cmp
add
xchg
mov
clc
fwait
dec
add
addr16
inc
leave
sub
xor
cmpsl
xor
loopne
movl
sub
sarl
xor
adc
roll
call
mov
xor
xor
in
sub
inc
adcb
add
inc
jle
cmp
stos
pop
call
shll
pop
or
jp
sbb
mov
popf
and
faddl
nop
pop
pop
pop
mov
js
testw
mov
iret
mov
repz
sti
pop
outsb
mov
jmp
iret
jne
sahf
mov
add
pmuludq
adc
mov
jns
sub
fmulp
aad
imul
js
pop
std
xlat
xor
aad
xchg
xor
add
jbe
xchg
jle
popa
sbb
sbb
ss
xor
sbbl
inc
push
lret
mov
push
es
xchg
mov
shr
test
mov
clc
push
jbe
roll
dec
fidivl
movsb
lahf
or
push
testl
rcrb
cmp
pop
dec
call
leave
add
xor
jo
push
orb
adc
scas
in
ja
mov
sub
adc
mov
cmp
and
ja
loop
into
aaa
jl
arpl
xor
push
push
rolb
cltd
jge
mov
int3
mov
jmp
push
addr16
and
std
scas
push
popf
dec
mov
pop
aad
adc
out
into
push
shlb
sbb
mov
add
mov
push
and
cmp
xor
sti
sbb
mov
mov
add
stos
jg
rorl
ret
out
punpckhdq
arpl
push
movsl
or
ds
lret
pop
test
lret
and
mov
pop
mov
or
push
cld
push
jmp
fmuls
pop
mov
sbb
push
add
stos
cmp
aam
ret
lds
scas
mov
and
cmp
pusha
or
dec
lods
and
mov
lods
mov
rcrb
das
leave
sub
ffreep
insb
call
sub
pusha
mov
stos
hlt
mov
pop
inc
fsubp
mov
jnp
xchg
fdivs
pop
filds
gs
mov
pop
addl
xchg
mov
outsb
jnp
xchg
into
outsb
repz
inc
push
add
loope
add
sbb
sub
xor
jae
add
out
jg
jbe
push
iret
sbb
dec
xor
rolb
pop
test
pop
lret
adc
cmp
mov
arpl
mov
jb
mov
push
add
cld
fcompl
sbb
xchg
mov
out
stos
xchg
es
mov
jne
cmc
and
sub
xchg
out
xchg
data16
faddl
jae
test
sbb
iret
int
cs
xor
mov
push
mov
scas
xchg
mov
inc
shll
call
cmc
dec
scas
mov
daa
das
out
pop
inc
add
add
push
in
in
push
pop
jle
pop
loop
pushl
jnp
outsl
mov
push
pusha
data16
pop
movsl
jecxz
out
mov
iret
call
sahf
in
loope
gs
sbb
sbb
ljmp
popa
std
sarb
stos
out
outsb
test
mov
loop
inc
dec
shll
cld
push
push
shrb
sbb
ja
loopne
movsb
inc
fwait
dec
cld
pop
pop
adc
or
outsb
pushf
push
pop
jne
or
pop
push
cmpsb
je
push
mov
jae
int3
dec
sbb
fidivrs
fucom
test
or
jae
aaa
ret
jmp
repnz
xchg
jl
xchg
lods
jbe
xorl
ss
pop
insl
imul
cmp
stos
ret
cmc
loopne
stos
xchg
pop
mov
cmp
add
arpl
rclb
fstpt
dec
aaa
mov
in
adc
adc
xchg
and
aad
dec
push
adc
adc
cmp
cltd
fs
les
inc
xor
fistpll
mov
test
in
xor
aas
nop
pop
ret
sbb
sbbb
mov
dec
pop
ja
adc
das
outsl
idivb
shlb
into
movsl
int3
push
mov
cmpsl
in
cmp
les
cmp
pop
sbb
movsb
or
popf
dec
cmp
mov
sahf
dec
lock
push
sub
jmp
jns
push
mov
jg
push
and
mov
lcall
loope
adc
jns
xor
das
int3
mov
iret
cli
insl
mov
add
adc
pushf
cmp
mov
outsb
iret
inc
sub
adc
incl
xchg
adc
add
enter
push
fisttpl
mov
icebp
dec
xchg
ljmp
je
push
sub
or
and
fstpt
dec
mov
mov
imul
aad
movsb
leave
cmp
dec
lods
jae
adc
mov
cmp
adc
movsb
lahf
sbb
insl
mov
mov
lcall
inc
mov
iret
mov
mov
mov
data16
or
cld
jae
sbb
popf
dec
pop
psubusb
and
sti
mov
rolb
into
into
arpl
jne
scas
inc
xor
mov
push
mov
fdivl
pusha
ret
movsl
ret
cmc
test
push
sub
cld
enter
mov
mov
je
xor
repnz
sub
jb
or
inc
and
js
lcall
add
jle
mov
mov
or
cltd
sbb
ret
aad
das
xchg
inc
mov
sahf
data16
push
pop
mov
cltd
ss
fstpl
inc
dec
and
jecxz
insl
or
mov
push
mov
dec
out
xor
leave
test
stos
out
pop
dec
andb
into
repnz
and
into
xchg
lcall
andb
jge
inc
lods
jns
les
jo
push
rcl
das
in
inc
mov
aas
xchg
es
out
cmp
orl
dec
pop
movsb
mov
adcb
xchg
iret
jns
mov
sahf
jb
sbb
jge
cltd
addl
mov
imul
sahf
mov
adc
pop
je
sarl
je
cmp
push
dec
in
mov
sub
aad
dec
ficoms
iret
mov
inc
and
xchg
dec
mov
inc
jo
push
pop
or
jmp
test
mov
xchg
inc
add
ficoms
pop
sar
pop
jmp
shll
xchg
cltd
dec
jo
mov
repz
add
jno
mov
sbb
xor
movsb
rorl
jb
hlt
or
and
mov
dec
rep
adc
pusha
incl
mov
dec
jg
jae
nop
clc
ja
xor
dec
xchg
fwait
shr
xchg
out
into
adc
xor
xchg
out
je
sbb
add
push
pop
hlt
lret
mov
add
and
xorl
shlb
mov
stos
loopne
and
arpl
daa
rclb
mov
fs
mov
push
lea
cmp
icebp
std
mov
xor
pop
orl
fldenv
negl
outsb
xlat
fmull
add
out
push
rolb
dec
or
repnz
fcomi
notb
fistl
jnp
sub
xchg
xchg
pop
xchg
test
test
cmp
mov
ja
iret
jge
or
insl
mov
adc
addr16
cmp
ror
mov
inc
repnz
jle
insb
lret
sbbl
mov
fcompl
and
sub
daa
shl
leave
hlt
out
mov
sbb
jno
add
xchg
push
iret
in
test
cmp
je
inc
aaa
pushf
popf
cmpsl
add
idivb
dec
call
in
test
dec
adc
jg
jmp
scas
mov
push
xor
in
adc
sbb
jecxz
jg
cmp
mov
testl
cmp
arpl
icebp
loopne
iret
std
adc
xor
pop
cwtl
sti
maskmovq
divl
popa
stos
in
lea
inc
sub
subb
and
xchg
je
jmp
pop
sahf
bound
mov
out
call
push
fdivl
es
sbb
push
mov
push
test
lahf
jg
mov
aaa
call
ja
cwtl
push
cmp
dec
jmp
das
jnp
mov
mov
pop
inc
rorl
add
mov
cmpsb
imul
xor
in
xor
add
jge
add
fsubr
aas
mov
pop
test
out
aas
bound
adc
sub
jl
mov
xorb
out
mov
push
lret
lahf
outsb
movsb
test
daa
pop
cmp
loope
push
xchg
mov
sub
movsl
xchg
shlb
imul
shl
pop
inc
fsubrs
sub
pop
fadd
fsubrp
mov
hlt
pop
jo
lock
lret
clc
fiaddl
in
insl
in
mov
sahf
test
outsb
sbb
mov
int3
aaa
fldenv
jnp
pop
adc
add
sub
popf
push
push
mov
arpl
dec
sbb
mov
cli
fwait
jne
dec
mov
xlat
add
sbb
push
jne
jl
and
mov
add
cmpsl
and
fildl
fdivrl
frstor
fisubrl
test
sbb
decb
aas
outsb
mov
ss
pop
enter
or
cmp
cmp
push
sbb
shl
pop
push
lock
in
xor
jmp
add
mov
inc
fwait
cmpsb
imul
mov
sub
xorl
bound
push
adc
mov
push
lds
dec
gs
push
in
cwtl
jo
mov
scas
xchg
jbe
in
pop
jmp
pop
cli
push
xchg
daa
fdivrp
popf
mov
cmp
push
call
sub
mov
sbb
popa
xor
clc
mov
mov
adc
jg
rorl
lea
inc
sub
jnp
push
pop
mov
shll
dec
data16
loope
xorb
mov
lea
sbb
mov
lret
cmp
dec
stc
cmpsb
mov
enter
mov
aad
inc
xor
pop
sar
or
lea
mov
cld
add
daa
pop
cmp
das
aaa
int
nop
movsl
dec
ret
subb
xchg
inc
jns
out
inc
push
jno
xchg
and
inc
outsl
mov
and
in
sahf
lret
dec
dec
sbb
pop
sbb
cli
dec
jp
dec
inc
mov
enter
sub
movsl
mov
lret
sub
or
or
mov
push
rorb
aam
scas
ret
add
out
adc
addb
arpl
xchg
adc
popf
repz
inc
fdivrp
flds
test
dec
pop
rcrl
cmp
mov
fidivrs
adc
lahf
mov
xchg
jb
incb
rclb
daa
in
add
add
cmpsb
sahf
cltd
dec
fbld
jmp
fdivrs
push
imul
mov
sub
add
loop
mov
popf
xor
scas
mov
mov
pop
mov
loope
les
stc
push
sbb
or
inc
add
mov
roll
lea
adc
or
add
cmp
adc
xlat
cwtl
fld
or
dec
test
or
add
add
gs
lock
jb
test
js
popa
out
sbb
ss
ja
push
sbb
movl
mov
call
fiadds
scas
in
mov
jecxz
rol
fiadds
sbb
mov
aaa
aad
stos
xchg
sub
xchg
jmp
arpl
push
cwtl
cmpsb
ss
xor
push
icebp
xchg
fistpl
xor
mov
mov
mov
aas
test
shrb
sti
mov
and
addl
in
lcall
scas
pop
out
cld
daa
outsl
jb
and
call
and
subl
add
cltd
movsb
xchg
inc
jnp
jno
or
outsl
loop
push
push
bound
cld
fstpt
iret
data16
dec
mov
sub
sbb
mov
loop
sub
sub
push
out
or
jnp
mov
lret
nop
xor
xchg
shrl
cmp
test
inc
lahf
and
jp
lea
js
xchg
enter
sub
jbe
push
add
adc
dec
and
dec
dec
fwait
mov
or
ficoml
xlat
mov
or
lods
les
dec
adc
popf
and
out
jl
lods
jo
adc
repz
imull
lods
stos
push
xor
xor
or
nop
adc
mov
data16
movsl
jecxz
mov
mov
jl
adc
mov
sub
mov
test
inc
mov
popa
sbb
ljmp
adc
mov
and
outsl
cmp
adc
into
test
sbb
scas
cmp
sub
ja
mov
xor
push
inc
and
test
xchg
and
and
jg
lcall
inc
pop
popf
mov
mov
xlat
loop
mov
push
jae
iret
mov
inc
lock
pop
pusha
testb
mov
es
push
inc
cmpsb
or
and
add
pop
adc
imul
xchg
inc
pop
jecxz
adc
adcb
xchg
clc
jecxz
mov
cwtl
pop
imul
sub
pushf
cmp
inc
stc
jo
adc
es
das
flds
dec
roll
into
cmp
ds
in
cs
push
dec
loope
cmpsb
rcrb
imul
mov
lret
mov
sar
and
mov
inc
cmp
cli
stos
dec
int
xor
dec
xor
xchg
cmc
decb
int
fistpll
adc
push
pop
imul
rorb
add
fxch
fstl
pop
dec
test
sbb
jle
xchg
aaa
fsubl
pop
push
cmpsl
jbe
pop
xchg
jae
jno
cmp
mov
lock
arpl
and
adc
add
xchg
push
shlb
outsb
mov
mov
push
das
stos
xchg
xchg
mov
or
inc
cmpsb
or
cmpsb
ds
bound
js
sbb
lods
xchg
jmp
dec
adc
push
cmp
add
jl
push
adc
or
scas
and
lds
sarb
js
or
cmp
push
mov
andl
jecxz
adc
arpl
pop
stc
jb
pushf
loopne
imul
cmpb
fidivrs
das
mov
xor
into
cmp
mov
and
popa
cmp
push
lcall
test
jle
nop
dec
hlt
add
and
mov
sbb
jae
test
movsb
mov
pop
sti
aas
mov
sub
mov
das
int3
in
mov
adc
or
icebp
xlat
pop
jp,pn
pop
xchg
xchg
mov
dec
jno
or
add
iret
cmp
pop
pop
jnp
lea
lret
in
xchg
lods
movsl
loop
and
mov
mov
cmpsb
xchg
mov
scas
push
repz
push
aas
mov
pop
sbb
pop
stos
les
mov
insb
arpl
jg
push
shlb
push
gs
inc
or
les
mov
insb
lds
pop
jnp
daa
cli
xor
pop
shrl
xchg
out
ficoms
arpl
push
mov
jo
xchg
xlat
in
sbb
mov
mov
mov
leave
lahf
mov
gs
jecxz
mov
jbe
int
scas
mov
aad
aad
jae
pop
ret
cmpsb
sub
mov
mov
jae
pop
adc
aaa
inc
sti
lds
rclb
xlat
jnp
add
push
push
sarl
jne
push
bound
push
cltd
inc
cmp
int
and
fcomps
pop
inc
jecxz
xor
sbb
pop
jne
sbb
sbb
xor
outsl
jo
jp
cmc
xor
scas
lahf
push
shll
xor
cmp
push
js
mov
push
lret
in
jle
inc
push
sbb
cmp
jl
in
sarb
ds
xchg
mov
xor
mov
sahf
movsl
imull
xchg
mov
leave
movsb
testl
pop
insb
inc
cmpsl
jb
fists
mov
jb
sub
lret
pop
iret
das
imul
lds
enter
leave
sbb
out
xchg
inc
std
fcoms
loopne
roll
rorl
repnz
push
pavgw
dec
fisttpll
or
push
lods
and
loopne
mov
insl
gs
xchg
rorb
jmp
adc
jae
xlat
sbb
mov
rcrb
sbb
dec
pop
xchg
fdivs
hlt
jg
xchg
insl
aaa
add
add
movsb
mov
dec
test
daa
je
fimuls
je
cmpsb
and
ljmp
or
adc
out
loope
mov
ret
mov
inc
mov
pop
icebp
mov
jno
push
mov
jae
jnp
movsb
lea
mov
jl
jbe
insl
frstor
add
cld
fistpl
mov
jae
pop
in
inc
repz
mov
adc
movsl
mov
into
pop
sub
xor
xor
loop
or
sbb
cmpsw
addl
notl
inc
pop
cmpsl
sbb
rorl
jo
add
mov
mov
and
fadds
mov
xchg
jmp
test
dec
je
jo
and
cs
enter
and
and
scas
pop
cltd
ret
gs
vcvttss2si
push
sub
dec
das
shll
jnp
test
mov
mov
mov
xor
pop
loop
scas
xchg
and
out
out
sub
or
subl
sub
xchg
es
loope
incl
jg
xor
push
and
adc
pop
push
addr16
scas
les
loopne
mov
call
and
test
xchg
dec
sahf
jo
lods
scas
aad
and
xchg
mov
mov
dec
ss
imul
jle
sbb
xor
aaa
jmp
pop
pxor
xor
lcall
int3
shll
inc
in
mov
ja
fsubrl
push
and
lret
lahf
out
popa
mov
in
push
aad
ds
mov
mov
loop
js
add
jno
jo
rcrl
shlb
inc
popl
push
rcl
pop
data16
aas
and
add
idivl
bound
out
cmp
add
loop
scas
adc
fsubs
enter
jecxz
mov
pop
mov
jl
adc
jge
imul
fwait
mov
stos
loopne
pop
push
mov
cmp
jbe
popa
inc
out
ss
add
inc
sarb
lds
call
dec
mov
dec
popa
and
dec
lods
jl
call
repz
shll
jne
and
jmp
jns
add
mov
and
push
lods
hlt
mov
and
and
out
ds
pusha
jnp
push
and
jg
pop
jmp
mov
pop
push
aaa
shll
fwait
nop
imul
sbb
das
je
mov
jb
out
stos
in
das
sbb
test
cmp
out
adc
addr16
lock
mov
pop
push
xor
dec
fisttpl
cmc
std
mov
arpl
lods
mov
mov
mov
pusha
jge
push
sbb
and
lret
and
bound
lods
adc
gs
or
das
push
xchg
in
or
xchg
sbb
scas
sub
testb
jns
jnp
or
mov
pop
cmp
rol
fbstp
dec
test
mov
outsl
xchg
pop
push
ljmp
les
mov
fldl2e
xor
push
movsb
sar
scas
dec
xchg
rcrl
pop
movl
rcl
jg
enter
mov
xchg
lods
push
lcall
pop
pop
nop
mov
push
sbb
inc
mov
out
fiaddl
stos
je
lret
movsb
inc
das
mov
mov
rclb
fimull
daa
shr
push
pop
pop
gs
clc
fstp
out
sbb
sbb
ss
push
sti
or
dec
xlat
fnstcw
and
mov
rorl
bound
sub
mov
out
mov
andl
mov
dec
inc
adc
jnp
scas
icebp
xor
mov
into
sub
call
dec
pop
mov
mov
in
push
pop
or
mov
cmp
subl
repz
adc
cmp
mov
push
imul
pop
shll
add
je
or
stos
jmp
jo
inc
sbb
jno
mov
lea
ret
gs
push
clc
jmp
pop
repz
test
divb
rdtsc
push
in
gs
mov
mov
out
sbb
dec
aad
out
insl
dec
icebp
popa
mov
insl
jo
mov
fdivs
imul
jp
push
push
jecxz
ret
pop
iret
push
mov
push
mov
push
push
jo
lcall
cmc
mov
pop
testl
mov
shlb
xchg
ja
inc
mov
pop
stos
lahf
clc
pushf
out
cli
dec
iret
ds
cmp
and
stos
sub
fcmovnbe
stos
pop
jb
les
shll
cli
outsb
mov
mov
xor
and
call
add
sub
mov
mov
imul
loope
popa
sub
sbb
sub
jp
jo
stc
pop
push
cmpsl
push
sub
inc
iret
mov
sarl
pop
les
repz
push
test
jge
dec
leave
daa
and
add
in
out
movsb
repz
aad
mov
lea
xchg
sub
repz
dec
popl
cmp
fs
mov
daa
sub
aad
jo
fcompl
push
adc
lret
jnp
mov
cltd
div
leave
push
hlt
mov
adc
stos
jnp
data16
xchg
mov
call
xor
and
sub
inc
mov
je
std
jecxz
dec
scas
push
insb
ret
out
pmaddwd
mov
dec
sbb
mov
testb
jae
and
pop
xchg
dec
mov
int
outsb
daa
and
add
clc
shlb
sahf
enter
dec
pop
xchg
mov
add
jno
jbe
insb
rcrl
or
cwtl
add
and
cmp
loope
mov
dec
sahf
mov
inc
sub
xor
fimuls
outsb
xor
jg
ret
repz
jp
jl
pop
cwtl
cmp
movsl
adc
call
mov
imul
sbb
iret
mov
dec
cmc
sbb
int
mov
xor
lods
mov
outsb
rcll
mov
sub
int
popf
aam
sarl
ss
mov
ficomps
push
inc
push
clc
cli
and
outsb
rorl
add
pop
push
or
push
jl
ret
jae
loope
and
adc
sub
jns
xchg
push
push
insl
or
xchg
pop
sub
pop
push
inc
mov
data16
movsl
cmc
xlat
das
filds
mov
adc
rorb
arpl
in
pop
in
cld
int3
push
push
or
repz
ss
movsl
jbe
push
jg
sbb
adc
xor
and
mov
xchg
sub
mov
iret
lds
inc
jecxz
or
fdivrl
or
nop
push
stc
pop
add
jns
push
xchg
arpl
jp
jae
out
out
xor
fildl
imul
add
fs
pop
xchg
sub
cmp
in
int
addr16
sbb
lods
cmp
dec
push
jecxz
push
mov
orb
scas
out
cmp
lahf
push
sbb
sub
aas
js
int3
scas
mov
scas
stc
mov
or
xorl
push
add
push
loop
sbb
pop
mov
dec
pop
xlat
sti
out
ljmp
pop
dec
repz
call
mov
dec
pusha
push
nop
test
jge
mov
jl
cmp
stos
addr16
jne
add
out
inc
mov
int
fdivrl
out
jecxz
ss
cmp
jp
mov
pop
jmp
jecxz
mov
push
mov
xchg
aas
or
imul
push
adc
xor
out
sub
std
mov
push
mov
daa
pushf
jb
stos
push
dec
push
lret
cmp
data16
out
out
push
dec
pop
and
icebp
mov
sbb
je
out
pop
bound
jecxz
push
negb
enter
or
sbb
cmp
mov
pop
not
es
pushf
sbb
push
lret
sti
push
push
sbb
jg
sarb
or
pop
cld
pop
mull
inc
lods
ret
daa
mov
adc
dec
dec
inc
or
es
mov
push
adc
cltd
das
jae
in
icebp
pop
arpl
das
sbb
cs
mov
add
add
push
add
int3
aad
sbb
cs
insl
sti
and
dec
outsb
mov
in
in
add
cwtl
or
ja
adc
adc
cmp
repz
insl
jns
addr16
sub
das
cld
daa
loope
xchg
cmp
dec
mov
dec
call
mov
dec
xor
out
jbe
pop
jmp
ljmp
xor
into
mov
les
add
xchg
movb
cmpsb
sbb
jge
repz
aam
inc
xchg
xlat
cld
js
test
mov
push
sub
jno
lods
and
and
dec
sbb
jno
rclb
inc
xchg
repnz
xor
rcl
cmpsl
jns
push
mov
fwait
dec
std
roll
adc
aad
push
icebp
clc
jnp
movsb
cmp
arpl
aam
fsubrl
add
add
dec
fcompl
pop
pop
gs
sbb
jns
ds
out
out
xor
aam
dec
xchg
aad
xor
jno
int
jge
add
lret
in
into
aam
into
mov
cli
jg
popf
dec
add
shlb
add
imul
cmpsl
mov
xor
xchg
add
fwait
mov
or
mov
lret
aam
jmp
dec
lea
inc
xor
inc
and
mov
xor
jmp
xor
setp
unpcklps
dec
push
orb
jg
adc
or
inc
loope
ret
add
aas
add
add
fsubl
mov
fs
dec
cmp
mov
push
cmp
sahf
dec
xor
mov
push
data16
aaa
pop
adc
pushl
jns
sbb
ret
mov
xor
and
xor
hlt
stc
pop
inc
pop
inc
mov
hlt
push
ret
inc
xchg
xor
jbe
cltd
jg
pop
xchg
jmp
cwtl
inc
jl
aam
sbb
outsb
xchg
xor
push
bound
mov
scas
dec
xchg
jg
and
dec
jp
stos
xchg
cmc
jmp
push
out
stc
testb
gs
lods
sbb
cmp
mov
idivb
pusha
or
xlat
jo
and
pusha
js
add
dec
outsl
and
and
sbb
sbb
mov
add
repz
dec
jae
and
sarb
in
clc
or
dec
popf
andl
aaa
fwait
pop
sarl
int
push
push
mov
popa
icebp
mov
lods
and
repnz
les
xchg
inc
adc
xchg
dec
dec
add
pop
cld
sahf
add
ds
scas
aaa
xchg
dec
lahf
in
rcll
and
and
fprem
repnz
cmpsl
inc
cmp
or
mov
cmpsl
dec
xchg
cmp
test
out
pop
sub
mov
mov
stos
push
call
pushf
cmp
jne
push
out
clc
cmp
repz
jecxz
test
std
pop
mov
xor
std
fimuls
or
inc
and
fsubl
xor
mov
sub
or
negl
aam
jno
cld
jg
fs
sbbb
sub
add
hlt
sub
fisttps
mov
jbe
sarb
mov
jp
pop
int3
jl
arpl
jecxz
add
test
imul
add
arpl
sbb
mov
or
arpl
fisubrs
das
sbb
out
mov
fisubs
popf
pushf
test
push
pop
test
fucom
push
mov
ja
or
insb
and
push
pop
scas
fcomip
jnp,pn
xorb
popf
pop
mov
dec
fidivrs
mov
out
rcll
inc
repz
pop
test
popa
pusha
jl
push
insl
sub
insb
xor
dec
adc
mov
cmp
adc
fwait
dec
jb
jbe
sub
xor
lea
xrelease
sbb
clc
add
mov
pop
xor
cld
or
vmaxpd
loop
lods
js
or
mov
sub
fmuls
jmp
in
subl
fnstsw
gs
dec
xor
popa
and
or
imul
stos
sbb
mov
pop
out
mov
ret
xlat
pop
dec
pop
lods
ja
mov
sbb
call
idivb
or
in
cmp
test
mov
cld
xchg
or
scas
sub
add
dec
push
push
jns
mov
xchg
mov
adc
xchg
push
pop
and
adc
xchg
sbb
nop
push
mul
sarl
loopne
test
pop
inc
xchg
mov
jp
sahf
inc
jns
and
adc
dec
push
ret
test
sub
es
into
sti
test
push
std
incb
stc
ror
popf
sub
xchg
aam
movsl
xchg
inc
xchg
adc
cmp
test
push
add
sahf
test
and
jl
inc
gs
rorb
out
nop
decb
jmp
add
call
xor
cmpsb
jne
aam
out
aas
and
pop
push
adc
dec
imulb
addr16
adc
test
pop
js
pop
lahf
enter
push
scas
in
xor
fisttpll
je
lret
loop
mov
cli
jle
out
scas
iret
ja
fbld
cmpl
push
repnz
jo
jmp
repnz
mov
in
add
fsubl
push
sar
cmpl
popf
adc
cmc
mov
push
scas
jmp
aad
iret
dec
mov
cmp
xor
xlat
xchg
and
xchg
push
out
xchg
pop
push
fs
fidivl
pop
cwtl
sti
mov
add
adc
cmp
stos
addr16
lahf
xor
mov
push
adc
lcall
add
std
mov
sub
int
in
cmpsl
rolb
mov
cmpsb
daa
xchg
ror
or
call
repz
sub
cld
test
xchg
jmp
ds
test
inc
inc
xchg
xchg
pop
loope
nop
jmp
int3
out
dec
sub
ja
jbe
mov
lods
mov
aam
out
jmp
jl
stos
flds
or
arpl
push
daa
dec
mov
outsl
mov
jo
inc
lods
fistpl
or
dec
ret
rorl
lret
jg
add
lret
leave
inc
mov
lods
sub
mov
mov
adc
outsb
or
into
dec
xor
push
insb
ljmp
aad
cmp
pop
rcll
ret
repz
in
mov
sbb
sub
test
xchg
nop
xchg
imul
sbb
out
pop
in
call
aam
mov
pop
push
xor
and
dec
dec
jnp
mov
adc
stc
fildll
jl
imul
sbb
data16
insb
sbb
inc
sahf
mov
rolb
jg
gs
push
add
inc
leave
mov
jp
jle
mov
dec
push
test
in
pop
mov
pop
and
jmp
clc
divl
jp
xor
aaa
lret
mov
cltd
iret
shlb
dec
popf
xchg
shrb
push
addr16
shrb
mov
inc
and
cmp
scas
loope
clc
fiaddl
mov
test
inc
xor
ja
cmpsb
insl
rolb
jecxz
andb
sub
or
ds
add
test
scas
lock
cmpb
jmp
inc
lods
sahf
add
xchg
ss
orl
sbb
and
out
push
mov
dec
movsb
add
pop
sti
mov
sbb
xor
and
push
push
cmp
repnz
repnz
push
cmpsb
pop
xor
jbe
cmp
mov
push
inc
jecxz
std
js
pop
and
pop
mov
ret
movsb
jl
jmp
or
jbe
pop
mov
jno
out
outsl
push
dec
mov
pop
mov
ret
push
jo
push
mov
in
sbbl
into
push
cmp
and
mov
sarb
imul
mov
pop
std
das
and
dec
and
je
lea
sbb
mov
popf
mov
pusha
xchg
pop
outsl
loop
test
cmp
push
mov
sbb
mov
out
cmp
or
sbb
lcall
push
or
xchg
insb
inc
mov
in
test
jne
in
pop
mov
lahf
mov
out
lcall
jg
xchg
dec
mov
mov
mov
call
call
mov
push
in
adc
cmp
fdivrl
mov
lds
cmpsl
mov
fidivrl
push
mov
mov
test
sbb
js
clc
fidivrl
imul
testl
push
out
sub
jo
mov
ljmp
iret
mov
stos
sahf
and
or
das
cmp
pop
lods
sub
push
sarb
or
mov
and
mov
mov
mov
js
fwait
pop
push
cs
lcall
xor
sbb
inc
push
jo
or
mov
and
xchg
sbb
loop
adc
jp
jecxz
dec
xchg
aad
sahf
and
mov
fwait
testb
xlat
aad
mov
mov
mov
lods
jle
aad
hlt
xor
adc
or
mov
pop
sub
inc
jne
xchg
adc
xchg
mov
popa
fmull
cli
insb
mov
cmp
jg
lea
inc
in
js
push
cmp
xchg
lds
xor
pop
pop
mov
leave
or
leave
sub
or
mov
sahf
pop
mov
loop
xchg
sub
cmp
js
sub
inc
mov
in
mov
mov
iret
xchg
ret
and
nop
outsb
aad
jne
stos
sahf
andb
inc
loop
pop
movsl
xchg
pusha
in
mov
out
cmp
push
sahf
adc
test
jae
enter
add
mov
cmc
mov
shr
or
sbb
aas
jbe
pop
call
cli
das
inc
mov
jle
push
sub
sarl
cmp
iret
cmp
xor
push
nop
scas
sub
xchg
sbb
rcr
cli
dec
dec
dec
cmpsl
cltd
aas
jnp
insl
in
ljmp
testl
fcomi
jle
jmp
imul
xchg
aad
fsubrs
inc
pop
es
cmp
mov
push
into
mov
and
inc
sti
out
cmp
inc
inc
iret
push
mov
pop
into
ds
nop
jg
adc
xor
ret
xchg
sbb
inc
dec
sbb
and
cmc
lcall
jge
fs
add
dec
adc
jb
shl
mov
cmp
jb
mov
dec
subb
loop
add
and
push
mov
roll
ret
addl
push
shl
pop
xor
mov
lahf
insb
adc
add
pop
push
xchg
and
sar
sbb
and
push
shlb
jno
adc
sub
adc
sarl
push
sub
pop
or
xchg
jp
pushf
dec
psadbw
aam
adc
divl
mov
inc
mov
cmp
je
repz
mov
jle
jg
sbb
aaa
divb
inc
mov
loope
mov
test
sbb
negb
sub
sbb
pop
rorb
mov
stc
push
mov
jae
ret
fldenv
xor
add
add
inc
test
out
cmp
out
ja
cltd
fstl
in
add
inc
ret
inc
flds
mov
mov
add
xchg
cmp
test
shrb
sub
clc
les
and
fs
dec
inc
mov
sbb
xor
mov
sub
outsb
jbe
clc
je
mov
dec
ja
mov
outsl
jp
neg
lcall
pop
rorl
fadd
dec
addr16
dec
cli
test
in
js
xor
xchg
and
icebp
sub
cmp
push
test
stos
repz
sahf
aaa
and
adc
lods
andl
jne
arpl
push
sti
lods
mov
adc
into
iret
nop
mov
jne
cwtl
addb
mov
je
loopne
in
or
xchg
adc
inc
mov
push
imul
aaa
fldenv
inc
mov
adc
int3
mov
adc
ds
or
xchg
inc
cmp
inc
movsb
ja
int
or
in
rcrb
jl
outsb
push
lahf
test
ret
and
push
xor
aam
clc
lock
nop
sub
std
repz
and
cli
outsb
test
or
lock
mov
jae
mov
mov
in
xchg
xor
loope
push
cmpsl
sarl
push
les
xor
dec
or
aad
xor
push
inc
dec
sbb
xchg
add
xlat
pusha
es
cmp
dec
jne
jbe
mov
adc
pop
popa
out
pop
jne
fisttpl
mov
popa
test
aas
out
dec
sub
push
sbb
mov
mov
fstpt
xchg
cmpsl
add
aad
jecxz
sub
iret
sahf
ja
jae
sbb
adc
mov
pusha
dec
adc
sub
rcl
push
cltd
push
dec
in
hlt
push
int
pop
es
out
cmp
sub
mov
addr16
and
iret
mov
xchg
push
mov
jle
addr16
cld
mov
adc
pop
cmc
xorl
enter
sub
lret
ljmp
cmp
in
aam
arpl
cwtl
jo
in
or
pcmpgtb
fisubrs
lds
test
mov
dec
lcall
lds
shrl
pop
jnp
out
sbb
scas
or
push
test
pushf
adc
dec
xchg
aaa
and
or
sub
xchg
jmp
push
inc
xor
lret
adc
outsl
ror
add
add
pop
lds
sub
xchg
push
int3
dec
mov
add
aaa
faddl
fdivl
sbb
sub
add
xchg
sbb
sub
push
cmp
pushf
jo
mov
jp
jbe
sub
divl
mov
scas
sub
addr16
or
dec
stc
xchg
repnz
or
cmc
cs
dec
mov
sub
rorl
outsl
mov
sbb
jne
loope
and
inc
out
or
cmp
mov
mov
stos
cli
mov
inc
xor
dec
pop
adc
dec
jge
dec
dec
icebp
cmc
sti
aad
mov
add
and
movsl
fists
add
and
sbb
adc
xchg
out
dec
jge
dec
push
nop
add
int
and
inc
cmc
add
cmp
addr16
test
mov
sbb
lods
mov
mov
aas
orl
xor
shll
xchg
lds
fwait
lret
sahf
aas
inc
insb
sahf
ja
mov
call
loop
ss
dec
mov
pushf
pop
dec
jnp
dec
arpl
xchg
mov
pop
and
or
lret
cmp
clc
sub
dec
rcl
mov
js
lret
aad
dec
inc
dec
or
mov
dec
xchg
mov
pop
cld
int
fisubl
cmp
push
mov
xchg
iret
add
call
and
call
stc
inc
or
stos
dec
int
sub
push
btc
push
jmp
jno
fidivs
out
out
mov
sbb
roll
insl
pop
xor
mov
cmp
push
mov
mov
nop
mov
dec
fisttpll
inc
dec
pop
sti
jmp
cltd
push
je
outsl
out
pop
lret
jl
adc
dec
mov
pop
arpl
imul
aaa
ss
pop
jl
mov
outsb
inc
scas
cmpl
jnp
cld
negl
dec
or
iret
arpl
mov
adc
jns
jp
in
jp
mov
xor
fstps
pop
fistps
lds
lea
pushf
xor
jg
pushf
mov
xchg
stos
les
push
bnd
fsubl
add
call
dec
xor
mov
addl
andl
cmpsb
cwtl
outsl
xchg
call
inc
lahf
pop
in
xor
push
push
fistpl
push
aaa
movsb
mov
lods
popa
out
das
fiadds
ds
dec
mov
xchg
sub
and
dec
mov
insb
xor
inc
mov
or
dec
jge
xchg
xchg
push
scas
in
es
dec
and
fdivrs
in
adc
nop
mov
mov
lcall
or
mov
lods
pop
inc
dec
and
fisubrl
mov
je
push
rcl
jbe
out
push
popl
push
pop
jns
sbb
andl
and
xor
pop
or
es
inc
insl
int3
cmovp
stos
adcl
add
mov
xchg
mov
out
sub
jmp
insb
aaa
cltd
fsubrl
adc
sub
sub
arpl
xor
js
adc
adc
push
lea
mov
inc
xor
nop
gs
mov
pop
out
stc
cli
sub
sub
movsl
push
xchg
push
mov
nop
mov
nop
push
daa
push
fildll
adc
add
inc
fsubs
sub
add
jo
mov
out
xchg
jae
xchg
aas
enter
and
add
mov
sbb
ja
into
cwtl
mov
inc
mov
rcl
sub
push
push
shrl
inc
mov
jecxz
pop
cmp
inc
rorb
cli
sbb
imul
jmp
mov
stc
shl
or
int
and
sub
gs
pop
pop
mov
cli
xchg
sub
cmp
add
test
std
cld
repnz
std
nop
insb
mov
call
out
daa
addr16
mov
mov
scas
adc
cs
push
loop
lods
jge
and
lahf
lret
int3
jmp
outsl
pop
lock
stos
cmp
sbb
std
xchg
xchg
xchg
movsl
dec
jl
scas
decb
gs
sbbb
incl
xchg
out
pop
xchg
pop
mov
in
pop
les
add
jbe
popa
mov
add
pop
outsb
add
inc
xor
pushf
scas
movsb
loope
repnz
adc
gs
into
pop
enter
mov
popa
ret
jg
mov
ret
inc
pop
jg
xlat
add
jl
jb
sahf
xlat
xchg
nop
les
add
sub
cmp
fisubl
or
ret
mov
sub
xor
mov
push
shlb
loop
outsl
add
push
and
insl
stos
movsl
aaa
adc
pop
dec
mov
mov
rcl
es
stc
push
in
pop
jp
loopne
xchg
arpl
xor
lock
popf
mov
xchg
or
fwait
push
xchg
notl
repnz
int
out
aas
test
icebp
loopne
and
mov
mov
adc
jle
imul
stos
push
lock
and
cmp
out
stos
sub
cmpl
sarl
lods
pop
xor
pop
pop
push
leave
dec
sub
test
sbb
aad
in
and
adc
cmp
xchg
cwtl
mov
dec
push
dec
stos
push
push
loop
out
xor
sbb
inc
sub
mov
push
mov
mov
into
insb
sub
iret
push
xchg
add
pop
cli
push
shl
aaa
int
aas
hlt
call
inc
push
fdivl
fwait
sbb
lret
push
cmc
jmp
icebp
inc
xchg
lahf
enter
pop
sub
mov
lahf
pop
xor
in
mov
adc
xor
lds
mov
setns
test
fsubs
add
sub
out
push
stos
das
call
or
and
out
hlt
ficoms
lret
inc
push
add
cmpsl
sbb
or
sbb
inc
mov
jns
pop
lods
xor
dec
mov
xchg
lret
pop
sub
push
or
xchg
sahf
jl
test
leave
imulb
mov
xchg
inc
ds
pop
jge
gs
sub
cmp
prefetcht0
in
into
push
fwait
je
mov
pop
adc
add
aad
stos
nop
faddl
inc
cmp
lea
in
mov
outsl
mov
out
rorb
or
mov
fiadds
fwait
movsl
push
dec
bound
cmp
jle,pt
cmpsb
loop
sub
ficoms
xor
fs
pop
lods
enter
mov
sub
xor
subl
insb
mov
lock
pop
insb
mov
loope
loopne
inc
mov
mul
js
sbb
jmp
clc
fcoml
loop
sbb
out
dec
or
lods
cmp
ds
mov
xchg
pop
fdivs
mov
shl
mov
stos
xor
das
sbbl
xchg
or
and
or
mov
cmp
sub
dec
icebp
out
or
out
xor
sub
mov
ss
xor
jmp
xlat
cmp
dec
ds
test
pusha
lock
mov
dec
inc
loopne
je
mov
aad
fs
mov
outsl
jb
fs
fsub
dec
or
aam
mov
adc
scas
mov
push
jo
pop
mov
xchg
push
test
das
in
out
and
test
mov
cmpsl
pop
stos
loopne
pop
sbb
inc
sarb
jl,pt
int3
xor
jmp
aad
pop
xchg
fsubs
push
and
lock
iret
test
mov
and
cwtl
xor
dec
and
pushf
mov
push
xchg
inc
frstor
add
push
jl
aam
dec
outsb
nop
sbb
push
lds
bound
adc
aad
insl
repz
mov
push
xchg
je
in
mov
mov
cmp
mov
and
popl
fcoml
xor
xchg
ds
or
mov
pop
mov
je,pt
shll
aaa
xor
xchg
xor
stos
push
into
push
pusha
mov
movsl
xchg
adc
jb
and
fisubrs
sub
ret
inc
inc
pusha
pop
and
outsb
addb
stc
cmp
jl
test
lds
ficomps
movb
repz
hlt
stos
mov
out
movsb
lahf
je
push
pop
data16
or
adc
mov
mov
fcmove
out
push
loop
fildl
mov
lcall
pop
in
add
sbbl
nop
movsb
out
pop
inc
addb
stos
inc
mov
push
mov
addl
cmpsl
or
ja
push
dec
dec
jo
push
das
jns
fstps
shll
pushf
inc
pop
mov
lock
aas
movsl
rclb
xor
in
lods
insb
sbb
fstpl
mov
outsb
xlat
test
pop
je
inc
repnz
sub
rcll
sub
mov
stos
pop
popa
jns
push
push
cmp
mov
outsl
iret
xchg
lock
sbbb
sub
push
pop
clc
movsb
pop
pop
adc
orl
ret
out
fidivrl
pop
out
mov
fdivl
lock
jne
pxor
shrb
dec
jbe
imul
jecxz
sub
filds
add
sbb
sti
inc
adc
jno
aas
adc
ret
xor
stos
sbb
roll
inc
pop
lea
xor
loope
rcll
sahf
mov
in
cmpsb
shlb
push
dec
jmp
mov
movsb
insb
sbb
jp
sahf
dec
cs
popf
add
cmp
inc
ret
push
cmp
popf
push
push
rorl
pop
sub
inc
shl
sti
sub
xor
adc
sub
sub
mov
clc
mov
and
fisubs
and
xor
jo
jmp
fcoml
icebp
out
repnz
fucomi
or
scas
rorl
jmp
and
int3
imul
xorb
iret
fwait
pop
js
jmp
xchg
mov
push
mov
sahf
test
into
fst
std
int
jg
xor
push
jae
movsl
lahf
and
rcrb
inc
out
sti
lret
or
adc
jns
or
lea
inc
fdivrl
mov
mov
adcb
inc
mov
cmp
cld
test
idivb
sub
mov
aaa
in
and
in
addl
mov
ret
mov
aaa
jmp
adc
mov
lcall
out
insb
test
dec
pusha
mov
mov
cmpsl
adc
mov
fsts
std
cmp
in
fdivrl
jge
mov
subb
mov
decl
mov
and
cld
sarb
push
add
out
pop
pop
sahf
xlat
and
jbe
in
push
pop
mov
pop
ror
jg
popa
sub
add
je
aaa
in
dec
adc
add
lahf
fistps
add
push
push
mov
andl
popa
mov
lods
cmc
and
sbbb
push
fnstsw
xchg
sbb
fdivrs
xor
jbe
fsubp
aad
popf
stc
inc
sub
mov
ljmp
loope
pop
adc
xchg
inc
push
mov
xor
rorl
dec
xchg
sarb
jmp
nop
mov
std
jns
pop
or
insl
jns
add
ljmp
dec
ficoms
in
dec
cltd
push
mov
sbb
and
push
and
test
imul
imul
cli
je
outsb
mov
rolb
cmp
leave
lcall
mov
jg
inc
add
adc
mov
das
inc
mov
cld
inc
jnp
mov
sbb
xor
pop
fsts
push
and
or
push
pop
lods
and
lret
insl
inc
lods
enter
adc
cmp
aam
ss
jg
aas
aam
push
pop
insl
sbb
outsb
cmp
sbb
loopne
xchg
inc
lea
mov
push
jecxz,pn
mov
out
ret
pop
mov
push
xor
add
pop
sbb
ja
sbb
mov
pusha
dec
std
movsl
adc
jg
dec
mov
das
scas
sbb
mov
push
mov
lea
push
inc
fs
add
pop
addr16
outsb
xchg
sub
sarl
mov
out
xchg
fsts
test
shll
pop
call
mov
pop
or
mov
pop
shl
lods
inc
xchg
dec
cld
mov
ror
jae
sti
mov
mov
mov
sbb
cltd
rorb
pop
and
xor
sbb
push
mov
lcall
in
icebp
mov
mov
xchg
fdivr
fiadds
jp
pop
sub
add
and
ficomps
xor
push
add
xchg
fists
pusha
mov
and
outsl
ja
fucom
xor
mov
pushf
sub
inc
aam
scas
ljmp
push
adcb
insb
mov
pop
push
inc
xchg
in
addr16
push
sbb
mov
lock
mov
scas
lds
decl
lret
stos
mov
push
lods
xchg
adc
ljmp
sbb
add
ffreep
jmp
arpl
sahf
in
pop
lahf
es
jg
and
dec
lahf
ret
js
popa
decb
fwait
lret
das
popf
xlat
in
fs
adc
jo
xchg
popf
inc
lret
mov
xlat
sub
ret
ret
mov
hlt
int
cmc
js
mov
mov
mov
fcoml
add
call
dec
jg
stos
xor
lahf
xchg
incl
icebp
fdivrl
hlt
and
xchg
sbb
insl
repz
nop
lcall
xchg
xor
push
pop
pop
data16
jmp
pop
jns
mov
fisubl
inc
hlt
std
insb
adc
mov
loopne
sub
in
stc
adc
addb
ret
imul
mov
mov
jmp
scas
shlb
dec
iret
call
sarb
lcall
fnstenv
dec
rol
or
and
lahf
push
or
imul
bound
sbb
mov
add
loopne
or
push
push
adc
push
pop
xor
loop
xor
push
daa
lret
movb
loope
cmp
movsl
push
ficompl
clc
insb
sbb
mov
int3
push
sets
and
pop
xor
adcl
mov
addr16
push
test
fs
stos
xor
cwtl
ret
jg
ds
mov
or
mov
jb
rcrl
iret
and
dec
rcrl
pusha
xor
ficoml
and
adc
ljmp
jg
loope
add
iret
sbb
and
stos
xchg
faddl
scas
inc
sbb
fldenv
mov
mov
adc
insb
imul
scas
outsb
cmp
es
fwait
dec
aam
or
sub
or
out
sti
mov
add
arpl
mov
cmpsl
out
jmp
xchg
xchg
std
mov
and
lea
lock
dec
pop
fstpl
add
mov
jle
sub
outsb
shl
dec
mov
inc
movsl
dec
jp
inc
mov
data16
sub
jbe
inc
cmc
into
xor
xchg
mov
push
fidivs
sub
outsl
iret
addr16
sub
loope
fnsave
lods
icebp
xor
jl
mov
iret
outsb
addl
cmpsb
mov
stos
pop
sti
nop
movsb
dec
xor
orl
or
adc
and
sbb
lds
and
ss
insl
out
sub
push
mov
jle
stc
mov
ja
xchg
pusha
loop
push
sub
jge
les
in
dec
xor
xchg
movsb
ja
add
dec
daa
sbb
xor
les
bound
push
dec
inc
fsubl
out
mov
sbb
repz
push
push
fimull
call
mov
nop
jnp
or
js
sub
data16
sbb
jne
jns
add
sbbb
es
clc
push
gs
mov
sti
int3
push
aaa
lcall
or
movsl
or
mov
fsubr
sbb
or
jne
addr16
push
or
push
fimuls
or
insb
jnp
and
int3
test
ficoms
icebp
addr16
cmp
mov
movsb
add
pusha
dec
push
int
addl
jno
cld
lods
push
push
popf
sbb
stc
sbb
jb
xlat
lods
stos
mulb
push
inc
mov
jmp
push
pop
xchg
imul
inc
inc
xchg
cmp
in
movsl
iret
add
jmp
imull
or
test
test
ret
jl
pushf
in
sbb
push
xchg
sbb
rol
push
cs
out
ret
mov
inc
sbb
adc
and
xlat
mulb
sub
xor
div
adc
xor
lcall
xchg
jo
mov
call
jmp
sub
jne
mov
out
in
movsl
popa
jmp
incl
inc
sub
mov
inc
sub
mov
push
fs
negb
cmp
repz
jo
ljmp
xor
sbb
push
ret
fnstenv
lret
mov
sbb
cmpsl
js
lods
pop
dec
jl
inc
jp
jb
pop
xchg
dec
mov
xor
adc
iret
xor
xchg
adc
cmp
and
push
ja
xchg
test
aad
mov
inc
sub
xor
sub
dec
scas
pop
sbb
cltd
inc
pusha
out
dec
and
dec
mov
addb
mov
inc
fcmovnbe
push
lods
jmp
mov
mov
popf
jae
addr16
in
fisubs
mov
mov
clc
or
pop
das
lret
cld
mov
mov
sbb
stos
push
xchg
test
pusha
push
push
pushf
jg
inc
ljmp
arpl
insl
xchg
inc
add
sub
mov
xchg
loop
pop
sbb
lret
mov
dec
cld
mov
xorl
int3
lods
inc
push
fsubp
pop
jmp
mov
cmp
mov
sti
arpl
sbb
sub
sbb
gs
aas
xchg
adc
xchg
stc
mov
push
ja
imul
gs
lock
push
add
stos
xor
mov
fisttpll
sbb
dec
push
jbe
ds
rclb
push
adc
xchg
mov
in
ljmp
pop
fwait
xor
aas
inc
std
adc
or
push
dec
xchg
popf
ficoms
ret
sbbl
decl
and
mov
lods
mov
xlat
sub
sti
jmp
or
jns
jg
call
ljmp
flds
mov
daa
icebp
xor
daa
jl
fildl
adc
test
xor
push
inc
out
cmp
pusha
lcall
sbb
jl
mov
imul
pop
iret
cmc
jge
ror
or
or
stos
dec
mov
xor
and
rcrl
daa
mov
lcall
dec
pop
out
mov
dec
sub
mov
mov
gs
push
pop
ja
mov
lods
daa
push
cmovae
enter
push
adc
loopnew
mov
loop
nop
sub
jns
mov
out
mov
rcrb
out
mov
aam
push
xor
addb
out
add
nop
shlb
dec
push
icebp
jne
push
pop
xchg
cmp
push
cmp
cld
aaa
js
inc
xor
and
in
idivl
pop
mov
push
sarb
xchg
push
in
js
popl
push
xor
je
push
out
pop
rcr
sbb
mov
movsb
repnz
add
sub
popf
mov
jl
pop
lods
pop
mov
sbb
inc
jns
mov
xchg
insl
jge
push
jg
mov
push
or
push
repnz
add
call
add
jg
mov
add
pusha
fiaddl
lahf
push
rcr
push
mov
mov
or
xchg
mov
scas
mov
int
mov
call
in
aaa
xor
lods
and
das
mov
or
push
inc
sub
or
mov
cmp
std
in
jg
sti
xchg
idivl
adc
sahf
add
or
stc
jns
jbe
cld
cmp
lret
adc
push
jl
pop
dec
clc
or
jbe
in
lods
or
daa
mov
dec
lods
rcrb
mov
pop
ficoms
mov
push
xchg
div
test
or
es
mov
das
test
clc
inc
push
fistpl
lret
mov
cltd
inc
and
jmp
pop
xlat
cmp
fs
push
repz
les
sub
fbld
xor
cmp
enter
xchg
xchg
mov
pop
movsl
outsl
xchg
mov
fisttpl
fstl
mov
mov
cmpsl
dec
mov
and
jno
xor
test
mov
add
imul
or
sub
pop
cmpsb
sbb
pusha
popa
push
dec
inc
call
sbb
dec
dec
xchg
cmpsb
inc
fstps
dec
iret
pusha
cmpsl
iret
rorb
fs
jge
test
mov
xchg
jbe
cmp
cwtl
xchg
xor
xchg
push
fsubrl
xchg
mov
bound
ja
daa
data16
sti
iret
ss
je
mov
jp
or
jne
xor
scas
fwait
jg
pop
pop
cwtl
pop
jb
sbb
cmpsl
sub
and
jle
push
xchg
mov
negb
jle
ret
in
enter
shrb
mov
xchg
ret
dec
cli
in
outsb
out
push
notl
das
lods
mov
dec
fwait
add
imul
jo
shr
jnp
lahf
dec
shll
negl
popf
dec
add
sub
stc
je
test
repz
jmp
in
inc
add
aad
add
push
adc
cmp
loope
add
in
sub
aas
in
out
ljmp
mov
mov
insb
movsl
pop
push
inc
jno
insb
int3
xchg
ret
mov
and
push
in
arpl
jg
push
inc
and
fsts
sar
ficomps
rorb
loopne
ss
add
mov
mov
and
jno
mov
mov
ja
sub
es
in
add
scas
ficoms
mov
test
daa
jg
sbb
and
jmp
push
jle
shlb
rorb
iret
int
je
sub
xchg
pop
jnp
jae
pop
jns
aaa
jmp
inc
out
mov
sub
mov
add
push
decl
lods
cmp
xor
test
and
or
mov
addr16
mov
add
js
fsubrl
in
jp
cmp
icebp
mov
xor
into
push
add
push
aam
scas
xor
xchg
scas
fdivrs
cmp
mov
jg
js
push
add
mov
mov
cmpb
jge
xchg
orb
jl
pop
test
iret
test
outsb
jns
insl
or
ss
or
out
int
dec
lods
cmp
enter
jle
mov
or
xchg
sbb
leave
adc
int
add
cli
xchg
adcb
xchg
daa
mov
lret
fmuls
dec
outsb
das
xchg
lea
pop
stos
dec
icebp
mov
or
push
outsl
add
adc
mov
repz
aad
inc
pop
push
les
dec
lods
push
icebp
xchg
hlt
mov
jp
mov
mov
insb
aas
inc
jno
mov
jecxz
sub
cmc
cli
push
fstpl
gs
push
cmp
mov
ss
aam
mov
clc
jecxz
cmpsl
call
add
flds
repz
repz
push
push
cmp
cmp
daa
push
push
test
xchg
jle
dec
push
les
int3
push
subl
loop
push
xor
mov
jae
scas
loop
xchg
sbb
test
push
daa
dec
lcall
jns
mov
daa
cli
lock
cmp
test
test
ss
sahf
adc
mov
mov
pop
mov
or
mov
in
jae
pop
jb
xor
push
or
pop
in
pop
inc
in
pop
jae
adc
outsb
push
xchg
cli
pushf
jmp
insb
xor
fimull
xchg
fnsave
sti
leave
sub
fisubl
or
dec
lret
mov
push
sahf
ss
sub
push
cltd
xor
pusha
in
pop
pop
test
xor
xor
mov
lds
pop
fbld
mov
cmp
pop
cmp
push
rorb
arpl
popa
jp
lock
nop
cmpsl
pusha
repnz
sub
mov
leave
jne
pop
icebp
cld
sbb
or
movsb
push
pushf
imul
adc
push
adc
xchg
cltd
mov
mov
xchg
xchg
test
jbe
adc
lock
add
mov
insl
aas
mulb
mov
test
aas
mov
movsl
cmpl
lret
push
aas
inc
test
leave
rolb
mov
xor
outsl
testb
loope
rorb
xchg
inc
xchg
test
ja
mov
aam
inc
jmp
test
add
je
scas
repz
adc
sbb
cmp
gs
dec
jnp
jle
call
push
xchg
dec
sub
mov
mov
cmp
lods
inc
fildl
add
andl
repz
cmpsl
or
xlat
xchg
cmp
cltd
icebp
jae
pop
push
add
sbb
cwtl
inc
lock
cltd
mov
and
popl
pusha
int3
pop
jo
push
jo
mov
cmpsl
jo
dec
ljmp
je
in
push
cmp
jge
cmp
pop
imul
les
add
jns
cmp
rcll
add
test
cmc
sbb
ss
lcall
lahf
ss
scas
arpl
pop
pop
mov
mov
jb
shr
xor
shlb
sbb
adc
lods
lret
push
stc
xchg
adc
jmp
in
and
jg
dec
in
sti
data16
aad
ret
mov
xor
int
pop
dec
sahf
lea
fcomps
dec
inc
lret
in
push
mov
and
inc
mov
lea
cli
pushf
pop
xchg
or
adc
cwtl
mov
mov
sub
xchg
adcb
mov
or
shlb
sub
jo
movl
mov
insw
xor
push
dec
lock
test
arpl
adc
iret
imul
cmpsb
or
sbb
fimull
fists
push
pop
sbb
mov
fidivrl
xchg
stos
repnz
add
mov
sub
cmp
iret
dec
mov
lods
test
pop
cmp
inc
xchg
push
hlt
xchg
mov
lock
xor
jge
dec
push
loope
and
icebp
dec
mov
mov
pusha
mov
in
fcompl
aaa
pushf
sub
pop
mov
test
dec
pop
mov
jecxz
push
daa
aas
add
cltd
jns
cmp
mov
es
sbb
scas
popf
xor
sub
out
out
leave
aaa
mov
mov
ds
sbb
mov
pushf
add
push
cmpsl
stos
cmp
pop
mov
inc
lret
cmp
loop
mov
sbb
add
negb
adc
ja
or
jbe
hlt
cmc
out
sti
shrb
mov
push
jnp
stos
or
nop
loopne
rorl
idivl
push
pop
inc
and
jle
cmp
and
test
enter
pusha
into
push
mov
inc
mov
or
cmp
add
mov
fidivs
jno
or
jns
pushf
data16
mov
sub
pop
lods
xor
inc
push
dec
lret
nop
inc
pop
lock
cli
add
sahf
je
sub
lds
push
loope
mov
xchg
in
inc
popa
mov
aaa
sti
je
sub
xchg
dec
stos
xor
test
sub
cmpsl
xchg
popa
sub
sti
lock
inc
ds
pushf
idivb
xchg
mov
cmp
clc
xor
jns
mov
mov
test
sbb
and
pop
loope
xchg
xchg
mov
repnz
mov
push
inc
xchg
cmp
or
inc
jge
add
inc
jno
movsl
dec
sub
jns
add
adc
test
push
stos
lods
imul
je
rclb
aad
dec
dec
lret
push
bound
in
test
lods
jmp
enter
imul
and
fcmovnb
addr16
negl
pop
sahf
sbb
mov
fstp
mov
and
mov
stc
mov
aas
inc
arpl
scas
pop
and
addl
repz
ficomps
inc
call
xor
out
jecxz
push
inc
xor
cmp
int3
sub
ss
popf
outsb
sub
imul
rolb
arpl
out
xchg
popf
xor
mov
xchg
inc
iret
xchg
add
cmpsl
insl
mov
cltd
in
aas
add
ret
mov
push
popl
fisubrl
imulb
push
add
ds
cmp
or
aas
test
mov
test
jp
cwtl
test
ficompl
popa
lret
out
lds
mov
lock
loopne
mov
push
scas
xor
mov
mov
jb
adc
adc
xor
dec
sub
jmp
dec
test
imul
shlb
aas
shlb
popf
lds
out
out
leave
dec
js
push
dec
sbbb
adcb
js
push
iret
lret
lea
adc
pop
iret
xchg
inc
xor
jns
dec
popf
cmp
add
loopne
push
jmp
xor
xor
mov
aam
scas
fwait
outsb
mov
mov
xchg
push
test
ud2
inc
push
into
fldenv
mov
int3
or
sti
add
pop
push
lret
and
shl
inc
call
pop
pop
pop
jecxz
adc
add
xor
scas
sub
add
leave
shrl
cltd
fidivs
cmp
jmp
cmpb
les
mov
pusha
inc
jl
dec
fidivl
jae
lock
lret
cltd
fsubrl
pop
xchg
mov
pop
lret
jecxz
jno
xlat
or
shlb
cs
fildll
jo
cs
imul
aam
jae
inc
aas
mov
jmp
rol
icebp
dec
jnp
adc
sbb
sti
mov
xchg
sub
pop
dec
dec
mov
dec
out
jle
sbb
sbb
iret
or
in
jge,pt
push
jle
jecxz
gs
mov
outsl
jecxz
adc
xor
mov
lods
sub
pushf
jmp
xchg
or
jns
and
sub
sbb
iret
sub
lods
sub
and
dec
lret
cltd
aas
loope
mov
jmp
cltd
sarl
mov
push
lret
pusha
nop
jb
int3
jl
int
sbb
je
or
inc
sub
xchg
mov
ret
fcom
data16
and
gs
lret
push
adc
adc
jb
ret
mov
jecxz
adc
add
inc
lods
xchg
cli
aas
pusha
xlat
and
fidivrs
popa
xchg
xor
pushf
shl
addr16
sub
lea
or
cmp
in
pop
lds
jne
lahf
mov
xchg
cmc
ljmp
mov
jmp
add
insb
out
push
sti
cmp
imul
sub
shll
cs
dec
or
insl
mov
in
call
pop
mov
aas
xchg
mov
xchg
lret
add
insl
jecxz,pn
and
sbb
xchg
jns
pushl
pop
sbb
jecxz
sbb
xor
or
ror
inc
int3
cwtl
hlt
dec
int
lea
adc
cmpsb
inc
fucomp
sbb
arpl
ja
push
add
or
pop
dec
int3
leave
repnz
stc
sbb
xchg
inc
rcrl
inc
and
and
and
and
or
sbb
bound
fwait
xchg
or
mov
dec
hlt
pop
mov
lea
fstpl
push
stc
dec
lods
cmp
icebp
shll
and
sbb
into
pop
addr16
clc
mov
std
cmp
in
pushf
mov
jbe
outsl
outsb
imul
xchg
mov
mov
stos
sti
out
aam
cmpsb
or
mov
into
inc
lret
adc
sti
dec
sub
ficompl
jno
sbb
hlt
cmp
or
sub
ja
sbb
decl
icebp
mov
xchg
shrl
popa
mov
insb
adc
add
mov
imul
arpl
rclb
mov
pop
out
fs
sbb
daa
mov
mov
or
mov
pop
pop
std
push
add
mov
outsb
out
cs
xor
inc
mov
incl
mov
add
pushf
in
mov
pop
xchg
outsl
add
xchg
inc
or
das
jl
fstps
inc
lods
add
dec
adc
xchg
or
sti
xchg
mov
imulb
mov
xchg
sbb
jb
jne
pop
lahf
mov
test
pop
in
and
push
sub
mov
xchg
xchg
xor
inc
aaa
cmpsl
mov
ljmp
es
push
mov
or
sbb
cli
dec
mov
mov
popf
sbbl
dec
and
push
jg
int
jne
cmc
sbb
xor
xchg
mov
mov
sbb
sar
addr16
jnp
lods
sbb
jp
imul
rol
cmp
in
in
xchg
fimuls
aam
outsb
and
setnp
cmp
fbld
lret
dec
sub
scas
adc
pusha
jmp
popf
out
xchg
ret
test
cmc
lock
jno
mov
popf
test
sbb
adc
ss
popf
jmp
lahf
mov
inc
test
mov
cmp
sub
jne
out
shl
push
mov
push
aam
push
int
fisttpl
mov
push
mov
jg
cld
loope
pop
scas
jp
xchg
push
xor
es
mov
jp
adc
mov
ret
mov
jl
jge
mov
daa
xor
mov
lcall
into
ds
sarl
push
pop
insl
clc
inc
out
xchg
sbb
mov
dec
ja
xchg
adc
or
add
pop
mov
jbe
repz
jl
mov
or
fmull
add
in
mov
push
xor
inc
shrl
fs
lods
cmp
inc
fsts
and
or
subb
mov
add
adc
jp
adc
cs
int3
push
or
int
imul
sti
pop
adcl
add
insb
dec
adc
insl
inc
mov
outsb
or
pop
stos
push
mov
and
jmp
insb
shr
clc
mov
movsl
cmpsl
lcall
les
inc
sbb
pop
loopne
jbe
loopne
cwtl
sub
std
imull
dec
add
cmpsl
dec
push
cmp
int3
sarb
mov
leave
xor
jns
adc
mov
cmc
mov
daa
scas
std
stos
test
and
out
mov
test
push
mov
jae
or
stc
pop
add
pop
stc
push
in
cmp
pop
mov
cmp
adc
push
fadds
jb
adc
xor
dec
sbb
fistpll
sub
testb
add
rcrl
pop
scas
dec
cs
xlat
aam
xchg
fidivl
aaa
push
mov
sub
add
pop
xchg
out
popf
out
dec
jb
push
icebp
push
xchg
mov
mov
cs
sahf
and
cmpb
rcpps
in
fcoml
push
sbb
mov
dec
les
cmp
fwait
ljmp
scas
jge
movsb
std
lahf
mov
ljmp
imul
mov
aaa
cmc
leave
dec
xor
iret
stos
sbb
out
mov
push
subl
xchg
jecxz
dec
mov
xchg
sarl
cmpsl
adc
sarl
adc
scas
leave
test
sub
aam
jnp
add
adc
xchg
mov
mov
xchg
sub
xchg
fldt
fmulp
adc
std
ret
mov
ret
into
dec
and
jmp
popf
pop
imul
mov
fisubrs
movsb
leave
jecxz
jnp
jbe
cs
cmc
std
adc
xchg
xor
je
aaa
daa
loopne
arpl
fdivrl
loop
andb
out
xchg
lea
jae
out
jle
xor
dec
out
mov
fimuls
fldenv
dec
mov
imul
fisubrl
sub
nop
jne
xchg
sbb
fiaddl
cmp
lock
pop
lahf
int3
in
dec
inc
xchg
jns
cmpsl
mov
sub
mov
jp
xlat
jne
ret
xchg
mov
xor
sbb
pusha
or
repnz
cwtl
test
sbb
orb
xchg
cs
adc
push
jle
sub
mov
cmp
fdivr
add
xchg
cmp
insl
in
xchg
or
fcoms
xchg
adc
mov
or
cmc
mov
or
or
sbb
jo
bound
mov
test
stc
push
pop
sahf
mov
sub
adc
cmpsl
xchg
add
pop
enter
add
aaa
div
cld
pushf
ss
push
dec
sub
sar
pop
inc
fldz
and
cmpsl
jno
or
lea
sub
cli
cmpsl
in
movsl
stos
pop
cs
xchg
negb
adc
cmp
dec
mov
rorl
mov
xor
mulb
lret
sbb
bound
push
loop
mov
mov
cmc
repz
dec
add
sub
pop
sbb
leave
in
cs
xchg
sbb
xchg
push
pop
or
or
into
fcomi
xchg
push
shlb
dec
dec
aam
repz
fidivl
sub
and
push
xorb
shll
pushf
clc
sbb
cmp
mov
in
daa
jne
cs
aas
cwtl
aam
andl
popa
lahf
mov
push
test
insb
cmp
adc
cmp
push
mov
insl
mull
xchg
or
mov
pop
insl
mov
inc
inc
jnp
aad
dec
pop
stos
ja
outsl
mov
stos
ss
mov
lret
ljmp
aad
sub
inc
pop
aas
lcall
and
int
xor
sbb
cmp
cmpsb
sbb
dec
not
push
cmpsl
cmpsl
aam
dec
mov
packsswb
out
rolb
add
fdivl
dec
xchg
sbb
push
mov
into
fwait
pop
lcall
mov
pop
test
or
scas
or
dec
mov
movsl
data16
sub
pop
mov
shlb
mov
cmp
push
fdiv
insb
mov
jnp
rcl
sysexit
sarl
dec
push
and
add
pushf
xor
xchg
daa
test
add
mov
mov
add
sbb
xchg
sub
xchg
inc
lods
and
mov
mov
mov
in
or
idivb
xchg
les
push
in
mov
dec
aad
in
mov
addr16
repnz
sti
test
xchg
adc
clc
icebp
push
out
adcl
adc
cld
mov
xchg
dec
daa
sbbb
jle
and
cmp
mov
add
lahf
push
lock
aad
lret
repz
aaa
loopne
sti
das
jp
xchg
test
mov
jae
or
ja
inc
add
add
inc
hlt
ret
xchg
push
mov
mov
stos
test
ljmp
enter
movsl
inc
repz
daa
dec
rclb
std
sub
ja
jge
or
sub
add
inc
and
lret
add
mov
out
cmpsb
insb
mov
push
pop
and
pop
data16
add
dec
jp
int
lods
cld
mov
data16
lret
gs
mov
fs
inc
ret
mov
call
insb
cs
ss
scas
fsubrp
rcr
out
sub
pop
pop
xor
out
fidivs
xchg
lret
call
pushf
insb
push
callw
jne
jae
cld
icebp
loope
jbe
adc
cmpsb
cmc
insb
in
dec
pop
in
mov
icebp
lretw
or
aam
and
jne
int3
or
sub
icebp
sub
xchg
les
repnz
adc
and
cmc
mov
dec
xor
adc
jbe
test
cmp
repnz
cmp
out
sbb
and
push
lock
ja
pusha
or
std
fwait
dec
sub
adc
call
lret
popf
repnz
lahf
negb
cmp
inc
fistl
mov
into
lret
repz
mov
or
ljmp
push
xor
cmp
fisubl
aas
test
pushf
out
inc
shrb
jg
cmp
cmpsl
adc
mov
sbb
lahf
sbb
mov
repz
and
rcl
or
add
push
sahf
jo
addr16
je
jns
push
ret
jbe
jl
or
pop
aaa
add
dec
mov
es
or
dec
mov
pushl
test
sti
jnp
popa
adc
add
scas
outsb
movsb
pop
int
into
jae
cs
ficoms
notl
lcall
ret
stc
mov
fisttpl
mov
mov
sti
loopne
sbb
movsl
push
test
ret
mov
jecxz
call
test
xor
roll
jle
inc
pusha
loope
push
lret
add
jbe
out
xchg
push
pusha
lcall
lods
adc
cmp
int3
jne
add
addr16
xchg
pop
mov
testl
shll
mov
add
jb
pop
sti
repz
adc
ror
fisubrs
push
pop
cli
int
sub
push
fimuls
sub
orb
jle
loop
push
dec
lock
inc
or
iret
repnz
cmpsl
notb
jns,pt
int3
scas
cmp
push
and
xchg
icebp
or
cmp
xchg
incb
inc
xchg
das
jl
sbb
xchg
inc
sti
and
stos
adc
inc
andl
xchg
imul
stc
bound
int3
shrb
hlt
or
call
sub
aas
mov
mov
test
test
dec
dec
ror
int3
mov
mov
jmp
sub
xor
inc
and
and
adc
fdivrs
daa
lcall
movsb
shll
je
movsb
mov
icebp
jmp
scas
inc
jg
gs
in
cmpsl
fsub
mov
dec
push
push
icebp
sub
and
outsl
pop
dec
cmp
xlat
mov
imull
ret
push
andl
add
movsl
ljmp
rorl
pushf
into
cmp
fxch
bound
mov
jb
cmp
xchg
sub
sub
sbb
xchg
enter
in
repnz
dec
dec
jne
push
or
mov
pop
dec
jmp
mov
out
mov
mov
mov
sbb
sarl
mov
repz
mov
xchg
icebp
sub
jmp
rolb
mov
cmp
stc
mov
push
and
xchg
xor
ja
xchg
gs
lock
cli
mov
mov
ret
lods
add
push
lods
scas
mov
fdivl
push
dec
push
mov
xor
push
das
inc
mov
lret
aad
sub
pop
dec
cwtl
jp
pop
data16
mov
jb,pt
xlat
push
pusha
xor
or
iret
push
push
mov
jl
fisttpl
incl
fldl
jg
xchg
add
cmp
pop
push
outsb
repz
loopne
jno
cltd
dec
fisubl
sub
jne
sbb
inc
icebp
cld
popf
outsl
aad
stos
lcall
inc
sar
int3
adc
xchg
cmp
test
and
test
and
repnz
shll
xor
dec
mov
cmpsl
sbb
cltd
adc
mov
fistpll
cmp
lock
aas
mov
xchg
fldt
sub
rolb
adc
mov
pop
push
ret
sarl
sbb
test
movsb
bound
mov
movsl
push
pop
cmp
sti
inc
fadds
iret
call
add
xor
loop
loope
loop
je
cmp
rcll
pop
cmp
add
lods
push
cli
pop
cmpsb
popa
jl
jecxz
loop
fisttps
dec
pop
aam
cmp
pop
or
mov
xor
inc
adc
scas
xlat
or
sahf
outsl
sub
and
cltd
and
insl
lods
cld
mov
stos
add
or
jmp
in
out
xchg
repnz
fsubrl
xor
sti
jmp
mov
cmpsl
adc
push
rcr
nop
push
sub
jns
scas
xchg
jp
push
dec
cmp
cmc
adc
loop
addr16
cmp
shrb
mov
inc
xchg
inc
add
push
cmp
lea
loope
xor
sub
cmp
or
sbb
add
test
dec
lret
lret
push
dec
popf
sbb
cld
movsb
sti
add
notl
imul
mov
mov
fwait
adc
sub
pop
push
call
jne
and
enter
pop
jecxz
inc
adc
cli
daa
inc
insb
out
jne
inc
out
ficoml
cmp
mov
cs
lods
subl
mov
rcll
jnp
cmc
mov
push
dec
or
mov
loop
rclb
out
cmp
mov
rcl
add
push
fbstp
or
pop
cld
dec
ficomps
daa
int
jecxz
inc
jmp
mov
popl
rorl
or
adc
mov
into
daa
rcl
dec
ret
or
inc
push
js
shrl
or
jno
out
cmp
lea
mov
jmp
in
pop
cltd
movsl
pop
mov
push
jmp
fs
push
and
repnz
fisttpll
out
jecxz,pn
cmc
loop
fsubrs
mov
or
les
je
test
pop
cmp
sub
ds
xor
cwtl
clc
frstor
cmpsl
insl
stos
push
movsb
fbstp
pop
and
mov
xor
push
jnp
sub
mov
inc
inc
cli
fcoms
rcr
push
jne
xor
shl
aaa
jo
jg
jmp
dec
dec
cmp
bound
lahf
icebp
push
fwait
mov
shll
sub
fimull
jg
mov
lret
test
mov
repz
rcrb
sbb
out
fcmovbe
mov
mov
sub
jno
js
xor
out
and
int3
pop
aad
pop
je
inc
shlb
mov
arpl
mov
mov
sub
xor
cmp
sbb
in
push
add
mov
outsl
cmp
lods
sub
dec
pop
sbb
sub
mov
dec
icebp
cwtl
out
test
aam
fs
add
dec
enter
add
push
cmc
inc
out
add
adcl
les
dec
loop
dec
mov
xchg
mov
dec
cmc
jb
dec
mov
pop
mov
jle
out
cmp
sahf
jnp
shlb
data16
jmp
aaa
sbb
or
mov
cmp
adc
je
rclb
mov
out
jmp
je
vsubpd
inc
inc
and
push
push
cmp
add
iret
add
inc
pop
xchg
pop
les
movsl
mov
clc
scas
popf
pop
cltd
cmpsb
ret
xchg
dec
movsl
mov
sti
testl
lcall
jo
cld
jp
pop
cwtl
jb
enter
xchg
or
insb
cmpsb
xor
arpl
push
in
or
scas
mov
xchg
pop
jmp
js
out
xchg
jg
cmp
pusha
inc
pop
pop
adc
jae
call
int
cmp
dec
and
fdivp
dec
sbb
pop
sbb
dec
mov
sarb
or
pop
cmp
jo
sub
push
aaa
imul
mov
add
pushl
out
into
cmp
mov
test
nop
dec
and
mov
into
adc
push
cmp
push
jb
int3
cmp
loope
adc
lods
mov
out
or
cli
sbb
clc
jns
adc
stc
nop
sbb
xorb
mov
ja
cli
or
jb
leave
jbe
nop
out
mov
cmp
push
sub
add
mov
mov
jmp
sub
xchg
xor
xchg
or
aaa
push
push
out
mov
xchg
pop
push
dec
xchg
and
bound
cmp
gs
std
or
ss
xchg
cwtl
pop
out
push
push
and
mov
jmp
add
fistl
movb
aaa
mov
or
or
or
adc
push
inc
pop
jecxz
dec
xchg
dec
mov
ds
imul
sub
jne
dec
je
sti
or
adc
lock
xor
pushf
adc
imull
pushf
jge
jmp
push
aad
ret
pop
out
dec
mov
and
push
dec
xchg
in
pop
popa
cmp
sti
cmpsb
mov
dec
and
jg
inc
fsubl
mov
push
push
repz
mov
mov
jae
andl
push
xchg
sbb
sub
push
shll
nop
sub
mov
jae
xchg
cmp
dec
push
cltd
xchg
pop
jge
inc
pop
lea
sbb
loop
adc
loopne
lahf
xor
mov
insl
xchg
ds
push
jecxz
xor
je
or
push
aam
cli
sub
in
adc
jno
and
mov
or
cs
pop
int3
push
out
pop
cmpsl
pop
pop
dec
mov
mov
and
mov
xchg
jl
sub
psubq
jae
sahf
or
sbb
nop
xchg
ds
pop
xor
jbe
or
shll
inc
xchg
das
scas
pop
mov
lcall
nop
or
sub
movsb
mov
xchg
test
add
xchg
clc
inc
js
cli
lahf
jl
push
jno
push
outsb
xchg
rcrb
in
add
divl
movsb
repnz
inc
mov
aad
xchg
fadds
iret
add
xchg
neg
repz
mov
dec
cmpsb
ret
fsubrp
push
xchg
cltd
in
sbb
dec
int3
push
in
jnp
dec
fldt
call
out
mov
and
popa
js
sub
xchg
stos
sahf
sbb
or
mov
add
les
cmpsl
pushf
nop
push
cmp
mov
ljmp
inc
mov
nop
out
xor
arpl
repnz
mov
popf
dec
sbb
jbe
pop
pop
sub
sbbl
xor
xchg
sbb
int3
or
scas
sub
sub
in
outsb
inc
push
sbb
fcmovnu
mov
popa
or
jno
out
cmp
lcall
enter
cwtl
push
into
insl
cmp
and
mov
loopne
mov
jb
imul
jp
cmp
add
mov
xor
cmp
inc
call
cmpl
repz
les
addr16
jge
cmp
lcall
imul
data16
pop
and
pop
ret
xchg
in
aam
adc
jnp
push
or
cmp
mov
idivl
xchg
dec
enter
fimull
stos
jns
shlb
fwait
cmpsl
sbb
push
out
sub
push
mov
cmpsl
mov
push
or
push
push
in
xor
ja
insl
es
sbb
andb
inc
ja
out
adc
sub
mov
jno
aaa
mov
iret
xchg
jns
aam
in
aam
lea
push
pop
aaa
or
clc
loop
xor
jmp
adc
mov
and
push
push
or
pusha
and
mov
ret
aas
test
cld
cmp
mov
pop
fadd
push
icebp
pop
pop
mov
data16
push
xchg
adc
dec
les
xchg
lods
mov
sets
cwtl
sub
out
push
stos
js
push
jb
sbb
mov
xchg
mov
sub
adcb
and
cmp
sub
fstpt
gs
pop
sti
and
mov
xor
jecxz
adc
outsb
adcl
add
jne
fisttpll
das
cltd
cltd
push
inc
push
int3
data16
xchg
cmp
pop
xchg
stos
leave
hlt
stos
clc
xchg
sub
enter
cmpsb
sub
mov
mov
cmp
popf
es
daa
clc
fsubrl
or
jne
test
pop
xchg
jge
shl
mov
sbb
pop
fidivl
xchg
inc
sub
adc
dec
cmp
adc
movb
dec
shll
pop
mov
mov
jecxz
rorl
xchg
loop
out
xchg
gs
leave
dec
aaa
hlt
outsb
scas
in
mov
push
pop
sub
xor
out
bound
xchg
adc
pop
cmp
or
inc
sub
test
aaa
movsb
loope
mov
xchg
cmp
mov
popf
and
rdmsr
inc
dec
imul
movsb
movsb
decl
mov
das
inc
cmp
enter
mov
in
pop
rcl
add
pop
xchg
stc
and
imul
mov
out
mov
mov
dec
shll
xchg
add
jo
les
lret
mov
testb
push
or
xchg
ljmp
mov
je
rol
movsb
jnp
mov
popf
cmp
push
pusha
and
add
and
push
or
mov
nop
pop
jmp
xchg
je
movb
xchg
rorl
dec
dec
and
fistpl
loop
sbb
ja
lods
int3
jecxz
lahf
jmp
imul
fsubr
dec
imul
or
push
in
inc
and
sbb
pusha
mov
imull
sar
adc
ret
adc
xchg
movsb
stos
ss
fnstcw
das
dec
or
jbe
push
add
pop
loope
addr16
add
mov
es
leave
pop
xchg
xor
mov
cltd
mov
add
ja
inc
sbb
lock
lea
mov
in
push
pop
jbe
mov
ss
into
cmpsb
fsubrl
jle
push
pushf
jne
mov
and
dec
pop
adc
pop
xor
mov
pop
std
lock
ljmp
mov
cmpsl
in
mov
mov
dec
pop
imul
push
mov
sbb
jecxz
push
fcomi
or
insl
fisubs
rcr
push
mov
add
dec
mov
sbb
xchg
and
int
xorb
and
roll
popa
push
jo
lret
bound
ja
loope
push
ficoms
pop
movsl
stos
mov
dec
jl
mov
and
rcll
push
lret
xchg
xchg
lock
mov
sub
xchg
nop
fs
inc
ret
xchg
mov
ss
xor
adc
mov
and
inc
xchg
xchg
mov
or
push
pushf
ret
out
lds
cld
xor
sub
pusha
call
in
lcall
add
pop
loope
lock
xor
jbe
mov
sub
push
out
lret
sub
sbb
push
das
add
inc
dec
cmp
test
or
xlat
mov
mov
out
push
mov
mov
es
in
lock
push
add
add
pop
inc
stos
add
lret
add
insb
lock
adc
orb
inc
mov
push
aas
jb
fld
sub
or
pushf
lahf
bound
xor
adc
mov
add
iret
fcoml
cmp
cmp
pop
mov
lahf
jl
sbb
fucomp
mov
ret
outsb
mov
mov
fwait
out
ret
jns
aam
aaa
fs
fisubl
sarb
jbe
cld
rolb
fiadds
ljmp
ss
cmpsb
inc
pop
mov
aaa
push
xchg
mov
scas
fwait
and
scas
mov
out
call
cltd
cmpsl
pusha
inc
aam
data16
xor
mov
les
dec
mov
dec
push
cmp
ss
mov
pusha
lods
adc
dec
pop
or
mov
pop
data16
and
pop
into
sti
fnsave
cmp
sti
fwait
or
sub
aam
and
xor
test
xlat
sub
jle
pop
outsb
mov
fs
sarb
mov
jno
inc
cwtl
cmpl
add
mov
out
xchg
faddp
push
jnp
jmp
mov
adc
cmpl
stc
or
leave
inc
push
icebp
insl
pop
mov
in
mov
stos
sbb
cltd
sbb
dec
cmp
ss
hlt
jp
or
pop
dec
movsl
adc
and
cmpsl
lahf
dec
mov
xchg
imul
les
adc
fsubrs
pop
sar
in
dec
push
mov
lods
jae
aam
sbb
fs
push
in
push
test
lock
loopne
cmp
push
jbe
fwait
add
fdivrl
inc
cltd
imul
sbb
push
test
es
and
xor
clc
mov
cmc
cmp
in
sub
jno
push
adc
in
dec
xchg
mov
pop
scas
push
enter
imul
imul
test
pop
inc
jecxz
jbe
or
ja
jmp
lods
faddp
mov
mulb
js
jns
inc
loop
sub
idivb
call
int
std
or
loop
or
scas
fisttps
fs
push
iret
push
andl
sbb
or
jno
sub
ret
jnp
out
push
or
cld
push
leave
xor
push
jns
insl
mov
movsb
jns
movsb
pushf
das
jmp
movsb
scas
add
hlt
ja
mov
insb
popf
rcrb
test
dec
sahf
and
dec
lods
loope
jp
jle
cmp
xorl
xlat
stc
ds
out
mov
icebp
test
ja
mov
je
sbb
mov
repnz
pushf
sti
cld
cmpsb
or
xor
adc
roll
cmpb
adc
jnp
test
test
ss
dec
and
adc
aaa
inc
cmpsb
mov
xchg
addr16
sub
les
pop
cmpl
xor
ficompl
fcmove
fcomps
lds
loopne
out
mov
orl
rcll
mov
and
int3
jbe
stos
adcb
test
mov
fwait
xchg
int
inc
push
mov
xor
xchg
jmp
cs
xchg
pop
fbstp
xchg
negl
ja
pop
ret
int3
fstpt
inc
push
cmc
sbb
and
sub
pop
fwait
jp
aam
xor
cltd
mulb
addr16
int3
xchg
xor
jmp
and
inc
jecxz
jne
insb
in
cmpsl
jae
push
iret
js
sar
cmp
push
xchg
loope
scas
sti
es
test
push
ficomps
jns
insl
pop
arpl
popf
je
lret
mov
xor
leave
in
aaa
mov
scas
or
fdivp
in
inc
push
movb
push
icebp
xchg
movsl
pop
out
jb
xchg
scas
jne
test
stc
loopne
leave
adc
mov
mov
in
arpl
test
and
push
in
int3
jl
loope
mov
pushf
rorl
add
loopne
cs
sahf
jbe
inc
dec
dec
lods
testl
jle
dec
xor
add
arpl
aad
lret
int
leave
cmpsb
dec
int3
in
sbb
mov
xor
pop
test
sarl
cmp
test
imul
mov
mov
mov
add
add
scas
push
xchg
jbe
stc
insl
in
sti
mov
adc
dec
mov
stc
xchg
xlat
lds
scas
fists
rcl
cld
mulb
inc
out
sub
sbb
push
add
cwtl
mov
mov
ljmp
sub
xor
cmp
movsb
or
daa
stc
push
cmp
sahf
mov
sub
call
fsubrl
addb
movsb
jmp
sub
lock
sub
test
pop
inc
push
or
sbbl
mov
cs
jg
mov
in
pop
cmpsl
lods
or
sbb
or
and
icebp
dec
lcall
pop
rcl
mov
cmp
xor
push
push
repz
outsb
add
and
clc
and
scas
jns
add
test
xor
pop
fsubrs
sbb
test
cli
cmc
hlt
adc
fs
shrb
push
je
mov
jmp
and
gs
pop
inc
or
aad
jo
mov
sbbl
stc
inc
adc
dec
mov
cmpsb
or
rcll
fnsave
subl
addr16
stos
jp
dec
jnp
ret
inc
out
pop
adc
mov
cltd
and
fucom
dec
mov
cmp
push
in
xor
sbb
movsl
mov
les
lods
adc
dec
pop
jbe
icebp
insb
jmp
insb
jnp
sbb
pop
ret
les
scas
mov
jno
lock
sbb
sbbb
pop
add
pop
pushf
sub
js
inc
xlat
sub
dec
xchg
sbb
es
idiv
cs
jo
lds
hlt
adc
mov
shlb
ret
adc
or
lds
test
out
dec
push
xchg
inc
cmp
dec
push
sbbl
mov
pop
mov
cmpsl
shlb
aad
sbb
cmc
and
add
int3
test
and
daa
or
imul
or
ja
sbb
iret
mov
ds
jbe
imul
iret
mov
push
fdivrs
add
cmp
sbb
outsl
inc
int3
mov
daa
push
out
lea
insb
or
mov
mov
xor
in
into
cmp
inc
shl
aas
dec
fnsave
pop
cmp
pop
iret
sub
scas
mov
lret
dec
xchg
mov
add
cmp
fs
jecxz
mov
dec
and
sub
cmp
lret
pushf
add
outsl
in
push
xor
out
sbb
or
cmp
dec
mov
test
repnz
inc
xor
test
ja
test
jb
push
shll
loopne
jns
xchg
adc
lods
xchg
mov
adc
sub
fwait
xchg
faddl
stos
jge
jns
mov
fcompl
and
push
iret
test
mov
loope
je
jmp
je
icebp
pop
in
lods
push
rcll
out
and
andb
cld
cmp
mov
repnz
sbb
push
into
jo
les
adc
sbb
pop
mov
xor
std
stos
in
ret
sbb
cmpsl
leave
or
out
jp
lea
aam
sbb
mov
push
mov
ror
sub
call
ljmp
dec
out
pop
jmp
in
xor
out
mov
mov
lds
and
icebp
in
stc
xor
aas
xor
push
ret
call
int
mov
out
xchg
add
cmp
out
inc
cmp
stos
hlt
cmp
and
cmp
pop
mov
add
adc
insl
xchg
fwait
mov
lock
loopne
xchg
ds
inc
mov
fs
fsubrl
or
rcr
add
mov
cs
sbb
imul
dec
xchg
div
icebp
dec
push
cltd
sub
mov
mov
cmp
test
sub
adc
xor
ljmp
and
mov
jmp
int3
push
movsb
das
je
cmpb
xchg
mov
and
bound
sbb
xchg
xchg
dec
xchg
push
sbbb
mov
ds
stos
xchg
enter
sbbb
mov
mov
cmc
lret
lods
test
lcall
arpl
and
cmpsl
stos
mulb
out
inc
loopne
cld
and
mov
addr16
push
mov
dec
outsb
sbb
jg,pn
repnz
enter
sub
enter
push
jbe
push
xchg
lret
pusha
clc
sahf
bound
mov
imul
test
add
movsb
fcmovbe
jbe
sub
pop
push
out
cmpb
imul
push
add
pop
lods
ret
lods
iret
cmovnp
das
pop
dec
fisttpll
mulb
dec
xchg
xchg
push
sbb
leave
sarl
mov
imul
fcmovne
inc
adc
inc
aam
jno
into
lcall
cwtl
xchg
clc
push
daa
xchg
sbb
fs
insb
loop
out
mov
cli
into
mov
sti
repnz
popl
xor
call
ret
je
add
comiss
fdivrl
lret
push
dec
xchg
aas
movsb
test
fildll
sub
adc
aad
mov
in
xchg
outsl
ret
scas
mov
jl
mov
cmp
jp
fwait
test
fucomp
add
repnz
popa
adc
xchg
xchg
or
movsl
and
mov
push
es
scas
add
mov
xchg
movsl
sub
pop
xchg
sahf
xchg
cmp
mov
aaa
pop
out
pushf
es
push
or
mov
into
and
push
lret
out
add
fisubs
jns
pop
jo
add
stos
mull
imul
inc
lret
inc
xchg
ja
call
stos
and
pop
sub
push
ret
idiv
ret
ja
shl
cs
fwait
cli
push
lds
pop
stc
mov
loopne
sahf
les
or
adc
jge
cmp
pop
or
pop
out
ficoml
push
into
and
mov
iret
orl
jmp
jo
aaa
out
lret
xor
testb
addr16
popa
loope
mov
fwait
out
pxor
mov
push
lods
push
call
mov
repz
sbb
fsubrs
sub
mov
sub
scas
das
jne
fsubl
xchg
loop
lds
and
add
out
cld
ss
xor
lahf
lock
mov
je
push
adc
add
loope
popa
sbb
andps
stos
call
xor
cli
out
js
or
push
push
or
popa
xor
cld
cmp
jno
std
std
fcoms
jmp
jnp
jecxz
mov
xchg
sti
jmp
psrlq
test
clc
ljmp
dec
cmp
cmpsl
jl
jg
cwtl
les
test
inc
rol
movsb
push
push
and
mov
mov
ret
lods
ret
mov
lods
dec
pusha
mov
mov
fs
xchg
loope
sub
push
pop
in
neg
inc
lock
nop
push
imul
pop
cmpw
xchg
in
push
add
adc
pop
xchg
xlat
dec
test
mov
jmp
mov
inc
adc
pop
push
int3
sbb
pushf
sbb
enter
push
mov
push
daa
xchg
cmp
inc
and
jo
add
inc
push
adc
push
or
adc
in
push
add
dec
jecxz
mov
cltd
xlat
adc
xchg
stc
lret
mov
ja
ret
xabort
sub
bound
test
push
dec
cmp
jge
dec
pop
iret
sbb
mov
push
pop
ss
ficompl
push
dec
inc
mov
xchg
jne
mov
adc
lcall
push
push
mov
nop
test
add
in
js
repz
cmp
sti
in
loope
xchg
out
ficompl
stos
ret
in
and
xor
add
icebp
sub
dec
add
dec
pop
shlb
mov
push
sahf
xor
inc
fdecstp
lock
jmp
imul
sub
ljmp
out
sbb
cli
cmp
ret
dec
and
push
fs
stos
cwtl
lcall
int
cs
push
lret
lahf
push
jecxz
pop
cmp
mov
sbbl
inc
call
jl
rcll
push
cmp
dec
jmp
bound
xchg
pop
jecxz
pop
aad
andl
out
adc
mov
sub
or
sbb
test
xor
fildl
jge
mov
jg
adc
lds
mov
adc
fimull
fnstcw
push
repnz
inc
dec
cltd
jbe
cmp
into
pushl
lret
mov
mov
sbb
cld
push
fsts
push
xchg
inc
incb
dec
call
ds
pop
inc
sbb
mov
adc
sub
out
dec
leave
push
fmul
hlt
mov
lahf
cmpsl
aaa
push
jmp
out
outsb
shlb
aad
fs
adc
int3
jmp
pop
sarl
pop
je
int
test
movsb
dec
je
xor
jle
inc
ret
lds
mov
adc
sbb
pop
loope
cmp
ficoms
cmp
jae
sbb
scas
shl
and
mov
mov
push
xor
add
es
jno
sub
jae
icebp
pusha
fwait
and
jnp
fnstenv
jmp
cli
xchg
jo
jb
and
or
ficomps
sar
mov
mov
and
jp
aad
pop
in
aad
sbb
push
shrb
daa
add
ret
andl
stos
mov
leave
pop
adc
pushf
ret
lods
cmp
sub
push
divb
insl
out
or
in
dec
outsb
in
and
inc
int
add
xchg
inc
mov
lods
data16
add
cld
xchg
mov
jp
pop
push
insb
out
repnz
inc
lcall
outsb
adc
mov
jae
pop
out
mov
faddl
push
mov
lods
cli
ja
sub
rcrl
ljmp
pop
pop
pop
mov
lret
fildl
pusha
pop
mov
add
pop
loopne
sub
outsl
shl
mov
and
aad
jecxz
dec
shll
inc
xor
mov
jmp
pop
lret
leave
mov
int
xchg
orl
mov
test
das
dec
dec
into
pushf
int
cli
cmp
movsb
aaa
repz
dec
les
mov
jo
sbb
inc
cmp
lods
movsl
movsl
mov
jge
mov
ljmp
stos
sbb
fidivrs
xchg
sub
insb
faddl
popf
mov
push
in
jle
in
daa
xchg
scas
sarl
cwtl
jae
pop
mov
cmp
dec
mov
ja
push
outsl
adc
xchg
mov
jns
fwait
and
or
shll
mov
insb
movntps
mov
aaa
push
cmp
sbb
pop
cmpsb
sbb
jmp
or
inc
mov
push
pop
out
popl
ret
push
pop
std
xor
add
xchg
push
push
out
push
adcb
xorl
ds
lea
roll
cmp
lds
jmp
xchg
pop
pusha
lods
les
cmp
stos
dec
hlt
sahf
clc
test
loopne,pn
arpl
shlb
adc
inc
iret
lods
and
icebp
mov
or
push
pop
pop
stos
movsb
in
fs
or
mov
add
imul
lea
and
out
js
push
jno
shll
add
rcrl
movsl
pop
jb
lods
mov
sub
andnps
lret
inc
sbb
lret
cs
jmp
mov
mov
xor
daa
or
fimull
mov
mov
or
mov
scas
mov
rorb
cli
popa
cmp
icebp
mov
xchg
adc
mov
push
pop
test
movl
inc
push
and
pop
cs
mov
mov
out
repnz
movl
jmp
push
inc
pop
sub
iret
add
lods
mov
mov
xchg
stos
inc
push
repnz
pushf
mov
bound
mov
dec
mov
aam
inc
pushf
mov
mov
mov
imul
and
push
xchg
inc
inc
dec
orl
fisttpl
mov
pop
loopne
mov
outsb
lahf
dec
lock
outsl
sbb
inc
xor
lcall
out
hlt
cmp
outsb
push
sbb
sbb
inc
xor
sarb
jg
cwtl
push
xor
or
std
and
mov
pop
out
test
mov
ja
lret
sbbb
mov
lods
mov
rol
addb
and
cmp
xor
inc
mov
adc
inc
sti
cmp
and
sbbl
scas
jae
jle
jmp
into
mov
clc
scas
cmp
movsb
add
daa
pop
je,pt
cmp
call
sub
adc
into
dec
pop
leave
rorl
mov
mov
pop
pop
push
add
jo
push
cmp
dec
mov
js
pop
push
insl
testl
mov
pop
xor
sahf
jle
minps
popf
add
loope
ljmp
sub
adcl
scas
lret
push
mov
and
push
add
pop
mov
icebp
pop
ja
mov
aaa
gs
into
fsubrl
or
mov
outsb
stos
push
jns
inc
jns
mov
push
sbb
test
sarb
stc
xchg
es
jmp
mov
leave
fstp
enter
orb
lcall
sub
enter
mov
lea
jns
mov
sbb
arpl
ss
data16
arpl
xchg
test
mov
into
rcll
lret
pop
arpl
inc
pop
jns
fcmovb
inc
fdivrp
xor
mov
pop
das
mov
test
cli
mov
aas
mov
out
inc
ds
pmulhuw
mov
lahf
push
adc
outsb
mov
xchg
loope
mov
sbb
sarl
jbe
fildl
or
lods
jle
bound
shrb
and
pop
adc
repz
jmp
cltd
mov
fs
sti
sbb
or
push
mov
pop
loop
or
sbb
sbb
inc
mov
sbb
sbb
and
sbb
les
add
jne
mov
push
push
cmpsb
pop
cmc
ror
popa
mov
adc
ds
sti
sbb
ja
lods
mov
xlat
add
inc
in
lea
pusha
jg
and
add
mov
mov
sahf
push
xchg
sub
jl,pt
xchg
cmpsl
mov
lock
xchg
mov
pop
or
incl
movsl
jnp
or
xchg
xlat
loop
fwait
push
mov
add
jecxz
aas
shl
cmp
push
add
inc
bnd
shlb
dec
and
jne
mov
jnp
fists
add
mov
sub
and
pop
adc
jge
ja
xchg
jne
mov
popf
lret
incb
shll
jp
xchg
xor
cli
xor
repnz
jns
aas
imul
out
in
lret
mov
push
aas
dec
stos
dec
jbe
or
adc
push
daa
adc
aas
lret
or
push
dec
insb
movsb
sahf
xchg
or
push
dec
sub
jae
push
stos
sub
push
mov
lcall
aam
or
out
push
dec
in
sbb
pop
jg
cmc
int
bound
stos
xor
pop
push
setae
or
push
xchg
stos
mov
lret
push
lock
pop
std
add
jne
fstpl
mov
addr16
scas
mov
gs
loope
and
inc
adc
fwait
push
jge
mov
push
and
loopne
scas
and
xlat
inc
fdivrs
xchg
mov
out
or
test
or
xchg
lcall
faddl
es
sarb
inc
push
out
es
sahf
push
les
jmp
imul
cmp
mov
push
imul
xor
dec
lret
xor
mov
outsl
xor
pop
pop
test
inc
and
stos
sbb
sbb
cwtl
lock
adc
mov
inc
sub
out
lods
sahf
sbbl
orb
jmp
push
dec
sub
pop
imul
push
sub
cmc
leave
je
or
push
xchg
movsl
sbb
cwtl
insb
push
lods
sbb
add
jge
loop
mov
scas
test
out
fildl
lret
pusha
inc
push
adc
mov
push
int3
dec
outsb
mov
and
addl
ds
mov
pop
adc
sbb
lock
scas
dec
int3
lods
sbb
ds
aas
in
pop
icebp
sbb
mov
test
rorb
popa
out
in
mov
popf
ficoml
pextrw
dec
sbb
cwtl
ljmp
push
mov
and
dec
xchg
outsl
test
call
fs
aaa
mov
andb
dec
xlat
or
fcoms
mov
xor
push
xlat
test
cmp
push
sti
clc
push
out
jb
push
mov
daa
jge
inc
xor
std
push
imul
jns
cmp
in
jmpw
ds
sti
sarb
pop
dec
push
sub
push
lds
push
or
dec
into
or
pusha
sbbb
dec
xchg
test
rclb
add
std
fiadds
insl
bound
addb
sub
dec
sbb
push
push
mov
cmpsl
outsb
cmp
fisubs
icebp
rorb
adc
mov
mov
or
sub
aas
subl
leave
int
insl
mov
sbb
test
add
inc
mov
jb
or
cmpsl
orb
xor
sbbb
loop
mov
popf
sbb
inc
mov
inc
insl
xchg
push
in
xor
jg
dec
fs
mov
cmp
lcall
dec
les
push
aas
in
dec
dec
and
xor
imulb
dec
fisttpll
and
loopne
mov
mov
movsb
sti
mov
add
mov
shlb
out
lahf
dec
arpl
and
mov
ret
pop
push
dec
sub
sub
enter
xor
sbb
fwait
cld
jecxz
and
cs
sbb
pushf
sub
push
out
pop
push
fdivrs
sti
sahf
inc
or
jle
int
roll
out
shll
divb
sub
jle
mov
arpl
cmc
mov
subl
push
ja
jp
fs
mov
imul
das
jg
icebp
xchg
xor
in
pop
outsl
pop
icebp
aaa
mov
movsl
int
sbb
cmp
sbb
pop
jb
push
xchg
adc
mov
xlat
imul
pusha
and
inc
cmp
adc
fnstsw
shrl
fiaddl
outsl
mov
xchg
sbb
xchg
xlat
cmpsl
mov
xchg
xchg
push
inc
sub
mov
jo
sbb
aas
sbb
push
and
jp
adcb
sbb
adc
or
shl
adc
repz
or
cld
push
insb
shl
xor
dec
popf
inc
and
dec
sbb
lcall
xchg
bound
jmp
cld
adc
mov
mov
cmpl
jmp
out
xor
popa
push
out
sti
sub
mov
cmp
xchg
add
out
mov
jbe
adcb
cld
mov
lds
sub
push
mov
les
dec
or
scas
sub
jb
mov
scas
mov
push
jbe
repnz
adc
icebp
xor
mov
outsb
push
dec
mov
aas
xlat
xor
pop
adc
pop
lea
and
lahf
popf
sub
cmpsb
xchg
test
jge
leave
mov
add
int
rcll
dec
out
inc
add
fldcw
filds
mov
stc
cmpsl
sbb
in
sub
sti
ja
insb
xor
sti
jmp
and
cld
sub
xor
xchg
add
bound
imul
shrl
sbb
inc
lods
jg
push
mov
aam
mov
adc
jp
push
dec
jecxz
in
xor
fcmovnb
sar
inc
dec
fadd
adc
cmp
pushf
push
sbb
push
adc
lret
push
lods
scas
sbb
jnp
jb
ret
add
aaa
rcr
mov
or
stos
mov
repz
jo
add
lods
xchg
leave
stos
xchg
xor
inc
or
cli
fsubrl
inc
insl
fs
add
adc
add
or
aam
and
mov
lods
test
outsl
inc
lahf
scas
add
add
adcb
sub
cld
inc
push
push
xchg
add
inc
xchg
mov
xchg
mov
mov
sub
out
mov
xlat
sub
jmp
out
sub
push
add
divps
xchg
xchg
xor
roll
inc
out
stc
dec
mov
call
shrl
push
int3
xor
in
call
and
add
xorb
mov
xor
lcall
mov
jecxz
mov
mov
das
or
sbb
fldcw
loope
cmp
jmp
lods
sbb
in
lret
test
fwait
in
ja
js
mov
add
ret
or
or
addl
fs
jmp
mov
popf
jp
xchg
dec
xor
dec
out
push
int3
sbb
ficoms
fistpll
mov
or
push
and
je
daa
or
mov
insb
xor
cmp
aaa
xorb
dec
std
mov
pushf
and
nop
cmpsl
je
mov
mov
bound
inc
rorl
push
inc
sbb
sbb
dec
lods
icebp
mov
xchg
cli
aam
pusha
loope
test
movsl
adc
mov
call
xchg
lret
or
sub
insb
sub
cmp
repz
or
loope
sbb
insb
dec
and
sbb
jno
popf
sar
mov
mov
ljmp
adc
xchg
das
scas
xor
out
jg
add
sub
sub
insb
mov
fmuls
insl
jb
pop
add
cwtl
insb
ret
jo
jbe
lods
jmp
mov
int
jl
cmp
mov
loope
mov
xchg
or
jle
daa
lcall
xchg
adc
aas
or
ja
mov
xchg
or
adc
dec
push
cmpsb
subb
pop
cli
inc
or
aas
add
outsb
jp
out
push
pop
fisttps
cmova
aas
jl
or
outsl
inc
sti
cld
inc
aad
lock
jecxz
test
cmp
cmp
mov
out
push
jne
add
call
jecxz
cmp
sub
sbb
pop
mov
mov
scas
sub
add
pop
mov
adc
jle
xchg
jmp
insl
ds
pop
inc
mov
scas
pop
and
pop
fwait
sbb
mov
enter
push
add
mov
mov
xor
outsl
pop
mov
fxch
dec
push
and
jne
mov
inc
lods
popf
dec
rcl
add
inc
xor
pusha
dec
and
and
push
adc
arpl
movsb
xor
clc
repz
adc
mov
loope
mov
or
fcoms
xchg
xorl
jae
xor
sbb
loope
and
inc
mov
add
leave
cmpsb
jo
int
inc
and
shrl
push
jge
xor
insl
arpl
mov
push
cmp
add
in
sub
pushf
and
mov
mov
mov
addb
rol
mov
xor
or
xor
movsb
rclb
mov
xor
sbb
ret
xchg
dec
jle
lea
je
push
xor
pop
cmpsb
jne
push
aas
pop
dec
iret
ucomiss
jp
adc
fildll
test
or
aas
in
ret
lea
enter
test
mov
in
testl
or
ret
xchg
mov
xor
mov
jecxz
lcall
lods
mov
sbb
lcall
ret
popf
mov
insb
ljmp
fnstcw
or
mov
mov
ret
xchg
sub
repz
cmp
adc
mov
or
mov
dec
mov
leave
sbb
sub
adcb
inc
sub
sahf
lahf
push
shrb
lods
mov
cmc
push
enter
push
pop
test
mov
xchg
inc
jle
xchg
jb
mov
lock
adc
mov
test
push
jl
sub
mov
pop
adc
mov
cli
dec
push
xchg
add
xchg
cmpsl
xorb
fdivl
aad
mov
lea
mov
cmp
jp
gs
sbb
mov
xor
add
inc
test
xchg
ficomps
jmp
jo
adc
scas
push
dec
or
or
push
lcall
pop
adc
mov
xor
inc
inc
repz
fdivl
sub
xor
mov
les
loop
jmp
xchg
cmpsb
mov
rcrl
dec
push
mov
add
xchg
xchg
pop
push
test
mov
aam
dec
out
aam
adc
movsl
negb
pop
lods
mov
or
sarb
lods
jmp
movsl
aaa
add
xor
pop
movsl
jmp
and
movsb
jle
push
xchg
pop
add
lcall
fwait
pxor
inc
divl
rorb
push
in
test
push
cmp
sti
repnz
addr16
stos
shrb
call
test
fisubrl
scas
push
push
adc
xchg
ror
fcoml
aad
cltd
loopne
lea
pop
dec
fldcw
sbb
jns
movl
mov
mov
inc
mov
mov
fmuls
les
push
xor
inc
mov
push
inc
mov
adc
cmp
scas
lcall
xchg
mov
push
inc
ret
cli
cmp
outsb
sub
mov
lret
insl
mov
popf
ljmp
leave
int
into
packssdw
pop
push
pop
push
les
cmc
sub
push
flds
fstpt
push
in
inc
xchg
test
add
repz
fucomip
xchg
cmpsl
sbb
int3
test
rorb
cs
pop
xor
scas
lods
jmp
pop
jo
fcmovbe
fcompl
add
jno
sbb
or
xor
lods
xor
xchg
hlt
bound
sub
push
clc
or
ss
or
in
daa
push
and
push
pop
or
mov
xor
xchg
dec
jecxz
aaa
xchg
sub
nop
in
and
xchg
cs
mov
leave
xchg
dec
fidivrl
out
push
in
movsb
lcall
mov
inc
cmp
xchg
jp
repnz
ret
or
cld
popa
mov
stos
sbb
mov
push
mov
mov
and
mov
iret
cs
and
push
dec
mov
xor
dec
add
das
int3
imul
add
inc
notb
push
out
sub
or
test
cs
mov
popa
aad
stos
dec
or
les
cmpsb
add
into
lahf
or
call
bound
leave
xchg
cmpsl
mov
xchg
shlb
and
je
pop
push
xorl
mov
mov
xor
cmpsl
addr16
shrb
mov
aas
insb
cmp
stos
repnz
sbb
sbb
imull
xchg
cli
fistpll
push
repz
sbb
pop
cmp
in
sbb
xchg
loop
dec
outsb
movsl
mov
xchg
fs
push
add
cmpsl
jecxz
fistl
inc
std
vmwrite
dec
arpl
shll
inc
ficomps
sub
mov
ja
pop
cmpsl
mov
jl
sub
jbe
jo
aad
inc
push
loopne
xchg
data16
inc
sbb
mov
pushw
roll
enter
xor
add
js
addr16
cli
sbb
js
aas
in
aaa
daa
xlat
mov
push
divb
push
clc
rorb
ds
sub
notl
or
sub
stos
cmp
out
loop
dec
push
or
jmp
cwtl
jp
dec
stos
jmp
jge
arpl
pop
shrd
and
jmp
test
mov
cmpsl
inc
imul
popa
and
pop
xchg
adc
les
lcall
push
out
xchg
xchg
lock
inc
mov
enter
mov
xor
pop
loope
sub
push
mov
push
jle
dec
stos
push
xor
lret
adc
fbld
adcl
xchg
dec
sar
xor
ljmp
add
push
add
cmpsw
psrlw
imul
sub
pushf
lret
out
sti
or
cwtl
dec
inc
and
adc
jae
jne
not
or
push
loope
push
test
add
push
lcall
std
call
mov
cli
adc
cmpsb
stos
loope
xor
les
enter
and
popa
cmp
jmp
pop
sbb
dec
sbb
cmp
lcall
popf
inc
add
in
je
filds
jo
cmp
xchg
cmpsb
pop
ret
ljmp
imul
arpl
push
jns
jb
inc
in
popa
mov
cmp
fisttpll
outsl
imul
jge
add
pop
cmp
cmc
int3
lea
mull
mov
insl
adc
mov
or
sub
ss
gs
fisttpll
in
fwait
nop
mov
mov
pop
sbb
pop
and
inc
repz
daa
fstl
dec
nop
and
flds
pop
push
stos
sbb
gs
shrb
test
jecxz
jl
notb
mov
sub
out
insb
jle
dec
lahf
imul
cmp
stos
push
out
test
ret
jo
jnp
push
pop
push
add
xlat
fisttpl
je
shr
mov
cwtl
lock
cmp
pop
xchg
adc
cmp
inc
xchg
fldt
movsl
pop
ja
insb
ret
pop
in
ljmp
icebp
mov
pop
jmp
pusha
ja
jp
push
inc
js
and
jne
or
lock
xchg
push
fsubs
aad
cmp
inc
outsb
or
pop
or
mov
pop
jle
inc
cmpsb
imul
mov
xlat
jmp
pop
sub
push
out
movsl
push
test
inc
les
das
aas
lret
pop
mov
pop
dec
add
outsb
testl
jno
mov
sub
stos
test
jb
leave
dec
fldcw
mov
pop
popa
cmp
mov
stos
mov
inc
cmp
pop
add
stos
sub
dec
lock
push
add
sahf
jp
aam
or
rol
xchg
imul
inc
addb
push
mov
add
mov
sub
repnz
xor
cmovge
mov
ss
stos
and
xchg
lods
pop
fisttpll
xchg
mov
imul
insb
adcb
cmpsb
mov
call
cs
cwtl
sti
sbb
or
sti
xchg
inc
loopne
test
scas
dec
clc
sub
into
int
pop
jp
fistps
xchg
addr16
mov
jns
adc
repz
mov
push
call
jl
mov
aas
ret
lret
mov
fldcw
or
es
cmp
push
rorb
in
jnp
cmpsl
jl
dec
sbb
out
fs
mov
bndldx
int
lret
pop
mov
mov
lahf
shll
mov
fwait
jno
xor
dec
lahf
in
sub
cltd
dec
mov
insb
add
cltd
ret
and
mov
mov
sbb
es
cwtl
cmc
test
dec
add
inc
fmuls
leave
dec
push
jne
aaa
cmp
mov
inc
sub
les
sub
repz
mov
mov
addr16
stc
add
shl
rorl
inc
adc
jbe
fistpll
mov
lahf
shrb
mov
pop
add
mov
xchg
mov
cwtl
fiadds
mov
repz
pause
sub
je,pt
adc
popa
testl
inc
stos
mov
and
add
test
xchg
stos
adc
arpl
sar
mov
or
in
pop
mov
cli
sbb
popa
mov
cmp
dec
push
in
out
pop
addr16
cs
std
mov
scas
std
push
push
xor
add
sbb
xor
hlt
mov
adc
loopne
mov
add
pop
jb
add
out
pop
cwtl
adc
jg
jnp
jne
into
test
cmp
jmp
mov
lret
cmp
sub
das
add
xor
outsb
or
mov
mov
clc
movsl
js
sub
std
shl
jbe
inc
push
and
xlat
leave
mov
push
lock
cli
inc
pop
or
decb
add
pop
scas
jmp
xor
fstps
in
test
xchg
xchg
movl
loope
mov
fcompl
push
js
test
out
sbb
scas
sti
jae
jae
sub
jne
and
jmp
add
xchg
mov
or
test
xchg
cld
adc
push
mov
jecxz
inc
push
mov
je
jle
xor
cmp
jle
dec
xchg
test
pop
lret
int3
cmpb
push
sbb
pop
add
and
ljmp
pushf
roll
mul
cmpsl
jo
fiadds
mov
dec
outsl
mov
clc
scas
sub
dec
mov
jno
sbbl
jp
jbe
mov
dec
outsl
mov
jecxz
lock
xor
mov
pop
mov
jg
mov
sbb
sbb
sub
pop
and
pop
mulb
hlt
enter
adc
add
dec
pop
push
xor
inc
or
dec
xchg
mov
sbb
push
ret
jnp
roll
adc
dec
sub
dec
bound
jecxz
cmpsl
mov
orl
inc
or
inc
mov
pop
add
sub
mov
mov
cwtl
out
mov
aas
mov
outsb
fldt
popa
adc
dec
cmp
fs
sbb
xlat
nop
mov
pop
adc
push
adc
jmp
mov
mov
pop
jne
pushf
fisubl
inc
mov
daa
mov
es
fsts
ret
adc
outsb
iret
ret
mov
jnp
and
insl
stc
xchg
push
pop
mov
push
cmpsb
iret
mov
dec
ret
sbb
push
and
xchg
pop
add
xor
rcrb
add
iret
mov
fcmovu
fistps
stos
fscale
rcrb
jbe
add
outsl
add
mov
fs
or
movsb
loop
test
stos
daa
scas
sbb
mov
aaa
scas
xchg
or
ss
cld
push
mov
lahf
sbb
sar
cmp
rcrl
adc
addl
pop
cltd
dec
ror
pop
fdivrl
testb
add
cmp
decl
cld
outsl
aad
hlt
sbb
cli
dec
inc
rcll
jp
test
or
dec
les
cli
imulb
std
dec
jecxz
or
cltd
push
mov
mov
cli
aad
hlt
sbb
icebp
jl
cmp
inc
push
cmp
shll
bound
push
jne
mov
mov
lods
fwait
dec
iret
ja
enter
fistpl
jle
fldcw
and
mov
jne
ljmp
shll
call
mov
cwtl
aas
jle
pop
lea
dec
mov
stos
shrl
jl
pop
push
in
pop
xor
jae
lret
adc
jns
adc
sbb
mov
jp
inc
mov
pop
repz
sbb
mov
cmp
out
adc
push
or
out
in
sub
pop
int3
das
and
jl
data16
xor
loope
add
push
mov
jbe
adcb
mov
inc
aam
into
dec
sbbl
pop
int
stos
sub
stos
and
lods
into
fldl
inc
mov
jle
mov
jb
ret
imul
hlt
mov
addr16
or
ret
cltd
iret
xchg
adc
pop
pop
ror
out
dec
cmc
cmc
dec
or
sbb
jle
mov
dec
dec
adc
push
push
mov
sbb
jp
inc
mov
push
or
bound
jmp
xchg
jl
pop
test
clc
pop
out
inc
fldcw
lcall
out
test
gs
jg
lcall
cmpb
sub
xor
ss
fistpl
insb
pop
mov
les
pop
adc
gs
xchg
push
cmp
std
outsb
mov
sti
mov
jg
or
xchg
push
in
out
dec
std
insl
mov
xorps
or
mov
cmp
fldcw
sub
std
insl
int3
rcrb
sahf
mov
cmp
jl
pop
cmp
pop
mov
addl
out
pop
scas
lahf
roll
sub
sbb
mov
movsb
adc
cmp
outsb
xor
push
jno
jns
push
mov
lret
mov
cmp
in
mov
jge
add
sub
push
adc
add
inc
jmp
lds
lods
mov
cmp
imul
enter
cmp
xchg
addl
into
mov
int
mov
xor
mov
outsl
push
cmp
add
nop
pop
and
ret
pop
xor
cltd
testb
sub
push
adc
and
cmp
push
sbb
pop
fists
add
daa
dec
jbe
xor
orb
test
and
mov
push
mov
stos
roll
jnp
mov
in
es
add
iret
adc
ljmp
mov
fwait
mov
test
lret
ss
test
sub
imul
lret
je
jae
popf
add
xor
mov
jbe
dec
cmc
mov
rclb
jmp
out
das
add
adc
push
or
sbb
push
xchg
mov
push
pop
jge
pop
and
jge
dec
add
sbb
xlat
sub
adc
not
xchg
das
das
sbb
jns
mov
aam
sub
into
popa
xor
lods
inc
pop
repnz
mov
jmp
std
mov
std
out
push
hlt
vpshufhw
movsb
test
jp
int
pop
pop
and
inc
mov
sub
fsubs
sub
ret
subb
ret
fidivs
cmp
movsb
into
push
aad
in
mov
or
inc
in
aam
xchg
add
repz
out
cmp
sub
decb
lods
mov
mov
subl
add
mov
daa
push
rcrb
sbb
cld
enter
mov
int
pop
jl
add
inc
imul
pop
adc
xor
ret
mov
int
movsb
sub
or
jno
cwtl
mov
ljmp
dec
mov
fistps
lds
sub
xchg
lahf
mov
pop
fs
pop
adc
nop
sbb
aas
outsl
jle
hlt
inc
mov
daa
adc
call
jbe
mov
stos
xchg
test
iret
mov
daa
dec
mov
inc
sbbl
xchg
jp
fcmovu
sahf
and
out
or
js
or
mov
gs
pop
mov
ffree
pusha
lods
push
mov
push
cmp
leave
xchg
movsb
enter
xor
dec
stos
and
faddl
adc
aaa
out
orl
add
jo
pop
xchg
out
push
push
jae
addl
add
stc
aas
push
rcr
jnp
ja
pop
sub
les
ror
pop
les
mov
pop
mov
jne
fcmovb
or
in
jno
lret
mov
jecxz
pop
je
xor
movsb
test
sbb
pushf
das
sbb
daa
ret
leave
cmpsl
add
out
flds
fiaddl
mov
cmp
icebp
shrb
lods
lods
pop
addl
cmpsb
push
dec
sbb
addr16
sti
pop
xchg
xlat
cmp
in
push
mov
pushf
sbb
ja
jmp
mov
or
mov
in
xchg
in
mov
sub
out
call
and
fisubrs
lods
loope
add
imul
scas
int
andl
test
pop
mov
imul
shlb
xor
lret
jp
mov
test
out
fsubrs
hlt
or
stos
and
cmp
xchg
adc
cli
mov
jecxz
jmp
data16
add
mov
dec
push
xchg
je
lret
andb
repz
jle
cmpsb
lret
jp
cli
inc
daa
nop
xchg
sbb
sbb
mov
add
lea
or
ja
inc
cli
pushf
insb
push
and
adc
cs
dec
dec
lds
mov
sub
aam
shl
push
jle
imul
push
pop
sub
xlat
dec
xchg
jb
push
xchg
std
mov
cmpsb
mov
adc
xlat
fwait
push
stos
test
sbb
gs
push
jne
andb
sbb
lret
cs
lret
adc
jp
dec
inc
fcoms
lcall
dec
out
push
cmp
cmp
mov
pop
shrb
int
sub
sbb
and
sahf
daa
inc
xchg
pop
rcrb
fmuls
pop
xlat
mov
cmp
andb
test
jmp
push
sub
jp
cli
jle
sbb
enter
lea
cmpsb
movl
xchg
or
mov
in
push
jge
cmp
outsb
jl
cli
stos
push
sub
stos
inc
fwait
imul
sbb
xchg
jmp
aad
pop
ljmp
in
mov
add
data16
inc
add
and
mov
xchg
and
lahf
ret
mov
or
pop
leave
or
addl
rcll
xchg
xchg
arpl
mov
xor
popa
roll
push
mull
icebp
mov
xchg
sbb
enter
rcl
aam
push
xchg
in
and
iret
adc
mov
lcall
fisubl
arpl
mov
repnz
push
inc
adc
adc
repz
mov
out
pushf
ret
or
nop
cli
lock
sub
fwait
std
mov
xchg
or
inc
cmc
std
mov
pushf
xchg
imul
je
xor
cltd
out
jge
stos
dec
arpl
sub
shll
jnp
mov
push
je
sbb
in
push
push
sbb
pop
mov
out
fs
out
mov
ret
movsl
repnz
mov
cmc
mov
clc
sbb
jns
fcoms
stc
repz
cmp
aad
mov
adc
fcmovu
sub
mov
mov
dec
xor
jmp
cmp
ret
rclb
mov
das
pop
inc
cmp
sub
mov
jno
adc
xchg
jecxz
xchg
dec
movsl
sbb
inc
jae
xchg
clc
fsubrl
dec
test
loop
nop
pushf
jle
scas
push
loopne
mov
fsubs
push
mov
jle
push
daa
movsb
push
xchg
outsb
jae
or
adc
or
jp
mov
add
push
jb
xorb
iret
rclb
adcb
mov
jns
addr16
jge
in
cmovp
mov
test
and
inc
loop
mov
or
in
mov
fwait
and
call
push
cld
rolb
jecxz
and
or
lret
adc
mov
push
dec
and
jae
xlat
push
mov
mov
loop
int
mov
add
out
lcall
int
or
lret
sbb
sahf
xchg
in
cmp
sbb
adc
cmp
and
fsts
or
mov
push
inc
mov
faddl
xchg
sbb
mov
sbb
push
xor
cmp
lret
mov
push
lahf
hlt
sti
and
adc
les
mov
xor
sqrtps
dec
mov
pushf
fistps
or
mov
jo
mov
xlat
idiv
and
ds
in
push
cmc
push
fcmovnbe
inc
cmpb
fcmovnu
cmp
stc
sub
mov
adc
hlt
movsl
mov
pushf
xor
jmp
shll
cmp
cmc
popw
imul
xchg
lods
or
push
mov
push
mov
fs
shll
pop
std
adc
in
call
mov
fadds
mov
jmp
jecxz
loope
inc
xchg
icebp
data16
ja
addr16
pop
or
xor
cli
pop
mov
mov
push
mov
cmp
cmp
mov
adc
inc
orl
jae
dec
push
and
adc
jle
das
decl
push
mov
cmp
imul
mov
pop
iret
and
sub
ljmp
rsm
arpl
xchg
jns
adc
push
arpl
xchg
cmp
repnz
xchg
mov
cmpsb
jbe
mov
mov
push
repz
cmpsb
dec
push
cld
pop
cs
push
mov
dec
inc
imul
and
sbb
sbb
or
fsubl
das
and
shll
push
cltd
pop
inc
mov
pop
dec
dec
push
nop
jmp
xchg
jo
cwtl
aas
add
test
outsl
push
sbb
icebp
jae
jns
call
xor
xchg
adc
pop
jecxz
xor
dec
lock
dec
mov
mov
in
dec
xor
xchg
adc
and
pop
das
aaa
mov
sar
or
sahf
jg
jne
clc
push
push
stos
xchg
ja
push
lahf
aad
dec
mov
xchg
inc
jp
xchg
cmp
mov
in
dec
loope
stos
dec
push
cmp
or
jnp
lahf
push
or
int3
and
pop
sbb
dec
xchg
add
popf
cmp
ret
jbe
xor
sbb
adc
jnp
push
push
mov
inc
jns
in
cmc
inc
sbb
and
movsb
das
shrl
out
jp
push
sub
scas
xlat
push
mov
adc
push
lods
in
adc
gs
or
sti
out
push
sbb
popf
sahf
push
mov
jo
pop
in
imul
adc
out
lods
mov
fimull
pop
ret
pop
fdivp
add
test
jo
xchg
shrl
lcall
sbb
adc
aas
xchg
mov
cmpl
dec
dec
pop
mov
xor
jmp
xchg
insb
das
shll
out
call
ljmp
push
adc
and
xchg
mov
jns
out
dec
inc
xor
out
mov
outsl
cmp
sti
push
repnz
inc
pop
les
out
push
icebp
rcl
negb
insb
dec
and
out
or
sbb
add
stc
lret
nop
pop
xor
fldt
loopne
xor
inc
dec
push
fdivr
bnd
stc
leave
push
add
dec
mov
in
jmp
jb
cld
pop
xchg
inc
stc
int3
sbb
sbb
frstor
fiadds
xor
fucomp
jle
cld
lret
orl
xor
mov
aaa
bound
ret
inc
ss
test
test
add
gs
ror
push
cmp
cmpsl
mov
or
les
inc
jl
test
cmp
sub
cld
add
loope
sbb
popa
divb
int3
aam
scas
cmpsb
xlat
cmp
mov
dec
adc
insl
pop
rolb
fdivrs
jmp
call
dec
cmpsb
arpl
sub
ja
shll
enter
nop
dec
lret
cld
pusha
sbb
mov
inc
pop
mov
mov
idivl
outsl
mov
clc
inc
push
imul
pop
adc
push
pop
in
pusha
jle
xor
pop
cmp
popf
icebp
jae
add
inc
sub
xchg
repnz
adc
push
ds
iret
mov
xor
test
push
xor
lea
bound
inc
jo
lea
ljmp
or
mov
cmp
pop
jnp
jecxz
test
mov
cltd
push
cmp
sub
ss
push
push
mov
addr16
push
adc
cwtl
add
ss
mov
pop
lea
hlt
push
incl
and
je,pn
mov
int
dec
repz
jae
lret
xor
in
sub
inc
xchg
daa
filds
add
add
jb
xchg
xor
mov
jne
or
into
ss
xor
xor
pop
mov
adc
mov
cmp
sbb
pop
rcll
push
rcll
out
repnz
xchg
and
es
and
imul
ja
lea
insb
add
repz
dec
and
fiaddl
jl
mov
push
es
adc
scas
push
stos
outsl
repnz
cmpsb
es
adc
imul
mov
cmp
mov
iret
idiv
loop
cmc
into
fwait
pop
repz
jle
mov
sub
xchg
fistps
into
sbb
fiaddl
xchg
pushf
cltd
lds
jae
jp
in
lods
ljmp
mov
ds
ror
pusha
or
dec
and
mov
xlat
and
sti
pusha
or
movsl
fisubrs
into
mov
testb
lods
mov
nop
xchg
mov
push
movsb
jbe
xchg
push
mov
cmp
push
aad
jbe
xor
imull
add
adc
mov
mov
mov
push
dec
inc
rcll
inc
scas
sti
push
mov
popf
or
aas
mov
adc
jno
movsl
js
nop
pusha
add
push
pusha
inc
cli
call
cmp
sbb
cs
cmp
aam
popa
imul
icebp
sbb
jbe
leave
mov
xchg
lea
pop
or
or
movsl
xor
lret
sbbl
jl
and
test
aam
adc
mov
lahf
sbb
push
sub
add
adc
aas
in
mov
mov
mov
ret
in
cli
inc
mov
xor
imul
insl
and
cmp
or
ret
daa
sbb
or
mov
fidivrl
inc
imul
or
lock
jae
mov
inc
mov
stos
push
adc
sbb
data16
mov
imulb
or
xor
and
sbb
jl
pop
push
cmp
jb
clc
dec
jmp
fwait
lods
in
cmp
in
adc
cmpb
mov
push
prefetch
dec
mov
aas
sub
push
mov
jle
loop
pop
enter
jmp
cld
inc
lods
xchg
arpl
sub
das
inc
inc
mov
or
add
cmp
pop
jo
aad
cs
push
xor
push
inc
or
cmp
repnz
aam
jns
dec
mov
mov
imul
test
add
jno
loop
mov
jo
les
jg
ljmp
push
inc
decb
sbb
mov
out
xchg
xor
mov
xlat
adc
outsl
aaa
mov
jno
cmp
fsubrs
mov
mov
xor
sub
insb
sti
push
stos
mov
sub
shrd
out
dec
stc
sbb
cltd
push
push
cs
ljmp
shll
je
xor
es
nop
movsb
xor
int
adc
dec
mov
dec
fcmovnb
or
push
int
hlt
add
mov
fsub
call
jg
jle
xchg
mov
lods
xor
pop
add
cmpsb
sbb
movsl
dec
sti
xchg
std
ja
mov
scas
shll
cmp
loope
push
mov
mov
cltd
dec
xor
and
jg
xor
mov
fldcw
sbb
sub
mov
mov
or
push
test
shl
pcmpeqw
jl
pop
adc
pop
imul
inc
rcll
pop
jno
xchg
test
fwait
sbb
mov
jp
in
ljmp
fcomps
mov
stos
xorb
push
cli
roll
or
push
adcl
pop
or
lea
xchg
xchg
es
daa
sbb
adc
lret
pop
jmp
and
repnz
xor
sbb
mov
inc
xlat
pop
jae
add
jmp
jecxz
aam
lods
pop
sbb
js
xchg
push
int
iret
aam
and
xchg
push
in
push
in
jb
idivb
ds
cmp
mov
movsb
daa
cwtl
jbe
mov
ret
jbe
dec
shrl
pop
pop
jmp
push
mov
sbb
nop
jae
sahf
jl
pop
rcrb
mov
xor
fcoms
mov
insb
pop
call
or
loope
jp
test
pop
mov
and
and
popf
subb
mov
dec
inc
mov
add
stos
ss
outsb
sub
xchg
push
xorb
sub
dec
xchg
test
iret
mov
sahf
fcmovnu
xchg
dec
or
mov
pop
call
sahf
fs
or
jno
mov
or
sbbb
in
int
imulb
mov
mov
in
sbbb
sbb
stos
mull
hlt
rcr
inc
or
dec
mov
cld
pop
push
enter
testb
mov
std
mov
dec
mov
pop
repz
push
out
test
or
adc
scas
and
pop
xor
cld
push
orb
jmp
jge
stos
int3
mov
cmp
add
jns
or
jmp
cmp
add
add
pop
push
sub
test
xchg
sub
insb
jmp
movsb
jp
mov
sbb
or
popa
xchg
mov
mov
andl
xchg
clc
mov
xchg
fnstenv
xor
xchg
or
jge
frstor
xlat
lods
pusha
in
mov
loopne
dec
inc
add
lcall
sub
rolb
shlb
lret
or
sbb
pusha
xchg
pop
in
arpl
fisttpl
mov
add
fcoms
rcrl
mov
jg
or
mov
jae
movntps
add
dec
fwait
mov
sub
mov
dec
adc
cwtl
pusha
dec
sub
bswap
xlat
test
ja
xchg
dec
cmp
adc
aad
and
jmp
mov
or
pop
dec
imul
pop
cmp
cmp
data16
std
cld
loope
push
movsb
xor
jns
arpl
add
call
int
mov
xchg
jae
hlt
mov
js
xchg
pop
xor
mov
out
xor
ret
xchg
aas
arpl
das
stos
inc
pop
in
dec
adc
jno
pop
mov
in
xchg
push
and
sarl
aad
or
iret
add
mov
test
cmpsb
in
cmp
ljmp
add
sbbb
pop
push
sbb
loopne
add
mov
pop
inc
mov
cmp
sahf
repz
jae
and
xlat
jle
out
or
cmc
fisubrl
mov
xchg
xor
push
iret
jl
dec
les
je
jnp
test
xchg
add
das
ret
xor
es
imul
inc
xor
mov
dec
ret
js
repnz
mov
mov
and
mov
sub
cltd
xchg
add
jnp
pop
sbb
mov
dec
fcmovb
into
lahf
mov
loop
out
test
sbb
popa
mov
xor
xor
inc
xor
lahf
sub
or
or
mov
pop
jbe
jbe
shr
test
loop
rcl
dec
dec
adc
sbb
mov
iret
mov
jnp
lcall
in
sbb
pop
repnz
sbb
adc
inc
insb
push
incl
cmpsb
enter
pushf
add
mov
pop
cmp
pusha
cmpsb
cmp
mov
leave
leave
add
sub
test
pop
mov
mov
cs
adc
pop
pop
sub
adc
cmpsl
lret
add
cmpsl
mov
addr16
sbb
mov
mov
xchg
mov
mov
jb
pop
sti
lods
mov
mov
andb
and
stos
das
jg
jo
out
push
aaa
aad
jo
and
into
mov
roll
push
fs
mull
je
xchg
insl
push
loope
or
cs
pop
add
sahf
andl
inc
push
and
push
mov
lahf
ret
mov
pop
shr
xor
xchg
out
cwtl
adc
lock
inc
lock
pop
idivl
pop
testb
add
pop
fsubrl
incb
cmp
jle
push
imul
into
call
pop
xchg
push
push
popa
or
add
dec
mov
out
hlt
mov
imul
mov
scas
cmp
jae
pop
insl
push
adc
insl
test
sub
xchg
stc
pop
lret
movsl
pusha
pop
leave
out
mov
in
rcr
cmp
sbbb
xchg
cmp
cmp
jb
and
int3
call
push
adc
push
clc
inc
mov
xor
fiadds
dec
stc
arpl
in
dec
imul
rclb
daa
loopne
aad
aas
pop
dec
cmp
rol
jno
pop
pop
test
stos
out
sbb
adc
ja
shll
jae
ss
jp
xor
xchg
bound
mov
aas
mov
mov
nop
sub
pop
imull
xchg
and
mov
adc
movsl
mov
mov
push
jnp
inc
dec
pop
scas
xchg
lcall
inc
stc
push
call
fwait
rcll
push
stc
add
mov
adc
cli
jmp
aas
mov
jecxz
dec
pop
mov
jle
inc
dec
pop
repnz
mov
movsb
ss
pop
rcll
popa
cmc
sbb
test
loopne
iret
add
rorl
inc
xchg
mov
in
shll
negl
add
ficompl
mov
add
stos
jno
sahf
out
into
shl
rcr
fbstp
shll
xchg
sbb
cmpsb
pop
xor
lock
test
roll
push
repnz
test
lods
lret
pop
fcmovnb
sbb
adc
popa
ds
adc
inc
mov
mov
int3
sub
out
xacquire
or
push
adc
inc
stos
or
es
mov
les
mov
or
scas
dec
sti
out
cmpb
xorl
pop
popf
lahf
sti
push
xchg
loop
sub
push
orb
sahf
outsl
shr
cmp
mov
out
jge
jnp
pop
mov
dec
int
push
decl
jmp
lahf
cmp
mov
jb
insl
sbb
in
fwait
push
sub
movb
lock
jne
iret
imul
mov
rcrl
and
fnsave
mov
inc
in
cmp
aaa
ljmp
repnz
iret
xor
push
push
cmp
adc
imul
das
scas
mov
xor
fsubs
lea
xchg
addb
std
sub
dec
push
xchg
adc
addl
mov
inc
dec
lods
and
add
pop
xchg
out
arpl
pop
sub
mov
push
pop
out
push
lcall
and
cli
cltd
rcrl
inc
cmp
es
lds
jnp
test
push
cmp
rorl
clc
pop
mov
rol
testb
insl
in
push
adc
leave
jg
and
push
pop
cli
clc
lret
mov
scas
stc
loop
cmp
push
lret
outsl
xchg
in
adc
xchg
fdecstp
mov
sti
pop
mov
icebp
add
push
dec
jl
out
mov
xchg
pop
icebp
shrl
sub
jno
test
jno
ret
mov
jge
mov
pop
push
xor
decb
data16
jge
dec
in
or
ficompl
stos
les
sub
into
aaa
mov
fsubrs
adc
cmp
xchg
imul
mov
mov
adc
pop
xchg
in
jg
jns
test
add
jmp
cli
out
or
sti
popa
jecxz
mov
xchg
and
mov
addr16
dec
cmp
push
je
in
das
sub
imul
mov
push
and
lds
sub
lret
lret
xchg
cmpsb
scas
rcll
inc
std
rcrl
pop
pop
imul
and
stos
pop
and
int
addr16
push
or
sbb
fistpll
stos
mov
xchg
mov
push
mov
and
jns
lret
push
xchg
mov
scas
jg
fwait
sub
and
mov
imul
cwtl
adc
in
mov
sbb
xchg
sbb
sete
mov
pop
ljmp
stc
arpl
pop
lods
and
and
jge
jns
cmp
jbe
clc
aam
jbe
push
or
cwtl
inc
inc
rcll
push
xchg
mov
in
nop
and
imul
add
cwtl
xor
in
fcompl
push
divb
es
lret
lds
mov
shld
cmpsl
xchg
mov
movsl
movsl
les
cmp
loopne
orb
jmp
or
leave
cmpsb
push
pop
sub
aaa
add
push
add
pop
mov
shrb
sub
aam
and
shl
aam
pop
mov
jg
adc
aaa
cmc
push
scas
enter
jns
jno
mov
or
mov
data16
sub
mov
xchg
or
add
cli
mov
gs
push
adc
xchg
test
xchg
add
adc
jb
popa
rcl
jl
out
xchg
pushl
jp
rol
sub
sub
mov
icebp
push
mov
outsl
sub
inc
inc
movsb
pop
xchg
inc
pop
xchg
mov
xchg
push
fisttpll
fnstenv
lea
in
dec
ret
dec
sbb
and
mov
xchg
push
test
in
lock
mov
fimull
test
add
adc
icebp
in
and
dec
xchg
idiv
xchg
push
loope
sti
ja
sbb
mov
sti
add
into
push
pushf
je
inc
jo
inc
fs
xchg
xlat
mov
cs
inc
cmc
nop
mov
insb
mov
pop
mov
jmp
jmp
push
add
loopne
inc
cmc
fwait
icebp
aad
outsl
push
test
push
decb
mov
pop
cmpsb
scas
cld
jecxz
jbe
outsl
loopne
ds
loop
mov
in
cld
pusha
into
and
insl
push
add
fmuls
cmc
adc
mov
addr16
popf
cmp
adc
pop
mov
mov
mov
dec
cmc
lods
dec
mov
mov
dec
lods
fistpll
fbstp
popa
sbb
cmp
daa
clc
sbb
shlb
mov
mov
mov
imul
xor
inc
pop
jne
jns
lcall
inc
ror
data16
repnz
mov
iret
or
aaa
mov
dec
mov
inc
mov
movl
jnp
and
test
lock
fnsave
lea
shll
xor
int
push
repnz
pop
mov
cs
mov
scas
sub
pop
js
jae
outsb
sbb
dec
pop
lahf
inc
mov
popf
clc
lea
ror
jae
sbb
mov
imul
or
adc
pop
and
dec
mov
dec
arpl
jl
xor
xchg
adcb
loopne
imul
jmp
vcvtps2dq
or
xor
aas
cmp
lahf
mov
and
mov
mov
adc
mov
and
mov
lahf
fbld
les
loop
dec
call
xchg
cmc
mov
add
das
cmp
adc
enter
add
leave
mov
or
arpl
lods
ds
jle
add
fidivs
adc
push
add
shlb
andl
xor
test
popf
pop
lods
push
mov
xchg
cli
jo
adc
leave
jnp
jnp
out
adc
rorl
sbb
sub
and
pop
pop
xor
adc
mov
rcr
scas
mov
fnstsw
or
stos
mov
icebp
popa
popl
iret
data16
js
movl
or
stos
lock
push
push
pop
sub
adc
mov
dec
fbld
sahf
or
adc
xchg
adc
jmp
mov
fcomp
int3
das
fnstenv
lods
paddusb
adc
cmp
lret
cmp
pop
negl
push
std
aam
xchg
push
enter
push
jns
aas
lret
xchg
push
dec
xlat
jle
scas
dec
xchg
add
mov
xchg
mov
icebp
out
mov
movsl
mov
repz
inc
out
loope
xchg
popa
xor
inc
arpl
stc
cmp
cmp
lds
test
xor
imul
test
inc
mov
or
stos
adc
jns
fidivl
mull
lods
cmpsb
mov
fstl
pusha
mov
mov
push
insl
inc
push
mov
pop
or
rorl
ret
mov
ret
imul
scas
test
aaa
push
push
stc
in
ja
and
push
pop
das
jno
repnz
in
push
int3
pushf
jmp
push
mov
shlb
out
inc
push
jg
cmc
outsb
sbb
sbb
cli
aas
sahf
in
cld
xor
shrl
imul
es
mov
push
and
mov
xchg
adc
inc
mov
iret
cld
popf
inc
cmp
in
xchg
adc
scas
insl
lahf
jo
pop
inc
shll
push
stos
mov
mull
pop
cmp
mov
add
mov
repnz
xchg
dec
and
imul
inc
adc
sbb
insb
pop
jle
loop
in
call
and
xchg
outsb
mov
imulb
loopne
das
inc
jecxz
add
dec
in
enter
mov
out
jecxz
out
daa
or
insb
lret
sub
nop
adc
test
adc
std
stc
out
sbb
xchg
lds
push
insl
or
jge
pushf
js
lea
adc
in
int3
or
mov
js
and
fs
stos
dec
jns
iret
out
mov
sahf
add
cmp
shll
dec
cmp
bound
aas
inc
fldl
mov
sub
fcomip
mov
pop
leave
dec
cmp
xor
jg
adc
xchg
leave
test
sbb
pop
inc
add
adcb
lds
adc
shl
mov
mov
mov
mov
pop
cltd
or
xor
jmp
ss
xchg
outsb
jge
pushf
repz
sub
push
cmpsb
cltd
or
mov
sbb
cmpsb
mov
dec
repnz
mov
mov
adc
es
inc
xchg
sub
mov
xchg
dec
sub
mov
hlt
adc
or
pop
loope
or
lea
adc
and
sbb
xor
fwait
xchg
mov
imul
jae
add
sub
and
out
xchg
cmp
mov
pop
push
push
sbb
mov
cmpsl
or
iret
xchg
jae
mov
cmp
sbb
les
or
sub
xor
xor
jmp
cmp
xchg
rcrb
nop
push
lea
jmp
and
mov
mov
call
inc
cmpsb
cmc
xchg
enter
cmpsb
push
mov
adc
clc
inc
sbb
fwait
mov
cs
xchg
push
mov
and
pop
mov
shll
fwait
hlt
mov
pushw
ja
lods
dec
mov
ss
pusha
shr
ss
add
cmp
adc
mov
mov
out
push
adc
in
xor
hlt
add
lock
mov
incb
push
xchg
xlat
enter
imul
mov
pop
xor
sub
adc
adc
rcrl
cwtl
and
pushf
mov
repnz
cmc
jno
repz
jbe
sub
mov
repnz
adc
jg
lret
fwait
mov
repnz
and
sub
mov
dec
rcll
in
push
xorb
pop
mov
inc
jbe
mov
push
hlt
int3
mov
sub
mov
sub
mov
dec
jge
leave
xchg
call
loop
cmpsb
les
pop
xchg
pop
or
and
mov
push
inc
dec
imul
push
or
aaa
jecxz
sub
xor
add
scas
inc
and
shlb
icebp
loope
or
ja
adc
jl
bound
mov
adc
inc
or
fwait
into
out
rcl
ret
cs
mov
cmpsb
ret
call
cmc
out
jmp
adc
xchg
cmp
imul
std
stos
dec
jl
sbb
pop
pop
and
out
mov
dec
shll
push
gs
inc
movsl
cmp
lret
stc
adc
xchg
xor
or
rorb
mov
bound
dec
adc
sbb
int3
faddl
mov
push
cltd
mov
xor
dec
stos
sub
clc
xor
rcr
lret
push
dec
aam
cmp
js
fisubs
add
subb
add
sub
iret
sub
ret
cmp
testl
jge
std
decl
leave
inc
mov
dec
mov
or
adc
dec
xor
addr16
rol
hlt
mov
not
mov
rcrb
into
iret
int
push
inc
aaa
push
sub
mov
mov
mov
xchg
sub
fdivrl
add
in
push
out
incb
test
jns
sub
inc
xor
fbstp
sbb
jb
cmp
andb
push
push
scas
cmpsl
sti
cs
sahf
dec
loop
fs
xchg
jno
movsl
notl
and
and
jle
or
mov
mov
dec
add
mov
mov
outsb
and
clc
xor
shl
lods
adc
addr16
and
mov
fs
stos
xchg
lds
mov
mov
icebp
and
adc
sub
jecxz
mov
das
int
std
add
in
ret
push
shll
test
sbb
push
cld
pusha
sub
je
stos
inc
inc
outsb
or
mov
scas
je
fisubrl
add
cmp
mov
sub
iret
test
mov
mov
rcl
test
sub
dec
pop
arpl
sbb
lcall
inc
pop
jae
nop
fwait
lcall
xor
or
stos
fst
mov
das
testb
cmpsl
out
push
aaa
out
loopne
add
mov
sub
jge
frstor
hlt
addb
pop
add
rcll
sbb
add
fwait
adcb
cmp
fsubs
and
jg
push
sbb
and
iret
jge
fisttpll
xchg
enter
mov
and
jns
xor
movl
jl
in
fcmovb
mov
rorl
ja
cmpsl
pop
sub
dec
movsb
or
lods
shrl
jnp
int3
jbe
out
leave
xchg
add
xchg
jg
shl
cmp
orl
push
pop
or
cmp
mov
cmpsb
fdivrs
in
lea
std
jg
add
andl
mov
mov
mov
push
mov
mov
mov
loop
mov
scas
xchg
lcall
ret
insb
cld
ret
lret
and
jecxz
cmp
roll
cmpsl
mov
movsl
pop
pop
pop
clc
sbb
lahf
insb
push
je
popf
mov
adc
stc
dec
sub
popf
push
push
insb
in
jns
outsl
sub
aad
push
rdtsc
xchg
call
cmp
shl
adc
mov
pop
sbb
hlt
pop
jmp
inc
iret
dec
jmp
rcrb
xor
ljmp
hlt
mov
sbb
daa
and
ficoml
out
dec
ja
enter
ds
arpl
sub
fsubs
cmp
gs
push
dec
leave
pop
xchg
push
push
cli
int
test
push
arpl
xor
bound
insl
lods
push
mov
jb
push
dec
sbb
or
ror
or
mov
pop
pop
scas
xchg
inc
cmpsb
cli
ja
pop
cmp
scas
movsb
cld
jg
nop
sbb
and
push
mov
pop
jl
add
in
in
jg
outsl
test
ds
mov
lcallw
inc
mov
push
inc
mov
or
push
push
cmovg
sbb
mov
mov
into
fsubl
fisttpll
lcall
and
movsl
mov
nop
movsl
in
daa
popf
imul
mov
pop
bound
sub
cs
pushf
cmp
push
push
add
pop
sbb
jecxz
insb
pushf
aaa
sbb
repz
ret
jae
adc
and
fnstcw
push
xchg
insl
push
or
enter
fsub
lock
addr16
mov
shrl
in
rep
push
bound
push
mov
mov
ret
int3
mov
arpl
or
out
push
loope
insl
push
or
lock
iret
cmpsb
pop
dec
jbe
paddw
add
je
lahf
sbb
or
mov
mov
mov
cld
ljmp
clc
push
mov
push
xchg
fsubp
or
sbb
mov
mov
insb
data16
pop
aam
lock
jno
movsl
mov
cmpsb
in
scas
pop
lahf
mov
mov
pop
cltd
cmp
ja
pop
das
arpl
fidivrl
mov
or
push
push
mov
pop
pop
jns
cmpsl
adc
mov
sub
insb
enter
cmp
ds
fs
push
aas
cs
sub
mov
sbb
cli
mov
addr16
out
pop
pop
jecxz
push
push
cli
cmp
outsl
add
cmp
repz
push
std
or
faddl
cld
and
jl
pushf
negb
adc
cwtl
inc
mov
popf
push
jae
int3
sub
sbb
scas
popf
push
push
hlt
rclb
test
rcl
rorb
pop
xor
fucomip
jbe
jbe
in
jmp
jmp
cli
divl
clc
and
push
xchg
xor
mov
mov
in
inc
ss
ficomps
in
sub
cmp
mov
dec
cmc
in
xor
cmp
sbb
js
out
mov
sbb
cld
jnp
cld
or
cmp
jl
inc
adcb
inc
jp
and
push
push
inc
or
clc
jmp
inc
int3
add
popa
shlb
js
cmp
cmc
icebp
out
or
adc
shrb
adcb
fcoml
adc
xor
cmpsl
ljmp
dec
adc
sbb
int3
dec
pop
leave
push
jg
pop
into
dec
ret
add
mov
gs
jmp
push
cld
das
jbe
xchg
setno
popf
mov
repnz
push
imul
std
add
sarb
out
imul
stos
rorl
shl
or
subl
xlat
inc
mov
fnstenv
mov
inc
fnsave
imul
xchg
stos
pop
loopne
mov
add
hlt
call
and
pusha
ja
loope
or
out
inc
lods
jbe
pop
loopne
dec
je
jecxz
insl
xchg
out
inc
pop
add
push
test
sub
mull
popf
or
mov
outsb
inc
movsl
popf
mov
cmp
fwait
cmp
or
add
in
dec
fsts
cli
jbe
inc
clc
push
outsb
loope
mov
rclb
xor
mov
xchg
push
mov
imul
add
dec
je
sub
sbb
push
adc
cmp
sub
cltd
adc
xor
stos
daa
mov
pop
add
add
rcll
loopne
mov
mov
fisttpll
je
das
sbbb
dec
adc
inc
adc
xor
test
pop
cmp
ljmp
jp
repz
and
add
and
mov
jmp
jno
fistpll
adc
ret
adc
push
jb
aas
loopne
xchg
cs
fistl
div
movsb
test
insl
cmc
sub
jb
jnp
lret
test
hlt
out
jno
clc
dec
jb
hlt
mov
fs
mov
jno
out
and
fdivr
js
test
jle
jne
cli
jge
addr16
pusha
js
popf
xchg
cmp
xchg
aam
mull
adc
jecxz
test
mov
push
mov
cmpsb
das
rcr
aaa
loopne
dec
das
and
aam
fsubs
and
mov
aas
scas
sbb
mov
xchg
or
sbbb
ficoml
dec
sub
fistps
add
outsl
sbb
xchg
jmp
loopne
xor
inc
dec
lea
aaa
cld
sub
in
mov
dec
cmp
mov
add
stos
jecxz
dec
push
pop
push
bound
sti
dec
call
adc
aam
sub
mov
xchg
mov
clc
out
cli
int
lret
push
adc
dec
outsb
mov
inc
xchg
cmp
mov
add
sub
shlb
orl
les
xchg
imul
rolb
mov
sbb
inc
bound
insl
push
jmp
or
hlt
pop
sub
inc
gs
push
in
lods
mov
sbb
add
aam
lods
lret
push
notl
je
int
push
or
lahf
hlt
mov
test
cli
mov
clc
stos
push
xor
movsb
lcall
iret
sub
mov
add
pop
jg
out
xor
mov
pop
and
mov
cmp
dec
frstor
dec
add
call
xchg
lret
data16
inc
imul
es
mov
out
xor
pop
repz
setb
mov
aas
repnz
in
mov
sbbb
call
insl
inc
psllq
stc
fidivs
addr16
push
arpl
cmp
es
test
push
jp
add
pop
pop
inc
sti
jnp
mov
mov
push
adc
sub
mov
fs
add
test
push
jbe
test
in
outsl
push
and
adc
pop
xchg
inc
xchg
rol
cmc
cmp
pushf
jno
mov
xor
mov
out
ss
dec
jmp
icebp
aam
sarb
imul
push
out
mov
roll
clc
cwtl
imulb
xchg
xor
pushf
fdivrl
in
xchg
inc
into
ret
mov
test
flds
cltd
movsl
popa
ja
xchg
pop
loope
push
and
cmpsl
stos
push
into
into
inc
push
in
test
pop
push
or
cli
imul
fisubs
repz
mov
cmc
adc
mov
test
adc
dec
mov
dec
mov
jecxz
or
add
addl
outsb
cmp
pop
jl
stos
es
ljmp
xchg
das
ljmp
push
lds
mov
out
mov
and
xor
jle
xlat
dec
int
xor
xchg
stos
push
sub
and
rcll
test
pop
testb
jge
xor
add
aaa
ljmp
pop
push
mov
sbb
inc
shll
add
rcrl
cmc
jg
lods
scas
cmp
adc
mov
adc
mov
or
sahf
push
dec
sub
xor
stos
hlt
pop
mov
ljmp
jno
fcmovnu
stos
jae
mov
shrb
or
inc
inc
testb
push
xor
je
cltd
cmp
push
sub
mov
test
aaa
mov
dec
push
sbbb
imul
xchg
movsb
or
fcmovnbe
dec
and
and
mov
testl
aad
cmp
push
push
jp
rcl
adc
cltd
dec
fwait
mov
orb
xchg
nop
adc
hlt
cmp
pop
sub
push
fdiv
mov
test
pop
das
pop
js
pop
push
pop
lods
jbe
in
push
iret
cltd
fs
xorb
shl
lret
dec
lock
dec
pop
and
mov
movsl
sahf
lods
mov
inc
sbb
dec
push
cli
lods
out
mov
fidivl
inc
shr
lds
mov
and
insb
clc
sub
sbb
cmp
push
lret
pop
inc
es
idivb
inc
lcall
lods
adc
cmp
testb
popa
mov
in
inc
or
jae
sbb
repnz
pushf
mov
shrl
stos
das
jb
mov
adc
fstpl
out
rol
or
movsb
mov
cli
jb
jb
mov
add
sbb
loopne
aaa
jmp
push
dec
mov
js
xor
push
je
int3
push
mov
adc
imul
or
jae
xor
mov
mov
push
mov
or
jge
push
movsb
in
fwait
xchg
push
ss
insl
sub
stos
leave
icebp
in
dec
fidivrl
push
mov
ffreep
push
and
sub
enter
scas
mulb
and
mov
lea
dec
add
pop
inc
dec
ljmp
xchg
add
hlt
icebp
stos
outsl
inc
xor
inc
pop
test
jno
movsb
push
jb
mov
mov
lret
popf
popf
and
push
test
in
inc
imul
inc
test
lds
sub
in
or
icebp
insl
pop
insl
xor
inc
por
pop
stos
or
pop
jae
mov
pop
push
lahf
mov
insb
push
pop
sub
mov
in
adc
aad
or
cltd
loopne
in
aaa
cmpsl
movsb
mov
popf
add
sbb
sub
mov
pop
leave
das
jno
mov
jbe
pop
fsts
cmp
aaa
stos
rolb
pushaw
insb
outsl
mov
mov
ja
out
push
push
fcom
int3
gs
push
dec
fisubs
jge
repnz
inc
stc
adc
push
cmp
mov
jb
jb
dec
and
int3
iret
jmp
shll
sub
and
ljmp
and
cmpsb
imul
dec
pop
movsb
adc
stos
sub
adc
push
test
sti
lods
sbb
dec
popf
call
popf
in
lods
dec
insb
aam
mov
je
loope
jns
aad
mov
or
notb
lock
pop
xchg
stos
jmp
imul
pop
hlt
les
pop
ds
sbb
loopne
aaa
adc
adc
mov
cli
mov
cmp
dec
xor
push
dec
lods
enter
lods
sbb
adc
gs
popf
xlat
fistps
int
inc
xor
repz
sti
and
fisttpl
inc
pop
int3
rclb
out
jne
and
outsl
inc
xor
subl
pushf
outsb
push
dec
inc
imul
push
push
jmp
sub
cmpsl
dec
cltd
mov
aaa
aaa
cli
decl
in
push
int3
in
ret
out
and
rol
cmpsl
mov
pop
stc
or
jb
and
ficoms
in
pop
sahf
test
filds
aad
iret
jns
stos
sbb
xchg
mov
xchg
xor
dec
imul
je
cltd
or
leave
and
sbbl
shll
sub
and
movb
stc
adc
xchg
adc
ja
inc
testl
xchg
adc
cmpsb
loopne
and
mov
aam
sti
sbb
in
data16
sbb
cmc
pop
lds
dec
popa
test
jp
sahf
push
xchg
mov
xor
scas
add
stc
jle,pn
pop
outsl
stos
sub
ds
mov
adc
test
movsb
movsl
pop
mov
loop
adc
jbe
pop
mov
lods
lret
pop
mov
jp,pn
lods
int3
add
cmp
xor
cmp
sbb
pop
ja
clc
ret
adc
xchg
cwtl
adc
pop
inc
inc
popa
xchg
popa
jmp
leave
shrl
jmp
mov
cli
xchg
insl
subl
enter
xchg
iret
fbld
movsb
shrl
test
lock
sbb
add
scas
sub
clc
rclb
xorb
pushf
js
rcl
out
ror
mov
push
loope
push
icebp
or
shll
jb
jl
inc
in
push
mov
insl
pop
push
and
and
cwtl
pop
cmp
std
stc
dec
loope
cmpl
neg
dec
cmc
pop
push
mov
mov
negl
and
or
clc
cmc
mov
adc
cli
orl
mov
and
hlt
dec
mov
mov
mov
imul
mov
sahf
aad
add
mov
stos
mov
mov
out
js
inc
add
add
mov
aad
or
fcomi
adc
dec
inc
negb
xorb
and
push
sarl
daa
add
imul
pop
leave
pop
scas
loope
push
push
rorl
jle
dec
pop
fs
int
mov
xor
xchg
hlt
mov
mov
jbe
sbb
call
lret
mov
insb
mov
in
xor
cmp
imul
sbb
pop
cmp
sbb
and
mov
fimull
xchg
dec
or
mov
xchg
dec
xor
cmp
pop
lds
sub
fidivs
cmpsb
in
push
hlt
pop
add
mov
and
rclb
insb
lcall
push
jmp
arpl
push
xor
cld
or
dec
cltd
pop
jnp
ss
inc
mov
test
xchg
int
pop
mov
mov
dec
mov
sub
mov
jnp
aas
loop
cmp
repnz
popf
and
add
inc
ja
aam
xlat
jae
jg
xor
dec
aam
cltd
xchg
and
fwait
pushl
cmpsb
lret
xor
xor
out
or
ja
push
xchg
and
push
xor
jno
mov
cld
jmp
stc
inc
inc
rolb
push
add
mov
ds
mov
inc
and
sahf
rep
mov
xchg
add
sbb
mov
aam
mov
inc
and
insb
icebp
js
loope
test
ds
push
sbb
js
adc
int3
lods
jns
fcmovbe
jb
xchg
or
dec
push
sbb
pop
enter
dec
cmpsb
sbb
mov
popa
jne
and
movsl
test
fs
jns
and
popf
push
repz
dec
icebp
leave
mov
jmp
repz
pop
xchg
xor
cmp
fwait
punpckhbw
andb
fimull
push
adc
pop
xchg
imul
xor
js
scas
xchg
clc
scas
aas
bound
push
fisubl
mov
pop
inc
mov
fsubl
in
fmuls
push
lret
inc
adc
scas
pop
xchg
sbb
lds
pop
xchg
adc
mov
xchg
mov
inc
inc
mov
dec
mov
lret
mov
scas
mov
loop
out
sbb
xor
les
les
cmp
mov
jl
or
pop
hlt
add
add
in
add
dec
loop
insb
jmp
add
call
pop
jns
enter
popa
jmp
xor
iret
sub
addr16
sarl
xchg
inc
mov
sahf
or
inc
inc
pop
pop
sti
xchg
addr16
xor
mov
adc
jne
arpl
cmp
pushf
dec
sbbb
inc
dec
rorb
hlt
mov
fs
xchg
adc
xor
inc
sbbl
mov
jne
not
pop
gs
mov
push
shlb
xchg
sub
ret
mov
xor
out
cmpsb
movsl
sbb
jns
add
add
push
mov
jno
inc
repnz
xchg
in
jns
dec
xchg
jle
sbb
adc
xor
and
mov
insl
mov
jns
bound
push
arpl
lret
fwait
xchg
enter
xchg
iret
mov
dec
lcall
ret
xchg
fdivl
jne
pop
clc
loopne
adc
mov
cmp
cwtl
inc
pop
repnz
sub
or
cmpsb
add
xchg
sar
add
lds
cli
push
sar
ret
shlb
fadd
shl
div
xchg
sub
cmc
das
mov
adc
xchg
jnp
daa
mov
mov
daa
jns
push
cltd
shl
pop
out
repnz
sub
test
and
sub
jmp
mov
adc
sbb
cmp
rolb
mov
mov
je
or
bound
mov
scas
daa
dec
sbb
push
imul
mov
sub
push
out
cmovb
fwait
nop
push
push
in
mov
xchg
jl
aad
mov
mov
jbe
mov
mov
pop
int3
sub
pop
data16
shlb
push
inc
clc
sbb
push
pslld
cmp
sbb
addr16
sbb
call
lods
fidivl
push
mov
cmp
out
mov
sbb
inc
adc
mov
jp
mov
fadd
add
lcall
cmp
sub
fucomi
popf
stc
xchg
sub
ja
rorb
pop
xor
dec
aam
js
ss
jg
int
jnp
leave
fwait
movsb
shll
lea
push
pop
push
mov
cmp
inc
mov
or
in
inc
dec
mov
test
and
sbb
stos
lahf
pop
pop
cld
inc
subl
xor
mov
sub
or
mov
das
fs
mov
shll
rcrl
adc
addr16
mov
ret
sbbb
into
outsb
mov
adc
xchg
movsb
adcl
dec
je
clc
fimuls
pop
push
dec
push
mov
fnstcw
xchg
push
jnp
or
rorl
ds
sbbl
mov
pop
dec
outsl
arpl
rorl
mov
inc
sub
inc
or
sahf
sub
aam
and
xchg
mov
inc
js
mov
shrb
rorl
add
pop
popa
push
outsb
mov
pop
push
test
test
xlat
scas
cmpsb
sbb
lock
int
repnz
sahf
cmpsl
adc
sbb
xchg
lret
loop
mov
shl
imull
xor
pop
add
mov
push
icebp
push
mov
cltd
jge
xor
lds
cli
jae
mov
mov
out
nop
test
lret
shrl
dec
xor
testl
clc
add
push
pop
jl
lcall
popf
jno
rolb
xor
or
mov
lods
jecxz
pop
mov
mov
mov
push
inc
mov
int
enter
enter
dec
ret
iret
insl
daa
pop
std
out
jae
push
xchg
insl
sub
mov
repnz
cwtl
sub
in
fnstsw
sbb
loop
mov
sub
mov
jnp
add
xor
mov
pop
cmp
add
out
pop
xor
push
das
jl
push
mov
in
sti
push
outsl
push
outsb
test
xchg
mov
and
lods
and
sarl
pop
add
sti
jo
inc
push
loopne
fs
add
mov
add
sbb
pop
mov
aad
cld
jae
ds
int3
push
or
sub
das
mov
jp
mov
sbb
addl
imul
adc
mov
push
sbb
sbb
pushf
push
jmp
or
mov
push
fdivs
ret
mov
or
mov
roll
sub
je
cs
inc
andb
out
cltd
mov
sub
xlat
jg
adc
add
bound
test
out
in
test
dec
pop
push
add
cmpsl
jmp
and
or
aaa
filds
ds
mov
xchg
inc
cmpsl
add
dec
mov
popa
in
xor
fucomip
dec
loope
inc
xor
loopne
stc
mov
mov
mov
rcrb
mov
jns
lcall
repnz
popf
stos
gs
in
cs
shrb
idivb
inc
ds
cwtl
xlat
pop
out
push
jecxz
push
and
pop
mov
lret
data16
sub
mov
repnz
rcrl
or
push
pushf
movsl
out
mov
adcl
xchg
xor
xchg
push
sbb
cs
testb
lods
jbe
mov
stc
in
xchg
mov
pop
mov
sub
jns
push
or
adc
popa
sbbb
push
or
subb
icebp
push
movb
add
add
int3
ret
aad
push
cwtl
rorl
pushf
outsb
mov
and
scas
xchg
jmp
jmp
orps
hlt
ret
cltd
inc
in
jb
mov
loope
loopne
das
mov
adc
add
vphaddbq
xor
xchg
ljmp
mov
dec
divb
xchg
pusha
iret
adc
push
sbb
xor
cmp
ret
inc
jl
add
mov
into
inc
cmp
push
gs
dec
mov
das
cmpb
lcall
sti
cmp
loope
loop
push
fldenv
sub
les
adc
mov
movsb
cwtl
stos
and
fbld
lret
aam
jne
or
je
cs
lcall
adcl
into
lea
and
adc
call
push
insl
mov
mov
int3
push
repnz
jmp
add
out
pop
popf
movsl
push
popa
test
cmp
arpl
mov
out
xchg
or
in
push
sbb
push
test
inc
loope
loopne
das
js
pop
in
adc
push
out
adc
jecxz
or
jecxz
inc
mov
push
pop
cs
or
cs
jbe
push
push
push
mov
jg
jg
dec
mov
lahf
inc
arpl
push
cwtl
lock
inc
or
sti
or
stc
jae
mov
test
aad
js
adc
or
pop
lret
imul
test
pusha
sbb
add
xchg
mov
dec
imul
xchg
jle
dec
adc
dec
fidivl
or
or
pusha
out
es
adc
adc
inc
aaa
fwait
cld
int
mov
jno
dec
jmp
push
arpl
dec
adc
fstp
movsb
fldenv
fisubrs
xchg
inc
mov
daa
jno
mov
xchg
gs
lret
ret
cmp
adc
notl
hlt
push
mov
sbb
mov
xor
gs
testl
cli
mov
or
or
jge
int
mov
hlt
xchg
and
ljmp
hlt
dec
test
in
mov
arpl
cwtl
je
addr16
pop
fs
fidivl
addl
in
pop
rcrl
xchg
push
lret
lahf
lcall
nop
sub
stos
mov
add
dec
add
inc
fadd
inc
push
out
xor
pop
inc
rcrl
fwait
repnz
shll
inc
dec
imul
mov
jae
xor
jmp
adc
pop
shlb
lods
push
mov
lea
sbb
push
in
movlps
sbb
outsl
in
jle
mov
aam
mov
xor
neg
addr16
aam
fstps
in
es
js
mov
adc
dec
int
jge
pop
pop
sub
aas
lret
jnp
sbb
bound
stos
movsb
mov
mov
and
scas
cmp
inc
pusha
es
aas
fsubs
stc
in
ficompl
mov
fsubp
sti
ds
lods
lods
fiadds
cmc
cmpsl
xchg
pop
push
aas
gs
jbe
jae
loop
inc
add
xchg
lock
mov
in
inc
wrmsr
mov
pop
aas
arpl
dec
insl
cmp
pop
xchg
lcall
test
xor
push
lret
test
push
pop
je
inc
mov
xlat
push
in
imul
mov
inc
movsb
sub
jl
fdivrs
scas
cmp
xlat
jbe
cltd
mov
jae
lods
aam
movsl
xor
mov
iret
pop
stc
mov
mov
cmc
inc
sahf
xchg
pop
out
and
shll
movsb
dec
mov
in
cmp
inc
fisubrs
rorb
stos
mov
or
xchg
push
shll
push
pushf
stos
std
dec
sbb
loop
jnp
dec
adc
push
xor
cmp
out
or
jle
stos
xor
cmp
pop
jae
xor
xor
push
fcoml
adc
inc
inc
fwait
jae
xchg
xchg
pop
lret
cmc
jge
inc
cmp
dec
dec
movsb
mov
out
aam
cmp
dec
and
xor
jno
stc
rcr
pop
sbb
push
xchg
push
sbb
call
xor
xor
std
xchg
mov
cltd
loope
jle
loop
mov
out
jge
xorb
out
std
add
lcall
mov
inc
jbe
icebp
adc
xchg
cld
mov
xchg
cmpsb
cmp
sub
ss
push
cmpsl
icebp
subb
int
loope
mov
push
popa
js
or
movsl
dec
and
cmp
hlt
sahf
dec
and
push
mov
ret
imul
stos
mov
dec
popf
das
std
rclb
aas
jge
pop
sahf
add
js
xlat
test
jo
add
xchg
xchg
push
push
cmp
cmp
mov
int3
mov
mov
adc
mov
inc
stos
jns
enter
das
test
testl
jo
hlt
enter
fildl
ficomps
fstpl
push
imul
dec
sub
cmp
icebp
mov
ljmp
daa
lret
loop
ficoml
add
mov
loop
add
push
imul
xchg
shll
mov
jnp
daa
xor
or
adc
in
out
pop
mov
cwtl
and
in
adc
or
inc
push
add
popf
mov
pop
dec
xor
mov
and
cmc
aam
jecxz
int3
lcall
lret
ljmp
rcll
jo
mov
fimuls
dec
movsl
test
imul
imul
test
pop
sub
cli
pop
push
xor
outsl
jnp
lock
xchg
aam
add
out
push
xlat
scas
jp
cwtl
pop
fidivl
pop
push
leave
cmc
cmp
jns
push
icebp
dec
test
insl
js
into
repnz
lods
xor
xchg
sbb
dec
xor
or
sbb
and
jnp
add
inc
int3
jne
aaa
std
popf
mov
into
xchg
sahf
mov
fwait
sti
pop
mov
mov
sub
in
dec
mov
dec
jmp
push
std
jl
push
cmp
jne
push
sbb
lret
sbb
stos
cmp
jmp
mov
jp
cmc
adc
nop
std
icebp
icebp
pusha
out
decb
adc
or
pop
cltd
pop
out
jb
sbb
mov
sbb
adc
jl
arpl
repnz
test
and
push
push
js
in
popf
and
xchg
jg
jl
aam
pop
jmp
jo
or
adc
push
pusha
cmp
push
dec
pop
out
sub
add
enter
add
add
sub
insb
cs
mov
jb
cmpsl
xchg
add
adc
mov
adcl
data16
rorb
mov
cmp
jl
popf
sub
out
aam
add
dec
adc
pushf
dec
or
mov
push
stos
mov
inc
test
xor
imul
sub
lds
jno
in
lea
sbb
xor
fildl
ret
aad
and
insl
push
repz
sub
or
adc
xchg
pop
xor
sbb
sti
out
decb
mov
insl
push
or
test
lds
mov
xchg
pop
and
adc
mov
sbb
or
leave
mov
cmp
xchg
jb
in
pop
repnz
in
popf
and
dec
les
dec
xlat
pushf
xchg
and
sub
test
lret
sub
lea
mov
pop
popa
arpl
pop
lret
cs
or
mov
xchg
roll
mov
or
pop
xchg
mov
faddp
in
int3
iret
push
push
mov
push
sub
pop
lret
aas
xchg
push
adc
and
push
add
int
sarb
cltd
test
add
std
fwait
divps
add
push
or
fwait
repz
sbb
je
push
mov
push
inc
push
in
fdivs
add
rcll
xchg
or
inc
test
jno
cmpsb
push
or
sti
cmp
inc
sbb
xor
add
dec
inc
in
or
iret
adc
or
push
out
nop
mov
push
rclb
mov
imul
jg
jmp
rcrl
inc
aad
sbb
or
fistps
subb
xchg
sub
loope
cwtl
xor
nop
mov
stos
pusha
jp
enter
pusha
or
test
ds
repnz
jl
and
ljmp
mov
fucomip
aam
lds
sahf
xchg
push
rcrb
xor
xor
sbb
or
insl
repnz
pop
outsb
lds
rcrl
lock
outsl
push
clc
inc
outsw
ds
in
cmp
test
hlt
xor
out
sti
stc
mov
mov
popf
and
xor
pop
add
roll
ss
fs
pop
insl
add
cmp
jmp
repz
mov
bound
sub
cmpsl
shrb
repnz
mov
clc
xchg
out
dec
mov
shlb
daa
mov
dec
fisubrl
sbb
ss
sbb
push
data16
push
je
fwait
aam
lret
js,pn
adc
decl
pop
and
mov
test
mov
icebp
mov
pop
int
into
out
jg
int
cmpsl
or
or
cwtl
xor
push
dec
clc
and
jae
fwait
dec
fisttpll
push
pop
test
pop
xlat
mov
lret
nop
rclb
das
call
fsqrt
clc
int3
push
test
add
bound
fwait
test
pop
ss
sarl
and
mul
adc
jne
xchg
mov
in
add
sbb
xchg
push
subb
fdivs
outsl
cmp
lea
testb
mov
xor
sub
sub
mov
popf
push
iret
mov
out
lahf
or
xchg
stos
sarl
mov
loopne
mov
insl
lret
inc
mov
cli
ficoml
xor
mov
mov
iret
cmp
or
xor
cmpl
mov
mov
into
mov
sysexit
sbbl
push
sub
leave
leave
scas
mov
pop
sarl
pop
bound
mov
adc
lods
add
imul
lret
insb
mov
or
and
xorb
sbb
movsl
jns
loope
adc
repz
dec
mov
test
mov
das
jns
mov
stc
sub
lods
push
sbb
lods
daa
xchg
test
adc
cmp
and
iret
add
pusha
shll
fnstenv
xorb
xchg
mov
xor
sbbb
cmpsl
push
loop
pandn
sub
in
push
sub
push
xchg
pop
add
sti
or
pop
repnz
jecxz
and
sahf
or
xlat
sbb
xor
push
jnp
in
iret
movsl
outsb
dec
or
scas
int3
xchg
pushf
sub
sub
in
sbb
aad
mov
sub
stos
sbb
aam
ss
xor
addr16
sbb
leave
sub
ret
jg
pusha
aam
fimuls
push
fs
adc
sub
mov
jne
addr16
clc
loop
push
fnop
adc
sbb
loopne
dec
sub
mov
inc
xchg
lods
jg
cmp
popa
jbe
outsl
jb
xor
add
jp
dec
sbb
mov
pop
mov
cmpsl
jns
popf
in
push
ss
ss
add
cmp
dec
cmp
dec
scas
jae
sub
mov
cltd
sbb
add
or
enter
xor
jle
dec
jb
daa
jnp
pop
test
dec
cmpsl
rcll
or
test
mov
jge
inc
xchg
pop
iret
hlt
sub
xchg
movzbl
adc
leave
dec
mov
jo,pn
jo
addr16
iret
mov
mov
jle
jecxz
push
xchg
sub
xor
iret
cs
imul
js
sti
dec
adc
movsb
xor
push
add
arpl
cmp
inc
or
les
mov
adc
into
or
pop
ja
sbb
js
cld
mov
scas
lds
mov
mov
imul
inc
jnp
adc
fs
fisubl
pushf
pop
sub
jp
push
mov
pushf
aam
pop
sub
inc
sarb
repz
push
cltd
mov
and
pop
lret
in
adc
repnz
test
mov
sub
stos
es
imul
enter
pop
push
roll
out
xor
sbb
inc
cmp
mov
sbbb
pop
mov
into
inc
iret
push
stc
loop
push
cld
xchg
mov
push
in
sub
fucomp
test
into
xlat
mov
inc
xchg
enter
loop
inc
jmp
in
daa
rol
xchg
loope
iret
and
inc
sbb
or
insb
mov
dec
xchg
mov
pusha
jge
fildll
pop
jecxz
call
lahf
negl
sbb
jle
ret
inc
cmpsb
js
cmc
sahf
clc
rolb
scas
fs
adc
enter
pop
push
addl
xor
inc
lock
js
loope
add
lcall
mov
adc
xchg
and
subb
insb
push
mov
sbb
das
xor
shrd
cmp
jno
repnz
out
jge
and
insb
stos
in
in
xlat
mov
push
xchg
popa
inc
pop
pop
popf
in
inc
cmc
adc
mov
fisubrl
sbb
enter
xlat
jge
xchg
sbb
cmpsb
movsb
dec
push
push
inc
shl
push
jnp
ljmp
pop
jl
aas
mov
cmpsb
mov
push
jae
flds
mov
imul
adc
xor
arpl
roll
lahf
lcall
jecxz
aas
cld
jp
mov
mov
js
cltd
ljmp
add
or
fucomip
xchg
icebp
mov
leave
dec
callw
out
inc
je
nop
sub
stos
sub
push
add
pop
pop
or
mov
das
pop
xor
xchg
cltd
xchg
sahf
aas
test
rdmsr
pop
adc
jo
push
fs
mov
jmp
bound
lret
mov
inc
addr16
sbb
dec
pop
leave
or
mov
into
fldcw
sbb
pop
lea
mov
jae
mov
jle
pinsrw
sub
aad
fimuls
cmp
in
orl
xchg
jnp
add
cmp
popa
popf
or
pop
aad
mov
notl
cli
jo
mov
mov
fwait
adcl
jne
push
call
std
mov
inc
mov
jno
sar
mul
pop
inc
xor
imul
not
fidivrs
jmp
insl
stos
cltd
push
mov
fs
into
add
fidivs
xchg
jmp
int3
cmc
mov
ret
push
pop
and
add
cmp
push
sahf
std
jo
insl
cmc
mov
lcall
sbb
add
out
lea
or
pushf
lahf
inc
dec
or
pop
jp
sub
dec
mov
fimuls
divb
test
scas
ja
sbb
ljmp
adc
sahf
loop
cmc
cmp
mov
imul
mov
inc
adc
scas
inc
fnstsw
sub
arpl
fstpt
mov
pop
out
lods
cmc
jge
cs
sub
notb
dec
popa
add
dec
pushf
or
int3
mov
mov
mov
or
xor
ljmp
xor
jl
dec
cmp
imul
jbe
icebp
inc
movsb
mov
sbb
fwait
jb
shll
jnp
subb
or
shll
dec
adcl
gs
jge
jg
inc
sub
pop
jns
fcmovnbe
or
jo
sbb
es
jmp
or
and
or
sub
mov
mov
arpl
nop
pop
dec
ds
or
into
lds
fdivs
bound
clc
in
push
xor
stos
pop
insl
adc
das
sub
int
in
rolb
sbb
mov
cmp
outsl
lcall
scas
cli
pop
dec
into
enter
sbb
stc
add
mov
in
movsb
mov
xlat
data16
push
jbe
dec
jnp
cmp
dec
xchg
pop
nop
call
scas
mov
incl
dec
adc
nop
loopne
sbb
stos
jae
adc
aad
cmp
jge
dec
stc
pusha
sub
int3
fstps
insb
das
aad
pushf
cmp
outsl
push
cltd
fidivrl
test
clc
cli
jno
dec
jnp
js
push
jo
inc
inc
fnstenv
add
adc
in
push
pop
ljmp
cli
pop
pop
into
dec
test
jle
push
pop
not
bound
ret
lret
pop
lock
insl
cmp
sub
pop
shl
test
add
push
js
xor
push
stc
das
test
popf
inc
push
fstpl
cs
sti
pop
cmp
mov
repnz
cmp
mov
push
clc
pop
jns
pushf
ret
dec
cmpsl
addr16
mov
mov
jae
xchg
movsb
cltd
and
lods
icebp
mov
sub
das
mov
pop
xor
add
push
int
iret
and
xor
shlb
push
cmp
mov
mov
cmp
push
sub
stc
mov
add
adc
add
into
ret
in
fisttpll
adc
push
icebp
test
fildll
movb
into
test
arpl
jle
movsl
bound
fcom
pop
enter
and
fdivs
aad
mov
jl
test
cmp
dec
test
mov
cmp
xlat
dec
adc
pop
out
insl
test
jo
fisubs
insb
lods
jo
stos
icebp
rcll
dec
push
ret
not
fsubrp
pop
pushf
xor
mull
and
jg
and
cs
inc
sahf
ljmp
or
bound
mov
arpl
ss
add
rcr
jb
scas
lcall
xchg
mov
out
and
xor
cmpb
imul
aam
cmpl
imul
icebp
fstps
out
xlat
jmp
ret
fimuls
mov
ljmp
xchg
arpl
cwtl
aaa
das
jmp
fdivrl
xchg
inc
nop
ss
jns
xlat
out
xchg
pusha
cmp
mov
cmp
pop
mov
cmp
bound
lret
imul
or
xchg
cmp
pop
movsl
push
mov
xlat
call
loopne
mov
aad
hlt
addr16
adc
mov
out
cmpb
inc
outsb
push
lcall
push
sbb
inc
sub
adc
cmpsb
push
pop
in
mov
jbe
rclb
or
inc
shlb
fucomi
inc
cli
je
push
xchg
pop
xchg
int3
xchg
cmp
or
cmp
jne
testl
test
iret
cmp
sti
pop
call
jbe
sbb
idivb
push
hlt
push
jg
add
xor
clc
repz
mov
cwtl
mov
jo
in
mov
lds
add
lds
dec
and
fdivl
xlat
xlat
cmp
int3
inc
adcl
fimull
sub
cld
mov
push
mov
rol
pop
dec
out
aam
pop
sub
sub
aas
mov
ficomps
mov
std
pop
stc
xchg
push
scas
fcomps
adc
bound
hlt
cmpsb
mov
shlb
cmp
add
inc
jb
mov
pop
push
imul
xchg
mov
ja
sub
sub
jnp
mov
pop
adc
in
sub
aam
lock
and
mov
scas
shll
ret
xchg
bound
stos
jl
mov
adc
mov
lods
subb
dec
nop
push
cmpsl
xor
lret
ds
lret
out
sub
les
popf
mov
push
sub
in
cmpsl
sub
stc
loope
lcall
movsl
divb
mov
push
repz
fadd
xchg
andl
add
mov
xor
dec
dec
xor
outsb
icebp
push
push
xchg
cmpsl
mov
pusha
arpl
cmpsl
sbb
push
rcll
xchg
loopne
fsub
les
icebp
fistpl
cmp
push
xchg
fdivrp
enter
and
push
mov
bound
call
notb
and
test
shll
rolb
cltd
mov
adc
or
ret
fwait
sbb
decb
xchg
xor
notb
xchg
std
pop
out
cmp
jnp
jle
clc
sub
sbb
inc
stos
inc
lods
outsl
mov
iret
mov
mov
aas
mov
stos
insb
in
or
stos
jno
and
aas
pop
pop
imul
fcomip
mov
into
int
xchg
cmpsb
shlb
xor
lods
mov
test
lea
pop
mov
ds
mov
stos
mov
mov
lods
test
pop
push
or
xor
xorl
decb
cmp
mov
jne
dec
jno
aas
xchg
arpl
cld
fists
jo
leave
pop
push
adc
das
test
ds
jnp
lahf
adcl
push
xchg
xor
scas
rcrb
repz
fimuls
sub
fs
cmc
sub
lock
adc
data16
notl
mov
ss
dec
ljmp
and
sbb
cmp
mov
and
pop
adc
in
and
repz
dec
ret
scas
sub
ss
aas
repnz
dec
incl
dec
pop
dec
push
xchg
inc
cmp
int
dec
aam
cltd
int3
leave
mov
dec
adc
jmp
pop
add
pop
mov
push
test
xor
sbb
xchg
inc
mov
pop
jno
fimull
fldt
fidivl
xchg
push
cld
fildll
jns
mov
xor
jge
push
adc
and
sub
mov
mov
lret
xchg
stos
movsb
lds
inc
dec
imul
ja
into
fwait
inc
repz
mov
jle
imul
sbb
mov
inc
ds
cmp
inc
pop
movsl
into
mov
mov
fidivl
pop
pop
mov
sbb
mov
adc
mov
xchg
lods
loope
cmp
cmpsb
xchg
rcll
imul
add
xchg
sub
adc
mov
shrl
mov
xchg
mov
aam
int3
dec
push
mov
pop
xchg
cmp
sub
std
mov
andb
out
cmc
sti
cmpsl
jp
ja
cmp
pop
xchg
xchg
adc
sub
cwtl
mov
xchg
mov
dec
mov
or
adc
xor
outsl
pop
push
sti
js
add
push
addr16
ss
push
fcomps
push
daa
call
sbb
mov
sti
movsl
pop
xchg
xor
xchg
fldt
mov
dec
test
inc
scas
sub
sub
pop
call
sub
clc
mov
fldt
aam
push
imul
mov
dec
mov
inc
dec
pop
mov
cmc
dec
lods
inc
jns
insl
pop
into
ret
or
test
cwtl
sub
ljmp
insb
mov
add
jg
imul
add
mov
or
mov
negl
loop
cmp
sub
pop
mov
stos
in
lods
lods
lret
or
xchg
shl
ljmp
xor
adc
or
pop
inc
rolb
push
jg
cmc
leave
call
push
fistl
add
sti
cmp
dec
cmpl
adc
xchg
add
lahf
out
and
mov
loope
sub
and
fbld
fcomps
call
push
mov
jmp
es
aaa
mov
loopne
jle
xorb
and
ficomps
jae
push
dec
out
out
pusha
or
mov
pop
pusha
xchg
arpl
fisubl
pop
pop
pop
pusha
cs
push
mov
loop
pop
out
arpl
orb
insl
sbb
and
mov
and
int3
es
jno
ja
aam
dec
adc
cmp
popf
lret
or
mov
sub
add
mov
fcmovu
shrb
movsl
pop
dec
add
mov
into
mov
loope
pop
jge
cmc
and
out
cmpsl
rorb
pop
add
cs
int
xor
push
or
mov
imul
dec
add
aas
push
xchg
sarb
arpl
xchg
push
call
fmuls
jecxz
outsl
in
test
adc
lcall
and
mov
test
nop
jae
in
ja
push
mov
adc
ds
aam
mov
or
sub
xchg
jp
inc
jo
movsl
movsl
cmp
shlb
cmp
popf
lds
inc
cmp
xchg
add
adc
cmp
cmpsb
cmp
lcall
jno
push
push
xchg
ss
dec
pusha
gs
jmp
xchg
imul
mov
sarl
cmpb
repnz
cli
fcomps
lds
lret
fidivl
xor
adc
sti
inc
in
cltd
in
dec
lea
inc
out
sbb
xor
shr
mov
inc
add
loop
cmpl
push
cmpl
imul
adc
out
je
sub
push
inc
cld
lods
cmpsl
outsb
or
rorl
arpl
cld
data16
movsb
dec
and
xchg
inc
mov
pop
ljmp
data16
pop
iret
mov
mov
movsb
int3
cltd
mov
adc
stc
lods
ljmp
or
cltd
mov
fisttps
ds
pop
int3
stc
mov
push
outsb
ror
in
es
adc
add
clc
xchg
mov
jp
arpl
pop
inc
int3
xor
adc
pushf
add
pushf
lahf
lahf
push
lcall
movsl
lods
sahf
mov
mov
sbb
cltd
es
mov
adc
adc
pop
jmp
cmp
rcll
dec
xor
add
jb
dec
sahf
push
arpl
aam
sarb
xor
sahf
call
mov
outsl
mov
push
in
add
ja
aam
xor
popf
pop
mov
jbe
repz
cltd
clc
push
in
js
add
fistpl
fcompl
jo
or
mov
or
or
mov
xor
jecxz
repz
sti
pop
dec
insb
loope
dec
pop
loope
inc
aad
ljmp
sbb
mov
dec
mov
nop
repz
fcmovnu
inc
in
sub
insb
daa
add
stos
add
and
dec
mov
push
pop
test
andl
and
jne
rcl
jbe
add
pop
insb
mov
insl
test
ficomps
insl
cli
fwait
out
mov
mov
xor
movsb
aam
test
xchg
pop
call
inc
or
or
shll
sbb
push
sbb
insb
mov
sub
and
xor
or
adc
dec
rorl
push
sub
sbb
sbb
fcoml
push
add
ds
call
imul
pop
lahf
xor
test
pop
and
mov
hlt
and
xchg
shlb
add
call
mov
shlb
cli
rcrl
andb
inc
push
pinsrw
in
fisttps
js
jle
mov
pop
stos
adc
add
int
dec
rolb
stc
push
je
imul
jbe
in
sub
dec
sbb
cmp
les
jmp
shl
fcmovnb
add
dec
js
rclb
dec
aad
mov
jnp
push
mov
push
imul
jecxz
pop
loop
outsb
cmp
add
divl
movsb
clc
pop
inc
mov
sbb
out
or
pop
xchg
pushl
hlt
mov
imul
cmp
sbbl
xor
cld
and
jmp
test
pmulhuw
ljmp
sbb
cs
ja
dec
or
mov
js
dec
push
lea
std
ja
adc
adc
scas
dec
popa
mov
add
add
popf
xor
push
test
push
cltd
pop
and
outsl
stos
decl
lods
dec
int
jne
sub
ficoml
jae
pop
push
cltd
dec
xchg
lods
adc
sbb
int3
lods
dec
ss
fsubs
mov
mov
dec
pop
jmp
shrb
or
ds
xchg
test
lea
shld
test
faddl
and
pop
xor
jne
or
sbb
movsb
push
push
adc
or
or
sbb
nop
push
mov
lahf
mov
dec
jne
enter
push
xor
jb
mov
and
push
or
mov
testb
push
mov
adc
mov
shll
shr
fildl
bound
sub
pop
add
pop
dec
xchg
into
loopne
mov
mov
jae
push
mov
and
mov
push
stc
in
mov
sub
xchg
and
cmc
mov
out
inc
hlt
cmpsb
push
jne
cmp
int3
mov
jp
jae
ds
andl
mov
test
bound
cwtl
push
adc
stos
ss
pop
mov
xlat
inc
mov
aas
mov
and
mov
pop
cmp
push
into
enter
sbb
cli
jle
jmp
xchg
dec
jge
mov
push
out
je
adc
ds
fsubs
mov
xchg
js
sahf
add
jbe
inc
push
das
stos
out
mov
lea
shlb
adc
jno
sbb
jno
push
mov
dec
mov
ret
out
jo
cmp
cmc
lret
xchg
scas
aad
aam
and
pop
outsb
push
inc
loopne
js
int
cmp
push
jl
jp
test
adc
add
jp
xor
mov
and
sub
popa
inc
nop
adc
inc
xchg
into
repnz
adc
mov
push
mov
jp
sbb
call
ret
dec
push
push
nop
cs
jns
or
out
mov
fwait
aaa
add
push
mov
pop
ret
and
add
push
pusha
ljmp
idivl
push
inc
clc
cmc
xchg
and
push
fimull
mov
mov
out
dec
mov
jno
mov
popf
push
sbb
push
in
je
xor
dec
ret
inc
sub
idivl
dec
icebp
pop
mov
in
push
ds
sahf
idivb
pop
cmp
ja
icebp
jae
loop
js
out
hlt
mov
stos
hlt
lock
outsl
mov
addb
nop
mov
out
sub
or
popa
imulb
cwtl
dec
push
mov
xlat
push
sarl
xchg
jl
cs
in
mov
fwait
repnz
shrl
shrl
xchg
adc
and
add
mov
lcall
sti
pop
inc
push
jbe
pop
mov
push
iret
test
jnp
mov
dec
sbb
bound
in
pop
je
loopne
mov
adcb
insb
adc
ret
cmp
mov
jmp
hlt
sub
fs
add
and
adc
lret
stos
mov
cmp
cld
pushf
mov
cmp
dec
out
mov
push
and
bound
outsl
daa
xchg
xchg
sub
hlt
sti
aad
jno
xchg
xchg
je
test
adc
mov
sub
jg
cs
idiv
jmp
imul
pop
pop
mov
xchg
xorl
xchg
mov
adc
and
sahf
test
jge
adc
out
scas
sub
dec
outsb
sahf
xchg
enter
movlps
inc
das
pop
cs
xchg
push
and
sub
insb
or
push
bound
sbb
hlt
mov
fwait
pop
aam
jle
inc
or
rclb
mul
inc
inc
out
addr16
sarb
movsb
loopne
leave
mov
sub
adc
mov
inc
mov
in
dec
lahf
int
sti
sub
jbe
sbb
in
jge
sub
in
cld
jmp
jg
or
inc
add
fwait
in
sub
jmp
fnstcw
jl
xor
out
lahf
mov
inc
xor
adc
jmp
loope
imul
mov
push
add
lcall
test
movsl
ja
sbb
jns
mov
addl
or
push
lahf
leave
insb
mov
dec
pop
jg
push
xchg
sub
push
pop
xchg
mov
jp
ds
xchg
push
stos
mov
out
cmp
dec
and
inc
fsubrs
pop
cmpsb
xchg
dec
mov
jb
pop
mov
mov
clc
popa
mov
cmp
pop
nop
cmp
xlat
sarl
xor
mov
in
bound
pop
push
mov
scas
dec
pop
mov
fld
clc
xor
out
out
adc
jnp
das
mov
and
cmp
pushf
add
mov
js
repnz
ljmp
stos
jne
or
cltd
jle
adc
pop
sbb
mov
dec
stc
cld
mov
lock
roll
les
adc
or
roll
loopne
fwait
repz
xlat
jge
push
in
gs
and
mov
je
sub
clc
cs
push
addr16
pop
shrb
xor
or
ss
sub
aas
mov
xor
jmp
popa
std
sub
fmull
fisubl
or
sahf
add
scas
aam
mov
dec
or
fidivrs
es
cmc
push
mov
inc
pop
lcall
or
dec
mov
mov
aam
fidivs
into
mov
xor
sbb
xorl
adc
les
lret
pop
cmp
icebp
dec
adc
lret
xchg
cmp
movsl
pushl
call
mov
je
test
jb
push
jae
ss
sbb
mov
loopne
push
and
ja
jmp
mov
popf
cmp
sub
mov
dec
scas
insl
fnsave
adc
mov
cmp
mov
jo
mov
in
lds
aad
mov
push
int3
sbb
jecxz
dec
pop
sarb
andb
aaa
push
popa
mov
mov
push
imul
inc
out
dec
pop
lods
and
pop
shrb
xor
aaa
mov
mov
pop
sbb
aad
add
sub
movsl
push
icebp
push
push
mov
add
stos
xor
aad
xlat
jecxz
or
insb
leave
in
xchg
fsts
jnp
cmp
jb
scas
or
mov
jbe
repnz
cmp
dec
mov
andl
push
ror
call
call
xchg
jecxz
fwait
add
push
mov
jmp
xlat
jns
jmp
xchg
out
pop
jno
mov
xchg
and
es
ret
leave
jmp
xor
insb
scas
ja
sub
call
cli
sahf
xchg
pop
call
or
add
mov
ss
adc
insl
std
bound
jp
xor
cmp
daa
mov
sub
out
lock
sub
lcall
pop
leave
sub
cmp
sahf
adc
sahf
loope
mov
push
inc
jmp
adc
repz
cmp
popa
mov
cmp
dec
cltd
push
push
xchg
push
aaa
or
inc
push
imull
jp
int
xchg
mov
movsb
mov
sub
xchg
adc
scas
clc
es
test
mov
adc
das
jns
stos
dec
repz
stos
inc
and
mov
push
test
ljmp
mov
mov
insb
push
insb
nop
test
add
cmp
sbb
or
mov
sbb
adc
mov
sarb
cmp
push
das
out
xor
fldl
enter
in
outsb
mov
xchg
je
mov
and
sbb
xchg
fs
dec
aas
mov
add
adc
jbe
cmp
std
or
pusha
jmp
les
imul
jmp
shl
push
into
dec
imul
lea
shl
pop
mov
insl
test
in
add
mov
mov
fwait
jl
push
mov
pop
dec
xchg
push
dec
out
decl
les
call
ss
sub
gs
mov
push
fcoml
psubw
cmpsb
fbstp
ret
dec
mov
das
addr16
in
jg
sub
out
fcom
jbe
sahf
rcll
mov
push
sbb
mov
mov
rcll
inc
jnp
scas
mov
fcoms
fstpt
repnz
pop
lods
push
in
xor
mov
pop
in
jecxz
xchg
xchg
aaa
jle
pop
xchg
movsb
fbld
js
add
rdtsc
sub
cmp
cli
inc
mov
sbb
mov
mov
lock
cmp
inc
psubusw
pop
add
add
mov
ret
mov
cltd
bound
xchg
mov
mov
sarl
adc
stc
mov
imul
pop
sbb
sets
dec
mov
push
insl
add
gs
test
inc
mov
mov
inc
or
xor
sbb
addr16
clc
sub
mov
jne
subb
into
mov
push
in
cld
xorb
xor
xor
lods
lret
daa
in
insb
stc
lret
pop
out
sti
jg
sbb
jp
push
jl
mov
nop
adcb
mov
pop
ljmp
or
jo
out
sbb
mov
insb
sahf
dec
cli
test
jnp
xchg
cwtl
lcall
add
hlt
jle
mov
cmp
shll
mov
inc
push
pop
mov
jge
jle
pop
xlat
pop
mov
mov
std
fadd
sub
cmpl
dec
jp
xor
inc
and
cs
fistl
pop
cltd
push
push
mov
inc
add
xchg
in
adc
repnz
cmp
stc
dec
mov
mov
jo
test
add
dec
xor
jmp
lock
mov
mov
mov
js
mov
inc
pop
decl
in
in
repnz
xchg
scas
int3
arpl
sub
out
fstps
mov
cmpsl
fcoml
mov
and
jne
insb
clc
pop
jle
mov
dec
jecxz
das
xchg
sbb
jo
mov
mov
fstpt
addr16
inc
lods
inc
adc
pop
cmpsl
adc
ja
in
dec
add
in
jne
adc
notl
mov
inc
inc
jmp
add
orl
hlt
pop
sbb
dec
addr16
mov
push
loope
pop
sub
xor
mov
inc
jbe
pop
repnz
in
movsl
popf
dec
dec
mov
or
pop
or
fs
jnp
mov
adc
mov
mov
rclb
add
pop
ficoml
rolb
cmp
mov
lahf
and
jbe
xor
jge
jnp
xchg
add
cmpsl
sub
lea
add
pop
sahf
out
psubusb
popl
das
bound
mov
daa
in
mov
jmp
fiadds
adc
pop
xor
jo
jge
int3
sbb
orb
and
les
imul
add
fnsave
gs
jnp
xchg
push
mov
clc
inc
push
jbe
int
loop
lods
dec
sbb
aaa
mov
mov
mov
sbb
fnstenv
dec
adc
ljmp
sub
popa
clc
mov
rolb
cmpsb
fbld
jp
adc
bnd
xor
cltd
addb
adc
jp
mov
sub
enter
pushf
js
repz
inc
fwait
sub
aas
sahf
mov
jp
sub
jge
ja
ret
scas
ret
fadd
fs
arpl
das
pop
push
out
and
in
inc
pop
movsb
enter
pop
push
pop
lds
inc
and
inc
ja
loop
int
or
jo
mov
push
pop
outsl
repz
lock
adc
out
sti
xor
je
ret
or
cmpsl
imul
pop
loope
pop
xor
testb
fsubrp
cltd
adc
jnp
fisttps
push
mov
cmp
sub
add
xchg
xor
fwait
xchg
stos
xchg
test
loope
je
mov
cmp
inc
es
and
mov
push
in
adcb
movsl
jecxz
mov
adcb
sub
aad
lods
mov
push
insb
test
and
jp
lds
testb
lods
inc
iret
mov
pop
ret
dec
or
in
mov
lret
roll
in
adc
xlat
in
sbb
cltd
lret
jbe
or
sbbl
rcrb
pop
leave
std
daa
mov
cmp
pop
mov
push
jecxz
into
or
inc
loop
lods
ljmp
or
jmp
std
jg
shll
testb
mov
xlat
addr16
pusha
push
xor
cmp
mov
ja
inc
out
pop
out
xchg
mov
loope
push
cmp
lea
lahf
mov
adc
fmulp
cmp
inc
in
clc
or
lcall
shrb
fcoms
sbb
mov
enter
out
addb
int
or
adc
inc
cmp
push
pusha
pop
cli
dec
mov
subl
ljmp
cli
and
stc
lcall
xor
pusha
cmp
mov
or
std
gs
outsb
mov
dec
or
fsubs
pop
bound
xchg
notb
stos
test
mov
arpl
sub
aaa
pop
scas
mov
push
sahf
cmp
add
mov
lret
je
fwait
pop
clc
dec
lock
cmp
daa
pop
jae
pusha
cmc
dec
xlat
mov
mov
adc
fnstcw
jg
in
adc
jge
fnstsw
iret
or
or
cmp
mov
hlt
out
out
pushf
inc
jl
inc
pop
sub
fldcw
xchg
dec
cld
cli
ficompl
mov
sub
xchg
sti
dec
push
fwait
dec
and
xor
popf
sub
and
xor
fdivs
lea
in
mov
xchg
call
aaa
fadds
into
out
pop
cmp
mov
fs
inc
lods
stos
int3
push
or
push
imul
xorl
mov
or
pop
test
daa
pop
aas
clc
shrb
inc
jge
mov
and
fidivl
insb
mov
jl
das
fcmovbe
cmp
jmp
rcrl
iret
cs
roll
dec
sbb
dec
imul
shrb
xchg
callw
cmpsl
insb
call
lret
push
jae
mov
cmp
mov
mov
jae
aaa
mulb
mov
mov
xor
sub
mov
insl
mov
mov
ds
sahf
daa
sbb
sub
and
adc
cmp
mov
push
test
pop
sub
je
fsub
movsl
ds
cmpsb
dec
shlb
mov
repz
in
gs
ss
filds
ds
rcrl
pop
movsl
scas
pop
cmp
ss
push
fmuls
or
ret
nop
jnp
push
sbb
out
stos
jo
pop
and
clc
sbb
cs
cmpb
repnz
and
and
inc
pop
dec
sbb
xchg
push
pusha
xchg
ret
jg
in
test
mov
mov
push
scas
push
mov
fisubrl
mov
stos
xor
push
push
xor
in
cmp
loope
mov
xchg
aaa
inc
push
add
cli
and
popf
dec
mov
xchg
stos
les
lock
xor
pop
cmp
stc
or
loope
cs
xor
mov
mov
jae
push
jo
push
fistpll
fdivs
aam
lock
push
filds
sub
dec
cmc
mov
pop
sub
inc
lods
repz
jl
repz
adc
or
and
sbb
dec
sub
ljmp
add
test
repz
sbb
mov
fxch
dec
repnz
push
dec
lcall
sub
push
aad
ljmp
shll
test
dec
push
je
ljmp
push
jo
in
aaa
daa
push
test
mov
js
and
mov
pusha
xchg
jle
in
filds
add
sub
cld
mov
test
sbbb
mov
mov
or
xor
ret
mov
sbb
and
cmp
push
jcxz
mov
int
jo
enter
ret
sbb
push
and
hlt
adc
sbb
lods
fidivrs
sub
mov
push
test
cmc
push
jle
cli
mov
lret
or
dec
sub
sub
cmp
and
sub
sub
arpl
dec
das
daa
pushf
sti
mov
mov
or
and
or
dec
and
xchg
movsb
mov
fstps
das
adc
sbbb
adc
or
lret
cmp
sbb
dec
ss
popa
sub
xchg
lret
and
repnz
pop
lock
ret
leave
add
aam
pop
pop
lds
pop
sti
adc
andl
in
sbb
insl
adc
pop
lods
fcoms
outsl
mov
sbb
icebp
dec
aam
jns
hlt
in
pop
negb
xchg
stos
xlat
push
jl
adc
lret
test
cmp
sbb
outsb
sbb
aam
inc
jmp
gs
add
cmc
shlb
lret
shl
jmp
inc
scas
inc
and
mov
push
scas
ret
jno
pop
lret
daa
loop,pn
cld
or
xchg
into
pop
and
arpl
fdivrs
jb
xchg
adcb
mov
pop
shll
adc
mov
add
into
testb
imul
mov
sti
rcrb
cmc
pop
xor
scas
inc
in
mov
xchg
mov
out
pop
in
cmp
mov
lret
outsl
das
adc
leave
cmc
movsl
adc
pop
xchg
dec
gs
cmp
xor
mov
inc
mov
and
imul
xchg
xor
mov
movsl
and
xor
adc
dec
in
push
adc
mov
fmul
mull
in
hlt
jecxz
jbe
leave
xchg
filds
sub
outsb
xchg
mov
cmp
fs
out
addr16
rcr
pop
jae
int
jb
fdivrl
mov
pop
dec
int3
xchg
inc
jns
movsb
xchg
lods
pop
loopne
movsb
add
pusha
sbb
pop
div
dec
and
jbe
sub
jmp
mov
push
ds
rolb
or
jmp
movsl
xchg
mov
mov
call
inc
test
mov
sub
pop
push
or
mov
sbb
cwtl
adc
cmc
aam
in
aad
jl
push
dec
mov
pop
pop
test
shlb
pop
jne
xchg
enter
ret
dec
stc
nop
add
lea
and
mov
dec
pop
mov
outsb
dec
sbb
xchg
andl
mov
lret
sub
rcpps
sub
xchg
imul
stos
inc
cli
pop
std
subl
add
add
cmpsb
sub
jmp
out
fisttps
dec
push
clc
icebp
xchg
and
andl
cmc
mov
mov
or
pop
movsb
push
stos
sahf
in
fs
test
add
push
ss
ljmp
pushf
enter
xchg
sub
fbstp
aas
loop
dec
jnp
es
push
push
addb
lds
andl
or
jno
lds
sub
push
jnp
lea
or
stc
mov
aaa
daa
xchg
cmp
push
mov
repz
sub
cmp
jp
dec
mov
scas
in
test
leave
jecxz
mov
lea
cld
repnz
push
hlt
pop
out
cli
inc
hlt
rcll
shlb
inc
adc
lret
aas
pop
sbb
scas
jne
ret
ja
clc
mov
mov
adc
mov
iret
push
out
rol
mov
in
popa
mov
je
mov
inc
jmp
push
mull
std
addl
push
cmpb
xchg
push
fmulp
sbb
xor
fldcw
adc
and
aas
cmp
ret
ror
rolb
jbe
mov
daa
outsl
xor
loope
mov
divl
int3
inc
cwtl
popa
aad
out
cmp
mulb
xchg
adc
in
ficompl
jbe
dec
mov
xchg
loop
and
insb
in
adc
push
jo
and
pop
mov
movsb
mov
sub
js
fwait
repz
sub
ss
lea
push
or
xor
pop
aam
and
adc
sub
mov
test
mov
pop
hlt
ss
out
les
insl
sbb
lret
pop
aas
lcall
ss
pop
dec
sbb
mov
cltd
add
subps
xchg
cli
mov
ret
ss
xor
cwtl
push
dec
sbb
dec
pop
call
jo
jae
fsubl
push
stos
push
jp
movsl
add
xor
push
jae
sbb
cmpsl
repz
in
xchg
dec
popf
pop
add
inc
lcall
and
sbb
and
and
push
push
or
jmp
sbb
pushf
test
xchg
or
test
jp
sbb
leave
dec
cs
mov
sbb
fldcw
lods
scas
mov
cld
adc
out
push
in
cwtl
lods
push
dec
mov
ficomps
in
jo
dec
mov
mov
dec
push
mov
push
mov
insb
jae
repnz
lret
mov
inc
leave
imul
iret
fmull
mov
je
fchs
jle
adc
push
jl
cmp
fistpll
xchg
pop
inc
jno
push
rcll
pop
push
lock
xchg
xchg
inc
xchg
lds
mov
jge
ds
mov
inc
pop
mov
call
mov
xchg
sub
cmp
and
out
imul
adc
or
sbb
jo
lcall
push
pop
sub
pop
mov
pop
adcl
cmc
out
sbb
adc
mov
pop
shll
out
clc
or
xchg
imul
or
aad
movsl
out
ja
mov
mov
mov
mov
pop
iret
adc
jle
pop
push
add
dec
inc
push
sub
cmovnp
inc
cmc
repz
call
pop
icebp
cmpsl
lods
lock
insb
mov
scas
xchg
push
sbb
jmp
cmp
call
push
adc
jnp
push
mov
arpl
loope
jmp
or
mov
js
pop
test
or
push
ret
sub
adc
gs
adc
and
and
mov
test
jge
mov
lock
adc
scas
in
movsl
push
mov
leave
cwtl
pop
clc
daa
mov
cmp
add
mov
test
and
mov
dec
fnstenv
jbe
adc
mov
pop
push
icebp
cwtl
aaa
lods
or
call
cltd
out
cmpsl
lcall
std
push
add
leave
cmp
in
fdivs
fisubs
pop
pop
lock
arpl
mov
mov
scas
sbb
cmp
dec
mov
mov
arpl
testb
mov
repnz
mov
clc
pusha
fistpl
cmp
loop
repnz
int3
fwait
movsb
shlb
add
and
frstor
popf
and
ret
pop
fwait
mov
push
mov
mov
lret
dec
sub
and
cmpsb
in
subb
movsl
fsubr
sub
inc
ret
stos
mov
lcall
sbb
jle
dec
mov
inc
lret
inc
and
scas
fidivrs
push
cmp
pushf
iret
or
fisubs
mov
cli
sbb
rcrb
jns
jmp
mov
mov
popa
push
imull
sti
ret
lret
mov
lahf
inc
cmpsb
add
mov
mov
xor
sbb
vmovaps
scas
mov
icebp
in
sbb
adc
mov
mov
mov
mov
pop
cs
fsubr
xlat
adc
inc
orb
pop
sbb
sti
dec
inc
gs
test
mov
or
inc
adcl
cmp
xor
jns
test
sahf
adc
out
add
js
into
leave
add
dec
cmp
mov
adc
pop
lds
dec
jl
jle
outsb
lahf
sti
add
xchg
cmp
aas
pop
cmpl
pop
rcl
xchg
add
pop
movsb
clc
cltd
adc
xchg
pop
out
enter
mov
aam
push
subl
and
movsl
fimull
dec
and
addr16
and
fstl
xchg
daa
mov
repnz
mov
lahf
add
jns
popa
fsts
mov
add
sbb
pop
cltd
xor
sub
sbb
lds
movsl
pop
rcrl
nop
ljmp
mov
pop
insb
dec
xchg
adc
jno
add
pop
outsb
inc
and
pushf
jge
neg
ja
cli
test
cld
xorb
push
out
pop
mov
xor
pop
loopne
mov
sbb
scas
mov
push
xchg
mov
mov
lcall
or
cmp
das
jae
jo
lcall
ss
xchg
pop
mov
sbb
ss
jecxz
popa
push
inc
movnti
jne
fidivs
inc
out
pop
or
cltd
pop
mov
xorl
add
lock
jecxz
mov
mov
add
es
shrb
xlat
push
cltd
mov
push
xor
mov
dec
xor
js
inc
das
push
test
add
popa
leave
mov
in
push
rolb
add
in
fistps
cltd
xor
dec
mov
ret
push
jge
inc
fcmove
pop
ljmp
sbb
mov
and
mov
repnz
cmc
mov
sbb
mov
dec
xor
mov
ret
sti
add
xchg
xor
adcl
das
test
xchg
je
or
jmp
je
inc
mov
dec
pop
mov
mov
mov
add
sub
mov
das
int
xlat
inc
pop
in
imulb
mov
shll
aam
add
std
sbb
lock
repz
movsb
mov
and
out
mov
out
cmp
xor
sub
mov
inc
xor
movsl
adc
mov
pop
outsb
jge
arpl
sbb
int
pop
xchg
or
xor
popa
fwait
push
push
or
ljmp
cmpsl
scas
sub
sbb
push
mov
adc
enter
lods
lahf
mov
in
inc
out
clc
xorl
dec
jmp
cmpsb
add
jg
mov
and
and
sub
mov
int3
adc
mov
and
out
int3
mov
add
cmp
repz
sbb
int3
or
mov
nop
mov
cmp
add
ja
dec
pop
lahf
cmp
mov
adc
pop
jno
cltd
push
sti
jl
sub
lock
sbb
pop
fwait
lods
inc
data16
loopne
push
push
mov
std
xor
jb
iret
test
jo
incl
add
jne
xchg
or
roll
sbb
jo
dec
outsl
push
ficompl
dec
and
cmp
xlat
aaa
add
mov
push
push
ja
push
xchg
aam
clc
or
mov
pop
cmp
lds
lods
jbe
jns
call
jnp
mov
in
repnz
jg
jb
into
jmp
lock
outsl
imul
int
pop
dec
mov
lahf
jg
mov
out
adc
pop
and
imul
test
mov
fstpl
sub
mov
pusha
jl
mov
pop
ficomps
xchg
and
cltd
add
jecxz
mov
push
test
mov
push
mov
jmp
xor
or
inc
aas
sub
or
lods
mov
push
popf
das
sbb
sbbl
ficompl
jo
in
jle
sub
lahf
xchg
pop
jg
sbb
sub
adc
push
pop
ljmp
push
xor
out
dec
hlt
das
lret
sbb
addr16
lret
sub
add
int3
push
scas
xchg
test
dec
int
inc
sbb
icebp
mov
jp
push
sub
std
mov
addr16
insl
movsl
mov
jge
gs
int
add
addl
aad
rcll
dec
xchg
sub
push
hlt
mov
into
xchg
jns
insl
lret
jb
push
shrl
inc
in
ss
aad
or
push
inc
imul
or
sbb
or
clc
jns
je
and
sub
dec
push
inc
ret
and
ja
sti
popa
adc
sbb
push
pop
xchg
mov
push
in
push
push
add
and
das
addr16
addr16
add
push
lahf
adc
pushw
out
cmc
mov
mov
inc
or
sbb
in
pushl
scas
movb
cmp
adc
xorl
inc
cmpsl
cmp
mov
xor
add
mov
mov
push
iret
sub
pop
add
imul
rcl
or
inc
jns
mov
rol
add
stc
or
nop
push
jle
and
xchg
xor
arpl
push
loop
sbb
xchg
pop
cmp
adc
int3
or
pop
pop
lods
or
loopne,pn
das
and
and
or
leave
pop
dec
fimull
int3
xchg
lock
jl
lds
add
aaa
xor
mov
orl
mov
mov
inc
or
push
xchg
sub
mov
xor
xlat
ljmp
or
sbb
aaa
pop
mov
jmp
pop
faddl
jle
arpl
lods
lcall
gs
pop
stos
outsl
cwtl
leave
jge
xor
push
repnz
sub
and
sub
push
and
or
sbb
xchg
negl
dec
es
std
cmp
lods
sahf
mov
insl
fnstsw
mov
mov
xchg
popa
pop
add
lds
sarl
adc
xchg
lahf
pushf
push
jp
pop
inc
or
inc
cli
es
daa
inc
pop
mov
pop
mov
mov
add
sti
jns
fnstcw
into
cmp
push
out
mov
aas
xor
jge
shlb
mov
aam
or
and
das
out
xchg
cmp
xchg
movsl
cmp
sbb
jl
mov
stc
mov
es
or
xchg
into
xchg
mov
add
sub
andl
imul
stc
aam
rolb
or
sub
scas
jecxz
pop
sti
imul
fistps
sub
insl
inc
xchg
and
lock
aad
ficoms
sbb
jns
icebp
dec
scas
mov
xchg
into
xor
test
jb
mov
in
or
push
les
scas
call
ds
out
mov
mov
jg
inc
nop
sub
lock
cmpl
cmpsb
js
add
inc
and
inc
lret
sbb
mov
lretw
rol
and
arpl
adc
scas
sbb
daa
mov
sbb
push
adcl
pop
jnp
mov
lods
xchg
outsb
imul
cmpsl
mov
sti
seta
insb
inc
outsb
dec
in
pop
push
cmc
push
mov
ret
jg
ja
dec
push
stc
xor
in
add
mov
dec
xor
pop
xlat
out
xchg
pop
sub
repnz
jae
data16
xor
add
push
sbb
out
mov
gs
sahf
xchg
cmp
mull
lock
jae
xor
movsb
cmp
fiadds
sub
adc
ss
jae
xchg
pop
int
pop
pop
lcallw
daa
dec
popf
xchg
cwtl
cmc
adc
adc
dec
mov
fcomip
fs
xchg
or
sub
shrl
mov
push
cmpsl
mov
inc
adc
jmp
inc
xchg
mov
xor
mov
and
ds
push
xchg
fimull
jb
jns
sub
test
fwait
ds
mov
fcmovnbe
sub
adc
leave
dec
push
decl
call
fwait
sub
out
mov
sbb
inc
pop
lea
jnp
adcb
sbb
mov
sub
mov
arpl
stos
inc
int
sahf
mov
outsb
dec
loopne
cs
movsl
sbb
stc
cwtl
xchg
or
outsb
das
rolb
addb
out
out
iret
push
sbb
fisubrl
stc
push
cmpb
lea
add
inc
or
je
std
add
jmp
lcall
push
out
hlt
inc
sti
or
push
pop
push
sub
shll
jne
cvtps2pd
lret
xchg
ret
cmpsb
adc
mov
dec
iret
pop
mov
inc
pushf
and
icebp
adc
push
jnp
xor
ja
aad
mov
and
lods
ret
xor
inc
fcmovb
fldt
pop
xor
mov
xlat
out
rcll
mov
ret
aas
lahf
int
std
in
je
cmp
loop
ss
xchg
mov
fld
pop
adc
fistl
or
jmp
dec
das
dec
mov
fsts
cmp
inc
loop
pop
shll
xchg
rcrl
outsl
sub
stos
xor
js
out
mov
push
test
push
push
sbb
pop
stc
mov
lahf
repz
push
aaa
pusha
fnstcw
repnz
and
dec
cmp
mov
push
loopne
adc
lcall
add
cmp
push
mov
and
aad
mov
push
shll
inc
lret
jle
cmp
mov
hlt
ljmp
xor
push
in
mov
inc
scas
push
loope
inc
or
rorl
add
ljmp
stos
add
inc
je
aad
loop
negb
mov
jecxz
out
in
sbb
iret
icebp
in
jns
xchg
nop
and
in
inc
and
xor
add
sti
jmp
add
ds
jb
xor
stos
xchg
fidivs
inc
xchg
movsl
mov
je
lods
or
and
fsubrl
fdecstp
hlt
adc
push
iret
xchg
xchg
sub
ss
into
inc
inc
cmp
pushf
ror
lret
fisubl
jbe
addl
enter
ja
test
add
push
add
and
inc
adc
imul
roll
std
cltd
test
or
jg
sub
mov
pop
andb
add
pop
xor
xchg
ret
stc
and
mov
stos
shlb
test
inc
add
sti
sahf
jge
sbb
rcrl
sbb
dec
nop
shlb
stc
mov
push
adc
sub
xchg
out
cmp
inc
xchg
cmp
jge
adc
inc
inc
push
out
daa
fdivs
inc
inc
out
inc
insl
pop
stc
push
sbb
sbb
or
mov
shrb
mov
mov
and
dec
jne
jg
mov
pop
stos
mov
mov
or
sbb
cwtl
cs
clc
jg
testb
cmp
xor
and
nop
xchg
mov
je
xchg
fwait
movsb
xchg
pop
add
xchg
or
xchg
xchg
movsl
add
sub
jg
cmp
ss
sbb
inc
mov
cli
out
push
jae
mov
mov
data16
or
push
push
add
imul
push
xchg
fmuls
jne
out
cmp
fnstenv
or
es
lods
loope
xor
mov
std
pop
sub
test
icebp
mov
sti
ljmp
and
ljmp
sub
xor
mov
data16
mov
mov
scas
cmpsb
sub
cmp
sub
dec
fistpll
popa
ss
mov
and
add
xor
in
dec
fidivrs
cmc
shlb
lods
inc
adc
out
in
pop
fwait
xor
cld
lret
in
daa
or
sbb
cmpsb
jnp
ret
or
add
sub
mov
pop
mov
gs
das
lods
push
daa
push
push
pusha
xor
mov
ret
or
out
xchg
sub
pop
lea
sti
sahf
in
push
insb
cltd
in
cmpsl
dec
lods
xlat
mov
into
mov
rcr
mov
fcomip
fisubrs
push
cmp
mov
jno
mov
arpl
add
pop
sbb
sbb
sub
ret
jns
out
test
es
sbb
or
and
sub
repz
je
and
xor
andb
push
push
out
das
xchg
mov
aad
pusha
jb
fldcw
xchg
and
mov
jle
test
xor
jae
mov
inc
gs
cmp
jns
outsl
push
push
out
stc
insl
sub
mov
adc
cmp
jno
mov
xchg
js
movsl
sub
jg
sahf
mov
xchg
sbb
mov
scas
aaa
rcll
icebp
fcomps
xor
dec
std
pop
add
jp
adc
push
cmp
push
pop
fs
mov
call
int3
imul
xchg
ficoms
gs
lcall
sahf
push
test
data16
cmp
xorb
fidivl
pop
sarb
adc
lcall
push
pop
cmp
dec
in
cmp
adc
sahf
mov
imul
or
xchg
xacquire
repz
push
mov
mov
add
and
adc
arpl
icebp
cmp
pop
xchg
bound
mov
sub
cmpsb
or
divl
shr
mov
popf
loop
cmovno
imul
add
fiaddl
pop
fnstenv
push
sub
je
loopne
das
push
jo
subb
inc
push
xlat
out
in
cmp
mov
and
ljmp
divl
lock
xchg
pop
adc
filds
adc
push
mov
pop
mov
mov
ja
lret
ja
lret
xor
sub
cmp
lods
aad
movsl
repz
jp
ja
xor
jo
mov
icebp
adc
xor
pop
jbe
mov
xchg
loop
push
loope
ljmp
xchg
test
cli
mov
outsl
push
imul
cmp
or
xchg
insl
push
push
jge
gs
std
jbe
test
cs
pop
xchg
loope
nop
inc
jns
mov
jecxz
push
xorl
cmp
mov
stos
out
adc
roll
mov
frstor
fistpll
jo
cs
loope
jmp
mov
ret
bound
ret
pop
mov
adc
shlb
loop
lret
jg
mov
bound
push
adc
adc
aas
jg
xor
dec
pushf
icebp
popa
jle
or
arpl
into
xchg
cmp
mov
ja
mov
lods
and
pop
pop
sub
push
lods
sub
dec
and
ja
cmp
pop
test
pop
mov
sub
add
lods
mov
cmp
push
sbb
mov
enter
arpl
and
inc
inc
adc
push
mov
into
scas
stc
cmp
hlt
mov
clc
ret
mov
out
lret
cmpl
cmp
movsb
mov
jecxz
icebp
xorb
les
pop
rcrb
push
std
mov
and
xchg
rclb
popa
movsl
es
in
aam
inc
lret
out
jno
lret
lea
int
inc
adc
jns
lea
aad
cmpl
mov
xor
setg
xchg
dec
push
sub
xor
loope
in
je
rcrl
enter
stos
sbb
jnp
and
push
sub
mov
adc
sub
inc
pop
test
dec
dec
jmp
mov
jne
and
push
add
push
fmull
mov
repnz
push
mov
mov
cmp
xchg
dec
fistpll
jnp
test
xor
jmp
sbb
jp
insb
cmp
xor
imul
jo
aad
and
or
lods
mov
inc
mov
xchg
dec
ret
or
pusha
fcoml
scas
out
cmp
xchg
mov
lcall
pop
imul
lods
inc
dec
push
inc
push
mov
insl
adcb
lcall
int
dec
sahf
inc
enter
lock
fildl
xchg
adc
dec
jp
in
lret
in
and
in
aam
xchg
adc
lods
sbb
sahf
aaa
aaa
scas
xor
lods
lahf
push
cmp
popa
mov
test
and
push
inc
dec
and
jmp
lcall
cmpb
dec
iret
jp
push
add
inc
jne
xor
das
mov
mov
lahf
push
ss
dec
pusha
lcall
in
xlat
and
inc
clc
and
or
sub
mov
inc
sahf
cli
pop
jp
outsl
lods
jl
mov
adc
xchg
mov
push
pop
xchg
aaa
data16
cmp
call
or
dec
testb
fs
jbe
fimull
scas
cli
and
dec
adcl
js
int
shll
and
mov
inc
sbb
nop
pop
mov
inc
in
out
inc
daa
imul
insl
lahf
jno
fyl2x
cld
add
pop
push
add
xor
push
cwtl
notb
aaa
push
add
subb
xor
lret
add
add
xor
lea
and
push
lods
push
dec
mov
xor
imul
mov
and
xor
cli
mov
xchg
xchg
pop
enter
sub
in
adc
mov
mov
and
imul
mov
cmp
xor
push
int3
xchg
jmp
movsb
scas
push
stos
xchg
mov
fsubs
sbb
push
pop
insb
xor
fwait
add
push
call
sbb
stos
ret
xchg
into
int3
mov
push
or
call
loopne
cs
push
pop
dec
dec
fisubrl
leave
mov
in
mov
xchg
or
cwtl
cld
mov
push
ds
ja
cltd
inc
jnp
ret
adc
shlb
out
hlt
pop
lds
mov
xbegin
fadds
movlps
ficoml
mov
jp
jnp
xchg
pop
dec
stos
xchg
dec
addr16
filds
orl
std
adc
sub
clc
push
dec
pop
fwait
test
fstl
sub
mov
xor
xchg
mov
packuswb
dec
dec
test
sbb
sub
das
cltd
inc
icebp
push
subb
lods
clc
setle
outsb
insb
sbb
dec
in
outsb
inc
loopne
movsb
test
pop
mov
lcall
out
stos
jl
test
cltd
arpl
lahf
xchg
add
rorl
xchg
jg
jns
pop
sbb
lods
sar
mov
adc
ficoms
cs
and
add
cmp
rcll
sahf
xchg
cmp
out
pop
push
pop
adcb
std
addb
clc
add
enter
rcll
and
imul
push
je
testb
adc
sti
jo
pop
aas
cmp
inc
push
jo
test
inc
pusha
addr16
adc
cmp
and
jo
stos
cmpsl
addl
std
dec
adc
push
test
das
into
es
std
addb
cmp
xchg
sti
loopne
ficoms
push
xor
in
mov
cli
mov
xchg
mov
pop
sub
cmpsl
mov
stos
xor
dec
movsb
cli
cmp
js
shl
in
movsl
test
roll
ljmp
xchg
lret
pop
push
addr16
lahf
frstor
ljmp
pushf
sti
lcall
pop
mov
or
mov
into
jb
or
and
mov
int
jne
xchg
cmpsb
gs
popa
xchg
notl
fcomps
push
sbb
in
cmc
xchg
loope
push
jmp
scas
mov
push
frstor
adc
rcrl
push
mov
and
sub
lret
inc
jno
es
or
mov
shrl
dec
xor
push
push
inc
jne
jge
movsl
fsub
pusha
sbb
insb
jmp
and
movsb
lret
into
outsl
out
mov
push
sub
test
cmpsl
jl
ds
jb
nop
sub
cmp
and
ja
pop
cmp
jmp
ja
inc
testl
pop
inc
fcoms
ds
sbb
jmp
in
sbb
lea
shlb
jne
dec
add
xor
or
mov
push
mov
movb
pusha
adc
stc
sahf
cwtl
outsb
inc
mov
add
push
push
inc
sahf
jnp
mov
xor
call
xlat
pop
jl
dec
fldcw
jne
sarb
arpl
push
mov
push
and
loopne
dec
dec
cltd
daa
shll
arpl
push
pop
shll
daa
popf
inc
cwtl
mov
iret
xor
mov
lahf
mov
or
xor
test
mov
inc
dec
in
fwait
cmp
stos
jo
sbb
push
popa
pop
mov
lret
aad
fistl
hlt
sbb
in
fwait
iret
sbb
outsl
or
je
mov
xlat
sbb
das
adc
popa
jbe
lods
mov
xorl
mov
adc
pop
out
sbb
inc
mov
movsb
int
add
or
or
push
adc
loopne
xor
push
dec
adc
bound
lahf
mov
xchg
sbb
sub
sub
loope
aad
stos
insl
cli
pop
aas
dec
adc
cwtl
xchg
lea
jbe
xor
adc
xchg
lahf
jbe
xor
cmp
jl
dec
lds
mov
sbb
xor
xor
pop
arpl
pop
mov
mov
cli
lret
pop
hlt
push
hlt
xrelease
gs
cwtl
fistl
jl
xchg
pop
sub
jbe
pop
sahf
mov
movsb
mov
loopne
inc
mov
mov
mov
xchg
ret
jno
xchg
mov
int3
lea
add
aad
das
or
fidivs
dec
jmp
dec
add
mov
into
call
jbe
into
lahf
adc
sbb
pop
mov
mov
add
push
ret
inc
imul
sub
dec
push
xor
xchg
gs
jb
sub
inc
movsl
insl
inc
mov
pop
and
xchg
inc
mov
sub
dec
lods
or
test
fldl
mov
lods
add
push
ret
aas
dec
pop
in
call
scas
xor
in
clc
ja
cmc
rorb
fcmovnbe
les
je
mov
loopne
pop
imul
sbb
add
jnp
fsubrl
jg
popf
adc
insb
sbb
stos
movsb
outsl
sbb
shlb
xorb
popf
xor
int3
xor
loop
mov
xchg
jae
cmpb
arpl
fsts
sbb
mov
cmp
paddusb
mov
fstps
jb
cmpb
push
dec
addr16
aaa
mov
mov
xor
data16
loop
adc
fildl
scas
dec
aaa
and
stos
jns
stc
inc
or
fmul
imul
cld
mov
icebp
hlt
mov
inc
sbb
pop
popa
jnp
jnp
fisubrs
mov
sub
cs
dec
insl
ja
cltd
sti
cli
out
adc
and
mov
mov
ja
add
mov
mov
loopne,pn
push
fcomip
jp
sbbb
mov
xchg
xchg
cmp
arpl
repnz
cltd
addr16
adc
mov
inc
cld
or
dec
and
hlt
inc
inc
repnz
lcall
dec
nop
icebp
mov
cltd
mov
pop
xor
sub
jae
ds
adc
lods
lret
in
or
and
rcr
xor
mov
jle
add
mov
scas
pop
sbb
jne
jg
insl
xchg
das
xor
mov
sbb
out
mov
push
jnp
jno
cmp
mov
push
test
lcall
inc
and
jns
in
ret
in
push
adc
repz
inc
inc
ror
jle
inc
imul
imul
jno
jle
das
pop
fcomps
sub
mov
push
xor
test
cmp
xchg
mov
movsb
mov
pop
and
ljmp
xchg
sti
insl
dec
adc
scas
lods
sahf
es
test
sbb
xchg
in
push
cs
scas
imul
adc
lods
imul
loopne
sbb
pop
imul
jne
xchg
lcall
fldenv
js
push
popf
je
daa
aaa
aas
inc
sub
stc
ss
icebp
mov
cmp
fdivl
shrl
cmp
imul
test
adc
out
add
xchg
sbb
jp
iret
xchg
cmpsb
insl
mov
pop
push
xchg
jge
mov
jl
add
xor
ss
push
dec
test
adc
add
mov
pushf
jo
jbe
push
inc
add
addr16
inc
add
dec
mov
or
or
ss
ds
loop
adc
cmpb
call
cmp
sahf
jne
aaa
fildl
pop
inc
mov
mov
jne
rorb
sbb
adc
repnz
imul
mov
sub
pop
les
dec
shll
mov
dec
mov
cli
push
and
mov
ret
pop
dec
mov
lea
addr16
mov
lcall
jmp
test
xchg
pop
sub
mov
add
xchg
leave
dec
and
mov
mov
or
add
mov
push
pop
adc
imul
sub
imul
jecxz
mov
pop
inc
repnz
loopne
mov
mov
mov
rol
hlt
pushf
adc
pusha
dec
jno
add
clc
push
cltd
jle
test
std
test
out
push
jle
pop
in
fwait
sbb
sbb
les
insb
mov
mov
pop
lcall
lcall
xor
cmp
mov
loope
loope
or
rorb
jo
mov
pusha
sub
inc
popf
dec
inc
int
cmp
dec
xchg
cmc
dec
xor
aam
xchg
cmc
ja
jmp
pop
mov
lock
loopne
pop
dec
xchg
inc
sbb
cmpsb
or
fwait
das
xor
and
jno
mov
mov
cltd
cmp
outsb
test
cmp
sub
hlt
mov
sub
mov
std
jns
scas
in
dec
outsb
ljmp
pop
shll
pop
das
adc
and
nop
fnstsw
or
aaa
jb
mov
sbb
cs
mov
cwtl
leave
ret
stc
movsl
addr16
cmp
cmpsl
daa
and
cmp
mov
ror
mov
pop
rcrb
shll
mov
xorl
push
jle
xchg
mov
xchg
xor
push
or
rep
or
add
dec
dec
dec
insl
arpl
fisubs
jae
data16
outsb
jnp
cld
xchg
sahf
fwait
adc
movsl
aad
cli
push
mov
mov
sub
dec
pushf
cmpsl
notb
pop
xchg
outsl
movsl
rorb
out
icebp
push
dec
fdivrl
ljmp
sub
sbb
roll
xchg
dec
mov
pop
add
stos
ret
or
dec
add
sbb
shrb
movsl
dec
gs
xchg
ja
mov
push
pop
shl
jecxz
mov
add
hlt
xchg
jnp
cmpsl
or
mov
clc
xchg
or
iret
mov
xchg
and
in
sbb
inc
lods
std
xchg
lock
sbb
stos
xor
fs
push
loopne
or
ljmp
xchg
ljmp
jne
push
and
push
pop
test
push
lods
xor
popa
xchg
sbb
fdivs
or
pop
loop
gs
fidivs
out
sbb
mov
inc
sti
icebp
iret
push
dec
cli
loop
dec
xchg
dec
push
xchg
cmp
lock
fwait
jnp
or
out
test
pop
in
add
cmc
dec
sti
mov
xor
lret
inc
xlat
test
add
xchg
sub
pushf
pop
or
insb
or
adc
add
or
pop
mov
inc
shrb
in
scas
out
mov
add
sarb
sbb
movsl
popa
fs
or
aas
mov
shlb
add
push
cmp
jb
das
stos
movsl
mov
adc
fcoms
out
aad
jp
mov
sub
cmp
pushf
je
cmp
xchg
das
rcll
lock
adc
add
pusha
movsb
sbb
sbb
mov
mov
pop
cmp
inc
js
out
cld
dec
jae
xor
leave
xor
inc
fucomi
push
fnsave
dec
mov
mov
mov
lods
sub
fldt
dec
loop
xlat
add
enter
hlt
xchg
push
daa
repz
mov
cmp
mov
jl
pop
sub
fwait
sbbb
mov
xor
lcall
pop
mov
sub
add
out
sbb
add
movsb
lods
pop
div
stos
repz
jnp
stc
lcall
andb
pop
lcall
push
scas
dec
xor
popf
lods
xchg
std
lods
mov
dec
jae
cmp
mov
mov
xchg
or
mov
fnsave
bsr
cli
cmp
pop
addr16
adc
or
jge
dec
repnz
xor
nop
arpl
lds
sahf
push
sub
pop
dec
xor
mov
adc
xchg
mov
xor
and
iret
adc
ret
cmpb
jns
movsl
js
pandn
ret
fs
push
sub
mov
mov
pop
lahf
mov
add
leave
inc
test
jg
sar
mov
jmp
xchg
lahf
dec
imul
dec
inc
add
hlt
fbld
mov
push
sub
xchg
in
popf
fsubrl
ss
test
stos
xchg
sbb
mov
sbb
mov
or
incl
out
xchg
loop
test
popf
in
repnz
testb
fistpl
daa
nop
adcb
push
jnp
xor
int
punpcklbw
les
xor
mov
inc
out
inc
negl
lahf
cmpsl
imul
fwait
mov
negl
stos
and
or
add
mov
lcall
sub
psubusb
jne
inc
push
fidivrs
add
ss
cmc
xor
cmp
xchg
insb
mov
ja
cltd
std
sub
add
sbb
mov
xor
mov
jle
jecxz
mov
mov
enter
hlt
adc
adc
jns
inc
sbb
addl
lock
test
push
nop
mov
adc
shlb
sarl
mov
jnp,pt
mov
orl
and
inc
movsl
repz
add
inc
sbb
add
lret
sbb
add
jmp
push
push
imul
sti
es
movsb
jb
pop
add
sbb
xchg
dec
and
stos
int
lret
mov
push
inc
in
dec
pop
addl
sub
cmp
lea
sbbl
pop
pop
cmp
or
ljmp
mov
stc
out
and
mov
mov
icebp
pop
shlb
fstpl
ljmpw
xor
inc
mov
xchg
mov
addl
jb
pop
add
cmp
push
sub
dec
iret
adc
lret
in
out
cli
push
pop
scas
jg
repnz
xor
pop
inc
sti
sbb
fldenv
or
scas
popf
ds
fnstcw
mov
pushf
sbb
in
pop
jb
jp
adc
lock
jecxz
xor
dec
pop
cmp
sbb
leave
jo
and
push
in
xchg
ljmp
xchg
adc
pop
enter
lock
loopne
loopne
inc
or
xchg
fstpt
inc
sub
add
xchg
inc
or
dec
roll
cmovnp
xchg
aas
in
dec
in
mov
pop
pop
mov
mov
inc
es
pop
jno
rcr
add
out
int
aam
outsl
lahf
lcall
pusha
movsl
setg
add
mov
mov
xchg
aad
orl
fsubl
bound
adc
xor
adc
ret
pop
or
sbb
adc
cmp
jmp
pop
pushf
jecxz
bound
lahf
ret
pusha
dec
fstl
mov
mov
mov
inc
xchg
mov
adc
scas
stos
mov
dec
cltd
adc
cmp
lock
mov
push
neg
cmpsb
sub
fcomip
push
mov
sbb
out
mov
stos
cwtl
sti
dec
in
dec
sub
mov
cmp
cmpsb
pop
adc
popf
or
movsl
add
cmp
sub
inc
je
mov
aam
pop
ss
push
push
cmpsb
lock
add
les
pop
pop
push
or
ja
sub
inc
or
xchg
negl
gs
pop
jne
loope
int
mov
sahf
lea
pusha
lcall
xchg
pop
cmp
jmp
add
mov
in
cmpb
push
cmp
push
jl
jbe
jge
scas
push
ret
add
xchg
push
das
lahf
fmuls
int
ret
sbb
add
ja
fisubrs
inc
int3
push
and
cltd
ja
rdpmc
stc
push
push
testl
mov
roll
das
xchg
in
xchg
push
jo
jge
movsb
jns
mov
mov
mov
lods
lret
mov
mov
scas
mov
dec
inc
leave
lret
push
fnsave
pop
cmpsl
leave
aad
mov
loope
mov
inc
jnp
mov
cmc
sbb
dec
jae
pop
int3
repnz
push
xor
jae
outsl
cmc
mov
int3
pop
cwtl
sbb
nop
fnsave
mov
adc
mov
pop
jne
jle
ds
or
movsl
xor
rcl
ss
jne
dec
push
inc
cmp
mov
cmpsb
enter
out
ss
lret
push
sbb
and
and
mov
xlat
pop
xor
push
push
dec
mov
push
aaa
adc
hlt
lret
push
mov
mov
pusha
or
out
sub
in
int
lea
sub
or
push
push
lods
push
pop
mov
inc
rol
mov
movsl
repz
loop
or
popf
test
mov
cld
mov
mov
je
pop
push
lcall
fs
mov
mov
cmpsb
adc
cmc
mov
aas
sub
cmp
outsl
ja
in
push
push
mov
add
push
out
and
xchg
push
xor
call
pop
pop
imul
adc
pop
mov
mov
cmp
js
lret
jo
push
adc
inc
sbb
cmpl
pop
cli
popf
jle
mov
cmp
cmpsb
cld
sub
jns
fdivrp
out
push
movsl
test
shll
repnz
out
stos
repz
cli
in
in
jae
pop
inc
stos
es
and
xor
ror
xchg
push
into
mov
mov
cld
xchg
or
mov
xchg
cmpsb
lock
xor
fsts
sbb
fnstenv
push
xor
mov
cmpsb
cmp
gs
jnp
mov
add
inc
rcr
jmp
loop
cltd
cmp
sbb
popa
sahf
stos
es
fwait
test
mov
push
xorb
pop
pop
fisubrs
add
push
stos
jecxz
ja
push
sarb
mov
fnstcw
bound
mov
mov
arpl
pop
sub
mov
popf
popa
scas
enter
push
std
rcr
ret
mov
mov
add
mov
xchg
xorl
jns
mov
popa
jo
mov
out
add
fcoms
loope
mov
cmpsl
cmp
sub
and
addb
push
lahf
fsubrs
movb
pop
sahf
sarl
xor
or
scas
inc
cmpsl
and
cmpsb
insb
jae
js
lods
shr
aam
push
movsb
xlat
mov
fstl
fbstp
hlt
mov
mov
push
adc
sahf
sub
hlt
pushf
or
mov
scas
mov
adcb
mov
ret
lods
jae
or
addr16
test
adcb
sti
cwtl
call
or
idiv
cmc
cmp
fwait
jbe
push
cmp
or
mov
pop
imul
jbe
adc
sbbb
test
add
les
cmpl
adc
pop
sub
divl
shlb
lret
inc
pop
mulb
lock
xor
add
int
fisttpll
das
add
out
cwtl
adc
out
hlt
adc
lahf
lret
pop
repz
mov
addr16
cltd
push
movsl
cltd
lahf
push
lods
lods
mov
or
in
xchg
stc
inc
shrb
cmp
sub
ja
xor
call
dec
fwait
pop
and
jo,pt
imul
sbb
push
lret
pushf
xchg
add
rorb
popa
mov
sub
or
inc
stos
scas
and
sbb
dec
inc
mov
xchg
fs
dec
xchg
mov
adc
bound
push
add
nop
outsl
inc
adc
fisubrs
orb
sbbl
fiadds
push
movsb
or
lock
sbb
call
loopne
cmp
orb
cmp
into
jo
adc
repnz
insl
or
mov
mov
jecxz
dec
mov
fisubrs
add
push
test
testb
sbb
push
test
pop
xor
int3
sbb
and
add
cmp
mov
adc
mov
loope
inc
inc
mov
xchg
dec
sub
xorl
mov
dec
and
test
pop
mov
imul
hlt
sub
xor
adc
aad
mov
mov
ljmp
dec
dec
lahf
paddsw
xchg
les
or
inc
fcmovnbe
jp
push
dec
and
mov
shl
lods
pop
or
xchg
popa
xchg
jae
pushf
clc
orl
add
int3
jno
mov
mov
inc
xor
sub
push
mov
push
mov
std
sbb
jb
jg
and
icebp
orb
das
pop
repz
nop
adc
xchg
pop
aam
mov
push
pushf
aaa
mov
lret
int3
sbb
cmp
ret
or
ljmp
jno
xor
adc
inc
push
push
out
popa
cmp
es
lret
pop
jne
xor
stc
ja
loope
xor
popa
movsb
lods
sbb
sub
or
gs
lret
jp
and
test
and
lcall
fcoms
push
pusha
xor
mov
test
mov
dec
mov
je
sub
mov
jns
test
out
dec
add
push
xchg
add
mov
pop
sbb
xchg
xor
insl
jecxz
loope
cmpsb
cmpsb
or
call
inc
push
cmp
mov
std
fmuls
scas
hlt
int3
daa
ret
dec
je
and
push
ds
inc
mov
add
mov
fwait
xor
repnz
out
adc
mulb
lods
jb
fwait
fadds
cmp
sbb
mov
push
loopne
xor
push
pop
mov
int
mov
outsb
xchg
pop
jp
sbb
outsb
push
aas
fistps
notb
pop
aam
push
push
ret
adc
inc
xchg
mov
xor
je
ret
hlt
mov
push
push
push
inc
rcll
orb
mov
test
pop
sbb
push
jg
and
mov
xlat
enter
jp
scas
enter
xor
lods
iret
scas
push
pop
loope
inc
div
mov
leave
pusha
ret
int3
sbb
outsb
aad
outsl
icebp
xchg
sbb
jg
imul
je
in
dec
mov
out
sbb
bound
pop
loopne
inc
in
sub
mov
pop
jo
aas
sub
rcrb
xchg
cmp
rcrb
pop
pusha
jmp
dec
xchg
xchg
les
ljmp
pop
fwait
jnp
into
scas
xor
jne
mov
stos
gs
hlt
mov
jnp
mov
push
xor
push
cmpsb
xor
ljmp
idivb
mov
jge
repnz
jle
mov
push
adc
mov
push
pop
mov
mov
imul
mov
orb
mov
clc
in
xchg
lcall
sbb
dec
jae
mov
add
movsl
lcall
xchg
sub
xchg
cmp
or
outsl
and
std
inc
int3
jae
movsl
mov
fsubr
andl
inc
push
leave
ss
call
fdivrs
push
jae
mov
xchg
xchg
push
sub
test
pop
pop
or
lret
inc
icebp
jae
mov
pop
mov
fwait
dec
les
je,pn
sti
cmp
mov
inc
adc
in
lret
cmp
mov
cs
or
xchg
lods
adc
ljmp
mov
push
pop
popf
es
mov
mov
aad
scas
fistl
call
xchg
stc
mov
cmp
loop
pop
sub
jno
jp
loopne
outsb
in
add
mov
jp
mov
fwait
data16
pop
xor
les
into
mov
pop
ret
flds
js
mov
lods
out
mov
and
jp
lahf
in
ja
mov
or
test
sub
or
lock
movsb
sarb
sub
jo
push
pop
je
push
pop
clc
pcmpgtd
pop
scas
jg
jmp
lret
shlb
nop
sub
xor
inc
mov
inc
cmp
mov
mov
cld
sbb
pop
cmpsl
pop
inc
push
mov
dec
pop
je
mov
xchg
mov
es
xor
xor
dec
mov
int
fimuls
ja
inc
lock
xorl
cmp
xchg
xor
sub
pushfw
push
xor
sub
lea
xchg
jo
rorb
lahf
pop
and
sbb
sub
das
shlb
ret
fsubl
mov
faddp
mov
flds
rcll
jmp
loopne
cli
dec
sbb
std
test
mov
jae
testl
insl
aaa
jp
stos
xlat
xor
mov
cmc
inc
pop
ja
dec
test
ljmp
int3
stc
mov
pop
icebp
sbb
jecxz
mov
popa
fiadds
sti
xchg
loope
inc
je
adc
aam
cmp
js
mov
mov
xorb
fwait
push
cmp
push
fistl
arpl
cmpl
sub
es
jecxz
mov
rcll
sbb
inc
ja
fistpll
sbb
imul
jg
daa
mov
mov
cmpsl
aad
fldl
mov
push
inc
imul
add
repz
jno
sbb
shll
jae
push
push
jl
stc
jo
sar
pop
call
mov
mov
les
mov
cmp
mov
andb
dec
shll
pop
pop
xor
fldl
sbb
loopne
les
add
mov
pop
into
lret
mov
je
js
jae
sub
and
jmp
aad
or
xchg
adc
jg
in
dec
stos
adc
add
sbb
inc
insb
dec
push
stc
in
add
loopne
inc
inc
jecxz
push
int3
mov
xchg
fisttps
mov
test
push
ret
fsts
repz
cwtl
popa
adc
mov
jecxz,pt
mov
call
pop
mov
daa
stos
pop
pop
lods
inc
not
mov
test
or
sbb
dec
sti
mov
sub
pushf
add
jns
lock
adc
out
in
jo
mov
push
xchg
pop
sub
jns
and
pushf
mov
sbb
test
repz
push
mov
xor
insb
movsb
jge
xchg
ja
mov
ror
xchg
pop
xorb
movsb
pop
insb
sub
scas
xchg
sub
fisubrl
push
ljmp
cmp
xchg
dec
or
shr
sub
pop
lret
fmul
sub
jecxz
or
adc
sub
mov
arpl
fsubs
shll
xor
and
mov
stos
mov
adc
hlt
pusha
mov
imul
pushf
mov
jo
sahf
pop
repz
insb
enter
stos
pop
fcmovb
cmc
in
pop
cmp
dec
pop
mov
fnstsw
cli
lea
pop
cmp
lds
xlat
dec
cwtl
stc
fmull
jbe
ret
scas
sub
mov
mov
mov
jns
in
jnp
ret
in
sbb
inc
inc
inc
xchg
cmp
and
push
cld
inc
aaa
repz
icebp
lret
push
push
xor
xchg
scas
arpl
mov
mov
xchg
adc
cmp
xchg
js
jno
sbb
loope
repz
mov
push
xor
xor
repnz
call
push
pop
insl
in
sub
scas
int
fwait
pop
pop
jbe
ret
jne
fisubl
movsb
pop
flds
cmpsb
xchg
or
aas
rorl
inc
cmp
and
mov
xor
fisttpl
popfw
push
decb
sarl
sub
scas
sar
jb
loopne
divb
out
mov
mov
mov
push
addl
fwait
cmp
adc
test
into
cmpsb
in
sti
pop
or
fs
movsb
jae
xor
cmc
inc
shrb
push
adc
out
adc
cs
fists
dec
inc
xchg
popf
xor
push
std
pop
dec
jno
stos
push
sub
adc
test
dec
lds
or
inc
push
jo
pop
adc
outsl
das
mov
fists
add
insl
cmc
in
push
fisttps
adc
shl
lret
jbe
int3
or
adc
inc
repnz
outsl
cld
lods
test
dec
mov
fidivrl
sbb
mov
in
jnp
lret
adcb
mov
cltd
mov
aad
jl
scas
shrb
jnp
cmc
xchg
scas
fildl
ss
rcl
imul
flds
push
push
jb
outsb
add
dec
mov
popa
ss
hlt
xor
push
fistps
andb
pop
dec
adc
pop
orb
scas
mov
sarb
cld
push
jb
jne
jo
mov
dec
and
push
xchg
sbb
shlb
jnp
adc
push
pop
xchg
push
xor
pushf
sbb
nop
mov
mov
xchg
sbb
add
fistpl
popa
cmp
das
rcll
dec
adc
mov
sub
push
push
fucomp
outsl
push
xlat
loop
push
jl
pop
dec
sbb
std
fadds
jp
sbb
outsb
and
out
xchg
xor
lcall
in
ret
pop
adc
inc
jnp
and
int
push
dec
pusha
fcoml
test
stc
dec
stc
cmpsl
cli
stos
imul
sub
xchg
int3
mov
mov
andb
pop
stos
sarb
insb
iret
sbb
jno
cmc
scas
rorb
out
mov
out
push
cmc
lds
cmovl
imul
mul
inc
and
out
xchg
jmp
jle
rclb
pop
fnstsw
dec
popf
notl
pop
mov
insb
and
jle
arpl
out
movsl
fistps
enter
loope
aaa
xchg
loop
lods
and
lret
in
pusha
cli
ret
pop
inc
and
fwait
push
es
dec
dec
daa
sbb
dec
xchg
call
or
xor
push
cmpsb
daa
outsb
sub
mov
push
popa
mov
aam
lret
and
loop
pop
pop
mov
popf
inc
test
jnp
scas
jne
addr16
add
hlt
adc
aad
rdpmc
pop
sti
adc
dec
bound
mov
ds
mov
dec
mov
in
push
test
mov
sbb
out
sbb
loopne
push
lds
mov
adc
rclb
sarb
jns
xchg
dec
cltd
sub
rolb
ss
insb
leave
mov
daa
or
cmp
shl
outsb
insl
addb
mov
in
xchg
sbb
sub
loop
push
jnp
fisttpll
negl
sbb
jno
xchg
push
and
add
int3
dec
jge
fnstsw
dec
mov
into
sub
mov
cmp
pushf
fdivs
and
push
mov
outsb
push
push
mov
mov
jne
mov
pop
pop
mov
dec
xor
jg
or
xchg
cmp
sahf
push
lods
cmp
jns
std
mov
jnp
add
orb
push
pop
pop
filds
pop
sti
xchg
sbb
hlt
rclb
xor
cmpsb
push
push
dec
xor
cmp
cld
xchg
popa
xchg
jmp
icebp
call
mov
notl
stc
mov
jle
or
mov
cmpsb
int3
push
adc
mov
inc
outsl
ss
call
movsl
dec
outsb
pop
pop
ljmp
jne
js
add
dec
mov
ret
lret
sub
add
pop
out
cmc
mov
insb
adc
jmp
addr16
stc
aad
data16
xchg
loop
sbb
sub
cltd
lds
test
repz
stos
hlt
sti
push
imul
inc
fs
pop
gs
mov
mov
ret
mov
inc
pop
and
add
out
je
jmp
fwait
repz
aam
push
sub
pushf
loop
ss
mov
cli
aas
mov
sbb
jns
inc
jg
inc
sbb
and
sub
xchg
or
jge
aas
movsb
inc
xchg
sub
dec
div
stc
adc
xor
inc
into
xchg
xchg
outsb
or
dec
adc
stos
cmp
ret
dec
sbb
in
mov
repz
fcomps
loopne
ffreep
cmp
add
sub
sub
and
ror
pop
xor
inc
repz
shll
ljmp
cmpsl
scas
test
outsl
bound
jns
idivb
fbstp
xor
outsb
andl
push
xchg
shlb
cmpb
aas
in
clc
movsb
xchg
or
lods
cmp
enter
imul
mov
fmull
fldcw
lret
xor
stos
int3
and
std
test
jo
xor
mov
dec
add
xchg
or
and
lcall
lcall
cmpsb
stos
pop
sbb
bound
arpl
mov
push
jnp
xchg
pusha
push
or
les
add
mov
fstps
sub
sbb
mov
pop
jmp
xchg
sbb
aas
adc
in
pop
and
cmp
sub
lds
jp
test
pop
push
xor
arpl
pop
xlat
adc
test
int
leave
sbbl
dec
loop
mov
je
xlat
add
shll
pop
mov
push
dec
aad
lds
pusha
loop
mov
sbb
cmpsl
adc
sbb
out
xchg
cmp
arpl
out
and
jbe
mov
cmp
mov
cwtl
inc
xchg
test
dec
cmc
adcl
mov
enter
mov
std
ffree
sahf
fstps
movsl
pop
in
pop
iret
jo
mov
data16
movb
xchg
mov
jg
ja
stc
jmp
lods
stos
sbb
sub
mov
sub
pop
add
mov
or
enter
addb
and
pop
sbb
das
push
jecxz
add
push
fs
mov
mov
mov
xchg
add
or
push
test
dec
push
scas
jmp
mov
cmp
lock
data16
sti
stc
rorl
sub
xchg
sub
dec
inc
add
dec
pop
push
dec
jo
xchg
or
xor
pop
inc
data16
cmp
clc
push
cli
decb
fwait
subl
out
jbe
jmp
push
repz
dec
and
out
dec
loop
mov
ret
rclb
xlat
jae,pt
lods
stos
cmp
mov
iret
pusha
mov
inc
sete
or
fucomip
push
scas
xchg
add
gs
pop
adc
inc
in
fadds
mov
lcall
dec
arpl
imul
ficoms
jno
jecxz
in
push
out
clc
xchg
mov
sub
aam
aas
shll
pop
lods
out
bound
xor
repz
xlat
cwtl
inc
add
mov
outsb
sti
icebp
and
and
inc
das
jmp
xor
push
pop
pop
out
jne
jns
mov
js
inc
mov
ljmp
fs
xor
push
shlb
xchg
jnp
sar
dec
xchg
shll
mov
inc
test
mov
sbb
pop
adc
loop
jbe
fwait
movb
andl
jg
mov
xlat
insl
cmp
fwait
push
fistpl
sbb
mov
pop
inc
cwtl
or
aaa
push
sti
mov
jne
fisttps
dec
mov
leave
push
push
adc
add
dec
icebp
cmp
xchg
or
js
mov
and
and
cltd
outsb
or
ret
xor
test
lret
rorb
sbb
push
dec
cld
jnp
push
mov
and
mov
pusha
xor
push
sbb
mov
insb
xor
push
out
notl
inc
inc
inc
push
push
dec
and
jb
cmpsl
out
xor
xchg
push
mov
dec
movsb
inc
jae
hlt
push
mov
pop
mov
sti
mov
jge
das
adc
mov
dec
pop
iret
xor
out
push
dec
movsl
loop
pop
sub
xchg
pop
jae
xor
jp
stc
int
sbb
inc
mov
push
sbb
lret
mov
sub
shlb
xchg
push
cmp
push
adc
cmp
dec
dec
mov
xchg
cmp
vpacksswb
xor
cmpb
cmp
aaa
push
dec
clc
scas
push
loopne
movsb
je
push
jns
sub
outsb
mov
sbb
xchg
pop
sub
dec
aam
and
sbb
lods
clc
cmp
xor
aad
jle
jge
shll
arpl
mov
pusha
mov
int3
or
ret
jle
in
lods
dec
cs
pop
or
pop
adc
imul
dec
fnsave
pop
pusha
mov
xlat
sub
lret
mov
test
call
and
push
push
push
ds
jle
das
pop
sbb
lock
std
loope
push
sub
into
fs
jg
loop
mov
mov
sbb
mov
sub
test
pop
shll
in
lcall
iret
enter
insb
jno,pt
xor
addl
ret
sbbl
adc
movsl
repz
xchg
loope
or
int3
pop
add
jl
ret
sub
cmp
inc
out
test
jb
dec
mov
xchg
sub
sub
pusha
out
inc
mov
out
jge
adc
call
pushf
loope
imul
mov
inc
push
cmp
xor
xor
into
nop
jns
or
mov
cmp
jge
mov
ja
cmp
mov
into
pusha
fs
xor
lds
push
add
call
sarl
lods
inc
mov
pop
je
fidivs
icebp
fcmovbe
mov
xor
mov
ja
xchg
jne
dec
xchg
dec
sub
dec
fadds
and
dec
sbb
fcmovu
jne
inc
mov
xchg
stos
mov
repz
and
ret
fildll
enter
or
pushf
addr16
xchg
iret
cmpsb
out
rcrb
push
loopne
sub
xchg
lea
ljmp
cmp
adc
sti
adc
mov
push
sti
pop
mov
inc
push
push
sbb
lret
push
fists
lret
lret
imul
push
jmp
outsb
xchg
inc
push
pop
inc
jo
popf
adc
je
jno
fs
imul
jle
cmpsb
xchg
out
mov
push
dec
push
sub
out
push
pop
aaa
push
pusha
leave
mov
xor
sbb
outsb
outsl
pop
sahf
mov
jns
or
mov
mov
ljmp
pop
and
subb
lods
sub
dec
jge
sub
das
sbb
adc
add
rcrb
bound
dec
in
dec
pop
or
addb
icebp
mov
push
addr16
mov
jns
xchg
daa
mov
and
fimuls
vxorpd
or
and
inc
xorb
push
jecxz
lcall
rclb
xchg
outsl
das
jbe
push
adc
push
push
inc
lods
pop
gs
push
jecxz
test
jmp
jne
enter
xchg
in
mov
loopne
idivl
in
sub
push
mov
mov
mov
push
clc
dec
repnz
jo
ljmp
inc
imul
iret
loope
sub
adc
test
add
addl
mov
jns
repnz
mov
pop
insb
or
cs
aad
fs
rcll
in
cmpsl
jecxz
aam
sub
xchg
decb
cmp
shr
loope
or
lods
cmpsl
sub
jge
xchg
das
enter
repnz
cli
icebp
shrl
add
add
sbb
in
fnsave
push
dec
xchg
jne
sub
xchg
aaa
fsts
out
dec
push
mov
cmc
rcrb
xchg
pop
add
mov
sbb
sbb
cs
psubsw
in
daa
mov
pop
push
inc
jbe
xor
lahf
dec
pop
dec
xchg
lds
mov
cmp
cmpsb
pop
jae
lcall
mov
les
mov
enter
andl
in
jno
andl
and
fwait
pop
mov
dec
lret
or
loop
popa
push
sti
inc
inc
and
or
sub
std
leave
fwait
imul
xor
sbb
push
enter
mov
fildl
pushf
pushf
or
cmp
jb
test
mov
cmp
imul
nop
fisubrs
mov
mov
pop
push
rcll
decl
imul
cmpb
inc
cs
xorb
xor
divl
push
add
push
xor
mov
cmpsb
roll
cmp
sarb
cmp
aaa
leave
xor
test
jge
or
cmp
pop
xor
lock
pop
fmuls
fwait
test
rorl
aam
dec
sub
ds
add
test
cmpsb
mull
cmp
nop
test
xor
shlb
pushf
adc
jnp
ja
jge
add
dec
subl
cmp
mov
add
pop
add
jae
insl
xchg
ljmp
aam
jnp
ss
ja
lods
test
cmp
dec
pop
and
scas
pop
xor
daa
sbb
scas
lock
pop
ljmp
pop
in
jne
into
sbbb
jns
mov
push
cmp
adc
aad
stc
lock
or
push
sbb
imul
ds
popf
pusha
daa
outsl
cltd
mulb
cwtl
loop
fistpll
lds
push
subl
inc
lods
dec
in
loop
mov
and
xchg
mov
cld
pop
aad
les
push
xchg
dec
xchg
mov
in
in
test
mov
xchg
aad
in
push
arpl
das
and
cmp
pop
lods
lret
cmc
out
pop
ds
out
mov
push
rolb
cmp
pop
sbb
lods
ds
cmp
inc
jecxz
dec
arpl
sti
add
cmp
xor
sbbl
insl
ret
xchg
aam
movsl
jge
add
cmpsl
xor
bound
aaa
stc
cmp
repz
sbb
sti
lret
lahf
fidivrs
push
cmp
inc
push
adc
xor
pop
jge
iret
fadd
ja
inc
mov
cmp
in
sbb
add
popa
mov
stc
add
add
jno
jne
mov
lods
xor
shrl
pop
mov
lcall
dec
xchg
push
push
mov
add
int3
mov
mov
clts
add
shll
dec
jo
mov
pop
adc
jo
jno
and
cmp
es
mov
or
stos
sub
sub
xchg
fiaddl
sahf
cmp
xchg
adc
jl
fsubp
stos
push
out
lahf
out
sub
ds
fcmovu
clc
cmp
xor
pop
nop
test
ja
add
push
cmp
shlb
repz
dec
pop
lds
xchg
in
fs
pop
jp
jns
aas
pop
mov
clc
xlat
out
cmp
loope
mov
inc
sbb
jno
or
lcall
add
mov
loope
jge
out
pop
shll
cmp
inc
xchg
pop
test
pop
push
cmp
pop
aam
xchg
je
mov
out
in
push
dec
test
fdiv
pop
adc
shl
xor
jmp
xchg
or
popa
pop
in
sbb
out
push
mov
and
cld
xor
adcl
leave
bound
add
ja
aam
jb
je
and
out
inc
and
pushf
iret
or
sub
xchg
loop
rsqrtps
pop
hlt
push
popa
xor
xor
push
lods
xor
movsb
ss
fistpl
insl
dec
mov
scas
mov
imul
jle
shll
cmp
jnp
fisubs
gs
xchg
int
outsb
sar
mov
inc
out
ret
dec
ret
mov
xor
add
repz
add
mov
or
adc
mov
shl
xchg
pop
inc
xchg
mov
fcmovnb
leave
inc
xor
xchg
mov
xchg
lcall
pop
mov
or
loope
ljmp
pusha
ljmp
push
jnp
sub
sub
inc
stos
xchg
aaa
xor
fwait
and
cmp
dec
outsl
pop
pop
gs
mov
nop
xorl
daa
outsb
out
loop
cmpb
xchg
inc
and
pop
mov
cmp
dec
js
ja
andb
ds
pop
jnp
sub
fmuls
ret
lock
or
loopne
adc
pop
rclb
iret
bound
sbb
pop
mov
dec
movsl
mov
fsubrl
add
mov
in
icebp
shl
je
sbb
aaa
jge
mov
stos
xchg
aaa
movsb
outsb
fldcw
and
in
jle
xlat
jne
jbe
or
jg
mov
mov
mov
mov
inc
mov
jge
rolb
mov
mov
jg
mov
push
shrb
repz
xchg
mov
sti
imul
mov
sbb
and
movsl
adc
or
pop
fsubrs
pusha
repnz
test
aas
gs
lds
jns
pushf
addb
mov
mov
popf
mov
pop
push
xchg
add
jp
stc
das
mov
push
daa
out
cmpb
js
adc
es
jmp
xchg
int
adcb
and
or
loopne
scas
sub
mov
adc
inc
aaa
gs
push
outsl
xor
mov
fcomps
pushf
std
lods
jg
sti
sbb
and
pop
mov
cmp
outsl
mov
lock
enter
mov
xor
data16
xor
mov
shlb
ljmp
out
call
push
dec
in
fidivl
or
bound
fisttpll
cmpb
cmp
not
add
xor
inc
mov
lock
add
xchg
outsb
sahf
adc
pop
sti
nop
dec
adc
rorl
cmpsb
lods
outsl
loopne
push
xchg
fnstcw
arpl
icebp
mov
ja
mov
test
arpl
icebp
mov
sbbl
rorl
sbb
sti
adc
inc
in
mov
lock
test
jns
inc
cmpsb
cmp
pop
xchg
fdivl
movsl
xchg
and
imull
mov
lcall
loop
test
jge
jmp
jae
repnz
test
pop
xchg
loop
ljmp
mov
xchg
popf
xor
leave
sbb
fdivl
jp
stc
or
cmp
or
push
adc
scas
es
movsl
out
adc
clc
popf
mov
push
stc
insb
call
rorl
push
dec
push
jne
into
cwtl
ljmp
jb
cmp
andb
mov
xchg
cmc
or
les
adc
or
test
test
jno
ss
cmp
cmp
or
insb
shrb
dec
and
xchg
popf
push
and
fs
push
imul
mov
mov
jns
in
push
cltd
inc
jecxz
sub
xlat
addr16
sub
rorb
lods
repnz
xchg
xchg
mov
dec
in
fs
std
pusha
call
loope
push
rcl
int
adc
ret
int3
adc
repz
stos
pop
outsl
mov
aaa
je
leave
addr16
push
daa
adc
jae
add
sbb
pop
or
pop
xchg
lods
outsb
lea
ret
outsl
out
xchg
push
cltd
bound
pushf
push
ds
mov
shlb
imul
stc
mov
sub
hlt
pop
scas
jno
mov
outsl
push
dec
sahf
ds
sub
push
pop
xchg
mov
mov
fsts
cltd
jg
inc
hlt
pop
scas
xchg
subb
int3
pop
mov
jge
outsb
pop
outsl
xor
xchg
stos
out
in
je
mov
jbe
pop
jmp
jmp
std
scas
or
cmpsb
test
mov
out
sti
popf
mov
out
pusha
lea
aas
lret
scas
pop
lock
add
xor
mov
out
and
imul
pop
es
stos
movsl
aad
jne
lea
xchg
and
push
pop
jle
adc
clc
lods
pop
and
ss
mov
jns
adc
aad
insb
pop
adc
sbb
and
lea
adc
lods
add
test
les
rclb
lods
sub
ljmp
notl
inc
xchg
xchg
and
xchg
inc
data16
mov
jne
jb
xlat
xchg
and
ja
inc
pop
sub
push
sbb
loop
xchg
and
mov
loop
cmc
adc
xchg
aas
idivb
add
pop
ret
test
mov
cmpsl
add
jne
or
iret
lahf
clc
mov
sub
cmpsl
or
adc
or
mov
xchg
fwait
scas
mov
xor
and
xchg
xchg
push
ja
lcall
cmpsb
mov
insl
add
movsb
inc
divl
mov
das
dec
pop
pop
mov
mov
sahf
jge
inc
cmp
out
mov
sub
dec
lcall
aad
pop
subl
lods
mov
outsl
insl
js
sahf
xchg
test
mov
cs
dec
bound
push
mov
loopne
sbb
inc
cmc
xor
ret
add
jl
sbb
lea
outsl
mov
mov
and
inc
sub
aas
nop
push
out
mov
fidivs
sbb
pop
into
stos
sub
push
xor
fcmovnb
xchg
mov
shrl
jl
aas
and
add
movsb
inc
jns
in
mov
push
cmp
and
imul
imul
mov
lods
fisubs
jecxz
sbb
push
sbb
add
mov
mov
and
mov
cmpsl
jne
fnsave
xchg
mov
jo
and
inc
jp
sti
or
sbb
aad
sarl
pop
or
push
mov
sahf
sub
rcl
fdivl
scas
ds
movsb
xor
push
fs
push
lret
or
pop
dec
push
dec
pop
gs
push
pushf
pop
pusha
es
movsl
fmuls
and
jbe
arpl
jg
loope
sarb
mov
cmp
push
nop
lds
or
mov
out
rolb
les
mov
dec
nop
jne
das
gs
lret
icebp
call
or
jp
ja
cmpsb
ret
xchg
sahf
mov
sbb
push
outsb
test
test
loope
or
mov
sarb
push
sub
add
jmp
pop
clc
cmpsb
jge
clc
mov
xchg
inc
mov
jbe
xchg
test
stos
addr16
add
in
dec
data16
inc
push
mov
data16
push
xchg
nop
sub
aas
pop
inc
push
inc
sbb
mov
push
jno
push
and
orl
outsl
sti
inc
inc
mov
add
mov
mov
or
sub
test
stos
pop
or
mov
or
inc
jl
push
cmpsb
cmp
lret
test
dec
mov
mov
or
in
xchg
mov
mov
xchg
fwait
loope
subb
xchg
mov
xlat
in
clc
inc
or
mov
insb
mov
insl
xchg
lahf
xor
or
into
pop
les
cwtl
inc
dec
rcrl
or
mov
mov
test
and
cmc
dec
cmp
mov
inc
mov
cltd
xor
jo
fs
pusha
mov
clc
inc
fistpll
fstps
in
aas
lea
mov
mov
adc
outsl
push
pop
xor
daa
and
cmc
mov
mov
out
sbb
movsl
xchg
popa
jbe
popa
cmpsl
leave
mov
sbb
ret
jnp
pusha
xchg
shlb
xchg
inc
arpl
cmp
push
push
arpl
stc
in
and
sub
aad
out
pop
nop
int3
sub
push
int3
insl
sub
mov
divb
imull
divl
sbb
std
in
sbb
fs
lret
dec
jle
pop
lahf
mov
jle
mov
mov
push
lods
push
outsl
adc
inc
jb
cmpsl
fimull
push
push
jns
in
dec
pop
dec
sahf
sbb
imul
cltd
fwait
movsl
mov
pushf
xchg
xor
inc
std
xchg
mov
mov
mov
js
test
mov
test
add
xchg
cmpsl
cwtl
jg
sahf
jecxz
pop
xor
push
mov
gs
mov
inc
mov
pop
addl
movsb
and
ficoms
mov
adc
push
cmpl
jecxz
xor
sahf
call
jb
mov
adc
xchg
fnstsw
xor
cmpsl
adc
loopne
dec
jnp
cmpl
sbb
push
or
orb
cli
sub
xor
cwtl
mov
daa
ja
aaa
mov
sub
std
dec
cmp
fcoms
xchg
lock
mov
push
dec
outsl
insl
leave
jge
xchg
or
aaa
adc
mov
ljmp
pop
sub
in
inc
adc
xchg
in
cmp
pusha
pop
in
loopne
testb
int
sbb
fdivl
dec
xchg
xor
and
int
add
mov
stos
fsubr
push
mov
jne
xor
stos
xchg
fisttpl
lret
fstpl
adc
adc
lods
mov
and
mov
test
and
lret
test
faddl
xchg
pop
push
cltd
sub
leave
lods
xor
je
mov
inc
mov
test
mov
sub
cwtl
je
dec
lods
sbb
sar
add
jnp
aas
sbb
push
iret
repz
inc
test
xchg
dec
sbb
mov
sub
ds
int
cmp
loope
iret
arpl
popf
or
xchg
das
sbb
inc
mov
or
sub
sbb
shl
push
les
daa
sbb
in
push
push
sub
sbb
inc
arpl
out
pop
fmuls
outsb
push
sub
loop
cmpsb
ja
xor
subl
mov
mov
cld
fcomps
push
mov
outsb
mov
dec
mov
sub
and
icebp
in
rcr
test
test
sub
mov
mov
inc
push
data16
xor
pop
ja
pop
in
lahf
inc
mov
sub
movb
jo
test
ret
mov
fstps
add
inc
xchg
mov
outsl
std
getsec
icebp
scas
or
xor
mov
add
ds
add
fnstcw
jle
inc
sub
stos
xchg
xor
movsb
hlt
imul
xchg
mov
jne
aaa
inc
push
pushf
dec
or
popf
push
loope
xchg
xchg
pop
stc
push
mov
mov
or
add
rclb
mov
adc
inc
cld
inc
mov
jl
xchg
shll
mov
jo
jae
rcll
add
xchg
sbb
mov
fbld
addr16
jg
pop
pop
inc
outsb
or
pop
sub
shlb
sbbb
aas
adc
dec
je
inc
scas
mov
push
mov
outsl
shll
add
mov
aaa
xchg
cmpsl
fidivrs
or
mov
jo
sti
jecxz
imul
adc
fsts
addr16
sbb
aam
rcrl
imul
outsl
jns
sub
in
outsb
inc
cmp
hlt
mov
stos
lret
call
and
cmpsb
push
int3
mov
pop
jnp
mov
pop
adcb
cmp
out
imul
int
adc
add
je
jmp
mov
repnz
xchg
jnp
mov
inc
cmpsl
push
es
pop
lcall
in
ds
pop
mov
mov
addr16
mov
cltd
loop
dec
xor
push
sti
iret
enter
push
sahf
bound
popa
push
lock
sarb
int3
lahf
push
mov
leave
int
sbb
jle
lods
or
pushl
out
into
adc
stos
add
push
jge
xor
sub
cmp
sbb
iret
call
repz
jns
dec
fistps
test
loope
leave
and
sub
repnz
push
adc
sbb
wrmsr
inc
dec
into
xor
rcll
in
outsb
cmp
aas
adc
dec
push
or
incl
jle
ret
xchg
ljmp
xchg
in
ficoml
inc
loop
pop
movsl
filds
loope
stc
cmp
ss
dec
or
push
movb
inc
out
mov
dec
push
mov
xchg
ficomps
popf
inc
mov
fcomp
cmp
popa
mov
in
dec
lahf
mov
aaa
jb
into
push
cmpsl
movsb
cmp
push
sti
test
nop
add
shll
jp
repnz
icebp
and
xor
mov
into
cmpsb
lea
xorl
adc
mov
stos
cmpsl
cmpsb
jge
cltd
pop
inc
negl
sbb
mov
push
je
xchg
xchg
sbb
mov
push
jmp
xlat
mov
out
inc
call
xlat
pop
dec
daa
ret
cwtl
dec
movsb
sub
mov
fcmovu
xlat
js
or
rorb
insl
cmpsb
imul
test
jle
xchg
ret
cmpsl
ss
mov
imul
insl
lcall
cmp
mov
jne
xor
lret
add
mov
lock
push
mov
jno
dec
cmpsl
add
jp
rcll
in
pop
movsl
aam
in
movsl
xchg
ja
mov
out
cmc
sub
lods
out
or
ja
out
popf
es
out
xchg
sub
sbb
out
fists
std
xchg
test
int
dec
fmul
cs
negl
loopne
adc
jo
out
mov
imul
mov
fmull
xor
mov
push
adc
leave
out
arpl
fimuls
js
xchg
rclb
sub
mov
je
xor
adc
dec
push
jo
loop
mov
cmp
jnp
xchg
dec
out
movb
jl
dec
sbb
cmc
pusha
push
mov
dec
xor
xchg
int
sub
add
xor
idivb
in
in
lret
adc
jmp
sbb
aad
mov
xor
mov
cs
repnz
mov
push
lahf
bound
add
xchg
or
pop
mov
test
sub
cmpsb
sbb
lahf
int
stos
sbb
subb
mov
xchg
add
mov
jbe
dec
push
dec
fildll
push
and
mov
push
popf
or
mov
cmpsb
or
mov
outsb
outsl
mov
push
inc
mov
xor
cmpsb
fucomip
std
out
push
imul
in
xchg
sub
popa
test
sahf
jp
mov
xor
jl
adcl
inc
dec
ret
aas
mov
sarb
lret
insl
mov
inc
pop
sahf
pop
cmp
inc
aas
push
mov
stc
insl
fnstcw
sbb
or
daa
mov
nop
cmp
ds
inc
dec
jle
xchg
xor
dec
or
adc
roll
adc
in
fidivrs
xchg
push
sahf
je
iret
arpl
test
and
cmpsl
mov
push
dec
xchg
std
shrl
mull
xchg
outsl
inc
mov
cs
lret
les
in
imul
ss
pop
push
add
pop
lods
inc
cwtl
fimuls
sub
mov
add
aad
fs
mov
push
xchg
cwtl
add
sbb
mov
loop
loopne
testb
stos
add
out
xchg
cltd
inc
sub
movsb
xor
int
ljmp
cltd
sarl
cmp
xchg
cmp
pop
add
negl
inc
ljmp
loope
push
mov
cwtl
add
insb
xchg
punpckhdq
pusha
in
sub
ja
sub
fmuls
sbb
jne
add
in
repz
and
inc
fdivl
pop
aam
imul
inc
fildll
ffree
mov
lea
and
pop
imul
xchg
xchg
inc
fmuls
inc
sub
jp
js
ja
or
xchg
outsb
mov
inc
aam
mov
mov
pop
mov
adc
imul
push
imul
daa
out
loope
lds
xor
inc
fidivl
test
and
adc
arpl
or
xor
in
cs
inc
aaa
push
cmp
push
loope
imul
jb
xor
loopne
cld
or
int
repz
mov
subl
sbb
add
mov
pop
add
mov
jp
mov
cmpl
jmp
or
icebp
aam
ret
xchg
mov
push
fsubr
add
in
sbb
pop
nop
mov
mov
jb
jp
inc
xchg
inc
rcll
jl
sub
ret
push
and
sub
clc
mov
push
test
cmc
pop
ss
lret
mov
xchg
insb
xchg
or
jnp
dec
dec
mov
cmpl
sbb
data16
subl
das
popf
pusha
repz
add
xorb
jge
addb
dec
decb
repz
adc
pop
mulb
test
bound
push
mov
enter
pop
rorb
mov
xchg
xchg
imul
in
scas
js
adc
and
out
adc
stos
loope
test
cmp
xchg
xchg
into
sti
jo
in
ds
jb
pusha
leave
in
jo
sbb
sub
ss
dec
les
cmp
fs
jmp
lcall
mov
sbbl
sbb
dec
movsl
rorl
iret
lcall
movsl
inc
dec
scas
jecxz
into
push
cmp
pop
push
mov
movsb
fwait
push
es
in
push
inc
cmp
cmp
testl
inc
lock
push
sbb
je
scas
adc
and
jmp
loopne
inc
mov
push
add
pop
dec
inc
pop
fs
scas
push
lcall
jge
subl
cmc
notb
cmp
jne
shrb
pop
lods
cmc
testb
sbb
ja
fwait
cltd
mov
xlat
shl
jb
mov
sti
mov
xchg
sahf
pop
loopne
xchg
xlat
pop
mov
mov
into
in
iret
and
arpl
int3
lock
sbb
gs
stos
insb
or
fdivs
xchg
inc
divb
pop
outsl
adc
out
aad
adc
xchg
into
shlb
pop
cmp
add
or
stc
xor
sbb
sub
pop
rol
cmpsl
ror
aaa
es
jns
call
cmpb
jmp
sbb
pop
push
roll
and
mov
scas
push
or
into
inc
popa
fwait
mov
mov
fcoml
xor
mov
shlb
mov
movsb
push
jb
out
mov
fldl
ret
popa
jno
iret
xchg
clc
aaa
add
sub
mov
xchg
ret
push
pop
mov
push
push
popa
inc
inc
sub
enter
addl
pop
insb
in
lds
push
out
sbb
cs
loopne
fmull
adc
ljmp
push
jle,pn
cli
fbld
fidivrs
ss
adc
loope
and
cmp
out
aaa
xchg
cld
sub
jnp
mov
add
mov
dec
jo
jmp
or
in
fsubr
mov
clc
ja
leave
pop
adc
xor
jg
xchg
mov
hlt
lods
stos
sub
push
inc
pop
sub
and
int
and
dec
pop
or
inc
fldl
enter
xor
movsb
jle
sub
pop
mov
orl
lds
sbb
cmp
add
dec
mov
dec
and
xlat
ja
cmp
pop
dec
scas
cmp
pop
push
js
sub
sub
inc
outsl
xor
call
clc
js
jmp
and
ss
stos
xor
insb
ja
inc
xchg
lods
mov
add
ljmp
iret
mull
jo
push
adc
add
sbb
call
in
movd
cmp
jg
inc
pop
fwait
pop
insl
mov
fdivs
ficompl
mov
rcl
push
js
nop
and
pop
mov
out
pop
fidivl
hlt
xor
or
push
mov
and
push
xchg
test
dec
repnz
fldcw
pop
mov
int3
subb
sti
imul
fwait
repnz
sub
pop
lcall
cmp
imull
or
repz
and
frstor
dec
stc
adcb
xor
dec
dec
shrb
adc
dec
out
cmpsl
jmp
je
frstor
sub
sbbb
mov
into
stos
adc
popf
cmpl
lods
cmp
insl
test
mov
ljmp
lods
sub
lods
pop
insl
lahf
movb
out
lcall
mov
cmpsl
call
loop
and
ret
mov
mov
fidivs
mov
xlat
jbe
lcall
cmp
xchg
jnp
adc
in
sbb
jmp
push
fcmovnb
enter
mov
xchg
stos
mov
dec
in
dec
inc
in
gs
mov
lcall
xchg
push
mov
arpl
fsubrs
inc
cs
pop
rol
sbb
inc
in
lea
shrb
push
stc
add
xchg
outsl
or
aam
push
hlt
jg
mov
out
mov
dec
dec
icebp
inc
popa
mov
cmp
stos
jbe
mov
dec
or
mov
jmp
pop
sub
push
fstpt
das
addr16
xchg
sbb
ret
xor
cmp
cmp
mov
xor
cmp
fdivl
mov
test
xchg
loop
xor
clc
cmp
stos
out
flds
outsl
in
je
rcrl
mov
jnp
in
ret
lds
jae
js
sub
inc
push
testl
mov
int
test
mov
inc
test
jmp
out
mov
loope
mov
popa
inc
ljmp
mov
test
xor
mov
nop
stos
and
aaa
jae
push
jl
and
pop
inc
rcrb
mov
mov
clc
enter
ljmp
leave
lods
or
popa
cltd
les
ret
xchg
and
daa
cmp
sub
mov
and
mov
punpckhbw
sub
shlb
cltd
or
hlt
sub
jae
shlb
shrb
mov
adc
mov
cmp
add
sbb
sbb
pushf
xlat
pop
mov
outsb
call
inc
bound
leave
xchg
mov
cmpsl
xor
jns
push
mov
dec
int
inc
int3
out
je
es
mov
mov
push
in
mov
sub
cmpsl
mov
or
std
or
dec
addr16
rcl
dec
idiv
jnp
and
aad
ret
push
sbb
int3
test
pop
jne
aaa
aad
insb
mov
insl
outsl
out
scas
loop
mov
adcb
mov
pop
orb
sbb
ficoms
inc
sbb
mov
cmc
mov
bound
repz
mov
cltd
rorb
dec
aas
loopne
mulb
inc
push
jne
adc
mov
inc
push
stc
and
add
test
sarb
loop
shrb
les
clc
inc
and
pop
addr16
nop
les
cmp
inc
and
sub
in
mov
shl
and
lahf
pop
and
jne
or
sub
cmpsb
push
adcb
mov
cmp
xchg
xlat
divl
out
mov
outsb
cmp
js
mov
mov
adc
jecxz
pop
fsubp
adc
fnsave
sub
mov
and
or
dec
iret
or
rcll
js
jg
je
fwait
inc
ret
cmpsb
stc
lret
gs
pop
aaa
mov
pusha
inc
aad
scas
imul
cli
daa
popa
cmp
mov
mov
lcall
test
enter
cmp
enter
jnp
cwtl
inc
xchg
inc
jns
test
jle
cmpsl
or
cmp
aad
cmpsl
ret
mov
test
xchg
and
fstp
mov
lea
xchg
inc
and
xor
inc
pushf
and
xor
dec
testl
stos
cli
sub
pop
aas
cmp
push
sbbb
mov
stos
pop
gs
cmc
lret
call
es
enter
and
push
xor
jno,pn
pop
and
add
popf
push
mov
lcall
pop
ret
lods
jns
push
add
mov
movsl
jae
in
sub
xchg
and
popf
xlat
xchg
test
xchg
ds
movsb
pop
mov
iret
insl
sbb
inc
insl
mov
icebp
dec
gs
and
bound
cmc
jge
roll
jecxz
inc
pop
ret
push
cwtl
mov
mov
clc
cmp
popa
push
sbb
xchg
mov
mov
adc
movsl
push
outsl
mull
jecxz
fistpll
jecxz
dec
sbb
insl
lret
and
cmc
xor
push
jo
stos
and
roll
xchg
push
jbe
into
test
lea
test
ljmp
or
popl
sbb
add
adc
xchg
fildl
imul
ss
notb
sub
in
push
bsr
iret
mov
daa
sarl
jg
lcall
fs
adc
or
and
or
sarb
mov
addb
shrl
jo
jns
inc
xor
sbb
xchg
sbb
ret
imul
stos
and
xchg
cld
pop
sbb
inc
jo
push
aaa
pushf
and
xchg
fiaddl
nop
push
pop
aam
clc
ss
cmp
sub
out
ss
push
mov
and
fnstsw
cmc
repz
cmpsl
add
push
iret
ds
popa
or
mov
aas
xchg
mov
push
inc
ja
push
sbb
xchg
sbb
push
js
loope
outsl
adc
mov
mov
sub
fwait
out
shrl
mov
mov
push
and
mov
mov
mov
cld
jmp
int
dec
hlt
cmp
or
in
mov
pop
xchg
inc
aam
fs
movsb
icebp
xchg
test
test
push
pop
scas
movsb
xor
pop
repz
sub
cs
push
pop
adc
inc
pop
aad
dec
sbb
xor
xor
lock
stc
mov
lods
push
jmp
mov
stos
test
dec
subl
imul
mov
cltd
sub
icebp
pop
and
xchg
in
add
or
ret
cli
mov
cmpsl
xor
test
dec
mov
ret
cmpsl
lods
jo
mov
call
aaa
adc
fcomp
rcrb
lods
into
pop
xlat
lods
xor
adc
jg
sahf
sbb
jne
pop
subl
mov
sbb
mov
cltd
int
pop
dec
push
pushl
push
es
outsl
popa
sti
int3
xchg
cltd
adc
jecxz
or
fs
ds
jns
sub
add
testb
jle
push
mov
jo
jbe
jns
jno
inc
inc
mov
es
int
push
fwait
in
cltd
dec
jle
jge
out
insb
jecxz
xchg
sbb
fst
xchg
adc
sub
int
xor
outsl
fadds
dec
mov
das
fisttpl
nop
sub
sbb
cmp
testl
ret
inc
test
inc
pop
fisubrs
movl
pop
fimull
mov
fsubr
adc
push
call
sahf
fwait
loope
or
pop
shlb
cwtl
push
adc
es
xchg
cmpsb
adc
shll
jge
jno
dec
mov
and
sub
popf
sahf
sbb
movsb
lret
or
and
adc
inc
xchg
and
cmp
lock
int
add
sti
and
cmp
scas
or
push
dec
lds
pusha
outsb
xchg
rolb
ficompl
add
cmp
sub
dec
das
sti
or
mov
xchg
imul
out
add
inc
sub
loopne
mov
sub
fs
inc
mov
cmpsl
icebp
aaa
adc
dec
xor
cmp
cltd
pop
lret
mov
ds
jecxz
in
sub
loop
sub
or
and
loop
lret
incb
lea
mov
in
outsl
xchg
sti
xchg
shrb
push
mov
mov
ljmp
xchg
inc
fildll
les
sub
adc
rcr
fstpl
adcb
push
add
mov
add
in
mov
adc
push
repnz
dec
adc
pop
add
test
ret
inc
push
inc
push
mov
outsl
push
frstor
jnp
lret
mov
mov
sub
out
inc
sbb
mov
add
push
xchg
push
mov
aaa
mov
leave
sti
mov
mov
mov
dec
jo
ljmp
pop
je
addl
adc
cli
push
pusha
stos
mov
jno
push
mov
sub
imul
or
and
aas
sbb
fisttpl
pop
xchg
xchg
ret
xor
and
push
mov
mov
stos
inc
jns
mov
sbb
test
xor
pop
sbb
cmp
rolb
pop
sbb
xor
repnz
iret
ss
clc
mov
clc
mov
popf
sahf
mov
mov
inc
mov
fstpl
add
or
lods
mov
aaa
mov
jmp
inc
fcoml
and
jne
ja
mov
sub
test
repnz
adcl
sbb
jmp
sbb
mov
add
cmpl
xor
lret
dec
dec
lods
sbb
mov
dec
lcall
pushf
int
adc
jecxz
mov
sbb
sub
scas
xor
pop
xor
mov
shl
sbb
lds
or
ja
mov
mov
adc
or
sbbb
sub
test
cltd
cmc
adc
call
popf
cmpsb
subb
popa
gs
jmp
mov
fsts
notb
push
pop
nop
dec
mov
in
mov
imul
cwtl
sbb
push
pop
fs
mov
mov
cmp
imul
adc
stos
inc
ret
out
nop
sub
xchg
ljmp
movsb
outsb
mov
stos
pop
cmp
pop
insb
movsb
outsb
ret
in
adc
xchg
sti
xlat
xor
out
pusha
sub
jmp
add
movsl
mov
clc
scas
xchg
cmp
jg
loope
imul
sbb
xor
in
rcrb
and
push
icebp
sar
outsb
int
add
loope
mov
xchg
pop
or
fidivrs
in
out
es
hlt
mov
mov
xchg
push
rcrl
xchg
add
jp
in
call
pop
xchg
and
out
ss
mov
fildl
jae
rcrb
mov
into
daa
mov
mov
xlat
xchg
push
pop
push
rorb
clc
jmp
or
daa
cmpsb
sti
and
inc
cmp
repnz
jp
sbb
aad
sbb
ds
clc
push
xorl
mov
pop
xor
sbbb
add
in
and
mov
mov
xor
add
and
mov
jl
jge
mov
xor
lock
fnstcw
sti
and
xchg
cltd
in
inc
mov
out
push
shll
push
jmp
out
imul
mov
add
or
jne
rcr
loope
mov
cmpb
inc
daa
jge
es
or
mov
sub
inc
mov
mov
sub
js
insl
gs
scas
or
dec
mov
pushf
lods
mov
nop
or
cmp
rcll
mov
pusha
stos
pop
mov
repnz
inc
inc
daa
xchg
dec
adc
xchg
rcll
jns
in
inc
into
sbb
lods
decl
ss
sub
add
mov
pop
lods
mov
jb
inc
push
adc
mov
add
add
xchg
or
imul
cmp
lret
xchg
and
lcall
pop
fisttps
mov
push
jp
inc
push
adc
add
dec
in
adc
mov
inc
cltd
xor
mov
cmp
mov
cmpsl
jns
adc
arpl
cld
pop
popf
and
sub
aam
mov
enter
jle
push
cli
idivb
xchg
mov
hlt
lahf
cmp
out
mov
test
ret
loopne
push
mov
sahf
clc
roll
pop
dec
or
xchg
xor
aad
hlt
ljmp
mov
iret
js
cmp
cwtl
mov
in
cmp
sbb
sti
jb
xchg
push
xor
ret
mov
adc
imul
js
mov
xchg
mov
out
mov
out
divb
inc
lahf
loope
or
into
in
push
inc
push
add
pop
ret
insb
mov
mov
stos
imul
xchg
sub
ret
lock
mov
pusha
cs
mov
xor
xor
in
imull
aam
push
mov
cmp
fs
pop
add
pop
adc
sbb
loope
sahf
add
icebp
push
xor
sahf
sahf
xchg
dec
cmp
das
fsubl
fistl
xor
enter
in
mov
mov
dec
mov
jecxz
dec
lea
mov
ret
inc
adc
gs
xor
jno
loop
mov
aas
lcall
jg
ror
aam
jg
or
jge
pop
loopne
mov
popa
adc
adc
call
lahf
sbb
lods
sbb
sbb
xchg
adc
push
lcall
jae
popa
sbb
or
data16
das
jle
mov
roll
cmpl
cmp
xchg
mov
or
es
or
fdivr
cmp
xchg
inc
rcrl
jl
je
mov
add
inc
dec
das
call
dec
lods
jno
xchg
outsl
fdivl
dec
push
pop
xor
mov
sbb
lcall
jo
and
cli
add
cmp
push
cmpsl
in
xchg
imul
mov
aas
out
jmp
outsl
sbb
dec
popf
jne
xchg
rorb
fidivrs
mov
popf
test
jmp
imul
stc
sbb
push
xchg
js
insb
add
xchg
repnz
jns
sarb
push
ret
xchg
jg
daa
cmp
cmpsl
add
lock
std
pusha
popa
cmpsl
loope
xchg
ljmp
es
jge
sbbb
or
push
lret
push
or
pop
xchg
add
inc
into
repz
gs
inc
pusha
and
out
negl
jl
jg
adc
mov
mov
nop
mov
push
jnp
pop
jnp
add
loop
hlt
lea
aaa
inc
sbb
add
cmp
cmp
or
pushf
out
test
xor
xorl
push
js
pop
sbb
jno
xor
dec
dec
dec
pusha
adc
push
popf
cmp
or
cmpsl
pop
mov
gs
mov
into
les
dec
push
scas
imul
and
xchg
scas
or
pop
jb
pop
or
rcll
mov
ret
fsts
xchg
lea
cmp
in
cs
fs
or
xchg
fstpt
enter
js
dec
or
pop
and
push
xchg
or
push
int3
pop
mov
sub
mov
sbb
std
xchg
pusha
mov
xchg
or
push
inc
dec
ja
adc
adc
push
dec
test
mov
dec
inc
mov
pop
stos
jmp
xor
shll
dec
jge
sbb
xor
rclb
or
cmpsl
cmp
push
cmp
loop
lret
mov
in
push
cmpsl
sbb
icebp
xchg
inc
dec
pop
jb
xor
or
xlat
and
cmp
push
add
sub
or
dec
stos
out
sti
pop
icebp
pop
icebp
xchg
addr16
and
and
ljmp
add
jne
ss
xor
inc
testl
mov
enter
push
repz
imul
jns
jg
rcrb
into
fdivs
mov
pop
jo
unpcklps
sti
cwtl
sub
mov
jge
scas
rcrb
daa
insb
cwtl
cmp
scas
push
mov
jbe
mov
jae
cld
and
adc
ds
les
and
aad
lret
lods
aam
scas
sub
xor
add
loope
xchg
or
inc
push
pop
sub
pop
aad
pop
test
xor
cltd
pushf
inc
xchg
outsb
fsubr
adc
movsl
mov
mov
fadds
jl
addr16
clc
inc
fisubl
ljmp
repnz
sub
sub
or
fidivrs
mov
idiv
mov
stos
sub
out
pop
in
roll
enter
in
pop
shrl
leave
mov
jbe
icebp
pop
dec
push
in
adc
mov
aaa
shl
cs
add
push
xchg
and
mov
sti
incl
out
add
movsb
cmp
xchg
js
and
add
jle
mov
fwait
pop
adc
mull
sbb
add
enter
cltd
in
cmc
or
push
out
lret
push
pop
push
mov
aad
test
xchg
fcoml
push
addb
mov
inc
add
loop
aad
xchg
push
and
dec
aam
mov
sub
mov
popf
adc
push
ss
xor
add
inc
and
cltd
in
mov
xchg
mov
fdivl
out
cmp
push
adc
mov
fmull
sahf
outsl
cli
outsb
int
stos
push
and
testl
aaa
inc
sbb
popf
cmpb
ljmp
mov
mov
mov
dec
lea
arpl
jmp
test
adc
fisttpl
insb
cmc
pop
aad
cltd
fwait
int3
movsb
mov
roll
rol
inc
mov
or
cmp
mov
loope
pop
jmp
insl
cmp
lret
pop
xabort
fbld
push
pop
das
ret
lcall
lock
mov
xor
dec
and
ljmp
push
pcmpeqb
inc
mov
fs
sbbl
cmp
mov
push
pusha
rorb
aaa
lea
mov
inc
ja
and
mov
data16
mov
mov
cmp
cmpsb
dec
dec
xchg
or
push
add
push
or
pop
das
adc
dec
jae
push
push
ja
sahf
jnp
add
pusha
dec
adc
mov
stos
mov
or
jle
jp
mov
xchg
sub
lock
shl
shlb
mov
mov
mov
jno
push
loop
cs
cmpl
xor
mov
adc
push
cmp
pushf
mov
adc
divl
int
sti
jmp
addr16
pop
insb
xchg
out
into
scas
and
cmp
and
mov
mov
negl
fstpl
dec
les
pop
fwait
rolb
ljmp
scas
stos
fadd
adc
aas
popf
mov
rorl
pop
outsb
in
test
popf
push
sub
subb
sub
push
das
dec
mov
stos
imull
add
xor
incb
outsl
mov
fwait
ret
fs
jo
sbb
jo
aad
addb
and
jns
sbbb
idivl
fcomip
out
inc
xchg
cmp
xchg
mov
mov
cmp
adc
add
mov
jecxz
ds
mov
ja
fimull
push
mov
mov
fdivr
dec
mov
pop
in
aas
fcomp
xchg
push
rol
push
out
loopne
jmp
xchg
fcoml
movsl
mov
push
ds
sub
xor
lcall
stos
lcall
les
dec
fwait
and
sub
cltd
out
stos
rcl
out
pusha
adc
ljmp
fidivrs
mov
cld
push
sbb
cmp
mov
test
loope
add
jo
sbbb
stos
inc
jae
mov
or
out
mov
xchg
aas
dec
add
push
xchg
es
xchg
leave
inc
dec
xchg
xchg
in
add
roll
nop
sbb
imul
xlat
in
xchg
or
test
popf
int
imul
cld
sbb
push
rcr
xchg
fsubrs
jp
les
int3
jno
insl
mov
std
dec
fdivr
add
pushf
adc
sahf
or
pop
in
cmp
jle
cmp
mov
mov
sarb
xor
push
and
inc
fmull
pop
aaa
hlt
test
or
jns
pop
jle
jmp
adc
sahf
repnz
js
dec
push
xchg
and
pop
xor
cmpsb
or
in
outsb
ds
xchg
mov
jg
jne
lret
xor
les
cs
jg
jecxz
sub
cmp
dec
xchg
inc
in
push
add
sub
jle
jg
in
cmpsb
stos
in
cmc
sub
xor
push
add
mov
sbb
loope
pop
xchg
pop
or
test
mov
out
cmp
sub
mov
and
lret
dec
jns
fwait
mov
jnp
shll
push
stos
jecxz
inc
mov
or
mov
enter
pop
jp
mov
stos
aas
in
push
stos
fisubrl
ds
rclb
mov
add
sbb
and
mov
cltd
and
mov
and
add
andl
mov
loopne
pop
dec
xor
xor
or
imul
sub
mov
out
sbb
push
xchg
pop
cli
adc
out
push
jge
pop
add
fnsave
inc
aam
mov
jle
imul
xchg
or
mov
jnp
mov
inc
xchg
testb
aad
ret
dec
aad
adc
dec
into
repz
out
hlt
xor
xchg
inc
push
ret
pop
sbb
or
mov
push
rcll
mov
xchg
dec
cmc
lods
mov
jo
andb
iret
add
fs
jp
aad
pop
sub
pop
push
lods
jne
insb
sub
sub
mov
pushf
add
hlt
xor
adcl
push
inc
mov
jno
cltd
pop
cmp
cmp
ljmp
push
stc
icebp
aas
jo
jl
or
mov
in
or
cmp
inc
not
jae
mov
aad
popa
lock
shlb
adc
mov
sub
lock
ja
loope
leave
xchg
mov
jbe
mov
cmp
in
adc
mov
sub
mov
sbb
addr16
int
pop
mov
movsb
fsub
mov
dec
sub
test
dec
pop
popa
sub
std
bound
sub
adc
sbb
insb
add
fwait
sub
or
xor
pop
adc
lods
stc
cld
sbb
pop
or
and
bound
dec
in
stos
xor
shll
pop
daa
and
or
in
mov
jne
or
pop
lods
es
test
add
dec
nop
mov
cld
lahf
mov
cld
mov
mov
aaa
push
out
stc
sbb
pop
sub
mov
cmp
mov
rolb
push
pushf
cwtl
mov
and
adc
sbb
loope
cmpsl
or
dec
bnd
jo
pop
insb
sarb
lods
repz
iret
or
push
int3
cmp
lcall
jl
lcall
jne
es
add
mov
xchg
jg
scas
adc
ljmp
xchg
jb
shlb
mov
sub
jb
in
xor
sub
ret
movb
fistpl
mov
jno
cmp
dec
mov
pop
mov
not
push
int
out
xchg
aas
add
mov
push
mov
add
mov
push
movsl
mov
xchg
sahf
jge
mov
sub
nop
or
cwtl
jbe
les
pop
ret
lahf
lods
test
mov
mov
jmp
mov
incl
movsb
mov
xor
stc
ret
shr
and
mov
lods
add
adc
inc
mov
xor
movsb
lcall
jbe
addb
js
popa
ficoml
mov
rcrb
ja
out
pop
add
rclb
pop
daa
xor
test
fadd
mov
sbbb
cmp
stc
enter
jecxz
lret
cmc
lret
es
int3
mov
enter
sub
test
mov
cmc
repz
xor
mov
dec
test
add
jo
xchg
aaa
outsb
sti
mov
and
testl
sub
inc
daa
fistpll
mov
xchg
shr
mov
stc
cmp
popa
aad
lahf
push
sbb
cmp
pop
add
outsb
daa
fwait
shl
aas
add
push
out
out
int3
movsb
ss
fmull
cmp
jns
mov
xor
jp
pop
push
aas
notb
push
sbb
xor
ds
push
pop
fistpl
cmp
sbb
mov
push
pop
mov
fwait
out
mov
cmp
ret
mov
mov
push
test
ss
dec
jmp
imul
pop
aam
sbb
sbb
ja
out
mov
push
jecxz
or
xor
add
in
in
xchg
or
aam
sub
mov
sbb
cmp
cmpsb
aad
lods
mov
lret
xor
xchg
mov
mov
cmp
repnz
stos
mov
or
repnz
xchg
jmp
imul
sbb
pop
mov
adc
mov
sbb
lahf
lahf
cld
or
mov
push
pop
mov
ror
add
sub
clc
lret
lods
xor
adc
int3
movsb
mov
cltd
add
test
xchg
xchg
fwait
test
sub
nop
loope
inc
inc
cmp
sub
popa
mov
js
int
inc
lock
sbb
or
inc
pushf
test
test
xorl
pop
lock
dec
imul
push
shlb
xchg
cwtl
inc
sub
inc
sbb
dec
hlt
pop
int3
dec
movsl
insl
movsb
jbe
mov
push
or
movsl
pop
notb
push
cmp
dec
mov
icebp
xor
fistps
sbb
pop
or
jp
mov
push
or
xchg
shl
sbb
aas
in
loope
xchg
mov
repnz
xchg
cs
sub
inc
and
mov
out
lods
adc
push
subl
cmpsb
out
cmc
addr16
jns,pn
std
xchg
mov
inc
sub
adc
scas
out
outsl
rcl
mov
stos
rcrb
mov
push
xor
xlat
lahf
fmulp
add
push
add
scas
pop
add
and
lahf
shr
push
lods
jnp
lar
hlt
in
mov
jne
add
and
jae
daa
push
out
xchg
outsb
dec
out
pop
inc
pop
dec
stos
daa
mov
dec
add
out
sub
lret
les
rcrl
fs
xchg
dec
push
ds
mov
cmp
ds
nop
jle
shrb
mov
lahf
loopne
cmp
dec
mov
add
push
and
and
scas
out
add
mov
xchg
cmc
aam
and
icebp
inc
jne
push
add
leave
lret
in
xor
pop
insb
imul
fstl
enter
add
xchg
push
mov
jne
pop
jb
inc
jg
adc
dec
in
jbe
mov
mov
cmpsl
mov
pushf
popf
mov
pop
jp
arpl
js
lret
pop
cwtl
rorl
pop
xchg
mov
dec
add
mov
jl
je
aas
inc
adc
cmp
mov
mov
mov
pop
cmp
or
mov
push
adc
pop
jp
lcall
out
dec
add
add
les
cmp
aaa
push
ss
lock
adc
add
jae
push
orl
outsl
mov
sbb
pop
int3
pop
xor
rcl
mov
addr16
popa
xchg
jle
mov
shll
je
das
xor
sub
shll
cmp
add
mov
mov
pop
dec
pop
mov
xchg
fiadds
sbb
sub
andl
xchg
sub
int3
jecxz
mov
pop
aam
mov
xor
dec
push
and
lods
test
popa
cwtl
mov
pop
pop
push
xchg
mov
clc
xor
dec
xchg
lret
outsb
cmp
and
les
and
mov
pop
paddb
sbb
aam
in
dec
test
push
jl
test
push
add
mov
xor
bound
mov
jp
test
xor
pusha
jp
cmp
out
out
cmp
xchg
inc
or
mov
sbbb
pop
mov
sbb
fisubrl
pop
out
pop
bound
pop
push
push
push
add
jp
mov
fcomip
stos
outsb
lret
xchg
sub
stos
mov
jmp
xorl
xor
and
clc
mov
dec
sbb
lret
mov
mov
ljmp
das
and
push
or
pop
mov
inc
mov
outsl
add
js
pop
mov
adc
cwtl
or
aas
mov
in
adc
test
js
add
shlb
dec
aad
cmp
sbb
jno
mov
pusha
imul
mov
xor
push
arpl
push
clc
ja
cli
loope
fiaddl
cmp
cmp
or
popf
push
iret
push
iret
fsubr
mov
icebp
nop
insl
inc
cli
jecxz
pop
mov
adcb
pop
mov
dec
clc
push
inc
inc
cwtl
stc
scas
js
or
shlb
arpl
paddb
and
push
lret
pusha
dec
xchg
cmpsb
push
sbb
gs
add
sub
and
mov
lret
shll
adc
and
push
rolb
es
aam
inc
xor
sub
in
jo
mov
nop
dec
out
xorb
fimull
in
inc
ds
lahf
test
or
push
cmp
lahf
imul
and
add
push
xchg
or
into
and
in
repz
xor
dec
jns
mov
cmp
pusha
sub
jg
sub
loopne
jns
sbb
test
pop
addr16
fucom
sbb
addl
cmp
cli
mov
push
scas
push
xchg
lcall
pusha
mov
in
inc
push
adc
mov
addr16
add
sbb
addr16
sub
mov
add
and
push
lds
daa
xchg
std
jne
dec
and
notb
adc
push
lds
adc
das
loope
jp
inc
inc
aas
andb
xor
popa
daa
cmp
xchg
add
mov
mov
pop
shl
pop
movsb
push
xchg
jnp
popl
sahf
and
idiv
cmpsl
cmc
adc
popa
xor
daa
mov
xor
push
mov
add
or
or
inc
or
insl
mov
add
sahf
pop
cld
dec
orb
fwait
mov
jnp
or
mov
nop
inc
test
lret
sahf
data16
gs
xchg
out
bound
mov
xchg
aas
in
stos
xor
shl
mov
dec
int3
xor
lock
ds
cmp
jns
mov
pushf
adc
mov
inc
cmp
xchg
push
fcoms
movsl
out
push
pop
xchg
inc
mov
add
repz
push
mov
cmp
push
mov
test
adc
xlat
or
mov
call
cmp
aas
stos
push
cld
adc
push
push
or
and
jns
lods
cmp
adc
jno
pop
push
punpckhwd
mov
sbb
mov
or
adc
les
pop
dec
sbb
sub
xlat
loopne
pop
rcll
fsubp
inc
jp
and
push
xchg
fsubr
in
ljmp
lea
mov
mov
push
xchg
mulb
xor
cmp
leave
sti
add
xchg
push
sbb
in
or
in
leave
fisttpll
rcrl
xor
mov
adc
outsl
add
sub
push
mov
jns
pop
add
ss
sbb
lods
and
call
shlb
aam
add
fcmovne
cmpsb
je
lret
and
divb
movsl
add
outsb
dec
xchg
dec
pop
add
and
jmp
addr16
test
loopne
loopne
in
dec
or
aas
push
pop
mov
loopne
aam
pop
fnstcw
fmuls
or
shll
pop
jo
pop
loopne
dec
or
fucomp
jb
insb
mov
fisubl
adc
shl
nop
roll
pop
xorb
pop
enter
fstpt
hlt
mov
fucomp
insb
mov
test
imul
lds
lret
cmp
sub
movsb
push
inc
ror
pop
iret
out
mov
int3
jmp
pop
pusha
out
aam
mov
fs
and
jnp
mov
xchg
cwtl
pushf
aas
outsl
or
inc
jns
outsl
or
les
shll
cmp
mov
xchg
ljmp
orl
stos
hlt
inc
mov
test
movsl
dec
dec
call
lock
mov
push
pop
cmpsl
xor
fsts
or
fildll
xor
imul
or
jl
inc
sub
jno
movsb
orl
push
jae
and
inc
mov
push
adc
cmpsb
cwtl
cli
xchg
lea
add
xor
imul
int3
inc
cmp
outsb
mov
pop
int3
sbb
adc
jp
sbb
insb
out
cmp
sbb
pop
pop
mov
aam
pop
adc
sbb
mov
and
xor
pushf
xlat
sbb
xchg
and
xchg
rol
addr16
loopne
sbb
imul
ret
pushf
cmp
mov
daa
std
mov
jle
adc
les
out
fnstenv
and
inc
stos
xchg
inc
fildll
push
cli
rorl
inc
lret
dec
sub
push
cmpsb
add
push
sub
mov
je
xor
cmp
inc
sbb
adc
enter
rolb
pop
lock
xchg
lds
add
xchg
sbb
inc
xor
and
mov
xor
loopne
pop
imul
mov
mov
int
dec
rolb
sarb
repnz
pop
fst
mov
fcomp
mov
aad
int3
xor
xchg
add
ret
cwtl
mov
std
ja
xchg
fmull
arpl
pop
add
std
shrb
mov
int
data16
inc
mov
pop
sbb
loope
mov
jae
jnp
sbb
imul
dec
lcall
xchg
jl
je
lret
jge
nop
in
movsb
dec
fnstenv
add
daa
fisubrs
or
mov
cmp
mov
sahf
jge
enter
mov
lds
aas
adc
mov
cwtl
scas
sbb
stc
add
adc
sarl
insl
loope
xor
out
add
xchg
int
dec
fbstp
mov
aas
add
inc
insl
ja
hlt
leave
in
rcll
cmp
and
jl
pusha
rcll
cld
jmp
mov
data16
fdivr
call
xchg
mov
pop
mov
testl
pop
push
add
popf
inc
inc
cmp
pop
repz
and
ror
rcrl
sub
repnz
xchg
dec
sbb
das
sbb
cmp
and
push
rorb
jecxz
inc
jns
and
mov
xor
inc
outsl
xchg
xchg
jbe
mov
push
cmp
mov
pop
adc
jmp
jecxz
and
jmp
mov
cmp
mov
inc
xchg
mov
jno
arpl
stos
enter
or
lret
dec
cmpsl
dec
ret
xchg
adc
das
inc
out
and
cmpsl
or
fistpll
test
es
icebp
xchg
xchg
mov
and
xchg
imul
dec
das
sub
lods
inc
adc
lods
mov
data16
outsl
push
mov
mov
addsubps
cmpsl
loope
stos
sub
orl
lcall
pop
imul
cwtl
mov
sbb
inc
and
stos
arpl
push
add
cmovns
sarl
jg
xchg
pop
scas
xchg
or
and
or
inc
push
pop
push
mov
addr16
mov
iret
rcl
cmp
mov
or
mov
mov
fstps
int3
call
je
dec
cwtl
sbb
aas
cwtl
pop
fistps
mov
push
push
inc
mov
out
mov
loope
push
push
leavew
or
sub
pop
inc
mov
stc
inc
imul
ret
les
adc
sbb
xchg
pusha
fdivr
inc
mov
in
xchg
es
mov
dec
test
cmp
negb
sub
cld
inc
push
cwtl
lock
fstpl
mov
in
fistpll
jne
loope
aad
fldcw
adc
fstpt
jp
sti
mov
mov
test
pop
ret
cld
and
adc
jle
pop
bnd
inc
and
mov
stc
fsubrl
popf
xchg
testb
and
aad
fcompl
sarb
int
lock
cs
push
orl
dec
into
fstpt
xchg
mov
das
sbb
dec
mov
fcoms
loop
fwait
push
or
mov
or
inc
ret
xlat
lods
data16
dec
cmp
inc
fcomps
adc
or
test
dec
mov
popf
ret
inc
xor
sub
xor
iret
rclb
add
adc
sbb
in
pop
mov
bound
jne
bound
cld
lock
pusha
fsubs
sarb
bound
std
imul
jno
dec
ficomps
dec
dec
std
mov
fmull
test
les
test
in
nop
loopne
cmp
adc
and
or
and
in
sub
xor
mov
and
mov
addr16
cld
dec
mov
xchg
cmpsl
cld
pop
je
mov
mov
sub
fwait
lahf
jl
and
cld
push
xchg
cmp
mov
pop
pop
mov
insl
lds
aam
mov
out
lods
jp
call
push
movsb
adc
jns
pop
adc
adc
sbb
jl
imul
mov
and
jp
add
push
pop
dec
jg
push
push
inc
xor
add
cmp
bnd
mov
mov
push
nop
xchg
out
cmp
aaa
lret
sub
in
rclb
dec
or
jns
loopne
test
sub
shl
nop
xor
cwtl
and
mov
ja
in
out
insl
push
imul
xor
movl
ss
in
pop
adc
cmpsb
xchg
push
mov
mov
mov
adc
ret
popf
mov
inc
ror
into
adc
mov
in
dec
dec
push
sub
push
repnz
in
ljmp
push
ljmp
and
outsl
jge
and
or
xchg
sti
ret
jno
aam
pushl
adc
fstl
cmp
add
test
lods
stos
push
movsl
inc
sbb
mov
push
leave
sbb
enter
mov
arpl
mov
xchg
and
mov
dec
pop
jns
inc
push
mov
fbld
rcrb
sbb
or
popf
lock
leave
imul
fisttps
cli
hlt
or
mov
push
fisttpll
sub
xchg
adc
in
test
add
stos
je
push
cmp
and
fstpt
dec
push
hlt
lea
outsb
dec
cmp
xor
jnp
fwait
push
jno
lods
lods
stc
or
orb
into
xor
mul
xlat
mov
je
ja
dec
fstl
shr
notl
jnp
dec
mov
lods
cld
out
push
les
nop
adc
loope
imul
jp
inc
ja
loopne
xor
arpl
mov
add
push
movsb
sub
push
or
lret
xchg
jns
movsb
sub
aaa
inc
test
sahf
movsl
rorl
insb
push
repnz
or
add
enter
movsb
sub
fadds
xor
scas
adc
ljmp
fwait
js
popa
sbb
mov
in
sbb
pop
mov
mov
or
es
pop
imul
push
push
mov
ljmp
dec
scas
enter
jo
ljmp
fdivp
cs
and
xor
or
clc
push
iret
push
std
mov
jnp
pop
cmp
mov
lahf
mov
js
jb
cmp
adc
je
scas
push
daa
outsb
sbb
pushf
mov
or
into
les
xor
bound
icebp
sbb
inc
sub
xchg
rcll
jmp
stos
adcb
dec
sub
std
mov
ja
jnp
cmpsl
fcoms
fcmovbe
cmp
sbb
dec
mov
dec
lcall
xor
lret
mov
cs
aas
das
mov
mov
nop
std
push
fstl
or
or
inc
add
and
adc
in
orl
cmp
das
outsb
xchg
ret
sub
jmp
or
dec
adc
cld
push
xchg
mov
out
inc
lds
adc
into
pop
int3
daa
inc
and
roll
lods
mov
mov
repz
sbb
xchg
mov
negl
pop
lea
push
jnp
xchg
notb
or
test
test
mov
and
cmp
in
or
sti
js
lds
mov
pop
ret
ja
lock
mov
pop
test
jns
pop
sbb
sbb
adc
sub
into
jne
loop
mov
add
jle
pop
mov
push
decb
pusha
and
mov
rcrb
aaa
mov
adc
bound
movsb
dec
daa
cmp
inc
imulb
mov
jge
add
cltd
jae
cmc
movq
pop
stos
cmp
cld
add
movl
call
jb
divb
mov
or
or
std
adc
push
addl
adc
xchg
inc
dec
sub
xchg
dec
stc
sbbl
lahf
push
sbb
je
jecxz
pop
cltd
out
and
pop
xchg
xchg
je
or
js
inc
cmpxchg
out
dec
mov
js
pop
xchg
mov
xor
cmpsb
inc
ret
ds
sti
jne
mov
add
dec
ss
into
inc
in
and
adc
mov
cmp
pusha
fstpt
aam
rolb
push
mov
bound
cmpsl
jb
sbb
pushw
jmp
dec
push
jns
aam
jae
and
clc
test
mov
push
popf
jns
dec
sti
push
scas
out
pop
mov
sbb
rcrb
das
mov
push
mov
sub
xchg
ss
mov
pop
push
inc
out
outsl
ret
popf
pop
in
add
dec
and
and
insb
pushf
addr16
dec
mov
jnp
xchg
sbb
popa
fstps
inc
mov
testb
outsb
outsl
mov
jp
push
popa
sub
shr
imul
mov
in
sarb
aaa
std
lahf
lds
xchg
into
lods
push
jns
in
mov
ljmp
insl
arpl
movsb
cld
cmp
sub
sbb
sub
cwtl
pop
scas
pop
mov
push
jle
add
xchg
mov
pop
push
adc
push
fsubp
outsl
arpl
sbb
stos
out
adc
xor
or
adc
cmp
dec
jae
or
mov
mov
arpl
lea
daa
es
cwtl
mov
test
dec
push
sbb
loop
mov
jbe
mov
xchg
lods
lds
scas
xlat
lods
dec
int3
adc
jnp
dec
ss
iret
fisttpll
adc
jbe
xorl
cld
add
out
or
addr16
push
xchg
mov
cmc
sub
fsubr
dec
and
das
ds
fistps
mov
cmp
adc
adc
push
lods
cmc
push
push
add
lret
ret
inc
test
lahf
lods
lods
pop
jmp
xchg
test
jo
adc
mov
lahf
ss
push
shlb
mov
gs
push
fsubl
xchg
dec
xchg
shll
inc
xor
adc
movd
push
sub
adcl
mov
test
int
push
dec
cmpsl
hlt
or
test
jg
stc
fsubrl
lods
stos
cmc
jp
insl
mov
hlt
les
xchg
push
test
push
jbe
xor
and
test
jp
mov
popa
inc
xor
pop
adc
shrb
push
inc
add
inc
sbbl
sbb
mov
mov
pop
cltd
mov
dec
push
sub
gs
lods
xchg
inc
lret
push
adc
dec
mov
fsubr
xchg
push
idivl
pushf
movb
inc
cmp
pop
cmpl
mov
sbb
mov
lds
sbb
js
push
inc
pop
xchg
in
fidivrl
into
add
mov
ss
xchg
sbb
shrb
leave
push
mov
stos
cmp
dec
fistps
nop
push
jp
pop
cmp
dec
sbb
dec
cmp
fidivl
outsl
mov
sbb
call
push
clc
insb
aad
fistps
sub
inc
ss
inc
jp
scas
loop
pushf
sbb
xor
jg
xchg
mov
pop
sub
inc
clc
xor
push
xchg
cwtl
cmc
aad
or
sbb
loope
cltd
decb
dec
icebp
testl
js
rcl
ja
iret
pop
pop
sub
je
inc
mov
loop
push
adc
mov
jbe
movsl
cmc
flds
xor
mov
sub
out
cli
pop
leave
cwtl
bound
push
popf
pop
jbe
loopne
cld
pop
mov
cvttss2si
daa
inc
inc
lahf
dec
nop
ret
leave
jp
je
lahf
or
dec
daa
incb
xchg
sub
ljmp
in
arpl
adcl
out
mov
ret
add
fcmovbe
aaa
adc
push
sbb
mov
aaa
shlb
rclb
dec
jb
xchg
sbb
in
loopne
out
frstpm(287
negl
or
push
dec
insl
lods
push
fwait
sbb
mov
jnp
cmp
stc
mov
ss
adc
inc
mov
scas
iret
mov
add
mov
push
push
add
out
mov
je
jl
push
sbb
inc
push
jmp
jecxz
cmp
dec
imul
mov
push
sub
imul
jle
leave
cmpsl
insl
ds
movsl
imul
les
out
add
lods
add
cmp
pusha
jne
lds
subb
sar
push
ret
and
inc
imul
mov
push
cli
or
sbb
int
and
mov
out
adc
sahf
mov
xchg
xchg
cmpsl
lcall
sub
dec
jb
inc
and
cmpsl
mov
sub
aaa
jg
cmp
nop
mov
jno
outsl
sub
push
insl
cmpsl
lret
inc
stc
icebp
sbb
xchg
pop
add
add
ds
xchg
push
mov
pop
adc
enter
fwait
pop
push
leave
repz
out
and
dec
je
fmulp
push
jbe
imul
outsb
pop
mov
xor
movsl
xchg
mov
lahf
sbb
mov
std
fimull
jecxz
mov
sbb
popf
adc
fwait
fs
jg
xlat
adc
js
ljmp
inc
and
out
push
cmp
pushf
jnp
pushf
or
mov
or
cmp
rorb
jg
stos
ljmp
stos
push
xchg
cmp
vsubps
jmp
inc
ret
lahf
sub
enter
xchg
iret
push
negl
mov
fisubrl
xor
lods
lods
aaa
int3
pushf
lds
add
add
jmp
fstpt
cmp
lret
mov
xchg
cli
cmc
xor
xchg
mov
movsl
repnz
jnp
mov
xchg
inc
xchg
cmc
std
mov
rolb
xchg
mov
addb
mov
mov
fiadds
sbb
mov
fisubrl
stos
pusha
xor
adc
jl
sbb
stc
cmp
xchg
ss
mov
sbb
loopne
sub
jg
es
mov
mov
jb
lea
aad
ret
shll
jb
add
jmp
xor
ja
jg
mov
jo
sahf
mov
or
push
inc
add
push
sub
pop
stos
int3
popl
mov
push
pop
adc
mov
xchg
sub
jno
cmp
cmp
jns
pop
push
xchg
enter
lcall
insl
mov
into
testl
sar
dec
adc
pop
scas
mov
ss
jge
sub
mov
sbb
outsl
adc
dec
adc
je
xor
out
arpl
ret
mov
pop
cli
or
inc
sti
rolb
js
enter
push
mov
pop
js
je
or
lahf
out
or
push
leave
push
fldt
rcrl
mov
sub
stos
lds
mov
jns
xchg
sbb
outsl
push
fists
inc
jae
xor
repnz
mov
dec
sbb
insl
cmp
out
adcl
fbstp
int
or
test
mov
stos
xchg
or
xor
push
inc
aas
dec
icebp
adc
iret
or
stos
adc
dec
enter
inc
dec
ss
adc
cmpsb
sti
pushf
rdmsr
das
mov
cld
jg
xchg
fs
jecxz
xchg
pop
pop
push
pop
or
sbb
dec
scas
add
jns
sbb
push
stc
lock
pop
mov
xor
add
mov
cmp
pusha
or
sti
xchg
mov
sbb
add
and
mov
aaa
pop
dec
fsubrs
mov
and
outsb
xchg
xchg
test
outsl
push
jp
xlat
imul
dec
cmp
adc
and
rcrl
flds
cmpsb
mov
arpl
xor
loop
pop
addr16
lods
cmovge
mov
adc
ljmp
mov
aam
into
mov
mov
mov
sarb
testl
dec
std
cmp
push
push
sbb
out
push
dec
popf
ret
sub
mov
adcl
cli
ss
xlat
jbe
sub
cs
bnd
pushf
mov
push
into
add
pop
jle,pn
in
or
pop
adc
mov
pop
jno
mov
mov
es
int
movsb
xchg
xor
push
imul
dec
jns
inc
mov
and
pop
jle
adc
into
lcall
lds
lahf
lods
mov
ficoms
aaa
aaa
stc
stos
push
jnp
push
lea
inc
jns
ljmp
lea
mov
stos
dec
mov
ret
icebp
repz
pop
lahf
lret
mov
daa
xor
sysexit
jp
cmp
xchg
mov
shll
in
icebp
dec
inc
cmp
test
cmpl
ret
ds
cmp
sub
fcoml
std
mov
movsl
xchg
lods
lds
mov
adc
pop
inc
test
loope
les
adc
add
mov
sbb
pusha
jl
dec
inc
xor
mov
roll
inc
repnz
sbb
push
pop
pop
or
mov
movsl
cmpsl
xor
jo
or
mov
aad
addr16
dec
mov
filds
mov
jne
data16
cmpsb
and
xchg
imul
adc
inc
jae
lods
fisubl
loope
lods
jno
mov
inc
mov
sbb
pop
leave
aaa
push
cmp
in
mov
notl
leave
sbb
movsb
xchg
or
push
dec
pop
pop
lods
push
andb
aad
xchg
add
ret
lods
mov
mov
mov
fwait
ds
jbe
cs
mov
test
xor
sbb
stc
scas
sub
sbb
cld
cmp
insl
jo
outsl
negl
repz
scas
das
stc
js
mov
mov
cmp
insl
sbb
pop
and
sub
sbbl
xchg
imul
jo
in
arpl
lods
fdivp
mov
inc
and
in
jnp
gs
adc
movsb
cltd
inc
xchg
out
in
fnstenv
js
or
aaa
inc
mov
int3
fdivp
aas
js
mov
std
xchg
aas
cli
lahf
addr16
push
cmp
mov
nop
movsb
mov
cmp
mov
out
repnz
imul
outsl
xor
xchg
add
mov
dec
je
or
in
sbb
into
add
std
and
rcrl
xor
shrb
dec
into
lods
xchg
sahf
fdivr
outsb
push
inc
push
xor
adc
imul
cmp
clc
sbb
mov
push
test
test
xor
cltd
iret
ret
mov
mov
jl
and
enter
out
popf
loop
cmc
dec
mov
popf
enter
xchg
mov
and
cmpsb
fnstenv
imul
dec
push
xchg
jbe
shl
push
in
pop
test
jae
hlt
xchg
and
stos
add
mov
inc
mov
dec
aaa
testl
jnp
ja
shll
mov
xor
ficomps
leave
insl
jmp
xor
inc
jmp
cmpsb
push
sbb
xor
adc
push
pop
cwtl
xchg
add
pop
dec
lcall
cmp
aad
lahf
cli
data16
or
in
lods
mov
icebp
in
mov
in
test
addb
pop
xor
push
shll
or
xor
in
push
cmp
or
pushf
jae
into
stos
out
jb
push
stos
shlb
mov
mov
mov
or
rcrb
sar
add
popl
xchg
fisttps
jmp
jnp
push
fstpl
test
mov
dec
cmp
jnp
dec
test
out
fdivr
int
incb
xor
inc
testl
outsl
repz
and
push
out
je
push
inc
inc
or
je
xor
sub
jecxz
cmp
and
cs
das
pop
filds
dec
cmp
push
insl
pop
xor
in
loopne
xchg
andl
jp
jae
repnz
adc
iret
inc
pop
negb
leave
jb
xchg
push
int3
loopne
xlat
sub
and
shll
mov
cwtl
mov
jno
icebp
mov
aad
pop
addb
ficompl
and
int3
sti
mov
out
cmpsb
adc
sub
dec
mov
mov
andl
outsb
insl
mov
outsl
inc
loopne
push
shll
in
loopne
out
loop
jle
loope
fwait
push
enter
out
std
xlat
jecxz
sbbl
ds
mov
bound
fwait
jecxz
xchg
jbe
movsl
mov
or
add
fs
lret
inc
mov
pop
les
insl
dec
dec
js
xor
xchg
pop
mov
xorl
lret
hlt
jnp
xchg
fsubp
xor
push
mov
js
inc
inc
cmp
repz
leave
dec
rcrb
cltd
out
imul
out
pushf
sbb
add
test
mov
gs
adc
push
mov
sub
push
dec
inc
out
js
xchg
je
int3
enter
scas
icebp
aam
shrb
xchg
addr16
or
push
shl
fisubrs
loopne
flds
pushf
rclb
or
sbb
in
fcoms
cmp
dec
pop
add
cmc
dec
push
mov
roll
inc
jge
sbb
outsl
lods
mov
pop
lea
push
mov
sbb
aad
push
rolb
pop
pop
testl
mov
loopne
jmp
pop
or
loope
test
mov
fwait
adc
xchg
push
shlb
out
mov
xchg
adc
add
shr
dec
or
mov
push
jg
push
dec
ret
cltd
jne
outsb
cltd
lahf
push
mov
inc
cmp
xor
sbbl
icebp
xor
test
andl
push
sub
xchg
xchg
mov
add
add
and
push
push
or
idivb
mov
shrl
pop
nop
jecxz
aad
pushf
loop
mov
out
loop
and
ds
lret
xchg
mov
lods
push
cli
sbb
push
sbb
or
push
pop
adc
adc
scas
push
or
mov
jno
jb
mov
mov
bound
enter
cltd
pop
cmp
in
test
or
rorl
push
or
pop
dec
ss
mov
int
ss
into
and
push
pmaxub
or
add
adc
pop
xchg
push
adc
mov
lods
lods
cmp
sbb
push
clc
dec
test
arpl
xor
mov
jp
or
and
into
lods
mov
xchg
hlt
or
jge
sbb
or
arpl
stc
adc
int
stos
frstor
mov
inc
mov
sbb
cmp
jae,pn
xchg
sbb
xor
pop
lods
lea
inc
mov
leave
imul
das
rorl
sarl
adc
push
divb
sarb
dec
repnz
push
jnp
mov
std
jb
jb
fsubrp
cmpsb
or
imul
rcrl
orl
jb
sahf
cmpsl
cmc
or
push
clc
sbb
lahf
fs
mov
pushl
mov
lea
int
fldl
das
scas
into
mov
mov
stc
stos
popf
mov
mov
jb
mov
xor
adc
call
in
mov
xor
syscall
bound
arpl
xor
push
iret
mov
orl
cmpsb
inc
adc
or
jl
jns
mov
mov
sbb
ljmp
mov
loop
jne
cmc
imul
and
or
mov
jecxz
cmp
pop
adc
mov
xor
int
ds
je
pop
int3
test
mov
jg
out
ja
or
sarb
subl
xchg
fldl
scas
popf
stos
add
adcb
cld
sub
xor
pop
jns
lcall
fwait
xchg
add
adc
push
xchg
shlb
rcll
lahf
push
and
js
push
ret
jmp
ret
movsb
or
push
cmp
xchg
mov
loopne
pusha
enter
repz
cmp
ret
loopne
fsubs
xchg
sbb
xchg
idiv
jl
bound
lcall
pop
pop
xor
insl
lret
inc
inc
andl
pop
push
test
add
das
dec
shll
sti
push
xchg
push
jae
mov
je
push
add
scas
icebp
pop
test
sub
pop
and
aad
cmp
mov
std
stos
push
fists
adc
xchg
lods
movsb
test
sbb
pusha
push
inc
xor
stc
idivl
xor
cmp
insb
ljmp
fstpt
pop
push
mov
cld
fdivs
dec
lds
inc
and
out
pxor
sbb
out
aam
rorb
xor
subl
shlb
add
mov
and
sbb
pushf
push
mov
fabs
lret
cli
cmpb
fdivr
fnstsw
xor
add
sbb
inc
add
pop
lds
mov
loopne
in
out
push
fdiv
lods
pop
repnz
inc
or
push
push
outsb
divb
adc
pop
and
mov
cmp
aas
add
add
fisttps
mov
imul
movsb
loopne
pop
pop
leave
cmp
push
mov
or
jl
adc
cmp
jb
push
test
pop
scas
jmp
add
inc
cmp
cmpsl
mov
cmp
shlb
cmpsb
popa
repz
aad
repnz
add
insb
jecxz
sbb
jns
dec
pop
mulb
test
adc
fnstsw
fidivl
sti
inc
dec
xchg
cmp
jge
fsubrl
adc
std
pop
cmpsl
subb
adc
movsb
lret
add
cmp
pop
or
cmpsl
iret
mov
js
cwtl
pop
test
push
cmp
popf
sbbb
sub
imulb
sahf
xor
and
dec
push
cmp
and
mov
cmp
mov
and
mov
icebp
js
push
lods
lret
in
dec
push
jg
inc
lock
scas
mov
faddl
or
add
clc
movsb
out
scas
add
mov
aam
sahf
lds
out
inc
sti
jae
cld
imul
addr16
mov
mov
arpl
jge
push
jo
repz
or
add
dec
subl
popf
inc
repnz
ljmp
daa
push
sbb
sti
out
sbb
push
jne
outsb
shr
ja
nop
fstps
insl
cmpsl
clc
scas
dec
mov
sub
mov
mov
and
pushf
xchg
sub
out
pop
or
push
sub
sbb
push
loopne
adc
push
and
insb
mov
arpl
mov
add
or
push
pop
or
push
mov
adcb
push
sbb
lret
add
adc
cmpsb
mov
mov
add
inc
jb
push
in
jmp
inc
fcmovne
nop
dec
cmp
ljmp
cmp
ss
jns
clc
incl
nop
adc
inc
enter
mov
mov
iret
sbb
dec
in
subb
mov
inc
fldl
scas
cmpsl
xchg
popf
xchg
sbb
cmp
sarl
cmp
add
insl
repz
or
dec
insl
or
sahf
xchg
jo
xchg
push
add
push
shll
inc
testl
into
mov
cmpsb
popa
cmp
push
cwtl
push
loop
lahf
adc
adc
stos
enter
jl
and
ret
mov
je
inc
and
xchg
bound
jnp
mov
push
cmpsl
dec
repz
pusha
cmpsb
in
dec
addr16
cmp
ficomps
fsts
mov
divb
xchg
ficompl
inc
sbb
sbb
mov
pop
fists
lret
jmp
adc
xchg
pop
outsl
repnz
roll
mov
loope
xor
rclb
stc
inc
mov
lock
test
rcrb
outsb
aaa
pop
xor
push
cmp
sbbb
sbb
and
addb
insb
in
repz
pushf
dec
fmull
loop
stc
or
test
out
daa
mov
jecxz
repnz
leave
dec
add
sahf
push
scas
xchg
and
adcb
imul
sbb
test
imul
rorl
movsl
xchg
stc
adc
adc
test
test
add
mov
push
movsb
popf
xor
testl
pop
out
jnp
pcmpeqd
aaa
adc
in
lods
push
mov
in
mov
jecxz
rcrb
hlt
mov
pop
jb
in
roll
xchg
inc
ss
jl
testl
xlat
shl
test
ljmp
and
xor
test
in
xor
hlt
in
mov
sub
and
cmpsb
sbb
movb
and
or
fnstsw
fnsave
mov
add
cmp
rorl
in
xchg
fistpll
ljmp
sbb
push
sbb
xor
in
mov
or
sub
les
or
movsl
pop
jl
cli
adc
jmp
in
mov
dec
aas
aaa
mov
call
xchg
outsb
fsubs
cmp
cmc
in
adc
leave
les
andb
and
aad
push
xlat
jne
add
xchg
invd
incb
mov
cli
adc
mov
jle
jne
out
pop
sub
mov
sub
stc
jo
enter
adc
mov
les
lods
sbb
bound
xchg
insl
or
sub
into
jmp
in
mov
shrb
jmp
xlat
sbb
pop
pop
cmpsb
pop
pop
pop
dec
in
jge
and
in
sbb
out
arpl
jp
scas
jnp
xor
cmpsb
testl
push
scas
es
sbb
sub
sub
js
lret
daa
fwait
jle
jge
idiv
mul
rcrb
sbb
inc
xchg
or
fs
cmc
mov
lds
add
cld
scas
aas
dec
pop
pusha
addb
orl
xor
adc
mov
or
jl
or
push
sub
gs
rcrl
stos
js
push
add
lret
dec
jmp
add
movsl
outsb
pushf
bound
int3
xchg
and
mov
jo
loop
xor
sahf
pop
mov
add
push
stos
xor
push
mov
lods
cli
sub
sbb
aam
sbb
lcall
in
mov
xchg
jecxz
sub
into
popf
xchg
and
dec
das
or
push
mov
push
jp
ret
pop
mov
insl
adc
int3
rcrl
in
xor
cmp
fsincos
mov
mov
jecxz
add
nop
and
adc
fsts
mov
xor
imul
test
stos
gs
or
and
mov
mov
rorl
pop
push
xchg
stc
cmpsb
jecxz
mov
add
icebp
movsb
mov
cli
jbe
dec
xchg
xchg
push
repnz
daa
fstps
xlat
mov
pop
dec
inc
mov
adc
inc
jnp
mov
loop
add
aad
aaa
out
add
cmpsl
cs
lds
out
mov
std
push
mov
inc
pop
stc
pushf
ss
loope
imul
repnz
aaa
test
dec
cld
mov
push
mov
andb
xchg
test
pusha
adc
arpl
lods
add
out
xchg
rorb
push
outsl
cmpsb
pop
iret
cmp
xchg
test
shrl
pop
push
pop
sub
loope
push
out
jmp
pop
dec
mov
and
push
sub
repnz
pop
gs
jne
mov
inc
sub
mov
div
or
mov
fdivrl
add
xor
xor
outsl
inc
add
mov
frstor
jp
jno
dec
add
pop
add
xor
lahf
int
stos
cli
fisttpl
sub
xor
sub
mov
lret
stos
repnz
mov
dec
or
or
cmp
inc
xchg
mov
cmp
cmp
arpl
rcrb
jmp
aad
xchg
fadd
inc
test
sarb
testl
add
div
arpl
cmpl
and
xor
adc
lcall
ret
push
cmp
in
test
mov
dec
int
or
out
pop
push
mov
popa
mov
rcll
pop
scas
sahf
sub
scas
imul
lea
xor
fnstsw
jg
sbb
add
lcall
lock
cmpsb
in
in
ret
or
cmc
cli
cmp
loop
adcb
fsubl
mov
add
es
addr16
inc
xchg
movl
int3
mov
lea
cmp
push
xor
sub
push
add
mov
xor
nop
jnp
nop
scas
mov
out
mov
add
js
loopne
adc
cli
adc
cwtl
daa
xchg
jbe
inc
daa
xchg
cmp
xchg
fmuls
push
in
xor
sbb
pop
xor
mov
xchg
cmp
jmp
sbb
xchg
outsb
adc
jle
lcall
addb
lcall
sbb
cmpsb
or
stos
sbb
jle
jae
fnstenv
mov
xchg
add
cmp
push
loopne
add
ss
mov
loop
mov
popf
repz
sbb
movb
insl
ja
cmp
sbb
dec
imul
mov
jb
sub
or
push
movsb
std
mov
cs
add
lret
dec
es
jg
roll
jne
lock
les
int
icebp
repz
js
and
ds
jp
outsl
out
je
and
outsb
popa
xchg
push
int
xor
push
push
jmp
shlb
scas
sub
and
fnsave
das
pop
sbb
push
xor
pop
push
or
lret
jp
stos
mov
aam
jecxz
adc
subb
cmp
or
xchg
mov
ret
mov
enter
test
inc
iret
or
or
nop
xchg
mov
pop
jp
fnstsw
mov
pop
jmp
adc
cmc
mov
cmc
push
inc
cmp
paddusw
dec
mov
ljmp
shll
mov
aad
into
lods
adc
nop
xor
rolb
int3
pop
faddp
add
mov
cmp
fsub
lds
push
mov
xchg
test
push
dec
lods
rcll
mov
or
push
xor
pusha
pop
mov
in
mov
shrb
scas
pop
jmp
fisubs
pop
into
add
in
add
int
lret
divl
xchg
pop
pusha
repnz
xchg
and
mov
sahf
fidivs
push
aam
xlat
fwait
mov
mov
cmp
popw
lret
dec
dec
mov
fdivr
mov
enter
sub
sahf
sbb
and
jg
jge
mov
pop
pop
aam
imul
js
enter
andl
fadds
out
adc
call
and
out
xchg
das
out
daa
xor
in
xchg
adc
mov
mov
xor
test
outsb
andb
cmc
enter
or
pop
xor
jnp
xor
inc
add
jnp,pn
xorl
jae
cld
leave
andb
orb
jnp
cmpsb
cmc
pop
jo
or
jecxz
sbb
test
push
ja
loop
dec
movsb
xor
sti
adc
sbb
scas
and
xchg
sub
popf
mov
sub
addl
sahf
sbb
in
inc
mov
cmpb
mov
push
mov
jnp
movsb
or
xchg
or
out
mov
push
cmp
mov
or
pop
arpl
mov
cmp
pop
pop
test
cltd
out
dec
xor
popf
pop
inc
cli
das
or
and
repnz
mov
cltd
or
les
test
sbb
shr
dec
iret
lcall
daa
in
addr16
shl
sbb
lock
push
movsl
lock
jp
sbb
fsubl
xchg
push
mov
pushf
jle
adc
stos
xchg
xchg
adc
pusha
out
test
ds
inc
and
adc
inc
sub
pop
mov
sarb
cmp
lahf
mov
data16
aad
scas
adc
dec
cmc
movl
lret
mov
lds
repz
stos
mov
pop
das
insl
inc
xchg
add
leave
jecxz
inc
fucomi
hlt
sub
es
push
push
or
or
and
std
ja
fldenv
test
and
jecxz
mov
popa
pop
inc
push
jecxz
jp
popf
icebp
popf
aam
rcrl
leave
or
push
mov
test
dec
sahf
lea
mov
test
es
out
push
gs
insl
mov
xchg
inc
jno
pop
lea
pusha
ds
jmp
flds
pushf
push
fdiv
pop
pop
test
pusha
xor
push
testl
shll
insl
xchg
fadds
repz
add
das
jmp
xor
mov
mov
lret
and
mov
mov
arpl
subl
or
push
ret
lcall
pop
lret
repz
sbb
xor
add
or
pop
xor
cli
daa
push
movsb
and
cld
add
mov
mov
stos
int3
mov
stos
dec
jg
insb
aas
in
stos
outsb
outsb
xor
mov
push
scas
cli
lock
shlb
fldenv
stc
sub
popa
lret
mov
mov
dec
jmp
movsb
sub
pop
imul
in
out
push
jle
loope
bound
lock
inc
pop
aas
mov
loope
add
arpl
lods
aad
cmpsl
sub
das
add
es
jmp
cmpsb
adc
ds
mov
and
sbb
add
push
loop
xor
dec
dec
xor
cmpsl
push
cmp
push
js
ret
mov
or
xor
adc
pop
das
ret
sbb
push
pop
mov
adc
aam
outsl
xchg
and
test
sub
xchg
push
rcrb
popa
pop
push
scas
movsb
mov
add
icebp
mov
dec
jmp
nop
insb
fstl
insb
inc
dec
mov
adc
push
in
test
push
aaa
cli
dec
loop
test
fldlg2
cs
clc
jae
adc
cltd
and
xlat
jb
fidivs
sbb
push
dec
clc
cmp
jle
pop
lds
mov
add
or
icebp
adcl
push
lahf
dec
das
ds
cs
ret
mov
call
sar
sbb
and
fiadds
inc
es
cltd
adc
mov
jnp
repz
xor
repz
pop
pop
aam
jbe
daa
mov
mov
pop
cmp
dec
add
jmp
add
insb
movl
pop
xor
hlt
xchg
dec
testl
sbb
cmp
lret
jmp
push
testl
xchg
stos
inc
decb
cs
push
lds
test
pop
push
mov
addl
fwait
sar
cs
mov
add
sbb
mov
cmp
or
pop
jg
int3
lcall
in
pop
lahf
lcall
push
xor
pop
fnstcw
mov
lcall
jle
sbb
pusha
push
lahf
push
sub
adc
inc
or
in
jg
cmpsl
lea
in
push
rorl
pop
fildl
xchg
mov
mov
or
cltd
mov
test
and
nop
rcll
or
popf
push
call
or
xor
mov
clc
out
andb
jo
mov
xchg
cmc
mov
ret
push
pusha
cli
int
clc
jmp
imul
adcb
sub
pop
out
mov
mov
or
cmp
insb
push
test
xor
add
repz
fs
inc
fstl
jo
sar
inc
mov
orb
add
jl
daa
mov
push
ljmp
sub
xchg
aaa
sub
add
test
in
mov
pop
in
rcrl
int3
push
clc
lret
loopne
rcr
inc
lock
jno
jmp
aas
adc
jbe
xor
jp
andl
cmp
in
int3
or
ret
or
adc
pop
xchg
movsb
insl
push
iret
sbb
repnz
pop
xor
jge
imul
mov
or
cltd
jle
adc
pop
xchg
lcall
je
les
dec
fdivrl
bound
dec
out
jl
arpl
and
fwait
imul
inc
xchg
stc
mov
fists
aad
add
in
aaa
shlb
ret
inc
sti
es
cmp
in
shl
repnz
pop
inc
aam
outsb
imul
data16
pop
rolb
aam
push
cmc
add
cmp
out
dec
mov
dec
shrb
pop
es
dec
leave
jne
sahf
in
xor
mov
enter
or
sti
addr16
ss
jmp
ja
iret
adcl
adc
mov
lahf
dec
xchg
cs
test
and
jno
lds
inc
sti
out
inc
lret
mov
pop
fstpl
test
adc
lock
pop
test
cmp
in
fucomp
jg
add
leave
cmp
imul
cli
and
cmc
es
mov
mov
xchg
push
cmc
lcall
js
sarl
into
jns
pop
ret
aas
push
sbb
adcl
add
shll
mov
decl
dec
orb
sub
or
cltd
pop
in
fucomip
push
mulb
push
cmpb
inc
or
mov
add
pushl
xchg
clc
mov
rcl
cwtl
les
mov
jp
add
xchg
adc
and
lcall
lret
dec
dec
lock
cltd
or
jp
xor
jbe
jo
test
xchg
lods
jbe
inc
hlt
imul
push
pop
lods
adc
ss
jo
xor
and
mov
addb
sub
sbb
addr16
lcall
repz
fists
movsl
outsb
mov
jbe
pop
xor
xchg
mov
inc
adc
jge
insl
scas
into
sbb
clc
xchg
addb
popa
inc
jns
inc
andb
dec
pop
aaa
jnp
fwait
jae
cmp
mov
dec
je
js
add
dec
adc
mov
jns
rolb
xchg
pop
mov
dec
test
or
cmp
mov
ljmp
dec
mov
stos
or
lods
sub
push
jno
pusha
cmp
jne
cmp
adc
out
cmp
imul
jo
pop
nop
jae
inc
mov
jp
fdivp
dec
dec
dec
punpckhwd
mov
jmp
xor
loope
mov
mov
jae
xchg
fsubrs
dec
fiadds
aaa
sbb
cmp
dec
lds
add
push
ds
jg
xlat
jle
repnz
arpl
sub
cmpsl
and
sub
xchg
mov
xchg
repnz
cmp
enter
or
into
jle
pop
push
or
bound
adc
cmpsb
mov
ja
xchg
cmp
xchg
dec
int3
sbbl
jl
push
push
ret
push
push
xlat
cmc
notl
push
subl
inc
add
gs
outsb
mov
xlat
cli
pusha
push
mov
sbb
xchg
sarb
or
roll
into
or
xchg
sub
movsb
fiadds
out
shll
scas
cmp
je
es
lret
pop
fisubl
push
pop
push
popf
sbb
jmp
sbb
imul
ljmp
push
sbb
andb
ss
sbb
jnp
lret
add
fsubp
popf
lcall
inc
push
mov
jnp
call
repz
xchg
xchg
jge
and
cli
in
adc
and
lret
pop
inc
jmp
jb
leave
pop
mov
call
add
in
lahf
or
std
sbb
pop
pusha
andl
mov
sbb
bound
aaa
or
xchg
pop
xchg
inc
cmp
gs
xor
nop
xlat
mov
ret
int3
and
mov
ficompl
xlat
inc
enter
or
add
jg
cld
mov
rcr
xchg
push
std
and
inc
cli
movsb
test
jmp
and
xor
dec
sbb
xchg
push
insb
mov
and
je
outsb
aas
insl
fwait
movsb
cmp
mov
iret
mov
mov
mov
cmp
cmp
lods
jbe
add
add
test
aam
jo
mov
mov
dec
add
lcall
sbb
adc
push
scas
fidivrs
cmp
mov
mov
roll
mov
insl
mov
loop
aas
daa
test
pop
gs
xor
sbb
pop
test
xlat
dec
xchg
fidivl
or
loope
mov
jmp
and
mov
sbb
pop
xorb
xchg
fwait
jecxz
sub
mov
fwait
mov
in
sub
push
or
ret
xor
movsb
in
cmpsl
in
push
fisubl
jg
sbb
nop
fwait
sti
test
ror
mov
hlt
add
nop
es
sbb
fwait
stos
or
shll
scas
leave
mov
test
nop
aam
ja
adc
subb
cmp
int
jnp
rcl
mov
imul
leave
leave
std
lea
jge
aad
add
mov
push
sub
idivb
pushl
cmp
rep
iret
sub
dec
mov
insl
ret
mov
loop
repnz
loope
cmp
test
mov
cmpsl
jo
insb
test
and
mov
dec
pop
mov
fiaddl
push
jno
lahf
inc
fwait
out
pushf
xor
notb
dec
xor
cmp
mov
adc
jnp
push
dec
pop
push
cmpsl
lea
mov
ret
pop
pop
test
aad
jne
or
call
lret
lock
loopne
flds
xor
mov
add
pop
cmp
jp
and
subb
jno
pop
dec
or
es
xor
bound
addr16
jp
mov
test
jne
push
bound
fiaddl
xor
popf
push
xor
and
cld
sarb
push
inc
sub
lods
icebp
insb
push
pop
cmpsl
xlat
roll
pop
out
jb
test
repz
ret
lods
adc
mov
inc
xchg
aas
jns
mov
push
lock
test
add
mov
jae
out
lret
fisubl
mov
jl
xchg
jmp
jbe
popa
inc
mov
cmp
out
sub
sub
bnd
dec
shrl
inc
ja
and
lret
stc
mov
in
call
or
insb
rol
or
lods
pop
mov
in
mov
push
pop
xchg
xchg
add
test
int3
filds
in
pusha
icebp
mov
or
add
and
mov
in
or
or
push
mov
xor
clc
adc
jns
jns
ret
aas
sbb
scas
in
test
xor
sahf
pop
cwtl
push
out
loop
fistl
pop
and
enter
stos
push
jno
sti
adc
or
inc
test
test
aad
and
sub
icebp
mov
push
add
fwait
outsb
jo
add
fcompl
jns
jl
fldcw
cmpsl
or
fs
pop
mov
jae
mov
sbb
inc
in
xor
and
push
jbe
sbb
punpckhdq
sub
dec
jne
hlt
push
fnstsw
inc
fisttpl
xor
fsub
jg
push
ror
mov
dec
lret
stos
jmp
pop
and
lods
jg
push
repnz
xor
scas
push
pop
cs
pusha
loope
cli
mov
and
and
movsb
xchg
es
and
or
fdivrl
pop
pushf
push
pop
pop
dec
imul
pop
push
mov
cmp
sub
scas
int
test
push
sub
adc
mov
inc
push
iret
add
lahf
mov
xor
xchg
sti
or
add
inc
insb
gs
add
ja
or
sbb
cmp
mov
adc
add
lods
pop
jmp
les
repnz
inc
shlb
inc
sub
xor
in
sub
pop
and
fcomp
das
gs
sub
adc
add
and
nop
jno
add
leave
mov
shll
mov
pushw
push
popa
xor
and
mov
or
imul
adc
jle
push
xchg
mov
push
popf
aam
mov
test
imul
popa
testl
mov
mov
popf
cmp
adc
push
sbb
push
je
push
fcomi
test
fwait
inc
push
fadds
out
test
mov
xchg
fdivrs
into
rcrb
mov
outsl
xor
insl
mov
pop
stos
pop
or
pop
sub
fwait
dec
cmp
inc
popf
lock
pop
xchg
subb
mov
xchg
stos
xor
sbb
fstpl
inc
pop
pushf
mov
bnd
sbb
loop
mov
rcrl
popl
mov
mov
and
pop
nop
jg
cs
cmp
ret
push
jl
xchg
jmp
cwtl
sbb
mov
movsb
loop
scas
add
mov
inc
test
bound
sbb
mov
call
incl
dec
pop
call
mov
pusha
cmp
push
jbe
pushf
rclb
std
mov
inc
add
sub
lcall
test
mov
arpl
adc
sub
pop
lahf
int
pop
sahf
jae
nop
es
in
hlt
out
sub
js
into
testl
std
pushf
pop
repnz
adc
dec
test
inc
fsubs
pop
in
sub
add
mov
cmp
testb
out
bswap
pop
rcll
aaa
mov
and
in
jp
xor
mov
cmp
jb
into
mov
loopne
or
in
cs
sub
iret
negb
xlat
and
dec
and
sbb
mov
cs
mov
cmp
or
lock
mov
mov
lcall
loope
std
std
dec
cmp
ljmp
mov
orl
popf
xchg
jae
inc
mov
aam
adc
dec
outsl
and
insb
and
xchg
xchg
add
iret
xlat
push
out
addr16
mov
pop
shrb
mov
push
das
daa
rcl
inc
movsb
and
jo
push
out
add
loop
into
jno
popl
cwtl
ret
mov
imul
test
inc
mov
lods
orb
jo
enter
lds
xchg
imul
aad
addr16
test
bound
lea
pop
sti
mov
movsl
dec
mov
into
jns
add
aad
popf
aam
cltd
jl
lret
jg
dec
enter
adc
adc
loop
push
test
test
dec
add
jne
lcall
arpl
push
es
adc
pop
adc
sub
sbb
jnp
ret
jl
dec
std
out
jb
test
orl
in
jns
mov
ds
mov
push
es
dec
mov
xor
pushf
hlt
cltd
cmp
or
clc
adc
pop
xor
xchg
test
aas
and
inc
mov
popf
mov
dec
mov
cltd
hlt
addr16
jo
movsb
aaa
ljmp
mov
cs
mov
je
xchg
leave
mov
scas
icebp
idivb
rolb
gs
xor
or
in
adc
adc
push
lods
std
dec
mov
sbb
sbb
pop
daa
movsb
call
push
shr
push
testl
movsb
and
stos
jmp
fwait
cltd
popa
frstor
mov
adc
icebp
and
scas
dec
rcl
add
pusha
stos
movsb
push
mov
inc
sbb
inc
xor
jno
mov
jle
cmp
scas
jg
xlat
enter
shrl
cmp
jno
mov
stos
enter
mov
lret
shlb
sbb
pop
arpl
outsl
in
mov
mov
sub
adc
pop
je
inc
and
loop
mov
mov
sbb
repnz
sub
xchg
mov
sub
popa
imul
bts
push
push
insb
xor
in
sbb
jecxz
cs
sub
sbbl
xor
dec
jno
cwtl
nop
adc
push
dec
lcall
xchg
shlb
pop
push
mov
sub
ret
in
cld
push
xor
and
xchg
bound
adc
int3
cld
mov
mov
out
fists
pushf
popa
leave
fmul
mov
daa
ss
or
data16
sub
js
add
movsb
mov
shll
lods
dec
sub
cli
scas
aaa
sub
out
lock
push
addb
ljmp
pushf
mov
or
movups
jecxz,pt
bound
or
dec
cs
subb
js
pop
xor
sub
xlat
repnz
popa
ds
push
cmpsb
xchg
js
xchg
cmp
std
pop
xchg
ds
loope
out
je
xchg
and
mov
xchg
xchg
ja
movsb
cmp
add
shrb
repnz
fidivs
das
mov
lret
int3
js
or
fstpl
jns
jno
dec
fisubrs
pop
sbb
sbb
scas
and
insb
dec
std
mov
xor
shr
bnd
in
mov
sahf
pop
out
xchg
sub
lcall
arpl
xlat
movsb
and
or
inc
add
outsb
mov
fadds
or
inc
dec
jg
enter
test
mov
sarb
inc
jecxz
push
in
ljmp
xchg
aad
push
out
ja
mov
dec
sbb
pusha
filds
ljmp
xchg
mov
pop
xchg
xchg
pop
adc
pop
pop
xor
in
sub
dec
jb
dec
fcoml
sub
jno
pop
mov
push
ret
mov
inc
lock
cli
sub
jmp
in
mov
test
jbe
sub
sbb
jl
adc
jmp
rclb
inc
pop
jl
jne
xchg
cltd
out
test
movsl
or
inc
fnstenv
adc
mov
call
and
inc
pop
mov
xchg
inc
les
ljmp
sbb
mov
clc
iret
inc
cmpsb
lcall
cs
loope
loopne
or
or
adc
aam
rcrb
hlt
notb
inc
iret
shl
cld
mov
fistps
push
push
fcmovne
shr
lock
push
mov
ss
mov
xor
mov
mov
call
push
inc
clc
xor
and
xchg
bound
mov
lock
inc
sarb
lret
mov
stos
testb
push
dec
movsb
movsb
xor
lahf
in
fdivrl
push
mov
popa
fadds
ja
stos
mov
bt
ret
rolb
dec
adc
fldt
arpl
jge
ljmp
pop
les
cmp
fistl
shrb
xchg
cld
or
jno
mov
and
jno
fisubrs
pushf
dec
mov
or
cmp
pop
std
out
jne
xor
mov
mov
or
pop
cwtl
jns
pop
rcl
lcall
adc
imul
mov
xor
or
frstor
cltd
idivl
push
mov
lea
xchg
jl
push
inc
adc
test
nop
out
es
orb
xchg
or
inc
and
enter
fistpl
pop
adc
sbb
std
shll
sar
dec
pushl
xchg
sub
xor
adc
sbb
int
outsl
mov
mov
mov
gs
cld
enter
sbb
xchg
jle
xor
fs
rcll
cmp
movsb
sub
int3
inc
dec
sub
inc
in
jns
iret
push
roll
inc
jns
loopne
jb
xor
pop
out
into
dec
push
adc
sub
nop
rcll
dec
mov
cmp
pop
inc
sbb
rcrl
jmp
std
mov
mov
xchg
fisubl
xchg
push
ficomps
adc
inc
mov
cltd
mov
sbb
jl
into
idivl
mov
iret
sbb
in
pop
add
mov
cmc
mov
cmp
xor
push
sub
rcrb
cmp
bound
sarb
and
aas
lret
dec
out
cmpl
sub
sarb
es
jo
add
loopne
sbb
fidivs
lcall
jmp
and
inc
add
out
mov
mov
jp
outsb
movsl
jo
mov
adc
int
sarl
sbb
loope
rcll
or
mov
mov
xchg
jns
pop
fdivp
cmp
adc
ja
mov
subb
test
sbb
negb
and
insl
jp
jno
aas
hlt
mov
ret
fnstenv
pop
mov
addl
xlat
bnd
pop
and
jo
bnd
add
mov
xor
adc
fs
lahf
inc
mov
mov
hlt
xor
mov
testb
push
shlb
push
jecxz
dec
scas
ret
jbe
sub
popa
mov
lock
test
sahf
mov
pop
call
inc
adc
cmp
icebp
in
stos
loopne
inc
push
in
aad
dec
jae
push
in
out
popa
test
pop
pop
jg
stos
aaa
xor
les
ret
cmp
dec
xor
xlat
sub
notb
jle
jne
xor
xor
arpl
cmp
sbb
mov
jbe
test
cmp
xor
ds
out
push
andb
or
test
jmp
mov
push
mov
pop
mov
pop
mov
js
test
mov
sbb
and
jnp
clc
adc
mov
addr16
xor
in
adc
mov
aad
sub
ret
pop
nop
ja
cmpsb
fs
nop
mov
arpl
xor
lret
lcall
cld
imul
lods
jbe
pop
je
push
fsts
loopne
xor
mov
shlb
rcrb
or
int
fs
outsl
hlt
mov
mov
fcompl
cmpsl
outsl
mov
xchg
fldt
xchg
in
pop
rol
sub
jo
cltd
jne
and
and
insb
or
ror
mov
je
dec
xor
cmp
call
pop
or
push
ljmp
inc
fdivl
xor
mov
lcall
and
push
sbb
xor
and
xchg
es
and
and
adc
fisubrs
dec
xchg
jo
jl
test
jno
jle
mov
shll
sub
and
or
outsl
jp
inc
jo
lds
rolb
idivl
mov
xlat
lea
loope
fstl
jmp
mov
xchg
and
jnp
test
in
push
std
clc
mov
sarl
jmp
fcmovbe
and
lea
jg
jg
out
imul
fisubl
xor
push
push
lret
pop
lret
call
and
mov
push
sbb
sarb
sti
rcrb
xchg
ret
cmp
rcrb
daa
rcr
inc
lcall
mov
cmp
jp
push
clc
rclb
sub
push
iret
rorl
daa
stc
call
sub
in
mov
fsubr
ret
hlt
mov
in
loope
xor
test
xchg
jnp
loop
clc
int
jb
enter
cltd
xlat
jo
inc
pop
jbe
pop
mov
mov
fcomps
adc
dec
jns
mov
inc
push
mov
xchg
or
in
idivb
or
fnstenv
mov
sub
mov
cmp
popf
pop
fnstcw
jmp
pop
mov
movsb
outsb
shrb
sbb
cmp
hlt
jno
int
or
xor
dec
xchg
scas
add
lcall
mov
mov
addr16
mov
cmpsb
inc
inc
jecxz
in
fcompl
adc
push
jno
int3
mov
jp
xchg
loopne
jecxz
clc
and
inc
subl
int3
int3
dec
std
and
pusha
sbb
mov
pop
repnz
scas
fsubl
je
add
or
push
xchg
lods
cmpsb
shll
add
lcall
or
sbb
xor
movsl
lds
push
ret
sub
xor
inc
dec
sbb
or
mov
popa
and
nop
xlat
inc
sbb
aas
pushf
sub
cmp
push
add
dec
mov
in
cmp
or
cli
cmp
jmp
jb
rolb
jns
push
rcll
dec
sub
das
js
pop
jmp
test
xchg
outsb
out
fnstcw
add
push
pusha
loope,pn
inc
int
sub
cmp
inc
lcall
sbb
cmp
in
lods
rolb
adc
insb
add
out
pop
lret
or
fdivp
cmpsl
repnz
popf
out
mov
sbb
ds
xchg
and
lods
sahf
lret
xor
jb
pop
clc
scas
adc
xor
pusha
in
jne
jb
notl
or
ljmp
xor
pop
fldt
cli
mov
rcrl
sti
js
shl
jmp
push
cmp
adc
mov
loop
jns
pushf
out
xchg
push
scas
mov
xor
cmp
imul
xlat
insb
mov
test
dec
shll
icebp
mov
scas
mov
mov
or
data16
jbe
fidivl
roll
lea
shll
mov
sbb
and
mov
or
mov
mov
adc
and
push
sarl
mov
mov
cmp
jns
ss
aas
hlt
adc
hlt
inc
fwait
insl
repz
test
shlb
les
push
push
add
push
sub
ljmp
fisttps
xchg
in
push
inc
push
sbb
fadds
xchg
add
fwait
add
push
pop
pop
pop
loopne
enter
jecxz
mov
sbb
subl
push
jne
and
xor
jne
mov
jbe
call
jae
test
jge
mov
out
movsb
cli
mov
xor
sbb
or
outsb
std
in
out
push
arpl
imull
popa
aad
cmp
jbe
repz
das
xchg
and
pop
outsb
pop
es
mov
sub
jg
sbb
xor
mov
jbe
pop
lret
test
push
rcrb
cmpsl
int
pusha
and
shll
sahf
aam
divl
inc
mov
pop
or
scas
push
or
adc
xchg
clc
sbb
iret
mov
push
mov
and
call
push
ds
hlt
fs
jnp
inc
lcall
fldcw
push
test
in
dec
push
mov
mov
rolb
mov
dec
gs
mov
cmp
cld
cmpsb
jnp
shl
jno,pt
ret
jl,pt
pop
jge
cmp
movsb
push
hlt
or
or
shrb
hlt
test
xchg
inc
stc
ret
and
scas
pop
ss
cmpsb
cmp
or
push
nop
dec
int
fxch
mov
xchg
adc
xor
dec
lcall
mov
call
mov
inc
or
scas
mov
lret
dec
in
push
cli
pusha
and
nop
fcomps
int3
into
sti
push
mov
mov
into
mov
arpl
arpl
stc
push
sub
pop
and
popa
adc
mov
mov
loopne
addl
mov
stos
frstor
adc
mov
xor
movsl
or
pop
pushf
test
xchg
lret
mov
jno
add
idivl
jg
outsl
pop
mov
mov
pop
mov
xor
xchg
xchg
cmc
cld
ret
sahf
fwait
or
call
push
jmp
mov
xchg
call
scas
arpl
sub
pop
lods
adc
mov
push
mov
inc
add
pop
sbb
fcoml
out
inc
dec
in
popa
je
cmpb
int
movsl
mov
mov
insb
pop
or
test
lea
push
pop
inc
push
fstl
mov
insb
xor
rcrl
daa
loop
mov
mov
out
pop
sbb
xchg
cmp
cld
mov
ss
fidivs
mov
sub
test
fildll
shlb
iret
and
je
imulb
push
test
push
enter
divl
outsl
or
out
test
or
push
sbb
arpl
dec
popf
dec
mov
jmp
lock
pop
test
imull
neg
push
bound
inc
out
roll
scas
frstor
or
jle
outsb
inc
xchg
fsubrs
aam
fs
mov
lahf
std
incb
inc
jnp
test
inc
psubb
jno
int3
shrb
das
push
sbb
or
mov
adc
leave
cltd
cmp
cmp
mov
dec
das
loop
insb
push
outsb
cli
fstpl
dec
xchg
data16
out
icebp
in
dec
pop
jno
sbb
sub
loope
mov
adc
mov
cmpl
sbb
int3
jp
ss
jnp
sbbb
repz
dec
or
stos
xchg
mov
push
pop
jb
xchg
mov
add
test
out
subb
add
aas
test
arpl
add
or
xor
ljmp
repnz
addr16
loope
jl
stc
adc
mov
fisubl
sarl
fs
movsb
add
leave
push
sarl
mov
int
cmp
fdivrs
test
add
add
insl
sub
push
test
adc
xlat
push
xchg
idivl
insl
loopne
lahf
dec
sub
xor
sahf
cli
aam
outsl
pop
and
mov
push
subb
rep
adc
aam
pop
clc
jnp
jp
lcall
js
add
bound
les
dec
mov
fnstsw
jb
inc
mov
test
sub
fdivrl
adc
shll
in
imul
test
lret
or
jae
in
sbb
out
das
pop
adc
jae
movsb
sbb
and
push
lds
pushf
mull
in
xor
push
dec
ljmp
mov
jmp
pop
mov
add
lret
mov
mov
mov
sub
push
repz
and
lods
lcall
xor
ds
inc
dec
xlat
es
mov
ja
sub
dec
sbb
push
iret
lods
lret
lcall
dec
inc
push
lcall
xchg
push
scas
insl
in
lea
or
mov
xlat
lcall
lods
xlat
inc
push
inc
fisubl
pop
push
inc
outsl
jbe
movsb
insl
cmp
lahf
daa
test
cmp
cmpsb
lret
into
xor
faddl
icebp
xchg
mov
jbe
jecxz
div
mov
mov
inc
fwait
sub
push
adc
sbb
mov
dec
fisubl
inc
mov
xlat
rolb
repnz
inc
mov
mov
test
outsl
sbb
jg
push
jp
or
lods
repnz
xor
rcll
and
jp
adc
and
cmp
int
lea
inc
enter
mov
cli
aas
sub
inc
je
adc
or
pop
and
in
dec
test
adc
mov
pop
dec
dec
sbb
mov
mov
loop
std
xrelease
call
jb
inc
pop
jb
dec
push
mov
xchg
std
fidivrs
fcompp
and
int3
xchg
dec
call
xchg
out
mov
dec
gs
sub
sbb
decl
inc
pop
mov
push
int
jle
cmp
jmp
out
je
jle
rcrl
cmp
movsb
xchg
dec
repz
sti
dec
rcrb
in
adc
idivb
adc
ljmp
mov
test
addb
sbb
cmp
aad
in
scas
call
push
xchg
push
sub
mov
sbb
cli
cmc
adc
fs
or
pushf
pusha
mov
push
xchg
shr
imul
pop
imul
mov
sbb
pop
xchg
sbb
repnz
popf
adcb
or
and
cmpsb
xchg
lret
mov
inc
jns
or
test
mov
mov
adc
add
push
mov
dec
ret
dec
gs
data16
mov
pop
xchg
aas
lret
out
rorb
cmpsb
jmp
stos
testb
mov
adc
loopne
push
jmp
out
out
sarl
test
fucom
lret
adc
nop
push
cmp
lock
mov
push
jne
xchg
sbb
lods
jmp
aas
mov
xchg
push
inc
mov
inc
jbe
mov
or
xor
push
sub
fdivrl
mov
loop
inc
cli
xchg
cmpsb
jb
stc
xchg
add
sub
cmp
aas
dec
jle
aas
inc
inc
cmp
cmc
cmp
lea
sbb
add
sub
mov
outsb
xchg
push
sub
mov
mov
cmpsb
fimull
lods
or
pop
mov
mov
push
push
cmpsb
mov
mov
std
xlat
sub
mov
jl
mov
mov
call
rcr
push
or
ret
enter
xchg
adc
add
sub
mov
cwtl
pop
aas
mov
bound
popl
pushf
fwait
push
jns
aam
clc
iret
gs
push
push
mov
inc
out
mov
stos
xor
scas
dec
mov
jp
leave
in
in
mov
rclb
and
loop
and
or
or
or
out
roll
jb
mov
or
xor
mov
jg
jbe
dec
cmc
mov
hlt
dec
cmp
mov
jge
pop
xor
add
dec
or
push
cmp
inc
fdivp
pusha
aad
or
xor
pop
ja
das
ljmp
or
xor
and
pop
xor
cld
jns
aas
pop
push
adc
outsb
push
jbe
lods
mov
std
cmove
arpl
push
xchg
adc
and
cmp
lods
push
imul
add
sarb
lods
push
inc
cltd
les
lcall
jp
jae
push
cmc
xor
sbb
push
call
xor
aas
push
mov
outsb
xor
les
je
shll
loopne
cmp
xor
push
shlb
mov
fsubr
xlat
ds
xchg
mov
movsl
pusha
pop
out
stc
mov
xchg
adc
adc
in
in
and
sbb
lods
rcrl
dec
test
pop
fdivl
setno
ds
jnp
out
mov
bound
xchg
sbb
mov
outsb
cmp
jl
gs
fsub
and
push
push
mov
mov
mov
test
sbb
xor
dec
arpl
ret
stos
sbb
gs
fnsave
and
imul
inc
mov
testl
jg
and
cmpsb
enter
and
scas
fs
repnz
push
cltd
jmp
lcall
rorb
mov
sbb
addl
addr16
sbbb
mov
popf
pop
pop
inc
xchg
mov
push
std
out
scas
push
and
das
and
repz
js
and
xchg
sbb
incl
pop
arpl
clc
jg
rolb
sub
jge
sub
push
out
and
inc
sub
scas
add
lret
push
rorl
and
sbb
lods
lea
in
mov
push
xchg
test
mov
pop
paddsb
lea
lea
aaa
mov
lock
fwait
enter
jns
cmc
mov
pop
insl
xchg
lret
cmp
int3
test
dec
daa
cwtl
dec
mov
cmp
pop
sub
out
stos
push
dec
sub
push
dec
inc
das
mov
sbb
std
mov
adc
sub
mov
out
xlat
mov
mov
movsb
push
pop
fidivrl
push
sti
jg
rcrb
jp
imul
xchg
pusha
mov
jle
cmp
push
pop
gs
jp
addb
mov
bound
repz
movsl
mov
mov
lock
inc
cli
in
adc
sbb
mov
sbb
pop
xchg
into
jmp
hlt
sarl
cmpb
aam
mov
popa
gs
xor
xlat
mov
gs
aaa
xchg
mov
sub
mov
pop
mov
int
xchg
lds
test
xor
inc
push
jno
xchg
mov
push
pop
cmpsb
inc
lods
nop
sub
shrl
lds
enter
ss
adc
inc
push
fsts
gs
mov
out
popf
add
mov
jmp
scas
push
cmpsl
test
movsl
test
andl
xor
jg
mov
jo
aam
xchg
rorb
pop
sbb
dec
mov
mov
test
jno
pop
ja
adc
movsb
mov
loopne
xor
in
rcrl
ljmp
add
push
cmpsb
movsl
pop
inc
popf
sub
movsb
cld
mov
sbb
ret
es
mov
jbe
idivl
xchg
mov
pop
sub
test
ljmp
or
arpl
rcrb
sub
mov
div
shl
lock
ret
cmpsb
or
push
mov
mov
je
jl
sar
xchg
pushf
fistl
test
cmp
or
hlt
cmp
aam
call
pushf
push
inc
fstl
sub
jge
jecxz
movsb
adc
mov
cmp
or
mov
cmpsb
into
pop
sahf
stos
dec
loopne
add
and
dec
push
fwait
push
js
xchg
in
or
pop
in
mov
push
rorb
cmp
fldl
icebp
jmp
or
inc
rolb
jle
pop
mov
xchg
or
scas
xchg
inc
mov
push
push
fildll
out
gs
push
int
jnp
leave
aad
jmp
inc
outsb
imul
fs
sbbl
mov
decl
rorl
push
popa
jne
pop
or
add
enter
push
in
pop
pop
xor
pop
aas
xor
cmp
loopew
or
and
loopne
in
mov
ret
push
aaa
push
cmp
aaa
and
int3
mov
mov
jmp
dec
repz
scas
dec
or
push
enter
fldenv
pop
xchg
xchg
lds
jecxz
stos
in
sbb
and
lahf
sub
and
cmp
jge
jo
rcrl
cli
add
test
aas
jle
leave
lcall
push
mov
pop
out
jle
xorl
pop
mov
push
push
mov
test
mov
pop
out
inc
cmp
loop
mov
test
inc
jp
mov
pop
push
push
sub
xchg
fcom
movl
sbb
pop
shll
roll
fmull
insb
inc
insl
mov
addr16
out
push
mov
pop
scas
xor
test
je
mov
jmp
sub
aas
adc
ja
and
jp
cmpsb
mov
aam
sbb
mov
mov
cwtl
sahf
xor
in
jp
or
nop
push
lahf
gs
xor
pusha
loopne
ret
dec
jl
in
ja
inc
out
and
pop
xchg
daa
adc
inc
shr
aaa
jae
gs
fs
jp
inc
jbe
mov
lods
shl
aam
fisubrs
insb
push
movsb
lret
sahf
add
jecxz
fldt
mov
ja
adc
loopne
inc
pop
inc
xchg
add
es
jge
es
add
jl
inc
mov
jae
inc
nop
jl
repnz
stos
cmp
mov
fcompl
inc
fs
cld
sar
aaa
in
out
jle
fdiv
sbb
sub
arpl
push
or
cwtl
aad
loopne
dec
gs
sbb
xlat
mov
test
out
scas
add
jl
mov
xchg
inc
pop
or
das
jle
pushf
std
and
lock
test
call
popf
mov
jg
and
xor
xchg
pop
stos
adcl
scas
aas
push
push
add
sub
cmp
ret
mov
clc
scas
mov
dec
das
das
test
jmp
test
fidivs
loop
and
push
ret
xchg
push
pop
cmp
shlb
daa
cld
sbb
add
imul
xchg
and
mov
in
jecxz
in
jnp
mov
xchg
sbb
sbb
cld
cli
lret
xor
dec
push
add
pop
or
add
fists
mov
lods
mov
xchg
push
mov
inc
mov
cmp
and
jae
pop
sbb
xchg
fnstcw
scas
jl
adc
mov
or
jb
xchg
dec
and
inc
and
mov
adc
cmp
add
subb
add
int
sbb
into
cld
shl
outsl
adc
mov
sub
and
xor
jb
and
sahf
adcb
outsb
mov
ja
int
in
dec
xchg
rcrl
and
xor
push
jne
out
lea
xchg
pop
lea
rcr
icebp
es
inc
sub
das
push
push
xor
jbe
in
cltd
fisttps
sbb
je
xchg
or
cmp
push
xor
pushf
xor
fidivl
idivl
xor
mov
loop
stos
out
fstl
dec
sahf
decb
pop
xor
imul
fildll
inc
inc
out
stos
add
ss
sbb
and
add
adc
dec
mov
dec
movsl
lret
rol
scas
addr16
cmc
dec
je
adc
cmpsl
add
mov
mov
cmpsb
cmp
xor
mov
push
pop
push
mov
dec
cmp
add
jbe
pop
push
xchg
insb
and
add
push
es
cwtl
repnz
sub
pop
inc
cs
adc
xor
std
call
int
add
add
sub
cmp
mov
sahf
sbb
in
cmp
add
mov
xor
mov
cld
sbbl
sub
mov
push
stc
jae
inc
push
lods
adc
mov
jle
insb
lret
pop
or
test
decb
insl
stos
inc
sub
mov
pop
lods
mov
hlt
push
inc
cmp
leave
dec
cmp
mov
jbe
mov
fstl
dec
mov
jge
in
repz
xchg
jns
popa
dec
cwtl
mov
pop
in
jge
in
test
addr16
mov
add
mov
push
aad
jmp
movsb
mov
mov
jle
dec
cli
hlt
inc
mov
mov
inc
aad
and
aaa
fwait
jp
popf
lock
sahf
ret
jae
and
jae
or
adc
push
push
in
imul
mov
sub
or
cmp
shrb
into
incl
pop
shll
pop
add
mov
std
push
xchg
cmp
mov
mov
nop
in
jmp
aam
mulb
inc
jns
ljmp
loope
inc
rolb
stos
sbb
push
fsubl
cmp
xchg
rcll
rorb
movsl
adc
cmpsl
icebp
jo
in
std
pop
xchg
aad
mov
mov
cmp
add
and
std
popl
xorl
scas
fs
fs
js
cld
push
jbe
clc
rcrl
jg
rcl
mov
in
cwtl
push
bound
es
std
daa
cmp
or
lods
push
sbb
sub
xorb
test
sar
jne
fisubrs
jle
imul
dec
jle
and
xchg
insb
shlb
mov
mov
lret
test
cltd
pop
sti
cmp
lods
push
mov
mov
scas
cltd
add
mov
scas
pusha
inc
sub
in
inc
or
cmp
and
jns
adc
mov
lret
mov
fimuls
loopne
xchg
mov
clc
arpl
scas
jno
or
into
fstps
dec
lret
sub
inc
mov
rcll
lret
inc
push
and
ds
jp
js
mov
scas
orl
lcall
stc
dec
stos
movl
ret
mov
cmpsb
push
mov
fnstenv
repnz
xchg
jno
xchg
dec
cmp
popl
call
cld
xchg
push
xchg
insl
xlat
cltd
aaa
ja
mov
add
sub
adc
aaa
data16
decl
xor
movsb
add
shl
jb
lret
testb
lahf
dec
dec
xorb
popa
mov
and
aaa
lahf
adc
dec
pop
push
mov
clc
mov
add
push
cmp
cmpsl
jnp
cmpsl
inc
mov
mov
stos
insl
inc
sahf
loopne
xor
push
fsts
sbb
add
loopne
idiv
nop
jae
pop
rcll
fldenv
outsb
cltd
icebp
or
jmp
xchg
pop
jge
lahf
sbb
loop
sub
xchg
pop
movsl
clc
dec
mov
mov
mov
es
pop
mov
jno
mov
icebp
add
sbb
xchg
push
faddl
pop
cmp
repz
stos
dec
mov
ljmp
mov
xor
sub
jbe
aad
pushf
in
push
flds
mul
addr16
cmp
dec
fcomps
fwait
les
repnz
push
pop
repz
arpl
mov
cmp
loopne
div
mov
jno
popa
enter
jnp
fsubrl
inc
js
lcall
cmc
arpl
xchg
pop
push
pop
cmp
loopne
push
cmpsl
mov
imul
lock
in
into
loopne
std
daa
sbb
mov
mov
mov
dec
add
loope
je
stos
fucomp
lea
fdivrs
call
clc
imul
sbb
cmp
inc
lret
mov
and
aad
dec
pop
mov
xchg
decl
add
sub
fisttpl
pop
add
movsb
out
cmc
insl
adc
xor
dec
pop
aam
jb
dec
inc
mov
js
pushf
sub
push
sub
clc
enter
push
add
shrl
outsl
les
popa
lret
insb
mov
dec
fstpl
or
dec
adc
jmp
call
fidivl
subl
gs
add
add
rclb
pop
pushf
loope
adc
sarl
leave
nop
sbb
inc
dec
xchg
scas
sub
iret
mov
inc
push
ja
xchg
pop
push
xchg
test
nop
imul
mov
push
enter
mov
fcom
mov
sub
push
addl
sub
addr16
std
sbb
aad
testl
xchg
xchg
jne
bound
jb
adc
insl
and
push
mov
ss
pop
or
pop
cs
sub
xchg
pop
push
in
ret
mov
fs
shrb
and
mov
mov
adc
out
clc
inc
add
std
insb
outsl
mov
pop
jno
subb
xchg
int3
pushf
push
pop
loopne
xor
sbb
inc
add
test
imul
dec
mov
aaa
sar
add
mov
cwtl
sar
icebp
dec
cmc
adc
mov
inc
dec
push
test
jg
cltd
jl
in
jo
in
cmp
xor
int
cmp
pop
out
jne
dec
add
xor
sub
shlb
jg
jp
jo
cli
jns
into
std
testl
xchg
test
push
scas
sbb
and
xlat
lods
dec
lds
dec
adc
popa
sub
pop
sti
enter
adc
call
das
sbb
iret
push
shl
popl
insl
popa
popl
cmp
lds
sbb
fildll
push
inc
js
cmp
iret
mov
fs
pop
and
dec
cld
mov
or
mov
mov
push
loopne
loop
xchg
lret
cs
icebp
js
and
ret
lock
mov
mov
pop
out
leave
dec
icebp
icebp
testl
xchg
jno
push
and
pop
inc
mov
es
inc
mov
xchg
sarl
xchg
cmc
jp
aaa
data16
xchg
xor
mov
cmp
aaa
mov
pop
std
cmc
add
sub
arpl
iret
xchg
sbb
int3
mov
mov
stos
cmpsb
sub
mov
sub
adc
lret
gs
dec
mov
push
xor
xor
mov
repnz
mov
pop
hlt
mov
jne
xlat
xchg
addr16
pop
fnsave
mov
movsl
popa
xchg
add
mov
xchg
outsl
fs
jbe
push
sarl
cs
addr16
jns
popf
mov
sbb
or
dec
adc
repz
es
cmp
or
cmp
bound
sar
push
jp
outsl
jmp
prefetcht2
jns
inc
outsl
inc
ds
push
xchg
xor
push
xlat
leave
fmull
insb
jno
mov
in
sub
fbld
dec
ror
daa
mulb
adc
adc
xchg
sub
fwait
cli
pop
mov
add
mov
dec
mov
cmp
ss
push
enter
adcl
mov
stc
outsl
movsb
enter
adc
mov
test
js
sarl
insl
ljmp
popl
pop
addr16
and
test
fsubrl
mov
mov
add
arpl
cmpsb
aaa
inc
or
adc
or
js
mulb
nop
add
xor
xlat
mov
mov
or
pop
aas
cmp
negb
dec
fsubr
cmpsb
sub
gs
xchg
xor
ret
xor
data16
jno
dec
dec
mov
int
jmp
sub
push
leave
push
js
scas
mov
das
movsb
xchg
push
cmpsb
jae
xor
mov
pusha
lcall
mov
out
mov
or
xor
out
arpl
sub
js
in
mov
adc
jns
loope
cmp
adc
cmc
or
cmp
imul
mov
cmp
lea
lret
sbb
dec
xchg
dec
in
ret
lods
ljmp
inc
out
insl
mov
jnp
lds
cltd
pop
roll
dec
cltd
out
aaa
adcl
in
jecxz
jecxz
pop
sbb
pop
cmp
xchg
mov
adc
push
popa
dec
insb
mov
sbb
mov
cmp
outsl
repnz
dec
arpl
inc
xchg
cmp
dec
stos
and
push
push
test
and
xchg
clc
push
cmp
xchg
cltd
in
and
inc
outsb
rorl
popf
enter
ss
inc
iret
inc
mov
aas
jno
outsl
icebp
adc
mov
or
fcoml
pop
xor
cmp
pop
mov
decl
fisttpll
int3
mov
clc
mov
fstl
and
sbb
mov
int
leave
add
push
adc
and
sub
mov
mov
xchg
sbb
and
adc
dec
not
orb
jns
arpl
and
sub
iret
and
adc
shl
xlat
orb
sahf
pop
gs
adc
jno
mov
aam
js
mov
test
add
inc
or
stos
dec
cmpsl
mov
ja
jl
mov
mov
or
xchg
adc
rorb
popf
mov
loop
dec
mov
movzwl
pop
repnz
sub
bound
fucomp
imul
xor
ret
lcall
push
push
xchg
pop
jmp
fnstenv
mov
filds
aam
ret
jg
push
lock
pop
ret
dec
aad
nop
call
adc
test
sarl
xchg
es
xorl
aaa
adc
sub
dec
push
cld
inc
mov
mov
daa
dec
or
ljmp
clc
movsb
mov
imul
pop
adc
mov
sub
and
outsb
mov
mov
inc
pop
pop
loope
out
enter
adc
fimull
fldlg2
in
jl
sbb
adc
fbstp
inc
xchg
inc
nop
rcrb
sub
sahf
test
icebp
jg
adcl
jl
mov
push
stc
push
icebp
jecxz
mov
pop
dec
mov
insl
es
or
popf
shll
loope
ljmp
xor
shll
mov
rcll
xchg
inc
jb
leave
adc
push
jne
adc
jg
lds
push
movsb
or
push
pop
std
loope
loopne
dec
fnsave
mov
enter
ret
jo
sub
push
mov
lahf
pop
cmp
mov
pop
add
push
cli
sub
and
or
sub
adc
scas
fisubrs
or
imul
adc
jb
enter
scas
push
xchg
rorl
inc
je
fprem1
pushf
std
stos
lods
leave
stc
pop
fidivs
and
inc
call
push
addr16
mov
sar
cmp
pop
test
sti
into
into
or
test
ret
jmp
insl
dec
xchg
add
jl
cld
jl
pusha
jle
mov
pop
out
cwtl
lret
add
sub
push
pop
lods
pop
xchg
push
mov
or
pop
dec
sti
sbb
pop
inc
xchg
lock
mov
insl
adc
or
mov
pop
xchg
push
lock
and
movsl
adc
inc
aas
xorb
add
cld
das
sarl
js
push
jg
insb
sub
rcl
push
data16
rcll
imul
xor
imul
mov
pop
loop
sub
sbb
mov
jg
divb
or
push
icebp
sub
stos
aas
lods
in
outsb
mov
por
xchg
aaa
push
pusha
ret
cmpb
fdivs
jne
lahf
loop
or
rol
xchg
pop
shll
inc
movsl
xchg
xchg
mov
jbe
mov
push
mov
scas
or
push
fwait
mov
jmp
pop
lret
addr16
add
pusha
aaa
dec
xacquire
fmuls
imul
gs
icebp
std
mov
mov
stos
lods
push
sub
push
mov
mov
das
mov
int
ja,pt
popf
pop
movsb
jb
mov
lods
mov
mov
les
cld
mov
insl
fadd
cmp
xor
or
out
mov
lret
mov
mov
out
call
lahf
rcrb
add
or
cmovbe
inc
rclb
or
js
rorl
test
push
inc
adc
inc
arpl
out
cs
jmp
lahf
jbe
sub
bound
shrb
xlat
dec
aad
dec
dec
loope
pusha
pop
mov
ljmp
orb
or
fmulp
ds
jl
add
leave
lock
insb
jl
cmpsl
pop
loope
ret
fisttps
jp
loop
popf
ja
lock
xor
and
stos
push
dec
prefetchnta
mov
out
arpl
arpl
in
push
and
sbb
mov
lods
sti
nop
icebp
or
mov
out
iret
mov
mov
xor
mov
icebp
movsl
pop
hlt
xor
insb
data16
std
hlt
fxch
dec
mov
cs
daa
loopne
aam
hlt
popf
xor
mov
lahf
push
psrlq
cld
sarb
xlat
xlat
leave
jl
loop
dec
fmull
pop
mov
aam
and
jecxz
imul
les
push
inc
loop
cmc
movsb
adc
pop
cmp
mov
jp
add
loope
rcr
dec
xchg
push
icebp
xchg
ds
subl
fadds
mov
outsb
jp
cmp
xor
out
mov
cltd
jmp
sub
mov
cmc
pop
push
pop
inc
mov
add
add
sbb
push
push
sbb
mov
mov
scas
fwait
sub
es
and
scas
push
add
icebp
jmp
mov
mov
and
icebp
iret
ret
lock
cltd
lret
aad
fsubs
push
out
jns
jnp
stc
out
icebp
stos
push
pop
fimuls
lahf
in
mov
lods
mov
aas
bound
gs
mov
lock
jg
xchg
adc
lret
incb
mov
jno
lcall
fbld
bound
shrb
sarb
pop
pop
popa
push
fidivrl
fisubl
mov
or
inc
je
sbb
aaa
jge
pusha
mov
shrb
cmpsl
sub
inc
scas
pop
cltd
addr16
inc
xor
push
pop
sbb
dec
xor
stc
or
inc
xchg
mov
jb
int
cmp
xchg
pop
jbe
inc
lcall
jnp
imul
sti
push
out
dec
out
and
mov
mov
push
mov
push
stos
pop
add
dec
int3
dec
fwait
mov
adc
stos
sbb
cmp
jmp
fadd
lods
jecxz
sub
xchg
xchg
rol
lock
xchg
fwait
ret
xor
sbb
stos
push
push
xchg
xor
sbb
les
xor
movsb
das
sbb
fs
sub
adc
js
lods
pop
es
sub
sarl
mov
dec
xchg
or
shrb
lahf
fidivrl
xor
inc
lock
xor
pushf
pop
sbb
lahf
je
jne
inc
call
pop
cwtl
cwtl
xor
xor
mov
aam
jae
jbe
push
mov
push
fs
fsubl
clc
stc
xchg
add
cltd
mov
and
xor
ret
aam
cmp
xchg
or
pop
lret
rcr
lahf
sbb
xchg
xor
les
or
inc
test
jae
mov
push
pushf
shlb
and
xchg
push
jbe
xchg
mov
xchg
sub
ds
pop
push
mov
addr16
pop
dec
add
push
js
and
xor
mov
mov
pop
stc
or
xchg
mov
mov
jb
scas
and
add
pop
das
adc
loop
xor
xchg
rol
mov
fcmovb
push
aaa
imul
aaa
lods
xchg
test
mov
sbb
ficoml
sub
mov
mov
sbb
sbb
or
aam
shlb
cld
xor
dec
push
sbb
push
or
pop
js
ja
repz
adc
bound
inc
pop
pushf
sub
movsb
les
nop
les
mov
sbb
mov
sarl
fcmovnb
xor
pop
jno
push
addl
dec
push
push
mov
pop
jnp
enter
push
pop
mov
cli
cmp
mov
lahf
push
outsl
jp
out
xor
mov
lret
lock
push
lods
adc
jmp
pop
cli
push
pop
ss
mov
lahf
sub
xor
jns
sbb
lret
clc
mov
push
xor
mov
repz
mov
adcl
or
repz
mov
rolb
and
popf
imul
cmpb
mov
out
jge
aas
jle
sub
call
inc
sbb
loope
ret
xor
imul
test
jge,pt
xor
imul
mov
jo
aad
imul
scas
inc
jns
out
sub
xor
cmp
mov
icebp
jno
mov
icebp
sub
loopne
ds
js
adc
cli
cmp
shrb
sti
fisttpl
sbb
lret
test
xlat
je
dec
lock
sarb
int3
mov
loope
cmp
sub
push
cmp
lcall
out
adc
inc
and
mov
das
in
ja
incb
push
or
xor
push
push
and
jmp
cmp
js
cmp
lahf
and
jle
aam
cmpsb
popf
ret
pop
or
cmp
sub
mov
xor
outsb
sub
fs
cmp
popf
or
or
aad
repnz
int
sub
push
orb
pop
shl
pop
js
or
gs
aad
xchg
shl
outsb
mov
mulb
xlat
ds
stc
dec
push
lods
pop
int
add
cmp
mov
add
xchg
into
inc
add
push
cmp
and
clc
push
or
mov
cmp
ss
stos
inc
stos
pop
iret
jbe
out
add
dec
jmp
mov
and
imul
lret
push
shll
int
mov
fisubs
int
lcall
stos
mov
lahf
data16
or
std
dec
or
pop
gs
test
pop
add
mov
lret
repz
rorb
daa
loop
fistps
popa
jae
cmpl
push
push
push
repz
jmp
sahf
push
mov
or
dec
stos
in
jne
andb
and
jno
movsl
push
leave
adc
sarb
jne
mov
xor
and
add
jnp
adc
cwtl
xor
ja
dec
mov
cmpl
dec
jnp
sub
iret
fs
mov
mov
rorl
or
push
sub
mov
and
mov
push
movsl
imul
pop
je
outsl
hlt
je
sub
stos
adc
mov
mov
fsub
gs
mov
in
jne
call
ficoml
pop
test
leave
xchg
and
loopne
xchg
dec
or
in
lret
popa
push
loopne
imul
adc
push
ret
int3
mov
cwtl
bound
and
adc
dec
sahf
cmp
cs
mov
loop
push
call
decl
sub
or
mov
data16
imul
inc
mov
pop
sbb
repz
iret
jb
lods
mov
subl
or
neg
add
sbb
loope
push
cmp
push
arpl
add
mov
test
iret
fists
ljmp
enter
jl,pn
add
hlt
xchg
mov
enter
subl
test
lock
pop
dec
mov
stc
ret
or
inc
pushf
mov
insl
jne
xchg
jge
jb
in
xor
sub
push
mov
xlat
push
jmp
or
inc
adc
mov
dec
push
inc
pop
cmc
xorb
inc
pop
addr16
sarl
scas
pop
jmp
movsl
scas
in
std
fs
mov
sub
push
mov
mov
ds
filds
inc
mov
inc
mov
movsl
mov
dec
je
leave
push
inc
push
aam
and
adc
lock
nop
jmp
mov
sbbb
xchg
cmp
bnd
and
rorb
cld
in
cmp
lds
stos
mov
out
jmp
add
bound
aas
mov
scas
cmpb
ja
lea
pop
cmc
mov
jno
or
dec
cltd
and
push
adc
stos
fsubr
push
imul
je
pop
ljmp
push
fadd
mov
xor
add
pop
imulb
je
mov
pop
mov
push
xor
and
mov
cmp
lea
mov
cmp
mov
aad
or
scas
sbb
call
sbb
ja
iret
stos
mov
xchg
add
sub
cld
or
xchg
push
xor
push
and
dec
cmp
pusha
push
outsl
xlat
nop
add
add
inc
push
inc
add
movsl
mov
cmp
jnp
pop
jecxz
imul
push
inc
les
sbb
mov
cmp
mov
fs
rcrb
mov
inc
dec
xchg
and
ret
sbb
mov
das
mov
add
adc
lcall
push
insl
xor
pop
clc
daa
mov
push
cli
mov
jns
xchg
and
mov
fstps
daa
repnz
xchg
jb
jo
test
dec
aam
int
jno
ja
adc
pop
add
repz
mov
dec
or
out
cmc
dec
jp
and
cltd
xor
pusha
xor
insl
mov
leave
sub
xchg
aad
dec
int3
pop
stc
add
push
inc
ret
sti
mov
fwait
xchg
jns
ja
jno
xor
mov
jecxz
fidivrs
xchg
push
add
cmpsb
imul
add
mov
push
aas
pusha
and
dec
push
stos
jmp
xchg
imul
out
lcall
inc
scas
aad
add
dec
xchg
test
xlat
out
gs
or
pop
les
fisubrl
scas
mov
push
das
sub
adcl
mov
ret
std
imul
out
cli
scas
out
out
loope
sbb
and
adc
ljmp
les
mov
xchg
cmp
adc
rol
xor
les
mov
cmp
fbstp
cmpsl
sbb
mov
out
leave
and
aaa
cld
test
icebp
es
or
push
in
scas
mov
sub
sub
xchg
gs
mov
stos
mov
arpl
add
jl
jg
jne
adc
push
mov
dec
adc
enter
xchg
jb
push
pop
or
imul
popa
sbb
imul
daa
ljmp
push
mov
mov
stos
jae
aas
sahf
aad
push
cwtl
mov
or
lods
test
xor
xor
lcall
shll
dec
fnstsw
pop
repz
mov
sahf
push
jae
pop
movsb
cs
push
xor
fsubrp
in
cltd
out
jecxz
pop
cmp
pop
int3
and
in
pop
or
pop
jno
xchg
ret
pop
fsubrs
ret
jp
mov
out
inc
jnp
and
xchg
popl
sbb
lret
dec
dec
loop
into
and
es
xor
lock
mov
nop
or
fimull
mov
xchg
pop
mov
imul
cld
fsubrp
ret
sbb
outsl
jmp
mov
jbe
jg
mov
pop
dec
cld
xchg
mov
incl
aad
mov
mov
cltd
pop
lods
jbe
inc
mov
add
aas
cmpsl
pop
repz
jbe
movsl
aam
fcom
sub
inc
pusha
push
cmpsb
in
aaa
sub
lock
push
pop
adc
push
xchg
ds
xchg
js
popf
mov
cli
or
ja
add
ss
test
sti
imul
movaps
sub
repnz
adc
cwtl
int3
and
and
les
mov
inc
xchg
push
or
dec
stc
or
cmc
out
push
jno
je
and
add
aaa
addr16
packssdw
xor
fs
jns
ljmp
push
lds
jns
shrb
xchg
add
adcl
jne
int3
xor
hlt
out
aam
mov
sub
mov
stos
add
jbe
push
sbb
repnz
cwtl
ja
push
push
adc
push
pop
jg
loop
jae
add
xchg
iret
push
js
xchg
or
sbb
hlt
cltd
cltd
or
ja
testb
xlat
jmp
fadds
jg
sarb
pop
mov
adc
mov
inc
jecxz
jecxz
movsb
test
in
jge
shll
xor
push
sarb
lret
mov
jp
repz
stos
bound
js
outsl
lret
sub
sti
mov
or
leave
std
iret
cmp
cmc
jg
mov
pop
or
inc
test
xchg
or
roll
loop
stc
adc
dec
cld
gs
push
in
add
repz
push
mov
push
mov
push
std
inc
lods
out
pop
int
sub
adcl
push
push
push
pop
add
mov
cmp
adc
cmp
mov
push
xor
jbe
mov
aad
jge
dec
ja
pop
pop
mov
or
cmp
nop
fwait
mov
test
and
xchg
mov
cmp
gs
testl
movsb
jb
lahf
ret
pusha
jecxz
imul
xchg
lcall
or
pop
in
in
pop
cltd
lahf
mov
negb
or
xlat
sub
push
imul
out
xorb
cmc
movb
cmp
ja
or
and
pop
outsl
aas
add
sub
dec
insb
ja
dec
stos
xchg
aaa
das
stos
jmp
xchg
jl
and
pop
xchg
ss
jmp
inc
insb
std
sarb
out
and
cli
push
imul
push
inc
mov
cwtl
jno
jp
inc
pop
jnp
push
into
ja
cwtl
jmp
ds
mov
inc
push
jb
sbb
mov
inc
cmc
lret
pop
aam
mov
mov
mov
sbb
xorb
divb
pop
call
jo
mov
ret
popa
xor
lds
dec
mov
repnz
nop
scas
mov
std
fiadds
sbb
test
sbb
data16
aad
int3
jl
push
ja
xchg
loope
pop
jns
pop
jbe
div
mov
xlat
push
outsb
int3
dec
sahf
dec
sub
adc
arpl
dec
fsubrs
cmpsl
les
call
xor
dec
ret
jae
gs
xchg
jbe
cltd
push
mov
pop
stc
or
pop
jecxz
push
dec
cld
or
jmp
or
scas
imul
jno
in
add
lret
cmp
add
push
movsb
jbe
arpl
push
sub
sahf
pop
mov
enter
and
add
int
inc
gs
and
test
pop
or
dec
xchg
mov
mov
fldcw
imul
push
mov
ds
sub
push
enter
mov
xchg
sbb
addr16
pop
or
cmp
inc
pop
push
cwtl
fisubrs
shrb
or
loop
pop
lret
xorl
or
adc
push
aaa
add
imul
pop
mov
iret
ja
adc
cmp
je
insl
and
inc
stos
scas
and
add
mov
outsl
mov
psubsb
fstps
push
xchg
ret
jmp
ljmp
ja
mov
out
std
lcall
sahf
xor
daa
les
movsb
adc
or
pop
xchg
negl
test
push
jnp
hlt
xchg
xchg
mov
in
mov
movsb
and
jo
push
lcall
ret
or
gs
xor
in
mov
imul
and
in
inc
or
adcb
arpl
subb
setg
insb
xchg
or
or
das
cwtl
es
sbbb
cmpsl
imul
frstor
std
out
push
stc
imul
pushf
xor
add
enter
insl
fndisi(8087
add
jge
xor
and
aaa
movsb
xchg
jns
jp
roll
ds
adc
shlb
repnz
popa
push
push
mov
and
inc
jne
adc
mov
push
adc
popf
jg
dec
aas
andl
data16
aaa
in
pop
or
xchg
arpl
sbb
cmp
popa
loopne
arpl
jb
lods
dec
icebp
hlt
mov
rorl
and
mov
je
ret
in
shll
aaa
test
call
insl
mov
sarl
cmp
adc
dec
sub
push
mov
mov
daa
adc
jnp
jno
sub
popa
lea
insl
repz
sub
add
cmpsb
cmp
inc
lcall
in
mov
push
adc
push
sti
mov
fadds
test
jmp
sub
insl
sti
addr16
dec
shl
aaa
mov
lds
outsb
jle
pusha
jne
pop
push
inc
lcall
ficomps
rorb
push
nop
sub
gs
or
dec
xchg
sbb
fisttpl
inc
push
lcall
sbb
jne
in
movsl
lahf
mov
mov
loope
ja
lods
or
xlat
stc
dec
movsb
mov
sub
xor
push
lds
or
idivl
push
xor
out
and
sbb
sbb
arpl
sbb
shll
push
lock
jae
enter
jnp
adc
jne
push
sbbb
pop
stos
mov
dec
and
xchg
xor
inc
mov
bound
fstpl
popa
add
mov
es
repz
or
xorl
ds
int3
pop
and
add
jae
rolb
cmp
insl
popf
js
lret
push
ret
lods
push
or
fstps
jge
mov
or
xchg
xchg
scas
unpcklps
decb
fcmovbe
fucomp
clc
pop
test
ret
lret
repz
imul
mov
and
dec
pop
sbb
mov
jnp
inc
mov
loopne
ret
inc
push
jp
xchg
es
dec
mov
sbb
mov
pop
mov
pop
jge
and
or
in
ss
popa
testb
cmp
inc
popf
mov
inc
subl
pop
jmp
sti
jecxz
sub
dec
mov
sub
or
push
inc
push
stos
movq
xchg
ret
rcr
sar
andps
lcall
sbb
pop
cwtl
mov
sbb
sti
popf
mov
cli
sub
push
or
and
mov
inc
je
das
test
icebp
test
xor
sub
cmpsb
and
pop
xor
mov
pop
lea
dec
ds
sub
cmp
dec
adc
scas
addb
and
pop
lock
dec
push
in
rcll
ror
scas
or
xchg
xchg
or
add
test
into
inc
dec
iret
xchg
inc
icebp
or
mov
adc
insb
cld
xchg
loope
pop
lret
lret
push
addr16
xchg
push
stos
add
cmpsb
and
bound
in
adc
mov
lret
popa
test
cmp
mov
shr
sub
fdivp
pop
dec
push
rol
aas
fs
lods
hlt
ss
daa
das
pop
push
jle
xor
mulb
jg
push
jg
pop
pmullw
cli
leave
js
shrl
mov
fwait
ss
shr
lods
mov
roll
push
or
nop
lahf
imul
fldenv
imul
sbb
cwtl
into
pop
sbb
stos
push
adc
inc
mov
stos
mov
push
lret
cmpsl
sarb
scas
jno
or
xchg
daa
jo
mov
js
xchg
sbb
enter
lea
xor
xor
xor
dec
in
push
mov
mov
je
sub
xor
or
data16
xchg
mov
mov
in
mov
repnz
mov
xchg
jbe
ja
mov
sub
test
cmp
jnp
adc
and
stc
inc
jb
pop
sub
inc
jb
rorb
xlat
jo
or
cmp
shll
ret
xchg
dec
mov
adc
or
mov
data16
insl
mov
cltd
adc
inc
aaa
bound
mov
jns
inc
roll
cmp
iret
xchg
stc
cld
fbld
jnp
add
pop
pop
inc
inc
movsl
ficompl
std
mov
fcomip
pop
fcompl
hlt
test
push
sbb
dec
aam
mov
dec
ret
ret
xor
pop
mov
sbb
push
sbb
ljmp
or
pusha
pop
jg
cmpl
inc
or
loop,pt
insl
and
sbb
int
mov
sbb
mov
inc
fidivs
mov
sub
sbb
mov
ret
aas
sub
mov
mov
sahf
pushf
push
lcall
dec
mov
test
enter
stos
movsb
or
inc
sbb
mov
mov
mov
mov
and
and
std
popf
xor
mov
sbb
cmc
sub
loop
sbb
add
stc
lea
cmp
or
add
mov
ss
cmpsl
leave
xor
jnp
mov
insl
inc
dec
movsl
and
cld
je
cmpsl
cs
scas
and
jne
push
daa
andb
push
pop
sub
insb
push
push
dec
lret
nop
xor
bound
pop
ljmp
lcall
cmp
xchg
lods
sbb
scas
rclb
daa
sub
leave
fstcw
clc
repnz
sbb
and
xor
loop
daa
gs
push
mov
clc
lock
adc
dec
test
hlt
sub
sahf
sub
mov
pop
adc
lret
andb
inc
test
cmpsb
popf
hlt
das
adc
mov
push
sarl
mov
mov
jl
and
pop
inc
js
xchg
out
fcmovnu
in
and
or
lcall
mov
jecxz
mov
jo
outsb
xor
or
movsl
nop
mov
test
out
stos
jae
ljmp
rcrl
into
adc
pop
cld
dec
lds
bound
rorb
sbb
sti
std
mov
jbe
sti
lea
cs
xchg
jb
push
mov
sub
jns
pop
and
jl
add
jo
lods
jo
fidivrl
repz
in
loopne
rcr
les
pop
add
inc
int3
inc
or
incl
cmpsb
xchg
mov
test
cmpsl
lret
xor
int3
or
xchg
aaa
adc
mov
adc
mov
stos
cmpl
cmp
into
sub
push
dec
cmpsb
mov
add
movsl
jo
ja
lret
ss
inc
jae
in
xlat
jae
adc
jns
cmp
ljmp
push
sub
xchg
mov
orb
and
aas
dec
lea
mov
pop
mov
adc
lahf
cli
popf
adc
xlat
inc
push
xor
xchg
mov
mov
mov
iret
push
jne
and
jns
in
xchg
cmpsb
cmpsb
mov
jno
jae
fidivs
loopne
fistpll
aas
fdivr
aaa
stc
aas
pop
jmp
push
cwtl
adc
dec
mov
cmpsb
fdivr
cmp
jg
nop
daa
rcrl
lds
xchg
loope
add
ds
or
sbb
mov
mov
sbbl
jecxz
adc
xor
out
outsb
cmp
outsb
aas
jmp
cmp
popa
add
push
cmp
lcall
inc
add
in
add
xlat
pop
insb
push
inc
ja
xor
mov
and
sub
sub
ror
cmp
int3
jne
adc
xchg
pop
data16
loopne
push
iret
add
out
push
mov
or
or
test
and
mov
pop
fninit
inc
sub
pop
pop
lcall
sub
or
movsl
sbb
add
shl
xchg
stc
inc
add
std
pop
jb
fmul
sub
test
dec
mov
inc
cmc
xor
inc
xchg
popf
pop
xor
xchg
out
or
mov
sahf
stos
out
cli
add
das
jg,pn
mov
push
pop
or
fdivrs
stc
push
iret
mov
xchg
mov
cltd
pop
fmuls
lahf
cmp
clc
push
rorb
js
ja
mov
leave
mov
jae
enter
mov
shl
dec
repnz
vpunpcklwd
push
rorl
pop
dec
movsb
or
mov
mov
pop
dec
jmp
pop
inc
lahf
or
frstor
data16
movsb
xchg
jle
daa
xchg
rorl
or
push
xor
xchg
pop
pop
lods
adc
mov
out
push
mov
sub
das
and
imul
cmp
push
test
fildll
insl
mov
lcall
jl
mov
es
jb
mov
fcompp
xor
enter
or
jb
leave
js
push
mov
jns
push
xchg
loop
pop
sub
icebp
xchg
insl
dec
jmp
leave
cs
lods
in
in
mov
adcl
or
movsl
out
stos
xchg
ret
nop
loopne
adc
lret
cmpsb
fidivs
pop
fnsave
cmp
and
lea
cmpsl
iret
adc
lds
cmp
fcompl
and
scas
push
sbb
jbe
push
cltd
dec
arpl
popf
aam
xchg
mov
popa
and
sarb
loopne
mov
icebp
hlt
imul
xor
mov
cmp
dec
rolb
ss
adc
testb
pop
and
inc
xchg
test
mov
pop
adc
push
scas
daa
mov
mov
daa
xchg
fimull
out
stc
scas
lcall
insb
hlt
pop
or
insb
sti
mov
scas
hlt
arpl
push
test
pop
adc
cs
xchg
lcall
std
or
andb
fs
insl
icebp
jo
icebp
jbe
aam
aad
in
sub
jb
cs
add
pop
push
sbb
cmp
xchg
ss
lahf
mov
stos
add
cmovns
js
pop
lds
seta
pushf
jae
adc
or
das
jmp
xor
test
rcll
lock
push
ja
mov
and
dec
inc
clc
lods
jmp
test
scas
fcoml
fdivrs
aas
mov
rolb
jb
mov
inc
rolb
out
int
mov
dec
cs
mov
outsl
out
mov
cmp
inc
aas
out
das
lcall
mov
mov
ffreep
and
xchg
leave
pop
mov
les
leave
pop
push
xor
sbb
in
movl
jl
stc
add
int3
xorl
adc
test
jl
in
lahf
cltd
and
xchg
out
scas
adc
gs
pop
xchg
mov
and
xlat
xchg
les
mov
xor
dec
aaa
imul
insl
dec
cmp
lcall
pop
popa
in
dec
lds
jmp
cld
cmc
mov
pop
xchg
mov
mov
sbb
aaa
addr16
push
imul
sti
dec
or
mov
dec
push
adc
dec
mov
lods
das
subl
imul
jo
jge
push
or
js
test
fcomp
stos
in
pop
enter
cmp
repnz
inc
nopl
cmpb
dec
int
mov
and
cmp
push
into
push
es
fimull
pop
scas
out
and
mov
and
mov
bound
add
stc
adc
aaa
sub
dec
mov
mov
cli
mov
cmc
repz
fmull
sub
cmpsl
call
pop
and
insb
pop
out
push
push
push
mov
insb
mov
mull
mov
and
dec
jecxz
lcall
lea
testl
bswap
fistpll
mov
jg
add
mov
int3
dec
test
or
xor
ss
loope
push
sub
clc
out
adc
jb
fsubp
mov
push
aas
rcrl
jmp
test
js
fnstenv
pop
aas
popa
lcall
adc
lods
pop
push
sbb
lret
xor
sub
mov
push
movsl
or
mov
xor
mov
mov
push
lcall
mov
sub
push
arpl
dec
jmp
inc
xlat
jmp
sub
cmp
shl
inc
jmp
pop
and
dec
jg
mov
push
cmp
and
sbbl
adc
jb
or
in
or
jae
xchg
ljmp
call
fs
xor
adc
cli
adc
scas
jb
add
into
shl
cmp
push
ret
mov
call
loope
mov
add
leave
mov
mov
mov
ret
push
stc
test
cld
out
mov
push
adc
and
mov
repnz
sbb
xchg
mov
lds
sarb
insl
jb
pop
mov
xor
adc
and
out
sbb
fstl
xchg
into
xchg
subb
aam
rep
popa
addr16
ss
sahf
xor
in
mov
push
add
mov
leave
jg
jp
mov
aad
mov
out
roll
or
inc
adc
cmp
shll
iret
shlb
fld
test
loope
in
mov
sub
outsl
fwait
or
dec
xlat
jae
rcr
add
xchg
ds
scas
inc
xchg
lds
inc
cmp
fcoms
xor
jp
inc
ret
sbb
shrb
inc
addl
sbb
sbb
xchg
insl
outsb
cmpsb
dec
xchg
cmp
cmpsl
sbb
cmp
popf
push
push
xchg
movsl
out
mov
sahf
xlat
inc
inc
ret
in
testb
enter
push
mov
or
stc
dec
sub
or
and
sub
jnp
xor
sbb
rol
inc
sub
and
push
inc
sbb
scas
pop
lock
push
lahf
lods
mov
dec
mov
loopne
pusha
clc
push
mov
dec
xor
mov
push
fiaddl
add
in
pop
loope
movsb
jae
cmp
cltd
fldenv
insl
and
pop
pop
cli
movsl
fnstenv
jnp
sbb
hlt
adc
cmp
xlat
mov
lahf
dec
or
mov
adc
adc
pusha
leave
cmp
xor
aas
mov
push
mov
push
mov
xchg
sub
repz
cwtl
loop
fidivs
insb
inc
out
push
xchg
enter
dec
inc
popf
imul
and
outsb
push
sub
fsubs
cmp
stc
xchg
lds
addr16
mov
je
aam
cmpsl
arpl
inc
push
cmp
inc
lret
iret
lahf
jge
mov
hlt
imul
jp
cltd
add
imul
pop
jne
or
or
aad
js
std
not
mov
and
xchg
es
out
add
jecxz
mov
test
xchg
push
or
sub
mov
iret
mov
jbe
imul
mov
test
stos
mov
mov
xor
mov
xchg
mov
mov
test
aam
lock
fwait
aaa
push
mov
fldln2
and
aad
and
scas
ss
jmp
jmp
add
jae
xchg
add
push
push
xor
xchg
stc
arpl
mov
xor
jecxz
popa
clc
jno
xor
jmp
mov
lcall
sbb
loope
enter
mov
xchg
stos
data16
pop
nop
add
xchg
add
jle
sub
fidivs
pop
push
push
loope
fwait
insb
int3
adc
inc
lahf
pusha
and
sub
xchg
mov
in
outsl
cmpsl
stos
cmp
nop
dec
push
sub
imul
xchg
rcrb
push
adc
loopne
rorb
xor
jb
arpl
stos
pop
sbb
inc
mov
jmp
jmp
cmp
and
dec
sbb
ret
push
int
mov
push
mov
in
jmp
sbb
mov
mov
scas
mov
cmpsb
inc
maxps
mov
popf
mov
pop
ficoms
push
imul
and
adc
repnz
sbb
pushf
cltd
xchg
insb
dec
jo
int3
ds
data16
in
adcl
stos
cmpsl
sbb
adc
jbe
movsl
mov
xchg
mov
push
jle
push
sub
and
js
fwait
or
mov
test
mov
mov
sub
adc
mov
inc
shl
adc
inc
mov
repnz
jns
xchg
push
xchg
ret
xchg
mov
es
adc
cmpsl
pop
int
add
icebp
inc
push
loopne
ss
leave
adc
xchg
dec
sbb
cmovb
fdivrl
jo
dec
pop
stos
xchg
inc
mov
lret
or
cmpsl
inc
in
jp
mov
or
fcmovu
pop
pushf
pop
sub
sti
cltd
push
jae
inc
inc
dec
mov
sbb
add
out
and
pop
xor
xor
jmp
repnz
rcrb
fidivl
adc
jae
add
push
sarb
push
jg
fcmovnu
lds
int
cmp
fs
mov
push
mov
xor
ror
xor
out
xchg
pop
sbb
out
sbb
pushf
xor
dec
inc
repnz
inc
lea
sub
arpl
mov
or
je
jns
fldcw
jle
mov
sbb
fistl
mov
cmp
inc
in
lahf
leave
mov
fs
fcoms
or
dec
jmp
lahf
fsubl
lock
mov
xchg
pop
jb
mov
gs
xlat
icebp
not
adc
cmp
mov
inc
aam
loopne
and
cld
mov
cmp
mov
std
test
scas
cmc
leave
ret
and
ja
lahf
js
lcall
xchg
cmpsb
shl
je
xchg
cmp
xchg
outsb
outsb
data16
cli
stos
fs
aam
jb
jmp
das
movsl
pop
cld
cltd
jae
cmp
arpl
sbb
add
xchg
add
jb
inc
push
push
jb
jg
cmc
jo
xor
cs
mov
repnz
jge
fld1
shlb
fidivl
add
mov
xor
mov
dec
mov
xchg
xchg
mov
mov
les
push
sub
adc
add
movsl
push
dec
stos
mov
aam
cltd
inc
mov
or
aas
xor
adc
push
dec
push
fsin
and
imul
arpl
xor
divl
sti
leave
and
bt
sbb
cld
cmpsl
push
cmc
out
fcoms
jle
mov
push
aas
cmp
ret
sub
jp
movsl
pop
add
scas
fbld
test
sub
rdmsr
ret
repz
add
push
movsb
inc
test
jne
lret
cmp
into
dec
aas
test
sub
pop
fnstcw
mov
in
jae
cli
sarl
and
popa
pushf
sbb
andl
lcall
pop
push
imul
pop
nop
jmp
imul
sbb
sub
or
sti
mov
mov
dec
adc
xchg
mov
fs
xchg
fisttps
push
sbb
lcall
inc
dec
pop
inc
popf
xlat
adc
gs
sbb
jl
out
add
jp
xor
cmp
fsts
mov
mov
imul
and
les
or
into
std
std
lock
jb
jb
jae
or
out
inc
xchg
cmc
add
push
mov
call
lret
inc
imulb
test
ret
rorl
mov
mov
xor
jp
add
outsb
mov
sarb
rcrb
adc
push
pop
outsl
ljmp
pop
jo
pop
sbb
or
xlat
arpl
add
cmc
sbb
jmp
pop
nop
cmp
mov
pop
push
dec
jns
mov
btr
loop
cmpsl
mov
repz
cltd
push
mov
pop
ficoms
ss
mov
jle
cmp
and
xor
cmp
fistpll
xchg
jbe
lods
daa
xchg
sub
out
dec
and
mov
dec
or
lahf
out
push
pop
out
fwait
xor
sub
je
ja
pop
jb
stc
xchg
sbb
pop
and
or
sub
outsl
lahf
pop
pop
add
int3
pusha
jnp
int3
xchg
jmp
repz
loop
ret
and
lods
ret
or
int3
mov
ret
daa
je
add
aad
fsts
andl
roll
or
push
test
cwtl
adc
mov
mov
add
out
ljmp
fstps
ds
popa
in
mov
mov
jmp
xchg
xchg
cmp
fwait
mov
and
stos
out
gs
jmp
decl
fists
mov
pop
cwtl
ds
dec
rcrl
cmp
arpl
lcall
shlb
mov
rclb
shrl
fisttps
pop
sub
adc
mov
ret
in
or
pop
mov
add
out
sub
pop
inc
sub
xor
outsl
xchg
pop
jnp
mov
cwtl
pop
movb
push
js
sub
lret
and
rcl
jmp
add
shrl
cmpsb
loopne
push
sbb
push
neg
jae
lret
cmp
mov
lahf
in
dec
std
or
mov
cmp
sub
out
les
jb
sbb
mov
cmc
add
cmp
sub
lahf
fnstcw
add
imul
test
jnp
cs
je
push
mov
adc
std
dec
mov
std
cli
xchg
adc
adcl
and
mov
pop
loopne
xchg
fnstenv
scas
das
mov
bound
sysexit
fs
dec
fdivl
adc
mov
jge
push
sbb
popa
lahf
fstpt
fptan
das
mov
loopne
dec
mov
mov
xlat
insl
jg
jge
lock
ret
sahf
shll
inc
outsb
pop
in
mov
jmpw
cwtl
xchg
int
scas
pusha
xchg
cmpb
ds
cld
pop
xchg
xlat
fcom
or
and
push
dec
cmp
ljmp
xlat
in
shlb
js
mov
dec
mov
cwtl
jno
jp
xor
pop
and
fbld
xlat
sbb
dec
sbb
pop
pusha
and
mov
xchg
push
orb
xor
mov
lods
cmp
pop
inc
cmp
jle
add
sbb
in
dec
inc
int
andb
mov
lods
cmp
sub
and
jns
push
push
scas
ret
adc
addr16
mov
push
and
aam
fildl
dec
decl
mov
fstl
daa
enter
push
cwtl
cmp
and
push
push
inc
mov
mov
stos
xor
imul
push
movsl
outsl
test
aam
je
jae
push
inc
mov
add
and
pop
adc
push
cmovne
mov
and
or
dec
mov
call
add
mov
test
pusha
lods
sbb
stos
push
cmp
sub
out
repz
repz
ljmp
pop
dec
cmc
pop
mov
cmpl
add
inc
mov
lods
push
inc
push
jns
mov
es
shlb
adc
xchg
je
repz
xchg
push
jp
fcoms
fucomi
dec
addr16
cld
fcmovne
addl
xchg
adc
jo
jne
movsl
fadd
dec
lock
jns
repz
addr16
pop
mov
addl
int
mov
cmpsl
loopne
mov
ss
adc
imulb
and
cmc
inc
cwtl
pop
cmp
lcall
int
mov
sub
jns
inc
ljmp
xor
pushf
add
sar
adc
sub
enter
jle
rcll
and
mov
fwait
sbb
mov
sbb
mov
push
push
inc
adc
xor
jbe
jmp
xchg
mov
push
cs
xchg
fs
out
fldt
jl
cmp
call
outsb
sahf
push
or
sbb
pop
mov
test
mov
lahf
jae
repnz
jne
pusha
in
push
icebp
mov
int3
add
or
jecxz
subb
inc
std
les
lret
sahf
push
dec
or
push
sub
inc
jno
les
and
jg
xchg
js
mov
scas
popf
movsl
add
cmp
push
inc
gs
stos
popf
push
fsub
movsb
push
mov
mov
xor
xor
adc
js
push
sbb
adc
jp
bsf
or
loopne
out
jg
xchg
cmp
xor
sti
add
xchg
mov
dec
test
aas
xchg
push
xor
xchg
in
mov
mov
jl
in
mov
in
jmp
mov
sbb
or
ss
mov
sbbl
sub
xchg
mov
pop
ds
mov
enter
fcomi
mov
push
or
inc
or
xchg
sbb
int3
push
and
loop
fisttpll
leave
mov
aaa
add
mov
int3
imul
add
xor
imul
jp
xchg
test
js
mov
out
and
xchg
xchg
mov
cmp
push
subl
rcrb
out
stos
pop
pop
fcomps
ljmp
jl
ficomps
test
arpl
test
push
scas
cwtl
jmp
loope
inc
xchg
push
adc
cmpsb
xor
jne
and
push
xor
pop
mov
sahf
jle
xchg
lret
push
cli
jae
lods
jns
test
insb
data16
add
push
sbb
fwait
dec
dec
pop
aad
std
sub
inc
adcb
rol
es
enter
sbb
inc
nop
add
iret
pop
nop
adc
pop
stos
subb
sub
test
mov
je
sub
inc
bound
scas
in
xchg
fistpll
xchg
mov
shrl
mov
in
enter
inc
cmpsb
fsubrs
adc
nop
dec
xchg
insb
mov
lret
push
and
mov
std
mov
push
test
lea
data16
sbb
call
in
xchg
xor
je
filds
shl
repz
js
jmp
cmp
lds
pop
jns
mov
lea
scas
insl
jg
xchg
fcmove
cmp
jle
cmpsb
and
sub
mov
mov
push
lea
jbe
jns
adc
push
lret
mov
data16
sub
sahf
xchg
stc
xchg
insb
sub
pop
repnz
mov
and
push
lret
outsb
sarl
sahf
cmova
stos
add
and
movsl
and
pop
stos
fbstp
cli
fstp
adc
jmp
and
add
inc
cmp
pushf
addl
mov
adc
push
pushf
cmp
orl
movsb
xor
xor
mulb
ds
cmp
cmp
sub
pop
push
push
shl
lods
cmp
ljmp
rorl
sbb
jg
in
cld
mov
mov
es
push
das
popf
pop
data16
shrb
fisubrs
pop
sahf
inc
nop
js
lcall
cmc
das
cmp
cwtl
call
mov
lods
imul
outsl
imul
mov
xor
xor
push
or
pop
cltd
pop
xchg
cmp
ljmp
fdivrp
sahf
insl
and
sbb
mov
adc
or
jbe
cmc
sub
or
jb
rcl
repnz
jecxz
or
dec
push
mov
jmp
test
xor
push
sbb
adc
xchg
je
int
int3
cltd
xor
sub
pop
cmc
fbld
push
cmp
out
subl
jno
xchg
fisttpl
cmp
push
imul
icebp
lea
pusha
dec
test
lea
addl
fisttpl
gs
cmp
inc
sub
aad
mov
fnstcw
or
add
xchg
push
mov
aad
push
adc
imul
sbb
xchg
cld
sub
inc
stos
lods
dec
xor
loopne
pop
adc
sub
jmp
or
sbb
add
dec
out
pop
stos
leave
cwtl
and
pop
inc
push
repz
cmp
dec
adc
push
call
aaa
push
cmpsb
fcoms
push
popa
cmp
mov
push
push
pusha
mov
in
movsb
or
daa
sub
sub
mov
xchg
jle
jo
pop
lods
fstl
pop
and
cmp
xor
cmc
inc
inc
ret
adc
nop
out
divl
push
ja
lahf
sub
fadds
add
cmpsl
lods
shlb
xchg
mov
repnz
int3
push
and
test
pop
dec
in
mov
pop
je
out
test
shrl
nop
inc
push
pop
inc
push
hlt
lods
xor
fcompl
leave
jecxz
dec
aad
sub
adc
repz
mov
ja
arpl
bound
stc
jnp
pop
mov
ljmp
and
test
nop
pop
mov
out
sub
sub
test
xor
xchg
dec
mov
pop
fs
xorb
adc
push
icebp
adc
inc
enter
std
outsl
rorl
in
call
mov
mov
roll
fistpl
rolb
cmpsb
fnstsw
hlt
jno
jl
mov
insb
test
xlat
dec
jg
and
and
sub
inc
das
repz
aad
sbb
sub
fnstsw
int
shrb
jne
fbstp
clc
or
lds
in
sbb
jno
inc
inc
mov
add
sub
dec
popf
sub
daa
aaa
sarl
push
je
mov
or
int3
leave
insb
lods
in
mov
mov
adc
mov
pop
outsb
push
jg
dec
cli
fs
fbstp
rol
lock
pop
movsb
push
test
push
xor
inc
lcall
out
jl
sub
lcall
jno
dec
push
cwtl
inc
daa
lret
aad
insl
sti
inc
mov
xlat
push
popa
xchg
or
mov
iret
cmp
push
lahf
stc
mov
bound
and
lea
fcomps
mov
cmpsb
or
mov
mov
jo
inc
jp
and
clc
xor
lret
stos
fbstp
sub
push
xchg
fisttps
aad
and
pop
xor
pop
lods
fistl
mov
push
or
mov
cmp
div
fcoms
sub
fnstsw
pushf
movl
int
dec
rorl
clc
push
icebp
mov
scas
adc
fidivs
mov
ror
stos
ds
jae
sbb
lret
hlt
rorl
clc
and
inc
mov
enter
sub
xchg
inc
inc
lods
jns
insb
add
pop
stos
les
or
sub
pop
xchg
sbb
movsb
je
mov
dec
xchg
int
imull
int3
clc
mov
in
ss
sub
sub
orl
ficomps
sahf
mov
xchg
dec
sbb
arpl
incb
dec
repnz
aad
push
dec
dec
cmpsb
jne
out
movsl
and
mov
push
cmp
cmp
mov
lcall
mov
pop
sub
mov
scas
push
push
sub
sti
push
clc
movsb
clc
fstl
jae
cltd
xchg
mov
mov
push
or
jl
enter
fldenv
mov
incb
lock
fs
mov
out
sub
pop
cmp
cmp
pop
test
int
push
ss
xchg
dec
inc
adc
jg
inc
ljmp
icebp
in
dec
into
push
mov
and
shll
aas
jbe
call
or
mov
cmp
jmp
out
repnz
js
fsub
faddl
or
aam
sbb
jne
int3
dec
outsl
cmp
fstps
cmpsl
test
cmp
push
xorb
mov
outsl
cmpsb
inc
push
outsl
jmp
leave
pop
jbe
or
and
lret
test
inc
pop
in
inc
mov
lods
outsb
jne
js
bound
mov
add
enter
stos
pop
pop
pop
popa
and
mov
loop
addr16
or
into
std
dec
int3
mov
xchg
rcr
xchg
pop
out
mov
cmp
insl
faddl
dec
jl
adc
jno
and
mov
subb
mov
rcr
shlb
xor
add
add
mov
jo
sbb
loopne
in
cmpsl
add
fsubs
mov
incb
loope
inc
out
xchg
mov
in
dec
das
daa
pop
inc
lock
dec
push
jge
sti
mov
movsb
nop
das
ret
mov
insl
stc
jo
ss
mov
aaa
cwtl
sbb
insl
mov
paddsb
flds
adc
push
xchg
xchg
jle
cli
repz
cmp
lret
mov
call
aad
jmp
mov
adc
mov
mov
jl
iret
subl
test
test
clc
movsl
test
adc
add
mov
shll
dec
fcoml
jne
xor
mov
stc
sub
jg
adc
icebp
cld
and
sbb
call
jg
flds
mov
push
fdivl
aaa
fiadds
stos
outsl
mov
mov
jp
jmp
mov
je
mov
int
movl
mov
movsb
jnp
adc
inc
lods
cmp
out
push
in
mov
mov
pop
sbb
jl
stos
test
fstps
fidivl
test
add
mov
movq
mov
jnp
bound
ss
adc
aas
mov
das
movsl
mov
mov
lds
pop
stos
mov
mov
adc
ret
push
push
rcpps
aaa
test
sbb
test
pop
inc
add
stos
mov
xor
mov
xchg
jp
and
fs
adc
lcall
jl
sub
rcr
inc
icebp
inc
mov
add
rorb
dec
xchg
xchg
imul
fstpt
int
shll
fistps
insb
aad
mov
or
dec
test
xor
xchg
jno
mov
add
push
jg
mov
pop
stc
mov
mov
jb
gs
sub
push
int
lret
adcb
jg
jp
ds
popf
jecxz
cmp
dec
adc
mov
daa
dec
inc
mov
jo
mov
pop
imul
add
movsb
cmpsb
jbe
int
add
stc
cmpsb
ss
sbbl
lret
call
jle
cmp
addr16
out
test
pop
cmp
or
and
and
push
mov
ja
xchg
cli
or
xchg
dec
lcall
ljmp
nop
idivb
aaa
insb
jmp
lods
mov
in
adc
repnz
mov
and
fisubl
sub
push
push
sub
aam
les
xchg
pop
pmaddwd
fsubrs
mov
cmpsl
xor
fsubrl
stos
rorb
repnz
pusha
mov
jmp
push
xchg
and
iret
imul
dec
push
push
js
loopne
loopne
or
ss
xchg
daa
mov
rolb
testl
pop
mov
addl
test
jnp
aaa
je
ja
pop
cmc
xor
dec
cmp
mov
or
test
ljmp
sub
and
jnp
jo
push
adc
shrl
fwait
in
sbb
pop
inc
mov
mov
loopne
mov
in
sub
fistpl
dec
push
loopne
mov
bound
lea
xor
inc
rcr
pop
cmp
mov
or
sbb
clc
push
pop
or
xchg
sbb
lock
push
mov
xor
add
mov
call
mov
push
mov
cmp
fidivrl
cs
push
js
fstps
ret
and
aam
and
rcl
in
xchg
outsb
call
out
shlb
jmp
cmc
and
adc
cld
jb
popa
int
lahf
leave
xor
mov
aaa
out
xchg
jne
lds
std
mov
cmp
data16
in
sbb
pusha
adc
jne
movsl
inc
mov
add
cmp
in
cmp
push
stc
cmp
cmpsb
je
je
pop
add
inc
subb
iret
mov
loop
aam
jl
mov
xor
inc
xlat
pop
mov
push
nop
pop
jecxz
test
inc
sbb
push
xor
fiadds
inc
lcall
jle
xor
xor
enter
outsb
xchg
ss
mov
out
sub
imul
mov
test
mov
lods
and
pop
lea
dec
sub
scas
orb
mov
push
jo
int
xor
jne
fmull
inc
push
sbb
insl
jle
imul
rorl
out
dec
std
paddd
ljmp
sub
cmp
cmp
mov
xlat
pop
nop
out
cmp
add
lret
and
jecxz
cmp
dec
inc
stos
xchg
fdivrl
popf
inc
jl
sbb
shlb
cmpl
mov
push
lods
adc
cmpsb
pop
bound
push
mov
ret
sub
jns
and
loope
movsb
jge
xor
mov
jge
mov
jnp
mov
xchg
inc
pop
jge
push
js
daa
and
fists
and
gs
push
mov
pop
jmp
loop
lahf
cmp
cmp
outsb
fbstp
imul
mov
cmc
mov
mov
outsb
daa
and
pop
jae
stos
ret
aaa
scas
xor
push
adc
aad
dec
jmp
stc
sbb
cwtl
mov
fstcw
scas
inc
mov
adc
out
pushf
stos
mov
xchg
push
mov
loope
add
into
pop
mov
test
aad
mov
dec
shrb
and
xchg
pop
sub
jmp
push
mov
sbb
rclb
jp
in
js
addr16
jae
jp
sbb
lahf
xor
addr16
inc
fwait
mov
xor
dec
out
add
sub
mov
inc
imul
lret
out
add
mov
rcrl
out
jbe
and
jns
sub
leave
push
push
lock
imul
movsl
cmpsl
hlt
add
mov
add
ss
sbb
pop
imul
test
ja
add
sub
int3
les
lcall
jno
mov
mov
cmovge
mov
xchg
xchg
daa
sbb
negb
mov
xor
loope
clc
mov
sub
or
into
jge
and
cli
pop
or
mov
cs
gs
test
xchg
shll
or
pop
mov
push
cli
or
lcall
push
push
jo
js
call
lret
mov
mov
subl
imul
arpl
cmp
mov
dec
js
mov
push
pop
es
ljmp
mov
call
xchg
mov
outsb
jne
in
pop
cmp
rolb
push
in
dec
xchg
xor
pop
sub
jle
pop
or
addr16
jne
fcmovne
cmp
adc
cmp
flds
mulb
pop
sbb
test
jge
sbb
sahf
mov
and
aaa
and
repnz
ss
mov
and
loopne
mov
insl
out
or
cmpsl
leave
fdivl
ss
int
movsl
jno
push
mov
daa
dec
inc
aad
mov
testb
lcall
jg
test
or
mov
sub
push
xor
and
rcl
push
ret
rolb
lods
mov
aam
test
or
xchg
movsb
cld
icebp
pop
pop
stc
test
insl
fimull
sub
or
lahf
loop
pop
testl
addr16
and
lcall
lret
mov
stc
mov
loopne
sub
cmp
mov
leave
addr16
mov
call
jg
mov
mov
jns
iret
adc
push
sub
or
inc
push
mov
aas
sbb
es
or
adc
test
cmp
and
outsb
jge
mov
sbb
lret
test
sbb
insb
test
incb
add
xchg
imul
sahf
mov
daa
dec
xor
pop
inc
jg
add
in
pop
outsb
dec
adc
or
dec
cmpsb
aas
jb
jae
jb
inc
push
in
xor
sahf
dec
sti
fwait
add
sub
loope
in
enter
and
mov
psrlw
popa
xchg
pop
xchg
subl
lret
cmp
in
cmpl
ss
push
push
cs
xchg
dec
aaa
mov
and
je
stos
push
mov
pop
jecxz
loop
inc
push
es
push
pslld
adc
fmul
pop
fidivs
repz
int3
sbb
rcpps
mov
imul
test
add
or
mov
xchg
dec
in
pop
call
subb
sub
in
mov
aaa
aad
sub
sub
inc
jg
push
mov
pop
in
sub
jno
pop
jno
jo
lret
imul
push
movsl
jle
lds
pop
or
pop
mov
repz
mov
sub
cmp
sahf
in
rclb
insl
fildll
inc
mov
rclb
mov
lcall
test
push
enter
mov
dec
jno
movsb
iret
fdivl
nop
mov
imul
jecxz
std
es
pop
shrb
jmp
movsb
iret
aaa
and
in
shrl
xchg
jge
pop
or
divl
nop
pop
into
xchg
sti
xor
out
jge
cmp
test
fsubs
insl
mov
pop
repz
imul
inc
popf
das
cmpsl
mov
adc
inc
dec
fnstsw
fstpl
inc
pop
stc
std
dec
enter
xor
push
iret
cwtl
xchg
pop
sbb
jnp
lock
push
xor
push
std
push
mov
ds
mov
add
outsl
pop
jge
sub
stc
nop
sub
jp
ja
cs
and
mov
jg
aas
and
jmp
mov
test
cmp
call
sbb
imull
pop
mov
mov
cmp
sub
ljmp
insl
ds
fwait
mov
mov
add
insb
pop
sbb
loope
xor
inc
mov
xchg
popf
jo
mov
adc
pop
dec
loop
mov
or
shrl
cmp
mov
push
jmp
add
clc
aas
rclb
rcr
cli
push
inc
ficoml
scas
lods
jecxz
mov
mov
js
mov
mov
lahf
out
pop
xchg
cwtl
ja
pop
mov
test
mov
push
out
test
dec
mov
dec
lret
mov
ffree
dec
inc
inc
push
jne
insb
iret
call
ret
push
adc
inc
pop
pop
popf
xchg
aas
xchg
mov
jno
hlt
cmp
fistpl
mov
lea
add
hlt
push
je
add
mov
xchg
adc
aad
cmpsl
ret
jmp
dec
shrl
mov
and
and
and
out
shl
push
jmp
lahf
jbe
and
nop
mov
adc
jle
pop
xchg
outsl
test
nop
into
pop
sub
push
jecxz
aam
and
testl
cli
inc
mov
repnz
lcall
dec
imul
pop
andl
clc
hlt
pop
ljmp
jge
xor
bound
cmpsl
or
jecxz
loope
cmp
repz
push
cmpsl
dec
ja
test
incb
ja
push
je
scas
pop
adc
clc
cmc
pusha
insb
mov
popf
insl
inc
add
sbb
pop
sahf
mov
out
cmp
data16
das
mov
enter
jmp
ss
mov
addb
sub
mov
mov
test
icebp
dec
mov
gs
pop
repz
jb
inc
stos
imul
add
std
adc
stos
xchg
cmp
pop
insb
pop
push
enter
pop
cwtl
pushf
mov
dec
or
fisttpll
dec
and
and
ret
lcall
adc
pop
cli
dec
into
mov
inc
and
mov
enter
sub
popf
fidivrl
lea
dec
nop
cmp
jne
jb
pop
test
lea
push
adc
mov
jns
adc
repnz
mov
add
std
or
dec
fadds
aaa
cmp
push
leave
xor
ret
sub
bound
negb
ss
xchg
addr16
cmp
mov
repz
subps
sahf
movl
loop
jae
push
or
cmp
hlt
stc
sbb
and
adc
aaa
das
and
test
mov
sbb
icebp
push
or
ja
addr16
mov
in
and
jmp
fnstenv
sub
movsl
bound
hlt
sbb
sbb
mov
dec
cs
inc
and
pop
cmc
xor
out
push
pop
inc
ds
fisubs
push
mov
and
push
negl
mov
arpl
xchg
mov
cld
push
mov
and
fsts
cmp
mov
outsl
lret
out
add
sarl
or
mov
cld
es
inc
inc
jnp
mov
or
add
inc
pop
mov
mov
xor
out
pop
xor
push
bound
xor
push
arpl
in
dec
jne
jae
not
push
fucomip
sbb
inc
test
imul
jno
out
mov
xchg
fbld
cmp
cltd
imul
adc
pusha
xor
fdivr
jb
pop
mov
das
mov
out
sbb
cmp
std
xor
ds
call
icebp
sti
sub
and
leave
stos
fimull
test
pop
mov
test
out
popf
adc
xchg
mov
add
mov
cmp
sbbl
mov
jbe
movsl
or
daa
divl
push
sub
fadd
xor
pop
jb
sub
jl
sbb
mov
dec
popf
sbb
xorl
stos
fsubs
xchg
lock
sbb
xchg
or
cs
aad
lods
inc
mov
pop
jge
jo
inc
fisttps
addl
sarl
cmc
enter
movsb
push
pushf
pop
jnp
jnp
xchg
scas
leave
test
add
sbbb
ds
pop
inc
cmc
dec
lock
jb
xchg
cwtl
mov
dec
dec
inc
add
ja
call
subl
mov
lods
push
sub
xor
sbb
lods
dec
arpl
imul
scas
idiv
and
loope
cld
or
xchg
in
bound
shl
je
inc
xchg
test
mov
cmp
movsb
movsb
xchg
imul
popf
outsl
fcompl
pop
pop
repz
add
cmp
scas
pop
nop
or
xchg
negl
add
inc
mov
repnz
fstpt
test
ret
push
jmp
test
aad
jbe
sti
cmp
ss
push
jecxz
ljmp
mov
cmp
test
dec
cwtl
mov
and
xor
mov
test
xchg
bound
jle
jne
jno
adc
insb
dec
out
push
movsb
or
jl
sbb
pop
int
mov
add
ret
xchg
dec
aam
aad
add
scas
mov
mov
imul
inc
mov
dec
out
cmp
and
push
pop
lds
add
push
push
adc
clc
stos
gs
mov
bound
jle
cmp
mov
test
and
jmp
lea
mov
pop
add
mov
push
out
adc
mov
mov
lock
daa
push
lcall
jge
sbb
xchg
sub
fwait
add
cmp
adc
stos
fdivrp
add
loope
and
fbstp
adc
add
adc
mov
outsb
pop
mov
aaa
sbb
pop
adc
movsl
leave
jmp
mov
jne
std
jge
and
insl
ss
mov
jo
dec
adc
mov
or
inc
scas
jmp
and
or
dec
pop
sub
loop
pop
daa
dec
jnp
jae
cmpb
xchg
dec
mov
xchg
xor
inc
mov
push
mov
cmpsl
xor
jge
mov
inc
lcall
or
mulb
pop
icebp
xor
mov
incb
int
sahf
pop
aam
into
add
ss
jmp
aad
push
shlb
icebp
push
fidivs
sbb
jbe
push
mov
sbb
test
imulb
aad
outsb
push
lods
xchg
inc
out
inc
mov
inc
and
jmp
xor
mov
cmp
sub
int3
push
adc
push
out
jmp
lea
jno
xor
fdiv
pushl
pop
mov
test
ja
push
subl
mov
daa
mov
loopne
daa
shrb
pusha
pop
mov
dec
ret
scas
adc
mov
xchg
nop
fsubrp
addr16
cmp
stos
dec
jo
or
movsb
push
and
pop
test
inc
adc
cmp
je
jp
mov
mov
pushf
loope
mov
jnp
hlt
lds
test
fucom
mov
mov
ret
and
mov
xchg
call
jl
mov
add
mov
cwtl
mov
popa
sbb
xchg
push
xchg
in
aaa
leave
push
cmp
sbb
cmc
pop
mov
out
lcall
popf
mov
dec
xor
cmp
pop
mov
jle
adc
cmpsb
outsl
jbe
jmp
lahf
jmp
insb
pop
mov
ja
idiv
inc
mov
pop
xchg
push
push
sbb
enter
inc
sti
sbb
lods
xchg
cmp
push
sub
lcall
sahf
cmc
test
dec
add
jno
sbb
arpl
mov
push
inc
sti
imul
mov
mov
dec
push
daa
ja
mov
mov
outsb
xor
sti
adc
and
ret
jno
mov
std
dec
ljmp
add
inc
mov
test
mov
in
in
popf
mov
push
lock
sub
pop
leave
and
adc
notb
xor
leave
dec
push
iret
ret
aad
fldenv
fildll
scas
cld
add
cmp
into
pushf
xor
jmp
xor
cmp
pop
dec
jmp
mov
fldl
popa
popa
fadds
fwait
lea
adc
jns
test
cmc
jne
push
push
inc
call
movsb
mov
stos
jmp
gs
mov
dec
stc
pop
stc
adc
daa
sar
sbb
into
dec
aad
and
and
movsb
push
cwtl
push
push
fistps
jmp
adc
lods
leave
mov
jmp
mov
mov
push
addl
popa
daa
bound
or
hlt
aad
stos
and
jmp
or
fbstp
or
xchg
mov
add
adc
dec
out
int3
repnz
cmp
jne
push
add
scas
or
ret
mov
xor
jnp
pop
ss
mov
mov
movsb
pop
call
jno
xchg
pop
or
add
aas
pop
mov
mov
push
lahf
adc
je
ss
and
roll
dec
add
popf
cli
or
out
inc
mov
mov
pusha
jle
leave
nop
mov
mov
sub
pop
sbb
imul
cmp
mov
mov
test
scas
sbb
and
lods
int3
mov
dec
or
or
sbb
push
iret
shlb
push
mov
arpl
and
insl
sbb
aas
dec
out
jle
bound
bound
sub
jns
and
xor
jmp
pop
fldenv
pop
popa
aas
shl
lret
leave
jmp
mov
out
jo
xor
and
pop
ss
fimuls
rorb
pusha
ja
pushw
daa
mov
ljmp
jo
adc
inc
add
adc
sub
enter
fucomi
movsb
sbb
add
mov
xchg
mov
mov
int3
inc
jp
inc
inc
cmp
cld
pop
arpl
and
mov
test
cmp
movntq
pop
cmpsl
je
shrl
mov
pop
xchg
xchg
lahf
mov
insb
cmp
andl
cmpxchg
movsl
imul
sahf
mulb
rclb
ret
inc
adc
push
dec
jmp
setbe
in
pushf
push
add
push
push
les
sub
xchg
or
cmc
add
xor
sar
mov
cmp
sub
mov
shlb
cltd
jns
aam
sarb
jbe
pop
and
cmp
not
sub
fistpll
jnp
in
push
testl
mov
xor
call
sub
in
mov
push
xchg
inc
inc
mov
push
jl
je
andb
pop
ljmp
int3
xor
or
or
aam
sbb
std
push
pusha
push
sbb
ficompl
ret
shll
aad
adc
lcall
pop
push
out
popaw
and
mov
push
and
fstl
dec
xchg
lret
loop
sub
pop
dec
push
or
cld
das
clc
orb
pop
scas
stos
lea
xchg
loop
xor
loop
cmp
add
mov
rcll
roll
mov
dec
cwtl
fldt
sbb
sbb
lret
repnz
push
mov
sbb
aaa
shll
outsl
icebp
cmp
nop
outsb
ret
inc
stc
orl
roll
pop
aaa
divps
movsl
ljmp
daa
or
jne
cmp
cmc
inc
in
lods
mov
mov
popa
dec
clc
outsb
adc
leave
pop
mov
sbb
fisttps
add
stos
rclb
in
insl
aas
adc
inc
sbb
pop
lahf
popa
jnp
jno
aad
cltd
sub
mov
fldcw
pop
cmpsb
jl
subl
and
pop
mov
mov
add
lds
pushf
leave
fwait
sbb
sbb
and
xor
mov
ss
push
leave
stc
mov
loopne
sbb
fbstp
mov
test
pop
les
jnp
xlat
call
mov
jne
xchg
push
cwtl
inc
dec
xor
pop
test
bswap
sbb
nop
mov
clc
jns
xlat
pushf
scas
and
cmp
and
imul
mov
inc
pop
pop
outsb
nop
push
add
xor
xchg
bnd
movl
sub
add
in
mov
test
add
lods
jp
test
xor
inc
test
or
sub
icebp
xor
cmp
mov
xchg
in
shl
mov
jnp
aaa
andb
jae
in
fcom
lret
add
and
lds
insb
aam
mov
cmp
xlat
mov
or
xchg
ds
sti
negb
push
mov
inc
xor
adc
push
fists
addl
idivl
mov
js
mov
pop
xlat
adc
push
pop
add
andb
cmp
nop
mov
xor
sbb
repz
dec
or
movsb
daa
jne
xchg
jno
stc
xor
sub
fs
lock
cs
cmpl
cmc
mov
scas
shll
stos
jecxz
xchg
dec
mov
xchg
inc
mov
outsb
mov
shll
mov
mov
push
movsb
repnz
les
jg
mov
jnp
ss
faddl
mov
pop
dec
dec
aas
dec
repz
mov
sub
daa
hlt
shlb
nop
jb
repz
das
pop
andb
xor
xorl
or
roll
add
insl
add
add
fidivrl
lcall
or
or
sbb
xchg
push
xor
shl
mov
mov
fs
rcrl
cmp
jecxz
lods
or
lock
mov
pop
push
jne
xor
scas
inc
or
dec
std
sbb
xchg
inc
jno
icebp
les
int
mov
mov
or
mov
into
cld
xor
div
pop
cmp
fldl
popa
in
fldt
leave
rolb
mov
ret
mov
mov
test
shlb
sahf
adc
mov
shll
or
js
jmp
in
mov
fdivrs
jo
mov
cmp
aas
int
pop
fucomi
in
ficoms
xor
xor
lahf
in
lock
push
pop
pop
jmp
sbb
insl
push
cmp
pop
xchg
sbb
frstor
jmp
stos
inc
stos
loopne
repnz
adc
fadd
pop
cs
sub
xchg
or
jo
int3
inc
add
addb
shrb
add
and
rorl
or
push
and
aam
je
sarl
addr16
xchg
in
add
adc
int3
sub
xor
stos
cmp
outsl
loopne
inc
cmp
mov
rcrb
adc
les
fisubs
mov
aam
clc
fdivl
xchg
mov
arpl
leave
push
add
psubsb
push
xchg
popa
daa
sbb
dec
xchg
movsl
addb
mov
ret
pop
push
xchg
xor
xor
sbb
mov
jb
das
mov
fcmovb
dec
mov
pushf
les
and
mov
xchg
and
inc
scas
push
or
ret
cmp
pop
push
mov
lret
fmuls
push
pop
scas
test
xchg
push
in
cmp
sahf
xchg
data16
mov
bound
and
pop
mov
int3
pop
outsl
shl
inc
movsb
jp
cmp
je
push
mov
add
stc
cmp
pop
push
mov
dec
mov
lock
push
dec
or
mov
dec
adcb
shrl
pop
sub
arpl
xchg
movsl
cmpw
fldenv
ljmp
nop
out
xchg
jbe
movsl
adc
es
fdivrp
imul
loope
hlt
mov
es
xchg
js
pushf
xor
jp
push
or
cltd
and
aam
sbb
mov
aaa
inc
lock
push
movsl
pop
call
cmp
add
mov
aad
sub
ja
mov
push
push
sbb
pop
scas
mov
and
jg
or
mov
rolb
gs
addr16
gs
cmp
das
nop
mov
mov
cmp
lods
ds
imul
insb
pop
out
pushl
cltd
in
ja
jae
fwait
mov
and
mov
loope
sbb
sbb
mov
sahf
jge
pop
in
movsl
cli
in
cmp
rep
xor
mov
add
das
jo
lds
xchg
or
xchg
xor
push
stos
xor
mov
jne
je
push
and
sub
pop
stc
xor
loope
nop
imul
xor
or
call
pop
inc
sbbl
mov
dec
inc
adc
popf
cli
mov
sub
enter
lret
mov
loopne
mov
push
jmp
stos
mov
or
xor
adc
cmp
insl
lret
jmp
adc
cmp
inc
or
cld
test
cmp
lock
mov
mov
mov
jmp
push
pop
in
dec
pop
push
pop
push
mov
pop
lods
int
dec
adc
sbb
adc
adc
je
out
cwtl
stos
inc
insb
mov
xchg
xchg
cmp
cwtl
ret
pop
call
fcmovu
mov
std
loop
into
add
pop
fdivrl
aaa
pop
pop
icebp
imul
cmp
dec
leave
mov
out
test
scas
ljmp
mov
xlat
mov
cmp
shrb
push
mov
mov
daa
mov
rorb
mov
jne
fwait
push
leave
stos
cmpsl
adc
adc
xor
stos
dec
nop
inc
mov
xorb
mov
mov
sbb
mov
add
js
xchg
enter
and
pushf
inc
and
push
ficoml
popa
sarl
dec
sbb
enter
push
shl
loope
mov
in
mov
mov
pop
jp
in
pop
lea
adcl
das
adc
pop
movsl
push
pop
cmp
push
out
aam
lret
push
dec
enter
fwait
cli
lods
sub
out
inc
ljmp
dec
aad
add
scas
mov
popa
andl
inc
push
cmpb
pop
bound
mov
aad
stos
addb
sub
xchg
inc
outsl
xor
pop
fcompp
sbb
sub
cli
lret
or
std
sub
add
enter
or
xor
and
dec
pusha
popa
fs
mov
jecxz
fstps
lret
dec
stos
mov
sbb
lods
addr16
outsb
add
in
inc
and
rcrb
cli
icebp
cmpsb
jo
inc
and
movsl
gs
outsl
aas
adc
ja
mov
or
insl
xchg
adc
push
or
xchg
in
aas
aaa
fiaddl
aaa
sub
mov
in
xchg
bound
rorl
js
aas
jne
fwait
in
xchg
test
dec
lods
adc
cwtl
dec
mov
pop
pusha
loope
lock
js
push
add
imul
mov
xor
pop
and
scas
js
adc
add
dec
xor
cmp
add
pusha
xchg
gs
push
in
lods
mov
cmpsb
jbe
jmp
dec
jmp
cmp
and
clc
push
or
dec
xchg
mov
nop
pop
jmp
pop
shlb
in
enter
das
rcl
fdivrl
das
in
dec
repnz
in
adc
imulb
add
mov
fcomps
insb
mov
mov
inc
mov
dec
xchg
inc
mov
xchg
arpl
std
iret
sub
mov
loopne
insb
mov
lcall
pushf
ret
mov
dec
fistpl
xchg
jmp
dec
into
js
cld
xor
pop
scas
mov
arpl
aas
lcall
dec
mov
sub
out
or
popf
sub
loop
mov
pop
sti
imul
add
sbb
mov
dec
and
mov
jl
push
daa
leave
std
push
movb
cltd
popa
sarb
test
ss
lock
and
and
mov
test
xchg
test
adc
aad
sub
sti
sbb
dec
leave
lds
cltd
popf
cwtl
sub
frstor
pop
sbb
lret
fs
and
mov
sbb
pop
cmp
and
popa
sub
inc
add
dec
stos
ficoms
lods
mov
into
gs
mov
clc
jne
clc
push
jno
xor
inc
icebp
enter
sahf
stos
sub
ret
jb
lods
jg
inc
pop
popa
mov
push
cmp
push
popf
iret
xchg
cli
adc
mov
and
jbe
sbb
jmp
and
fldt
xchg
or
xor
push
sub
sbb
mov
loopne
sti
mov
loope
xchg
popa
xchg
mov
dec
inc
pop
fnsave
jmp
xchg
ret
adc
inc
test
jmp
add
sub
jle
adc
cltd
pop
cs
mov
rcll
repnz
mov
aam
fisttpll
outsb
sub
negb
add
mov
and
insb
push
in
adcb
out
faddl
jae
jp
xor
pop
add
jne
sbb
mov
lret
ds
xor
imul
cltd
loop
add
cmp
xchg
aas
cmp
jp
fcomps
fcmovnb
outsl
jge
clc
jno
pop
inc
mov
sbb
or
into
out
movsb
and
inc
adc
popf
insb
jnp
in
arpl
jmp
cltd
in
enter
pop
mov
mov
mov
daa
mov
lcall
imul
out
iret
aas
xchg
es
repnz
sbb
inc
xchg
cmc
aad
jno
stos
jge
add
pop
or
outsl
jge
ltr
jb
pop
rcrl
xchg
jmp
ret
cmpsb
insb
mov
add
mov
fs
jle
pusha
out
xor
sub
xchg
or
cmpsl
fsubrl
popf
mov
pop
xchg
mov
gs
xchg
mov
das
sub
jge
in
xchg
lods
lock
xor
mov
mov
negb
stos
faddp
jns
leave
out
stos
bound
sti
stc
sbb
sub
stc
hlt
mov
xor
sbb
or
test
mov
add
pop
imul
xchg
nop
movsb
mov
mov
pop
lahf
xchg
fstl
iret
dec
inc
aas
imul
jle
cld
scas
fs
das
mov
cmc
test
jp
neg
jb
mov
push
insl
mov
dec
hlt
test
loop
mov
mov
and
jne
test
hlt
imul
add
push
and
push
ret
push
cmpsb
sub
pusha
adc
movsb
xor
dec
fldt
or
dec
mov
out
ss
inc
in
adc
out
push
cs
hlt
mov
jecxz
loop
xorb
addr16
cwtl
dec
push
xchg
cmp
das
mov
sahf
arpl
sub
add
add
jne
out
jecxz
divl
cwtl
push
or
inc
cmp
loopne
push
out
sub
fdivr
push
mov
inc
jmp
shlb
push
mov
add
xchg
pop
mov
xor
and
arpl
xor
popl
sbb
jle
cli
sahf
pop
jae
or
outsb
es
adc
pop
adc
mov
imul
lods
fnstenv
or
imul
jb
bound
xor
push
arpl
das
cs
mov
xor
sar
mov
pushf
xchg
movsb
sbb
icebp
pop
notb
lods
lods
add
jg
lods
lret
popf
push
mov
mov
sahf
inc
push
jns
gs
xor
dec
cmp
jae
in
adc
adc
out
mov
and
pop
mov
jb
cmc
call
sub
cmp
mov
int
lahf
adc
stc
insl
jo
gs
mov
pop
pop
insl
and
repnz
hlt
fidivl
fwait
stos
and
add
iret
scas
xlat
pop
hlt
call
pop
nop
pop
lds
mov
lds
xchg
mov
push
fistpll
add
jno
jbe
sub
jbe
push
xor
and
in
loop
mov
loopne
mov
and
fwait
rcll
hlt
aam
pop
ret
test
mov
xchg
xlat
mov
push
cwtl
daa
stc
subb
lock
add
sar
aaa
cli
stos
mov
repz
adc
pop
cmp
push
xor
nop
cmp
jle
push
mov
mov
mov
inc
test
and
inc
movsl
xchg
push
mov
testl
rcr
xor
sarb
xlat
adc
out
lock
ret
jns
xorb
ret
nop
bswap
push
cmp
dec
cli
push
jns
mov
sub
fcomp
out
bound
xor
mov
ss
rcrb
push
mov
and
imul
pop
pop
dec
outsb
jne
and
or
fisubrl
int3
jg
xchg
mov
testb
int3
imul
sub
into
or
clc
mov
sti
and
adc
idivl
lock
mov
jle
in
ljmp
mov
cmpsl
mov
fmull
push
jp
test
jg
loop
push
push
or
rcr
leave
cwtl
mov
mov
pop
hlt
sbb
xchg
aam
out
scas
rcrb
lcall
mov
mov
cmpsb
cmpsb
mov
stos
call
inc
mov
aad
insb
cmc
or
rclb
dec
xor
lahf
mov
daa
rcl
mov
in
aam
push
jmp
lcall
lods
sbb
or
mov
mov
inc
add
mov
imul
xchg
xor
mov
fidivrl
dec
push
add
xor
lahf
and
jge
imulb
and
outsl
xor
mov
or
inc
testb
fnstcw
xchg
aam
cmpl
xchg
adc
mov
jl
fadds
rolb
mov
mov
dec
push
jne
fcomip
cmp
mov
out
add
jge
das
or
adc
mov
push
clc
lcall
xchg
iretw
ds
in
adc
pop
adc
in
rcrl
dec
pusha
sbb
stos
sub
sub
das
roll
dec
cmpsl
mov
add
push
in
xchg
es
xchg
push
cmp
pop
push
loope
sbb
hlt
xchg
jbe
into
jmp
aad
push
loope
push
out
or
outsl
add
jge
std
jg
aad
mov
scas
idiv
flds
adc
xchg
jno
aas
push
clc
cmp
call
mov
xor
nop
mov
ss
ja
jle
xchg
inc
dec
cmpb
stc
in
test
or
shll
arpl
lcall
test
mov
inc
sbbl
out
stc
lret
xor
lcall
xchg
push
dec
les
add
xchg
add
xor
sub
sub
xor
outsl
dec
int3
jmp
pop
pushf
lahf
fdivr
sub
adc
fs
emms
cld
repz
lods
adc
fmull
and
xchg
or
xor
mov
movsb
mov
cmp
sbb
inc
and
mov
scas
ret
dec
ljmp
aam
fmulp
fcomps
cmpsl
push
popa
add
mov
pusha
lock
sbbb
cmp
addl
mov
cmc
mov
loopne
mov
inc
jae
mov
mov
pop
lret
xor
dec
fisubl
cmp
jne
mov
bound
inc
pop
daa
inc
inc
sub
movl
add
int
cmp
fldl
aam
fs
or
and
movsl
or
in
inc
enter
fs
pop
call
xor
loope
pop
push
dec
cmp
dec
adc
xor
sbb
ret
repnz
jge
xchg
and
push
pop
adc
test
popa
sub
mov
xor
outsb
mov
imul
dec
or
in
add
jns
in
or
mov
sbb
xchg
xor
sti
bnd
lea
iret
cmp
dec
fwait
sub
or
xchg
adc
jno
cmp
lret
inc
xor
ja
aam
jp
cwtl
aas
add
aad
cs
data16
xchg
imul
outsb
xchg
adc
xor
aaa
sbb
jnp
inc
cmp
and
cmp
jg
call
pop
adc
add
xchg
lea
mov
jb
gs
scas
aad
jmp
inc
xchg
movsl
dec
xchg
mov
gs
je
imul
sar
jno
inc
mov
shlb
or
mov
jns
shll
mov
add
test
adcb
mov
sub
jp
mov
push
cwtl
test
xor
inc
push
push
repz
jecxz
outsl
add
stc
lcall
inc
lock
xchg
mov
jecxz
pop
xchg
and
jp
xchg
push
cli
in
push
js
xchg
mov
mov
dec
enter
jp
loop
jno
scas
lret
icebp
or
push
inc
and
xor
pop
lahf
sbb
push
pop
pop
or
xchg
test
cmpsl
cmpsl
sub
fs
and
or
ret
js
iret
nop
and
in
test
or
fdivrs
xchg
push
or
jecxz
lds
xor
sub
add
and
iret
pop
mov
push
mov
ss
push
push
ret
loop
imul
xor
cmp
sti
movsl
xor
dec
push
jge
les
pop
dec
cmp
sbb
push
call
push
icebp
outsb
inc
pop
push
jp
mov
xor
sub
sbb
xchg
fwait
mov
outsl
cmp
jle
lahf
shr
sbb
shrl
dec
rcrl
adc
inc
push
push
scas
call
imul
mov
iretw
sbb
loope
mov
pop
addr16
xor
jp
mov
in
int3
xchg
xchg
pusha
mov
inc
cmp
jg
lahf
and
das
arpl
sahf
mov
aas
rcrb
pusha
ss
hlt
cmc
xchg
loop
cmpsl
je
fcom
dec
pop
lods
out
ret
dec
push
sbb
call
or
cmp
int
into
cmp
xchg
or
lods
sti
xor
sbb
lret
aas
xchg
push
popf
push
out
movsl
lds
xor
sbb
movsl
sbb
sbb
xorl
int
movb
pushl
dec
ljmp
arpl
cmp
mov
out
stos
arpl
in
adc
lock
and
fcompl
loopne
iret
xor
subl
and
xor
dec
inc
push
enter
adc
mov
jae
adc
jnp
pushf
adc
pusha
xchg
dec
inc
sub
jmp
dec
cld
das
dec
pop
dec
int
jge
movsb
shlb
xor
fs
mov
outsb
shll
movsb
mull
fwait
loop
and
mov
js
cmpsb
xor
push
test
stos
inc
sbb
std
iret
hlt
inc
pop
aad
pop
jnp
cmp
adc
jl
outsb
adc
aaa
and
sbb
dec
cmpsb
push
pop
dec
test
nop
fwait
shlb
cltd
int3
ja
stos
push
cs
jge
push
mov
jg
lea
push
int3
xchg
push
fcmovu
xchg
notl
mov
dec
js
pop
data16
stos
cmp
dec
mov
pusha
or
inc
jo
push
xor
ja
jle
and
cmp
movsl
sub
ret
pop
jle
lret
cmp
sub
pop
das
ficoms
fwait
or
out
cli
lcall
enter
lock
negl
scas
fmuls
xchg
cmp
loope
outsb
xchg
or
and
push
jg
movsb
leave
ja
push
cmpl
orb
aam
scas
in
push
xchg
pop
sarb
prefetch
lahf
xor
int3
jae
xor
jg
pusha
sub
push
push
neg
push
test
movsb
pop
fisttpll
out
popf
dec
inc
stc
xchg
loopne
rorw
das
pop
xchg
out
flds
push
add
aaa
negl
fdivrl
sbb
cltd
xchg
mov
aaa
fnstcw
add
shl
mov
decb
int3
jae
scas
insb
adc
cmpsl
in
mov
mov
push
bound
and
int
cmp
cmovne
jb
sbb
pavgb
int
jmp
inc
lea
or
jbe
or
xchg
mov
jg
imul
les
mov
ss
out
and
mov
mov
push
jmp
fwait
jns
jno
jmp
dec
cwtl
lea
or
push
aaa
inc
fwait
enter
sbb
fisttpl
movsl
in
shll
sbb
repnz
mov
cmp
xchg
fists
ss
ror
xchg
sub
sbb
out
mov
sub
mov
mov
push
add
xchg
cmp
jno
mov
inc
mov
push
lahf
lods
popa
jmp
fisubrs
jnp,pt
mov
icebp
adc
push
pop
orl
cltd
nop
jo
dec
cmp
ss
shlb
int
xor
push
add
in
popf
inc
subb
cmp
inc
sub
mov
mov
and
loop
mov
sete
pop
xchg
adc
or
fs
out
adc
inc
sub
inc
shll
cmp
push
testb
imull
aam
dec
adc
dec
push
push
sub
lahf
mov
jno
sahf
mov
inc
das
add
jge
pusha
push
sbb
shl
and
jmp
mov
cmpsl
icebp
ja
rorb
ret
xchg
sti
push
jo
cwtl
jb
fs
loopne
aas
jo
add
mov
shlb
scas
in
icebp
dec
and
push
push
scas
xlat
sub
flds
adc
dec
test
jecxz
inc
rsqrtps
bound
loope
mov
lods
subb
dec
enter
pop
repz
loopne
aaa
mov
add
je
fadds
loop
inc
test
testl
bnd
mov
out
insl
and
ret
or
pusha
bound
mov
outsb
pop
int
add
xor
adc
loope
xchg
fnsetpm(287
mov
sbb
ret
mov
loopne
jbe
or
rcr
mov
xchg
jno
es
ljmp
fldenv
mov
stos
mov
lahf
cmp
jge
js
mov
in
cli
sbb
inc
and
dec
out
xchg
popf
add
inc
sbb
pop
fisttps
movsb
xchg
icebp
bound
cltd
mull
je
xor
pop
xor
mov
ja
cwtl
into
popf
cmp
hlt
stc
repnz
fisttpll
jmp
xor
add
jecxz
test
fs
inc
ret
gs
movsl
loopne
fidivrl
scas
dec
mov
nop
xlat
or
fwait
outsb
cmp
nop
xchg
inc
mov
mov
insl
test
inc
sbb
rcrb
nop
in
push
divl
iret
xor
pusha
mov
cltd
aaa
adc
ljmp
mov
push
sets
sbb
jle
xchg
fstps
xlat
push
stc
push
jecxz
clc
cmp
lcall
add
pop
popf
adc
imul
mov
ds
not
cmc
mov
lcall
dec
popf
arpl
stos
int
or
lods
mov
aaa
sbb
daa
in
test
fisubrl
stos
jecxz
pusha
dec
negb
xlat
sub
loop
inc
ret
leave
icebp
test
fs
ret
icebp
mov
and
jmp
dec
cmc
or
lret
pop
je
pop
shlb
pop
push
dec
mov
jmp
movsl
enter
pop
or
test
pop
in
and
std
repnz
aaa
push
sbb
fs
out
or
or
or
pop
icebp
mov
inc
xor
movsb
add
inc
pusha
jle
cld
js
push
or
mov
xchg
mov
xor
in
out
jae
in
popa
push
cmp
fnstcw
dec
movsb
add
cmp
fstpl
cwtl
daa
test
cmpsl
aaa
add
lds
push
sbb
sub
sub
mov
or
clc
mov
inc
sahf
addr16
dec
negb
jo
sbb
jo
cmp
int
inc
lds
movsl
fildll
and
jp
pop
jmp
int
jo
arpl
jne
outsl
subl
push
int3
xor
stc
cmp
xchg
aam
call
in
mov
aam
clc
sub
sub
jp
pop
gs
cltd
sbb
jne
shll
nop
xor
bound
jns
aam
xor
ds
xchg
cmpsl
sbb
pop
imul
or
adc
fs
jae
jmp
lods
jno
ja
jo
pusha
xchg
fldt
pop
out
in
jmp
icebp
pop
fmulp
imul
bound
add
jle
sub
mov
push
push
jmp
push
sub
add
stos
lea
xchg
push
nop
in
leave
mov
pushf
cltd
cli
mov
dec
push
sbb
pushl
push
jmp
mov
push
jmp
mov
cmpsl
push
sbb
adc
idivl
fcmovu
or
test
lods
inc
nop
enter
fstl
push
cli
imul
xchg
jbe
lea
mov
mov
sti
pop
xchg
int
addr16
cmp
cmp
jge
add
stos
jbe
lcall
dec
cmpsl
ljmp
addr16
cmc
cmp
mov
lock
int3
cmp
sub
sub
push
test
aam
fistpl
mov
js
or
bnd
icebp
les
push
es
inc
mov
inc
push
jg
inc
jae
arpl
dec
fucomp
mov
in
data16
into
mov
inc
push
aad
jecxz
mov
push
push
push
test
cmp
call
rorb
jecxz
ss
add
lock
cltd
adc
out
es
movsl
mov
pop
ret
sbb
das
outsb
adc
mov
pop
mov
inc
xor
cmpsl
push
movhps
jecxz
sahf
or
movsb
sub
out
jmp
push
jae
xor
jmp
lcall
adc
xchg
and
xchg
mov
xorl
xchg
mov
out
leave
adc
hlt
shrl
adc
mov
ret
xor
sbb
cld
mov
jp
pop
pop
pop
pop
stos
and
mov
lds
ds
mov
sub
or
pop
jns
loop
jno
adc
push
orl
test
rcr
sbb
es
dec
outsl
xor
je
clc
sub
pop
insl
in
cmp
jo
fcoml
cltd
adc
js
fsubs
sub
jns
shll
adc
sub
into
nop
or
or
sbb
push
filds
out
mov
addr16
sbb
sti
push
repnz
test
sub
push
aas
int3
int
popf
fwait
lock
lcall
ds
push
pop
add
cmp
xchg
ret
cmp
pop
sub
ret
jo
and
adc
fstl
mov
stos
cwtl
out
push
dec
lods
out
xchg
in
and
in
movl
sbbb
sti
inc
aas
daa
xchg
and
fidivs
imul
aaa
push
push
adc
arpl
cltd
sub
xlat
cmp
xchg
and
jae
outsb
push
fildll
push
xor
inc
enter
clc
dec
insl
cmp
ret
push
sahf
mov
cld
addr16
insb
xchg
outsl
and
jecxz
aam
out
mov
divl
cld
repnz
jbe
push
mov
jp
and
push
push
jnp
dec
ljmp
outsb
xchg
dec
rorb
mov
sbb
and
pop
sbb
mov
pop
lods
adc
arpl
pushl
into
adc
pop
adc
dec
mov
jno
cwtl
sbb
icebp
ficoms
loop
lods
les
jle
les
ljmp
push
mov
mov
cld
adc
pusha
inc
outsb
pop
push
add
lea
mov
gs
jne
sbb
and
pop
mov
sub
iret
addb
cmp
push
stos
imul
sub
add
repnz
mov
inc
mov
int
adc
mov
std
lcall
cld
rcrb
cmpsl
cmp
mov
js
ret
aad
xor
push
xchg
and
mov
push
cs
mov
mov
adc
sub
mov
cmc
mov
xor
and
filds
rcrl
cmp
push
das
lods
insl
stos
ja
cmp
and
movsb
outsl
mov
lods
fimuls
jp
mov
mov
sub
sub
push
cmp
loopne
pop
mov
cmc
push
pop
enter
xchg
arpl
clc
add
inc
lds
subb
ds
in
xlat
or
ljmp
lea
jecxz
addl
add
orb
xchg
jo
loopne
push
jno
lea
sub
jns
push
xor
cs
cmc
xchg
enter
in
mov
movsl
adc
push
cmp
add
jo
dec
cld
pushf
xlat
loop
rolb
mov
add
mov
orb
pop
mov
mov
jnp
and
fbld
inc
negb
sbb
jp
push
mov
lds
jo
pushf
cli
push
ret
and
mov
inc
repz
pop
cmp
jmp
mov
test
and
addr16
std
jp
push
sbb
add
outsl
adc
cmp
fdivp
imul
insb
lods
xchg
cmp
fimull
mov
jecxz
xchg
vmread
shlb
imul
mov
xchg
jmp
sub
jmp
cmp
popf
scas
call
xor
hlt
push
imul
outsb
mov
nop
loope
iret
mov
mov
lahf
arpl
xchg
bound
popa
aaa
or
mov
pop
sahf
pushf
mov
pop
cli
dec
dec
mov
push
pop
xchg
adc
push
ds
mov
pop
in
decb
jmp
inc
pop
sub
mov
popf
fwait
cmc
xor
dec
xchg
and
jnp
sbb
or
lret
je
es
adc
and
dec
xchg
in
pop
aad
push
or
fwait
mov
mov
loop
stos
sbb
jae
fnsave
fcomip
aas
out
pop
jb
nop
mov
clc
cmpsb
and
adc
cmp
mov
out
sbb
ret
xchg
jge
mov
pushf
addr16
push
mov
xlat
add
jge
xchg
or
loope
daa
sbb
xor
xor
shrl
xor
dec
fstpl
jle
fdivs
and
push
outsl
jo
lahf
and
loope
in
xchg
push
or
mov
xchg
mov
fstps
xor
jno
dec
outsb
push
fsubs
imul
enter
push
inc
jo
sbb
rcll
xor
call
insb
mov
push
push
and
cmc
push
clc
push
jle
and
inc
pop
int3
lret
cmc
icebp
shrb
jg
sub
mov
fnsave
ja
sbb
or
dec
sbb
es
mov
xor
popf
mov
sbb
fcoml
clc
xor
mov
xchg
push
sbb
ja
sbb
sub
movsb
mov
and
jge
push
lds
push
popf
pop
push
xor
call
push
mov
inc
push
aaa
push
sahf
push
in
gs
push
fwait
movsb
rorb
pop
imul
jns
rclb
xor
ss
mov
push
dec
incb
addr16
lret
cmp
mov
mov
mov
fsin
mov
lret
arpl
mov
push
pop
out
xchg
add
cmpsl
xchg
xchg
xor
push
ss
and
xor
mov
xchg
adc
cmp
adc
sbb
dec
mov
mov
das
sarb
or
cs
pop
adcl
dec
sbb
pop
jecxz
ret
faddl
dec
ja
jge
jb
mov
cmp
les
sbb
or
push
xchg
sbb
or
dec
imul
int
mov
insb
clc
lret
jecxz
xchg
xchg
pushf
inc
arpl
or
aam
xor
push
push
cmpl
adc
mov
jo
and
add
aas
cmp
push
js
test
stos
jnp
or
adc
das
hlt
imul
mov
jno
lret
or
fnsave
cmpsb
push
scas
jnp
cwtl
mov
dec
add
loopne
pushf
rol
in
cld
xchg
in
jnp
mov
sbb
sbbb
push
xchg
popa
movsl
xor
mov
cmp
sbb
sub
xor
les
mov
movsb
xchg
jne
mov
test
mov
cmp
dec
jp
data16
call
dec
out
insb
mov
adc
mov
int3
pop
out
mov
xchg
imul
les
or
lds
rcrl
inc
push
cmc
mov
out
sbb
lea
push
push
adc
xchg
xchg
lds
push
popf
sub
movsl
shlb
insl
jge
rorl
ljmp
or
movsl
xchg
test
aaa
mov
rcr
cmpsl
mov
mov
hlt
xchg
or
push
movl
dec
mov
fwait
pusha
fsub
dec
push
pop
rorl
and
mov
cltd
jno
repnz
push
mov
jno
mov
insb
mov
push
ret
sub
jge
sbb
mov
sbb
scas
jae
sbb
add
push
or
cmc
or
or
or
insb
dec
adc
add
in
push
cwtl
cli
sbb
mov
sarb
dec
clc
ja
les
mov
jns
push
fld
cmp
inc
pop
xor
in
push
jne
sub
cmp
jns
negb
sub
bound
and
movsl
sbb
je
xchg
mov
jae
lods
mov
imul
add
cmp
rorb
mov
je
loopne
sub
jp
push
js
je
pop
orb
cld
push
or
or
mov
imul
das
mov
sub
mov
jmp
in
sub
xorb
sbbb
into
jnp
mov
loopne
int
mov
sbb
imul
cmp
rclb
mov
inc
pop
push
pop
adc
stos
jae
out
loop
mov
push
int3
call
xchg
mov
arpl
aad
inc
sub
loopne
pop
sahf
and
xor
cmp
jo
jnp
nop
push
test
fisubl
push
lret
and
sub
das
push
mov
rolb
mov
std
in
add
mov
aas
cwtl
xor
stos
lret
inc
daa
incb
add
pop
push
push
mov
test
popa
popl
mov
stc
aad
pop
ljmp
fwait
dec
fs
nop
test
push
push
sbb
jbe
cmp
insl
mov
daa
xor
mov
xchg
lds
mov
cli
out
dec
in
popa
cmpsb
xchg
cmp
insl
cs
test
pop
jns
xor
mov
fistpll
enter
cmp
inc
jecxz
pop
movsb
push
push
inc
inc
ja
dec
mov
mov
int3
xchg
ret
js
mov
clc
fidivrs
or
jnp
icebp
push
lahf
cs
sbb
cmp
jb
lea
popf
icebp
or
data16
testl
xor
es
and
ret
fwait
adc
gs
push
xor
repz
cmp
mov
push
jmp
inc
and
in
inc
inc
pushf
inc
jmp
cmp
cmc
test
mov
scas
or
cmp
inc
aaa
rcr
ljmp
pusha
outsl
lods
sbbb
decl
sbb
xor
jae
or
mov
gs
sbb
mov
add
adc
sti
jge
test
into
inc
les
cmp
ficompl
jo
dec
mov
sbb
sub
insl
inc
and
nop
push
notb
jle
cmp
outsb
dec
fwait
out
je
pusha
xor
pop
cltd
push
jno
jl
mov
aas
push
sbb
jmp
push
pop
ja
sub
xchg
in
imul
xchg
inc
mov
stos
jp
jns
aaa
cmc
add
jo
js
outsb
sbb
add
out
mov
jle
dec
cmp
mov
cld
out
dec
adcl
dec
sahf
mov
adc
mov
mov
push
lret
gs
lds
dec
sbb
ss
pushf
jno
shrb
lcall
xor
mov
shlb
mov
sub
jecxz
push
add
cmp
pushf
mov
pop
cld
mov
sarl
inc
ljmpw
push
or
jno
sub
rorl
inc
orl
sub
xor
sahf
sbbb
xchg
rcrl
int
pop
mov
ret
roll
sbb
or
pop
cli
sbb
or
aad
mov
pop
jge
push
pop
insl
pop
xadd
jmp
rolb
push
inc
aaa
divl
xorl
aad
push
mov
lret
push
ret
jp
loop
repnz
sbb
cmpsb
test
hlt
rcll
push
push
mov
mov
lcall
jl
inc
xchg
mov
jmp
xor
adc
xchg
and
cmp
insb
pop
cmp
xchg
aam
and
push
and
sub
pop
pushf
or
ficoms
divl
xchg
aam
ljmp
pop
rsqrtps
fstps
outsb
fdivrl
dec
xchg
push
out
jo
sub
fbld
add
jb
jp
cmp
mov
leave
mov
dec
in
xor
sub
cmpsb
insl
sarl
inc
test
or
in
sub
sarb
mov
test
adc
push
xchg
xlat
sti
lods
jno
insb
inc
aad
sbbb
into
aad
jmp
adc
mov
xchg
sub
test
scas
testl
lods
pop
xchg
mov
add
pop
and
notb
lahf
mov
sbb
inc
jne
inc
nop
inc
sbb
je
jmp
mov
popf
push
subl
sub
in
out
and
pushf
loopne
pop
loop
and
or
out
lods
cltd
cwtl
cmp
rorb
pop
mov
dec
leave
add
mov
js
push
xchg
aas
adc
pop
mov
xor
int3
adc
xchg
repz
lods
sbb
sbb
insl
addr16
test
ret
push
mov
add
and
mov
xor
xor
cmp
ds
and
test
mov
sub
imul
fst
pop
fcmovne
outsl
es
mov
add
ffreep
jb
pop
mov
mov
movsb
scas
mov
mov
add
out
pop
jb
add
dec
sub
jge
mov
push
sbb
or
cmpsl
daa
add
call
in
data16
dec
lods
mov
shlb
xor
fists
sub
rol
shlb
loopne
ret
sti
cmpsb
in
movsb
fistpll
pop
push
cmp
push
lds
js
mov
fdivs
mov
fwait
xlat
inc
outsl
push
test
xchg
mov
dec
mov
mov
dec
test
les
and
dec
push
inc
sahf
pop
sub
cmp
in
pop
mov
stc
xchg
les
addr16
or
ljmp
mov
enter
out
jp
pop
pop
mov
std
mul
stc
lret
dec
push
pop
imulb
sahf
adc
add
push
dec
out
js
cmpsl
stc
dec
adc
mov
cmp
loopne
mov
sti
add
jae
fsubs
cmp
movsl
inc
pop
pop
fbstp
pop
out
fisttps
sbb
xchg
or
aaa
pop
fimuls
push
fnsave
mov
dec
push
outsl
mov
cmpsl
shll
pop
shlb
mov
fsubrs
mov
ret
inc
out
cli
mov
test
jmp
shl
push
add
mov
scas
fstps
add
mov
or
outsb
inc
test
pop
cs
sbb
pop
jae
xchg
nop
ljmp
fimull
fisttpl
jl
test
outsb
jb
jns,pn
outsb
int3
xchg
push
mov
insb
iret
pop
sbb
and
or
sbbb
insl
dec
insl
sub
icebp
aaa
push
and
sub
iret
dec
ss
mov
sbb
jo
xor
test
rorl
pop
mov
inc
nop
and
sub
in
daa
in
push
fsubrp
ljmp
add
test
cmp
push
adc
sbb
mov
push
or
push
into
lods
jnp
mov
enter
aam
pop
xor
repz
pop
cmp
lea
push
or
xor
jle
mov
gs
jae
jg
outsb
dec
xor
lds
mov
xchg
jb
hlt
jl
addr16
nop
jmp
cmp
lods
shll
inc
adc
inc
dec
jb
push
imul
notl
nop
pusha
insl
ds
icebp
add
jmp
bound
shlb
lahf
int
pop
fisubrl
cmpb
test
mov
call
dec
xlat
cld
stc
push
movsl
add
jbe
xchg
lahf
dec
pop
ja
cmpl
pop
add
cltd
mov
or
es
add
jno
enter
rorl
push
int3
or
cld
pop
pop
pop
xchg
pop
cwtl
pushf
add
cmp
mov
mov
popf
sub
cmc
ss
test
sbb
cmpsb
mov
arpl
inc
jmp
popa
or
jbe
push
add
mov
jno
push
repz
cmc
dec
sub
test
jbe
movsl
mov
test
ret
fstl
mov
mov
mov
jge
int3
mov
inc
pop
sub
mov
adc
andl
push
pop
and
stos
rcr
jne
cli
pop
addb
fdivr
fucomi
pop
in
pop
lods
stc
jne
fcoms
enter
test
xor
push
jmp
mov
mov
push
lcall
inc
fmul
add
pop
es
mov
pushf
sbb
lahf
bound
lret
pop
xchg
aad
repnz
dec
xor
icebp
sbb
pusha
xchg
cmp
mov
jae
out
add
cmp
sbb
pop
pop
lcall
sti
movsl
rcr
add
xor
stc
lret
jns
push
stos
sub
cmpl
lods
in
jb
pop
lock
in
mov
mov
ret
cwtl
jecxz
cmpsl
mov
push
mov
insl
int3
or
sub
addr16
push
roll
pop
push
mov
test
rorb
jl
or
mov
mov
cmc
cmp
loope
jnp
aad
xchg
mov
shrl
xchg
sub
orb
mov
jmp
push
or
outsb
fdivl
and
or
jle
rcr
jne
lret
aas
ds
dec
mov
add
jecxz
cmp
fs
jb
pop
mov
daa
ret
scas
gs
loop
scas
adc
xor
testb
mov
mov
lcall
xchg
inc
sub
dec
adc
lock
add
sbb
mov
jb
call
jbe
std
mov
stos
sub
les
ror
cmp
ret
add
jmp
lcall
jae
enter
lret
mov
pop
jo
mov
mov
cmpsb
mov
data16
lahf
mov
xor
bound
pushf
in
faddl
push
xchg
jp
and
cmpsl
and
jp
js
add
fsubrp
sbb
pop
jbe
ds
in
rcll
clc
inc
bound
adc
and
pusha
sbb
jae
leave
pop
outsl
test
cmp
arpl
rcrl
cmp
rep
scas
inc
movsb
movsl
lcall
lds
nop
test
adc
std
sahf
jbe
data16
hlt
lret
outsb
sbb
aaa
jg
push
cmp
push
lds
loop
data16
lret
jbe
ljmp
mov
aam
adc
sbb
inc
in
call
aaa
xor
jns
nop
sbb
ja
lods
push
out
pop
jge
les
ret
or
loope
int
jb
in
rcrl
mov
out
ds
icebp
mov
mov
call
jo
sub
mov
popf
dec
repz
pop
adc
or
ret
scas
mov
mov
dec
xchg
or
xor
dec
pop
imul
lea
mov
sub
fildll
fdivl
jge
push
pop
adcl
jle
inc
gs
and
jmp
adc
inc
xchg
cmp
loopne
je
xchg
imul
or
cltd
loopne
push
movsl
xor
popa
sarb
dec
sub
or
in
xchg
inc
addr16
jnp
push
cmpsb
mov
imul
ficoml
inc
andb
aam
xor
stos
pop
xor
cmp
sub
cmpsl
push
inc
mov
inc
xor
imul
nop
cmp
pushf
pop
xor
mov
mov
mov
or
adc
xor
xchg
hlt
enter
ret
mov
mov
xor
and
lcall
mov
adc
hlt
xor
mulb
mov
cwtl
sub
decb
mov
mull
pop
mov
std
push
sbb
cmpsl
mov
int
imul
or
jl
cmp
inc
xor
dec
loop
shll
out
push
jns
xchg
lock
cmp
sti
dec
mov
and
int
mov
dec
jo
jle
mov
mov
outsb
aad
xchg
mov
xor
mov
xor
ret
lahf
into
inc
xchg
jge
xlat
movsl
ds
rorb
push
scas
and
ret
xchg
adc
arpl
lret
and
push
call
rorb
xor
and
jo
loop
je
into
lock
jo
or
push
leave
xlat
out
fldl
popf
cmpsl
imul
and
xchg
stos
insl
xchg
fwait
scas
imul
loop
jecxz
jl
sbb
inc
mov
pop
hlt
fcoml
xbegin
lds
stos
sub
or
push
and
or
inc
and
stos
push
mov
lcall
dec
cmpsb
js
out
xchg
ficomps
mov
popf
cmp
adc
inc
cmp
inc
int3
jnp
lret
lods
dec
scas
je
xor
dec
popa
lods
test
mov
dec
cwtl
push
insl
mov
loop
or
push
mov
mov
mov
inc
shlb
xor
mov
sub
test
loop
xor
js
pop
sub
xchg
push
cld
mov
aad
aad
out
jns
lock
cld
mov
lods
cmp
mov
leave
sub
test
sbbl
push
inc
dec
imul
jb
pop
sub
dec
pop
scas
cmp
mov
add
and
lret
pop
insl
mov
adc
lock
mov
push
lcall
loop
pusha
sbb
pop
adc
lods
popa
xchg
add
fnstsw
cmp
sub
outsl
xchg
insb
or
mov
sbb
adc
pop
jbe
dec
mov
sub
in
jne
addps
fists
out
pop
ret
sub
cmpsb
xchg
and
out
jnp
shlb
pop
add
jbe
dec
icebp
xlat
dec
or
adc
jg
test
lret
out
js
or
insl
test
push
shlb
mov
aam
sti
imul
push
adc
or
call
pop
call
dec
xchg
test
ret
add
inc
popf
fmul
popf
fadds
fsubr
mov
mov
mov
out
out
addr16
cld
stc
jb
jbe
flds
loopne
mov
adc
dec
inc
iret
imul
push
xchg
cmpsl
xchg
dec
aad
les
and
jp
and
insl
roll
add
jbe
adc
xor
push
mov
jb
push
and
les
outsb
lcall
inc
mov
in
adc
jo
fidivl
lods
add
xor
xor
imul
repz
ljmp
mov
jb
pop
xchg
pop
jo
mov
cmp
imul
push
sbb
jae
in
xchg
loopne
das
out
pusha
cs
inc
addr16
xor
mov
repnz
jmp
pop
lods
pop
dec
mov
vpsubsb
pusha
ss
cmp
mov
es
adc
jp
adc
push
dec
and
ljmp
xchg
aam
inc
sbb
mov
ds
dec
loop
sub
cmc
add
sub
in
xor
push
mov
and
loope
adc
repnz
ret
out
xchg
cmpsb
xor
sbb
in
adc
inc
push
imul
mov
imul
mov
lcall
lcall
in
adc
mov
sub
add
jg
push
adc
sti
mov
add
jae
rorl
mov
push
push
daa
xor
arpl
jno
add
scas
mov
outsl
push
ss
xchg
adc
mov
pop
or
outsl
inc
popl
sarb
xor
pusha
jecxz
pop
mov
dec
lea
lods
test
das
adc
imul
and
sub
lea
lea
dec
mov
mov
jl
movsl
outsb
and
rol
movb
cs
add
xchg
pusha
jnp
xchg
pop
lods
addl
xchg
pop
fisttpll
loope
mov
jnp
push
push
mov
out
xlat
add
comiss
mov
jbe
hlt
cmp
andb
cwtl
out
jns
jo
jle
xchg
lcall
stos
sbb
and
sub
outsl
bound
sub
ja
into
cs
fwait
push
push
imul
outsl
mov
sbb
into
imul
xor
and
sahf
sub
add
jl
add
sub
jge
out
emms
stos
cmpsl
xchg
jb
pop
cs
lods
sub
adc
mov
imul
add
cwtl
rolb
pop
or
fnstenv
jo
mov
xchg
insl
xchg
repz
int
imul
hlt
pop
loop
xor
pop
or
mov
xchg
inc
cmp
lods
mulb
movsb
xor
es
ret
out
mov
mov
add
mov
add
pop
test
daa
loop
jo
mov
jns
mov
jae
push
out
mov
add
adc
mov
xchg
inc
ja
ret
xor
adc
in
js
xor
sub
fnstenv
dec
test
fwait
jmp
inc
hlt
and
mov
sbb
jb
aad
adc
sbb
ds
call
cltd
daa
sub
sub
sbb
xor
sub
shrb
dec
push
cmc
pop
or
cwtl
add
push
or
dec
adcl
int
out
dec
pop
enter
scas
cmpsb
xorb
or
pop
push
dec
mov
adc
cmp
mov
loope
js
push
jl
loope
mov
xchg
aas
adc
leave
std
fwait
xchg
test
xchg
pop
push
test
mov
xchg
cld
pop
xor
jne
fmuls
js
push
inc
cmpsl
pop
xchg
bound
pop
mov
popf
ret
or
pop
pop
cmp
sub
xchg
push
push
jmp
ja
cmpsb
scas
add
loop
mov
sub
sbbl
dec
push
xor
scas
cld
push
mov
pop
insl
sbb
jmp
hlt
cmp
lret
std
lods
mov
insl
movsl
add
movsb
cmp
mov
add
icebp
mov
push
enter
mov
dec
adc
lock
add
sbb
rcl
sahf
cs
cmc
int3
mov
insb
fstpt
xchg
cmp
subb
mov
fmull
sti
cltd
jge
stos
jne
fnstenv
or
out
push
imull
mov
ss
cmpsl
pusha
incl
fidivl
sub
rcl
insb
or
sbb
imul
leave
mov
stc
outsb
fnstsw
dec
lea
hlt
pop
dec
push
sti
jnp
rcll
jl
or
jg
or
repnz
sahf
mov
xor
xchg
mov
sarl
xchg
outsb
in
imul
xchg
lahf
add
das
xchg
dec
mov
inc
scas
inc
adc
adc
inc
push
mov
cli
jns
jg
inc
adc
sbb
add
ss
cltd
or
fiaddl
mov
xchg
cmp
faddl
push
sub
mov
adc
pop
mov
sbb
jo
add
cmp
cmpb
jbe
aam
or
pop
shr
or
inc
and
xchg
fs
lock
and
xchg
xchg
icebp
rcrl
fistl
add
jo
fadds
in
nop
pop
and
repz
aaa
ljmp
imul
jmp
or
movsb
popf
ds
imul
xchg
je
outsb
cmc
sub
test
repnz
mov
inc
jne
mov
stc
mov
cmp
sbb
mov
lahf
mov
js
scas
mov
into
loop
mov
mov
add
sub
push
jmp
xchg
add
jecxz
loop
dec
sbb
sbb
std
mov
fidivs
aaa
lret
sbb
pushf
in
mov
xor
mov
out
inc
imul
mov
pop
adc
lods
bound
rorl
inc
subl
inc
in
mov
sub
insl
test
push
sbb
lret
push
xchg
pop
addr16
xor
stos
lea
in
inc
ljmp
xchg
adc
pushf
pop
aam
add
repnz
pushf
xor
xor
imul
jne
addr16
inc
sahf
pop
mov
or
loopne
pushf
ja
pop
dec
dec
loopne
out
scas
subb
aad
out
dec
int3
inc
sub
jg
jns
sub
cltd
fs
gs
push
inc
push
push
jno
pop
jg
mov
rolb
mov
and
cmpsb
xor
cmpsl
loope
mov
xchg
adcb
lods
mov
or
cmp
into
in
cld
pop
jmp
test
lods
and
sub
and
loopne
fdivl
xchg
jmp
shll
out
inc
pushf
jnp
mov
rclb
bound
sbb
shr
adc
mov
test
mov
test
xchg
cmp
pop
mov
out
mov
or
xor
push
out
xchg
outsl
ror
lods
movsb
jns
pop
pop
enter
sub
jmp
inc
xor
jno
cli
pause
xorb
nop
push
jg
stos
fnstenv
xchg
gs
jge
sbb
pop
ja
mov
fwait
jb
cltd
dec
mov
lods
popf
and
add
sub
les
xchg
xor
call
cltd
pop
cwtl
jp
jmp
xchg
mov
div
jns
inc
out
mov
iret
enter
cmp
daa
pop
jne
sarl
mov
jno
cld
in
cmp
mov
xchg
outsb
sbb
divb
sti
cmpsb
adcl
add
sub
rcl
mov
and
cmpsb
dec
jb
adc
mov
jge
sti
xor
scas
and
dec
cmp
test
mov
inc
icebp
mov
add
rclb
fwait
in
push
lret
pop
in
push
outsb
rcl
adc
cmp
ficompl
iret
repnz
sbb
sub
inc
aas
pop
and
shll
push
sbb
inc
jno
mov
mov
cli
in
insb
lea
dec
dec
push
push
pop
or
dec
mov
cltd
pop
xchg
jge
clc
scas
mov
aam
jecxz
dec
scas
and
xchg
jo
xor
pop
push
jo
push
mov
mov
addr16
mov
dec
sub
jb
mov
ja
ljmp
xor
movsl
dec
pop
add
mov
sub
mov
gs
shl
mov
mov
xor
loopne
mov
ficompl
fstl
sbb
gs
jg
cmpsb
jo
pop
add
or
data16
pusha
xchg
daa
rclb
mov
mov
add
push
xchg
leave
or
bound
push
add
mov
lret
mov
inc
pop
rcll
jno
add
jnp
jg
push
xchg
sahf
daa
int3
pushf
fidivrl
pop
mov
inc
nop
xchg
pushf
jnp
movsl
add
add
jge
jb
insl
xchg
shrl
mov
test
repz
sub
jg
and
fcmovu
ret
in
add
scas
mov
loopne
push
subb
push
pop
and
arpl
mov
mov
inc
call
or
mov
scas
pusha
or
cwtl
mov
daa
test
pop
jne
add
sarb
mov
pop
in
and
stos
cmp
orb
jae
hlt
sbb
out
ss
pop
inc
cmp
push
or
ljmp
pop
cmpl
xchg
dec
jmp
sbb
je
push
pop
arpl
stos
sub
jbe
sbb
repnz
push
sbb
mov
iret
or
pop
mov
mov
dec
push
mov
xor
dec
out
cmovl
mov
gs
and
pop
push
rclb
rcrb
and
aaa
das
ftst
adc
add
or
xor
test
repz
jno
ja
ret
mov
pop
sbbl
mov
into
adc
rcll
je
ret
push
cs
and
lret
lods
ds
fld
push
imul
ja
cmp
pop
cli
sbb
imul
fisubs
or
es
sub
pushl
dec
int
int
xorl
dec
pop
in
out
sub
xor
lret
aas
xchg
outsb
mov
in
iret
push
popf
add
cmpsl
xlat
mov
js
jg
dec
ljmp
clc
nop
leave
and
pop
or
sub
or
push
outsb
ret
addl
loopne
ds
mov
in
jnp
fnstsw
in
lahf
cmc
xor
cli
inc
stc
sbb
pop
test
sarl
mov
out
dec
cmpsb
jmp
lret
fst
loopne
mov
jne
dec
xchg
dec
es
mov
jnp
stc
sbb
or
pusha
xor
ficomps
fdivrs
or
or
rcll
ret
rolb
cmpsb
mov
xchg
insl
insl
std
bound
mov
xchg
inc
lock
icebp
mov
lods
insl
jns
pop
psrlq
dec
xchg
in
fs
push
and
pop
cmpsb
and
std
or
mov
aas
xor
mov
stc
fs
sub
jg
lret
loop
dec
roll
icebp
loop
xchg
mov
add
shr
mov
aaa
inc
addr16
or
or
inc
jle
test
test
fistl
sbb
dec
rorb
divl
or
mov
fxch
fists
push
cmc
mov
mov
inc
push
mov
outsl
inc
aas
sub
adc
mov
je
lret
aaa
and
out
inc
dec
fxch
add
imul
xor
aam
sub
push
ret
inc
dec
rclb
jmp
mov
push
sbb
sub
dec
cmc
sbb
cmpsb
rclb
insl
lea
sbb
lds
fistpll
xor
jmp
fcoms
jae
dec
mov
cmc
les
inc
imul
push
push
adc
push
dec
inc
lods
dec
call
lahf
inc
mov
sbb
xchg
int
push
mov
or
mov
mov
out
add
les
sbb
std
lcall
sarb
push
aad
xor
jnp
inc
out
pop
test
add
pushl
mov
xlat
fists
pushf
mov
dec
xor
xchg
or
inc
xor
cltd
sub
mov
dec
sub
clc
aad
add
and
in
imul
add
sub
dec
inc
and
pop
cmpsb
out
out
adc
mov
push
pop
push
sub
add
fwait
jbe
dec
mov
sbb
pop
or
sbb
scas
mov
mov
jle
lcall
ret
in
xchg
inc
mov
mov
std
xor
mov
mov
aam
pop
mov
icebp
add
jnp
rolb
cwtl
mov
jno
cltd
subb
fdivrs
inc
insl
daa
adc
mov
or
jl
popa
sub
fiadds
sbb
xchg
jl
sub
mov
sub
jmp
stos
sbb
enter
es
mov
dec
pop
dec
mov
cmc
jge
cltd
leave
mov
shll
cmp
cwtl
dec
je
sub
outsb
test
mov
jbe
ss
mov
mov
cmc
xchg
xchg
scas
push
xchg
cmp
sub
out
js
or
iret
test
cmpb
mov
fidivl
push
das
loopne
mov
mov
jmp
adc
and
and
scas
cmp
lahf
dec
sub
test
push
push
lods
test
sub
out
jecxz
xor
jg
inc
push
cld
es
jg
mov
pop
cmp
sbb
or
jno
insb
dec
cwtl
xchg
iret
lock
popa
rol
fwait
cld
mov
jnp
push
pop
dec
push
inc
fwait
cmp
bound
jg
jge
sub
jnp
jl
dec
notl
hlt
jg
push
in
xor
sti
xor
cmp
scas
sti
aam
inc
fwait
jg
cmp
dec
xchg
bound
add
ficoms
mov
sub
lahf
xor
dec
fsubs
mov
dec
jg
xchg
icebp
cwtl
dec
cmpsl
xlat
mov
add
sbb
jbe
jg
xlat
pushf
ror
rcll
cmpsl
pop
call
sbb
mov
mov
in
insb
cmp
push
or
mov
outsl
pop
dec
inc
stos
mov
movsb
inc
test
test
mov
mov
add
inc
shr
sub
push
push
rcrb
or
mov
inc
fisubs
addr16
int3
jmp
and
xor
push
aad
test
inc
fistpll
or
hlt
outsl
je
push
lret
ja
add
cmp
sub
cmp
fs
mov
ja
push
loopne
inc
mov
jnp
dec
mov
in
jl
or
lcall
cmp
inc
inc
sahf
push
call
mov
lods
adc
aad
add
inc
mov
in
jbe
daa
nop
jl
jns
adc
loopne
adc
dec
std
test
sub
cmp
repz
sub
in
repz
pop
repnz
inc
mov
add
mov
sbb
movsb
pop
out
xor
sbb
rcrl
test
ss
jbe
mov
inc
test
rorb
cmp
inc
dec
aad
mov
scas
pop
push
inc
jle
popa
lret
xchg
pushl
dec
and
bound
test
roll
pop
in
jb
out
out
jne
pop
adc
sbb
ret
xchg
jnp
mov
or
xchg
push
repnz
insl
mov
pop
fs
adc
lock
dec
mov
mov
add
pop
add
mov
fisttpl
hlt
scas
sbb
xchg
add
push
xchg
xor
fmulp
and
std
xchg
push
into
negl
fldt
ljmp
jecxz
ljmp
pusha
inc
shl
lcall
test
mov
sti
jbe
xchg
mov
mov
and
mov
int3
adc
in
push
mov
sbb
sbb
fwait
hlt
inc
movsl
xchg
xchg
shrd
inc
jg
inc
xchg
scas
jp
cmpsb
std
xor
pop
loopne
cltd
ds
mov
push
notl
mov
push
pushw
cmp
adc
js
mov
leave
addr16
push
xor
imul
sbb
sbb
xor
mulb
jbe
fiadds
out
jae
add
out
mov
cs
subb
inc
popf
cmc
jnp
push
and
dec
sti
push
mull
pop
jne
dec
push
clc
leave
mov
mov
mov
add
loopne
jb
push
popa
enter
mov
cmpb
mov
push
loopne
je
sbb
in
xchg
lret
je
and
jecxz
xchg
stc
jecxz
jnp
rcrb
imul
push
test
test
aas
mov
pop
xor
push
dec
push
lea
fwait
or
adc
test
xor
add
stc
add
jle
iret
jbe
mov
mov
into
push
sbb
test
loop
or
inc
iret
or
push
mov
pop
mov
jl
push
dec
xchg
inc
pop
test
push
iret
or
mov
sti
push
cmp
xlat
rorl
adc
fisttpll
movsl
stos
movsb
inc
out
pop
fucomi
shlb
test
push
out
out
int
gs
mov
jl
jo
mov
mov
xchg
sub
stc
out
or
rorb
pushf
push
jp
jb
imul
lret
inc
dec
cld
mov
adc
inc
push
pop
into
cli
sub
shrl
mov
loope
mov
mov
stc
sub
clc
fsub
repz
idivb
lahf
dec
cmpsb
sarb
addb
dec
sbb
int
dec
incl
push
hlt
cwtl
movsb
and
out
cmc
push
dec
or
xchg
pop
add
insb
in
xchg
adc
pop
pop
xchg
punpcklbw
xor
push
push
jb
leave
daa
add
push
scas
push
out
dec
jg
cwtl
cli
sar
adc
iret
adc
testl
lods
iret
out
aas
jmp
push
daa
lcall
xlat
insb
imul
cmp
cmp
daa
into
addr16
js
test
fdivrl
push
dec
imul
dec
xor
scas
jnp
cld
add
mov
push
arpl
jle
jno
add
xor
xor
lea
jl
popf
sub
pop
and
std
mov
inc
loope
jae
mov
mov
and
shlb
movsb
sbb
adc
xchg
pop
mov
push
mov
loop
gs
add
ret
push
or
adc
stos
pop
cmp
gs
repnz
pushf
dec
popa
pop
and
jecxz
out
pop
repz
imul
inc
and
std
pushf
cmpsb
sahf
fisttps
movsb
add
xchg
fisubs
mov
mov
je
adcl
repz
es
popa
sbbb
xchg
dec
pop
mov
pop
out
xor
movb
sub
cwtl
sar
data16
popa
or
daa
sub
jmp
jmp
sbb
sub
mov
add
pushf
loopne
xor
add
les
daa
push
aas
stos
insl
les
sbb
cmp
mov
inc
jecxz
dec
sahf
fldt
ficomps
jmp
ficoml
imul
jmp
fs
mov
arpl
in
stos
fidivrs
or
mov
sbb
sbb
push
jecxz
int
xchg
mov
in
mov
cmp
pop
hlt
cltd
xor
dec
adc
out
mov
jnp
leave
cmp
inc
push
loope
adc
xchg
mov
cmp
add
repz
xor
mov
outsb
cmp
cmp
fimull
mov
xor
push
mov
mov
mov
pop
addr16
pushaw
outsl
sub
adc
dec
into
mov
sar
sbb
insl
lea
mov
gs
jb
jno
test
xor
mov
jne
and
mov
cmpsb
and
pop
mov
jnp
scas
fcoms
lods
inc
sub
mov
sub
adc
pusha
jge
mov
loopne
push
sub
aad
add
int
mov
xchg
bound
ds
push
xor
add
and
mov
pop
xchg
mov
sub
and
ja
fldt
and
jg
in
movsl
mov
fsubp
xor
call
nop
add
sbb
push
mov
in
icebp
mov
cmp
repz
idiv
imul
sbb
sti
or
adc
mov
ret
ret
sub
arpl
cs
movb
xchg
push
lock
pop
mov
fdivr
aam
gs
mov
faddl
jecxz
mov
lret
rclb
mov
add
loop
pop
mov
hlt
dec
dec
sub
test
jg
jmp
repz
int
inc
in
sbb
inc
popf
inc
repnz
loop
jg
lret
mov
popa
lea
loope
je
dec
xor
adc
movaps
push
decb
mov
jecxz
xor
pop
inc
stos
sbbl
xlat
ret
movsl
cmc
popf
stc
pop
jae
cmp
or
nop
cld
fistpll
mov
cld
sarl
fbld
rclb
repnz
popa
xchg
and
mov
mov
cmp
dec
cld
and
popa
inc
in
pop
pop
sub
jl
es
shlb
cld
sbb
test
sub
jae
sub
xor
cli
lea
cwtl
loop
mov
lods
inc
cld
fdivrs
xor
mov
lahf
xor
sti
jb
sbbl
jg
xor
and
in
cmp
and
mov
push
ret
push
mov
dec
sub
jmp
ss
dec
pusha
xor
mov
jg
cmp
inc
mov
and
xor
push
jg
aaa
test
ret
into
test
test
ljmp
pop
loope
xchg
inc
jl
push
std
sti
scas
enter
sti
pop
push
cmpsl
xchg
adc
add
mov
sbb
jns
enter
popa
xor
addr16
jmp
mov
ljmp
fcoml
test
and
xorl
adc
aam
push
shlb
xor
push
pop
inc
ja
insl
jle
jbe
pop
enter
push
or
mov
subb
sub
in
jp
pop
cmp
jno
rcr
mov
pop
inc
add
enter
push
lahf
push
lea
inc
testl
jmp
dec
movsl
xor
pusha
mov
or
loope
inc
sbb
cmp
lock
dec
insb
push
pop
xchg
leave
loop
ret
hlt
pop
mov
pusha
lret
and
push
cmp
in
hlt
cmp
add
inc
fstpl
ja
mov
hlt
inc
mov
icebp
mov
dec
test
cmc
cmp
sbb
push
js
push
popf
push
test
inc
add
push
call
xlat
inc
jp
pop
pop
jmp
in
std
sbb
sbb
cltd
mov
cmc
mov
lahf
movsb
leave
xor
movsl
shl
push
mov
inc
cmp
pop
sub
test
lods
dec
fmull
pushf
imul
adc
mov
pushf
mov
or
imul
inc
ds
and
dec
push
fstps
sahf
data16
cmp
pop
cmp
dec
mov
jns
loop
push
push
mov
rorl
imul
xor
idivl
imul
and
mov
test
mov
movsb
mov
pusha
xchg
fmuls
popl
mov
xor
ret
sbb
imul
out
push
jle
mov
xor
xchg
mov
or
push
lock
jmp
add
fs
push
jl
add
test
sbb
push
push
test
or
sahf
mov
jp
mov
mov
lds
mov
fbld
jl
add
mov
dec
aad
xchg
mov
insb
mov
jae
roll
rcl
add
popf
shll
or
or
scas
pop
cli
inc
push
in
stos
cmc
out
data16
mov
jbe
cmpsb
in
daa
ret
ja
fwait
dec
mov
je
pop
cmp
enter
cmpsb
ret
stos
faddp
pop
loope
lret
js
repz
xchg
lret
shlb
cmp
mov
mov
cld
test
dec
out
adc
dec
lock
mov
mov
mov
aaa
negl
movsl
dec
addr16
icebp
mov
rorb
jbe
stc
cs
movl
flds
out
jno
sbb
or
jo
mov
nop
mov
das
fwait
je
mov
mov
int3
stc
mov
mov
test
fwait
mov
jb
mov
and
les
cmpsl
push
xchg
adc
pop
and
xchg
out
mov
add
push
lret
xor
out
out
cmp
ficompl
xchg
add
jg
mov
mov
jge
je
sub
shrb
and
pop
int3
cmp
ret
sbb
jne
xchg
out
inc
mov
mov
stos
andl
push
push
xor
loopne
pop
movsb
dec
out
pop
cmp
insl
cli
repz
shlb
xchg
cs
aas
test
or
adc
aad
mov
xchg
dec
sbb
lret
in
lods
sahf
lret
dec
mov
mov
cmp
mov
fstpt
pop
pusha
movsl
or
xchg
and
or
in
mov
fwait
cs
dec
stc
mov
cs
xchg
fwait
adc
subb
mov
cld
popa
pop
js
call
xor
push
jg
cli
nop
movsb
sbb
cmp
pushl
mov
add
lret
xor
mov
and
pop
mov
daa
cmp
std
icebp
call
inc
jnp
xchg
iret
adc
push
shlb
out
lods
push
addl
pop
mov
xchg
cmp
jb
shlb
movsb
rcrb
pusha
pop
int
scas
jo
les
fcmovnu
mov
cli
pop
push
mov
add
mov
cli
pop
mov
sbb
push
cmp
fnsave
das
aad
push
lret
std
fldt
lcall
fmul
shlb
jne
jl
add
shrb
jg
push
daa
xchg
cs
into
sub
dec
in
xchg
adc
sub
and
imul
mov
jl
dec
cmp
clc
aaa
movsl
cmp
push
je
incl
in
dec
movsl
daa
dec
outsl
pusha
lods
xchg
lcall
aaa
mov
jmp
addb
xor
xchg
leave
in
mov
clc
add
xor
loopne
inc
mov
call
sub
mov
clc
lret
mov
jo
or
popf
popf
insb
xor
push
shl
leave
xor
mov
sbb
and
xchg
fnsave
adc
mov
mov
pushf
daa
jge
sarb
cs
jmp
xchg
cmp
test
jo
cmc
or
xchg
fdivp
pop
jae
xchg
dec
dec
xchg
inc
enter
lahf
bound
cld
pusha
ret
jle
and
push
jno
sub
repz
out
or
scas
and
fistps
negl
sbbb
push
rclb
adc
jle
ret
mov
bound
lea
jp
pushf
pop
sub
mov
repz
mov
ljmp
pop
sbb
mov
jg
aam
fsubrs
arpl
clc
mov
xchg
fbstp
xor
mov
shll
pop
stos
sbb
sub
adc
pop
mov
push
mov
push
push
inc
mov
test
mov
xchg
jb
mov
in
in
out
repnz
mov
stos
add
fidivrl
sbb
sub
iret
cmpsl
add
cmpsb
mov
jg
in
dec
and
out
lock
into
movzwl
es
out
test
adc
cmpsb
notl
or
cmpsb
add
push
lea
ja
lahf
sbb
sbb
neg
sarb
js
gs
mov
push
test
popa
jnp
pop
jle
adc
adc
popf
fisttpll
pop
aam
jb
xchg
icebp
xchg
sahf
xchg
push
out
push
lods
imul
dec
loope
std
jl
sti
and
dec
sub
mov
adc
ror
push
cmpsb
fwait
sub
popa
pushf
mov
iret
leave
ljmp
sbb
or
sub
mov
sbb
lods
xchg
pop
inc
push
das
fs
pop
stos
mov
adc
mov
cli
outsb
data16
scas
jne
jmp
xchg
scas
and
add
mov
jg
imul
sti
loope
mov
pop
sub
add
in
ss
nop
aam
das
pop
adc
imul
cmp
filds
fwait
aam
mov
ret
xor
lods
mov
out
loope
mov
xor
js
xor
mov
shrl
mov
sub
sbb
dec
lcall
cmp
add
outsl
in
xor
gs
aad
jo
pusha
inc
xchg
hlt
and
hlt
sub
out
push
add
lds
fimull
lret
inc
rol
imul
xchg
mov
jne
outsl
push
mov
test
and
bound
xchg
pop
lea
mov
cmp
inc
test
imul
cmp
das
add
sahf
insb
mov
pop
xchg
xrstors
fbstp
in
mov
cmpsb
xorl
add
leave
test
fcompl
add
call
fstpl
outsb
ljmp
push
push
mov
mov
ret
jecxz
mov
into
add
imul
xor
sub
les
out
dec
int
in
dec
mov
out
hlt
pop
into
call
xchg
out
push
mov
insb
cmc
pop
dec
mov
js
sbb
or
loopne
jbe
mov
jl
jbe
mov
mov
jecxz
pop
fwait
xor
sub
int3
jmp
xchg
mov
mov
xchg
xchg
pop
popl
push
out
or
aaa
lods
xchg
sub
out
inc
xchg
ret
jb
inc
add
dec
subl
push
aad
popa
pushf
mov
sbb
mov
lret
fdivrs
rcrb
or
adc
bound
in
loopne
dec
sub
sbb
sbb
xchg
jns
stc
outsb
pop
mov
sub
inc
push
push
imul
fnstenv
jl
sahf
daa
std
sti
xchg
out
cmc
out
fnstenv
je
gs
pop
test
cwtl
push
ret
out
cmp
mov
lcall
mov
mov
daa
shr
mov
sahf
lods
jno
and
addl
fsts
xorl
add
into
adc
std
inc
and
sbb
jns
mov
mov
mov
add
mov
cmp
sbb
and
call
jg
sub
stos
inc
adc
pop
insb
cmp
jp
mov
xor
jmp
imul
arpl
in
push
sbb
mov
cmpb
fdivrl
or
mov
iret
jge
dec
push
loopne
sbb
icebp
sbb
xchg
xchg
popf
out
lods
add
imul
jns
int
or
aaa
jp
jae
jb
mov
xor
add
xchg
test
xchg
popf
sbb
test
sbb
cli
mov
stos
mov
push
xchg
sub
cmpsb
push
leave
out
sub
cmp
cmp
rcrb
sarl
movsb
sbb
inc
loop
sub
enter
or
sbb
clc
leave
xchg
lods
cltd
pop
dec
xchg
mov
mov
adc
sub
xor
jae
in
inc
push
cmp
inc
loope,pt
fldcw
sarb
out
fwait
dec
stos
fdivr
mov
mov
cmp
sbb
repz
das
daa
fstps
mov
shll
pop
and
pop
pop
or
sahf
adc
sti
lret
sub
outsb
jecxz
jmp
aaa
cmp
and
mov
xchg
dec
movb
jmp
pop
out
dec
out
in
frstor
imul
push
pusha
mov
push
jecxz
pusha
jg
cli
cmp
jg
inc
dec
orl
fldcw
jg
cmp
mov
or
xchg
jg
xchg
aas
mov
lock
cld
jg
enter
xchg
dec
cli
xlat
pop
out
mul
lret
ret
ret
lock
test
jmp
or
mov
roll
test
and
mov
push
in
xor
mov
scas
outsb
rorb
push
and
mov
jae
loop
jmp
int3
cmp
inc
jmp
xchg
outsb
add
xchg
fldcw
scas
fs
repnz
and
shrl
push
sub
mov
push
stos
mov
pop
fisubrl
addr16
and
popa
xchg
push
shll
mov
xor
fcmovne
daa
xor
sar
xchg
mov
mov
xor
daa
faddl
and
jp
cmp
loop
mov
cmp
mov
jge
lret
pop
in
cmp
inc
int
jp
in
mov
inc
fdivs
sub
dec
out
mov
push
ret
orl
dec
lcall
dec
test
or
add
dec
xor
test
mov
rolb
ss
ficompl
testl
sbb
mov
js
fsubrl
or
push
or
outsl
scas
scas
add
jo
push
ja
dec
std
leave
dec
cmp
popa
mov
push
jo
cmpsb
lods
xchg
xchg
cmpsl
je
fcomps
push
mov
lds
fdivr
mov
xchg
mov
pop
data16
pop
out
dec
push
push
decl
ret
mov
movsl
lcall
jmp
jge
cwtl
pop
insl
mov
rcrb
add
and
pop
xchg
push
fmul
adc
and
pop
cmc
test
xor
fdivs
stos
and
lock
roll
int
lock
mov
dec
xor
mov
imul
pop
out
mov
xorb
arpl
push
sub
movsl
xor
in
loope
sbb
push
outsb
jecxz
inc
shl
push
in
int3
cmp
dec
aaa
in
adc
dec
daa
lods
xorb
adc
jl
shrb
inc
sbbb
inc
xchg
push
xchg
mov
jns
loope
mov
sub
pop
sbb
mov
cwtl
sub
movsl
xchg
jbe
test
mov
mov
lods
pop
cmp
lods
mov
lcall
jg
mov
inc
mov
xor
xchg
mov
repnz
adc
int
xchg
mov
add
sti
imul
sub
daa
and
call
mov
in
adc
or
pop
push
sarl
sbb
and
mov
push
shl
cmpsb
cmp
xorl
neg
dec
movsb
jns
xchg
enter
std
mov
xor
and
ss
lcall
inc
nop
jecxz
fsubs
xchg
lret
fistps
stc
sub
jmp
dec
out
adc
add
push
sti
push
lock
rorl
push
xor
and
in
das
dec
mov
push
rcrl
xor
cmp
inc
sti
mov
mov
mov
mov
push
in
jo
jmp
aas
das
jbe
pop
sbb
cmp
xchg
jno
xchg
lret
inc
dec
ret
xlat
adc
lcall
cmp
pop
fldl
mov
out
ret
jnp
jl
out
mov
push
out
inc
mov
adc
sti
xor
lods
mov
orl
or
sbb
push
xor
ds
sub
loope
mov
lods
and
int
lock
fidivrl
cmp
into
push
jne
out
sub
orb
fstpl
pushf
cwtl
cwtl
leave
es
jmp
lcall
sub
dec
mov
out
xchg
int3
pop
out
jp
fs
mov
sbb
outsb
cwtl
jns
aad
or
jns
mov
je
in
mov
loope
cmp
repz
mov
mov
cmp
jno
add
or
and
jge
arpl
loope
clc
xchg
push
clc
dec
pop
cltd
add
pop
xchg
loopne
cli
fwait
orl
adc
inc
cltd
push
orb
icebp
into
ficomps
decl
leave
ds
test
out
jecxz
js
and
arpl
pop
xorl
mulb
or
xchg
std
and
jnp
movsb
jae
lcall
pop
lahf
cmp
pop
push
in
loopne
out
mov
jb
xor
mov
out
sarl
or
push
out
adc
lods
jecxz
clc
add
xchg
mov
addb
lahf
mov
cmpsb
lds
push
sbbb
outsb
imul
pop
jno
stos
dec
out
xchg
test
int3
leave
mov
inc
mov
fadds
pop
divl
mov
sbbb
inc
inc
inc
dec
mov
mov
xchg
lahf
imul
popf
inc
sbb
loope
cmc
mov
out
outsl
cmp
ficompl
rorb
aad
lret
mov
sbb
sub
mov
sbbl
loop
jae
add
mov
adc
xchg
lea
add
xor
stos
in
mov
mov
clc
sub
push
int3
sbb
mov
outsl
jg
xor
mov
out
cmp
sbb
pop
mov
mov
mov
pop
pusha
pop
lds
rolb
inc
scas
outsb
es
shl
in
clc
dec
insl
mov
jae
inc
dec
mov
mov
pop
cmp
nop
addr16
adc
cld
cwtl
inc
sbb
push
nop
and
sbb
mov
in
sub
leave
mov
jg
out
stos
arpl
adc
lret
insl
xor
lods
or
out
push
cmpsl
xchg
fst
inc
xor
lret
xchg
imul
jl
jbe
sahf
daa
hlt
cmp
mov
shll
lds
roll
jne
jae
mov
mov
mov
mov
mov
mov
sbb
add
das
push
imul
imul
lcall
add
push
push
repz
jbe
es
mov
fcomip
insl
inc
mov
add
dec
or
shll
stos
xlat
jp,pt
movsl
aad
ss
roll
pop
bound
ficompl
add
mov
mov
fidivrs
xchg
xor
pop
sti
pop
fisttps
mov
xor
pusha
sbb
adc
clc
sub
jmpw
aas
movsl
rcll
pop
jns
dec
push
cmp
lds
decl
xor
out
jbe
mov
lock
sub
mov
xchg
sbb
dec
pop
movsl
js
es
mov
js
xchg
jb
push
int3
in
sbb
pop
xchg
int3
dec
dec
fs
mov
ret
add
mov
push
mov
cld
inc
in
dec
mov
sbb
pop
mov
gs
mov
mov
je
shrl
xor
add
gs
jns
lods
xor
sub
icebp
cli
mov
int
mov
mov
pop
popf
nop
into
sbb
pusha
push
leave
add
fsubr
adc
jg
mov
or
icebp
adc
and
icebp
push
addl
sbb
mov
push
gs
mov
lods
fbld
add
shlb
movsb
pop
and
mov
pop
mov
in
mov
inc
imul
inc
repz
cmpsb
nop
fldenv
idivl
lret
xchg
mov
shll
lret
jne
subb
movsl
mov
or
xchg
outsl
and
dec
jnp
imul
ja
mov
scas
lret
out
jge
jmp
xlat
ja
popa
xlat
pop
mov
mov
jbe
js
lret
or
addr16
lea
push
pop
test
outsl
cltd
les
sub
mov
sbb
mov
iret
movsb
jno
je
out
out
das
outsb
in
push
jo
jno
or
xor
out
mov
in
xor
mov
cmp
jne
or
jb
fistps
xlat
mov
lea
sub
pop
scas
or
in
in
sbb
fcompl
push
int3
xchg
mov
add
nop
mov
xchg
adc
mov
stos
cmp
sbb
push
cmpsl
daa
adc
xor
add
cmp
outsl
jmp
fxch
mov
lret
push
or
movsl
or
and
xchg
test
das
push
sub
adc
ss
sahf
test
mov
jbe
inc
sbb
jb
or
inc
mov
cmp
pop
addb
insb
icebp
sub
aad
sar
in
scas
jmp
and
loopne
pop
mov
mov
pop
ficoml
arpl
xchg
jle
sub
lods
push
and
add
push
or
lret
sub
cwtl
cmp
adc
sti
adc
inc
stc
sahf
add
idiv
dec
in
cmc
nop
mov
cmovb
add
pop
xchg
adc
sub
mov
in
mov
push
and
cltd
xchg
push
test
lahf
test
add
xchg
sub
clc
and
fistpl
xchg
pop
inc
sub
aad
jle
loopne
mov
cld
dec
push
inc
sub
xlat
mov
xchg
push
ror
je
xchg
scas
xor
mov
or
scas
cmp
mov
in
mov
iret
divb
nop
inc
dec
or
and
jge
jb
push
mov
rorb
add
add
sub
sbb
inc
rcrl
ljmp
jo
lods
xor
adc
xchg
inc
mov
cmp
push
pop
mov
inc
out
xlat
aam
xlat
clc
jne
cmp
pop
xchg
jp
imul
lret
loope
adc
jecxz
push
adc
shll
adc
jecxz
testb
ss
mov
data16
data16
mov
rcrb
inc
cmpsl
add
sti
mov
lret
pusha
cld
push
pop
out
xchg
mov
fsts
xchg
mov
push
repnz
mov
jbe
cmp
dec
xchg
inc
daa
adc
loop
cmc
dec
aaa
daa
xor
inc
aam
cmp
stos
lret
inc
stos
arpl
sub
push
push
mov
sub
scas
sub
and
arpl
add
scas
mov
test
call
jp
sub
scas
sti
cmp
mov
lock
data16
fdiv
jno
add
jmp
aad
adc
xor
xchg
scas
outsl
push
push
ret
lock
xchg
cmp
jl
ret
xchg
dec
inc
test
jp
sbb
aad
push
pop
test
push
mov
insb
imul
sub
push
gs
das
inc
scas
aam
bound
dec
sub
fdivrs
std
enter
xchg
add
rcl
clc
and
popf
cmc
popf
es
inc
or
and
mov
and
mov
pusha
dec
push
imul
in
call
push
push
daa
push
mov
outsl
sbb
xlat
mov
pop
std
daa
push
push
add
aas
sub
cs
lds
mov
data16
out
insb
jbe
push
push
xchg
sbb
aam
jnp
out
cli
mov
xor
std
cmp
lds
adc
push
xor
push
jl
adc
sbbl
add
hlt
insb
jle
test
mov
addr16
mov
add
mov
push
add
cli
sbb
and
das
in
adc
add
cld
data16
outsl
sub
lock
call
call
std
push
mov
sbb
dec
mov
push
mov
dec
push
rol
jmp
cltd
jb
push
cmc
pop
imul
sahf
mov
fstl
jge
sub
mov
jmp
ds
out
aaa
ret
aad
cmpsl
pop
popf
call
stos
push
push
inc
add
cld
loopne
inc
sbb
fldl
xor
jns
out
fimuls
les
dec
into
jb
pop
push
mov
fdivs
dec
mov
push
add
xor
adc
fiaddl
inc
popf
xlat
push
frstor
popa
or
ds
dec
sub
test
call
cld
out
loopne
rdpmc
xor
and
into
cli
lods
push
push
jbe
shl
push
inc
mov
push
mov
mov
ret
jle
movsb
jmp
lock
jns
jmp
push
xor
nop
gs
sbb
mov
mov
repnz
mov
and
or
sub
jb
add
adc
in
andl
dec
sub
sub
jle
out
xor
xchg
jmp
inc
subb
and
sub
cmpsl
bound
xlat
cwtl
push
or
push
popa
mov
jle
fadd
test
ds
dec
imul
xor
std
in
mov
xchg
repnz
cmc
xor
push
xchg
popf
js
mov
cmpsl
adc
aad
add
dec
jmp
or
and
inc
test
mov
cmpsl
ret
fidivrl
jle
bound
sbb
adc
into
xor
mov
rclb
cmp
cmp
ja
enter
pop
push
cmp
loope
mov
mov
jg
sar
daa
pop
pop
cmp
xor
or
xchg
sbbb
lds
mov
xchg
daa
in
stos
mov
push
or
jmp
cmpsl
sbb
int
jns
scas
push
xor
dec
testl
and
jne
mov
enter
fs
test
call
mov
mov
inc
adcl
push
mov
and
es
cmpsb
sbb
sbb
and
fs
xor
sub
rclb
push
xchg
inc
mov
clc
and
int3
test
daa
cs
cs
dec
sahf
fbld
mov
dec
add
push
and
imul
xchg
xchg
sub
push
mov
jle
inc
outsb
dec
fsubrs
and
push
ss
dec
jae
add
cmp
test
xchg
add
add
inc
aam
ret
inc
cmc
in
xor
add
sbb
cmc
dec
jno
mov
mov
gs
sti
lcall
push
xor
jo
rorl
sub
inc
shll
mov
lods
sub
pop
dec
testl
sbb
lods
aad
fwait
adc
xchg
xchg
sbb
ds
insl
dec
pop
sub
jae
mov
mov
sub
je
lds
addr16
cmp
fistps
sub
xchg
loopne
mov
push
fisttps
dec
jl
pop
das
sbb
mov
mov
insb
xlat
popf
mov
fstpl
mov
mov
and
daa
sub
call
arpl
pop
das
dec
cmpsb
shlb
rclb
mov
and
sub
adcl
enter
fwait
inc
jp
push
xor
in
enter
mov
js
mov
cwtl
lods
push
mov
sti
mov
push
fucomi
enter
dec
inc
pop
add
adcb
pop
movsb
sahf
stc
sub
add
in
push
clc
cmpsl
xlat
int3
jbe
jo
jno
sub
fdivr
jp
hlt
push
cmc
lods
scas
mov
mov
dec
ds
insl
dec
jle
xchg
push
scas
xor
mov
repz
push
push
daa
adc
ss
pop
loop
jnp
rcr
adc
xorb
jp
pop
hlt
inc
test
jne
rol
cmpsl
repz
jo
sbb
in
add
jle
pop
mov
pop
loopne
pop
ljmp
lea
cmpb
and
loop
or
jbe
jb
lret
mov
inc
jae
pop
add
shll
pop
push
mov
mov
daa
int3
popa
mov
sbb
fnop
adc
dec
sbb
inc
sub
dec
xor
pop
pop
push
inc
jnp
xchg
push
pop
mov
lds
stos
rorb
pop
loope
enter
outsl
jb
push
stos
dec
dec
loope
jg
enter
es
xchg
movsl
and
rol
test
dec
sbb
mov
test
push
or
push
cmc
mov
lcall
ffreep
or
cs
cmp
push
insb
aam
mov
and
sbb
jno
pop
dec
dec
cmp
pop
ja
fwait
aas
sahf
in
in
xor
mov
sub
inc
call
inc
xchg
jg
addr16
xchg
pop
test
gs
enter
mov
sbb
push
jg
hlt
sbb
cld
std
aas
xchg
jl
inc
pushf
jg
call
sbb
sub
inc
ja
icebp
int3
movsl
push
mov
jmp
mov
stos
adc
add
push
insl
pop
test
or
mov
lods
add
push
imul
mov
lcall
cmp
add
jno
push
hlt
in
jmp
sub
sbb
sbb
xor
pop
cld
jle
mov
mov
rol
push
iret
in
mov
mov
sbb
ja
pushf
add
pop
fsub
add
pop
cmp
mov
push
sub
lea
sahf
pop
clc
cmp
bndldx
jbe
sub
bndstx
test
enter
std
movsb
jae
add
test
or
ror
and
mov
aad
shlb
aam
or
dec
jg
arpl
jge
jp
roll
push
inc
fdivrl
aam
xchg
mov
jl
jp
iret
dec
jg
mov
xor
adc
cmp
pop
icebp
pop
loopne
movsl
xor
cmp
or
adc
mov
mov
arpl
stos
in
bound
fwait
jns
leave
adc
inc
aaa
inc
pop
adc
inc
mov
mov
push
inc
scas
loop
nop
int
callw
sbb
add
xchg
mov
mov
loopne
pop
int3
inc
adc
mov
scas
adc
ljmp
in
dec
lret
adc
dec
or
leave
addl
add
stos
adc
mov
cs
outsl
push
cmc
xor
sbb
mov
jno,pt
pop
sub
stos
shrb
add
sbb
cli
test
insl
outsw
xchg
jle
loop
push
jecxz
jl
mov
sub
push
jge
mov
sbb
out
and
filds
sbb
sbb
sbb
inc
inc
enter
sbb
int3
out
dec
xchg
pop
in
call
xor
jp
adc
jg
iret
das
adc
or
cwtl
ret
fwait
fwait
out
sub
es
mov
sbb
inc
aas
add
ficoml
mov
sub
flds
test
xchg
pusha
in
pop
push
outsb
int
push
fcmovne
fiaddl
icebp
dec
jns
call
clc
popf
add
neg
add
fcmovu
imul
and
pop
xchg
pop
insb
out
std
dec
dec
lret
in
test
insl
sbb
out
cmp
jge
repnz
cmp
pop
clc
xchg
imul
mov
call
leave
fdivrs
mov
sub
aaa
mov
or
pop
movl
pusha
xchg
scas
push
push
mov
jb
add
call
daa
adc
xor
leave
lods
lret
das
xchg
aad
cmp
pop
sahf
or
xor
inc
push
call
mov
divb
xchg
int3
sarl
sti
push
cmp
sub
jns
xor
loope
push
mov
sub
mov
fstpt
push
insl
dec
ja
ss
or
lods
jecxz
cmp
or
xchg
pop
pop
int
test
push
ret
dec
cmp
leave
push
or
fnstsw
pop
pop
rcrb
leave
fwait
jg
push
mov
cmp
stos
push
scas
jp
add
xchg
movsl
pop
adc
push
imul
adc
sbb
jae
ja
movsb
cmp
imul
dec
pop
mov
sub
push
gs
xchg
filds
add
xchg
gs
gs
push
dec
cmp
insl
pop
cld
and
fdivl
stc
sbbb
lret
cld
ret
jmp
mov
cli
hlt
cs
rcrb
lods
lahf
shll
icebp
popa
test
mov
push
ret
jne
rcl
sti
push
xchg
pop
lret
out
mov
mov
sbb
les
mov
push
call
out
xlat
jns
sub
push
inc
fadds
inc
scas
cmc
ja
push
push
lret
adc
cmp
lahf
ja
sub
mov
fcmove
fnstsw
mov
loope
stc
pop
adc
add
xchg
adcl
inc
pop
mov
adc
inc
jnp
ret
rolb
pop
dec
stos
cmp
jp
dec
fsts
cmpsb
push
das
imul
in
out
inc
out
xor
divb
outsb
stos
or
adc
push
out
xchg
xchg
fstps
jo
sub
and
pop
inc
out
cld
push
mov
fnstenv
mov
xchg
sub
cltd
dec
stc
xor
dec
into
jb
mov
mov
decl
cmp
ljmp
sbb
push
loop
mov
inc
repz
lret
dec
lahf
push
cmp
ret
add
mov
insl
fmull
pop
jle
dec
dec
jge
cmp
divb
int3
shll
and
andl
adc
mov
dec
je
mov
es
loop
mov
pusha
enter
cmp
and
lea
aaa
popl
fnstsw
mov
jle
mov
jne
loope
mov
add
and
xor
mov
sbb
pop
ljmp
fsubrs
movsb
mov
movsl
jns
pop
lock
mov
les
les
aam
mov
pop
mov
pop
lcall
in
lret
push
hlt
into
jbe
mov
push
mov
lock
or
js
je
push
mov
movsl
inc
hlt
mov
loopne
aas
addb
mov
mov
inc
dec
orl
cltd
mov
hlt
push
or
pop
aad
cs
push
dec
dec
adcb
inc
cwtl
cmp
add
xor
cli
imul
pop
push
mov
jo
sub
adc
cmp
push
insl
xor
xchg
adc
gs
xor
mov
movsb
gs
jg
stc
call
mov
lahf
jmp
jne
dec
dec
icebp
cmp
cld
faddl
jne
push
mov
nop
dec
jge
lock
add
mov
loopne
in
mov
jo
popf
rcrb
sahf
dec
mov
mov
inc
mov
jg
sti
pop
out
sbb
mov
stos
test
aad
mov
inc
fwait
xchg
fisubs
mov
divl
dec
mov
lea
call
dec
in
add
push
dec
mov
sub
xor
arpl
push
inc
aad
out
test
movsl
pop
sbb
mov
pop
sbb
or
insb
or
dec
mov
sti
test
pop
pop
mov
push
bound
lahf
lods
jb
cmp
mov
adc
int
mov
stos
fstps
popf
xor
mov
jo
inc
sbb
and
xorl
inc
fs
xchg
stc
cmp
mov
test
es
imul
jp
inc
mov
inc
notb
adc
cmp
pop
int
movsb
push
cmp
jns
jmp
xchg
ss
std
cmp
aam
mov
cs
arpl
cmpsb
cs
lock
loopne
jge
cmpsb
and
int
icebp
dec
pop
jp
pop
mov
xor
add
inc
mov
cs
out
roll
add
cmc
loopne
dec
cmp
lcall
dec
fucom
mov
jle
pusha
push
or
mov
addr16
or
gs
add
pop
jg
adc
out
enter
add
in
and
out
mov
lods
ja
pop
xor
ss
popw
nop
sub
addr16
mov
adcb
lret
inc
sub
fs
test
jbe
jne
push
in
adc
push
pop
mov
stc
mov
mov
jbe
in
pop
outsl
ret
sbb
popf
xchg
in
dec
cmp
int
cmpsl
mov
jne
loope
in
mov
mov
mov
movsb
sahf
mov
insb
dec
test
mov
lock
insb
bound
outsl
stos
cmpsl
dec
fistpl
iret
jg
mov
dec
sbb
jecxz
ret
outsb
jg
pop
das
push
add
adc
add
push
push
leave
cmp
insb
inc
mov
push
std
sar
jmp
pop
hlt
or
into
scas
cmp
mov
pop
mov
fcmove
xchg
pop
or
sbb
pop
mov
nop
mov
popf
pop
inc
xchg
inc
sbb
rcr
push
fisubrs
cmp
inc
vpxor
jmp
mov
lods
aam
daa
ljmp
ret
pop
sub
out
aas
js
jno
or
and
pushw
hlt
and
xor
add
fsubrp
adc
std
lock
negl
fnsave
imul
sub
fwait
push
inc
popa
add
xchg
and
jne
pop
ret
push
sbb
xor
sbb
subl
lods
add
inc
push
inc
nop
or
out
jo
test
lods
lret
xorb
mov
pop
dec
movsb
rcll
jbe
test
push
and
mov
cmp
xor
ds
push
leave
test
cs
jle
fnstcw
adc
inc
jbe
sub
adc
xor
stc
sbb
xorl
jae,pn
jmp
mov
sbb
subl
xchg
mov
mov
aad
lret
cmp
mov
in
inc
es
and
xchg
inc
lcall
lods
dec
xor
pop
es
fisttpll
add
shll
inc
cmp
pop
mov
jno
icebp
lea
sti
and
fstpt
insb
in
push
aaa
and
ficoms
pop
mov
xchg
mov
lcall
repz
leave
cmpsb
in
ljmp
or
daa
push
jae
aad
lcall
fsubl
repnz
jl
outsl
and
mov
loop
xor
inc
clc
mov
fisubl
adc
xor
popa
insb
test
aas
adc
iret
ljmp
jmp
rcr
sti
and
ljmp
fisubl
push
mov
inc
scas
jecxz
mov
pop
push
push
movsb
in
nop
xchg
jle
popa
add
cmp
imul
inc
inc
lods
mov
inc
pop
pop
xor
loopne
push
or
jp
dec
test
xchg
idiv
in
xchg
arpl
or
mov
pop
and
mov
push
jmp
pushf
pop
loope
or
dec
mov
or
shl
xor
mov
mov
subl
in
sub
mov
stos
test
cmp
xor
je
decb
sbb
mov
or
cmp
inc
xor
lret
pop
arpl
mov
addb
aad
pushf
test
lea
jg
push
push
dec
sbb
pop
pop
xchg
insb
cwtl
fcoms
and
jnp
mov
outsb
mov
adc
test
jmp
push
hlt
fstpt
aas
bound
cmpl
xchg
jge
out
loope
or
sub
cli
and
shrb
inc
dec
inc
or
adc
out
and
xchg
sti
pop
mov
and
shrl
call
std
icebp
adc
add
mov
jnp
rcrl
fisttpl
inc
mov
scas
inc
fdivr
sub
jb
jmp
dec
dec
mov
mov
push
and
inc
negb
repz
lret
ficoms
mov
into
inc
outsl
js
out
adc
jmp
aas
popf
dec
movsb
sub
mov
sbb
std
xchg
sbb
cmp
xchg
test
mov
addl
sbb
arpl
clc
lea
lds
scas
pushl
sub
shrl
mov
cld
inc
mov
ja
cmpsb
cmp
push
jns
cmpl
int
jge
and
xorl
push
jl
jmp
lcall
lret
mov
les
shrl
adc
pop
jbe
out
cmp
outsb
mov
test
js
fs
mov
in
leave
add
lcall
ror
push
movsb
lds
fiadds
daa
add
xor
outsl
fwait
rorl
add
inc
inc
and
xchg
mov
pusha
arpl
pop
jo
out
stc
imul
xlat
push
xchg
pop
jne
push
fnsave
inc
cmp
in
std
stc
arpl
lock
call
cmc
add
adc
jne
std
mov
adc
notl
xchg
lahf
roll
and
shrl
rcrb
inc
rolb
push
push
xorl
jl
mov
mov
mov
fsubs
pop
loopne
lret
pop
lods
adc
or
mov
jb
movsl
adc
shrl
nop
sub
fstpt
mov
shrl
dec
cmp
out
push
adc
stos
inc
cmp
in
xlat
cmp
and
ficoms
ficoms
movb
add
fidivl
decb
sub
pop
adc
pop
ss
inc
aaa
cmpsb
mov
aas
sahf
mov
inc
pop
xchg
arpl
xlat
mov
jne
and
and
enter
cld
sub
inc
xor
adc
sbb
das
xchg
mov
dec
and
or
add
ffreep
sub
push
test
lock
sbb
cmp
in
mov
xor
push
lcall
dec
cmp
in
dec
add
mov
mov
es
add
add
mov
negb
hlt
fnstsw
sahf
push
lds
lods
inc
stos
xchg
sahf
sub
adc
cmp
mov
mov
shlb
addr16
pop
push
shrb
addr16
adc
cltd
loope
idivb
xchg
or
aas
or
push
mov
dec
lret
imul
icebp
inc
cmp
mov
xor
cwtl
xor
dec
mov
sub
xor
shll
adc
inc
xor
cmpsl
lahf
pop
dec
loop
adc
in
cld
cmp
or
dec
add
jmp
sub
mov
dec
adc
sbb
lahf
cmp
ds
mov
stos
xchg
mov
jo
mov
shlb
aam
test
loope
pusha
aaa
adc
icebp
sbb
gs
aam
or
pop
push
ret
jge
aas
lcall
dec
and
or
push
add
jecxz
test
jno
dec
add
xchg
mov
es
lahf
int
push
jbe
inc
sub
ja
pop
cmpsl
stos
ljmp
xor
xchg
xor
inc
mov
mov
adc
push
mov
